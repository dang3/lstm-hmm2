fstpt
xor
ret
nop
test
jne
push
mov
test
jp
je
dec
sbb
mov
add
xor
xor
add
test
je
mov
cld
dec
es
je
and
pushl
push
je
jmp
in
dec
lea
sub
ret
or
std
cld
push
decl
shl
sub
lea
push
movl
or
push
call
adc
pop
add
mov
add
dec
jne
pushl
add
loopne
mov
mov
pop
lea
push
lea
or
ret
movsb
dec
mov
pop
add
in
mov
in
or
jmp
push
dec
push
jb
je
arpl
sti
jmp
bound
imul
add
movb
push
jmp
pop
cld
lock
push
mov
add
test
jle
add
subb
push
fnsave
mov
pop
cld
adc
inc
push
dec
push
addr16
xor
out
add
or
jge
pop
sbb
jne
mov
xor
sarl
es
push
mov
mov
fs
mov
add
incl
mov
jb
arpl
mov
inc
adc
pop
popf
jnp
mov
insl
jecxz
fldenv
sub
jg
jmp
out
mov
outsb
add
push
and
dec
and
test
inc
mov
add
cmp
or
aas
std
insl
and
test
cmp
jne
or
pop
insl
pop
in
cmp
and
out
sbb
call
jne
insl
je
out
lsl
sti
push
lret
jl
sbb
shl
push
je
mov
inc
jle
pop
imul
add
xchg
cmp
lret
les
push
xchg
lahf
and
aam
dec
cmpsl
mov
in
fwait
mov
or
rep
and
push
insl
mov
cmp
and
add
fcomip
dec
pop
xchg
hlt
mov
push
add
mov
fidivrs
sub
or
bound
push
mov
cld
xor
push
jmp
test
pop
cmp
mov
or
xor
popf
pop
inc
inc
lds
cli
push
gs
pop
push
inc
call
cmpl
in
mov
add
pop
fistpll
push
pop
aam
pop
rcll
movsl
push
insb
in
jo
call
sub
add
shl
lock
pop
push
push
mov
mov
add
jnp
mov
pop
jmp
mov
cmp
or
inc
mov
sbb
sti
pop
adc
jbe
test
mov
into
or
cmpl
shll
push
lods
pop
or
xchg
push
xchg
lock
and
outsl
in
push
pushl
push
mov
inc
jnp
sub
movsl
bound
dec
aad
pop
call
jecxz
stos
adc
add
cli
cmp
sete
dec
sbb
pop
loopne
push
in
call
sub
roll
imul
add
popa
adc
cmp
fdivrp
push
faddl
rcrl
sbb
jo
call
adc
or
xchg
xor
sbb
roll
out
rolb
add
cs
dec
dec
push
dec
mov
cmpsl
cmp
clc
shl
fs
shlb
lcall
hlt
les
or
in
in
lock
cmc
cmpsb
fwait
inc
add
cmp
push
clc
add
clc
jecxz
fs
dec
mov
lock
pop
cmpsl
insl
fildl
popf
fldl
mov
jl
jmp
pop
hlt
sbb
ds
add
hlt
mov
test
mov
xchg
sbb
inc
add
fwait
or
or
jmp
notl
pusha
cmp
push
adc
int
jae
lea
or
jae
push
stos
fstl
add
insb
mov
jle
mov
inc
movsb
loop
dec
add
pop
and
shrl
pop
cwtl
mov
inc
jl
cltd
incl
xor
nop
push
jmp
dec
ljmp
push
or
push
add
mov
add
lock
push
push
adc
stc
jl
test
xor
jno
subb
adc
roll
pop
in
mov
pop
cmp
jbe
or
fs
mov
test
ret
and
or
xor
cltd
and
sbb
cld
les
les
jg
mov
pop
loopne
test
inc
popf
jo
xor
add
and
int3
imul
and
mov
dec
xchg
add
or
xchg
mov
shlb
add
xor
mov
roll
and
push
mov
sub
jne
je
inc
in
mov
movsl
int
fiaddl
push
jp
popa
inc
push
call
pop
pop
mov
xor
in
xchg
or
and
popf
pushf
pop
inc
adc
pop
adc
bound
mov
pop
mov
mov
cmp
push
and
mov
pushf
push
jl
xchg
mov
fs
mov
leave
ficoml
mov
cmp
push
dec
jno
sbb
xchg
mov
adc
add
adc
xlat
loop
add
mov
sbb
or
sbb
sbb
adc
sbb
add
and
sbb
outsl
pop
push
outsb
inc
nop
adc
leave
push
insb
in
bnd
pushf
mov
es
hlt
or
popa
js
sub
xchg
pop
mov
jmp
mov
lahf
add
and
clc
mov
xchg
sbbb
inc
shll
sbb
xor
scas
loopne
cmp
flds
in
sbb
mov
add
sub
adc
cmp
sub
jae
orb
push
outsb
lock
mov
jb
adc
add
mov
dec
sub
dec
inc
push
lds
ja
dec
mov
pop
hlt
hlt
cmpb
cmpb
or
call
add
dec
cmpl
pusha
mov
or
mov
adc
cmp
lea
mov
mov
mov
lock
imull
inc
mov
out
add
pop
movhps
dec
mov
mov
add
rcrb
push
jmp
sub
fisttps
and
lock
aam
push
shll
cld
mov
test
scas
data16
and
data16
add
xor
pushl
add
mov
sbb
xlat
adc
and
insl
push
popa
rcrl
fnstcw
push
rcrb
incb
fldcw
fists
xor
push
clc
iret
inc
add
repnz
mov
loope
pusha
push
add
push
subb
inc
rorl
int
loop
pusha
and
xor
and
mov
xor
push
inc
push
jg
cmp
pop
mov
pusha
sub
sbb
jp
adc
outsb
sbb
pop
leave
sub
mov
loope
pop
call
adc
faddl
in
or
adc
stos
daa
lcall
pop
xor
pop
aam
test
aam
jns
or
cmp
dec
pushf
push
int3
rolb
add
push
and
mov
shlb
call
cmpsb
pusha
pop
add
fsubrl
xchg
inc
fmull
xor
fcom
sar
adc
enter
mov
dec
jb
add
jo
hlt
pop
dec
loopne
pushl
push
in
loopne
sub
rorb
push
ret
sbb
jno
stos
rolb
lock
rcrb
sub
push
xor
and
or
add
repnz
and
pusha
sub
ret
leave
and
test
ret
add
xor
mov
test
movsl
xor
adcb
xor
das
or
adcb
cmc
lock
popf
and
cmp
daa
cmp
clc
pop
and
add
mov
xchg
ds
arpl
jmp
adc
lea
or
mov
or
xor
mov
bnd
out
test
ret
loopne
jmp
fimuls
loopne
sbb
and
push
or
pop
imul
mov
dec
aad
fmull
test
adc
jmp
mov
and
in
in
jmp
pushf
mov
daa
je
call
push
out
lcall
orps
pushf
out
adc
mov
cmpsb
sbb
lcall
cwtl
mov
imul
mov
pop
inc
push
push
mov
push
cmp
popf
push
test
orb
push
notb
jns
add
pop
cmp
jl
fcompl
xchg
add
fmuls
add
add
arpl
inc
xor
jecxz
fsubrs
call
aam
fsubs
pop
and
or
cs
add
aad
jmp
int3
in
pop
pop
pop
adc
push
call
subl
or
cmp
mov
or
dec
adc
fsub
pusha
aam
lret
lods
stos
sbb
sar
rorb
inc
cmp
hlt
fisubl
outsl
fildl
adc
pop
sti
mov
mov
xchg
xor
js
sbb
pushf
and
sti
push
ret
add
rcl
mov
inc
test
cli
pop
sub
push
add
ss
sub
lea
pop
cmp
mov
adc
pop
xchg
adc
nop
and
sbb
fmuls
add
cmp
daa
call
inc
add
clc
mov
fsubrl
hlt
or
add
adc
das
xchg
aad
sahf
add
jo
test
and
push
fiaddl
pop
inc
mov
add
inc
cmpsl
hlt
jnp
pop
and
jecxz
adc
cmp
subl
lds
addl
outsb
mov
and
test
push
push
fisttps
push
push
and
imul
dec
jne
mov
pop
les
cmpsl
xchg
arpl
pop
pop
jb
cmp
jmp
clc
inc
xor
adc
xchg
xorb
adc
and
push
xchg
cmc
fstpt
cmp
int3
leave
adc
dec
rcll
xchg
loop
push
sbb
rorl
outsb
loop
ss
mov
mov
push
loopne
push
loop
popa
ljmp
mov
adc
shl
loopne
mov
adc
outsb
adc
cmp
jo
cltd
or
jecxz
cld
and
mov
cmc
mov
jge
sbb
or
pop
out
enter
sbb
je
repz
dec
popf
out
aaa
xchg
loop
in
ljmp
lcall
mov
push
push
mov
push
mov
or
lods
push
ss
mov
inc
cld
pop
sub
add
push
and
stos
pop
pop
loop
fs
xor
sbb
lods
xor
aam
adc
cmp
adc
mov
cld
jo
inc
push
in
ljmp
sbb
inc
es
in
mov
leave
sbb
inc
sbb
in
imul
add
add
mov
push
push
sub
add
inc
dec
or
or
push
adc
xchg
pop
and
fsub
fsub
jbe
enter
in
add
clc
or
xor
cmpsb
or
loopne
or
or
adc
lods
add
shll
dec
inc
lods
ja
jl
rorl
sbb
insl
mov
hlt
add
sub
sbb
pop
rcl
jp
jo
push
sbb
xchg
test
adc
aaa
js
je
inc
or
test
pushf
push
jecxz
xchg
testl
clc
cs
mov
sbb
cltd
add
add
inc
add
mov
loopne
jbe
shll
dec
ret
mov
cmp
int
bound
rcr
pop
sub
and
sbb
movsl
push
fstl
add
mov
test
pop
or
ret
and
pop
push
adc
shlb
and
outsb
pop
mov
popa
mov
xchg
add
enter
loopne
dec
jnp
cmpb
add
push
lods
cmc
sarb
clc
stc
adc
sbb
push
inc
es
jo
jl
jnp
stos
mov
nop
sub
jle
inc
adcl
hlt
fs
add
mov
xor
in
adc
cmpsb
mov
in
push
push
lcall
sarl
add
out
push
xor
mov
test
adc
fists
push
lret
ds
pop
movsl
pop
shll
add
add
inc
in
faddl
dec
sbb
in
mov
or
inc
xlat
inc
mov
push
stc
cmp
clc
pushf
and
in
mov
pop
in
adc
sbb
lds
add
aaa
dec
shl
add
push
add
adcb
jb
adc
jmp
lock
or
mov
xor
lret
clc
rclb
cmp
verw
xchg
and
sahf
pop
jne
xchg
inc
push
and
js
add
jo
push
sbb
je
or
dec
pop
pop
rorl
repnz
pop
xchg
mov
mov
sbbl
addb
mov
cmp
jne
arpl
and
mov
call
sub
call
push
test
jmp
cld
jmp
adcl
rolb
jge
cmp
add
add
xor
or
xchg
cmp
push
pusha
fs
pop
and
xor
loope
sbb
fiadds
adc
adc
jle
inc
push
inc
aaa
or
mov
sbb
or
lea
test
and
cmp
mov
inc
or
and
mov
ret
xor
adc
fld1
sub
inc
imul
add
data16
mov
pop
sbb
enter
xor
fwait
adc
xor
fcomp
add
cmp
inc
cmp
setae
movsb
cltd
int3
int3
add
in
xchg
mov
pop
cmp
inc
lcall
adc
fcmovnu
bound
shlb
inc
test
mov
pop
rcrl
mov
fsubl
adc
call
test
je
fchs
fcompl
orb
adc
stos
adc
and
addr16
xchg
mov
push
add
or
push
mov
daa
mov
imul
test
add
inc
xchg
cli
add
sbb
adc
inc
and
pop
sub
inc
adcb
pop
movsb
lcall
xor
pop
mov
nop
add
fsubrl
cmc
and
push
repnz
mov
add
in
adc
inc
pop
dec
cmp
ja
jno
add
ret
mov
daa
fadd
add
add
add
inc
loopne
adc
inc
sbbl
and
push
add
pop
mov
test
sbb
inc
add
repnz
inc
loop
cmc
adc
setbe
test
clc
loopne
std
xor
mov
int3
hlt
add
and
pop
ja
fistpll
xor
popf
clc
outsb
cmp
add
sub
mov
icebp
jecxz
cli
mov
js
mov
incb
push
or
pop
mov
std
add
adc
xchg
hlt
push
mov
bound
int3
hlt
jne
mov
cmc
or
adc
jo
and
lea
cmp
sarl
xor
clc
and
nop
in
fildl
cmp
lods
faddl
ss
fsubl
mov
or
inc
jge
fsubrl
jbe
in
nop
pop
scas
and
int
mov
addr16
push
or
pop
or
xchg
dec
mov
cmpsl
jge
mov
sti
loopne
sbb
jno
jecxz
enter
add
and
and
pop
inc
add
lods
fs
in
push
cmpsb
or
mov
lods
xor
in
je
mov
popa
xor
push
insb
jge
bound
and
aam
pop
ret
push
sbb
shll
add
daa
push
or
and
fs
popa
or
lods
jnp
ret
scas
test
adc
add
cmc
pusha
xchg
xchg
push
cmp
loopne
cmp
test
rolb
out
call
sbb
mov
enter
push
push
enter
out
xor
and
push
inc
arpl
mov
adc
sub
jno,pt
int3
mov
in
int3
push
popf
sub
push
adc
cltd
ffree
inc
inc
or
or
push
addr16
pop
stos
or
or
stos
loopne
mov
aaa
adc
sub
sbb
push
adc
xchg
popa
add
call
call
xchg
data16
ret
shll
add
mov
jns
xchg
loopne
inc
and
xchg
push
int3
frstor
and
inc
push
mov
fmuls
push
and
lret
adc
sbb
and
jb
js
add
jae
mov
popf
fdivl
or
add
scas
loopne
loop
addr16
aam
cmpsb
sub
mov
lods
adcl
lcall
mov
sbb
in
sysexit
jle
enter
pop
pop
inc
ljmp
or
add
jbe
addr16
nop
xor
or
pop
cmp
jg
mov
mov
add
stc
movsl
les
push
xchg
pop
xor
lock
or
add
inc
les
test
sbb
inc
sub
loopne
mov
dec
push
repnz
mov
inc
xorl
sub
jge
imul
daa
push
repz
jmp
test
pushf
ss
or
sub
pop
test
lea
andl
mov
push
cld
cld
mov
push
insb
lea
or
repnz
addl
inc
test
push
xor
aas
push
mov
call
mov
push
fidivrs
adc
fwait
jmp
aam
and
call
and
lds
xchg
das
mov
push
pop
ret
and
push
sbb
cs
sub
rolb
jp
adc
sbb
ljmp
cmp
rcl
adcl
pop
mov
lock
xchg
and
fs
lock
clc
push
sbb
add
sbb
xor
xchg
dec
sub
add
mov
or
inc
xor
add
cmp
push
xor
adc
dec
and
add
mov
dec
xchg
push
pushf
xchg
sub
jl
dec
adc
pop
fs
or
xchg
cmc
add
cmpsb
mov
test
sbb
jmp
push
pop
sbb
push
les
pop
addr16
cs
push
push
mov
or
xor
fadds
jnp
cmc
pop
inc
jne
lock
in
dec
ljmp
imul
mov
pop
test
rorb
clc
or
popa
in
out
mov
push
mov
jo
cmp
std
push
imul
add
stos
mov
or
sarb
xor
lock
lcall
ret
fstl
sbb
test
or
sbb
sbb
or
pop
jmp
in
push
cmc
mov
inc
mov
imul
add
add
cli
inc
fildl
fstpl
fldl
lock
add
mov
std
push
in
sub
cmp
pushf
and
addr16
addl
add
cld
and
lock
mov
add
lods
xchg
mov
pop
cmp
out
movsl
pop
dec
jmp
sbb
add
or
jge
je
push
add
call
out
adc
dec
inc
fisttpl
push
mov
movsb
xchg
andb
adc
imul
aaa
xor
sub
ja
jbe
call
pop
shlb
push
pop
mov
movsb
jnp
cmp
cmp
sbb
jnp
and
mov
nop
sbb
cmp
push
jg,pt
call
roll
or
leave
inc
sti
jg
std
addb
insl
inc
sbbl
adc
arpl
fcomps
mov
mov
inc
shrl
insl
xchg
or
adc
mov
or
leave
adc
xlat
push
shlb
aaa
dec
jecxz
stos
hlt
add
adc
shl
iret
push
add
adc
scas
jl
mov
sbbl
and
or
add
clc
xor
insl
and
lock
and
cmp
inc
fwait
test
insl
shlb
test
add
adc
lock
mov
add
dec
lret
aad
or
jo
and
clc
mov
inc
inc
cltd
jo
dec
dec
add
pop
jb
inc
inc
mov
xor
jle
fistpl
mov
loopne
jmp
dec
cmp
mov
or
in
pop
sbb
add
aam
sbb
xor
mov
pop
leave
cld
dec
jo
xor
or
clc
in
inc
xor
daa
pop
clc
scas
inc
dec
mov
dec
lock
or
push
int
and
sub
cmp
xchg
sub
sub
clc
and
cmp
lock
xchg
popa
test
mov
mov
test
add
cmp
data16
lock
out
sub
cwtl
mov
add
or
or
adc
pop
add
or
sbb
push
sub
mov
adc
pop
insb
or
or
cmp
xchg
and
loope
adc
subl
and
sub
stc
push
movsl
loopne
pop
mov
mov
lods
es
test
sub
xchg
push
cmp
or
jmp
loope
inc
das
or
leave
sbb
insb
jle
xor
mov
xchg
ja
mov
pop
faddl
stos
pop
mov
roll
and
sub
mov
aaa
pop
add
movsb
pop
in
inc
ljmp
aam
push
xchg
sbb
clc
add
mov
lock
and
call
movsb
in
and
push
xor
or
faddl
loopne
pushf
push
imul
pop
in
dec
call
in
and
jnp
call
ja
and
call
inc
in
push
aaa
icebp
sub
inc
push
jo
adc
imul
cmp
je
pop
cmpl
jnp
ret
sbb
push
xchg
lds
enter
dec
jno
or
cmpsl
add
push
and
movsb
mov
cmc
xor
ja
pop
lock
in
call
test
in
cmpsb
pop
jbe
call
repnz
mov
jnp
jns
adcb
jno
test
leave
and
dec
mov
dec
inc
xor
or
fs
pop
xor
sub
jnp
test
ja
push
jmp
mov
inc
in
and
in
mov
pushl
or
test
sub
popa
pusha
xchg
mov
xor
jne
das
in
iret
dec
xchg
test
cmpsb
xchg
lock
js
outsl
cwtl
add
sbbb
xchg
mov
test
xor
mov
jg
leave
push
xor
lea
push
add
fsubrl
shlb
xor
pop
sbb
aad
push
stc
aaa
mov
push
loopne
inc
add
pop
imul
je
loop
fidivl
fmuls
iret
aaa
jo
mov
out
xchg
adc
inc
mov
scas
mov
push
pop
push
movsl
adc
mov
push
adc
xor
pop
mov
push
mov
and
pop
hlt
or
mov
sbb
adc
daa
add
adcb
cltd
jne
or
xlat
adc
cmp
pushf
ljmp
adc
add
add
push
hlt
cmp
stos
add
add
add
inc
jo
add
lock
and
xchg
aam
sbb
and
adc
pop
mov
ficoml
lea
mov
add
into
pop
pop
cmpsb
fistpl
push
ret
xchg
jo
fstps
add
add
std
loopne
dec
rorb
push
sub
mov
jg
rcrl
adc
mov
sub
in
ss
xor
xor
add
inc
nop
arpl
lods
mov
or
out
movsl
inc
xchg
orb
adc
mov
xor
inc
pop
ss
insl
adcb
jmp
pop
ret
sbb
repnz
and
pop
arpl
ret
push
adcb
add
dec
or
sbbb
outsl
outsl
and
sub
in
push
and
movsb
adc
jno
enter
lock
fsubl
add
decb
and
icebp
inc
out
cmpb
test
pop
xor
mov
mov
push
addr16
xorb
cmp
test
adc
adc
pop
les
sub
mov
test
add
call
popa
mov
sbb
mov
mov
enter
mov
lods
cwtl
mov
add
cmp
xchg
or
inc
leave
aam
push
dec
enter
test
fisttps
or
or
cli
fcomip
invd
mov
xor
cwtl
in
addl
xor
stc
xor
mov
loopne
push
jp
test
in
lods
repnz
sub
adcb
adc
test
add
pop
adc
mov
inc
adc
pop
cmp
inc
adc
push
push
leave
sbb
add
lea
xchg
sub
pusha
aad
adc
inc
inc
cs
clc
add
add
mov
fs
shl
stos
push
dec
iret
icebp
cmpl
mov
cs
and
mov
and
andb
mov
xor
mov
test
mov
imul
test
pop
jge
adc
adc
in
add
int
xor
add
lock
mov
in
add
repz
sbb
add
sbb
test
into
dec
push
inc
xor
inc
dec
or
adc
xchg
cmp
cld
mov
adc
fstl
mov
mov
outsl
cld
or
adc
jns
adc
and
jnp
add
sbbl
orb
sub
mov
dec
movsl
xchg
in
or
bound
cmpsl
push
xor
cs
push
icebp
mov
dec
sahf
or
sub
and
fsubr
jge
mov
nop
inc
xlat
lock
xchg
sub
inc
inc
push
in
fdivl
pop
xor
roll
or
add
dec
lock
cmp
lock
ret
push
push
or
inc
add
sbb
push
add
push
rcrl
push
push
lea
int3
icebp
pop
cmp
add
rep
add
dec
sub
lahf
mov
fs
hlt
mov
adc
enter
lock
jg
in
adc
cmpl
leave
dec
leave
in
dec
xchg
in
push
enter
shlb
push
rcrb
clc
or
jge
xor
pop
repz
cmpb
sub
xchg
ja
adc
dec
popa
pop
sbb
rorb
push
jo
and
adc
lods
lods
pop
push
and
or
adc
pop
xchg
pop
or
mov
leave
adc
test
add
mov
leave
lahf
and
in
fcomps
inc
and
movsb
add
add
fcoml
ret
sub
add
pop
or
repz
mov
lcall
push
test
pop
cmp
dec
sub
mov
dec
movl
pusha
add
mov
hlt
pop
add
push
es
test
ficompl
in
xor
mov
lds
xchg
outsl
pop
add
add
clc
xor
fwait
xchg
mov
inc
and
or
push
inc
add
xchg
xchg
shll
add
adc
or
lret
lock
subl
daa
push
xchg
int
nop
in
and
jns
loopne
pop
or
sub
or
xchg
jl
ja
test
hlt
rorl
ja
push
push
or
sti
adc
xchg
rol
and
daa
jne
insl
test
push
fadds
add
push
lds
sbb
movsb
lea
jecxz
push
sub
lret
inc
pusha
and
add
add
pop
shlb
arpl
lds
add
test
cmc
stos
cmpsb
adc
add
mov
adc
adc
add
or
nop
push
xlat
test
add
adc
mov
pop
cmp
cmp
and
ret
or
mov
ds
and
or
inc
popa
and
icebp
pusha
adc
jnp
jne
jno
popf
pop
or
int
lahf
mov
add
inc
call
pop
and
add
int
lret
lock
enter
in
push
add
es
sub
jle
add
bound
adc
jl
pop
add
and
icebp
add
fmull
ds
mov
sbb
push
mov
xchg
xchg
cmpsl
or
stos
add
or
int
imul
push
loopne
cld
add
loopne
push
sub
ss
pop
fcomp
push
aam
loopne
insl
aam
and
mov
inc
or
int3
pop
push
jne
outsl
enter
cmp
sbbb
fsubrl
jnp
mov
and
leave
in
and
inc
add
xor
add
xchg
push
and
xor
and
mov
add
or
xor
outsb
daa
adc
mov
adc
or
xor
addr16
add
or
mov
mov
lea
inc
out
inc
test
and
and
add
adc
dec
popf
mov
nop
adc
mov
ret
daa
xchg
sbb
cmpl
test
add
and
clc
iret
rolb
in
es
nop
mov
push
ret
xor
popa
adc
test
xlat
add
pop
lock
add
dec
add
push
sbb
jmp
sbb
shlb
add
test
mov
aas
test
ret
lds
and
cmpl
xor
sbb
ss
add
fdivs
lods
cltd
pop
mov
or
sub
sahf
xchg
add
jg
pushl
mov
imul
pop
insb
push
add
adc
adc
popa
stos
inc
adc
sub
aas
mov
subl
or
insl
aas
ljmp
fwait
es
push
add
inc
add
xor
pushf
movsl
fdivl
sbb
add
adc
mov
and
fwait
jne
daa
insl
mov
loopne
fsubr
and
enter
pop
cmovnp
aam
push
cmp
xor
lea
stc
test
and
adc
xlat
pop
test
leave
jno
aam
xor
loopne
fsubr
mov
loop
scas
jecxz
xor
add
xchg
inc
mov
dec
sub
and
add
jecxz
nop
lock
fld
add
rol
xor
loopne
mov
push
add
lea
faddl
sbb
icebp
decl
jp
adc
stc
or
sbb
lods
fadds
hlt
fisubrl
add
inc
insl
and
mov
in
and
ss
and
sbb
enter
mov
lods
pop
inc
or
pop
or
pop
sar
or
pushf
gs
loopne
push
adc
pop
mov
jge
lock
lods
clc
adcl
push
add
sub
dec
inc
jmp
inc
test
mov
and
jmp
xor
ret
aam
aam
aam
mov
movsb
add
ljmp
lds
push
test
fsubrl
ss
xchg
les
aas
loope
popa
cmpsb
xor
inc
push
adc
adc
add
cltd
dec
addr16
sahf
xchg
sub
dec
popa
movsl
addr16
dec
xchg
push
fmull
pusha
test
fdivrs
sub
adc
or
push
add
add
std
arpl
push
pusha
nop
xchg
mov
and
loopne
add
push
leave
xor
mov
jne
sbb
mov
addr16
pop
dec
mov
sub
adc
cmp
push
pushf
xor
roll
test
sub
stc
stos
xor
or
mov
pop
aam
jg
push
mov
push
mov
dec
leave
or
aaa
sbb
add
loope
sbb
xor
call
jns
insb
add
out
hlt
xchg
lcall
xchg
add
jecxz
dec
scas
ss
jg
sub
ret
sbbb
stos
cmc
mov
dec
pushf
inc
sbbb
adc
adc
add
mov
inc
add
mov
add
push
push
test
cmp
xor
dec
pop
push
mov
dec
lock
push
inc
xor
mov
cmp
inc
es
sbb
adcl
inc
push
test
add
jmp
pop
lea
or
repz
sub
xchg
adc
adc
std
or
pop
mov
or
push
mull
and
push
sub
stos
xor
mov
dec
pop
mov
mov
push
lods
hlt
lret
add
sahf
sub
scas
sub
popf
pop
int
nop
add
sarb
mov
sbbl
add
xor
or
or
rorb
jne
push
enter
mov
test
xchg
cwtl
sub
or
add
mov
int
lret
adc
or
push
and
rolb
push
pop
jmp
out
add
adc
xor
loope
push
call
mov
insl
mov
push
movl
jnp
pop
sub
es
mov
inc
test
inc
pushf
in
mov
fisttps
pop
sub
and
std
sbb
in
test
iret
jne
xchg
mov
test
mov
adc
pop
pop
xor
and
mov
jmp
push
pusha
or
enter
dec
dec
lahf
loopne
dec
inc
xchg
dec
stc
pop
cmp
sub
push
movsl
sarl
mov
add
add
mov
mov
imul
inc
or
or
adc
pop
sbb
rol
jecxz
adc
cmp
in
fwait
arpl
dec
es
ds
rcll
daa
test
test
push
test
adc
nop
sbb
or
sbb
fbld
push
xor
sub
push
lcall
add
daa
rcrb
mov
add
xor
rcrb
push
pop
inc
inc
xor
sbb
subl
inc
test
loop
lds
sbb
ret
sti
sbb
test
adc
arpl
sub
mov
clc
nop
push
icebp
stos
shlb
adc
adc
mov
cltd
cmp
mov
and
add
adc
inc
add
xchg
pop
cmp
subl
xor
fs
loope
adcb
pop
or
sub
push
push
js
jl
pop
mov
and
mov
xor
add
mov
test
in
dec
es
mov
dec
adc
add
jns
xorl
cs
cmpsb
adc
nop
or
and
or
mov
sbb
sbb
or
inc
add
stos
mov
xor
icebp
xchg
in
push
pop
pop
and
in
pusha
pop
push
fwait
cmp
adc
pop
mov
dec
lock
in
add
push
loopne
or
adc
pusha
adc
adc
jno
pop
test
lret
rolb
lea
jo
andl
sbb
ret
js
loop
clc
movsl
rcr
rcrb
add
sbbb
add
inc
adcb
lahf
or
cwtl
push
dec
xor
mov
cmp
adc
pop
xor
sub
loopne
inc
dec
dec
dec
iret
loopne
call
loope
test
adc
sbb
or
push
mov
orb
mov
test
and
cmp
inc
push
dec
push
fsubrs
xor
movsl
test
push
adc
jg
fld
add
sbb
and
aas
rcl
xchg
cmp
cld
lock
bound
adc
or
cli
xor
add
popf
sbb
cmp
leave
or
mov
add
jge
lock
rol
dec
loope
imul
inc
add
call
inc
mov
lcall
sbb
mov
adc
dec
es
outsl
stc
mov
stc
mov
mov
mov
cmp
sahf
cwtl
lcall
cld
lock
push
or
push
out
cmp
aam
and
icebp
push
mov
add
int3
jns
les
lods
adc
dec
pop
cs
jecxz
movsb
in
mov
enter
testl
add
cld
aad
dec
cmp
inc
push
aam
adc
inc
dec
dec
sbb
xor
daa
pushf
mov
and
adc
add
fildl
pop
ret
inc
movsl
fsubl
in
xor
xchg
movsl
mov
xchg
sub
movl
mov
es
xor
fsubs
mov
sbb
inc
inc
xchg
pop
add
ret
mov
stos
cmp
lahf
dec
and
xor
mov
mov
imul
in
adc
mov
or
cltd
push
adc
sbbb
fdivl
insl
bound
fildl
and
xchg
add
push
add
jo
push
int3
aaa
int3
jne
adc
fadds
mov
popf
xchg
mov
movsl
xchg
lahf
pop
add
cmc
xlat
enter
or
insl
mov
add
fcoml
or
stc
lock
adc
xchg
sarl
dec
xchg
bound
or
cld
ljmp
rol
or
imul
or
bound
mov
in
sub
inc
mov
insb
dec
and
cld
in
add
mov
enter
inc
or
rorb
push
ret
incb
loop
dec
mov
sbb
roll
mov
mov
sbb
ss
comiss
add
push
pusha
jecxz
std
xor
mov
adc
fnsave
add
sbb
jp
fists
sbb
movb
sbb
xor
dec
add
xchg
stos
mov
call
pop
mov
mov
test
inc
ret
mov
addr16
mov
add
xchg
pop
add
push
loopne
pop
in
lods
or
xor
fcomp
jo
mov
int3
mov
enter
rol
je
push
in
jge
test
and
mov
stos
ja
clc
pushf
ret
push
push
ret
inc
pop
cwtl
sub
hlt
mov
fistpl
sahf
test
out
pusha
pop
test
clc
test
jl
test
fdivl
mov
fisttps
test
js
scas
push
leave
lea
jne
sub
imul
fdivs
xor
orl
stos
push
inc
cld
cltd
cmp
stos
nop
in
test
insb
jecxz
or
xchg
and
sti
sub
push
nop
movl
pop
nop
or
pushf
pushf
push
inc
mov
adc
dec
jmp
xchg
mov
and
add
movsb
cs
cmp
and
add
cmp
in
push
push
in
mov
or
add
ret
push
pop
insl
adc
cs
lods
or
leave
inc
or
call
jne
push
dec
nop
add
push
lds
mov
add
les
jno
mov
jne
in
inc
daa
btc
out
lcall
sub
push
out
cmpsl
mov
push
inc
jp
push
jl
out
call
pop
dec
outsb
push
sub
repz
cmp
mov
scas
sub
ljmp
movsb
adc
sub
push
push
mov
fadds
dec
inc
iret
dec
xchg
inc
add
cmpsl
or
sbb
xor
push
sar
shlb
inc
fcom
fldl
shrb
xchg
das
lock
adc
mov
cmp
or
and
and
fsubs
and
dec
les
rolb
lret
outsl
add
cmp
faddl
xor
nop
or
std
push
inc
inc
add
mov
xchg
or
loopne
sbb
mov
dec
inc
test
pusha
jo
aaa
in
rorb
andb
and
xchg
addr16
and
or
mov
aas
mov
mov
push
add
sarl
in
loopne
dec
sbb
jo
sub
stos
xchg
xchg
push
call
dec
stos
push
dec
ror
in
xchg
insl
push
cltd
pop
adc
sub
inc
enter
fiadds
repz
gs
test
add
scas
mov
adc
push
hlt
adc
jae
dec
and
addb
mov
adc
in
and
mov
ret
in
xor
push
and
xor
jge
fcmovnbe
pop
push
and
mov
movsb
les
addb
cs
add
add
pop
mov
mov
shl
mull
add
and
sbbb
icebp
cmc
bound
add
pop
jle
mov
sarb
pusha
pop
push
adcl
mov
or
aam
and
adc
aas
push
xlat
sub
movsb
fistl
sbb
clc
inc
sub
add
dec
push
sub
addl
adc
enter
jne
mov
addb
mov
inc
mov
call
adc
dec
cld
xchg
test
push
clc
lods
orb
stc
mov
loope
mov
fdivs
stc
sub
cli
cmp
in
push
mov
loopne
std
push
xchg
add
lahf
inc
push
xor
xorb
repz
jb
pusha
adc
dec
lcall
xor
bound
sar
mov
in
cmpb
je
fwait
pop
xor
lea
test
stc
and
adc
mov
clc
xchg
cmp
jl
int
lock
mov
test
push
js
movsb
xchg
loopne
ret
lds
xchg
shrb
xchg
mov
adc
fsubrl
dec
push
cmp
sub
dec
lcall
in
ss
clc
cmp
aad
mov
das
cmp
loop
dec
pop
adc
cmovo
mov
adc
mov
mov
es
and
out
add
xchg
loope
sub
lret
or
push
or
add
sub
inc
xor
sub
and
xchg
bound
sbb
xor
int3
add
jae
ret
mov
in
sbb
sbb
pop
and
sub
sbb
mov
inc
pop
into
xchg
pop
rcll
mov
pushf
mov
scas
jecxz
pusha
add
push
push
add
add
out
adc
and
sbb
adc
addb
sbbb
faddl
add
faddl
add
dec
aad
dec
ds
sbb
add
imul
adc
sar
jmp
push
and
or
mov
inc
loopne
add
mov
popl
add
fnstenv
add
sub
add
sbb
fcompl
add
adc
and
les
lods
inc
int
mov
pusha
shlb
xchg
push
or
push
cmp
adc
inc
mov
inc
add
and
in
inc
add
roll
lock
xor
or
add
clc
or
xor
pop
aam
shll
pop
xor
jle
movsb
add
jg
inc
push
and
addb
xchg
xor
out
mov
sub
pop
insl
mov
jo
add
sbb
pop
jg
add
rcrb
xchg
shlb
inc
xchg
in
xor
ror
decl
and
mov
inc
xchg
or
cltd
repz
add
inc
or
mov
or
subl
jbe
fldl
fmull
mov
out
and
fmull
mov
push
sub
mov
cltd
mov
mov
mov
mov
push
mov
rclb
inc
lcall
cmpsb
les
mov
popa
das
mov
cmp
dec
pop
sub
testl
sub
push
lock
pop
les
mov
fmull
lods
pop
lods
dec
push
adc
cmp
mov
in
mov
mov
data16
mov
add
pop
fcoms
addr16
dec
mov
aaa
aas
sbbl
sbb
mov
mov
push
inc
mov
mov
cwtl
push
scas
sbb
adc
nop
test
dec
rcll
test
loopne
hlt
fldl
xor
negl
or
loop
mov
aam
pop
xlat
pop
loope
xchg
add
sbb
inc
sbb
mov
sbb
in
movsl
pop
stos
mov
inc
add
adc
adc
mov
lods
adc
xchg
mov
leave
imull
lea
pop
xor
das
mov
xor
or
mov
adc
xchg
sub
pop
incb
push
and
stc
adc
pop
shrb
shlb
adc
sub
inc
inc
add
js
movsb
xorb
add
aad
orb
add
mov
add
sub
lret
sbb
adc
add
push
leave
mov
fcoms
test
inc
dec
test
dec
movsb
ret
dec
add
mov
pop
or
adc
adc
add
dec
adc
add
and
dec
xlat
bound
lock
xor
imul
mov
stos
inc
sbb
in
dec
cmpsb
cmp
pop
pop
and
mov
xlat
adc
enter
push
dec
dec
add
adcb
sub
mov
std
loope
sbb
cltd
stos
fs
push
in
xchg
mov
adc
out
fwait
test
inc
shll
add
sbb
or
movsl
outsb
imul
push
or
stc
pop
cs
xor
inc
sbb
add
dec
sub
adc
dec
sub
nop
push
jl
mov
mov
ss
sbb
adc
sub
aad
popa
inc
rcll
dec
xorl
sti
popa
or
sbb
sub
mov
sbb
fldl
xchg
enter
in
and
jbe
and
and
inc
and
xor
or
subl
imul
inc
test
lock
imul
je
mov
add
nop
pop
pop
sti
pop
mov
and
bound
inc
jle
and
add
xor
and
pop
add
test
add
xor
xchg
adc
pop
int
cld
gs
test
xchg
jmp
adcb
pop
mov
push
push
mov
cmp
pop
sub
push
or
dec
stos
jns
andb
inc
or
xor
push
mov
xor
arpl
ret
dec
lods
sbb
mov
movsb
dec
mov
jle
mov
or
add
and
xchg
repnz
loopne
cmp
mov
add
sbb
jns
xlat
loopne
movl
nop
call
sub
int3
xchg
movsb
hlt
int3
add
test
movsl
dec
mov
pop
add
cmpsb
sub
fcoml
push
adc
loope
outsl
xor
lock
les
adc
lock
shl
xor
inc
int3
add
add
ret
inc
xor
sub
rcrb
sarb
jns
mov
cmp
rolb
ljmp
dec
xor
sub
and
or
cmp
adc
add
jb
mov
jo
test
repz
and
sbb
add
scas
pusha
push
out
and
add
cld
inc
das
loop
outsl
dec
xchg
test
cld
add
sbb
mov
adc
add
nop
cs
cmpl
sub
lds
stos
push
mov
sub
popf
inc
loopne
pop
in
daa
dec
inc
dec
int
or
adc
stos
sbb
fldln2
sub
dec
mov
and
jnp
and
dec
xchg
push
dec
and
jge
mov
or
cs
mov
fs
loopne
nop
dec
shlb
test
sahf
adc
test
leave
add
push
stc
add
mov
push
inc
hlt
aaa
data16
add
or
adc
insb
xchg
mov
pushf
dec
pusha
inc
and
test
rcr
add
test
xchg
jb
ljmp
and
pusha
adc
pop
inc
movsb
and
xlat
std
add
add
xor
ret
ret
inc
dec
lcall
rolb
test
sub
add
imul
mov
shll
test
les
push
mov
xor
lcall
out
fsubl
push
jo
in
fdivl
pop
rol
mov
pusha
sbb
les
icebp
fdivl
cs
and
mov
cmp
adc
faddl
pop
sbb
ja
push
addb
mov
inc
push
das
push
lock
mov
add
pop
xchg
mov
loopne
push
add
aaa
lock
sbb
pop
daa
movsl
jmp
and
xchg
xor
add
xchg
rorb
loope
jnp
sbb
ret
or
pop
in
xchg
cld
adc
sar
jecxz
dec
push
addb
sub
shl
repz
or
bound
popa
or
xchg
mov
sbb
mov
and
pop
cs
lret
cmp
sub
lret
in
mov
dec
lea
add
mov
or
inc
add
inc
and
shll
addb
mov
movl
scas
ret
push
mov
or
and
scas
mov
pop
not
sti
bswap
mov
ss
add
or
mov
mov
ret
arpl
add
je
adc
xchg
fdivl
lds
jl
movl
lods
ret
xor
mov
sarb
push
mov
lret
sub
jns
shl
inc
pop
inc
push
les
nop
add
pop
xchg
fs
ret
mov
cmpsl
and
lret
out
roll
add
add
mov
mov
add
imul
mov
lods
sbb
sbb
addb
fcmovne
jne
pop
pop
fstpl
pop
push
je
mov
add
mov
test
or
ja
loope
enter
mov
es
loopne
push
mov
mov
inc
je
and
push
cld
or
sub
je
inc
mov
pop
xor
pop
in
adc
inc
lods
gs
or
pop
mov
push
mov
pop
std
sub
cmp
push
je
inc
jno
insb
leave
das
aaa
cld
pop
or
mov
mov
pop
out
jne
test
mov
xchg
xor
and
jne
inc
jo
das
adc
int
dec
pop
push
add
xchg
testb
je
lods
add
or
arpl
clc
pop
mov
pop
loope
fisubrs
je
out
or
push
insl
outsl
mull
or
loope
mov
sub
popl
in
sub
push
mov
out
push
nop
push
push
xor
mov
aam
mov
push
lea
fldl
fcompl
pop
xor
fdiv
jnp
lock
cld
ljmp
mov
ja
push
xchg
fstpl
cltd
and
fdivs
fstp
dec
in
mov
into
sbb
mov
sbb
sbb
add
inc
clc
fldl
jns
roll
or
fstpl
push
adc
movsb
sbb
ret
nopl
addr16
mov
jle
sub
mov
push
je
loop
movb
push
dec
je
dec
jne
xor
jmp
or
add
or
outsb
add
lcall
addr16
xor
ja
or
into
cmp
pop
and
fldt
add
js
xchg
push
mov
sarb
fisttpl
jo
inc
and
sarb
popl
sub
xor
jl
or
add
jmp
sbb
pop
les
fdivrp
mov
mov
jne
data16
inc
add
lods
fldl
dec
jmp
push
add
cwtl
jmp
jle
jae
sbb
adc
neg
sbb
addl
pop
sub
pusha
push
lea
jb
add
call
cmpsl
fldl
scas
push
or
shld
push
cs
pop
xchg
shr
in
push
and
out
ret
loopne
xor
inc
ss
call
push
inc
and
push
inc
pusha
mov
push
sbb
mov
mov
js
popa
mov
dec
push
pop
ret
pop
push
add
inc
sbb
sbb
rorl
mov
ds
cmp
pop
mov
dec
sbb
push
inc
xchg
push
jecxz
out
fs
insb
sub
push
mov
cmp
adc
cmp
mov
jne
popa
loopne
bound
push
mov
divb
xchg
mov
push
adc
dec
dec
pop
cmpsl
incl
jno
fimuls
jb
pop
shll
push
and
aam
mov
aam
pop
add
pusha
cltd
mov
sub
xlat
fchs
jo
push
test
add
dec
or
sub
xor
loop
mov
push
add
rorl
cmpl
ficoms
mov
push
out
pop
mov
jle
icebp
movl
outsb
out
lock
imulb
push
sbb
cmc
sahf
mov
ficoml
pop
dec
ja
stc
push
cmp
jmp
aas
or
out
fstpt
js
loopne
repnz
fbld
inc
or
jl
xor
push
xchg
ja
pushf
ret
rorb
mov
ljmp
rorl
cmp
ljmp
mov
cmp
jle
sbb
stc
xor
sub
push
lods
jnp
push
cmp
cmp
fstpt
cltd
xor
sub
inc
cltd
idiv
or
pop
xchg
push
in
jg
lret
mov
ret
and
fdivr
or
ret
add
ror
rcll
scas
sahf
jne
inc
mov
not
jmp
idivb
divps
sti
jnp
cli
pop
cmp
xor
add
ret
or
call
in
rcrl
push
inc
scas
push
sbb
jge
push
jle
lea
cmp
fsubrl
pop
lock
sub
es
sub
sti
ret
mov
xchg
or
rclb
mov
mov
inc
pop
adc
subl
test
inc
aam
or
mov
inc
jnp
cmovae
cmp
sbb
aas
jnp
jge
movsbl
mov
dec
sub
mov
or
mov
dec
and
mov
in
es
add
xchg
xchg
push
push
in
cmp
mov
adc
xor
fld
sbb
mov
mov
mov
jne
xor
and
jl
sbb
fisttpl
std
mov
dec
and
push
and
sbb
sbb
jle
cmp
jl
jbe
jmp
sub
add
mov
push
cmc
fidivl
imul
daa
or
mov
stc
stc
mov
dec
sbb
sbb
jle
mov
add
clc
clts
cmp
jl
orl
mov
ds
push
push
push
ds
mov
jg
outsl
lock
pop
mov
sub
inc
pop
push
jmp
mov
or
roll
loop
into
repz
dec
or
rcl
das
psubsb
inc
sbb
mov
test
sub
add
jne
xchg
stc
outsb
jns
pop
cld
sbb
sbb
sbb
xor
push
push
mov
lods
aas
add
push
mov
mov
and
ret
in
insl
sub
mov
decl
arpl
adc
cmp
mov
cmp
scas
jnp
bound
push
sbb
push
dec
popa
in
xor
test
adc
ljmp
or
pop
subb
cmc
jmp
test
or
jnp
jbe
div
push
inc
adc
jmp
cmpsl
je
sahf
leave
nop
cmp
inc
pop
shrl
je
xor
xor
dec
pusha
icebp
jmp
xlat
jecxz
xor
inc
pop
sub
shl
in
imul
add
ss
mov
insl
sub
add
aam
add
jns
sub
js
aas
cmp
in
mov
add
adc
sub
mov
mov
lea
iret
jp
push
xorb
xchg
cmp
es
push
rolb
test
pop
scas
push
mov
adc
and
ret
or
sbb
in
fs
push
push
cmpl
add
push
cmp
loopne
ret
test
mov
sti
mov
pop
mov
daa
bound
push
add
xor
arpl
dec
repz
lods
sbb
adc
fwait
sti
mov
mov
and
pop
loop
and
add
dec
cmp
lcall
ret
addb
sub
cmp
xor
mov
outsb
movzbw
arpl
pcmpgtd
xor
repnz
je
push
cmp
sbb
push
push
xchg
lods
aaa
rol
xor
nop
aas
movsb
cmp
xor
sub
cmp
push
sbb
cmp
movl
xor
fs
pusha
cmp
mov
mov
push
adc
push
movsb
loope
dec
dec
dec
cmp
inc
dec
cmova
dec
add
xor
mov
xlat
popf
push
mov
ret
pop
clc
mov
pushf
sbb
sub
in
add
fnstenv
mov
stc
dec
and
mov
adc
call
and
and
je
cmp
jne
cmp
jne
test
outsl
xlat
or
adc
pcmpeqw
outsl
xor
cmp
arpl
push
mov
test
rcr
outsb
pusha
and
cmpb
push
dec
add
inc
push
dec
inc
jnp
adc
push
fisubl
xor
ds
and
cmp
jbe
aas
cmp
lods
insl
jg
xor
jle
pop
mov
mov
pop
ss
push
loopne
inc
and
inc
inc
push
cmp
nop
or
mov
xor
pusha
hlt
pop
insb
add
enter
out
ret
rol
in
data16
jmp
movsb
push
ljmp
adc
pop
xchg
mov
scas
ret
pop
mov
ficomps
mulb
lock
lea
jne
insb
in
push
je
mov
mov
inc
popa
adc
lods
adc
or
sub
and
cmp
xor
not
flds
enter
xcrypt-ecb
cmpsl
or
roll
inc
push
add
hlt
sub
or
xor
jle
jle
push
sbb
orl
stos
sbbb
or
adc
pop
sbb
xor
es
ss
call
rorb
inc
xor
es
shll
cmp
rcrl
pushf
inc
xchg
jne
inc
mov
cmp
loopne
dec
decl
xchg
ret
sbb
pop
daa
out
sti
in
std
mov
sub
sub
jmp
fldl
sbb
cmp
inc
cmp
adc
decb
rcll
cmp
push
push
shrb
clc
pop
inc
iret
add
sub
cmp
repnz
mov
xor
adc
inc
or
adc
inc
xchg
or
lock
lock
mov
dec
repz
mov
sub
or
push
sub
cmp
clc
call
aaa
dec
mov
je
jmp
mov
sbb
xchg
sub
dec
jmp
pushf
jmp
sub
pop
jo
cmc
dec
pop
out
shrb
add
mov
sbb
int3
jmp
push
movl
xor
sbb
and
insb
les
xchg
sub
lahf
dec
jno
test
push
adc
aam
repnz
or
or
jle
bound
mov
adc
lods
mov
xchg
loop
enter
je
inc
jno
push
mov
test
icebp
jle
xchg
jne
push
loope
mov
hlt
dec
mov
mov
jl
xchg
push
pop
inc
add
push
push
xor
xor
fsubrl
pushf
push
aad
push
mov
fstpl
es
dec
testb
imul
dec
mov
xor
adc
std
int
insb
jge
cmpb
je
lea
lret
jg
xchg
out
add
sub
out
add
out
js
ds
frndint
mov
inc
push
dec
add
cwtl
and
pop
push
aad
call
mov
test
cmp
rep
pop
pop
jb
lds
xor
sbb
or
push
jl
test
call
fisttps
and
call
sbb
insl
mov
push
incb
fistps
scas
inc
cld
mov
push
xchg
jnp
pop
dec
adc
cmp
jle
je
out
inc
shll
mov
ss
int
cmpsb
test
rclb
sbb
pop
add
inc
aas
mov
xor
add
lret
dec
add
sbb
dec
mov
mov
mov
mov
push
je
push
sbb
xchg
arpl
movb
cmpsb
xchg
push
imul
or
mov
incl
mov
pop
sub
add
loopne
jle
sub
cmp
jmp
push
add
test
add
dec
cmpsl
sarb
add
xor
push
sub
mov
push
sbb
add
ret
sbb
sub
shll
jle
mov
in
and
mov
jmp
in
jl
mov
mov
lock
je
mov
pop
pop
idiv
inc
repnz
jmp
mov
dec
jns
xor
jmp
mov
or
jb
cmc
sub
push
cmp
mov
ljmp
je
cmp
jge
xor
cmp
jo
push
sbb
lret
sbb
cmpb
push
js
jecxz
fmuls
popa
in
mov
movsb
mov
cmpl
xchg
adc
call
clc
aaa
inc
pop
or
pop
mov
int3
mov
mov
pop
jbe
lea
and
stc
jne
lgs
lahf
xor
cmp
hlt
inc
sub
inc
roll
cmp
xor
push
sbb
and
mov
sbb
out
or
cmp
lret
lock
cmp
jecxz
in
leave
jge
sub
push
loop
mov
cs
xchg
jg
cmp
and
out
sahf
mov
mov
mov
rcrb
dec
aas
xchg
dec
lea
cmp
mov
popa
pop
shlb
loope
ret
arpl
sbb
push
dec
ljmp
pop
jmp
sbb
jg
xor
add
dec
hlt
adc
xor
dec
jns
sbbb
jle
rol
out
add
push
addr16
sbb
cmp
jo
and
int
push
add
mov
insb
jle
int3
jp
aas
inc
mov
out
jl
push
push
clc
dec
dec
sub
mov
mov
xor
daa
insl
mov
sub
movsb
out
fwait
mov
jmp
ljmp
pop
pop
inc
dec
cmpsb
std
jge
cmp
adc
sub
orb
mov
stos
mov
dec
ja
sbb
inc
sub
and
sbb
pop
mov
loopne
mov
and
xor
mov
fisubl
push
dec
adc
mov
inc
pop
or
mov
rclb
imulb
clc
mov
push
shlb
sbb
cli
sbb
cmp
mov
clc
mov
scas
sbb
mov
push
fisubrs
rorl
push
push
push
cmpsb
sbb
jmp
fdivrs
and
imul
jecxz
test
rcll
shll
sub
or
adc
xor
pop
and
jle
lea
adc
add
ljmp
jp
add
add
mov
xchg
mov
push
xchg
into
pop
sub
rcrl
nopl
jb
cld
adc
sbb
js
orl
sub
arpl
and
rolb
push
add
dec
pusha
jno
enterw
or
push
cmc
and
fsub
daa
stos
sbb
dec
inc
add
pop
jae
loopne
sahf
fs
xor
pop
mov
xchg
sub
lock
out
adc
cmp
or
rcll
push
and
aas
repnz
mov
jecxz
pusha
cwtl
inc
je
xor
jo
push
mov
push
push
rorl
push
imul
fs
test
mov
lds
rcll
push
cmc
mov
add
mov
outsb
sbb
jne
jmp
push
add
pop
test
mov
xor
sti
pop
jmp
sub
jne
xor
or
sub
mov
nop
aas
xor
add
xor
push
roll
ds
inc
ret
add
inc
cmp
out
scas
mov
imul
lahf
shlb
loop
loope
xor
jo
test
outsb
mov
adc
cmp
fwait
mov
inc
cmc
ret
pusha
shll
xchg
imul
sbb
notb
add
jg
pop
xchg
aaa
das
cmpb
cli
ds
call
shlb
adc
and
and
adc
push
add
orb
lcall
les
cld
lock
jge
lea
mov
mov
aad
xchg
push
sarb
push
dec
fs
into
jle
add
inc
jmp
adc
rcrb
leave
mov
fsubl
mov
mov
pop
sbb
pop
lock
test
push
mov
lock
sbb
pop
pop
loopne
rcll
jne
clc
push
or
dec
cld
stos
mov
and
xor
push
sbb
adc
xor
add
or
adc
stos
dec
ret
adc
sub
xchg
rolb
das
sbb
mov
xchg
jno
arpl
add
cwtl
or
push
rorl
push
sub
es
xchg
add
xor
mov
mov
and
mov
push
ds
idivl
inc
add
jne
sbb
push
dec
xchg
sub
addb
outsl
adc
dec
stc
insl
sbb
xchg
mov
test
sub
lods
sarl
adc
aad
js
bound
lahf
xchg
fcoms
and
jg
sbb
test
or
push
push
xchg
sbb
pop
mov
push
xor
push
cmpsb
push
add
inc
push
adc
xor
add
push
movsb
add
sti
popa
dec
call
sbb
test
lea
push
pusha
push
repnz
mov
in
aaa
jo
dec
cmp
jae
icebp
add
pop
int
je
xor
loop
or
xor
adc
add
or
push
ja
push
or
roll
insb
andb
jo
xchg
add
cwtl
inc
jp
push
and
popf
add
imul
and
pop
mov
lret
fnstsw
cmpb
imul
dec
lret
enter
xor
test
lret
movl
push
jo
xorb
out
mov
mov
add
in
clc
test
pop
or
in
push
dec
or
stc
lahf
jne
lds
mov
xor
xchg
cmp
inc
xchg
mov
cmp
fildl
js
repz
push
jle
add
je
loope
fsubrl
lods
push
inc
and
bswap
movsl
imul
sbb
repz
shlb
dec
lods
jl
fstpl
in
add
or
or
inc
add
xchg
ss
jg
js
ficomps
dec
je
dec
jne
insb
je
scas
jmp
outsl
jmp
inc
push
add
cmp
test
add
imul
scas
test
and
je
dec
jne
mov
ret
out
outsb
pop
dec
movl
jmp
mov
fsubl
or
push
xlat
adc
mov
fs
insl
pusha
ret
lea
addr16
outsb
popf
out
into
push
sub
mov
or
or
mov
inc
push
cmpb
divb
add
mov
clc
loop
add
push
xor
movsb
push
mov
popl
aad
repnz
cmp
push
repz
jae
es
ret
das
push
mov
jo
je
mov
push
jmp
stos
push
push
or
jl
push
push
inc
lods
cmp
jmp
or
jmp
cmp
imul
rcll
push
cwtl
cld
xor
pop
xor
sub
sahf
scas
push
dec
and
or
insb
push
mov
push
mov
xchg
xor
or
inc
sub
adcb
xor
mov
push
aas
add
cs
sbb
lods
or
and
and
mov
jae
rorl
jo
push
push
pop
sub
sbb
dec
test
push
jnp
popa
mov
imul
adc
xor
dec
dec
and
mov
xor
or
lods
pop
adc
push
and
or
lock
sub
imul
mov
clc
inc
jg
pop
push
sbb
mov
pusha
or
lods
sti
ja
xchg
inc
mov
add
xchg
xchg
pop
nop
aas
sbb
mov
push
pop
stos
sub
mov
push
jmp
push
sub
jmp
pop
mov
sbb
cmp
cmp
mov
push
or
pop
sub
mov
loope
jle
mov
add
pushf
add
push
push
push
mov
xor
jbe
jne
loop
orl
push
adc
shr
es
add
insl
movsb
add
pushf
pop
jb
push
add
mov
ret
loop
ret
or
and
adc
pop
push
fimuls
mov
ja
scas
insb
outsl
inc
cmp
mov
pop
add
add
ficoms
insb
adc
js
push
push
push
jecxz
sub
dec
dec
pop
testb
add
je
lret
or
push
mov
mov
outsb
push
jbe
pop
loop
sub
adc
fcompl
scas
push
or
cs
push
push
add
mov
lock
or
or
inc
sbb
clc
push
mov
sti
pop
es
inc
call
test
pusha
sbb
jmp
cwtl
sub
push
mov
sbb
sub
mov
repnz
xor
dec
idivl
lea
subps
adc
push
xchg
jle
insl
lock
cld
fldcw
mov
mov
jae
test
xchg
lea
insb
xor
xchg
add
push
jp
jo
addl
mov
push
popa
ljmp
ret
mov
mov
add
push
test
pop
out
ret
sub
mov
loopne
pop
inc
adc
or
mov
dec
clc
pcmpgtw
mov
jo
popa
insb
and
ret
dec
sub
fildll
cwtl
imul
or
push
js
or
jae
lods
and
push
and
add
rolb
sbbl
insl
mov
jmp
add
lods
sub
pop
in
lahf
xor
js
sub
hlt
add
call
cmp
or
shl
mov
aas
cli
clc
fsubr
or
push
sub
add
add
lcall
cld
imul
cmp
pop
dec
push
push
add
pushf
mov
add
cmp
call
jg
lea
mov
add
mov
mov
or
gs
mov
jp
mov
fs
lcall
jne
pop
pop
mov
std
xchg
movb
in
ret
jne
cmp
pop
and
adc
cmp
out
add
push
insl
push
and
add
add
adc
adc
adc
adc
sahf
jno
adc
add
in
fs
mov
shll
or
adc
sbb
lods
sahf
jge
cs
cmp
jne
or
or
or
mov
pop
test
xorl
jne
sbb
dec
sbb
ret
lret
and
lea
pop
jmp
jb
add
pop
mov
pop
idivb
or
int
sbb
int
add
test
jbe
lock
imul
push
lea
jb
adc
adc
jmp
in
clc
mov
fcmovne
dec
lea
gs
sbb
pop
loope
js
sbb
repnz
ds
or
ret
enter
mov
or
push
pushl
clc
cs
js
adc
loopne
ret
scas
cmpsb
loope
mov
jno
inc
pop
popa
jl
clc
jb
lea
sub
sub
test
mov
add
sar
mov
mov
pop
decl
or
cmp
push
das
les
les
inc
int3
push
or
rolb
fidivl
adc
loope
xor
cs
ret
jl
or
in
sbb
add
lret
jb
andw
push
xor
add
mov
push
mov
sbb
and
jbe
inc
pop
jno
jmp
inc
xor
add
add
inc
or
push
push
or
or
imul
adc
push
jno
shlb
mov
pop
rorl
pop
ror
stc
or
shrb
pop
fsubrl
fsubrs
mov
roll
jbe
fimuls
inc
or
ds
sbb
xorl
jmp
aad
mov
jle
push
test
inc
fwait
sbb
daa
iret
test
jmp
in
fisttpl
or
push
mov
scas
sbb
test
mov
jle
push
popa
faddl
or
cwtl
push
fwait
imul
mov
mov
and
fsts
dec
lret
popa
inc
lods
loopne
jl
or
fwait
rorb
cmp
imull
pushf
push
lahf
mov
fwait
jne
jne
adc
lock
jle
lret
aaa
popf
cmp
push
aaa
add
pop
out
add
lret
daa
leave
push
dec
lods
stos
lods
mov
fmuls
pop
lret
mov
push
xor
fdiv
in
jmp
inc
call
dec
in
cmp
sbb
mov
or
mov
jne
ret
xor
sbb
cltd
insb
jo
loop
in
mov
aas
push
mov
je
sub
pop
aas
pushf
mov
adc
neg
mov
mov
xchg
js
cwtl
adc
outsl
cltd
dec
ss
cmp
notl
push
mov
mov
insl
push
mov
or
aas
jbe
ret
popf
xor
add
adc
or
push
push
xchg
push
dec
pop
push
mov
mov
push
pusha
xlat
push
call
pop
arpl
bound
imul
test
cmp
jne
icebp
push
pop
dec
jl
incl
ret
cmpsb
movb
fucomi
lea
xor
das
push
pop
lea
add
sbb
sub
lea
stos
mov
or
inc
push
sbb
push
xor
ret
and
mov
lods
lea
imul
lea
jmp
push
xchg
inc
or
leave
push
je
shlb
fisubs
cmp
mov
dec
pop
push
in
inc
clc
sahf
mov
aam
adc
dec
clc
out
cwtl
jecxz
xlat
jge
jo
sub
push
sbb
and
adc
pop
or
sub
cmp
lods
fsubrs
ret
cmp
dec
pop
mov
sub
add
push
inc
xchg
std
push
fisttpl
push
push
lahf
and
repnz
jbe
mov
push
dec
cs
inc
in
push
xor
addb
incb
inc
adc
push
add
push
push
inc
mov
mov
or
jne
pop
push
mov
daa
push
shlb
fchs
or
cld
call
mov
jne
sbb
sarb
or
jae
int
mov
xor
or
dec
ljmp
test
push
fidivrl
or
sarl
je
sbb
fcmovu
test
pop
xor
jmp
fsts
adc
rclb
add
test
sub
sbb
loope
call
or
xchg
ret
aas
push
fsubp
andb
push
pop
cmpsb
pushf
or
jne
add
push
nop
push
std
mov
mov
scas
pop
mov
xor
inc
sub
pop
pop
ds
cmp
mov
je
cli
jnp
xor
mov
fstpl
push
jp
mov
incl
sbb
pop
movsb
gs
outsb
push
cs
and
add
xchg
add
push
sbb
sub
and
add
adc
xor
add
push
mov
push
cmc
xor
jecxz
and
ja
push
pop
fiadds
push
push
adc
jbe
psrlq
mov
jns
push
jmp
or
and
jnp
cmpl
cmp
iret
sti
push
addr16
test
enter
into
dec
jo
mov
cmp
scas
loope
add
adc
dec
aas
insb
push
cmp
ljmp
lods
or
mov
subl
adc
pop
mov
xchg
hlt
lret
jp
sbb
lods
aam
add
shll
or
xchg
xor
in
lock
adc
cmp
jns
or
jno
pusha
sbb
movsb
insb
pop
js
jnp
adc
cs
push
mov
xchg
push
je
test
imul
loopne
imul
jg
fs
jne
push
mov
sbb
fisubrs
add
xchg
push
and
sahf
divl
inc
or
pop
sbb
push
add
sub
xchg
xchg
cwtl
sahf
push
movsl
les
sbb
fbstp
sbbw
push
fists
or
inc
repnz
and
dec
jne
inc
jbe
inc
add
mov
and
inc
rep
jp
add
sub
sub
lods
cmp
sub
sub
fmull
push
jne
pop
adc
cmp
pop
adc
js
orl
mul
insl
add
and
inc
andb
adc
dec
jns
add
xor
scas
js
cmpsb
push
push
mov
pusha
mov
mov
sub
xor
adc
loopne
or
daa
adc
push
in
mov
fiadds
inc
or
sbb
adc
movsl
in
jecxz
xchg
xchg
add
fistpl
inc
add
adc
loopne
pop
xchg
jp
xchg
adc
sbb
push
jne
xor
shlb
push
fdivrl
dec
mov
push
push
testl
outsb
je
clc
movsl
inc
movsl
dec
inc
lea
or
fwait
das
push
add
jmp
lea
xchg
xor
xchg
inc
ret
mov
pop
cmp
inc
lds
push
fiadds
mov
in
adc
jnp
sub
rclb
or
cmp
push
adc
ljmp
add
int
scas
push
adc
and
xor
lock
push
push
sbb
dec
add
shrl
movsl
nop
or
nop
lcall
adcb
pop
int
and
sahf
adc
add
int
jl
mov
mov
mov
inc
xor
inc
mov
cmp
sti
out
and
xor
jo
xorl
sub
sbb
mov
mov
insb
xchg
or
cmp
xor
xor
mov
mov
popa
movups
mov
dec
popf
mov
mov
push
lcall
sbb
jnp
loope
popl
push
xlat
shlb
or
mov
in
stos
cmpsl
jl
push
jle
fisttpll
loop
js
inc
cli
push
cmp
pop
push
push
push
enter
lods
shll
ret
push
rolb
cmp
jle
sbb
shrb
mov
call
mov
mov
cmp
cmp
and
cmp
inc
addl
jno
out
roll
jbe
mov
mov
xchg
mov
cmp
adc
test
lds
cmp
fwait
or
test
rorb
and
add
sub
push
inc
push
fcoms
xor
and
add
mov
adc
cmp
dec
call
popf
in
jp
sti
loop
cmp
fs
pop
adcb
pop
popa
pop
jbe
dec
scas
nop
jl
jle
test
decl
jnp
adc
cwtl
orl
inc
gs
fildll
inc
push
mov
mov
mov
cmp
jne
aam
add
xor
push
xchg
shll
int3
add
fdivl
fdivr
bound
pop
xchg
dec
mov
cmp
hlt
fs
sar
lds
loop
fwait
xchg
jne
mov
pop
push
loopne
adc
pop
call
xchg
leave
mov
cmp
fs
ret
not
push
push
das
adc
sbb
cmp
xor
das
iret
push
and
arpl
pusha
xorb
fisubrl
dec
fcoms
clc
pop
add
insl
sbb
faddl
jbe
neg
lods
xlat
xchg
enter
insl
push
pusha
stos
cmp
lret
lds
jle
fadds
ror
xchg
add
pop
add
ja
sbb
fdivl
inc
push
cmp
mov
sbb
lcall
addl
xor
sbb
push
insb
xor
pop
lods
je
test
popa
xor
sbb
movsb
movsl
add
fdivs
xchg
iret
sbb
out
jecxz
mov
icebp
pop
clc
xlat
or
push
push
das
loope
push
movsl
enter
lds
adc
call
pop
cmp
jno
or
adc
data16
cmp
aam
mov
addb
imul
mov
out
cwtl
clc
or
clc
add
mov
mov
js
dec
loope
jno
popa
jo
shll
cs
pusha
orl
xlat
cmp
jge
pop
xchg
pop
lods
stc
loop
xchg
push
xorl
inc
dec
lahf
ret
pop
fs
pop
xchg
loope
rcll
je
or
int3
fildll
scas
push
js
leave
cmp
sete
jbe
das
xor
inc
enter
jge
lods
movsb
add
xlat
fimull
jmp
and
mov
and
mov
jle
ret
iret
push
in
mov
test
xchg
inc
or
xchg
pushf
jb
pusha
jo
into
movl
sbb
loope
sub
inc
cltd
pop
xor
cmpsl
pop
pushf
insl
add
mov
sub
loopne
in
cmp
jne
xchg
lds
jp
sbb
int3
push
inc
mov
lahf
push
xor
adc
fisttps
lea
sub
fidivrs
push
pop
push
addl
pop
fidivrl
and
and
lahf
loope
or
dec
dec
jmp
inc
dec
mov
jmp
add
adc
mov
push
add
push
xchg
test
and
or
mov
mov
je
jp
add
mul
mov
add
or
je
jne
sub
aam
out
je
xor
jbe
sahf
sub
or
or
ja
shrl
xchg
jg
inc
or
and
js
fcmove
sar
test
inc
das
hlt
cmpsb
cmp
xchg
push
push
mov
cs
push
and
lds
test
dec
dec
sub
mov
lods
enter
sbb
pop
ljmp
or
xor
les
nop
fldcw
fisubrs
jg
in
xchg
hlt
xor
nop
ja
das
les
loop
push
and
xor
jae
stos
xor
push
rorl
jg
fxch
pop
jl
jg
dec
or
adc
jmp
fistl
cmp
test
or
jmp
jg
sbb
and
add
cmc
pusha
dec
mov
pop
movsl
and
push
dec
push
ficomps
xor
jp
xchg
jbe
or
cmp
sub
rolb
or
xor
mov
jmp
jns
jg
or
mov
pushf
sbb
in
nop
xchg
jne
mov
shl
cmp
das
je
push
and
jno
jecxz
xchg
mov
int3
cmp
adc
pop
lea
push
mov
inc
pushf
out
lahf
pop
enter
xchg
fnstcw
and
xor
loopne
inc
rcr
sbb
inc
sbb
jmp
and
lret
push
nop
xchg
dec
xlat
pop
scas
outsl
loopne
mov
jmp
and
pop
sub
leave
das
in
mov
adc
test
je
sub
imulb
add
rorl
inc
shrl
sbb
inc
lahf
sub
or
subb
cmp
pop
pop
adc
aas
cmp
rcl
xchg
jmp
sbb
mov
sbb
adc
dec
adc
push
scas
test
mov
jle
cmpl
or
cmp
xor
jmp
pop
lea
push
push
aaa
lea
es
and
jle
pop
cs
inc
les
in
pop
mov
roll
sbbl
cmp
fmuls
test
sbb
lea
iret
push
shlb
sbb
loope
xchg
enter
repnz
sub
push
jbe
aaa
adc
loopne
icebp
cmp
mov
imul
jg
sarb
or
pop
add
or
jle
outsb
xchg
pop
out
idivb
sbb
push
or
xor
mov
add
movl
je
rolb
call
in
aam
or
pusha
sub
cmp
add
call
fmuls
and
adc
dec
xor
or
mov
sti
cmp
xchg
push
lea
popf
adc
pushf
lea
enter
or
outsb
scas
adc
pop
add
dec
cmp
mov
in
jb
push
cmp
enter
loopne
and
dec
mov
out
outsl
xor
mov
push
outsb
or
test
inc
cmp
pop
mov
pop
sub
rcrb
ds
and
xchg
clc
or
dec
add
dec
dec
mov
ss
xor
int
push
or
add
add
cmp
inc
xor
cld
mov
inc
push
sarb
stos
clc
and
rcr
or
sbb
bound
push
mov
sub
inc
jae
mov
xor
ds
push
fwait
in
sub
call
inc
mov
xor
outsb
inc
jne
roll
pop
jo
cmp
and
push
mov
inc
jne
pop
add
mov
jno
sbb
or
imul
dec
mov
adc
out
lods
addb
mov
cli
mov
dec
jle
and
adc
loope
or
cltd
ljmp
push
jae
push
push
insl
jl
pop
imul
push
cmpsb
pop
fisttps
push
lcall
push
ljmp
ret
mov
jg
js
test
je
add
cmc
iret
add
sub
dec
je
add
dec
jne
call
das
pop
or
addb
push
inc
jne
pop
cmp
push
sbb
outsb
lcall
or
sbb
xor
and
cmp
add
ss
ljmp
push
pop
xchg
rol
pushf
adc
fcompl
clc
dec
push
lea
test
pop
inc
xor
xor
cs
xchg
shrb
iret
iret
sub
in
cs
mov
pusha
mov
popf
icebp
mov
cmp
stc
push
xchg
jle
sub
add
aam
orb
jle
inc
daa
push
sbb
or
push
jl
add
fcomp
bound
xchg
xchg
push
mov
or
test
or
lods
and
int3
pop
nop
inc
lods
inc
lcall
ficoml
dec
les
in
test
dec
xor
fmull
ja
inc
sub
mov
xor
pop
rolb
pop
push
push
addb
mov
lahf
adc
add
push
imul
or
cmp
jecxz
jne
and
push
leave
outsb
inc
lods
aam
lcall
mov
push
cmc
mov
lods
add
inc
dec
cs
mov
inc
inc
cmpsb
inc
jae
mov
dec
shrb
and
mov
mov
or
enter
push
add
mov
or
notb
pop
push
push
lea
pop
fxch
mov
jo
lods
mov
jge
or
jge
xorl
add
scas
mov
pusha
or
arpl
push
push
or
orl
fs
sub
mov
test
lods
neg
pop
js
mov
xchg
cmp
add
and
mov
jmp
sbb
and
mov
in
jo
nop
inc
cwtl
imulb
adc
imul
push
mov
imul
push
pop
adc
sub
std
and
push
inc
inc
inc
pop
add
sub
out
or
and
xor
inc
inc
adc
pop
sub
stos
pop
pop
pop
mov
push
mov
cmp
and
sub
nop
jmp
sbb
and
mov
inc
test
dec
call
push
js
adc
push
mov
jbe
clc
push
sbb
ret
std
rclb
mov
pshufw
adc
xchg
dec
stos
adc
push
sbb
cmp
js
mov
add
mov
setnp
iret
adc
push
push
lods
lcall
in
mov
js
push
push
sub
cmpb
aam
pop
scas
or
cmp
cmp
push
push
xor
test
loopne
test
dec
xor
roll
jne
aam
add
adc
addb
inc
mov
sbb
add
adc
mov
int3
aam
sub
cmpsb
add
roll
stc
push
cmp
fcmovb
fisttpl
lea
xchg
mov
lret
lahf
mov
aas
sbb
mov
inc
hlt
or
add
xchg
pop
and
inc
push
rcrb
mov
or
xchg
rorl
pusha
scas
shll
dec
leave
pushf
pop
ret
or
data16
push
testb
sbbb
push
adc
xor
test
mov
sub
mov
sbb
insl
xor
cs
dec
lea
xchg
mov
mov
leave
loope
stos
push
sub
mov
cmp
xor
adc
mov
add
lahf
popf
adc
in
aaa
stos
sbb
xor
jo
fisubs
add
cs
jo
clc
in
or
sbb
dec
adc
orl
ja
jecxz
pop
rorb
sub
test
xchg
dec
add
stos
fs
inc
test
ds
jge
jecxz
rcrb
jae
ss
icebp
call
xor
or
std
xchg
sbb
push
cmp
sub
cmp
push
dec
sbb
sub
dec
movsl
dec
mov
inc
nop
or
jnp
or
popa
adc
and
xchg
inc
pop
xchg
stos
stos
xor
lret
test
or
or
fs
push
shr
adc
pusha
sbb
push
sub
addb
inc
pusha
minps
data16
dec
into
push
cmp
pop
sub
and
bnd
js
enter
imul
mov
pop
sub
loopne
test
je
inc
jo
loop
cmp
inc
pop
or
mov
push
cmp
fisubs
inc
ret
sti
lock
and
push
je
int
daa
ret
lods
fbld
popf
lahf
das
mov
pop
jo
xor
add
sldt
sub
jns
sbb
jle
jecxz
enter
xor
sub
roll
and
or
xchg
mov
sub
xor
xor
rorb
and
cmp
bound
dec
and
js
push
lock
push
push
je
sbb
aam
aam
xor
or
repnz
adc
ret
pop
mov
xor
test
adc
xor
dec
jg
mov
xchg
lahf
or
push
outsb
pop
xor
jle
push
call
add
push
repz
lods
dec
rcr
mov
js
addr16
sbb
les
std
mov
insl
adc
sbb
inc
dec
dec
inc
and
cmp
dec
sbb
push
loope
sbb
loop
movsb
inc
push
mov
pop
or
and
or
xor
or
pop
push
cs
in
iret
fidivrs
mov
mov
add
add
inc
adc
adc
jno
es
adc
cmp
xor
pop
pop
add
jo
lea
bound
pusha
data16
lods
push
sub
inc
mov
mov
lidtl
sub
dec
dec
cmp
adc
mov
nop
loopne
enter
cmc
adc
sbb
sub
xlat
pop
out
arpl
and
push
push
ljmp
mov
in
pop
cmp
push
dec
push
or
cltd
pop
jbe
stc
inc
adc
push
push
adc
popf
dec
add
add
sbb
or
xor
push
push
jmp
cmp
adc
mov
ffree
push
or
and
mov
sbb
add
orb
loope
popa
lds
push
adc
push
add
cwtl
mov
sub
lods
mov
mov
push
sbb
mov
in
inc
cltd
inc
and
push
imul
xor
push
add
xor
xor
pusha
mov
stc
fists
mov
push
lock
cs
loopne
leave
mov
or
cmp
icebp
push
pop
push
xor
es
fs
adc
test
lock
sub
fs
pop
and
bound
hlt
adc
dec
xor
lock
dec
jo
push
repnz
jo
add
mov
push
sbb
lock
inc
sub
test
add
ret
pop
fildl
add
dec
push
leave
dec
sub
movsb
sub
popa
adc
and
sub
adc
add
and
call
jg
leave
ret
ljmp
cmpsl
and
and
inc
dec
cli
les
inc
inc
adc
mov
mov
or
push
xor
mov
mov
jbe
dec
mov
dec
jmp
jl
dec
cmpsl
cmpsb
adc
inc
lahf
movb
pop
pushl
fstpt
sti
jne
pop
pop
dec
jl
inc
sbb
push
and
adc
xchg
add
ljmp
cmp
shlb
adc
inc
pop
push
lret
iret
push
xor
xor
dec
rclb
lods
cmp
add
lods
jge
mov
mov
mov
dec
push
test
inc
inc
fcmovnu
push
inc
push
jg
nop
and
push
push
inc
dec
flds
inc
sbb
bound
cmc
xor
insl
test
xor
add
add
add
push
inc
pop
testb
outsl
nop
jp
leave
jbe
and
push
pop
inc
add
fs
mov
rorb
dec
or
jo
cmpsl
push
leave
add
mov
jl
repz
les
sbb
mull
or
test
aam
push
lret
insb
cmpl
push
in
cmp
jo
loope
stc
sbb
xchg
pop
xchg
imul
xchg
pop
add
inc
mov
xchg
add
or
fs
push
fwait
pop
mov
xchg
adc
pushf
mov
cli
add
rcr
movsb
test
pop
enter
xchg
push
jmp
sbb
in
aad
push
test
iret
jmp
and
push
push
pushf
stc
sahf
out
and
int
jns
fistl
mov
stc
xrstor
dec
sahf
mov
or
lock
jl
push
inc
add
clc
movsb
stc
pop
fsubrl
lods
mov
roll
mov
inc
lretw
xchg
das
popa
jb
dec
andl
repnz
push
jp
nop
or
pop
dec
insb
mov
push
push
xor
inc
ss
mov
mov
fs
ljmp
sbb
and
rorl
adc
pop
jae
iret
nop
sbb
pop
jb
insl
jbe
pushf
mov
movsb
test
jb
pop
lods
mov
inc
outsl
cmp
push
repnz
sarl
adc
ss
repz
repz
popf
out
sahf
out
mov
sub
jns
imul
cmp
arpl
add
cld
sti
adc
or
testl
mov
mov
cmc
adc
insl
mov
push
and
insb
jns
mov
push
adc
das
shlb
fidivrs
lcall
popl
cmp
push
push
aam
loopne
push
stos
lea
insb
xchg
test
outsl
negb
jnp
jl
daa
add
mov
outsl
dec
sub
out
outsb
aaa
add
pop
xchg
push
adc
ror
add
xchg
lds
je
inc
in
inc
cmp
jo
add
cmp
or
and
sub
mov
and
jns
test
addb
inc
add
jmp
inc
cmp
sar
lock
aaa
jl
mov
jns
ds
mov
add
icebp
pop
inc
jl
lea
dec
sbb
add
jbe
or
inc
imul
xchg
mov
add
add
movsb
cld
jb
add
jmp
sub
cmp
or
or
jg
aad
das
sbb
lret
int3
repz
adc
dec
xchg
outsb
xlat
clc
clc
lods
add
pop
inc
pop
jo
ds
lea
outsb
adc
leave
dec
pop
movl
push
sbb
test
xchg
aam
popa
iret
out
sbb
add
xchg
add
xor
mov
and
sub
les
sbb
pop
pusha
jle
pop
lea
mov
stos
adc
sub
lret
xchg
push
call
push
repz
xor
or
lods
xor
leave
mov
icebp
jo
iret
mov
sub
mov
adc
lretw
outsb
outsb
outsb
inc
push
sbb
add
jle
push
jg
jb
je
shrl
fsubrl
or
xchg
sbb
inc
dec
lahf
in
sbb
adc
push
add
mov
dec
call
movsb
dec
loopne
or
or
sarl
ret
lea
sti
fidivl
add
mov
or
add
add
or
mov
adc
leave
add
lods
xor
push
leave
add
sub
sub
push
xchg
js
push
push
cmpsb
push
shrb
cmp
loope
push
cmp
cmp
loop
jns
inc
inc
je
inc
aaa
fsubrs
mov
pushf
insl
out
dec
pusha
cmovae
jne
addb
call
or
fsubrs
into
sub
pop
in
xor
push
mov
pop
dec
or
fistpl
pushf
cltd
js
push
pop
adc
test
js
sbb
cs
sub
jnp
stos
lret
jo
inc
clc
push
inc
iret
popf
std
cmp
jg
mov
push
and
sub
aam
outsb
loope
mov
jp
push
cmp
jle
fcmovnu
clc
jle
or
adc
icebp
or
or
pop
repz
fstp
fsubrl
fisubl
push
sbb
dec
fxch
fmul
sbb
jnp
insl
sbb
adc
call
adc
cld
clc
int3
cltd
fstp
std
mov
shll
cmp
lock
popl
int3
mov
pop
push
daa
test
popa
inc
cld
push
bound
push
cmp
adc
push
loopne
out
add
push
fldl
mov
test
sahf
inc
dec
call
rolb
add
inc
sldt
vsqrtss
or
sub
mov
imul
inc
add
mov
into
cmp
jge
lea
cmp
or
xchg
push
add
add
mov
adcb
mov
pushf
iret
adc
mov
push
xchg
rolb
inc
sub
xchg
sub
sbb
push
and
sbb
inc
or
adc
add
or
add
push
insl
sub
mov
push
or
idivb
mov
add
cmp
sub
mov
pop
pop
ror
cltd
cmpsl
jl
nop
xchg
dec
fdivs
mov
add
mov
cs
lea
xchg
stos
lahf
shlb
rclb
dec
push
sti
dec
test
movsl
xchg
pop
ret
aas
sub
test
mov
cmp
fnstsw
dec
sub
dec
xor
push
pop
mov
in
and
enter
jnp
ret
sbb
cltd
dec
mov
xchg
mov
dec
jle
cld
xchg
cmp
addr16
enter
and
add
imul
adc
filds
sub
pop
js
cmp
dec
movsl
dec
loopne
addr16
or
adc
push
sbb
mov
add
cmp
out
lods
xor
neg
sub
sub
or
pop
enter
daa
mov
aam
sub
xor
pop
add
mov
or
or
push
add
xchg
adc
sbb
cmp
sub
push
xor
int3
fs
pop
push
cmp
inc
push
ja
mov
sbb
fisttps
insb
sbb
int
arpl
scas
mov
jne
xchg
jle
shrl
adc
inc
push
mov
inc
int3
and
loope
sub
mov
sahf
stos
xor
cmpsl
dec
pop
sub
push
cltd
stc
dec
fsubrs
int3
add
add
js
add
jge
push
inc
jb
adcl
mov
push
mov
fsubs
push
cmpb
stos
jl
xchg
int3
je
cmp
or
mov
xchg
adc
add
add
xor
mov
push
sbb
je
inc
inc
shl
ret
mov
dec
add
push
mov
ret
out
mov
aad
push
loopne
dec
mov
icebp
jmp
add
pop
in
xlat
mov
loop
push
adc
fstpt
sti
cwtl
adc
lock
jle,pt
mov
stos
inc
jbe
pop
andb
ds
and
sahf
pusha
or
arpl
call
push
jg
jl
inc
lods
mov
das
sbb
jecxz
imul
pop
mov
pop
fidivrl
sbb
into
adc
xor
out
add
je
enter
notb
sbb
and
or
dec
adc
les
aas
mov
xlat
or
xor
pop
sub
add
sub
scas
ret
push
mov
push
fwait
insb
ss
mov
jne
test
mov
cmp
pop
xor
inc
jnp
lea
xchg
cmp
cmp
or
sbb
xchg
lret
fisttps
fsubr
dec
iret
jae
daa
mov
dec
inc
negl
cwtl
add
inc
fidivl
dec
push
add
stos
push
repz
push
jmp
sbb
sub
adc
mov
setl
push
movb
and
pop
push
and
loopne
lods
sahf
jo
mov
xlat
sub
cwtl
pop
sahf
add
cmp
hlt
pop
push
inc
xchg
ds
pop
adc
test
outsl
jle
addr16
cmpsl
enter
clc
fistps
cmp
adc
add
mov
lahf
mov
sub
jb
nop
add
test
add
popf
sar
jg
add
pop
xchg
rcrb
sub
sahf
mov
push
repz
mov
inc
js
sahf
push
xchg
shlb
and
lods
pushf
lea
cmpsl
inc
lcall
mov
xchg
push
adc
int3
xor
sbb
fists
loopne
mov
nop
jno
lret
jb
bound
or
mov
push
jmp
inc
cs
outsb
inc
outsb
add
movsb
outsb
outsb
lds
pop
out
and
scas
subl
daa
sub
and
push
lret
jo
loop
or
add
leave
sbb
shl
pop
enter
push
movsb
mov
loop
mov
pop
or
inc
rolb
loop
mov
pop
inc
lods
dec
or
fwait
jg
and
push
out
rorb
pop
inc
loop,pt
arpl
les
js
rolb
test
loopne
push
jne
rcl
pop
ret
stos
push
xor
aam
adc
loope
loop
sbb
jl
and
cmp
inc
dec
push
mov
lret
push
push
and
dec
push
sbb
add
int3
add
and
imul
add
enter
push
jmp
lods
incb
push
sub
push
xor
sub
mov
lods
das
scas
dec
rcrb
sahf
testb
es
push
neg
sbb
inc
and
leave
and
push
xchg
clc
mov
push
jmp
lds
sub
scas
push
inc
xlat
aas
push
jmp
aaa
mov
sub
push
das
push
xor
push
add
psubusb
jmp
outsb
add
lcall
push
inc
movsl
or
push
cmpsl
inc
add
loopne
add
add
mov
adc
sbb
je
dec
or
ljmp
ret
push
dec
push
push
push
xchg
jmp
xchg
rcr
inc
mov
sub
pushf
outsl
pop
inc
mov
pop
pop
call
jge
sub
ret
enter
xorb
adc
sub
xor
and
lock
lods
push
cmp
andb
inc
add
and
mov
add
mov
pusha
pop
push
inc
stos
inc
int3
mov
inc
je
mov
jmp
push
pop
jmp
ret
mov
mov
ja
mov
sbb
pop
dec
xor
inc
call
cwtl
dec
in
jbe
push
pusha
and
push
aad
mov
bound
mov
outsb
in
out
sar
mov
shr
add
pop
mov
imul
and
mov
xchg
sbb
and
sbb
jo
xchg
xchg
data16
xchg
inc
ret
xchg
popa
sub
fstpl
xchg
sbb
jge
sahf
outsb
and
popa
cmp
jmp
ret
insl
out
test
mov
inc
addr16
fsubs
adc
imul
cmp
scas
dec
fbld
mov
mov
test
sbb
add
dec
sahf
inc
inc
push
sub
dec
sahf
inc
dec
pop
and
or
sbbb
and
dec
pop
mov
jae
shrb
xchg
pop
inc
jb
mov
lahf
mov
and
sbb
jns
add
dec
mov
jns
cmp
ja
in
cli
rorb
mov
or
cmpsb
fidivs
add
enter
adc
push
add
lods
mov
pop
and
xchg
pop
jmp
inc
js
dec
jl
pop
inc
sub
mov
xchg
mov
xorl
imul
enter
xchg
and
enter
stc
mov
in
pushf
cmp
lcall
sbb
ja
push
jb
mull
add
js
adc
sahf
ret
push
pop
ja
js
in
pop
mov
mov
mov
jmp
sub
jmp
add
adc
dec
jmp
add
or
outsl
push
je
mov
lsl
dec
push
pusha
push
push
jle
pop
or
in
inc
inc
sbb
loop
sti
cmpsb
add
sbb
in
movb
jmp
pop
lea
adc
and
insb
jp
icebp
sbb
cmp
cmp
dec
pop
sub
push
insb
jbe
cmp
repz
pop
xchg
inc
push
dec
push
dec
jns
addr16
into
into
push
into
into
into
and
pop
adc
or
dec
mov
lahf
in
test
dec
pop
stos
lcall
xor
fildll
xchg
ss
bound
lret
or
push
leave
sub
add
sahf
out
and
cmp
dec
jae
sbb
pushl
inc
add
inc
loope
loop
jns
punpckhbw
push
lahf
add
push
xchg
jmp
jmp
add
andb
pushf
inc
push
cmp
orb
push
aad
mov
mov
mov
xor
jg
int3
xor
imul
shlb
mov
cmp
inc
sub
stc
pushf
sub
bound
leave
into
into
into
mov
or
sub
fldl
sub
adc
jmp
das
stos
arpl
mov
insb
stos
jns
test
in
inc
sub
and
loopne
sbb
push
mov
cmpsb
bnd
sub
jg
clc
fs
mov
jne
mov
roll
sbb
ljmp
sahf
push
cmc
orb
out
sahf
cmp
mov
add
pop
dec
loopne
cld
adc
sub
lea
sar
imul
inc
jecxz
adc
pop
fs
cmpl
movsl
mov
pop
mov
sbb
mov
iret
imul
adc
movsl
test
inc
xchg
jp
pushl
mov
pop
sub
clc
push
sub
push
aam
cmp
jne
or
add
xor
pushf
add
adc
xorl
sub
push
inc
push
loopne
sahf
mov
push
mov
dec
sahf
out
pop
pop
cld
fsts
stos
sbbb
mov
jo
dec
je
inc
shrl
jecxz
bound
inc
dec
mov
push
adc
leave
mov
inc
push
pop
fiadds
into
lcall
or
icebp
push
test
inc
inc
lcall
dec
int3
push
mov
lret
ss
test
ret
shl
add
test
je
aas
ret
lods
std
imul
jp
lock
dec
or
sbb
or
jne
mov
xchg
ljmp
dec
pushf
and
inc
imul
mov
std
mov
adc
jl
lods
sbb
mov
test
es
ljmp
inc
xchg
or
add
sbb
js
add
dec
cli
mov
repnz
in
and
xor
inc
mov
xor
movsb
bound
mov
sbb
push
xchg
cmpsb
add
adc
dec
mov
jmp
es
repnz
cwtl
fidivrs
push
jecxz
add
pusha
pop
divb
or
xchg
out
repz
cmpl
push
cli
orb
fs
inc
or
sbb
adc
add
pop
add
cs
adc
push
inc
adc
push
es
leave
jmp
test
push
add
mov
mov
sbb
push
add
sbb
mov
daa
arpl
subl
daa
outsl
inc
fdivrs
lods
push
lea
jg
add
loopne
sbb
pop
xchg
adc
int3
jo
and
jno
je
pop
sub
push
sub
mov
sbb
addb
aas
mov
jp
test
fisttpll
rolb
add
loope
or
or
xor
dec
xor
or
test
fcmovnu
sahf
ja
add
inc
aas
jg
jne
add
mov
mov
mov
in
leave
add
jmp
stos
arpl
or
pop
cmpsl
aad
cltd
or
or
jg
std
lods
or
or
test
push
jns
loopne
pusha
push
decl
rcll
mov
mov
add
fbstp
addr16
mov
orl
sub
ret
pop
loopne
push
ror
rcr
cmp
gs
aaa
inc
stos
add
insb
jmp
mov
adc
or
fstpt
aas
in
bswap
cld
fwait
gs
dec
popf
push
cltd
test
cmpsb
rorl
lahf
test
clc
faddl
mov
les
xchg
or
mov
or
loope
xchg
pop
fisubrl
fistps
lcall
add
aas
jl
inc
jmp
lahf
inc
mov
pop
mov
xor
pop
dec
mov
inc
or
or
mov
std
pusha
and
adc
mov
addr16
inc
jo
pop
ret
inc
jnp
xchg
dec
jle
aam
jns
roll
and
mov
rorb
frndint
divb
or
lret
push
pop
dec
adc
enter
xchg
mov
dec
pop
orl
sbb
mov
or
xchg
inc
mov
sub
movsb
jb
and
xorl
dec
push
test
sbb
roll
push
push
cmpsl
fisttps
cmpsb
or
rol
add
mov
or
dec
testb
gs
dec
mov
bound
add
sub
mov
testb
fmull
cwtl
mov
dec
js
lahf
sub
push
xchg
jg
xchg
push
shrb
add
jne
incb
mov
mov
cmp
mov
jmp
xorb
jno
jnp
shll
mov
mov
mov
adc
imul
mov
fimull
jbe
xor
inc
xchg
dec
add
cmpl
inc
mov
dec
push
filds
pop
push
aam
or
add
test
push
scas
cmp
cmp
shr
inc
add
pop
inc
sbb
ja
mov
mov
or
and
add
fisttps
add
in
dec
or
and
inc
ss
int3
and
fwait
ret
dec
outsl
add
ja
mov
icebp
outsl
sub
in
shr
push
sub
fsubs
cmpsb
dec
lods
lods
xor
push
dec
push
push
js
push
sub
cmp
and
movsl
gs
push
icebp
mov
push
or
int3
xor
loope
adc
and
inc
mov
push
push
sbb
addr16
jo
je
xchg
fs
mov
push
out
mov
pop
ret
mov
push
rolb
in
inc
xchg
jle
or
je
adc
aaa
lea
fists
mov
leave
cmp
add
inc
movb
mov
aad
shl
push
fists
or
fdivs
rcr
lahf
ret
xor
outsl
mov
test
outsl
lock
outsb
sub
pop
jb
add
cwtl
imul
xor
inc
dec
xor
xchg
inc
rorb
aam
inc
xor
cmp
es
or
push
xchg
sbb
loopne
clc
aad
nop
mov
mov
and
cmpl
sub
sub
movsl
adc
test
inc
push
push
xchg
sbb
xor
int
test
mov
scas
push
stos
adc
adc
je
or
add
adc
pop
push
cmp
adc
pop
cmp
test
imul
cmp
push
mov
int
push
push
lods
loop
sbb
add
add
cs
push
and
sbb
and
xchg
out
push
pop
aam
push
or
push
adc
xor
insl
popf
rolb
mov
and
cltd
dec
aad
dec
jae
jo
cmp
pushf
dec
adc
dec
mov
xor
inc
jle
dec
dec
sub
mov
daa
add
push
popf
ret
enter
and
push
dec
mov
cld
push
add
push
add
mov
std
or
xchg
adc
dec
fisttps
jne
push
sub
dec
sbb
push
push
add
jmp
cmpsl
xchg
sti
push
adc
dec
inc
ret
fldt
mov
mov
add
push
or
leave
cltd
lea
nop
aas
push
sbb
nop
push
push
sbb
jl
push
jmp
xor
and
cmp
sbb
sbbl
sahf
hlt
out
or
nop
dec
dec
pop
mov
mov
movsb
nop
push
dec
and
fs
adc
adc
jo
jb
cmp
inc
mov
cmpb
and
sbb
push
dec
pop
cmp
xchg
jns
mov
push
push
push
sub
sbbb
mov
mov
dec
inc
loope
or
inc
cmpl
mov
jnp
test
lret
inc
in
cmp
pop
cwtl
clc
lret
inc
xor
lods
ja
js
hlt
inc
fldenv
push
addl
test
add
inc
fistpl
push
out
mov
movsb
push
incb
push
das
rcl
enter
cmp
inc
mov
push
movl
mov
ret
int3
pop
ficompl
fnsave
xchg
sbb
sub
pushf
dec
inc
xor
jo
bound
add
outsl
sbb
lcall
sub
or
add
push
adc
shrb
pop
add
mov
in
inc
dec
and
das
push
xchg
shlb
push
repnz
cmpl
test
adc
push
into
push
repnz
inc
sbb
inc
es
aas
mov
inc
enter
mov
pop
and
pmulhuw
fcompl
mov
aas
enter
loope
cmp
in
enter
mov
push
push
adc
stos
stos
sbb
fsubrl
or
or
ss
icebp
jmp
shll
mov
dec
push
cltd
inc
add
push
xchg
pop
pushf
sub
shrb
pop
rcrb
movl
stos
xchg
mov
push
bound
and
call
ret
push
or
pop
xchg
mov
xchg
lahf
xchg
add
movsb
or
or
in
or
shlb
loopne
or
dec
pop
in
mov
jmp
roll
nop
or
inc
and
je
sbb
xor
out
jbe
or
shlb
push
lcall
dec
ds
add
pop
push
jmp
popa
pop
or
lock
les
stos
push
add
mov
add
mov
enter
xor
imul
add
negl
push
fimuls
mov
mov
xchg
adc
inc
fbstp
add
jg
add
dec
es
mov
aas
mov
xor
lea
inc
push
pop
sbb
rolb
aas
pushf
in
in
xchg
lcall
pushf
aas
mov
in
in
mov
add
mov
inc
xchg
push
mov
mov
in
int3
and
cmpsl
movsl
xchg
fs
add
sub
push
add
inc
and
aaa
pop
addb
and
stos
test
add
mov
push
and
or
pop
add
jle
pop
lahf
jmp
fistpl
xchg
or
cmp
pop
mov
pop
test
pop
mov
cmp
and
fstpt
das
mov
movsl
pop
enter
jl
jb
lods
out
xchg
mov
subl
dec
push
cmpl
lods
movsl
not
leave
clc
cmp
pushf
sbb
aad
sbb
roll
inc
cmp
jmp
or
notb
imul
push
inc
ret
dec
pop
enter
daa
pusha
xor
pop
jo
popa
je
scas
xor
aas
movsb
jge
push
add
xchg
add
sub
insb
dec
test
mov
push
leave
aad
sbb
lods
pop
push
cmp
add
inc
in
inc
cmp
jl
push
and
add
mov
lea
lret
jb
in
xor
dec
lods
nop
leave
inc
xor
or
mov
push
push
inc
dec
neg
sbb
insl
pop
xchg
hlt
xor
and
mov
call
sbb
loop
jne
inc
cmp
jl
add
sbb
xchg
xchg
inc
jmp
rorl
sbb
pop
push
enter
push
jmp
jne
pusha
jns
lcall
jo
cmp
sub
js
push
sub
or
popf
pop
or
mov
add
push
pop
dec
orb
mov
xchg
and
add
cmp
dec
aas
mov
add
out
jle
mov
mov
pop
popf
push
or
cmp
push
and
cltd
or
inc
loopne
sbb
in
jle
xor
mov
mov
out
push
fs
jmp
je
jo
je
js
jl
subb
in
testb
push
jmp
test
cs
out
lods
cmp
jb
push
dec
rol
int3
push
sub
xor
not
fcomp
lahf
negl
mov
adc
add
cs
jbe
ret
xor
or
jns
xor
mov
or
sahf
dec
or
push
sahf
xchg
cmpsb
pop
cwtl
fsubrl
icebp
and
outsb
fcoml
mov
mov
mov
or
inc
adc
lahf
jp
mov
arpl
mov
push
push
sub
test
mov
pop
xor
adc
ja
aaa
es
movsl
mov
adc
push
call
mov
shlb
or
movsl
arpl
orb
mov
imul
xchg
adc
bound
or
js
orb
nop
bound
faddl
xchg
movl
stos
sub
dec
test
mov
adc
jg
std
je
test
leave
jne
sbb
jmp
movsl
insl
inc
add
and
dec
imul
jmp
mov
shrb
incb
push
mov
inc
jno
test
jg
insb
insl
popa
stc
mov
sbb
nop
rolb
jmp
pop
ret
nop
push
jmp
push
push
jbe
fists
imul
xor
in
lods
mov
add
aas
mov
push
pop
stos
aam
mov
lea
loope
sub
xchg
clc
incl
add
cmp
lock
or
dec
popa
lcall
dec
or
or
push
repz
pop
dec
aas
xor
minps
cmp
cmp
adc
imul
shrb
int3
cld
adc
loop
pushf
add
inc
insb
or
add
sbbl
jl
pop
addr16
cmpsl
sub
adc
and
movsl
test
aam
and
pop
fsubr
xor
mov
mov
addb
ret
jns
push
jb
inc
fdivl
mov
mov
add
sub
sub
dec
sub
loopne
or
call
lahf
add
jmp
in
andl
insl
push
push
push
mov
shl
pusha
mov
and
jno
inc
dec
insb
mov
mov
pop
dec
sahf
scas
cmp
or
push
insb
adc
sahf
cmp
xor
xchg
out
mov
add
mov
mov
dec
insb
or
into
xchg
jle
push
mov
sub
rolb
inc
into
out
mov
push
jo
lcall
fs
dec
mov
xchg
pop
pop
loopne
pop
sahf
shlb
mov
insb
lock
and
call
mov
push
add
mov
fisttpl
inc
jo
negb
addb
dec
ljmp
pusha
cmpsl
or
mov
testl
test
mov
add
xchg
push
fs
and
je
add
cmpsl
test
mov
test
pop
je
inc
xor
shlb
adc
out
cmp
push
dec
mov
les
and
sub
dec
push
push
shrb
mov
aaa
cmp
inc
sbb
and
add
add
xchg
loope
add
std
cmp
movsl
and
pop
lods
mov
sbb
ss
jb
loope
adc
adc
sbb
repnz
add
cmp
xor
adcl
inc
pmaxsw
inc
push
sahf
sub
mov
xchg
je
add
or
std
add
mov
std
inc
sbbl
pop
adc
je
push
push
push
je
enter
push
xor
and
push
xchg
sub
dec
into
push
gs
adc
lea
and
cmp
repnz
ret
push
inc
stos
cmp
loope
pop
inc
rorb
xchg
cs
adc
dec
lods
stos
jle
test
out
bswap
inc
xor
mov
inc
inc
mov
and
aam
mov
insl
add
sub
xchg
sbb
adc
jae
xchg
callw
adc
xor
jmp
pop
in
adc
dec
inc
xchg
push
add
xchg
pop
dec
mov
jo
mov
and
ret
xor
cmp
cmp
lock
mov
add
inc
sub
dec
push
xchg
adc
ret
dec
push
mov
ret
or
nop
clc
mov
inc
movl
jge
pop
sbb
mov
ret
fimull
sbb
sbbb
push
sub
sbb
jmp
pop
dec
fadd
in
mov
add
test
push
jno
ds
enter
cmp
jno
jo
pop
mov
mov
push
sub
sub
ret
add
lock
stos
mov
xchg
ja
call
xchg
jnp
xor
push
or
xchg
sub
sbb
jo
pop
test
and
xor
xchg
aam
js
or
addl
sub
xchg
add
xchg
dec
loope
jnp
insb
add
ds
in
xchg
xchg
add
in
sahf
sub
mov
cmp
data16
sbb
rolb
mov
sbb
jp
mov
sub
hlt
clc
cld
mov
mov
scas
or
or
je
lret
in
adc
push
sbb
and
aaa
stos
and
sub
xor
xor
cmp
xchg
out
fwait
sub
inc
dec
dec
push
test
pop
pop
in
or
fs
dec
inc
cs
lret
jo
js
in
jns
sbb
test
xchg
mov
mov
lods
je
nop
xchg
or
movsl
push
stc
inc
mov
sub
enter
mov
mov
push
rol
lret
cmp
xor
repnz
mov
xor
push
push
sub
xorb
xchg
out
sbb
jmp
in
push
test
clc
cld
addr16
mov
mov
xchg
or
dec
adc
sbb
sbb
movsb
push
test
aaa
mov
xor
cmp
dec
movsl
push
mov
push
sub
pusha
movsl
push
mov
je
xchg
fisttps
jl
adc
sbb
xchg
xchg
dec
movsl
jb
cwtl
pushf
mov
movsb
cmpsb
test
mov
sbb
test
xchg
xchg
dec
movsl
rol
cmp
xchg
into
rcr
or
adc
mov
cmp
dec
psubusb
dec
add
icebp
cmp
pop
and
mov
mov
dec
test
mov
js
inc
mov
xchg
sub
mov
dec
jl
test
fisubs
pusha
loop
mov
lea
jecxz
mov
add
pop
jp
leave
fldcw
in
xor
cs
fs
addl
pop
sub
nop
das
mov
jecxz
sub
pop
dec
les
rcll
testb
cltd
pop
stos
inc
inc
testb
sbb
jl
rcrb
inc
pop
clc
mov
ret
sub
mov
addl
sbb
imul
mov
adc
aas
inc
loope
pop
je
mov
mov
sbb
popa
data16
fidivs
mov
movl
adc
adc
push
or
jg
inc
push
mov
aam
or
inc
add
nop
cwtl
pop
pop
xor
lret
sub
and
out
sub
test
adc
pop
ret
mov
je
push
ja
pop
sub
xchg
sbb
push
addb
or
in
cmp
xchg
add
push
add
sbb
xor
fadds
xchg
daa
and
je
cmp
inc
sub
adc
arpl
pop
cmpb
push
imul
adc
xor
xchg
js
dec
rcll
and
xchg
orb
rcr
pushf
sbb
cmp
je
stc
nop
notb
inc
inc
addl
sub
push
addr16
jmp
or
lret
subb
dec
dec
mov
je
push
xchg
pop
xor
clc
dec
sti
das
clc
repnz
cmp
pop
pop
pop
je
pop
push
push
popa
nop
pop
leave
adc
cmp
jmp
mov
inc
push
cmpsb
adc
loopne
fildl
or
sub
add
push
push
into
aaa
push
and
popa
xlat
shrl
je
mov
xlat
push
cmc
jne
aad
jno
mov
aad
cmc
or
aam
pop
iret
xlat
adc
mov
iret
pop
stc
cld
mov
adc
jne
out
xor
sahf
decl
insl
dec
setge
inc
cmpsb
or
push
jb
adc
add
jmp
xchg
xchg
lds
loope
cmpsl
stc
insb
and
or
sarb
in
js
inc
fs
pushf
dec
add
mov
xchg
data16
je
int3
push
inc
movsl
je
adc
adc
pop
push
orl
rorb
dec
push
push
mov
jp
shrd
xchg
sub
mov
add
adc
jbe
or
cwtl
pusha
or
pop
ljmp
xor
xchg
push
mov
enter
xchg
push
ret
bound
test
pop
nop
jmp
loopne
sbb
cmp
in
push
sbb
inc
mov
push
lea
cs
icebp
push
push
push
testl
xchg
pop
adcb
xor
push
out
adc
mov
jno
mov
sub
push
or
fnstenv
negb
jmp
test
arpl
mov
mov
push
dec
aas
addb
push
push
cmp
inc
jmp
push
mov
inc
ds
mov
push
rolb
jns
loope
movsl
mov
je
xchg
jo
in
mov
mov
sbb
sub
mov
neg
cltd
popa
sbb
stos
test
dec
pop
dec
sub
outsl
pushl
sub
push
cmpb
mov
adc
mov
adc
push
rorb
jl
push
pop
add
addb
sub
push
stos
adcb
xchg
cmp
inc
mov
push
ss
loope
cmp
or
pop
pop
ud2
pop
jg
dec
inc
push
into
add
nop
mov
push
push
arpl
cmpsl
mov
cmpl
rcrb
test
loope
pop
test
push
inc
sub
ret
inc
cmpsb
jl
pop
add
mov
mov
orl
xchg
push
js
out
or
pop
test
gs
test
arpl
xchg
cmp
add
fcoml
sbb
je
or
mov
fnstsw
sub
repnz
leave
enter
fnsave
jb
std
inc
xchg
inc
mov
cmp
jl
and
pop
daa
pop
incb
scas
dec
cmp
mov
cmp
jne
push
push
xor
inc
mov
sub
and
loopne
sub
push
and
mov
pop
add
adc
sbb
je
cmp
lea
ja
adc
xor
outsl
and
mov
cld
sbb
mov
pop
jnp
or
test
pop
fstpt
pop
lods
pop
push
pop
pop
mov
inc
sbb
push
mov
test
or
sbb
pop
and
xchg
insl
imul
mov
push
cmp
or
adc
cmc
xchg
std
ret
dec
rcll
and
mov
mov
iret
sarb
cmp
or
and
add
mov
adc
fistps
lahf
addl
addl
xchg
sub
cmc
add
or
pop
push
pop
xchg
ja
emms
xchg
dec
sbb
push
and
adc
popa
sbb
out
jmp
inc
or
aad
push
inc
add
sbb
add
add
shll
sub
jge
sub
in
iret
dec
inc
mov
aas
addr16
inc
es
ret
pop
punpcklwd
mov
xor
sbb
and
dec
fmull
xlat
sub
push
mov
test
mov
add
push
aas
push
mov
pop
or
enter
sbb
fs
and
mov
or
loope
rcll
mov
sbb
aas
push
outsb
pop
ret
jo
mov
adc
push
in
or
or
adc
mov
pop
pop
push
push
test
bnd
mov
ret
add
cmp
js
fstpt
test
mov
les
mov
insl
xor
xor
lcall
pop
adc
or
sub
cmp
adcl
mov
aam
adc
push
insb
sub
xchg
and
dec
pop
adc
sbb
push
fsubrl
cmp
lea
hlt
push
imul
push
adc
push
pop
push
adc
xchg
les
into
arpl
dec
pop
mov
add
or
dec
lea
pop
insl
imul
add
inc
sti
xchg
sub
cmp
pop
or
push
and
mov
ret
xchg
push
mov
fcomps
sub
mov
iret
mov
mov
fcoml
adc
mov
adc
adc
dec
push
or
inc
push
push
push
jae
lcall
xor
sarl
iret
push
pop
nop
push
add
xchg
push
push
add
push
lea
or
sbb
aas
out
add
cld
mov
push
sub
add
and
cmp
or
ret
int
dec
adc
les
fidivrs
incb
rcrb
and
sbb
adc
pop
mov
jbe
icebp
je
sbb
sarl
sbb
cmp
push
outsl
adc
xchg
test
pop
cmp
add
pop
sbb
mov
mov
cmp
sub
xchg
mov
push
dec
inc
adc
push
mov
adc
lds
sbb
mov
pop
dec
dec
dec
mov
and
pop
pop
dec
lea
push
dec
in
sbb
pop
fldl
sbb
ret
jl
outsb
pop
daa
pop
inc
bnd
lea
sbb
ds
mov
cmp
divb
and
pop
test
out
lret
lods
xchg
add
push
cmp
pop
sub
mov
loopne
out
sbb
testb
cmpsb
push
adc
push
stc
divl
or
outsl
sbb
mov
jmp
xor
flds
sub
mov
jl
test
dec
mov
adc
fcomps
dec
push
inc
push
inc
and
pop
pop
lods
jae
inc
jecxz
prefetch
adc
std
add
movsb
ret
out
in
adc
dec
add
xchg
je
movsl
rcrb
push
dec
inc
and
movsl
or
imulb
push
push
mov
and
sbb
lds
sub
and
ja
mov
adc
sbb
sub
daa
adc
pop
dec
xlat
push
fisttpll
add
push
imul
lret
movsb
test
push
adc
ds
or
push
push
lea
add
or
adc
testb
jae
adc
or
push
sbb
imul
jg
loope
push
pop
jno
sbb
call
mov
mov
mov
lods
lret
cmp
xchg
sbbb
lahf
xchg
mov
adc
stos
in
jge
push
movsb
call
sbb
or
subl
or
call
out
add
cmp
jne
and
or
add
or
inc
pop
in
jecxz
or
jle
push
orl
add
stos
inc
fidivrl
faddl
lret
push
ss
push
roll
xchg
cmp
add
xchg
push
cmpsl
cmp
mov
cwtl
and
jge
lea
cmp
fsubrs
gs
xchg
shlb
insb
sbb
fdivl
mov
paddsb
sbb
pop
ret
lahf
mov
cmpb
lea
add
push
mov
jno
jno
sbb
dec
rorl
int
mov
rcll
dec
sub
iret
mov
mov
mov
adc
adc
fstl
movsl
clc
pop
int3
xchg
jg
inc
pop
cmp
aas
xchg
push
ds
mov
gs
out
test
cmp
in
mov
sub
and
fisttps
sub
mov
mov
insb
or
lock
pop
lods
sub
das
push
insb
add
xor
sahf
andb
icebp
rorl
sarl
dec
push
mov
cmp
into
push
jb
xor
test
fmuls
enter
and
dec
add
stos
sub
es
es
int3
dec
and
add
mov
shrl
repnz
pop
lock
cwtl
into
xchg
inc
sub
iret
sub
add
inc
les
sub
aas
sbb
xchg
aad
jnp
and
loope
and
or
mov
pop
xchg
in
mov
or
mov
and
inc
test
mull
cmp
mov
je
xorl
jg
or
xor
cmp
insb
ljmp
cmp
jmp
push
dec
pop
outsb
cmp
pop
fstpl
dec
sbb
add
sbb
fs
add
add
cmp
sbb
test
lea
inc
or
sbb
dec
std
fcompl
mov
add
mov
lret
lock
test
add
mov
jns
into
inc
call
jl
pop
push
je
addl
int
pop
mov
pop
jo
xor
push
daa
mov
add
sbb
dec
test
xchg
cmp
vxorps
pop
jl
sarl
xor
sub
or
inc
shrl
ret
adc
jp
rclb
sbb
pop
and
or
sbb
in
mov
jns
inc
xor
loop
iret
and
jo
adc
cmc
movsl
push
sub
test
add
ja
mov
sbb
test
sub
pop
or
xchg
lock
sbb
iret
out
lret
addl
pop
or
jnp
pushf
inc
or
fistl
cmp
lods
add
rcll
add
testl
add
push
push
add
out
and
shll
or
add
gs
loope
xor
or
sub
cmpsb
pusha
sbb
mov
cmc
cltd
adc
or
and
lea
repz
cli
test
add
sbb
std
je
mov
or
cmp
mov
mov
out
adc
dec
data16
movsb
out
jp
mov
push
or
cmp
mov
pop
cld
push
sbb
add
add
and
sbb
mov
sub
add
ja
and
jecxz
rclb
cmp
add
xor
std
push
stc
push
or
enter
and
movsl
sbb
hlt
fisttpll
out
add
jp
sbb
pop
inc
inc
add
add
mov
push
adc
push
pusha
pop
pushf
lods
ret
cmpsl
test
popa
lahf
add
adc
mov
mov
add
fdivrl
adc
dec
pop
loop
push
or
fists
std
lahf
rcrb
imul
movb
push
mov
push
rcll
mov
jo
mov
ds
push
cmp
je
mul
sbb
je
or
les
mov
or
jo,pn
adc
stos
or
loopne
clc
inc
cmpsl
jnp
scas
sub
add
je
je
mov
das
popa
sub
movsl
orb
shr
and
push
mov
shll
sub
mov
dec
adc
insb
test
jmp
dec
pop
xchg
repnz
dec
mov
pop
or
xchg
pop
jecxz
or
out
out
add
push
adc
mov
sub
adc
js
pop
fists
jo
sub
or
insb
push
xchg
nop
fisttpl
dec
dec
inc
cli
push
cmp
sbb
sub
or
lock
adc
lds
jge
xorl
xchg
out
movsb
pop
icebp
push
or
subl
lock
lock
push
push
mov
popf
call
in
sbb
add
shlb
fprem
and
jmp
lea
arpl
and
jns
push
loop
xchg
jno
xor
adc
nop
rorb
sbb
xor
or
int
jno
push
test
lods
adc
mov
mov
loopne
pushl
jno
adc
sbb
add
and
nop
pop
dec
dec
sbb
pop
jmp
enter
dec
outsl
and
or
or
lods
sbb
adc
out
dec
imul
inc
movl
cwtl
xor
push
pop
cmp
xor
ds
or
aad
xor
inc
adc
pushf
mov
mov
testb
xchg
add
xchg
sbb
xor
or
dec
rorb
aaa
inc
add
xlat
jecxz
xchg
lock
dec
cmp
insb
and
pop
push
loope
adc
xchg
imul
mov
orl
inc
mov
push
imul
pop
call
add
call
and
fbstp
fsubrs
inc
daa
and
mov
clc
imul
xchg
sbbl
cmp
mov
filds
adc
fdivs
into
and
adc
inc
add
sub
mov
rorb
dec
lds
idivl
pop
bnd
jg
push
jle
mov
add
icebp
lods
or
pop
or
mov
jae
or
movb
insb
bound
adc
push
mov
aas
icebp
and
adc
jmp
movsb
cltd
leave
jmp
mov
mov
push
dec
pop
add
xor
add
sbb
xchg
lock
insb
cmp
mov
test
in
cmpb
sahf
and
lret
cmp
movsb
sti
movl
dec
fs
cmpsb
fs
jo
test
cwtl
lods
js
inc
push
test
add
adc
add
in
xchg
or
and
leave
cmp
xchg
dec
imul
dec
jo
add
sbb
pop
ret
loope
rcrb
and
mov
mov
pop
subb
sahf
jl
test
xchg
nop
xchg
or
mov
dec
sbb
pop
push
push
in
jb
mov
outsb
enter
shl
sahf
aam
mov
push
add
test
sub
mov
movsl
adc
loop
loopne
and
and
in
mov
hlt
lock
xlat
ret
mov
pop
adc
or
xchg
nop
cwtl
xchg
mov
lods
das
xchg
out
mov
sbb
add
mov
xor
sub
push
sbb
xor
push
add
lea
in
ret
xchg
or
and
jb
dec
mov
dec
add
inc
imul
cmp
push
mov
loope
fmuls
or
pushf
fbld
pop
and
arpl
push
addl
sub
es
adc
xor
loope
jae
sbb
pop
inc
push
inc
arpl
mov
inc
inc
inc
adc
sub
mov
imul
inc
push
sbb
pusha
pushf
sti
insb
dec
xchg
jmp
cmc
shr
mov
imul
dec
test
jne
xor
loopne
lds
in
int
sbb
xchg
pop
enter
imul
sbb
sti
shrb
scas
add
sub
fcompl
pushf
insl
mov
je
sbbl
dec
adc
leave
andl
sbbl
add
dec
jnp
push
fmuls
sbbl
nop
fistpl
cmp
pop
nop
xchg
add
or
xchg
add
cmp
and
sbb
fstpl
insl
jne
iret
inc
and
sbb
lret
pop
or
xor
mov
dec
pop
mov
fadds
es
mov
gs
add
scas
sbb
xor
mov
adc
inc
insb
mov
jns
and
inc
mov
je
jo
loopne
add
rcrb
out
mov
push
addl
mov
inc
loope
mov
enter
mov
pop
cmp
cmp
push
sub
aam
cmp
jne
pop
popa
mov
fsts
sbbl
xchg
dec
pop
insl
xor
cmp
mov
mov
push
pop
into
push
ja
je
jmp
dec
inc
lret
sub
rolb
push
cmp
and
repnz
sub
testl
push
push
cmp
in
cmp
sub
cld
daa
pop
shrl
mov
jne
aam
ds
inc
cmp
mov
push
scas
orl
or
push
adc
and
sub
xchg
xor
push
add
test
leave
cmp
int3
pop
shrb
mov
leave
adc
inc
add
or
or
cmp
ds
and
cmp
push
sub
pop
call
push
pop
xor
lock
sub
lahf
mov
xor
rorl
sub
mov
mov
mov
repz
pop
inc
shlb
imul
sub
xchg
ja
cmp
inc
sbb
insb
dec
xchg
cmpl
mov
push
dec
or
mov
add
mov
int3
mov
add
sbb
mov
inc
adc
add
mov
dec
insl
mov
pusha
push
cli
or
ja
adc
fbld
aad
sub
clc
je
mov
jl
sbb
push
lea
mov
cmc
arpl
fmuls
shll
push
das
fsubrl
dec
movl
xor
cmc
mov
out
fldt
mov
cwtl
xor
pop
dec
push
or
pop
outsl
enter
pop
das
clc
daa
xor
mov
cmp
push
sbbb
push
lahf
outsb
or
mov
add
int3
test
and
xchg
enter
fdivs
push
sbb
sbb
push
popa
insb
add
mov
add
jne
sub
cmp
sub
clc
push
adc
push
mov
adc
pop
lds
add
js
xchg
pop
lods
inc
pop
cmp
adc
adc
cmpsb
rorb
inc
jne
push
or
cltd
pop
imul
push
sub
or
push
cmc
loop
xor
ds
adc
test
scas
icebp
mov
pusha
push
jl
xchg
fs
iret
push
jl
add
lea
loopne
cmp
adc
cmp
lods
icebp
out
adcl
pushf
incl
mov
outsb
dec
mov
shll
mov
xchg
vmovss
pop
adc
cmpsl
mov
mov
out
shr
pop
jmp
pop
mov
jne
popf
sbbb
mov
cmp
mov
and
mov
push
xor
pop
mov
pop
jo
push
lea
xchg
inc
mov
dec
sbb
xor
in
inc
jo
jge
mov
adc
insl
aas
dec
je
clc
mov
cmp
add
sub
adc
or
jns
push
rcrl
out
lcall
push
fmull
and
outsl
push
inc
xorb
dec
mov
jo
push
loope
cmp
sbb
and
test
cwtl
lods
mov
test
push
test
rorb
popl
jmp
outsl
dec
lods
or
pop
stos
cmp
lds
jl
pusha
dec
add
sub
or
mov
adc
or
cwtl
cmp
adc
adc
add
add
test
push
mov
add
or
pop
xchg
add
outsb
jle
pop
add
or
les
dec
pop
or
xlat
xor
negb
push
pop
mov
mov
sbb
xchg
in
adc
push
or
xor
scas
shlb
cmp
adc
adc
lock
adc
jae
jmp
mov
lea
imul
adc
jne
jne
cmpsb
pop
cmp
sbb
fcmovnb
push
dec
and
inc
out
push
pop
pop
xor
sub
or
jp
repnz
cld
rcll
fmull
xchg
movsl
cmp
iret
push
push
mov
push
popa
jl
and
insb
cmp
jb
add
test
and
add
in
addl
dec
cmp
call
push
mov
pop
mov
addr16
add
in
fsubrs
pop
add
lods
push
sbb
fldl
pop
cmp
lods
xchg
lock
in
or
pop
cld
insb
shl
mov
push
ja
ffreep
jmp
rorw
pop
pop
jle
jns
outsl
stos
orl
mov
jecxz
dec
sbb
fcoms
cmp
out
mov
mov
sbbl
inc
xor
test
mov
or
push
js
outsl
pusha
aad
pop
add
out
rcrb
push
out
pop
mov
loop
add
cmp
mov
leave
mov
inc
out
mov
out
aas
dec
add
test
adc
xor
pushf
jmp
adc
jmp
dec
or
cld
and
imul
push
mov
jbe
fdivrp
xor
mov
sub
cmp
mov
mov
push
mov
cmp
not
mov
lea
es
rcl
aas
add
pop
xor
sbb
jne
jecxz
cmc
adc
adc
cli
pop
xchg
xchg
inc
sahf
cmp
pop
push
mov
sbb
xor
sbb
mov
popa
sub
add
or
adc
ret
inc
sbb
dec
test
push
inc
push
enter
mov
push
leave
adc
js
cmp
sbb
jmp
push
sub
stc
jns
push
and
imul
sbb
jmp
inc
push
cmp
dec
or
push
mov
adc
cmp
repz
insl
adcl
sti
fisubrl
inc
es
push
jecxz
repz
push
out
sbb
inc
lcall
dec
inc
fwait
add
ds
repz
inc
lret
xlat
push
inc
sarl
out
imul
out
jns
cltd
jmp
sti
fsubp
jns
negb
dec
pop
insb
jne
ds
inc
test
dec
cs
aas
sbb
sub
loop
push
mov
les
push
or
jmp
xchg
xor
js
inc
xor
and
out
fidivl
jo
push
shrl
and
and
cli
sub
loope
lahf
lahf
dec
mov
test
arpl
dec
mov
call
inc
xchg
xor
and
outsb
popa
lock
incl
mov
aaa
arpl
and
mov
call
ja
aas
sbb
stos
cmpl
add
int
jge
sbb
add
int3
mov
xchg
xchg
add
daa
jecxz
pop
xor
outsl
sub
pusha
sbb
cmp
imul
mov
and
xchg
adc
loope
fisubrs
xor
jbe
pop
or
adc
pop
xchg
or
xchg
pop
out
push
mov
sub
mov
and
xchg
dec
cmpsb
sub
mov
ljmp
xchg
mov
andl
mov
cmpl
into
cmpsl
mov
dec
jle
in
call
aam
movsb
dec
add
mov
sbbb
enter
xor
xor
cmpsb
cmp
adc
int3
mov
mov
push
cmp
cmp
adcb
xchg
or
mov
fs
sbb
and
jl
sub
lret
clc
aam
cmp
push
sbb
data16
push
pop
pop
jns
or
push
aas
add
dec
mov
mov
lods
lea
cmp
into
xchg
dec
adc
dec
pop
ret
or
adc
mov
addr16
pop
jne
dec
test
push
movsl
and
lret
aas
call
cmp
adc
in
push
test
or
subb
xchg
ret
xchg
mov
stc
adc
pop
and
mov
mov
lahf
mov
mov
add
add
outsb
ss
push
jmp
sbb
pop
push
dec
movsl
jns
mov
push
dec
insl
insl
call
mov
mulps
movsw
add
sahf
out
les
dec
adc
sub
xchg
mov
xlat
fbstp
sarb
push
mov
xchg
push
xor
push
aas
rcll
push
and
test
push
and
push
es
lea
jo
mov
cmp
push
lds
cld
jbe
cmp
rcrb
xor
pop
mov
sarb
test
insl
movsl
fdiv
push
mov
jno
or
pop
xor
push
rol
xor
jnp
les
xchg
popf
sbb
sbb
cmpsl
les
jne
lret
add
cld
fnstcw
dec
xor
mov
push
insb
push
and
sbb
shlb
bound
movl
cmp
aas
jne
or
add
jle
push
pop
out
daa
mov
aaa
popa
shll
xor
pushf
addr16
xor
aam
repz
sbb
sbb
mov
push
ficomps
jp
add
mov
push
adcb
pop
cwtl
call
push
scas
call
adc
fimuls
dec
jae
inc
insl
cmp
and
mov
rorb
mov
sbb
and
call
jne
mov
adc
aam
and
test
inc
sbb
sub
adc
arpl
or
fnstsw
push
adc
shr
and
xor
movsl
and
mov
sub
xchg
mov
or
mov
orl
out
push
mov
mov
dec
mov
push
mov
mov
test
mov
sbb
aaa
mov
dec
repnz
sbb
in
mov
idivb
je
lea
sbb
and
jecxz
xchg
jbe
test
js
fildl
test
push
push
or
out
xor
pop
inc
test
cwtl
les
or
push
and
inc
rorb
stos
das
lods
enter
lcall
loopne
lock
push
sub
add
add
jo
push
pushf
jns
pushf
lods
pop
pop
rorl
hlt
mov
addl
xor
push
add
int3
loope
xchg
fsubs
push
xchg
push
push
pop
inc
fimuls
lret
sub
add
inc
ficoml
mov
sub
mov
inc
pop
jl
mov
lret
js
ret
je
loope
xchg
ret
popl
ja
lret
push
js
je
pop
dec
add
pop
dec
and
hlt
jo
pop
ret
mov
and
dec
mov
adc
cmpsb
aad
mov
fisubs
je
and
test
stc
jbe
imull
and
nop
xchg
sar
inc
insl
jmp
inc
mov
pop
cmp
mov
pop
push
push
dec
lds
loope
adc
or
dec
sbb
push
xor
adc
mov
xor
fsubs
iret
xor
push
iret
mov
sbb
fimull
lock
lods
pushf
sub
xor
movsb
xor
push
pop
mov
clc
jo
add
cs
loopne
push
pop
repz
repz
outsl
push
cmp
outsb
lods
lock
jmp
pusha
adc
push
outsl
mov
aam
mov
dec
cmpl
inc
sub
xchg
jae
add
call
dec
sbb
jmp
and
sbb
loop
adc
adc
sbb
mov
inc
bound
dec
jne
xchg
ficompl
aad
dec
cmp
xor
jmp
sbb
pusha
dec
and
cmp
sbb
out
loope
ljmp
lea
xchg
sbbb
cmp
pop
adc
sbb
cmp
xchg
xchg
sbb
jecxz
or
and
dec
add
inc
cmpsl
add
dec
sti
pop
jl
iret
cld
fisttpll
mov
aas
imul
push
push
jmp
xor
test
daa
jne
movb
loopne
sarb
lea
and
je
lea
or
mov
lea
and
cmp
loop
dec
adc
hlt
cmpsl
fistl
pop
jmp
add
jmp
push
call
lcall
dec
js
lea
mov
push
add
mov
dec
push
dec
sbb
adc
or
jns
mov
cmpsl
pop
sbb
push
jp
bound
insl
ret
add
sahf
jmp
jnp
fucom
lret
mov
orb
mov
dec
outsl
pop
cmp
jle
icebp
insb
movsb
pop
add
dec
sbb
mov
mov
dec
negb
pop
mov
inc
inc
push
out
or
loope
dec
orb
jo
js
dec
sub
fcmove
mov
cmp
adc
clc
dec
or
dec
sti
mov
jmp
enter
enter
int3
shr
movb
andl
add
jno
push
push
scas
idivb
push
movsl
pop
sbb
or
test
push
imul
pop
xchg
lods
inc
or
jmp
lret
stc
pop
enter
mov
mov
adc
push
test
mov
paddusw
jp
imul
mov
xor
inc
xlat
xor
mov
adc
push
pop
xchg
jb
mov
js
out
sub
dec
lea
xchg
inc
inc
jnp
push
sbb
jecxz
sarl
jne
shll
pop
or
dec
repnz
cmpsb
imul
fcoml
push
dec
mov
pushf
pop
sub
in
and
call
cld
and
mov
subb
test
icebp
jne
mov
mov
add
jo
cmp
pop
inc
iret
push
xchg
clc
cmpsl
push
pop
cmp
loopne
ret
cld
sbb
add
mov
mov
and
arpl
xor
iret
pop
mov
inc
pop
sub
std
add
pop
and
mov
xchg
movsb
shr
sub
out
or
or
insb
popf
push
add
jns
outsb
mov
stos
call
adc
pusha
bound
mov
dec
pop
dec
sarb
loopne
pop
xchg
push
fcmovnb
jmp
lock
inc
cmp
jl
in
pop
inc
and
push
and
arpl
jne
es
loope
pop
sub
and
or
lcall
inc
xchg
sbb
mov
int
outsb
mov
ret
sbb
mov
cmpsb
add
or
in
add
add
cwtl
and
shrb
adc
sub
lea
add
cmc
xchg
pop
mov
sbb
dec
xchg
mov
jp
sbb
jbe
cmc
rcl
jg
lea
mov
adc
mov
jg
mov
xchg
add
fildll
and
dec
cld
test
testl
add
dec
or
nop
jb
pop
mov
adc
in
sbb
push
and
push
pop
pop
scas
outsb
jmp
into
jg
xchg
adc
inc
popa
mov
xor
ds
inc
and
and
cmpsl
ljmp
push
add
pop
enter
fmull
jnp
in
or
jb
js
push
lea
sub
xlat
pop
xchg
or
outsl
jp
adc
push
and
jb
jmp
jle
xchg
adc
add
add
out
add
jne
inc
dec
and
add
add
push
pusha
nop
mov
repnz
jmp
decl
cmp
test
pop
inc
test
or
loopne
cld
pop
push
push
cmpl
je
mov
sub
cmp
popa
das
lods
lea
push
add
arpl
movsl
test
insl
rolb
push
jne
call
mov
jb
sbb
inc
xor
fstl
es
xor
pop
jp
cwtl
sub
or
aas
add
cli
movsb
mov
jae
jnp
mov
push
inc
mov
push
cwtl
enter
add
inc
les
jo
inc
sbb
aas
shl
add
cmp
inc
dec
push
movb
movq
inc
adc
push
std
pop
pop
lock
fwait
or
inc
xor
sti
and
push
in
mov
add
add
mov
push
test
loopne
rorl
test
cmp
sub
add
push
jb
mov
or
imul
add
push
sbb
cmp
or
in
cmp
int
cli
or
pop
inc
fcmovnbe
or
inc
cli
js
ja
mov
icebp
mov
std
cmp
push
push
sub
pop
push
sub
lock
pushf
or
inc
loop
push
inc
mov
jecxz
push
dec
mov
rolb
clc
test
fwait
ds
inc
adc
mov
rclb
ret
inc
aam
ss
daa
or
fstps
sbb
outsl
push
xor
rcrl
pop
sarb
js
nop
push
jle
cwtl
add
cmp
ljmp
arpl
fs
push
sbb
mov
sbb
ret
lea
mov
adc
push
dec
outsb
sbb
rclb
dec
call
push
jb
and
or
flds
add
add
inc
cmp
or
data16
cmp
rol
rcll
ficoml
jl
sbb
xchg
in
pop
shlb
sbbl
jmp
je
cwtl
pop
or
or
inc
push
inc
daa
loop
nop
aad
roll
bound
sarb
xlat
jns
leave
xchg
jge
and
sub
sahf
popa
loope
push
pop
mov
pusha
push
sub
dec
imul
jo
dec
and
sbb
jmp
test
aaa
movsb
push
inc
arpl
jmp
adc
mov
out
scas
pop
cmp
repnz
sbb
push
loopne
test
fstl
loopne
jb
jo
popa
loop
pop
lock
pop
filds
mov
jmp
clc
nop
lahf
add
dec
xlat
push
sbb
js
sub
add
mov
jg
xlat
fisubrs
or
xor
cmpb
add
adc
rclb
leave
cmpsb
pop
shll
push
mov
pop
jecxz
push
scas
push
test
or
pop
js
ds
add
test
jmp
ja
mov
pop
in
subl
mov
mov
mov
lock
aas
add
inc
cmpb
cmovo
or
adc
mov
test
push
sbb
xchg
enter
cld
fadds
or
pop
push
adc
mov
daa
in
push
mov
xchg
lret
mov
pop
data16
pop
mov
hlt
pop
lock
mov
arpl
lret
push
add
and
fsubrs
mov
outsl
test
inc
mov
mov
xchg
push
clc
jne
or
push
and
js
mov
push
test
adc
dec
jno
dec
inc
jl
ret
mov
sub
ljmp
mov
inc
stos
icebp
jmp
mov
push
daa
rorb
js
data16
lahf
dec
push
pop
jns
fnstcw
xchg
jns
mov
cmpl
adc
fsubs
pop
cli
jl
mulb
jl
lret
pop
in
sbb
add
mov
push
push
lds
movsl
pop
cmp
out
pop
sub
push
push
rclb
xchg
add
push
cmpsl
mov
and
mov
mov
or
lock
sub
xchg
dec
andl
scas
mov
mov
mov
fistps
loop
or
sub
xlat
jo
ss
sub
push
xchg
nop
push
lcall
out
pop
int
add
push
jo
xor
mov
sub
and
mov
mov
push
movl
sarb
add
jo
mov
pop
lea
or
mov
ret
push
xchg
lea
add
add
push
ret
dec
rclb
push
mov
sbb
and
xor
repnz
pop
sbb
or
push
mov
es
ret
xchg
cmp
in
arpl
add
int3
or
and
xchg
adc
addr16
jmp
sbb
fistpll
inc
sub
cmp
pusha
push
mov
xor
mov
push
mov
test
insb
push
rorb
sarl
jne
hlt
popf
mov
aam
and
dec
mov
jo
jge
mov
lea
xchg
loopne
add
cwtl
dec
add
xchg
push
pop
xchg
fimuls
test
cmp
out
adc
int
jmp
movsb
mov
fwait
in
adcb
pop
movaps
cmpb
cld
add
ret
push
scas
cli
hlt
popa
adc
jbe
leave
mov
mov
iret
loope
inc
imul
dec
sub
mov
aas
lahf
ret
subl
shrl
cmp
lds
jbe
add
cmp
out
testl
xchg
jmp
mov
mov
lods
xor
pop
mov
movsb
push
add
pop
cmp
adc
js
adc
cs
fwait
and
fists
jmp
push
and
mov
cmpsb
dec
rclb
or
and
jne
or
sub
cmp
sbb
hlt
pop
iret
or
add
add
dec
cmp
pop
inc
ret
subl
aas
sbb
pop
scas
outsl
push
sbb
jbe
mov
push
xlat
inc
dec
push
mov
into
add
mov
sahf
adc
mov
add
jne
cmpb
jp
mov
push
pop
ret
ret
lahf
push
out
sbb
sbbl
mov
repnz
aam
xor
push
test
adc
push
and
shlb
push
mov
lahf
mov
dec
in
push
ret
and
pop
cmp
push
mov
jo
xchg
sbb
sbb
inc
js
sbb
xor
pop
orb
stc
xchg
push
test
cmpb
cmp
adc
jae
test
popa
inc
push
loopne
or
push
call
dec
cld
sbb
pop
add
push
call
mov
out
mov
imul
or
mov
movl
sbb
sub
inc
fcomps
fsubl
fsubrl
or
and
clc
lock
sbb
insb
loopne
cmp
and
mov
js
mov
pop
into
xchg
push
pop
rcll
movsl
jo
test
aas
sbb
push
fmull
aas
outsb
ja
push
ljmp
fadds
add
insl
add
or
sub
sub
jmp
ds
add
jae
sbb
int3
ret
std
insb
les
sub
adc
jge
out
lock
mov
xchg
jl
adcb
mov
gs
jne
xor
aaa
scas
shl
sbb
push
in
into
lock
test
fs
or
and
cwtl
sbb
repnz
sub
cwtl
movsb
call
push
test
bound
and
mov
sbb
cmp
je
fistpl
ret
adc
inc
add
scas
push
pusha
shlb
xchg
push
imul
testl
sub
sub
push
add
daa
hlt
adcb
in
push
push
sub
and
add
mov
mov
sahf
arpl
add
mov
ja
push
push
push
cld
sub
add
cwtl
adc
sbb
cmp
inc
shll
mov
out
adc
or
cli
in
adc
ss
mov
into
aas
lret
leave
adcl
sub
out
das
add
xor
jne
or
mov
xor
pusha
test
popa
dec
daa
mov
movl
xor
sarl
and
mov
adc
subb
adc
es
inc
rclb
scas
push
push
mov
xlat
adc
iret
mov
or
clc
js
mov
iret
fldl
fwait
test
push
lret
and
or
jmp
add
movsb
lods
mov
adc
pop
and
or
test
xor
frstor
mov
je
or
and
popf
mov
pop
push
shrb
out
adc
les
addr16
pop
es
test
incl
fucom
or
mov
or
cmp
nop
roll
test
int3
push
or
or
add
out
mul
adc
jmp
mov
cmp
jmp
push
jp
add
andl
inc
xchg
mov
cmp
je
lds
xchg
cwtl
xchg
addr16
jne
icebp
call
mov
or
push
cmpsl
insb
and
sbb
ds
and
xchg
inc
jne
mov
inc
mov
lret
pop
jl
fidivs
ret
lock
sbb
mov
adc
pop
test
arpl
pop
pop
push
cmpl
push
add
add
lcall
add
pop
mov
lcall
inc
sbb
jne
inc
inc
adc
jmp
inc
shll
push
push
jge
xor
add
imul
xchg
dec
jne
cmp
add
jge
pop
jecxz
pop
iret
inc
mov
insl
or
and
lret
pop
xchg
call
fisttpl
mov
mov
shrl
pop
jecxz
sub
push
add
xchg
add
sarb
icebp
mov
jbe
std
add
mov
sbb
insb
in
bound
fld1
sub
xchg
rcrb
sbbb
jae
loope
or
repz
dec
es
mov
inc
ljmp
push
roll
jmp
push
out
mov
or
push
mov
adc
mov
pop
dec
xor
sbb
ljmp
gs
lods
jecxz
iret
cmpsb
int
fiadds
add
add
pop
pop
push
xor
add
inc
pushf
adc
push
sbb
mov
rcr
fdivl
push
cmp
push
push
in
out
outsb
dec
push
cmpb
pop
mov
xor
rcrb
dec
push
push
push
push
push
push
sub
pop
popa
jnp
lock
push
stos
dec
mov
aad
sub
pop
pusha
sub
add
gs
pushf
jb
cmpb
xor
push
xor
stos
and
inc
dec
in
shr
pop
not
push
push
lods
pop
add
ljmp
and
sub
push
sub
lea
roll
ljmp
adc
inc
mov
push
push
push
xor
pop
bound
repnz
ljmp
enter
mov
roll
sbb
test
adcb
xor
mov
pop
add
add
dec
test
add
cmp
add
call
sub
out
arpl
sub
int
or
mov
les
sub
orl
andb
xor
or
or
fadds
jmp
outsb
jmp
mov
and
and
inc
test
in
xchg
jns
roll
rorb
aam
inc
inc
je
mov
jae
aam
dec
sbb
movsl
push
jl
mov
adc
movsb
mov
add
sbb
aas
jmp
jae
or
mov
jno
bswap
push
cs
adc
push
sub
cmc
and
push
or
jo
into
sub
adc
or
jb
cmp
ret
fcmovbe
outsl
dec
add
xor
daa
mov
scas
shl
in
xlat
pop
lret
dec
push
ret
stc
xchg
push
ja
pop
sbb
cmp
stos
sub
xchg
add
int
and
into
lret
jne
iret
push
push
jg
xor
push
add
xchg
loopne
sub
mov
xchg
add
lods
mov
xor
aad
push
sbb
aas
mov
pushf
sbbb
adc
pop
leave
add
mov
add
pop
push
push
scas
imul
cld
xor
add
mov
lea
mov
inc
or
popa
sbb
sub
adc
hlt
jle
pop
lea
arpl
push
outsb
scas
arpl
fbld
lret
dec
cmp
adc
xchg
xor
sub
cmpl
mov
jle
or
lods
clc
das
pusha
inc
mov
rorb
out
addb
cmpl
xchg
mov
stos
push
xor
inc
sahf
inc
sub
ljmp
je
bound
std
mov
xor
lcall
lods
push
push
add
mov
icebp
ja
push
adc
sub
movsl
jmp
int3
nop
divb
das
push
mov
cltd
cwtl
push
push
xor
fnstsw
idiv
fidivs
add
xor
cmp
es
ficoml
clc
xor
test
popf
divb
shll
ret
inc
sbb
adc
xor
add
test
dec
add
sub
fldcw
jbe
push
add
mov
xor
xchg
pop
mov
mov
dec
push
les
push
mov
push
mov
sahf
fimuls
pusha
movsb
jnp
jle
and
push
imul
addb
call
or
into
sbb
adc
ss
push
in
inc
pop
adc
push
fwait
dec
orb
dec
rcr
scas
and
dec
mov
jmp
sub
xor
movswl
adcl
xor
jp
cmpsl
xchg
dec
inc
push
dec
mov
bnd
pop
pushaw
inc
push
repz
mov
data16
add
jno
jg
add
add
add
add
sbb
inc
adc
sub
adc
iret
repz
imul
dec
aad
cmpsl
repnz
push
hlt
mov
xor
pop
and
shll
mov
sub
pusha
jne
mov
clc
sbb
cmp
adcl
mov
dec
inc
dec
sub
mov
lcall
scas
mov
jb
scas
cmpsb
push
pop
sbb
mov
or
push
movsb
xchg
mov
dec
xor
push
xchg
outsb
push
push
ds
push
stc
xor
in
sbb
cs
mov
or
sub
in
pop
xor
sub
shld
mov
add
xchg
int3
cmp
sub
xor
in
add
push
sub
js
lock
cli
je
pusha
mov
movsb
adc
mov
pop
pusha
xchg
jp
push
adc
inc
jg
xchg
pusha
cwtl
push
mov
lret
xor
cmpsl
test
pop
mov
sbb
mov
scas
mov
out
add
sbb
adc
push
push
cmp
or
aaa
or
rcr
adc
adc
pop
adc
lods
or
scas
inc
pop
and
jmp
push
push
outsl
push
pop
test
pop
mov
clc
or
pop
pop
push
popf
mov
rorl
stos
divb
jns
daa
testb
orb
movsb
stos
dec
in
mov
add
out
mov
adcb
jns
pop
cwtl
push
fldcw
test
nop
pop
or
add
xchg
adc
outsb
sbb
adc
push
sbb
pop
test
loopne
les
gs
vmulpd
ret
fnstsw
adc
mov
nop
shr
lahf
cli
add
xchg
xchg
ds
and
jle
in
dec
dec
adc
cmp
sub
inc
pop
dec
iret
out
cmp
test
mov
adc
sahf
sbb
outsb
inc
movsl
xor
and
fisubrs
mov
jmp
inc
jne
test
or
xor
sbb
insl
adc
cmp
je
and
inc
cmp
jl
xchg
push
push
dec
shlb
dec
cmpxchg
jl
mov
inc
leave
adc
push
xor
mov
dec
xchg
adc
fistpl
clc
les
test
mov
add
inc
and
daa
pop
lds
adc
push
xor
inc
repnz
mov
xchg
and
jge
and
and
cmp
rolb
test
rorb
xor
insb
add
cmp
push
push
dec
stos
les
cmpl
adc
mov
sbb
cmp
xor
pusha
sub
adc
sub
sahf
enter
cmpsb
lock
jmp
dec
lcall
push
jo
xchg
cs
sub
cwtl
insb
jo
push
or
push
outsb
dec
push
lods
xchg
jb
inc
cld
push
ljmp
pop
mov
test
dec
xlat
or
xorb
xchg
fs
loop
aam
sub
push
test
stos
push
test
in
cmc
xor
mov
and
repz
push
sti
jo
cmp
insb
pop
int
xchg
cmp
es
mov
add
insl
mov
popf
mov
push
sub
cmp
mov
push
mov
dec
cmp
push
pop
in
mov
jae
sti
sub
mov
fwait
add
std
pusha
mov
and
lahf
fwait
neg
add
xor
mov
sahf
cwtl
add
sbb
or
std
cmova
mov
push
nop
sub
adc
add
sub
jne
icebp
nop
rorb
je
aas
adc
and
dec
or
dec
aaa
mov
add
movsb
stos
lods
out
in
mov
faddl
in
sbb
xchg
lods
cmp
arpl
or
or
cmc
js
mov
xor
js
mov
inc
add
imull
mov
jp
sub
push
outsb
inc
jne
add
xchg
popa
ret
push
test
iret
gs
popa
xor
xchg
mov
xchg
pushf
pop
cs
xlat
sub
sbbl
mov
into
nop
xor
xor
xchg
subb
sub
ds
pop
jb
movl
pop
movsl
push
pop
pop
sub
test
dec
sub
sbb
js
aad
push
sbbb
sbb
or
out
push
add
arpl
jae
int
sbb
add
push
and
push
mov
sbb
lcall
cmp
xor
aad
push
sar
jns
dec
mov
xchg
enter
pushw
nop
adc
push
movsb
push
sub
push
mov
adc
shr
mov
push
add
jne
leave
sti
inc
fstl
xor
popa
leave
add
xor
inc
or
incb
xchg
inc
pop
addb
pop
adc
pop
mov
dec
sbb
loopne
lock
dec
cltd
movsb
add
pop
mov
adc
mov
mov
das
loop
pop
jecxz
scas
mov
je
movsb
xchg
dec
ror
xor
adc
sub
mov
lods
and
mov
sbb
push
push
insb
idivb
inc
mull
ret
sub
and
cs
push
lret
data16
jae
fcoms
xor
cmp
mov
mov
pusha
rcl
je
push
add
dec
mov
mov
sbb
rolb
fs
push
sbb
ret
xor
xchg
adc
pop
ja
add
pop
adc
addl
pop
aaa
adc
push
pop
je
dec
cmpsl
add
or
add
fildl
fadd
je
jg
add
or
orb
add
push
insl
insb
fsubl
loopne
xchg
ret
ret
loope
jns
fwait
rcll
mov
add
jb
cmp
inc
or
xchg
leave
rcr
push
inc
neg
sbb
and
out
add
xchg
cmpl
push
outsb
aad
movnti
data16
adc
adc
mov
or
push
xor
dec
jl
jp
mov
mov
gs
xlat
pop
ror
cmp
rol
mov
jo
push
repnz
jecxz
add
inc
adc
ss
mov
add
pop
cli
imul
mov
enter
je
sub
xor
pop
sbb
nop
pusha
cmp
jne
sub
cmp
pop
or
adc
int3
mov
sub
imul
cmpl
sub
sub
test
jg
push
lods
sbb
dec
add
cmp
rolb
jne
outsb
sbbb
adc
test
xor
lcall
cmpsl
pushf
pop
je
mov
inc
pop
mov
fisubl
aam
push
cmp
xchg
arpl
adc
sub
cmp
xchg
mov
lds
test
out
pop
xorl
cmp
lods
rorb
in
mov
cmp
cmp
xchg
and
rclb
dec
sub
inc
cmp
pop
cmp
mov
cmp
add
add
push
xor
jl
push
dec
lods
out
sub
icebp
and
adc
add
push
mov
add
cld
inc
and
icebp
xchg
mov
adc
int
std
sbb
jle
dec
dec
pushf
lds
cwtl
cwtl
daa
and
mov
or
dec
cld
pop
les
inc
pop
dec
dec
adc
movsw
stc
daa
cmp
jp
add
rclb
adc
cmp
addb
pop
xchg
fwait
daa
mov
mov
repz
repz
mov
sbb
out
out
mov
push
fdiv
push
nop
xor
mov
ds
sub
mov
mov
mov
mov
test
xchg
mov
mov
out
sbb
rclb
mov
cmpb
int
cmp
add
and
lahf
std
jle
pusha
mov
lea
ret
mov
pop
outsb
cmp
out
mov
movsl
jg
push
in
and
imul
shrb
inc
pusha
shlb
mov
gs
and
and
adc
or
jb
cmp
push
pop
inc
sar
sbb
out
dec
jge
mov
inc
cmpsb
push
aas
mov
andl
inc
mov
inc
loop
xor
aam
jbe
inc
or
adc
shlb
sti
xor
cs
add
xor
in
in
xchg
mov
cld
jle
and
jb
outsl
shll
jo
xchg
mov
jl
das
or
adc
push
xchg
inc
aas
push
sub
enter
dec
xchg
xchg
es
adc
hlt
add
ja
push
sub
nop
mov
fisttps
leave
and
jb
sub
fs
xor
insb
inc
inc
es
jo
sti
rcl
cli
jb
pop
push
jl
in
sub
mov
xor
jb
xchg
mov
pop
in
int
jge
mov
push
fwait
add
mov
push
addb
insl
enter
sub
sub
adc
sub
add
jle
xchg
in
sub
or
push
sub
or
and
stc
sub
sub
fs
enter
fs
adc
push
enter
movl
and
mov
add
incb
inc
scas
push
add
mov
cmp
add
inc
mov
inc
es
push
mov
cltd
inc
or
adc
in
shll
fidivrs
aam
outsb
mov
and
mov
stos
jmp
push
adc
sub
int3
push
out
sbbb
loop
sub
or
inc
aam
and
and
imul
and
xchg
sahf
jmp
or
dec
mov
add
pop
mov
push
push
sbb
xor
push
test
or
fmull
aam
add
sbb
mov
adc
lock
pop
inc
add
sti
inc
insl
xchg
mov
xor
jmp
jg
movsb
loopne
rclb
sub
sbb
call
sbb
test
ljmp
cmp
aaa
cmp
sub
sbb
inc
pop
mov
pusha
mov
mov
pop
jnp
arpl
cmp
ljmp
fnsetpm(287
fcoml
mov
mov
daa
repz
imulb
dec
xor
aad
repz
dec
and
movsb
hlt
push
aam
or
xor
sbb
sbb
jne
mov
mov
pop
mov
fwait
xor
pop
add
movsb
xor
aas
jbe
xchg
mov
aas
sub
or
je
cmp
jne
mov
push
icebp
adcl
scas
dec
mov
xlat
push
aad
pop
push
aam
mov
popa
es
push
xor
sbb
sbbl
xchg
andb
ficoml
mov
sbb
sub
iret
ficoml
data16
mov
jmp
sbb
call
adc
movl
loopne
add
or
mov
bound
mov
xor
mov
dec
scas
fs
and
rcrb
add
loopne
scas
cltd
inc
cmpl
in
loopne
cmp
stos
mov
cmp
dec
inc
lock
xchg
xor
mov
insb
loop
fcmovnu
mov
scas
rorb
insb
cmp
dec
mov
adc
lods
or
dec
sub
leave
rolb
jmp
popa
lret
das
mov
add
out
and
adc
shrb
subb
int3
add
clc
fs
nop
sbb
addb
dec
cpuid
push
jbe
lock
push
xchg
arpl
shl
jo
je
add
dec
xlat
cmp
xchg
je
fildl
and
and
sub
nop
adc
stos
test
jle
fs
and
outsl
nop
clc
sar
sbb
out
filds
sar
and
es
add
lea
cmp
push
lods
addr16
and
push
xchg
gs
aas
lea
mov
incl
pop
lock
add
je
cmpl
int
call
adc
adc
push
movsb
add
loopne
xchg
pusha
jno
enter
push
sub
push
ljmp
mov
aam
xor
andl
stos
repz
rcl
mov
mov
cmp
cmp
mov
pop
adc
lret
mov
fwait
sbbb
cmp
je
adc
sarb
add
out
or
decl
int3
aaa
lock
out
mov
dec
xor
je
push
xor
sarb
dec
push
ljmp
or
pop
jnp
xor
into
fwait
dec
mov
lock
shl
xor
adc
and
jg
fistpl
inc
dec
mov
sahf
out
inc
add
push
lods
mov
vpunpcklbw
les
xor
pop
adc
dec
dec
cmp
enter
je
cli
or
cmp
xchg
sub
adc
dec
jae
and
push
ljmp
pop
sub
pop
into
lahf
push
push
and
inc
sbb
add
ret
or
insb
adc
jp
push
adcb
pop
push
arpl
insb
or
clc
cmpsb
cli
imul
pminub
jbe
inc
lods
pop
pop
xchg
js
mov
nop
rol
cltd
jp
inc
js
push
fiadds
gs
mov
sbb
xchg
in
aad
jns
daa
pop
cmpsl
iret
push
sbb
lcall
data16
pop
jbe
push
push
loopne
sub
stos
inc
sbb
adcb
and
dec
cmp
insb
cmpsb
dec
insb
mov
imul
das
addl
add
outsl
jecxz
and
dec
outsl
or
add
outsl
adc
adcl
dec
lret
or
lret
cmp
mov
jge
mov
nop
int
and
jns
data16
ss
insl
mov
out
sbb
push
sub
nop
mov
adc
mov
push
add
fs
xchg
fisubl
movsl
into
nop
push
add
data16
jo
fwait
inc
pop
push
sub
jmp
ficoml
jo
out
pop
loope
mov
pop
xor
add
cld
mov
js
push
xor
adc
sub
incl
sahf
jp
aad
sub
stc
or
sub
popf
aad
ret
and
andb
cmp
mov
imul
bound
pop
aam
mov
jae
jne
or
push
add
pop
aam
push
mov
push
inc
push
adc
fadds
adc
imul
lds
js
int3
jmp
mov
jecxz
int3
adc
fstps
inc
scas
xor
rorb
pop
push
jb
cmp
xchg
lods
and
push
enter
mov
sub
inc
idivl
sbb
pop
jnp
jecxz
out
inc
int3
sbb
jo
sbb
andl
mov
push
jbe
mov
idiv
sarl
scas
sub
pop
mov
xchg
std
mov
clc
xor
test
inc
imul
shlb
jmp
sub
and
sbb
sub
mov
xlat
push
xchg
or
inc
bound
popa
xchg
xor
adc
test
xorb
push
xor
mov
sub
push
mov
out
mov
mov
aaa
push
push
lret
repz
or
jae
sahf
out
cmp
lock
jns
mull
fs
jo
mov
inc
xchg
push
push
or
add
mov
das
mov
adc
mov
xor
sbb
sbb
mov
sti
and
outsb
xor
leave
or
out
out
cld
sbb
aas
cmp
stc
push
sti
cmpsl
push
das
pusha
ficompl
mov
and
jge
add
pop
int3
cmpsl
mov
lods
test
insb
fs
std
je
xchg
dec
mov
inc
daa
cmp
std
and
sbb
leave
je
jb
or
xchg
bound
test
roll
pop
adc
or
mov
mov
xor
sbb
mov
ss
test
sahf
out
sahf
popa
jbe
lcall
incl
push
imul
stos
mov
inc
iret
adc
pushl
xchg
cli
add
add
sbb
mov
movl
xorl
lea
jl
push
insb
pop
arpl
fdivp
add
rorb
pop
or
push
movsb
lea
lret
add
xchg
dec
xlat
inc
stos
js
pop
test
pop
test
push
int
mov
dec
popf
outsb
test
dec
sub
mov
pop
addr16
push
or
and
or
jp
inc
adc
jae
test
add
push
mov
adc
or
jge
fisttpll
cmc
popf
cmp
inc
out
mov
sbb
or
sbb
pop
and
mov
mov
xchg
shufps
outsb
push
sbb
test
xor
clc
mov
nop
dec
enter
adc
adc
push
adc
inc
sbb
pop
push
nop
loopne
or
sub
lds
jnp
mov
pop
aaa
jmp
cwtl
movsb
add
mov
and
sbb
xor
and
lret
adc
cmpsl
jmp
and
dec
jmp
inc
mov
dec
movb
pop
and
aas
xchg
push
xlat
and
addb
ja
xor
jmp
or
mov
mov
dec
push
sbb
push
dec
sbb
push
jl
jmp
pop
sarl
mov
pop
fcmovnu
add
enter
fs
cs
shlb
test
lret
cmp
aas
nop
pushf
inc
mov
sbbb
cld
incl
cmp
and
lods
inc
nop
pop
lret
xor
push
pop
data16
or
push
push
sub
sbb
nop
and
pop
sub
pop
cmp
sbb
add
or
xchg
rorl
sbb
fstl
cmp
dec
js
je
xchg
mov
push
and
add
jae
add
mov
inc
in
add
add
fisttpl
xchg
pop
push
cmp
push
stc
cs
sub
pop
fmull
in
in
fsubs
jge
mov
call
or
imul
or
movsb
incl
mov
lods
mov
pop
pushf
pop
mov
aam
sub
and
movsb
push
add
xchg
pop
and
lahf
hlt
push
add
push
push
leave
xchg
mov
dec
add
add
sbb
pusha
arpl
mov
mov
test
and
std
ja
dec
pushf
push
je
adc
or
or
or
pop
enter
and
test
jb
sbb
dec
mov
jb
cmp
imul
mov
push
cltd
mov
xor
popf
mov
fiaddl
call
xchg
mov
pusha
lea
add
or
fimull
jle
scas
mov
sbb
or
push
sbb
xchg
ret
sbb
stos
jo
pop
dec
pop
int
jae
out
push
adc
dec
ror
cmp
inc
jmp
add
xchg
fsts
dec
or
cmp
mov
add
xchg
mov
mov
and
cmp
ds
or
jge,pn
jle
mov
push
push
lods
out
invd
rep
movsl
or
cwtl
adc
subl
xor
pop
and
test
andb
adc
add
jo
or
jns
pop
shrb
cmp
lret
mov
lret
jge
sub
cmp
pop
nop
je
jg
cmp
or
and
jle
jl
push
call
cli
jne
mov
xor
mov
fs
xchg
add
dec
ret
push
lea
push
movsl
xor
shlb
push
sub
sub
fimull
adc
sbb
enter
xor
or
in
lods
add
rol
shlb
enter
fisubl
adc
or
sar
repz
mov
mov
jmp
loope
add
in
cwtl
jp
sub
sub
shrb
stos
aam
aam
push
pop
push
enter
sbb
outsl
mov
imul
insb
inc
jl
aad
ja
push
bound
add
mov
repnz
mov
dec
sbb
dec
ret
push
outsb
addr16
cmpsl
clc
out
out
pop
dec
imul
push
dec
push
add
jae
lds
push
cli
enter
sar
shll
std
clc
add
jmp
push
push
and
jne
insl
mov
aas
inc
push
push
and
push
jae
movsb
lds
lret
sbb
cmp
mov
pop
add
cli
shrb
jmp
paddsw
and
inc
sub
and
rol
push
push
gs
js
or
ficoms
push
rorl
xchg
pop
dec
sub
xchg
jb
add
pop
pop
sbb
mull
cmpsl
ss
adc
ret
insl
sub
inc
pop
xchg
sub
inc
das
pusha
add
movsb
aaa
test
jmp
add
cltd
lea
xor
push
xor
pop
arpl
sbb
push
leave
insb
sbb
test
js
pop
daa
dec
incl
rorl
mov
xchg
stos
pop
and
ja
pop
xor
mov
std
jnp
xor
insb
xchg
adc
pop
cmpsb
test
inc
sub
add
inc
loopne
mov
mov
or
lahf
icebp
or
hlt
sarb
pop
push
jecxz
xor
rcrl
push
notb
push
sub
sbb
push
adc
push
inc
push
loopne
or
add
mov
popf
ret
pop
aam
xor
lahf
outsl
movsb
arpl
sbb
pop
leave
xchg
shlb
and
inc
pop
jle
jl
test
cmp
into
jo
pushf
es
imul
mov
mov
jns
xor
inc
inc
cmp
adc
mov
jmp
xchg
roll
dec
sbb
push
fs
mov
mov
sub
addb
xor
incl
add
inc
add
rclb
inc
cld
notb
fcomps
fstpt
stc
sarl
push
adc
add
test
data16
mov
popf
dec
and
xchg
loopne
jne
push
sbb
add
sbb
or
add
lds
repz
xchg
imul
push
jg
imul
add
cmpsb
sub
push
pop
xor
ret
push
rolb
test
cli
test
icebp
fimull
push
add
mov
jno
push
push
mov
jb
fcompp
ret
push
or
jmp
mov
popf
pop
rorb
sbb
shrl
cmp
jg
mov
lock
mov
push
push
cmp
jle
cmpsb
test
sbb
dec
xchg
dec
sub
dec
mov
shl
jecxz
bnd
adc
ret
in
adc
adc
stos
inc
mov
adc
and
pushf
icebp
add
add
cmp
add
push
and
pop
jo
inc
test
mov
loop
dec
mov
fildl
mov
push
xchg
mov
mov
out
xchg
jne
cli
pop
in
pop
cmp
cmpsb
inc
pop
push
or
push
mov
bound
dec
or
xchg
sub
push
jmp
loope
xchg
push
dec
pop
nop
in
adc
pop
or
pop
in
in
pop
push
fmull
hlt
shll
cmp
xor
inc
call
push
cmp
mov
jb
mov
jg
and
xor
dec
add
fstl
push
bound
lea
cmp
add
or
lock
mov
mov
mov
or
pop
inc
and
nop
mov
movsb
rol
aas
pop
inc
sub
inc
push
dec
movsb
rol
outsl
dec
lahf
inc
and
fwait
loope
mov
lea
xchg
cmpl
pop
ss
pop
sbb
add
xchg
or
or
pop
je
add
test
push
ds
add
mov
shrb
rcr
xor
jnp
push
adc
adc
pop
jmp
subl
jae
pop
push
fwait
mov
xor
fnstcw
push
sbb
call
jno
js
or
fmuls
add
test
fwait
pop
mov
xlat
xchg
nop
popa
add
sub
loope
or
and
jne
adc
bsf
adc
push
call
into
fnsave
outsl
and
and
push
xchg
hlt
outsl
sarl
jp
push
and
in
jns
push
push
rolb
push
fisubrl
fldcw
or
cmp
dec
xchg
nop
push
adc
lods
sbb
and
xchg
or
leave
jno
mov
jmp
fistl
loopne
lcall
push
inc
aad
push
pop
sbb
rorb
cmpl
sbb
rcrb
xor
sub
pop
test
push
and
mov
push
cwtl
adc
leave
cld
sbb
fimull
xchg
xorb
push
or
scas
cmpsl
xlat
push
adc
inc
push
repz
inc
cs
fmull
jno
pushf
push
dec
out
fisubrl
mov
mov
popa
or
xchg
cli
mov
jmp
push
or
push
popl
call
adc
pop
jne
bound
fimuls
pop
push
push
lret
dec
dec
jge
fnstenv
daa
or
mov
adc
adcl
jo
and
adc
enter
fdivp
xchg
das
push
adc
loop
and
cmp
cmpsb
cwtl
sub
xorl
inc
cmp
pop
xor
lcall
mov
jns
xchg
aad
add
or
icebp
insl
mov
in
cmpsl
je
add
jnp
call
sub
mov
jne
sbb
push
mov
test
adc
shl
loope
sub
xchg
push
and
and
cmpsb
adc
inc
dec
add
lret
mov
jp
adc
add
mov
adc
mov
cmp
mov
sar
xor
mov
cmp
je
inc
pushf
push
dec
or
or
add
imul
jne
lock
push
adc
push
adc
test
sbb
add
mov
adc
and
repz
mov
and
insl
hlt
outsl
loope
mov
adc
cmp
push
sbb
sub
and
cltd
js
adc
mov
bound
lea
imul
js
in
mov
popf
fisubl
xor
out
ret
mov
sbb
lods
push
xchg
and
lgs
ds
aaa
test
mov
mov
and
sbb
leave
jno
sbb
inc
add
pop
out
add
pusha
inc
push
jb
hlt
and
cmp
cmp
jge
jl
mov
inc
je
sbb
and
clc
push
or
mov
sub
imul
and
dec
add
test
es
mov
lds
inc
mov
les
pop
jno
inc
js
and
js
push
inc
call
jg
add
ret
fucomp
dec
pop
clc
mov
dec
aas
std
rclb
je
fcomps
sub
add
mov
sub
push
je
inc
pop
dec
sbb
sbb
out
or
cmp
pop
xor
mov
call
add
xchg
mov
js
xor
mov
test
mov
dec
test
sbb
mov
cmp
loope
mov
aas
push
cmp
cmp
adc
cmp
sahf
dec
js
xor
cmp
jle
dec
sub
movlps
shl
inc
dec
ret
clc
lea
ljmp
sub
sub
lret
push
sub
or
cmpsl
sbb
sbb
jg
popl
adc
adc
inc
jmp
pushf
add
push
jp
arpl
adc
fiadds
or
dec
dec
dec
adcb
mov
lea
idivl
hlt
mov
sarb
mov
dec
cli
and
and
ds
and
sub
jge
dec
add
dec
loope
add
and
test
add
add
scas
lret
and
cld
and
test
imulb
mov
sub
jne
inc
loop
jnp
sbb
mov
dec
jns
out
lods
ljmp
mov
mov
mov
cmp
insl
jp
insb
jle
add
mov
cmp
pop
sbb
sbb
enter
loope
mov
inc
pop
out
mov
sub
adc
push
or
js
test
pushf
mov
or
xchg
xchg
pop
repz
fstpl
add
jmp
cs
inc
xchg
xor
pop
pop
roll
xor
es
movsb
adc
sub
inc
push
mov
xchg
and
fistpl
lods
adc
cli
pop
aam
fisubs
stc
cmp
push
push
jne
popa
mov
cmp
inc
rolb
push
inc
test
xor
addr16
scas
add
xchg
sub
add
sbb
push
in
inc
cld
lahf
sub
nop
xchg
bts
add
cli
add
lahf
add
jg
js
dec
cmp
js
cmpsl
push
push
push
push
add
adc
mov
cmpb
pop
out
lock
push
push
push
pop
outsb
ss
add
mov
std
andb
mov
cmpsl
sbb
dec
sbb
add
lock
add
shrl
jo
cld
adc
jne
testl
shrl
xor
je
push
leave
inc
sub
and
jl
mov
dec
xor
sbb
clc
inc
or
dec
jmp
lods
fsubrs
ret
add
mov
pusha
aas
call
add
movsb
mov
imul
es
mov
enter
sbb
and
scas
aam
stc
pop
adc
adc
fmuls
ss
sub
mov
js
xchg
iret
repz
into
cmp
sub
shll
imul
rcr
mov
ret
push
mov
add
or
pop
mov
test
lahf
outsb
pusha
movsb
cmc
movsb
sbb
movsb
mov
fisttpll
jno
and
je
std
sbb
push
iret
pop
cwtl
or
mov
outsb
inc
push
mov
fiaddl
pusha
fsubrs
dec
mov
xchg
xchg
xchg
inc
leave
push
daa
mov
insb
rolb
push
mov
bswap
mov
imul
adc
pop
sub
movsl
push
push
add
xchg
icebp
repz
inc
fstpl
push
js
movl
sub
je
or
jno
sub
sub
inc
cmp
jge
lahf
xor
xchg
push
mov
xor
imul
lea
push
cmpsl
xor
loopne
nop
mov
aam
dec
sti
sub
sahf
inc
call
or
sbb
jbe
ret
out
orl
dec
or
mov
dec
fwait
dec
in
rolb
mov
icebp
or
aam
mov
sub
roll
fildl
mov
jmp
push
push
and
jmp
popf
out
out
jb
cmp
and
sahf
je
mov
inc
inc
and
adc
mov
push
or
insb
add
jne
int
cltd
aad
jb,pt
and
test
out
jno
push
mov
mov
jmp
loopne
outsl
imul
fmuls
nopl
movsb
ret
ret
cmp
nop
punpcklbw
mov
pop
pop
sbb
xchg
fwait
ret
add
dec
ss
inc
cmp
ret
lods
inc
std
aaa
jne
stos
push
mov
xchg
lds
stos
fisubs
mov
ljmp
push
icebp
dec
hlt
and
enter
inc
sbb
cmp
jbe
rcl
pop
push
mov
add
shlb
sub
je
push
mov
mov
inc
rorb
adc
xlat
test
inc
cli
jle
jbe
sbb
pop
cmp
icebp
mov
je
jmp
test
and
into
cmpl
sbb
xchg
daa
inc
scas
sub
mov
test
lret
jg
addl
mov
push
adc
popa
xchg
arpl
test
fisttpll
andl
mov
push
nop
push
dec
es
mov
mov
dec
cmpsb
frstor
jne
cmp
frstor
test
mov
cmp
and
push
inc
mov
sbb
xchg
sahf
sbb
inc
xlat
add
and
clc
add
fadd
cs
rep
shrl
or
inc
sub
cltd
dec
pop
xchg
mov
mov
pop
ret
sub
xor
sub
out
arpl
and
mov
pop
push
lds
mov
sbb
mov
xchg
iret
jne
or
sub
in
cli
inc
imul
pop
sbbb
push
dec
adc
into
mov
cmp
adc
xor
jbe
cmp
pop
pop
inc
adc
out
ljmp
pop
push
pop
cs
dec
stos
pop
mov
mov
jmp
setb
mov
push
test
movsb
out
cmp
or
sub
or
pop
inc
fsubl
cmp
aaa
cmpb
lods
xor
push
subl
cmp
js
rolb
cli
adc
push
add
dec
or
jae
xor
add
xlat
rorl
les
pop
mov
adc
cmp
sub
inc
or
xor
jno
inc
mov
inc
cmpsl
cmp
movsl
ret
bound
add
adc
rclb
and
add
aaa
mov
je
cmpl
dec
sbb
inc
mov
inc
mov
inc
mov
push
std
inc
out
dec
sbb
outsl
inc
add
add
add
cmp
fs
nop
cmpl
add
cmpsl
mov
out
gs
adc
ss
pop
xor
xchg
add
int
rcll
jl
xchg
and
push
xor
cmp
inc
lods
jg
mov
xchg
xlat
shlb
adc
dec
sub
lock
sbb
daa
push
push
aad
inc
subl
icebp
sbb
js
fwait
push
push
sbb
jle
sub
fcmove
inc
xchg
and
adc
pop
or
mov
mov
mov
dec
mov
pop
push
push
aaa
fs
rcll
xchg
insb
push
lea
sub
cltd
loopne
mov
or
inc
js
pop
imul
or
in
and
cwtl
popa
xchg
and
cmpsb
inc
inc
push
jmp
movsl
bound
xchg
cmp
pop
pop
lds
sti
push
add
sbb
adc
mov
mov
shl
pop
jmp
cmc
test
mov
rolb
cmp
mov
arpl
mov
mov
les
cmpb
fistpl
fidivs
cld
cmp
in
push
lods
faddl
push
adc
rol
jmp
sub
add
cmpsl
mov
add
push
inc
xor
push
mov
loopne
mov
xor
pop
push
pusha
or
cli
xor
add
push
orb
xchg
into
gs
loop
dec
mov
test
dec
dec
add
mov
xchg
push
ljmp
out
test
add
and
mov
xchg
aam
movl
inc
nop
fldl
cli
sub
add
cmp
fnstsw
fstpl
add
inc
and
adc
test
aaa
mov
jl
dec
xor
and
or
mov
add
mov
push
inc
sub
inc
pusha
cmp
or
adc
adc
loop
dec
test
fadds
jne
cmc
inc
inc
and
jo
gs
lock
pop
xchg
testb
mov
punpcklbw
mov
lret
or
test
add
push
lods
push
xor
pop
add
jp
adc
sbb
add
adc
cmp
std
and
sarb
or
inc
push
xor
xchg
andl
jne
ret
movsl
push
lahf
jno
xchg
dec
insb
and
or
and
mov
cltd
cli
adc
sar
mov
sbb
mov
pop
rcll
es
inc
push
inc
inc
inc
lds
scas
and
dec
dec
pop
shrl
jne
push
mov
or
inc
sub
push
pop
inc
jg
pushf
cmpl
out
rorb
leave
fs
faddl
das
xor
xor
aas
or
roll
es
cmpsb
nop
ret
sbb
imul
popf
adc
mov
inc
add
adc
in
loop
adc
clc
mov
or
jle
jne
popa
shlb
fwait
add
xchg
or
cmp
cmp
cmp
jo
xor
test
fstpl
push
xchg
mov
mov
mov
aas
jmp
push
adc
dec
xor
scas
lret
das
sbb
mov
clc
xor
inc
mov
repz
and
aad
test
jl
push
mov
or
jmp
daa
mov
popf
andb
cmp
mov
xor
test
lock
pop
sub
dec
loope
push
add
enter
add
inc
jecxz
dec
xlat
mov
jo
orb
jg
jns
add
subb
and
xchg
mov
push
dec
inc
dec
in
inc
jle
sub
jne
sub
pop
sub
inc
or
dec
js
les
pop
lcall
jo
into
sub
adc
pop
xor
jno
mov
cmp
adc
fs
add
icebp
scas
inc
jl
sub
out
and
movsl
hlt
pop
nop
push
push
push
xor
testl
xor
test
pusha
in
mov
xor
negb
lret
xchg
andl
test
inc
lock
je
sti
rorb
sub
shll
push
xor
mov
data16
sub
mov
and
dec
sub
xchg
and
sub
sbb
jg
pop
and
jg
sub
or
or
cli
nop
movsl
mov
sbb
shll
xchg
mov
xchg
jg
cmp
sti
dec
addb
mov
insl
ds
or
adc
out
mov
mov
xlat
ret
pop
adc
orl
add
or
mov
xor
pop
xor
test
ds
push
push
mov
or
xlat
add
or
or
adc
push
or
inc
push
loopne
mov
ror
pop
adc
pop
sub
sbb
movsb
push
pop
and
in
mov
or
sahf
add
aad
jl
sbb
sbb
add
in
and
daa
loopne
xchg
jmp
pusha
mov
imul
xor
sub
adc
bsr
or
in
sbb
bound
push
push
inc
dec
push
dec
popf
inc
mov
or
add
and
pusha
aad
cmp
loopne
push
dec
xor
push
or
and
frstor
or
int3
push
or
outsb
es
and
push
aaa
inc
jge
add
dec
cmp
sub
dec
jns
mov
mov
cmp
add
xor
dec
add
out
out
cwtl
sbb
push
push
mov
in
adc
cmp
sub
cmp
jo
mov
lods
sbb
xorb
add
sbb
int3
adc
and
pop
pusha
inc
stos
cwtl
movsb
lret
or
cmp
ret
adc
jmp
inc
and
mov
shrb
or
in
inc
mov
fwait
gs
jg
push
fisubl
cmp
jb
adc
inc
dec
arpl
sbb
dec
call
call
add
add
sub
cmp
push
inc
les
adc
lods
addr16
adc
dec
xchg
jmp
inc
dec
ja
adc
pop
dec
fsub
adc
push
jmp
lcall
test
pop
clc
cmp
movl
pop
movl
popf
cmc
push
clc
mov
pop
leave
in
push
imul
pop
int3
outsl
cs
and
or
in
in
fistl
push
test
loop
xor
add
insb
adc
dec
sti
add
xchg
xlat
push
outsb
fsub
add
mov
imul
mov
add
sub
cmpl
dec
imul
ds
hlt
fs
sbb
mov
and
xchg
add
or
enter
and
sub
je
test
dec
or
rcll
xor
sbb
sub
push
pop
scas
aam
add
dec
push
push
aam
ror
lods
shl
jmp
cmp
sub
out
cmpl
test
cmp
js
test
rolb
js,pt
and
jge
mov
test
cmp
xorb
es
cmpsb
imul
ret
add
and
icebp
loopne
or
call
or
xor
sub
lock
pop
int3
cmp
cltd
lock
in
mov
inc
mov
ss
dec
sbb
jne
aas
pop
adc
inc
jne
add
push
push
pop
aad
stc
xchg
lods
aas
adc
scas
sub
cmp
sub
mov
jnp
sbb
push
pop
xchg
imul
jne
mov
push
xchg
sbb
int3
ret
xchg
gs
xchg
pushf
mov
in
pushw
aas
cmp
addb
aad
sahf
inc
pop
sbb
xor
sarl
sarl
push
popl
call
push
lods
mov
shll
push
push
xor
add
fistpl
pop
ja
insb
or
fisubs
js
dec
enter
in
dec
push
dec
or
jmp
mov
shrb
lock
sub
fisubrl
xchg
mov
push
and
jae
shlb
or
in
and
mov
adc
push
in
jo
add
inc
sbb
ss
sbb
insb
jle
and
mov
rcl
sub
int
lods
and
inc
or
pop
pop
or
adc
mov
decl
inc
mov
cmp
xchg
push
ret
in
adc
and
test
mov
pop
ret
ret
movsb
adc
loop
add
and
loopne
cld
pop
jle
mov
mov
shlb
cmp
or
xchg
cld
out
popa
arpl
inc
cmp
jl
pop
mov
and
or
add
pop
test
add
jo
add
mov
cs
mov
xor
and
xor
dec
int3
orb
mov
xor
or
mov
shl
pop
jnp
jo
dec
pop
add
push
sbb
fdivs
sarb
ljmp
iret
adc
adc
jg
scas
addb
or
icebp
xchg
mov
fnstsw
cmp
clc
std
aas
add
pusha
jb
or
dec
dec
mov
push
adc
cmp
pop
ljmp
into
add
sub
adc
jns
xchg
inc
adc
adc
xchg
jo
xor
repnz
mov
outsb
mov
cmpsl
outsl
jne
mov
ljmp
cmp
sub
aaa
or
test
jbe
insl
fs
sbb
xor
mov
inc
and
sbb
sub
adc
mov
repnz
pop
xchg
clc
jl
mov
sub
pop
stc
push
cmp
pop
xor
and
add
inc
cld
add
and
inc
jns
dec
or
inc
sbb
push
cltd
mov
fs
pop
mov
cmp
add
add
enter
xchg
push
pop
or
mov
bound
cmp
cmpb
jne
push
dec
jne
sar
sub
push
add
and
dec
add
xorb
arpl
pusha
repz
adc
push
pop
or
inc
adc
jb
lea
pop
cmc
call
fldlg2
fldl
fyl2x
fstpl
in
mov
mov
sbbb
jg
mov
out
xor
call
ud2
aas
jecxz
test
lock
dec
and
loope,pn
pop
clc
flds
fabs
insl
mov
jne
jmp
fmull
fcoml
jle
adc
inc
push
adc
dec
xor
adc
sub
je
mov
push
push
mov
and
lock
dec
and
and
sbb
and
push
popf
stos
imul
mov
push
pop
in
test
adc
fiaddl
lahf
mov
sub
fiadds
sbb
add
push
decl
in
mov
call
fistpll
add
push
jne
xorl
je
loopne
test
or
inc
adc
punpckhwd
pop
or
add
or
bnd
push
inc
add
and
xor
lret
add
sbb
push
sti
xor
mov
mov
fmuls
ds
pop
mov
gs
inc
inc
xchg
inc
inc
es
adcb
mov
xor
cmp
cwtl
shrb
push
sbb
inc
mov
and
lea
notl
adc
sbb
pop
mov
mov
adc
in
loop
mov
jl
rorl
dec
insb
push
sub
pop
subb
mov
push
pop
sbb
pusha
sbb
jb
push
sbb
cmp
bound
pushf
inc
xor
inc
js
fisttpll
std
jg
dec
andl
daa
add
push
inc
mov
cld
bound
push
je
sub
mov
inc
mov
adc
jg
sbb
cmp
jne
ds
enter
mov
xor
inc
mov
subb
sub
pop
add
jmp
fst
dec
push
jmp
cmp
stc
cmp
jl
push
push
mov
pop
sbb
cltd
cmp
pop
xor
dec
xor
xchg
in
cltd
ficoml
inc
and
cs
pushf
push
nop
jle
mov
pusha
mov
inc
call
aaa
add
mov
shll
movsl
sub
adc
mov
or
je
push
xor
or
cwtl
js
insb
bound
dec
pop
mov
and
dec
rcr
insl
idivl
pop
je
dec
das
je
or
lcall
adc
adc
fsubr
les
jge
add
jmp
inc
mov
mov
daa
dec
movsl
push
mov
sbb
ret
or
jmp
ret
pop
dec
adc
mov
into
fbld
dec
push
jle
iret
xor
das
sub
dec
rcr
sbb
enter
outsl
call
testb
enter
adc
ja
add
xorl
mov
mov
add
insb
pop
jle
int
dec
xor
mov
and
mov
pop
pop
adc
jmp
jne
sub
add
cmpsl
pop
push
and
sub
mov
lret
loope
sbb
fildll
clc
jne
cmp
jne
insb
jne
jbe
xchg
cmp
pop
pushl
add
cmp
jne
and
icebp
jne
dec
orb
push
push
jmp
sbb
sub
push
push
or
or
fldl
stos
add
jne
mov
gs
inc
fmull
popa
dec
cmpsl
pop
insl
add
jg
xchg
xchg
dec
or
inc
pop
cwtl
cwtl
into
or
mov
add
add
mov
mov
aas
dec
mov
ret
call
shlb
xchg
out
and
popf
ds
pop
ficoml
subl
cmp
jl
add
jmp
pop
pop
pop
pop
insl
data16
out
clc
mov
lds
cmp
jne
mov
ret
sti
pop
push
and
pop
out
jne
mov
ret
fsubl
jg
jne
cmp
jbe
cmp
jae
jg
xor
pop
inc
imul
and
adc
or
pause
mov
push
push
or
rorb
daa
push
dec
jmp
lock
cmp
jge
cmp
jle
xchg
jle
inc
jmp
hlt
pop
mov
pop
and
or
jg
pop
xlat
mov
xor
push
loope
mov
enter
xor
inc
sub
pop
pop
ljmp
mov
adc
mov
lea
ficoml
adc
xchg
pop
test
leave
jg
add
fimull
sub
adc
push
mov
call
cmc
test
les
rcrb
push
loope
pop
jl
cmp
xor
mov
cwtl
in
lahf
cmc
inc
shll
es
pop
adc
in
cmp
push
inc
rorb
test
pop
sub
pusha
inc
leave
loopne
test
mov
arpl
add
dec
add
cmp
and
test
sbb
rcr
mov
dec
pop
add
in
lods
pushf
je
sub
das
ljmp
pushf
sub
les
loope
fs
js
shl
inc
mov
xor
fs
fisttpll
shrb
les
xchg
faddl
sub
nop
les
xor
outsl
rcll
xor
jle
and
mov
mov
loop
clc
adcl
xchg
test
xchg
mov
sbb
push
fstpt
and
in
stos
push
dec
push
stos
inc
xchg
mov
imul
movsb
add
rcrb
mov
pop
faddp
mov
adcb
mov
add
imull
rcl
fs
mov
not
clc
sets
dec
adc
rcrb
test
pop
cli
insb
sub
push
cmp
dec
pop
sahf
and
adc
fs
push
aaa
sbb
insw
pop
outsl
and
dec
ret
and
pop
in
fistl
push
push
movsb
dec
pop
movsb
std
enter
pop
inc
es
fstl
rol
aad
inc
packsswb
cwtl
call
push
add
mov
sbb
rolb
leave
je
ja
mov
ret
xchg
stos
sbb
jmp
scas
or
sbb
in
jns
and
mov
push
popa
int3
jmp
jnp,pn
call
dec
add
jle
mov
or
sahf
ret
push
add
dec
mov
in
mov
cwtl
jno
jae
data16
lock
lods
push
adc
or
test
ror
push
or
rolb
arpl
jne
fcmovnbe
sub
add
push
jl
cmp
xorb
sbbl
push
push
out
or
add
insl
ret
mov
mov
dec
cmp
xor
pushf
add
sub
jmp
popa
insl
stos
pop
add
add
pop
sbb
sarb
sbb
shlb
iret
ret
pop
ret
addb
push
inc
adc
push
fsubs
jmp
and
jmp
add
mov
or
cmp
sub
dec
mov
sbb
jbe,pn
dec
in
aad
addr16
push
and
mov
adc
jl
loop,pn
je
packssdw
je
sahf
idivl
sub
push
mov
jns
ficompl
decl
movsb
test
mov
cmp
mov
push
push
jmp
cmp
and
add
pop
cmp
jae
or
pushf
call
xor
dec
mov
adc
push
push
and
sub
fisttpl
dec
insl
pop
push
iret
push
mov
dec
add
push
pop
add
xchg
mov
add
sub
out
clc
add
enter
inc
lea
add
mov
and
adc
mov
test
lds
mov
or
xor
js
scas
sar
xor
mov
add
pushf
mov
sub
sbbb
es
sbb
push
xchg
roll
rcrl
jecxz
orb
lock
add
loop
xlat
adcl
in
les
cmp
pop
push
sbb
cmp
cmp
jo
jo
test
aas
add
fisttpl
cmc
jmp
enter
add
push
stos
add
cmp
pushf
aaa
pop
xchg
jecxz
inc
sbb
jne
sbb
push
sti
cmp
je
or
sbb
adc
out
popf
clc
push
jne
cmp
jbe
ret
cmp
or
sub
imul
adc
sahf
lret
jae
adc
adc
repnz
das
xor
daa
pop
cmpsb
cmp
mov
adc
mov
sahf
push
sbb
sub
fs
ds
mov
xchg
movl
lea
or
push
dec
shl
mov
push
push
and
push
lea
and
inc
fcomp
dec
adc
rep
stos
lea
mov
lea
pushf
inc
or
jno
enter
aaa
xchg
js
mov
xchg
push
xor
fldt
cwtl
xchg
add
fidivrs
push
push
push
inc
sub
cmc
lods
push
psubw
rep
movsb
popa
xor
notl
sub
movsw
test
hlt
and
push
shll
or
push
dec
in
popf
xor
pop
mov
je
xchg
sub
sub
add
push
popa
testl
sbb
pop
adcl
in
mov
lret
jp
pusha
jne
stos
or
mov
flds
xlat
pop
and
lods
test
and
or
jb
or
mov
subl
inc
xchg
test
mov
leave
push
lret
movsb
pusha
sub
loopne
xchg
push
pop
cltd
or
scas
mov
int
call
or
daa
xchg
fsubrs
pop
mov
test
mov
add
inc
int
repnz
jnp
adc
jp
mov
insl
add
insb
mov
aas
xor
xor
push
mov
rclb
pop
bound
mov
fstpl
es
les
lock
lret
mov
or
daa
and
adc
jle
gs
sbb
jle
inc
std
sbb
repnz
cmp
pop
mov
mov
or
jge
mov
scas
aam
add
js
psubb
dec
or
clc
jne
mov
adc
ret
int
mov
sub
rolb
dec
jne
mov
ds
pcmpgtd
out
sti
mov
mov
fildl
mov
filds
mov
aaa
mov
fmuls
jge
cmpl
cmpsb
mov
inc
cli
out
movsb
mov
insb
call
add
xor
add
cmp
pop
insl
hlt
push
push
lea
jmp
lea
rorb
adc
shrl
mov
bswap
or
ss
mov
push
adc
push
lea
popf
imul
or
lea
lods
adc
lea
and
call
and
test
movsb
cmp
or
add
rol
cmp
insb
es
push
sar
adc
in
mov
js
sahf
cs
mov
int3
jp
fxam
add
stos
stos
lods
sbb
cmp
cld
fcompl
adc
xor
inc
inc
and
cmp
scas
je
sbb
mov
xchg
mov
ret
push
push
rolb
mov
cmp
cwtl
xor
or
in
movsb
pop
jle
mov
lea
loopne
lcall
lock
cmp
push
mov
roll
in
mov
lods
or
push
fstps
rcll
in
fwait
insb
mov
fisubrs
jmp
jle
in
ja
sarl
aad
rol
jo
sub
cltd
adc
push
dec
je
dec
and
add
out
leave
add
pop
adc
stos
movsb
xchg
mov
test
mov
data16
xor
mov
je
dec
adc
pop
call
sbb
es
adc
dec
jl
cmp
dec
jb
mov
fldt
es
sbb
jb
jbe
faddl
jne
vmwrite
and
cs
clc
mov
movsl
popf
inc
xor
or
add
xor
mov
test
daa
xchg
ret
outsl
inc
addl
stos
aad
in
scas
movsb
imul
enter
movsb
add
inc
push
ffreep
loope
arpl
cmp
addb
rolb
jmp
dec
ret
mov
dec
dec
call
add
aam
cmp
add
mov
test
jo
jns
push
or
fcoms
sbb
stc
dec
add
mov
or
lahf
add
cmc
dec
int
push
sub
cmp
aas
dec
rorb
sub
sbb
fdivrs
popf
xlat
sub
xlat
lea
cmp
sbb
call
push
jle
movsb
cmp
sub
pop
loop
lret
cmp
add
add
or
xchg
mov
adc
push
into
fldl
mov
inc
mov
pop
sbb
mov
dec
ror
push
popa
ds
mov
ret
sub
sbb
push
orb
pop
mov
jbe
pop
lea
das
jns
scas
dec
cmp
sbb
ljmp
jno
xor
call
lods
mov
imul
or
lcall
sti
push
add
and
mov
xchg
sti
ret
sbb
sub
je
fnstenv
cltd
adc
lods
dec
movsb
xor
add
or
mov
pop
jp
pushf
and
cmp
mov
dec
inc
je
ffreep
cmpsl
mov
xchg
and
push
in
daa
push
pop
inc
sub
gs
add
imulb
dec
sbb
clc
mov
inc
loopne
and
jnp
sahf
jb
imul
ljmp
jle
add
movsb
loop
and
cmp
sub
fidivrl
outsl
sbb
or
bnd
and
sbb
dec
dec
test
dec
inc
xor
cltd
inc
or
test
inc
adcb
sub
stos
sub
das
sub
hlt
sbb
fiaddl
xor
or
or
enter
add
jge
pusha
jns
ds
rcl
lods
aas
leave
or
rcl
mov
push
add
fisttpll
push
xor
mov
push
cmpsl
pop
movsl
nop
in
adc
xor
add
sbb
jge
xor
adc
arpl
cmp
push
pop
arpl
inc
mov
mov
jg
push
sbb
pop
xor
mov
xor
cs
stc
cmp
je
jae
sahf
nop
cmp
ja
push
mov
inc
fs
push
sub
push
dec
js
std
sub
add
inc
mov
lods
iret
mov
cmp
jge
push
push
mov
jo
jl
into
outsl
add
bound
inc
scas
int
inc
push
push
rcr
add
mov
add
push
add
add
lret
sbb
icebp
sub
mov
stc
mov
mov
xchg
adcb
insl
sub
cmp
cmpsl
shll
push
mov
iret
mov
pusha
push
pop
xor
and
lcall
or
and
adc
testb
mov
cli
jb
xor
inc
sub
ret
fsubrl
das
xor
cmp
aaa
mov
or
stos
lods
cld
push
cmp
sub
dec
js
ret
lret
mov
insb
jbe
push
sub
and
fsubs
nop
push
call
jle,pn
and
je
cmp
adcb
lock
pop
sbb
fldenv
sbbb
adc
shl
add
inc
aas
cli
inc
fstl
lock
adc
lcall
shll
add
lcall
into
add
mov
pop
mov
sub
mov
pushf
jge
mov
ds
sbb
daa
cmpsl
add
xchg
mov
mov
sbb
inc
shrb
mov
cmp
or
mov
jecxz
ja
test
outsl
push
das
push
add
jnp
jne
rcrb
jmp
jno
ffree
and
push
jecxz
lods
sub
adc
in
in
sbb
call
nop
mov
sub
or
add
xchg
ficoml
pop
clc
xchg
rorl
cmp
jmp
ret
sarb
negb
sbb
jmp
jne
jno
mov
push
fimuls
mov
inc
and
clc
into
es
and
mov
add
pushf
in
loopne
add
enter
adc
push
rorb
imul
adc
jl
xchg
gs
dec
mov
cmpl
sbb
jne
pop
mov
roll
add
jp
push
or
push
mov
mov
loopne
inc
aaa
mov
sahf
xchg
mov
jmp
dec
add
lods
and
sbb
lock
dec
xchg
jge
mov
dec
cld
in
pop
in
loop
and
sub
test
and
adc
push
adc
jne
imul
push
sub
nop
es
les
repnz
xchg
push
in
jne
cli
ja
shrb
shrb
mov
popf
sarb
cmp
add
push
call
xchg
lea
icebp
add
dec
ret
popa
fcompl
stc
or
add
loopne
es
cld
push
jnp
add
mov
xor
dec
insl
add
push
jne
or
and
jno
or
lock
xor
pop
cmpsl
push
lcall
test
adc
inc
fcompl
adc
popf
or
pushf
mov
mov
inc
fadd
in
mov
push
lods
push
pop
sub
popa
lods
in
mov
mov
les
add
inc
addl
pusha
sub
cmp
shlb
rolb
mov
mov
xchg
fs
and
mov
lods
xchg
sahf
cmp
mov
pop
int3
adc
shl
sub
pushf
shl
pop
xchg
lea
inc
test
call
jge
pop
or
xor
push
ja
inc
loopne
cmc
shll
sbb
enter
jp
int3
mov
mov
or
cmp
rcll
ja
xor
add
aam
push
push
push
push
add
mov
adc
mov
pop
rcrl
adc
push
pop
or
je
xor
dec
xor
xor
popf
mov
popf
js
jb
in
ret
jle
cli
arpl
rorl
mov
cmp
pushf
dec
addb
mov
sti
inc
or
out
add
cld
inc
daa
sbb
xor
xchg
fdiv
loopne
cmc
mov
adcl
rcrb
dec
sub
pop
mov
outsb
mov
mov
sub
and
stos
jmp
pusha
test
cli
fimuls
scas
adc
dec
jne
sbb
and
cmc
call
jp
dec
loope
shrb
bound
sbb
lods
test
clc
lea
les
sub
lret
pop
fildl
fbld
jg
add
xor
cmp
ret
adc
iret
aam
adc
in
repz
pusha
scas
pop
repnz
jns
outsb
pusha
pop
jne
dec
mov
sysret
sahf
push
movsl
mov
lods
shrl
sahf
pop
mov
pop
push
mov
and
xor
dec
sbb
arpl
xlat
and
mov
inc
mov
mov
jbe
dec
adc
cmp
or
or
sub
push
into
mov
roll
adc
nop
push
aas
test
jo
or
xor
and
icebp
aaa
mov
mov
add
mov
pop
js
push
cmp
mov
inc
jmp
cld
adc
xor
jp
nop
mov
fs
pushf
clc
mov
jne
inc
pop
push
scas
inc
ljmp
ljmp
stos
sub
xor
jae
cmpsl
inc
ja
fisttps
in
mov
notb
cmp
cmp
loop
sarb
xchg
add
mov
cmp
pop
or
xor
sub
js
xchg
cmpsb
lret
xchg
dec
xor
shlb
lods
sub
sub
dec
repnz
add
and
in
add
js
mov
xchg
xchg
jo
adc
mov
push
cmpsb
push
pop
pushf
mov
cmc
mov
xor
jp
orb
add
push
enter
and
push
addb
push
popa
loopne
lcall
pop
cmpsb
lahf
aam
repnz
or
push
mov
std
sbb
cs
dec
ljmp
sbb
out
inc
push
ja
mov
mov
repz
rclb
fldt
mov
push
xor
jecxz
mov
and
movb
jecxz
or
adc
mov
jo
je
push
cmpsl
movsb
fcomps
xchg
and
push
mov
mov
aad
xchg
je
test
cltd
stos
cmp
leave
add
leave
jg
sub
mov
inc
mov
or
jmp
rorl
adc
add
sub
mov
sbb
daa
or
xlat
xchg
or
xchg
cmpsl
sti
roll
sbb
xchg
popa
shll
fs
inc
jge
sub
sbb
cltd
adc
add
add
mov
or
sbb
js
add
push
cltd
sarl
mov
pop
xchg
add
sahf
push
mov
dec
in
mov
ret
lcall
lods
xor
and
sbb
or
push
adcl
es
sbb
push
fnstcw
dec
repz
cs
sbb
jmp
mov
push
cmp
cmp
sub
imul
and
pop
sbbl
push
pop
inc
adc
test
outsl
sub
shlb
jp
cmpsb
add
mov
shlb
popa
jmp
mov
and
xor
sub
andb
mov
inc
pop
xlat
mov
add
lcall
mov
cmp
xchg
jle
mov
add
clc
push
mov
sbb
pop
push
sub
mov
pop
in
loopne
pusha
ret
pop
or
sub
sbb
push
xchg
jg
xor
or
sti
adc
cmp
sarb
aas
adc
inc
ja
cs
add
das
clc
mov
movl
add
xor
adc
inc
jl
adc
mov
sub
or
inc
daa
gs
mov
cld
cli
ja
add
and
and
mov
sbb
mov
in
mov
outsb
je
scas
es
outsb
sub
call
lds
lret
fiaddl
pop
dec
sbb
xchg
push
insb
sub
mov
jns
iret
mov
sub
sub
add
jno
jne,pt
ret
inc
cmp
addr16
lret
cvttps2pi
mov
cmp
psrad
cld
adc
hlt
sbb
outsb
push
cmp
fisubrs
movsl
mov
jmp
in
pop
mov
dec
test
push
mov
andb
daa
mov
insb
in
lods
pusha
shlb
push
push
jo
or
push
daa
test
and
inc
cmp
jl
mov
xor
nop
hlt
ficomps
daa
push
es
cs
insl
mov
sub
add
cmp
int
fisttps
mov
ja
pusha
in
outsb
loopne
lret
pop
bound
insb
orl
push
dec
xor
add
adc
in
aam
push
xor
pusha
xor
add
pusha
pop
repz
pusha
lods
dec
or
adc
adc
mov
and
jne
ret
scas
shll
jecxz
fistps
mov
stc
cmc
or
pop
sub
add
sbb
out
jle
or
movsb
shl
and
push
pop
push
jl
fwait
loopne
pushf
popf
pop
dec
sub
ret
fnsave
filds
andl
clc
pop
js
xor
fcoms
shll
add
lods
imul
xor
adc
add
jne
or
ret
pop
mov
push
or
jecxz
pop
push
jl
sub
pushf
and
adc
das
jl
or
add
jp
jbe
test
jnp
sub
mov
xchg
cmp
pop
stos
inc
hlt
aad
loopne
push
sahf
sub
xchg
xchg
shr
add
int
mov
xcrypt-ecb
cmpsl
mov
fcmovnb
sbb
dec
xor
js
fcomps
cmp
pop
mov
xchg
cmc
or
shlb
enter
in
add
ljmp
push
push
out
mov
mov
push
imul
int3
lods
add
loope
mov
inc
sbbl
insl
add
adc
mov
xchg
xchg
in
sbb
push
test
loope
and
dec
sub
sbb
add
ret
dec
and
popa
loop
sub
cli
sub
mov
cmp
shrl
rcrb
fisttpll
imul
cs
pushf
sbb
add
test
les
or
add
dec
leave
xchg
lods
add
adc
sub
mov
pop
imul
push
xchg
cmp
sub
inc
rorb
mov
cli
adc
fstl
and
adc
mov
inc
sbb
mov
add
xchg
loopne
mov
push
js
lock
iret
jmp
mov
and
adc
in
pop
movsb
lret
push
pop
push
arpl
jns
imul
xchg
add
cmc
jb
icebp
pusha
mov
jb
xor
sub
push
mov
cmp
pop
out
es
push
in
push
xor
neg
lahf
inc
dec
push
push
enter
inc
cwtl
cld
inc
sbb
je
icebp
push
jmp
push
dec
push
or
add
inc
mov
scas
push
add
dec
and
pop
fists
rcrl
lea
mov
sub
std
jno
cltd
loopne
fisttpll
dec
add
add
jge
test
jo
jb
sbb
mov
addr16
pusha
sub
mov
cmp
cmp
add
sarl
orb
mov
psubq
sti
fs
push
test
pusha
jne
sbb
mov
je
add
mov
repnz
mov
push
shlb
movsb
add
jmp
cmp
daa
add
add
or
and
or
dec
aaa
test
nopl
mov
jns
lock
mov
test
movsb
sbb
adc
mov
or
adc
test
pop
arpl
add
dec
out
mov
lret
inc
aad
mov
mov
gs
loope
lea
call
ret
mov
popa
fs
lock
js
pop
insb
push
pop
jnp
arpl
push
fadds
je
or
jae
ret
dec
xor
sbb
push
sbb
dec
js
pop
pop
addr16
dec
or
rcrb
dec
popf
mov
mov
inc
inc
adc
jo
rcrb
mov
cmp
popf
pop
ret
movl
in
sub
mov
push
out
getsec
mov
int3
inc
mov
jne
dec
cmc
lock
movsl
push
pop
rolb
pop
sahf
xchg
or
sti
or
orb
popa
lahf
fcoms
push
dec
sub
add
lcall
dec
arpl
xchg
adc
push
rcrb
pop
push
jo
sbb
loopne
addr16
pop
roll
adc
mov
bound
xchg
push
mov
hlt
sti
jo
jmp
loope
sub
aas
mov
or
js
popa
dec
push
push
push
push
repz
fstl
cli
push
jg
dec
dec
lcall
out
add
jle
add
cltd
cmp
sbb
push
mov
lock
in
inc
dec
lea
mov
push
add
ljmp
lods
std
xchg
add
or
mov
inc
push
dec
adc
push
jge
adc
js
push
aaa
jl
jne
fimull
push
push
jp
cmpl
inc
loop
test
aam
push
jp
and
inc
dec
fnop
mov
sbb
mov
jae
sbb
dec
cmp
pushf
test
lock
testl
pop
lock
adcb
add
ret
mov
push
lds
mov
je
shl
mov
jo
mov
movsb
adc
shr
test
aaa
pop
pop
mov
and
cwtl
jae
dec
rorb
sub
and
mov
sub
xchg
pop
or
dec
mov
mov
and
mov
or
dec
add
mov
push
mov
je
movsb
push
mov
movsl
dec
aad
jg
sub
mov
add
xor
nop
rolb
cltd
or
inc
and
pop
incl
dec
lods
and
sub
sti
xchg
js
inc
pop
lea
adc
out
push
pop
cmp
mov
je
and
pusha
push
pushf
adc
add
or
andb
sbb
call
cs
imul
inc
out
push
inc
adc
xor
test
data16
xchg
inc
sahf
pop
push
call
insl
insb
arpl
mov
push
sbb
mov
leave
lea
adc
pop
push
adc
lods
add
dec
dec
mov
jle
mov
adcb
jle
jbe
xor
xor
and
cmp
pushf
call
cmp
cmp
je
push
lcall
lods
inc
shrb
je
hlt
sbb
sbb
inc
lods
jg
inc
push
xor
jp
aas
fisttpl
fcoms
mov
add
in
adc
dec
jne
push
out
xor
xor
es
mov
dec
test
pop
add
xchg
cli
sbb
adc
push
inc
ret
outsl
inc
stos
mov
or
cmp
je
stos
test
and
push
jbe
inc
dec
mov
dec
inc
lods
fmulp
vmwrite
out
dec
mov
aas
inc
std
lret
sbb
add
cwtl
cmovs
inc
inc
mov
inc
bound
and
pop
push
push
push
aaa
mov
sub
stos
orb
and
sbb
xor
addr16
fldcw
jbe
das
mov
jmp
push
flds
push
fnstcw
pop
mov
or
add
cltd
xchg
lcall
mov
shufps
insb
xchg
inc
sub
fimuls
cmp
xlat
ds
idiv
cmpb
add
ljmp
sub
jne
push
or
xor
xchg
jp
sub
xor
aam
push
inc
sub
data16
jbe
ja
push
sbb
insb
icebp
cmp
cmp
push
or
cld
dec
insb
xor
push
inc
rcrl
sub
xor
lock
loopne
out
cmpsb
jecxz
sti
adc
push
push
pusha
and
icebp
imul
es
adc
or
clc
push
shrl
adc
lahf
loopne
data16
fsts
add
lods
fs
inc
xor
add
xchg
dec
rclb
sub
adc
cmp
and
pusha
pop
jbe
or
mov
cmp
mov
adc
mov
shr
insb
sbb
or
lea
jne
mov
or
xor
cmp
mov
push
es
jmp
mov
in
jne
xchg
jmp
or
mov
pop
mov
repz
sbbl
mov
fwait
jnp
push
jnp
cmp
push
nop
xchg
lock
adc
push
jle
mov
mov
pop
outsl
and
jo
add
clc
mov
dec
push
roll
lahf
mov
dec
jle
ret
mov
fistl
push
fadds
aas
mov
ret
push
push
inc
fisubrl
or
push
loopne
push
je
mov
shlb
loop
insl
in
dec
lahf
xchg
sub
loope
push
add
push
ret
mov
clc
rcrb
ss
fildl
cmpsb
mov
jg
inc
add
pop
pop
jl
je
cmp
rclb
lds
or
pushf
mov
sub
cld
push
dec
pushf
out
insl
xchg
sbb
cmpb
out
mov
sbb
psubb
fildl
mov
fs
jmp
fsubs
fdivr
dec
jmp
jge
neg
cmp
outsl
dec
dec
das
loop
in
nop
jp
frstor
mov
pushf
push
cmp
js
repnz
mov
je
aam
icebp
adc
jo
push
ret
push
push
test
enter
mov
ds
test
test
in
daa
jp
mov
cltd
or
adc
cwtl
cmp
xor
pop
sub
je
jo
jo
aad
cltd
cmp
jne
cmp
jne
or
add
outsb
inc
add
loopne
adc
out
rol
add
sbb
repnz
aam
inc
push
mov
jb
sbb
insb
adc
pop
iret
dec
scas
inc
mov
and
cli
sub
and
cli
shll
pop
sahf
mov
add
dec
insl
ljmp
es
push
add
loope
xor
add
or
rcll
aam
call
add
outsb
push
jae
xor
push
cmc
pusha
mov
jecxz
jecxz
mov
push
pushf
jo
pop
and
rcl
pop
inc
sahf
mov
iret
into
push
or
loopne
push
add
outsl
xor
jg
fildl
sbb
add
inc
sub
jns
call
mov
xor
scas
sahf
and
adc
incb
inc
or
je
pop
push
test
pop
push
sub
in
jp
aam
jmp
pop
xchg
insb
push
adc
mov
jns
filds
sub
inc
jg
add
push
mov
test
repnz
push
mov
adc
dec
and
mov
and
cmp
push
sbb
mov
cmp
push
ss
and
sub
sub
rolb
je
push
dec
push
and
les
dec
cmovns
push
sbb
dec
shlb
inc
sub
dec
pop
js
mov
fsts
inc
sub
xchg
loopne
jmp
inc
enter
push
icebp
inc
add
mov
je
push
pop
jle
push
push
xor
dec
movntq
and
inc
fstpl
insb
cli
movl
add
adc
or
mov
data16
cltd
insl
pushf
cltd
sub
lods
and
cmp
std
in
sub
jl
or
lcall
pop
sbb
mov
adc
cmp
mov
sub
push
sbb
sbb
cltd
addl
or
add
popf
outsb
jns
mov
adc
pop
xchg
add
fstl
add
sub
push
test
mov
mov
les
cmp
push
mov
jnp
lds
dec
add
mov
mov
scas
imul
pop
orl
jp
mov
xchg
popa
or
int3
not
fimuls
ds
pop
in
and
cwtl
pushf
mov
mov
add
mov
inc
insb
js
pop
inc
loop
pusha
adc
dec
pop
cwtl
jbe
das
les
sbb
movsl
or
add
add
outsl
sbb
adc
rolb
push
xor
inc
inc
or
mov
inc
sbb
add
add
insb
jns
jo
shlb
lea
fldenv
mov
mov
cmp
clc
sub
mov
inc
ret
xchg
or
dec
xchg
cwtl
repz
gs
into
popf
divb
aas
mov
xchg
xchg
and
loop
movl
cmp
pop
dec
mov
insb
jg
and
test
mov
xchg
mov
mov
dec
jo
and
repnz
inc
je
and
pop
fdivrl
orl
dec
sub
js
ror
jl
xchg
pusha
mov
nop
xor
jl
jns
mov
pop
cmp
cmpb
push
mov
xchg
mov
pop
or
stos
xor
inc
gs
mov
std
into
or
cmp
jle
mov
cmp
push
or
adc
push
push
add
jmp
lret
and
fidivrs
jg
sbb
cmp
out
int
aas
mov
xor
ret
stos
inc
pop
and
sbb
fsubs
js
lret
incb
jl
dec
xor
xorb
dec
mov
adc
daa
dec
jge
xchg
jne
adc
and
mov
stos
jecxz
insb
loop
jns
arpl
mov
hlt
test
orl
pushf
and
ror
or
adcb
push
mov
sub
jmp
add
fdivrs
mov
xchg
ja
inc
or
adc
sub
add
fmull
dec
addb
not
pop
xor
inc
cmp
sbb
mov
sub
lea
popf
add
flds
fmuls
inc
cmp
dec
incl
nop
aam
xchg
ss
in
fwait
inc
xor
int
stos
scas
push
ret
addl
popf
aam
rorb
cltd
cmp
push
lock
push
sub
aas
pop
pop
mov
xchg
fcoms
int
shll
mov
enter
add
push
rolb
push
jo
inc
add
enter
out
sbb
push
jl
ret
lsl
lods
pop
mov
sub
dec
jne
jmp
shll
xor
mov
push
enter
mov
cmp
cmp
lock
cmc
xchg
xor
and
adc
dec
push
shr
out
loopne
cmp
add
mov
adc
shr
jo
into
pop
ja
mov
cmp
and
jecxz
ret
sarl
sbb
jnp
ret
jns
clc
pop
cld
mov
outsl
mov
jle
add
pop
addl
and
inc
inc
cmp
inc
outsl
inc
add
adc
shl
jl
leave
sbb
push
adc
add
inc
dec
mov
and
test
jne
mov
adcl
xchg
addl
add
pusha
sub
ds
mov
push
jl
sub
int
sbb
dec
shll
sahf
cmpsl
xchg
cs
popa
xor
dec
or
insl
jbe
push
lea
sub
mov
cmpsb
sbb
lcall
cltd
nop
push
add
incl
or
add
mov
shll
xchg
xchg
mov
mov
lret
div
fnstcw
inc
xchg
pop
negl
xchg
xor
cmp
dec
shr
mov
stc
inc
nop
jl
test
xchg
std
xor
add
nop
add
or
push
rorb
out
jle
bound
stos
sahf
ret
mov
sahf
push
imul
pop
loope
lock
jnp
dec
push
sbb
lcall
jle
ret
push
pop
inc
fiaddl
iret
inc
scas
push
in
push
mov
and
mov
lea
inc
cmp
call
incb
sahf
lret
iret
pop
inc
and
les
dec
cmp
insb
inc
daa
mov
jg
addr16
cld
test
rcrb
add
mov
addl
and
pusha
mov
pop
mov
adc
add
ltr
jmp
movsl
cmp
fcmovbe
pop
add
sub
or
fmuls
aad
and
daa
rcl
hlt
and
or
push
addr16
adc
das
sub
adc
and
sbb
sbb
inc
jo
xorl
faddl
jbe
mov
ds
add
lahf
outsl
and
lock
jb
and
leave
and
ret
sub
js
and
nop
fsubrs
leave
and
sub
sarl
pop
add
movsb
cmp
push
adc
sbb
sbb
test
fwait
mov
test
mov
jle
pushf
xchg
dec
jbe
mov
lret
mov
and
and
push
sbb
push
push
jbe
xchg
ds
jl
sub
push
add
cmp
mov
outsl
jmp
cld
adc
or
imul
rclb
iret
stos
test
fwait
mov
pop
add
cmp
push
mov
adc
mov
testl
sbb
add
mov
faddl
mov
or
call
adc
pusha
push
and
aaa
fsubr
push
cmp
icebp
or
mov
push
mov
add
adc
aad
enter
jae
imul
inc
clc
push
add
ret
add
outsl
jge
lods
mov
add
popl
adc
sub
mov
and
xorb
adc
pop
or
adc
jle
into
dec
sub
xchg
sbb
shl
rcrb
data16
movsb
aaa
hlt
cltd
dec
or
mov
mov
mov
xor
add
sbb
ret
je
pop
ret
mov
sar
cmc
fs
and
add
jecxz
es
js
stc
xor
sbb
pop
in
push
lea
push
push
push
cmp
push
xchg
jo
sbb
mov
pop
sub
adc
mov
sub
push
push
jns
inc
cmp
sub
test
add
push
sbb
and
sbb
jle
adc
sti
inc
cmp
cs
mov
inc
push
repnz
pusha
js,pt
push
or
rcrb
adc
xor
mov
mov
shll
or
push
lret
pop
mov
or
dec
cmp
test
push
mov
lods
dec
daa
add
cmp
lds
push
sub
mov
mov
out
sbb
enter
xor
cmp
test
mov
xchg
std
add
mov
stc
sub
ret
lods
inc
add
mov
xor
lret
push
fstl
sbb
xchg
sarb
mov
sbb
pop
xchg
cmp
inc
mov
clc
push
add
xchg
and
xor
sbb
out
scas
icebp
and
enter
mov
jmp
xchg
shrl
mov
push
nop
sbb
sar
aam
das
or
adc
mov
push
cmp
iret
sub
cmp
sub
push
mov
sbb
add
cmc
orl
mov
addr16
rorl
shr
jnp
lock
fwait
and
xchg
ss
andb
ljmp
pop
negl
test
test
push
xchg
pop
cmp
cli
mov
push
dec
sub
dec
and
mov
andl
in
cmp
pop
sub
cmp
and
ret
sbb
add
sbb
lea
hlt
nop
mov
adc
add
inc
fistl
mov
mov
jne
jmp
aaa
mov
jl
outsl
cmp
lea
mov
cld
adc
daa
shl
xor
rol
push
mov
ja
inc
jecxz
les
or
popa
cmp
pop
test
push
adc
loope
cmp
fucomi
jbe
push
dec
push
sbb
push
cmpsl
inc
cmp
roll
lods
push
xchg
dec
push
mov
inc
jne
push
adcb
imul
fs
fmul
xchg
rclb
cmp
sbb
sbb
lock
sbb
fxch
aam
insb
fiadds
and
es
test
fisubs
nop
loope
add
js
testb
inc
pop
inc
add
imull
jo
add
nop
lods
mov
sbb
js
mov
jns
ds
sub
frstor
xchg
jae
mov
push
notb
cwtl
js
add
push
mov
scas
rorl
sbb
gs
mov
cmp
add
inc
sti
xchg
and
jno
or
add
adcb
mov
adc
pushf
jmp
xor
incb
negl
sahf
out
popa
or
adc
pop
dec
push
push
pop
sub
call
inc
out
sbb
mov
in
jmp
sbb
inc
add
or
mov
pop
leave
popl
test
and
push
out
aas
cwtl
and
iret
push
stos
add
dec
add
shlb
push
inc
add
sbb
lock
dec
lods
std
inc
add
mov
rolb
sti
and
cmp
enter
fcomps
aaa
sub
ds
lds
loopne
pop
add
mov
sbb
popf
mov
mov
loopne
fwait
ret
dec
adc
lock
std
test
push
jne
push
or
mov
loopne
mov
add
imul
arpl
push
xchg
int3
ret
xor
dec
lock
sub
call
sub
lret
pop
mov
mov
jnp
cs
int
mov
scas
ret
rep
mov
add
inc
lock
je
push
sub
ret
and
cmc
idivb
cs
gs
adc
jb
lods
inc
pusha
daa
orl
pushf
cmp
mov
jbe
incb
push
add
push
test
push
and
inc
pop
and
sub
xorl
push
sbb
repnz
popa
push
ror
and
das
xor
fistl
shlb
dec
sbb
xor
pop
push
je
mov
je
push
xor
cs
jo
add
rol
mov
clc
add
xor
dec
mov
fmuls
aaa
push
sub
in
push
sbb
cmp
push
cmp
movsb
push
ja
arpl
pushf
xchg
mov
add
aas
lcall
dec
cmp
movsl
sbb
vmwrite
push
or
push
insb
adcb
loopne
inc
cmp
dec
cmp
xor
std
cmp
push
push
dec
jmp
popa
popa
jnp
xor
out
push
dec
lret
push
dec
jecxz
pop
test
pop
movswl
das
shlb
mov
lcall
out
jge
jmp
ret
cmp
int3
and
cwtl
lahf
mov
cmp
pop
mov
sub
xchg
mov
push
push
pop
add
fstl
imul
add
adc
or
mov
adc
dec
sub
push
mov
and
test
cmpsb
or
les
aaa
mov
and
add
xor
js
push
inc
sti
adc
mov
add
clc
push
or
sub
outsl
sub
jp
rclb
imul
xor
push
out
push
aam
sbb
push
or
cmpsl
in
or
scas
pop
call
rcrb
xor
push
and
xchg
cld
adc
adc
fistpl
pop
push
fwait
sub
int
setne
mov
or
or
sub
mov
popa
mov
add
xchg
pop
arpl
arpl
push
insb
push
jns
push
arpl
lret
mov
push
push
in
sub
lea
cmp
dec
or
mov
xchg
sub
inc
fs
sub
push
xor
loop
cs
cmp
add
push
dec
adc
shrl
stos
fcoms
repz
outsb
add
pop
jl
arpl
mov
inc
mov
and
aam
pop
xorl
std
add
push
imul
ds
insb
and
ds
cmp
and
and
cmp
repnz
lret
cmp
jbe
push
xor
adc
cmp
sub
jae
push
insb
fst
xchg
sub
das
cmp
mov
frstor
xchg
dec
dec
add
and
adc
push
faddl
and
or
lcall
mov
xor
push
mov
bound
mov
push
cmp
and
out
push
cmp
pop
lods
data16
and
pop
xchg
adc
mov
or
inc
lods
push
jo
pop
xchg
rclb
mov
dec
add
sbb
add
js
mov
movsl
daa
xor
xor
pop
icebp
jge
push
adc
pop
call
bound
add
mov
mov
shll
jb
jae
push
data16
sub
mov
jae
xchg
jae
rorb
jb
sbb
jp
push
inc
sub
sub
popa
push
mov
or
sbb
and
mov
and
ficoms
fwait
sub
sub
push
xchg
leave
pop
cmpsb
dec
andl
dec
cmc
fs
mov
mov
hlt
inc
or
push
push
inc
mov
add
sub
popf
or
xor
mov
aam
test
add
jl
inc
adc
ja
cmp
cmp
testl
jp
pop
and
sbb
inc
imul
add
xor
sub
fistpl
and
jnp
mov
nop
jne
scas
or
pop
mov
and
mov
add
lret
jp
out
sub
popa
and
xor
jl
movsb
pusha
sbb
inc
add
mov
pop
cmp
mov
out
jne
insl
add
or
push
xor
les
int
add
inc
inc
loop
push
and
xor
mov
sbb
clc
push
adc
pop
and
mov
adc
mov
or
or
jne
shlb
mov
sbb
mov
sbb
mov
inc
xchg
stos
push
rorl
add
dec
sbb
es
test
fsubs
bound
add
or
cwtl
jp
sbb
ret
dec
lock
aad
push
sbb
or
movsl
out
inc
push
sbb
adc
mov
ret
push
sub
loop
push
pop
dec
cwtl
dec
inc
dec
sub
test
les
imul
adc
jmp
and
adc
rcrl
nop
test
mov
sbb
pop
mov
jmp
jg
hlt
mov
add
sbb
add
sbb
in
dec
cmpsb
std
push
adc
adc
add
or
push
push
clc
stos
popa
testb
inc
mov
push
or
mov
inc
adc
and
dec
and
shlb
lods
sub
adc
repnz
inc
inc
add
dec
push
hlt
imul
inc
fcomps
mov
scas
pop
test
mov
adc
push
inc
aas
dec
dec
lods
inc
jp
pop
rolb
mov
jle
or
test
sbbl
stos
jg
dec
mov
pop
mov
pop
jno
xchg
add
test
movsb
or
jmp
jnp
aaa
inc
push
dec
lock
ret
jmp
cmp
roll
push
insb
lahf
mov
push
cs
cmpl
cmp
jne
add
jl
nop
dec
jne
mov
cs
or
dec
mov
cmp
inc
or
jbe
add
push
xor
add
inc
jne
pop
sub
add
loopne
int
and
cmp
mov
stc
aaa
repz
notl
add
pop
repnz
sti
add
bound
cmp
sbb
stos
cld
add
push
or
cmp
repnz
mov
xchg
adc
mov
or
adc
mov
xor
cmp
mov
cmp
jne
mov
lea
push
jno
test
push
cld
pusha
call
lea
cmc
bound
inc
dec
push
xchg
jg
push
das
add
xchg
push
ljmp
xchg
or
icebp
gs
xor
in
mov
push
xor
sahf
sub
push
xor
lock
fcomps
adc
fisubs
or
or
push
mov
mov
and
sarb
popa
gs
es
test
xchg
mov
dec
xor
jge
jge
ret
mov
jo
add
push
mov
sub
out
les
push
out
or
adc
cmpb
jb
cmpl
mov
divb
jmp
adc
rorb
dec
bound
aam
or
push
test
rolb
dec
jge
shrl
imul
push
push
stos
sub
int3
fiaddl
ret
cmp
je
push
cmp
ficompl
ret
sbb
xchg
add
and
push
mov
and
rcl
clc
push
xchg
imul
jo
adc
cs
out
cli
jg
adc
mov
arpl
jecxz
dec
cmp
sbb
cmc
jmp
mov
shll
out
sub
pop
cmpb
cmc
es
dec
scas
fdivrs
mov
imul
sbb
mov
jnp
stos
or
je
jg
repnz
movsl
imul
mul
jne
or
add
mov
clc
push
sti
dec
jne
ret
incb
aad
push
mov
push
push
sub
sub
sbb
pop
lea
pop
jns
mov
sbb
add
dec
ret
lods
imulb
jnp
mov
outsl
test
lods
push
int3
fistpll
jle
cmp
je
jecxz
fcmovnbe
pop
je
mov
lret
sub
cmpsb
imul
mov
subl
push
add
in
mov
sub
imul
mov
scas
inc
sub
mov
push
add
les
enter
lcall
repnz
push
lock
or
sbbb
daa
and
jne
and
dec
cmp
push
adc
mov
cmp
push
pop
mov
loop
enter
jno
les
adc
push
sub
xchg
add
jno
push
das
jle
add
xchg
mov
jecxz
movsb
pop
mov
lea
and
dec
mov
push
and
dec
mov
sbb
sbb
loope
loopne
add
jno
imul
xchg
test
pop
mov
sub
add
push
iret
sbb
mov
add
sbb
mov
and
cmp
add
mov
mov
jo
pop
mov
sbb
adc
dec
clc
jg
cmpb
adc
std
cmp
jg
mov
and
xor
xchg
shll
sub
jbe
add
jle
scas
xor
es
sbb
fstl
cwtl
clc
sbb
add
xbegin
loope
ret
loopne
jmp
cmp
sbb
fisttpll
loopne
in
jl
jmp
dec
or
or
mov
push
in
jbe
push
push
fadd
test
movsb
roll
pop
repnz
xchg
test
movsl
je
test
pop
xchg
pop
adc
jbe
std
push
push
cwtl
xor
pop
jmp
xchg
out
dec
push
subl
mov
int3
fidivl
addl
adc
pop
xor
push
and
ja
or
cmp
sbb
xlat
cmp
mov
cmc
or
mov
mov
sub
sub
xlat
cwtl
inc
sub
xchg
push
jnp
fstpl
and
push
fimuls
gs
cs
push
sub
push
push
adc
inc
insl
and
add
jo
dec
xor
adc
push
in
mov
push
sub
sbb
test
pop
add
jns
repnz
inc
jl
push
fucomip
xor
sbb
sub
dec
cld
mov
inc
add
push
test
dec
mov
out
stos
sbb
adc
push
or
inc
xor
jo
dec
or
rcrb
popa
lahf
xchg
adc
xor
or
pop
mov
add
stc
cmp
lods
push
xor
aas
cmpl
ss
adc
mov
jae
cmpb
leave
shll
jb
imul
add
or
adc
movl
in
push
sarb
sub
sbb
dec
imul
push
lods
add
out
and
mov
rcll
sbb
push
push
adc
popa
sub
xorb
jns
sbb
push
repnz
rorb
rolb
push
int3
in
scas
addb
lock
fmuls
mov
or
push
aas
loope
pop
inc
pop
call
movsl
and
xlat
push
addl
inc
mov
popa
arpl
in
push
add
jle
js
bound
das
aas
lock
call
out
popa
rolb
and
fistps
inc
daa
cmp
movsl
orb
jne
dec
repz
add
jnp
mov
lcall
lock
int3
xor
and
inc
dec
or
and
test
cltd
pop
inc
inc
cmp
fcoml
push
and
push
jns
sbb
adc
data16
mov
aas
ret
cmp
fcmovu
adc
movsbl
jns
pop
and
xchg
push
arpl
add
cmp
xor
nop
js
jle
ret
adc
xchg
jo
sbb
mov
dec
pop
xchg
jge
inc
repz
inc
sbb
lret
xor
dec
xchg
sub
ds
ss
ljmp
loop
xor
adc
and
pusha
dec
cmp
data16
jge
add
push
rcll
pop
xor
data16
call
push
scas
lcallw
add
and
je
movsl
pop
xchg
add
xor
add
inc
jl
mov
lret
movsl
lods
add
xchg
adc
ljmp
jae
cmova
addr16
mov
push
testl
push
jnp
insb
imul
pop
cmp
test
decl
lret
mov
mov
mov
shl
inc
jns
dec
cli
repnz
xchg
add
jnp
xchg
add
jmp
cmp
mov
inc
and
mov
mov
mov
and
jge
sub
into
rclb
fisubrs
ret
jge
test
test
andl
mov
dec
pop
clc
jge
add
add
add
mov
push
add
mov
cld
or
movb
dec
jne
dec
lods
jecxz
scas
cmp
hlt
add
mov
stos
loopne
jbe
and
dec
add
shrb
sub
rcr
ljmp
repnz
sub
sbb
jmp
cli
xorl
incl
and
xor
cli
mov
pop
in
clc
inc
je
inc
sbb
fildll
dec
or
inc
insl
adc
bound
rcll
jne
pop
jae
sbb
dec
inc
dec
inc
clc
clc
imul
xchg
pop
inc
lock
dec
sbb
xchg
sarb
ljmp
idivb
mov
cmp
jbe
cmc
sub
cmp
and
push
ss
jle
mov
les
std
dec
and
xchg
lret
and
lock
out
mov
jmp
push
mov
or
and
in
mov
into
in
fisttpl
orl
and
add
arpl
mov
pop
ret
or
orb
clc
xchg
out
push
or
sbb
sub
hlt
loopne
xor
cmp
adc
ds
ret
lods
push
push
push
ds
fs
push
xlat
and
or
dec
adc
lret
xchg
pusha
cld
xchg
ljmp
add
push
sbb
push
add
pop
cmpsb
ja
out
cmp
pop
icebp
popa
dec
or
mov
insb
jmp
lea
inc
test
mov
sbb
lods
mov
push
push
mov
loopne
cmpsl
int3
ficomps
and
cmp
imul
push
mov
xor
fiadds
adc
xor
dec
cmp
hlt
add
dec
sbb
jmp
imul
or
mov
outsb
lcall
lods
dec
push
xchg
pusha
jl
add
ret
xor
inc
dec
mov
push
add
and
add
xor
inc
add
sub
add
pop
fs
inc
xchg
rol
repnz
out
add
nop
dec
push
in
mov
movsb
push
cmp
call
push
cs
and
or
dec
das
mov
outsl
sub
sbb
adc
cmp
push
fisubrl
pusha
adc
dec
push
xchg
shrl
lods
fistpll
xor
ret
into
xchg
pop
push
mov
sbb
dec
shll
and
lcall
inc
xor
mov
cmp
pop
mov
adc
dec
inc
adc
mov
aaa
mov
rclb
je
mov
sub
inc
sub
mov
push
jo
pop
aad
dec
push
je
lcall
pop
add
jle
out
mov
inc
nop
test
jb
int
mov
push
push
xchg
lret
out
mov
mov
xchg
in
jb
cs
aaa
out
add
add
or
pop
in
add
dec
adc
loopne
scas
sub
jbe
cmpl
mov
or
mov
scas
nop
dec
push
psubb
shl
dec
pusha
xor
xchg
add
xchg
js
rcl
inc
mov
cmp
or
ljmp
adc
or
fldt
or
or
or
pop
xchg
xchg
je
insb
inc
push
dec
mov
push
push
jle
mov
xchg
sbb
jns
cmp
js
inc
adc
lods
lret
jp
lret
mov
sti
pop
repnz
sub
cs
sbb
inc
movsl
pusha
lret
pop
dec
aad
clc
dec
push
push
push
cmp
cmp
orl
adc
mov
xor
push
pop
adc
jecxz
sub
mov
imul
aas
push
dec
add
cmp
jae
xor
test
sbb
jl
nop
lods
outsl
iret
lods
lahf
sbb
cmp
jae
aaa
add
shlb
rclb
jge
xor
test
add
movsb
mov
imul
xchg
pop
sbb
stos
enter
sbb
rcrl
shl
enter
xor
sub
sub
fwait
mov
pushf
jl
aam
adc
cmp
adc
xchg
jle
orl
jmp
sub
add
sti
sarb
or
aaa
pop
js
orl
fmuls
cmpb
sbb
cmp
leave
loopne
arpl
xchg
mov
sbb
jns
ret
mov
imul
nop
pop
sub
mov
jns,pt
mov
xchg
int
xor
jle
je
gs
mov
sub
jae
jg
fidivs
ficomps
jge
adc
popf
je
jmp
jge
jmp
jbe
push
xchg
stos
xor
fcomps
jae
neg
xchg
sbb
pop
or
add
cli
int3
push
jb
imul
daa
jmp
mov
jae
inc
and
popa
xorb
orl
arpl
or
loopne
dec
in
or
scas
push
push
add
add
mov
and
jle
jne
fisttpl
pop
dec
test
mov
jae
je
cwtl
sub
and
movl
xor
mov
inc
sub
iret
loop
jne
push
faddl
sbb
jle
and
aas
lods
mov
pop
adc
test
xor
andb
pop
imul
add
inc
pop
jge
xor
and
sbb
xor
notl
or
mov
mov
mov
scas
fstpt
pop
or
ret
adc
divb
lret
add
pusha
mov
decl
push
adc
test
push
or
xor
ficomps
sbb
add
push
adc
dec
ror
xor
dec
mov
xchg
inc
int3
cmp
jb
mov
sub
or
add
mov
mov
lods
mov
imull
cmpsb
cltd
imul
or
adc
sbb
xchg
ljmp
insl
jmp
cmc
add
sbb
pop
lcall
xor
into
ss
mov
cmp
ljmp
adc
je
pop
dec
aad
mov
push
mov
cmp
pop
negl
jae
push
fucomip
ja
ss
je
cmp
loopne
add
outsb
daa
and
sbb
mov
sub
inc
cmc
add
fimuls
xchg
fisttps
loopne
and
dec
fs
cli
jae
aam
jmp
pop
mulb
inc
push
andb
dec
or
adc
jne
mov
bnd
jbe
cmp
mov
mov
adc
repnz
xor
pop
add
mov
cmpsl
loope
dec
sbb
or
dec
cmp
xor
adc
enter
sub
cwtl
or
push
fwait
xor
xor
push
jno
push
xor
inc
mov
or
pop
cli
loop
push
sub
dec
inc
or
push
cmp
and
icebp
pop
jl
pop
or
cli
inc
adc
sub
and
add
lock
adc
mov
pop
mov
call
aam
pop
mov
mov
and
mov
cmp
movl
das
scas
out
jbe
xchg
dec
inc
add
mov
outsb
mov
mov
xor
sbbl
cmp
mov
and
ret
sti
cmp
je
scas
adc
mov
cmp
les
mov
sub
or
mov
dec
or
adc
sbb
push
enter
pop
sub
dec
ljmp
mov
sub
rcrl
jge
or
and
rcrl
movsl
inc
movsl
jo
icebp
xchg
add
pop
es
movsl
shlb
adc
xor
and
lret
mov
outsl
inc
dec
adc
cmp
inc
or
pop
push
pop
je
aam
cmpb
jne
push
sbb
and
add
popw
adc
nop
sub
cvttps2pi
cmpsb
dec
adc
fadds
pop
fisttpl
daa
mov
cmp
jmp
dec
test
xor
add
pop
mov
call
add
inc
inc
out
and
adc
cs
and
mov
push
cmp
mov
loope
sub
out
adc
out
or
out
add
inc
pop
mov
add
mov
lcall
dec
mov
mov
add
add
jecxz
add
xchg
mov
xor
or
sbb
jbe
cmp
je
xor
xchg
or
movl
sbb
outsb
jmp
cmp
cmp
or
sbb
je
ss
mov
mov
mov
xor
add
sti
cmpsb
add
divl
jmp
inc
roll
ja
daa
fcmovb
or
dec
addb
jae
test
loopne
sti
mov
sub
lods
sahf
cld
cmp
sbb
cmp
add
sub
mov
pop
or
mov
jbe
mov
jnp
rcrb
or
dec
fisubl
loopne
inc
out
pop
add
pop
mov
xlat
rcr
cmp
std
cmc
pop
push
je
cmp
mov
mov
inc
or
adc
sbb
xchg
in
adc
mov
dec
or
jns
or
sbb
lock
shlb
mov
mov
sbb
rorl
add
dec
ljmp
dec
ss
cltd
pop
push
jbe
aaa
inc
add
aam
add
ja
nop
sbb
insl
push
je
mov
lea
sub
lret
adc
push
fidivl
jne
lds
loopne
sarb
lods
adc
out
in
inc
adc
pusha
ret
fdivrl
fistps
pop
push
xchg
data16
push
pop
icebp
and
test
sbb
imul
rcrl
popa
call
sarl
sbb
sbb
or
add
xor
xor
pop
jae
mov
dec
in
orb
push
push
push
pop
cmp
and
jbe
lcall
outsb
push
add
icebp
xor
inc
sbb
adc
xchg
add
lods
or
push
int3
add
add
inc
mov
mov
loopne
mov
je
add
pop
push
adc
lds
ljmp
xor
aad
adc
clc
inc
lret
mov
cli
xchg
fcmovu
jb
cs
in
mov
test
push
xor
dec
sti
push
dec
or
mov
pop
orl
nop
push
xchg
inc
mov
popa
add
add
inc
pushf
lcall
mov
cmp
sahf
shrb
push
cmpb
mov
js
jbe
stc
mov
addb
xor
cs
scas
push
clc
shr
jp
das
and
or
or
mov
lods
js
mov
aam
mov
sbb
loopne
mov
add
int3
addb
stc
add
mov
cmp
dec
or
add
jnp
fadd
outsb
lods
jp
sbb
arpl
push
push
inc
cmpsb
sub
inc
fadd
add
outsl
shrb
bound
addl
inc
aaa
xchg
dec
inc
jbe
rcl
test
in
sbb
movsl
and
inc
outsl
and
sbb
imul
out
incb
push
lds
fwait
sub
stc
inc
roll
iret
add
lds
inc
xlat
push
pop
mov
jl
inc
fwait
jbe
cmp
push
addl
jl
dec
mov
adc
mov
adcl
adc
push
call
shrl
add
nop
pop
nop
sub
lods
out
xchg
movsb
stos
mov
in
push
push
cmp
and
push
scas
sub
or
cmp
mov
and
inc
push
mov
push
dec
add
xchg
adc
dec
push
shrl
into
incb
cli
mov
mov
loope
shr
add
cmp
mov
sbb
cs
mov
adc
inc
adc
add
test
cmp
pop
sub
push
sahf
or
dec
pop
push
push
push
push
loopne
cmp
js
add
mov
pop
pop
mov
incl
xchg
add
ficompl
andb
or
adc
test
pop
jbe
adc
shl
push
popa
jo
mov
sub
neg
push
loopne
xor
mov
inc
cmp
jne
add
and
dec
pop
sbb
and
xchg
cs
or
inc
loopne
incl
pop
popf
cli
mov
lahf
pop
sbb
test
add
loope
push
mov
sub
stc
aad
inc
test
ja
and
jge
sbb
inc
cmp
pop
imul
sbb
inc
mov
push
lds
movsb
mull
movsb
mov
adc
jge
push
and
jno
xchg
adc
test
sbb
rcrb
lock
push
sbb
test
cwtl
cmp
in
push
xor
test
movsb
jbe
mov
sub
adcb
dec
addb
jne
push
aas
dec
insl
loope
push
mov
cmp
lea
je
jo
dec
dec
inc
ret
ret
mov
ss
aaa
popf
rol
jne
sbb
aaa
shll
arpl
and
js
ret
adc
push
adc
jmp
lret
lea
ss
lea
pop
sbb
add
insb
shll
or
arpl
jo
popa
lret
mov
rcll
sbb
push
mov
fwait
repz
je
loope
inc
xorl
xchg
repnz
pop
out
jp
rcll
pushf
loop
movsb
mov
lods
gs
or
outsb
lds
arpl
loop
cmc
test
jp
in
push
mov
out
dec
mov
jne
and
xchg
mov
lds
andb
jae
cs
add
aam
mov
mov
rcr
ret
fcmovnu
and
pop
sub
ljmp
icebp
jne
out
icebp
adc
rolb
cmp
add
mov
enter
test
push
outsl
sarb
xchg
aad
jmp
lret
jp
pop
cmp
nop
enter
dec
cmpsl
aad
nop
cmpsb
xchg
inc
mov
cs
js
pop
inc
rolb
add
cmpsl
scas
test
jmp
jge
add
rorb
inc
adc
test
sbb
or
inc
adc
dec
xchg
add
mov
xchg
sbb
out
shll
ret
sbb
aad
mov
mov
dec
sbb
xchg
cli
jg
lea
cmp
mov
test
es
ret
mov
call
andl
jbe
leave
inc
fwait
xor
pop
and
cmp
add
lea
cs
or
cmp
int
outsb
sub
jb
inc
in
inc
xor
loop
sub
cmp
cld
ss
enter
mov
sub
je
jo
push
testb
mov
add
sarl
popa
jecxz
cmc
sub
testb
inc
lock
lods
mov
negb
mov
shr
xchg
shrl
add
cli
shlb
jo
sbb
pushf
mov
jne
testb
sbb
vaddpd
dec
push
pusha
pop
mov
mov
dec
rclb
xchg
or
sub
gs
dec
cltd
pusha
in
pop
filds
daa
add
orb
and
add
add
inc
adc
sarb
add
push
clc
dec
jle,pn
sbbl
fiadds
or
outsb
dec
out
aas
mov
jne
ret
push
iret
enter
filds
dec
jl
mov
sub
push
xchg
mov
insb
xor
dec
and
or
or
push
or
xor
aas
movsb
cltd
mov
xchg
sti
leave
inc
xchg
flds
cmp
shll
or
outsl
fwait
jns
fdivl
mov
mov
test
pusha
jnp
sub
cmp
inc
push
dec
sub
and
je
cmpsl
adcl
inc
mov
sarl
add
add
push
jo
pusha
stos
imul
je
add
ljmp
sbb
adc
inc
push
push
and
scas
rclb
adc
jae
push
xor
cmp
cld
int3
or
jnp
jp
test
mov
jg
jle
add
jge
add
aaa
xor
sbb
adc
pop
dec
cwtl
add
out
dec
sbb
pusha
mov
or
xchg
adc
or
mov
lret
and
mov
gs
test
adc
cmc
cmp
or
aaa
jae
add
mov
add
inc
push
incl
cltd
push
push
aaa
sbb
push
or
sub
aaa
ret
mov
dec
aaa
movsb
lret
pop
xor
or
push
lcall
or
cltd
xlat
mov
xchg
push
push
out
sbb
and
xor
rolb
or
nop
pop
jmp
jg
repz
rorb
scas
jge
sbb
and
pop
das
rolb
in
stos
inc
and
push
push
lds
push
clc
bnd
aad
loop
adc
filds
push
jo
jge
or
outsb
xor
mov
out
or
xor
push
ficoms
test
shrb
scas
push
push
js
shrb
adc
pop
scas
mov
cmp
inc
fisubl
mov
gs
cmp
xor
popa
cmp
xchg
rolb
stos
xchg
or
xor
push
ljmp
and
fcmovnb
pusha
cmp
lcall
hlt
lock
pop
or
jmp
push
mov
xor
rep
fidivs
xchg
scas
and
ret
inc
and
je
or
idivb
and
and
ret
test
dec
pop
jge
lods
int
xor
xchg
push
sub
add
jl
dec
add
sub
dec
dec
sbbl
in
push
pop
adc
les
push
addl
cmp
dec
adc
dec
push
mov
push
rorl
pop
cmp
test
inc
mov
mov
pop
inc
jne
sbbl
inc
and
and
rolb
mov
jo
xchg
push
enter
push
cmp
cli
adc
jl
aad
out
popl
or
out
jae
mov
xor
push
push
ds
ret
das
stc
andb
xor
shll
cmp
or
pop
shll
out
inc
rcll
leave
enter
push
cmp
mov
jp
hlt
push
and
adc
inc
lds
sub
sbb
pop
repnz
int3
ret
and
sub
adc
test
das
xor
cmp
leave
inc
inc
daa
mov
je
inc
lods
and
jb
inc
mov
pop
or
mov
iret
in
pop
rorl
adc
adc
rol
sbb
dec
push
xchg
cmp
push
add
rolb
pusha
and
sub
fisttps
sub
lahf
push
inc
adc
and
es
pusha
sbb
fsubrs
push
inc
cwtl
sub
and
pop
cmpsb
movsl
xor
repz
fs
mov
mov
sbb
lock
pusha
hlt
xor
cmp
jp
dec
fcoml
mov
ficomps
dec
ljmp
lods
rcr
mov
dec
push
lcall
rcl
push
test
xchg
fsubr
or
lea
aam
lea
pop
notl
push
mov
pop
dec
mov
cli
push
push
push
pop
sub
jnp
ja
mov
add
test
pop
mov
and
enter
nop
das
data16
jb
and
add
dec
push
cmp
or
push
subb
adc
push
xor
inc
aad
add
add
xor
sub
jmp
push
inc
sbb
insb
mov
xchg
cmp
cmp
dec
jle
test
loope
sub
fidivrs
pushf
pop
xchg
push
mov
add
hlt
and
ficomps
or
push
fnstenv
rorb
inc
xchg
out
or
aad
jae
lea
dec
inc
sub
or
jnp
dec
test
adc
add
adc
xchg
add
cmp
cmp
arpl
in
push
ror
insl
push
imul
mov
or
mov
xor
mov
mov
jge
sub
or
aam
mulb
add
push
mov
inc
mov
into
insb
rorl
sbb
inc
push
sbb
aam
and
adc
clc
pusha
arpl
xor
mov
cltd
subl
or
or
jg,pn
mov
jo
pop
jbe
adc
enter
push
in
sub
mov
icebp
dec
test
in
jle
fistps
lods
inc
and
dec
popa
push
and
or
sub
fs
andl
pop
dec
add
push
mov
imul
or
pop
dec
push
pop
pop
cltd
pop
adc
xchg
add
imull
mov
and
in
je
fsubrl
xorl
mov
rorl
aaa
xchg
xor
add
add
mov
aaa
in
push
jg
shll
ret
mov
add
lea
cwtl
push
sti
mov
sub
sbb
jbe
pop
lock
movsl
or
mov
outsb
push
dec
add
loop
shll
loope
inc
inc
test
push
inc
xchg
xchg
or
push
push
mov
enter
and
sbb
pop
adc
ret
imul
sbb
lret
sbb
sbb
sahf
iret
inc
mov
sbb
jge
dec
sbb
push
scas
add
add
pusha
adc
xchg
cltd
or
mov
push
cmp
jo
and
pop
lret
xorb
pop
daa
dec
movsb
xor
jl
in
dec
inc
test
int3
jbe
inc
add
enter
and
dec
and
adc
mov
loopne
push
pop
pushf
mov
dec
orl
pop
scas
insb
and
add
adc
roll
bound
push
add
enter
inc
push
ficoml
or
pop
xchg
enter
pop
xlat
mov
jmp
inc
sbb
sub
cmpl
cwtl
adc
push
and
lcall
and
mov
or
mov
jmp
mov
add
sbb
jl
or
adc
in
push
mov
xchg
dec
pop
or
mov
sbb
dec
inc
push
push
push
inc
mov
das
fistl
xor
or
add
daa
mov
les
xchg
pop
dec
xor
ss
cmp
lret
sub
repnz
daa
adc
stos
mov
or
ret
push
pop
mov
xorb
adc
push
ret
sub
sbb
xchg
adc
lock
rorl
or
lods
fisttps
push
xor
jmp
inc
fistps
test
mov
push
adcb
mov
cmp
pop
pop
and
daa
xor
sbb
sub
or
pop
jmp
out
mov
inc
imul
pop
mov
fmuls
bound
sarl
push
decb
out
mov
test
outsl
loopne
pop
jl
shrl
jb
xchg
jmp
dec
dec
lods
fsubrs
mov
inc
mov
out
pop
add
mov
rorb
dec
lock
mov
stc
push
push
push
sbb
je
jnp
mov
imul
mov
xchg
popa
psubb
or
xchg
in
jecxz
jecxz
mov
push
bound
adc
inc
lea
xor
mov
cmp
sub
ret
rolb
cvtdq2ps
add
inc
cmp
inc
jmp
jne
push
push
xchg
pusha
mov
jno
inc
dec
adc
adc
mov
xchg
loopne
mov
rcrl
sub
xor
dec
inc
add
imul
call
aas
and
stc
out
cmpsb
pushf
fadd
or
fbstp
hlt
adc
lret
xchg
push
xchg
je
das
push
add
lock
adc
push
lds
call
mov
and
add
shlb
cli
lcall
or
decl
testl
nop
jno
test
pop
mov
push
mov
pushf
inc
push
add
sub
pop
jl
push
leave
adc
mov
and
push
mov
sub
mov
cltd
xor
sub
ds
mov
cmp
mov
or
jne
in
xor
and
pop
jle
fadds
decl
adc
pop
push
incl
cmp
jle
mov
fsubs
push
push
mov
out
jbe
and
adc
push
mov
jmp
decl
mov
mov
test
jno
or
imul
js
in
push
sub
mov
sub
rcr
and
adc
mov
mov
xor
add
add
and
and
inc
sbb
push
sub
mov
sbb
cmpsl
dec
daa
push
adc
stc
jl
adc
adc
insb
xchg
inc
cwtl
adc
cltd
in
dec
adc
and
insl
nop
arpl
in
out
adc
xor
insb
push
inc
push
xor
xor
fs
or
or
orb
inc
dec
or
and
add
sbb
cmp
imul
add
and
push
push
daa
push
add
or
xchg
or
sbb
daa
add
ja
and
dec
mov
xchg
jo
sbbb
mov
test
inc
sub
xor
jae
outsl
and
xor
jb
push
jb
das
cs
jb
push
sub
jb
sub
jb
push
jb
daa
es
jb
push
and
or
pop
and
jecxz
arpl
sub
push
xchg
sub
cli
rorb
sbb
repz
xor
mov
test
ret
pop
mov
out
cmp
ja
insb
insl
aas
aad
and
jno
adc
rorl
iret
pop
and
lret
push
test
cmp
add
dec
adc
xor
adc
in
in
adc
xchg
daa
daa
in
or
sbb
loopne
pushf
pushf
mov
lret
push
movsb
push
push
or
dec
dec
dec
inc
or
dec
or
cmp
or
push
in
mov
sub
aas
les
andl
daa
sub
add
pop
fildl
dec
dec
mov
cwtl
mov
mov
or
pop
pop
cmp
add
mov
sahf
mov
je
push
xchg
dec
ret
arpl
push
or
nop
xor
mov
test
pushf
or
insb
ljmp
ret
jl
mov
push
dec
cmpsl
cwtl
mov
mov
add
dec
data16
xor
ret
push
cmc
data16
dec
or
pop
xor
rcrb
mov
pop
pusha
arpl
xchg
nop
sub
push
cmp
cmp
sbb
stos
adc
add
mov
push
das
push
movsl
rcrl
or
cmp
mov
insb
das
xor
in
je
push
divl
cmp
lea
inc
ret
dec
fmuls
ds
out
sbb
push
push
mov
and
sbb
xor
adc
mov
mov
test
icebp
jns
aas
mov
xchg
es
je
dec
or
mov
or
adcb
inc
xor
xchg
cmp
jle
push
bound
adc
cwtl
and
fwait
js
add
jbe
sub
pop
gs
dec
pusha
cmp
sahf
or
add
push
pop
cmp
ficoms
xchg
je
mov
andb
shr
out
jg
push
rolb
add
rclb
sbb
mov
adc
mov
int
push
push
addb
rol
push
nop
jo
adc
or
int3
int
adc
cmp
mov
push
dec
xor
add
jl
pusha
sbb
push
lock
shlb
xchg
push
flds
adc
and
test
and
sbb
test
xchg
xorl
sbb
push
adc
fildl
rclb
popf
testb
fidivrs
push
xchg
xor
popf
mov
rolb
loop
lock
pop
into
daa
stc
xor
adc
or
jne
loopne
pop
fwait
js
push
push
sti
enter
fs
jle
lods
pop
jae
jbe
push
jp
ror
ret
or
int
jp
adc
or
call
jecxz
flds
inc
cmp
and
jo
cmp
push
notl
dec
add
adc
push
mov
mov
xor
and
div
sub
repz
xor
call
mov
or
cld
sub
adc
mov
dec
sub
inc
jo
jo
mov
adc
or
inc
sbb
jmp
cmp
mov
mov
pop
adc
push
in
lea
mov
mov
data16
cmp
jl
push
je
inc
mov
jmp
pop
cmp
or
mov
push
data16
lods
sbb
into
ror
jl
aam
fmuls
push
inc
jg
movsb
sbb
inc
fldl
loop
mov
ret
jne
xor
insb
shlb
pop
lock
mov
jle
cmp
jl
cli
pop
jmp
popa
cmp
inc
jne
cmp
clc
subl
mov
insb
cmp
sub
cli
cmp
sbb
sbb
subb
insb
mov
or
add
test
add
inc
xor
rol
mul
lea
test
or
inc
frstor
sub
cmp
mov
push
jb
mov
rorb
add
pop
add
shrb
and
rol
push
sarb
or
repnz
and
xor
push
jne
and
mov
mov
cmp
jg
pop
jo
andb
sub
pop
fmuls
cvtdq2ps
xor
test
fldcw
or
sub
or
loop
loop
fsts
push
shrl
xchg
cltd
push
pop
push
pop
inc
cmp
inc
loopne
sub
dec
mov
mov
shrb
mov
and
or
push
scas
pop
mov
ret
daa
mov
dec
enter
xor
xor
add
sub
mov
pop
clc
arpl
stos
or
lret
test
stos
jmp
insb
add
cmpb
or
aad
lock
inc
cld
dec
ret
fidivrl
cmp
push
jbe
inc
mov
outsl
jmp
lea
adc
notl
mov
and
mov
dec
jp
xchg
push
push
inc
jmp
nop
je
and
push
and
or
jo
mov
and
daa
mov
mov
lods
incl
clc
xor
icebp
outsl
inc
add
and
sbb
or
pop
inc
sti
cmp
int
sbb
mov
inc
jae
cmp
pop
and
inc
icebp
jg
imulb
and
mov
and
add
mov
mov
out
mov
jae
jbe
loope
adc
shlb
shll
sbb
inc
mov
mov
or
rolb
pop
pop
or
and
inc
xchg
outsl
dec
jecxz
shlb
jl
lret
faddl
and
cs
or
mov
adc
xor
mov
into
std
jb
insb
or
fwait
rcr
call
aad
mov
gs
fmull
and
dec
and
out
jno
dec
mov
pop
push
shrl
cmp
adc
ret
mov
mov
mov
adc
dec
lcall
cmp
pop
imul
data16
or
push
adc
xor
pop
pop
clc
jl
cmp
jp
push
mov
adc
mov
jo
call
or
xchg
xor
adc
add
or
push
js
test
jle
push
push
add
or
mov
sub
add
or
push
addb
xor
inc
xchg
and
insl
or
dec
sbb
mov
push
xor
push
and
imul
imul
addr16
dec
adc
repnz
add
xchg
mov
inc
imul
insb
data16
jbe
pushfw
push
pop
test
or
pop
pop
mov
lcall
pop
jl
and
mov
push
push
xlat
ret
mov
movl
mov
out
mov
or
or
xor
cmp
lods
and
mov
add
mov
in
aad
or
jae
or
test
jnp
fildll
adc
pop
je
add
lea
call
xor
and
mov
jne
rorl
loope
fisubrl
sub
mov
or
les
cs
push
scas
xchg
push
fisttpl
ja
and
add
adcl
pop
cmp
mull
push
fidivs
int
push
or
in
js
mov
cmp
cltd
mov
push
sahf
pop
cmp
push
cmp
jne
push
fmulp
or
adcb
movsb
cwtl
jns
imul
outsb
filds
dec
cmpsl
adc
sub
push
lret
mov
test
xorb
pop
add
sub
add
sbb
push
xorb
sbb
add
pop
mov
stos
push
dec
sbb
jnp
and
add
les
dec
adcb
xlat
mov
push
jne
fadds
add
fdecstp
inc
adc
fucomip
int
mov
stos
pop
loopne
nop
lret
and
mov
adc
xchg
add
jns
ljmp
or
adc
lea
push
enter
adc
or
pop
push
push
sahf
adc
outsl
sbb
cltd
push
jle
or
std
jle
hlt
pop
test
mov
sub
test
or
xchg
cmp
test
and
cmp
add
xorb
xchg
fdivrs
cmc
data16
js
fists
and
pop
enter
addb
insb
cmp
insl
sub
rorb
test
or
sub
pop
jle
push
push
sub
frstor
or
inc
or
push
je
lods
adc
insb
outsl
jno
call
xchg
movsl
adc
push
add
mov
add
movsb
adc
dec
ret
or
dec
jmp
pusha
lea
inc
sub
and
inc
and
adc
cmp
sbb
lea
fxch
mov
pushf
divb
fisttpl
push
pop
roll
add
sub
or
call
mov
out
je
xor
add
subl
jg
out
inc
loope
jle
dec
lret
sub
sbb
push
push
xchg
push
int3
jne
push
cmp
pop
pop
cmp
push
push
jl
lods
dec
mov
sbb
push
lock
jb
int3
push
je
cmpsb
fcmovb
inc
scas
int
dec
and
jle
dec
cld
cmp
mov
loope
sbbb
stos
mov
xchg
scas
out
and
lods
pushl
add
shrl
inc
mov
hlt
or
or
push
push
inc
in
pop
push
imul
push
roll
push
jl
sub
pop
inc
inc
and
jl
and
or
push
and
jno
ljmp
cmp
sub
adc
mov
nop
or
cmp
nop
sbb
sbb
mov
inc
or
insb
enter
test
mov
inc
sbb
imul
jb
std
sub
push
and
push
adc
cmpsl
test
lret
and
lret
adc
rclb
mov
leave
nop
jl
cmp
sub
pop
jl
mov
icebp
cltd
fmull
add
lea
or
sbb
push
pushf
xor
call
push
insb
subl
out
xor
adc
rcr
imulb
jo,pn
inc
cli
imul
data16
jmp
pop
arpl
push
pop
adc
xlat
adc
pop
and
pop
push
adc
xor
or
xchg
push
dec
aad
xor
mov
xchg
in
inc
push
push
fdivl
sub
fs
lahf
push
movsl
mov
dec
xor
adc
or
mov
mov
dec
sbb
push
push
pop
pop
imul
test
pop
add
inc
in
inc
mov
adc
xchg
jmp
add
jle
push
popa
loope
pop
push
push
pop
leave
js
push
add
mov
aaa
int3
fisttpl
push
sub
addr16
adc
push
inc
dec
and
push
loope
or
pusha
mov
jle
and
mov
mov
or
testb
xchg
push
push
dec
xorb
je
and
shl
add
andl
xor
mov
sahf
jp
into
loopne
push
mov
aas
xorb
mov
imul
push
test
cmp
jl
sub
push
mov
push
mov
and
inc
xor
fcompl
or
repnz
test
popl
insl
mov
sub
and
add
sub
packssdw
sbb
sbb
movsl
mov
pop
sbb
cmp
sahf
and
push
and
into
rcrl
and
pop
push
lock
adc
pop
jb
pop
fiaddl
subb
pop
enter
enter
xchg
cmp
jl
sbb
push
xor
nop
adc
xchg
or
adc
jl
xor
iret
and
adc
push
dec
orl
cmpb
popf
push
push
pop
sti
pop
inc
push
sbb
inc
cs
push
in
cmp
addb
dec
sbb
lods
std
add
push
gs
add
clc
cmpsl
add
sbb
int3
jg
mov
and
inc
adc
jbe
cmp
mov
fcomip
push
mov
lea
adcl
and
jne
push
ret
add
mov
and
and
and
insb
mov
and
sub
imul
or
add
ret
addr16
rclb
outsl
push
xchg
data16
inc
out
cmp
push
lcall
sub
jbe
mov
dec
mov
fs
mov
subl
or
sub
fidivs
mov
shlb
and
cmp
and
lcall
add
jl
xor
jmp
popf
push
sub
jg
fwait
xchg
adc
popl
and
sub
pushf
dec
fcoms
fistps
pop
add
or
or
adc
adc
mov
ud2
cmp
cltd
js
jmp
scas
gs
inc
pop
and
push
mov
pushf
adc
pop
add
mov
daa
mov
adc
xchg
out
and
jbe
add
push
push
push
mov
add
sbb
or
ss
adc
mov
dec
jns
and
and
sar
fs
pop
clc
dec
mov
shrl
inc
push
loope
sbb
std
mov
jl
fidivs
popl
jge
push
je
and
std
decl
fidivl
enter
in
cmp
int3
sbb
add
or
push
adc
push
aad
xor
pop
lahf
add
mov
rorb
lahf
pop
sti
push
adc
push
fs
cmovo
or
add
lods
sub
adc
cli
rolb
andb
add
and
adc
jmp
cmp
das
je
dec
push
test
dec
sbb
rclb
bound
and
imulb
mov
lods
push
mov
clc
dec
leave
mov
or
cmp
or
je
les
je
sti
mov
repz
rorb
mov
clc
xlat
call
pop
cwtl
iret
outsl
jbe
jns
sub
dec
test
mov
push
add
sbb
sub
or
dec
testl
sbb
push
daa
sbb
lods
fsubrs
fs
cmp
iret
and
movsb
jg
adc
cmp
daa
pop
jns
jnp
enter
mov
inc
adc
pop
jns
pop
mov
sub
sahf
js
sub
mov
dec
xor
arpl
std
add
lods
sub
lock
xchg
je
insb
dec
jmp
mov
sbb
add
sub
add
xchg
and
fwait
cmp
push
pop
adc
and
xor
cltd
cmpb
push
loopne
rolb
and
push
mov
dec
mov
aas
push
xchg
jecxz
xchg
sti
or
or
lea
mov
mov
xchg
mov
mov
inc
and
scas
js
xor
pusha
mov
mov
dec
lock
mov
rorb
dec
dec
test
pop
push
in
jge
ss
std
ficoms
rcrb
cmp
mov
jbe
pusha
inc
inc
pushf
xor
ret
into
shlb
inc
pop
push
imul
hlt
rcrb
add
es
sbb
mov
loopne
cs
adc
adc
sbb
lock
sub
mov
push
jp
ss
mov
xor
cmp
xchg
das
jnp
adc
dec
mov
scas
jo
call
or
sbb
js
sarl
fs
push
and
data16
xchg
mov
xor
xor
dec
or
rorb
repnz
add
mov
or
xor
jl
test
daa
and
cmpb
in
inc
cmp
and
sbb
aam
in
aas
xor
xor
pop
push
sub
loop
scas
sub
stos
pop
mov
adc
mov
xor
push
push
push
dec
fistpl
sub
adc
js
cs
sti
adc
cmpl
rolb
jae
adc
js
pop
mov
pop
xor
pop
dec
orl
mov
lock
mov
lret
in
mov
dec
push
jge
inc
pop
clc
sahf
inc
cmp
add
mov
mov
pop
xchg
mov
cwtl
sub
dec
mov
mov
dec
out
pop
dec
dec
dec
and
push
jo
mov
inc
sub
loop
sbb
add
mov
mov
rorb
or
pop
xor
inc
push
push
lret
cwtl
gs
adc
andl
push
je
cmp
pusha
jl
inc
cltd
mov
mov
jne
clc
xabort
lcall
add
xchg
jno
sahf
lret
push
les
rcr
mov
ret
ret
roll
pop
rolb
lahf
aam
mov
clc
push
loopne
fdivl
fmul
xchg
test
mov
in
in
or
loope
aaa
imul
das
subb
loopne
pop
jge
mov
movsb
call
lfs
sub
inc
es
xchg
jb
decl
and
push
sbb
adc
and
push
add
in
sub
lcall
mov
pop
jmp
aas
add
inc
popa
xor
loope
inc
mov
cmpsl
subl
ret
dec
punpckhdq
xchg
aaa
dec
adc
pusha
in
xchg
sub
stc
add
sbb
sub
or
jmp
mov
xchg
push
loop
push
or
inc
push
arpl
adc
push
add
inc
jle
jge
fs
subl
ret
lds
lahf
xor
cmp
adc
scas
or
scas
roll
inc
cmp
jb
inc
mov
xor
inc
add
and
jns
push
lea
mov
ficoml
xchg
push
sbb
lds
push
push
inc
pop
mov
xchg
inc
sub
and
mov
dec
popf
shrb
jo
sub
js
das
adc
push
add
mov
in
dec
add
pusha
sub
lcall
add
mov
push
cmpsb
mov
call
inc
push
lods
adc
push
and
xchg
xchg
cmpb
je
bnd
add
or
mov
mov
mov
les
mov
add
xchg
not
iret
scas
mov
sbb
pop
aam
push
mov
push
cmp
jns
jbe
sbbb
mov
sarl
pop
xchg
dec
shll
in
add
push
inc
cmp
jp
push
dec
push
add
sbb
bound
mov
fsubrl
xchg
xchg
cltd
xchg
insb
cmp
fsubl
adc
out
mov
stos
add
sbb
insb
ja
cmpsb
pop
test
adc
add
mov
add
push
push
roll
dec
sbb
imul
adc
sub
ljmp
sub
sub
lods
fwait
jge
add
jns
sti
sub
addb
scas
jns
lret
pop
mov
aam
jmp
adc
testb
cmc
xchg
pop
add
aam
or
add
mov
lahf
pop
ja
adc
sub
enter
xor
adc
sub
lcall
leave
add
mov
xor
mov
jp
xor
mov
jne
push
imul
imul
int3
or
pushf
in
ficoms
cltd
aaa
pop
sub
jl
cmpsb
loopne
jns
cmp
lods
popa
lods
aam
gs
mov
out
inc
fsubr
call
mov
xor
push
enter
dec
add
or
and
cmp
dec
ret
or
jp
ljmp
or
cmp
add
jmp
inc
adc
push
aaa
or
dec
into
xor
xor
jg
pusha
cmp
jge
cs
nop
push
sti
inc
push
mov
lea
nop
dec
jg
jl
lea
sbbl
popa
clc
lcall
ret
rorb
and
shlb
scas
movsl
test
mov
xchg
hlt
or
xchg
popf
and
fsubrs
inc
pusha
and
mov
dec
xchg
xchg
test
stos
test
jno
fninit
pop
into
repz
lea
xor
filds
xchg
gs
mov
sbb
mov
shlb
test
jne
push
lea
dec
cmp
or
leave
cli
shlb
or
sub
inc
jge
test
jns
push
or
imul
pushf
jne
mov
jl
test
je
rorb
jo
rclb
call
popf
lea
mov
push
cmp
inc
push
and
sbb
notb
sub
add
test
aam
pop
cmp
xor
lret
popf
add
dec
aas
and
cs
shr
push
int
mov
ret
lea
push
popl
sbb
push
nop
loope
rorl
pop
test
xchg
dec
mull
and
jmp
cmpb
cmp
int3
cmp
and
iret
add
insb
or
add
mov
push
aaa
rorb
add
or
push
pop
mov
mov
lock
dec
cltd
jne
arpl
dec
jmp
fadds
loopne
pop
fs
movsl
push
lret
adcl
xchg
fcoml
clc
cltd
mov
je
enter
jne
add
xchg
dec
sarl
pop
mov
inc
scas
and
and
add
inc
mov
sbb
push
cmp
inc
cmp
cld
pop
or
jle
inc
and
mov
mov
inc
fisubrl
mov
cs
or
push
ja
xchg
leave
pop
setl
or
inc
mov
movsb
leave
movsl
dec
inc
shll
das
mov
sub
jns
cli
dec
lahf
mov
mov
xor
cs
and
dec
xor
enter
push
mov
xor
xor
sbb
sbb
and
sbb
in
sub
sbb
dec
sbb
and
inc
sbb
dec
mov
movsb
cmp
inc
mov
inc
mov
pop
xchg
cmp
pop
lret
cltd
jae
repnz
mov
push
sbb
and
js
je
lret
and
rclb
mov
mov
adc
or
xor
push
sbb
jge
sti
je
push
pop
dec
mov
sub
lods
inc
push
mov
movsb
mov
std
inc
mov
and
pop
sbb
imul
xor
push
mov
xchg
mov
hlt
or
movsl
and
fistps
icebp
pop
ficoml
sarb
adc
sub
or
sub
pop
aaa
sub
lret
push
sub
xchg
adc
ret
outsb
jmp
pop
dec
dec
push
cmp
enter
push
fldl
roll
out
clc
sub
push
or
and
inc
jb
ljmp
push
sbb
xlat
cltd
jp
xor
and
aam
in
pusha
xchg
cmp
out
and
out
xor
push
adc
add
add
pop
cmp
cmp
iret
dec
call
es
test
pusha
loope
mov
fistl
lret
pop
and
adc
insl
sbb
ljmp
rcrl
cmovb
push
data16
sub
mov
repnz
aam
mov
push
inc
xchg
xchg
mov
mov
add
mov
xor
adc
sbb
ret
jmp
fildl
xchg
mov
mov
dec
adc
and
cmp
test
lahf
clc
xchg
and
push
push
insb
mov
adc
imul
mov
mov
push
leave
mov
jp
inc
in
push
pop
cmp
ret
jo
roll
dec
xor
fcmovnu
je
cmp
in
sub
mov
xor
inc
adc
js
and
add
je
insb
je
call
adc
inc
mov
adc
and
xchg
loop
and
lret
and
aad
daa
pop
insb
push
repnz
notb
or
movsb
jnp
aam
ficoms
or
xchg
ret
or
mov
ret
fstp
push
jmp
and
dec
xchg
inc
cmpsl
push
call
shrl
or
mov
adc
icebp
add
mov
orl
rolb
test
xor
fsubrl
je
dec
pop
pop
xor
push
mov
cmp
adc
mov
popa
dec
call
loop
lret
pushw
mov
js
xchg
or
push
pop
or
insb
add
adc
push
and
dec
popa
das
out
mov
push
inc
xchg
gs
jg
mov
and
pop
or
mov
cmp
xor
cmpsb
xchg
dec
dec
dec
cmp
js
pop
and
or
inc
push
push
push
dec
ret
movsb
cmp
adc
xchg
fsubs
es
jg
jp
shr
fdecstp
ret
adc
mov
cmp
or
mov
mov
sub
sti
add
mov
pop
or
addb
push
inc
add
pop
addb
notb
xlat
lock
rorl
ror
xor
dec
pop
sbb
adc
jne
cmp
outsb
push
mov
push
xchg
xor
xchg
mov
push
inc
adc
adc
jecxz
pop
mov
lea
js
push
cmp
out
insl
in
mov
repnz
shrb
inc
inc
sbb
dec
mov
mov
mov
nop
push
pop
ret
mov
sbb
sbb
movsl
fcomps
sub
cwtl
cld
dec
mov
mov
or
add
dec
mov
cwtl
xor
push
push
or
popf
push
testb
sbb
inc
pop
dec
jmp
fists
lea
mov
push
inc
lock
test
or
dec
sbb
rorl
sbb
dec
mov
aad
js
xor
cltd
lods
test
xor
mov
mov
adc
fs
push
fwait
or
fimull
enter
cmp
mov
jne
int3
mov
shll
iret
out
xor
sbb
inc
adc
fnstenv
adcb
pop
inc
mov
test
inc
hlt
or
loop
dec
add
or
xor
sbb
xlat
inc
adc
and
pushf
xchg
stos
sarb
adcb
rolb
xchg
dec
add
pop
mov
dec
pop
insb
jo
aas
lret
xlat
jo
add
sbb
mov
and
inc
test
jg
push
cmp
add
inc
inc
movzbl
psubsw
test
push
ret
rcrl
push
les
addl
out
mov
es
xchg
pop
loop
mov
jg
cmpsb
clc
ret
xchg
or
jmp
push
add
pop
shlb
push
adc
or
sti
in
hlt
jb
xor
push
push
call
pop
cs
stc
lods
ffree
inc
jg
fdivrs
std
jae
test
push
bswap
cwtl
push
out
enter
enter
push
xor
int
mov
sbb
mov
adc
add
dec
pop
ret
or
dec
mov
popf
mov
and
push
mov
or
add
je
cwtl
pop
daa
pop
push
sbb
or
sbb
xchg
jae
push
nop
les
loope
lahf
push
mov
ljmp
or
or
push
or
pusha
ljmp
lahf
shrb
cwtl
or
imul
mov
sti
mov
dec
lods
cmpsl
int3
adc
out
imul
xchg
sub
add
mov
ret
loope
and
pop
roll
mov
subb
es
push
xchg
and
dec
ret
out
scas
call
fs
dec
pop
mov
and
inc
cmp
mov
xchg
mov
add
xor
sub
sbb
cmc
loopne,pn
scas
into
neg
push
push
ret
fists
cmp
repz
imul
cld
fdivp
ret
inc
sub
cmp
dec
inc
dec
cmp
lret
aaa
sub
adc
sub
jmp
cs
cmp
adc
or
int3
adc
xor
call
arpl
nop
add
xchg
push
inc
push
push
ja
cwtl
insb
xchg
push
add
jl
or
sub
in
and
or
cmp
mov
out
or
adc
jp
sbb
sub
mov
ret
aad
call
fldpi
jge
sub
cmovl
fldcw
xchg
sbb
test
std
xor
xor
je
jne
movsb
push
pop
js
ret
lret
cli
fwait
dec
sbb
sbb
cmp
cmpsl
xor
push
js
xchg
sbb
adc
adc
cmp
imul
inc
cmp
xchg
push
adc
adc
add
daa
lods
push
jnp
addr16
inc
jl
jmp
jle
or
sbb
mov
in
mov
jne
mov
mov
fs
sub
xchg
mov
cmp
les
add
mov
mov
sarb
enter
adc
jp
xor
mov
push
mov
pop
add
dec
push
xchg
inc
popf
loop
mov
andb
andb
cmp
ljmp
or
call
lock
pop
push
daa
orl
ret
add
sbb
mov
mov
add
int
outsb
inc
dec
add
mov
sbbb
inc
add
loopw
dec
repnz
pop
cmp
pop
adc
lcall
out
sbb
sbb
je
pop
loop
mov
inc
inc
add
mov
fs
jne
jns
movsl
sbb
pop
pop
mov
dec
push
test
and
test
cmp
sbb
shll
xchg
xor
mov
subb
outsl
les
mov
pop
rclb
dec
sbb
daa
shll
xchg
insb
insb
popa
jg
cld
cltd
sbb
enter
jl
push
stos
or
lret
imul
sahf
in
enter
loope
push
add
ljmp
xchg
sbb
loopne
in
clc
subb
mov
mov
js
outsl
nopl
push
add
fs
test
push
adc
pop
lods
xorl
pushf
adc
adc
js
push
push
testl
or
mov
add
pop
les
and
sub
xor
pop
loop
mov
cmp
cmpsl
add
lea
mov
sub
mov
test
adc
loopne
enter
les
adc
sbb
xchg
sub
sbb
pop
shr
mov
mov
push
adc
xor
jp
xchg
cmc
mov
or
sti
icebp
push
mov
or
and
sub
mov
mov
pusha
cmc
adc
push
mov
inc
dec
stc
push
in
mov
addb
sbb
mov
lea
cwtl
repz
sbb
div
or
je
lods
mov
call
sbb
inc
pop
mov
popa
lock
cmp
in
mov
inc
and
pop
pop
mov
dec
aam
icebp
dec
dec
mov
loopne
ret
sub
sbbb
push
out
fsubl
into
or
push
sub
add
push
jmp
add
loope
aas
insl
mov
push
lret
add
movsl
mov
and
lds
icebp
popf
jl
push
jmp
xor
add
sbb
mov
in
outsl
sti
arpl
pop
dec
add
pop
imul
sub
ret
sub
mov
sbb
inc
popa
shll
ss
cmpsl
and
fcoml
add
mov
or
xor
mov
jne
xlat
fldl
ds
mov
cmp
cmp
push
loop
cmpb
sbb
in
or
fwait
push
push
add
incl
decl
jne
mov
dec
pop
inc
or
mov
and
aas
adc
pop
or
daa
and
or
jmp
or
or
adc
cwtl
sbbb
inc
mov
jo
movsl
adc
sub
push
add
add
inc
mov
dec
jp
cwtl
rclb
cmp
jb
push
jbe
dec
test
test
mov
and
push
into
push
and
sbb
mov
mull
cmp
mov
in
mov
insb
addl
inc
mov
gs
daa
mov
ror
adc
jae
fwait
push
adc
loopne
push
dec
or
sub
dec
pop
add
popa
pop
push
push
pshufw
dec
or
pop
js
shr
ret
cmp
arpl
testb
mov
movsl
and
nop
push
shrb
push
add
pop
in
iret
repz
je
and
lea
mov
cmp
push
lds
sbb
add
xchg
decl
xlat
sarb
ret
enter
xor
xor
in
call
scas
push
push
lea
out
mov
add
lea
mov
and
pop
sub
adc
imul
hlt
jmp
hlt
push
cltd
cmp
ret
cld
add
dec
movsb
push
imul
ret
ds
jo
adc
cmp
xor
mov
mov
mov
dec
insl
push
mov
hlt
adc
xor
pop
imul
imul
inc
adc
pusha
fnsave
fidivl
push
jo
inc
stos
cmp
sub
push
jl
jne
into
outsl
dec
ja
fnstenv
je
and
fsubr
mov
mull
add
jl
push
xchg
fnstenv
fwait
sbb
bswap
dec
dec
or
inc
or
sbbl
dec
sub
test
or
movsb
fdivs
andl
sub
sbb
aaa
mov
xlat
push
mov
inc
cmp
pop
fisubl
hlt
and
mov
and
inc
or
lds
pop
mov
mov
pushf
push
aas
dec
xor
or
and
inc
lock
inc
pusha
int
sbb
test
cld
adcb
mov
push
add
sbb
in
adc
daa
adc
popf
loopne
sub
cmp
stos
inc
popa
ret
or
fmuls
inc
xor
and
sbb
mov
mov
mov
add
sub
das
or
jne
insb
jne
xor
into
or
push
inc
cs
jne
xchg
jne
lahf
xor
ret
mov
push
push
hlt
test
jb
cmp
mov
fwait
pop
jl
sbb
aad
mov
add
data16
cs
push
bound
je
push
mov
xor
loope
dec
clc
cmp
pop
jecxz
iret
mov
add
pop
lcall
or
mov
sub
xorl
dec
testl
stos
push
pop
adc
loope
sbb
ret
push
dec
mov
loopne
sbb
adc
adcl
cmp
into
or
add
sub
lock
pop
test
push
add
movsl
int3
dec
xchg
ja
divl
push
cmp
sti
pop
cld
pop
or
nop
out
cld
push
cmc
and
movsb
or
mov
add
cs
ret
adc
movsb
rorb
cmp
add
mov
push
push
mov
adc
push
and
xor
sbb
push
inc
loope
imul
cmc
in
subl
and
xor
inc
jbe
xchg
inc
xor
jnp
adc
pop
or
pop
pop
mov
add
inc
xchg
adc
mov
add
adc
inc
add
jg
lahf
ljmp
in
push
xchg
sahf
cmp
ret
sbb
es
js
test
xchg
inc
dec
and
push
loopne
push
mov
add
fcompl
push
lret
lret
call
pop
mov
loope
pop
sbb
add
dec
out
inc
mov
jo
cmc
imul
popf
fstp
xlat
movsl
push
push
push
push
cmp
add
hlt
or
loope
scas
and
cmc
and
dec
fmuls
inc
jne
popa
and
dec
push
push
dec
dec
mov
out
cltd
loopne
pop
imull
inc
mov
xlat
cs
fsubrs
inc
rcrb
and
jns
inc
dec
push
and
adc
ljmp
or
mov
mov
jb
jmp
mov
pusha
or
stos
xor
cmpsl
dec
fbld
dec
push
aas
push
cli
sub
mov
adc
and
inc
add
adc
sbb
jmp
add
add
sub
sub
mov
cmp
pop
xchg
nop
test
adc
dec
jne
and
add
xorl
scas
pop
lods
jno
or
jb
xchg
out
sbb
xchg
push
adc
or
dec
add
xor
sbb
shl
jns
mov
mov
mov
pop
out
les
and
mov
add
xor
sub
xor
loopne
sbb
mov
ja
adc
push
push
jmp
add
stos
sub
add
cmp
or
push
inc
adc
test
dec
bound
test
addr16
add
shll
cmp
push
push
sub
inc
popf
fadd
sbb
and
or
and
rorl
jl
cmp
jl
pop
sub
cmpl
jge
dec
mov
mov
jl
cmp
adc
loopne
jmp
cmp
aam
rcrl
dec
cmp
loopne
cmp
imul
leave
xchg
outsb
jecxz
pop
xchg
mov
out
call
ja
mov
loope
lahf
and
imul
pop
fsubr
int3
add
icebp
xorl
mov
xor
es
sub
shll
leave
loopne
shrb
mov
xor
jnp
dec
clc
and
and
and
out
out
daa
je
or
je
sub
je
jecxz
out
and
je
and
jne
mov
sub
les
sbb
cwtl
mov
scas
xchg
lock
dec
pop
inc
jnp
mov
sub
lret
sub
sbb
inc
dec
mov
cmp
cmp
inc
les
pop
ret
dec
dec
dec
xor
and
pop
and
sub
scas
idiv
fsubs
adc
adcl
sub
insb
xor
sbb
push
sub
rcrb
mov
add
inc
sub
adc
movsl
aaa
loop
adc
bound
jne
sar
in
into
int3
mov
movsl
out
adc
data16
adc
dec
inc
xor
add
and
loopne
xchg
inc
cli
insl
pop
sbb
cmp
xlat
push
dec
arpl
inc
xchg
shlb
xchg
push
push
jmp
inc
loope
das
repnz
jmp
das
je
dec
in
push
outsl
test
scas
push
jp
inc
add
call
dec
inc
and
or
add
decb
popa
mov
push
xchg
es
pop
in
inc
dec
scas
jne
xchg
inc
jo
test
rorl
push
cmp
mov
or
test
xchg
inc
xchg
mov
adc
push
mov
psrad
mov
imul
cmp
mov
inc
imul
test
lret
mov
fadd
sbb
pop
or
or
or
cwtl
and
mov
aas
dec
xchg
xchg
push
xor
inc
adc
sbb
sub
xchg
ret
or
sbb
xchg
mov
je
jns
inc
adc
inc
inc
mov
faddp
pop
pop
inc
test
adc
jns
je
js
iret
mov
cmp
and
adc
and
sub
adc
cltd
jmp
js
fsubs
xchg
cmpsl
adc
jecxz
cli
jae
xor
xchg
mov
push
mov
or
ficompl
push
jmp
aam
dec
sub
pop
cmp
aam
mov
add
xchg
lea
push
push
int
loopne
hlt
mov
ss
cmp
mov
jge
enter
out
sub
add
pop
cmp
and
and
stc
or
jl
xor
test
xor
mov
je
mov
dec
mov
inc
orb
ss
sbb
mov
dec
or
or
into
mov
sub
xchg
pusha
pop
scas
push
push
stos
pusha
add
push
cmpl
push
sub
addb
push
pop
and
jmp
out
mov
dec
push
mov
or
pavgw
sub
arpl
dec
ss
popa
jno
adc
add
out
mov
rolb
jmp
out
cmp
jo
pop
jmp
repz
pusha
and
jecxz
pop
push
dec
test
mov
adcl
xchg
or
sbb
rcrl
mov
dec
js
inc
fisttpll
mov
loop
std
test
imul
xchg
rorb
faddl
test
add
or
gs
inc
inc
sub
add
sbb
mov
in
test
xchg
dec
inc
rorb
jae
xchg
mov
adc
mov
adcb
inc
orb
sub
pusha
addl
xchg
jne
gs
add
push
and
std
dec
push
fimull
xor
cli
mov
sub
jne
lods
adc
jge
data16
push
xlat
inc
sub
cmp
lea
sub
in
or
orb
mov
mov
adc
dec
jo
or
or
dec
xchg
rolb
ret
jge
add
nop
cmp
add
add
int
or
cwtl
sbb
sahf
leave
sahf
xchg
dec
push
test
xor
and
aaa
dec
shll
mov
push
clc
test
out
ficomps
jge
neg
pop
in
push
xor
dec
or
imul
leave
adc
lods
jmp
xchg
jae
jb
enter
adc
in
cs
add
cmp
scas
xchg
xor
xchg
mov
jp
in
inc
and
or
mov
or
push
xor
enter
jbe
sub
xor
push
int3
add
jno
and
mov
add
push
sbb
mov
push
xchg
cltd
mov
jecxz
jecxz
lea
ljmp
rcrb
push
adc
sub
shlb
or
jl
sbb
insb
jbe
lods
jge
mov
jge
rclb
in
in
movsb
sub
bound
pop
push
push
xchg
and
push
xor
push
inc
daa
cmc
jns
filds
inc
mov
add
push
xchg
test
test
add
sub
hlt
adc
scas
dec
pop
dec
cltd
movsl
inc
repnz
cmp
orl
mov
sub
xor
sub
dec
pusha
push
movl
pop
dec
pop
mov
mov
pop
dec
pop
ds
fwait
jne
aaa
mov
fnstenv
add
fwait
and
loope
in
fnsave
xlat
add
xchg
push
xchg
pop
push
cmpb
pop
push
push
fwait
push
loop
xor
test
mov
xchg
cmc
fnstsw
sar
mov
push
push
push
test
jns
test
cmp
mov
add
mov
jle
xchg
and
push
mov
push
ss
cmpsb
rclb
aad
shll
dec
and
mov
mov
leave
xor
sarb
push
pop
mov
sub
enter
dec
jo
or
inc
movsb
add
mov
lahf
je
jmp
sbb
add
jne
cmp
data16
sbb
pop
xchg
test
sub
xchg
lret
in
xor
and
movswl
mov
adc
in
mov
cmp
dec
xchg
and
in
push
in
ret
sub
mov
mov
push
cmp
bound
arpl
cltd
xor
popa
sub
jb
adc
adc
data16
push
mov
fists
xor
pop
xlat
add
shlb
push
jnp
cmp
fsubs
andb
push
arpl
push
loop
pop
inc
mov
and
jecxz
pop
test
mov
ss
ss
popf
inc
inc
pop
jne
insb
fs
rorb
jmp
cmp
pop
stos
push
or
nop
push
jp
aas
dec
repz
sbb
or
mov
cltd
xchg
adc
mov
jo
jmp
aaa
das
jle
push
dec
sbb
pop
add
jmp
pop
or
push
mov
rclb
testl
add
or
out
pop
movsb
xor
push
and
push
daa
test
xor
repnz
loope
mov
or
lea
aas
fstl
test
insb
jg
ja
xchg
jmp
mov
pushf
movsl
pop
stos
dec
imul
es
cs
xchg
add
add
js
add
or
negl
sub
fstl
cltd
adc
in
mov
imul
jmp
jp
jmp
mov
dec
arpl
or
loope
es
in
mov
mov
push
in
shll
dec
aad
dec
movsl
xor
jbe
shll
or
and
mov
and
adc
mov
es
sub
sbb
push
mov
adc
push
add
xor
xchg
push
xchg
enter
mov
nopl
insb
pop
add
mov
rorl
iret
cmp
and
pop
mov
push
sub
or
and
dec
xor
xor
push
add
jno
and
test
mov
int
cmp
hlt
adc
jmp
pop
fxch
inc
xchg
push
or
adc
or
mov
pop
mov
aas
fstl
jmp
push
cmp
jbe
jp
jmp
add
push
push
lahf
cmp
adc
cmpsb
int3
shrl
xor
pop
push
add
pop
dec
loopne
ret
push
lods
je
lds
inc
add
lods
pop
mov
jge
int
rcrb
dec
fucomip
testl
daa
int3
push
sbb
push
mov
pop
sub
push
xlat
pop
xor
or
call
cmp
mov
pop
movsl
lret
pusha
dec
pop
decb
out
add
jge
fyl2x
add
push
ret
add
add
pop
or
je
push
stos
mov
test
add
or
or
ja
sub
dec
pop
cwtl
pop
push
or
push
adc
adc
movsb
add
push
sarb
push
xchg
cmp
and
fistpl
pop
dec
ret
mov
or
or
add
or
out
test
mov
lods
int3
pop
inc
pop
je
pop
mov
and
std
pop
add
leave
jecxz
sti
loop
jb
pop
stos
ret
xorb
xor
sbb
adc
int
jmp
or
movl
or
fnstenv
dec
add
adc
outsl
jnp
xor
dec
mov
and
rol
imul
mov
push
sbb
mov
and
insb
or
je
adc
add
push
adc
pop
inc
dec
shlb
add
aaa
jle
je
negb
jns
sbb
dec
add
sbb
xor
or
push
sbb
lods
fs
das
add
cld
sbb
je
dec
imul
int3
shlb
xor
sbb
repnz
data16
sbb
adc
mov
push
push
pop
pop
adc
outsb
mov
in
cmp
or
enter
ficoms
sbb
cs
cmp
adc
test
in
shll
pop
imul
in
add
mov
test
shll
pop
mov
inc
pop
pop
dec
dec
jns
insb
add
mov
icebp
neg
push
push
dec
dec
test
mov
jnp
adc
mov
pop
test
inc
xchg
jecxz
mov
adc
or
js
test
in
jl
pop
adc
xchg
pop
int3
or
test
je
xchg
test
les
fbstp
push
shll
push
daa
add
adc
push
stos
cmpsb
push
or
xchg
inc
inc
xor
cmp
addr16
xchg
addb
adcl
sbb
mov
jno
push
iret
fdivrl
pop
loope
adc
in
xor
gs
add
and
xor
cmp
sub
xchg
push
test
dec
cmp
stos
sub
bound
dec
xor
sub
loopne
rorl
scas
mov
xor
lahf
insb
inc
test
pop
and
sub
cmp
add
pop
ret
jbe
push
clc
movsl
xlat
cli
iret
sbb
rcll
xchg
xor
jmp
cmp
pushf
iret
adc
or
dec
loop
add
icebp
jmp
inc
add
and
adcb
outsb
add
or
lea
lods
or
dec
sbb
mov
mov
filds
xor
dec
add
cmp
mov
and
push
stos
fcompl
lret
inc
push
mov
cli
mov
js
hlt
call
xchg
dec
nop
mov
sub
fcmovnu
xor
popa
dec
fucomp
cmpsb
mov
ret
add
adc
shrb
rcl
xchg
popl
push
and
dec
pop
imul
insb
cli
subb
add
dec
jl
or
xor
cltd
shll
add
push
dec
les
adc
or
adc
mov
adc
test
adc
adc
and
test
and
mov
or
and
sbb
filds
xchg
movsb
jo
pop
inc
mov
xchg
cs
push
inc
call
push
in
push
inc
je
popf
push
pop
mov
lcall
enter
ret
test
jmp
punpckhdq
inc
nop
sbb
sbb
add
sbb
add
dec
mov
jo
push
add
pusha
or
movsb
pop
mov
push
rep
push
cmpb
sub
pushf
xlat
shrl
adc
int
push
mov
sub
in
dec
cmpsl
cld
lods
inc
add
push
test
mov
les
add
cmp
pop
add
lods
mov
or
jmp
and
cmp
psubb
or
sbb
or
imul
add
lcall
cmc
jb
and
add
pop
nop
adc
rclb
dec
or
add
loope
and
mov
push
gs
sub
loope
cmp
cmp
and
xor
xor
ret
decb
and
sbb
mov
jb
les
pop
push
cmpsl
lds
and
and
jno
sbb
inc
dec
dec
xor
into
pusha
adc
out
fldt
cmp
dec
sbbb
push
jle
fldz
cmp
int
loopne
int
sbb
and
pop
sub
mov
outsb
lock
or
data16
push
addr16
mov
fsubrl
subb
push
neg
push
lea
add
add
push
add
jbe
cmc
inc
rorb
mov
xor
out
sub
inc
out
jl
cmc
out
loopne
or
imul
shr
test
cmc
aas
mov
out
add
or
rol
testl
sub
dec
and
jo
push
cmp
data16
insb
mov
jge
or
test
or
cmpsl
sbb
aas
fabs
test
sbb
sub
aaa
sar
push
fcmovb
xchg
sub
or
dec
inc
loope
mov
push
push
push
addl
clc
outsl
addl
outsb
notb
sub
lds
pop
iret
ja
sbb
jle
int
inc
cwtl
shlb
daa
add
rclb
or
shl
sbb
das
xchg
pop
adc
sbb
lea
mov
cli
push
lods
mov
cmc
dec
push
mov
pop
xor
out
sahf
add
cld
pop
or
sbbl
inc
loope
js
mov
iret
scas
loopne
sbb
sbb
dec
pop
jp
push
loope
push
push
outsl
mov
mov
repnz
sub
enter
add
fidivrs
ds
pushl
pop
add
push
xchg
pop
inc
mov
dec
in
popa
or
sub
sar
add
rcll
or
add
mov
mov
or
jmp
mov
inc
or
pop
shll
xchg
adc
cwtl
lds
lock
aam
mov
or
mov
psrld
adc
outsb
adc
dec
or
pusha
stos
ret
inc
adc
test
push
add
mov
adc
adc
mov
addb
or
int
ss
push
inc
stos
dec
jg
in
lret
inc
fwait
repnz
ret
aam
stos
push
xchg
addr16
adc
sbb
sahf
add
sahf
xchg
addr16
or
or
in
jns
or
or
pop
sahf
xchg
addr16
or
loope
adc
dec
add
sarb
adc
sbb
mov
cmp
or
gs
or
incl
fadds
push
fstpt
call
mov
push
and
in
jge
push
add
and
sbb
addr16
and
push
repz
lea
inc
loopne
dec
cmp
mov
insb
push
sub
mov
push
dec
cmp
xor
xor
movsb
push
ret
call
or
sub
incb
lock
push
push
inc
push
es
pop
sbb
adc
or
ss
fnop
mov
mov
jg
in
xor
clc
push
push
imul
add
ljmp
lods
xor
decl
sbb
fisttpll
aas
or
mov
xor
and
dec
dec
inc
lea
shrl
cmp
sahf
add
rclb
aam
adc
add
jecxz
xor
xchg
mov
jl
adc
cmp
push
mov
xor
out
repz
mov
cld
dec
sbb
enter
mov
and
sub
mov
sub
xorb
sbb
dec
mov
dec
das
mov
roll
jmp
dec
pop
sbb
sar
push
jno
scas
push
push
lock
ret
aam
rcl
test
scas
mov
pop
adc
fsubs
stc
mov
cmp
ds
mov
dec
jne
push
dec
ret
lds
and
gs
inc
addl
orb
and
lret
sbb
mov
ffreep
dec
jne
adc
and
mov
pop
sbb
cli
adc
test
sbb
sub
daa
mov
and
out
mov
inc
add
adc
les
fadds
imul
sub
roll
incl
movsl
mov
das
add
into
sbb
inc
es
gs
mov
or
jne
mov
jl
mov
cmp
xor
jne
cmp
mov
leave
cmp
and
push
cmp
push
scas
cmp
call
add
aam
inc
gs
jne
mov
push
jne
inc
faddl
xor
inc
data16
push
push
push
int3
add
idivl
sbb
mov
inc
dec
aam
popa
jns
dec
ss
cltd
mov
sbb
test
in
imul
fcoml
cmp
fsub
test
adc
fldcw
pushf
test
jp
adc
addb
or
and
push
enter
mov
sbb
xchg
scas
rclb
or
cld
push
cmc
bound
push
shll
shrb
sub
and
movsl
push
popf
adc
scas
ss
lret
or
add
mov
ret
ret
inc
adc
xchg
jl
sbb
in
pop
cltd
fimull
rcll
js
leave
xor
icebp
pop
iret
clc
push
fbld
or
mov
lea
popf
or
movb
inc
sub
shl
push
push
shll
sbb
mov
lahf
mov
or
push
mov
jnp
pop
pop
mov
cmp
sub
dec
mov
fistpll
pop
mov
or
je
and
jmp
sub
aam
sbb
push
shr
cld
out
sbb
pop
js
pop
pushf
mov
add
pushf
push
push
call
jp
mov
sub
push
aas
cmp
mov
rep
xor
in
mov
push
inc
inc
push
or
xchg
loope,pn
push
mov
jne
cld
push
push
sbb
dec
sub
xor
sti
gs
fiadds
iret
data16
xchg
repz
add
jecxz
push
push
mov
lea
push
and
jne
xchg
push
adc
in
lds
and
jle
or
push
mov
pop
adc
or
rclb
insl
dec
push
jns
push
or
repnz
sub
jb
loopne
les
jo
scas
addb
jmp
mov
adc
adc
test
arpl
xor
or
inc
loope
mull
shl
push
mov
js
lods
call
pusha
mov
in
pop
cmp
pushf
ret
inc
xchg
imul
sub
lods
das
std
lcall
nop
jnp
pop
dec
jo
add
push
test
adc
sti
xchg
adc
addb
pop
add
or
cli
add
add
and
push
adc
pop
inc
lea
jmp
sub
mov
stos
xchg
js
cmp
in
or
ud1
ja
and
rorl
mov
inc
xchg
loop
mov
rorl
xor
test
cmp
loope
inc
cli
mov
mov
xchg
hlt
and
shl
shlb
inc
lock
xchg
cs
jecxz
sbb
dec
popa
in
mov
cmp
mov
mov
shrl
mov
mov
mov
mov
inc
push
or
adc
sub
and
sub
leave
fiaddl
les
and
pop
shl
add
adc
loopne
cmc
mov
je
push
push
cmp
cld
mov
sub
push
push
arpl
push
sbb
xchg
in
jbe
pop
imul
test
mov
lret
nop
pop
cmp
adc
test
jo
cwtl
xor
imull
dec
dec
add
jmp
lea
or
sub
mov
mov
mov
adc
sbbl
xor
aam
or
shr
orl
das
jge
push
mov
mov
jne
mov
push
pop
jnp
cmp
mov
pusha
cs
loopne
pop
les
dec
incl
push
aad
xor
xchg
inc
das
mov
mov
jns
rcr
out
or
add
cmp
addl
outsb
xor
inc
sarb
mov
adc
push
sub
rclb
mov
nop
xchg
push
adc
add
int3
fimull
add
inc
cmp
xor
loop
and
adc
pop
add
or
mov
js,pn
mov
cmpsb
fwait
les
test
jmp
in
dec
or
dec
lods
push
cmp
addb
scas
das
push
xor
cmp
cs
nop
push
into
cwtl
mov
out
inc
cs
cmp
and
sbb
push
arpl
mov
fs
mov
mov
test
dec
repnz
das
jg
push
push
clc
mov
out
cmp
adc
adc
xchg
pusha
or
mov
add
pusha
pop
test
add
push
mov
push
imul
inc
fmuls
stos
inc
cwtl
movsb
std
sbb
mov
sub
stos
mov
inc
adc
stos
sub
test
je
jb
sbb
inc
orb
push
adc
lahf
cwtl
xchg
lds
sub
mov
adc
sbb
or
mov
je
dec
mov
pop
adc
cmpb
sti
test
out
inc
sub
xor
mov
mov
or
loopne
pushf
mov
lock
jg
fidivs
jp
and
inc
sub
and
aas
addl
call
mov
xor
iret
dec
push
cmp
mov
pop
or
or
cwtl
shl
xchg
cmp
cmpsb
push
sarl
mov
push
push
dec
mov
xchg
inc
dec
loopne
cltd
mov
jnp
pushf
fsubl
lahf
mov
pushf
enter
and
into
mov
imul
inc
into
bnd
and
sarb
aad
xchg
lret
stos
adc
or
flds
movsb
jnp
shlb
rorl
popa
push
icebp
fwait
or
test
jns
imul
psrlw
mov
cmp
je
sahf
shrb
adc
adc
adc
xor
jl
mov
and
movsb
nop
bound
bsr
or
incl
or
call
or
inc
in
sbb
mov
and
mov
mov
xor
arpl
in
push
test
sbb
test
dec
add
xchg
fwait
push
and
clc
add
and
lret
hlt
into
mov
pushf
aad
les
add
nop
inc
hlt
outsl
inc
sbb
addl
loopne
mov
fimuls
ret
adc
sarl
movb
ljmp
xchg
pusha
inc
imul
mov
sub
movsl
mov
fdivs
mov
dec
sub
insb
xchg
or
out
je
nop
mov
pop
sbb
pop
pop
add
jbe
adc
or
or
or
lret
sub
add
insl
popa
fwait
rclb
xlat
or
test
movsl
and
mov
cmp
or
bound
rcrb
popa
sub
pop
push
add
clc
mov
lea
mov
inc
in
cld
cmp
arpl
adc
xor
dec
subb
in
sub
clc
fbstp
or
lods
loope
lret
sub
fs
push
outsb
sub
xor
add
dec
push
sbb
dec
cmpb
out
jg
dec
mov
sbb
jno
test
ss
ret
pop
pop
jl
mov
pushf
pop
xchg
jp
jp
popf
lea
mov
xchg
aaa
and
ja
sub
mov
add
js
cmpsl
or
wbinvd
xchg
shrb
add
je
inc
push
adc
xor
insb
pop
in
test
sub
add
in
and
dec
or
dec
adc
popa
and
add
stc
movb
scas
dec
aad
call
mov
mov
inc
adc
xchg
lea
mov
add
mov
mov
ret
pop
jmp
inc
xchg
mov
or
xchg
mov
lahf
push
pop
dec
ret
sbb
les
lret
adc
mov
add
jecxz
mov
dec
lods
add
pop
dec
add
lahf
stos
or
push
stos
pop
frstor
rcll
dec
dec
mov
enter
enter
call
imul
push
cmpsl
je
inc
cs
rolb
add
mov
in
xchg
xor
pusha
call
ret
inc
loopne
cmp
dec
ror
sub
loope
adc
test
cmp
adcl
or
jle
leave
popf
cmpsb
add
repnz
mov
loop
mov
insb
sbb
jge
mov
mov
mov
js
xlat
lods
je
in
or
test
sbb
lods
loopne
lret
aam
dec
dec
fdivl
pushf
sub
and
add
sub
enter
sub
rorb
jb
adc
fisttps
popa
add
add
rolb
push
fildll
loope
cltd
fcmove
inc
adc
bnd
test
push
add
push
movb
or
iret
orl
cmpsl
in
out
pop
ret
or
dec
gs
mov
adc
aad
xor
push
fidivl
mov
ficoml
lahf
adc
es
stos
xchg
or
or
mov
mov
ret
test
push
int3
add
sbb
xchg
add
adc
and
sub
add
lds
call
mov
mov
sbb
jae
dec
rorb
and
jb
and
add
cmp
insl
into
push
sub
dec
idivb
cmp
cmp
add
inc
mov
rcrb
in
dec
ja
mov
inc
sub
lret
imul
or
cwtl
adc
push
repz
adc
cs
xor
or
fldl
fcoml
sbb
ds
mov
cmpsb
and
movsl
test
pop
inc
add
mov
jmp
mov
shlb
sbb
xor
loopne
xchg
movsl
bound
push
outsb
mov
and
push
ja
jb
push
add
add
jmp
and
sbb
idivb
jl
jg
add
add
push
mov
xor
insb
inc
adc
xor
and
pop
lcall
xor
cltd
push
push
stc
pop
dec
iret
repz
cld
pop
push
ret
loopne
pushf
out
lcall
inc
push
jo
jl,pt
xor
xchg
push
fisubrs
sub
xchg
subl
pusha
sbb
push
pop
enter
lods
or
jle
mov
mov
loop
jle
jno
adc
sarl
ret
dec
pop
xor
mov
sbb
lods
insl
aam
pop
loop
int
push
mov
iret
add
pusha
aas
push
push
inc
jmp
add
or
rorl
dec
add
fwait
or
and
fs
clc
add
das
cld
cmp
mov
lea
add
cmp
inc
pushf
test
or
mov
inc
dec
mov
jecxz
hlt
inc
test
xchg
sbb
roll
sbb
cmc
test
add
or
push
incl
inc
inc
xor
cmp
jb
sub
ret
std
cmp
ja
add
jnp
std
xor
add
scas
add
sbb
imul
add
fidivrl
popa
mov
test
inc
xchg
push
push
sti
lcall
das
clc
push
xchg
aas
mov
dec
shl
hlt
push
dec
fisubrs
fldenv
and
pop
sbb
ss
push
cli
adcl
fcomi
lcall
inc
push
les
sbb
cld
jl
dec
jg
adc
push
cwtl
out
mov
jne
push
stos
repnz
xchg
or
push
pusha
push
inc
cmp
jge
iret
push
pushf
pop
rorb
clc
mov
das
ja
jmp
mov
xchg
push
mov
jle
mov
cmp
push
setle
push
lcall
into
sar
test
leave
mov
cmpb
cmp
dec
in
pop
loopne
lods
aad
adc
mov
cmp
aas
nop
push
jnp
add
movsl
cmc
cmp
dec
push
inc
pop
pshufw
pop
cs
xor
pop
shrb
cwtl
aas
testl
test
mov
mov
shlb
mov
mov
dec
lods
cmp
lahf
sub
int3
jl
cli
mov
mov
ret
sub
and
adc
rorl
aam
jno
aad
loope
or
adcb
push
xor
mov
lds
loopne
lret
iret
xchg
pop
xor
push
sub
adc
mov
lea
pop
sub
jp
and
inc
push
idivb
pop
mov
inc
out
ret
iret
xor
dec
aaa
aad
enter
push
imulb
cmpb
push
mov
loopne
shlb
add
test
insb
and
stos
xlat
addb
push
ret
push
ss
or
xor
dec
mov
add
mov
pop
push
cli
inc
xor
wrmsr
pop
mov
test
dec
pop
mov
adcb
mov
xchg
pop
or
add
daa
mov
rorb
loopne
jl
xor
fwait
js
jne
or
popa
rolb
push
inc
sub
add
sahf
cmc
or
testl
push
dec
imul
pushf
adc
js
xchg
addr16
loop
hlt
test
cmp
lock
jmp
rclb
mov
adc
sub
and
fistl
bound
push
xchg
inc
loop
pop
dec
sub
mov
pop
bound
mov
jo
shrl
add
jmp
cmp
or
popa
adc
in
xor
lea
pop
jmp
inc
sbb
mov
ret
push
add
sbb
das
aas
lods
and
xlat
movb
leave
nop
sbb
mov
push
lea
idivl
adc
repnz
loope
adc
lea
bnd
ret
orps
les
popa
push
fistps
js
or
jo
jne
mov
inc
jl
fidivrs
or
inc
add
xchg
dec
pop
imul
les
ljmp
push
jle
mov
and
or
jno
inc
daa
icebp
or
push
add
in
and
dec
or
jl
cwtl
inc
dec
pop
add
inc
mov
inc
lahf
push
mov
fadds
pop
pop
jmp
mov
push
mov
fadd
sbb
jge
dec
pop
loopne
add
inc
xor
xor
inc
sub
mov
xor
xchg
fwait
test
inc
cli
cli
lcall
sahf
mov
mov
shlb
ret
lea
ret
push
cmp
and
and
mov
push
test
cmp
lods
insb
jns
mov
sub
sbb
sarb
or
repnz
mov
xchg
ret
mov
insl
or
cmp
scas
cmp
aas
or
sub
outsb
enter
and
push
mov
pop
lea
pop
mov
sub
inc
sub
loopne
faddl
inc
in
mov
dec
push
cmp
sbb
and
dec
or
sub
pop
dec
jne
or
fmuls
sub
les
pop
add
add
push
and
or
jg
mov
lock
sbb
pop
clc
push
into
push
push
call
xor
nop
ffreep
imull
add
test
push
xchg
dec
mov
dec
push
dec
xchg
xor
js
or
push
push
sub
dec
add
jmp
out
mov
jbe
inc
popa
js
xor
orl
push
sbb
adc
dec
roll
xchg
sub
dec
sub
pop
sub
add
popf
inc
adc
push
pop
dec
and
mov
popf
sbb
dec
add
lret
fcoms
dec
lods
in
mov
or
mov
pusha
xchg
push
pop
dec
stos
mov
xorl
mov
xchg
orb
rclb
scas
add
xchg
ds
cmp
ficomps
ss
test
cmc
mov
test
lea
xor
addl
jl
fistpl
push
jle
cmp
pop
adc
inc
jecxz
jmp
sub
adc
ffreep
shll
inc
inc
lcall
call
jl
mov
lock
push
iret
mov
jecxz
and
and
jmp
mov
jb
push
push
arpl
push
inc
push
mov
add
mov
sub
test
sbb
or
or
nop
sub
loop
xchg
mov
sub
lods
inc
add
dec
mov
add
mov
aad
testl
mov
in
repz
and
push
lret
dec
or
rolb
int
ss
dec
jl
and
clc
mov
xchg
sbb
dec
test
push
adc
ljmp
pause
cmpl
pop
insb
ljmp
sbb
mov
push
push
xchg
sahf
shlb
movsl
jbe
mov
call
adc
loopne
js
and
xchg
fld1
or
popa
mov
jmp
mov
or
inc
mov
push
icebp
mov
iret
jge
xchg
dec
mov
inc
int3
adc
addb
popa
cmp
cmc
ljmp
add
xor
cvttps2pi
mov
aad
add
inc
adc
adc
cmp
test
xchg
add
pop
loopne
dec
sub
aaa
sbb
loope
xchg
fwait
push
dec
adc
pop
mov
lds
inc
push
mov
lea
or
out
imul
adc
jl
inc
bndstx
inc
loop
mov
and
mov
adc
push
or
jae
ret
dec
in
xor
lods
loopne
ss
roll
push
mov
dec
pusha
or
push
push
pop
testl
lret
movl
or
sahf
loopne
push
pop
lods
push
add
or
mov
rcll
sbb
aas
stos
push
or
ss
mov
jmp
inc
inc
or
pop
fiadds
inc
xchg
bound
pop
cltd
rcl
stos
cmp
clc
cmp
pop
or
mov
xor
lahf
sbb
lcall
lock
sbb
sarb
push
add
or
jne
and
jno
repnz
sbb
enterw
adc
and
or
stc
add
cmp
push
std
push
and
dec
cmpsl
mov
push
stc
push
nop
mov
inc
mov
add
push
inc
daa
mov
stos
cltd
pop
jno
shll
sbb
sbb
sbb
je
adc
stos
sub
aas
adcb
xor
dec
fdivrs
int3
movsl
or
pop
je
adc
mov
int
lea
inc
xor
add
or
pushf
jmp
push
ret
movsb
imull
push
sbb
xchg
stos
push
data16
mov
add
push
or
sbb
xchg
fstpt
adcb
push
shlb
sti
mov
shlb
hlt
cmp
sub
fsubrs
add
pop
insb
adc
mov
xor
mov
jnp
or
mov
cmp
or
sbb
add
pop
fildll
in
mov
sarb
mov
imul
fistps
or
call
femms
xchg
jo
push
push
add
adc
daa
jbe
dec
adc
adc
inc
sbb
adc
push
push
cmc
inc
test
int3
dec
pcmpeqb
jno
add
nop
cmpsb
test
cmp
dec
inc
inc
icebp
aam
scas
adc
test
push
in
push
cli
mov
add
rcrb
add
mov
jb
mov
sub
or
jne
fistl
sbb
inc
cmp
mov
les
outsb
leave
jl
push
mov
stos
jno
inc
push
mov
jge
push
ds
cs
sub
mov
sbb
rcrl
je
outsl
add
xor
das
enter
mov
sub
push
cmp
adc
out
lret
add
mov
sbb
xor
inc
insb
test
lahf
jecxz
ret
lods
mov
dec
xor
orb
cs
push
inc
pop
cmpsl
pop
or
push
popa
shlb
add
dec
inc
xor
inc
pop
dec
aam
ret
jo
mov
push
sub
mov
nop
lret
repnz
fwait
icebp
in
xor
and
and
lret
aas
jmp
add
stos
xchg
push
dec
mov
inc
sarl
bound
lret
orl
push
mov
adc
jmp
push
sub
dec
outsl
xor
cmp
movsb
dec
push
inc
adc
loope
loopne
push
sarb
mov
push
icebp
and
pop
pop
sbb
das
es
xor
gs
ret
sub
pop
cmp
cmp
or
cmp
add
or
dec
lods
pop
sub
push
rcrb
aam
insb
cmp
iret
rclb
ljmp
mov
cs
sub
xchg
inc
add
and
or
add
outsl
fs
mov
or
jbe
jo
xor
push
shlb
mov
imul
push
mov
mov
and
add
inc
add
sbb
rorb
or
jb
lea
xchg
jp
cmp
test
and
mov
dec
addr16
lods
roll
ret
lret
push
inc
xchg
add
xchg
popl
out
pop
clc
pop
addr16
and
inc
mov
mov
push
or
mov
push
pop
addr16
lcall
fidivrl
dec
dec
adc
sti
rcrb
xor
enter
dec
mov
ds
sbb
ss
cmovle
push
call
or
mov
pusha
inc
add
popf
cmp
push
dec
push
decb
pop
pop
jp
popa
mov
add
cmp
mov
daa
insb
add
stos
cmpsb
pop
push
dec
js
or
stos
dec
aas
xchg
pushf
jmp
or
pop
lods
cmp
lret
or
imul
or
popf
cmc
mov
lret
mov
push
pushf
loope
adc
sub
inc
adcl
inc
movsb
cmp
shlb
add
cs
lea
inc
test
fs
push
gs
adc
xchg
sub
mov
mov
jne
cmpsb
ljmp
lods
adc
jae
jbe
loopne
scas
sub
sub
and
mov
loope
scas
dec
add
lahf
cmp
mov
push
das
add
or
or
cmp
inc
jecxz
and
xchg
into
movsb
xor
popa
ds
and
jle
add
or
ja
sahf
divl
cmp
push
out
test
cmp
bound
pop
push
incl
cmp
pop
or
jg
rcl
lcall
fs
test
pop
adc
pop
inc
and
popf
or
jns
cmp
dec
cmp
std
push
shll
dec
aad
popa
push
mov
pusha
or
mov
push
jge
hlt
mov
jo
adc
out
scas
andb
pop
pop
push
and
push
nop
imul
enter
pop
inc
pushf
cwtl
xchg
js
out
dec
adc
lods
jne
mov
cmp
pop
adc
rcl
push
pop
fidivrl
add
jecxz
mov
inc
jb
adc
cmp
inc
cmp
mov
cmp
or
aas
cmpb
popa
xchg
push
stos
xchg
mov
push
cld
sbb
repz
scas
add
cs
push
and
dec
pop
xchg
std
cmc
dec
adc
mov
and
and
mov
xor
xor
lds
mov
push
imul
ret
jp
add
xchg
ret
clc
adc
pop
insb
negb
push
jle
pop
lods
push
lock
dec
add
mov
ret
sbb
jge
ret
and
mov
dec
sbb
mov
mov
xor
sub
push
icebp
inc
mov
add
bound
or
aas
sub
or
cmc
push
andb
mull
cmp
xor
lea
rcr
pop
dec
das
test
das
xor
push
xor
mov
adc
inc
pop
dec
ja
loop
fbstp
mov
out
add
into
or
push
add
xchg
pusha
imul
dec
mov
lahf
dec
inc
insb
out
shrb
and
je
and
jmp
testb
mov
or
cmp
mov
jbe
or
outsl
je
sbb
mov
add
imul
fistl
dec
push
lock
xchg
orl
mov
mov
cli
mov
xor
clc
mov
push
iret
pop
push
push
push
push
xor
daa
add
inc
mov
aam
xor
pop
or
add
jne
test
inc
mov
aam
shll
rcrb
sbb
inc
rclb
hlt
andl
sbb
repz
int
sbb
or
mov
jmp
shrl
xchg
aam
push
popf
movsl
mov
loop,pt
mov
pop
mov
sub
sbb
pop
out
jae
das
test
mov
push
test
out
aad
xor
inc
movsb
adc
shlb
xor
mov
pushf
test
and
mov
dec
rorb
notb
cmp
push
adc
inc
dec
imul
jne
add
movsl
jbe
cli
outsl
stos
jmp
icebp
sub
pop
shrb
inc
cmp
clc
push
adc
pusha
ja
sarb
pop
mov
dec
add
adc
jg
les
xor
jb
bound
ss
inc
sub
les
jne
fwait
lods
pop
popa
jle
xlat
and
mov
outsb
insb
dec
or
loopne
loopne
vmptrst
test
pusha
clc
inc
pop
push
push
push
fmuls
arpl
xchg
push
pop
jb
inc
push
jnp
add
fadd
jmp
push
lods
adc
and
adc
ret
and
push
push
subb
mov
xchg
add
pusha
and
roll
sub
sub
sbb
jno
push
fcompl
popa
dec
pop
repnz
inc
push
dec
popa
call
push
and
je
jge
or
loop
add
xchg
add
sahf
and
js
popf
dec
inc
push
push
jns
mov
push
in
push
sub
sub
int3
sahf
sbb
adc
adc
push
inc
jmp
stos
loopne
pop
sbb
mov
push
adc
pop
and
in
pop
fcmovu
adc
mov
and
cmp
lcall
cmp
sbb
pop
fidivrl
popf
mov
lahf
outsl
mov
dec
mov
dec
add
pop
dec
push
jg
cli
xor
movsl
mov
or
adc
push
mov
sub
adcb
mov
and
push
shlb
adc
mov
push
add
and
imull
outsb
push
gs
sub
pop
jg
add
sbb
cmp
inc
mov
sub
lret
jg
dec
mov
and
lods
sbb
rclb
add
aaa
xorb
adc
add
pop
add
inc
add
popa
dec
mov
sub
rolb
add
insl
adc
push
push
loop
enter
movsb
loopne
je
cli
jo
pop
xorb
andb
popf
sub
pop
xor
add
in
cmp
or
and
mov
add
ror
subl
lret
or
xchg
negb
pop
push
push
inc
xor
sub
aaa
inc
cmp
or
loopne
jbe
and
mov
push
sub
insb
mov
push
pop
xor
call
inc
iret
dec
pusha
mov
sub
jbe
inc
cmp
xor
push
mov
add
rol
ret
mov
adcb
lret
cltd
cmp
jne
lods
push
push
sbb
cmpl
pop
add
or
or
or
fnstcw
inc
test
jno
pop
jno
inc
sbb
add
out
inc
adc
stc
lods
cs
mov
mov
xor
fmuls
sar
push
call
pop
xchg
pop
lock
add
or
jg
shl
xchg
pop
pusha
sub
and
pusha
jl
sarb
cmp
divb
test
rcrb
jno
fcmovu
sub
xchg
xchg
test
sbb
jb
push
dec
inc
popa
jno
push
or
shl
push
inc
mov
fidivs
popf
sub
add
ret
ret
lods
push
inc
pop
or
xor
push
sub
add
aas
mov
imul
fwait
adc
xchg
or
les
call
mov
push
dec
aad
cmp
xor
inc
call
or
push
adc
int3
or
test
sbb
fmull
push
xor
xor
pop
in
sub
clc
xor
ret
mov
or
dec
and
mov
xor
push
push
sub
jle
out
aad
sub
aaa
sbb
push
ljmp
jp
mov
push
push
mov
hlt
pop
xchg
rclb
mov
mov
push
addl
repnz
dec
ljmp
fimuls
mov
pop
jae
mov
adc
push
jg
sub
je
push
push
clc
pop
cmc
pop
mov
jle
je
dec
jmp
xchg
mov
test
ficomps
rcrb
xor
icebp
ret
adc
mov
pusha
icebp
dec
push
sub
or
pop
inc
xor
in
ret
mov
nop
icebp
cmpl
insl
sbbb
lret
lock
mov
push
add
and
cmp
mov
mov
jp
mov
mov
rclb
dec
aaa
mov
lock
push
adc
xlat
rolb
dec
add
repz
and
nop
xchg
scas
jo
push
xor
xor
sub
adc
fsubl
imul
mov
inc
aad
cmp
or
ret
push
or
pushf
push
rolb
imul
loope
frstor
xor
pop
scas
stos
inc
xor
cwtl
add
xchg
fsub
fs
xchg
inc
push
test
mov
mov
test
jne
add
cwtl
push
or
mov
popf
add
jle
jne
jg
outsb
or
adc
je
sahf
add
sbb
sub
cwtl
and
cli
insb
ljmp
aam
jb
adc
jge
jle
mov
je
push
insb
cmpsb
mov
jge
push
push
sbb
imul
out
push
movsb
shll
addl
jmp
and
sbbl
test
lcall
dec
inc
cmp
adc
mov
aam
add
sbb
mov
xor
sub
sbb
outsl
outsb
cli
mov
call
fimuls
and
adc
fdivrs
shrl
cmpsl
clc
pusha
sub
repnz
arpl
push
or
lock
shrl
adc
outsl
mov
inc
pop
jbe
sub
mov
sub
test
jns
mov
mov
xlat
insl
sbb
gs
push
mov
or
movsb
mov
inc
pop
add
xor
dec
push
pusha
pop
mov
or
shll
push
sbb
fs
mov
nop
push
mov
in
mov
xor
rorb
enter
movsb
int3
loop
rolb
or
jmp
loopne
sbb
inc
add
bnd
jae
mov
aas
pop
fs
mov
test
or
call
popa
add
push
add
cmc
xor
adc
add
and
fisubl
mov
pop
adc
push
fsubrs
cld
icebp
xor
aaa
add
xchg
pop
push
inc
cmp
adc
push
sbb
push
and
imul
mov
mov
test
into
ret
dec
dec
cmp
fs
xor
mov
aad
cmp
sbb
cli
nop
mov
data16
adc
inc
add
dec
jo
mov
pop
sarb
sbb
out
push
pop
add
xchg
sub
xor
xor
fcmovb
add
addr16
int
xor
repnz
or
mov
xor
repz
jl
mov
sub
sub
pop
fsubrs
loope
mov
xor
xchg
orl
shll
rorb
xchg
mov
push
cmp
insb
or
adc
push
and
push
dec
xor
mov
xchg
mov
inc
int
push
enter
cmc
add
jne
sub
mov
push
icebp
xchg
adc
andb
test
push
add
mov
mov
push
adc
addr16
fstp
jne
jmp
cmp
xchg
add
xchg
xor
jl
dec
in
dec
mov
stos
mov
aam
xchg
xchg
fadd
fwait
inc
stos
adc
inc
push
adc
enter
add
pop
and
mov
pop
lret
loopne
add
mov
or
adc
push
or
xor
sub
push
add
jge
dec
or
inc
lret
repz
push
test
dec
jge
pop
or
sub
add
popa
es
pop
xor
jo
lea
sub
repnz
dec
sub
push
pop
imul
fbstp
add
inc
stc
mov
jno
mov
dec
fabs
push
loopne
mov
add
dec
add
pop
je
call
cmp
and
add
inc
mov
hlt
push
or
cmp
sahf
and
outsb
sbb
ljmp
jbe
rclb
sbb
clc
push
mov
add
in
jg
add
and
gs
pop
push
imul
sbb
push
xchg
push
jo
addr16
in
ficoml
leave
xchg
mov
neg
jle
mov
orl
shrb
jb
stos
cmc
mov
sarb
enter
je
in
push
enter
adc
rolb
int3
jnp
dec
mov
mov
push
pop
xchg
dec
out
mov
cmpsl
and
adc
outsl
add
adc
push
adcb
pop
jmp
xor
sub
inc
scas
test
pop
inc
mov
shll
shll
adc
aaa
add
jns
test
fidivl
loopne
test
push
dec
pusha
andl
sbb
lahf
test
in
fisubs
pop
dec
sub
loope
lds
nop
imul
mov
mov
or
pop
icebp
stc
fwait
mov
push
xor
pusha
or
lods
xchg
rolb
dec
mov
inc
roll
and
loope
push
push
arpl
or
mov
shlb
adc
xlat
and
dec
add
xor
mov
or
sbb
jmp
push
or
pop
cmp
lcall
js
adcb
push
pop
sub
jbe
fadds
mov
push
dec
lds
pop
pop
call
or
fs
and
pop
pop
cmp
addl
addb
mov
xchg
test
and
stos
ret
sub
push
jmp
call
adc
test
jecxz
es
lea
mov
xchg
dec
sahf
cwtl
mov
lahf
xchg
xchg
adc
iret
mov
sarl
pop
ret
in
xor
aad
inc
mov
and
sbb
sub
mov
adc
dec
jg
dec
pop
sbbl
xor
mov
push
js
sbb
inc
jle
or
mov
loope
jmp
loope
mov
je
add
sub
add
enter
push
fwait
stos
and
jne
daa
xchg
je
scas
test
out
mov
outsl
rolb
mov
in
rcll
xchg
test
xchg
insb
push
jno
pop
andl
push
dec
test
mov
push
push
sbbl
push
or
mov
andl
fsin
or
sti
inc
cmpsb
mov
and
mov
dec
adc
dec
xchg
add
inc
repz
les
je
cmp
sub
sbb
xchg
icebp
push
pop
data16
or
jns
mov
jo
dec
or
ja
loope
inc
shl
push
add
adcl
sbb
jg
rorb
jg
mov
ja
or
cld
dec
xchg
mov
mov
lea
aad
mov
loopne
or
xchg
repnz
push
mov
in
dec
je
xchg
or
pushf
mov
or
das
movsl
xchg
mov
ret
test
js
sbb
pop
lret
mov
movsb
outsl
push
xchg
movsb
xchg
sbb
aas
in
inc
sbb
out
xor
pushf
sbb
xchg
mov
subl
xchg
dec
scas
jae
mov
mov
mov
rorb
xchg
mov
popa
pop
js
nop
mov
jle
jmp
cmc
and
ret
push
fbld
and
je
popl
and
fiadds
mov
mov
and
xor
mov
cli
xchg
addl
xchg
rcr
out
rorb
movsb
or
push
dec
fidivrl
pop
cmp
add
neg
jnp
lock
inc
pop
and
mov
mov
mov
cmp
cmpsb
adc
addl
mov
inc
incl
ret
mov
popf
movsb
dec
divl
push
data16
add
inc
lret
inc
es
mov
out
cmp
ja
call
rorl
or
rol
cwtl
jbe
push
nop
mov
jmp
rolb
lcall
mov
loop
rcrb
mov
sarb
decb
jmp
pop
in
movsb
pop
cmp
stc
insl
or
into
cmp
int3
orb
pop
sarl
mov
xchg
push
popl
add
add
xor
int3
imul
xchg
shll
in
inc
mov
xchg
push
pop
jl
fmull
mov
or
inc
lods
xchg
push
mov
and
sahf
adc
fsubl
inc
push
or
insl
sti
hlt
lret
sub
lea
mov
insb
ds
pop
pop
sbb
popf
and
adc
incb
mov
push
cmp
clc
push
adc
lods
and
inc
sub
out
adc
add
pop
mov
out
ljmp
add
int
or
neg
xchg
movsl
test
mov
ret
data16
pop
adc
sbb
and
loopne
jb
mov
mov
mov
out
sahf
jno
jp
shll
mov
jge
dec
ja
sub
pop
mov
loop
dec
add
sub
sbb
mov
jbe
arpl
mov
mov
sbb
sti
iret
dec
subb
adc
inc
xchg
inc
mov
mov
or
jnp
cmc
adc
inc
lock
mov
push
dec
mov
and
and
wbinvd
aaa
adc
add
sub
les
addb
fbld
fadds
adc
std
or
adc
inc
inc
repnz
pop
mov
imul
pop
sbb
movsl
dec
js
jno
dec
inc
rcll
loop
outsb
or
add
and
js
mov
and
inc
xor
inc
push
or
fs
pop
push
jb
mov
mov
shl
mov
xchg
or
xchg
dec
pusha
mov
mov
mov
loopne
mov
adc
push
jbe
outsb
mov
mov
cmp
je
ljmp
aam
sahf
xchg
xchg
mov
or
pop
mov
add
lret
xor
push
add
mov
lret
cmp
jle
sub
dec
or
inc
and
mov
pop
dec
dec
dec
jo
lret
pop
xor
or
mov
sub
pop
pop
rcrl
xor
or
push
or
out
push
mov
adc
mov
shl
mov
shll
add
cmp
rorb
mov
mov
loop
adc
stos
jb
cmc
leave
out
pop
les
lret
jns
cmpb
fsubr
adc
lret
adc
lret
jmp
js
jbe
ljmp
or
cmp
mov
dec
adc
mov
or
cmpb
lea
test
mov
arpl
movsl
push
rcr
insb
pop
ljmp
adc
mov
mov
add
xor
arpl
cmp
jl
movsb
pop
mov
in
cwtl
fiadds
es
pop
cmp
pusha
cs
adc
dec
scas
dec
sbb
clc
sbb
fsts
int
jge
outsl
aas
or
mov
aas
fcoml
sbb
inc
inc
pop
cmp
xchg
mov
fmull
dec
cmp
adc
jb
insb
lret
sbb
lret
aam
adc
loop
fidivl
sarl
sbb
mov
mov
dec
das
xor
push
inc
pop
es
jge
fiadds
shl
les
and
test
add
mov
call
pop
pop
pop
aad
mov
pop
or
mov
push
lods
adc
add
insb
fisubrl
push
push
in
dec
inc
fs
shll
inc
push
imul
add
jecxz
subb
adc
mov
jl
sar
in
test
js
add
ret
add
mov
pop
js
and
cmp
shlb
jl
ja
mov
adc
bound
sub
or
cmp
dec
mov
les
icebp
les
rclb
push
xor
lea
cwtl
push
push
xor
jmp
adc
aad
lea
pushw
ret
mov
fiaddl
jl
ret
jge
add
mov
jle
jg
or
stc
sbb
stc
stc
stc
adc
jl
inc
mov
jle
xchg
iret
cmpsl
imul
dec
push
lret
inc
nop
dec
fidivrs
fistl
int3
mov
add
fcoms
sub
cmp
cmpl
enter
add
loop
inc
or
movhps
push
xchg
enter
push
adc
xor
pop
sub
lret
mov
cmp
pusha
call
pop
popa
adcl
xchg
lods
pushaw
popl
sub
and
push
andb
sbb
xor
imul
ds
mov
and
shlb
jo
addr16
xor
mov
mov
sahf
aaa
mov
ret
inc
mov
dec
fimull
jns
scas
mov
outsb
xor
push
xorl
sbb
mov
add
jle
and
rcl
mov
and
es
cs
mov
jmp
ja
leave
pop
fsubrl
sbb
pop
add
xor
xchg
cmp
ret
or
cmp
mov
pop
push
jmpw
and
in
aad
mov
and
xor
sbb
xchg
insb
dec
insb
mov
push
loop
and
lds
jb
dec
push
je
clc
sbb
mov
push
add
push
pop
andb
lea
cli
jbe
jmp
add
jge
and
inc
dec
mov
scas
inc
sub
cmc
rolb
jo
andb
movsl
loopne
int3
sbb
cli
jg
mov
pusha
nop
popf
test
inc
mov
mov
jno
roll
ret
or
leave
stc
test
and
movsb
cltd
aas
xchg
es
fstl
pop
inc
orb
add
push
mov
popa
push
mov
out
xchg
cmc
sub
pop
je
out
xchg
inc
les
cmc
mov
pop
or
push
xchg
push
sbb
test
adc
test
sarl
dec
pop
dec
push
shll
sbb
shrb
das
jl
add
sbb
adc
jne
insb
inc
sub
fsub
add
dec
adc
add
dec
jecxz
add
add
adc
or
push
mov
cmpsb
bound
sub
sahf
adc
add
xor
add
lods
les
test
les
outsl
ds
add
inc
mov
push
popa
lds
jns
cmp
lahf
test
or
ret
cmpsl
or
pop
cwtl
dec
dec
imul
add
and
inc
movb
psadbw
xor
nop
jl
or
nop
mov
jnp
mov
or
pop
ret
fldl
stc
gs
push
mov
dec
filds
adc
pop
push
ljmp
or
or
fmuls
push
xchg
push
xchg
lcall
sub
push
js
scas
lret
les
fadds
jp
and
gs
lock
pop
mov
jmp
push
xchg
shlb
sub
xor
mov
adc
and
in
or
fidivs
cmpl
dec
pop
dec
add
xor
inc
adc
adc
rolb
push
dec
call
mov
les
or
pop
adc
pusha
insl
or
mov
jo
sbb
mov
decb
mov
ret
sub
outsb
out
mov
inc
xor
jl
icebp
pop
cmp
testl
xchg
pop
lea
push
adc
push
xlat
outsb
loopne
inc
and
lret
push
lahf
roll
push
dec
scas
dec
add
pop
dec
or
sub
sub
call
sub
and
das
or
mov
dec
adc
sub
in
or
push
mov
fbstp
rcr
push
push
add
nop
xor
xor
nop
push
in
xor
aaa
lcall
or
sub
mov
push
pop
jne
movsl
mov
or
ljmp
pop
inc
cmpb
sbb
ja
push
faddp
or
push
mov
iret
sub
jle
mov
movsl
and
outsb
dec
add
push
mov
push
jne
push
aaa
and
push
stc
pop
ret
xchg
push
xchg
lret
mov
xchg
mov
mov
mov
fs
xor
test
imul
sub
inc
push
cmpsl
fsubrl
sub
gs
inc
and
push
fdivrs
add
cmp
xor
in
inc
sub
xchg
fdivl
sub
daa
rcl
push
fidivl
push
push
lods
xor
test
sub
dec
fists
cmpsl
adc
mov
movsb
and
push
mov
test
cmp
mov
push
add
xor
xor
popf
and
cs
fstl
jbe
pop
jmp
xchg
pop
inc
mov
adc
cmp
decb
adc
and
ret
or
mov
jmp
negl
nop
xchg
push
test
inc
jo
push
shl
sub
pop
mov
loopne
lea
aas
mov
xchg
ret
adc
test
pusha
add
xchg
mov
into
jae
lea
lock
icebp
gs
jl
cvtps2pi
iret
push
popa
push
sub
ss
shrb
inc
lods
and
loop
dec
push
jecxz
add
add
hlt
jmp
mov
push
push
jl
sub
adc
inc
es
iret
cltd
lcall
nop
push
lcall
notl
and
sbb
mov
stos
insl
mov
push
sarl
push
jmp
push
sub
pusha
cmpsb
adc
mov
rcrb
les
push
sub
popa
jle
aad
push
dec
adc
ficoml
push
push
sub
jmp
lea
push
roll
addb
jb
or
jg
add
pop
xchg
shl
add
dec
dec
or
xchg
fsts
shrl
push
pop
sbb
ret
arpl
sub
cmp
cmp
or
jge
flds
shl
xorb
add
dec
xchg
xchg
data16
repnz
nop
push
mov
nop
sbb
pop
lock
jne
push
sbb
lea
push
pop
jge
push
mov
mov
and
push
dec
shrb
mov
nop
cltd
aam
adc
or
call
add
jo
gs
cli
mov
and
xchg
je
push
adcb
or
lock
data16
jbe
sub
sub
out
lea
mov
test
push
and
push
inc
and
jl
jl
jmp
add
divb
and
dec
js
dec
push
fstpl
xor
test
xchg
sub
rcrb
jg
cmp
jae
cmp
je
inc
jmp
inc
into
dec
mov
lea
add
pop
xor
mov
cld
push
mov
push
jl
mov
add
imul
lar
mov
mov
mov
or
sub
sub
add
lods
aam
test
dec
add
sub
mov
shlb
adc
cmp
xor
or
add
jbe
pop
cld
or
mov
pusha
cltd
lds
hlt
xor
jbe
adc
or
push
mov
gs
rcrb
xor
movsb
sub
loope
fwait
inc
out
mov
jns
mov
jg
jbe
mov
bound
mov
jne
xchg
into
and
add
js
or
and
xor
rolb
and
push
fcompl
lock
adc
push
in
xorl
and
rolb
jmp
leave
repnz
dec
xchg
sbbb
mov
push
lea
or
insl
mov
pop
insl
jmp
xor
lea
cmp
loop
add
push
jmp
xor
es
enter
pop
pop
jl
ss
loopne
andb
push
nop
xor
add
push
jecxz
push
or
mov
arpl
test
sub
fwait
adc
push
inc
dec
or
cwtl
mov
hlt
pop
xor
ljmp
xor
push
xchg
push
xlat
pop
jg
cmp
add
sub
push
decb
jl
in
lea
fmull
mov
test
dec
add
dec
in
lods
sahf
movsl
icebp
push
add
clc
out
pop
sub
adc
or
jl
loopne
test
shr
jge
push
and
inc
mov
or
sub
cmpl
add
out
movb
push
add
std
pop
pop
mov
pusha
scas
or
mov
mov
sarl
inc
js
xchg
mov
cmp
les
in
pop
inc
cmp
pop
adc
or
xchg
jle
adc
add
mov
faddp
push
push
xor
cmp
test
int3
dec
enter
inc
add
add
mov
pop
sub
sbb
pop
add
push
cmpsl
dec
nop
ficompl
jbe
clc
xchg
jo
push
push
mov
push
lods
add
ds
jo
push
pop
adc
push
shlb
fwait
sti
roll
mov
mov
ret
cmp
adc
loopne
or
jno
add
adc
jo
rcl
mov
enter
or
add
mov
jge
inc
faddl
mov
test
call
and
js
adc
in
cmp
ljmp
mov
and
xchg
std
push
stos
inc
inc
test
js
inc
adc
xor
outsb
push
jmp
aaa
jo
add
and
test
jle
jne
fstpt
inc
inc
call
add
mov
subb
add
popa
mov
sarl
push
inc
je
lods
lods
cmp
test
gs
jnp
dec
dec
cmp
icebp
rolb
ja
or
mov
jne
xchg
shrb
call
push
mov
dec
mov
xchg
or
push
jb
pop
jmp
xchg
adcl
sub
mov
lock
stos
dec
aas
add
mov
insb
mov
imul
push
adc
add
push
fdiv
and
dec
and
movsl
cs
lahf
xor
mov
inc
cs
lea
pop
mov
sub
outsl
xchg
fimull
mov
or
jmp
dec
cld
movb
int
pop
add
xor
je
add
mov
mov
push
adc
sub
dec
dec
lods
lahf
fcoml
call
lret
and
and
or
rol
pop
enter
sub
js
push
lcall
push
xchg
shll
lret
or
pop
xchg
aam
xchg
or
call
xchg
loop
inc
popa
call
mov
not
and
push
or
dec
std
add
lea
mov
js
shl
or
add
pop
sarb
shll
fmuls
push
sub
fldl
scas
sar
into
mov
push
shr
or
add
mov
push
fcmovbe
repz
imul
leave
in
jmp
test
scas
cmc
push
fcoml
pop
cmp
clc
add
nop
and
pop
cld
push
or
add
subb
xchg
adc
mov
sbbl
test
lret
dec
push
movups
test
imul
cmp
add
cmp
sahf
mov
pop
aas
pop
sbb
js
sarb
inc
mov
cmp
fcomps
loop
out
add
addl
nop
or
inc
mov
lret
testl
pop
movsl
mov
push
test
xor
stos
pop
mov
adc
jg
xchg
lret
or
inc
adc
xor
cmp
mov
pop
int3
push
mov
cmp
push
add
pop
pop
lahf
fucom
and
nop
imul
push
in
lcall
mov
or
pop
adcb
xchg
std
adc
fs
cmp
mov
and
ljmp
mov
movups
mov
icebp
pushf
ljmp
out
cmp
pop
lock
lea
mov
push
jecxz
lock
push
in
or
ljmp
lock
fstp
sbb
push
idivb
push
add
nop
fs
and
inc
sub
loop
popa
js
mov
shl
push
push
pop
or
mov
je
and
out
aad
imul
pop
adc
jo
push
or
cmp
stc
xchg
jns
icebp
sarl
nop
jmp
jmp
cmpsl
call
jmp
js
mov
mov
adc
ret
pusha
sti
rorb
out
inc
push
ret
mov
aas
mov
pop
insl
push
adc
add
loope
pop
or
cmp
or
loop
sbb
jmp
movups
sub
rcrb
fdiv
adc
je
push
aad
fisubrl
mov
lcall
loop
xchg
rolb
mov
push
jl
lea
cmp
int
and
dec
sub
orl
pop
insb
cli
imul
add
pop
aaa
ret
dec
loopne
bnd
pop
sub
mov
sub
push
cld
pusha
dec
mov
jp
adc
jbe
rorb
int
into
pushf
sbb
adc
inc
mov
push
loope
pop
cs
add
das
fldenv
pop
push
add
mov
dec
or
insb
rorl
xchg
mov
clc
mov
or
jp
pop
cli
stc
xchg
sti
pop
cmp
pop
sbb
mov
flds
outsl
addr16
inc
lcall
cmc
add
ljmp
fnsave
loopne
lret
pusha
shl
xor
ljmp
pushf
xor
xor
jmp
cwtl
inc
cmp
jmp
xchg
xchg
cwtl
fbstp
fdivs
into
mov
dec
icebp
add
xor
adc
and
dec
inc
shll
shlb
shl
cmp
inc
cmc
dec
pop
pop
and
insl
push
adc
fmull
fmuls
cli
cmp
and
inc
pop
push
adc
in
cli
cmpsb
clc
call
xor
xlat
xor
xor
jg
fbstp
jl
ljmp
or
cmp
test
inc
stos
imul
and
mov
cmp
inc
rorl
mov
fbld
xchg
and
xor
jo
mov
cmpb
mov
jle
sub
inc
shll
ret
data16
stos
add
mov
push
cli
daa
mov
cmpsb
or
bound
in
mov
adc
pop
mov
fbstp
sub
call
mov
jl
add
out
in
or
inc
out
fcomi
xchg
push
cmp
aam
ljmp
push
sbb
lods
rcrl
jl
in
test
sbb
pop
xor
jl
pop
xchg
loopne
mov
negl
fistpll
push
inc
push
mov
and
push
lods
loopne
loope
ds
or
insb
xor
std
ds
and
hlt
adc
cltd
or
pop
or
sahf
iret
cmp
xor
pop
sbb
ljmp
inc
push
or
addl
pop
push
stc
cmpsb
shll
and
sub
stos
push
add
adc
xor
lea
icebp
dec
adc
roll
cld
out
andl
pop
pop
gs
and
push
dec
pushl
or
push
xlat
dec
loop
xor
add
lret
xchg
dec
jbe
mov
inc
stc
push
push
mov
mov
sbb
dec
cltd
subl
test
enter
inc
dec
addr16
mov
outsl
jmp
nop
and
pop
in
or
push
inc
jmp
mov
adc
add
int3
add
repz
jns
mov
sbbb
sub
je
pop
xchg
push
cmpb
jmp
mov
je
dec
dec
xor
sbb
shll
inc
cs
stc
mov
sub
subl
inc
jno
xchg
roll
cmp
and
inc
pop
out
adc
push
inc
adc
xor
ficompl
xchg
andb
sub
push
xchg
and
mov
dec
add
xor
xor
or
dec
push
mov
ljmp
push
adc
int
les
xchg
xor
iret
roll
cs
pop
shl
add
pop
enter
and
push
pop
push
xchg
add
jg
arpl
jp
movl
inc
dec
add
movl
repz
addr16
mov
fdivrl
xor
push
mov
pop
ret
pop
adc
addr16
cli
fisttps
add
repnz
and
push
decl
push
lret
adc
adc
add
mov
mov
lea
xlat
jb
add
add
pop
fsts
arpl
pop
ffreep
or
outsl
sub
pop
stos
mov
inc
ret
clc
add
cmp
mov
add
push
mov
lods
and
clc
js
cli
push
dec
push
jno
pop
aam
outsb
or
pop
or
mov
mov
mov
fldt
ret
add
cwtl
jmp
cmp
ja
or
jae
xchg
in
jmp
sbb
test
mov
lods
sbbb
pop
lods
jg
dec
stos
or
rep
jl
daa
dec
push
sbb
mov
pop
cld
or
mov
loop
lea
std
mov
push
mov
jae
incl
jnp
jnp
mov
cmp
sbb
int
and
push
pop
or
insl
aas
adc
add
imul
inc
mov
imul
cmc
jae
pop
xchg
rcll
mov
loope
stos
inc
xor
outsb
add
xlat
xor
aam
sbb
sbb
lods
rclb
push
add
fstpt
aas
scas
lods
inc
inc
cmp
rcrb
shrl
lea
lahf
add
push
cmp
mov
negl
test
jp
lock
xchg
jbe
movl
jmp
sub
dec
push
pusha
pop
cmp
mov
push
in
cmpsl
push
int
shlb
push
cmp
pushf
rcrb
jnp
jb
pop
or
cmp
pop
dec
into
xor
cld
or
movsb
imul
lods
mov
mov
mov
sbb
jecxz
add
mov
sbbl
mov
cwtl
lods
sarl
ret
jge
or
shr
dec
mov
popa
lock
inc
cmp
jae
xor
push
sub
sbb
ss
add
adcb
arpl
mov
aad
hlt
btr
pop
xor
int3
movsb
sub
pop
jo
jg
int3
jmp
mov
fsubl
mov
jmp
roll
mov
testb
aas
add
movsl
test
lock
xor
jg
aaa
mov
add
sub
inc
mov
mov
pushf
mov
adc
inc
cmp
mov
mov
sbb
mov
mov
mov
outsb
xor
cmp
cmpsb
imul
cmpsb
or
xor
fistpl
fadds
sti
or
or
insl
add
ret
cmp
pushf
shl
mov
xor
xchg
hlt
addb
add
mov
inc
fwait
ret
outsb
xchg
dec
icebp
push
insb
jl
push
mov
in
push
aas
shr
ss
scas
or
ss
imul
fcmovbe
out
dec
inc
je
adc
sub
pop
fldl
xchg
cli
push
cwtl
sub
fwait
jbe
pop
pop
dec
lcall
lock
xor
pop
test
subb
test
push
pop
adc
shl
xor
lock
cmp
mov
and
pop
ja
mov
jno
les
xor
push
xchg
push
stos
test
push
pushf
jp
and
inc
je
push
loopne
push
mov
xchg
add
xchg
into
xor
mov
jo
push
loopne
add
mov
mov
xor
mov
ds
xchg
cmp
sbb
lods
test
loopne
sbb
insb
imul
rclb
mov
jge
adc
pop
push
mov
je
pop
test
test
sbb
loopne
andl
ss
xor
adc
xor
dec
rolb
xor
jmp
push
mov
filds
xor
add
pop
aam
fmull
ret
clc
test
add
mov
pushaw
test
les
fwait
lock
and
and
shl
mov
mov
test
pop
inc
dec
out
ss
xor
xor
jp
sub
int3
stos
stos
fs
rolb
or
jmp
pop
insb
sbb
mov
pop
in
cmp
mov
xchg
inc
mov
ret
jbe
add
daa
push
or
stc
mov
sar
jnp
aad
call
mov
adc
dec
addl
dec
std
inc
addl
rorb
or
test
dec
js
les
sub
scas
adc
nop
mov
mov
data16
jl
sub
add
ss
shl
ret
inc
or
es
lea
push
mov
pop
ret
bound
sbb
fcomps
sub
test
jne
js
icebp
je
inc
dec
mov
mov
mov
inc
mov
les
cmp
push
push
push
jno
mov
mov
fmul
adc
stc
ret
push
in
jl
addl
fisubrs
sahf
dec
jle
repnz
lea
adc
scas
sub
ror
idiv
adc
int3
inc
inc
mov
mov
mov
or
loopne
mov
adc
mov
sub
inc
add
dec
jne
push
fmuls
add
mov
adc
inc
popa
or
ss
je
sbb
shr
sub
jecxz
push
mov
jl
js
or
adc
jo
push
popa
pusha
pop
pop
or
mov
inc
cmp
adc
push
je
jbe
mov
inc
dec
add
add
andps
orb
enter
sbb
test
pop
add
gs
jns
add
pop
add
push
xchg
jne
cwtl
xchg
cld
mov
adc
add
pop
cmp
mov
add
xchg
les
push
repnz
cltd
popa
jbe
pop
js
pushf
pop
in
movsb
cmp
pop
js
pop
enter
or
enter
das
or
or
test
pushf
pop
enter
mov
cltd
loope
add
adc
adc
mov
pop
adc
jns
mov
das
adc
or
pop
test
test
fsubrl
push
or
or
and
sbb
addb
call
push
and
int3
inc
pop
fadds
mov
inc
add
rcr
pop
subl
push
stc
push
push
push
mov
push
and
shrb
les
xchg
negl
push
scas
in
xchg
mov
push
mov
dec
lock
xchg
in
sub
push
add
mov
loopne
scas
jmp
jns
and
arpl
jnp
inc
inc
push
pop
repnz
dec
ss
ror
jnp
mov
movl
add
subl
mov
add
jns
add
in
xor
push
or
or
pop
inc
loope
lret
xchg
xor
add
push
add
loope
or
adc
ljmp
xor
add
and
inc
push
push
je
pop
dec
push
jo
mov
pop
jns
jl
dec
aaa
mov
add
adcl
xor
sbb
cmp
test
and
dec
adc
cmpsl
mov
divb
mov
xor
push
inc
sub
cld
push
cltd
mov
fmulp
inc
or
xchg
adc
push
mov
sbb
jbe
inc
sub
testb
pop
andl
imul
es
dec
xchg
outsl
mov
out
sbb
cmp
inc
mov
pop
inc
aaa
add
cs
shlb
sbb
adc
adc
pop
dec
dec
mov
stos
cwtl
sub
les
test
aaa
pop
mov
mov
pop
fs
fmull
ljmp
test
fsubrs
ds
push
mov
imul
bound
mov
xchg
aaa
icebp
jne
sbb
les
mov
xchg
jb
push
subl
and
or
mov
pop
jg
push
in
xor
movsl
adc
test
sti
inc
xor
jb
loope
jg
daa
movsb
push
cmpb
lea
imul
or
cmp
fisubrl
push
dec
leave
or
add
cltd
cli
inc
mov
inc
jae
xorb
fdivrs
push
pop
push
test
and
push
lahf
mov
dec
fisttpl
dec
sub
shll
add
ficompl
or
pop
or
icebp
inc
pop
icebp
inc
pop
cmp
mov
mov
push
insb
clc
cmp
ret
addl
pop
push
push
sub
add
cmp
fbld
and
add
cmpsb
mov
and
push
aas
dec
add
mov
je
dec
inc
lea
out
push
pop
mov
and
push
lock
movsb
xchg
test
xchg
xchg
push
adc
or
mov
jmp
es
pop
cmpsl
in
test
inc
xlat
pushf
pushf
cmp
nop
and
lret
sbb
icebp
or
inc
mov
or
cmp
add
jmp
xor
dec
cs
ficoml
and
mov
push
inc
aam
mov
and
push
mov
lds
insl
sbb
cmp
ss
and
cld
ror
pushf
push
and
xchg
shlb
and
insb
xor
adc
mov
add
rorb
jo
lahf
jne
imul
insl
mov
mov
pop
cmpb
loopne
shlb
fwait
lds
mov
imul
inc
enter
nop
ds
sub
rolb
movsl
add
add
testl
rclb
mov
insl
in
lret
mov
push
push
dec
push
or
fisttpll
add
shll
popa
js
xor
adc
push
jle
xchg
loopne
push
ss
out
cld
arpl
mov
and
test
call
fdivrs
in
fistps
jle
out
lock
sub
scas
in
push
jne
repnz
jno
and
push
jmp
shlb
adcb
xchg
ret
outsb
loop
jo
ret
clc
push
pop
cltd
popa
test
jb
push
jb
andb
mov
aam
push
repnz
push
jmp
inc
sub
mov
or
and
sub
add
ret
dec
mov
std
push
and
adc
jb
jne
test
adc
jns
jo
or
xor
rcrl
cwtl
inc
sbb
dec
inc
inc
or
mov
inc
mov
adc
shl
or
dec
inc
in
fldt
mov
subl
ds
call
sbb
dec
ficoms
sbb
xchg
mov
xor
sbb
loopne
mov
lock
ljmp
push
lock
outsl
pop
pushf
nop
scas
std
push
mov
inc
mov
ret
and
jge
mov
leave
lds
add
push
gs
sub
jnp
ret
sub
pop
addl
shll
pop
dec
jge
movb
inc
notb
test
mov
add
mov
sub
fs
lcall
shlb
jne
xor
jge
sub
pop
and
mov
pop
xor
jns
cltd
shr
sbb
adc
dec
or
dec
or
loopne
add
into
push
mov
add
sub
add
int3
pop
mov
test
mov
dec
xor
jmp
mov
pop
lea
or
sub
mov
movsb
push
cmp
das
bound
mov
push
or
xchg
fiaddl
dec
nop
ja
mov
push
out
add
mov
inc
xlat
xor
out
imul
add
mov
sti
arpl
mov
dec
cmp
mov
inc
jbe
xchg
sbb
add
or
pop
call
xlat
and
pop
aas
xor
jmp
sub
repnz
mov
subl
sbb
sub
add
int
je
addb
lcall
dec
and
frstor
cmp
filds
jg
jle
cmp
mov
and
inc
push
push
adc
pop
push
scas
fstp
mov
push
cmp
mov
push
enter
fs
js
inc
mov
adc
jg
fsubrl
cmp
push
add
and
pop
ret
sarb
add
insb
and
mov
xchg
cli
add
push
in
aas
pop
nop
dec
push
dec
sub
sub
or
add
or
aas
pop
clc
inc
xchg
sti
cld
cmpsb
ss
fstp
pop
push
fs
mov
or
lock
gs
call
int
sbb
pusha
leave
in
shlb
dec
jnp
sbb
add
xchg
and
jb
cld
mov
xor
ja
data16
rorb
fadd
dec
mov
inc
jns,pn
test
sbb
scas
or
nop
in
fistl
faddl
pop
xchg
idivb
cmp
shl
pop
out
jns
or
movb
repz
insb
xchg
inc
outsb
repnz
pop
inc
mov
mov
aas
pop
mov
sbb
pusha
push
push
in
adc
pop
pop
jo
jp
sbb
and
fdivl
inc
fstpt
stos
mov
jo
and
sub
mov
arpl
or
leave
cmpb
push
push
sub
sub
xor
lods
pusha
hlt
cmp
push
xor
fs
testl
add
push
loopne
pop
add
or
mov
adc
dec
dec
dec
mov
shrb
pop
jmp
sbb
insb
popf
add
inc
addr16
mov
mov
cld
and
and
add
mov
in
lret
and
sub
cs
xchg
sbb
daa
rcll
mov
cli
add
add
rorl
jo
adc
ss
sbb
cmp
adc
cs
or
jp
pop
push
push
jmp
or
push
test
mov
adcb
adc
sbb
cli
cmp
dec
pop
mov
dec
lea
shrl
outsb
inc
push
add
sub
lcall
pop
mov
popa
or
xchg
mov
xor
add
inc
xor
pop
inc
leave
and
or
jle
popf
push
xor
or
and
xchg
xor
je
pop
dec
loopne
js
and
sbb
dec
inc
push
fcmovnbe
or
mov
jp
xor
and
add
lea
pop
and
add
push
add
or
xor
xor
sar
pushf
push
or
mov
pop
cmp
dec
psubq
ficoml
cltd
sbb
add
pop
gs
mov
bound
or
pop
lahf
push
sbb
or
mov
mov
movl
sbb
pushf
or
sub
mov
pop
rorl
mov
aad
push
lcall
fsts
popa
fidivrs
lods
dec
add
pop
push
push
enter
das
icebp
xchg
in
mov
add
mov
xchg
lret
insl
ret
mov
fdivr
lcall
pop
dec
push
test
mov
insl
lahf
mov
loope
shrb
jnp
cmpsl
adc
pop
sbbb
jg
push
loopne
pop
and
fld
pop
gs
loope
mov
mov
fnstcw
jne
push
jl
fsubrs
jl
push
adc
setge
inc
cli
sub
sbb
xchg
rcr
nop
icebp
mov
push
pusha
xor
sbb
sub
cs
pop
add
insb
mov
jnp
adc
adcb
int
rcrb
jnp
lea
push
pushf
jmp
adc
cmp
lock
jle
movl
and
dec
lcall
xor
add
pusha
pop
or
or
rolb
mov
rcrl
pop
pop
jo
jle
push
sbb
jg
insl
dec
push
push
dec
scas
int
add
jo
lea
adc
pop
test
mov
jb
rolb
insb
adc
rolb
push
aaa
push
in
mulps
testb
lods
aam
push
sarl
mov
mov
rol
sub
or
mov
xor
outsl
ret
adcb
jno
subb
out
out
shll
pushf
std
xchg
add
jge
roll
sub
rorl
add
mov
and
pop
push
test
cwtl
popf
adcl
movsb
ja
adc
inc
sahf
out
adc
or
leave
cwtl
dec
jge
ret
jl
add
ss
outsb
into
jns
or
cs
pop
das
sbb
imul
push
cmp
pop
movsb
out
lock
add
cmp
mov
pushf
fisttps
icebp
rcrb
mov
push
and
mov
test
sbb
and
xchg
rcll
rcrb
iret
and
cmpsb
iret
or
or
and
dec
test
add
or
push
push
or
pop
push
add
push
push
stos
xor
ficoml
orb
push
inc
nop
dec
sahf
add
lds
test
daa
lock
outsl
push
mov
xorb
jge
mov
andb
mov
mov
repnz
or
jmp
dec
jmp
inc
or
movb
aaa
xor
ljmp
std
inc
xor
fidivs
mov
add
pop
jnp
inc
adc
lret
repz
cmp
dec
push
push
cmp
push
xor
scas
mov
inc
push
and
imull
xchg
add
lret
or
xor
cmp
cli
jle
and
cmp
sub
filds
adcb
push
jno
sub
scas
inc
popf
inc
pop
push
dec
xor
gs
add
push
and
das
ret
sbb
rorb
rolb
sahf
add
add
cmp
mov
call
sbb
push
or
lret
or
xchg
inc
addb
xlat
adc
scas
aas
add
dec
mov
test
add
sub
mov
jns
jb
sub
es
shl
push
addb
mov
adc
pusha
repz
pop
ss
cwtl
fs
movsb
add
cmp
dec
mov
sub
adc
test
dec
sbb
xorb
fcmovne
sub
cltd
gs
dec
lods
xor
pop
cli
dec
dec
jb
sbb
push
idivb
or
std
pop
mov
mov
enter
xor
push
js
rorb
cmp
adc
cmp
lret
addb
add
pusha
lods
sbbb
pop
or
lret
cmp
ficoms
xchg
or
fadd
andl
adc
popf
nop
imul
cmpsb
das
cmp
add
movsb
js
sub
mov
lods
inc
pop
or
push
pushf
mov
lods
aas
add
loopne
xchg
lea
mov
lcall
adc
rolb
add
and
ret
insb
cmp
push
fidivrl
adc
outsb
pusha
stc
pusha
shlb
insb
pop
jno
xchg
and
leave
push
add
outsb
or
cmp
test
dec
aad
sub
or
cmpsb
xor
cltd
call
cmp
sbb
sahf
mov
or
pop
test
xchg
cmp
xchg
pop
mov
dec
mov
push
pop
push
adc
mov
mov
inc
sbb
adc
push
loope
dec
arpl
loope
popf
push
adcb
push
pop
mov
dec
push
sub
add
sbb
xchg
leave
icebp
ret
std
gs
sbb
adc
inc
push
jg
fs
insl
add
fdivs
inc
inc
lea
cmc
mov
xchg
movsb
negl
adc
movl
sbb
js
dec
nop
xchg
lods
mov
push
push
xor
cmp
ret
loopne
jns
xchg
xor
or
cmp
enter
xor
cs
dec
pop
mov
or
pop
fdivrl
push
xchg
xchg
fs
pop
inc
jmp
jne
jo
ret
jl
cmp
je
or
dec
cmp
popa
inc
xor
inc
repnz
incb
push
add
and
xor
insl
sarl
fs
insl
inc
adcl
mov
mov
dec
mov
mov
mov
mov
dec
xor
cmpsb
mov
or
mov
loop
movsb
andl
xchg
push
mov
inc
push
push
je
or
test
dec
pop
or
push
leave
push
add
clc
sub
push
dec
arpl
into
in
jne
aad
in
loope
fidivrs
inc
sub
imul
dec
mov
push
or
scas
test
adc
adc
ret
jge
xor
xor
pop
bound
les
jbe
xchg
inc
mov
sub
je
and
das
sbb
and
or
mov
sbb
orb
mov
push
aam
push
adc
push
xchg
sbb
enter
adc
mov
scas
lock
fstl
js
mov
xor
or
push
pop
js
push
inc
aas
pop
inc
push
push
cmp
pop
rcll
xor
adc
push
sub
cmp
xor
sbb
js
shrl
dec
inc
jmp
xor
jge
pop
dec
fistpl
add
push
push
cmpsl
iret
call
mov
and
leave
clc
push
add
or
dec
push
pusha
mov
orb
or
lds
sbb
inc
or
pop
and
jl
adc
adc
fbstp
cmp
mov
addb
cli
or
mov
sbb
lds
nop
mov
jg
push
gs
test
sub
sub
pusha
jmp
nop
bound
inc
jl
dec
cmp
sub
pop
aas
add
test
pusha
mov
je
fs
and
inc
fsubrs
lds
inc
mov
sti
mov
adc
pop
lret
push
add
inc
aad
or
inc
add
enter
mov
arpl
add
int3
inc
pop
cmp
pop
das
pop
sbb
test
add
cmp
ret
fs
out
imul
xchg
movsl
aad
add
pop
xchg
clc
dec
jecxz
xor
addb
lret
sbb
aam
xchg
test
dec
jne
sub
add
sets
dec
sub
lock
fstpl
sbb
notb
sub
addr16
dec
dec
xchg
push
xchg
or
dec
js
aas
xor
xor
push
dec
shlb
xchg
pop
lcall
icebp
int3
or
adc
je
dec
sbb
and
mov
inc
fistps
mov
push
sbb
cmpsl
mov
cmp
dec
or
push
dec
mov
lret
nop
add
xor
popa
test
or
repnz
cmp
sub
jb
xor
and
sbb
mov
sbb
cmpl
notl
or
scas
push
movsb
jno
push
sbb
loope
or
adc
xchg
cmpsb
cwtl
pop
jge
push
mov
or
or
nop
xor
or
arpl
mov
pop
popf
adc
aas
pusha
adc
cmp
xor
stos
push
inc
pop
lcall
inc
sbb
sub
xchg
pop
add
and
xchg
xor
movsb
jg
shrl
leave
js
pop
test
dec
mov
pop
and
jnp
adc
mov
mov
pop
pop
sbb
sub
pop
insl
and
push
popa
xchg
fld
sbb
or
leave
jl
push
mov
push
imul
push
push
adc
hlt
sub
adcl
lea
mov
sbb
or
inc
test
xchg
addr16
sbb
cmp
iret
cmp
adc
pop
rclb
into
lods
cld
cmp
jl
sub
popf
fisubl
ja
mov
mov
outsl
push
inc
cli
mov
push
mov
cmp
sub
cmc
fsubrs
sti
cmp
repz
loope
sti
mov
jmp
push
das
lods
add
ja
sti
jmp
adc
push
mov
adc
or
xchg
jb
jbe
call
insb
push
push
pop
push
sbb
push
sbb
subb
sti
lods
ret
ljmp
xchg
scas
sub
jnp
sub
xor
and
stc
xchg
or
and
fwait
ljmp
push
sub
add
inc
mov
lret
lret
pop
iret
dec
add
add
movsb
aad
test
add
mov
add
fiadds
aaa
xchg
mov
pop
aas
sub
xor
inc
xchg
jmp
js
dec
inc
or
stos
xor
or
adc
dec
decl
cmp
lea
adc
leave
out
mov
sbb
sub
loope
pop
loope
sbb
test
lret
data16
sub
add
stc
push
inc
lods
add
cmp
and
mov
lds
push
sbb
adc
dec
popa
loopne
clc
shl
inc
adc
mov
daa
sbb
adc
out
mov
sbb
lret
mov
mov
push
imull
xchg
sub
inc
shll
rcr
test
int
cmpsb
popl
dec
ficoml
mov
add
cmp
push
std
das
inc
or
test
add
dec
jmp
push
sub
push
inc
in
inc
fadds
iret
sarb
movsl
sbb
mov
jg
aaa
std
into
out
inc
push
lea
push
lret
push
push
cmp
sub
xor
push
bound
int
or
and
adc
adc
jecxz
movsb
push
push
pop
sbb
dec
test
mov
shlb
mov
jb
dec
xchg
push
ret
pop
mov
dec
xor
pop
lret
in
sbb
mov
popa
push
xchg
divl
std
mov
cmp
add
push
das
inc
out
push
push
int
push
mov
in
inc
jne
mov
cmc
xor
sbb
inc
dec
cmc
aas
add
dec
cmp
jne
sbbl
arpl
xchg
and
nop
or
enter
and
ds
lea
adc
les
je
loope
mov
jmp
push
jae
fwait
dec
loope
dec
pop
xchg
inc
ja
pusha
outsl
sbb
and
mov
push
push
js
or
inc
mov
dec
cmp
movsl
nop
lea
clc
adc
sbb
test
adc
scas
lock
cmc
dec
cmp
inc
add
movsl
mov
adc
call
sub
mov
jg
clc
sub
das
sahf
inc
add
popf
lret
inc
push
dec
xchg
and
je
inc
imul
push
jne
push
jns
mov
push
lret
add
dec
xor
and
loopne
pop
push
ret
sbb
inc
adc
data16
and
and
scas
dec
stos
or
pop
and
ret
jg
inc
push
cmpsb
aad
jno
pop
or
aas
pcmpeqb
les
ss
pop
and
cmp
add
or
cli
pop
psubd
movl
adc
int3
and
lds
ret
push
sbb
push
push
pop
or
inc
pop
mov
or
adc
insl
or
xor
pop
sub
mov
stc
dec
lret
mov
dec
fwait
mov
sub
push
iret
ja
jb
mov
repnz
addl
pop
and
lock
sbb
pop
xor
sahf
add
xor
fcoml
add
xchg
cmp
movsb
push
daa
add
push
inc
cs
xchg
xchg
inc
dec
enter
sbbl
stos
or
jge
pop
add
dec
dec
nop
adc
adcb
mov
stos
adcb
mov
or
cmp
mov
xchg
mov
lock
jle
jle
data16
data16
inc
je
in
add
push
jle
mov
ljmp
mov
stc
cs
or
mov
pop
and
filds
xor
adcl
cmp
test
inc
int3
add
xchg
test
mov
outsl
and
cwtl
sbb
or
loop
sub
in
xchg
jmp
jb
clc
and
adc
or
push
imul
pop
into
pop
outsl
add
sub
cmp
int
and
adc
sub
stos
enter
xchg
and
inc
inc
mull
enter
cmp
push
inc
dec
sbb
adc
sub
rcr
or
outsb
adcl
and
sub
mov
rorl
xor
mov
inc
subb
pop
adc
std
jge
sti
pushf
or
cli
pop
sbbb
push
popf
fstp
hlt
sub
add
jecxz
js
cld
mov
or
push
push
sub
cmp
les
dec
mov
mov
sbb
je
xchg
mov
test
orb
bound
rolb
int
fmull
sbb
lods
add
lret
mov
xchg
stos
incb
dec
loop
dec
lea
dec
es
shrl
jne
cmp
push
popa
xchg
lods
push
or
dec
mov
lock
cmp
outsb
shl
divb
dec
cmp
cmp
dec
adc
shrb
addb
dec
xchg
out
es
lret
pop
lods
imul
sbb
dec
add
insl
adcb
int3
cmp
push
cmp
test
dec
leave
hlt
sarl
imul
adc
push
movsb
jmp
xlat
adc
mulb
inc
dec
push
pusha
mov
into
push
jecxz
push
push
nop
addr16
pop
mov
xchg
sbb
test
sar
and
xor
adc
jmp
sub
adc
push
lock
and
dec
push
jmp
add
dec
lock
and
pop
pop
inc
dec
adc
imul
das
mov
mov
cltd
lcall
stos
xlat
dec
ret
popa
xchg
adcb
xlat
sbb
xchg
fxch
xchg
popf
fcmove
jns
mov
sub
jae
in
cmp
lods
push
jg
fistl
adc
jg
in
jbe
call
lea
test
push
sub
or
ret
out
jne
add
fimuls
bound
test
pop
jmp
dec
push
push
inc
pop
outsl
gs
jl
add
mov
dec
outsb
rorl
add
pop
daa
push
je
call
mov
adc
call
int
adc
push
popa
sbb
mov
add
xor
cmp
pop
cmp
inc
jo
push
std
xor
out
inc
add
jl
roll
cli
shlb
jb
or
dec
jl
cmp
jge
or
fxch
aad
pop
pushf
pop
inc
mov
mov
pushf
fisubrl
dec
aas
cmpl
out
push
add
enter
add
insl
push
inc
cld
inc
or
push
push
outsb
cltd
arpl
mov
inc
imul
pop
lahf
and
xor
or
push
js
mov
jbe
pop
cmp
cmp
cmp
pop
std
or
inc
ret
pop
in
pop
and
cmp
jge
inc
inc
out
std
mov
cmp
sbb
add
mov
inc
dec
sub
les
sbb
fsubrs
mov
aad
mov
inc
repz
inc
pop
int3
jns
push
xchg
add
mov
xchg
leave
sbb
or
adc
js
dec
pop
push
orl
popa
mov
xchg
cld
adc
cmp
je
ficoms
and
or
mov
int
xor
pop
sbb
mov
out
cltd
mov
es
mov
cmp
into
adc
sbb
insb
add
mov
push
jmp
test
or
imul
xchg
dec
push
fimull
add
fstpt
pop
and
lret
add
jl
shrl
mov
push
shr
cmp
push
dec
push
pop
sbb
mov
jae
lods
inc
mov
inc
adc
dec
xchg
mov
or
pop
adc
rorl
ss
add
mov
icebp
mov
or
sbb
dec
inc
fwait
ds
push
movsl
outsb
jle
adcl
xchg
push
clc
or
sub
mov
xchg
jmp
or
lret
out
out
movsl
ret
stos
cmc
imul
roll
xchg
loope
inc
test
push
lahf
test
dec
ret
cmp
pop
jecxz
jmp
stc
add
hlt
sub
nop
inc
add
mov
mov
push
les
les
cmpb
dec
and
and
sti
xchg
push
in
adcb
sbbb
push
jo
mov
out
fcmovbe
test
mov
sbb
adc
mov
push
mov
push
sub
sub
jle
or
pop
fmull
sahf
or
imul
fisubrs
pop
lea
jle
fisubl
sbb
lret
sbb
push
mov
inc
mov
loop
idivl
loopne
mov
adc
ret
pop
imul
or
xchg
mov
pusha
mov
ret
cmp
xor
mov
or
push
and
mov
in
imul
xor
or
ret
loopne
sbb
add
aaa
xchg
mov
mov
or
sbbl
popa
or
pop
aaa
cmp
xor
ret
fcoms
and
ret
dec
adc
sub
sbb
pop
sahf
jp
call
mov
lret
rclb
arpl
mov
cmp
add
mov
lds
test
add
adc
cmpsl
sub
jnp
jl
fwait
mov
lret
imul
sub
pop
cli
call
enter
stc
xchg
xorb
jle
sub
push
pushf
cs
incb
mov
aas
repnz
or
rcll
or
repz
add
rcr
push
test
or
rorl
pop
out
jmp
push
fs
aaa
pop
sub
push
and
and
cmpsl
mov
or
push
add
icebp
cmp
mov
repnz
or
hlt
push
rorb
or
ret
pop
je
subl
adc
push
es
aad
out
rorb
imul
or
adc
xchg
or
push
xorb
arpl
xor
mov
gs
call
insb
xchg
mov
adc
lret
std
jmp
rcll
xor
or
decb
or
push
sub
or
nop
jge
inc
pusha
pop
xor
push
cmp
dec
addr16
leave
subl
inc
les
dec
add
inc
sbb
and
xchg
inc
push
in
addr16
add
pushf
out
sarl
or
xchg
cmp
add
faddl
push
outsl
or
sub
outsb
jo
hlt
fisubl
mov
fisubl
sbb
insb
push
outsl
xor
xchg
scas
insb
mov
outsl
inc
int3
mov
loope
jmp
xor
cmpl
es
adc
push
sbb
enter
push
testl
push
cmp
push
daa
loop
aad
inc
daa
push
mov
rorb
adc
inc
sahf
mov
inc
fsubl
data16
ss
and
clc
clc
insb
inc
push
pop
icebp
push
inc
add
roll
clc
sub
lahf
rcrb
adc
loope
ret
popf
push
pusha
loopne
mov
sbbb
add
sbb
add
xor
aaa
or
push
pop
loop
mov
inc
hlt
or
cmovo
jmp
mov
fisttpl
sub
add
pop
xor
pop
push
jle
push
shl
pop
inc
or
mov
addr16
shrl
mov
mov
xor
push
movsb
push
pop
push
add
js
add
mov
mov
ret
lds
dec
push
sub
dec
loope
mov
jge
xor
or
fmuls
test
sub
or
or
pop
mov
fldl
push
push
cmp
cmp
push
pop
pushf
cmpsl
and
and
pop
je
arpl
test
lea
push
pop
xchg
ljmp
mov
fildl
jne
or
adc
rclb
adc
jmp
in
jmp
inc
xorl
pop
in
or
movsl
repnz
or
dec
push
add
jl
decl
pop
les
mov
fiaddl
addl
loopne
std
fldl
jnp
sub
es
lret
push
add
push
daa
js
rol
ss
pop
xchg
add
mov
and
adc
adc
addl
inc
add
cmp
mov
add
inc
inc
jo
push
movsb
inc
push
adc
dec
mov
push
jo
mov
push
icebp
or
es
push
nop
fcoml
mov
and
fsubrs
scas
add
mov
in
shrb
and
cwtl
fistps
jecxz
imul
and
jbe
js
jns
sub
push
mov
jbe
addl
mov
adc
pop
or
add
push
clc
cmp
adcl
adc
jp
push
adc
push
push
mov
aaa
adcb
sbb
inc
adc
jns
sub
andl
sbb
pusha
pop
aad
add
lods
int3
or
or
aaa
test
mov
cmpsl
cmc
pop
pop
call
cld
or
xor
adc
sub
or
add
cmp
int3
pop
sbb
adc
leave
and
test
lods
jecxz
dec
inc
mov
and
push
addl
add
cmp
lahf
les
mov
ja
imul
mov
mov
push
or
adc
adcl
fadd
xor
aaa
xor
lock
cmp
or
loopne
das
xchg
mov
ds
push
sbb
fisubrs
out
push
pop
out
push
cs
add
push
cmp
inc
jg
push
sbb
sub
mov
hlt
or
nop
push
jle
sub
or
sbb
mov
arpl
sub
sub
pop
pop
push
sbb
pop
or
jmp
sub
push
and
outsl
loop
cmp
sahf
sbb
adc
imul
xor
pop
fwait
push
ficomps
lods
push
push
imul
adc
mov
adc
push
xchg
lahf
nop
rolb
adc
cmp
loop
fisubs
cmc
push
sub
lock
jne
ficoms
jne
sub
adc
pop
test
push
push
pusha
sub
cld
add
inc
mov
sub
xor
lock
cmc
add
and
shlb
dec
pusha
pop
sbb
adc
adc
xor
imul
dec
add
xor
lea
mov
inc
subb
in
outsb
rcrb
sbb
rclb
testl
sbb
xchg
das
jbe
cmp
and
call
into
clc
push
sbb
and
cmpl
sbb
cmp
lahf
push
cld
popa
cmp
pcmpeqw
dec
add
adc
add
inc
mov
iret
xchg
aaa
pop
enter
ss
ss
int
cmp
sub
int3
push
jb
adc
loopne
popf
cmpl
push
js
rcll
test
or
ss
xor
loopne
dec
cmpb
rolb
dec
pop
add
jno
andl
pop
inc
orl
push
cmp
push
push
mov
je
inc
or
jg
outsl
pop
or
xor
dec
fcomi
dec
sarb
push
jb
fbld
je
cmc
shl
or
das
insb
inc
adc
lret
fs
pusha
add
sub
add
inc
mov
int
fcmovnu
popa
dec
sbb
add
dec
inc
out
rorl
push
adc
ds
jmp
and
xchg
push
mov
sub
jg
ret
add
andb
sub
sarb
xchg
lods
loopne
adc
sbb
rclb
push
clc
pop
pop
add
xchg
xor
adc
sbb
es
add
mov
shll
out
mov
mov
and
xlat
ja
add
mov
push
leave
pop
imul
in
ja
and
dec
loope
ret
enter
xor
sbb
lock
add
mov
and
inc
sbb
inc
lds
aam
cld
andb
sarb
lock
push
sub
lahf
mov
out
in
cmp
shlb
jg
fisubrl
add
jns
mov
adc
add
xchg
xchg
ja
or
pusha
ss
mov
push
jl
add
adc
jo
push
push
je
cmp
jl
mov
lods
or
lcall
call
adc
jle
xchg
sub
fs
ja
arpl
fimuls
movl
enter
rcrl
cs
add
ficoml
push
rorb
cmc
test
js
xchg
mov
insb
and
push
aaa
mov
cmp
and
flds
sbb
dec
adc
sub
xchg
add
add
or
icebp
cmp
sbb
push
test
jmp
fwait
js
xor
mov
pop
mov
js
xchg
add
test
lret
lret
shlb
aam
adc
insb
dec
and
push
lahf
roll
jnp
adc
adc
dec
add
lea
loope
ja
and
add
xchg
jge
push
push
xchg
and
push
inc
cli
mov
sub
push
js
cmp
pop
aad
cmp
push
push
xchg
pop
and
mov
inc
adc
adc
div
mov
add
cmp
and
cmp
and
adc
mov
and
cmp
jle
cmp
test
clc
outsb
push
imul
xchg
or
mov
lods
out
xor
jnp
sub
xor
pop
in
pop
mov
mov
adc
mov
arpl
or
push
and
mov
insb
mov
xchg
inc
adc
jns
cmp
clc
adc
imul
int
inc
pushf
cmc
test
lock
sbbb
or
dec
adcl
add
cmp
lahf
mov
pcmpeqw
sub
pop
fwait
cli
push
idivl
in
nop
pushf
and
push
inc
cmc
out
adc
pop
sbb
dec
inc
sub
sbbl
imul
add
and
incb
test
xchg
xor
adc
adc
imul
sub
cld
mov
or
mov
mov
pop
mov
mov
lock
mov
data16
shlb
into
mov
add
and
xor
xor
cli
pop
xchg
in
sbb
mov
jno
mov
dec
je
dec
jne
dec
sbb
dec
xor
aas
xchg
cmp
add
push
push
test
pop
pop
nopl
push
cwtl
inc
and
ss
aaa
mov
jecxz
or
cmpsb
rol
int3
dec
sarl
and
rcr
pop
adc
lods
jg
jmp
inc
sbb
add
adc
or
inc
pop
loopne
cmpl
dec
adcb
loope
gs
xchg
or
push
outsl
sbb
cmp
lea
out
cmpsb
pop
lock
or
add
scas
add
xchg
rolb
jb
lea
ljmp
cmp
ret
fcomi
sub
push
in
sbb
pop
mov
into
push
lcall
ret
dec
and
jo
testb
out
push
push
xor
in
xor
push
test
push
pop
add
inc
or
sbb
shll
xchg
or
or
shrl
ret
shrb
cwtl
lret
mov
or
pop
pop
cmp
pop
jl
fmull
add
out
out
pop
or
fisttps
push
add
add
pop
in
mov
rolb
cmp
test
in
inc
nop
mov
xchg
dec
jl
mov
jge
mov
ja
sbb
push
jl
xlat
cwtl
xor
jg
lea
pop
jno
test
aaa
cmp
lea
rclb
push
ret
imul
add
pop
mov
iret
jmp
std
inc
sub
xlat
sub
jnp
sahf
add
test
sub
or
and
adc
lock
int3
cmp
test
add
sub
lds
sub
adc
lods
mov
addr16
or
das
xchg
dec
jb
scas
lcall
dec
mov
call
mov
cmpsb
jno
insl
je
gs
leave
rclb
sbb
mov
mov
lret
cmp
add
mov
repz
not
sarb
icebp
rolb
dec
pop
and
mov
jp
or
jbe
xor
inc
pop
ret
ret
push
pop
mov
lahf
push
push
addl
nop
cmp
pop
mov
dec
sub
aaa
inc
or
push
loope
adc
push
and
out
sub
in
add
add
xor
push
push
xor
adc
bound
mov
add
cmp
xchg
sub
inc
adc
xchg
xchg
daa
inc
cmp
push
adcb
hlt
lea
adc
roll
adc
inc
movups
push
xor
fadds
mov
pop
dec
mov
js
add
inc
inc
imul
xor
jle
hlt
jmp
aad
std
cmpsb
fisttpll
cmp
sbb
mov
fnstcw
dec
adc
cmp
and
notl
rolb
push
inc
push
inc
addb
jmp
pop
adc
sbb
jbe
or
and
addl
or
sbb
in
sbb
jp
mov
mov
and
mov
mov
cli
add
add
push
movl
push
pushf
in
or
dec
inc
mov
or
cld
add
jo
sub
loopne
jg
add
lock
mov
cmpsb
daa
push
add
cmp
les
fisubrs
or
ret
xor
push
dec
pushf
jo
mov
aam
adc
pop
adc
jmp
mov
adc
pop
cs
mov
xchg
push
add
fdivs
jne
xchg
mov
rclb
add
mov
nop
adc
popl
lret
xor
pop
inc
std
insb
icebp
xor
dec
sub
pop
jl
lds
or
mov
cld
stc
sti
adc
push
outsl
jne
pop
bound
sbb
xor
addb
outsl
push
cmp
sbb
fisubl
pop
hlt
sahf
subb
pop
or
addr16
ret
jp
dec
add
movaps
dec
adcb
push
dec
jle
push
cmpl
push
push
rcrb
and
rclb
scas
inc
push
test
ret
push
pop
and
mov
popa
outsl
lock
mov
inc
xor
es
aas
xchg
outsb
decb
out
ficoml
cmp
out
decb
add
inc
xchg
or
inc
xlat
or
aad
ljmp
cmp
jne
shrb
je
lock
arpl
and
mov
sbb
or
cmp
jne
cmpb
cs
push
mov
push
push
push
jmp
add
js
xchg
outsb
add
filds
sbbb
cmpsl
insl
mov
and
in
cmp
es
add
lods
and
cmpsl
in
sub
fists
fwait
clc
inc
mov
add
mov
jbe
and
das
repnz
mov
push
and
sbb
and
daa
mov
xchg
movsb
push
push
insl
ret
sub
mov
push
mov
sahf
idivl
or
mov
es
sahf
out
iret
mov
mov
bound
into
add
add
and
mov
or
cmpb
add
or
or
or
mov
add
ud0
add
push
xor
and
cmp
je
mov
push
xor
sub
mov
mov
stos
mov
inc
loop
das
add
std
adc
mov
mov
mov
add
mov
push
add
jnp
rclb
arpl
sahf
or
or
dec
push
out
or
mov
or
mov
lock
add
xchg
ds
arpl
dec
add
push
sbb
cmp
setge
adc
enter
add
fstpl
mov
int3
add
inc
sbb
leave
rcll
mulb
dec
addl
clc
dec
xor
jmp
push
mov
inc
jge
push
pop
fcoml
and
outsl
lsl
daa
sbb
cltd
cmpsl
insl
sbb
push
or
pop
ljmp
push
ja
mov
pop
pop
fidivrs
xor
add
dec
and
add
add
movsl
in
jnp
jp
xchg
pop
and
push
into
ret
scas
test
scas
stos
add
pusha
outsl
mov
dec
xchg
add
mov
loop
hlt
mov
inc
adc
xor
inc
cmp
adc
dec
cs
mov
cmp
pop
xchg
push
bound
pop
xchg
and
and
inc
nop
nop
jne
push
xor
mov
adc
dec
sbb
subl
pop
jge
mov
repnz
push
lret
or
dec
inc
enter
inc
cmp
push
in
pop
inc
call
cltd
pop
lret
dec
dec
shlb
push
fiadds
cmpsl
pusha
push
cmp
in
or
lret
xlat
add
jp
pop
insl
ret
jae
mov
inc
stc
xchg
pop
cmpl
in
sbb
das
es
sub
rolb
inc
sbb
pop
cmp
je
inc
inc
lretw
mov
push
mov
mov
rolb
push
lods
inc
sbb
and
mov
scas
push
pop
lea
mov
lods
dec
outsl
cltd
add
cmp
xor
outsb
xchg
adc
jns
nop
mov
nop
inc
sbb
inc
mov
lcall
pop
add
inc
mov
cmp
inc
inc
dec
cmpsb
lods
pop
fdivs
lea
mov
or
xorl
rcrb
adc
mov
mov
xor
push
aas
push
mov
das
mov
inc
scas
xor
sbb
add
ret
add
inc
ljmp
mov
subl
xor
adc
pop
repnz
sbb
andl
jl
xorps
pop
jmp
or
daa
mov
sub
sti
add
xchg
lock
das
cmp
and
inc
sbb
enter
dec
xchg
xor
sbb
push
lods
or
fisubrl
or
and
ss
xchg
jbe
pop
pop
mov
cmp
sub
orb
add
mov
xchg
cmp
sbb
aam
or
ds
lock
xor
cmpsb
mov
pop
fcomp
jne
in
bound
inc
inc
cmp
mov
inc
inc
adc
mov
ret
mov
jle
xchg
lods
or
in
push
lea
xchg
daa
pop
or
mov
inc
add
ljmp
adc
add
sub
into
ficoml
fimull
and
push
pop
lret
dec
hlt
adc
adc
push
jb
insb
or
test
fs
mov
jb
jle
nop
sbb
pop
les
or
call
xchg
cmp
sbb
into
sbb
pshufw
sub
test
mov
jbe
adc
pop
clc
js
mov
dec
jl
or
add
cli
or
daa
lret
icebp
push
lock
je
cmp
pop
and
test
add
sbb
pop
test
adc
scas
adc
inc
cmovs
movsl
xorb
dec
dec
dec
je
pop
adc
das
push
int
dec
sbb
sub
clc
sbb
sbb
adc
jnp
frstor
fimull
ds
cmp
lcall
in
dec
sbb
test
shlb
cmp
pop
xchg
mov
ljmp
sbbb
mov
inc
sarl
aas
sub
scas
jbe
jecxz
or
mov
or
fldl
popa
adc
inc
or
sbbb
rclb
pushf
repz
xor
test
ret
pop
xchg
dec
nop
in
out
pusha
lock
and
push
jge
add
mov
inc
scas
sbb
add
rorb
fsubr
push
inc
mov
pop
shl
pushf
sub
sbb
jge
cmp
mov
jg
jecxz
jl
add
or
mov
rorb
hlt
outsb
jmp
inc
dec
jne
pop
sub
sbb
sarl
push
or
mov
adc
inc
jb
push
movsb
fistps
mov
out
mov
push
mov
and
xor
xchg
or
and
mov
test
bound
push
mov
pop
add
adc
inc
mov
sbb
adc
pop
nop
add
inc
aad
dec
inc
push
mov
or
jmp
inc
pop
sbb
and
push
add
lahf
sub
cld
push
arpl
sub
jge
movsl
xchg
cmp
decb
adc
jns
mov
insl
jle
add
adc
or
dec
adc
sbb
fsts
adc
pop
andb
cwtl
jge
mov
or
lahf
pop
mov
dec
pop
ret
lahf
inc
iret
test
sbb
lods
jp
mov
lods
and
cmp
jne
push
xchg
or
gs
cmpsb
pop
ds
sbb
xchg
sub
or
inc
adc
inc
adc
lret
sbbb
sbb
inc
and
mov
or
pop
add
push
mov
popf
cmpsb
pop
jno
mov
or
ret
or
test
inc
testb
xchg
xchg
mov
and
sbbb
sahf
and
loop
fs
adc
push
cmp
rclb
aam
and
or
insb
jmp
pop
pop
dec
into
inc
sbbl
shrb
adc
sub
sarl
jmp
test
xor
nop
push
stos
add
mov
sub
jbe
pop
add
sub
jne
lea
mov
addb
dec
imul
mov
xor
leave
and
js
jae
add
loope
xchg
repz
and
dec
sbb
in
bound
shrl
mov
sbb
sub
lock
cmp
jbe
or
push
pusha
jnp
mov
dec
and
out
shlb
jae
pop
xor
inc
je
or
mov
jns
xor
push
rclb
loope
jge
cli
mov
fadd
jne
pop
xchg
xor
mov
and
repz
sub
and
adc
adc
iret
insb
or
stos
push
js
mov
pop
pop
or
mov
xchg
adc
xchg
pop
jbe
ja
outsl
or
loope
loope
outsb
add
leave
gs
es
adc
pop
add
setns
lea
lea
mov
cmp
add
je
fdivl
xchg
mov
or
jle
fidivrl
pop
jns
and
add
insb
or
cli
cmc
adc
cli
nop
add
and
xchg
shll
push
push
bound
popa
cld
das
jb
into
gs
imul
xor
outsb
mov
ficomps
xchg
mov
add
loop
incl
ret
dec
jne
cmp
jb
xor
inc
lock
jecxz
inc
and
xor
jbe
sbb
push
loopne
xchg
dec
and
and
add
stos
sbb
add
add
pop
imul
jo
jno
push
jmp
lods
es
and
sub
and
adc
sub
cltd
or
insl
js
push
inc
add
inc
push
call
sub
movsl
cltd
or
rorl
imul
jne
dec
inc
gs
dec
in
sbb
mov
push
fildl
adc
cli
push
push
xchg
jl
lret
jmp
adc
xor
sub
xorl
or
popa
call
rorb
jbe
inc
pop
cmp
call
jmp
sbb
push
adc
fcom
xlat
lea
pushf
adc
dec
lret
cmp
lea
dec
push
and
mov
shll
sub
dec
adc
xchg
andb
xor
inc
test
xchg
jo
push
add
pop
iret
rorl
dec
pusha
lea
aam
inc
and
mov
push
and
xor
inc
dec
sub
mov
adc
fistpl
sbb
sbb
push
cmp
cmp
ja
mov
push
jp
pop
sbb
sbb
mov
or
add
fnstenv
mov
mov
pop
push
inc
movsb
add
leave
inc
dec
std
cmp
xchg
outsb
sbb
mov
cmp
mov
outsl
inc
inc
dec
push
push
mov
subl
pop
mov
or
mov
mov
jle
add
sbb
sti
or
clc
sub
outsb
test
add
mov
in
cmp
jb
xchg
icebp
and
jmp
mov
repz
adcl
xor
loope
add
inc
popa
sarl
and
cmp
mov
cmp
xchg
add
xchg
sub
ja
push
fdivrl
push
mov
push
loope
loop
insb
jno
ljmp
inc
test
and
je
inc
sub
cmpsl
mov
mov
lock
xor
push
push
lea
push
sbb
pop
test
mov
mov
loop
add
cltd
ret
out
mov
jae
mov
lahf
sub
outsb
pop
leave
and
jmp
xchg
jl
pop
lds
lahf
std
jae
push
cmp
shlb
lahf
fcmovnu
outsb
sub
pushf
xor
sub
dec
enter
push
std
pop
pop
xor
pop
fistpl
push
push
test
xor
mov
inc
push
sub
xor
jmp
push
fcoms
jns
xchg
cmp
mov
add
int3
leave
mov
xor
or
js
in
inc
lods
popa
mov
inc
xor
xchg
hlt
sbb
pop
sub
dec
xor
mov
adc
jo
sub
jne
inc
dec
in
ret
push
push
mov
mov
inc
mov
cmp
push
add
xor
lds
mov
shlb
aaa
or
and
jne
repnz
loopne
xor
and
aas
std
xor
mov
call
repz
jl
mov
push
stos
loopne
rcrb
inc
xor
adc
je
add
sahf
dec
or
or
or
lahf
loope
sbbb
sbb
insb
pop
jg
mov
fcompl
push
out
cmp
cwtl
daa
jle
scas
int3
xchg
adc
dec
xchg
andl
sbb
cli
aas
push
shld
pusha
or
inc
sub
sbb
push
sub
cmpsl
lds
push
scas
adc
adc
jo
fisubl
add
inc
je
scas
inc
jmp
bound
sub
popf
test
bound
pop
dec
inc
cmp
arpl
add
pusha
push
cmp
rcrl
test
or
pop
hlt
ds
adc
mov
ret
rcr
out
or
clc
fistpl
cli
mov
or
shl
cmp
jg
mov
sahf
xor
call
daa
out
mov
pop
add
pop
jl
mov
aaa
outsb
adc
push
cmp
push
sbb
dec
jecxz
lods
insl
imul
and
scas
push
in
mov
pop
test
add
or
call
sub
or
add
loopne
repnz
dec
pop
fimuls
in
into
outsb
js
sbb
inc
test
cmp
adc
cmp
test
push
lahf
hlt
cmp
cmp
adc
xlat
arpl
ret
push
adc
or
jnp
xchg
pop
sahf
fs
mov
in
dec
mov
subb
add
pop
cmp
jne
cmpl
jne
adc
jp
inc
mov
jns
and
jns
sbb
aas
mov
and
jg
cltd
jne
xor
jg
cmp
jne
and
fs
rol
xchg
xor
ror
pop
outsb
or
cmp
push
jl
pop
push
pop
sbb
into
inc
mov
xchg
dec
sbb
test
in
cmp
adc
mov
sbb
mov
pushf
cltd
shlb
shr
ret
push
jb
adc
mov
scas
mov
dec
inc
jne
testb
and
je
sub
push
pushf
cmpsb
inc
imul
mov
mov
dec
sahf
je
pusha
pop
adc
dec
out
jbe
sbb
sti
fwait
in
pop
enter
lods
mov
adc
insb
jne
push
ja
outsb
aaa
push
sbb
test
ffreep
lret
or
sbbb
mov
jl
pop
je
subb
out
in
sbb
adc
loopne
add
sub
mov
jmp
mull
pop
popa
jl
add
int
dec
mov
jp
out
outsl
push
cmpsl
fiaddl
mov
push
jecxz
ja
das
xchg
int3
sbb
lods
push
lods
mov
iret
je
orl
mov
int3
jno
cli
and
inc
add
enter
nop
int3
dec
lcall
sbb
cmp
xor
test
add
mov
xor
sub
mov
loopne
fimull
add
push
dec
or
sub
mov
add
inc
daa
sti
push
or
inc
ret
pusha
pop
mov
addr16
pop
push
add
cs
add
sbb
sub
lahf
aaa
pusha
and
push
jbe
cwtl
popl
fcmovnu
cmp
fisttpll
movsb
adc
xchg
sbb
ljmp
sbb
cmp
pop
sbb
dec
sbb
jecxz
add
arpl
jle
inc
imul
loop
adc
adc
adc
pop
lods
pop
iret
lcall
pop
rcl
out
or
stos
push
sbb
adc
xchg
dec
andb
mov
les
fs
jae
sbb
popa
and
sub
leave
push
in
inc
xchg
jecxz
notl
lods
and
test
fs
push
and
push
lret
sbb
push
fbstp
mov
sub
sbb
sub
or
movsl
pop
mov
mov
xchg
jg
and
rcrl
mov
leave
push
mov
fadds
decb
cmp
dec
test
mov
mov
jmp
rcrb
push
loop
jne
dec
mov
cmpsl
push
lods
insl
mov
popf
push
pop
pop
push
xor
or
int
mov
ret
cmp
jg
ret
push
and
inc
xor
cmpl
js
imul
es
dec
call
add
inc
outsb
roll
xchg
pop
inc
leave
sub
adc
daa
sub
jle
sbb
aam
enter
adc
push
les
ret
jecxz
std
in
ss
shrb
js
xor
pop
cwtl
jo
and
push
sbb
clc
push
mov
or
add
lea
pusha
outsb
rorb
ffreep
cmp
xchg
leave
nop
push
adc
in
xchg
mov
bnd
inc
cmp
push
test
xor
pop
adc
xchg
add
addl
ljmp
std
cmp
insl
jae
je
mov
jnp
push
cmp
cld
or
xor
cld
jbe
adc
push
inc
mov
jg
mov
xor
sub
je
cmpl
adc
sahf
mov
xor
inc
rclb
pop
cmp
nop
shlb
and
push
int
je
mov
xchg
pop
shll
xor
adc
dec
pushf
adc
and
xchg
add
and
fildl
ret
out
pop
push
into
sysenter
insl
and
decl
xchg
add
lods
push
sub
rcrl
inc
popa
xor
inc
clts
sbb
fimull
subb
mov
and
mov
mov
movsb
xlat
or
mulb
sub
or
cwtl
cmp
dec
das
mov
mov
mov
mov
inc
mov
test
push
pop
lea
mov
pop
lods
or
cmp
sub
stos
clc
sub
mov
sub
mov
in
orl
xor
xor
popa
push
mov
push
and
das
or
in
jne
mov
add
xor
push
addr16
xchg
add
daa
xchg
and
xor
test
shrl
adc
push
mov
xchg
sahf
xchg
pop
fsubr
or
fadd
loope
ss
lcall
jo
add
and
pop
sub
push
insb
ss
notl
add
or
dec
lods
pop
add
pusha
adc
adc
xchg
and
in
sub
sbb
or
add
pop
push
dec
mov
movb
jp
mov
mov
in
push
dec
xchg
faddl
lds
inc
inc
adc
xchg
cmp
enter
pusha
rcrl
rorb
xorb
xor
sub
sbbl
mov
mov
push
mov
jne
push
pop
inc
sbb
jb
xchg
push
fisubs
mov
inc
xchg
dec
arpl
aad
loope
aad
push
fdiv
inc
outsb
add
loopne
jae
fcmovb
adc
ret
push
stos
mov
rorl
scas
sub
and
and
pusha
jl
mov
or
mov
jo
cs
and
cltd
out
pusha
pop
mov
lods
xor
or
andb
dec
push
add
add
call
clc
inc
mov
mov
ss
pop
mov
call
jo
sarb
jbe
sti
sub
sub
sub
sub
add
sbb
xor
inc
add
sbb
test
mov
insb
inc
or
test
mov
jmp
mov
lock
or
into
cmp
push
ucomiss
loope
cs
out
test
sahf
or
jle
push
fmuls
pusha
push
jo
sbb
push
push
test
aam
push
push
idivl
cmp
mov
lret
js
jmp
dec
jmp
or
mov
cmp
push
insl
aas
test
test
loopne
mov
jno
and
cmc
sbb
push
shlb
imul
and
das
add
adc
rorl
pusha
lods
mov
inc
add
push
rcrl
xchg
adc
in
lcall
pop
jbe
dec
sbb
inc
or
lret
jecxz
je
lahf
call
sub
mov
les
pop
jle
je
nop
adc
inc
mov
push
and
sbb
out
cltd
and
mov
adc
aam
add
xchg
addb
mov
xor
loop
fisttps
push
lahf
sbb
adc
xor
adc
dec
push
dec
sub
and
jbe
add
shrb
pusha
movsb
add
push
pop
push
movl
adc
push
rol
psrlq
xor
xchg
mov
mov
lock
xchg
push
dec
sub
xchg
lea
dec
imul
push
dec
or
push
jo
and
lea
push
outsb
dec
adc
lock
pop
adc
xchg
sub
daa
nop
das
test
pop
push
inc
mov
push
push
lcall
dec
push
xorb
add
cmp
add
add
jbe
jmp
jge
jmp
call
ja
pop
or
dec
and
nopl
inc
push
in
enter
stos
cmp
sbbl
das
xchg
arpl
or
cmp
pop
call
xor
cmpsl
xor
insl
icebp
cli
dec
sub
xchg
mov
stos
xchg
popa
cmp
inc
jae
push
xor
adc
or
loopne
inc
in
add
ret
add
add
or
jmp
ljmp
jl
cmp
cmc
prefetch
or
dec
or
loopne
lods
inc
sub
lahf
mov
push
inc
dec
push
push
test
add
call
nop
cli
cmp
fld
xor
jp
inc
fdivr
dec
jne
rorb
mov
ja
out
xor
ljmp
ss
repz
sub
push
shrl
or
aas
and
testl
dec
jno
jle
repnz
push
mov
lods
fldcw
push
pop
mov
inc
inc
mov
sub
pop
mov
mov
inc
push
or
ret
lods
mov
ret
mov
sbb
xor
add
pop
int3
pop
jg
add
push
ret
lret
dec
hlt
or
pop
pop
scas
sub
mov
adc
push
js
push
dec
inc
cli
fs
dec
divb
xchg
stc
adc
pushf
mov
inc
nop
sbb
nop
fmuls
ds
xor
xor
push
cmp
cmp
sbb
xor
jge
push
pop
ret
mov
arpl
push
bound
push
xor
cmp
test
pop
sbb
add
enter
sbb
outsb
add
or
pop
imul
mov
jle
add
add
jbe
xorl
push
mov
inc
mov
loope
icebp
sbb
mov
mov
and
shr
shrb
cmp
lock
push
inc
push
xchg
add
and
mov
lods
fldenv
sbbb
arpl
fdivr
rclb
jae
cmpl
xor
leave
dec
dec
dec
daa
lods
jecxz
fsubrs
xor
dec
xor
cli
mov
ss
mov
cmp
adc
and
ja
or
sbb
jmp
cmpsb
fidivs
fsubs
movsb
sbb
js
imul
int3
xchg
xchg
in
lret
imul
sbb
xchg
lds
movsl
inc
jp
jmp
ret
or
lock
ret
fdivl
mov
shl
test
pop
inc
push
push
loop
push
imul
inc
les
pop
rcll
sahf
in
jbe
cmpsb
xor
mov
sarb
add
pushf
mov
cmp
xchg
lds
xlat
push
fistpll
jb
in
inc
cwtl
adc
adc
push
ficomps
cmpb
cltd
insb
dec
sbb
andb
mov
jl
add
inc
xor
adcb
or
xchg
lcall
xor
cwtl
xor
xchg
mov
jno
adc
rol
lahf
cmp
loope
and
mov
jo
xor
xchg
enter
xor
int
push
inc
jo
jbe,pn
xchg
mov
inc
jns
enter
repnz
inc
call
xchg
or
and
adc
dec
repz
mov
adc
mov
loop
popl
mov
inc
jl
pop
or
xchg
mov
cmpb
cs
xchg
fisubrl
out
xor
jns
push
inc
mov
mov
or
xor
jno
addr16
adc
sub
inc
mov
inc
dec
inc
mov
sbb
mov
mov
dec
xor
inc
push
add
cmp
dec
add
std
pop
frstor
ss
scas
mov
lahf
xor
les
push
xchg
add
xor
ja
pop
mov
mov
xchg
scas
xor
test
mov
dec
cmp
push
jae
pusha
test
addl
lahf
inc
outsl
dec
jge
jo
pusha
push
or
pop
jo
cmpsl
mov
ss
mov
cld
add
or
lock
sar
cmp
shr
imul
cmp
lcall
aam
jo
icebp
idiv
xchg
jo
test
mov
adc
int3
test
mov
and
lea
adc
jo
faddl
call
test
xchg
jo
mov
cmp
or
mov
repnz
fimuls
adc
and
add
sbb
pop
or
es
xorb
sti
dec
pop
sbb
ret
mov
mov
mov
push
in
dec
add
xchg
jbe
mov
sub
lret
xchg
dec
out
sahf
xor
push
dec
push
sub
lock
push
push
fcomp
adc
add
dec
xor
mov
imul
fwait
dec
lea
inc
je
call
fs
cmp
push
add
rcl
dec
push
sub
inc
xor
mov
mov
into
shlb
xchg
fidivrl
adc
fldenv
sbb
and
mov
scas
sahf
dec
lea
mov
push
insb
fadd
and
ficompl
mov
lds
add
cltd
shl
ret
ret
add
dec
shl
dec
mov
inc
jmp
sub
addr16
push
add
out
inc
dec
data16
lret
lock
or
ret
jb
addr16
mov
push
jl
test
in
push
dec
dec
or
mov
jno
in
je
add
push
lock
or
int3
add
pop
push
cmp
in
adc
stos
subb
imul
dec
lods
mov
jl
add
or
push
lds
cmp
sbb
jns
cmp
mov
lahf
mov
xor
or
or
loope
sbb
cwtl
jmp
and
sub
push
push
call
dec
out
sbb
xchg
add
sub
jbe
scas
mov
jne
mov
into
add
enter
adc
int3
stos
pop
adc
cmp
fs
pop
and
aam
in
push
ds
pop
addb
or
add
int
dec
clc
mov
inc
xor
cmc
test
mov
les
lods
xchg
push
and
sbb
je
daa
push
sub
xchg
mov
lds
cmp
push
sbb
sahf
ss
cmp
lcall
or
sbb
push
xchg
sbb
adc
mov
push
loopne
rolb
subb
icebp
or
addr16
xor
mov
xor
ret
ja
adc
int
add
mov
cli
and
imul
jle
movb
scas
sahf
andb
jl
mov
push
sub
sbb
test
push
insb
add
or
cs
cmp
je
mov
loope
pop
jne
xor
negb
cmpb
xchg
mov
mov
add
mov
sbbb
es
add
lahf
inc
incl
inc
xor
and
fwait
clc
int3
movl
add
cmp
pop
aad
jno
lods
mov
xchg
sub
bswap
lods
xchg
cwtl
addb
movsb
dec
sub
cmp
lea
xchg
sbb
shl
fbld
and
and
repz
or
mov
mov
adc
jne
ja
xchg
cmpsl
lods
or
adc
sbb
xor
sub
jle
and
and
or
mov
adc
lds
adc
std
sbb
mov
movl
jbe
adc
xor
lods
div
inc
and
pop
rorb
testb
pusha
sbb
jg
or
rcr
fiaddl
lods
test
mov
scas
mov
fwait
sbb
rclb
dec
lcall
push
xchg
jle
xor
sahf
ffree
mov
lret
sbb
mov
fcoms
pushf
aas
mov
shrb
adc
aad
or
bound
or
sub
and
cmp
nop
rorl
loop
xchg
push
add
lret
ret
cwtl
inc
adcb
in
and
mov
pop
shl
and
push
pop
outsl
lods
mov
mov
jmp
inc
shl
xchg
pop
xchg
fwait
je
mov
ljmp
sar
popf
in
or
inc
or
push
ljmp
dec
es
xor
cmp
bound
stos
bound
addl
mov
xlat
adc
rcrb
adc
lds
lahf
sub
mov
mov
xchg
insb
mov
or
sub
sub
mov
clc
lret
ret
aas
and
loopne
loop
jge
jg
shlb
and
outsb
aas
jne
or
push
mov
int3
or
push
mov
or
popa
bound
dec
dec
pop
sub
push
push
or
inc
ljmp
movsl
je
mov
xor
sti
sahf
les
jg
or
mov
inc
mov
sbb
push
jl
shl
mov
adc
xchg
mov
mov
and
pop
push
sbb
movsl
shlb
mov
inc
adc
xchg
dec
clc
add
rclb
pop
mov
out
hlt
xchg
incl
stc
adc
adc
sahf
ja
cmpl
dec
pop
sti
sub
inc
pusha
xor
inc
insb
and
xchg
sub
popf
outsb
add
cmp
xor
or
and
push
or
mov
aas
and
das
xor
xor
pop
aam
icebp
fcomp
outsl
dec
xchg
scas
out
jb
jno
sahf
or
dec
std
xor
jno
sti
lods
punpckhbw
lahf
xor
je
orl
in
jge
ficoms
test
inc
xchg
cmp
and
pop
mov
adc
pusha
sub
cli
std
or
test
int
xchg
out
sub
mov
dec
or
jmp
or
jecxz
sbb
mov
mov
outsl
adc
int
jnp
fimuls
mov
or
inc
and
mov
cmp
icebp
pop
add
mov
fists
enter
or
jo
jg
mov
dec
and
cmp
pop
xor
mov
add
jmp
or
loop
inc
xor
xor
loopne
dec
push
inc
cmpsb
mov
jg
xor
xor
ret
fxch
pop
nop
add
seto
cltd
sbb
std
jg
andb
out
je
jb
loope
add
daa
mov
jp
lods
ret
call
xor
jmp
pminsw
sbb
mov
inc
sbb
shr
nop
inc
enter
and
std
cmpsb
nop
sub
cld
sub
pop
cmp
or
cmpb
insb
and
add
sbb
ljmp
test
sbb
inc
xchg
xchg
bnd
scas
dec
pushf
cmp
test
jb
mov
stc
addl
sbb
push
inc
xor
sbb
mov
lods
dec
adc
sub
and
cmp
lahf
loope
xchg
cmp
fcmovnb
cltd
and
push
pop
add
add
rcrb
add
mov
inc
mov
insb
jae
dec
fld1
insb
mov
xchg
add
scas
movsb
add
xchg
add
xor
mov
mov
out
rorb
lock
test
add
bound
and
stos
aam
scas
mov
shrb
dec
adc
popl
fnstsw
jge
aaa
sbb
nop
pop
out
sub
fbstp
dec
hlt
ret
push
sti
push
add
ret
loop
add
mov
cmp
loop
jmp
mov
cmp
insl
lock
add
mov
mov
out
je
sub
adc
add
or
xor
inc
out
mov
jo
daa
add
add
sbb
mov
add
cmp
xlat
es
push
lret
movd
outsb
loop
fdivrs
lea
mov
sti
pusha
fstl
pop
adc
notl
pop
insl
movsl
sbb
pmaxsw
jle
or
sub
sbb
jns
jae
les
push
xor
or
je
and
xor
mov
mov
jp
in
test
fcompl
mov
mov
rcll
push
sub
mov
lcall
sub
sbbb
inc
je
xchg
outsl
test
push
inc
jne
pop
inc
hlt
ret
sub
or
add
push
cmp
in
sbb
daa
pushf
xor
sbb
or
sbb
sub
pop
ss
jno
cld
test
xor
mov
testl
std
and
push
add
lea
inc
pop
cmp
pop
push
and
or
loopne
xchg
test
mov
push
fadds
das
mov
mov
lea
outsl
scas
stos
pop
pop
pop
pop
cmp
cmp
dec
lock
pop
pop
or
adc
mov
lea
dec
sub
sub
in
push
sbb
leave
push
inc
push
pop
ror
test
push
negb
shlb
notl
mov
inc
sti
es
sub
lock
xor
ret
fstps
mov
sbb
inc
shl
push
mov
shlb
inc
or
xchg
loope
sub
add
or
outsl
add
sbb
jp
mov
mov
jno
dec
sbb
inc
ds
in
mov
inc
mov
sub
nop
arpl
sub
loopne
and
cltd
lea
adcl
jmp
sbb
fsubs
xor
xorb
adc
adc
aam
cmovnp
lock
aam
jbe
cmp
int3
movsb
pop
xchg
stos
inc
aaa
rclb
sub
push
cmp
xlat
cmp
imul
and
or
and
cmp
cs
push
jg
and
out
sub
mov
sbb
orl
repnz
jae
mov
call
pop
add
jp
sub
sbb
and
jne
movl
rorb
stos
push
lock
mov
sti
push
add
jne
adc
xor
jp
push
loop
jmp
adc
jp
out
je
aad
mov
test
xor
adc
lock
push
imul
add
dec
sbb
aad
inc
ret
jmp
push
xchg
cmp
push
xchg
loop
xchg
and
sbb
call
inc
mov
xlat
nop
jecxz
mov
push
shll
xchg
scas
popa
shl
loopne
sub
inc
rcll
push
sbb
add
and
call
in
adc
xor
aas
aaa
inc
mov
push
sub
and
push
stos
jno
xchg
lcall
add
lods
jge
inc
cwtl
movsl
xor
xchg
xchg
and
and
mov
sub
or
or
insb
jl
movsl
add
loope
mov
shll
sbb
push
pop
inc
sbb
je
dec
and
and
or
nop
dec
pop
dec
les
je
ljmp
jo
dec
mov
pusha
pop
mov
sub
jns
mov
aam
sub
push
or
push
xchg
or
enter
xchg
out
rorb
popf
add
jns
testb
je
cmp
mov
shrl
dec
mov
clc
test
sbb
std
push
adc
cmp
call
rclb
mov
xlat
dec
aad
movsb
push
outsl
and
jp
inc
cmpsb
jp
sar
and
push
mov
jns
mov
sub
mov
xor
call
jmp
pop
jecxz
in
in
sub
and
cltd
loope
inc
jmp
pop
orl
and
inc
cmc
mov
sub
mov
cmp
movsl
mov
outsb
lods
aad
xor
int3
or
inc
xor
lret
or
or
sbb
push
sub
adcb
icebp
add
adc
xchg
test
xlat
adc
jp
test
jne
int3
pop
test
shlb
int3
adc
push
shl
insb
xchg
adc
mov
stc
inc
loopew
jl
rorb
inc
xchg
push
push
mov
cmp
sub
inc
xor
mov
lret
ficomps
sbb
je
push
cmp
cmpsl
mov
xchg
nop
js
cmp
inc
sub
pop
sbb
xchg
or
mov
and
push
ret
jnp
mov
popa
mov
clc
outsb
xchg
je
in
imul
add
inc
je
or
xor
xchg
add
loopne
adc
push
test
mov
ret
dec
insl
nop
and
push
repnz
pushl
sub
push
pushf
incb
push
or
lcall
mov
outsl
xchg
dec
inc
mov
push
cld
xor
movsl
and
xchg
jp
in
push
jb
jbe
push
mov
lods
sbb
mov
cmp
sub
jmp
mov
push
push
push
test
pop
jecxz
add
movsl
jno
clc
pop
cmp
and
shl
cmp
lds
add
mov
bnd
adc
sub
pop
sbb
and
cli
ret
mov
xlat
lret
sub
push
or
pusha
push
adc
mov
not
jle
inc
jae
mov
out
xchg
and
and
fildll
jae
insl
jb
jb
lret
arpl
cli
inc
mov
lahf
mov
xor
sbb
add
pop
jmp
add
ret
mov
dec
xchg
xor
mov
mov
add
fdivrs
loopne
pop
ret
cmp
shr
pop
xor
lret
cld
jo
popf
jbe
sub
sub
sbb
mulb
or
orb
add
mov
inc
stos
adc
pushf
mov
roll
unpckhps
inc
sub
adc
push
cmp
dec
clc
fmull
fstps
jl
outsb
pop
test
mov
shr
sbb
lahf
aas
sub
gs
pushw
mov
push
pop
mov
xchg
sbb
mov
int3
or
sar
pop
cld
cmp
mov
ret
in
popa
sub
cld
xchg
dec
imul
pop
les
test
cwtl
pop
or
data16
scas
add
clc
push
fiaddl
and
sbb
test
mov
fsubrl
pop
inc
cmpb
out
sub
imull
and
xchg
and
mov
movsb
push
mov
xor
jo
cmp
daa
rorb
dec
xchg
pop
les
cwtl
addr16
mov
shlb
push
sbb
sub
mov
sub
insb
fiaddl
inc
sub
pop
loope
inc
mov
or
adc
add
xorl
mov
dec
mov
test
dec
push
js
push
mov
mov
cmp
ds
xchg
out
jecxz
data16
testl
ss
mov
sbb
popl
xlat
cmp
dec
push
dec
push
push
lea
xchg
fadds
gs
push
sbbb
adc
aam
lcall
fwait
ret
xchg
mov
add
cmpl
dec
incb
pop
adcl
ljmp
dec
ret
and
addb
add
data16
popa
xchg
sub
cvtpi2ps
sub
push
fldt
in
push
sbb
daa
mov
pop
sub
call
cwtl
in
dec
sub
cmp
cmp
pop
jb
push
pop
sbb
jae
sub
lods
rcll
pop
push
insb
pop
cltd
movsb
sbb
push
jle
insb
dec
stos
outsb
fldt
std
sbb
dec
mov
clc
jbe
je
inc
imulb
ret
xchg
enter
and
xchg
mov
lea
sarl
inc
add
dec
or
adc
pusha
pop
arpl
dec
pusha
pusha
pop
jne,pt
push
push
sub
xor
add
add
xchg
outsb
xchg
mov
in
dec
sub
ss
jle
je
or
mov
jg
sub
xor
rolb
cld
outsb
ret
nop
js
pop
std
push
pop
sarl
xor
inc
in
sbb
ret
ret
lret
lcall
jns
movsl
jne
lods
imul
add
dec
xor
loopne
or
mov
jbe
rcrb
sub
lret
sub
repz
add
sub
inc
mov
jge
add
inc
mov
adc
mov
push
add
inc
or
in
adc
mov
lods
daa
mov
out
je
dec
loopne
push
pop
sahf
shrb
nop
movsl
adc
add
adc
xchg
repnz
or
mov
test
cwtl
dec
adcb
pop
and
hlt
jge
push
stos
iret
jmp
or
and
cli
jle
rorb
jns
push
push
adc
jo
jecxz
add
shlb
jmp
mov
aad
jg
and
lock
mov
pop
in
test
test
les
pop
lahf
dec
adc
mov
adc
stos
test
test
inc
bound
insl
sub
push
pop
lret
loop
push
js
cmp
imul
mov
xor
inc
xor
mov
push
in
rol
in
movsl
popf
lret
mov
pop
ljmp
sbb
sahf
inc
xchg
neg
cmp
cmp
icebp
fwait
aad
jne
adc
pop
je
xchg
lock
adc
xchg
ret
inc
mov
lcall
adc
xchg
jg
mov
pop
jl
or
fwait
imul
rcrl
xchg
and
sbb
pop
movsl
lock
adcl
add
mov
movsb
mov
and
cli
mov
xchg
xorb
outsl
addr16
out
cmc
push
and
push
outsb
sbb
loopne
imul
mov
add
ret
movsb
test
fisubl
jle
pushf
iret
rorl
sub
cmp
push
lock
ret
idivl
or
or
mov
dec
jo
stos
jmp
push
cmc
faddl
out
ret
pop
sub
add
sbb
ret
and
daa
inc
add
scas
pop
mov
cmp
mov
push
dec
mov
ljmp
add
adc
cmpl
xchg
add
sahf
pop
sub
cmpsb
das
inc
jae
mov
out
arpl
movl
repz
fdivrl
imul
inc
ret
add
sub
sub
into
movsl
push
mov
jns
dec
ljmp
adc
loope
test
push
ficoms
push
sbb
mov
test
jp
add
or
xlat
cmp
loopne
push
jl
jge
pop
or
add
rorl
or
mov
popf
fldt
divl
xchg
push
dec
rcr
adc
mov
push
dec
mov
sbb
ret
nop
add
push
sbb
ljmp
sub
push
push
push
decb
add
inc
sbb
iret
fsubl
inc
dec
jne
mov
pusha
ss
pop
stc
or
sub
push
jb
sub
mov
pop
dec
dec
pop
mov
add
mov
ja
cmpb
mov
pop
jb
jno
add
mov
xchg
lock
mov
and
clc
inc
mov
push
or
dec
lret
mov
bound
sbb
repnz
inc
pop
xchg
push
xor
or
push
mov
push
jo
enter
push
push
push
pop
and
mov
inc
mov
jle
or
cmp
mov
adc
jbe
stos
mov
jnp
ja
lods
jbe
pop
adc
xor
jle
pusha
addr16
jp
inc
dec
jbe
insl
jne
fistps
cwtl
hlt
test
sbb
insl
imul
or
clc
data16
jecxz
inc
add
inc
mov
push
out
add
jnp
adc
es
cmpb
push
lods
sub
jmp
bound
sbb
add
and
lea
jle
sub
and
add
loopne
pop
inc
jmp
sbb
adc
outsb
jmp
inc
jge
dec
icebp
adc
inc
mov
inc
ljmp
sbb
dec
and
cmpsl
je
out
shrb
xchg
dec
lock
fistpll
fsubr
xchg
push
ss
shll
inc
mov
mov
xlat
xchg
xchg
das
xlat
addl
jne
rorb
fs
jmp
push
sarb
jo
test
je
jnp
jmp
movsl
cmp
pusha
adcb
out
mov
and
adc
or
js
lods
and
or
jl
xor
ret
xchg
dec
pop
pop
mov
xchg
pop
test
loope
push
xchg
add
mov
add
aam
and
loopne
push
and
inc
jbe
divb
and
outsl
mov
mov
scas
sbb
add
mov
outsb
pushf
fcmovb
sti
lods
sbb
adc
test
aaa
xchg
filds
and
mov
out
daa
add
push
jmp
mov
or
or
ret
sub
sbb
aam
imul
sbb
aaa
push
jo
les
fcomps
push
rclb
dec
test
lcall
cld
or
hlt
shlb
jnp
cmp
sub
xor
push
or
js
in
inc
inc
xor
rolb
jbe
test
cmp
in
sub
lods
dec
sbb
js
sbb
cmpsl
pop
add
lock
sbb
sub
test
mov
rcrb
pop
shrl
sub
or
out
add
jmp
sbb
add
mov
mov
or
sbb
test
jbe
ja
std
and
cmp
push
bound
mov
sub
repz
jne
adcl
sarb
repnz
cmp
push
cs
sbb
xchg
sub
test
inc
xchg
or
pop
inc
jo
into
push
into
lods
mov
movsl
or
fldl
cmp
or
inc
loope
inc
push
mov
inc
mov
dec
jne
add
inc
mov
jl
loope
pop
xor
xlat
mov
ror
loope
arpl
call
filds
loopne
sbb
fdivs
jge
and
mov
rorl
sbb
sahf
out
adc
cmp
and
push
mov
hlt
int
fildll
loopne
sub
lock
sbb
pop
add
cwtl
in
in
xor
mov
cmp
cld
cld
inc
lds
jns
std
sbb
in
sub
push
repnz
ds
std
or
adc
add
add
sub
mov
orb
and
sub
adc
xchg
or
mov
stos
mov
jg
sub
sub
shl
jnp
lock
push
mov
and
add
jl
inc
pop
test
mov
mov
dec
add
and
inc
scas
xor
jge
mov
xchg
ss
mov
dec
jo
sub
cld
sub
mov
add
jp
mov
ds
subb
push
pusha
xchg
mov
or
loopne
pop
rclb
pop
enter
leave
and
enter
push
enter
sbb
outsb
cmpsl
loopne
inc
hlt
pusha
sbbl
xchg
adcb
pop
ret
pop
ljmp
push
push
push
xchg
ret
and
in
test
xchg
mov
cmc
lea
add
popa
pop
jp
or
minps
shrb
ljmp
inc
cmpsb
sbb
add
mov
and
adcl
push
pop
test
fisttpl
or
dec
icebp
or
sarl
adc
sub
dec
mov
add
jle
add
inc
sub
pop
push
pop
enter
pop
xlat
aaa
test
add
pop
push
sahf
inc
mov
pop
inc
mov
jg
and
adc
data16
je
push
mov
push
sbb
stos
ret
pop
lret
pusha
cmp
xor
xchg
xor
stos
pop
mov
sbb
inc
push
jo
shr
jge
add
call
adc
add
add
adc
sbb
jne
pop
pusha
and
ds
push
outsl
jae
scas
add
xor
pop
mov
outsl
mov
pop
arpl
add
sar
int3
inc
mov
mov
sbb
add
push
adc
or
cld
push
inc
insl
xor
ret
dec
add
cmp
push
cmp
add
push
rol
shr
mov
dec
sub
enter
loopne
sbb
add
push
decl
xchg
jne
das
adc
stos
add
loopne
push
sub
es
or
adc
or
sbb
and
mov
icebp
loope
cmpl
das
adc
fdivp
jecxz
rorb
dec
fadds
cmp
dec
pop
fcmovu
insl
jno
sub
push
lea
or
push
jo
dec
add
stos
sbb
xchg
addb
mov
dec
pop
pop
jo
mov
inc
js
mov
sbb
lahf
inc
sbb
cmp
sub
js
sarb
lcall
ret
shrb
mov
fdivr
adc
sti
pop
add
rorl
jo
adc
mov
enter
call
pop
pop
shrb
mov
push
or
test
mov
pop
dec
add
lock
sahf
les
cmc
pop
xor
inc
pop
aam
xchg
pop
mov
addr16
adc
pushf
out
cli
push
sbb
adc
add
cli
les
push
push
mov
aad
sbb
andl
and
xchg
inc
loopne
cmp
xor
add
es
mov
jae
add
shrb
xor
push
add
mov
daa
add
dec
imul
mov
lods
fisttpl
pop
in
test
sbb
jl
mov
sbb
xor
mov
loope
mov
mov
and
pushf
push
sub
push
dec
dec
inc
add
pop
adc
dec
mov
push
into
add
pop
add
xor
cmp
inc
push
popf
mov
push
dec
in
xchg
je
sub
push
jo
inc
jmp
mov
pop
hlt
call
lcall
std
sub
fists
add
push
mov
sub
add
enter
mov
inc
clc
out
add
dec
dec
sti
mov
jo
lea
mov
sub
fildl
mov
ss
and
inc
sbb
sub
add
insb
jl
stos
imul
and
clc
int
push
push
lea
sub
mov
xchg
aam
adcb
add
hlt
add
dec
filds
jl
rorb
or
shrb
and
add
mov
inc
xor
mov
xor
call
pop
sahf
mov
inc
sub
adc
loope
xor
jg
mov
fwait
cmc
sbb
inc
dec
shl
xchg
ret
jg
and
push
out
jl
cmp
push
cmc
add
xchg
sahf
pusha
fcompl
sbb
pop
ret
xabort
fimuls
imul
ljmp
pop
cmc
movhps
push
push
clc
insl
nop
pop
push
bound
hlt
fcmovu
or
cmp
shl
push
add
add
ljmp
and
xor
rclb
jp
lcall
leave
or
add
test
ja
or
mov
and
addl
dec
push
xchg
mov
add
loopne
sub
or
xor
push
jo
cmpsl
mov
data16
outsl
push
sub
jns
enter
sbb
movsb
aam
hlt
mov
jbe
mov
shrb
and
or
mov
pop
mov
push
stc
mov
push
out
loopne
rcl
or
jnp
in
sbb
outsl
sub
mov
shld
sbb
add
lods
jl
sbbb
jmp
push
jne
push
shrb
test
ja
push
les
mov
or
movsl
add
insb
shlb
shl
lods
loope
jp
sar
std
add
aaa
dec
push
or
xor
adc
inc
add
or
add
cmp
pushf
mov
cmpsl
addb
hlt
mov
lea
loopne
mov
xchg
sbb
dec
sarb
xchg
xchg
lock
adc
js
adc
test
mov
jo
push
mul
sahf
dec
adc
mov
push
shlb
jo
fimull
loope
mov
jle
sbb
sbb
icebp
fadds
popf
clc
adc
lcall
jo
jg
js
ss
inc
inc
clc
cmp
push
and
cmp
push
jg,pt
outsl
sbb
inc
aaa
cmp
das
xchg
cli
mov
or
adc
stos
adc
sar
sub
fisttpl
and
push
in
mov
add
pop
add
add
jmp
fidivrs
jae
popa
jge
cmc
add
ss
pop
add
shl
imul
mov
sub
out
rcll
push
shl
push
rorb
mov
notl
ficomps
fimuls
or
jmp
pop
sub
js
jmp
xchg
mov
jg
sub
jmp
cmp
jle
cmc
iret
sbb
sub
out
cmp
mov
je
cltd
pop
mov
and
pop
sbb
push
inc
pop
and
into
jmp
cmp
jg
call
mov
sub
sbb
arpl
div
push
pop
or
jg
adc
sub
fnsave
cmp
inc
movsb
in
adc
loopne
lds
loope
int
mov
mov
or
jmp
push
and
cmp
out
mov
or
inc
inc
imul
jl
cmc
loope
insb
sub
mov
pop
sbb
mov
stos
cmp
shrb
jo
add
push
sub
dec
pop
hlt
adc
or
dec
mov
xchg
or
pusha
jle
xchg
scas
clc
push
aam
mov
js
and
xor
js
mov
daa
inc
cmp
test
into
push
inc
stc
inc
fsubrs
fmuls
or
fs
sbb
pop
movb
shl
mov
xchg
lret
and
dec
pop
cmpsb
lock
imul
fs
mov
push
lcall
push
clc
aad
inc
dec
jne
imul
sti
adc
and
mov
mov
out
sbb
cld
rcr
enter
lea
pop
xor
add
sub
shrb
addr16
push
sti
mov
mov
fnstcw
test
cmp
je
push
into
movsb
cmp
or
jp
sub
mov
insb
loopne
les
sub
jecxz
or
inc
sbb
push
or
insb
je
or
dec
jo
xor
mov
mov
dec
std
cmpsl
add
int
push
ud0
add
fwait
jo
add
inc
loop
mov
test
or
and
mov
inc
loope
push
adc
sbb
pop
inc
xchg
hlt
shlb
lret
mov
add
aas
movsb
sbb
mov
push
dec
stos
xor
xor
adc
orl
xor
and
sbb
imul
add
mov
or
jl
cmp
or
cli
push
setp
or
mov
xchg
pop
incl
sub
sub
adc
mov
sbb
ret
dec
enter
adc
aam
cwtl
xorb
xchg
sbb
fmull
sbb
cmp
add
clc
jne
dec
cmp
jne
inc
inc
lret
adc
inc
dec
pop
xor
testl
jo
mov
pop
stc
ss
adc
xor
mov
add
push
mov
pop
xor
dec
lcall
xorb
dec
xlat
push
inc
ds
test
sbb
adcb
rolb
fcomps
pop
adc
push
cmc
fidivs
leave
shlb
stos
lcall
xor
pop
jo
cmp
jno
rcrb
les
push
and
jbe
cmpsl
push
cwtl
xchg
cmp
je
in
data16
sbb
adc
sbb
int
movsl
or
inc
mov
push
test
jg
mov
mov
rcrl
xchg
lods
push
pop
adc
cmp
dec
lahf
int
adc
aam
pop
mov
test
dec
cmpsb
inc
popf
out
add
xchg
pop
jbe
aas
adc
imul
push
out
pop
adc
stos
cwtl
jl
and
jmp
adc
adc
xchg
lcall
mov
pop
mov
ret
adc
fbld
pop
mov
fs
inc
andb
fisubl
xchg
pop
adc
ljmp
pop
add
fimuls
jg
mov
push
and
mov
inc
js
dec
push
cmpsb
lock
lds
data16
pusha
sbb
fdivrl
add
idivl
mov
outsb
icebp
adcl
cwtl
test
inc
adcl
rcr
sub
and
into
sbb
sbb
push
stos
out
xchg
push
inc
rolb
jle
sbb
cmpsl
enter
mov
sub
mov
inc
inc
add
sbb
and
sub
adc
ret
dec
sbb
add
jge
sub
inc
push
dec
divl
pusha
cmc
inc
cld
jne
jg
push
add
shl
xchg
adc
adc
or
insb
int
outsb
adc
and
jg
out
cld
subb
in
jne
inc
cmp
pop
sbb
inc
call
or
fcoms
and
ljmp
jmp
or
test
ja
or
xorb
div
or
rcll
push
or
out
pusha
inc
dec
or
inc
or
movsl
and
mov
xchg
cmp
fistpll
testl
lods
push
sbb
loop
push
adc
pop
ret
rorb
push
push
fdivl
cmpsb
inc
stos
xor
movlhps
push
shlb
ja
or
movsl
and
xchg
adc
xor
shrl
fnstsw
inc
repz
addl
enter
neg
lcall
mov
js
and
pop
inc
jecxz
sub
mov
xor
std
insl
jmp
xchg
mov
sbb
out
mov
xchg
xchg
jbe
enter
icebp
call
lea
mov
addb
or
rorl
xor
jg
cmp
sbb
adc
lock
add
ret
xchg
gs
pop
add
dec
cmp
dec
dec
enter
mov
dec
mov
shrb
pushf
push
sub
std
mov
out
inc
pusha
pusha
repnz
ljmp
test
push
sub
sbb
iret
aas
mov
pushf
mov
jle
and
lea
or
push
cmp
push
jg
push
test
cltd
int3
or
or
push
cmpb
orl
add
sbb
push
rorl
or
xchg
sub
cmp
js
xor
sarb
rcrl
or
std
add
out
mov
and
inc
push
clc
aaa
jl
pop
xchg
xlat
jle
mov
xor
push
jg
cmc
sbb
adc
add
and
mov
sbb
call
nop
js
sub
les
cld
js
sub
mov
push
add
xchg
mov
js
push
daa
push
or
add
cmpl
sahf
popf
repnz
daa
sub
pop
push
jg
mov
pop
and
rorb
mov
cmp
fisubs
dec
pop
pop
cld
mov
inc
in
repnz
movsb
xchg
sahf
xor
and
out
xor
sbbl
test
inc
jb
std
in
pop
push
xchg
push
or
adc
popa
or
fadds
enter
outsw
jmp
jae
add
enter
jmp
inc
mov
mov
cmp
push
cmpsb
lods
dec
fdivrs
add
sub
add
dec
dec
sahf
rclb
mov
mov
in
test
insl
sbb
je
inc
cmp
xor
inc
add
mov
or
adc
sbb
sub
inc
sbb
and
pop
and
daa
adc
mov
xchg
daa
jno
mov
adc
push
mov
lock
jbe
jbe
jmp
inc
and
pop
shlb
mov
push
mov
jae,pt
jp
das
fimuls
pinsrw
xchg
cmc
adc
scas
pop
xchg
out
into
popf
test
and
pop
inc
test
inc
mov
pop
inc
jno
ret
xchg
aas
pop
pop
clc
sbb
enter
mov
popa
loope
repz
in
add
or
test
cmpsl
jle
push
push
jle
add
notl
pushf
insb
or
str
mov
adc
jg
pop
add
loop
repz
outsl
and
daa
adc
js
xchg
shlb
out
or
fucomp
loope
int3
adc
and
enter
xchg
inc
or
outsb
sbb
insl
push
stos
push
aaa
aas
sub
inc
shll
jle
je
in
xchg
xor
cmp
pushf
sbb
add
jge
loope
imul
inc
cmp
inc
dec
sub
sub
subl
js
xor
or
test
loopne
in
mov
stos
ffree
pop
sbb
mov
shrb
enter
push
sub
dec
dec
push
inc
mov
nopl
push
pusha
scas
loopne
pop
xor
dec
mov
mov
jne
in
add
ja
sub
add
adc
inc
adc
or
mov
jmp
mov
cwtl
xor
and
mov
shrb
mov
or
or
popa
hlt
dec
or
sub
ret
push
fldt
inc
inc
sbbb
push
js
or
inc
mov
dec
pop
dec
or
sbb
mov
jae
jl
jmp
cmp
sub
fldl
xor
lods
xor
outsb
lock
mov
fwait
pop
cli
repnz
aas
cmp
xor
sahf
enter
inc
xchg
or
or
int
sbb
or
loope
jo
adc
iret
dec
push
push
jmp
pop
dec
js
adc
pop
sbb
fwait
rol
dec
lea
inc
cmp
xor
or
inc
shl
orb
add
xor
or
lods
dec
cwtl
push
mov
pop
and
std
movsb
lahf
cld
mov
pop
test
cmp
sub
jecxz
fucomi
jmp
jmp
push
arpl
sbb
fwait
jle
int
insb
jmp
cli
mov
fiadds
mov
mov
pushf
out
daa
jo
cmp
xor
dec
add
pop
jp
add
pop
ret
mov
insl
mov
leave
inc
add
mov
cmpsb
mov
cs
lea
cmpb
dec
inc
push
lea
adc
sub
add
test
xor
js
lock
out
ret
mov
in
inc
adc
mov
mov
push
dec
adc
stos
mov
add
repz
rcl
inc
inc
and
xchg
pusha
pop
in
outsl
push
scas
lock
in
push
add
js
inc
push
add
mov
inc
mov
jmp
or
leave
shlb
jnp
fsubl
lcall
daa
sbb
fidivl
fs
and
and
and
es
jmp
adc
dec
stos
enter
lea
and
bound
lea
adc
pop
xchg
imul
fiadds
lods
push
jg
call
mov
lock
leave
mov
out
add
adc
mov
jecxz
pop
jecxz
sahf
jmp
mov
mov
cmc
cmpb
push
pop
add
mov
sub
xchg
lcall
into
or
subl
mov
iret
sti
ret
mov
movsb
adc
push
js
and
popf
lock
outsb
les
ret
or
test
rorl
out
push
pop
shrl
ja
or
pop
xor
add
ja
lahf
and
dec
je
pop
jmp
add
aas
sbb
sub
rorb
fsubl
sub
lret
dec
std
pushf
add
pop
mov
inc
jae
bound
sbb
cmp
mov
mov
xlat
mov
or
movsl
loopne
bound
jl
dec
insl
sub
jns
lds
inc
jnp
mov
lods
flds
fwait
and
into
ret
push
sub
sbb
push
mov
andb
outsl
jb
cmpsb
ficoml
jb
adc
mov
mov
xchg
lret
sub
test
push
mov
mov
lret
lods
pop
and
mov
in
fwait
mov
pushf
popa
aas
mov
cs
nop
mov
lods
repnz
add
iret
les
inc
sub
push
in
mov
pop
jbe
fbstp
ja
lret
cmp
ret
xchg
mul
push
lea
call
xor
xlat
ret
jg
push
cmp
sbb
aas
outsb
adc
mov
rol
cmp
xchg
dec
jge
ret
sbb
lsl
mov
out
and
cmp
inc
sbb
xchg
or
dec
outsb
xchg
or
xor
jle
adc
sbb
and
lret
fsubl
jo
subl
xor
inc
mov
pop
aas
xor
sub
xchg
pop
dec
jo
mulps
inc
inc
sbb
and
in
xor
sahf
jo
leave
jo
lcall
sbb
push
adc
mov
xor
test
mov
mov
push
jp
add
dec
scas
jb
shl
sbb
icebp
add
jmp
negb
addl
in
lock
sbb
push
bound
xchg
loope
arpl
jae
insl
cmp
inc
xor
xchg
jb
jo
add
jbe
dec
mov
dec
cmp
jle
ret
mov
pop
dec
inc
ret
bound
ds
repnz
fadds
stos
ret
aas
rolb
imul
rcrl
int
fisubrl
clc
dec
aad
xor
clc
inc
addl
sub
jecxz
push
imul
mov
cmp
add
rol
testb
jle
je,pn
inc
in
dec
xchg
das
mov
daa
xor
xchg
adc
jmp
loopne
lock
iret
mov
or
fldl
mov
xchg
cmp
outsb
pop
je
or
or
mov
lods
cmp
or
jo
js
dec
cmp
inc
outsl
adc
and
test
jle
rcrb
inc
pusha
xor
int3
add
pop
adc
add
or
add
mov
insl
dec
pop
and
ljmp
mov
jbe
mov
rcll
dec
sti
arpl
dec
imul
inc
mov
mov
cmp
sub
sti
stos
xchg
pop
cmp
gs
pop
aam
push
sub
fistpll
cmp
pop
lcall
push
xchg
pop
js
daa
push
sub
dec
sub
push
arpl
xor
subb
inc
gs
pop
ss
xlat
mov
pushf
cs
jnp
cmp
inc
adc
sub
xor
and
inc
insb
stc
lods
jle
xor
incb
and
pop
div
pushf
gs
sbb
rolb
inc
faddl
test
addb
adc
mov
inc
call
xor
adc
mov
pop
and
stos
push
jp
lock
xor
mov
inc
add
lea
push
or
addb
lock
adc
test
sub
jmp
push
lea
or
and
call
jbe
int
push
pusha
lea
dec
clc
or
sub
xchg
mov
leave
movsl
jbe
mov
lcall
outsb
cmpsb
or
ds
scas
xor
sub
push
lahf
mov
sbb
ret
sbb
orb
and
jl
clc
subl
pop
pusha
in
sbb
xchg
and
xor
add
notb
pop
or
push
stos
or
dec
loope
fwait
jnp
mov
jbe
inc
or
aaa
inc
pop
mov
xor
hlt
test
xor
shlb
loopne
push
int
outsl
lods
inc
jns
add
jmp
call
or
add
movups
jl
jb
and
pop
imul
mov
sub
xchg
dec
ret
push
xor
fistl
sahf
or
clc
adc
out
lcall
xchg
adc
and
adc
cmp
fcomps
movsl
and
jle
adc
out
dec
add
xor
insl
pop
sar
sub
shrb
pushf
cmp
sti
or
in
sbb
push
mov
notl
cltd
movb
ret
or
std
roll
adc
mov
fs
sub
addl
aad
or
mov
data16
add
mov
push
sbb
or
fcmovnb
pop
sbb
sbb
sub
xlat
or
dec
push
mov
or
inc
out
loopne
ja
add
clc
sub
add
cmpsb
imul
or
lods
jmp
imul
mov
call
ljmp
push
xor
cmp
in
clc
cs
mov
jnp
jmp
push
sbb
fs
and
fldcw
insb
add
mov
sti
test
inc
add
fdivs
push
xor
inc
push
inc
cmpsb
mov
mov
or
pop
cmp
xorb
cmp
jo
cmp
xor
ror
inc
or
arpl
mov
inc
push
xor
xchg
lea
inc
inc
push
push
jmp
push
inc
or
adc
pop
loop
push
lahf
cwtl
sbb
jecxz
movsb
adc
xchg
cwtl
stos
mov
fcomip
pop
lea
push
aas
and
inc
and
aaa
and
lahf
jb
push
push
hlt
cwtl
jecxz
sub
test
push
dec
sub
lock
sbb
and
sbb
dec
pop
ret
pusha
adc
pop
add
arpl
adc
mov
movsl
add
scas
ret
mov
cmp
cmp
dec
push
jl
push
sub
mov
lock
inc
or
mov
push
mov
push
in
sahf
sbb
push
adc
dec
js
dec
and
and
fcomip
sti
aam
jl
out
mov
pop
pusha
adc
or
xorb
cmp
cmp
scas
cmp
add
mov
js
add
ret
movsl
jns
or
dec
mov
lock
shr
pop
and
adc
xlat
popa
lods
push
std
add
adc
cltd
jns
outsb
mov
sub
dec
xor
repz
add
sahf
out
adc
xchg
sbb
push
sub
test
push
icebp
push
mov
lock
shlb
cmp
mov
repz
xor
inc
add
xchg
lock
aad
test
fidivl
repz
push
in
add
add
cmp
push
adc
add
or
imull
pop
xchg
pop
xor
or
sub
add
pop
jg
cmp
jecxz
insb
notb
mov
outsl
repnz
mov
pop
out
nop
pop
stos
xor
or
into
scas
pop
xchg
test
dec
sub
adc
aas
outsl
sub
clc
jl
fmuls
sbb
nop
dec
call
pop
push
or
pop
pop
push
mov
sub
mov
cmp
je
andb
dec
xor
out
inc
loopne
test
stc
shrl
mov
out
mov
mov
mov
cwtl
push
sbb
or
mov
pop
mov
sbb
xor
cmp
ljmp
or
adc
adc
mov
imul
dec
std
add
mov
mov
ret
test
imul
mov
mov
shl
sar
lret
and
dec
inc
pop
sbb
xor
outsb
test
imul
jp
in
cmp
lea
repnz
inc
push
imul
lock
ja
lods
pop
mov
sub
lahf
push
sub
xor
or
pop
xchg
mov
jnp
rcl
shll
xchg
push
and
sbb
mov
sbb
and
or
out
fwait
pop
pop
mov
cmp
pop
inc
push
out
sub
rorb
pop
pusha
scas
orl
pop
lcall
loope
xor
fsts
push
add
ljmp
inc
lds
mov
inc
xor
shlb
js
sti
inc
and
fimull
pop
mov
xor
and
and
and
sub
cwtl
inc
aaa
addb
cmp
and
mov
add
jb
call
or
or
divl
lock
fnsave
adc
push
and
pusha
fsts
lods
or
test
mov
xor
pop
imul
int
sub
inc
fimuls
adc
fsts
int
xorb
push
inc
jp
ficomps
fld
fadd
push
xor
lods
movsb
loope
neg
daa
adcl
push
cmpsl
aam
dec
fidivl
les
mov
bound
daa
and
fadd
fisttps
sti
out
push
pop
inc
inc
and
mov
clc
inc
pusha
sbbl
dec
sbbl
and
xor
push
adc
pusha
mov
push
or
push
or
inc
and
dec
or
call
adc
push
lock
movsb
cmp
adc
or
fnstcw
push
push
cmc
sbb
and
add
push
pusha
test
subl
fstpl
js
lea
ss
pop
pusha
imul
loop
dec
adcb
dec
inc
add
lret
add
jno
inc
imul
jge
fisttps
imul
inc
clc
or
fsubs
inc
inc
and
adc
xor
push
sub
adc
lds
ret
mov
rcr
pop
push
aaa
inc
stos
or
fisttpl
add
data16
cld
jae
or
ds
adc
sbb
shll
mov
xor
mov
popa
add
scas
stos
inc
sbb
inc
mov
sbb
sbb
sub
pop
icebp
shll
int
fmul
aas
or
add
xlat
and
xchg
cmp
xor
fidivl
jecxz
cmpsl
add
cwtl
adc
dec
repnz
icebp
xchg
xor
sub
and
pop
or
mov
sahf
hlt
cwtl
jae
lret
jp
mov
cmp
push
andl
fcmovu
sbb
sub
or
pop
or
add
cli
add
mov
pop
shl
outsb
push
shl
into
rcll
adc
xchg
or
jo
add
adc
push
push
lock
sub
jne
push
mov
pop
mov
push
loopne
js
jg
and
repnz
dec
add
jl
mov
mov
lock
call
dec
inc
cmp
mul
jne
sub
add
jecxz
sub
add
pop
outsl
xchg
sub
jo
pop
flds
push
mov
sti
lret
adc
or
push
adc
lret
ljmp
aam
fdivrl
popf
mov
sub
imul
int
xchg
dec
popa
mov
icebp
mov
xor
add
cmc
fcompl
inc
insb
in
add
in
xor
and
pop
rolb
test
push
call
rclb
fs
ret
and
and
push
push
ljmp
jne
test
inc
mov
clc
jle
or
fisttps
cmp
xor
sar
push
sbb
clc
inc
and
push
or
inc
push
inc
or
rorb
jo
or
sti
bound
lea
repz
lods
imul
movd
jo
dec
inc
add
test
or
mov
lret
and
repz
test
nop
adc
adc
mov
subb
loope
sbb
aam
or
cmp
les
dec
push
rorl
mov
dec
loope
test
add
and
mov
sti
out
pop
jo
mov
xor
sbb
jl
jmp
cwtl
jecxz
loop
push
inc
out
sub
push
dec
and
cwtl
lds
push
sub
inc
mov
frstor
dec
pop
add
push
dec
mov
and
mov
mov
cmp
jge,pt
shll
gs
aad
pop
in
and
adc
sub
push
cwtl
sbb
cpuid
push
push
repz
cmp
sbb
rclb
inc
cld
ret
push
add
cld
dec
push
and
cmp
and
add
daa
jmp
mov
pop
repz
orb
mov
xchg
mov
mov
jne
fsts
pop
push
add
out
mov
push
testb
pop
xor
sub
or
jbe
sbb
jne
jo
lock
jle
jecxz
arpl
mov
dec
ja
add
dec
pop
add
loopne
iret
rolb
inc
sti
lea
xchg
stos
aad
sarb
ret
add
xchg
test
mov
jne
fisttps
adc
and
repnz
hlt
stos
int3
pop
aaa
aad
mov
xor
loopne
push
in
ljmp
lea
sub
test
push
add
or
gs
pop
shlb
pop
or
dec
rorb
rcrb
jns
pop
add
jl
je
or
push
push
or
or
add
or
mov
pop
dec
mov
pop
jmp
sub
add
pusha
add
xchg
nop
cmp
icebp
sbb
xor
push
and
nop
cmp
sbb
pop
dec
lcall
inc
addr16
es
xchg
lods
cmp
cmpb
fcmovb
pushf
dec
daa
cmp
jnp
adc
or
pop
fsubrs
inc
add
xor
push
pop
ret
jne
mov
inc
ret
xor
scas
xor
mov
jecxz
sub
mov
sub
aam
dec
mov
adc
int3
and
shlb
les
mov
fistpll
xor
ror
inc
add
adc
mov
jae
push
add
ret
mov
movsl
cmp
inc
xchg
sub
add
pop
sahf
pop
sti
adc
add
into
outsb
mov
mov
shll
jae
rcr
shr
adc
push
push
aaa
dec
sbb
mov
dec
cwtl
add
das
pop
and
pop
push
push
in
lcall
fcomp
lahf
mov
dec
nop
lret
stos
jg
cmp
or
rol
pop
or
pop
mov
sbb
xchg
cmp
es
xor
xor
pushf
jl
icebp
nop
aas
mov
pop
mov
jo
mov
imul
fs
mov
add
bound
adc
movsl
inc
xchg
aas
jb
es
mov
movsl
inc
imul
inc
minps
daa
cmp
mov
add
sbb
fwait
clc
and
daa
add
bound
dec
ss
cmp
push
dec
jmp
dec
lods
push
lea
sbb
scas
pop
call
pop
das
fcom
push
inc
jbe
test
fcoml
pop
pop
dec
sbb
popf
test
orb
cvtps2pd
sbb
jmp
jecxz
cmp
xor
mov
negb
sbb
ret
xor
pop
ds
aas
je
loop
or
inc
mov
nop
fs
fisubrs
sbb
pushf
xor
fwait
popa
pushf
fs
mov
push
mov
xchg
pop
mov
mov
cli
adc
cli
test
sti
sti
in
ss
stos
pop
fidivs
rcrb
or
jnp
mov
fmuls
enter
ret
nop
push
subl
daa
cmp
push
ret
div
sub
dec
es
pushf
mov
andb
xlat
je
call
clc
rcr
lret
adc
mov
mov
adc
mov
into
jne
mov
pushf
in
inc
add
add
into
mov
outsb
aam
lahf
push
lods
xlat
push
jge
mov
push
mov
je
lea
sbb
cmp
clc
push
sub
enter
xchg
cwtl
and
mov
xchg
jb
add
mov
jmp
inc
pop
and
aas
and
add
jo
cmc
rcl
inc
push
pop
imul
jb
mov
fstps
lods
mov
push
bound
mov
loopne
roll
add
and
lock
xorb
add
enter
idivb
dec
or
insb
jecxz
xchg
mov
add
push
xor
fnsave
fs
movl
bound
sbb
das
subl
push
or
mov
mov
fs
push
test
add
shll
mov
mov
movsb
sub
push
mov
jg
and
add
sbb
pushf
sub
mov
add
mov
add
int3
lahf
mov
mov
outsb
lea
nop
pop
repnz
jl
stc
aad
and
adc
adc
and
and
xor
jo
inc
xchg
fimuls
or
dec
aaa
jmp
dec
jl
mov
nop
adcb
cltd
xchg
rorb
jns
push
rorb
fcoml
push
lods
lret
or
jo
pop
sbb
hlt
dec
aas
test
in
push
push
pop
fisubl
enter
lds
jl
filds
cmpb
punpcklbw
xchg
dec
clc
pusha
pusha
add
xchg
mov
into
add
lock
adc
jae
push
push
lea
popf
push
in
mov
in
clc
inc
push
and
push
jbe
clc
inc
add
dec
mov
das
cmp
pop
inc
adc
push
sub
inc
fsubl
or
scas
inc
stos
dec
fiaddl
xchg
xchg
lock
es
filds
mov
inc
test
dec
and
adc
mov
imul
lret
test
ss
jge
nop
inc
or
call
fiadds
push
sub
into
addr16
int3
cli
mov
mov
outsb
push
les
or
mov
sub
sbb
inc
sub
shlb
and
cmp
jnp
jne
sbb
jne
addb
add
pop
stc
xor
pushf
cmp
dec
call
push
mov
add
repz
addl
enter
mov
push
fdiv
push
in
push
inc
les
pop
adc
aas
cmp
add
lock
aam
dec
or
jl
add
inc
push
mov
push
add
jb
adc
pop
rol
lods
push
test
sarb
sahf
mov
fisubrs
cwtl
push
or
mov
push
dec
inc
mov
arpl
pop
mov
faddl
cmp
xor
cmp
push
out
sbbb
dec
mov
inc
cmp
dec
mov
addb
push
xchg
fcoml
aaa
jae
mov
sbb
jle
mov
sbb
push
adc
jne
xchg
sbb
adc
pop
sbb
rcll
mov
sub
loopne
or
lods
jns
mov
push
xchg
jl
in
aad
or
sbb
push
cwtl
mulb
fcompl
fcmovb
mov
cltd
push
mov
or
xor
mulb
fcmove
sbb
aam
mov
inc
push
and
dec
lods
cmp
jae
inc
push
mov
lcall
push
and
sub
mov
and
adcb
pop
mov
in
add
adc
dec
push
jg
xchg
mov
sbb
cmp
jg
cmpb
jg
push
inc
stos
inc
jg
and
xchg
mov
adc
and
or
add
inc
push
sub
inc
push
push
aas
faddp
and
mov
or
sbb
inc
xor
hlt
loop
sbb
pop
lahf
iret
or
jge
aaa
mov
jecxz
clc
fs
fistpll
push
add
push
add
dec
push
rol
inc
sarb
sbb
or
cltd
jp
mulb
pusha
or
out
push
sar
push
jle
cmp
mov
push
push
sub
push
add
or
and
ret
dec
mov
jecxz
dec
mov
inc
imul
pop
or
ja
in
pop
push
cmp
push
out
push
xchg
add
adcb
mov
rorl
push
nop
jle
add
mov
add
sbb
push
push
push
gs
sbb
aam
sub
sti
das
mov
lea
cmp
xchg
movsb
mov
fsubrs
mov
mov
repnz
jle
sub
mov
or
loope
rorb
xor
sub
xor
jmp
rclb
cmp
add
ret
push
notl
mov
in
icebp
add
mov
ret
rclb
ljmp
sahf
sti
add
add
pop
sbb
inc
mov
mov
sub
inc
loopne
add
inc
or
clc
in
mov
inc
xor
push
push
lds
fdiv
and
inc
sub
lcall
add
pop
inc
int3
pusha
pusha
push
sarl
mov
mov
sar
lret
sbb
jg
adc
mov
shrl
lds
fmul
sub
test
add
dec
je
dec
xor
inc
mov
add
push
add
pop
es
pop
and
popa
int
mov
test
inc
sbb
push
test
out
xor
sub
jl
lahf
orl
add
sbb
scas
adc
push
cmp
pop
mov
js
and
sbb
push
leave
jle
inc
mull
push
pop
dec
movsl
cwtl
xor
fsubp
adc
or
ljmp
les
and
sub
xor
lea
fistpll
hlt
inc
into
aaa
mov
and
add
mov
xor
push
gs
push
inc
mov
subb
lds
clc
cmpsb
shrb
mov
xchg
mov
movsl
cmp
xor
fcmovu
fisttps
fstl
lds
popa
mov
mov
jbe
addb
aam
gs
inc
dec
add
pop
mov
jl
pop
pop
sbb
flds
sarb
adc
rorb
call
xchg
loope
movhps
roll
xchg
icebp
jmp
ss
mov
sbb
sarb
shlb
aaa
sbb
ret
xchg
push
xchg
jo
je
and
in
retw
movsb
xchg
test
adc
adc
movsl
frstor
jo
sahf
push
fildll
push
nop
sbb
add
mov
rolb
inc
mov
pop
cmp
cld
scas
inc
or
loop
mov
adc
xchg
cld
dec
insl
cmp
add
xor
and
pop
xor
mov
cmpsb
add
cmp
sbb
add
push
dec
fmuls
push
push
lfs
xchg
or
push
and
xchg
xor
cmp
xchg
lea
sub
push
cmpsl
test
leave
mov
mov
xchg
pop
or
or
mov
es
enter
outsb
add
add
xlat
cld
cmp
inc
jb
sub
or
rcrb
or
dec
jno
popf
iret
pop
jge
dec
cmp
sbb
or
dec
sbb
jmp
cmp
and
pop
and
adc
inc
std
sbb
or
and
loope
inc
scas
jle
xor
sarb
push
xchg
jo
fstl
cmp
sbb
rcll
psubusw
sbb
or
push
mov
addb
jbe
push
mov
xchg
or
mov
jle
jl
mov
fldl
outsb
jge
xchg
adcl
outsl
cmpsl
aad
arpl
aaa
or
sahf
pop
mov
xor
mov
mov
pusha
mov
dec
adc
sub
je
dec
pop
dec
stos
add
dec
add
cmp
test
xchg
and
mov
nop
or
call
pop
pop
inc
add
je
dec
mov
cwtl
scas
add
pop
dec
inc
fwait
inc
in
popa
imul
xchg
ss
pop
aaa
clc
adc
fisttpll
inc
test
push
movsb
xor
add
add
adc
inc
orl
jo
add
aaa
pusha
inc
sub
and
cmp
pop
inc
int
adc
or
or
divl
imul
sub
into
xchg
sbb
insb
repnz
mov
je
pusha
mov
mov
add
daa
adc
loopne
hlt
add
cmp
mov
js
inc
adc
movsl
and
sub
sbb
cmp
mov
inc
mov
jmp
inc
inc
rcll
cmp
adc
fldcw
imul
or
or
call
push
xor
rcl
sbb
mov
sbb
sahf
cld
add
adcb
add
mov
inc
inc
fstps
add
mov
xchg
pop
push
sub
fcompl
sub
pushf
jae
jb
xor
stos
or
push
push
mov
stc
push
subl
adc
rolb
xchg
inc
lock
ret
or
inc
add
rcr
or
and
daa
pop
and
or
or
push
rorl
lret
pop
daa
mov
shlb
jo
cmpsl
dec
loop
icebp
mov
xchg
push
mov
cltd
jb
pop
out
push
ja
push
mov
push
push
sbb
subb
cmp
popa
jae
inc
adc
cwtl
mov
cmovl
push
sbb
sbb
or
cmp
jp
mov
adc
repnz
cmp
mov
mov
enter
pop
lods
leave
push
loopne
addl
pop
push
push
pop
push
cmp
jmp
push
inc
or
pop
sti
inc
xor
inc
push
ret
mov
push
adc
imulb
sysenter
add
dec
ficoms
xor
movsl
and
or
inc
adc
xor
cmp
in
sub
adc
sbb
jge
rolb
inc
arpl
jge
mov
sbb
decl
jg
cld
push
xchg
scas
rcll
fwait
sbb
add
icebp
xor
and
xor
xor
bound
jae
jmp
inc
add
add
jge
cmp
mov
fidivl
test
or
adc
pop
mov
mov
rorb
sub
sub
adc
xor
out
mov
dec
dec
out
adc
aad
lret
aad
clc
mov
sbb
xor
loopne
and
es
pop
les
adc
adc
test
cmp
push
add
push
insb
adc
pusha
adc
pop
push
push
adc
bound
wbinvd
fiaddl
cmc
sub
pop
ret
dec
or
inc
jbe
mov
inc
rcr
fisubs
push
adc
inc
mov
jb
popa
enter
insb
sub
loopne
ret
and
push
mov
scas
add
ret
pop
xchg
dec
xchg
sub
xor
xor
in
jo
ret
sbb
xchg
xchg
push
es
aaa
hlt
jmp
cmp
jmp
lods
or
mov
adc
dec
jle
push
xor
ljmp
push
cmp
movb
jne
dec
ret
pop
out
lds
fsubrp
or
sbbl
sbb
rcrl
std
or
pusha
push
push
and
pop
xlat
add
cmc
insl
or
dec
pop
mov
or
xchg
adc
or
movsb
add
cltd
cli
sbb
xor
cmpb
stos
adc
es
and
cld
mov
sub
je
in
loope
sub
jo
inc
push
sbb
push
fmuls
imul
cmp
cs
push
mov
adc
jno
movb
mov
pop
push
sbb
push
push
call
sbb
add
sbb
push
and
movsl
roll
xchg
lret
sub
fnstsw
pop
adc
mov
or
sti
jmp
ja
dec
adc
cmc
mov
arpl
add
es
mov
push
xchg
test
and
addl
add
flds
xchg
push
mov
dec
or
cli
hlt
mov
insl
shll
testb
push
sbb
pusha
insl
inc
aad
insl
mov
pcmpeqd
lea
push
imulb
jae
out
push
jne
push
clc
adc
test
dec
setbe
pop
ret
pop
sahf
push
push
or
test
pop
pop
pusha
xor
mov
cmp
daa
push
bound
jne
cmp
popa
adc
sbb
mov
out
mov
sbb
pusha
es
dec
fildl
fwait
std
ds
testb
pop
push
and
jmp
icebp
insl
or
xchg
lret
sbb
mov
or
adc
inc
mov
fildl
push
inc
cmc
bound
push
addl
inc
adc
sbb
sub
shll
dec
pop
test
push
push
ljmp
adc
in
aad
int3
sub
cmc
enter
enter
mov
pop
nop
add
jle
push
adc
add
jne
jnp
sbb
mov
sarl
add
add
ss
xchg
insb
std
mov
or
fstpl
xchg
and
pop
pop
inc
je
xor
fldcw
mov
arpl
mov
dec
pop
popf
add
mov
out
mov
lods
xlat
inc
push
xchg
in
stos
sahf
inc
sar
imul
rolb
inc
pop
lods
std
fiaddl
add
fwait
dec
xchg
jo
ljmp
ss
push
testl
dec
imul
jg
fcomps
or
repnz
mov
mov
and
rclb
js
dec
and
cmp
sbb
adc
aad
rorb
adc
sbb
add
push
xor
inc
nop
add
adc
push
lock
sub
pop
enter
jecxz
and
adc
ret
pop
adc
cmp
pop
movsl
adc
rolb
sub
outsl
add
push
andl
ror
inc
enter
mov
cmp
sub
dec
add
jno
push
lods
addb
add
mov
aas
ds
into
add
and
adcl
jae
push
add
add
or
xchg
add
into
cmp
popf
les
rorl
sahf
adc
mov
jecxz
sbb
sbb
jg
ret
mov
subb
imul
adc
jmp
jb
rcll
mov
sub
add
xchg
mov
pop
xlat
or
inc
test
nop
stc
sub
xor
fisttps
jp
dec
mov
and
test
push
pop
leave
jae
into
and
xor
out
mov
jmp
or
cmp
cmp
push
into
sub
adc
adc
es
in
push
mov
js
adc
leave
stos
add
push
pop
es
pop
and
sbb
adc
jmp
and
iret
sbb
sbb
push
test
jmp
repnz
adc
push
push
arpl
dec
sub
or
call
out
fcmovbe
pop
dec
mov
jg
addb
loop
out
insb
adc
movl
faddl
inc
add
or
add
xor
add
adc
shlb
pusha
mov
pushf
cmpsb
in
push
inc
dec
outsl
xor
cmp
addps
cmp
mov
cmpsl
dec
push
add
fildll
or
push
jp
mov
xchg
mov
in
mov
cli
and
dec
mov
or
cmp
inc
movsb
adc
jae
nop
fstps
and
sub
es
and
sub
adc
and
push
pop
aaa
xor
shlb
dec
filds
or
data16
jno
xor
pop
add
push
outsl
mov
dec
daa
inc
adc
push
movsb
fstp
ss
sub
mov
push
ret
add
shrl
fs
dec
and
dec
sub
cmpsb
mov
inc
fadd
rorb
mov
inc
imul
push
push
outsb
inc
mov
inc
mov
pop
push
pop
call
stos
add
push
or
pop
pop
ss
adc
inc
subl
inc
sbb
lahf
pop
jns
cmpsb
mov
inc
cmp
arpl
adc
jb
inc
mov
add
sbb
outsl
pusha
add
in
insb
dec
dec
push
out
in
mov
pop
dec
inc
pop
mov
fs
push
pop
or
pop
dec
or
inc
ljmp
lea
int3
mov
lea
scas
ret
movsl
sahf
je
dec
jns
fists
pop
pop
inc
imul
push
inc
je
pop
dec
jp
cltd
cmp
xor
jnp
lea
xor
scas
repnz
inc
xorb
xchg
mov
sbbb
inc
ret
fiaddl
shrb
jle
xor
or
stc
jge
and
mov
xchg
pop
adc
and
dec
sub
aam
or
call
aam
or
push
lret
mov
nop
xchg
enter
sub
test
push
mov
fistpl
push
jg
xchg
fcompl
test
lock
jbe
dec
inc
pusha
mov
mov
xchg
xor
jle
fucomip
adc
or
add
popf
sbb
popf
add
push
push
cs
or
movsl
mov
add
add
dec
jae
or
and
jno
inc
jmp
lret
add
ja
mov
mov
add
push
push
add
lea
sub
aaa
inc
sbb
ret
dec
aam
add
push
lods
sbb
or
in
fdiv
mov
fs
add
movsl
loopne
push
jp
push
cmp
sub
push
aam
push
loope
lods
pop
mov
sbb
je
sahf
dec
mov
lret
cmp
sbb
push
mov
pop
pusha
sbb
popl
aas
addb
xorl
test
xchg
xor
in
outsl
inc
mov
movb
or
and
or
cmp
xor
imul
movb
mov
push
jne
dec
arpl
add
jo
cwtl
and
inc
sub
and
popf
lock
xchg
clc
pop
push
add
pop
adc
inc
sbb
loope
sbb
adc
mov
jl
sub
dec
jb
sbb
mov
pop
pop
adcl
rclb
test
cmpsl
addl
pushf
inc
mov
mov
push
cmp
xchg
das
and
jbe
push
cs
or
and
add
dec
push
cmp
dec
addr16
outsl
dec
out
std
adc
push
or
push
pop
inc
xor
sub
es
repnz
inc
mov
and
xchg
push
or
rolb
or
dec
movsb
push
fadds
xchg
popf
sub
xchg
movsb
jne
fwait
xchg
xchg
pop
and
dec
js
inc
adc
xchg
pop
inc
add
pop
and
xor
test
pop
or
adc
roll
pop
mov
pop
mov
inc
adc
push
arpl
and
inc
fbstp
inc
mov
repz
jnp
pop
leave
adc
pop
and
add
lods
dec
push
sbb
push
pop
xchg
sbb
shrb
pop
daa
or
jae
mov
enter
jne
pop
mov
inc
adc
pop
sbb
inc
imul
add
and
jl
jl
jbe
adc
inc
je
or
xchg
add
nop
add
or
loope
hlt
xorb
push
sbb
add
or
stos
or
jnp
pop
push
nop
mov
push
inc
sbb
loopne
sub
pusha
xchg
mov
push
xchg
mov
xor
cmp
add
add
push
iret
repz
pop
jno
xchg
cmpsl
mov
rcll
pop
dec
mov
cmp
jae
push
sbb
or
add
insl
xchg
push
mov
jmp
pop
stc
sti
add
dec
test
mov
sbb
add
aas
movsl
and
lcall
ljmp
mov
cmp
add
lahf
add
out
ret
pop
cmp
outsb
xor
and
sahf
mov
push
outsb
mov
ret
lods
and
xor
mov
adcl
jmp
int3
adc
js
push
fimull
clc
lahf
adc
jl
mov
pop
mov
orl
or
push
in
inc
add
or
cmp
lret
dec
adc
cmp
mov
int
xor
sbb
add
mov
pop
or
inc
dec
xor
test
insl
sub
and
xor
inc
xchg
xchg
iret
in
jo
sbb
xor
or
pop
in
add
inc
add
add
mov
clc
cld
or
dec
push
push
adc
jmp
xor
inc
dec
es
add
mov
push
fld
add
add
cwtl
daa
push
fldl
rcrb
mov
jo
xchg
sbb
dec
mov
cmp
cmp
sbb
add
or
fsubl
lds
hlt
int3
add
adc
sarl
loope
adc
xor
jns
mov
pop
test
adc
out
imul
out
jg
pop
xchg
jnp
and
or
mov
or
adc
add
xchg
push
ja
inc
inc
and
jae
pop
inc
inc
int
xchg
xchg
sub
cmp
movsb
jne
jo
sahf
fcompl
or
and
fnstcw
test
push
cmp
movsb
jb
pop
and
or
mov
adc
add
sbb
ret
push
push
imul
subb
inc
insb
and
outsb
sub
adc
cltd
out
adc
popa
or
mov
lods
cmp
shr
loope
sub
push
inc
xchg
clc
arpl
pop
je
cmp
outsl
push
adc
sub
xor
rcll
cmp
dec
sbb
jno
push
test
cmc
xchg
xor
imul
imul
das
mov
dec
arpl
scas
in
dec
rorb
mov
or
mov
imul
mov
out
or
xor
jb
mov
imul
push
xor
jns
pmulhw
inc
push
fisttps
or
dec
lahf
sub
mov
inc
pop
dec
mov
pop
inc
fsubl
ds
psraw
addl
push
lock
sahf
popa
ret
adc
movl
push
adcb
push
add
mov
movntps
dec
movl
stos
sbb
leave
cmp
jbe
loopne
mov
pop
imul
outsb
nop
cmp
insb
add
mov
repnz
push
adc
jecxz
subl
lret
and
or
ret
ror
rclb
lea
xchg
dec
add
fwait
or
inc
pop
xor
pop
adc
pop
rolb
pop
fstpt
cmp
es
lock
xor
lock
cmp
lods
movsb
mov
test
mov
push
inc
enter
pusha
movsb
les
push
push
add
xchg
push
mov
movsb
xchg
mov
fs
or
jl
pop
mov
rorb
and
adc
xchg
xor
push
inc
sub
negl
icebp
add
jbe
dec
cmp
test
sbb
cmp
sub
fsubs
jne
xlat
xor
jp
mov
in
dec
push
pop
xchg
pop
incl
leave
rorb
gs
jle
clc
andb
jl
mov
jge
or
mov
shlb
or
ret
mov
add
fimull
mov
or
adc
shl
popa
push
sbb
add
lds
sub
sbb
mov
adc
add
inc
inc
add
pop
push
dec
or
add
inc
xchg
inc
push
mov
xchg
lret
cmp
pop
cwtl
and
inc
jno
movsb
aas
sub
add
dec
dec
inc
cmp
enter
jg
jne
lea
push
dec
hlt
cmp
push
xchg
loope
jl
jmp
mov
mov
or
adc
add
sbb
pop
add
stos
rorb
and
sub
xorb
or
push
cmp
inc
sub
aam
test
stos
sbb
inc
in
pop
sbb
mov
push
push
inc
push
les
push
je
test
lahf
rcll
js
loopne
nop
jo
divl
cs
adc
jg
xor
incb
xchg
sbbl
jae
sub
push
add
adc
sbb
repnz
inc
push
add
jno
addr16
mov
ret
and
lea
loop
scas
jmp
sub
mov
repz
outsb
push
jbe
stos
rorl
orl
bound
push
mov
repnz
add
inc
dec
sahf
cmpsl
sbb
cs
push
add
mov
add
pop
jle
push
push
lahf
mov
mov
mov
xchg
cmp
sub
mov
lds
mov
add
and
push
xor
hlt
sub
sub
lahf
pusha
push
sbbw
je
jmp
push
es
push
fnsave
and
sbb
fs
xchg
inc
sub
add
mov
jb
mov
push
call
pop
add
and
cmpl
adc
data16
or
dec
pop
pop
pop
repnz
lahf
pusha
and
pop
cmp
jb
stos
je
inc
pushf
mov
mov
fisubrs
mov
push
mov
loopne
push
mov
mov
and
imul
fisttps
jecxz
or
xchg
jo
test
stc
mov
nopl
fisubrl
pushl
dec
push
mov
sub
mov
xchg
dec
pop
outsb
sbb
add
dec
jge
sbb
addl
movsb
mov
inc
lods
pushf
mov
pop
inc
sti
pop
addb
imul
bnd
xchg
lock
push
je
adcb
mov
mov
jmp
out
xor
popa
sbb
xchg
orb
push
dec
sbb
pop
push
in
out
dec
or
mov
mov
add
ficomps
sub
jl
xor
push
sahf
add
or
or
jmp
add
jmp
push
cmpsl
cmpsl
mov
adc
xchg
mov
push
and
xchg
jb
cmpsl
inc
repz
inc
fadd
adc
pop
pop
mov
test
or
es
add
adc
cli
xchg
or
leave
jns
inc
push
cmp
sbb
fisttps
ss
shr
shll
adc
dec
and
dec
jmp
shrl
loopne
imul
loop
je
ret
lret
and
fnclex
test
aas
or
rorl
test
adc
test
and
shlb
fistl
femms
xchg
xchg
xchg
dec
pop
jo
or
adc
mov
sub
inc
lods
add
mov
sbb
popf
adc
inc
or
cmp
popa
or
adc
add
pusha
push
ljmp
push
add
sub
cmp
or
nop
or
or
and
xor
mov
adc
jo
sbb
and
shlb
bound
pop
inc
xchg
and
pop
jmp
mov
or
pop
push
loopne
xchg
mov
jmp
imul
jl
mov
push
inc
mov
push
or
in
addb
push
pushf
push
add
add
or
xor
cmp
dec
pop
inc
adc
mov
divb
adc
into
dec
jl
rolb
stos
mov
xchg
add
sub
add
neg
sub
dec
gs
jne
and
sbb
pop
mov
add
push
jns
lock
or
sub
dec
push
jns
push
push
inc
add
inc
sub
push
push
mov
fisubs
inc
shrb
test
jo
pop
leave
adc
dec
stos
in
sbb
dec
and
add
and
or
and
and
xor
nop
pop
add
dec
adc
and
add
leave
xchg
cmp
sbb
inc
jb
push
mov
inc
rcl
pop
mov
lret
xor
shlb
lcall
pusha
lock
cmpsb
mov
xchg
dec
add
cmp
or
movsb
cmp
xchg
sbb
mov
push
or
inc
pusha
push
pxor
pop
fs
xor
pop
nop
or
pop
leave
outsl
xor
adc
rcll
cmpsb
dec
orl
fldl2e
ret
and
shl
fwait
push
push
aad
mov
shll
push
push
and
or
dec
jle
inc
pop
push
das
call
ficompl
rcr
mov
cmp
add
popf
mov
pop
ret
mov
mov
lock
or
insl
sbb
pop
aam
pop
cmpsb
xchg
in
add
xor
push
pop
gs
add
mov
cmovbe
or
cmp
jo
sbb
xor
icebp
add
push
cmpsb
add
add
or
xchg
inc
fidivl
movsl
push
orl
inc
xor
test
inc
cs
mov
enter
fs
fsubrl
int
adc
jge
clc
mov
or
mov
jmp
lock
imul
jb
jb
lea
mov
sbb
and
adc
pop
bound
fiaddl
mov
inc
popa
scas
dec
push
push
sbb
push
xlat
cmp
jmp
aad
into
int3
or
and
addb
and
xlat
sbb
ss
or
and
dec
aam
insb
in
inc
ljmp
push
push
cmpsl
push
sub
or
push
sub
or
push
xlat
das
mov
test
sbb
dec
std
sub
dec
sti
push
xchg
shrl
pop
xchg
add
add
xchg
push
orb
mov
inc
jno
dec
adc
lea
loope
lds
addl
mov
push
mov
mov
sbb
ja
rorb
push
aaa
inc
pop
loopne
adc
xor
xchg
aam
dec
es
xor
and
xorb
xor
es
and
push
xchg
xchg
inc
sahf
ss
inc
pop
push
lods
mov
mov
imul
mov
incl
iret
repz
dec
es
jbe
loop
test
jl
daa
mov
nop
stos
test
cmpsl
or
das
and
sub
mov
adc
mov
insl
mov
test
js
inc
sub
sub
xchg
mov
test
pop
loopne
mov
sarb
cmp
mov
aad
out
mov
addl
sahf
mov
sbb
adc
repz
cwtl
fadds
shr
in
lahf
pusha
xchg
add
sahf
xchg
loopnew
mov
adc
jo
insb
or
rorl
add
add
xor
mov
pop
shl
stc
add
or
cmp
repz
or
iret
shl
fisubl
dec
lahf
and
rorb
enter
jl
adc
dec
nop
movsl
jmp
sbb
mov
test
test
push
ds
cmpsl
push
push
fisubs
dec
ljmp
aas
loope
out
mov
gs
push
in
nop
or
and
sbb
inc
lods
sub
cmpsb
pop
or
push
and
xchg
or
and
and
push
inc
mov
and
fs
add
xlat
test
mov
ds
sbb
xorl
mov
jle
push
mov
xor
mov
dec
push
aad
mov
and
xchg
pop
pop
dec
push
sub
or
sbb
je
test
xchg
ds
loopne
dec
mov
xchg
dec
and
push
push
scas
jle
inc
cli
inc
dec
jb
sbb
mov
or
mov
lock
xor
jbe
push
mov
outsb
aas
leave
inc
xor
dec
dec
jne
pop
inc
pop
jne
sbb
add
mov
push
mov
pop
and
mov
add
adc
inc
movsb
adc
mov
lock
prefetcht2
push
mov
das
divl
push
adc
add
aam
or
fwait
leave
cltd
sub
push
inc
arpl
insb
cmp
adc
mov
test
mov
js
rclb
push
mov
push
mov
cmp
sbb
push
mov
or
push
pop
add
push
xchg
clc
jg
mov
mov
jp
mov
inc
jb
xor
adcb
push
test
add
and
inc
imul
arpl
push
xchg
rcll
inc
and
xchg
faddl
and
inc
jo
outsb
sub
lock
push
cld
pop
popa
dec
sbb
push
jne
jmp
push
push
push
mov
cmp
adcl
ret
add
dec
dec
dec
mov
test
push
mov
dec
ds
push
cmp
loop
xor
inc
dec
fistpll
cmp
and
sbb
daa
and
or
push
sbb
nop
mov
mov
and
and
and
push
mov
dec
xor
or
dec
nop
or
push
mov
out
pop
sti
das
inc
push
dec
push
imul
adc
cmp
cmp
loopne
sub
mov
mov
xchg
scas
pop
push
jecxz
mov
aam
or
xchg
pop
push
pop
mov
mov
cmp
add
je
inc
mov
inc
add
lods
or
push
mov
sbb
test
sbb
mov
or
add
xor
inc
dec
lret
or
or
pop
rclb
lret
call
cmpsl
and
xchg
xchg
aad
jne
mov
dec
and
add
or
adc
sbb
or
iret
inc
push
and
add
push
lock
je
test
jne
movsl
mov
or
cmpsb
sbb
push
or
lock
pop
inc
pop
and
ret
les
dec
jg
push
push
inc
adc
inc
adc
mov
sub
add
test
add
lret
inc
mov
cwtl
sbb
add
iret
cmc
sub
icebp
adc
add
dec
and
xor
pushf
sbb
and
or
gs
push
pusha
adc
shl
or
stos
dec
dec
pop
xor
push
push
pop
pop
ds
adc
push
cmpsl
sub
iret
push
and
and
xchg
dec
loope
dec
loop
es
and
add
mov
pusha
cmpsl
mov
loope
xor
mov
movsl
add
push
xor
or
xchg
push
movsl
in
dec
ds
xchg
xchg
cld
popa
sub
or
push
inc
jno
lock
pushl
or
movsl
xchg
mov
add
push
not
sub
cmp
aas
xor
sub
inc
js
xor
aad
jnp
jl
or
inc
jg
xchg
mov
inc
dec
imul
add
rol
push
adc
cmpsl
loopne
inc
fidivl
mov
fnstenv
addr16
cmp
push
add
ret
push
jns
add
loope
jae
loopne
inc
sub
mov
mov
addl
push
sti
mov
xor
and
cltd
sub
pusha
loope
xchg
stc
xchg
enter
add
sbb
daa
ss
add
jp
add
dec
dec
ja
je
aad
add
adc
xchg
sbb
or
add
arpl
dec
out
add
into
clc
dec
push
jle
xchg
push
and
jge
out
outsb
jnp
mov
jg
inc
cmpb
scas
push
push
jo
mov
jp
in
cmp
lea
test
inc
jmp
mov
shrb
jecxz
and
adc
sub
and
and
inc
cs
sub
shlb
inc
je
sub
inc
jbe
mov
mov
adc
inc
mov
jnp
push
ret
test
push
inc
jmp
cpuid
mov
out
push
ljmp
and
rolb
and
call
inc
push
mov
aas
xchg
sub
push
jno
jl
pop
ret
jecxz
adc
inc
inc
or
fimull
inc
scas
lods
cwtl
cmp
test
aas
imul
imul
and
dec
and
or
jo
jo
das
in
inc
sarb
pop
je
and
or
xor
or
inc
push
inc
inc
jge
push
sub
adc
iret
mov
push
and
add
and
jecxz
pusha
sbb
xor
out
cmp
leave
fmull
pop
test
inc
sbb
pop
cmc
sub
scas
je
cld
lea
xchg
mov
adc
push
inc
inc
push
mov
inc
adc
jge
sub
lea
or
in
add
jnp
lahf
adc
lods
push
inc
jb
push
dec
and
fs
stos
push
cmpsl
stc
mov
xor
les
pop
call
cwtl
ds
sbb
imul
cmc
je
dec
fimuls
or
or
pop
add
rorl
mov
or
popf
push
pusha
xlat
and
jmp
fisttpll
rcrb
test
adc
mov
push
mov
pop
dec
push
nop
push
or
test
or
cmc
and
test
js
push
jl
jmp
xor
mov
js
and
popl
jae
mov
jmp
aaa
sub
jmp
leave
mov
or
push
or
les
add
jno
mov
mov
xchg
sbb
and
je
sub
cwtl
loop
add
dec
mov
add
push
imul
pusha
imul
in
sbb
and
push
jbe
lret
arpl
mov
pop
add
enter
pop
je
push
test
sbb
mov
sub
xchg
adc
dec
enter
push
sbb
inc
xor
inc
jbe
dec
or
adc
and
add
add
popl
push
add
push
dec
add
sub
repz
test
lods
and
xchg
add
inc
dec
jo
sbb
mov
jecxz
ret
lahf
push
addr16
cmp
repnz
or
lods
mov
dec
sbbb
insb
xchg
pop
leave
adc
inc
add
cmp
ret
cmpl
lock
adc
inc
inc
pop
aas
fcompl
jns
jne
jo
or
or
sub
sbb
out
add
mov
pusha
jne
push
push
add
insl
or
mov
insl
sub
push
adcb
mov
aam
clc
mov
inc
pop
adc
pop
or
cmp
jp
xchg
push
ret
adc
imul
adc
inc
ljmp
push
pop
inc
adc
cmp
inc
pop
jnp
sub
dec
push
adc
push
sub
call
das
adc
pop
cwtl
xor
aam
mov
push
inc
dec
xchg
out
mov
adc
cmp
pusha
and
push
xor
jge
sub
jmp
nop
enter
sub
or
into
xor
dec
inc
mov
push
pop
and
imul
imul
add
addr16
mov
xchg
mov
mov
xchg
adcl
sbb
lcall
inc
mov
mov
jbe
nop
pop
imul
jmp
jg
andl
add
popa
pop
lcall
lods
fadd
push
sbbl
pop
fwait
cmpsb
or
orb
or
out
fidivrs
cmpsl
cwtl
scas
push
mov
ret
pusha
sbb
mov
out
adcl
mov
in
cwtl
std
es
or
or
xchg
mov
dec
mov
inc
dec
xchg
lock
ret
dec
add
push
push
movsb
sub
test
cmp
les
jne
dec
orl
popf
and
adc
loope
fnsave
adc
test
xchg
jno
cmp
dec
pop
inc
rcll
dec
test
pop
inc
dec
lds
add
xchg
add
pop
pop
inc
pop
imul
inc
ret
pop
push
out
adc
cmp
lods
pop
int3
enter
shrl
push
or
imul
lock
mov
shlb
add
xchg
hlt
aam
rclb
push
xor
xor
xor
add
mov
lahf
rcrb
dec
or
gs
xchg
and
fistl
xor
push
push
shl
add
test
and
mov
mov
popa
cld
fs
sub
adc
push
and
mov
push
sbb
dec
pop
xchg
sub
sbb
pusha
and
cmpsl
push
inc
cmp
adc
test
sbb
sbb
mov
or
stos
sbb
movsb
adcb
inc
add
mov
inc
aam
call
pop
test
add
faddl
pop
ret
xchg
mov
imul
popa
inc
imul
adc
sub
jp
push
dec
cmp
jg
pop
push
and
andb
adcl
pusha
test
adc
jg
dec
rolb
popa
jno
mov
add
ret
and
testl
mov
and
xor
cmp
mov
stc
inc
fsubrs
pop
outsl
icebp
cld
sbb
adc
jge
movl
sub
cmpsb
ror
stos
add
push
jb
ret
mov
xchg
or
cmpb
scas
add
pop
adc
pop
test
add
mov
inc
add
jae
add
add
push
adc
lock
and
fwait
outsl
or
or
pop
repnz
adc
mov
adc
mov
dec
jl
xor
push
sub
sub
push
dec
in
xor
mov
lea
jge
sub
mov
outsl
daa
pop
movl
or
adc
dec
loopne
push
push
push
jmp
scas
jg
adc
sub
icebp
push
subb
sub
mov
jne
add
xor
jo
and
push
inc
fs
dec
xorb
inc
xchg
or
out
add
mov
add
scas
or
add
pop
inc
dec
sbb
jne
lret
in
mov
inc
inc
sbb
mov
xor
and
mov
sbb
or
xor
adc
mov
and
and
clc
adc
jne
jne
inc
out
sbb
int
push
add
jns
and
push
push
xchg
sub
add
lcall
mov
dec
lods
or
nop
jnp
mov
push
jmp
js
jo
ja
push
jecxz
inc
mov
pop
ds
push
hlt
push
dec
ret
xor
mov
pop
gs
loop
adc
jge
jmp
add
pop
lret
dec
shll
sub
push
sbb
jg
xchg
mov
mov
push
insb
cmpsb
pusha
shll
loop
inc
clc
add
call
jnp
repnz
fbstp
dec
adc
js
adc
adc
and
negb
pop
add
leave
test
mov
gs
or
or
fdivr
xchg
rclb
push
sub
rclb
push
ficoms
sahf
xlat
mov
add
roll
inc
aas
push
clc
sub
test
sub
js
shll
pop
jl
sbb
add
mov
xor
push
adc
xor
lret
cmp
je
es
mov
pushw
pop
jg
and
sub
add
loope
xchg
xchg
sub
lea
inc
and
push
mov
xor
popa
ret
push
pop
nop
hlt
pop
js
ror
fsubl
mov
inc
mov
inc
cs
push
add
push
sub
dec
xor
pusha
pop
inc
or
push
xor
jb
and
push
xor
and
clc
cmp
dec
xchg
lods
mov
dec
js
xchg
dec
adc
jns
in
sbb
inc
push
insl
or
push
pop
aas
cmp
or
sahf
enter
dec
invd
bound
sub
test
add
push
insl
popa
dec
je
add
or
mov
addr16
add
jp
cmc
inc
adc
adc
test
push
js
sbb
inc
add
inc
sbb
pop
inc
call
add
xor
push
mov
shlb
add
sub
fcomps
leave
and
lock
inc
push
push
push
negl
cmp
test
or
sbb
adc
sbb
daa
in
dec
xor
add
cwtl
mov
and
rcrb
mov
mov
movsl
nop
sub
ss
in
imul
mov
add
lcall
mov
adcb
push
mov
adc
add
add
loope
mov
add
adc
pop
xor
jo
mov
mov
leave
fstpt
jae
outsb
in
mov
ret
jg
addb
js
mov
pusha
insb
mov
add
lcall
cld
xor
pop
mov
sbb
jg
je
dec
fs
mov
adc
xchg
jp
test
test
pusha
ret
jg
jb
rcrb
pusha
pop
mov
leave
push
pusha
inc
and
cs
test
sub
jg
fistl
nop
push
inc
ja
push
pop
jbe
pop
aas
pop
ja
data16
cmp
sbb
push
sbb
sbb
push
mov
pop
mov
mov
shll
inc
and
push
inc
sub
and
mov
mov
test
addl
adcl
inc
aas
inc
add
cmpps
dec
mov
aam
nop
cmpsl
mov
mov
fistpl
aas
cmpsb
ficoms
mov
add
sti
add
into
add
or
adc
rolb
sub
insl
mov
bound
stc
and
jno
mov
andb
and
pop
or
xchg
sub
inc
popa
bound
outsb
fadds
cmp
adc
and
mov
sub
and
pop
fists
adc
or
and
inc
cmp
and
inc
ret
inc
dec
fwait
lcall
xor
push
xor
out
dec
mov
push
push
adc
cmpl
sbb
mov
dec
lea
aam
xchg
fs
hlt
adc
rcl
sub
cmp
and
lret
lock
cli
lock
sbb
add
cs
dec
dec
imul
mov
sub
mov
push
jmp
dec
fcoml
test
push
xor
test
clc
decl
and
in
icebp
mov
das
xor
icebp
rol
add
mov
rcll
add
xchg
inc
cmpsl
adc
cmpsl
sub
and
movq
mov
mov
cmp
daa
push
push
call
iret
push
add
push
dec
push
or
movmskps
push
fsubs
pop
daa
pop
jno
jns
imul
adc
push
dec
jle
or
inc
mov
mov
push
or
mov
aas
adc
enter
pop
adc
pop
push
xor
dec
enter
mov
repnz
inc
add
dec
dec
dec
cltd
mov
dec
cltd
jl
je
sbb
mov
ret
mov
add
adc
sbb
cmc
jo
mov
aaa
xor
add
insb
repz
es
mov
xor
insb
and
pusha
mov
or
push
cmp
jl
inc
stos
push
mov
sub
sub
push
push
das
push
jl
cmp
out
cmp
aaa
pusha
cmp
inc
pop
pop
dec
mov
ret
aad
jae
pop
add
je
or
mov
lock
sbb
ret
xorb
dec
js
aam
push
xlat
out
or
pushf
mov
sub
jb
sub
lock
dec
pop
enter
add
xchg
jo
sti
and
dec
stos
push
and
in
mov
inc
cs
call
enter
in
cs
aam
push
in
fadds
xchg
lock
jno
inc
movsl
rclb
popw
jmp
push
mov
or
mov
xor
dec
inc
lock
out
inc
or
adc
push
add
xchg
int3
adc
shrl
jmp
loopne
icebp
adc
or
push
pop
adc
or
cmpsb
jo
inc
mov
jo
inc
in
jns
adc
or
or
movsb
mov
push
push
jne
dec
lahf
notl
push
jb
jmp
or
fcoml
jle
test
ljmp
pop
adc
push
shr
inc
or
xor
xchg
xchg
pop
pop
jne
inc
dec
mov
les
adc
xor
or
pusha
ss
or
cmp
std
dec
or
jmp
dec
xor
or
and
aaa
or
ljmp
push
and
es
jge
xchg
or
add
out
mov
pop
sbb
cmc
jbe
or
pushf
push
xor
cmp
shl
leave
fisubrl
push
inc
int3
push
add
or
jp
aam
ffree
jbe
lock
or
jo
xchg
push
orw
mov
enter
jnp
adc
and
decb
adcb
decb
sbb
xor
testb
jne
movzwl
nop
push
cltd
pop
idiv
push
xor
or
adc
adc
add
outsb
loop
call
jmp
andl
cmp
lcall
mov
inc
adc
lea
adc
movsl
movsl
pop
push
add
jecxz
rorb
mov
xor
lods
cmp
in
nop
adc
cmp
lock
mov
insb
mov
in
sti
mov
sbb
fstp
push
es
and
shrb
cltd
pop
idiv
je
push
aad
ja
jg
pop
adc
je
dec
jbe
adc
sbb
cmp
push
mov
xchg
sbb
mov
pop
pusha
fildl
or
sbb
and
rcrl
xchg
hlt
fstpl
pop
fnsave
rcrb
aas
dec
nop
push
dec
xchg
fldl
push
add
mov
sahf
in
aaa
nop
dec
mov
or
rcrb
mov
jbe
enter
inc
out
push
nop
aam
inc
add
sub
rcr
push
push
pop
das
or
pop
mov
test
jae
fstl
in
fsubrl
pop
pop
aaa
or
adc
addb
sub
sub
pop
mov
mov
adc
cld
and
inc
mov
cmp
movsl
or
inc
hlt
sbb
mov
sbb
cli
js
adc
dec
or
lock
push
or
idiv
mov
dec
adc
and
mov
ret
mov
push
mov
popa
call
push
lock
stos
inc
insl
and
push
xorb
mov
mov
push
xorl
jne
cmp
pop
sbb
jne
cmp
out
xchg
sub
or
rol
in
xor
imul
rcr
inc
dec
pop
pusha
scas
inc
outsl
pop
inc
or
loop
mov
aaa
push
inc
sar
inc
mov
cmp
push
jle
push
mov
out
or
push
lock
lods
inc
int
xor
or
or
cltd
shr
jb
mov
fildll
pop
addr16
lock
mov
jo
rcrb
leave
call
mov
inc
sub
in
lret
adcb
orb
arpl
pop
cmc
jo
adcl
jae
add
out
nop
sbb
out
pop
mov
lea
adc
or
loope
ds
inc
sub
add
push
jbe
adc
lock
dec
xchg
shlb
fadds
sbbb
xor
add
xchg
adc
dec
and
inc
push
cld
dec
lock
insl
fcmovnbe
cmp
adc
clc
add
dec
push
jo
sbb
jns
push
add
call
sbb
push
loopne
fmull
pusha
rorl
sbb
add
imul
mov
xor
xor
push
in
sbb
sbb
call
and
cwtl
mov
mov
adc
push
test
pop
je
fs
dec
divl
add
adc
inc
add
push
iret
pop
lret
cli
adc
or
xchg
cwtl
add
arpl
push
pop
clc
fldl
and
fcom
test
sbb
lahf
mov
xorl
add
rcrb
inc
fcomps
jo
pushf
push
inc
addr16
pop
pop
popf
pushl
dec
or
push
push
in
adc
xchg
sbb
push
rolb
or
into
mov
xchg
jge
add
es
cmp
loopne
roll
mov
add
add
mov
mov
cmp
pop
adc
jbe
cltd
cwtl
cmpsb
xor
mov
sub
sub
dec
les
and
add
xchg
push
je
test
dec
pop
adc
hlt
dec
pop
loope
xor
inc
cli
or
imul
and
push
cld
jp
pushl
or
lret
icebp
ret
cmp
pop
das
lock
xor
push
dec
test
mov
sub
add
shll
push
add
ret
movsl
movl
adc
orl
xor
cmpl
cmp
insb
scas
lcall
jo
fs
cmpsl
dec
and
test
dec
in
ror
add
pusha
add
xchg
outsb
mov
pop
aaa
pop
mov
out
and
inc
pop
ja
int
push
sbb
and
dec
je
dec
nop
rol
adc
or
cmp
lcall
icebp
js
dec
dec
pop
add
push
pop
mov
inc
dec
or
mov
lds
push
inc
pop
mov
add
cs
sbb
je
xchg
adc
int
push
cmp
sub
fcoms
test
adc
push
or
push
movsb
xor
sub
push
or
push
mov
pop
push
and
push
push
push
mov
sub
aam
cmp
lret
push
out
or
jmp
mov
lret
in
xor
add
loopne
test
push
imul
adc
and
pushf
xchg
xor
mov
or
push
cltd
clc
mov
or
push
inc
add
pop
xlat
jb
test
mov
push
sbb
cmp
scas
sub
imul
std
inc
sbb
cmp
insl
or
cs
and
repnz
jnp
orb
push
mov
das
aad
push
cmp
jle
push
add
mov
sahf
loop
push
pop
pop
cmpl
or
sub
mov
ss
push
and
jae
and
or
pop
mov
mov
lea
movsl
add
push
pop
dec
and
pop
fidivl
pop
jb
lods
push
lods
push
xor
pusha
bound
test
and
inc
xlat
insb
jne
sbb
ret
mov
dec
cmp
inc
fs
and
mov
inc
or
inc
stos
and
shlb
popf
sub
xor
xor
lods
insb
jle
add
mov
adc
lock
bound
les
dec
cltd
fists
push
xor
filds
pop
sbb
rclb
inc
xadd
sub
push
mov
mov
pop
jns
cmp
adc
insl
add
push
in
enter
add
dec
sbb
jbe
add
shrl
add
fildl
in
dec
mov
addl
imul
dec
inc
loop
mov
xchg
inc
fsubs
out
push
sub
je
es
scas
insb
into
clc
sbb
pusha
or
cli
mov
jmp
hlt
mov
lret
into
pushf
push
cmp
push
cmp
xlat
insl
out
and
jmp
js
xor
add
and
shlb
shrb
xor
jo
dec
ss
push
xor
push
mov
sub
dec
or
adcb
xor
mov
xchg
outsl
mov
push
arpl
test
or
jmp
dec
jecxz
adc
stos
mov
mov
mov
popa
je
xchg
mov
into
divl
lret
test
dec
mov
call
or
push
mov
xchg
xchg
and
add
inc
je
int3
inc
add
adc
cs
jno
scas
ret
mov
rorb
or
inc
mov
out
subl
add
dec
cmp
push
inc
or
sub
sbb
mov
jl
mov
pusha
mov
sbb
xor
pop
enter
pop
adc
in
inc
sub
dec
movsb
and
add
cmc
addl
fmul
mov
xchg
arpl
mov
mov
or
call
or
sub
and
out
adc
jne
test
sub
ja
pop
outsl
fsts
lock
icebp
cmp
mov
inc
xorb
icebp
add
js
push
iret
inc
xchg
cs
sbb
fs
dec
sub
je
push
sbb
out
xchg
xchg
pop
mov
call
sbb
insl
sbb
push
mov
push
aam
in
xorb
adc
jae
cmp
fstpt
mov
xor
inc
js
push
aaa
stc
mov
and
and
dec
and
cmp
sbb
push
jae
adc
pusha
js
adc
mov
xor
sub
push
inc
cmp
lds
and
dec
jno
nop
cmpsl
loop
fwait
and
cld
xchg
mov
push
scas
outsl
push
or
jne
cmp
mov
sbb
or
or
dec
sbb
ja
jb
lret
push
out
addl
jmp
sub
jae
and
adc
inc
push
jl
cmp
adc
pop
decl
sarb
and
stos
push
mov
pop
sub
sub
pop
inc
adc
lret
push
mov
push
mov
adc
pop
add
dec
push
inc
fs
pop
dec
enter
incl
jne
inc
dec
sbb
add
jo
mov
andb
push
clc
addb
pop
dec
scas
lock
imull
sub
ljmp
xchg
rolb
ja
mov
xchg
aas
data16
sub
add
and
arpl
shlb
mov
or
lea
in
std
dec
mov
rorl
dec
ss
shl
fcmovu
mov
dec
or
dec
push
pushf
jbe
outsl
sub
icebp
and
adcl
inc
rolb
leave
and
daa
out
and
pop
cmpl
and
push
lret
mov
pop
mov
cmp
fstps
addr16
call
es
sbb
es
dec
xor
adc
adc
cmpb
popa
aas
clc
and
adc
add
mov
push
dec
dec
daa
sub
out
push
jo
cld
mov
imul
sarb
jmp
and
adc
cld
inc
cmp
add
add
adc
mov
inc
les
insl
and
inc
adc
push
mov
inc
xor
shlb
add
adc
pusha
mov
aam
into
and
push
stos
mov
andb
imul
jo
sbb
lock
push
and
test
sahf
adc
dec
imul
mov
inc
or
cs
dec
loop
bound
jne
dec
stos
xchg
add
push
cmp
sub
sbbb
mov
clc
je
cld
and
dec
sub
cmp
adc
dec
inc
xchg
xchg
aam
sub
adc
lcall
push
or
push
xor
push
and
insb
dec
cmp
data16
jbe
mull
add
add
jo
sub
call
inc
sbb
fs
adc
mov
pop
scas
mull
rcl
mov
dec
jg
std
adc
ja
adc
iret
nop
xor
inc
jmp
lret
sbb
cmp
add
push
cmpb
push
mov
cmp
sbb
les
js
pop
movsb
clc
dec
add
add
mov
mov
dec
sbbl
mov
push
ror
sbb
js
and
or
into
jnp
mov
adc
and
mov
adc
pop
aam
inc
aas
aad
jbe
push
push
xor
add
shrb
cwtl
test
mov
ljmp
ficompl
iret
test
push
jle
push
add
je
and
xchg
enter
shll
lret
bts
or
je
mov
adc
jbe
imul
cmp
push
dec
pushf
loope
hlt
fldl
cmc
pop
fs
popa
and
cmp
adc
or
pop
aas
pop
add
lret
loopne
mov
mov
adc
push
ja
xor
loope
or
cmp
push
cmp
sub
mov
das
push
lods
push
cli
mov
inc
in
test
push
add
xchg
test
pop
roll
gs
mov
dec
mov
lods
pop
popl
ljmp
popf
popf
cmp
aas
stos
jne
mov
adc
fdivp
shlb
pop
sub
inc
lahf
cld
fs
jl
and
xor
gs
int
mov
mov
pop
and
or
sti
xchg
add
add
orb
pop
loop
jp
sbb
lock
sbb
and
cs
insl
xchg
hlt
jne
push
sub
sti
add
hlt
jbe
mov
shll
jb
das
scas
cvtdq2ps
stc
sbb
inc
jns
shr
xchg
shlb
rcrb
push
lahf
jle
xchg
nop
mov
sbb
ret
pop
mov
adc
loope
sarb
and
mov
fisttpl
pop
dec
sbb
shr
pop
xchg
add
adc
fsubl
mov
xor
clc
pop
stos
aad
push
sbb
lcall
push
mov
es
test
add
jne
and
fcmovne
sbb
add
push
in
jmp
push
mov
pop
sahf
fdivrs
repz
sbb
pushf
loope
xor
nop
scas
mov
jmp
or
adc
pop
inc
dec
cld
test
fs
cmp
or
out
xchg
push
xchg
cwtl
pusha
jl
sti
jbe
cmp
aam
jae
inc
lds
pushf
pop
add
call
sub
sbb
jp
jmp
add
test
mov
inc
sub
pop
enter
addr16
rolb
cmp
loop
dec
cwtl
jecxz
rorl
pusha
insl
fsubl
push
inc
loopne
jns
push
sbb
sbb
push
mov
add
adc
xorb
add
in
popf
out
push
sbb
cmp
cbtw
ljmp
call
jne
test
je
mov
inc
cmp
xor
enter
cld
les
or
nop
scas
cltd
in
or
pop
jne
sbb
insb
add
movzwl
add
andb
jmp
or
fs
sbb
push
loopne
dec
adc
xor
cmp
jo
sub
sbb
push
lcall
daa
mov
jo
mov
imul
fdivrs
or
dec
and
xchg
mov
int3
add
or
shrb
int3
or
adc
and
jp
sbb
push
jne
int
pop
sbb
jb
sub
jbe
and
shl
adc
xchg
push
sub
push
inc
add
loopne
jne
sub
pushf
sarb
and
or
inc
and
je
sbb
filds
test
cld
cmpl
data16
dec
sub
jnp
hlt
pop
sub
mov
mov
dec
clc
dec
xchg
dec
jle
or
cmp
xor
fadd
jle
test
inc
or
add
push
push
add
and
xor
mov
data16
push
jae
aaa
sbb
lock
pop
hlt
lea
push
cmp
dec
cmp
out
cmp
sub
push
push
fdivs
cmp
jmp
sbb
pop
hlt
jne
aad
or
add
or
pop
call
and
xor
jno
inc
mov
push
push
mov
sbb
clc
mov
adc
push
adc
loop
jo
xor
sbb
add
call
add
hlt
push
xchg
jne
pop
sbb
clc
inc
gs
dec
dec
push
clc
ss
xchg
sbb
aam
loope
push
loop
xorb
or
loope
pusha
push
adc
cmp
mov
pop
and
inc
aam
sbb
or
pop
mov
fidivl
push
je
adc
je
mov
lcall
js
je
or
das
push
sbb
inc
js
pusha
adc
inc
xor
daa
xorb
pusha
cmp
push
mov
add
xor
pop
dec
into
add
adc
aam
loope
outsb
cmp
es
or
cmp
cmp
and
cmp
aas
or
shl
popf
add
cmp
sahf
sub
addb
lock
call
adcb
inc
pop
loopne
dec
and
in
or
and
inc
sub
or
inc
jecxz
iret
dec
inc
subl
bound
ret
and
repz
sub
sbbb
xabort
cmp
outsb
mov
add
xchg
or
inc
pop
int3
inc
push
pop
mov
rclb
aam
fucomp
pushl
cmp
mov
pop
xorb
rclb
cmp
pushf
inc
test
jae
rorb
inc
cmp
adcl
jecxz
rorb
and
add
sub
pop
cwtl
mov
loopne
or
clc
mov
sbb
or
enter
pop
xor
dec
adc
adc
shlb
daa
enter
push
push
adc
mov
push
push
jbe
movsb
push
jle
mov
adc
inc
stos
inc
adc
sbb
push
jg
sbb
lea
testb
push
or
inc
push
dec
fistl
lods
mov
or
ret
clc
sub
pop
rclb
adc
les
or
mov
add
loop
and
insl
and
sub
jmp
in
add
test
xchg
loopne
cmp
pop
and
inc
aam
js
sbb
jp
mov
push
lret
jmp
jnp
sub
jnp
jl
into
lea
push
ficompl
xchg
shrl
insl
sbb
add
cmp
inc
cmp
add
loopne
push
jae
push
push
fcmovu
ret
sbb
xchg
push
pop
enter
enter
add
sub
sbb
sbb
mov
push
xchg
jp
mov
jne
or
loopne
int3
js
adc
sub
cmpsb
adcb
fldt
inc
and
sahf
pop
xchg
push
loopne
push
push
insl
or
rorb
mov
enter
pop
adcb
sbb
jo
adc
jne
adc
out
inc
or
push
inc
pop
inc
add
lds
jp
push
add
inc
cmpsl
cltd
sti
inc
mov
add
adc
or
test
and
and
inc
adc
mov
loop
and
mov
aaa
push
das
jb
xor
aam
mov
ds
arpl
fwait
pop
leave
xor
adc
jp
and
insl
dec
adc
loop
ror
xlat
mov
lea
sub
sbb
int3
and
push
xchg
fsubrl
jno
mov
pop
repnz
or
fstpt
xor
adc
pop
push
popa
testl
and
ret
les
mov
scas
jecxz
nop
jbe
xchg
sbb
add
mov
and
and
adc
inc
testl
mov
inc
push
movsl
pop
or
lea
or
push
daa
add
pop
xor
adc
pusha
or
int
imull
dec
or
inc
cmp
and
push
and
shll
stos
xor
rcrl
mov
xchg
aas
inc
lock
cltd
cmpb
pop
cmpsb
inc
rorl
scas
test
inc
stos
push
push
add
mov
xchg
mov
sub
inc
jbe
ss
dec
pop
sbb
add
adc
outsl
leave
ret
je
shl
rorb
cs
imul
xor
pop
inc
test
add
in
mov
xchg
xor
sub
test
data16
outsb
mov
dec
and
push
add
movb
cwtl
in
push
pusha
jle
adc
add
loopne
orl
aaa
fcoml
xorl
bound
pop
ret
and
dec
addb
and
cwtl
push
sub
cmp
and
sub
pop
dec
pop
mov
ja
inc
mov
xchg
jo
shrl
dec
or
nop
add
mov
out
mov
or
xchg
and
adc
push
adc
shl
lret
jae
cs
or
jle
sarb
sahf
test
idivb
push
adc
xor
sub
xchg
js
cmpl
andb
xchg
mov
xor
push
das
pop
pop
jecxz
mov
rclb
sub
fcoml
into
ja
scas
pusha
mov
mov
xchg
and
fs
andb
sbb
movsb
das
add
je
xor
stc
outsl
jns
pop
fidivl
push
or
push
loopne
repz
push
push
and
sbb
adc
adc
dec
or
mov
xor
jp
sahf
sub
sahf
aaa
inc
or
adc
adc
jne
or
pop
push
jl
xchg
or
in
inc
mov
xchg
add
dec
xchg
xchg
or
xor
sbb
out
xchg
sub
stos
add
dec
sub
adc
add
push
and
movsl
mov
inc
shl
int3
icebp
test
insb
jp
jle
adc
jl
mov
add
fs
adc
jl
add
fnstenv
jp
xor
scas
adc
push
sbbb
inc
adc
dec
lods
xchg
pop
sub
inc
cmp
flds
ficompl
add
push
pushf
pop
cmp
and
pop
jno
mov
ljmp
in
add
shrb
pushf
or
pusha
mov
lahf
inc
mov
sbbb
pop
mov
loopne
mov
es
mov
or
jne
or
sub
fwait
push
or
inc
in
cltd
enter
dec
dec
sbb
lea
xabort
mov
inc
faddl
ret
xchg
add
mov
or
push
and
rcll
movsl
mov
daa
imul
add
outsb
imul
out
xchg
imul
movsl
hlt
jo
inc
pop
and
inc
cmp
fildl
jl
push
add
add
pop
out
cmp
and
adc
les
mov
lea
add
push
insl
mov
sub
sub
push
adc
aaa
cmp
sub
xor
test
sub
lods
sbb
adc
imul
lock
inc
pop
adc
ret
xchg
dec
push
push
cwtl
push
push
sub
in
cli
cmpsb
mov
incl
cli
sub
stc
mov
fmull
jl
and
mov
pusha
jge
popa
femms
and
mov
inc
stos
add
inc
or
clc
jmp
push
mov
stos
addr16
dec
add
inc
imul
mov
or
bound
mov
mov
and
leave
arpl
loop
addr16
push
loope
or
adc
sbb
orb
or
fdivs
cli
push
pop
cmp
or
imul
mov
pop
mov
test
ret
jo
test
ret
sbb
cmp
push
adc
mov
jge
hlt
mov
sarb
repnz
insl
lock
cmp
pop
push
nop
dec
cld
mov
gs
sbb
push
ja
cld
sti
pop
and
sub
or
cmp
movsb
lock
push
adc
push
hlt
rclb
je
push
imul
int3
mov
jne
adc
inc
test
pop
mov
cmp
and
mov
roll
cli
js
cwtl
mov
inc
in
movsb
aas
iret
jl
ffreep
xchg
mov
xchg
mul
add
push
sbb
cwtl
and
into
push
push
xlat
push
push
mov
sub
sub
dec
mov
cmp
inc
mov
inc
movswl
aas
loope
je
mov
inc
push
movsb
xor
or
mov
or
push
push
test
loopne
jmp
imul
sbb
enter
xor
mov
or
fs
aad
movsb
lea
jmp
xchg
pop
in
push
xchg
mov
dec
test
loop
icebp
mov
dec
xchg
pusha
dec
loopne
jecxz
jmp
cmp
push
testb
xchg
cmpsl
adc
and
jne
or
push
std
xchg
cmp
testb
je
es
lds
or
xor
int3
arpl
jnp
add
pop
mov
repnz
les
add
call
pop
xor
cli
push
push
inc
jno
cmpsb
cmp
jbe
imul
sub
mov
stos
jb
fnstenv
lahf
les
mov
or
xchg
aad
push
cli
jb
cmp
add
loope
shll
repnz
scas
icebp
jge
insb
in
dec
aam
arpl
nop
rcrb
fstpl
xchg
in
rcl
dec
cwtl
add
pop
enter
shl
mov
pushf
pop
icebp
je
push
jp
adc
shll
in
movb
in
les
lds
icebp
or
sarb
sub
xchg
and
add
das
fnstenv
cwtl
push
sarb
lret
and
test
fstps
add
je
les
xor
add
or
mov
cmp
adc
pop
inc
insb
xchg
mov
sub
or
adc
in
addl
call
add
add
lcall
jns
push
xor
addr16
testb
adc
push
adc
pop
add
or
dec
jge
pop
jno
popf
loopne
push
outsb
sbb
pop
xlat
jge
outsb
in
call
shlb
fsubs
push
push
shlb
fdivs
dec
xor
dec
shll
or
add
xchg
pop
mov
sub
and
push
xor
xchg
je
test
or
and
add
and
mov
shl
push
loopne
sbb
sub
mov
ja
cmp
add
and
in
into
adc
mov
push
sbb
dec
popf
cmpsb
mov
lods
clc
lock
inc
clc
mov
addb
cmp
adc
sbb
inc
mov
hlt
and
les
push
test
dec
mov
je
dec
xchg
sbb
pop
pop
mov
mov
mov
mov
adc
push
aam
scas
ret
adc
or
and
xor
xor
mov
adc
pop
dec
jne
mov
mov
mov
repnz
jmp
stc
in
jmp
mov
mov
cld
and
loope
test
mulb
js
pop
inc
mov
push
push
jae
xor
sahf
loopne
cmp
pop
inc
jp
je
inc
movzwl
jb
jmp
mov
clc
push
pop
and
sahf
out
loope
pop
loopne
cmp
in
clc
ret
dec
jne
call
call
xor
push
dec
xor
bts
lock
in
and
mov
rorb
xlat
and
inc
xchg
inc
ja
jle,pt
je
or
aam
jmp
cmc
push
and
xchg
add
into
pop
jecxz
adc
dec
stos
cmpb
cwtl
adcl
jle
lods
flds
and
mov
scas
js
xorb
push
add
lock
out
insb
cmp
add
cmp
jmp
push
movzbl
and
cmp
cmpsb
add
xchg
cmpsb
aam
pop
pushl
test
jl
jmp
and
lret
dec
pop
pop
lret
pop
xorb
inc
aas
sbb
push
std
inc
dec
jae
or
xchg
or
sbbb
aaa
jo
add
add
push
dec
ljmp
mov
fistps
mov
and
cvtps2pd
cmpl
xor
push
jb
out
clc
dec
pop
fbstp
or
pusha
mov
les
adc
out
push
scas
movsb
pop
add
dec
sub
sbb
sub
test
fstps
cmpsb
je
or
dec
data16
outsl
sbbb
jns
inc
pop
jne
push
xor
cmpsb
jo
gs
xlat
rorb
js
adc
into
jns
test
sarl
stos
cmp
es
stos
pop
adc
push
icebp
sbb
or
push
pop
mov
xchg
jg
adc
cmp
add
jecxz
xorb
inc
hlt
xor
enter
mov
cmovbe
mov
and
add
or
pop
pop
ret
or
mov
or
pushf
mov
fildll
adc
push
leave
inc
or
lods
pop
add
push
mov
add
sbb
inc
mov
push
mov
mov
jnp
mov
sub
sub
cmpsw
inc
fcmove
test
sub
stc
adc
push
aam
inc
ret
jecxz
pop
clc
push
pop
push
and
add
push
push
ret
in
fdiv
xchg
rclb
add
fcoms
jno
add
push
and
neg
pop
hlt
or
push
xchg
fiadds
dec
mov
incb
divps
jp
orb
jae
shl
sub
imul
and
or
push
gs
lret
pop
lock
pop
add
dec
iret
gs
add
mov
sub
out
ss
sub
insb
or
je
leave
test
nop
mov
clc
cmp
xlat
dec
sbb
imul
or
je
dec
mull
fsubs
clc
pusha
insb
popa
inc
cmp
pop
add
xchg
lcall
push
movsb
push
loopne
ss
imul
test
dec
mov
clc
stc
jb
cmp
pop
pushf
cmp
cmp
cmp
lar
xchg
and
rcll
cli
jae
xchg
or
inc
push
das
sti
add
roll
call
test
cwtl
xchg
int3
getsec
push
or
daa
loopne
push
pop
dec
add
fsubl
out
rcll
punpckhwd
clc
in
pushf
loopne
test
mov
test
test
adc
adc
inc
inc
jns
inc
insl
cmpsl
sub
and
xor
inc
or
inc
inc
xor
js
add
adc
dec
call
in
mov
mov
movsl
addr16
push
imul
mov
clc
out
cmp
add
inc
or
add
hlt
sbb
pop
push
push
xchg
call
rcrb
sbb
adc
mov
rcll
inc
inc
adc
and
adc
or
and
xchg
mov
test
adc
add
insl
mov
dec
cmp
inc
sub
push
dec
fwait
enter
lret
sub
jne
out
jp
xchg
jno
jbe
xchg
jmp
bound
cmp
xorb
jbe
lret
add
push
inc
inc
loopne
fnstenv
push
add
or
aaa
leave
mov
and
jle
cmpb
add
dec
jmp
push
pop
cmp
adc
mov
dec
sbb
and
push
add
pop
push
sbb
fstpl
mov
and
jb
or
aad
testl
out
sahf
fiaddl
sbb
dec
or
jnp
mov
ret
or
pop
out
je
cmc
push
adc
shl
leave
ret
push
jmp
sbb
loope
inc
outsl
mov
push
cmp
test
das
or
xor
ret
mov
ret
pop
shr
sbb
push
test
pop
mov
jl
test
loope
add
and
jmp
je
and
test
inc
jle
dec
icebp
mov
sbb
cmp
mov
lock
movzwl
popa
jl
dec
out
outsl
dec
movsb
mov
mov
mov
pop
testb
lret
andb
dec
jmp
sub
xchg
ror
outsb
jl
cmp
imul
dec
or
lret
mov
push
or
in
cld
sbb
sbb
sbb
or
ret
das
stos
das
sub
outsl
negl
cmpsl
mov
jge
xchg
inc
aas
test
pop
lock
iret
cltd
fcomp
xchg
aam
and
cmp
pop
adc
inc
adc
mov
jmp
jne
jle
mov
cwtl
test
lcall
inc
adc
js
push
mov
sarl
xor
jne
loop
nop
cmp
add
pushf
ja
bound
adc
mov
test
addr16
pushw
movsb
inc
cmp
or
jno
mov
dec
mov
inc
scas
inc
xor
mov
test
xor
push
sbb
fistpll
and
or
or
imul
cli
pop
add
jp
mov
xor
fld
movsl
lea
adc
shll
add
sub
pop
outsl
jo
push
ret
xor
xchg
dec
sbb
rcl
movsb
xor
cmp
push
aas
or
out
sbb
sub
pusha
enter
inc
movsb
push
mov
icebp
and
xchg
push
pop
insb
push
or
or
popa
cmp
scas
or
lcall
nop
rorb
add
sbb
dec
cmp
mov
insb
or
lods
dec
sub
mov
das
mov
movb
dec
xor
ss
or
pop
adc
testb
je
loopne
jp
jp
pop
mov
sbb
lea
add
fimull
hlt
or
xor
dec
clc
lock
or
sbb
aaa
xchg
inc
jmp
je
adc
xor
pop
into
pop
sub
aaa
xor
stos
call
mov
xchg
mov
lret
and
lods
or
add
mov
aam
lods
adc
xor
repnz
dec
mov
cld
push
mov
dec
inc
or
mov
pop
xor
movsl
scas
xchg
add
inc
cmp
or
inc
cmp
xchg
inc
out
pop
add
xor
cs
std
std
add
add
dec
hlt
push
sbb
xorl
xor
jecxz
je
sub
mov
mov
popa
repnz
enter
or
lea
hlt
cmp
push
inc
outsl
loope
cmpsl
pop
jb
mov
enter
dec
shrl
movsb
rolb
fsub
or
scas
repnz
js
lahf
xchg
xchg
movsb
and
rolb
sahf
adc
pop
call
push
pop
jmp
push
int
push
push
dec
mov
fcmovu
dec
adc
push
dec
aad
sbb
pop
push
test
test
and
sbb
jl
je
sar
shll
adc
fcomp
inc
xchg
shl
pop
and
jl
movl
dec
push
out
mov
pop
xor
cmp
jne
pop
inc
add
adc
in
adcl
sub
jno
inc
pop
pop
out
inc
add
xchg
xor
pop
lea
xor
push
mov
add
xchg
pop
xchg
adc
sbb
mov
jl
in
call
add
nop
nop
adcb
sbb
mov
mov
sub
dec
mov
mov
jo
adc
jne
xor
jge
adc
mov
cmp
jo
add
sti
test
inc
or
mov
cmp
arpl
stos
add
inc
cwtl
std
and
pop
inc
push
test
and
jo
add
cmp
stos
push
stos
dec
mov
pop
add
add
xchg
push
fadd
and
scas
lock
cmpl
mov
leave
xchg
fnsave
pop
inc
inc
fisubs
cmp
ret
add
xchg
roll
sarb
inc
mov
mov
cmp
push
inc
sub
pop
les
mov
pusha
adc
pop
or
cmp
push
in
xor
xor
dec
out
inc
cmp
inc
loopne
pushf
insb
or
cltd
outsl
pop
cmpsb
jnp
in
cmp
cmp
popf
ret
cmp
fs
xor
mov
pop
cmp
jl
notb
mov
inc
xor
pop
push
sbb
adc
add
fsubl
scas
test
test
mov
sti
stc
sbb
sub
xor
lds
pop
cltd
jbe
cmp
out
mov
and
outsb
in
dec
out
dec
ret
sbb
push
sub
push
das
in
add
pop
push
push
cmpsb
lock
fisubrl
jl
fmull
push
std
xchg
jle
push
pushl
xchg
inc
faddl
jmp
ss
data16
push
add
xor
arpl
push
mov
mov
cmp
test
dec
or
mov
and
andl
movsb
lret
and
arpl
xchg
push
lea
fmuls
push
inc
cwtl
in
into
add
jmp
add
xchg
cmp
andb
sbb
mov
not
pop
inc
push
pop
jb
xor
sbbl
xchg
mov
mov
dec
mov
xchg
jp
je
ss
pop
push
fsubs
cmpsl
inc
idivl
xchg
cmp
sub
iret
shrb
xchg
inc
aam
int3
pop
or
sbb
adc
adc
or
mov
and
shrl
pop
mov
adc
lcall
add
add
add
mov
in
adc
or
sub
loopne
loopne
aad
sub
inc
add
push
xchg
add
je
stos
mov
fisubrl
loopne
xor
out
popf
adcb
lcall
xchg
shlb
ss
pop
subl
push
xchg
and
jl
mov
add
stos
insb
push
and
pop
roll
push
mov
pop
add
add
shlb
push
enter
test
jno
in
xchg
rclb
xor
clc
dec
roll
das
mov
cld
or
inc
add
sarl
cmp
bound
movl
mov
cmp
mov
mov
dec
shll
adc
stos
loopne
rolb
leave
or
jge
insb
inc
add
pushf
push
pop
out
xor
sub
sahf
fistpll
adc
fdivrs
je
leave
push
cmp
scas
inc
test
jno
jmp
scas
pop
pop
je
imul
fucomp
jbe
adc
push
outsb
push
pushl
xchg
scas
jnp
jo
mov
outsb
mov
ret
push
dec
add
cmc
or
arpl
mov
rorb
testl
scas
xchg
jmp
into
lods
mov
sahf
insb
loope
xchg
xor
xor
push
in
jp
xor
push
mov
pushf
mov
call
push
orl
call
sub
xchg
addb
out
or
sti
andb
pop
pop
xor
lods
lcall
popf
push
dec
movsb
sbb
cwtl
lret
jbe
adc
pop
lods
cmp
jle
outsb
mov
adc
ret
mov
test
push
ret
lret
jl
pusha
fisubl
add
add
loopne
das
mov
pop
jmp
push
jnp
inc
adc
pop
or
adc
mov
popa
les
jle
xor
in
cwtl
mov
insl
call
mov
push
push
add
ret
cmp
sub
mov
sbbb
mov
je
test
and
lods
je
ljmp
pop
or
mov
test
loopne
xchg
sbb
mov
or
pop
cmp
sub
scas
and
dec
call
cwtl
mov
xlat
lret
or
rolb
jle
pop
jno
cmp
roll
outsl
call
sbb
add
push
outsl
mov
add
pop
test
popf
sahf
jne
arpl
popa
daa
and
loope
mov
sahf
clc
mov
jp
inc
or
out
push
or
pop
dec
add
sti
push
out
inc
push
xchg
cld
lods
gs
jp
mov
inc
mov
jle
xchg
mov
shl
and
mull
sbb
stc
xor
xlat
int
ja
inc
adc
cmp
jecxz
in
add
xor
and
add
call
int3
adc
in
adc
and
dec
inc
push
jmp
ret
xchg
adc
push
xor
cmp
ss
les
test
push
idiv
pusha
push
cwtl
call
stos
or
ffree
xor
push
clc
sbb
lea
adc
or
gs
mov
lcall
or
nop
jge
in
daa
push
push
xchg
rclb
scas
test
mov
push
push
popf
cmpsl
push
and
leave
arpl
dec
xchg
into
arpl
cs
jmp
movb
push
cmovo
or
imul
xchg
js
jg
jne
or
inc
or
pushf
push
xchg
sbb
fidivs
or
cmp
movaps
jp
inc
lcall
movb
xorb
adc
je
mov
into
aam
jae
mov
shlb
sub
lret
aam
cmc
test
test
repz
jp
mov
lret
xorl
dec
pop
idivb
fsts
adc
loop
inc
add
pop
or
add
test
lret
js
iret
sub
lcall
push
push
mov
or
push
test
hlt
mov
mov
shrb
fsubrl
or
gs
push
in
dec
xor
cli
aad
test
sarl
lret
pop
sub
or
cli
test
sbb
addr16
add
andl
add
or
cmp
jnp
and
cmp
mov
adc
data16
out
outsb
pop
dec
fistpl
push
push
aas
loop
inc
sbb
fistl
sbb
rolb
add
xor
fildll
adc
push
pop
lock
pop
and
push
push
daa
loope
lcall
repnz
clc
jg
add
je
adc
sub
mov
jae
or
daa
aad
mov
mov
pushf
push
call
daa
jge
xor
pop
jne
inc
mov
push
adc
push
inc
testb
hlt
jo
mov
je
mov
mov
push
cmpsb
mov
enter
push
xor
sbb
and
and
push
xor
in
lods
imul
sbb
cmp
jo
outsb
roll
inc
mov
sahf
or
inc
lods
imul
sub
js
fstpt
orl
sbb
add
clc
les
xchg
push
mov
inc
loopne
sbb
enter
mov
leave
movb
insb
dec
push
pop
xor
push
es
shl
push
test
cmp
lods
ja
cmp
cs
pop
pop
mov
out
repz
lock
cmp
jmp
inc
xor
aam
jle
sbb
pop
ljmp
ljmp
sbb
add
mov
adc
je
mov
jp
jns
mov
arpl
lret
shlb
fistpl
fildl
push
inc
xor
lea
cltd
or
xor
mov
add
push
icebp
and
push
mov
leave
mov
mov
inc
or
clc
lea
jmp
mov
or
shrl
adcb
out
mov
dec
lock
mov
or
jle
sbbb
fdivl
pop
cli
mov
mov
stos
dec
test
lcall
scas
bswap
out
inc
sub
test
dec
into
int
inc
dec
xor
sahf
cmpsb
sahf
push
sub
add
cmpb
dec
outsl
jl
sub
lods
push
mov
movsb
add
cmc
pop
pop
or
inc
adc
cmp
jb
xor
test
mov
ja
ficoms
add
mov
ja
and
add
and
loopne
daa
jg
xor
xchg
or
and
andl
inc
out
and
inc
cmp
sub
add
loop
inc
sbb
cmp
inc
push
mov
jno
jmp
fstpt
sub
je
or
jle
push
dec
xchg
mov
imul
and
les
push
dec
push
mov
push
stos
xchg
mov
xor
or
push
or
push
cmp
test
mov
cltd
xchg
inc
pop
inc
rcrb
aaa
or
jle
addr16
jl
mov
and
pop
je
jnp
or
pop
rcrb
add
clc
add
test
mov
cwtl
sbb
jbe
dec
cmp
mov
cs
andl
xchg
ficomps
adc
cli
decl
and
scas
adc
movl
push
mov
mov
lods
jmp
hlt
add
hlt
push
dec
dec
sub
push
cmp
nop
sbb
sub
shll
pop
lock
add
and
sbb
jae
bound
jg
andl
fldl
lret
mov
push
mov
push
cmpb
dec
adc
lods
xchg
cmp
pop
push
or
dec
push
add
jo
xor
pushf
sub
call
into
es
lea
test
push
push
push
cs
call
insb
cmp
pop
adc
hlt
add
push
and
mov
aaa
icebp
mov
les
out
mov
call
dec
push
jle
add
pop
cmpl
aad
inc
add
aam
adc
jl
mov
xchg
jecxz
sbb
push
lret
data16
addl
js
enter
push
test
jnp
push
push
push
dec
dec
push
pop
mov
roll
inc
push
mov
addl
into
fbstp
dec
scas
cs
addl
out
shll
push
mov
pop
adc
mov
inc
adc
addb
fstpl
lods
clc
sbb
in
mov
popf
xor
push
cltd
nop
add
cmp
bound
ret
sbb
xchg
fdivl
addr16
outsl
insb
add
pop
insb
or
mov
mov
mov
pop
movsb
bound
bound
das
jb
stos
push
adc
adc
clc
and
lea
shll
icebp
xor
add
or
and
or
mov
cli
pop
mov
fldenv
adc
adc
leave
mov
push
daa
dec
push
push
add
outsl
dec
rclb
add
and
add
adc
xor
pop
add
fidivl
movsb
mov
daa
pop
push
add
jg
dec
and
sub
aam
neg
push
mov
dec
xlat
cmpsb
push
inc
inc
dec
or
in
in
add
imul
inc
cmp
sbb
mov
mov
push
dec
rclb
jne
movswl
push
push
sub
bound
imul
adc
dec
es
sub
sub
mov
das
fldl
cmp
sbb
out
dec
addl
inc
data16
loopne
aas
xchg
add
push
push
push
push
imul
int3
sub
mov
daa
fs
adc
rorb
mov
pop
mov
addb
sbb
jl
cmpb
sbbl
xchg
xchg
scas
out
inc
mov
pop
xchg
inc
mov
sbb
aad
enter
mov
call
mov
mov
dec
test
jbe
fld
sar
sbb
cmpb
shrb
and
loopne
out
clc
jl
shr
pop
lea
decl
imul
nop
shl
nop
xchg
add
add
shlb
pop
imul
push
or
sbb
loope
movsl
or
test
sarl
inc
pop
imul
sti
mov
int3
xor
pop
data16
and
push
adc
rolb
mov
and
insb
dec
add
enter
inc
inc
test
add
pop
sbb
or
add
adc
jle
addb
cs
xchg
jmp
and
jo
addb
or
mov
add
fadds
pop
pop
jg
dec
sti
lret
cmp
inc
push
xor
mov
push
enter
push
into
xor
incb
add
movsb
psllw
fdivrl
mov
add
rol
inc
push
ffree
pop
push
xor
cltd
dec
ss
clc
and
mov
mov
ds
add
adc
or
xor
jmp
dec
andl
fmull
mov
push
mov
test
jae
enter
adc
and
imul
cmp
mov
loope
fisubl
es
xlat
mov
and
push
sbb
rcrb
or
std
sahf
sbb
adc
push
shlb
test
jae
sub
aam
or
loopne
dec
xor
in
andl
bound
popf
cmp
je
cmp
imul
test
ljmp
subl
in
mov
in
or
or
adcb
pop
mov
or
mov
xchg
test
rolb
jp
aam
jno
or
data16
push
loopne
xor
adc
aad
push
fstpt
lret
xchg
adc
ret
mov
or
dec
jnp
push
adc
adc
adc
adc
mov
cmp
cmpsl
inc
mov
ds
inc
push
and
pop
add
adc
out
ror
sub
por
dec
or
ret
arpl
jecxz
les
int3
add
imul
lret
in
inc
adc
lcall
cmp
rorb
add
add
pop
jb
mov
fidivs
xchg
fldl
ja
sbb
add
pop
pusha
cwtl
repz
fadds
cmp
fcoml
and
ret
xor
cmp
add
nop
mov
push
lds
sub
mov
xor
and
xchg
sbb
adc
sub
cmc
add
lcall
mov
data16
adc
aam
cltd
imul
jle
mov
mov
mov
pop
and
lret
mov
push
fisubs
rcrb
mov
movsl
movsl
mov
fsubr
mov
cmp
and
add
mov
imul
pop
adc
push
push
int3
movsl
add
sub
push
sbb
daa
stos
sub
add
xor
or
test
sarl
push
inc
pop
addr16
dec
popa
pop
js
mov
mov
cmp
repz
pushf
mov
sbb
repz
mov
ljmp
mov
pusha
inc
movsb
lods
mov
add
ret
jge
lods
jne
sti
clc
push
fs
xlat
int3
mov
cmp
dec
inc
inc
test
adc
call
xchg
insl
dec
dec
aas
lret
movsb
push
lcall
sahf
adc
inc
mov
sub
inc
inc
mov
lock
shll
xorl
popa
inc
cmp
jge
xor
adc
jnp
mov
cmp
mov
fcmovbe
dec
or
inc
or
mov
aad
jl
loopne
xor
cmp
or
int3
and
mov
push
outsb
push
jo
and
lock
dec
pop
fiadds
inc
pop
cmp
aam
fisttpl
pop
mov
fstl
nop
or
xor
inc
imul
jae
shl
adc
test
rorl
movsl
mov
iret
sarb
rolb
daa
cmpsb
jle
loop
mov
or
push
adc
daa
shll
cmp
roll
inc
into
je
or
test
adc
inc
in
xchg
sbb
lret
loop
inc
mov
nop
mov
xchg
pop
mov
jne
cmp
test
adc
int
xor
test
pop
shl
fdivp
repnz
shlb
jae
sub
int3
jl
cmp
sub
sbb
xor
jle
ret
leave
xchg
cs
dec
push
push
inc
inc
ret
dec
xchg
or
loop
test
or
pop
sbb
xchg
ret
les
sub
sub
les
mov
push
in
add
push
icebp
adc
dec
mov
sbb
pop
xchg
rcr
mov
enter
sbbl
jbe
outsb
nop
jbe
push
pop
lret
orl
ss
xchg
pop
das
and
repz
lret
mov
and
outsb
ret
push
addr16
add
sbb
lods
xor
adc
add
or
and
push
lahf
pop
fninit
pop
loope
pop
insb
inc
sbb
inc
mov
push
push
add
decl
test
fistpl
or
cli
add
test
je
sub
pop
ret
pushf
orl
sbb
add
push
xor
mov
mov
add
mov
daa
xor
popa
popf
sub
cmp
add
xchg
cmpl
addb
lock
cmpsb
push
outsl
push
fsubs
jl
jmp
sub
adc
outsl
es
lahf
and
jns
jmp
fs
fimull
and
pushl
or
lea
sub
les
add
mov
scas
pop
cvttps2pi
and
data16
lock
addr16
les
sbb
fildll
imul
cs
addr16
iret
int3
bound
inc
sbb
icebp
cmpl
mov
push
mov
add
sub
mov
add
mov
fxch
call
in
dec
fisttps
or
or
cld
mov
or
imul
mov
push
fwait
dec
fldt
sbb
rcr
movb
add
sarb
je
add
cs
and
sarl
cli
dec
sbb
xorl
in
enter
mov
adc
mov
notl
mov
add
adc
adc
mov
int
ret
xor
mov
pushaw
adc
adc
inc
cmp
iret
fucomi
inc
jl
iret
rorb
or
je
inc
lret
lcall
dec
js
xor
into
adc
cmova
mov
or
xchg
adc
popa
jae
pop
pusha
add
ja
scas
inc
testl
and
lods
add
andb
rorl
and
add
add
push
mov
mov
divb
jle
add
pop
and
sub
call
add
movsl
lods
push
mov
ds
add
or
xchg
popa
sub
pop
mov
in
stos
scas
or
xor
cmp
leave
and
fwait
cmp
lcall
adc
jg
mov
sbb
push
or
inc
lsl
dec
dec
ja
movzbl
xchg
inc
push
lods
js
cmp
inc
jmp
loopne
push
adc
adc
push
or
cmp
push
subb
jmp
adc
pop
sbbb
out
shrl
lcall
fcoml
xor
add
bound
test
out
fimuls
push
adc
sbb
mov
jl
fucomip
add
ficomps
add
adc
add
add
call
mov
and
or
inc
std
sub
and
pop
arpl
dec
mov
mov
adc
or
jne
iret
addl
loop
pop
jmp
es
lret
xchg
jno
js
outsb
fdivl
sub
and
je
aaa
mov
cmpsl
movsl
cmp
sbb
cltd
mov
mov
or
fcmovnbe
rol
inc
sub
cmp
adc
and
inc
add
push
lock
mov
lods
jp
insl
sub
xchg
sub
or
sub
pop
je
sub
je
push
or
sub
fldpi
or
leave
sar
mov
fdivs
mov
fldenv
xchg
xchg
add
sub
cltd
jmp
jne
sti
xchg
lock
jb
cmp
mov
cmp
adc
loopne
test
add
pop
sbb
or
aam
test
sbb
push
aad
push
dec
hlt
fsubrs
sbb
push
mov
mov
mov
mov
popa
psrad
jmp
mov
xor
mov
xor
js
jnp
push
adc
add
bound
or
pop
ret
mov
sub
adc
ret
jge
push
dec
add
ja
inc
mov
sub
test
xor
shrl
orl
jo
fidivrl
pop
add
jg
xchg
in
das
push
scas
jle
adc
adc
cmp
push
sub
repnz
dec
and
dec
sbb
je
or
fisttps
cli
jl
push
insl
or
loopne
pop
leave
in
add
pop
out
dec
inc
icebp
gs
jb
mov
mov
cmp
cs
mov
mov
push
xor
fisubrl
pushl
pop
ja
or
pop
orb
and
add
jmp
mov
cmp
inc
out
inc
popf
inc
es
mov
xchg
push
xchg
sbb
arpl
outsb
sti
rolb
xchg
or
shlb
cmp
mov
or
inc
and
cli
jp
cmp
hlt
roll
xchg
shll
outsb
rol
ss
pushl
pop
inc
shlb
add
sbb
mov
and
xor
pop
bound
xchg
jp
xchg
push
push
mov
xor
xor
test
fdivs
xorb
xor
mov
inc
or
in
dec
jecxz
or
mov
in
lcall
xchg
or
stc
push
cmp
fdivrs
mov
inc
sbb
arpl
adc
xor
cmp
cmp
add
pushf
dec
call
testb
jecxz
xor
cmp
jne
cmp
jne
out
in
cmp
lret
jge
loop
pop
and
pushf
jbe
orl
sahf
xchg
cmp
mov
popa
inc
pop
addr16
rolb
jne
out
or
xchg
jb
lea
je
imul
subb
aad
dec
jbe
cmp
xor
or
inc
ljmp
lock
les
inc
push
xlat
inc
inc
or
testb
sub
fimuls
cmp
push
test
add
mov
adc
imul
daa
shll
mov
mov
xor
sub
in
cmp
test
jbe
jbe
push
in
push
je
push
mov
je
fs
int3
and
or
add
gs
enter
cld
push
jmp
or
clc
andl
mov
jmp
enter
test
mov
daa
sahf
or
call
sbbl
cmp
inc
mov
xchg
xor
add
leave
mov
pushf
pop
cld
xor
add
cmp
into
ret
cmp
add
in
fs
insl
out
lods
movl
repz
mov
push
mul
jmp
sbb
and
or
test
and
ja
sbb
andb
pusha
out
shr
mov
mov
lock
fmuls
adc
push
jns
ss
dec
ret
andl
dec
call
xchg
add
cld
cmpl
scas
jl
push
je
jmp
call
rorb
push
test
pop
inc
js
mov
xchg
pushl
pop
outsl
jo
movsb
fildll
inc
and
mov
xchg
imul
outsb
xor
sbb
data16
cmp
pop
mov
lea
repz
dec
xor
sbbl
push
and
push
mov
into
pop
cbtw
cli
subb
or
cmp
rcrb
inc
and
icebp
inc
cmp
and
jl
and
mov
es
outsb
mov
je
cmp
sub
orl
test
cmp
or
loopne
fidivl
cmp
int3
adc
adc
add
jo
xor
sbb
mov
aad
hlt
loope
testb
cmc
outsl
add
push
in
xchg
push
and
outsl
or
xchg
aad
mov
sub
or
rcl
push
add
daa
fxch
pop
pop
adc
mov
cmp
test
loopne
add
fdivrs
add
fs
add
lods
and
dec
push
adc
mov
cmpsl
xor
mov
push
adc
adc
pop
sub
test
jae
add
jo
or
insb
ja
call
ficoml
pop
xchg
mov
stos
cmp
adc
xchg
les
bound
cmp
jae
add
out
xor
imul
sbb
xlat
jmp
or
idivl
jge
movsb
mov
cmpsl
push
jmp
lahf
and
adc
movl
push
push
ret
mov
xor
jb
cmp
inc
push
push
loopne
sahf
iret
adcl
xchg
out
lods
push
cltd
pop
jb
pop
pop
fisttpll
jbe
and
jb
mov
or
and
inc
push
dec
fsubs
mov
xchg
cmpsl
rolb
imul
pop
sbb
cmc
cmp
lea
ret
push
or
in
popf
mov
sbb
add
add
mov
xchg
cmp
clc
xor
fldl
ss
xchg
cmp
rcr
push
testb
sbb
adc
je
scas
movsb
daa
out
fidivs
pop
fimull
es
jne
pop
loopne
int3
mov
jno
das
xchg
adc
add
test
mov
add
outsl
mov
xchg
or
sub
sbb
dec
fcomip
or
inc
or
cmp
test
jne
pushw
gs
pop
pop
stc
or
mov
shrb
push
and
sbb
fsubrs
inc
arpl
inc
dec
test
inc
push
cltd
pop
xchg
jmp
cmpsl
sbb
and
sub
popl
orl
or
subl
sub
sub
xchg
add
pusha
xchg
cmp
mov
sub
sbb
andl
mov
mov
inc
sub
add
fsub
add
jge
adc
fcmovb
xor
push
pusha
aad
and
mov
mov
inc
sarl
leave
sub
sarl
mov
adc
mov
enter
loopne
cmp
and
iret
cld
es
ja
add
dec
pop
jmp
cmc
or
jp
loopne
aas
jmp
pop
lcall
ja
shrb
out
jb
dec
pusha
inc
add
mov
mov
inc
popf
cli
or
or
xlat
xor
mov
sub
pop
in
outsb
cwtl
xor
dec
outsl
xor
add
inc
mov
or
sbb
in
push
pushf
push
test
sarb
sti
pop
push
and
ss
mov
fadds
test
mov
push
pop
jg
adc
inc
shlb
adc
in
sub
pusha
pop
ret
add
sbb
imul
jae
xchg
push
cld
pop
bound
mov
pop
loopne
out
sbb
pop
imul
adc
call
or
in
push
shl
cmp
divl
pop
and
jmp
enter
xor
dec
inc
xor
movsb
mov
push
xor
mov
repz
adc
scas
or
cmc
push
mov
and
inc
movsb
push
push
inc
sub
adc
inc
sarb
sub
pop
lods
inc
aam
or
pushf
push
push
xchg
rol
jg
lret
mov
gs
adc
loopne
push
dec
cwtl
fldl
and
and
jne
cmp
out
cmpl
mov
or
arpl
adc
push
push
add
dec
pop
dec
out
scas
rcll
ret
mov
sub
mov
lock
adc
mov
add
dec
adc
rclb
enter
int3
xchg
dec
push
stc
je
sarb
dec
aam
in
adc
fcomps
adc
movsl
mov
dec
hlt
aas
mov
in
scas
sbb
fnstcw
addw
xor
xor
jg
sbb
stc
adc
int3
pop
call
divb
hlt
addb
or
fyl2x
dec
inc
cld
adcb
sub
sbb
loope
xchg
bound
adc
jns
jmp
pop
sbb
sbbl
or
inc
jmp
faddp
adc
xor
lock
pop
mov
add
cmove
rcl
add
hlt
jns
fadds
shlb
cmp
xor
jne
xchg
dec
adc
mov
dec
mov
adc
dec
push
inc
mov
mov
dec
pop
frstor
fldl
adc
popa
ret
faddl
mov
loope
inc
sbb
xchg
sahf
fldl
xor
jecxz
mov
jmp
pop
imull
mov
pop
mov
cmp
and
jmp
cmpsl
mov
xchg
xchg
mulb
sahf
pop
fld1
daa
dec
or
aaa
pop
fiaddl
inc
cmp
adc
push
bound
fcomp
in
fwait
add
jne
mov
testl
fcompp
daa
add
ret
dec
rorb
movsl
push
jmp
dec
dec
mov
mov
xor
push
adc
mov
ds
test
cmp
push
cmp
push
pop
sbb
dec
adc
dec
adc
jle
push
and
inc
xor
inc
jbe
shr
out
das
lcall
rcl
adc
add
xchg
adc
jbe
dec
mov
jmp
inc
adcl
sbb
imul
adc
or
jns
add
cs
mov
jne
idivl
pop
push
sbb
in
dec
sub
fsubl
in
es
jle
cmp
xor
push
inc
adc
sub
jbe
je
insb
popa
loopne
fprem
and
sahf
jp
sub
jmp
push
lods
fisubs
jecxz
mov
adc
fsts
xor
add
push
mov
cmpsb
push
mov
in
mov
pushl
lcall
jp
pop
pop
pop
inc
sbb
xor
cvttps2pi
adc
pop
push
daa
push
sub
xor
pop
jo
maskmovq
testl
pop
ret
pusha
mov
cmpsl
or
fsubrl
jmp
push
fcompl
lahf
push
shr
aas
jg
and
ret
and
push
jge
js
lds
and
inc
sbb
jge
fwait
pop
xor
mov
js
jbe
adc
inc
jo
out
jg
adc
enter
or
sub
call
mov
jmp
inc
cmp
js
loopne
imul
add
stc
ljmp
sbb
std
and
xchg
jne
notl
adcb
mov
inc
test
nop
add
jno
or
loopne
leave
loopne
xor
lods
cmc
mov
ljmp
or
sbb
imul
push
add
jle
jns
and
adc
jge
jbe
in
out
push
inc
pusha
push
mov
rclb
addr16
dec
push
inc
cmp
enter
xor
jge
rcrb
cmp
push
movsl
es
lret
cmp
mov
ret
sub
fwait
mov
push
sbb
adc
cmp
and
inc
shlb
adc
sarl
cmp
int3
movsb
stc
push
cld
shlb
pusha
sub
fimuls
aaa
mov
loop
pushf
arpl
mov
loopne
or
data16
pop
pop
xchg
sbb
pop
adc
inc
popa
insb
sbb
ret
inc
xor
cmp
std
mov
mov
xchg
mov
xchg
jae
loopne
add
cld
sbb
mov
ret
pop
fs
cmp
jo
jle
push
rcrl
hlt
adc
lock
iret
push
jbe
in
test
enter
pop
rcrl
test
insb
jecxz
jae
test
out
shr
pop
call
divb
movsb
sbbl
add
fdivs
adc
movsl
stc
inc
xchg
cwtl
dec
movsl
mov
or
and
insl
and
push
hlt
clc
adc
sahf
outsl
mov
mov
insl
clc
cmp
mov
int
fadds
loope
cltd
dec
aas
shlb
jmp
adc
fdivs
repz
ficoml
es
int3
add
sbb
xor
xchg
xchg
ret
push
fcomps
sub
ret
mov
dec
loopne
loopne
divps
mov
jo
nop
or
jo
cld
or
xor
adc
cmp
imul
js
stos
or
add
in
jnp
add
jmp
pushf
add
mov
inc
ja
pop
mov
stos
ss
pusha
inc
mov
insb
dec
insl
sbb
inc
shlb
jp
cmp
int
pop
add
mov
dec
dec
push
add
in
dec
adc
add
loope
out
xorl
xorb
in
stc
mov
or
xchg
ljmp
ret
mov
inc
and
gs
call
add
dec
loope
addr16
push
xor
movsl
arpl
pop
xor
add
adc
and
sub
sbb
aas
mov
mov
jl
add
incl
imul
jbe
push
push
sub
ret
popl
enter
rcll
pop
idivl
shl
pop
push
or
addb
test
aaa
adc
fidivl
push
mov
adc
dec
dec
frstor
or
pop
mov
or
mov
xchg
sar
add
movzbl
sbb
int
mov
mov
ja
mov
cmp
push
lods
mov
or
outsl
fldl
insl
and
mov
pop
test
pop
pop
inc
pop
test
sub
inc
sub
jne
dec
popa
mov
xchg
add
xorl
fidivrs
fwait
lea
popa
jmp
cmp
ret
jne
or
add
addr16
xor
push
sbbb
pop
sub
js
xor
in
xor
sub
inc
lds
bnd
jge
pop
test
cmp
imul
insl
mov
adc
xorl
sbb
pop
rcr
jmp
adc
jnp
jmp
lods
or
xor
test
pop
pop
addr16
clc
xorb
loope
push
or
lods
out
cmp
sahf
add
test
loope
rcrl
cmp
ret
add
add
outsb
insb
dec
ret
sub
inc
pop
inc
or
scas
pop
xchg
xchg
rorl
testb
push
pop
fwait
lock
outsb
gs
xor
push
rcl
inc
push
out
ds
push
ret
inc
dec
adc
push
rcrl
mov
mov
jo
fs
pop
mov
adc
mov
sub
ret
add
daa
pop
and
cmpsl
or
add
iret
sbb
daa
hlt
lea
clc
pop
fwait
xor
push
adc
xorb
shll
push
push
inc
imul
addb
mov
push
sbb
push
roll
xor
sarb
or
clc
fisubs
or
xchg
ja
cmc
mov
mov
data16
out
pop
or
sub
inc
mov
sbb
adc
testb
push
cmpb
imul
popa
int
xor
es
outsb
push
add
or
subb
lock
cmpb
mov
mov
pop
cbtw
sub
inc
mov
and
mov
sub
sub
add
popa
sbb
push
inc
inc
ds
movsb
sbb
out
mov
sbb
sbb
xorb
pushf
xchg
push
push
inc
jg
out
roll
popa
adc
shr
inc
push
pushl
pop
ret
shr
rcr
shr
rcr
or
sbb
lock
fildll
xor
cmp
or
cmp
jecxz
xchg
add
mov
dec
dec
fsub
sbb
add
xor
cmp
dec
and
ja
mov
sbb
add
cmp
cmp
pop
add
ret
sbb
push
dec
jns
jmp
out
aad
and
popa
enter
lods
mov
rcrl
push
fcompp
and
push
or
sbb
jnp
lcall
fstpl
cmpsb
clc
lret
add
mov
and
cmpb
jne
mov
data16
cmp
sub
movsl
mov
cwtl
add
mov
cmp
outsb
add
add
test
jns
lea
es
push
adc
push
roll
shr
lcall
mov
and
add
cmpsb
nop
inc
inc
inc
mov
jg
or
push
je
cmp
rep
fs
push
dec
out
sub
inc
mov
sbb
sahf
out
sahf
in
in
lock
hlt
mov
out
clc
clc
cld
cld
ret
lret
divl
inc
adc
imul
mov
mov
push
movsb
jbe
nop
cmp
pusha
sbb
and
loope
mov
adc
lea
jl
cld
jl
daa
mov
cld
out
xor
pusha
cmp
out
sub
inc
pop
stc
sub
xor
inc
cmp
in
pop
nop
dec
push
push
je
dec
divl
fiadds
dec
mov
lods
mov
mov
inc
out
add
add
mov
dec
dec
push
push
xchg
mov
repz
in
push
hlt
cld
repz
fiadds
or
adc
add
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
aas
inc
and
push
pop
insb
add
sub
xchg
cmpsb
push
add
pop
pop
pusha
push
add
daa
outsl
and
inc
sub
pop
jl
or
add
pop
add
add
imul
dec
cld
jnp
mov
adc
add
inc
roll
fisttps
xor
ja
andb
dec
shll
lcall
push
mov
jge
or
cmp
xor
dec
adc
hlt
andl
les
adc
sbb
sub
mov
mov
leave
sti
cmpsb
jg
jl
xchg
jae
popf
push
pop
adcl
sbb
sub
adc
addb
movb
inc
fnstcw
or
jmp
push
sub
popf
mov
push
cmp
and
xchg
sahf
addb
stos
faddl
add
xchg
scas
cmpsb
addl
inc
inc
fildll
ja
andb
dec
fimuls
fbld
inc
enter
inc
or
adc
cmp
jae
or
jae
cld
add
push
shrd
shr
ret
sbb
loope
shr
outsb
insb
ljmp
pop
roll
insb
inc
inc
rcl
mov
in
push
jle
pop
movsl
cmc
sti
add
add
cltd
sub
hlt
fistpl
push
pop
sub
jae
mov
pop
imul
stos
out
mov
pop
clc
aaa
cmp
mov
iret
add
mov
and
xor
mov
mov
mov
inc
pop
inc
insb
mov
inc
daa
add
test
sbb
or
aaa
sbb
call
stos
adc
in
inc
cmp
mov
inc
or
pop
shr
push
jp
fsts
ljmp
and
add
jne
jmp
xor
add
aas
jg
out
in
jne
pop
cmp
jecxz
je
inc
cmp
dec
jne
add
ret
add
mull
out
je
jne
and
fimull
xor
ficoml
inc
jnp
pop
mov
scas
add
push
mov
push
pop
inc
test
push
nop
add
add
test
push
jmp
push
push
pop
push
mov
add
jb
sbb
test
jns
push
add
testb
fimull
or
sbbl
test
fs
pusha
sbb
or
icebp
inc
jns
and
and
cmp
frstor
pop
out
pop
or
jb
pop
push
pop
or
pop
pop
in
mov
stos
ds
aam
jmp
arpl
mov
xor
push
cltd
xchg
xor
stos
jne
cmp
leave
cmp
cmpsb
xor
sub
fmulp
subb
stc
sub
mov
sbb
cli
and
js
xor
pop
adcb
pop
ret
test
dec
andb
or
dec
mov
add
mov
inc
xchg
cs
cmp
adc
outsb
xor
inc
daa
fidivs
xor
inc
dec
aaa
or
sbb
inc
add
jo
or
adc
insl
sub
cli
jle
pop
mov
rorb
out
into
sub
or
es
push
cld
add
push
add
cmpl
push
arpl
mov
mov
mov
add
and
push
adc
and
mov
dec
mov
adc
outsl
sub
xor
mov
push
mov
pop
mov
and
and
mov
addl
pop
inc
in
sahf
aam
nop
ljmp
pusha
lret
data16
ljmp
mov
and
add
mov
cmp
add
mov
clc
jmp
andb
pop
adc
sarb
cltd
cmpb
jle
pop
mov
mov
sub
pop
cmp
adc
clc
add
int
rcrb
ret
clc
push
sti
es
mov
push
mov
cmp
add
ja
jnp
push
cmp
inc
daa
pop
cmpsl
add
sbb
push
je
and
sub
pop
mov
loope
or
repnz
cmp
cmp
add
add
adc
sub
mov
mov
bound
add
pop
rcrl
mov
std
sti
in
push
mov
add
dec
ret
or
or
push
xchg
mov
jp
cmp
jno
dec
mov
xor
adc
mov
dec
adc
popa
jl
clc
jp
push
sub
daa
adcb
xchg
mov
dec
adc
pop
fistl
lahf
adc
xor
je
push
xchg
loope
and
lret
adc
xor
pop
mov
jno
adc
rolb
hlt
push
popa
fbld
xchg
dec
testl
jle
jl
or
sbb
in
enter
test
push
add
mov
add
cmp
inc
outsl
xor
push
or
testb
andb
lcall
pop
or
sbb
sub
jne
mov
fiaddl
add
adc
xor
icebp
jl
clc
flds
inc
jle
jmp
loopne
push
sbb
shll
jle
adc
ret
jno
enter
je
mov
cmp
call
or
adc
add
lcall
test
test
popa
add
je
and
mov
iret
lcall
and
mov
push
xchg
xor
sub
sbb
pop
rorl
test
movsl
push
bswap
std
in
pop
addr16
loopne
and
mov
ret
sub
mov
or
clc
pop
cmp
je
cmp
ja
push
pop
lock
xor
mov
cmp
lret
outsb
pop
pop
dec
cmp
loopne
cmp
out
cmp
sbb
add
or
mov
xor
inc
stos
lea
lea
addl
mov
dec
mov
xlat
or
cli
lea
or
fnstenv
mov
and
push
push
jecxz
push
adc
orl
nop
rorb
xor
jle
xor
sub
loope
jne
and
fsubr
push
sub
out
les
test
xchg
or
lcall
cld
cmp
je
outsb
insb
fdivl
sahf
out
and
push
ficomps
xchg
pop
arpl
outsb
or
movsb
sbb
cmp
inc
mull
lods
loope
dec
mov
std
adc
pop
je
lock
lret
js
xor
cmp
xor
test
ret
testb
push
xorl
add
jno
mov
or
sbb
icebp
inc
jne
adc
lds
aaa
fmuls
cltd
test
jmp
add
xor
stos
jne
push
daa
mov
push
jbe
test
mov
push
rep
test
mov
or
push
and
cmp
shl
lea
mov
sub
in
push
xchg
hlt
insb
loopne
sbb
push
testb
dec
add
fsubrs
jecxz
fnstcw
clc
mov
test
jmp
mov
inc
cmp
out
adc
inc
push
dec
pop
shl
dec
shll
pop
sarl
je
lcall
ret
fdiv
add
lods
mov
dec
and
sahf
rorb
out
push
pop
inc
nop
mov
gs
sbb
insb
dec
je
arpl
sub
jb
push
push
add
or
lds
add
dec
jne
nop
clc
jo
cmp
cmpsb
xchg
stos
add
xchg
xchg
je
dec
repz
les
jmp
sbb
adc
enter
cmp
aaa
xor
xor
add
into
inc
sbb
sbb
ficoms
inc
testb
inc
push
or
mov
and
and
sub
ljmp
or
or
pop
dec
icebp
push
dec
or
cld
push
clc
adc
and
adc
pop
sbb
dec
ret
jp
fdivl
lock
bound
mov
xor
sub
adcb
iret
das
sbb
sbb
xchg
inc
cli
or
xor
insl
or
or
sbb
cmp
and
shlb
adc
mov
push
rorb
dec
pushf
call
adc
inc
push
mov
jle
sti
add
jmp
mov
mov
lahf
test
loopne
adc
add
mov
mov
sub
sbb
ficomps
popf
jne
mov
inc
add
fisubl
pusha
aam
or
adc
test
andb
inc
mov
loope
sahf
cmp
mov
sbb
fwait
adc
stc
mov
pop
sti
lea
push
inc
sbbl
cmp
jp
jg
or
daa
clc
les
inc
cmp
sbb
and
add
scas
shlb
xchg
sbb
sub
mov
xchg
clc
test
cmp
adc
or
inc
shlb
dec
in
out
into
daa
pop
fcoms
sahf
mov
test
sbb
je
mov
pop
insb
ret
sub
popf
jmp
cmpsl
rclb
in
mov
scas
jmp
loopne
incb
cmp
jns
ret
push
test
bound
mov
pop
mov
lea
dec
jne
cltd
push
mov
movsb
sbb
adc
add
enter
add
and
ret
loopne
test
mov
test
or
dec
movsl
push
jmp
repnz
mov
pushf
fwait
xlat
adc
xchg
mov
sub
inc
cmp
cmp
jne
or
inc
in
inc
pop
xchg
or
testl
push
or
xor
mov
loopne
xchg
jecxz
movsb
sbb
inc
push
aaa
fsub
test
dec
xchg
xor
or
or
lods
loope
jmp
cmp
ds
cmp
jb
sbb
scas
pop
movsl
lock
shl
pop
dec
pop
pop
cmp
jne
ds
dec
inc
jo
sub
add
adc
lods
and
lahf
adc
fwait
jbe
fildl
jecxz
fdivs
add
lea
mov
fstpt
cmp
push
jp
push
xchg
xor
cmp
sub
nop
jbe
sub
ret
jp
xchg
jbe
shr
or
add
rclb
je
aam
filds
jge
lock
aas
call
push
jae
adc
pop
and
jmp
mov
enter
mov
sub
push
push
add
fisubrl
sub
inc
int3
and
xchg
nop
ret
dec
sbbl
punpckhdq
xchg
fldenv
xchg
cmp
loope
jmp
mov
mov
mov
lods
dec
add
loope
pop
movsl
jecxz
ret
pop
lahf
fwait
scas
or
push
dec
mov
outsl
push
arpl
test
jne
jb
int3
push
inc
xor
pop
inc
xor
mov
imul
test
inc
mov
inc
rorl
test
inc
andb
dec
sti
push
jmp
inc
inc
jae
or
popa
lock
mov
sub
call
pop
and
js
dec
push
or
cmp
insb
pop
add
dec
jp
mov
or
or
mov
jmp
mov
xor
mov
xor
mov
push
inc
sub
or
xchg
movb
dec
xor
inc
mov
shlb
into
rep
mov
or
add
addl
add
call
fcompl
push
inc
add
add
add
pop
inc
psubq
xchg
cli
stos
add
jmp
and
sub
add
jae
push
add
inc
aaa
pop
clc
rcrb
or
jbe
dec
push
test
stos
inc
mov
insb
std
xor
inc
or
and
jo
jecxz
or
sbb
add
popf
mov
push
data16
iret
or
or
mov
je
cwtl
outsb
sub
push
sub
jns
or
in
sub
sub
push
xlat
sub
inc
hlt
jb
scas
cld
scas
inc
loopne
mov
jge
cmp
cltd
jle
push
mov
dec
mov
mov
mov
lods
push
inc
mov
push
xchg
scas
nop
add
add
push
push
and
and
negl
sbb
or
sbb
and
dec
loopne
popf
fisttps
sahf
imull
jg
fsubrp
push
in
add
les
fists
jmp
loop
ds
and
sub
sbb
stos
mov
mov
pop
nop
mov
push
adc
jno
mov
fists
cmp
fstl
mov
or
push
fs
add
iret
repz
test
loopne
aas
mov
mov
push
enter
or
cmp
xchg
mov
inc
mov
out
rolb
xchg
imulb
rcl
dec
mov
dec
or
jo
add
dec
sub
xor
xchg
ret
cmp
out
cld
jbe
jo
mov
aaa
push
scas
inc
add
lods
push
enter
sub
add
sub
inc
test
or
ret
lcall
xchg
jmp
pop
pop
mov
inc
pop
jmp
sbb
jb
pop
pop
subb
inc
mov
mov
lods
add
mov
inc
mov
cli
mov
sub
or
sbb
cli
mov
cmp
add
scas
or
ret
and
xchg
je
rep
je
inc
dec
jnp
or
push
test
cmc
mov
mov
jmp
inc
subl
or
in
or
cs
cmp
pop
add
mov
cmp
int3
inc
add
xchg
dec
xor
clc
xchg
aad
sbb
push
xchg
add
dec
shlb
add
lea
cwtl
adc
mov
and
pusha
jne
xchg
ret
mov
ljmp
pop
in
add
pop
sub
pop
pop
push
add
inc
daa
pop
scas
inc
xchg
add
xchg
lret
test
adc
sub
leave
movsl
cmp
and
stos
inc
push
imul
xchg
cld
stc
or
scas
fs
or
test
add
inc
pop
icebp
pop
ud2
push
sub
xlat
icebp
sub
test
subb
jne
inc
inc
dec
push
into
pop
cmp
jne
mov
push
add
cmp
add
push
mov
jne
call
mov
cmpsl
adc
inc
sub
outsl
push
cld
dec
adc
cmc
dec
jo
out
sub
sbb
cltd
inc
es
inc
push
cli
les
sha1msg2
sbb
out
jne
ret
shlb
mov
xchg
incl
push
in
push
push
and
sbb
jp
fwait
clc
lcall
insb
pusha
cld
mov
fisttps
sub
je
sbb
xor
pop
adc
cmp
sub
cmp
sbb
xor
sbb
clc
pop
push
jle
sarl
sti
pop
pop
sub
je
push
pusha
xor
mov
adc
cmp
push
xchg
and
add
pop
adc
push
cmp
pop
cmp
jge
cmp
xor
mov
inc
es
and
shl
mov
adc
outsl
aas
lcall
push
subl
pop
sub
into
shlb
jae
popa
outsb
and
push
int3
insl
flds
scas
sub
cmp
pop
cltd
fidivs
mov
inc
add
or
dec
mov
es
sub
inc
add
adc
cmp
jge
add
push
inc
push
adc
lods
repnz
inc
or
inc
fs
in
fdiv
orb
cs
xchg
xchg
or
jle
in
mov
and
inc
sbb
add
or
lods
push
jp
cmp
inc
inc
mov
nop
fdivrl
jo
dec
mov
and
sbb
or
sub
pop
sbb
add
cmpsl
mov
mov
loopne,pt
rorl
xor
mov
adc
sub
mov
aas
inc
call
fs
mov
in
sbb
ja
push
aaa
test
test
andb
xor
adc
adc
xchg
jbe
mov
arpl
and
decl
push
pop
sbb
leave
clc
jmp
andl
mov
add
sbb
mov
pushf
push
cmp
sahf
pop
mov
mov
or
rorb
push
push
add
push
int3
mov
push
aam
int
repnz
insl
jge
dec
push
jg
push
jp
lods
dec
sbb
pop
test
mov
shll
push
push
push
je
fsubp
xor
mov
jl
sub
loope
orb
mov
push
pop
mov
imul
xchg
aam
fstpl
pop
push
xor
sahf
cmp
sub
adc
sbb
test
loopne
mov
enter
roll
mov
add
xor
xor
inc
xchg
add
jno
push
jbe
mov
addb
dec
sbb
dec
add
out
cmp
das
mov
mulb
push
nop
sbb
push
add
sbb
daa
sub
sbb
push
pop
jmp
or
jo
scas
cmp
cmpsb
pop
and
xchg
pop
incb
cltd
pop
mov
fsubrs
pusha
or
clc
inc
xchg
lods
add
push
xchg
dec
lds
adc
icebp
repnz
popa
shrl
mov
or
sub
add
sub
push
sbb
push
jg
sarl
andb
jge
xchg
xchg
and
lea
cmp
jns
sbb
adc
pop
cmp
jne
rcll
dec
add
add
cmp
sub
push
push
sbb
out
jo
movsl
loope
sub
pop
push
xchg
dec
sub
jo
dec
sub
dec
adc
jne
adc
inc
and
cwtl
add
sub
popa
push
cwtl
loopne
and
movsb
sti
ret
push
sbb
xor
sub
pop
adc
negb
push
or
jg
insb
cwtl
push
icebp
fs
mov
sbb
xchg
mov
addl
mov
test
cmp
or
sbb
fdivrl
add
sub
into
aaa
or
adc
les
xor
cmp
add
push
data16
sahf
or
hlt
cs
adc
ret
cltd
xchg
movsl
dec
leave
sbb
dec
pop
adc
mov
jne
pop
mov
push
sub
cld
sbb
inc
cltd
ficoms
add
jmp
xchg
jbe
jbe
mov
lea
inc
xchg
ret
pop
cmp
jg
pop
mov
dec
icebp
sub
das
js
mov
dec
jmp
and
dec
dec
add
or
push
aaa
dec
mov
lfs
jl
mov
clc
out
or
orb
or
cli
cmp
or
mov
lods
frstor
daa
adc
add
shlb
dec
je
orl
or
int
testb
fisubrs
or
sbb
inc
call
unpcklps
nop
push
adc
cmp
loope
jae
or
xchg
inc
jo
jns
scas
push
adc
or
mov
insl
gs
mov
sbb
popa
inc
pop
xor
jmp
push
pop
xor
je
push
add
fwait
cmp
xor
jle
pop
and
aas
add
push
push
daa
je
jge
mov
sub
fists
mov
mov
cmp
adcl
adc
pop
add
or
inc
push
mov
leave
popa
fs
push
pop
inc
add
ja
mov
mov
mov
jns
jb
sub
addb
fiaddl
jbe
mov
sbb
lcall
mov
inc
or
loopne
push
rcll
xlat
or
jge
mov
jl
jmp
add
je
or
in
sbb
push
enter
jmp
cmp
sbb
xchg
orb
jne,pn
dec
mov
pop
dec
sbb
xchg
jns
shld
movsl
inc
rorl
xchg
sarb
arpl
or
and
jno
jg
mov
clc
jo
lret
hlt
jo
add
dec
push
lcall
add
ret
sub
dec
movsb
push
movsb
cmp
test
nop
inc
cmp
nop
sbb
fsts
xor
mov
mov
popa
sub
xchg
leave
out
movsl
cmpsb
lock
es
in
push
add
sub
mov
jnp
in
pop
push
shll
push
pusha
xchg
jne
push
cmp
mov
ja
in
inc
repz
movsl
adc
popa
cmp
add
movsb
dec
and
and
add
loopne
mov
sub
les
pop
subl
loopne
dec
mov
cmpsl
adc
cmpsl
push
jge
adc
inc
dec
and
xorl
sub
insl
xor
adcl
frstor
adc
fcoml
add
dec
fmuls
xor
xor
rol
sub
or
jne
fistpl
push
rcrb
add
inc
push
aas
aaa
cli
add
pop
dec
hlt
jne
jmp
sub
mov
add
inc
and
scas
pop
cmp
inc
add
popa
add
bnd
push
or
mov
sbb
loopne
push
and
xchg
push
and
mov
sbb
dec
xor
xor
lods
pushf
sarb
pop
or
pop
rcrb
arpl
ret
cmc
cmp
test
test
jbe
cmp
add
in
loope
out
shl
in
adc
push
inc
jmp
cmp
push
dec
adc
mov
mov
sbb
adc
and
icebp
outsl
cltd
xlat
mov
lds
inc
jno
dec
dec
and
xor
in
mov
adc
xor
js
or
pop
cltd
out
fisttpl
lret
jne
push
jne
aas
add
or
dec
out
add
in
mov
add
push
jns
repz
in
mov
sub
loopne
or
mov
mov
push
dec
ret
adc
lods
xor
aaa
cmp
cmc
stos
inc
ret
jae
mov
hlt
jb
test
mov
lret
mov
sbb
icebp
outsl
movb
jb
mov
sbb
mov
test
cmp
sub
jmp
test
mov
push
jne
xchg
add
xor
rolb
mov
add
or
cmp
and
imulb
movsl
or
and
mov
scas
and
negb
jge
clc
mov
lock
push
mov
mov
sub
mov
pusha
dec
add
mov
push
mov
adc
adcb
xor
add
push
into
and
xorb
adc
std
jb
cmp
jb
stc
and
sbb
add
idivl
mov
xchg
adc
cmp
outsb
mov
or
push
repnz
aaa
push
rclb
enter
aaa
or
cs
sbb
test
inc
lods
leave
and
and
stos
shlb
dec
cmp
lea
cli
or
push
push
push
mov
add
adc
sub
jge
and
or
adc
aaa
insl
cs
add
sbb
sahf
cli
and
imul
jmp
sarb
ret
test
and
or
mov
in
xchg
cmp
jl
imul
sub
sbb
add
mov
adc
fs
or
js
out
adc
aad
mov
push
das
leave
xchg
shl
shr
and
mov
cmp
dec
in
sbb
rolb
inc
leave
sbbl
and
test
fldt
or
or
and
jae
popa
xchg
xor
add
fisubs
jg
jge
in
test
and
dec
cs
push
mov
inc
popa
sub
ljmp
jae
andl
js
mov
mov
clc
or
test
jg
dec
push
movsb
iret
mov
mov
sub
mov
jb
hlt
scas
mov
lods
incl
sbb
shrb
and
clc
add
pop
mov
push
inc
sub
loope
sti
pop
sahf
jl
sub
inc
or
mov
add
add
cmp
cltd
push
imul
xor
sbb
test
cmp
inc
xchg
xchg
push
inc
xchg
mov
lcall
inc
popf
sbb
jmp
and
push
adc
sub
inc
loop
sbb
test
cmp
push
push
pusha
adc
mov
sbb
mov
lock
pushl
rcr
xor
dec
nop
or
inc
call
xchg
xchg
cwtl
push
in
orl
or
fneni(8087
push
nop
pop
mov
jmp
ja
push
aaa
scas
mov
ss
cmp
je
xor
sbb
sbb
js
jl
xor
outsl
jo
push
roll
adc
and
xorb
xchg
mov
add
in
idiv
jmp
fmull
idivl
add
lea
mov
test
adc
movzbl
push
sbb
pop
inc
out
xchg
and
lods
lahf
push
mov
sbb
sahf
mov
mov
je
test
and
sub
and
imul
lock
cld
mov
cmpsl
or
cmc
inc
inc
dec
jl
clc
jle
cmp
add
mov
xor
sbb
xor
dec
push
jg
cmp
rorb
push
push
movsl
movsl
pop
mov
sbb
incl
cltd
adc
cwtl
xrelease
scas
loope
push
push
jno
mov
jne
scas
jmp
and
xchg
jge
stos
add
cmp
mov
add
sub
sub
les
pop
push
js
cmp
insb
sbbb
subb
adc
adc
push
fcomps
std
pop
imul
pop
mov
mov
js
xchg
sub
mov
pop
or
inc
dec
mov
xchg
ja
leave
nop
or
push
or
addb
push
jecxz
and
mov
or
sahf
pop
pop
dec
lock
adcb
insl
call
mov
fstpl
lea
inc
repnz
pop
aam
push
sub
add
add
sub
jp
dec
mov
and
or
cmp
adc
int
pop
pusha
or
pop
pop
pop
xchg
jl
push
xor
pop
sub
inc
std
cmp
test
inc
inc
cld
xchg
mov
xchg
pop
xor
in
mov
sti
sbb
mov
push
pop
adc
lods
aaa
mov
nop
imul
jb
lret
jmp
andb
rorl
xchg
mov
movsl
out
andl
inc
jb
mov
push
popf
cmp
and
pop
fsubr
loopne
xchg
mov
sub
out
std
push
daa
flds
pop
jno
pop
clc
and
das
jecxz
and
push
jae
mov
inc
inc
insl
dec
ret
mov
rorb
add
mov
cmp
or
mov
ss
or
dec
je
dec
dec
add
cmc
pushf
adc
add
mov
xor
jmp
ror
push
jmp
inc
gs
sti
idivl
add
sti
enter
dec
or
mov
inc
sub
add
es
xchg
ds
push
and
cmp
shl
mov
cmp
and
test
jne
clc
sub
add
jmp
add
mov
popf
inc
inc
arpl
xor
or
jbe
fcmovb
aaa
les
js
sub
aas
inc
xchg
xchg
jbe
stos
xor
pop
adc
fs
adc
adc
mov
call
scas
data16
test
rolb
xor
jo
or
jle
push
push
ja
mov
loope
mov
push
std
or
dec
call
and
add
add
mov
push
mov
jbe
mov
xor
loopne
mov
xor
pop
cmp
jle
mov
fadds
mov
jle
adc
pop
insl
sti
js
pop
pop
inc
pushf
test
xor
pop
cltd
popa
movsl
pshufw
rorb
sbb
sbb
mov
nop
ret
jne
or
cmpl
mov
lock
cmp
jl
xorl
mov
ret
je
insl
sbb
push
bound
ds
push
jns
mov
ja,pn
clc
sbb
add
jecxz
pop
stos
mov
pop
stos
adc
jmp
jne
add
loope
inc
jnp
push
sbb
leave
xchg
les
push
lea
xor
out
data16
mov
push
inc
inc
jmp
dec
or
scas
and
xchg
fsubrl
push
ds
xchg
data16
jnp
test
lret
rorb
shr
or
leave
data16
xchg
sbbl
adc
fcmovu
xor
ret
push
cmp
mov
sub
pop
xchg
push
sbb
ljmp
pop
and
inc
shlb
xor
push
xchg
or
xor
add
test
adc
or
sub
daa
xchg
fwait
enter
jle
xchg
cmp
pop
mov
sbb
sahf
push
cmpsl
fsub
mov
add
data16
ret
insb
add
push
xchg
and
cmp
and
sub
sbbb
popl
push
cmp
test
pop
or
pop
mov
mov
or
push
sbb
mov
fbld
push
dec
or
shll
mov
mov
jmp
xor
adc
push
cmp
add
sarb
pushl
cmp
jne
adc
cmp
adc
shr
sbb
xor
test
sub
lret
mov
sbb
push
arpl
xchg
xor
lods
and
inc
addl
push
or
push
jp
orl
jo
ret
jae
imul
sub
fstl
lcall
je
inc
push
and
mov
call
subl
cmp
gs
xchg
shrl
adc
loop
cmp
jle
aas
ss
pop
inc
cmpb
and
cmp
rorl
pop
push
pushl
rcr
cmp
outsb
jne
pop
decl
xchg
loopne
rol
push
sbb
pop
push
movl
jnp
loopne
push
cltd
push
mov
push
push
inc
movsb
mov
sub
mov
add
inc
mov
mov
test
mov
xlat
mov
pop
dec
dec
xchg
cld
jp
mov
cmp
jne
pop
scas
es
xchg
in
and
push
nop
cwtl
sbb
inc
add
adc
cwtl
cwtl
orb
cmp
inc
mov
cli
jl
lret
mov
js
rcrb
push
xorl
pop
sub
into
sbb
inc
xorl
or
cmpl
mov
inc
lret
or
dec
mov
mov
jbe
dec
bound
pushw
hlt
fisttpll
mov
arpl
icebp
das
mov
or
incl
outsl
mov
jne
inc
in
shl
inc
jmp
and
inc
inc
sub
fimull
adc
movb
dec
cmp
jecxz
rolb
sbb
mov
push
sbb
and
sbb
adc
push
pop
inc
bound
adc
xor
or
enter
cs
sbb
push
aas
aad
sbb
jno
push
call
sbb
and
pushl
mov
aad
imul
mov
xchg
xor
mov
inc
mov
enter
mulb
lcall
sti
lock
add
shrl
inc
and
or
adc
into
add
mov
adc
or
cmp
sbb
add
mov
rcl
shl
fcomi
je
sub
cmp
sub
dec
inc
aam
andl
push
push
cmp
ret
jmp
pusha
and
dec
dec
or
cmp
add
test
push
in
pop
mov
sti
or
sub
inc
aam
popf
or
inc
sub
or
insb
psubd
cmpsl
xor
movsb
mov
adc
sarb
sbb
mov
pop
out
inc
in
xchg
cmpsb
and
push
ficoms
xorl
mov
add
and
aas
jmp
adc
add
mov
xor
int
insl
adc
movsl
sub
fisubl
test
sarl
jge
mov
push
orb
cmp
pop
out
mov
sarl
add
pusha
or
lock
mov
roll
dec
or
add
xchg
push
lods
mov
cmp
test
fs
and
in
into
icebp
or
push
stc
ja
add
sbb
add
cmp
es
inc
pop
mov
fldl
ss
cmp
adc
dec
test
sbb
lret
sub
jmp
ret
ret
adc
push
js
add
jle
jl
push
loope
call
ds
push
orb
inc
jne
pcmpgtw
cmc
mov
and
addb
loopne
mov
xchg
pushl
ficoml
push
lds
shll
mov
je
jae
push
jo
jle
xor
pusha
mov
fdivs
sbb
cmp
roll
pop
aam
shll
push
jae
mov
add
lock
js
jl
ror
sarb
add
aas
fldenv
add
xchg
or
aam
mov
gs
test
push
fsubrs
jg
inc
es
xchg
inc
sbbb
mov
mov
rorl
inc
sbb
inc
add
sub
push
xchg
ficoms
lock
hlt
paddb
in
sbb
xchg
mov
insl
jb
cmpl
mov
nop
mov
and
and
dec
lea
popf
jg
in
addb
popa
jl
cmp
jg
sub
mov
inc
cmp
jne
subl
push
inc
cmp
jmp
push
fs
test
xor
cmp
push
add
test
push
xchg
pop
xchg
les
push
das
mov
test
push
cmpb
into
mov
orl
push
lods
and
add
fidivs
shr
adc
loopne
call
add
push
lock
dec
or
xchg
je
arpl
mov
sbb
adc
jb
pop
sbb
jo
jecxz
jge
maskmovq
imull
inc
and
testl
stc
or
jne
sub
push
cmp
fwait
sbb
mov
ljmp
rol
sub
inc
xchg
aam
or
xor
pop
push
rcrb
pop
sbbb
cmp
xor
sbb
in
adc
adc
and
and
pusha
adc
push
fs
cwtl
pushf
cmp
and
fnstsw
pop
fdivs
xor
cmp
call
mov
push
cmp
int3
rcll
stos
pusha
pushl
in
int
push
sbb
les
pop
dec
mov
cmpsb
sub
sahf
fcompl
dec
or
es
mov
mov
lea
ss
adc
xlat
push
jo
scas
shlb
or
sbb
movsl
sbb
faddl
push
mov
clc
mov
cmp
jb
add
and
lea
lods
mov
xchg
pop
push
mov
scas
lret
push
dec
sbb
ss
int3
cmp
lods
pop
aam
outsb
out
or
gs
inc
xchg
mov
adc
aas
xchg
xchg
dec
mov
aam
jg
jno
dec
push
inc
mov
mov
mov
add
sub
push
lock
ret
adc
lret
or
and
sub
or
or
lea
cmpb
je
cmp
push
add
sub
cld
pop
xor
adc
fldl
inc
pusha
sub
add
push
xchg
pop
or
inc
xor
clc
je
cmpsl
mov
and
in
clc
sub
pusha
push
sar
and
mov
lcall
test
dec
loop
jo
inc
add
mov
test
in
stos
push
push
add
or
lahf
rcrl
aaa
cmp
cmp
xadd
and
leave
xor
xchg
or
out
mov
xlat
adc
jle
mov
loopne
dec
pop
aas
push
js
fadds
movb
je
add
jecxz
adc
lds
popa
mov
rorl
sahf
sub
push
dec
or
loope
inc
sbb
mov
push
mov
fiaddl
cmp
dec
jge
stos
dec
jns
neg
rolb
adc
les
and
sub
or
test
in
add
rcrl
inc
hlt
out
inc
add
sbb
xor
ds
pop
mov
lcall
push
mov
and
sub
das
push
add
add
insl
sahf
push
xor
add
pusha
fs
test
add
aaa
pop
xor
jmp
mov
jle
aad
xchg
mov
and
inc
clc
jge
leave
add
dec
cmp
pop
pop
push
pop
add
pop
adc
dec
popa
push
ja
stc
jo
inc
mov
inc
push
outsl
mov
add
mov
cmpsl
or
in
cmp
xchg
dec
cmp
add
add
es
add
test
and
or
or
add
stc
and
pop
adc
mov
and
adc
adc
inc
sub
pushaw
xor
bound
jmp
clc
or
adc
push
adc
jo
scas
mov
cwtl
add
ds
jmp
and
nop
xor
sbbl
inc
rcll
push
add
enter
test
dec
fisttps
xchg
xchg
in
jne
clc
fistpll
icebp
jmp
and
in
fldl2e
fmulp
jbe
sbb
call
add
data16
ljmp
inc
inc
add
ret
xchg
addl
outsl
dec
mov
test
insb
adc
sub
or
mov
loope
lahf
cmp
or
lahf
sbb
loope
ret
fldln2
mov
adc
in
fwait
loope
cli
je
shll
ret
inc
popa
ljmp
ficoms
in
inc
sbb
divl
fldz
pop
push
xchg
rclb
cmp
cmp
jmp
pop
ja
or
mov
xchg
imul
cmp
mov
fcompp
mov
cmp
xor
mov
mov
jbe
lock
stos
fsubs
xchg
fcomps
push
adc
cwtl
add
sub
je
and
or
inc
sar
dec
rorb
icebp
push
call
push
add
or
in
adc
data16
push
je
shrb
jo
test
cmpb
and
push
sub
mov
cs
and
mov
jmp
mov
sbbl
push
pop
sub
sbb
sub
in
xchg
enter
lock
addb
shl
sar
ror
shll
sbb
and
add
fcoms
and
or
ret
stos
push
iret
or
stc
mov
icebp
in
std
rol
mov
mov
cwtl
or
add
les
call
add
adc
neg
jg
push
test
ret
fstpt
or
je
mulb
pusha
sub
add
add
pop
mov
xor
or
movsb
pusha
pop
int3
pushf
test
mov
mov
jg
ror
adc
add
loopne
adc
loopne
adcb
aas
cmp
mov
lods
jmp
sub
adc
sub
iret
in
fnstenv
loopne
hlt
mov
fiadds
xchg
popf
add
fldcw
rcl
inc
imul
loopne
xchg
les
das
push
or
fnstcw
sbb
hlt
ror
push
sti
sbb
push
ret
xchg
push
xorb
dec
test
adc
jle
cmp
aaa
push
mov
or
ljmp
or
movsb
enter
or
or
fldt
or
popf
add
add
leave
fidivl
and
pop
sbb
bound
push
shlb
je
jle
or
iret
pop
cmp
gs
les
inc
les
jb
jbe
cmp
jne
jmp
cmp
je
mov
sbb
fldl
pusha
enter
fcompl
notb
or
in
and
mov
push
mov
in
add
cmp
push
push
dec
jae
scas
rol
sarb
cmp
jne
cmp
mov
mov
jne
mov
js
or
jb
or
inc
pusha
fnstsw
mov
dec
jo
jb
xchg
and
inc
sbbb
jb
sbb
xor
sub
inc
xor
pop
inc
rorl
jmp
sub
mov
jmp
mov
ss
mov
push
sbb
nop
mov
mov
out
adc
daa
lahf
pop
cmp
push
dec
out
adc
sahf
fcmovnb
dec
cwtl
rcrl
mov
out
pop
test
pop
jne
and
inc
sub
xor
mov
inc
insb
xor
add
decb
cltd
imul
cmpsb
ret
mov
add
pop
dec
test
add
ficompl
ja
es
movsb
jo
adc
dec
imulb
adc
ljmp
aaa
and
gs
push
push
clc
ret
and
test
popa
add
jo
mov
nop
sbbb
sbb
orl
rorb
adc
adc
mov
cmpsl
jae
mov
mov
test
or
or
loopne
sbb
xchg
loopne
xor
das
pop
or
xchg
and
lock
pop
add
and
adc
or
and
lahf
dec
bound
mov
cmp
inc
lret
cwtl
mov
fstpl
xor
imull
sub
shr
xor
xchg
mov
and
and
sub
rorb
cmp
sub
sahf
dec
or
test
adc
or
or
pop
push
adc
jns
test
or
or
or
sbb
sub
je
cltd
sbb
insl
je
or
or
sub
xchg
nop
fimuls
add
add
push
iret
ficoml
sbb
movsl
jb
lret
mov
jmp
andl
add
jp
in
dec
and
jecxz
sbb
or
jmp
sbb
jge
jmp
sbb
je
push
push
pop
pop
pop
pop
mov
or
cmp
jle
dec
and
jecxz
push
xchg
das
xchg
out
xchg
dec
add
cmp
inc
xchg
fldl
cmp
pop
cmp
push
test
xor
testb
mov
dec
in
or
add
add
pop
lock
out
test
fisttps
repz
sbb
jp
je
add
dec
mov
dec
add
sahf
push
and
or
shll
adc
rcll
or
push
push
rcrb
pusha
pop
push
sub
stos
in
outsb
adc
and
inc
dec
pop
adc
negb
cmpl
pop
cmp
test
jb
pop
bound
je
test
je
xor
sub
jmp
cld
ret
scas
push
neg
or
pusha
pop
xor
test
sarb
or
mov
add
mov
pop
and
leave
cmp
out
pop
push
shrl
mov
fsubrl
addb
loope
mov
adc
hlt
fldl
inc
add
push
in
dec
pop
dec
push
or
leave
rcr
fstpl
mov
push
sbb
test
into
adc
mov
xchg
xchg
mov
adc
loope
popf
ss
and
xchg
or
jb
sub
push
ds
into
sti
add
int3
mov
jge
lret
jmp
test
and
and
daa
add
or
adcl
cli
mov
pop
sub
test
sbb
xchg
pop
jp
add
insl
hlt
lcall
dec
add
clc
roll
adcl
test
lea
jmp
jo
add
pop
pop
je
imul
lcall
and
out
or
pop
push
jns
xchg
cmp
add
fcoms
or
adc
xor
lock
icebp
sbb
and
mull
cmp
inc
inc
mov
pop
xor
xchg
dec
xorl
push
scas
xor
push
int
inc
loope
aam
sbb
pop
or
mov
and
pushf
test
jo
mov
pop
push
or
pop
xchg
xbegin
in
jp
int
pusha
mov
nop
lock
clc
add
push
ret
push
xor
push
test
dec
xorb
push
add
jle
sub
xchg
xlat
and
les
sahf
add
popa
xlat
pop
jo
daa
push
shrl
rcl
push
stos
pop
xorl
sahf
push
mov
and
sub
loopne
lds
xchg
mov
xchg
add
sub
and
pop
mov
sub
test
adc
mov
push
ret
sbb
daa
sbb
fimull
incb
or
jb
sub
push
andb
mov
outsl
dec
xchg
mov
sub
gs
or
sbb
dec
jmp
or
and
gs
out
cmp
ret
and
dec
out
mov
jecxz
cmp
sub
sub
call
pminsw
loopne
mov
cs
or
jae
push
fstsw
ss
sbb
aam
and
fnclex
sbb
loopne
ror
mov
dec
cld
or
test
mov
inc
cld
fwait
mov
fcoms
movsb
nop
or
sub
or
clc
adc
and
push
imul
jl
jo
jecxz
data16
fcomps
or
jo
out
jmp
mov
adc
xor
push
adc
xchg
and
decb
fiadds
orb
and
push
xchg
js
xchg
jp
push
lahf
popa
mov
jnp
sbb
mov
frstor
add
mov
sarb
cli
mov
or
fsubrs
sbb
xchg
add
test
xor
popf
mov
cmp
mov
mov
sbb
je
cmp
je
push
xor
mov
and
jmp
mov
aaa
cmp
movl
jp
lods
daa
ret
push
ss
test
insl
into
or
insb
jnp
lcall
push
gs
popf
imul
fwait
divl
pop
enter
jmp
pop
add
mov
ret
jbe
shl
popf
sbb
inc
bound
lock
punpckhbw
cli
adc
movsl
cmpb
and
sbbb
mov
rorl
inc
push
ljmp
pop
pop
mov
jmp
jecxz
ret
lds
inc
pop
adc
push
data16
push
fsubs
jne
js
lcall
xor
shrl
mov
push
xor
call
mov
add
add
jae
push
call
mov
jl
stc
ret
pushf
sbb
mov
fcompl
pop
sbb
pop
push
addr16
aam
jmp
xor
pusha
jns
jp
in
push
sbb
jbe
aas
bound
fmuls
inc
pusha
leave
dec
mov
movsb
mov
jmp
jne
xor
adc
sub
jb
mov
dec
icebp
into
rcl
jae
ret
pop
xor
es
out
push
inc
stc
push
push
and
out
divb
lock
int
fdivr
adc
sub
and
out
push
loope
ret
and
xchg
push
cmp
out
and
xor
add
adc
scas
insl
push
fcmovu
test
lea
pop
imul
pop
lret
gs
cmp
data16
jge
insb
in
shr
xor
or
lret
mov
orl
lds
jge
lods
pop
xor
inc
inc
lret
lret
cltd
jbe
nop
int3
or
movsl
cwtl
sub
mov
dec
pop
out
xor
or
int3
rorl
push
jb
or
adc
and
jbe
mov
xor
add
int
roll
xchg
bound
cs
mov
out
xor
das
inc
into
cmp
enter
push
int3
xchg
dec
or
mov
movsl
sub
xor
das
push
cmp
push
jne
sbb
divb
sub
loopne
cmp
mov
xor
xchg
out
push
out
or
outsl
sub
pop
sub
fdivs
push
xchg
shll
dec
dec
xchg
fisttpll
rcrb
leave
fnstsw
fcoml
and
and
enter
fistl
pop
add
sub
jl
sub
xchg
addb
les
dec
jmp
cmp
enter
dec
mov
sub
sub
outsb
push
xor
aas
xchg
or
ret
mov
mov
pop
out
testl
enter
cs
push
cltd
in
ret
test
pop
adc
dec
add
ret
aas
in
aas
inc
arpl
sub
ja
xor
js
cmp
mov
ss
or
push
lods
xchg
add
fsubs
repz
movsl
fdivrp
push
dec
inc
push
adc
jb
loopne
jge
inc
call
or
sbb
xor
imul
push
insb
xchg
jns
aas
jbe
add
add
cltd
rcrb
push
fwait
neg
loope
sub
shll
fadds
or
pop
or
fmull
pop
mov
and
fstpl
sbb
sub
jb
xor
lcall
or
sar
push
fnsave
inc
xor
add
stos
mov
int3
insb
xor
enter
inc
or
mov
fnstenv
andl
or
fstps
sbb
pop
xor
xor
xor
jl
pop
jl
push
test
inc
xor
and
pop
ret
mov
clc
lcall
out
nop
out
lret
and
sub
pop
sahf
sub
cmp
dec
add
mov
inc
sti
sbb
fsubrp
and
dec
mov
add
and
pushf
and
and
cltd
add
dec
cs
cmc
cmc
inc
imul
in
cli
adc
arpl
mov
or
inc
sub
outsb
repz
push
xor
stc
xor
push
jns
rorb
and
hlt
cmp
out
cmpsl
adc
lock
jne
jno
add
es
clc
pop
test
data16
out
add
sbb
push
inc
ret
mov
aaa
sbb
jmp
stc
rcrl
add
pushl
leave
idivl
scas
stos
sub
push
sbb
loopne
test
jno
or
xor
pop
cmc
mov
sbb
shlb
nop
insb
or
inc
or
rclb
out
cmp
mov
add
ffree
stos
bound
shll
je
ds
mov
das
cmp
ss
aam
hlt
inc
xchg
jl
gs
push
jne
jo
dec
dec
ret
ret
js
jg
insb
test
or
cmp
lahf
comiss
mov
or
jecxz
clc
je
cmp
cmp
je
pop
nop
ret
cmp
pop
cmpl
push
push
xchg
cmp
inc
pop
movsl
or
rolb
dec
repnz
in
add
xchg
add
jno
mov
in
in
fisttps
xor
and
mov
rorl
jl
mov
xorb
ljmp
mov
sub
adc
mov
add
mov
movsb
cmp
mov
cmp
xor
pushf
add
jmp
jp
jo
stos
and
mov
inc
inc
int3
ret
dec
cld
or
xor
lods
mov
mov
pop
adc
xchg
jge
cs
xor
pop
pusha
and
lret
cltd
jo
sub
mov
int
mov
pop
popa
jp
push
pop
lea
push
imul
aam
jecxz
repnz
pop
push
test
dec
loope
mov
add
mov
adc
ret
aas
leave
adc
js
inc
pop
ret
xor
sub
adc
dec
loopne
adc
ljmp
mov
sarl
mov
xchg
cmpb
test
ret
pop
sbb
add
mov
and
xor
shr
push
mov
push
iret
dec
cmpsl
xor
int
call
or
std
jl
mov
jmp
fmuls
sbb
add
inc
adc
add
pop
jmp
xor
daa
insl
fnstenv
adc
jo
xchg
xor
sbb
mov
sub
pop
sub
in
je
add
and
add
xchg
test
stos
loopne
pop
sbb
imul
les
addr16
jecxz
sar
test
cmp
insl
loopne
js
jbe
aas
adc
sub
movzbl
icebp
fcmovbe
and
pop
push
movsb
gs
mov
jb
jmp
das
xor
cmpb
mov
out
or
sbb
add
addb
and
or
add
loopne
fwait
dec
push
add
pop
test
cmp
jle
fsubr
test
jne
adc
push
cltd
cld
and
sbbb
cmovo
dec
sub
in
add
outsl
pop
mov
ret
mov
cltd
mov
or
inc
aad
dec
jg
mov
xchg
adc
jo
add
pop
ljmp
mov
jae
ja
cmp
cmp
jg
imulb
or
fs
in
lods
or
add
and
jle
jmp
aaa
arpl
mov
pop
lahf
lahf
sbb
dec
clc
inc
cmp
loope
hlt
xor
and
mov
jg
jmp
andl
sub
outsb
pop
daa
lea
or
loope
popa
icebp
adc
ror
in
sub
fldcw
xchg
dec
lock
mov
jecxz
push
adc
push
call
packuswb
sbb
and
mov
dec
cmp
jl
and
adc
jg
dec
adc
adc
or
and
mov
test
jmp
adc
rol
adc
test
inc
scas
mov
fiaddl
or
lcall
fcomps
cmpsb
and
testb
fmuls
or
inc
rclb
inc
shll
or
dec
inc
loope
jnp
mov
popf
das
push
sbb
jae
in
das
sub
jle
je
jle
cmp
add
orl
inc
xchg
mov
mov
lock
or
fadds
insb
insb
ss
mov
xchg
sub
jb
out
leave
mov
insb
xor
mov
sub
mov
cmpsb
mov
dec
movaps
xor
xor
or
enter
or
or
jno
jge
add
ds
scas
lods
sub
mov
mov
sub
lock
adc
fstl
xchg
and
add
inc
loop
xor
adc
mov
push
jg
xchg
lock
inc
xchg
xor
mov
fdivrs
adc
sub
dec
in
loopne
sbb
push
dec
jo
movsl
mov
push
in
cld
js
call
sahf
mov
out
popf
mov
mov
or
imul
jmp
test
inc
loopne
iret
leave
cmpl
push
clc
or
cmpl
add
add
xchg
and
ds
pop
dec
dec
adc
aam
sahf
jmp
xor
ss
adc
push
repnz
cmpl
push
xor
sub
sahf
push
imul
out
adc
jecxz
fisubrl
or
sub
sbb
jl
dec
testb
inc
mov
ds
dec
xlat
jbe
das
pop
dec
xor
repnz
dec
and
push
sbb
adc
data16
pushf
jae
inc
and
mov
nop
sbb
aaa
cmp
mov
adc
push
add
lock
cmpl
fwait
xchg
fwait
pop
pop
inc
dec
or
xchg
and
push
sbb
stos
jne
scas
mov
loopne
jnp
jle
addr16
cmp
loopne
cmp
push
imul
mov
cmp
dec
add
imul
inc
xchg
out
jmp
xor
jmp
sub
scas
jl
xor
pop
jge
dec
roll
sbb
popa
mov
js
sbb
push
pop
sub
jo
imul
cmp
loopne
jmp
ret
in
outsl
sbb
mov
add
and
or
push
mov
and
je
pop
int3
sub
push
lods
pop
or
cmp
sahf
sbb
cld
pop
popa
jl
adcb
fst
mov
pop
es
jmp
mov
imul
pop
pop
mov
sub
pop
dec
and
xchg
mov
fwait
cmp
je
gs
insl
clc
cmpsb
sbb
jmp
gs
and
mov
roll
pop
insl
mov
and
aad
shr
pop
stos
push
inc
cmpsb
gs
sub
mov
loopne
flds
mov
dec
mov
stos
pop
lea
cld
imul
mov
pop
add
aad
call
adc
js
ret
iret
popa
or
cwtl
and
or
push
sub
xor
mov
cmp
mov
or
mov
inc
xchg
add
enter
in
add
mov
sub
add
adc
inc
add
std
sbb
add
sbb
or
add
adc
jnp
add
cmpsb
inc
or
rcrb
jecxz
cltd
or
cmpsl
cmp
int
repz
and
add
adc
lods
xlat
lods
push
data16
push
sbb
test
mov
clc
push
jmp
test
leave
pop
aas
pusha
sahf
hlt
cmp
cmp
add
mov
out
push
push
imull
mov
sbb
sub
aaa
cwtl
jl
divl
daa
cmp
jle
sti
jns
das
lea
mov
test
and
fs
push
idivb
xor
test
lods
js
out
imul
lock
je
loope
xor
inc
sbb
in
les
sub
adc
loopne
jbe
or
data16
ret
inc
scas
cmp
in
shr
lock
jp
ret
pop
rcrl
or
testb
inc
jl
sub
cmp
or
xchg
or
ss
enter
pusha
fstl
jns
xor
aas
and
cli
fbstp
enter
add
push
data16
push
jmp
inc
andb
push
adc
shlb
sbb
pusha
loop
lds
mov
jp
mov
shrl
and
sbb
sub
adc
das
ret
popa
add
jbe
cmp
push
adc
jno
or
punpckhwd
dec
js
rcr
jno
repz
movsb
push
sbb
or
push
cmpsb
adc
inc
or
push
frstor
gs
push
frstor
or
push
inc
inc
sahf
adc
or
adc
xchg
adc
or
or
cwtl
mov
mov
add
cmp
adc
lds
adc
mov
mov
add
xor
add
mov
outsb
mov
into
add
sbb
or
dec
xor
or
adc
call
nop
addb
cs
add
cmc
cs
pop
mov
iret
imul
or
fmuls
dec
pop
xchg
int3
out
mov
pusha
xchg
xor
fiadds
shrb
pushf
adc
add
dec
cmp
jbe
push
pop
sub
dec
push
inc
inc
mov
jae
mov
xchg
test
dec
add
pop
mov
pop
push
adc
and
jmp
es
in
mov
cmp
push
xchg
and
pop
push
inc
mov
add
push
mov
sub
or
pop
add
iret
cmc
outsb
and
push
je
sar
cwtl
add
push
daa
inc
and
int3
sub
xor
dec
pop
cmp
pop
xor
mov
mov
roll
jno
and
cmp
sbb
push
shlb
jno
jno
cmp
mov
lret
shr
not
and
add
lock
cmp
dec
call
xchg
or
data16
pop
add
or
and
push
pushf
xor
and
popa
cwtl
mov
mov
push
mov
add
es
bound
ret
insl
mov
in
sbb
pusha
mov
inc
cld
std
xchg
rorl
js
push
scas
push
mov
subb
pop
or
sbb
dec
adc
dec
stos
sub
mov
or
xor
add
loop
xor
adc
lahf
into
lcall
mov
sti
add
pop
pop
or
xor
lsl
movsb
adc
adc
ss
cld
outsl
das
xor
or
movsb
mov
or
iret
jle
fsubrs
adc
inc
scas
add
and
cltd
push
imul
jnp
adc
push
add
inc
jmp
adc
cmp
push
push
dec
insb
sub
adc
push
push
mov
and
or
pop
cmp
adc
xlat
jp
pop
movsl
pop
cmp
and
cmp
addb
adc
orl
lock
mov
and
cmp
xchg
adc
or
jmp
loopne
add
call
mov
outsb
dec
test
jae
inc
mov
and
inc
pop
dec
pusha
js
ret
adc
fnstsw
outsl
mov
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
in
push
xor
or
outsb
jmp
jo
aaa
dec
es
mov
and
js
mulb
lcall
xchg
jp
loope
jp
cmp
mov
negb
dec
sub
mov
xor
nop
cmp
sbb
adc
mov
adc
inc
or
pusha
add
push
cmpb
mov
sbb
mov
cmp
xlat
push
xlat
and
mov
mov
scas
into
cli
decb
popf
int
and
pop
mov
testl
sub
pop
pop
sub
stos
mov
add
aas
jle
mov
mov
cmpsb
mov
popa
cmp
sub
push
inc
shrl
dec
cmp
gs
mov
pop
mov
decb
jne
push
add
dec
adc
and
jmp
dec
sub
sub
or
push
insb
xor
and
add
insb
or
pop
fistl
add
sub
sbb
stos
or
icebp
jle
pop
rcr
inc
mov
push
inc
or
cmp
rcll
decb
jge
sub
mov
sub
add
into
shr
or
adc
push
or
das
push
or
lock
add
mov
pop
orb
cs
add
xor
bound
sbb
add
pop
pop
mov
inc
add
mov
enter
stos
mov
sbb
cmp
or
dec
push
and
mov
add
adc
or
cltd
mov
sbb
out
xor
dec
test
adc
xchg
jnp
push
cmp
pop
inc
bound
rolb
sub
xor
je
xor
inc
or
jbe
scas
es
push
rep
clc
dec
inc
jnp
xor
mov
add
test
dec
ja
xchg
jno
or
lods
inc
mov
push
add
in
outsb
imul
add
in
mov
rolb
sti
pusha
adc
mov
js
push
pop
sbb
jge
xchg
add
push
mov
sub
ja
lea
dec
in
mov
psubsb
push
out
lea
cld
lock
pop
ja
xor
add
sub
sub
cmp
lock
sbb
dec
lcall
dec
or
clc
imul
push
pusha
ja
lea
adc
inc
fs
inc
test
mov
mov
inc
roll
mov
jne
or
mov
and
push
sbb
fiadds
rcrb
cld
xchg
sub
or
dec
add
jmp
or
sub
adc
mov
add
or
xor
jp
push
cmpsb
jg
scas
es
sbb
pushf
pop
sbb
adc
push
mov
pop
dec
or
pop
stos
inc
arpl
add
xchg
cmpsl
adc
inc
stos
mov
cs
call
ja
or
sub
mov
pop
mov
hlt
sar
dec
mov
incl
pop
mov
xor
xchg
pop
jg
or
dec
cmpsb
imul
fadds
add
xchg
adc
jae
push
fs
ror
adc
mov
jo
and
and
ja
and
mov
fidivrs
inc
dec
cmp
xor
sti
lret
mov
sub
sbb
lea
or
mov
dec
insb
pop
xor
int3
add
data16
and
pop
pop
notb
shll
aaa
xor
jge
test
jne
push
xlat
sub
xchg
dec
shl
push
xlat
push
or
sbb
push
in
mov
shr
ja
ja
les
inc
or
popa
or
cwtl
or
fstpt
add
mov
enter
add
fisttpl
ret
push
mov
or
pop
lds
dec
rol
cmp
push
push
jmp
jns
xchg
or
add
sbb
cmpl
and
sbb
inc
jge
push
loopne
jmp
mov
mov
gs
cmp
rcr
inc
push
mov
xchg
mov
push
dec
inc
xor
pop
add
ja
mov
imul
loop
cwtl
mov
fisttpll
sbb
por
jo
fstl
loop
adc
movsl
lea
subl
sub
inc
lock
or
cmp
in
add
inc
aas
push
and
dec
inc
mov
sbb
es
dec
or
dec
popa
xor
clc
jae
orb
hlt
jmp
add
test
mov
imul
sbb
daa
jnp
cld
inc
popa
adcl
cpuid
cs
loope
aas
xor
or
cmp
faddl
adc
add
mov
pusha
add
dec
mov
mov
pop
and
or
push
subl
lock
popa
mov
adc
mov
lods
aas
jae
jl
hlt
inc
ret
cltd
add
adc
scas
ud0
or
add
int3
mov
and
pushf
imul
mov
pop
sub
mov
inc
sahf
movsl
cs
sub
xchg
mov
inc
and
or
xchg
and
punpcklbw
loopne
enter
cmp
or
aam
pop
sbb
lret
and
mov
adc
or
inc
or
jg
cwtl
jmp
test
lret
cmp
and
and
cld
xchg
fimull
insb
adc
sbb
es
sar
or
jge
dec
scas
add
inc
pop
lock
movzbl
add
andb
lock
shrl
hlt
test
lret
adc
mov
jg
pop
push
mov
and
push
pop
sbb
mov
mov
inc
leave
add
hlt
and
inc
fsubs
cmp
fidivs
mov
dec
or
inc
dec
or
test
rclb
cmpb
adc
movl
or
jle
fisubl
xchg
sbb
and
jle
pop
jl
cltd
adc
lahf
mov
in
adc
mov
in
clc
jb
mov
cmp
adc
movsl
fistpll
sbb
pop
data16
xchg
or
shll
and
push
pop
pop
jg
xchg
js
in
out
aas
fisubl
bound
aam
rcll
ret
sub
sub
out
add
aas
pop
cmp
adc
adc
xor
cs
movsb
popa
xor
inc
movsb
add
add
mov
sub
movsl
jp
push
xchg
rorb
in
shrl
sbb
mov
leave
push
sbb
mov
xchg
ss
inc
cmp
js
add
mov
jne
mov
mov
insl
cmp
jae
adc
rolb
mov
mov
xor
jle
or
add
mov
push
lret
ss
mov
pop
mov
sbb
jmp
jmp
rorl
inc
shrl
push
sbb
ds
out
shr
push
xchg
adc
lea
inc
mov
jge
sub
lret
dec
jae
add
sub
push
addb
in
pusha
sub
js
cmpsl
add
loop
mov
divl
add
loop
enter
push
mov
das
add
test
add
cmp
add
dec
cmp
jg
adc
jb
or
add
scas
mov
mov
jae
hlt
push
data16
loop
jae
dec
inc
mov
inc
mov
and
push
bound
sub
sbb
mov
sbbb
mov
dec
ret
sub
jb
fsubrp
scas
movsb
mov
jmp
outsb
push
ret
pop
addb
push
fsubrs
pinsrw
sbb
inc
in
dec
dec
xchg
test
ljmp
inc
mov
clc
or
mov
adc
incb
es
mov
add
sahf
loope
jnp
shr
jae
movsb
add
clc
cmpsl
lock
adc
mov
or
outsl
xor
and
inc
mov
cmp
ja
ret
movsb
xchg
jbe
push
jae
or
cli
xor
push
lret
cmp
mov
cmp
push
arpl
sub
shr
xor
inc
inc
fstpl
rcl
roll
orl
dec
jbe
sbb
fwait
insl
leave
push
cli
sbb
dec
lret
pop
insl
or
cmp
popf
inc
dec
push
sbb
les
daa
outsb
dec
lcall
mov
andb
or
and
ror
ret
mov
loopne
pop
push
test
js
pop
jmp
mov
jmp
sti
loop
inc
pop
add
xor
shll
addb
shl
adc
aam
mov
xchg
mov
add
insl
je
or
je
or
je
sbb
cmpsb
test
out
dec
adc
and
addl
sub
mov
jo
pushf
or
jge
ja
cwtl
sbb
mov
lret
dec
add
mov
jmp
arpl
clc
pop
jbe
outsb
addb
or
push
adc
push
mov
ja
jmp
add
and
ss
mov
mov
push
inc
inc
nop
std
orb
les
dec
add
es
add
ret
sbb
pusha
add
inc
cmp
inc
push
ljmp
addr16
add
mov
dec
cltd
jbe
and
cmp
shr
xchg
das
call
in
cmp
and
popa
pop
je
adc
xor
pop
inc
xchg
push
xorb
or
mov
loopne
test
cmp
or
loopne
insl
mov
mov
dec
or
or
and
aam
mov
dec
rol
inc
and
add
push
pop
adc
out
rol
push
jne
ret
and
inc
inc
lea
orb
int
mov
or
adc
pop
icebp
movntq
mov
pusha
add
mov
test
add
mov
or
cli
add
mov
pop
mov
movsl
sub
add
movd
sub
cs
mov
int
popa
js
mov
mov
or
cwtl
push
push
out
push
xor
xchg
into
sub
xchg
xchg
mov
or
std
clc
and
mov
pop
ss
mov
sbb
loope
pusha
in
dec
je
xchg
jne
jne
or
clc
adc
xchg
mov
inc
xchg
mov
xchg
in
mov
or
loopne
adc
lcall
xor
jae
xor
adc
jp
in
in
aas
sub
fcoms
loope
ret
push
das
mov
xchg
push
or
je
mov
pop
outsb
inc
mov
lret
or
mov
xor
pop
pop
cmp
and
adc
dec
in
jne
fidivrl
inc
jle
loopne
mov
mov
movb
add
in
bound
and
jle
jmp
inc
inc
sbb
cmp
push
cld
cmpsb
arpl
push
test
fdivr
jno
jmp
push
or
cmp
jecxz
or
clc
je
jne
jecxz
ds
je
or
or
ja
lret
cltd
jmp
pop
and
mov
inc
or
and
xor
xor
sub
lock
jl
jae
je
loope
mov
leave
mov
push
divl
jo
jno
mov
dec
push
test
idiv
out
pop
xchg
cmp
cli
loopne
inc
in
pop
js
fcmovu
add
mov
pop
clc
sbb
test
aaa
je
pop
dec
mov
cli
inc
add
mov
cmpsb
ret
xor
dec
mov
sti
mov
out
push
int3
pusha
xchg
xchg
rorb
cmp
add
add
pusha
cmpb
call
mov
add
xor
push
adcl
loop
inc
lock
xor
ret
sub
sub
or
inc
iret
leave
iret
adc
movsl
ret
ficompl
faddl
xor
inc
sub
jae
mov
pop
jnp
mov
clc
and
ljmp
sub
testb
bound
or
mov
scas
xor
test
xchg
js
pop
mov
mov
push
or
xor
in
das
mov
dec
mov
jmp
mov
jnp
or
cmp
dec
out
lar
pusha
and
in
or
mov
sbb
cmpsl
push
js
sub
clc
loope
fnstcw
xor
xchg
inc
add
xchg
push
add
push
xchg
out
jns
xchg
dec
cld
mov
or
dec
add
push
mov
mov
add
add
or
add
mov
stos
or
pop
inc
adc
sbb
jns
into
ret
lds
cld
ficompl
mov
sbb
inc
jg
jp
mov
or
ret
dec
jo
es
dec
dec
or
cwtl
xor
xchg
xorb
loop
addl
mov
pop
data16
sbb
inc
sbb
cld
cmp
and
fildl
mov
shrb
sbb
xorb
xor
or
pop
test
lock
int3
or
or
xor
cmc
jl
inc
cwtl
sub
clc
push
outsl
es
mov
lea
mov
call
xchg
or
movsw
cmp
jmp
lods
dec
sbb
sbb
inc
rolb
daa
cmp
leave
dec
jle
xor
stos
inc
adc
pop
lock
push
roll
add
cmp
pusha
das
mov
add
bound
das
add
inc
dec
or
incb
inc
cmp
jl
push
inc
aad
andb
sbb
dec
sbb
pop
inc
cmp
dec
and
xchg
mov
and
cmpb
inc
lea
or
jmp
fdivr
movsb
pop
or
test
and
out
inc
aad
inc
pop
mov
cmp
push
xor
shlb
adc
adc
pop
outsl
inc
jp
inc
add
jne
push
mov
pop
or
pop
mov
and
mov
aaa
cmc
leave
lea
xchg
ficoms
xor
jge
mov
and
cmp
push
or
jbe
mov
shrl
adc
or
add
sub
jbe
sub
push
dec
aam
and
outsb
pop
or
int3
lar
or
stos
xchg
test
rcl
or
andl
addb
xchg
dec
mov
add
inc
cmp
and
pop
je
decl
test
sbbb
push
cmp
ja
add
cmp
adc
dec
cld
iret
fadd
cmp
jne
dec
jne
inc
add
adc
xchg
in
xchg
push
dec
loope
mov
mov
loope
sbb
inc
jecxz
lret
jne
int
outsl
add
rorb
nop
out
push
cwtl
add
dec
push
add
aad
sbbl
xlat
adc
push
mov
bound
jno
lahf
test
or
adc
cmpb
mov
or
fidivrs
in
in
pushf
inc
int
adcl
les
gs
mov
lods
pop
test
or
lods
mov
and
hlt
cs
sub
mov
xor
pop
shlb
pusha
mov
xor
adc
pop
cvtps2pd
adc
mov
fldcw
in
sub
nop
out
pop
hlt
out
cmpb
lcall
and
repnz
ljmp
sti
add
movb
dec
jmp
push
rorb
dec
xchg
add
adc
add
loopne
pushl
dec
gs
jg
sbb
sub
sti
inc
dec
lods
sbb
dec
or
dec
sbb
loopne
push
jmp
ss
or
xor
inc
loop
mov
shlb
dec
in
jbe
sub
jmp
inc
bnd
pop
push
shrb
je
icebp
mov
rorl
push
decb
sti
cmpb
dec
dec
adc
in
push
adc
pop
mov
mov
inc
dec
je
adc
aam
jge
les
loopne
js
cwtl
cmp
out
aam
fdivs
adcb
mov
jbe
or
add
sub
arpl
xchg
inc
loopne
je
dec
loop
imul
roll
shl
add
add
push
outsl
movzbl
aad
pop
pop
sbb
push
mov
sub
in
out
fistl
add
mov
addr16
or
rcll
sbb
xor
and
xor
in
sbb
je
cmp
imul
clc
mov
ljmp
lcall
push
mov
int
sahf
and
jne
test
jmp
push
dec
jb
mov
loope
dec
sub
sub
addr16
add
cltd
icebp
into
jle
adc
bound
and
adc
scas
in
sbb
mov
jne
push
pop
add
in
scas
inc
mov
inc
xor
lea
sub
aad
mov
jnp
jmp
jbe
push
gs
loop
cmp
ss
orb
sbb
rcll
bt
or
inc
scas
adc
or
push
lods
aas
push
daa
inc
mov
add
je
dec
adc
andb
addr16
outsb
add
push
inc
test
push
or
mov
dec
xchg
ljmp
sub
dec
repnz
nop
or
andl
hlt
and
sahf
and
cmpsb
adcb
or
aas
dec
sbb
xor
jmp
ret
lahf
push
movsb
mov
ret
adc
in
mov
inc
inc
aas
pop
dec
daa
es
pop
cmpsb
inc
xchg
fdivrs
sbb
imul
inc
xor
mov
je
push
pop
je
in
insl
movsb
adc
dec
xchg
sbb
push
idivl
or
and
pop
sub
subb
iret
pop
and
call
and
roll
jnp
sbb
fdivrl
pop
jne
mov
inc
push
cmpsl
repnz
lret
mov
cmp
je
inc
mov
cs
outsl
stos
and
inc
cmp
sub
jmp
ret
cmp
ja
xchg
add
sub
jne
mov
mov
clc
mov
dec
or
negl
pop
xor
xor
jmp
inc
enter
xchg
mov
cmp
test
pop
jecxz
loopne
add
adc
xor
xchg
push
test
inc
hlt
inc
push
pop
mov
or
scas
mov
insb
ror
push
pop
call
adc
movsb
rcll
adc
test
je
pop
jo
insl
popf
jne
or
add
jge
mov
mov
push
fmuls
incl
ret
ds
mov
xor
jmp
mov
fcomi
sub
punpckhbw
inc
push
cltd
or
into
add
lret
jg
lret
dec
in
or
into
sbb
xchg
jecxz
sbb
rdmsr
rorb
pushf
xchg
jne
mov
fldl
out
add
jecxz
and
pop
jp
dec
sub
add
jge
or
and
sub
xor
mov
mov
ror
sbb
lcall
xlat
pop
sub
loopne
adc
lahf
add
add
gs
and
stc
cmpsl
mov
and
sbb
aad
inc
mov
arpl
sub
nop
cs
add
fbld
cmp
add
mov
negl
jo
cmp
jbe
insb
shl
jmp
sbb
or
out
cmp
jb
add
or
mov
jl
shl
push
repnz
neg
bswap
push
test
sub
rol
mov
adc
add
lcall
jmp
inc
mov
incb
push
or
inc
sub
nop
cmp
sub
dec
mov
sbb
enter
cwtl
xchg
or
pusha
add
jne
inc
in
outsb
dec
inc
cmpsl
or
clc
push
andb
push
divb
lea
jle
ljmp
das
dec
mov
adc
ss
js
sbb
push
jle
hlt
push
adc
push
iret
nop
fdiv
pusha
bound
nop
js
jo
decl
js
mov
insb
lea
jmp
ret
lods
mov
sbb
lret
pushf
xchg
adc
cmp
inc
clc
ss
push
xor
out
or
stos
std
or
outsb
dec
dec
fsts
test
insb
xchg
sub
and
out
jg
adc
push
cwtl
test
into
imul
and
enter
les
lret
shlb
or
lcall
mov
push
mov
cmp
daa
mov
adc
clc
jbe
testl
dec
add
push
mov
and
test
xchg
add
shrb
push
ss
sbb
ret
shrl
jb
mov
xorl
stos
mov
js
or
adc
cld
or
cmp
cmp
or
dec
imul
cltd
and
inc
cmp
enter
inc
jl
cmpsl
cmp
xchg
movsl
push
pop
jmp
mov
pop
lahf
and
incl
jle
inc
xor
push
sub
xchg
lock
mov
scas
push
push
xor
ret
mov
adc
adc
inc
add
or
cmp
or
test
mov
aaa
jno
es
push
cmp
add
sbb
dec
clc
xor
mov
jbe
mov
mov
inc
sbb
jb
in
push
or
gs
add
ret
jne
std
dec
movsb
in
gs
sub
add
popa
lods
inc
leave
sbb
das
data16
orb
sbb
cwtl
bound
sub
cmpsb
inc
imul
cmpsl
aam
pop
xor
sbb
movsl
cmp
cmp
pop
mov
mov
add
push
addr16
inc
insb
sahf
clc
xchg
pop
sbb
add
push
and
scas
insl
sbb
arpl
popa
cmp
add
std
add
or
or
add
lea
pop
lea
test
push
push
mov
xor
movsb
and
mov
mov
int3
xor
mov
repz
mov
loopne
mov
sub
mov
adc
or
or
mov
mov
mov
inc
dec
cld
ret
les
lahf
movsl
adc
movsl
daa
mov
stos
insl
nop
pop
lret
call
sub
aaa
ljmp
sbb
fcmovbe
outsl
xor
fsubs
or
mov
push
dec
and
and
xor
cs
jno
mov
test
inc
or
xor
push
sbb
les
ret
and
cmp
mov
unpckhps
je
imul
daa
inc
inc
sahf
sub
mov
lds
mov
shll
jle
mov
addr16
into
fcompl
mov
lods
mov
js
pop
sbb
mov
pop
mov
fwait
mov
stos
cmp
add
cmp
fsubr
jne
pusha
aas
movsb
adc
lret
sbb
xchg
rolb
jge
inc
cmp
mov
mov
cwtl
mov
add
xor
push
pop
adc
xor
xchg
xor
filds
push
pop
mov
loope
cltd
popf
or
insl
out
push
es
mov
push
jle
add
mov
repnz
ds
inc
push
xorl
aaa
es
dec
or
ret
rclb
sarb
shlb
sub
push
xchg
xor
add
pop
push
repz
dec
add
in
cmp
xor
insb
fidivs
add
in
adc
jmp
sahf
inc
mov
aad
mov
call
data16
add
lock
cmpsl
es
mov
cli
mov
add
sub
cmp
mov
bndstx
dec
rclb
cmp
in
dec
push
dec
dec
jne
inc
xchg
into
loop
inc
pushl
mov
loopne
adc
push
sub
test
or
cli
fmul
in
mov
adc
clc
psadbw
mov
lret
sub
lock
xor
xor
nop
sbb
cmp
jmp
cmp
je
push
inc
push
jmp
mov
fstps
mov
jecxz
sbb
push
in
pop
call
sbb
popl
sarb
dec
dec
xchg
test
mov
insl
ja
mov
enter
fdivs
jl
and
push
loope
push
xchg
pop
jno
mov
pop
dec
or
imul
sbb
jne
stos
shlb
rcrb
mov
pushf
sbb
int
cmpsb
sbb
or
or
push
sub
jbe
adc
inc
mov
fsubrs
ljmp
mov
push
pop
add
lea
and
adc
sbb
push
sbb
push
loop
pop
xor
add
fwait
sub
inc
loop
jmp
sbb
sbb
jne
mov
mov
sbb
sub
jmp
adc
push
out
jnp
push
add
adc
and
or
arpl
pusha
pop
push
lret
loope
sub
enter
mov
xor
faddl
repz
jnp
and
adc
dec
sbb
mov
test
inc
and
and
enter
inc
in
or
xchg
gs
sbb
mov
shl
test
pop
movsl
loope
test
les
cwtl
pusha
mov
xchg
test
mov
sub
daa
test
sti
ss
cmp
dec
outsb
mov
mov
dec
cmpsb
mov
mov
or
cmp
add
dec
adc
add
jae
or
movb
dec
push
sub
popa
pop
add
pop
je
sbb
add
pop
in
adc
sub
xchg
or
ds
push
push
and
testb
add
mov
out
in
das
and
test
mov
imul
add
add
mov
pusha
or
scas
clc
cmpsb
and
push
fdivrl
xchg
dec
sti
mov
cmp
data16
cmp
je
push
xor
mov
dec
sub
out
outsl
dec
cld
inc
inc
cmpb
data16
jmp
movb
inc
mov
lret
xorb
adc
lahf
or
js
imul
aas
inc
cmp
cmp
mov
pop
jecxz
inc
clc
mov
jmp
pop
mov
cmpb
add
jo
inc
loop
mov
stos
addps
je
out
jle
xchg
and
roll
mov
inc
enter
sub
ljmp
test
sub
push
es
pushf
add
shlb
xor
inc
js
enter
data16
or
add
xor
and
fnsave
shll
mov
sbb
je
rol
ljmp
cwtl
or
inc
loope
push
sub
mov
add
or
adc
or
lea
push
sub
pop
jl
sub
ja
push
fldl
mov
jne
shll
cmp
push
jl
ss
push
ss
add
daa
sbb
pop
jns
bound
push
mov
les
pop
inc
sti
insb
jl
sub
lea
dec
or
xchg
leave
mov
fcmovb
shl
mov
pop
pushf
push
mov
pop
jb
push
cmpsb
inc
stos
or
stos
sub
nop
sbb
jmp
dec
lock
fistps
ret
pop
fisttps
xlat
rcrb
or
shlb
sub
ror
hlt
mov
lret
push
dec
leave
sub
add
add
and
cmpsl
add
mov
lea
jno
rorb
jae
mov
xchg
loopne
imul
add
in
in
push
push
pop
data16
and
sub
cmp
insl
imul
je
add
sub
ljmp
pop
call
add
cmp
lds
leave
or
cmp
add
xchg
add
add
out
sub
push
shrl
sbb
lds
orl
adc
pop
into
jb
test
push
or
pop
jmp
jl
test
add
rcr
xchg
lea
jp
andw
inc
insb
scas
dec
imul
add
jae
sub
lods
xor
xchg
rolb
dec
jne
sbb
into
test
daa
aam
into
insb
and
test
mov
pop
pusha
sahf
inc
push
and
hlt
fdivl
mov
push
mov
mov
jl
push
xchg
in
jbe
sbb
fsubrl
add
sub
enter
push
and
pop
cli
push
xchg
test
add
or
inc
loopne
jge
fldt
movsb
mov
shlb
or
push
pop
es
pop
or
sub
arpl
adc
ss
call
lods
adc
mov
push
test
or
movsb
push
jp
bound
xor
lods
or
add
add
mov
xor
add
into
or
lret
hlt
sarl
mov
xor
pop
scas
push
clc
fbstp
adc
not
jne
or
jmp
or
jmp
jmp
sbb
iret
pop
test
int
out
dec
iret
enter
cwtl
insb
pop
pop
test
pop
mov
fcoml
fdivs
push
cmc
mov
adc
add
outsb
pusha
lock
and
ret
sbb
lret
mov
bswap
mov
push
inc
inc
dec
pusha
pop
pop
or
push
clc
testb
dec
imul
loope
mov
aam
out
mov
dec
or
push
sbb
lea
cmp
ret
add
test
popa
pop
add
push
push
mov
clc
sub
shl
not
test
outsb
test
adc
add
ret
add
jl
xlat
xchg
lahf
cmp
pusha
and
adc
outsb
jmp
cmp
mov
and
aaa
sub
jne
jo
stos
dec
js
les
sub
mov
xchg
rcl
ret
pop
scas
xor
loopne
pop
add
ret
pop
cltd
addr16
js
cmp
clc
ret
and
xchg
inc
and
repnz
insb
adc
push
inc
push
outsb
pop
jmp
xchg
scas
push
mov
push
sbb
ss
pop
mov
push
add
and
mov
aaa
add
cli
jb
pop
or
es
lcall
or
inc
clc
inc
and
add
in
sub
lret
stc
dec
mov
in
hlt
pop
and
movsl
cmp
adcb
push
or
and
out
stos
or
and
mov
call
dec
add
test
loopne
xor
mov
jne
xchg
hlt
sbb
push
lods
add
testb
push
and
jb
sarb
push
adc
bound
jne
pop
cmpb
jge
enter
dec
or
mulb
dec
jae
push
or
add
pusha
pusha
ret
cs
or
sti
sub
and
mov
shl
cmp
shrb
xor
test
out
cltd
and
mov
lock
and
adcb
pop
pop
add
enter
shrl
jge
cmp
xor
mov
aas
sub
popf
das
jl
push
xchg
mov
test
inc
mov
and
mov
pop
jl
movsl
pusha
or
sbb
adc
imul
push
aaa
inc
mov
mov
and
add
inc
shrl
cmpb
jg
sub
sub
jp
xchg
pop
pop
or
or
incl
lea
push
fsubrs
clc
outsl
add
or
jne
and
xor
push
out
xor
mov
call
adc
dec
jno
je
mov
in
dec
loopne
je
mov
and
and
adc
aas
test
or
sbb
push
ss
jle
ss
adc
xchg
fucomi
adc
rolb
pop
push
mov
jne
insb
ss
pop
test
cmp
les
outsl
add
jmp
out
xor
incl
inc
jne
loop
xchg
push
or
or
inc
pop
xor
push
xchg
mov
pop
sub
push
imul
push
je
inc
ljmp
xor
jo
loope
cltd
mov
adc
out
mov
mov
lods
add
push
and
xor
fs
out
xor
push
sar
push
mov
add
and
mov
adc
xchg
xor
or
or
or
add
or
jecxz
sub
sub
popf
jbe
dec
sbb
or
dec
dec
add
lret
enter
jp
or
or
test
inc
adc
leave
xchg
test
xchg
into
pop
or
adc
push
jmp
test
lods
pop
adc
iret
hlt
or
scas
icebp
add
push
dec
pop
mov
addb
cli
push
dec
mov
je
dec
and
sbb
add
iret
incb
adc
push
icebp
jmp
push
jb
xor
outsb
je
ss
or
out
push
push
loop
add
mov
dec
popa
mov
or
je
sbb
test
inc
inc
push
xor
fisttpll
rolb
xchg
loopne
bound
addl
xor
or
xor
jnp
loopne
adc
out
sbb
lahf
pop
cmc
inc
mov
add
add
lahf
mov
enter
add
jne
push
mov
mov
loopne
pop
shlb
cmp
mov
cld
movl
into
adc
push
mov
xchg
jne
into
sbb
xchg
out
push
push
mov
imul
lret
mov
mov
test
or
jnp
xor
adc
jle
jne
test
addl
xor
jmp
out
adc
inc
sub
add
cmp
cmp
insl
jmp
add
roll
adc
add
lret
inc
pop
subl
cmp
mov
xchg
sbb
fcomip
nop
mov
xchg
imul
jl
or
or
fidivs
sahf
movd
shlb
cmp
and
cmpsb
sbb
add
mov
fmuls
loopne
mov
xor
cmp
xor
push
popa
push
pop
xor
sbb
xchg
daa
cmp
xor
fneni(8087
mov
cmp
xchg
add
mov
sub
pop
mov
daa
fsubrl
cmpl
or
push
fdivrs
push
add
pop
xor
cmp
jns
arpl
pop
out
or
pop
pop
xor
lock
loopne
movsb
test
xor
xchg
dec
cmp
pop
nop
and
cmp
add
or
fiaddl
movntq
xchg
dec
cli
xchg
data16
mov
xor
cmp
pop
fdivrs
hlt
sarb
inc
movsl
sbb
push
pop
sub
inc
daa
jecxz
push
movsl
aam
cld
add
mov
adc
cmpsl
add
call
sahf
pushf
inc
ret
push
or
jle
xchg
out
out
lret
mov
or
test
xor
js
lock
imul
jnp
jg
jle
push
sti
dec
push
cmovnp
test
or
sbb
pop
push
cmp
mov
ret
sub
clc
cli
cmp
mov
bound
clc
jmp
dec
and
adc
or
addl
test
subb
hlt
add
push
jmp
adc
addr16
mov
mov
sahf
adc
dec
sarl
sbb
jbe
mov
mov
inc
cmpsb
or
lret
cmp
addr16
dec
adc
mov
dec
adc
hlt
pop
inc
bound
sub
je
nop
inc
adc
sbb
loopne
add
scas
mulb
stos
hlt
clc
rorb
or
cmp
adc
jmp
clc
shlb
fdivr
mov
sbb
fisubrs
pop
pop
pop
dec
pop
jge
adc
jne
mov
mov
or
rcll
or
lea
cmp
aas
adc
mov
xchg
outsl
rorb
pop
lods
loope
pop
js
cmp
test
sbb
jecxz
hlt
jg
adc
jl
incb
hlt
jbe
movl
out
push
sub
loope
das
pop
push
movsb
scas
xor
in
inc
sarb
jbe
ret
sub
cmpsb
push
loopne
push
sbb
sub
cmp
cmpl
sub
test
adc
sbb
sbbb
add
mov
dec
outsb
and
rol
scas
stc
shlb
js
nop
ret
pop
adc
addl
push
pop
fsubs
xchg
jmp
adc
imul
cvtps2pi
push
xchg
or
pop
mov
mov
mov
xchg
inc
or
push
cmpsl
in
fiaddl
je
enter
divl
les
leave
xchg
int3
push
push
lret
pushf
idivl
fs
xor
outsl
jmp
adc
mov
jmp
stos
xchg
jno
stc
jae
inc
sub
addr16
inc
xchg
mov
xchg
add
inc
and
cmpsl
mov
mov
add
mov
lret
or
sub
and
add
test
pop
adc
inc
pushf
jl
sub
cmc
or
aam
mov
mov
push
fwait
pop
push
cli
add
out
mov
or
push
push
outsl
push
inc
push
jmp
sbb
inc
adc
and
adc
mov
or
push
adc
push
mov
sbb
or
jbe
pop
mov
loope
es
mov
push
aad
push
add
mov
add
adc
lock
xchg
mov
xchg
xor
mov
lods
rcl
test
rol
outsb
clc
jle
mov
loope
jne
push
jb
popf
sbb
or
xchg
test
andl
mov
imul
popa
arpl
lahf
movsl
loop
xchg
test
inc
sub
pop
dec
add
mov
lea
shlb
test
jne
adc
add
loopne
xor
rol
dec
arpl
addb
scas
addl
cs
mov
mov
nop
incl
and
jp
in
sub
mov
push
loope
lods
mov
xor
popf
es
pushf
fadds
mov
adc
inc
cli
cmp
sbb
or
sub
and
adc
shlb
pop
mov
fcomp
jo
xchg
cmpsb
xor
js
pop
xlat
sarb
sbb
jmp
push
lret
loopne
aam
pop
test
repz
add
push
push
and
in
ret
push
and
mov
and
rolb
dec
bound
call
pop
or
sub
sub
es
push
push
and
dec
push
xor
fidivl
sbb
mov
push
pushf
or
sbb
ljmp
decb
pushf
push
lock
sbb
test
dec
fadd
iret
jl
lcall
jmp
fisubl
add
fucomip
addb
adc
dec
testb
ret
pushf
mov
xchg
ret
scas
jb
mov
mov
cmp
hlt
enter
mov
mov
push
sub
cmp
gs
rcr
js
into
test
cmp
aam
dec
and
xchg
aaa
es
rol
clc
xchg
or
dec
imul
inc
outsb
inc
or
push
or
cld
push
aam
pusha
jne
fwait
movsl
aas
std
into
add
aam
aas
into
push
rolb
or
jl
nop
adc
dec
shr
shl
push
push
and
pop
push
jnp
ss
jmp
lods
imul
or
out
shr
or
push
mov
andl
out
inc
dec
inc
je
pop
incl
or
push
or
push
pop
or
rclb
ret
inc
shll
inc
inc
xchg
into
push
pop
sbb
or
mov
sbb
movsb
push
aam
es
pop
cmp
sahf
into
xchg
jmp
inc
out
adc
icebp
mov
inc
xchg
cmpsl
add
sarl
mov
cmp
int3
pop
icebp
xor
jmp
xor
aam
ja
inc
or
fmuls
mov
and
push
movb
push
in
jns
out
out
jmp
sahf
jmp
in
out
sti
out
aas
sti
push
jecxz
xlat
sarb
add
shrl
adc
mov
stos
add
push
add
add
inc
lds
pushw
outsl
add
jp
push
and
cmp
sub
jmp
fdivrs
inc
mov
adc
pop
mov
inc
in
push
and
sbb
add
into
add
pop
rol
cld
push
icebp
xchg
sub
movzwl
mov
sbb
adc
out
or
sub
arpl
dec
test
out
xchg
mov
imul
mov
lea
sbbb
ljmp
pop
mov
neg
cmp
insb
aaa
mov
aas
jb
in
xor
sub
testb
mov
je
dec
movsb
movsl
inc
cmp
add
cmc
mov
cmp
je
push
inc
imul
fs
cli
push
lds
add
mov
lock
adc
pop
jne
int3
pop
neg
jbe
pop
or
or
xchg
or
sbb
inc
data16
jne
or
dec
mov
xchg
arpl
mov
aas
sbb
mov
mov
push
and
mov
mov
insl
mov
dec
dec
sub
aaa
adc
jl
ret
sbb
push
push
dec
jmp
fs
add
ret
sub
mov
xchg
add
add
shrl
xor
pop
hlt
push
hlt
pop
flds
add
andb
pop
dec
je
shll
fisttpll
sbb
dec
aam
in
test
mov
inc
or
mov
push
xor
scas
lret
pushw
movsl
cmp
loop
inc
orb
push
add
lods
cli
std
mov
aas
or
test
push
mov
movb
push
mov
lock
cs
es
aas
mov
cmp
jge
cmp
adc
add
insl
mov
pop
jno
aad
inc
popa
cs
push
or
or
sbb
mov
dec
add
xchg
call
add
cmp
or
sub
es
add
insb
xor
jo
push
add
lods
jge
xor
sbb
adc
stos
jbe
jg
cwtl
or
rolb
xchg
pusha
jle
mov
orb
rorl
cmp
or
mov
sbb
cmp
insb
add
insb
test
fdivrs
add
cltd
dec
ljmp
ss
cmp
mov
fdivrl
mov
test
fnsave
insl
lcall
sbb
shlb
test
andb
cmp
shll
fisubrs
fldenv
pop
or
cmpsb
jge
rcrb
push
int3
dec
add
in
or
mov
sbb
jmp
pop
mov
mov
in
push
add
sub
sahf
add
jle
xchg
push
mov
pop
or
arpl
dec
testb
add
add
rclb
inc
inc
cmpsl
ret
push
add
pop
dec
add
daa
lea
cmp
rorb
xchg
cmp
inc
dec
notb
or
mov
pop
iret
jl
mov
or
sbb
aaa
dec
mov
push
mov
xchg
mov
jbe
mov
cltd
adc
adc
lock
std
xor
and
inc
sar
or
call
aam
push
mov
mov
add
mov
jne
jnp
cmp
jmp
dec
mov
inc
loopne
inc
and
inc
sbb
pop
incl
push
hlt
outsw
ja
cmp
push
pop
orl
or
test
dec
mov
pop
pop
xor
mov
rorb
std
rcrl
sub
mov
mov
push
lods
add
push
ja
popf
inc
sub
mov
pop
orb
in
leave
and
test
push
pop
pusha
popa
jg
andl
sbb
movsl
push
add
pusha
rorb
repz
int3
add
ret
xchg
dec
test
mov
and
jp
sbb
or
pop
mov
cmp
add
mov
pop
faddl
arpl
movsl
mov
movsb
push
jo
adc
lret
clc
cmp
push
int
lds
fldcw
leave
xchg
inc
inc
mov
xchg
pusha
xchg
call
repnz
xchg
or
mov
dec
mov
pop
sbb
sbbb
xor
loop
jmp
or
or
out
mov
xor
dec
stos
sbb
mov
pushf
xor
pop
ret
pop
inc
jns
cmpb
sub
sbb
mov
mov
mov
mov
cmp
stc
inc
or
pop
clc
pusha
pusha
pop
das
mov
sub
fisttps
loopne
cmp
jl
push
vmovss
adc
ret
mov
dec
call
dec
pop
add
into
sub
push
hlt
xchg
insl
push
cmp
sahf
cmpb
lret
dec
jp
mul
mov
out
sar
adcb
fsubr
xor
and
testl
je
inc
mul
rcl
inc
cmp
push
in
icebp
out
gs
test
and
add
push
adc
push
orb
rcrb
stc
int
sbb
xchg
and
dec
shr
xchg
jg
xor
shll
mov
fwait
adcb
xchg
nop
or
in
push
jmp
push
cmp
aas
cmp
adc
and
imul
and
add
cmp
shlb
xor
and
addr16
add
mov
jle
jg
jmp
cmp
je
or
bound
push
sarb
jo
test
les
xorb
or
test
dec
sub
cwtl
cmp
arpl
or
push
pushf
loope
aas
jne,pn
in
sub
movb
pop
cld
test
outsl
test
cs
push
add
jne
sub
scas
iret
mov
nop
subps
cs
sub
xor
sub
je
push
out
sbb
sbb
cwtl
les
clc
cmp
add
add
sub
mulb
and
arpl
or
mov
test
jmp
sub
adc
setbe
lahf
sub
pop
andl
push
clc
imul
inc
mov
or
les
inc
cli
add
mov
xchg
add
jge
shll
lods
push
jl
or
xchg
mov
xchg
pushf
movsb
sub
add
add
negl
mov
adc
out
cmpsl
xor
lods
dec
lods
into
clc
inc
mov
daa
call
sahf
lods
add
pop
lea
add
cmp
cld
jle
outsl
mov
or
sbb
push
rcrb
cld
enter
push
dec
mull
jecxz
adc
pop
mov
and
xor
ds
stos
add
adc
push
jmp
mov
mov
mov
jl
mov
testb
in
mov
jbe
jmp
aas
lods
jmp
mov
lret
jge
pop
aam
push
int
mov
clc
jl
cli
and
insl
out
pop
add
sub
pushl
mov
gs
or
outsl
fmul
int
rolb
sub
dec
adc
push
sahf
inc
pop
mov
dec
sub
xchg
mov
arpl
pushf
scas
aaa
lods
mov
cmp
xchg
repnz
mov
adc
xor
add
jo
popa
fcomps
mov
sub
fdivrs
cmpl
inc
mov
xor
popa
mov
cmp
dec
gs
sbb
lret
lods
mov
dec
push
imul
add
mov
or
add
sbb
mov
jo
cmpsl
in
xor
inc
ljmp
shufps
inc
inc
cwtl
std
or
mov
sub
or
sahf
hlt
mov
mov
sbb
adc
inc
lahf
and
mov
addr16
out
daa
adc
hlt
prefetcht0
fs
movsl
sub
mov
das
rolb
or
xchg
sbb
shll
dec
mov
mov
dec
or
stos
mov
push
xchg
jae
arpl
js
ret
mov
mov
push
sub
das
xor
cmp
sbb
into
pop
push
shll
mov
xor
xchg
jnp
jp
add
add
sbb
adcb
push
jne
popf
push
pusha
aaa
push
dec
lcall
js
xchg
xchg
or
stc
jge
addl
mov
je
jmp
in
dec
lret
jp
adc
or
pop
movsb
pusha
pop
rclb
pop
xchg
xchg
add
add
jae
jnp
cmpl
add
lret
add
xor
test
pop
xor
rorb
sbb
or
inc
inc
aas
jmp
push
sbb
push
les
pop
jg
testb
imul
jg
insb
sub
dec
lock
mov
add
ret
add
or
pop
xor
inc
xlat
and
call
lea
dec
cmpsl
testb
xlat
mov
clc
xor
mov
push
xchg
fimull
repnz
sub
test
jno
clc
mov
fstpt
push
cmp
jmp
inc
add
jmp
add
push
cwtl
rol
ret
jge
or
ret
add
insb
mov
or
dec
xor
cmp
dec
in
mov
or
dec
mov
pop
cmp
add
imul
loopne
in
mov
xchg
imul
insb
fsub
xor
inc
stos
push
push
mov
push
shlb
sub
pop
dec
pop
gs
push
aam
pop
test
jp
xlat
aam
ret
shrl
sub
pop
movl
xchg
mov
pop
popf
pop
aad
mov
sbb
xor
loopne
or
push
imul
push
push
repnz
scas
xor
pop
outsl
pop
cmp
xlat
sbb
icebp
movl
pop
pop
mov
insb
or
push
jo
cmp
push
clc
and
dec
jo
push
pop
cltd
push
js
and
inc
inc
ret
or
and
mov
jb
mov
and
mov
adc
cmpsl
adc
inc
mov
cmp
mov
add
lods
push
ds
jo
test
adc
shrl
sub
test
dec
adc
add
cwtl
push
out
inc
frstor
loopne
inc
aas
dec
outsb
scas
sarb
add
lock
movzwl
fisubs
mov
push
push
or
or
cmpsb
adcb
inc
mov
test
xchg
fstpt
shrl
sub
clc
adc
and
push
loopne
icebp
rcll
clc
adc
xor
in
daa
xor
cmp
outsl
shl
add
sar
roll
push
xchg
and
dec
gs
ficomps
jo
jb
cmp
xor
add
push
rolb
inc
mov
lods
daa
jbe
or
push
into
fwait
sub
and
repnz
xchg
dec
mov
cmp
je
mov
loopne
xchg
push
and
mov
orl
xor
dec
adc
test
movsl
sti
stos
es
nop
or
cld
lcall
dec
clc
insb
hlt
pop
lock
pop
sub
dec
in
addr16
rcrb
add
loope
mov
cmp
sub
inc
and
mov
push
add
and
stos
dec
shlb
mov
or
hlt
and
fwait
les
icebp
jne
sahf
jne
pop
xor
add
insl
stos
mov
shr
sub
and
xchg
xchg
popf
dec
xchg
out
andl
and
lea
mov
mov
fcoml
push
fcomps
imul
jg
cli
clc
gs
jnp
pop
pop
push
sahf
sub
mov
jo
stos
xor
or
pushf
adc
add
in
lret
sub
stos
mov
xlat
sbb
sbb
sbb
mov
push
push
filds
add
cmp
imul
arpl
push
les
lea
sarb
push
push
add
scas
push
or
aad
mov
jne
jo
pop
push
ficompl
ror
jno
sub
adc
dec
adc
sub
lods
cmpsl
and
dec
bound
push
les
jne
shlb
pop
cmpl
xchg
mov
notb
test
mov
dec
xlat
hlt
inc
mov
mov
dec
loope
dec
jl
xor
sub
test
aaa
mov
dec
outsb
cmc
pop
or
repnz
roll
lods
push
xor
cmpsl
bnd
rcr
sub
cld
popa
fstps
sbbb
add
inc
lds
cmovg
in
inc
cmpsb
push
xchg
popa
pop
mov
pushf
ret
push
comiss
jge
outsl
addr16
popa
nop
mov
dec
enter
add
mov
fmuls
ja
or
enter
jge
or
dec
pop
or
cmpsb
pop
mov
and
in
fsubs
and
sbb
inc
lock
aas
jge
jb
bound
ja
fldcw
enter
int
and
inc
ret
xchg
xor
pop
clc
add
fdivrs
mov
fistl
sbb
and
and
xchg
dec
ret
dec
adc
lock
lock
xor
leave
push
jno
push
call
jbe
inc
fnstsw
inc
mov
in
data16
rolb
push
add
ret
add
push
jb
cli
addl
movsb
jg
adc
push
mov
insl
xchg
inc
pop
adcb
dec
pop
mov
adc
add
shrb
sub
add
roll
mov
xor
mov
sbb
das
add
mov
jns
sub
xchg
pop
and
in
jb
push
outsl
mov
inc
js
lret
test
push
sbb
or
add
jl
insl
push
adcl
pushf
mov
imul
push
xor
cwtl
or
loopne
inc
push
cmp
in
test
aad
cmpsl
cmp
jg
adc
dec
fisttps
add
sbb
add
in
add
subb
cmpl
and
cmp
imul
add
scas
cli
lea
insl
xchg
sub
orl
popf
icebp
ret
cmp
mov
xchg
mov
sarl
or
pop
pop
and
movsb
or
ret
lock
addr16
push
pop
xor
sbb
push
xchg
mov
or
clc
push
lock
adc
dec
pop
or
push
xor
xchg
outsb
leave
stos
xor
ret
hlt
push
adc
add
xchg
xlat
sub
in
or
das
out
popf
push
out
lock
sub
pop
popf
inc
lods
in
loop
or
adc
sub
or
push
leave
shlb
push
push
arpl
or
push
clc
push
push
lods
test
push
adc
or
push
ja
jae
pop
cmp
push
add
xor
cmp
movsl
imul
mov
fs
movsl
mov
icebp
ja
dec
sub
or
jge
rep
in
xor
jne
les
clc
add
shlb
cmp
xchg
jbe
add
roll
cmpsl
dec
hlt
stc
mov
cs
cmpsb
in
in
lock
mov
rcl
mov
push
lods
cmc
pop
and
pop
pop
inc
add
jno
and
or
andl
dec
int3
xor
push
cli
rorb
push
repz
mov
insl
jns
push
push
xor
cmp
cld
inc
mov
cli
in
add
pop
or
add
or
test
push
jmp
xor
adc
icebp
mov
dec
sbb
pop
cvttps2pi
xor
pop
xor
icebp
mov
loopne
cmp
pop
sub
sahf
gs
cmp
outsl
mov
inc
push
dec
push
nop
nop
xchg
sbb
in
ds
jmp
mov
pop
repnz
sbb
popa
mov
sbb
orb
sub
cltd
inc
push
mov
ret
shll
jmp
rcll
adc
mov
sbb
pop
and
jl
mov
mov
mov
mov
mov
mov
cltd
inc
push
enter
mov
sahf
or
adc
mov
fimuls
dec
inc
movsl
shrb
add
and
pop
js
enter
mov
jmp
iret
mov
sub
or
popf
adc
pusha
jb
sub
ret
test
add
pop
pop
cmp
xor
out
jo
sbbb
js
addr16
aaa
mov
dec
and
sbb
pop
call
inc
gs
add
insl
pop
addr16
fs
or
push
push
ja
gs
hlt
aad
adc
out
mov
push
fs
add
cs
nop
into
and
sarl
or
out
pop
lret
jne
xor
push
push
xchg
fldt
add
push
or
mov
stos
xlat
push
andl
jmp
jle
sub
push
andl
push
fstl
mov
or
pushf
adc
rolb
rorl
data16
lods
lods
add
xor
pop
or
jl
push
adc
ja
sbb
nopl
lock
pusha
arpl
mov
jg
xor
je
jge
mov
lea
mov
loopne
stos
sbb
nop
in
xchg
add
inc
and
inc
dec
xchg
inc
loop
ret
pusha
rclb
or
les
sbb
testb
add
sub
sub
xchg
or
xor
add
test
imul
or
imul
push
push
lods
out
inc
or
mov
lods
inc
push
mov
mov
insb
jle
mov
cmp
push
add
lock
fisubrs
or
sub
insb
or
fwait
mov
jns
xchg
ljmp
je
jmp
cwtl
outsb
and
rcll
adc
pop
insl
pop
sbb
outsb
and
lods
jecxz
push
add
mov
add
enter
and
imul
popf
es
dec
add
int3
or
sub
hlt
jecxz
and
subl
push
movsb
test
mov
scas
stc
xlat
pop
int
push
rorl
push
loopne
push
shrl
arpl
or
add
sbb
dec
xor
test
mov
stos
cmp
sub
ss
and
or
loope
sbb
inc
mov
add
iret
shrl
mov
in
sbbl
dec
pop
pop
insl
inc
das
jb
cmp
orl
addb
ror
sbb
stos
pop
repnz
push
stos
and
leave
shll
int
adc
mov
and
loope
and
inc
or
outsl
leave
lea
jmp
sbbb
inc
mov
repnz
dec
inc
and
pop
add
mov
push
aaa
mov
push
orl
xchg
pop
sbbl
add
mov
inc
jno
inc
test
out
lock
and
ret
push
sbb
inc
mov
adc
in
jp
stos
inc
lea
mov
dec
adc
lock
inc
add
test
sbb
adcl
or
lock
adc
mov
and
and
out
std
mov
push
sub
and
or
cwtl
add
das
dec
dec
pusha
nop
hlt
jl
inc
sbb
pop
push
dec
adc
push
xchg
xchg
aad
pushf
adc
or
or
stc
incl
dec
jns
ja
push
or
decl
inc
or
xor
push
mov
mov
cwtl
jnp
push
xchg
mov
cwtl
jmp
out
or
data16
jo
rolb
fsubs
cmpsb
bound
shlb
push
ja
adc
and
bsr
push
and
dec
mov
ljmp
popa
ja
jne
push
es
xchg
insl
mov
inc
sbb
xchg
push
jo
or
jne
jb
inc
and
std
mov
xor
sbb
push
and
sbb
sbb
adc
push
sub
bound
lret
push
stos
add
subb
mov
hlt
and
inc
add
mov
icebp
add
arpl
mov
shrb
insb
movsb
leave
leave
or
enter
cmpb
xchg
pop
sub
into
push
mov
pop
test
mov
fbstp
sbb
and
jno
pusha
pop
xchg
das
dec
sbb
mov
sub
push
loopne
repz
jle
inc
sbb
adc
add
jae
std
nop
icebp
adc
cmp
lret
inc
pusha
pop
mov
shll
push
rcrl
and
xchg
rolb
lea
aaa
enter
lahf
mov
cmp
mov
das
testb
xchg
inc
and
cwtl
adc
add
adc
add
xor
andl
sbb
js
mov
push
stos
js
xor
xchg
xor
and
inc
imul
sub
jbe
mov
clc
and
and
inc
cmpb
sub
clc
ds
sub
adc
inc
cmpl
push
xchg
push
rcrl
mov
jo
fs
pop
pop
adc
dec
movsb
out
jo
sub
int
or
shrb
rorb
out
pop
sub
in
push
jno
repz
into
outsb
lods
aas
push
or
or
lahf
cmpsb
mov
out
cwtl
lea
fisttps
cmp
pop
and
aam
jne
pop
cmpsb
or
adc
mov
mov
nop
push
imul
dec
movq
fsubrs
mov
ret
add
adc
dec
cmp
dec
add
cmp
and
push
push
addr16
or
cmp
mov
movsl
sub
sub
movsb
and
add
mov
inc
jmp
add
sbb
enter
add
dec
cmp
xchg
jno
adc
jmp
adc
jae
hlt
dec
aam
pop
repz
mov
mov
addr16
fwait
dec
das
fcompl
or
scas
cmp
inc
or
pushl
or
ud2
mov
push
or
cmp
movsl
movsb
inc
push
adc
js
mov
and
icebp
clc
mov
or
pushf
cmp
adc
fwait
sbb
add
call
es
jp
gs
mov
add
sbb
fsts
std
cmpl
jl
loopne
hlt
dec
jge
pushf
daa
jmp
iret
push
jnp
sbb
dec
out
loop
mov
cmc
push
mov
add
push
test
ret
push
lcall
pop
notb
push
add
repz
inc
pop
adc
sbbb
imul
jns
add
and
cld
mov
dec
or
add
push
adc
xor
cmpsl
jae
add
sbb
pop
inc
jmp
mov
imul
add
jmp
push
or
mov
arpl
push
xor
inc
add
push
imul
cmpsb
mov
mull
test
ret
cmp
insl
in
into
bnd
iret
fdivrl
pop
and
int
cmp
sbb
or
push
idivl
lds
sbb
mov
fsubrs
or
clc
mov
mov
hlt
rcrl
adc
cmp
imull
cmp
cli
mov
ss
ret
sub
gs
cltd
mulb
int
aaa
xlat
sbb
pushl
mov
lcall
jle
xlat
mov
adc
imul
jmp
arpl
nop
sbb
adc
inc
shll
push
add
stc
les
pop
mov
mov
roll
adc
rolb
ret
sbb
adc
lds
adc
dec
call
inc
push
loop
and
dec
cmp
loopne
popa
push
push
mov
movsl
mov
loope
xchg
xchg
sbb
sub
add
or
scas
nop
sub
mov
xchg
or
loope
jp
inc
push
sbb
and
add
sbb
lcall
push
sbb
xchg
jne
and
cld
jo
cmp
stos
insb
pusha
jecxz
adc
mov
mov
aam
outsb
push
cmpb
push
addl
push
jno
popa
adc
loope
pop
jg
pop
inc
and
mov
loopne
push
sbb
sub
and
test
cmc
test
pop
jo
rcrb
or
pop
dec
clc
rol
ljmp
add
out
and
mov
lret
xor
lcall
dec
movsl
push
cltd
mov
hlt
push
out
inc
cs
or
test
fildll
push
iret
ljmp
dec
mov
lea
jg
js
cmp
push
push
aam
sar
push
add
sub
sub
sub
jl
jecxz
mov
push
fdivr
mov
negl
jb
mov
sub
cmc
pop
mov
sub
arpl
add
jl
dec
xor
sub
roll
and
xlat
shlb
push
test
mov
sbb
lcall
insl
imul
mov
or
xor
cld
fs
or
stos
std
or
mov
ljmp
scas
push
and
xor
sahf
imul
or
and
das
jmp
dec
call
jne
and
insb
push
adc
xchg
xor
addr16
ret
and
xor
andb
or
push
and
into
adc
or
xchg
cld
pop
sbb
call
sub
fwait
clc
insl
lret
cmp
rorb
pop
jne
xorl
push
mov
and
sub
cmpsb
xor
movsb
sbbb
jmp
xor
inc
and
enter
or
fsubrl
jno
aaa
dec
faddl
cli
pop
cmp
adc
or
popf
xchg
adc
je
pop
pop
leave
inc
inc
imul
dec
jae
imul
sub
sub
mov
jnp
adc
sar
mov
std
dec
dec
ret
xchg
add
icebp
cmp
lock
in
jmp
movsb
xlat
xor
dec
xchg
fnsave
add
add
adc
sbb
jo
addb
push
sbb
outsl
stc
dec
xor
jp
inc
or
enter
bound
movb
je
or
mov
xchg
inc
repnz
adc
xchg
mov
jo
imul
outsl
ja
xchg
add
cmc
imul
shll
decl
mov
inc
jmp
dec
fwait
shrb
inc
and
jo
outsb
inc
jecxz
sbb
and
push
imul
mov
dec
cld
xor
push
js
mov
xor
mov
shr
and
clc
test
push
or
mov
shll
adc
or
sbb
inc
inc
push
jge
sbb
add
pop
lock
dec
jnp
hlt
mov
sbb
popa
test
push
movsl
push
push
ja
mov
xchg
insb
sub
sub
jbe
movsb
or
sbb
ret
sub
or
dec
push
nop
mov
je
aaa
jne
jno
jo
sbb
and
xor
and
test
push
xchg
sar
sahf
in
dec
and
push
mov
fidivl
sub
and
pusha
add
iret
jo
dec
jge
push
out
push
lock
or
roll
pop
faddl
sub
inc
cwtl
gs
insl
adc
mov
and
sbb
loop
popa
and
mov
les
push
fldt
negb
pop
push
dec
pushf
lret
add
into
fadds
fwait
jp
je
sbb
test
sbb
aam
repz
push
or
aam
mov
pop
lret
or
or
insb
sbb
ljmp
imul
lock
xchg
aad
add
test
insb
das
inc
divb
add
fs
test
add
sub
test
mov
inc
pop
mov
fimull
in
in
mov
test
mov
xchg
xor
dec
adc
and
push
mov
cmpb
or
aam
nop
pop
das
mov
jl
adc
add
lahf
lea
test
inc
inc
adc
inc
push
or
out
pop
pop
mov
mov
xor
mov
int
rcr
mov
fcmovnbe
rclb
or
push
pop
sbbb
popa
sbb
pushf
and
lret
call
test
mov
inc
loope
push
addl
cmc
subl
das
in
inc
mov
insb
xor
sub
sbb
adc
test
dec
ret
stc
sub
add
or
inc
jnp
xchg
insb
in
or
or
gs
push
jne
cmp
pushf
xchg
sbb
dec
movsb
aaa
add
cwtl
call
insl
and
xor
icebp
pop
ss
sub
ljmp
movsb
jno
adc
add
jmp
mov
inc
sbb
xchg
inc
sbb
inc
xor
push
xchg
push
pop
push
mov
dec
test
enter
jae
in
adcl
nop
jnp
cmp
sbb
inc
cwtl
les
sbb
sbb
fsubrl
es
add
test
popf
sub
push
das
insb
insl
sbbl
xchg
stc
mov
int
pop
mov
aaa
sahf
je
push
mov
or
adcb
or
push
mov
loop
or
rolb
subl
pusha
sbb
cmpsb
and
cmp
loope
test
mov
sbb
nop
je
sarl
enter
idivl
lcall
test
test
push
test
pop
xchg
xchg
push
push
std
dec
inc
mov
outsb
push
notb
imul
es
nop
xchg
push
out
push
test
dec
aad
cmpsl
fisttpll
adc
jecxz
dec
dec
stc
pop
or
add
in
cmp
xlat
test
jne
daa
in
pop
cmpsb
mov
or
lods
ret
clc
imul
adc
add
cwtl
test
pushf
cmc
jb
xchg
xor
jnp
pop
js
mov
mov
mov
ret
adc
lods
test
dec
ret
sbb
call
sbb
int3
xchg
hlt
jo
test
inc
shl
int3
movsb
inc
bound
or
call
adc
adc
cmpsb
call
inc
dec
xchg
pop
pop
inc
rcrb
fldt
jb
lock
and
f2xm1
push
push
sub
xchg
enter
jnp
dec
cmpsl
or
adc
insl
jl
or
jae
add
loope
pop
dec
add
and
xor
int
sbb
mov
daa
sbb
add
cs
lods
push
add
add
dec
mov
lods
sbb
sbb
rcrl
xor
jle
or
pop
fistpll
or
push
sbb
push
aam
inc
sub
sub
or
nop
pop
dec
fs
pop
rclb
or
test
mov
pop
arpl
fidivrs
movsb
lret
jmp
push
sbb
fs
lods
clc
mov
xor
clc
sbb
push
push
sub
adc
push
mov
and
push
sub
pop
cmp
mov
jb
push
jnp
scas
cmp
into
je
push
adc
test
xchg
xchg
xchg
fsub
inc
sbb
and
or
out
xor
push
pop
add
ffreep
sub
sbb
adcb
inc
sub
mov
mov
inc
inc
sbb
mov
push
je
push
mov
out
and
idivl
ds
mov
xor
add
add
or
and
adc
pusha
sti
xor
inc
mov
icebp
lret
inc
push
jp
push
inc
mov
push
sbb
mov
ds
xor
stos
xchg
xor
add
add
jg
or
nop
xchg
add
out
push
xchg
cmp
imul
add
gs
data16
inc
push
gs
add
movsb
rcrb
pusha
or
js
jecxz
testl
and
add
gs
rcrl
adc
pop
and
xchg
js
mov
dec
mov
jmp
add
lds
mov
scas
mov
inc
inc
xor
or
jb
pop
mov
xchg
or
sub
pop
je
adcw
jle
push
gs
test
mov
xor
and
jbe
adc
add
mov
test
fcomps
repz
cmp
xchg
ret
add
or
das
lret
jmp
push
cmpsl
je
fisubrl
lea
xorb
or
jnp
ja
push
imul
or
shrb
std
addb
and
or
fdivs
pop
mov
popa
push
insl
mov
sbb
fistps
add
orb
sub
pusha
jnp
mov
mov
aaa
enter
dec
jnp
fimull
mov
mov
dec
jnp
or
leave
jg
or
mov
outsl
nop
or
dec
jnp
add
add
cmpsl
je
xchg
movl
subb
mov
add
fstpt
in
jns
fistpl
pop
push
dec
lods
and
orl
daa
add
push
cmp
mov
or
sbb
add
mov
dec
lods
cmpb
mov
scas
out
cltd
push
xor
and
in
dec
lods
and
xchg
jg
mov
cmp
mov
xchg
out
jo
in
adc
push
outsb
out
shll
or
nop
divb
xlat
jg
cmc
dec
lock
sub
hlt
jne
push
jns
mov
xor
rorl
cmp
sti
xor
cmpsl
icebp
mov
add
inc
jne
dec
sub
int
jl
out
gs
cmp
adc
fcmovbe
xchg
lods
int
jge
cmpsb
sbb
add
mov
ss
or
push
lods
gs
sbb
addr16
cld
aam
jne
gs
and
movsb
pushl
rorb
movsb
rcrb
pusha
sub
dec
mull
idivl
incl
dec
jl
lret
mov
andb
incl
jp
lea
daa
insb
mov
int3
outsb
rep
sbb
add
lret
push
daa
adc
inc
cmp
cmpl
sub
xor
outsl
je
cmp
mov
push
xor
and
or
or
push
pop
fbstp
cmp
js
cmp
dec
es
push
push
sarl
xor
push
xor
sbbl
xor
loope
nop
cmpb
pushf
lock
and
nop
cltd
and
dec
or
add
shlb
rolb
push
movsl
lea
inc
inc
or
add
xchg
into
inc
add
dec
dec
sub
notb
fildll
inc
xorb
add
push
sbb
inc
les
xor
sbb
and
sbb
dec
mov
push
xor
push
rclb
call
xlat
or
mov
adc
sub
ret
cmp
dec
push
inc
xorb
sarb
imul
and
clc
hlt
pop
sbb
dec
push
mov
mov
test
jecxz
mov
inc
push
sbb
shlb
cmp
xchg
pusha
or
shll
dec
inc
dec
ljmp
cmp
push
cmpsl
and
lea
and
hlt
bound
and
mov
push
popl
pop
jno
adcb
xchg
sbb
mov
add
adc
cld
pop
pop
lcall
bound
aas
and
sub
mov
xchg
lahf
mov
push
or
call
test
out
inc
xor
sbb
cmp
push
subl
cmp
lea
adc
mov
sti
sbb
ret
jmp
xchg
in
fdivrp
inc
push
cmp
xchg
gs
mov
enter
xor
mov
subl
call
movsl
mov
mov
jmp
loopne
xor
in
mov
mov
cwtl
jecxz
push
js
lock
pushl
fisttpl
sbb
cmp
pushl
pushl
jo
mov
into
insl
mov
aam
clc
nop
jmp
adc
cmc
daa
push
adc
xor
shlb
movsb
or
sub
jnp
sub
mov
jmp
and
pop
jo
pop
dec
mov
inc
adc
lock
sub
sahf
push
adc
inc
and
subb
ljmp
push
add
out
ss
xor
dec
inc
out
lcall
mov
add
dec
sub
popf
mov
data16
lock
aad
push
jae
add
test
adc
orb
jbe
jl
dec
mov
popa
cld
je
sub
lods
cmp
cmpl
stos
add
dec
lock
pop
mov
lcall
xor
push
xchg
dec
inc
sub
sbb
or
xor
dec
push
pop
and
clc
lret
int3
sub
popf
jecxz
sub
jmp
addr16
push
adc
inc
arpl
sbb
add
out
jmp
xor
sbb
xchg
push
adc
cmpsb
adc
mov
and
mov
inc
xchg
cli
js
adc
dec
insb
pop
jo
and
fcoms
pushw
in
xor
add
loope
je
inc
xchg
scas
repz
test
cmp
cmp
inc
dec
dec
adc
dec
rclb
jle
jne
imul
rorb
sub
jae
mov
ret
cmpb
sbb
xor
xor
and
shl
mov
iret
xor
lret
sahf
std
clc
hlt
in
inc
lds
call
xchg
sbb
out
fcoms
add
add
jne
xor
shrb
sbb
pop
repnz
repnz
shll
xchg
cmpsl
fmuls
lods
pop
ffreep
int3
mov
shrb
mov
les
xchg
push
or
jno
sub
mov
push
add
sbb
insb
mov
add
inc
add
inc
sbb
adc
sbb
rclb
push
js
repnz
push
push
add
fiaddl
mov
mov
bound
imul
stos
lea
and
xor
ds
sbb
lods
xor
jmp
dec
clc
dec
imul
pop
cmp
jne
and
push
xchg
int
sub
and
xchg
xor
add
dec
xor
mov
xor
mov
inc
cmp
jne
adc
cli
mov
mov
dec
xorb
ljmp
add
imul
cmpsb
call
or
in
test
test
cmp
aaa
idivl
and
addl
push
aam
push
and
push
inc
add
add
push
xor
mov
mov
xor
or
cmp
xor
adc
je
imul
movsl
push
mov
aaa
or
pop
dec
dec
aas
cmp
cmp
gs
pusha
pop
jmp
sub
push
mov
cltd
push
push
mov
lods
xor
xor
add
or
int
cmp
jne
or
push
sub
and
cmc
lea
adc
push
adcl
sub
stc
dec
push
mov
xorb
fsubrp
jb
pop
shrb
sbb
fs
iret
lock
mov
xor
mov
mov
pusha
xchg
and
inc
inc
add
popa
jecxz
aam
xlat
inc
pop
dec
inc
stos
pushl
sub
movsb
mov
int3
mov
in
mov
push
dec
xchg
xchg
and
sub
test
mov
add
add
add
or
ss
stos
push
orl
mov
pop
movsl
xchg
jg
in
cmp
shlb
lret
push
sub
jo
push
das
push
je
pushf
and
or
mov
test
lods
cmp
cmp
ret
sbb
adc
xor
sub
cmp
adc
ss
fimull
outsb
flds
push
nop
push
fsts
inc
xchg
and
or
xchg
sub
nop
inc
and
gs
mov
sub
addr16
xor
ret
jle
sbb
into
in
sbb
adc
test
mov
pusha
clc
loopne
pop
ss
jmp
sub
jno
inc
xor
dec
push
lret
add
lret
loop
jmp
or
loope
xlat
dec
adc
in
sub
jmp
inc
jbe
cmc
jmp
enter
push
mov
push
dec
pop
cmp
xchg
mov
add
les
cwtl
outsb
adc
ss
push
gs
xor
jmp
sbb
push
pusha
sub
xor
push
push
js
jp
lock
movb
push
mov
sbb
cmpsb
dec
push
xor
add
or
lods
dec
pop
mov
mov
js
aam
add
xor
fcomps
or
icebp
push
push
fisttps
insl
jnp
aaa
adc
mov
xor
or
ret
push
add
or
push
mov
ljmp
lock
js
icebp
sbb
push
jae
lds
adcb
xchg
test
loope
dec
aaa
or
popl
mov
cmpsl
push
and
test
sub
scas
fcoms
push
push
addl
pop
or
daa
hlt
and
sub
inc
aad
data16
jb
outsb
hlt
je
adc
enter
mov
lock
adcb
or
inc
sbb
cmp
pushf
inc
cs
cld
inc
mov
sub
add
in
pop
sub
add
mov
ret
sbb
pop
ret
jg
push
push
mov
add
mov
mov
ret
fmull
mov
andb
add
push
add
lods
pop
les
xor
dec
or
in
daa
gs
dec
fs
movsb
pop
adc
and
je
into
pop
dec
ret
add
inc
pushf
xchg
imulb
push
sub
je
cld
mov
sbb
je
adc
stos
xor
jge
xor
js
push
mov
and
add
stos
adc
cmc
inc
add
pop
outsb
pop
dec
pop
test
add
mov
sub
and
push
push
sbb
ficompl
ret
push
orl
mov
mov
les
add
dec
aam
aas
fdivrs
mov
pop
xor
jmp
adc
jle
add
cmp
jle
inc
out
add
enter
inc
cmpb
push
or
lcall
stos
pop
jb
cmp
out
push
xor
call
mov
or
int3
and
scas
movsb
mov
push
ja
pop
arpl
add
insl
jmp
sti
mov
mov
jne
nop
dec
add
je
cmp
jo
rorb
cmp
dec
movsb
out
cwtl
sub
fsubrl
bound
push
jne
lret
sub
in
adcl
arpl
pop
sarb
sub
fwait
mov
pop
jns
arpl
sbb
roll
mov
das
dec
pop
adc
aad
xor
ljmp
cmp
pand
mov
fldt
sbb
xchg
mov
mov
sbb
xchg
jbe
sub
sbb
sbbl
or
lea
push
mov
aam
inc
call
and
mov
add
loopne
push
pusha
in
jmp
jmp
xor
pop
add
xorl
push
pop
in
jbe
adcl
cmpsl
mov
push
pop
testb
push
cltd
loopne
fdivs
push
ja
inc
push
aaa
mov
popa
fcoms
lcall
cmp
push
and
insb
or
call
addr16
bound
fisubs
fistpll
stc
xchg
sbb
jmp
pusha
stos
mov
xchg
xor
push
mov
or
add
push
adc
cmpsl
into
stos
aas
mov
cltd
sbb
imul
cmp
pop
sbb
ret
inc
pusha
and
mov
maxps
jmp
scas
rclb
jmp
loope
jge
sub
jne
or
add
lods
and
cmp
add
inc
cmp
shll
into
pop
dec
imul
dec
inc
ffreep
inc
test
xchg
pop
and
xor
out
mov
mov
push
cmc
sbb
out
jge
nop
enter
out
xchg
xor
icebp
or
push
push
push
xor
iret
repz
outsb
pop
ds
push
push
mov
repz
mov
fnstenv
push
xor
xor
daa
xchg
sahf
pop
push
push
loope
in
mov
arpl
out
push
xchg
sbb
mov
sub
sbb
or
sbb
sbb
mov
xor
test
add
cmp
nop
pop
push
data16
or
pop
xor
adc
inc
loop
adc
clc
or
lock
or
fs
es
sub
bound
lret
adc
add
loope
or
lret
int
cmpsb
call
addb
rorl
aas
pusha
lret
or
into
shrb
pushf
or
lods
bound
mov
ret
rolb
les
or
dec
or
popa
loope
cli
inc
inc
jb
mov
sbb
test
pop
enter
xchg
insl
inc
cs
add
add
jg
cmp
insb
add
and
dec
and
push
mov
inc
ret
scas
lods
popa
or
mov
add
fsubs
mov
push
repnz
pop
inc
xor
pop
jl
andl
xor
push
insl
xor
mulb
mov
enter
or
fldt
icebp
adc
imul
movsb
pop
mov
sub
add
and
cld
and
dec
sbb
jne
mov
scas
pop
push
xor
cmp
pop
jno
arpl
mov
scas
sbb
div
or
jno
xor
push
push
fbld
add
lahf
jo
insl
es
sbb
adc
adc
fdivl
dec
sub
pushf
popf
mov
jle
push
pop
fsubr
push
mov
jae
les
mov
jmp
pop
aam
pop
nop
fcmovb
xor
push
fmuls
and
adc
lods
push
adc
ret
mov
mov
or
leave
xor
cmp
adc
ss
jecxz
scas
movsl
dec
jp
sub
mov
push
into
cmp
ret
dec
cmpl
adc
in
inc
test
dec
test
or
idivb
and
add
lea
push
mov
xchg
dec
lea
clc
adc
or
mov
int
lahf
inc
pop
dec
lods
mov
das
lods
push
mov
or
push
pop
mov
movsl
jne
outsl
sbb
js
cmp
pop
adc
lea
lea
cmp
mov
mov
ja
mov
ljmp
adc
sub
xchg
cmpl
jbe
jecxz
clc
sub
and
das
jbe
or
sbb
dec
jne
out
mov
add
pop
add
test
add
add
pop
push
dec
mov
mov
imulb
jbe
xor
mov
xchg
rclb
ja
or
imul
call
orb
test
lret
shll
cmp
adc
js
sub
inc
lods
dec
pusha
mov
fsubl
cltd
push
loopne
push
cld
or
arpl
pushw
mov
or
movsl
arpl
add
adc
xor
and
adc
adc
or
add
jne
add
out
imul
dec
sbb
lahf
inc
lahf
lcall
or
lods
adc
or
push
jecxz
sbbl
lds
or
out
js
jb
push
mov
jge
pusha
not
xor
add
lret
adc
inc
cmp
xchg
push
push
aas
fidivs
or
daa
arpl
pop
pop
inc
in
das
insl
sbb
and
mov
adc
and
sbb
cmpsl
push
test
scas
loope
adc
or
xor
enter
ljmp
inc
sbb
fdivs
roll
xchg
lea
popf
and
es
jle
fsts
push
sbb
push
jmp
pop
sub
adc
leave
pop
jbe
shlb
mov
push
popf
push
cmp
pop
lret
xor
rcr
addl
pushf
add
mov
adc
cmp
push
xchg
arpl
pop
lock
add
push
int3
push
inc
loopne
and
dec
jl
scas
jno
or
repnz
and
test
pop
hlt
fwait
imul
sub
sbb
and
xor
dec
test
in
add
sbb
es
repnz
add
popf
xor
loopne
enter
jnp
popl
xor
and
or
test
lds
daa
mov
or
push
jge,pn
shlb
add
cmp
sub
push
inc
adc
dec
sbb
jmp
lret
pusha
dec
add
dec
xor
cmc
add
jmp
popa
and
and
inc
aaa
stc
push
inc
cmp
add
dec
adc
push
sub
jnp
mov
push
xor
sarl
xchg
loopne
popa
sbb
push
out
lcall
xchg
add
hlt
or
lcall
and
mov
dec
and
add
push
dec
lret
mov
mov
call
shr
fs
outsb
xchg
lods
sub
add
or
idivl
xchg
orl
cmp
adc
cli
mov
nop
sub
add
in
or
js
pop
adc
sar
rcll
dec
int3
add
and
clc
sbb
out
sub
cmp
rorb
adc
subl
sub
dec
mov
sbb
jp
jne
xor
jmp
and
xor
pop
hlt
jle
inc
xchg
sub
inc
adc
movsl
sbb
xor
xchg
push
cmpsl
add
xor
adc
sbb
mov
pusha
arpl
clc
xchg
wrmsr
add
push
inc
xor
adc
xchg
dec
add
dec
out
push
xor
or
inc
inc
mov
push
or
push
adc
dec
jae
test
xorb
add
mov
dec
fdivr
mov
mov
mov
adc
push
or
or
push
cmpsl
imul
aaa
loop
decl
pusha
sub
sbb
imul
sub
je
addr16
lock
pop
lcall
sbb
invd
push
add
pop
pop
popa
jo
pop
les
push
sub
call
adc
adc
adc
jno
sbb
and
out
orl
mov
add
icebp
cmp
je
inc
mov
sbb
xorl
popa
adc
xorl
nop
shlb
out
enter
sti
aam
sbb
jne
ss
push
sub
sub
adc
incl
push
ds
sbb
pop
repz
insl
or
and
sbb
push
jle
cmp
lock
rcr
daa
out
data16
push
mov
pop
and
sbb
xchg
xor
push
fists
jo
jg
pop
andl
push
outsl
orb
lahf
out
and
mov
xchg
dec
call
out
push
and
dec
arpl
mov
mov
dec
dec
sub
adc
or
and
xorb
mov
push
fdiv
mov
in
add
pusha
je
sbb
push
and
inc
push
push
push
negb
sub
or
sbb
add
inc
adc
daa
mov
sbb
sbb
pop
or
ja
in
or
popa
shlb
incb
pop
aaa
xchg
xor
addb
shlb
scas
into
sub
addr16
filds
adc
push
push
cld
push
adcb
sbb
not
test
out
mov
dec
scas
adc
movl
enter
cmp
or
cmp
fs
nop
out
inc
push
stos
dec
inc
mov
daa
and
je
add
mov
aas
js
inc
aaa
jb
add
stos
jle
je
sub
push
push
dec
push
xor
div
dec
add
xchg
push
add
aaa
movsl
mov
xor
stc
lds
xor
sbb
push
dec
call
xor
lock
rcr
or
rolb
pop
xchg
out
push
aas
adc
in
cmp
add
mov
mov
mov
clc
xor
adc
cmp
mov
ss
movsb
jnp
push
cmp
inc
mov
jge
filds
sbbl
and
and
clc
adcl
add
cmpb
cmpsl
cmp
push
dec
inc
cs
mov
rorl
jno
enter
cli
cmp
add
dec
add
or
insb
je
push
and
add
enter
or
xchg
cmp
popf
push
orl
cmp
add
inc
sub
aad
jae
lahf
das
sub
push
insb
pop
pop
push
lock
or
dec
pop
dec
fisttpll
xchg
jo
xchg
push
aaa
roll
fwait
mov
push
dec
xchg
dec
xor
jmp
gs
inc
cmp
inc
dec
ret
mov
imul
pop
sub
inc
sub
jo
jns
call
adc
and
stos
and
add
push
push
imul
roll
orl
rorb
fmuls
mov
les
cmp
add
ds
xchg
ror
cmp
and
lret
push
loope
out
pop
xor
int3
xchg
pusha
loop
leave
pop
pop
mov
sub
or
lock
or
loopne
dec
ret
inc
bound
in
adc
cmp
inc
stos
push
call
in
dec
sub
xor
in
add
xor
mov
push
roll
lds
test
mov
aad
pushf
push
pop
pop
test
or
and
test
and
sbb
sahf
sub
xor
jno
pusha
cmp
scas
andl
fisubrs
mov
mov
xchg
mov
popf
pushf
sbb
lds
mov
cmp
mov
or
in
adc
inc
popa
fs
xor
add
lods
mov
std
sbb
inc
add
or
adc
add
pop
or
mov
xor
or
cmp
test
cmpsl
jge
adc
mov
test
sbb
in
cmpsb
sbbb
or
cmpsl
or
lods
xchg
push
xor
clc
adc
and
cmp
scas
or
push
in
jl
jo
test
ficompl
add
push
add
movsl
aas
pop
test
sbb
mov
or
push
mov
mov
sub
dec
add
das
sbb
and
inc
rcrl
dec
lods
mov
orb
imull
cmp
gs
cmp
cmp
adc
sbb
xchg
cs
ret
dec
add
loopne
nop
int3
test
jecxz
lods
dec
inc
sub
js
js
int3
std
adc
imul
adc
sbb
jg
cmpl
mov
data16
scas
dec
pusha
inc
sbb
jecxz
or
push
cltd
xlat
jae
divb
stos
add
and
imul
ss
jb
xchg
dec
imulb
mov
add
jnp
int3
shrl
add
notb
cmp
or
xchg
and
pop
mov
cmpsb
out
dec
std
xor
pop
pop
push
insb
sbb
and
mov
aam
jmp
pop
sub
je
push
cmp
nop
mov
test
scas
insb
push
es
nop
sti
mov
push
fdivl
push
push
push
stos
pop
jne
sub
test
jmp
push
sti
clc
cmp
jmp
or
push
rolb
adc
sub
cmp
std
lahf
xor
sub
pop
xchg
jno
or
jmp
cmpb
mov
push
cld
add
mov
or
adc
iret
ljmp
cltd
roll
pop
or
insl
inc
mov
in
lahf
jo
adc
fwait
loope
movb
je
jbe
je
or
and
inc
xor
sub
movsb
fisttpll
inc
lods
popf
lret
stos
rolb
adcl
out
sbb
pop
xor
xchg
into
pop
and
inc
rolb
popf
push
adc
ret
mov
dec
sub
adc
sbb
sub
xchg
push
mov
mov
cmovo
inc
inc
sub
movsb
sub
xchg
cmpsb
sub
fmull
xor
into
sti
or
ds
into
dec
test
arpl
imul
sti
lods
xor
imul
sub
ds
pop
cmp
inc
pop
jmp
fdivrl
pop
push
das
les
je
loopne
pop
stos
fisubs
add
lahf
pop
cmpsb
pop
sbb
adc
loopne
sbb
mov
xchg
push
and
ret
push
jmp
das
or
inc
cmp
out
mov
push
loope
add
fsubrs
add
das
cmp
out
in
addb
push
xor
cmp
mov
add
mov
dec
pop
dec
aad
ret
ljmp
dec
push
mov
sub
mov
xor
lret
jp
sbb
xchg
add
adc
test
add
or
movaps
push
orl
bound
repnz
lret
repnz
adc
xchg
push
add
pop
or
inc
or
movsb
and
push
in
add
insb
mov
or
push
imul
mov
loopne
fildl
imul
mov
ret
sub
mov
in
jns
js
loopne
cmp
mov
mov
pusha
andb
out
xchg
add
nop
sbb
dec
incl
cmp
insl
add
or
pop
jno
adc
stos
add
add
and
rclb
mov
add
or
aas
std
cld
add
push
bound
push
les
pop
sbb
cmp
jle
add
test
mov
or
push
ja
add
dec
jns
mov
cmp
jne
int3
sbb
mov
jmp
sbbb
mov
and
push
mov
inc
and
and
test
jo
nop
rcr
xlat
xor
cmpsb
ret
jmp
das
jmp
mov
cmp
pop
sbb
jle
es
xor
cmp
add
leave
popf
test
shlb
into
adc
or
lock
cmp
jg
mov
sbb
or
lret
clc
and
rclb
clc
xor
cwtl
sbb
aam
mov
lods
cld
in
and
xchg
sbb
arpl
out
pop
incl
inc
shlb
or
lea
xor
jg
dec
push
adc
and
or
sub
ret
ret
cmp
rcrb
lea
xchg
and
out
or
es
xchg
pusha
add
js
mov
sahf
jge
dec
daa
adc
push
sbb
lret
test
adc
xchg
jo
push
arpl
and
add
pop
cmp
inc
sbb
push
shlb
pinsrw
cmp
inc
push
jge
incl
js
cmp
jne
cmp
enter
je
clc
inc
sub
mov
mov
add
ljmp
out
push
jns
mov
adc
std
mov
push
mov
cmp
push
sbb
jge
cmp
cmc
fimuls
push
sbb
lods
add
dec
fdiv
sub
or
aas
inc
dec
cmp
je
je
stos
mov
mov
xor
int3
mov
sub
jl
aam
xor
sahf
shlb
cmp
ret
jle
push
add
jb
xchg
push
jmp
adc
push
sbb
into
loopne
pop
insb
andb
roll
in
mov
pop
cmp
sub
add
movsb
mov
subb
or
push
push
inc
jne
ss
mov
xor
xor
daa
loop
push
push
das
je
adc
cmp
call
sub
in
pop
dec
sub
or
sub
mov
rcll
pusha
dec
adc
icebp
mov
or
add
in
mov
mov
jge
sub
pushl
lods
inc
lods
imul
or
cmc
mov
roll
jl
jnp
adcl
xor
inc
inc
add
and
xor
jge
outsb
pusha
dec
jecxz
adcb
out
sbb
dec
mov
push
sub
cmp
cmp
loope
cmc
sarl
js
aaa
call
jo
inc
jg
adcb
mov
std
pop
push
adc
push
pop
dec
xchg
adc
inc
pusha
popa
mov
add
inc
mov
or
xchg
nop
js
sub
jmp
mov
dec
lods
popf
sbbl
fidivl
cld
and
cmp
je
lret
xchg
cmp
nop
shrb
xor
sahf
sahf
xchg
fbld
stc
sub
sub
pop
push
ja
push
sbb
bswap
fnstsw
jbe
cli
cmpl
sbb
dec
pop
jo
or
mov
cmp
add
clc
add
outsb
push
loop
xchg
jns
pop
das
push
mov
mov
pop
cwtl
jge
pop
movl
or
dec
dec
and
jo
loopne
scas
push
pop
xchg
cwtl
mov
push
push
scas
dec
adc
adc
or
inc
arpl
adc
dec
adc
movsb
xor
jg
cmpl
loope
mov
cmp
and
loopne
cli
ds
popf
rorb
leave
andl
or
add
or
mov
push
mov
dec
repnz
loopne
pop
aam
mov
pop
pop
mov
mov
push
mov
push
call
das
loopne
mov
es
aam
aad
test
rol
adc
into
mov
fists
push
add
jae
loop
imul
inc
fidivrl
repnz
and
mov
jecxz
cmp
lret
pop
mov
xchg
cmp
adc
push
fiadds
pop
jmp
xor
cmp
dec
add
cld
test
add
dec
cmpsb
popl
xchg
dec
arpl
jp
adc
out
add
or
test
push
pop
xor
fldt
mov
or
rcll
sbb
popa
in
das
xchg
lods
or
sbb
add
sub
cli
andl
pusha
dec
pop
out
lcall
bound
dec
xor
xchg
jbe
ja
insb
frstor
ja
je
popa
or
add
cmpsl
add
insb
fidivrl
or
jle
or
jp
and
add
sarl
std
push
lods
dec
ds
push
jmp
add
lock
mov
push
adc
imul
xchg
adcl
mov
cmp
xlat
xor
pop
jp
mul
mov
push
xor
push
imul
lock
into
cmp
clc
mov
arpl
je
insb
jne
cmp
outsb
insb
je
popa
xchg
lcall
lret
jmp
push
jmp
cmp
outsl
cmpsl
test
popa
aad
aas
sti
lods
and
dec
fnstcw
enter
mov
jnp
pop
or
pop
bound
and
mov
jne
mov
fidivrs
adc
or
int3
jp
inc
leave
pop
or
mov
jne
push
pop
sub
jns
insb
pop
or
jl
or
xchg
push
sbb
jnp
shrl
fucomi
add
mov
fucomi
jbe
fs
in
sbb
jg
jecxz
jae
pop
scas
mov
jmp
shrb
mov
xchg
or
mov
push
pop
sub
mov
jo
out
add
jl
mov
add
rcl
or
paddusw
imul
rclb
adc
add
mov
dec
xchg
nop
cwtl
mov
fs
testb
adc
cld
sbb
jmp
jmp
pusha
mov
sub
lods
push
xchg
push
loop
push
orb
lds
pop
mov
cmpsl
xchg
adc
inc
and
rcrl
mov
mov
xor
jl
xor
flds
jp
fstpl
jo
pop
test
add
testl
movsb
push
push
or
and
adc
pop
dec
or
dec
sbb
mov
imul
popf
adc
nop
leave
jl
push
adc
jp
or
clc
mov
or
mov
mov
dec
mov
outsb
push
sbb
pushf
pushf
pushf
sbb
test
test
inc
ljmp
mov
outsb
out
aaa
cmp
jae
cmpl
sarb
adc
sub
inc
fistpl
mov
test
inc
adc
je
adc
cmp
sub
jl
push
pop
es
xor
leave
test
les
lock
test
cmc
leave
and
iret
pop
push
pop
shlb
in
movsl
lsl
xchg
mov
inc
or
sbb
sub
inc
jae
je
sbb
mov
lods
xor
and
fsubrs
or
nop
dec
pop
movsl
push
insl
mov
loop
and
clc
add
in
cmp
and
jle
xorb
ret
push
aaa
cmp
add
inc
fmuls
pop
lods
addl
push
stc
int
sbb
sbb
lcall
jo
pop
mov
push
int3
dec
aas
dec
mov
loopne
cmpsl
or
push
inc
mov
aas
mov
outsl
and
add
mov
pusha
sub
add
mov
inc
dec
pusha
xor
xlat
inc
and
sbb
cmp
or
hlt
sbb
ror
pop
pop
sbb
push
lahf
push
or
sbb
push
mov
push
inc
adcb
push
xor
jb
add
aaa
add
push
sub
inc
add
movsl
pop
lcall
ss
inc
cmp
rcll
fiadds
jmp
mov
pop
aam
ds
adcb
dec
js
sbb
fmuls
sbb
jo
pop
mov
push
mov
push
mov
shll
pop
add
sub
pop
dec
or
roll
das
sbb
inc
lea
push
mov
mov
pop
xchg
mov
pop
inc
adc
xchg
mov
push
adc
repnz
in
sbb
push
or
xor
jmp
ss
dec
rcr
dec
ret
mov
frstor
imul
push
addl
jbe
stos
or
leave
push
clc
adc
pop
sti
test
xor
sbb
cmpsl
push
mov
cmpsb
cmp
mov
dec
jne
mov
ret
jns
mov
in
sarb
enter
pop
lret
add
mov
loop
je
add
sub
repz
xchg
inc
add
loopne
and
pop
out
inc
shl
cmp
pusha
push
xor
mov
and
or
scas
and
sub
movsl
inc
cmp
add
push
and
xor
push
testl
push
mov
mov
jge
push
mov
das
push
or
sbb
add
push
fadds
pop
add
in
xlat
mov
dec
push
push
shll
inc
push
push
push
jp
je
add
sti
mov
mov
hlt
dec
sub
jbe
add
xchg
pop
pop
add
adc
inc
add
xorb
loopne
ljmp
shr
inc
push
pcmpeqb
lcall
pusha
sub
clc
and
push
sub
pusha
dec
push
jo
outsb
popa
jl
shrb
dec
push
or
shr
sub
pushf
jbe
fcomps
in
stos
xchg
jns
data16
push
rep
jp
mov
cmovg
sbb
inc
and
or
sub
pop
aam
xor
mov
outsb
cmp
cmp
push
mov
mov
aad
mov
pushf
push
js
or
push
arpl
mov
dec
push
lcall
add
sbb
sbb
pop
push
add
scas
aam
test
sbb
cs
push
or
mov
inc
and
loop
dec
clc
and
shrb
and
inc
push
cmpsl
aam
orb
sti
jmp
add
adc
scas
es
pop
dec
adc
cwtl
pop
nop
popa
add
xor
ret
fwait
pop
in
mov
and
sub
cwtl
addr16
in
dec
sbb
loopne
insl
sub
and
sbb
or
add
call
sbb
or
xchg
and
sahf
mov
inc
loopne
mov
add
jge
pop
je
push
sbbl
insb
lock
or
add
inc
ror
jo
popa
ret
andb
adc
xor
insb
sbb
or
add
popf
addr16
dec
pop
xchg
shlb
in
pushf
add
je,pt
push
cmpsl
loope
adc
and
push
cmp
xlat
mov
or
std
xorb
xor
bound
out
je
lahf
das
gs
lds
outsb
ret
mov
add
loope
scas
in
addr16
xchg
and
jp
push
jne
das
and
std
sub
mov
mov
xchg
mov
inc
sbb
enter
addr16
insb
rol
out
sub
jnp
mov
mov
mov
and
and
add
int
mov
cmp
pop
je
sbb
or
cmp
loopne
sbb
mov
test
in
sbb
xchg
xor
scas
add
lds
adc
push
add
mov
adc
add
and
and
nop
push
add
fnsave
ret
stos
adc
jns
pop
pushf
xor
mov
sub
mov
adc
adc
out
mov
pop
mov
nop
rol
mov
ret
jge
jg
sub
sub
xchg
mov
inc
mov
push
cmp
and
loopne
xor
pushf
xchg
mov
dec
wbinvd
pop
aam
cmp
and
add
sbb
mov
jecxz
dec
push
adc
mov
sub
inc
sbb
sub
and
ja
xor
mov
inc
addl
mov
mov
sbb
xor
add
mov
pop
fstpl
push
mov
and
lock
ljmp
mov
inc
hlt
adc
mov
shl
add
jb
mov
fdivl
insb
inc
jno
stos
mov
push
push
add
in
pusha
enter
cld
pop
addr16
or
jge
sbb
and
shl
cmpl
adc
or
out
test
mov
inc
dec
sbbl
mov
mov
push
adc
mov
push
insb
sbb
and
add
mov
lret
fists
cwtl
loope
lret
jo
ret
sahf
fxch
push
or
sbb
inc
jo
and
leave
and
mov
sub
adc
dec
ret
xchg
pop
gs
pushf
xor
test
addr16
and
sbb
sbb
cmpsl
push
rcrb
cmpb
in
nop
sbb
jge
push
xor
orb
mov
clc
or
pusha
ret
loop
inc
sbb
aaa
fsubrp
cmp
push
and
jne
js
inc
arpl
loopne
arpl
push
daa
inc
pop
adc
xchg
fdivl
add
jbe
push
je
rol
jge
push
cmpsl
xor
or
jnp
dec
les
add
pop
mov
jmp
jge
push
push
xor
imul
test
sbb
add
js
rclb
mov
lods
xchg
jle
addr16
popa
cld
cmp
pop
and
add
push
scas
pop
dec
or
jmp
into
or
and
or
sbb
xor
lods
aaa
insl
lahf
es
hlt
add
orl
push
adc
lock
fisttpll
cs
in
sub
xor
inc
ret
mov
sahf
jo
push
or
sub
add
or
sbb
xchg
lcall
aad
pushf
pop
cmpsb
push
push
xchg
rolb
aam
imul
pop
mov
adc
lret
cmp
adc
lahf
test
mov
push
mov
mov
or
add
adc
xchg
imul
add
pop
nop
daa
repnz
adc
add
mov
cltd
dec
sbb
stos
add
pop
adc
xchg
cmp
int
rcl
inc
push
sbb
roll
stos
add
pusha
pusha
cmc
imul
rorl
popa
inc
les
sbb
sub
jle
in
cmp
push
mov
mov
and
stos
sbb
imul
hlt
addl
jno
push
adc
jp
add
sub
fbstp
sti
imul
test
push
filds
ret
and
cs
sub
stos
push
jo
mov
jo
int3
and
mov
cli
add
add
sub
jbe
mov
pop
fildl
sub
sbb
xchg
sbb
xor
inc
stos
cmp
ja
cltd
jbe
sub
add
clc
push
add
mov
jbe
pop
outsb
add
rorb
pop
insl
fucomp
sbb
lea
adc
test
scas
lods
mov
inc
xchg
outsl
sub
push
xor
nop
pop
inc
sbb
les
fwait
jp
jne
push
or
into
lahf
adc
and
sbb
mov
dec
jmp
aas
add
xchg
lock
pop
and
push
push
sub
mov
jbe
ss
je
mov
ret
jg
push
call
sub
push
ss
mov
inc
sub
in
ret
ficomps
ret
push
and
jns
and
call
jmp
and
push
push
mov
mov
mov
push
jb
xor
push
sbb
adc
icebp
mov
in
mov
pop
sbb
add
xchg
push
popf
fcomps
add
jge
push
push
adc
and
sub
push
add
and
add
popf
push
es
das
push
xchg
mov
fcoms
mov
xor
fists
cmp
aad
neg
sbb
xchg
sub
sbb
push
push
mov
pop
jl
mov
decb
leave
lods
add
adc
mov
mov
push
push
cmp
clc
cmp
lea
loop
mov
dec
jmp
loope
jl
xor
adc
mov
xchg
and
sbb
adc
or
pushf
dec
mov
addb
shlb
mov
adc
mov
and
test
lock
cmp
fcmovb
cwtl
pop
aam
push
out
and
rorb
xor
cmp
hlt
push
xchg
fcmovnu
and
pop
loopne
and
xor
movsl
or
push
push
and
push
cwtl
fdivrs
aam
cmc
inc
push
inc
aam
loopne
out
das
cmp
adc
shlb
rcrb
sbb
sub
push
inc
inc
cld
mov
jmp
cmc
dec
add
rclb
xor
add
sub
imul
push
sub
pop
mov
cmpsl
and
adc
or
loope
insb
adc
add
push
in
sbb
pop
pop
add
pop
in
sbb
sub
add
mov
push
lock
push
push
clc
cmp
loop
outsb
stos
clc
jne
mov
cltd
mov
in
sbb
les
inc
add
xorps
popl
negb
adc
jo
add
push
cmp
in
pop
push
sbb
adc
shlb
xor
cmp
pushf
pop
mov
sub
xor
pop
pop
cmp
sub
bound
shll
mov
inc
or
imul
xor
xor
adc
nop
gs
inc
lcall
sarb
lds
mov
mov
inc
jbe
cs
mov
inc
addr16
ret
mov
and
js
jbe
popa
cmp
insb
andb
pop
sbb
mov
bound
test
push
push
addr16
ret
pop
ds
sub
popa
daa
dec
test
mov
pop
mov
push
sub
add
xor
sbb
sub
adc
inc
or
add
inc
jo
faddp
das
in
cmp
jbe
icebp
sub
inc
sub
and
into
xchg
ficoml
mov
jl
adcb
rclb
inc
push
lea
les
lret
cmp
jbe
insb
push
ret
fcoml
jae
ret
sbb
test
xchg
or
fdivs
push
idivb
or
rclb
dec
insb
pop
mov
and
rcrl
orb
sbb
test
push
aad
sbb
push
cmpsb
out
popf
and
rol
pop
lods
cmp
into
addl
xchg
sub
movsl
sub
rcrb
sbb
mov
pop
or
add
sub
cmpsb
cmc
mov
push
xor
test
rorb
test
mov
and
insl
lret
and
pop
mov
pop
inc
outsb
punpcklwd
jecxz
sub
mov
fisubl
or
or
rorb
and
jo
pop
fwait
pop
xor
adc
adc
lods
outsl
out
pop
pop
jnp
lds
adc
mov
pop
adc
enter
pop
pop
push
jle
add
sub
push
call
movaps
add
test
dec
sub
repz
rcrl
push
push
push
jae
sbb
push
push
add
ret
sbb
sub
jg
add
ret
idivb
sbb
out
mov
fadd
imul
pusha
lret
daa
cmp
sub
sbb
push
lea
repz
add
pop
push
cmp
adc
test
ret
add
ret
call
ss
movhps
pusha
xor
scas
js
stos
jg
jmp
cmp
stc
lea
sbb
test
int3
push
adc
inc
mov
dec
pop
test
lcall
cmp
cmp
fimull
lret
pop
cmpb
jae
push
inc
sbb
dec
lock
rorb
sbb
jbe
add
das
je
dec
push
mov
enter
fucomip
mov
jne
outsb
jbe
arpl
out
loop
push
adcl
pushf
cmp
or
push
notl
mov
popf
push
sub
lods
inc
call
and
sub
inc
fists
pop
dec
add
or
loopne
xor
lahf
sub
pop
sbb
jecxz
add
cmp
add
frstor
mov
call
pop
jp
add
sub
sbb
cwtl
mov
int
jge
mov
popf
cmpsb
dec
mov
out
inc
dec
pop
sbb
aaa
data16
push
pop
sub
or
gs
sbb
or
add
jmp
and
or
xor
dec
lea
nop
push
push
adc
inc
jge
push
jle
or
shrl
push
movsl
xor
adc
dec
cmp
dec
pop
jl
stos
inc
pusha
xor
rcll
lds
mov
pop
add
jne
fcoml
sub
push
rorb
loopne
push
add
jle
mov
mov
into
inc
cmp
cmp
xchg
jo
ljmp
add
add
cmp
push
mov
pop
sub
xor
adc
rcrb
jnp
adc
insb
pop
add
aas
les
imul
fidivrs
push
mov
xchg
adc
js
and
arpl
js
sub
inc
sbb
jne
fildll
loopne
cli
cmp
jl
cmp
cmp
jl
cmp
adc
cs
inc
rolb
mov
inc
cmp
jge
adc
dec
pop
pop
out
sbb
mov
fadds
add
pop
add
add
inc
test
and
adc
test
jg
outsb
mov
fisttpll
inc
inc
ret
jp
leave
cmp
inc
jl
mov
jmp
jmp
in
add
jmp
sbb
push
push
inc
inc
add
sbb
cmp
push
mov
sbb
mov
and
daa
das
data16
je
mov
mov
push
cmp
aaa
mov
sub
fs
imulb
ret
cld
push
cmp
addr16
fcompl
cmpb
mov
sbb
xchg
xor
test
je
mov
or
cmp
dec
and
and
jecxz
sbb
rol
inc
add
jmp
lret
xchg
mov
adc
inc
ja
cmpsb
push
adcb
int
movsl
push
popf
in
test
jo
movsl
jns
je
orb
gs
xor
add
adc
std
pusha
mov
ret
bound
mov
or
add
mov
add
add
jecxz
push
scas
ds
int3
cli
sbb
mov
aam
inc
xchg
mov
mov
fstpl
jmp
inc
or
add
push
push
jmp
imul
add
inc
pushf
and
pop
push
bound
adc
adc
mov
push
mov
pop
xor
sub
push
fwait
xorb
xchg
sti
mov
cli
push
mov
jne
add
movsb
repz
ret
leave
adc
pushf
pop
jge
out
lds
or
push
iret
adc
cwtl
xor
mov
sub
dec
in
cli
push
push
add
adc
xor
clc
inc
push
cmp
lret
or
shll
and
jecxz
and
aam
sahf
cmpsb
and
enter
test
jl
jo
cmpb
cmpsl
mov
jg
clc
inc
or
add
inc
xchg
mov
dec
inc
test
clc
xor
push
xorb
inc
pushf
xchg
les
mov
inc
or
test
adc
cmp
and
loopne
push
jne
test
push
mov
imull
mov
lea
mov
mov
out
pavgb
add
insb
mov
out
lahf
dec
sbb
outsb
nop
movsl
sbb
lret
inc
sahf
in
xlat
shlb
add
push
imul
lds
loope
cltd
or
xchg
adc
jo
add
dec
adc
daa
add
inc
adc
or
push
mov
lcall
sbb
mov
mov
pop
fcomps
cmpsl
cld
push
push
push
imul
push
aaa
xchg
addr16
sbb
jl
rol
and
mov
xor
dec
jne
and
lock
xor
and
add
pop
fisubrs
xchg
push
push
mov
sahf
add
clc
add
or
adc
nop
jle
pop
inc
push
adc
movsl
cwtl
add
sbb
mov
pusha
subl
lret
ficoml
pop
fisttpl
je
sbb
xchg
loop
inc
shrl
jle
shrb
inc
sbb
sbbb
inc
cmp
push
ret
shlb
jbe
pop
push
jmp
and
scas
adc
inc
push
je
push
sub
and
or
test
jno
adc
in
xchg
lahf
sub
fcomps
ret
sbb
dec
outsl
sbb
xchg
mov
add
push
sbb
cmp
ja
mov
lods
loope
push
add
lods
dec
mov
std
adc
clc
rorl
mov
mov
outsb
mov
push
and
xor
loopne
sahf
nop
push
dec
push
mov
jmp
add
fsts
inc
mov
inc
sub
push
mov
pop
ret
and
dec
adc
sbb
fadd
pop
mov
mov
jl
popa
inc
sub
pop
mov
sbb
inc
xor
sub
push
and
and
cmp
dec
add
enter
push
sub
push
lods
lds
or
movsl
stos
push
insl
dec
mov
stc
shll
or
jnp
xchg
add
imul
cwtl
jmp
data16
push
mov
dec
cmp
mov
test
cmp
mov
push
jmp
xchg
mov
repnz
or
mov
xchg
dec
aad
sbb
popf
dec
sub
mov
sub
add
xor
scas
xchg
test
out
adc
aam
adc
loop
xchg
test
push
add
rclb
rorl
mov
xlat
ljmp
or
sbb
ljmp
mov
dec
arpl
pop
add
xchg
test
add
xor
imul
lods
int3
nop
or
sahf
and
pop
jge
fs
stos
sub
bound
jg
jmp
ret
rcll
outsb
jb
mov
data16
scas
sbb
pop
ds
or
push
mov
push
add
fs
dec
sbb
leave
and
inc
inc
push
fdivrp
adc
cmp
sub
ss
orl
popa
testl
mov
adc
les
outsb
push
mov
mov
hlt
dec
xor
dec
test
inc
lret
adcb
sub
lods
mov
sub
mov
add
push
mov
iret
jmp
xchg
mov
inc
fdivs
pop
and
jg
and
jno
mov
testl
addr16
ret
rcrl
aaa
mov
sbb
sahf
xchg
pop
pushf
add
sbb
pop
shlb
sub
js
arpl
adc
clc
add
pusha
ljmp
icebp
sbb
xor
xchg
ret
mov
pop
idivb
loop
lock
push
mov
add
inc
jmp
ds
sarb
cmp
xchg
rclb
jo
dec
inc
cmp
sub
push
add
fsubl
lret
or
cmp
push
movsb
push
pop
push
push
sub
test
push
lea
imul
insl
xor
push
test
test
mov
mov
and
cmpsb
and
pop
mov
je
add
cmp
jnp
dec
sub
push
jne
pop
add
movsl
sti
sub
push
adc
sub
add
or
ljmp
cmp
jo
push
pop
jbe
mov
pushf
cmp
pop
xchg
cltd
dec
sub
push
dec
jne
mov
mov
and
xorl
mov
or
addb
add
out
data16
sub
or
cmpsl
xchg
mov
and
xchg
cmp
shll
fcompl
and
sub
mov
pop
adc
sarb
sbb
and
inc
adc
and
sub
cmc
push
pusha
sarb
pop
cmp
cmp
or
mov
shrl
test
lods
inc
aad
movsb
ret
fisttpl
jmp
lock
and
ret
push
xchg
sub
jle
mov
push
xchg
inc
mov
lock
xchg
and
sbb
sub
pop
or
daa
ljmp
imul
xchg
aas
mov
and
jge
adc
xchg
pop
xchg
pushf
sub
pop
mov
xchg
and
push
je
ret
sub
cmpsl
mov
scas
pop
mov
lret
repz
and
pop
or
jnp
inc
lea
arpl
mov
add
add
mov
rcrb
fiadds
or
scas
test
fmul
cmp
or
imul
add
dec
pushf
mov
test
ret
das
dec
adc
insb
push
sub
nop
jp
mov
xor
sub
dec
jo
xchg
mov
test
icebp
hlt
ret
daa
xchg
test
out
out
inc
dec
jo
adc
jl
daa
lea
mov
or
pop
repnz
sbb
sahf
add
loopne
fiadds
dec
jg
scas
mov
cmpsl
and
fs
push
das
nop
outsb
outsl
jp
and
xchg
add
je
lock
mov
lret
je
inc
mov
mov
xchg
sbb
sbb
adc
jmp
stc
popa
jnp
push
push
sti
sahf
clc
jge
xor
adc
lea
daa
cwtl
cmpsb
lds
mov
cmp
je
lcall
mov
stc
mov
or
outsl
sub
jmp
lahf
sub
mov
pusha
sub
sarl
push
sbb
pop
add
fsubrl
orl
add
adcl
dec
ret
sbb
addr16
dec
adc
push
pop
adc
add
test
cmp
push
add
inc
sub
add
ret
adc
int
dec
addl
xchg
repz
sbb
mov
inc
sub
mov
rorb
and
roll
and
lods
mov
loopne
rorb
cmp
or
and
addb
sub
pop
jmp
or
adc
jge
push
adc
jecxz
fwait
lods
ja
addb
leave
inc
xor
cmpsb
mov
inc
jle
sub
ret
imul
shl
sbb
or
push
or
mov
inc
jmp
jo
xchg
push
mov
or
pop
add
sbbb
mov
sub
clc
xorb
in
arpl
mov
dec
sbb
pop
cs
and
push
add
or
sahf
lock
xlat
out
loopne
shll
jmp
inc
xor
or
leave
out
rcrl
mov
xor
decl
push
insl
outsl
punpckhbw
dec
popf
xor
mov
and
push
jo
inc
cmp
xorl
xchg
add
imul
es
dec
adc
cmp
mov
mov
xor
adc
add
adc
nop
das
push
lods
xor
enter
xchg
or
pop
adc
adc
mov
lods
aaa
inc
mov
rcl
and
aam
xchg
push
ds
pop
or
or
mov
enter
mov
adc
cmp
adc
cmp
add
adc
and
inc
and
pop
dec
xchg
mov
adc
out
xlat
pop
repz
add
adc
rolb
add
daa
jmp
and
sub
sub
xrelease
gs
or
test
pop
and
adc
mov
pop
rcll
and
mov
fwait
mov
adc
mov
push
sub
addr16
or
icebp
pushf
arpl
das
mov
add
xchg
pop
imul
or
push
ficoms
dec
loopne
lret
and
adc
push
push
pushf
xor
gs
xchg
jne
sub
jge
xchg
testb
jno
add
add
out
jle
es
push
sub
testb
cli
dec
out
mov
and
inc
xor
vrcpps
testb
sub
jns
and
fadds
inc
cmp
pop
inc
stos
jne
dec
cmp
bound
mov
sbb
sbb
cmpsl
das
pop
mov
insb
xchg
es
mov
enter
push
push
or
sbb
and
divb
daa
or
addr16
and
jmp
sub
dec
pop
or
mov
jge
mov
movsl
adc
mov
jne
adc
fdivr
fdivrs
mov
ss
cmp
pop
rorb
push
mov
or
loope
adc
inc
roll
add
sbbb
push
xor
mov
adc
add
scas
or
xor
lds
inc
push
add
and
fildll
mov
push
xchg
xor
bound
orl
mov
push
setle
and
or
mov
add
dec
mov
xchg
xor
pop
xchg
mov
sub
xchg
pop
fistpl
das
xchg
or
pop
fdivr
insb
add
cmpb
sbb
mov
stc
add
int3
cmp
cltd
loope
es
xor
popa
or
les
out
add
cmp
push
lea
add
js
push
or
dec
mov
or
adc
cmp
xor
arpl
pop
sbb
xchg
mov
push
lahf
pop
add
int3
add
jmp
jge
stos
push
add
push
or
lret
or
pop
push
repz
xor
xchg
addb
push
pusha
in
sbb
xor
mov
orb
dec
loop
imul
mov
and
mov
mov
xor
nop
jecxz
add
or
cmc
xor
loopne
dec
sub
mov
cli
rclb
adc
xchg
push
fmuls
adc
xchg
clc
or
xchg
stc
arpl
xchg
mov
dec
or
icebp
cmp
mov
push
stos
outsb
adc
mov
add
sub
cmpsb
dec
movsb
mov
xor
cmc
cmpl
add
inc
or
adcb
jge
ret
sub
add
pop
xlat
in
pushf
adc
xor
or
insb
jne
push
or
nop
andl
jbe
mov
stos
loopne
lods
pop
sbb
adcb
sahf
stos
push
pop
adc
lahf
mov
clc
push
inc
push
mov
test
xlat
fsubs
loop
out
push
iret
xchg
pop
cmpsl
sbb
sbb
push
cmpb
imul
jo
mov
push
lret
test
jl
in
xor
or
mov
jo
xchg
outsl
aad
or
mov
mov
test
jmp
push
add
add
xor
sarb
mov
pop
jo
adc
add
xor
add
es
and
xchg
insb
sbb
andl
jg
pop
xor
inc
imul
std
and
cs
pop
mov
and
fs
add
ret
push
cwtl
das
add
inc
data16
test
data16
sub
sbb
sti
pop
sbb
dec
movups
dec
js
pop
out
xchg
adcb
ret
bound
test
mov
mov
sbb
push
mov
adc
add
mov
ljmp
jle
nop
or
xor
sub
add
adc
adc
push
pushf
dec
dec
push
cs
pop
sbb
loop
cmp
aaa
rorb
sbb
shrb
cwtl
adc
call
jl
dec
sub
scas
ffreep
jo
pop
jno
fnstcw
mov
inc
cli
inc
subl
push
adc
sti
lods
dec
adc
dec
mov
mov
in
jne
out
inc
dec
repnz
dec
rcrb
jae
cld
xor
movups
ret
sbb
fadds
mov
xchg
sbbb
and
inc
pop
or
push
and
cltd
sub
sar
xor
mov
dec
and
lock
or
inc
pop
addb
fcomps
fldt
fiaddl
mov
mov
out
roll
mov
add
jp
fsubrl
inc
pop
clc
iret
cmp
adc
add
shl
xor
mov
mov
add
lcall
xchg
stos
daa
nop
pop
mov
or
loope
adc
xchg
pop
dec
loope
inc
mov
hlt
andl
add
adc
inc
xchg
stos
dec
mov
lcall
pop
rorb
sahf
out
or
dec
out
nop
ret
mov
mov
adc
fs
mov
cmp
arpl
xor
push
in
xorl
repnz
test
test
and
inc
test
mov
jb
push
mov
leave
dec
cs
in
repz
mov
fimuls
jb
adc
lret
lret
pop
call
fiaddl
adc
pop
jmp
loopne
sahf
mov
adc
mov
or
mov
pop
aad
arpl
cmpsl
mov
cwtl
into
fisttpl
leave
aad
jb
push
stc
insl
int
ficoms
push
sbb
mov
and
addr16
imul
push
mov
inc
sar
sub
fs
in
add
cwtl
sub
cmp
cli
call
shl
data16
add
or
sbb
or
push
inc
arpl
mov
cmp
in
or
adc
sbb
scas
je
mov
adc
cmovbe
sub
pop
clc
aad
adc
out
inc
push
daa
fcoms
mov
and
xor
in
shr
push
inc
sbb
push
mov
inc
xchg
cld
dec
clc
cmp
je
and
pop
popa
adc
popa
adc
push
or
xorb
mov
xor
and
loopne
xchg
enter
xor
push
add
in
sub
pop
test
push
sbb
push
addr16
or
lock
push
and
push
xor
nop
fmull
and
push
and
pop
dec
das
cmp
ss
sub
pop
mov
push
pop
adc
roll
add
push
mov
push
loop
add
movsl
addr16
xchg
loopne
push
rol
movsl
scas
roll
cld
dec
lods
sbb
jg
stos
jne
xorl
lods
insl
mov
aam
xor
je
cwtl
inc
in
cmc
clc
jl
mov
add
cmp
adc
pop
mov
ret
fisubrs
movb
sub
pop
fmul
in
cmpsb
add
loopne
outsb
arpl
fsubl
dec
and
and
adc
aam
dec
cli
rolb
or
jle
loop
cmpsb
in
and
sbb
inc
push
fs
add
push
pusha
or
and
js
jp
push
js
cmp
pop
xchg
push
inc
ljmp
pop
inc
int
psrad
pop
xlat
xor
add
in
mov
test
shlb
push
add
pop
setne
fs
or
out
adc
dec
sub
jmp
ret
mov
and
pushf
ret
dec
loop
lret
push
jne
bound
ja
xor
cmp
inc
mov
push
push
push
addr16
ret
mov
je
decl
sub
loop
xor
add
call
and
pop
push
or
mov
push
pop
shrb
or
sti
gs
clc
fstps
adc
pop
movsl
inc
sbb
std
aaa
jne
std
cmp
sub
fs
sbb
push
mov
push
jg
or
mov
push
inc
lods
movsl
mov
and
mov
adc
and
inc
adc
cmp
push
arpl
jmp
shlb
and
or
hlt
add
xchg
cmp
xchg
xor
mov
push
pop
test
fsubs
jl
sbb
nop
xor
scas
mov
cmp
hlt
and
enter
pop
sub
fadds
cmp
pop
mov
adcb
adc
test
inc
ret
cmc
adc
sarl
push
push
test
testl
cmp
mov
xor
xor
add
mov
outsl
fdivrs
call
sahf
dec
jecxz
mov
sbb
scas
cmp
int3
and
loop
push
push
xor
push
cmpb
mov
fdivrs
js
cmpsl
repnz
jp
lods
cmpsl
cld
mov
push
push
mull
rorb
adc
adc
jae
mov
je
pop
xchg
out
pop
sbb
inc
and
in
cmp
and
sub
push
insl
pop
test
mov
popf
and
xor
mov
rol
or
in
add
xchg
jge
jmp
clc
inc
and
xchg
and
jmp
adc
push
push
jle
dec
stos
inc
test
inc
insl
jae
arpl
insl
dec
and
stos
daa
enter
xchg
cmc
sub
xchg
add
js
dec
inc
mov
imul
pop
ror
inc
mov
popa
cmpl
lea
je
andb
lods
mov
sbb
push
pop
jl
sbb
jmp
popa
xorl
incl
js
add
jbe
pusha
ljmp
add
in
cmp
xor
xchg
enter
and
scas
adc
inc
loop
mov
xor
push
xor
daa
cmp
cs
or
mov
sbb
adc
mov
mov
movsb
aaa
loop
fisttpll
pop
lret
mov
sbb
xchg
mov
jo
inc
fisttpll
inc
cmp
ret
push
in
cmp
imul
sbb
mov
cmp
lods
addb
push
ret
adc
sub
push
sbb
roll
pusha
jl
and
rclb
pop
rol
ds
or
adc
mov
andl
mov
es
adc
mov
rcrb
jno
fists
pop
das
add
mov
jnp
push
ds
add
add
pop
nop
xor
pop
dec
mov
add
mov
test
jg
iret
push
xlat
stos
jne
fsts
add
or
mov
inc
scas
and
or
sbb
je
test
xor
add
clc
add
push
lcall
pop
or
rorb
data16
mov
inc
push
inc
mov
jne
repnz
addb
inc
or
jmp
fwait
mov
call
movsb
or
push
fiaddl
bound
es
jp
push
nop
xchg
scas
imul
cmp
lcall
out
sbb
ds
cmp
push
sub
mulb
push
sub
xor
nop
or
sbb
xchg
adc
pop
lcall
mov
ret
adc
mov
rcrl
add
iret
and
jle
cmpl
lods
pusha
xor
sarb
or
pusha
lds
lods
jne
cmp
jmp
adc
add
mov
jo
loop
push
jo
fnsave
loope
sub
movzbl
jne
adc
stos
arpl
pop
mov
dec
pop
jmp
std
dec
inc
and
push
cmp
cli
imul
jae
xchg
mov
pusha
sub
or
and
pop
sub
fcmovnbe
adc
fs
or
or
dec
push
sbb
mov
or
loopne
inc
mov
scas
sbb
lds
xorb
mov
mov
xor
push
push
outsb
adc
mov
xchg
movsb
add
mov
cltd
dec
aam
mov
imul
sub
testl
lea
and
xchg
sbb
mov
sbb
fs
sub
push
and
jo
sbb
push
xchg
dec
loopne
and
mov
scas
bswap
cli
sub
mov
sbb
add
rorb
push
add
icebp
sub
dec
sub
xor
dec
adc
and
mov
mov
sub
fstl
inc
sub
popa
mov
add
ret
cmc
test
jo
call
xor
push
mov
lods
sti
mov
sub
mov
mov
inc
movsl
lock
lea
xor
adc
sub
sub
pop
or
test
add
mov
movsb
in
mov
pop
insb
aas
mov
mov
mov
pop
sahf
shlb
push
or
jno
add
and
mov
xor
ror
arpl
sub
mov
push
mov
insl
jb
loope
push
push
fstl
push
adc
mov
mov
push
mov
rcr
ljmp
pop
pop
les
insl
pop
mov
inc
mov
inc
sarl
int
fmull
dec
dec
or
jmp
fiaddl
mov
call
or
jmp
xor
mov
sub
mov
mov
jl
sbb
inc
ja
call
add
jmp
in
arpl
add
sub
sbb
cmpsb
std
xchg
jo
shl
adc
push
nop
stc
xor
sbb
cmc
and
pop
repnz
dec
incl
ljmp
push
mov
dec
insl
fadds
fldt
add
adc
jne
jo
add
adc
mov
cmp
orb
clc
or
incb
adc
or
xor
bnd
pusha
data16
mov
scas
adc
dec
lock
je
mov
sub
jb
mov
sub
mov
loop
cwtl
xor
sub
je
or
push
inc
loope
cwtl
dec
mov
and
scas
and
inc
lret
ror
clc
mov
mov
outsl
pop
and
pop
xor
fwait
mov
sub
fcomip
jo
and
xor
mov
nop
or
les
inc
les
jno
in
cmp
or
js
push
aam
push
mov
rclb
ret
adc
pushf
testl
es
shll
pop
add
adc
or
cmp
daa
xor
clc
pop
dec
orl
push
les
pop
and
inc
xor
adc
cmp
or
push
shlb
pop
dec
push
out
jl
push
aam
add
inc
dec
aad
mov
inc
cmp
adc
xor
cmp
stos
pop
push
add
shr
addb
jno
sub
sbb
rol
push
pop
xor
outsl
movl
insl
fildl
aas
add
sbb
mov
outsb
add
rcrl
rol
js
andl
jmp
adc
sarl
push
popa
push
mov
add
pop
imul
pop
xor
mov
mov
rolb
ret
mov
test
or
cmp
insl
loope
adc
test
or
icebp
imul
dec
xchg
testl
inc
mov
mov
xor
push
mov
movsb
test
mov
in
in
sub
fidivrl
mov
and
jmp
mov
pop
inc
subb
cmpb
dec
or
xchg
pusha
jmp
hlt
les
clc
out
pop
jecxz
call
test
jg
sub
pop
and
or
sub
or
mov
or
jle
pop
das
or
test
mov
inc
fiaddl
jge
mov
add
mov
sbb
data16
mov
xchg
or
push
fldl
fstps
and
and
cmp
in
sub
mov
cwtl
clc
pop
add
es
add
pop
ret
pop
jl
or
aaa
repnz
xlat
sub
negb
mov
or
inc
fsubrl
push
push
add
es
inc
popa
or
and
push
pop
adcb
pop
iret
fcmovne
xorl
movsb
mov
add
jae
jge
or
ljmp
fcomps
xor
popa
add
pop
pop
jne
sub
movsl
mov
fs
rolb
and
lock
adc
mov
mov
mov
inc
movsb
xor
ret
scas
rclb
ret
lret
and
and
jl
or
call
xchg
push
mov
inc
ret
mov
mov
nop
jne
fs
xchg
mov
notl
cld
cmp
pop
or
je
push
or
lret
push
push
fnop
in
xchg
push
out
sbb
adc
out
mov
jge
dec
mov
mov
xchg
jge
and
ds
cmpl
je
js
inc
mov
fwait
jbe
je
ds
push
lods
dec
movsl
add
std
pop
lock
push
push
enter
insl
xor
cwtl
sub
cmp
mov
stc
in
adc
sub
pushf
mov
xchg
adc
dec
movsb
sub
push
push
adc
add
and
adc
pop
or
pop
push
sahf
add
cmpl
in
je
push
xchg
xchg
jbe
xorb
inc
dec
aam
xor
push
push
cs
add
stos
mov
push
push
jle
push
out
xor
int3
xchg
push
dec
adc
cmp
cmp
mov
int3
adc
sbb
mov
dec
sbbb
cmpsb
add
arpl
xchg
jnp
dec
jge
sbb
hlt
lea
xchg
mov
mov
out
out
movl
in
pxor
fstp
add
out
pop
pushf
push
lods
xor
stc
fiaddl
cmpsl
ja
xlat
pop
dec
fisubrl
stc
pop
pop
mov
push
mov
int3
das
loop
repnz
lret
mov
push
push
mov
ds
enter
enter
push
push
or
or
cmc
or
gs
insl
sub
pop
orl
pop
aaa
inc
test
sbbb
cmp
rolb
add
pop
daa
push
cmp
insl
and
sbb
mov
cwtl
or
and
add
mov
icebp
dec
adc
jne
push
stos
scas
or
push
pop
pop
mov
add
lsl
sbb
pop
inc
mov
aam
or
adc
std
mov
sbb
add
inc
or
mov
adc
pop
and
or
pushf
xchg
ljmp
mov
push
or
je
cmp
into
mov
dec
or
add
xchg
jbe
enter
js
mov
jne
push
lock
stc
or
fnstsw
sahf
or
je
lock
dec
cmc
push
aam
or
fdivrs
push
out
or
mov
push
push
outsb
sbb
mov
mov
cltd
hlt
dec
push
xor
jne
addb
fiaddl
or
std
lcall
cmp
sub
mov
add
or
sbb
pop
imul
je
cmc
or
shlb
int3
mov
cmp
ficoml
es
fwait
cmp
inc
sub
sti
outsl
lahf
jne
ret
inc
rolb
pusha
add
shlb
dec
mov
test
pop
xor
pop
xchg
rorl
jae
outsl
fistpl
lock
daa
xor
push
mov
jmp
lods
rclb
sbb
add
push
inc
decl
jno
mov
adc
movsb
hlt
jle
mov
add
jb
adc
mov
cwtl
dec
dec
je
and
jge
add
jnp
in
movsl
int3
xchg
es
jmp
daa
push
dec
jns
pop
add
or
adc
into
sub
xchg
and
add
mov
mov
xchg
pop
or
jmp
pop
mov
push
inc
pop
sub
lea
lret
pop
or
or
sbbl
dec
cld
outsl
inc
orb
inc
mov
andb
sbb
cmp
inc
mov
add
shl
cmp
scas
xchg
fadd
subb
sub
add
ljmp
adc
sahf
xor
pop
inc
lock
push
shrb
cwtl
loope
sbb
sbb
jo
xor
cli
jmp
push
cmp
and
xor
clc
scas
lea
in
ret
fmuls
dec
ret
das
adc
push
fsubrl
ret
into
cmp
and
in
sbb
scas
pusha
int3
fwait
mov
jbe
inc
mov
mov
adc
add
sub
mov
cwtl
and
jno
ss
aam
js
dec
adc
pop
shrl
adc
inc
or
cmpsl
sub
adc
push
mov
xor
mov
jl
nop
insb
orb
scas
loopne
mov
or
push
fisttpll
cmp
mull
add
dec
inc
lea
sub
cmp
lret
adc
sub
or
cmp
pop
push
mov
jo
push
inc
adc
add
popf
fincstp
or
iret
jo
push
ret
push
jns
dec
sahf
fxch
mov
push
mov
pop
nop
es
orb
fs
notl
pop
mov
adc
pop
sub
mov
arpl
pop
push
push
xchg
loope
or
andl
fisubl
push
in
imul
sbbb
inc
call
in
cmp
or
lea
push
and
adc
inc
adc
mov
xchg
mov
cmp
cmp
rorb
adc
inc
pop
clc
loop
aam
cmp
test
push
repnz
xchg
xor
xor
add
in
cltd
jge
cmp
mov
loopne
add
inc
aam
dec
push
test
je
push
xor
inc
rclb
sbb
sub
daa
sbb
jne
or
pop
jmp
cld
inc
xchg
inc
cs
or
or
adc
lods
jne
inc
add
pop
scas
pop
popa
pop
mov
adcb
je
les
pusha
mov
sub
andl
dec
adc
inc
xchg
fs
loope
mov
movsl
pop
or
sub
add
xor
or
and
or
sbb
xchg
sbb
inc
testb
add
mov
addb
rorb
adc
add
rcrb
out
add
or
lods
sub
js
incl
jecxz
lods
ret
cmp
pop
push
dec
adc
add
sbb
mov
pop
pop
pop
add
xor
or
adc
pop
jmp
mov
cmp
xchg
pop
fcom
add
jmp
push
adc
adc
cmpsb
inc
inc
test
pushf
push
pop
repnz
xacquire
xchg
imul
test
add
test
sbb
or
out
sbb
rclb
les
inc
addb
enter
nop
adc
or
aam
call
xchg
sub
test
add
adc
or
xor
aad
shrl
icebp
xor
jne
mov
or
xor
sbb
add
pop
add
or
repz
pop
xor
mov
inc
sbb
loopne
es
pushf
negl
lods
movsb
daa
sub
adc
adc
or
outsl
push
xchg
shlb
movsl
rolb
adc
push
or
sub
add
js
call
ja
or
push
mov
les
and
xor
dec
adcl
inc
and
xor
mov
pop
je
dec
out
or
cmp
jl
sbb
mov
push
cs
dec
ffreep
adc
mov
bound
sbb
lock
pop
sahf
sbb
test
add
shll
pop
push
cmc
mov
inc
mov
pop
lods
push
adc
outsb
mov
rcr
lidtl
fisubrl
pop
xor
push
lahf
mov
or
add
xorb
adc
data16
xchg
push
adc
pop
mov
push
ret
and
dec
and
scas
dec
cmpsb
push
dec
or
into
sbb
xchg
sbb
add
xchg
mov
xchg
call
sbb
loope
jmp
cmp
sti
aas
call
fdivr
jle
mov
jg
rol
fcmovnbe
aas
movsb
mov
xor
fmulp
lock
xor
pop
mov
inc
xor
push
add
stos
int
inc
out
pop
cmc
test
imul
add
dec
inc
mov
enter
inc
push
jmp
push
or
jo
sbb
sarb
insl
mov
mov
sub
jg
fwait
cmpsb
add
mov
inc
lods
fidivrs
lock
xor
inc
scas
jg
or
imulb
pop
fadd
inc
lret
inc
ret
aas
js
aas
fisttps
mov
cmp
mov
inc
fadds
jb
lret
mov
fisubrs
cmp
in
cmp
fbstp
sub
adc
sbb
xchg
or
adc
subl
mov
nop
and
mov
pop
leave
inc
cs
int3
in
ljmp
sbbb
push
pop
insl
lds
fs
cmp
xorl
nop
outsl
xor
jg
in
mov
and
jg
pop
and
lods
mov
and
pop
mov
fdivs
lahf
dec
ret
test
or
loope
in
mov
lea
sarl
outsl
mov
fidivrl
mov
cmp
sub
mov
scas
dec
into
lahf
sbb
adc
jle
inc
inc
test
into
aas
nop
cltd
xor
jb
mov
fildl
push
dec
adc
mov
pushf
inc
inc
iret
aas
fadds
loopne
push
shlb
jno
nop
call
dec
add
mov
adc
add
jmp
inc
pop
call
jno
cmpsb
lahf
js
insb
call
jo
imul
pop
js
jmp
push
call
cmp
mov
sar
push
ret
mov
ret
sub
jg
inc
repnz
ror
push
inc
enter
fcompl
mov
int3
paddq
push
fildll
sub
sub
push
jbe
xor
xor
nop
out
test
out
mov
daa
daa
cwtl
mov
out
pop
test
cwtl
pop
nop
pavgb
rolb
dec
push
in
js
mov
adc
test
xchg
pop
mov
mov
cmp
dec
mov
aam
imul
jg
inc
cmp
das
push
fwait
in
adc
pop
xor
rcrb
repnz
sbb
pop
sbb
cmp
pop
fcomp
out
nop
add
jb
aaa
pop
mov
sbb
pop
sbb
sbbl
enter
test
lods
rolb
pop
sbb
push
sbb
inc
push
mulb
or
sbb
in
inc
push
in
dec
pusha
outsl
sbb
sbbl
inc
mov
mov
sbb
int3
nop
push
ss
add
into
mov
mov
lods
push
push
sbb
daa
sbb
aad
enter
lahf
aas
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
stc
xchg
sbb
in
in
sbb
push
or
sbb
cmp
dec
sti
inc
mov
pop
or
das
adc
mov
mov
testb
mov
push
repnz
fcomps
lock
cs
call
sub
cs
lahf
call
pop
fsubrs
fadds
adc
and
call
dec
jo
mov
rcr
cmp
inc
loopne
fimull
lds
mov
inc
inc
cwtl
addps
add
ss
ss
icebp
and
sub
inc
pop
inc
adcl
mov
or
fwait
dec
jl
dec
fistpl
cltd
dec
dec
cmp
push
push
fists
inc
push
mov
add
push
dec
sub
fcompl
pop
or
icebp
scas
icebp
aam
fcomp
or
adc
jne
lahf
mov
and
rol
aas
cs
pop
xor
call
incl
xchg
xor
subb
enter
sbb
fnstsw
aad
movsb
nop
mov
dec
mov
mov
pop
push
test
outsl
shrb
pop
mov
dec
cmp
cmp
jmp
pop
and
push
adc
xor
cwtl
sub
or
mov
lahf
int3
mov
mov
mov
lahf
jg
insl
imul
dec
mov
and
push
mov
pop
flds
sub
lods
mov
ret
xchg
addb
jnp
adc
pushf
loopne
or
loopne
pop
test
fwait
aam
dec
dec
add
add
icebp
sbb
add
xor
fwait
mov
push
dec
ds
add
sub
inc
test
xor
sbb
sub
lods
xchg
popa
dec
jno
cmpsl
pop
andb
add
mov
sbb
sub
fbstp
pop
loope
mov
test
pop
rolb
dec
sub
popa
loop
pop
nop
push
mov
imul
cld
sub
jns
test
pop
test
inc
insb
and
aas
or
stc
or
inc
mov
es
add
dec
aas
cmp
sub
cwtl
add
out
mov
shlb
nop
pop
enter
in
mov
or
lahf
fsubrs
inc
pop
and
popf
pop
arpl
lret
mov
dec
jg
das
or
ret
enter
or
cmc
pop
pop
adc
inc
lock
cmp
and
mov
aas
cwtl
inc
daa
mov
clc
in
xchg
int
mov
in
incb
pop
out
rcrl
mov
adc
aas
call
mov
dec
add
adc
dec
jl
jno
dec
cs
pop
test
mov
lcall
dec
push
xchg
call
inc
sub
call
lahf
ret
adc
xorb
mov
or
enter
mov
pop
sbb
aas
inc
jmp
inc
js
inc
dec
mov
call
add
sar
adc
lahf
sbb
adc
imul
sti
mov
shlb
sti
loope
adc
shrb
pop
cld
cmp
xchg
imul
sbb
sub
mov
fdivr
pop
sbb
scas
push
sub
dec
xor
nop
adc
ret
inc
ficoml
dec
sbbb
jl
dec
mov
xchg
jge
add
sbb
add
add
mov
xor
mov
push
in
icebp
sub
rorl
inc
mov
sbb
inc
push
in
add
inc
lock
push
loopne
add
mov
or
xchg
aaa
rcrb
sbb
add
add
sbb
jp
pop
shl
jmp
push
cs
in
pop
fsubr
fstps
out
sbb
adc
push
mov
sub
inc
sbbb
in
add
inc
mov
add
mov
sbbb
in
jg
adc
inc
or
aas
xor
test
pop
pop
out
jg
aas
and
leave
inc
test
adc
pop
clc
and
pop
push
cmpb
sub
xor
cmp
push
cmp
mov
adc
or
test
decl
test
pop
mov
cmp
adc
mov
adc
add
add
jbe
ret
shrb
cltd
xor
mov
sub
adc
xchg
dec
or
sub
push
aam
mov
adc
push
inc
mov
cwtl
mov
xor
sub
es
aas
out
cmp
pop
push
mov
add
xor
insl
pop
adc
cwtl
inc
cmp
xor
or
pop
cmp
cltd
je
hlt
popa
jno
and
fcomip
mov
adc
pop
xchg
pusha
jmp
pop
in
andnps
ret
adc
sarb
mov
fmul
inc
les
dec
aas
pop
or
cltd
test
jg
mov
cwtl
aas
mov
leave
les
scas
stos
mov
jle
mov
outsl
inc
repz
fbstp
cwtl
repz
scas
cwtl
or
xchg
dec
dec
arpl
andl
xchg
push
pop
mov
or
out
hlt
call
sbb
icebp
daa
ss
dec
xchg
push
xor
xor
or
dec
outsl
mov
jecxz
mov
ret
add
lahf
sub
fdivs
push
aas
mov
dec
xchg
shlb
jmp
idivb
jo
mov
outsb
inc
aam
call
sub
movsl
das
enter
mov
clc
lahf
in
inc
ret
add
clc
jg
stc
aas
xchg
pop
and
inc
push
nop
pop
sbb
adc
nop
ret
aas
call
enter
inc
cli
jg
xor
adc
cwtl
mov
fildll
add
enter
dec
xor
push
inc
push
imul
sti
add
mov
inc
daa
adc
je
jo
jg
shrb
aas
scas
jb
push
or
adc
jmp
aas
jge
push
ds
mov
mov
outsb
aas
push
aas
dec
xor
push
lahf
paddusb
js
enter
in
aas
mov
test
notb
fdivrs
rclb
mov
add
xor
sbb
enter
xchg
xchg
dec
je
outsb
std
aas
sarb
cmp
dec
and
xchg
sub
sub
cmp
inc
inc
mov
inc
pusha
inc
sbb
adc
outsl
add
adc
push
insb
xor
mov
out
mov
jnp
lahf
adc
pop
adc
loope
cmp
mov
mov
fidivrs
push
jg
pop
push
and
fisttpll
push
pop
imul
adc
in
aam
gs
ja
aas
and
iret
lock
pop
adc
add
data16
or
push
mov
jg
pop
lock
stos
mov
mov
js
push
push
lcall
ret
pop
pop
and
xchg
push
push
rorl
in
test
push
mov
adc
lahf
aas
push
fs
popa
mov
mov
inc
in
fbstp
icebp
sbb
sbb
call
js
sbbl
enter
mov
js
push
fildl
mov
sbb
das
mov
and
dec
ljmp
out
mov
inc
fsubrl
mov
sar
lods
in
push
xchg
fcomp
test
mov
pusha
adc
push
shrl
leave
adc
inc
and
pushw
roll
enter
push
in
daa
daa
daa
call
mov
pop
pop
int3
jl
mov
cs
xor
pop
adc
dec
andb
and
in
dec
inc
lret
pop
sub
or
inc
adc
and
outsl
sbb
in
xor
jmp
aas
mov
dec
xor
call
dec
jg
in
jl
mov
mov
movsb
popf
fmull
pop
pop
stc
and
pop
shlb
ret
popf
sbb
test
and
adc
jge
imul
es
sbb
inc
dec
fstps
inc
xor
adc
ret
or
subl
or
imul
cmpsb
arpl
bound
aas
adc
dec
add
test
and
push
in
pop
pusha
test
nop
pop
adc
das
cs
call
aas
int3
pop
or
sti
and
incl
cmp
jo
adc
imul
mov
jnp
jge
jl
movsb
cwtl
stc
fiadds
adc
es
imul
lods
adc
sub
inc
outsl
scas
mov
pusha
adc
push
sahf
data16
pop
push
and
faddl
aaa
xor
add
or
mov
aad
mov
sub
adc
nop
imul
pop
push
xchg
or
fbld
pushf
dec
xor
adc
or
rcrb
mov
adc
sbb
push
mov
xchg
cmpsl
adc
fmull
lock
adcb
and
xchg
xor
cmp
clc
ds
xchg
sbbb
imul
das
mov
sarb
pop
clc
push
subb
adc
bswap
cwtl
and
and
cs
pop
les
add
add
ljmp
pushfw
or
xchg
or
mov
push
aas
pusha
or
xor
nop
adc
int3
cwtl
pusha
movsl
ds
cwtl
pop
fcmovnbe
or
fcomip
push
movsb
popa
xor
lock
pusha
cmp
push
adc
mov
push
xchg
pop
mov
jp
dec
pop
pop
adc
bound
jg
mov
dec
inc
mov
adc
bound
bound
sbbb
in
loop
lahf
fcompl
mov
lods
sbb
sbb
cmp
adc
dec
push
shlb
and
insl
push
adc
or
movsb
and
xchg
in
adc
rcrl
sub
jg
and
out
pop
cmp
push
cmp
aas
push
push
xor
insb
and
lea
add
xor
xor
pusha
push
nop
lock
and
inc
or
push
movsl
andl
testb
outsl
into
push
daa
push
aam
xchg
call
or
sub
mov
sub
daa
lock
sbb
adcb
nop
sbb
push
xchg
push
pusha
movsb
aas
sahf
insb
pop
dec
enter
daa
or
cmc
pop
int3
nop
pop
daa
or
daa
pop
rol
imul
lds
add
sub
sbb
mov
add
sbb
out
adc
sbb
fmull
mov
addl
sbb
mov
jg
daa
xchg
xor
or
push
mov
sub
iret
jg
in
pop
sub
cmpsl
dec
ss
and
xchg
pop
insl
jo
cwtl
shrb
daa
cmpsl
es
adc
adc
dec
movsl
decl
pop
mov
sub
arpl
sub
fisubl
call
rorb
daa
lods
ret
mov
adc
test
pop
mov
daa
repnz
mov
pop
pop
lock
or
cmp
pop
rol
lock
and
lds
daa
and
push
mov
and
jbe
movsl
idivl
and
lock
and
loopne
jp
and
and
sbb
enter
mov
mov
das
push
add
jg
xchg
dec
lcall
popf
lret
inc
and
sbb
daa
fisttps
dec
push
cmc
nop
and
daa
loopne
jbe
push
xor
or
and
pop
leave
aad
pop
daa
subb
ja
sbb
addr16
and
sub
mov
les
es
fdiv
aam
shrl
es
rcll
mov
inc
or
push
mov
hlt
daa
mov
xor
daa
sub
daa
dec
aam
add
shrb
sub
mov
add
iret
test
inc
cwtl
push
sbb
pop
call
ja
pop
lock
dec
rcr
daa
sbb
scas
pcmpeqd
xlat
rolb
pop
fcomps
jb
ret
lock
and
rcrb
imul
or
out
adc
dec
mov
fcoms
push
test
pop
sbb
sub
in
loope
sub
js
sbb
jmp
add
inc
sub
pop
pop
lods
push
xchg
lock
pop
adc
jne
sub
pop
pop
push
shrb
mov
lds
dec
insl
ljmp
nop
dec
cmp
dec
shll
insb
enter
add
xchg
fnstenv
enter
orl
push
daa
nop
mov
das
pop
pop
clc
sub
and
xorb
and
cmp
fbstp
daa
mov
js
mov
cmpsl
negl
movsb
test
subb
or
int
je
loopne
sbb
lock
push
shr
sub
add
addr16
dec
mov
push
jbe
jg
xor
in
mov
cmp
pop
scas
out
fistl
cmp
lods
insb
pushf
adc
adc
inc
sbb
dec
rolb
jge
fs
notb
data16
pop
push
dec
es
rol
mov
inc
mov
test
outsb
xchg
pushf
aaa
push
lret
inc
xchg
arpl
push
shlb
mov
push
sub
call
push
xor
push
iret
js
cs
dec
pop
pop
pop
push
aaa
test
scas
testb
lahf
pop
sub
xorb
push
mov
sub
insb
fcoms
push
adc
out
aas
jl
push
add
loop
dec
repz
add
mov
mov
fmulp
push
out
jl
sahf
out
push
push
adc
sub
mov
pushf
push
mov
xchg
mov
bound
push
push
dec
xor
jns
sbb
or
push
jns
iret
shr
rol
shl
out
cmp
push
and
dec
push
cmp
sbb
fisubrl
repz
xchg
orb
out
out
aam
out
clc
add
iret
repz
push
and
ds
push
iret
repz
mov
out
sahf
cmpsl
push
fmulp
mov
xchg
jns
out
mov
fsubr
div
cmp
repz
sub
inc
iret
repz
pop
push
jns
divl
pop
dec
scas
cmp
out
mov
lahf
in
cli
push
or
jns
dec
and
outsb
pop
push
push
dec
repz
out
sub
or
pop
iret
repz
out
in
enter
iret
repz
xchg
repz
repz
xor
add
jns
out
push
out
mov
sahf
cwtl
subb
ret
iret
repz
mov
push
stc
cmp
repz
sbb
call
cmpsl
aam
mov
jns
test
pop
dec
xor
out
sbb
add
inc
cmp
repz
iret
repz
jl
bound
xor
adc
testb
cmp
jnp
push
mov
repz
js
push
dec
xor
sahf
out
lcall
loop
jns
out
mov
xchg
jl
cmp
out
xchg
movsb
mov
repz
loop
cld
or
cmp
mov
pop
jb
iret
repz
sahf
scas
enter
sahf
out
ds
sbb
cmp
jns
out
push
mov
out
jp
add
orb
repz
repz
adc
repz
adc
sbb
setp
repz
pop
push
movsb
add
mov
mov
stc
dec
dec
stos
xor
dec
xchg
or
jns
cmpsl
sbb
inc
push
bound
jp
xchg
sahf
mov
sahf
out
ror
ljmp
dec
and
dec
pop
cmp
jnp
push
mov
iret
repz
repz
xor
push
or
sahf
out
lcall
cmp
out
cwtl
mov
pop
sbb
jns
testl
out
sahf
mov
dec
xor
out
cmp
adc
pop
ljmp
mov
mov
push
pop
cmp
repz
inc
cmp
jns
iret
repz
or
dec
loop
out
sahf
out
mov
xchg
mov
insb
pop
push
inc
xor
lahf
out
and
push
clc
dec
call
aam
scas
sahf
mov
pop
xchg
dec
mov
mov
cmp
repz
clc
push
dec
iret
jnp
cmpsl
sbb
es
push
pop
js
iret
repz
pushf
stos
mov
repz
clc
or
and
jns
out
dec
adcb
jb
mov
sahf
push
sbb
ss
push
jns
out
bound
pushf
mov
jl
out
loopne
or
push
iret
repz
sub
dec
pusha
insb
jl
mov
add
dec
push
iret
sarl
add
push
lret
dec
sar
cmp
ficoms
inc
idivl
repz
inc
pop
push
xchg
cs
out
sahf
cmpsb
out
mov
mov
inc
push
rolb
dec
push
dec
xor
cmp
adc
jns
leave
aad
push
add
push
je
jns
dec
out
jae
lea
call
popa
mov
popa
movsb
cmpsl
stc
cmp
push
les
loopne
adc
xor
negl
push
jb
push
data16
repz
jle
or
push
add
in
inc
mov
fwait
jle,pn
dec
push
stos
or
push
div
mov
rcrl
inc
imul
lcall
pop
pop
pop
sahf
out
sahf
pusha
popa
bound
imul
jns
test
sahf
out
mov
leave
sahf
out
sahf
lret
aad
xlat
jns
out
fcomp
fcmovu
fsub
jns
out
loopne
sahf
out
sahf
loop
in
out
jns
out
call
out
sahf
out
out
out
lock
sahf
out
sahf
repnz
cmc
div
jns
out
clc
stc
cli
sti
cld
int
sahf
out
call
add
repz
add
repz
or
or
iret
repz
or
push
movups
cmp
repz
adc
repz
sbb
sbb
sahf
idivl
sbb
push
pop
mulb
and
out
and
and
es
sahf
out
inc
dec
pop
imul
ret
out
shl
hlt
add
cmp
sub
cmp
repz
xchg
cmpsb
ror
ds
repz
cli
pop
ds
jns
out
sub
out
sahf
jno
sbbl
jns
fucomi
sti
jle
aas
sahf
out
fiadds
sub
inc
push
gs
out
outsl
jge
cltd
mov
stos
mov
iret
lahf
out
sahf
fsub
ljmp
repz
pop
and
inc
repz
repz
push
repz
mov
fucomp
decb
sahf
out
lcall
jns
out
push
gs
fwait
out
sahf
out
mov
repz
add
add
in
fwait
jne
gs
xor
adc
fs
insb
sbb
outsl
adc
imul
gs
mov
addl
push
outsl
outsl
insb
push
pop
jo
push
outsb
xchg
jae
outsl
je
jb
arpl
jae
or
and
jb
sbb
insb
outsl
fmuls
outsb
les
divb
xor
outsb
inc
sub
jo
std
testl
add
push
imul
push
je
dec
xchg
in
fldt
cmp
outsl
jb
outsl
fs
test
data16
bound
mov
jno
sub
loopne
mov
inc
outsl
outsb
je
inc
sub
lock
cwtl
fstps
jl
dec
daa
or
lods
jne
inc
dec
popa
sbb
inc
jns
in
mov
inc
push
popa
jb
insl
and
add
and
andb
loopne
cmp
and
mov
cmp
dec
popa
jns
gs
xorb
imul
imul
sbb
outsb
arpl
jns
je
out
ficoms
sub
cmp
jb
inc
lock
sbbl
loope
ret
insb
xor
xchg
adc
mov
out
inc
and
fs
cmpsl
mov
dec
and
popa
mov
dec
inc
inc
mov
lods
mov
xor
jne
xchg
stos
or
jp,pt
addr16
gs
mov
adc
leave
pop
or
xchg
cmpsb
dec
int3
mov
sub
pop
divl
sub
insl
mov
adcb
cmp
sbb
inc
cmp
push
je
imul
mov
lock
xchg
nop
in
pop
pop
outsl
adc
inc
mov
or
aad
push
rdpmc
push
cmpsb
xor
insl
push
sbb
jae
mov
dec
in
insl
jo
push
or
ficoms
orb
xchg
adc
insb
shrb
je
mov
xor
dec
inc
loop
call
fstp
push
adc
pop
push
popa
imul
jmp
push
gs
fs
orl
subl
dec
arpl
adc
aaa
sub
jbe
call
in
sar
insb
ret
cmpsb
loopne
push
or
pop
subb
push
push
fdivrl
mov
push
jo
int
mov
repnz
and
pop
imul
add
dec
sub
ret
hlt
out
mov
int
sub
lock
addb
mov
imul
xor
into
inc
push
add
in
repnz
push
add
rcr
inc
adc
dec
rcrb
daa
and
xchg
fsubs
pusha
inc
sahf
daa
dec
js
lock
pop
cmpl
rcll
pop
push
add
xchg
cmp
inc
loopne
inc
cwtl
subb
add
mov
and
inc
pop
jb
add
push
in
cs
lret
pop
and
and
xor
pop
sbb
incl
jns
push
inc
xor
data16
inc
cld
pushl
cmp
cmp
cmp
ss
popa
data16
arpl
pusha
pop
dec
pushl
mov
lret
rol
cmpsl
mov
mov
into
add
fisubrl
dec
cmp
out
pop
sub
push
dec
es
mov
push
imul
shrb
push
insb
jge
ds
jo
push
ss
xor
xor
dec
mov
shlb
cs
sahf
push
rcr
fdivp
mov
es
push
dec
push
lock
cmpsb
loopne
out
sti
pop
and
push
mov
push
xor
push
ja
mov
pop
pop
push
adc
pusha
dec
cs
fidivs
frstor
pop
ds
insb
fimuls
inc
mov
jo
push
inc
insl
inc
cmpsb
lock
in
mov
and
cs
es
cs
out
popf
dec
xchg
push
push
push
inc
aaa
inc
inc
xor
xor
inc
mov
xor
xor
inc
xor
and
adc
xor
jg
rol
mov
lods
loope
inc
or
push
aaa
xor
arpl
aaa
mov
mov
ret
xor
data16
xor
or
incb
mov
clc
imul
aaa
bound
fs
gs
mov
fs
and
ss
sti
fstps
test
ret
out
sarb
inc
cmp
ss
inc
pop
pop
mov
stos
adc
ss
add
mov
into
les
sarb
add
test
out
sbb
inc
pusha
scas
inc
test
fstpl
cmp
add
cmpsl
inc
loopne
inc
out
mov
nop
daa
xlat
jmp
mov
add
testb
iret
js
test
pop
mov
inc
pusha
pop
popl
sbb
jae
or
inc
jmp
add
sub
xor
adc
out
jae
add
inc
or
clc
pop
xor
pop
lcall
adc
sub
pop
pop
and
dec
into
pusha
out
cmpsl
jne
inc
cmp
stos
inc
aas
popa
jnp
xchg
or
out
inc
push
cmpb
nop
insb
outsl
mov
mov
and
hlt
leave
adc
stos
pop
sbbb
mov
daa
out
stc
mov
ja
dec
roll
or
or
lcall
lahf
repnz
scas
orb
jmp
aas
jmp
pop
jmp
adc
or
pop
xchg
subb
aas
mov
test
gs
adc
aam
mull
push
add
sub
testb
mov
or
daa
cmp
xchg
cld
shll
add
or
xor
adc
enter
pop
psraw
stc
lret
roll
in
and
push
xchg
mov
pop
cld
add
not
int
repnz
inc
outsl
js
cmp
inc
scas
in
daa
stc
jmp
mov
stos
jmp
cmc
incl
pop
in
add
mov
pop
and
cmc
add
inc
popa
mov
out
lea
mov
aad
cld
inc
popa
outsb
jae
sbb
cmc
and
push
push
popf
mov
dec
jae
dec
popa
mov
insl
insb
jl
inc
mov
sub
add
and
cmp
add
inc
push
pusha
push
add
jo
jmp
push
nop
sarb
inc
arpl
jae
pushw
cs
out
mov
gs
push
outsl
jb
fs
push
inc
imul
xor
imul
in
lcall
cmp
das
ja
arpl
xor
outsl
insl
das
aas
ja
xor
mov
jae
inc
mov
inc
dec
pop
nop
leave
inc
cmp
pop
addl
inc
call
push
add
dec
and
imul
xor
and
outsb
outsl
shlb
and
outsb
and
inc
dec
push
and
cs
fisttpl
and
mov
pop
inc
roll
push
sbb
cli
psllq
stc
and
clc
dec
sbb
jp,pt
ficoms
inc
shl
ja
es
sar
push
push
push
imul
sbb
add
jl
jo
loopne
and
add
or
adc
neg
into
daa
mov
adc
add
insl
fcmovb
adcl
insl
pop
mov
les
sbb
jo
mov
aaa
push
sub
and
outsl
cmp
call
or
add
test
jb
sub
push
in
popa
test
pop
imul
out
inc
cs
and
fimuls
or
sahf
jae
arpl
shrl
or
inc
inc
or
mov
pushf
je
insb
outsl
push
nop
lahf
push
push
test
adc
mov
lcall
decl
add
mov
or
pop
ret
xchg
and
xchg
add
test
add
cmp
jns
in
into
add
mov
out
insb
js
and
adc
lret
mov
push
dec
mov
int
out
insl
out
in
and
jp
je
inc
es
call
xor
dec
mov
ficoms
and
and
sub
mov
sbb
and
and
mov
mov
cld
mov
dec
add
cmp
inc
testl
and
into
insl
jmp
xor
call
inc
mov
push
cmpsl
xchg
fimuls
clc
divl
movsb
push
daa
aas
enter
jbe
mov
pop
jbe
cmpsl
jnp
push
push
push
mov
sub
xchg
adc
je
in
loope
adc
sbb
xor
mov
jge
mov
fisubs
and
xchg
sbb
push
es
sbb
psrlw
movaps
daa
pop
dec
ret
inc
data16
adc
inc
fneni(8087
and
cmpl
push
or
in
incl
dec
ja
aad
insb
xchg
xchg
and
sbb
jno
insb
or
add
sbbb
mov
int3
int3
push
pop
xor
mov
sub
pop
movsb
and
daa
clc
mov
adc
cmpl
xchg
ret
and
imul
sbb
adc
pop
add
jae
and
dec
jns
out
pop
push
xor
lcall
sub
add
fwait
ret
outsb
adc
pop
or
daa
iret
and
push
dec
icebp
add
adc
jnp
mov
pop
scas
lock
orb
daa
rclb
and
pop
and
fbld
cmp
data16
outsb
imul
jb
add
add
insb
cmpl
jne
aaa
in
sub
imul
outsl
lahf
lcall
fs
add
and
arpl
insb
popa
insb
push
pop
push
out
pop
loop
lods
inc
push
aaa
xor
imul
clc
fildll
dec
mov
test
inc
imul
jecxz
out
mov
jae
dec
inc
push
dec
inc
dec
jecxz
hlt
add
dec
out
mov
inc
das
mov
inc
sub
push
es
add
fwait
add
push
and
jns
outsl
mov
or
xor
das
fsubs
pop
enter
and
push
and
mov
lock
imul
ss
sub
scas
stos
mov
adc
and
add
sub
or
jb
popa
add
jnp
ja
imul
push
and
out
add
cmp
and
push
jnp,pn
cmp
pop
jae
imul
fidivrl
insb
ds
adc
imul
imul
add
pop
daa
into
and
outsl
sbb
neg
mov
adc
jae
jne
arpl
mov
pop
and
sbb
shll
or
inc
mov
lcall
ja
mov
ja
jecxz
push
dec
je
out
pop
shll
fbstp
jbe
aaa
insl
lahf
and
insl
jbe
jae
jb
add
cmp
inc
loopne
cmp
sub
inc
jbe
insl
push
push
pop
es
inc
bnd
cmpsb
sbb
insb
inc
insb
or
orb
ret
ret
jae
jb
gs
mov
out
sbb
adc
repz
subl
dec
inc
shrl
pop
daa
mov
es
cmp
sub
mov
sub
jbe
cmp
repz
dec
or
fimuls
pop
pmaxub
jmp
cmpsl
sub
hlt
hlt
dec
sahf
xor
inc
outsl
push
dec
outsb
xorl
aad
xor
aas
fimuls
push
pop
add
cmp
xchg
adcb
cmp
cmp
sub
arpl
mov
cwtl
in
jnp
add
mov
lret
popa
pusha
movhps
pop
inc
adc
mov
inc
add
pop
outsb
add
jns
shrl
xchg
cmp
jp
je
jae
jns
dec
roll
add
iret
jnp
out
or
pop
lds
scas
fisubrs
fs
pop
stos
shrb
aad
notb
loopne
js
sahf
push
arpl
js
lock
jecxz
sub
push
add
mov
sub
daa
sbb
mov
shll
das
add
daa
mov
cmp
popa
lds
or
push
sub
test
das
pop
es
fisubs
sbb
mov
es
mov
mov
shll
pop
or
adc
sbb
and
add
xor
pushl
dec
xor
popa
xor
jno
jge
mov
xchg
xor
mov
shll
xor
xor
pushl
movsb
xor
xor
xor
xor
xor
xor
xor
ja
test
xchg
xor
xlat
cmp
xor
xor
sbb
inc
xor
push
xor
add
mov
call
mov
cli
lret
ret
sub
out
sti
mov
call
into
iret
mov
test
push
mov
into
repz
jmp
test
sti
fcom
ret
pop
mov
fimull
mov
leave
and
add
iret
ret
mov
lea
ss
in
jg
clc
shlb
enter
cmc
mov
mov
xchg
push
mov
fbld
aam
mov
aad
mov
mov
ljmp
xor
jo
jb
inc
inc
sub
and
xor
sub
add
jo
rorb
push
ficoml
and
addl
or
mov
jbe
outsb
popa
sub
and
sbb
add
or
orl
sbb
or
pusha
cmp
pop
in
fstp
pop
add
pop
add
inc
mov
mov
mov
push
aas
loope
dec
or
jge
cli
call
decl
add
jge
mov
test
xlat
inc
pushf
jge
lahf
mov
push
mov
pop
aas
test
imul
lret
xchg
lahf
inc
sbb
jle
mov
add
ja
aaa
xor
aas
xor
dec
jne
dec
push
adc
out
pop
repz
loope
shll
shll
adc
mov
scas
nop
mov
lock
push
push
push
pop
das
js
or
adc
in
outsb
dec
pushf
push
cs
test
inc
into
repz
das
pop
das
pop
mov
loope
lea
add
lock
fnsave
jmp
dec
xor
inc
and
sbb
out
xchg
ja
pop
ret
mov
insb
or
or
push
push
or
imul
pop
add
xchg
inc
or
subb
push
inc
mov
jmp
es
cmp
adc
cmpsl
xor
and
pop
in
and
jl
pop
adc
lahf
or
pop
cmc
and
xchg
push
stc
call
mov
mov
xchg
adc
and
scas
in
pop
cld
and
pop
cwtl
push
es
out
mov
cltd
mov
aaa
cmp
das
ljmp
ret
add
xlat
jae
cmp
leave
ret
divl
sbb
ret
or
add
imul
lret
mov
jg
sbb
cmp
lods
pop
and
push
test
push
call
cmp
rcll
push
push
dec
mov
hlt
inc
hlt
or
mov
hlt
data16
fsubr
xor
push
jb
mov
das
cli
in
cmp
jb
jb
xor
fs
cmpsb
ret
test
cmp
add
xor
cmp
xor
and
add
push
inc
and
bound
in
and
dec
add
inc
adc
jno
or
mov
or
insb
gs
jmp
inc
hlt
test
xchg
hlt
pop
lcall
sub
in
cmp
inc
sti
repnz
jnp
out
jne
loope
xchg
pop
and
or
xchg
or
lret
add
sbb
cld
cli
jb
cmpsb
sub
lods
push
rcpps
lock
addb
popf
cli
test
popf
jp
add
sbb
call
xorb
and
pushf
outsl
or
test
mov
or
adcl
aaa
dec
adc
mov
dec
shrb
imul
enter
mov
into
imul
psubusb
pop
loopne
in
outsb
fcompl
das
and
xchg
fldl
xchg
xchg
inc
jb
add
fisttpl
xor
js
call
mov
or
rorb
cmp
icebp
pusha
aam
sbb
and
mov
test
dec
push
lds
add
xabort
movsb
rorl
cmp
inc
push
adc
dec
sahf
push
jo
cmp
mov
insl
xchg
cmp
jl
sub
dec
int3
sub
xchg
daa
movsl
sti
insl
out
cmc
mov
in
scas
out
hlt
xorb
sbb
clc
inc
or
mov
and
inc
imul
mov
daa
nop
nop
mov
insb
jmp
sub
xor
or
mov
mov
push
leave
fsqrt
mov
push
add
inc
test
mov
push
jns
push
sbb
xchg
sbb
dec
sbb
es
sti
in
add
call
dec
jne
nop
mov
ret
call
cmp
imul
xchg
xchg
sbb
fdivl
adc
js
push
mov
or
xor
mov
test
je
add
jnp
add
inc
ret
orl
out
jl
mov
push
inc
mov
add
cmc
stos
cmp
add
leave
fs
pop
or
xchg
test
gs
pushf
add
out
movsl
rcrb
lcall
outsb
dec
in
or
addl
xchg
push
cmp
add
mov
and
jno
jp
sbb
ds
xor
xchg
es
sub
ss
daa
rclb
pop
sub
cwtl
pop
jo
sub
inc
cmp
or
mov
pop
mov
add
push
xor
xchg
in
mov
xor
mov
and
addr16
add
and
push
ret
push
dec
cmpsl
std
lods
push
push
adc
jo
loop
fidivl
and
leave
enter
andb
fs
add
leavew
mov
cmp
cmp
push
gs
or
hlt
gs
push
lret
movsb
mov
sub
xor
add
inc
icebp
ret
jmp
and
inc
clc
inc
pop
push
data16
ret
inc
enter
gs
xrelease
test
addr16
mov
jbe
inc
xchg
gs
adc
leave
inc
and
std
fs
inc
push
jmp
pop
mov
loope
inc
mov
push
test
cmp
lods
and
or
xchg
xchg
push
pop
leave
push
add
sbb
jb
adcl
es
mov
mov
xlat
mov
cmc
arpl
aam
pushf
or
arpl
in
or
xchg
mov
arpl
push
jmp
dec
inc
fcoml
and
enter
mov
bound
les
jno
bound
cmpsl
add
mov
jp
fiaddl
jno
pop
mov
jne
insl
pop
dec
adc
mov
or
sub
pop
add
ss
loope
add
and
hlt
movsl
subl
adc
lea
loopne
fwait
push
shlb
cltd
add
pop
mov
and
dec
popa
pop
jg
cld
mov
adc
push
iret
push
in
hlt
lahf
pusha
mov
pusha
loope
test
adc
sahf
inc
cmpsb
imul
int3
inc
sti
dec
mov
out
cmp
inc
push
sub
dec
cmp
dec
or
cmp
andl
cmp
jbe
sbb
mov
xor
adc
mov
fsubl
jns
adc
xchg
and
push
lret
pop
in
out
push
inc
add
scas
xchg
or
arpl
adc
push
cltd
lock
adc
popa
dec
shll
pop
in
cs
or
js
inc
inc
or
xor
dec
pop
pop
inc
or
jmp
xchg
lret
aam
movsl
sbb
or
dec
dec
scas
cltd
andb
mov
sbbb
hlt
cmp
es
jns
jmp
lcall
aad
enter
jnp
cld
push
mov
in
push
inc
pop
pop
in
adc
sbb
xchg
in
push
inc
jbe
xchg
sti
cltd
in
repnz
mov
pop
xchg
ljmp
jae
xor
mov
lahf
xchg
mov
xor
enter
fstps
daa
call
or
add
andb
scas
or
bound
nop
pop
insb
mov
adc
leave
lea
inc
pop
cwtl
mov
test
jmp
and
xchg
xchg
lret
push
test
fstps
leave
aam
lret
inc
xor
mov
rclb
in
sbb
xchg
mov
jg
enter
jae
adc
sbb
dec
adc
repnz
call
add
test
inc
jb
jns
pop
ds
insb
push
sti
mov
cmp
pop
adc
pop
std
cmp
inc
or
pop
faddl
xchg
or
inc
cmpl
movl
jge
sbb
mov
xor
hlt
insb
mov
mov
in
jmp
bound
adc
jge
xor
mov
adc
xchg
mov
nop
divl
addr16
sub
adcb
pushf
nop
or
or
inc
jno
notl
call
ret
jo
mov
sub
data16
insb
jge
int3
cli
push
pop
mov
xchg
xor
pusha
add
ja
xchg
leave
add
inc
adc
push
xor
mov
or
jb
enter
xchg
je
xchg
push
and
cmpl
push
push
nop
inc
push
je
adc
nop
cmp
push
xchg
jl
stos
dec
enter
fistps
cmp
sub
jo
jne
std
enter
addb
stc
push
mov
push
nop
add
ficoml
test
in
mov
fwait
sahf
mov
cwtl
inc
jb
push
push
fbstp
lods
stos
xchg
in
filds
cld
test
mov
sub
and
push
jae
sti
mov
and
mov
sbb
in
add
push
mov
jno
ret
add
repnz
push
xchg
js
es
mov
sub
push
enter
sub
dec
fstps
push
push
sub
mov
test
and
push
or
aam
leave
push
lds
mov
fiaddl
sub
adc
mov
or
leave
sub
dec
mov
cmpsb
add
push
adc
sub
push
push
push
loop
add
inc
addb
xchg
sbb
pop
push
or
add
sub
sbb
inc
push
dec
sbb
dec
sbbl
add
add
into
xchg
xchg
pop
push
in
dec
jnp
adc
dec
cli
push
ss
push
jnp
xchg
add
and
ret
mov
subl
dec
inc
pop
dec
addl
jo
sbb
push
adc
mov
outsb
add
cli
in
and
dec
stc
je
hlt
nop
inc
cs
jb
and
mov
jb
inc
dec
cwtl
pushf
aam
or
dec
xor
pushf
fmuls
mov
cmovb
add
test
xchg
or
push
repnz
jae
jp
xor
pop
mov
repnz
movsb
in
enter
dec
jns
setns
in
add
sub
mov
mov
lods
in
leave
adc
rclb
dec
xchg
cmp
and
or
xor
fs
out
pushw
mov
inc
clc
pop
rclb
cwtl
adc
das
js
repnz
sub
test
xchg
js
push
loop
push
and
xlat
insb
adc
or
sub
sbb
push
and
dec
push
enter
inc
adc
or
leave
add
in
push
or
mov
ljmp
rorl
or
jno
pop
pop
inc
sub
adc
test
inc
push
in
push
mov
and
aaa
call
sbb
push
outsl
lods
es
bound
pop
xchg
dec
jb
fisubrs
mov
or
or
rol
stos
stc
adc
daa
lds
pop
stc
insb
mov
xor
hlt
stc
add
add
sbb
stc
xchg
rorb
pop
inc
dec
and
stc
out
add
cmpsl
mov
hlt
inc
in
cmp
movsl
nop
das
jo
insb
add
insb
pop
sbb
mov
mov
out
jnp
mov
out
and
outsl
push
pushf
pushf
and
cld
mov
rolb
nop
pushf
and
hlt
inc
daa
inc
push
adc
xchg
pushf
sbb
mov
aad
inc
fistl
jno
in
cltd
inc
scas
popa
add
or
adc
inc
push
inc
mov
xorb
xchg
adc
inc
inc
cmp
and
mov
mov
and
loopne
andl
ret
jno
adcl
cmpb
ja
outsl
inc
adc
pop
dec
outsl
ficoml
jno
dec
inc
outsl
pop
push
jb
xor
adc
aas
xchg
repnz
sub
lods
xor
jl
jmp
mov
andl
add
mov
or
in
imul
insb
xor
orb
call
push
sub
andl
cwtl
inc
adc
add
mov
or
sbb
icebp
lret
add
mov
and
insb
lock
lret
jno
add
enter
cmpb
inc
add
dec
mov
push
bound
movl
or
inc
pushf
ret
mov
inc
shll
dec
and
loopne
cmp
js
push
es
xor
inc
inc
imul
sbb
xor
push
add
jae
test
shlb
add
lret
movsb
mov
add
hlt
jmp
mov
out
xchg
sbb
inc
inc
pop
inc
ficoml
fst
inc
or
jl
bound
rcll
jle
push
add
adc
subl
das
mov
stc
cmp
add
adc
fidivrs
leave
imul
or
and
lock
es
jo
les
adc
or
and
or
inc
and
mov
add
mov
pop
sbb
mov
ja
add
xorl
mov
sub
cmp
pop
lea
enter
mov
movsb
inc
cwtl
cmp
mov
mov
test
dec
sub
mov
jmp
mov
stos
jmp
shll
inc
dec
cmpl
fstpl
dec
clc
cmp
jecxz
add
lcall
and
adc
enter
jae
pusha
mov
adcb
into
and
xor
les
and
inc
or
or
lret
std
and
jmp
mov
mov
adc
sbb
nop
sbb
push
hlt
aaa
fistps
test
jmp
sti
jmp
rcr
andb
in
add
mov
ret
inc
pop
jl
dec
add
enter
cmp
jb
rolb
jmp
cld
add
bound
ljmp
and
pusha
aad
ss
and
or
sbb
test
ja
popa
jmp
sbb
xor
ss
inc
xchg
or
sbb
call
inc
jmp
cmpl
inc
dec
jmp
test
jmp
test
mov
xor
fmuls
xor
pop
repnz
xor
push
pop
and
and
xor
cmpsb
addr16
and
lock
mov
sub
jmp
sub
addr16
jmp
adc
mov
arpl
les
add
cmp
shl
enter
push
sbb
sub
pop
test
cli
mov
xlat
adc
jmp
nop
add
and
adc
cltd
nop
xor
sub
and
mov
and
jmp
add
jmp
enter
or
pop
pushf
es
out
addr16
push
xor
movsb
rcll
aas
pop
inc
lods
nop
add
leave
test
pop
sub
enter
cli
xor
xor
add
neg
pop
ja
fists
movsb
inc
jmp
push
and
sub
enter
xor
mov
sub
roll
pushf
nop
adc
xor
push
inc
mov
loop
in
fmul
pop
add
and
lods
sub
inc
mov
add
jae
jo
and
mov
test
pop
mov
inc
or
arpl
mov
add
sbb
and
or
and
jbe
mov
mov
push
aam
leave
xchg
leave
scas
xor
jno
push
mov
mov
cwtl
insb
or
fadds
jmp
sub
cmp
jmp
in
push
mov
and
in
ret
das
fnstcw
cmpxchg
orl
sub
adc
mov
and
jb
jns
push
das
hlt
cs
cmpsb
jo
fistps
add
and
sahf
ljmp
test
xchg
lahf
mov
pop
enter
mov
dec
test
inc
jno
xor
add
xor
xchg
xchg
popa
ret
stc
sbb
loopne
repnz
adc
clc
sub
bound
mov
add
sbbb
jno
inc
or
dec
inc
jmp
lahf
jecxz
cld
ret
push
sub
mov
mov
push
leave
or
rcl
mov
inc
mov
mov
or
mov
inc
insb
and
jae
and
test
cmp
inc
or
icebp
pop
mov
sbb
mov
or
jg
adc
cmp
adc
cmp
jno
cmp
sarl
inc
jnp
or
sub
cmp
cltd
cmp
js
mov
adcb
or
nop
or
insl
rcll
or
sub
adc
push
add
subl
nop
xchg
movsl
mov
sub
pop
pushf
cli
sub
fcoml
mov
push
xor
cmp
xchg
or
xchg
mov
inc
or
push
and
pushf
sub
inc
fcoml
adc
mov
movsb
cmp
gs
or
mov
movsb
cmp
fcoml
and
mov
inc
cmp
push
or
mov
sub
in
pop
or
mov
test
inc
and
add
inc
test
add
add
and
cmp
sub
and
out
mov
enter
or
shll
and
push
and
outsl
jne
out
inc
or
add
cltd
andb
cmpl
test
pop
inc
cmp
or
sub
or
push
sbb
adc
mov
mov
push
add
repz
and
mov
sbb
sub
inc
jbe
sub
dec
xorl
jmp
push
inc
or
cmp
inc
sub
and
dec
cmpl
pop
inc
cmp
push
dec
cmpl
fsts
pop
adcb
add
adc
mov
add
or
or
inc
stos
inc
cmp
mov
add
gs
int
mov
adc
fwait
rdpmc
dec
cmp
xor
pop
and
push
and
push
fs
ja
jecxz
into
lds
jecxz
or
mov
pop
fs
mov
pop
je
cmp
push
and
dec
ss
loopne
fs
or
add
add
jg
pop
leave
pop
cmp
fldl
cmp
mov
jmp
movsb
xor
or
push
mov
add
push
inc
mov
mov
sbbl
jo
inc
cmp
daa
dec
mov
orl
push
jno
repz
rorb
lock
adc
ret
mov
movsl
sbb
lcall
test
movsb
inc
cmp
push
and
sub
cmp
adc
out
xor
or
subl
and
dec
adc
pop
mov
adc
or
cmp
dec
cmpl
adcl
pop
push
cmpsb
add
nop
add
cmpl
sti
sbb
add
add
xchg
out
or
inc
mov
mov
mov
jno
and
roll
xor
and
add
ret
rcll
sbbb
adc
jg
inc
xchg
pop
or
test
pop
sahf
nop
lea
adc
fwait
mov
add
cmp
or
adc
adc
cmp
out
sbb
fstps
add
es
xchg
xchg
sub
push
sub
inc
cmpsb
pusha
adc
mov
mov
cmp
add
sbb
icebp
push
and
les
push
cmp
scas
and
cmp
jns
mov
shrb
add
aas
push
add
enter
adc
fisttps
test
cmp
test
xchg
inc
adc
jns
xor
inc
pop
rol
sbb
sub
or
cltd
test
nop
add
inc
push
repnz
push
and
fstpl
adc
imul
jb
mov
or
adc
or
xor
jo
push
adc
push
cmp
in
adc
push
mov
sub
jmp
sub
cmp
cmp
push
call
cmp
push
and
and
pop
nop
aas
inc
test
add
cmp
lcall
loop
cmp
shr
pop
mov
cmp
cmpsb
and
sub
pop
adc
cmp
in
mov
fcoml
adc
pop
js
sub
pop
jg
push
pop
inc
test
cmp
sbbl
sbb
inc
cmp
push
and
inc
movsl
cmp
inc
or
inc
and
cmp
aaa
int
popf
fisubrs
pop
cmp
sub
test
sub
push
adc
add
mov
and
sub
movsb
inc
lods
test
add
and
mov
cmp
bound
cmpsl
adc
cmp
adc
loop
sbb
sahf
jg
xchg
jo
lret
outsl
sub
rcl
pop
movsl
dec
jo
adc
push
and
cmpsb
adc
jb
fmull
cmpsb
adc
and
xchg
dec
pmulhuw
das
sub
jno
mov
sub
adc
fsubrs
pushf
pushw
and
add
inc
pushf
mov
push
cmp
xchg
dec
and
sbbb
in
sub
xchg
or
add
or
add
ljmp
mov
sub
jns
cmp
ss
or
and
add
or
mov
outsl
inc
cs
pop
or
sub
push
imul
push
js
aaa
or
cmp
xor
repnz
xchg
or
addl
cwtl
xchg
or
ja
in
addl
mov
xchg
add
sahf
aaa
pop
test
test
shll
ljmp
and
or
es
or
sbb
test
and
test
fstl
popf
lock
or
test
xor
push
and
adc
fstl
or
outsb
imul
or
fisttpl
fwait
lret
test
test
cmp
mov
or
push
sub
jbe
dec
test
dec
call
in
pushf
dec
movb
pop
dec
or
aam
fs
pusha
adc
inc
cmp
inc
adc
cmpsb
or
pop
lods
or
mov
js
push
popa
pop
nop
add
es
push
jb
cmpsb
in
pop
mov
in
lea
or
pop
hlt
jo
inc
pushf
mov
pop
xchg
out
and
jb
fs
adc
add
int
mov
jns
add
dec
add
je
int
inc
push
pop
cltd
inc
add
ret
adc
es
inc
push
das
or
push
dec
shrd
mov
out
add
les
cmpl
dec
cmp
sbb
jno
rcll
add
add
xchg
push
addl
pop
inc
or
inc
cs
imul
jmp
and
or
adc
in
sbb
or
cmp
fs
sahf
add
add
or
add
add
cld
mov
pop
xor
sbb
popa
cli
or
pop
mov
int3
dec
adc
push
and
mov
cmp
pushf
add
xchg
add
or
fistl
nop
add
aaa
add
pop
mov
imul
add
adc
cmpb
pop
mov
mov
iret
add
sub
or
adc
push
cmp
mov
fstpl
add
leave
test
inc
xor
mov
mov
cmp
add
aaa
mov
decl
and
add
lret
jbe
jno
and
adcl
dec
or
add
enter
repz
xor
push
push
ret
call
push
mov
loop
test
aaa
inc
pop
adcb
push
inc
insb
stos
mov
and
pop
test
jge
ret
adc
cs
nop
or
dec
lret
in
mov
add
add
pushf
addb
xchg
rcll
sub
out
cmp
aad
push
loop
pop
fs
inc
inc
add
add
add
add
fwait
in
sbb
or
adc
add
and
sub
mov
inc
mov
add
and
adc
push
add
cld
add
inc
add
divl
mov
xchg
pusha
loope
stos
add
adc
adc
shll
lcall
ss
push
ficoml
mov
fwait
ret
dec
arpl
clc
sbb
lods
mov
cmpsb
arpl
shlb
insb
les
or
insl
or
sub
xchg
push
ficoml
dec
add
or
inc
push
add
mov
or
ljmp
test
add
push
push
cltd
jmp
inc
shrb
cmpsb
repnz
push
sbb
rolb
mov
mov
dec
adc
inc
pop
imul
sub
jle
or
mov
mov
push
adc
cli
mov
push
adc
pusha
add
adc
sarb
mov
jne
ret
and
test
add
bound
cs
add
lret
cmpsb
add
sub
pop
add
fwait
adcb
insb
or
pusha
bound
enter
hlt
xor
push
nop
aam
sahf
cwtl
test
nop
lret
aas
add
xchg
push
cmpsb
add
sbb
push
sub
or
stc
addb
xor
push
les
notb
inc
push
jecxz
es
push
inc
inc
add
pop
cmpb
dec
xor
inc
mov
xorl
cs
out
inc
add
adc
jecxz
mov
inc
mov
lret
adc
or
inc
bound
adc
adc
adc
pop
add
test
xor
js
xor
dec
insl
in
cpuid
andb
cmpsb
pusha
loop
stos
mov
jecxz
or
stos
mov
push
push
jecxz,pt
lcall
repz
andl
jae
mov
push
adc
add
jmp
mov
adc
add
dec
add
icebp
fsubrs
push
push
cmp
sarl
test
cmpsb
mov
jecxz
dec
popa
lock
jecxz
cmp
adc
push
mov
popa
or
lcall
jbe
add
arpl
inc
ret
adc
push
or
js
and
sbb
cmp
ljmp
les
aaa
dec
popa
jbe
outsb
cwtl
and
add
popa
or
mov
leave
ret
rcr
sub
outsb
xchg
sub
call
movsb
cmpsb
xor
je
leave
adc
clc
push
mov
add
call
mov
int3
scas
insl
or
call
xchg
test
fs
dec
sbb
imul
push
or
sbb
jo
mov
or
pop
jmp
adc
add
mov
pop
or
mov
mov
add
or
ljmp
inc
sub
and
mov
add
test
test
jnp
jae
add
push
lret
inc
and
pop
sbb
and
push
or
sahf
clc
orl
les
add
jecxz
add
mov
sbb
jecxz
sub
pusha
or
call
pop
test
mov
cwtl
jecxz
add
mov
jecxz
cmpsb
jo
loopne
incl
jecxz
adc
jo
adc
xor
push
cld
jb
imul
gs
fstl
and
scas
mov
pop
jo
push
cmp
dec
les
test
xor
orl
mov
inc
test
nop
pop
mov
sbb
dec
nop
outsb
mov
ret
sbb
sub
andl
mov
mov
sbb
ret
mov
or
pop
inc
ret
incb
ret
pop
add
test
push
or
ret
jae
les
add
cmpb
popa
or
add
sub
mov
in
subb
inc
or
pushf
pop
push
push
repz
and
xor
sub
inc
sub
sub
hlt
js
and
xchg
pushf
adc
ret
adc
adc
jmp
inc
ret
xor
out
cmpsb
jo
aam
rorb
ret
sub
pop
rcll
mov
fwait
cmc
pop
hlt
or
add
inc
sbb
sbb
mov
faddl
enter
sub
inc
or
ret
movsl
les
add
add
sub
cli
popa
andl
ret
es
out
add
call
adc
ret
add
addr16
adc
and
adc
push
inc
fisttpll
jns
ret
sahf
add
movl
ret
adc
push
sbbb
xor
dec
popa
jo
or
push
xchg
adc
es
or
mov
test
sub
adc
push
mov
out
ret
xchg
sbb
push
sub
je
push
or
xor
and
inc
or
ret
mov
xchg
sub
sahf
and
mov
aaa
jmp
test
cmp
and
or
mov
popa
jo
ret
pop
inc
popa
jo
xor
lea
xor
inc
adc
mov
adc
ret
aaa
add
cwtl
ret
inc
sub
ret
icebp
inc
andl
add
cwtl
ret
sub
xchg
or
int
popa
or
ret
test
sub
or
adc
inc
jb
les
outsb
and
or
sbb
stos
xchg
cwtl
mov
lahf
aas
push
push
add
push
pop
aad
test
add
ret
add
aam
test
fnsave
adc
adc
sub
js
push
xorb
cwtl
into
add
adc
out
mov
sbb
cltd
dec
pop
jne
test
stos
popa
or
sub
sub
out
bnd
adc
stos
add
xor
out
fwait
adc
add
and
xchg
inc
mov
sub
inc
aam
ficompl
add
test
aaa
cwtl
xchg
push
inc
dec
push
loopne
push
sbb
loopne
aaa
imulb
jecxz
mov
stc
fadd
rclb
je
loop
ret
add
fsubs
dec
ret
mov
or
arpl
test
add
cmp
ljmp
ret
jne
daa
dec
loope
ret
jg
test
movsl
arpl
ds
ret
dec
lar
repz
xor
iret
addl
loope
adc
inc
sub
xchg
xchg
xchg
jnp
xor
ljmp
rorl
test
faddl
popf
mov
dec
lock
lahf
push
loopne
dec
cwtl
ret
and
xchg
adc
loope
pcmpgtb
jbe
jno
mov
pop
adc
jg
cwtl
ret
loopne
sub
add
xlat
popa
lahf
iret
push
xchg
in
test
add
fs
ret
lahf
fadds
les
xor
or
or
clc
mov
dec
xchg
xchg
mov
mov
inc
call
aam
push
mov
adc
call
mov
ret
mov
dec
add
mov
out
jb
adc
add
leave
fiadds
adc
mov
adc
imul
lahf
inc
outsl
fists
aas
pop
clc
stc
pop
leave
add
fidivrs
push
xor
shrb
inc
les
jne
mov
cmp
mov
dec
sbb
test
test
sbb
push
cwtl
cmpb
sub
jb
jmp
xlat
jp
jo
aad
fadds
enter
mov
mov
arpl
push
mov
leave
popa
or
cmp
xor
cmp
adcb
rorb
popa
mov
or
popa
or
xor
mov
into
sbb
cmp
cmp
test
xchg
dec
and
or
jo
mov
xor
test
add
dec
fisubrl
inc
dec
loope
loop
mov
add
sbb
xor
ret
mov
push
jo
clc
pop
xchg
ret
ret
out
or
sub
add
xor
dec
xor
test
or
incb
xlat
jmp
lcall
dec
mov
or
dec
pushf
xor
pop
daa
dec
mov
ret
pushf
add
mov
add
or
and
mov
add
call
rorl
push
jo
mov
insl
mov
cmpl
add
mov
ds
ljmp
or
mov
lods
mov
push
call
adc
call
ficoms
ljmp
mov
sbb
inc
data16
es
and
jmp
js
or
aam
mov
ja
ret
xor
loope
xor
test
mov
popf
mov
stos
dec
mov
aad
mov
popf
xor
push
js
mov
gs
adc
jnp
adc
popf
mov
cmpb
mov
mov
adc
push
xor
mov
and
scas
mov
adcb
call
popa
mov
popa
or
dec
popa
mov
sub
jne
loop
ja
jo
push
sub
dec
mov
hlt
lfs
xchg
insb
test
js
cmp
or
and
dec
cs
adcb
lods
sbb
mov
mov
gs
mov
jmp
mov
add
dec
rorl
adc
rcll
sbb
add
pusha
mov
xchg
jle
xchg
lods
repz
cltd
xchg
lret
in
jbe
inc
or
dec
cwtl
ret
test
fsub
stos
mov
int3
add
ret
xchg
mov
cmp
aaa
jle
mov
mov
dec
in
test
xor
pop
jo
mov
lds
push
mov
mov
mov
or
add
or
sbbl
int3
mov
loopne
xchg
adc
test
jns
xor
mov
cmp
lcall
dec
addb
out
cwtl
dec
andl
or
xor
popf
lcall
mov
cmp
xchg
ret
jecxz
inc
jo
push
rcll
sbb
push
inc
inc
dec
push
jecxz
adc
dec
push
jo
sbb
sub
inc
jecxz
cli
xchg
adc
sub
test
dec
pop
adc
cwtl
cmp
jecxz
cmpb
lds
xchg
ret
push
dec
and
fcoml
add
push
pop
rcll
xchg
adc
adc
es
push
subl
dec
push
jo
jb
fs
dec
rorl
andl
movsb
jo
xor
sbbb
je
and
sub
clc
popa
push
adcl
addb
adc
bound
add
movsb
pusha
ret
fs
and
testl
dec
push
mov
dec
or
add
sbbl
dec
adc
in
test
mov
xor
xchg
xor
pop
lds
add
or
mov
shll
add
dec
and
popa
dec
mov
sub
loope
or
adc
and
ret
mov
sbb
dec
loope
mov
ja
icebp
or
ret
xor
movsb
lret
test
mov
mov
pop
enter
xor
xor
sbb
push
push
pop
mov
or
cwtl
and
sub
sbb
subl
sbb
pusha
lret
add
repnz
rclb
pop
dec
push
cmp
and
arpl
inc
mov
orb
push
mov
push
pop
and
test
jmp
or
ret
shll
pop
out
adc
bound
ficoml
dec
popa
and
push
fiaddl
and
pop
jb
inc
cmp
xor
xchg
jecxz
in
adc
xor
jne
push
pop
or
dec
sbb
pop
icebp
pop
sti
mov
dec
sarl
jl
jecxz
adc
adc
and
adc
pusha
lds
mov
inc
test
clc
push
push
out
lahf
add
mov
fcomp
stos
cwtl
movsb
jecxz
pop
adc
bound
test
pop
in
jecxz
and
mov
jecxz
inc
mov
push
sub
jecxz
mov
sub
jecxz
mov
cwtl
movsb
jecxz
insb
stos
cwtl
movsb
jecxz
sbb
es
jecxz
and
mov
fwait
add
add
js
xchg
adc
jg
inc
inc
js
shl
inc
cmpsb
xlat
cmp
push
mov
sub
shll
inc
xor
popf
shll
inc
xor
fwait
icebp
or
add
mov
push
mov
dec
push
xor
xchg
pushf
aas
fwait
sub
jecxz
mov
inc
movsb
test
addr16
and
movsl
add
aad
test
or
repz
jmp
test
xor
bound
lods
or
xor
xchg
into
jmp
ret
mov
jns
cmpsl
stc
pop
les
pop
scas
into
xchg
adc
repz
pop
adc
mov
push
dec
jecxz
repz
notl
icebp
push
add
adc
inc
push
mov
ds
adc
sahf
out
gs
mov
jle
lret
js
call
sbb
sub
push
fnstsw
adc
mov
cmp
xor
push
movsb
fdivrl
dec
rorl
das
fldt
jecxz
push
mov
dec
push
jecxz
and
push
cwtl
movsb
pusha
xchg
rolb
jecxz
sub
sub
inc
jecxz
test
sbb
and
pop
mov
jecxz
push
pushf
ret
xchg
jecxz
sbb
dec
out
sub
jecxz
push
aam
and
sub
mov
les
rorb
pushf
jl
xchg
loopne
push
cmp
xorl
cmp
enter
lahf
cmpl
push
xchg
insb
pop
aaa
daa
bound
cmp
push
arpl
push
arpl
pop
dec
push
jecxz
add
xchg
jecxz
xor
bound
xchg
shlb
sbb
ss
push
xchg
inc
and
jecxz
orl
inc
sub
jmp
dec
push
cmp
add
iret
shll
jecxz
and
dec
jecxz
push
jns
xlat
popa
dec
push
pop
adc
push
jecxz
dec
push
jecxz
push
sahf
sbb
xchg
add
mov
iret
test
movsb
dec
and
dec
push
mov
bound
push
dec
jecxz
jno
add
lock
and
jge
dec
or
dec
pushl
ret
mov
push
dec
push
mov
mov
test
mov
mov
push
push
sahf
mov
lahf
dec
mov
or
data16
add
aam
xchg
mov
xchg
adc
pop
or
mov
push
int
iret
push
clc
mov
mov
mov
test
and
add
add
xchg
sbb
test
enter
std
add
push
adc
push
xor
mov
sub
inc
loope
xchg
add
enter
stos
dec
stc
push
and
lahf
and
stos
bound
inc
jo
fwait
push
mov
pop
add
add
push
adc
dec
or
adc
adc
xchg
or
sbb
movsb
loopne
pop
pop
inc
je
out
sbbb
xchg
ret
mov
push
shlb
mov
cwtl
mov
inc
dec
mov
jmp
or
or
sub
lock
bts
mov
stos
xchg
inc
or
icebp
mov
mov
cld
dec
cli
and
sub
xor
dec
add
add
int3
mov
xchg
adc
into
jle
xor
pop
shll
adcl
adc
cmp
or
pop
inc
dec
mov
or
dec
or
call
mov
and
add
dec
mov
push
dec
mov
sub
mov
xchg
mov
xor
sub
pop
or
mov
pusha
xchg
mov
sbbl
mov
sub
sbb
loope
sbb
bound
orb
sub
mov
add
mov
cmp
xor
xorl
add
mov
mov
jecxz
xchg
ret
ret
shlb
lods
push
mov
stos
cwtl
movsb
mov
sub
bound
xor
mov
lds
cmpb
cwtl
movsb
mov
cwtl
push
or
adc
cwtl
and
adc
mov
and
mov
dec
or
repnz
mov
xchg
push
das
mov
les
imul
push
movsl
and
sub
lea
push
cwtl
mov
cltd
mov
mov
push
inc
adc
adc
clc
cmpsl
mov
out
sub
pop
or
inc
dec
mov
pop
adc
mov
xor
adc
push
mov
lock
mov
push
mov
mov
pop
ds
jle
pop
gs
xchg
mov
adc
fidivl
nop
pop
mov
pop
bnd
push
inc
sbbb
xchg
sub
pop
inc
pop
inc
cmpsl
sub
ficoml
out
mov
aaa
ret
je
xor
mov
movsb
ret
pop
add
aaa
lods
inc
lcall
leave
ret
dec
push
xor
int
mov
mov
add
int3
lahf
xor
je
cmp
cmp
or
jle
cmp
cmc
addb
notb
pusha
das
xchg
ret
in
lock
cltd
movsb
ret
cmp
cltd
movsb
ret
xor
sbb
sbbl
cmp
sub
mov
push
jo
lods
in
sub
ret
outsb
lds
add
outsb
idivb
rcrb
xchg
ret
pop
movsl
loop
add
sbb
xchg
adc
xchg
ret
andb
fadds
sub
cmpsl
cmp
xchg
adc
push
or
dec
or
dec
or
xchg
arpl
dec
push
mov
es
loop
arpl
stos
or
loop
dec
movsb
lcall
arpl
sub
dec
push
cltd
movsb
loopne
arpl
arpl
ds
jmp
aaa
push
das
push
adc
pop
cmp
call
xchg
arpl
shll
dec
int
adc
xor
and
int3
and
adc
dec
loope
arpl
xchg
adc
inc
arpl
arpl
mov
stos
arpl
stos
pop
xor
xor
jl
adc
push
mov
ret
mov
les
loope
or
dec
add
lcall
cmp
jb
mov
dec
aam
arpl
movsb
shrl
mov
int3
and
arpl
xchg
ret
pusha
es
loopne
data16
adc
sbb
mov
lahf
insl
dec
lahf
stos
sbb
jbe
xchg
adc
sbb
xor
jle
and
sbb
ret
arpl
jo
data16
test
dec
icebp
sbbb
cmp
xchg
xchg
xchg
ret
inc
add
pop
mov
xchg
pop
cwtl
int
test
nop
imul
inc
mov
adc
inc
inc
mov
es
lds
sbb
je
push
inc
fwait
js
push
test
inc
inc
xor
jecxz
movsb
and
xor
dec
nop
mov
dec
push
xchg
adc
ret
cwtl
fs
adc
sub
and
cmpsb
inc
nop
ret
arpl
test
xchg
push
aam
and
cmp
or
dec
push
and
add
dec
push
adc
jo
inc
and
lcall
and
dec
or
iret
repz
pop
sbb
and
adc
and
aas
push
cmp
xor
lahf
xchg
adc
or
sbb
push
jecxz
hlt
in
in
addb
insl
cmp
repz
sub
push
ja
xchg
popa
imul
push
leave
push
clc
xchg
mov
inc
test
or
inc
dec
push
mov
test
push
inc
add
ljmp
sbb
lahf
stc
xchg
push
ret
ret
mov
push
mov
inc
movsb
pusha
pop
sbb
push
ficoml
leave
xchg
add
mov
enter
mov
orps
adc
dec
or
into
sbb
js
inc
imul
sub
cmpsb
sbb
adc
stos
es
cmp
adc
xchg
inc
fs
mov
and
mov
and
sbb
mov
test
inc
push
inc
arpl
scas
es
xchg
push
push
xchg
adc
adc
or
mov
adc
aad
enter
pop
xchg
inc
int3
adc
and
lahf
inc
xchg
xorb
mov
inc
les
sbb
push
inc
pop
mov
movsb
mov
scas
clc
sahf
mov
inc
cmpsb
mov
inc
sub
adc
fists
add
cwtl
ret
inc
dec
inc
or
rcrl
dec
xor
xchg
adc
push
push
jns
or
test
or
imul
cmp
call
scas
pushf
mov
dec
push
xchg
stc
dec
test
aad
add
addb
fistpl
mov
int3
mov
test
dec
add
enter
mov
push
xor
add
and
sarl
push
add
push
or
mov
stos
push
dec
push
cmp
sbb
adc
out
add
cs
jmp
and
dec
inc
inc
xor
sub
loope
adc
cmpsl
shrl
jmp
test
add
test
add
add
adc
adc
mov
cmp
dec
rol
mov
sub
add
xor
push
push
add
sub
adc
popl
rorb
push
xchg
add
sub
insb
stos
dec
add
mov
cmp
outsl
jbe
sbb
sbb
sbb
shr
xchg
add
sub
push
es
or
and
xor
and
addl
inc
mov
add
dec
loope
push
dec
dec
sbbb
xor
push
add
push
aam
add
or
dec
push
mov
and
jnp
adc
rclb
jne
je
push
xchg
add
fidivrl
aad
out
out
paddusw
and
dec
add
mov
rolb
test
mov
and
push
pop
jnp
aam
add
lahf
add
dec
and
jle
cmp
and
add
popa
jb
add
inc
xor
movsb
pusha
iret
add
mov
add
dec
loope
add
push
test
or
nop
mov
add
and
fwait
add
add
movsb
inc
jp
mov
xchg
test
or
bound
push
sbbb
adc
and
sub
dec
push
add
inc
mov
add
xchg
and
in
mov
xchg
lahf
stc
and
add
jno
dec
add
add
add
add
lock
pop
push
sbb
mov
dec
add
outsb
dec
push
or
movsb
jo
add
fwait
add
dec
push
add
imulb
lret
push
push
sub
sub
test
pop
inc
dec
aam
jo
dec
or
push
mov
stos
add
loope
push
dec
add
xor
mov
and
js
out
pop
cmpsl
test
sub
or
mov
stos
dec
add
push
push
ret
test
xor
cmp
dec
push
push
loopne
cmp
push
add
ret
test
pop
add
insb
mov
aas
mov
add
push
call
dec
and
cwtl
enter
or
arpl
add
and
add
mov
es
insb
mov
aam
test
test
add
add
add
in
cmp
push
add
popa
rolb
sbb
cmpsb
push
xor
lcall
test
or
jbe
mov
add
push
adcb
add
jecxz
xchg
ret
ret
in
pop
aad
test
xchg
inc
inc
xor
push
xchg
adc
mov
xchg
adc
push
xchg
push
ret
dec
add
sarl
sbb
and
mov
add
sub
in
test
test
or
sbb
aas
fwait
adcl
or
add
add
and
lcall
sub
mov
sub
stos
test
ja
push
mov
mov
add
adc
adc
add
xchg
pop
pop
adc
add
push
dec
push
xor
ja
dec
add
dec
inc
sbb
stos
add
and
add
or
pop
and
sbb
popf
and
sets
or
jmp
cmp
inc
adc
shlb
push
add
or
int3
inc
dec
push
mov
fnstsw
push
add
scas
push
add
xor
adc
inc
push
ret
sbb
sub
lock
jb
std
and
sub
push
xchg
inc
mov
xor
mov
push
sbb
dec
enter
ret
inc
adc
mov
jg
in
adc
sbb
push
icebp
sub
movq
aam
add
test
push
es
dec
or
aas
repz
test
aad
aaa
xchg
adc
pop
jmp
push
inc
test
inc
jo
mov
jmp
movsb
inc
outsl
cmpsb
stos
dec
or
dec
mov
ret
movsl
add
dec
or
adc
mov
or
lods
test
sbb
xor
push
push
inc
dec
arpl
fnstcw
lock
and
push
stos
mov
add
movsb
jb
sub
pop
mov
movsb
enter
jb
iret
enter
mov
sbb
call
adc
pop
enter
pop
enter
mov
add
sbb
mov
jo
es
xchg
lret
enter
mov
xchg
sbb
push
arpl
xlat
pusha
loope
xchg
ret
and
dec
push
sbb
dec
nop
push
arpl
adc
stos
dec
scas
mov
test
jns
loope
cmpsb
stc
dec
pusha
js
xor
subb
arpl
jns
adc
cwtl
and
mov
aaa
mov
pop
movsb
rorb
jb
mov
in
inc
pop
mov
lret
in
jbe
mov
xchg
dec
iret
lahf
test
out
lahf
lret
or
xor
push
xchg
adc
mov
mov
aam
cmp
jge
add
inc
call
adc
mov
and
fs
mov
inc
xchg
inc
arpl
andb
lahf
add
add
stos
lcall
cwtl
stc
xor
dec
sbb
mov
test
xchg
arpl
popa
arpl
or
dec
inc
or
inc
pop
push
fisubrs
adc
push
arpl
sbb
or
fildl
mov
pop
pushf
aas
pushf
mov
call
inc
dec
repnz
and
les
push
push
push
add
lds
push
add
test
decb
pushf
test
mov
jo
cmpsl
adc
cwtl
mov
dec
push
adc
push
mov
inc
mov
aad
test
xchg
lahf
stc
or
dec
push
ret
jnp
inc
fsts
jae
aas
xchg
pop
xorl
jg
iret
adc
and
add
mov
imul
pop
aas
ret
sar
mov
dec
push
jo
adc
rcl
out
push
mov
leave
out
ljmp
je
adc
rorb
jo
mov
inc
xor
call
fsubl
add
std
push
aaa
dec
roll
and
cwtl
mov
jno
adc
push
jno
adc
faddl
imul
out
subb
and
push
jo
adc
cltd
mov
dec
shll
je
add
faddl
mov
or
push
enter
add
pop
or
das
setb
mov
das
nop
inc
nop
lea
mov
pushf
inc
into
xchg
jbe
xchg
pushf
inc
jp
call
cmp
inc
push
adc
in
out
insb
sti
add
xchg
xchg
cmp
je
test
or
flds
stc
jne
pushf
sub
adc
sub
mov
sbb
sahf
sbb
and
or
sub
inc
inc
inc
pop
mov
or
and
ja
lret
lock
movl
daa
cld
or
mov
push
add
cmp
or
adc
push
jmp
sub
test
xor
cmp
inc
dec
dec
jns
xchg
dec
push
push
pop
negl
movsl
push
pusha
fs
loope
add
outsb
inc
cmp
je
js
dec
subb
or
jns
dec
mov
xchg
xchg
cwtl
cmp
push
cmp
mov
push
xchg
adc
jb
test
push
adc
push
aam
test
sbbb
mov
arpl
xchg
inc
aam
arpl
arpl
or
sub
test
xchg
ret
arpl
sub
or
mov
sbb
mov
inc
dec
push
arpl
mov
in
push
xchg
sbb
sub
mov
sub
sub
test
or
sbbb
scas
sbb
lea
jnp
xchg
arpl
adc
aad
arpl
scas
and
dec
shll
arpl
mov
arpl
sub
mov
xor
imul
dec
or
lods
push
ret
dec
loope
cld
arpl
arpl
xor
and
sub
pop
int3
out
sbb
call
xchg
adc
test
push
aam
add
add
andl
dec
arpl
cmp
stos
dec
or
scas
lcall
and
sti
push
jmp
or
or
jl
fmuls
mov
pusha
test
arpl
or
outsb
xchg
inc
sbb
push
and
jo
xor
and
xor
add
rorl
arpl
adc
dec
arpl
js
cwtl
and
jnp
arpl
sbb
fisubl
sbb
arpl
add
push
aas
sbbb
adc
and
test
mov
aad
mov
lcall
dec
arpl
push
xor
adc
sbb
pop
dec
push
jo
lret
testb
add
or
mov
dec
or
add
imul
dec
aam
arpl
push
cld
pop
aam
add
stos
push
outsl
mov
dec
or
and
iret
xchg
pusha
dec
pop
aad
test
popa
add
arpl
dec
jp
test
andl
inc
aam
mov
xchg
adc
mov
sbb
xchg
adc
push
arpl
push
arpl
pusha
das
stos
dec
arpl
scas
cld
lock
ret
mov
lods
mov
and
dec
push
cmp
test
enter
adc
arpl
xchg
ret
subl
shll
popa
pusha
xchg
ret
pop
jge
clc
cmp
and
pop
mov
sub
and
push
push
dec
inc
fdiv
adc
or
arpl
xor
push
js
inc
or
faddl
arpl
int3
sub
cmp
add
and
sub
lcall
cmpl
loopne
add
stos
push
or
fcomps
test
daa
das
xor
push
dec
pop
aam
arpl
push
xor
fnstsw
lea
push
pop
je
or
mov
jle
arpl
cmp
les
mov
aad
scas
push
andb
push
sub
sbb
pop
mov
sti
jns
mov
xor
cltd
jge
cwtl
cmp
jmp
xchg
test
aaa
mov
mov
sarb
shrb
shrb
xchg
lret
enter
loopne
mov
cs
cs
out
enter
lock
clc
cld
add
jecxz
das
jo
add
mov
pop
jmp
or
das
dec
adc
push
stc
mov
sbb
and
repnz
ret
and
add
or
sub
das
xchg
dec
xor
cmp
test
dec
dec
enter
push
push
or
enter
lret
lcall
pop
fnsave
push
test
push
push
sub
js
lret
dec
movsl
push
addb
nop
xchg
cwtl
pushf
mov
inc
sbb
test
mov
mov
xor
enter
and
in
xor
call
xchg
xchg
dec
clc
cld
add
add
adc
sub
inc
or
xchg
or
adc
xchg
lret
sbb
sbb
and
inc
inc
sub
sub
xor
test
sub
dec
dec
push
loope
inc
pop
cmp
add
stos
dec
or
js
dec
push
jo
cmpsb
out
sub
push
arpl
dec
xchg
ret
arpl
arpl
mov
adc
dec
daa
push
push
cmp
ret
arpl
hlt
jo
lcall
push
arpl
arpl
sub
adc
xchg
ret
arpl
cmp
loopne
jns
dec
aad
pop
jge
fisubrs
xchg
ret
pop
xor
mov
arpl
add
jo
sub
dec
lcall
sub
xchg
arpl
in
or
push
sbb
add
and
jne
xor
push
ret
xchg
arpl
test
sbbb
les
dec
jo
ret
adc
jns
mov
addl
inc
movsb
push
cmp
push
mov
test
inc
dec
push
arpl
xchg
movsb
xor
call
mov
push
push
and
leave
adc
test
movsb
arpl
sahf
push
pop
ror
fadds
cs
inc
int
and
adc
loope
inc
cmc
or
sub
inc
or
add
js
repnz
dec
push
mov
outsb
arpl
push
outsb
jp
out
and
aas
gs
lret
enter
pop
aad
test
dec
push
cmp
lret
in
push
arpl
in
shrl
arpl
je
push
aad
adc
dec
push
mov
mov
lea
push
dec
push
adc
xor
loop
xchg
arpl
push
xchg
jno
loopne
lcall
stos
pop
arpl
adc
and
insb
nop
dec
push
arpl
xor
lcall
and
ret
mov
addb
arpl
inc
lock
arpl
dec
arpl
add
sbb
andl
push
xchg
adc
sub
add
or
arpl
and
js
push
xchg
adc
xor
arpl
mov
mov
pop
sub
es
dec
push
arpl
xor
decl
shll
es
adc
stos
arpl
cld
and
add
arpl
outsb
loopne
jne
or
lods
add
imul
scas
push
arpl
shl
or
inc
and
test
sub
pop
nop
insl
push
adc
sahf
repz
cmp
pop
test
or
arpl
cwtl
inc
or
ret
xchg
arpl
push
adc
fidivrs
lret
mov
dec
push
xchg
arpl
ja
in
fwait
mov
xor
dec
mov
dec
arpl
leave
inc
flds
pop
xchg
inc
inc
pop
cmp
daa
push
fs
mov
rclb
push
dec
arpl
push
add
je
push
mov
call
push
xchg
adc
enter
in
add
dec
pop
push
xor
add
dec
arpl
jo
cmp
push
or
loope
lcall
xchg
arpl
jle
test
sub
cmp
arpl
cmp
aaa
sbb
push
add
push
xchg
adc
test
sub
inc
test
mov
xor
scas
cmp
arpl
push
dec
push
cmp
or
jg
inc
loope
fwait
stos
arpl
and
add
pusha
add
nop
cmpsb
or
jne
mov
pushf
mov
jae
mov
cs
ret
lcall
sbb
lds
or
lods
dec
jl
xor
test
pusha
clc
add
int
sub
or
xchg
sbbb
xchg
sbb
lods
push
ljmp
adcl
addr16
inc
rorl
xchg
enter
loope
mov
add
push
mov
jae
enter
ret
mov
popf
andb
add
mov
cltd
movsb
loopne
mov
xchg
insl
xchg
sub
mov
ret
adc
add
lds
incl
push
sahf
ret
jnp
and
add
ds
pushf
and
add
adc
sahf
push
or
and
loopne
sub
andb
dec
or
imul
or
testl
add
cmp
xchg
in
and
dec
push
js
dec
loope
aam
test
add
pop
push
ret
and
inc
xor
xchg
add
sub
add
dec
add
ret
ret
pop
cmpsb
cmp
add
ljmp
pusha
mov
mov
or
adcb
xchg
dec
add
stos
xchg
movsb
pusha
movb
dec
push
mov
push
js
aam
or
cli
jmp
sbb
add
aad
les
outsl
sub
loopne
sub
inc
push
add
lods
xchg
and
ljmp
or
outsb
mov
inc
push
xor
dec
push
add
or
dec
loope
cmp
and
js
daa
add
push
mov
dec
or
xor
sub
mov
and
sbb
test
and
add
dec
or
enter
cmp
push
bound
cmp
cmp
xchg
outsl
int
or
push
nop
int
sub
sub
cmp
ja
adc
filds
fst
dec
push
mov
pop
add
lea
xchg
adc
push
xchg
ret
ja
test
dec
lock
add
fmuls
dec
xchg
add
adc
ljmp
adc
push
mov
xor
rorb
pop
pop
daa
dec
loope
add
xchg
movsb
jo
add
clc
push
cmc
movsb
jo
pushf
add
xor
xchg
movsb
xor
icebp
dec
not
test
jl
dec
or
and
mov
add
push
mov
dec
add
inc
pop
imul
pop
cmp
outsb
add
dec
loope
movsb
inc
add
sub
push
sbb
imul
sarl
or
push
daa
add
sub
call
and
dec
shll
shl
daa
add
daa
dec
add
loope
xchg
adc
push
lret
test
push
push
add
adc
mov
dec
add
leave
jns
push
xchg
into
scas
cmp
add
loope
sbb
mov
daa
add
pop
xor
es
dec
add
mov
ret
adc
mov
shrl
popa
adc
inc
mov
dec
or
and
nop
dec
jecxz
xchg
inc
add
js
fdivrs
cmp
add
push
add
cmp
cmp
pushl
sbb
dec
repnz
cmpb
jo
adc
mov
and
fwait
loop
jecxz
push
push
inc
popf
add
or
hlt
stos
xchg
movsb
lock
dec
loope
scas
add
dec
add
xchg
movsb
pusha
dec
add
push
add
jo
xor
ret
add
rorl
ljmp
enter
jbe
add
sub
dec
xchg
ret
mov
loop
push
pop
dec
add
mov
cltd
add
test
push
jo
enter
pushf
and
or
push
movsb
aad
and
sti
add
push
dec
add
jle
data16
add
lcall
sbb
fdivrs
dec
add
xlat
lret
jmp
add
push
or
dec
add
cwtl
or
dec
or
in
and
fsubl
movsb
jo
outsl
pushf
and
xchg
add
in
out
push
mov
pusha
cwtl
xor
sub
ret
and
and
add
loopne
sub
jo
and
push
dec
loop
mov
dec
out
jns
xchg
and
fsubl
ret
testb
lock
call
mov
dec
push
adc
dec
xchg
ret
addb
adc
mov
jl
mov
jne
mov
mov
push
ds
mov
rorl
pop
cmp
add
push
push
pop
ret
sub
mov
mov
rorl
sarl
arpl
dec
or
es
jmp
inc
ret
xchg
aam
dec
push
dec
add
ret
insb
cmp
mov
jo
aaa
popf
and
xchg
add
push
sbb
incb
add
xor
enter
dec
hlt
dec
pop
pop
xor
loope
into
test
cwtl
test
and
enter
or
mov
adc
daa
dec
and
fadds
add
cltd
or
and
enter
and
shr
xchg
mov
call
xchg
lret
push
je
dec
pushf
lock
inc
push
cmp
pusha
cmp
cmpb
pop
xchg
ret
lock
mov
push
or
mov
mov
mov
dec
ret
push
jnp
daa
dec
add
push
out
dec
ret
pushf
sbb
jne
adc
nop
sarl
sub
lods
or
mov
add
mov
rcl
lahf
xchg
les
sbb
pushf
es
and
pushf
cmp
loopne
cmp
and
stc
mov
xchg
adc
mov
movsb
jo
jnp
dec
mov
sub
stos
xchg
add
cmp
mov
test
and
out
adc
aam
push
add
int
mov
imul
mov
shr
lock
sahf
mov
into
jmp
adc
add
les
sti
aaa
cli
xchg
movsb
lock
cmp
cmc
call
dec
add
add
add
rol
rcll
add
or
shlb
add
aaa
lods
dec
leave
in
xchg
xchg
lret
leave
push
orb
daa
xchg
push
adc
and
or
xchg
movsb
mov
sub
adc
jno
add
stos
rcrb
cmp
fildl
or
daa
mov
sub
test
pushf
pushf
pop
dec
mov
cmp
mov
in
jb
or
pop
into
leave
leave
in
and
xor
jne
popf
and
add
hlt
pushf
and
in
pop
add
dec
or
pusha
add
out
dec
lds
add
jo
adc
pushf
scas
xchg
add
push
sub
jmp
add
int3
push
xchg
mov
push
adc
sub
dec
xchg
add
xor
adcb
sti
push
js
inc
add
aam
mov
daa
dec
roll
dec
push
mov
cld
jecxz
movsl
jp
roll
ljmp
mov
mov
inc
je
adc
push
adc
pop
add
cli
pop
movsb
nop
add
mov
jmp
dec
or
sub
xlat
sub
sbb
add
add
add
and
or
sbb
add
inc
sub
add
mov
jl
adc
daa
push
push
rorb
mov
xchg
adc
fistl
push
jg
loop
mov
and
push
popf
add
inc
daa
add
fbstp
add
and
jmp
jne
adc
das
sub
idivl
jmp
loop
add
xchg
add
jecxz
jno
popf
and
into
dec
xchg
ret
pop
pop
orb
and
dec
push
inc
cmp
xchg
ret
push
and
dec
add
insb
popf
loop
sub
xor
xchg
cmpb
adc
dec
loope
add
adc
cmpsb
mov
jo
push
cmp
add
jo
dec
add
inc
loope
xchg
movsb
add
rcrl
add
loopne
fcoml
dec
add
jmp
test
ret
pop
lea
push
sub
sub
stc
in
dec
mov
movsb
pusha
xor
loope
xchg
add
and
jnp
add
push
cmp
pop
mov
push
test
ret
cmp
movb
sub
dec
inc
dec
inc
add
ds
movsl
sbb
adc
and
pushf
lret
movsb
xor
call
bound
loopne
dec
push
add
fiadds
mov
pop
pushf
and
ja
loopne
xchg
movsb
add
dec
jmp
push
into
insb
dec
xchg
add
xchg
adc
addr16
push
mov
movsl
les
xchg
movsb
jo
mulb
inc
push
push
popa
mov
ja
dec
add
xor
cmp
repnz
movsb
jo
ss
ljmp
cs
add
inc
imul
pushf
cltd
or
ret
push
pop
loope
xor
dec
sub
pop
ja
add
sbb
push
sub
sub
cmp
and
push
cmp
xchg
movsb
add
add
cmp
push
sbb
lds
pop
stc
popf
and
xlat
movsb
dec
add
mov
sbb
xchg
movsb
jo
add
sbb
push
movsb
add
into
sbb
dec
push
cmp
and
or
jbe
div
loop
scas
inc
hlt
push
sbb
push
mov
add
cmp
adc
dec
popa
and
fsubr
add
je
loope
out
add
jmp
add
add
mov
add
fs
or
and
daa
dec
loope
add
dec
rorl
xchg
add
mov
jmp
loopne
add
outsb
inc
daa
loop
popa
and
mov
fwait
push
stc
fwait
dec
add
push
or
xchg
jne
push
cmp
movsb
pusha
add
adc
dec
and
adc
outsb
ja
inc
xchg
adc
xchg
add
cmp
pop
negb
dec
and
jb
add
bswap
cs
faddl
dec
loope
bsf
add
enter
daa
add
in
je
and
mov
adc
ret
add
dec
add
push
aad
loopne
add
rolb
mov
shrb
dec
push
mov
push
and
add
loopne
test
push
mov
fucomp
test
rorb
aas
sbb
and
add
jo
inc
and
ljmp
xchg
movsb
add
jno
adc
mov
xchg
adc
mov
jno
cld
aad
call
adc
dec
rorl
mov
add
add
insb
sub
cs
cmp
data16
cmp
add
test
push
dec
xchg
ret
add
dec
loope
mov
push
push
movsl
les
or
xchg
cmpb
fdivrp
or
or
adc
push
sub
ds
sarl
push
pop
push
xor
repz
mov
sbb
int
cli
push
daa
push
push
pop
push
add
iret
jnp
lahf
push
cmp
push
mov
repz
push
insb
mov
lcall
ss
enter
jnp
push
sbb
push
jnp
mov
or
loop
pop
cmpsb
es
cmp
jnp
xor
push
adc
shll
or
jo
add
cmp
dec
push
add
adc
stos
jb
or
adc
rorb
aad
and
sub
add
sub
loopne
jmp
adc
sub
dec
add
aam
or
sub
stos
push
andl
add
dec
or
daa
dec
popa
andb
add
adc
fisubs
cmp
adc
mov
adc
sbb
cmp
and
add
movb
movsb
loopne
les
pop
cmpl
mov
or
cmp
bound
daa
dec
add
sub
cmp
and
adc
movsb
jo
dec
xchg
sbbb
push
xor
sub
and
jnp
add
push
enter
pushf
add
dec
add
push
daa
dec
inc
push
add
adc
icebp
sub
add
sub
lahf
inc
in
mov
pop
in
cmpsl
je
adc
in
add
nop
pinsrw
jo
adc
into
std
add
aam
push
inc
jns
ret
or
popf
and
pop
jae
xchg
movsb
loopne
xor
mov
add
jmp
inc
daa
dec
add
inc
jno
adc
mov
lcall
into
arpl
cmpsb
out
lea
pop
mov
daa
dec
add
sbb
lds
add
xchg
ret
cld
or
ret
movsb
pusha
ss
popf
mov
ret
xchg
add
add
insb
xor
mov
and
add
faddl
inc
or
push
int3
sahf
cmp
push
add
xor
aad
jo
xchg
add
add
dec
add
pushf
add
or
loop
add
and
dec
add
add
ds
adc
and
fwait
int
push
add
fsubl
cs
adcb
sub
dec
add
or
pop
add
add
and
fdivrl
ss
dec
push
mov
or
push
jo
cmp
shrl
dec
add
add
xchg
adc
pop
add
and
fcompl
add
or
orl
pushf
and
mov
roll
movsb
lock
movsb
jo
xchg
add
mov
gs
xchg
add
adc
dec
or
push
add
cmp
xor
int
xchg
push
push
mov
mov
push
sti
cmpsb
sbb
dec
push
add
and
fmuls
and
adc
and
mov
ret
aam
push
mov
clc
insb
bound
addb
xchg
adc
pop
fiaddl
popa
inc
inc
or
mov
daa
dec
add
and
rorl
dec
ror
inc
sbb
fcomps
sbb
adc
add
or
nop
stos
ds
cld
pop
sbb
movb
xchg
add
add
incl
popf
and
cmp
leave
mov
imul
loop
jne
adc
add
add
add
sub
clc
sahf
aaa
jne
adc
lock
add
lods
mov
ret
jmp
sub
mov
frstpm(287
cmp
add
and
jnp
mov
dec
push
pop
in
add
dec
or
cmp
and
shrl
inc
hlt
inc
adc
push
pushf
add
add
xchg
movsb
loopne
add
daa
dec
popa
mov
aaa
addr16
add
push
sbb
add
sbb
mov
rorb
sbb
add
fwait
xor
xor
xchg
fs
daa
dec
popa
add
or
bound
dec
sbb
fnsave
pushf
popf
and
mov
cmp
or
dec
sarl
add
js
jnp
cmp
push
sbb
push
push
dec
jmp
jne
push
daa
dec
add
lds
dec
mov
mov
sbbb
push
add
add
movsb
nop
and
xchg
movsb
xor
addl
sub
and
cmp
xor
daa
sbb
call
adc
cmp
and
fdivl
sub
fisttpl
call
jno
adc
lds
adc
mov
test
add
cmp
sbb
out
shr
and
insb
and
xlat
dec
arpl
lahf
add
pop
mov
xchg
add
add
testl
aaa
pushf
and
add
sbb
dec
or
cwtl
xor
dec
or
sub
fistpll
inc
or
or
pop
aas
jne
int3
push
sub
daa
dec
add
add
dec
push
js
add
in
jmp
cltd
cmovp
adc
daa
dec
loope
es
add
shlb
mov
jle,pn
addb
add
add
loopne
sub
pop
add
scas
xchg
movsb
jo
add
inc
daa
dec
loope
add
ret
xor
add
xor
ret
mov
lret
mov
add
daa
out
pop
fidivs
fcoml
je
adc
pushf
jo
adc
cwtl
add
sbb
int
loopne
add
jno
add
pop
test
sub
rorl
dec
or
jne
jmp
add
in
add
add
cmc
push
pop
inc
je
add
dec
xchg
sbbb
cmc
bound
push
daa
add
rcrb
and
xchg
movsb
call
jb
and
fsubl
fldt
das
add
add
mov
inc
add
lods
adc
push
dec
xchg
ret
pop
les
dec
or
jmp
js
or
add
jmp
and
fwait
cmp
es
rolb
popf
add
push
les
adc
pop
movsb
xor
test
pop
stos
xchg
add
add
sub
call
jne
adc
fldenv
lock
adc
fcoml
add
inc
ljmp
inc
in
clc
and
mov
loopne
add
jnp
and
ret
or
inc
enter
daa
dec
add
scas
xchg
movsb
and
add
movsb
mov
cwtl
mov
rorb
shll
xor
mov
adc
inc
fs
aad
pop
notl
fcompl
push
cmp
pop
push
adc
mov
cs
xchg
ret
outsb
jmp
add
mov
clc
push
or
dec
push
cmp
dec
push
pop
sub
or
les
cmp
mov
dec
xchg
ret
push
add
mov
push
fmull
bound
sub
add
mov
push
lahf
addb
adc
xchg
cmp
subb
push
jmp
push
ret
push
cmp
cmp
add
xchg
repnz
mov
aam
push
add
daa
dec
rorl
movsb
mov
call
mov
add
ret
and
movsb
pop
ja
push
sbb
dec
xor
cs
xchg
ret
dec
ret
lds
sub
adc
loopne
repz
fwait
ljmp
popf
and
add
sub
add
push
call
add
xchg
adc
jne
jns
jo
jo
nop
jl
sbbb
push
jo
dec
add
push
cli
dec
add
int3
sbb
cmp
testb
xchg
pusha
add
add
dec
xchg
add
bound
add
xchg
adc
add
addr16
add
xlat
cmp
inc
fmull
cwtl
mov
aam
daa
dec
shrl
mov
dec
or
daa
dec
sahf
and
add
sbb
lahf
mov
cmp
pop
mov
sub
sbb
int
and
lods
push
jp
mov
sbb
aas
and
and
xor
pop
jge
add
jo
push
adc
xorl
lds
add
or
and
add
xchg
add
gs
adc
add
sbb
xchg
movsb
loopne
add
pushf
and
mov
dec
or
roll
mov
mov
repz
and
es
jnp
daa
dec
add
pop
push
pushf
and
add
mov
xchg
add
xchg
ret
add
and
adcb
movsb
jo
cmp
add
sbb
dec
xchg
ret
sbb
movsb
lock
and
popa
xor
xchg
and
mov
fwait
popa
dec
push
dec
adc
daa
dec
add
dec
daa
ss
add
int3
lcall
bsr
sbb
movsb
sub
fmuls
inc
jmp
or
call
sbb
xchg
movsb
jo
cmp
mov
mov
sbbb
cwtl
stos
jbe
dec
xchg
add
pushf
ret
dec
or
into
mulb
dec
loope
add
cltd
push
mov
dec
or
add
xchg
lret
shrl
call
cmp
sub
dec
add
sub
pop
lods
loope
dec
or
je
dec
xchg
ret
rorb
mov
push
ret
dec
xchg
stos
repz
push
mov
lock
jnp
dec
add
cwtl
pusha
pop
call
mov
mov
xchg
add
xchg
add
mov
xchg
add
sbb
adc
or
or
add
nop
push
dec
and
in
pop
daa
add
sub
es
pusha
loope
add
xor
push
jne
je
add
and
push
mov
add
add
dec
or
je
push
xchg
adc
phaddsw
in
adc
or
xchg
add
dec
inc
add
xor
or
add
dec
or
sub
cmp
fucomp
mov
addl
dec
and
call
adc
dec
sbb
lods
in
or
je
add
insl
add
test
lcall
cwtl
mov
add
ret
and
sub
add
add
scas
ss
dec
push
push
pushf
and
add
xchg
sub
movb
mov
lds
enter
bound
shll
xchg
add
and
add
dec
popa
sub
and
mov
lahf
ror
int3
pop
pushf
add
loop
lock
sub
mov
inc
add
mov
inc
daa
add
or
clc
adc
sbb
jo
dec
push
push
arpl
test
ja
and
pop
sub
add
add
fisttpl
mov
mov
addb
and
lds
add
dec
rorl
cmp
sub
adc
and
mov
shr
out
add
jo
test
in
adc
add
pop
push
rorb
add
scas
push
push
mov
push
ret
das
add
xchg
icebp
or
test
mov
ds
add
dec
add
mov
jb
fsubl
pop
sbb
push
adc
rolb
adc
fcompl
fsubrs
and
daa
and
call
gs
not
pop
ret
dec
add
xchg
add
por
dec
push
add
bound
lret
add
add
int3
mov
jo
sbb
mov
ds
jno
add
out
xchg
movsb
jo
neg
push
xchg
adc
addb
dec
dec
shll
add
push
daa
add
adc
add
jg
and
in
add
dec
push
dec
addl
mov
cltd
addr16
push
xchg
dec
add
adcl
push
jl
and
jmp
loopne
add
fnstcw
mov
or
jl
dec
repnz
or
xchg
int3
add
push
add
cmp
add
push
bound
add
mov
cmp
ret
pop
dec
popf
add
adc
pushf
and
pop
dec
add
rclb
push
or
jno
add
or
add
mov
mov
push
aas
dec
lahf
addr16
lret
dec
lea
dec
loope
lcall
out
into
push
mov
je
dec
push
jo
adc
or
popf
and
add
add
jl
rorl
int3
or
loopne
daa
add
movsl
adc
daa
dec
loope
add
rorb
movb
mov
jnp
add
fisubrl
test
ret
and
mov
xor
imul
add
dec
loope
out
jmp
xchg
movsb
jo
daa
add
jns
mov
inc
sub
pushf
in
jo
loopne
or
add
and
repz
and
or
and
pushf
mov
xchg
add
dec
loope
mov
and
faddl
jno
movsb
jo
call
mov
pushf
adc
loopne
sub
sbb
mov
bound
add
add
pop
pushf
and
mov
movsb
add
lods
xchg
movsb
pusha
incb
and
cwtl
add
ja
pusha
adc
add
add
push
pop
aad
push
cmp
sarl
mov
adc
push
fisttpll
pop
xchg
ret
nop
ret
inc
stos
push
push
and
push
xchg
xor
pushf
out
sahf
dec
pop
je
lods
loope
or
push
add
dec
add
adc
daa
dec
popa
xor
rolb
dec
popa
je
add
dec
push
cmp
movsb
mov
aam
sub
add
mov
out
pushf
and
pop
mov
push
or
add
mov
sub
adc
sub
loope
xchg
movsb
mov
xlat
add
popa
addb
scas
daa
dec
rcll
push
add
push
add
mov
daa
add
or
lods
ljmp
sub
ljmp
add
mov
stos
addb
push
lret
mov
push
xchg
daa
push
pop
mov
insl
mov
pinsrw
and
cmpsl
cmp
xchg
push
test
jns
stc
add
dec
push
add
cwtl
sub
incb
cmpb
ret
call
add
sbbb
testl
jne
adc
jg
dec
xchg
ret
jo
movsb
and
jno
xchg
add
dec
pop
testl
adc
cmp
add
pop
jo
js
jb
sbb
dec
xchg
ret
push
pop
mov
rorl
dec
dec
daa
dec
popa
add
cmp
test
pusha
jl
loopne
add
aas
push
jno
cmp
xchg
adc
cmp
xlat
dec
add
jno
and
push
ja
adc
roll
dec
push
push
or
adc
roll
movsl
cld
xor
or
movsb
je
pop
arpl
cwtl
sbb
dec
add
sub
and
dec
sahf
cmp
dec
add
ja
push
int
repz
dec
or
cmpb
dec
or
dec
add
mov
cmp
rep
outsl
jmp
hlt
mov
pop
adc
in
jg
adc
sub
mov
adcl
mov
dec
xchg
ret
fistpll
or
add
notl
std
jno
jo
mov
aaa
jmp
movsb
popf
and
dec
xchg
ret
imul
or
sub
les
cmp
xor
pushf
sub
cmp
cmpsl
xchg
dec
xchg
ret
js
ret
sub
decl
sbb
dec
xchg
add
add
or
lret
and
add
movl
insl
pop
cmp
aaa
mov
dec
or
add
xlat
jp
xor
and
xor
or
daa
dec
add
rorl
ljmp
jmp
daa
dec
add
insb
pushf
and
fwait
aad
push
add
push
push
popf
add
aam
push
sbb
inc
push
aaa
stc
cmp
xor
lods
push
jo
sbb
or
adc
push
push
cmp
xchg
cmpb
rorl
imul
imul
andl
sahf
insl
xchg
adc
jae
or
jo
add
sbb
xor
xor
and
les
mov
mov
es
add
dec
loope
add
mov
ret
push
push
movsb
pusha
phaddsw
js
jmp
xchg
add
push
xchg
adc
fsubl
mov
hlt
mov
mov
dec
rorb
add
xadd
add
sub
add
cmpsb
xor
out
mov
rorb
es
xchg
ret
repz
js
cmpsb
es
das
pushf
jecxz
dec
add
out
cmp
sbb
mov
insl
push
add
pushf
and
add
ljmp
sbb
lds
inc
push
imul
and
add
dec
or
mov
dec
or
addl
add
divl
aaa
rcrl
jae
cmpl
and
lds
xchg
ret
rolb
pop
cmp
mov
push
js
add
mov
pusha
jp
daa
dec
add
sub
jo
add
addb
add
mov
out
add
and
addl
add
scas
mov
mov
cmp
xchg
ret
popf
add
pop
xchg
add
imul
lea
repnz
dec
push
mov
pop
mov
les
cmp
pushf
les
js
pop
pushf
and
jb
mov
pop
sub
and
sub
add
inc
lods
insl
xor
cmp
mov
jle
psubw
mov
add
and
stos
xchg
movsb
add
pop
cmp
fs
push
add
inc
xlat
dec
push
add
popf
dec
xchg
andb
xchg
sbbb
or
mov
int
lods
cmp
daa
cmp
ret
enter
inc
fwait
adc
fwait
iret
enter
push
sahf
shlb
bound
pop
mov
mov
out
cmp
int3
cmp
push
push
out
push
cmp
adc
rorl
dec
roll
js
add
repnz
popa
ljmp
adc
mov
add
cmpsb
cs
rolb
fistps
or
or
adc
push
add
aas
sub
stos
sub
or
ljmp
add
inc
adc
js
push
inc
add
mov
or
add
dec
or
cwtl
add
jbe
add
jae
add
adc
and
cld
lock
rorb
and
pusha
sub
xchg
jb
push
xchg
mov
enter
xlat
push
js
and
xchg
adc
sub
test
push
sub
shll
imull
or
push
jo
out
jecxz
subl
dec
add
sub
mov
mov
lods
push
mov
dec
loope
js,pn
movsb
jo
xor
insb
es
sbbb
xor
outsb
bound
add
and
ja
xchg
add
es
popf
lcall
xorb
pusha
es
sbb
sbb
aaa
ret
cmpb
daa
cwtl
dec
or
repnz
push
js
add
or
lret
aaa
rorl
push
xor
and
fs
sti
push
sbb
sti
sub
in
push
add
enter
xlat
loope
leave
add
and
orb
enter
jl
xor
in
dec
pop
push
test
add
fneni(8087
mov
mov
add
push
arpl
sub
call
xchg
xor
adc
fs
gs
adc
pop
pusha
xor
and
push
adc
xor
popf
scas
add
or
xchg
add
cmpb
add
pushf
das
add
in
mov
faddl
xor
or
and
roll
int3
add
xor
shll
push
xor
add
dec
add
xchg
adc
add
dec
push
mov
pop
add
dec
rcrl
and
mov
pushf
lcall
clc
xor
inc
les
movsb
mov
push
les
in
push
int3
and
add
xorb
outsb
xchg
js
xchg
add
inc
fmull
xchg
adc
mov
pop
and
xchg
adc
dec
aad
out
or
nop
inc
adc
xchg
add
or
fsubrs
add
sbb
dec
push
mov
push
push
aad
inc
adc
test
or
mov
pop
repnz
cltd
movsb
add
xchg
ret
xchg
adc
popl
push
popa
xor
xor
movsb
js
inc
xor
xchg
ret
add
pop
add
adc
xchg
adc
lock
add
cld
sbbb
or
xchg
add
loopne
js
fnstsw
dec
add
xor
scas
inc
mov
sarb
xchg
add
adc
in
call
loopne
lcall
add
xor
fwait
dec
push
push
mov
add
popa
or
notb
push
int
cltd
movsb
jo
fucom
adc
test
xchg
add
shrl
dec
add
mov
add
jp
std
lock
cmp
lret
and
add
adc
cmpsl
test
add
mov
frstor
or
test
sub
push
xchg
adc
xor
add
xchg
adc
fbld
add
rorl
pop
add
cltd
movsb
jo
add
cmp
fwait
push
jge
sub
xchg
adc
je
cmp
add
sar
inc
jp
rorb
cmc
imulb
xchg
adc
inc
mov
add
dec
push
mov
add
sub
add
es
mov
sub
add
xchg
adc
dec
add
jp
nop
nop
out
xchg
add
dec
push
js
add
int
push
pusha
aas
adc
jl
int3
and
add
cmpsb
sub
sub
add
fiaddl
push
int
add
xchg
cmpb
mov
and
add
add
popl
int
add
add
or
andb
rorl
stos
add
or
cmp
es
cltd
movsb
add
xchg
ret
dec
or
loopne
aam
cmpb
push
pop
scas
add
js
xchg
adc
in
dec
jl
jl
dec
add
movsl
pusha
sub
add
dec
loope
incl
sub
popa
xor
out
xor
mov
repz
mov
lcall
mov
sahf
out
jnp
stos
ret
mov
mov
popl
ja
cmp
mov
int
test
ja
add
add
inc
sbb
adc
add
mov
sub
bound
sub
add
sbb
shll
push
in
cmp
out
sub
cmpsl
stc
cmp
test
int3
or
jns
popa
jbe
mov
out
fcomip
or
push
xor
loopne
imul
movsl
aam
fildl
stos
cwtl
movsb
lock
cwtl
movsb
mov
arpl
pop
ret
or
in
fnstsw
and
mov
out
jecxz
jmp
cwtl
movsb
ret
int
bound
sub
add
lret
aam
and
icebp
mov
sub
push
ret
insb
xor
icebp
jo
and
and
nop
hlt
jo
cwtl
movsb
ret
mov
sbb
ret
movsl
push
bound
xchg
adc
cmp
fstps
ret
aaa
sbb
dec
push
js
and
cwtl
movsb
jo
adc
popa
sbb
mov
pop
or
sti
pusha
sub
sbb
call
adc
fcoms
bound
ret
pop
repnz
xchg
pop
xchg
call
xchg
inc
sub
pop
mov
push
ret
xchg
ret
mov
xchg
or
clc
mov
cmp
sbb
outsl
andb
mov
adc
adc
cs
stos
add
repnz
cmp
fnstenv
jge
xor
ret
cmp
aad
ret
sub
dec
push
js
ret
sbb
cmp
aas
pusha
das
and
ret
mov
cwtl
movsb
ret
push
filds
bound
and
ret
enter
dec
or
dec
mov
das
adc
sbb
ret
dec
fldt
fcoml
adc
sub
ret
and
xchg
ret
pop
scas
jecxz
mov
mov
add
shrb
testb
pop
xor
xorb
adc
and
fists
cld
push
inc
inc
sbb
sub
adc
pushf
mov
or
or
inc
inc
mulb
sbbb
ret
inc
test
and
xchg
ret
rcl
movsb
loope
dec
push
ret
lds
or
xor
mov
add
dec
dec
push
js
ret
push
dec
push
lock
or
ret
adc
jge
cwtl
movsb
jo
ret
dec
or
adc
loopne
mov
rorb
bound
dec
call
ficoml
and
ret
xchg
cwtl
movsb
lock
lods
pop
ret
incb
lods
push
adc
mov
pop
push
call
adc
inc
fwait
and
or
adc
and
insl
repz
ret
xchg
adc
shlb
cmp
cmp
sbb
call
pop
ret
cmp
push
inc
lods
shlb
cltd
sub
outsl
stc
push
and
es
vrsqrtss
jne
popa
xor
dec
ret
mov
ret
mov
pushf
xchg
mov
adc
movsb
out
arpl
dec
xor
dec
inc
sub
pusha
es
push
js
cmpsl
mov
stos
add
cwtl
dec
or
sub
mov
xor
loopne
pusha
add
xor
je
test
xchg
pop
jo
add
subb
loope
add
xor
iret
add
aad
jle,pn
nop
mov
or
xor
mov
movsb
mov
mov
push
mov
mov
sub
add
adc
add
mov
pop
xor
fs
movsb
xor
push
sbb
sbb
test
and
lret
bound
push
and
insb
pop
xor
push
adc
or
int3
mov
adcb
add
and
cmp
add
dec
rorl
mov
ja
stos
push
or
sub
mov
xchg
ret
test
test
add
adc
and
scas
fnsave
xchg
adc
inc
dec
push
dec
sar
adc
adc
fistps
jne
ret
add
add
je
xchg
adc
data16
and
cmpsl
into
add
dec
rcrl
add
outsl
bound
ret
add
xchg
pop
insl
shll
sub
adc
adc
add
mov
mov
cmpl
dec
push
add
andb
jbe
or
stos
or
aad
fadds
cwtl
dec
add
mov
pusha
sub
shll
push
push
ret
and
insl
adcb
xchg
add
or
adc
cmp
jmp
rorl
add
outsb
aaa
inc
xor
fnstcw
dec
or
dec
push
xor
mov
adc
les
and
adc
push
and
in
clc
and
jmp
pop
int
jmp
xchg
ret
dec
or
push
addr16
fndisi(8087
lcall
sbb
xchg
ret
dec
loope
xchg
mov
adc
add
dec
popa
jne
add
add
add
add
pop
push
xor
hlt
sub
mov
mov
lcall
rclb
idiv
xor
add
mov
adc
movsb
add
adc
shll
in
movsb
and
add
cltd
add
sar
cltd
movsb
jo
pop
sbb
popa
jno
test
lods
xchg
jns
xor
js
xor
pop
xor
add
xchg
ret
and
sub
lock
int3
push
roll
or
push
roll
adc
ja
das
xchg
and
ret
mov
add
loopne
and
sub
cmpb
dec
add
xchg
add
sub
add
movsb
and
and
sub
dec
int3
and
addb
cwtl
dec
or
orb
lcall
ret
add
cmp
rol
andb
add
xor
mov
xchg
jno
xor
add
icebp
fcompl
add
ret
or
cmp
jns
adc
lret
adc
arpl
pop
push
xchg
ret
add
notl
add
out
lcall
xor
adc
adc
mov
xchg
mov
adc
sub
add
push
xorb
dec
rcll
ret
push
add
es
pop
int
test
hlt
test
ret
xor
push
sahf
mov
dec
push
mov
mov
out
les
cmp
or
sub
add
and
inc
and
xchg
xchg
adc
cmp
fwait
xor
add
pushf
test
scas
inc
xor
add
and
add
dec
pushf
lcall
sub
adc
outsl
sbb
pop
cwtl
dec
or
mov
popl
out
push
adc
pusha
add
push
pop
sbb
pop
int3
and
add
adc
fsubs
pusha
add
shlb
mov
adc
sbbb
dec
loope
add
sub
dec
sub
test
imul
mov
add
pop
sub
negb
push
jecxz
lcall
int3
and
mov
cltd
movsb
jo
push
mov
add
cmp
dec
add
add
lods
div
pop
call
pop
cmp
dec
push
add
pop
dec
push
mov
or
sub
add
mov
mov
inc
mov
or
push
cs
sub
inc
mov
inc
out
adc
bound
sub
dec
or
xor
adc
test
sub
popa
jno
and
mov
dec
dec
xor
xlat
dec
push
sbb
add
dec
push
mov
cmp
insb
sub
mov
push
xchg
ret
add
mov
jno
or
or
lcall
adc
pop
andl
xchg
addb
dec
or
sub
add
xchg
adcb
dec
or
push
shll
icebp
shrb
loope
add
sub
dec
inc
xor
sub
push
add
dec
mov
add
rorb
add
xchg
adc
repnz
add
cmpsl
adc
ja
jns
dec
popa
inc
push
and
adc
and
inc
int3
add
pusha
push
push
lds
test
inc
add
sbb
mov
ret
add
xchg
add
dec
add
mov
cltd
movsb
add
add
mov
jecxz
int
add
sbb
cmp
pusha
add
add
add
lcall
dec
loope
add
xchg
addb
add
ja
ss
xchg
dec
or
cwtl
add
pop
sbb
adc
lcall
xor
stos
cmpsl
cmp
loopne
add
inc
cld
dec
push
add
lahf
cmpsl
mov
leave
cltd
movsb
add
add
and
pusha
js
dec
add
cltd
movsb
add
mov
push
sub
add
xchg
ret
add
pusha
push
add
movsb
add
shlb
dec
pop
add
inc
movsb
mov
mov
std
mov
xchg
add
xor
add
add
sub
test
cmp
int
lcall
movsb
lock
lods
movsb
cmpps
cltd
add
add
mov
push
sbbl
and
add
loope
sbb
iret
mov
push
ror
loopne
cltd
movsb
jo
add
andb
pushf
mov
xchg
add
loopne
push
inc
add
mov
movsb
add
dec
loope
add
dec
loope
add
dec
push
lock
add
dec
rorl
dec
ljmp
mov
les
mov
or
dec
add
mov
cmpsl
lea
sub
int3
and
add
dec
loopne
dec
push
sbb
adcl
push
adc
dec
inc
subl
push
lods
sahf
sub
movsb
jo
sbbb
jmp
stos
cltd
add
sub
fwait
dec
add
adc
push
cltd
movsb
jo
add
sub
andl
bound
rsqrtps
aad
cltd
add
dec
ja
and
setb
lea
xchg
xor
push
orb
test
add
dec
int3
sbb
lcall
xchg
adc
dec
mov
add
into
add
pop
xor
test
sub
xor
ret
pop
icebp
pop
dec
xchg
std
out
clc
inc
lcall
xor
cltd
movsb
jo
add
mov
or
push
xchg
add
add
or
inc
add
dec
sbb
dec
sti
add
add
fwait
shrl
call
mov
add
in
call
add
adc
cmpsb
add
or
movsb
xor
aad
sbbb
cltd
add
out
and
xor
pop
xor
cltd
lcall
add
mov
lock
loope
cwtl
dec
add
fcmovbe
inc
xor
mov
js
movsb
pusha
rolb
cltd
add
add
cltd
movsb
pusha
add
out
out
jbe
mov
push
movsb
jo
dec
add
jo
mov
jno
cltd
movsb
add
syscall
cmpsl
cmp
icebp
add
add
cwtl
jle
dec
xor
fadd
dec
push
add
sub
sub
les
fisubs
sub
mov
ficoml
cmp
mov
xchg
jns,pn
sbb
rolb
cltd
movsb
loopne
or
cmp
shll
add
lcall
cmp
sbbb
pusha
push
add
and
dec
int3
and
mov
add
imul
or
inc
or
adcb
int3
sub
mov
pusha
add
xchg
ret
call
loop
inc
es
xchg
adc
ret
dec
xchg
sub
xor
pop
fwait
call
add
in
pop
adc
negl
sarb
xchg
add
sub
aad
and
ret
push
pop
sbb
ljmp
mov
adc
bound
add
add
xor
xor
aad
sub
mov
dec
or
sbb
and
add
dec
push
sbb
add
sbbb
dec
or
sub
push
add
pop
or
inc
xor
pop
add
sub
jo
nop
pop
mov
add
mov
movsb
add
cwtl
mov
add
adc
stos
or
dec
inc
insb
dec
in
add
inc
xor
addr16
movsb
jo
pop
jmp
andb
bound
je
xor
andb
je
stos
cltd
movsb
add
insl
or
add
sub
push
sub
add
icebp
shrb
jmp
fisubl
dec
repnz
dec
push
push
sub
rcr
repnz
pop
out
test
bound
add
sub
int
add
inc
call
add
sub
add
xchg
or
pop
or
scas
xchg
jns
int3
or
cltd
add
dec
or
inc
xchg
sbb
add
inc
sub
popa
addb
push
adc
les
inc
mov
adc
or
xchg
adc
bound
lock
add
inc
filds
dec
and
jnp
dec
or
add
push
adc
and
sub
add
bound
ja
xchg
fdivl
sub
sub
in
cwtl
dec
or
add
testb
xor
es
loope
xor
sbb
bound
xchg
xchg
mov
or
stc
pop
mov
lcall
xor
movsb
lock
inc
jmp
cmpsb
cltd
add
xchg
add
dec
push
cmp
leave
les
mov
sbb
sbb
add
movsb
loopne
int
testl
mulb
adc
dec
shlb
add
loop
dec
or
mov
add
xor
sub
xor
pushf
add
into
cmp
lea
add
and
add
scas
add
loopne
sub
dec
push
in
imul
or
push
cmp
mov
lds
xchg
inc
inc
shrb
add
or
xchg
add
dec
sbbb
mov
inc
outsb
pusha
sub
fsubs
inc
xor
add
movl
cmp
and
mov
mov
adc
dec
dec
or
mov
lcall
inc
or
lock
cmp
sti
add
xor
pop
push
xor
pop
cltd
movsb
and
ret
xchg
sub
addb
mov
add
in
adc
and
cli
test
mov
jg
sub
inc
add
sbb
push
test
jle
or
mov
dec
push
jo
add
lcall
push
add
xchg
ret
add
add
push
js
lds
push
pop
push
sbbl
addb
sub
push
add
dec
and
lcall
add
sbbb
imul
movsb
xor
cltd
movsb
jo
inc
rorl
add
ljmp
pusha
push
popw
fadds
push
in
cltd
movsb
add
jae
cmp
xor
stos
sub
inc
push
xorl
movsl
sbbl
sub
cmp
sbb
test
aas
test
jns
mov
stos
cltd
movsb
add
mov
int
addb
xor
andb
faddl
push
js
imul
clts
lds
sub
dec
push
cmp
sub
jl
shrb
and
cmp
cltd
ret
dec
and
cmp
cmp
jle
sub
sub
lods
out
bound
push
or
leave
sub
add
sub
sbb
leave
add
fwait
pop
loope
add
test
cltd
push
js
inc
xor
adc
xchg
adc
or
and
mov
and
push
xchg
pop
aad
arpl
adc
inc
les
mov
xchg
lret
xchg
adc
push
and
sub
push
and
and
aaa
push
and
and
adc
sub
je
imul
bound
fcompl
loope
and
cwtl
movsb
loopne
and
or
subb
lds
xchg
andb
fisttpl
addl
dec
and
adc
mov
orb
or
test
add
xchg
adc
push
test
sub
sub
rolb
mov
and
cmc
xor
push
pop
and
pop
add
mov
pop
xor
adc
inc
lock
out
and
inc
xor
ret
and
sub
movsb
cmp
and
xor
lds
pusha
mov
adc
dec
push
negb
mov
dec
push
mov
add
and
cmp
and
sub
and
xor
xor
and
popa
xor
and
xor
xchg
adc
xchg
adc
rcrb
and
incb
nop
cmp
ja
and
sbbb
push
mov
enter
sub
cmp
insb
and
mov
loopne
cmpsb
sub
cmp
sbbb
sbb
bound
inc
push
sbb
sub
imul
and
pusha
inc
lds
or
or
cld
enter
mov
fisubrl
fmull
ljmp
loopne
xchg
adc
mov
dec
push
and
ret
and
push
loopne
lcall
or
and
or
inc
sub
cmp
and
dec
push
and
and
jle
xchg
adc
sbb
push
adc
out
dec
loope
cwtl
and
rorl
mov
push
xor
int
aaa
enter
add
push
test
jo
lds
xor
sbbb
xchg
ret
and
sub
jge
test
xor
sbb
dec
scas
cwtl
movsb
and
adc
xor
inc
and
jnp
and
les
test
add
adc
aam
inc
mov
lret
and
sub
fcoml
mov
test
out
ja
pop
mov
cmpb
cmp
push
bound
inc
xor
and
cmp
imul
dec
pop
les
fcoml
das
insb
and
mov
andb
cwtl
movsb
lock
mov
adc
and
push
aaa
push
call
dec
or
in
nop
push
outsb
movsl
and
sub
mov
add
add
les
in
dec
push
fsubs
sbb
xor
adc
into
mov
push
push
pop
sub
xchg
adcb
adc
bound
popf
adc
sbbb
in
dec
xchg
pop
fistl
in
push
push
bound
push
js
push
xchg
adc
mov
push
and
and
mov
and
adc
dec
loope
and
and
sub
push
xor
sub
push
sub
dec
push
mov
dec
loope
pop
cld
and
sub
pop
adc
jns
les
and
stos
test
movsb
loopne
bound
cltd
and
stos
cwtl
and
dec
and
push
jo
and
faddl
and
and
adc
dec
and
xchg
xchg
loope
add
xorl
dec
push
mov
and
sub
push
mov
sahf
cmp
xchg
or
xchg
inc
and
and
and
sbb
pusha
and
jp
js
adc
cwtl
faddl
call
les
push
insb
pop
adc
addb
adc
rcll
les
adc
xor
lret
or
outsb
and
sub
pop
inc
jno
xchg
adc
mov
mov
pop
mov
inc
and
add
je
push
ret
and
andb
test
mov
mov
add
int3
push
addl
or
mov
and
les
dec
or
and
dec
roll
push
mov
and
push
cmp
xor
mov
imul
and
push
sbb
sub
bound
dec
or
cld
loopne
adc
and
ret
and
stos
cltd
dec
sub
movsb
inc
xlat
or
and
and
and
sub
int3
or
shll
and
mov
xchg
adcb
mov
stos
bound
sbb
inc
dec
push
and
inc
mov
sbb
mov
adc
xor
inc
xor
int
enter
jo
and
movsb
pusha
cwtl
and
movsl
cwtl
and
and
lret
or
adc
and
jns
xor
cmp
pop
popa
cmp
mov
cmpsl
fsubp
and
in
les
test
or
bound
out
xor
and
cwtl
movsb
loopne
and
out
daa
outsb
cmp
sbb
es
mov
add
mov
xchg
adc
inc
and
pop
sub
push
push
and
sbbb
movsb
xor
sub
sub
and
xor
mov
and
cmp
cwtl
movsb
pusha
dec
and
and
rcll
fstpl
push
and
out
jae
adc
adc
sub
xchg
adc
fsubs
ret
call
ffree
mov
mov
test
xor
rorb
lea
sub
sub
out
mov
adc
daa
add
jnp
add
add
pop
les
mov
inc
or
xor
mov
or
xchg
and
add
and
pop
les
adc
sub
mov
jb
out
jns
loopne
sub
and
das
sbbb
xchg
adc
jo
xchg
adc
cmp
jbe
dec
sarl
lret
jmp
and
and
adc
scas
and
cmp
jns
out
mov
jge
sub
insl
arpl
sub
pop
and
fcoms
dec
mov
or
mov
sub
mov
push
xor
in
push
dec
push
and
xor
xchg
adc
rolb
bound
pop
and
or
mov
xor
mov
fisttpll
and
std
and
xchg
adc
jns
and
movsb
loopne
lds
mov
mov
les
lds
dec
loope
adc
sbb
add
and
sub
fcomip
push
inc
push
pop
xchg
dec
shll
sub
inc
xor
xor
sub
and
movsl
out
sbb
xor
and
jl
sub
sub
or
cmp
xchg
adc
andb
inc
lds
cmp
loopne
xchg
ret
and
js
andl
push
and
and
mov
clc
and
and
mov
and
dec
or
jo
stos
es
xchg
and
xor
push
and
pop
jl
sub
inc
and
jae
adc
and
and
and
adc
and
popa
and
fsubrs
or
sub
lea
adc
adc
sub
ds
pushf
pop
cmp
ret
mov
and
shlb
ljmp
push
les
in
push
add
imul
sub
and
icebp
adc
and
icebp
lret
testl
rcll
add
or
dec
and
dec
and
jl
sbb
and
sub
or
push
fldenv
je
aam
negb
mov
sub
scas
pop
repnz
push
adc
and
dec
mov
sub
addr16
pop
dec
and
insl
xlat
pop
arpl
pop
pop
and
and
mov
xorl
and
push
les
mov
es
or
jecxz
adc
adc
sbb
ret
out
hlt
mov
in
mov
sbb
bound
sbb
sbb
testb
dec
and
test
mov
and
inc
and
les
sarl
jo
xor
mov
movsb
and
xchg
adc
mov
xor
imul
mov
sub
mov
jne
es
cli
js
add
and
sbbb
adc
dec
ja
and
and
push
rorl
addb
or
rorl
into
mov
push
and
pop
mov
insb
add
sub
or
icebp
andb
movsb
inc
jmp
fimuls
dec
popa
add
mov
adc
and
les
xor
and
hlt
ret
popa
fstps
mov
and
add
neg
xchg
add
cmp
daa
arpl
jae
xchg
adc
pop
and
daa
and
jb
xchg
ret
dec
push
js
xor
cmp
and
xor
and
and
repz
outsl
test
movsb
and
dec
icebp
mov
and
adc
mov
and
stc
adc
xchg
sahf
repnz
xchg
sbbb
and
dec
sbb
sub
cltd
dec
add
inc
icebp
pop
adc
dec
popa
and
aam
and
scas
and
sbb
dec
or
add
xchg
bound
sub
lcall
and
adc
stos
cwtl
movsb
and
out
push
scas
cmp
pop
orb
in
jg
cs
xor
or
sbb
shrb
xchg
and
jmp
arpl
xchg
sub
xor
xor
and
and
and
sub
jo
jae
imul
sbb
cmp
dec
sbb
xlat
lds
push
es
push
dec
test
dec
adc
dec
loope
sub
sub
mov
cmpb
andb
bound
mov
std
imulb
and
out
cwtl
pop
test
movl
and
sub
addr16
dec
xor
and
add
sub
addr16
adc
dec
shll
shlb
test
mov
adc
add
adc
and
add
icebp
add
and
and
adc
roll
adc
sub
push
mov
daa
dec
and
adc
sub
inc
dec
push
cmp
mov
cmp
and
stos
hlt
mov
add
add
bound
push
xchg
adc
addr16
les
dec
loope
mov
dec
rcrl
arpl
es
inc
das
inc
dec
stc
mov
push
adc
adc
dec
mov
cwtl
movsb
xor
daa
int3
popa
aam
mov
cmp
mov
and
repz
pop
lds
subl
and
or
shlb
bound
inc
and
pop
dec
push
mov
dec
popa
je
and
or
inc
xor
xchg
dec
rorl
xchg
and
cmp
mov
xor
jae
hlt
push
push
dec
push
and
pop
adc
adc
push
and
sbb
das
shll
repnz
push
and
mov
les
call
sub
xchg
and
xchg
adc
bound
xor
inc
and
sub
sub
jl
adc
and
pushf
repz
mov
adc
xchg
addb
and
push
js
mov
adcl
dec
push
xor
sbbb
and
data16
bound
sub
sub
dec
push
cmp
dec
rorl
clc
and
or
add
and
and
lcall
and
pop
and
pusha
xor
sub
and
outsb
sbbb
xchg
xor
lds
mov
out
mov
jp
cmpsl
and
shlb
add
and
mov
xchg
add
adc
cmp
mul
dec
xor
and
sub
ds
and
mov
sbb
and
sub
add
sub
jp
mov
jbe
shlb
bound
lret
push
mov
add
inc
and
pop
bound
pop
dec
inc
mov
lods
data16
out
xor
sti
pop
and
mov
data16
rorl
xchg
and
xor
xor
loope
inc
scas
inc
adc
or
sarb
adc
shl
and
sub
rcr
xchg
add
inc
dec
push
and
sub
and
xchg
and
push
cmp
and
sbb
dec
and
xor
call
sbb
je
js
outsb
push
ja
xor
jmp
add
dec
or
inc
and
sbb
hlt
mov
mov
or
bound
cmp
mov
ret
inc
or
and
sub
jae
ret
dec
and
pop
sbb
and
xchg
pop
js
call
or
mov
jmp
inc
dec
push
adc
inc
shll
cmc
pop
les
xchg
adc
inc
out
dec
or
and
and
sub
add
xchg
adc
shlb
cmp
je
pop
outsl
arpl
sbbb
push
mov
sbb
and
pop
inc
dec
push
and
test
nop
adc
pusha
mov
and
dec
sbb
add
xchg
gs
mov
loope
sub
dec
mov
inc
bound
xchg
ret
enter
bound
jae
push
js
xor
xor
sub
or
and
test
mov
adc
and
push
add
and
dec
loope
cld
xchg
xchg
adc
adc
inc
insl
pop
adc
sbb
sbb
bound
sub
jne
inc
adc
xor
or
jp
bound
xchg
ret
decl
dec
loope
bound
int
test
sub
and
sbb
sub
cmp
sub
and
xor
mov
push
push
call
and
jo
int
out
xchg
add
cmp
cli
fidivl
cwtl
les
sub
add
lahf
les
sub
and
push
jo
imul
xchg
aam
loope
lock
xor
fcmovnb
loope
cwtl
and
fiadds
bound
xchg
adc
outsl
loope
sub
aad
add
dec
and
mov
jge
xchg
dec
mov
xchg
ret
aas
mov
outsb
inc
mov
shll
push
add
and
mov
fldcw
push
dec
push
and
les
and
out
sbb
andb
pop
mov
adc
dec
loope
and
ret
stos
and
js
outsb
bound
aaa
adc
out
dec
and
adc
cmp
sbb
sbb
icebp
loope
and
and
add
dec
and
bound
ret
fcom
jae
xor
and
and
and
dec
loope
and
adc
adc
insb
and
mov
jnp
and
sub
sub
xchg
adc
mov
pop
adc
sbb
pop
mov
xchg
and
push
xor
add
add
shll
mov
loope
sub
inc
not
jle
or
dec
and
adc
test
cmpsb
mov
adc
inc
dec
push
xor
dec
push
js
sub
orb
mov
and
or
adc
mov
adc
and
add
andb
inc
jb
inc
mov
lock
push
call
dec
shll
jo
sbbl
push
mov
mov
into
push
and
enter
xchg
and
xchg
subb
xor
cmp
bound
adc
and
xor
xchg
push
mov
push
jl
ja
dec
and
aas
aam
lds
adc
repnz
push
mov
adc
dec
adc
xor
jo
dec
and
and
sub
andl
ret
and
dec
test
sbb
and
xor
lcall
inc
je
pop
adc
and
repz
mov
xchg
test
mov
adc
nop
stos
test
sub
and
mov
add
loopne
push
call
test
jg
add
adc
les
sbb
arpl
mov
sub
cmp
push
js
and
push
cmp
and
adcb
mov
adcl
and
or
dec
sbb
and
xor
inc
nop
and
dec
mov
adc
dec
push
pop
pop
xchg
and
cmp
cmp
and
ja
and
pop
or
lds
pusha
sti
adc
jo
mov
push
je
negl
movsb
jo
dec
and
test
jo
cwtl
and
add
ret
mov
cwtl
push
and
test
add
and
adc
dec
mov
and
xchg
adc
es
and
ret
hlt
and
subb
js
ja
xor
mov
dec
and
dec
pushf
bound
bound
hlt
imul
xchg
adc
mov
bound
and
xchg
or
movsb
pusha
sbb
mov
sbbb
lds
add
out
mov
dec
adc
dec
push
sbb
or
xor
jns
cwtl
sub
dec
loope
sub
jae
movsb
sub
add
and
pop
and
and
test
xchg
addb
enter
and
xor
pop
pusha
sbb
inc
push
dec
push
xor
xchg
adc
dec
pop
jo
adc
and
xchg
jbe
cwtl
movsb
and
dec
cmpsl
mov
and
inc
mov
lds
dec
or
or
mov
and
popl
pop
mov
enter
push
and
mov
orb
rcll
test
out
adc
and
popa
cwtl
movsb
loopne
pop
add
lcall
xchg
les
mov
jmp
es
sub
sub
nop
and
lods
orb
xchg
andl
and
xchg
adc
and
and
and
adcb
and
push
ret
push
cltd
mov
push
pop
scas
pop
scas
push
xor
push
pop
add
push
dec
and
xchg
adc
lret
or
or
pop
mov
sbb
and
bound
xchg
adc
xor
push
mov
cli
ret
rolb
cmp
call
mov
pop
and
bound
and
cmp
jnp
pushf
mov
sbb
and
pushf
es
and
and
cmp
sub
je
pop
adc
bound
test
adc
lds
sub
pop
xor
fbld
and
sub
or
push
add
js
adc
jle
mov
pusha
lds
push
push
push
mov
add
and
and
add
add
push
adc
xchg
mov
jno
and
and
xor
mov
mov
cmp
inc
mov
push
dec
and
ds
push
dec
push
and
dec
push
jo
inc
xchg
ret
and
data16
mov
mov
sub
sub
sub
push
inc
dec
push
and
or
xor
xor
inc
jp
dec
or
sbb
bound
ret
xchg
push
loopne
push
sbb
adc
and
jmp
out
and
roll
push
loopne
fldt
push
sar
andl
test
or
mov
mov
and
iret
clc
add
xchg
mov
xchg
xor
js
loope
inc
mov
push
popl
cmp
adc
xor
shlb
mov
xchg
adc
and
add
pop
faddl
les
xlat
push
mov
mov
movsb
jo
or
xchg
in
and
and
xor
mov
and
inc
inc
dec
and
mov
sub
data16
call
or
and
ret
dec
and
dec
xchg
sbbb
insl
add
sbb
insl
or
shll
or
fs
adc
push
out
mov
sbb
daa
mov
xchg
inc
and
sub
mov
sub
sbb
das
and
mov
imul
xchg
adc
nop
rol
test
sbb
les
xchg
fsts
dec
adc
xor
sbb
and
dec
loope
and
rcl
fiadds
ljmp
mov
dec
popa
mov
add
and
and
and
xchg
adc
dec
loope
and
cmp
add
and
jo
dec
push
and
sbb
test
bound
xchg
adc
cwtl
outsb
and
addb
adc
inc
xchg
pop
push
inc
adc
inc
lcall
jbe
or
out
and
sub
pop
lods
adc
movsb
loopne
push
and
jl
clc
stos
cwtl
and
xor
jg,pt
adc
xchg
adc
add
and
xchg
adc
sub
dec
cs
jp
push
pop
les
pop
xor
xchg
and
ret
and
faddl
mov
dec
popa
andb
es
sbb
and
adc
and
inc
add
and
and
and
and
aaa
jae
dec
push
pop
sbb
mov
sub
push
and
sub
callw
pop
and
repz
push
adc
call
les
xor
pop
dec
and
cmp
dec
and
and
lock
cmp
nop
sub
sub
adc
and
fs
subb
loop
dec
and
sub
push
and
add
nop
push
andb
jmp
bound
or
mov
bound
and
xlat
mov
loop
icebp
mov
pop
movsb
and
cmp
sbb
std
dec
or
or
mov
movl
xchg
bound
arpl
mov
adc
dec
loope
and
pusha
xlat
pop
andl
in
mov
and
add
out
xor
jo
add
enter
cmpsl
add
lods
dec
fstps
imulb
sub
std
scas
inc
sbb
cli
mov
bound
sbb
test
das
jo
add
repz
cmp
mov
cmp
mov
and
adc
enter
sbbb
adc
dec
inc
daa
jmp
or
pop
pop
in
mov
adc
jg
and
push
mov
and
stos
dec
mov
aas
bound
and
or
xchg
push
jb
jg
scas
cmp
jo
jg
scas
pop
leave
popa
or
xchg
repnz
dec
and
shll
and
adc
dec
jb
out
xchg
movsb
xchg
lcall
xchg
ret
and
dec
loope
mov
and
push
adc
sbb
lods
vmlaunch
or
ret
or
adc
and
sub
in
push
push
adcl
bound
xchg
movsb
jo
lods
mov
cwtl
and
push
repnz
xchg
adc
rolb
rorl
sbb
mov
push
xor
pop
ds
adc
adc
mov
sarl
es
adc
dec
and
jno
xchg
cmp
pop
adc
or
cmp
xchg
and
hlt
lahf
add
sub
aas
test
cmp
and
cmp
imul
or
hlt
sbb
test
bound
or
and
cmpsl
call
test
add
inc
add
cmpsl
jg
dec
adc
mov
es
cwtl
movsb
jo
xchg
sahf
xor
mov
inc
jo
sub
mov
mov
inc
lcall
xchg
or
iret
dec
adc
cwtl
movsb
jo
and
push
mov
popf
push
xor
inc
and
pusha
xor
dec
cmp
mov
adc
mov
jmp
mov
xlat
jno
icebp
movsl
add
pop
test
cmp
ret
jno
cmpsl
cmpl
and
popa
js
adc
xchg
and
push
mov
push
addl
les
aam
mov
xlat
or
and
push
dec
test
dec
loope
jl
push
add
out
out
add
and
mov
loope
in
and
inc
dec
add
or
inc
dec
push
push
fsubs
dec
inc
insb
sbb
adc
outsb
cmp
lds
dec
push
adc
adc
cwtl
movsb
lock
and
mov
and
xchg
adc
mov
pop
adc
mov
stos
pop
pusha
adc
adc
sub
sbb
mov
stos
and
test
dec
push
adc
enter
test
add
mov
loop
jb
push
adc
int
push
push
inc
lret
push
mov
mov
or
mov
fwait
xor
in
idivb
hlt
push
les
xor
sbb
push
cwtl
sub
sub
pop
and
xchg
ret
and
addb
and
and
xchg
pop
es
aas
enter
add
mov
push
dec
push
popa
loope
les
cmp
xor
jp
xchg
adc
pop
and
adc
xor
lods
mov
mov
inc
pusha
mov
xchg
cmc
xchg
sbb
stos
cwtl
movsb
and
xchg
lret
bound
inc
and
cwtl
movsb
jo
and
sbbb
xchg
movsl
test
lds
mov
and
sub
xchg
adc
push
movsb
jo
adc
add
and
dec
inc
gs
cmp
es
pop
mov
movups
push
adc
or
push
push
add
or
adc
and
jp
pop
adcb
mov
out
xor
push
xor
xor
push
and
mov
mov
and
and
sub
mov
aaa
add
jo
out
cmp
push
mov
inc
pop
or
mov
dec
or
test
inc
sbb
or
bound
lods
jnp
and
inc
sbb
out
pop
sbb
mov
jae
bound
lds
adc
adc
pushf
pop
js
adc
push
sbb
and
in
add
or
sub
sub
xor
pop
sub
push
add
dec
and
ret
or
loope
and
jo
les
dec
adc
cwtl
and
cs
inc
dec
push
and
inc
dec
push
mov
and
cmp
sub
and
sbbl
and
xchg
and
fisubl
inc
dec
push
mov
dec
loope
ja
and
sub
add
and
and
dec
loope
nop
and
or
pusha
or
arpl
movsb
and
and
cmp
push
mov
and
mov
add
inc
push
lds
mov
push
adc
mov
aaa
cmp
and
ret
mov
or
lds
mov
push
push
dec
push
and
stos
cwtl
movsb
jo
and
and
mov
sub
pop
inc
test
mov
push
adc
unpckhps
movsb
jo
ss
add
mov
loopne
mov
mov
and
lds
incl
movsb
and
adc
and
adc
sbbb
mov
add
adc
loop
inc
les
cwtl
movsb
lock
ficomps
scas
and
arpl
mov
cs
sub
adc
adc
xchg
and
addb
add
xchg
and
and
and
and
jo
adc
and
outsb
or
push
adc
dec
or
dec
xor
or
dec
push
inc
fptan
les
ds
pop
adc
bound
push
push
scas
ficompl
add
test
sub
ret
jl
fwait
add
les
xchg
movsl
or
pop
lds
addb
cld
pusha
ficomps
xchg
roll
dec
xchg
ret
jecxz
xchg
ret
adc
adc
mov
ret
xchg
mov
inc
loop
adc
dec
popa
xor
dec
and
add
inc
pop
adc
or
cmpsb
jbe
add
pushf
and
pop
dec
inc
push
dec
add
jns
mov
push
add
fwait
adcb
test
mov
lock
jmp
and
jo
sub
test
pop
movsl
xor
and
in
dec
or
and
or
cmpb
jl
sub
add
add
cmp
pushf
inc
rorb
sub
add
inc
xchg
ret
sub
fsubrs
dec
add
dec
push
mov
and
fcoml
ljmp
pop
faddl
or
dec
cmp
dec
or
pop
sub
dec
popa
add
pusha
or
add
mov
or
in
xchg
mov
cli
inc
test
and
ret
inc
add
xchg
add
dec
push
js
adc
push
mov
ret
add
cmc
in
xor
inc
add
in
inc
dec
push
add
and
adc
movsb
jo
into
ds
repz
inc
mov
pop
or
movsl
in
mov
cmovns
add
sub
sub
fsubrs
add
pop
sbb
dec
add
pusha
or
add
push
inc
xchg
ret
jmp
and
sbb
adc
cwtl
mov
rclb
or
push
inc
xchg
or
add
shlb
sub
add
pop
push
es
daa
or
je
cmpsb
and
movsb
mov
and
mov
arpl
out
sbb
push
test
cmp
pop
and
daa
and
cmp
sub
dec
addb
and
and
lods
push
sub
sub
pop
int3
fdivr
sub
or
outsl
mov
add
add
out
adcl
out
inc
xchg
ret
sbb
adc
scas
cmp
push
dec
mov
dec
outsl
xor
leave
mov
pop
adc
adc
movsl
add
pop
pop
jne
loopne
je
add
mov
push
test
pusha
jo
test
xchg
test
movsb
add
add
pop
in
jns
add
ret
add
mov
mov
push
adcb
mov
add
dec
or
adc
lcall
nop
movsb
lock
add
fcoml
mov
sbb
int3
and
sub
jno
cmp
call
mov
call
mov
pop
or
out
add
sbbb
push
mov
and
add
jecxz
insb
sbb
sub
dec
popa
mov
push
mov
jecxz,pn
and
sub
out
adc
adc
dec
pushf
add
adc
sub
fcompl
jb
sub
nop
movsb
jo
mov
mov
movsb
and
xchg
inc
test
lahf
fstps
mov
mov
insb
add
dec
or
sub
dec
ficoms
mov
out
mov
pop
faddl
test
xchg
ret
js
dec
inc
mov
rorl
dec
aad
dec
lock
movsl
out
lcall
push
dec
push
mov
dec
popa
jo
lret
test
dec
fcmovnb
xchg
ret
add
adc
or
xor
aaa
adc
scas
or
nop
inc
test
and
cmp
out
adc
loope
adc
mov
adc
add
jp
xchg
ret
rcl
add
test
or
fadds
jno
add
xor
dec
fcmovbe
in
fsin
cmp
push
add
pop
fbstp
add
rcr
and
inc
xchg
ret
sub
fcompl
add
dec
or
push
shll
add
negb
sub
xor
rclb
mov
add
mov
push
add
cwtl
test
outsb
and
add
push
adc
xchg
add
mov
adc
or
dec
or
test
add
sbb
cmp
or
push
dec
push
xor
inc
and
cmp
push
inc
imul
test
mov
psraw
inc
xchg
ret
sti
loopne
nop
movsb
jo
add
sbb
and
bound
dec
or
add
and
mov
xchg
ret
add
es
loope
inc
add
and
outsl
es
mov
es
inc
dec
add
adc
and
xor
or
xchg
add
xor
push
dec
mov
push
js
add
and
fcompl
add
xchg
adc
iret
add
dec
or
add
ret
fisubs
add
frstor
dec
push
mov
xchg
adc
inc
add
daa
rorb
and
adc
int
sarl
imul
inc
adc
add
or
xor
fcmovnu
rcl
xor
addr16
repnz
cs
leave
xchg
call
scas
call
xchg
fsubrl
call
pop
and
cmp
push
mov
es
push
dec
add
addr16
call
jmp
and
add
ret
add
or
out
stc
shl
and
frstor
call
repnz
call
mov
nop
bswap
xchg
mov
fisttpl
xor
mov
push
push
movsl
and
add
dec
loope
pop
add
out
adc
dec
mov
add
xchg
orb
mov
stc
scas
add
or
call
ret
push
ja
and
add
push
loopne
dec
or
popa
mov
add
test
or
add
pop
fcoml
push
mov
fstps
jo
dec
push
add
push
loope
nop
movsb
add
dec
add
fiadds
cltd
or
and
sarl
out
or
jns
sub
adc
loope
sub
add
ret
dec
add
xchg
add
movsb
cmpl
cltd
stos
flds
push
and
inc
add
add
shrl
pop
test
lods
xchg
adc
das
fstpt
and
adc
insl
or
add
xchg
orb
add
wrmsr
xchg
js
and
and
add
xor
jne
addl
cwtl
and
dec
cmp
xchg
ret
fs
inc
xchg
ret
imul
test
inc
adcl
rolb
jne
andb
xorl
cmpsl
xor
adc
aad
dec
push
mov
add
dec
loope
dec
insl
add
dec
or
sbb
adc
adc
jno
add
and
fcoml
test
push
mov
loope
add
dec
add
bound
dec
dec
xchg
cmp
outsl
or
add
and
dec
or
ljmp
add
mov
mov
mov
adc
jle
and
cwtl
push
add
dec
popa
lock
inc
jl
and
faddl
inc
ret
daa
add
sar
incl
out
test
xchg
add
les
adc
adc
xchg
cltd
aam
add
push
rcl
mov
add
inc
push
or
rorl
inc
mov
inc
rolb
xor
xchg
xchg
lcall
nop
movsb
mov
add
push
pusha
or
add
nop
test
and
test
or
loope
std
push
sub
pushf
xor
or
pop
scas
add
cmp
and
mov
and
add
adc
xchg
inc
add
mov
lock
sbb
jbe
and
adcl
lcall
sbb
orl
dec
inc
dec
push
add
addb
push
add
cwtl
cmpxchg
cmc
into
xchg
mov
incb
xchg
adc
dec
push
sbb
sbb
adc
xor
adcb
and
sbb
push
add
adc
mov
in
inc
adc
dec
adc
add
ret
dec
push
adc
xor
push
cmp
add
lret
push
dec
add
mov
adc
nop
movsb
nop
loopne
and
movsl
add
add
lret
std
xchg
adc
adc
add
fmulp
inc
test
lret
rclb
add
cmp
sbb
add
add
mov
and
push
movsb
add
inc
call
jae
add
test
adcb
test
mov
fiaddl
or
div
mov
sub
sub
add
and
out
and
cs
cmp
dec
or
sub
add
inc
sub
and
lods
add
dec
loope
sbb
and
xor
push
pop
popa
and
test
lock
ret
and
lret
push
adc
dec
mov
adc
repnz
loopne
jno
iret
aaa
movd
adcb
and
lds
call
add
and
loop
add
sbb
nop
movsb
jo
movsb
mov
or
mov
mov
pop
push
jbe
dec
push
and
dec
scas
inc
xchg
inc
and
movsb
loopne
mov
add
xchg
adc
push
ljmp
and
test
and
fsubrs
xor
adc
adc
jbe
and
or
inc
and
roll
and
and
test
mov
and
and
fildl
std
movsb
jo
or
test
push
mov
sub
xor
and
test
adc
push
lock
dec
mov
xchg
ret
pop
dec
jle
push
sub
leave
pop
adc
inc
xorb
mov
push
adc
adc
mov
ret
nop
movsb
mov
sahf
cwtl
xchg
adc
mov
jg
inc
dec
adc
pusha
cmp
dec
loope
adc
imul
and
and
push
xchg
pop
sbb
fcoml
and
xchg
out
shlb
add
cwtl
sbb
or
fsubs
or
sti
mov
test
inc
or
test
push
or
and
push
mov
mov
and
je
mov
add
lock
adc
cmc
add
fs
sub
adc
push
jo
mov
push
xchg
add
xor
jo
xchg
add
inc
add
imul
adc
dec
enter
push
add
and
into
mov
xlat
add
stos
es
and
fsubrl
add
mov
push
jo
add
sahf
fadds
stos
push
mov
inc
jo
or
fstl
add
mov
inc
xchg
dec
add
test
push
stos
mov
nop
dec
add
pop
jb
arpl
and
mov
xor
push
xchg
adc
outsl
push
push
and
add
or
add
xchg
cmp
xchg
test
adc
or
into
xor
push
js
test
mov
leave
xchg
sbb
mov
sub
cwtl
aaa
xchg
adc
sub
xor
add
cmp
mov
add
pop
push
and
add
push
inc
push
js
add
xor
push
and
mov
xchg
ret
cli
add
xchg
xor
jl
push
cmpsl
sbb
jb
inc
push
xor
test
cmp
push
add
cmpsb
sbb
fcoml
fdivl
ds
cmpsl
pop
adc
adc
inc
out
sub
push
and
xchg
jo
mov
push
js
add
addb
add
mov
sub
cmp
mov
sub
loope
addr16
sbb
dec
add
loope
add
sub
and
push
js
and
ljmp
imull
mov
test
stos
dec
add
ret
and
push
loope
sub
inc
adc
xchg
pop
inc
push
add
lock
rolb
push
and
add
dec
rcll
adcl
loope
cwtl
shlb
adcl
sbb
or
ficoml
jg
add
fdivrs
xor
and
imul
mov
pop
adc
push
cmp
aaa
push
add
lret
cmp
sub
add
sbb
or
sbb
push
sub
mov
dec
or
out
and
clc
call
in
stos
add
aad
adc
mov
sbb
pusha
pushf
mov
not
jo,pn
cmp
adc
add
push
xchg
adc
rclb
adc
bound
popa
or
movsb
push
and
faddl
push
scas
pop
aad
mov
and
add
adc
xchg
pop
lahf
ljmp
pusha
out
add
clc
je
lahf
ret
loop
js
xchg
add
iret
mov
dec
lahf
cmp
cmp
mov
pop
mov
dec
loope
add
sbb
inc
push
mov
js
xor
adc
push
add
push
push
js
push
add
ret
push
inc
add
push
cmp
add
bound
mov
add
xchg
ret
js
push
mov
faddl
and
sub
adc
sbb
mov
add
or
push
xchg
add
or
xchg
xchg
push
push
in
pop
push
xchg
adc
andl
add
sub
and
cmp
add
add
pusha
mov
xor
inc
push
adc
pop
inc
add
cmpsl
fdivp
add
xchg
stos
dec
or
jbe
add
test
dec
loope
lea
jmp
xchg
adc
sub
in
adc
add
inc
call
dec
add
outsb
out
test
or
or
xor
mov
add
ret
adc
xchg
cmpsb
sub
popa
adc
test
or
jo
cmc
mov
addb
xor
or
push
add
sub
jo
test
dec
out
and
dec
flds
ret
inc
in
xor
xor
loope
xor
dec
cltd
adc
add
js
ret
or
add
push
hlt
adc
add
lock
sub
loopne
movsl
in
mov
push
and
xor
xor
test
imul
push
dec
mov
sbb
pusha
jb
fwait
stos
and
add
dec
call
mulb
xchg
push
or
daa
inc
mov
cmp
add
adc
call
sbb
push
xchg
add
add
push
mov
and
movl
mov
ret
add
jbe
loop
jl
pop
sub
cmp
mov
add
ja
xchg
adc
xchg
sub
mov
sub
adc
mov
add
push
xchg
xchg
push
aaa
inc
inc
push
cmp
add
push
pop
movsb
pusha
imul
orb
out
orb
loopne
scas
rolb
mov
jns
sub
xchg
adc
and
cmp
sub
push
add
into
mov
mov
push
inc
cmp
push
xchg
adc
sub
add
and
stos
dec
or
adc
repz
lcall
add
push
xchg
adc
add
loopne
orb
movsb
add
push
dec
cltd
cltd
jp
and
jmp
cmp
test
or
aad
pop
dec
jle
jns
mov
and
xchg
sbb
jp
xchg
shll
stos
dec
or
iret
mov
cmp
mov
cli
jbe
sbb
cmp
inc
add
cmp
push
add
sub
xchg
xchg
cmc
call
dec
add
sub
outsb
mov
test
push
xchg
adc
sub
xchg
sbbb
fadds
sub
and
xor
stos
and
lcall
add
insb
inc
inc
inc
push
add
xchg
ret
add
shrl
sbb
push
add
push
add
test
add
push
mov
dec
addl
or
inc
push
add
jl
loope
mov
rcr
jo
adc
outsb
mov
xchg
inc
insb
dec
loope
push
add
sub
popa
adc
mov
test
or
add
fistl
in
mov
stos
pop
nop
iret
push
leave
call
movsb
jo
add
mov
movsb
jo
push
add
add
lea
add
jo
sub
aam
push
add
iret
add
loop
popa
mov
arpl
and
pop
add
ljmp
cwtl
adc
scas
and
test
js
push
xchg
add
js
push
and
rorl
rolb
jmp
mov
test
pop
xchg
adc
dec
mov
push
inc
push
mov
push
xchg
adc
xor
inc
push
xor
ret
and
loope
xchg
add
cmp
pusha
nop
test
or
jg
mov
and
insb
addb
xor
add
mov
push
or
xchg
add
test
stos
dec
add
sub
and
movsb
add
xor
add
mov
add
xor
movsb
push
loopne
push
and
add
sub
mov
sbb
mov
add
adc
jne
add
sub
xor
out
xor
lret
sbb
sub
mov
push
add
ret
dec
push
sub
jns
sub
pop
sbb
sbb
scas
out
add
xchg
ret
or
loopne
mov
je
mov
movsl
movsb
pop
lahf
sub
les
add
sub
cli
mov
xchg
cmpb
cltd
add
dec
push
test
xchg
cmp
or
inc
xor
dec
adc
push
xchg
adc
mov
outsb
lods
add
movsb
mov
ret
subl
movsb
pusha
daa
mov
push
mov
lods
adc
inc
inc
add
andb
push
xchg
add
inc
push
mov
fwait
popa
xor
push
xchg
lods
push
adc
and
jl
xchg
or
mov
and
dec
rorl
test
je
adc
xchg
add
lret
add
push
sub
adc
add
add
mov
add
je
inc
or
movsl
adc
add
push
xor
dec
loope
pop
fcmovnb
xchg
out
pop
adc
dec
popa
pusha
mov
inc
adc
stos
dec
or
dec
and
jge
dec
sbb
test
inc
adc
push
and
repnz
movsb
lock
and
faddl
and
mov
movsb
pusha
mov
add
mov
add
push
add
pop
or
and
repz
faddl
add
call
test
jle
mov
xor
sub
insb
loopne
clc
sub
movsb
add
adc
xchg
sbb
addb
add
pop
xorb
pop
inc
pusha
fsts
dec
popf
daa
sbb
and
add
pop
rcr
dec
loope
test
xor
mov
mov
dec
loope
mov
dec
adc
subl
inc
xchg
add
les
or
orl
outsl
fdivs
inc
xorl
and
ret
mov
dec
push
imul
add
push
xchg
adc
cmp
adc
sbb
orb
ret
adc
mov
mov
dec
push
test
inc
adc
ret
and
fsubl
imulb
add
sub
inc
inc
push
xor
add
jnp
out
or
adc
aad
add
andb
push
xchg
cmp
scas
add
dec
pushf
push
fwait
and
cmp
mov
or
jns
push
lock
test
mov
mov
sbb
inc
push
xor
gs
pop
adc
sub
dec
jns
insb
sub
inc
orb
call
mov
movsb
mov
add
test
and
mov
inc
pop
sbb
dec
dec
aaa
aas
push
jmp
adc
into
imul
call
push
inc
add
movsb
mov
lahf
dec
and
inc
adc
mov
stos
push
sub
jg
mov
sub
mov
lods
jbe
shrl
mov
xchg
add
xchg
outsb
scas
and
mov
add
push
loop
push
sub
add
xchg
add
loopne
and
add
adc
add
sub
adc
aad
add
push
adc
dec
or
ret
cmpb
lods
sub
ret
lods
aam
jo
xchg
add
push
cmp
pop
dec
push
add
shrl
sub
add
shl
or
fadds
push
cmp
or
add
ja
or
xchg
inc
and
ss
mov
dec
or
jg
adc
xor
add
sarb
aam
sub
add
dec
jecxz
je
add
mov
jg
inc
push
pop
sub
dec
loope
aaa
mov
cmp
add
cmp
or
lret
hlt
test
or
rclb
mov
add
repnz
fwait
lds
add
adc
scas
js
movsb
and
xor
mov
ret
out
push
jns
xchg
adcb
cld
inc
loope
sub
lahf
cmpsb
add
push
adc
push
and
mov
push
xchg
add
add
sub
add
sub
cmp
xchg
pop
shlb
popf
push
jmp
sub
xchg
cmpb
xchg
sbbb
sub
sub
lock
xchg
adc
sbb
sub
add
les
xlat
jno
addb
test
add
into
scas
test
or
mov
pusha
dec
add
add
xchg
ret
add
jnp
popa
movsl
push
push
add
add
add
lcall
lcall
orb
dec
or
jne
add
mov
adc
inc
add
je
jns
pop
push
add
inc
sti
bound
add
add
and
orl
add
imul
push
inc
inc
push
cmp
and
add
cmpsl
ss
push
and
dec
adc
movsb
xor
mov
adc
push
inc
push
adc
add
inc
inc
push
mov
aam
inc
push
mov
mov
je
dec
loope
add
inc
adc
add
ret
cmp
dec
push
xchg
add
add
add
cmp
inc
inc
push
mov
sub
js
add
push
sbb
ret
inc
push
add
jb
sbb
les
add
xor
in
push
inc
adc
adc
adc
and
xchg
movsl
push
xchg
orb
add
add
sub
xchg
add
jp
add
sub
repz
add
add
dec
rcll
out
xchg
mov
jo
xchg
ret
push
adc
jne
call
add
inc
push
xchg
xor
adc
push
xchg
adc
mov
push
and
cmp
mov
jmp
add
push
inc
add
mov
or
addb
js
pusha
cmpsl
and
outsl
popf
mov
loope
mov
jb
test
adc
or
add
sub
outsl
loope
xor
adc
stos
add
dec
les
add
data16
adc
stos
dec
or
out
add
and
test
adc
adc
repz
sub
adc
add
pop
add
jo
adc
ret
add
sub
aaa
ret
ret
sub
push
push
mov
xchg
add
stos
dec
or
incb
xchg
ret
mov
xchg
adc
sub
icebp
sbb
test
push
add
sub
push
xchg
adc
jg
or
mov
add
inc
inc
add
cwtl
lahf
push
mov
das
sbb
add
sbbb
add
mov
add
and
push
mov
jbe
mov
test
or
inc
inc
push
mov
dec
or
mov
mov
sahf
jne
pop
mov
push
cmp
dec
or
es
insl
and
fwait
stos
add
divb
cwtl
popf
call
repz
push
and
add
mov
xchg
sbbb
cmp
icebp
pop
enter
xor
orl
fstl
repnz
add
inc
mov
out
ficoms
and
add
cs
dec
dec
cmpl
sahf
out
sbb
mov
mov
mov
add
xor
xchg
lret
mov
or
or
repnz
ret
lock
add
pop
enter
push
push
push
pop
mov
pop
push
sbb
mov
inc
scas
imul
push
mov
push
and
orl
push
and
jnp
xchg
and
mov
sbb
or
xor
movsb
jo
daa
call
pop
mov
fstpt
rorl
add
aad
push
mov
adc
sbb
inc
add
cmp
adc
loopne
add
mov
out
mov
xor
xchg
adc
xchg
add
jae
xor
push
xchg
adc
cmp
sub
shrb
mov
inc
add
ds
inc
call
popa
jg
dec
call
sub
mov
sahf
xchg
mov
and
and
add
or
add
or
mov
fsubr
mov
movsl
sbb
and
cwtl
inc
mov
xchg
ret
add
cmp
test
sub
cmp
push
xchg
adc
push
popl
enter
xor
arpl
sub
jmp
mov
jne
add
xchg
ret
cltd
movsb
fcmove
add
inc
arpl
inc
pushf
and
or
add
mov
add
repz
cmove
jb
sub
inc
lcall
push
and
and
fdivrl
push
scas
ds
addl
dec
cmp
sub
xor
jno
mov
pop
cmc
fisttpll
nop
adc
pushf
rclb
movsb
jo
add
add
add
sbb
xchg
pop
dec
ret
cmpsl
xor
shlb
add
mov
xchg
adc
icebp
mov
pop
inc
inc
push
add
popa
and
jmp
adc
mov
subl
sbb
fwait
mov
jo
aam
inc
push
add
add
stos
push
push
add
fdivl
inc
add
push
sbb
jecxz
jnp
sub
dec
or
in
sbb
in
pop
xchg
mov
popa
inc
inc
push
xor
mov
pop
add
aas
sub
push
adc
mov
sub
mov
and
add
adc
dec
add
adc
add
ret
pushf
sub
adc
dec
inc
mov
or
push
inc
add
cmc
jns
dec
rcrl
add
adc
and
add
pop
jbe
mov
or
out
pop
and
lods
adc
dec
loope
movsl
add
lret
subb
jo
sub
outsb
mov
inc
add
adc
int3
inc
inc
push
mov
into
add
sbb
xchg
adc
inc
add
sub
and
mov
dec
or
inc
add
xchg
cltd
loopne
push
add
mov
xor
and
push
lds
push
adc
push
mov
add
inc
inc
add
pop
repnz
inc
dec
test
mov
faddl
push
movsb
xor
cmc
xor
sbb
xor
outsb
mov
xchg
add
mov
xor
mov
rol
push
cltd
inc
push
and
add
adc
sub
or
add
aas
inc
push
js
int3
and
fcoml
popa
lret
lret
add
dec
sti
sub
scas
out
add
add
mov
add
sub
sub
and
push
sub
push
push
add
jae
rcrl
je
push
and
cmp
fwait
sub
jno
add
out
sbb
push
xchg
adc
movsl
pop
sbb
adc
or
push
push
add
out
test
inc
add
pop
xchg
xchg
push
and
test
cmp
sbb
add
lods
mov
adc
xchg
xor
xor
push
push
add
mov
jecxz
loopne
dec
cmp
mov
xchg
ret
test
lods
cmp
sbb
push
and
call
lahf
outsb
iret
les
int
pusha
pop
push
dec
imul
mov
inc
dec
jb
in
push
popa
stos
dec
add
xchg
cmp
add
push
xor
adc
sub
ja
jnp
adc
xchg
cmpb
dec
shrl
add
add
adc
inc
push
cmp
push
add
dec
popa
mov
inc
push
sbb
and
sub
adc
test
addr16
addb
push
add
subl
add
pop
pop
add
loop
in
add
adc
push
xchg
add
dec
pop
mov
cmp
add
mov
les
sub
les
test
mov
cmp
ret
mov
mov
xchg
ret
inc
inc
push
dec
stc
add
fs
pop
cmpsb
cmp
sbb
xchg
add
and
pushf
out
dec
arpl
or
add
inc
push
and
inc
sbb
test
or
or
and
jnp
add
push
add
loopne
inc
push
add
scas
and
add
ret
add
sub
jmp
push
and
mov
sbb
icebp
test
add
push
mov
and
fdivrl
mov
mov
push
add
push
add
jl
push
push
xchg
add
mov
ret
aaa
orl
cmp
mov
cmp
popa
stos
and
pop
sbb
sbb
icebp
sbb
cmp
push
add
cmpsl
and
mov
dec
lret
adc
cmpsb
dec
and
dec
or
push
xchg
cmpsb
out
sub
add
in
push
xchg
adc
incl
mov
fisttpl
scas
add
stos
mov
sbb
add
add
pushf
pop
add
jg
ja
adc
inc
inc
push
mov
test
or
test
dec
mov
pusha
add
xor
add
fwait
adc
cmp
sub
sbb
inc
add
and
or
add
add
xchg
addb
xchg
adc
push
add
xchg
ret
add
movsb
loopne
sub
jo
orb
add
mov
xchg
add
out
inc
push
xor
pop
mov
test
push
inc
add
inc
pop
push
and
dec
xor
fiadds
adc
mov
popa
std
jmp
sub
or
inc
pop
lods
or
mov
arpl
testl
dec
or
ret
je
or
es
nop
sbb
xchg
ret
cwtl
and
inc
loope
or
sub
bound
add
stos
and
or
add
cmpsl
neg
addr16
cmpsl
or
andb
lods
and
js
addr16
push
pop
xor
sbb
add
and
unpckhps
mov
test
add
popl
mov
add
xchg
add
cmc
jl
sub
loope
jecxz
add
cmp
inc
push
mov
add
xchg
and
cmp
ja
xor
mov
add
adc
add
or
inc
push
and
jbe
lcall
xchg
je
fnsave
add
fadd
add
sub
sub
xchg
rclb
call
test
or
mov
dec
push
xor
stos
add
clc
popa
mov
add
add
adc
dec
or
add
loope
add
mov
add
and
daa
movsb
or
dec
add
inc
push
xor
xor
ja
push
xchg
adc
mov
daa
xchg
dec
call
ds
stos
dec
or
xchg
adc
mov
cmp
add
inc
add
adc
add
add
cmp
push
xchg
add
add
data16
and
stos
dec
or
inc
push
pop
adc
std
inc
insb
push
and
sub
mov
add
xor
push
or
inc
add
mov
add
cmp
mov
adc
xor
adc
pop
push
xchg
add
jbe
mov
add
inc
push
sbb
rorb
add
xor
jne
inc
add
mov
sbbb
jns
mov
imul
adc
sub
xchg
adc
cmp
add
jns
adc
and
jb
and
xchg
cmpsb
xorb
in
pop
or
movsl
inc
scas
sub
cmp
pop
add
mulb
pop
inc
adc
loopne
test
add
add
cwtl
push
fadds
sub
ja
and
add
sub
test
or
je
xchg
adc
stos
add
fcomps
fstl
sbb
and
roll
xchg
lock
fiaddl
and
jns
jg
movb
pop
mov
or
inc
lock
adc
dec
jle
inc
cmp
scas
add
or
mov
mov
push
std
incl
mov
dec
and
jecxz
es
orb
jecxz
sarb
icebp
mov
sub
xor
stos
rclb
inc
push
push
mov
rorb
sbb
repnz
add
xor
add
and
es
or
mov
test
push
enter
dec
dec
and
mov
fistpll
xchg
adc
push
sub
ja
pop
movd
pop
dec
and
jecxz
cmp
inc
mov
rorl
js
push
inc
mov
jecxz
xlat
je
add
and
pop
adc
pavgw
or
and
or
loopne
push
push
stos
mov
xor
jecxz
dec
or
xchg
adc
cltd
sbb
cwtl
dec
or
es
mov
cs
push
inc
pop
xor
and
push
mov
push
sub
sub
sub
pop
orb
sub
adc
jecxz
loop
mov
jecxz
sub
jecxz
xchg
ret
jecxz
push
mov
popa
jne
jecxz
jl
loopne
adc
addl
bound
sub
xor
scas
mov
aas
cmpsb
ja
out
pop
adc
pushf
cmpsb
lcall
and
jecxz
mov
and
pop
test
and
jnp
cld
fnstenv
jecxz
push
mov
fwait
int
or
in
dec
add
inc
lea
jmp
data16
sbb
lahf
int
push
test
inc
incl
xchg
adc
stc
mov
jecxz
or
dec
and
jecxz
xchg
adc
mov
mov
xor
dec
call
jecxz
pop
adc
mov
push
push
adc
dec
rcll
and
cmp
push
push
sbb
dec
loope
or
dec
add
lcall
mov
jo
sub
or
aad
cmp
movsb
jo
cwtl
jecxz
push
subb
mov
bound
jecxz
nop
test
es
jecxz
sub
dec
rcll
jl
add
ror
add
jmp
loopne
orb
xchg
adc
test
xchg
orb
pop
ds
es
shr
mov
xchg
jecxz
lcall
push
mov
pop
dec
aam
andl
lcall
sbbl
mov
or
cli
or
test
jecxz
mov
xor
adc
dec
rcr
shll
adc
jns
mov
dec
jecxz
adc
adc
xlat
mov
jecxz
adc
mov
inc
xor
lds
inc
add
dec
loope
jecxz
dec
or
add
jecxz
or
loope
cwtl
jecxz
lods
popa
jo
adc
data16
adc
inc
adc
jbe
dec
or
add
mov
jecxz
scas
pushf
add
xchg
jecxz
icebp
push
xor
push
sub
imul
dec
dec
dec
and
or
adc
xor
sbb
xchg
adc
inc
jecxz
fs
decl
mov
loope
sub
xchg
sbb
inc
push
push
call
or
jecxz
ret
adc
pop
and
xchg
cmpb
ret
dec
adc
shrl
ret
jecxz
jbe
test
movsb
jecxz
xchg
ret
add
iret
sub
test
es
in
adc
dec
jecxz
js
xor
push
cmp
lea
and
mov
inc
jecxz
je
and
jg
inc
lock
jecxz
dec
and
add
int
and
or
and
adc
es
mov
loop
insb
push
daa
es
jecxz
in
xchg
adc
xchg
or
push
and
mov
pop
test
mov
jecxz
dec
or
xchg
addb
mov
xor
push
mov
push
dec
xor
inc
push
js
jecxz
and
cmp
jle
mov
adc
mov
sbb
xor
mov
and
fwait
icebp
inc
adc
and
jecxz
cmpb
adc
es
xchg
ret
jecxz
sbb
or
es
push
lock
xchg
or
and
jecxz
inc
push
mov
or
xchg
cmpb
or
cmpsb
pusha
daa
lcall
orb
jl
incb
sub
ljmp
jp
and
jecxz
into
aam
sub
lret
leave
cltd
dec
xor
adc
js
inc
push
cmp
jecxz
push
js
fisubl
jecxz
in
andb
jecxz
jo
xor
out
and
dec
jb
cmc
fucom
inc
out
pop
jo
es
ret
daa
xchg
ret
push
jecxz
scas
sub
jmp
jecxz
mov
sbb
jecxz
out
jecxz
pop
adc
jecxz
mov
jns
adc
jecxz
and
fmull
orb
lods
mov
and
jecxz
test
mov
ret
jecxz
int3
push
xor
adc
es
and
mov
out
mov
adc
inc
xor
jae
push
xor
es
add
lds
push
or
cwtl
dec
or
adc
adc
xchg
adc
dec
popa
xor
lret
add
jecxz
add
inc
push
mov
cwtl
imul
and
fdivl
dec
jecxz
pusha
and
cmp
mov
pop
bound
push
push
jo
jl
out
sar
sbb
movsb
mov
rsm
mov
mov
xor
xor
std
incl
out
jmp
mov
add
push
sbb
push
cmp
testb
add
rcrb
xchg
ret
and
push
es
cs
inc
adc
mov
dec
repnz
sub
es
xchg
adc
sbb
jecxz
scas
jecxz
test
lcall
xlat
test
les
pop
sub
dec
jecxz
sub
mov
imul
or
cwtl
cli
inc
xor
jecxz
es
orb
jecxz
sbb
or
lds
mov
or
push
adc
movsb
adc
cmp
lea
push
bound
sub
into
mov
cmpsl
adc
pop
xor
fcomps
inc
xor
and
jecxz
es
xor
dec
or
jecxz
pop
lret
les
loopne
inc
jecxz
xor
jecxz
ss
movl
adcb
pop
xchg
inc
adc
cmp
or
xor
xchg
xchg
jecxz
sub
lds
mov
xchg
pop
add
ret
jecxz
cmp
fsubl
es
xor
xchg
bound
jecxz
or
jecxz
cmp
pusha
and
jecxz
lcall
and
daa
scas
add
and
dec
jecxz
ret
hlt
loop
es
jecxz
mov
xchg
ret
and
sub
arpl
push
xor
push
lcall
aas
jg
repnz
mov
dec
xor
pop
enter
jno
sub
or
push
stos
lcall
adc
xchg
push
xchg
dec
and
add
xchg
outsb
shll
mov
lods
add
lds
dec
loope
pop
jecxz
sub
inc
fs
add
jecxz
cli
ja
xchg
adc
xchg
add
dec
shrl
rcll
push
push
mov
dec
jecxz
mov
inc
jecxz
or
xchg
andb
lcall
mov
inc
push
mov
sub
or
mov
jecxz
ficoms
cmp
popa
lock
jecxz
sub
adc
aas
push
pusha
and
jecxz
mov
je
jecxz
imulb
fcomp
lock
xor
mov
cmp
jecxz
and
movl
loopne
or
inc
jecxz
mov
jecxz
scas
sub
mov
bound
jecxz
sub
mov
mov
inc
nop
push
dec
jecxz
or
xchg
adc
nop
push
mov
jmp
adc
dec
inc
mov
out
pop
add
jecxz
pop
ret
dec
jecxz
hlt
xor
aaa
cmp
xlat
inc
push
jecxz
add
xchg
sbbb
mov
lret
jecxz
add
sbb
lock
jecxz
xchg
adc
icebp
cmp
dec
or
pop
and
cwtl
jecxz
dec
popa
xor
pusha
jge
push
adc
jnp
outsb
jmp
ret
aam
push
mov
push
cmp
shl
sbb
bound
jecxz
stos
or
adc
movsb
add
xchg
orb
or
popf
add
xor
sub
adc
cli
clc
xchg
ret
test
scas
es
cs
xor
ljmp
adc
xchg
add
es
ja
xchg
jecxz
cs
cmp
dec
jecxz
loop
and
add
or
test
js
mov
lcall
mov
xchg
jecxz
faddl
inc
mov
cmp
pusha
and
jecxz
test
add
inc
dec
jecxz
out
fsubrl
push
xor
mov
jecxz
add
dec
shrl
pushf
or
mov
and
pop
clc
jmp
pop
jecxz
movsb
jo
pop
cltd
add
mov
sub
and
shll
shrl
jbe
movsb
jo
andl
mov
fadd
inc
jecxz
and
outsb
and
dec
push
mov
jecxz
js
or
in
and
sub
xchg
sbb
ret
cld
inc
orl
jecxz
mov
es
orb
inc
adc
cmp
adc
test
jecxz
dec
rcrl
loopne
jecxz
popa
jo
das
ds
adc
jecxz
enter
and
adc
dec
rolb
jecxz
xchg
ret
cwtl
jecxz
movsb
xor
outsb
mov
or
jecxz
rolb
dec
jecxz
xchg
loopne
adc
adc
dec
loope
jecxz
dec
or
out
dec
and
sbb
jecxz
movsb
jo
pop
inc
movsb
lock
adc
orb
xor
jecxz
inc
cmp
sub
data16
mov
push
jno
jmp
inc
cmpb
push
roll
out
ja
xchg
adc
push
dec
scas
lcall
cmpsl
jne
sub
and
mov
and
jecxz
movl
inc
push
mov
sbb
lds
jecxz
or
pop
sub
sbbl
jecxz
and
or
mov
es
jecxz
push
jecxz
movsb
xor
js
jecxz
jecxz
push
push
xor
push
or
inc
jecxz
bound
test
aam
push
jecxz
xor
xchg
ret
inc
xchg
movsb
jo
es
xor
pusha
mov
test
call
sub
mov
rolb
popf
bound
sub
xchg
dec
or
adc
mov
jb
ja
inc
jecxz
ds
xchg
dec
push
mov
movsb
loopne
loop
cmp
adcb
lds
out
xchg
nop
mov
je
scas
es
mov
pop
xor
and
cmc
xchg
dec
test
and
jecxz
and
lods
adc
jecxz
mov
int3
fstpl
jecxz
push
cmp
jo
jecxz
pushf
popf
jo
and
aas
adc
stos
or
daa
jecxz
divb
out
mov
sub
xor
jnp
subl
sbb
xchg
mov
jecxz
sbb
and
jecxz
es
xchg
adc
jne
dec
or
push
jecxz
or
add
jecxz
in
pop
sub
sub
in
inc
xor
outsb
and
cmp
hlt
repz
fdivp
out
fsub
popa
lcall
xchg
ret
faddl
adc
sub
mov
mov
xor
fwait
nop
lea
js
dec
and
stc
push
les
out
adc
sub
leave
mov
loope
sbb
dec
sti
scas
and
aad
jecxz
push
or
dec
jecxz
mov
cltd
dec
jecxz
shlb
adc
mov
movsb
jecxz
loope
in
xor
nop
add
dec
jecxz
daa
inc
lods
and
jecxz
mov
sbb
cmp
sbb
xchg
sbbb
mov
sahf
mov
orb
xchg
ret
stos
jecxz
inc
push
add
mov
and
rolb
push
adc
adc
lcall
dec
and
and
adc
add
sub
xor
and
push
inc
mov
dec
popa
dec
fsubp
pop
imul
mov
inc
push
xor
push
arpl
and
movsb
jo
xchg
nop
xchg
cmp
lock
sbb
push
adc
jmp
xor
adc
pop
mov
lcall
lcall
jecxz
ret
inc
sub
dec
movsb
jo
es
cld
xor
mov
stc
nop
pop
dec
and
jecxz
insl
xor
push
mov
adc
sbb
push
test
sbb
add
outsl
sbb
sub
xchg
orl
mov
ret
add
movsb
pusha
das
es
add
pop
mov
or
xchg
adcb
ss
push
dec
jecxz
mov
push
dec
loope
add
adc
jecxz
lods
xor
inc
push
xchg
ret
popa
dec
loope
es
popa
add
adc
dec
rorl
dec
jecxz
sub
ret
lret
fiadds
shl
push
pop
dec
sarl
scas
push
mov
adc
fistpl
or
iret
push
jecxz
add
shll
xchg
icebp
sub
jecxz
xchg
dec
sbb
inc
pusha
sbb
lds
mov
clc
push
call
add
call
sub
sub
cmp
imul
xor
into
push
jecxz
or
imul
jecxz
es
ret
jecxz
xchg
and
fwait
es
inc
mov
push
dec
jecxz
add
xor
jecxz
nop
loopne
mov
push
sub
lahf
xor
aaa
enter
jmp
sbb
xor
adc
cmp
dec
and
orl
push
scas
add
mov
add
lret
es
jecxz
mov
jecxz
xchg
stos
sbb
ds
adc
sbb
fwait
mov
add
jecxz
dec
scas
and
xlat
jae
dec
outsb
loope
dec
and
mov
jecxz
repnz
xchg
sbbb
or
shl
sub
and
mov
sub
cmp
inc
loopne
or
jno
pop
xchg
adc
insb
cmc
test
push
xor
dec
dec
and
adc
adc
dec
jecxz
dec
or
jecxz
movsb
jo
adc
cmp
adc
xlat
inc
jecxz
aam
adc
xchg
jecxz
xchg
adc
jecxz,pn
inc
push
mov
adc
xor
xchg
adc
loope
mov
daa
xchg
ret
mov
and
aaa
test
mov
jecxz
adc
push
pop
add
sub
jecxz
decb
jecxz
fidivrs
xchg
roll
xchg
adc
jbe
push
pop
xor
mov
jecxz
inc
push
sub
es
ret
jecxz
xchg
or
dec
mov
mov
dec
add
pop
out
dec
and
xlat
fisubrs
sub
xor
clc
push
jecxz
dec
or
add
or
sbb
xchg
add
dec
movsb
mov
sub
inc
in
adc
outsl
jmp
daa
xchg
loop
mov
and
roll
fcoms
dec
inc
popa
and
adc
pop
insl
test
ret
and
mov
xchg
ret
ret
rclb
push
es
sub
xor
inc
faddl
push
sub
adc
movsb
xor
xchg
push
roll
mov
loopne
rclb
add
cmpsl
adc
pop
aam
add
and
xor
divb
jo
and
xor
popf
dec
or
push
ret
dec
fsubrl
call
xchg
push
dec
or
movsl
add
subb
push
mov
push
cmp
bound
adc
inc
ret
xchg
adc
ret
mov
and
ret
mov
xchg
adc
inc
ret
movsb
pusha
out
push
insl
jmp
orb
inc
push
ret
dec
push
ret
and
sbb
jge
test
arpl
jno
add
pusha
and
sbb
adc
adc
aas
mov
xchg
ret
shlb
roll
add
pop
int
sbb
sbb
cmp
sbb
ror
jmp
pop
mov
mov
mov
popa
nop
inc
gs
xchg
dec
stos
mov
fadds
in
stc
xchg
adc
gs
add
push
add
inc
fistps
out
or
push
add
sbb
mov
and
inc
push
ret
movsb
jo
or
ret
mov
mov
and
ret
bound
ret
mov
pusha
xchg
mov
dec
cmp
orb
and
ret
mov
add
pop
ret
jo
gs
lods
or
stos
mov
iret
adc
sub
ret
sub
add
sub
or
mov
push
mov
inc
push
js
jmp
adc
rol
mov
jl
and
jns
xchg
adc
imul
sub
insb
lods
xchg
orb
sub
mov
ret
xor
aam
loopne
add
xor
fs
pop
test
pusha
and
pop
sub
or
pop
in
gs
in
jle
push
or
cmpsb
push
jne
ret
push
lock
imul
loopne
roll
mov
mov
pop
ret
xchg
adc
push
mov
adc
xor
and
xorl
dec
ret
mov
ret
cwtl
dec
or
ret
and
lods
nop
hlt
adc
sbb
rorl
adc
xchg
ret
xor
xor
adc
movnti
add
xchg
adc
cwtl
sub
das
sub
test
dec
adc
mov
add
adc
ret
sub
or
push
ret
push
loope
lcall
dec
ret
cmp
push
sub
test
push
mov
and
and
add
es
orb
inc
push
js
lds
fcom
ret
lds
ret
dec
or
jecxz
ss
lcall
ret
push
and
xchg
add
inc
adc
pop
data16
loopne
dec
mov
test
clc
sub
xchg
ret
dec
or
bound
cwtl
ret
push
push
ret
push
and
ret
adc
ret
adc
inc
test
ret
xchg
ret
jne
mov
hlt
jp
es
subb
pop
es
ret
jnp
ret
and
pop
movsb
out
sub
jae
and
ret
add
or
ret
lock
xchg
es
ret
test
xchg
adc
jo
test
adc
rolb
ret
popa
insb
and
lods
js
dec
ret
frstor
adc
mov
pop
mov
xor
add
lcall
orb
xchg
adc
or
or
xchg
adc
sbb
sarb
dec
inc
xor
sarl
aam
aam
das
sbb
xchg
adc
dec
inc
imul
ret
sahf
dec
and
aaa
mov
adc
xchg
mov
xor
adc
mov
or
test
inc
dec
and
ret
dec
loope
sub
ret
sub
sarl
bound
ret
mov
pop
ret
dec
or
pop
inc
ret
cwtl
ret
adc
push
es
ret
lods
stos
mov
dec
ret
add
dec
popa
ret
dec
or
sbb
or
lcall
ret
xchg
adc
dec
outsb
ret
push
push
push
add
imul
cwtl
es
jmp
leave
mov
or
ret
pushl
jnp
mov
pop
ret
imul
mov
arpl
test
xchg
sub
push
loope
pusha
and
and
add
aaa
inc
bound
jg
xchg
adc
push
ret
es
ret
sbb
xchg
ret
nop
bound
lcall
and
cmp
ret
lds
mov
jo
stos
sbb
jl
call
add
mov
push
dec
and
push
data16
lcall
loopne
aas
mov
dec
movsb
mov
dec
cmp
add
stc
push
adc
and
ja
daa
push
call
fwait
cwtl
dec
ret
sbb
repz
dec
and
sbb
inc
dec
and
ret
adc
mov
fwait
lcall
dec
or
and
ret
and
mov
ret
jl
sub
add
ret
jnp
adc
test
ret
dec
or
push
sub
sub
faddl
ret
fs
dec
push
scas
mov
push
mov
mov
loope
mov
cmp
inc
and
push
mov
inc
ret
xor
ret
push
push
ficoml
packsswb
xchg
cmp
ret
fwait
call
ret
subl
movsb
pusha
pusha
pop
sub
add
add
jae
mov
addb
loope
orb
shll
mov
mov
dec
and
ret
xor
cli
shrb
rolb
lock
mov
mov
dec
call
roll
js
mov
xchg
roll
inc
push
pop
xchg
insl
mov
inc
push
mov
xchg
ret
ret
xor
or
es
rorl
fwait
dec
ret
add
sub
add
ret
dec
and
aaa
cmp
fdivl
ret
fadds
pop
ret
lds
pop
ret
movsb
mov
subl
xor
add
cmpsl
jmp
hlt
xor
pushf
xor
inc
push
ret
push
adc
icebp
ret
pushf
sub
mov
fisttpll
jle
or
xor
jge
shlb
xchg
adc
aam
mov
aas
ret
add
and
daa
xchg
add
inc
push
sbb
ja
jle
call
movsb
jo
push
xchg
xchg
inc
mov
ret
cmc
push
enter
lds
aad
ret
and
sub
sub
mov
and
add
adc
xchg
ret
add
dec
add
add
sub
xchg
and
jo
xchg
add
pusha
xchg
add
mov
pop
dec
xchg
add
xchg
movsb
add
icebp
push
push
add
dec
dec
adc
cmp
pop
xor
stc
out
fisttps
and
in
dec
or
mov
sbbl
push
dec
xchg
add
rcrb
dec
add
movsb
jo
add
ret
cld
lcall
notl
sub
dec
add
loopne
sbb
cmc
fbld
fcoml
in
xchg
adc
mov
movsb
jo
add
mov
adc
stos
add
dec
movsb
jo
push
add
push
push
mov
and
ret
add
ja
push
push
testb
outsb
xchg
and
add
sub
add
sub
out
push
mov
idivl
mov
sub
lret
xlat
es
cs
cmpb
inc
imul
xchg
add
shlb
mov
lcall
add
xchg
sub
test
sub
popa
mov
jnp
int
cmp
lret
adc
shl
outsb
rcll
add
and
and
jnp
jb
add
jns
add
add
push
xchg
mov
adc
jbe
add
dec
test
inc
push
xor
js
xchg
and
jb
popa
test
xchg
orb
jnp
dec
and
std
sub
dec
loope
sub
fdivr
inc
test
call
xchg
fsubr
cmp
cwtl
out
sub
xchg
mov
mov
insl
xchg
sti
movsb
jo
push
dec
sub
test
add
cltd
jno
dec
and
fists
push
xor
inc
mov
add
repnz
add
mov
xchg
movsb
loopne
adc
xchg
add
jno
enter
stos
and
add
push
xchg
adc
mov
dec
xchg
ret
dec
add
mov
or
push
add
dec
loope
sub
push
dec
sub
push
and
xchg
stos
and
je
xchg
and
add
xchg
ret
add
dec
add
dec
add
loope
sub
inc
dec
inc
add
and
xor
add
arpl
sub
inc
jl
mov
movsb
jo
dec
add
xchg
add
xor
out
adcb
push
xchg
adc
test
and
pushf
pop
or
addb
mov
dec
popa
mov
mov
cmp
xchg
ret
sub
jbe
dec
add
popa
pusha
or
sub
add
sub
fiaddl
and
and
sub
pop
sbb
xchg
movsb
add
cmp
clc
dec
xchg
cmpb
xchg
adc
add
push
add
pop
cmp
xchg
add
aaa
inc
dec
push
add
or
sbbl
cmp
popa
add
and
sub
dec
or
xchg
adc
cmp
add
dec
add
push
dec
push
mov
or
xchg
and
arpl
add
dec
loope
add
aas
and
ret
stos
add
inc
xchg
add
push
mov
sub
add
test
mov
or
add
inc
ds
adc
xchg
and
aas
scas
and
aaa
adc
xchg
adc
dec
dec
adc
adcb
xchg
and
add
inc
cmp
and
roll
cmp
push
add
lods
imul
fidivrs
xchg
xchg
and
add
lret
inc
push
add
and
scas
fs
xchg
adc
wbinvd
hlt
inc
dec
loope
push
add
and
ja
dec
add
mov
and
fdivrs
cmpsb
add
inc
sbb
push
icebp
sub
add
inc
and
fcoml
push
enter
mov
aad
and
insl
bound
pop
int3
xlat
pop
xchg
add
aad
mov
adc
pop
push
xchg
adc
nop
push
add
repnz
inc
pop
inc
leave
pop
xchg
add
hlt
push
adc
push
mov
and
pop
repnz
jb
loopne
arpl
lret
jae
or
sub
cmc
pop
das
imul
cmp
mov
add
movsb
mov
cmp
lods
popa
stc
scas
xchg
add
and
js
jns,pn
or
or
fsubrl
jns
lock
or
add
das
push
lahf
xchg
movsb
push
in
push
loopne
test
imul
xchg
out
sub
movsl
pop
add
shrb
adc
sub
jne
test
outsb
push
jo
add
test
push
and
and
sub
add
jp
lret
js
add
adc
sub
mov
or
fs
ds
xchg
adc
xchg
sbbb
push
dec
add
and
and
mov
imul
stos
and
mov
and
mov
push
and
add
imul
dec
loope
pop
imul
in
pop
inc
imul
lock
and
push
dec
add
imul
push
dec
add
mov
and
in
and
faddl
add
and
out
mov
or
sub
mov
xchg
out
sub
movsb
imul
dec
push
pop
cs
dec
push
js
add
push
add
dec
push
mov
and
xlat
inc
add
xchg
add
cmc
push
adc
add
or
xchg
add
pop
pop
movsb
sub
mov
pop
mov
dec
add
stos
and
cmp
add
mov
test
cld
incl
push
dec
push
mov
xchg
ret
scas
add
push
add
mov
pop
inc
call
and
mov
mov
enter
dec
pop
sub
fisttpl
mov
jb
and
and
jno
dec
xchg
add
movsb
pusha
addr16
mov
aam
loop
xchg
add
dec
xchg
addb
pop
stos
xchg
movsb
pusha
add
jg
add
mov
add
sub
or
add
adc
mov
cmp
mov
test
dec
cmc
jg
xchg
adc
add
sub
mov
add
mov
ja
and
mov
dec
or
adc
and
or
jo
dec
add
pop
sbb
push
and
fsubrs
add
cwtl
ficoml
pop
mov
cmp
or
lock
mov
xchg
cmpb
add
inc
leave
js
dec
xchg
and
push
add
pop
mov
or
add
add
ret
dec
add
pop
stos
push
lock
das
in
mov
and
pushf
lock
outsb
push
adcl
sub
add
mov
add
add
test
test
add
cwtl
xor
inc
jo
pop
dec
add
sub
lods
xchg
movsb
add
mov
or
out
inc
add
xchg
popa
cmp
dec
add
sub
sbb
dec
push
xchg
add
mov
fsubrl
add
and
sub
movsb
loopne
adc
xchg
add
aam
push
test
add
mov
add
mov
sti
test
les
jb
cs
lret
enter
lret
cmpsb
inc
repz
dec
pop
and
rorb
xchg
adc
ret
push
lahf
push
shrb
dec
xchg
add
dec
add
in
fmull
fadds
test
inc
sub
inc
xchg
add
andb
add
call
and
mov
push
jno
dec
push
add
sbb
dec
push
mov
xchg
mov
test
ja
adc
xchg
sub
dec
cmp
xchg
clc
fdivl
mov
jb
and
fmul
enter
push
mov
testl
add
ja
push
push
xchg
movsb
jo
shll
sahf
xor
addb
sahf
rcrl
mov
inc
dec
push
cmp
jbe
pop
sbb
gs
push
repnz
xchg
add
pusha
and
jae
mov
add
add
push
lds
and
sahf
sub
in
add
pop
cmc
sub
mov
lock
dec
pushf
aaa
push
jl
icebp
cmp
push
or
insb
inc
xchg
insb
addb
dec
shll
jbe
add
dec
dec
push
xor
dec
sbb
out
push
add
push
stos
fwait
or
inc
jae,pn
xor
push
dec
push
add
nop
inc
sbb
or
jb
in
xor
cmp
xlat
cmp
cmp
stos
sub
cmpsl
push
xchg
adc
lcall
push
call
or
pushf
arpl
add
pop
pusha
test
sub
repnz
ret
mov
in
xor
iret
cmp
test
xchg
movsb
pusha
aad
push
ret
or
cmpsb
cmp
xor
mov
movsb
jae
dec
or
push
add
cmp
and
cmp
das
rolb
pop
cmp
xchg
and
fwait
ljmp
add
faddl
scas
mov
je
movsb
loopne
push
test
xor
ljmp
inc
sahf
pop
arpl
sub
movsb
mov
lcall
xor
scas
jbe
add
inc
dec
push
add
adc
or
adc
inc
ds
and
push
xchg
add
or
or
imul
dec
add
int3
jae
mov
xchg
and
add
dec
test
mov
fiadds
popa
data16
dec
sahf
inc
push
ss
mov
les
sbb
jo
out
sub
push
pushl
pop
fstpl
push
data16
pop
lods
out
xchg
out
mov
push
bnd
jge
fcomps
or
das
es
dec
dec
rorl
cs
pop
and
xchg
movsb
jo
add
movsb
or
dec
or
int
push
jle
mov
xor
loopne
and
xchg
outsb
add
in
into
mov
xchg
add
enter
adc
aad
xchg
adc
or
jnp
add
adc
push
inc
pop
pop
cmpsl
sub
push
xchg
adc
cwtl
dec
xchg
ret
add
mov
faddl
and
mov
call
in
inc
dec
add
push
xchg
add
pushf
mov
cmp
loope
inc
mov
push
xchg
mov
add
xor
dec
push
add
sbb
push
sub
mov
jl
lcall
mov
xchg
add
imul
xchg
add
and
cmp
adc
sub
ja
ds
jb
les
int3
cmp
push
pop
ret
nop
lahf
bound
ja
fistpl
jge
push
mov
enter
cmp
inc
leave
enter
ret
sub
mov
add
nop
fnstenv
xor
in
aas
xor
rorl
mull
es
sub
mov
xchg
movsb
pusha
addb
mov
add
out
mov
ret
add
movsl
sub
ret
add
and
dec
cmp
mov
add
ret
mov
jno
movsl
mov
mov
or
cmpsl
add
xor
add
mov
push
movsb
ret
and
cmp
add
add
cmpb
es
ss
popa
cmpb
dec
add
mov
xchg
add
in
push
dec
push
add
lret
sub
push
xchg
adc
or
sbb
push
cmp
mov
pop
cmp
dec
pop
inc
dec
add
pop
dec
push
js
add
pop
or
xchg
mov
jbe
push
cs
repnz
stc
add
inc
dec
push
add
testb
loope
rolb
or
xchg
ret
and
or
stos
add
cmp
rclb
xchg
and
add
cmp
js,pn
inc
leave
push
sbb
cs
ret
cmp
popf
mov
sub
addb
push
mov
adc
mov
sub
dec
xchg
ret
add
fmuls
fdivp
test
xchg
add
xchg
and
leave
or
mov
or
scas
inc
sahf
add
xchg
adc
sbb
nopl
inc
ja
xchg
adc
cltd
sub
sub
add
add
mov
push
inc
xchg
inc
mov
scas
cmp
push
in
icebp
notb
fsubp
and
push
add
inc
cmpsb
in
push
cld
out
dec
and
lret
lods
into
jae
cmp
mov
sahf
ret
adc
dec
xchg
add
loop
add
xchg
adc
rolb
add
xchg
sub
data16
add
sbbb
and
xchg
movsb
pusha
scas
dec
shll
lock
xchg
movsb
add
dec
xchg
ret
add
add
lock
mov
and
dec
add
ss
add
dec
ret
lea
std
xor
xchg
ret
push
and
add
ss
scas
sub
popf
jb
push
push
xchg
add
adc
push
add
xor
push
rcrl
add
add
clc
push
inc
stos
inc
call
adc
push
xchg
adc
ret
add
outsl
or
shll
sub
add
mov
fldl
push
xchg
adc
in
add
inc
loopne
inc
cmp
dec
or
push
sbb
sub
in
or
inc
dec
push
add
cmp
add
dec
or
mov
sub
and
xor
push
dec
push
add
rorl
jg
xchg
add
xchg
and
add
or
sub
add
loop
adc
in
dec
and
imul
xchg
and
pop
push
dec
push
adc
add
add
xor
or
inc
mov
and
fcoms
or
lcall
popf
inc
dec
dec
out
add
dec
add
pop
inc
dec
push
push
jecxz
mov
push
inc
add
pop
jbe
pusha
add
inc
fnstsw
adc
and
add
xchg
adc
or
add
add
test
test
int3
lods
cltd
add
or
adc
jl
testl
js
mov
loope
adc
lahf
xor
push
sbb
hlt
into
insl
aas
cmpsb
xor
mov
mov
and
push
push
mov
jo
and
cmpsl
out
test
jg
and
pushf
out
push
inc
ret
clc
dec
jmp
dec
mov
adc
mov
jo
pop
sbb
cld
adcb
and
xchg
jle
lret
das
add
clc
xchg
movsb
jo
push
dec
xor
aaa
adc
xchg
and
call
and
xchg
adc
or
dec
popa
xor
aam
call
push
mov
mov
adc
sub
adc
add
and
xchg
and
fdivs
or
in
insl
outsb
or
cwtl
dec
popf
and
fisttps
inc
add
or
stos
mov
push
pop
pop
sbb
das
mov
xchg
ret
xchg
movsb
jo
inc
stos
and
fsubrl
aaa
loop
dec
or
loope
dec
cwtl
add
pop
dec
push
jo
inc
and
dec
xchg
ret
mov
adc
sub
mov
jmp
and
adc
push
adc
adc
insl
and
mov
pop
cmc
popa
movsl
test
pop
xchg
dec
and
or
repnz
mov
pusha
jg
and
cwtl
cmpb
inc
cmpsb
imul
enter
xor
push
push
xchg
adc
shll
dec
sarl
push
xchg
adc
dec
and
push
lock
xchg
and
and
adc
add
mov
and
sbb
mov
dec
rorl
and
push
and
cmp
xchg
and
push
mov
push
and
pusha
and
cmp
sub
call
mulb
ss
mov
movsb
jo
loopne
pop
add
dec
stos
push
test
inc
inc
rcrl
xor
inc
xchg
addb
jmp
mov
xor
dec
shl
pusha
push
sub
cmp
out
mov
dec
push
xchg
adc
pushf
rcll
dec
popa
movsl
inc
and
hlt
ret
and
icebp
sub
enter
dec
or
rcrb
adc
shlb
xor
scas
sub
inc
dec
minps
pusha
inc
pusha
pop
inc
fists
jo
inc
out
int
sbb
mov
fs
sub
mov
js
jmp
dec
and
mov
and
mov
and
pop
sub
or
and
mov
xchg
ret
and
sub
dec
and
and
push
push
and
pop
push
xchg
adc
dec
push
pop
sbb
adcb
test
and
jbe
dec
or
push
xchg
adc
push
xchg
adc
push
sub
rcrl
loope
and
sub
popa
ret
push
and
cmpl
jbe
inc
dec
push
and
xchg
and
and
sbb
mov
push
jne
sbb
sub
rcll
add
xor
imul
xchg
and
and
add
sbb
nop
push
jb
fiadds
pusha
or
xor
into
mov
and
pop
pusha
adc
xchg
xlat
lock
mov
in
push
test
xor
test
or
std
push
loopne
cmp
xchg
xor
jmp
addr16
fbld
xor
pop
cmpsl
and
xor
into
ret
ja
ret
mov
mov
ds
cmpsb
fld1
cmp
aas
pusha
icebp
adc
divl
add
adc
scas
inc
sub
das
and
mov
adc
pop
or
js
and
xor
testb
dec
xor
jo
sbb
mov
sub
lock
imul
ret
adc
add
dec
popa
test
adc
pop
add
inc
cld
rorl
shr
popa
je
dec
inc
xchg
movsb
jbe
and
xchg
adc
gs
inc
rclb
pop
push
inc
sub
dec
and
mov
xchg
movsb
jo
and
loope
xchg
inc
cmp
paddusw
test
add
push
jo
cwtl
fucomp
adc
jb
pop
call
mov
js
xchg
leave
pop
mov
loope
xchg
xorl
pop
mov
das
dec
inc
mov
adcb
xor
mov
outsb
sbb
xchg
sbbb
push
mov
and
inc
inc
push
das
gs
orb
inc
addr16
mov
fucom
sbb
add
xchg
movsb
jo
inc
adc
cmpl
adc
sbb
and
fsubrl
xor
push
push
xor
or
push
dec
inc
bnd
dec
inc
xor
xchg
inc
leave
faddl
ret
cmp
inc
xchg
and
subl
out
mov
adc
sub
fcoms
cmp
testb
hlt
shll
adcb
push
xchg
adc
inc
dec
xchg
adcb
inc
dec
push
mov
add
dec
push
mov
xchg
sbbb
inc
fbstp
xchg
adc
int3
inc
pop
mov
fmuls
sub
dec
xchg
lcall
xchg
adcb
adc
jae
test
pop
aas
push
add
sbb
mulb
or
xchg
ret
add
orl
xor
rorb
dec
popa
xor
and
and
and
ret
add
lcall
and
adc
pop
data16
mov
or
xchg
adc
mov
inc
add
add
sti
enter
mov
push
jne
push
xchg
adc
xchg
adc
pop
outsb
addl
xchg
and
add
xchg
ret
add
test
pop
adc
adc
aam
or
add
dec
mov
sub
push
add
ficoms
dec
push
add
dec
add
add
and
pop
stos
add
add
add
xor
dec
or
xchg
and
mov
add
rclb
mov
inc
push
xchg
add
out
xchg
movsb
mov
nop
out
sub
or
test
add
ljmp
test
inc
xchg
and
add
nop
add
subl
dec
or
jns
push
push
xchg
adc
dec
xchg
addb
add
arpl
add
ret
xchg
add
ds
lods
dec
xchg
add
add
fstl
add
or
je
and
test
sub
dec
push
clc
mov
push
add
repz
add
adc
inc
mov
arpl
dec
sbb
jecxz
mov
test
jecxz
faddl
dec
jecxz
outsb
fisubrs
sub
outsl
push
xor
adc
call
shll
lods
inc
xchg
ret
pop
and
xchg
jecxz
dec
loope
out
mov
bound
and
push
cmp
dec
push
jecxz
pop
mov
lea
ret
jecxz
or
or
ret
sbb
loopne
sbb
push
sub
xchg
loope
jecxz
and
jnp
bound
pop
jne
sub
add
jecxz
xchg
ret
lret
ret
inc
jecxz
loope
inc
xchg
jecxz
xchg
test
and
add
dec
loope
jecxz
mov
jecxz
add
xor
andl
out
sbb
jecxz
inc
mov
insb
lea
and
jecxz
mov
loopne
add
push
les
jecxz
popa
push
and
jecxz
xor
cmp
add
lahf
dec
pusha
pop
adc
adc
popa
nop
xchg
subb
mov
jns
inc
add
push
cmp
sbb
xor
adc
and
ret
icebp
jecxz
inc
dec
ja
push
xchg
jecxz
mov
xor
adc
fldt
add
dec
or
mov
sbb
rolb
sub
lcall
inc
sub
and
add
loopne
inc
call
push
loopne
and
inc
mov
cmp
dec
push
adc
aad
xor
mov
lds
xchg
orb
aas
call
jecxz
xor
push
pusha
and
cmp
in
inc
and
fwait
xor
xor
out
cltd
shrb
cli
int3
or
pop
xor
xor
cmp
jnp
jg
cmpsl
scas
mov
jecxz
dec
loope
int3
jecxz
mov
jle
adc
loope
xchg
movsb
pusha
sbbb
orb
inc
ljmp
cld
jecxz
and
fs
adcb
xor
adc
and
pop
scas
pop
stc
sub
or
nop
cmp
inc
int3
mov
and
inc
and
shl
lea
shlb
iret
add
mov
mov
loopne
lea
xchg
adc
int3
ret
dec
inc
pusha
or
push
ret
xor
ds
sub
insl
cli
add
out
and
add
push
mov
fistl
movl
sahf
in
fidivrs
jo
add
stc
sbb
add
addr16
mov
lods
lods
rol
mov
ret
test
pop
rorb
ret
xchg
adc
rcrb
movsb
dec
xor
dec
stc
mov
jle
cmpsl
xchg
movsb
mov
ret
jo
mov
ret
rorb
mov
inc
sub
and
popa
ret
imul
mov
inc
and
cmp
xor
pop
xor
scas
nop
and
and
roll
jp
push
cmp
push
push
lds
add
dec
roll
adc
adc
xor
push
and
inc
test
add
dec
ret
xchg
outsb
push
sub
outsl
sub
xor
sub
sbb
ret
rorl
and
xchg
adc
push
and
push
xor
push
push
jo
adcl
ret
fs
mov
ret
pop
mov
ret
dec
push
jo
adc
dec
push
mov
push
and
faddp
nop
push
sbb
sbb
ja
xor
and
add
rcrl
cmp
call
es
ret
mov
cwtl
inc
xchg
ret
jge
dec
push
jo
ret
shl
add
inc
jp
pushf
or
call
xchg
ret
dec
inc
mov
xchg
inc
and
out
fisttpl
and
pop
and
or
imul
aaa
inc
xchg
inc
push
bnd
cld
add
jns
in
or
or
inc
add
les
dec
loope
ret
bound
fmul
inc
ret
lea
mov
in
push
xchg
jmp
std
xchg
je
pop
jp
pop
dec
sub
push
addr16
inc
ret
sahf
mulb
and
sub
jns
out
mov
insb
and
jnp
jl
popa
push
movsb
push
ss
rcr
xchg
movsb
jo
add
movsl
add
and
faddp
movsb
pusha
rolb
xor
or
or
dec
or
addb
xchg
adc
or
movsb
pusha
jp
int
mov
ret
adcl
ret
bound
incl
sti
sub
mov
or
loopne
mov
push
adc
sbb
sbb
push
out
xchg
sub
mov
and
pop
sub
or
and
sub
jp
mov
dec
ret
les
or
gs
clc
or
sub
bound
fsubrs
cwtl
test
clc
pop
or
je
ret
add
ret
dec
ret
int
decb
xchg
ret
pop
sub
dec
or
stos
inc
mov
bound
mov
dec
or
sbb
mov
sbb
cmp
mulb
sub
lcall
xor
lea
push
xchg
push
pop
ret
xchg
mov
or
mov
imul
inc
dec
loopne
dec
loope
adc
mov
push
push
and
xor
or
popf
mov
xor
mov
push
dec
rorb
mov
push
mov
adc
lcall
or
dec
or
mov
mov
inc
and
adc
dec
mov
xor
sub
push
movsl
insl
dec
cmp
mov
dec
or
xchg
adc
das
inc
adc
dec
or
imul
sbb
data16
mov
xor
add
inc
adc
dec
push
cmp
dec
or
mov
daa
sbb
lea
popa
jb
inc
add
adc
dec
mov
mov
lock
xchg
inc
bound
inc
mov
xor
xchg
ret
mov
mov
or
mov
bound
mov
jg
rorl
call
cmp
dec
loope
mov
push
xor
adc
addl
and
jae
pop
push
mov
lods
out
pusha
add
mov
test
and
xor
push
lock
mov
inc
xchg
mov
adc
inc
and
dec
add
insb
push
mov
add
adc
lea
push
mov
dec
mov
sahf
xchg
dec
inc
rorb
or
xor
lea
insl
jbe
or
or
mov
mov
push
ret
and
xorb
mov
movsb
mov
cmpb
outsb
mov
or
mov
add
or
dec
push
mov
bound
mov
andb
lcall
mov
mov
inc
pusha
cs
mov
mov
xor
push
andb
loopne
cmpsb
sub
mov
add
dec
loope
mov
add
push
rorb
mov
xor
mov
inc
aam
sub
ret
and
sbb
roll
mov
and
mov
or
mov
dec
cmp
mov
mov
sub
and
rorl
or
pop
pop
ret
bound
cmp
pusha
and
mov
daa
or
mov
mov
mov
mov
addl
and
dec
mov
mov
sub
pop
inc
mov
outsl
lds
adc
xor
sbb
sub
or
jnp
pop
adc
popl
add
mov
sarl
or
test
xor
xchg
adc
movsb
loopne
xor
xor
push
mov
add
dec
mov
popa
nop
mov
enter
cmp
adc
dec
push
mov
lcall
int3
mov
adc
adc
sub
xor
addb
ljmp
mov
adc
and
dec
mov
and
push
adc
dec
popa
xor
mov
mov
addb
mov
mov
bound
mov
push
out
mov
and
pop
or
sbb
dec
mov
dec
mov
movsb
mov
adc
mov
xchg
mov
adc
andb
cmp
add
mov
or
or
adc
js
xchg
push
and
sti
int
loope
mov
rcr
pop
arpl
mov
lea
jo
dec
sub
jbe
dec
xchg
rcl
pusha
int3
rorl
mov
inc
sub
or
insl
and
pop
adc
adc
mov
xor
sbb
dec
mov
inc
lea
scas
jb
fisttpll
addb
rorb
cmp
mov
mov
mov
stos
xchg
mov
xor
addl
and
fcoms
adc
add
add
dec
loope
mov
nop
pushf
push
adcl
movsb
jo
subb
mov
adc
popf
xor
mov
sbbb
dec
and
andl
mov
loopne
mov
ffreep
mov
mov
cmpsb
mov
mov
mov
xchg
movsb
pusha
push
mov
pusha
movsb
mov
cmp
and
push
in
mov
and
imul
ja
and
xor
cmp
mov
jge
lea
dec
outsb
in
push
adc
or
sub
sbb
rclb
and
adc
loopne
inc
shlb
mov
test
shll
jo
or
add
mov
and
rclb
test
push
and
mov
adc
lea
test
inc
push
pusha
jg
wrmsr
scas
mov
mov
popa
gs
test
inc
scas
and
mov
or
mov
inc
mov
xor
sbb
push
ljmp
lcall
sbb
aaa
mov
mov
and
sub
jle
mov
inc
mov
and
mov
mov
and
xchg
movsb
lock
andb
mov
bt
dec
add
lock
sbb
mov
mov
sub
lods
pushf
rol
adcl
sub
rol
rcll
inc
xchg
andb
outsl
inc
jo
and
mov
xchg
sub
and
aad
xor
mov
dec
push
mov
or
or
mov
mov
jb
mov
jo
es
and
xchg
popf
pusha
and
mov
xchg
xorb
adc
inc
rolb
adc
add
out
xor
test
mov
sbb
push
and
cmp
nop
mov
sbb
mov
or
mov
adc
xchg
push
xor
or
sub
mov
add
lea
adc
dec
jecxz
and
adc
and
cmpsl
cmpsb
jbe
mov
and
movsl
mov
pop
lea
adc
inc
lea
xor
mov
fsts
push
sub
roll
adc
jecxz
mov
push
and
jecxz
pop
xchg
adc
push
jb
sub
xor
stos
test
xchg
jecxz
mov
xor
jecxz
xchg
ret
ss
push
mov
or
jecxz
cmp
mov
jecxz
cmp
add
xor
xchg
jecxz
mov
add
pop
outsb
xor
aad
jecxz
push
and
aam
test
inc
lea
or
inc
adc
lock
sub
sub
insl
arpl
mov
in
dec
movl
ljmp
and
inc
arpl
mulb
push
inc
loope
xchg
and
push
and
or
add
scas
and
mov
mov
or
adc
test
add
inc
jnp
std
mov
add
lock
mov
and
pop
adc
inc
push
lock
dec
ss
add
sub
lcall
push
push
test
sub
and
andb
or
add
sub
add
test
add
adc
orl
jo
and
and
add
cmp
add
dec
sti
and
add
lahf
add
imul
inc
adc
add
inc
inc
push
push
push
add
es
sub
fdivs
ss
popw
mov
addb
inc
loope
add
inc
push
mov
and
or
add
sub
mov
lods
or
and
sub
and
sub
or
jo
and
and
cmp
inc
loope
inc
and
add
lahf
ss
bound
and
popf
mov
pop
mov
or
add
dec
mov
popa
mov
lods
pop
pusha
xchg
mov
inc
ret
pop
and
mov
add
in
dec
pop
add
negl
adc
ficoml
and
jo
loopne
addr16
xor
call
xchg
and
imul
xorb
cmpl
lea
imul
ficoml
in
jo
sub
sub
fadds
stc
movsl
and
popf
or
mov
ljmp
and
pop
ret
dec
test
mov
pop
cs
mov
jl
cli
mov
xchg
mov
fldenv
gs
mov
push
insb
mov
and
or
and
lods
mov
stc
sbb
nop
fbstp
mov
xchg
sbb
and
adc
stc
aas
pop
xchg
mov
sbb
mov
clc
mov
sub
adc
push
enter
push
arpl
icebp
jg
lret
arpl
test
push
jnp
std
lock
push
push
mov
xchg
into
inc
sub
xchg
jo
arpl
hlt
fistpl
cmpsl
sbb
xchg
push
or
arpl
add
adc
adc
fcomps
pop
and
and
inc
jl
mov
arpl
xchg
arpl
mov
add
push
mov
arpl
out
jmp
fucomip
fmuls
pop
push
arpl
adc
test
and
jns
mov
sub
adc
out
sub
adc
adc
ret
arpl
sub
sub
dec
test
xchg
sub
arpl
cmp
jmp
mov
jge
mov
arpl
add
mov
cli
push
adc
mov
shrl
and
arpl
gs
push
fsts
arpl
ret
fwait
and
push
mov
push
adc
pop
test
test
hlt
cwtl
bound
rol
dec
testb
sub
sbb
cmpsb
and
and
inc
and
push
dec
leave
add
xchg
and
and
subb
jl
lcall
hlt
or
sbb
insl
mov
enter
js
repnz
clc
add
lock
push
add
fisttps
xor
test
dec
xor
jo
shll
jo
mov
arpl
dec
arpl
or
sub
sbb
add
call
or
inc
gs
xor
arpl
mov
push
mov
adc
lea
in
fbld
cli
add
sti
sbb
mov
push
sar
xchg
insb
add
addb
je
aam
push
mov
add
add
fmull
mov
aad
inc
or
stos
dec
add
sub
inc
add
add
scas
cmp
lret
nop
stos
mov
adc
pop
sbbb
dec
push
fsts
arpl
stos
lret
inc
arpl
dec
mov
jo
xor
push
into
aam
dec
mov
cs
arpl
pop
arpl
cmpl
push
add
es
outsl
jns
iret
cmp
cld
sbb
out
arpl
pop
loop
repz
lret
jnp
and
stos
mov
arpl
fs
fsts
arpl
mov
gs
arpl
jae
lret
fadd
pop
push
mov
loopne
xor
sub
sbb
imul
fisubs
test
xlat
jle
icebp
movsb
sub
lahf
mov
adcb
ljmp
mov
mov
arpl
lret
scas
cmpsb
xchg
xchg
aam
pop
int
push
arpl
rcrb
arpl
enter
or
popf
ficoms
int3
push
sub
arpl
jmp
rorb
subb
ret
inc
pop
adc
out
pop
stos
insb
or
mov
push
adc
push
push
adc
fwait
cmp
sub
jg
js
inc
push
adcl
lret
nop
mov
movsb
ret
lods
push
push
mov
addr16
cmp
or
mov
mov
insb
mov
lcall
jg
andl
lret
test
xchg
mov
in
dec
add
enter
out
add
add
dec
xchg
jle
ds
sub
add
add
inc
cmp
scas
sarl
add
adc
aaa
and
dec
dec
mov
cmp
cmp
push
mov
lret
sub
inc
xchg
sub
andb
out
push
gs
mov
push
fsts
mov
sub
pop
add
in
loopne
and
ret
push
mov
ret
pop
movsb
lret
mov
movsl
add
mov
adc
or
dec
mov
andb
mov
or
mov
mov
mov
push
fsts
mov
arpl
pop
dec
loopne
ret
pop
add
jmp
lods
lcallw
push
sti
subl
jp
lahf
mov
lahf
and
add
add
xchg
or
dec
cwtl
add
jo
lahf
xchg
cmp
int3
scas
mov
test
lahf
enter
jo
mov
jb
leave
add
popl
mov
xchg
in
inc
or
popa
inc
xchg
inc
lahf
jo
subl
loope
orl
mov
cmp
mov
test
sbb
pusha
mov
sbbl
push
div
or
ret
sbb
add
mov
sub
aas
clc
lods
or
popa
xchg
sbb
mov
jl
or
xchg
cmp
outsb
or
nop
sub
mov
test
ret
inc
or
adc
push
pop
shll
insb
test
enter
mov
push
jne
mov
test
addl
xchg
pop
jp
adc
std
sets
ljmp
inc
dec
or
mov
and
mov
or
mov
imul
mov
call
adc
inc
fstpl
mov
add
aas
and
xor
cmp
loopne
and
or
adc
out
add
iret
push
cmp
adc
stc
mov
scas
mul
insb
push
or
push
fmull
gs
loop
stc
dec
inc
and
add
jle
lock
pop
push
call
mov
push
add
sbb
jne
call
push
mov
aaa
lcall
pop
loop
sbbl
scas
adc
cmpsb
xorb
lret
adc
mov
pop
or
cld
sub
mov
sbb
ret
cmp
inc
subl
aaa
movsl
cmp
adc
pop
or
cmp
inc
or
ret
inc
pop
fimuls
dec
push
cmp
and
inc
and
pop
and
ret
sbb
cmp
or
mov
xorb
dec
cmp
testl
call
dec
or
rclb
push
mov
lods
inc
jno
sub
jecxz
data16
sub
mov
and
pusha
idivl
xlat
rclb
mov
ret
cmp
add
inc
movsl
sub
pop
cmp
sbb
jo
or
les
mov
xor
mov
imul
xor
cmp
popa
in
mov
fadds
sub
or
dec
push
ret
dec
or
mov
mov
stos
xor
scas
aam
adc
cmp
dec
cmp
dec
or
addr16
or
cmp
xor
mov
xchg
sub
icebp
in
dec
dec
rolb
test
addb
test
or
enter
cltd
dec
ret
cltd
lahf
dec
dec
and
shlb
rclb
mov
enter
cltd
dec
and
enter
xor
xchg
loopne
sbb
lea
add
xchg
jo
pop
dec
adc
adc
mov
add
xchg
sub
dec
mov
pop
dec
andb
and
or
fildll
lret
xchg
dec
sbb
aam
adc
cmp
or
rolb
mov
loope
pop
dec
xor
push
mov
xchg
lret
mov
add
push
cmp
cmp
push
nop
sub
push
das
push
dec
xor
int
add
outsb
mov
cs
add
dec
or
call
fdivl
xorl
gs
pop
push
dec
dec
or
movl
jno
and
mov
xor
test
shlb
dec
add
fdivl
push
daa
inc
xchg
sub
or
shll
and
add
or
jmp
dec
mov
dec
test
adc
sub
mov
movsl
psubsw
and
or
ljmp
push
sbb
nop
and
loopne
dec
dec
enter
cmpb
inc
aad
es
ds
lods
inc
add
nop
add
je
cmp
mov
pop
and
mov
dec
and
loopne
dec
and
dec
mov
fwait
lahf
xchg
cmp
or
add
daa
and
and
pop
call
das
cmp
jnp
add
mov
adc
or
faddl
pop
sub
add
push
xor
mov
lock
loopne
pop
loop
notl
xchg
dec
pusha
cs
sub
sbb
dec
or
mov
jnp
popf
jae
pop
inc
add
jl
std
adc
jo
dec
ja
and
xchg
sub
lea
adc
and
mov
xor
mov
nop
push
cmpsb
mov
and
inc
cmpsb
push
ficoml
mov
jo
loope
jle
popa
cmp
sbb
xchg
or
leave
std
imul
rorl
rorb
imul
in
jbe
mov
add
lcall
jb
pop
test
mov
inc
cmp
lods
mov
mov
es
or
hlt
xor
add
clc
xor
ds
popf
imul
sbb
decl
sbb
idivl
push
call
shr
xor
lods
jmp
pop
push
add
push
push
ds
dec
or
or
or
add
cmpl
insl
sbb
add
push
test
adc
out
imul
xchg
xchg
jno
or
data16
cwtl
cs
xor
add
inc
ret
testb
imul
je
mov
js
or
loope
mov
add
test
adc
pop
dec
cwtl
add
leave
adc
call
push
mov
pop
pop
in
xchg
gs
jl
jno
add
and
jbe
mov
les
mov
pop
gs
cmpsl
sti
je
int3
lahf
fs
rolb
aam
dec
ret
cmp
dec
xor
lds
mov
sbb
xor
adc
out
push
es
es
dec
add
ret
and
mov
inc
push
ret
ret
pushf
xor
and
lea
or
ret
pop
cwtl
daa
in
push
cmp
call
xchg
and
xchg
xchg
aaa
inc
xchg
or
push
js
lcall
andl
or
pushf
mov
loope
lcall
xchg
or
inc
imul
lahf
fs
add
sub
ret
insb
je
pop
in
dec
jmp
sbb
fwait
rolb
cmp
ret
shlb
cs
jp
dec
xor
int3
fs
xchg
and
call
xor
mov
ret
xchg
or
push
mov
cs
cmpb
push
mov
jmp
es
or
xchg
or
fmul
ret
and
popa
test
cmp
ret
stos
mov
jmp
xchg
or
mov
ret
xchg
and
add
sbb
sub
jbe
or
ret
rclb
jmp
adc
ds
inc
mov
ret
or
leave
mov
jno
cwtl
ret
and
or
inc
ret
inc
js
xor
xor
and
inc
xchg
pop
jmp
mov
ret
out
push
and
ret
xor
jle
es
sbb
sbbb
xor
es
mulb
aaa
ljmp
sbb
xor
addr16
mov
and
dec
xor
es
xchg
ret
test
cs
push
pop
enter
sbb
call
push
push
or
addb
cwtl
ret
out
jp
fwait
es
loopne
ret
xor
shl
mov
cltd
and
and
xor
ret
ljmp
ret
dec
lcall
dec
xchg
mov
test
cmp
adc
aam
ret
and
xor
ret
idivl
xor
adc
jecxz
sbb
cmp
popa
imul
ret
jmp
mov
sbb
adc
xchg
mov
test
and
andb
add
leave
adc
add
xor
inc
into
adc
mov
sbb
leave
ret
and
lcall
ret
xchg
or
push
mov
ret
and
cmp
xor
pusha
mov
fsubrl
dec
xchg
ret
lahf
jo
nop
xchg
popa
stos
ret
test
sbb
pop
ret
push
adc
add
in
orl
orb
leave
adc
pushf
ret
add
subb
ret
inc
sbb
push
xor
and
popa
xor
push
dec
xor
shll
xchg
and
mov
xlat
xor
cmp
enter
adc
fldl2t
inc
sbb
and
call
aad
lret
mov
xor
add
sbb
sub
ja
leave
adc
push
es
fs
out
in
arpl
jno
add
or
cwtl
or
aaa
ret
xchg
or
push
test
ret
test
sub
call
dec
xor
lret
mov
mov
inc
ret
dec
xor
and
or
and
hlt
movsb
outsb
jo
cwtl
fs
ret
or
and
ret
or
xor
adc
fildll
cmp
lcall
xor
adc
andl
adc
adc
cmpsw
add
xor
cmp
sub
push
lods
sbb
inc
or
mov
mov
ret
dec
push
add
add
out
out
fnstsw
or
out
push
in
in
ret
int3
clc
xor
es
adc
and
cmp
fsubl
cs
and
jecxz
adc
or
adc
mov
mov
push
call
or
nop
jecxz
faddl
es
push
push
xor
adc
repz
fnsave
je
test
cmp
mov
ret
aas
rolb
push
fsubr
and
dec
ret
sub
xchg
and
orl
repnz
xor
addl
xorl
push
ljmp
in
nop
push
mov
xchg
and
test
adc
subl
pop
xchg
or
dec
cmp
std
ret
stos
jmp
jno
je,pn
dec
adc
andl
inc
and
adcl
sbb
push
cmp
pop
xchg
and
xchg
mov
jno
subb
and
push
std
fisubrl
scas
cmp
jl
and
xchg
mov
add
pop
enter
add
inc
xor
inc
xor
mov
mov
andl
adcl
and
pop
mov
jo
cmpl
cmpl
sbb
test
and
xor
inc
adc
xchg
sbbl
jnp
leave
sbb
daa
fiadds
mov
ret
sbb
sbb
adc
cmpl
push
push
and
xchg
inc
xor
testl
bound
jbe
fnsave
mov
xchg
xchg
and
xor
and
xor
pop
push
andl
xor
call
stos
out
and
push
mov
adc
and
xor
cmp
pop
xchg
or
cmpb
inc
and
adc
sbb
mov
cmpb
fcomip
xchg
and
and
ret
sarb
and
push
out
dec
sbb
test
add
loopnew
out
inc
mov
xor
adc
loopne
inc
pop
push
add
mov
jmp
adc
and
outsb
and
or
testb
andl
aaa
mov
or
test
dec
mov
mov
sbb
and
and
and
in
mov
xchg
add
and
mov
and
add
adc
inc
mov
cmp
sub
rcr
sbb
pushf
push
fiaddl
xchg
or
adc
es
loopne
mov
or
add
sahf
orl
push
andl
push
rcll
xchg
and
es
add
xorl
dec
xchg
pop
or
add
or
arpl
sbb
fsubl
sbb
push
and
xchg
sbbb
inc
mov
inc
pushf
sbb
push
dec
test
xchg
and
push
orl
les
xor
test
adc
bound
int3
mov
add
int3
call
leave
addl
xchg
and
sbb
andl
or
or
mov
xchg
sub
repnz
aad
int3
aas
cmp
fbld
add
dec
ds
sbb
pusha
adc
ljmp
aas
test
xor
repz
or
push
adc
imul
cmp
ret
add
aas
adc
mov
xlat
loope
push
pop
jo
aas
and
and
aam
jbe
fdivrs
pop
nop
call
aas
adcb
aas
push
aas
mov
push
mov
aas
mov
out
out
test
push
xchg
pushf
movsb
lods
add
cmc
jns
aas
aas
cli
mov
or
push
clc
or
or
add
and
mov
fs
out
and
jmp
mov
or
mov
dec
or
and
or
and
mov
and
xchg
pusha
xchg
and
lret
insl
mov
or
lahf
cmc
mov
lahf
andb
push
cmpsl
shll
mov
adcb
lret
aad
insb
fldenv
sub
or
and
inc
aad
adc
fs
inc
enter
insl
nop
and
push
inc
lds
stos
push
call
sbb
leave
pop
or
inc
inc
inc
leave
adc
xchg
shlb
jno
dec
ret
in
adc
test
add
pop
pushf
sbb
xor
loope
test
mov
mov
pop
or
adc
out
rolb
mov
sub
mov
pusha
or
xlat
add
test
xchg
rclb
in
jns
insb
and
adc
xchg
xchg
or
adc
pop
xor
push
xchg
sub
xor
fs
or
sub
loopne
mov
loopne
iret
jnp
out
mov
mov
cs
and
xchg
out
cmp
adc
mov
jmp
test
pop
roll
call
orb
pop
ljmp
adc
and
sub
sub
adc
dec
xor
push
dec
outsl
mov
xor
xorl
das
dec
xor
pop
sub
cmp
pop
cwtl
in
jge
outsl
stos
pop
dec
sub
fldl
outsl
insb
flds
inc
in
add
mov
jmp
or
cmp
out
add
cwtl
xlat
and
and
cmp
sub
or
jl
xlat
aas
fs
rcrb
push
push
rol
inc
xlat
gs
adc
cwtl
xlat
mov
cli
movsb
in
push
fisubs
orb
mov
lods
and
sarb
repz
push
jae
pop
adc
or
cmp
add
and
icebp
in
mov
sub
pop
adc
or
add
xor
insb
or
dec
xlat
xor
push
xor
xlat
shll
adc
mov
xlat
aaa
int3
or
dec
xchg
pop
adc
rcll
iret
xlat
and
dec
test
js
xlat
mov
fmull
lods
and
xchg
and
ret
mov
andl
movsl
cmp
adc
dec
xor
fwait
jp
push
and
jg
push
jmp
fnsave
aaa
lcall
inc
sti
mov
or
orl
fs
leave
and
mov
add
push
cwtl
inc
pop
roll
test
add
cmp
xchg
inc
adc
out
lock
xchg
cmp
add
jo
or
cmpl
and
int3
das
shlb
push
dec
or
out
test
in
sbb
fs
sbb
mov
sub
dec
adc
dec
or
add
mov
out
add
adc
jns
jne
lret
adc
sbb
jecxz
test
or
xchg
test
les
lea
out
stos
push
out
adc
test
scas
mov
out
or
bound
sbb
xlat
testl
call
ret
out
in
dec
or
push
ret
adc
repnz
cmp
mov
fsubp
lea
test
rep
js
cmp
and
pop
lea
out
pop
add
sub
call
pop
sbb
dec
or
sbb
or
fsub
xor
adc
nop
sbb
ret
je
dec
or
jae
xor
sbb
jns
repnz
push
dec
repz
mov
xorl
and
in
or
mov
add
mov
aam
inc
out
inc
sbb
aad
shll
push
mov
mov
or
mov
or
js
repz
mov
outsl
or
movsb
enter
mov
pop
and
or
push
adcb
adc
xor
adc
inc
mov
movsb
fidivrl
or
inc
mov
movsb
jmp
add
shrb
dec
lea
test
mov
dec
adc
mov
dec
adc
inc
mov
lcall
ds
es
popa
mov
daa
mov
or
and
sub
mov
jo
mov
push
cmp
add
test
shlb
clc
and
push
mov
mov
mov
push
mov
mov
dec
mov
lcall
es
and
and
js
dec
call
jbe
loopne
inc
mov
mov
cmpsb
roll
add
in
push
push
mov
lods
inc
in
je
js
push
mov
cltd
or
adc
std
ljmp
shrl
jle
gs
mov
or
pop
hlt
or
les
std
sub
xor
push
dec
mov
xor
push
sub
jecxz
cmpl
push
movsl
lret
nop
ret
add
movsl
mov
test
mov
mov
mov
inc
mov
jbe
cmpsb
in
push
jo
fidivrs
and
les
xor
push
ret
inc
mov
adc
es
inc
mov
es
es
xor
lods
dec
cmpsl
js
dec
mov
and
test
or
push
call
adc
push
cmp
inc
mov
jo
dec
pop
xorl
addl
and
push
sbb
xor
rorb
cmpl
pop
pop
or
mov
flds
clc
sbb
fcomps
sub
inc
adc
cmp
mov
je
call
ret
and
dec
dec
add
xchg
divb
push
fstp
jge
jmp
and
in
jp
sub
inc
inc
xlat
xor
cmp
inc
inc
mov
push
inc
inc
lahf
push
cmp
push
push
mov
xchg
mov
adc
dec
or
dec
flds
inc
stos
lock
add
mov
adc
adc
dec
or
mov
push
mov
movsl
and
or
adc
and
cs
or
adc
adc
ret
push
adc
sbb
adc
faddl
xchg
adc
les
data16
mov
sbb
aas
pop
sub
scas
icebp
cmp
jae
lea
cmpl
push
adc
sub
inc
add
inc
sbb
loop
ss
hlt
push
es
xor
push
add
fs
and
pop
and
xchg
mov
rolb
mov
lret
movsb
pop
mov
mov
push
cltd
adc
lret
fisttpl
mov
pop
push
xor
lods
push
cmp
rcrl
aad
scas
dec
or
test
xchg
mov
add
mov
xor
mov
dec
sbb
xchg
or
mov
jo
mov
or
mov
bound
outsl
stos
mov
mov
cmp
sub
mov
lret
es
mov
lds
mov
mov
cltd
mov
hlt
mov
test
inc
pusha
mov
xchg
or
fisubl
inc
mov
loope
mov
xchg
das
inc
mov
dec
or
adc
mov
pushf
rolb
and
pop
mov
stos
mov
push
mov
mov
mov
test
imul
lods
mov
push
rol
gs
xchg
push
push
orl
pushf
dec
sbb
cwtl
adc
ret
rorb
or
adc
js
call
sbb
pusha
lea
inc
lea
inc
shll
dec
hlt
lea
sbb
test
mov
test
mov
rorl
sbb
roll
pusha
outsb
popf
lods
sbbb
lea
jp
jne
pop
sbb
and
jle
mov
jo
movsb
mov
adc
jb
and
jne
cs
inc
xchg
adc
push
dec
dec
nop
push
aad
adc
cmp
rcrb
xorl
push
jmp
and
mov
rcr
xor
hlt
pop
call
es
test
mov
cwtl
fstpl
mov
pop
add
les
ret
sub
xchg
or
ret
sbb
cs
or
f2xm1
push
popa
inc
fucom
inc
stos
ret
jge
or
sbb
or
in
sbb
shrb
mov
push
cwtl
fnsave
or
dec
adc
fstpl
add
or
frstor
clc
mov
and
into
aaa
adc
pop
stos
das
and
pop
fisubs
pushl
sbb
jge
popa
fnsave
dec
add
frstor
int3
push
mov
stos
rcr
shll
cwtl
frstor
adc
dec
or
jp
pushf
adc
movsb
mov
xor
fstl
test
xlat
dec
mov
mov
xor
push
adc
loopne
fstpl
or
cmp
loope
or
fstl
es
mov
fstl
pop
mov
cmp
sub
popa
inc
fnstsw
add
xor
fstl
adc
dec
xor
ret
pop
enter
out
stos
dec
or
pusha
push
fisttpll
jbe
test
dec
or
pop
popa
inc
cmp
pop
sahf
fnstsw
inc
push
add
frstor
adc
or
sbb
sub
fnstsw
scas
or
ret
daa
ret
icebp
mov
sbb
xor
adcb
adc
cmpsl
popa
inc
cmp
dec
or
push
fisttpll
inc
fs
subl
push
test
loope
fnsave
push
fstpl
orb
popa
push
fucom
ret
dec
fldl
cmpsl
jo
or
test
loope
fstl
ret
inc
test
adc
fisttpll
adc
jecxz
loope
or
or
test
sub
cmp
fistl
or
jecxz
cmp
jmp
or
jp
cwtl
adc
pusha
or
sbb
inc
test
popa
mov
mov
pop
out
or
ret
jecxz
dec
add
add
jecxz
adc
or
adc
adc
jecxz
xor
or
jecxz
and
fcomi
adc
pusha
test
ret
mov
insb
push
adc
jecxz
push
cwtl
adc
and
mov
test
or
dec
cs
es
adc
test
cmpsb
mov
ret
call
jecxz
or
dec
jmp
sub
mov
test
fldl
loope
leave
in
push
jecxz
shlb
jmp
push
hlt
in
xor
sub
push
popa
inc
mov
test
lods
jecxz
into
mov
ja
sbb
sub
jecxz
or
adc
jecxz
inc
push
cwtl
adc
pop
daa
or
pop
aaa
lods
jmp
sub
fcoms
test
pop
jge
lods
ret
test
lods
or
jecxz
test
or
dec
ret
es
or
addb
es
stc
popa
dec
inc
stos
jecxz
pop
test
jecxz
pop
push
cwtl
adc
or
dec
or
xor
push
lock
int
ret
in
and
mov
test
jecxz
cmp
popa
icebp
rclb
adc
sub
cwtl
adc
jmp
ret
push
jecxz
jbe
and
jecxz
cs
lock
dec
or
popa
inc
js
inc
test
push
jecxz
mov
jnp
xchg
sub
or
or
ret
jecxz
cmp
push
popa
xor
jmp
popa
jecxz
inc
add
loope
rcrb
test
stos
or
gs
dec
inc
pop
insb
leave
sbbb
test
inc
popa
inc
sbb
pop
loope
ret
push
loop
add
adc
test
adc
adc
push
jecxz
adc
dec
xchg
sub
or
and
sub
dec
jecxz
mov
cltd
push
gs
es
mov
adc
adc
jmp
adc
adc
subl
ficompl
loope
jecxz
push
jecxz
adc
push
jecxz
dec
or
or
cmp
xchg
mov
add
jecxz
ljmp
test
shll
loope
pusha
rolb
pop
lods
mov
inc
popa
inc
jecxz
mov
and
push
popa
inc
jecxz
and
adc
jecxz
and
mov
mov
and
inc
popa
inc
js
jecxz
jo
imul
nop
sbb
jno
adc
lods
mov
and
test
push
test
and
js
js
adc
call
ret
push
jecxz
cwtl
adc
clc
push
jecxz
dec
jbe,pn
pop
shlb
lock
or
gs
stos
loope
imul
mov
imul
add
jecxz
dec
push
popa
inc
jecxz
test
in
push
and
pshufw
xor
aam
mov
test
clc
test
sub
dec
sub
dec
or
inc
popa
inc
mov
dec
or
xorl
pop
jnp
test
jecxz
imul
scas
mov
inc
dec
or
fxch
lahf
push
and
sub
out
shlb
xor
enter
cmp
les
ss
adc
ret
lret
xor
sub
jecxz
cmp
ss
popa
jecxz
mov
jb
inc
jge
out
pop
pop
es
mov
cld
movsl
das
loopne
push
popa
inc
jecxz
xor
cmpsl
cmp
adc
sub
inc
jge
sbb
pushf
sub
inc
and
add
adc
jnp
push
mov
dec
inc
jge
das
out
les
push
or
mov
push
int
jle
aaa
inc
popa
inc
jecxz
cmp
sub
cmp
or
mov
and
mov
movsl
das
mov
cli
push
into
inc
fidivl
aaa
inc
popa
inc
jecxz
cmp
sub
xchg
pop
outsb
or
mov
jl
mov
movsl
das
test
and
outsb
cmp
and
push
popa
inc
jecxz
sub
and
test
push
cwtl
adc
sub
rolb
mov
lret
push
jecxz
pandn
iret
mov
sbb
sti
adc
sub
push
cwtl
jecxz
xchg
mov
adcb
jle
ljmp
test
loope
jecxz
leave
stos
loopne
ljmp
push
and
std
dec
popa
sub
pop
jo
inc
test
jecxz
imull
or
inc
jecxz
cwtl
adc
test
push
xchg
faddl
andl
ret
frstor
and
insl
cmp
adc
push
popa
inc
jecxz
and
mov
lods
mov
or
jecxz
sub
outsl
add
cwtl
adc
outsl
adc
push
jecxz
jne
and
mov
ret
test
roll
jecxz
call
xor
or
andb
adc
add
daa
hlt
mov
jge
pop
cmpl
jmp
je
push
and
or
rclb
imul
pusha
or
pop
shll
fucomi
jbe
aad
cmc
xlat
aad
pop
or
fldenv
test
and
punpcklwd
pop
mov
mov
mov
and
mov
or
cwtl
adc
loope
sahf
mov
scas
daa
cmpsl
adc
dec
mov
test
imul
adcl
test
sarb
test
mov
ret
ret
mov
push
adc
cmp
sbb
test
pop
ja
sbb
sbb
pop
mov
dec
and
pop
xor
or
mov
sub
fsubp
in
ds
push
mov
jbe
adc
test
ret
test
cmp
popa
mov
cmp
cmp
cmp
ret
test
adc
xor
mov
dec
or
mov
repnz
mov
fs
adc
xor
in
mov
inc
hlt
inc
jo
push
mov
popa
mov
ret
mov
ret
test
add
mov
test
mov
int3
ret
add
xor
mov
or
sbb
push
adc
lock
cwtl
add
push
sbb
mov
add
test
popa
inc
ret
push
sub
rolb
popa
inc
cmp
and
cmpl
pop
xchg
fadds
cmp
test
ret
push
jo
push
push
adc
imul
ljmp
loopne
mov
jmp
jmp
rorl
das
cmpsl
enter
adc
rorl
cwtl
ret
xor
ret
push
adc
xchg
jle
adc
loopne
std
test
hlt
orb
add
adc
xchg
loope
xor
ret
adc
add
out
add
cwtl
ret
das
decb
and
xchg
or
xchg
arpl
mov
or
bound
or
add
add
dec
or
pop
ret
xchg
ret
and
in
test
loopne
aas
loop
test
ret
ret
xor
xor
mov
push
adc
std
ret
push
adc
dec
or
test
test
sbb
outsb
sbb
fmuls
orb
ljmp
jo
dec
ret
lcall
pop
sahf
adc
cwtl
mov
ret
sub
mov
xor
sbb
mov
ret
and
fdivl
jne
xchg
andl
call
dec
jae
sbb
and
dec
or
pop
xchg
shll
sbb
jo
mov
scas
mov
ret
cli
popa
mov
mov
call
dec
mov
adc
std
ret
pop
sbb
mov
lea
xchg
or
push
xchg
xor
sub
je
cmp
jmp
sbb
test
inc
ret
mov
adc
ret
int3
js
adc
xchg
sbb
add
dec
or
xor
ret
data16
fadd
popa
ret
push
and
loopne
ret
jge
int3
inc
inc
dec
and
jg
and
hlt
popa
ret
into
fcoml
dec
ljmp
in
pop
sbb
popa
inc
push
dec
xchg
and
rol
test
xor
sbb
mov
xor
add
popa
inc
ret
adcb
or
sbb
mov
dec
ret
jl
psrld
ret
cwtl
aas
dec
or
or
dec
or
inc
aaa
pushf
popa
inc
jo
ret
aas
cwtl
adc
inc
push
xchg
sarl
ret
sbb
mov
loop
and
jno
adc
call
pop
xor
test
xchg
ret
mov
es
scas
ret
call
and
adc
pop
gs
cwtl
adc
push
push
data16
push
jno
iret
lock
test
ret
nop
sbb
or
xor
lock
pop
mov
push
adcl
daa
xchg
pusha
mov
clc
iret
cmc
mov
dec
add
adc
mov
popf
jmp
mov
push
jbe
subl
xchg
jae
adc
push
or
lock
mov
dec
and
or
xchg
add
add
shll
sti
and
dec
test
xor
pop
aas
mov
dec
add
xor
sub
test
add
add
or
cwtl
add
xor
aad
mov
and
push
adc
xchg
or
adc
adc
xor
mov
fsubr
leave
jne
inc
mov
lods
leave
test
sub
push
xchg
or
iret
add
outsl
or
adc
dec
add
sbb
aaa
xor
add
sub
adc
and
sahf
add
fisttps
test
dec
or
jl
or
lcall
jne
popa
xorl
jnp
loope
ja
add
xor
out
add
push
test
bound
and
pop
lds
es
inc
pop
test
adc
dec
add
lods
add
inc
add
inc
add
dec
or
sub
and
push
and
push
imul
mov
add
add
cmpb
fsubs
mov
adc
adc
add
sub
cwtl
add
xor
mov
dec
add
cmp
inc
mov
or
add
xor
xor
add
test
mov
add
xor
pop
lds
ret
fs
xor
add
add
adc
loopne
cwtl
dec
or
dec
add
adc
and
adc
cmp
adc
dec
test
ret
add
ret
mov
add
rsqrtps
add
ret
jmp
fisubs
adc
sub
in
xor
add
add
or
dec
sbb
and
add
add
dec
or
add
add
or
test
or
bound
int3
int3
orl
inc
jbe
dec
dec
js
cmpl
xchg
jo
cmp
movsb
test
push
adc
add
sub
lret
xchg
or
leave
cwtl
sbb
in
test
enter
inc
repnz
stos
lret
adc
xchg
xchg
or
cmp
jmp
rep
andb
jmp
push
leave
inc
cmp
sbb
es
cmp
test
jg
add
ret
leave
push
adc
loope
sub
add
in
out
adc
sti
adc
fcoms
push
es
and
iret
leave
push
pop
or
mov
les
mov
leave
push
test
dec
leave
cmpsl
sbb
scas
nop
insl
mov
cltd
adc
in
leave
cltd
adc
mov
leave
cs
push
es
ja
cltd
adc
adc
cltd
adc
shlb
pop
add
cmp
pop
or
adc
je
inc
sub
mov
sahf
rcll
leave
ljmp
fdiv
push
push
adc
adc
frstor
or
leave
sbb
xor
add
leave
inc
gs
mov
inc
mov
inc
les
jmp
inc
leave
int
adc
inc
cmp
pop
inc
mov
dec
push
adc
leave
dec
je
push
cltd
adc
cmp
mov
stos
dec
or
je
push
test
xor
fsubr
push
leave
js
outsb
aam
jmp
push
or
roll
movb
xchg
leave
clc
in
lds
gs
sub
sbb
inc
or
adc
sub
stos
dec
or
mov
enter
and
push
gs
jmp
test
mov
loope
push
es
test
sbb
xchg
or
xchg
pop
test
and
sbb
xor
ljmp
xchg
lret
sub
ret
ss
xor
fadds
xor
repnz
leave
jne
scas
stos
xor
leave
adc
adc
or
leave
imul
pop
cltd
adc
dec
leave
das
rcrl
adc
leave
cmpsb
out
das
or
movsl
paddusb
inc
leave
arpl
lods
xor
leave
sub
cmp
in
shlb
in
shr
icebp
xchg
dec
add
xchg
or
dec
mov
xor
push
es
or
leave
inc
push
rcrl
push
gs
mov
xor
in
push
test
or
out
mov
or
stos
xor
cld
sub
fldcw
sbb
fldcw
adc
enter
outsb
xchg
or
sbb
mov
scas
dec
or
dec
fisubs
lret
lea
mov
and
cs
or
popa
jbe
or
xlat
push
sub
sub
je
adc
mov
lret
pop
sbb
pop
mov
or
shrl
add
mov
rcll
or
mov
mov
or
mov
inc
adc
sbb
dec
shlb
inc
adc
aaa
roll
lock
fsubrl
aaa
or
and
ret
inc
cmp
adc
jo
shll
mov
adc
and
shlb
jo,pn
roll
ja
inc
icebp
adc
sub
sbb
out
and
pop
cmp
movsl
test
sbb
and
popa
inc
inc
dec
xchg
push
xor
or
mov
mov
push
dec
cmpl
ljmp
test
and
inc
push
inc
xor
pop
jo
cmp
and
ret
sub
test
inc
and
mov
and
push
out
push
and
jp
push
xor
roll
inc
ret
call
lahf
fwait
mov
and
ret
or
mov
xchg
and
mov
andb
lods
mov
cltd
jl,pt
insb
xor
and
sub
xchg
inc
fsubs
sbb
sahf
push
sub
add
pop
xchg
test
bound
jb
addl
dec
fmulp
sub
adc
and
dec
jmp
roll
cwtl
and
or
inc
pop
mov
rolb
test
dec
mov
and
es
push
pop
push
jo
and
add
or
dec
or
sbb
and
dec
ret
push
shrl
out
mov
test
sbb
and
and
ret
lret
add
mov
or
and
es
or
lea
add
xor
andb
jns
pop
pusha
test
push
pop
push
and
and
and
ret
and
popa
jns
not
aas
or
and
mov
lea
and
fwait
push
and
rol
add
lcall
add
frstor
and
lock
ss
jmp
ret
cmp
inc
js
mov
and
push
push
andl
fwait
test
push
and
in
dec
xor
pop
add
mov
popa
jo
loope
shll
push
mov
adc
aaa
sbb
test
xor
loopne
shll
jge
std
jae
mov
inc
adc
and
and
inc
mov
imull
pusha
xor
and
mov
and
repnz
sbb
dec
or
ret
bound
and
ret
or
inc
and
loopne
and
xor
jo
xchg
dec
mov
rcll
cmp
push
cmp
add
add
push
jge
mov
pop
cmpsl
or
dec
adc
and
adc
xor
fsubrs
nop
dec
movsl
out
cmp
xor
in
and
lcall
test
andb
or
lds
loope
cltd
push
xor
xchg
push
inc
insl
loope
les
adc
test
lds
cmp
jle
sub
lds
xor
cwtl
call
test
pop
inc
sub
pop
sbb
aam
or
shr
movsl
stos
lock
adc
adc
adc
pop
xchg
jnp
loop
lret
or
test
mov
or
or
inc
aam
mov
insb
imul
and
imul
add
adc
and
sbb
push
int
or
inc
insl
imul
insl
pusha
mov
or
les
adc
iret
insl
lods
cmpsb
push
idiv
add
push
lret
idivl
enter
sarl
rolb
test
ja
mov
cmp
push
push
mov
out
ss
or
mov
add
sbb
adc
es
inc
xchg
mov
test
je
mov
pusha
lock
iret
and
sbb
xor
inc
dec
mov
adc
mov
nop
dec
stos
and
or
insl
xor
adc
mov
push
xchg
pop
push
and
test
jb
add
movsb
pop
adc
mov
daa
jbe
mov
call
xchg
push
push
je
pop
bound
push
xor
test
pushf
fdivrs
mov
call
ret
xor
xor
fadd
add
mov
push
pop
or
iret
jno
js
add
pop
into
mov
dec
mov
mov
or
dec
mov
test
mov
push
or
dec
xor
mov
mov
dec
jne
xor
in
mov
mov
and
mov
imull
mov
and
xchg
sbb
js
and
jno
cli
pusha
fs
pusha
mov
or
outsl
loopne
roll
test
lret
mov
push
lcall
sbb
xchg
lcall
sti
ss
push
sub
mull
add
xor
ret
and
inc
sarb
sub
inc
jns
inc
mov
mov
testb
cmp
or
push
pop
mov
dec
or
xchg
sbb
test
adc
mov
addb
xor
inc
adc
test
out
roll
mov
push
cmpb
adc
jb
inc
adc
adc
adc
adc
adc
push
sub
inc
adc
lcall
lret
mov
ja
and
and
and
mov
mov
lods
sub
jnp
dec
in
je
push
invd
out
insl
mov
mov
sbb
add
cmp
sub
push
pushf
and
fwait
dec
stos
xchg
test
call
in
xchg
adc
mov
in
ret
push
adc
and
inc
repnz
stos
inc
test
and
stos
mov
stos
je
adc
fcoms
or
xor
xchg
lret
in
popa
xchg
rol
lods
or
mov
xchg
xchg
in
and
cmpsl
ja
test
xchg
subb
insb
pusha
jnp
test
xor
mov
test
sbb
inc
dec
inc
pop
xor
mov
pop
call
dec
shll
mov
jo
xchg
ret
pop
push
adc
lcall
xchg
pop
jbe
adc
cmpsl
or
dec
scas
ss
and
pop
xchg
mov
xlat
and
pop
jl
loope
lcall
xor
test
cmp
or
inc
popa
stos
push
pop
fadds
sbb
inc
push
and
in
ja
call
insb
loopne
xor
jge
cmp
call
add
ret
mov
xchg
pushf
subb
outsb
push
cmp
push
cwtl
xchg
mov
pop
push
sbbb
and
sub
add
test
or
or
icebp
into
or
pop
or
stos
dec
pop
push
popf
push
add
or
or
mov
scas
es
sbb
dec
adc
dec
push
dec
inc
pop
mov
xchg
pop
xor
or
pop
jl
insl
ja
icebp
cmp
js
dec
or
sbbb
inc
jo
pop
lcall
and
and
mov
imul
jmp
mov
pop
stos
ret
xchg
pop
js
or
push
pop
insb
jne
loopne
dec
pop
clc
pop
and
lcall
sub
test
xchg
mov
mov
mov
mov
pop
xor
pop
inc
xchg
jl
mov
dec
inc
inc
outsl
push
push
inc
ja
add
scas
pop
rolb
fcoms
push
cmpl
in
push
call
lods
dec
scas
clc
rolb
push
dec
inc
scas
and
shrb
sbb
add
jmp
and
sbbb
dec
scas
ja
inc
cmp
scas
rorb
stos
dec
or
or
and
scas
cmp
mov
mov
cwtl
xor
scas
ds
inc
imul
nop
scas
ret
test
scas
or
in
loope
mov
aad
mov
scas
shll
shrl
dec
inc
dec
inc
scas
mov
cmp
pop
jno
scas
outsl
and
and
mov
and
push
dec
in
push
dec
inc
pop
scas
popa
test
xchg
fwait
sbb
xor
and
mov
sub
cmp
xlat
ljmp
mov
mov
or
jmp
xor
push
es
adc
mov
lock
movsb
push
push
es
xor
bound
inc
lods
hlt
div
lret
add
movsl
mov
pop
xor
cmp
adc
or
fsubrs
subb
adc
adc
push
xchg
adc
cmpsl
push
or
add
scas
push
sbb
mov
ja
cmpsl
cmp
push
dec
cmp
add
pop
ret
cmpsl
mov
mov
cmpsl
dec
xchg
mov
rcll
ret
xor
test
lods
mov
jg
leave
adc
ret
xor
mov
call
dec
xchg
fisubrl
xchg
or
or
fsubs
leave
sub
jne
fldt
add
mov
sbb
popf
xor
sub
jo
sbb
mov
movsb
push
xchg
je
add
dec
adc
push
xchg
jl
test
pushf
xor
xchg
push
xchg
adc
add
fbstp
mov
dec
sbb
pop
pushf
or
mov
xchg
adc
and
fildll
cmp
bsf
and
and
sub
iret
cmp
push
adc
xor
enter
jo
and
adc
mov
lahf
adc
sub
cmp
and
sub
xchg
test
adc
test
movsl
dec
rolb
sarl
incl
inc
and
lcall
pop
inc
xor
xchg
jae
in
lahf
adc
inc
sub
inc
test
and
sbb
bswap
sub
inc
sub
test
inc
sbb
sar
rorb
js
mov
addb
pusha
addl
jg
inc
adc
int3
add
mov
inc
js
inc
xor
addl
dec
or
sbb
ja
adc
and
ret
or
adc
push
popa
adc
popa
adc
or
mov
popa
jecxz
popa
adc
popa
in
xor
pop
sbb
out
lcall
and
pusha
ret
sub
jmp
call
rolb
rolb
xchg
es
xchg
repz
test
and
xor
inc
mov
cs
push
inc
imul
pop
add
mov
xchg
es
dec
adc
movsl
or
scas
aaa
repz
push
jmp
lret
cs
adc
int3
repz
movsl
or
es
jo
out
das
or
xchg
es
test
or
pop
pop
ret
shl
loope
fwait
add
repz
xchg
adc
es
imul
add
repz
jo
xchg
repz
imul
rolb
movsl
or
outsb
shrb
cmp
ret
repz
bound
sub
jno
imul
popa
repz
mov
adc
xchg
repz
les
adc
cmp
popa
sub
mov
add
test
test
imul
lcall
shlb
es
dec
repz
sub
repz
xor
repz
adcb
das
dec
adc
mov
mov
mov
repz
sbb
stos
mov
push
fnstsw
xchg
sbb
pop
and
popa
sub
or
pop
popa
leave
pop
jp
add
push
or
rorl
and
pop
push
pop
jbe
enter
cmp
nop
mov
loopne
enter
shll
adc
mov
mov
decl
add
jo
cmp
pop
push
out
adc
inc
mov
jmp
pop
xor
in
and
inc
inc
mov
jmp
pop
cmp
out
push
decl
adcl
aam
and
sbb
dec
jae
scas
dec
andl
lahf
jmp
movsl
mov
js
jl
test
test
rolb
xchg
insb
mov
cmpsb
xchg
movb
lcall
faddl
push
lcall
cmpsl
sbb
pop
mov
mov
mov
sbb
xor
loopne
leave
xor
out
mov
mov
cmp
push
dec
cmp
lcall
pop
cld
push
adc
jae
dec
or
push
push
cmp
or
movsl
cmp
sub
lret
pop
out
cmp
fwait
dec
adc
xchg
es
and
ret
imul
scas
dec
adc
and
out
jbe
and
loope
jno
mov
out
sub
xor
xor
es
add
inc
or
pop
mov
data16
es
adc
ret
mov
push
inc
out
and
push
mov
or
push
es
push
xorl
fsub
int
inc
dec
or
mov
push
add
push
adcl
mov
or
add
out
inc
and
mov
mov
aam
les
out
loope
shll
push
add
or
sbb
mov
push
dec
inc
rcll
popa
jne
or
popa
push
ret
or
inc
inc
adc
sub
out
xchg
xor
pop
xor
sub
out
push
and
insb
out
xchg
xor
sbb
lcall
and
clc
mov
or
mov
or
enter
adc
inc
mov
xchg
nop
mov
inc
ret
test
mov
lcall
wrmsr
out
push
or
mov
dec
fwait
sub
pop
in
xlat
add
out
mov
inc
mov
mov
ja
dec
or
adc
ret
jae
jbe
imul
push
push
inc
sbb
out
add
pop
ret
xor
out
jno
xor
out
inc
test
aam
es
and
ds
test
cmp
push
cli
or
inc
out
xor
adc
out
dec
or
jp
jo
or
negl
or
mov
test
rclb
ljmp
out
sbb
dec
push
cmp
add
dec
cli
fwait
dec
lock
and
popa
xor
ss
mov
sarb
mov
add
push
push
sbb
dec
or
mov
mov
test
lods
mov
fsubrl
mov
pop
mov
out
sbb
adc
test
sahf
dec
rcr
sbb
test
test
push
or
jbe
adc
mov
xchg
out
adc
roll
push
sub
movsl
out
ss
push
loop
mov
mov
test
pop
mov
mov
add
add
call
inc
xchg
out
test
xchg
or
sub
lock
mov
mov
mov
sysexit
out
cli
movsl
in
adc
jbe
mov
sub
mov
into
fmulp
sub
mov
rcr
call
mov
cs
ret
call
jo
adc
inc
adc
lcall
lods
bound
cmpsb
lret
test
ficoms
dec
xchg
or
outsb
push
gs
js
lret
xlat
rclb
pop
push
out
lock
cmp
or
je
push
and
test
insb
add
adc
repnz
pop
fs
mov
add
data16
mov
inc
cmp
cmp
and
int3
das
xchg
jle
or
and
sub
push
xchg
push
insb
sub
cltd
adc
gs
xor
push
xchg
or
and
push
es
adc
rcll
fisttps
pop
xchg
mov
call
jno
adc
test
cmp
dec
outsb
add
and
imul
mov
inc
mov
xor
aad
xchg
leave
push
shlb
inc
xchg
imul
push
mov
mov
add
lcall
mov
inc
test
add
stos
rolb
push
loopne
push
adc
push
xchg
movsb
adc
mov
lea
adcb
test
xlat
pop
adc
movsb
addr16
lods
cld
cmp
stos
movsb
sub
mov
cmp
adc
in
push
pop
pop
lds
sbb
lds
fsubrs
adc
pop
out
add
sbb
es
xchg
lret
test
sbbb
fisttps
add
jo
mov
shll
or
loopne
lds
clc
dec
push
enter
adc
add
adc
mov
cmp
rol
lret
test
in
lds
add
arpl
xchg
js
addr16
add
pop
icebp
loope
sbb
out
adc
sbb
sbb
push
test
insl
outsb
stos
xor
test
call
push
jecxz
gs
jo
sbb
fdivrs
jne
inc
test
inc
insl
test
inc
test
insb
dec
push
es
push
or
insb
add
mov
test
test
mov
test
ret
movaps
push
hlt
add
inc
dec
jecxz
popa
mov
test
clc
nop
cwtl
dec
rolb
fldenv
popa
enter
jmp
or
adc
or
or
jb
loopne
faddl
add
fidivs
fisubl
mov
and
and
add
pop
ja
fs
ss
imul
mov
add
popa
les
inc
mov
pop
and
loope
roll
adc
nop
and
xor
jg
add
lcall
dec
or
sbb
and
out
mov
fcoml
cltd
mov
sub
mov
inc
fs
inc
mov
or
sbbl
xchg
or
mov
pop
test
adc
mov
push
mov
dec
pop
inc
es
dec
xor
test
mov
mov
enter
addl
xchg
pop
inc
es
xor
and
xchg
pop
push
test
add
enter
xor
fcoml
loope
mov
ret
or
loope
dec
adc
sbb
jnp
or
xor
or
and
mov
or
sub
std
push
cmpsb
stos
and
std
xchg
rolb
adcl
sub
mov
mov
dec
call
xchg
adc
cmp
or
shrl
test
dec
xchg
mov
test
jp
push
push
mov
xchg
inc
and
mov
inc
icebp
inc
in
shrl
popa
inc
cmp
popa
inc
push
insl
rcll
test
jo
sbb
xchg
ss
scas
ret
mov
test
push
xchg
or
pusha
fnstcw
loope
sbb
mov
jno
push
bound
xchg
mov
xlat
inc
pop
test
lcall
xchg
jo
test
loope
mov
dec
or
js
ret
test
out
inc
addb
pusha
das
push
adc
cmpsb
ret
test
pop
or
inc
push
xor
pop
adc
dec
and
inc
mov
mov
movsb
sub
adc
repnz
or
jo
push
test
sub
es
or
push
jbe
orl
bound
es
mov
je
inc
jo
inc
imul
call
jnp
and
mov
icebp
lock
pusha
sub
dec
push
and
pop
add
gs
or
pop
filds
xor
or
xchg
mov
push
add
add
scas
push
roll
cmp
ret
add
add
sub
lds
stc
std
push
push
sbb
js
and
jns
sbb
repz
and
cmp
arpl
pop
sub
and
fwait
movl
add
or
xor
stos
dec
or
jo
sbb
and
mov
xchg
adc
clc
dec
push
mov
add
or
inc
cmp
les
sarl
rcr
mov
sub
ret
stos
add
mov
and
bound
ret
fcoml
test
mov
push
xchg
lds
jae
jnp
xchg
adc
and
push
cld
mov
adc
adc
add
jne
mov
mov
and
sbb
mov
inc
cwtl
inc
and
cmp
les
sbb
es
pushf
sbb
pusha
xchg
and
inc
daa
mov
das
test
and
cwtl
sbb
and
dec
adc
sbbb
or
loope
cmp
push
daa
mov
mov
push
iret
call
xor
xor
adc
inc
daa
mov
loop
out
pop
ja
mov
or
or
cs
stc
adc
testb
add
and
cmp
inc
sub
fwait
add
ljmp
call
push
xchg
xchg
ret
push
sbb
into
iret
scas
sub
dec
adc
ds
arpl
xchg
dec
lcall
nop
adc
cwtl
sbb
and
sub
jo
cld
push
xchg
adc
outsl
sub
xorb
ret
dec
mov
adc
and
or
adc
xchg
adc
fldt
mov
cmp
outsl
iret
mov
and
dec
les
xlat
dec
inc
mov
test
adc
mov
nop
jbe
push
cmp
cltd
pop
cmp
pop
adc
cld
push
or
or
inc
sbb
jge
clc
cwtl
adc
ret
adc
shll
adc
mov
outsb
push
push
jb
and
rcll
xchg
sbb
ret
pop
mov
pop
and
xchg
adc
mov
pop
xchg
adc
jno
icebp
push
sbb
mov
inc
cmp
mov
ficoms
xchg
adc
rorl
std
jo
mov
and
icebp
or
jns
ret
mov
dec
jnp
and
icebp
sti
es
adc
mov
movaps
orl
imul
adcb
xchg
adc
icebp
adc
pmaxub
inc
mov
fsubl
cmp
add
test
scas
cld
loope
mov
icebp
dec
adc
dec
jnp
icebp
cmp
sti
pushf
mov
adc
icebp
add
add
cwtl
dec
adc
xchg
test
dec
mov
cmp
dec
icebp
dec
jns
test
icebp
adc
es
add
loop
dec
cs
or
mulb
out
xchg
cltd
gs
add
xchg
and
jnp
sbb
pop
and
and
ret
and
inc
and
cmpl
and
icebp
push
or
ret
dec
adc
loopne
cli
icebp
and
sub
cmp
inc
sbb
jo
icebp
outsb
push
and
sbb
icebp
dec
test
sbb
inc
mov
xchg
adc
and
inc
pop
xchg
icebp
adc
inc
pop
mov
rorb
dec
icebp
sahf
inc
push
xchg
adc
adc
inc
mov
cmp
push
dec
icebp
bound
mov
sbb
jbe
jne
push
lock
and
dec
arpl
and
xchg
adc
pop
out
add
push
icebp
dec
es
xchg
icebp
cld
inc
fbstp
bound
stos
xchg
les
imul
jg
pop
sbb
xchg
adc
xor
add
add
pusha
icebp
dec
adc
icebp
and
aaa
xor
xchg
icebp
cmp
add
ret
stos
and
icebp
outsl
or
and
dec
enter
dec
icebp
bound
and
mov
dec
inc
sbb
mov
lock
xchg
and
adc
push
call
rcll
xchg
movsb
push
xchg
icebp
roll
ret
sbb
stos
xchg
icebp
pop
fisubrs
dec
or
jne
dec
adcl
xchg
icebp
xchg
adc
mov
push
icebp
jg
sbb
push
dec
icebp
push
jne
dec
inc
mov
clc
adc
or
loope
mov
fiaddl
and
outsb
sub
icebp
adcl
jnp
insl
adc
sub
xchg
gs
mov
sqrtps
mov
icebp
in
adc
mov
je
jecxz
dec
icebp
xchg
jmp
icebp
or
rcll
adc
sub
sub
and
icebp
xchg
test
jp
dec
inc
mov
adc
rolb
stos
dec
imul
xchg
ret
sub
insb
sbbb
xor
enter
or
dec
test
adc
jo
xchg
and
outsl
data16
mov
inc
mov
inc
sbb
push
dec
inc
icebp
xchg
adc
stos
and
faddl
xor
rcrl
int
inc
mov
and
or
dec
icebp
orl
fmuls
mov
sub
inc
mov
adc
or
push
cmp
inc
sahf
stc
pop
and
icebp
and
xchg
xor
xor
dec
inc
lock
lock
inc
mov
mov
or
sub
icebp
and
icebp
dec
or
lret
hlt
and
scas
sub
int
inc
mov
mov
sbb
repz
ss
or
icebp
adc
test
xor
lods
std
inc
cmp
adc
push
dec
icebp
jo
cmp
mov
mov
jnp
dec
inc
icebp
jns
pusha
mov
outsb
adc
icebp
dec
or
mov
test
icebp
pop
adc
loope
mov
mov
and
sub
inc
jp
stos
xchg
test
movsb
out
xchg
and
icebp
fmull
lahf
loopne
in
sti
imul
pushf
cmp
lds
push
dec
inc
icebp
and
icebp
dec
adc
adc
sub
xchg
icebp
mov
andl
sbb
dec
icebp
sub
push
xchg
adc
mov
xchg
or
icebp
and
movsl
movsl
stos
sahf
dec
or
and
fsubrs
icebp
or
mov
faddl
icebp
add
fbld
and
adc
adc
adc
icebp
adc
sub
dec
icebp
fld1
dec
mov
inc
icebp
sub
and
or
or
icebp
lahf
inc
mov
cmp
pop
dec
icebp
jl
jp
or
ret
push
push
aaa
test
and
xchg
and
lret
test
test
call
aam
pushl
dec
inc
icebp
xchg
outsb
out
sub
icebp
test
ret
adc
inc
imul
or
dec
add
adc
orl
adc
jmp
xchg
adc
jmp
and
icebp
outsb
loopne
stos
icebp
dec
pusha
xor
ja
mov
pop
push
and
xchg
test
add
aam
test
cmp
jbe
test
das
pop
das
and
adcl
and
rcll
xchg
icebp
in
inc
xor
sub
jo
ret
dec
icebp
or
movsl
es
adc
push
pusha
js
and
icebp
in
push
xchg
test
fadds
xlat
sbb
test
outsl
pushl
and
sbb
adc
xchg
adc
pop
dec
cmp
add
xor
out
jle
and
and
popa
in
outsb
test
test
dec
push
out
scas
xchg
test
cmc
cltd
xchg
test
call
cmc
cmp
mov
xchg
fisubs
cmc
jmp
pop
cmc
test
cmc
dec
adc
add
cmc
mov
rcrl
pop
pop
test
nop
out
push
adc
test
fbstp
and
nop
cmc
xchg
and
mov
jno
stc
les
pop
xchg
and
cld
inc
dec
inc
xor
cmc
inc
loopne
dec
mov
les
add
cld
mov
loop
rclb
push
and
ss
add
mov
mov
out
adc
inc
dec
jnp
test
jnp
add
pop
add
dec
jp
push
mov
inc
movsb
repz
enter
add
dec
jp
or
sub
mov
and
mov
dec
jp
dec
or
add
jbe
popa
sub
loopne
decb
lds
xor
and
xchg
xor
test
inc
jge
test
jo
xchg
and
fdivrl
stos
xchg
test
xchg
test
and
cmc
lcall
xorb
fstl
cmc
call
or
je
and
faddl
inc
xchg
adc
mov
pop
push
cmc
cs
sbb
sbb
mov
jecxz
cmc
stos
cmp
sub
stc
insb
les
adc
dec
push
xchg
adc
cmc
inc
adcb
and
mov
xchg
shll
mov
and
loop
and
cmc
fsubrl
and
andl
in
loopne
bound
mov
andb
inc
cmpl
cmc
inc
dec
inc
cmp
cmc
adcl
jmp
push
and
or
rcl
inc
mov
and
cmc
add
insb
inc
sbb
add
int3
inc
inc
inc
dec
inc
js
cmc
and
xor
loope
jbe
mov
xor
xor
shlb
hlt
jecxz
movsl
adc
sbb
pusha
aas
inc
mov
pop
loope
inc
dec
cmc
test
cmc
mov
loop
adc
cmp
sbb
dec
lret
mov
or
andb
dec
inc
js
mov
test
cmc
rclb
and
cmc
test
adc
push
xchg
adc
fsubl
stos
and
cmc
stos
xchg
test
cmc
mov
js
and
ret
xchg
dec
cmc
and
fdivrs
adc
movb
cmc
test
pusha
hlt
loopne
or
and
cmc
xchg
and
shll
jo
adc
ret
cmc
sub
and
mov
fiadds
push
xchg
cmc
adcb
ds
inc
push
or
in
in
xchg
test
xor
ja
xchg
adc
loope
sbb
dec
or
adc
rcl
mov
or
mov
clc
inc
pop
mov
push
and
out
loop
add
xchg
cmc
sub
xchg
and
stc
call
into
add
inc
xor
inc
in
jo
jg
pop
inc
dec
cmc
adc
fdiv
xchg
and
shrl
cmc
loopne
scas
imul
xchg
test
inc
loope
call
pop
and
and
dec
or
rcrb
test
cmc
cmp
ss
xor
insb
cmpsl
test
mov
sub
cmc
mov
sbb
dec
or
sub
adc
xor
cmc
xchg
ret
xchg
cmc
pop
dec
inc
js
cmc
push
pop
dec
inc
cmp
cmc
push
xchg
adc
cmc
sbb
or
jmp
rolb
sbb
dec
or
inc
cmc
popf
ret
sub
jno
loope
dec
adc
cmp
sbb
cmc
fsubr
jp
dec
inc
cmc
shll
pop
jne
dec
je
push
fsts
and
cmc
dec
or
xor
dec
adc
and
test
push
jecxz
addb
mov
ds
imul
add
call
dec
sbb
or
or
push
and
push
xchg
cmc
jmp
call
cmc
xchg
adc
pop
push
cmc
dec
je
mov
pop
cmc
call
push
outsl
hlt
adcb
mov
or
test
xchg
sub
xor
xchg
and
je,pt
xor
adc
mov
cli
out
int3
add
add
into
daa
add
sbb
and
cmc
xor
dec
or
cmc
adc
and
fmull
cmp
mov
or
and
and
stos
sub
mov
mov
dec
inc
adc
pusha
aad
sbb
inc
push
scas
xchg
test
push
xchg
test
ret
push
or
push
or
push
xchg
cmc
sub
push
and
sub
ja
xlat
xor
inc
xor
aaa
and
faddl
jmp
or
and
mull
testl
or
and
movsb
and
loopne
test
testl
push
xchg
adc
fadds
inc
mov
mov
xchg
test
pop
and
cmp
mov
xchg
notl
pop
in
fdiv
xchg
and
jnp
push
sub
adc
add
scas
dec
divl
xchg
lods
test
adcb
adcl
xchg
adc
pop
jo
jbe
mull
xchg
inc
shl
adcb
xchg
test
cmpsl
dec
or
lret
sub
push
jae
das
sbb
dec
or
inc
dec
inc
sbb
mov
or
or
jo
cmp
inc
dec
inc
notl
subb
or
pop
test
in
xchg
fmuls
add
and
and
adc
pop
inc
mov
ss
push
mull
outsl
pushf
negl
cs
je
pushf
sbb
dec
je
add
inc
dec
inc
idivl
or
mov
xor
xor
push
sub
notl
insl
sub
das
dec
or
cmp
bound
ret
adc
push
aad
xchg
negl
test
testl
sbb
adc
or
testl
sahf
inc
mov
push
xor
xchg
mov
les
add
dec
adc
aaa
adc
cmpb
stos
cmp
inc
testl
jmp
or
lock
or
inc
jecxz
or
push
sub
int3
and
xchg
adc
rcll
dec
lock
aas
call
mov
or
cmp
add
dec
or
test
cmp
sbb
adc
adcb
xchg
adc
xchg
adc
loope
mul
lock
out
adc
push
xchg
adc
sub
inc
cmp
add
loop
mov
dec
neg
jno
or
testl
or
sbb
test
push
and
dec
xchg
and
cmp
adc
mov
dec
inc
xor
stos
or
aaa
inc
testl
mov
insl
ret
stos
scas
cmpsb
ss
xor
xor
sbb
push
hlt
push
push
sbb
add
das
inc
leave
mov
inc
dec
inc
idiv
ljmp
ds
cmp
stc
into
add
subb
dec
inc
adc
mov
notl
sub
daa
mov
cmp
and
out
mov
mov
cmp
pop
xchg
adc
stos
or
mov
xor
ja
and
mov
xchg
and
fwait
push
or
idivl
sti
xor
fidivl
jmp
loopne
or
mov
sbb
dec
lock
sub
and
pop
hlt
testl
dec
inc
mov
test
ja
imull
lahf
jmp
or
push
or
scas
xchg
testl
xor
test
notl
hlt
testl
lds
int3
notl
insl
rclb
pop
stc
inc
lods
pop
dec
idivb
roll
sysenter
stos
loop
daa
out
cmp
push
lods
dec
or
push
xor
and
dec
pop
pop
pop
jbe
jns
out
test
in
sahf
iret
fucom
cmc
inc
data16
mov
jge
dec
mov
push
cmp
xchg
mov
pusha
push
push
cmpsl
push
es
dec
jge
jo
inc
out
push
mov
add
pusha
push
and
loope
mull
xor
lret
mov
adc
or
and
or
mov
sub
iret
test
xchg
test
notl
inc
mov
leave
push
dec
adc
fwait
sbb
sub
add
pop
and
mov
push
stos
and
lds
roll
dec
push
xchg
adc
movsb
push
dec
inc
cmp
testl
mov
lock
ljmp
sbb
orb
xchg
adc
dec
inc
sbb
dec
ret
push
testl
mov
rcr
scas
push
dec
inc
negl
push
push
xchg
adc
xor
jns
imull
lcall
xchg
test
testl
test
and
and
pop
lock
xchg
and
notl
std
pusha
and
pop
not
and
sbb
mov
or
push
mov
ja
and
sub
dec
in
test
dec
or
mov
mov
sti
xchg
test
push
pusha
dec
or
and
lods
sub
outsl
stos
and
and
flds
loop
xchg
in
insb
adc
and
in
dec
adc
jnp
out
in
out
jle
push
and
push
xchg
and
repz
in
and
es
or
or
mov
push
and
xchg
test
pop
pop
and
aas
mov
xchg
test
xchg
popf
test
cmp
adc
adc
in
fbstp
xor
and
mov
add
movsl
subl
push
movsl
in
in
or
add
in
and
add
roll
aas
push
xchg
and
lock
fsubr
sub
out
dec
sbb
xchg
in
push
sbb
and
dec
adc
das
dec
or
test
pop
jmp
and
jb
sub
in
test
xchg
add
push
add
ret
pop
xorl
jle
jl
cltd
stos
fidivrs
adc
aad
and
aam
adc
pop
cmp
mov
lahf
rcrl
test
and
sub
fidivs
or
call
xor
and
xor
mov
in
pop
pop
inc
call
cmp
mov
xchg
in
mov
mov
in
ret
ja
and
adc
jb
femms
mov
mov
push
cmp
xchg
mov
and
in
rclb
xchg
push
cmp
aaa
push
in
cltd
dec
jne
jo
inc
dec
inc
in
pushf
enter
test
and
xchg
test
in
inc
dec
inc
mov
into
inc
xor
and
scas
dec
push
xchg
in
add
daa
movsl
imul
xchg
and
in
pop
and
lock
and
in
test
es
sahf
movsl
dec
lods
xchg
in
pop
les
ret
inc
cmp
cli
iret
push
and
and
stos
and
pushf
push
in
and
pop
loopne
xor
int3
push
inc
stos
and
mov
pop
push
add
inc
and
addl
int3
and
cmp
or
add
inc
mov
dec
in
out
or
popf
inc
or
adc
adc
xchg
in
cmpsb
les
xchg
test
adc
loopne
mov
in
inc
in
pop
mov
or
xchg
inc
add
fldl
sub
ljmp
xchg
xor
push
sub
sbb
cmp
es
xchg
in
rclb
add
dec
or
mov
dec
or
movsl
mov
mov
sub
mov
push
inc
add
ret
dec
adc
pusha
push
mov
push
dec
ret
inc
xchg
and
xor
add
and
cmp
in
dec
adc
adcb
add
and
cmp
in
xchg
test
and
mov
movsl
mov
mov
xor
mov
in
and
or
enter
sbb
or
xchg
in
lods
nop
jmp
outsl
mov
movsb
xor
mov
fsubs
push
movsb
mov
or
jno
dec
inc
in
iret
scas
and
cwtl
imul
call
push
dec
movsb
pusha
xor
and
shlb
and
in
push
cmp
mov
pop
push
xchg
adc
aaa
out
dec
adc
push
xchg
adc
cmp
or
in
adc
cwtl
add
aam
es
in
or
xchg
dec
adc
dec
in
add
test
adc
xor
inc
inc
adcb
popa
fcomip
in
adc
out
add
dec
inc
mov
in
add
or
lock
mov
dec
and
dec
dec
in
call
mov
aaa
ret
outsb
movsb
cmpsl
push
pop
mov
pop
inc
outsb
inc
dec
inc
in
addl
lock
inc
dec
inc
mov
or
inc
popa
and
adc
sbb
cmp
pop
jb
xorb
dec
inc
in
pop
xor
loope
addb
adc
adc
xchg
and
in
and
repz
or
fld
or
cs
test
and
xchg
and
push
cmp
cli
fs
dec
popa
inc
dec
inc
mov
aaa
add
push
fdivs
push
test
push
mov
mov
orl
dec
inc
mov
or
in
mov
fcoms
loopne
je
mov
jo
mov
add
and
je
mov
leave
jb
sahf
or
js
dec
adc
sahf
sub
dec
inc
adcb
test
mov
test
dec
inc
and
sub
adc
xchg
test
push
pop
fwait
lea
cmp
pop
fwait
shrl
sub
pop
xchg
or
pop
push
and
aas
adc
dec
or
aas
mov
sbb
jg
in
dec
pop
das
dec
mov
pusha
and
std
mov
add
ljmp
mov
leave
or
leave
mov
or
jnp
test
pusha
aas
push
cmp
aaa
lea
scas
jb
or
sbb
test
aas
cwtl
or
xchg
adc
lods
sbb
sub
aas
xor
adc
sbb
inc
adc
or
pusha
mov
mov
and
imul
and
mov
add
inc
inc
fs
jmp
push
lret
mov
xchg
or
xorb
or
or
mov
or
out
add
stc
popf
sbb
enter
adc
cmpsl
push
and
sar
lods
xor
aas
xchg
test
mov
pop
dec
mov
shl
lods
imul
add
xchg
aas
or
pop
dec
clc
cwtl
dec
and
movsl
inc
mov
jo
aas
xchg
test
addl
loope
aas
or
sbb
out
mov
fnstcw
loopne
sbb
dec
inc
aas
xor
or
adc
dec
aas
jg
adc
or
icebp
mov
aas
cmp
and
aas
inc
and
mov
mov
sub
inc
and
roll
pop
lcall
adc
or
or
pop
pusha
cwtl
dec
or
and
add
aas
push
xchg
pop
jo
and
aas
mov
cmpb
test
testl
loope
sbb
and
dec
inc
dec
sbb
lahf
add
dec
pop
dec
mov
adc
rorl
dec
cmpl
ss
stc
notl
ret
mov
adc
sub
jl
test
jo
mov
inc
adc
jo
out
add
cmp
or
dec
cmovns
or
test
orb
adc
inc
mov
mov
jne
xchg
dec
pop
mov
insb
gs
dec
dec
pop
ret
or
movups
inc
mov
inc
fs
fldcw
and
mov
arpl
ret
fs
push
dec
adc
add
cmp
xorb
aam
dec
call
add
fwait
clc
and
xchg
leave
mov
mov
inc
or
dec
or
ljmp
mov
mov
es
and
sbb
adc
notl
not
js
ja
and
or
mov
lods
add
test
imul
xor
push
xchg
and
arpl
dec
or
xchg
mov
and
arpl
mov
arpl
mov
cmp
fdivs
aas
or
sbb
push
and
and
mov
xchg
arpl
repz
arpl
ret
shlb
sbbb
push
dec
arpl
and
loope
or
arpl
adc
in
or
add
arpl
push
arpl
arpl
jmp
mov
or
das
dec
adc
lret
enter
add
cmpsl
fisubrs
loopne
dec
arpl
and
int
sub
loopne
and
in
xor
dec
or
rcrl
sbb
pop
and
and
or
arpl
incb
inc
ss
pusha
cwtl
arpl
arpl
mov
mov
or
sub
push
and
inc
or
mov
inc
mov
arpl
ret
mov
dec
inc
sub
dec
or
xchg
test
and
mov
test
xchg
inc
and
adc
arpl
out
push
fimuls
ds
icebp
pop
pop
cmp
sbb
ss
inc
cmp
inc
sbb
repz
cwtl
pop
inc
add
inc
mov
xchg
and
push
repnz
lods
sbb
add
movsl
fwait
dec
inc
add
orl
or
inc
lock
pop
push
mov
mov
add
mov
mov
xchg
adc
cwtl
mov
cmp
or
push
dec
inc
pop
adc
int3
jbe
jl
fmull
fchs
stos
pop
enter
and
pop
add
add
and
shrb
pop
xchg
push
cmpsb
xchg
pop
cwtl
daa
add
pop
mov
add
lret
sbb
push
xchg
adc
mov
inc
sub
fidivrs
sbb
mov
add
inc
jo
pop
xchg
test
mov
test
sub
pop
sub
outsl
rcrb
pop
push
mov
push
jmp
mov
pop
and
or
loope
stos
and
or
out
mov
push
call
je
mov
mov
aaa
pop
pop
pop
in
fs
outsl
jge
pop
mov
aaa
cmp
pop
and
dec
std
scas
call
jmp
sub
lock
pop
or
shll
push
sbb
leave
mov
je
mov
lock
sbb
inc
mov
inc
and
jge
sbb
lea
in
pop
and
sarb
adc
je
adc
dec
or
pusha
pop
xchg
and
fadds
inc
inc
mov
ret
xlat
lea
sub
adc
and
xchg
mov
lea
add
gs
mov
and
fildl
xchg
and
xchg
mov
cmp
adc
pop
and
sti
xor
push
jbe
cld
mov
sbb
sub
cs
rorb
dec
repnz
sub
dec
inc
sti
xor
popa
push
ret
and
sbbb
rorl
orb
xor
sbb
pusha
das
data16
inc
cmp
test
nop
cltd
test
std
sti
loope
rolb
or
cwtl
adc
call
push
inc
pusha
mov
addb
cmp
es
mov
cld
loope
out
add
add
test
or
push
fcmovne
test
or
pop
adc
lock
js
push
lock
or
popa
pusha
test
push
jb
inc
and
test
mov
sbb
mov
push
dec
lds
push
and
cli
push
or
xor
push
dec
je
bound
mull
adc
sub
mov
and
push
fstl
inc
dec
inc
push
xor
xchg
test
push
add
push
stos
and
fcom
ret
sub
xchg
test
cmp
mov
cmp
shrl
dec
xchg
addb
mov
push
mov
xchg
adc
push
adc
mov
or
addb
xchg
push
cld
dec
adc
pop
dec
push
push
in
xchg
adc
push
clc
adc
outsl
push
push
sbb
inc
sub
xchg
pop
push
xchg
adc
and
ret
dec
inc
pop
pop
sbb
sbb
inc
push
xchg
inc
inc
xor
mov
inc
dec
inc
push
push
sbb
shrb
inc
adc
in
pop
nopl
pushf
cmpl
mov
inc
pop
enter
sbb
pushf
jne
movsb
xor
and
pusha
and
mov
mov
daa
sbb
add
or
push
scas
adc
fsubl
in
cwtl
test
test
or
call
push
mov
dec
gs
lahf
filds
int3
mov
incb
dec
inc
std
jge
imul
subl
outsb
sbb
ja
pop
gs
mov
push
xor
dec
or
loopne
out
mov
inc
adc
mov
insb
xor
add
mov
xor
mov
jl
in
or
add
or
in
gs
and
pop
pop
add
and
pop
sub
push
inc
mov
int
push
addl
gs
pop
gs
sbbb
xchg
inc
and
pusha
and
cmp
scas
add
add
ret
lds
pop
xor
adc
or
or
scas
sub
gs
or
ja
xchg
sub
inc
rorb
mov
fsubl
gs
mov
cmp
adc
gs
ja
mov
repnz
fnstcw
pusha
and
or
gs
or
adc
gs
fisubs
xchg
int3
mov
mov
rcrb
and
imul
hlt
call
adc
jb
adc
clc
inc
hlt
ret
nop
sbb
add
sbb
in
mov
inc
xor
test
xor
std
cwtl
push
adc
and
std
cltd
movsl
xchg
rorb
imull
inc
sbb
xor
and
xor
xchg
clc
jecxz
xchg
cmp
stos
inc
adc
adc
adc
aam
pop
jb
and
or
data16
cmc
or
repnz
adc
add
xchg
adc
divb
in
xchg
and
shlb
addr16
testb
xor
mov
and
loope
lcall
in
addr16
cmc
add
dec
repnz
xchg
dec
jecxz
and
and
gs
pushf
ja
lock
jno
iret
pop
sbb
jle
sbb
and
xor
nop
add
inc
lock
cmp
dec
ds
notb
dec
enter
lea
rolb
inc
push
pop
lds
or
jo
shrl
or
cmp
lds
mov
test
dec
or
xchg
mov
adc
add
xchg
ret
pusha
test
shr
or
xor
and
rcrl
ds
test
push
and
loopne
cmpsb
gs
pop
call
mov
gs
lods
push
stc
inc
and
js
jnp
xchg
adc
pop
dec
pop
lea
gs
inc
and
mov
and
fdivrl
jo
cwtl
es
inc
mov
cmp
push
imul
mov
inc
sbb
ret
jg
adc
loope
test
call
mov
and
cwtl
inc
adc
dec
gs
or
push
pusha
mov
pop
inc
inc
add
gs
pop
xor
adc
or
push
mov
mov
or
push
and
aaa
outsb
and
fcompl
or
add
and
gs
test
cwtl
dec
and
push
adc
xchg
repnz
xor
and
mov
inc
jo
ljmp
and
je
mov
fs
push
test
and
dec
mov
push
and
sbb
fidivrl
cmc
addb
adc
inc
adc
cli
out
sbb
stos
aas
add
test
jb
es
and
gs
adc
scas
inc
push
mov
dec
addb
mov
adc
or
mov
pop
seto
adc
es
testl
dec
loopne
add
clc
dec
in
mov
in
enter
mov
or
xor
cmpsl
mov
dec
cmpsb
adc
stc
adc
push
and
gs
adc
jbe
inc
and
inc
and
cwtl
and
xor
or
ret
mov
pusha
nop
inc
adc
inc
adcl
js
les
gs
or
adc
gs
imul
nop
gs
inc
sbb
testb
mov
gs
gs
mov
push
adc
addl
loope
inc
imul
pop
and
and
rorl
and
cltd
or
inc
adc
push
xor
pop
jo
add
pop
sti
bound
pop
pop
and
inc
jo
mov
stos
adc
popf
rorl
js
or
imul
or
inc
nop
in
pop
xor
sbbl
andl
lret
icebp
adc
push
sbb
in
test
je
cwtl
or
in
mov
nop
test
in
and
roll
cmp
mov
in
fcoms
sbb
cmpsb
mov
ret
xchg
adc
enter
in
xchg
data16
xchg
adc
jo
push
in
adc
rcrb
adc
add
cld
jl
add
adc
sub
and
ret
in
fwait
xorb
test
ret
in
inc
cmp
mov
in
lret
nop
test
repnz
or
in
out
test
js
call
test
cmpsb
in
aam
adc
sub
mov
test
push
and
loope
mov
pop
adcl
call
sub
in
nop
test
push
in
inc
js
mov
inc
dec
in
daa
jl
test
and
xchg
inc
adc
test
adc
test
sub
mov
lock
test
pop
dec
pushf
mov
mov
and
pop
into
in
and
shrl
jno
mov
into
sti
ret
jle
jge
je,pn
lock
in
and
in
dec
lret
dec
inc
in
aaa
nop
test
hlt
sub
adc
adc
or
in
or
es
adc
and
mov
xchg
in
arpl
sbb
and
mov
adc
adc
adc
nop
adc
test
enter
or
sub
jb
jo
push
clc
clc
jmp
outsb
sub
in
pop
cld
dec
adc
add
jp
xchg
fdivr
sub
xchg
test
mov
enter
outsl
jb
inc
jb
xchg
push
adc
inc
adc
adc
cmp
test
push
adc
loopne
and
in
bound
mov
push
leave
mov
add
imul
cwtl
cmc
mov
dec
adc
or
sbb
inc
cmp
in
sbb
repnz
das
push
add
repz
dec
push
mov
dec
test
in
or
outsl
shlb
cmp
fstl
ds
adc
stos
ja
ret
and
mov
cmp
and
mov
in
dec
or
mov
rorb
dec
ljmp
push
adc
push
xchg
adc
orl
pop
jp
or
cmp
sub
dec
in
push
test
adc
dec
mov
fcomps
and
cmp
and
adc
jmp
call
clc
fdivp
or
in
add
and
rorl
sub
loopne
jo
test
aaa
xchg
dec
inc
test
in
daa
inc
adc
enter
and
cmp
mov
and
push
test
mov
and
jmp
ja
in
and
and
sbb
inc
in
lahf
movsl
adc
and
inc
and
popa
push
in
or
cs
xchg
adc
or
adc
out
loopne
dec
or
in
or
jl
or
inc
mov
in
xor
outsb
and
in
imul
mov
in
adc
rorb
push
popa
jo
xchg
in
xlat
and
and
in
inc
sub
into
ja
aas
or
mov
adc
lds
mov
cwtl
out
pop
sbb
pop
mov
in
js
test
test
jne
into
mov
nop
in
xlat
lret
cmp
in
inc
dec
inc
xor
and
fwait
and
lcall
ficoml
adc
test
mov
pop
jl
push
inc
in
out
jo
sbb
or
cmp
ds
mov
adc
xchg
adc
mov
in
jg
fnstenv
cwtl
or
in
pop
std
dec
or
adc
mov
add
push
or
shll
or
and
ret
push
push
call
jo
dec
inc
in
shr
adc
dec
aaa
cs
jg
insb
jle
pop
and
lcall
orb
nop
in
cmp
cmp
inc
adc
sbb
in
loope
or
add
shll
sbb
and
pusha
add
dec
inc
in
dec
or
and
js
mov
imul
xchg
mov
jb
jb
cmp
nop
test
in
mov
or
mov
xchg
adc
test
adc
popa
jl
test
loope
and
in
inc
adc
push
and
in
and
fwait
jmp
and
dec
mov
test
loop
out
adc
mov
test
or
inc
inc
js
mov
adc
sbb
adc
mov
test
push
xchg
mov
or
push
xchg
adc
sub
les
push
clc
ja
adc
cmp
mov
in
pop
test
or
cmp
mov
loope
test
leave
dec
adc
sub
mov
adc
dec
or
cmp
insl
arpl
dec
shrb
mov
mov
push
push
push
and
mov
ret
sbb
ret
xchg
mov
push
adc
mov
idivl
lret
xchg
fsub
jmp
and
lret
push
sbb
lods
dec
sbb
cld
sub
xchg
sbbb
and
or
cld
insb
ja
cmp
push
lods
lock
out
and
out
out
data16
mov
mov
enter
mov
addr16
sub
sbb
mov
ret
pop
add
rcll
jae
lret
movsl
pop
test
or
test
or
add
repz
lret
movsl
sti
dec
call
mov
adcl
push
mov
insb
mov
mov
mov
push
outsb
inc
je
pop
or
mov
or
arpl
rclb
xorb
pop
xchg
fcmovu
adc
test
mov
fcoms
lea
sbb
and
inc
jp
lds
testb
jo
sbb
push
stos
and
mov
mov
dec
mov
jnp
jo
dec
jmp
dec
xor
sbb
cld
push
mov
xchg
ss
sarl
xchg
push
jno
pushf
add
lds
and
test
dec
outsl
mov
xchg
push
mov
add
aas
js
sbb
test
gs
dec
iret
cltd
jl
lds
xchg
push
testl
push
lods
imul
stc
sbb
jmp
scas
les
push
and
add
stc
or
rorb
push
cmp
or
mov
imul
adc
rorb
or
sbb
dec
xchg
iret
cmpsb
add
ljmp
test
sbb
xor
decl
push
adc
or
cwtl
dec
call
or
in
cmpsb
pusha
and
rcr
popl
addr16
nop
orb
mov
shrb
cmpl
sbbb
std
mov
test
or
nop
out
dec
or
inc
inc
mov
inc
add
into
mov
addb
xor
mov
jmp
and
dec
dec
loop
sbb
dec
ret
push
cmpsb
loopne
lods
dec
loopnew
and
adc
pusha
and
bound
adc
pop
roll
add
sub
subl
mov
mov
and
nop
mov
sub
push
aad
adc
pop
inc
mov
or
aas
fst
and
xor
adc
ret
xor
imul
mov
xchg
cld
les
xor
pop
adcb
movl
jb
cmpsl
or
pop
adc
dec
adc
test
scas
dec
sbb
bound
addl
enter
ljmp
sbb
and
adc
aas
push
adc
sbb
and
loopne
aas
les
and
cs
popf
adc
jge
aas
pusha
adc
loope
push
aas
sbb
or
inc
mov
and
fcoms
ffree
inc
aas
js
sbb
lret
mov
popa
jl
sbb
and
aas
cld
xor
addl
adc
mov
aas
mov
aas
mov
mov
sbb
mov
or
adc
or
aas
dec
or
push
and
add
jns
lea
adc
sbb
aaa
nop
adc
mov
inc
inc
mov
jp
and
mov
mov
pusha
aas
mov
xor
inc
jb
adc
adc
dec
mov
cmp
jle
push
enter
mov
or
add
xchg
ficoms
push
add
cmp
loope
xchg
bound
and
dec
or
mov
push
mov
sbb
push
movsl
mov
roll
orb
roll
xlat
ret
add
sarb
and
and
inc
inc
shl
push
add
rcl
test
sarl
sbb
rcrl
aas
call
and
cmp
roll
outsl
lds
push
lock
push
notb
fistpll
or
cmp
jp
add
fcomps
xchg
add
jns
mov
test
inc
or
loopne
jbe
adc
push
mov
push
js
cmpsb
or
subb
adc
sbb
adc
dec
xchg
inc
inc
mov
test
push
push
inc
pop
nop
sbbb
or
enter
js
and
cmp
adc
das
incl
or
push
adc
arpl
mov
and
add
sub
loop
je
enter
stc
mov
dec
or
push
test
push
shlb
jno
and
pop
test
mov
clc
adc
jmp
imul
dec
mov
dec
or
sub
push
aad
scas
mov
pop
adc
loope
adc
or
push
xor
push
cld
scas
xchg
xchg
add
push
bound
dec
add
adc
push
in
nop
adc
call
test
daa
orb
jae
sub
and
adc
xlat
adc
cmp
cwtl
pop
movsb
jo
xor
push
xchg
cmp
addb
roll
jne
jne
jl
pslld
and
pushf
lret
nop
push
add
stos
and
adc
dec
add
ret
or
sbb
or
or
adcb
or
sub
testl
pop
je
cltd
mov
cli
push
jo
repnz
push
sbb
sub
mov
cmp
inc
sub
enter
adc
clc
pop
imul
xchg
mov
mov
cmp
adc
in
mov
dec
jmp
xor
dec
adc
xor
or
sub
jbe
and
sub
testb
xor
mov
add
add
inc
xor
das
mov
mov
adc
xchg
lods
pop
adc
sarb
fildl
sbb
insb
add
xchg
popa
jno
subl
loope
fsubl
rclb
in
cmp
popf
nop
pop
fdivl
pusha
xor
fstpt
sbb
mov
dec
xor
pop
in
mov
lods
xchg
rcrb
mov
pop
mov
lods
cmpsl
push
jb
lods
fdivl
dec
fidivrl
daa
in
fidivrs
pop
in
icebp
dec
sbb
out
mov
out
add
mov
dec
push
mov
lret
in
push
pop
adcl
test
lcall
dec
jb
xchg
pop
xchg
push
test
fsubrp
test
mov
jl
mov
xchg
iret
pop
sar
call
shrl
call
pop
adc
lret
inc
pop
popf
add
ret
jns
fwait
add
xorb
sbb
add
dec
or
add
lods
or
pop
adc
out
sub
repz
pop
adc
repz
adc
xor
add
adcb
or
add
xchg
ret
add
into
push
mov
sub
and
adc
xchg
jb
fmuls
mov
out
inc
mov
pop
lcall
push
xor
dec
sbb
mov
addb
rcll
fwait
inc
lods
repz
cwtl
inc
pop
add
mov
xchg
adc
int
and
addr16
push
push
insb
sub
mov
mov
push
int
sbb
ss
bound
int
gs
std
js
mov
push
adc
movsl
int
test
mov
int
ss
jo
mov
je
int
sbb
mov
inc
js
int
xchg
mov
int
test
push
sbb
lods
in
xor
int
das
xorl
add
enter
les
cmp
adc
test
in
rolb
cmp
add
pusha
sti
fwait
and
adc
inc
jno
cwtl
adc
inc
jmp
or
xor
in
mov
stos
sti
mov
pop
push
divb
lods
mov
and
xor
in
and
inc
adc
add
sti
fcom
mov
mov
inc
movsl
mov
push
adc
inc
inc
jo
cld
adc
ret
pushf
lods
sbb
jp
cmp
cmp
xor
adc
mov
clc
dec
and
cmp
adc
scas
add
mov
adc
insb
and
sbb
sbbb
sub
out
xor
add
adc
repnz
adc
loopne
push
out
divl
testl
out
orb
mov
insb
add
js
ret
and
cmc
pusha
adc
dec
rorb
adc
adc
js
leave
out
add
inc
inc
mov
adc
inc
inc
inc
mov
xchg
mov
pop
test
dec
and
scas
call
lret
es
or
add
dec
push
aas
sub
addr16
cmp
je
adc
cld
jne
adc
and
add
insb
call
lea
ljmp
out
mov
and
or
les
mov
fimuls
inc
mov
dec
add
cmpb
test
dec
mov
jnp
sbb
outsl
lcall
std
mov
clc
push
aas
jns
decb
aam
pop
pusha
jge
mov
sub
ljmp
cmp
inc
mov
mov
mov
mov
lret
cmp
dec
orl
mov
pop
and
ds
mov
jg
mov
mov
lret
mov
sub
mov
pop
mov
and
mov
mov
mov
decb
jg
cmp
push
fcmove
stc
cs
push
mov
andb
mov
push
jne
add
stos
push
push
aad
jmp
jmp
xorb
cmp
cs
mov
adc
addr16
mov
sbb
pop
decl
std
out
lea
dec
xor
jns
xchg
in
int
in
push
xchg
mov
mov
push
mov
lds
pop
mov
fcomp
inc
push
ret
into
push
fbld
inc
xor
popf
push
mov
fldl
add
sbb
inc
xchg
xchg
sub
mov
jae
sub
lcall
jmp
in
jb
pop
sarb
call
mov
stc
loopne
mov
sub
adc
sub
mov
lock
push
pusha
mov
push
inc
call
out
add
sbb
insl
ret
push
cltd
pop
lret
scas
cmp
xor
imul
mov
out
insl
fistl
sbb
out
ss
mov
shlb
jmp
ret
into
cmp
push
pushl
xchg
push
mov
fists
push
mov
fwait
nopl
pinsrw
shr
mov
movsl
repnz
arpl
pushl
inc
inc
nop
pop
lcall
mov
lcall
leave
mov
or
movsl
fnstenv
push
mov
stc
scas
dec
pop
pop
call
test
add
out
push
pop
inc
frstor
popf
inc
inc
int3
xor
ja
dec
movsl
jle
scas
jg
dec
ljmp
pop
dec
ja
aas
mov
xorb
outsb
xor
lcall
enter
out
stos
push
jg,pn
jmp
push
sub
dec
push
mov
sbb
test
lock
scas
int3
incb
scas
inc
test
outsb
push
pop
cmp
mov
js
sub
sarb
pusha
movsl
lds
aaa
jecxz
jns
in
dec
fdivrl
xrelease
cwtl
sbb
fstl
out
inc
ds
test
ret
add
imulb
xor
pop
rorb
out
data16
imul
jg
push
mov
sbb
xchg
dec
push
pop
mov
dec
ja
aas
mov
mov
call
leave
jnp
xchg
in
adc
ja
dec
push
and
arpl
fisttpll
push
nop
jle
fisttps
andps
push
push
mov
push
imul
mov
das
roll
sbb
std
mov
stc
or
loopne
inc
aad
adc
scas
outsb
cli
mov
clc
in
jmp
and
inc
sub
and
cmp
in
add
xchg
jns
and
pop
push
dec
push
mov
dec
ljmp
jo
gs
lret
rcrb
lods
movsb
rorb
push
fcomps
rorl
xorl
clc
outsl
insb
or
sub
and
lret
cmp
xor
dec
gs
lret
je
pop
sbb
mov
mov
fbstp
sbb
push
jmp
jb
xor
test
mov
mov
inc
dec
add
addr16
jle
mov
dec
js
jp
mov
jge
push
mov
and
mov
daa
cmp
out
in
test
sbb
ja
imul
mov
lock
jnp
je
cli
sbb
sbb
xor
dec
push
test
mov
push
scas
test
cwtl
xchg
lods
test
test
sbb
out
cmp
mov
rorb
clc
outsl
dec
test
sbb
xor
adcl
dec
adc
and
sbb
lret
mov
ljmp
mov
outsl
in
arpl
or
sbb
mov
fsubrs
push
xchg
cmp
rorb
mov
lods
pop
cmp
bound
mov
mov
dec
inc
mov
loope
imull
adcb
mov
in
arpl
movsb
jecxz
cmpl
rorb
and
push
xchg
mov
out
or
into
xor
fisubrs
nopl
outsb
sbb
push
andb
add
mov
and
push
outsb
jecxz
lahf
fldt
fdivr
psubusb
add
out
aas
push
scas
in
decb
aas
mov
lret
scas
sub
mov
lods
sbb
or
lea
lret
decb
outsb
stos
add
and
pop
dec
out
fadds
loope
icebp
pushf
imul
decl
mov
xor
cmp
addr16
push
push
fimull
in
jge
cmp
shrd
cmp
pop
subl
sbb
xchg
push
pushl
leave
cmpsl
jecxz
xor
lea
and
pop
or
mov
sarb
push
push
ds
shll
je
inc
fwait
mov
dec
jle
ret
inc
pop
fs
rolb
inc
push
les
es
sbb
gs
ljmp
je
cmp
idiv
je
clc
or
cmp
popl
or
add
inc
sub
push
jns
mov
adc
sar
cli
cmpsl
out
mov
jb
in
mov
pop
insl
out
sbb
mov
lds
sbb
xchg
clc
sub
jmp
cmp
das
mov
push
push
cmc
xchg
or
cmp
mov
mov
jbe
jg
pop
push
mov
in
insb
lock
call
lds
fstps
dec
cmpsb
scas
pop
sub
and
ja
idiv
adc
loop
cmpb
xchg
xchg
cmpl
loope
push
lods
cmp
imul
clc
mov
jae
notl
fistpll
test
jae
push
push
pop
add
xor
scas
int3
jmp
lods
push
jmp
dec
filds
movsb
rclb
adc
enter
sub
repz
lock
inc
mov
sbb
sbb
jmp
mov
arpl
fadd
sbb
mov
sbb
and
adc
outsb
lahf
sahf
mov
imulb
push
pop
jge
dec
bound
jge
daa
incb
adc
lcall
lret
daa
pop
fnstenv
push
jns
sub
inc
clc
push
cmp
push
mov
mov
inc
ret
dec
mov
iret
dec
pop
iret
sbbl
jnp
inc
cmp
lea
fisubrs
jbe
push
imul
mov
icebp
es
or
add
fdivs
std
add
jbe
lcall
aas
inc
xchg
out
ljmp
jmp
xchg
inc
test
xchg
les
xchg
sarl
test
xchg
inc
xchg
add
test
xor
orb
in
xchg
adc
aas
adc
stc
out
mov
sbb
nop
mov
xlat
dec
mov
cmp
sahf
inc
pop
xchg
cmp
add
stos
add
sbbl
dec
cmp
stos
fiadds
cmp
mov
sub
xchg
stos
jns
jle
lods
jo
ds
fidivrl
insb
jo
pop
imul
mov
sub
fmull
mov
and
jmp
mov
mov
jbe
sub
xchg
jle,pt
push
imul
cmp
sbb
or
and
xchg
incb
xchg
testl
mov
aas
incb
ret
enter
or
mov
mov
incb
data16
lahf
mov
push
and
dec
cmovo
adc
jo
out
stos
push
mov
fsubr
push
idivl
decb
lock
andb
out
push
lcall
xor
mov
push
in
sbbb
aas
incb
jmp
fdivrs
inc
popf
icebp
adc
xlat
pusha
xchg
push
dec
inc
pop
xchg
mov
mov
sahf
mov
popf
loopne
ds
add
loopne
ds
pusha
pop
shrb
mov
add
cld
push
shlb
repnz
jle
pusha
pop
jns
out
je
ds
incb
xor
js
fiadds
inc
mov
cmp
ror
jmp
pop
jl
xor
adc
fwait
sub
jne
clc
cmpsl
loopne
mov
aas
fmuls
xlat
rorb
ss
fisttpll
rolb
xchg
dec
mov
lahf
mov
push
shr
das
ret
push
outsb
adc
call
aas
xlat
js
push
out
mov
dec
or
and
push
jb
dec
pop
mov
xchg
mov
int3
mov
subb
test
repnz
ds
shrb
aad
fisttps
movsb
push
sets
aas
cmp
mov
stc
dec
adc
dec
jp
sbb
out
pop
push
cs
dec
fcoml
repnz
and
test
shrb
mov
test
je
ljmp
in
aam
xchg
lret
repz
leave
fs
push
mov
aaa
mov
lret
push
and
pop
int3
or
incl
mov
inc
ljmp
inc
xlat
mov
nop
xchg
mov
adc
xchg
and
mov
push
repnz
mov
and
jns
mov
mov
daa
mov
enter
push
mov
xchg
push
sbb
mov
lret
inc
pop
adc
inc
or
cmpsb
ret
sub
cmpl
popa
adc
push
dec
xchg
xchg
inc
sub
loopne
and
and
push
cld
and
mov
js
nop
outsb
nop
lret
lock
add
jo
or
sbb
ds
sbb
aad
pop
jo
push
jmp
mov
cmpl
add
xchg
cmpsl
test
repnz
sbb
out
inc
js
pop
lahf
popa
mov
out
outsb
or
mov
adc
jmp
push
push
dec
sub
mov
xor
lret
inc
mov
push
dec
nop
cmp
ret
xor
pop
aas
fisubrs
faddl
adc
inc
jmp
movsl
pop
jo
outsb
xchg
jo
mov
add
popf
and
and
cmp
pop
stos
jg
stc
jo
dec
add
push
call
and
push
add
jge
push
push
call
nop
ficoms
mov
test
push
push
nop
dec
pusha
mov
sub
test
add
in
push
xor
sub
call
aam
xchg
out
jmp
shll
inc
adc
gs
lods
mov
testl
sub
jno
std
adc
inc
sub
imul
xchg
shr
sub
sbb
jnp
push
jns
shlb
pop
sub
mov
jge
adc
icebp
or
pop
dec
movsl
or
jne
adc
push
fst
push
ror
push
mov
mov
xchg
push
lods
mov
loopne
ds
imul
popf
mov
jnp
imulb
js,pn
mov
jns
fidivs
into
pushf
jle
fwait
out
add
ds
out
sti
pop
popa
push
imul
je
hlt
aas
into
mov
or
pop
pushw
xor
xchg
scas
imul
aas
inc
and
out
sar
in
fbstp
lods
pop
dec
push
loopne
aad
adc
ret
inc
lods
insl
xor
jle
es
mov
scas
out
imul
push
call
add
fidivrl
dec
push
cs
push
cmp
cmpsb
ss
js
sbb
xchg
movsl
ss
inc
sub
mov
fldenv
aas
rolb
push
jg,pt
aas
add
push
push
mov
mov
dec
push
outsb
lcall
stos
rcrl
or
add
push
mov
xor
xchg
clc
lahf
mov
dec
dec
cmpsb
dec
mov
fdivrs
jns
test
popf
push
cmpsl
mov
add
mov
sub
xchg
and
clc
ret
ret
and
push
incb
push
sub
dec
pop
sbb
dec
jo
aam
jae
fucomip
out
das
out
xor
jle
jne
adc
push
adc
mov
xor
movb
lods
mov
add
outsl
or
jne
cmc
fwait
and
jne
jo
pop
mov
fists
lods
je
movsl
jns
push
xor
jno
push
fistpll
cmpsb
ds
fsubr
dec
ss
xor
dec
xchg
jmp
lods
cmp
mov
push
lret
mov
mov
push
movsl
xor
sahf
mov
mov
jle
jmp
movsb
rcrb
jg
dec
sahf
xchg
js
stos
ds
pop
movsl
push
jmp
dec
mov
stos
mov
lcall
enter
sbb
xchg
lret
test
add
sbb
rcrb
sbb
jle
jns
adc
sbb
cltd
stc
xor
iret
and
pop
call
mov
inc
sbb
dec
js
pushl
jg
popf
or
sub
xor
xchg
fldenv
pop
mov
sahf
xchg
push
add
jbe
inc
sub
mov
shrl
cmp
adc
jge
pop
lods
xchg
xchg
sub
xchg
inc
ljmp
push
mov
or
and
repz
mov
push
mov
xor
and
loopne
add
in
xor
mov
push
roll
aas
fbld
dec
enter
mov
imul
in
dec
mov
xor
int
scas
pop
jns
enter
mov
sbb
sub
rcr
xchg
push
lcall
mov
addr16
jmp
push
add
lods
sti
ds
out
das
pop
adc
mov
call
dec
and
push
mov
dec
pop
int
filds
je
xor
xor
fists
mov
sub
add
cld
push
add
jle
cwtl
mov
mov
es
out
pop
dec
jo
mov
dec
push
repnz
xchg
aaa
and
leave
pop
stos
shrl
mov
stos
inc
stos
leave
dec
pop
repnz
stos
es
push
stos
in
das
jns
stos
cld
stos
out
stos
repnz
xchg
mov
les
inc
test
mov
test
xchg
xchg
bound
pop
cmp
mov
mov
into
push
xchg
mov
mov
sbb
sbb
sub
or
pop
xchg
dec
xor
test
push
sub
jo
sub
aas
cwtl
mov
std
add
nop
sub
dec
mov
push
pop
rcrb
mov
xor
adc
add
adc
addr16
clc
nop
popa
inc
in
lahf
inc
xor
inc
inc
xor
int
pusha
mov
aas
loopne
rorl
sub
out
wrmsr
sbb
insl
mov
or
fcoml
insb
mov
lcall
test
jmp
push
dec
and
fistpl
aas
jmp
cmp
mov
mov
lret
es
ds
out
filds
mov
ljmp
jge
push
mov
dec
loop
adc
adc
adc
pop
repnz
push
sbb
call
xchg
dec
ja
repz
mov
pop
xchg
es
or
adc
pop
cltd
jge
icebp
mov
sti
sbb
stc
cmp
xor
mov
lods
jl
in
mov
adc
mov
in
xor
xor
adc
xor
movaps
sysenter
xchg
dec
orb
jbe
lret
aas
outsb
sub
nop
xor
or
push
pop
xor
push
cmpsl
dec
dec
movsl
pop
push
aas
adc
mov
inc
sub
aas
sub
loopne
mov
or
enter
pop
or
das
inc
out
push
lcall
xor
lret
clc
inc
orl
inc
inc
jmp
mov
sub
push
dec
roll
cmp
js
es
mov
das
test
push
aas
mov
fsts
out
sub
imul
scas
in
sahf
and
jae
mov
inc
decl
arpl
test
inc
mov
pop
lahf
xchg
mov
bound
sahf
in
test
mov
jno
lea
jne
xchg
fcompl
repz
sub
sub
pop
mov
pusha
in
nop
mov
mov
nop
repz
movaps
mov
inc
dec
lahf
js
cwtl
push
ficoms
lock
mov
sahf
les
mov
mov
pop
or
sbb
jp
nop
outsl
jmp
sbb
and
out
es
test
ds
mov
jl
fs
lods
lods
push
xchg
pop
inc
in
sbb
mov
pop
mov
sub
inc
jle
cld
faddl
data16
mov
aaa
outsl
mov
jns
movsl
and
daa
rorb
dec
inc
xchg
shr
dec
test
pop
imul
add
and
xorb
sub
jo
xchg
cs
stos
sbb
xchg
xchg
push
call
xor
adc
nop
and
pop
aas
negl
jmp
inc
ja
cltd
es
and
inc
daa
bnd
movsb
push
pop
inc
ja
or
pop
jns
jl
dec
mov
out
and
pop
loop
rcr
and
cs
and
pusha
sub
jno
cmp
notb
mov
punpckhbw
pop
addr16
out
and
jo
cmp
daa
sbb
testl
loop
rcr
scas
inc
pop
negb
in
rorb
pop
ds
mov
xchg
and
daa
leave
popf
out
roll
js
adc
dec
movsl
or
add
cmc
add
add
push
jmp
fcomip
daa
ficoml
sbb
movb
test
in
ds
push
inc
inc
call
add
nop
inc
jp
andl
pop
loop
mov
push
xchg
push
push
bound
push
mov
inc
xor
and
mov
push
push
inc
xchg
or
into
and
adc
push
call
sub
addr16
add
lock
pop
pop
sub
repnz
push
mov
sbb
outsl
xchg
rcrb
pop
and
sbb
mov
rclb
add
sub
xor
and
daa
and
movl
and
sbb
jbe
ret
scas
push
mull
daa
lret
test
push
lock
mov
xchg
js
scas
test
jb
push
mov
aas
icebp
sbb
sub
dec
sub
clc
mov
pop
sbb
enter
test
dec
pop
xchg
out
xchg
push
cmp
jo
mov
in
call
jp
lock
add
in
pushl
out
push
cmp
notl
push
push
and
js
daa
fdivrp
dec
mov
pop
scas
lahf
cwtl
daa
lret
enter
mov
es
xchg
jb
inc
xchg
and
rcrl
sub
jmp
fisttps
nop
push
jns
jmp
es
sbb
loopne
int3
xchg
push
xor
sbb
fsubrs
aaa
push
and
leave
dec
xchg
xchg
add
test
pop
xchg
daa
fiaddl
cmp
int3
movb
ja
cmpl
cmp
pop
aas
mov
sbb
jae
push
in
mov
out
data16
sbb
adc
inc
fisubrl
pop
push
inc
adc
push
ss
cs
xchg
dec
rcll
daa
sbb
sbb
push
mov
es
sbb
repnz
lds
or
sub
inc
pop
or
mov
push
cwtl
test
add
or
sbb
jecxz
out
pop
mov
movsb
nop
xorb
sahf
out
inc
xor
push
add
cmp
repz
loop
rol
mov
repz
stos
lcall
repz
cmp
push
cld
loope
sahf
out
lock
ret
jns
out
mov
out
sahf
pop
dec
ds
sbb
mov
jns
push
loopne
out
iret
repz
rol
mov
mov
rcrl
cmp
xchg
push
cmp
repz
repz
push
repnz
ds
aam
repz
enter
xorb
repz
inc
xor
jns
cmpsl
stc
out
hlt
loop
lret
jbe
rolb
jmp
push
sub
sarl
or
ljmp
out
cmpsb
xchg
xchg
pop
repz
notl
inc
sub
imul
iret
repz
fadd
mov
xchg
cmpb
cmp
push
inc
ss
iret
repz
call
sahf
out
ret
sbb
idivb
out
flds
subb
sarl
xor
push
cld
fsubr
iret
repz
loop
ret
xchg
repz
push
inc
sub
cmp
push
test
push
fidivrl
repz
mov
cmp
repz
pusha
inc
xor
jns
iret
and
sahf
out
sahf
pop
dec
xor
cmp
repz
hlt
out
sarb
mov
repz
pusha
dec
cmp
push
sahf
out
lcall
repz
jnp
ss
out
loopne
mov
out
cmp
jle,pt
push
pop
repz
out
cmp
push
insb
ljmp
mov
cld
cmpl
int
cmp
or
push
enter
out
xor
bound
cmp
repz
sahf
stos
mov
repz
loop
add
adc
jns
out
xor
fs
repz
outsb
jp
pop
loopne
cmp
sbb
clc
fucomip
jns
out
stos
mov
sahf
out
push
inc
cmp
iret
sarl
add
fsubp
into
mov
iret
repz
lcall
repz
cmp
push
out
sahf
out
fucomp
loop
enter
sahf
mov
push
pop
inc
sub
adc
cmp
out
cli
fsubr
fcompl
jns
cmpsl
outsb
xchg
sahf
mov
push
in
jl
divl
xor
inc
pop
xchg
jns
rorl
ror
sarl
hlt
add
adc
ss
pop
insb
jle
iret
repz
push
mov
fdivp
sahf
out
ds
adc
cmp
sahf
out
data16
sahf
lods
sahf
out
test
pushf
mov
sahf
out
je
push
dec
cmp
jl
out
sbb
clc
into
repz
fadd
mov
pushf
out
mov
in
mul
push
sbb
sub
ds
repz
data16
test
lcall
ljmp
or
push
push
push
insb
pop
or
or
ja
cmp
je
cmpsl
push
mov
into
push
jp
lock
out
push
or
add
int
and
mov
insl
mov
sub
xchg
sbb
addr16
nop
push
adc
push
push
fs
xor
inc
push
aam
loop
push
out
lcall
or
sahf
out
sahf
or
or
push
vmwrite
adc
out
sahf
out
and
out
sahf
xor
xor
jns
cmp
cmp
out
sahf
out
cmp
out
sahf
inc
inc
inc
inc
inc
inc
jns
out
inc
dec
dec
dec
dec
out
sahf
out
dec
dec
dec
push
sahf
out
sahf
push
push
push
push
push
push
jns
out
push
pop
pop
pop
pop
out
sahf
out
pop
pop
pop
pusha
sahf
out
sahf
popa
outsb
xchg
out
mov
repz
repz
sub
inc
push
iret
repz
popa
jb
lcall
repz
jns
out
or
es
out
push
jl
sahf
out
sahf
mov
hlt
out
fdivrp
jle
sbb
and
inc
sahf
out
sahf
push
pop
imul
jns
mov
jns
out
int
fucomip
iret
sarl
cli
add
dec
lock
or
xor
roll
gs
gs
mov
pop
movsl
add
testl
jne
ret
jae
jae
jae
bound
inc
add
inc
clc
out
adc
insb
popa
jae
ss
mulb
cmp
sub
push
sbb
jb
inc
and
sbb
ss
addl
test
ret
stos
mov
xor
test
cwtl
or
or
and
fwait
add
int3
fadds
add
push
cli
pop
push
push
mov
jge
inc
push
push
test
jbe
loopne
pop
mov
sbb
mov
daa
inc
add
lcall
test
and
cmp
mov
adc
notb
loope
cmp
nop
loop
nop
shll
sbb
add
or
add
rcrb
add
mov
xor
and
out
pop
or
jb
mov
jo
sti
fidivrs
shrb
push
pusha
push
rclb
negl
sbbb
cs
cmpsb
push
test
lcall
push
or
push
insb
sub
rolb
fists
add
inc
add
jno
mov
sub
sub
mov
shl
add
inc
lock
add
add
pop
and
or
jo
sbb
ficoms
inc
adcb
adc
lahf
scas
or
mov
pop
leave
cmp
jmp
add
hlt
inc
sar
aaa
mov
or
mov
sbb
or
incl
adc
sti
push
rclb
pop
aam
lcall
add
cmp
push
add
jo
es
nop
jg
inc
inc
insl
xor
test
lret
fnstenv
mov
mov
test
ret
xor
outsl
xor
xor
jae
mov
mov
mov
outsb
add
fdivrs
orl
and
push
inc
push
inc
insw
je
insb
mov
or
add
and
inc
xor
sub
movb
mov
cld
sar
push
push
push
add
mov
fdivrs
or
icebp
sbb
fidivl
repz
repz
out
outsb
icebp
push
mov
out
sub
push
ret
addr16
dec
clc
lahf
testl
add
mov
cmp
or
xor
pop
add
add
cmp
and
add
test
loope
incl
addl
jno
faddl
jae
push
cmp
jbe
and
int3
std
xor
mov
or
lcall
clc
and
jmp
push
or
add
decl
scas
add
cld
lret
divl
ljmp
or
std
addr16
mov
add
std
fwait
add
inc
add
and
outsl
clc
incl
xor
xor
dec
xor
push
std
jo
call
add
add
incl
mov
std
movsl
stos
add
add
cltd
add
sbb
mov
pop
std
imul
mov
decl
add
add
add
add
add
add
xor
mov
ja
call
or
or
add
gs
dec
add
cld
dec
clc
mov
std
push
sbb
add
incl
cld
out
cmp
aam
jbe
pop
add
add
incl
cmpsl
decb
neg
cmc
scas
cmc
stc
pop
pusha
add
add
pop
sub
add
clc
aam
cmp
roll
jo
lods
pop
lock
das
push
inc
add
pop
ljmp
xor
scas
mov
mov
dec
add
aad
jge
popa
std
sub
fbstp
xchg
mov
call
popf
xor
in
std
imul
cli
inc
je
std
cmp
icebp
cld
mov
enter
cmp
jbe
cs
mov
in
addl
add
mov
pop
add
incl
adc
add
arpl
add
mov
out
push
call
sti
enter
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
incl
sti
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
xchg
add
add
je
or
xor
mov
or
pop
iret
push
les
dec
push
mov
incl
add
decb
cld
and
shl
mov
out
fsubrp
sub
ljmp
mov
mul
clc
insl
cmc
inc
cmc
jo
cltd
sti
mov
add
adc
jmp
pushl
pusha
or
or
or
push
fimuls
lahf
pmaxub
mov
or
add
addl
add
push
add
clc
sub
icebp
call
aaa
call
sub
add
add
mov
pop
cmc
dec
testb
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
pcmpeqd
dec
adc
adc
xchg
adc
adc
adc
adc
adc
adc
push
call
jae
dec
sete
add
aaa
sti
psubq
sti
imul
negb
repz
out
mov
fsubrl
faddl
jge
xor
in
push
incb
sti
and
xlat
cld
test
push
or
adc
ds
and
adc
adc
sbb
xchg
test
or
or
test
hlt
cli
repnz
adc
ljmp
in
into
out
loop
iret
into
shl
fcomp
loopne
repnz
lcall
jp
add
xor
test
sbb
pop
sub
outsb
push
bound
ja
clc
ljmp
adc
pop
or
push
push
or
pop
add
ljmp
mov
repnz
out
lahf
in
jae
je
jmp
in
ljmp
mov
add
and
out
adc
jle
add
or
pop
or
xor
sbb
cmp
sbb
push
dec
and
adc
or
cmp
iret
add
add
add
add
icebp
mov
jmp
out
shr
mov
mov
pop
fidivrl
test
stc
jo
or
adc
adc
adc
cmpsb
push
xor
repz
fstpl
lods
sbb
lods
incl
or
add
incl
stc
jns
loope
lret
std
push
clc
jbe
add
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
in
call
hlt
daa
pop
sbb
fimuls
jecxz
into
adc
adc
ds
adc
adc
push
daa
adc
in
jg
adc
or
rolb
cld
enter
xchg
clc
imul
jne
es
lcall
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
cld
js
lds
cld
lcall
adc
lahf
adc
imul
adc
fcomip
pushl
adc
add
clts
sub
cli
in
xor
cld
idiv
loopne
cld
sti
add
repz
das
testl
fsubrp
xchg
out
insb
out
mov
es
aam
std
and
loop
xchg
icebp
add
adc
mov
das
xor
leave
adc
adc
add
das
js
push
scas
adc
lret
adc
adc
mov
ljmp
stos
std
mov
stc
or
stc
sbb
push
sbb
out
jb
inc
repnz
lcall
ljmp
jmp
adc
rcr
stos
ljmp
adc
push
pop
push
call
loop
popa
adc
xchg
adc
sbb
std
or
pop
femms
or
incl
and
or
xor
inc
cmp
mov
xlat
sti
outsl
imulb
imull
out
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
outsb
aam
fdivrl
add
call
inc
adc
mov
adc
pop
cmp
cli
adc
mov
mov
adc
decl
push
adc
or
or
std
mov
test
aam
movsl
std
cmpsb
pop
hlt
sti
mov
repz
mov
xlat
loopne
fldl
aad
ror
xlat
popf
mov
repz
or
adc
push
lock
insl
and
pushl
adc
pop
sub
inc
sbb
push
xor
or
aaa
rclb
and
or
int3
pop
in
add
loopne
lcall
or
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
sub
jg
xchg
mov
mov
and
or
stos
pop
aad
bound
lds
adc
cli
jmp
jno
inc
btr
push
adc
orb
sbbb
xchg
popl
xor
sbbb
pusha
push
arpl
or
push
rolb
add
stc
and
push
cld
jmp
pop
out
loopne
fstps
push
push
ret
mov
out
and
pop
ljmp
mov
sbb
add
je
decl
out
rorb
stc
push
inc
adc
pop
mov
ret
or
incl
or
or
add
lock
mov
xor
int
sti
insl
hlt
fbld
xchg
loopne
jp
or
adc
sbb
fbstp
pop
adc
xlat
or
push
mov
and
fcomip
jg
scas
inc
call
add
test
xor
mov
dec
incl
pop
or
add
stc
cmp
cmp
test
lds
jb
and
call
clc
or
inc
or
or
adc
sbb
sbb
adc
xchg
decl
push
push
sub
mov
add
add
add
or
or
or
or
mov
incl
mov
fucomip
shl
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
pmulhuw
decl
xchg
cmovge
stos
or
psrlw
adc
iret
or
packssdw
call
shr
push
pushf
add
add
or
mov
mov
jp
nop
add
ret
out
push
loope,pn
fscale
leave
decl
movsb
into
outsb
out
cld
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
icebp
pop
push
icebp
pop
call
add
push
add
add
mov
pop
or
jle
xor
jbe
adc
adc
adc
repz
cld
pushl
fwait
jecxz
fsubl
les
aad
icebp
cmp
adc
push
adc
scas
clc
add
xchg
add
add
sar
mov
add
std
pop
lcall
push
test
pop
adc
mov
dec
or
lods
in
in
jg
jge
xchg
fsts
int3
mov
jmp
jmp
sbb
pop
push
and
and
pop
test
mov
add
sub
stos
dec
add
or
fbld
paddw
std
mov
or
or
sbbb
decl
popa
lods
out
jecxz
loopne
fsts
div
mov
call
and
sub
add
sti
jmp
in
inc
repz
rorb
gs
fisttps
xor
add
push
add
rorb
or
or
decl
or
add
imul
out
fmul
push
leave
pop
shlb
adc
jmp
ljmp
pop
add
call
and
clc
paddd
leave
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
into
push
mov
jmp
loop
sbb
dec
sub
pop
hlt
add
fldenv
ret
cmc
push
xchg
neg
test
dec
sub
das
xchg
ss
clc
adc
sbb
inc
loop
lock
stc
loop
and
out
faddl
cmpsl
add
pushf
inc
push
ljmp
jmp
mov
out
dec
or
xchg
add
fst
inc
sar
cmp
inc
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
mov
std
clc
aam
pop
loope
lock
cli
ljmp
cmp
ss
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
and
or
add
mov
sar
mov
int3
pop
ret
push
iret
repnz
sub
jmp
inc
xor
loope
sub
cmc
push
add
loope
fistl
and
ljmp
rclb
imul
adc
adc
xor
mov
dec
movsb
xor
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
inc
mov
cmp
push
call
jg
fstpl
fcoms
pop
add
and
mov
les
cltd
adc
adc
push
clc
and
jg
test
sbb
push
inc
push
mov
in
fcmove
shrb
leave
push
mov
dec
fiaddl
clc
adc
cwtl
es
xor
cmp
in
inc
xor
cmp
dec
clc
sbb
or
fucom
fdivrs
ja
and
jle
or
pop
daa
in
xchg
and
and
lcall
adc
or
jecxz
stc
leave
les
popa
jmp
add
push
icebp
jmp
loope
in
test
xor
cmp
call
out
inc
out
loop
in
fists
xlat
stc
fimull
cmp
jmp
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
and
mov
mov
call
xor
test
inc
ret
ja
pop
fiadds
arpl
or
das
ret
inc
inc
inc
incl
dec
sub
push
aas
or
adc
mov
fcmovbe
rcr
fldenv
and
mov
sub
imul
pop
or
sti
stos
call
ror
ret
aaa
mov
cmp
ret
std
call
and
xor
inc
aam
xor
pop
inc
pop
mov
jo
push
incl
cld
call
pop
iret
mov
fiadds
icebp
adc
jb
sub
xor
add
pushl
or
sub
push
idivb
insb
ljmp
out
ret
or
into
lock
ljmp
dec
push
nop
adc
cmp
inc
mov
out
subl
clc
jg
add
lods
repnz
xchg
mov
roll
mov
add
adc
sbb
inc
aaa
das
xor
es
ja
int3
sti
sub
and
mov
call
mov
jne
sub
sahf
sbb
and
pop
ds
xor
push
xor
decl
lock
inc
incl
adc
rcr
aam
iret
push
shlb
xlat
loopne
ljmp
add
xor
xor
cmp
xor
mov
cmc
insb
in
aad
enter
mov
mov
test
adc
daa
push
sub
cmp
call
or
cld
mov
ljmp
jo
dec
xlat
mov
mov
pop
ljmp
xor
aaa
lret
xor
in
adc
ret
mov
sub
inc
icebp
addb
cs
ds
dec
push
sub
inc
hlt
lret
call
mov
sbb
add
outsl
mov
jge
inc
pop
jg
lods
sub
ljmp
xor
bnd
xor
in
jns
ror
stos
ret
ds
mov
lcall
and
mov
lret
xor
call
add
leave
out
push
call
in
shr
into
pop
iret
call
xlat
fsubl
and
sahf
ss
cmp
cmp
mov
repnz
dec
push
mov
cmc
mov
rol
leave
out
sarb
sbb
sbb
sub
and
fsubrs
ja
xlat
push
mov
stc
xchg
cmc
shl
mov
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
lcall
adc
cmp
xlat
push
sti
or
cmc
es
int
mov
int3
mov
fisubrl
pop
pop
sub
stos
aas
scas
cmp
ficompl
ret
scas
xor
std
stc
cmp
repnz
addr16
fiadds
loopne
fsubl
lcall
stc
push
psllw
fsubrl
pop
aaa
fildll
leave
sbb
dec
icebp
shl
sbb
dec
scas
outsl
mov
shl
add
adc
aaa
std
inc
test
sub
sbb
or
cld
ja
stos
loop
ljmp
mov
xlat
neg
lcall
ja
std
push
out
dec
ss
push
cmp
lcall
stc
pop
out
fstps
int3
mov
mov
jg
arpl
ljmp
in
movsl
cmp
inc
je
mov
js
sbb
jb
test
imul
fmuls
aad
dec
rcll
out
add
sbb
sub
fidivrl
inc
xchg
jg
adc
repnz
loopne
iret
xor
mov
scas
and
incl
xor
inc
or
dec
pusha
inc
xchg
jmp
pop
adc
add
out
jmp
filds
or
loop
leave
test
fcmovne
insb
shlb
in
ljmp
sub
cmp
inc
push
push
xor
adc
cmc
pop
loope
iret
pop
mov
mov
imul
addl
xor
fcomip
incl
inc
mov
popf
sub
mov
mov
cmpsl
jmp
arpl
cmp
push
shll
adc
inc
aad
out
add
aaa
sub
xor
aaa
out
ss
pushl
sbb
or
int3
adc
in
mov
mov
mov
cmp
das
xchg
sub
jg
incl
inc
fdivs
or
mov
daa
out
sub
repz
xlat
popf
flds
call
xlat
and
jb
jns
pop
mul
push
xchg
push
call
cmp
inc
adc
std
or
or
insl
loope
fimull
mov
stc
xchg
adc
outsl
call
xor
test
ss
push
mov
push
notb
fmul
dec
loope
outsl
cli
inc
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
fdivr
lcall
repz
into
or
mov
test
mov
jnp
lds
jns
call
pop
mov
cs
in
aam
int3
push
repnz
or
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
pop
and
int3
roll
mov
les
ja
pusha
sbb
mov
pop
sbb
mov
fldl
es
or
push
iret
jo
sbb
fs
data16
js
and
fcomip
fistpll
sahf
inc
addr16
jo
xor
adc
aad
int3
add
inc
cmp
mov
sti
mov
jb
mov
dec
out
lea
mov
repnz
std
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
or
stc
xor
sub
cli
incl
cmp
cs
sbb
or
aad
into
in
mov
leave
mov
pop
call
pop
pop
dec
sub
fldl
dec
sbb
xor
jmp
loop
mov
rcll
ljmp
jmp
out
xor
popa
aaa
test
add
rcrb
fdivrp
mov
test
cs
push
sti
push
jp
les
and
cmp
cmp
leave
int3
mov
mov
aas
cld
loopne
sbb
popa
sub
inc
cmp
call
daa
xor
mov
sub
loope
int
iret
outsb
leave
xchg
ret
test
mov
notb
outsb
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
or
icebp
incl
stos
sarb
mov
ss
mov
dec
ds
dec
dec
dec
iret
dec
decl
xor
dec
loop
shlb
shufps
lcall
mov
fistps
dec
inc
fmull
stos
pop
aam
les
pop
jmp
mov
inc
mov
stos
leave
ret
pop
loope
push
rcl
xor
inc
je
push
dec
icebp
out
cli
call
sub
adc
add
fldcw
scas
rcrb
test
decl
xor
in
ret
popa
sti
mov
pop
dec
sbb
rclb
dec
lahf
pushl
std
ds
insl
add
jecxz
lret
int
mov
loop
lock
mov
pop
std
jmp
mov
cmp
pushf
sub
sbb
and
arpl
add
popf
call
mov
lds
sbb
xchg
or
and
arpl
ret
inc
cli
dec
sbb
ljmp
imul
jae
pop
pop
mov
mov
lcall
and
das
fisubrs
test
xor
pop
inc
adc
sbb
push
xchg
sub
aam
pop
fdivrl
rorb
mov
es
mov
inc
ljmp
or
out
in
fimull
cmpb
leave
in
add
call
sub
cmp
mov
xor
filds
repnz
sahf
jmp
xchg
ficompl
out
lcall
add
cli
fistl
lret
and
xor
roll
inc
es
and
adc
cmc
clc
fchs
cli
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
ss
pop
into
xchg
cwtl
or
adc
or
cmp
fdivl
je
inc
ficomps
xchg
aam
iret
nop
clc
adc
je
or
or
aas
inc
and
fcomip
push
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
or
xorb
stos
decb
lock
ljmp
mov
rorl
cmp
push
xor
call
jecxz
fcompl
pop
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
mov
decl
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
ret
rcl
std
jg
out
aam
addr16
add
xor
sbb
enter
call
ljmp
lock
out
je
mov
dec
adc
and
ljmp
iret
inc
sub
cmp
sahf
adc
das
adc
cmpsb
xor
sbb
decb
and
xchg
fcmovnu
lret
inc
cmp
in
or
bound
mov
inc
and
sbb
mov
mov
lret
add
clc
shr
fistl
or
mov
mov
fadds
stc
mov
fwait
sub
mov
push
decl
lock
or
loopne
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
scas
push
icebp
lcall
inc
or
or
mov
or
push
inc
push
mov
xchg
hlt
repnz
sahf
ficomps
inc
iret
loopne
aam
in
push
add
push
out
and
cs
add
das
jecxz
ljmp
mov
incl
mov
sbb
sbb
and
xor
cmp
add
add
add
push
decl
pusha
cli
or
xchg
cmc
push
ds
fidivs
call
mov
aad
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
ljmp
jmp
repz
divl
adc
xor
add
jle
mov
call
or
or
incl
jecxz
fbld
xlat
fldl
ror
rcrb
pop
cld
add
pushf
jmp
sbb
push
jbe
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
mov
xchg
incl
loopne
mov
adc
pop
lods
add
call
adc
or
mov
push
jp
imul
cmp
out
loopne
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
popa
loopne
call
shrl
and
pop
push
decl
clc
repnz
out
in
ljmp
arpl
bswap
adc
push
push
aas
push
adc
mov
add
cli
shl
xchg
jg
loope
mov
dec
aad
enter
enter
out
mov
push
insl
sub
pushl
enter
dec
test
cmp
add
repnz
loopne
aad
mov
out
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
decl
and
inc
aam
jbe
jmp
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
enter
test
mov
mov
inc
and
outsl
cli
fildl
jmp
shr
ret
sbb
jmp
cld
add
sbb
sbb
sbb
and
out
imul
push
pop
cld
shr
fcomip
aam
leave
call
les
stos
sbb
xor
popf
push
cltd
cmp
push
jno
mov
jo
push
lcall
or
movsb
in
fcom
ret
out
imul
int3
pop
or
es
mov
ljmp
sbb
or
gs
rorl
cmp
cmpsl
and
sub
mov
dec
or
inc
pop
dec
outsl
push
jnp
jp
lcall
sub
lret
out
into
dec
mov
xlat
test
fsubrp
or
ljmp
lock
pop
xor
ss
ss
xor
mov
or
clc
pusha
ljmp
stc
mov
push
mov
mov
mov
add
pop
lcall
cmp
popa
inc
addr16
fwait
pop
rcll
cmp
decl
sub
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
mov
xor
cmp
pushl
push
xor
sub
and
adc
add
push
fcmovbe
pop
in
and
call
rcr
sbb
mov
cmc
inc
or
sub
jbe
mov
inc
add
mov
sbb
cmc
fdivp
iret
fwait
jo
les
cmp
lcall
cmp
imul
dec
sub
sub
cmp
fstl
incb
out
arpl
mov
xchg
leave
jp
int
insl
repz
sti
sub
adc
add
add
sbb
sbb
call
pop
repnz
xor
mov
pop
ss
or
iret
cmp
xor
dec
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
sbb
incl
js
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
repnz
dec
push
ljmp
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
pushl
std
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
popf
cmp
ljmp
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
ret
push
ljmp
test
cmp
inc
and
mov
bound
jnp
ds
xchg
xchg
decl
and
test
movsl
test
sarb
add
sub
sar
cmp
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
mov
scas
imul
add
ss
mov
std
and
in
cmp
lcall
dec
imull
mov
mov
mov
das
lcall
addr16
mov
sub
fists
bound
mov
dec
push
out
inc
cmp
pop
ds
fcomip
incl
nop
mov
jae
mov
lret
std
adc
pop
jg
insb
adc
add
ljmp
sub
jmp
cmp
sbb
inc
leave
ljmp
lods
push
ret
add
and
sbb
mov
std
clc
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
cwtl
std
ljmp
loopne
call
adcl
xor
ficomps
inc
clc
jmp
push
jno
sub
aas
cmp
xchg
es
or
enter
cmp
std
inc
dec
enter
in
add
shrb
push
inc
jmp
faddl
or
push
cli
cwtl
out
clc
out
rcrb
sub
mov
repnz
call
call
jg
shr
shl
iret
jl
sar
test
mov
or
adc
fdivrl
xor
std
and
mov
xchg
rcrb
push
fiadds
cld
decl
xchg
or
adcl
pop
jl
imul
lcall
push
adc
aaa
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
call
jge
xchg
aam
in
hlt
mov
push
cmp
push
call
pushl
in
int
lds
rolb
clc
mov
and
xor
sub
xor
and
das
adc
shr
call
inc
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
sti
rcll
xor
pushf
decl
jbe
jns
insb
fldl
sbb
mov
insl
popf
xor
jmp
xchg
inc
adc
es
or
cmp
aaa
adc
push
ss
das
enter
decl
jae
cwtl
aad
enter
sarl
lcall
loop
loopne
int
mov
cmc
leave
out
pop
xorb
insl
jg
jl
jo
inc
out
push
dec
jmp
lcall
push
xchg
mov
xchg
mov
or
and
dec
incl
cmp
stc
xor
and
loop
roll
sub
lea
lret
fisttpl
mov
jmp
repz
or
inc
insb
dec
lcall
gs
sbb
inc
pusha
and
jl
shll
test
shll
incl
sar
lcall
dec
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
inc
ds
pop
cmc
call
out
leave
and
into
push
fildll
out
clc
icebp
shl
lods
mul
adc
ljmp
sbb
and
imul
adc
and
lahf
nop
inc
hlt
inc
nop
xor
sbb
jmp
int3
out
sub
hlt
xlat
lcall
sub
daa
push
daa
lcall
lcall
pop
cmp
mov
jbe
push
or
sbb
scas
pop
jmp
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
or
jae
or
and
sub
jmp
mov
sub
jecxz
je
nop
fistl
push
enter
loope
sti
mov
decl
xchg
sub
cs
and
and
sbb
scas
lcall
out
fbstp
rclb
mov
outsl
mov
jg
jl
fstl
inc
adc
or
aas
lcall
adc
mov
cltd
and
sub
arpl
incl
incl
inc
in
dec
fcompl
int3
inc
lds
loopne
jmp
or
stos
sub
and
cmp
stos
sbb
pop
repnz
add
sti
cmp
sbb
call
add
daa
aam
call
rclb
sbb
and
adc
and
ds
jae
lods
repnz
push
cli
xor
call
das
jle
cltd
pop
xchg
add
call
fsubl
rcr
lock
dec
add
test
or
add
add
add
pop
test
or
jns
jbe
roll
mov
rcrb
hlt
mov
sbb
and
sub
sbb
mov
fsubrl
les
hlt
int
fsubr
jmp
push
adc
push
fimuls
xor
cmp
add
into
sub
int3
xor
cwtl
out
stc
pop
push
pop
pop
or
das
call
fimull
or
out
xor
sbb
push
mov
std
jno
out
ffree
loope
ljmp
xchg
add
pop
sbb
add
test
stos
andl
fisttps
sub
pop
shlb
lods
inc
aas
push
or
rol
ret
test
sbb
xlat
lock
mov
pop
jg
out
adc
aad
mov
dec
cmpsl
pop
cmp
jle
fdivr
push
add
inc
stc
ljmp
push
out
sbb
out
mov
repnz
out
fistl
ljmp
imul
cld
mov
shlb
inc
mov
fs
push
cmp
daa
push
mov
xchg
out
cli
decl
mov
cmp
iret
fcoml
push
jg
sbb
sbb
fmuls
jmp
hlt
es
sub
lret
adc
add
decl
loopne
fs
repz
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
in
fisubl
fxch
push
int
in
pop
adc
lea
pop
push
jmp
ljmp
jg
pop
int3
lret
mov
addr16
iret
add
pop
xchg
sbb
mulb
shlb
repnz
or
add
mov
loop
jb
ljmp
lcall
std
cmp
jmp
mov
fistpl
pop
aad
incl
in
cmpsb
pop
fcoml
scas
and
add
pop
out
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
sbb
adc
mov
or
rcrl
push
lret
bound
lcall
jle
sahf
sbb
sub
adc
adc
push
fdivl
enter
cld
inc
sub
fstpt
push
out
in
push
xor
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
mov
lret
jbe
testl
adc
push
add
cmp
push
dec
ljmp
cwtl
cmp
inc
and
and
or
mov
mov
mov
call
repnz
jmp
xchg
iret
in
mov
xor
fwait
pop
jmp
sub
cmp
push
inc
pop
cmovb
and
or
ljmp
add
mov
lret
sahf
in
test
jb
jb
sahf
sti
jecxz
lods
sbb
mov
dec
in
sbb
aad
scas
sub
in
int
mov
mov
pushl
cld
in
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
xor
xor
incl
inc
inc
dec
mov
or
not
in
rolb
fdivs
xor
addr16
jns
sahf
fdivrp
lcall
and
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
sub
lds
mov
xchg
rclb
loope
lock
std
add
cmp
insl
or
push
das
shlb
cmc
dec
or
adc
ds
mov
jmp
inc
dec
sub
dec
add
jmp
fldt
mov
mov
int
out
mov
adc
ret
clc
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
out
clc
jg
fsubp
fisttpl
out
shr
push
cmc
mov
inc
add
push
jmp
out
ljmp
jmp
sub
and
loop
call
idivb
mov
shrb
push
sbb
xchg
cmp
popf
inc
jge
fwait
sbb
sar
icebp
pop
incl
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
fdiv
call
clc
movsb
std
stos
add
mov
add
add
add
call
loopne
idiv
jb
or
xor
cmp
ja
insl
or
icebp
mov
fdivrp
mov
xchg
loope
stos
call
xor
xor
mov
and
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
add
jle
out
out
jmp
inc
hlt
pop
adc
cs
cmp
jbe
jg
and
filds
push
adc
dec
loop
stos
and
adc
lock
add
mov
cmp
jl
inc
ljmp
pushl
adc
pop
iret
test
push
in
js
out
dec
add
or
adc
aam
mov
sahf
out
or
jge
pop
add
add
add
cli
mov
mov
in
push
mov
inc
icebp
fldl
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
ss
call
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
in
test
jmp
xor
iret
push
xor
and
mov
imul
adc
mov
cli
mov
shl
xor
ljmp
sbb
outsl
in
lcall
outsb
cwtl
into
movsl
lret
pop
idivl
movsl
sbb
ljmp
pusha
xor
aaa
mov
mov
sbb
sub
sub
test
sub
push
fisubl
in
ljmp
insb
stc
stc
call
push
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
lcall
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
mov
imul
out
jmp
out
ljmp
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
xor
and
cmp
dec
or
pop
out
fdivp
fbld
fidivl
jecxz
call
pop
fcomip
mov
push
test
or
mov
out
dec
and
mov
out
mov
clc
mov
loope
in
in
in
xor
cli
lcall
hlt
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
lcall
push
in
pop
dec
arpl
aaa
jns
mov
add
mov
pop
enter
clc
fdivrs
out
rolb
or
mov
sbb
lcall
adc
unpcklps
mov
mov
add
sti
push
cmc
adc
push
aaa
ljmp
insb
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
jmp
cmp
jbe
add
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
add
call
cmc
push
or
adc
sbb
push
mov
adc
adc
adc
adc
rcrb
xchg
and
sbb
and
mov
ljmp
aam
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
scas
incl
adc
pop
dec
sub
jae
arpl
or
sub
pop
jmp
mov
add
pop
fsubp
sbb
push
cld
sbb
xor
sahf
and
and
daa
mov
incl
xor
loope
dec
cmc
cli
jecxz
xlat
nop
into
mov
and
iret
push
icebp
loopne
jmp
ret
out
pop
lcall
iret
add
repz
sbb
daa
cmp
call
outsb
ljmp
push
mov
ret
in
scas
sarb
test
dec
repnz
pop
or
call
and
sbb
jnp
adc
test
std
lcall
adc
out
ficomps
xchg
aam
shrb
or
jo
jecxz
popa
jmp
out
jmp
pop
out
sub
lods
repz
push
repz
jp
dec
sub
cmp
inc
push
inc
xchg
cmp
and
and
ljmp
enter
jg
mov
rolb
jno
imul
and
in
xchg
jecxz
in
adc
call
cs
jbe
xchg
pxor
clc
ljmp
out
xor
and
xlat
iret
fldcw
mov
shl
out
out
icebp
add
or
pop
loopne
clc
cli
pop
repz
out
and
daa
cmpsb
es
sub
pop
cld
incl
cli
cmp
inc
flds
enter
shl
addr16
outsl
cli
mov
sbb
and
hlt
jbe
out
adc
or
cmp
add
test
ja
sbb
hlt
sbb
loope
and
mov
cmpsb
loopne
ficomps
loopne
das
shl
sahf
add
or
fimuls
inc
or
add
sub
adc
mov
adc
sbb
vmwrite
and
mov
pop
clc
int3
ljmp
dec
in
in
icebp
sbb
add
push
imul
sbb
pop
inc
idiv
out
testl
adc
adcb
or
push
jecxz
push
fisttpll
shl
incl
call
adc
js
xchg
and
push
jns
mov
mov
push
in
loope
in
icebp
cmpsb
push
and
push
es
xchg
add
out
mov
loopne
xlat
dec
into
call
data16
in
roll
nop
adc
and
pop
and
sbb
jg
sbb
cli
sub
shl
repnz
mov
jmp
sbb
std
pushl
ljmp
into
and
lahf
loope
out
xchg
add
adc
incl
inc
cli
es
je
mov
aad
aad
loope
cmp
lock
fidivs
hlt
out
sub
push
stc
push
aas
aas
shrb
push
hlt
jp
cmp
lret
fmul
sbb
push
icebp
lcall
scas
xlat
and
push
jecxz
int
imul
call
ret
decl
adc
and
daa
push
and
adc
cmp
call
aad
mov
adc
dec
add
push
aas
sbb
adc
insl
bnd
mov
cmpsb
mov
mov
fldln2
push
add
mov
dec
test
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
sbb
add
jae
and
aam
add
add
adc
sbb
loop
aaa
or
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
int
ljmp
ljmp
lcall
arpl
bound
cmp
sub
sti
cld
jmp
fcoml
mov
test
gs
adc
hlt
jb
into
push
fiaddl
jbe
pop
lret
add
fcomip
jg
add
or
scas
sub
lea
rcrb
push
adc
pop
icebp
ljmp
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
dec
repnz
out
xor
mov
hlt
ftst
xchg
clc
add
movhps
mov
lret
inc
dec
inc
inc
xor
aad
call
xchg
pop
xchg
or
aam
int
pusha
frndint
sub
mov
fs
adc
or
or
push
call
jg
std
push
pop
sbb
nop
sub
rcrb
mov
in
fcmovnu
xor
pop
hlt
fcomip
call
gs
add
in
loop
sarl
jmp
and
push
jp
mov
sbb
add
lock
shrb
or
incl
add
pop
iret
js
lahf
add
or
sub
testl
insl
sti
xchg
lock
fidivrs
out
fldl
mov
jg
inc
ss
dec
pop
push
repnz
cmp
fucomip
nop
or
mov
cwtl
iret
std
loop
testb
push
push
decl
or
out
fisttpll
repnz
or
and
mov
imul
mov
lcall
out
mov
lret
sbb
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
in
and
sub
or
sbb
or
ds
cmp
push
mov
orl
adc
stos
enter
into
inc
fldenv
mov
push
adc
call
adc
add
xor
repnz
jp
or
inc
repz
or
and
ljmp
daa
inc
sbb
pop
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
ljmp
adc
mov
mov
dec
sub
push
dec
or
add
ljmp
cmp
pushl
mov
out
push
adc
ret
cli
daa
cmpsl
cld
push
add
jg
aaa
adc
rorl
or
pop
testl
incl
loop
loope
lock
popf
pop
sub
pop
mov
incl
or
test
and
adc
mov
or
xchg
sbb
or
sbb
mov
adc
decl
int
dec
clc
sbb
push
lock
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
in
out
lock
and
sbb
sbb
add
cld
push
std
fcomi
cmp
iret
addr16
pop
daa
fcompl
add
adc
xor
sub
call
pushf
or
jbe
in
in
out
repnz
es
or
adc
or
aaa
std
cli
std
fdivp
test
push
in
in
jmp
add
push
std
or
inc
ljmp
clc
stos
and
rclb
and
xor
call
stc
lahf
add
sub
pop
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
mov
xchg
incl
cmp
daa
sbb
push
sbb
sub
add
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
incl
out
stos
mov
std
dec
or
sbb
sti
sbb
mov
addr16
push
cli
or
or
add
clc
or
jl
mulb
jo
out
lods
out
mov
mov
mov
jmp
cmc
push
imull
call
add
fs
cs
xor
das
in
sub
and
xchg
pop
cmp
pop
icebp
out
fists
fcomi
out
repnz
fwait
pop
mov
lcall
rclb
or
adc
inc
sbb
sbb
pop
fstps
insl
adc
decl
lcall
jmp
insb
stc
add
enter
inc
incl
cli
lcall
test
shl
inc
ror
leave
in
iret
or
sbb
inc
ret
inc
subb
pop
loopne
cwtl
mov
stc
sarb
fldcw
or
testb
push
adc
or
cld
mov
add
pushl
add
pop
xchg
sbb
adc
or
std
xor
out
mov
div
xchg
hlt
decl
add
clc
stc
out
jmp
dec
out
shlb
std
jmp
dec
jecxz
jmp
mulb
and
cs
xchg
sub
and
jp
loopne
push
sti
out
clc
decl
out
mov
loop
jecxz
push
add
pop
mov
add
std
sbb
mov
icebp
pop
out
push
repnz
cli
adc
lahf
sbb
push
sbb
mov
decl
mov
mov
xchg
std
in
dec
testl
lcall
lock
shr
jecxz
ffree
loopne
out
sar
add
add
add
incl
int3
or
adc
add
cli
imul
adc
call
sbb
inc
push
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
add
incl
sbb
sbb
adc
or
add
jg
mov
cmpsb
add
fcoms
lcall
adc
push
mov
add
fs
outsb
in
loop
ficoms
call
in
repnz
pop
outsb
push
adc
sbb
or
add
test
incl
sub
in
fstpt
in
stc
sar
pop
cmpsb
ljmp
daa
imul
cli
js
lock
call
insl
stc
inc
add
es
mov
out
cwtl
adc
sahf
notb
jg
out
push
out
dec
sbb
cld
xchg
add
or
push
mov
das
sbb
pop
cmp
and
mov
add
out
in
in
out
sub
rcrl
add
push
or
or
test
sbb
lcall
jg
test
ja
mov
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
sub
sbbl
imul
daa
lcall
cmpb
divb
jo
lret
cmc
pop
cli
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
decl
movlps
sbb
sbb
in
or
mov
xchg
out
mov
adc
test
std
mov
fwait
ljmp
pop
and
or
mov
iret
loop
loopne
out
jmp
mov
stos
icebp
adc
leave
clc
daa
push
push
or
or
adc
sbb
push
pop
or
ljmp
clc
adc
out
jmp
out
or
mov
repnz
mov
cli
movsb
in
add
jp
or
call
pop
out
add
jmp
sub
cmpsl
add
dec
add
imulb
or
push
sub
out
add
jg
clc
gs
ljmp
ds
cltd
clc
push
call
inc
fwait
add
add
mov
lock
int3
jecxz
in
mov
mov
adc
inc
pop
xchg
sbb
adc
mov
enter
xchg
out
fyl2x
pop
repnz
clc
mov
push
add
jge
call
divl
clc
sub
clc
cltd
std
cmp
cld
jno
or
call
or
adc
sbb
sbb
adc
inc
adc
incb
decl
stc
outsl
cmc
mov
sub
out
aad
mov
jmp
xchg
cli
scas
stc
js
mov
or
ljmp
inc
icebp
or
out
push
cmc
lcall
sbb
and
incl
inc
and
or
add
notb
out
ljmp
pop
clc
xchg
jnp
inc
add
add
or
jle
and
mov
repnz
add
popa
add
sbb
push
lcall
sub
and
js
push
jmp
in
loopne
loop
jecxz
in
ljmp
clc
or
add
decl
sbb
test
xchg
fdiv
cmp
lcall
cmc
mov
pop
dec
or
repz
adc
adc
sbb
lcall
rolb
test
inc
neg
bnd
hlt
out
imul
mov
repnz
out
mov
cld
in
pop
ret
cmc
dec
add
lcall
shr
push
sbb
xor
mov
sbb
adc
jle
jnp
aaa
sbb
add
clc
adc
ret
out
mov
in
push
out
fucomi
fucomp
mov
lock
std
inc
add
cli
adc
addr16
adc
or
jmp
mov
in
repz
mov
lcall
push
push
sbb
mov
add
adc
sbb
in
loop
fimuls
mov
sbb
clc
in
add
add
add
xchg
adc
movhlps
push
fnstcw
or
push
xchg
or
jmp
aas
pop
loopne
iret
sahf
add
mov
imul
repnz
lock
outsl
repnz
inc
testb
lcall
xor
or
and
jo
std
or
pop
lods
add
cli
push
icebp
and
jne
jmp
mov
hlt
jge
mov
or
adc
clts
cmp
fdivr
int3
imulb
pop
in
dec
cmpsb
imul
in
icebp
mov
cli
or
es
bound
adc
push
add
sti
jl
lods
repz
sti
xchg
icebp
lock
jnp
std
repnz
aam
adc
adc
adc
outsb
cli
jg
or
stc
stc
idivl
clc
sar
stc
stos
decl
mov
push
pop
and
dec
push
mov
sti
popa
stc
das
test
in
jmp
sub
aad
pop
push
add
or
adc
fistpl
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
fwait
push
lock
cli
jmp
cmpsl
fwait
push
xor
xchg
dec
cmp
shr
inc
cmc
add
pop
or
inc
mov
xor
lds
nop
push
push
or
push
incl
pop
xchg
pop
incl
cmp
jb
call
imulb
test
icebp
out
jle
repz
add
outsb
pop
add
mov
cli
lock
mov
out
mov
cmc
cld
mov
cmpsb
clc
or
pop
xor
adc
sbb
pushf
pop
std
dec
pop
out
jge
pop
repz
call
cld
pop
cmp
sti
inc
sti
das
cld
icebp
cli
inc
divl
mov
idivb
or
or
sbb
pop
sbb
adc
decl
stc
shl
psllw
out
test
sbb
hlt
mov
cli
sti
jp
test
mov
jbe
sahf
cmp
int3
add
add
loopne
sub
lock
aaa
in
jnp
stos
in
out
xchg
testl
icebp
fcomip
jle
inc
sbb
dec
and
in
adc
dec
std
pusha
hlt
sub
pushl
in
call
movl
rolb
movb
ljmp
idiv
lcall
clc
jae
insl
pop
add
out
sbb
and
sbb
inc
pmulhuw
decl
lock
icebp
lock
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
add
std
test
in
shl
jmp
mov
add
xor
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
mov
cmp
jecxz
jle
leave
pop
jp
dec
imull
jle
call
inc
ljmp
insl
sti
sub
adc
faddl
inc
cld
mov
imul
out
adc
sub
cli
idivb
ds
or
sbb
ds
jmp
add
lcall
repz
in
cli
psubq
clc
jbe
sar
xchg
stc
pop
mull
out
inc
repnz
ljmp
or
xor
sbb
or
lods
test
out
test
jg
repz
cli
add
pop
adc
xchg
gs
cmp
dec
divb
repnz
add
cld
jmp
cli
inc
add
pop
or
rclb
xlat
jnp
rorl
leave
add
add
sti
lahf
testl
xchg
add
adc
mov
lret
adc
adc
push
mov
cli
dec
repnz
or
sti
in
lods
lock
cld
das
shlb
inc
negb
mov
inc
cmc
iret
stc
push
cld
pop
jg
lret
push
ret
cmpsl
sbb
sbb
lcall
mov
cmp
stc
shr
filds
fsubrl
out
out
iret
or
push
call
into
adc
push
dec
push
mov
jle
push
clc
sub
sti
mov
push
out
sub
push
adc
or
fld1
shl
lcall
pop
jecxz
jmp
hlt
push
std
or
adc
or
loopne
out
mov
sar
xchg
adc
push
imul
into
divl
cmc
das
bnd
pop
incl
dec
stc
push
stc
incb
or
or
push
push
ja
fcomip
dec
push
int
mov
push
repz
jmp
dec
fisubl
out
lock
stc
push
add
sbb
pop
adc
pop
or
push
ljmp
sbb
dec
add
lods
push
and
jp
or
incl
call
dec
in
jmp
or
scas
cli
add
or
pop
sbb
loop
lea
pop
add
std
or
scas
repz
mov
cli
push
jle
sbb
add
sbb
idiv
cwtl
cld
movsb
cli
cmp
mov
rorb
pop
or
decl
movhps
mov
push
cli
outsb
repnz
loopne
fiaddl
in
out
fs
daa
push
roll
rcrl
or
pop
daa
fisubs
and
sbb
cmpb
jge
stc
lock
cli
addl
mov
insl
mov
fdivp
repnz
jmp
movsb
loope
in
dec
filds
dec
push
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
pop
pop
sub
add
add
add
add
leave
add
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
sar
add
adc
adc
imul
lcall
add
in
fnstsw
jno
lods
fmull
clc
cmp
push
setno
mov
sbb
jo
push
adc
or
cmp
std
push
notb
sar
mov
insb
add
and
dec
cli
shl
rcll
loopne
mov
in
or
inc
out
lcall
pop
fcomip
jg
add
adc
xchg
sbb
sbb
push
mov
or
decl
sti
sahf
divb
in
push
jmp
in
out
jo
enter
jg
mov
add
jno
pop
or
les
or
or
fiaddl
pushl
mov
in
ljmp
movsb
cmp
push
inc
sti
mov
or
adc
adc
decl
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
or
add
jmp
mulb
in
jo
loop
movsl
aad
aad
fldt
sti
ret
add
in
daa
pop
sub
ljmp
shll
decb
mov
fildll
aam
add
sti
inc
std
jbe
loop
stc
pop
negl
and
and
mov
mov
ljmp
mov
and
and
and
and
add
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
in
stos
mul
std
outsl
jp
add
adc
dec
pop
mov
jecxz
mov
aaa
pop
add
add
push
pop
or
jmp
out
mov
ficoms
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
incl
push
inc
adc
or
movb
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
sbb
ljmp
lcall
and
mov
sub
pop
fcoms
pop
push
pop
add
mov
jecxz
loopne
fists
cmp
dec
clc
loopne
loop
out
hlt
dec
cli
sar
add
loopne
incl
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
rorl
add
cmp
neg
out
dec
jmp
jmp
ljmp
icebp
lock
decl
adc
cld
ret
sub
nop
push
mov
push
cmove
pop
icebp
aas
adc
push
test
sbb
sbb
sbb
adc
jg
sahf
out
adc
call
sub
add
repnz
test
xor
mov
or
mov
insl
adc
ret
js
call
fimull
ljmpw
or
mov
fcoml
in
in
push
add
mov
pop
xchg
push
js
xchg
int
xchg
js
mov
iret
or
mov
stc
inc
inc
add
push
repz
clc
in
lods
std
xchg
lods
incl
fildll
sti
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
mov
scas
cli
sbb
sbb
sbb
dec
push
jg
ds
push
cmc
decl
imul
jmp
incl
testl
add
lcall
sbb
push
mov
pop
fs
or
or
cmp
decl
arpl
nop
add
aad
adc
jmp
sub
sbb
mov
hlt
daa
sti
in
inc
sar
add
out
test
and
xchg
lock
add
pushl
ret
jb
pop
les
enter
or
pavgb
pop
aaa
std
mov
decb
into
out
out
jmp
cmc
pushl
inc
cmpb
sti
or
or
xchg
or
sbb
std
or
pop
or
or
push
cmp
aas
jg
lcall
or
cli
hlt
jae
sbb
icebp
sbb
cli
call
add
std
or
sub
popf
push
jns
sub
std
pop
jecxz
cs
sti
ds
dec
notl
repz
repnz
jg
ja
ljmp
dec
imul
adc
fucomp
in
lock
sub
lcall
add
scas
sbb
aam
andl
and
sbb
or
add
std
push
div
repnz
lods
out
imul
add
dec
jmp
in
mov
cmpsl
in
pop
in
mov
fcomip
inc
sbb
jp
rclb
or
dec
sbb
decl
and
sbb
rorl
lcall
stc
scas
cmc
mov
insb
pop
hlt
push
ret
lock
mov
in
mov
cmc
aad
data16
hlt
or
adc
lock
pop
sbb
push
add
adc
xor
outsb
or
adc
loop
jecxz
mov
shll
push
aad
fst
out
repz
std
movl
sbb
and
and
test
mov
adc
xchg
mov
nopl
mov
dec
add
imulb
adc
jmp
ss
stc
fisttps
loop
lret
call
cld
in
dec
repz
movsb
adc
mov
outsl
and
mov
out
clc
inc
sbb
or
ds
outsl
hlt
dec
out
and
pop
out
fcomip
mov
xchg
ljmp
xlat
clc
repnz
mov
sbb
push
sbb
sbb
repz
add
mov
adc
cli
frstor
loop
mov
out
in
jne
fdivrp
cmp
pop
or
or
push
out
inc
jns
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
or
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
jmp
sbb
scas
sbb
sbb
sbb
push
sbb
adc
add
ret
jg
decl
jge
sub
xchg
call
sbbb
icebp
lret
testb
add
bound
jg
or
adc
adc
unpckhps
enter
aas
add
pop
rorb
ds
mov
mov
jg
lods
xchg
jg
mov
xchg
out
call
add
lock
icebp
and
xchg
cli
mov
or
pushl
sbb
sbb
stos
push
adc
minps
push
xchg
xchg
std
arpl
push
test
stos
ret
out
sbb
add
cmp
jg
xor
pop
jmp
roll
or
in
out
mov
outsl
outsb
pushf
push
mov
aad
scas
or
or
nop
scas
xchg
add
add
aam
ljmp
fdivs
fwait
std
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
negl
sub
ja
add
cld
std
ds
add
add
or
or
or
pop
push
push
push
and
movl
mov
inc
sti
lret
mov
repnz
add
jp
push
jmp
scas
cli
cli
out
sbb
cli
mov
cld
decl
rclb
stos
adc
adc
adc
mov
or
or
or
lock
mov
jbe
movsb
imulb
push
out
cmp
sub
out
ja
scas
push
pop
notb
je
cmp
adc
pop
lock
sbb
sbb
sbb
clc
mov
mulb
out
lock
pop
in
xor
cmp
std
jecxz
loop
loop
in
call
cs
int3
add
dec
sbb
and
test
decl
aaa
push
mov
mov
imulb
ljmp
add
push
jecxz
cmp
in
jp
ss
in
ljmp
cmc
fs
jg
adc
jo
int3
and
les
cmp
push
rcrl
adc
or
push
rcl
jg
out
jp
cwtl
ljmp
cmp
pushf
out
call
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
decl
daa
jge
dec
pop
pop
pop
repnz
dec
int3
in
das
incl
loopne
loope
outsb
out
jmp
mov
js
vmovapd
insl
mov
mov
adc
pop
adc
and
pop
add
xchg
and
dec
adc
jmp
cwtl
clc
and
mov
jmp
mov
sub
cmpsb
ficoml
push
jecxz
in
jmp
jg
das
push
jnp
or
push
rcll
sti
push
mull
fsubs
jl
sbb
sbb
adc
mov
pop
add
mov
jecxz
loop
jecxz
loop
loope
in
dec
jmp
in
into
icebp
xor
cmp
decl
adc
sbb
push
pop
xchg
sbb
sbb
add
leave
std
stos
idivb
jmp
dec
fldl
loop
out
jmp
out
xchg
testb
add
ljmp
adc
adc
adc
adc
adc
call
jecxz
lcall
or
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
mov
incl
ja
jle
scas
out
pslld
lcall
lods
fadds
icebp
cmpb
adc
mov
loope
jmp
and
adc
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
mov
ljmp
push
std
xchg
mov
add
adc
or
or
or
pandn
call
outsl
adc
adc
adc
or
jg
xchg
stc
xor
cmc
jmp
jmp
push
aad
repnz
ljmp
rolb
or
or
lock
decl
add
adc
push
or
inc
or
or
or
or
or
add
dec
cld
mov
in
repz
pop
jmp
pop
in
mov
push
repz
pop
ja
call
mov
stc
mov
mov
xchg
add
add
incl
cld
adc
sbb
and
pop
adc
inc
add
push
jns
xor
inc
lock
mull
jne
dec
negl
dec
testl
push
add
mul
sti
and
decl
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
or
push
add
clc
js
mov
hlt
push
cmc
cltd
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
testb
stc
cmp
sbb
call
std
or
ret
adc
push
bound
pop
xchg
add
std
jb
jg
imul
cmc
in
icebp
shl
gs
icebp
out
jmp
mov
dec
in
fucomip
mov
icebp
outsl
jmp
es
add
xor
decl
loopne
mov
es
sbb
sar
mov
xchg
clc
adc
out
out
in
out
jmp
add
xchg
in
xchg
out
inc
mov
sub
and
testl
pusha
pop
ret
cld
lcall
add
add
cmp
es
adc
std
in
cmc
mov
jmp
loope
dec
in
jmp
cmp
mov
push
xor
xchg
jg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
stc
push
dec
push
nop
adc
fcomip
decl
les
mov
cmp
xchg
testl
call
icebp
in
in
out
mov
mov
inc
out
mov
ljmp
jp
push
sub
push
or
adc
sub
and
lock
sbb
cmpsl
hlt
or
in
jae
das
clc
fucom
fsts
xor
inc
loope
in
out
in
fdiv
xor
sub
and
fcomi
aas
fneni(8087
or
into
sbb
and
es
daa
clc
call
andb
sbb
adc
mull
out
push
fcomip
ljmp
loop
fucomp
fldt
loope
out
jmp
mov
xor
cld
in
test
jle
or
adc
sbb
push
mov
sbb
pop
std
ljmp
xchg
in
mov
mov
adc
rcr
jmp
out
jmp
insb
repz
cmpsb
mul
clc
popf
stc
pop
sti
pop
shrb
mov
adc
lcall
and
xchg
daa
sub
sbb
sbb
aam
lock
in
fildll
dec
mov
cld
fstps
js
stc
and
lcall
or
cmovno
std
adc
adc
test
mov
push
adc
adc
adc
adc
or
clc
mov
jecxz
sti
cmc
xor
bnd
loope
fnsave
aaa
fdivl
insb
out
out
jmp
adc
mov
push
in
popf
jg
fcomip
and
sbb
mov
lods
push
mov
std
sahf
sti
in
cli
sar
ljmp
repnz
jno
test
cmp
ljmp
mov
pushl
into
add
push
popf
or
or
or
imul
add
pushl
clc
sar
dec
div
stc
daa
add
add
add
add
mov
push
sti
fcomip
push
popa
lock
mov
clc
lock
or
mov
outsl
or
xor
aas
adc
out
testb
incl
cli
in
hlt
sbb
fucomip
xor
jmp
out
push
push
cld
add
pop
inc
or
pushl
adc
or
or
add
adc
inc
cld
aam
dec
add
mov
or
push
add
cld
jecxz
add
clc
inc
cli
incl
lock
cmc
inc
stc
push
sub
repz
call
outsl
clc
repnz
adc
cmp
adc
punpckhwd
or
call
sar
xchg
negl
testl
cmc
enter
lahf
repnz
out
in
fwait
mov
call
loop
jecxz
cwtl
in
div
sbb
sub
lock
mov
cwtl
in
sbb
and
and
and
and
and
inc
or
lcall
std
test
jmp
jmp
pusha
push
jo
pop
outsl
clc
addr16
pop
cld
adc
scas
clc
sti
sahf
cli
mov
cs
add
dec
or
adc
pusha
sbb
sbb
and
and
adc
jg
lock
clc
xor
adc
sbb
cmc
loop
jecxz
jg
ret
out
scas
cmc
cld
cmp
mov
or
or
or
inc
fcomip
incl
or
or
cmp
or
adc
out
add
mov
push
stos
add
stc
adc
pop
ljmp
call
loopne
loop
in
jmp
int
or
popa
std
inc
std
aad
aaa
cld
in
sti
cli
clc
push
neg
add
pop
test
xchg
jg
cli
or
push
or
push
push
adc
adc
cmp
fistl
jl
cmp
aad
adc
xchg
cmc
push
out
mov
mov
xor
push
jbe
das
sti
jb
das
js
jg
add
push
pop
aad
pop
mov
aas
mov
mov
loopne
lea
inc
add
pop
inc
or
or
or
or
outsl
ds
cli
mov
pusha
push
lock
cmp
cld
push
popf
icebp
xchg
cmc
pop
cli
outsl
mov
loopne
push
aad
das
clc
dec
adc
adc
stos
or
in
add
add
add
jg
or
ret
cld
insb
jg
add
add
add
mov
push
std
insb
data16
in
je
inc
in
fldz
aam
lcall
repz
test
add
or
adc
add
pop
mov
lods
testb
in
out
ljmp
out
clc
xchg
cld
push
add
adc
adc
adc
push
push
or
add
idiv
pop
cli
push
mov
icebp
clc
mov
pushf
push
leave
or
call
pop
push
or
pop
sbb
ret
cli
jmp
jmp
gs
movsl
cmp
jmp
lock
push
cld
inc
js
pop
adcb
xor
adc
adc
push
jl
xchg
cli
push
ret
push
stc
outsb
in
pop
push
jae
decl
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
out
pop
out
cmpsl
decl
std
push
inc
repnz
cld
dec
add
add
mov
sti
or
dec
clc
lcall
test
or
or
or
or
mov
nop
incl
cli
sti
cmp
repz
inc
in
cli
call
std
out
cli
jmp
sbb
jo
xor
jb
ret
ljmp
std
jne
or
jg
out
cli
pushl
sbb
sub
scas
and
push
sbb
stos
fcomip
push
add
lock
cmp
in
or
out
cli
push
ljmp
repnz
negl
cli
mov
ljmp
call
imul
cmpsl
or
lds
lcall
sbb
adc
mov
or
add
inc
imulb
jmp
in
inc
out
mov
mov
add
add
add
add
add
add
mov
sar
testl
adc
fiaddl
repnz
adcl
sbb
adc
push
jae
xor
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
pusha
add
or
lods
add
add
ljmp
out
mov
lcall
repnz
lahf
negl
idiv
add
add
add
mov
fbstp
or
cli
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
icebp
push
cli
jno
pop
pusha
cld
mov
std
mov
out
and
decl
sar
inc
std
leave
cld
adc
mov
add
cmc
incl
pop
adc
pop
or
or
fimuls
mov
lahf
add
in
ja
push
ds
std
sar
mulb
pop
stc
sbb
cmp
aas
xchg
scas
cli
stc
mov
and
inc
notl
clc
xor
sar
fs
ss
jo
jno
add
stos
cmpsl
pop
dec
push
or
decl
pop
adc
or
pop
xlat
add
ja
sub
xchg
ljmp
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
test
fbstp
mov
push
pop
jl
dec
add
ss
jg
rolb
push
add
add
inc
decb
push
data16
cmp
and
stos
push
pop
add
xor
sbb
mov
mov
testb
jbe
dec
or
insb
add
sar
sub
jmp
mov
jmp
add
push
jle
roll
mov
std
push
cli
pop
sbb
mov
pop
cmc
imul
clc
add
sub
jmp
dec
add
or
or
or
lock
lock
sti
xor
loop
dec
icebp
jns
fwait
icebp
or
cmp
cs
pop
loop
stos
std
inc
cmp
add
test
mov
cmp
insb
or
cs
add
add
xor
jbe
push
std
std
cmp
mov
scas
cltd
mov
add
fldl
jp
add
add
add
lcall
dec
cli
jns
xor
clc
ljmp
loope
inc
push
roll
or
or
add
jb
cli
add
stc
adc
push
out
cmc
out
or
out
aad
jmp
push
out
js
adc
sub
mov
or
test
or
lcall
movsl
or
testl
dec
or
test
add
into
sti
dec
clc
jmp
repnz
daa
lock
and
cmp
insb
xor
ds
pop
fisttps
cld
or
repnz
adc
fiaddl
cmp
pop
data16
xor
dec
mov
gs
add
mov
mov
das
std
dec
cld
stos
sti
mov
sar
xchg
out
out
mov
out
add
mov
add
ljmp
pop
adc
addb
add
cld
dec
dec
cli
andb
sti
pop
cld
xor
lcall
and
pop
add
add
add
add
add
add
add
rcr
or
add
add
fdivr
dec
jmp
mov
lcall
pop
clc
ss
hlt
or
jle
mov
in
pushl
stc
js
mov
bound
mov
mov
jp
push
aaa
sbb
ljmp
or
pop
loop
mov
add
dec
std
pop
mov
sti
clc
inc
notl
cmc
xchg
addr16
testl
stc
cmc
stc
int
stc
data16
sti
lods
cld
hlt
std
js
dec
add
dec
push
sub
rorl
xlat
jp
mov
and
out
add
inc
cld
psubw
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
dec
sbb
ljmp
xchg
rolb
inc
add
cli
std
xchg
lcall
loop
cwtl
std
or
cmpsl
add
add
das
or
or
or
or
pop
cmpsb
std
add
push
std
pop
jg
pushl
stc
insl
stc
add
mov
jmp
pop
jbe
stos
add
add
cld
test
subl
movsl
or
repnz
repz
xchg
test
es
push
add
add
jg
testl
or
rorl
or
add
add
decl
sbb
jg
cmc
aaa
add
std
ds
mov
testb
repz
or
inc
cld
repnz
bnd
js
in
xchg
clc
fcomps
into
add
push
add
daa
fimuls
push
inc
mov
pusha
or
pop
dec
push
dec
add
add
idiv
fisttps
push
mov
xor
not
divb
aas
mov
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
jg
rcrl
add
add
or
or
or
aad
aaa
cld
stos
mov
or
or
or
add
add
sub
out
clc
dec
std
sbb
cmp
mov
cli
or
incl
jb
cld
inc
std
test
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
or
incl
xchg
loop
std
dec
bound
into
loop
sbb
mov
idivb
mov
add
cs
bound
rolb
aam
add
add
das
push
and
mov
add
add
xchg
cld
cli
push
cli
sbb
pop
stc
jmp
testl
pop
clc
mov
cmpsb
push
std
stc
xchg
cli
scas
ljmp
xor
xchg
push
rorb
iret
or
or
or
or
push
mov
add
add
add
dec
out
ljmp
mov
adc
sti
movsl
cli
adcb
cli
xchg
cli
out
mov
stc
cld
pop
xor
inc
add
or
cwtl
or
addr16
js
sbb
or
or
add
add
cltd
add
sti
xor
lods
push
cld
cmp
lcall
add
xor
sub
xchg
dec
add
data16
test
jg
pop
dec
lcall
inc
add
add
call
ljmp
mov
pop
sti
aad
xbegin
mull
clc
jmp
das
lock
decl
repnz
fdivr
lods
lcall
pushf
add
add
add
jne
in
aad
mov
add
sub
cli
mov
idiv
jmp
idivl
inc
test
stc
jno
nop
sti
js
cmp
inc
add
add
push
cmc
push
sti
add
inc
mov
xor
fiaddl
movsb
xchg
ret
xchg
add
pop
sub
insb
add
loope
jb
sbb
lds
ds
sbb
sub
cld
outsl
cld
push
std
aaa
loopne
fcmovbe
pop
pushl
lret
push
movsb
add
jle
jg
add
add
add
dec
add
xchg
add
add
ret
pushl
add
adc
lcall
gs
cmp
add
mov
mov
fdivs
cmp
call
mov
mov
incl
and
test
add
add
add
add
inc
add
mov
pop
imul
sti
pop
sti
mov
arpl
sti
cmpsl
sti
loopne
fs
jle
std
mov
mov
cld
in
xchg
daa
sti
cli
push
or
dec
cli
es
pop
push
sti
ss
data16
out
incl
jmp
add
add
call
mov
sbb
push
add
mov
clc
add
fisubl
or
sbb
mov
cmp
std
jge
mov
and
push
incb
jb
popl
aam
add
incl
push
push
sub
gs
add
mov
dec
push
jle
std
push
cmp
in
sub
aas
mov
dec
pushl
cmpsl
sub
scas
xchg
dec
and
and
outsl
aad
push
pop
add
add
fidivrl
add
add
inc
add
das
add
add
daa
add
add
mov
mov
jo
inc
std
add
pop
sub
adc
jb
and
add
xchg
add
inc
in
xor
out
adc
fcmovbe
decb
cld
cltd
sti
int
xlat
stc
idiv
push
clc
cwtl
testl
divl
testb
clc
mov
cld
mov
stc
test
ljmp
or
es
or
pop
movl
insl
add
add
nop
std
aas
sbb
jmp
sti
push
sti
cmp
ds
push
lret
pusha
std
or
mov
cmp
add
ret
incl
jno
mov
clc
add
sub
add
loop
inc
add
incl
xchg
add
out
jnp
icebp
mov
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
outsl
sbb
mov
cmp
add
add
add
call
scas
add
jno
in
inc
add
add
mov
add
add
sbb
mov
adc
out
mov
mov
jmp
pop
cmp
std
jb
in
adc
pop
add
mov
and
ret
ljmp
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
and
pop
cld
jg
clc
cmp
stc
inc
cli
jo
mov
cld
std
cld
loope
inc
jmp
dec
add
add
pop
mov
jge
stos
or
or
pop
out
push
xchg
pusha
cli
decl
add
add
mov
lcall
jl
sti
and
ficomps
lcall
sti
or
std
loopne
or
outsb
loope
notb
jg
xchg
push
add
inc
push
out
add
jbe
pop
or
stos
mov
cmpsb
out
cld
jnp
xchg
add
push
sti
iret
cli
pop
cli
daa
dec
jae
pop
inc
sti
out
sub
aaa
xor
call
fadds
roll
add
pop
clc
incl
push
push
add
faddl
sub
adc
add
lcall
add
add
es
jnp
cmp
xor
pop
push
sub
mov
dec
mov
shlb
stc
decl
sbb
std
xor
sar
cld
in
sti
jl
sbb
sahf
mov
cli
mov
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
push
mov
mov
xchg
add
add
or
test
add
push
add
sub
add
or
fcomip
add
decl
ss
jns
idiv
jno
or
cmc
sti
pop
mov
jg
movsl
std
or
outsb
fsin
and
cmp
lcall
add
cmpsl
mov
clc
cli
mov
std
ljmp
add
xchg
add
add
add
add
or
fiadds
popa
sbbb
ss
decl
stos
pusha
pop
and
paddd
lods
addr16
and
arpl
mov
xorl
pushf
add
add
add
pop
add
adc
add
faddl
add
add
jl
decb
sub
roll
jne
ret
add
pop
inc
xlat
mov
data16
fdivr
pop
rcr
test
jge
push
mov
fsubp
cmpsb
pop
ja
add
add
lcall
inc
mov
pop
incb
mov
std
add
pop
ss
xchg
testb
mov
push
push
lock
xchg
mov
lods
push
jnp
dec
add
ljmp
mov
jp
dec
pop
mull
ficomps
std
xor
adc
test
loop
sahf
add
aaa
loopne
or
add
add
inc
add
sahf
leave
add
inc
add
aaa
jb
push
pushl
mov
outsb
add
add
enter
iret
ljmp
fldt
out
cmpsb
push
jl
stos
std
stc
push
xchg
or
inc
add
mov
sbb
nop
mov
add
add
or
cli
add
movsb
add
jbe
incb
mov
add
lcall
add
push
inc
fcomps
repnz
pop
mov
sub
stos
jmp
in
mov
pop
cld
int
sahf
push
call
push
cmp
test
sub
rclb
add
outsb
cmpsb
pop
add
add
sar
add
and
add
mov
adc
incl
mov
std
je
xor
fdivr
stos
cld
xchg
cld
mov
xchg
es
mov
xor
mov
add
ljmp
sub
add
sti
js
decl
sub
test
insb
std
sbb
sar
mov
pop
clc
das
mov
dec
jmp
lcall
pop
jle
and
adc
mov
lret
add
loopne
push
mov
pop
pushl
mov
xchg
lret
push
add
jp
addl
add
mov
cmp
mull
loop
clc
daa
pushl
cmp
jl
xchg
add
add
test
add
mov
cmp
testb
prefetch
jl
imul
clc
scas
ficoms
pop
jle
jo
scas
mov
dec
adcb
dec
pushl
add
jb
add
add
add
in
mov
jg
lock
add
movb
add
bound
incl
mov
out
lahf
cs
int
sahf
cld
push
cld
push
cld
inc
cld
arpl
lcall
stos
cli
bound
add
int
aad
ljmp
add
inc
add
add
mov
std
inc
mov
ss
sbb
out
push
xchg
push
xor
inc
stos
out
std
cmp
out
fbstp
add
add
cltd
add
push
inc
dec
xor
sbb
cmpsb
add
add
hlt
sub
adc
test
mov
faddp
loop
mov
out
ja
and
incl
dec
or
add
call
sbb
add
mov
add
dec
cmpsb
lods
loop
jle
decl
ljmp
pushl
push
sub
sahf
mov
lahf
sbb
call
mov
add
jg
ret
dec
add
adc
es
pushl
mov
add
add
adc
dec
or
pop
xor
jge
or
mov
frndint
mov
jmp
mov
cld
sbb
pop
std
mov
decb
mov
add
push
ret
add
add
xchg
loopne
fldl
and
mov
data16
das
adc
cmpsb
bound
inc
decb
lret
std
ljmp
les
jbe
or
mov
ds
pop
sti
sti
std
sti
xchg
cld
sbb
mov
data16
lcall
clc
incl
inc
add
add
shlb
add
add
add
ret
add
push
mov
fisubrl
xor
leave
adc
pop
push
sar
cs
scas
push
sti
jg
mov
sar
pop
pop
es
inc
out
cli
loope
lcall
add
call
add
add
add
jmp
mov
pop
add
jmp
sbb
mov
mov
mov
add
xchg
clc
jl,pn
xchg
inc
popl
mov
jg
cmp
lcall
inc
or
scas
inc
sahf
loop
add
xor
sbb
sub
or
lods
decb
pop
outsl
push
bound
sub
popf
ret
jmp
lret
in
mov
repnz
mov
roll
pop
pop
out
mov
add
add
add
out
inc
mov
outsl
and
mov
std
jle
dec
std
push
mov
cld
enter
loop
xor
and
cmpsb
dec
outsb
push
fisubl
outsl
test
xor
pop
xor
push
lods
bound
pop
lds
cli
into
xchg
add
add
add
lock
inc
call
add
jne
add
ucomiss
ret
decl
decb
xchg
clc
jnp
movsl
or
or
push
add
je
add
mov
ljmp
ret
add
push
lods
call
and
inc
adc
push
mov
jle
add
add
push
and
push
xor
add
add
ss
roll
rorl
lcall
adc
fsin
cmpsl
decb
push
lcall
inc
pop
orb
out
jecxz
cmp
inc
jle
add
or
xchg
incl
imul
add
lock
push
std
std
jp
cmp
add
dec
sar
in
cld
adc
xor
out
rol
jg
mov
cmc
jnp
push
inc
jp
push
pop
add
sbb
out
add
jo
and
add
lcall
mov
fisubrl
mov
sahf
aam
xor
repnz
mov
mov
stos
pop
or
jle
js
orb
aam
out
inc
or
add
addr16
inc
out
out
push
mov
add
mov
ret
jbe
add
pop
sbb
ss
add
sub
loop
imul
jp
test
js
loopne
in
add
dec
ficoml
outsl
movb
or
loop
mov
inc
pop
mov
adc
jnp
aad
or
fwait
xor
pushl
jno
aaa
push
mov
fdivr
add
xor
pop
sbb
incb
out
outsb
lahf
add
rol
jge
loop
or
ss
mov
lret
push
adc
lcall
stos
jp
push
scas
or
mov
add
cmc
sbb
out
cmp
data16
dec
loopne
jg
jle
add
add
add
pop
mov
rcll
hlt
jno
dec
xchg
cmpsb
mov
jbe
ja
aaa
xor
add
sbb
cmp
push
push
mov
xor
jae
sbb
add
sbbb
lock
pop
js
ret
sbb
pushf
adc
ljmp
cmp
shrl
push
fnsave
into
divb
scas
sub
mov
cli
sbb
loopne
ljmp
mov
lea
mov
ljmp
call
push
fsubrp
scas
cltd
decb
push
out
adc
std
ss
std
cmpsl
std
cmpsb
std
vpunpckhbw
aaa
cmp
push
cmpb
gs
jp
test
jl
mov
pop
jp
ret
cmp
mov
lret
arpl
adc
push
inc
inc
or
mov
xor
mov
lret
jmp
in
ljmp
decb
ss
add
push
out
sidtl
mov
inc
xor
es
pop
pop
mov
mov
cmc
jno
lret
sahf
rcl
cli
ljmp
out
dec
jae
lret
loop
mov
push
ret
cmpsb
jecxz
push
call
inc
out
cmp
push
mov
loopne
loope
dec
fsts
cmc
push
push
call
mov
gs
js
or
xchg
adc
call
or
sbb
jg
mov
and
bound
or
mov
sbb
push
add
mov
inc
cli
mov
roll
rorl
add
xchg
mov
test
cwtl
or
sbb
repnz
imul
data16
loop
pop
cmp
or
loope
sub
pop
ss
xor
mov
xchg
lret
jno
pop
out
bound
in
iret
add
push
add
pop
scas
pusha
dec
jns
fisubrs
mov
inc
aad
mov
testl
bound
mov
mov
lock
stos
mov
cmp
movl
notb
dec
ret
mov
pop
cmp
test
clc
std
sbb
cmp
andl
dec
mov
xor
cmp
out
or
mov
jne
add
jle
test
mov
lea
jb
shlb
xchg
cmp
outsb
mov
mov
push
andb
jl
push
test
xchg
push
scas
loope
dec
jb
add
dec
push
jmp
adc
cmpsb
into
adc
out
mov
push
inc
movsb
cmp
je
xchg
xchg
jb
jge
lahf
nopl
cmp
mov
outsl
adc
cli
out
adc
xor
jbe
ret
cs
rorb
mov
rcl
movzbl
fcomi
inc
xchg
pop
push
mov
jmp
fnstenv
push
or
ljmp
push
je
and
mov
inc
shll
xchg
repnz
cld
shrl
inc
adc
sbb
xlat
sti
test
lods
lret
fadd
notl
xchg
cltd
push
or
cli
push
mov
iret
andl
push
sahf
or
pop
inc
mov
xor
push
call
es
ds
mov
lahf
sahf
push
daa
repnz
mov
cmp
mov
out
xchg
and
push
push
add
fists
cmp
dec
fimull
inc
jp
add
mov
adc
add
sub
ds
push
add
adc
cmp
ds
xor
popa
pop
xor
sbb
ljmp
push
aam
xor
inc
hlt
lret
prefetch
outsb
mov
inc
xchg
inc
pop
repnz
daa
out
or
popa
ss
aam
push
notl
xchg
sbb
clc
mov
mov
bound
ss
out
mov
imul
xchg
adc
xor
faddl
or
lret
rolb
mov
jno
ret
outsb
cli
dec
sub
push
faddp
hlt
mov
and
jbe
ds
ds
pushf
push
jo
pop
push
into
xor
cs
stos
notl
push
push
mov
or
mov
xchg
int
out
push
adc
mov
inc
pop
es
test
fadd
inc
in
xchg
lock
cmp
and
xchg
or
sub
repnz
ret
jnp
jb
xlat
test
jg
je
js
rolb
mov
pop
inc
adc
inc
pop
fs
jno
push
or
adc
sarl
cwtl
ret
lock
push
loope
test
mov
adc
cs
sbb
scas
mov
clc
cmp
push
lea
inc
and
push
inc
iret
jnp
and
inc
push
or
pop
in
ret
push
mov
xor
jp
clc
ljmp
outsl
mov
addr16
push
jge
xlat
dec
imul
add
jl
and
and
mov
xchg
cmp
fistpll
inc
add
cli
xor
adc
not
clc
add
repz
sbb
cmc
lock
push
cmc
je
je
and
sub
inc
or
shl
hlt
into
fldcw
ss
mov
shl
loop
mov
into
mov
into
add
rclb
push
fcmovnb
sti
mov
lds
cmp
mov
out
pop
mov
jbe
cli
dec
out
lcall
adc
add
cmp
push
mov
mov
push
jp
ss
mov
mov
and
xor
addl
or
pop
ss
testl
mov
sub
ss
inc
mov
inc
jbe,pn
mov
sub
and
cmp
js
scas
adc
add
repnz
out
mov
dec
divl
inc
sub
sbb
inc
pop
adc
fcmovu
push
leave
daa
ret
push
out
mov
pop
jbe
sub
rcrb
push
mov
mov
in
rcr
ss
and
lcall
dec
jmp
or
into
push
dec
xor
scas
ret
pushf
hlt
lcall
xor
push
mov
not
inc
add
sbb
add
jnp
loop
or
repnz
cs
add
lcall
fisubs
jp
add
mov
dec
aam
iret
inc
push
faddl
add
sbb
ret
ljmp
add
push
out
ret
movsl
faddp
ret
das
jle
jb
lret
mov
inc
vdivss
inc
add
jecxz
push
jb
add
mov
add
or
addl
lock
movb
outsb
jo
jo
fcmovu
in
std
push
mov
in
aad
push
fstpt
jecxz
jbe
outsb
clc
mov
mov
and
sahf
jmp
push
push
push
out
ljmp
repnz
and
ss
aad
mov
jp
lret
jnp
push
ficoms
cmp
jp
inc
and
ss
fidivrs
shl
out
inc
add
mov
push
sbb
xchg
fiaddl
dec
out
imul
mov
inc
or
push
mov
push
inc
sbb
subl
pop
inc
xchg
stc
push
or
mov
add
cli
data16
in
sub
lods
push
clc
dec
xor
stc
adc
or
cmp
sub
daa
fsts
mov
fadd
sti
jo
addr16
lcall
cmp
and
sub
mov
pop
hlt
jmp
cld
out
add
xor
inc
ss
sbb
mov
ret
push
out
sarl
push
sbb
sarl
out
ds
inc
sbb
sbb
sbb
fidivrs
js
add
and
icebp
push
fiadds
ss
push
out
pop
push
ds
or
ffree
adc
sbb
sub
jl
mull
out
not
cmc
jbe
stos
or
ja
ja
jp
add
or
pop
jp
push
into
push
mov
pop
xchg
js
mov
add
out
cmp
or
push
pop
mov
and
lret
scas
dec
loop
cmp
cmpsb
push
or
mov
rorb
dec
shl
scas
pop
mov
push
cmp
arpl
push
or
add
pushf
lds
std
cmp
or
add
push
fistpl
push
idivb
sti
sub
adc
mov
clc
aaa
fwait
add
ljmp
mov
add
inc
std
add
fistl
daa
imul
insl
lods
dec
test
dec
and
dec
pushf
sub
xchg
sub
loopne
add
adc
pop
xchg
fucomi
jo
addb
and
pushl
jl
add
jge
jns
jnp
addb
addr16
inc
dec
jle
add
es
outsl
out
jle
or
push
div
out
aaa
cmpl
jl
addl
jns
jge
cmp
sbbb
pop
jge
cmpb
jl
test
jnp
pop
jnp
mov
cmp
addl
jl
xor
xor
and
jle
jp
out
lcall
sahf
idivl
dec
jnp
jbe
push
enter
jp
mov
jge
push
addb
enter
or
jns
xchg
xchg
jo
aaa
fcomi
test
xchg
mov
sar
jns
push
push
test
lea
cltd
jmp
dec
aas
inc
inc
cmp
stos
cmpsb
popf
mov
pop
pop
data16
mov
mov
movsl
cmpsl
movsl
mov
cmp
sub
push
andb
push
dec
inc
dec
pop
ja
movsl
mov
mov
mov
sahf
cwtl
pushf
xchg
jbe
cmp
aaa
xor
xchg
lods
mov
pusha
dec
dec
dec
pop
jno
cmpsb
ds
pushl
xchg
xchg
mov
dec
mov
mov
jge
inc
push
jg
in
bound
ds
stos
sahf
xchg
xchg
xchg
lea
inc
ds
outsl
xchg
stos
mov
ljmp
push
push
imul
test
jns
dec
dec
push
inc
dec
test
imul
xchg
test
pop
popa
mov
notb
cmp
decl
push
outsl
xchg
test
cmpsl
mov
pop
bound
cmpsb
mov
lods
mov
pop
dec
idiv
or
inc
dec
inc
dec
popa
sbbl
pop
pop
arpl
xchg
mov
jmp
call
inc
aas
dec
inc
dec
bound
xchg
subl
fstpt
mov
ds
dec
inc
dec
data16
mov
sar
pop
pop
popa
jb
xchg
movsl
mov
mov
cltd
xchg
inc
cmp
jne
add
lods
movsb
sahf
mov
divb
pushf
scas
mov
jg
cwtl
test
cmp
inc
popa
sbbb
pop
push
pop
addr16
movsb
mov
lods
mov
incl
inc
dec
inc
push
jne
movsl
lods
cmpsl
popf
ja
jo
incl
stos
mov
lcall
clc
mov
mov
cmpsb
sbb
push
push
data16
movsl
mov
cwtl
xchg
xchg
cmp
or
cs
pop
jle
scas
ljmp
pop
pop
jae
lcall
dec
cmp
inc
rcll
mov
imul
sbb
push
movsb
mov
inc
cmp
push
pushf
test
mov
enter
sahf
scas
mov
cmpsb
mov
inc
in
jg
cmp
popa
sbbb
jbe
pop
pop
gs
xchg
test
outsl
clc
jmp
cmp
dec
dec
pop
jp
mov
imul
mov
ret
clc
mov
dec
ds
cmp
xchg
mov
pop
pushf
jge
pop
pop
in
jle
mov
mov
repz
lcall
mov
outsl
bound
mov
das
or
gs
inc
dec
dec
push
adcb
gs
ljmp
movsl
stos
movsl
mov
jae
dec
dec
push
dec
pop
jne
popf
mov
ja
mov
bound
jbe
mov
std
add
push
push
pop
insl
adcl
or
insb
jp
cltd
mov
cmp
dec
push
pop
push
pop
jne
xchg
lcall
imul
outsl
mov
xchg
xchg
ds
pop
push
pop
pop
pop
push
lea
call
push
jp
xchg
lahf
movsl
mov
cmp
push
orb
insl
insb
insl
jb
xchg
sahf
testb
mov
bound
jb
mov
cmp
jne
outsb
jo
orb
jg
push
gs
mov
jno
jb
test
mov
jno
push
imul
mov
stos
pushl
jl
lea
mov
jg
push
push
ficompl
jmp
jge
lea
ss
ret
cmpb
insl
adc
mov
int
lcall
xchg
jae
data16
push
jnp
sbbl
push
orl
or
das
add
jae
push
outsb
jbe
xchg
push
mov
adc
xchg
jno
mov
jae
push
mov
add
xchg
mov
fiaddl
cmp
jbe
test
cmp
add
xchg
inc
sti
jle
js
cld
push
imul
mov
sbbl
andb
jle
imul
jne
mov
mov
add
mov
and
arpl
jbe
nop
cwtl
popf
fwait
xchg
lea
loopne
je
shlb
into
adc
ret
or
fidivl
jle
nop
xchg
xchg
mov
pop
jbe
js
cmp
outsl
xor
outsb
outsl
je
mov
xchg
nop
rcrl
mov
jnp
test
sbbb
js
mov
jbe
or
dec
xchg
jg
inc
addl
cmp
jae
loop
mov
and
mov
xchg
jne
jp
fiaddl
lods
xchg
inc
fldcw
add
mov
addl
xor
mov
or
jnp
xor
push
mov
add
adc
mov
ds
pusha
lcall
push
cmpb
cmp
aas
dec
jnp
addr16
inc
jl
ds
aas
imul
insl
aaa
not
mov
mov
addl
sbbb
add
mov
xchg
negl
jbe
cmp
das
jnp
test
and
pop
jnp
repz
fnstenv
xchg
jge
test
add
push
jl
test
insl
pop
cmp
outsl
in
xchg
inc
mov
cmp
popf
adc
xchg
push
inc
pop
xorb
mov
shll
mov
fwait
cltd
pop
sub
test
sub
push
xchg
xchg
push
int
aas
mov
mov
mov
sub
mov
fisubrl
out
mov
add
adc
sarl
mov
ror
aaa
cmp
mov
fidivl
out
add
movsl
ss
bound
and
jae
push
push
mov
adc
mov
shlb
mov
aam
mov
dec
imul
pop
add
outsb
adc
cmpb
push
js
outsb
sub
cmpsb
pop
pop
pop
andl
push
sub
push
push
fcomi
jg
lods
or
push
push
sbb
adc
in
push
and
push
fisubrl
sarb
pop
sbb
outsl
shrb
adc
mov
push
or
cmp
push
add
add
mov
jg
inc
jae
test
pop
mov
andnps
lods
insl
pop
push
adc
xor
and
mov
ror
and
xchg
jle
pop
mov
lods
pusha
pop
pop
cmp
insl
imul
xchg
pop
push
xchg
add
popa
fistpl
mov
out
mov
sbb
and
jge
js
cmpb
test
daa
or
lret
push
xor
insl
popa
mov
loop,pt
ret
inc
jmp
sbb
or
adc
inc
mov
mov
mov
inc
cmpsl
ja
push
sub
xor
or
mov
lahf
call
add
push
push
xchg
imul
adc
outsl
imul
test
je
ret
mov
jne
jle
xchg
test
lods
inc
fistl
mov
insb
imul
jl
mov
inc
mov
mov
xchg
xchg
xchg
xorl
add
xchg
mov
jne
jne
jnp
jg
bound
lea
fs
lea
decl
je
jae
jp
mov
mov
js
pop
push
outsl
inc
arpl
xchg
xchg
xchg
nop
mov
jae
jo
je
jle
mov
out
call
push
pushf
mov
pop
bound
addr16
nop
and
sbb
jo
push
push
ljmp
mov
pop
addb
pushaw
pusha
jb
or
orl
jp
imul
xchg
pushf
sahf
pushf
cltd
xchg
mov
incl
jl
pusha
push
nop
xchg
cltd
cltd
xchg
xchg
jns
imul
test
jns
lcall
add
pop
imul
ret
outsl
push
pushl
shll
jge
cwtl
mov
xchg
mov
ja
xor
mov
decl
imul
cmpsb
lahf
and
xchg
pop
pop
push
jg
jno
lahf
test
xchg
mov
mov
push
dec
imul
or
jno
pop
push
push
pop
popa
test
mov
lods
mov
jg
lcall
bound
test
dec
dec
push
pop
pop
data16
mov
std
stos
mov
movsl
lcall
dec
push
ds
jge
mov
shll
pushf
pop
push
inc
inc
dec
push
pop
inc
mov
mov
mov
fbstp
dec
cmp
mov
stos
xchg
je
dec
inc
inc
dec
pop
fs
mov
mov
mov
cwtl
xchg
aas
sbb
jo
ror
ret
std
pushl
ds
push
pop
fs
xchg
lcall
xchg
xchg
fwait
xchg
dec
call
sub
xor
mov
lahf
andb
aaa
inc
inc
push
pop
je
xchg
stos
mov
mov
jmp
jne
adc
xor
jns
leave
fmul
mov
jae
inc
sub
ljmpw
mov
mov
mov
or
xor
sub
ret
fst
lds
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
movsl
nop
inc
or
sub
lcall
pop
push
xchg
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
mov
rol
mov
lock
ljmp
and
sbb
mov
mov
imul
pop
js
stos
ljmp
clc
ds
lods
lods
jge
or
sbb
pop
lcall
subl
lcall
xor
and
xchg
scas
mov
sbb
clc
lcall
lods
int3
fsubp
fcmovnb
cwtl
jae
aaa
daa
sbb
cmp
mov
leave
mov
push
lods
int3
insl
and
sbb
popf
mov
lods
andl
sbb
lcall
inc
pusha
jp
mov
enter
scas
lods
test
or
adc
cmovns
loopne
fcomip
call
sub
push
outsb
scas
ret
ror
ret
mov
cmp
dec
adc
sbb
decl
pop
xor
out
into
mov
push
and
dec
andb
mov
lcall
or
and
in
fnstenv
push
push
cs
popa
jge
mov
into
pop
cld
in
mov
mov
lahf
push
push
pop
nop
mov
jecxz
mov
push
das
clc
in
dec
xor
dec
inc
pop
jns
mov
sub
lret
sarb
sbb
pop
std
fistps
incb
and
mov
loope
mov
dec
xor
xor
jp
mov
dec
mov
pop
sbb
mov
mov
insb
push
xor
and
inc
or
jl
mov
into
rcl
int3
mov
push
and
sbb
mov
loopne
or
call
lods
mov
xor
xor
jl
mov
mov
sti
fucomip
xchg
push
pop
sub
add
das
arpl
scas
mov
and
aaa
dec
pusha
jge
in
or
leave
into
ror
xchg
mov
sub
add
cmp
scas
lret
int
ljmp
sub
xchg
scas
rol
into
lret
mov
das
sbb
cmp
jmp
stos
fcmovne
test
insb
push
xor
das
inc
push
arpl
int
mov
sti
mov
dec
or
aad
enter
push
cmp
ss
push
data16
pop
icebp
xchg
test
mov
push
sub
aaa
pusha
andb
adc
inc
ss
inc
push
js
cmpsl
aam
mov
add
and
xchg
mov
aam
mov
andb
call
pop
outsl
test
lds
and
jno
dec
icebp
ljmp
mov
cmp
push
push
fwait
scas
mov
fisubrl
pushl
and
adc
push
jno
stos
mov
je
xchg
ljmp
stos
or
xchg
stos
mov
shll
or
ss
mov
in
insl
xchg
jns
dec
inc
inc
dec
fs
test
mov
int
pushl
push
insb
sub
sbb
push
insb
xchg
movsl
xchg
jnp
push
inc
inc
stos
mov
incl
arpl
cmpsb
mov
in
enter
and
lock
push
imul
cmpsl
cwtl
andb
inc
inc
dec
pusha
jne
movsb
dec
std
out
cli
sbb
mov
push
or
push
sbb
cwtl
lods
mov
xchg
inc
inc
dec
pop
outsl
xchg
decl
popf
addr16
inc
cmp
xor
jbe
movsb
jp
lods
mov
inc
inc
pushl
sti
dec
pop
insb
test
shlb
and
xor
je
lahf
mov
std
mov
mov
dec
inc
inc
push
addr16
cmpsb
mov
mov
decl
daa
inc
push
push
adc
test
dec
sub
fbstp
pop
mov
mov
dec
cmp
mov
mov
push
dec
inc
outsl
jo
fmuls
xchg
je
adc
sarl
call
dec
xor
sub
sub
popf
xchg
push
dec
dec
dec
je
out
fdiv
test
in
cltd
addr16
dec
inc
and
adc
enter
xchg
jnp
pop
push
dec
dec
push
fisubrl
rcr
jne
mov
leave
sarb
cmp
mov
cmp
pusha
jae
popf
scas
mov
loopne
js
pop
push
dec
dec
pop
push
xchg
mov
cmp
mov
jle
dec
dec
xor
push
addr16
mov
scas
stos
stos
push
xchg
dec
push
pop
outsb
fcomps
outsb
pop
jo
lret
sarb
das
and
imul
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
movsb
xchg
shr
jg
test
xorl
arpl
xchg
ret
push
decl
aam
push
push
dec
sub
push
xchg
mov
xchg
xorl
in
push
pop
gs
and
mov
push
dec
sub
or
jmp
xchg
xorb
pop
pop
pop
data16
mov
sar
in
sahf
jbe
push
dec
xor
cmp
jp
pushf
mov
cli
pop
in
incb
pop
pop
dec
sahf
lods
fadd
mov
pop
push
jg
lock
or
cmp
pop
push
lahf
xchg
xchg
pop
insb
clc
out
pop
dec
lea
lahf
jbe
pop
adc
cmp
lock
ja
cwtl
mov
mov
addr16
pop
pop
cs
scas
mov
ret
ret
mov
pop
push
dec
xor
push
cltd
lahf
lahf
mov
dec
mov
push
jb
int3
mov
test
insl
pop
pop
dec
xor
imul
xchg
mov
pop
imul
movsb
mov
rorl
test
inc
xor
mov
decl
popf
xchg
xchg
fs
pop
arpl
xchg
test
mov
loopne
mov
inc
stos
adcb
lcall
arpl
les
pushf
mov
nop
outsl
pop
push
fisttpl
loopne
pop
push
test
xchg
mov
arpl
orl
mov
push
inc
ss
insb
jp
xchg
loopne
popa
loopne
popf
lcall
push
incl
movsl
mov
xchg
add
ds
jle
xchg
pop
cld
int
sub
xchg
nop
outsl
addr16
mov
lock
test
dec
cmp
ret
jb
xchg
push
add
pushf
lcall
push
jg
fwait
lods
mov
sti
out
add
movsb
mov
pop
inc
cmp
push
pusha
push
lcall
xorb
imul
repnz
sarb
test
push
inc
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
gs
push
add
mov
mov
jge
pop
push
inc
inc
jp
iret
mov
arpl
xchg
xchg
dec
fwait
xchg
insb
mov
xchg
xchg
mov
stos
lcall
aaa
je
pop
xchg
xchg
xchg
cltd
lcall
data16
pop
hlt
push
scas
mov
enter
inc
pop
fninit
or
inc
push
pop
addr16
dec
xchg
xchg
les
adc
push
ja
loop,pn
mov
flds
je
dec
js
dec
xor
outsl
lcall
jl
insl
xchg
push
js
xchg
cmpsl
scas
cs
je
testl
dec
pop
orb
dec
outsb
insb
imul
or
mov
dec
addr16
dec
cmp
dec
pushl
dec
xchg
xchg
xchg
xchg
mov
push
add
movsl
lods
mov
add
dec
aaa
cmp
dec
push
pop
addr16
xchg
xchg
xchg
cs
lea
je
xchg
subb
rcrb
dec
push
mov
je
mov
je
mov
jb
xchg
bound
std
pop
inc
aaa
inc
dec
push
dec
xchg
jle,pn
push
hlt
ljmp
jp
fwait
test
fiadds
pop
mov
fs
dec
cs
pop
fs
jbe
aas
sbb
notb
js
push
xchg
pop
sbbb
movsb
out
out
les
push
inc
dec
push
pop
fdivrl
nop
ficompl
add
mov
xchg
sarb
mov
mov
push
fcomps
outsb
fsubl
mov
push
inc
aas
notb
mov
imul
ds
icebp
mov
clc
push
pop
push
test
jp
pop
je
dec
inc
push
ficompl
lods
popf
xchg
loopne
ret
cmp
dec
xor
sbbb
xchg
sub
incl
jp
lcall
xchg
je
pusha
push
inc
inc
dec
pusha
movl
jl
xor
insb
std
pop
push
icebp
xor
inc
mov
movsl
xchg
jl
bound
inc
imul
in
pop
pusha
imul
xchg
bound
mov
mov
xchg
lahf
cmpsl
scas
mov
mov
popf
mov
pop
dec
aas
sarb
cmp
jbe
push
push
cwtl
movsb
test
mov
outsb
ret
add
pop
inc
in
pusha
insb
inc
xchg
in
fistl
cwtl
xorl
xchg
mov
int3
pop
mov
cltd
mov
pop
dec
ds
push
push
pop
pop
ret
jno
pushf
popf
dec
js
imul
jle
rcll
lods
mov
inc
cwtl
mov
outsl
push
popa
insl
jnp
xchg
popf
cwtl
nop
mov
mov
jo
xchg
popf
movsb
adc
outsl
mov
dec
aas
inc
dec
cwtl
rcrb
and
dec
jge
dec
insl
jae
mov
ret
shlb
pop
dec
inc
dec
push
push
pop
jg
scas
mov
pushf
lahf
cltd
xchg
or
adcl
mov
movsl
pushf
mov
push
inc
inc
dec
push
nop
outsb
jl
cwtl
sahf
out
cmp
cwtl
mov
sbb
xchg
cmp
mov
cltd
xchg
test
xor
scas
sbb
add
jo
outsb
jne
lea
sahf
clc
cli
add
xchg
xorb
lock
decl
aad
lcallw
imul
adcl
mov
xor
jmp
pop
pop
dec
inc
out
push
pop
ds
xchg
mov
pop
push
mov
mov
fwait
mov
pusha
push
inc
dec
mov
outsw
jle
out
loop
data16
pop
push
imul
add
bound
inc
inc
dec
xor
jg
jg
mov
je
xchg
popf
push
mov
movsb
fwait
test
loopne
inc
dec
addb
pusha
cmp
pop
jb
jl
push
cs
mov
cwtl
jg
gs
dec
inc
dec
dec
sahf
cli
sbb
fildl
push
test
lcall
nop
shrb
xor
dec
inc
inc
dec
push
mov
imul
loope
std
or
pushf
mov
arpl
inc
dec
push
aaa
insl
inc
sarl
xchg
push
jae
push
shll
xchg
push
mov
push
or
dec
dec
outsl
scas
lock
xchg
dec
cmp
outsw
jne
pop
or
and
fs
push
inc
out
push
jge
push
pop
gs
cwtl
popf
cmp
jl
mov
adcl
out
outsb
add
loop
dec
inc
sbb
shlb
mov
mov
mov
push
inc
inc
into
push
or
add
ret
dec
lcall
push
mov
mov
sbb
mov
push
aam
mov
and
mov
jb
outsl
adc
mov
xor
xor
jo
in
push
inc
inc
dec
into
and
cmpsb
xor
hlt
mov
and
or
movsb
mov
cmpsb
cltd
subl
dec
inc
sbb
loopne
inc
dec
or
xchg
fwait
lahf
xor
jg
inc
pop
sbb
into
or
xchg
jnp
popa
push
out
popa
insb
jp
fwait
out
jg
or
lea
mov
pop
popa
ss
js
inc
dec
dec
xor
aad
sub
popf
push
mov
pusha
pop
test
sbb
cwtl
mov
inc
xor
mov
pop
dec
inc
xor
mov
jg
cmp
lcall
nop
cltd
mov
test
or
mov
dec
inc
inc
dec
dec
arpl
mov
mov
outsl
xchg
insb
movsl
cmpb
mov
push
inc
inc
dec
push
andb
outsb
rcll
jp
xchg
fwait
cmpsb
cmpsb
mov
jne
cmc
pop
rolb
inc
inc
les
mov
xchg
dec
mov
cwtl
jno
add
scas
mov
dec
subb
inc
test
lcall
xchg
push
xchg
push
stos
call
lcall
cmpsb
mov
mov
movsl
xchg
jge
push
mov
dec
push
pop
push
nop
popf
cltd
xchg
stos
ficoml
push
jne
outsb
dec
jb
xchg
call
cmp
mov
push
inc
dec
push
pop
insb
pop
jno
addr16
dec
xchg
mov
jo
sub
decl
shrb
push
inc
inc
inc
dec
inc
jns
not
cs
cwtl
xchg
stos
ja
jo
mov
fisttpl
jge
push
sub
call
xchg
nop
jb
jno
out
push
add
dec
mov
dec
inc
lcall
mov
lcall
orb
mov
stos
mov
inc
inc
ret
insb
jo
inc
ss
ss
ja
cli
cmpsl
mov
cmpsb
lcall
dec
dec
enter
fisubl
jg
xchg
mov
ret
jno
fcompl
mov
jp
pop
dec
inc
dec
inc
dec
jb
or
inc
xorb
fwait
mov
mov
mov
dec
inc
lcall
data16
cmpb
inc
xor
xchg
scas
scas
aad
adcb
dec
xchg
movsb
orl
or
sarb
ja
adc
inc
stos
mov
cmpsl
sahf
lea
fs
dec
dec
repnz
or
js
mov
mov
movsb
lods
mov
cmpsb
fwait
clc
pop
dec
dec
push
sbb
xor
nop
mov
mov
jne
xchg
test
xor
jnp
push
dec
dec
dec
mov
push
cltd
mov
jbe
je
xor
sub
mov
dec
dec
dec
out
add
subb
xchg
out
dec
jne
test
movsl
cwtl
stos
movsl
xchg
sub
dec
cwtl
dec
dec
push
push
cmp
ljmp
addb
jne
xchg
out
sub
lcall
push
dec
dec
add
lret
jae
call
adc
cmpb
adc
movsb
cltd
mov
dec
out
xchg
cmp
cltd
orb
jne
orl
nop
add
push
push
cwtl
push
movsl
or
sbbb
data16
js
sbb
jmp
test
jae
push
push
dec
cwtl
pop
enter
loope
cs
xchg
sbb
add
inc
mov
xchg
lods
stos
subb
pop
push
dec
lahf
arpl
ss
lret
lock
xor
js
andb
and
inc
dec
push
pop
imul
jns
int3
xchg
mov
mov
mov
push
add
dec
add
cs
enter
xor
cwtl
cwtl
jnp
jle
stos
jle
shrb
pushf
nop
xchg
pop
mov
fs
test
lahf
push
adcb
xchg
lcall
dec
cwtl
lea
cwtl
out
adc
sub
pop
add
push
or
mov
jle
subb
sub
imul
rorb
push
or
mov
jp
mov
cmp
gs
push
dec
or
xchg
push
cmp
loopne
push
jmp
mov
orb
into
stos
movsl
fwait
xchg
test
pop
dec
inc
cmpsb
dec
pop
gs
cltd
andb
outsb
jbe
mov
popf
into
lcall
adc
inc
dec
add
je
mov
jnp
test
insb
xor
mov
cltd
mov
pusha
push
dec
inc
inc
dec
mov
dec
sti
mov
jae
mov
push
cmp
mov
adc
lahf
lahf
mov
jle
mov
rclb
pushf
jle
bound
test
push
dec
inc
loopne
jo
movsb
push
cmp
popf
mov
jg
pop
je
fwait
mov
test
jb
aas
pop
pop
fiadds
dec
or
mov
sbb
imul
ds
and
push
jmp
test
push
inc
inc
inc
push
pop
imul
loopne
push
movsl
cmpsl
cmpsb
mov
data16
mov
fs
imul
dec
pop
push
adc
jg
call
cwtl
mov
cwtl
or
push
inc
aas
ds
dec
push
mov
jne
or
fbld
pushf
xchg
jb
loop
mov
inc
inc
dec
push
lret
pushf
lods
scas
lods
cmpsb
inc
sbbl
mov
mov
sub
mov
cs
dec
inc
inc
fldcw
pop
insb
jnp
stos
jb
cmpl
mov
insl
jo
fdivs
push
xchg
loop
xchg
push
dec
dec
scas
pop
addr16
xchg
hlt
outsl
push
or
cmpb
jo
ja
insb
subb
sbb
and
loop
dec
push
pop
fs
and
test
movsl
mov
add
lds
xlat
clc
mov
imul
push
pop
pop
arpl
les
xchg
sub
inc
mov
xchg
incl
and
mov
pop
pop
pop
dec
push
mov
fs
jl
popa
mov
js
cmp
xchg
xchg
arpl
or
orl
pop
or
jne
and
add
jae
rorb
push
lods
imul
xchg
in
sub
aam
or
or
or
faddl
fisubl
sti
sub
xchg
xchg
add
inc
mov
js
scas
add
xorb
dec
scas
mov
mov
aam
into
jle
jns
jl
mov
clc
lahf
cltd
dec
inc
mov
xchg
pop
or
jp
adc
adcl
jo
std
xchg
subl
loop
push
mov
inc
loop
leave
cmpsb
test
sbb
xor
test
andl
push
fs
filds
test
ja
inc
mov
adc
sub
xchg
jg
push
jne
mov
mov
jmp
popa
rclb
xchg
sub
push
lods
scas
mov
inc
sub
push
or
dec
or
or
leave
cld
outsb
pusha
add
nop
xchg
inc
movups
incl
add
xchg
inc
xor
add
movsl
add
mov
leave
call
mov
mov
shll
mov
fstpt
xor
cmp
xor
and
mov
test
enter
xor
xor
aaa
and
mov
stos
rcl
xlat
lret
aad
and
test
mov
mov
mov
mov
dec
adc
gs
dec
push
xor
addr16
arpl
iret
add
stc
push
les
ret
idivl
ret
or
push
mov
and
inc
push
dec
int
mov
mov
push
lret
test
rol
mov
shll
adc
cmpsl
loopne
jge
fcmovne
mov
test
fdivs
jge
loopne
test
xlat
mov
idiv
mov
ret
stos
sub
stos
ror
mov
mov
or
sar
jmp
icebp
mov
mov
mov
and
jge
ret
mov
cld
shr
xchg
fisubs
jge
outsw
jb
insl
imul
insb
popa
jns
jo
jo
imul
jg
push
dec
fdivs
mov
repnz
ret
bound
sar
enter
mov
ret
mov
cli
add
jg
xchg
sub
ret
incb
sub
jbe
gs
lahf
pop
push
ljmp
aaa
fadds
mov
loopne
or
scas
testl
mov
dec
rcl
mov
mov
cwtl
rcr
mov
lods
xchg
imulb
aaa
mov
mov
mov
les
xchg
movsb
pushf
pop
movsl
pop
mov
sti
lods
lret
out
pusha
add
fisttpl
push
dec
add
add
ljmp
add
dec
inc
subb
add
push
push
pop
sbbl
or
sbb
hlt
jge
dec
repz
fs
inc
andb
popf
out
gs
add
addr16
cwtl
out
push
mov
adc
outsb
outsl
into
test
jno
int
jnp
push
call
jge
add
or
stos
sbbl
jmp
loopne
lcall
mov
jae
mov
movsb
sub
in
mov
push
out
push
lods
mov
aam
inc
sbb
inc
mov
lea
push
jnp
jmp
xor
pop
inc
jb
jbe
and
arpl
pop
jbe
pop
jae
arpl
addr16
and
sbb
xchg
cld
jno
jns
jne
push
daa
mov
bound
sub
imul
insl
insb
pop
xor
mov
push
arpl
das
imul
test
enter
out
pusha
xor
mov
js
in
jne
jno
xlat
test
in
push
pop
enter
je
outsb
addr16
les
mov
mov
idivl
mov
int3
shlb
mov
cmpsl
jle
mov
mov
push
and
leave
ljmp
mov
xlat
not
fbld
rcl
sbb
mov
mov
adc
in
cld
enter
mov
mov
shr
mov
cs
cmpb
hlt
mov
mov
rorb
jnp
mov
loopne
jmp
repz
fisubs
mov
jbe
mov
frstpm(287
aam
in
fcmovne
add
mov
ror
into
mov
int
loopne
mov
or
std
ror
rcr
addr16
cmc
mov
mov
fldl
inc
mov
ret
dec
or
mov
push
lret
lock
dec
push
xlat
aam
mov
and
int3
fnstenv
shl
sbb
andl
or
fcomp
sbb
enter
inc
lret
stc
rcl
and
shlb
xchg
mov
jmp
int
sbbl
sti
xchg
into
pushf
push
bound
push
das
sti
pop
jno
int
mov
fcmovnu
add
or
aam
ror
out
mov
es
lock
mov
fidivrl
mov
mov
clc
adc
xchg
ret
rcrb
ret
mov
roll
adc
stos
xchg
fcomip
fcoms
mov
hlt
ds
fmul
aad
cltd
roll
sar
iretw
enter
cmpl
scas
xor
sar
iret
in
mov
iret
ljmp
mov
iret
mov
or
jl
sbb
mov
ss
cli
mov
shr
mov
inc
inc
test
leave
iret
shrb
mov
mov
fildl
shll
insb
lret
inc
mov
and
and
cmp
ds
jg
aad
and
cmp
fs
xor
ja
cld
scas
jmp
je
mov
fs
push
push
aaa
mov
sarb
ds
jno
mov
ss
or
dec
orb
push
jns
lcall
and
mov
in
jae
and
jp
xor
jne
testb
adc
fisubrs
sbb
push
shl
lds
inc
jne
arpl
cld
and
push
sti
ss
imul
and
push
fistpl
or
insb
sbb
aas
xchg
adc
and
sub
insl
ljmp
push
mov
cmp
and
cs
outsb
jae
popa
loopne
jae
data16
inc
or
mov
mov
iret
inc
adc
inc
popa
arpl
and
xor
out
add
cmp
fsubs
dec
fs
iret
pushw
daa
cwtl
cmc
pop
dec
sbb
andb
xchg
iret
inc
test
add
push
inc
jg
in
add
ss
xor
inc
cmp
decl
inc
sbb
inc
mov
xor
inc
inc
inc
xor
add
decl
inc
dec
dec
add
xor
xor
inc
inc
inc
inc
inc
sub
pop
add
inc
ss
cs
cltd
inc
pop
or
icebp
shr
test
dec
mov
mov
sbb
pop
cs
repnz
testb
pusha
or
mov
adc
lret
test
imul
add
inc
mov
cs
dec
scas
mov
jnp,pt
mov
sub
orb
dec
or
ret
pop
or
sub
test
sti
xor
lahf
or
mov
imul
scas
jns
out
push
push
mov
mov
mov
ja
out
mov
addr16
push
xchg
imul
and
in
mov
sahf
or
and
mov
fdivs
xor
das
aaa
fs
pop
mov
ss
inc
push
dec
pushl
in
add
call
movsl
sub
sub
mov
neg
mov
mov
hlt
incl
das
and
addl
imul
adc
orb
cltd
insb
flds
add
mov
sub
mov
and
or
adc
add
sub
mov
jne
repz
xchg
cmpsb
imul
in
test
add
add
cmp
out
stos
fs
xor
int
dec
int3
in
mov
add
adc
std
jg
pop
mov
adc
xchg
jo
jle
add
mov
pause
add
and
mov
adc
xor
mov
adc
test
add
cmp
invd
loopne
add
pusha
mov
test
test
and
mov
xchg
xor
add
addl
enter
and
xor
sbb
add
into
and
mov
xor
fs
jbe
pop
scas
add
test
adc
nop
jle
inc
lret
in
loopne
clc
aas
ret
fnstenv
pop
pop
inc
mov
into
scas
add
fdivrs
pusha
push
push
add
inc
inc
mov
cltd
scas
add
mov
fistl
push
bound
mov
arpl
mov
fwait
and
es
cmp
neg
imul
push
pop
push
inc
push
divl
sbb
mov
push
aad
xchg
addb
enter
pusha
xchg
add
subl
outsb
inc
sub
jbe
inc
lahf
sub
or
mov
mov
lock
push
or
in
cs
add
pusha
inc
mov
push
cs
adc
mov
shlb
mov
out
or
insb
cmp
or
scas
imul
js
or
and
push
adc
fwait
xchg
int
lods
outsl
adcb
sbb
scas
outsl
dec
push
push
sar
mov
and
pop
insb
in
mov
dec
shrl
mov
jbe
pop
in
pop
jo
cmp
fldcw
and
and
fisubrl
sub
ja
pop
sbb
add
xor
add
adc
mov
push
cmp
icebp
rcl
jo
add
cmp
jle
add
sub
push
lods
nop
push
or
dec
dec
and
enter
fiaddl
mov
jo
and
pusha
fmull
nop/reserved
loop
cmp
adc
loop
xor
or
sbb
pop
scas
dec
loopne
xor
imul
jecxz
xor
into
xchg
jo
cwtl
add
pop
enter
jecxz
rorl
in
shl
add
lcall
or
and
cwtl
dec
and
sbb
mov
cmpb
aad
enter
add
mov
in
or
jo
mov
or
ljmp
xor
push
stc
mov
pop
or
imul
adc
cltd
in
shrl
jmp
add
jmp
or
je
pop
aas
shrb
or
das
add
mov
inc
in
outsl
bound
imul
mov
add
in
sahf
in
lds
repnz
add
in
ret
or
das
mov
iret
hlt
add
das
add
fsubl
pusha
das
add
or
or
jns
hlt
and
or
cmc
xor
jae
imul
subl
mov
push
dec
add
lahf
xor
iret
nop
add
sar
daa
xchg
add
mov
orb
outsl
sub
adc
outsl
loopne
jle
cwtl
ss
aas
loop
aad
outsl
nop
add
test
outsl
lock
mov
imul
add
push
mov
adc
pop
add
cmp
add
shrl
jle,pn
adc
jns
dec
mov
mov
add
cmp
rorb
add
xor
sub
das
pop
adc
mov
mov
enter
add
mov
inc
dec
push
pushf
pusha
or
push
stc
cmp
push
sahf
cmpsl
inc
add
sub
or
or
adcb
or
xchg
nop
push
out
inc
outsb
push
repnz
and
adc
jo
fwait
inc
add
scas
mov
adc
orb
sub
push
adc
pop
lock
xchg
dec
pop
add
nop
pop
add
adc
adcb
add
stos
jb
and
sbb
mov
push
adc
push
daa
filds
add
incl
daa
iret
fmuls
mov
pop
dec
jae
lock
dec
sub
loopne
inc
sahf
sub
orb
cwtl
outsl
and
jae
cmp
shrb
mov
dec
jno
pop
jb
out
popa
sub
adc
out
fildll
add
fsubs
andb
jo
loopne
dec
das
scas
add
enter
loopne
add
je
xor
sbb
pushl
xor
xchg
outsl
push
cmpsl
fdivs
outsl
jo
mov
dec
shrb
nop
mov
mov
sbb
je
push
in
inc
jb
pusha
sbb
cmp
lret
sahf
pop
mov
lods
push
sub
dec
ds
aas
add
push
cmpb
pop
lods
push
adc
stos
add
push
add
mov
insl
cmp
push
mov
push
subl
mov
pop
mov
inc
sahf
adc
idivl
push
int
push
add
xlat
pop
mov
mov
dec
cmpsl
mov
push
loope
call
mov
push
mull
push
xor
fnstcw
out
inc
ss
inc
push
rcr
outsl
nop
insl
test
xlat
push
xchg
lock
push
jb
pusha
int
fnstenv
pop
push
and
mov
add
mov
sub
divb
notb
nop
xchg
inc
inc
push
and
dec
mov
add
push
lock
das
rorb
iret
cmp
xorb
adc
dec
shrl
dec
outsl
repz
fs
mov
jo
jo
shrl
insb
loopne,pn
lcall
jecxz,pn
push
iret
lcall
lcall
fwait
arpl
push
leave
push
pop
inc
dec
loopne
mov
adc
shlb
pmaxsw
dec
push
xor
push
mov
je
cmp
adc
pop
lods
add
sbb
add
jg
push
iret
orl
add
xlat
cs
add
rcrb
and
loope
push
or
pop
sbb
jecxz
push
popa
lock
xchg
repz
fistpll
das
and
push
sbb
cmc
push
test
orb
lahf
inc
in
aad
or
lahf
nop
leave
out
xchg
jb
add
add
int
imul
stos
inc
mov
jecxz
adc
add
dec
xchg
add
in
nop
leave
push
into
add
cmpl
push
shlb
lock
pusha
mov
in
xchg
inc
icebp
push
in
cmpsl
xchg
aas
lcall
test
inc
ret
inc
aas
and
jo
and
decl
pop
add
inc
outsb
call
orl
and
inc
and
xor
addb
add
jg
roll
jo
fbld
aas
push
into
inc
loopne
int3
ds
clc
nop
xor
shlb
pop
add
into
test
shlb
push
xor
add
outsl
mov
xor
xorb
adc
in
mov
inc
add
add
das
xor
outsb
das
inc
push
pop
das
pusha
inc
nop
pop
pop
aas
inc
mov
and
add
nop
aaa
push
mov
dec
pop
test
in
in
xor
and
aam
pop
jo
push
inc
push
xor
lods
sahf
inc
dec
subl
sub
data16
jb
loopne
push
int
mov
xchg
push
jo
rcrb
sbbb
aaa
into
mov
push
js
mov
or
pusha
test
outsl
sbb
xor
push
add
sub
jns
stos
add
mov
and
scas
add
scas
add
cs
jmp
aas
mov
add
xor
pop
aad
rcrb
call
push
and
nop
sbb
sbb
faddl
shrb
iret
or
or
and
das
jle
inc
cmp
add
daa
add
adc
mov
xor
dec
add
cmp
or
add
dec
push
xchg
mov
or
xor
pop
push
es
push
fistps
add
sbb
wrmsr
ljmp
add
dec
xor
aas
add
cmpsl
or
iret
push
test
pushf
pop
arpl
sbb
mov
stos
add
das
out
and
mov
cs
imulb
mov
cs
shrl
mov
sub
jg
xchg
and
fsts
jg
dec
ja
add
jo
add
pusha
les
pop
add
push
popf
jbe
mov
push
jg
sub
xchg
popl
xchg
jmp
dec
ja
xchg
mov
mov
shlb
pop
add
outsl
mov
ficomps
pop
scas
filds
das
pop
push
repnz
in
popa
pop
popa
inc
sahf
dec
sahf
cmp
inc
fiadds
cltd
es
dec
inc
cs
loopne
sub
pop
dec
dec
dec
cs
jae
iret
xchg
push
push
push
or
imul
out
ds
mov
flds
pop
out
loop
inc
inc
daa
iret
and
shlb
lock
daa
iret
dec
dec
and
pop
daa
out
xchg
xchg
pop
push
push
pop
push
andb
mov
xchg
daa
iret
pop
pop
adc
pusha
sub
xchg
pusha
loopne
adc
mov
xor
popl
push
aas
inc
sbb
ds
add
filds
mov
add
aas
aas
stos
push
popl
push
fdiv
xor
test
push
ffreep
inc
cmpsl
ljmp
inc
shl
aaa
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
mov
jmp
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
rclb
incl
and
jnp
scas
inc
loope
test
decl
sbb
shrb
or
and
lahf
lods
dec
roll
push
hlt
das
jg
iret
and
pop
mov
repnz
add
adc
pop
nop
out
xor
pop
pop
popl
stc
push
aas
lahf
pusha
test
jae
nop
das
bound
mov
pop
scas
inc
pop
mov
out
pop
lock
xchg
inc
clc
and
or
pusha
les
and
dec
mov
andb
aas
rclb
adc
mov
or
adc
xchg
cmpsb
lods
inc
das
or
jo
sarb
shrb
add
mov
add
icebp
addb
scas
idiv
push
rolb
inc
lcall
xor
andb
movsl
inc
test
clc
add
push
xor
add
addb
nop
or
or
push
add
pop
xor
sbb
push
cmp
add
iret
mov
jp
jo
push
das
nop
push
shlb
add
fimuls
mov
sbb
les
sbbb
pop
mov
loop
xor
cs
sub
mov
nop
and
sbb
add
rcr
outsl
nop
mov
popa
fists
xor
pushf
and
push
shlb
mov
nop
loopne
push
xor
adc
je,pt
and
ja
adc
xchg
or
add
stc
test
adc
cmp
dec
sarb
add
sbb
and
icebp
cmp
repz
and
adc
daa
iret
repz
or
sbb
movb
mov
xor
xor
sub
fmulp
nopl
and
jns
cmp
xor
es
jns
out
daa
cs
sahf
out
das
aaa
ds
cmp
ret
stos
jg
mov
and
pop
mov
inc
test
push
stc
repnz
repz
loope
addl
cld
clc
lock
stos
data16
rolb
fldt
loopne
inc
dec
fmuls
mov
and
jae
push
outsl
outsl
testb
jle
sbb
push
bound
mov
inc
sub
fsubrs
sbb
push
and
mov
in
aaa
xor
push
andb
sbb
or
int3
mov
push
sbb
cmpsb
or
int3
int3
mov
ss
add
mov
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
out
lcall
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
inc
xor
or
cmp
add
xor
bswap
aas
incl
dec
mov
jae
dec
mov
ljmp
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
ljmp
enter
les
or
cmp
pop
aaa
testl
dec
mov
incl
call
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
cmpsl
addr16
push
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
decl
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
mov
lods
insl
popf
pop
or
faddp
testb
cmp
add
push
mov
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
call
stos
push
pop
cmpsb
xchg
push
test
gs
push
popf
add
fbld
aas
jne
daa
inc
pop
sub
repz
aas
or
cmp
mov
ds
jecxz
test
data16
fs
out
shrb
in
inc
mov
imul
adc
out
std
adc
aaa
icebp
aad
jg
loop
das
pop
jo
add
add
or
cs
push
push
add
inc
ljmp
pushf
or
inc
addr16
pop
dec
adc
out
das
sar
in
jnp
cmp
push
clc
std
lahf
sub
pop
lret
mov
add
cmp
sub
push
out
mov
and
out
jns
mov
out
das
arpl
int3
pop
or
mov
fwait
mov
xchg
pop
nop
mov
aas
icebp
pop
insb
push
std
mov
pop
enter
jg
and
jns
repz
hlt
pop
add
jo
mov
mov
ds
inc
sbb
cwtl
add
add
add
loope
pop
add
lds
adc
lock
add
push
fldenv
test
mov
inc
aas
jo
sub
sbb
iret
into
jg
pusha
pop
rolb
xchg
mov
mov
add
nop
pop
add
orl
mov
fwait
mov
stos
sbbb
loopne
mov
sahf
test
add
aas
xor
sbb
sub
sub
hlt
sub
dec
ss
dec
cmp
hlt
call
inc
out
sub
dec
push
inc
iret
push
psraw
xor
inc
dec
outsl
je
jo
jb
gs
and
addb
cs
in
adc
or
pop
push
or
pushf
stos
out
mov
adc
fsubs
cs
je
stc
cmp
scas
lock
and
jmp
mov
jbe
mov
pop
xor
es
mov
mov
addb
fsubs
rolb
in
addl
xchg
leave
xchg
xchg
lcall
pop
xchg
sahf
xchg
out
jge
dec
push
mov
inc
xchg
cmp
jns
push
js
test
xchg
xor
jbe
mov
add
sub
or
push
iret
add
sub
imul
test
inc
add
mov
push
addr16
cmp
push
mov
aas
push
popa
call
ret
dec
inc
imul
jo
aas
inc
out
inc
enter
loopne
jne
push
add
push
and
lods
popa
sbb
jmp
pop
pop
xchg
pop
rcl
dec
push
lahf
test
pop
dec
sbb
adc
jg
popl
add
adc
mov
mov
push
cwtl
dec
inc
insb
imul
sarb
mov
jp
inc
out
push
push
insb
pusha
adc
inc
dec
xlat
adcl
sbb
jg
repz
out
test
shrl
push
std
in
adc
iret
fldenv
repz
dec
insl
negb
adc
sbb
fdivp
cmp
pop
xchg
scas
fcomip
out
fstps
xchg
fistpll
xchg
jl
mov
stc
adc
xchg
dec
into
push
loope
insl
push
adc
sbb
fimull
dec
and
in
ret
cmp
js
dec
pop
xchg
add
out
shrb
test
push
je
pop
add
pop
sbb
push
pusha
cwtl
jg
adc
scas
ljmp
flds
mov
xor
dec
add
daa
pusha
fimuls
adc
mov
scas
in
mov
cmp
adc
imulb
stos
cmp
shrb
add
mov
mov
and
add
sbb
push
repnz
push
in
sub
xchg
sbb
mov
loop
xchg
dec
add
fbstp
popa
outsb
jae
loop
popw
xor
mov
ss
and
pop
dec
mov
jo
push
cmp
push
ud1
lahf
push
outsb
fs
xor
test
loopne
inc
mov
inc
push
outsl
insb
and
lods
mov
das
xor
xor
pop
and
enter
fisubrl
cs
ds
cli
lahf
inc
push
bsf
fcomps
and
mov
out
sbb
ljmp
adc
pop
xor
mov
push
adc
popf
or
aas
lahf
ds
mov
adc
out
ficoms
iret
jae
int
push
push
sub
or
scas
movsb
ljmp
cmp
pop
jle
mov
inc
push
dec
loopne
push
out
or
data16
insb
fs
test
xor
daa
and
jae
mov
inc
popa
jb
jnp
or
daa
dec
inc
dec
inc
jb
and
popf
and
mov
sub
outsl
scas
gs
inc
jo
adc
outsb
into
mov
outsb
outsw
inc
cmp
mulb
imul
adc
push
outsl
imul
push
rcrb
and
mov
dec
fwait
cli
push
adc
inc
push
mov
arpl
insb
jb
pop
inc
dec
orl
imul
xor
addb
dec
xchg
inc
xlat
dec
push
xchg
xchg
xchg
cmp
push
add
mov
xchg
push
pop
dec
je
push
pop
loopne
or
aaa
jae
js
dec
dec
pop
mov
sysret
or
scas
pusha
sub
jmp
sbb
jbe
jle
dec
arpl
inc
jb
dec
repz
jno
xor
aam
repz
mov
test
aas
mov
bound
pop
mov
jl
dec
inc
jne
je
js
cs
or
add
adc
aaa
mov
scas
jo
add
call
shll
mov
push
fildll
and
jmp
ds
mov
pop
lods
punpckhbw
add
xlat
mov
jo
cwtl
test
outsl
mov
movsl
pop
cmpsb
movsb
push
adc
insb
movsb
cltd
fidivl
lahf
push
pop
addb
mov
jns
in
repnz
jae
cltd
hlt
mov
test
inc
mov
cmp
mov
mov
jae
sbb
jle
ss
jle
mov
mov
cmp
xor
inc
sub
sbb
data16
das
stos
or
jno
pop
inc
popl
pusha
sub
push
shrl
cmpsw
push
add
divl
push
inc
inc
push
pusha
sarl
and
mov
jo
mov
push
shrb
jne
mov
push
cwtl
popa
jb
add
jl
insb
lahf
out
lods
clts
cli
adc
xorb
cwtl
scas
rorb
xchg
ss
les
loope
inc
pop
push
imul
ljmp
pop
loope
or
icebp
data16
pop
push
add
sbb
js
jb
sbb
popa
addr16
or
cmp
test
sub
jnp
push
pop
adcb
nop
adc
cmp
fcoml
pop
push
outsb
push
adc
inc
into
mov
mov
push
pushf
or
movb
rcrl
sahf
sbb
add
shrb
dec
push
loope
jg
addr16
push
dec
or
inc
lock
pop
add
push
iret
nop
cs
or
outsl
mov
mov
and
and
push
pop
clc
lds
xor
enter
into
shlb
cmp
pop
sbb
shlb
lock
adc
add
and
or
add
adc
stos
pop
add
xor
ret
fildll
push
cmp
adc
pop
cmpsl
stos
jo
push
addb
add
sub
push
and
push
sar
sbb
inc
insl
fs
or
aam
push
str
sbb
add
ds
or
or
jo
sbb
outsl
cwtl
or
outsb
loopne
out
bound
cs
sbb
pop
ror
inc
mov
cmp
add
push
lahf
into
lock
and
mov
and
shrl
out
push
je
mov
pop
leave
or
sbb
mov
movsl
pop
mov
and
rcrb
outsb
jne
pushf
imul
dec
test
xor
push
out
push
dec
push
xchg
das
arpl
jmp
push
lea
pop
out
adc
inc
xor
add
jp
shrl
adc
das
das
jo
lahf
pop
inc
scas
leave
add
jae
lods
shlb
test
iret
movb
or
and
pop
shrb
sub
push
imul
insb
push
jae
inc
iret
fisttpl
das
or
out
dec
lcall
out
ljmp
inc
jge
outsb
xor
sbb
enter
scas
je
adc
cmp
int
aam
fidivrl
pop
add
test
out
mov
mov
push
mov
imul
int
jnp
add
push
cmp
in
adc
pop
jne
dec
or
add
data16
orl
test
jne
pushf
push
outsl
lock
dec
dec
dec
dec
push
pop
test
cs
cmp
mov
and
xchg
jo
cvtpi2ps
sub
insb
addr16
mov
push
inc
inc
pop
daa
fsubrs
mov
js
cmp
pop
fldl
and
stos
and
sub
inc
ret
sub
or
data16
pop
iret
pusha
aad
push
push
out
jge
cmp
pop
int
inc
jl
cmp
fidivs
push
pop
xor
int3
dec
cmp
xor
cmp
jge
and
les
mov
cmp
sar
sahf
filds
add
dec
and
jns
add
fs
mov
out
push
inc
inc
adc
pop
pop
add
gs
mov
pop
mov
mov
adc
fstpl
jne
dec
jne
orb
add
adc
jo
inc
das
add
bound
push
cmp
nop
inc
push
into
mov
into
cmpsl
xchg
popl
mov
addr16
push
jne
xor
mov
jae
push
adc
xor
clc
sbb
cmp
insb
sti
and
jbe
push
jo
dec
inc
aas
pop
imul
mov
decl
dec
xor
scas
pop
pop
inc
dec
dec
cwtl
std
sbb
pop
dec
inc
inc
push
mov
inc
inc
push
inc
inc
ss
das
loope
xorb
incb
mov
jp
push
pop
xchg
xchg
sbb
sti
imul
and
push
xor
cmp
adc
and
add
out
fldcw
sbb
ljmp
push
push
jp
mov
fisubrl
push
arpl
out
push
ja
jno
cltd
jbe
out
ss
scas
pop
movl
in
mov
dec
push
jbe
neg
add
insb
push
mov
xor
add
mov
mov
arpl
jo
mov
or
fs
arpl
mov
jo
incb
scas
inc
aaa
jl
jo
insl
jne
xchg
sub
imul
mov
pop
add
ret
inc
inc
jb
add
sbb
adc
bound
xor
lahf
and
push
dec
pop
pop
push
cmp
jne
jae
jo
mov
sbb
ret
mov
jne
dec
or
decl
rclb
into
push
inc
sub
and
cltd
imul
sub
push
push
sbb
adc
insb
cmovbe
in
cwtl
imul
outsb
pop
dec
jg
pop
sarb
out
popa
mov
xchg
pop
test
gs
sbb
mov
or
data16
imul
aas
jg
arpl
lret
pushl
fimull
leave
ds
out
jg
insl
add
add
repz
outsb
xor
std
sub
outsl
fs
push
sti
movsl
mov
insb
fs
cmp
inc
jo
jne
sub
leave
ret
xchg
gs
inc
fsub
cmpb
xor
imul
sahf
daa
popa
sub
nopl
add
xor
addr16
lfs
xor
add
cmp
cmp
add
pop
mov
and
push
mov
xchg
fs
and
push
xchg
inc
dec
in
fwait
mov
mov
test
mov
das
out
fcmovu
in
out
push
fistl
outsl
test
lcall
push
add
pop
add
push
call
out
add
and
cmp
ja
and
add
in
push
push
pop
push
and
add
lods
stc
or
pusha
add
add
inc
out
into
xchg
add
sbb
shlb
mov
stos
mov
sbb
outsb
subb
push
adc
bound
jbe
mov
push
in
push
dec
mov
rolb
sbb
inc
push
add
sbb
pusha
outsb
jl
and
loope
xor
mov
addb
insb
mov
orb
mov
movsb
mov
push
mov
mov
pop
mov
fiadds
xor
fcoms
jne
daa
cmpsb
nop
sbb
pop
or
nop
dec
xor
inc
lods
mov
leave
mov
adc
sub
sub
pop
xchg
fwait
mov
and
inc
fmuls
dec
dec
inc
add
mov
andb
jg
dec
sbb
scas
sub
xor
cs
adc
lcall
pop
or
and
daa
test
sbb
xor
shlb
sub
clc
add
mov
and
cwtl
ss
jecxz
addb
loopne
pop
in
sub
scas
and
cmp
push
mov
add
daa
pusha
mov
jmp
repnz
add
pushf
pusha
js
mov
sub
loopne
lock
mov
ss
leave
outsl
adc
xchg
or
fildll
outsb
frstor
sbbb
jbe
or
mov
push
aas
rolb
test
or
sub
lahf
fldl
nop
pop
jo
xorb
movsb
jg
movsb
iret
fs
dec
shrb
sub
lahf
adc
sub
cmp
adc
insl
daa
mov
shl
mov
jg
insb
or
cwtl
insl
mov
xchg
add
js
call
add
adc
loopne
leave
or
push
and
bound
movsl
push
jb
dec
nop
test
loopne
jmp
shlb
movsl
jg
movsl
jnp
xor
sahf
in
add
xor
mov
xchg
xchg
dec
daa
ja
cmp
cmp
outsl
dec
cmpb
cmpb
scas
mov
mov
shrb
out
fsubrs
push
add
outsb
xchg
daa
mov
dec
dec
adc
jo
adc
outsb
xchg
inc
daa
enter
shll
outsb
push
mov
cwtl
das
xchg
bound
daa
shlb
call
fldl
pop
and
cmp
push
push
jb
outsb
daa
cmp
enter
scas
push
test
shr
mov
add
push
cmp
daa
or
pushl
pop
mov
lahf
xchg
test
lahf
or
sub
fistl
cmp
pop
xchg
js
dec
daa
fcoms
add
cs
mov
push
out
jmp
xacquire
out
mov
pushf
pusha
js
cmpsl
iret
call
cmp
je
adc
cmp
cmp
and
pop
mov
push
jb
mov
pop
leave
jae
add
outsb
and
inc
add
cmp
add
shlb
adc
jne
push
daa
sub
add
jne
mov
mov
lahf
xchg
mov
dec
xor
test
inc
test
inc
daa
mov
jbe
dec
repnz
pusha
daa
test
scas
mov
mov
xchg
mov
bound
or
jbe
lahf
or
xchg
ja
cwtl
mov
push
mov
dec
ja
jb
adc
adc
xorb
lahf
mov
test
clc
sarb
ss
jno
ja
call
sub
mov
xor
and
pop
add
rcrl
test
push
mov
in
nop
js
lahf
add
mov
mov
lahf
xchg
sbb
jns
test
enter
pop
and
or
mov
cmpb
mov
lahf
xchg
in
shr
das
nop
pop
mov
clc
lahf
loopne
jp
dec
dec
and
jp
dec
xchg
adc
stos
iret
jo
fidivrs
xchg
mov
enter
jp
fidivrs
daa
inc
stos
pop
repnz
add
jnp
jnp
icebp
jbe
cmpsl
push
daa
pusha
stos
pop
inc
faddp
push
js
add
nop
adc
fnsave
daa
subb
nop
jnp
lahf
xchg
xchg
adc
or
inc
stos
adc
push
fwait
sub
ja
daa
mov
je
mov
js
pop
and
ds
push
adc
lock
pop
and
dec
scas
nop
lock
jge
in
adc
cmp
dec
push
push
and
and
push
call
fistps
andb
js
repnz
lahf
popf
or
in
xchg
aas
iret
nop
fwait
leave
adc
fmuls
pop
sbb
in
mov
mov
dec
jb
adc
or
shl
mov
pusha
xor
or
mov
cmp
int
pop
add
addb
push
leave
pop
sub
cwtl
jg
mov
add
enter
inc
fiadds
sti
out
add
or
xor
aas
cmp
pop
dec
pop
cmp
popl
daa
push
lods
fstpt
js
jo
in
jns
pop
push
test
ja
shr
bt
mov
sahf
add
add
push
or
loopne
iret
and
mov
int3
sbb
add
int3
iret
repnz
dec
or
jb
into
adc
data16
daa
iret
jae
add
mov
rep
daa
xchg
dec
mov
ds
mov
or
loopne
scas
cmp
repnz
pop
add
dec
or
popf
or
push
push
cmpsl
xor
in
in
sahf
add
add
das
sbb
dec
push
jne
call
nop
dec
lock
mov
adc
scas
nop
out
inc
lock
dec
jo
cmp
add
invd
into
scas
adc
scas
pop
and
fisttps
cmp
fadds
into
pop
orl
outsl
daa
iret
add
pushf
xchg
and
test
into
orl
xchg
pop
test
or
test
dec
repnz
inc
pop
jb
and
test
sub
mov
js
cs
inc
cs
lds
xchg
or
dec
add
aaa
or
mov
adc
and
incl
fmull
pop
or
pop
into
leave
pusha
push
cmp
inc
push
add
in
nop
cwtl
mov
in
pop
fcomp
ror
scas
lods
nop
sarl
xchg
loopne
mov
pop
xchg
pop
adc
rorl
xor
scas
fadd
mov
push
pop
pop
loopne
and
fnstcw
shl
nop
daa
push
add
sbb
iret
lods
cmp
sub
not
iret
cmp
fmul
add
adc
out
add
cs
cmp
dec
iret
repz
or
data16
repz
orb
repz
repz
push
lods
iret
repz
adc
adc
adc
lcall
add
adc
push
push
sbb
sub
jns
out
cmp
inc
sbb
sbb
jo
sahf
out
jle
mov
ds
mov
mov
pop
add
enter
add
decl
aam
aam
aam
aam
xchg
and
aam
aam
aam
cmp
push
js
xchg
xchg
aam
and
mov
aam
jb
enter
aam
aam
aam
out
sbb
aad
push
adc
adc
cs
cmp
dec
out
sahf
out
pop
sbb
sahf
out
sahf
je
sbbb
jns
out
sahf
push
lods
pop
mov
and
add
mov
push
das
adc
cltd
popf
das
or
pop
push
inc
outsl
jo
in
or
pop
and
cmp
filds
xor
js
add
pop
mov
adc
mov
inc
cmp
fdivr
incl
loopne
popl
mov
fmull
or
pusha
push
mov
js
pop
jg
or
mov
mov
test
mov
nop
imul
loopne
rclb
and
add
clc
and
mov
and
in
push
mov
pusha
xlat
clc
dec
push
and
add
nop
and
test
pop
leave
xchg
cmp
rorb
xlat
das
mov
enter
inc
fcoms
pop
fsubrs
dec
je
fsubrs
pop
or
ljmp
cmc
push
std
movd
dec
pop
or
adc
adc
adc
imul
fists
dec
add
pop
and
inc
dec
sahf
adcl
cmp
rcr
sbb
cmp
das
out
psubw
add
psubusw
fstps
fsts
or
fcos
pushf
loopne
dec
dec
pusha
fldcw
inc
mov
jle
mov
pop
jb
cmp
xchg
lahf
or
mov
ja
jb
ret
rorl
add
xchg
pop
fmull
dec
cmc
mov
repz
or
and
add
jo
inc
ficoml
sarl
addps
out
in
jne
mov
add
test
popf
mov
xchg
mov
loopne
lock
mov
add
sub
scas
dec
cmp
pop
push
push
add
xchg
leave
and
jg
fistpl
pop
mov
jmp
lcall
das
mov
adcb
and
scas
fcoms
dec
call
lahf
loopne
nop
adc
sub
xor
fldt
cmpsl
inc
cmovle
cmp
jns
pop
add
fsubrl
sbb
jb
mov
and
fdivr
xchg
jg
fxch
adc
fstpl
shrb
push
or
outsb
pop
sub
add
pop
mov
add
dec
push
push
mov
out
iret
xor
and
inc
inc
cs
repz
shlb
add
lahf
cs
jnp
xchg
loopne
xchg
push
aas
pushf
cmpsl
fstl
pop
mov
jg
lahf
rcr
or
outsb
lahf
rcr
in
fstpl
adc
dec
and
xor
push
push
fisubrs
pop
fisubs
pop
mov
sbb
fidivrs
nop
popl
bts
or
dec
scas
nop
lock
push
fisttps
cmp
pop
xor
dec
pop
push
in
sub
xorb
dec
shrb
rclb
call
jmp
or
xor
iret
mov
out
pushf
loopne
push
add
das
clc
dec
inc
in
mov
and
pop
and
add
inc
scas
dec
adc
pop
jg
leave
adc
jnp
pop
pop
and
push
enter
mov
js
fsubrl
sar
fmuls
jecxz
cmp
sahf
stc
loopne
rcrb
sub
loope
cwtl
xchg
ds
cltd
jns
dec
leave
cmp
xor
sub
js
cwtl
test
push
mov
sbb
xchg
clc
mov
loope
sbb
aas
bound
aas
dec
lcall
jo
fldenv
mov
cwtl
lcall
ror
lcall
clc
lcall
loope
push
outsl
xor
and
sub
ss
mov
loop
scas
pop
stos
mov
in
or
rcrb
test
cwtl
pop
mov
jo
ror
sub
dec
push
scas
nop
imul
mov
nop
enter
pushf
test
jecxz
leave
sub
mov
sub
leave
enter
popf
js
and
test
outsb
sbb
rcrb
bswap
jecxz
jecxz
pop
pop
pop
loope
in
jecxz
jecxz
in
pop
pop
pop
or
in
in
pop
pop
pop
cmp
inc
in
in
in
pop
pop
pop
gs
in
in
in
pop
pop
pop
xchg
in
in
in
in
pop
pop
pop
mov
in
pop
pop
mov
out
icebp
in
in
out
pop
pop
in
push
pop
sbb
jns
and
and
out
sahf
out
dec
and
and
pop
es
jne
jns
out
subb
sub
sub
out
sahf
mov
ret
xor
sbb
mov
dec
sbb
js,pt
out
mov
vmovdqu
out
out
out
xchg
and
out
out
out
cmp
addr16
out
out
out
and
lahf
out
out
out
jb
enter
out
out
out
inc
mov
out
out
out
adc
enter
out
out
pop
ja
in
mov
add
and
jns
add
repnz
adc
mov
fadds
mov
aas
sbb
xor
sti
push
call
jmp
test
inc
dec
pop
jb
pop
nop
pusha
mov
and
inc
pop
jb
or
cs
pop
and
sbbb
and
pushf
sbb
ja
pop
xchg
ljmp
sbb
jb
jmp
mov
inc
lods
jmp
repnz
into
jmp
jmp
out
jmp
adc
cmp
cmp
ljmp
scas
cmp
iret
jns
aaa
cmp
out
push
push
push
pop
add
push
jle
cwtl
push
xor
mov
lods
mov
mov
shr
jmp
dec
testl
adc
scas
sbb
pop
add
rcrl
pop
inc
mov
jmp
mov
jae
push
jb
cmp
mov
setnp
iret
jae
add
mov
pop
fmull
sarb
push
js
push
lock
movups
and
push
outsl
in
call
mov
jmp
paddsb
xchg
sub
lock
push
and
adc
pushf
pop
and
add
mov
loopne
ror
adc
pop
enter
mov
lcall
in
repnz
in
xor
dec
cmpsl
mov
xor
in
pop
sub
pop
mov
decl
sarb
test
rcrb
xchg
pushf
jmp
testb
sub
bound
mov
jmp
xlat
scas
pop
outsl
push
dec
mov
test
test
dec
pop
push
xor
fsubrs
andl
test
iret
mov
repz
pop
push
in
mov
jae
loopne
dec
add
xchg
fcomps
test
out
and
pop
seto
xchg
inc
cmp
push
lahf
ljmp
out
out
outsl
clc
test
adc
jne
sub
pop
inc
push
xor
dec
pop
push
fildll
addb
lahf
imul
in
mov
and
push
aam
xor
adc
in
pop
fidivrs
iret
leave
xchg
sbb
push
stos
push
push
sbb
pop
iret
push
cmp
adc
shrb
nop
out
lcall
and
out
ljmp
daa
cmp
mov
cmp
out
ds
pop
aas
fcompl
cmpsl
in
xor
mov
in
sub
in
sub
lock
leave
adc
sbb
rclb
inc
cmpsb
lock
jo
inc
cs
inc
cmp
inc
cs
pop
cmp
inc
pop
and
lds
lcall
icebp
add
addr16
sbb
and
cs
pushf
pop
mov
jg
pop
adc
icebp
ljmp
pop
fcmovne
orb
pop
mov
shrb
loopne
cmp
lock
iret
mov
repnz
mov
test
fcoms
sub
push
mov
jo
mov
cmpb
fisubl
dec
ja
or
or
cmp
push
dec
lock
pop
adc
adc
and
lsl
repz
mov
fisttps
test
insb
ret
add
mov
xor
and
repz
lods
movsl
xchg
inc
push
rep
les
aam
ds
icebp
push
scas
mov
mov
add
adc
pinsrw
xlat
rorb
add
pop
mov
ds
mov
cwtl
repz
mov
repz
fcomi
jmp
repnz
hlt
das
hlt
repnz
hlt
addr16
cmp
repnz
xor
adc
adc
adc
add
leave
pop
push
xlat
hlt
sub
hlt
hlt
aaa
repnz
sbb
adc
es
outsl
shrl
fiaddl
mov
jb
dec
loopne
mov
push
sbb
in
nop
outsl
sbb
outsl
mov
mov
loopne
call
popl
test
xor
dec
xor
bound
divps
imul
mov
mov
test
mov
enter
and
pop
loopne
shrb
xor
movsb
mov
testl
scas
add
enter
inc
idivl
xchg
cmp
dec
sahf
add
push
mov
inc
cmpsb
cmp
div
idivl
cmp
or
rcr
fsts
cld
or
pop
sub
cmpsl
clc
call
dec
sub
push
orb
dec
js
jns
scas
nop
mov
je
or
psubsb
and
paddd
stc
inc
enter
mov
xchg
stc
sub
pop
inc
scas
pop
and
dec
jo
lcall
sbbb
enter
and
das
mov
dec
pop
push
repnz
inc
mov
push
repnz
jo
fsubs
out
arpl
add
mov
out
and
jg
imul
push
dec
add
jo
nop
jo
push
cmp
inc
scas
fstpl
mov
nop
sub
fmuls
mov
cli
adc
cmpsb
push
mov
enter
sti
call
pop
dec
xchg
xchg
sub
inc
pusha
push
jo
jl
xchg
sub
mov
sub
rcr
aam
in
repnz
jb
dec
xor
pushf
add
addl
sbb
aas
push
fidivrs
jae
lds
mov
mov
jns
mov
mov
mov
mov
sbbb
fdivs
cwtl
dec
jmp
iret
je
scas
enter
or
leave
mov
in
mov
mov
repnz
std
pop
jb
dec
loopne
or
sub
mov
pop
push
cs
test
cs
mov
mov
fidivrl
clc
ds
cmp
xchg
shlb
pop
mov
aas
rorb
xlat
fidivl
aas
push
subb
sub
sub
stc
pop
enter
clc
fmull
mov
cmp
sub
aad
push
sarl
jmp
in
in
std
ljmp
mov
fs
and
push
lock
inc
ret
push
pop
lahf
test
pushl
dec
subb
dec
and
scas
test
decb
xchg
sub
mov
xchg
or
fs
out
adc
sbb
pop
pop
adc
jnp
shrb
pop
loope
pop
daa
push
incl
ret
adc
dec
cwtl
leave
adc
lods
leave
adc
dec
cmpsb
cwtl
inc
dec
aam
scas
nop
dec
scas
call
nop
dec
mov
cmpxchg
pop
push
enter
sysenter
mov
enter
lds
scas
pop
stos
decl
js
mov
nop
call
movsb
mov
mov
nop
and
test
lock
dec
pusha
iret
fidivrs
pushl
in
and
rolb
mov
lock
sbb
push
enter
inc
mov
push
adc
cwtl
aam
test
bswap
clc
dec
dec
repnz
enter
inc
and
inc
cs
sub
decl
adc
adc
pop
insb
push
mov
mov
aas
push
in
jo
ds
or
out
orb
daa
daa
mov
ficoml
sub
xchg
mov
sub
mov
leave
mov
or
inc
push
xor
imul
lret
mov
sbb
mov
mov
cs
and
mov
lcall
mov
nop
add
xchg
adc
xchg
add
add
scas
fsubs
or
out
lods
sbb
dec
dec
mov
dec
or
sub
decl
scas
nop
imul
sbbb
push
enter
add
fmul
out
call
dec
add
pop
ja
adc
adc
int
pop
test
leave
addr16
int
int
sub
dec
mov
das
mov
add
sbb
enter
loope
push
jns
into
sub
inc
xchg
outsl
cmp
sub
xchg
test
mov
in
mov
daa
mov
dec
mov
daa
jb
mov
nop
iret
xchg
insb
ss
in
jecxz
adc
ds
xor
in
adc
xor
pop
shlb
int3
es
fidivrl
es
ja
out
imul
jnp
fmull
es
test
push
sbb
in
cmp
imul
lock
xchg
lods
xlat
or
sbb
ljmp
lcall
push
outsl
jne
faddl
add
add
sbb
in
mov
sbb
mov
jne
inc
imul
dec
mov
es
dec
pop
faddl
insb
clc
dec
inc
imul
mov
pop
add
xlat
ret
pushf
jb
ss
cmp
fcmovnu
mov
imul
shr
inc
nop
add
xchg
add
push
dec
fists
xor
insb
push
outsb
dec
push
outsl
fisttps
dec
sbb
xchg
mov
ljmpw
imul
in
test
mov
sub
data16
dec
lret
rcll
ret
mov
cs
scas
inc
js
or
enter
push
inc
outsb
ss
and
xor
addl
int3
movsb
add
dec
xchg
dec
shl
jo
inc
ret
mov
sub
mov
sbb
movsb
shlb
loope
jmp
add
js
and
rcrl
cmp
stc
add
cld
sub
ret
adc
inc
jmp
or
je
mov
pop
nop
push
rol
imul
add
pop
andl
dec
add
push
pop
aad
pop
cwtl
mov
sub
mov
pop
mov
mov
xchg
gs
movsb
loop
jbe
jmp
mov
mov
push
adc
push
sbb
lea
dec
add
test
imul
sbb
mov
in
push
push
stos
lea
test
or
das
add
and
hlt
sahf
adc
sub
jae
pusha
arpl
xchg
inc
outsl
inc
int3
aam
push
mov
lods
add
add
je
xor
xchg
ret
imul
or
repnz
pop
int3
imul
add
push
push
and
js
rcll
pop
jno
adc
jnp
sbb
push
inc
push
outsl
push
mov
push
fcompl
cmpl
pop
js
fstps
sbb
mov
pushf
sub
imul
sbb
out
outsb
or
add
sbb
dec
cmp
dec
sbb
aaa
in
outsl
jo
xor
ret
sbb
imull
jo
aam
mov
or
imul
sahf
and
lcall
ret
ds
xchg
mov
or
gs
mov
inc
cmp
pop
xor
imul
and
or
mov
inc
jl
xlat
cmpl
test
mov
mov
adc
std
inc
es
lcall
clc
sub
pusha
ss
cmpsl
sbb
mov
dec
ret
pop
popf
pop
mov
pop
mov
push
or
add
fs
fmuls
ret
pop
fs
pop
pushf
xor
add
rclb
jbe
data16
lods
ds
pop
mov
and
gs
and
addr16
jae
cmp
xor
sbb
icebp
inc
das
push
arpl
or
push
stos
dec
pop
push
nop
push
es
add
and
fwait
outsb
je
in
sbb
pop
jo
ret
push
pop
int3
push
dec
add
xchg
add
sbb
out
pop
jo
cwtl
shll
lahf
and
sbb
xchg
sbb
dec
rol
jns
cmp
mov
or
inc
or
cmpsb
scas
or
outsb
sbb
xchg
push
nop
rcll
pop
into
and
cltd
pop
add
popa
push
adc
dec
and
sub
push
fldl
add
das
cmp
jb
mov
and
lcall
imul
mov
sti
sbb
adc
cmpsw
add
mov
outsb
sbb
arpl
inc
lock
and
test
dec
xchg
dec
sbb
push
jne
leave
pop
sub
ss
popf
cmpsb
adc
fdivl
loopne
xor
insb
pop
addr16
divl
mov
les
add
mov
sub
mov
lods
mov
cmp
adc
js
ljmp
mov
orl
es
movl
ds
dec
inc
mov
rorl
adc
imul
inc
pop
push
cwtl
fs
or
ss
push
lea
sub
xchg
push
adc
ret
insl
aas
pop
lea
aad
fcoms
imul
addr16
mov
sbb
aam
cmp
cltd
mov
cwtl
imul
and
and
add
push
inc
mov
jne
cmp
fs
test
push
movsb
bound
sahf
mov
push
lcall
adc
insl
popa
loopne
insb
or
jo
imul
add
test
add
xor
add
push
mov
pop
popa
pop
clc
das
push
add
sub
clc
outsl
dec
push
sub
adc
pop
popa
jle
dec
sbb
and
push
loopne
insb
mov
mov
adc
fiadds
xchg
or
incl
dec
jb
test
pop
inc
ds
xor
cmpsb
fs
adc
mov
mov
cmp
es
popa
or
dec
dec
test
push
xchg
outsl
loop
data16
aaa
push
jb
bound
mov
inc
jnp
test
ret
jge
xchg
add
dec
inc
ret
cmp
mov
dec
mov
xor
adc
and
dec
dec
sbbb
push
dec
pop
ror
cmp
mov
pusha
xchg
pop
cmpsb
add
rorb
pop
push
dec
push
xor
inc
imul
or
inc
imul
loop
repnz
dec
cmp
movsb
stos
xor
xchg
push
push
push
dec
pop
xlat
and
adc
testl
adc
xlat
jmp
jns
push
imul
call
repz
loopne
mov
call
sbb
xor
mov
pop
push
cmc
sti
inc
cmp
mov
inc
inc
icebp
loope
dec
add
push
lods
mov
fmuls
shlb
or
sar
shll
in
cmp
mov
cmp
subb
push
das
inc
or
fldenv
imul
lret
mov
jg,pt
and
mov
push
xchg
mov
mov
inc
test
and
mov
jmp
and
add
repnz
xor
es
pop
sub
lahf
jg
outsb
jo
fdivs
cmp
add
xor
sbb
in
inc
xor
sbbb
fmuls
jmp
mov
roll
mov
repz
dec
xchg
dec
lahf
sbb
push
lock
arpl
rcrb
xchg
cs
mov
loopne
add
inc
jg
push
dec
dec
dec
cs
push
push
lock
jo
jp
lea
popf
jae
pop
add
pop
sbb
sub
mov
adc
push
fisubl
pop
jp
roll
out
daa
and
push
inc
push
lds
adc
xchg
jbe
add
cmp
pop
pop
sbb
out
pop
outsl
push
dec
inc
dec
test
xchg
fdivl
add
sub
mov
shll
leave
and
outsl
sbb
dec
push
push
jnp
inc
push
push
mull
add
pop
iret
add
push
push
xor
mov
orl
dec
and
fs
jae
pop
inc
lcall
pop
sub
cmpl
stos
add
add
int3
loop
adc
pop
add
pop
sub
inc
pop
pop
push
inc
fdivs
xchg
add
jmp
insb
loope
push
xchg
je
testl
ja
mov
outsl
stos
fisubrl
inc
jne
inc
pop
enter
push
cmpsb
int
cmc
xchg
popa
bswap
and
dec
popw
incl
add
xchg
dec
int
imul
mov
cs
jae
dec
jg
and
jb
dec
mov
scas
add
push
into
cld
cs
xchg
flds
push
xor
mov
pop
xchg
mov
sarb
cmp
movsb
cmp
rorb
adc
dec
mov
add
xor
adcl
insb
movb
push
push
bound
adc
imul
popf
lock
mov
xor
call
sbb
lcall
test
pop
add
push
popa
pop
sub
loopne
aaa
jo
or
pop
xchg
push
aas
xor
loope
pop
push
inc
lds
mov
dec
imul
push
sti
mov
add
insl
jnp
ret
lock
stos
push
shll
add
jo
cmp
clc
lahf
mov
cmpsb
sbb
test
jnp
cmp
add
mov
in
or
addr16
bound
das
loope
aad
popf
scas
lret
fwait
sbb
repnz
jle
pop
daa
bound
jecxz
ds
or
jge
rcrb
mov
out
jg
add
push
mov
lock
sub
mov
and
lods
cmp
add
sub
sub
mov
add
push
mov
in
or
jl
jae
add
rolb
movsl
pop
and
lea
clc
mov
scas
je
cs
add
call
jb
push
fmull
or
sbb
mov
xor
xchg
xchg
mov
sahf
or
jb
dec
fldenv
andb
jns
add
mov
mov
ret
int3
mov
jbe
outsl
jge
stos
mov
out
add
jo
test
sub
popf
pop
pop
push
and
mov
mov
dec
in
xor
adc
addr16
add
sub
imul
adc
mov
push
mov
sub
xchg
add
dec
xchg
aas
jae
adc
inc
dec
inc
test
inc
jmp
or
adc
dec
insb
push
pop
movsl
mov
and
inc
push
add
mov
adc
loopne
aas
dec
jecxz
add
mov
push
jmp
push
and
mov
xchg
mov
add
mov
or
sub
test
and
xor
fdivl
popa
cmp
lea
rol
daa
mov
imul
out
or
cli
pop
in
cmp
lcall
add
je
mov
push
jb
adc
stos
movl
add
loope
dec
dec
xchg
xor
into
sub
jmp
cmp
in
and
cmp
loop
fmuls
mov
xchg
mov
in
out
cmc
push
mov
fcomp
ret
shll
sub
pop
stc
and
shll
jae
daa
sbb
cmc
cwtl
add
and
js
insb
jne
and
mov
call
push
test
push
dec
mov
je
add
push
aas
mov
dec
mov
fcmovbe
mov
sbb
adc
inc
dec
and
das
test
sub
inc
xchg
or
jo
add
popa
in
daa
cmpsb
pop
das
or
test
fs
adc
jg
or
pop
sub
sub
stos
addr16
mov
jnp
scas
push
in
push
lock
call
or
pop
sbb
andb
pop
xor
jb
movsb
int
mov
jmp
sub
out
push
fwait
mov
mov
fnstcw
cmpb
push
adcb
and
cmp
add
out
fiaddl
add
adc
mov
stos
sarl
inc
fiaddl
push
lods
mov
xor
ds
xchg
rorb
xor
icebp
test
jnp
in
sbb
mov
int
cmp
ss
xor
lret
add
negb
xor
aaa
dec
add
xor
xorl
shlb
imul
ds
cmp
fs
dec
xor
add
pop
add
jbe
or
aam
std
lds
jecxz
scas
mov
cmpsl
int
filds
pop
rol
jecxz
mov
lret
into
in
mov
fbstp
data16
fcmovnb
stos
paddd
outsl
addr16
lret
ror
ret
loop
mov
nop
mov
mov
mov
mov
sbb
loopne
int
mov
into
sbb
mov
sub
cmpsl
jp
push
out
int
fs
ljmp
lret
or
ret
jmp
or
pop
push
inc
push
lods
divb
lret
inc
add
mov
sub
push
dec
fists
and
push
add
clc
mov
pop
jae
leave
iret
jo
push
imull
clc
mov
jb
jbe
shll
les
es
or
sub
fsubrs
sub
sub
dec
incl
mov
mov
mov
mov
aam
jns
jmp
jle
movsb
repz
out
insb
push
adc
cmp
stc
cmp
mov
dec
and
mov
push
mov
daa
sbbb
jmp
cmp
andb
jb
popf
out
pop
dec
idiv
sub
pop
jmp
cmp
scas
jmp
push
sarl
pop
cwtl
sbb
ja
stos
dec
push
jmp
and
push
or
shll
xchg
cli
cld
addl
push
sub
jmp
sbb
sub
loopne
or
ret
mov
test
addr16
mov
lea
push
daa
leave
mov
testl
cmpsl
icebp
or
add
mov
mov
inc
push
jne
dec
pop
or
add
outsl
stc
adc
lar
inc
pop
scas
notb
testl
mov
icebp
sub
sub
mov
adc
movsb
rorb
add
and
addr16
decl
add
mov
xlat
inc
or
aad
inc
mov
daa
push
outsb
push
add
push
or
and
push
mov
clc
mov
jmp
das
or
mov
mov
dec
or
adc
test
sub
stos
dec
add
imul
mov
mov
daa
push
test
addr16
movsb
sub
sbb
mov
add
aam
adc
push
inc
adcb
adc
xchg
jg
mov
add
add
adcl
sub
ljmp
and
adc
xchg
or
push
dec
out
push
rolb
out
imul
testl
xor
sbb
add
ljmp
stos
push
mov
adc
lods
add
pop
nop
arpl
daa
nop
mov
add
rclb
movsl
mull
adc
rorl
ja
push
add
sahf
add
insb
add
add
xor
xchg
das
add
js
xchg
data16
jg
sbb
pop
ljmp
ljmp
popa
xchg
xlat
and
mov
push
mov
lods
test
xchg
jo
and
cwtl
jno
and
or
jmp
roll
daa
push
add
pop
push
push
adc
adc
mov
xlat
lahf
adc
mov
and
dec
or
das
dec
or
lods
add
jno
out
jns
filds
paddw
out
incb
btc
rclb
stos
dec
sahf
imul
ja
andnps
pop
repnz
testb
inc
push
adc
dec
insb
call
shrd
push
or
or
idivb
out
mov
repnz
sub
jbe
pcmpgtd
jl
icebp
add
out
ds
out
mov
and
xor
and
add
mov
xchg
stos
add
pop
cltd
add
cmp
mov
jae
addr16
mov
mov
in
fstl
xchg
lock
push
xor
add
jb
sbb
push
ja
daa
add
cs
scas
ret
cld
push
jnp
adc
cmp
pop
add
jg
cld
cmp
ljmp
add
add
aad
push
push
jge
fidivrs
mov
add
ja
mov
cmp
sbb
push
emms
mov
ja
repz
fiadds
sti
shrb
add
data16
outsb
xlat
or
cmp
push
flds
roll
bound
movswl
add
xchg
ja
xchg
jmp
push
frstor
notl
incl
jecxz
orb
mov
mov
jo
add
scas
add
mov
or
pop
xor
add
mov
mov
adc
and
push
and
pop
and
adc
xchg
jno
push
add
les
dec
cmp
push
sti
jb
push
jne
xor
repz
jbe
push
and
mov
test
pop
sub
push
cli
push
insb
dec
xor
orb
dec
cmpsl
pop
push
inc
dec
mov
and
daa
in
ljmp
inc
adc
dec
xchg
xor
or
add
stc
push
and
mov
enter
dec
incb
jns
pop
hlt
push
cmp
xor
and
sbb
pushf
out
add
and
jo
cmovno
adc
add
xor
mov
mov
lret
stc
int3
loope
test
inc
mov
data16
sar
mov
mov
mov
repz
test
in
lcall
neg
dec
push
into
lods
sub
push
shl
repnz
xor
fistpll
mov
and
xchg
popa
or
pop
or
shrb
rcrl
mov
mov
ror
mov
mov
clc
popf
shlb
mov
mov
les
mull
sbb
scas
pop
sti
int
daa
inc
setnp
dec
xlat
rcl
out
mov
jae
into
mov
mov
fsubs
aad
pop
scas
mov
push
mov
stc
mov
mov
orl
aas
mov
dec
popa
enter
mov
mov
ja
add
aad
push
ss
ja
xor
in
and
outsl
xorb
ljmp
xor
das
inc
push
es
fwait
loopne
std
jbe
stos
xor
shlb
cmp
mov
add
in
and
add
jp
ret
shr
fiaddl
pop
xor
sub
loope
or
stos
sbb
hlt
inc
inc
dec
push
sahf
push
xor
jbe
and
pop
cs
push
outsl
dec
sub
cltd
jne
and
or
sub
pop
jae
pop
into
pop
arpl
or
outsb
jp
sub
sub
or
fsubrp
outsl
cmp
push
dec
inc
pop
xchg
fneni(8087
pop
pop
shrl
add
add
cmp
sti
add
test
and
outsb
add
ror
es
add
sub
mov
not
or
xorl
dec
xchg
adc
fidivs
iret
rcrb
mov
mov
mov
lret
push
test
push
imul
hlt
mov
inc
jo
popf
jnp
cmpsl
mov
iret
mov
sarb
mov
sarb
jae
sbb
sub
add
pop
scas
push
bound
adc
or
and
mov
fbstp
push
cmpsl
and
add
add
add
aaa
es
clc
sbb
push
shlb
and
movsl
add
pusha
mov
push
and
mov
lcall
push
pop
dec
inc
dec
dec
add
pusha
cli
int3
push
sti
add
sar
mov
and
or
dec
mov
sbb
inc
inc
into
mov
dec
loopne
mov
ss
dec
dec
jle
das
xor
aaa
je
das
fcmovbe
stos
mov
add
pop
data16
mull
jge
adc
iret
or
and
push
hlt
push
or
xchg
aas
fs
xor
daa
add
and
and
orb
xor
xor
out
add
outsl
jl
enter
push
aas
pop
cmpb
add
pop
test
outsb
fstpt
aas
and
aas
decl
sbb
cmp
sub
push
aas
fwait
das
stos
push
mov
sub
pop
mov
pusha
or
mov
mov
aas
inc
and
xor
or
sbb
int3
mov
aas
arpl
push
push
pop
push
or
adc
jae
mov
push
xor
add
int3
dec
xchg
push
xor
and
fstpt
mul
adc
stos
cmp
push
or
fstps
pop
and
sub
push
and
xorb
pminub
sub
xor
gs
ljmp
or
sub
pop
mov
cli
jns
sub
or
fbld
hlt
push
push
data16
mov
test
sbb
fiadds
insl
jbe
pusha
adcb
cmp
and
mov
or
adc
pop
dec
mov
push
jb
adc
inc
cmp
pop
cmp
ljmp
mov
loopne
jnp
cld
mov
lods
inc
push
cmc
dec
mov
cwtl
pop
and
out
sbb
int
inc
popa
and
sbb
bound
mov
cltd
push
scas
sub
pop
sub
pop
shlb
fistpl
mov
mulb
or
add
pop
pusha
or
outsl
pop
loope
mov
mov
adc
ret
xlat
out
out
mov
decl
jnp
mov
xchg
ja
mov
das
pop
repz
push
jnp
repz
jecxz
mov
into
loopne
jp
or
and
push
pop
push
int
pop
data16
cltd
cltd
mov
add
sub
and
or
gs
jbe
and
inc
pop
push
push
addr16
lret
jnp
xchg
and
scas
test
push
addr16
into
pop
xor
int
push
mov
push
xlat
es
xor
push
ss
inc
lret
push
lock
or
or
xchg
test
rorb
lods
push
outsb
pop
push
push
xchg
lock
inc
add
cltd
stc
aam
push
mov
mov
orl
test
pop
dec
ja
nopl
jns
cmpsl
int
jg
add
add
mov
out
sahf
addb
clc
fisubrs
fimuls
xor
adc
mov
xor
or
aad
push
mov
iret
mov
mov
add
iret
repz
cmp
iret
repz
sub
sub
repz
or
and
sbb
iret
repz
sbb
iret
repz
or
or
repz
adc
add
cld
sahf
out
lcall
jns
out
lock
in
sbb
out
sahf
out
in
loopne
sahf
out
sahf
fcompl
sbb
out
rcrb
int3
and
out
sahf
out
les
shlb
out
sahf
mov
es
out
movsb
daa
mov
sahf
out
cwtl
sub
nop
sub
sub
out
test
xorb
out
sahf
out
js
je
sahf
out
sahf
jo
insb
xor
out
fs
pusha
pop
bound
mov
push
mov
jno
dec
add
and
mov
jg
pop
cmpsb
adc
pop
or
add
or
cs
add
adc
popa
pusha
fs
cmp
push
lcall
sbb
pop
sbb
sbb
sub
and
xor
sub
sub
xor
sub
sub
and
mov
bound
jp
outsl
sbb
sbb
sbb
push
pop
and
and
xchg
and
xor
pop
add
push
add
and
cmp
add
sbb
sbb
xchg
mov
add
and
jmp
pop
orb
wbinvd
or
or
push
fisubl
add
sbb
add
or
xchg
imul
sub
orb
sub
sub
xor
and
sbb
adc
adc
enter
aaa
add
adc
sbb
inc
mov
adc
es
enter
push
and
and
fidivl
in
push
adcb
sbb
sbb
sbb
or
sbb
sbb
sbb
imul
fwait
sbb
sbb
sbb
adc
add
nop
sbb
sbb
inc
sbb
lods
jl
aaa
and
and
add
and
or
and
sub
sbb
and
aaa
add
add
es
sub
and
pmulhuw
sub
mov
add
sbb
xchg
aaa
sub
std
xor
xor
subb
add
sub
jne
cmp
das
pop
sbb
sbb
lods
mov
sbb
cmp
in
xor
add
xor
pop
sub
xor
push
daa
jge
in
add
or
aaa
cmpb
adc
add
es
add
adc
jl
fcmove
cmp
add
sub
fcmovu
cmp
addb
add
inc
orb
out
add
adc
pop
lret
fwait
or
pop
and
inc
orb
add
push
cmp
nop
and
sbb
fsubrs
inc
adcb
inc
aaa
add
ss
dec
push
add
jnp
sahf
fldl
or
sbb
or
add
sbb
out
mov
dec
orb
add
dec
dec
add
mov
das
dec
pop
add
in
push
xchg
sub
or
sbb
sub
and
push
or
add
dec
ficoml
sub
cmpl
sbb
orb
sbb
fdivp
pop
xlat
and
push
push
push
push
pop
pop
daa
xchg
outsb
roll
pop
push
and
pop
add
sub
and
sbb
in
adc
xor
xor
pop
rcr
fstps
sub
sub
pusha
sub
popa
mov
add
bound
pop
cmp
addb
add
inc
fwait
addr16
xor
push
movsb
insl
fldl
push
adc
add
xor
adc
insl
add
lods
mov
add
adc
pxor
dec
jo
adc
jb
push
je
in
cmp
jbe
mov
gs
sbb
cmpb
mov
data16
add
sbb
add
les
enter
jnp
pop
push
ss
sub
xor
lcall
xor
jg
add
jnp
sbbb
and
mov
or
add
sbb
mov
add
mov
cmpl
xchg
xchg
sub
sbb
out
sub
and
fwait
xor
or
mov
add
and
sbb
lea
nop
sub
push
sbb
sbb
sti
imul
nop
adcb
in
fwait
xchg
and
add
sub
in
fadds
in
xchg
adcb
leave
add
daa
jb,pn
ss
sbb
aaa
xchg
sbbb
xorl
sub
cmp
orb
add
mov
and
sbb
add
mov
repnz
orb
and
mov
mov
movsb
sbb
movsl
push
cmpsb
andb
lret
rcll
cmpsl
test
sub
orb
jge
sub
das
xor
cs
and
mov
mov
lods
es
lahf
fistpl
or
scas
subb
or
add
push
stc
mov
sbb
add
or
and
add
or
or
mov
sub
leave
pop
imul
sub
add
or
mov
sub
add
in
sti
sub
xor
loop
add
add
enter
addb
sbb
cmpb
and
sbb
mov
sub
xchg
das
xor
mov
in
or
mov
add
sbb
add
ret
adcb
add
movb
mov
es
lret
mov
or
add
int
into
ja
in
rcrb
iret
shlb
and
lcall
sbbb
roll
pop
repz
aad
xor
daa
in
test
es
xorb
and
pusha
add
xlat
orb
fmul
xchg
xor
adc
xchg
out
enter
pop
xchg
sub
mov
sbb
and
sbb
out
adc
orb
add
in
mov
fdivl
and
addb
add
imul
jnp
add
sbb
sbb
imul
adc
loopne
loope
sbb
pop
and
ss
add
pop
cmpsl
sbb
pop
sbb
in
mov
adcb
add
orb
sub
push
pusha
ja
or
ljmp
arpl
adc
in
andb
sub
in
in
fwait
pop
xor
sub
push
sub
sub
fcmove
leave
sub
add
lods
repnz
repz
sub
cmp
pop
sbb
pop
push
nop
out
sub
sub
out
lods
testb
adcb
xchg
and
sbb
clc
sbb
stc
pop
sbb
insl
in
ja
orb
or
add
sti
cs
cs
add
adc
xchg
das
daa
sub
enter
sub
cld
orb
std
xor
xor
pop
sti
int3
ud0
and
sbb
jae
cmp
add
orl
pop
and
andl
add
add
add
insl
inc
scas
frstor
add
ss
inc
and
pusha
add
ss
mov
orl
adc
or
xor
pusha
aaa
lods
mov
sub
push
push
add
pop
and
and
sub
orl
sbbb
addl
scas
in
daa
adc
pop
mov
push
pop
shlb
pop
aaa
or
add
and
push
mov
sbb
add
cmp
sbb
add
and
rorl
sbb
addl
xor
and
sbbl
pop
ss
mov
pop
add
dec
cs
stos
faddl
xor
xor
daa
jbe
mov
and
cmp
add
and
in
aam
jbe
outsl
sub
subl
xor
xor
sub
xor
mov
sbb
out
cld
sub
sbb
orl
add
sub
and
and
pop
adc
sub
sbb
subl
xor
xor
mov
sbb
xor
add
xchg
and
sbb
xchg
pop
leave
lds
xor
add
sbb
sbb
ss
or
add
inc
repnz
cmp
add
addl
pop
lods
or
aaa
dec
ret
add
cmp
sub
cmp
add
and
add
xor
mov
push
pop
inc
cmpsb
add
sub
inc
orl
or
add
sub
jnp
inc
orl
ret
aaa
pop
aaa
or
push
and
orl
and
add
add
inc
mov
add
adc
or
outsb
dec
dec
sbb
jbe
mov
push
adc
adcl
outsl
pop
sbb
xor
add
ficoml
add
xor
xchg
push
push
rcrb
imulb
mov
or
and
fimull
inc
sub
in
adc
push
jb
pop
shrl
mov
or
or
sbb
push
aaa
adc
or
pop
mov
jbe
sbbb
push
lock
or
or
mov
rorl
xor
push
mov
data16
pop
sbb
or
add
movntps
sub
scas
addr16
cs
mov
mov
dec
addl
xor
or
or
sub
sbb
jo
adc
push
push
stos
or
xor
adc
xor
jnp
jp,pn
sub
sbb
xor
xchg
or
ret
push
fidivl
push
sub
fadds
push
mov
ss
es
add
rolb
in
xor
sbb
or
jne
inc
sbb
push
dec
push
inc
sub
mov
das
adc
loopne
push
add
mov
push
das
add
sbb
inc
xchg
adc
push
lock
orl
adc
aaa
push
cwtl
sbb
xor
xchg
notb
shlb
adc
and
ljmp
xchg
incb
and
sbb
or
ds
fxch
adc
inc
into
pop
ljmp
lcall
push
xchg
inc
adc
into
or
mov
sub
outsb
mov
and
push
push
sbb
fiadds
sbb
xchg
imul
inc
or
adc
mov
adc
push
ljmp
jp
pop
pop
pop
or
or
cvtpi2pd
mov
mov
mov
daa
out
into
push
sub
sbb
adc
sbb
adc
mov
or
adc
push
cs
and
mov
bound
cmpl
inc
shrl
sbbl
or
cmp
and
pop
addl
mov
pop
orl
add
xor
rol
xchg
ficoml
jbe
sbb
pop
lcallw
add
or
or
or
add
sbb
pop
ljmp
xor
jbe
sbb
or
mov
cmp
sub
adc
and
cmp
into
pop
push
ds
sbbl
adc
adc
xchg
inc
and
cmp
pop
pusha
adc
repnz
jp
add
pusha
push
and
scas
adc
movsb
push
fisttpl
or
out
push
mov
xor
pusha
or
cli
andl
stos
aaa
mov
or
push
sub
ljmp
push
jbe
arpl
sahf
test
jbe
ds
outsb
mov
out
pop
and
sub
xchg
push
push
and
stos
or
cs
gs
sub
push
inc
andw
pusha
push
or
jb
sahf
or
and
xchg
or
mov
xor
push
call
dec
push
sbb
push
pop
xor
xor
adc
enter
mov
add
and
jle
push
xchg
pop
cli
adc
rcrb
xchg
mov
add
add
sbb
lret
ret
fsubrs
sub
repnz
cs
imul
mov
lcall
adc
push
adc
in
xchg
mov
cmpsb
xchg
mov
scas
push
ficompl
cmpsl
inc
shll
push
sub
or
mov
insl
orl
test
or
scas
sahf
outsb
jecxz
ret
subl
pop
xor
inc
sbb
add
ficoml
add
lods
cmp
ds
das
mov
add
jb
js
and
sub
xchg
insb
xchg
leave
pusha
add
addl
sbb
xor
jo
fidivl
imul
adc
loop
push
imulb
shll
or
jno
xchg
or
add
jb
push
rorb
push
and
lahf
adc
sbbl
xor
outsl
push
add
xor
daa
or
or
popa
jno
inc
jbe
sbb
outsl
push
push
mov
or
cwtl
leave
pusha
rsqrtps
sbb
dec
xchg
cmp
mov
add
and
or
sbb
adc
adc
bound
leave
insl
or
mov
ja
into
aaa
scas
add
add
push
leave
hlt
fwait
lcall
jp
jle
leave
lock
xchg
or
out
sub
push
ss
fidivrs
push
cwtl
add
lcall
or
cs
ret
or
jge
xor
or
xchg
jle
or
add
sbb
add
mov
and
adc
add
or
or
and
push
imulb
add
addb
mov
add
xchg
enter
orb
sub
xchg
lcall
imul
scas
or
test
adc
cmpsb
sbb
dec
psrld
test
or
inc
adc
or
aam
popa
adc
push
or
sbb
lods
int
lret
xchg
test
cmp
mov
mov
xchg
ljmp
mov
sbb
loopne
and
sbb
ss
dec
add
roll
xlat
jp
mov
andl
sbb
xorb
cmp
orl
push
mov
or
adc
xor
pop
and
pushf
sub
adc
out
or
push
xor
mov
cmp
sbb
adc
adc
mov
push
loop
fisubl
adc
pop
sbb
into
int3
mov
mov
or
gs
push
mov
pusha
xor
xchg
jb
xor
into
or
push
rsm
sbb
cmp
cwtl
cltd
or
ss
add
mov
pop
push
cli
mov
sbb
outsb
sbb
sbb
sbbb
addl
push
push
sbb
sbb
sti
lock
or
or
and
pusha
adc
or
mov
cs
cmc
mov
mov
ret
cmp
adc
xchg
mov
jno
jbe
or
add
pop
sbb
outsb
rclb
adc
movsb
pop
fidivl
pop
sbb
mov
sub
and
pop
es
adc
scas
cmp
xor
push
or
aam
push
and
fsubl
sub
xorl
push
mov
pop
movsl
add
adcl
out
fisubrl
jb
push
xorl
dec
das
mov
or
cmp
dec
pop
ljmp
xchg
xor
adc
orl
sbb
xor
add
outsb
push
dec
repnz
xchg
adc
sub
addb
ficoml
xchg
cli
push
and
add
adc
inc
repnz
popl
stos
mov
add
adc
mov
push
daa
scas
mov
daa
add
and
negb
sahf
mov
xor
sbb
insb
rorl
xchg
xchg
add
scas
add
into
mov
jbe
pop
pop
sbb
jo
sub
dec
cmpsb
pop
sbb
roll
xchg
sub
stos
roll
push
push
loop
jbe
test
push
and
ret
add
sbb
test
or
mov
xchg
jecxz
or
ljmp
test
or
adc
test
into
jbe
ret
shrl
bnd
out
cmp
mov
sbb
je
push
push
add
cmp
dec
and
lcall
mov
in
sbb
and
mov
pop
jbe
or
pop
xor
mov
int3
mov
or
inc
mov
into
lret
pop
shll
xchg
and
inc
fdivs
cmpsb
push
or
repnz
xor
push
ljmp
pop
xor
adc
push
adc
es
cs
fwait
pop
push
xor
sahf
loopne
push
movsb
xor
adc
fidivrs
jle
mov
xor
loopne
push
dec
popf
add
xor
add
rolb
es
es
test
fisubs
mov
sahf
pop
xchg
rolb
sbb
xor
sbb
int
mov
sub
por
sar
xor
jbe
adc
adc
push
sahf
cmp
add
jbe
jbe
push
sub
dec
or
adc
mov
xor
pop
add
sbb
and
jge
push
push
mov
mov
pop
icebp
mov
add
or
ljmp
mov
xor
leave
test
fisubl
pop
test
stos
scas
xchg
cs
or
lds
xchg
mov
xor
cmp
push
jecxz
sub
add
or
add
pop
repnz
je
push
sbb
fildl
adc
adc
pop
mov
lret
mov
aad
bound
add
int3
or
push
sbb
adc
sbbl
mov
push
dec
sahf
ds
test
inc
test
test
repnz
adc
fs
push
subl
into
or
cmp
xchg
mov
scas
xor
mov
mov
inc
popa
sbb
inc
add
sbb
or
inc
ret
and
fisubl
into
adc
add
ret
adc
push
loopne
mov
sub
jb
push
ss
sbb
lcall
or
push
adc
shrl
test
jo
sahf
es
adc
sbb
push
popa
pop
inc
xor
push
or
pusha
and
jecxz
adc
bound
or
xor
loop
sahf
rclb
rolb
and
sub
xor
lcall
jg
repnz
sbb
sbb
leave
and
sbb
sbb
ret
dec
push
and
insb
nop
xchg
and
mov
and
inc
sub
sub
push
lcall
xor
sbb
push
orl
shlb
inc
add
inc
out
bound
inc
push
jle
aaa
dec
add
sub
cmpb
rcrb
mov
and
xor
je
xorl
mov
push
mov
ficoms
fimuls
rorb
sub
sub
andl
inc
rcrl
push
cs
mov
push
push
addl
cmpsb
out
mov
jbe
pop
sbb
add
or
sub
test
sub
sub
clc
xor
fwait
adcb
or
cmp
inc
out
lcall
add
sub
or
stos
inc
pop
lcall
add
cmp
sub
mov
mov
cli
mov
ja
bound
adc
push
or
add
or
sub
cmp
add
xchg
xor
mov
mov
xchg
sub
xchg
mulb
add
loop
lret
sbb
mov
or
add
sbb
pop
jle
fiaddl
scas
cmpsb
pop
mov
sub
ss
or
test
adc
in
lods
push
and
xlat
jo
push
cltd
and
ss
cs
xor
or
mov
push
adc
sbb
fidivs
mov
inc
pop
repnz
xor
mov
adc
sbb
and
bound
and
inc
inc
and
or
bound
mov
inc
pusha
sbbb
and
xor
xchg
and
pop
push
sub
mov
adc
push
sbb
ret
call
sbb
mov
and
lret
dec
add
and
xchg
bound
sbb
aaa
fiaddl
adc
dec
jb
repnz
pop
data16
or
and
or
or
cmp
push
cli
xor
xchg
ror
into
or
sbb
cs
cli
cmpsb
xchg
mov
push
xchg
aaa
or
and
stos
or
pop
je
add
sbb
push
or
movsl
nop
jmp
fdiv
in
jle
push
add
or
inc
push
add
add
and
rolb
xchg
pop
lods
mov
ret
push
add
or
and
mov
add
inc
xor
out
mov
dec
push
jo
add
sbb
sbb
mov
and
sub
add
sbb
dec
inc
xor
jbe
es
push
jp
sub
push
adc
adcb
xor
or
inc
test
push
xor
or
fimull
dec
out
and
dec
or
add
out
xor
lods
inc
hlt
mov
data16
lds
ret
bound
push
sub
push
cmc
adc
sbb
and
or
push
iret
push
arpl
shl
jb
adc
andb
xchg
xorl
push
and
push
xor
sub
pop
xchg
push
add
add
mov
mulb
mov
cli
xchg
lods
adc
adc
sbb
xchg
jle
adc
ss
pop
shrl
or
push
add
mov
adc
or
and
mov
sbb
rorb
mov
add
jae
test
push
sub
shl
mov
add
gs
cwtl
fiaddl
adc
test
mov
xor
xor
cmpb
jmp
pusha
mov
add
lret
lea
cmp
sbb
mov
jbe
inc
sbb
xchg
sbb
adc
aaa
push
or
add
xor
xchg
push
dec
cli
mov
es
sbb
dec
or
stos
adc
hlt
ljmp
pop
push
fsubrl
sub
push
mov
adc
dec
bound
or
cmpl
cmp
nopl
push
mov
and
cmpsb
sbb
sahf
or
cmp
popa
push
dec
mov
or
sbb
push
or
es
adc
or
sbb
das
lcall
cmpsb
dec
dec
inc
test
xchg
xchg
or
rclb
adc
das
or
cltd
adcl
xchg
inc
mov
push
jg
sub
pop
ljmp
movb
xchg
lret
pusha
in
push
or
into
aad
fiaddl
and
into
pop
add
adc
mov
mov
xchg
pop
cmpsb
stos
ret
out
fiaddl
adc
scas
and
sub
in
jb
sbb
cmpsb
scas
mov
lahf
pop
mov
cmp
lds
push
push
and
out
sub
push
cli
sub
cmp
sbb
adc
sahf
sbb
jo
out
mov
add
mov
jle
adc
jp
xchg
sbb
mov
pop
adc
test
loop
fs
popa
inc
out
dec
mov
push
dec
sub
dec
or
pusha
adc
or
ret
xchg
sub
xchg
add
bound
shll
push
or
sub
sub
xchg
mov
adc
mov
ss
in
fsubrl
push
push
pop
cmpb
jnp
inc
xor
add
push
push
mov
push
add
sub
cs
and
fmulp
and
xchg
loopne
ret
pushw
or
orb
outsb
adc
adc
clc
rcl
adc
adc
pusha
andb
xchg
ret
adcb
fadds
dec
sub
xchg
cmp
or
xor
adcb
xchg
or
shlb
push
add
xchg
ljmp
addr16
add
shrl
push
xchg
push
xchg
pop
add
adc
jb
das
fiaddl
cmp
lcall
or
or
shll
push
sub
fildl
or
add
xor
cmp
push
mov
sahf
bound
call
sbbl
loop
outsb
movb
mov
mov
push
inc
scas
mov
or
adc
or
inc
or
inc
mov
out
push
shlb
sbb
add
dec
and
xor
and
and
mov
sbb
mov
push
addr16
xchg
mov
out
leave
in
and
sbb
stos
xchg
adc
add
pop
jb
jb
or
push
push
mov
add
mov
add
xor
mov
push
sbb
jbe
add
mov
cmp
jle
and
xchg
xorb
push
and
inc
jb
and
jle
mov
sub
mulb
sbb
into
push
subb
push
addb
sbb
add
pop
pusha
mulb
or
adc
add
sub
lret
xor
int3
lcall
jo
pusha
movsb
sahf
out
push
adc
cs
inc
out
pop
xchg
ss
lock
mov
jp
pop
sbb
add
xchg
pop
ss
xor
popa
xchg
xor
add
sbb
sbb
negb
sbb
add
cs
ss
pop
fisubrl
mov
push
add
sbb
or
add
cs
dec
addr16
dec
inc
sbb
push
mov
mov
push
pop
insb
mov
or
lea
sbb
fisubl
or
add
shlb
fcompl
adc
inc
sbb
xchg
sbbb
fmulp
mov
or
out
ds
cmp
or
cmpsb
sub
jmp
cmpsb
or
daa
ss
or
cmpsb
push
mov
xorl
cmpsl
mov
out
loopne
or
push
and
jbe
or
sbb
dec
jecxz
ret
xchg
inc
loope
add
or
jnp
arpl
sbb
or
xorl
or
mov
or
fs
push
cs
mov
sbb
sbb
rorb
aaa
iret
stos
inc
aas
xchg
jno
fisubl
or
or
or
mov
sub
cs
and
test
mov
pop
aad
xchg
fisubrl
or
add
mov
pushf
mov
or
or
fs
mov
or
jae
mov
push
or
cmp
or
pop
in
cltd
rorl
dec
push
cs
or
cmp
ficompl
or
pop
sbb
das
pop
aaa
or
cmp
or
add
or
imul
fimuls
lcall
sbb
loopne
jp
push
cmp
or
loope
cltd
out
or
bound
push
push
pmaxsw
data16
ds
mov
push
jnp
xor
dec
cmc
xchg
inc
or
outsb
or
and
push
sahf
or
pop
aaa
testl
or
out
popf
inc
into
mov
pop
mov
or
adc
or
xor
inc
fdivl
sub
and
jne
aaa
push
or
into
in
sbb
push
or
lea
stos
pop
sahf
or
cs
and
jae
or
sbb
xor
jae
sub
and
xor
and
fsubp
scas
and
and
and
pop
and
jecxz
dec
or
testb
imul
or
scas
lahf
xchg
mov
aaa
or
pop
push
mov
xchg
or
push
das
daa
mov
add
jecxz
inc
mov
push
pop
lea
mov
mov
aaa
imul
lock
in
push
or
adc
cmp
or
scas
mov
sbb
ds
xor
ds
mov
rcrb
mov
dec
push
or
mov
adc
push
or
add
add
or
mov
add
pop
outsb
or
push
scas
push
adc
add
sbb
pop
or
adc
add
xchg
scas
mov
xchg
cs
pop
adc
fistpll
pop
aaa
add
aaa
push
mov
push
ljmp
jb
adc
popf
fwait
adc
cltd
and
xchg
xor
jne
loopne
out
or
push
stc
push
cli
push
dec
or
add
jne
dec
mov
sbb
cvtdq2ps
fmuls
and
mov
cs
push
mov
outsl
ficomps
push
pop
and
inc
and
pop
adc
or
stos
xor
jmp
das
push
aam
rcll
mov
add
jp
push
cmp
cmp
push
or
and
or
sub
add
push
pop
ss
test
ds
or
ficoms
or
and
fildll
pop
cltd
cmpl
adc
and
and
sahf
stos
enter
push
and
mov
push
es
mov
mov
pushf
into
and
sub
sub
and
jno
orb
out
in
loopne
mov
pop
or
or
addr16
or
push
outsb
test
inc
jbe
push
lcall
mov
adc
adc
adc
cmpsb
inc
and
add
push
shrb
and
xor
rorl
add
adcb
cmp
mov
or
cmp
mov
pusha
into
mov
ret
add
or
pop
sahf
cmpsl
orb
fsubs
pop
push
xchg
cmp
push
push
sub
adc
sbb
sub
inc
test
inc
mov
aas
add
xchg
sbb
and
cmpsl
and
adc
icebp
inc
add
adc
and
sbb
mov
xor
cs
loope
mov
or
pop
punpcklwd
cmp
out
sbbb
ret
add
loop
shrl
jl
ret
sbb
dec
dec
stos
rcll
sbb
js
or
fimuls
push
pop
pop
jb
repz
xchg
call
dec
pop
es
out
adc
xor
mov
dec
sbb
outsb
jmp
add
ret
mov
sub
add
xchg
test
sbb
test
adcb
pop
cmp
fildll
xchg
nop
adc
loope
xlat
les
sub
xor
inc
add
mov
mov
push
xor
mov
test
jg
je
add
out
pop
jne
test
add
shl
cs
adc
add
mov
sub
cmpsl
jmp
out
dec
pop
cmpsl
ficoms
mov
ret
incb
add
cmpsl
adc
movsl
push
xor
xor
ret
dec
sub
rcrb
mov
shlb
scas
xor
sub
jbe
sahf
push
xor
xchg
xor
call
pop
xchg
mov
ret
xchg
lret
loope
rorb
out
loope
ret
pop
loop
dec
es
push
xlat
push
cmp
idivb
out
mov
adc
adc
jne
imul
popa
popa
push
outsb
outsb
pop
in
out
pop
jne
imul
testl
aaa
stc
pop
ja
adc
aas
pcmpeqw
mov
pop
jle
outsb
es
push
sahf
fstpl
pop
gs
ja
mov
jae
jp
jns
out
js
push
jns
xlat
popf
imul
push
outsb
je
pop
dec
add
data16
pop
mov
jnp
bound
push
jp
push
imul
mov
sbb
mov
loopne
pushl
mov
and
sub
aas
and
pop
pop
add
dec
mov
mov
ss
and
cmpxchg
mov
mov
mov
pop
cltd
jp
aaa
fidivrs
repnz
mov
cmp
lods
aam
cmp
shlb
andps
add
xor
leave
stc
shl
aaa
aaa
in
outsb
int
cmp
dec
dec
inc
inc
sbb
imulb
inc
aaa
jl
dec
sub
jnp
scas
nop
mov
hlt
xor
or
outsl
mov
fimuls
cmp
push
dec
scas
push
and
adc
iret
repz
clc
nop
lock
loopne
ror
rcrb
test
cwtl
nop
jns
out
mov
jns
out
pop
pop
push
push
sahf
out
sahf
dec
dec
inc
inc
cmp
jns
out
xor
sub
sbb
jl
out
or
clc
lock
repz
call
lods
cmp
repz
xchg
mov
cmp
repz
dec
inc
xor
stc
cmp
and
add
mov
sahf
out
sahf
aam
mov
xchg
test
popf
out
je
insb
xchg
out
sahf
testl
inc
inc
inc
sahf
out
sahf
inc
inc
dec
dec
dec
dec
jns
out
dec
dec
dec
dec
push
out
sahf
out
push
push
push
push
cmpsb
out
sahf
push
push
pop
pop
pop
fstpt
push
jae
jne
mov
ljmp
pop
or
cmp
repz
or
or
repz
or
or
or
iret
repz
add
add
repz
repz
add
add
repz
add
or
or
cmp
repz
or
or
bswap
into
repz
add
adc
aas
cltd
mov
sub
sub
in
cs
imul
pop
xor
jb
xor
add
and
jb
aaa
ss
pop
jb
xor
adc
cmp
push
sbb
fmuls
jne
das
xor
cltd
jbe
pop
pop
cmp
mov
xor
xor
in
subl
insl
xchg
xor
leave
leave
leave
leave
ss
outsb
fdivs
xchg
add
mov
addl
imul
out
daa
daa
daa
mov
mulps
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
nop
call
test
fisubs
nop
rorl
inc
cmp
inc
dec
push
inc
dec
inc
stos
scas
fadds
aas
or
push
add
jl
mov
mov
push
sub
cmp
jl
sub
sahf
or
and
ljmp
in
jl
repz
sub
pop
or
and
ljmp
and
popa
das
push
ja
pushw
icebp
pop
push
add
sbb
cmpsb
cmp
cltd
cmp
push
dec
push
pop
push
xor
sahf
pop
jne
sub
cmc
xor
dec
inc
inc
pop
punpcklbw
and
mov
lret
pop
pop
pop
mov
adc
sahf
fistps
out
std
sar
sti
out
sahf
out
cli
nop
stc
sbbb
negl
inc
jns
out
cmc
sub
adc
repz
out
repnz
fwait
icebp
in
cmp
fdiv
fisttps
out
fisttps
out
dec
iret
repz
in
cmp
and
adc
clc
lcall
out
push
out
out
push
in
jns
out
push
in
jecxz
cmp
sarl
loope
loopne
repz
repz
cmp
pop
fdivl
jg
ficompl
cwtl
push
fmuls
out
mov
mov
insb
sahf
out
out
aam
push
rorl
cmp
out
shrl
rclb
repz
repz
xchg
into
in
ror
repz
int3
mov
cmp
repz
pop
enter
cmp
sbb
lahf
xchg
push
sahf
out
sahf
in
ret
push
movsb
add
loopne
cmp
jnp
push
aam
les
mov
pushf
mov
idivl
mov
cmp
mov
scas
xchg
jns
out
push
mov
mov
mov
out
out
mov
push
mov
mov
pushf
out
sbb
das
push
mov
ret
fadd
jmp
or
add
and
loopne
loop
and
mov
cld
rol
push
loop
and
ret
ret
mov
push
mov
cwtl
sub
mov
repz
mov
or
sub
subb
mov
mov
mov
iret
insb
mov
std
xor
add
cmc
mov
popf
add
lock
lret
jnp
subb
jecxz
fsubr
sub
mov
mov
xor
gs
mov
mov
cld
and
lock
mov
aad
add
mov
mov
jl
js
jg
adc
inc
add
add
mov
pop
aas
pop
xor
addr16
sahf
add
xor
mov
mov
call
add
mov
adc
mov
inc
add
xchg
popf
out
mov
daa
enter
mov
mov
push
dec
adc
lea
jg
sbb
addr16
lods
sbb
adc
xchg
fwait
adc
iret
out
rcl
mov
add
xlat
mov
mov
sbb
xchg
and
adc
into
add
xchg
aas
cmpsb
faddp
sub
lock
cmpsl
repz
push
xchg
fidivl
mov
ret
and
or
push
jg
sub
outsl
add
jbe
into
mov
pop
daa
rorl
das
daa
rcr
add
xor
and
mov
mov
sbb
and
xchg
lahf
sub
pop
in
inc
daa
push
into
stos
inc
add
outsl
lahf
add
push
mov
jecxz
mov
cmp
das
cmpsl
int3
stos
mov
push
insb
or
jg
mov
xor
mov
pop
into
mov
and
push
dec
lret
lock
mov
pop
bound
mov
popa
lds
mov
leave
in
aas
add
push
out
scas
int
add
mov
inc
xor
mov
aas
pop
cmp
lods
fs
daa
fstpt
inc
rorl
jg
sbb
out
pop
clc
xchg
lret
pop
sub
dec
orb
bound
push
mov
les
test
lock
sti
mov
mov
sti
rcrb
enter
mov
gs
or
mov
adcb
mov
pop
mov
pop
loope
addr16
sarb
mov
out
adc
jmp
std
mov
and
shl
mov
xor
cmp
sub
jnp
fdivrs
addb
inc
add
lock
pop
aas
or
jo
sub
fwait
mov
mov
pop
xor
xor
and
out
pusha
add
dec
pop
fbld
and
and
cs
pop
es
mov
dec
jne
bound
movq
mov
mov
leave
cli
ret
int
aas
cmp
or
lret
cs
shl
test
mov
adc
or
cmpsl
divl
rclb
mov
sub
mov
cmpb
lds
lcall
daa
aas
dec
xchg
neg
addr16
mov
notl
push
push
loopne
daa
stos
sysenter
outsb
and
aaa
jne
push
pop
push
add
lret
popa
cmp
stos
mov
roll
and
or
and
or
loope
and
les
inc
adc
and
js
xor
iret
and
dec
mov
addl
or
dec
sar
daa
mov
jne
cmp
jne
addr16
ret
jo
add
iret
mov
xlat
repz
adc
out
ret
insb
jb
out
sub
mov
arpl
negb
out
sbb
in
pop
lret
lds
cmp
push
lock
pop
testb
das
imulb
jg
add
cmp
roll
pop
pop
pop
pop
pop
popa
call
iret
repz
push
enter
cmp
mov
punpcklbw
int
into
pop
enter
add
movswl
inc
cmc
push
push
push
jo,pn
lds
loope
fimull
adc
out
lods
mov
mov
push
negb
dec
iret
aad
pop
xor
mov
mov
adc
adc
and
inc
sbb
insl
lea
pop
das
outsl
inc
pushf
jmp
cmp
pop
jl
or
jecxz
lahf
fisubrl
mov
mov
mov
js
jo
adc
mov
lar
mov
push
push
in
dec
push
xchg
mov
jg
add
inc
imul
testb
sub
sbb
and
add
pandn
movups
jg
push
pop
xor
jnp
dec
fdivr
mov
add
scas
call
push
shlb
mov
fcomp
jnp
rcl
in
add
enter
rcrb
je
imul
jg
outsb
mov
pusha
ds
mov
shrb
adc
pop
ret
leave
out
mov
neg
mov
shlb
loopne
ljmp
int3
aas
in
pop
xlat
iret
jbe
in
mov
clc
mov
gs
sbb
jg
fdivrs
out
jp
pop
bswap
into
sub
mov
or
rcr
orb
jb
addr16
outsb
pop
rol
mov
das
insb
lock
mov
nop
testb
jg
stos
pop
mov
fnstcw
pop
and
enter
dec
adc
xchg
or
lods
mov
out
jle
clc
xlat
stos
add
cs
loopne
clc
and
dec
push
inc
inc
dec
inc
dec
adc
and
xor
inc
lods
or
aam
push
push
xchg
repz
mov
js
mov
aam
mov
xor
dec
push
jo
rep
lcall
mov
xchg
mov
sbb
and
xor
push
scas
add
dec
pop
mov
push
xchg
aas
scas
dec
adc
mov
stos
in
out
aas
jbe
stos
inc
pop
aas
mov
or
ljmp
les
pop
pop
pusha
out
add
in
inc
rclb
ja
andb
add
outsl
rorb
push
lret
dec
imul
push
jbe
das
xlat
pop
jno
xor
or
mov
push
outsl
orb
rorl
xor
xchg
ss
push
int3
pop
rcrl
das
adc
lcall
add
fidivl
aaa
lahf
adc
int3
sub
sbb
mov
xor
scas
pop
inc
inc
pop
pop
sar
sub
push
inc
pop
push
push
inc
push
inc
jg
insb
add
add
addr16
inc
add
add
push
roll
inc
sub
inc
or
dec
dec
xor
or
push
addr16
lock
and
adc
cmp
or
inc
inc
popa
aas
cmp
dec
dec
inc
push
dec
inc
lahf
aas
sarb
lds
inc
fwait
mov
push
push
add
mov
fsubrs
iret
jg
or
push
inc
dec
add
addl
inc
xlat
lcall
adc
mov
rcl
push
out
pop
pop
adc
inc
aas
adc
lret
aas
xchg
lods
push
sbb
aaa
subb
mov
or
shrl
mov
dec
lds
iret
shlb
mov
and
outsl
xchg
pop
or
sbb
dec
dec
subl
mov
dec
push
add
lods
idivl
xor
aas
popf
addb
js
add
add
cwtl
repnz
sti
push
mov
inc
adc
aas
push
aas
push
add
dec
or
jns
in
insb
fistpl
insb
push
pop
insb
pmulhuw
shrl
sbb
aas
push
dec
jmp
pop
dec
add
adc
jg
pop
mov
lcall
sub
dec
pop
cmovp
test
jge
daa
add
add
test
or
cmp
adc
bswap
xchg
sub
inc
adc
bound
push
iret
repz
and
adc
or
clc
popa
in
loopne
jns
out
int3
enter
iret
jnp
out
mov
lods
pop
test
cmp
repz
pushf
xchg
mov
js
push
push
sahf
out
inc
xor
sub
sarb
and
or
push
cmp
in
mov
add
add
add
or
xchg
fcmovne
leave
or
or
or
or
daa
adc
fmull
leave
adc
and
popf
pushf
inc
push
addr16
das
push
sysret
mov
in
push
mov
insl
push
and
leave
repz
sbb
push
pop
xchg
fucomi
addb
orl
addb
pushf
fmull
fbld
enter
xlat
pop
sbb
add
add
dec
sbb
sub
rclb
xchg
and
sbbl
subb
and
popf
int3
pop
cmp
repnz
cmp
mov
in
call
out
adc
mov
ficompl
push
gs
sub
pop
fisubrl
xor
fcomp
loopne
jb
jle
pop
xchg
mov
call
or
push
fsubl
repz
mov
mov
inc
cmp
repz
adc
jns
cmpsl
stc
loopne
sbb
sahf
out
dec
sbb
cmp
repz
fdivrs
jp
push
repz
test
roll
pop
jne
mov
fdivr
jg
fsubl
jno
or
data16
divl
inc
or
sbb
xchg
std
aas
mov
mov
add
loope
stos
in
imul
and
mov
jo
sub
xor
pop
scas
jns
mov
pop
add
les
imul
mov
jns
out
adc
sahf
push
xchg
or
sahf
out
adc
push
out
sahf
out
adc
sahf
out
sahf
or
or
push
jns
out
sbb
sbb
out
sahf
out
sbb
push
sub
and
sbb
sbb
add
out
push
sub
rorb
ljmp
punpcklwd
add
add
cmp
rcl
jno
aas
mov
pop
insl
sbb
inc
jne
push
sahf
push
icebp
sbbb
jg
jl
jp
jg
jns
out
mov
jns
out
ret
cli
iret
repz
or
cs
push
insl
cmp
repz
xchg
cmpsb
mov
repz
jle
ss
sahf
out
bound
fwait
int
jns
mov
push
jg
cmp
repz
aas
pop
pop
jle
cmp
repz
stos
mov
lcall
dec
sahf
out
sahf
bound
mov
repnz
mov
jbe
and
jo
mov
pop
pop
fmuls
and
mov
pop
fstpl
xchg
into
mov
pop
inc
add
and
xchg
xorl
push
and
addl
sarb
add
arpl
ja
aaa
dec
dec
mov
dec
xchg
out
dec
fiadds
clc
push
push
ret
mov
pop
dec
add
push
push
adc
pop
lock
scas
dec
adc
addr16
inc
sbb
add
test
push
or
pop
inc
rcrl
mov
pop
mov
mov
push
push
push
cmp
push
push
inc
jg
fldcw
flds
cmp
cmpsb
mov
add
in
in
add
lea
dec
cs
and
xchg
xchg
in
cmp
js
or
hlt
push
add
aaa
cmp
pop
ja
mov
sarl
repnz
das
dec
insb
pop
add
push
inc
test
or
les
out
cmpb
scas
add
and
push
inc
add
shrl
xchg
es
push
push
sahf
fistl
or
sti
loopne
fstpt
sbb
mov
enter
add
or
jl
xchg
mov
adc
xchg
cwtl
push
and
sbb
pop
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
jg
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
and
xchg
pop
lcall
lock
mov
popa
push
jg
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
int3
insb
arpl
add
int3
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
mov
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
jmp
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
and
add
cmpsb
fdivrs
or
inc
shll
add
add
inc
add
xchg
dec
adc
push
sti
imul
dec
adc
xchg
cltd
dec
adc
jae
fwait
dec
adc
add
dec
adc
bound
in
mov
push
adc
jbe
push
jmp
scas
imul
add
adc
mov
mov
xor
insb
xor
jns
or
mov
add
cmp
cmp
mov
push
and
sub
jl
jg
add
jg
cmp
sub
cmp
mov
or
out
push
or
xchg
adcb
push
jno
adc
enter
adcl
gs
and
loopne
push
lock
adc
lods
mov
adc
shrb
xchg
outsl
mov
dec
xchg
jo
add
or
sbb
sbb
andb
ficomps
stos
mov
popa
add
insb
push
mov
les
add
gs
les
inc
push
and
inc
outsb
sub
jmp
push
add
imul
push
movb
outsb
and
cmp
and
ja
add
daa
and
pusha
jge
popa
popf
add
sub
pop
inc
jmp
and
sub
insb
loope
pushf
mov
sub
sub
fcompl
pop
mov
das
bound
inc
mov
outsb
dec
mov
xor
dec
incl
clc
les
sub
xor
add
imull
je
xor
or
sub
pop
adc
in
and
inc
push
mov
pop
cmp
or
loope
push
or
and
insb
shll
int3
pop
sub
push
xchg
mov
pop
push
or
test
jo
xchg
dec
add
adc
dec
cmp
push
imul
js
pop
inc
jae
dec
ss
mov
cli
setl
push
xor
mov
mov
push
xor
into
and
add
mov
loopne
loopne
loopne
adc
mov
mov
mov
mov
push
incb
lea
addb
pop
push
add
addr16
ljmp
jo
add
repz
jmp
js
add
imul
push
jmp
lea
sub
loopne
clc
jb
addr16
call
add
add
adc
jb
pop
add
ljmp
jo
pop
and
jns
out
mov
dec
jmp
call
jbe
ja
cmp
repz
jns
repz
out
addr16
jns
adc
jo
andl
sub
add
mov
lock
add
fdivp
pop
push
push
mov
jge
rcl
or
js
push
repz
rcrb
or
out
cmp
loopne
clc
outsb
adc
iret
sarl
sub
js
add
mov
mov
mov
jo
cmp
repz
mov
mov
cmp
adc
adc
sbb
sahf
out
lcall
push
dec
sbb
jae
fidivrs
js
or
nop
add
pop
add
repnz
shrb
and
sarl
push
xor
sub
testb
das
lcall
xor
push
pop
enter
jo
jb
pop
and
add
sbbl
lock
adc
add
cs
or
or
add
cs
adcb
das
mov
pusha
pop
in
sarb
in
lock
sbbl
add
jb
pop
and
and
enter
add
mov
and
enter
addb
pop
int3
dec
das
adc
enter
xor
pop
and
push
pusha
or
mov
das
popf
jge
nop
nop
mov
in
and
sbb
xor
dec
jae
add
dec
enter
and
sahf
mov
jns
pop
aam
insb
aas
inc
ret
dec
add
imul
push
pop
or
and
and
jl
jb
dec
enter
int3
test
test
shrb
mov
mov
sahf
in
jo
mov
sub
xchg
fnstcw
cmp
jbe
fidivrl
call
popf
fmuls
adc
pop
clc
loop
imul
jmp
mov
lock
cwtl
mov
mov
jp
out
ds
add
pushf
idivb
scas
or
pushf
clc
pop
rcrb
mov
stc
push
int3
sbb
repz
les
rcrb
loop
mov
mov
std
ds
nop
push
js
jae
sub
js
incb
clc
ljmp
pop
repz
ret
add
inc
pop
insb
add
xchg
and
adc
fdivr
rcrb
push
add
adc
add
in
pop
and
ds
xor
jns,pn
cmp
pushf
icebp
pop
in
inc
mov
les
adc
push
jg
push
xor
sbb
aam
dec
push
lods
popf
pop
aam
cli
and
das
fidivrl
fstpl
and
push
sbb
and
divl
or
inc
push
push
jp
addr16
fimuls
cs
add
imul
js
mov
jbe
and
and
xor
inc
xor
imul
dec
test
call
push
pop
push
inc
push
dec
push
push
inc
or
mov
push
push
inc
inc
dec
cmpsb
mov
roll
notb
fcoms
dec
imul
mov
pop
ret
jl
and
clc
sarb
inc
push
inc
mov
xor
xor
xor
sbb
cltd
shl
inc
dec
inc
push
inc
inc
inc
and
and
jo
into
add
insl
popa
stc
pop
jo
dec
out
fucomp
sub
xor
imul
xor
jge
das
das
outsl
inc
insb
arpl
pop
mov
or
and
pop
and
cltd
add
jge
rcrb
outsb
in
clc
cli
nop
cltd
movsl
inc
dec
mov
lds
inc
mov
sti
fisubs
jb
nop
xchg
testl
in
nopl
aas
enter
addb
lahf
out
pop
ss
push
data16
jg
sahf
sbb
ss
jl
js
mov
inc
add
push
clc
popaw
mov
lock
aas
mov
mov
fdivl
mov
cld
ret
das
and
out
imul
cmp
jns
mull
cltd
pop
nopl
add
popf
out
das
add
add
cmp
pusha
out
adc
or
imul
add
push
out
cmp
popa
cltd
pop
pop
sub
push
or
jnp
out
cmp
std
add
insb
push
xor
pushl
xchg
push
clc
fmull
xchg
out
or
lock
repnz
insl
inc
sahf
pop
jg
out
repnz
xor
out
loopne
rclb
sbbb
cs
cld
rolb
sbb
not
into
adc
add
pop
pop
repz
push
push
dec
push
adc
push
add
add
push
and
inc
out
jg
push
lock
xor
dec
push
add
fsubrl
clc
push
mov
pop
ret
xchg
movl
push
scas
aaa
adc
lods
or
cs
mov
clc
xchg
enter
divl
dec
test
andb
mov
fstps
subl
mov
nop
jl
add
pop
pop
fistpll
testb
xchg
daa
and
sub
in
sbb
daa
and
das
add
sar
pop
lret
orb
jnp
rolb
and
jmp
add
push
sahf
lock
mov
or
jae
xor
or
daa
push
inc
js,pn
daa
mov
ret
lcall
xchg
dec
push
fdiv
fidivl
dec
mov
lock
dec
adc
js
aas
xchg
shrl
adc
pavgb
fwait
punpcklwd
or
orb
jnp
xchg
fldl
fdivr
jnp
ds
mov
fdivp
add
mov
mov
push
fdiv
leave
insb
xlat
in
sbb
lcall
mov
xor
in
lock
push
leave
addr16
jg
pop
or
jg
ss
or
jg
arpl
test
ud0
push
nop
pop
pop
out
sbb
xor
pop
js
mov
movd
movd
mov
push
or
mov
xor
cltd
insb
ja
mov
shrd
xor
and
nop
xchg
cmp
faddl
into
inc
add
fisubrs
jp
push
repz
add
out
and
dec
daa
pop
gs
fisubrs
mov
es
test
push
cmp
daa
mov
daa
out
or
mov
sbb
mov
xchg
xchg
add
out
or
out
rcrb
jl
fwait
push
cmpb
xchg
and
xchg
rolb
xchg
fsubrs
pop
aaa
adc
imul
loope
js
rclb
ret
or
pop
scas
ret
cmpsb
popl
fistpl
pop
sbb
sbb
mov
mov
js
push
dec
push
inc
pop
mov
jnp
mov
pop
jo
lods
notb
and
in
and
daa
lret
pop
mov
xor
scas
or
mov
bound
scas
or
sbb
test
pop
push
in
and
test
add
xchg
dec
scas
iret
repz
or
daa
jl
sti
jp
add
in
clc
sbb
jecxz
xchg
or
js
jp
insb
sub
inc
mov
call
sub
cs
add
faddl
dec
sub
in
fidivs
xchg
or
maxps
int3
fimull
mov
add
sbb
popf
add
jo
adc
push
jo
mov
out
int
ds
sub
jno
sbb
mov
lret
xor
cmp
or
lret
fdivs
and
xchg
js
aas
ret
mov
loop
insl
call
or
mov
sbb
push
imul
or
mov
mov
gs
pop
xchg
mov
test
outsb
xor
or
mov
dec
cmp
movsb
or
mov
aaa
cmp
or
jp
jp
mov
xchg
xchg
inc
ja
push
pushf
addb
jae
out
pusha
pop
or
js
mov
outsb
pusha
xchg
or
or
or
imul
ja
xchg
or
testl
adc
rcr
or
adc
or
sbb
xchg
pop
inc
fisttpl
arpl
or
andb
ret
test
add
ret
in
mov
inc
cmp
push
mov
xlat
into
mov
jo
or
mov
jle
xchg
jg
loop
add
popf
and
dec
sbb
jo
ficoml
or
or
stos
pop
or
and
int
scas
inc
test
cld
out
push
pop
sysret
add
pop
push
smsw
mov
test
xchg
mov
scas
sub
add
mov
jle
movsb
dec
dec
add
int
mov
dec
adc
stos
out
mov
lahf
out
pop
and
aas
popl
dec
inc
mov
sub
mov
add
xchg
xchg
imul
lock
pusha
cwtl
sahf
daa
or
sbbb
es
aaa
clc
es
daa
mulb
add
out
sbb
pop
push
adcb
xchg
shrb
iret
adc
add
adc
jo
sbb
js
or
movswl
or
jnp
or
sub
adc
mov
outsl
ja
jo
movsl
mov
in
ja
cmp
mov
mov
pop
add
or
or
jg
popf
and
cmpsb
hlt
mov
lock
pop
xchg
add
inc
and
push
cld
pop
addb
sti
lea
popa
in
cli
sbb
nop
ret
lods
push
mov
rcll
stc
addb
shlb
aas
gs
adc
fsubrl
lret
mov
xor
ljmp
dec
push
dec
dec
mov
pusha
dec
pop
lret
dec
ret
cvtpi2ps
adc
push
fwait
js
add
jns
movsb
fldl
addb
add
inc
sarb
nopl
dec
mov
mov
push
push
add
outsl
mulb
idiv
jbe
popf
xor
push
and
add
fstl
sbb
inc
iretw
out
out
add
scas
mov
sti
pop
dec
and
negb
data16
out
or
sbb
ret
movl
mov
into
insb
xor
and
xlat
int
mov
mov
fstpl
xor
push
jg
sbb
out
or
cmpl
clc
xchg
ja
out
sahf
add
push
pop
add
add
sub
test
xchg
pop
jnp
pop
pop
jno
push
testb
ja
pop
inc
push
mov
iret
inc
pop
fiadds
pop
jne
pop
fsubl
std
ficomps
mov
out
sbb
std
mov
xchg
sarl
ja
addr16
icebp
out
aas
push
jg
xchg
adc
xchg
cltd
xchg
ds
popa
rcr
fisttps
sub
insb
fdivs
je
sahf
fistpl
and
pop
clc
mov
push
pop
cmpl
or
mov
ja
outsb
jae
pop
jg
negl
pop
sbb
das
dec
das
insl
xor
fisubrl
sbb
mov
ja
and
pop
das
subl
ja
and
les
out
cmp
adc
mov
das
fnstenv
add
out
pop
jge
jbe
jmp
cmp
das
mov
in
fwait
sbb
jbe
popa
ljmp
outsl
popa
mov
lret
mov
repz
insl
out
pushf
popa
das
nop
out
cmp
inc
and
outsl
or
mov
das
jg
das
mov
fildl
das
jg
addl
fildl
fs
fcmovnb
adc
sub
sbb
push
int3
or
ljmp
mov
testl
int
into
test
lea
jmp
xchg
fcomps
pop
push
and
push
insb
das
mov
sbb
pop
jg
out
ds
dec
jb
xor
push
js
mov
pop
dec
mov
pushf
and
divl
test
mov
pop
push
sbbl
arpl
xchg
or
mov
mov
mov
fildl
out
mov
insl
adc
das
mov
das
fwait
adc
or
push
daa
aas
add
adc
fisubs
dec
push
lret
push
pop
pop
or
inc
xor
cltd
daa
or
je
lea
shrl
jae
inc
stos
cs
in
add
push
push
jns
push
dec
ds
inc
repz
inc
fs
cmp
and
or
dec
xchg
and
dec
repnz
repnz
ja
jl
cwtl
or
or
jo
jo
sar
outsl
pop
arpl
adc
jbe
push
pop
mov
sub
andb
xchg
dec
mov
ret
cmp
xchg
invd
subb
xchg
dec
push
add
cmp
fnsave
bound
and
pop
sbb
dec
aaa
das
xchg
sbb
xchg
sub
aaa
icebp
lock
mov
xchg
xor
xchg
adcb
jg
cmp
jns
jle
pop
and
movlps
insl
mov
shrl
jo
add
push
neg
fcoms
fs
mov
add
inc
dec
or
neg
out
add
or
mov
sbb
pop
test
xchg
pop
sub
or
stos
pop
aas
jecxz
add
pop
push
dec
imul
xor
imul
xor
fisubs
add
addl
aam
ss
fidivrs
cmc
aaa
dec
or
jge
add
outsb
cmc
aaa
add
das
loopne
dec
jecxz
push
mov
mov
mov
or
popf
or
out
adc
add
ja
push
push
or
jmp
adc
lods
movsb
xor
shll
sub
pushf
orb
pop
pop
push
bound
push
sub
mov
scas
push
push
daa
inc
sarb
lret
dec
inc
xor
cmp
gs
dec
pop
sbb
cmp
add
dec
add
lret
repz
xchg
inc
add
dec
pop
pop
jb
fcmove
rclb
cmpsl
fcoml
xchg
cmp
push
mov
push
inc
mull
add
std
ficomps
pop
addb
push
xor
out
idivb
or
mov
mov
sbb
xchg
add
es
jmp
xchg
and
sar
add
cmp
lock
mov
cmp
cmp
adc
outsb
js
mov
dec
movsl
add
idiv
roll
loopne
cltd
xor
add
add
jmp
push
mov
add
or
in
and
pop
outsl
sub
xchg
mov
lea
xlat
adc
pop
iret
xor
xchg
adc
and
leave
add
bound
mov
pop
fisttpll
push
sbb
hlt
sbb
addr16
and
jo
adcb
clc
cmc
rolb
into
test
add
adc
add
or
cmp
inc
dec
iret
mov
xchg
testb
dec
enter
mov
cli
shll
cmc
lcall
push
loop
and
xor
mov
sub
dec
xchg
jne,pt
mov
xor
mov
dec
lret
jae
cmpsl
add
adc
sub
xor
mov
push
faddl
ds
inc
add
jae
jp
and
insb
push
pop
incb
aas
jbe
jnp
push
mov
imul
pop
leave
and
in
sub
xchg
mov
pop
jnp
dec
leave
dec
add
idivl
repz
mov
lret
xchg
imul
testl
jbe
subb
loope
ds
cltd
inc
popa
mov
lcall
mov
jle
pop
ja
jle
inc
pop
add
test
push
pop
push
push
cld
movsl
fstpl
push
popa
ljmp
loope
cmp
movsl
cmpsb
das
push
pop
out
and
lock
jle
push
push
aam
das
and
jno
pslld
cs
divl
shl
das
pusha
or
xchg
sub
mov
add
adcb
xchg
cmpsb
scas
lahf
ds
inc
pop
jbe
mov
mov
mov
inc
mov
or
or
cmpsb
fsts
jecxz
mov
or
add
out
cmpl
push
xlat
dec
roll
arpl
shlb
ret
cmp
jp
mov
mov
shl
andb
xchg
xchg
iret
push
rorb
mov
pop
addr16
enter
push
int3
push
sub
addb
and
lcall
cmp
fists
xor
inc
push
jb
mov
and
inc
inc
sti
push
and
dec
mov
xchg
stos
add
ds
mov
lods
jecxz
jg
lahf
jmp
xchg
push
jg
es
fsubs
xchg
cltd
sbbb
ret
movsl
pusha
xchg
or
lcall
sub
test
int
jnp
loope
or
pop
inc
push
push
sbb
call
xor
push
inc
add
add
sbb
mov
mov
in
cmp
insl
mov
call
inc
sub
push
lods
sub
fbld
adc
ja
inc
adc
mov
ficomps
inc
enter
add
or
adc
flds
test
xchg
dec
pop
push
hlt
pop
mov
ret
repz
les
aas
adc
pop
ret
pop
and
cwtl
loopne
cmp
daa
lahf
inc
nop
inc
push
jno
adc
pop
xor
enter
addr16
lcall
inc
mov
insl
packsswb
push
das
sbb
testl
pop
loopne
outsl
dec
push
adc
sti
sub
pop
inc
addb
jo
lcall
mov
pop
fwait
or
jae
push
sub
ret
shll
fs
xchg
push
push
outsl
push
pop
sbb
push
sahf
lods
sbb
or
mov
and
shrl
out
cmp
xchg
cmp
or
test
cmpsb
mov
das
mov
cli
divb
inc
loop
push
push
aam
cmp
push
insb
es
lea
lahf
outsl
xchg
pop
push
dec
mov
xchg
adc
cmp
pop
mov
xchg
inc
aas
pop
loopne
push
inc
loope
xchg
push
faddp
cs
test
or
ret
mov
cmp
hlt
mov
sbb
repnz
and
shlb
arpl
pop
sub
or
push
mov
das
pop
enter
xchg
push
out
jbe
rorb
jbe
inc
cmp
pop
add
xchg
dec
push
adc
pop
dec
push
xchg
fs
outsl
xor
add
jg
fisttpl
jg
add
pop
sbb
outsb
icebp
cmpsl
jb
pusha
xchg
cmp
aaa
dec
repz
push
pop
add
in
or
push
and
pop
cmp
push
repnz
sub
or
xchg
gs
push
sub
push
ret
add
dec
cmp
xchg
iret
test
mov
sub
add
xchg
pop
or
dec
xor
push
sbb
add
or
out
fsubrs
fistpll
das
pusha
mov
cmpsb
flds
pop
pusha
sbb
outsb
push
aad
jbe
and
test
mul
data16
mov
push
sahf
xchg
mov
xchg
in
dec
mulb
insl
cmpsb
out
mov
pop
sahf
dec
gs
in
mov
outsb
pop
pop
sbb
mov
imull
pop
and
dec
push
dec
cwtl
sti
pop
cmp
push
sub
push
lcall
pop
lret
jp
dec
xor
mov
sub
pop
addb
mov
cwtl
cs
push
cmpb
jae
cs
pop
aaa
ja
add
nop
xchg
pop
jne
jp
pop
and
into
in
aas
repnz
roll
pop
pop
outsb
jecxz
jle
inc
push
das
push
push
call
cwtl
int
sbb
fs
jbe
adc
clc
jbe
push
and
mov
dec
into
push
push
xor
incl
fwait
in
push
sbbb
or
pop
dec
fildl
sbb
shlb
pop
xchg
adc
push
push
bound
std
nop
mov
add
xchg
xor
mov
and
fimuls
movsl
arpl
xor
subb
xchg
fisubl
pop
pop
cmp
cmp
out
cmpsb
subb
pop
inc
jl
mov
sub
dec
ja
jge
in
inc
cs
mov
mov
mov
mov
and
imul
adc
mov
test
cltd
fstl
dec
hlt
xchg
xchg
imul
mov
push
pop
dec
movhps
pop
mov
mov
mov
es
and
nop
fstl
jmp
xchg
add
incb
cltd
or
or
imul
jg
gs
addr16
add
aam
adc
cmp
jae
lea
pop
das
sbb
fidivs
dec
outsb
cwtl
jp
cmp
sbb
lret
outsl
mov
xchg
mov
push
push
out
lea
enter
push
sub
inc
xchg
pop
and
js
jbe
lcall
insl
loope
xchg
pop
stc
pop
xor
mov
cmp
sbbl
jle
data16
sbb
dec
mov
fwait
or
cltd
push
loopne
or
ljmp
sti
fidivrl
stos
aaa
add
neg
rcll
jne
mov
add
arpl
arpl
adc
or
lahf
add
add
push
data16
jns
daa
mov
and
mov
dec
or
or
lds
jnp
and
lods
sub
xorb
addl
and
nop
cmp
js
dec
cmpsl
push
push
pusha
pusha
jo
subl
inc
ret
or
mov
addr16
mov
das
outsl
push
add
mov
mov
sub
inc
mov
add
or
mov
xchg
out
sti
jbe
push
xor
fnstsw
jo
jle
add
pinsrw
mov
jb
push
push
addb
xor
pushf
add
ret
adc
add
pop
addl
es
mov
ret
pop
xor
cmp
jmp
insb
js
cmp
jo
or
das
pop
movsl
bound
decl
and
ja
fisttpll
add
push
add
cmp
mov
mov
out
jp
or
inc
scas
sbb
sub
arpl
or
and
cltd
push
xor
daa
and
stos
and
lret
sarl
dec
pushl
shlb
mov
insl
popa
mull
mov
or
push
fs
test
and
jmp
sub
jge
sbb
inc
mov
mov
add
mov
jo
add
sbb
incb
sub
in
xchg
in
into
jle
and
sbb
add
xor
ret
andl
inc
add
xchg
xchg
stos
icebp
jle
inc
add
push
scas
pop
or
lea
adc
cmpsb
fdivl
pop
incl
add
adc
xor
ja
add
into
rclb
out
add
inc
repnz
outsb
fisubrl
jl
pop
pop
ret
mov
or
or
sbb
pop
push
fadds
push
adc
or
sar
push
pop
inc
dec
ret
pop
arpl
jo
outsl
adc
mov
mov
test
mov
or
pop
xor
or
mov
sahf
rcll
or
sub
add
add
dec
stos
cs
testl
and
lock
add
add
add
rcr
lcall
xchg
jbe
jg
sub
imul
pop
loope
jmp
add
das
xchg
add
jo
loop
addr16
dec
dec
push
call
cmpsl
add
das
jns
ja
push
jne
popa
jp
mov
xchg
sub
add
jb
xchg
mov
stos
and
cmp
aas
sbb
ds
xchg
add
mov
insl
pop
and
jl
pop
adc
jmp
repnz
xor
jo
pushl
shlb
xor
xor
xor
test
xor
lods
xor
xor
xor
xor
decl
inc
ss
arpl
fdivl
xor
cmp
mov
imul
fistpll
outsb
lcall
xor
xor
xor
xor
xor
xor
ss
jbe
or
cmp
std
cmp
cmp
bound
cmp
cmp
cmp
jle
xchg
cmp
cmp
lcall
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
or
and
mov
ljmp
fistpll
lock
aas
and
aaa
aas
bound
jp
test
mov
incl
pop
aam
xor
dec
xor
jne
xchg
lods
xor
pushl
clc
xor
xor
xor
xor
xor
xor
push
xor
mov
xchg
jg
aam
in
xor
xor
pop
xor
xor
xor
sbb
and
int3
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
mov
movsb
cmp
cmp
test
mov
mov
call
cld
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
pusha
cmp
mov
cmp
cs
ds
call
bound
movsb
ds
mov
ds
ds
push
aas
pop
aas
addr16
mov
mov
aas
fists
sbb
xor
clc
lcall
xor
fsubrl
dec
cmp
cmpb
cmp
cmp
cmp
lret
pop
cmp
cmp
dec
cmp
mov
mov
sarl
idivl
cmp
lds
icebp
adc
cli
adc
ds
ds
aas
imul
aas
test
repz
out
pop
or
xor
xor
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xor
test
and
sbb
ret
call
adc
mov
shlb
jmp
adc
addr16
cmp
cmp
cmp
dec
cmp
repnz
pusha
sbb
push
xor
test
mov
pop
cmp
or
outsb
cmp
cmp
cmp
mov
enter
lock
cmp
cmp
cmp
cmp
lock
call
idiv
cmp
cmp
pop
cmp
add
and
sub
mov
pop
mov
xor
xor
xor
xor
xor
ljmp
cmp
fdivl
and
dec
cmp
cmp
cmp
cmp
js
lahf
jae
cmp
cmp
push
lcall
faddp
mov
mov
jmp
je
enter
xor
xor
xor
xor
xor
xor
pop
mov
loope
xor
xor
aas
cli
pushl
ja
mov
xor
xor
lret
adc
jae
jns
jecxz
push
cmp
xor
insb
ss
xchg
cmp
je
js
jl
xorb
fdivs
out
negb
aaa
hlt
aaa
clc
aaa
cld
aaa
pusha
add
int
shll
mov
cmp
cmp
or
decl
xchg
aaa
nop
xor
fnsave
xor
sbb
cmp
jge
aaa
pushf
aaa
ret
push
add
pop
loopne
inc
cmp
cmp
sbb
ds
repnz
lcall
cmp
cmp
sarb
xor
mov
mov
cmp
ds
clc
lea
scas
fmuls
xor
cmp
mov
cmp
nop
ss
push
call
cli
mov
mov
cmp
outsl
cmp
cmp
out
push
hlt
ljmp
cmp
mov
mov
decl
xor
push
xor
xor
xor
xor
xor
xor
xor
jmp
hlt
pushl
xor
xor
xor
xor
xor
call
out
sbb
and
cmp
outsl
loopne
mov
push
pushl
mov
xor
jg
mov
xor
inc
xor
jnp
movsl
xor
xor
ljmp
clc
jg
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
lcall
adc
fidivs
je
js
jl
xorb
or
xor
mov
xor
pop
std
jg
mov
aaa
enter
aam
fcoms
pushl
in
call
xor
xchg
cmp
jg
pop
scas
sub
add
push
scas
jae
mov
cmp
cmp
cmp
and
xor
inc
cmp
imul
cmp
push
cmp
nop
cmp
js
adc
inc
cmp
cmp
addr16
add
adc
inc
push
xor
cs
sbb
xor
pop
xor
lret
xorl
lcall
xor
xor
xor
xor
xor
dec
xor
xor
xor
das
mov
ss
ss
push
cmp
and
cmp
imul
dec
idivb
xor
out
ficoml
cmp
cmp
mov
ds
sarl
jmp
jg
scas
fsubp
test
std
mov
xor
cmp
cmp
inc
sahf
xor
jae
mov
pop
mov
lret
xor
xor
xor
xchg
xor
adc
or
jg
dec
xor
hlt
xor
jecxz
nop
mov
or
jecxz
pop
outsb
ss
xor
cmp
cmpsl
jg
aas
cmp
gs
mov
ds
mov
aas
in
lock
xor
pushf
subb
xor
cmp
icebp
mov
fidivs
repz
and
sub
incl
push
aaa
mov
mov
into
aaa
jecxz
inc
cmp
jp
xchg
cmp
cmp
subl
cmp
imulb
cmp
and
scas
cmp
sarb
loopne
jno
mov
mov
loopne
rcrb
ljmp
xor
pop
xor
xor
cld
imul
xor
xor
aaa
add
cmc
pop
cmp
cmp
cltd
out
jmp
cmp
mov
jg
inc
pop
jg
sbb
shll
cld
xor
xor
rcrb
aad
scas
sahf
mov
xor
mov
xor
jmp
std
push
pop
cmc
decl
adc
sbb
and
cmp
aas
ss
ss
std
jne
ss
ss
ss
ss
insl
ss
jg
xchg
lcall
xchg
lcall
mov
mov
mov
rcll
hlt
ret
jg
fnsave
in
in
cs
ss
mov
jns
xchg
aaa
stc
aaa
push
cmp
cmp
scas
cmp
aas
jl
and
pop
arpl
mov
enter
push
pop
sarl
js
fidivrl
cli
cmp
fs
jg
pushl
ds
sti
outsb
aas
jbe
aas
loope
repz
and
ret
lcall
fwait
xor
xor
sarl
xor
xor
xor
xor
shlb
sub
fisubrs
xor
xor
aas
faddl
xor
xor
xor
dec
clc
stos
xor
test
xor
jmp
xor
jb
xor
xor
inc
in
jecxz
lock
xor
cmpsb
pushl
add
stos
fsubrp
adc
sbb
outsb
sub
das
pop
xor
es
inc
xor
dec
xor
loop
xor
jo
jne
lret
jp
jg
xchg
lea
xchg
mov
bound
into
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
xorb
mov
stos
clc
out
add
mov
mov
xor
fdivs
incl
xor
xor
xor
xor
xor
call
xor
and
ss
inc
xor
xor
dec
sbb
xor
das
aaa
ss
cmp
cmp
cmp
incl
cld
cmp
cmp
cmp
cmp
cmp
cmp
ret
xchg
lcall
or
jmp
shrb
jno
lahf
xor
out
sub
xor
outsl
clc
aas
lcall
xor
push
cmp
idiv
jg
idivb
inc
test
xor
jne
lcall
push
nop
xor
incb
fdivl
xor
xor
loopne
inc
test
aaa
inc
cmp
js
jge
mov
cmp
fimuls
pop
cmp
test
xchg
cmp
cmp
inc
pop
test
or
sbb
cmp
repnz
rorl
push
pop
cmp
cmp
cmp
pop
cmp
xchg
cmp
fnstsw
mov
fstl
or
pop
aas
xor
aas
cmpsl
aas
mov
lock
push
add
xor
mov
mov
mov
xor
mov
mov
lret
cmp
cmp
scas
jmp
insb
jo,pt
je
js
jl
cmpb
mov
ds
ds
ds
addl
lods
es
stos
sub
mov
shlb
xor
ds
fdivrs
fdivrl
mov
ds
ljmp
loope
ja
aam
or
or
adc
adc
sbb
sbb
and
fbld
out
aas
sub
xor
xor
aas
cmp
inc
aas
inc
aas
push
pop
add
scas
clc
jmp
fwait
push
push
xor
adc
test
in
fwait
xor
xor
fwait
push
mov
cmp
push
mov
cmp
aas
pop
mov
sbb
cmp
pop
popf
clc
xchg
add
inc
aas
mov
ljmp
aas
icebp
mov
push
xor
xor
xorl
mov
xor
xor
jb
jbe
jnp
xchg
mov
test
lret
inc
pop
ss
ds
ss
clc
ljmp
aaa
dec
aaa
jae
aaa
push
cmp
sub
xchg
test
ret
jg
cmp
cmp
pinsrw
dec
cmp
cmp
cmp
cmp
cmp
cmp
lods
cmp
cmp
inc
imul
xlat
rcrb
aas
mov
jp
pop
insl
xor
xor
and
xor
push
ss
cli
das
cmp
aaa
xor
cmp
xchg
xor
or
sbb
ss
unpckhps
ret
add
cmpsb
inc
aam
fadds
sbb
cmp
cmp
jmp
cmp
negb
mov
ljmp
push
sub
sub
xor
xor
push
cmp
cmp
cmp
cmp
cmp
cmp
mov
shrb
icebp
aas
mov
mov
aas
enter
test
inc
xor
pop
pop
repnz
xor
mov
adc
sbb
xor
call
jg
xor
xor
xor
xor
xor
lret
fs
xor
sbb
aad
cmpsl
mov
data16
push
sar
pushl
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
nop
mov
aaa
test
sbb
fiadds
mov
incl
insb
cmp
cmp
cmp
jae
cmpl
cmp
cmp
cmp
cmp
adc
xchg
mov
and
cld
pop
adc
xor
loopne
lock
xor
xor
mov
nop
xor
sbb
cmp
xchg
decl
inc
xor
cmp
inc
aaa
inc
aaa
dec
aaa
lcall
aas
push
icebp
or
cmp
mov
mov
cmpb
xor
pop
fidivrl
loopne
mov
xor
out
inc
mov
add
push
push
dec
mov
pushl
dec
ss
ss
ss
ss
cmp
mov
pop
sahf
cmp
lods
mov
cmpb
sub
xor
cmp
inc
cmp
dec
cmp
and
bound
push
inc
pop
jle
cmp
cmp
mov
leave
test
nop
push
cmp
dec
mov
rolb
sbb
ja
inc
pop
xor
xor
insb
xor
add
cmpb
xor
and
sbb
test
lods
xor
xor
push
xor
fisttps
or
sarb
xor
mov
divl
ss
xor
xor
xor
jl
xchg
xor
and
gs
lcall
inc
jecxz
push
aaa
xchg
data16
filds
sarl
cmp
adc
call
cmp
sarb
in
sbb
cmp
cmp
cmp
cmp
cmp
sub
push
sti
and
cmpsb
ds
ljmp
lcall
rclb
pop
mov
xor
ljmp
pop
xor
les
fidivs
hlt
xor
call
mov
pop
mov
ss
lds
loop
std
aaa
or
loope
push
cmp
gs
sbb
sbb
push
test
movsb
xor
cmp
cmp
cmp
xchg
js
js
mov
xor
mov
ss
cs
xor
xor
xor
xor
bound
test
jecxz
clc
xor
scas
xor
in
jno
stc
push
loopne
add
adc
das
cmp
xor
sub
cmp
cmp
out
jno,pt
scas
lock
arpl
pop
jle
xor
pop
and
mov
mov
clc
scas
les
enter
shlb
aam
into
loopne
in
call
dec
push
jne
xchg
xor
mov
cli
add
xor
aas
aaa
arpl
mov
cmp
pop
sti
cs
jbe
test
mov
ret
cmp
cmp
in
cmp
scas
ds
inc
cmp
xchg
mov
cmp
rolb
dec
mov
jg
je
pushf
aas
mov
mov
xchg
add
decl
or
adc
sub
xor
adc
xor
xor
xor
ljmp
shll
cmp
imul
cmpb
mov
cwtl
xor
sub
mov
or
mov
ss
jp
push
mov
cmc
shll
daa
xchg
mov
ret
cmp
cmp
loopne
hlt
pop
fdivrp
cmp
cmp
cmp
cmp
mov
sub
aas
cmpl
xchg
push
test
mov
mov
cmc
test
in
sbb
mov
movsb
sarb
add
xor
xchg
inc
xor
incb
bound
xor
xor
xor
stos
dec
jno
or
ss
sub
call
test
inc
mov
ljmp
cmp
bound
cmp
jo
stos
or
fnstsw
repnz
and
xchg
cmp
adc
xor
xor
stos
aad
sbb
xor
fdivs
push
mov
add
xor
add
mov
aaa
jecxz
leave
cmp
ds
pop
ds
aaa
xchg
dec
icebp
sub
sub
out
cmp
sub
inc
ret
sarb
dec
sahf
mov
pop
ds
mov
es
push
aas
dec
aas
andl
add
icebp
ljmp
xor
xor
xor
inc
mov
jae
sbb
jmp
lahf
ss
push
add
xchg
aaa
mov
cmp
cmp
cmp
sub
inc
cmp
cmpl
fnstcw
out
add
or
push
mov
aas
ds
jmp
ljmp
fdivl
mov
xor
xor
fisubs
xor
jmp
and
sub
stos
push
cmp
sbb
xlat
xor
add
addb
mov
jle
sahf
pop
insb
pop
dec
div
pop
mov
outsb
mov
adc
mov
push
dec
jne
mov
inc
push
call
cmp
jne
test
mov
pop
cmp
mov
mov
out
cmp
mov
push
cmc
arpl
aas
rolb
inc
inc
ljmp
mov
jmp
xor
xor
mov
ljmp
fdivl
sub
or
adc
cmp
cmp
cmp
jle
pop
mov
inc
idivb
dec
lcall
out
aas
inc
decb
sub
xchg
test
out
jg
add
xor
repnz
xor
mov
ret
stc
cmpsb
sub
aaa
or
pusha
dec
push
push
into
cmp
cmp
cmp
inc
cmp
xchg
clc
cmp
repnz
cmp
cmp
cmp
cmp
cmp
pop
inc
push
ja
push
stos
movsb
mov
loop
imul
xor
push
inc
call
push
mov
xor
xor
ja
xor
ljmp
xor
xor
int
inc
cmp
fmuls
cmp
cmp
cmp
mov
cmc
dec
js
push
cmp
subb
roll
jb
jle
xchg
adc
jno
xchg
pusha
xor
mov
loop
push
xchg
mov
mov
nop
add
aaa
xor
popf
sub
aaa
xchg
xor
xor
ret
mov
or
ja
sbb
cmpl
mov
mov
cld
aaa
add
cli
add
or
push
repnz
dec
cmp
lahf
cmp
cmp
cmp
jbe
cmp
cmp
fisubrs
stos
cmp
cmp
cmp
loop
es
ljmp
or
cmp
aas
pop
cmp
xor
mov
inc
xor
sbb
cmp
mov
mov
scas
xor
dec
lret
xchg
mov
xor
xor
xchg
xchg
lods
xor
lods
aaa
int
pop
jae
push
fisttps
jnp
mov
xlat
and
dec
out
dec
mov
push
add
jg
push
xor
xor
ss
imul
mov
sbb
mov
js
cmp
cmp
outsb
jne
loopne
dec
add
lods
cmp
leave
aaa
and
into
or
mov
fcoms
or
xor
xor
bound
add
mov
ss
aaa
push
adc
loope
in
aaa
dec
cmp
cmp
stc
cmp
mov
push
add
cmp
and
mov
mov
push
xchg
cmpsb
xor
push
xor
mov
aas
cld
jg
aaa
gs
xorb
aaa
mov
lret
cmp
cmp
cmp
adcb
outsb
stos
fidivrl
xchg
xchg
cmp
push
or
cmpl
inc
aas
jp
xchg
jbe
testl
out
push
mov
incb
icebp
fisttps
cmp
cmp
cmp
cmp
adc
fdivrs
add
scas
mov
xor
shll
stos
add
cmpsl
push
insb
cli
inc
xor
xor
dec
xor
adc
jmp
jge
lret
cmp
cmp
divb
mov
xchg
push
mov
mov
stc
or
fcmovbe
or
xlat
out
loop
sbb
inc
jb
and
sub
sub
adc
or
cmp
inc
add
sub
xor
aaa
and
mov
cmp
mov
mov
sub
repnz
loope
loopne
xor
xor
jbe
mov
jne
shr
lahf
inc
dec
xor
ret
inc
out
xor
xor
push
ss
ss
mov
fnstenv
cmc
aaa
pop
push
sub
inc
adc
cmp
pop
cmp
cmp
jle
cli
sub
pop
cmp
jle
adc
sbb
call
dec
mov
cmp
cmp
push
jle
push
aaa
xchg
xor
addb
push
movsb
xor
mov
filds
jae
lds
xor
dec
les
mov
mov
test
icebp
cmp
cmp
cmp
cmp
cmp
fstpl
lcall
icebp
mov
push
push
xor
lock
aaa
push
cmp
jp
lea
scas
cmp
inc
inc
and
jp
jbe
add
and
int3
xor
xor
mov
fdivl
loopne
in
xorl
sbbl
mov
push
push
jle
bound
cmp
out
jno
pop
ret
ds
mov
adc
xor
cmp
or
xor
cmpsb
cmp
mov
mov
decl
icebp
jp
xor
xor
xor
sub
sbb
or
mov
inc
add
xor
inc
test
xlat
xor
xor
xor
xchg
dec
xor
aas
out
adc
bound
shl
xor
xchg
pop
mov
aaa
cmp
mov
dec
and
aaa
dec
cmp
jne
es
sarb
and
jae
std
hlt
mov
out
out
inc
mov
fwait
cmp
mov
inc
pop
mov
cmp
dec
out
cmp
jg
jge
cmp
and
shl
lock
xor
inc
dec
dec
gs
test
mov
xor
mov
loop
outsb
jge
in
mov
xor
mov
sub
xor
push
aaa
popa
aaa
lahf
aaa
aaa
add
rorb
adc
daa
cmp
cld
inc
call
sub
int
loopne
and
push
or
movsb
inc
push
xchg
mov
lds
aad
pop
adc
adc
dec
xor
push
cwtl
or
cmp
cmp
cmp
inc
sti
cmp
add
cmpsl
push
xchg
cmp
pop
es
push
ljmp
lock
jp
outsb
push
xor
jl
ss
je
js
jl
jle
inc
push
test
cld
mov
mov
pop
frstor
inc
out
push
mov
xor
sahf
cs
xor
inc
mov
mov
dec
jge
sarb
xor
stos
mov
mov
lcall
loopne
loopne
roll
pop
jp
xor
and
push
and
ss
mov
pop
data16
add
push
iret
aaa
incl
out
cmp
and
cmp
push
addl
cmp
neg
push
adc
cmp
sbbl
cwtl
cmp
xor
cmp
jl
mov
xchg
jbe
add
jg
cmp
cmp
cmp
cmp
mov
cmp
aas
push
add
pop
fdivrs
cmpsb
ds
ja
dec
dec
inc
loop
pop
jg,pt
test
mov
mov
xlat
inc
ljmp
pop
fwait
lret
lods
sub
push
or
inc
xor
call
lods
dec
mov
pop
xor
xor
ss
pop
mov
scas
xor
mov
xorb
mov
scas
jo
inc
ds
rorb
lcall
mov
push
xor
push
or
cmp
ljmp
cmp
stos
adc
sub
inc
cmp
jno
mov
mov
cmp
lcall
xor
dec
cmp
jns
xchg
adc
or
iret
add
and
loop
dec
adc
outsb
ds
or
loopne
inc
test
aad
and
pop
lahf
es
aad
push
sub
cmc
xor
xchg
add
jecxz
mov
xchg
xor
call
push
sbbl
or
or
repnz
ss
daa
cmp
rorb
push
cli
ja
inc
inc
sahf
ljmp
jle
sarb
pop
or
jbe
pop
sbb
xchg
cmp
cmp
push
jmp
cmp
cmp
call
dec
cmp
lock
lods
sub
push
and
and
xor
pushf
sub
aam
in
xor
push
xor
stos
aad
mov
bound
push
and
stos
dec
dec
ret
test
mov
out
add
nop
xor
movsb
xor
add
xor
int3
cli
aad
das
mov
xor
xor
xor
xchg
shr
xor
xor
call
cmp
cmp
xchg
dec
ja
sub
xchg
cmp
or
adc
adc
sbb
sub
imul
into
ret
pop
cli
inc
pop
js
lcall
mov
add
pop
and
or
dec
repnz
test
mov
cli
loope
push
ss
loope
push
cli
call
push
jb
adc
xchg
cmp
cmp
cmp
cmp
add
inc
cmp
mov
fnsave
cmp
cmp
outsb
inc
loop
rolb
xor
jmp
ds
out
adc
fs
mov
sub
rcl
xor
push
xor
decb
add
scas
xchg
mov
add
out
or
mov
jo
sub
out
or
or
add
jmp
shl
mov
adc
pushl
xchg
cmp
cmp
mov
xor
adc
movsl
jb
mov
into
lcall
ja
pop
xor
xor
cs
add
and
add
xor
mov
adc
cmp
cmp
sarb
add
sbb
cmpsb
cmp
cmp
dec
cmp
xor
scas
cmp
jbe
aam
sbb
divl
add
cmp
lret
add
pop
jmp
jbe
xor
pop
add
xor
xor
xor
mov
mov
mov
cs
inc
add
pop
loop
adc
mov
mov
shlb
outsb
int3
add
enter
sbb
xor
jp
push
icebp
push
mov
es
xor
mov
mov
sbb
lcall
cld
ds
aas
pop
aas
pop
aas
pusha
lcall
and
xchg
fs
jno
ds
or
cmp
ljmp
mov
ljmp
iret
mov
sub
mov
jne
mov
outsb
out
fists
icebp
cmp
nop
add
clc
xor
xor
mov
xor
sub
inc
add
je
xor
ds
mov
dec
push
add
outsb
subb
adc
cld
ss
ficomps
fwait
jb
cmp
pushf
cli
outsb
cmpsb
ja
mov
testl
ljmp
xor
xor
push
xor
add
pusha
xor
shrl
cld
push
popf
inc
ja
add
mov
sarl
mov
out
sub
or
cmpsb
sbb
insb
aas
int
dec
ss
rcrb
cmp
ljmp
sbb
add
add
xchg
cld
ja
imul
xor
xor
xor
or
decl
leave
aaa
cld
cmp
cmp
cmp
push
aaa
mov
push
cmp
mov
add
lret
loop
jno
push
sub
xchg
cmp
push
scas
test
push
mov
and
hlt
mov
fisubl
fiadds
cmp
ljmp
mov
cmp
xorps
ret
pop
adc
orb
cmp
push
ja,pt
xchg
rclb
jecxz
aas
cwtl
sahf
jnp
cmpb
ret
sbb
hlt
ja
and
xor
inc
cld
cmp
sub
mov
xor
out
add
inc
or
mov
mov
jge
loope
xor
aaa
lret
push
inc
cmp
sub
mov
stos
cmp
add
movsb
cmp
setg
push
ret
pop
aas
icebp
idiv
clc
loop
inc
adc
orl
push
pop
ljmp
xor
push
test
xlat
xor
add
shl
xor
xor
xor
gs
xchg
adc
mov
xor
lret
xchg
cmpsb
jecxz
push
or
push
xor
jo
jo
lea
pushf
loop
jle
aaa
cmp
inc
add
ljmp
dec
cmp
cmp
pop
cmp
cmp
fmull
fistps
pop
cmp
call
and
sub
mov
insl
cmp
fsubl
scas
jle
inc
xor
sub
push
push
or
sarl
fnstsw
jecxz
or
ds
cmp
pushf
outsb
nop
cmp
aam
add
adc
sub
pop
ljmp
fistpll
lret
loopne
cmpsl
jp
test
punpckhdq
loopne,pn
scas
xor
into
lret
adc
sub
data16
out
inc
jo
mov
scas
sbb
cmp
rorb
jns
mov
mov
fistps
sub
ds
cmp
gs
cmp
sbb
add
cmp
adc
mov
mov
mov
push
cmp
stos
or
sbb
out
add
cmpsl
jb
lods
repnz
xchg
ret
cmp
sbbl
pop
test
and
dec
xbegin
repnz
cmp
adc
int3
rclb
xchg
jb
stos
and
daa
mov
or
lret
mov
xchg
push
pop
out
push
mov
inc
pop
inc
test
sbb
dec
sub
sarb
sbb
lock
cmp
fdivrs
call
pop
cmp
cmpb
or
out
aas
pop
aaa
stos
pop
jg
push
into
js
cmpb
test
push
aas
sarb
aam
fdivrs
fcoml
loopne
push
xor
xor
sti
sbb
or
insb
repnz
xor
sbb
inc
fisttpl
roll
inc
ljmp
stos
xchg
ret
repnz
mov
fidivrl
loopne
xor
cmp
cmp
inc
xor
xchg
adc
push
jg
rcrb
ret
push
cmp
andb
mov
int3
sbbb
ret
idivb
jb
xchg
sub
ffreep
aaa
cmp
cmp
mov
dec
mov
sbb
out
ds
push
pop
xchg
mov
data16
adc
mov
icebp
out
jno
cmp
sbb
cmc
xor
xchg
aad
jmp
mov
stos
xor
push
shll
xor
faddl
adcl
push
and
ret
outsb
jne
and
and
ss
push
test
incb
mov
xchg
ss
lcall
shll
inc
push
lcall
mov
rcrl
jno
cmp
inc
inc
cmp
pop
or
jbe
jl
lea
cmpsb
mov
cmp
push
add
cmp
into
add
push
inc
push
jp
mov
enter
cmp
jmp
cmp
sbb
jmp
repnz
sahf
mov
cwtl
cmp
stos
icebp
sub
cmpl
mov
sub
xor
push
add
xchg
aas
outsb
orb
add
sahf
add
push
wrmsr
sub
popf
xor
jle
lcall
jb
add
sar
fwait
cs
pop
stos
dec
pop
xor
xorl
or
jb
sar
inc
sbb
xor
xchg
lcall
in
xor
xor
incb
xor
dec
jge
push
add
xor
xor
xchg
es
jo
jo
stos
jp
add
jg
roll
xchg
mov
push
mov
push
dec
cmp
call
test
xchg
dec
aad
jecxz
out
ds
sbb
cmp
inc
aas
push
aas
jns
mov
add
pop
pop
dec
or
clc
cs
inc
xor
jbe
fwait
and
es
mov
outsb
outsb
adc
test
push
lods
ret
mov
mov
mov
cmp
cmp
dec
pop
into
jne
es
mov
sbb
stos
aad
sbb
and
popf
inc
xlat
repnz
aaa
sbbl
xchg
cld
cmp
out
decb
cmp
or
push
cmp
or
cli
jp
cmpb
cmp
add
cmp
aaa
mov
add
negb
sub
scas
push
or
inc
imul
aam
cwtl
cmpsb
dec
pop
cs
add
arpl
ss
clc
pop
jne
es
lret
aaa
jp
jg
sahf
cmp
pop
ret
cmp
add
sbb
add
idivb
pop
data16
decb
inc
sub
cmp
lcall
js
ljmp
xchg
cmp
cmp
cmp
fbld
je
adc
ret
ds
dec
aas
pop
loope
jo
or
je
and
lcall
add
jecxz
cmp
sbb
mov
lds
lret
call
outsb
add
mov
mov
mov
rcl
xchg
clc
xorl
xor
mov
push
push
cmp
cmp
cmp
cmp
cmp
out
mov
sbb
push
lret
lret
mov
bound
into
jbe,pt
cmp
add
push
inc
jle
popf
xlat
aad
mov
cmp
cs
aas
rcl
rcr
orb
pop
sub
xor
test
aam
pop
ljmp
stc
or
lret
call
ja
ss
test
lds
inc
mov
push
jp
popf
adc
cmpsb
in
bound
pop
cmp
bound
lods
outsl
inc
dec
sbb
cmp
rcr
stos
mov
hlt
mov
cmp
sub
mov
pop
xor
jge
imul
mov
mov
mov
xchg
ss
or
cmp
aad
outsl
pop
sarl
in
mov
cmp
sbb
add
mov
inc
mov
sbb
push
xchg
jo
inc
ss
test
cmpb
nop
push
xchg
stos
bound
outsb
fnstcw
cmp
cmp
inc
fisttps
pop
cmp
cmp
inc
cmp
add
lcall
stos
ljmp
or
ss
ds
stos
add
outsb
adc
pop
mov
aas
push
andb
mov
xchg
xchg
aas
fwait
mov
add
es
jmp
cmpsb
cmp
out
xor
push
stos
scas
scas
sbb
xor
xor
test
mov
jmp
jmp
xor
cmp
lcall
xor
xor
pop
incl
xor
into
adc
sbb
xor
xor
or
punpckldq
xor
adc
inc
les
xchg
cmp
adc
sub
fdivrl
adc
inc
cmp
cmp
cmp
mov
and
or
daa
ds
ds
ds
dec
cmp
mov
clc
outsl
rorb
dec
rorb
mov
stos
xor
xchg
push
add
lds
xor
xor
cmp
xor
xor
jg
out
ljmp
mov
xchg
xor
push
and
rclb
xor
mov
inc
aaa
push
shrl
rcr
out
aaa
aam
in
xor
pop
sbb
ljmp
inc
aaa
cli
nop
cmp
loop
decb
push
cmp
cmp
cmp
xchg
fwait
cmp
cmp
shlb
lods
clc
pop
sarb
jle
pop
dec
jle
or
mov
add
jge
stos
xor
test
bound
mov
ljmp
ret
inc
jl
out
ss
incl
dec
ljmp
add
fcmove
aaa
shll
fbstp
cmp
scas
or
enter
jne
adc
aam
push
cltd
pop
inc
je
add
mov
pop
repnz
sub
rcrb
inc
bound
mov
or
sarb
push
inc
dec
ss
xor
jl
addb
shrb
divb
adc
sahf
lret
xor
mov
mov
adc
filds
xor
xor
pop
sahf
push
add
mov
add
stos
out
xor
test
dec
xchg
push
out
cmp
or
into
sub
dec
pop
push
aad
xor
or
ljmp
cs
out
pop
cli
jmp
adc
push
scas
rcll
mov
push
pushfw
out
adc
rcrb
xor
cmpsb
adc
add
ss
idiv
pop
mov
movsl
cmp
cmp
cmp
cmp
cmp
cmp
mov
or
add
push
jmp
add
shll
adc
xchg
jmp
mov
cmp
mov
cmp
movsl
cmp
mov
or
mov
jg,pt
mov
icebp
outsb
and
mov
inc
dec
inc
xor
js
inc
shrb
adc
push
dec
clc
push
xor
ret
xchg
fcomip
dec
sub
cmp
pop
inc
pop
mov
sbb
pop
mov
mov
cli
scas
in
push
sub
xor
push
mov
jl
enter
pop
ret
pop
or
bound
jb
inc
ret
add
enter
dec
mov
jbe
push
and
insb
jp
cmp
xchg
mov
mov
add
adc
push
inc
addr16
lods
push
mov
mov
jb
jmp
pop
aas
jb
jge
lret
push
mov
jle
xchg
pop
test
scas
fisubs
insb
push
xorb
xor
pop
mov
xor
jle
or
or
xor
cmp
add
jb
stos
rorl
inc
xor
add
push
add
bound
xor
mov
stos
addl
and
fisubl
outsl
repnz
icebp
cmp
loop
out
xor
cmp
mov
cmpb
pop
cmp
ret
rcrb
ds
xchg
push
mov
sarl
in
hlt
push
cmp
push
ljmp
dec
cmp
cli
jno
jns
cwtl
addl
out
outsb
push
shrb
adc
pop
mov
inc
mov
jle
inc
push
aaa
fmuls
mov
aas
ss
xor
xor
jle
int
mov
push
inc
icebp
pop
stos
les
jno
lock
sbb
dec
test
xchg
xor
pop
into
ljmp
mov
cmp
adc
cli
in
adc
push
es
stos
hlt
scas
cld
cmp
cmp
nop
mov
cmp
cmp
sbb
pop
dec
cmp
pop
clc
mov
cmp
lret
js
rolb
mov
mov
adc
push
sbb
ds
cmp
cmp
pop
mov
cli
jmp
dec
ds
pop
inc
je
lcall
sahf
test
push
mov
push
mov
add
jb
lcall
je
in
xor
cmp
mov
add
bound
xchg
mov
and
test
lret
mov
divl
ss
lock
push
data16
lahf
cmp
inc
movsl
and
mov
pop
mov
push
jne
nop
push
mov
add
out
loopne
loope
push
into
ds
inc
aas
xchg
out
lahf
push
sbb
xor
xor
inc
inc
test
into
jnp
lcall
xchg
shlb
push
lea
mov
jle
fcmove
outsb
xchg
lcall
inc
pop
ret
push
loop
outsl
adc
cmp
cmpsl
fiaddl
lcall
jg
lds
inc
and
out
inc
mov
jp
xchg
mov
pop
outsb
es
or
inc
and
pop
jo
sbb
lods
inc
adc
or
add
cs
sbb
sub
cwtl
xchg
bound
test
cmp
sub
push
fsubl
xor
pop
and
das
pop
clc
push
pop
out
ss
je
fnstcw
sbb
or
and
stos
jp
stos
aad
das
into
loop
or
or
dec
out
ljmp
std
inc
ss
fidivrl
cmp
dec
xchg
lds
xor
pop
dec
sub
mov
xor
xor
subl
stos
shll
mov
xor
sbb
call
stos
lea
inc
ret
mov
mov
adc
mov
adc
ss
cmp
or
scas
mov
lea
inc
adc
mov
xchg
sbb
lock
cmp
cmp
xor
fldl
test
movl
daa
xor
mov
sti
xor
sahf
inc
push
ja
ret
push
xchg
iret
xor
std
stos
dec
adc
outsl
jb
subb
and
xor
ds
ljmp
xchg
or
mov
faddl
cmp
mov
add
push
loop
cmp
cli
lret
fiadds
mov
inc
loop
cmp
fstpt
xor
dec
ret
je
rolb
or
dec
adcl
inc
lock
push
add
arpl
mov
mov
sub
xor
mov
add
or
or
cmpsb
sub
or
sub
mov
add
sahf
or
mov
and
aaa
push
inc
lret
push
in
cmp
mov
or
xor
outsl
movsl
xor
cmp
fildll
cmp
cmp
cmp
sar
mov
dec
cmp
rcl
xchg
push
mov
dec
mov
or
and
cmp
inc
ds
cmpsb
or
mov
mov
sub
xor
adc
push
sub
sub
sub
fisttps
out
push
fisubrs
xor
jbe
movsl
xor
jle
xor
cmp
sub
xor
cs
das
frstor
xchg
ljmp
xor
mov
orl
sti
xor
mov
xlat
pop
scas
es
bound
xor
cmpsl
sub
popl
mov
mov
mov
loop
pop
jno
stos
sahf
hlt
push
sbb
adc
push
test
cmp
insl
cmp
add
in
adc
sbb
adc
pop
pop
mov
dec
xchg
pop
sahf
mov
cmp
aaa
stos
add
mov
cmp
lret
inc
cmp
mov
xor
cmp
mov
lds
xor
test
inc
mov
add
dec
jb
jno,pt
push
add
dec
jle
mov
lret
push
pop
std
and
fwait
cmp
bnd
mov
sahf
and
inc
adc
repnz
pop
xor
jb
cmpb
pop
dec
push
add
push
add
mov
adc
outsb
jl
inc
adc
xchg
lcall
mov
shll
push
out
add
movhps
mov
sub
ljmp
xor
ret
ljmp
cmc
stos
push
andl
es
mov
addr16
scas
fldl
push
mov
sbb
ss
ss
sbb
dec
xchg
dec
scas
aaa
mov
fs
sbb
aaa
cmp
cltd
mov
xor
inc
xchg
cmp
add
jp
cmp
dec
pop
jbe
sub
mov
pop
mov
xchg
shlb
dec
xchg
push
outsl
jecxz
cmp
xchg
mov
std
push
mov
xchg
outsb
dec
aas
imul
aas
leave
xchg
push
sub
or
mov
shrl
or
sbbb
cmpsb
in
xor
lcall
xorl
or
aaa
mov
push
jmp
mov
aaa
mov
push
rorb
mov
xchg
inc
add
adc
mov
xor
mov
ret
aas
cmp
inc
xchg
mov
xchg
xor
push
test
lock
inc
mov
push
inc
test
lea
jle
ficoml
pop
inc
rcll
stos
test
ffree
subb
mov
xor
adc
add
dec
push
mov
leave
cmp
shrb
cmpsl
shlb
mov
mov
push
xchg
xchg
mov
xor
and
leave
adc
out
clc
cmp
mov
sbb
mov
fnstcw
stc
fdivp
push
sbb
addl
xor
test
lret
add
cmp
leave
xor
pop
xor
push
adc
aas
cld
fildll
or
sub
jne
xchg
ss
adc
cmp
addb
cmp
lods
add
imul
loope
jmp
cltd
xchg
ret
push
in
sub
push
jmp
and
bound
jl
call
mov
stos
popa
shlb
xor
rcll
mov
test
out
push
idivl
pop
js
mov
mov
push
xchg
icebp
push
sbb
push
aas
data16
sub
dec
mov
add
fucomp
cmp
inc
sub
shlb
ljmp
sbb
mov
xor
test
mov
adc
inc
cmp
pusha
xor
jae
mov
add
mov
daa
pop
inc
add
sarb
aam
in
call
lock
xor
push
xchg
movsb
or
data16
sbb
aaa
and
and
sub
adc
cwtl
jnp
mov
adc
adc
add
cs
cmp
int3
mov
cmp
push
stos
pop
jg
cmp
dec
cmp
pop
bound
fs
lods
outsl
les
push
cmp
addb
push
adc
dec
mov
out
push
lods
stos
icebp
push
add
into
les
or
xor
push
fsubrs
loopne
call
mov
inc
cmp
frstor
cmp
and
inc
adcl
push
add
pop
das
and
sub
dec
xor
xchg
mov
lods
inc
mov
jbe
dec
add
jo
inc
dec
push
stos
aam
test
jb
loope
std
mov
rolb
mov
arpl
or
mov
testl
fistpll
push
test
add
xor
xlat
shlb
fs
adc
mov
add
push
mov
add
xor
push
imul
test
lds
sub
pop
and
mov
mov
mov
inc
or
cmp
lea
movsb
popa
jl
jne
aam
add
xor
mov
push
pushf
cmpsb
js
cmp
adc
pop
pop
mov
rclb
outsl
pop
or
sub
sub
inc
adc
aam
je
push
lods
fmul
adc
sub
inc
mov
scas
cs
into
mov
int3
scas
cld
cs
dec
dec
test
xor
in
adc
xor
inc
aaa
scas
into
push
inc
cpuid
sbb
call
adc
out
pushf
ss
loop
or
cld
cmp
jno
inc
jecxz
ds
int3
inc
inc
mov
cmp
sub
test
cmp
cmp
adc
jle
or
mov
and
push
cmp
mov
inc
pop
cmpsb
and
cmp
insb
push
xchg
rolb
cmp
scas
scas
adc
sub
cmp
add
arpl
nop
push
roll
push
add
test
push
add
adc
mov
call
sbb
pop
pop
or
nop
pop
lods
inc
fsubl
or
ret
movsb
push
testl
xchg
jb
cs
aaa
jmp
adc
iret
xor
mov
pop
mov
inc
mov
jl
cmp
and
sbb
ja
push
out
xorb
lea
test
lods
push
mov
xor
add
cmp
pop
adc
xchg
cmp
shlb
push
mov
cmp
aam
fsubs
loopne
call
jl
adc
push
add
cmp
cmp
lock
fildll
jb
pop
push
les
dec
xchg
push
cmp
cmp
cmp
adc
shll
fs
jo
cmp
push
js
jl
mov
push
nop
es
shlb
lcall
jmp
cmp
adc
sbb
test
add
xor
aad
mov
adc
jg
add
mov
lods
mov
imul
inc
sub
and
cmp
test
or
mov
push
and
lret
aam
sbb
xor
adc
fnsave
xor
aam
les
sub
dec
call
sub
xor
adc
data16
imul
outsb
sub
xor
adc
pop
clc
push
negb
sub
mov
push
jb
add
add
scas
add
orb
mov
xor
insb
push
or
ret
cmp
cmp
inc
sbb
cmp
repz
lds
pop
mov
ds
pop
js
sbbb
cmp
test
sbb
inc
popa
cmpl
pop
xor
mov
dec
call
ds
pop
sub
xor
push
inc
sbb
add
jg
xor
movsb
jp
stos
in
push
add
push
hlt
xor
cli
sub
jp
pop
pop
scas
cwtl
xor
fadds
out
adc
iret
and
push
aaa
insb
fndisi(8087
test
push
mov
stos
movsb
lret
in
notb
adcb
and
push
lcall
pushf
ss
fdiv
add
push
loopne
call
data16
cmp
or
or
push
loopne
pop
push
sbb
sbb
sub
xor
cmp
cmp
dec
jbe
sbb
shrl
push
mov
pop
inc
lds
and
pop
pop
pop
pop
sub
pop
outsb
mov
bnd
pop
push
pop
jl
jmp
hlt
sub
pushf
jbe
aas
pop
fs
mov
aaa
and
adc
sbb
xor
dec
adc
dec
dec
in
adc
inc
cmp
je
fdivs
fcoml
push
test
add
xor
div
push
movsl
call
sbb
vrcpps
sub
cltd
orb
push
ret
js
mov
in
mov
loopne
call
cs
scas
clc
xor
pop
add
or
ret
es
sbb
inc
mov
xchg
iret
insb
mov
int3
testl
daa
insb
xor
xor
pop
stos
pop
push
or
andl
enter
push
or
sbb
xor
pop
and
inc
sub
or
xchg
xor
xor
cmp
test
mov
outsb
mov
test
push
es
add
sbb
ds
les
cmp
sbb
test
adc
insb
outsl
adc
xor
push
or
mov
mov
fs
rorb
or
xchg
add
xorb
rclb
sahf
adc
xor
and
test
js
aam
adc
test
aad
ret
inc
cs
mov
test
enter
push
mov
inc
add
loope
xor
test
cmc
enter
add
mov
inc
or
mov
pop
dec
add
adc
or
scas
sub
xchg
or
mov
jecxz
inc
fimull
inc
inc
pushf
inc
test
push
dec
lds
shrb
sbb
cmpl
pop
inc
jg
inc
mov
or
push
add
or
pop
inc
and
sub
pop
mov
xchg
nop
sbb
out
cmp
sbb
call
cmp
fisttpl
mov
mov
jnp
dec
pop
jne
sarb
xor
or
sub
push
divb
subb
imul
pop
inc
lods
lahf
loopne
jl
popf
clc
call
es
pop
pop
inc
sub
cld
add
or
ret
inc
adc
out
and
push
popf
dec
sub
fdivrl
fisubs
mov
inc
push
mov
mov
lret
adc
and
imul
dec
cmpsb
xor
or
stos
lea
lahf
fdivl
add
mov
adc
or
repz
and
xor
mov
cli
mov
ret
rcl
mov
pop
and
sub
push
sub
scas
aam
or
aam
scas
pop
out
or
xor
inc
aaa
test
push
pusha
out
js
jl
push
cmp
cmp
push
push
cmp
cwtl
push
mov
sbb
mov
or
dec
enter
je
xor
sbb
data16
clc
cmp
test
scas
xchg
outsb
shlb
xchg
mov
jmp
pop
inc
enter
cmp
adc
inc
push
and
and
inc
mov
rclb
cmp
dec
xchg
jl
dec
inc
les
sbb
aaa
aam
loopne
jb
addr16
mov
mov
fcom
cmp
stos
push
push
push
sub
sbb
movsl
xchg
mov
mov
add
push
addb
sbb
and
mov
add
sub
sbbb
lea
or
push
pop
aaa
inc
dec
mov
js
lods
push
enter
loope
cld
sbb
dec
sub
adc
sbb
mov
lahf
in
rorl
loop
sub
cmp
aaa
inc
pop
or
xchg
shr
sbb
adc
loop
int3
cmp
jl
adc
int3
sub
call
push
aam
adc
je
bound
test
fwait
int3
fwait
adc
push
call
xor
ret
push
out
mov
adc
lods
and
shrb
jo
add
push
loop
lret
push
or
sahf
subb
arpl
sub
repz
push
arpl
js
xchg
popf
lea
xor
andl
je
cmpb
rolb
xor
orl
bnd
sub
push
mov
mov
call
mov
cmp
insb
ljmp
mov
rcrb
mov
jne
pop
cmpsl
js
lods
test
add
jno
xchg
mov
insb
and
mov
sub
das
mov
popf
movsl
cltd
movsl
xor
fs
pop
dec
push
dec
cmpsb
mov
iret
loopne
loopne
cmp
stos
je
push
inc
sub
int
lods
push
loopne
adc
add
ror
xor
dec
fs
and
ficomps
sub
fwait
jo
and
lea
ret
pop
jae
xor
pop
rol
mov
pusha
xchg
ljmp
inc
add
inc
dec
ds
and
ficoms
push
shrb
xor
and
push
rorl
out
pushf
sbb
cmp
inc
adc
and
inc
clc
mov
nop
cli
movsb
and
shl
adc
cli
hlt
out
incb
fisubl
mov
mov
push
jl
nop
or
inc
sub
int3
arpl
sub
and
xor
fs
pop
pop
repnz
pushf
bound
mov
icebp
js
or
lock
ljmp
ljmp
call
push
fcom
movsb
cs
sub
ss
dec
ds
icebp
ficomps
out
into
shlb
in
hlt
dec
add
movsb
cs
sbb
push
out
sub
lcall
adc
pop
lds
push
push
test
ret
movsb
movb
inc
fdivp
cmpsb
add
sbb
call
xor
je
jecxz
je
test
xchg
cli
xor
movsb
cmpsb
mov
faddl
addb
lock
lcall
repz
aaa
fadd
push
xchg
cmp
cmp
xchg
pushf
outsb
mov
les
push
jo
mov
add
or
cs
push
adc
push
inc
adc
nop
push
mov
fmull
in
xchg
cld
mov
mov
popl
xor
cmp
dec
mov
push
lea
dec
mov
xor
jbe
shll
or
jb
adc
js
stos
out
rol
and
lods
ret
call
or
sbb
inc
mov
insb
adc
cmp
cli
xchg
ds
jl
nop
add
test
pop
mov
cmc
jecxz
in
cld
sub
mov
xor
inc
push
jl
loope
push
data16
fidivrs
xor
sbbb
add
pop
cli
in
hlt
sbb
push
push
je
sub
sti
dec
test
push
roll
pop
test
lods
push
mov
push
int3
ljmp
movsb
jo
fisubrl
ljmp
je
ljmp
fsubl
in
es
js
add
sbb
cmp
loopne
insb
adc
test
rcrb
add
push
add
xor
js
mov
sub
cli
aam
fdivrl
in
xor
jne
pop
push
out
inc
jp
xor
fcmovbe
aam
inc
sbb
add
cmp
rolb
fidivl
jo
add
faddp
loop
mov
cld
cli
push
jo
mov
fidivrl
inc
roll
rcrb
test
push
nop
adc
aam
adc
inc
mov
pop
mov
or
adc
repnz
xor
inc
out
pusha
adc
sbb
sahf
mov
dec
adc
icebp
pop
pop
repnz
loop
cmp
jo
test
or
push
mov
icebp
xlat
xor
pop
mov
jle
mov
cmpsl
loopne
add
mov
cmp
push
lcall
aam
clc
push
cmp
add
pop
cmpsl
and
dec
sbb
bound
jno
icebp
jl
pushf
cmp
add
shll
push
xor
int3
mov
cld
mov
inc
adc
jno
cmpsb
test
xchg
push
push
in
scas
movsb
arpl
jmp
fiadds
mov
sub
mov
xor
arpl
shr
out
mov
cmp
push
mov
fcmove
iret
sbb
pop
cmp
nop
push
mov
xor
pop
dec
mov
sub
cmp
pop
mov
test
dec
js
out
lret
add
ljmp
mov
outsb
jge
add
sub
ljmp
inc
jmp
pushfw
stos
push
push
dec
jmp
pop
sub
add
dec
push
jmp
mov
es
loop
loopne
or
or
mov
jmp
rolb
mov
xchg
dec
or
clc
push
repnz
add
add
inc
repnz
fs
xchg
jp
or
add
and
jl
add
push
imulb
pushf
mov
stos
jb
rolb
and
sub
inc
aam
dec
add
js
add
lcall
push
push
adc
sub
sbb
pushf
or
clc
icebp
testl
shl
icebp
icebp
jecxz
loopne
or
or
jbe
cwtl
mov
rorb
cld
arpl
jae
xor
pop
or
movsb
dec
jbe
or
cwtl
or
inc
dec
js
xchg
mov
push
cwtl
push
js
pop
xchg
inc
cld
push
dec
sbb
lcall
pop
inc
add
push
mov
pop
cmp
xchg
ficoml
xor
mov
test
fimuls
fs
mov
push
orb
in
add
adc
pop
jle
xor
aam
call
xor
mov
jg
inc
aaa
push
rorb
cmp
loopne
pusha
shld
pop
fdivl
dec
test
fsubrp
mov
cmp
sub
pop
jle
pop
movsb
inc
jl
loop
cli
hlt
jp
repz
dec
cmp
push
je
mov
cld
shll
add
adc
lock
popf
pop
push
fnstsw
mov
inc
es
cmp
inc
sub
mov
mov
pop
sti
sbb
out
push
pusha
adc
or
sbb
fdivl
mov
mov
adc
push
lock
scas
sub
push
sbb
inc
scas
mov
scas
mov
or
pop
sub
arpl
ss
adc
push
enter
adc
jge
mov
enter
jno
add
lahf
pop
xchg
mov
ret
outsb
sar
clc
mov
bound
pop
lea
fisubl
es
adc
push
inc
mov
push
sarb
pop
cld
bound
ss
xlat
js
test
push
xchg
add
mov
push
je,pt
pushf
stos
test
mov
dec
sub
sub
inc
and
js
cwtl
dec
and
aas
sub
xlat
fidivrl
mov
pop
add
and
dec
sub
push
adc
jo
call
inc
cld
andps
scas
xor
int3
mov
adc
or
lcall
push
test
scas
mov
mov
fadds
clc
push
and
and
aam
push
mov
pusha
adc
push
mov
adc
jnp
push
xor
orl
or
pop
push
inc
movsb
mov
es
pushfw
jp
das
mov
sub
das
fsubrl
out
scas
pop
rclb
cmpsl
inc
aas
pop
or
add
test
and
jg
mov
xchg
or
dec
sub
and
ss
fwait
jge
inc
add
ss
sahf
inc
or
std
xlat
clc
scas
dec
add
mov
pusha
add
call
or
psrad
bound
or
dec
sarb
pop
or
add
inc
pop
into
mov
pop
add
mov
sbb
add
and
or
jo
lods
jae
cmpsb
lea
mov
mov
add
push
and
cmp
mov
xlat
mov
jmp
iret
lret
ret
adc
cmp
mov
xor
add
inc
js
ucomiss
lods
xchg
ret
ss
fdivrp
testl
push
pop
cli
out
or
jecxz
dec
sub
lret
js
mov
dec
inc
jae
sbb
dec
arpl
test
xchg
cmp
sar
dec
popa
lods
movsl
repnz
cs
out
dec
pop
or
mov
mov
sub
cmpsl
push
cli
ret
ljmp
xchg
dec
ds
enter
xor
hlt
outsl
push
pop
push
shlb
mov
add
mov
add
add
dec
lods
or
bound
adc
jb
arpl
rorb
dec
inc
add
pop
pushf
stos
adc
mov
pop
pop
dec
mov
mov
orps
mov
push
cli
test
push
add
movsl
mov
pushf
jmp
push
sbb
mov
fcmove
js
jp
scas
and
push
pop
push
fmuls
test
cs
cmp
pusha
xchg
bound
adc
inc
mov
mov
test
loope
jecxz
sub
pusha
mov
fwait
inc
subl
add
jl
xchg
mov
dec
sbb
test
clc
or
push
es
xor
push
js
pop
repz
adc
ret
loop
sub
movsl
lret
dec
popa
mov
ret
mov
loopne
mov
adc
dec
inc
js
dec
loope
mov
psraw
aaa
loopnew
pushf
into
ret
dec
cmp
rcrb
xchg
mov
sbb
ja
imul
jb
ret
mov
daa
sbb
add
add
sysret
ficomps
js
xor
push
add
add
or
add
adc
inc
inc
sub
dec
jmp
je
inc
loop
mov
data16
add
movsl
dec
mov
pop
mov
inc
inc
and
jl
das
jo
sbb
daa
pop
or
jge
dec
jge
xchg
arpl
or
dec
mov
sahf
psrad
outsb
bound
faddp
push
cmpsb
cmpsw
ljmp
sahf
stos
dec
popf
dec
mov
test
lods
push
aam
cmp
jmp
sub
sti
subb
jne
pop
pop
push
subb
push
outsl
pop
loopne
gs
push
dec
cmpl
rclb
dec
adc
jp
adc
and
loopne
fistpl
orb
jb
dec
xchg
js
jg,pt
cmp
loopnew
rol
push
into
rcrb
scas
sbb
mov
mov
sahf
andl
add
jp
sahf
out
pop
jb
mov
jo
in
pop
xor
push
into
out
mov
xor
in
pop
cmc
inc
aas
jae
add
ret
divl
adc
inc
pop
sub
push
dec
loop
imulb
lahf
ret
repnz
ret
or
jns
push
lahf
aaa
outsl
dec
pop
jo
daa
adc
test
testl
repnz
arpl
mov
dec
loop,pn
cmpb
je
pop
adc
les
inc
and
les
test
pop
jp
inc
adc
or
lcall
jbe
test
cmp
imul
out
adc
dec
sub
inc
ret
pop
or
rorb
imul
daa
cmp
push
xchg
rcl
xlat
dec
daa
xor
in
or
and
movsb
or
sahf
pusha
add
add
jno
xchg
jo
pop
fiadds
shufps
cmp
jae
shlb
jl
and
mov
movsb
add
xchg
push
dec
pusha
and
xorl
and
mov
add
adc
cmp
hlt
and
jp
add
add
dec
rcrl
cmovg
push
cwtl
loopne
js
ljmp
or
ret
inc
lods
mov
adc
push
pop
jecxz
lret
rcrb
xor
popa
sub
mov
cmpb
rcl
js
dec
shrb
inc
dec
loope
test
push
lret
inc
into
inc
add
sub
sbb
push
stos
and
push
inc
nop
jmp
mov
repz
repnz
out
pop
cli
div
inc
mov
and
inc
push
mov
or
mov
xchg
js
xchg
scas
fldt
mov
mov
cltd
dec
jl
adc
inc
ficoms
sub
lods
add
add
adcl
push
pop
mov
les
push
cld
rcll
xlat
and
lods
adcb
push
loop
je
inc
mov
aaa
icebp
dec
or
iret
mov
xchg
xor
adc
cli
add
inc
or
adc
cmp
dec
dec
inc
add
lock
cmp
mov
stos
movsb
xchg
sub
dec
sbb
push
jg
xor
inc
cmp
scas
mov
dec
mov
mov
lods
mov
les
icebp
pusha
cmpsl
imul
adc
arpl
loope
mov
add
hlt
scas
jle
add
stos
sbb
mov
stos
and
movsb
cs
mov
aam
or
dec
dec
inc
lds
test
xor
rolb
xor
add
xor
imul
mov
pop
addr16
jp
mov
pop
xlat
inc
sub
ja
sbb
inc
shrb
scas
imul
jbe
mov
rclb
push
je
lock
mov
sbb
mov
inc
sub
dec
mov
andb
jecxz
orb
inc
push
xor
push
clc
andb
mov
mov
inc
xor
adc
dec
sbb
push
mov
mov
inc
xor
mov
and
push
cmp
mov
dec
inc
daa
mov
cli
cli
sub
out
loopne
and
stos
pop
pop
sbb
push
cli
inc
scas
xchg
jo
loop
inc
jne
daa
inc
shlb
push
dec
sub
jbe
arpl
or
arpl
test
jg
arpl
sub
add
xor
ficomps
inc
mov
lea
push
sti
pop
lods
cmpsb
and
mov
ss
dec
rclb
or
add
or
in
ret
and
xor
xor
movsb
hlt
inc
adcl
jmp
dec
ljmp
dec
mov
push
outsb
stos
and
xor
jbe
jp
sbbb
mov
mov
xchg
xor
inc
and
sahf
mov
cmpb
jbe
inc
fstl
outsb
mov
pop
pop
outsb
into
xor
data16
mov
ljmp
xor
sarb
and
mov
shrb
adc
dec
cmp
lods
stos
and
pop
add
or
test
inc
add
test
and
or
xlat
mov
inc
or
mov
xor
mov
aad
enter
add
adc
mov
sbb
xchg
mov
push
rorl
or
adc
mov
and
into
stos
inc
push
outsl
mov
js
mov
cli
test
mov
lret
and
int
fists
cmpb
pusha
fcompl
mov
add
and
fcomps
push
sbb
shrb
fidivs
pop
cs
cs
cs
adc
pop
das
mov
orb
lret
std
or
xchg
sub
lock
mov
mov
push
sub
and
push
adc
js
cs
sbb
pop
add
jecxz
adc
inc
add
movsb
sarl
outsb
inc
add
and
or
insb
js
dec
xchg
mull
cmp
xchg
push
mov
mov
add
xor
notb
push
clc
add
cmp
bound
arpl
mov
inc
adc
adc
aaa
xor
popa
mov
sbb
int
sbb
add
sub
inc
or
loopne
sub
rolb
stos
pusha
fists
into
sbb
orb
push
in
or
sbb
sub
ss
ljmp
inc
fisttps
or
mov
xor
cs
jmp
add
push
imul
xor
das
bound
pop
or
das
incl
xor
push
shlb
gs
gs
aaa
or
push
hlt
ss
push
arpl
push
pop
sbb
fs
inc
sbb
sub
and
or
sub
mov
arpl
push
xor
gs
jbe
xor
add
pop
or
daa
or
dec
add
std
adc
adc
inc
add
ss
rolb
push
les
repz
add
mov
out
ss
jno
jb
jl
ja
test
add
ds
cltd
fldt
je
ja
jne
rcrl
jp
push
enter
andl
test
mov
fwait
int
lea
or
push
xchg
jge
int
push
jns
push
inc
cmpsb
push
test
call
mov
push
mov
and
push
ss
ljmp
add
jle
or
popf
call
pop
or
inc
mov
jnp
jns
data16
xor
push
or
xor
xor
xor
mov
ss
int
adc
js,pn
jp
or
shrl
decl
mov
pusha
sarl
inc
bound
and
sub
cmp
xchg
push
xor
ljmp
sub
pop
aas
xor
sbb
arpl
imul
mov
das
arpl
fs
adc
adc
pop
cltd
out
subl
jo
push
pushl
pop
mov
pop
cs
push
push
jns
cmp
andl
adc
push
jmp
or
hlt
lods
dec
cmpsb
mov
xor
js
and
mov
into
jmp
mov
dec
adc
cld
sahf
adc
shlb
sub
and
push
push
dec
dec
dec
ret
in
out
mov
inc
dec
dec
inc
and
movsb
pusha
data16
xor
add
in
push
int3
test
jno
push
sub
jmp
pop
push
pop
push
inc
and
push
add
jge
jnp
or
dec
inc
dec
pop
mov
fcmove
fstl
cmp
xor
add
das
xor
and
dec
push
nop
and
jo
add
notb
and
mov
aas
movsb
add
loopne
or
arpl
or
call
jnp
sub
inc
mov
ss
inc
dec
push
arpl
clc
xor
fidivl
sti
pusha
dec
dec
gs
subl
je
mov
test
mov
fimuls
imul
xor
lcall
fists
cli
mov
ja
fstl
mov
push
leave
fldt
dec
push
rol
xchg
lds
adc
ds
cmp
xchg
or
mov
add
xor
push
add
jnp
add
adc
xchg
cwtl
arpl
mov
add
dec
loope
add
test
pop
add
add
jp
inc
add
sbb
ljmp
jmp
push
or
push
push
adc
ss
and
and
es
jl
int
dec
sub
cmp
add
or
mov
rol
fdivrl
rolb
ss
add
in
in
xor
or
inc
dec
dec
dec
dec
dec
dec
dec
dec
es
ret
ljmp
test
xor
hlt
imul
outsl
int
mov
adc
das
add
jns
xor
jmp
or
xor
adc
popa
lods
lea
inc
test
push
mov
jne
push
shll
aad
aam
mov
pop
inc
aad
mov
sub
pop
cmpb
pop
mov
cli
inc
lcall
add
test
push
data16
out
push
gs
insl
mov
enter
adc
lahf
cmpsl
in
into
xchg
jae
add
mov
insl
add
add
daa
add
int
pop
add
add
push
shlb
and
add
or
pop
outsl
das
lock
gs
aaa
mov
and
add
xchg
pop
leave
add
lea
mov
lret
cmp
jmp
mov
pop
imul
subl
sbb
and
gs
insb
ret
fwait
or
jbe
jecxz
rorb
sbb
or
int3
fs
jecxz
sbb
mov
sbb
jecxz
inc
jecxz
push
sub
push
add
enter
lea
xlat
cmp
sub
xchg
mov
dec
rcrb
call
dec
loopne
shll
sub
loop
xchg
add
notl
jbe
outsl
sarb
push
adc
iret
enter
arpl
bound
mov
imul
sub
fiaddl
pop
push
xchg
sbb
and
icebp
xor
ret
sbb
or
xor
pop
push
lahf
mov
loopne
or
mov
xor
stos
or
ret
sarb
push
add
inc
shrl
xlat
cli
xor
mov
out
scas
xchg
mov
sub
push
add
add
push
sbb
stos
scas
add
lcall
loop
sub
adc
sbb
orl
push
mov
push
push
mov
sahf
push
cmp
and
cmpsl
dec
add
iret
jecxz
leave
leave
add
inc
inc
xor
mov
add
data16
lds
and
ljmp
sarb
cld
je
mov
mov
out
push
mov
mov
testb
test
push
fnstcw
movsl
mov
in
fidivs
in
outsl
popa
dec
inc
sub
aam
mov
mov
mov
mov
fldenv
add
jae
fs
mov
std
pushl
or
popa
dec
arpl
dec
cmp
arpl
sub
popa
push
in
mull
push
cmp
adc
popa
jae
popaw
adc
xchg
fs
xchg
outsb
jp
jbe
ss
insl
orb
jae
sub
push
adc
cmp
jae
out
pop
mov
mov
cs
stos
mov
in
cmp
cmp
int
inc
popa
pusha
adc
and
js
jbe
push
xor
or
add
xor
insb
sbb
popa
jne
jo
cwtl
jae
sahf
fisttpl
popa
insb
imul
jbe
mov
imul
add
cs
jp
insl
jbe
dec
ret
xor
or
pusha
addr16
aam
lds
push
outsb
sbb
jo
and
daa
mov
stc
mov
pop
sbb
adc
mov
imul
in
xor
push
insb
add
and
pop
loopne
mov
nop
mov
jmp
add
xor
or
xchg
sub
int
sub
add
insl
insl
jge
mov
cwtl
dec
shl
cmp
mov
push
mov
dec
sarl
xlat
dec
sub
andb
pop
mov
adc
pop
xor
mov
inc
jg
cmp
push
test
mov
add
add
inc
cmp
test
jmp
or
nop
adc
adc
mov
clc
push
mov
sti
popa
and
add
push
mov
xchg
inc
pop
xchg
sub
inc
inc
ret
mov
push
pusha
shrb
inc
xor
push
xor
movsl
adc
lret
cld
das
mov
stos
das
mov
sbb
push
cmp
xor
and
pop
and
lods
ret
or
mov
xor
push
cmp
inc
inc
imul
pop
lock
mov
inc
leave
xor
lods
cmp
ret
or
mov
mov
add
jne
jge
fs
lods
xchg
leave
lods
pop
and
pop
fidivs
pop
or
and
cltd
xor
std
inc
nop
adcl
pushl
cli
adcl
sub
in
mov
daa
js
pusha
dec
inc
push
push
mov
push
jb
cmp
mov
imul
pushf
dec
out
jae
inc
sbb
push
adc
xor
lock
push
jb
hlt
adc
test
push
imul
testl
push
jle
add
rolb
add
repz
sub
loopne
jle
lahf
stos
push
adc
leave
outsb
push
jb
push
orb
scas
test
and
xor
sbb
inc
mov
subb
add
add
nop
fstpt
test
add
mov
mov
pushf
pushf
pusha
popl
inc
mov
fwait
adc
jae
pop
lock
adc
adc
mov
sbb
or
xchg
rcrb
imul
push
cmpsl
sub
mov
jge
xchg
xchg
sbb
movsb
inc
fmul
or
das
call
push
mov
pop
add
sbb
push
mov
dec
rcrb
add
sbb
inc
scas
loopne
pop
popa
sub
stos
adc
nop
mul
ljmp
adc
punpckhbw
push
mov
add
or
jo
dec
sbb
pop
jne
ret
mov
cmp
pop
in
add
push
pushl
les
cmp
ret
push
les
jp
in
clc
and
inc
shlb
inc
push
jo
sub
adc
mov
mov
int3
into
xchg
mov
pop
rorb
pop
stos
aas
or
pushf
pusha
scas
push
fistl
int
adc
add
add
add
ficoml
inc
decl
fs
or
push
aas
sbb
daa
mov
adc
das
outsl
rclb
pop
test
inc
js
es
loopne
aas
test
or
inc
clc
xorb
das
stc
lock
dec
rcl
mov
cltd
call
test
adc
mov
loopne
aad
inc
out
aad
cmp
add
add
loop
or
nop
aas
mov
sub
pushl
inc
stos
test
inc
xlat
filds
cmp
push
fcompl
add
shll
das
clc
sub
fldl
iret
das
add
pop
jo
shrb
jbe
jbe
adc
cmpsb
aas
pusha
dec
or
sub
jl
enter
mov
push
jo
lahf
fdivrp
into
mov
lock
add
sub
das
and
inc
call
jecxz
jo
inc
pusha
sub
in
mov
ss
inc
push
push
ljmp
cs
je
mov
ljmp
sub
jmp
mov
inc
dec
push
sub
in
lahf
js
loop
push
filds
inc
inc
cmpb
fists
jb
cmp
jmp
jmp
in
shl
sbb
loopne
shlb
out
cltd
push
out
lcall
mov
stos
sub
cs
icebp
add
push
lahf
pop
inc
repnz
sbb
repnz
xor
test
jmp
icebp
nop
mov
jb
out
and
add
mov
out
nop
adc
mov
cs
inc
dec
and
pusha
divb
pushf
add
push
cs
hlt
out
hlt
and
js
das
push
push
pop
dec
nop
stc
scas
out
sti
fs
push
imul
mov
pop
add
push
ret
stos
pop
nop
pop
leave
mov
lcall
xchg
cs
pop
push
adc
nop
cs
scas
sbb
add
xor
mov
mov
inc
pushl
pop
dec
lds
bound
inc
xor
insb
cmpb
cmp
adc
cwtl
cltd
inc
pop
and
adc
add
jmp
dec
mov
xor
outsl
cmpb
adc
mov
push
movhps
movsb
cmp
push
das
xorb
daa
fmuls
mov
iret
mov
inc
lock
pushf
pusha
cmp
pop
fwait
and
adcl
fsubs
push
mov
pushf
pusha
pop
pusha
sbb
cs
sbb
adc
adc
or
nop
xor
jb
shrl
jae
or
mov
pop
and
add
inc
lds
mov
sbb
lcall
ds
lahf
add
mov
add
push
push
loopne
fistpl
cmpsb
dec
mov
push
cwtl
sub
mov
insb
push
inc
push
mov
push
sahf
negl
andb
push
addl
fisubrs
jns
push
pop
fistps
sahf
sub
test
ss
cwtl
das
or
inc
shll
adc
ss
push
decl
rolb
xor
xor
mulb
ja
out
inc
xlat
push
xchg
call
cmpsl
xchg
int
movsl
xchg
adc
inc
and
dec
xchg
mov
mov
fs
jle
mov
ret
xor
andb
cmp
jo
inc
mov
cmp
mov
loopne
cmovge
sub
jmp
fwait
mov
sub
push
out
movsb
cmp
shlb
adc
mov
scas
clc
cmp
mov
push
push
cmp
enter
push
and
inc
lcall
push
push
je
pop
outsb
pop
movsb
int
dec
sti
xchg
cmp
pop
lods
pop
outsb
negb
ds
shrl
xchg
movsb
shrl
push
out
push
and
js
and
aaa
inc
inc
jo
rcpps
add
xor
in
mov
adc
push
nop
addb
cs
mov
cs
sub
cmp
xor
or
mov
mov
shrb
jecxz
and
dec
repz
rcr
adc
mov
pop
adc
and
add
shl
xorps
pshufw
add
ja
cs
out
fs
adc
stos
das
add
test
mov
push
and
orb
add
inc
js
es
xor
enter
inc
rcl
inc
addb
inc
mov
or
mov
mov
mov
inc
push
subb
lock
cmp
iret
pusha
or
rolb
aas
das
in
lcall
cmp
add
rclb
sbb
jo
dec
cmp
jg
sbb
jne
push
outsl
pop
inc
xor
pop
stos
cmovs
jo
mov
sahf
sub
dec
mov
lahf
adc
inc
jb
pop
fadds
enter
and
inc
push
nop
mov
in
ljmp
and
das
nop
mov
jbe
xchg
mov
pop
pop
and
add
jb
and
adc
cmp
mov
in
in
dec
inc
sbb
sbb
mov
ss
sbb
ss
push
mov
cld
bound
in
sahf
nop
cmp
aas
rolb
add
mov
fwait
out
xor
mov
push
pusha
push
shlb
fbstp
mov
push
lock
dec
outsl
mov
call
or
push
test
inc
outsl
es
pop
enter
js
stos
sbb
setbe
mov
lahf
sbb
or
scas
pushf
push
lcall
and
sbbb
cs
or
cmpsl
outsl
lock
mov
iret
xor
inc
and
adc
add
pop
enter
inc
adc
inc
pop
mov
mov
and
add
sub
ret
stos
mov
imul
mov
add
inc
incb
inc
add
push
iret
mov
jmp
nop
outsb
shrb
adc
or
aas
jo
inc
sub
pop
pop
add
fs
je
pop
xor
mov
push
jl
icebp
subb
lock
mov
inc
or
das
add
mov
and
das
mov
out
jo
nop
jae
add
insb
test
orb
or
ds
mov
nop
jnp
fimuls
enter
mov
mov
add
scas
addb
sahf
inc
push
clc
sbb
push
lahf
imulb
push
nop
cmp
dec
dec
sub
cmp
pop
pop
daa
iret
xchg
mov
inc
mov
leave
inc
inc
inc
cs
ja
leave
inc
pusha
dec
pop
dec
repnz
leave
mov
push
adcb
fisubrl
das
inc
xchg
out
xchg
inc
lock
dec
leave
leave
xor
and
dec
dec
push
jae
leave
jae
dec
sbbb
leave
leave
pop
mov
push
in
jae
loopne
push
adc
mov
pop
jo
mov
out
pusha
inc
aas
inc
je
stc
rol
nop
leave
popl
sbb
loopne
aas
add
scas
ds
inc
pop
inc
pop
add
push
decl
and
roll
push
lahf
mov
das
push
sar
lods
jg
add
push
push
cmp
inc
aas
jo
repnz
fwait
inc
nop
das
pop
pop
pop
in
pop
or
push
rorb
lock
mov
mov
mov
lock
dec
dec
dec
push
adc
mov
add
mov
dec
add
icebp
push
sub
shrb
xor
or
adcb
enter
das
push
push
nop
hlt
sahf
das
adc
das
mov
xor
inc
push
rorb
and
mov
cmc
lahf
jns
test
lock
icebp
and
and
inc
jg
adc
das
xor
inc
dec
js
inc
add
and
test
negl
testb
popa
add
iret
mov
push
and
or
das
xchg
xor
lock
sbb
pop
outsl
mov
add
mov
nop
mov
jp
dec
ja
cs
pusha
cs
mov
ljmp
out
inc
mov
jp
ljmp
mov
adc
outsl
lock
orl
push
push
xchg
pop
inc
push
pop
or
inc
add
and
pop
pusha
outsb
dec
mov
jo
shrb
pop
mov
test
jle
push
fs
mov
roll
sub
lock
mov
pop
shlb
negb
sub
jge
enter
adc
leave
test
mov
jns
and
adcb
and
enter
outsb
adc
movups
mov
adc
sbb
and
mov
pop
add
sub
inc
add
out
pop
das
nop
adc
and
push
mov
pushf
bound
jge
fmull
cltd
loopne
sub
sub
cs
pushl
scas
outsl
fmul
pop
test
loopne
outsb
adc
lahf
sbb
dec
test
pop
push
aas
sbbl
das
int3
cs
jecxz
pop
cmp
test
fwait
loopne
leave
lds
pop
rolb
ss
mov
mov
mov
fs
jo
jg
cmp
cmp
add
push
dec
dec
push
cmp
loope
and
lahf
and
fadds
inc
lahf
idiv
dec
jle
cmpl
out
adc
push
stos
push
pop
lock
sub
and
sbb
jo
in
add
jle
mov
xchg
jo
xchg
inc
aas
inc
aam
jl
jmp
daa
sub
loopne
movl
pushw
in
add
push
repnz
sub
sub
outsl
and
jmp
add
stos
mov
xchg
adc
xorb
jg
pop
shll
jg
inc
adc
push
push
xchg
inc
cmp
movsb
in
inc
das
add
int
inc
out
mov
aam
je
imul
or
repnz
add
lcall
popa
sbb
adc
adc
inc
repnz
in
pop
push
or
insl
ja
pop
jmp
cmp
enter
imul
mov
and
pop
and
scas
fcoms
dec
cld
out
cmp
pusha
cli
xchg
pop
mov
fdivs
jo
sahf
cmp
add
sti
aam
insb
or
pushf
inc
add
nop
das
push
enter
add
rcrb
fistl
aaa
iret
and
sub
inc
pop
nop
roll
xchg
push
mov
add
push
pop
mov
cmp
fs
into
pusha
push
add
fidivs
and
push
shlb
rcr
sub
inc
mov
lock
inc
pop
sarb
out
lret
inc
adc
push
pop
sub
mov
or
outsl
and
mov
in
decl
push
or
scas
int
adc
loop
popa
stc
push
mov
rolb
test
sub
cmc
mov
rolb
push
adc
pop
enter
mov
test
sub
pop
or
imul
cmpsb
es
fwait
outsb
std
xchg
inc
dec
test
jmp
inc
add
or
mov
cs
cmc
scas
push
adc
and
ja
jbe
mov
dec
sub
mov
mov
call
scas
js
pop
xor
test
add
or
push
push
iret
shll
xorb
xorl
adc
push
sub
and
std
push
incb
cmp
out
fidivs
andb
call
push
push
or
mov
xor
inc
xchg
jbe
inc
dec
popl
popl
lock
mov
mov
dec
insb
sub
pop
popf
cmp
fwait
rolb
cmp
js
pop
push
mov
sub
aas
lods
into
pop
mov
jge
pop
mov
or
pop
sub
rolb
add
adc
js,pn
mov
aas
jle
rcrl
inc
pop
imul
sub
inc
sub
xchg
dec
rorl
push
xchg
enter
out
iret
repz
outsb
ret
cmp
out
ljmp
xor
cmpsl
stc
cmp
mov
js
repz
xchg
mov
movb
repnz
jns
out
jns
imul
dec
ds
jae
mov
or
jp
and
mov
adc
push
shll
outsl
loopne
and
stos
push
vmread
cmp
adc
xchg
out
ds
and
in
pop
add
sub
or
sub
jne
rolb
incl
add
xadd
mov
push
add
shrl
push
jnp
mov
das
adc
adc
loopne
xor
inc
or
push
mov
scas
cmpsb
inc
dec
add
mov
push
cli
adc
jp
adc
daa
push
stc
or
mov
shlb
xchg
aaa
xchg
mov
sub
mov
pmulhuw
sub
test
xor
andb
fildl
push
mov
stos
outsl
push
das
inc
das
mov
xor
nop
or
add
aaa
in
aad
sub
sub
xor
test
dec
rorb
mov
ja
pop
sub
sub
cmp
adc
outsl
xlat
mov
sub
cs
dec
rcrb
sub
imulb
mov
sub
cmp
sub
dec
cmp
sub
ds
gs
sub
push
sub
mov
and
pop
jle
sub
jmp
leave
mov
insl
add
outsb
dec
adc
mov
push
addb
dec
jp
xlat
dec
push
mov
jg
adc
mov
ss
pop
push
and
push
test
pusha
lods
mov
lahf
dec
jg
je
mov
push
iret
sub
jge
mov
cmc
inc
movq
cmp
push
test
sub
mov
adc
les
sub
aas
in
rorl
sub
scas
inc
jge
rcrb
jl
mov
pusha
jbe
pusha
lret
stos
imul
test
mov
lahf
cmpsl
jle
mov
aam
jne
cmp
scas
test
pop
xchg
bound
mov
pop
popl
add
test
xchg
dec
pusha
movb
lahf
push
nop
lahf
cmp
mov
ds
addb
jns
iret
xchg
frstor
scas
movsb
cltd
fisttps
add
repnz
xchg
lcall
dec
cwtl
outsl
fwait
jecxz
or
pushf
outsb
negl
push
cmp
imul
cs
mov
stos
lcall
mov
out
cmpsb
loop
xor
sbb
enter
in
scas
rcll
ffreep
push
or
neg
push
out
mov
or
lods
cmpsb
shl
mov
mov
into
shll
mov
daa
mov
push
mov
mov
cs
jle
sti
dec
divb
clc
push
pop
push
inc
cmpsl
dec
or
sub
lcall
sub
and
sub
rclb
inc
sub
stos
rolb
mov
pop
jge
mov
fidivs
push
ljmp
pop
std
dec
lahf
pop
cmp
adc
pop
fs
shrb
sar
jge
pop
sub
decl
roll
lods
mov
mov
mov
lods
clc
mov
data16
inc
dec
jl
xor
push
jg
cwtl
adcb
fmuls
mov
adc
dec
mov
dec
sub
xor
sbb
ljmp
sbb
inc
das
nop
xchg
mov
in
push
repnz
and
adcb
pop
cmpsb
inc
mov
bound
lret
inc
and
cmp
xchg
adc
and
aad
push
mov
nop
addr16
popf
xchg
push
cmpl
adc
push
aad
cmp
out
pop
loopne
push
out
enter
notb
push
mov
out
fistps
mov
pop
xor
push
push
incl
iret
lret
sbb
jns
push
inc
push
sahf
outsb
fldenv
jl
mov
insb
inc
xchg
sub
xor
jns
lret
sarb
xchg
outsl
sbb
push
add
cwtl
sahf
sub
outsl
bound
mov
adcb
aaa
shrb
add
add
mov
fidivrs
incl
test
je
call
rcll
adc
lock
mov
movsbl
push
lea
out
inc
push
rcrb
add
inc
push
add
jae
ret
es
scas
push
xchg
scas
pop
sbb
and
adc
push
in
jns
and
cmp
pop
fbstp
loope
fbstp
or
lret
and
push
mov
jnp
push
cmp
mov
add
popl
das
dec
filds
xor
push
fs
stc
add
push
lret
push
cld
sahf
ja
bound
lret
cld
inc
das
mov
adc
mov
jp
lret
loopne
aas
rorl
push
lret
and
sub
mov
pop
rolb
mov
lret
call
js
pop
lret
fcomip
push
adc
and
repz
pop
bound
dec
out
imulb
add
outsb
test
jb
xchg
pop
icebp
push
sbb
push
scas
lret
sub
hlt
cwtl
xchg
add
cmp
pop
push
lret
adc
xchg
out
jge
sbb
in
sub
jle
jns
push
jecxz
pusha
push
add
jg
bndldx
das
xchg
out
fmuls
fwait
inc
pop
lock
out
sbb
fimuls
push
push
and
or
xchg
repz
dec
dec
dec
dec
dec
jle
sahf
or
pop
je
and
push
dec
inc
fldl2t
data16
jnp
xor
dec
push
push
xchg
mov
repz
jge
jge
sbb
xor
jg
add
fimuls
lahf
fistpll
mov
sub
push
outsl
mov
jmp
dec
push
mov
push
or
add
dec
jg
out
into
imul
push
lret
push
imulb
test
push
repz
out
repnz
xchg
out
lcall
fnstsw
ret
es
mov
repz
push
mov
loop
iret
imul
mov
mov
pop
shlb
push
sub
lea
push
and
js
mov
add
and
cmp
xchg
mov
jns
xor
clc
xchg
testb
out
in
lea
test
mov
mov
dec
jl
adc
pop
jae
add
add
lds
pop
ja
pop
fcmovu
or
cmpsl
and
push
mov
rorb
mov
pop
inc
cmpsl
insb
stos
outsl
jo
inc
xor
push
mov
cs
mov
xor
mov
cs
mov
push
cmp
repz
push
ret
mov
adc
adc
adc
mov
sarb
push
xor
loopne
push
dec
orb
or
and
data16
ja
inc
pop
stos
loopne
insl
rolb
mov
mov
push
sbbl
mov
lea
rolb
pushf
xchg
mov
es
and
inc
adc
lea
aaa
jno
push
movl
scas
xchg
lcall
adc
mov
inc
and
pusha
push
mov
push
jns
xlat
call
adc
add
jns
out
add
or
and
inc
orb
out
sub
push
xor
ds
mov
mov
push
inc
rorb
and
add
lock
ret
xchg
or
mov
xchg
push
xor
cmpsl
and
sarl
mov
test
test
mov
stos
push
mov
cmp
out
fistl
or
stc
add
insb
pushf
mov
push
mov
push
fldl
push
arpl
js
shlb
fucom
jns
and
fiadds
or
sti
xor
in
or
push
jp
sarb
xchg
enter
jg
ja
add
cmp
xchg
insb
ds
pop
push
je
shrb
leave
outsl
bound
movsb
push
mov
outsl
jecxz
cmp
ds
push
push
xorl
pushf
push
inc
xor
mov
repnz
dec
jns
out
fiadds
sbb
imul
sarl
pmaxub
inc
pop
scas
cmpsl
pop
test
lahf
scas
insl
ss
cmpsb
iret
andb
mov
mov
cmpsl
push
cwtl
jbe
jbe
rol
dec
loope
sbb
ja
fidivl
adc
call
hlt
sarl
add
sub
mov
shll
into
nop
mov
sbb
loop
xor
insl
pop
mov
xor
mov
shrl
push
push
push
push
adc
int3
push
pop
xor
sbb
sbb
out
jae
pop
fs
jg
scas
lret
data16
ja
gs
add
cli
jbe
add
outsl
loopne
pop
movsl
ret
imul
movl
fidivrs
dec
and
movsb
cmpsl
push
push
push
or
cmpsb
test
aaa
btcl
adc
insl
ret
iret
jnp
cmp
fimuls
rolb
cmc
adc
imul
out
xchg
pop
jb
rclb
jne
jne
fisttpll
pusha
mov
dec
inc
push
es
cmpsb
add
adc
data16
inc
xor
mov
aaa
aaa
and
inc
cmp
les
outsb
sub
mov
fwait
dec
leave
mov
push
cmp
test
pop
jbe
mov
pop
xor
es
dec
lcall
adc
cmp
pop
pop
outsb
std
xor
clc
push
imul
and
inc
iret
xor
imul
inc
out
or
shlb
cmp
aaa
xor
in
inc
rcll
clc
fisubl
sti
das
inc
jne
in
cmp
pop
xor
push
xchg
xor
xor
pop
sti
pusha
push
and
aaa
dec
imul
xorb
inc
notl
pusha
xchg
movsl
or
nop
fadds
and
pop
jl
mov
and
sub
and
or
jbe
cld
cmp
sarl
lods
enter
pusha
cmpsl
stc
sbb
push
fmuls
cmpsl
test
pushf
mov
lods
loopne
and
push
insb
nop
shll
das
fcoms
add
insl
inc
ja
pop
adc
sub
push
jmp
aas
in
jo
xchg
shld
repz
mov
aam
clc
xchg
or
jmp
lock
jmp
pop
push
enter
add
sub
inc
es
xor
xor
cld
daa
cmp
dec
pop
or
push
das
sbb
dec
adc
or
das
jo
popa
insl
or
data16
jns
mov
pop
sti
mov
dec
adc
jmp
mov
mov
inc
or
outsl
mul
rclb
iret
fwait
jns
jns
sbbl
ja
das
sarl
aad
outsl
xor
or
cmp
sbb
push
or
jae
in
push
das
outsb
pop
pop
pop
cmp
frstor
add
push
push
pop
mov
call
sti
pop
popf
inc
pop
call
imul
push
outsl
mov
add
inc
mull
pop
push
popa
push
int3
push
rolb
fs
push
sub
loop
mov
movsl
or
hlt
pop
sbb
adc
mov
inc
scas
into
adc
sub
dec
dec
dec
push
and
fldcw
mov
pusha
sahf
cmpsl
dec
int
repz
enter
lret
and
repnz
in
in
ja
int
cmp
sbb
pop
enter
jl
pushl
test
insb
push
fisttpl
pushf
mov
mov
sti
fwait
icebp
out
sbb
test
mov
sbb
sbb
jbe
or
aas
or
lds
lahf
adc
push
iret
fidivrs
pop
fiadds
dec
or
in
mov
aas
jle
push
inc
add
into
lahf
cld
mov
test
cmpsb
stos
fildl
in
push
ficomps
mov
push
pop
fistl
fdivr
lods
pop
out
lahf
pop
inc
push
push
ret
sub
aas
xchg
das
or
push
add
add
add
or
add
cs
or
nop
or
or
or
add
cs
or
ud2
in
mov
cs
adc
adc
or
add
cs
sbb
nop
or
sbb
sbb
dec
xor
add
enter
enter
add
sbbl
pop
mov
pop
fbstp
outsl
scas
xchg
jne
iret
xlat
das
mov
add
add
and
and
add
in
and
inc
add
cmpsb
push
push
inc
sub
xor
jb
outsb
fstl
enter
push
loopne
clc
daa
add
adc
mov
sbb
xchg
pop
xor
daa
mov
sub
lahf
xchg
in
rolb
nop
outsl
lahf
fadds
or
sub
fistl
lock
mov
cmpsl
add
test
sub
enter
xchg
lahf
and
test
sbb
pop
mov
xchg
jg
iret
push
push
test
xchg
fstpt
loopne
pushaw
leave
and
shll
sbb
mov
stos
lods
pop
insb
or
xchg
sub
add
stos
scas
mov
mov
lahf
xchg
bound
or
stos
clc
scas
pop
and
scas
xor
stos
fstl
xchg
push
daa
push
and
and
mov
shrb
subb
bound
daa
ja
sbb
sub
mov
or
push
lods
mov
subb
nop
dec
pop
adc
daa
fsubr
mov
fwait
shrb
cmp
sub
adc
pop
mov
push
daa
xor
mov
xchg
and
lods
loopne
mov
clc
scas
pusha
mov
push
repnz
cs
push
daa
js
js
jne
mov
nop
nop
stos
in
shr
inc
mov
mov
add
adc
pushf
and
fistl
shlb
js
sub
xchg
in
enter
fldl
lock
and
nop
add
add
xorb
push
out
fisubrs
mov
cmpsl
push
and
sbb
nop
mov
add
mov
sub
loopne
xchg
mov
xorb
outsb
mov
cmpsl
dec
mov
pop
lahf
test
pushf
sub
addb
in
add
or
shl
and
mov
xchg
fisttps
es
cmp
pop
in
jbe
xchg
sub
and
and
daa
dec
es
es
or
add
outsb
shlb
lock
mov
pop
jb
push
dec
mov
scas
pusha
mov
mov
xchg
mov
push
jb
clc
xchg
adc
fdivrs
mov
in
mov
push
mov
push
adc
cmpb
test
add
pop
mov
mov
and
fucom
cmpsl
add
outsb
xchg
mov
push
xor
jg
mov
mov
lahf
jo
sbbb
cwtl
scas
add
push
xchg
mov
lahf
jbe
test
daa
jb
add
daa
jg
mov
fisubrs
out
daa
cwtl
daa
lahf
mov
daa
inc
mov
lahf
pop
push
mov
mov
pop
insb
test
iret
adc
sar
mov
movsb
loope
pop
lahf
xchg
mov
jb
loopne
aas
xor
dec
mov
xchg
cmp
mov
in
add
pop
mov
pop
call
in
mov
adc
shrb
frstor
in
scas
xchg
push
daa
loopne
mov
lahf
xchg
mov
pop
loopne
movsb
call
cmpsb
mov
and
mov
and
sub
shlb
pop
lahf
xchg
jns
loopne
clc
inc
fsubrs
nop
and
mov
dec
testl
mov
sbb
xor
mov
sub
daa
sub
rorb
sub
sarb
fwait
call
push
sub
nop
pop
sbb
push
ja
ljmp
lock
mov
pop
iret
subb
cwtl
daa
loopne
sbb
mov
jne
lahf
xchg
daa
clc
jg
adc
mov
mov
xor
cmp
jg
mov
cwtl
lahf
xchg
jb
jo
outsl
xchg
cmp
push
call
add
daa
mov
cmp
lahf
push
lahf
xchg
mov
aas
mov
mov
dec
push
mov
sub
rcrl
cmpsb
fsubrs
sub
xchg
fadds
fstpt
daa
dec
sub
pusha
lods
pop
enter
js
andb
jb
loope
sub
test
add
fadd
lahf
xchg
daa
or
fcoms
push
loope
mov
adc
mov
nop
fistpl
mov
clc
cs
outsb
cmpb
iret
xchg
daa
lock
and
sub
add
mov
xchg
pushf
sbb
xchg
xor
inc
sub
scas
pusha
sub
xchg
outsb
pop
shrb
mov
cwtl
iret
nop
mov
in
inc
fadd
enter
lock
ror
and
cs
mov
imulb
ror
cmpsl
xchg
pop
mov
push
sarb
xchg
in
loopne
pop
push
in
push
cmp
lahf
xchg
ret
out
subb
xor
mov
add
pusha
cmpsl
xchg
or
sets
add
lahf
xchg
outsl
adc
or
adc
xor
add
call
mov
pusha
das
fbstp
add
nop
or
pop
shlb
cmpl
popa
jmp
xchg
daa
ja
nop
or
inc
pop
adc
mov
testb
lahf
push
xchg
shll
lock
lahf
xor
insb
and
mov
iret
jo
lods
pop
xchg
daa
push
loope
mov
push
inc
dec
cmp
inc
les
push
lds
outsl
mov
cmpsl
inc
daa
test
fcoms
repnz
lds
mov
nop
daa
jo
iret
mov
ja
sbb
or
daa
cmp
ret
sub
mov
xlat
dec
dec
scas
into
adc
inc
jbe
repz
js
cwtl
pop
mov
dec
mov
sub
arpl
pop
jb
ja
and
out
das
loopne
dec
mov
pushf
fcoms
pop
lock
test
dec
psubusb
or
jg
push
and
leave
adc
adc
enter
loope
fsubr
lock
adc
sub
test
stc
dec
enter
into
mov
pop
enter
and
enter
and
jmp
mov
sbb
iret
loopne
push
pop
sub
fstps
dec
and
dec
dec
and
pop
and
xchg
pop
and
pushf
pop
and
add
lret
in
inc
sub
dec
loopne
mov
jne
addr16
inc
lret
lock
stos
xchg
inc
dec
ljmp
ss
dec
enter
and
daa
push
inc
dec
xchg
dec
ja
cwtl
pop
pusha
punpckhbw
jns
add
xor
loopne
pop
rcrl
dec
mov
enter
mov
in
in
daa
fmuls
add
icebp
das
xchg
push
in
out
rorb
dec
lds
fcmovnu
add
sbb
aam
sub
xor
xor
cmovle
cmpsl
loop
test
fmuls
decl
jmp
jnp
orl
mov
in
xor
rcr
leave
in
xorb
jg
xor
jbe
adc
jg
clc
pop
leave
adc
inc
int
out
mov
mov
fildll
push
add
mov
push
addr16
fdivrl
mov
mov
dec
mov
iret
clc
push
popf
pop
and
mov
fisttpl
out
fisubrs
cmp
mov
or
repz
pop
fisttpll
push
pop
sub
cmp
inc
fstpl
mov
in
pusha
pop
push
mov
subb
jb
test
mov
add
jbe
jns
leave
paddq
fisttps
pop
jb
ljmp
and
scas
fimuls
xor
add
fdivs
fdivrl
orb
mov
xor
rorb
sub
fimull
shrb
mov
lock
clc
rcr
dec
add
mov
jb
and
jg
ffreep
rcr
shlb
cmpsl
xchg
push
inc
fcomip
shlb
xchg
jl
or
push
out
sarl
fisttps
cs
cwtl
inc
cs
inc
cs
dec
cmpsb
nop
xchg
adc
and
inc
pusha
mov
decl
into
inc
out
outsl
push
mov
sets
mov
pop
dec
cmpsb
pop
daa
out
rcrl
call
push
add
femms
add
mov
xor
sbb
loope
loope
aad
mov
dec
loope
nop
imul
pusha
dec
enter
scas
adcb
mov
fisttpl
pop
fcomps
pushf
sub
pop
lock
or
dec
mov
loop
scas
cmp
mov
xor
cmp
push
enter
inc
outsl
and
pusha
out
daa
daa
push
jns
out
out
push
add
add
out
mov
out
sahf
fmuls
out
hlt
or
sarl
or
or
repz
sub
cmp
iret
repz
dec
adc
adc
repz
adc
adc
repz
pushf
push
stos
push
iret
repz
sbb
cmp
repz
loop
lock
push
ds
pop
sbb
ja
in
adc
dec
xorps
sbb
pop
fistps
lock
dec
and
and
and
decl
in
jb
enter
in
in
in
inc
mov
in
in
in
jb
enter
in
in
in
mov
dec
in
in
in
in
enter
in
in
in
sbb
jb
in
in
in
in
xchg
and
in
in
out
out
ficoms
push
sbb
jns
out
cmp
dec
add
cmp
out
test
jg
out
fisttpll
mov
fdivrs
iret
dec
add
imul
daa
insb
pop
mov
repz
sbb
fcomp
mov
inc
test
fdivrs
xor
inc
jg
dec
dec
outsb
pop
pop
loopne
call
sub
out
into
adc
add
dec
xor
cmp
mov
ror
dec
jg
jg
enter
dec
push
and
push
enter
mov
xchg
fprem
fchs
out
loope
jns
fidivl
inc
scas
cmp
sub
inc
dec
dec
pop
push
lahf
fistl
and
fnsave
sub
inc
ss
das
vmwrite
inc
push
add
sahf
out
pop
loope
dec
outsb
push
add
pop
repz
rep
or
or
cmp
jge
test
call
lcall
stos
add
mov
mov
inc
imul
dec
fists
inc
sub
cmp
enter
jmp
adc
jmp
into
leave
leave
push
pop
data16
outsb
setno
addr16
jmp
jmp
xchg
jmp
fsubrl
xchg
and
decl
in
and
call
cltd
popf
loopne
ljmp
jb
enter
cmp
inc
ljmp
add
dec
jne
jns
out
push
addb
or
xchg
in
repnz
mov
mov
sub
rorb
fmul
outsb
cmp
iret
mov
fldl
cltd
loop
jmp
cmp
mov
sub
test
aas
pop
dec
jmp
mov
pusha
push
icebp
or
test
scas
adc
imul
jbe
lds
enter
fldl
addb
test
in
test
inc
cs
lds
xlat
pushf
sub
push
xor
fucomip
decl
jne
jbe
scas
mov
das
add
add
out
paddsw
adc
dec
jp
adc
loopne
stos
mov
loopne
sub
pop
or
push
pop
mov
test
push
add
and
dec
add
repz
rcrl
jo
subb
mov
repz
into
inc
sbb
pop
je
jae
xor
clc
lahf
lock
or
out
adc
mov
sbb
add
daa
out
inc
cmpsb
sub
out
out
adc
push
pop
insb
out
jmp
ficoml
mov
mov
loopne
in
in
fsub
out
sub
sub
pop
dec
push
loope
and
sub
jg
mov
outsl
push
dec
mov
dec
jo
jnp
pop
mov
xchg
iret
enter
jbe
dec
lock
mov
adc
iret
push
das
and
jno
je
cwtl
jecxz
sti
xor
adc
mov
iret
sbb
pusha
lock
push
xor
outsb
dec
orb
lock
sub
nop
out
inc
dec
add
in
loope
scas
shrb
inc
fcmovnu
jg
jg
cs
sarb
dec
call
cmp
loopne
leave
insl
packsswb
icebp
xchg
mov
in
in
leave
mov
in
push
inc
mov
mov
in
call
jb
sbb
xor
shl
addr16
pop
dec
out
scas
gs
scas
in
sub
mov
jns
or
clc
icebp
jno
adc
out
mov
inc
aas
repnz
in
out
dec
dec
or
sbb
leave
adc
jg
xor
out
push
repnz
push
jb
pusha
out
outsb
inc
cmpsb
sbb
out
repnz
fcoms
mov
stos
mov
call
shl
dec
lds
clc
pop
pop
pop
jmp
repz
repz
nop/reserved
repz
cmpsl
jp
dec
nop
inc
repz
scas
pop
mov
pop
pusha
dec
call
adcb
pop
and
lcall
and
jmp
xchg
push
enter
shr
daa
sahf
or
ljmp
sub
out
jbe
or
sti
iret
xor
imul
ljmp
das
das
pop
fists
popa
hlt
insb
hlt
ja
das
das
das
das
xor
hlt
cwtl
hlt
mov
das
scas
hlt
mov
hlt
das
das
das
das
in
lock
sti
hlt
das
das
das
das
push
cmc
adc
sbb
daa
cmc
das
das
das
das
xor
cmp
cmc
repz
jmp
pop
cmc
fbld
sbb
repz
jno
jl
xchg
cmp
repz
pop
popf
and
and
repz
leave
and
and
repz
daa
cmc
sub
idivb
out
sub
sub
sub
jns
out
sub
sub
sahf
cs
das
dec
xor
dec
inc
js
mov
dec
sbb
xor
scas
nop
in
imulb
notb
xchg
mulb
jb
enter
neg
mul
div
inc
mov
push
or
repz
pop
or
or
repz
xorps
gs
repz
adcl
adc
adc
repz
pop
decl
loopne
jmp
enter
div
add
or
sub
jno
pop
clc
jg
in
dec
scas
nop
imul
and
femms
cwtl
in
clc
clc
mov
add
clc
ljmp
add
popl
out
or
repnz
stc
pop
jb
dec
js
mov
inc
enter
jb
lock
inc
pop
sbb
mov
inc
rcrb
loopne
adc
out
stc
jb
enter
stc
add
or
inc
mov
pop
cli
and
sub
enter
cli
dec
cli
pop
cli
in
in
jmp
cli
jp
jbe
jns
push
adc
add
scas
mov
pop
jo
call
data16
mov
cli
or
mov
dec
cmp
dec
outsl
mov
mov
dec
das
push
sti
mov
mov
icebp
jbe
sub
dec
nop
scas
cwtl
sti
mov
push
pop
mov
loop
out
pop
shl
scas
fdivs
call
pop
or
icebp
cld
mov
bndstx
cmp
add
cmp
inc
push
loope
outsb
rsqrtps
mov
jo
jo
das
mov
xor
mov
dec
sub
sarb
xchg
xchg
loopne
mov
add
or
call
and
add
daa
push
inc
dec
in
xchg
fcmovne
xlat
pop
pusha
out
push
pusha
push
test
std
decl
mov
dec
mov
rorb
mov
std
pop
push
enter
jg
hlt
lds
mov
dec
movaps
pop
bound
xchg
pusha
imul
jbe
mov
jg
push
jmp
mov
mov
rorb
cmc
push
das
cltd
inc
lock
cmc
mov
pushl
mov
addb
xchg
jnp
pop
mov
outsl
mov
pop
cmp
lahf
out
in
aaa
pop
loopne
ss
repz
call
divb
je
push
push
pop
push
mov
sub
out
nop
nop
pop
es
idivl
mov
cmovo
adc
push
push
leave
xchg
sbb
notb
das
rcrb
inc
inc
push
mov
add
sbb
ficoml
and
loope
loop
jg
in
dec
outsb
xchg
jl
inc
jo
nop
in
sub
test
roll
aas
out
inc
iret
push
and
pushf
xchg
push
leave
lock
inc
dec
out
data16
cmp
adc
dec
movntps
loope
sbb
jmp
adc
pop
clc
jmp
xor
ffree
rcrb
sub
daa
mov
filds
mov
leave
mov
adc
aas
inc
xchg
mov
pusha
jo
mov
mov
cmp
jns
xchg
sar
fldt
fs
xor
cltd
in
adc
scas
sbb
pusha
jb
dec
repnz
mov
or
jo
push
ret
lcall
sarl
nop
cwtl
addr16
or
sti
jg
cmp
cltd
rcr
jecxz
outsb
es
mov
outsl
js
or
ficoml
and
xchg
sub
mov
in
jb
pusha
push
js
js
and
outsl
dec
mov
mov
xor
in
sar
dec
xor
psubb
xchg
int
mov
nop
imul
or
and
push
jg
rorb
add
sub
jo
add
dec
mov
fwait
orl
mov
push
ret
inc
mov
int3
scas
inc
fistpll
inc
sahf
jmp
in
jg
rorb
push
mov
adc
pop
ja
or
jne
inc
ds
push
xor
clc
je
sbb
jo
sbb
add
fwait
ret
in
stc
dec
aaa
les
jns
ja
add
scas
and
add
jne
popf
out
aas
out
dec
push
negl
jns
out
push
imul
jns
test
xchg
or
jns
or
or
out
out
mov
incb
add
cmp
repz
adc
adc
iret
push
dec
pop
mov
add
syscall
adc
lcall
jmp
leave
nop
fwait
pop
cmpsb
outsl
pop
sbb
jg
sub
push
dec
push
bound
test
vmread
inc
sbb
cs
movups
fnstsw
xor
cmp
outsl
xorb
iret
push
test
push
in
mov
bound
dec
outsl
shll
jo
pmaxub
jmp
in
mov
pop
or
loopne
in
or
sub
add
js
test
pop
incl
pusha
scas
push
orb
dec
scas
mov
aad
xadd
jg
sahf
add
dec
scas
nop
dec
call
pop
dec
add
pop
push
or
sub
or
add
push
or
arpl
mov
pop
cwtl
aas
mov
ret
rorb
test
call
mov
add
cs
inc
and
sub
cmp
js
popf
pusha
punpckhbw
vmread
subb
or
lahf
adc
fisttps
imul
rorb
mov
es
loopne
add
decl
push
scas
nop
imul
dec
cmp
dec
dec
dec
scas
pusha
imul
mov
jns
outsl
push
push
outsl
repnz
mov
or
repz
outsb
push
outsl
push
add
daa
iret
repz
mov
dec
les
inc
jae
das
jmp
xor
icebp
sbb
inc
incl
iret
mov
jo
scas
call
or
or
push
ud2
daa
push
sub
ljmp
dec
cmpsb
cwtl
add
push
addr16
pusha
mov
dec
imul
cmp
repz
add
cmp
mov
rorb
in
jbe
outsl
rorb
mov
lcall
add
scas
pop
stos
decl
pop
pop
and
dec
sub
lock
cmp
ljmp
outsb
pshufw
pop
mov
iret
adc
popf
mov
mov
push
add
add
add
xchg
xchg
xchg
fsub
repnz
or
adc
sub
or
negl
test
decl
outsl
mov
test
xchg
scas
mov
or
jb
addb
mov
or
pop
mov
push
adc
sub
pop
int
sbb
dec
add
and
loop
push
dec
pusha
push
loope
clc
fidivrl
outsl
adcb
inc
or
incl
or
in
pop
nop
dec
mov
sbb
out
pop
enter
call
pavgw
cs
repz
scas
adc
sbb
mov
ljmp
inc
fsubrp
inc
dec
or
cmp
push
das
mov
jns
in
iret
xchg
femms
push
mov
dec
push
loopne
mov
cmp
adc
movups
sbb
pop
xor
iret
ds
or
dec
adc
fstl
scas
dec
add
iret
mov
adc
or
pop
inc
mov
or
mov
jno
jo
mov
sahf
out
lret
out
add
in
push
cmp
or
enter
adc
adc
push
mov
jg
dec
dec
scas
nop
ja
into
mov
dec
dec
jae
adc
ds
das
lahf
adc
pop
lods
ret
jns
mov
out
dec
cmpsb
nop
iret
or
push
lock
mov
adc
adc
push
add
divb
repnz
sub
adc
adc
je
aaa
jb
adc
or
adc
nop
dec
push
ret
lcall
test
pop
mov
lock
mov
rcrb
setg
adc
inc
stos
and
lahf
pop
cmovp
cmpsl
adc
jo
mov
js
cmp
cmp
out
xor
jg
imul
pusha
dec
nop
dec
cmpsb
cwtl
loopne
subb
and
scas
mov
xchg
rcrb
pop
subb
addr16
in
inc
das
add
adc
sub
dec
adc
xor
test
push
enter
pop
inc
jo
jbe
daa
js
jo
data16
xchg
nop
cwtl
test
test
ror
xchg
xchg
sub
fsub
call
call
scas
scas
mov
push
push
push
add
sub
leave
leave
inc
dec
push
pop
or
jns
imul
cwtl
nop
pop
rclb
in
enter
pushf
dec
adc
cwtl
pop
lock
jp
inc
sahf
add
or
push
push
in
adc
xor
fbld
push
pop
cmp
outsl
push
cmp
push
mov
in
pushf
add
clc
adc
test
adc
fdivrp
movsl
inc
adc
mov
out
dec
rorb
fisubrl
fisttpl
scas
cwtl
xchg
sbb
test
pop
daa
pop
enter
and
lock
in
out
pop
pop
add
adc
mov
sub
sub
out
mov
and
aas
push
mov
aaa
inc
sbb
xchg
jnp
aas
mov
test
pop
mov
enter
push
add
iret
imul
add
scas
shlb
ja
ja
sbb
pop
push
pop
add
xchg
sub
xor
sbb
inc
ficoml
lcall
dec
in
sub
jo
cwtl
sub
xchg
sub
mov
adc
adc
enter
leave
adc
jb
lock
mov
sbb
test
jb
pop
xor
push
cmpsl
jae
pop
push
push
shlb
sbb
adc
sarb
xchg
and
dec
pop
or
pop
mov
add
rcl
push
cmp
adc
aam
pop
inc
xchg
fsts
sbb
pusha
insb
sub
cmp
dec
es
pop
fdivl
sbb
inc
rclb
lds
leave
add
cmp
fldenv
les
sub
dec
test
pop
and
pop
pop
jle
incl
xchg
test
rol
pop
popa
and
ljmp
pop
xor
out
sbb
jae
push
decl
add
fsubrs
ljmp
cmp
mov
sbb
dec
dec
sbbl
cmpsl
call
inc
dec
out
scas
nop
sub
adc
lock
xchg
sub
or
sbb
sub
inc
test
in
sub
xchg
lods
mov
in
aam
push
mov
lds
call
mov
sbb
or
mov
inc
and
mov
jb
addr16
adc
call
or
push
fistl
lcall
enter
nop
add
or
popa
insl
and
enter
dec
and
test
dec
adc
or
sbb
sbb
mov
dec
jb
adc
adc
call
js
lahf
adc
xchg
mov
inc
pop
mov
pop
push
test
dec
rolb
call
and
and
mov
pusha
xchg
or
and
sub
iret
sbb
repnz
ja
xchg
mov
ja
mov
and
and
movsl
incl
mov
pop
jb
mov
pop
jb
pop
mov
fsubs
daa
jns
or
add
and
xchg
pop
and
xchg
pop
and
and
leave
mov
shlb
stos
jo
lock
cmp
push
decl
sub
lods
add
ds
jo
sub
rorb
out
mov
rcr
push
scas
movsl
nop
inc
pop
adc
dec
cmp
adc
jmp
dec
sbb
scas
nop
xor
test
pop
jmp
bound
dec
test
inc
scas
push
popa
jmp
and
fs
pop
add
adcb
jle
in
adc
dec
cwtl
mov
daa
shlb
cmp
daa
insb
jle
xchg
dec
and
inc
or
mov
cmp
jo
subb
pop
inc
lock
scas
fadds
dec
pop
and
and
adc
jae
lds
clc
pop
and
push
and
mov
and
cmp
and
inc
pop
dec
sub
test
jl
mov
nop
sub
lods
movsl
sub
imul
inc
sbb
xchg
call
aam
mov
sub
dec
inc
cwtl
or
push
mov
mov
sub
and
inc
enter
push
or
iret
ljmp
and
push
dec
aas
and
enter
outsl
xor
outsl
or
stos
or
sbb
xchg
and
dec
aad
mov
cmp
scas
cwtl
sub
sub
sub
sahf
lock
inc
jmp
xchg
adc
sub
dec
cmp
xor
and
dec
pusha
sub
cmp
jb
sub
sub
jb
in
mov
inc
scas
mov
jb
pmaddwd
sub
pop
and
fldl
scas
push
lds
lahf
push
and
orb
shrb
popa
fs
jmp
lret
pop
and
sub
fimull
sub
xchg
hlt
jo
and
adc
lea
mov
lahf
and
lds
mov
adc
test
adc
enter
lods
and
das
nop
mov
int3
and
mov
sbb
add
adc
xor
scas
pusha
popl
jo
out
loopne
pop
xchg
ret
test
xor
mov
leave
adcl
inc
repnz
lods
cwtl
mov
mov
jg
push
jecxz
pusha
sbb
inc
pop
cmc
test
push
enter
test
ret
adc
scas
add
pushl
pop
sbbl
inc
and
pop
and
xor
dec
push
sar
lods
xor
cmpsl
xor
dec
inc
xchg
pop
and
cmpsl
pop
and
pop
and
pop
mov
test
pop
push
dec
mov
scas
fmull
nop
add
pop
or
lods
repz
outsb
pop
sub
in
inc
and
lds
scas
call
xor
fidivrl
daa
push
add
rcrl
rolb
mov
cmp
or
cmp
push
mov
xor
and
jns
sahf
ja
push
add
add
leave
in
in
push
cmovne
leave
leave
leave
leave
xor
data16
leave
leave
leave
pop
mov
adc
test
xor
leave
int3
aam
lcall
out
pushf
pop
call
dec
test
sbb
jb
js
or
inc
pushl
sub
dec
shrl
xchg
xor
inc
inc
dec
shlb
call
pop
js
dec
scas
pushf
or
repnz
sub
inc
aaa
jb
leave
xchg
call
jb
cwtl
mov
in
in
enter
loopne
sub
push
in
pop
and
leave
mov
cmp
jns
dec
inc
out
inc
vmread
loop
mov
test
xchg
mov
cmp
cmp
mov
cmp
and
ret
dec
mov
cmpsb
in
xor
pop
cmp
mov
and
push
dec
push
push
daa
cmpsl
in
pushf
push
push
aad
fs
mov
leave
jbe
inc
lahf
dec
push
jb
pop
mov
pop
push
sbb
push
dec
and
arpl
imul
or
or
dec
dec
push
and
lea
sbb
push
iret
shrb
lods
sub
sbb
popa
xor
push
xor
ss
inc
push
aad
adc
andb
dec
loopne
lahf
cmpsl
jne
ds
push
inc
jae
popf
int
sti
xor
sahf
push
mov
fldcw
lods
fisubrs
mov
cmpsl
nop
movl
jnp
ja
dec
pop
inc
sbb
push
jbe
mov
inc
incb
loopne
inc
outsb
in
nop
out
lock
xor
mov
frstor
xor
push
imul
aad
fs
mov
adc
dec
and
idivl
push
cmc
fcoml
push
lahf
addb
cmpsb
dec
mov
cmp
icebp
mov
fdivr
push
cmp
repz
loop
xchg
or
sbb
mov
cmpsl
lods
cmp
push
xchg
fisttpl
aaa
out
push
loop
shlb
add
sahf
cmpb
inc
mov
sbb
sti
mov
lret
xor
repz
lret
push
jp
pop
add
outsl
add
mov
sbb
and
sbb
test
adc
shl
adc
push
xor
xchg
sbb
cmp
repz
lods
in
mov
imul
les
add
add
daa
add
jmp
fidivl
daa
out
jbe
xlat
ficomps
dec
idiv
daa
push
inc
scas
cmc
pop
jmp
roll
aas
push
cs
dec
push
mov
or
aaa
dec
dec
ja
add
and
or
cli
add
arpl
test
or
pop
je
push
dec
jmp
jno
movsb
cwtl
inc
xlat
or
sbb
jmp
stc
sbb
xchg
sub
iret
add
cltd
mov
push
daa
notl
mov
lcall
mov
dec
add
add
adc
lahf
push
mov
out
dec
jo
add
pop
or
add
push
mov
incl
and
scas
nop
test
testl
pop
pop
sub
mov
inc
add
out
mov
add
addr16
decl
stos
mov
push
mov
xlat
das
dec
xchg
add
inc
test
call
add
push
cmc
outsb
push
add
cmp
xor
cmpl
jne
inc
cmpsl
pop
mov
jne
in
dec
daa
cmc
add
rol
sbb
pop
scas
addr16
ldmxcsr
out
push
aam
in
add
daa
or
adc
adc
dec
mov
icebp
mov
inc
jb
add
inc
outsl
shlb
adc
push
or
and
out
ljmp
add
add
sub
ja
rcll
and
or
mov
shrb
adc
testl
ljmp
push
add
divb
mov
cmpsb
add
xor
lods
pop
nop
mov
adcb
inc
xor
fidivs
inc
push
pusha
dec
sahf
add
or
out
push
sbb
mov
dec
das
adcl
push
data16
shlb
sbbb
jmp
test
mov
and
xlat
out
mov
lods
and
pop
test
aam
subl
jmp
cmpsb
cmc
daa
jno
daa
in
subl
loope
mov
xlat
lahf
inc
inc
mov
ja
and
jno
das
add
push
add
cmpsl
xchg
or
sub
stos
and
out
loopne
xor
push
scas
scas
add
insb
sub
addl
or
add
xor
mov
mov
adc
and
push
inc
mov
or
outsb
inc
popf
or
push
sbb
rdmsr
push
add
inc
arpl
sub
or
sti
inc
and
add
sbbb
fmuls
into
adc
xchg
or
negb
adc
push
pop
adc
jne
push
clc
daa
adc
pop
in
incl
mov
xchg
loope
out
and
adc
pop
push
pop
adc
std
dec
pop
insl
and
aas
cmp
sub
cmp
jmp
push
test
pushf
mov
sub
mov
add
je
hlt
push
mov
sub
inc
es
and
adc
and
or
repnz
mov
and
andl
mov
and
outsl
adcb
mov
push
push
aad
subb
or
jbe
nop
imul
ljmp
insb
push
pusha
in
js
push
sub
pop
mov
mov
cmp
repz
iret
repz
movsb
or
iret
repz
or
repz
iret
repz
test
adcb
adc
repz
adc
repz
repz
iret
repz
sbb
pop
sbb
repz
sbb
repz
repz
iret
repz
inc
and
cmp
cmp
repz
and
sub
cmp
repz
iret
repz
sbb
adc
adc
cmp
repz
sub
sub
imul
cs
stc
das
out
sahf
out
xor
xor
sahf
out
sahf
xor
xor
xor
jns
out
xor
or
aam
adc
andb
add
cmp
adc
cwtl
nop
mov
js
push
iret
repz
inc
cmp
sub
cmp
repz
adc
add
jns
out
add
call
jns
aam
int3
enter
sahf
out
mov
out
sahf
out
mov
out
sahf
cmpb
pusha
push
jns
out
dec
cmp
and
arpl
lahf
out
add
jns
out
push
les
out
mov
lahf
out
sahf
dec
cmp
sbb
cld
nop
into
repz
call
sbb
addr16
add
fadds
divb
cmp
aam
rolb
movsb
xor
jecxz
lods
mov
jmp
pop
or
repz
repz
sub
sbb
stc
cmp
cli
or
clc
or
sahf
out
sahf
loopne
shl
mov
jns
hlt
mov
jl
jns
out
insb
icebp
pop
lock
jl
jnp
out
fisttps
out
rorb
iret
repz
mov
pushf
jmp
ljmp
cmp
decl
mov
out
out
push
in
out
jns
out
in
jecxz
loop
jns
out
push
loope
loopne
fcomip
xor
out
fsubrp
or
aam
iret
cmp
jg
fidivrl
cmp
cmp
push
xlat
sub
jl
repz
add
mov
or
sahf
out
sahf
push
rol
shlb
jns
rorb
out
pop
int
int3
int
jns
xor
or
faddl
leave
cmp
repz
enter
iret
jae
repz
nop
lds
cmp
cmp
iret
jae
ret
sahf
out
faddp
push
dec
sarb
js
out
mov
repz
jne
push
out
mov
repz
mov
scas
fidivs
repz
mov
mov
push
mov
adc
push
jns
add
xorb
mov
dec
push
adc
sub
pop
push
push
dec
cmp
repz
cmp
sub
stos
push
movsb
repz
mov
adc
clc
adc
jnp
or
call
sbb
fmuls
xor
mov
rorb
and
push
rolb
pop
fidivs
fisubl
mov
or
test
jae
jge
adc
lar
xlat
fimuls
push
js
jmp
add
jo
loopne
push
loopne
pusha
iret
pusha
pop
pop
test
sbb
fmuls
cmp
nop
cmp
push
xor
push
pop
inc
xlat
outsb
sub
pusha
and
sbb
adc
pop
or
push
inc
nop
loop
jns
je
outsb
fsubs
and
push
dec
dec
and
sub
sti
add
pop
nop
fiaddl
mov
dec
mov
sub
in
xchg
sub
outsl
jp
jg
inc
and
xor
xor
sub
jmp
push
add
dec
inc
and
sub
fimull
push
jmp
dec
push
and
test
outsb
inc
arpl
dec
or
sbb
sub
ja
cmpb
push
or
call
xchg
pop
and
bound
and
mov
popa
jae
imul
xor
pusha
push
loopne
add
fwait
nop
fisttpll
pop
mov
sahf
cmp
add
mov
add
mov
outsb
sub
or
adc
push
clc
out
mov
dec
dec
dec
inc
sub
out
js,pn
add
imul
and
lods
loop
jl
pop
popa
outsb
bound
stos
lods
mov
push
jp
and
int
subl
js
imul
push
bound
push
jns
and
push
lods
decl
dec
inc
inc
push
pop
and
cmp
or
fdivs
sbb
sub
push
jne
cltd
xchg
add
sbb
jnp
mov
push
push
inc
arpl
mov
ret
sub
popa
sub
fs
pop
mov
cmp
sub
xor
inc
push
push
dec
movsl
call
dec
scas
ror
mov
icebp
imull
push
or
movsl
pop
and
std
decl
aas
iret
in
shll
clc
ret
imulb
xchg
add
imul
xchg
out
push
filds
movsb
aas
sbb
in
pop
dec
inc
inc
sub
cmp
dec
inc
rclb
cmp
rorb
mov
les
daa
dec
ja
push
push
pop
xchg
dec
cmp
aaa
in
cmp
pop
adc
jl
push
aaa
fdivrs
or
add
mov
sbb
lahf
loopne
mulb
imulb
xor
and
fiadds
movsb
push
dec
cmp
iret
lds
cmp
sbb
add
outsb
adc
idivl
cmove
mov
cs
out
xor
cs
nop
xor
and
cmp
out
daa
or
cld
sbb
sbb
in
cmp
in
fmul
repz
out
cmp
push
je
fnstsw
push
add
neg
and
and
sbb
push
faddl
mov
je
negl
push
push
sub
mov
es
cltd
nop
outsb
xchg
pop
push
push
movsb
outsl
pop
mov
lahf
push
xchg
jo
push
dec
arpl
or
insl
pop
xchg
inc
popa
incb
push
sbb
daa
add
mov
lods
int3
cmc
shll
enter
jp
inc
pop
mov
das
ret
dec
outsl
adc
pop
xchg
jo
iret
mov
mov
push
sub
pop
push
cmp
sar
insb
sub
or
pushl
iret
aam
mov
jbe
mov
in
fwait
add
dec
or
mov
jb
pop
xor
hlt
rcl
stos
inc
popa
sub
xchg
or
loopne
aam
jnp
imulb
shl
mov
stos
xlat
aam
mov
std
mov
mov
mov
xchg
mov
pop
and
pop
mov
mov
mov
out
out
dec
sub
or
xchg
insb
jae
insl
or
add
jmp
fbld
jne
dec
or
adc
in
out
jae
or
jbe
mov
or
xorl
int3
in
jnp
test
or
cmp
loop
mov
movsb
add
or
insl
xor
push
mov
sahf
inc
jns
jmp
leave
lret
mov
mov
push
fcmovbe
mov
imul
in
mov
movsl
mov
inc
mulb
pop
test
psllq
ss
mov
sbb
iret
lock
mov
daa
shr
cmp
js
cmpsl
scas
push
cmp
jmp
sbb
or
jae
ds
dec
scas
mov
dec
pop
push
cmp
pop
andb
mov
insl
xchg
push
push
mov
mov
repz
ds
and
outsl
pop
mov
ds
adcb
clc
iret
fadds
cli
shll
ret
shll
push
shr
addr16
cmpb
mov
movsl
push
cs
pop
jle
out
mov
addl
data16
dec
out
cmp
jo
outsl
mov
dec
xor
mov
stos
jae
push
inc
fmulp
xchg
movl
movsl
imul
cmpsl
filds
ficoml
out
inc
adc
mov
int
mov
mov
adc
cmpsb
int
notl
sub
out
fcmovbe
stos
xlat
inc
or
jo
es
out
mov
or
xchg
shll
and
fcoml
rorb
scas
pop
cli
cmp
push
ljmp
mov
sarl
push
mov
vpsubq
cmpsl
out
stos
icebp
add
mov
mov
inc
sbb
movl
daa
mov
pop
scas
lahf
loop
mov
or
fsubp
ljmp
xchg
int
ret
pushf
push
aas
bound
push
repz
push
or
shrl
adc
insb
or
mov
dec
mov
subl
or
pop
das
lahf
and
xlat
stos
pop
aad
pop
imul
mov
inc
inc
orl
ret
sbb
scas
rorl
mov
imul
fwait
out
stos
ficoml
pop
xor
in
adc
loope
gs
pop
mov
jnp
adc
loop
xchg
ds
adc
mov
roll
jae
sbb
xchg
jb
into
sbb
iret
ret
mov
add
cmpb
and
mov
xor
adc
scas
jmp
mov
jo
xchg
cmpsl
fsts
insl
fbstp
sbb
push
dec
dec
push
or
push
popf
call
sub
dec
push
fistpll
test
push
and
cmp
push
mov
fisttps
or
sub
das
mov
or
aas
pop
test
sbbl
dec
aas
out
aas
mov
xorb
dec
push
dec
insb
mov
sti
call
das
inc
inc
dec
in
and
xchg
das
sub
pop
sbb
sub
rorb
pop
gs
das
and
lds
and
nop
mov
mov
sti
sbb
imul
test
mov
xor
movsb
add
outsb
fs
and
insl
jmp
nop
inc
das
insl
dec
or
das
push
bound
mov
or
adc
mov
push
sbb
imul
push
mov
dec
dec
mov
insl
mov
mov
and
mov
inc
sbb
sub
pop
push
imul
cmp
pop
add
mov
aas
mov
fiaddl
mov
and
dec
mov
add
dec
adc
lcall
jg
sub
rclb
bound
aas
imul
mov
aas
xchg
add
lds
das
xchg
push
movsb
mov
ljmp
sti
imul
lods
outsl
popa
bound
dec
sub
insl
mov
adc
dec
inc
pop
sub
push
push
btc
adc
push
repz
jmp
test
push
mov
xchg
nop
push
sub
inc
enter
dec
insl
fwait
inc
and
xchg
mov
push
xchg
lahf
imul
test
or
test
nop
mov
inc
pop
jge
sbb
and
inc
inc
push
inc
lea
cmovns
outsl
stos
loope
adc
imul
and
push
push
xor
or
push
xor
imul
or
jb
inc
out
bound
jne
jmp
fisubrl
push
test
roll
pop
movsb
test
pop
adc
adc
jg
add
add
call
mov
dec
arpl
outsb
dec
jb
adc
lcall
out
adc
xor
push
lock
outsl
fisttps
xor
push
jno
add
fsubs
arpl
and
inc
pop
push
orl
xor
inc
adc
pop
push
add
mov
das
aas
dec
addr16
das
push
sub
das
xchg
lcall
inc
dec
mov
lahf
repz
inc
movsl
dec
cmpsb
pop
jae
push
shrl
aas
test
xor
orl
sbb
adc
push
pop
sub
add
xor
pusha
push
jo
filds
or
jno
mov
or
mov
sbb
ret
inc
inc
insl
bound
jae
sub
and
push
and
fildl
insl
inc
push
xor
and
faddl
aas
push
dec
dec
das
pop
pop
adc
das
ret
mov
jbe
mov
cvttps2pi
push
cmp
aas
push
addb
popf
out
adc
addb
xchg
ds
cmc
cs
inc
inc
repnz
xchg
fildl
xor
push
pop
add
fldz
aam
pop
jbe
xchg
clts
push
push
push
inc
fsubrs
add
aas
push
lea
dec
or
cmp
fwait
xchg
jno
add
xlat
cs
sbb
fwait
mov
sbb
add
pop
add
cs
adc
out
or
or
cld
cwtl
out
sahf
cmpsl
clc
lock
jns
enter
lods
test
cmp
jnp
pop
mov
repz
nop
mov
ja
cmp
pusha
pop
push
push
dec
jns
out
cmp
sub
stos
sub
ss
inc
push
sbb
adcb
dec
sub
movsb
jne
imul
fwait
mov
mov
out
sahf
or
sarl
push
adc
adc
lcall
sbb
out
cmp
sbb
cltd
sbb
jns
out
js
jns
jp
imul
decl
pop
xchg
or
inc
cmp
dec
stos
fstl
loop
push
ret
cmpl
sub
out
pop
shll
pushf
sahf
out
sahf
sbb
sahf
out
and
or
insb
pcmpgtb
pop
sahf
out
sahf
add
dec
jns
out
and
inc
or
jns
out
adc
out
sahf
sbb
adc
sbb
jns
out
push
or
add
repz
repz
pushf
and
and
add
xor
cmp
lds
push
outsl
jne
jns
out
addb
sahf
scas
mov
into
ljmp
fs
ds
pop
repz
repz
imul
gs
es
out
sahf
cmp
xchg
jns
lret
or
cmp
shrl
das
dec
dec
outsb
iret
repz
sbbb
mov
movb
repz
jb
xchg
xchg
mov
cmp
cmp
lock
add
adc
aas
cmp
adc
filds
jl
cmp
pop
add
shlb
clc
adc
jno
cmp
adc
adc
lcall
testb
dec
dec
or
push
enter
lea
push
sbb
sub
mov
push
rorl
sarl
xchg
lret
inc
les
xchg
test
or
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
or
subb
xor
adc
or
loopne
or
inc
fcomp
adc
add
add
or
mov
adc
adcb
and
or
mov
inc
or
add
adcb
push
mov
add
shrb
pop
movsb
aaa
dec
popa
sub
jne
mov
mov
pop
movsb
xor
repz
jnp
xor
test
sbb
add
movsb
ficoms
cltd
sub
push
fcoms
sub
mov
mov
aad
and
sbb
add
imul
push
xchg
loope
dec
or
add
add
fwait
inc
sbb
and
dec
fwait
add
mov
inc
das
lds
outsb
pop
push
nop
adc
xor
test
arpl
and
and
xchg
adc
pop
fistl
sub
mov
add
lea
jno
adc
and
orl
adc
and
filds
cmp
or
add
shrb
mov
adc
outsb
xchg
int
cmpsb
xor
adc
cwtl
inc
addb
pusha
or
add
add
sbb
push
mov
adc
add
dec
popa
add
push
arpl
jbe
or
cwtl
ret
stos
subb
sub
jns
loopne
dec
arpl
pop
mov
cwtl
adc
cmpsb
mov
gs
pop
pop
cwtl
ret
ret
inc
pop
sub
sub
or
dec
loope
lahf
es
ret
and
adc
mov
sarl
imul
shll
test
cmp
push
add
dec
sbb
xchg
sub
xor
ret
push
aaa
add
pop
jo
fisttpl
jmp
nop
jo
and
or
rcrl
inc
sbb
pop
mov
jne
xor
and
stos
push
cwtl
fcomi
arpl
or
inc
push
andl
jmp
aas
inc
or
sbb
mov
push
jnp
ret
pusha
xchg
cmp
cmp
add
xor
test
movsb
das
aaa
nop
sbb
sbb
mov
and
inc
jnp
pusha
inc
and
add
dec
or
jno
jns
push
jl
cwtl
sbb
push
jnp
insb
xor
das
xchg
adc
shrl
jmp
dec
test
insb
pop
and
sbb
inc
push
mov
push
in
mov
jne
sbb
roll
inc
mov
mov
inc
negl
mov
jno
adc
pop
mov
stos
orl
dec
or
add
push
dec
popa
sbb
adc
jno
popa
in
gs
cmp
and
mov
jge
inc
and
sub
sbb
insl
insl
call
mov
call
aaa
mov
insl
adc
and
cmpsb
mov
or
xchg
andl
imul
test
or
je
outsl
sub
sub
imul
dec
popa
add
nop
adc
xchg
and
or
cmp
and
add
lret
rolb
pop
std
jo
nop
adc
add
mov
inc
or
add
add
sub
ret
popa
add
call
add
sub
add
push
scas
nop
push
cwtl
ret
mov
cmpsb
push
add
sub
sub
insb
push
fcomps
cmp
ret
add
dec
or
pop
ret
ret
cmp
xchg
mov
and
inc
inc
jmp
daa
addr16
adc
sub
cs
add
xchg
xchg
lods
or
subb
add
inc
add
inc
sub
mov
jmp
adc
inc
test
loope
gs
cmpsl
inc
stos
jbe
dec
mov
dec
sbb
push
vpunpcklbw
inc
mov
and
cwtl
inc
push
gs
sbb
aad
aas
adc
and
dec
popa
adc
and
and
dec
dec
mov
adc
and
pop
aam
push
pop
and
push
cwtl
ret
sub
push
cwtl
sbb
adc
shll
test
sub
xorb
or
das
aas
sbb
mov
xor
and
test
test
orl
sbb
mov
jae
mov
insl
es
leave
lahf
or
mov
or
cwtl
outsb
jne
push
or
push
pop
inc
add
mov
shll
dec
dec
lds
jge
rclb
gs
rol
lds
cmc
sub
dec
mov
jbe
imul
jbe
popa
lods
dec
loopne
xchg
dec
shll
push
pop
addl
add
push
pop
sbb
dec
jno
adc
xlat
push
shl
insl
outsl
sbb
add
adc
adc
out
adc
imul
push
jl
push
or
jmp
lcall
decl
or
adc
cmpsb
imul
adc
sbb
psrlw
movsb
add
mov
push
or
fcoms
or
imul
int3
hlt
addr16
adc
push
mov
mov
push
cmp
pusha
or
sub
push
add
add
push
inc
cmp
test
and
and
dec
inc
push
lock
stos
inc
push
jecxz
roll
and
inc
xor
mov
pop
or
leave
adc
movsb
clc
jne
dec
cmpsb
xor
aaa
add
xchg
push
mov
sbb
or
add
and
and
and
sub
and
aam
sub
fldcw
xchg
adc
loope
popf
add
loope
sub
fsts
fs
fsts
nop
or
popa
sub
testb
push
sbbb
or
ret
leave
xchg
sub
xor
mov
sub
xchg
or
and
inc
aaa
sub
adcl
bound
je
bound
cmp
mov
addl
insb
ret
fisubrs
inc
mov
leave
xorl
push
sahf
and
and
cmc
adc
add
xlat
bound
adc
sub
sbb
dec
popa
push
add
lcall
test
add
xor
pop
add
movsl
dec
cmpsl
movsb
xor
add
sbb
ret
sub
sub
and
jg
mov
mov
repz
push
inc
mov
shlb
push
jo
adc
dec
and
or
cmp
add
add
sub
add
arpl
add
sbb
inc
or
aad
push
mov
dec
push
jns
pavgw
pop
arpl
outsb
das
inc
sub
sbb
mov
inc
adc
add
cwtl
push
inc
inc
daa
cltd
inc
in
dec
and
pop
dec
popa
xor
les
push
stos
inc
out
andl
sub
aaa
jb
xor
xor
cltd
xor
pop
mov
sub
xor
xchg
sub
add
adc
and
xchg
sub
subb
push
in
bound
xchg
sub
adc
and
popa
in
sbb
pop
push
enter
jnp
gs
sub
add
adc
movsb
and
inc
sbb
or
and
sub
into
pop
push
push
push
cmp
push
gs
imul
push
lods
push
pop
popa
or
push
mov
or
or
add
rclb
inc
fwait
testl
adc
cmp
mov
popa
pop
mov
mov
mov
xor
jmp
out
aaa
loopne
sub
push
add
addr16
mov
aad
jae
or
pop
dec
popa
int
push
enter
pop
xor
xchg
popf
push
jne
lds
push
or
daa
clc
or
stos
cmp
push
outsb
mov
push
inc
add
and
dec
je
jo
mov
lock
jne
push
arpl
test
mov
and
repz
sub
fdivrl
add
testl
or
add
lret
add
js
sub
ret
popa
add
push
mov
or
sbb
push
sub
inc
popa
jne
lods
scas
loopne
jmp
add
or
sub
cmpsl
dec
loope
inc
mov
add
repz
rcl
rclb
push
mov
rcrl
arpl
add
adc
aam
sahf
lret
jno
add
inc
jns
add
scas
dec
or
rolb
jp
adc
adc
or
pop
push
inc
fstps
push
pop
xchg
rcrb
xchg
pop
nop
cmp
lcall
rcrb
call
mov
sbb
or
or
xor
mov
sysret
out
stc
lock
stos
inc
adc
add
xchg
cwtl
dec
push
pop
neg
loopne
xlat
out
push
jo
lahf
test
out
sub
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
