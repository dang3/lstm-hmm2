mov
mov
cmpl
je
jmp
push
das
das
ja
arpl
in
dec
ljmp
gs
insl
arpl
add
arpl
push
mov
lea
neg
call
notb
push
call
shlb
adc
pop
je
and
in
inc
mov
push
pop
xor
add
jae
jne
add
cmp
and
std
outsb
jg
dec
xor
je
mov
push
sbb
or
out
mov
pop
pop
ret
nop
add
or
stc
mov
dec
sub
push
shr
inc
xor
push
xorl
idiv
add
or
add
setne
jl
sbb
mov
shrl
cmp
jne
or
call
lret
arpl
das
add
inc
mov
jg
add
mov
mov
stos
adc
push
push
push
push
lret
add
mov
jle
cs
xor
cmp
pop
xchg
pop
enter
aas
add
idiv
lods
fwait
and
sti
neg
sbb
and
inc
scas
fldcw
mov
cld
adc
lret
outsl
pop
or
and
enter
pop
add
out
mov
push
push
mov
mov
insl
adc
cmc
xlat
cmp
fmuls
or
pop
mov
or
pop
mov
pop
pop
pop
mov
jno
pop
sub
adc
in
push
mov
mov
test
mov
fucomip
mov
lea
or
add
cld
aaa
sbb
les
test
jne
mov
in
cs
push
push
and
fcompl
or
or
clc
fcmovne
jo
add
dec
dec
add
add
ffreep
outsl
bound
mov
sub
pop
push
sub
int3
inc
fnstcw
mov
pop
pop
out
into
fsubr
pop
mov
lock
divb
sbb
mov
and
jg
negb
sarb
leave
or
dec
rclb
jg
je
inc
movsb
or
out
pop
inc
pop
add
pusha
outsb
mov
pop
jge
sub
adc
insl
aas
mov
les
ret
sbb
outsb
mov
or
pop
sub
cmp
inc
pop
daa
fnstenv
sbb
and
inc
notl
or
ja
in
adc
sbb
and
xchg
shrb
ret
add
addb
loop
lahf
mov
and
cwtl
adc
outsb
ret
add
pop
mov
pop
fdiv
cmp
push
sti
xchg
decb
sbb
cmpl
jne
push
jnp
ret
test
mov
lods
ja
imulb
adc
dec
sub
inc
add
xchg
rcr
mov
xor
mov
cmp
mov
pop
add
fisttpl
inc
add
jl
cmp
mov
inc
ret
sbb
nop/reserved
scas
inc
jmp
jl
push
stos
or
imul
cmp
pop
jne
mov
adc
les
jle
dec
mov
sarl
or
mov
add
scas
pusha
call
ret
ret
imul
pop
outsb
xor
outsl
add
insb
divb
fistpl
in
divb
out
push
cmp
push
mov
insb
xor
frstor
rorb
fs
mov
mov
pop
or
adc
push
or
mov
cmp
sbb
add
insl
negl
leave
or
or
sbb
enter
inc
cmp
inc
int3
xchg
or
adc
pusha
add
outsb
jnp
ja
adc
xorps
push
je
int3
je
adc
adc
jo
jb
cmp
adc
cmp
aad
mov
sub
and
sub
ret
mov
je
push
es
jno
mov
sub
aad
cmp
mov
js
push
sub
and
push
push
js
adc
sbb
fistpl
xchg
jmp
addr16
mov
mov
push
push
push
adc
movsl
cmp
push
lea
jl
pop
ret
fnstcw
push
outsb
push
and
or
inc
jb
cmpsl
lahf
idiv
mov
push
fwait
in
je
mov
xchg
push
mov
ds
push
mov
cmpsl
scas
xchg
sub
dec
addr16
divb
iret
push
std
xor
loopne
ret
scas
and
outsl
xor
divb
jne
mov
addb
ret
push
mov
mov
xor
push
adc
ja
subb
ret
xor
dec
add
xchg
mov
mov
push
or
mov
mov
jo
icebp
jmp
and
xchg
mov
sub
adc
dec
fldt
sbb
dec
loopne
dec
cwtl
inc
dec
xor
jbe
pop
mov
ret
sbb
roll
popa
and
and
add
xor
insb
je
push
sub
rorl
xchg
mov
add
adc
or
call
fcmove
call
or
imul
mov
sub
add
mov
add
adc
lahf
dec
or
push
mov
mov
xor
pop
divl
insb
adc
jmp
out
mov
lea
add
pop
cmp
or
jmp
mov
jl
dec
fildl
xor
sub
mov
mov
scas
icebp
cltd
idiv
mov
insb
add
add
insl
dec
movsl
push
adc
fidivs
adc
sbb
loop
loope
mov
add
and
iret
testb
decl
jl
jecxz
mov
mov
mov
push
add
iret
mov
shr
mov
gs
mov
imul
push
inc
mov
inc
dec
jne
mov
inc
inc
aad
ret
jl
pop
add
imul
xor
push
mov
negl
cmp
jne
fsub
adc
int
adc
popa
push
add
adc
sbbb
xor
mov
push
fildll
adc
or
xor
stc
jg
adc
testl
ret
jecxz
mov
inc
dec
add
add
mov
add
jecxz
mov
and
adc
loope
cmp
fidivs
jmp
lock
je
lahf
je
pop
sbb
push
fmulp
rclb
push
push
notb
popa
nop
andps
jl
daa
lock
outsb
sbbb
xor
mov
sub
jbe
jl
inc
cmp
lcall
out
mov
push
push
xchg
lds
inc
xchg
out
mov
sbb
adc
inc
inc
sub
lds
roll
or
add
jmp
rorl
js
arpl
sbb
testb
inc
je
lods
mov
inc
or
call
pop
jg
add
jge
clc
jle
jo
mov
or
inc
or
jbe
notb
push
xor
add
add
lret
int
scas
stos
mov
add
jl
lds
mov
push
add
push
jl
lahf
insl
xchg
mov
add
fcmovnbe
dec
xchg
push
push
pop
sub
or
rcr
or
jne
cmp
cmpsl
adc
sub
or
je
ret
and
fs
movb
addl
lock
push
push
inc
mov
jbe
mov
sbb
data16
lea
push
pop
insl
sub
inc
dec
dec
push
loopne
xchg
cmpl
shl
movb
imulb
push
inc
mov
cltd
add
clc
out
insb
mov
sbb
sbb
cli
adc
adc
sub
mov
sub
stc
sbb
test
inc
or
inc
xor
push
loope
mov
push
lea
cmp
mov
lods
push
ret
sub
xchg
sbb
add
rcl
mov
movsl
add
notl
icebp
std
jmp
and
or
in
insb
dec
mov
rol
xor
dec
xor
pop
mov
sti
or
cli
jne
xor
jnp
fcmovbe
mov
leave
jmp
rcll
fstpl
sub
xorb
push
cs
sbb
pop
call
sbb
sub
nop
out
popa
cmp
mov
pop
jnp
out
pop
lods
and
mov
inc
sub
fmull
xchg
movsl
or
movsb
outsl
pop
ljmp
sub
sbb
leave
adc
push
cwtl
addb
cwtl
inc
and
repnz
dec
add
xchg
js
sti
inc
mov
or
fs
mov
inc
pop
aaa
mov
jmp
push
rorb
inc
adc
and
jmp
repnz
jecxz
jo
mov
push
sbb
push
outsb
sub
and
xchg
add
mov
add
add
sub
adc
loopne
dec
sbb
mov
push
push
shlb
or
or
cmp
push
dec
mov
dec
cmp
jbe
bswap
out
lcall
mov
mov
je
sub
in
xchg
pop
lret
stos
inc
dec
or
mov
xchg
jp
imul
fs
in
push
push
jae
lea
push
push
rcl
out
pop
mov
jge
movb
inc
and
push
mov
add
sub
jbe
or
inc
test
outsl
sbb
push
aad
scas
push
push
andb
xchg
mov
inc
jae
mov
or
push
lret
gs
fwait
bound
jg
loop
sti
in
out
cmc
lret
jmp
and
rep
sub
lahf
in
mov
cmp
je
mov
aam
cmpb
dec
idiv
pop
je
adc
and
mov
pop
jbe
mov
iret
aas
cmp
xorb
add
inc
ljmp
inc
and
xchg
jge
add
or
lods
test
ror
es
pop
aas
mov
fmul
push
or
mov
inc
adc
inc
push
inc
aas
popa
pop
ss
cmpb
push
test
es
test
sbb
into
call
xor
push
push
mov
or
and
mov
popf
and
mov
or
sub
pop
pop
iret
jne,pn
das
push
mov
test
mov
and
push
stos
jmp
or
sub
sbb
cmp
imul
add
insb
jmp
std
or
pop
sbb
and
adc
or
cmp
jns
in
cmpsb
test
mov
cmpsb
sti
jg
shl
shr
add
push
sbbl
or
out
je
cmp
jle
or
dec
adc
cmp
or
outsl
sub
or
jae
xlat
in
jbe
adc
sub
and
cmp
lods
cmp
es
dec
das
scas
sbb
rcrb
mov
shr
jne
lret
fdivl
add
push
or
add
xor
pop
jmp
clc
jo
les
pop
ljmp
push
arpl
inc
xchg
push
stos
sbb
or
stc
push
rdtsc
fsubrl
cmpsb
dec
inc
pop
add
push
movsb
movsl
and
imul
jge
movb
aas
mov
add
popf
nop
lods
add
jmp
in
mov
pop
add
and
add
add
nop
sub
lods
pop
test
rcll
out
sbb
mov
add
fnsave
sbbl
xchg
xchg
test
or
xchg
or
xchg
mov
inc
mov
outsl
mov
push
sub
subb
cmp
push
add
imul
adc
aas
mov
xor
push
add
mov
fdivrp
in
dec
push
cmpsb
je
dec
dec
rcrl
ret
and
testb
mov
or
lds
push
xchg
call
pop
in
push
lea
jge
ficomps
testb
add
imul
es
or
ret
pushf
shrl
mov
cmpsb
pop
psubusb
sbb
xor
jne
push
or
in
dec
mov
jbe
ret
outsl
and
out
insb
jmp
push
push
xor
leave
cmp
clc
and
sbb
stos
out
cmp
sbb
insb
sbb
sbb
cld
inc
mov
xrelease
icebp
mov
sahf
sub
adc
or
sub
xchg
ljmp
adc
movsb
mov
xchg
inc
jmp
popa
mov
push
and
pop
mov
add
push
roll
lcall
xchg
sbb
or
lcall
sbb
rol
mov
xor
int3
shll
add
xor
out
jne
push
daa
or
push
stos
test
xor
dec
push
jmp
subb
shlb
fldl
rorb
inc
add
iret
sub
push
and
xor
sahf
popa
pop
pop
mov
jge
or
or
cmp
pop
adc
movl
int
and
dec
or
jno
ret
add
add
js
je
mov
inc
shrl
cmp
cmp
inc
sbb
jns
addb
jmp
mov
lock
push
pop
mov
loopne
cld
insl
mov
add
mov
push
mov
int3
sub
sub
cltd
cmpsl
imul
aaa
sbb
aam
mov
mov
dec
scas
in
and
ss
lea
mov
inc
mov
jecxz
mov
sbb
mov
adc
sub
test
loope
sbb
aas
mov
and
pop
dec
shr
decb
cli
mov
clc
call
sub
andl
sub
push
ds
mov
adcl
popa
insl
gs
inc
cmp
jb
pop
in
pop
cmp
pop
mov
ret
fisttpll
shrb
loope
add
lret
or
insb
mov
or
shlb
mov
cwtl
mov
inc
add
adc
lcall
pop
and
shlb
pusha
sub
inc
jmp
sub
out
push
insl
ss
test
mov
mov
adc
add
movsl
gs
sahf
push
pop
mov
movsb
dec
test
and
add
jg
sbb
ljmp
cmp
sbb
sbb
lds
shlb
bound
insb
xchg
mov
or
pushf
xor
aaa
and
loope
jl
sbb
add
add
pop
dec
pop
push
dec
xor
das
leave
push
mov
out
lcall
or
nop
and
jb
leave
add
fadds
sbb
lcall
cs
call
ret
jmp
int3
scas
add
lcall
push
scas
cmp
sbb
fmulp
pusha
sbb
fisubrs
in
xor
pop
testl
rcrb
cmc
gs
pop
aaa
dec
ret
cs
jo
inc
add
mov
push
and
movsb
rcrl
sub
sub
sub
ss
push
stos
idivb
cmp
je
cmp
jge
movsb
outsb
and
or
add
nop
cmp
std
sub
or
repz
push
push
mov
ss
xor
js
mov
xchg
rorb
xchg
mov
cmp
les
popa
mov
les
sbbl
mov
cmp
imul
mov
dec
inc
adc
cmpsb
jmp
data16
add
add
clc
dec
push
lcall
sti
and
push
jo
int3
pop
xchg
pop
addr16
sub
mov
adc
mov
mov
pop
aaa
sete
xor
mov
cmp
push
dec
cmp
push
lcall
adc
mov
add
dec
mov
loopne
js
insl
movl
or
or
mov
push
pop
popa
ret
xor
push
push
cmp
in
frstor
int
mov
fnstenv
cld
rol
inc
fld
pop
add
mov
or
xchg
fcomps
xor
xchg
pop
jne
dec
pop
jl
mov
jb
mov
roll
loope
sub
cld
inc
mov
xor
inc
test
sbb
jp
cs
in
pop
push
inc
inc
and
sub
mov
cmp
xchg
push
or
add
ficoms
cmp
mov
sub
xchg
add
xor
and
mov
or
jmp
sbbb
or
xchg
pop
inc
push
dec
jne
sbb
loop
jbe
stc
mov
scas
pop
mov
sbb
dec
out
push
push
mov
incl
iret
inc
dec
jne
mov
jle
push
push
pop
cmp
rcrb
jne
fidivs
add
inc
je
adc
aam
push
sti
fwait
and
pop
call
jmp
mov
xor
or
add
inc
add
push
rclb
ds
jmp
cld
push
adc
cmp
int3
adc
clc
or
rolb
arpl
cmc
daa
repnz
sbb
pop
mov
int
pop
lea
and
pop
fistpl
in
fsubrs
and
sbb
ret
dec
cs
inc
or
ret
pop
popf
out
pop
sahf
fcomp
xchg
jecxz
xor
xor
pop
dec
push
bound
push
stc
pop
cmp
mov
xor
dec
bndstx
sub
or
sbb
jmp
push
push
xor
leave
jb
add
sub
cmp
adc
pop
jg
mov
or
mov
pop
ret
adc
pop
xchg
and
fisubrs
push
push
push
pop
sub
rcl
sbb
sbbb
inc
test
or
mov
fstl
das
push
cmp
jo
loope
sbb
bound
sub
hlt
pop
and
push
leave
subb
loopne
adc
adc
rcrl
je
movl
shl
xor
push
fst
add
aas
and
jl
add
xor
sbb
adc
loopne
lods
cwtl
mov
add
adc
cmp
push
hlt
aam
outsl
mov
in
inc
sbb
push
sbb
or
outsl
cmp
or
js
add
outsb
cltd
in
pusha
fldt
dec
adc
sub
add
cmp
lds
in
outsb
pop
test
mov
jp
inc
pushf
movsb
incl
idivl
mov
pop
push
push
sub
stc
fcomp
jne
outsb
andl
je
or
int3
or
add
jne
xchg
je
jne
inc
js
jmp
iret
mov
shlb
adc
fs
scas
arpl
mov
lods
and
addb
ret
pop
idivl
adc
pop
pop
or
lods
adcl
clc
mov
fdivs
decl
std
pop
pop
inc
cmpsl
xchg
xor
scas
cmp
mov
jle
aad
xchg
adc
pop
sub
or
ret
push
std
dec
cmc
or
lock
add
push
rorb
dec
cmp
lahf
inc
ret
push
inc
aas
inc
or
jne
jmp
add
pop
cld
mov
inc
js
cmp
adcb
nop
pop
hlt
popa
xor
sbb
pop
inc
push
or
sbb
inc
push
out
cmp
inc
xchg
sub
adc
sbb
aas
add
pop
ds
jl
in
or
es
xor
into
or
add
sbb
sbb
push
inc
leave
xchg
outsl
pushf
ret
push
es
stc
mov
xorb
mov
icebp
xlat
push
cmpsl
incb
sbb
mov
rcr
sbb
jae
jne
pop
dec
push
push
inc
xchg
insl
jb
ljmp
adc
xorl
loope
test
imul
push
prefetch
mov
push
push
int
push
inc
std
cmp
leave
add
cmp
jae
aaa
push
or
pop
jle
jbe
xor
pushw
fcoms
pushf
xchg
pop
cmp
fsubrs
das
jl
sbb
je
push
es
mov
ret
fistpl
adc
push
test
movsl
test
mov
movsl
sub
xor
add
lret
add
je
mov
outsl
inc
out
pop
add
jne
sarb
push
inc
dec
sub
push
mov
cmp
icebp
jb
mov
and
clc
xchg
cmp
ss
add
rcll
push
daa
lret
inc
insb
stos
mov
mov
add
xchg
cwtl
cmp
std
pusha
test
pop
and
mov
add
dec
xchg
add
sbbb
add
fldt
cmp
pop
inc
fcoms
add
je
cmp
fsubl
rolb
mov
mov
mov
das
jmp
or
xorb
jne
or
pop
mov
inc
jnp
mov
adc
push
shlb
aad
inc
jle
or
addl
je
fstps
sub
incb
lods
lret
push
in
lea
inc
mov
sub
std
push
or
push
inc
or
and
sub
movsl
sub
push
xor
add
sbb
sbb
inc
mov
mov
inc
imul
in
push
push
and
cs
sub
xor
inc
xor
mov
shlb
in
dec
cmp
sub
call
shrl
xchg
cmc
xor
cmp
les
clc
pop
test
push
pop
push
incb
pop
sub
push
mov
lea
cmp
jnp
clc
adc
pop
lock
xor
xchg
or
xchg
insb
mov
into
cmp
dec
push
inc
lock
sbb
jne
xchg
xor
dec
jle
test
push
adc
mov
fcoms
jnp
sbb
std
sbb
shlb
sbbb
jp
daa
ja
js
add
push
addl
pop
icebp
mov
test
push
sbb
and
lahf
mov
sub
push
gs
dec
out
pop
inc
cmp
cmp
fisubl
mov
add
and
hlt
sti
mov
and
sub
sub
mov
das
push
inc
mov
or
jge
fcomp
repz
push
test
shr
or
dec
jg
push
fdivrl
or
or
iret
mov
jecxz
dec
push
xchg
addl
jg
lock
fildl
xchg
dec
inc
rorl
add
insl
les
arpl
and
sarb
mov
add
sbb
mov
cmp
std
cmp
jne
daa
dec
push
xor
push
or
sahf
cmp
mov
sahf
call
xlat
push
aas
cmpsb
xlat
mov
inc
leave
xor
xor
pop
xor
cmp
push
inc
jmp
in
sbb
add
jl
pushl
pusha
mov
pcmpeqb
and
cmp
shrb
pop
test
mov
addb
push
push
jno
inc
jno
sub
repz
pop
push
test
fdivl
or
xor
iret
cltd
add
cmp
out
adc
les
addr16
sbb
cmp
iret
in
dec
push
cmp
inc
mov
mov
push
ja
add
inc
fistl
ds
mov
mov
jle
push
and
xor
xchg
mov
pop
mov
mov
pop
mov
sub
or
push
adc
test
iret
push
hlt
ret
push
fs
mov
fldl
push
sbb
dec
pushfw
sbb
or
xor
mov
rcr
scas
push
push
data16
fldt
cld
pcmpeqw
sub
popf
push
adc
loope
jmp
mov
dec
add
loop
movsl
in
push
jmp
mov
adc
sub
orb
cmp
mov
xchg
pop
push
mov
out
testb
or
fstl
inc
dec
and
dec
or
sar
ljmp
xor
int
aam
loop
cmp
sahf
outsb
add
add
mov
add
rcll
adc
sbb
vcvtpd2psx
adc
ret
sbb
iret
sti
push
mov
or
jge
xor
aam
or
jmp
or
incb
shr
and
jecxz
cmpl
movl
mov
pop
pop
shr
or
push
or
pop
orb
out
dec
adc
or
lea
roll
setb
loop
jg
inc
and
shl
sahf
rolb
push
add
shll
pop
into
roll
cmp
and
cmp
sub
cmp
bound
push
push
mov
sbbl
addr16
add
int
xchg
gs
sbb
mov
mov
lods
orb
sub
cmp
dec
out
mov
inc
and
adc
adc
jne
jg
imul
or
sub
jns
ds
mov
inc
out
in
mov
push
dec
push
adc
mov
cltd
adc
inc
fs
add
incl
mov
imul
mov
or
dec
jae
cmp
push
push
push
jp
push
pop
mov
pop
lods
lcall
cmp
jne
mov
das
dec
filds
adc
leave
pushf
dec
jmp
enter
sarl
push
inc
sbb
loope
outsl
push
adc
adc
sarl
inc
cmp
adc
or
js
mov
fnstenv
cmpsb
cmp
mov
loopne
cld
mov
es
loopne
test
lods
cwtl
xor
and
mov
aaa
imull
orl
mov
cmp
lods
cmp
cwtl
je
add
xchg
and
mov
push
add
stos
popa
xor
adc
sub
lods
scas
adcb
push
lds
movsl
mov
mov
dec
cmpb
js
jmp
add
test
push
es
or
pop
lds
inc
xchg
pop
push
push
stos
or
inc
xchg
idivb
repz
adc
xchg
jo
mov
push
xchg
lea
clc
cmp
repnz
shr
push
add
adc
rorb
in
push
lds
je
insb
adc
js
in
mov
jle
dec
fistl
call
xor
jmp
outsb
pop
mov
int
fcompl
test
dec
push
push
or
loope
pushl
loop
ss
sbb
rcrl
pop
dec
or
pop
ret
cmc
das
mov
stos
sbb
adc
xor
orb
adc
mov
cmp
jbe
pop
cmp
cs
test
pop
push
inc
and
je
outsb
fs
pop
and
dec
and
xchg
aaa
or
stos
nop
jbe
cmp
subb
push
push
cwtl
idivb
jl
mov
cmp
addr16
cmp
pop
leave
leave
repz
cmp
out
pop
pop
jl
cmp
xchg
add
mov
xchg
aaa
xor
sbb
inc
sbb
push
gs
dec
xor
fbstp
popa
sbb
pop
sbb
test
pop
cmpsb
nop
data16
cmp
in
and
movsb
sub
cs
pop
mov
sbb
popa
and
enter
sbb
cmp
dec
rcrb
pop
mov
call
sbb
aad
inc
jnp
add
je
mov
jp
loop
lds
cmp
out
flds
call
cs
subl
adc
sbb
jb
test
sahf
xchg
ja
pop
jg
jno
push
inc
push
inc
aaa
push
lahf
movsl
sarb
xor
fmuls
xchg
popa
rcrl
push
cmp
rcrl
pop
call
imul
gs
or
or
std
cmp
jno
call
push
cmp
mov
andb
adc
push
pop
adc
stc
imull
mov
movsb
xchg
std
adc
mov
out
scas
stos
or
mov
popf
shrb
movsb
or
sbb
sbb
or
push
mov
xor
mov
or
icebp
test
add
pop
or
adc
roll
mov
repz
push
mov
push
adc
in
cmp
dec
outsl
and
rclb
cmp
and
jge
leave
push
push
inc
adc
cmp
data16
pop
push
sahf
pop
push
cmpsl
jle
dec
add
aad
inc
sahf
les
push
push
fidivrs
pushf
jmp
mov
into
popf
push
subb
or
cmpsl
jo
test
xchg
pop
sbb
xchg
test
push
add
sub
jp
sbb
hlt
xchg
aam
mov
imul
cs
adc
sbb
imul
fstps
and
jecxz
lcall
inc
jle
and
dec
loopne
sbb
push
in
xchg
add
sbb
cmc
jo
test
cmp
xor
fstpl
lea
cld
int3
mov
xchg
rorb
bound
rolb
testl
jmp
stos
je
mov
mov
call
push
add
test
mov
mov
lea
push
sub
into
push
stos
push
or
movsl
inc
test
adc
pop
mov
pop
jl
aad
pop
sub
push
mov
loope
cmp
sbb
mov
jne
scas
mov
adc
jnp
mov
xchg
adc
in
lods
jg
test
and
mov
daa
sbb
jb
add
xor
in
imul
sbb
loopne
jp
add
add
jae
adc
lock
dec
enter
dec
add
dec
in
gs
sbb
popa
dec
adc
or
add
mov
insb
cmpsl
add
add
out
or
imul
sub
cmc
push
jb
push
add
in
sub
pushf
add
aad
jge
cmp
inc
push
push
and
mov
gs
sub
adc
push
push
mov
dec
jle
mov
xor
in
aam
lea
add
xchg
adc
orb
int3
rcrl
popf
fs
imull
adc
jle
insb
cmpb
mov
push
push
adc
push
push
int
inc
hlt
insb
rcrb
addl
push
aaa
push
cmp
xor
aas
inc
xor
hlt
mov
cs
add
push
mov
mov
inc
icebp
xchg
cmpb
je
push
jne
push
pop
pop
pop
push
mov
rcll
mov
push
ss
adcb
call
pop
mov
or
int3
pop
in
cmpsl
sti
pop
lds
je
sbb
cmp
test
pusha
pop
and
add
add
fistps
lods
sbb
inc
adc
push
in
insl
mov
out
in
mov
jb
ret
sbb
call
je
push
xor
in
out
inc
sti
sub
jge
je
and
dec
adc
jl
and
adc
mov
adc
pusha
outsl
pop
push
mov
xorb
mov
jnp
mov
rcll
inc
add
js
fisttpll
pop
sbb
out
in
adc
cmp
mov
inc
cmpl
outsb
xor
and
divl
adc
aam
cld
mov
xchg
ret
mov
fidivl
jno
push
es
je
iret
jbe
fcomps
loop
arpl
ret
lods
cmp
ret
add
nop
movsl
push
add
sub
push
jmp
pop
pop
mov
ds
pop
mov
loope
out
adc
or
inc
mov
fidivrs
pop
cmp
cmp
dec
mov
inc
mov
cmp
jne
dec
out
and
sti
jle
dec
mov
pop
addr16
adc
mov
stc
jg
add
jne
cmpl
add
lods
adc
jo
out
in
mov
ja
sub
cmp
mov
cmpb
adc
inc
add
je
sub
sub
pop
and
xor
ret
mov
pop
lea
fistl
mov
je
ja
jne
cmpb
mov
mov
inc
inc
in
movsb
push
pop
out
fstl
cmp
push
sub
sub
add
add
mov
pop
shrl
mov
push
call
fmul
push
dec
test
dec
lcall
and
pop
dec
jmp
sbb
or
out
loop
pop
lret
jl
inc
rcpps
push
cs
mov
sub
push
cmp
lret
push
gs
xor
push
in
sti
xchg
mov
js
and
or
adc
into
outsb
xchg
mov
insl
sahf
dec
sahf
icebp
out
dec
mov
into
sub
daa
loop
mov
dec
inc
mov
test
push
loopne
jae
leave
shr
inc
cltd
mov
adc
mov
pop
movl
pusha
add
push
subl
fildll
ret
jbe
mov
mov
add
xor
xor
incw
add
dec
jne
mov
jmp
mov
inc
mov
adc
adc
push
jno
mov
mov
ret
iret
add
or
test
sbb
lods
jp
push
outsl
mov
adc
cmpb
mov
or
add
clc
mov
jae
aaa
sbb
int3
mov
lea
jge
sbb
inc
or
push
inc
inc
je
mov
enter
mov
jne
push
xor
out
mov
add
mov
in
aad
aas
hlt
cmp
jne
jns
jb
push
jae
sbb
andb
ret
mov
test
sbb
cmp
push
sbb
sahf
out
pusha
xchg
dec
sbb
sbb
lret
outsb
lea
arpl
xchg
jnp
or
add
shr
fldt
jb
push
jbe
dec
add
aad
fstl
push
xor
cmp
jbe
mov
mov
fsubr
mov
fimull
leave
shr
add
add
inc
mov
test
insl
cld
mov
mov
sbb
push
repnz
mov
popl
pop
pop
stos
loope
mov
mov
and
sbb
xor
add
cmp
and
cmp
push
popa
adc
and
xchg
sbb
push
leave
xchg
pop
jnp
inc
and
and
into
inc
cltd
in
test
sub
punpckhbw
jg
mov
icebp
push
inc
in
ja
loopne
xchg
adc
je
add
stos
sbb
push
and
adc
jl
inc
mov
xor
pushf
sub
mov
mov
push
loopne
aam
std
enter
jle
adcb
mov
push
mov
lea
mov
pop
in
lea
xlat
loop
fdivrl
lret
add
jge
mov
sti
xor
jge
sarl
shlb
dec
push
push
shr
mov
mov
fs
add
and
leave
sub
add
je
insl
jnp
cmp
dec
inc
dec
leave
adc
jnp
push
movb
rorb
dec
inc
je
ja
dec
jbe
sbbl
pop
enter
adc
xchg
decb
mov
test
imul
or
cmp
dec
sahf
jmp
int3
adc
rcl
xchg
stos
push
loopne,pt
inc
icebp
mov
test
ja
pop
fadds
mov
pushf
inc
pop
call
sub
in
adc
mov
mov
ret
or
push
xchg
outsl
adc
add
inc
sub
loopne
dec
xchg
fdivs
jns
into
inc
fistpl
jb
jne
add
fidivs
push
lret
bound
dec
sbb
outsl
inc
fs
or
dec
push
add
rcr
stc
ret
cmp
jo
mov
jnp
test
shr
inc
add
dec
dec
jo
insb
icebp
mov
inc
xor
dec
mov
add
or
loope
xor
xchg
mov
mov
cmp
sbb
mov
xor
cmp
scas
cltd
sbb
jne
or
add
addr16
inc
or
pop
test
sub
ret
sub
xor
mov
mov
add
pop
mov
jne
sub
ja
sti
scas
fisttpl
add
adc
push
shlb
push
cmp
das
imul
jne
stos
icebp
push
pop
fstps
ljmp
add
mov
xlat
je
cmp
sub
push
adc
inc
loop
cmp
dec
loopne
xchg
std
cmp
pop
push
sbb
inc
jae
sahf
clc
shll
and
pushf
aad
mov
stos
outsl
stos
push
adc
jb
jmp
inc
or
test
jmp
mov
mov
or
xchg
or
adc
mov
mov
sti
xor
add
es
pop
mov
add
add
aam
data16
and
xor
fnstenv
adc
or
cmp
jl
cmp
jg
out
cmp
jg
insb
mov
cs
cmp
jle
cmp
pop
xchg
rol
or
cmpsb
and
mov
or
call
or
push
push
xor
and
loope
push
in
jne
clc
arpl
pushl
jbe
mov
inc
test
and
mov
mov
stc
sbb
inc
sbb
mov
push
jle
mov
inc
andb
push
push
pop
add
mov
cmp
mov
movsl
xor
out
repnz
fldenv
mov
shlb
mov
cmp
jbe
dec
mov
popl
je
and
fiadds
and
push
jmp
pop
pcmpgtd
mov
pusha
xlat
adc
les
in
adc
ss
jbe
xor
inc
rol
jbe
or
js
aad
xor
cmpl
xchg
subb
inc
xor
add
lret
test
in
ret
push
incb
or
push
dec
popa
in
dec
add
jb
push
cmc
xor
pop
xchg
faddl
or
scas
sub
cmp
lret
jmp
dec
popf
mov
add
mov
add
dec
jmp
xor
repnz
repz
push
add
dec
dec
sbb
popa
xor
or
inc
ljmp
add
scas
push
xor
cmp
jl
jns
fsubrs
fidivs
adc
outsb
adc
inc
add
rep
mov
add
adc
add
es
rcrb
shll
test
aas
sti
mov
pop
leave
mov
adc
sub
es
cmp
push
out
cmpsl
sti
and
mov
dec
cmp
xchg
xor
jmp
pop
cmp
inc
movb
adc
fsts
iret
adc
adc
cmp
sbb
and
jb
add
cmp
add
shr
sub
out
loope
sub
rcll
xlat
fsts
inc
roll
in
sub
sub
jge
jae
xchg
inc
pusha
jns
sub
test
pop
jne
orb
jp
dec
scas
pop
subl
push
mov
stc
mov
push
jle
sub
push
or
mov
rclb
loope
inc
adc
sub
shll
push
sbb
ja
push
adc
or
adc
sbb
lret
cwtl
mov
rol
cmp
ja
mov
rcl
inc
shl
dec
jbe
xchg
testl
sub
and
adcl
adc
and
push
sub
jl
jmp
test
dec
push
push
mov
xor
push
or
sahf
adc
es
or
or
rorb
insb
test
pop
mov
pop
bound
xlat
add
fiaddl
test
xor
dec
in
and
fdiv
jle
jbe
mov
adc
pop
incl
ljmp
imul
xchg
push
jb
inc
cmp
jb
dec
and
sbb
fiadds
rol
adc
pop
xor
add
psrad
test
mov
sub
xor
pop
lock
cmp
in
mov
pop
cmpsb
lods
xchg
push
dec
pop
mov
loop
jp
or
adc
add
or
push
xor
or
subl
pop
jmp
scas
and
inc
dec
lcall
add
cmp
fs
xchg
adc
sbb
push
mov
add
lods
flds
pop
bnd
pop
add
pop
adc
push
add
repz
pusha
xor
add
mov
icebp
and
leave
int
icebp
pop
lret
mov
cmp
roll
cmc
icebp
adc
xor
aam
insb
repz
adc
inc
hlt
xchg
dec
cs
hlt
sub
inc
cmp
or
adc
and
push
call
hlt
sub
bound
push
push
sbb
mov
je
shl
sbb
and
cwtl
mov
mov
cld
loopne
sbb
push
add
cmp
and
repnz
cmp
cmp
push
and
sar
out
sbb
adc
sub
jge
ret
ret
sbb
or
clc
hlt
xor
inc
repnz
adc
sbb
sbb
push
adc
xchg
xor
push
push
enter
push
adc
leave
and
sbb
sbb
adc
xor
jne
lea
pushl
insb
or
dec
mov
mov
jmp
int
add
pop
xor
add
add
adc
in
out
call
out
adc
fcoms
add
movb
adc
add
sub
fildl
add
stc
push
jl
repz
or
int3
imulb
dec
lods
and
ret
gs
pusha
xorb
push
sarb
cmp
fcoms
push
mov
fcom
xor
inc
es
sub
jg
lcall
es
cwtl
or
aad
push
add
fidivs
shrb
jo
fistl
adc
mov
xor
sub
mov
mov
adc
add
mov
sbb
jne
jmp
cmp
ret
outsl
push
stc
push
xchg
mov
adc
loope
jl
dec
clc
dec
lea
pop
xor
inc
dec
movb
inc
mov
or
inc
aam
icebp
mov
cld
lods
push
or
shr
mov
mov
in
test
pop
and
xchg
mov
cmp
mov
das
ret
movsbl
inc
inc
loopne
jg
jns
or
lea
xor
push
stos
push
inc
add
add
andb
mov
and
loop
lcall
or
inc
icebp
sbb
icebp
fld
xor
cmp
movsl
sarb
mov
lahf
mov
lods
or
cmp
mov
add
push
adc
jne
mov
xchg
cmp
push
cmp
imul
call
pop
jmp
pop
jp
je
add
cmp
jbe
sbb
push
cld
in
jnp
cmpsl
mov
add
movsl
inc
xchg
mov
push
pop
inc
data16
sub
mov
sar
rorl
pop
inc
cmp
sub
dec
mov
insl
outsl
add
or
test
or
and
add
cmp
adc
neg
adc
sbb
mov
and
in
sti
sbb
xchg
or
sub
pop
faddl
lea
sbb
jnp
and
push
movsb
sub
inc
cmp
mov
xchg
das
fcoml
pop
loop
mov
loope
sbb
cmp
inc
inc
loop
testl
add
sti
outsl
add
pop
leave
sbb
fcomp
vmovhlps
push
inc
mov
mov
xor
popf
cmp
jne
mov
jnp
dec
pop
cmp
je
push
or
mov
push
ds
sar
sbb
adc
sbb
in
sahf
mov
mov
adc
mov
pop
add
mov
and
push
sub
rcrl
mov
dec
push
add
adc
les
cwtl
leave
cli
adc
jb
sbb
add
or
fiaddl
popa
sub
sti
lea
sub
cs
es
aad
dec
xchg
sbb
xor
les
sbb
and
dec
dec
fstps
sbb
clc
or
or
mov
dec
pushf
call
add
add
xchg
sub
in
cmp
push
push
sub
js
pop
mov
inc
in
aaa
jl
pop
mov
jg
adc
fs
rol
push
popa
mov
and
test
movb
add
dec
lcall
sahf
gs
sbb
push
test
lds
add
and
cmp
sbb
pusha
push
cmp
je
scas
ds
mov
outsb
je
mov
outsl
add
or
ljmp
icebp
imul
jecxz
adc
inc
or
mov
inc
inc
popa
scas
xor
pop
insl
pop
pusha
pop
push
iret
push
pop
pop
or
aaa
loopne
dec
cmp
pop
jle
fisttpl
shl
mov
push
xor
mov
mov
leave
pop
add
inc
or
or
inc
cmp
sbb
jl
ret
jne
pop
dec
out
arpl
sub
and
aas
add
or
push
push
jmp
or
sub
pushf
test
bound
mov
inc
addb
xchg
cmp
inc
inc
or
outsl
into
adc
sub
adc
push
insb
notb
and
xorb
sbb
sbb
inc
inc
xor
loope
ds
push
fistl
call
xchg
fldl
jae
and
or
cmp
add
push
aas
xchg
fidivs
xor
push
inc
sub
dec
je
dec
jne
cmp
rorb
mov
or
push
adc
adc
push
jb
scas
adc
pop
aam
or
sti
mov
dec
xor
jp
push
loopne
loop
push
push
mov
inc
insb
xchg
sbb
sbb
xor
aaa
mov
cmp
fstpl
push
sbb
xor
pushf
xchg
lock
insb
mov
add
sbb
loop
push
movsb
dec
and
enter
je
jl
inc
xor
add
out
jmp
inc
cmp
pop
push
stc
sarb
xor
pop
cli
mov
jns
aad
cmp
ja
pushf
sub
stos
push
mov
mov
mov
sub
sbb
mov
jne
shll
jp
dec
mov
outsb
jbe
push
mov
call
adc
pop
ret
inc
sub
sub
mov
adc
out
push
lret
dec
push
shlb
or
pop
and
cmp
movsb
xchg
test
adc
ljmp
xorb
sbb
xchg
cwtl
hlt
or
in
jbe
lock
xor
mov
aas
int3
es
mov
adc
test
lds
pop
sbb
sub
add
addl
add
rclb
fwait
lods
lock
or
imul
or
mov
insb
lods
ret
or
jno
jne
mov
lods
hlt
shll
lock
sub
and
add
and
pop
push
in
jne
xor
addr16
cmpl
mov
push
add
or
and
clc
mov
mov
fcoms
ret
mov
mov
inc
adc
in
inc
out
test
mov
or
sub
sbb
cmp
lretw
insl
dec
aas
sub
icebp
adc
sub
xlat
jo
jo
mov
ss
or
mov
ss
push
mov
jmp
stc
invd
and
mov
mov
ret
add
jo
inc
je
aad
mull
int
push
fcmovb
jmp
push
adc
adc
push
sub
mov
out
inc
push
mov
and
or
jmp
rclb
es
add
adc
pop
pop
dec
adc
es
ja
inc
pop
mov
push
jmp
ret
test
add
and
push
pusha
stos
outsb
push
lsl
and
andb
sub
mov
imul
push
sbbb
mov
push
mov
cmp
jne
cmp
jne
dec
adc
mov
jle
dec
adc
stc
lea
xor
rorb
cmp
or
fimuls
fnstenv
mov
pop
sbb
test
mov
or
leave
cmp
adc
sbb
adc
mov
out
jle
xchg
sbb
mov
clc
mov
pop
shlb
and
and
jmp
and
jl
lidtl
test
dec
inc
inc
arpl
pop
or
mov
push
mov
lods
lea
loop
add
mov
mov
loope
xchg
loop
inc
shl
pusha
fadds
es
sbb
shlb
push
mov
mov
lahf
jle
aas
mov
pop
sahf
jg
cmp
pop
mov
mov
push
jmp
scas
mov
mov
clc
clc
inc
push
ljmp
push
into
stos
xor
and
xor
outsl
xchg
inc
mov
add
cli
mov
mov
and
inc
adc
imul
lods
notb
test
sbb
mov
imul
mov
pushf
push
jne
dec
sub
xchg
mov
loopne
mov
jo
mov
sbb
sti
sub
mov
jae
ds
cmp
es
jg
in
mov
inc
add
adc
repz
inc
pop
adcb
or
mov
push
rclb
ds
push
je
and
in
fsubrs
movsl
ret
adc
mov
dec
xchg
lods
jnp
cmpsb
enter
mov
fwait
out
mov
rorb
push
cmpb
pop
shr
pop
jle
iret
mov
mov
dec
test
mov
mov
jne
pop
xchg
stos
inc
outsb
sbb
mov
inc
xchg
push
push
clc
or
movb
mov
cld
inc
add
ffreep
popa
pop
add
movl
mov
shl
mov
pop
dec
and
lock
iret
sub
fiadds
mov
add
mov
mov
fldcw
mov
stos
and
outsl
loopne
and
aam
jl
push
repz
or
cmp
adc
or
cmp
aam
or
dec
je
lea
push
dec
xchg
arpl
push
les
lcall
jle
aaa
inc
or
jno
and
mov
and
ja
or
or
or
mov
or
enter
orb
mov
and
push
negl
mov
inc
ja
je
pusha
and
dec
push
sbb
jmp
push
jg
mov
popf
adc
jmp
orb
pop
shll
xchg
ja
sahf
sub
imul
outsb
sbb
mov
cld
mov
push
clc
adc
fsubs
cwtl
pop
ljmp
data16
cmp
mov
fimuls
jmp
push
push
mov
sete
loop
mov
jmp
mov
jl
aaa
fsts
movsl
cmp
pop
outsl
push
mov
ror
jns
fisubrs
loope
push
push
add
or
pop
pop
orl
sub
repz
fcoms
je
push
or
xchg
les
xchg
pop
sar
jl
push
cmp
testb
test
add
jmp
test
pusha
push
lahf
push
mov
jnp
push
add
shr
adc
inc
or
subl
adcl
mov
mov
mov
mov
push
and
test
push
sub
addr16
jle
push
push
and
mov
add
sbb
pop
xor
mov
sbbl
scas
mov
sbb
sbb
aaa
xchg
adc
mov
push
or
sbb
push
out
xor
add
push
rorl
daa
xor
loope
pop
adc
and
movsb
call
inc
adc
mov
aad
mov
fsubr
add
add
hlt
add
mov
mov
inc
and
dec
mov
xchg
test
add
jl
or
pop
jno
push
xchg
xor
pop
xor
pop
test
mov
mov
call
xchg
sub
shr
dec
inc
and
and
push
aam
outsb
sbb
pop
push
lods
inc
arpl
xor
je
add
sub
sub
test
pop
sbb
xchg
push
mov
inc
ret
cmp
adc
mov
sarb
in
add
xchg
push
xlat
jo
dec
pop
outsl
in
mov
int3
ss
loopne
sub
mov
inc
je
inc
adc
push
test
ret
add
insl
out
xchg
sub
adc
dec
jne
pop
sub
or
sahf
fimull
lret
push
lea
bound
imul
add
mov
jmp
add
and
push
mov
inc
dec
fcomps
scas
or
mov
pop
mov
aaa
xorb
std
std
add
push
or
cmp
shll
inc
aam
push
ret
sbb
std
ret
add
mov
mov
and
jmp
pusha
lret
xchg
push
ljmp
mov
or
repz
bound
and
fstps
aaa
and
jg
sub
pop
push
pop
xorl
dec
sbb
jo
and
test
sbb
imul
push
sub
push
sub
daa
push
sbb
add
fnstsw
adc
pop
mov
mov
stos
push
push
hlt
outsl
and
lods
pushf
push
movb
push
push
push
mov
cmp
mov
imul
or
adc
fsts
jne
push
leave
test
pop
mov
insb
cmc
jbe
das
mov
arpl
dec
lods
loopne
cmpsb
cmpb
fsubr
mov
push
mov
xchg
mov
mov
test
push
inc
jo
push
add
std
pop
push
and
inc
mov
mov
sbb
jl
adc
xchg
adc
xchg
and
or
add
jnp
and
repnz
cmp
pop
gs
xor
mov
jbe
or
xor
jle
inc
test
je
test
add
cmp
mov
int
sub
adc
lea
mov
mov
lods
pop
xchg
je
dec
mov
cs
and
adc
add
ss
jne
sbb
jl
push
inc
mov
loop
sub
mov
add
sbb
sub
cmp
mov
add
push
lahf
cmp
mov
stc
test
mov
jg
dec
sti
cmp
jle
mov
add
movsb
mov
or
hlt
lea
push
lea
enter
movsl
enter
mov
inc
loop
mov
add
cmp
jne
push
push
cld
je
loop
or
xchg
and
jle
adc
cli
mov
loopne
in
nop
into
push
imul
sbb
inc
nop
addl
inc
sub
add
pop
pop
loopne
adc
inc
mov
push
inc
je
mov
jb
push
push
gs
add
pop
outsb
shll
je
dec
scas
mov
adc
cs
fdivr
jbe
repnz
jbe
inc
mov
stos
mov
dec
sub
mov
add
cmp
add
cmc
imul
or
sbb
adc
add
or
subl
adc
pop
call
and
jecxz
mov
or
jbe
inc
int3
adc
push
sbb
push
mov
mov
or
scas
cmp
shlb
pop
sub
fdiv
xchg
push
jnp
and
leave
shrl
and
cli
jmp
mov
mov
push
mov
mov
leave
ret
push
rcrl
rcll
pop
daa
andnps
mov
or
xchg
add
push
mov
or
lock
aas
ret
jne
es
jmp
sub
jne
push
and
lea
loopne
or
sbb
sbb
xchg
subb
cs
pop
cld
lea
push
adc
ds
inc
sbb
imul
adc
push
call
add
inc
sbb
sbb
sbb
ret
cltd
leave
sub
push
and
push
pushf
roll
ret
popf
pop
adc
or
sub
push
xor
loope
jmp
adc
pop
sub
adc
add
fnstsw
adc
pop
add
jg
fisubs
mov
or
or
sub
sbb
pop
add
dec
inc
cmp
jl
xchg
add
pop
jp,pt
push
jg
add
and
inc
sbb
aam
femms
or
jae
cli
fcoms
decl
push
push
scas
jns
and
mov
xor
push
and
addr16
enter
xchg
add
pop
and
jb
pop
scas
daa
dec
mov
and
mov
cmpsl
inc
xor
mov
inc
inc
divb
jle
leave
adc
dec
mov
push
dec
unpcklps
push
mov
lods
fistl
mov
rorl
cmpsl
es
out
out
adc
push
or
mov
xchg
push
sarb
lret
subb
hlt
mov
das
mov
je
push
mov
adc
mov
xor
and
pop
and
push
mov
xor
push
lret
add
arpl
jno
les
xlat
clc
push
mov
mov
shr
add
pop
jo
sbb
jg
ljmp
xor
mov
ffreep
push
add
dec
or
inc
int
mov
adc
je
stos
pop
insl
pushl
jne
mov
jmp
or
mov
and
in
cmp
lret
or
push
or
pushl
stc
push
xchg
stos
jb
fstl
roll
insb
adc
in
outsb
aam
mov
in
add
data16
push
cltd
push
pop
dec
int3
and
push
fwait
add
mov
loop
into
mov
sub
and
push
push
add
movsb
or
add
bound
lock
sqrtps
mov
jl
pop
jne
xchg
loopne
push
inc
pop
and
mov
rorl
das
dec
dec
mov
cmpsb
movl
outsl
jb
add
inc
or
pushf
push
cmp
loopne
lods
addb
mov
sub
and
pop
jne
fwait
push
xor
or
pusha
call
mov
int3
sbb
iret
or
inc
sbb
add
sbb
xor
sub
push
dec
lcall
mov
fdivrs
pop
shrb
lods
fisubs
pop
and
push
xchg
ret
mov
push
inc
jle
add
sarl
fs
push
push
mov
add
mov
push
out
lods
sub
rcrl
in
sbbl
test
adc
xor
mov
xchg
jg
mov
test
inc
sub
pop
and
jmp
test
mov
sbb
lret
lods
je
mov
pop
jnp
daa
push
test
repnz
out
jl
leave
cmp
jl
and
jg
push
mov
fwait
xchg
popa
rcr
andb
dec
popa
rclb
and
sbb
mov
jl
adc
test
adc
test
cmp
es
jo
shll
mov
mov
pop
out
jge
push
sub
mov
std
sbb
push
add
inc
in
adc
sbb
pop
add
push
dec
mov
xor
fwait
inc
mov
pop
xchg
fbstp
filds
inc
pop
adc
sbb
mov
xor
mov
scas
mov
cmp
mov
push
push
inc
je
pushf
dec
xchg
push
inc
lcall
cmc
push
jle
fidivrs
push
push
shrb
filds
pop
enter
dec
push
addb
push
dec
jae
movq
sbb
data16
sbb
push
fisttpll
adc
pusha
dec
xchg
jns
jmp
pusha
add
mov
cmp
pop
dec
or
xchg
xor
mov
mov
lea
mov
cmp
je
incl
aas
cmp
je
cmp
je
cmp
ja
pop
je
cmp
je
or
daa
cmp
je
cmp
je
xchg
loope
mov
mov
or
cld
cmpsb
popa
jecxz
inc
inc
cmp
jl
add
js
mov
fildl
sbb
pop
jmp
fadd
mov
dec
mov
icebp
pop
pop
sub
addb
es
pop
mov
out
lea
and
psubusw
adc
aad
lods
stos
add
jmp
loopne
xor
add
pusha
in
ja
je
pop
out
iret
mov
or
inc
cmp
mov
add
dec
pop
and
sbb
and
mov
incl
dec
je
xchg
sti
mov
jp
jno
andl
pop
andb
add
fbld
les
jae
adc
loope
push
mov
roll
or
int
add
sub
jl
cmp
mov
js
cmp
lcall
sbb
adc
arpl
inc
push
mov
mov
inc
enter
pop
push
mov
repz
scas
addl
sbbb
movsl
add
fs
add
fs
push
xor
push
ret
cmp
jne
fcompl
les
pushf
fists
add
addr16
inc
movsl
push
xlat
inc
inc
mov
inc
fildl
cmp
or
xorl
and
mov
clc
or
add
xor
mov
dec
insb
pop
add
adc
push
xlat
add
cmp
cmpsb
jecxz
sbb
dec
mov
inc
mov
mov
lods
and
jmp
cld
push
les
dec
incl
add
jne
jno
ficoml
push
push
inc
mov
mov
cmp
pushf
mov
push
fadds
mov
std
add
arpl
inc
data16
sbb
fstpt
pop
adc
inc
loop
shlb
cmpsb
pop
add
sar
push
shlb
idivb
xor
cmp
pop
cmp
inc
ds
add
les
and
sbb
jb
jge
mov
pusha
add
and
or
add
push
mov
pop
add
or
sub
lods
in
sbb
inc
xor
jno
add
pop
or
popf
adc
and
mov
jne
sub
sub
shll
jge
lret
lcall
sub
cs
adc
dec
sbb
jbe
adc
or
mov
cmp
push
mov
mov
fmuls
inc
loopne
lock
adc
dec
pop
leave
inc
loopne
mov
out
in
pusha
fldt
push
add
or
and
fldenv
sbb
or
jb
jp
jmp
pop
stc
in
pusha
dec
sbb
add
xor
inc
or
inc
dec
sub
adc
test
pop
and
xor
adc
and
xchg
adc
and
inc
aaa
adc
jne
fld
out
push
nop
lds
jb
sahf
mov
add
sub
pop
cli
add
ror
andl
lds
push
cmpsb
sbb
or
ret
or
cmp
xor
adc
or
push
add
inc
loopne
rorb
inc
push
mov
jne
and
adc
mov
je
shlb
push
in
js
inc
test
adc
xor
mov
add
ds
and
push
int3
jbe
insl
rcl
scas
pusha
sbb
les
sbb
xchg
rcr
or
iret
sub
add
xor
dec
iret
arpl
testb
jae
pop
orl
outsl
mov
and
lods
ret
adc
jg
push
xor
xchg
xor
lock
jne
mov
mov
gs
adc
mov
sub
fsubrs
inc
mov
in
push
push
icebp
and
push
out
pop
inc
imul
sbb
cmpb
aas
fildll
inc
in
adc
or
mov
sub
xor
cld
push
mov
xchg
add
jle
outsb
push
cmp
lcall
addr16
shl
test
or
add
push
popa
call
xor
and
rcll
mov
insl
push
add
inc
cmpsl
push
or
mov
push
scas
adc
lock
gs
stos
push
sub
scas
mov
xor
or
mov
orb
daa
pop
push
testb
cmp
sbb
xor
cltd
inc
hlt
push
les
and
into
add
inc
je
ss
mov
inc
daa
sbb
call
or
scas
xorl
sbb
dec
add
pop
push
pop
sbbb
sub
mov
fs
xchg
jmp
adc
push
and
sub
adc
push
fidivrl
add
xor
add
subb
add
lods
inc
inc
push
push
push
sbbb
mov
js
daa
push
adc
sti
xor
in
adc
inc
jo
clc
sbb
shl
xor
jnp
jl
push
adc
xor
push
rorb
mov
adc
adc
imul
xlat
inc
xchg
in
push
push
invd
adc
mov
pop
or
outsb
xchg
into
jo
jns
push
dec
sub
adc
push
mov
lahf
inc
mov
or
pop
mov
or
sti
call
lods
push
sbb
xor
adc
pop
pop
pop
pop
adc
aam
ja
xchg
nop
and
mov
push
loopne
insb
notb
or
mov
mov
push
adc
xor
add
jb
pop
jns
sub
testb
inc
popf
cmc
je
mov
xor
roll
pop
xchg
sbb
sbb
add
fisttpll
cmp
or
in
add
inc
and
sbb
xorb
mov
sub
daa
int3
inc
mov
cmc
push
lock
dec
cmp
and
pop
adc
mov
cld
cmp
adc
xor
shll
or
sahf
roll
push
push
scas
nop
dec
into
int3
fsubl
popa
aaa
and
fsubrl
xor
lods
iret
out
aam
cwtl
push
xor
or
fwait
mov
and
sub
cmp
xor
jl
and
icebp
xlat
inc
jmp
adc
push
xor
sbb
or
sbb
add
nop
add
jne
nop
gs
outsl
add
adc
aaa
nop
add
sbb
or
or
sub
das
sbbb
push
std
cmp
sti
scas
cmc
xchg
cmp
push
sub
push
push
ds
or
aas
nop
inc
xchg
test
js
push
leave
push
pop
js
test
or
jle
add
ret
add
call
cli
push
pop
movb
push
and
in
jno
testb
xor
inc
sarl
ror
popa
outsb
adc
cmp
inc
or
xchg
test
int
sub
insb
sbb
mov
and
orl
dec
fs
adc
jne
add
or
xchg
fwait
pusha
fcmove
and
cmp
dec
dec
pop
adc
daa
mov
or
push
push
push
jp
dec
or
lock
mov
pop
testl
faddl
jmp
or
sub
aas
push
cmc
and
stos
push
sub
add
test
sbb
xchg
lcall
xor
xchg
jle
rolb
subb
push
sbb
cmp
push
add
mov
movsb
in
add
inc
xchg
add
xchg
jle
xchg
cmp
js
or
data16
sub
mov
mov
div
shrl
mov
shll
rclb
ljmp
push
rep
pop
push
add
push
insb
mov
nop
sub
mov
movsb
imul
cmp
je
push
push
xlat
push
sbb
lods
inc
mov
inc
ss
xor
es
loope
sbb
jnp
or
test
pop
test
inc
pop
jg
push
inc
inc
js
into
ds
shrb
cmp
pop
add
inc
mov
push
out
cs
or
jb
xchg
fmuls
mov
inc
push
nop
mov
add
divb
in
sbb
js
insb
ret
js
add
test
or
add
cli
int
mov
es
jnp
pop
dec
sub
bound
lea
pandn
adc
or
add
loope
sbb
sbb
cpuid
scas
cmp
sub
adc
adc
mov
jne
arpl
add
jne
test
adc
lcall
cmp
add
mov
ja
or
push
arpl
pop
outsb
jnp
add
push
lcall
test
shr
push
andb
dec
movsb
mov
xchg
sub
inc
pop
push
test
fimuls
sub
and
sbb
daa
jmp
push
icebp
pop
in
cmp
mov
push
aad
and
adc
adc
inc
or
sti
sub
das
inc
jae
addl
std
adc
xlat
in
pop
sbb
mov
mov
aad
cmp
gs
into
or
scas
cs
stc
rolb
addl
fisubrs
and
fnsave
and
or
cld
loop
fdivrs
sbb
data16
out
leave
lahf
scas
mov
fsts
mov
mov
adcb
or
lods
pop
mov
leave
jge
xor
push
push
add
xor
aad
lods
mov
sahf
rcll
dec
icebp
adc
mull
sbb
mov
adc
jne
stc
jg
add
pop
int
jmp
inc
mov
mov
test
pop
xor
fisttps
mov
mov
sub
inc
inc
add
test
xlat
push
fmuls
sub
push
hlt
testl
enter
pop
sbb
lock
fisttpl
out
std
shlb
mov
cmpl
test
adc
mov
xlat
sbb
adc
xchg
add
push
xlat
sbb
adc
inc
inc
xchg
and
sbb
out
mov
push
cld
pop
push
and
aas
test
mov
add
enter
xchg
and
fnstsw
mov
aaa
push
push
popa
jmp
dec
add
add
fs
jmp
je
dec
scas
enter
inc
mov
push
mov
add
daa
unpckhps
mov
mov
jnp
mov
and
or
mov
inc
and
mov
popl
cmp
push
or
inc
push
push
push
mov
das
fisubs
sub
push
hlt
scas
adcb
push
push
js
enter
push
setno
jl
icebp
cmp
dec
inc
and
adc
push
insl
add
add
mov
scas
xchg
sbb
inc
pusha
in
imulb
mov
into
repz
sub
push
cmp
push
lock
push
stos
add
pop
sub
int
cmp
pushf
mov
mov
mov
pop
push
ret
sbbb
mov
adc
addr16
and
jno
dec
mov
fcmovb
leave
fidivrs
jb
dec
mov
adc
adc
jae
xor
in
icebp
push
shrb
icebp
dec
push
add
lcall
push
sti
add
shlb
mov
xchg
push
mov
jb
adc
pop
mov
aad
push
arpl
or
lock
notb
inc
or
add
dec
lcall
mov
mov
loop
jge
into
cmp
ja
sub
icebp
fcmove
add
push
sbb
cld
iret
test
pop
xor
jmp
inc
sbb
es
push
sub
push
mov
clc
pop
add
push
xor
adc
inc
mov
push
jl
sbb
xchg
jmp
jge
sub
test
shll
push
or
xor
push
xchg
push
adc
push
pushf
push
push
mull
mov
xor
or
push
or
adc
xor
lock
ret
outsl
call
xchg
push
dec
add
sbb
xchg
mov
fsts
mov
pop
leave
inc
or
adc
add
jb
or
daa
dec
or
cmp
dec
inc
aad
in
xchg
push
cmp
leave
and
dec
push
jne
push
add
push
cld
or
lock
rol
add
cs
movb
flds
pop
or
inc
mov
inc
rorl
jo
xor
cmpl
add
daa
adc
imull
cmp
mov
add
insl
xor
adcl
subb
call
cmp
mov
movb
nop
push
out
sub
popa
mov
mov
xor
pusha
sarb
cltd
inc
adc
stos
adc
add
push
pop
fsts
jo
mov
mov
fimull
mov
xchg
outsb
cs
or
jno
cmp
mov
add
sbb
pop
daa
jne
pop
mov
pop
imul
clc
dec
jo
or
fs
mov
or
push
add
cli
testb
jne
inc
xchg
jne
add
jmp
xor
inc
adc
das
adc
xor
pop
xchg
dec
push
push
push
cmp
adc
roll
je
sub
lahf
lea
mov
cmp
sbb
faddl
loopne
inc
stos
xrelease
mov
test
sub
ss
je
sbbb
push
xor
adc
mov
mov
lret
lret
dec
add
sub
add
mov
pop
push
pop
sub
push
jno
add
lods
sub
mov
js
pop
jnp
add
or
sub
stos
mov
or
in
jmp
jne
test
stos
jp
lret
push
adc
lret
add
xlat
sbb
sub
out
cmp
es
pusha
in
cs
fldcw
jno
adc
mov
loopne
push
outsb
divb
stos
push
sub
push
or
xor
jle
sub
or
dec
push
mov
fcoms
adc
data16
out
xchg
sub
aad
je
je
adc
je
loopne
rolw
cmpsl
and
mov
mov
push
je
adc
mov
test
mov
movsb
push
cmp
rcll
push
rcr
mov
cmpsb
call
adc
fisttpll
pop
jmp
and
inc
sbb
add
cmp
clc
fwait
add
or
dec
lock
add
xor
cmp
cmpl
xchg
mov
xor
xor
popw
adc
xchg
adc
and
xlat
sbb
dec
add
xchg
push
adc
push
adc
popf
insl
ret
clc
lds
xor
mov
sub
xchg
mov
rcrl
push
mov
inc
stos
test
cmp
pop
add
sub
sub
dec
dec
cmp
and
mov
cmp
inc
in
inc
test
jg
xchg
push
outsb
lock
data16
cmpsb
jne
cmp
push
push
mov
shlb
outsl
add
mov
push
mov
std
push
jmp
jmp
push
insb
les
sub
mov
dec
and
call
jb
lds
xchg
push
or
push
cmp
add
sahf
and
lods
jle
xor
out
add
in
sub
nop
test
cmp
xor
test
pop
fstpt
lcall
xchg
jge
mov
pop
cmp
or
sub
push
sub
push
gs
scas
push
sbb
cltd
in
repnz
loopne
stos
gs
pusha
sub
jb
orl
and
fsts
pop
jl
and
sarb
push
dec
call
push
add
enter
lea
adc
push
ret
in
push
sbb
ror
aas
xor
push
orb
loopne
cld
inc
push
adc
jae
jb
jge
enter
sbb
add
addl
sub
or
dec
in
inc
popa
mov
test
cmp
xor
cmp
push
out
pop
mov
int3
xor
cmp
rorl
xor
ss
sub
sbb
or
ja
out
push
ret
dec
mov
pusha
or
neg
mov
mov
or
and
jns,pt
inc
scas
js
xchg
dec
push
mov
dec
leave
jne
xchg
dec
pushf
add
adc
mov
and
push
jmp
push
psubusw
ret
clc
dec
cwtl
and
sbb
stos
xchg
dec
mov
cwtl
out
sbb
rorb
adc
add
lock
pop
mov
dec
or
nop
xchg
adc
cmp
mov
leave
je
test
in
sub
xchg
nop
jne
xchg
stos
dec
and
mov
xchg
gs
inc
or
xchg
mov
xchg
push
jb
push
pop
pop
add
xor
mov
mov
or
mov
sbb
pop
fidivrl
out
and
adc
std
push
sar
enter
mov
xchg
mov
fildl
mov
mov
enter
jp
or
dec
mov
xor
pop
movb
pop
test
sti
push
mov
or
and
test
ret
inc
push
jl
add
lods
mov
ds
dec
or
add
xor
and
hlt
inc
in
sub
mov
fsubr
rclb
daa
sub
test
fcomps
xchg
xor
int3
adc
pop
mov
mov
mov
xchg
xchg
mov
dec
lods
push
add
inc
pushf
jae
xor
adcb
xchg
js
int
sbb
add
sbb
insb
orb
xchg
or
sbb
imul
push
adc
andb
or
add
je
fisubs
jnp
or
push
mov
imul
bound
inc
mov
and
sub
or
add
jle
jne
pop
aam
ret
mov
inc
xor
mov
in
jbe
loop
add
iretw
sbb
mov
pop
stos
pop
pop
inc
add
jae
dec
adc
add
sti
dec
push
rorb
shrb
cld
sti
push
push
hlt
push
std
inc
rorl
push
sub
or
pusha
add
add
mov
inc
mov
jmp
sub
orl
lea
xchg
adc
enter
sub
das
jnp
pushf
or
dec
dec
add
jmp
aad
xchg
aaa
push
or
adc
sub
rclb
fisubrl
ss
mov
pop
cmp
out
cmp
cwtl
bnd
mov
je
lea
push
lea
jnp
call
and
mov
mov
sbb
gs
repnz
push
call
pop
push
je
inc
add
clc
dec
xchg
clc
jb
mov
xor
pusha
ret
data16
dec
sti
out
pop
aam
sub
push
das
pop
and
shl
test
lea
lods
idivb
fists
pusha
adc
nop
xchg
push
inc
jbe
mov
inc
in
pop
add
mov
inc
shr
inc
inc
cmp
out
std
stos
add
sub
test
cld
push
mov
inc
mov
std
mov
stos
push
sahf
push
lds
ljmp
fmull
fistpl
adc
mov
adc
or
push
and
adc
inc
shrb
mov
call
and
adc
inc
pop
fs
mov
sub
add
xchg
mov
clc
add
sbb
lahf
inc
xchg
push
push
mov
add
adc
sbbb
fisubl
lret
adc
pop
stos
mov
jg
inc
or
mov
add
lods
addb
data16
shrb
add
sbb
punpckhbw
xchg
pop
push
push
mov
push
fnstenv
xchg
orb
je
adc
or
pop
add
fldl
add
rorb
xor
mov
inc
xchg
sbb
insb
je
pop
inc
push
mov
or
aam
xorb
mov
jle
sbb
daa
ret
or
or
cmpsl
or
and
sbb
adc
fs
add
outsb
daa
cmpsl
fs
sbb
sub
mov
pop
and
inc
andl
mov
and
and
inc
sub
inc
jb
inc
sub
aas
add
jmp
mov
repz
lret
ret
add
jo
cmp
shlb
mov
and
shlb
rcll
sbb
pop
xor
mov
data16
sbb
xchg
adc
mov
lock
ds
push
pcmpgtd
gs
mov
pop
dec
xchg
jne
mov
jl
and
inc
and
xor
push
sti
sbb
shll
negl
je
or
jmp
mov
nop
es
pop
sub
test
adc
call
and
and
mov
mov
add
mov
fstpl
push
mov
adc
cmp
lock
add
push
push
int
gs
jbe
adc
imul
xor
cmp
pushf
sub
fbld
rclb
cmp
subb
sub
sbb
mov
jmp
inc
cmp
add
jno
pusha
bound
or
and
xor
nop
lods
push
aam
repnz
aam
xor
sbb
insb
test
fiaddl
add
imul
test
das
xorl
mov
lds
sub
lock
lea
sub
sub
lret
popf
push
push
rcrl
add
inc
push
scas
jne
divb
cwtd
pop
or
in
scas
and
int3
push
in
sbb
add
add
push
pop
cmpsl
adc
dec
add
or
fsubl
cmp
jne
repz
cmp
xor
xor
mov
fisubs
push
push
mov
sub
idivl
lods
stos
and
sbb
js
rolb
mov
roll
xorb
mov
push
sbb
dec
sti
or
lods
ret
loopne
nop
pusha
ljmp
mov
push
mov
sub
mov
in
add
pop
and
cmpsb
je
leave
mov
jmp
sbb
sbb
xorl
xlat
lcall
dec
cli
jmp
shll
loopne
mov
lods
inc
inc
xlat
sbbl
outsl
xlat
push
sub
lea
rcr
jnp
inc
inc
jne
lret
insl
push
mov
cmp
pop
and
pop
inc
sti
add
and
loop
xor
mov
adc
dec
push
xor
dec
cmp
rcl
lds
xor
inc
mov
push
les
in
cltd
and
pop
loopne
push
jo
mov
pop
pusha
js
mov
add
leave
insb
sahf
test
call
inc
push
lock
and
sub
cmp
mov
mov
mov
cld
arpl
fcoml
inc
cld
mov
jae
inc
pop
pop
xlat
sbb
xor
loopne
dec
cmp
negl
hlt
pushf
jp
pop
mov
pop
outsb
and
add
mov
adc
icebp
add
inc
inc
out
mov
jg
test
je
cmpw
adc
std
xor
adc
jmp
push
push
ja
adc
pop
and
push
sub
xchg
in
fwait
cld
jno
pop
inc
je
je
inc
jns
and
and
filds
sbb
lods
mov
add
dec
test
fsubl
adc
adc
sbb
adc
fs
jge
adc
xor
pop
adc
sti
test
push
mov
inc
pop
mov
or
xor
sbb
mov
les
dec
cmp
jmp
and
imul
pusha
lods
loop
inc
dec
sarl
pop
pop
mov
je
mov
inc
pusha
inc
inc
sbb
pushf
call
cmp
push
ret
and
add
lcall
pusha
call
fidivrs
add
add
or
adc
je
or
pop
add
sbb
and
adc
pop
jne
and
inc
push
cmpsl
sbb
or
cmp
push
xor
ret
es
push
jo
popf
add
xchg
jns
js
in
adc
xchg
enter
jo
test
cmpsb
addr16
icebp
and
ljmp
into
mov
mov
sbb
adc
sub
xlat
mov
dec
popf
pop
push
push
mov
ret
and
add
push
jmp
test
sbb
dec
pusha
cmp
add
popa
lret
test
sbb
hlt
push
je
sbb
inc
jne
insb
push
add
xchg
xchg
int
cmovbe
mov
xor
out
or
mov
sbb
lods
mov
xchg
jge
sahf
fimull
add
es
mov
fsts
insb
test
addr16
or
xor
and
mov
mov
or
xor
inc
pusha
mov
add
fldenv
call
and
pop
pop
xor
ret
pop
jmp
mov
inc
clc
jae
push
cli
mov
je
pop
mov
adc
fildll
push
push
shll
or
pop
fucomi
add
in
xor
mov
cld
stos
push
dec
inc
jo
xor
and
xor
xchg
pop
sarl
push
adc
pop
sbb
jno,pt
add
and
push
mov
push
gs
call
mov
push
add
mov
addr16
add
push
dec
add
push
adc
push
aam
inc
add
inc
lret
aam
loope
push
mov
push
dec
xor
inc
mov
inc
test
and
sbb
push
test
js
push
and
adc
xor
push
add
add
add
insb
arpl
adc
inc
jae
add
jle
movsb
cld
mov
inc
in
pushf
cmp
out
adc
sbb
sub
or
dec
incl
sub
add
push
mov
pop
cmp
neg
or
shrl
mov
add
add
or
push
movsl
sub
mov
ss
testb
stos
add
test
clc
add
xchg
pop
ljmp
push
push
jne
pop
dec
inc
rcll
add
leave
sbb
mov
cmp
lret
adc
shrb
add
adc
es
cltd
gs
xlat
xor
jb
adc
push
mov
add
and
insl
sub
jmp
jmp
test
mov
inc
or
inc
add
jb
jb
je
fs
movq
cmovb
mov
adc
push
test
jge
add
rorb
inc
cmc
sbb
rcrb
inc
mov
push
xor
stc
and
ja
push
xor
cmp
into
imul
clc
sub
lods
or
or
lods
adc
cmp
in
jbe
mov
add
pop
mov
scas
jnp
je
jmp
subb
shlb
pop
jae
push
scas
dec
addl
xor
mov
push
pop
xchg
adc
mov
test
sub
sub
add
push
aaa
or
push
outsl
xchg
bound
ret
call
mov
inc
test
or
ret
pop
jo
iret
std
and
pushf
and
sbbb
loopne
add
stos
pusha
pop
mov
pusha
cmc
pop
fsubl
xchg
fiaddl
add
push
lret
or
push
fldenv
mov
mov
fs
or
fucomp
xor
sub
sbb
push
jns
or
push
inc
add
xor
sbb
rol
daa
push
push
nop
jmp
lcall
call
ret
sbb
or
mov
and
push
sub
ljmp
pop
xor
add
inc
gs
movsb
jl,pt
xchg
shl
add
jne
adc
mov
and
test
mov
jmp
test
imul
or
push
jno
lods
add
xchg
adc
dec
sbb
jmp
std
clc
test
adc
inc
ret
and
lods
testb
inc
lcall
inc
pop
xor
shrl
push
dec
flds
mov
add
ljmp
or
sbb
lahf
mov
add
xor
das
fnstcw
fistpll
add
filds
int
add
adc
data16
outsb
shll
and
or
ds
roll
lods
adc
mov
out
imul
dec
xor
and
mov
push
iret
xchg
fs
jnp
or
or
in
popa
adcl
xchg
push
pop
jb
dec
rcll
les
testl
mov
mov
add
jp
daa
adc
sbb
or
mov
js
add
pop
lock
shll
sub
jno
inc
mov
and
loop
inc
push
insb
adc
push
adc
sbb
mov
cmp
inc
fidivs
mov
mov
cmp
add
sti
inc
mov
sbb
mov
jl
jg
xor
repz
jne
cmc
ret
sbbb
in
jne
xchg
fsubs
inc
and
sub
adcb
aaa
xchg
mov
rcrb
movsl
sbb
jb
or
pop
push
insb
dec
push
sbb
push
jno
adc
je
test
int3
inc
cmp
jg
imul
call
stos
or
test
cmp
pop
or
add
adc
push
mov
xlat
inc
mov
mov
push
das
and
out
inc
push
addr16
mov
jp
adc
jo
roll
sbb
jne
xlat
les
sub
push
hlt
mov
inc
clc
dec
sub
cmpl
or
dec
mov
popa
inc
inc
xor
jbe
push
fmull
sub
mov
test
xchg
push
cmp
fs
roll
shll
jne
mov
mov
pop
jbe
sub
add
clc
adc
inc
inc
cmp
les
push
pop
flds
je
movsb
dec
add
and
test
sbb
js
daa
test
and
inc
cmp
sbb
adc
xchg
test
lret
and
inc
push
push
lods
pop
or
in
add
pusha
jb
mov
jne
fs
ss
notl
iret
dec
jp
lret
xchg
pop
add
inc
push
loope
cmp
sub
jmp
mov
add
loop
fs
les
adc
jmp
fst
test
mov
add
out
orb
inc
out
icebp
and
pop
mov
add
and
xor
mov
adc
ret
sub
inc
sbb
add
xchg
jne
pop
push
mov
xorl
jge
lcall
add
orb
mov
scas
sub
clc
jnp
mov
cltd
int
xchg
rolb
pop
fcomp
or
mov
test
cmp
jne
adc
out
mov
add
and
mov
add
add
nop
test
test
movsl
add
test
repz
mov
push
scas
sub
gs
mov
pop
jecxz
mov
push
inc
dec
mov
cmp
jne
mov
add
test
sete
scas
daa
inc
mov
shr
sbb
push
and
loopne
imul
pop
inc
jmp
or
loop
loop
js
repnz
mov
daa
inc
arpl
insb
jae
push
push
jg
inc
or
mov
mov
mov
jmp
cs
add
movb
sub
fadds
jne
incl
call
das
pop
jg
clc
sub
sub
mov
pop
out
mov
sub
inc
sub
xchg
cld
add
shrl
push
pop
leave
into
xchg
ja
and
mov
jge
movsl
fdivrs
leave
mov
or
mov
cmp
mov
aad
in
adc
dec
rcrb
mov
mov
adc
bound
insb
cld
rolb
xlat
aaa
outsb
mov
push
shlb
ret
cmp
add
add
xchg
ljmp
in
pop
add
push
out
adc
sbb
or
push
aas
shl
adc
xor
aaa
or
das
ljmp
pop
adc
sbbb
gs
or
add
jae
lcall
mov
bound
in
pop
inc
pop
sbb
dec
es
insb
in
jmp
mov
adcb
and
out
sub
loopne
hlt
jge
mov
fimuls
in
and
outsl
add
fistpll
cmp
call
jmp
shll
orb
jns
jg
stc
data16
test
sub
pop
sbb
sub
fdivrl
sbb
outsb
add
mov
das
and
fdivs
mov
mov
mov
bound
decl
xor
jns
lcall
adcb
xlat
jo
inc
outsb
mov
lds
ror
dec
dec
xlat
je
sbb
clc
add
rcll
pop
dec
or
fdivrl
pop
sub
push
pop
imul
push
add
push
pop
xor
and
je
inc
adc
clc
fists
fisubrl
add
lahf
push
xchg
jo
orl
inc
mov
gs
fs
dec
add
mov
enter
add
sub
addr16
xchg
shr
push
mov
addr16
push
push
and
inc
rol
add
or
xlat
lds
sbb
push
pop
push
dec
mov
std
addb
rcrb
jae
jmp
ljmp
pop
push
push
fiadds
xchg
pop
cs
cli
mov
ret
mov
cmc
adc
push
or
or
mov
shr
xchg
mov
adc
stos
sub
xor
icebp
fidivs
sub
push
shll
push
sbb
push
cmp
mov
and
divb
lea
jne
add
lea
push
mov
jl
cwtl
sbb
lods
xor
test
pop
push
je
pop
into
int3
dec
inc
mov
cwtl
mov
sbb
mov
xchg
jne
inc
hlt
dec
inc
and
fwait
adc
shlb
aad
add
jo
xor
ja
jne
lea
xchg
mov
push
sbb
sub
cmp
into
adc
and
and
adc
sbb
addb
add
mov
add
add
es
or
xor
cmpsb
cmpsb
pop
push
stos
nopl
ljmp
and
xchg
pop
ret
jo
inc
pop
xor
sbb
lret
sbb
stos
add
call
push
mov
popf
pop
cwtl
and
sbbb
adc
jge
inc
sbb
and
push
andl
sbb
mov
or
adc
push
mov
sub
push
cmp
xchg
or
adc
sub
in
mov
push
faddl
movsb
insb
jae
xor
push
hlt
into
je
cmp
je
add
xchg
ret
sbb
adc
adc
or
push
add
pop
fdivrs
mov
adc
fs
out
movsl
or
aad
rorl
add
add
push
shr
push
xor
add
and
xor
xchg
xchg
imul
pop
push
push
add
adc
sbb
add
pusha
add
loope
or
shrl
xchg
xchg
test
sub
jbe
and
xor
aad
imull
mov
loopne
cmp
and
or
lea
adc
jl
and
mov
jp
mov
es
leave
jbe
sbb
jl
js
popf
test
rolb
fisubs
and
push
add
jp
lods
add
and
add
inc
or
jo
and
dec
jae
bound
add
pop
jns
and
adc
sbb
into
cmp
adc
push
cli
and
insl
lea
xor
adc
sbb
add
xor
jl
xor
push
push
adc
cmpb
int3
xor
inc
lock
add
aam
add
inc
cmpsb
mov
js
and
mov
inc
mov
adc
bound
fisubrl
js
sbb
push
imul
iret
data16
fs
xchg
in
lods
mov
add
les
mov
cmc
and
and
xor
pop
loop
and
rorb
sub
mov
divl
mov
mov
mov
jo
or
je
push
out
dec
outsb
push
adc
xor
je
xchg
out
xor
loop
aaa
cwtl
inc
push
es
popf
sub
and
fwait
js
icebp
push
je
push
call
cmp
shll
xor
mov
aaa
sub
or
jne
push
inc
mov
push
jecxz
bound
and
inc
push
push
test
mov
pushf
mov
mov
jecxz
fists
movb
xor
dec
add
das
mov
cmpsl
cmp
pcmpeqb
orb
or
insb
adc
adc
push
mov
sub
stos
rcrl
cs
or
lods
push
add
or
sbb
pop
cld
adc
dec
add
jae
outsl
jg
and
cmp
inc
push
push
rolb
xor
push
xor
mov
xchg
shll
sbb
add
mov
sub
push
dec
xor
xor
outsb
or
shll
sub
and
fsubrl
cmp
das
jne
dec
and
push
imul
push
adc
adc
or
mov
push
push
pop
faddp
pop
xchg
adc
cwtl
xchg
or
insb
add
jne
inc
mov
sti
ret
pop
push
xchg
xor
mov
pcmpeqb
testb
jne
pusha
adc
lea
ja
jmp
mov
sti
or
dec
push
mov
fidivl
xchg
mov
sbb
xchg
dec
xchg
in
fs
jb
pop
ret
lahf
test
jge
jne
or
int
icebp
cs
add
mov
jl
les
add
scas
orb
fisubrs
push
test
or
adc
fcompp
mov
mov
sbb
xor
add
mov
adc
add
mov
and
or
fs
dec
lods
add
sbb
sarb
and
std
pushf
daa
je
call
sub
call
in
subl
sub
push
xchg
inc
push
pop
push
xor
xchg
add
sbb
adc
or
xchg
add
ljmp
sub
dec
and
jge
popa
test
sbb
cmp
mov
or
lods
lea
fidivl
rcr
adc
mov
xchg
inc
inc
add
sbbb
add
add
js
or
pop
mov
fdiv
mov
sub
lret
jg
add
mov
cmp
jg
fmuls
push
andl
inc
xchg
and
bound
adc
ds
mov
pop
cli
je
call
cmpl
xor
add
add
push
lds
inc
xchg
push
push
jle
lods
sub
xchg
xchg
xor
loop
rclb
cmp
je
addb
out
sub
test
sub
cmpsl
sti
xlat
les
ljmp
mov
mov
std
lock
add
movw
sbb
fisttpll
pop
test
pop
mov
daa
sub
mov
jne
push
das
push
jns
outsl
insb
mov
in
jo
push
or
mov
mov
sbb
inc
add
push
shlb
push
adc
or
push
lret
cld
mov
sub
jg
xor
mov
out
inc
lcall
adc
movb
add
and
lcall
mov
test
sub
or
add
jbe
pop
inc
mov
inc
mov
call
jge
ljmp
stos
cmp
sub
jno
mov
dec
lods
adc
or
push
sarb
scas
inc
dec
cmc
daa
cmp
mov
add
inc
push
cmp
outsl
push
and
add
add
cmp
fsubrl
nop
dec
pop
jp
inc
mov
sub
inc
add
adc
and
sar
shlb
push
mov
sahf
or
inc
fcmovnb
add
test
push
cmp
push
xor
jbe
or
xchg
aas
sarb
je
sbb
adc
out
pop
dec
push
sub
sti
loope
ljmp
lods
in
mov
or
nop
cmpb
out
jle
cmc
add
in
in
dec
sub
mov
or
repz
shr
add
das
aam
dec
rcr
loopne
pop
add
push
mov
in
mov
adc
jne
insb
push
add
outsl
jne
fbstp
jne
jo
aad
add
rcll
orb
cmp
in
push
and
mov
push
inc
in
fbstp
inc
out
cmp
mov
in
xor
sub
test
iret
pusha
cld
sbb
jmp
jbe
sub
sub
fcomi
add
pop
idivb
adc
push
push
push
and
loope
push
or
mov
ret
cli
inc
adc
mov
lret
or
or
inc
add
out
data16
add
jb
cmp
je
cmp
je
mov
cmp
xor
mov
mov
cmp
add
jle
cli
cld
and
mov
add
sub
adc
sti
adc
cwtl
push
sbb
push
shrb
movb
ret
adc
and
xor
xchg
inc
mov
std
xor
push
test
push
mov
and
sti
add
shlb
rclb
push
movups
enter
arpl
pushf
jno
lcall
dec
cmp
psllw
xor
and
cmp
mov
aad
cmp
or
push
test
mov
fs
xor
adc
sar
in
pop
and
sub
shrl
mov
push
dec
add
cmp
cmp
cli
add
arpl
iret
enter
adc
push
mov
shlb
test
ret
into
inc
lcall
pop
lds
cmpsl
xor
or
ja
and
mov
jl
and
nop
sub
xorl
or
es
sub
jo
sbb
jecxz
repz
stos
cmp
leave
mov
adc
cmpl
fwait
mov
xchg
movsl
xor
push
push
adc
mov
lea
fisubrs
test
fmull
sbb
mov
xor
xor
mov
cmp
lock
aas
jg
lea
sub
xor
inc
mov
push
push
inc
lods
xchg
sbb
int
lcall
dec
or
pop
sbb
lcall
and
jbe
aaa
and
icebp
fwait
inc
shll
xchg
les
inc
sbb
insb
and
mov
pop
jle
aad
scas
sbb
add
rol
mov
push
xor
adcb
adc
sub
int
pop
pop
sbb
adc
lds
pop
dec
repnz
imul
and
push
push
sar
test
test
je
and
or
and
mov
addb
inc
mov
sahf
cwtl
cmp
shlb
lcall
push
add
inc
sub
scas
mov
or
inc
inc
jge
pop
nop
inc
adc
push
mov
jmp
mov
adc
aaa
popf
dec
push
dec
or
or
sub
adc
rclb
lock
adc
or
push
dec
sbb
sbb
adc
sub
shlb
scas
adc
inc
push
rcrl
ss
das
je
xchg
movsl
sub
add
push
sti
sbb
xchg
mov
mov
add
add
sub
clc
add
pusha
lahf
addr16
xor
into
imul
mov
ret
lods
sbbb
sarl
test
test
and
imul
pop
inc
xchg
xorb
adc
loope
adc
mov
sbb
loopne
les
lcall
orb
lds
push
int3
mov
test
add
push
sub
push
mov
push
imul
loop
or
sub
mov
push
test
add
push
dec
add
inc
shrb
xchg
add
push
jns
subl
sbb
add
and
jecxz
cmp
mov
pop
push
pusha
xchg
dec
jg
lock
shlb
dec
in
inc
lea
push
and
pop
and
dec
add
and
fs
adc
sti
mov
dec
insb
sbb
or
push
push
pop
and
xchg
cmp
mov
push
scas
mov
sub
adc
rcrb
jmp
pop
pop
inc
sub
add
or
jns
xchg
sub
test
xchg
push
decb
pop
mov
je
xchg
stos
shll
sub
rolb
cmpsb
bound
out
xchg
aad
pop
cmp
mov
cli
iret
add
jbe
cmpw
scas
or
inc
pop
mov
or
lret
shlb
xor
add
cmp
push
hlt
and
insb
inc
xchg
cmp
push
movsl
inc
inc
nop
ss
and
pusha
jmp
push
xchg
push
pop
mov
fmull
lds
jnp
or
push
in
inc
cmpsb
mov
test
add
pop
daa
ss
cmp
notl
push
add
dec
ljmp
dec
ret
ret
nop
add
push
add
dec
inc
sub
inc
sbb
dec
or
jmp
mov
cmpsb
push
adc
add
sbb
xor
pusha
scas
shlb
mov
rcl
fildll
andb
fisubs
iret
xlat
insl
mov
adc
inc
add
fldl
cli
iret
jne
ret
add
adcl
xor
movsb
loopne
xor
or
and
xchg
aas
cmp
add
mov
ss
ss
mov
nop
push
mov
push
movsl
dec
push
dec
inc
lds
and
test
xlat
mov
dec
add
cs
dec
pop
mov
push
cmp
adc
je
lods
int3
insb
je
pop
add
push
xorb
fisubs
lret
jp
inc
mov
push
and
push
add
andb
pop
and
mov
push
js
cmp
sub
aas
lcall
or
xor
push
dec
xor
xor
pop
out
push
ret
inc
repnz
sbb
add
inc
aas
mov
mov
lcall
fdiv
push
sub
aad
pop
addb
adc
adc
insb
adc
mov
xchg
dec
les
cmp
insb
test
adc
push
cmp
or
sub
dec
or
push
movsb
addr16
add
and
or
adc
cwtl
dec
xlat
sbb
hlt
xlat
sub
cmpl
add
nop
dec
lods
add
int
sub
inc
sbb
mov
loopne
push
test
test
mov
cld
cs
fists
shl
shr
mov
xchg
xor
push
push
or
mov
pop
shl
out
and
jns
js
add
mov
mov
dec
dec
dec
dec
sbb
or
add
push
xchg
je
addb
lcall
sub
xor
xchg
int3
not
xor
popf
and
arpl
adc
call
jge
xchg
inc
add
in
adc
inc
add
sub
sub
mov
bound
mov
push
adc
mov
sub
xor
add
cmp
loope
jne
int
inc
push
mov
inc
adc
cmp
sbbb
push
or
incb
sub
mov
sbb
sub
mov
or
jl
mov
das
test
cmp
jge
xchg
jmp
or
or
fisubrs
daa
in
jbe
lret
ror
sub
jmp
adc
and
ret
enter
adc
mov
scas
loop
inc
jge
rcrb
in
fcoms
mov
xchg
test
stos
loop
inc
inc
mov
add
loop
sub
or
adc
test
ss
add
jmp
popf
xchg
add
inc
push
and
inc
pop
jl
mov
adc
xor
inc
push
subb
cmp
add
imul
pop
jmp
push
push
mov
xchg
mov
and
or
or
sbb
popf
and
or
pop
or
jge
lock
aaa
cs
jge
lock
andl
call
sub
or
inc
cld
in
push
sub
ret
jns
jmp
push
push
mov
push
push
push
adc
cmp
dec
bound
inc
push
lcall
cmp
adc
add
add
xchg
insb
inc
lock
push
mov
cmpl
lcall
adc
xchg
dec
hlt
mov
subl
mov
jge
je
or
sbb
daa
pop
or
jmp
jle
pop
push
xor
subl
and
in
push
in
add
psubusw
out
jle
add
sub
fildl
push
clc
and
ja
pop
or
clc
or
mov
xor
cld
xchg
fldcw
jmp
push
clc
xor
push
add
adc
cli
lret
ret
jmp
sbb
lea
add
enter
push
sbb
fwait
add
dec
fadds
loopne
jo
sub
dec
add
enter
inc
mov
cmp
and
push
jnp
ss
add
add
mov
dec
dec
push
cmp
xchg
push
xor
and
outsl
push
push
push
enter
push
movb
cld
xchg
lea
mov
sub
popf
outsb
xor
adc
sbb
lods
mov
jmp
or
movsl
and
adc
xchg
add
xor
mov
jb
iret
push
rolb
cmp
add
inc
adc
push
jns
sbb
dec
adc
add
sti
pop
inc
mov
lea
in
lock
sbb
or
and
rolb
jmp
fisttpl
pop
jae
fdivl
jb
shrb
pop
and
das
out
jecxz
mov
sbb
inc
sbb
sbb
adc
jne
mov
fisubrs
jmp
jmp
cmp
fisubrs
mov
push
fsts
cli
in
int
ds
inc
cmpb
test
test
loopne
dec
xchg
clc
and
cmp
or
adc
add
adc
mov
add
jnp
sub
pop
sbb
jbe
push
xchg
pop
dec
push
push
inc
ret
lahf
lret
mov
jne
add
mov
or
add
jmp
mov
test
lea
or
add
push
or
and
sbb
sbb
sub
jecxz
inc
and
jo
mov
xchg
jns
sub
ja
mov
aaa
fcoml
cmp
fisttps
add
inc
inc
je
pop
cld
loopne
dec
sbb
jp
dec
adc
xor
or
add
mov
insl
mov
sbb
sub
push
cld
jo
jl
pop
in
addr16
ds
or
cmpl
outsl
cmovge
mov
sub
adc
in
jae
sub
je
jnp
inc
adcl
ret
sbb
or
pushf
lcall
out
push
or
fs
pusha
je
cld
pop
push
and
cmp
lea
les
mov
adc
enter
adc
rclb
in
or
nop
xchg
rclb
test
cmp
adc
push
pop
inc
outsl
mov
gs
push
add
mov
cmp
cmp
jne
rcrb
add
sbb
outsl
add
adc
loopne
sbb
mov
mov
test
add
mov
pop
push
mov
add
mov
jo
mov
mov
sub
lcall
xor
sbb
orl
jg
fiadds
fstpl
jmp
push
push
push
ja
fcmovnu
fbstp
pop
adc
adc
mov
jo
lods
sti
in
jg
cmp
je
aam
sbb
daa
cmp
in
out
call
adc
and
insb
mov
test
int
stos
add
fstpl
cmp
decb
je
adc
or
push
mov
jecxz
sub
lea
adc
jno
mov
shll
adc
pminsw
sbb
jb
or
or
or
add
add
sub
pop
fsubrs
xor
movb
or
and
push
dec
add
je
adc
inc
xor
outsl
or
jne
inc
sbb
cli
jge
sub
or
not
cmovo
ljmp
cmp
and
inc
hlt
nop
cmpsb
imul
and
add
sub
out
sbb
jo
outsb
jmp
lds
and
iret
je
lret
sbb
test
xor
insb
adc
outsb
sbb
les
jns
dec
push
add
add
lds
mov
sahf
or
adc
sahf
push
xorb
jnp
lea
test
sbb
lret
daa
sub
cmp
and
sub
scas
push
adc
add
pop
jg
push
imul
scas
cmp
push
inc
lds
lods
mov
pop
pop
sbb
das
pop
xchg
popa
das
sbb
push
sbb
mov
test
call
and
inc
lds
add
std
lea
xchg
push
mov
in
jle
pusha
adc
cld
and
mov
scas
in
add
js
aaa
sub
jne
add
add
sub
cmp
les
cmp
lea
add
pop
adc
stos
call
push
mov
mov
add
lret
jb
jmp
aad
js
sub
movb
inc
add
dec
push
inc
xchg
aaa
nop
addb
rcll
xor
das
and
dec
inc
add
popa
andl
and
leave
inc
int3
or
jge
push
fidivl
inc
cs
add
mov
and
add
pop
adc
lods
pushf
sub
int3
sbbb
loop
jg
jne
jg
sub
push
sbb
test
lcall
add
adc
fsts
pushf
mov
mov
nop
ret
push
push
push
xor
dec
xor
mov
scas
inc
adc
adc
push
mov
adc
lea
adc
push
or
adc
add
jp
xor
cmpsl
inc
jo
jno
or
inc
mov
push
shlb
mov
mov
orb
and
jecxz
push
pop
stos
sbb
push
dec
es
cmpsb
mov
lock
mov
leave
jmp
loopne
pop
add
add
addb
test
mov
xchg
xchg
lret
push
push
mov
rcll
adc
inc
jo
andb
add
sbb
iret
pop
dec
movsb
adc
sub
popa
ficomps
cmp
scas
jp
dec
mov
mov
dec
inc
inc
add
mov
call
mov
int3
test
inc
add
xchg
loop
and
jo
icebp
pop
sarl
mov
push
pop
leave
cs
push
aam
or
dec
arpl
pop
xlat
pop
xor
or
inc
or
or
mov
add
mov
mov
and
loop
xor
jbe
add
mov
sbb
lods
sub
ret
pop
push
adc
sbb
mov
inc
je
xor
mov
mov
out
lds
adc
sbb
xchg
add
adc
xchg
or
cmpsl
popl
xor
sub
dec
push
test
fs
push
add
add
lods
and
or
sub
stos
or
lods
dec
adc
mov
xchg
or
ret
psubusb
cmp
sti
jb
fnstsw
lret
cmpb
lods
mov
push
mov
out
clc
add
push
jl
test
mov
dec
dec
cmpsb
ret
dec
outsl
cmp
ret
sbb
aad
imul
cmp
bound
or
fdiv
fldt
mov
jne
pop
jo
insb
jo
mov
in
stos
loopne
xchg
cmp
lods
inc
mov
mov
xor
xor
or
out
push
insb
subb
ljmp
fwait
enter
mov
inc
fisttps
or
je
add
jns
std
push
orb
outsb
lahf
push
inc
aam
mov
push
adc
pop
xor
pop
cmp
lea
sbb
sbb
jmp
push
push
loope
in
pop
dec
add
adc
mov
push
movsl
lock
mov
and
in
mov
scas
add
out
inc
mov
cltd
fists
add
xchg
sub
xchg
add
mov
frstor
in
ret
push
loopne
dec
jp
sub
ftst
sub
jo
add
and
pop
sub
push
dec
sbb
popa
nop
lea
pcmpgtw
int3
lods
cmp
sub
sahf
sbb
pop
imul
cld
dec
cmp
stos
movsl
or
dec
std
pushf
or
adc
cwtl
push
sbb
push
sub
add
sub
xor
and
cmp
mov
add
in
stc
add
lcall
add
pop
xchg
inc
sbbb
sbb
push
les
inc
cmp
xchg
imul
add
fsubrs
stc
shr
aas
orl
mov
push
push
xchg
inc
mov
jbe
jnp
add
shrb
inc
sbb
cmp
adc
std
sbb
push
cmpb
cmc
test
mov
mov
sbb
adc
andb
push
fmull
or
cmp
add
add
jp
ret
adc
cwtl
and
loope
mov
test
jbe
aad
push
mov
sbb
xchg
mov
add
mov
rep
xor
dec
mov
dec
push
and
fisttps
dec
dec
jne
sbb
adc
cmp
addl
mov
clc
jb
pop
adc
jle
add
inc
or
fldpi
xor
dec
outsb
outsl
mov
imul
jae
daa
jbe
pusha
aaa
push
inc
data16
or
xor
dec
adc
sbb
test
push
insb
test
cmc
aam
or
sbb
ss
insb
test
xchg
or
sbb
pusha
sarb
sub
test
push
lret
es
mov
popf
das
push
or
test
loopne
push
jae
leave
or
ss
and
jb
xchg
mov
and
leave
add
cmp
and
pop
cld
ret
and
and
mov
fs
add
push
rorl
or
jl
add
sbb
pop
adc
shlb
dec
mov
add
ds
jg
push
and
cmp
loope
pop
cmp
cmpsl
xchg
arpl
sub
pop
mov
push
adc
jmp
adc
mov
loop
push
dec
movsb
add
inc
mov
test
lea
sub
or
sub
mov
in
lret
or
inc
sub
jnp
dec
push
mov
sub
add
fwait
mov
lret
rcl
clc
and
cwtl
das
add
shlb
ret
jg
jne
mov
std
and
add
add
add
xor
orl
pop
bound
iret
dec
or
jp
mov
andb
out
aaa
mov
mov
add
and
adc
bound
repz
push
mov
negl
fiaddl
sub
enter
mov
sbb
lcall
and
mov
dec
enter
popf
out
inc
adc
jne
push
lock
lcall
addl
repnz
rol
or
nop
call
xchg
or
dec
or
mov
ljmp
test
add
add
inc
sbb
xchg
inc
jno
stc
add
add
push
in
adc
inc
mov
adc
outsb
pushf
push
ss
aam
stos
mull
adc
loopne
rolb
or
push
mov
adc
lea
inc
push
or
test
adc
daa
pushf
scas
pop
or
pop
aam
pusha
and
inc
xor
jg
cmp
sbb
das
sub
imul
in
adc
mov
xchg
mov
adc
mov
out
jne
adc
ljmp
mov
ljmp
dec
jbe
inc
cs
mov
sub
jb
cmp
xor
pop
lds
iret
mov
mov
iret
xor
pop
add
int3
jb
cwtl
mov
pop
jge
and
sub
sbb
adc
sbb
jbe
pop
push
cwtl
jge
pop
sbb
out
xchg
adc
inc
and
dec
dec
nop
mov
adc
jp
xchg
nop
insl
add
or
cmpl
inc
dec
movsl
shll
lods
mov
out
push
fs
orb
mov
sbb
and
cmc
jmp
mov
push
pop
adc
adc
push
mov
add
hlt
std
stos
mov
add
cmp
mov
es
pop
test
pop
fstpt
mov
mov
add
ja
cmp
jne
je
lock
stos
pop
cs
jge
jge
cmp
jle
cmp
jle
jmp
or
mov
insb
or
push
xadd
mov
mov
cmpsb
pop
mov
cmp
test
dec
ds
sub
shl
inc
xor
dec
stos
fisttpl
sbb
sub
inc
shlb
insb
push
adc
add
sub
adc
xor
outsl
dec
cli
sub
push
push
data16
pop
add
sbb
mov
or
sbb
mov
mov
and
xor
cmp
cmp
sbb
sbb
inc
inc
jbe
dec
jl
cmp
push
mov
lods
mov
sbb
pop
sbb
or
pop
xor
roll
dec
cmpsb
dec
push
mov
xor
loopne
movsl
imul
xor
sbb
push
cmp
fnsave
nop
push
jmp
adc
and
les
adc
test
dec
xor
jp
pop
roll
push
mov
lret
sbb
push
loope
push
ss
fcoml
cmp
jge
test
push
loop
inc
xchg
lahf
add
int3
adc
dec
or
push
xchg
lea
pop
dec
cmp
ret
jae
push
je
pop
sub
lods
xchg
std
and
push
cmp
aaa
sbb
pop
addl
adc
add
adc
pop
xor
adc
mov
cwtl
stos
jbe
push
pop
je
dec
push
inc
das
adc
pop
mov
cmpsb
gs
add
dec
ja
push
xchg
add
adc
mov
and
dec
push
pop
mov
sbb
daa
in
mov
repnz
lcall
jecxz
add
mov
mov
mov
rolb
xchg
sub
inc
push
adc
push
mov
pop
sahf
sub
jo
and
cmp
xchg
inc
xchg
ds
sub
or
jo
scas
adc
imul
lea
or
jno
mov
or
jae
push
mov
and
js
inc
jg
mov
gs
mov
jmp
xchg
inc
inc
int
enter
frstor
xchg
fwait
and
lods
cmp
mov
or
sbb
dec
aad
mov
cwtl
and
pop
sub
adc
cs
jle
or
push
cmp
add
ret
sub
or
test
push
icebp
push
aas
lret
adc
adc
enter
mov
je
cmp
lods
sub
cld
into
adc
rorb
add
addl
inc
and
adc
mov
icebp
adc
and
sbb
addr16
stc
add
cmpb
cld
jne
add
add
and
jmp
adc
sub
and
insb
xor
outsb
sbb
push
mov
or
push
add
icebp
mov
adc
test
lds
sbb
lret
scas
je
xor
inc
and
aam
lahf
inc
cli
mov
mov
inc
test
std
mov
loopne
leave
ss
xchg
lea
out
jae
popa
adc
fmull
inc
cmp
sub
xlat
repnz
push
add
adc
xor
cs
addr16
notl
nop
push
and
add
sub
pop
or
mov
inc
mov
jo
bound
bound
cltd
jnp
add
jmp
and
dec
lock
subb
or
sub
jl
sub
xchg
cmp
lods
pop
ret
cmp
mov
pop
or
mov
lret
ss
pop
ret
inc
andb
divl
lret
push
cmp
add
push
jo
test
mov
dec
fldcw
je
jne
movl
sub
lock
cli
jbe
and
nop
mov
mov
xor
movl
add
mov
pop
in
mov
or
or
aas
and
push
dec
js
pop
out
jge
mov
jno
push
add
xchg
add
or
sar
cmp
jl
mov
lret
les
jne
cmp
stos
dec
clc
imul
lret
sbb
push
pop
ret
jo
xor
orb
sbb
repz
xor
mov
icebp
inc
mov
jo
test
es
mov
icebp
cmp
out
xchg
mov
push
cmpsb
inc
cmpsl
insb
movsb
jo
fcmovnbe
mov
and
popf
sbb
pcmpeqw
pop
push
lock
dec
std
imul
shrb
xchg
pop
cmpl
add
sub
sbb
and
or
mov
fwait
mov
push
mov
sub
jp
clc
xchg
add
xor
mov
sbb
dec
adc
mov
mov
adc
push
sub
or
lock
pop
dec
adc
jg
dec
mov
dec
push
outsl
scas
loop
rol
loope
adc
hlt
movlps
dec
mov
sub
adc
add
imulb
mov
or
inc
mov
popa
sbb
or
xchg
incl
test
mov
lea
cmp
jns
xchg
mov
sbb
popa
test
cmpb
mov
mov
xchg
pop
dec
cmp
jne
pop
mov
push
and
jge
push
push
cmp
hlt
dec
addl
add
inc
stos
mov
cmp
push
fistpl
loope
addr16
inc
arpl
pop
jb
cmp
and
push
push
cmp
sbb
cmp
and
sbb
jp
test
adc
jb
enter
jle
mov
xor
sar
adc
in
jbe
cli
sbb
mov
data16
mov
dec
inc
pop
adc
cmpb
jmp
fists
orb
sub
cmp
and
fistps
fcmovnu
push
pop
adc
dec
mov
sub
sub
fwait
mov
lret
pop
ret
ss
cli
jne
nop
jnp
pop
inc
hlt
mov
push
inc
jl
popa
cwtl
jb
fimuls
and
cmp
aam
jbe
mov
mov
push
mov
jb
adc
add
mov
test
or
adc
sti
cmp
inc
dec
push
adc
cmp
jne
sti
adc
adc
filds
add
mov
das
xor
or
incl
outsb
mov
push
mov
inc
outsl
loope
mov
mov
mov
sub
xchg
loope
insl
push
repz
andl
inc
jb
shll
or
sti
push
xor
push
cmp
test
inc
cmp
sbb
ret
jmp
sahf
push
sahf
add
mov
and
inc
ja,pt
adc
push
or
out
add
fdivp
xor
sti
fsubrl
jle
inc
dec
orl
pop
mov
and
jg
fnstcw
fwait
jns
xchg
xchg
pop
imul
cmp
ficompl
cmp
add
lds
in
call
mov
mov
adc
push
sub
add
lcall
popf
push
dec
pop
mov
div
xchg
mov
sbb
shl
stc
dec
jb
add
cwtl
pop
pop
mov
mov
or
inc
xlat
popa
shl
or
leave
inc
inc
push
int
inc
ja
push
cmp
sbb
pop
mov
push
mov
mov
fcompl
mov
in
xchg
sub
and
mov
mov
sbb
imul
jmp
dec
pop
xor
cmp
xadd
fs
push
adc
dec
dec
adc
in
es
dec
inc
xor
fadds
cmovge
xor
push
rorl
movsl
inc
cmp
mov
rorl
inc
es
inc
mov
pop
dec
mov
adc
adc
adc
imul
xchg
sub
sbb
xor
push
xor
xchg
jl
xchg
leave
enter
ljmp
inc
loop
aad
push
xor
int
xor
mov
inc
cmp
in
xor
cmp
iret
dec
inc
lahf
pop
inc
loop
mov
rclb
jmp
sub
mov
mov
mov
out
add
aas
xor
mov
mov
cmp
cmp
mov
mov
sub
repz
or
test
mov
adc
in
cmp
inc
hlt
mov
addps
adc
nop
sub
js
push
or
add
insb
or
sbb
std
xor
jae
popa
subl
sbb
fwait
outsb
xchg
mov
lods
push
rclb
or
in
in
adc
clc
adc
out
mov
xor
cmp
movsb
mov
sub
gs
sub
loope
inc
cmpl
push
xchg
push
dec
sub
shrl
adc
repz
sub
push
adc
push
pushl
sub
push
insl
and
jge
pop
shlb
or
mov
bound
push
sbb
mov
fs
sbb
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
xchg
adc
mov
and
and
dec
sub
insb
add
insb
lret
leave
jb
cmp
inc
mov
sub
push
cmp
mov
jb
push
mov
cli
sub
test
xchg
jmp
sbb
mov
fs
push
cmp
and
inc
jo
shrb
dec
fs
js
mov
xchg
mov
inc
pop
dec
ja
popa
inc
stos
sbbb
or
mov
or
rolb
and
insb
adc
ffree
cmpsb
pop
inc
add
rcll
sbb
dec
sbb
add
out
sahf
add
or
mov
jmp
hlt
adc
lea
cmpsl
ds
clc
shr
xor
je
or
arpl
mov
jg
and
test
and
xor
add
orb
arpl
pop
add
sbb
jg
mov
faddl
mov
mov
pop
adc
fdivl
leave
add
jmp
dec
sub
push
cmc
fs
stos
mov
and
sub
add
add
sbb
mov
iret
iret
leave
or
mov
xor
mov
insb
dec
or
pop
push
push
xchg
jb
pop
lea
std
push
or
and
pop
pop
lcall
adcb
nop
add
inc
jg
xchg
sbb
pop
call
adc
orl
dec
adc
pop
inc
ret
jg
fildll
lcall
seto
sbb
jae
sub
mov
stc
rorb
shl
add
pop
pop
adcl
inc
push
jnp
sbbb
sbb
add
pop
push
test
sub
call
mov
nop
xchg
adc
sbb
add
mov
xor
and
dec
xlat
adc
sbb
sbb
in
jg
sub
push
pop
xchg
in
or
jnp
mov
dec
rcl
das
pusha
ljmp
dec
add
jge
rcrb
and
add
sub
mov
jg
jle
jmp
cmp
dec
add
sbb
movb
add
insb
fdivl
roll
rorb
imul
mov
pop
movsb
mov
fwait
or
jle
mov
inc
mov
stos
mov
outsl
or
add
sbb
and
int3
push
and
mov
mov
cmp
mov
ret
int3
addr16
adc
insl
push
mov
mov
mov
cmp
into
lds
and
or
js
bound
add
sbbb
std
std
call
pop
out
jb
jl
mov
pop
add
and
movaps
icebp
call
test
or
in
shlb
or
imul
push
fwait
adc
shlb
test
movsb
mov
pop
fadds
fistpll
loope
xor
sbb
sub
in
gs
fdivs
adc
jge
mov
cmp
push
push
cmpsb
add
icebp
aad
sbb
arpl
push
push
fsubrl
idivl
std
fistpll
divb
push
mov
push
dec
mov
test
mov
fsubrs
lea
or
mov
mov
pop
inc
dec
dec
jne
test
xor
stos
lds
nop
push
jbe
xor
adc
bound
mov
push
add
adc
mov
adc
push
mov
push
and
adc
jo
out
enter
test
dec
mov
push
xchg
loopne
pusha
stos
fimuls
jbe
jno
mov
rol
inc
sub
pop
dec
ja
sub
jge
mov
add
add
and
pop
adc
sbbl
sti
mov
psraw
test
iret
jle
stc
add
jle
leave
int
lea
in
mov
mov
cmp
push
aam
sbb
adc
add
pop
jge
call
out
mov
lea
push
push
push
lea
adc
mov
sbb
jno
lds
or
inc
mov
sar
jmp
int3
xchg
inc
lea
sbb
mov
pop
push
mov
adc
adc
and
inc
mov
stos
mov
aam
push
cmp
jg
icebp
mov
add
fidivrl
dec
jns
lea
jle
ja
addb
out
add
dec
jge
mov
cmpsb
ljmp
jg
ljmp
xor
xchg
adc
mov
mov
add
mov
std
lea
or
loope
pusha
dec
sti
fmull
out
push
add
jecxz
lret
add
or
stc
repnz
in
mov
inc
mov
les
sub
mov
lret
lret
shl
dec
and
or
enter
and
cmp
or
mov
and
xchg
shlb
sub
mov
cmp
or
mov
push
loop
cltd
adc
cltd
or
xchg
inc
sub
js
add
lods
mov
xor
sub
mov
sbb
test
push
aaa
inc
inc
jge
jecxz
adc
adc
faddl
dec
add
lahf
movsl
mov
push
lds
data16
or
or
mov
adc
pop
cmp
xorl
cmp
insb
xor
jl
psrad
dec
mov
jbe
lea
sub
add
gs
and
jp
pop
loopne
mov
js
or
adc
pop
jo
adc
out
pop
arpl
sub
sbb
js
ss
sbb
add
sub
std
out
inc
jne
mov
jbe
lea
incl
dec
pop
lea
imul
mov
idivb
ljmp
push
add
cmp
mov
xor
mov
xor
inc
mov
cmovno
movd
mov
xchg
test
cld
dec
mov
jne
or
mov
xchg
jne
lods
inc
jecxz
push
or
stos
xlat
or
push
or
iret
pop
es
adc
mov
std
adc
mov
cmp
ss
outsb
dec
xor
jns
pop
adc
sub
fsubs
cmp
push
mov
sbb
xchg
shrl
fsts
lea
orl
mov
adc
cli
ss
xor
dec
adc
popf
add
or
ja
sbb
push
xor
jl
mov
sti
sarb
ret
jge
xchg
push
pop
xchg
ja
gs
pop
dec
jne
and
xor
sub
push
icebp
adc
sub
cmp
push
popf
cmp
adc
sahf
enter
adc
adc
pminub
popa
push
loopne
loop
subb
or
aas
or
rclb
or
pop
jns
inc
push
and
and
leave
inc
pusha
ret
inc
pushf
daa
fsubr
add
inc
jp
inc
mov
aad
stos
ret
lret
adc
or
xor
push
shll
dec
xchg
dec
aad
cli
sub
xchg
mov
or
jne
sbb
insl
jmp
mov
ficompl
inc
mov
xchg
mov
cmpb
in
outsb
lds
mov
sahf
mov
inc
jge
scas
xchg
stc
je
fistl
dec
and
dec
test
jl
sbb
cmp
rol
add
lods
xchg
cmp
scas
mov
fnstsw
push
loopne
dec
outsb
jns
pop
mov
mov
stc
jl
shrb
xchg
fimull
lea
rolb
mov
jne
add
or
movsl
add
loope
std
inc
mov
mov
cwtl
ret
push
fcomip
mov
mov
push
icebp
cmp
adc
or
cmpsb
mov
adc
mov
sbbb
lcall
mov
pop
or
or
jecxz
add
imul
add
xorb
stos
sbb
sub
jno
decl
adc
xchg
and
or
mov
jmp
insl
jae
sbb
xor
push
mov
aas
cmp
and
xchg
xor
inc
aam
jl
clc
inc
lock
adc
test
inc
lea
ljmp
ljmp
add
xchg
aad
stos
dec
std
movsb
jne
fmuls
lock
jecxz
mov
test
mov
inc
pop
fistpl
mov
sti
inc
cmovo
data16
cmp
ds
int3
xor
jecxz
leave
por
or
pop
test
stos
lret
mov
ja
cmpsl
mov
mov
push
or
pop
mov
stos
sarl
inc
outsb
xor
add
imul
bound
imul
add
jmp
add
fbstp
sub
aaa
test
insl
mov
or
popf
fiaddl
fst
jbe
push
arpl
pop
push
cmp
pushf
cltd
mov
fcmovne
xchg
cwtl
nop
out
pushf
xchg
adc
sahf
add
inc
xchg
bound
xorl
in
insb
sub
shlb
dec
les
nop
incb
mov
addb
or
stos
lret
or
imul
es
xchg
insl
adc
les
in
xor
inc
inc
mov
sub
mov
imul
mov
rorb
xchg
sarl
mov
subl
out
adc
lahf
daa
pop
inc
mov
sub
dec
int
xor
sarb
push
and
sbb
inc
fisubrl
insl
push
dec
inc
data16
lcall
jb
hlt
vandpd
pop
sub
and
add
sub
jg
rolb
or
incl
or
add
sub
cltd
push
cmpsl
xorb
inc
sahf
call
and
sbbl
fstpl
xorl
add
nop
mov
cli
add
inc
and
inc
push
sub
push
je
jg
cwtl
sbb
xchg
popf
pop
mov
aaa
adc
sbb
push
cmp
mov
cwtl
adc
and
inc
sbbl
movsl
jae
mov
dec
xchg
insb
and
sub
xchg
xchg
in
sub
xor
cmp
sbb
and
xchg
xchg
in
inc
xor
sbb
in
cmp
adc
dec
out
mov
push
push
daa
cmp
leave
jbe
sbb
mov
mov
mov
insb
adc
add
imul
aas
add
pop
cs
inc
inc
leave
inc
push
inc
roll
sub
roll
push
inc
loop
inc
pop
ss
ljmpw
inc
in
fwait
in
bound
dec
mov
cmp
lret
in
pop
lret
dec
decl
mov
xchg
push
les
mov
xor
lret
test
pop
pop
pop
pop
pop
data16
add
out
pop
out
mov
inc
pop
dec
jp
subb
or
sub
fsts
mov
xor
or
push
inc
sub
ret
aas
adc
outsl
lcall
mov
jg
mov
fstpt
loop
mov
mov
cmp
fdivrs
sub
sahf
arpl
sub
jo
push
test
out
fidivrl
jbe
push
pop
outsl
mov
test
clc
rep
jle
shll
mov
and
inc
mov
jl
lea
mov
sbb
sbb
fimuls
scas
fisubl
sti
inc
pop
mov
mov
add
sbb
sub
sub
call
and
repz
pop
cld
shl
ds
xor
sub
xor
push
mov
jo
fstpl
arpl
orb
pop
push
sarl
cld
sub
xchg
xchg
mov
rorb
bound
sub
push
outsl
adc
mov
jno
push
movsl
push
cmpl
mov
mov
adc
pop
scas
add
dec
jg
mov
and
mov
cmp
push
dec
and
sub
mov
and
int3
shll
push
mov
inc
and
mov
neg
add
or
and
push
pop
push
push
adc
or
push
test
data16
stos
pusha
inc
mov
cmp
mov
inc
push
or
jns
out
sbb
push
jg
xchg
mov
sbb
xor
mov
fwait
mov
adc
lret
jp
pop
xchg
mov
neg
add
jl
lret
pop
cmpl
pop
sti
shl
mov
push
rcll
neg
sbb
push
not
das
shr
in
lock
push
arpl
sbb
mov
push
cmp
adc
outsb
jne
loope
or
push
add
push
adc
es
sbb
mov
cwtl
mov
inc
mov
pushf
lldt
push
leave
and
sbb
cli
rolb
mov
lods
adc
push
sbb
jnp
add
shr
and
add
fistps
pop
sub
xchg
mov
imul
adc
gs
adc
or
adc
cmp
xor
stc
sbb
subb
je
movl
pop
icebp
jle
adcb
jmp
and
rorb
shr
cli
outsb
es
jbe
sbb
into
aad
fucomp
push
sahf
mov
dec
mov
inc
data16
pop
sbb
fstpl
dec
in
pop
pop
adc
mov
pop
add
push
orb
mov
movl
or
push
add
jbe
xchg
push
push
cmp
lods
or
std
in
shll
jne
mov
sub
fiaddl
lret
fdivrl
adc
fcomps
xchg
inc
call
adc
rorb
mov
fsubrs
int3
popf
or
in
idivl
fmul
sbb
xchg
insb
in
in
xor
aad
sbb
xchg
sbb
subb
aaa
loop
mov
cmp
fwait
inc
xchg
and
or
pop
insb
fdivs
xor
xor
loope
push
xor
inc
mov
loope
in
and
cmp
fs
rclb
mov
gs
pop
pop
imul
push
insb
xchg
adc
add
aaa
push
dec
inc
xor
mov
adc
sarl
dec
jb
inc
add
rolb
mov
lods
and
sub
pop
sbb
fldcw
insl
dec
xor
push
repz
mov
xor
sub
fcmovnu
and
popa
ret
in
ljmp
add
sbb
nop
mov
dec
mov
movsb
add
push
mov
ss
imul
inc
sbbl
imul
jne
addb
add
add
push
pushf
mov
inc
sub
push
stos
inc
add
lret
jne
push
lcall
xor
inc
add
add
ror
les
je
add
shl
or
shrb
inc
xor
scas
out
add
arpl
jno
in
pop
sahf
mov
push
js
pop
sbb
mov
pop
push
push
sub
sub
xchg
mov
cwtl
ret
sub
fs
push
inc
mov
out
les
xor
jle
mov
ret
jmp
cwtl
mov
mov
or
leave
aad
shll
cmp
jmp
inc
mov
imul
dec
xor
inc
jae
mov
adc
inc
jae
sub
dec
jmp
sub
push
push
jno
test
inc
or
int3
clc
push
lret
adc
cmp
jae
dec
icebp
jmp
pop
pop
mov
rorb
shl
shl
mov
and
add
push
add
inc
jae
or
mov
and
fs
dec
sbb
xchg
arpl
add
fwait
pop
mov
add
out
adc
jp
ret
mov
cmp
pop
push
adc
add
imul
adc
jo
or
jmp
mov
pop
imul
adc
sbb
push
pop
push
outsb
xchg
in
ds
adc
fisttpl
or
cmc
mov
lret
and
sub
cli
inc
fldenv
jmp
daa
fsubrs
mov
popa
jb
popf
into
adc
and
les
mov
shl
cmp
test
aad
insb
dec
add
fsubr
dec
xor
inc
cmp
sbb
xor
sub
dec
insl
cmp
push
dec
sub
cmp
mov
mov
sbb
lock
arpl
sahf
adc
dec
push
jmp
mov
and
mov
mov
imul
pushf
mov
aaa
xor
mov
cltd
and
cmp
push
cmp
fsubrl
je
and
lock
int
mov
repnz
cs
popf
sub
mov
push
mov
inc
mov
xor
xchg
jbe
shrb
subl
mov
inc
add
sbb
sti
push
mov
andl
popa
std
inc
sbb
add
xchg
push
jae
inc
cmpsb
popa
mov
dec
pushf
xor
push
inc
xchg
je
cli
push
push
add
aas
push
call
pop
inc
sbb
add
loopne
popf
mov
mov
insb
cmp
shr
ror
das
popa
lea
ss
mov
push
fwait
es
mov
sub
cmpsb
ret
inc
test
std
or
ret
push
lock
fidivrs
mov
jae
aam
jno
sahf
mov
insb
pop
lret
mov
cmp
push
or
dec
push
adc
sbb
out
or
jo
jb
mov
in
xor
and
jae
neg
xor
aaa
and
sti
jbe
fisttps
push
lea
inc
adc
lock
add
inc
mov
fistpl
fsubr
std
or
add
push
popa
shrb
push
xor
add
mov
ret
mov
call
add
dec
out
int
cwtl
lock
mov
pop
jge
inc
sub
rcr
addr16
adc
mov
sarl
sbb
jnp
xchg
xor
lret
mov
mov
inc
cmp
and
icebp
clc
push
mov
cmc
repnz
into
sub
loopne
stc
and
mov
nop
ret
jle
cmp
jae
sahf
adc
jbe
pushf
and
jb
and
pushf
pop
stc
scas
and
jne
in
adc
inc
add
js
loop
pop
in
cli
jmp
or
add
cmp
xchg
add
adc
fisttpll
inc
inc
cmpb
scas
sbb
xchg
mov
jmp
mov
jne
lcall
mov
loopne
jne
dec
and
cmp
lea
cmp
sub
sbb
xor
cli
jmp
popa
incb
add
xor
or
inc
push
sbb
fdivl
mov
adcb
or
sub
pop
add
sahf
or
pop
mov
or
and
stc
clc
mov
push
test
jnp
imul
aad
ds
add
or
cld
dec
lods
sysenter
inc
and
push
push
icebp
inc
ds
sbb
sub
lret
mov
lcall
inc
push
shlb
push
dec
and
mov
or
xchg
or
outsl
fisttpl
iret
mov
daa
fs
sbb
pop
mov
popf
out
add
inc
ds
jnp
ds
inc
iret
inc
push
push
sbb
mov
mov
fstpl
cmp
outsl
sbb
mov
add
sbb
push
sub
xchg
sbb
or
ss
xor
add
testb
push
adc
and
inc
test
push
inc
sbb
orl
arpl
push
mov
inc
inc
mov
dec
dec
and
xor
sbb
outsl
adc
enter
xor
push
popa
inc
inc
push
push
mov
mov
leave
int
icebp
mov
dec
dec
push
and
mov
adc
jg
sbb
mov
push
lret
lods
scas
mov
pushf
mov
fdivrs
mov
push
mov
mov
dec
and
sarl
push
xchg
leave
add
mov
xor
xor
adc
ret
push
mov
push
add
into
lret
mov
pop
inc
std
hlt
lods
pop
push
mov
push
ret
out
dec
inc
subb
in
pop
sarb
dec
adc
push
mov
pop
std
jne
inc
test
push
add
xchg
cmpsb
sbb
adc
mov
inc
push
xchg
mov
sahf
inc
rcll
test
sahf
lahf
mov
ja
xchg
push
shll
fs
and
imul
xor
cmp
enter
sbb
and
mov
lds
shlb
push
js
nop
pop
and
cmp
pop
or
mov
fdivl
mov
xorl
mov
add
or
add
pushf
insl
xchg
lret
in
inc
outsb
outsl
jle
cmp
mov
out
imul
roll
add
sbb
and
adc
mov
and
xchg
mov
ret
aas
push
add
jno
roll
or
loopne
imul
stos
js
cmp
add
jle
push
call
mov
fcmovb
loop
mov
xchg
and
out
or
add
repnz
testb
stc
cli
sbb
enter
std
fmul
and
pop
push
sub
mov
sub
mov
pushf
adc
dec
jne
mov
outsb
sub
div
icebp
cmp
fidivl
div
icebp
mov
xchg
adc
or
fists
add
mov
shrb
movnti
adc
sub
imul
mov
and
jl
or
dec
adc
movl
push
ret
pop
inc
cmp
movsb
sub
inc
add
xor
pop
inc
inc
ljmp
jmp
dec
sub
pop
xor
adc
sbbb
push
sub
andl
mov
pushf
mov
sub
or
hlt
mov
push
mov
dec
dec
ret
mov
and
jmp
push
jge
adcl
fstpt
cltd
mov
pushf
inc
cmp
dec
inc
imul
jb
pop
jge
ret
je
cld
dec
jmp
xor
test
add
dec
icebp
xor
add
adc
jp
aad
inc
inc
fmuls
inc
xlat
insb
mov
sahf
jge
lret
adc
inc
pop
insl
dec
or
ret
inc
loopne
push
scas
ret
popa
sub
aaa
adc
enter
test
ficoml
push
enter
outsl
jnp
jno
sbb
fsubrl
inc
ja
into
cltd
mov
xor
daa
lods
push
mov
adc
mov
dec
add
adc
fcompp
andl
jne
cmp
dec
lea
dec
repz
test
pop
pop
lahf
repz
inc
and
stos
jb
mov
sbb
out
adc
add
or
jl
cmp
nop
sbb
or
add
or
enter
mov
sub
nop
test
or
mov
push
sbb
pop
or
pop
aas
dec
sbb
jne
fisubrs
inc
addr16
and
jecxz
dec
mov
aas
cmp
add
cmp
mov
sbbl
cmpsb
sbb
inc
jnp
dec
cmp
or
and
jae
arpl
lret
sub
call
out
inc
outsl
xor
and
mov
lds
addr16
adc
adc
pop
sbb
out
jge
or
or
lret
int
mov
pop
push
pop
jne
pop
push
ss
negl
fisttps
aad
dec
and
in
push
sub
ljmp
inc
ffreep
adc
adc
rclb
add
dec
std
not
pop
mov
and
inc
or
push
stc
das
mov
and
adc
cltd
leave
dec
test
mov
sbb
push
gs
mov
lea
dec
das
push
dec
dec
xor
dec
pusha
sarb
cmp
out
pop
jbe
cmp
push
int
inc
sub
dec
lret
mov
data16
lahf
xor
int
sahf
push
enter
pop
adc
lahf
pop
and
cltd
jmp
adc
aaa
dec
cmp
nop
jecxz
lret
in
push
mov
sbb
jae
insl
cmp
addr16
jg
add
out
enter
mov
add
push
push
and
inc
in
push
push
mov
data16
jne
loop
xchg
mov
mov
dec
push
push
mov
mov
std
mov
test
xchg
xchg
push
or
dec
push
push
and
xchg
sbb
call
pop
dec
push
sti
je
adc
jmp
aad
pop
call
push
jae
xor
mov
test
and
adc
lcall
add
sbbb
insb
cwtl
and
fs
je
cmp
mov
push
test
adc
pop
add
inc
add
mov
jne
mov
je
pop
jge
test
call
cmp
inc
loopne
es
pop
mov
pop
pop
mov
aaa
add
dec
inc
cmp
jbe
cld
fisubl
jae
mov
arpl
cmpsb
mov
jbe
ds
mov
add
add
hlt
cmp
bound
push
ljmp
decl
lea
sub
js
push
ret
add
adc
inc
sbb
fstpt
dec
add
repz
inc
test
lds
clc
mov
add
jecxz
sub
push
je
fstp
or
dec
in
sbb
adc
fstl
mov
iret
or
mov
pop
lea
in
xchg
inc
xchg
and
shlb
or
fnstenv
dec
fldl
and
neg
ss
mov
sub
xchg
sub
cmp
xor
jbe
lods
push
aam
sbb
xchg
gs
pop
inc
mov
dec
insb
rclb
outsb
adc
dec
push
int
add
push
inc
adc
cs
clc
or
sub
push
mov
xlat
push
jmp
xchg
add
xchg
sub
push
dec
dec
cmp
addl
mov
lret
cmpsl
dec
sub
and
sub
or
add
or
sbb
adc
xorb
pop
sub
adc
mov
mov
cmpw
ror
add
add
mov
mov
mov
movl
mov
inc
lods
pop
je
sbb
testl
push
and
lcall
dec
push
mov
sub
sarl
lock
je
popa
sbb
mov
add
sbb
cli
adc
fstl
mov
shll
test
pop
mov
jmp
mov
sbb
or
out
mov
jae
ret
and
mov
ret
xor
and
and
out
xor
or
or
inc
inc
xor
and
xor
loope
je
adc
xor
cmpsb
or
mov
roll
icebp
sub
add
and
fdivr
xor
mov
clc
shr
pop
jne
shrb
cmp
adc
in
outsb
jg
mov
lea
je
dec
push
mov
repnz
sub
sub
inc
adc
sub
sbb
adc
inc
test
mov
test
pop
and
mov
and
andb
sub
xchg
pop
leave
xchg
mov
jl
jns
sti
paddb
adc
mov
sub
and
sbb
push
test
add
mov
lahf
pop
push
mov
push
xor
add
push
cmp
push
mov
adc
add
sti
stos
push
or
xor
cmp
add
loopne
push
loop
pusha
das
mov
jne
daa
sbb
jnp
testl
pop
ret
push
mov
push
dec
add
pop
xorb
dec
ljmp
stc
mov
push
push
sti
jne
pushf
addr16
and
push
add
cld
je
push
aaa
mov
nop
js
and
in
xor
push
push
push
inc
xor
and
cmp
das
mov
shll
mov
mov
add
jl
mov
add
gs
les
and
push
pop
dec
imul
add
jnp
or
insl
jnp
mov
adc
lea
jno
pop
adc
and
or
mov
jl
sbb
push
inc
or
adc
cmp
in
mov
mov
cmc
fs
dec
movsl
enter
dec
sub
std
pushf
push
adc
or
jne
test
and
jae
and
sbb
sub
adc
push
inc
push
mov
inc
xor
scas
mov
mov
loope
sub
mov
pop
adc
xor
mov
add
leave
pop
mov
jno
push
pop
cmp
ds
push
jae
sbb
pop
inc
sbb
or
add
mov
pop
mov
xor
ficoml
push
mov
and
inc
mov
lods
enter
in
mov
inc
push
jb
mov
xor
push
mov
lea
push
mov
iret
das
dec
add
ljmp
test
jne
add
sub
testb
xchg
add
cmp
mov
test
adc
dec
add
xchg
lods
lea
and
imul
in
xor
add
iret
cmp
jae
cmp
fistps
js
out
xlat
inc
shll
insb
sbb
scas
in
lock
frstor
in
jae
jge
or
cmc
mov
jno
decb
add
fldcw
fidivrs
fbstp
icebp
sub
sub
push
inc
mov
push
sub
popa
adc
cs
std
outsb
loopne
fdivl
sub
fisttps
push
sub
sbb
das
negb
adc
push
sbb
jne
push
popf
adc
push
or
push
out
add
pop
in
mov
push
pop
jb
dec
or
fcom
jb
addr16
adc
sbb
rol
inc
lods
aad
mov
add
jge
dec
xchg
into
lea
jmp
jns
and
ret
xchg
sub
xchg
in
pop
ret
and
xor
das
and
popa
insb
and
or
mov
nop
xchg
cltd
add
rcrb
xor
pop
pop
xchg
push
call
rcll
testb
js
jecxz
mov
mov
or
and
les
icebp
pushl
inc
cmp
sbb
and
add
inc
xchg
push
js
ljmp
rcrb
jmp
mov
cmp
aas
daa
pop
and
xchg
fcomp
xchg
lret
adc
bound
decl
pop
cmp
je
adc
fmuls
lret
mov
sub
adc
outsl
lret
add
jmp
rcrb
dec
sbbl
lods
and
xchg
xchg
pop
inc
jl
add
jg
mov
sub
mov
fistpll
addr16
and
push
jnp
sbbb
or
fildl
add
pop
aam
test
dec
adc
ja
sbb
pop
cmp
push
cmp
in
add
mov
clc
popf
test
shll
inc
jno
dec
cmp
xchg
out
and
pop
push
jl
sbb
push
fdiv
pusha
pop
jne
jp
xchg
insb
testl
stos
jae
push
or
push
inc
add
fsub
push
adc
add
xor
ret
orb
int3
add
adc
pusha
mov
mov
neg
dec
cmc
std
or
xor
shrb
or
mov
inc
frstor
insl
lea
sbb
push
ljmp
inc
jl
testl
fnstenv
std
insb
test
in
or
imul
es
or
jle
cmp
lock
push
jg
pushl
iret
xor
pushf
cmp
outsl
rcrl
xorl
add
adc
pop
xchg
out
les
jno
dec
pop
mov
je
dec
imull
cli
out
cmp
xchg
adc
adc
xor
aam
xchg
sub
xor
push
std
cld
mov
cltd
stos
cmp
and
sbb
addr16
or
movl
test
shll
js
sbb
sbb
int3
sub
cwtl
shl
push
ss
out
inc
add
ja
mov
rcrb
dec
pop
jne
cmp
adc
out
adc
ja
icebp
inc
call
aas
push
and
mov
je
add
sub
push
shlb
out
cmpb
sub
mov
mov
mov
or
push
mov
xor
add
sub
sbb
pop
push
dec
add
mov
push
jmp
scas
and
push
mov
ja
adc
push
push
pop
ja
sub
sbb
mov
pop
rorl
fwait
add
in
sbb
mov
insb
jnp
adc
pop
mov
xor
sbb
cmpsl
mov
fiadds
mov
push
adc
push
mov
in
fildl
mov
mov
pop
xchg
scas
cmp
push
cmp
insl
mov
xchg
inc
jnp
cmp
fdivl
mov
dec
outsl
jae
and
add
adc
or
fwait
lcall
dec
cmp
xor
dec
decl
pop
pop
pop
sub
test
pushf
xchg
fwait
mov
jp
xor
stos
or
and
test
fwait
bnd
bound
adc
jnp
sub
add
das
sub
fildll
orb
test
andb
das
fcomps
inc
or
rcrl
cmp
xor
inc
dec
lcall
cmpsb
ficoml
inc
jo
sub
jl
push
negl
xor
mov
inc
sbb
cli
je
jo
mov
ret
fisubrl
stos
test
jo
mov
push
test
in
adc
and
jmp
add
cmp
in
jmp
cmpsb
test
lahf
and
jne
jmp
inc
cmp
jl
mov
inc
dec
je
sbb
adc
jne
je
and
and
add
nop
divb
lock
xchg
ret
mov
lea
sbb
mov
movsl
lock
mov
arpl
pop
mov
sarl
or
sub
lods
mov
sbb
pop
add
push
imul
adc
out
push
cmp
mov
pop
dec
cwtl
rcrl
dec
xor
rclb
lahf
loope
into
call
pop
pop
pop
icebp
adc
test
loope
fisttpl
add
sub
sub
out
xchg
out
xor
mov
rcll
fucomip
mov
xor
mov
jg
lea
or
cmp
rolb
xchg
ljmp
mov
pusha
iret
pushl
pop
inc
adc
fldenv
out
xchg
mov
lahf
and
pop
or
mov
das
dec
mov
data16
imul
mov
jnp
cmp
insb
sbb
cli
inc
xor
and
or
scas
jp
and
sub
or
sbb
inc
sub
or
add
push
stc
push
or
std
outsb
add
pop
pop
jne
mov
test
xor
push
out
dec
adc
add
cli
or
mov
mov
mov
mov
fisttps
in
je
incb
outsl
mov
inc
lock
jb
aaa
ja
add
cmp
lods
push
test
or
pop
fisubl
fcoms
xlat
pushf
and
lret
mov
jmp
jle
es
fsubs
std
pop
out
fldt
aas
insl
xor
push
add
ret
cltd
mov
icebp
inc
and
lret
adc
add
mov
mov
inc
xchg
lsl
and
push
iret
cld
mov
lock
push
je
mov
jmp
dec
sbb
adc
out
inc
loopne
neg
push
sub
jle
jbe
cmovo
mov
andb
add
lea
xor
rcl
ficoml
std
inc
pushf
mov
xor
push
mov
pop
xchg
cld
xor
in
pop
lock
mov
add
add
insl
sbbl
jmp
sbb
dec
pop
pop
xchg
mov
addl
inc
clc
movl
ret
pop
add
mov
or
xchg
mov
std
mov
mov
mov
jb
scas
sti
sub
push
insb
sbb
outsl
push
add
add
dec
out
test
test
adc
push
outsl
int3
push
rclb
xor
mov
gs
push
dec
or
sbb
mov
inc
mov
fisubl
fdivrs
sbb
push
mov
ffreep
pop
test
leave
push
cld
fdivrs
sub
push
jnp
roll
cmp
jl
mov
add
mov
pop
ss
loopne
add
data16
scas
sub
add
hlt
clc
cld
sbb
in
cs
mov
mov
popf
fcomps
and
add
insl
rolb
push
ud0
mov
sub
dec
int3
or
sub
je
mov
andb
cmp
fs
inc
mov
popa
nop
and
lods
movl
cs
jmp
add
jmp
test
cmp
adc
or
mov
sub
push
sub
xchg
xor
jmp
dec
je
push
movsl
pop
ja
ja
pop
sbb
pop
xor
jne
jl
rcr
push
inc
dec
scas
mov
dec
and
mov
add
out
pop
cmc
pop
sti
mov
inc
jge
adc
dec
cli
or
aam
inc
movsb
dec
jno
cmp
ja
lcall
ja
pop
dec
out
out
push
sbb
lcall
pop
cwtl
cmp
inc
mov
jo
adc
xchg
sti
mov
mov
or
std
push
push
push
dec
mov
add
pop
push
es
das
jo
iret
sarl
lea
mov
sub
dec
or
pushl
jge
dec
call
ret
movb
popl
mov
cmpl
testl
cmp
push
fwait
mov
and
push
sarl
or
in
push
ljmp
or
pop
inc
mov
add
popa
mov
jmp
aam
fwait
rclb
out
lret
in
jmp
ss
aad
add
jbe
test
insb
aam
in
adc
mov
daa
push
jecxz
push
jmp
push
fcomps
or
out
push
or
out
push
or
sarl
mov
imul
les
imul
push
int3
or
add
or
loopne
mov
xor
adc
ja
add
adc
push
dec
cmp
cltd
leave
enter
dec
pop
add
inc
pop
push
leave
mov
test
shrb
frstor
and
mov
insb
enter
dec
xlat
rcl
leave
sub
dec
call
sub
movzwl
push
push
push
add
out
ljmp
mov
jge
stos
pop
add
inc
jge
lods
icebp
decl
push
fnclex
ret
ret
mov
xor
in
out
mov
push
or
cmp
rep
mov
les
inc
xor
jle
cltd
inc
mov
hlt
fstcw
fwait
mov
int3
or
pop
in
or
fistpll
add
push
rcll
mov
jae
std
push
jne
loop
popa
jl
jg
cmc
call
or
mov
push
rcl
or
lock
push
rcll
sbb
inc
dec
mov
dec
pop
insb
je
xchg
or
mov
cmp
push
or
push
add
push
scas
or
push
or
ret
scas
push
imul
add
std
add
mov
push
test
jl
mov
and
mov
sbb
mov
fnsave
std
mov
fs
inc
incl
sbb
push
mov
mov
mov
testb
sbb
lods
das
add
or
or
mov
jne
sbb
andb
sub
push
sub
sub
sub
cmp
insl
xchg
cld
sbb
adc
pop
mov
subl
jg
dec
cmp
jb
xor
nop
insb
ds
adc
das
sbb
cmp
loopne
dec
fsubr
lock
jecxz
loopne
ds
data16
sub
and
mov
insb
push
pop
cld
sbb
inc
inc
xor
pop
rolb
inc
ja
movsb
xlat
inc
bound
or
cmp
inc
mov
mov
dec
xchg
mov
mov
iret
push
mov
adc
add
xchg
jb
sbb
psubb
mov
or
mov
mov
jbe
ret
shll
lcall
pop
test
pushf
neg
push
rcrl
aam
or
pushf
push
push
outsl
or
lds
mov
movsb
pop
push
mov
xlat
cmc
mov
jne
xor
mov
add
xlat
enter
mov
rcrl
adc
sbb
das
and
and
jp
push
adc
arpl
cmp
pop
jne
test
pop
jae
mov
mov
push
sbbl
lret
and
dec
cmpsl
out
rclb
xor
std
fistps
and
or
or
fs
push
and
xchg
dec
sub
xchg
xchg
mov
xor
push
subl
or
mov
inc
dec
aas
and
inc
cmp
icebp
cmp
xchg
loop
adc
add
ja
pop
xor
insb
mov
sub
mov
lret
out
and
loopne
push
sub
cmpsl
andl
ljmp
pop
sbb
inc
or
sbb
jle
pop
adc
mov
fwait
mov
push
insl
lock
add
push
movl
pop
fsubr
outsb
adc
bound
adc
insb
add
outsl
loopne
mov
nop
mov
in
or
js
fsubrp
lea
mov
cmp
or
sub
add
and
mulb
in
inc
push
fdivrl
cltd
dec
jge
sub
sbb
dec
adc
xor
fwait
fs
fisubrl
push
dec
adc
push
push
int3
mov
mov
add
push
hlt
cs
add
inc
fcomps
sbb
cmp
js
jbe
shl
sub
orl
je
das
cli
test
lcall
loope
fisttpll
add
cmp
jb
les
add
mov
lock
xor
das
add
dec
jne
lock
iret
mov
inc
sbb
out
sbb
movsb
js
rcrl
push
xlat
and
push
andl
or
push
fdivs
mov
add
movl
push
jl
faddl
and
mov
out
mov
cli
add
pop
int
jmp
inc
and
bnd
fwait
mov
inc
cld
sub
clc
lea
mov
iret
imul
cmpb
inc
add
mov
dec
add
addb
inc
mov
lea
mov
push
cld
add
mov
or
ret
jne
sar
dec
cmp
jbe
xchg
mov
jecxz
push
inc
sbb
mov
push
mov
mov
jmp
add
shll
pop
mov
sub
and
push
pushf
pop
jmp
mov
pop
leave
jp
inc
mov
inc
pop
add
sbb
and
push
push
insb
mov
push
out
or
pop
sarl
jne
cwtl
pop
fistl
insl
mov
adc
sti
add
mov
dec
pop
cmp
jle
imul
inc
adc
or
jp
pop
jne
das
fisttpl
cmp
mov
jmp
not
and
pop
inc
lock
cld
dec
stc
data16
mov
push
sub
dec
cltd
dec
push
dec
cli
xchg
gs
or
pop
mov
hlt
xor
sbb
shrl
mov
xor
cs
add
or
jno
push
fcoml
dec
or
mov
ret
cmovo
pop
jne
sbb
lods
or
jmp
and
data16
je
mov
push
bts
test
add
or
add
xor
lock
mov
mull
or
mov
add
push
mov
jle
mov
int
pop
or
push
cmp
ja
inc
std
movsb
mov
decb
out
pop
icebp
or
cmpb
andl
adc
ffree
adc
imul
sub
adc
mov
dec
cmpsl
sub
add
or
push
dec
lods
orb
das
jl
in
les
das
cmp
or
add
dec
cs
push
cmp
fisubs
jp
dec
add
gs
lea
sub
outsb
cli
and
and
and
stc
add
or
push
insb
or
mov
push
jmp
jmp
nop
push
mov
shr
push
shll
addr16
cli
hlt
insl
pop
jne
sbb
and
and
or
add
out
das
dec
add
cmp
sbb
pop
cltd
nop
out
test
cmp
es
mov
out
inc
and
scas
repnz
pushf
jecxz
or
adc
jmp
es
in
sbb
push
add
fwait
je
test
mov
mov
in
pushf
and
inc
test
fimuls
add
adc
outsl
mov
movsl
adc
push
cli
push
cld
sub
psubq
push
nop
inc
mov
mov
jo
inc
lods
insb
adc
jle
sbb
movb
popa
xchg
inc
mov
dec
sbb
inc
in
fbstp
and
or
je
mov
subl
push
into
cmp
mov
and
jl
shl
inc
shrl
inc
jmp
mov
push
stc
inc
or
push
icebp
sub
das
test
incb
cmp
jle
pop
push
xchg
lcall
popa
cmp
xchg
push
test
add
call
outsl
scas
cmp
in
and
mov
decb
jne
xchg
mov
int
sbb
and
jmp
dec
adc
adc
sahf
test
sub
add
mov
fldl
add
clc
add
jne
or
or
test
popf
test
and
fwait
imul
pop
mov
sub
xchg
movsl
adc
pop
mov
shr
or
or
mov
scas
jmp
sub
mov
in
fldt
jnp
mov
lods
push
test
xchg
and
in
pop
outsb
jmp
cld
mov
jne
add
and
or
add
xor
lahf
shlb
lea
popl
sbb
cmp
push
lea
push
outsl
adc
inc
mov
or
std
inc
pusha
sahf
add
xor
lcall
fcoml
add
inc
xchg
or
pop
or
push
mov
loopne
or
inc
mov
xchg
in
xor
lea
xor
shrb
and
enter
push
sbb
or
movsb
push
dec
mov
lods
movsl
inc
lret
jl
and
mov
mov
bound
adc
out
mov
xor
jno
or
dec
loopne
ret
aaa
imul
sbbl
in
testb
add
dec
push
sti
addr16
mov
push
mov
leave
hlt
enter
shll
fldt
adc
add
cli
ja
lea
dec
mov
orl
cld
push
movl
roll
orb
sub
inc
ljmp
lock
jb
or
clc
mov
jmp
fcomps
mov
pop
mov
inc
fs
inc
jg
les
inc
mov
or
sbb
inc
jne
or
mov
pop
ljmp
outsl
pop
add
or
push
jge
xlat
lea
dec
jne
pop
sub
nop
shr
test
shll
dec
cmp
cmpsb
sub
mov
mov
ss
dec
or
fldcw
inc
add
lock
jbe
dec
pop
pop
mov
xchg
mov
gs
dec
push
jae
push
clc
daa
iret
enter
nop
sub
xor
add
and
nop
sub
out
nop
dec
or
or
mov
loopne
sub
add
inc
add
fwait
and
inc
fcmovnu
push
sar
dec
inc
xor
cli
pop
fcom
mov
hlt
mov
aas
gs
mov
dec
pop
xchg
gs
xchg
dec
pop
pop
pop
pop
decl
in
adc
and
iret
mov
nop
iret
in
mov
dec
lcall
mov
repnz
pushf
inc
xor
add
in
fcomp
rorb
adc
mov
or
adc
lea
push
fisubrs
lcall
ss
xor
adc
adc
jbe
mov
mov
mov
xchg
and
dec
test
and
imul
push
jns
in
cmp
imul
xchg
ja
fstpt
or
xchg
dec
pop
jne
jnp
adc
adc
push
push
inc
push
imul
push
cmovnp
xchg
gs
cmp
xchg
jne
into
pmulhw
jo
xchg
dec
dec
lds
sbb
sbb
cmpsb
ret
xchg
pop
inc
lcall
push
addl
add
lahf
add
and
jle
xor
in
mov
ja
jmp
push
imul
movl
inc
sub
and
jmp
inc
or
in
icebp
fidivrl
jne
jno
xor
pop
or
jmp
sbb
mov
jb
xor
filds
add
lea
adc
or
roll
fisttps
mov
add
adc
popf
imul
cmp
dec
inc
mov
cmp
sbb
jecxz
movsb
add
ret
cmp
jae
orb
mov
loope
mov
jmp
daa
lret
add
aaa
int3
cmp
or
jo
inc
mov
sub
xor
xor
mov
pusha
inc
mov
ljmp
xor
test
int3
pop
cmp
adc
mov
fildl
aas
mov
adc
sbb
pop
ds
adc
orl
repnz
dec
test
xchg
sub
clc
jge
mov
je
sub
pop
pop
or
jge
repz
outsl
push
int
je
cmpl
es
ds
inc
popf
inc
and
or
push
cli
xchg
inc
out
pop
xor
mov
sub
je
or
inc
mov
mov
push
mov
adc
push
in
jbe
add
jb
cmp
sub
xchg
sub
in
mov
out
jecxz
jb
pusha
roll
push
inc
pop
les
enter
ds
insb
or
sub
pop
sar
inc
or
and
sub
inc
adc
es
mov
jmp
movzbl
add
loopne
sub
and
cmp
push
and
sbb
and
adc
adc
inc
pop
pop
fwait
add
cmp
ret
inc
fdivrs
or
pop
mov
test
dec
jle
jp
fwait
mov
cmp
shlb
sub
rorb
cmp
mov
push
ss
push
push
movsl
out
xor
push
add
jo
xorl
or
js
sbb
add
jae
mov
mov
cmc
dec
sub
pop
aaa
es
cmpl
sbb
adc
cmp
fmuls
or
pop
mov
mov
jg
mov
add
push
add
insl
fst
cld
fsubs
or
mov
popa
pop
mov
xor
testl
add
adc
jb
sbb
ljmp
cmp
push
rolb
push
push
mov
das
cmc
lahf
test
push
pop
ja
shrb
rclb
sub
mov
orb
fs
or
cld
mov
ret
movl
lods
dec
daa
dec
inc
sbb
call
lods
mov
jmp
or
xchg
add
jo
pop
mov
pop
pop
sub
icebp
pop
xchg
xchg
fidivs
lock
cmp
or
dec
sbb
shll
shrl
popa
loope
notl
lea
add
lds
push
aaa
mov
sub
push
int
jge
clc
add
mov
mov
inc
jmp
push
push
xchg
popa
cld
push
mov
jne
icebp
xchg
cmpsb
cli
add
xchg
add
adc
inc
aaa
xor
mov
or
mov
inc
adc
dec
cmp
sbb
xchg
push
mov
mov
mov
cltd
pop
inc
add
in
repz
jae
lea
divl
jp
and
insl
push
xor
jae
mov
roll
mov
in
pop
add
inc
inc
jle
in
insl
lods
mov
push
cwtl
inc
mov
in
xor
adc
clc
mov
push
scas
lods
cmp
mov
cmpsl
aaa
push
ret
add
or
mov
mov
imul
xor
rolb
and
xchg
fcomps
adc
movsl
inc
mov
xchg
sbb
push
mov
sbb
xor
pop
add
pusha
jae
adc
test
rolb
lea
rclb
sub
mov
hlt
or
push
jmp
mov
xor
add
push
addb
lock
outsl
aam
jae
mov
cmp
gs
cmpb
lcall
arpl
sub
pop
scas
jne
stos
inc
push
pop
xor
cwtl
movdqu
or
adc
adc
inc
adc
aaa
and
sub
mov
std
pop
roll
cli
int
mov
scas
push
adc
xor
inc
add
jmp
push
rep
cmp
and
es
xchg
mov
mov
je
scas
jbe
ret
mov
pop
mov
lods
mov
and
mov
jl
movsb
fwait
dec
sub
add
sbb
add
std
pop
jg
mov
and
cmp
or
jecxz
fmull
aad
andb
sub
ja
xchg
add
aad
movzwl
jmp
shr
xor
test
test
inc
push
add
mov
sbb
sub
or
outsb
sub
lret
xchg
pop
in
inc
xchg
or
pop
imul
push
mov
push
pop
je
inc
jo
push
jmp
enter
mul
ret
mov
mov
sbb
faddl
pop
sbb
mov
push
mov
je,pt
jne
shlb
idivb
push
add
lea
imul
push
lods
or
stc
push
push
incl
arpl
loopne
sub
js
aaa
push
and
adc
cmc
mov
int
jbe
push
and
and
sbb
popa
andl
push
adc
pop
sbb
test
push
sti
in
ss
or
xchg
jbe
xorl
jl
sbb
jl,pn
outsl
push
int3
test
ret
add
push
lcall
les
jle
cmpsb
jle
dec
fwait
xchg
or
xchg
sbb
jae
addr16
adc
inc
in
pop
rorl
fwait
sbb
stc
add
or
add
enter
mov
and
or
std
fcomps
cmp
push
sub
test
cmp
cmp
jg
jns
test
loopne
add
add
inc
or
or
clc
jle
jbe
aaa
adcl
outsb
mov
pusha
clc
sarl
push
jg
or
xorl
pop
jg
jmp
push
in
es
jp
xor
pop
push
ljmp
sub
push
ret
out
mov
sbb
push
cli
mov
pop
pop
ret
dec
inc
jbe
fs
mov
test
lret
repnz
cmp
sahf
sub
xor
mov
test
mov
jecxz
adc
lock
dec
cmp
jl
cmp
lret
jg
stos
or
mov
hlt
push
push
xchg
xor
cmp
fstl
jbe
push
mov
xor
out
adc
insb
pop
mov
ds
inc
push
sbb
fldl
mov
inc
jecxz
pop
adc
xchg
in
lods
inc
or
testb
sub
iret
push
push
pop
mov
add
test
or
jne
lods
mov
repz
enter
jae
cmp
pop
xor
in
pop
test
addb
jle
push
adc
mov
dec
int3
push
sub
movsb
jmp
fdivrp
or
sbbl
jmp
out
popf
ljmp
dec
mov
popf
jnp
push
ss
pop
jmp
mov
add
es
add
sbb
mov
cmp
fmuls
ss
ds
or
push
sub
mov
and
and
pop
sub
xor
or
or
pop
or
aas
int3
sub
pushl
test
sbb
adc
jbe
pop
push
enter
in
jns
and
fimull
ret
fdivrl
dec
aam
inc
or
test
sub
loopne
leave
push
iret
mov
adc
mov
into
or
stos
mov
ffree
cmp
out
pop
cmp
scas
sahf
adc
mov
arpl
sub
scas
loop
add
test
inc
fstps
xchg
aam
inc
inc
and
push
out
mov
cmp
loopne
jge
outsl
sbb
orl
or
les
add
je
push
arpl
fwait
mov
cli
outsb
daa
aaa
jg
pushf
xor
cmpl
push
xchg
mov
and
adc
call
or
or
sbb
call
jg
add
inc
or
inc
bound
push
leave
notl
fistps
xor
bound
ficomps
cmp
pop
sub
pop
dec
sub
mov
pop
sub
cmp
sbb
dec
push
dec
out
dec
jae
add
aam
rcrb
rolb
cmovl
jg
inc
sarl
or
divb
sbb
push
jne
push
mov
sahf
cmp
jle
xor
leave
dec
negb
je
xor
dec
stc
xchg
les
push
fstps
sbb
push
inc
adc
loopne
and
xchg
mov
stos
pop
ret
pop
push
inc
jb
inc
mov
and
sbb
dec
sub
xchg
adc
push
lods
sbb
sbb
or
cbtw
push
test
imul
insb
pop
test
daa
jl
pop
xor
rorl
rcrl
inc
jno
ss
enter
xchg
add
jae
test
mov
adc
mov
aam
mov
sub
add
cmp
mov
inc
cmp
mov
into
jbe
jmp
shlb
push
jo
and
inc
and
mov
xchg
dec
sbb
adc
sbb
push
sahf
push
mov
adc
mov
sarl
add
test
lcall
mov
lea
or
add
jmp
std
jmp
cld
xchg
rolb
rcrl
adc
frstor
inc
pop
sbb
jp
leave
add
orl
xchg
xchg
shl
daa
iret
into
test
push
cmp
data16
inc
es
leave
or
loopne
out
and
jmp
pop
add
adc
pop
sti
inc
jl
ret
jb
xchg
inc
xor
inc
push
inc
shlb
add
cld
lea
mov
inc
rolb
lea
imul
add
stc
inc
fcmovu
mov
jno
add
add
add
inc
push
rorl
mov
loope,pn
sti
or
push
jge
mov
pop
sub
adc
cmc
and
mov
loopne
mov
addl
data16
outsb
add
cmp
sarl
out
or
adc
cltd
mov
xchg
insl
clc
or
lcall
add
push
call
sbb
loopne
mov
add
adc
out
cs
pop
outsb
adc
sbb
mov
fsubl
inc
sub
shlb
push
lods
clc
gs
add
push
shrb
mov
mov
and
pop
aam
stos
mov
stos
push
inc
mov
mov
pop
sub
push
mov
lcall
inc
mov
inc
and
mov
inc
sbb
sub
bound
adc
inc
sarb
lcall
je
cmp
fcom
mov
in
dec
inc
dec
mov
testb
xchg
in
fldl
ljmp
dec
cs
ficomps
cltd
or
fcompl
push
xchg
xchg
add
mov
lret
sub
lret
cmpb
adc
mov
ljmp
push
or
cmp
outsl
int
insb
add
jb
fstpl
addl
jbe
xchg
jns
pop
push
lock
add
ds
jge
inc
lods
cmp
xchg
cmp
add
sbb
push
sbb
aad
mov
inc
sbb
adc
inc
jnp
pop
sub
or
push
xchg
js
loop
cld
enter
ljmp
xchg
inc
std
push
cmc
sarb
es
dec
jns
neg
jl
mov
sti
fs
push
fs
pop
notl
imul
or
xor
jne
ficoml
or
ret
rorl
mov
ret
sbb
out
mov
or
mov
stos
outsb
int
shlb
insl
jmp
adc
or
or
push
adc
je
cmp
ret
or
inc
sub
pop
movb
loopne
lea
es
adc
movb
pop
inc
jmp
add
sbb
adc
bndldx
pop
xor
testb
scas
je
neg
jmp
add
fidivrs
iret
push
add
push
push
mov
adc
js
cmp
cmp
js
sub
orb
call
pop
and
test
mov
setl
mov
dec
sub
mov
lock
and
leave
or
ret
inc
inc
stc
and
push
scas
es
jl
mov
add
xor
jg
fnsave
int
or
and
test
or
lds
mov
or
mov
xchg
dec
das
inc
xor
push
scas
push
pushw
xor
es
adc
or
jmp
adc
sub
fisubl
bound
sbb
loop
nop/reserved
add
or
pop
pop
jle
sbb
cmp
out
test
inc
push
insb
pop
push
push
mov
dec
insl
push
nop
add
repnz
sbb
fcomps
push
rorl
les
and
pop
pushf
cmp
int3
xchg
shrb
aad
mov
mov
xor
push
in
in
mov
pop
sti
aam
stos
mov
jae
insl
and
movsl
push
or
les
add
cmp
test
sub
dec
and
arpl
les
ret
adc
imul
lock
pop
fdivl
stc
fsubl
mov
jmp
push
hlt
dec
in
sbb
add
fcomps
call
inc
ds
ffree
pop
cmp
jg
fidivl
test
push
add
mov
xor
fmull
push
xchg
adc
mov
popf
mov
je
push
fs
je
mov
lods
aam
rolb
mov
or
jmp
aad
mov
leave
xchg
movb
or
push
jno
mov
cltd
xchg
mov
push
push
insl
xor
sarb
jb
jo
mov
inc
lea
mov
cld
dec
mov
and
jl
mov
inc
stos
jge
push
repz
out
mov
stos
stos
inc
fisttps
xchg
add
rolb
data16
mov
test
inc
push
cmpsl
or
icebp
mov
xchg
and
mov
js
push
dec
lea
jo
stos
das
dec
shl
stos
leave
xchg
mov
lret
push
mov
test
test
adc
mov
shll
cli
cmc
inc
inc
inc
pop
rclb
aam
or
add
shll
out
pxor
lods
or
lea
out
fnstsw
pop
mov
inc
pop
cwtl
sbb
cmpsl
test
sahf
mov
xchg
cmp
sub
mov
push
sbb
push
in
or
dec
stos
add
sbb
ljmp
mov
xchg
cmp
lcall
popa
and
mov
cld
jne
ss
shlb
movsb
mov
mov
add
dec
mov
or
iret
jbe
inc
and
or
outsl
insb
testl
mov
cmpb
inc
in
push
xor
mov
or
jo
cmc
xor
dec
mov
stos
xor
repnz
rcl
xlat
pop
or
lea
xchg
xorl
arpl
xchg
sbb
mov
mov
mov
stos
inc
inc
mov
inc
sbb
add
xor
push
jg
in
cmp
mov
std
sbb
add
push
push
adcl
movsl
mov
mov
stos
es
repnz
mov
std
mov
je
sarl
into
and
jecxz
mov
mov
jmp
adc
xchg
subb
dec
and
daa
das
outsl
sbb
ja
and
and
stos
adc
mov
dec
dec
mov
or
nop
or
mov
popf
mov
enter
adc
and
arpl
fnstsw
jecxz
dec
xchg
testb
aam
adc
sbb
push
imul
xchg
adc
pop
fidivl
jne
jmp
andb
add
incb
dec
pop
loope
sub
shll
pop
pop
pop
sbbb
pop
or
adc
in
mov
adc
push
sub
ret
or
pop
add
fs
cld
outsl
mov
rcrl
loope
mov
pop
pop
mov
add
sti
add
add
lcall
mov
in
pop
testl
adc
mov
fs
ret
pop
lea
jge
lret
movsl
dec
sub
add
dec
adc
push
push
or
and
les
stos
or
cld
or
pop
and
nop
adc
enter
dec
cmp
cmp
cmp
jo
cld
or
adc
push
inc
in
aaa
mov
roll
idivl
mov
or
push
adc
jecxz
or
aad
or
lock
mov
sarb
inc
add
pop
stos
add
jmp
shl
add
movsl
mov
push
push
cmc
lea
pop
add
inc
jge
je
mov
frstor
cltd
in
popf
cmc
adc
jne
pop
and
and
push
int3
adc
cltd
ficoms
out
inc
and
jbe
mov
inc
enter
cli
xor
add
test
push
inc
jmp
mov
push
pop
into
pop
dec
inc
mov
pop
clc
sbb
test
sub
js
cmp
add
call
fsubr
jno
fadd
pop
cli
repz
xor
or
cmp
je
push
push
sub
arpl
mov
pop
inc
cmpb
and
pop
flds
inc
ss
outsl
outsl
push
movsl
mov
pop
add
aaa
jne
pop
orl
mov
test
pop
or
mov
and
mov
xor
mov
fsub
orl
xor
jnp
push
push
arpl
add
xchg
pop
adc
aam
ss
or
daa
ljmp
xor
imul
les
mov
lods
push
push
test
cmp
xor
enter
fildl
aaa
cmp
push
dec
inc
mov
adc
dec
cmp
test
or
cmp
mov
mov
mov
inc
inc
or
jmp
fistpl
lds
sbb
mov
push
add
testb
sbb
je
or
mov
int3
jne
dec
mov
inc
mov
and
js
or
sub
cltd
mov
pop
enter
sub
push
std
add
pop
and
ret
cmp
sub
xchg
and
in
dec
mov
sbb
js
and
sub
in
test
insl
adc
sbb
mov
add
dec
cs
inc
mov
push
pop
inc
mov
imul
sarb
xchg
jl
aas
sub
sub
loop
test
add
pop
sbb
inc
sub
add
xchg
push
mov
sub
sti
add
lea
dec
mov
sub
popa
loopne
loope
mov
mov
shlb
aad
jno
stos
mov
sub
and
mov
dec
xchg
mov
fwait
sbb
xchg
pop
xchg
xchg
mov
aas
sub
cmp
jae
sub
jbe
inc
or
jne
push
repnz
das
push
clc
mov
pop
add
test
xlat
xor
xchg
or
test
fcomps
or
push
testl
pop
add
add
call
ret
jmp
ds
push
adc
xchg
mov
cmp
in
adc
testb
cmp
add
inc
mov
lods
mov
push
into
sub
dec
dec
push
or
add
push
cmp
jbe
or
or
push
daa
xchg
adc
xchg
dec
lcall
js
scas
mov
outsl
mov
add
movb
pusha
sbb
mov
add
loope
es
inc
inc
sbb
ds
mov
push
or
lea
lea
pop
out
mov
arpl
mov
in
addr16
add
cmpl
lea
andb
imul
rcll
arpl
dec
jl
mov
or
mov
subb
jmp
adcb
cs
push
mov
ud2
movsl
aam
fs
test
mov
sar
sbb
xchg
mov
sub
mov
das
mov
inc
inc
add
jl
push
in
cmp
push
outsl
pop
sub
fdivs
cmp
add
mov
negb
push
sub
addr16
rorb
fcoms
jo
ret
pop
jne
push
data16
rclb
orb
sbb
outsb
cs
dec
add
shrl
mov
push
cwtl
inc
inc
push
inc
xor
pop
inc
xor
mov
lret
adc
inc
sub
dec
rcr
jo
inc
and
pop
inc
sub
hlt
sbb
ret
pop
inc
push
push
lea
lods
mov
pop
pop
inc
or
mov
imul
sbb
loopne
mov
mov
inc
add
push
push
or
cltd
sub
or
sbb
or
mov
aas
or
push
les
inc
cmp
sbb
fisubl
mov
ret
add
dec
pop
xchg
and
push
out
es
xor
lcall
bound
adc
dec
daa
outsb
les
push
add
lret
or
or
cmp
pop
es
insb
sub
rolb
jo
sub
in
sbb
icebp
hlt
sub
ds
sub
idivb
int3
sbb
xorl
mov
mov
gs
sub
push
clc
clc
or
add
sbb
xchg
adc
movsb
mov
adc
out
xchg
insb
sbb
aam
xor
pushw
adc
fsubs
loopne
sbb
adc
or
lea
mov
push
invd
push
mov
test
pop
clc
cmp
fwait
cli
push
cmc
pop
popa
or
mov
add
and
orb
inc
sbb
and
insl
je
fdivr
sub
roll
sub
pop
adc
insl
mov
jg
es
adc
xor
cli
fdivs
std
sub
insl
xor
aaa
xor
adc
pop
mov
out
mov
cmp
jne
sub
pop
call
jne
pop
popa
arpl
mov
not
mov
adc
hlt
mov
movsb
popf
mov
sub
jg
push
jo
or
mov
and
bound
mov
dec
ret
jl
mov
adcl
mov
clc
in
or
jne
jb
addl
push
adc
add
fldt
fimuls
scas
add
sahf
mov
cld
in
jmp
subl
and
int3
xchg
sub
mov
jp
or
adc
pop
sub
jg
sbb
add
aam
push
loope
cmpl
cmp
mov
jbe
mulb
add
and
or
dec
adc
subb
fstps
leave
neg
faddl
pop
or
add
push
fiaddl
dec
int
clc
inc
cmp
aad
les
mov
add
lcall
pop
jecxz
mov
lahf
imull
insb
addps
jno
or
je
cmpsb
call
ja
test
ss
aas
add
cmp
shlb
js
jbe
mov
jb
add
call
jae
sub
movsl
jmp
mov
sbb
add
dec
loopne
sti
sub
lods
les
test
fsubl
scas
jmp
scas
nop
pop
dec
loopne
or
xor
fisttpl
shll
rcll
pop
imul
sub
pop
mov
int3
lret
fdivs
and
repnz
cmpsb
nop
and
sbb
aas
mov
shll
je
lcall
in
in
call
imul
xchg
imul
aam
lea
cmp
mov
lock
fdiv
adc
fdivrs
and
stc
adc
or
or
and
jnp
and
jecxz
adc
push
fucomip
out
lea
fistpll
loope
stc
sub
xor
mov
push
insl
stc
mov
outsl
add
dec
push
mov
xor
sub
mov
stc
outsb
add
add
mov
fisubs
sub
rol
inc
pop
and
push
cmpsb
imul
int
fwait
xor
fists
xor
rcrl
adc
adc
dec
shll
add
scas
cmp
pop
pusha
add
or
mov
mov
dec
xchg
adcl
xchg
adc
mov
les
sbb
ret
ret
sbb
in
adc
pop
push
loope
mov
jmp
fs
add
sbb
mov
mov
mov
mov
mov
dec
add
enter
xor
mov
jle
rcr
xchg
pop
sbb
push
sub
and
sbb
loopne
arpl
jb
rorl
add
std
jne
push
int3
shr
or
xchg
int
dec
cmp
shrb
dec
loopne
pop
data16
mov
push
cmp
test
pop
enter
iret
sbb
or
sub
mov
dec
sbb
jp
scas
push
adc
adc
loopne
push
les
push
enter
sub
mov
fsubs
or
jns
cmp
add
es
adc
inc
xor
mov
adc
addb
push
pop
lcall
or
cmp
or
je
and
cmp
sbb
jecxz
mov
sbb
lahf
cmpsb
das
insb
inc
xchg
nop
xchg
shl
inc
ret
lret
jne
arpl
ret
add
jmp
imul
adc
test
pop
xor
mov
leave
rorl
push
mov
push
push
loop
or
sub
scas
or
ret
push
cli
push
aaa
js
or
xor
fwait
mov
sahf
mov
or
in
ret
cmc
cmp
sbb
mov
inc
hlt
xchg
adc
sarb
sti
cmp
cmp
mov
rorl
je
imul
dec
adc
pop
and
jle
sbb
inc
or
adc
mov
xlat
pop
mov
add
stos
ret
cmp
ja
call
xor
jl
aas
or
mov
fsts
cmp
lods
push
pushf
in
sbb
popf
insl
dec
or
and
lock
and
ror
fnstenv
xchg
xor
les
es
jno
push
and
adc
sub
mov
sbb
push
cmp
sbb
js
das
mov
or
inc
xchg
push
ret
imul
cmp
fistl
inc
pop
dec
xchg
pop
mov
pusha
mov
sub
cmp
mov
sub
cmp
sub
cmp
shr
xor
mov
inc
sub
mov
sub
fs
sahf
repz
cmp
adc
imul
dec
sbb
dec
ds
mov
jnp
loop
imul
mov
aam
sahf
push
cmp
movsl
and
insl
fnsave
push
pop
sub
insb
cmpsl
mov
mov
add
cmp
loope
or
cmp
xor
pop
sbb
jne
or
stc
lcall
push
jmp
or
adc
push
xor
outsb
aas
xor
data16
nop
sarl
enter
push
frstor
jne
or
cs
mov
jno
mov
imul
dec
inc
jmp
push
push
pop
stos
lods
cli
aaa
push
and
fstl
add
dec
adc
dec
jge
pusha
movsl
adcl
add
adc
sbb
add
std
push
or
mov
in
ja
mov
lret
enter
icebp
pop
outsb
mov
or
jg
jle
sub
test
add
add
sub
push
imul
psubw
inc
lock
imul
rcll
adc
out
sbb
sbb
push
add
mov
or
test
add
xchg
std
push
fimuls
ljmp
negb
rorb
lea
push
sar
dec
shrl
icebp
stc
push
outsb
lea
mov
mov
pop
cmp
jg
sub
push
aad
add
or
js
add
mov
mov
pop
loopne
call
jle
dec
pop
jmp
mov
inc
push
push
orl
pop
clc
adc
pop
or
sub
pop
cli
sub
out
ss
inc
sub
arpl
clc
jmp
sub
pop
ret
add
jns
cmp
test
dec
or
adc
repnz
add
mov
sub
push
test
mov
xlat
icebp
leave
or
shlb
push
or
lock
sub
mov
fldcw
cmp
jl
or
jns
mov
pop
cmp
push
lock
je
add
push
stos
pop
out
add
sub
shrb
add
add
hlt
inc
rcl
add
test
fwait
or
shll
lret
inc
sarl
ficoml
leave
and
mov
popa
ret
xor
pop
adc
es
into
pop
push
mov
or
inc
or
int3
sub
hlt
add
iret
pop
xchg
int
inc
add
or
popa
out
std
pop
test
pop
pop
cmp
data16
mov
imul
push
push
ret
mov
inc
mov
mov
lret
or
inc
cmp
mov
pop
pop
inc
mov
or
add
and
fimuls
jne
or
or
pop
dec
orb
adc
mov
cltd
pop
divl
pop
popa
rcrb
pop
sub
loop
rolb
ss
sub
add
add
enter
add
jl
mov
pop
mov
xlat
dec
fsts
dec
adc
fwait
mov
pop
pop
sub
loopne
loope
push
xorb
in
js
sbb
sahf
push
insl
add
mov
outsb
out
or
cmp
pushl
mov
pop
pop
and
retw
pop
cltd
mov
mov
cmp
push
add
push
adc
repnz
mov
loop
je
inc
adc
sti
add
push
push
push
add
cld
pop
pop
in
test
adc
pop
and
or
adc
dec
pushf
adcb
sbb
orb
cmp
cli
loopne
inc
fistps
mov
int3
cmc
pop
jo
or
mov
cmp
bound
adc
inc
sbbb
pop
jb
push
in
cltd
ror
push
push
test
add
cmpsb
add
adc
or
dec
mov
out
mov
jecxz
into
fiaddl
mov
adc
or
mov
movsl
xor
dec
push
push
mov
dec
hlt
cld
add
push
pop
add
fistpll
xchg
mov
add
jmp
add
add
dec
dec
jns
into
clc
xchg
cltd
mov
dec
or
in
das
addb
dec
push
add
lods
pop
test
jecxz
sbb
fcoms
test
sti
add
gs
jl
push
pop
fdiv
mov
ficompl
testl
ficoml
xchg
push
xor
adc
inc
aaa
pushl
and
stos
je
shlb
enter
mov
or
jmp
cmp
jg
adc
add
aaa
mov
mov
push
dec
jns
or
xchg
pop
shlb
dec
xor
fldt
inc
dec
idivb
pop
jl
push
xor
testl
add
mov
sub
adc
add
and
sbb
sub
pop
inc
loope
adc
ret
pop
das
or
or
incl
push
xor
push
lods
mov
adc
pop
loopne
inc
push
dec
xor
adc
out
push
inc
fildl
je
cwtl
pop
adc
push
and
in
popa
or
aam
sub
adc
in
popa
out
fdivl
and
sub
add
enter
pop
fiaddl
dec
or
jle
lods
test
daa
xor
jle
sbb
lods
mov
mov
movsl
sbb
mov
sub
mov
daa
jl
cmpb
jl
jp
push
mov
cmc
incb
xor
incl
jmp
push
movsb
push
xchg
mov
jle
push
jl
push
lcall
hlt
adc
pop
ss
push
inc
mov
movsl
movsl
movsw
sbb
sti
mov
out
jbe
xchg
add
movswl
mov
add
xchg
cmp
inc
push
clc
fadds
mov
into
rorl
and
pusha
pop
popl
out
push
jo
pop
bswap
sub
aas
sbb
test
mov
call
loopne
push
push
shrl
mov
sbb
add
add
shrb
mov
adc
or
mov
int3
loop
js
mov
ss
fmulp
mov
or
lea
mov
jno
inc
add
mov
fbstp
je
adc
iret
dec
dec
or
add
or
fisubs
or
mov
rorb
jle
sub
push
sbb
cli
mov
mov
mov
sbbl
lock
push
add
add
subb
sub
jmp
or
aas
pop
push
or
shll
cmpsb
add
out
hlt
in
in
or
fsubr
outsl
or
fnsave
push
inc
add
outsl
in
pop
and
icebp
jo
xlat
std
into
and
lock
fmuls
clc
add
scas
xor
icebp
outsl
shl
mov
pop
dec
shll
push
jl
test
xor
mov
outsl
dec
xlat
popf
adc
rolb
add
rorb
ds
pusha
lcall
stos
xchg
inc
mov
mov
push
and
je
adc
adc
fildll
pop
mov
push
test
sbbb
cmp
lds
mov
xor
sbb
xchg
xor
jmp
mov
jbe
dec
dec
je
add
stc
ficomps
xlat
inc
add
je
or
push
je
push
pusha
jnp
inc
inc
jecxz
fwait
je
sahf
in
ja
add
xor
jo
daa
rolb
sahf
addr16
sbb
push
fidivl
add
popf
lods
int
insb
add
lock
ror
dec
dec
sbb
roll
push
dec
cmp
je
add
mov
scas
sbb
xor
mov
mov
pop
pop
mov
jo
fdivrs
mov
out
enter
adc
adc
mov
in
sub
and
ret
jne
xchg
andl
xchg
jl
push
scas
mov
into
mov
push
push
jbe
ja
add
loopne
imul
int
sbb
jnp
scas
pop
xor
inc
push
add
inc
mov
hlt
scas
adc
add
mov
add
je
add
fldenv
pop
or
int
push
or
nop
or
inc
cmp
mulb
add
das
clc
cmp
pop
jbe
adc
or
incb
vmread
in
mov
inc
rcrl
add
inc
add
add
dec
inc
insb
shl
lcall
add
jae
push
mov
pop
mov
mov
pop
sub
icebp
popf
and
repz
mov
xor
inc
or
rorb
sub
ljmp
xor
loopne
mov
into
add
mov
aas
out
mov
fbld
loopne
xlat
mov
pop
shl
or
push
add
sub
out
cs
out
in
jle
lock
out
shr
cmp
sbb
pop
mov
sbb
adc
cmp
adc
push
jecxz
inc
and
ljmp
push
push
daa
mov
lea
mov
in
add
sbb
in
ud1
adc
mov
sub
call
fstl
jne
arpl
pop
add
rorl
mov
cmp
adc
mov
test
jae
add
sbb
test
gs
or
pop
data16
or
mov
adc
ss
mov
add
gs
decb
sbb
jne
fsubs
and
or
incl
and
mov
outsl
push
inc
cld
ja
sti
test
sti
xor
cmp
add
imul
jp
push
iret
add
je
push
sub
push
addr16
push
inc
arpl
out
mov
cmp
pop
jmp
cld
jb
xor
mov
lock
push
jle
dec
push
fisttpl
inc
mov
inc
xor
mov
mov
push
add
jle
pop
fimuls
jnp
jg
fisttpl
push
jge
push
pop
movsl
or
popa
push
ss
or
ret
dec
xchg
mov
add
std
inc
out
jge
pop
add
mov
xor
movsl
push
add
loopne
andl
push
jne
sub
test
testb
sbb
dec
sub
jmp
or
mov
add
fdivl
popa
add
add
repz
fs
sbb
xor
jae
mov
cmp
add
pop
jne
addb
pusha
jo
push
vhsubpd
lcall
inc
je
sub
idivl
gs
fbstp
xor
jl
add
jmp
mov
mov
xor
jmp
jno
pop
aad
into
insl
insb
lcall
adc
pop
xchg
out
dec
call
cs
or
enter
pop
jb
ss
fcoms
fiadds
jmp
add
sub
out
rolb
test
push
or
rolb
in
fstpt
ret
push
or
les
mov
aaa
rorb
fistpl
push
cmp
fldcw
jbe
cmpb
jl
or
inc
mov
and
or
xchg
cltd
add
cld
sbb
mov
push
test
inc
ja
arpl
mov
jne
leave
sti
cmp
js
and
loopne
pop
sbb
ret
fsubrl
inc
sbb
sarl
aam
pop
in
pop
pushf
adc
gs
aam
sub
and
in
add
add
jg
pop
cmp
mov
xchg
fwait
jl
lock
cmp
mov
fcmovnb
dec
ret
in
mov
into
dec
jmp
or
add
gs
add
mov
cli
add
pop
jno
mov
fcmovbe
insb
fstpl
adc
mov
cmp
add
imull
cmp
sub
cmpsb
pop
jo
cltd
push
stc
or
or
xlat
aam
adc
mov
enter
cs
inc
and
cmpsb
fsts
and
add
out
call
jmp
pop
sub
mov
sti
out
aas
cmpsb
shlb
loopne
push
movb
jmp
add
pop
mov
cmp
adc
sbb
add
add
mov
in
test
mov
loopne
sub
xchg
fsin
or
adc
cli
sub
pop
jmp
xchg
je
orl
les
jne
push
cmp
xor
adc
mov
addr16
push
fidivrs
mov
sbb
and
mov
iret
pop
adc
push
and
sbb
adc
or
push
cmpsb
mov
dec
lock
loopne
pop
push
cli
imul
testb
in
sbb
or
sar
repnz
cmp
xor
lock
jbe
add
jb
in
sbb
mov
cmp
notb
inc
xor
jge
xor
fsubrl
nop
jmp
adc
adc
jle
pop
test
sub
or
jl
push
adc
sbb
leave
sbb
jne
or
in
sbb
dec
sub
repz
lods
mov
add
cmp
mov
xchg
js
or
addb
mov
mov
mov
sti
outsb
add
inc
xchg
push
or
mov
sbb
inc
mov
rolb
xor
testl
inc
callw
xchg
lea
sub
sub
push
inc
and
adc
mov
push
mov
add
inc
aas
popa
xor
add
xor
push
dec
loop
inc
add
test
addr16
add
add
lock
in
pop
push
pusha
pop
adc
pop
stos
cmp
push
jo
scas
xor
push
cmp
mov
pop
inc
fcoms
inc
leave
pop
inc
push
pop
shll
stos
fcmove
das
push
addr16
test
adc
mov
mov
jg
popa
push
in
dec
in
jne
jp
test
mov
fucom
adc
dec
or
push
cs
xchg
in
inc
sahf
stc
mov
push
xor
and
and
and
cmp
and
subl
xchg
lods
insl
xor
adc
lods
cli
std
mov
sbb
ja
cmp
mov
in
lea
mov
cmpsl
adc
push
movsl
movsl
mov
incl
cmovo
arpl
mov
push
cmp
adc
add
xlat
add
cmp
and
add
rclb
xchg
mov
mov
shlb
nop
dec
or
or
pop
push
sub
sbb
movsl
mov
add
push
sar
adc
dec
push
fnsave
sub
subl
sub
jne
or
mov
or
or
jg
adcl
jle
add
in
dec
test
sbb
jg
push
cmp
mov
arpl
add
fdivrs
sub
mov
movsl
ret
ljmp
dec
sbb
or
push
roll
or
pusha
pop
pop
xchg
in
push
push
fiadds
or
sbb
add
sub
pusha
xor
push
mov
xor
fildl
jmp
inc
loop
fsubp
rclb
sbb
fimuls
mov
gs
in
push
fsubr
shrb
dec
mov
arpl
inc
mov
lret
mov
andl
movsb
or
mov
aam
jg
fsubr
pusha
cmp
scas
mov
xchg
adc
push
hlt
xchg
jp
adc
sub
inc
pusha
orl
add
cmp
lea
sub
cmp
pusha
xchg
orl
mov
add
aaa
scas
add
arpl
and
jnp
cwtl
sbb
or
adcb
pop
jne
push
mov
mov
mov
pusha
adc
fcomp
inc
adc
add
sar
cmp
jle
xchg
pushf
adc
aad
insb
inc
adc
pop
adc
and
sub
sub
sbbb
shlb
stos
aam
pop
jmp
fs
repz
inc
push
or
cwtl
push
sbb
addr16
std
cmp
fcomps
jg
and
mov
dec
mov
and
sbb
fistps
lret
lret
int3
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
fs
arpl
movsl
jl
movsl
mov
and
leave
popf
xchg
sbb
sbb
mov
lock
jle
pop
mov
icebp
iret
and
or
into
iret
add
sub
hlt
xor
ficoml
adcb
and
xor
or
xchg
mov
pop
push
pop
mov
xchg
jns
dec
stos
xchg
loopne
popa
stc
test
sub
mov
mov
push
or
insl
push
fadds
dec
push
cmc
test
push
push
lea
lock
and
or
pop
inc
sub
notb
lock
pop
orb
inc
mov
dec
jae
jne
dec
repz
fldcw
push
daa
push
rolb
xchg
out
je
push
into
clc
adc
pop
and
mov
mov
inc
adc
test
pop
das
dec
jge
add
rorb
mov
sbb
sbb
cmp
scas
adc
shlb
popa
or
mov
movl
or
jne
sbb
les
push
xchg
loope
imul
mov
incl
subl
add
pushl
lea
aam
test
cli
adc
ret
inc
push
fwait
mov
fnstcw
cld
push
jp
cmp
jmp
dec
rolb
add
jmp
cmp
rorb
fs
xchg
movl
and
cli
or
andl
pop
je
fwait
adc
push
mov
cmp
jbe
xchg
mov
pop
fsubrs
mov
sbb
not
and
cltd
mov
stos
roll
icebp
xchg
pop
lock
push
and
rcl
push
mov
push
popf
cmp
push
outsb
adc
sbb
add
xlat
adc
add
xchg
stos
add
or
add
dec
ret
push
sub
pop
je
adc
adc
sbb
lds
xchg
cwtl
rcr
xchg
adc
mov
xor
sldt
or
sub
inc
mov
mulb
lahf
dec
pop
fprem
pusha
ljmp
lock
lret
sub
les
push
je
adc
addr16
pop
insb
xchg
cmp
sub
cwtl
testl
popf
and
sbb
outsl
xor
push
das
adc
inc
cld
dec
stos
add
and
testb
inc
or
enter
leave
jb
add
and
outsb
xor
inc
adc
jne
pop
pop
and
dec
or
and
adc
add
rorb
int3
mov
cmp
and
add
mov
mov
push
push
loope
xor
scas
push
add
mov
test
xchg
push
pop
mov
shr
cli
and
sub
or
add
fistps
cmp
xor
mov
add
loope
mov
push
out
mov
int3
push
mov
daa
inc
push
or
rolb
sbb
add
and
out
or
insb
push
add
add
ds
adc
adc
push
push
lods
loop
xchg
jne
inc
adc
or
sahf
jne
mov
pop
mov
sbb
leave
out
cmp
adc
sbb
and
mov
rol
and
ret
pop
mov
jge
mov
adc
or
jmp
and
scas
add
xor
ret
mov
adc
push
sub
jl
push
sarl
jmp
xchg
inc
outsl
mov
mov
enter
or
push
outsl
data16
popa
jb
pop
dec
imul
imul
inc
jne
pop
outsb
je
gs
sti
pushl
imul
dec
outsb
arpl
fisttps
std
in
push
outsb
pop
jae
popa
insb
insb
pop
push
and
sbb
outsl
lcall
or
imul
push
jb
es
popa
je
aam
jb
rorl
jne
mov
mov
dec
xor
lods
movsb
add
xorl
dec
rorl
and
or
sarb
pusha
inc
pop
dec
dec
mov
and
jne
lcall
add
dec
sarb
sbb
adc
push
enter
jae
and
xor
testb
add
out
adc
adc
and
add
or
add
scas
inc
adc
add
or
or
imul
imul
lods
data16
std
mov
add
and
jo
jb
addr16
xor
out
add
and
imul
fs
les
inc
neg
jnp
push
pop
imul
ja
jl
mov
adc
scas
dec
shll
xor
xor
shll
push
arpl
cmp
mov
and
xor
add
xor
xor
add
and
jo
sti
ficoms
xchg
pushl
jmp
aas
cmpsb
imul
xlat
popf
roll
add
add
lcall
sbb
imul
jecxz
and
ret
push
lahf
or
xchg
mov
cmpsl
stos
sbb
add
or
jg
in
push
incl
xor
pop
pop
inc
dec
dec
inc
inc
in
decl
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
dec
push
push
inc
push
push
push
std
xchg
addr16
sysret
cwtl
mov
iret
jne
addb
enter
daa
das
in
sub
aaa
xor
std
shr
in
ja
in
roll
aas
pop
mov
or
lock
xor
push
adc
sub
dec
jae
sahf
cmc
jae
lods
sub
out
xchg
prefetch
out
dec
fwait
and
push
dec
mov
negb
cmp
sub
add
leave
jnp
in
leave
mov
pop
mov
jb
inc
imul
sbb
pop
or
ret
push
push
adc
add
dec
inc
xchg
insl
mov
xchg
dec
dec
dec
adc
in
divb
xor
cmp
sub
insb
je
xchg
insl
fildl
imul
in
out
aaa
daa
aaa
outsb
outsl
je
add
ljmp
mov
and
insb
sub
add
jae
cmp
mov
lods
lock
jo
and
jb
and
shrl
movsl
arpl
and
sub
xor
sub
pop
leave
pop
jnp
das
pop
push
fsub
pop
ret
idivl
pop
pusha
fldt
fs
sub
insl
xor
inc
and
gs
inc
mov
push
and
cmp
je
mov
imul
push
or
pop
xor
mov
mov
mov
add
add
addr16
test
xor
dec
out
or
adc
insl
jae
cs
inc
sub
jno
jne
iret
inc
clc
sub
xor
shrw
add
out
daa
sbbl
and
jae
out
mulb
inc
sub
and
dec
imul
ja
inc
push
and
push
mov
dec
pushf
aam
addr16
fdivrl
imul
ds
sahf
loopne
outsl
pop
mov
add
dec
rclb
push
adcl
inc
cmp
dec
dec
add
arpl
inc
dec
add
test
add
push
gs
xchg
dec
outsl
jbe
mov
fldt
add
je
popa
addb
mov
jne
adc
jle
fwait
les
mov
addr16
outsl
js
pop
pop
fidivl
mov
test
dec
out
sbb
push
dec
inc
dec
pop
dec
sbb
xchg
pop
push
scas
lret
iret
sub
xchg
add
add
add
add
insl
into
push
mov
addl
pop
push
fldl
or
adcb
adc
mov
push
scas
into
inc
add
loop
sbb
call
xchg
subb
add
dec
jae
je
decl
inc
insb
popa
jae
add
and
cmp
inc
inc
insb
insb
xchg
insl
cmp
jae
push
add
jle
lahf
adc
jb
dec
inc
dec
popa
mov
push
pop
or
xchg
push
je
dec
add
addb
lock
add
mov
sar
add
mov
inc
mov
jb
push
push
jg
leave
leave
dec
add
add
fdiv
fidivrs
adc
and
add
pop
shl
pop
xor
outsl
pop
add
mov
push
mov
out
add
pop
dec
das
and
fxch
iret
scas
dec
lcall
lods
add
imul
pop
js
cmpsl
add
aas
dec
jae
aad
add
cmp
fildll
push
jne
ds
push
sbb
mov
outsb
divb
aaa
adc
sbb
and
or
stc
ja
imul
adc
adc
clc
push
mov
pop
push
jae
cmp
mov
xor
popf
cmp
fwait
or
imul
push
ds
inc
outsl
insl
insl
push
adc
inc
imul
adc
jl
out
inc
dec
and
add
jae,pt
inc
cmc
push
cld
xor
inc
jnp
inc
dec
dec
sub
xor
and
jae
gs
sub
pop
pop
arpl
popa
add
sub
push
jb
push
jns
shrb
sub
jae
arpl
fnsave
jo
mov
jb
imul
cmp
lock
jle
push
push
push
lods
or
dec
inc
inc
dec
push
pop
icebp
and
in
xor
cmpsl
insl
jae
je
jae
sbb
lahf
mov
mov
push
push
push
dec
pop
sti
popa
and
inc
push
ds
jo
lods
xor
imul
aad
fldl
je
add
sub
add
pop
pop
inc
and
pop
xor
and
je
xor
and
in
orb
dec
std
jne
daa
fdivs
push
or
push
mov
adc
or
or
insb
mov
sbb
dec
jne
bound
pop
inc
pop
bound
cmp
push
into
push
sub
shrb
fsubrs
or
fwait
lds
or
popa
cwtl
mov
or
pop
xchg
fldl
cwtl
arpl
and
in
mov
outsl
and
pop
cltd
mov
jnp
mov
sti
arpl
pop
cmp
cmp
sarl
pusha
pop
and
dec
jns
xor
sub
pop
psubusb
fsubrs
arpl
and
or
movsb
or
push
inc
jo
mov
push
push
push
jns
insl
and
std
jbe
lea
or
and
fcomps
ss
add
inc
aaa
sub
gs
or
dec
ss
jae
frstor
jmp
jle
int3
popa
jns
cmp
scas
push
push
es
mov
jnp
bound
int3
adc
jne
jns
inc
jbe
fwait
jae,pn
xchg
dec
addr16
jb
rol
pusha
das
lea
cmpl
sub
and
outsb
and
addb
mov
push
add
or
push
jnp
fs
inc
mov
imul
sbb
pop
sub
js
jp
outsl
scas
xchg
jg
call
dec
add
ret
inc
and
inc
xor
das
push
pusha
lods
jmp
repz
dec
add
pop
sub
rcrl
gs
ud2
add
je
outsb
in
imul
inc
mov
addr16
arpl
arpl
fcoms
nop
or
data16
popa
cmp
lret
fwait
rdmsr
xor
mov
lcall
orb
es
or
imul
mov
xchg
add
in
or
ud0
push
leave
and
mov
popa
lret
dec
sub
xor
or
dec
cmp
adc
inc
rorb
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
ljmp
fsubrs
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwtl
push
ljmp
mov
xchg
cmp
daa
mov
sti
movsl
and
xchg
sub
incl
mov
cmpl
lods
xor
out
test
pop
or
insl
xor
daa
jg
pushl
sar
push
mov
dec
dec
jno
dec
sbb
sti
push
test
cmp
ljmp
cmpb
lahf
popf
sti
testb
sti
icebp
cmpsb
jns
hlt
idivb
loope
jmp
in
int
call
ret
pushl
xchg
insl
inc
xor
dec
add
scas
push
lds
stos
push
andb
sbb
lds
test
sub
popf
mov
js
dec
push
mov
mov
mov
movsb
idiv
decl
jge
or
lret
or
stos
xchg
js
mov
jl
nop
adc
jne
fstl
call
mov
adc
sti
shlb
inc
lahf
pop
or
pop
sarl
push
pushaw
fcompl
xor
dec
or
push
fadds
movsl
lods
and
fs
std
daa
movsl
dec
loopne
mov
pushl
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
add
lcall
cltd
inc
inc
push
nop
sub
xchg
out
mov
push
add
call
ds
in
cmp
repz
notl
xor
loop
repz
pop
lock
call
lret
ds
xchg
dec
addl
shr
mov
sti
fsubr
loopne
mov
pop
std
int
sbb
pusha
aaa
dec
xor
leave
jle
jbe
jmp
dec
ja
call
add
loope
lds
xchg
sub
mov
cmp
inc
cmp
call
pop
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdivs
sub
fwait
aaa
aas
fwait
imul
adc
pop
dec
in
xchg
or
lock
push
cli
mov
call
adc
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
insl
lods
clc
xlat
and
loop
ljmp
push
push
xlat
add
jg
jmp
fisubrl
and
fst
loop
add
mov
test
ds
mov
cmpsl
stos
jge
mov
out
stos
int3
sarb
pusha
mov
fwait
jno
negl
pop
inc
jne
sbb
xor
sub
pushl
jno
cltd
nop
mov
lea
imull
leave
push
inc
out
dec
repnz
dec
jmp
or
pushf
ror
and
jnp
pusha
inc
jg
inc
jb
jg
pop
shll
xchg
push
inc
insb
xchg
xor
and
lds
dec
fwait
adc
pop
adc
lcall
sbb
insl
fcomps
and
pop
push
sbb
sqrtps
push
xor
popf
call
mov
xchg
and
int
and
jmp
sub
jns
test
rcll
ljmp
int3
mov
push
lods
adc
ror
imul
jl
out
fcmovnb
lret
mov
out
lock
jmp
ljmp
movsl
lock
mov
daa
stc
les
mov
lea
pushl
test
mov
mov
lods
call
push
or
ljmp
push
data16
fidivrl
mov
mov
divl
xlat
add
add
loope
mov
scas
imul
imul
lret
scas
imul
sbb
add
pop
shll
les
ds
mov
add
add
lock
shlb
popl
jmp
xor
test
fildll
rorl
scas
imul
mov
cmpsb
pop
mov
pop
scas
sti
aaa
add
loop
mov
mov
flds
xchg
outsl
add
rcrl
jno
pop
xorl
pop
imul
xlat
xlat
out
add
pop
scas
pop
out
lods
inc
mov
xlat
in
adc
dec
xlat
xor
mov
pop
mov
xor
or
xlat
add
sbb
hlt
push
pop
add
jne
andl
add
add
push
fmuls
ja
sub
jne
data16
mov
adc
sbb
pop
push
push
pop
xlat
xor
sahf
pop
stos
add
ja
pop
in
and
jae
push
mov
add
add
mov
sbb
add
and
ret
fstpt
aas
add
push
scas
add
stos
jmp
aad
arpl
out
sub
cmpsb
cmp
add
add
mov
jne
rorl
xchg
testb
push
pop
xlat
pop
ja
lret
or
mov
imul
int3
xchg
pop
imul
pop
ja
add
rclb
pop
ss
dec
add
cltd
add
mov
mov
pop
cmpsb
lret
add
cmc
xor
aas
add
scas
cmp
adc
test
jmp
add
mov
and
pop
shll
dec
daa
popa
add
sti
adc
fstpt
or
out
mov
cli
or
sub
shll
pop
sub
xor
dec
push
scas
cmp
mov
mov
cmpsl
push
sbb
add
out
mov
daa
das
pusha
jle
jne
mov
psllq
add
jg
jmp
sbb
or
jbe
xor
scas
pop
into
or
xor
divl
jmp
adc
xchg
ss
xlat
pop
and
iret
cmp
pop
cs
pop
repz
add
pop
cmpl
imul
jne
jge
in
mov
inc
pop
or
lods
cmpsb
jmp
pop
sub
xor
repnz
clc
pop
out
shlb
xchg
add
scas
imul
frstor
insb
mov
pop
jnp
or
pushf
lock
inc
pop
inc
pop
add
cmp
cmpsl
or
mov
outsb
outsl
adc
or
test
cmp
mov
ret
xor
leave
roll
add
jne
mov
pop
out
add
add
push
mov
pushf
imul
loope
fstl
insb
ja
pop
sarl
adc
push
pop
add
lcall
pop
jbe
push
popl
mov
pop
aaa
dec
jecxz
adc
pop
pop
fiadds
sbb
jae
mov
inc
xlat
mov
pop
mov
rorb
jno
imul
out
add
fisttpll
cmp
add
add
mov
pop
cmp
pop
cmp
jne
incl
sub
add
aas
pop
and
adc
outsl
xchg
add
cmp
pop
fists
adc
jmp
sbb
or
testl
add
cmp
fwait
mov
fiaddl
push
cmpsb
jmp
flds
push
pop
je
aaa
pop
shl
xor
mov
test
cltd
stos
roll
scas
pop
add
insb
jnp
sbb
xor
pop
movsl
add
cwtl
jae
cmp
iret
or
lret
pcmpeqd
pop
insb
aas
fiadds
cmpsb
imul
stos
gs
xchg
lret
push
add
test
add
or
xchg
lret
rcll
push
jae
pop
stos
mov
jmp
jmp
aad
aad
push
imul
scas
arpl
sarb
pop
and
or
pop
adc
imul
sbb
jbe
inc
stos
and
pusha
ja
and
add
fisubrl
es
add
je
outsl
fs
bound
insl
push
jle
fbld
and
mov
je
outsl
daa
add
jo
dec
divb
pop
jns
bound
jae
push
fldenv
bound
and
xchg
mov
pushf
push
add
xchg
pop
nop
addb
pusha
push
adc
jecxz
mov
and
pshufw
data16
sbb
jbe
pop
jo
xor
fsubrs
stos
or
and
lods
insl
das
jnp
pop
mov
and
in
adcb
inc
pop
ret
add
rorl
das
ficomps
or
pusha
inc
or
push
add
push
jae
push
pusha
sbbl
and
push
or
or
enter
add
orb
push
aaa
enter
pop
sbb
dec
push
cmp
xor
or
push
adc
and
and
lock
enter
adc
orl
jecxz
sub
xor
and
or
andl
leave
and
push
sbb
pop
pop
sbb
push
sbb
push
sbb
insb
sbb
sub
or
nop
inc
push
mov
inc
push
sbb
push
adc
sbb
jb
sbb
les
bound
fs
inc
and
addb
inc
push
sbb
pop
sbb
sbb
jp
sbb
aam
push
fs
inc
sub
mov
lcall
rclb
jbe
push
sbb
clts
sbb
lods
push
sbb
xchg
fs
inc
push
or
nop
inc
push
sbb
fs
pop
push
sbb
cs
nop
rcrl
dec
cld
inc
push
popa
dec
call
adc
pushl
nop
inc
xchg
and
sbb
addl
pop
inc
xchg
xchg
jns
xchg
shrb
sbb
mov
mov
repnz
inc
ss
add
dec
push
sbb
jne
lret
sbb
stos
push
sbb
test
push
sbb
sbb
dec
jge
fiaddl
sbb
sub
inc
or
dec
push
cli
push
adc
fs
push
ret
jae
sbb
arpl
fs
inc
push
cmpsb
add
inc
out
fs
push
sbb
xchg
jnp
dec
push
sbb
imul
or
sbb
mulb
fs
pop
ja
dec
push
sbb
into
addr16
inc
push
sbb
scas
pop
dec
push
sbb
out
dec
push
sbb
sahf
dec
push
sbb
fmulp
push
sbb
das
mov
xchg
lahf
pop
dec
decb
mov
loope
xchg
or
inc
shll
icebp
leave
or
inc
leave
test
xor
inc
stc
lds
xchg
or
in
and
mov
push
xor
push
lods
in
push
xor
inc
leave
mov
or
mov
push
xchg
rcll
or
repz
leave
push
xor
stos
jmp
xchg
or
sti
xchg
or
inc
cmpsl
inc
leave
push
xor
xchg
xlat
xor
push
xor
xchg
or
inc
out
lahf
inc
leave
push
xor
mov
jge
add
setp
cmp
fisttps
add
jns
push
inc
pop
inc
aas
sarl
pop
add
jae
pop
and
into
sahf
cmpsb
pop
push
add
fs
inc
sbbl
cmp
push
popa
in
nop
xchg
pusha
add
xor
cmp
xor
adc
insb
and
add
xor
imul
jae
imul
sbb
jne
jae
jb
bound
daa
dec
mov
inc
and
and
xchg
adc
or
jns
adc
adcl
mov
outsl
fldcw
cmp
rep
add
add
pmaxsw
jmp
lcall
ljmp
cwtl
push
pusha
pop
int
sbb
dec
add
jae
les
lea
mov
mov
xchg
or
mov
dec
dec
or
or
add
sbb
adc
jnp
push
cmp
iret
push
adc
or
adc
pop
and
cmovno
push
sbb
push
pop
push
pop
push
sbb
pop
pop
jnp
pop
insl
gs
xchg
and
pusha
fists
addl
sbbb
test
xchg
sub
fsubs
dec
push
ret
xlat
or
pop
add
add
test
inc
incl
lock
and
sub
sbb
inc
sbb
mov
pop
lock
sub
int
pop
inc
cmp
and
sbb
xchg
adc
addl
adc
add
and
push
xchg
lock
cmp
fidivrl
lods
roll
out
inc
cwtl
add
addl
mulb
add
pusha
cmpb
das
cmpsb
out
iret
pop
mov
cld
inc
jle
and
fisubl
flds
das
cld
fisttps
iret
mov
in
call
jnp
jle
or
in
ficompl
pop
pop
fisubrl
xor
fcomp
loopne
cmp
jle
shlb
dec
rorl
sbb
and
add
and
nop
xchg
xchg
sbbl
sbbb
mov
or
xor
xor
or
or
sbb
mov
lcall
adc
sub
cmpsb
xor
cld
sbb
aam
shll
sbb
xor
shll
sub
sbb
ja
dec
rorl
or
pop
clc
sbb
hlt
mul
add
push
push
push
jne
das
lret
inc
aas
insb
mov
lret
mov
add
clc
sbb
jmp
jnp
mov
repz
dec
insl
add
lcall
ja
mov
lret
cmpsb
imul
dec
mov
je
cld
sarb
fdivrs
xor
jo
inc
pop
imul
pmulhuw
lret
out
jg
add
in
pop
jb
add
or
in
sahf
push
ret
mov
adc
aas
stc
and
mov
leave
sbb
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
pushl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
pushl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
fldl
xchg
and
and
mov
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
icebp
aas
call
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
pushl
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
jmp
pop
sarl
jl
mov
das
lea
mov
inc
and
movsl
jmp
jmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
adc
mov
call
cmp
decl
in
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
sub
enter
fmuls
jb
add
add
push
push
mov
add
enter
rcll
push
mov
sub
imul
insb
daa
rolb
nop
and
xchg
out
enter
add
cld
sub
aas
add
push
cvttps2pi
and
sbb
out
xor
add
sub
pop
cwtl
call
mov
pusha
iret
inc
cmpsl
add
jg
push
pop
push
add
stos
addb
sub
rcrb
xchg
inc
push
dec
outsl
fs
gs
data16
js
adc
inc
js
or
jb
sub
lahf
inc
cwtl
sbb
gs
fadds
adc
daa
imul
dec
jae
popa
fs
sub
fisttpll
fidivs
push
outsb
push
gs
mov
fs
pop
mull
sti
lahf
push
pshufw
sbb
dec
dec
push
or
or
cmp
inc
jnp
add
roll
push
pop
push
or
push
neg
add
das
sbb
lds
dec
inc
push
or
addr16
or
popa
jo
push
push
shrb
fisubrs
stos
cwtl
sub
adc
sub
addps
mov
push
in
adc
daa
inc
or
or
outsl
jns
push
rorl
inc
insb
leave
ss
add
dec
jge
mov
test
cmp
push
outsl
lret
pusha
ret
push
sbb
adc
mov
dec
mov
mov
ret
add
sbb
dec
shrd
insb
aas
ja
or
adc
lods
fistpl
push
ss
in
cmp
js
adc
movsl
arpl
push
and
sub
add
sbb
and
dec
inc
je
ss
jne
jae
adc
push
xor
sbb
add
pop
add
add
or
xor
push
gs
push
cmpsb
data16
fisubl
pop
adc
dec
xchg
jno
jp
imul
lds
or
push
popa
je
mov
mov
adc
data16
nopl
je
jns
mov
mov
addl
xchg
lods
adc
push
stc
shl
inc
outsl
jb
fs
xchg
subl
xchg
lcall
fs
jne
jmp
rclb
int
add
insb
fsts
or
inc
mov
push
push
push
outsl
addr16
and
outsl
movsb
aaa
inc
fs
das
inc
add
fcomps
lock
and
xchg
or
rorb
jb
push
outsl
mov
andb
shl
xor
fmulp
lock
cwtl
push
popa
prefetch
or
fstps
adc
je
jbe
cwtl
pusha
fldenv
arpl
addr16
dec
cmp
mov
and
fisubrl
and
push
add
in
ret
jne
and
push
and
data16
sbb
scas
dec
jnp
ja
push
lahf
jne
or
push
mov
jns
adc
sbb
xor
or
popf
and
fildll
insb
outsb
fs
push
sbb
loope
int
pop
sarb
add
ret
arpl
add
or
cmp
dec
dec
inc
mov
test
sbb
aas
rcrl
pop
shlb
iretw
mov
call
lret
lock
bound
cmp
add
mov
xor
inc
mov
movsl
test
sbb
xor
inc
dec
pushf
or
unpckhps
inc
mov
sbb
push
and
mov
xchg
int
cmp
push
enter
xor
data16
push
sub
dec
inc
lcall
jnp
mov
push
push
outsl
push
adc
push
dec
jb
fisttpll
mov
mov
fwait
cmovnp
jae
add
idivb
imul
push
mov
dec
negl
or
test
adc
jmp
push
subb
fimuls
push
add
jne
jmp
lods
pushf
int
push
push
adc
dec
addr16
pusha
and
aad
mov
inc
sub
sbb
sub
test
arpl
and
jo
pop
adc
int
xor
jne
hlt
call
inc
pushf
das
jle
xor
dec
ja
add
insb
xchg
inc
ds
mov
dec
arpl
mov
fs
sbb
mov
jmp
push
mov
cmp
push
mov
push
into
xchg
mov
js
insl
mov
out
cmp
dec
xor
ret
lods
sbb
mov
inc
insb
aas
icebp
sbb
sbb
xor
xchg
cmp
add
lods
add
and
stos
inc
loopne
shl
add
mov
sbb
jae
inc
rol
fiaddl
fildll
mov
pop
js
icebp
inc
adc
dec
js
push
movsl
push
int
pop
jnp
cmpsb
outsb
mov
fimull
mov
adc
push
xchg
outsb
ret
insb
mulb
and
xor
popl
ja
jno
mov
jecxz
ret
scas
jnp
orb
insl
ret
loopne
shll
fld
mov
jns
bound
orb
jb
std
sahf
pop
mov
and
sbb
insb
or
int
and
adc
adc
cmp
sub
sbb
xor
sub
mov
or
inc
mull
rclb
and
outsb
sbb
add
push
dec
sub
mov
xorb
add
gs
ret
xlat
jae
adc
push
push
mov
adc
jb
mov
movsl
xor
or
das
sbb
cmc
sbb
lea
insb
sub
xor
jl
enter
call
fwait
add
push
fstpt
enter
imul
mov
inc
jp
dec
aam
cmp
cmc
xor
inc
sbb
or
pop
stos
add
mov
ret
add
or
push
fldl
or
mov
mov
or
and
cld
sbbl
fistpl
push
add
mov
and
cmp
push
cmpsl
cmp
sub
push
je,pn
xlat
sub
and
mulb
lods
cwtl
mov
dec
lahf
pop
pusha
cs
add
sti
xor
add
inc
cs
popf
out
adc
pusha
pop
daa
xor
pusha
fwait
rorb
or
lods
lods
fs
dec
mov
loopne
inc
and
movsb
int
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
addb
add
or
add
dec
add
sbbb
add
mov
add
add
add
add
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
add
add
or
add
repnz
sub
add
or
add
repz
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
or
add
add
add
add
add
add
jo
add
push
add
add
add
add
add
add
add
addb
add
or
add
movb
add
add
add
add
add
add
movb
add
add
add
add
add
add
add
add
add
jp
add
or
add
add
add
movb
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
clc
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
aaa
add
add
mov
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
mov
add
push
or
add
mov
or
divl
ja
jg
jo
add
lahf
jo
add
add
or
add
cltd
cltd
add
add
add
cltd
cltd
nop
add
add
add
add
add
add
add
add
add
add
add
incl
add
pop
add
lock
add
rolb
add
add
add
pop
add
jg
add
aas
add
clc
pop
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
clc
mov
add
adc
add
and
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
sub
add
cmp
test
cmp
mov
pop
add
pop
imul
mov
data16
pop
jo
mov
pop
jp
movsb
outsl
jge
cmpsb
jb
add
pop
ja
adc
pop
out
sbb
ljmp
pop
out
and
add
in
add
fs
add
insl
in
add
imul
add
jnp
add
out
add
lock
jnp
add
arpl
add
imul
add
js
add
jnp
add
jp
add
jge
add
out
add
lock
call
add
add
icebp
add
repz
hlt
add
add
xchg
add
xchg
mov
mov
mov
add
adcb
roll
add
sbbb
fmuls
test
ficompl
scas
add
cltd
mov
loopne
mov
jecxz
mov
add
stos
mov
add
mov
lds
test
lock
scas
ret
mov
add
mov
add
mov
add
mov
add
int
add
ror
in
ror
in
ret
roll
in
roll
out
aam
out
int3
fadds
test
add
rcr
add
aad
add
loopne
repz
add
loope
add
in
add
repnz
add
idiv
add
clc
stc
add
add
add
ss
add
add
add
add
add
push
sub
inc
ss
add
add
add
or
aas
aas
sub
dec
ss
add
add
dec
push
dec
inc
aas
inc
inc
add
inc
or
sub
pop
pop
pop
gs
push
dec
inc
add
es
pusha
imul
gs
pusha
pop
add
add
add
gs
pop
push
xor
add
xor
sub
add
add
add
add
push
and
and
add
add
add
add
sbb
pop
adc
adc
add
xor
sbb
add
add
pop
push
xor
add
add
add
incl
add
pop
add
lock
add
rolb
add
add
add
pop
add
jg
add
aas
add
clc
pop
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
pusha
test
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
addb
add
add
add
add
add
xchg
addb
add
add
add
add
or
add
add
add
mov
mov
mov
add
add
add
ja
mov
js
add
add
mov
ja
mov
adcb
add
jg
ja
mov
or
ja
divl
mov
ja
ja
ja
ja
pushl
mov
add
ja
ja
push
ja
ja
ja
add
ja
pushl
push
ja
ja
ja
add
ja
push
ja
decl
add
pop
ja
jg
lahf
pushl
jg
add
add
add
add
ja
cltd
pushl
add
or
add
cltd
cltd
cltd
cltd
add
add
cltd
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
cltd
add
cltd
cltd
cltd
cltd
cltd
cltd
nop
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
add
clc
pop
jmp
pop
incl
add
cld
add
jg
add
pavgb
add
rolb
add
add
inc
add
add
add
rolb
add
add
add
add
add
add
ud0
add
clc
pop
push
ud0
loopne
inc
add
incl
add
push
ud0
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
aaa
add
and
add
sub
popf
sub
sub
dec
add
xor
test
xor
cmpsb
xor
push
add
aaa
push
add
cmp
cmp
scas
cmp
lods
cmp
add
cmp
pop
add
inc
pop
add
inc
pop
add
dec
add
dec
imul
dec
imul
push
insb
add
insb
add
push
jb
mov
pop
jo
mov
popa
jp
mov
push
imul
push
outsl
add
push
jno
lds
ret
add
pop
jl
les
add
pop
jl
ret
bound
pusha
jg
shll
popa
jg
adc
add
loopne
adc
add
dec
call
add
pop
out
sbb
add
pop
ljmp
popa
jecxz
and
and
add
gs
add
ljmp
je
add
jne
add
jb
add
jp
add
jp
add
je
add
jnp
add
out
add
out
add
lock
popa
addb
addl
ret
add
push
test
les
add
push
add
insl
mov
shlb
add
insb
xchg
aam
mov
shll
jno
add
jno
add
jb
add
jno
add
jne
add
jg
add
jns
add
jle
add
ja
add
jp
add
jns
add
jge
add
sbb
cmp
fldl
dec
xchg
add
jecxz
inc
sub
dec
test
add
jmp
add
jmp
add
call
add
add
lock
lock
icebp
add
icebp
add
lock
repnz
repnz
out
imul
popa
lcall
jae
hlt
add
cmc
add
repz
adcb
lret
mov
add
sbbb
rorl
pushf
add
mov
add
mov
add
xchg
movsb
add
xchg
cmpsl
add
nop
test
add
xchg
stos
add
xchg
lods
add
cwtl
scas
add
cwtl
mov
add
lahf
mov
ficomps
mov
add
xchg
lods
add
popf
mov
lock
mov
mov
fisubrs
mov
loop
mov
add
stos
mov
add
scas
mov
add
mov
add
scas
roll
lods
rolb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
int
in
mov
les
idivl
cmc
add
lret
mov
clc
add
sar
add
ror
in
lret
add
ret
in
rcl
in
roll
out
aam
out
enter
int3
fadds
icebp
into
fiaddl
jmp
xlat
add
faddl
icebp
rcr
add
xlat
in
add
testb
fdiv
add
cli
add
fdivr
add
fdivr
add
add
shl
add
loopne
icebp
fabs
add
fsub
add
fsub
add
fnsetpm(287
add
fucom
add
fucom
add
loope
add
loop
add
loope
add
out
add
call
out
add
loopne
add
loope
add
in
add
out
add
ljmp
out
in
testb
in
cli
add
out
cld
add
in
lock
in
icebp
add
icebp
sti
add
lock
add
repnz
add
hlt
testb
div
add
hlt
cli
add
idiv
add
stc
cli
add
incb
add
or
sub
add
sbb
or
sbb
int
sub
add
add
adc
pop
or
add
cmp
sub
add
push
pop
xor
adc
es
daa
pop
scas
rol
pop
add
add
sbb
xor
es
sahf
pop
cmp
rcl
fs
add
add
add
cs
daa
and
sahf
mov
xchg
rol
xchg
add
add
add
pop
aaa
xor
push
adc
lods
sahf
xchg
mov
outsl
lods
rol
add
add
push
pop
sbb
pop
popf
mov
sarl
mov
push
data16
adc
and
mov
mov
rcr
fsubp
shlb
mov
pop
pop
adc
pusha
sbb
pop
xchg
cmpsl
mov
mov
mov
rol
fucomip
in
faddp
mov
mov
aaa
cmp
mov
shl
lock
shl
lock
clc
lock
rcl
in
rcl
mov
add
mov
clc
lock
in
clc
clc
lock
shll
xchg
add
add
xchg
mov
lock
in
sti
sti
clc
lock
mov
outsl
mov
mov
fsubp
jbe
out
lock
fidivrs
add
add
cmpl
add
mov
add
ja
mov
add
add
orl
jae
jbe
jge
addb
jnp
add
dec
dec
push
push
push
push
push
push
push
push
push
push
dec
jne
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
je
add
add
dec
dec
dec
dec
dec
inc
aas
inc
inc
inc
inc
inc
inc
aas
cmp
inc
inc
inc
inc
inc
cmp
add
add
inc
inc
inc
inc
inc
cmp
add
add
mov
xchg
mov
mov
mov
flds
mov
leave
leave
leave
leave
fildl
mov
leave
leave
enter
add
add
jns
jns
jns
clc
pop
inc
pop
incl
add
cld
add
jg
add
xadd
add
addb
add
add
add
add
add
add
add
add
ud0
add
clc
pop
push
ud0
loopne
inc
add
incl
add
push
ud0
lock
lock
lock
lock
lock
lock
lock
lock
lock
mov
add
add
add
add
add
add
add
or
add
add
orb
add
add
add
add
add
add
add
sbb
nop
sbb
cmp
xchg
pop
cmp
xchg
and
add
and
add
and
add
es
add
sub
mov
sub
dec
add
xor
test
dec
add
xor
scas
xor
test
xor
push
add
cmp
lods
cmp
scas
cmp
add
xor
pop
add
ds
add
inc
pop
add
inc
add
add
add
push
outsl
add
push
jae
mov
dec
imul
lds
add
push
jae
lret
add
pop
ja
int3
pop
ja
ret
pop
jnp
int3
pop
jnp
rcrb
add
pusha
jg
adc
out
or
add
fldl
or
add
fildl
or
roll
adc
add
pop
xlat
add
push
flds
adc
push
filds
adc
add
data16
push
outsl
filds
and
add
imul
sub
add
jnp
add
jns
add
jl
add
dec
in
push
inc
in
adc
inc
call
add
dec
ljmp
push
jecxz
adc
add
push
ljmp
pop
jmp
and
sbb
jecxz
pop
imul
add
addr16
and
jecxz
sub
add
pusha
jmp
sub
add
in
add
insb
in
add
jno
add
je
add
loope
sub
loope
and
add
in
add
jb
add
outsb
repnz
je
add
jge
add
jge
add
lock
bound
add
push
mov
lret
insb
mov
int
mov
shlb
add
arpl
add
push
lea
fsubrs
into
jno
add
jae
add
jne
add
je
add
js
add
jnp
add
jge
add
jle
add
xchg
add
sbb
ss
add
loop
xor
sub
cmp
out
add
xor
inc
sub
add
lock
icebp
add
hlt
add
add
repz
lock
add
repz
repnz
hlt
add
repnz
repz
repnz
cmc
add
hlt
add
hlt
add
hlt
add
cmc
add
hlt
add
testb
mov
add
sbbb
loop
popf
add
test
add
xchg
add
mov
add
cltd
mov
in
mov
add
mov
add
popf
mov
out
cwtl
mov
repnz
mov
loop
mov
loop
mov
add
cmpsl
mov
add
test
add
movsl
mov
add
mov
add
mov
add
mov
testb
mov
clc
add
lods
roll
lods
roll
lods
rolb
mov
add
mov
add
mov
add
mov
lds
cld
mov
add
mov
int3
add
stc
add
clc
add
iret
testl
movsb
sar
add
stc
add
rcl
out
roll
out
aam
out
enter
repz
lret
fadds
lock
fiaddl
icebp
rcr
add
stc
add
add
add
loopne
hlt
fnsetpm(287
add
loopne
add
out
add
in
add
call
jmp
add
ljmp
jmp
in
lock
cmc
std
add
icebp
hlt
add
stc
cli
add
incb
add
sub
sub
add
add
syscall
add
pop
push
add
sub
xor
adc
jns
sysret
add
cmp
mov
out
in
or
add
sub
xor
and
add
mov
mov
push
or
add
jle
or
add
add
test
sub
jmp
push
add
add
sbb
sbb
adc
or
jg
jns
emms
mov
in
jmp
ja
add
adc
add
ss
ja
aaa
sub
add
jns
mov
stos
in
in
jmp
sub
sub
add
add
add
sbb
cmp
sub
jns
ja
aaa
sub
add
ss
mov
mov
into
in
jmp
sub
add
add
add
pop
or
mov
add
cmpb
aaa
sub
add
mov
mov
sub
jmp
jns
push
add
add
sbb
rcl
rorb
add
ja
aaa
sub
adc
mov
mov
mov
push
jns
in
jmp
mov
add
add
cmp
ret
add
add
add
and
adc
sar
cmc
into
mov
mov
mov
mov
das
mov
out
mov
add
mov
add
add
jns
sub
sub
in
stos
mov
jmp
mov
mov
sub
into
mov
add
xor
mov
jle
add
sbb
cmpb
jmp
jmp
out
lock
in
mov
mov
mov
das
aaa
aaa
add
rdmsr
mov
xchg
and
and
sub
mov
mov
into
rcl
in
jmp
lock
div
shlb
mov
add
rdmsr
xchg
cmpl
into
aam
in
jmp
lock
in
ror
into
aam
cmc
cmc
cmc
cmc
div
jmp
mov
mov
mov
push
xorb
test
cmc
cli
cmc
out
jmp
cld
cli
div
in
shl
out
cmc
cmc
out
jmp
mov
mov
push
xchg
xlat
lock
cld
cli
imul
jmp
cmc
idiv
std
cld
cli
div
lock
out
jmp
jmp
cmc
jmp
aam
jns
add
add
aaa
mov
xlat
out
idiv
cli
imul
jmp
cmc
cli
cld
std
cld
cli
div
lock
cmc
imul
mov
sub
idiv
jmp
add
add
ja
jns
lock
std
cli
cmc
out
jmp
cmc
idiv
std
cld
cli
div
lock
jbe
add
or
mov
add
jns
cli
imul
jmp
cmc
cli
cld
inc
dec
std
cld
cli
div
out
jns
add
stos
out
cmc
mov
add
out
cmc
testl
div
lock
cmc
lock
ja
mov
movsl
xchg
dec
cli
div
lock
xchg
add
movsb
stos
test
addl
add
inc
xchg
movsb
cmpsl
stos
ret
mov
dec
xchg
popf
cmpsb
cmpsl
test
cmpsb
test
nop
dec
add
add
lahf
mov
cmpsb
movsb
lcall
add
inc
outsl
xchg
lcall
cltd
cltd
cltd
je
push
add
add
xchg
xchg
je
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
add
push
imul
je
je
je
xchg
xchg
jo
imul
add
gs
jno
jno
jo
outsw
data16
add
add
add
pop
pop
dec
imul
arpl
imul
bound
pop
pop
inc
dec
add
push
arpl
arpl
arpl
bound
add
add
bound
arpl
pop
bound
push
pop
bound
pop
pop
pop
pop
pop
pop
inc
ds
pop
pop
pop
pop
pop
pop
pop
pop
push
aas
push
xchg
arpl
pop
pop
pop
pop
pop
push
add
add
pop
mov
push
pop
push
pop
push
cmp
add
add
mov
pop
cmp
push
popa
fstp
vpavgb
add
add
fstp
fstp
fucom
in
inc
insl
stc
loope
loope
repz
insl
stc
fucomip
loope
in
loope
in
hlt
inc
insl
out
icebp
icebp
out
icebp
out
out
icebp
stc
inc
dec
fcmovne
lret
lret
lret
lret
leave
lret
fxch
inc
mov
lea
lea
add
incl
add
incl
add
cld
jg
incl
add
push
pop
incl
add
incl
add
cld
add
incl
add
lock
aas
incl
add
rolb
ud0
add
add
add
incl
add
add
add
jg
add
add
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
clc
add
add
add
incl
add
push
add
incl
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
pop
incl
add
lock
ud0
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
add
add
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
xor
add
add
add
add
movl
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
xor
add
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
lcall
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
dec
add
add
push
add
add
outsb
add
je
popa
add
add
add
jb
outsl
add
jb
popa
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
xor
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
ret
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
and
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
jae
insl
bound
fs
je
je
and
jae
outsl
outsb
cmp
xor
xor
and
arpl
jae
jb
jb
push
je
jb
cmp
and
or
gs
je
insb
insb
push
jb
addr16
insl
and
or
gs
xor
and
or
or
jae
jb
jo
imul
je
insb
insb
and
outsl
addr16
insl
cmp
fs
jb
jo
imul
cmp
gs
outsb
fs
arpl
and
jo
outsb
fs
je
jae
gs
bound
and
jae
insl
bound
fs
je
je
and
gs
xor
and
or
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jae
outsl
outsb
cmp
xor
xor
and
arpl
jae
jb
jb
push
je
jb
cmp
and
or
insb
imul
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
or
or
gs
outsb
fs
je
jae
gs
bound
and
gs
outsb
fs
arpl
and
jae
gs
bound
and
add
insb
sbb
add
add
jns
add
sub
add
xchg
add
xor
add
xchg
sbb
add
add
mov
sbb
add
sbb
add
add
rcrb
add
add
sbb
add
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
add
add
add
addb
add
adc
add
add
add
and
add
add
add
sub
add
add
add
cmp
add
add
add
inc
sbb
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
insl
fs
xor
cs
insb
add
dec
xor
cs
insb
add
xor
cs
insb
add
inc
dec
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
push
push
dec
dec
dec
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
jo
outsb
inc
imul
add
inc
imul
outsl
inc
gs
popa
insb
insb
outsl
arpl
add
inc
jb
addr16
imul
dec
jae
arpl
imul
inc
imul
inc
ja
addr16
sub
adc
add
add
add
pop
add
add
lds
fucomip
insb
int3
loope
cmove
add
mov
movsl
inc
or
loope
and
pushf
test
test
xorb
add
adc
adc
mov
rol
mov
out
int3
mov
or
popf
mov
ja
int3
adc
xchg
and
jne
adc
daa
xchg
gs
fwait
adc
sub
sbb
dec
mulb
aam
and
iret
jb
lcall
mov
cltd
mov
mov
nop
mov
jmp
dec
sbb
nop
out
cli
push
call
fs
ret
dec
dec
aaa
aas
and
xlat
xor
fwait
sbb
test
mov
jne
push
mov
leave
sbb
fsubs
cltd
imul
push
out
jecxz
cltd
fists
mov
dec
aaa
popl
mov
pop
ljmp
sub
rcrl
dec
mov
cmpsl
repnz
mov
pop
jg
and
cmc
ss
push
jp
fisubrs
cmc
pop
push
ss
cmp
jg
stc
lahf
inc
std
loopne
int
jl
xchg
stc
nop
out
nopl
dec
cmp
in
fs
add
cld
or
sub
stc
push
test
sub
cs
aaa
xchg
jmp
inc
shll
mov
ficomps
loop
test
adc
pop
cwtl
outsl
pop
mov
cmp
popf
popa
fistpll
mov
sahf
inc
sysexit
aas
repnz
mov
repnz
push
pop
xchg
sub
adc
push
iret
in
test
inc
movsl
mov
xor
inc
pop
inc
ljmp
pop
inc
imul
jecxz
scas
pop
fdivrs
outsl
or
das
insl
int3
sar
pushf
lahf
jp
stc
mov
sahf
or
decl
fnstsw
push
mov
mov
cltd
outsl
pop
sarl
add
adc
add
add
add
push
es
pop
or
lret
add
xor
std
mov
pop
aas
adc
cmp
into
rorl
add
addb
or
xchg
adc
scas
pop
shrb
aad
pop
cmp
sub
orl
call
inc
pop
lods
push
push
cltd
fadd
mov
into
lcall
inc
orl
xor
jno
mov
les
cmp
cmpl
scas
testl
inc
lods
mov
mov
cmp
fiaddl
jb
pop
and
push
nop
roll
es
lea
adc
aam
enter
or
xor
or
jmp
push
mov
cmpsb
lcall
stos
xor
adc
xor
push
and
insl
adc
mov
movaps
cwtl
imul
mov
inc
cmpsb
mov
and
lahf
xchg
lcall
mov
rcrb
adc
xchg
addb
rorl
cmc
add
add
add
xor
add
add
inc
push
push
mov
ljmp
dec
imul
mov
add
push
jp
dec
sbb
lea
push
mov
push
lea
dec
xor
cmpsb
dec
xorb
add
dec
nop
inc
es
xchg
repz
mov
mov
mov
lahf
stos
insl
xor
dec
sarb
mov
push
or
add
add
rolb
add
add
add
add
add
add
add
add
add
add
adc
dec
xor
or
xor
xchg
push
xor
in
push
cmpsb
xor
jle
std
push
jmp
push
cmp
ss
fs
sub
xor
mov
add
xor
push
push
rcll
es
mov
inc
lret
cmp
dec
arpl
sti
inc
pop
cmp
aas
in
or
push
call
sbb
out
je
inc
dec
arpl
xchg
inc
adc
and
dec
push
push
sbb
inc
lods
mov
out
inc
loop
add
xchg
push
inc
sbb
xor
xchg
xchg
xchg
push
mov
repnz
enter
aad
or
mov
outsb
or
push
test
gs
imul
loop
mov
mov
xchg
or
shll
enter
cmpl
mov
xor
mov
push
sbb
sti
inc
icebp
xor
inc
mov
add
aad
inc
into
hlt
outsb
mov
shll
inc
lcall
gs
dec
and
sub
adc
rcrl
fcoms
jae
mov
dec
loope,pt
cwtl
cmp
pop
sbb
push
sbb
out
orb
imul
add
and
loop
clc
jge
aam
inc
xchg
fwait
cmp
jmp
add
xlat
sub
aas
xor
push
mov
lret
inc
inc
mov
dec
sbb
jno
sbb
inc
push
adc
mov
xchg
xchg
loope
sub
sbb
push
xor
cmp
cltd
mov
cmp
pop
iret
scas
cmp
fcomps
shlb
testb
rep
cmp
lock
clc
mov
xchg
dec
arpl
pshufw
fcoms
hlt
sbbl
sahf
clc
xchg
aad
lock
xchg
lret
cmpsl
mov
imul
cmp
pop
xor
inc
mov
sub
push
lods
adc
add
arpl
out
jns
adc
test
pop
aaa
and
push
dec
rolb
mov
ror
cmp
dec
cmp
jno,pt
push
xor
pop
sti
out
sbb
or
shll
int
dec
jno
imul
repnz
lods
movsb
shrl
sub
lds
es
in
lea
addb
or
xor
push
and
inc
xor
inc
xchg
nop
push
rcrb
sbb
push
mov
add
mov
sbb
inc
push
adc
repz
stc
mov
cmp
in
punpckhbw
inc
xlat
jecxz
sbb
sub
pop
or
push
add
mov
xchg
cli
cmp
inc
lods
adc
jno
orb
cmp
and
push
fidivrl
mov
pop
sar
test
jp
fcomip
adc
xchg
inc
in
push
clc
jg
std
mov
jae
jecxz
cmp
jmp
cmpl
pop
outsl
lcall
mov
jbe
jnp
mov
sbb
pop
movsl
mov
cmp
add
cmpb
cltd
push
repnz
insl
divl
call
inc
inc
sbb
mov
cmpsl
mov
sbb
arpl
sbb
mov
and
rcr
mov
outsl
div
jb
sub
mov
inc
mov
push
sbb
aad
pop
mov
pop
lahf
jp
xor
cmp
push
clc
imul
pop
ljmp
mov
pop
lods
jns
loope
adc
fildl
movsl
sysret
call
mov
repz
push
outsb
mov
adc
cmpsb
jle
pop
sbb
add
or
adc
cmp
pop
insb
aam
jnp
pop
int
lea
lods
adc
insb
outsb
cmp
xchg
xchg
mov
push
add
idivl
xor
negb
lds
push
jge
pushf
ds
xchg
ret
and
push
jnp
lret
aam
jecxz
fadd
mov
cli
filds
cli
adc
imull
mov
or
orb
psrlq
xchg
xor
sbb
push
data16
lret
mov
jl
add
push
cmp
add
jl
jmp
repz
jg
outsl
out
mov
mov
lea
mov
out
test
xor
xor
sub
dec
pop
cmovns
inc
out
dec
dec
and
dec
mov
shll
inc
and
lea
mov
cmp
dec
pop
popf
out
stos
sbb
lret
mov
pusha
xor
lock
dec
sbb
pop
sahf
jnp
scas
mov
stc
mov
rcl
filds
inc
fistl
pop
mov
mov
mov
cvtdq2ps
ret
adc
adc
test
test
sar
negl
push
mov
mov
xor
jb
and
fs
or
jle
mov
aam
push
xor
and
add
jmp
xchg
inc
lcall
lcall
mov
jge
jno
inc
jae
mov
cmp
mov
cld
adc
scas
repz
imul
cltd
repnz
or
mov
xor
jl
mov
adc
stos
loopne
inc
mov
scas
loope
pop
scas
sbb
jge
cmc
ret
pop
cmc
mov
add
mov
mov
push
test
cmp
fwait
mov
daa
aam
push
mov
fs
push
test
and
test
es
mov
push
xor
movsl
push
test
mov
inc
adc
mov
movsl
lods
add
test
pop
rcrb
push
aad
rcrb
inc
push
push
pushf
push
adc
pop
imul
std
das
lcall
adc
test
inc
rcl
test
and
dec
add
push
mov
dec
cwtl
sbb
out
adc
push
adc
loop
inc
inc
lret
jnp
in
idivb
gs
push
std
lock
push
sbb
xchg
testl
xchg
rol
xchg
mov
push
dec
mov
mov
test
fiaddl
push
sahf
out
cmpl
pushf
arpl
jns
hlt
imul
stos
lret
aam
ja
sub
in
mov
add
sub
add
in
sub
xchg
rclb
jmp
bound
push
jo
es
imul
mov
vpcmpeqb
push
lcall
sahf
pop
or
dec
add
dec
cmp
loope
repz
ret
xchg
sahf
scas
cmp
push
inc
arpl
push
add
pushf
out
mov
jge
jno
aam
out
and
xor
outsl
or
dec
adc
cli
sbb
sub
xor
dec
mov
cmp
rcll
data16
clc
mov
dec
xor
xorb
lods
aad
jns
sbb
cmp
jo
lret
pop
and
add
mov
fstpt
jmp
ljmp
push
adc
inc
aad
inc
adc
xorl
insb
and
or
popa
add
xchg
xchg
add
mov
adc
sub
sbb
inc
or
mov
es
push
test
push
push
adc
xlat
push
inc
cmpsl
and
mov
cmp
jo
sbb
aad
sbb
repz
pop
dec
ret
push
sub
lahf
dec
sbb
stos
xchg
imul
dec
cmp
mov
push
sub
mov
jb
push
arpl
popa
roll
movsl
aad
movsl
push
xchg
jb
orb
sbb
sbb
and
es
outsb
shrl
cmp
insb
scas
gs
rcll
lret
ljmp
jnp
push
fdivrs
mov
push
mov
jne
lds
hlt
mov
cmp
hlt
fistpl
jl
loop
out
jbe
out
cmpsb
dec
and
mov
loopne
lea
ja
jbe
dec
mov
jns
or
add
cwtl
stos
outsl
mov
xor
cmp
das
test
jl
cmp
testb
and
test
mov
cmp
push
push
pop
aad
cld
in
push
cmp
out
xchg
mov
dec
sub
dec
clc
lds
imull
cmp
fsubl
lcall
inc
adc
adc
cmp
jbe
movsb
int3
jecxz
sub
xchg
je
push
ret
jle
imul
cld
mov
outsl
push
sti
inc
jl
xor
xchg
mov
popl
xor
dec
aad
loop
add
scas
sbb
fisttpll
jmp
rolb
stos
mov
imul
mov
adc
inc
repz
mov
mov
loope
lret
addr16
outsl
dec
in
mov
dec
aam
movsb
daa
sub
xchg
jnp
imul
pop
lods
mov
ret
adc
test
les
mov
icebp
jns
clc
fstl
xlat
loope
sti
xchg
push
subps
xor
std
fisttpl
xor
or
dec
outsb
popf
and
cmpsl
jmp
mull
movsb
adc
or
jnp
and
mov
mov
sbbb
cmp
mov
pop
add
inc
jmp
into
pop
fwait
inc
addr16
jle
adc
inc
dec
pop
adc
add
pop
xor
push
add
fs
add
add
adc
add
mov
mov
and
arpl
add
inc
fimuls
sbb
push
mov
inc
pop
xor
test
push
inc
mov
stos
or
or
test
pusha
and
xor
lds
insb
inc
xchg
adc
test
adc
or
aad
add
mov
adc
inc
dec
mov
xchg
test
or
orb
xchg
mov
test
les
or
xchg
push
adc
xchg
roll
and
xchg
rolb
inc
add
or
stos
mov
push
push
inc
push
add
sub
jecxz
and
and
adc
adc
pop
adc
jmp
inc
mov
bound
and
push
push
mov
shll
shlb
push
loop
jb
add
xchg
adc
into
scas
jb
addr16
cmc
mov
xchg
sbb
ret
data16
xor
jnp
lods
scas
les
mov
mov
aad
cmp
inc
cmp
imul
loope
dec
inc
mov
sbb
je
sbb
sub
xor
sub
push
mov
add
sub
sub
rolw
lret
pop
pop
jne
mov
sub
shlb
cmp
in
pop
imul
jns
xchg
dec
stos
push
push
mov
ljmp
test
fcmovne
icebp
jp
pop
shrb
loopne
sti
sub
xchg
scas
repnz
xchg
hlt
fists
xchg
out
jp,pn
push
jo
outsl
ret
pop
daa
test
lret
mov
pop
clc
mov
insl
push
mov
or
mov
nop
sub
imul
lret
xor
pop
inc
xlat
add
in
xchg
loopne
jmp
out
push
mov
insl
out
cmp
pop
sub
pop
sbb
dec
push
mov
cmp
imul
mov
cmp
ja
jle
push
sti
insl
pop
scas
jp
pop
xor
jno
movsb
add
orb
mov
sub
mov
nop
rol
insb
stos
or
adc
ljmp
xchg
in
inc
in
cmp
pop
stos
inc
sarl
cld
repz
mov
jp
clc
jg
pop
shlb
pop
and
adc
int3
jno
mov
adc
jns
je
cmp
sbb
insb
movsl
and
xlat
pop
mov
into
push
add
pop
lds
cwtl
xor
or
mov
lods
xchg
cld
ret
test
xchg
js
jl
out
mov
add
and
mov
mov
les
mov
out
sub
mov
or
and
push
pop
sbb
add
sub
lods
rol
sbb
lods
push
inc
das
jp
xchg
mov
nop
lret
imul
daa
sub
mov
xchg
cmp
sub
loopne
cmc
mov
mov
movsb
jecxz
leave
dec
xchg
insb
jne
shrl
in
pop
mov
mov
mov
inc
mov
imul
mov
cmpsl
inc
push
ret
pop
mov
inc
dec
lret
ret
leave
mov
inc
sahf
hlt
scas
mov
xlat
sahf
test
jnp
shll
out
test
ljmp
inc
lret
lock
and
sub
in
push
gs
lods
sahf
fnsave
cmpsl
dec
mov
leave
jnp
push
mov
push
jl,pt
stos
mov
ss
call
pop
and
cmpsl
jge
loope
hlt
mov
imul
sub
lock
mov
sbb
cmp
mov
sub
repz
jg
push
xlat
and
inc
je
or
inc
ja
lret
xor
or
pop
test
dec
cltd
push
lds
lahf
test
fisttps
mov
pop
adc
cmp
fwait
pop
cmp
int
imul
jp
pop
data16
stc
mov
xchg
pop
mov
cmp
lahf
sbb
lds
popf
addr16
dec
stc
and
pop
fldl
inc
aad
mov
mov
dec
pop
fisubrs
lret
lock
sub
or
scas
aam
cld
int3
out
popa
xchg
xchg
sbb
jmp
test
add
dec
add
cmp
lahf
scas
sub
add
adc
addr16
mov
cltd
jbe
pop
cli
stos
lds
xor
test
or
lods
push
or
mov
mov
iret
lret
mull
xor
lret
divb
and
cmp
roll
lret
mov
outsb
out
xchg
mov
mov
pop
mov
fidivrl
xchg
mov
mov
mov
mov
in
pop
outsb
movsl
mov
mov
and
add
xchg
cmp
mov
or
mov
mov
pusha
or
push
ds
test
mov
rcrl
dec
rep
lods
pop
fstl
xchg
les
inc
fcoml
or
test
cmc
pop
ret
push
sbb
sub
inc
mov
pop
mov
dec
pop
pop
ja
std
lods
into
push
mov
xchg
adc
sbb
loopne
cld
insb
mov
fnstsw
sub
pop
int
push
xor
insl
jne
scas
ds
mov
cmpb
mov
dec
ror
cmpsl
add
pop
sub
and
icebp
xchg
mov
sbb
mov
sub
test
stc
or
and
push
gs
movsl
scas
and
mov
pop
out
in
push
dec
insl
add
ljmp
xchg
les
pop
push
and
adc
orl
pushf
mov
and
xor
in
jmp
sahf
neg
xor
stos
or
movsl
rclb
fwait
xor
or
outsb
mov
cmp
jne
popa
mov
push
xchg
jge
sti
mov
lea
pop
fld
invlpg
xchg
mov
hlt
jle
xlat
and
popa
push
lret
sub
stos
fcmove
cli
dec
xchg
fwait
and
add
scas
dec
test
push
lret
pop
test
out
daa
and
hlt
jns
ret
scas
or
je
fsubr
inc
mov
outsb
cmp
outsl
mov
jnp
xor
or
sbb
bound
pop
lods
lock
nop
push
dec
xor
cmp
push
inc
mov
xlat
pop
jmp
stc
cmp
pop
jp
dec
mov
sbb
pop
outsl
adc
data16
push
cmpl
test
mov
nop
and
jbe
into
aam
out
sub
adc
sbb
jg
sbb
push
and
inc
mov
mov
cmp
adc
repnz
sbb
dec
dec
lcall
into
jl
lahf
adc
stos
std
mov
or
in
xor
sbbl
and
movsb
lea
jmp
cmp
jae
push
jae
add
pop
sub
fistps
or
cmp
or
pop
jecxz
mov
lods
sbbl
das
push
cmp
lds
xlat
fsubrs
je
rcrl
jecxz
dec
in
add
sbb
flds
or
mov
cld
pop
xor
mov
test
sti
add
scas
fiaddl
push
or
mov
dec
push
rol
dec
xor
lret
dec
loopne
hlt
lock
xor
pop
mov
sbb
mov
add
ljmp
jecxz
test
add
insb
test
fisubrs
mov
sbb
push
cmp
fxch
lahf
sub
test
jecxz
mov
sbb
mov
dec
loopne
jno
push
mov
push
cmp
andb
adc
pop
insb
push
inc
cwtl
int
mov
je
xor
push
cmp
aas
or
add
clc
loop
adc
xchg
mov
mov
inc
mov
lods
andl
lods
adc
jne
popa
shll
lds
inc
cmpsl
inc
push
fimull
jmp
int
jnp
popa
dec
into
mov
popf
xor
fldt
fcompl
mov
gs
mov
je
sub
sbb
gs
adc
xor
scas
cmp
enter
loope
xchg
lock
push
adc
dec
sbb
mov
ret
or
mov
jp
inc
inc
adc
mov
fidivl
lods
insl
into
push
lea
adc
dec
xor
fsubrs
sub
stos
bound
adc
std
adc
aas
sbb
cmpsb
int3
fidivrl
or
insb
cmc
adc
sbb
xchg
scas
jge
ljmp
mov
outsb
xchg
shrl
cmpsl
cmpsl
inc
mov
add
sbb
pushf
add
enter
in
sbb
int
insb
pusha
cld
rep
and
mov
pop
push
fldcw
stc
jl
pop
lcall
stc
xor
cmp
sub
scas
xchg
pop
data16
rclb
outsb
les
mov
es
das
inc
leave
dec
ss
mov
and
adc
in
ja
jno
orb
sbbb
insl
xor
daa
adc
lea
xchg
fisubrl
dec
pop
pop
push
xlat
bound
inc
dec
scas
xchg
mov
sub
push
inc
popf
xor
pushf
enter
jnp
outsl
add
dec
push
repz
mov
sub
in
sub
icebp
ja
mov
rcll
lahf
daa
ja
xlat
outsb
jo
jb
in
cmc
cltd
enter
mov
lret
dec
ficoms
cmpl
fbstp
mov
pop
push
cld
and
test
sbb
push
into
sbb
lds
aam
das
jge
mov
shrl
jmp
lods
sbb
testb
xor
sbb
inc
movsl
sbb
and
push
sbbl
lods
pop
lret
mov
xchg
pop
rol
xlat
push
icebp
pop
xlat
cmp
mov
rcl
jnp
repz
icebp
pop
je
adcl
fmuls
out
mov
aaa
das
cmc
push
mov
arpl
jl
loopnew
mov
xchg
sbb
adc
lods
test
clc
fidivl
xchg
jge
mov
bound
je
sub
repnz
inc
dec
dec
mov
pop
xchg
les
sub
gs
cmp
xor
mov
inc
pop
sahf
jmp
adc
dec
repz
sub
mov
scas
or
fs
int3
bound
dec
arpl
jne
les
out
xchg
in
call
sub
jne
xchg
neg
into
in
mov
repz
inc
sbb
mov
mov
ss
out
imul
ret
stc
das
jge
icebp
fidivrs
xor
shl
inc
imul
inc
pop
push
jbe
xchg
inc
sar
mov
inc
inc
pop
and
add
pop
push
xchg
pusha
lret
xchg
stos
shrb
xchg
xlat
stos
mov
icebp
dec
mov
mov
push
scas
jmp
and
sub
cmpsl
je
and
out
fcmovnu
sti
scas
cmp
out
pop
ss
sub
mov
lock
adc
test
sub
adc
xlat
xchg
push
iret
push
data16
push
mov
push
mov
xchg
xor
dec
mov
xlat
xchg
cmpsl
or
xor
sahf
lahf
push
dec
xor
lret
xlat
pop
push
xchg
stos
mov
cld
movsb
pop
scas
mov
pop
fs
pop
je
fnsave
stos
call
push
lea
or
imul
pop
jnp
xor
adc
jle
mov
lcall
sahf
pop
sub
xlat
ret
mov
xchg
shr
cmp
jmp
aam
cli
out
sbb
dec
adc
mov
push
push
or
xor
sbb
sti
push
mov
add
jge
lds
mov
and
stos
add
rcrb
push
mov
pop
push
out
mov
lea
xchg
call
call
push
sbb
cmp
sub
aad
push
and
dec
pusha
nop
xor
or
idivl
mov
add
insb
inc
popf
shll
loop
outsl
inc
push
in
outsl
fsubrl
call
cmpsb
mov
inc
jb
data16
pusha
sbb
mov
xor
xor
and
rclb
push
test
mov
sbb
mov
push
mov
adc
je
or
gs
inc
mov
and
jo
roll
and
movsb
push
enter
je
adc
sub
fcomps
adc
arpl
xor
inc
dec
scas
add
in
lock
dec
ss
sub
mov
dec
or
sub
or
xor
addr16
mov
sub
shl
push
dec
jo
scas
xchg
mov
bound
xor
push
lds
push
loope
dec
loop
stos
je
negl
sbb
sub
inc
and
mov
adc
cwtl
cltd
push
es
insl
popf
out
jecxz
aad
mov
jns
arpl
fs
sbb
xchg
sbb
sarl
dec
xor
cmp
sbb
push
movsl
clc
mov
ret
dec
sub
mov
pop
push
adc
adc
lods
fidivrl
mov
xchg
sub
sub
shll
cmp
stos
std
pop
mov
cmp
lock
adc
push
scas
xlat
sbb
and
cmp
test
dec
add
cs
mov
push
insl
fidivl
aaa
loope
fstps
fwait
inc
mov
and
mov
nop
add
movsb
and
mov
outsb
mov
aaa
pop
ja
shlb
lods
xor
and
dec
push
sub
sub
ds
sti
xlat
jb
minps
dec
push
mov
cmc
push
add
dec
jo
cli
jg
movsl
cmp
cld
daa
push
es
or
push
lock
ret
loope
idivl
fildll
ss
hlt
outsl
test
cmp
mov
dec
cmpsb
sub
ljmp
and
pop
fcomi
mov
jmp
jge
imul
repz
fs
dec
push
ja
xor
push
subb
aaa
gs
add
nop
cltd
xor
pop
or
dec
or
xor
push
movsl
push
cmpsl
ret
xchg
scas
or
pop
rorb
xlat
sahf
pop
sub
inc
aas
outsl
in
ss
mov
mov
cli
dec
sbb
and
arpl
mov
xlat
xor
ss
mov
and
insb
pop
scas
pop
imul
lods
or
movsl
fcomps
popf
sub
cltd
sbb
cmp
xor
xor
mov
mov
mov
mov
inc
push
jmp
or
or
sub
mov
mov
or
or
push
xchg
or
dec
push
rol
das
rcr
adc
push
pushf
int
dec
dec
push
fnstenv
aaa
xchg
stc
jnp
pop
outsl
cmp
fistpll
pop
pop
popf
fs
fisubrs
push
in
gs
addr16
mov
stc
cmp
jnp
push
jl
xchg
test
and
insl
aad
mov
ss
mov
jmp
movsb
mov
mov
xchg
cmp
leave
push
js
mov
es
arpl
stos
push
xchg
xchg
inc
out
push
leave
push
add
rcrb
jl
addr16
jnp
stos
mov
stos
lret
and
jbe
push
mov
int3
push
test
push
insl
sub
mov
and
sub
in
inc
fisubrl
loop
enter
mov
inc
dec
jb
push
cmpsb
sub
dec
xlat
test
addb
push
fistpl
inc
lods
cli
cmpsb
xlat
xchg
rol
xor
xor
imul
sub
aam
rcll
sub
push
bnd
cli
ja
icebp
cld
mov
in
adc
scas
mov
adc
xchg
cmp
inc
fwait
outsb
inc
out
sti
mov
outsl
enter
mov
jae
dec
movsb
imulb
leave
push
roll
shll
loopne
cmc
lret
xchg
das
jp
and
and
lahf
outsl
sub
and
test
aas
jg
stos
jecxz
fnstsw
cmp
inc
mov
mov
push
or
scas
push
test
inc
cltd
ret
jno
sbb
imul
mov
sub
dec
jbe
add
data16
mov
or
jne
sub
movsb
int3
pop
lret
mov
or
push
push
rcl
sub
xor
mov
and
push
pop
lahf
mov
scas
sub
je
xchg
stos
ficoms
push
imull
dec
rcrb
pushf
pop
movsl
sbb
rcrb
repnz
ficomps
cld
inc
add
test
insl
or
mov
mov
dec
lock
test
jle
in
cmp
cmp
jns
cmp
xchg
xlat
jae
popf
insb
dec
ffreep
fwait
adc
jl
push
mov
fistps
orl
out
and
mov
je
dec
mov
pop
add
mov
mov
mov
outsb
mov
movsl
adc
xor
adc
jl
dec
cld
jg
out
sbb
mov
shlb
mov
push
cmp
cmp
sbb
fwait
dec
test
mov
jl
icebp
loopne
push
out
xchg
xor
dec
mov
in
jp
mov
push
mov
mov
into
aam
iret
outsl
inc
xchg
xlat
clc
jno
and
and
or
sbb
lods
mov
xchg
sbb
lds
dec
icebp
cli
jnp
cmp
aam
out
adc
mov
xorb
jno
lret
cmp
jecxz
pop
mov
cmpl
sub
or
mov
adc
jmp
insb
rclb
jecxz
jl
not
jb
mov
testl
pop
iretw
mov
push
push
out
lret
aad
imul
arpl
mov
loop
test
xor
mov
iret
xchg
out
ss
xchg
or
ss
ss
cwtl
mov
leave
sub
lret
jmp
sbb
sub
sti
jl
xchg
sub
gs
and
js
sahf
push
lea
lret
xchg
stos
adc
adc
fldcw
hlt
test
and
or
or
xor
call
mov
adc
scas
scas
ret
xlat
ficompl
addb
repz
hlt
jp
mov
out
push
aad
aad
jns
push
sbb
xchg
inc
xchg
cmp
or
push
and
mov
xchg
pop
dec
cmpsb
pop
lea
out
xchg
sub
sbb
pop
inc
mov
ret
in
mov
mov
imul
mov
mov
sbb
add
jo
mov
inc
push
dec
mov
cmc
imul
les
inc
xchg
or
push
lcall
cmpsl
dec
sbb
stos
pop
out
sahf
xor
jg
fbstp
shrl
mov
popf
lods
fucompp
jecxz
sbb
fcmovnu
stos
ret
in
inc
mov
pop
sub
nopw
sub
jmp
roll
cs
insl
mov
addr16
xor
dec
lcall
les
inc
into
ret
push
jae
mov
or
sbb
adc
lcall
jno
push
mov
movsl
stc
std
aaa
ljmp
jo
shlb
sub
dec
pushf
jl
pop
adc
add
out
or
pop
pop
pop
in
iret
add
lds
pcmpgtw
std
clc
push
or
and
push
fistl
jno
daa
and
fs
mov
int3
jbe
lahf
das
mov
clc
and
cmpl
shr
xchg
mov
ja
adc
push
xchg
pop
inc
jnp
inc
lds
xchg
testl
jecxz
cmpsl
push
cmc
jnp
add
addr16
xchg
xchg
cmc
xchg
and
mov
ffree
les
sub
pushf
and
les
push
out
in
out
xchg
mov
stos
or
dec
or
pop
mov
cwtl
lret
jae
xlat
lahf
fdivrs
or
jbe
cmp
flds
das
inc
adc
adc
cltd
dec
loopne
cmp
dec
cmp
inc
push
divb
ret
sti
out
cmp
out
jno
push
repz
stos
sub
jecxz
cmp
fldenv
dec
insl
call
push
jbe
sub
ss
cwtl
mov
enter
jp
call
add
push
cmp
cmp
mov
addr16
xchg
out
jmp
cltd
gs
jl
push
adc
jle
sub
inc
jo
xor
xchg
and
mov
inc
cmpsl
ljmp
iret
addr16
sarb
lock
push
cmpsl
cli
cltd
lcall
mov
sbb
and
or
sbb
bound
xlat
xor
out
clc
ret
adc
movsl
add
mov
mov
and
or
aam
mov
dec
jp
mov
or
add
pop
push
and
popl
inc
dec
pop
cltd
xor
ret
shlb
dec
scas
cmp
adc
add
add
data16
aad
lret
xchg
test
jo
ret
js
call
xchg
adc
pop
mov
xor
out
fists
jp
xchg
stos
enter
sbb
jmp
rorb
lahf
popa
push
mov
scas
iret
push
jb
or
inc
in
test
flds
jle
mov
or
jle
adc
or
insl
into
test
stc
inc
push
mov
cmp
mov
cld
push
pop
test
sti
mov
arpl
sbb
popf
shrb
add
push
test
lods
in
push
adcb
iret
add
cmp
add
cmp
stos
xchg
mov
add
nop
test
pop
sbb
mov
es
inc
pop
out
xor
pop
sbb
sub
mov
or
scas
idivb
popf
lds
ss
inc
mov
mov
cmp
xor
sub
in
xchg
push
push
jmp
sbb
pop
outsb
pop
lods
mov
stos
mov
pusha
fcompp
in
inc
push
push
dec
mov
outsb
adc
pop
pop
inc
mov
fldcw
mov
jmp
jmp
mulb
outsl
int
lret
mov
in
aas
loop
pop
sub
dec
push
adc
and
std
mov
call
push
mov
xchg
jnp
pusha
add
ficomps
call
icebp
pop
push
lock
pop
inc
enter
lret
xchg
ds
dec
hlt
inc
mov
popf
out
loopne
mov
adc
jb
inc
dec
pop
jge
cmp
clc
jnp
add
jno
jb
leave
mov
inc
enter
pusha
out
mov
bound
pop
sub
jno
cltd
pop
sbb
loope
test
adc
shlb
jno
pushf
fucomip
aas
cmpsl
mov
icebp
sbb
fidivrl
mov
imul
lods
mov
pop
adc
scas
dec
adc
sbb
sbb
jp
popf
add
bound
or
lret
fstps
adc
je
mov
dec
or
mov
cltd
adc
pop
movsl
jno
push
pop
jb
test
test
push
cwtl
dec
xor
fwait
and
xchg
mov
outsl
outsb
sarl
addl
lods
mov
mov
lea
inc
adc
sarb
stc
adc
push
addr16
push
ljmp
mov
xchg
aam
lea
jno
pushf
xchg
xlat
xchg
rorl
adc
mov
dec
mov
or
mov
pop
xchg
cmp
cmpsl
outsl
sub
sahf
or
cs
lahf
xchg
clc
cmp
es
mov
jae
jbe
stc
pop
aad
adcl
enter
push
sub
inc
mov
cld
pop
sarb
push
outsb
xchg
aad
ficompl
sub
pop
shrb
inc
movsb
push
enter
ja
xchg
push
dec
cltd
and
psubusb
mov
push
xchg
das
jp
mov
and
xlat
sub
jns
sbb
scas
inc
xchg
iret
sub
sarl
mov
xor
jp
dec
mov
inc
fmulp
pop
rcrb
add
out
pop
aad
movsb
stc
lds
mov
push
in
pop
dec
or
insb
jl
fcoml
jge
xor
inc
dec
test
stos
mov
xchg
test
imulb
push
push
sbb
out
sbb
xchg
lds
cmp
popf
mov
stos
push
and
mov
mov
data16
mov
push
pop
mov
mov
test
addb
sahf
jmp
icebp
mov
dec
imul
sti
cmc
mov
and
ds
jae
lret
jecxz
and
pop
cmp
xor
lock
add
std
lcall
xrelease
mov
mov
jnp
sbb
rorb
test
sub
test
inc
mov
sub
and
and
push
add
out
push
scas
lock
cwtl
aas
mov
xchg
and
movl
sar
minps
mov
jbe
or
or
xchg
push
mov
mov
lret
sbb
xchg
xchg
mov
inc
sbb
mov
hlt
ss
outsb
lcall
cmpsl
mov
mov
lds
mov
std
push
jne
repz
je
pop
push
mov
sahf
mov
aad
stc
lods
xor
or
mov
push
scas
aam
ljmp
xor
xchg
mov
mov
and
in
out
inc
cmpsl
jmp
cmp
mov
stc
aas
cmpsl
cli
sbb
stos
push
jecxz
sti
cld
push
jmp
out
jmp
add
cmp
xor
lds
push
sub
dec
cmpsb
test
gs
mov
ja
xor
mov
dec
xchg
adcl
adc
sub
push
pop
rclb
or
mov
push
cli
scas
in
pop
aam
mov
adc
scas
fwait
dec
adc
daa
icebp
inc
push
mov
xchg
pop
jecxz
ljmp
pop
mov
xor
mov
fildll
or
inc
int3
adc
push
mov
lds
mov
ss
outsb
dec
xchg
rorl
dec
jb
outsl
lods
xlat
mov
dec
or
aam
call
filds
out
mov
xor
inc
orl
add
xchg
sbb
adc
or
lea
outsb
push
fstp
fsubs
insl
js
inc
fwait
in
imulb
scas
cwtl
ss
inc
inc
shl
sbb
mov
sub
in
fmuls
adc
or
add
sub
add
xchg
cmp
sub
or
shll
jecxz
fsubrs
xor
mov
dec
scas
inc
cmpsb
test
fs
movsl
xchg
pop
js
xor
fsubrs
lods
cmpsb
adcb
sub
xor
pop
push
jp
adc
adc
mov
inc
es
inc
pop
daa
stos
xor
push
jp
mov
test
cmpsb
lods
and
push
imulb
mov
jmp
repnz
lods
fidivrl
mov
mov
push
cmpl
pusha
mov
out
enter
pop
push
data16
movsl
add
dec
push
sbb
icebp
sti
mov
jl
cmpsb
adc
int
push
out
adc
outsb
sbb
or
jge
scas
mov
fnstcw
stos
xlat
jmp
mov
mov
jno
or
inc
ja
movsb
sub
pop
cs
adc
test
mov
jmp
sub
lret
cwtl
pop
sbb
arpl
mov
cmp
cmp
in
scas
sbb
pop
nop
pop
xor
jae
adcb
add
dec
ss
test
cltd
sbb
insl
pop
imul
hlt
out
or
pop
adc
and
jg
nop
and
test
imul
mov
and
jmp
mov
cmp
adc
sub
pop
rcrl
mov
addr16
data16
lret
rol
jns
sbb
sub
push
sbb
push
pusha
mov
xor
ja
and
mov
clc
sub
out
mov
inc
mov
xor
gs
ljmp
mov
pop
jb
pop
mov
push
sub
ficompl
or
pop
mov
shl
test
xchg
scas
cld
fs
popa
push
pop
adc
and
adc
jo
jl
mov
mov
cli
jge
int3
outsl
cltd
enter
mov
and
adc
push
xor
xchg
mov
pop
leave
jnp
sti
cmp
cmp
xacquire
pop
les
cmc
fwait
jae
aam
mov
jle
stos
sbb
or
fwait
movsb
mov
add
sbb
cli
xor
cmc
aaa
ja
xlat
jo
imul
int
in
fmul
or
insb
sub
adc
mov
es
sbb
test
pop
movsb
cmp
mov
push
inc
adc
int
mov
je
mov
aaa
dec
in
clc
aaa
xchg
mov
push
sbbl
fisttpl
mov
in
fs
es
les
stos
loopne
gs
inc
out
pop
dec
pop
mov
pop
xchg
sub
pushf
sub
mov
jns
inc
sbb
cs
inc
icebp
push
xchg
inc
mov
repnz
addr16
enter
rcll
ljmp
cmp
and
xchg
inc
sarb
bound
inc
inc
inc
xchg
ljmp
clc
je
or
rcrl
aad
in
stos
mov
jecxz
sbb
mov
sbb
cwtl
shl
stos
dec
jecxz
out
mov
sub
jb
jb
aad
push
lods
inc
inc
sub
stos
shrl
add
dec
push
push
mov
imul
mov
lret
pop
pop
pop
adc
mov
xchg
les
inc
mov
mov
or
mov
stos
ficoml
int3
insb
imul
in
cmpsb
xor
rorl
mov
lret
or
push
adc
aad
mov
scas
push
stos
push
push
pop
scas
push
mov
fs
pop
in
mov
add
push
inc
daa
fbstp
add
fwait
xchg
loopne
jae
stos
pushf
push
fs
ret
cltd
jns
dec
imul
cmp
or
mov
jge
mov
aad
cmp
loope
ret
cs
ds
dec
mov
aaa
sbb
scas
addr16
push
push
and
cmpsb
ljmp
or
das
xchg
and
je
jmp
cwtl
test
lret
lcall
mov
ret
lret
push
lods
or
add
or
mov
pusha
in
dec
sti
insb
test
and
es
dec
jl
mov
mov
adc
sub
repz
inc
xchg
fwait
push
mov
loop
fidivrs
insl
push
pop
cmp
cmp
ret
jp
xor
lret
xor
xchg
mov
sti
xchg
cmp
mov
loop
ss
pushf
or
lret
mov
lds
add
cmpsl
out
mov
adc
xor
mov
fiadds
cmp
addl
mov
rcl
pop
dec
pop
pop
cmpsl
adc
push
sbb
inc
pop
push
sub
ret
mov
je
cmp
cmp
sub
sub
jl
dec
xor
ds
mov
mov
popa
jne
mov
and
adc
fdivrl
push
push
cmp
sti
sbb
push
mov
ret
mov
xchg
and
cwtl
mov
lods
mov
mov
sub
andl
fldcw
into
lret
xor
push
loopne
cmp
push
bound
xchg
push
add
movsl
dec
insb
xchg
mov
push
ret
adc
leave
pop
sbb
divb
cmp
sub
xchg
dec
pop
mov
jp
jb
pop
pop
xchg
ficomps
xor
push
jb
dec
cmp
loopne
int3
inc
test
mov
sub
push
movsl
xor
shrl
popa
jne
mov
add
insl
gs
test
pop
ret
into
xchg
and
into
mov
scas
jb
cmp
and
or
xchg
inc
adc
fstpt
mov
stos
cmp
dec
cmp
cmc
iret
mov
sbb
cmpsb
mov
jae
sbb
xchg
xchg
out
mov
js
jae
push
daa
scas
rolb
adc
push
js
mov
iret
sarl
inc
int3
add
dec
mov
mov
dec
inc
dec
and
or
jp
inc
and
push
jl
jmp
jbe
mov
mov
mov
jle
lods
adc
loop
jg
rcr
cmp
loopne
repz
mov
mov
lock
sarb
push
pop
xor
cmp
mov
push
push
xor
pusha
push
lcall
xor
mov
insb
and
mov
add
pop
cwtl
push
ror
push
adc
adc
aaa
adc
repz
mov
inc
insl
int
fucom
mov
xor
adc
adc
inc
dec
and
or
push
add
pop
std
test
out
dec
je
sbb
xor
mov
sub
sub
out
pop
pop
mov
out
repz
and
inc
dec
out
xor
ja
icebp
or
mov
mov
mov
out
jl
or
lods
outsb
jecxz
je
push
mov
sbb
mov
lds
mov
mov
mov
adc
push
xchg
adc
mov
mov
out
jp
out
pop
lret
mov
jns
pop
cltd
and
shrb
push
cli
adc
dec
dec
mov
sub
rcll
mov
push
insb
xor
pop
sub
mov
dec
outsl
pop
rcl
xor
movsl
adc
adc
push
inc
test
sbb
jno
cmpsl
and
es
adc
and
add
fs
out
dec
xor
xor
xchg
mov
push
out
and
xchg
cltd
movsb
ret
int3
push
das
add
sbb
mov
das
sbb
jmp
xor
lea
gs
test
lret
jbe
pop
and
pop
mov
imul
ss
movsl
fwait
add
jo
push
xor
mov
je
rcrl
xchg
minps
dec
or
xchg
dec
add
call
adc
fsubl
mov
and
push
adc
rcrl
das
jbe
cmc
pusha
xor
dec
cmp
sub
and
mov
sbbb
movsb
add
dec
mov
adc
test
arpl
xchg
fcoml
insl
iret
lods
cmp
sbb
orb
prefetch
gs
movsb
mov
fsubl
jl
shl
shrb
call
xchg
call
xor
je
das
cmp
cmp
mov
lret
lea
xchg
int3
fisttps
sub
mov
sbb
xchg
bound
test
sub
push
lods
mov
mov
push
aaa
insb
pop
mov
arpl
bound
sbb
adc
sbb
mov
cmp
xchg
mov
pop
test
dec
test
rcl
fidivl
xor
push
jle
sbbl
cmp
mov
or
adc
xchg
in
pop
movsl
mov
pop
xor
in
imul
mov
adc
pop
sbb
lds
adc
xchg
push
adc
daa
mov
rolb
arpl
in
insl
and
inc
sub
jbe
xor
aam
arpl
or
and
cmp
cwtl
scas
mov
popa
jp
push
mov
test
lret
testl
push
jae
pop
arpl
int3
sbb
mov
adc
jbe
push
pop
popa
dec
andl
lods
xor
subb
fs
adc
add
les
push
pop
dec
jne
cltd
push
pop
test
daa
mov
mov
inc
inc
decb
dec
or
mov
xchg
gs
out
jmp
cs
sbb
pop
mov
xchg
cmp
out
popl
push
das
movsl
jne
aaa
or
cmp
rcrb
jl
lods
insl
scas
scas
mov
mov
sbb
sub
cmc
mov
sbb
and
cmpsb
add
adc
cltd
mov
subb
mov
das
push
popl
in
mov
cmp
iret
sub
xlat
mov
pop
mov
cmpsb
mov
and
dec
inc
inc
mov
push
jbe
adc
adc
pop
push
out
enter
jg
ja
outsb
mov
jl
movsl
xchg
dec
cmp
dec
xor
lret
and
outsl
jnp
jl
mov
push
daa
daa
jno
inc
sbb
int
inc
sbb
push
adc
jge
sbb
mov
test
mov
mov
lock
lods
cmpl
ds
or
aaa
xchg
adc
mov
mov
sub
xor
sub
or
add
outsl
or
push
and
aad
aam
lods
mov
ja
sub
jmp
enter
adc
mov
cmp
sub
xor
test
and
stos
push
int
mov
sub
mul
xchg
stos
jl
jp
jnp
stc
out
cmp
test
fcmovnbe
je
mov
cmp
mov
dec
xor
sub
loopne
dec
mov
and
loope
cmpsb
inc
xor
jbe
daa
mov
pop
daa
mov
sub
dec
dec
in
and
jnp
insb
mov
xor
ds
imul
sbb
sbb
ljmp
pop
cmpl
in
imulb
sbb
xor
xor
and
jb
scas
mov
mov
in
iret
push
dec
das
jge
movsl
sub
out
lcall
xchg
insb
mov
in
inc
lods
sti
bound
iret
mov
imul
sub
or
inc
push
or
fs
mov
push
out
push
pop
push
dec
mov
addr16
or
in
in
shll
jne
je
cmp
add
loope
and
or
imul
in
and
out
xchg
test
popa
test
sbb
jp
arpl
fcoml
inc
and
adc
inc
stos
or
pop
xchg
leave
add
test
adc
inc
ja
ficomps
sub
xchg
insl
xor
fidivs
shrb
test
cmp
mov
push
dec
sbbl
insl
mov
jmp
and
fidivrl
hlt
cmp
or
dec
jecxz
js
pop
pop
xchg
or
mov
inc
push
scas
das
and
inc
addb
pop
fmuls
es
push
push
mov
adcb
mov
push
jne
mov
mov
dec
pop
arpl
jp
jmp
in
mov
mov
arpl
shrb
or
rsm
lret
out
jge
cltd
out
mov
xor
push
stos
sub
xchg
fists
adc
cmp
das
push
sbb
inc
xchg
sbb
imul
movsb
test
ljmp
es
push
nop
cmp
sti
iret
cmpsl
shl
dec
frstor
ret
lcall
ss
xor
sub
xchg
inc
pusha
and
sbb
movsl
inc
sub
push
adc
mov
loopne
loop
inc
mov
push
push
mov
xchg
push
in
and
pop
mov
push
insl
add
xor
shrl
and
or
and
and
sarb
push
aad
push
mov
inc
fiaddl
pop
daa
fcmovne
and
pop
lret
adc
call
inc
xchg
adc
sbb
push
push
adc
xlat
in
and
test
ds
dec
nop
dec
insl
mov
and
shlb
push
test
sub
daa
or
shrl
cmpsb
push
push
insl
cltd
movsl
xor
mov
cmp
push
stos
mov
outsb
add
dec
xor
dec
xor
xchg
push
pop
sub
loopne
pop
push
inc
jno
stos
adc
cs
and
or
fdivrs
mov
sub
inc
fldt
rorb
aad
push
lret
push
mov
mov
cltd
xchg
stos
mov
sahf
sub
sub
mov
xor
mov
daa
dec
or
mov
pop
jmp
xor
mov
sub
mov
pop
push
stc
pop
xchg
or
xchg
mov
or
adc
in
or
push
push
repnz
ss
fisubrs
jns
mov
push
sbb
adc
js
xlat
adcb
sti
imul
dec
sbbl
gs
sbb
mov
pop
xchg
or
sub
outsb
hlt
jnp
sbb
test
divl
or
mov
xor
mov
push
insl
imul
add
adc
inc
cmp
push
test
mov
pop
data16
xchg
xchg
push
jmp
rcrl
aaa
mov
mov
imul
scas
mov
push
pop
popf
mov
imul
push
pushf
xchg
mov
stc
mov
in
inc
rcrb
imul
das
jno
mov
mov
push
sub
adc
mov
cmp
mov
js
js
mov
test
stc
idivb
mov
dec
cmp
push
dec
push
pushf
movl
lods
push
jle
int3
xor
push
cmc
cmp
stc
stos
scas
fcomps
daa
in
jae
adc
xacquire
push
cwtl
repz
xor
in
pushf
test
idivb
in
cmc
xor
sbb
clc
adc
das
test
test
inc
mov
jno
push
inc
jb
lcall
sub
push
pop
mov
push
mov
pop
sub
popf
jno
push
xor
std
into
jmp
orb
cwtl
test
jne
jmp
pusha
mov
mov
push
sbb
dec
sub
sub
dec
ficoml
andb
ds
pop
mov
lds
insl
shll
andb
cmpsl
inc
xor
arpl
call
adc
popf
pop
gs
ret
pop
in
mov
jne
xchg
jno
dec
pop
push
dec
cmp
cs
pop
movb
dec
or
push
push
ret
in
mov
ljmp
push
jecxz
ret
inc
mov
adc
rclb
loop
push
mov
lcall
fdivp
movsl
lds
push
jp
mov
shlb
test
not
insl
xchg
pop
xchg
dec
xchg
mov
add
pop
shll
add
jo
xor
mov
js
fs
xor
callw
mov
sbb
scas
mov
mov
out
xor
loop,pt
pop
scas
sbb
subl
mov
cmpsb
fwait
mov
mov
pusha
fwait
hlt
mov
cmp
sti
aas
in
inc
cld
and
push
lods
add
popa
sbb
xor
testl
out
mov
mov
mov
dec
jle
out
xchg
shll
lret
mov
stos
pop
sbb
mov
jecxz
xchg
sti
sbb
push
fldenv
push
mov
pop
and
push
or
fstl
jno
push
fdivs
dec
ds
out
cmc
fstp
movsl
sub
mov
or
push
mov
pop
inc
or
pop
pop
sub
mov
sub
inc
adc
xchg
push
sbb
pop
outsl
xchg
xchg
adc
dec
cmp
xchg
test
nop
popf
xchg
cli
cmp
aad
mov
jmp
sub
dec
pop
fnstenv
mov
int3
sub
dec
dec
xor
jmp
jp
mov
dec
hlt
icebp
sahf
mov
adc
loop
jns
and
lock
push
shll
xchg
add
inc
test
andb
xorb
movsl
xor
pop
adc
in
sbb
xchg
mov
or
inc
add
push
test
loopne
test
and
adc
movl
enter
in
test
cmpsb
adc
adc
pop
and
mov
pop
sbb
jmp
and
lcall
arpl
push
or
fsubrl
xor
adc
stos
outsb
jo
mov
imul
sub
cmc
jnp
movsl
lods
stos
mulb
popf
out
and
mov
dec
sub
mov
add
mov
jns
std
cmp
sahf
cmp
pop
jb
sti
movsl
test
iret
add
sbb
jmp
or
push
aas
int
pop
les
das
xor
rcrl
mov
xchg
or
add
hlt
iret
xchg
out
mov
dec
aas
push
hlt
shl
or
sub
ljmp
mov
psrlq
ret
outsl
dec
jecxz
std
cmp
imul
dec
fdiv
sarb
sub
pusha
mov
mov
cld
inc
nop
jnp
loop
push
and
xor
jecxz
addb
add
daa
cmp
jns
loopne
add
call
sub
push
or
stos
push
or
push
adc
lret
sahf
mov
repz
sbb
movsl
scas
xor
int3
scas
cltd
xrelease
mov
and
mov
cwtl
idiv
fnstcw
movsl
cmp
cwtl
push
push
bound
arpl
insb
sbb
dec
test
xchg
ja
daa
scas
cli
jg
in
and
inc
or
lret
je
rolb
dec
xchg
add
pop
jnp
pop
cmp
and
test
inc
push
dec
pop
cs
push
int
jg
adc
gs
jmp
bound
iret
hlt
pop
mov
shr
and
or
mov
je
ficompl
mov
sbbb
adc
dec
jne
or
ss
pop
aaa
daa
pop
leave
jmp
pop
imul
and
stos
sbb
xor
adc
das
push
rol
mov
jmp
gs
sti
pop
ljmp
cli
add
cmpsb
cld
mov
sbb
into
cltd
push
stos
dec
mov
xor
mov
cmp
testb
out
ror
insl
pop
jmp
jg
pop
std
cmp
into
push
pop
mov
mov
adc
int3
in
mov
cmp
xor
push
hlt
mov
and
sbb
outsb
shrl
dec
sbb
sub
pop
addr16
sti
int
ficompl
cmp
push
push
jge
or
mov
dec
popa
sub
push
xchg
call
xchg
pop
jns
repnz
and
lahf
inc
out
in
in
xchg
xchg
cmpsb
out
mov
mov
cld
xchg
mov
dec
imul
lahf
adc
mov
sbb
std
xchg
jge
and
and
fchs
imull
icebp
xchg
jl
lods
rclb
and
add
xchg
cmp
cmp
jno
inc
std
in
jo
into
push
mov
insb
pop
popa
xchg
cmp
xchg
add
xor
cs
repnz
fisttpll
pusha
movsb
adc
mov
loopne
loopne
add
divb
jns
and
adc
cwtl
mov
sbb
enter
dec
add
xchg
inc
push
cmp
loope
sub
jmp
mov
test
jne
jmp
std
adc
push
fsubs
sbb
pop
faddp
fucomip
push
add
jg
push
and
clc
cmp
jge
jp
pusha
popf
cs
adc
push
ljmp
bound
mov
mov
mov
dec
mov
jb
js
cwtl
jno
movsl
data16
loopne
shrl
divb
jb
out
jl
test
mov
enter
cs
xor
cmp
ljmp
sahf
sti
mov
push
sbb
data16
fildl
daa
inc
data16
pop
in
mov
add
cltd
or
sar
repnz
xor
ds
rcr
aas
pop
roll
dec
stc
push
test
insb
sbb
inc
mov
sub
push
sbb
in
clc
mov
sub
jge
stos
adc
cmp
insl
cmpsl
cs
add
pop
xchg
cltd
push
xchg
enter
cmp
mov
cmp
cmpsb
lods
movsl
sub
xor
lods
lret
mov
fcmovbe
mov
mov
lds
scas
or
movsl
push
jbe
mov
lret
gs
or
pushf
push
xchg
in
dec
fstp
ror
push
int3
push
call
cmp
pop
sub
inc
repz
lcall
add
and
fwait
cmp
out
jge
gs
cmpsl
push
int
lret
sar
push
inc
pop
adc
roll
ss
iret
popa
pushf
xor
push
mov
xor
and
popa
or
cwtl
inc
mov
or
ds
popa
in
loopne
push
add
in
rcr
call
and
and
or
and
iret
aas
fucomip
mov
ror
jo
ds
out
and
jne
mov
push
jb
dec
sahf
sbb
sub
xchg
ret
fwait
cmp
js
jb
pop
sbb
sub
pop
push
adc
out
or
rclb
dec
mov
bound
jge
enter
insb
mov
sub
adc
inc
sub
cli
pop
or
in
inc
inc
fstl
mov
gs
cltd
lea
and
cmpsb
inc
je
dec
xchg
push
lods
dec
xor
stc
push
es
cltd
jns
sbbl
inc
stos
jmp
imul
cltd
lcall
inc
lret
lds
adcl
sbb
cmp
xchg
inc
repnz
push
adc
pop
jno
sbb
fisttpl
data16
rcll
cmpb
je
cmp
xchg
in
test
inc
test
psubsw
jnp
sbb
inc
push
pushf
shlb
push
mov
and
cmpsl
pop
jg
lock
ret
ret
repnz
mov
rcl
in
pop
addr16
mov
mov
loop
mov
jmp
nop
mov
in
sbb
ret
rep
jmp
mov
lahf
add
cwtl
mov
xchg
mov
pusha
dec
cmp
dec
leave
hlt
loope
pop
sub
mov
fs
lods
sub
lgs
cmpb
sub
rcrl
sbb
add
jns
fadds
or
popa
js
repz
mov
add
pop
adc
gs
xchg
push
xchg
sbb
xchg
stos
lds
xchg
lret
popa
inc
sbb
ds
xor
sahf
xchg
fsubr
call
inc
mov
lea
mov
mov
pushf
popa
xchg
and
add
xchg
or
jle
aam
addb
mov
lods
stos
xor
mov
cld
pop
pusha
xor
ljmp
cmovb
xor
xchg
mov
cli
mov
bound
out
mov
sbb
push
mov
pushf
adc
inc
mov
stos
push
stos
mov
mov
or
adc
flds
cmp
and
movsl
mov
enter
mov
mov
lods
mov
movsb
test
adc
insb
sbb
int3
iret
jno
sti
je,pn
cltd
lret
lret
shrl
mov
mov
inc
xchg
in
mov
push
push
inc
out
or
inc
jp
out
cmp
push
inc
xor
mov
loop
adc
adc
sbb
inc
je
xchg
jbe
fdivrs
sub
mov
push
cld
xor
cs
mov
gs
addl
nop
sbb
in
jns
xchg
nop
loopne
xlat
imul
jmp
pushf
cmp
test
iret
lds
cmp
dec
add
repnz
inc
popa
and
and
and
or
in
xor
sbb
jge
outsb
adc
negb
pop
adcl
sbb
pop
outsl
mov
leave
out
cld
xorl
andl
inc
xor
rcl
out
out
les
jp
fwait
imul
loope
addr16
shll
push
adc
xchg
aaa
cmp
sbb
jmp
testl
inc
mov
mov
push
cmp
adc
mov
fisttpll
inc
xchg
test
push
pop
outsl
js
xor
inc
push
xor
in
push
push
into
mov
and
mov
in
push
xchg
enter
or
je
and
mov
cmpsl
shll
scas
andl
xchg
repnz
es
push
xchg
lock
mov
jl
cmp
jo
cmpsl
mov
aaa
inc
or
outsb
xchg
les
mov
push
xor
repnz
push
jle
fstl
in
and
sbb
xchg
fs
js
mov
or
adc
push
add
lahf
call
jb
cmp
or
lret
ds
add
push
add
add
movsl
push
shll
adc
cld
ret
and
repnz
jo
sbb
adc
mov
rclb
mov
clc
add
les
sbb
lock
or
addr16
aad
push
push
mov
out
sahf
sahf
negl
iret
imul
aas
icebp
or
sub
psubq
les
fdivrp
stos
mov
dec
mov
mov
icebp
jge
and
outsl
clc
push
out
or
sahf
adc
loop
push
fistps
in
jnp
divb
stc
pop
or
movsb
lret
jnp
jbe
out
mov
dec
inc
cmpsw
and
shl
clc
push
adc
jecxz
and
lds
adc
out
fsubrs
cmp
jp
cmp
mov
adc
jmp
or
sbb
xchg
mov
adc
mov
sbb
xor
dec
cmp
jge
mov
cmpsl
fs
xchg
orl
mov
enter
movb
cmp
pop
bound
lcall
fnsave
adc
add
pushf
xor
sahf
mov
in
daa
pop
jb
nop
pop
mov
clc
movsl
push
sti
mov
sbb
shll
ficoms
mov
fwait
adc
fcoms
addr16
mov
rcl
mov
sub
push
scas
divl
inc
aam
inc
mov
btl
jmp
lea
sarl
rclb
pop
nop
ja
in
out
ficoms
inc
ljmp
add
xchg
fstpl
mov
lods
mov
cwtl
inc
pop
icebp
mov
push
mov
les
iret
aam
push
sbb
daa
inc
lret
add
movsb
or
dec
add
or
push
pop
sbb
mov
imulb
push
std
xchg
hlt
xor
and
test
push
test
stos
fldl
xchg
lret
das
xchg
stos
outsl
int
xlat
in
lds
inc
pop
rolb
bound
mov
jb
push
mov
jbe
idivb
scas
lret
mov
pop
lods
jg
pop
add
and
inc
push
dec
xchg
adc
pop
cmpsb
mov
mov
cmp
mov
aaa
mov
sub
subl
mov
pop
mov
cmp
mov
mov
jb
dec
sbb
inc
sub
out
rcr
repz
push
jecxz
jno
test
in
dec
test
fadds
aad
call
cmpsb
pop
add
xchg
in
cli
xchg
push
adc
imul
repnz
stos
jno
pop
jne
mov
or
xor
cmp
inc
push
test
in
xlat
adc
mov
cmp
cmc
subl
ljmp
pop
pop
xchg
xor
dec
xchg
cmp
mov
xchg
xor
call
sbb
fsubrl
int
nop
hlt
push
jnp
addr16
xlat
stc
jmp
add
mov
rcrb
dec
jb
sub
push
je
or
or
je
pop
insl
cwtl
push
or
data16
pop
push
dec
mov
icebp
bound
push
push
pop
imul
nop
daa
dec
dec
inc
push
jle
inc
inc
repz
push
adc
dec
lcall
inc
rcrb
call
in
shrb
sbb
cli
insl
cmp
imul
push
add
xchg
xchg
into
mov
mov
mov
stos
adc
or
sbb
aad
sbbb
arpl
push
push
push
xchg
or
mov
mov
int
inc
dec
inc
lds
and
mov
pop
into
call
das
hlt
stos
cmp
mov
daa
sbb
mov
enter
repnz
dec
sub
fisubs
and
pushf
add
xchg
outsl
dec
mov
test
mov
dec
into
and
std
mov
outsl
jo
mov
push
push
pop
je
sarb
lods
sub
and
cmp
sub
add
in
dec
cmp
jecxz
rorb
frstor
pop
cli
and
mov
mov
mov
and
lods
pop
push
fs
gs
push
inc
mov
dec
inc
adc
jo
cmpsl
dec
test
ret
inc
xchg
mov
xchg
shll
lahf
daa
rcrb
mov
jmp
mov
dec
out
add
cmp
cmpsb
inc
mov
mov
icebp
lods
cli
mov
xchg
fldl
mov
cmp
mov
dec
add
mov
mov
ds
mov
xchg
cli
fld
mov
subl
lods
lock
stc
or
pop
rcrb
and
out
sbb
xor
fisubs
out
xchg
fstps
push
int3
popa
scas
xor
cmp
jbe
cs
sbb
push
xlat
popa
cli
adc
push
aaa
xlat
cmp
cmp
sarl
ficoms
dec
jns
cmp
jne
mov
fcmovu
ficompl
add
pop
add
add
add
add
mov
bound
popa
pusha
pusha
pusha
bound
jae
cwtl
sub
pop
xor
cmpsl
xchg
xchg
daa
push
movsl
xabort
es
in
add
loope
jns
stc
in
xor
movsl
inc
inc
test
inc
lds
jns
jns
and
loope
jle
loope
add
sbb
enter
inc
add
add
js
jecxz
pusha
pusha
mov
add
sub
or
xchg
icebp
sbbb
jne
test
rorl
shll
xchg
mov
daa
pushf
data16
sub
dec
int
dec
iret
xlat
sub
xchg
adc
cmp
xor
ret
jge
add
insb
jp
ss
loope
mov
mov
mov
inc
sub
cwtl
xor
sbb
jno
xchg
loope
pop
xchg
adc
and
popf
lock
fsubrs
add
dec
repz
testb
repz
sub
add
ficomps
mov
sub
cmp
jmp
ja
insb
mov
pusha
sarl
mov
mov
shrl
fcomp
sbb
cld
pop
xor
jmp
cmp
inc
push
lds
jg
sbbl
pop
jp
or
mov
add
hlt
lds
jl
pusha
out
movsl
push
addr16
add
and
test
pop
sbb
xor
cmp
test
subl
enter
and
sub
clc
mov
lock
das
sub
sbb
lahf
fistps
inc
test
xor
in
lods
inc
xor
insb
jg
flds
ret
stc
mov
cmpsl
es
mov
ja
or
push
mov
mov
sahf
sbb
mov
out
roll
cmp
insb
je
mov
movsb
movsb
push
sahf
cltd
xchg
pushf
xchg
mov
and
int
cmp
out
and
pop
push
sarl
inc
loope
ljmp
fdiv
or
outsl
push
mov
jle
jle
mov
add
rcl
jg
add
adc
or
adc
or
add
xor
add
add
add
push
es
pop
jecxz
mov
jmp
dec
aas
sub
add
in
insl
sub
add
mov
and
and
add
mov
mov
subb
sub
inc
push
adc
cmpsb
cwtl
addb
adc
xor
sahf
push
hlt
shll
mov
cli
push
xchg
dec
xor
sahf
push
imul
add
cmc
dec
xchg
jp
sahf
mov
jle
es
test
sahf
cmpsl
cmpsb
dec
call
in
insb
push
shll
imul
pusha
aam
xor
test
hlt
xchg
ficompl
test
enter
add
add
add
add
rolb
add
add
push
addb
addb
add
and
add
add
add
add
inc
inc
xor
add
or
leave
nop
imul
and
leave
sbbl
xchg
add
push
sbb
jle
mov
jg
adc
lret
mov
inc
dec
and
jmp
adc
inc
stos
mov
aam
inc
mov
mulb
fbld
shlb
mov
in
pop
push
cmp
aad
mov
add
adc
and
fsubrl
mov
je
shrb
outsb
lods
xlat
popa
rcrb
jmp
cmpsl
xchg
jge
xchg
sbb
pop
pushf
jo
lods
mov
and
cltd
bound
aad
mov
js
aas
jns
inc
lret
sbb
leave
and
adc
movsl
lock
insb
dec
mov
outsb
push
xchg
inc
out
mov
std
rcl
dec
outsl
mov
out
xchg
pop
in
adc
lret
mov
adc
jae
xor
bts
and
sbb
ret
das
pop
cmp
daa
negl
xchg
pop
adc
xor
sahf
jbe
xor
in
rcll
cmpsl
sub
lock
push
daa
int
fmull
daa
add
mov
aaa
in
aas
outsl
sub
sbb
cmp
cs
fdivs
movsl
pop
inc
nop
push
jns
mov
neg
int
lods
jae
outsl
sbb
xchg
xchg
addl
aaa
into
xchg
decl
lahf
ds
imul
xchg
sbb
mov
mov
push
pop
das
lret
mov
xor
push
mov
inc
idivl
outsb
adc
aam
imul
xchg
sbb
push
rcrl
fwait
idivb
or
cli
ljmp
sub
outsb
pop
cmc
ja
lea
jno
dec
inc
loop
aas
xor
sahf
cmc
pop
movsl
push
stos
test
xor
test
in
scas
pop
cmc
adc
dec
xor
inc
fwait
pusha
push
adc
add
dec
js
sub
bound
lds
jg
and
out
jnp
imul
sbb
stos
fidivrl
xor
jns
test
mov
sbb
sub
icebp
pop
sbb
pop
xchg
jp
hlt
or
push
cmc
lret
movsl
and
sarl
adc
faddl
push
lds
or
pop
dec
push
push
sbb
stos
scas
and
movsl
sub
dec
gs
and
leave
mov
fisubl
sub
sub
mov
cld
hlt
rorl
fisubrs
stos
adc
xchg
or
movsw
mov
mov
ret
sarb
mov
pop
js
xchg
xchg
bound
pop
add
fadds
jg
scas
out
out
sbb
mov
jge
inc
dec
and
insb
xor
xorb
adc
push
and
aad
inc
or
adc
inc
ret
jle
shll
add
inc
ljmp
int3
jne
movsl
dec
in
mov
push
test
ja
adc
movsb
andl
jbe
and
adc
imulb
es
jmp
xchg
and
aam
data16
ss
popf
inc
sbb
sub
aam
cltd
fiaddl
aaa
and
sbb
movsb
or
mov
cwtl
and
js,pn
dec
mov
mov
std
mov
sahf
xor
pop
test
adc
imul
js
sbb
xor
adc
addl
push
sub
pop
lahf
testl
dec
adc
cmp
stos
mov
adc
and
mov
sbb
pop
jo
dec
and
mov
imul
mov
movsl
mov
sub
aam
test
mov
sub
lret
dec
pop
stc
repz
sub
push
into
testl
adc
cmp
sbb
xor
jp
lods
mov
dec
inc
cmp
push
xchg
cmpsb
bound
in
mov
sahf
mov
sub
and
dec
in
and
and
dec
and
pop
xchg
test
insl
push
or
adc
adc
add
sub
and
pusha
mov
dec
pop
xor
lret
dec
inc
sbb
xchg
add
shlb
js
cmp
mov
jns
test
rorl
adc
jmp
xchg
int3
cmpsb
and
push
inc
ja
sarl
out
xor
pop
sub
movb
xor
outsb
into
mov
stos
cmpsl
ja
int
and
pop
movsl
fs
jnp
imul
mov
mov
stos
push
jb
sbb
out
mov
or
mov
pop
push
lock
test
dec
pushf
and
push
je
mov
leave
add
sub
push
mov
mov
insb
fs
xchg
mov
inc
pushf
sub
dec
push
jo
xorl
stos
pop
ja
enter
xor
imul
dec
xlat
test
dec
lods
sub
loopne
jecxz
xor
xor
push
push
pusha
daa
popf
adc
jge
cwtl
out
sbb
dec
imul
call
out
rolb
sub
lds
or
pop
sbb
xchg
subb
into
fnsave
in
ret
int
loope
push
xchg
push
jmp
stos
iret
pop
insb
dec
cltd
mov
jns
loope
cld
mov
daa
daa
test
shlb
mov
leave
inc
push
mov
dec
loopne
cmp
xor
mov
inc
int
pop
shl
ljmp
lahf
stc
push
repz
test
enter
daa
inc
mov
mov
adc
xor
lret
pop
sbb
dec
inc
xor
or
xchg
xchg
pop
lds
test
daa
dec
.byte
mov
mov
cmpl
je
jmp
push
das
das
ja
arpl
in
dec
ljmp
gs
insl
arpl
add
arpl
push
mov
lea
neg
call
notb
push
call
shlb
adc
pop
je
and
in
inc
mov
push
pop
xor
add
jae
jne
add
cmp
and
std
outsb
jg
dec
xor
je
mov
push
sbb
or
out
mov
pop
pop
ret
nop
add
or
stc
mov
dec
sub
push
shr
inc
xor
push
xorl
idiv
add
or
add
setne
jl
sbb
mov
shrl
cmp
jne
or
call
lret
arpl
das
add
inc
mov
jg
add
mov
mov
stos
adc
push
push
push
push
lret
add
mov
jle
cs
xor
cmp
pop
xchg
pop
enter
aas
add
idiv
lods
fwait
and
sti
neg
sbb
and
inc
scas
fldcw
mov
cld
adc
lret
outsl
pop
or
and
enter
pop
add
out
mov
push
push
mov
mov
insl
adc
cmc
xlat
cmp
fmuls
or
pop
mov
or
pop
mov
pop
pop
pop
mov
jno
pop
sub
adc
in
push
mov
mov
test
mov
fucomip
mov
lea
or
add
cld
aaa
sbb
les
test
jne
mov
in
cs
push
push
and
fcompl
or
or
clc
fcmovne
jo
add
dec
dec
add
add
ffreep
outsl
bound
mov
sub
pop
push
sub
int3
inc
fnstcw
mov
pop
pop
out
into
fsubr
pop
mov
lock
divb
sbb
mov
and
jg
negb
sarb
leave
or
dec
rclb
jg
je
inc
movsb
or
out
pop
inc
pop
add
pusha
outsb
mov
pop
jge
sub
adc
insl
aas
mov
les
ret
sbb
outsb
mov
or
pop
sub
cmp
inc
pop
daa
fnstenv
sbb
and
inc
notl
or
ja
in
adc
sbb
and
xchg
shrb
ret
add
addb
loop
lahf
mov
and
cwtl
adc
outsb
ret
add
pop
mov
pop
fdiv
cmp
push
sti
xchg
decb
sbb
cmpl
jne
push
jnp
ret
test
mov
lods
ja
imulb
adc
dec
sub
inc
add
xchg
rcr
mov
xor
mov
cmp
mov
pop
add
fisttpl
inc
add
jl
cmp
mov
inc
ret
sbb
nop/reserved
scas
inc
jmp
jl
push
stos
or
imul
cmp
pop
jne
mov
adc
les
jle
dec
mov
sarl
or
mov
add
scas
pusha
call
ret
ret
imul
pop
outsb
xor
outsl
add
insb
divb
fistpl
in
divb
out
push
cmp
push
mov
insb
xor
frstor
rorb
fs
mov
mov
pop
or
adc
push
or
mov
cmp
sbb
add
insl
negl
leave
or
or
sbb
enter
inc
cmp
inc
int3
xchg
or
adc
pusha
add
outsb
jnp
ja
adc
xorps
push
je
int3
je
adc
adc
jo
jb
cmp
adc
cmp
aad
mov
sub
and
sub
ret
mov
je
push
es
jno
mov
sub
aad
cmp
mov
js
push
sub
and
push
push
js
adc
sbb
fistpl
xchg
jmp
addr16
mov
mov
push
push
push
adc
movsl
cmp
push
lea
jl
pop
ret
fnstcw
push
outsb
push
and
or
inc
jb
cmpsl
lahf
idiv
mov
push
fwait
in
je
mov
xchg
push
mov
ds
push
mov
cmpsl
scas
xchg
sub
dec
addr16
divb
iret
push
std
xor
loopne
ret
scas
and
outsl
xor
divb
jne
mov
addb
ret
push
mov
mov
xor
push
adc
ja
subb
ret
xor
dec
add
xchg
mov
mov
push
or
mov
mov
jo
icebp
jmp
and
xchg
mov
sub
adc
dec
fldt
sbb
dec
loopne
dec
cwtl
inc
dec
xor
jbe
pop
mov
ret
sbb
roll
popa
and
and
add
xor
insb
je
push
sub
rorl
xchg
mov
add
adc
or
call
fcmove
call
or
imul
mov
sub
add
mov
add
adc
lahf
dec
or
push
mov
mov
xor
pop
divl
insb
adc
jmp
out
mov
lea
add
pop
cmp
or
jmp
mov
jl
dec
fildl
xor
sub
mov
mov
scas
icebp
cltd
idiv
mov
insb
add
add
insl
dec
movsl
push
adc
fidivs
adc
sbb
loop
loope
mov
add
and
iret
testb
decl
jl
jecxz
mov
mov
mov
push
add
iret
mov
shr
mov
gs
mov
imul
push
inc
mov
inc
dec
jne
mov
inc
inc
aad
ret
jl
pop
add
imul
xor
push
mov
negl
cmp
jne
fsub
adc
int
adc
popa
push
add
adc
sbbb
xor
mov
push
fildll
adc
or
xor
stc
jg
adc
testl
ret
jecxz
mov
inc
dec
add
add
mov
add
jecxz
mov
and
adc
loope
cmp
fidivs
jmp
lock
je
lahf
je
pop
sbb
push
fmulp
rclb
push
push
notb
popa
nop
andps
jl
daa
lock
outsb
sbbb
xor
mov
sub
jbe
jl
inc
cmp
lcall
out
mov
push
push
xchg
lds
inc
xchg
out
mov
sbb
adc
inc
inc
sub
lds
roll
or
add
jmp
rorl
js
arpl
sbb
testb
inc
je
lods
mov
inc
or
call
pop
jg
add
jge
clc
jle
jo
mov
or
inc
or
jbe
notb
push
xor
add
add
lret
int
scas
stos
mov
add
jl
lds
mov
push
add
push
jl
lahf
insl
xchg
mov
add
fcmovnbe
dec
xchg
push
push
pop
sub
or
rcr
or
jne
cmp
cmpsl
adc
sub
or
je
ret
and
fs
movb
addl
lock
push
push
inc
mov
jbe
mov
sbb
data16
lea
push
pop
insl
sub
inc
dec
dec
push
loopne
xchg
cmpl
shl
movb
imulb
push
inc
mov
cltd
add
clc
out
insb
mov
sbb
sbb
cli
adc
adc
sub
mov
sub
stc
sbb
test
inc
or
inc
xor
push
loope
mov
push
lea
cmp
mov
lods
push
ret
sub
xchg
sbb
add
rcl
mov
movsl
add
notl
icebp
std
jmp
and
or
in
insb
dec
mov
rol
xor
dec
xor
pop
mov
sti
or
cli
jne
xor
jnp
fcmovbe
mov
leave
jmp
rcll
fstpl
sub
xorb
push
cs
sbb
pop
call
sbb
sub
nop
out
popa
cmp
mov
pop
jnp
out
pop
lods
and
mov
inc
sub
fmull
xchg
movsl
or
movsb
outsl
pop
ljmp
sub
sbb
leave
adc
push
cwtl
addb
cwtl
inc
and
repnz
dec
add
xchg
js
sti
inc
mov
or
fs
mov
inc
pop
aaa
mov
jmp
push
rorb
inc
adc
and
jmp
repnz
jecxz
jo
mov
push
sbb
push
outsb
sub
and
xchg
add
mov
add
add
sub
adc
loopne
dec
sbb
mov
push
push
shlb
or
or
cmp
push
dec
mov
dec
cmp
jbe
bswap
out
lcall
mov
mov
je
sub
in
xchg
pop
lret
stos
inc
dec
or
mov
xchg
jp
imul
fs
in
push
push
jae
lea
push
push
rcl
out
pop
mov
jge
movb
inc
and
push
mov
add
sub
jbe
or
inc
test
outsl
sbb
push
aad
scas
push
push
andb
xchg
mov
inc
jae
mov
or
push
lret
gs
fwait
bound
jg
loop
sti
in
out
cmc
lret
jmp
and
rep
sub
lahf
in
mov
cmp
je
mov
aam
cmpb
dec
idiv
pop
je
adc
and
mov
pop
jbe
mov
iret
aas
cmp
xorb
add
inc
ljmp
inc
and
xchg
jge
add
or
lods
test
ror
es
pop
aas
mov
fmul
push
or
mov
inc
adc
inc
push
inc
aas
popa
pop
ss
cmpb
push
test
es
test
sbb
into
call
xor
push
push
mov
or
and
mov
popf
and
mov
or
sub
pop
pop
iret
jne,pn
das
push
mov
test
mov
and
push
stos
jmp
or
sub
sbb
cmp
imul
add
insb
jmp
std
or
pop
sbb
and
adc
or
cmp
jns
in
cmpsb
test
mov
cmpsb
sti
jg
shl
shr
add
push
sbbl
or
out
je
cmp
jle
or
dec
adc
cmp
or
outsl
sub
or
jae
xlat
in
jbe
adc
sub
and
cmp
lods
cmp
es
dec
das
scas
sbb
rcrb
mov
shr
jne
lret
fdivl
add
push
or
add
xor
pop
jmp
clc
jo
les
pop
ljmp
push
arpl
inc
xchg
push
stos
sbb
or
stc
push
rdtsc
fsubrl
cmpsb
dec
inc
pop
add
push
movsb
movsl
and
imul
jge
movb
aas
mov
add
popf
nop
lods
add
jmp
in
mov
pop
add
and
add
add
nop
sub
lods
pop
test
rcll
out
sbb
mov
add
fnsave
sbbl
xchg
xchg
test
or
xchg
or
xchg
mov
inc
mov
outsl
mov
push
sub
subb
cmp
push
add
imul
adc
aas
mov
xor
push
add
mov
fdivrp
in
dec
push
cmpsb
je
dec
dec
rcrl
ret
and
testb
mov
or
lds
push
xchg
call
pop
in
push
lea
jge
ficomps
testb
add
imul
es
or
ret
pushf
shrl
mov
cmpsb
pop
psubusb
sbb
xor
jne
push
or
in
dec
mov
jbe
ret
outsl
and
out
insb
jmp
push
push
xor
leave
cmp
clc
and
sbb
stos
out
cmp
sbb
insb
sbb
sbb
cld
inc
mov
xrelease
icebp
mov
sahf
sub
adc
or
sub
xchg
ljmp
adc
movsb
mov
xchg
inc
jmp
popa
mov
push
and
pop
mov
add
push
roll
lcall
xchg
sbb
or
lcall
sbb
rol
mov
xor
int3
shll
add
xor
out
jne
push
daa
or
push
stos
test
xor
dec
push
jmp
subb
shlb
fldl
rorb
inc
add
iret
sub
push
and
xor
sahf
popa
pop
pop
mov
jge
or
or
cmp
pop
adc
movl
int
and
dec
or
jno
ret
add
add
js
je
mov
inc
shrl
cmp
cmp
inc
sbb
jns
addb
jmp
mov
lock
push
pop
mov
loopne
cld
insl
mov
add
mov
push
mov
int3
sub
sub
cltd
cmpsl
imul
aaa
sbb
aam
mov
mov
dec
scas
in
and
ss
lea
mov
inc
mov
jecxz
mov
sbb
mov
adc
sub
test
loope
sbb
aas
mov
and
pop
dec
shr
decb
cli
mov
clc
call
sub
andl
sub
push
ds
mov
adcl
popa
insl
gs
inc
cmp
jb
pop
in
pop
cmp
pop
mov
ret
fisttpll
shrb
loope
add
lret
or
insb
mov
or
shlb
mov
cwtl
mov
inc
add
adc
lcall
pop
and
shlb
pusha
sub
inc
jmp
sub
out
push
insl
ss
test
mov
mov
adc
add
movsl
gs
sahf
push
pop
mov
movsb
dec
test
and
add
jg
sbb
ljmp
cmp
sbb
sbb
lds
shlb
bound
insb
xchg
mov
or
pushf
xor
aaa
and
loope
jl
sbb
add
add
pop
dec
pop
push
dec
xor
das
leave
push
mov
out
lcall
or
nop
and
jb
leave
add
fadds
sbb
lcall
cs
call
ret
jmp
int3
scas
add
lcall
push
scas
cmp
sbb
fmulp
pusha
sbb
fisubrs
in
xor
pop
testl
rcrb
cmc
gs
pop
aaa
dec
ret
cs
jo
inc
add
mov
push
and
movsb
rcrl
sub
sub
sub
ss
push
stos
idivb
cmp
je
cmp
jge
movsb
outsb
and
or
add
nop
cmp
std
sub
or
repz
push
push
mov
ss
xor
js
mov
xchg
rorb
xchg
mov
cmp
les
popa
mov
les
sbbl
mov
cmp
imul
mov
dec
inc
adc
cmpsb
jmp
data16
add
add
clc
dec
push
lcall
sti
and
push
jo
int3
pop
xchg
pop
addr16
sub
mov
adc
mov
mov
pop
aaa
sete
xor
mov
cmp
push
dec
cmp
push
lcall
adc
mov
add
dec
mov
loopne
js
insl
movl
or
or
mov
push
pop
popa
ret
xor
push
push
cmp
in
frstor
int
mov
fnstenv
cld
rol
inc
fld
pop
add
mov
or
xchg
fcomps
xor
xchg
pop
jne
dec
pop
jl
mov
jb
mov
roll
loope
sub
cld
inc
mov
xor
inc
test
sbb
jp
cs
in
pop
push
inc
inc
and
sub
mov
cmp
xchg
push
or
add
ficoms
cmp
mov
sub
xchg
add
xor
and
mov
or
jmp
sbbb
or
xchg
pop
inc
push
dec
jne
sbb
loop
jbe
stc
mov
scas
pop
mov
sbb
dec
out
push
push
mov
incl
iret
inc
dec
jne
mov
jle
push
push
pop
cmp
rcrb
jne
fidivs
add
inc
je
adc
aam
push
sti
fwait
and
pop
call
jmp
mov
xor
or
add
inc
add
push
rclb
ds
jmp
cld
push
adc
cmp
int3
adc
clc
or
rolb
arpl
cmc
daa
repnz
sbb
pop
mov
int
pop
lea
and
pop
fistpl
in
fsubrs
and
sbb
ret
dec
cs
inc
or
ret
pop
popf
out
pop
sahf
fcomp
xchg
jecxz
xor
xor
pop
dec
push
bound
push
stc
pop
cmp
mov
xor
dec
bndstx
sub
or
sbb
jmp
push
push
xor
leave
jb
add
sub
cmp
adc
pop
jg
mov
or
mov
pop
ret
adc
pop
xchg
and
fisubrs
push
push
push
pop
sub
rcl
sbb
sbbb
inc
test
or
mov
fstl
das
push
cmp
jo
loope
sbb
bound
sub
hlt
pop
and
push
leave
subb
loopne
adc
adc
rcrl
je
movl
shl
xor
push
fst
add
aas
and
jl
add
xor
sbb
adc
loopne
lods
cwtl
mov
add
adc
cmp
push
hlt
aam
outsl
mov
in
inc
sbb
push
sbb
or
outsl
cmp
or
js
add
outsb
cltd
in
pusha
fldt
dec
adc
sub
add
cmp
lds
in
outsb
pop
test
mov
jp
inc
pushf
movsb
incl
idivl
mov
pop
push
push
sub
stc
fcomp
jne
outsb
andl
je
or
int3
or
add
jne
xchg
je
jne
inc
js
jmp
iret
mov
shlb
adc
fs
scas
arpl
mov
lods
and
addb
ret
pop
idivl
adc
pop
pop
or
lods
adcl
clc
mov
fdivs
decl
std
pop
pop
inc
cmpsl
xchg
xor
scas
cmp
mov
jle
aad
xchg
adc
pop
sub
or
ret
push
std
dec
cmc
or
lock
add
push
rorb
dec
cmp
lahf
inc
ret
push
inc
aas
inc
or
jne
jmp
add
pop
cld
mov
inc
js
cmp
adcb
nop
pop
hlt
popa
xor
sbb
pop
inc
push
or
sbb
inc
push
out
cmp
inc
xchg
sub
adc
sbb
aas
add
pop
ds
jl
in
or
es
xor
into
or
add
sbb
sbb
push
inc
leave
xchg
outsl
pushf
ret
push
es
stc
mov
xorb
mov
icebp
xlat
push
cmpsl
incb
sbb
mov
rcr
sbb
jae
jne
pop
dec
push
push
inc
xchg
insl
jb
ljmp
adc
xorl
loope
test
imul
push
prefetch
mov
push
push
int
push
inc
std
cmp
leave
add
cmp
jae
aaa
push
or
pop
jle
jbe
xor
pushw
fcoms
pushf
xchg
pop
cmp
fsubrs
das
jl
sbb
je
push
es
mov
ret
fistpl
adc
push
test
movsl
test
mov
movsl
sub
xor
add
lret
add
je
mov
outsl
inc
out
pop
add
jne
sarb
push
inc
dec
sub
push
mov
cmp
icebp
jb
mov
and
clc
xchg
cmp
ss
add
rcll
push
daa
lret
inc
insb
stos
mov
mov
add
xchg
cwtl
cmp
std
pusha
test
pop
and
mov
add
dec
xchg
add
sbbb
add
fldt
cmp
pop
inc
fcoms
add
je
cmp
fsubl
rolb
mov
mov
mov
das
jmp
or
xorb
jne
or
pop
mov
inc
jnp
mov
adc
push
shlb
aad
inc
jle
or
addl
je
fstps
sub
incb
lods
lret
push
in
lea
inc
mov
sub
std
push
or
push
inc
or
and
sub
movsl
sub
push
xor
add
sbb
sbb
inc
mov
mov
inc
imul
in
push
push
and
cs
sub
xor
inc
xor
mov
shlb
in
dec
cmp
sub
call
shrl
xchg
cmc
xor
cmp
les
clc
pop
test
push
pop
push
incb
pop
sub
push
mov
lea
cmp
jnp
clc
adc
pop
lock
xor
xchg
or
xchg
insb
mov
into
cmp
dec
push
inc
lock
sbb
jne
xchg
xor
dec
jle
test
push
adc
mov
fcoms
jnp
sbb
std
sbb
shlb
sbbb
jp
daa
ja
js
add
push
addl
pop
icebp
mov
test
push
sbb
and
lahf
mov
sub
push
gs
dec
out
pop
inc
cmp
cmp
fisubl
mov
add
and
hlt
sti
mov
and
sub
sub
mov
das
push
inc
mov
or
jge
fcomp
repz
push
test
shr
or
dec
jg
push
fdivrl
or
or
iret
mov
jecxz
dec
push
xchg
addl
jg
lock
fildl
xchg
dec
inc
rorl
add
insl
les
arpl
and
sarb
mov
add
sbb
mov
cmp
std
cmp
jne
daa
dec
push
xor
push
or
sahf
cmp
mov
sahf
call
xlat
push
aas
cmpsb
xlat
mov
inc
leave
xor
xor
pop
xor
cmp
push
inc
jmp
in
sbb
add
jl
pushl
pusha
mov
pcmpeqb
and
cmp
shrb
pop
test
mov
addb
push
push
jno
inc
jno
sub
repz
pop
push
test
fdivl
or
xor
iret
cltd
add
cmp
out
adc
les
addr16
sbb
cmp
iret
in
dec
push
cmp
inc
mov
mov
push
ja
add
inc
fistl
ds
mov
mov
jle
push
and
xor
xchg
mov
pop
mov
mov
pop
mov
sub
or
push
adc
test
iret
push
hlt
ret
push
fs
mov
fldl
push
sbb
dec
pushfw
sbb
or
xor
mov
rcr
scas
push
push
data16
fldt
cld
pcmpeqw
sub
popf
push
adc
loope
jmp
mov
dec
add
loop
movsl
in
push
jmp
mov
adc
sub
orb
cmp
mov
xchg
pop
push
mov
out
testb
or
fstl
inc
dec
and
dec
or
sar
ljmp
xor
int
aam
loop
cmp
sahf
outsb
add
add
mov
add
rcll
adc
sbb
vcvtpd2psx
adc
ret
sbb
iret
sti
push
mov
or
jge
xor
aam
or
jmp
or
incb
shr
and
jecxz
cmpl
movl
mov
pop
pop
shr
or
push
or
pop
orb
out
dec
adc
or
lea
roll
setb
loop
jg
inc
and
shl
sahf
rolb
push
add
shll
pop
into
roll
cmp
and
cmp
sub
cmp
bound
push
push
mov
sbbl
addr16
add
int
xchg
gs
sbb
mov
mov
lods
orb
sub
cmp
dec
out
mov
inc
and
adc
adc
jne
jg
imul
or
sub
jns
ds
mov
inc
out
in
mov
push
dec
push
adc
mov
cltd
adc
inc
fs
add
incl
mov
imul
mov
or
dec
jae
cmp
push
push
push
jp
push
pop
mov
pop
lods
lcall
cmp
jne
mov
das
dec
filds
adc
leave
pushf
dec
jmp
enter
sarl
push
inc
sbb
loope
outsl
push
adc
adc
sarl
inc
cmp
adc
or
js
mov
fnstenv
cmpsb
cmp
mov
loopne
cld
mov
es
loopne
test
lods
cwtl
xor
and
mov
aaa
imull
orl
mov
cmp
lods
cmp
cwtl
je
add
xchg
and
mov
push
add
stos
popa
xor
adc
sub
lods
scas
adcb
push
lds
movsl
mov
mov
dec
cmpb
js
jmp
add
test
push
es
or
pop
lds
inc
xchg
pop
push
push
stos
or
inc
xchg
idivb
repz
adc
xchg
jo
mov
push
xchg
lea
clc
cmp
repnz
shr
push
add
adc
rorb
in
push
lds
je
insb
adc
js
in
mov
jle
dec
fistl
call
xor
jmp
outsb
pop
mov
int
fcompl
test
dec
push
push
or
loope
pushl
loop
ss
sbb
rcrl
pop
dec
or
pop
ret
cmc
das
mov
stos
sbb
adc
xor
orb
adc
mov
cmp
jbe
pop
cmp
cs
test
pop
push
inc
and
je
outsb
fs
pop
and
dec
and
xchg
aaa
or
stos
nop
jbe
cmp
subb
push
push
cwtl
idivb
jl
mov
cmp
addr16
cmp
pop
leave
leave
repz
cmp
out
pop
pop
jl
cmp
xchg
add
mov
xchg
aaa
xor
sbb
inc
sbb
push
gs
dec
xor
fbstp
popa
sbb
pop
sbb
test
pop
cmpsb
nop
data16
cmp
in
and
movsb
sub
cs
pop
mov
sbb
popa
and
enter
sbb
cmp
dec
rcrb
pop
mov
call
sbb
aad
inc
jnp
add
je
mov
jp
loop
lds
cmp
out
flds
call
cs
subl
adc
sbb
jb
test
sahf
xchg
ja
pop
jg
jno
push
inc
push
inc
aaa
push
lahf
movsl
sarb
xor
fmuls
xchg
popa
rcrl
push
cmp
rcrl
pop
call
imul
gs
or
or
std
cmp
jno
call
push
cmp
mov
andb
adc
push
pop
adc
stc
imull
mov
movsb
xchg
std
adc
mov
out
scas
stos
or
mov
popf
shrb
movsb
or
sbb
sbb
or
push
mov
xor
mov
or
icebp
test
add
pop
or
adc
roll
mov
repz
push
mov
push
adc
in
cmp
dec
outsl
and
rclb
cmp
and
jge
leave
push
push
inc
adc
cmp
data16
pop
push
sahf
pop
push
cmpsl
jle
dec
add
aad
inc
sahf
les
push
push
fidivrs
pushf
jmp
mov
into
popf
push
subb
or
cmpsl
jo
test
xchg
pop
sbb
xchg
test
push
add
sub
jp
sbb
hlt
xchg
aam
mov
imul
cs
adc
sbb
imul
fstps
and
jecxz
lcall
inc
jle
and
dec
loopne
sbb
push
in
xchg
add
sbb
cmc
jo
test
cmp
xor
fstpl
lea
cld
int3
mov
xchg
rorb
bound
rolb
testl
jmp
stos
je
mov
mov
call
push
add
test
mov
mov
lea
push
sub
into
push
stos
push
or
movsl
inc
test
adc
pop
mov
pop
jl
aad
pop
sub
push
mov
loope
cmp
sbb
mov
jne
scas
mov
adc
jnp
mov
xchg
adc
in
lods
jg
test
and
mov
daa
sbb
jb
add
xor
in
imul
sbb
loopne
jp
add
add
jae
adc
lock
dec
enter
dec
add
dec
in
gs
sbb
popa
dec
adc
or
add
mov
insb
cmpsl
add
add
out
or
imul
sub
cmc
push
jb
push
add
in
sub
pushf
add
aad
jge
cmp
inc
push
push
and
mov
gs
sub
adc
push
push
mov
dec
jle
mov
xor
in
aam
lea
add
xchg
adc
orb
int3
rcrl
popf
fs
imull
adc
jle
insb
cmpb
mov
push
push
adc
push
push
int
inc
hlt
insb
rcrb
addl
push
aaa
push
cmp
xor
aas
inc
xor
hlt
mov
cs
add
push
mov
mov
inc
icebp
xchg
cmpb
je
push
jne
push
pop
pop
pop
push
mov
rcll
mov
push
ss
adcb
call
pop
mov
or
int3
pop
in
cmpsl
sti
pop
lds
je
sbb
cmp
test
pusha
pop
and
add
add
fistps
lods
sbb
inc
adc
push
in
insl
mov
out
in
mov
jb
ret
sbb
call
je
push
xor
in
out
inc
sti
sub
jge
je
and
dec
adc
jl
and
adc
mov
adc
pusha
outsl
pop
push
mov
xorb
mov
jnp
mov
rcll
inc
add
js
fisttpll
pop
sbb
out
in
adc
cmp
mov
inc
cmpl
outsb
xor
and
divl
adc
aam
cld
mov
xchg
ret
mov
fidivl
jno
push
es
je
iret
jbe
fcomps
loop
arpl
ret
lods
cmp
ret
add
nop
movsl
push
add
sub
push
jmp
pop
pop
mov
ds
pop
mov
loope
out
adc
or
inc
mov
fidivrs
pop
cmp
cmp
dec
mov
inc
mov
cmp
jne
dec
out
and
sti
jle
dec
mov
pop
addr16
adc
mov
stc
jg
add
jne
cmpl
add
lods
adc
jo
out
in
mov
ja
sub
cmp
mov
cmpb
adc
inc
add
je
sub
sub
pop
and
xor
ret
mov
pop
lea
fistl
mov
je
ja
jne
cmpb
mov
mov
inc
inc
in
movsb
push
pop
out
fstl
cmp
push
sub
sub
add
add
mov
pop
shrl
mov
push
call
fmul
push
dec
test
dec
lcall
and
pop
dec
jmp
sbb
or
out
loop
pop
lret
jl
inc
rcpps
push
cs
mov
sub
push
cmp
lret
push
gs
xor
push
in
sti
xchg
mov
js
and
or
adc
into
outsb
xchg
mov
insl
sahf
dec
sahf
icebp
out
dec
mov
into
sub
daa
loop
mov
dec
inc
mov
test
push
loopne
jae
leave
shr
inc
cltd
mov
adc
mov
pop
movl
pusha
add
push
subl
fildll
ret
jbe
mov
mov
add
xor
xor
incw
add
dec
jne
mov
jmp
mov
inc
mov
adc
adc
push
jno
mov
mov
ret
iret
add
or
test
sbb
lods
jp
push
outsl
mov
adc
cmpb
mov
or
add
clc
mov
jae
aaa
sbb
int3
mov
lea
jge
sbb
inc
or
push
inc
inc
je
mov
enter
mov
jne
push
xor
out
mov
add
mov
in
aad
aas
hlt
cmp
jne
jns
jb
push
jae
sbb
andb
ret
mov
test
sbb
cmp
push
sbb
sahf
out
pusha
xchg
dec
sbb
sbb
lret
outsb
lea
arpl
xchg
jnp
or
add
shr
fldt
jb
push
jbe
dec
add
aad
fstl
push
xor
cmp
jbe
mov
mov
fsubr
mov
fimull
leave
shr
add
add
inc
mov
test
insl
cld
mov
mov
sbb
push
repnz
mov
popl
pop
pop
stos
loope
mov
mov
and
sbb
xor
add
cmp
and
cmp
push
popa
adc
and
xchg
sbb
push
leave
xchg
pop
jnp
inc
and
and
into
inc
cltd
in
test
sub
punpckhbw
jg
mov
icebp
push
inc
in
ja
loopne
xchg
adc
je
add
stos
sbb
push
and
adc
jl
inc
mov
xor
pushf
sub
mov
mov
push
loopne
aam
std
enter
jle
adcb
mov
push
mov
lea
mov
pop
in
lea
xlat
loop
fdivrl
lret
add
jge
mov
sti
xor
jge
sarl
shlb
dec
push
push
shr
mov
mov
fs
add
and
leave
sub
add
je
insl
jnp
cmp
dec
inc
dec
leave
adc
jnp
push
movb
rorb
dec
inc
je
ja
dec
jbe
sbbl
pop
enter
adc
xchg
decb
mov
test
imul
or
cmp
dec
sahf
jmp
int3
adc
rcl
xchg
stos
push
loopne,pt
inc
icebp
mov
test
ja
pop
fadds
mov
pushf
inc
pop
call
sub
in
adc
mov
mov
ret
or
push
xchg
outsl
adc
add
inc
sub
loopne
dec
xchg
fdivs
jns
into
inc
fistpl
jb
jne
add
fidivs
push
lret
bound
dec
sbb
outsl
inc
fs
or
dec
push
add
rcr
stc
ret
cmp
jo
mov
jnp
test
shr
inc
add
dec
dec
jo
insb
icebp
mov
inc
xor
dec
mov
add
or
loope
xor
xchg
mov
mov
cmp
sbb
mov
xor
cmp
scas
cltd
sbb
jne
or
add
addr16
inc
or
pop
test
sub
ret
sub
xor
mov
mov
add
pop
mov
jne
sub
ja
sti
scas
fisttpl
add
adc
push
shlb
push
cmp
das
imul
jne
stos
icebp
push
pop
fstps
ljmp
add
mov
xlat
je
cmp
sub
push
adc
inc
loop
cmp
dec
loopne
xchg
std
cmp
pop
push
sbb
inc
jae
sahf
clc
shll
and
pushf
aad
mov
stos
outsl
stos
push
adc
jb
jmp
inc
or
test
jmp
mov
mov
or
xchg
or
adc
mov
mov
sti
xor
add
es
pop
mov
add
add
aam
data16
and
xor
fnstenv
adc
or
cmp
jl
cmp
jg
out
cmp
jg
insb
mov
cs
cmp
jle
cmp
pop
xchg
rol
or
cmpsb
and
mov
or
call
or
push
push
xor
and
loope
push
in
jne
clc
arpl
pushl
jbe
mov
inc
test
and
mov
mov
stc
sbb
inc
sbb
mov
push
jle
mov
inc
andb
push
push
pop
add
mov
cmp
mov
movsl
xor
out
repnz
fldenv
mov
shlb
mov
cmp
jbe
dec
mov
popl
je
and
fiadds
and
push
jmp
pop
pcmpgtd
mov
pusha
xlat
adc
les
in
adc
ss
jbe
xor
inc
rol
jbe
or
js
aad
xor
cmpl
xchg
subb
inc
xor
add
lret
test
in
ret
push
incb
or
push
dec
popa
in
dec
add
jb
push
cmc
xor
pop
xchg
faddl
or
scas
sub
cmp
lret
jmp
dec
popf
mov
add
mov
add
dec
jmp
xor
repnz
repz
push
add
dec
dec
sbb
popa
xor
or
inc
ljmp
add
scas
push
xor
cmp
jl
jns
fsubrs
fidivs
adc
outsb
adc
inc
add
rep
mov
add
adc
add
es
rcrb
shll
test
aas
sti
mov
pop
leave
mov
adc
sub
es
cmp
push
out
cmpsl
sti
and
mov
dec
cmp
xchg
xor
jmp
pop
cmp
inc
movb
adc
fsts
iret
adc
adc
cmp
sbb
and
jb
add
cmp
add
shr
sub
out
loope
sub
rcll
xlat
fsts
inc
roll
in
sub
sub
jge
jae
xchg
inc
pusha
jns
sub
test
pop
jne
orb
jp
dec
scas
pop
subl
push
mov
stc
mov
push
jle
sub
push
or
mov
rclb
loope
inc
adc
sub
shll
push
sbb
ja
push
adc
or
adc
sbb
lret
cwtl
mov
rol
cmp
ja
mov
rcl
inc
shl
dec
jbe
xchg
testl
sub
and
adcl
adc
and
push
sub
jl
jmp
test
dec
push
push
mov
xor
push
or
sahf
adc
es
or
or
rorb
insb
test
pop
mov
pop
bound
xlat
add
fiaddl
test
xor
dec
in
and
fdiv
jle
jbe
mov
adc
pop
incl
ljmp
imul
xchg
push
jb
inc
cmp
jb
dec
and
sbb
fiadds
rol
adc
pop
xor
add
psrad
test
mov
sub
xor
pop
lock
cmp
in
mov
pop
cmpsb
lods
xchg
push
dec
pop
mov
loop
jp
or
adc
add
or
push
xor
or
subl
pop
jmp
scas
and
inc
dec
lcall
add
cmp
fs
xchg
adc
sbb
push
mov
add
lods
flds
pop
bnd
pop
add
pop
adc
push
add
repz
pusha
xor
add
mov
icebp
and
leave
int
icebp
pop
lret
mov
cmp
roll
cmc
icebp
adc
xor
aam
insb
repz
adc
inc
hlt
xchg
dec
cs
hlt
sub
inc
cmp
or
adc
and
push
call
hlt
sub
bound
push
push
sbb
mov
je
shl
sbb
and
cwtl
mov
mov
cld
loopne
sbb
push
add
cmp
and
repnz
cmp
cmp
push
and
sar
out
sbb
adc
sub
jge
ret
ret
sbb
or
clc
hlt
xor
inc
repnz
adc
sbb
sbb
push
adc
xchg
xor
push
push
enter
push
adc
leave
and
sbb
sbb
adc
xor
jne
lea
pushl
insb
or
dec
mov
mov
jmp
int
add
pop
xor
add
add
adc
in
out
call
out
adc
fcoms
add
movb
adc
add
sub
fildl
add
stc
push
jl
repz
or
int3
imulb
dec
lods
and
ret
gs
pusha
xorb
push
sarb
cmp
fcoms
push
mov
fcom
xor
inc
es
sub
jg
lcall
es
cwtl
or
aad
push
add
fidivs
shrb
jo
fistl
adc
mov
xor
sub
mov
mov
adc
add
mov
sbb
jne
jmp
cmp
ret
outsl
push
stc
push
xchg
mov
adc
loope
jl
dec
clc
dec
lea
pop
xor
inc
dec
movb
inc
mov
or
inc
aam
icebp
mov
cld
lods
push
or
shr
mov
mov
in
test
pop
and
xchg
mov
cmp
mov
das
ret
movsbl
inc
inc
loopne
jg
jns
or
lea
xor
push
stos
push
inc
add
add
andb
mov
and
loop
lcall
or
inc
icebp
sbb
icebp
fld
xor
cmp
movsl
sarb
mov
lahf
mov
lods
or
cmp
mov
add
push
adc
jne
mov
xchg
cmp
push
cmp
imul
call
pop
jmp
pop
jp
je
add
cmp
jbe
sbb
push
cld
in
jnp
cmpsl
mov
add
movsl
inc
xchg
mov
push
pop
inc
data16
sub
mov
sar
rorl
pop
inc
cmp
sub
dec
mov
insl
outsl
add
or
test
or
and
add
cmp
adc
neg
adc
sbb
mov
and
in
sti
sbb
xchg
or
sub
pop
faddl
lea
sbb
jnp
and
push
movsb
sub
inc
cmp
mov
xchg
das
fcoml
pop
loop
mov
loope
sbb
cmp
inc
inc
loop
testl
add
sti
outsl
add
pop
leave
sbb
fcomp
vmovhlps
push
inc
mov
mov
xor
popf
cmp
jne
mov
jnp
dec
pop
cmp
je
push
or
mov
push
ds
sar
sbb
adc
sbb
in
sahf
mov
mov
adc
mov
pop
add
mov
and
push
sub
rcrl
mov
dec
push
add
adc
les
cwtl
leave
cli
adc
jb
sbb
add
or
fiaddl
popa
sub
sti
lea
sub
cs
es
aad
dec
xchg
sbb
xor
les
sbb
and
dec
dec
fstps
sbb
clc
or
or
mov
dec
pushf
call
add
add
xchg
sub
in
cmp
push
push
sub
js
pop
mov
inc
in
aaa
jl
pop
mov
jg
adc
fs
rol
push
popa
mov
and
test
movb
add
dec
lcall
sahf
gs
sbb
push
test
lds
add
and
cmp
sbb
pusha
push
cmp
je
scas
ds
mov
outsb
je
mov
outsl
add
or
ljmp
icebp
imul
jecxz
adc
inc
or
mov
inc
inc
popa
scas
xor
pop
insl
pop
pusha
pop
push
iret
push
pop
pop
or
aaa
loopne
dec
cmp
pop
jle
fisttpl
shl
mov
push
xor
mov
mov
leave
pop
add
inc
or
or
inc
cmp
sbb
jl
ret
jne
pop
dec
out
arpl
sub
and
aas
add
or
push
push
jmp
or
sub
pushf
test
bound
mov
inc
addb
xchg
cmp
inc
inc
or
outsl
into
adc
sub
adc
push
insb
notb
and
xorb
sbb
sbb
inc
inc
xor
loope
ds
push
fistl
call
xchg
fldl
jae
and
or
cmp
add
push
aas
xchg
fidivs
xor
push
inc
sub
dec
je
dec
jne
cmp
rorb
mov
or
push
adc
adc
push
jb
scas
adc
pop
aam
or
sti
mov
dec
xor
jp
push
loopne
loop
push
push
mov
inc
insb
xchg
sbb
sbb
xor
aaa
mov
cmp
fstpl
push
sbb
xor
pushf
xchg
lock
insb
mov
add
sbb
loop
push
movsb
dec
and
enter
je
jl
inc
xor
add
out
jmp
inc
cmp
pop
push
stc
sarb
xor
pop
cli
mov
jns
aad
cmp
ja
pushf
sub
stos
push
mov
mov
mov
sub
sbb
mov
jne
shll
jp
dec
mov
outsb
jbe
push
mov
call
adc
pop
ret
inc
sub
sub
mov
adc
out
push
lret
dec
push
shlb
or
pop
and
cmp
movsb
xchg
test
adc
ljmp
xorb
sbb
xchg
cwtl
hlt
or
in
jbe
lock
xor
mov
aas
int3
es
mov
adc
test
lds
pop
sbb
sub
add
addl
add
rclb
fwait
lods
lock
or
imul
or
mov
insb
lods
ret
or
jno
jne
mov
lods
hlt
shll
lock
sub
and
add
and
pop
push
in
jne
xor
addr16
cmpl
mov
push
add
or
and
clc
mov
mov
fcoms
ret
mov
mov
inc
adc
in
inc
out
test
mov
or
sub
sbb
cmp
lretw
insl
dec
aas
sub
icebp
adc
sub
xlat
jo
jo
mov
ss
or
mov
ss
push
mov
jmp
stc
invd
and
mov
mov
ret
add
jo
inc
je
aad
mull
int
push
fcmovb
jmp
push
adc
adc
push
sub
mov
out
inc
push
mov
and
or
jmp
rclb
es
add
adc
pop
pop
dec
adc
es
ja
inc
pop
mov
push
jmp
ret
test
add
and
push
pusha
stos
outsb
push
lsl
and
andb
sub
mov
imul
push
sbbb
mov
push
mov
cmp
jne
cmp
jne
dec
adc
mov
jle
dec
adc
stc
lea
xor
rorb
cmp
or
fimuls
fnstenv
mov
pop
sbb
test
mov
or
leave
cmp
adc
sbb
adc
mov
out
jle
xchg
sbb
mov
clc
mov
pop
shlb
and
and
jmp
and
jl
lidtl
test
dec
inc
inc
arpl
pop
or
mov
push
mov
lods
lea
loop
add
mov
mov
loope
xchg
loop
inc
shl
pusha
fadds
es
sbb
shlb
push
mov
mov
lahf
jle
aas
mov
pop
sahf
jg
cmp
pop
mov
mov
push
jmp
scas
mov
mov
clc
clc
inc
push
ljmp
push
into
stos
xor
and
xor
outsl
xchg
inc
mov
add
cli
mov
mov
and
inc
adc
imul
lods
notb
test
sbb
mov
imul
mov
pushf
push
jne
dec
sub
xchg
mov
loopne
mov
jo
mov
sbb
sti
sub
mov
jae
ds
cmp
es
jg
in
mov
inc
add
adc
repz
inc
pop
adcb
or
mov
push
rclb
ds
push
je
and
in
fsubrs
movsl
ret
adc
mov
dec
xchg
lods
jnp
cmpsb
enter
mov
fwait
out
mov
rorb
push
cmpb
pop
shr
pop
jle
iret
mov
mov
dec
test
mov
mov
jne
pop
xchg
stos
inc
outsb
sbb
mov
inc
xchg
push
push
clc
or
movb
mov
cld
inc
add
ffreep
popa
pop
add
movl
mov
shl
mov
pop
dec
and
lock
iret
sub
fiadds
mov
add
mov
mov
fldcw
mov
stos
and
outsl
loopne
and
aam
jl
push
repz
or
cmp
adc
or
cmp
aam
or
dec
je
lea
push
dec
xchg
arpl
push
les
lcall
jle
aaa
inc
or
jno
and
mov
and
ja
or
or
or
mov
or
enter
orb
mov
and
push
negl
mov
inc
ja
je
pusha
and
dec
push
sbb
jmp
push
jg
mov
popf
adc
jmp
orb
pop
shll
xchg
ja
sahf
sub
imul
outsb
sbb
mov
cld
mov
push
clc
adc
fsubs
cwtl
pop
ljmp
data16
cmp
mov
fimuls
jmp
push
push
mov
sete
loop
mov
jmp
mov
jl
aaa
fsts
movsl
cmp
pop
outsl
push
mov
ror
jns
fisubrs
loope
push
push
add
or
pop
pop
orl
sub
repz
fcoms
je
push
or
xchg
les
xchg
pop
sar
jl
push
cmp
testb
test
add
jmp
test
pusha
push
lahf
push
mov
jnp
push
add
shr
adc
inc
or
subl
adcl
mov
mov
mov
mov
push
and
test
push
sub
addr16
jle
push
push
and
mov
add
sbb
pop
xor
mov
sbbl
scas
mov
sbb
sbb
aaa
xchg
adc
mov
push
or
sbb
push
out
xor
add
push
rorl
daa
xor
loope
pop
adc
and
movsb
call
inc
adc
mov
aad
mov
fsubr
add
add
hlt
add
mov
mov
inc
and
dec
mov
xchg
test
add
jl
or
pop
jno
push
xchg
xor
pop
xor
pop
test
mov
mov
call
xchg
sub
shr
dec
inc
and
and
push
aam
outsb
sbb
pop
push
lods
inc
arpl
xor
je
add
sub
sub
test
pop
sbb
xchg
push
mov
inc
ret
cmp
adc
mov
sarb
in
add
xchg
push
xlat
jo
dec
pop
outsl
in
mov
int3
ss
loopne
sub
mov
inc
je
inc
adc
push
test
ret
add
insl
out
xchg
sub
adc
dec
jne
pop
sub
or
sahf
fimull
lret
push
lea
bound
imul
add
mov
jmp
add
and
push
mov
inc
dec
fcomps
scas
or
mov
pop
mov
aaa
xorb
std
std
add
push
or
cmp
shll
inc
aam
push
ret
sbb
std
ret
add
mov
mov
and
jmp
pusha
lret
xchg
push
ljmp
mov
or
repz
bound
and
fstps
aaa
and
jg
sub
pop
push
pop
xorl
dec
sbb
jo
and
test
sbb
imul
push
sub
push
sub
daa
push
sbb
add
fnstsw
adc
pop
mov
mov
stos
push
push
hlt
outsl
and
lods
pushf
push
movb
push
push
push
mov
cmp
mov
imul
or
adc
fsts
jne
push
leave
test
pop
mov
insb
cmc
jbe
das
mov
arpl
dec
lods
loopne
cmpsb
cmpb
fsubr
mov
push
mov
xchg
mov
mov
test
push
inc
jo
push
add
std
pop
push
and
inc
mov
mov
sbb
jl
adc
xchg
adc
xchg
and
or
add
jnp
and
repnz
cmp
pop
gs
xor
mov
jbe
or
xor
jle
inc
test
je
test
add
cmp
mov
int
sub
adc
lea
mov
mov
lods
pop
xchg
je
dec
mov
cs
and
adc
add
ss
jne
sbb
jl
push
inc
mov
loop
sub
mov
add
sbb
sub
cmp
mov
add
push
lahf
cmp
mov
stc
test
mov
jg
dec
sti
cmp
jle
mov
add
movsb
mov
or
hlt
lea
push
lea
enter
movsl
enter
mov
inc
loop
mov
add
cmp
jne
push
push
cld
je
loop
or
xchg
and
jle
adc
cli
mov
loopne
in
nop
into
push
imul
sbb
inc
nop
addl
inc
sub
add
pop
pop
loopne
adc
inc
mov
push
inc
je
mov
jb
push
push
gs
add
pop
outsb
shll
je
dec
scas
mov
adc
cs
fdivr
jbe
repnz
jbe
inc
mov
stos
mov
dec
sub
mov
add
cmp
add
cmc
imul
or
sbb
adc
add
or
subl
adc
pop
call
and
jecxz
mov
or
jbe
inc
int3
adc
push
sbb
push
mov
mov
or
scas
cmp
shlb
pop
sub
fdiv
xchg
push
jnp
and
leave
shrl
and
cli
jmp
mov
mov
push
mov
mov
leave
ret
push
rcrl
rcll
pop
daa
andnps
mov
or
xchg
add
push
mov
or
lock
aas
ret
jne
es
jmp
sub
jne
push
and
lea
loopne
or
sbb
sbb
xchg
subb
cs
pop
cld
lea
push
adc
ds
inc
sbb
imul
adc
push
call
add
inc
sbb
sbb
sbb
ret
cltd
leave
sub
push
and
push
pushf
roll
ret
popf
pop
adc
or
sub
push
xor
loope
jmp
adc
pop
sub
adc
add
fnstsw
adc
pop
add
jg
fisubs
mov
or
or
sub
sbb
pop
add
dec
inc
cmp
jl
xchg
add
pop
jp,pt
push
jg
add
and
inc
sbb
aam
femms
or
jae
cli
fcoms
decl
push
push
scas
jns
and
mov
xor
push
and
addr16
enter
xchg
add
pop
and
jb
pop
scas
daa
dec
mov
and
mov
cmpsl
inc
xor
mov
inc
inc
divb
jle
leave
adc
dec
mov
push
dec
unpcklps
push
mov
lods
fistl
mov
rorl
cmpsl
es
out
out
adc
push
or
mov
xchg
push
sarb
lret
subb
hlt
mov
das
mov
je
push
mov
adc
mov
xor
and
pop
and
push
mov
xor
push
lret
add
arpl
jno
les
xlat
clc
push
mov
mov
shr
add
pop
jo
sbb
jg
ljmp
xor
mov
ffreep
push
add
dec
or
inc
int
mov
adc
je
stos
pop
insl
pushl
jne
mov
jmp
or
mov
and
in
cmp
lret
or
push
or
pushl
stc
push
xchg
stos
jb
fstl
roll
insb
adc
in
outsb
aam
mov
in
add
data16
push
cltd
push
pop
dec
int3
and
push
fwait
add
mov
loop
into
mov
sub
and
push
push
add
movsb
or
add
bound
lock
sqrtps
mov
jl
pop
jne
xchg
loopne
push
inc
pop
and
mov
rorl
das
dec
dec
mov
cmpsb
movl
outsl
jb
add
inc
or
pushf
push
cmp
loopne
lods
addb
mov
sub
and
pop
jne
fwait
push
xor
or
pusha
call
mov
int3
sbb
iret
or
inc
sbb
add
sbb
xor
sub
push
dec
lcall
mov
fdivrs
pop
shrb
lods
fisubs
pop
and
push
xchg
ret
mov
push
inc
jle
add
sarl
fs
push
push
mov
add
mov
push
out
lods
sub
rcrl
in
sbbl
test
adc
xor
mov
xchg
jg
mov
test
inc
sub
pop
and
jmp
test
mov
sbb
lret
lods
je
mov
pop
jnp
daa
push
test
repnz
out
jl
leave
cmp
jl
and
jg
push
mov
fwait
xchg
popa
rcr
andb
dec
popa
rclb
and
sbb
mov
jl
adc
test
adc
test
cmp
es
jo
shll
mov
mov
pop
out
jge
push
sub
mov
std
sbb
push
add
inc
in
adc
sbb
pop
add
push
dec
mov
xor
fwait
inc
mov
pop
xchg
fbstp
filds
inc
pop
adc
sbb
mov
xor
mov
scas
mov
cmp
mov
push
push
inc
je
pushf
dec
xchg
push
inc
lcall
cmc
push
jle
fidivrs
push
push
shrb
filds
pop
enter
dec
push
addb
push
dec
jae
movq
sbb
data16
sbb
push
fisttpll
adc
pusha
dec
xchg
jns
jmp
pusha
add
mov
cmp
pop
dec
or
xchg
xor
mov
mov
lea
mov
cmp
je
incl
aas
cmp
je
cmp
je
cmp
ja
pop
je
cmp
je
or
daa
cmp
je
cmp
je
xchg
loope
mov
mov
or
cld
cmpsb
popa
jecxz
inc
inc
cmp
jl
add
js
mov
fildl
sbb
pop
jmp
fadd
mov
dec
mov
icebp
pop
pop
sub
addb
es
pop
mov
out
lea
and
psubusw
adc
aad
lods
stos
add
jmp
loopne
xor
add
pusha
in
ja
je
pop
out
iret
mov
or
inc
cmp
mov
add
dec
pop
and
sbb
and
mov
incl
dec
je
xchg
sti
mov
jp
jno
andl
pop
andb
add
fbld
les
jae
adc
loope
push
mov
roll
or
int
add
sub
jl
cmp
mov
js
cmp
lcall
sbb
adc
arpl
inc
push
mov
mov
inc
enter
pop
push
mov
repz
scas
addl
sbbb
movsl
add
fs
add
fs
push
xor
push
ret
cmp
jne
fcompl
les
pushf
fists
add
addr16
inc
movsl
push
xlat
inc
inc
mov
inc
fildl
cmp
or
xorl
and
mov
clc
or
add
xor
mov
dec
insb
pop
add
adc
push
xlat
add
cmp
cmpsb
jecxz
sbb
dec
mov
inc
mov
mov
lods
and
jmp
cld
push
les
dec
incl
add
jne
jno
ficoml
push
push
inc
mov
mov
cmp
pushf
mov
push
fadds
mov
std
add
arpl
inc
data16
sbb
fstpt
pop
adc
inc
loop
shlb
cmpsb
pop
add
sar
push
shlb
idivb
xor
cmp
pop
cmp
inc
ds
add
les
and
sbb
jb
jge
mov
pusha
add
and
or
add
push
mov
pop
add
or
sub
lods
in
sbb
inc
xor
jno
add
pop
or
popf
adc
and
mov
jne
sub
sub
shll
jge
lret
lcall
sub
cs
adc
dec
sbb
jbe
adc
or
mov
cmp
push
mov
mov
fmuls
inc
loopne
lock
adc
dec
pop
leave
inc
loopne
mov
out
in
pusha
fldt
push
add
or
and
fldenv
sbb
or
jb
jp
jmp
pop
stc
in
pusha
dec
sbb
add
xor
inc
or
inc
dec
sub
adc
test
pop
and
xor
adc
and
xchg
adc
and
inc
aaa
adc
jne
fld
out
push
nop
lds
jb
sahf
mov
add
sub
pop
cli
add
ror
andl
lds
push
cmpsb
sbb
or
ret
or
cmp
xor
adc
or
push
add
inc
loopne
rorb
inc
push
mov
jne
and
adc
mov
je
shlb
push
in
js
inc
test
adc
xor
mov
add
ds
and
push
int3
jbe
insl
rcl
scas
pusha
sbb
les
sbb
xchg
rcr
or
iret
sub
add
xor
dec
iret
arpl
testb
jae
pop
orl
outsl
mov
and
lods
ret
adc
jg
push
xor
xchg
xor
lock
jne
mov
mov
gs
adc
mov
sub
fsubrs
inc
mov
in
push
push
icebp
and
push
out
pop
inc
imul
sbb
cmpb
aas
fildll
inc
in
adc
or
mov
sub
xor
cld
push
mov
xchg
add
jle
outsb
push
cmp
lcall
addr16
shl
test
or
add
push
popa
call
xor
and
rcll
mov
insl
push
add
inc
cmpsl
push
or
mov
push
scas
adc
lock
gs
stos
push
sub
scas
mov
xor
or
mov
orb
daa
pop
push
testb
cmp
sbb
xor
cltd
inc
hlt
push
les
and
into
add
inc
je
ss
mov
inc
daa
sbb
call
or
scas
xorl
sbb
dec
add
pop
push
pop
sbbb
sub
mov
fs
xchg
jmp
adc
push
and
sub
adc
push
fidivrl
add
xor
add
subb
add
lods
inc
inc
push
push
push
sbbb
mov
js
daa
push
adc
sti
xor
in
adc
inc
jo
clc
sbb
shl
xor
jnp
jl
push
adc
xor
push
rorb
mov
adc
adc
imul
xlat
inc
xchg
in
push
push
invd
adc
mov
pop
or
outsb
xchg
into
jo
jns
push
dec
sub
adc
push
mov
lahf
inc
mov
or
pop
mov
or
sti
call
lods
push
sbb
xor
adc
pop
pop
pop
pop
adc
aam
ja
xchg
nop
and
mov
push
loopne
insb
notb
or
mov
mov
push
adc
xor
add
jb
pop
jns
sub
testb
inc
popf
cmc
je
mov
xor
roll
pop
xchg
sbb
sbb
add
fisttpll
cmp
or
in
add
inc
and
sbb
xorb
mov
sub
daa
int3
inc
mov
cmc
push
lock
dec
cmp
and
pop
adc
mov
cld
cmp
adc
xor
shll
or
sahf
roll
push
push
scas
nop
dec
into
int3
fsubl
popa
aaa
and
fsubrl
xor
lods
iret
out
aam
cwtl
push
xor
or
fwait
mov
and
sub
cmp
xor
jl
and
icebp
xlat
inc
jmp
adc
push
xor
sbb
or
sbb
add
nop
add
jne
nop
gs
outsl
add
adc
aaa
nop
add
sbb
or
or
sub
das
sbbb
push
std
cmp
sti
scas
cmc
xchg
cmp
push
sub
push
push
ds
or
aas
nop
inc
xchg
test
js
push
leave
push
pop
js
test
or
jle
add
ret
add
call
cli
push
pop
movb
push
and
in
jno
testb
xor
inc
sarl
ror
popa
outsb
adc
cmp
inc
or
xchg
test
int
sub
insb
sbb
mov
and
orl
dec
fs
adc
jne
add
or
xchg
fwait
pusha
fcmove
and
cmp
dec
dec
pop
adc
daa
mov
or
push
push
push
jp
dec
or
lock
mov
pop
testl
faddl
jmp
or
sub
aas
push
cmc
and
stos
push
sub
add
test
sbb
xchg
lcall
xor
xchg
jle
rolb
subb
push
sbb
cmp
push
add
mov
movsb
in
add
inc
xchg
add
xchg
jle
xchg
cmp
js
or
data16
sub
mov
mov
div
shrl
mov
shll
rclb
ljmp
push
rep
pop
push
add
push
insb
mov
nop
sub
mov
movsb
imul
cmp
je
push
push
xlat
push
sbb
lods
inc
mov
inc
ss
xor
es
loope
sbb
jnp
or
test
pop
test
inc
pop
jg
push
inc
inc
js
into
ds
shrb
cmp
pop
add
inc
mov
push
out
cs
or
jb
xchg
fmuls
mov
inc
push
nop
mov
add
divb
in
sbb
js
insb
ret
js
add
test
or
add
cli
int
mov
es
jnp
pop
dec
sub
bound
lea
pandn
adc
or
add
loope
sbb
sbb
cpuid
scas
cmp
sub
adc
adc
mov
jne
arpl
add
jne
test
adc
lcall
cmp
add
mov
ja
or
push
arpl
pop
outsb
jnp
add
push
lcall
test
shr
push
andb
dec
movsb
mov
xchg
sub
inc
pop
push
test
fimuls
sub
and
sbb
daa
jmp
push
icebp
pop
in
cmp
mov
push
aad
and
adc
adc
inc
or
sti
sub
das
inc
jae
addl
std
adc
xlat
in
pop
sbb
mov
mov
aad
cmp
gs
into
or
scas
cs
stc
rolb
addl
fisubrs
and
fnsave
and
or
cld
loop
fdivrs
sbb
data16
out
leave
lahf
scas
mov
fsts
mov
mov
adcb
or
lods
pop
mov
leave
jge
xor
push
push
add
xor
aad
lods
mov
sahf
rcll
dec
icebp
adc
mull
sbb
mov
adc
jne
stc
jg
add
pop
int
jmp
inc
mov
mov
test
pop
xor
fisttps
mov
mov
sub
inc
inc
add
test
xlat
push
fmuls
sub
push
hlt
testl
enter
pop
sbb
lock
fisttpl
out
std
shlb
mov
cmpl
test
adc
mov
xlat
sbb
adc
xchg
add
push
xlat
sbb
adc
inc
inc
xchg
and
sbb
out
mov
push
cld
pop
push
and
aas
test
mov
add
enter
xchg
and
fnstsw
mov
aaa
push
push
popa
jmp
dec
add
add
fs
jmp
je
dec
scas
enter
inc
mov
push
mov
add
daa
unpckhps
mov
mov
jnp
mov
and
or
mov
inc
and
mov
popl
cmp
push
or
inc
push
push
push
mov
das
fisubs
sub
push
hlt
scas
adcb
push
push
js
enter
push
setno
jl
icebp
cmp
dec
inc
and
adc
push
insl
add
add
mov
scas
xchg
sbb
inc
pusha
in
imulb
mov
into
repz
sub
push
cmp
push
lock
push
stos
add
pop
sub
int
cmp
pushf
mov
mov
mov
pop
push
ret
sbbb
mov
adc
addr16
and
jno
dec
mov
fcmovb
leave
fidivrs
jb
dec
mov
adc
adc
jae
xor
in
icebp
push
shrb
icebp
dec
push
add
lcall
push
sti
add
shlb
mov
xchg
push
mov
jb
adc
pop
mov
aad
push
arpl
or
lock
notb
inc
or
add
dec
lcall
mov
mov
loop
jge
into
cmp
ja
sub
icebp
fcmove
add
push
sbb
cld
iret
test
pop
xor
jmp
inc
sbb
es
push
sub
push
mov
clc
pop
add
push
xor
adc
inc
mov
push
jl
sbb
xchg
jmp
jge
sub
test
shll
push
or
xor
push
xchg
push
adc
push
pushf
push
push
mull
mov
xor
or
push
or
adc
xor
lock
ret
outsl
call
xchg
push
dec
add
sbb
xchg
mov
fsts
mov
pop
leave
inc
or
adc
add
jb
or
daa
dec
or
cmp
dec
inc
aad
in
xchg
push
cmp
leave
and
dec
push
jne
push
add
push
cld
or
lock
rol
add
cs
movb
flds
pop
or
inc
mov
inc
rorl
jo
xor
cmpl
add
daa
adc
imull
cmp
mov
add
insl
xor
adcl
subb
call
cmp
mov
movb
nop
push
out
sub
popa
mov
mov
xor
pusha
sarb
cltd
inc
adc
stos
adc
add
push
pop
fsts
jo
mov
mov
fimull
mov
xchg
outsb
cs
or
jno
cmp
mov
add
sbb
pop
daa
jne
pop
mov
pop
imul
clc
dec
jo
or
fs
mov
or
push
add
cli
testb
jne
inc
xchg
jne
add
jmp
xor
inc
adc
das
adc
xor
pop
xchg
dec
push
push
push
cmp
adc
roll
je
sub
lahf
lea
mov
cmp
sbb
faddl
loopne
inc
stos
xrelease
mov
test
sub
ss
je
sbbb
push
xor
adc
mov
mov
lret
lret
dec
add
sub
add
mov
pop
push
pop
sub
push
jno
add
lods
sub
mov
js
pop
jnp
add
or
sub
stos
mov
or
in
jmp
jne
test
stos
jp
lret
push
adc
lret
add
xlat
sbb
sub
out
cmp
es
pusha
in
cs
fldcw
jno
adc
mov
loopne
push
outsb
divb
stos
push
sub
push
or
xor
jle
sub
or
dec
push
mov
fcoms
adc
data16
out
xchg
sub
aad
je
je
adc
je
loopne
rolw
cmpsl
and
mov
mov
push
je
adc
mov
test
mov
movsb
push
cmp
rcll
push
rcr
mov
cmpsb
call
adc
fisttpll
pop
jmp
and
inc
sbb
add
cmp
clc
fwait
add
or
dec
lock
add
xor
cmp
cmpl
xchg
mov
xor
xor
popw
adc
xchg
adc
and
xlat
sbb
dec
add
xchg
push
adc
push
adc
popf
insl
ret
clc
lds
xor
mov
sub
xchg
mov
rcrl
push
mov
inc
stos
test
cmp
pop
add
sub
sub
dec
dec
cmp
and
mov
cmp
inc
in
inc
test
jg
xchg
push
outsb
lock
data16
cmpsb
jne
cmp
push
push
mov
shlb
outsl
add
mov
push
mov
std
push
jmp
jmp
push
insb
les
sub
mov
dec
and
call
jb
lds
xchg
push
or
push
cmp
add
sahf
and
lods
jle
xor
out
add
in
sub
nop
test
cmp
xor
test
pop
fstpt
lcall
xchg
jge
mov
pop
cmp
or
sub
push
sub
push
gs
scas
push
sbb
cltd
in
repnz
loopne
stos
gs
pusha
sub
jb
orl
and
fsts
pop
jl
and
sarb
push
dec
call
push
add
enter
lea
adc
push
ret
in
push
sbb
ror
aas
xor
push
orb
loopne
cld
inc
push
adc
jae
jb
jge
enter
sbb
add
addl
sub
or
dec
in
inc
popa
mov
test
cmp
xor
cmp
push
out
pop
mov
int3
xor
cmp
rorl
xor
ss
sub
sbb
or
ja
out
push
ret
dec
mov
pusha
or
neg
mov
mov
or
and
jns,pt
inc
scas
js
xchg
dec
push
mov
dec
leave
jne
xchg
dec
pushf
add
adc
mov
and
push
jmp
push
psubusw
ret
clc
dec
cwtl
and
sbb
stos
xchg
dec
mov
cwtl
out
sbb
rorb
adc
add
lock
pop
mov
dec
or
nop
xchg
adc
cmp
mov
leave
je
test
in
sub
xchg
nop
jne
xchg
stos
dec
and
mov
xchg
gs
inc
or
xchg
mov
xchg
push
jb
push
pop
pop
add
xor
mov
mov
or
mov
sbb
pop
fidivrl
out
and
adc
std
push
sar
enter
mov
xchg
mov
fildl
mov
mov
enter
jp
or
dec
mov
xor
pop
movb
pop
test
sti
push
mov
or
and
test
ret
inc
push
jl
add
lods
mov
ds
dec
or
add
xor
and
hlt
inc
in
sub
mov
fsubr
rclb
daa
sub
test
fcomps
xchg
xor
int3
adc
pop
mov
mov
mov
xchg
xchg
mov
dec
lods
push
add
inc
pushf
jae
xor
adcb
xchg
js
int
sbb
add
sbb
insb
orb
xchg
or
sbb
imul
push
adc
andb
or
add
je
fisubs
jnp
or
push
mov
imul
bound
inc
mov
and
sub
or
add
jle
jne
pop
aam
ret
mov
inc
xor
mov
in
jbe
loop
add
iretw
sbb
mov
pop
stos
pop
pop
inc
add
jae
dec
adc
add
sti
dec
push
rorb
shrb
cld
sti
push
push
hlt
push
std
inc
rorl
push
sub
or
pusha
add
add
mov
inc
mov
jmp
sub
orl
lea
xchg
adc
enter
sub
das
jnp
pushf
or
dec
dec
add
jmp
aad
xchg
aaa
push
or
adc
sub
rclb
fisubrl
ss
mov
pop
cmp
out
cmp
cwtl
bnd
mov
je
lea
push
lea
jnp
call
and
mov
mov
sbb
gs
repnz
push
call
pop
push
je
inc
add
clc
dec
xchg
clc
jb
mov
xor
pusha
ret
data16
dec
sti
out
pop
aam
sub
push
das
pop
and
shl
test
lea
lods
idivb
fists
pusha
adc
nop
xchg
push
inc
jbe
mov
inc
in
pop
add
mov
inc
shr
inc
inc
cmp
out
std
stos
add
sub
test
cld
push
mov
inc
mov
std
mov
stos
push
sahf
push
lds
ljmp
fmull
fistpl
adc
mov
adc
or
push
and
adc
inc
shrb
mov
call
and
adc
inc
pop
fs
mov
sub
add
xchg
mov
clc
add
sbb
lahf
inc
xchg
push
push
mov
add
adc
sbbb
fisubl
lret
adc
pop
stos
mov
jg
inc
or
mov
add
lods
addb
data16
shrb
add
sbb
punpckhbw
xchg
pop
push
push
mov
push
fnstenv
xchg
orb
je
adc
or
pop
add
fldl
add
rorb
xor
mov
inc
xchg
sbb
insb
je
pop
inc
push
mov
or
aam
xorb
mov
jle
sbb
daa
ret
or
or
cmpsl
or
and
sbb
adc
fs
add
outsb
daa
cmpsl
fs
sbb
sub
mov
pop
and
inc
andl
mov
and
and
inc
sub
inc
jb
inc
sub
aas
add
jmp
mov
repz
lret
ret
add
jo
cmp
shlb
mov
and
shlb
rcll
sbb
pop
xor
mov
data16
sbb
xchg
adc
mov
lock
ds
push
pcmpgtd
gs
mov
pop
dec
xchg
jne
mov
jl
and
inc
and
xor
push
sti
sbb
shll
negl
je
or
jmp
mov
nop
es
pop
sub
test
adc
call
and
and
mov
mov
add
mov
fstpl
push
mov
adc
cmp
lock
add
push
push
int
gs
jbe
adc
imul
xor
cmp
pushf
sub
fbld
rclb
cmp
subb
sub
sbb
mov
jmp
inc
cmp
add
jno
pusha
bound
or
and
xor
nop
lods
push
aam
repnz
aam
xor
sbb
insb
test
fiaddl
add
imul
test
das
xorl
mov
lds
sub
lock
lea
sub
sub
lret
popf
push
push
rcrl
add
inc
push
scas
jne
divb
cwtd
pop
or
in
scas
and
int3
push
in
sbb
add
add
push
pop
cmpsl
adc
dec
add
or
fsubl
cmp
jne
repz
cmp
xor
xor
mov
fisubs
push
push
mov
sub
idivl
lods
stos
and
sbb
js
rolb
mov
roll
xorb
mov
push
sbb
dec
sti
or
lods
ret
loopne
nop
pusha
ljmp
mov
push
mov
sub
mov
in
add
pop
and
cmpsb
je
leave
mov
jmp
sbb
sbb
xorl
xlat
lcall
dec
cli
jmp
shll
loopne
mov
lods
inc
inc
xlat
sbbl
outsl
xlat
push
sub
lea
rcr
jnp
inc
inc
jne
lret
insl
push
mov
cmp
pop
and
pop
inc
sti
add
and
loop
xor
mov
adc
dec
push
xor
dec
cmp
rcl
lds
xor
inc
mov
push
les
in
cltd
and
pop
loopne
push
jo
mov
pop
pusha
js
mov
add
leave
insb
sahf
test
call
inc
push
lock
and
sub
cmp
mov
mov
mov
cld
arpl
fcoml
inc
cld
mov
jae
inc
pop
pop
xlat
sbb
xor
loopne
dec
cmp
negl
hlt
pushf
jp
pop
mov
pop
outsb
and
add
mov
adc
icebp
add
inc
inc
out
mov
jg
test
je
cmpw
adc
std
xor
adc
jmp
push
push
ja
adc
pop
and
push
sub
xchg
in
fwait
cld
jno
pop
inc
je
je
inc
jns
and
and
filds
sbb
lods
mov
add
dec
test
fsubl
adc
adc
sbb
adc
fs
jge
adc
xor
pop
adc
sti
test
push
mov
inc
pop
mov
or
xor
sbb
mov
les
dec
cmp
jmp
and
imul
pusha
lods
loop
inc
dec
sarl
pop
pop
mov
je
mov
inc
pusha
inc
inc
sbb
pushf
call
cmp
push
ret
and
add
lcall
pusha
call
fidivrs
add
add
or
adc
je
or
pop
add
sbb
and
adc
pop
jne
and
inc
push
cmpsl
sbb
or
cmp
push
xor
ret
es
push
jo
popf
add
xchg
jns
js
in
adc
xchg
enter
jo
test
cmpsb
addr16
icebp
and
ljmp
into
mov
mov
sbb
adc
sub
xlat
mov
dec
popf
pop
push
push
mov
ret
and
add
push
jmp
test
sbb
dec
pusha
cmp
add
popa
lret
test
sbb
hlt
push
je
sbb
inc
jne
insb
push
add
xchg
xchg
int
cmovbe
mov
xor
out
or
mov
sbb
lods
mov
xchg
jge
sahf
fimull
add
es
mov
fsts
insb
test
addr16
or
xor
and
mov
mov
or
xor
inc
pusha
mov
add
fldenv
call
and
pop
pop
xor
ret
pop
jmp
mov
inc
clc
jae
push
cli
mov
je
pop
mov
adc
fildll
push
push
shll
or
pop
fucomi
add
in
xor
mov
cld
stos
push
dec
inc
jo
xor
and
xor
xchg
pop
sarl
push
adc
pop
sbb
jno,pt
add
and
push
mov
push
gs
call
mov
push
add
mov
addr16
add
push
dec
add
push
adc
push
aam
inc
add
inc
lret
aam
loope
push
mov
push
dec
xor
inc
mov
inc
test
and
sbb
push
test
js
push
and
adc
xor
push
add
add
add
insb
arpl
adc
inc
jae
add
jle
movsb
cld
mov
inc
in
pushf
cmp
out
adc
sbb
sub
or
dec
incl
sub
add
push
mov
pop
cmp
neg
or
shrl
mov
add
add
or
push
movsl
sub
mov
ss
testb
stos
add
test
clc
add
xchg
pop
ljmp
push
push
jne
pop
dec
inc
rcll
add
leave
sbb
mov
cmp
lret
adc
shrb
add
adc
es
cltd
gs
xlat
xor
jb
adc
push
mov
add
and
insl
sub
jmp
jmp
test
mov
inc
or
inc
add
jb
jb
je
fs
movq
cmovb
mov
adc
push
test
jge
add
rorb
inc
cmc
sbb
rcrb
inc
mov
push
xor
stc
and
ja
push
xor
cmp
into
imul
clc
sub
lods
or
or
lods
adc
cmp
in
jbe
mov
add
pop
mov
scas
jnp
je
jmp
subb
shlb
pop
jae
push
scas
dec
addl
xor
mov
push
pop
xchg
adc
mov
test
sub
sub
add
push
aaa
or
push
outsl
xchg
bound
ret
call
mov
inc
test
or
ret
pop
jo
iret
std
and
pushf
and
sbbb
loopne
add
stos
pusha
pop
mov
pusha
cmc
pop
fsubl
xchg
fiaddl
add
push
lret
or
push
fldenv
mov
mov
fs
or
fucomp
xor
sub
sbb
push
jns
or
push
inc
add
xor
sbb
rol
daa
push
push
nop
jmp
lcall
call
ret
sbb
or
mov
and
push
sub
ljmp
pop
xor
add
inc
gs
movsb
jl,pt
xchg
shl
add
jne
adc
mov
and
test
mov
jmp
test
imul
or
push
jno
lods
add
xchg
adc
dec
sbb
jmp
std
clc
test
adc
inc
ret
and
lods
testb
inc
lcall
inc
pop
xor
shrl
push
dec
flds
mov
add
ljmp
or
sbb
lahf
mov
add
xor
das
fnstcw
fistpll
add
filds
int
add
adc
data16
outsb
shll
and
or
ds
roll
lods
adc
mov
out
imul
dec
xor
and
mov
push
iret
xchg
fs
jnp
or
or
in
popa
adcl
xchg
push
pop
jb
dec
rcll
les
testl
mov
mov
add
jp
daa
adc
sbb
or
mov
js
add
pop
lock
shll
sub
jno
inc
mov
and
loop
inc
push
insb
adc
push
adc
sbb
mov
cmp
inc
fidivs
mov
mov
cmp
add
sti
inc
mov
sbb
mov
jl
jg
xor
repz
jne
cmc
ret
sbbb
in
jne
xchg
fsubs
inc
and
sub
adcb
aaa
xchg
mov
rcrb
movsl
sbb
jb
or
pop
push
insb
dec
push
sbb
push
jno
adc
je
test
int3
inc
cmp
jg
imul
call
stos
or
test
cmp
pop
or
add
adc
push
mov
xlat
inc
mov
mov
push
das
and
out
inc
push
addr16
mov
jp
adc
jo
roll
sbb
jne
xlat
les
sub
push
hlt
mov
inc
clc
dec
sub
cmpl
or
dec
mov
popa
inc
inc
xor
jbe
push
fmull
sub
mov
test
xchg
push
cmp
fs
roll
shll
jne
mov
mov
pop
jbe
sub
add
clc
adc
inc
inc
cmp
les
push
pop
flds
je
movsb
dec
add
and
test
sbb
js
daa
test
and
inc
cmp
sbb
adc
xchg
test
lret
and
inc
push
push
lods
pop
or
in
add
pusha
jb
mov
jne
fs
ss
notl
iret
dec
jp
lret
xchg
pop
add
inc
push
loope
cmp
sub
jmp
mov
add
loop
fs
les
adc
jmp
fst
test
mov
add
out
orb
inc
out
icebp
and
pop
mov
add
and
xor
mov
adc
ret
sub
inc
sbb
add
xchg
jne
pop
push
mov
xorl
jge
lcall
add
orb
mov
scas
sub
clc
jnp
mov
cltd
int
xchg
rolb
pop
fcomp
or
mov
test
cmp
jne
adc
out
mov
add
and
mov
add
add
nop
test
test
movsl
add
test
repz
mov
push
scas
sub
gs
mov
pop
jecxz
mov
push
inc
dec
mov
cmp
jne
mov
add
test
sete
scas
daa
inc
mov
shr
sbb
push
and
loopne
imul
pop
inc
jmp
or
loop
loop
js
repnz
mov
daa
inc
arpl
insb
jae
push
push
jg
inc
or
mov
mov
mov
jmp
cs
add
movb
sub
fadds
jne
incl
call
das
pop
jg
clc
sub
sub
mov
pop
out
mov
sub
inc
sub
xchg
cld
add
shrl
push
pop
leave
into
xchg
ja
and
mov
jge
movsl
fdivrs
leave
mov
or
mov
cmp
mov
aad
in
adc
dec
rcrb
mov
mov
adc
bound
insb
cld
rolb
xlat
aaa
outsb
mov
push
shlb
ret
cmp
add
add
xchg
ljmp
in
pop
add
push
out
adc
sbb
or
push
aas
shl
adc
xor
aaa
or
das
ljmp
pop
adc
sbbb
gs
or
add
jae
lcall
mov
bound
in
pop
inc
pop
sbb
dec
es
insb
in
jmp
mov
adcb
and
out
sub
loopne
hlt
jge
mov
fimuls
in
and
outsl
add
fistpll
cmp
call
jmp
shll
orb
jns
jg
stc
data16
test
sub
pop
sbb
sub
fdivrl
sbb
outsb
add
mov
das
and
fdivs
mov
mov
mov
bound
decl
xor
jns
lcall
adcb
xlat
jo
inc
outsb
mov
lds
ror
dec
dec
xlat
je
sbb
clc
add
rcll
pop
dec
or
fdivrl
pop
sub
push
pop
imul
push
add
push
pop
xor
and
je
inc
adc
clc
fists
fisubrl
add
lahf
push
xchg
jo
orl
inc
mov
gs
fs
dec
add
mov
enter
add
sub
addr16
xchg
shr
push
mov
addr16
push
push
and
inc
rol
add
or
xlat
lds
sbb
push
pop
push
dec
mov
std
addb
rcrb
jae
jmp
ljmp
pop
push
push
fiadds
xchg
pop
cs
cli
mov
ret
mov
cmc
adc
push
or
or
mov
shr
xchg
mov
adc
stos
sub
xor
icebp
fidivs
sub
push
shll
push
sbb
push
cmp
mov
and
divb
lea
jne
add
lea
push
mov
jl
cwtl
sbb
lods
xor
test
pop
push
je
pop
into
int3
dec
inc
mov
cwtl
mov
sbb
mov
xchg
jne
inc
hlt
dec
inc
and
fwait
adc
shlb
aad
add
jo
xor
ja
jne
lea
xchg
mov
push
sbb
sub
cmp
into
adc
and
and
adc
sbb
addb
add
mov
add
add
es
or
xor
cmpsb
cmpsb
pop
push
stos
nopl
ljmp
and
xchg
pop
ret
jo
inc
pop
xor
sbb
lret
sbb
stos
add
call
push
mov
popf
pop
cwtl
and
sbbb
adc
jge
inc
sbb
and
push
andl
sbb
mov
or
adc
push
mov
sub
push
cmp
xchg
or
adc
sub
in
mov
push
faddl
movsb
insb
jae
xor
push
hlt
into
je
cmp
je
add
xchg
ret
sbb
adc
adc
or
push
add
pop
fdivrs
mov
adc
fs
out
movsl
or
aad
rorl
add
add
push
shr
push
xor
add
and
xor
xchg
xchg
imul
pop
push
push
add
adc
sbb
add
pusha
add
loope
or
shrl
xchg
xchg
test
sub
jbe
and
xor
aad
imull
mov
loopne
cmp
and
or
lea
adc
jl
and
mov
jp
mov
es
leave
jbe
sbb
jl
js
popf
test
rolb
fisubs
and
push
add
jp
lods
add
and
add
inc
or
jo
and
dec
jae
bound
add
pop
jns
and
adc
sbb
into
cmp
adc
push
cli
and
insl
lea
xor
adc
sbb
add
xor
jl
xor
push
push
adc
cmpb
int3
xor
inc
lock
add
aam
add
inc
cmpsb
mov
js
and
mov
inc
mov
adc
bound
fisubrl
js
sbb
push
imul
iret
data16
fs
xchg
in
lods
mov
add
les
mov
cmc
and
and
xor
pop
loop
and
rorb
sub
mov
divl
mov
mov
mov
jo
or
je
push
out
dec
outsb
push
adc
xor
je
xchg
out
xor
loop
aaa
cwtl
inc
push
es
popf
sub
and
fwait
js
icebp
push
je
push
call
cmp
shll
xor
mov
aaa
sub
or
jne
push
inc
mov
push
jecxz
bound
and
inc
push
push
test
mov
pushf
mov
mov
jecxz
fists
movb
xor
dec
add
das
mov
cmpsl
cmp
pcmpeqb
orb
or
insb
adc
adc
push
mov
sub
stos
rcrl
cs
or
lods
push
add
or
sbb
pop
cld
adc
dec
add
jae
outsl
jg
and
cmp
inc
push
push
rolb
xor
push
xor
mov
xchg
shll
sbb
add
mov
sub
push
dec
xor
xor
outsb
or
shll
sub
and
fsubrl
cmp
das
jne
dec
and
push
imul
push
adc
adc
or
mov
push
push
pop
faddp
pop
xchg
adc
cwtl
xchg
or
insb
add
jne
inc
mov
sti
ret
pop
push
xchg
xor
mov
pcmpeqb
testb
jne
pusha
adc
lea
ja
jmp
mov
sti
or
dec
push
mov
fidivl
xchg
mov
sbb
xchg
dec
xchg
in
fs
jb
pop
ret
lahf
test
jge
jne
or
int
icebp
cs
add
mov
jl
les
add
scas
orb
fisubrs
push
test
or
adc
fcompp
mov
mov
sbb
xor
add
mov
adc
add
mov
and
or
fs
dec
lods
add
sbb
sarb
and
std
pushf
daa
je
call
sub
call
in
subl
sub
push
xchg
inc
push
pop
push
xor
xchg
add
sbb
adc
or
xchg
add
ljmp
sub
dec
and
jge
popa
test
sbb
cmp
mov
or
lods
lea
fidivl
rcr
adc
mov
xchg
inc
inc
add
sbbb
add
add
js
or
pop
mov
fdiv
mov
sub
lret
jg
add
mov
cmp
jg
fmuls
push
andl
inc
xchg
and
bound
adc
ds
mov
pop
cli
je
call
cmpl
xor
add
add
push
lds
inc
xchg
push
push
jle
lods
sub
xchg
xchg
xor
loop
rclb
cmp
je
addb
out
sub
test
sub
cmpsl
sti
xlat
les
ljmp
mov
mov
std
lock
add
movw
sbb
fisttpll
pop
test
pop
mov
daa
sub
mov
jne
push
das
push
jns
outsl
insb
mov
in
jo
push
or
mov
mov
sbb
inc
add
push
shlb
push
adc
or
push
lret
cld
mov
sub
jg
xor
mov
out
inc
lcall
adc
movb
add
and
lcall
mov
test
sub
or
add
jbe
pop
inc
mov
inc
mov
call
jge
ljmp
stos
cmp
sub
jno
mov
dec
lods
adc
or
push
sarb
scas
inc
dec
cmc
daa
cmp
mov
add
inc
push
cmp
outsl
push
and
add
add
cmp
fsubrl
nop
dec
pop
jp
inc
mov
sub
inc
add
adc
and
sar
shlb
push
mov
sahf
or
inc
fcmovnb
add
test
push
cmp
push
xor
jbe
or
xchg
aas
sarb
je
sbb
adc
out
pop
dec
push
sub
sti
loope
ljmp
lods
in
mov
or
nop
cmpb
out
jle
cmc
add
in
in
dec
sub
mov
or
repz
shr
add
das
aam
dec
rcr
loopne
pop
add
push
mov
in
mov
adc
jne
insb
push
add
outsl
jne
fbstp
jne
jo
aad
add
rcll
orb
cmp
in
push
and
mov
push
inc
in
fbstp
inc
out
cmp
mov
in
xor
sub
test
iret
pusha
cld
sbb
jmp
jbe
sub
sub
fcomi
add
pop
idivb
adc
push
push
push
and
loope
push
or
mov
ret
cli
inc
adc
mov
lret
or
or
inc
add
out
data16
add
jb
cmp
je
cmp
je
mov
cmp
xor
mov
mov
cmp
add
jle
cli
cld
and
mov
add
sub
adc
sti
adc
cwtl
push
sbb
push
shrb
movb
ret
adc
and
xor
xchg
inc
mov
std
xor
push
test
push
mov
and
sti
add
shlb
rclb
push
movups
enter
arpl
pushf
jno
lcall
dec
cmp
psllw
xor
and
cmp
mov
aad
cmp
or
push
test
mov
fs
xor
adc
sar
in
pop
and
sub
shrl
mov
push
dec
add
cmp
cmp
cli
add
arpl
iret
enter
adc
push
mov
shlb
test
ret
into
inc
lcall
pop
lds
cmpsl
xor
or
ja
and
mov
jl
and
nop
sub
xorl
or
es
sub
jo
sbb
jecxz
repz
stos
cmp
leave
mov
adc
cmpl
fwait
mov
xchg
movsl
xor
push
push
adc
mov
lea
fisubrs
test
fmull
sbb
mov
xor
xor
mov
cmp
lock
aas
jg
lea
sub
xor
inc
mov
push
push
inc
lods
xchg
sbb
int
lcall
dec
or
pop
sbb
lcall
and
jbe
aaa
and
icebp
fwait
inc
shll
xchg
les
inc
sbb
insb
and
mov
pop
jle
aad
scas
sbb
add
rol
mov
push
xor
adcb
adc
sub
int
pop
pop
sbb
adc
lds
pop
dec
repnz
imul
and
push
push
sar
test
test
je
and
or
and
mov
addb
inc
mov
sahf
cwtl
cmp
shlb
lcall
push
add
inc
sub
scas
mov
or
inc
inc
jge
pop
nop
inc
adc
push
mov
jmp
mov
adc
aaa
popf
dec
push
dec
or
or
sub
adc
rclb
lock
adc
or
push
dec
sbb
sbb
adc
sub
shlb
scas
adc
inc
push
rcrl
ss
das
je
xchg
movsl
sub
add
push
sti
sbb
xchg
mov
mov
add
add
sub
clc
add
pusha
lahf
addr16
xor
into
imul
mov
ret
lods
sbbb
sarl
test
test
and
imul
pop
inc
xchg
xorb
adc
loope
adc
mov
sbb
loopne
les
lcall
orb
lds
push
int3
mov
test
add
push
sub
push
mov
push
imul
loop
or
sub
mov
push
test
add
push
dec
add
inc
shrb
xchg
add
push
jns
subl
sbb
add
and
jecxz
cmp
mov
pop
push
pusha
xchg
dec
jg
lock
shlb
dec
in
inc
lea
push
and
pop
and
dec
add
and
fs
adc
sti
mov
dec
insb
sbb
or
push
push
pop
and
xchg
cmp
mov
push
scas
mov
sub
adc
rcrb
jmp
pop
pop
inc
sub
add
or
jns
xchg
sub
test
xchg
push
decb
pop
mov
je
xchg
stos
shll
sub
rolb
cmpsb
bound
out
xchg
aad
pop
cmp
mov
cli
iret
add
jbe
cmpw
scas
or
inc
pop
mov
or
lret
shlb
xor
add
cmp
push
hlt
and
insb
inc
xchg
cmp
push
movsl
inc
inc
nop
ss
and
pusha
jmp
push
xchg
push
pop
mov
fmull
lds
jnp
or
push
in
inc
cmpsb
mov
test
add
pop
daa
ss
cmp
notl
push
add
dec
ljmp
dec
ret
ret
nop
add
push
add
dec
inc
sub
inc
sbb
dec
or
jmp
mov
cmpsb
push
adc
add
sbb
xor
pusha
scas
shlb
mov
rcl
fildll
andb
fisubs
iret
xlat
insl
mov
adc
inc
add
fldl
cli
iret
jne
ret
add
adcl
xor
movsb
loopne
xor
or
and
xchg
aas
cmp
add
mov
ss
ss
mov
nop
push
mov
push
movsl
dec
push
dec
inc
lds
and
test
xlat
mov
dec
add
cs
dec
pop
mov
push
cmp
adc
je
lods
int3
insb
je
pop
add
push
xorb
fisubs
lret
jp
inc
mov
push
and
push
add
andb
pop
and
mov
push
js
cmp
sub
aas
lcall
or
xor
push
dec
xor
xor
pop
out
push
ret
inc
repnz
sbb
add
inc
aas
mov
mov
lcall
fdiv
push
sub
aad
pop
addb
adc
adc
insb
adc
mov
xchg
dec
les
cmp
insb
test
adc
push
cmp
or
sub
dec
or
push
movsb
addr16
add
and
or
adc
cwtl
dec
xlat
sbb
hlt
xlat
sub
cmpl
add
nop
dec
lods
add
int
sub
inc
sbb
mov
loopne
push
test
test
mov
cld
cs
fists
shl
shr
mov
xchg
xor
push
push
or
mov
pop
shl
out
and
jns
js
add
mov
mov
dec
dec
dec
dec
sbb
or
add
push
xchg
je
addb
lcall
sub
xor
xchg
int3
not
xor
popf
and
arpl
adc
call
jge
xchg
inc
add
in
adc
inc
add
sub
sub
mov
bound
mov
push
adc
mov
sub
xor
add
cmp
loope
jne
int
inc
push
mov
inc
adc
cmp
sbbb
push
or
incb
sub
mov
sbb
sub
mov
or
jl
mov
das
test
cmp
jge
xchg
jmp
or
or
fisubrs
daa
in
jbe
lret
ror
sub
jmp
adc
and
ret
enter
adc
mov
scas
loop
inc
jge
rcrb
in
fcoms
mov
xchg
test
stos
loop
inc
inc
mov
add
loop
sub
or
adc
test
ss
add
jmp
popf
xchg
add
inc
push
and
inc
pop
jl
mov
adc
xor
inc
push
subb
cmp
add
imul
pop
jmp
push
push
mov
xchg
mov
and
or
or
sbb
popf
and
or
pop
or
jge
lock
aaa
cs
jge
lock
andl
call
sub
or
inc
cld
in
push
sub
ret
jns
jmp
push
push
mov
push
push
push
adc
cmp
dec
bound
inc
push
lcall
cmp
adc
add
add
xchg
insb
inc
lock
push
mov
cmpl
lcall
adc
xchg
dec
hlt
mov
subl
mov
jge
je
or
sbb
daa
pop
or
jmp
jle
pop
push
xor
subl
and
in
push
in
add
psubusw
out
jle
add
sub
fildl
push
clc
and
ja
pop
or
clc
or
mov
xor
cld
xchg
fldcw
jmp
push
clc
xor
push
add
adc
cli
lret
ret
jmp
sbb
lea
add
enter
push
sbb
fwait
add
dec
fadds
loopne
jo
sub
dec
add
enter
inc
mov
cmp
and
push
jnp
ss
add
add
mov
dec
dec
push
cmp
xchg
push
xor
and
outsl
push
push
push
enter
push
movb
cld
xchg
lea
mov
sub
popf
outsb
xor
adc
sbb
lods
mov
jmp
or
movsl
and
adc
xchg
add
xor
mov
jb
iret
push
rolb
cmp
add
inc
adc
push
jns
sbb
dec
adc
add
sti
pop
inc
mov
lea
in
lock
sbb
or
and
rolb
jmp
fisttpl
pop
jae
fdivl
jb
shrb
pop
and
das
out
jecxz
mov
sbb
inc
sbb
sbb
adc
jne
mov
fisubrs
jmp
jmp
cmp
fisubrs
mov
push
fsts
cli
in
int
ds
inc
cmpb
test
test
loopne
dec
xchg
clc
and
cmp
or
adc
add
adc
mov
add
jnp
sub
pop
sbb
jbe
push
xchg
pop
dec
push
push
inc
ret
lahf
lret
mov
jne
add
mov
or
add
jmp
mov
test
lea
or
add
push
or
and
sbb
sbb
sub
jecxz
inc
and
jo
mov
xchg
jns
sub
ja
mov
aaa
fcoml
cmp
fisttps
add
inc
inc
je
pop
cld
loopne
dec
sbb
jp
dec
adc
xor
or
add
mov
insl
mov
sbb
sub
push
cld
jo
jl
pop
in
addr16
ds
or
cmpl
outsl
cmovge
mov
sub
adc
in
jae
sub
je
jnp
inc
adcl
ret
sbb
or
pushf
lcall
out
push
or
fs
pusha
je
cld
pop
push
and
cmp
lea
les
mov
adc
enter
adc
rclb
in
or
nop
xchg
rclb
test
cmp
adc
push
pop
inc
outsl
mov
gs
push
add
mov
cmp
cmp
jne
rcrb
add
sbb
outsl
add
adc
loopne
sbb
mov
mov
test
add
mov
pop
push
mov
add
mov
jo
mov
mov
sub
lcall
xor
sbb
orl
jg
fiadds
fstpl
jmp
push
push
push
ja
fcmovnu
fbstp
pop
adc
adc
mov
jo
lods
sti
in
jg
cmp
je
aam
sbb
daa
cmp
in
out
call
adc
and
insb
mov
test
int
stos
add
fstpl
cmp
decb
je
adc
or
push
mov
jecxz
sub
lea
adc
jno
mov
shll
adc
pminsw
sbb
jb
or
or
or
add
add
sub
pop
fsubrs
xor
movb
or
and
push
dec
add
je
adc
inc
xor
outsl
or
jne
inc
sbb
cli
jge
sub
or
not
cmovo
ljmp
cmp
and
inc
hlt
nop
cmpsb
imul
and
add
sub
out
sbb
jo
outsb
jmp
lds
and
iret
je
lret
sbb
test
xor
insb
adc
outsb
sbb
les
jns
dec
push
add
add
lds
mov
sahf
or
adc
sahf
push
xorb
jnp
lea
test
sbb
lret
daa
sub
cmp
and
sub
scas
push
adc
add
pop
jg
push
imul
scas
cmp
push
inc
lds
lods
mov
pop
pop
sbb
das
pop
xchg
popa
das
sbb
push
sbb
mov
test
call
and
inc
lds
add
std
lea
xchg
push
mov
in
jle
pusha
adc
cld
and
mov
scas
in
add
js
aaa
sub
jne
add
add
sub
cmp
les
cmp
lea
add
pop
adc
stos
call
push
mov
mov
add
lret
jb
jmp
aad
js
sub
movb
inc
add
dec
push
inc
xchg
aaa
nop
addb
rcll
xor
das
and
dec
inc
add
popa
andl
and
leave
inc
int3
or
jge
push
fidivl
inc
cs
add
mov
and
add
pop
adc
lods
pushf
sub
int3
sbbb
loop
jg
jne
jg
sub
push
sbb
test
lcall
add
adc
fsts
pushf
mov
mov
nop
ret
push
push
push
xor
dec
xor
mov
scas
inc
adc
adc
push
mov
adc
lea
adc
push
or
adc
add
jp
xor
cmpsl
inc
jo
jno
or
inc
mov
push
shlb
mov
mov
orb
and
jecxz
push
pop
stos
sbb
push
dec
es
cmpsb
mov
lock
mov
leave
jmp
loopne
pop
add
add
addb
test
mov
xchg
xchg
lret
push
push
mov
rcll
adc
inc
jo
andb
add
sbb
iret
pop
dec
movsb
adc
sub
popa
ficomps
cmp
scas
jp
dec
mov
mov
dec
inc
inc
add
mov
call
mov
int3
test
inc
add
xchg
loop
and
jo
icebp
pop
sarl
mov
push
pop
leave
cs
push
aam
or
dec
arpl
pop
xlat
pop
xor
or
inc
or
or
mov
add
mov
mov
and
loop
xor
jbe
add
mov
sbb
lods
sub
ret
pop
push
adc
sbb
mov
inc
je
xor
mov
mov
out
lds
adc
sbb
xchg
add
adc
xchg
or
cmpsl
popl
xor
sub
dec
push
test
fs
push
add
add
lods
and
or
sub
stos
or
lods
dec
adc
mov
xchg
or
ret
psubusb
cmp
sti
jb
fnstsw
lret
cmpb
lods
mov
push
mov
out
clc
add
push
jl
test
mov
dec
dec
cmpsb
ret
dec
outsl
cmp
ret
sbb
aad
imul
cmp
bound
or
fdiv
fldt
mov
jne
pop
jo
insb
jo
mov
in
stos
loopne
xchg
cmp
lods
inc
mov
mov
xor
xor
or
out
push
insb
subb
ljmp
fwait
enter
mov
inc
fisttps
or
je
add
jns
std
push
orb
outsb
lahf
push
inc
aam
mov
push
adc
pop
xor
pop
cmp
lea
sbb
sbb
jmp
push
push
loope
in
pop
dec
add
adc
mov
push
movsl
lock
mov
and
in
mov
scas
add
out
inc
mov
cltd
fists
add
xchg
sub
xchg
add
mov
frstor
in
ret
push
loopne
dec
jp
sub
ftst
sub
jo
add
and
pop
sub
push
dec
sbb
popa
nop
lea
pcmpgtw
int3
lods
cmp
sub
sahf
sbb
pop
imul
cld
dec
cmp
stos
movsl
or
dec
std
pushf
or
adc
cwtl
push
sbb
push
sub
add
sub
xor
and
cmp
mov
add
in
stc
add
lcall
add
pop
xchg
inc
sbbb
sbb
push
les
inc
cmp
xchg
imul
add
fsubrs
stc
shr
aas
orl
mov
push
push
xchg
inc
mov
jbe
jnp
add
shrb
inc
sbb
cmp
adc
std
sbb
push
cmpb
cmc
test
mov
mov
sbb
adc
andb
push
fmull
or
cmp
add
add
jp
ret
adc
cwtl
and
loope
mov
test
jbe
aad
push
mov
sbb
xchg
mov
add
mov
rep
xor
dec
mov
dec
push
and
fisttps
dec
dec
jne
sbb
adc
cmp
addl
mov
clc
jb
pop
adc
jle
add
inc
or
fldpi
xor
dec
outsb
outsl
mov
imul
jae
daa
jbe
pusha
aaa
push
inc
data16
or
xor
dec
adc
sbb
test
push
insb
test
cmc
aam
or
sbb
ss
insb
test
xchg
or
sbb
pusha
sarb
sub
test
push
lret
es
mov
popf
das
push
or
test
loopne
push
jae
leave
or
ss
and
jb
xchg
mov
and
leave
add
cmp
and
pop
cld
ret
and
and
mov
fs
add
push
rorl
or
jl
add
sbb
pop
adc
shlb
dec
mov
add
ds
jg
push
and
cmp
loope
pop
cmp
cmpsl
xchg
arpl
sub
pop
mov
push
adc
jmp
adc
mov
loop
push
dec
movsb
add
inc
mov
test
lea
sub
or
sub
mov
in
lret
or
inc
sub
jnp
dec
push
mov
sub
add
fwait
mov
lret
rcl
clc
and
cwtl
das
add
shlb
ret
jg
jne
mov
std
and
add
add
add
xor
orl
pop
bound
iret
dec
or
jp
mov
andb
out
aaa
mov
mov
add
and
adc
bound
repz
push
mov
negl
fiaddl
sub
enter
mov
sbb
lcall
and
mov
dec
enter
popf
out
inc
adc
jne
push
lock
lcall
addl
repnz
rol
or
nop
call
xchg
or
dec
or
mov
ljmp
test
add
add
inc
sbb
xchg
inc
jno
stc
add
add
push
in
adc
inc
mov
adc
outsb
pushf
push
ss
aam
stos
mull
adc
loopne
rolb
or
push
mov
adc
lea
inc
push
or
test
adc
daa
pushf
scas
pop
or
pop
aam
pusha
and
inc
xor
jg
cmp
sbb
das
sub
imul
in
adc
mov
xchg
mov
adc
mov
out
jne
adc
ljmp
mov
ljmp
dec
jbe
inc
cs
mov
sub
jb
cmp
xor
pop
lds
iret
mov
mov
iret
xor
pop
add
int3
jb
cwtl
mov
pop
jge
and
sub
sbb
adc
sbb
jbe
pop
push
cwtl
jge
pop
sbb
out
xchg
adc
inc
and
dec
dec
nop
mov
adc
jp
xchg
nop
insl
add
or
cmpl
inc
dec
movsl
shll
lods
mov
out
push
fs
orb
mov
sbb
and
cmc
jmp
mov
push
pop
adc
adc
push
mov
add
hlt
std
stos
mov
add
cmp
mov
es
pop
test
pop
fstpt
mov
mov
add
ja
cmp
jne
je
lock
stos
pop
cs
jge
jge
cmp
jle
cmp
jle
jmp
or
mov
insb
or
push
xadd
mov
mov
cmpsb
pop
mov
cmp
test
dec
ds
sub
shl
inc
xor
dec
stos
fisttpl
sbb
sub
inc
shlb
insb
push
adc
add
sub
adc
xor
outsl
dec
cli
sub
push
push
data16
pop
add
sbb
mov
or
sbb
mov
mov
and
xor
cmp
cmp
sbb
sbb
inc
inc
jbe
dec
jl
cmp
push
mov
lods
mov
sbb
pop
sbb
or
pop
xor
roll
dec
cmpsb
dec
push
mov
xor
loopne
movsl
imul
xor
sbb
push
cmp
fnsave
nop
push
jmp
adc
and
les
adc
test
dec
xor
jp
pop
roll
push
mov
lret
sbb
push
loope
push
ss
fcoml
cmp
jge
test
push
loop
inc
xchg
lahf
add
int3
adc
dec
or
push
xchg
lea
pop
dec
cmp
ret
jae
push
je
pop
sub
lods
xchg
std
and
push
cmp
aaa
sbb
pop
addl
adc
add
adc
pop
xor
adc
mov
cwtl
stos
jbe
push
pop
je
dec
push
inc
das
adc
pop
mov
cmpsb
gs
add
dec
ja
push
xchg
add
adc
mov
and
dec
push
pop
mov
sbb
daa
in
mov
repnz
lcall
jecxz
add
mov
mov
mov
rolb
xchg
sub
inc
push
adc
push
mov
pop
sahf
sub
jo
and
cmp
xchg
inc
xchg
ds
sub
or
jo
scas
adc
imul
lea
or
jno
mov
or
jae
push
mov
and
js
inc
jg
mov
gs
mov
jmp
xchg
inc
inc
int
enter
frstor
xchg
fwait
and
lods
cmp
mov
or
sbb
dec
aad
mov
cwtl
and
pop
sub
adc
cs
jle
or
push
cmp
add
ret
sub
or
test
push
icebp
push
aas
lret
adc
adc
enter
mov
je
cmp
lods
sub
cld
into
adc
rorb
add
addl
inc
and
adc
mov
icebp
adc
and
sbb
addr16
stc
add
cmpb
cld
jne
add
add
and
jmp
adc
sub
and
insb
xor
outsb
sbb
push
mov
or
push
add
icebp
mov
adc
test
lds
sbb
lret
scas
je
xor
inc
and
aam
lahf
inc
cli
mov
mov
inc
test
std
mov
loopne
leave
ss
xchg
lea
out
jae
popa
adc
fmull
inc
cmp
sub
xlat
repnz
push
add
adc
xor
cs
addr16
notl
nop
push
and
add
sub
pop
or
mov
inc
mov
jo
bound
bound
cltd
jnp
add
jmp
and
dec
lock
subb
or
sub
jl
sub
xchg
cmp
lods
pop
ret
cmp
mov
pop
or
mov
lret
ss
pop
ret
inc
andb
divl
lret
push
cmp
add
push
jo
test
mov
dec
fldcw
je
jne
movl
sub
lock
cli
jbe
and
nop
mov
mov
xor
movl
add
mov
pop
in
mov
or
or
aas
and
push
dec
js
pop
out
jge
mov
jno
push
add
xchg
add
or
sar
cmp
jl
mov
lret
les
jne
cmp
stos
dec
clc
imul
lret
sbb
push
pop
ret
jo
xor
orb
sbb
repz
xor
mov
icebp
inc
mov
jo
test
es
mov
icebp
cmp
out
xchg
mov
push
cmpsb
inc
cmpsl
insb
movsb
jo
fcmovnbe
mov
and
popf
sbb
pcmpeqw
pop
push
lock
dec
std
imul
shrb
xchg
pop
cmpl
add
sub
sbb
and
or
mov
fwait
mov
push
mov
sub
jp
clc
xchg
add
xor
mov
sbb
dec
adc
mov
mov
adc
push
sub
or
lock
pop
dec
adc
jg
dec
mov
dec
push
outsl
scas
loop
rol
loope
adc
hlt
movlps
dec
mov
sub
adc
add
imulb
mov
or
inc
mov
popa
sbb
or
xchg
incl
test
mov
lea
cmp
jns
xchg
mov
sbb
popa
test
cmpb
mov
mov
xchg
pop
dec
cmp
jne
pop
mov
push
and
jge
push
push
cmp
hlt
dec
addl
add
inc
stos
mov
cmp
push
fistpl
loope
addr16
inc
arpl
pop
jb
cmp
and
push
push
cmp
sbb
cmp
and
sbb
jp
test
adc
jb
enter
jle
mov
xor
sar
adc
in
jbe
cli
sbb
mov
data16
mov
dec
inc
pop
adc
cmpb
jmp
fists
orb
sub
cmp
and
fistps
fcmovnu
push
pop
adc
dec
mov
sub
sub
fwait
mov
lret
pop
ret
ss
cli
jne
nop
jnp
pop
inc
hlt
mov
push
inc
jl
popa
cwtl
jb
fimuls
and
cmp
aam
jbe
mov
mov
push
mov
jb
adc
add
mov
test
or
adc
sti
cmp
inc
dec
push
adc
cmp
jne
sti
adc
adc
filds
add
mov
das
xor
or
incl
outsb
mov
push
mov
inc
outsl
loope
mov
mov
mov
sub
xchg
loope
insl
push
repz
andl
inc
jb
shll
or
sti
push
xor
push
cmp
test
inc
cmp
sbb
ret
jmp
sahf
push
sahf
add
mov
and
inc
ja,pt
adc
push
or
out
add
fdivp
xor
sti
fsubrl
jle
inc
dec
orl
pop
mov
and
jg
fnstcw
fwait
jns
xchg
xchg
pop
imul
cmp
ficompl
cmp
add
lds
in
call
mov
mov
adc
push
sub
add
lcall
popf
push
dec
pop
mov
div
xchg
mov
sbb
shl
stc
dec
jb
add
cwtl
pop
pop
mov
mov
or
inc
xlat
popa
shl
or
leave
inc
inc
push
int
inc
ja
push
cmp
sbb
pop
mov
push
mov
mov
fcompl
mov
in
xchg
sub
and
mov
mov
sbb
imul
jmp
dec
pop
xor
cmp
xadd
fs
push
adc
dec
dec
adc
in
es
dec
inc
xor
fadds
cmovge
xor
push
rorl
movsl
inc
cmp
mov
rorl
inc
es
inc
mov
pop
dec
mov
adc
adc
adc
imul
xchg
sub
sbb
xor
push
xor
xchg
jl
xchg
leave
enter
ljmp
inc
loop
aad
push
xor
int
xor
mov
inc
cmp
in
xor
cmp
iret
dec
inc
lahf
pop
inc
loop
mov
rclb
jmp
sub
mov
mov
mov
out
add
aas
xor
mov
mov
cmp
cmp
mov
mov
sub
repz
or
test
mov
adc
in
cmp
inc
hlt
mov
addps
adc
nop
sub
js
push
or
add
insb
or
sbb
std
xor
jae
popa
subl
sbb
fwait
outsb
xchg
mov
lods
push
rclb
or
in
in
adc
clc
adc
out
mov
xor
cmp
movsb
mov
sub
gs
sub
loope
inc
cmpl
push
xchg
push
dec
sub
shrl
adc
repz
sub
push
adc
push
pushl
sub
push
insl
and
jge
pop
shlb
or
mov
bound
push
sbb
mov
fs
sbb
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
xchg
adc
mov
and
and
dec
sub
insb
add
insb
lret
leave
jb
cmp
inc
mov
sub
push
cmp
mov
jb
push
mov
cli
sub
test
xchg
jmp
sbb
mov
fs
push
cmp
and
inc
jo
shrb
dec
fs
js
mov
xchg
mov
inc
pop
dec
ja
popa
inc
stos
sbbb
or
mov
or
rolb
and
insb
adc
ffree
cmpsb
pop
inc
add
rcll
sbb
dec
sbb
add
out
sahf
add
or
mov
jmp
hlt
adc
lea
cmpsl
ds
clc
shr
xor
je
or
arpl
mov
jg
and
test
and
xor
add
orb
arpl
pop
add
sbb
jg
mov
faddl
mov
mov
pop
adc
fdivl
leave
add
jmp
dec
sub
push
cmc
fs
stos
mov
and
sub
add
add
sbb
mov
iret
iret
leave
or
mov
xor
mov
insb
dec
or
pop
push
push
xchg
jb
pop
lea
std
push
or
and
pop
pop
lcall
adcb
nop
add
inc
jg
xchg
sbb
pop
call
adc
orl
dec
adc
pop
inc
ret
jg
fildll
lcall
seto
sbb
jae
sub
mov
stc
rorb
shl
add
pop
pop
adcl
inc
push
jnp
sbbb
sbb
add
pop
push
test
sub
call
mov
nop
xchg
adc
sbb
add
mov
xor
and
dec
xlat
adc
sbb
sbb
in
jg
sub
push
pop
xchg
in
or
jnp
mov
dec
rcl
das
pusha
ljmp
dec
add
jge
rcrb
and
add
sub
mov
jg
jle
jmp
cmp
dec
add
sbb
movb
add
insb
fdivl
roll
rorb
imul
mov
pop
movsb
mov
fwait
or
jle
mov
inc
mov
stos
mov
outsl
or
add
sbb
and
int3
push
and
mov
mov
cmp
mov
ret
int3
addr16
adc
insl
push
mov
mov
mov
cmp
into
lds
and
or
js
bound
add
sbbb
std
std
call
pop
out
jb
jl
mov
pop
add
and
movaps
icebp
call
test
or
in
shlb
or
imul
push
fwait
adc
shlb
test
movsb
mov
pop
fadds
fistpll
loope
xor
sbb
sub
in
gs
fdivs
adc
jge
mov
cmp
push
push
cmpsb
add
icebp
aad
sbb
arpl
push
push
fsubrl
idivl
std
fistpll
divb
push
mov
push
dec
mov
test
mov
fsubrs
lea
or
mov
mov
pop
inc
dec
dec
jne
test
xor
stos
lds
nop
push
jbe
xor
adc
bound
mov
push
add
adc
mov
adc
push
mov
push
and
adc
jo
out
enter
test
dec
mov
push
xchg
loopne
pusha
stos
fimuls
jbe
jno
mov
rol
inc
sub
pop
dec
ja
sub
jge
mov
add
add
and
pop
adc
sbbl
sti
mov
psraw
test
iret
jle
stc
add
jle
leave
int
lea
in
mov
mov
cmp
push
aam
sbb
adc
add
pop
jge
call
out
mov
lea
push
push
push
lea
adc
mov
sbb
jno
lds
or
inc
mov
sar
jmp
int3
xchg
inc
lea
sbb
mov
pop
push
mov
adc
adc
and
inc
mov
stos
mov
aam
push
cmp
jg
icebp
mov
add
fidivrl
dec
jns
lea
jle
ja
addb
out
add
dec
jge
mov
cmpsb
ljmp
jg
ljmp
xor
xchg
adc
mov
mov
add
mov
std
lea
or
loope
pusha
dec
sti
fmull
out
push
add
jecxz
lret
add
or
stc
repnz
in
mov
inc
mov
les
sub
mov
lret
lret
shl
dec
and
or
enter
and
cmp
or
mov
and
xchg
shlb
sub
mov
cmp
or
mov
push
loop
cltd
adc
cltd
or
xchg
inc
sub
js
add
lods
mov
xor
sub
mov
sbb
test
push
aaa
inc
inc
jge
jecxz
adc
adc
faddl
dec
add
lahf
movsl
mov
push
lds
data16
or
or
mov
adc
pop
cmp
xorl
cmp
insb
xor
jl
psrad
dec
mov
jbe
lea
sub
add
gs
and
jp
pop
loopne
mov
js
or
adc
pop
jo
adc
out
pop
arpl
sub
sbb
js
ss
sbb
add
sub
std
out
inc
jne
mov
jbe
lea
incl
dec
pop
lea
imul
mov
idivb
ljmp
push
add
cmp
mov
xor
mov
xor
inc
mov
cmovno
movd
mov
xchg
test
cld
dec
mov
jne
or
mov
xchg
jne
lods
inc
jecxz
push
or
stos
xlat
or
push
or
iret
pop
es
adc
mov
std
adc
mov
cmp
ss
outsb
dec
xor
jns
pop
adc
sub
fsubs
cmp
push
mov
sbb
xchg
shrl
fsts
lea
orl
mov
adc
cli
ss
xor
dec
adc
popf
add
or
ja
sbb
push
xor
jl
mov
sti
sarb
ret
jge
xchg
push
pop
xchg
ja
gs
pop
dec
jne
and
xor
sub
push
icebp
adc
sub
cmp
push
popf
cmp
adc
sahf
enter
adc
adc
pminub
popa
push
loopne
loop
subb
or
aas
or
rclb
or
pop
jns
inc
push
and
and
leave
inc
pusha
ret
inc
pushf
daa
fsubr
add
inc
jp
inc
mov
aad
stos
ret
lret
adc
or
xor
push
shll
dec
xchg
dec
aad
cli
sub
xchg
mov
or
jne
sbb
insl
jmp
mov
ficompl
inc
mov
xchg
mov
cmpb
in
outsb
lds
mov
sahf
mov
inc
jge
scas
xchg
stc
je
fistl
dec
and
dec
test
jl
sbb
cmp
rol
add
lods
xchg
cmp
scas
mov
fnstsw
push
loopne
dec
outsb
jns
pop
mov
mov
stc
jl
shrb
xchg
fimull
lea
rolb
mov
jne
add
or
movsl
add
loope
std
inc
mov
mov
cwtl
ret
push
fcomip
mov
mov
push
icebp
cmp
adc
or
cmpsb
mov
adc
mov
sbbb
lcall
mov
pop
or
or
jecxz
add
imul
add
xorb
stos
sbb
sub
jno
decl
adc
xchg
and
or
mov
jmp
insl
jae
sbb
xor
push
mov
aas
cmp
and
xchg
xor
inc
aam
jl
clc
inc
lock
adc
test
inc
lea
ljmp
ljmp
add
xchg
aad
stos
dec
std
movsb
jne
fmuls
lock
jecxz
mov
test
mov
inc
pop
fistpl
mov
sti
inc
cmovo
data16
cmp
ds
int3
xor
jecxz
leave
por
or
pop
test
stos
lret
mov
ja
cmpsl
mov
mov
push
or
pop
mov
stos
sarl
inc
outsb
xor
add
imul
bound
imul
add
jmp
add
fbstp
sub
aaa
test
insl
mov
or
popf
fiaddl
fst
jbe
push
arpl
pop
push
cmp
pushf
cltd
mov
fcmovne
xchg
cwtl
nop
out
pushf
xchg
adc
sahf
add
inc
xchg
bound
xorl
in
insb
sub
shlb
dec
les
nop
incb
mov
addb
or
stos
lret
or
imul
es
xchg
insl
adc
les
in
xor
inc
inc
mov
sub
mov
imul
mov
rorb
xchg
sarl
mov
subl
out
adc
lahf
daa
pop
inc
mov
sub
dec
int
xor
sarb
push
and
sbb
inc
fisubrl
insl
push
dec
inc
data16
lcall
jb
hlt
vandpd
pop
sub
and
add
sub
jg
rolb
or
incl
or
add
sub
cltd
push
cmpsl
xorb
inc
sahf
call
and
sbbl
fstpl
xorl
add
nop
mov
cli
add
inc
and
inc
push
sub
push
je
jg
cwtl
sbb
xchg
popf
pop
mov
aaa
adc
sbb
push
cmp
mov
cwtl
adc
and
inc
sbbl
movsl
jae
mov
dec
xchg
insb
and
sub
xchg
xchg
in
sub
xor
cmp
sbb
and
xchg
xchg
in
inc
xor
sbb
in
cmp
adc
dec
out
mov
push
push
daa
cmp
leave
jbe
sbb
mov
mov
mov
insb
adc
add
imul
aas
add
pop
cs
inc
inc
leave
inc
push
inc
roll
sub
roll
push
inc
loop
inc
pop
ss
ljmpw
inc
in
fwait
in
bound
dec
mov
cmp
lret
in
pop
lret
dec
decl
mov
xchg
push
les
mov
xor
lret
test
pop
pop
pop
pop
pop
data16
add
out
pop
out
mov
inc
pop
dec
jp
subb
or
sub
fsts
mov
xor
or
push
inc
sub
ret
aas
adc
outsl
lcall
mov
jg
mov
fstpt
loop
mov
mov
cmp
fdivrs
sub
sahf
arpl
sub
jo
push
test
out
fidivrl
jbe
push
pop
outsl
mov
test
clc
rep
jle
shll
mov
and
inc
mov
jl
lea
mov
sbb
sbb
fimuls
scas
fisubl
sti
inc
pop
mov
mov
add
sbb
sub
sub
call
and
repz
pop
cld
shl
ds
xor
sub
xor
push
mov
jo
fstpl
arpl
orb
pop
push
sarl
cld
sub
xchg
xchg
mov
rorb
bound
sub
push
outsl
adc
mov
jno
push
movsl
push
cmpl
mov
mov
adc
pop
scas
add
dec
jg
mov
and
mov
cmp
push
dec
and
sub
mov
and
int3
shll
push
mov
inc
and
mov
neg
add
or
and
push
pop
push
push
adc
or
push
test
data16
stos
pusha
inc
mov
cmp
mov
inc
push
or
jns
out
sbb
push
jg
xchg
mov
sbb
xor
mov
fwait
mov
adc
lret
jp
pop
xchg
mov
neg
add
jl
lret
pop
cmpl
pop
sti
shl
mov
push
rcll
neg
sbb
push
not
das
shr
in
lock
push
arpl
sbb
mov
push
cmp
adc
outsb
jne
loope
or
push
add
push
adc
es
sbb
mov
cwtl
mov
inc
mov
pushf
lldt
push
leave
and
sbb
cli
rolb
mov
lods
adc
push
sbb
jnp
add
shr
and
add
fistps
pop
sub
xchg
mov
imul
adc
gs
adc
or
adc
cmp
xor
stc
sbb
subb
je
movl
pop
icebp
jle
adcb
jmp
and
rorb
shr
cli
outsb
es
jbe
sbb
into
aad
fucomp
push
sahf
mov
dec
mov
inc
data16
pop
sbb
fstpl
dec
in
pop
pop
adc
mov
pop
add
push
orb
mov
movl
or
push
add
jbe
xchg
push
push
cmp
lods
or
std
in
shll
jne
mov
sub
fiaddl
lret
fdivrl
adc
fcomps
xchg
inc
call
adc
rorb
mov
fsubrs
int3
popf
or
in
idivl
fmul
sbb
xchg
insb
in
in
xor
aad
sbb
xchg
sbb
subb
aaa
loop
mov
cmp
fwait
inc
xchg
and
or
pop
insb
fdivs
xor
xor
loope
push
xor
inc
mov
loope
in
and
cmp
fs
rclb
mov
gs
pop
pop
imul
push
insb
xchg
adc
add
aaa
push
dec
inc
xor
mov
adc
sarl
dec
jb
inc
add
rolb
mov
lods
and
sub
pop
sbb
fldcw
insl
dec
xor
push
repz
mov
xor
sub
fcmovnu
and
popa
ret
in
ljmp
add
sbb
nop
mov
dec
mov
movsb
add
push
mov
ss
imul
inc
sbbl
imul
jne
addb
add
add
push
pushf
mov
inc
sub
push
stos
inc
add
lret
jne
push
lcall
xor
inc
add
add
ror
les
je
add
shl
or
shrb
inc
xor
scas
out
add
arpl
jno
in
pop
sahf
mov
push
js
pop
sbb
mov
pop
push
push
sub
sub
xchg
mov
cwtl
ret
sub
fs
push
inc
mov
out
les
xor
jle
mov
ret
jmp
cwtl
mov
mov
or
leave
aad
shll
cmp
jmp
inc
mov
imul
dec
xor
inc
jae
mov
adc
inc
jae
sub
dec
jmp
sub
push
push
jno
test
inc
or
int3
clc
push
lret
adc
cmp
jae
dec
icebp
jmp
pop
pop
mov
rorb
shl
shl
mov
and
add
push
add
inc
jae
or
mov
and
fs
dec
sbb
xchg
arpl
add
fwait
pop
mov
add
out
adc
jp
ret
mov
cmp
pop
push
adc
add
imul
adc
jo
or
jmp
mov
pop
imul
adc
sbb
push
pop
push
outsb
xchg
in
ds
adc
fisttpl
or
cmc
mov
lret
and
sub
cli
inc
fldenv
jmp
daa
fsubrs
mov
popa
jb
popf
into
adc
and
les
mov
shl
cmp
test
aad
insb
dec
add
fsubr
dec
xor
inc
cmp
sbb
xor
sub
dec
insl
cmp
push
dec
sub
cmp
mov
mov
sbb
lock
arpl
sahf
adc
dec
push
jmp
mov
and
mov
mov
imul
pushf
mov
aaa
xor
mov
cltd
and
cmp
push
cmp
fsubrl
je
and
lock
int
mov
repnz
cs
popf
sub
mov
push
mov
inc
mov
xor
xchg
jbe
shrb
subl
mov
inc
add
sbb
sti
push
mov
andl
popa
std
inc
sbb
add
xchg
push
jae
inc
cmpsb
popa
mov
dec
pushf
xor
push
inc
xchg
je
cli
push
push
add
aas
push
call
pop
inc
sbb
add
loopne
popf
mov
mov
insb
cmp
shr
ror
das
popa
lea
ss
mov
push
fwait
es
mov
sub
cmpsb
ret
inc
test
std
or
ret
push
lock
fidivrs
mov
jae
aam
jno
sahf
mov
insb
pop
lret
mov
cmp
push
or
dec
push
adc
sbb
out
or
jo
jb
mov
in
xor
and
jae
neg
xor
aaa
and
sti
jbe
fisttps
push
lea
inc
adc
lock
add
inc
mov
fistpl
fsubr
std
or
add
push
popa
shrb
push
xor
add
mov
ret
mov
call
add
dec
out
int
cwtl
lock
mov
pop
jge
inc
sub
rcr
addr16
adc
mov
sarl
sbb
jnp
xchg
xor
lret
mov
mov
inc
cmp
and
icebp
clc
push
mov
cmc
repnz
into
sub
loopne
stc
and
mov
nop
ret
jle
cmp
jae
sahf
adc
jbe
pushf
and
jb
and
pushf
pop
stc
scas
and
jne
in
adc
inc
add
js
loop
pop
in
cli
jmp
or
add
cmp
xchg
add
adc
fisttpll
inc
inc
cmpb
scas
sbb
xchg
mov
jmp
mov
jne
lcall
mov
loopne
jne
dec
and
cmp
lea
cmp
sub
sbb
xor
cli
jmp
popa
incb
add
xor
or
inc
push
sbb
fdivl
mov
adcb
or
sub
pop
add
sahf
or
pop
mov
or
and
stc
clc
mov
push
test
jnp
imul
aad
ds
add
or
cld
dec
lods
sysenter
inc
and
push
push
icebp
inc
ds
sbb
sub
lret
mov
lcall
inc
push
shlb
push
dec
and
mov
or
xchg
or
outsl
fisttpl
iret
mov
daa
fs
sbb
pop
mov
popf
out
add
inc
ds
jnp
ds
inc
iret
inc
push
push
sbb
mov
mov
fstpl
cmp
outsl
sbb
mov
add
sbb
push
sub
xchg
sbb
or
ss
xor
add
testb
push
adc
and
inc
test
push
inc
sbb
orl
arpl
push
mov
inc
inc
mov
dec
dec
and
xor
sbb
outsl
adc
enter
xor
push
popa
inc
inc
push
push
mov
mov
leave
int
icebp
mov
dec
dec
push
and
mov
adc
jg
sbb
mov
push
lret
lods
scas
mov
pushf
mov
fdivrs
mov
push
mov
mov
dec
and
sarl
push
xchg
leave
add
mov
xor
xor
adc
ret
push
mov
push
add
into
lret
mov
pop
inc
std
hlt
lods
pop
push
mov
push
ret
out
dec
inc
subb
in
pop
sarb
dec
adc
push
mov
pop
std
jne
inc
test
push
add
xchg
cmpsb
sbb
adc
mov
inc
push
xchg
mov
sahf
inc
rcll
test
sahf
lahf
mov
ja
xchg
push
shll
fs
and
imul
xor
cmp
enter
sbb
and
mov
lds
shlb
push
js
nop
pop
and
cmp
pop
or
mov
fdivl
mov
xorl
mov
add
or
add
pushf
insl
xchg
lret
in
inc
outsb
outsl
jle
cmp
mov
out
imul
roll
add
sbb
and
adc
mov
and
xchg
mov
ret
aas
push
add
jno
roll
or
loopne
imul
stos
js
cmp
add
jle
push
call
mov
fcmovb
loop
mov
xchg
and
out
or
add
repnz
testb
stc
cli
sbb
enter
std
fmul
and
pop
push
sub
mov
sub
mov
pushf
adc
dec
jne
mov
outsb
sub
div
icebp
cmp
fidivl
div
icebp
mov
xchg
adc
or
fists
add
mov
shrb
movnti
adc
sub
imul
mov
and
jl
or
dec
adc
movl
push
ret
pop
inc
cmp
movsb
sub
inc
add
xor
pop
inc
inc
ljmp
jmp
dec
sub
pop
xor
adc
sbbb
push
sub
andl
mov
pushf
mov
sub
or
hlt
mov
push
mov
dec
dec
ret
mov
and
jmp
push
jge
adcl
fstpt
cltd
mov
pushf
inc
cmp
dec
inc
imul
jb
pop
jge
ret
je
cld
dec
jmp
xor
test
add
dec
icebp
xor
add
adc
jp
aad
inc
inc
fmuls
inc
xlat
insb
mov
sahf
jge
lret
adc
inc
pop
insl
dec
or
ret
inc
loopne
push
scas
ret
popa
sub
aaa
adc
enter
test
ficoml
push
enter
outsl
jnp
jno
sbb
fsubrl
inc
ja
into
cltd
mov
xor
daa
lods
push
mov
adc
mov
dec
add
adc
fcompp
andl
jne
cmp
dec
lea
dec
repz
test
pop
pop
lahf
repz
inc
and
stos
jb
mov
sbb
out
adc
add
or
jl
cmp
nop
sbb
or
add
or
enter
mov
sub
nop
test
or
mov
push
sbb
pop
or
pop
aas
dec
sbb
jne
fisubrs
inc
addr16
and
jecxz
dec
mov
aas
cmp
add
cmp
mov
sbbl
cmpsb
sbb
inc
jnp
dec
cmp
or
and
jae
arpl
lret
sub
call
out
inc
outsl
xor
and
mov
lds
addr16
adc
adc
pop
sbb
out
jge
or
or
lret
int
mov
pop
push
pop
jne
pop
push
ss
negl
fisttps
aad
dec
and
in
push
sub
ljmp
inc
ffreep
adc
adc
rclb
add
dec
std
not
pop
mov
and
inc
or
push
stc
das
mov
and
adc
cltd
leave
dec
test
mov
sbb
push
gs
mov
lea
dec
das
push
dec
dec
xor
dec
pusha
sarb
cmp
out
pop
jbe
cmp
push
int
inc
sub
dec
lret
mov
data16
lahf
xor
int
sahf
push
enter
pop
adc
lahf
pop
and
cltd
jmp
adc
aaa
dec
cmp
nop
jecxz
lret
in
push
mov
sbb
jae
insl
cmp
addr16
jg
add
out
enter
mov
add
push
push
and
inc
in
push
push
mov
data16
jne
loop
xchg
mov
mov
dec
push
push
mov
mov
std
mov
test
xchg
xchg
push
or
dec
push
push
and
xchg
sbb
call
pop
dec
push
sti
je
adc
jmp
aad
pop
call
push
jae
xor
mov
test
and
adc
lcall
add
sbbb
insb
cwtl
and
fs
je
cmp
mov
push
test
adc
pop
add
inc
add
mov
jne
mov
je
pop
jge
test
call
cmp
inc
loopne
es
pop
mov
pop
pop
mov
aaa
add
dec
inc
cmp
jbe
cld
fisubl
jae
mov
arpl
cmpsb
mov
jbe
ds
mov
add
add
hlt
cmp
bound
push
ljmp
decl
lea
sub
js
push
ret
add
adc
inc
sbb
fstpt
dec
add
repz
inc
test
lds
clc
mov
add
jecxz
sub
push
je
fstp
or
dec
in
sbb
adc
fstl
mov
iret
or
mov
pop
lea
in
xchg
inc
xchg
and
shlb
or
fnstenv
dec
fldl
and
neg
ss
mov
sub
xchg
sub
cmp
xor
jbe
lods
push
aam
sbb
xchg
gs
pop
inc
mov
dec
insb
rclb
outsb
adc
dec
push
int
add
push
inc
adc
cs
clc
or
sub
push
mov
xlat
push
jmp
xchg
add
xchg
sub
push
dec
dec
cmp
addl
mov
lret
cmpsl
dec
sub
and
sub
or
add
or
sbb
adc
xorb
pop
sub
adc
mov
mov
cmpw
ror
add
add
mov
mov
mov
movl
mov
inc
lods
pop
je
sbb
testl
push
and
lcall
dec
push
mov
sub
sarl
lock
je
popa
sbb
mov
add
sbb
cli
adc
fstl
mov
shll
test
pop
mov
jmp
mov
sbb
or
out
mov
jae
ret
and
mov
ret
xor
and
and
out
xor
or
or
inc
inc
xor
and
xor
loope
je
adc
xor
cmpsb
or
mov
roll
icebp
sub
add
and
fdivr
xor
mov
clc
shr
pop
jne
shrb
cmp
adc
in
outsb
jg
mov
lea
je
dec
push
mov
repnz
sub
sub
inc
adc
sub
sbb
adc
inc
test
mov
test
pop
and
mov
and
andb
sub
xchg
pop
leave
xchg
mov
jl
jns
sti
paddb
adc
mov
sub
and
sbb
push
test
add
mov
lahf
pop
push
mov
push
xor
add
push
cmp
push
mov
adc
add
sti
stos
push
or
xor
cmp
add
loopne
push
loop
pusha
das
mov
jne
daa
sbb
jnp
testl
pop
ret
push
mov
push
dec
add
pop
xorb
dec
ljmp
stc
mov
push
push
sti
jne
pushf
addr16
and
push
add
cld
je
push
aaa
mov
nop
js
and
in
xor
push
push
push
inc
xor
and
cmp
das
mov
shll
mov
mov
add
jl
mov
add
gs
les
and
push
pop
dec
imul
add
jnp
or
insl
jnp
mov
adc
lea
jno
pop
adc
and
or
mov
jl
sbb
push
inc
or
adc
cmp
in
mov
mov
cmc
fs
dec
movsl
enter
dec
sub
std
pushf
push
adc
or
jne
test
and
jae
and
sbb
sub
adc
push
inc
push
mov
inc
xor
scas
mov
mov
loope
sub
mov
pop
adc
xor
mov
add
leave
pop
mov
jno
push
pop
cmp
ds
push
jae
sbb
pop
inc
sbb
or
add
mov
pop
mov
xor
ficoml
push
mov
and
inc
mov
lods
enter
in
mov
inc
push
jb
mov
xor
push
mov
lea
push
mov
iret
das
dec
add
ljmp
test
jne
add
sub
testb
xchg
add
cmp
mov
test
adc
dec
add
xchg
lods
lea
and
imul
in
xor
add
iret
cmp
jae
cmp
fistps
js
out
xlat
inc
shll
insb
sbb
scas
in
lock
frstor
in
jae
jge
or
cmc
mov
jno
decb
add
fldcw
fidivrs
fbstp
icebp
sub
sub
push
inc
mov
push
sub
popa
adc
cs
std
outsb
loopne
fdivl
sub
fisttps
push
sub
sbb
das
negb
adc
push
sbb
jne
push
popf
adc
push
or
push
out
add
pop
in
mov
push
pop
jb
dec
or
fcom
jb
addr16
adc
sbb
rol
inc
lods
aad
mov
add
jge
dec
xchg
into
lea
jmp
jns
and
ret
xchg
sub
xchg
in
pop
ret
and
xor
das
and
popa
insb
and
or
mov
nop
xchg
cltd
add
rcrb
xor
pop
pop
xchg
push
call
rcll
testb
js
jecxz
mov
mov
or
and
les
icebp
pushl
inc
cmp
sbb
and
add
inc
xchg
push
js
ljmp
rcrb
jmp
mov
cmp
aas
daa
pop
and
xchg
fcomp
xchg
lret
adc
bound
decl
pop
cmp
je
adc
fmuls
lret
mov
sub
adc
outsl
lret
add
jmp
rcrb
dec
sbbl
lods
and
xchg
xchg
pop
inc
jl
add
jg
mov
sub
mov
fistpll
addr16
and
push
jnp
sbbb
or
fildl
add
pop
aam
test
dec
adc
ja
sbb
pop
cmp
push
cmp
in
add
mov
clc
popf
test
shll
inc
jno
dec
cmp
xchg
out
and
pop
push
jl
sbb
push
fdiv
pusha
pop
jne
jp
xchg
insb
testl
stos
jae
push
or
push
inc
add
fsub
push
adc
add
xor
ret
orb
int3
add
adc
pusha
mov
mov
neg
dec
cmc
std
or
xor
shrb
or
mov
inc
frstor
insl
lea
sbb
push
ljmp
inc
jl
testl
fnstenv
std
insb
test
in
or
imul
es
or
jle
cmp
lock
push
jg
pushl
iret
xor
pushf
cmp
outsl
rcrl
xorl
add
adc
pop
xchg
out
les
jno
dec
pop
mov
je
dec
imull
cli
out
cmp
xchg
adc
adc
xor
aam
xchg
sub
xor
push
std
cld
mov
cltd
stos
cmp
and
sbb
addr16
or
movl
test
shll
js
sbb
sbb
int3
sub
cwtl
shl
push
ss
out
inc
add
ja
mov
rcrb
dec
pop
jne
cmp
adc
out
adc
ja
icebp
inc
call
aas
push
and
mov
je
add
sub
push
shlb
out
cmpb
sub
mov
mov
mov
or
push
mov
xor
add
sub
sbb
pop
push
dec
add
mov
push
jmp
scas
and
push
mov
ja
adc
push
push
pop
ja
sub
sbb
mov
pop
rorl
fwait
add
in
sbb
mov
insb
jnp
adc
pop
mov
xor
sbb
cmpsl
mov
fiadds
mov
push
adc
push
mov
in
fildl
mov
mov
pop
xchg
scas
cmp
push
cmp
insl
mov
xchg
inc
jnp
cmp
fdivl
mov
dec
outsl
jae
and
add
adc
or
fwait
lcall
dec
cmp
xor
dec
decl
pop
pop
pop
sub
test
pushf
xchg
fwait
mov
jp
xor
stos
or
and
test
fwait
bnd
bound
adc
jnp
sub
add
das
sub
fildll
orb
test
andb
das
fcomps
inc
or
rcrl
cmp
xor
inc
dec
lcall
cmpsb
ficoml
inc
jo
sub
jl
push
negl
xor
mov
inc
sbb
cli
je
jo
mov
ret
fisubrl
stos
test
jo
mov
push
test
in
adc
and
jmp
add
cmp
in
jmp
cmpsb
test
lahf
and
jne
jmp
inc
cmp
jl
mov
inc
dec
je
sbb
adc
jne
je
and
and
add
nop
divb
lock
xchg
ret
mov
lea
sbb
mov
movsl
lock
mov
arpl
pop
mov
sarl
or
sub
lods
mov
sbb
pop
add
push
imul
adc
out
push
cmp
mov
pop
dec
cwtl
rcrl
dec
xor
rclb
lahf
loope
into
call
pop
pop
pop
icebp
adc
test
loope
fisttpl
add
sub
sub
out
xchg
out
xor
mov
rcll
fucomip
mov
xor
mov
jg
lea
or
cmp
rolb
xchg
ljmp
mov
pusha
iret
pushl
pop
inc
adc
fldenv
out
xchg
mov
lahf
and
pop
or
mov
das
dec
mov
data16
imul
mov
jnp
cmp
insb
sbb
cli
inc
xor
and
or
scas
jp
and
sub
or
sbb
inc
sub
or
add
push
stc
push
or
std
outsb
add
pop
pop
jne
mov
test
xor
push
out
dec
adc
add
cli
or
mov
mov
mov
mov
fisttps
in
je
incb
outsl
mov
inc
lock
jb
aaa
ja
add
cmp
lods
push
test
or
pop
fisubl
fcoms
xlat
pushf
and
lret
mov
jmp
jle
es
fsubs
std
pop
out
fldt
aas
insl
xor
push
add
ret
cltd
mov
icebp
inc
and
lret
adc
add
mov
mov
inc
xchg
lsl
and
push
iret
cld
mov
lock
push
je
mov
jmp
dec
sbb
adc
out
inc
loopne
neg
push
sub
jle
jbe
cmovo
mov
andb
add
lea
xor
rcl
ficoml
std
inc
pushf
mov
xor
push
mov
pop
xchg
cld
xor
in
pop
lock
mov
add
add
insl
sbbl
jmp
sbb
dec
pop
pop
xchg
mov
addl
inc
clc
movl
ret
pop
add
mov
or
xchg
mov
std
mov
mov
mov
jb
scas
sti
sub
push
insb
sbb
outsl
push
add
add
dec
out
test
test
adc
push
outsl
int3
push
rclb
xor
mov
gs
push
dec
or
sbb
mov
inc
mov
fisubl
fdivrs
sbb
push
mov
ffreep
pop
test
leave
push
cld
fdivrs
sub
push
jnp
roll
cmp
jl
mov
add
mov
pop
ss
loopne
add
data16
scas
sub
add
hlt
clc
cld
sbb
in
cs
mov
mov
popf
fcomps
and
add
insl
rolb
push
ud0
mov
sub
dec
int3
or
sub
je
mov
andb
cmp
fs
inc
mov
popa
nop
and
lods
movl
cs
jmp
add
jmp
test
cmp
adc
or
mov
sub
push
sub
xchg
xor
jmp
dec
je
push
movsl
pop
ja
ja
pop
sbb
pop
xor
jne
jl
rcr
push
inc
dec
scas
mov
dec
and
mov
add
out
pop
cmc
pop
sti
mov
inc
jge
adc
dec
cli
or
aam
inc
movsb
dec
jno
cmp
ja
lcall
ja
pop
dec
out
out
push
sbb
lcall
pop
cwtl
cmp
inc
mov
jo
adc
xchg
sti
mov
mov
or
std
push
push
push
dec
mov
add
pop
push
es
das
jo
iret
sarl
lea
mov
sub
dec
or
pushl
jge
dec
call
ret
movb
popl
mov
cmpl
testl
cmp
push
fwait
mov
and
push
sarl
or
in
push
ljmp
or
pop
inc
mov
add
popa
mov
jmp
aam
fwait
rclb
out
lret
in
jmp
ss
aad
add
jbe
test
insb
aam
in
adc
mov
daa
push
jecxz
push
jmp
push
fcomps
or
out
push
or
out
push
or
sarl
mov
imul
les
imul
push
int3
or
add
or
loopne
mov
xor
adc
ja
add
adc
push
dec
cmp
cltd
leave
enter
dec
pop
add
inc
pop
push
leave
mov
test
shrb
frstor
and
mov
insb
enter
dec
xlat
rcl
leave
sub
dec
call
sub
movzwl
push
push
push
add
out
ljmp
mov
jge
stos
pop
add
inc
jge
lods
icebp
decl
push
fnclex
ret
ret
mov
xor
in
out
mov
push
or
cmp
rep
mov
les
inc
xor
jle
cltd
inc
mov
hlt
fstcw
fwait
mov
int3
or
pop
in
or
fistpll
add
push
rcll
mov
jae
std
push
jne
loop
popa
jl
jg
cmc
call
or
mov
push
rcl
or
lock
push
rcll
sbb
inc
dec
mov
dec
pop
insb
je
xchg
or
mov
cmp
push
or
push
add
push
scas
or
push
or
ret
scas
push
imul
add
std
add
mov
push
test
jl
mov
and
mov
sbb
mov
fnsave
std
mov
fs
inc
incl
sbb
push
mov
mov
mov
testb
sbb
lods
das
add
or
or
mov
jne
sbb
andb
sub
push
sub
sub
sub
cmp
insl
xchg
cld
sbb
adc
pop
mov
subl
jg
dec
cmp
jb
xor
nop
insb
ds
adc
das
sbb
cmp
loopne
dec
fsubr
lock
jecxz
loopne
ds
data16
sub
and
mov
insb
push
pop
cld
sbb
inc
inc
xor
pop
rolb
inc
ja
movsb
xlat
inc
bound
or
cmp
inc
mov
mov
dec
xchg
mov
mov
iret
push
mov
adc
add
xchg
jb
sbb
psubb
mov
or
mov
mov
jbe
ret
shll
lcall
pop
test
pushf
neg
push
rcrl
aam
or
pushf
push
push
outsl
or
lds
mov
movsb
pop
push
mov
xlat
cmc
mov
jne
xor
mov
add
xlat
enter
mov
rcrl
adc
sbb
das
and
and
jp
push
adc
arpl
cmp
pop
jne
test
pop
jae
mov
mov
push
sbbl
lret
and
dec
cmpsl
out
rclb
xor
std
fistps
and
or
or
fs
push
and
xchg
dec
sub
xchg
xchg
mov
xor
push
subl
or
mov
inc
dec
aas
and
inc
cmp
icebp
cmp
xchg
loop
adc
add
ja
pop
xor
insb
mov
sub
mov
lret
out
and
loopne
push
sub
cmpsl
andl
ljmp
pop
sbb
inc
or
sbb
jle
pop
adc
mov
fwait
mov
push
insl
lock
add
push
movl
pop
fsubr
outsb
adc
bound
adc
insb
add
outsl
loopne
mov
nop
mov
in
or
js
fsubrp
lea
mov
cmp
or
sub
add
and
mulb
in
inc
push
fdivrl
cltd
dec
jge
sub
sbb
dec
adc
xor
fwait
fs
fisubrl
push
dec
adc
push
push
int3
mov
mov
add
push
hlt
cs
add
inc
fcomps
sbb
cmp
js
jbe
shl
sub
orl
je
das
cli
test
lcall
loope
fisttpll
add
cmp
jb
les
add
mov
lock
xor
das
add
dec
jne
lock
iret
mov
inc
sbb
out
sbb
movsb
js
rcrl
push
xlat
and
push
andl
or
push
fdivs
mov
add
movl
push
jl
faddl
and
mov
out
mov
cli
add
pop
int
jmp
inc
and
bnd
fwait
mov
inc
cld
sub
clc
lea
mov
iret
imul
cmpb
inc
add
mov
dec
add
addb
inc
mov
lea
mov
push
cld
add
mov
or
ret
jne
sar
dec
cmp
jbe
xchg
mov
jecxz
push
inc
sbb
mov
push
mov
mov
jmp
add
shll
pop
mov
sub
and
push
pushf
pop
jmp
mov
pop
leave
jp
inc
mov
inc
pop
add
sbb
and
push
push
insb
mov
push
out
or
pop
sarl
jne
cwtl
pop
fistl
insl
mov
adc
sti
add
mov
dec
pop
cmp
jle
imul
inc
adc
or
jp
pop
jne
das
fisttpl
cmp
mov
jmp
not
and
pop
inc
lock
cld
dec
stc
data16
mov
push
sub
dec
cltd
dec
push
dec
cli
xchg
gs
or
pop
mov
hlt
xor
sbb
shrl
mov
xor
cs
add
or
jno
push
fcoml
dec
or
mov
ret
cmovo
pop
jne
sbb
lods
or
jmp
and
data16
je
mov
push
bts
test
add
or
add
xor
lock
mov
mull
or
mov
add
push
mov
jle
mov
int
pop
or
push
cmp
ja
inc
std
movsb
mov
decb
out
pop
icebp
or
cmpb
andl
adc
ffree
adc
imul
sub
adc
mov
dec
cmpsl
sub
add
or
push
dec
lods
orb
das
jl
in
les
das
cmp
or
add
dec
cs
push
cmp
fisubs
jp
dec
add
gs
lea
sub
outsb
cli
and
and
and
stc
add
or
push
insb
or
mov
push
jmp
jmp
nop
push
mov
shr
push
shll
addr16
cli
hlt
insl
pop
jne
sbb
and
and
or
add
out
das
dec
add
cmp
sbb
pop
cltd
nop
out
test
cmp
es
mov
out
inc
and
scas
repnz
pushf
jecxz
or
adc
jmp
es
in
sbb
push
add
fwait
je
test
mov
mov
in
pushf
and
inc
test
fimuls
add
adc
outsl
mov
movsl
adc
push
cli
push
cld
sub
psubq
push
nop
inc
mov
mov
jo
inc
lods
insb
adc
jle
sbb
movb
popa
xchg
inc
mov
dec
sbb
inc
in
fbstp
and
or
je
mov
subl
push
into
cmp
mov
and
jl
shl
inc
shrl
inc
jmp
mov
push
stc
inc
or
push
icebp
sub
das
test
incb
cmp
jle
pop
push
xchg
lcall
popa
cmp
xchg
push
test
add
call
outsl
scas
cmp
in
and
mov
decb
jne
xchg
mov
int
sbb
and
jmp
dec
adc
adc
sahf
test
sub
add
mov
fldl
add
clc
add
jne
or
or
test
popf
test
and
fwait
imul
pop
mov
sub
xchg
movsl
adc
pop
mov
shr
or
or
mov
scas
jmp
sub
mov
in
fldt
jnp
mov
lods
push
test
xchg
and
in
pop
outsb
jmp
cld
mov
jne
add
and
or
add
xor
lahf
shlb
lea
popl
sbb
cmp
push
lea
push
outsl
adc
inc
mov
or
std
inc
pusha
sahf
add
xor
lcall
fcoml
add
inc
xchg
or
pop
or
push
mov
loopne
or
inc
mov
xchg
in
xor
lea
xor
shrb
and
enter
push
sbb
or
movsb
push
dec
mov
lods
movsl
inc
lret
jl
and
mov
mov
bound
adc
out
mov
xor
jno
or
dec
loopne
ret
aaa
imul
sbbl
in
testb
add
dec
push
sti
addr16
mov
push
mov
leave
hlt
enter
shll
fldt
adc
add
cli
ja
lea
dec
mov
orl
cld
push
movl
roll
orb
sub
inc
ljmp
lock
jb
or
clc
mov
jmp
fcomps
mov
pop
mov
inc
fs
inc
jg
les
inc
mov
or
sbb
inc
jne
or
mov
pop
ljmp
outsl
pop
add
or
push
jge
xlat
lea
dec
jne
pop
sub
nop
shr
test
shll
dec
cmp
cmpsb
sub
mov
mov
ss
dec
or
fldcw
inc
add
lock
jbe
dec
pop
pop
mov
xchg
mov
gs
dec
push
jae
push
clc
daa
iret
enter
nop
sub
xor
add
and
nop
sub
out
nop
dec
or
or
mov
loopne
sub
add
inc
add
fwait
and
inc
fcmovnu
push
sar
dec
inc
xor
cli
pop
fcom
mov
hlt
mov
aas
gs
mov
dec
pop
xchg
gs
xchg
dec
pop
pop
pop
pop
decl
in
adc
and
iret
mov
nop
iret
in
mov
dec
lcall
mov
repnz
pushf
inc
xor
add
in
fcomp
rorb
adc
mov
or
adc
lea
push
fisubrs
lcall
ss
xor
adc
adc
jbe
mov
mov
mov
xchg
and
dec
test
and
imul
push
jns
in
cmp
imul
xchg
ja
fstpt
or
xchg
dec
pop
jne
jnp
adc
adc
push
push
inc
push
imul
push
cmovnp
xchg
gs
cmp
xchg
jne
into
pmulhw
jo
xchg
dec
dec
lds
sbb
sbb
cmpsb
ret
xchg
pop
inc
lcall
push
addl
add
lahf
add
and
jle
xor
in
mov
ja
jmp
push
imul
movl
inc
sub
and
jmp
inc
or
in
icebp
fidivrl
jne
jno
xor
pop
or
jmp
sbb
mov
jb
xor
filds
add
lea
adc
or
roll
fisttps
mov
add
adc
popf
imul
cmp
dec
inc
mov
cmp
sbb
jecxz
movsb
add
ret
cmp
jae
orb
mov
loope
mov
jmp
daa
lret
add
aaa
int3
cmp
or
jo
inc
mov
sub
xor
xor
mov
pusha
inc
mov
ljmp
xor
test
int3
pop
cmp
adc
mov
fildl
aas
mov
adc
sbb
pop
ds
adc
orl
repnz
dec
test
xchg
sub
clc
jge
mov
je
sub
pop
pop
or
jge
repz
outsl
push
int
je
cmpl
es
ds
inc
popf
inc
and
or
push
cli
xchg
inc
out
pop
xor
mov
sub
je
or
inc
mov
mov
push
mov
adc
push
in
jbe
add
jb
cmp
sub
xchg
sub
in
mov
out
jecxz
jb
pusha
roll
push
inc
pop
les
enter
ds
insb
or
sub
pop
sar
inc
or
and
sub
inc
adc
es
mov
jmp
movzbl
add
loopne
sub
and
cmp
push
and
sbb
and
adc
adc
inc
pop
pop
fwait
add
cmp
ret
inc
fdivrs
or
pop
mov
test
dec
jle
jp
fwait
mov
cmp
shlb
sub
rorb
cmp
mov
push
ss
push
push
movsl
out
xor
push
add
jo
xorl
or
js
sbb
add
jae
mov
mov
cmc
dec
sub
pop
aaa
es
cmpl
sbb
adc
cmp
fmuls
or
pop
mov
mov
jg
mov
add
push
add
insl
fst
cld
fsubs
or
mov
popa
pop
mov
xor
testl
add
adc
jb
sbb
ljmp
cmp
push
rolb
push
push
mov
das
cmc
lahf
test
push
pop
ja
shrb
rclb
sub
mov
orb
fs
or
cld
mov
ret
movl
lods
dec
daa
dec
inc
sbb
call
lods
mov
jmp
or
xchg
add
jo
pop
mov
pop
pop
sub
icebp
pop
xchg
xchg
fidivs
lock
cmp
or
dec
sbb
shll
shrl
popa
loope
notl
lea
add
lds
push
aaa
mov
sub
push
int
jge
clc
add
mov
mov
inc
jmp
push
push
xchg
popa
cld
push
mov
jne
icebp
xchg
cmpsb
cli
add
xchg
add
adc
inc
aaa
xor
mov
or
mov
inc
adc
dec
cmp
sbb
xchg
push
mov
mov
mov
cltd
pop
inc
add
in
repz
jae
lea
divl
jp
and
insl
push
xor
jae
mov
roll
mov
in
pop
add
inc
inc
jle
in
insl
lods
mov
push
cwtl
inc
mov
in
xor
adc
clc
mov
push
scas
lods
cmp
mov
cmpsl
aaa
push
ret
add
or
mov
mov
imul
xor
rolb
and
xchg
fcomps
adc
movsl
inc
mov
xchg
sbb
push
mov
sbb
xor
pop
add
pusha
jae
adc
test
rolb
lea
rclb
sub
mov
hlt
or
push
jmp
mov
xor
add
push
addb
lock
outsl
aam
jae
mov
cmp
gs
cmpb
lcall
arpl
sub
pop
scas
jne
stos
inc
push
pop
xor
cwtl
movdqu
or
adc
adc
inc
adc
aaa
and
sub
mov
std
pop
roll
cli
int
mov
scas
push
adc
xor
inc
add
jmp
push
rep
cmp
and
es
xchg
mov
mov
je
scas
jbe
ret
mov
pop
mov
lods
mov
and
mov
jl
movsb
fwait
dec
sub
add
sbb
add
std
pop
jg
mov
and
cmp
or
jecxz
fmull
aad
andb
sub
ja
xchg
add
aad
movzwl
jmp
shr
xor
test
test
inc
push
add
mov
sbb
sub
or
outsb
sub
lret
xchg
pop
in
inc
xchg
or
pop
imul
push
mov
push
pop
je
inc
jo
push
jmp
enter
mul
ret
mov
mov
sbb
faddl
pop
sbb
mov
push
mov
je,pt
jne
shlb
idivb
push
add
lea
imul
push
lods
or
stc
push
push
incl
arpl
loopne
sub
js
aaa
push
and
adc
cmc
mov
int
jbe
push
and
and
sbb
popa
andl
push
adc
pop
sbb
test
push
sti
in
ss
or
xchg
jbe
xorl
jl
sbb
jl,pn
outsl
push
int3
test
ret
add
push
lcall
les
jle
cmpsb
jle
dec
fwait
xchg
or
xchg
sbb
jae
addr16
adc
inc
in
pop
rorl
fwait
sbb
stc
add
or
add
enter
mov
and
or
std
fcomps
cmp
push
sub
test
cmp
cmp
jg
jns
test
loopne
add
add
inc
or
or
clc
jle
jbe
aaa
adcl
outsb
mov
pusha
clc
sarl
push
jg
or
xorl
pop
jg
jmp
push
in
es
jp
xor
pop
push
ljmp
sub
push
ret
out
mov
sbb
push
cli
mov
pop
pop
ret
dec
inc
jbe
fs
mov
test
lret
repnz
cmp
sahf
sub
xor
mov
test
mov
jecxz
adc
lock
dec
cmp
jl
cmp
lret
jg
stos
or
mov
hlt
push
push
xchg
xor
cmp
fstl
jbe
push
mov
xor
out
adc
insb
pop
mov
ds
inc
push
sbb
fldl
mov
inc
jecxz
pop
adc
xchg
in
lods
inc
or
testb
sub
iret
push
push
pop
mov
add
test
or
jne
lods
mov
repz
enter
jae
cmp
pop
xor
in
pop
test
addb
jle
push
adc
mov
dec
int3
push
sub
movsb
jmp
fdivrp
or
sbbl
jmp
out
popf
ljmp
dec
mov
popf
jnp
push
ss
pop
jmp
mov
add
es
add
sbb
mov
cmp
fmuls
ss
ds
or
push
sub
mov
and
and
pop
sub
xor
or
or
pop
or
aas
int3
sub
pushl
test
sbb
adc
jbe
pop
push
enter
in
jns
and
fimull
ret
fdivrl
dec
aam
inc
or
test
sub
loopne
leave
push
iret
mov
adc
mov
into
or
stos
mov
ffree
cmp
out
pop
cmp
scas
sahf
adc
mov
arpl
sub
scas
loop
add
test
inc
fstps
xchg
aam
inc
inc
and
push
out
mov
cmp
loopne
jge
outsl
sbb
orl
or
les
add
je
push
arpl
fwait
mov
cli
outsb
daa
aaa
jg
pushf
xor
cmpl
push
xchg
mov
and
adc
call
or
or
sbb
call
jg
add
inc
or
inc
bound
push
leave
notl
fistps
xor
bound
ficomps
cmp
pop
sub
pop
dec
sub
mov
pop
sub
cmp
sbb
dec
push
dec
out
dec
jae
add
aam
rcrb
rolb
cmovl
jg
inc
sarl
or
divb
sbb
push
jne
push
mov
sahf
cmp
jle
xor
leave
dec
negb
je
xor
dec
stc
xchg
les
push
fstps
sbb
push
inc
adc
loopne
and
xchg
mov
stos
pop
ret
pop
push
inc
jb
inc
mov
and
sbb
dec
sub
xchg
adc
push
lods
sbb
sbb
or
cbtw
push
test
imul
insb
pop
test
daa
jl
pop
xor
rorl
rcrl
inc
jno
ss
enter
xchg
add
jae
test
mov
adc
mov
aam
mov
sub
add
cmp
mov
inc
cmp
mov
into
jbe
jmp
shlb
push
jo
and
inc
and
mov
xchg
dec
sbb
adc
sbb
push
sahf
push
mov
adc
mov
sarl
add
test
lcall
mov
lea
or
add
jmp
std
jmp
cld
xchg
rolb
rcrl
adc
frstor
inc
pop
sbb
jp
leave
add
orl
xchg
xchg
shl
daa
iret
into
test
push
cmp
data16
inc
es
leave
or
loopne
out
and
jmp
pop
add
adc
pop
sti
inc
jl
ret
jb
xchg
inc
xor
inc
push
inc
shlb
add
cld
lea
mov
inc
rolb
lea
imul
add
stc
inc
fcmovu
mov
jno
add
add
add
inc
push
rorl
mov
loope,pn
sti
or
push
jge
mov
pop
sub
adc
cmc
and
mov
loopne
mov
addl
data16
outsb
add
cmp
sarl
out
or
adc
cltd
mov
xchg
insl
clc
or
lcall
add
push
call
sbb
loopne
mov
add
adc
out
cs
pop
outsb
adc
sbb
mov
fsubl
inc
sub
shlb
push
lods
clc
gs
add
push
shrb
mov
mov
and
pop
aam
stos
mov
stos
push
inc
mov
mov
pop
sub
push
mov
lcall
inc
mov
inc
and
mov
inc
sbb
sub
bound
adc
inc
sarb
lcall
je
cmp
fcom
mov
in
dec
inc
dec
mov
testb
xchg
in
fldl
ljmp
dec
cs
ficomps
cltd
or
fcompl
push
xchg
xchg
add
mov
lret
sub
lret
cmpb
adc
mov
ljmp
push
or
cmp
outsl
int
insb
add
jb
fstpl
addl
jbe
xchg
jns
pop
push
lock
add
ds
jge
inc
lods
cmp
xchg
cmp
add
sbb
push
sbb
aad
mov
inc
sbb
adc
inc
jnp
pop
sub
or
push
xchg
js
loop
cld
enter
ljmp
xchg
inc
std
push
cmc
sarb
es
dec
jns
neg
jl
mov
sti
fs
push
fs
pop
notl
imul
or
xor
jne
ficoml
or
ret
rorl
mov
ret
sbb
out
mov
or
mov
stos
outsb
int
shlb
insl
jmp
adc
or
or
push
adc
je
cmp
ret
or
inc
sub
pop
movb
loopne
lea
es
adc
movb
pop
inc
jmp
add
sbb
adc
bndldx
pop
xor
testb
scas
je
neg
jmp
add
fidivrs
iret
push
add
push
push
mov
adc
js
cmp
cmp
js
sub
orb
call
pop
and
test
mov
setl
mov
dec
sub
mov
lock
and
leave
or
ret
inc
inc
stc
and
push
scas
es
jl
mov
add
xor
jg
fnsave
int
or
and
test
or
lds
mov
or
mov
xchg
dec
das
inc
xor
push
scas
push
pushw
xor
es
adc
or
jmp
adc
sub
fisubl
bound
sbb
loop
nop/reserved
add
or
pop
pop
jle
sbb
cmp
out
test
inc
push
insb
pop
push
push
mov
dec
insl
push
nop
add
repnz
sbb
fcomps
push
rorl
les
and
pop
pushf
cmp
int3
xchg
shrb
aad
mov
mov
xor
push
in
in
mov
pop
sti
aam
stos
mov
jae
insl
and
movsl
push
or
les
add
cmp
test
sub
dec
and
arpl
les
ret
adc
imul
lock
pop
fdivl
stc
fsubl
mov
jmp
push
hlt
dec
in
sbb
add
fcomps
call
inc
ds
ffree
pop
cmp
jg
fidivl
test
push
add
mov
xor
fmull
push
xchg
adc
mov
popf
mov
je
push
fs
je
mov
lods
aam
rolb
mov
or
jmp
aad
mov
leave
xchg
movb
or
push
jno
mov
cltd
xchg
mov
push
push
insl
xor
sarb
jb
jo
mov
inc
lea
mov
cld
dec
mov
and
jl
mov
inc
stos
jge
push
repz
out
mov
stos
stos
inc
fisttps
xchg
add
rolb
data16
mov
test
inc
push
cmpsl
or
icebp
mov
xchg
and
mov
js
push
dec
lea
jo
stos
das
dec
shl
stos
leave
xchg
mov
lret
push
mov
test
test
adc
mov
shll
cli
cmc
inc
inc
inc
pop
rclb
aam
or
add
shll
out
pxor
lods
or
lea
out
fnstsw
pop
mov
inc
pop
cwtl
sbb
cmpsl
test
sahf
mov
xchg
cmp
sub
mov
push
sbb
push
in
or
dec
stos
add
sbb
ljmp
mov
xchg
cmp
lcall
popa
and
mov
cld
jne
ss
shlb
movsb
mov
mov
add
dec
mov
or
iret
jbe
inc
and
or
outsl
insb
testl
mov
cmpb
inc
in
push
xor
mov
or
jo
cmc
xor
dec
mov
stos
xor
repnz
rcl
xlat
pop
or
lea
xchg
xorl
arpl
xchg
sbb
mov
mov
mov
stos
inc
inc
mov
inc
sbb
add
xor
push
jg
in
cmp
mov
std
sbb
add
push
push
adcl
movsl
mov
mov
stos
es
repnz
mov
std
mov
je
sarl
into
and
jecxz
mov
mov
jmp
adc
xchg
subb
dec
and
daa
das
outsl
sbb
ja
and
and
stos
adc
mov
dec
dec
mov
or
nop
or
mov
popf
mov
enter
adc
and
arpl
fnstsw
jecxz
dec
xchg
testb
aam
adc
sbb
push
imul
xchg
adc
pop
fidivl
jne
jmp
andb
add
incb
dec
pop
loope
sub
shll
pop
pop
pop
sbbb
pop
or
adc
in
mov
adc
push
sub
ret
or
pop
add
fs
cld
outsl
mov
rcrl
loope
mov
pop
pop
mov
add
sti
add
add
lcall
mov
in
pop
testl
adc
mov
fs
ret
pop
lea
jge
lret
movsl
dec
sub
add
dec
adc
push
push
or
and
les
stos
or
cld
or
pop
and
nop
adc
enter
dec
cmp
cmp
cmp
jo
cld
or
adc
push
inc
in
aaa
mov
roll
idivl
mov
or
push
adc
jecxz
or
aad
or
lock
mov
sarb
inc
add
pop
stos
add
jmp
shl
add
movsl
mov
push
push
cmc
lea
pop
add
inc
jge
je
mov
frstor
cltd
in
popf
cmc
adc
jne
pop
and
and
push
int3
adc
cltd
ficoms
out
inc
and
jbe
mov
inc
enter
cli
xor
add
test
push
inc
jmp
mov
push
pop
into
pop
dec
inc
mov
pop
clc
sbb
test
sub
js
cmp
add
call
fsubr
jno
fadd
pop
cli
repz
xor
or
cmp
je
push
push
sub
arpl
mov
pop
inc
cmpb
and
pop
flds
inc
ss
outsl
outsl
push
movsl
mov
pop
add
aaa
jne
pop
orl
mov
test
pop
or
mov
and
mov
xor
mov
fsub
orl
xor
jnp
push
push
arpl
add
xchg
pop
adc
aam
ss
or
daa
ljmp
xor
imul
les
mov
lods
push
push
test
cmp
xor
enter
fildl
aaa
cmp
push
dec
inc
mov
adc
dec
cmp
test
or
cmp
mov
mov
mov
inc
inc
or
jmp
fistpl
lds
sbb
mov
push
add
testb
sbb
je
or
mov
int3
jne
dec
mov
inc
mov
and
js
or
sub
cltd
mov
pop
enter
sub
push
std
add
pop
and
ret
cmp
sub
xchg
and
in
dec
mov
sbb
js
and
sub
in
test
insl
adc
sbb
mov
add
dec
cs
inc
mov
push
pop
inc
mov
imul
sarb
xchg
jl
aas
sub
sub
loop
test
add
pop
sbb
inc
sub
add
xchg
push
mov
sub
sti
add
lea
dec
mov
sub
popa
loopne
loope
mov
mov
shlb
aad
jno
stos
mov
sub
and
mov
dec
xchg
mov
fwait
sbb
xchg
pop
xchg
xchg
mov
aas
sub
cmp
jae
sub
jbe
inc
or
jne
push
repnz
das
push
clc
mov
pop
add
test
xlat
xor
xchg
or
test
fcomps
or
push
testl
pop
add
add
call
ret
jmp
ds
push
adc
xchg
mov
cmp
in
adc
testb
cmp
add
inc
mov
lods
mov
push
into
sub
dec
dec
push
or
add
push
cmp
jbe
or
or
push
daa
xchg
adc
xchg
dec
lcall
js
scas
mov
outsl
mov
add
movb
pusha
sbb
mov
add
loope
es
inc
inc
sbb
ds
mov
push
or
lea
lea
pop
out
mov
arpl
mov
in
addr16
add
cmpl
lea
andb
imul
rcll
arpl
dec
jl
mov
or
mov
subb
jmp
adcb
cs
push
mov
ud2
movsl
aam
fs
test
mov
sar
sbb
xchg
mov
sub
mov
das
mov
inc
inc
add
jl
push
in
cmp
push
outsl
pop
sub
fdivs
cmp
add
mov
negb
push
sub
addr16
rorb
fcoms
jo
ret
pop
jne
push
data16
rclb
orb
sbb
outsb
cs
dec
add
shrl
mov
push
cwtl
inc
inc
push
inc
xor
pop
inc
xor
mov
lret
adc
inc
sub
dec
rcr
jo
inc
and
pop
inc
sub
hlt
sbb
ret
pop
inc
push
push
lea
lods
mov
pop
pop
inc
or
mov
imul
sbb
loopne
mov
mov
inc
add
push
push
or
cltd
sub
or
sbb
or
mov
aas
or
push
les
inc
cmp
sbb
fisubl
mov
ret
add
dec
pop
xchg
and
push
out
es
xor
lcall
bound
adc
dec
daa
outsb
les
push
add
lret
or
or
cmp
pop
es
insb
sub
rolb
jo
sub
in
sbb
icebp
hlt
sub
ds
sub
idivb
int3
sbb
xorl
mov
mov
gs
sub
push
clc
clc
or
add
sbb
xchg
adc
movsb
mov
adc
out
xchg
insb
sbb
aam
xor
pushw
adc
fsubs
loopne
sbb
adc
or
lea
mov
push
invd
push
mov
test
pop
clc
cmp
fwait
cli
push
cmc
pop
popa
or
mov
add
and
orb
inc
sbb
and
insl
je
fdivr
sub
roll
sub
pop
adc
insl
mov
jg
es
adc
xor
cli
fdivs
std
sub
insl
xor
aaa
xor
adc
pop
mov
out
mov
cmp
jne
sub
pop
call
jne
pop
popa
arpl
mov
not
mov
adc
hlt
mov
movsb
popf
mov
sub
jg
push
jo
or
mov
and
bound
mov
dec
ret
jl
mov
adcl
mov
clc
in
or
jne
jb
addl
push
adc
add
fldt
fimuls
scas
add
sahf
mov
cld
in
jmp
subl
and
int3
xchg
sub
mov
jp
or
adc
pop
sub
jg
sbb
add
aam
push
loope
cmpl
cmp
mov
jbe
mulb
add
and
or
dec
adc
subb
fstps
leave
neg
faddl
pop
or
add
push
fiaddl
dec
int
clc
inc
cmp
aad
les
mov
add
lcall
pop
jecxz
mov
lahf
imull
insb
addps
jno
or
je
cmpsb
call
ja
test
ss
aas
add
cmp
shlb
js
jbe
mov
jb
add
call
jae
sub
movsl
jmp
mov
sbb
add
dec
loopne
sti
sub
lods
les
test
fsubl
scas
jmp
scas
nop
pop
dec
loopne
or
xor
fisttpl
shll
rcll
pop
imul
sub
pop
mov
int3
lret
fdivs
and
repnz
cmpsb
nop
and
sbb
aas
mov
shll
je
lcall
in
in
call
imul
xchg
imul
aam
lea
cmp
mov
lock
fdiv
adc
fdivrs
and
stc
adc
or
or
and
jnp
and
jecxz
adc
push
fucomip
out
lea
fistpll
loope
stc
sub
xor
mov
push
insl
stc
mov
outsl
add
dec
push
mov
xor
sub
mov
stc
outsb
add
add
mov
fisubs
sub
rol
inc
pop
and
push
cmpsb
imul
int
fwait
xor
fists
xor
rcrl
adc
adc
dec
shll
add
scas
cmp
pop
pusha
add
or
mov
mov
dec
xchg
adcl
xchg
adc
mov
les
sbb
ret
ret
sbb
in
adc
pop
push
loope
mov
jmp
fs
add
sbb
mov
mov
mov
mov
mov
dec
add
enter
xor
mov
jle
rcr
xchg
pop
sbb
push
sub
and
sbb
loopne
arpl
jb
rorl
add
std
jne
push
int3
shr
or
xchg
int
dec
cmp
shrb
dec
loopne
pop
data16
mov
push
cmp
test
pop
enter
iret
sbb
or
sub
mov
dec
sbb
jp
scas
push
adc
adc
loopne
push
les
push
enter
sub
mov
fsubs
or
jns
cmp
add
es
adc
inc
xor
mov
adc
addb
push
pop
lcall
or
cmp
or
je
and
cmp
sbb
jecxz
mov
sbb
lahf
cmpsb
das
insb
inc
xchg
nop
xchg
shl
inc
ret
lret
jne
arpl
ret
add
jmp
imul
adc
test
pop
xor
mov
leave
rorl
push
mov
push
push
loop
or
sub
scas
or
ret
push
cli
push
aaa
js
or
xor
fwait
mov
sahf
mov
or
in
ret
cmc
cmp
sbb
mov
inc
hlt
xchg
adc
sarb
sti
cmp
cmp
mov
rorl
je
imul
dec
adc
pop
and
jle
sbb
inc
or
adc
mov
xlat
pop
mov
add
stos
ret
cmp
ja
call
xor
jl
aas
or
mov
fsts
cmp
lods
push
pushf
in
sbb
popf
insl
dec
or
and
lock
and
ror
fnstenv
xchg
xor
les
es
jno
push
and
adc
sub
mov
sbb
push
cmp
sbb
js
das
mov
or
inc
xchg
push
ret
imul
cmp
fistl
inc
pop
dec
xchg
pop
mov
pusha
mov
sub
cmp
mov
sub
cmp
sub
cmp
shr
xor
mov
inc
sub
mov
sub
fs
sahf
repz
cmp
adc
imul
dec
sbb
dec
ds
mov
jnp
loop
imul
mov
aam
sahf
push
cmp
movsl
and
insl
fnsave
push
pop
sub
insb
cmpsl
mov
mov
add
cmp
loope
or
cmp
xor
pop
sbb
jne
or
stc
lcall
push
jmp
or
adc
push
xor
outsb
aas
xor
data16
nop
sarl
enter
push
frstor
jne
or
cs
mov
jno
mov
imul
dec
inc
jmp
push
push
pop
stos
lods
cli
aaa
push
and
fstl
add
dec
adc
dec
jge
pusha
movsl
adcl
add
adc
sbb
add
std
push
or
mov
in
ja
mov
lret
enter
icebp
pop
outsb
mov
or
jg
jle
sub
test
add
add
sub
push
imul
psubw
inc
lock
imul
rcll
adc
out
sbb
sbb
push
add
mov
or
test
add
xchg
std
push
fimuls
ljmp
negb
rorb
lea
push
sar
dec
shrl
icebp
stc
push
outsb
lea
mov
mov
pop
cmp
jg
sub
push
aad
add
or
js
add
mov
mov
pop
loopne
call
jle
dec
pop
jmp
mov
inc
push
push
orl
pop
clc
adc
pop
or
sub
pop
cli
sub
out
ss
inc
sub
arpl
clc
jmp
sub
pop
ret
add
jns
cmp
test
dec
or
adc
repnz
add
mov
sub
push
test
mov
xlat
icebp
leave
or
shlb
push
or
lock
sub
mov
fldcw
cmp
jl
or
jns
mov
pop
cmp
push
lock
je
add
push
stos
pop
out
add
sub
shrb
add
add
hlt
inc
rcl
add
test
fwait
or
shll
lret
inc
sarl
ficoml
leave
and
mov
popa
ret
xor
pop
adc
es
into
pop
push
mov
or
inc
or
int3
sub
hlt
add
iret
pop
xchg
int
inc
add
or
popa
out
std
pop
test
pop
pop
cmp
data16
mov
imul
push
push
ret
mov
inc
mov
mov
lret
or
inc
cmp
mov
pop
pop
inc
mov
or
add
and
fimuls
jne
or
or
pop
dec
orb
adc
mov
cltd
pop
divl
pop
popa
rcrb
pop
sub
loop
rolb
ss
sub
add
add
enter
add
jl
mov
pop
mov
xlat
dec
fsts
dec
adc
fwait
mov
pop
pop
sub
loopne
loope
push
xorb
in
js
sbb
sahf
push
insl
add
mov
outsb
out
or
cmp
pushl
mov
pop
pop
and
retw
pop
cltd
mov
mov
cmp
push
add
push
adc
repnz
mov
loop
je
inc
adc
sti
add
push
push
push
add
cld
pop
pop
in
test
adc
pop
and
or
adc
dec
pushf
adcb
sbb
orb
cmp
cli
loopne
inc
fistps
mov
int3
cmc
pop
jo
or
mov
cmp
bound
adc
inc
sbbb
pop
jb
push
in
cltd
ror
push
push
test
add
cmpsb
add
adc
or
dec
mov
out
mov
jecxz
into
fiaddl
mov
adc
or
mov
movsl
xor
dec
push
push
mov
dec
hlt
cld
add
push
pop
add
fistpll
xchg
mov
add
jmp
add
add
dec
dec
jns
into
clc
xchg
cltd
mov
dec
or
in
das
addb
dec
push
add
lods
pop
test
jecxz
sbb
fcoms
test
sti
add
gs
jl
push
pop
fdiv
mov
ficompl
testl
ficoml
xchg
push
xor
adc
inc
aaa
pushl
and
stos
je
shlb
enter
mov
or
jmp
cmp
jg
adc
add
aaa
mov
mov
push
dec
jns
or
xchg
pop
shlb
dec
xor
fldt
inc
dec
idivb
pop
jl
push
xor
testl
add
mov
sub
adc
add
and
sbb
sub
pop
inc
loope
adc
ret
pop
das
or
or
incl
push
xor
push
lods
mov
adc
pop
loopne
inc
push
dec
xor
adc
out
push
inc
fildl
je
cwtl
pop
adc
push
and
in
popa
or
aam
sub
adc
in
popa
out
fdivl
and
sub
add
enter
pop
fiaddl
dec
or
jle
lods
test
daa
xor
jle
sbb
lods
mov
mov
movsl
sbb
mov
sub
mov
daa
jl
cmpb
jl
jp
push
mov
cmc
incb
xor
incl
jmp
push
movsb
push
xchg
mov
jle
push
jl
push
lcall
hlt
adc
pop
ss
push
inc
mov
movsl
movsl
movsw
sbb
sti
mov
out
jbe
xchg
add
movswl
mov
add
xchg
cmp
inc
push
clc
fadds
mov
into
rorl
and
pusha
pop
popl
out
push
jo
pop
bswap
sub
aas
sbb
test
mov
call
loopne
push
push
shrl
mov
sbb
add
add
shrb
mov
adc
or
mov
int3
loop
js
mov
ss
fmulp
mov
or
lea
mov
jno
inc
add
mov
fbstp
je
adc
iret
dec
dec
or
add
or
fisubs
or
mov
rorb
jle
sub
push
sbb
cli
mov
mov
mov
sbbl
lock
push
add
add
subb
sub
jmp
or
aas
pop
push
or
shll
cmpsb
add
out
hlt
in
in
or
fsubr
outsl
or
fnsave
push
inc
add
outsl
in
pop
and
icebp
jo
xlat
std
into
and
lock
fmuls
clc
add
scas
xor
icebp
outsl
shl
mov
pop
dec
shll
push
jl
test
xor
mov
outsl
dec
xlat
popf
adc
rolb
add
rorb
ds
pusha
lcall
stos
xchg
inc
mov
mov
push
and
je
adc
adc
fildll
pop
mov
push
test
sbbb
cmp
lds
mov
xor
sbb
xchg
xor
jmp
mov
jbe
dec
dec
je
add
stc
ficomps
xlat
inc
add
je
or
push
je
push
pusha
jnp
inc
inc
jecxz
fwait
je
sahf
in
ja
add
xor
jo
daa
rolb
sahf
addr16
sbb
push
fidivl
add
popf
lods
int
insb
add
lock
ror
dec
dec
sbb
roll
push
dec
cmp
je
add
mov
scas
sbb
xor
mov
mov
pop
pop
mov
jo
fdivrs
mov
out
enter
adc
adc
mov
in
sub
and
ret
jne
xchg
andl
xchg
jl
push
scas
mov
into
mov
push
push
jbe
ja
add
loopne
imul
int
sbb
jnp
scas
pop
xor
inc
push
add
inc
mov
hlt
scas
adc
add
mov
add
je
add
fldenv
pop
or
int
push
or
nop
or
inc
cmp
mulb
add
das
clc
cmp
pop
jbe
adc
or
incb
vmread
in
mov
inc
rcrl
add
inc
add
add
dec
inc
insb
shl
lcall
add
jae
push
mov
pop
mov
mov
pop
sub
icebp
popf
and
repz
mov
xor
inc
or
rorb
sub
ljmp
xor
loopne
mov
into
add
mov
aas
out
mov
fbld
loopne
xlat
mov
pop
shl
or
push
add
sub
out
cs
out
in
jle
lock
out
shr
cmp
sbb
pop
mov
sbb
adc
cmp
adc
push
jecxz
inc
and
ljmp
push
push
daa
mov
lea
mov
in
add
sbb
in
ud1
adc
mov
sub
call
fstl
jne
arpl
pop
add
rorl
mov
cmp
adc
mov
test
jae
add
sbb
test
gs
or
pop
data16
or
mov
adc
ss
mov
add
gs
decb
sbb
jne
fsubs
and
or
incl
and
mov
outsl
push
inc
cld
ja
sti
test
sti
xor
cmp
add
imul
jp
push
iret
add
je
push
sub
push
addr16
push
inc
arpl
out
mov
cmp
pop
jmp
cld
jb
xor
mov
lock
push
jle
dec
push
fisttpl
inc
mov
inc
xor
mov
mov
push
add
jle
pop
fimuls
jnp
jg
fisttpl
push
jge
push
pop
movsl
or
popa
push
ss
or
ret
dec
xchg
mov
add
std
inc
out
jge
pop
add
mov
xor
movsl
push
add
loopne
andl
push
jne
sub
test
testb
sbb
dec
sub
jmp
or
mov
add
fdivl
popa
add
add
repz
fs
sbb
xor
jae
mov
cmp
add
pop
jne
addb
pusha
jo
push
vhsubpd
lcall
inc
je
sub
idivl
gs
fbstp
xor
jl
add
jmp
mov
mov
xor
jmp
jno
pop
aad
into
insl
insb
lcall
adc
pop
xchg
out
dec
call
cs
or
enter
pop
jb
ss
fcoms
fiadds
jmp
add
sub
out
rolb
test
push
or
rolb
in
fstpt
ret
push
or
les
mov
aaa
rorb
fistpl
push
cmp
fldcw
jbe
cmpb
jl
or
inc
mov
and
or
xchg
cltd
add
cld
sbb
mov
push
test
inc
ja
arpl
mov
jne
leave
sti
cmp
js
and
loopne
pop
sbb
ret
fsubrl
inc
sbb
sarl
aam
pop
in
pop
pushf
adc
gs
aam
sub
and
in
add
add
jg
pop
cmp
mov
xchg
fwait
jl
lock
cmp
mov
fcmovnb
dec
ret
in
mov
into
dec
jmp
or
add
gs
add
mov
cli
add
pop
jno
mov
fcmovbe
insb
fstpl
adc
mov
cmp
add
imull
cmp
sub
cmpsb
pop
jo
cltd
push
stc
or
or
xlat
aam
adc
mov
enter
cs
inc
and
cmpsb
fsts
and
add
out
call
jmp
pop
sub
mov
sti
out
aas
cmpsb
shlb
loopne
push
movb
jmp
add
pop
mov
cmp
adc
sbb
add
add
mov
in
test
mov
loopne
sub
xchg
fsin
or
adc
cli
sub
pop
jmp
xchg
je
orl
les
jne
push
cmp
xor
adc
mov
addr16
push
fidivrs
mov
sbb
and
mov
iret
pop
adc
push
and
sbb
adc
or
push
cmpsb
mov
dec
lock
loopne
pop
push
cli
imul
testb
in
sbb
or
sar
repnz
cmp
xor
lock
jbe
add
jb
in
sbb
mov
cmp
notb
inc
xor
jge
xor
fsubrl
nop
jmp
adc
adc
jle
pop
test
sub
or
jl
push
adc
sbb
leave
sbb
jne
or
in
sbb
dec
sub
repz
lods
mov
add
cmp
mov
xchg
js
or
addb
mov
mov
mov
sti
outsb
add
inc
xchg
push
or
mov
sbb
inc
mov
rolb
xor
testl
inc
callw
xchg
lea
sub
sub
push
inc
and
adc
mov
push
mov
add
inc
aas
popa
xor
add
xor
push
dec
loop
inc
add
test
addr16
add
add
lock
in
pop
push
pusha
pop
adc
pop
stos
cmp
push
jo
scas
xor
push
cmp
mov
pop
inc
fcoms
inc
leave
pop
inc
push
pop
shll
stos
fcmove
das
push
addr16
test
adc
mov
mov
jg
popa
push
in
dec
in
jne
jp
test
mov
fucom
adc
dec
or
push
cs
xchg
in
inc
sahf
stc
mov
push
xor
and
and
and
cmp
and
subl
xchg
lods
insl
xor
adc
lods
cli
std
mov
sbb
ja
cmp
mov
in
lea
mov
cmpsl
adc
push
movsl
movsl
mov
incl
cmovo
arpl
mov
push
cmp
adc
add
xlat
add
cmp
and
add
rclb
xchg
mov
mov
shlb
nop
dec
or
or
pop
push
sub
sbb
movsl
mov
add
push
sar
adc
dec
push
fnsave
sub
subl
sub
jne
or
mov
or
or
jg
adcl
jle
add
in
dec
test
sbb
jg
push
cmp
mov
arpl
add
fdivrs
sub
mov
movsl
ret
ljmp
dec
sbb
or
push
roll
or
pusha
pop
pop
xchg
in
push
push
fiadds
or
sbb
add
sub
pusha
xor
push
mov
xor
fildl
jmp
inc
loop
fsubp
rclb
sbb
fimuls
mov
gs
in
push
fsubr
shrb
dec
mov
arpl
inc
mov
lret
mov
andl
movsb
or
mov
aam
jg
fsubr
pusha
cmp
scas
mov
xchg
adc
push
hlt
xchg
jp
adc
sub
inc
pusha
orl
add
cmp
lea
sub
cmp
pusha
xchg
orl
mov
add
aaa
scas
add
arpl
and
jnp
cwtl
sbb
or
adcb
pop
jne
push
mov
mov
mov
pusha
adc
fcomp
inc
adc
add
sar
cmp
jle
xchg
pushf
adc
aad
insb
inc
adc
pop
adc
and
sub
sub
sbbb
shlb
stos
aam
pop
jmp
fs
repz
inc
push
or
cwtl
push
sbb
addr16
std
cmp
fcomps
jg
and
mov
dec
mov
and
sbb
fistps
lret
lret
int3
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
fs
arpl
movsl
jl
movsl
mov
and
leave
popf
xchg
sbb
sbb
mov
lock
jle
pop
mov
icebp
iret
and
or
into
iret
add
sub
hlt
xor
ficoml
adcb
and
xor
or
xchg
mov
pop
push
pop
mov
xchg
jns
dec
stos
xchg
loopne
popa
stc
test
sub
mov
mov
push
or
insl
push
fadds
dec
push
cmc
test
push
push
lea
lock
and
or
pop
inc
sub
notb
lock
pop
orb
inc
mov
dec
jae
jne
dec
repz
fldcw
push
daa
push
rolb
xchg
out
je
push
into
clc
adc
pop
and
mov
mov
inc
adc
test
pop
das
dec
jge
add
rorb
mov
sbb
sbb
cmp
scas
adc
shlb
popa
or
mov
movl
or
jne
sbb
les
push
xchg
loope
imul
mov
incl
subl
add
pushl
lea
aam
test
cli
adc
ret
inc
push
fwait
mov
fnstcw
cld
push
jp
cmp
jmp
dec
rolb
add
jmp
cmp
rorb
fs
xchg
movl
and
cli
or
andl
pop
je
fwait
adc
push
mov
cmp
jbe
xchg
mov
pop
fsubrs
mov
sbb
not
and
cltd
mov
stos
roll
icebp
xchg
pop
lock
push
and
rcl
push
mov
push
popf
cmp
push
outsb
adc
sbb
add
xlat
adc
add
xchg
stos
add
or
add
dec
ret
push
sub
pop
je
adc
adc
sbb
lds
xchg
cwtl
rcr
xchg
adc
mov
xor
sldt
or
sub
inc
mov
mulb
lahf
dec
pop
fprem
pusha
ljmp
lock
lret
sub
les
push
je
adc
addr16
pop
insb
xchg
cmp
sub
cwtl
testl
popf
and
sbb
outsl
xor
push
das
adc
inc
cld
dec
stos
add
and
testb
inc
or
enter
leave
jb
add
and
outsb
xor
inc
adc
jne
pop
pop
and
dec
or
and
adc
add
rorb
int3
mov
cmp
and
add
mov
mov
push
push
loope
xor
scas
push
add
mov
test
xchg
push
pop
mov
shr
cli
and
sub
or
add
fistps
cmp
xor
mov
add
loope
mov
push
out
mov
int3
push
mov
daa
inc
push
or
rolb
sbb
add
and
out
or
insb
push
add
add
ds
adc
adc
push
push
lods
loop
xchg
jne
inc
adc
or
sahf
jne
mov
pop
mov
sbb
leave
out
cmp
adc
sbb
and
mov
rol
and
ret
pop
mov
jge
mov
adc
or
jmp
and
scas
add
xor
ret
mov
adc
push
sub
jl
push
sarl
jmp
xchg
inc
outsl
mov
mov
enter
or
push
outsl
data16
popa
jb
pop
dec
imul
imul
inc
jne
pop
outsb
je
gs
sti
pushl
imul
dec
outsb
arpl
fisttps
std
in
push
outsb
pop
jae
popa
insb
insb
pop
push
and
sbb
outsl
lcall
or
imul
push
jb
es
popa
je
aam
jb
rorl
jne
mov
mov
dec
xor
lods
movsb
add
xorl
dec
rorl
and
or
sarb
pusha
inc
pop
dec
dec
mov
and
jne
lcall
add
dec
sarb
sbb
adc
push
enter
jae
and
xor
testb
add
out
adc
adc
and
add
or
add
scas
inc
adc
add
or
or
imul
imul
lods
data16
std
mov
add
and
jo
jb
addr16
xor
out
add
and
imul
fs
les
inc
neg
jnp
push
pop
imul
ja
jl
mov
adc
scas
dec
shll
xor
xor
shll
push
arpl
cmp
mov
and
xor
add
xor
xor
add
and
jo
sti
ficoms
xchg
pushl
jmp
aas
cmpsb
imul
xlat
popf
roll
add
add
lcall
sbb
imul
jecxz
and
ret
push
lahf
or
xchg
mov
cmpsl
stos
sbb
add
or
jg
in
push
incl
xor
pop
pop
inc
dec
dec
inc
inc
in
decl
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
dec
push
push
inc
push
push
push
std
xchg
addr16
sysret
cwtl
mov
iret
jne
addb
enter
daa
das
in
sub
aaa
xor
std
shr
in
ja
in
roll
aas
pop
mov
or
lock
xor
push
adc
sub
dec
jae
sahf
cmc
jae
lods
sub
out
xchg
prefetch
out
dec
fwait
and
push
dec
mov
negb
cmp
sub
add
leave
jnp
in
leave
mov
pop
mov
jb
inc
imul
sbb
pop
or
ret
push
push
adc
add
dec
inc
xchg
insl
mov
xchg
dec
dec
dec
adc
in
divb
xor
cmp
sub
insb
je
xchg
insl
fildl
imul
in
out
aaa
daa
aaa
outsb
outsl
je
add
ljmp
mov
and
insb
sub
add
jae
cmp
mov
lods
lock
jo
and
jb
and
shrl
movsl
arpl
and
sub
xor
sub
pop
leave
pop
jnp
das
pop
push
fsub
pop
ret
idivl
pop
pusha
fldt
fs
sub
insl
xor
inc
and
gs
inc
mov
push
and
cmp
je
mov
imul
push
or
pop
xor
mov
mov
mov
add
add
addr16
test
xor
dec
out
or
adc
insl
jae
cs
inc
sub
jno
jne
iret
inc
clc
sub
xor
shrw
add
out
daa
sbbl
and
jae
out
mulb
inc
sub
and
dec
imul
ja
inc
push
and
push
mov
dec
pushf
aam
addr16
fdivrl
imul
ds
sahf
loopne
outsl
pop
mov
add
dec
rclb
push
adcl
inc
cmp
dec
dec
add
arpl
inc
dec
add
test
add
push
gs
xchg
dec
outsl
jbe
mov
fldt
add
je
popa
addb
mov
jne
adc
jle
fwait
les
mov
addr16
outsl
js
pop
pop
fidivl
mov
test
dec
out
sbb
push
dec
inc
dec
pop
dec
sbb
xchg
pop
push
scas
lret
iret
sub
xchg
add
add
add
add
insl
into
push
mov
addl
pop
push
fldl
or
adcb
adc
mov
push
scas
into
inc
add
loop
sbb
call
xchg
subb
add
dec
jae
je
decl
inc
insb
popa
jae
add
and
cmp
inc
inc
insb
insb
xchg
insl
cmp
jae
push
add
jle
lahf
adc
jb
dec
inc
dec
popa
mov
push
pop
or
xchg
push
je
dec
add
addb
lock
add
mov
sar
add
mov
inc
mov
jb
push
push
jg
leave
leave
dec
add
add
fdiv
fidivrs
adc
and
add
pop
shl
pop
xor
outsl
pop
add
mov
push
mov
out
add
pop
dec
das
and
fxch
iret
scas
dec
lcall
lods
add
imul
pop
js
cmpsl
add
aas
dec
jae
aad
add
cmp
fildll
push
jne
ds
push
sbb
mov
outsb
divb
aaa
adc
sbb
and
or
stc
ja
imul
adc
adc
clc
push
mov
pop
push
jae
cmp
mov
xor
popf
cmp
fwait
or
imul
push
ds
inc
outsl
insl
insl
push
adc
inc
imul
adc
jl
out
inc
dec
and
add
jae,pt
inc
cmc
push
cld
xor
inc
jnp
inc
dec
dec
sub
xor
and
jae
gs
sub
pop
pop
arpl
popa
add
sub
push
jb
push
jns
shrb
sub
jae
arpl
fnsave
jo
mov
jb
imul
cmp
lock
jle
push
push
push
lods
or
dec
inc
inc
dec
push
pop
icebp
and
in
xor
cmpsl
insl
jae
je
jae
sbb
lahf
mov
mov
push
push
push
dec
pop
sti
popa
and
inc
push
ds
jo
lods
xor
imul
aad
fldl
je
add
sub
add
pop
pop
inc
and
pop
xor
and
je
xor
and
in
orb
dec
std
jne
daa
fdivs
push
or
push
mov
adc
or
or
insb
mov
sbb
dec
jne
bound
pop
inc
pop
bound
cmp
push
into
push
sub
shrb
fsubrs
or
fwait
lds
or
popa
cwtl
mov
or
pop
xchg
fldl
cwtl
arpl
and
in
mov
outsl
and
pop
cltd
mov
jnp
mov
sti
arpl
pop
cmp
cmp
sarl
pusha
pop
and
dec
jns
xor
sub
pop
psubusb
fsubrs
arpl
and
or
movsb
or
push
inc
jo
mov
push
push
push
jns
insl
and
std
jbe
lea
or
and
fcomps
ss
add
inc
aaa
sub
gs
or
dec
ss
jae
frstor
jmp
jle
int3
popa
jns
cmp
scas
push
push
es
mov
jnp
bound
int3
adc
jne
jns
inc
jbe
fwait
jae,pn
xchg
dec
addr16
jb
rol
pusha
das
lea
cmpl
sub
and
outsb
and
addb
mov
push
add
or
push
jnp
fs
inc
mov
imul
sbb
pop
sub
js
jp
outsl
scas
xchg
jg
call
dec
add
ret
inc
and
inc
xor
das
push
pusha
lods
jmp
repz
dec
add
pop
sub
rcrl
gs
ud2
add
je
outsb
in
imul
inc
mov
addr16
arpl
arpl
fcoms
nop
or
data16
popa
cmp
lret
fwait
rdmsr
xor
mov
lcall
orb
es
or
imul
mov
xchg
add
in
or
ud0
push
leave
and
mov
popa
lret
dec
sub
xor
or
dec
cmp
adc
inc
rorb
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
ljmp
fsubrs
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwtl
push
ljmp
mov
xchg
cmp
daa
mov
sti
movsl
and
xchg
sub
incl
mov
cmpl
lods
xor
out
test
pop
or
insl
xor
daa
jg
pushl
sar
push
mov
dec
dec
jno
dec
sbb
sti
push
test
cmp
ljmp
cmpb
lahf
popf
sti
testb
sti
icebp
cmpsb
jns
hlt
idivb
loope
jmp
in
int
call
ret
pushl
xchg
insl
inc
xor
dec
add
scas
push
lds
stos
push
andb
sbb
lds
test
sub
popf
mov
js
dec
push
mov
mov
mov
movsb
idiv
decl
jge
or
lret
or
stos
xchg
js
mov
jl
nop
adc
jne
fstl
call
mov
adc
sti
shlb
inc
lahf
pop
or
pop
sarl
push
pushaw
fcompl
xor
dec
or
push
fadds
movsl
lods
and
fs
std
daa
movsl
dec
loopne
mov
pushl
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
add
lcall
cltd
inc
inc
push
nop
sub
xchg
out
mov
push
add
call
ds
in
cmp
repz
notl
xor
loop
repz
pop
lock
call
lret
ds
xchg
dec
addl
shr
mov
sti
fsubr
loopne
mov
pop
std
int
sbb
pusha
aaa
dec
xor
leave
jle
jbe
jmp
dec
ja
call
add
loope
lds
xchg
sub
mov
cmp
inc
cmp
call
pop
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdivs
sub
fwait
aaa
aas
fwait
imul
adc
pop
dec
in
xchg
or
lock
push
cli
mov
call
adc
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
insl
lods
clc
xlat
and
loop
ljmp
push
push
xlat
add
jg
jmp
fisubrl
and
fst
loop
add
mov
test
ds
mov
cmpsl
stos
jge
mov
out
stos
int3
sarb
pusha
mov
fwait
jno
negl
pop
inc
jne
sbb
xor
sub
pushl
jno
cltd
nop
mov
lea
imull
leave
push
inc
out
dec
repnz
dec
jmp
or
pushf
ror
and
jnp
pusha
inc
jg
inc
jb
jg
pop
shll
xchg
push
inc
insb
xchg
xor
and
lds
dec
fwait
adc
pop
adc
lcall
sbb
insl
fcomps
and
pop
push
sbb
sqrtps
push
xor
popf
call
mov
xchg
and
int
and
jmp
sub
jns
test
rcll
ljmp
int3
mov
push
lods
adc
ror
imul
jl
out
fcmovnb
lret
mov
out
lock
jmp
ljmp
movsl
lock
mov
daa
stc
les
mov
lea
pushl
test
mov
mov
lods
call
push
or
ljmp
push
data16
fidivrl
mov
mov
divl
xlat
add
add
loope
mov
scas
imul
imul
lret
scas
imul
sbb
add
pop
shll
les
ds
mov
add
add
lock
shlb
popl
jmp
xor
test
fildll
rorl
scas
imul
mov
cmpsb
pop
mov
pop
scas
sti
aaa
add
loop
mov
mov
flds
xchg
outsl
add
rcrl
jno
pop
xorl
pop
imul
xlat
xlat
out
add
pop
scas
pop
out
lods
inc
mov
xlat
in
adc
dec
xlat
xor
mov
pop
mov
xor
or
xlat
add
sbb
hlt
push
pop
add
jne
andl
add
add
push
fmuls
ja
sub
jne
data16
mov
adc
sbb
pop
push
push
pop
xlat
xor
sahf
pop
stos
add
ja
pop
in
and
jae
push
mov
add
add
mov
sbb
add
and
ret
fstpt
aas
add
push
scas
add
stos
jmp
aad
arpl
out
sub
cmpsb
cmp
add
add
mov
jne
rorl
xchg
testb
push
pop
xlat
pop
ja
lret
or
mov
imul
int3
xchg
pop
imul
pop
ja
add
rclb
pop
ss
dec
add
cltd
add
mov
mov
pop
cmpsb
lret
add
cmc
xor
aas
add
scas
cmp
adc
test
jmp
add
mov
and
pop
shll
dec
daa
popa
add
sti
adc
fstpt
or
out
mov
cli
or
sub
shll
pop
sub
xor
dec
push
scas
cmp
mov
mov
cmpsl
push
sbb
add
out
mov
daa
das
pusha
jle
jne
mov
psllq
add
jg
jmp
sbb
or
jbe
xor
scas
pop
into
or
xor
divl
jmp
adc
xchg
ss
xlat
pop
and
iret
cmp
pop
cs
pop
repz
add
pop
cmpl
imul
jne
jge
in
mov
inc
pop
or
lods
cmpsb
jmp
pop
sub
xor
repnz
clc
pop
out
shlb
xchg
add
scas
imul
frstor
insb
mov
pop
jnp
or
pushf
lock
inc
pop
inc
pop
add
cmp
cmpsl
or
mov
outsb
outsl
adc
or
test
cmp
mov
ret
xor
leave
roll
add
jne
mov
pop
out
add
add
push
mov
pushf
imul
loope
fstl
insb
ja
pop
sarl
adc
push
pop
add
lcall
pop
jbe
push
popl
mov
pop
aaa
dec
jecxz
adc
pop
pop
fiadds
sbb
jae
mov
inc
xlat
mov
pop
mov
rorb
jno
imul
out
add
fisttpll
cmp
add
add
mov
pop
cmp
pop
cmp
jne
incl
sub
add
aas
pop
and
adc
outsl
xchg
add
cmp
pop
fists
adc
jmp
sbb
or
testl
add
cmp
fwait
mov
fiaddl
push
cmpsb
jmp
flds
push
pop
je
aaa
pop
shl
xor
mov
test
cltd
stos
roll
scas
pop
add
insb
jnp
sbb
xor
pop
movsl
add
cwtl
jae
cmp
iret
or
lret
pcmpeqd
pop
insb
aas
fiadds
cmpsb
imul
stos
gs
xchg
lret
push
add
test
add
or
xchg
lret
rcll
push
jae
pop
stos
mov
jmp
jmp
aad
aad
push
imul
scas
arpl
sarb
pop
and
or
pop
adc
imul
sbb
jbe
inc
stos
and
pusha
ja
and
add
fisubrl
es
add
je
outsl
fs
bound
insl
push
jle
fbld
and
mov
je
outsl
daa
add
jo
dec
divb
pop
jns
bound
jae
push
fldenv
bound
and
xchg
mov
pushf
push
add
xchg
pop
nop
addb
pusha
push
adc
jecxz
mov
and
pshufw
data16
sbb
jbe
pop
jo
xor
fsubrs
stos
or
and
lods
insl
das
jnp
pop
mov
and
in
adcb
inc
pop
ret
add
rorl
das
ficomps
or
pusha
inc
or
push
add
push
jae
push
pusha
sbbl
and
push
or
or
enter
add
orb
push
aaa
enter
pop
sbb
dec
push
cmp
xor
or
push
adc
and
and
lock
enter
adc
orl
jecxz
sub
xor
and
or
andl
leave
and
push
sbb
pop
pop
sbb
push
sbb
push
sbb
insb
sbb
sub
or
nop
inc
push
mov
inc
push
sbb
push
adc
sbb
jb
sbb
les
bound
fs
inc
and
addb
inc
push
sbb
pop
sbb
sbb
jp
sbb
aam
push
fs
inc
sub
mov
lcall
rclb
jbe
push
sbb
clts
sbb
lods
push
sbb
xchg
fs
inc
push
or
nop
inc
push
sbb
fs
pop
push
sbb
cs
nop
rcrl
dec
cld
inc
push
popa
dec
call
adc
pushl
nop
inc
xchg
and
sbb
addl
pop
inc
xchg
xchg
jns
xchg
shrb
sbb
mov
mov
repnz
inc
ss
add
dec
push
sbb
jne
lret
sbb
stos
push
sbb
test
push
sbb
sbb
dec
jge
fiaddl
sbb
sub
inc
or
dec
push
cli
push
adc
fs
push
ret
jae
sbb
arpl
fs
inc
push
cmpsb
add
inc
out
fs
push
sbb
xchg
jnp
dec
push
sbb
imul
or
sbb
mulb
fs
pop
ja
dec
push
sbb
into
addr16
inc
push
sbb
scas
pop
dec
push
sbb
out
dec
push
sbb
sahf
dec
push
sbb
fmulp
push
sbb
das
mov
xchg
lahf
pop
dec
decb
mov
loope
xchg
or
inc
shll
icebp
leave
or
inc
leave
test
xor
inc
stc
lds
xchg
or
in
and
mov
push
xor
push
lods
in
push
xor
inc
leave
mov
or
mov
push
xchg
rcll
or
repz
leave
push
xor
stos
jmp
xchg
or
sti
xchg
or
inc
cmpsl
inc
leave
push
xor
xchg
xlat
xor
push
xor
xchg
or
inc
out
lahf
inc
leave
push
xor
mov
jge
add
setp
cmp
fisttps
add
jns
push
inc
pop
inc
aas
sarl
pop
add
jae
pop
and
into
sahf
cmpsb
pop
push
add
fs
inc
sbbl
cmp
push
popa
in
nop
xchg
pusha
add
xor
cmp
xor
adc
insb
and
add
xor
imul
jae
imul
sbb
jne
jae
jb
bound
daa
dec
mov
inc
and
and
xchg
adc
or
jns
adc
adcl
mov
outsl
fldcw
cmp
rep
add
add
pmaxsw
jmp
lcall
ljmp
cwtl
push
pusha
pop
int
sbb
dec
add
jae
les
lea
mov
mov
xchg
or
mov
dec
dec
or
or
add
sbb
adc
jnp
push
cmp
iret
push
adc
or
adc
pop
and
cmovno
push
sbb
push
pop
push
pop
push
sbb
pop
pop
jnp
pop
insl
gs
xchg
and
pusha
fists
addl
sbbb
test
xchg
sub
fsubs
dec
push
ret
xlat
or
pop
add
add
test
inc
incl
lock
and
sub
sbb
inc
sbb
mov
pop
lock
sub
int
pop
inc
cmp
and
sbb
xchg
adc
addl
adc
add
and
push
xchg
lock
cmp
fidivrl
lods
roll
out
inc
cwtl
add
addl
mulb
add
pusha
cmpb
das
cmpsb
out
iret
pop
mov
cld
inc
jle
and
fisubl
flds
das
cld
fisttps
iret
mov
in
call
jnp
jle
or
in
ficompl
pop
pop
fisubrl
xor
fcomp
loopne
cmp
jle
shlb
dec
rorl
sbb
and
add
and
nop
xchg
xchg
sbbl
sbbb
mov
or
xor
xor
or
or
sbb
mov
lcall
adc
sub
cmpsb
xor
cld
sbb
aam
shll
sbb
xor
shll
sub
sbb
ja
dec
rorl
or
pop
clc
sbb
hlt
mul
add
push
push
push
jne
das
lret
inc
aas
insb
mov
lret
mov
add
clc
sbb
jmp
jnp
mov
repz
dec
insl
add
lcall
ja
mov
lret
cmpsb
imul
dec
mov
je
cld
sarb
fdivrs
xor
jo
inc
pop
imul
pmulhuw
lret
out
jg
add
in
pop
jb
add
or
in
sahf
push
ret
mov
adc
aas
stc
and
mov
leave
sbb
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
pushl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
pushl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
fldl
xchg
and
and
mov
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
icebp
aas
call
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
pushl
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
jmp
pop
sarl
jl
mov
das
lea
mov
inc
and
movsl
jmp
jmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
adc
mov
call
cmp
decl
in
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
sub
enter
fmuls
jb
add
add
push
push
mov
add
enter
rcll
push
mov
sub
imul
insb
daa
rolb
nop
and
xchg
out
enter
add
cld
sub
aas
add
push
cvttps2pi
and
sbb
out
xor
add
sub
pop
cwtl
call
mov
pusha
iret
inc
cmpsl
add
jg
push
pop
push
add
stos
addb
sub
rcrb
xchg
inc
push
dec
outsl
fs
gs
data16
js
adc
inc
js
or
jb
sub
lahf
inc
cwtl
sbb
gs
fadds
adc
daa
imul
dec
jae
popa
fs
sub
fisttpll
fidivs
push
outsb
push
gs
mov
fs
pop
mull
sti
lahf
push
pshufw
sbb
dec
dec
push
or
or
cmp
inc
jnp
add
roll
push
pop
push
or
push
neg
add
das
sbb
lds
dec
inc
push
or
addr16
or
popa
jo
push
push
shrb
fisubrs
stos
cwtl
sub
adc
sub
addps
mov
push
in
adc
daa
inc
or
or
outsl
jns
push
rorl
inc
insb
leave
ss
add
dec
jge
mov
test
cmp
push
outsl
lret
pusha
ret
push
sbb
adc
mov
dec
mov
mov
ret
add
sbb
dec
shrd
insb
aas
ja
or
adc
lods
fistpl
push
ss
in
cmp
js
adc
movsl
arpl
push
and
sub
add
sbb
and
dec
inc
je
ss
jne
jae
adc
push
xor
sbb
add
pop
add
add
or
xor
push
gs
push
cmpsb
data16
fisubl
pop
adc
dec
xchg
jno
jp
imul
lds
or
push
popa
je
mov
mov
adc
data16
nopl
je
jns
mov
mov
addl
xchg
lods
adc
push
stc
shl
inc
outsl
jb
fs
xchg
subl
xchg
lcall
fs
jne
jmp
rclb
int
add
insb
fsts
or
inc
mov
push
push
push
outsl
addr16
and
outsl
movsb
aaa
inc
fs
das
inc
add
fcomps
lock
and
xchg
or
rorb
jb
push
outsl
mov
andb
shl
xor
fmulp
lock
cwtl
push
popa
prefetch
or
fstps
adc
je
jbe
cwtl
pusha
fldenv
arpl
addr16
dec
cmp
mov
and
fisubrl
and
push
add
in
ret
jne
and
push
and
data16
sbb
scas
dec
jnp
ja
push
lahf
jne
or
push
mov
jns
adc
sbb
xor
or
popf
and
fildll
insb
outsb
fs
push
sbb
loope
int
pop
sarb
add
ret
arpl
add
or
cmp
dec
dec
inc
mov
test
sbb
aas
rcrl
pop
shlb
iretw
mov
call
lret
lock
bound
cmp
add
mov
xor
inc
mov
movsl
test
sbb
xor
inc
dec
pushf
or
unpckhps
inc
mov
sbb
push
and
mov
xchg
int
cmp
push
enter
xor
data16
push
sub
dec
inc
lcall
jnp
mov
push
push
outsl
push
adc
push
dec
jb
fisttpll
mov
mov
fwait
cmovnp
jae
add
idivb
imul
push
mov
dec
negl
or
test
adc
jmp
push
subb
fimuls
push
add
jne
jmp
lods
pushf
int
push
push
adc
dec
addr16
pusha
and
aad
mov
inc
sub
sbb
sub
test
arpl
and
jo
pop
adc
int
xor
jne
hlt
call
inc
pushf
das
jle
xor
dec
ja
add
insb
xchg
inc
ds
mov
dec
arpl
mov
fs
sbb
mov
jmp
push
mov
cmp
push
mov
push
into
xchg
mov
js
insl
mov
out
cmp
dec
xor
ret
lods
sbb
mov
inc
insb
aas
icebp
sbb
sbb
xor
xchg
cmp
add
lods
add
and
stos
inc
loopne
shl
add
mov
sbb
jae
inc
rol
fiaddl
fildll
mov
pop
js
icebp
inc
adc
dec
js
push
movsl
push
int
pop
jnp
cmpsb
outsb
mov
fimull
mov
adc
push
xchg
outsb
ret
insb
mulb
and
xor
popl
ja
jno
mov
jecxz
ret
scas
jnp
orb
insl
ret
loopne
shll
fld
mov
jns
bound
orb
jb
std
sahf
pop
mov
and
sbb
insb
or
int
and
adc
adc
cmp
sub
sbb
xor
sub
mov
or
inc
mull
rclb
and
outsb
sbb
add
push
dec
sub
mov
xorb
add
gs
ret
xlat
jae
adc
push
push
mov
adc
jb
mov
movsl
xor
or
das
sbb
cmc
sbb
lea
insb
sub
xor
jl
enter
call
fwait
add
push
fstpt
enter
imul
mov
inc
jp
dec
aam
cmp
cmc
xor
inc
sbb
or
pop
stos
add
mov
ret
add
or
push
fldl
or
mov
mov
or
and
cld
sbbl
fistpl
push
add
mov
and
cmp
push
cmpsl
cmp
sub
push
je,pn
xlat
sub
and
mulb
lods
cwtl
mov
dec
lahf
pop
pusha
cs
add
sti
xor
add
inc
cs
popf
out
adc
pusha
pop
daa
xor
pusha
fwait
rorb
or
lods
lods
fs
dec
mov
loopne
inc
and
movsb
int
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
