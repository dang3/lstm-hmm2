mov
add
or
insb
inc
jnp
inc
add
inc
mov
push
add
jne
push
lret
in
popa
imul
insl
xchg
outsb
mov
mov
je
push
pusha
jae
xchg
lret
in
je
jne
jbe
ja
js
jb
pop
jae
imul
cmpsb
imul
cmpsb
imul
mov
jns
sub
scas
adc
add
divb
paddw
insb
mov
mov
jo
pop
or
mov
add
xor
mov
mov
push
pop
pushf
pop
push
xchg
and
rcl
fcmovnbe
or
mov
sub
sub
dec
jb
mov
mov
xor
cmp
int3
sub
leave
and
enter
cmp
out
pop
cmc
add
daa
fwait
cmpsb
pop
sar
sub
xor
daa
mov
leave
into
insl
inc
mov
sbb
and
das
add
jae
insb
lds
enter
xor
ss
pushf
mov
fdiv
enter
ja
mov
pop
jbe
fcoms
pop
pop
lret
je
insl
lcall
scas
or
cs
lret
ret
shlb
shll
scas
roll
into
rcl
dec
dec
inc
out
dec
cs
aas
add
xlat
fdivs
cltd
fildl
xchg
cmp
ljmp
pusha
adc
cs
jbe
or
pop
xor
ds
xchg
dec
xor
sub
stos
sub
insb
lcall
fisubl
pop
push
rcrb
mov
lcall
jecxz
int
imul
in
fstpt
in
add
out
cmpsb
pop
ss
add
call
inc
mov
and
enter
insb
call
adc
enter
and
and
iret
out
adc
adc
inc
inc
add
adc
js
in
popf
adc
adc
insb
cmp
iret
out
adc
movsb
adc
adc
cmp
jl
push
adc
dec
in
adc
fs
jl
xor
adc
mov
fdivs
adc
inc
cmp
mov
lahf
iret
out
in
adc
dec
adc
adc
adc
mov
cld
cwtl
adc
repnz
adc
enter
adc
sbb
and
adcb
sbb
lock
cmp
xchg
jmp
enter
adc
add
jae
test
push
adc
enter
in
adc
or
leave
enter
lods
sbb
stc
into
and
das
les
cmp
dec
push
add
pop
pop
push
jg
out
xor
pop
cmp
out
dec
mov
arpl
jl
lcall
cmp
int3
loope
mov
je
pop
rcll
mov
scas
test
inc
lods
dec
jbe
xor
ret
push
push
les
dec
mov
or
mov
add
xor
or
stos
rcll
add
dec
add
insl
xor
or
cld
incl
dec
outsb
je
insb
outsb
gs
inc
js
insb
gs
sbb
ss
incl
and
ljmp
aaa
ret
pop
sub
leave
scas
imul
incl
sbb
pop
pushf
pop
dec
push
xor
pop
adc
push
jl
push
in
addr16
dec
sbb
jae
out
pushf
adc
cltd
mov
sbb
fistpll
cmovne
add
test
dec
sti
add
xchg
mov
push
lods
pushl
rcrl
dec
xor
xor
bound
arpl
es
jae
fs
insb
sub
mov
or
xor
push
xlat
xor
jmp
je
add
xor
js
jg
test
push
arpl
xor
add
add
daa
add
or
xor
int3
and
sub
jge
xor
pop
dec
pop
inc
sbb
pop
mov
push
fisttpl
mov
dec
or
pop
lret
cltd
jo
stc
aas
jnp
pop
pushf
std
out
arpl
xchg
pop
add
insb
pop
cmp
push
mov
add
cmp
dec
pop
add
popl
fmuls
aas
push
subl
ret
sbb
jnp
hlt
clc
dec
mov
mov
into
jae
adc
mov
sub
xlat
cmp
arpl
outsl
aaa
push
push
mov
movl
push
jbe
dec
inc
or
and
xchg
mov
mov
decl
cmp
jg
iret
push
es
dec
test
inc
xor
dec
lods
in
add
add
push
pop
dec
cwtl
inc
add
or
cmp
cmp
dec
add
imul
dec
adc
or
aaa
std
dec
xor
imul
and
rolb
xor
add
add
outsl
inc
outsl
fs
inc
imul
dec
sbb
add
xor
sub
xor
xor
or
add
mov
std
inc
add
sub
and
or
mov
and
aas
les
insb
xor
push
insb
gs
aad
xor
push
add
aas
rcr
sbbb
dec
or
shlb
push
mov
add
mov
imul
bound
push
cmp
mov
push
and
jns
mov
add
push
inc
add
repnz
add
pop
pusha
adc
sbb
and
push
dec
gs
inc
in
push
sbb
insb
bound
inc
enter
bound
inc
nop
jo
and
sbb
pushf
adc
filds
add
push
xor
mov
xchg
je
fnstenv
fwait
or
mov
cmp
cmp
inc
imul
pop
push
dec
adc
inc
or
or
lahf
pushaw
add
std
pop
je
cvtps2pi
xor
or
xor
fisttpl
xor
popa
add
cmp
sbb
jge
add
xlat
insl
outsb
jae
pop
outsb
fwait
push
jb
or
jae
and
adc
arpl
cltd
inc
mov
push
in
jnp
jne
loopew
aas
add
outsl
pusha
inc
or
out
ja
mov
bndldx
mov
sub
lock
xchg
pop
inc
aad
pusha
xor
jne
mov
pop
add
push
ljmp
push
daa
insl
cmp
insb
notb
scas
jae
pop
and
push
or
pop
inc
dec
sbb
cmovne
sub
pop
mov
lods
loop
sahf
mov
cmp
cwtl
sub
inc
push
xchg
scas
sub
cmpsl
push
loopne
xor
pop
add
jmp
mov
mov
add
pop
mov
inc
inc
push
insl
add
fs
dec
xorl
push
pop
pop
and
jo
arpl
mov
outsl
ret
inc
jae
stos
xchg
bound
rcl
inc
mov
fwait
stos
xor
dec
and
je
pop
xlat
or
mov
loop
lret
sub
xorb
cmp
mov
cmp
pop
mov
arpl
addps
push
push
out
adc
adc
int
sub
outsb
mov
imul
adc
jg
or
cmp
dec
sbbl
or
fistl
jne
pop
inc
pop
frstor
iret
jae
mov
or
or
adc
shlb
sbb
push
pop
adc
test
insl
outsb
loope
popf
aaa
sub
or
and
fnsave
jns
pop
pop
daa
pusha
sub
outsl
and
dec
lock
lahf
push
add
popa
dec
shll
adc
rcrw
imul
jno
call
jae
insl
inc
cmp
mov
inc
pusha
mov
cltd
test
nop
repz
or
xlat
add
push
adc
inc
sub
sbb
sub
sbbl
or
and
js
sbb
add
dec
push
inc
ja
push
push
dec
insb
outsb
adc
iretw
inc
arpl
ljmp
insb
xchg
call
dec
sub
jp
out
or
dec
roll
negl
in
mov
add
add
mov
rorl
arpl
int3
push
pushf
sub
xchg
adc
ja
jmp
xor
xchg
aam
and
adc
inc
add
aas
outsl
subl
and
xor
pop
mov
inc
or
or
lcall
or
scas
jmp
dec
pop
inc
sbb
inc
test
xchg
xchg
inc
inc
xlat
add
pop
addr16
jne
mov
aad
filds
aad
je
xchg
dec
daa
add
mov
popa
lea
and
mov
loope
adc
jns
xor
aam
xor
adc
dec
and
outsb
movsb
out
insl
adc
lahf
and
adc
mov
imul
jg
imul
xor
push
add
inc
mov
fldl
cmp
fidivs
inc
lods
cmp
sbb
pop
test
or
sub
push
pusha
xchg
lds
jecxz
fld
sub
inc
inc
sub
das
hlt
jmp
and
xor
adc
mov
or
or
verw
cmp
or
mov
lret
or
cmp
add
cmp
aas
arpl
sbb
ret
cmp
pop
xor
xor
or
cmp
enter
aaa
xor
and
add
cmp
mov
mov
sub
das
ss
fldcw
xor
xor
sbb
or
dec
ret
repz
icebp
add
sub
sbb
enter
xchg
and
push
inc
repnz
push
leave
pop
and
aaa
pop
daa
or
and
ret
sbb
mov
pop
mov
inc
jmp
call
dec
ret
xlat
mov
inc
cwtl
inc
dec
mov
ljmp
inc
sbb
add
dec
rcll
cmp
imul
add
jg
ret
add
hlt
ret
arpl
lea
and
dec
push
aas
loope
sti
test
lds
and
leave
cltd
lods
add
rolb
add
repz
leave
adc
cltd
dec
adc
or
push
enter
in
jae
nop
xchg
sub
add
or
pop
dec
test
and
mov
data16
sbb
sub
dec
mov
add
mov
pop
inc
xchg
mov
xor
pusha
pop
pusha
push
and
scas
test
imul
inc
psrlw
movsl
jl
popa
popa
push
mov
pop
or
xor
jmp
aaa
sbb
push
cmpl
loope
push
cltd
mov
jne
sbb
or
or
aam
mov
jae
xchg
pop
xor
pusha
mov
movsb
jno
flds
and
cmp
dec
lock
adc
jmp
dec
ret
adc
gs
aam
xchg
or
xor
mov
or
mov
movsb
xchg
idivl
add
push
nop
xchg
xchg
sub
imul
mov
dec
jae
test
dec
fwait
addr16
mov
push
aas
cmp
add
cmpsl
and
pop
jae
cmp
je
push
and
adc
fidivrs
push
jne
inc
inc
or
add
dec
aad
lret
xorl
cmpsl
inc
mov
jg
add
or
jmp
dec
and
sbb
inc
sti
ficoml
mov
dec
insl
mov
lea
inc
emms
iret
jb
xchg
sub
inc
dec
dec
pop
xor
push
sbb
pop
xor
andl
loope
and
add
add
push
subb
gs
adc
dec
sbb
in
cmpsl
arpl
dec
sbb
or
jns
adc
push
xor
add
xchg
adc
mov
xchg
add
or
sbb
popa
outsl
mov
fxch
ja
xchg
mov
in
cmpl
maskmovq
idivl
call
pop
inc
dec
mov
and
or
add
daa
sub
sub
dec
shr
and
movsl
xchg
add
and
stc
ret
subb
lds
adc
popa
ret
add
and
push
andb
jge
movsl
or
in
aas
and
loopne
mov
add
mov
popa
call
push
add
and
loopne
aad
insl
xchg
loope
es
jecxz
bound
add
or
dec
pusha
push
mov
mov
clc
xor
shll
call
sub
sbb
push
insl
jae
aam
rcl
jno
jae
aas
js
or
sarl
sbb
jae
adc
cmpl
and
gs
jne
xlat
shlb
mov
dec
cmp
push
imul
inc
xor
inc
or
je
fstl
xor
add
adc
stos
mov
cmpl
lods
ja
test
imul
xchg
add
out
adc
pop
xchg
pop
int
add
adc
out
je
xor
ret
xchg
dec
sub
jecxz,pn
dec
adc
dec
inc
lods
loope,pn
fistl
xor
es
pop
xchg
adc
rcll
pop
push
loopne
inc
adc
push
pop
add
jns
loope
xor
add
popf
sbbl
adc
add
push
loope
pop
jge
sub
jno
insb
sub
sbb
add
mov
push
scas
addr16
adc
dec
daa
push
add
loopne
pop
and
arpl
jns
leave
ds
ja
pop
add
pop
cmpsb
xchg
insl
popa
mov
jne
jne
inc
mov
or
daa
fsubl
xor
dec
xor
cmp
inc
pop
xor
inc
cmp
pusha
inc
inc
or
fldenv
sub
insb
popa
or
sbb
push
daa
sub
pop
scas
add
push
and
add
je
pop
pop
dec
cmpb
jnp
push
in
and
sub
notl
xchg
adc
dec
neg
jb
cmpsb
movsb
jecxz
cs
sbb
sbb
jg
add
inc
ss
dec
dec
or
jbe
popa
dec
outsb
inc
jae
jg
jg
jb
push
cmp
je
xor
jb
push
outsb
insb
mov
stos
in
arpl
repz
outsl
dec
push
popa
jb
fs
outsl
popa
fs
gs
sub
or
cmovb
outsl
insb
push
dec
jne
insb
and
gs
je
pop
cmp
fldt
cmp
push
inc
popa
cltd
movzwl
or
dec
stos
mov
adc
pop
add
in
loopne
pop
aaa
jno
imul
fistl
imul
outsb
jae
aaa
mov
imul
loope
ret
fcompl
popa
js
pop
js
cmp
cmp
dec
dec
inc
in
leave
movsw
inc
lahf
mov
fs
aas
in
lahf
insb
ret
cmovl
gs
gs
jge
jae
pusha
adc
xor
add
sub
ds
add
add
jg
lret
test
mov
add
repz
outsl
jo
in
fs
lock
jo
pop
or
add
ret
notl
push
ds
ret
push
xor
jne
popa
dec
fadds
xor
jnp
test
sbbb
ja
jns
cld
gs
dec
imul
xchg
int
mov
pop
xor
test
outsl
data16
push
rclb
adc
decl
sbb
mov
jle
xsaves
jle
pop
add
and
cmpsl
imul
or
imul
and
daa
inc
jne
mov
data16
pushl
stc
jl
into
fwait
push
xchg
data16
jnp
push
jb
adc
or
shrb
lods
xlat
push
jb
jno
mov
test
pop
sub
mov
mov
push
lahf
ret
add
and
pop
dec
outsb
faddl
adc
inc
dec
ds
stc
rolb
or
iret
imul
pusha
push
add
push
inc
jmp
push
divb
adc
mov
mov
rorl
popa
push
iret
je
add
test
adc
jne,pn
push
loope
jns
add
jecxz
popa
inc
das
dec
pop
out
mov
insb
add
xor
adcb
push
dec
mov
mov
aaa
sbb
inc
add
add
orb
lds
and
fs
xor
aas
mov
add
mov
popa
pop
mov
push
push
test
test
xchg
inc
andl
mov
inc
and
mov
push
aas
pop
dec
xor
mov
jp
shrl
inc
and
inc
ljmp
dec
sbb
and
pop
push
sti
pushf
and
outsl
cmpsl
leave
mov
dec
or
inc
and
outsl
lods
inc
data16
xor
pop
pop
aad
imul
leave
leave
data16
and
arpl
stc
xor
add
ljmp
mov
shrb
out
mov
icebp
imul
inc
add
dec
lds
mov
dec
or
inc
ss
dec
gs
int3
add
adcb
jne
xchg
push
and
sub
pop
pop
pop
push
ja
add
mov
adc
test
push
cmp
add
sti
push
xchg
add
adc
xorb
mov
sub
push
sahf
mov
dec
outsl
int
adc
add
mov
movl
daa
fcmovnu
push
lock
xor
jecxz
fistpll
test
inc
mov
lea
mov
or
inc
popf
cltd
in
fldcw
lea
in
push
mov
mov
push
pop
fs
out
ja
pusha
adc
add
adc
dec
pop
adc
xor
dec
xor
mov
jge
outsb
fiadds
mov
mov
test
neg
jle
inc
add
push
push
or
pop
and
sub
enter
xor
or
xchg
adc
push
dec
imul
add
popf
mov
push
insb
xchg
test
add
mov
xor
push
cmc
and
xchg
pushf
and
shlb
fcoms
jns
mov
lea
adc
xchg
enter
cmp
sbbl
adc
cmc
push
xor
cmc
pop
and
xchg
pop
and
aam
test
mov
sbb
dec
or
sub
jb
and
xor
xchg
orb
jp
mov
cmc
dec
push
lods
push
xchg
or
inc
and
or
jae
xchg
and
enter
or
mov
int
jl
jmp
shlb
dec
sahf
and
add
mov
or
xchg
dec
push
cltd
lods
scas
lods
push
mov
or
adc
mov
or
pop
or
dec
push
xchg
push
shr
dec
or
or
cld
incb
cmp
nop
add
imul
pop
lcall
push
and
adc
or
xor
xor
xor
in
dec
sbb
xchg
and
inc
es
es
jno
or
shlb
dec
loopne
leave
sbb
dec
loop
or
cmp
pop
push
adc
sub
inc
leave
dec
vmread
or
dec
pop
adc
test
addl
add
loop
dec
lea
stos
or
sbb
or
add
or
inc
or
dec
or
inc
push
cmp
cld
incb
add
inc
push
nop
or
and
mov
jb
jl
mov
adc
fs
or
xchg
xor
stos
inc
das
adc
or
add
pusha
sub
mov
adc
insb
cs
es
leave
in
stos
ret
adc
pushf
adc
ret
leave
loope
pushf
in
push
cmp
cs
adc
test
mov
push
and
sbb
into
fistps
xchg
movswl
test
roll
jge
je
fmul
cmp
ror
push
pop
pop
sbb
xor
in
xor
sahf
rorb
dec
sbb
adc
sbb
data16
sbb
sbb
pop
and
push
jno
xlat
in
popl
lret
and
push
mov
mov
pop
js
add
cmp
mov
nop
fs
enter
pop
and
xchg
loope
xchg
xchg
mov
test
sub
call
jge
jmp
cwtl
insl
jmp
add
shlb
pushf
sub
repnz
and
fs
ret
sub
or
xchg
out
fdivs
mov
rcrl
test
clc
or
push
mov
pop
dec
movsb
sbb
test
sbb
mov
hlt
jg
or
in
ret
pop
enter
or
in
enter
ficomps
sbb
fdivr
cmp
and
sarb
mov
add
mov
mov
mov
add
fs
cmp
sub
fs
add
dec
enter
aam
mov
enter
xchg
test
enter
inc
xor
lock
push
xor
mov
daa
jl
pop
sbb
sub
mov
in
fcomp
xor
cmp
push
dec
mov
push
test
fadd
add
pop
pusha
adc
inc
jbe
jge
or
or
dec
int3
sti
cmp
xchg
adcb
mov
push
xor
fnstenv
int
cwtl
lods
mov
xor
fwait
lcall
movsl
mov
sub
and
negb
fdivs
mov
lcall
xchg
add
or
std
jo
js
push
push
xchg
es
std
fsubp
andl
sbb
push
nop
xchg
int
jge
lcall
lcall
push
sahf
pushf
pop
and
push
popf
jb
pop
or
cmp
ja
jb
mov
fnstenv
mov
or
inc
pop
pusha
repnz
in
cmp
daa
repz
add
je
dec
aaa
sbb
mov
adcl
or
xchg
pop
repnz
sub
enter
lcall
cmp
inc
fstps
xor
pushf
lods
xor
inc
les
leave
adc
mov
loope
leave
mov
mov
test
cmp
jnp
inc
in
incl
in
pushf
sbb
hlt
mov
push
jb
and
push
jnp
push
mov
insl
sbb
inc
repnz
push
cmc
test
cmc
jmp
enter
and
inc
mov
lods
mov
in
xchg
and
mov
fdivs
pusha
xchg
mov
sub
xchg
mov
cmp
cmp
dec
push
jb
stos
mov
mov
xchg
xchg
dec
sbb
nop
push
les
subb
popl
cmp
cmp
mov
lcall
push
xor
adc
mov
jo
add
adc
push
popf
xor
push
test
mov
push
nop
xor
jo
inc
sub
mov
add
inc
sbb
inc
dec
adc
or
clc
dec
xchg
loopne
or
xorl
add
fcoms
fcoml
in
xchg
mov
sub
or
aam
dec
jecxz
add
dec
dec
jae
jns
and
push
cmp
adc
imul
repnz
add
and
pop
pop
mov
sbb
xchg
aam
cmp
sbb
and
inc
xor
movsb
add
dec
sub
sahf
sbb
mov
lea
adc
insb
jl
cmp
push
add
inc
xor
xchg
lea
arpl
inc
enter
push
sub
dec
sahf
and
in
and
movsb
push
nop
pop
test
xor
scas
push
inc
loopne
movsb
mov
outsl
test
rcll
insb
mov
sub
adc
xor
dec
int
inc
sbb
or
popl
or
sbb
or
pop
and
cmp
cltd
lea
cmp
in
sbb
xchg
rcll
addl
test
incb
and
pusha
inc
roll
cmp
enter
push
jp
mov
adc
mov
dec
sub
aas
jnp
cmp
push
les
cmp
push
das
and
mov
sub
int3
add
xchg
xchg
mulb
inc
rclb
push
enter
nop
mulb
int3
leave
inc
adc
pop
aas
sub
je
adc
xor
in
sbb
repnz
jp
loopne
dec
xchg
dec
add
add
enter
cltd
int3
loop
mov
leave
xor
cltd
dec
es
adc
fs
or
sbb
xor
dec
adc
adc
mov
mov
or
test
movsl
dec
into
push
test
mov
fidivs
add
push
mov
in
push
sub
push
push
orb
adc
rclb
gs
adcb
and
and
inc
dec
xor
and
xchg
mov
enter
cmp
pop
push
test
fucomi
pop
adc
insb
mov
push
jmp
xchg
push
jmp
push
insb
inc
fwait
fs
pop
out
mov
fmull
test
or
adc
cmp
test
mov
in
in
push
cld
push
dec
popf
fs
and
cmp
roll
or
fs
ds
mov
enter
inc
movsb
xor
fistpl
leave
xchg
fucomip
adcb
or
in
sub
rolb
push
push
lock
enter
popa
mov
lcall
dec
xchg
push
sub
mov
dec
or
adc
xor
mov
ficompl
call
add
sbb
test
fwait
stos
sbb
push
gs
inc
cmp
adc
pop
popa
sahf
outsl
and
insl
push
insb
test
addl
add
mov
imul
out
fldt
xchg
in
sbbl
xor
jo
xchg
xchg
mov
or
add
movsb
mov
adc
sub
or
add
dec
faddl
hlt
jl
xchg
add
lods
stos
and
mov
or
enter
sub
mov
xor
mov
or
insb
add
in
mov
xor
add
adc
lock
and
int
xor
mov
daa
inc
and
faddl
int3
mov
lods
pushf
mov
xor
imulb
pop
cmp
aam
xor
sbb
mov
orl
cmp
push
cmp
ja
inc
movsb
dec
cmp
rclb
or
dec
lock
push
ss
icebp
imul
mov
inc
mov
push
dec
dec
ss
int3
or
das
stos
aaa
mov
pushf
mov
add
xchg
add
add
pop
lahf
je
push
fs
dec
push
mov
sub
add
xor
icebp
nop
sbb
jbe
ss
sbb
out
jle
sbb
je
mov
xchg
aam
jne
cwtl
adc
add
add
int
les
arpl
inc
or
js
mov
push
test
popa
push
in
mov
cli
xor
and
mov
and
push
mov
or
shrb
in
iret
and
or
and
out
jns
jmp
pop
mov
imul
jne
int3
adc
and
lods
movsb
xorl
in
ret
push
fwait
xor
mov
and
xor
xor
adc
scas
insb
add
jb
pop
adc
lret
out
xchg
lods
dec
or
mov
outsb
push
arpl
fucomi
pop
sbb
mov
cwtl
or
neg
sbb
inc
add
mov
pop
aas
stos
lock
push
enter
sub
jnp
insb
cwtl
inc
sbb
adc
rcrb
fisttpll
push
sbb
push
sbb
pushf
movsl
lret
pop
xchg
add
or
add
mov
addb
outsb
mov
sub
sarb
sbb
enter
ds
mov
pop
in
popa
pushf
jg
jmp
sub
or
jmp
xchg
mov
dec
lock
xchg
je
add
leave
out
inc
pushf
ss
inc
pop
xor
pop
push
repz
fisttpl
fmuls
dec
fsubr
xchg
jno
add
loopne
rcl
inc
enter
enter
sub
sbb
pop
or
xchg
adc
push
aas
pop
test
insb
nop
xchg
add
test
xor
mov
int3
push
mov
mov
outsb
mov
jb
rolb
in
cmp
xchg
outsb
or
push
xor
cwtl
cmp
xor
sahf
test
pushf
xor
inc
inc
mov
cmp
js
sub
add
enter
je
jb
mull
add
mov
enter
add
and
push
mull
ret
enter
pop
push
push
push
cmc
xchg
in
inc
push
orb
dec
js
fs
shll
movsb
addr16
stos
mov
jl
xor
lret
test
test
sbb
sbb
bnd
lea
or
sbb
sahf
fmuls
dec
dec
and
scas
mov
rorl
aam
mov
mov
mov
in
test
outsb
aaa
fwait
sahf
adc
mov
enter
sarb
jnp
pushf
int3
sbb
lcall
mov
xchg
xchg
lods
adc
or
stos
nop
dec
and
nop
lahf
adc
ljmp
les
jb
js
mov
mov
inc
push
aas
insl
push
mov
shrl
scas
or
xchg
leave
mov
add
xchg
pop
pop
or
sti
int3
xor
mov
cs
sbb
dec
dec
insb
or
or
xchg
or
aam
in
cmpb
jg
jb
dec
rclb
sbb
add
adc
pop
sbb
inc
jnp
jae
filds
push
pop
fsubs
dec
mov
push
stos
pushf
orb
sub
rcll
and
mov
push
push
jne
fimuls
divb
repz
inc
jae
mov
add
mov
or
aam
adc
rcll
cwtl
push
loopne
in
call
cmp
aas
in
pushf
add
or
pusha
and
and
insb
push
mov
sbb
sbb
xchg
pop
aad
or
std
into
testb
push
xor
frstor
and
fstps
pop
enter
outsb
add
fs
push
addb
pushf
leave
inc
bound
xor
icebp
xchg
or
lea
push
ror
add
inc
mov
inc
ds
sub
dec
dec
cmp
push
push
addb
insb
lcall
inc
dec
fists
into
ret
inc
sbb
xor
nop
push
sahf
insb
rcrl
sti
sub
stc
outsb
push
fsubrs
imul
and
shrb
bound
sbb
je
xor
jae
mov
nop
test
lea
push
mov
cwtl
rorw
or
mov
or
mov
adc
sbb
inc
mov
pushf
fs
mov
int
inc
xlat
lods
mov
adc
and
or
out
cmp
cmp
mov
pusha
or
adc
dec
pusha
xor
icebp
add
xor
outsl
test
or
pop
outsl
push
test
sbb
loop
add
jmp
pop
mov
push
or
mov
mov
mov
mov
bound
js
es
rsqrtps
loop
loop
daa
jne
mov
push
cmp
outsl
xchg
mov
inc
mov
loopne
jmp
movl
sahf
adc
pusha
adc
pop
xchg
push
xor
push
inc
cmp
fwait
jnp
adc
inc
and
dec
jae
rcll
movsb
jnp
mov
and
enter
cwtl
sub
fdivl
mov
hlt
mov
into
pop
or
fdivrs
dec
test
sub
push
test
insl
ss
push
fdivrs
jb
and
lea
and
scas
adcb
push
orb
fsubp
lret
and
repnz
aam
in
and
mov
mov
push
cmp
popa
mov
rcrl
int3
es
xor
pop
sbb
sub
or
xor
adc
gs
and
sbb
pop
sbb
sarb
neg
dec
test
xchg
cmpb
add
shlb
cmp
add
adc
mov
fnsave
pop
jp
adc
push
mov
push
dec
call
or
and
jnp
lock
lea
add
iret
inc
scas
es
jae
mov
dec
cmpsl
dec
jb
and
mov
cmp
int3
cld
sar
aam
enter
iret
xchg
sbb
fistpl
add
in
jl
andl
aas
sub
mov
or
cs
sub
rcr
in
inc
fsub
in
loopne
or
xor
pop
sbb
es
dec
and
pushf
insb
je
xor
xor
or
and
ss
and
sbb
cmp
xor
pusha
xchg
imul
arpl
mov
inc
sub
push
faddl
cli
sub
sahf
dec
adc
mov
mov
sub
sbb
jp
sub
lcall
mov
push
lods
fs
aam
add
leave
sub
mov
cmp
or
lret
enter
inc
lea
mov
xchg
sbb
test
push
sbb
in
dec
loopne
or
stc
jae
fildl
inc
mov
push
sbbb
sub
vmread
popa
push
mov
ret
js
sbb
inc
pushfw
sub
loopne
inc
filds
push
js
xchg
and
popf
xchg
pop
or
mov
insb
pop
mov
adcl
cmp
xor
pop
mov
xchg
shl
xchg
push
cwtl
mov
xor
lock
and
cmc
jmp
mov
and
js
pop
fldenv
mov
and
mov
add
leave
scas
insl
mov
push
push
lea
sbb
push
adc
popf
xchg
fsubrl
popa
pop
ret
xor
lods
or
and
mov
xchg
mov
jo
cmp
or
or
jns
enter
sub
dec
or
outsl
es
test
lods
mov
mov
repnz
dec
xlat
scas
add
push
inc
nop
out
cs
push
xchg
inc
add
pop
jb
inc
cltd
add
push
and
mov
mov
xchg
outsb
jo
int3
and
pop
push
dec
dec
cmp
into
out
xor
sub
scas
and
mov
inc
sbb
cmpsl
lods
push
mov
cmp
test
sub
pusha
push
pushf
pop
sbb
stos
sub
xor
and
mov
xchg
sarb
cs
pop
cmp
mov
add
bound
jl
inc
es
jo
dec
jl
add
dec
or
rclb
mov
inc
ds
decl
adc
test
or
push
and
rcrb
inc
test
mov
and
ret
or
nop
popl
enter
imul
sbb
mov
test
mov
and
jns
pop
or
pop
leave
mov
fs
inc
dec
fs
add
sbb
inc
push
pop
nop
add
clc
sub
js
dec
fs
add
push
dec
loopne
cld
add
shrl
es
popa
cs
out
test
push
enter
aam
adc
loopne
stos
jb
and
outsl
fcomps
lret
mov
add
movsb
xchg
mov
inc
mov
mov
add
push
inc
xor
mov
dec
int3
roll
and
adc
sbb
stos
fadd
mov
or
mov
push
sbb
sbb
mov
pop
dec
cs
adc
inc
mov
dec
xchg
pop
loop
dec
cmp
rcrb
gs
push
and
dec
aam
mov
popf
mov
adc
push
fcom
frstor
push
loopne
mov
mov
or
xorb
leave
repz
jge
lea
add
ret
and
add
add
arpl
loopne
or
cmpsl
and
les
fldcw
pop
jle
push
adc
roll
mov
loop
xlat
jg
xchg
pop
or
push
inc
out
adc
adc
sbb
sbb
addb
flds
outsl
nop
insb
xchg
ja
mov
les
mov
adc
jns
decb
fsubr
jns
and
aam
js
sbb
sbb
add
jae
add
insl
push
icebp
push
push
call
sbb
add
add
sub
or
mov
or
call
or
fs
add
sub
movsb
test
jge
int3
push
push
cmp
in
pop
xor
or
mov
mov
fstpt
push
xor
add
adc
popf
cs
and
push
mov
pop
jb
cmp
mov
push
cwtl
je
in
or
or
dec
dec
pop
call
jb
cmp
dec
arpl
and
jne
mov
xlat
sub
add
popf
mov
mov
cmp
hlt
jne
push
add
rclb
pop
popa
lock
or
xor
push
test
aad
subb
adc
and
sbb
adc
repnz
cmpsl
sbb
add
incb
stos
inc
jb
pop
js
sbb
jns
push
sbb
and
iret
pop
jl
pop
sbb
cwtl
or
in
je
dec
enter
add
sbbb
loopne
cmpsl
idivl
loopne
mov
jmp
fs
xchg
push
or
or
lea
or
cmp
faddl
dec
or
loope
punpckhbw
leave
xchg
push
xor
fsubs
xchg
dec
js
stos
sbb
lods
cmp
das
or
push
adc
into
push
adc
pop
mov
in
xchg
lahf
loop
sbb
xlat
push
nop
and
push
stc
and
and
or
pop
out
dec
jae
xor
and
daa
add
xor
push
push
rcll
xor
pop
pop
xor
hlt
inc
aam
pusha
push
jbe
mov
mov
fucomi
adc
mov
jo
add
cmp
or
leave
test
push
push
pop
xor
or
ret
dec
sbb
push
addb
inc
jns
mov
or
inc
call
fs
and
dec
mov
add
jle
pop
fdivs
jle
sbb
dec
and
xchg
mov
sarl
cld
pop
mov
movsb
popa
insb
dec
sbb
mov
adc
push
dec
incl
bound
adc
adcb
pop
mov
push
inc
daa
sbb
add
add
addb
in
inc
mov
pusha
cs
repnz
pusha
or
leave
dec
sbb
lods
dec
push
xchg
push
mov
insb
dec
and
pop
loopne
adc
push
lahf
pusha
repz
leave
xchg
adc
sbb
call
push
test
mov
lods
pusha
loope
dec
pop
mov
adcl
mov
jns
adc
xchg
popa
add
dec
leave
es
gs
insb
mov
data16
sub
and
pop
push
enter
bound
sbb
inc
jle
lock
or
sahf
movsb
arpl
add
adc
sbb
jl
mov
int3
bound
call
lea
and
xchg
sbb
xchg
or
fsubs
or
lods
hlt
pusha
nop
pushf
test
mov
popa
xchg
sbb
and
sub
js
ss
and
adc
xchg
and
xchg
add
push
sbb
rcl
mov
aam
sub
push
adc
fwait
pop
push
sub
and
int3
sbb
mov
lods
dec
ret
jmp
mov
and
nop
outsl
add
sbb
enter
aaa
mov
pop
or
sub
xor
enter
enter
pop
nop
mov
or
in
mov
mov
inc
lcall
and
or
or
dec
push
cmp
push
imul
push
sbb
add
push
cmp
pop
mov
xchg
call
xor
loope
mov
pop
xchg
or
push
lret
lods
and
inc
push
cmp
test
add
cmp
sbb
or
sbb
js
enter
sub
sub
push
sbbb
les
mov
push
and
imul
pop
popa
mov
addr16
enter
mov
push
leave
mov
mov
sub
and
mov
pushf
pop
inc
sub
and
inc
in
cwtl
sub
or
lret
xor
xchg
rolb
mov
ljmp
mov
cmp
dec
test
pusha
jo
and
sub
push
lret
add
pop
fnstenv
or
push
sahf
add
out
test
add
xchg
movsl
pop
dec
aas
enter
inc
dec
arpl
popa
fs
data16
popa
outsb
sbb
add
xor
add
xor
cmp
addb
cmp
or
add
test
add
aas
fmuls
jbe
imul
xchg
enter
adc
push
jmp
incl
add
popa
das
adc
mov
inc
out
or
rolb
cmp
in
call
call
dec
outsb
arpl
jnp
xor
push
inc
inc
movsl
add
and
jg
inc
xchg
inc
sar
add
xchg
rorb
or
outsb
scas
js
sti
imul
mov
into
cld
mov
dec
push
pop
push
dec
dec
dec
pop
pusha
push
adc
sub
push
arpl
dec
movsb
sarb
imul
andl
outsl
outsb
xorl
jno
sub
popa
pusha
push
xor
lea
sbb
mov
lcall
lret
jno
je
push
jne
jnp
add
movsb
jb
popa
arpl
insl
fldt
inc
js
dec
addr16
pop
add
jb
movl
inc
rorb
pushf
int
mov
xchg
xor
inc
push
pop
jp
adc
jmp
fisttpl
lods
pop
ret
adc
or
xchg
test
pop
shlb
adc
icebp
mov
arpl
push
adc
and
pop
add
add
fnstenv
push
je,pn
adc
sbb
data16
mov
sub
inc
shlb
or
xchg
in
sub
cmpsb
out
shrb
pusha
adc
xchg
sub
outsl
mov
mov
adc
push
insl
jne
cmp
xor
add
das
fs
arpl
or
push
test
add
add
das
dec
into
push
add
aas
add
add
add
or
pop
push
cmp
add
push
ss
aaa
add
add
and
fyl2xp1
insl
pop
cmpsb
xchg
pop
add
add
pop
pop
mov
aaa
jmp
adc
cmpsl
adcb
iret
add
jle
inc
xor
mov
mov
daa
or
je
add
nop
lock
loope
nop
cwtl
cli
pusha
cs
or
or
and
ss
cld
shrb
jae
arpl
daa
stos
jle
xor
inc
adc
loope
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
