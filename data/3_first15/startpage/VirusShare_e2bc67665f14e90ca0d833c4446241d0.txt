std
pushl
rol
push
mov
call
xor
mov
pop
ret
test
jne
sub
aas
sti
fildll
add
add
shlb
icebp
mov
mov
add
xor
jg
pushl
ret
add
add
add
cld
dec
es
je
and
decl
fucomip
jo
push
je
jmp
lea
sub
ret
or
cmp
roll
add
loopne
cmp
push
movl
add
or
push
sub
pop
add
mov
sub
outsl
inc
add
jne
pushl
add
add
mov
pop
lea
push
lea
or
das
clc
fildl
ret
movsb
dec
cmp
pop
add
jle
sub
push
dec
push
jb
je
arpl
imul
in
imul
add
movb
push
clc
mov
sti
cmpsl
mov
mov
add
test
jle
add
fbstp
or
push
shl
inc
add
mov
or
mov
pushl
push
xlat
popa
add
mov
or
mov
mov
idiv
test
jne
mov
and
mov
push
enter
shl
int3
cmpsb
nop
repnz
and
pop
add
cmp
add
adc
fnstenv
pop
comiss
mov
push
sub
sbb
lock
sub
add
cmp
nop
dec
and
test
jne
add
leave
je
cmpb
add
leave
jne
cmpb
lahf
sbb
test
cmp
jne
or
and
repz
or
sbb
call
jne
sub
cmp
mov
cs
sarb
idivl
in
shl
push
je
mov
inc
jle
inc
push
rcrl
add
aam
leave
sahf
lret
les
cmpsl
repz
sbb
or
cmpsb
sbb
testb
or
rep
and
push
mov
pop
sahf
jge
cmp
dec
sub
xchg
daa
fcomip
dec
hlt
mov
push
add
cltd
cs
cmp
or
cld
xor
xor
push
jmp
imul
cmp
mov
or
xor
popf
lcall
and
cli
pop
push
inc
call
and
pop
mov
adc
mov
add
repnz
shr
pop
push
pop
aam
movsl
add
rcll
insb
in
jo
call
inc
push
push
mov
pop
push
push
jecxz
mov
mov
add
jnp
sar
imul
jmp
mov
cmp
xchg
or
pop
ds
sti
pop
ret
pop
popa
sub
hlt
jbe
test
mov
leave
ja
or
add
add
jo
push
pop
and
xchg
pop
push
mov
xor
push
jo
rcrb
sete
cmp
ds
mov
xor
call
pop
movaps
add
lds
sub
jae
clc
push
dec
adc
mov
je
pop
adc
ret
fistl
aas
xor
test
xchg
pop
in
idivb
or
cmp
sub
js
outsb
jns
mov
pushf
push
jbe
add
add
push
sbb
xor
adc
in
jnp
imul
ja
nop
pop
je
call
or
adc
push
cmpsl
cmp
popa
adc
pop
pop
adc
jne
inc
jns
lret
lock
mov
cmp
mov
dec
nop
in
sub
push
adc
nop
call
push
xchg
cld
ss
add
insl
dec
mov
hlt
in
pop
in
pop
cmpsl
xor
add
and
in
or
adc
add
ret
nop
and
mov
or
xchg
lea
or
cld
hlt
pop
fmuls
movsb
clc
mov
pop
movsb
inc
push
xchg
sub
add
leave
inc
ret
add
xchg
mov
mov
enter
adcb
repz
mov
pusha
orb
loopne
or
call
lods
andb
lea
sub
xchg
or
pop
mov
or
or
xorb
mov
push
je
jge
inc
cmp
mov
lds
loop
imul
jge
mov
mov
or
sbb
cld
fistpll
insl
hlt
add
push
clc
stc
inc
mov
enter
popa
and
lock
roll
aaa
or
adc
enter
and
movsb
sbb
in
and
mov
test
call
sbb
pop
mov
movsl
stos
add
inc
hlt
jmp
ja
jnp
pop
adc
xchg
cld
pop
mov
lock
add
enter
stos
cmp
lcall
or
push
sbb
ja
in
xor
adc
add
push
jnp
xchg
fstpt
loopne
inc
loopne
fadds
pop
in
or
xor
jnp
or
and
push
push
mov
cmp
stc
jno
dec
aam
cmpsb
sbb
pop
xchg
rcrb
loope
mov
pop
int3
add
add
push
lods
rcrb
pop
xchg
mov
and
icebp
popl
js
faddl
arpl
nop
jmp
inc
lcall
shlb
pusha
mov
adc
enter
movsb
and
jo
and
sub
in
inc
idivb
add
rolb
shlb
cmpb
and
inc
adc
add
push
sti
lock
stos
add
inc
and
subl
subps
sub
sub
jno
sbb
test
ret
push
pop
enter
pop
repnz
test
pop
xor
xor
inc
or
lock
mov
jne
in
adc
pop
das
or
adcb
ret
push
cmc
lock
and
inc
movsl
pop
xor
adc
arpl
and
xor
mov
push
add
mov
xlat
sub
sbb
adc
test
fildll
or
dec
or
mov
jnp
xor
pop
ljmp
outsb
daa
in
mov
loopne
je
in
sub
or
hlt
mov
in
push
imul
popa
mov
stos
mov
sbb
out
lea
push
lock
inc
inc
xchg
test
add
scas
sarl
mov
roll
in
jmp
ss
pop
shll
add
dec
sbb
cmp
shll
xchg
cld
xchg
jb
adc
pop
mov
rep
arpl
pop
or
sbb
xor
out
add
test
call
or
push
mov
push
cmp
jg
and
sub
mov
dec
jns
add
pop
mov
sarl
fmuls
add
ljmp
mov
js
inc
mov
jg
add
sbb
adc
dec
call
cltd
aam
fadds
ret
ss
mov
inc
mov
xor
xorb
and
push
adc
cmpsl
bswap
in
pop
pop
pop
push
inc
and
adc
inc
sub
inc
fnstenv
cmp
cld
adcb
adc
pop
push
dec
jne
shlb
imul
or
lds
cld
jae
sbb
mov
add
fmull
push
pop
and
arpl
ret
sub
jae
dec
cmpb
out
mov
aas
xchg
bound
enter
ret
and
jl
xchg
adc
test
lcall
add
add
or
add
lahf
out
or
mov
insb
sbb
add
lods
add
je
sbb
test
mov
adc
gs
loope
les
in
push
test
repnz
xor
in
add
pop
shrb
lock
incl
xor
push
int3
lods
add
adc
and
add
cmp
add
push
push
cmp
and
stc
and
bound
and
jmp
or
add
add
std
xchg
or
sub
movb
hlt
xor
inc
stos
and
mov
or
and
sbb
and
loope
or
mov
add
sub
fwait
inc
pusha
test
add
shlb
and
add
add
push
inc
and
cmp
adc
mov
and
jae
lcall
and
and
lds
push
arpl
or
pop
ljmp
pop
xor
stc
or
mov
jecxz
mov
and
sub
or
cli
or
shlb
jmpw
stc
lcall
nop
popa
cmp
add
sub
add
xor
sti
and
imul
call
sub
xchg
leave
in
nop
mov
rclb
add
xchg
and
jp
pop
inc
adc
sbb
nop
push
in
js
or
jo
and
shll
adc
pop
sub
fadd
push
out
sub
pop
ret
popa
mov
or
push
and
cmp
sub
push
call
sbb
jnp
loopne
xchg
xor
xsha256
cmpsb
shrl
add
push
add
ret
aas
pop
add
repz
add
bound
add
adc
sub
cmp
fs
cmp
xor
mov
cld
mov
mov
push
add
imul
xchg
mov
cmc
add
and
or
sub
movsl
test
insb
push
inc
add
push
add
and
fidivrl
frstor
fldl
faddl
push
in
test
iret
adc
ret
dec
mov
les
aad
leave
in
and
adc
pop
in
sbb
ror
push
in
add
mov
loopne
push
imul
inc
jecxz
aas
mov
dec
mov
jge
movl
cltd
mov
inc
lds
xchg
icebp
cmp
je
movsl
hlt
cmpsl
jnp
lods
into
or
xchg
idivb
cmp
sub
movsb
in
jge
movsb
push
dec
scas
push
push
jne
add
push
fcomps
jae
cmpl
mov
xlat
inc
inc
iret
jno
adc
mov
dec
popl
lock
rolb
xchg
negb
cwtl
xorl
lods
add
mov
aas
xchg
fildl
xchg
fisubl
cwtl
addb
cmp
mov
mov
fdivr
fcoml
xchg
and
mov
mov
add
jae
xchg
loopne
aas
je
xor
mov
mov
mov
xor
lea
nop
inc
push
adc
inc
sub
dec
xchg
lods
sbb
mov
push
add
and
repnz
ds
sbb
call
loopne
sti
pushf
cmp
mov
stos
ud0
hlt
xor
cwtl
aam
mov
aam
int3
in
in
add
inc
shrb
out
sarb
add
mov
push
or
cmpsb
or
pushf
repz
push
xor
adc
mov
inc
mov
fidivs
fstpl
imul
pop
popf
insb
and
sub
test
je
fchs
fcompl
sbb
sbb
inc
pop
add
adc
jbe
sbb
inc
pushf
pushl
inc
sub
xlat
push
jl
or
add
add
or
lock
jo
adcb
lock
dec
adc
test
dec
fcoms
fwait
mov
adc
pop
mov
add
inc
stc
add
scas
je
xchg
pop
xchg
jns
push
xor
inc
add
xor
mov
aad
cmpsl
or
sbb
or
mov
fimull
add
pop
adc
enter
push
xor
push
pop
test
or
sti
or
jge
mov
cmc
test
xor
mov
mov
xchg
jecxz
mov
je
ret
fistpl
hlt
add
pop
adc
sbb
js
popf
popf
xor
fdivr
fimuls
subl
pop
add
inc
aad
or
adc
test
cmp
lods
movsb
mov
push
hlt
sub
popa
xchg
test
and
shr
mov
jl
loope
cmp
xor
or
pop
mov
add
sti
and
in
mov
add
or
mov
pop
dec
jno
cltd
mov
and
jg
movb
xchg
jge
cmp
mov
dec
xor
xor
sub
sbb
push
sbb
testb
cmp
adc
nop
cld
pushf
and
push
ja
mov
cmp
cmovg
jo
movsb
jmp
xchg
adc
and
aaa
es
pop
pop
cmc
push
insb
shrl
sbb
add
mov
addr16
aam
movsb
popa
add
mov
movsb
pusha
mov
popa
pushf
out
movsl
nop
sbb
scas
push
ficoms
sbb
lahf
pusha
movsb
inc
dec
cmp
loopne
into
pop
push
rol
cmp
mov
mov
mov
flds
add
adc
mov
jae
mov
jmp
clc
push
sbb
mov
xlat
int3
mov
push
popf
push
clc
push
push
dec
sti
mov
pusha
mov
lock
adc
sub
hlt
push
add
mov
test
cmp
sahf
and
xchg
test
std
leave
add
dec
push
inc
repnz
add
call
adc
addr16
scas
in
inc
add
nop
and
roll
adc
cmovae
loopne
and
xor
int3
frstor
and
les
lea
ret
pop
imul
adc
rclb
js
add
sbb
push
rcrb
fdivl
and
loopne
repz
push
add
repnz
jno
xlat
rcrb
xor
adc
lods
lods
lods
movsb
xor
inc
dec
movsb
mov
push
jo
mov
mov
and
xchg
or
pusha
xor
mov
aas
pop
pop
pop
inc
mov
mov
cmp
jecxz
jg
fsubl
enter
mov
xchg
add
insl
add
stc
movsl
sbb
cmp
adc
adc
add
push
inc
les
out
adc
sbb
test
add
adc
xlat
add
arpl
rcll
inc
and
push
mov
call
cmpsb
ss
jo
cltd
ret
adc
test
and
test
push
loope
xchg
imul
jbe
and
nop
sti
and
pusha
mov
push
fildl
sbb
das
jno
sbb
add
mov
mov
icebp
mov
scas
nop
pop
and
sbb
lret
lods
push
xchg
sub
or
loop
popa
test
mov
and
cmp
lock
push
cltd
mov
dec
or
lcall
in
adc
sbb
add
sbb
and
add
sub
push
xor
pop
and
cmp
in
cmp
sub
xchg
sub
mov
dec
adc
dec
push
and
xchg
add
dec
leave
adc
jl
dec
cmpsb
or
add
or
push
xor
add
inc
test
hlt
and
addr16
sbb
push
shrb
jne
cmp
push
cmpsb
sti
or
sub
movsb
and
mov
test
xor
popa
mov
xchg
int3
testl
jnp
shl
movsl
push
pop
or
sbb
pop
or
sbb
icebp
fildl
pop
out
loopne
push
cmp
movsb
pop
adc
cmpsl
cld
mov
xor
in
mov
or
or
and
repz
cmp
dec
in
lock
ret
fstl
sbb
test
or
mov
adc
ret
xorl
sub
sub
cld
shrb
fimuls
imul
inc
xor
aad
inc
or
fildl
fstpl
fisttpll
fsubl
xor
push
sbb
bound
and
xlat
in
sbbl
add
mov
cld
xor
push
hlt
mov
add
movsb
cmp
dec
xorb
mul
insl
popa
jmp
sbb
add
je
cmp
add
call
pusha
mov
sbb
dec
inc
fstpt
jmp
mov
dec
enter
arpl
adc
push
or
adc
sub
subl
out
ja
fsubrs
fs
add
ja
in
pop
pop
orl
dec
mull
dec
das
jg
xchg
dec
and
outsl
xchg
xchg
add
nop
dec
xchg
incl
inc
jb
dec
xor
push
push
jg
inc
leave
inc
scas
xor
pop
xor
arpl
xor
insl
xor
jecxz
push
fstps
test
mov
es
aaa
lds
in
mov
sbb
adc
and
cmp
push
dec
and
xlat
mov
pop
mov
shrb
sarb
push
shl
push
rcl
sub
push
mov
push
mov
sbb
sbb
nop
add
mov
adc
clc
adcl
push
rolb
xor
adc
lods
ret
add
cmp
add
rclb
add
sub
adc
movsl
push
sbb
mov
mov
sti
adcl
dec
add
andb
and
clc
cltd
jo
mov
pop
jb
inc
rcll
mov
push
loopne
mov
sbb
add
xchg
push
les
or
inc
cmp
lods
inc
sbb
aam
mov
fisttpl
popa
cld
xchg
push
xor
in
and
xchg
mov
in
fs
clc
cmp
add
aad
sub
lcall
incl
inc
hlt
or
iret
mov
push
mov
imul
pop
cmp
cmp
mov
inc
xchg
in
pop
lahf
fcoms
popa
test
hlt
test
and
std
cld
cmp
scas
mov
inc
inc
outsl
hlt
or
call
scas
fcomi
inc
adc
fmuls
mov
push
in
inc
dec
lds
shl
xor
jb
pop
sbb
push
sbb
andb
push
pop
pop
add
pop
mov
in
add
cltd
mov
xor
push
add
or
cld
nop
or
or
sbb
shll
or
xor
pop
or
or
rorb
cld
lahf
or
xchg
inc
les
pop
or
insb
test
xor
rcll
and
rcrb
mov
xor
jae
loopne
sub
iret
lods
inc
addl
mov
xor
add
das
or
icebp
out
sarl
adcl
sbb
fs
nop
mov
adc
mov
dec
pop
movsb
test
add
fcomip
cmpsb
cwtl
je
lock
sbb
aas
dec
in
push
call
sbb
and
leave
adc
fcompl
cmp
fsub
fldenv
aam
shlb
mov
or
lds
push
inc
notl
jge
arpl
and
mov
test
push
ljmp
cmp
or
imul
inc
xor
jnp
mov
in
in
subb
std
loopne
in
in
add
call
fucom
loopne
cwtl
roll
ss
xor
xor
mov
push
xor
pop
js
inc
ljmp
lock
in
call
push
call
popa
daa
lock
jbe
out
xchg
sbb
ljmp
and
adc
xchg
sbb
add
push
xor
cmp
dec
rclb
pop
enter
popa
arpl
push
repnz
jmp
mov
in
jb
push
shll
mov
enter
cwtl
xchg
arpl
cmp
sub
add
les
into
mov
dec
gs
orl
cmp
or
clc
test
sub
add
xlat
loopne
fwait
and
loope
lahf
push
xor
lea
push
add
aaa
add
inc
icebp
test
xor
push
orl
adcl
inc
add
sub
fcompl
xor
je
dec
and
addl
outsl
loopne
inc
lods
fnsave
gs
mov
mov
mov
mov
inc
add
add
call
hlt
mov
mov
mov
movsb
dec
arpl
lock
push
pop
hlt
or
inc
mov
pushf
push
and
leave
push
pop
mov
pop
pop
hlt
ljmp
fimuls
pop
nop
aaa
pop
adc
add
mov
add
inc
subb
xor
fildl
inc
movsl
out
in
mov
or
sub
test
mov
into
adc
mov
shl
inc
adcb
adc
xchg
jmp
orb
jmp
adc
adc
std
rorb
sub
cld
push
mov
pop
fisttpl
adc
push
dec
in
inc
add
cmp
cmp
or
sahf
cmc
sub
movsl
imul
add
pop
adc
jne
andb
decb
int3
cli
fwait
mov
daa
pop
ret
push
popf
add
adc
push
cwtl
pop
push
leave
sub
cmpsl
or
addb
cmp
xor
mov
data16
test
push
add
inc
pop
sbb
and
add
add
add
sbb
gs
and
ja
pop
xor
jae
cs
jecxz
xchg
inc
imul
test
movsl
or
add
sbb
test
mov
inc
adc
rcll
adc
adc
mov
movsl
mov
mov
loopne
divl
pop
call
inc
popa
mov
scas
lods
andl
loopne
add
test
int3
aam
add
adc
dec
and
push
shl
aam
inc
inc
xchg
jns
jmp
aam
jo
filds
and
jnp
sbb
sarb
xor
mov
lock
jne
clc
sti
popf
pusha
nop
pop
xor
outsb
and
sub
mov
test
cmp
stos
xor
sbb
scas
sbb
dec
pop
add
mov
xlat
lods
sbb
adc
cwtl
add
test
add
into
mov
roll
pop
out
inc
or
dec
inc
push
sbb
mov
orl
sbb
sub
or
sbb
clc
dec
jp
or
pusha
xor
add
rep
cmpl
mov
and
push
je
sub
cltd
inc
test
sub
ja
sar
mov
push
or
inc
add
in
inc
add
sahf
dec
test
lods
xchg
sbb
pop
or
inc
sbb
adc
mov
in
outsl
pop
mov
jg
jle
repz
cmp
test
xchg
mov
adc
into
inc
push
rorb
rcr
in
loope
sub
faddl
dec
loopne
mov
inc
imul
jns
xor
xchg
shrl
adc
rclb
add
xchg
xchg
mov
pusha
xor
nop
mov
inc
xchg
jl
aas
lock
xchg
and
stos
xlat
jnp
icebp
xor
mov
inc
repnz
or
fsubs
or
jb
push
xlat
shlb
scas
iret
inc
fdivl
inc
jecxz
bound
mov
jge
inc
pusha
sub
dec
in
fistpll
lock
push
or
lea
adc
aas
push
add
push
sar
sbb
fcompl
push
lea
int3
nop
dec
pop
test
inc
loop
jb
cmpsl
mov
xor
rep
dec
push
sub
mov
mov
or
mov
xor
imul
mov
and
test
das
hlt
enter
rcrb
and
test
pop
dec
xchg
sbb
dec
add
rcrl
jge
mov
mov
or
jge
popa
mov
add
inc
sbb
push
lds
lret
dec
mulb
ret
xor
cmpsb
cmpl
xchg
or
push
inc
or
idivl
or
or
in
mov
leave
pop
gs
add
mov
leave
lahf
xchg
inc
jb
fsubr
fsubs
push
aam
jo
cmp
push
push
add
movl
test
xor
sub
dec
add
loope
sub
mov
inc
cmp
dec
pushf
cmpl
sub
cmp
add
inc
add
jle
addb
shlb
xor
push
mov
dec
inc
jb
add
popf
int
pop
mov
pop
sbb
sbb
inc
fstpt
jae
pusha
fldl
lods
pop
xchg
iret
inc
addr16
and
fiadds
jge
and
shl
arpl
popa
ret
xor
hlt
xor
in
dec
lock
xchg
cmp
in
adc
lea
jns
aam
pop
or
test
pop
or
add
test
lods
adc
sbb
dec
movsl
inc
mov
rcll
and
xchg
and
add
fs
ljmp
mov
or
jmp
dec
dec
icebp
push
push
dec
or
addb
push
pop
rorb
add
inc
pop
inc
clc
les
dec
cmpsl
lds
add
sub
add
bound
sbb
test
popf
and
push
or
mov
xchg
andb
push
nop
inc
sbb
cmp
and
add
lods
in
ds
inc
repnz
mov
stos
or
add
adcl
jnp
lds
int
xor
pop
mov
shlb
lods
and
push
ret
and
cmp
in
xor
dec
gs
push
add
fistps
mov
xor
push
sbb
push
and
or
add
fadd
adc
scas
sub
dec
pop
faddl
int3
mov
and
shlb
gs
mov
test
or
mov
sub
popa
int
and
dec
loope
dec
in
loopne
test
loopne
push
sbb
pop
or
fcomp
push
aam
lea
lods
add
jns
popf
fcoml
pop
jo
faddl
sbb
sbb
int3
das
jecxz
stos
push
enter
test
push
xor
call
gs
add
xchg
add
mov
adc
add
data16
or
mov
mov
and
popa
xor
and
test
sub
sbbb
add
pop
jb
lods
or
fisttps
xor
sub
and
dec
and
sub
pushf
dec
adc
dec
popf
mov
mov
adc
ret
daa
xchg
sbb
cmpl
test
add
and
clc
iret
rolb
in
es
nop
mov
push
ret
xor
popa
adc
test
repz
fdivs
or
loopne
insb
push
sbb
jno
push
adc
mov
add
xor
xor
pop
sub
jle
mov
std
sbb
les
test
fld
lods
xchg
adc
jmp
fiaddl
fcomps
out
outsl
addb
imul
xor
mov
addb
add
xor
lret
add
pushl
mov
dec
inc
test
ret
or
stos
add
pop
dec
mov
adc
subl
dec
sbb
jne
or
xchg
subb
mov
cmpsb
mov
add
jno
aam
cmpsb
push
sbb
pop
test
ss
icebp
mov
xor
adcb
jmp
insl
push
and
or
mov
loopne
fsubr
and
enter
pop
cmovnp
aam
push
cmp
je
lea
stc
test
and
adc
xlat
push
ljmp
cmp
in
lods
inc
dec
mov
mov
jecxz
inc
outsb
or
sbb
inc
inc
inc
bound
lds
and
sub
fmuls
jmp
aas
push
sbb
dec
xchg
fld
adc
test
or
repz
pop
mov
ja
les
sbb
shlb
shlb
adc
stc
or
sbb
add
loopne
ficompl
imul
in
ss
mov
push
enter
and
inc
lock
mov
cmpsl
or
jl
nop
mov
jae
sub
clc
addl
aas
jmp
add
jno
adc
sub
push
jl
sbb
insb
add
or
xchg
clc
push
mov
jmp
xchg
sbb
std
or
cmpsl
jmp
shll
aam
aam
aam
adc
xor
movsb
add
movsb
or
dec
pop
sub
add
imul
adc
fsubrl
ss
xchg
sub
adc
in
popa
xchg
es
fiaddl
push
push
adc
fcmovbe
sub
adc
sbb
xor
sahf
inc
mov
adc
movsl
addr16
or
add
sbb
sub
cmp
adc
stos
add
lods
dec
pop
cmpsl
test
addb
addr16
xchg
sub
enter
icebp
arpl
addr16
scas
dec
mov
inc
and
lea
andb
pop
lds
mov
inc
addr16
push
and
mov
and
ret
or
inc
adc
inc
shrl
outsl
dec
mov
sub
push
ret
adc
test
xor
jg
push
lds
rcrl
or
push
push
pop
xor
aaa
mov
pop
mov
cmp
cltd
sbb
adc
and
mov
movsl
mov
gs
dec
or
and
or
push
jecxz
fldt
or
cmp
test
iret
outsl
or
or
adc
pop
into
daa
xor
pop
lock
inc
and
in
or
sbb
xor
sbb
or
push
xor
aaa
sbb
or
sub
jmp
gs
cld
rcrl
popa
arpl
out
or
hlt
cmp
enter
mov
fwait
pop
adcl
insl
sarl
or
in
mov
addb
sub
pop
mov
jg
enter
or
add
mov
jmp
xor
sbb
add
mov
mov
adc
dec
or
sub
sub
or
leave
and
push
loope
or
add
and
jns
inc
add
sbb
pop
sti
inc
xor
jno
push
add
frstpm(287
add
add
and
mov
bound
sub
cltd
test
in
mov
sti
xchg
dec
inc
inc
sbb
dec
loopne
pusha
adc
mov
fs
xchg
out
ficoml
icebp
hlt
addb
cwtl
xor
ficompl
jecxz
cmpsb
inc
bound
mov
xchg
mov
push
mov
xor
gs
pop
xchg
leave
popa
adc
push
jp
test
mov
xchg
data16
jne
dec
sbb
call
adc
add
or
lea
adc
cmp
js
decl
or
pusha
roll
clc
pop
mov
add
adc
mov
test
out
xor
sub
xor
fmuls
or
repz
aad
sbb
inc
das
adc
push
adc
cmpb
add
aas
add
idivb
sbb
movsb
fsubr
adc
mov
or
inc
orb
push
div
mov
data16
pop
and
or
push
adc
dec
dec
ret
sbb
shrb
cmp
sbb
in
inc
lods
rolb
mov
xlat
in
lea
sub
in
mov
scas
sub
and
popa
mov
dec
pop
adc
mov
and
rorb
sub
dec
push
xchg
fwait
cmp
andl
xor
mov
and
add
bound
cmp
push
mov
add
or
sub
pusha
aaa
pusha
test
hlt
enter
mov
test
in
nop
or
mov
or
or
inc
cs
js
nop
or
and
mov
mov
push
pop
inc
add
mov
xor
mov
or
test
mov
clc
mov
cmp
mov
pop
lock
pop
icebp
in
or
outsl
push
sbb
adc
push
pop
test
sbb
xchg
mov
das
loopne
movsl
rolb
ja
inc
jo
in
popa
and
sbb
inc
jl
js
repz
shlb
or
add
loopne
fildl
aaa
cwtl
push
adc
lahf
dec
xchg
push
add
xchg
roll
cmp
pop
loopne
xchg
leave
dec
fadd
aam
loopne
cld
orl
or
rolb
push
xor
mov
xor
push
sbb
and
and
or
pushf
aaa
adcb
add
ja
cmp
add
push
dec
push
test
stc
scas
mov
mov
inc
and
xchg
dec
les
aas
dec
push
or
add
cmp
and
cmp
aam
enter
aaa
ljmp
add
and
jo
lock
pop
dec
and
mov
mov
shlb
mov
add
callw
pop
ror
enter
jo
sbb
mov
mov
add
dec
inc
and
mov
stos
mov
data16
xchg
in
stos
aam
cmp
mov
push
or
sub
mov
fstps
push
leave
jo
aam
cmp
in
cmp
mov
sub
int3
enter
xchg
cmp
enter
pop
jno
inc
rclb
aas
stos
testl
add
sub
stos
adcb
in
dec
mov
adc
adc
stos
mov
or
add
or
pop
int3
fildl
lock
cmp
movsl
fsubl
add
nop
mull
mov
inc
pop
dec
loop
inc
mov
mov
mov
mov
mov
push
xor
mov
mov
shll
add
out
in
clc
pop
sbb
or
enter
sub
fmulp
mov
sub
popa
mov
dec
mov
das
adc
cltd
ret
cmp
inc
mov
fadd
or
cs
rcr
push
fadds
repnz
lea
inc
cmp
rcl
inc
sub
int3
les
fcomps
stos
adc
or
stos
mov
dec
or
loopne
addl
pop
inc
add
orb
add
lock
sub
sbb
stc
add
xor
xchg
xor
adc
cld
xchg
adcb
and
icebp
fnstenv
fnstsw
repz
inc
nop
add
adc
cld
sbb
add
cmp
inc
das
stc
gs
das
mov
fistl
sbb
dec
mov
insl
lock
inc
adc
mov
sbb
mov
pop
sub
add
sub
ja
inc
test
mov
dec
test
xlat
pop
addl
and
stos
imul
inc
xchg
push
sbb
cld
inc
adc
shlb
cmp
mov
sbb
stos
or
add
fildl
mov
sbb
mov
sbb
xchg
shlb
imul
sbb
pop
int3
add
in
lods
shll
sub
hlt
sbbb
add
or
mov
or
adc
rolb
or
jbe
loope
inc
cs
inc
pextrw
adc
xor
cmp
and
ds
jns
sbb
xor
test
jbe
dec
pop
clc
std
cmp
jl
and
mov
stos
adc
push
int
push
sbb
rolb
mov
imul
adc
mov
and
iret
lods
push
cmp
mov
push
inc
or
fmull
inc
sbb
jne
insb
lret
cmp
and
add
shl
add
dec
outsb
sti
mov
sti
outsb
sti
add
add
sub
mov
and
ficoms
xchg
icebp
cmp
mov
and
enter
outsb
das
stos
jb
jb
stos
stos
jb
enter
enter
mov
add
or
sub
movsb
roll
lods
or
xor
add
call
ret
or
xor
inc
fs
lds
sbb
adc
push
sbb
mov
push
mov
add
sbb
mov
hlt
push
movsl
inc
jl
out
test
pop
movsb
push
lock
dec
push
fidivl
fdivrp
mov
adc
mov
mov
add
and
mov
push
xchg
inc
iret
mov
test
xor
adc
xchg
push
sar
sbb
sbb
aam
xchg
inc
and
pop
iret
sub
push
pop
das
lock
mov
push
or
and
jb
shlb
fsubs
and
int
dec
rolb
ret
sbb
outsl
adc
add
add
call
fsubr
nop
or
std
push
add
mov
fwait
lahf
or
call
dec
xchg
mov
mov
xor
dec
leave
xor
int3
or
enter
mov
mov
nop
les
adc
mov
push
xor
mov
in
loopne
push
dec
mov
and
xor
adc
dec
adc
sub
and
pop
sub
xchg
leave
dec
and
mov
push
and
inc
js
fildl
xor
lea
leave
hlt
testl
lcall
push
incl
or
in
nop
and
or
xor
mov
sub
nop
les
and
mov
adc
push
enter
or
dec
data16
or
inc
push
add
mov
push
pop
push
jae
or
lret
subb
fdivrl
add
repnz
test
inc
popf
xor
mov
or
xor
xchg
addl
stos
pop
inc
pop
loopne
pop
aam
loopne
or
aas
push
xlat
fsubl
mov
jl
bound
sbb
and
fadd
mov
pop
test
test
xchg
dec
and
sbb
dec
mov
inc
test
inc
mov
outsb
arpl
pop
pop
jmp
test
mov
dec
or
or
lock
fcmovu
push
mov
shll
fadds
add
mov
push
or
stos
sbb
in
loopne
mov
aam
add
adcl
hlt
lahf
mov
movsb
xchg
test
lea
lcall
jne
adc
ja
inc
and
sbb
xchg
cmpb
je
faddp
xor
ljmp
jl
loopne
mov
aas
adc
and
sarl
cmp
jl
test
loope,pt
dec
mov
add
movsb
xchg
loopne
lock
pusha
cmp
or
adc
fsubrl
popf
adc
loop
jno
cmp
mov
in
xor
mov
mulb
loop
pop
push
movsb
popf
and
ret
jmp
fsubrs
jns
cmp
popf
and
add
mov
mov
xchg
xor
mov
xorb
js
mov
or
lds
and
test
add
or
loop
xor
imul
jnp
in
mov
dec
adc
mov
sti
mov
inc
imul
cmp
cs
mov
stos
cmp
sub
in
roll
push
sbb
inc
adc
in
jecxz
sub
mov
push
or
or
mov
push
in
push
nop
loopne
faddl
nop
add
out
or
sub
or
xor
dec
es
repnz
xor
rcl
out
xor
mov
loopne
pusha
ret
cwtl
xchg
or
rclb
mov
daa
add
add
pushf
inc
es
fsub
iret
lods
sub
cmpl
inc
sub
xchg
xchg
js
or
loope
in
insl
lods
idiv
xchg
xorl
and
sbb
test
leave
mov
loopne
je
inc
mul
dec
fidivrl
call
loopne
inc
adc
test
leave
xor
push
les
xchg
adc
clc
pop
ljmp
shrb
fsubl
fs
sbb
mov
test
int
sbbb
pop
or
adc
pop
lahf
mov
xchg
sbb
addb
jo,pn
and
add
enter
pop
lea
push
into
mul
push
cwtl
scas
or
mov
int
imul
mov
outsb
mov
loopne
add
cltd
inc
jb
popa
repz
adc
lret
les
add
xchg
shrb
outsb
fmull
fldl
and
lcall
in
scas
add
je
mov
cmp
es
bound
in
stos
xchg
in
xchg
inc
rclb
jb
xchg
cmpsb
les
pushf
or
mov
add
cs
fsubrs
add
dec
es
mull
enter
cmp
xchg
lock
ret
pop
les
sub
adcl
mov
in
adc
xchg
stc
push
inc
lcall
adc
mov
orb
int3
cltd
pop
test
aad
push
mov
cmpl
xlat
cmp
and
xchg
lods
lods
test
push
mov
in
stos
sub
mov
nop
outsl
nop
xor
addb
ss
insl
fldl
pop
popf
js
mov
pop
add
aad
pop
loop
xlat
out
cld
xchg
loop
xchg
add
push
fimuls
lds
and
adc
sbb
fldl
jnp
push
or
mov
lea
dec
pop
mull
add
das
inc
enter
pop
or
xor
inc
dec
and
lods
pop
je
jo
lcall
arpl
lret
ret
sar
repnz
cs
push
popa
dec
mov
mov
inc
sub
leave
and
notl
xor
add
aad
adcb
mov
or
mov
add
sub
sbbl
test
xor
pop
test
push
mov
sub
les
and
stos
dec
or
gs
ret
dec
dec
push
adc
nop
or
pop
std
and
mov
adc
imul
add
inc
loope
lcall
jmp
pop
mov
pushf
and
inc
pop
xchg
mov
in
movsb
xchg
sub
inc
or
aam
xlat
in
test
add
mov
push
add
dec
inc
jg
or
cltd
nop
add
in
lods
rol
in
loope
out
inc
shll
add
mov
pop
push
adc
pop
or
ud2
lock
jno
orb
xor
adc
mov
pop
push
int3
rolb
icebp
fsubl
mov
movsl
adc
dec
mov
mov
mov
mov
movsb
jo
ret
iret
aad
inc
es
in
in
and
sbb
imul
out
popa
aas
add
mov
push
inc
clc
data16
rorl
xchg
push
pop
or
add
orb
jne
adcl
and
and
mov
movsl
sbb
or
inc
or
adc
adc
mov
mov
mov
test
cmp
mov
loope
push
push
fsts
sub
or
adc
flds
mov
add
add
dec
push
inc
sbb
adc
add
leave
or
cmp
adc
or
push
adc
or
popa
jne
push
mov
adc
inc
mov
add
imulb
or
cmpb
fmull
mov
push
jns
test
insl
aas
xor
test
xor
mov
jne
js
xor
arpl
dec
or
addr16
inc
cmp
jle
adcb
iret
shlb
sub
sub
jae
mov
loopne
or
nop
call
add
adc
int3
stos
sub
add
arpl
fwait
loopne
test
fcoml
rcrb
xor
hlt
pusha
inc
xor
or
adc
out
ror
add
add
add
inc
dec
and
rcrb
imul
mov
shll
dec
sub
and
cs
mov
add
add
jb
or
add
xor
imul
xchg
add
dec
cmp
mov
repz
rorb
mov
dec
mov
fimuls
and
lahf
add
or
inc
add
pop
and
aam
inc
hlt
dec
xchg
cld
add
and
lock
push
ljmp
jp
je
cmp
loopne
and
cmp
inc
mov
xchg
hlt
inc
loopne
orb
add
int
or
cmp
mov
mov
ret
add
push
loopne
and
aas
and
add
push
mov
dec
jge
inc
xor
lds
pop
xorb
add
mov
xchg
push
lock
xor
pusha
test
xor
dec
or
mov
or
mov
cmp
sub
pop
inc
hlt
aaa
ret
or
or
test
dec
fcoms
dec
push
and
add
push
xor
jae
and
inc
add
add
xor
mov
adc
push
add
sub
sub
mov
jns
roll
push
ret
dec
sub
call
cltd
fsub
add
xchg
dec
dec
jne
inc
in
bound
xor
mov
les
mov
inc
movsl
xor
cmp
lds
int3
add
fsubr
add
subb
push
inc
aaa
mov
sub
mov
icebp
fdivl
jb
inc
add
hlt
add
and
xchg
in
and
xchg
cmp
loopne
inc
adcb
pop
pop
bound
dec
push
hlt
rclb
push
push
jno
add
cld
stos
add
sbb
loopne
iret
rorb
lret
jge
fs
xor
xchg
insl
jne
int
int3
lcall
push
les
jb
aad
test
cs
test
mov
idivl
or
or
das
ret
lock
ret
inc
jno
cld
fninit
packuswb
sub
ja
inc
push
sub
or
sbb
dec
mov
sub
lea
sub
mov
pushf
test
insb
jo
mov
jl
int3
add
inc
or
inc
inc
clc
inc
rolb
push
ja
adc
push
jg
ljmp
cwtl
ret
push
mov
or
sub
scas
mov
pop
inc
mov
not
mov
add
add
or
or
in
cmpsl
sub
arpl
mov
adc
mov
adc
scas
jne
jl
movl
adc
popa
add
or
sub
add
test
or
mov
fwait
sub
mov
push
push
addb
ficoml
xchg
fs
ret
addr16
dec
inc
stos
out
mov
xchg
xchg
int
roll
add
mov
adc
pop
cmpl
add
ret
or
fdivrs
xchg
pop
add
sbb
fcmovne
xchg
or
pop
repnz
pop
push
je
cmp
ja
mov
adc
cli
or
sub
test
mov
es
xchg
mov
push
push
cmpsb
dec
jl
lock
imul
je
and
or
push
cld
or
pop
pop
je
inc
mov
pop
xor
pop
addr16
push
inc
mov
pop
mov
repnz
or
sub
cmp
sub
jno
insb
leave
or
jge
aaa
cld
mov
mov
pop
out
jne
fwait
mov
mov
push
add
pop
and
xor
das
jo,pn
push
xchg
add
adc
pop
push
add
and
xchg
imulb
je
lods
add
or
inc
cmp
pop
es
pop
iret
pop
loope
in
jge
fisubrs
lahf
or
lret
dec
out
addr16
fcmovnu
mov
shlb
mov
in
sub
push
mov
out
push
pop
or
xchg
icebp
add
lea
fldl
fcompl
or
mov
call
sti
sbb
fdivl
lea
and
cmpps
dec
fstp
jne
frstor
mov
sbb
sbb
rol
or
inc
divps
add
jmp
dec
repz
fstpl
push
sbb
movsb
jb
sbb
cmpsl
xchg
cmp
mov
jle
sub
jg
jp
mov
ret
add
je
dec
jne
xor
jmp
or
add
or
ret
in
mov
cmpsl
lcall
addr16
xor
ja
int
inc
rcll
push
and
imul
add
mov
push
fs
mov
mov
fsub
mov
fiaddl
jo
inc
and
sarb
sar
sub
xor
jl
or
pop
loopne
dec
jmp
sbb
or
inc
or
cs
mov
or
dec
pusha
cmp
js
fcmovnu
dec
ljmp
xor
jecxz
xor
add
pop
add
xorl
sub
add
sub
adc
or
jb
add
mov
cmp
dec
inc
push
or
fimull
push
push
cs
adc
and
in
push
and
xor
or
or
inc
ss
call
push
push
pop
xor
jle
pusha
mov
push
sbb
pop
test
adc
lds
pop
pop
push
add
push
or
insb
xchg
jg
stos
call
inc
sbb
add
pop
inc
pop
sahf
or
xchg
sti
pusha
ljmp
mov
add
leave
ds
xchg
push
orb
push
mov
je
push
push
or
aad
and
div
mov
sbb
jne
pop
mov
fnstsw
push
fadd
adcl
lock
cmpsl
incl
jp
enter
inc
rcrl
pusha
or
xchg
inc
outsb
into
aam
aas
aam
pop
mov
pop
pop
add
imul
out
push
fstpt
mov
pop
dec
pop
push
xor
mov
mov
sub
rclb
loop
ficoms
mov
jo
sarl
sub
jle
clc
loop
mov
movl
jl
push
adc
sbb
cli
cmc
mov
repnz
sub
lds
cmpl
or
xor
jmp
push
xor
lock
ret
rorb
sti
and
mov
mov
sti
mov
and
cmp
mov
jl
mov
cmp
jle
sbb
mov
xor
sub
push
cmp
sub
outsl
sarb
clc
jnp
cltd
xor
sub
inc
cltd
idiv
stos
call
cld
add
jbe
test
jg
imul
add
and
cld
pop
mov
jl
lods
mov
push
push
adc
and
adc
lods
cmp
jg
jo
idivb
scas
mull
adc
sbbb
adc
icebp
sub
add
and
lahf
push
sahf
mov
xorl
test
or
das
clc
sub
sarl
jle
lea
cmp
jle
sub
es
or
mov
adc
adc
mov
mov
inc
xchg
xor
adc
push
ret
push
test
inc
cmovae
dec
mov
inc
cli
cmp
jge
pop
fistpl
repnz
movsbl
mov
aas
jnp
adc
adc
cld
sub
mov
mov
addb
and
es
and
in
fisubl
jbe
push
in
or
mov
push
mov
fld
mov
sub
add
in
xor
mov
jl
sbb
fisttpl
inc
ret
dec
and
push
and
mov
mov
sbb
sub
jl
xor
mov
sub
add
mov
push
jg,pn
or
jl
sbb
cs
stc
mov
imulb
sbb
mov
out
jle
pop
mov
nop
into
pop
cmpsb
cmp
jl
add
inc
clc
in
add
xor
push
or
mov
and
pop
mov
add
cmc
fiaddl
push
jmp
mov
dec
loop
rorb
cmc
into
repz
dec
inc
das
paddusw
inc
inc
or
sub
jns
sbb
xchg
pop
cld
sbb
sbb
outsb
jle
sbb
xor
mov
xchg
inc
adc
pop
es
ds
or
ljmp
rolb
mov
xchg
and
xlat
or
fdivl
pushl
sub
cmp
lret
pop
and
sbb
shrb
jmp
fcomps
sbb
pop
xchg
inc
push
or
sti
cmpsb
fcomps
or
jp
pop
sub
mov
or
rcll
mov
inc
je
inc
push
inc
adc
jmp
mov
mov
cmpsl
je
sahf
inc
pop
orl
shrl
xor
push
add
stos
jmp
lea
and
and
cmpsl
pop
or
das
sahf
xchg
push
add
jo
add
cltd
pop
icebp
or
jl
sbb
int
repz
pop
inc
pushl
push
movl
sub
xchg
dec
aas
add
aas
popa
xchg
je
and
inc
movsl
lea
je
cmp
loop
arpl
xchg
cmp
mov
insb
bound
cmp
cwtl
jo
push
jb
xor
repnz
and
push
repnz
sub
loope
xor
sbb
mov
push
jmp
push
pop
mov
sbb
push
add
sbb
mov
je
test
out
leave
ffree
inc
inc
push
adc
sahf
mov
lahf
js
push
outsl
imul
and
movsb
xchg
lcall
fs
test
shll
ret
mov
outsb
movzbw
arpl
pop
ret
jge
pcmpgtd
je
fidivrs
and
push
cmp
push
pop
push
push
xchg
lods
aaa
rorl
push
rorb
nop
aas
mov
lea
or
cmp
jnp
js
lock
addr16
leave
fs
mov
push
jne
cmp
push
lret
push
adc
push
movsb
xchg
dec
dec
dec
add
xor
inc
dec
add
push
dec
add
add
aas
lock
pop
lret
jecxz
std
stc
jge
dec
or
jmp
mov
and
mov
shrb
jg
cli
and
je
cmp
jne
cmp
jne
test
icebp
jbe
ja
inc
xor
jne
testb
stc
dec
fnsave
cmp
sti
push
pushf
iret
mov
adc
ret
cmp
xor
mov
adc
js
or
or
add
rclb
inc
out
push
fcmovu
popf
cli
addr16
jmp
cli
and
cmp
and
aas
cmp
xor
jle
push
push
sti
pop
mov
mov
pop
ss
jmp
addb
inc
cmp
nop
aas
js
adc
mov
enter
push
mov
dec
or
jmp
je
push
push
movsb
push
ljmp
pop
pop
xchg
mov
cmp
mov
ficomps
mulb
lock
loope
neg
icebp
lea
sub
push
je
mov
mov
adc
mov
lods
adc
pushf
or
mov
push
and
jno
and
loopne
push
movsl
cmp
xchg
add
pop
xor
mov
add
hlt
sub
mov
inc
sahf
dec
jle
push
sbb
fwait
icebp
loopne
mov
adc
int3
jmp
js
fisubrs
sbb
or
ss
popa
outsl
fcmovu
xchg
adc
rorb
daa
lods
adc
inc
cmp
je
xchg
jne
inc
mov
outsb
cmp
xor
sete
shr
sbb
adc
mov
icebp
push
mov
pop
jmp
lret
test
in
jne
je
fists
cmp
jge
jnp
xchg
sbb
or
mov
sub
cmp
adc
jl
and
push
push
lea
dec
and
inc
xchg
sub
js
mov
dec
repz
mov
sub
sbb
push
sub
cmp
icebp
sarl
stos
je
dec
mov
je
jmp
mov
sbb
push
add
adcb
push
inc
dec
jmp
sub
sarl
dec
jo
cmc
cwtl
fsubl
push
fldenv
push
lock
int3
jmp
push
movl
adc
and
fmuls
ret
mov
out
dec
adc
aam
jl
mov
pop
rorb
loop
or
pop
scas
sbb
mov
adc
cs
in
iret
jno
movsb
cmp
jb
mov
pop
lods
sub
jbe
sbb
push
cld
jle
xchg
jne
aaa
in
ret
xchg
xor
insb
xchg
pop
filds
sub
push
push
xchg
shrl
mov
mov
inc
jne
pop
push
aad
push
sbb
fnstenv
es
dec
testb
adc
lods
mov
xor
adc
insb
adcl
cmp
je
icebp
xchg
incl
push
sub
out
add
out
lea
in
mov
mov
pop
mov
jmp
stc
cwtl
and
push
jne
push
call
mov
and
push
fstpt
and
rep
pop
xor
and
xor
sbb
and
push
jp
push
jl
mov
call
filds
not
xlat
and
call
sbb
cmpsl
mov
sbb
sbbb
sub
scas
test
mov
mov
inc
cmp
mov
pop
shlb
cmp
xor
vpunpcklwd
mov
mov
adc
int
imul
xchg
add
rclb
pop
rorb
lods
inc
push
lahf
xor
repnz
popf
dec
add
push
fnstsw
dec
mov
mov
mov
mov
adc
add
sbb
and
add
add
inc
pop
push
hlt
mov
inc
movsb
js
sub
orl
incl
mov
pop
sub
add
push
or
sub
adc
cmp
jmp
push
add
int
add
add
dec
movsl
add
inc
add
out
push
push
sub
sub
mov
sbb
add
sub
shll
jle
outsb
rorb
xor
and
mov
cli
mov
adc
jl
mov
lods
adc
and
sti
pop
cmp
sub
add
add
fucomi
pusha
mov
inc
push
cld
add
sub
push
jl
adc
push
sub
mov
jge
xor
cmp
jo
push
sbb
lret
ja
jo
mov
and
lds
cld
mov
nop
incb
push
or
xlat
clc
inc
adc
call
jecxz
inc
pop
or
pop
mov
int3
mov
xlat
push
jl
std
lea
and
stc
add
adc
mov
inc
add
rol
or
rolw
icebp
in
sub
push
sbb
and
adc
jg
inc
lret
sub
icebp
cmp
leave
xchg
fwait
jge
sub
push
loop
mov
pop
ret
lahf
mov
bound
inc
sbb
lea
inc
cld
cmp
cmp
cmp
into
mov
lock
pop
xor
lea
cmp
movsb
xchg
jle
ret
notl
mov
mov
arpl
nop
push
ret
mov
push
xchg
xor
imulb
jae
rep
je
aaa
jg
xor
add
adc
sub
dec
jns
test
xchg
jle
and
movsl
sbb
addr16
sbb
add
jno
loopne
jns
int
push
insb
mov
pop
fsubrs
int3
mov
lock
jl
push
dec
ret
xchg
int3
sbb
push
push
mov
addb
cmp
es
sub
rcrl
test
sub
inc
adc
shl
into
mov
dec
cmpsb
std
jge
cmp
adc
pop
mov
sub
rcrb
sub
nop
pushf
mov
push
pop
cmp
mov
push
clc
jecxz
in
and
xor
mov
aad
jbe
ret
dec
adc
mov
push
mov
mov
shlb
mov
push
mov
sub
sbb
cmp
clc
fwait
outsb
inc
jg
mov
scas
sbb
mov
rorl
clc
or
push
push
push
push
cmpsb
push
push
or
loopne
divl
jle
and
push
sub
mov
push
and
shrl
sbb
or
inc
adc
pop
and
clc
cmp
shr
shlb
sub
loop
or
movl
rorl
pop
xor
dec
mov
push
cmpsl
pop
add
in
in
stc
outsb
je
xor
lock
jecxz
cld
and
cmp
loopne
push
and
mov
push
push
xor
jbe
push
mov
dec
enter
or
or
addl
jb
imul
aaa
jbe
dec
inc
add
push
add
sahf
fs
mov
inc
push
lock
pusha
pusha
mov
test
inc
pop
jno
xchg
dec
or
dec
mov
or
fisttpl
mov
cmp
push
rcll
ret
push
push
sarb
ret
fs
mov
iret
pop
xlat
dec
mov
add
cmp
cmp
ret
fnstenv
dec
dec
mov
add
jge
pop
mov
xor
js
jo
sub
cmp
add
aad
js
add
push
nop
aas
xor
add
das
repnz
push
in
mov
mov
ret
pop
push
inc
in
mov
scas
mov
aas
repnz
mov
insl
pop
lahf
and
add
pop
push
testl
adc
dec
lods
adc
cmp
fwait
cmc
ret
xchg
inc
and
fs
aas
xor
cmp
fcompl
jo
arpl
adc
xchg
lcall
sbbl
dec
dec
mov
add
add
jge
fadd
adc
and
ficoml
adc
push
add
or
aas
mov
cmpsb
lock
jge
lea
mov
mov
stos
push
sub
sarb
push
dec
daa
xor
push
cs
jmp
adc
sub
mov
sbb
and
cmpsb
push
jmp
hlt
pop
cmp
add
cmpsl
in
mov
bound
mov
push
incl
add
mov
jmp
push
iret
inc
add
push
jecxz
push
das
hlt
rcll
jne
mov
ljmp
call
mov
pop
xchg
add
push
xor
mov
push
adc
lret
dec
xchg
adc
subb
jo
and
das
mov
enter
mov
push
add
sbb
sbb
pusha
hlt
ret
xchg
xor
pop
mov
and
dec
test
clc
adc
out
push
xchg
push
sbb
in
outsb
stc
cmp
sbb
push
idivl
imul
inc
sub
inc
sbbl
les
mov
movsl
push
xchg
test
add
popa
imul
ss
adc
sbbb
mov
aas
rorl
lods
and
les
push
rclb
jl
es
xor
push
mov
sub
cmp
sub
xor
insl
clc
aaa
test
push
push
push
in
xor
test
mov
xchg
xchg
or
push
repnz
mov
loop
rcrl
cmp
sbbl
adc
pop
pushf
insl
icebp
inc
je
xor
cmp
je
data16
sbb
dec
mov
std
ja
push
inc
xchg
mov
mov
cmpsl
outsb
jo
sub
or
mov
pusha
mov
add
jne
test
stos
add
push
popa
cmp
daa
jmp
mov
jl
cmpsl
dec
dec
shll
in
inc
sahf
inc
jns
dec
lret
pop
cmpsb
shll
jo
pusha
dec
dec
movl
push
jo
loopne
ret
mov
mov
pop
cs
add
test
xor
out
in
push
adc
or
pop
sar
clc
xor
xchg
mov
mov
xchg
push
xor
sbb
push
add
jo
push
jne
mov
mov
xchg
gs
push
mov
inc
loope
xor
and
inc
pop
es
xor
sahf
cmp
push
movlps
int
mov
jno
lods
jl
popa
imul
fstpl
in
add
insl
inc
add
xchg
scas
add
shll
jae
push
dec
jne
sar
je
dec
jne
insb
je
jmp
inc
cmpsl
lret
mov
push
add
mov
fistpll
and
je
dec
jne
mov
ret
arpl
js
das
add
shr
adc
adc
adc
loope
aam
cld
lods
pusha
ret
lea
dec
js
dec
inc
setbe
js
or
or
clc
pop
sbb
push
inc
push
test
mov
xor
pushf
jo
push
jle
cmp
xchg
add
dec
jp
movb
xor
movsb
cmp
dec
push
into
xor
test
aad
mov
jne
daa
repnz
pop
push
repz
dec
cmp
jo,pt
es
outsl
nop
je
int3
push
or
or
cmp
push
push
push
xchg
cmp
mov
pop
outsl
and
movsb
cmp
addr16
jmp
push
daa
pop
in
cwtl
cld
xor
sub
insb
pop
sbb
push
push
xchg
cmpsl
das
or
cmp
cmp
adc
mov
sub
fs
push
cmp
sbb
mov
or
pop
cs
mov
mov
loope
push
adc
push
js
xchg
push
xchg
pop
adc
test
jnp
popa
loopne
pushf
or
aas
and
adc
and
addr16
mov
adc
cmp
jmp
lods
lods
pop
adc
shl
repnz
cmp
pop
adc
pop
ja
cmp
sbb
lock
ret
loopne
pop
xor
mov
xor
push
lods
cmp
and
mov
pop
xchg
aas
fs
or
jle
push
popf
enter
stos
sub
testb
cmp
popf
push
jmp
and
push
or
lcall
jae
mov
test
popf
push
push
out
push
xchg
jb
sub
pop
inc
lods
push
sub
push
js
insb
sbb
iret
ret
not
and
jo
push
push
xor
pop
jbe
jne
out
push
call
imul
add
in
fildl
jo
cmp
and
lock
jl
ret
loop
ret
sub
inc
hlt
negl
or
fistps
push
inc
cmp
inc
pop
add
leave
and
mov
js
push
addr16
pop
or
sahf
pop
ds
jo
int3
mov
pop
aas
add
je
popa
cmpsl
lock
inc
mov
sub
in
pop
loop
lock
sbb
push
push
push
mov
js
pusha
in
xor
outsb
or
popl
mov
adc
lret
inc
call
test
pusha
sbb
jmp
push
enter
xor
mov
ret
xor
dec
adc
insb
popa
mov
fwait
push
push
jmp
push
adc
mov
insb
fnsave
fldcw
push
dec
push
sbb
xchg
xor
insb
xor
cmp
and
test
popa
pusha
dec
sub
mov
fcoml
inc
flds
push
jge
int3
cmpsb
test
sub
push
xorl
or
das
inc
adc
xor
pcmpgtw
adc
cmpsl
adc
mov
loope
xor
pop
and
xor
loopne
add
push
pop
mov
imul
leave
pop
mov
int
mov
fldt
add
loopne
mov
js
icebp
cmp
shll
dec
pop
rorb
or
testl
and
xor
ret
movsb
inc
cmp
hlt
fcmovb
pop
rcrb
shl
mov
aas
cli
push
fs
stc
cld
mov
pop
pop
loopne
aaa
ds
add
sbb
jne
ret
jg
adc
leave
test
adc
sbb
sub
mov
popf
push
xor
jg
fcmovb
sbb
sbb
in
testb
fcom
mov
add
movsl
ret
call
cli
add
iret
mov
mov
jne
pushf
jl
jecxz
pop
mov
mov
cmp
mov
jg
fidivrs
pusha
jge
push
rclb
cs
push
in
pop
loopne
push
pop
inc
mov
jb
inc
mov
loop
mov
or
lock
fsubp
jno
adc
lock
jnp
rorb
sbb
mov
out
cs
push
lods
inc
sarb
in
xchg
loopne
jne
or
inc
lcall
sbb
test
dec
clc
in
mov
jne
inc
pop
jnp
rcrl
ds
gs
dec
sub
dec
add
push
fs
jb
add
inc
clc
sbb
mov
cmp
jl
cmp
dec
rorb
jg
or
jbe
push
jne
lea
jae
mov
lods
fldt
adc
jmp
inc
inc
shll
clc
cmp
fadds
lret
enter
dec
pushf
or
pop
loope
js
fucomip
adc
sbb
or
ret
enter
sub
or
push
xchg
and
pop
mov
loope
push
pop
js
inc
sbb
adc
or
je
mov
inc
adc
jb
lea
sub
orl
add
sar
fwait
gs
fdivl
mov
pop
decl
or
into
orl
das
les
xchg
push
or
rolb
mov
jb
adc
push
data16
xor
xor
cmp
je
add
data16
addb
push
add
notb
js
mov
mov
popa
dec
jns
filds
sbb
fisttpl
nop
add
jmp
inc
mov
add
add
inc
or
push
push
or
or
mov
push
or
or
adc
sub
pop
loope
enter
mov
adc
shrb
aam
push
pop
sub
cmp
jbe
xchg
subl
jbe
or
mov
jbe
aaa
cmp
test
lea
adc
or
inc
jno
mov
sbb
test
mov
jle
push
popa
fsub
in
popf
add
clc
lods
enter
sbb
sarl
cmp
and
fsts
dec
lret
popa
shrb
xor
rorb
stos
and
add
pop
mov
fwait
jne
jne
adc
xor
shll
dec
aaa
popf
cmp
push
aaa
add
je
out
add
lret
daa
leave
push
lret
sub
dec
rcrb
mov
push
xor
fdiv
in
jmp
inc
call
dec
in
pop
sub
dec
jecxz,pt
pop
mov
mov
jne
ret
xor
sbb
cltd
insb
jo
loop
in
mov
aas
push
mov
je
stos
lock
aas
pushf
mov
adc
neg
mov
mov
xchg
js
cwtl
adc
outsl
cltd
push
adc
push
dec
push
mov
mov
lods
push
xor
call
cmp
pslld
scas
ret
pusha
and
dec
or
push
push
ud0
mov
mov
gs
shrb
mov
pop
stos
pop
push
insb
push
add
cwtl
mov
fidivs
icebp
push
adc
inc
aaa
ret
inc
int
cmp
push
das
inc
lock
jge
sub
lea
stos
or
push
les
repz
push
and
jo
iret
pop
insl
ds
mov
pop
jl
jmp
cmp
jmp
pop
mov
add
movb
in
sub
push
mov
out
pop
push
test
lcall
incb
stos
xlat
jge
loope
test
rcpps
lods
push
xchg
iret
inc
pop
loopne
mov
shrb
ret
dec
fsubrs
ret
cmp
rol
scas
jb
mov
std
push
inc
xchg
call
mov
push
push
fbld
bnd
xchg
add
dec
cs
inc
mov
addb
mov
xor
adc
push
add
push
push
inc
xchg
je
push
ret
inc
sbb
or
push
iret
sub
push
xor
ss
mov
or
add
cli
lea
jne
inc
add
ret
js
movsb
ret
jae
int
mov
jne
pop
or
dec
sub
insb
jge
loope
test
cmp
add
cmp
jge
sbb
fiaddl
xlat
xor
pushf
fsts
adc
rclb
add
insb
xor
push
or
mov
push
jg
loopne
jmp
or
cld
or
pop
inc
stos
in
mov
shll
popf
sub
or
mov
inc
dec
push
cmp
mov
je
ret
mov
push
pop
push
pop
jle
addb
enter
call
pop
xchg
dec
or
mov
cld
repnz
pop
mov
call
pop
pop
or
jle
and
jnp
xor
or
mov
sbb
push
or
or
push
incl
mov
and
and
mov
jo
out
push
pop
or
add
rorl
rclb
add
xor
inc
sub
cmp
xor
add
push
mov
adcb
ljmp
out
adc
enter
inc
ds
pushf
xchg
push
push
cwtl
outsb
mov
out
dec
ja
aas
clc
add
mov
jp
mov
and
jmp
fiadds
xor
insb
mov
daa
je
inc
sahf
add
add
jnp
and
adc
cmp
sbb
sbb
dec
sub
imul
ljmp
lods
in
mov
popf
mov
stc
decl
mov
sbb
lret
cmp
adc
xchg
cmp
jbe
lods
xor
test
inc
xchg
xor
or
xor
jae
addr16
or
jbe
xchg
mov
js
inc
ss
js
test
cmp
movsl
push
dec
in
xchg
ss
dec
push
ja
mov
push
addr16
jmp
mov
cmp
sbb
pop
sub
sub
and
outsl
mov
add
or
sbb
push
jge
mov
push
pop
cwtl
push
push
push
loop
iret
adc
inc
add
ss
outsb
pusha
test
fistpll
push
adc
inc
mov
push
stos
inc
cmp
fcompl
pop
insb
add
mov
jge
ss
rep
cmp
add
sub
stos
push
iret
lret
add
nop
jo
xor
pop
adc
jp
add
or
aam
imul
pusha
dec
aas
adc
adc
mov
inc
xlat
push
adcb
testl
cmpl
jne
push
or
cmp
and
mov
out
push
mov
cmp
mov
in
jbe
push
jo
fnsave
sub
xor
outsb
loopne
cmp
mov
dec
sbb
inc
sub
sbb
and
push
movsl
push
and
add
sbb
push
jne
orl
adc
xor
pop
popa
fisttps
push
push
adc
ljmp
jle
push
sub
lea
repnz
jg
mov
je
inc
jmp
lea
rol
rolb
cmp
loopne
add
add
mov
sti
jb
mov
sbb
aas
add
sbb
push
add
test
adc
pop
push
adc
stos
hlt
fs
push
or
xor
js
mov
sbb
je
sbb
dec
add
loopne
cmp
xor
insb
dec
lcall
inc
adc
out
adc
adc
add
or
or
mov
lds
xor
rorb
adc
push
sub
inc
movsl
push
xchg
mov
dec
mov
add
out
dec
cmp
call
fiaddl
daa
test
imul
xchg
sub
mov
loope
inc
mov
stos
mov
push
shr
call
jnp
jle
dec
js
mov
jecxz
mov
shlb
or
pop
or
pop
jl
cmpl
push
jle
cwtl
and
jg
inc
mov
push
cmp
enter
sbb
popa
mov
inc
inc
xchg
jb
insb
sbb
sbb
dec
sbb
mov
pop
add
push
xor
adc
push
add
andl
sti
push
adc
cmp
xchg
xchg
mov
sbb
test
mov
pop
nop
repnz
mov
lea
push
inc
push
and
adc
in
mov
out
mov
adc
jo,pn
roll
call
loop
add
dec
fs
and
sub
pop
pop
pop
mov
sub
or
pop
xor
cwtl
fildl
test
cmp
or
lret
jne
cli
subb
add
push
stos
xor
rcr
mov
jp
adc
jmp
dec
pop
jmp
popa
jl
scas
cmp
pop
and
test
out
sbb
jp
inc
fildl
push
pop
call
xchg
xchg
sbb
fadds
inc
cmpsl
call
fiadds
dec
pop
inc
adc
sbb
orl
or
mov
inc
xor
or
push
dec
fcoms
pop
sbb
or
jle
movntq
lds
lods
orb
fstps
xlat
xchg
int
add
and
inc
mov
or
lds
inc
sar
popf
lahf
push
leave
xchg
add
fldenv
dec
addr16
xor
imul
add
pusha
insb
cmp
cmpsb
cmp
push
xchg
xor
push
xorb
lods
je
pop
andb
adc
or
or
cmp
insl
call
jmp
iret
sbb
fdivrs
mov
pop
jmp
loope
cli
mov
ret
imul
jmp
adc
xchg
loopne
push
popa
push
xor
xor
fsubl
pop
add
imul
pop
bound
in
in
jbe
rcrb
js
outsb
or
clc
add
mov
mov
fcoml
add
mov
adc
xor
sbb
push
popa
sub
pop
and
mov
add
jl
jg
pusha
and
dec
pop
lods
testb
push
clc
add
dec
repnz
add
ret
pop
xchg
add
ret
arpl
divl
mov
pop
dec
adc
ror
push
js
leave
cmp
sete
xlat
add
or
stc
enterw
pop
xorl
lcall
insl
fwait
lahf
clc
notb
adc
mov
addr16
nop
call
iret
jp
mov
lds
out
dec
xchg
jno
pop
pop
movzbl
movl
sbb
lahf
cltd
sub
ret
xlat
inc
cltd
pop
sub
in
pushf
insl
add
mov
pop
cltd
fcoml
cmp
jne
sbb
hlt
cmpl
jns
int3
loopne
call
mov
je
jns
push
xor
cwtl
faddl
xchg
lea
add
sub
mov
jnp
inc
mov
and
sbb
and
shrb
mov
xor
cs
inc
mov
mov
push
sub
scas
aad
into
push
add
pop
xchg
test
and
inc
inc
push
cmp
test
jl
sbb
jle
add
aaa
lahf
int
or
je
jne
sub
je
cmp
cmp
mov
loopne
and
cmp
shrl
sbb
or
cmp
rcl
into
sar
das
push
add
hlt
push
jbe
das
jmp
cmp
fidivrl
and
jae
insl
daa
mov
dec
jle
mov
aam
push
jg
sbb
insl
xlat
mov
jmp
push
test
or
inc
dec
mov
jns
pushw
dec
fistps
xor
scas
sbb
jle
ja
das
push
and
xor
inc
cld
and
rdpmc
jl
dec
mov
or
jg
sbb
adc
mov
dec
out
push
fwait
xor
add
pop
fcomps
adc
jle
jmp
iret
jg
rcr
pop
and
int3
dec
mov
call
inc
int
jnp
dec
push
sbb
ljmp
and
rolb
sub
or
push
xchg
loope
jne
icebp
test
mov
mov
mov
js
je
aaa
push
mov
jne
mov
and
je
lds
int3
push
and
testb
mov
push
inc
je
cmp
repz
std
xchg
fists
sbb
cmp
and
fildl
insl
shl
mov
fs
pop
daa
imul
push
adc
test
bnd
mov
jmp
push
xchg
scas
add
data16
mov
mov
mov
xor
sub
imulb
inc
dec
and
mov
dec
or
mov
inc
jge
mov
pop
clc
aas
sub
daa
pop
shlb
add
dec
adc
xor
stc
xor
pusha
inc
aas
cmp
shr
je
push
daa
negb
inc
es
xor
jno
add
push
in
mov
jle
push
inc
fisubl
les
mov
jmp
das
pop
jae
sahf
sub
push
xlat
lea
dec
fnstcw
repnz
cmp
roll
mov
bound
inc
sub
adcl
cmp
insl
sbb
push
mov
iret
push
inc
jmp
sbb
mov
jo
enter
repnz
sub
push
adc
cmp
sbb
push
xchg
inc
pop
cltd
test
lahf
imul
test
fisubrs
xchg
push
je
xchg
jb
adc
lahf
js
je
test
andb
imul
outsl
mov
jo
mov
jl
and
jle
xor
imul
jnp
xchg
in
ret
xchg
jo
jp
js
jns
mov
and
pop
ffreep
xchg
arpl
jno
jo
js
cwtl
jle
subl
test
mov
pusha
inc
imul
mov
mov
fisttps
adc
add
adc
jns
mov
sbb
pop
sbb
sub
mov
out
mov
cwtl
repnz
sbb
or
or
add
mov
xor
test
outsb
dec
pop
stos
and
je
rcll
sub
fsts
cmpsl
out
mov
pop
push
mov
sub
sub
xor
jne
aaa
bound
dec
xchg
sbb
pop
pop
ret
std
mov
inc
push
add
ljmp
ss
cmp
enter
mov
jo
push
push
push
adc
imul
pop
negb
adc
pop
in
and
outsl
mov
cmp
jo
jle
insl
adc
sbb
push
cmp
sbb
cmp
dec
pop
inc
or
push
into
pop
xchg
xchg
jge
cmp
scas
outsl
and
test
or
mov
rcrb
xor
mov
cmpl
mov
add
movl
int
mov
sbb
cmp
mov
sub
and
xchg
cmpsb
xor
inc
push
push
bound
lods
mov
sub
push
loope
xlat
inc
je
inc
pop
pop
push
pop
scas
pop
in
push
jne
adc
pop
inc
mov
fists
call
andl
out
sub
push
mov
insb
cmp
orl
adc
jecxz
movsb
mov
lahf
cmp
clc
lds
cmp
push
mov
mov
test
push
lea
add
lea
aaa
fstl
adc
das
mov
or
mov
mov
inc
orb
test
sbb
pop
inc
mov
adcb
cmp
add
jl
lret
mov
jge
push
pop
adc
pop
sbb
pop
and
cltd
xchg
bound
ret
cmp
inc
pop
sub
lret
add
push
or
sub
in
insb
mov
xor
notl
or
xchg
xchg
in
jno
or
xor
push
nop
dec
fimull
ss
push
add
and
pop
fwait
add
fimuls
pop
enter
mov
sarl
shr
fdivr
loopne
xchg
icebp
push
pop
push
xor
dec
es
adc
mov
add
mov
adc
fs
cmp
dec
add
in
push
sbb
or
dec
jo
fwait
xor
push
push
repnz
jo
je
push
mov
jge
and
cld
inc
add
dec
add
fstpl
test
hlt
cld
adc
mov
xchg
test
jp
push
mov
repnz
daa
je
sub
or
mov
inc
test
test
sahf
jbe
push
cs
push
push
xor
addb
notb
mov
sbb
mov
lock
clc
pop
mov
xor
and
es
adc
add
cmp
mov
push
test
mov
cmp
fcompl
push
or
aas
fsubl
icebp
inc
pop
sbb
jecxz
cs
push
mov
add
cs
test
inc
aas
pushf
lods
filds
sti
jne
clc
mov
js
cmpsl
sbb
hlt
sbb
adc
xchg
add
rcr
lea
xchg
lea
or
lea
lret
iret
xor
outsb
adc
lahf
int3
insl
jg
lods
jge
inc
xor
mov
dec
inc
mov
in
sbb
mov
sub
and
push
push
inc
dec
xor
bound
cmc
test
movsl
pop
push
dec
lcall
jge
xor
cltd
cs
push
cmpl
fisttpll
push
xor
inc
lods
push
pop
mov
cltd
push
lock
push
outsb
xchg
sbb
mov
jnp
sbb
js
add
and
insb
je
js
adc
call
je
aaa
push
sbb
mov
or
or
adc
mov
sub
push
in
loope
insb
and
pop
stc
sbb
jl
sub
pop
imul
xchg
xchg
inc
add
add
push
popf
nop
loope
jns
or
inc
push
lcall
ljmp
pushf
idiv
mov
sbb
mov
nop
movsb
test
fldln2
ds
lea
jmp
sbb
mov
stc
cmc
push
sub
push
xor
out
bound
push
jl
add
cmp
sahf
mov
xor
xchg
repz
das
jle
in
cld
xchg
jl
jne
inc
jmp
movsb
stc
pop
fdivrl
or
and
jae
inc
cmc
xorl
mov
daa
cld
push
inc
icebp
push
arpl
jle
adc
mov
dec
cmpb
or
gs
xor
enter
mov
ss
dec
insb
xchg
push
push
xor
inc
adc
ss
mov
jge
sub
push
mov
sbb
in
mov
jmp
xorb
nop
sub
loopne
out
cwtl
in
mov
or
inc
scas
test
ret
nop
mov
xor
mov
cmp
sub
roll
jecxz
add
cmpsl
push
daa
pop
insb
jge
out
sahf
mov
mov
cmp
repz
dec
pop
jno
inc
mov
ds
xor
out
push
cwtl
test
pushf
std
mov
dec
neg
lock
mov
lock
push
hlt
push
or
mov
mov
push
sub
mov
ds
mov
lods
scas
iret
push
push
fidivrs
jne
pusha
stos
test
cmpl
xchg
mov
add
mov
fdivl
push
fmul
mov
fcomps
in
jmp
mov
inc
jl
daa
add
mov
cmovs
add
lods
sub
add
inc
lods
insl
adc
clc
pminub
rcr
inc
or
ret
mov
cld
fmulp
pop
loopne
cmp
add
jo
loopne
sub
xchg
sbb
and
xchg
andb
mov
xchg
mov
mov
dec
bound
add
addb
xor
inc
push
nop
xchg
xlat
jmp
add
setne
dec
and
addl
add
mov
lods
adc
aaa
out
add
ret
mov
test
inc
jns
js
arpl
add
dec
outsl
push
out
fsubrp
pop
sbb
add
pusha
stos
lods
lock
xor
push
test
movl
or
dec
and
outsl
filds
inc
push
aas
mov
mul
xlat
imul
inc
jne
repz
xor
imul
add
movsl
pop
lea
push
adc
jns
out
lods
add
add
jns
sbb
adc
push
add
add
daa
test
repnz
aas
add
pop
or
lahf
lods
sbb
ret
pop
sub
les
jmp
jnp
mov
sbb
js
scas
adc
cmp
movsb
imul
mov
and
test
or
push
test
jg
and
shll
inc
sub
or
xor
pop
dec
rol
sbb
cmp
fisttps
out
and
push
cli
data16
lods
call
add
jle
push
pop
sbb
sarb
lods
orb
ret
fldt
or
jle
int3
popl
mov
or
cmc
mov
lret
dec
adc
mov
dec
jl
push
or
sarl
ret
lcall
push
add
or
lods
jo
push
in
les
push
decb
nop
les
ret
pop
in
ret
ret
loopne
pop
inc
inc
add
lods
sub
scas
push
fcmovnu
rclb
xchg
shlb
enter
cmp
dec
inc
inc
adc
sub
inc
pop
mov
insb
or
mov
xchg
or
jb
hlt
aam
je
inc
popf
jp
call
testb
fsubrs
into
sub
hlt
mov
data16
dec
or
add
mov
test
inc
or
es
jo
js
jg
inc
rcrl
lds
ljmp
adc
cmp
jg
mov
call
and
sub
aam
lret
dec
fdivrl
push
cmp
jle
fistpl
push
adc
icebp
or
test
je
loopne
imul
fstp
fsubrl
pop
jnp
push
sbb
dec
fxch
fmul
in
into
sbb
jnp
sbb
call
fnsave
dec
std
mov
shl
push
pop
iret
jmp
mov
sub
push
daa
imul
loope
pushf
daa
add
orl
out
addb
add
xorb
js
ret
dec
in
out
orb
dec
aam
mov
push
inc
vrsqrtss
mov
dec
call
push
or
xor
into
cmp
jge
fdivr
inc
sti
lea
cmp
and
add
mov
adc
sbb
push
xchg
int3
cmp
lret
push
test
pop
push
rorb
psrad
inc
and
push
xchg
mov
adc
pop
leavew
adc
pop
scas
add
inc
sbb
enter
stc
mov
insb
filds
push
cli
je
push
add
xlat
cmp
add
push
mov
jns
jbe
sub
push
rolb
fdivs
pop
shll
rcll
cmpsb
push
xor
add
je
dec
sti
push
sti
pop
or
shrb
movsl
xchg
enter
pop
ret
pop
test
adcl
xor
pop
out
daa
iret
shlb
and
mov
clc
out
xor
push
pop
mov
test
inc
sbb
xorb
pop
sub
push
or
mov
push
out
adc
test
sarb
dec
jle
cmp
in
mov
or
cltd
and
sbb
xor
test
test
xchg
fimull
mov
dec
sub
dec
movsl
add
pop
mov
int3
cmp
adc
xor
inc
jo
out
and
sbbb
ja
in
xchg
mov
imull
xor
fldcw
mov
enter
sub
hlt
mov
sub
add
inc
xor
add
ds
add
je
push
sbb
push
xor
hlt
pop
fs
pop
push
cmp
inc
push
ja
mov
sbb
mov
mov
leave
fwait
cmp
je
cmp
pusha
push
js
and
pop
inc
push
cmpsb
rolb
mov
enter
pop
dec
rcrb
mov
pop
cmp
or
in
sahf
mov
add
ret
dec
dec
ja
int3
repnz
les
ret
sub
nop
xchg
mov
lds
sbb
pop
push
cmpb
push
pushf
jo
int3
je
adc
push
in
mov
orb
add
add
push
adc
push
sbb
ret
out
jb
mov
dec
add
add
dec
sbb
xchg
mov
lock
loopne
addr16
dec
xchg
jmp
add
add
xlat
mov
xchg
pop
mov
jne
fidivrl
in
adc
fisubs
data16
inc
out
repnz
sbb
fs
push
ds
bound
xor
sub
dec
cmp
sub
cld
and
lods
mov
push
sbb
push
jmp
push
test
mov
popa
sub
push
adc
jge
jmp
sbb
lods
fs
or
jmp
pop
or
fmulp
push
push
and
or
or
inc
push
mov
aas
lods
bound
or
xor
dec
xchg
out
scas
ret
push
jae
sub
clc
push
fwait
insb
ss
and
push
add
xor
ds
adc
cli
mov
mov
cmp
stos
cmp
cmp
push
or
sbb
jge
pop
imulb
xor
fisttps
fsubr
dec
repz
jnp
loop
push
push
dec
fdiv
cmp
inc
push
dec
dec
add
add
or
cwtl
dec
push
adc
dec
push
iret
xor
push
jbe
cmp
je
daa
or
or
cld
ss
jo
xchg
inc
sbb
dec
and
pop
adc
aaa
inc
outsl
sub
mov
push
dec
dec
idivb
inc
mov
dec
adc
xchg
imul
and
gs
adc
sub
jb
scas
inc
mov
push
enter
jecxz,pn
je
mov
test
imul
dec
cs
xor
insb
xor
jmp
xor
addr16
loopne
cmp
mov
std
jle
pop
loop
inc
add
xor
test
add
push
xor
inc
xchg
nop
inc
inc
and
fs
xlat
and
push
add
pushf
or
shrb
push
loop
cmp
sbb
lahf
or
push
push
dec
or
or
sub
push
or
test
stos
sbb
stos
push
inc
lcall
and
in
mov
js
mov
addl
add
add
sbb
iret
mov
add
mov
imul
or
jl
or
mov
pusha
pusha
push
adc
jo
pop
jecxz
mov
add
arpl
push
xchg
test
mov
sbb
clc
mov
xchg
pop
out
imul
xchg
loopne
and
das
push
fnstcw
jnp
add
sbb
mov
pop
lea
mov
pop
or
push
sbb
adc
clc
pop
inc
jecxz
cmp
cmc
jne
out
mov
lds
aas
jne
pusha
mov
sbb
or
add
or
cmpl
icebp
in
in
pop
andb
xchg
mov
cmpb
out
inc
shl
adc
add
sbb
push
test
add
adc
pushf
sbb
lret
mov
mov
js
sub
mov
subb
or
rclb
sub
xchg
outsl
lret
jb
pop
scas
subl
ficoml
adc
fistl
movl
into
loope
aaa
add
xor
fsubrs
sub
mov
and
sbb
je
adc
arpl
or
loope
add
mov
test
add
mov
or
in
outsl
add
xchg
adc
sbb
xchg
dec
mov
sub
pop
stc
and
add
stc
mov
push
sbbb
sbb
lahf
jecxz
mov
sahf
xor
mov
fs
pop
and
mov
sub
or
mov
jo
fimull
imul
js
in
dec
sub
xchg
pop
add
xor
je
or
fisubs
je
and
sahf
mov
fdiv
add
fcomps
add
lea
mov
dec
jecxz
imul
lods
jo
punpcklbw
xchg
fld
test
cmp
push
pop
mov
dec
out
fld1
add
mov
shrl
data16
push
jnp
dec
pop
shlb
mov
add
and
sbb
loopne
dec
push
cmp
add
cmp
enter
incl
loope
add
mov
movsb
cmp
xor
sahf
inc
push
repnz
push
adc
mov
es
push
add
jo
mov
xchg
push
scas
loopne
push
xor
push
hlt
rolb
mov
test
sbb
jbe
dec
adc
enter
mov
daa
imul
mov
mov
jo
push
xchg
inc
fdiv
add
inc
loope
fsts
sbb
add
push
push
not
mov
pop
cmp
push
mov
aam
add
and
jle
aam
sub
jle
in
sub
xchg
ret
lea
das
jo
push
add
lret
mov
add
pop
and
xchg
scas
fists
add
repnz
loope
movsl
lds
and
divl
pop
xchg
and
mov
dec
xchg
or
sbb
sub
adc
pop
and
mov
test
lods
in
iret
or
test
add
inc
or
push
lret
jne
or
aas
push
push
dec
inc
xchg
dec
add
cmc
imul
divl
pop
mov
xor
test
pop
xor
jmp
pop
xor
mov
or
pop
fadds
lock
pop
pop
add
pop
inc
shlb
insb
xor
push
repnz
stos
adc
or
xchg
mov
cmp
negl
jmp
push
mov
pop
out
mov
loopne
mov
or
inc
pusha
outsb
pop
stos
push
mov
dec
sahf
mov
shll
in
mov
incb
adc
js
ds
pop
es
cmp
je
mov
call
into
insl
lea
mov
fimuls
push
lcall
xchg
add
leave
popf
mov
adc
roll
out
sub
ds
and
outsb
in
outsb
xor
nop
lret
outsb
lds
pop
dec
subb
sahf
xor
leave
pop
pop
lret
add
pop
enter
mov
push
imul
fisubs
loop
adcb
ficompl
fstps
pop
les
inc
mov
rolb
sub
push
rolb
xchg
or
mov
js
pop
aad
test
push
cmp
pop
mov
add
fidivl
inc
adc
mov
loopne
cmp
inc
dec
xchg
ja
mov
pop
mov
push
push
and
add
sbb
add
cwtl
daa
push
or
jbe
jb
cmp
add
jnp
inc
mov
loopne
insb
push
cltd
lods
inc
fsubl
dec
sbb
add
mov
adc
add
dec
and
dec
push
neg
sbb
and
push
jb
jb
push
add
sub
lds
sub
xchg
fsubr
imul
push
das
push
fsubrl
push
xor
sbb
je
mov
aas
add
decl
or
pop
add
inc
pop
inc
xor
mov
inc
jo
andb
sub
icebp
add
dec
sub
sub
push
lods
push
push
push
xchg
loope
hlt
ss
or
sbb
sub
sub
pushf
pop
loop
adc
test
add
add
and
lods
pop
adc
imul
jmp
loopne
mov
ret
xor
lds
adc
or
outsb
lock
mov
aad
loope
add
data16
lods
icebp
sub
mov
subl
xor
add
sub
or
rclb
inc
out
xor
add
sbb
cmp
outsl
cmc
fdivs
pop
jmp
push
jmp
push
xchg
jnp
pop
ja
loopne
data16
and
call
xor
push
popa
inc
or
push
aad
in
lods
outsb
sahf
test
mov
mov
add
out
sar
mov
shr
add
pop
mov
imul
and
loop
jl
sbb
and
sbb
jo
pop
add
movsl
inc
popa
cwtl
and
ret
mov
mov
fstpl
insb
inc
xor
ljmp
xor
mov
pop
insb
outsl
mov
push
addr16
adc
adc
push
decb
jle
jecxz
xchg
push
scas
dec
aas
pop
outsl
jecxz
mov
out
loope
enter
xchg
addr16
xchg
inc
push
sub
adcb
or
add
or
ja
pop
mov
je
jns
shrb
xchg
pop
mov
adc
xchg
push
jg
loop
push
jo
pop
and
xor
mov
or
push
pusha
rcr
lea
xor
or
fs
mov
je
int3
or
iret
aam
mov
cmp
mov
sub
add
push
cld
push
push
popf
xchg
inc
cmp
jo
in
mov
ret
inc
je
imul
xchg
ja
in
xor
mov
or
orb
add
cmp
push
push
jle
mov
sbb
adc
mov
mov
sbb
or
stc
out
out
subl
inc
and
dec
out
add
mov
jg
loop
adc
and
call
lods
aas
gs
pop
dec
stos
xchg
mov
in
add
pop
and
ret
mov
test
sbb
xchg
dec
and
add
add
push
scas
xor
dec
cmc
sub
jno
or
mov
xchg
mov
in
xchg
push
mov
lahf
jp
pushl
sub
inc
shr
rolb
or
sbb
inc
stos
cmp
sub
xor
add
xor
add
add
and
sbb
fisubs
ret
inc
cmp
js
mov
pop
sub
lret
add
mov
loopnew
iret
add
adc
jmp
or
push
cmp
pusha
add
or
sub
lock
dec
dec
inc
sbb
inc
mov
setbe
iret
cmp
mov
pop
jl
cmp
xchg
cmp
sub
sub
ds
jmp
inc
repnz
mov
stos
movsl
outsb
sbbl
lock
push
push
push
das
inc
pop
mov
negb
adc
sub
push
test
push
out
xchg
pop
sub
push
lea
jp
inc
fdivp
ret
inc
je
mov
xchg
cli
imull
sbb
data16
loopne
xor
xorb
pushf
rcr
mov
arpl
adc
imul
imul
mov
pusha
lahf
xor
cli
or
dec
push
addr16
mov
inc
sub
dec
lcall
xor
int
loopne
ret
add
aas
fstl
push
out
pop
adc
sbb
pop
push
adc
mov
push
lea
xchg
mov
pop
and
fimull
pop
dec
fildl
mov
and
pop
movsb
or
dec
loopne
or
sub
add
out
setl
dec
push
xchg
sub
dec
push
mov
pusha
add
dec
mov
sysenter
inc
push
cmp
or
inc
push
sbb
push
push
or
fildl
aas
shll
pop
repz
cmp
inc
nop
pop
rcrb
cmp
jecxz
shlb
mov
push
dec
sub
cmp
push
xchg
mov
outsb
loope,pn
insb
cmp
add
movsb
jmp
iret
repz
mov
xlat
call
jg
nop
add
lock
push
and
dec
idivb
cmpsb
in
test
aad
daa
loope
mov
lea
sahf
ljmp
xchg
loopne
fiadds
inc
pop
push
push
lods
sbb
push
mov
call
mov
pop
cmp
xchg
jo
sbb
xor
add
or
test
repz
cmp
mov
add
adc
cmpsl
mov
js
dec
push
loop
dec
rclb
push
add
or
mov
xchg
insl
add
dec
push
test
inc
mov
mov
stc
push
pop
push
js
or
cmp
xor
pop
enter
adc
nop
pop
xorl
pop
or
lock
clc
adc
mov
mov
cwtl
push
cwtl
push
rorb
or
add
in
jecxz
xor
jo
out
scas
negb
lahf
lds
icebp
push
add
mov
mov
nop
or
add
add
shlb
mov
ret
addr16
jg
sahf
dec
cwtl
shlb
xchg
lahf
inc
js
dec
jl
adc
jae
mov
movsl
je
sbb
add
add
dec
test
inc
sub
inc
lcall
lea
stc
lods
dec
jmp
xor
cmp
pop
push
fcompl
test
ja
push
test
xchg
push
jp
adc
in
push
pop
aaa
mov
jmp
into
sub
jmp
sub
jmp
add
adc
dec
jmp
add
or
outsl
push
je
xor
push
mov
add
push
lcall
fiaddl
push
jle
aam
mov
push
inc
inc
sahf
push
rclb
sbb
les
rolb
lods
push
pop
lea
push
frstor
jmp
sbb
mov
scas
in
mov
mov
idiv
push
mov
add
push
jmp
js
rcll
cmp
nop
push
test
cmp
pop
or
adc
mov
stc
mov
inc
lcall
xor
and
fstps
aas
inc
or
adc
adc
and
ljmp
jecxz
add
adc
stc
lods
mov
and
les
mov
xchg
push
test
dec
mov
shll
nop
sub
add
lods
or
push
xor
or
nop
mov
cli
fwait
adc
int
test
dec
jg
ret
jo
les
cmp
add
movsb
pop
add
mov
dec
and
aas
dec
push
inc
pushf
xchg
jecxz
pusha
cmp
and
mov
pop
bound
add
pop
xor
cwtl
cmpsb
push
mov
push
and
rorl
les
mov
mov
sbb
fcmovb
push
jo
fcmovu
into
sbb
insb
loop
adc
jbe
les
rorb
cmpsl
push
imul
or
push
fs
sub
test
push
cmp
mov
je
push
jl
ljmp
dec
loope
shl
or
lods
and
imul
jle
add
inc
jo
push
cmp
clc
jo
xchg
in
ret
or
xchg
shl
sbb
in
push
inc
push
sti
sbb
jmp
push
sbb
or
or
push
sti
push
insb
mov
xor
gs
insb
inc
add
pop
test
xchg
push
push
cmovo
pushf
inc
mov
shrb
daa
cmp
movsl
add
and
mov
in
or
andl
dec
and
lods
pop
dec
pop
or
xchg
adc
xchg
or
mov
or
mov
push
dec
and
pop
rcll
pusha
adc
pop
shll
push
sarl
mov
push
push
xor
das
mov
mov
shll
push
mov
mov
pop
cwtl
cmp
pop
das
enter
test
pop
mov
ret
pushf
cmpsl
stc
cmp
cld
xor
xchg
icebp
jae
shrl
ja
nop
int3
mov
hlt
scas
mov
mov
cltd
push
stos
fdivrl
iret
repz
leave
dec
push
rol
push
ret
jl
fisttps
xor
xor
mov
mov
nop
aas
mov
mov
sub
xor
mov
pop
lds
push
jbe
pop
push
loope
subb
jg
add
xor
inc
or
sbb
adc
sbb
cs
sbb
add
sub
add
mov
jge
push
pop
and
or
cmpsb
cmp
dec
sbb
sbb
fs
dec
and
push
in
inc
es
xor
inc
mov
add
ret
mov
rorb
inc
dec
test
hlt
sub
adc
inc
or
or
and
add
add
repnz
add
xor
mov
inc
cmp
ret
addl
andl
xor
ret
add
add
inc
or
sti
mov
xor
add
lcall
ja
dec
and
fdivs
or
pusha
jnp
inc
push
jle
outsb
adc
add
and
add
rcrb
outsl
lea
jne
mov
pop
sbb
add
fs
or
shll
push
add
push
fwait
cmp
and
push
jae
push
adc
out
push
outsb
push
pop
ret
mov
imul
pop
lea
push
repz
add
push
push
adc
push
dec
sub
xchg
or
imul
or
pop
ss
push
or
sbb
fs
idivb
fnstcw
je
xor
loop
fcomip
sub
sbb
push
sbb
add
int
lret
out
add
repz
adc
dec
fistpl
jecxz
xor
cmp
or
xchg
cmpsb
mov
rcrl
and
and
mov
je
jb
aad
cmp
int
inc
xchg
mov
sbb
add
fimuls
outsl
push
push
xchg
dec
dec
es
or
and
cs
inc
push
mov
shrb
xchg
sub
mov
mov
sub
inc
mov
mov
aas
imul
add
enter
push
push
lock
pop
jne
stos
rcll
sbb
add
inc
push
jmp
flds
and
sbb
dec
outsl
dec
pop
cmpl
inc
lcall
push
inc
xor
int3
cli
iret
cmp
sub
int3
mov
sub
mov
adc
mov
stc
adc
jnp
push
pop
or
pop
xchg
adc
lods
dec
aas
mov
mov
or
adc
out
mov
push
xchg
stos
add
int
cmp
xchg
add
iret
sbb
xchg
jecxz
mov
ret
stos
rcrl
push
movsb
popa
fprem1
aam
shlb
add
push
cld
dec
push
xorb
cmpsl
jns
iret
xchg
adc
pop
movsb
mov
sub
or
inc
inc
push
push
pop
mov
and
dec
dec
xor
dec
fs
xchg
lock
push
cmpl
xchg
push
out
jno
and
inc
adc
push
pop
into
pop
mov
movsb
lea
pop
xchg
orl
sub
sbb
insb
dec
push
pusha
fs
insb
fwait
nop
jns
xlat
adcb
push
jb
xchg
repz
out
rcll
shlb
xor
inc
mov
pop
push
lret
nop
pushf
ror
xor
push
scas
je
inc
js
and
add
sub
pcmpeqb
jecxz
shlb
jmp
aas
in
sub
xchg
cmp
aas
adc
sbb
xor
push
push
push
xor
cli
mov
pop
sti
push
push
test
mov
push
and
add
pop
lock
imul
or
add
add
lahf
sbb
adc
inc
adc
sub
fsubrl
punpckhbw
mov
cmp
sub
cmovl
mov
aas
xorb
pushf
jg
jb
add
jne
mov
in
inc
lds
mov
addb
imul
cmp
dec
xchg
jg,pt
jg
test
pop
inc
dec
sbb
pushf
cwtl
or
sub
xchg
cmp
add
mov
movzbl
push
add
movsb
clc
sub
add
add
or
sbb
inc
clc
or
jmp
pop
rorb
stc
push
jb
dec
push
fstps
xchg
xchg
and
add
cld
push
pop
inc
clc
addr16
sub
jbe
scas
xor
push
mov
jne
iret
hlt
dec
jb
xor
xor
dec
xchg
ljmp
mov
inc
pop
jne
or
and
in
cltd
arpl
dec
or
or
add
test
pop
stc
rolb
gs
stc
mov
aas
mov
filds
insb
or
add
add
push
or
xlat
add
scas
aas
lret
sub
test
pop
xchg
inc
add
clc
and
stc
mov
xor
push
cmp
add
sub
cmp
inc
add
or
hlt
scas
cmp
mov
jmp
adc
push
add
and
xor
cmp
xor
pop
pop
dec
add
inc
mov
or
loopne
mov
mov
xchg
adc
out
mov
cmpl
lds
inc
push
push
lret
jecxz
mov
add
pop
sti
mov
mov
xchg
icebp
xor
inc
inc
inc
lcall
rol
mov
sub
outsb
roll
sub
mov
je
aas
fcompl
mov
xor
sub
dec
or
mov
call
dec
mov
sbb
int3
xchg
push
aam
imul
add
mov
adc
dec
mov
in
push
mov
loopne
sahf
pop
shlb
cmpsb
pusha
add
pop
push
xchg
sbb
lret
add
dec
and
repnz
mov
cltd
mov
testl
pushf
rcl
dec
ret
xchg
push
cwtl
xor
pop
adc
test
je
xor
mov
sahf
or
cmp
and
pop
adc
push
aad
sbb
test
loope
xchg
sub
adc
mov
push
cmp
dec
cmp
inc
mov
pusha
pop
sub
ljmp
fs
add
push
outsl
ret
mov
testl
push
test
mov
mov
mov
mov
das
push
daa
xchg
push
lea
jg
or
jnp
cltd
std
dec
or
and
shrb
inc
jle
and
cltd
ss
push
xchg
test
test
ja
pop
fwait
test
loop
xor
out
and
xor
or
dec
mov
lds
aas
out
and
mov
cmp
inc
aas
jg
jne
pop
adc
pop
aas
bound
jl
ljmp
jbe
ficomps
aas
cs
outsb
sbb
arpl
add
pop
or
or
clc
mov
or
clc
push
push
out
clc
test
cmp
lock
decl
roll
sub
cmp
cmp
mov
shl
ret
pop
sbb
push
add
pop
cmp
stos
add
mov
clc
in
sub
push
cld
add
ret
fistpl
inc
into
outsb
aas
lods
bswap
mov
nop
cwtl
ss
cltd
test
lahf
mov
imul
jne
mov
jb
sub
mov
faddl
pop
or
orl
stos
popf
aaa
dec
add
pusha
and
sbbb
aas
inc
push
push
lea
outsl
or
adc
dec
cmpsb
or
test
lahf
sub
ljmp
std
inc
or
cmpsb
push
outsl
addb
fisttpl
jne
ds
jle
test
pop
ret
inc
fucomi
rorb
clc
xor
add
mov
into
imul
aas
ret
lea
sbb
xchg
mov
push
adc
pop
mov
mov
mov
dec
push
xchg
adc
outsl
inc
push
sbb
sahf
or
mov
xchg
adc
and
lock
xor
or
adc
dec
dec
es
cmpsb
or
xchg
mov
add
add
cmp
jl
push
push
jmp
and
and
lret
lea
or
push
movsl
pop
in
push
jb
mov
lea
xchg
jp
or
adc
adc
sub
mov
xor
sbb
xor
fiaddl
mov
sbb
ljmp
mov
mov
adc
in
test
fadds
cmp
add
push
loope
cmp
pop
inc
dec
cltd
out
inc
jmp
pop
popa
les
pop
mov
inc
stos
xor
or
daa
sub
addl
push
popa
xchg
pop
sbb
push
push
pop
push
imul
pop
dec
jb
clc
test
popf
sub
and
js
outsl
sbb
and
ret
loope
jae
or
and
fsubrs
ret
aad
jno
mov
xlat
test
mov
js
add
sub
push
inc
rclb
dec
inc
sbb
out
and
or
leave
xchg
mov
sbb
int3
rolb
mov
xor
addb
incl
jb
xchg
adc
push
pop
loop
xchg
xorl
push
push
mov
dec
push
dec
push
sbb
shlb
push
lcall
pop
call
add
inc
pusha
push
call
adc
pop
sbb
rolb
icebp
add
ljmp
adc
xor
cs
jmp
add
add
decb
fldenv
call
push
push
mov
inc
ficoms
push
dec
lock
inc
inc
repz
or
push
and
add
cmpsb
and
jl
imul
clc
push
call
mov
push
out
cmp
sbb
push
pop
cmp
mov
inc
push
dec
mov
insl
adc
inc
sub
cmp
ss
cmp
inc
fistl
test
pop
decl
testb
out
lcall
mov
adc
lahf
cmpsl
call
inc
ljmp
mov
add
inc
pusha
test
iret
repz
movsb
mov
inc
cmp
repz
call
adc
mov
sub
loope
loopne
sti
or
dec
rcll
out
push
dec
leave
shll
dec
pusha
or
sbb
sub
push
adc
push
ret
add
mov
xor
add
in
insb
mov
add
push
adcl
js
xorb
dec
shl
cs
out
js
rclb
dec
or
sbb
daa
cmp
aas
add
and
pop
dec
inc
push
ljmp
aas
jmp
shrb
adc
pop
or
push
dec
mov
sbb
push
cmp
adc
icebp
cmp
fisttpll
or
mov
fiadds
xchg
sarb
or
add
adc
dec
sbb
in
add
bound
dec
mov
jne
out
mov
or
ffreep
and
pushf
mov
cmp
cmp
daa
jno
clc
loope
cmp
jne
jmp
imul
adc
dec
lret
xor
sbbl
adc
cmp
jbe
cmp
je
ss
or
inc
cmpl
shrl
push
push
pop
mov
loope
mov
cmp
fistpl
or
sarl
xchg
push
aad
pushf
unpcklps
orb
pop
inc
sbb
jns
or
das
adc
mov
clc
es
test
add
add
mov
and
cli
rorl
stos
int
or
sbb
das
ja
xor
loope
push
and
cmpsl
enter
pop
add
push
cmp
in
sub
cmp
wrmsr
nop
adc
xchg
repz
insl
sub
cmp
push
orb
adc
mov
pushf
xchg
push
notl
add
push
popa
addr16
in
sbb
je
jne
imull
out
pop
add
into
jns
xor
push
clc
push
out
rorl
loopne
popa
lods
push
pushl
jmp
lea
fists
sbb
push
loope
shrl
repnz
daa
jmp
movb
hlt
mov
rorl
push
fists
pop
insb
mov
mov
xor
fstpl
inc
fimuls
jb
hlt
mov
mov
inc
lods
add
sub
dec
pop
lahf
jg
add
int
xor
inc
dec
outsb
xchg
sub
sbb
dec
jb
xchg
adc
xchg
cmp
aam
mov
push
push
cli
es
inc
push
sbb
xor
sub
adcb
add
popf
add
clc
xor
int
ret
test
pop
inc
push
push
jo
addr16
jo
and
sub
add
clc
ja
adc
int
or
inc
dec
je
or
dec
test
push
ret
push
sub
mov
add
inc
push
loopne
add
imul
push
push
dec
rol
test
lods
in
loop
dec
add
add
adc
insb
cmp
flds
add
sbb
icebp
jns
sti
ss
and
add
daa
xor
add
sub
rcrl
fisttpl
or
sub
movsb
mov
xor
pop
pop
pop
fneni(8087
rcl
pusha
pop
jl
sub
sahf
add
add
bound
add
pop
sti
out
cmpsb
loopne
lahf
aam
jle
ret
and
and
push
inc
or
sub
mov
sbb
sbb
jg
in
push
sbb
or
add
jb
jg
jmp
jns
fwait
mov
add
movsl
setne
mov
leave
inc
and
mov
xchg
push
push
jns
in
lods
add
jne
shll
push
push
cmp
jp
decb
pop
mov
rclb
sub
mov
inc
cmp
and
pop
les
adc
dec
nop
ss
lret
shlb
rorb
je
inc
xlat
sub
mov
cld
adc
inc
loop
xchg
call
inc
inc
mov
nopl
dec
xor
mov
int
ss
adc
push
and
shrl
nop
imull
lods
add
xchg
hlt
mov
mov
or
pop
pop
push
and
jns
cmc
lock
dec
lods
scas
inc
rcll
movl
and
mov
call
js
jmp
adcb
dec
ds
jo
add
mov
loopne
pop
fildl
xchg
pop
lcall
mov
or
add
cmp
test
ss
faddl
mov
and
pop
jmp
adc
push
xchg
das
jecxz
or
xchg
add
or
sbb
and
jle
in
xor
mov
xor
nop
push
call
adc
or
pushf
enter
pop
mov
movsb
enter
lret
jmp
enter
pop
clc
mov
enter
xor
into
push
inc
add
sbb
or
adcl
addr16
jmp
sub
nop
sub
cmpsb
bound
xchg
faddp
pushf
mov
ffreep
xchg
sub
pop
or
adc
xchg
mov
lods
xchg
add
adc
inc
adcl
xor
push
imul
sarl
lahf
xchg
pop
inc
dec
add
movsb
out
dec
cltd
add
in
rorb
sbb
movsb
shrb
mov
mov
in
mov
xchg
pop
hlt
add
and
add
inc
les
inc
je
and
push
cmc
add
jge
sub
cmpb
mov
or
adc
add
int
lret
xchg
shrb
or
and
lahf
mov
dec
ret
lahf
enter
add
andb
pop
or
pop
jns
in
repz
xor
adc
adc
inc
fbstp
mov
add
jg
sub
jle
imul
sbb
movsl
in
xchg
mov
jno
imul
inc
lahf
or
adc
mov
andb
rcrl
loopne
inc
cmp
xor
push
add
dec
cltd
dec
cwtl
pop
pusha
inc
fs
push
leave
fistpll
out
loop
inc
jne
call
dec
aaa
hlt
inc
pop
inc
add
lcall
jl
movsb
lea
stc
or
push
xor
or
push
sahf
pop
mov
ror
add
cmpsl
mov
or
sub
ljmp
mov
or
mov
jno
push
pop
add
aam
cmp
adc
add
xor
mov
test
sub
cmp
add
cmp
or
out
mov
jb
loop
lahf
in
test
incb
jb
mov
push
sbb
ss
popa
dec
jae
push
inc
push
outsb
push
icebp
sub
push
pop
push
add
jle
aaa
xor
jns
cmp
inc
cmp
pop
out
push
insb
aas
dec
sub
xchg
lar
mov
inc
adc
movsb
sbb
or
sub
mov
loop
cmpb
push
jge
mov
inc
mov
xorb
xor
subb
jne
out
cmp
adc
into
or
lds
dec
or
push
push
fucom
mov
and
jne
or
push
dec
loopne
push
out
mov
dec
xor
or
ret
xor
or
rclb
enter
cmp
mov
cmp
pop
inc
push
jg
subb
jg
pop
sbbb
dec
pop
mov
xchg
pop
pop
cmp
jp
shrb
mov
fs
push
xor
in
xor
mov
rorl
dec
dec
xor
inc
fmuls
fst
adc
add
add
xchg
cmp
lods
imul
lcall
push
mov
inc
cmp
jle
mov
pop
push
int
call
adc
push
jmp
lds
in
mov
sbb
pop
mov
dec
and
movsb
xchg
out
jbe
jmp
nop
pop
out
pop
mov
sub
leave
ret
mov
scas
incl
mov
add
push
mov
lods
adc
imul
inc
notl
push
xchg
xchg
rolb
ja
jmp
or
pop
bound
sbb
and
shrb
cmp
scas
inc
push
sbb
ljmp
add
out
nop
and
push
or
xchg
and
dec
std
add
mov
not
pop
call
sub
stos
push
cmp
jge
jge
lods
or
dec
dec
insb
cli
lret
mov
mov
scas
sub
lods
push
js
outsl
rorb
std
push
push
adc
clc
pop
pop
inc
push
icebp
adc
dec
hlt
mov
mov
sub
arpl
push
fcom
in
pop
pop
push
mov
ds
or
mov
cmpl
add
push
xor
enter
dec
adc
or
bound
cmp
jb
pop
in
fldenv
imul
movsb
cltd
dec
pop
mov
stos
daa
shr
dec
outsl
pop
xchg
lea
xor
push
adcb
xor
push
je
lock
jbe
xor
xchg
or
rcrl
inc
loop
adc
push
dec
adc
pop
mov
push
sbb
dec
imul
push
push
pop
sub
mov
adc
jmp
and
jo
rclb
adcb
sub
dec
mov
test
rcr
in
sub
mov
pop
dec
sbb
mov
sub
push
pop
xor
pop
test
jns
pop
nop
cmp
xor
push
mov
int
or
jns
sbb
lahf
sahf
ds
sbbb
mov
add
popf
jmp
popa
add
sub
movsb
sub
adc
mov
pop
jne
dec
repz
cs
push
inc
adc
inc
stos
push
in
aas
dec
or
rorl
cmpsb
xchg
push
push
inc
push
shrb
outsb
adc
and
dec
pusha
push
cmc
insb
adc
or
push
cli
and
pop
inc
xchg
imul
xor
scas
mov
xorb
xor
pop
les
xchg
push
dec
adc
imul
cwtl
cltd
xor
push
je
or
lahf
xor
push
pop
outsb
ljmp
mov
test
jbe
push
rorl
cmp
jbe
mov
push
xlat
js
adc
cs
push
mov
or
mov
fdivr
lea
cmp
add
popa
or
pop
dec
pop
xchg
pop
js
or
sub
nop
stos
enter
mov
leave
pop
das
negl
mov
lods
dec
or
lock
cmc
xchg
cmpl
push
int
jns
xchg
mov
jns
cmpsl
stc
cmp
adc
jmp
or
fldenv
ss
adc
dec
cmp
and
add
add
loopne
ja
in
insb
sub
and
in
lahf
pop
dec
psrad
push
insb
jo
push
or
push
outsb
sub
add
cwtl
sbb
push
push
jmp
jns
mov
test
xor
mov
push
popf
lods
mov
mov
je
push
fisttpl
les
adc
in
pop
dec
xchg
addl
add
jo
es
dec
jl
add
or
in
rcrb
jb
sub
enter
add
sbb
pop
xor
inc
fs
dec
sbbl
sbb
aas
pusha
in
and
or
adc
js
push
cs
push
adc
cmpsl
add
mov
adc
jle
sbb
cwtl
adc
dec
push
aam
pop
mov
xchg
and
mov
sbb
pop
dec
in
ret
add
add
dec
fs
mov
lods
test
mov
inc
inc
loope
pop
and
lret
in
mov
push
ss
add
in
mov
add
adc
add
stc
mov
inc
sbbb
fsts
or
push
pop
xor
mov
add
rolb
and
push
sbb
jbe
sbb
xor
push
lret
sti
call
or
pusha
or
push
xchg
or
xchg
mov
sbb
sbb
xchg
roll
into
out
jg
leave
mov
mov
pushf
sahf
mov
mov
cmp
ds
mov
pushf
sbb
sbb
xchg
or
cmp
mov
dec
or
das
add
and
in
test
adc
les
inc
pop
or
adc
pop
sub
sbb
jl
add
sbb
push
clc
jge
fwait
sub
mov
and
enter
dec
mov
es
push
xor
inc
imul
mov
mov
pop
xor
xchg
and
push
pop
sbb
enter
mov
xchg
mov
sub
cmp
or
out
mov
ja
push
mov
stos
mov
negl
ret
mov
lods
or
pop
les
call
lahf
mov
lahf
std
add
rclb
enter
mov
sbb
and
mov
push
cmp
lahf
push
push
rolb
nop
mov
sub
test
push
lods
xchg
pushf
shrb
mov
lahf
ja
mov
aas
incl
or
movsb
dec
dec
and
dec
pusha
aad
aas
add
and
pop
jbe
les
and
inc
movsl
add
aaa
add
or
out
das
adc
xor
enter
jnp
loop
jl
mov
mov
adc
jle
mov
add
sbb
push
or
and
setnp
ficomps
movsl
roll
inc
cmp
add
mov
add
das
push
xchg
stos
add
pop
or
lock
xor
push
sub
jnp
or
insb
je
mov
jge
mov
mov
ret
js
in
int
bound
ret
jge
xor
push
leave
aad
pop
jl
mov
lods
pop
push
cmp
mov
push
lea
sti
jl
push
aam
mov
imul
insb
scas
in
lock
or
jne
mov
cmpsb
cmpsb
imul
adc
sbb
xor
and
or
lods
push
out
mov
loop
jne
inc
cmp
jl
mov
jg
and
dec
sbb
mov
mov
pusha
push
pusha
test
je
pop
sub
aaa
dec
add
pusha
jne
lcall
pop
lods
pop
push
and
mov
fmuls
dec
pushf
or
xchg
pop
sub
cmp
cmp
pop
cwtl
add
add
cltd
mov
stos
nop
adc
mov
out
dec
negl
sbb
mov
xchg
mov
cmp
push
and
mov
shlb
adc
mov
add
lcall
pop
or
push
jae
add
jo
je
js
cmp
jbe
jl
xor
test
or
ja
jb
test
cmp
xchg
mov
mov
mov
testl
mov
sti
cmc
add
out
subb
mov
push
lock
clc
pop
jns
out
or
jns
xor
or
dec
add
repnz
push
push
adc
xor
aam
jle
int
or
call
sub
inc
cmp
inc
addps
cs
scas
dec
lahf
mov
add
add
leave
inc
test
lret
insb
mov
test
pop
test
lods
inc
filds
lea
das
sub
pop
dec
adc
inc
inc
jecxz
xchg
enter
adc
insl
pop
pop
gs
ss
xchg
test
or
push
or
dec
stos
add
push
pop
pop
or
push
fisttps
lahf
shlb
jns
test
add
shlb
and
inc
xchg
mov
inc
pop
xchg
push
cwtl
push
push
or
ret
jne
jl
mov
add
xor
fcmovb
mov
jno
pusha
popa
jb
lods
adc
xor
movsl
lods
inc
add
fsubs
dec
std
test
js
cmp
xchg
fcomi
daa
jl
cmp
mov
inc
push
mov
adc
inc
pusha
in
add
xchg
jmp
add
pop
add
lahf
jne
fcomps
mov
or
shrl
or
scas
lea
nop
push
or
loopne
repz
xchg
fisttps
mov
xor
xor
and
es
ret
adc
pop
mov
ljmp
inc
xor
add
jp
loope
test
add
jge
adc
mov
mov
jmp
shll
std
adc
adc
sti
cwtl
cmp
cmpsl
sbb
cmp
adc
push
outsl
in
mov
shrb
int3
cld
adc
call
pop
bound
test
xor
lcall
jl
dec
xorb
dec
mov
mov
sbb
je
sbbb
push
jo
loope
xor
mov
adc
ret
jns
ror
and
shlb
test
ror
mov
xlat
mov
push
and
sub
dec
addl
sahf
sub
in
insl
push
push
push
inc
ja
shll
jno
shr
sbb
mov
adc
sub
data16
adc
sahf
mov
pop
sahf
cmp
xor
xchg
xchg
inc
xor
andb
mov
xchg
or
add
mov
mov
daa
adc
bound
jle
es
inc
sub
test
gs
dec
cmp
jo
sbb
xchg
js
dec
fs
sub
in
sahf
in
enter
shrb
adc
cli
ret
mov
out
mov
call
out
sbb
testb
or
mov
xchg
mov
dec
xchg
clc
add
mov
jb
cmp
enter
xor
push
fs
inc
nop
jle
je
add
mov
imul
cld
test
pop
je
sahf
inc
or
push
sbb
out
addl
push
mov
inc
cmp
icebp
test
mov
add
mulb
inc
sbb
and
mov
adc
pusha
test
inc
push
lahf
nop
sub
sbb
and
jo
mov
popa
xchg
dec
cmp
or
ret
pop
andb
xor
sbb
mov
pop
sub
pop
clc
loopne
xchg
add
xchg
sbb
mov
std
add
mov
in
cmp
add
mov
fsts
pop
push
push
push
movlps
lods
xor
and
dec
into
push
push
sub
dec
lea
and
pushf
repnz
cmp
and
xchg
add
lret
mov
pop
inc
mov
adc
dec
inc
jo
ret
sub
mov
inc
bswap
xchg
pop
mov
cmc
adc
xorb
xor
pop
add
cmpsl
pop
cmp
rcrb
int3
mov
enter
dec
push
push
sbb
inc
and
adc
xchg
pop
jo
or
dec
mov
and
xor
lahf
cmp
adc
lock
cmp
les
mov
add
push
jo
mov
push
sbb
inc
pop
mov
dec
test
daa
push
clc
addl
mov
sub
inc
jl
hlt
clc
ret
xchg
stc
inc
inc
fimull
sbb
sub
inc
mov
repz
icebp
jbe
push
lcall
fs
ret
pop
ss
push
fs
cmpsl
add
jo
movl
addl
test
mov
popf
bound
imul
in
mov
mov
pop
jnp
dec
fldenv
pop
data16
or
inc
ret
lret
icebp
mov
sbb
pop
mov
xor
pop
inc
add
xorl
mov
int
loope
add
jmp
push
dec
and
shrb
js
nop
add
push
cmp
mov
orps
in
push
sub
fcmovne
out
jnp
divb
call
sub
sbb
or
adc
inc
mov
pop
jecxz
scas
mov
lock
movsl
rorb
hlt
clc
cld
mov
test
scas
adc
sub
pop
adc
push
sbb
outsb
push
jmp
sub
xor
xor
fnsave
sti
dec
cmp
inc
dec
push
mov
push
pop
cmp
call
arpl
pop
sub
jo
lret
mov
sbb
push
mov
xchg
mov
pop
jmp
nop
xchg
or
lea
mov
xchg
xchg
dec
lods
mov
mov
mov
mov
fs
repnz
adc
fs
inc
push
push
push
fiadds
mov
rcl
sub
aaa
push
fcomp
jmp
push
mov
hlt
clc
in
movsl
cld
add
add
or
cld
xchg
into
xchg
or
adc
sbb
sbb
push
mov
test
aaa
xor
cmp
scas
jb
inc
inc
dec
or
test
push
pop
pop
pusha
xchg
lret
fs
cld
inc
sub
inc
adc
movsl
push
test
xchg
lret
xchg
xchg
cwtl
pushf
mov
movsb
cmpsb
test
lret
enter
mov
mov
mov
int3
adc
mov
mov
sarb
dec
add
xlat
mov
pop
and
mov
mov
dec
test
shlb
rorl
and
jns
cltd
into
jle
leave
dec
xchg
dec
jl
test
fisubs
xchg
shlb
inc
add
subl
xchg
pop
inc
adc
dec
scas
jmp
push
cmp
enter
shrl
jne
sub
adcl
rolb
add
testb
sbb
sbb
dec
lret
push
jae
mov
add
in
lret
pop
sub
roll
mov
sbb
imul
and
femms
add
inc
mov
icebp
shlb
data16
out
fcmovbe
adc
movl
or
sahf
mov
adc
xor
lahf
mov
adc
add
mov
adc
jo
adc
xchg
sub
movsb
bound
adc
mov
mov
mov
je
push
ja
cmp
inc
sbb
popa
movsb
mov
das
out
cmp
mov
sub
xchg
sbb
push
xchg
xchg
add
push
jo
and
and
sub
push
daa
and
je
ss
out
das
adc
add
xchg
idivb
jle
adcb
les
inc
and
mov
pop
inc
xchg
clc
orb
push
and
orb
rcr
pushf
sbb
cmp
je
stc
cmp
mov
mov
inc
addl
sbb
outsb
pusha
dec
das
mov
and
subb
dec
dec
mov
push
cltd
test
or
xchg
mov
clc
xor
sti
mov
clc
pop
pop
pop
je
pop
push
push
mov
stos
adc
icebp
sub
sbbl
sub
loopne
fildl
inc
repz
into
lds
cmp
mov
out
mov
out
push
fwait
into
jne
cmc
jne
aad
xor
cmp
aam
xlat
and
inc
pusha
xlat
adc
cmp
rorl
add
push
adc
pop
ja
sar
into
cmp
incl
inc
cmp
dec
push
or
cmpb
in
pop
aas
cld
cmp
xchg
insb
or
mov
movsb
inc
push
sbb
sbb
hlt
nop
dec
or
pop
adc
jmp
shlb
iret
mov
dec
xchg
dec
int
sbb
cmp
fs
nop
pop
mov
adc
rorl
push
call
mov
ds
adc
imul
xor
push
or
jbe
or
nop
cli
or
shrl
and
inc
loope
cmp
adc
ss
add
jge
xor
test
xchg
enter
mov
push
cmp
bound
sbb
aam
mov
xchg
xor
add
push
sbb
clc
mov
sbb
push
dec
push
push
push
pop
adc
lea
mov
mov
mov
rolb
enter
jo
push
adc
add
and
or
test
sbb
test
cltd
je
inc
cmp
imul
fidivrl
mov
xchg
sbb
daa
out
sub
xor
andb
lahf
push
mov
jnp
mov
adc
fsubr
dec
xor
add
add
test
adc
cmp
or
push
dec
sub
xor
mov
cltd
popa
push
xchg
fadds
jmp
mov
and
aas
cmp
mov
cld
adc
insl
xor
ficompl
sarl
lcall
jno
pop
adc
addb
push
sbbb
pop
push
shrl
and
push
and
test
dec
shlb
sbb
inc
or
mov
and
loopne
lahf
mov
mov
lahf
inc
push
push
arpl
xchg
or
cmpl
jl
out
jae
bound
or
xchg
jno
inc
add
lock
inc
mov
daa
cmp
jl
call
pop
imul
gs
loope
push
daa
fstps
push
add
sahf
lods
movsl
push
jo
stos
js
xor
pop
movsl
add
inc
dec
leave
in
push
mov
adc
je
call
jb
fnstsw
stc
cli
xor
in
xchg
and
mov
std
inc
xchg
int
add
enter
sbb
jl
cmpsl
scas
insl
test
pop
add
std
bndldx
ss
adc
sbb
pop
xchg
stos
fcoml
sbb
insb
insb
jg
inc
movl
lods
push
mov
inc
fmuls
inc
push
cvtpi2ps
pop
cmp
cmp
pop
fbstp
test
enter
nop
mov
jg
dec
repnz
lds
mov
jo
loope
jg
dec
add
or
movb
icebp
inc
sbb
mov
test
add
hlt
xchg
insl
mov
fwait
lahf
mov
adc
clc
push
dec
mov
imull
push
mov
push
and
xchg
dec
push
in
pop
rclw
rcll
push
icebp
push
or
push
push
jb
popf
mov
pop
dec
add
mov
mov
popa
pop
add
sbb
fidivs
ljmp
mov
clc
adc
arpl
sbb
fwait
xchg
and
dec
in
mov
add
cmc
pusha
std
push
add
sub
std
dec
stos
adc
mov
cmp
sbb
cltd
fdiv
ret
pop
jb
ret
jg
dec
movsb
je
sbb
sbb
xor
mov
test
cmp
add
add
push
filds
orb
and
or
and
pop
aas
mov
aam
and
or
push
sub
mov
sbb
test
jl
jne
mov
cld
adc
push
or
adc
mov
cmc
dec
mov
dec
jg
cmp
jge
nop
adc
push
test
lea
subb
add
jp
add
mov
mov
ljmp
sbb
or
fiadds
fwait
jl
adcl
cmp
pop
push
push
insl
sub
inc
test
mov
xchg
cwtl
add
inc
pusha
shrl
inc
out
or
loop
rorl
sub
test
loop
sbbb
push
pop
push
adc
jo
sub
xchg
or
add
shll
fcmovbe
sub
lea
mov
testb
mov
push
lea
push
pusha
or
sahf
adcl
push
ret
std
adc
push
mov
mov
iret
mov
dec
cmc
orb
push
adc
les
imul
adc
filds
push
push
imull
pop
stc
int
fnstsw
xor
imul
cmpsb
mov
push
pop
lock
add
mov
je
aas
pushf
jno
mov
aas
jl
loop
push
xchg
push
sub
add
and
stos
xor
xchg
ret
int
or
mov
loopne
mov
sub
inc
push
push
popf
add
cmp
adc
mov
jle
mov
and
shll
inc
mov
pop
push
outsl
adc
xchg
inc
mov
in
inc
jns
test
mov
add
test
or
xchg
mov
push
mov
repz
push
dec
add
jb
fs
mov
adc
lds
mov
mov
test
pop
dec
push
or
rclb
add
dec
lea
sbb
ret
cld
mov
inc
bnd
hlt
ss
or
mov
xor
jge
push
push
push
mov
sbb
push
das
xorb
and
pop
push
push
sub
pop
inc
roll
add
in
push
cmp
pop
sbb
cmpsb
push
and
cli
push
stc
notl
mov
enter
jmp
sub
mov
flds
test
pop
pop
and
pop
sbb
pusha
mov
addr16
das
or
xor
add
inc
push
mov
inc
push
pop
ret
daa
mov
or
jnp
adc
std
es
adc
cmp
sti
mov
rorb
inc
mov
sub
push
push
mov
dec
mov
xor
lds
sub
mov
insb
test
cld
sub
dec
pop
sub
stos
push
sbb
adc
pop
mov
addr16
and
push
out
add
repnz
jnp
insb
in
or
xor
ljmp
push
mov
sub
or
ret
mov
scas
dec
les
lds
push
pop
rorl
push
jnp
push
imul
ret
push
pop
jno
sbb
call
fidivrl
stos
jb
aam
cmp
shlb
pop
gs
fdivl
mov
jge
push
movsb
call
lcall
stos
push
and
mov
iret
lahf
fdivs
push
call
out
add
add
pop
jne
and
xchg
or
adc
leave
mov
sarl
add
adc
mov
cld
pop
add
faddl
lret
pop
add
add
push
mov
das
sub
cmp
jge
orb
in
pop
pop
dec
push
fistpll
cmp
cmp
or
sub
insb
lahf
xor
data16
inc
cmp
mulb
inc
clc
in
je
cmp
sub
jb
cmpb
lea
and
ja
stos
push
jno
xor
add
stos
in
and
loopne
add
dec
mov
loopne
push
jns
rcll
mov
fildl
mov
push
ds
fstl
popa
rorl
inc
aas
ljmp
push
mov
adc
lahf
gs
jle
pop
pop
xor
and
outsb
out
mov
fbstp
cmp
cmp
dec
inc
fldl
mov
push
push
pop
cld
push
subl
add
xor
xor
decl
sahf
rorl
shll
add
popf
cmp
push
mov
jb
xor
xorl
or
sbb
and
adc
add
lock
enter
frstor
ret
fsubs
fimuls
jae
add
sbb
pop
push
pop
repnz
mov
mov
iret
mov
rolb
inc
test
lea
and
jb
aam
sbb
ret
cld
add
and
adc
mov
mov
xor
dec
test
cld
adc
and
mov
push
in
fstpl
inc
push
mov
je
xorl
pop
and
ss
mov
test
adc
mov
sbb
inc
add
push
rclb
jo
mov
pop
dec
pusha
dec
sbb
push
fnstcw
jmp
sbb
lock
cmp
or
xchg
sbb
test
lea
adc
inc
sbb
push
jb
jge
or
add
ljmp
fadds
out
push
xchg
cmp
out
call
mov
lods
sub
je
roll
cs
int
pop
fists
sub
das
add
adc
dec
test
sahf
xchg
mov
vxorps
pop
mov
xor
and
and
int3
mov
mov
dec
add
jo
rclb
sbb
push
mov
outsb
pusha
cmp
jb
lds
inc
xor
verw
cs
mov
movsl
fmuls
or
push
cltd
sub
inc
add
sbb
test
mov
out
xor
rcl
flds
arpl
lret
add
lods
ja
ss
into
pop
or
es
inc
jmp
loopne
push
jmp
add
rcll
add
testl
cwtl
xchg
add
or
mov
mov
lcall
inc
stos
adc
mov
dec
push
rcrl
ljmp
sarl
inc
jmp
lea
xrelease
test
repnz
je
mov
les
inc
bound
mov
rcr
rcrl
dec
scas
and
mov
push
push
or
loop
lods
xor
outsl
aam
fs
add
pop
cmp
orl
ds
xchg
lea
pushf
push
pop
fsubl
cmp
add
inc
mov
push
cltd
add
add
iret
dec
push
imul
xchg
sbb
or
enter
mov
cmp
pop
pushf
stos
mov
xchg
mov
or
aas
add
adc
sub
ljmp
add
xor
adc
sub
nop
or
push
or
mov
or
in
adc
ds
mov
add
or
push
rcll
mov
lock
ja
daa
inc
dec
cmpb
add
addr16
adc
pop
mov
xchg
mov
cs
fistpll
sub
mov
jnp
sub
movsl
hlt
scas
loopne
adc
add
mov
jo
or
data16
int
push
pop
jo
and
xchg
push
aas
pop
mov
and
and
mov
mov
insl
jmp
dec
pop
je
cmp
push
sarb
cmc
sbb
stos
lds
xchg
xor
sbb
mov
push
call
inc
nop
push
lock
fs
mov
jmp
pusha
push
and
dec
dec
cmp
ret
jecxz
int3
adc
mov
mov
sub
lds
jge
jbe
cmp
icebp
push
or
or
aad
jne
lock
arpl
xor
repnz
jl
dec
lret
inc
scas
aaa
cld
sbb
add
shlb
and
insb
cmpsb
hlt
inc
pop
jmp
lea
mov
stos
jns
mov
or
push
adc
jno
xchg
inc
sbb
ljmp
pop
test
out
mov
xor
mov
nop
js
icebp
dec
adc
dec
je
scas
sbb
add
call
out
dec
bound
and
pop
jmp
mov
push
rorl
rclb
mov
xor
gs
cmpsl
or
cwtl
mov
xor
xor
push
dec
cmp
xor
or
or
push
inc
lods
xor
test
testb
xchg
push
cmp
push
push
dec
and
insl
pop
mov
inc
loop
jno
xor
orb
or
add
daa
inc
loope
lret
lock
mov
push
add
mov
sub
push
bnd
push
lret
test
lea
clc
call
mov
fisubl
or
pop
pop
inc
jb
sub
js
imul
fsts
imul
sub
lea
push
jle
ja
movsb
cmp
xor
inc
add
or
sbb
icebp
xchg
lahf
push
fs
incl
test
mov
mov
fadds
andl
add
ficompl
clc
xorb
cmp
push
cmp
push
or
dec
xchg
dec
aas
sub
jle
jecxz
lcall
xchg
movsb
icebp
xor
xlat
aam
add
fmull
xchg
push
std
adc
lock
cmp
and
icebp
mov
sahf
repnz
sub
and
xor
xor
and
cwtl
and
inc
xor
cltd
dec
sub
fcomps
cwtl
clc
or
dec
cltd
xchg
mov
rcr
push
dec
enter
loopne
xchg
dec
je
mov
sbb
fwait
cmp
or
pop
sbb
inc
mov
sub
fbld
sahf
jl
test
mov
stc
or
imul
lods
enter
jmp
outsb
leave
lret
enter
aam
sete
and
sub
les
mov
negl
rcll
or
loopne
in
pop
cs
lret
in
call
out
sub
pop
mov
nop
dec
in
jb
xchg
mov
lods
bnd
mov
sbb
add
mov
xor
sub
aam
sub
stos
dec
stos
add
add
mov
inc
pop
mov
popa
and
dec
sbb
sub
cmp
add
adc
fs
add
mov
jo
cli
loope
dec
in
les
icebp
fildll
push
sbb
dec
sub
rcll
sbb
dec
mov
adc
es
enter
loope
cmpsl
cmp
rorb
pop
mov
mov
lock
pop
shlb
outsb
imul
sub
push
mov
and
and
push
les
popa
popl
sbb
call
pop
cmpsb
add
xor
lea
pop
mov
xchg
pop
imul
pushf
inc
xorb
ret
mov
xlat
inc
sti
fdivrl
int3
push
pushf
mov
mov
sbb
sub
pop
jb
and
dec
jb
and
adc
daa
pop
and
or
add
jb
jle
adc
shl
inc
fmull
sub
in
rcrl
fmuls
cmp
jb
rorb
in
outsb
sub
or
inc
dec
push
jo
pop
inc
dec
push
in
dec
or
in
xor
and
mov
popa
inc
mov
cmp
inc
and
fldt
or
adc
in
add
cmp
or
pushf
fsubrl
aam
add
cmp
push
rcll
pop
sub
ret
jecxz
sbb
dec
arpl
sub
inc
push
vmread
jno
test
aad
add
dec
xchg
adc
sbb
out
or
loop
or
enter
adc
inc
inc
rorb
loop
xor
movsb
jg
cltd
aam
cmp
jne
pop
dec
sbb
cltd
nop
cmp
xor
add
loop
pop
adc
dec
lahf
lea
push
orl
xchg
xor
xchg
out
dec
or
sbb
ja
insb
inc
jne
rcl
inc
add
cwtl
dec
je
cs
inc
and
or
inc
lea
jle
ss
push
push
push
cmp
push
cwtl
fsubs
mov
outsl
sbb
add
mov
pop
pusha
test
sub
push
dec
cmpl
jle
mov
xlat
or
cmp
adc
adc
push
adc
into
or
and
test
cmp
int3
pop
ret
test
adc
add
or
or
cmp
ds
bound
cmp
push
sub
pop
test
enter
pop
xor
lock
sub
testb
loopne
mov
or
push
mov
mov
mov
dec
repz
pop
inc
shlb
imul
sub
xchg
ja
cmp
inc
sbb
insb
dec
xchg
cmpl
mov
push
dec
or
mov
add
push
mov
mov
add
sbb
int3
xchg
shll
adc
push
push
rcrb
add
out
in
cli
or
ja
popf
add
aad
nop
je
jb
mov
push
pop
lock
shrl
shll
sarb
xor
movl
xor
inc
push
xor
sbb
pop
mov
cmp
cwtl
dec
push
or
pop
dec
rcrl
daa
xor
js
xchg
or
cmp
xchg
stos
lahf
outsb
inc
and
or
imul
aad
test
jne
mov
fldenv
mov
loope
push
sbb
sbb
push
mov
or
add
cmp
xlat
rorl
aas
push
adc
push
add
pop
push
inc
adc
pop
loope
cmpsb
push
lds
lods
mov
leave
pop
data16
bound
adc
cmpsb
shr
pslld
or
push
push
cmp
fmull
mov
enter
push
cmc
popa
jo,pn
mov
push
iret
scas
lcall
push
cmpb
imul
push
cmc
insb
xchg
test
pop
adc
mov
cmp
pop
jb
incl
inc
and
lods
jge
dec
mov
cli
lea
push
das
sbb
pusha
pop
mov
inc
daa
push
cmp
out
sbbb
or
fsubrs
sub
jne
sbb
or
push
xchg
add
aam
in
pushf
test
mov
mov
push
lds
jae
pop
mov
and
push
lea
mov
pop
aas
popf
divl
sarb
in
pusha
mov
sbb
jp
clc
paddb
mov
cmp
add
popl
cmpb
das
sub
push
rcrl
xchg
mov
addr16
into
jno
aad
icebp
add
outsl
push
cmpsb
pop
test
pop
add
ret
lock
push
xchg
mov
inc
cltd
push
add
pop
stc
out
imull
mov
scas
or
or
aaa
pop
lods
jo
stos
cmp
ja
adc
out
inc
push
sbb
sub
xchg
adc
andb
ror
cmp
es
adc
cmp
adc
mov
and
call
fcomps
jle
pop
add
or
sub
movsl
pop
ret
rorb
xchg
popf
into
sbb
mov
testb
add
or
xor
inc
into
push
mov
xchg
cmpb
out
mov
lea
dec
jae
std
out
cmp
push
adc
into
push
jmp
jne
cmp
sbb
cmp
push
pop
stos
adc
adc
mov
std
rcrl
rorl
push
and
loope
movsl
cmp
push
pop
les
cmp
lahf
adc
insb
push
nop
pop
add
sbb
or
ljmp
and
xchg
adc
sbb
xor
pop
testl
push
hlt
add
addr16
inc
lock
faddl
pop
push
adc
test
xor
jbe
icebp
mov
adc
adc
clc
dec
js
pop
mov
push
jne
jle
ja
ffreep
jmp
pop
jle
inc
test
and
dec
ret
movnti
icebp
sahf
dec
sbb
fcomp
das
xor
sub
dec
mov
outsl
cmp
dec
imul
xor
or
orb
push
js
outsl
mov
add
push
filds
mov
loop
add
cmp
mov
jmp
leave
push
daa
inc
out
out
mov
cmp
sbb
xchg
sbb
pop
into
jne
ret
adc
jmp
dec
or
or
imul
mov
loope
push
push
add
jbe,pt
fdivrp
pushf
lcall
popf
sbb
push
mov
push
or
mov
cmp
not
mov
aaa
mov
sub
sub
push
sarb
dec
jl
xor
cmp
cmp
push
adc
ss
sbb
mov
sbbb
adc
xor
sbb
sbb
pop
mov
xorb
sarl
stos
js
and
mov
mov
sub
push
inc
cmp
adc
push
cltd
cs
pcmpeqb
leave
cmp
xchg
mov
jns
and
and
pop
add
sbb
sti
pop
inc
add
pusha
push
sbb
cmp
inc
dec
push
and
cmp
shll
xchg
cmpsl
call
or
outsb
pop
arpl
inc
insb
push
repz
out
repz
sub
fs
mov
lcall
push
out
sahf
cmpsl
push
sbb
push
sahf
idivb
test
or
push
imul
stc
rorb
push
or
out
repz
cmp
pop
push
cmp
xchg
shrl
sbb
mov
and
insl
mov
ss
push
add
sub
and
or
xchg
mov
jmp
dec
js
mov
les
mov
dec
ret
ret
movsl
cmp
out
outsl
loopne
pusha
sarl
push
add
mov
sbb
mov
lcall
dec
outsb
and
ret
call
sarb
in
das
sub
mov
filds
mov
inc
sub
fbstp
arpl
lret
call
pop
inc
aas
sbb
stos
or
out
mov
int
sub
dec
lock
int3
mov
xchg
xchg
adc
enter
pop
mov
or
cwtl
outsl
sbb
cmp
mov
cmpl
out
out
rcl
stos
mov
mov
jb
or
pop
or
shlb
add
add
je
aad
mov
pop
out
add
sub
mov
in
mov
sub
cmpsb
adc
push
inc
cltd
inc
sub
rcrb
in
mov
out
mov
mov
push
mov
jbe
push
dec
or
fsubrl
add
push
mov
mov
mov
jle
sarb
jo
push
sbb
pop
mov
and
idivl
xchg
lods
dec
inc
cmp
pop
je
mov
adc
cmp
aad
mov
lahf
pop
sub
sub
and
jl
sub
roll
sub
jae
pop
adc
and
jns
pop
cltd
sbb
rcll
xorb
xor
clc
pushf
lea
test
lahf
xchg
dec
adc
adc
lock
and
pop
jne
movsl
test
int3
cmpsb
pop
push
cmp
add
or
adc
sbb
lds
mov
lahf
push
dec
dec
adc
bound
jns
popa
add
push
mov
jmp
sub
aad
daa
adc
lret
add
sbb
mov
test
xchg
xor
jbe
pop
push
ss
mov
xor
lret
dec
pop
inc
push
ljmp
je
adc
sbb
es
or
sub
fildll
sarb
pop
sub
in
aam
or
push
push
mov
push
sub
pushf
and
push
loope
jo
es
lea
fwait
cli
xor
jo
cmp
cmp
mov
jne
pop
and
push
dec
push
inc
mov
dec
mov
mov
stc
push
or
or
sub
jno
push
sarl
ret
loopne
les
push
int
popf
inc
test
dec
js
pcmpeqw
push
les
rorl
lcall
jl
and
lods
data16
sbb
mov
mov
or
cmp
pop
pop
out
aas
jne
sub
mov
pop
push
cmpsb
shll
push
push
inc
sbb
sbb
pushf
int3
push
jae
jns
mov
jl
sbb
in
in
xor
mov
mov
incb
int3
jle
mov
xchg
dec
hlt
pop
add
loop
mov
pop
loop
cmp
mov
fsubl
adc
sub
stc
add
mov
sub
xor
mov
lret
pop
and
cmp
jne
sub
pop
pop
push
push
sub
push
push
sahf
xchg
adc
rorl
ljmp
xor
sbb
cmp
sub
xor
or
mulb
in
xor
push
mov
xor
push
mov
les
adc
je
nop
mov
xchg
cli
push
test
mov
mov
pushf
jmp
mov
cmp
xchg
and
aaa
sbb
jnp
mov
test
idivb
je
jle
sbb
add
or
arpl
push
or
nop
adc
push
or
or
xor
sahf
mov
and
stos
jae
cmp
das
lods
enter
sbb
pop
mov
sarl
sub
sub
pop
pusha
jns
mov
cmpl
cmp
aaa
pop
and
fdivs
push
dec
and
cmp
cmp
sub
pusha
rorl
lret
cmp
add
inc
pop
imul
dec
jl
imull
xor
sbb
jns
ret
je
inc
cld
jecxz
sbb
popl
cmp
pop
mov
push
cltd
add
in
mov
shrl
stc
dec
mov
mov
into
xor
mov
and
loope
add
mov
stc
sbb
mov
add
cs
sar
inc
insl
jmp
xchg
loop,pn
mov
xchg
fidivrl
fstl
into
dec
mov
adc
outsl
dec
dec
sbb
push
mov
rorb
loope
mov
mov
fildll
sbb
pusha
jns
sbb
pusha
aad
outsl
and
imul
popa
sub
pop
jle
sarb
mov
push
pop
adc
mov
push
andb
mov
cmpb
das
aaa
sbb
xor
xchg
hlt
es
jg
dec
cmpl
inc
int
ret
add
or
movsb
fidivrs
jmp
and
les
fistl
call
mov
sub
mov
arpl
pop
xchg
ficompl
in
dec
popf
and
fistpl
ret
and
fcomps
cmpsb
push
subb
xchg
ret
add
mov
jl
movsl
push
stos
pop
push
add
sbb
cmp
mov
pop
or
xchg
mov
xor
jno
add
push
ja
jge
and
cmp
pop
jl
iret
cld
fisttpll
add
or
in
cmpsl
push
movsb
adc
mov
aam
adc
cmovae
adc
and
je
lea
fdivrp
rcl
sub
add
cmp
xchg
enter
push
fstpl
ja
jmp
subl
sbb
jg
pop
sbb
imul
push
dec
push
dec
sbb
add
inc
addr16
mov
pop
push
outsl
inc
cmpsl
push
pop
xor
push
pop
sbb
add
sahf
jmp
push
mov
add
jl
in
inc
mov
cmp
data16
fwait
pop
cmp
jle
icebp
insb
and
or
lcall
mov
mov
dec
neg
sbb
and
outsl
xor
cs
jl
fwait
js
jo
incb
add
test
fcmove
mov
das
push
push
loope
sahf
scas
jns
mov
jmp
sti
mov
or
or
inc
inc
inc
shr
and
xor
js
mov
adc
push
mov
mov
mov
movsl
iret
dec
in
mov
inc
and
push
add
push
inc
or
mov
lret
outsl
adcb
sahf
mov
jbe
push
sbb
les
ss
dec
add
push
and
subb
cmpl
dec
push
out
inc
stos
jb
sub
push
pop
shrl
dec
xchg
test
and
lds
jne
mov
lahf
lods
adc
pop
inc
xchg
adc
or
push
pop
cmp
lods
xchg
ljmp
pop
or
dec
adc
fwait
in
dec
push
jbe
mov
pop
imul
dec
and
out
sbb
or
std
dec
dec
int3
pop
jae
push
mov
jg
add
cmp
icebp
jne
mov
mov
mov
mov
jg
rol
adc
xchg
or
cmp
fbld
add
mov
testb
insb
arpl
sti
inc
add
inc
sub
xchg
nop
or
jge
pop
jbe
outsb
xlat
and
mov
mov
sbb
out
add
push
ret
sub
popf
cwtl
and
mov
xchg
sbb
inc
aaa
xor
jnp
clc
test
adc
in
ja
sub
lods
or
nop
jne
mov
xchg
inc
into
sbb
inc
cmp
jl
in
adc
mov
les
or
adc
pop
mov
sub
xchg
ret
roll
dec
jp
in
test
lea
mov
int
outsb
mov
ret
push
incl
or
mov
push
sub
add
xlat
jne
mov
or
mov
xchg
adc
fcomps
add
xchg
pop
call
lods
jns
or
or
cmp
dec
cld
sar
lea
inc
movsl
pop
or
aas
push
xchg
cmp
pop
sub
and
dec
inc
xor
mov
lock
dec
loopne
lea
nop
mov
in
sbb
mov
nop
and
scas
pop
mov
sahf
jg
xchg
sbb
flds
xchg
xor
inc
hlt
adc
add
pop
cmc
rclb
jb
pop
outsl
xor
push
pop
jecxz
push
cwtl
pop
fmull
testb
js
push
lea
sub
scas
or
outsl
jne
add
lea
jmp
jle
xchg
adc
and
das
loopne
xor
movsb
inc
jp
jmp
roll
push
pusha
ss
adc
hlt
jge
pop
aas
decl
cmp
test
aam
inc
or
xchg
inc
push
cmpl
je
mov
sub
mov
popa
das
lods
lea
push
movsl
sbb
pop
cwtl
adc
push
inc
insl
rolb
call
xchg
jb
sbb
inc
xor
sahf
mov
or
pop
inc
xor
repnz
mov
aas
add
ficompl
sarb
jnp
push
inc
mov
shlb
push
inc
fs
dec
stos
add
js
jo
add
outsl
dec
inc
shl
cmp
and
icebp
or
push
hlt
add
adcb
adc
loopne
test
cmpb
add
lods
push
fadds
adc
inc
xor
je
add
lea
sbb
movl
push
sbb
push
test
pop
cmp
mov
inc
cmp
lret
xchg
mov
and
loopne
pop
cwtl
decb
int3
dec
sbb
cmp
xor
into
int
fstpl
and
mov
gs
js
pop
and
sub
lods
xchg
dec
dec
dec
xchg
xor
mov
pop
push
sub
lock
inc
cmpsl
push
inc
mov
nop
str
shrb
pusha
mov
pop
lcall
cs
push
sbbb
mov
adc
sbbb
push
and
push
sbb
cmp
ljmp
cmpsl
cmp
adc
fsubrs
sub
nop
push
jle
cwtl
add
jnp
lds
ljmp
add
fs
lea
sahf
cld
push
jge
inc
push
testl
arpl
scas
mov
movsl
xchg
push
adcb
adc
pop
rclb
adc
add
jb
push
dec
add
or
add
add
add
mov
ficompl
inc
test
jecxz
fsubl
rorb
inc
inc
imul
loopne
pop
in
pop
faddl
data16
sbbl
int3
and
jmp
or
or
push
push
inc
sub
push
daa
mov
xorl
pusha
xchg
lret
inc
inc
gs
test
push
add
inc
dec
cmp
mov
push
ja
mov
ds
loopne,pn
xor
jmp
cmp
or
pusha
mov
shlb
sbb
mov
imul
scas
pop
sbb
sbb
mov
fcompl
in
or
fdivl
aas
pop
cwtl
js
mov
add
ss
inc
imul
sub
js
scas
mov
jnp
mov
xor
sbb
call
and
mov
push
mov
sub
push
test
inc
pushf
insb
mov
push
sbb
popa
orl
loope
ds
push
popf
cmp
insb
xor
int3
xchg
nop
and
sbb
insb
mov
add
add
pop
roll
cmovo
mov
push
add
xor
push
mov
xchg
add
cmp
push
cmp
or
insb
sub
fcoms
push
mov
mov
dec
fisubl
adc
jmp
mov
ds
cltd
push
jnp
xchg
xchg
pop
call
push
xor
jnp
js
adc
xchg
mov
mov
sbb
lods
xchg
push
clc
xchg
loopne
testb
insb
adc
push
movsl
xorl
dec
inc
jl
sar
push
ret
ljmp
add
add
jmp
mov
push
add
sbb
daa
jns
aaa
lahf
sbb
pop
jns
fnstcw
mov
lcall
pop
cli
fidivs
pop
fdivrs
mov
jl
cmp
pop
inc
cltd
add
bound
lods
in
mov
push
popf
jecxz
sub
pop
sub
push
push
lds
mov
and
sub
or
lea
push
xor
sub
dec
andl
fmuls
js
pop
sbb
add
mov
adc
in
fs
inc
addr16
or
dec
jp
mov
ffreep
add
add
pop
or
roll
test
inc
mov
dec
cmpsb
sbb
cmp
push
push
movl
shlb
ljmp
ret
fildll
lea
pop
imul
lea
sub
or
ds
ret
dec
rclb
push
mov
sbb
and
xor
jecxz
or
jno
push
pop
dec
adc
inc
xchg
inc
ret
lea
push
int3
or
and
xchg
add
imul
lahf
jl
shlb
push
mov
imul
add
or
test
dec
int
jge
mov
and
add
aam
and
decl
mov
jo
jge
mov
lea
jne
loopne
add
xlat
rol
aad
pop
pop
adc
mov
xor
or
mov
ficoms
ss
popa
int
and
and
adcb
cmpb
jp
sbb
cld
add
pop
dec
stc
push
je
cmpsl
arpl
adc
jbe
leave
mov
mov
iret
adc
movsl
dec
jl
or
dec
testb
ret
pop
push
leave
shrl
cmp
lds
mov
pop
psadbw
jmp
or
cmp
out
testl
or
daa
lods
add
xor
mov
inc
push
mov
push
jo
ficoml
fisttps
repz
and
lcall
adc
mov
stos
imul
dec
jne
pusha
cmp
sub
cmp
sbb
mov
iret
or
js
aam
mov
xchg
hlt
add
das
pop
adc
inc
rcrb
mov
lea
sbb
push
sbb
popa
push
mov
pop
pop
sbb
movsl
imulb
pop
filds
adc
loop
inc
lret
inc
push
jne
cmpb
jo
push
mov
test
lahf
mov
adc
addl
add
cmpsb
xchg
push
xor
push
test
push
aaa
lods
or
push
and
push
cld
pushf
push
mov
aam
aad
jl
lahf
dec
in
push
mov
dec
lea
fs
dec
jo
xchg
sbb
sbb
sub
xchg
ljmp
pop
dec
or
jne
test
cmp
test
ljmp
xlat
popaw
inc
push
xchg
or
dec
dec
test
loopne
and
mov
jns
call
mov
shr
pushf
movsb
and
mov
mov
pop
sbb
mov
dec
call
sbb
les
sbb
inc
fcomp
mov
testl
sti
dec
jb
clc
lock
test
add
sbb
push
popa
in
adc
js
jo
sub
mov
loopne
adc
out
inc
mov
lock
push
fmull
jmp
ljmp
jne
xchg
fadds
cmp
push
lock
jmp
insl
in
xchg
sbb
inc
arpl
push
add
cmpsl
mov
int3
push
add
les
push
or
sbb
push
pop
mov
testb
jl
arpl
pop
ja
gs
xor
out
repz
ss
lock
xchg
ljmp
jmp
repnz
pop
loop
adc
and
call
push
repz
xor
add
push
sbb
push
adc
nop
fistpl
test
push
adc
push
loopne
aaa
sbb
fisubrs
testl
mov
add
or
mov
lea
xchg
sub
aas
in
push
push
movsb
jo
inc
out
push
mov
xor
or
push
jp
push
sbb
push
jmp
leave
stos
sar
cld
stos
xor
pop
sub
ficoms
cwtl
cmp
andb
jl
lcall
push
adc
out
fldl
cli
in
adc
ss
out
adc
aas
fidivrs
cmp
xchg
pop
adc
mov
sub
sti
sbb
and
test
jne
or
mov
cltd
xor
or
ret
icebp
movl
xor
sarl
and
and
adc
pusha
pop
cmp
mov
mov
scas
xchg
test
xlat
adc
mov
mov
or
clc
js
mov
iret
fldl
cmpsb
dec
test
ret
jb
mov
rorl
jl
cmpsl
jmp
lods
add
add
into
cmpsl
sahf
push
mov
jl
imul
or
in
sub
cmpsl
loop
sub
lahf
shrb
lea
les
test
pop
pop
mov
es
aam
add
inc
or
test
call
mov
roll
int3
push
or
jb
mov
mov
call
dec
jmp
sahf
hlt
jns
sbb
jp
add
call
ret
jle
dec
or
or
stos
cmpb
cmp
cmpsb
mov
cmp
icebp
inc
xchg
or
sub
cmp
aaa
sbb
ds
and
pop
or
mov
daa
lret
jg
dec
fidivs
ret
lock
ss
mov
adc
mov
or
mov
push
add
loopne
xor
lock
jp
cmp
pop
sub
daa
je
cmpl
outsl
push
cwtl
inc
sbb
jne
sbb
jp
inc
aad
scas
orb
push
test
pop
push
das
pusha
std
pop
jp
mov
dec
jne
cmp
ljmp
cmp
inc
lret
mov
lds
jle
xor
pop
xchg
call
sub
add
rorl
pop
sub
or
insb
pop
cwtl
iret
lock
cltd
pshufw
aam
or
jnp
popa
les
mov
bound
jp
sub
adc
fadds
sbb
movl
add
cmp
lcall
jle
subb
pop
push
push
imul
sbb
sub
dec
stos
push
pop
rorb
mov
adc
jg
pop
dec
or
stos
push
cwtl
jns
out
jle
push
jne
mov
lock
loopne
scas
fiadds
add
add
pop
pop
mov
push
xchg
adc
or
mov
mov
mov
adc
push
lret
fwait
cmp
push
push
sbbb
jnp
popa
pop
pop
test
add
js
ffreep
clc
addr16
push
push
push
push
push
push
add
mov
xchg
lock
cmp
dec
mov
jb
test
stc
add
push
xor
cmpsb
or
mov
nop
popf
orl
push
sbb
stos
and
sbbl
and
aas
icebp
jl
mov
ret
or
mov
lea
dec
xor
ljmp
addb
int
test
adc
cs
xchg
add
mov
cmp
movsl
sbb
cmp
mov
scas
imul
sbb
sbbl
scas
and
push
mov
movb
dec
loop
add
stos
dec
pop
pop
cmp
add
adc
pop
sub
push
sub
aaa
and
and
adc
pushf
add
rclb
inc
shlb
mov
jno
xor
out
pusha
cmpsb
xchg
rorb
test
imul
mov
xchg
hlt
loope
movsl
inc
jmp
pop
or
subb
push
mov
inc
sti
dec
mov
add
ror
xor
jmp
inc
mov
adc
add
sbb
aas
jmp
jae
or
xor
sub
adc
cs
adc
push
sub
cmc
push
mov
push
ret
clc
or
and
into
sub
adc
or
jb
cmp
lods
fcmovnbe
xchg
pop
push
sub
sahf
fiaddl
add
testl
rcll
xchg
lret
or
xor
in
aas
mov
jo
iret
xlat
xor
xchg
dec
push
cltd
jle
cmc
movl
pop
xorl
lea
dec
sbb
sbb
xchg
fs
xchg
shll
or
or
add
inc
ret
xchg
add
xchg
pop
pop
adc
jl
sub
fcomps
imul
push
testl
mov
movsb
mov
js
pop
mov
inc
or
shrd
sbb
sub
in
mov
cld
sbb
loop
xchg
mov
mov
ret
mov
mov
xchg
xor
sub
cmpl
mov
jle
or
fs
das
pusha
inc
mov
push
lretw
mov
jg
imul
or
add
xchg
push
xor
adc
xchg
inc
and
and
cmp
loopne
pop
fidivs
adc
std
push
rcl
xchg
lcall
lods
push
push
lods
mov
push
pop
mov
sbb
mov
movsl
jmp
loopne
pop
sbb
and
insb
sbb
sbb
popf
inc
fstp
insl
ljmp
idiv
cmp
add
shl
lea
cmp
cmp
sbb
jno
xchg
mov
ja
rorb
sub
mov
xchg
adc
inc
push
pushf
sub
inc
out
or
lods
push
adcl
or
scas
add
pop
dec
add
jl
hlt
pop
lea
es
idivb
fwait
ret
dec
xchg
mov
add
xchg
mov
add
int3
xor
ficomps
faddl
add
loope
imul
addb
shrl
call
cmpsl
or
sbb
testl
loopne
xchg
push
fwait
ss
ficompl
jo
ljmp
aas
xchg
loopne
mov
jmp
movswl
mov
sub
out
push
cmp
das
dec
xchg
push
dec
loope
push
lahf
aad
enter
jo
push
in
fs
sahf
sahf
cmpsl
stc
pop
in
int
setg
mov
push
incl
add
add
add
add
scas
cwtl
ret
add
incb
cmp
repz
push
cmp
jns
gs
dec
loopne
clc
push
arpl
pushf
andl
push
xor
es
movsl
inc
jo
sub
mov
pusha
out
mov
sbb
cmp
aaa
mov
shrl
pop
push
or
mov
inc
sub
push
push
dec
aad
lret
idiv
xchg
pop
scas
cmpsb
push
pop
orl
mov
in
push
imul
sbb
xchg
sti
push
sub
fadds
push
push
stc
rcl
pop
xchg
stc
add
cs
or
pop
pusha
adc
scas
mov
movsl
jbe
outsb
popa
ljmp
inc
ljmp
loopne
pusha
jp
cmp
shlb
and
clc
je
or
push
movsl
adc
push
add
stc
rcrb
cmpb
adc
call
cwtl
push
mov
out
out
lret
test
pop
mov
sbb
mov
call
adc
xor
push
pop
cmp
fcoms
cmpsl
lcall
aaa
or
push
inc
pusha
cmpsb
or
lock
adc
unpckhps
adc
jo
sbb
shrl
pop
pop
jmp
push
push
test
pop
mov
pop
or
push
push
popf
add
sti
or
pop
dec
fwait
addb
jl
cmp
mov
mov
mov
aas
pop
adc
outsb
push
outsl
repz
je
nop
icebp
cmp
repz
ret
popa
cwtl
push
frndint
out
add
xchg
adc
in
xor
aaa
push
sbb
pop
push
push
popa
pop
movsl
loope
push
pop
xchg
and
ret
mov
mov
or
fldl
mov
movsb
adc
mov
or
cmp
sub
out
mov
jmp
inc
je
jne
adc
adc
sahf
inc
subl
std
fisttpl
jns
sub
fsubr
pop
inc
cmc
arpl
mov
xchg
stos
add
push
adc
mov
inc
cmp
jl
xchg
jo
mov
loope
dec
mov
xchg
jl
add
mov
mov
push
xor
push
mov
inc
popa
sbb
cmp
clc
push
push
ret
cld
pop
dec
fildll
loope
push
jge
or
mov
aas
adc
cmp
repnz
mov
adc
mov
xor
sti
jge
push
cmp
addr16
sub
movsb
jnp
add
xor
and
push
push
dec
sbbl
mov
mov
jnp
jmp
in
mov
xor
pusha
and
cmp
sti
add
sbb
test
and
xor
mov
je
shlb
sub
push
int
xchg
mov
fmull
loop
xchg
dec
cmp
dec
push
out
outsl
cmp
lea
or
sbb
pop
dec
sub
clc
add
or
and
inc
in
addb
orl
and
adcb
ret
and
repz
push
nop
ds
int
add
es
jg
mov
add
inc
sub
sub
cmp
jle
adc
push
jp
or
mov
sbb
mov
and
sub
shr
fwait
add
orb
push
lahf
call
divl
mov
add
sahf
cwtl
add
sbb
mov
or
mov
mov
sbb
cmpsl
ja
enter
adc
add
sub
dec
inc
add
xor
sbb
pop
sub
inc
les
les
mov
jb
pop
push
movsb
sbb
lods
out
test
faddl
sub
xchg
xor
xor
or
dec
mov
or
lods
mov
pop
aam
popa
insb
test
mov
rcrl
fdivrs
adc
aad
ret
js
pop
clc
sub
add
popa
ret
sub
lret
lea
or
xor
jl
jbe,pn
inc
rcl
xlat
mov
dec
xadd
mov
push
cmp
xchg
xor
sub
fdivrl
sub
jb
movsb
lret
xor
aad
pop
movsl
push
mov
adc
test
insb
adc
or
aad
or
sbb
sub
jbe
xchg
or
out
push
add
push
push
and
push
mov
and
adc
push
push
push
mov
mov
sahf
test
dec
imul
inc
aaa
stc
and
cs
xchg
pushw
stos
and
nop
adc
dec
jmp
push
jae
mov
adc
sub
push
xchg
jne
mov
xor
xor
fidivrl
ljmp
or
mov
dec
loope
xchg
inc
pop
and
push
rolb
sbb
cmc
xchg
mov
loopne
push
fimull
lock
in
jp
xor
xlat
mov
and
in
push
fs
or
xor
and
and
cmp
lea
xchg
push
sbb
jle
jbe
push
add
movl
fmuls
mov
or
cs
mov
repnz
and
push
addr16
sbb
cmp
in
mov
jle
mov
mov
lret
pop
rclb
dec
push
icebp
mov
sbb
and
push
sbb
mov
mov
dec
add
pop
adc
outsl
mov
dec
bound
in
scas
mov
getsec
adc
je
dec
inc
push
rcll
cmpsl
add
xor
mov
sbb
fildl
outsb
je
jg
add
dec
push
add
inc
sub
fs
push
insl
loopne
mov
push
loope
mov
insb
sub
inc
or
aaa
and
adc
dec
sbbl
inc
push
ja
movsb
and
or
adc
sbb
and
aam
mov
mov
test
inc
adc
mov
test
jecxz
mov
test
dec
pop
push
add
lea
xor
stos
add
sarb
gs
fcmovbe
ret
lcall
je
sub
sub
xchg
pop
adc
adc
rorb
and
add
pop
jmp
jne
and
add
sub
xor
sbb
cmp
popf
movsb
pop
cmp
push
sub
push
lods
xor
mov
pop
fsubp
lods
sub
pop
mov
sub
cmp
sbb
cld
inc
pop
je
je
add
cmp
cmp
cmp
add
inc
aaa
inc
flds
imul
cli
push
jo
xor
test
rol
sub
and
sub
mov
lcall
add
sub
push
mov
call
mov
cmp
pop
shrb
test
xor
push
sub
mov
cmp
bound
cmp
xchg
nop
sub
cmp
and
push
xchg
cmp
scas
pop
cmp
mov
xchg
nop
cld
mov
cmp
add
pop
pop
pusha
xchg
lret
add
bound
cwtl
dec
inc
cmpsb
push
cmpsl
push
out
sub
js
cmp
cmp
push
mov
add
popa
repnz
cld
inc
adc
mov
mov
mov
aad
or
dec
jb
mov
inc
cwtl
cwtl
daa
and
jnp
adcl
insb
pop
inc
pop
dec
dec
adc
xor
dec
cmp
shrl
loopne
sbb
xor
pop
xchg
push
loope
stos
adc
push
lods
dec
mov
mov
idivl
sahf
out
lcall
pop
int
jl
mov
mov
fwait
imul
push
xlat
in
add
out
mov
jle
sub
jg
andb
mov
pop
daa
addb
or
jae
ds
and
and
cmp
push
lahf
inc
cmp
add
adc
xor
loope
mov
pusha
push
mov
xchg
fadds
jno
cmp
mov
outsb
push
sbb
jg
cmpsb
inc
cmp
das
clc
pushf
ret
pusha
jle
mov
sub
leave
orl
enter
add
push
ljmp
or
jb
cmp
push
pop
inc
lods
adc
mov
or
imul
test
aas
mov
adc
lods
fiadds
mov
fimuls
add
push
out
jne
orb
mov
xchg
add
add
or
xor
add
push
stc
sbb
inc
int3
imul
mov
inc
xor
jmp
js
cmc
insb
mov
and
cltd
and
mov
add
and
lock
flds
add
add
cmp
jmp
jl
jp
push
add
lods
push
xlat
mov
inc
add
xor
pusha
inc
sub
imul
xchg
sub
mov
movsb
outsb
pop
pop
push
lcall
mov
xlat
insl
mov
adc
subl
lods
mov
mov
add
xor
add
cmp
addr16
in
xor
mov
cmpsb
cmp
outsl
shll
jo
or
fwait
js
mov
or
adc
cmp
add
sub
dec
mov
or
insb
add
pop
pop
inc
or
lea
or
or
dec
cmp
sbb
xor
cmp
jns
xchg
fs
dec
jo
pop
popa
cmp
push
push
jl
cld
mov
add
xor
jb
lea
adc
pop
in
lcall
mov
fwait
add
fdivrl
es
addb
xchg
test
adc
lea
push
add
mov
xchg
jb
pushf
mov
or
sub
rcl
sub
sub
xchg
xor
or
push
or
push
fs
int3
jecxz
fs
in
enter
test
mov
and
incb
ret
push
push
add
sbb
loopne
mov
inc
call
xchg
mov
sub
movsb
repnz
outsl
mov
and
sbb
movsl
mov
aad
push
insl
push
inc
cmp
or
jle
insb
subb
cmp
dec
or
xor
pop
and
dec
mov
repnz
pop
dec
cwtl
sub
push
adc
jns
jl
fistl
mov
push
push
sbb
or
test
test
mov
lock
pop
cmc
sub
lods
mov
add
notl
dec
xchg
rcll
int3
mov
mov
add
sbb
das
clc
sub
inc
cmp
fistpl
and
test
push
lcall
sbb
or
loopne
adc
jne
add
push
push
sbb
inc
mov
cmpsb
lcall
or
push
pushf
pop
mov
popl
mov
xchg
cmpsb
nop
aad
andb
idiv
into
sub
push
xchg
push
aam
add
push
sbb
sbb
pop
ja
jne
mov
xchg
test
dec
lcall
movsb
push
adc
mov
aas
jbe
add
in
aas
sar
push
cmp
jne
mov
movsb
iret
and
xor
nop
and
pop
popf
and
clc
enter
mov
xchg
pop
pop
leave
or
inc
adc
sbb
sub
xor
lods
cmp
and
pop
fisubl
xor
insb
lcall
sbb
push
dec
aas
ss
lods
or
inc
add
sbb
xor
orl
jp
orb
scas
mov
mov
or
cmp
cmp
loop
add
sbb
jp
push
pushl
mov
dec
inc
lock
mov
insb
xchg
in
inc
loop
jl
cmp
rorb
lret
cmp
adc
xchg
push
ret
rorb
adc
xchg
popw
inc
pusha
aaa
adc
jge
jmp
das
mov
add
and
les
add
or
adc
ret
push
or
cmp
fs
inc
shlb
nop
sbb
sbb
jnp
cwtl
lock
sti
push
dec
je
add
dec
xlat
cmp
xchg
in
and
mov
xor
add
lahf
jae
and
sub
sub
push
lds
sub
idiv
sar
sbb
imul
sar
and
out
xor
mov
cmp
xorb
inc
push
xchg
ret
or
push
fdivr
aas
lea
and
mov
push
xchg
incl
pop
cmpl
add
je
cmpl
dec
aam
adc
or
inc
bound
mov
or
xchg
outsb
push
sub
ret
sub
push
xchg
lods
pop
xchg
mov
push
mov
push
test
rcll
adc
xchg
jns
sub
xor
cmp
fiadds
dec
add
mov
sub
mov
std
iret
fwait
sbbb
cmp
je
adc
cmp
lods
pop
fidivrl
ja
shrb
mov
dec
pop
mov
jge
leave
push
je
push
dec
jecxz
lret
sub
sbb
sub
in
dec
lret
jne
fistpll
sbb
jnp
fwait
push
sbb
sbbl
lock
adc
push
movsb
and
iret
sahf
push
mov
inc
mov
add
push
mov
jns
aad
pop
or
ds
ds
inc
xor
push
hlt
mov
call
or
cmp
in
and
adc
dec
push
push
scas
jae,pn
lret
adc
ss
lds
pop
into
fisttps
push
pop
cmpb
sbb
push
dec
pop
test
push
adcb
push
jbe
ret
mov
lret
adc
mov
xor
or
and
add
in
adc
mov
int3
push
inc
rorl
mov
push
ficoms
das
push
sbb
sarl
xchg
push
daa
lret
ud2
fsts
movsl
mov
imul
outsb
xchg
int3
push
mov
stos
inc
sbb
jno
xchg
push
mov
dec
cmp
pop
movb
pushf
ja
lcall
jmp
and
movsb
in
xor
jge
add
adc
stos
cmp
jge
xchg
pop
loope
lods
push
and
jns
cmp
shll
out
xchg
movsl
mov
test
imul
dec
adc
mov
into
xchg
lcall
insb
stos
add
data16
rcrb
cmp
pop
pop
add
xor
mov
push
cwtl
dec
mov
enter
js
aaa
mov
adc
adc
std
mov
jg
clc
call
pop
jo
imul
stc
cwtl
sub
outsb
sbb
and
add
cmp
les
sub
mov
push
xor
jl
push
mov
jae
jne
or
push
aas
push
jo
add
aam
push
xor
add
andl
imul
adc
push
cmp
xor
int
mov
and
enter
xor
adc
stos
sbb
and
mov
sub
cmp
mov
jns
jg
sbb
out
imul
into
sbb
jle
sbb
push
add
dec
cmp
push
out
xchg
test
cmp
inc
jge
mov
add
andl
push
and
sbb
arpl
pop
inc
sbb
iret
jge
inc
scas
push
mov
cltd
mov
imul
mov
sbb
adc
inc
sub
cmpsb
fs
mov
mov
imul
lds
mov
aas
jle
cmp
out
xsaves
inc
arpl
xor
out
enter
sbb
iret
dec
imul
jns
lret
pop
cmpsb
jg
fidivrs
out
je
test
mov
inc
negl
add
scas
fwait
add
add
into
and
and
adc
mov
add
mov
jns
pop
xchg
cmpb
push
das
fcoms
sbb
and
fidivrl
cmpsl
xlat
inc
xor
lcall
jb
push
pop
je
xchg
push
clc
adc
pop
inc
std
and
cmp
andb
and
mov
fcoms
mov
test
adc
mov
add
orb
or
add
rol
mov
xor
sbb
ss
push
aad
repz
out
int3
das
jno
cwtl
lcall
bswap
push
jns
out
data16
movsl
mov
iret
in
push
into
and
mov
sbbb
icebp
test
hlt
push
cmc
and
lock
lea
rorb
jne
mov
cwtl
pop
lods
add
outsl
mov
mov
rorb
push
or
push
push
mov
jmp
push
dec
inc
cmp
adc
xchg
add
lods
sub
and
shll
test
jne
and
and
or
je
enter
and
enter
pop
dec
pop
ss
mov
rcrl
pop
mov
adc
rolb
pop
paddd
adc
mov
and
dec
push
sbb
or
fsubr
pop
and
mov
addb
in
sub
mov
mov
push
nop
or
xchg
adc
mov
push
adc
inc
xchg
pop
pop
xor
inc
push
add
adc
stos
loopw
pop
and
pop
cmp
inc
les
movb
push
mov
in
xchg
test
jmp
cmpsb
orl
sub
scas
xchg
mov
test
dec
das
es
movb
daa
mov
leave
pop
inc
lea
mov
mov
gs
pusha
andb
mov
adc
mov
loope
or
xchg
pop
mov
dec
inc
cmp
leave
pop
mov
mov
add
loope
add
pop
fistpl
add
nop
dec
mov
lcall
jecxz
mov
pop
mov
xor
mov
es
sbb
addr16
pop
dec
repnz
rcl
pop
sbb
bound
imul
xor
std
push
pop
outsb
xor
pop
sbb
frstor
jg
mov
dec
mov
cs
push
popa
arpl
sbb
fdiv
lea
xor
jno
adc
inc
imul
mov
inc
stos
jb
add
xor
test
pop
dec
je
xchg
out
inc
repnz
mov
loope
push
daa
sub
test
je
add
push
push
adc
insl
sub
pop
or
in
stc
loopne,pn
fsubr
fdivrs
dec
in
add
mov
repnz
call
loopne
mov
pop
mov
dec
or
or
enter
cld
mov
pop
add
mov
shlb
push
sub
test
outsl
push
xor
or
inc
test
ds
xchg
outsl
push
jbe
sbb
add
add
xor
sahf
pop
adc
jo
enter
and
push
and
mov
ja
dec
adc
or
cmp
imul
mov
leave
and
and
sub
or
or
jne
mov
adc
mov
mov
inc
movsb
mov
and
pushl
or
pop
jp
mov
xor
push
pop
nop
jbe
lcall
dec
add
push
or
mov
add
shlb
out
add
mov
pextrw
addb
insl
add
push
sbb
jae
lret
test
popa
stos
and
mov
push
adc
ror
mov
or
pop
arpl
dec
dec
jmp
pop
add
xchg
fnstcw
cmp
mov
inc
xchg
outsl
mov
jo
in
cmp
loopne
fs
sbb
jmp
sub
mov
push
iret
or
sbb
or
push
arpl
ds
inc
add
push
jnp
xor
dec
fimuls
mov
mov
lods
or
push
jmp
jns
pop
cltd
adc
or
sbbb
sbb
xor
lock
mov
repz
nop
je
jg
repnz
adc
stc
add
test
xchg
movsb
inc
test
pop
test
aam
pop
or
or
ret
inc
or
ret
push
lea
gs
add
mov
mov
fidivl
inc
cld
adcb
pop
mov
ja
out
stos
mov
mov
mov
lods
sar
adc
lock
mov
mov
add
lods
inc
lock
sbb
cli
push
dec
inc
pusha
mov
idivb
movsl
push
icebp
lock
xchg
pop
add
jecxz
dec
std
insb
sbb
push
add
push
ljmp
mov
sbb
xchg
loop
push
fmull
xor
add
xor
inc
sub
push
push
bound
xor
jne
std
repnz
push
dec
dec
es
cmp
loope
push
outsb
jne
jne
sbb
icebp
jle
xor
push
push
dec
push
push
sub
add
push
adc
stc
add
clc
add
jmp
push
mov
and
xchg
xchg
add
in
jle
mov
sub
lret
inc
cs
lods
call
sub
and
inc
jmp
push
enter
in
xchg
inc
mov
dec
or
flds
dec
out
cmc
xchg
or
sti
in
sbb
imul
pop
clc
push
adc
je
into
adc
insl
push
add
sbb
xchg
les
inc
addl
sub
sub
rolb
iret
mov
push
jo
jns
mov
outsl
mov
fisubrl
test
sub
ss
push
adc
cmp
out
incl
test
bound
test
pop
pop
aam
out
push
xor
mov
sti
testl
xchg
adc
push
mov
sub
add
movsl
shr
hlt
xchg
mov
mov
dec
jecxz,pt
push
mov
cmc
ret
push
lea
push
push
stos
or
sub
xor
fs
cs
and
test
dec
mov
sbb
lock
sbb
pusha
mov
xor
cmpsb
pop
cmpsb
in
loopne
imul
pop
inc
pop
adc
mov
add
cmp
jmp
mov
or
mov
push
inc
ja
repz
cmp
adc
shlb
lea
insb
push
test
je
push
push
sbb
cmp
cs
pusha
sub
addb
mov
loope
add
inc
lcall
loopne
mov
stc
sbb
mov
push
push
call
repnz
cmpsb
in
scas
data16
and
xchg
loopne
pop
or
add
or
pop
test
or
adc
pop
mov
sbb
add
adc
cld
sub
jg
outsb
pop
mov
imul
es
cmpsl
push
pop
inc
dec
cmp
cli
push
prefetchwt1
xchg
stos
xor
mov
movsl
push
jno
fwait
lea
insb
repnz
cmp
adc
fidivrl
mov
or
add
mov
cmp
jg
ja
clc
sub
lock
sar
cmpsb
ret
mov
push
cmp
jle
ljmp
dec
dec
adc
xchg
and
dec
fdivrs
hlt
out
sub
pop
bound
in
add
xchg
push
sub
icebp
mov
fiadds
out
cmp
jb
push
testl
pop
testl
jmp
ret
data16
mov
push
and
movsb
scas
cmpsl
lods
pop
in
dec
ljmp
dec
adc
mov
sahf
add
push
mov
imul
mov
inc
mov
in
adc
pop
in
or
pushf
in
lcall
xchg
fidivs
roll
fsubl
in
adc
scas
inc
push
cmp
mov
jb
clc
mov
es
sub
dec
jb
mov
push
push
add
sub
xchg
cmp
bound
das
sbb
jp
mov
sub
bound
jge
mov
loopne
mov
sub
or
xchg
loope
rol
lcall
movsb
sar
cmc
rclb
or
mov
je
mov
and
sub
add
xchg
jo
add
rorb
lret
cmpsb
cltd
sbb
add
rcll
mov
pop
je
add
test
ret
inc
inc
je
cmp
xchg
shlb
subb
add
pop
xor
js
adcl
adc
pop
adc
mov
add
push
pop
push
dec
fisttpll
sub
sub
or
cmp
jae
xchg
xor
jecxz,pn
pop
push
push
mov
sub
inc
jb,pt
ds
jge
ljmp
mov
add
andl
das
ret
mov
push
sub
je
push
and
sbb
sbb
fmuls
inc
sub
xor
sbb
fstl
push
jp
inc
iret
loop
push
adc
filds
test
enter
push
push
jns
push
push
mov
popf
dec
sbb
push
lcall
dec
and
push
pop
jo
mov
lret
and
adc
mov
add
in
inc
jmp
fistl
loopne
or
xor
rclb
or
sub
mov
and
jle
cmpl
popf
icebp
push
push
xor
inc
add
jg
xlat
and
in
sbb
mov
jo
js
push
mov
dec
enter
fcoml
push
shrb
notb
add
adcb
and
adcb
or
jno
test
scas
fisubrl
loope
or
orb
add
lods
mov
cli
xor
sub
mov
xor
dec
push
dec
ret
pop
sbb
call
mov
lcall
cmp
pop
fstl
fnstcw
nop
dec
scas
mov
cmp
xchg
adc
cmpl
shrl
dec
or
out
push
adc
loop
adc
out
and
add
addr16
push
push
push
inc
cmc
addl
idivl
stos
lods
xchg
cmc
jg
repz
lcall
scas
add
adc
adc
push
and
pop
cmpsb
and
adc
sbb
inc
call
sub
dec
adc
jne
sbb
rorl
fxch
jmp
adc
shl
and
in
and
lcall
scas
test
sub
xchg
xor
in
loope
dec
add
or
and
mov
rcl
dec
adc
add
push
or
pushf
inc
jb
inc
push
ljmp
aaa
mov
add
sbb
stos
and
mov
xchg
push
adc
push
pop
and
adc
push
mov
sub
ret
inc
lahf
rorb
mov
jo
xchg
test
in
insl
hlt
outsl
cmp
push
adc
leavew
push
pop
xchg
or
push
and
dec
and
es
xchg
add
mov
rcrb
mov
lea
add
je
enter
adc
in
mov
or
movsb
ret
add
push
xchg
adc
mov
and
dec
in
jle
mov
stos
loopne
rcll
push
hlt
or
inc
add
pop
out
add
outsb
xchg
push
test
jg
mov
sub
ret
in
dec
mov
inc
je
lds
and
adc
inc
pushf
cmpsb
lods
sbb
or
add
cmpsb
sbb
jns
sbb
lea
mull
outsb
ss
dec
and
int3
and
add
repz
fsts
mov
xchg
pop
call
jnp
mov
out
es
filds
sub
mov
cmp
and
adc
or
aas
cmp
fcmovnb
repnz
ret
and
ret
pop
or
sti
jne
test
mov
xor
xchg
das
xchg
inc
pop
call
add
xor
add
into
add
pushl
adc
test
mov
dec
xor
sbb
mov
mov
aaa
adc
mov
ret
loop
jae
pop
cmp
sarl
dec
js
add
aaa
mov
sbb
dec
sub
pop
rclb
hlt
inc
faddl
jge
and
cmpsb
or
mov
int3
loop
dec
sub
and
push
sub
add
arpl
inc
mov
pusha
movsl
nop
shrb
andl
xchg
xorb
movsl
and
test
push
or
and
push
inc
dec
dec
jmp
test
lea
movsb
pop
cld
gs
jl
rcr
insb
lea
and
aas
lods
mov
dec
mov
sbb
mov
mov
fimuls
mov
dec
mov
push
test
add
xchg
push
outsb
add
and
push
push
test
mov
pop
jbe
sub
jne
inc
loop
mov
dec
or
lock
out
lods
in
pusha
lret
gs
dec
popa
mov
mov
cmp
jle
add
js
mov
xor
movsl
mov
leave
pop
enter
ret
out
mov
cmp
rcll
lea
fstl
clc
jo
push
push
data16
or
test
inc
mov
or
imul
repz
fstpl
add
mov
mov
xor
push
out
dec
adc
call
inc
push
bound
or
push
cmp
mov
hlt
sti
enter
out
jecxz
mov
jne
xor
pusha
cmp
inc
jmp
jne
xor
sti
gs
and
push
add
adc
and
arpl
or
inc
ds
loopne
je
dec
cli
add
jg
js
dec
cmp
imul
stos
pushf
inc
sub
adc
push
sbb
data16
pop
dec
pop
sub
jg
push
push
push
pop
push
or
lahf
outsb
mov
dec
adc
and
std
xorb
enter
js
movsb
add
imul
add
push
push
add
rclb
testl
mov
je
mov
dec
mov
sub
movsb
add
push
dec
sbb
clc
jo
je
inc
sbb
dec
pop
insb
push
and
out
cmp
xor
cmp
stos
mov
jg
or
mov
cmp
jne
inc
insb
mov
sbb
and
cmp
add
inc
xchg
fmuls
mov
xorl
add
xorl
sub
xor
scas
hlt
xlat
xchg
and
fst
push
arpl
rcll
adc
push
adc
mov
jecxz
dec
stos
sbb
inc
cli
jmp
mov
pop
add
sbbl
aam
jno
std
sbb
adc
jo
or
push
mov
aad
sub
xchg
je
jle
sub
icebp
jne
mov
jne
or
xchg
sbb
sbb
mov
or
dec
push
pop
pop
icebp
imulb
nop
add
jbe
jg
ret
push
push
add
testl
cmp
lahf
js
movl
mov
jne
jno
sub
ljmp
jecxz
gs
lock
push
xchg
or
jnp
dec
and
pop
xor
mov
and
js
push
sub
nop
mov
fiaddl
add
cmp
sahf
and
dec
push
inc
or
ret
xchg
push
sbb
sbb
orl
dec
jl
push
cmc
dec
ret
andl
loopne
mov
mov
sub
push
xorb
or
pop
lahf
add
mov
xor
push
sti
xchg
jmp
inc
cmp
xchg
ja
jnp
mov
pop
or
rol
mov
xchg
pushf
shlb
push
jo
mov
outsl
and
push
icebp
pusha
cltd
sub
test
test
pop
inc
cmpsl
push
mov
mov
xchg
mov
adc
nop
adc
leave
mov
push
stos
fstps
inc
bound
xor
dec
cmp
outsb
movsl
cwtl
push
pop
pop
lods
xchg
daa
fwait
push
adc
into
inc
cmp
and
and
aaa
jne
stos
push
inc
sub
jnp,pn
xorl
out
adc
ljmp
adc
cmovae
and
adc
mov
je
cmp
stos
lods
sub
shr
je
push
mov
outsl
js
test
loopne
pop
scas
mov
js
sti
subl
jbe
sbb
pop
cmp
jge
ja
icebp
int
inc
mov
jmp
sbb
and
fcoms
sbb
loope
pop
jo
daa
inc
sbb
mov
or
add
or
in
add
mov
pop
adc
cli
mov
ret
leave
test
popf
dec
pop
push
and
mov
dec
add
rcr
push
cmc
add
dec
movsb
and
pop
cmpsb
fstl
jp
cmp
inc
push
pushw
inc
out
adc
dec
sub
pop
je
stc
sbb
or
adc
or
xor
xlat
inc
mov
sbb
ret
or
jg
cpuid
imul
adc
xor
adc
outsb
pusha
imul
shrl
or
pop
jb
dec
loope
movsb
mov
mov
push
scas
sub
dec
imul
pop
xorl
int3
aaa
and
mov
das
adc
pop
pop
mov
pushf
je
mov
push
iret
jne
in
xchg
mov
inc
mov
or
fdiv
and
dec
scas
enter
mov
jb
out
mov
cmp
inc
pop
add
or
lock
inc
adc
scas
ljmp
addb
push
dec
stos
pop
mov
sbb
rcrl
lods
mov
push
out
imul
push
cmp
or
sub
mov
push
cmp
aaa
xorb
mov
jo
add
sbb
push
inc
mov
icebp
and
and
push
pop
cmpsl
or
or
out
outsb
adc
xor
cmp
scas
mov
mov
les
pop
mov
adc
lret
pop
xor
xchg
popa
mov
xor
loop
test
inc
cmpsl
cmp
dec
test
mov
jb
rcrb
nop
push
add
cmpsl
adc
mov
mov
imul
orl
inc
push
add
cmp
inc
test
fisubs
sub
add
dec
add
cwtl
xchg
lods
push
mov
or
mov
and
nop
cmpl
add
cmp
jl
adc
mov
ds
lret
cmpb
pushf
pop
sarb
push
and
push
xor
push
cmp
mov
test
sbb
push
adc
or
aaa
out
push
xchg
sar
xchg
push
inc
js
repz
stc
sbb
sub
inc
xchg
scas
jo
and
adc
pop
inc
or
push
andl
and
dec
sti
pop
adc
lcall
xchg
insb
push
cmp
lea
fimuls
cltd
jmp
aad
inc
mov
ss
js
or
popf
push
loopne
sbb
or
push
and
imul
push
sub
jo
popf
xchg
xor
enter
xor
dec
mov
mov
lea
mov
sti
aam
or
xor
add
outsl
pop
sbb
push
arpl
adc
flds
add
xchg
add
jno
les
popa
jg
pop
or
jne
pop
mov
fs
jns
in
mov
lods
lahf
push
pop
dec
ret
sub
push
jl
inc
jbe
popa
lods
xor
sub
and
xor
pusha
lock
mov
cli
cmp
push
orb
xchg
push
push
loopne
mov
xlat
faddl
dec
inc
std
jne
sbb
fnstenv
out
lods
scas
out
rorb
ja
jle
add
popa
pop
daa
add
fnsave
jmp
scas
insb
add
mov
and
aaa
add
test
adc
orps
inc
and
or
jle
xorb
add
inc
sub
sbb
and
jo
test
add
adc
adc
mov
add
nop
arpl
jge
inc
and
jmp
pop
cmpsb
sarl
add
lds
lret
inc
add
test
xor
sbb
data16
hlt
and
loope
popf
adc
cmp
sarb
testb
push
and
pop
adc
jne
or
xchg
nop
aad
loopne
xor
mov
lcall
cmp
mov
mov
cmp
push
pusha
jo
jge
cli
push
mov
fdiv
xchg
roll
push
pop
es
cmp
inc
push
adc
xor
inc
inc
inc
mov
add
dec
dec
push
scas
loopne
dec
je
inc
jne
cmp
sbbl
sub
dec
aaa
in
aas
rolb
xor
inc
cmpsb
in
mov
repz
mov
add
pop
fcomps
and
ds
push
inc
test
mov
push
push
sbb
cmp
adc
sbb
fwait
jne
push
mov
jg
dec
inc
pusha
sbb
and
jne
subb
clc
mov
sub
sbb
inc
test
lret
into
push
adc
aaa
mov
cmp
mov
insl
jmp
inc
loopne
push
test
test
nop
and
fstpl
dec
in
add
add
dec
xor
adc
sbb
hlt
pop
shlb
pop
outsl
sbb
loope
popa
jne
xor
rep
xchg
cs
cmp
call
insb
jecxz
mov
popf
pop
and
jo
imul
pop
insb
popf
cmp
add
mov
cmp
rorb
add
dec
pop
adc
mov
fs
lock
add
and
movsb
add
adc
mov
imul
inc
cmpsb
cmp
lock
subb
mulb
adc
mov
pop
push
mov
sub
jne
sub
rorb
xor
xchg
sub
mov
incb
xor
lea
add
xor
mov
cmp
sub
lahf
test
sub
std
inc
cld
inc
scas
and
push
push
push
sub
add
dec
jns
fisttpll
dec
add
in
outsl
popa
jl
repnz
sub
lcall
rolb
sub
add
sti
cmp
xor
mov
sub
or
inc
pop
out
shl
push
add
pop
and
add
mov
and
dec
lahf
pusha
dec
pop
add
cmp
sub
jmp
aas
dec
pop
shrl
mov
jg
dec
jmp
adcb
or
movsb
sbb
cltd
jns
sysenter
cmp
adc
lds
ljmp
adc
leave
sti
dec
xchg
xchg
loopne
xor
insl
lock
add
out
in
es
or
push
daa
lods
mov
mov
and
push
loope
dec
push
dec
ret
sub
add
pop
dec
inc
pop
icebp
adcb
cmp
dec
add
or
mov
push
or
sbb
inc
loopne
les
aam
das
pop
xlat
dec
cmp
leave
pop
pop
in
add
adcb
pop
ret
sub
mov
mov
addr16
xor
or
push
loopne
or
push
sub
sbb
test
push
add
xchg
jno
cmp
pusha
mov
push
das
xor
sbb
gs
mov
push
push
cmovo
pop
loopnew
movsl
lock
push
enter
and
and
inc
inc
push
push
dec
insl
pop
sub
addl
or
add
push
inc
loope,pn
dec
xor
push
jmp
lods
sub
and
jno
rcrb
pop
ret
int3
push
sti
pushf
adc
jnp
mov
push
in
shrl
add
jl
imul
push
mov
mov
insl
scas
mov
mov
adcl
xchg
xor
dec
cwtl
sbb
pop
and
call
xchg
sbb
mov
fidivrl
sbb
jbe
mov
mov
loopne
outsb
jbe
int3
aam
push
and
shll
inc
cmp
test
jg
mov
mov
dec
or
in
stc
lock
xor
loopne
push
addr16
xchg
xchg
xor
xor
inc
sbb
gs
cmp
push
aaa
sbbl
imul
les
jo
xchg
add
cs
ss
inc
push
add
sub
movsl
dec
cmp
cmp
mov
and
push
or
push
sbb
jmp
insl
push
mov
adc
adc
add
pop
sbb
jmp
lcall
sub
pop
clc
cmp
movl
fidivrl
inc
and
cmc
push
clc
test
pop
sub
inc
int3
lock
xor
cld
adc
in
fstp
insl
push
inc
in
loop
mov
mov
xor
adc
dec
bound
outsb
fsub
add
insb
jo
sbb
xor
fidivl
cmpsl
xchg
push
xor
add
lock
and
hlt
sbb
data16
int
and
xchg
add
add
fistl
es
loopne
sub
sub
mov
je
test
dec
or
repnz
sbb
mov
add
sub
rclb
aam
lock
dec
push
push
aam
sti
loopne
insb
shl
jmp
cmp
sbb
jne
lcall
jmp
push
scas
ret
js
and
scas
sarl
test
mov
mov
les
les
add
ret
mov
mov
inc
popf
mov
icebp
or
call
pop
outsl
xor
sbb
aad
fcompl
cmp
in
xlat
mov
inc
cltd
mov
pop
mov
pop
data16
cmp
push
outsb
inc
adc
fdivrl
in
xchg
stos
aas
pop
adc
push
push
aad
sahf
push
push
jnp
aas
test
out
adc
out
sbb
cmp
sbb
adc
mov
adc
pop
xchg
cwtl
sbb
scas
leave
scas
mov
mov
sbb
dec
dec
loopne
loopne
or
and
jg
xchg
sbb
cld
aas
cmp
pushw
loopne
push
aad
dec
mov
xor
sbb
jbe
sbb
dec
sarl
in
xor
subl
pushf
pop
sbb
or
popf
or
repz
pop
ja
xchg
cmp
dec
in
pop
es
or
pop
mov
inc
sub
or
sub
out
inc
fwait
lods
lods
xchg
mov
push
scas
inc
jge
and
clc
pusha
pop
mov
je
pop
pop
sbb
cmp
jbe
adc
xchg
fldl
and
rcrl
insb
push
jl
divl
jmp
and
jnp
sti
or
push
and
out
jo
mov
adc
dec
or
mov
sub
or
inc
in
jo
dec
je
movsl
test
and
and
jmp
flds
inc
bound
sub
and
fstps
mov
mov
jecxz
mov
cmp
or
sbb
pop
imul
ljmp
xlat
jl
rol
inc
xchg
stos
pop
cmp
arpl
clc
jge
pop
rcrb
lock
cs
add
xor
push
sbbb
and
aam
sub
xchg
xchg
push
fisubl
add
jns
and
cwtl
cmp
insb
jo
mov
cmp
add
test
sbb
add
clc
inc
add
lock
lock
or
add
arpl
ficoml
push
xor
mov
or
sti
jg
test
pusha
jb
or
dec
popf
js
xor
sub
adc
adc
xchg
ds
xlat
or
or
pop
es
inc
adc
out
loope
subb
insl
ds
test
jne
mov
mov
push
cmp
adc
andb
push
ljmp
insl
daa
icebp
jl
or
and
add
dec
pop
inc
pop
pop
xchg
cmpsl
adc
stos
mov
pop
xorb
push
and
cmp
and
or
hlt
cld
decl
or
and
or
push
loop
lods
inc
fadd
push
cltd
mov
pop
jmp
pop
sub
mov
dec
sbb
imul
shl
fs
push
pop
inc
cmp
bound
cmp
cmpb
jne
push
dec
jne
mov
mov
mov
shll
cmp
jne
xorb
or
adc
fadds
or
or
inc
lea
or
sbb
lahf
add
mov
jmp
in
fldl
fyl2x
fstpl
loopne
rorb
pop
or
loopne
in
jg
mov
xchg
inc
xchg
fmull
leave
ret
adc
or
loopne
iret
mov
fstpl
flds
fabs
insl
mov
jne
jmp
fmull
fcoml
jle
adc
inc
push
adc
xor
adc
sub
je
xorb
pusha
push
and
and
or
xchg
lock
jnp
andb
fcompl
xchg
lea
mov
pop
add
sbb
ficomps
addb
mov
lcall
add
jecxz
stc
push
push
and
mov
mov
add
add
push
loopne
in
sbb
inc
sub
fiaddl
add
cmp
inc
and
or
cmp
out
js
pop
add
cmp
imul
push
inc
xor
sub
shll
and
push
aas
xor
sti
xor
and
inc
dec
sbbl
mov
mov
ja
imul
pop
repnz
inc
inc
xchg
inc
inc
cmpb
andl
in
or
push
pop
mov
push
xchg
inc
push
mov
mov
daa
loope
and
jb
cmp
push
adc
je
out
in
xchg
pop
dec
mov
sub
mov
mov
ss
insb
push
sbb
jecxz
jnp
cwtl
push
add
push
mov
push
jno
push
jmp
pop
xor
xchg
push
pusha
sub
xor
lods
ret
lea
pushf
js
push
add
popf
clc
or
sub
jg
dec
ss
mov
addb
push
jle
mov
adc
lock
add
inc
mov
in
aas
je
and
cmp
jne
ds
enter
shlb
in
mov
or
push
and
pop
out
or
adc
or
add
sub
sbb
or
fst
dec
push
jmp
cmp
daa
test
pop
mov
dec
cmpsb
add
adc
cltd
cmp
mov
fnstcw
addl
sub
mov
sbb
xor
push
sub
mov
sub
mov
adc
sarl
add
sub
and
sub
sbb
or
mov
es
xor
or
bound
mov
or
and
dec
rcrb
mov
dec
das
je
or
sbb
scas
or
je
xchg
icebp
add
ljmp
inc
in
jmp
inc
mov
lret
jns
dec
add
mov
xchg
and
sbb
out
jne
and
or
dec
dec
fimull
adc
mov
into
out
dec
push
stc
push
sub
xor
movsl
sub
inc
aaa
xorb
and
ds
inc
in
testb
adc
pusha
push
inc
adc
lret
mov
in
push
test
daa
and
jmp
and
pusha
pop
pop
jle
int
mov
andb
and
je
ret
adc
pop
jmp
movsb
lcall
or
pop
adc
loopne
add
and
sub
test
inc
add
clc
inc
xor
clc
jne
cmp
jne
mov
sbb
pop
ss
popa
pushf
movsl
sbb
icebp
add
or
icebp
jne
adc
add
push
pop
punpckhwd
insb
or
mov
or
adc
add
fldl
in
jle
or
popa
pop
jnp
push
ret
dec
ret
jg
loopne
mov
inc
pop
mov
je
mov
dec
sub
pop
dec
sub
clc
mov
into
adc
call
out
mov
and
fsubl
adc
pop
or
adc
std
jmp
pop
pop
pop
xor
insl
out
repz
jg
mov
cmp
jne
mov
ret
cmp
or
fstpt
inc
out
pop
out
jne
mov
ret
mov
jbe
cmp
jae
loop
or
aaa
push
stc
call
and
mov
in
jg
test
or
js
xorl
push
dec
adcb
aas
xor
jge
cmp
jle
xchg
repnz
cmp
mov
js
clc
sbb
jecxz
mov
push
mov
mov
jl
jno
mov
adc
dec
jecxz
jbe
mov
pop
pop
sbb
std
imul
push
push
add
addb
fisubrl
add
iret
or
aam
cmp
xchg
fiaddl
nop
mov
insl
pslld
mov
xchg
repz
inc
roll
icebp
jecxz
sti
add
pop
jbe
ljmp
clc
sbb
adc
mov
dec
xor
push
dec
aas
call
mov
pop
sbb
testl
mov
mov
dec
pop
sub
pop
mov
or
jl
mov
mov
inc
and
xor
and
cmp
test
mov
sub
mov
lahf
ret
dec
dec
mov
inc
in
dec
push
in
jbe
push
cmc
lods
pushf
popa
stos
rclb
ljmp
push
sub
les
adc
sub
sti
pop
ret
cli
xchg
add
push
mull
fisubrs
jge
movsb
ret
mov
xor
xor
andl
sub
xor
and
hlt
stos
push
es
ret
push
lcall
faddl
lahf
or
mov
mov
sub
dec
push
pop
or
test
push
mov
imul
out
ss
cmp
push
int3
push
inc
bound
jae
inc
mov
push
sub
add
movsl
sbb
test
lock
mov
sub
scas
rcl
mov
cld
mov
cwtl
ret
inc
ret
lods
adc
rcrb
cli
insb
sub
sub
mov
push
cmp
ds
sub
fimuls
into
pop
rclb
stos
insb
push
lods
pop
sbb
mov
addl
jo
cmp
push
shlb
or
xor
push
mov
mov
movl
xor
dec
movswl
sbb
adc
push
fisttpl
mov
pop
add
add
pop
je
ja
cld
and
and
ret
mov
imul
pusha
leave
inc
insb
pop
sbb
imul
mov
push
fbstp
jnp
cs
push
imul
adc
push
psrld
add
cmp
je
inc
push
adc
es
ret
dec
js
xchg
or
mov
push
sbb
add
lock
pop
cwtl
outsb
xor
push
or
test
mov
xchg
adc
jl
cmp
jg
movsb
cmp
xor
lcall
das
add
and
mov
or
int
pop
sub
dec
cmp
xchg
cmpsb
xorb
in
lcall
in
lods
insl
add
add
outsl
add
mov
fildl
sbb
pop
ret
addb
inc
push
es
aam
jns
and
syscall
or
mov
xlat
ficoms
or
jb
xchg
dec
testb
push
jbe,pn
test
addr16
push
movsb
push
sbb
shlb
outsl
enter
mov
imul
pop
scas
pop
jno
je
jg
negb
or
cmp
mov
or
xchg
jle
fimuls
push
mov
cmp
and
jbe,pt
cmp
jae
or
pushf
call
adc
popa
xor
push
or
fisubrl
insl
mov
push
iret
push
popa
nop
push
popa
adc
dec
xchg
push
xchg
push
add
fiadds
fwait
mov
mov
adc
push
mov
xorb
lods
sbb
push
push
fidivs
add
mov
inc
div
mov
loope
in
outsb
or
ljmp
imul
push
xchg
pmullw
push
xor
push
adc
mov
add
pop
pop
add
pop
cmp
adc
enter
cmp
daa
jp
and
loope
lds
sub
aas
cmc
xor
add
jmp
popa
jge
push
stos
add
pop
xor
lock
sub
and
jne
aas
sbb
je
or
sbb
aam
adc
jne
cmp
jbe
ret
cmp
int
mov
sub
iret
in
cmpsb
ficoml
adc
adc
adc
or
das
xor
daa
pop
sbb
mov
adc
sbb
sub
decl
ds
sub
fwait
inc
mov
xchg
gs
add
pushf
add
dec
sbb
les
dec
shrl
add
lea
fmuls
das
inc
push
cmpsb
sub
adc
mov
rep
stos
lea
mov
lea
pop
inc
enter
enter
aaa
xchg
js
cli
xor
insl
sub
xor
fldt
fidivrs
xor
and
std
jle
test
sbb
out
outsl
adc
movsl
movsb
push
sub
subl
movsw
repz
mov
add
mov
xor
add
sbb
or
test
push
jecxz
pop
or
bound
aas
movsb
dec
sub
fcoms
dec
mov
inc
push
add
movl
decb
push
pop
xlat
push
lock
jne
mov
mov
sub
push
sub
push
push
mov
ljmp
mov
or
jae
or
lret
lock
mov
mov
mov
sub
ja
adc
xchg
pop
pop
sbbl
mov
sbb
mov
mov
repnz
jp
outsb
adc
fdivrl
mov
popa
or
jle
xor
push
mov
ret
adc
sarb
popa
cli
mov
adcb
jle
call
lret
mov
and
insb
adc
jle
aaa
ljmp
adc
mov
lea
cltd
div
inc
cmp
sarl
inc
xorb
outsl
movsl
std
or
jge
mov
push
inc
js
clc
ja
pop
psubb
mov
aaa
fidivl
inc
sub
rolb
dec
jne
mov
sbb
sti
int
inc
jp
int
addl
outsb
jae
fbstp
mov
mov
sub
fmuls
jge
cmp
sub
call
mov
push
xor
inc
cli
out
movsb
pusha
stc
fcmovu
mov
mov
adc
add
out
inc
jg
mov
jmp
lea
aad
xchg
xor
std
shrb
or
ss
mov
enter
push
adc
out
jp
popa
shrb
popf
imul
jecxz
jge
lcall
outsb
ret
cltd
push
loop
pop
mov
inc
add
lea
add
add
popf
add
inc
add
pop
insb
es
push
dec
into
and
sar
mov
add
int3
adc
iret
mov
pop
push
adc
jp
stos
stos
mov
sbb
fwait
int3
call
andb
dec
adc
adc
inc
scas
je
call
push
mov
fwait
dec
xchg
or
or
ret
push
push
shll
rolb
xchg
jle
add
adc
imul
shl
jle
and
lea
or
test
ds
cmp
add
cmp
xlat
mov
outsb
and
int
es
out
in
rcll
in
fdivrs
insb
fwait
push
jmp
jle
loopne
ja
in
ja
push
rolb
and
cltd
fldcw
insl
adc
push
and
inc
inc
and
add
and
outsl
push
sbb
add
test
jmp
push
xor
mov
je
dec
test
xor
call
lods
dec
pop
mov
mov
sbb
adc
out
or
cmp
jb
test
lock
adc
sub
clc
insb
or
jb
jbe
sub
andl
in
mov
clc
adc
sbb
lahf
addl
scas
lret
adc
cmpsl
test
aam
fidivs
sub
cmp
cmp
inc
or
in
dec
enter
xchg
and
adc
xlat
loope
mov
jle
inc
inc
lods
cmp
outsb
inc
sbb
daa
mov
push
mov
cwtl
sub
xor
data16
sahf
xorl
mov
cmp
jns
popa
inc
mov
push
add
jmp
or
sbb
and
in
push
pushf
xor
loopne
xchg
lock
in
sar
cmp
fwait
add
pop
icebp
sub
dec
and
scas
sbb
mov
mov
or
add
cmc
cmpsl
fwait
mov
nop
push
push
dec
pop
cmpsb
cmp
xlat
add
ljmp
mov
das
adc
add
push
dec
cmp
pusha
pushf
mov
cltd
mov
sub
push
popa
test
arpl
cs
xor
rclb
punpckhbw
cmp
add
push
pop
pop
lea
lret
in
das
jns
push
adc
cmp
arpl
add
aaa
pop
mov
xor
rolb
and
or
pop
fcomps
pushl
add
or
push
xor
or
xchg
pop
mov
outsl
xchg
xor
ret
add
je
fldenv
cltd
mov
and
xchg
rorl
jae
in
mov
dec
inc
sbb
mov
jns
addb
pop
pop
xchg
aas
mov
test
sub
arpl
mov
mov
addr16
stc
dec
sbb
jle
inc
xchg
dec
jne
sub
xor
xchg
pop
jb
mov
xor
add
mov
push
fdivrs
jg
jle
add
movsb
aaa
icebp
xchg
jnp
sub
cmp
sub
sbb
or
and
and
sbb
enter
dec
dec
test
dec
inc
adc
inc
push
cltd
inc
or
rolb
or
loop
fwait
int3
adc
rol
dec
cmc
cmp
inc
xor
addr16
mov
enter
add
jge
fmull
xchg
out
cmp
shrb
add
mov
dec
sbb
sub
mov
cmp
rcr
mov
mov
pop
adc
or
add
pop
loopne
outsl
sbb
jge
xor
arpl
xchg
cmpsl
sbb
mov
inc
sahf
outsl
pop
arpl
inc
mov
mov
popl
xor
adc
iret
inc
inc
ffree
out
dec
stc
push
adc
mov
loopne
and
mov
je
adc
push
push
sub
xor
jae
dec
xchg
add
cmc
and
adc
mov
add
push
dec
push
mov
into
inc
sbb
mov
push
add
lods
sbb
arpl
ret
xor
lahf
push
mov
in
idivb
jnp
push
adc
mov
mov
push
inc
jecxz
and
adc
cmpsl
xchg
pop
pusha
add
pop
sbb
xchg
pusha
push
pop
or
dec
cmpl
mulb
loope
dec
inc
std
or
jmp
jge
testb
or
fadds
scas
xor
ds
jle
push
ret
mov
hlt
cmp
or
xchg
push
sahf
push
insl
jne
inc
aam
cmp
adc
insb
or
mov
fsubs
roll
jle,pn
shlb
cmp
sub
xchg
sbb
push
add
mov
inc
adc
jae
xor
icebp
fs
rcrb
add
push
xor
or
lock
sub
push
into
adcl
or
pop
fcmovnbe
ret
and
imul
and
xor
gs
sbb
pushf
ds
xchg
sbb
cmp
dec
mov
cmp
jns
pushf
adc
daa
mov
int3
sub
inc
sbb
mov
cmp
add
das
xor
add
jnp
and
loopne
and
imul
pop
fs
xchg
jno
add
add
cmpsb
jne
enter
xor
in
test
cmp
pop
inc
xchg
sub
or
insb
lods
lods
jmp
jnp
clc
push
add
cmp
mov
add
ljmp
lcall
jle
sarb
xor
adc
mov
fimuls
mov
and
cmp
and
mov
pop
xchg
jb
add
pushf
adc
rol
pop
daa
mov
enter
dec
mov
adc
push
rorb
fmull
adc
repnz
cmpl
adc
dec
sbb
jne
pop
dec
rclb
or
inc
xor
jmp
pop
rcrb
sbb
adc
gs
adc
bound
or
adc
inc
mov
movnti
mov
jge
mov
aad
dec
sbb
in
sub
mov
movsl
inc
push
adc
jne
imul
push
sub
nop
es
les
repnz
xchg
push
in
jne
cmp
ret
pop
test
scas
jae
ret
rorb
popf
sarb
cmp
add
push
call
xchg
lea
testb
ds
dec
mov
or
add
jecxz
jne
loopne
push
xor
push
mov
inc
bound
int3
ret
add
xorl
adc
loopne
inc
movsl
mov
inc
lcall
push
cmp
test
call
adc
popf
jb
mov
inc
inc
test
mov
inc
mov
loope
lods
push
pop
sub
and
mov
aam
pushf
les
loope
mov
pop
subl
adc
pusha
mov
test
jno
mov
push
testb
dec
push
push
mov
nop
sub
imul
add
fs
sub
cmp
adc
shl
xor
add
sbb
pushf
xchg
lea
cld
lds
mov
inc
test
pop
and
xor
push
dec
ja
inc
cmc
shll
sbb
jp
enter
mov
int
mov
or
je
aam
push
push
ja
clc
xor
out
push
push
push
mov
sbb
add
adc
mov
pop
aam
rcll
lcall
fmull
sub
push
cmpb
push
push
and
dec
in
ret
jle
sbb
push
or
mov
lea
add
push
dec
dec
addb
mov
pop
pop
sub
out
add
lods
inc
fld1
sbb
or
dec
mov
or
pushf
fdiv
loopne
cmc
sbb
rcrb
dec
sub
pop
mov
outsb
mov
mov
sub
daa
mov
mov
dec
pusha
test
cli
push
test
push
adcb
lods
jae
into
xor
add
subl
add
shrb
adc
fmull
jo
loop
ljmp
lret
cmp
fwait
jl
xchg
je
faddl
sarl
xor
mov
fnstcw
adc
cs
jecxz
push
push
mov
imul
pmulhuw
cmp
mov
mov
pop
and
sbb
outsl
sbb
xchg
clc
inc
es
mov
jl
repnz
pop
orl
orl
cmc
inc
mov
or
xchg
add
mov
rcll
xor
nop
mov
xor
mov
test
jmp
je
lods
clc
inc
les
je
add
add
bsf
sti
push
cmp
movsl
inc
xchg
fnstcw
push
jle
roll
nop
mov
shrl
pushf
clc
mov
add
inc
add
inc
mov
sbb
sub
mov
sub
sbb
aaa
push
sarb
test
push
notb
cmpsb
cmp
inc
ljmp
push
sbb
adc
jne
cltd
sub
aam
sti
js
cmp
sbb
cwtl
xchg
adc
add
add
adc
and
imul
or
imul
sahf
mov
sbb
jbe
add
and
cmpb
jo
pop
stos
inc
stos
and
pop
jp
add
pop
in
pop
loope
nop
adc
add
decl
push
lea
push
popa
loopne
dec
addb
fs
into
push
lcall
add
into
jnp
aam
push
jp
and
sub
mov
sbb
fadd
pop
call
jb
push
ja
push
mov
mov
sbb
icebp
shrb
mov
dec
add
dec
or
add
pop
ret
push
loope
inc
cmp
and
xchg
jecxz
or
add
fs
fnsave
sbb
cmp
fcoms
ficompl
mov
xchg
ret
sbb
mov
sarl
mov
movsl
jmp
adc
xchg
sub
cmpsl
or
jmp
rorl
sbb
adc
cmpsb
add
and
fcomp
add
mov
imul
cmp
clc
xchg
shl
add
push
mov
fcoml
inc
jge
test
loopne
call
pusha
xorl
imul
mov
or
sbb
js
jae
add
shll
or
testb
lock
imul
push
ret
pop
lret
ja
mov
push
jge
jg
sbb
pop
popf
mov
push
dec
sub
es
inc
out
ds
out
push
out
jnp
sahf
rolb
sub
fldl
add
xlat
fistpll
ret
inc
dec
aam
cmp
insl
xor
cmp
aas
and
aas
js
push
pop
inc
flds
testb
inc
mov
sbb
in
inc
pop
inc
mov
add
fiaddl
dec
cwtl
mov
nop
pop
lret
scas
xchg
ffreep
push
sbb
pop
mov
sub
or
push
pop
mov
hlt
sub
sub
pusha
push
mov
dec
loopne
nop
inc
bound
mov
adc
lcall
ljmp
mov
add
dec
dec
aas
mov
movsl
cmp
inc
popa
push
xor
xchg
addr16
pusha
ret
pusha
je
push
pop
pop
push
andl
push
push
scas
hlt
movsl
loope
or
xchg
inc
dec
pop
sti
adc
add
xor
mov
dec
add
cmp
mov
dec
enter
cs
push
fisubrl
popa
loopne
pop
movl
or
or
inc
jl
clc
push
inc
dec
lahf
js
sbb
add
jg
daa
cmc
popa
add
fstpl
cld
pop
jl
add
insl
inc
and
push
mov
test
push
and
pushl
lods
leave
mov
outsb
je
pop
dec
mov
inc
test
jle
mov
push
lods
mov
mov
dec
mov
add
aaa
xchg
sub
lods
or
sub
mov
repnz
rcrb
inc
cmc
mov
mov
xor
cmp
daa
push
lret
or
sbb
cmp
cmpl
cld
adc
std
dec
enter
ret
sahf
ljmp
cmp
or
subl
dec
test
test
cmp
sbb
stos
daa
mov
out
imul
sbb
xor
fnstcw
ret
lods
mov
push
inc
or
jl
push
dec
out
mov
call
push
inc
fsubrs
push
adc
mov
adc
insl
or
stos
ret
aaa
dec
pusha
loopne
je,pt
lret
mov
inc
faddl
mov
add
jg
fisubs
fs
lea
adc
fisubs
loopne
repz
adc
pusha
xorl
lods
push
jg
adc
lods
loopne
mov
mov
in
inc
ret
xor
push
pop
mov
movsl
xchg
scas
shrl
cmp
adc
mov
add
dec
sbb
out
jle
or
shrb
and
push
jb
insb
test
mov
popf
pop
dec
sub
or
popf
je
push
arpl
lods
push
pop
or
xor
sub
jne
push
aas
enter
sbb
or
add
test
and
push
dec
jl
sbb
js
lret
lods
jne
popf
sub
push
jp
nopl
mov
and
in
dec
jecxz
popl
or
add
outsb
shrb
jnp
iret
cmp
add
rol
xchg
hlt
std
pusha
mov
jl
mov
xlat
xchg
dec
mov
add
inc
pop
pand
sbb
adc
ss
fcomps
push
xchg
push
mov
jl
loopw
imul
xchg
or
shrb
jbe
icebp
or
out
or
imul
or
add
adc
or
dec
les
push
add
in
sbb
arpl
loope
and
das
mov
sbb
fwait
adc
jno
mov
push
sub
sub
mov
cwtl
movsb
loopne
dec
mov
bound
ja
sub
clc
xor
adc
xor
pop
rcrb
xor
mov
or
push
dec
inc
push
xor
push
faddl
jecxz
and
movl
adc
cmpsl
and
adc
sub
or
mov
mov
fstl
add
inc
dec
xor
adc
jne
cwtl
or
push
inc
add
xchg
mov
adc
push
sarb
mov
iret
jmp
xchg
pop
or
and
mov
xor
sub
pop
push
pop
push
arpl
jns
add
in
mull
dec
push
xchg
add
cmc
repnz
xor
or
xor
pop
sub
push
mov
sti
xor
adc
jnp
push
xor
push
push
push
fwait
and
sbb
add
icebp
xlat
push
dec
push
lret
xchg
push
jo
add
mov
test
inc
scas
stos
aad
rolb
adc
and
pop
pop
dec
mov
shll
lea
push
add
mov
fisttpll
dec
add
or
xchg
jge
test
jo
jb
aas
pushf
lea
pop
decl
jmp
dec
or
mov
mov
add
adcl
test
mov
pop
les
jmp
inc
sti
dec
insb
and
cmp
jne
in
cld
mov
das
fstl
inc
jp
adc
ljmp
dec
cld
inc
adc
and
outsb
push
movsb
ss
ret
daa
add
movsb
imul
scas
add
or
rorb
je
add
sbb
pusha
xchg
cmp
scas
xchg
mov
and
mov
xchg
xchg
mov
jl
mov
repz
out
xchg
insb
pop
push
in
and
rcrb
jne
and
ss
or
mov
nop
ret
jo
mov
fistl
and
fstps
jne
or
cmpb
and
loopne
xchg
adc
mov
push
jmp
out
sarb
inc
push
cmpsl
dec
mov
lret
pop
pop
out
or
flds
popf
es
lock
mov
les
sbb
adc
jg
cmp
or
or
pop
popf
sub
mov
or
fimuls
xor
or
clc
push
cmp
add
mov
add
xchg
pop
push
lock
cs
or
push
lods
adc
sti
adc
jg
sbb
mov
loop
cmp
xchg
cmp
lcall
sahf
bound
sbb
popf
outsb
xchg
and
inc
cmp
rolb
pop
cmc
aam
loopne
ret
sub
cmpsb
jno
shlb
xchg
loop
ret
adc
stos
cmp
mov
test
loopne
shlb
mov
ret
push
int
push
movsl
dec
push
mov
push
push
push
repz
cli
push
sub
dec
dec
lcall
out
add
inc
pop
ret
adc
decb
movsl
adc
in
inc
dec
lea
push
add
mov
add
mov
stos
outsl
in
jg
or
mov
inc
push
dec
mov
cmpw
inc
add
jne
dec
cmp
push
jp
xchg
xor
daa
imul
push
aam
sbb
dec
cli
mov
sub
jg
or
jecxz
jae
sbb
in
dec
loopne
lea
dec
mov
rolb
or
or
push
mov
mov
sbb
add
je
pop
pop
je
rclb
or
inc
push
push
test
cwtl
std
mov
sbb
test
jae
fwait
mov
cmpsl
loopne,pt
adc
push
mov
fsubs
mov
ficomps
pop
leave
adc
adc
inc
mov
or
adc
shlb
push
or
mov
mov
cwtl
clc
pushf
push
mov
aas
dec
sti
dec
xchg
mov
cmp
jle
cmp
add
inc
mov
mov
inc
and
pop
incl
nop
xlat
jmp
xchg
cmp
pop
and
and
out
push
pop
cmp
mov
je
and
pusha
push
pushf
adc
add
or
xchg
popa
cs
ljmp
je
out
cs
sub
mov
push
dec
adc
xorb
or
data16
xchg
inc
sahf
adc
in
dec
push
into
insl
insb
arpl
mov
push
sbb
mov
leave
lea
adc
push
inc
mov
insl
add
add
adc
pop
pop
movsl
pop
mov
jg
daa
lock
xor
sbb
ret
adc
call
mulb
cmp
je
push
lcall
in
out
addb
and
lret
and
loope
or
pop
pop
ret
sbb
call
jne
xchg
fisttpl
fcoms
out
or
fidivl
test
or
cld
test
out
xor
sbb
fucom
add
je
test
sbb
and
and
insb
in
push
outsl
sub
xchg
mov
sti
sti
aad
into
mov
clc
je
mov
push
jbe
dec
cmp
dec
into
cs
aam
vmwrite
les
pop
clc
aas
inc
std
lret
sbb
or
cwtl
cmovs
lcall
push
test
dec
adc
dec
rclb
push
pop
push
push
push
jmp
mov
sub
stos
add
sbb
cmp
insb
xchg
fldz
je
sub
stos
lock
mov
flds
push
fnstcw
inc
test
or
add
adcl
pop
jecxz
pop
jp
push
in
pop
pop
insb
xor
adc
cmp
or
jae
adc
incb
sbb
stos
movsl
pop
rcrb
cmpl
or
jp
add
loope
test
pop
mov
icebp
pop
push
sbb
inc
sub
push
ja
test
jbe
push
sbb
insb
jmp
iret
pop
pusha
fs
shrb
invd
test
push
shl
pop
push
sbb
push
push
fdivl
or
loopne
adc
push
push
push
pusha
dec
cmc
push
out
add
mov
jmp
adc
ret
rol
or
loop
push
dec
stos
push
pop
lahf
loopne
adc
insb
lods
fs
push
xor
lods
or
adc
xor
xor
inc
cmp
and
out
add
mov
jl
incb
clc
aas
subb
cmp
shr
shl
subb
add
or
lea
jne
fisubs
shlb
xor
cmp
mov
cmp
or
nop
push
dec
fmul
sti
push
addb
or
movsb
mov
xchg
cmp
dec
pop
std
pop
or
pop
sbb
out
or
push
fwait
jnp
push
jnp
push
xor
pop
adc
xchg
dec
call
pop
jo
faddl
loope
adc
dec
push
shl
dec
jle
mov
push
fadds
inc
or
push
inc
fisubl
or
push
loopne
mov
call
push
mov
gs
mov
cvtps2pi
pop
loope
push
mov
ret
mov
ficompl
xor
pop
push
jne
jg
adc
jl
or
rclb
fs
mov
adc
aad
aaa
jo
sub
out
mov
cmp
out
mov
sar
jmp
adc
neg
cmp
jge
mov
cmp
fsubs
decb
jmp
jge
neg
cmp
outsl
jp
wrmsr
dec
in
nop
fsubr
jle
add
cmp
dec
lret
and
and
add
mov
cmpb
rolb
jne
mov
test
adcl
add
xor
pop
jmp
adc
xor
fs
mov
dec
dec
jno
shlb
aad
jo
rcll
cmp
jne
push
and
push
pop
push
add
xchg
inc
bound
lock
dec
add
loopne
sbb
out
inc
adc
cmp
push
mov
xchg
data16
insb
dec
scas
inc
dec
jge
ljmp
iret
push
inc
adc
sbb
push
add
and
adc
mov
jge
sbb
add
add
jno
mov
ds
callw
adc
call
push
push
lods
cltd
fcoml
sbb
xchg
or
pusha
mov
or
dec
jecxz
push
pushf
jo
pusha
cltd
jno
adc
xchg
or
and
bswap
push
push
js
xchg
push
js
jg
into
rcrl
fildl
push
xchg
add
adc
repnz
adc
xchg
iret
int
inc
je
orl
pop
push
ret
dec
jae
adc
shlb
pop
mov
and
xchg
insb
cli
cmp
sub
push
xchg
and
test
clc
cmc
push
xchg
inc
jg
stc
mov
xchg
push
xor
adc
leave
fdiv
mov
push
mov
sbb
add
dec
sub
jmp
xchg
mov
test
sub
insb
addr16
je
jp
xchg
dec
pop
dec
push
and
dec
stos
and
push
pop
push
sbb
mov
xor
lods
inc
inc
pusha
pop
sbb
dec
dec
push
push
rol
ret
fsts
orb
sbb
dec
sub
push
adc
stc
movsb
addr16
repz
or
fistl
jle
push
push
jb
and
lods
int
and
inc
cmp
out
cmp
adc
or
aaa
and
data16
jne
jecxz
or
pop
pop
pop
leave
insl
pop
cltd
dec
int3
arpl
push
or
insb
in
push
xchg
and
adc
jp
out
sub
dec
adc
and
fisubs
push
adc
adc
add
out
add
inc
insb
adc
pop
nop
xor
dec
sub
mov
mov
je
sub
jo
push
dec
cmp
int
add
cmp
das
jnp
lds
insb
into
dec
add
mov
cmp
mov
scas
imul
pop
xchg
or
inc
int3
xchg
iret
pop
ds
pop
add
in
and
mov
js
int
int
or
insb
js
inc
loop
outsb
push
jbe
mov
mov
inc
pop
cwtl
inc
std
rcrb
in
add
data16
rolb
dec
clc
inc
je
mov
ss
dec
loop
dec
shrl
sub
dec
scas
movsl
lds
sub
push
adc
mov
daa
xchg
push
je
mov
bound
sub
fs
inc
mov
mov
mov
or
pushf
into
lock
cmp
popf
neg
xchg
movsb
adc
xchg
and
loop
push
adc
pop
icebp
test
negb
mov
push
and
scas
js
test
and
xchg
pusha
pop
dec
or
out
loope
jo
and
xchg
mov
lahf
push
nop
ret
int3
mov
jecxz
sub
aas
pop
or
in
inc
outsb
lock
cld
ret
jl
mov
cmpl
sbb
gs
clc
sub
cmpb
push
push
outsb
dec
jno
cmpl
jge
inc
ja
popf
mov
or
cmp
jle
mov
cmp
push
decl
add
mov
push
push
add
jmp
lret
loopne
jmp
jle
rorb
sarb
out
sahf
rol
int
push
lea
push
lea
xor
scas
ljmp
sbb
je
mov
mov
jl
ds
cmp
mov
cmp
jne
push
add
sbb
adcb
insb
xor
cmp
stos
dec
pop
jp
lods
jge
nop
orl
pushf
popf
adc
and
cs
sbb
inc
xchg
pop
ss
pop
and
jge
xlat
push
pusha
ret
mov
push
and
xchg
ja
aam
add
sahf
xor
push
dec
mov
call
aam
dec
push
cmp
mov
mov
mov
push
sbb
lea
popf
dec
flds
fmuls
or
sub
xchg
test
add
shr
cs
or
mov
das
aaa
test
stos
inc
subl
shlb
adc
cmp
test
mov
pop
aas
mov
fcoms
or
add
push
add
mov
adc
pop
push
jo
inc
add
ljmp
sahf
ret
or
shll
imul
mov
sub
dec
jne
and
xlat
and
mov
jo
scas
push
push
arpl
cmp
lock
dec
and
and
xchg
out
inc
out
add
in
jmp
sti
shl
sbb
cmp
fistl
mov
inc
loope
shr
ja
inc
loope
pushf
mov
xchg
jo
mov
notb
lcall
clc
loope
adc
mov
inc
enter
mov
jle
add
pop
pushf
addb
push
dec
push
lea
addb
mov
inc
lds
xchg
sar
jl
leave
jl
push
sbbb
add
inc
dec
stc
loopne
sub
lahf
pop
inc
adc
mov
sahf
adc
rep
test
lret
jge
sub
push
adc
fwait
add
xor
sbb
dec
mov
cs
aam
xcrypt-cfb
cmpsl
popa
xor
dec
or
sbb
repnz
sub
fmull
jne
decl
test
inc
lret
and
and
adc
cmp
clc
in
cli
scas
popa
ja
out
lret
div
fnstcw
inc
xchg
inc
push
out
cmp
fists
cltd
mov
stc
cmp
addb
push
test
cmp
add
jl
test
or
pushf
pop
mov
jecxz
mov
stos
xchg
cltd
xchg
faddp
imul
dec
push
stc
pop
movl
jnp
loop
xchg
add
lcall
push
push
fwait
dec
xor
dec
scas
push
scas
push
aam
push
xchg
imul
into
push
leave
mov
lea
inc
cmp
call
incb
sahf
lret
iret
pop
inc
and
les
dec
cmp
insb
inc
out
fnstsw
addr16
cld
test
rcrb
add
mov
addl
and
popa
mov
pop
mov
adc
add
mov
jmp
movsl
cmp
fcmovbe
pop
add
sub
or
fmuls
aad
and
daa
adc
hlt
and
or
push
out
adc
das
sub
adc
and
stc
inc
jo
xorl
pop
inc
enter
mov
data16
pusha
loope
outsb
pop
outsl
and
lock
jb
and
leave
and
ret
sub
js
loopne
and
fsubrs
leave
and
sub
sarl
pop
add
movsb
cmp
push
rcll
sbb
sbb
test
fwait
mov
test
mov
jle
pushf
xchg
dec
jbe
mov
lret
mov
and
and
push
sbb
push
push
jbe
xchg
ds
jl
sub
xchg
pop
dec
push
add
mov
dec
rcr
rclb
jne
sub
adc
stos
test
dec
jno
ja
pushf
pop
add
cmp
add
adc
adc
pop
inc
mov
das
lods
lahf
jge
xchg
cli
leave
push
mov
sbb
push
inc
in
push
cmp
add
lret
jp
pop
and
cmc
xchg
push
cmp
mov
add
sbbb
push
pop
cmpsb
loopne
loope
adc
adc
pop
and
sub
filds
push
addb
add
popl
adc
sub
mov
call
insb
sub
mov
jle
loopne
adc
jle
clc
dec
sub
xchg
sbb
rcl
dec
arpl
out
mov
cwtl
jge
fdivp
cltd
dec
or
enter
mov
xchg
sahf
push
push
rcr
insb
je
movb
je
pop
ret
es
xor
jg
shr
aam
jp
and
add
jecxz
adc
dec
js
stc
xor
push
jno
jle
lea
push
push
push
cmp
inc
pop
ret
add
daa
xor
pop
sub
adc
mov
push
push
jns
add
cmp
bound
cs
or
pop
pusha
pusha
mov
sbb
sbb
jle
adc
out
sbb
shlb
pop
pusha
cs
fbstp
jl
es
push
enter
aaa
js
js,pt
push
sub
shrb
or
xor
mov
and
enter
dec
push
lret
pop
fdivrs
pop
jl
xor
ret
push
mov
popa
mov
daa
add
cmp
lds
dec
movsl
mov
sbb
add
xchg
enter
ret
adc
pop
aam
mov
xchg
std
add
mov
stc
sub
iret
adc
inc
add
mov
push
xor
push
shrl
shl
adc
inc
push
adc
orb
gs
cmp
inc
add
dec
jns
and
lea
inc
cli
out
sbb
enter
mov
adc
mov
mov
inc
push
adc
ret
into
scas
and
aam
pop
push
xchg
sbb
clc
mov
popf
jne
xor
and
cmp
iret
cmp
pop
or
inc
cmp
pop
mov
add
inc
ljmp
mov
mov
into
push
rorl
shr
divl
loopne
fwait
and
sub
btc
push
mov
add
dec
pop
imul
adc
rcll
jmp
xchg
push
cmp
cli
jo
movsl
movsb
je
dec
sub
xchg
and
js
add
inc
aad
std
cltd
inc
imul
pop
adc
push
add
dec
pop
inc
jl
adc
ret
xor
and
test
lea
sub
or
inc
mov
jl
lea
inc
jb
pushf
xor
dec
jne
jmp
aaa
and
call
mov
xchg
scas
lea
insl
xchg
cmp
xor
jg
mov
adc
cltd
dec
ja
mov
pop
sar
fwait
leave
push
push
scas
repz
js
iret
cmp
jbe
add
clc
push
jbe
push
dec
push
push
xor
insb
adc
mov
inc
imul
inc
lcall
push
push
addr16
popl
lahf
xchg
mov
adc
imul
icebp
inc
cmp
pop
aam
je
dec
test
cmpsl
neg
and
pusha
cld
or
sbb
pop
inc
stos
add
add
or
jo
add
and
scas
or
xor
popa
adcl
rcpps
push
push
push
and
pusha
cwtl
js
dec
add
add
mov
std
cmp
les
xor
mov
jo
push
mov
mull
adc
lcall
inc
inc
jno
mov
rol
and
sahf
mov
jmp
xor
ds
negl
in
mov
or
adc
mov
push
push
push
enter
out
push
cmp
and
inc
cmpl
shll
push
jo
inc
mov
popl
lahf
rcr
mov
call
add
push
rorb
call
add
outsb
loopne
inc
add
push
push
or
std
add
adc
inc
test
fmul
cmp
or
and
cmp
enter
cli
mov
xorl
jmp
jle
ret
lds
fmull
inc
mov
mov
mov
xchg
inc
inc
outsb
mov
sbb
aam
xor
popa
test
push
jne
imul
out
push
or
mov
or
test
xlat
xchg
movsl
cmp
xchg
cmc
jne
ret
fldl
add
call
or
mov
pop
and
data16
idivl
scas
ret
rep
mov
cs
je
nop
or
push
xor
mov
dec
pop
cmc
stc
outsb
sti
fiadds
inc
cs
gs
cmp
jmp
jb
lods
inc
push
or
pop
mov
cmp
or
sarb
je
cli
jge
jbe
pop
mov
decl
jmp
shl
out
fs
push
xchg
mov
push
cmp
inc
and
lcall
or
xchg
cmpb
repnz
dec
jg
sbb
cli
out
ror
mov
xchg
xchg
pusha
sbb
sbb
jg
add
je
push
xor
pop
add
cs
cmp
or
inc
aaa
pushf
js
jg
mov
xor
jae
add
ja
aaa
jns
push
adc
into
rcrb
cmp
std
xchg
test
dec
movsb
pop
push
addr16
daa
jbe
pop
scas
lods
adc
or
arpl
insb
mov
cmp
push
ret
jbe
push
jecxz
push
cwtl
or
jbe
jo
inc
inc
jge
js
fdivl
jmp
out
dec
push
jmp
popa
fcomps
jmp
dec
mov
movsb
jno
cmp
orb
mov
and
mov
adc
push
push
sub
cltd
test
cmpsl
sbb
xor
push
sub
lds
push
pop
add
fucomp
and
call
mov
shll
or
xor
push
pop
call
push
push
add
push
and
or
shlb
add
jb
fs
outsb
movsb
mov
out
xchg
add
xchg
es
cmp
pop
ret
xchg
lret
clc
push
popa
movlps
mov
xchg
es
push
push
mov
orl
les
addb
push
or
movsl
out
sbb
jne
aam
pusha
adc
jo
inc
shl
rcrb
xlat
stos
jno
add
push
adc
adc
ffree
xor
push
and
data16
int
setne
and
sub
add
js
push
add
add
popa
pop
arpl
xorl
arpl
out
pop
xchg
bound
push
outsl
pop
jl
dec
addr16
sbb
dec
push
cmp
jb
jecxz
aam
mov
cmp
sub
sub
repnz
es
cmp
inc
mov
push
lock
dec
adc
add
sub
pop
test
pop
mov
in
and
daa
cmp
das
fwait
xor
xor
inc
test
mov
inc
popf
cld
inc
clc
add
jns
loop
into
shl
ret
add
imul
dec
ret
insb
and
mov
xchg
mov
mov
lea
mov
cmp
sub
ljmp
xchg
pop
adc
dec
arpl
add
cli
add
mov
mov
movsl
inc
pop
sub
mov
dec
add
shll
nop
inc
add
push
adc
xor
sbb
lods
inc
sahf
and
inc
jbe
sub
and
push
test
fsubr
push
ret
dec
pop
lods
data16
and
call
jno
xchg
mov
inc
pop
lods
adc
mov
or
je
or
mov
push
je
xchg
push
sbb
or
hlt
add
xor
or
call
mov
xchg
movb
xchg
pop
push
jge
jo
insl
shrl
inc
jl,pn
push
pop
jae
pop
add
jae
add
jae
dec
dec
or
hlt
jb
jae
dec
ret
and
cmp
popa
or
int3
jno
movsb
hlt
pop
sbb
pop
and
dec
cmp
push
fwait
sub
aas
push
je
mov
cmp
sahf
cmp
push
push
dec
cmc
adc
inc
jecxz
cmp
add
xor
mov
jo
jp
fadds
mov
daa
add
push
jl
popf
out
mov
mov
add
push
cmpsl
sti
push
xchg
jl
inc
cli
mov
popa
adc
pop
stos
add
and
adc
add
pop
inc
add
adc
or
sbb
shrb
fisttpl
push
pop
sub
and
jnp
xorb
scas
or
shrl
jp
mov
and
lret
jp
shll
popa
inc
xor
icebp
jl
movsb
sbb
dec
inc
inc
add
xlat
pop
cmp
jne
insl
inc
mov
jle
push
xor
cmp
les
add
add
test
pop
loop
push
insb
push
push
xor
negl
ret
bound
mov
lods
outsb
sbb
je
and
sub
xor
and
mov
or
cmp
ljmp
adc
les
xor
es
fstpt
and
lcall
sub
cmc
jp
cmp
push
int3
and
addl
ffree
nopl
push
test
in
lods
push
sbb
adc
jb
dec
adc
cs
and
push
pop
add
adc
dec
sub
pop
mov
ja
js
add
adc
inc
pushf
push
call
add
inc
add
mov
and
adc
dec
arpl
jmp
ret
inc
imul
and
push
adc
shl
pop
push
sbb
in
dec
push
adc
imulb
mov
add
or
adc
nop
jne
adc
ret
inc
addb
push
mov
pop
sub
pop
inc
adc
push
adcb
sub
pop
xchg
inc
test
repnz
sub
lcall
inc
test
fcomps
and
scas
pop
push
out
imul
adc
mov
aas
cmpsb
test
cmp
sub
imul
mov
test
mov
cmpl
push
leave
je
mov
mov
adc
mov
xor
add
cltd
loop
orb
outsb
adc
jmp
adc
jmp
dec
lock
aas
cmp
rolb
sbb
xor
aad
and
lahf
or
rorb
cs
fildll
lahf
mov
cmp
jne
nop
dec
jne
mov
or
dec
sahf
fadds
mov
lea
cmpsl
dec
xor
pop
add
outsb
shrb
dec
add
inc
add
push
rol
lods
xor
jge,pn
fcomps
or
inc
jne
add
jne
mov
cmp
stc
aaa
xchg
cmp
add
in
add
add
bound
aas
xchg
mov
add
push
inc
dec
xchg
xlat
or
cmp
aad
push
ds
mov
or
jne
movsb
mov
xchg
mov
push
sti
mov
cli
dec
loope
xor
lea
test
test
icebp
stos
mov
aaa
je
sbb
in
inc
xchg
pusha
add
pop
cmc
xor
movsl
push
sub
sbb
mov
fisttpl
sub
aam
xor
and
inc
movsl
pop
or
lahf
test
out
jecxz
xchg
lock
mov
data16
test
mov
xchg
xchg
dec
sub
ds
xchg
loope
fdivl
sarb
push
mov
out
imulb
faddl
mov
dec
xor
jge
jge
ret
and
loope
push
push
push
inc
imul
sub
out
cltd
out
loopne
push
pop
loop
add
decl
jge
adc
cmpl
xlat
add
lcall
or
inc
inc
sub
xchg
shlb
and
inc
or
test
jnp
and
sbb
push
stos
les
adc
pop
inc
cmp
ret
cmp
fcoml
je
push
cmp
mov
mov
sbb
or
push
movsb
sbb
mov
push
and
popa
mov
dec
jge
rcl
clc
or
stos
cmp
mov
pop
test
or
iret
insl
pusha
pop
cli
jg
adc
mov
cmp
arpl
bound
jecxz
dec
jnp
lods
add
cmc
jmp
adc
shlb
lock
sub
push
js
add
lods
aaa
scas
fdivrs
mov
push
pusha
adc
mov
jg
mov
movsl
push
lcall
jne
movsl
enter
adc
lret
mov
push
pop
pop
or
ds
mov
jne
aad
jnp
icebp
mov
xor
push
push
data16
sbb
inc
or
test
in
push
in
gs
mov
sbb
add
jge
xchg
sub
sahf
pushf
mov
jmp
shlb
test
jg
cmc
xlat
icebp
pop
mov
je
jecxz
je
mov
imul
add
adc
subl
aam
push
fadds
addr16
imul
xchg
mov
push
add
dec
push
add
sbb
js
imull
pop
jmp
test
cmp
scas
mov
sbb
lock
in
jno
cmpsl
mov
inc
pop
aas
aam
sbb
push
insb
add
pop
xor
pop
dec
aas
mov
jne
ffree
push
rorb
jne
inc
imul
mov
pop
sarb
and
cmp
cmp
nop
js
adc
push
add
addb
xchg
mov
or
add
sti
rolb
dec
sub
dec
popf
mov
mov
movsb
aad
dec
jl
push
outsl
popa
rol
adc
ret
mov
fists
dec
mov
jmp
cs
sbb
xchg
mov
add
mov
bound
add
sbb
jo
cmp
push
ja
lahf
sahf
jg
mov
loopne
roll
pop
adc
std
cmp
jg
mov
andl
imul
mov
repnz
add
jle
mov
sub
and
push
sbb
pusha
loop
in
fmuls
and
lock
loope
ret
loopne
scas
jnp
cmp
sbb
fisttpll
loopne
movsb
push
mov
push
dec
or
or
jge
pop
add
jbe
push
push
fadd
test
movsb
roll
pop
repnz
xchg
test
movsl
je
test
pop
xchg
push
xor
cwtl
int3
pop
push
push
cwtl
xor
pop
jmp
xchg
out
dec
push
inc
outsl
or
mov
int3
fidivl
orl
mov
pop
xor
and
cmp
sbb
xlat
cmp
mov
cmc
add
mov
mov
sub
sub
xlat
cwtl
inc
sub
xchg
push
jnp
fstpl
and
push
fimuls
gs
cs
push
sub
push
push
adc
inc
sub
push
pop
inc
in
add
mov
push
sub
sbb
in
adc
enter
rclb
nop
inc
fucomip
rol
inc
loope
outsb
icebp
dec
outsb
or
cld
mov
test
push
push
data16
stos
js
outsb
add
pop
sub
or
push
xor
jo
dec
or
nop
mov
adc
and
cmp
adc
add
frstor
sub
cmp
cmp
push
icebp
imul
mov
or
nop
mov
add
adc
cmpb
jae
leave
shll
imul
cmpsl
jb
or
adc
sbb
jmp
enter
sbbl
sub
add
jmp
shrb
lods
add
outsb
cli
push
out
mov
add
rcll
dec
mov
push
adc
jmp
push
je
add
inc
cmc
cmp
pop
pop
nop
inc
inc
ds
iret
xchg
mov
sbb
aas
test
sbb
add
lds
loope,pt
adc
pop
mov
push
lret
outsl
rcrb
or
mov
rclb
push
inc
pop
call
lods
je
push
xor
adc
pop
sub
push
and
jge
pushl
mov
daa
adc
out
xchg
jle
in
test
push
std
bnd
xchg
cs
mov
movsl
orb
jne
add
int3
or
lcall
or
and
inc
dec
mov
pop
sub
inc
inc
ret
cmpl
jns
sbb
xor
jl
adc
loop
call
imull
cmp
int
add
movsbl
jns
pusha
pusha
popa
shrl
arpl
clc
movsl
cmp
test
test
add
cs
dec
pop
repz
inc
mov
sub
pop
movsb
icebp
xchg
sub
std
lea
lods
mov
pop
push
inc
adc
fcoms
data16
inc
inc
and
push
movb
mov
and
fisttpll
cmp
fisttpll
cltd
and
xchg
add
pop
or
shl
loope
push
imul
lret
jnp
push
pop
cmpl
and
add
cmova
lods
out
mov
or
sub
aad
push
jnp
sbb
jg
call
sub
mov
mov
or
lock
mov
dec
data16
pushf
cli
repnz
xchg
add
jnp
push
add
jmp
cmp
insl
jo
inc
and
mov
outsl
push
jge
sub
into
andl
sarb
ret
jge
out
andl
dec
mov
lods
cmpsb
pop
mov
dec
push
jmp
add
mov
push
add
pushl
mov
movb
dec
jne
jge
sbb
mov
jg
lods
adc
das
push
push
jo
mov
add
and
push
xchg
sub
in
add
inc
xor
inc
cmp
repnz
jmp
shll
clc
adc
incl
and
mov
sub
inc
je
inc
sbb
sbb
dec
or
inc
insl
adc
adc
lcall
add
jae
inc
cmp
rorb
inc
clc
dec
arpl
fwait
inc
jp
nop
jne
in
or
cmp
mov
dec
shl
jne
add
jbe
cmc
sub
mov
ss
jle
jb
les
inc
repz
dec
and
cmp
out
or
sbb
ja
jp
push
push
mov
dec
inc
popf
and
lcall
in
fisttpl
push
dec
xor
xchg
dec
and
adc
ret
inc
gs
pop
subb
test
xchg
add
ret
sub
loope
lret
hlt
loopne
movsb
cmp
arpl
adc
nop
test
and
push
lods
push
jbe
lock
fs
push
scas
mov
adc
lret
xchg
push
jecxz
outsl
ret
ljmp
xor
and
push
pop
sbb
adc
adc
fstpt
jnp
loope
fmuls
inc
and
adc
loope
lods
mov
cmp
pop
pop
push
push
cmpsl
push
loopne
push
out
rclb
mov
dec
xor
ficompl
pop
adc
cwtl
xchg
push
or
loope
add
dec
add
shrb
cmp
pusha
mov
dec
jmp
cmpsb
jge
mov
es
js
push
adc
in
mov
adc
icebp
loopne
nop
adc
leave
adc
in
int3
push
add
mov
adc
rcr
mov
add
test
mov
iret
aas
nop
test
mov
mov
xchg
push
in
std
jae
test
cmp
rcrb
cvtdq2ps
and
adc
sbb
mov
sub
rorl
cmp
test
cmp
rcrb
dec
dec
test
lahf
cmp
cmc
inc
adc
mov
adc
stos
ljmp
fiaddl
sbb
and
xor
mov
inc
xor
mov
cmp
mov
roll
stos
adc
dec
andl
cmp
sbb
outsl
jl
push
cmp
push
inc
je
mov
push
scas
dec
add
adc
out
jbe
or
push
jo
mov
add
into
push
je
xor
mov
mov
pop
add
jle
fldl
xor
test
in
fwait
mov
adc
fildll
mov
xchg
mov
cwtl
aaa
out
add
pop
adc
clc
pop
pop
or
pushf
adc
rcrl
adc
movsb
adc
sbb
adc
inc
and
lcall
clc
push
push
xchg
jecxz
sbb
and
inc
add
inc
inc
jp
rclb
fnstsw
ljmp
adc
nop
pusha
insl
mov
or
or
add
pusha
popf
je,pt
insb
lea
dec
dec
gs
push
jle
xor
inc
add
xor
lods
in
cmp
jecxz
sbb
stos
data16
dec
mov
jp
lret
int3
inc
out
imul
dec
or
test
pop
or
pop
push
jcxz
push
push
cmp
cmp
push
pushf
dec
mov
push
mov
dec
push
pop
adc
clc
popf
xor
insb
cmp
jmp
aas
cmp
jae
xor
pop
cmp
test
sahf
dec
sub
lahf
sbb
cmp
jae
mov
cmpsb
jle
aam
lea
push
xor
ss
into
test
mov
add
jb
data16
pusha
sbbl
stos
enter
sbb
insb
or
push
shl
enter
dec
cmpsb
jl
or
xor
or
jl
out
iret
sub
or
or
mov
dec
cli
dec
rolb
and
orl
jmp
push
push
mov
sub
add
mov
xchg
cmp
or
xchg
test
fmuls
cmpb
inc
mov
andb
or
xchg
mov
lret
loop
ret
mov
nop
pop
sub
jbe
sbb
out
daa
imul
mov
adc
shrb
ret
mov
jecxz
test
jae
jg
pop
sub
in
or
es
mov
dec
mov
and
inc
roll
add
push
sahf
test
xchg
pushf
neg
xchg
sbb
pop
or
iret
mov
pop
push
jb
cmp
mov
sbb
xlat
dec
outsl
pusha
ficomps
add
cmp
pop
adc
add
sbb
dec
inc
adc
outsl
loopne
test
subl
je
jbe
push
push
mov
push
xlat
sbb
jle
lods
push
je
jne
rcrb
or
mov
sub
je
cwtl
or
inc
pop
and
adc
jno
int3
push
test
or
outsb
xorb
dec
inc
sub
loop
jne
push
faddl
mov
jge
sbb
sbb
aas
inc
dec
pop
sbb
pop
and
mov
add
pop
mov
addl
cmp
and
or
rol
sbb
adc
cmp
movsb
adc
mov
outsl
fstpt
pop
or
insb
es
xor
fidivrl
divb
push
add
lret
bound
add
pop
push
adc
test
lea
or
push
sbb
add
push
int
jae
adc
push
push
out
inc
fbstp
inc
int3
cmp
jb
or
hlt
mov
pop
sub
push
pop
add
mov
or
inc
inc
ljmp
mov
je
or
add
sahf
ret
loopne
sbb
xchg
ljmp
xchg
sbb
cltd
into
scas
cltd
jp
ds
pop
std
imul
lock
sbb
mov
mov
cmpb
push
mov
xchg
dec
sub
sbb
cwtl
jne
negl
jae
ljmp
je
cmp
dec
inc
add
xchg
pop
and
sbb
icebp
test
cmp
adc
mov
xchg
fisttps
loopne
scas
push
insb
mov
jae
fwait
jp
jge
lea
pop
mul
int3
sbb
inc
into
adcb
das
push
mov
xchg
mov
sbb
loopne
fwait
mov
mov
fiadds
rcll
xchg
push
pop
pop
add
mov
ficompl
sahf
add
push
push
or
dec
andl
jo
or
ret
jne
mov
add
fwait
add
lds
sbb
jg
mov
les
jp
ljmp
pop
cli
inc
add
clc
pop
adc
adc
xor
pop
or
shrl
pusha
add
sub
add
and
mov
ljmp
dec
pop
mov
mov
and
mov
cmp
movl
pop
scas
out
jbe
xchg
movsb
mov
add
jp
shlb
xor
xchg
mov
xor
ror
xor
or
cmp
loope
cmp
cmp
je
scas
adc
mov
ds
mov
push
or
add
mov
lods
rorb
into
inc
imul
divl
add
mov
test
sti
daa
cmc
sub
fs
or
pop
mov
mov
or
push
cmp
pop
lea
xchg
in
pusha
lods
mov
sbb
cltd
clc
xchg
add
pop
sbb
or
xchg
movsl
rolb
cld
mov
test
jbe
mov
pushf
sub
inc
mov
mov
fiadds
cmp
inc
or
jb
dec
cmpb
jne
cld
and
push
cwtl
push
jmp
and
pushf
or
add
popw
adc
and
cvttps2pi
dec
cltd
and
fadds
pop
mov
mov
push
and
adc
inc
pop
cs
popa
mov
mov
pop
data16
xchg
lahf
testb
addl
sub
cmp
xchg
and
sbb
pop
push
jo
adc
out
or
filds
push
adc
jne
inc
pop
mov
jo
and
decl
dec
mov
mov
add
add
ret
add
mov
pop
dec
or
or
push
pop
cli
fwait
dec
jbe
cmp
je
or
xchg
sub
movl
fldt
outsb
ror
mov
cmp
or
cmp
ret
je
cmp
insb
pop
jg
je
mov
mov
xor
add
sti
cmpsb
add
divl
lods
xlat
xlat
adcb
ret
dec
mov
out
addb
jae
test
add
dec
sub
lods
sahf
cld
cmp
xor
mov
mov
ds
mov
sub
pusha
push
mov
push
mov
jbe
mov
jnp
mov
orl
inc
out
pop
add
pop
mov
xlat
movsl
mov
cmc
pop
push
je
cmp
pusha
mov
insl
or
or
sub
in
and
imul
inc
call
clc
pop
and
push
add
ret
adc
add
dec
ljmp
dec
ss
xor
inc
add
xor
adc
and
call
dec
inc
cmp
pusha
mov
mov
lret
aaa
es
mov
lds
loopne
sarb
sub
into
repnz
out
movsb
and
iret
pusha
ret
fdivrl
fistps
pop
push
xchg
data16
push
pop
icebp
and
test
sbb
imul
cld
dec
jl
call
inc
shl
outsl
push
enter
sbbb
xor
jo
sbb
pop
jae
ds
das
sbb
dec
in
mov
jmp
push
push
pop
movsb
or
or
jae
xor
adc
mov
outsb
pusha
sub
dec
push
cmpsl
and
das
lods
mov
push
nop
or
mov
mov
dec
inc
mov
rcll
jecxz
rorb
addl
aad
lret
ss
inc
mov
jb
cs
andb
in
mov
or
dec
ljmp
shrl
mov
mov
sarb
nop
push
xchg
and
adc
fimull
cltd
test
add
in
sub
iret
sahf
adc
outsb
sub
or
mov
cmp
lods
sbb
push
mov
andb
lcall
scas
push
aam
in
pop
jp
das
and
or
or
mov
mov
cs
xor
mov
adc
loopne
in
int3
and
cmpsb
or
mov
cmp
sbb
rorb
jnp
fadd
outsb
stos
fisubs
sti
arpl
push
push
inc
imul
movl
test
inc
add
mov
aas
mov
pop
dec
push
sub
cmpsl
lods
sub
leave
mov
jne
add
push
in
push
push
sbb
fstl
push
pop
in
add
filds
jne
push
bound
aas
movd
mov
adcb
dec
add
add
inc
sbb
add
add
pusha
mov
fcmovbe
push
pop
aad
jl
inc
cmp
cmpsb
sbb
das
adc
add
push
jl
dec
test
stos
call
mov
xor
rcll
sbb
add
push
push
ljmp
push
adc
mov
jle
add
add
xchg
and
dec
xor
and
sub
aam
jae
or
adc
and
es
out
in
add
inc
pop
xchg
lahf
movb
dec
imul
incb
cmpb
mul
pop
shr
add
dec
add
lock
mov
movb
cmpsb
adc
test
xor
add
test
xor
ss
aam
or
pop
push
push
pusha
and
aaa
orl
cmp
lcall
rcrb
mov
xor
mov
inc
mov
push
and
adc
mov
xchg
sub
shl
push
ja
cmp
notl
dec
dec
clc
push
adc
out
jne
lods
cmc
testb
or
loop
mov
subl
aad
or
and
mov
mov
or
lret
mov
mov
cmp
mov
mov
nop
std
arpl
into
inc
std
cmp
adc
mov
inc
jge
sub
dec
or
or
jb
cli
mov
mov
cmp
add
out
js
or
aam
sbb
push
add
lock
sub
add
dec
sbb
bnd
hlt
mul
test
movsb
jbe
mov
xchg
loopne
mov
inc
push
clc
dec
dec
jne
pop
aas
inc
adcb
insl
movsl
lock
pop
fwait
cmp
lea
je
push
sbb
add
into
inc
xchg
adc
sti
popf
rcrl
mov
arpl
mov
stos
jne
cmp
jo
test
into
inc
aaa
or
orb
add
lea
mov
mov
fisubrl
sbb
sub
and
pop
mov
mov
shlb
or
mov
fwait
repz
xor
jo
mov
bnd
pop
ret
shll
jo
scas
movsl
mov
sub
popa
sub
loop
mov
test
lea
mov
cmp
outsl
mov
sahf
mov
out
or
lods
add
push
mov
xchg
movb
gs
in
sub
insb
dec
sahf
mov
mov
popa
fstl
ffree
pop
dec
pop
fucomi
sahf
pop
sub
ljmp
mov
out
icebp
adc
xor
and
xor
outsb
lods
loopne
outsl
daa
pushl
shrl
xchg
push
mov
sti
push
movsl
in
cmc
js
pop
aad
jmp
out
test
mov
and
nop
cmpsb
xchg
inc
enter
add
cmp
js
add
cmp
dec
testb
lret
call
iret
add
and
es
adc
xacquire
test
inc
or
cwtl
insb
and
inc
adc
fidivl
out
sub
jle
jbe
imul
jo
mov
mov
dec
sbb
lea
sbb
mov
cmp
mov
orl
testl
push
pop
or
sub
sbb
push
stc
push
mov
sbb
shll
fisubl
lds
sub
lea
cs
cmpsl
lds
jp
les
inc
add
in
dec
mov
adc
mov
cmp
mov
jne
lahf
push
cld
ss
sub
je
testb
inc
add
inc
dec
push
cmp
mov
cmc
add
or
ret
jbe
adc
psadbw
lods
mov
sbb
arpl
out
xchg
sar
inc
leave
sub
push
outsl
sbb
fimull
lds
sbb
xor
push
pusha
aad
pop
pop
aaa
mov
dec
mov
jo
push
dec
adc
outsl
or
sub
ljmp
gs
dec
pop
call
cltd
pusha
filds
dec
pop
ds
add
and
add
daa
shlb
jne
push
jb
mov
add
push
clc
dec
push
xchg
testb
jle
in
lds
outsb
sbbl
rclb
inc
inc
mov
push
dec
filds
sub
enter
mov
push
xchg
repnz
or
popa
mov
and
dec
xor
mov
iret
jae
cltd
push
or
mov
xchg
flds
aas
xchg
sti
inc
adc
into
or
leave
inc
shll
jns
fcompl
mov
mov
inc
adc
cs
push
mov
cmp
and
jnp
push
dec
inc
je
lock
xor
adcl
sarl
inc
push
add
test
add
pop
cmp
xor
clc
sub
repnz
lea
push
stc
adc
add
jo
push
push
sub
outsb
aas
test
jae
push
dec
sahf
js
mov
inc
dec
pop
pushf
mov
dec
das
jnp
sub
mov
inc
repnz
add
adc
add
xor
push
inc
adc
mov
inc
outsb
or
or
or
lahf
nop
adc
in
outsb
sub
push
mov
add
push
fists
or
nop
iret
jg
or
inc
inc
jns
sahf
adc
xor
or
dec
sbbb
push
mov
add
add
pop
push
test
aaa
leave
test
xor
adc
xor
notl
gs
mov
lret
mov
int3
sub
into
ja
shlb
xchg
dec
mov
test
call
or
and
pop
sbb
pop
inc
mov
push
test
add
sub
inc
adcl
imul
sbb
sub
clc
adc
add
leave
enter
dec
rorb
inc
or
and
ss
xor
outsb
pop
sbb
inc
mov
outsb
dec
loope
xchg
xchg
sub
xchg
add
dec
adc
mov
inc
sbb
jmp
sbb
lods
je
xor
inc
fwait
add
pusha
xchg
rclb
loop
adc
or
and
and
push
add
mov
mov
sbb
pop
or
pop
add
pop
das
adc
pop
xchg
ret
stc
xor
mov
das
in
cmp
jle
or
or
js
lods
adc
insb
push
inc
ljmp
sbb
dec
imul
add
add
pop
aaa
iret
and
dec
adc
nop
test
add
mov
mov
push
fs
xchg
xchg
jecxz
hlt
inc
jo
mov
shll
adc
dec
cmpl
test
sub
rcll
or
xor
les
pop
sbb
jmp
movl
push
stc
lcall
or
lods
insl
dec
xchg
call
cmp
inc
ret
and
jl
xchg
adc
lods
xchg
lea
out
lea
mov
pusha
jo
ret
hlt
add
clc
xor
push
xor
dec
shll
mov
ss
lcall
inc
rcll
dec
push
pop
dec
dec
imul
mov
call
int
and
in
push
lds
sbb
in
and
int3
ret
and
pop
mov
out
cld
jo
xor
dec
xor
inc
inc
daa
mov
ret
xor
sub
jb
inc
cmc
mov
pop
mov
mov
mov
or
inc
add
and
mov
pop
pop
push
add
mov
sub
mov
or
js
in
mov
add
push
sbbl
add
jmp
cmpsb
stos
ret
enter
popa
dec
icebp
add
sub
and
pop
sub
mov
add
fs
push
fucomi
fs
dec
sbb
lock
lahf
rcll
out
insb
aas
mov
rcrb
push
push
jo
pop
or
sti
push
dec
int3
push
jns
fiaddl
imulb
xor
add
rcl
fsubrs
or
add
jle
pop
pop
and
inc
aam
lea
xchg
mov
adc
dec
les
cmp
push
push
js
push
shl
or
xchg
mov
inc
andl
pusha
inc
or
mov
sub
add
or
pop
xor
test
pusha
jl
pop
enter
push
cmp
or
repnz
push
mov
push
inc
sbb
mov
push
xor
lock
add
add
xchg
sub
daa
pop
xchg
ret
sbb
sbb
iret
imul
cmp
lahf
mov
cmp
repz
stc
out
lea
adc
aad
add
or
mov
outsl
inc
fnstenv
sbb
or
fbstp
ret
inc
jmp
add
mov
jnp
dec
insl
or
mov
adc
rcll
push
mov
jno
mov
jne
enter
imul
sbb
pop
mov
inc
inc
sbb
and
cmpsl
adc
pop
push
push
pop
inc
jae
cmpsl
clc
xchg
add
into
les
sub
and
inc
push
sub
ret
adc
mov
pop
sbb
dec
adc
enter
push
in
popf
cmp
pusha
xchg
inc
das
xchg
out
ds
and
push
orl
and
xchg
sub
add
bound
cmp
cli
push
jb
or
add
cltd
lods
sub
daa
push
pop
imul
or
sbb
int
adc
into
mov
dec
cmp
sbb
jmp
adc
cmpsb
fcomps
imul
xchg
push
jl
cmpsl
adc
jo
pop
lods
pop
sub
popa
outsl
mov
movsl
and
mov
xor
icebp
jl
xchg
xor
sbb
mov
dec
test
jg
mov
outsl
sub
adc
test
and
sub
lea
addb
ret
cmpsb
subl
adc
mov
adc
cmp
cmc
popa
insb
stos
subb
and
adc
pusha
or
outsb
push
aas
push
mov
je
push
cmpl
adc
pop
jl
or
fldt
add
jb
testl
sbb
and
lcall
je
sbb
fcompl
rcl
adc
scas
add
push
and
adc
adc
in
mov
mov
inc
in
pop
fdivs
inc
jo
ds
sbb
leave
adc
aad
jo
xor
or
and
rcrb
rcrl
enter
pop
rorb
adc
xor
add
pushf
mov
pop
mov
cwtl
mov
dec
and
sub
nop
add
inc
push
adc
mov
push
aam
sbb
ret
pop
dec
sbb
xchg
aaa
inc
jmp
andb
inc
jl
lock
push
adc
and
or
pop
setg
sub
sub
xchg
push
pop
fmull
sbb
and
in
xchg
or
jb
jge
or
int3
xor
sub
sbb
loopne
mov
push
push
inc
mov
lcall
dec
dec
sbb
enter
ffreep
das
shl
sbb
inc
mov
test
daa
adc
pop
daa
mov
or
push
imul
xor
rolb
leave
jmp
jle
sub
xchg
mov
inc
dec
fcmovbe
or
icebp
lods
sbb
cmp
orl
inc
mov
and
jecxz
leave
nop
ljmp
cwtl
add
xchg
jae
pop
push
imul
sbb
mov
test
xchg
pop
pop
je
js
xor
sti
pop
in
fisubrs
pusha
cld
push
js
inc
test
ss
jl
jg
clc
jg
jl
pusha
or
jb
xchg
arpl
lea
xor
insl
xchg
and
mov
fsubrl
sarl
xchg
cmp
sbb
test
imul
xor
add
in
xor
in
lret
clc
inc
lods
and
in
dec
and
push
lea
adc
add
loopne
jbe
jle
lea
not
mov
mov
subl
dec
or
or
lahf
adc
inc
jmp
jne
inc
outsb
push
push
push
push
adc
nop
nop
popa
push
mov
mov
cmp
and
sub
xor
dec
inc
push
sbb
addb
call
rol
sbb
scas
lret
adc
xchg
and
cmp
xchg
pop
sub
and
dec
adc
push
push
sahf
popf
mov
mov
mov
dec
mov
stos
mov
add
movsb
enter
push
or
lds
adc
enter
les
pop
cmp
in
jl
mov
pushf
inc
push
add
ret
loopne
mov
xor
int3
inc
loop
mov
jb
or
or
fisubl
dec
fs
ds
mov
or
arpl
mov
mov
rcrb
push
mov
addps
jle
sarb
incl
cmp
jle
ss
push
mov
mov
mov
ret
mov
and
adc
xor
jmp
decl
mov
sbb
subb
adc
pop
sub
in
xor
or
and
dec
clc
pop
cli
push
push
les
cld
jne
mov
stos
sub
adc
push
ror
add
add
pop
or
sti
imul
inc
idivb
shrb
sub
insb
iret
cmp
mov
nop
imul
in
cltd
adc
mov
push
cmp
adc
out
leave
pop
adc
sbb
out
adc
mov
daa
push
cmp
and
xor
inc
push
or
or
sbb
inc
dec
sub
add
mov
test
dec
xchg
or
in
add
daa
push
add
fists
add
into
xor
insl
test
daa
add
ja
and
lea
cs
add
xor
loop
jb
test
lods
lods
sahf
ret
xorl
mov
out
dec
and
xor
xchg
pop
leave
xchg
xor
leave
xchg
pop
leave
cs
pop
sub
sub
daa
leave
xchg
pop
leave
es
pop
and
and
mov
ljmp
scas
mov
addr16
push
scas
in
scas
sbb
fs
sbb
add
jmp
pop
pop
outsb
or
pop
mov
popf
xlat
mov
push
push
or
mov
dec
and
int3
fbld
dec
icebp
cmp
sbb
mov
pop
and
xchg
add
add
pop
xchg
xchg
xchg
dec
adc
inc
mov
rolb
xchg
adc
cs
dec
pop
adc
ds
adc
add
push
leave
leave
leave
dec
movsb
push
push
leave
sub
lock
in
in
in
or
decl
xchg
fstpt
or
pop
sub
shlb
fidivrs
les
sbbl
pop
jo
jb
dec
add
adc
fidivl
xlat
in
add
add
mov
call
dec
cli
xchg
mov
lock
mov
jb
push
mov
les
leave
or
out
adcb
mov
js
xchg
rol
es
int3
nop
xor
and
or
jl
adc
mov
push
or
js
adc
or
sbb
or
sub
fldenv
mov
cmp
addr16
xchg
dec
add
push
ret
sub
xchg
test
push
enter
and
inc
mov
or
adcb
cmp
add
insl
cmp
cmp
sbb
pusha
lods
inc
mov
dec
cltd
inc
cs
pop
lock
sarb
pop
dec
xorl
xor
fdivrs
cmp
jge
ss
in
je
push
or
test
je
pusha
inc
dec
fdivrs
mov
jmp
mov
sbb
insl
sub
ja
insb
adc
mov
adc
or
sbb
aad
jmp
pop
and
je
pushf
lds
sub
sti
aad
xor
ljmp
and
fnstcw
xchg
xchg
rcr
enter
and
scas
pop
cmp
sub
mov
pop
dec
in
mov
lcall
nop
adc
lret
negb
xor
ficoms
addr16
inc
pusha
js
xor
push
inc
fs
fs
cmp
jnp
pop
cli
push
sub
and
sub
xchg
dec
mov
std
mov
add
jmp
int
mov
sbbb
mov
out
test
lcall
out
shlb
cs
shrb
dec
insl
push
dec
sub
pop
push
inc
sbb
push
es
xor
inc
cmp
xchg
inc
inc
rorl
mov
sbb
adc
push
dec
mov
xor
mov
xor
int
cmp
mov
add
push
mov
mov
inc
add
mulb
stos
xor
sahf
adc
sbb
test
clc
cmpb
movsb
lock
mov
stc
fimuls
sbb
adc
fs
ffree
fwait
enter
lea
adc
in
cltd
popf
fisubl
mov
push
mov
js
dec
repz
call
jns
add
cmpl
lock
popa
pop
notl
idivb
push
mov
sbb
bound
or
and
clc
add
div
repz
sub
xor
jge
iret
ret
jne
push
xchg
adc
nop
shlb
jb
es
pop
inc
jl
jl
adc
inc
pop
rorl
loopne
dec
or
imul
roll
mov
or
in
outsb
push
imul
or
fmuls
pop
lea
mov
jmp
adc
das
cmp
or
jl
mov
jmp
pop
cmp
or
push
or
cmp
push
data16
inc
lods
test
sbb
test
mov
jb
jl
push
inc
jg
xor
push
add
addb
dec
mov
push
jne
xor
xchg
or
leave
dec
decl
jle
cmp
jl
cli
pop
jmp
jo
ret
call
stos
mov
cvtpi2ps
sbb
pop
mov
pop
les
sub
cli
add
mov
cmp
ss
mov
or
xchg
fs
inc
cmp
and
icebp
sbb
test
test
insb
ffree
push
sub
je
je
divl
add
pop
add
es
jmp
inc
inc
faddl
fcmovbe
push
rolb
inc
cmp
int3
sub
or
xchg
lods
adc
pop
inc
pop
mov
mov
cmp
jg
pop
add
push
and
add
fmuls
rcrl
lea
popa
push
xor
dec
loopne
or
fidivrs
adc
insb
xchg
mov
loope
push
pop
push
lock
lods
add
adc
js
or
mov
xor
test
cmc
dec
cmp
sbb
xor
mov
mov
adc
jo
divb
inc
adc
xor
sub
add
and
test
dec
rorb
fld
mov
loop
adcl
cs
mov
xor
iret
lock
cmp
mov
jl
cmp
jg
push
sbb
jae
outsl
jmp
xchg
rol
das
xchg
outsl
dec
call
xchg
fs
addl
and
xchg
push
je
sub
mov
insb
mov
inc
inc
cmp
jo
insb
adcb
daa
fst
push
and
jg
push
xchg
jp
call
mov
ret
cmp
movsb
ds
cmp
jecxz
je
dec
sbb
and
jge
pop
xchg
sbb
cmp
add
and
clc
loope
push
mov
out
mov
xchg
cli
lar
shlb
adc
shll
sbb
rol
inc
and
lcall
pop
stos
xchg
mov
fbstp
loop
mov
aaa
xchg
or
hlt
add
in
ret
std
in
jle
aaa
push
movsb
sbb
mov
test
jo
adc
jecxz
dec
or
push
into
dec
stos
pusha
sbb
cmp
push
pop
mov
fists
push
add
scas
lcall
adcb
dec
out
cmpsb
fnstenv
or
jmp
popa
adc
stos
mov
adc
fnsave
aam
imul
and
xor
cmp
adc
push
add
or
lret
push
mov
fs
add
push
das
ds
jl
cmp
or
ret
and
mov
ret
fnstenv
adc
jle
sub
jge
inc
and
cmp
jg
sbb
jnp
loopne
push
lock
add
mov
dec
or
inc
add
test
nop
sub
mov
mov
sbb
fiadds
inc
sub
sub
sbbb
pop
and
push
xor
lcall
sub
xor
cmpsb
imul
and
movl
mov
mov
dec
push
dec
inc
fwait
pop
add
data16
jbe
sub
cmpsb
imul
pop
pop
jnp
sub
fnstcw
jl
push
mov
add
add
sub
rol
imul
pop
mov
idivb
sub
add
or
xor
cmp
xchg
in
sbb
rcrl
inc
xor
mov
addb
jae
or
cmp
fbld
dec
pop
je
add
adc
shr
cmp
jnp
push
pop
pop
adc
mov
pop
orl
jne
inc
dec
pop
adc
mov
popa
inc
idivb
cs
sbb
das
loope
jle
fisttpl
pop
push
or
inc
and
pop
cmp
testl
test
xchg
mov
add
aad
fidivs
sbb
arpl
dec
sub
pusha
jns
not
outsb
xor
cmp
cmp
jne
xchg
or
and
pusha
add
subl
jp
add
pop
add
dec
dec
pushf
bound
push
ret
sbb
mov
sarl
or
inc
insb
roll
adc
jno
pusha
lret
sbb
sti
sub
sub
pop
xchg
add
outsb
xor
scas
or
ret
cltd
lea
push
lea
inc
adc
fwait
and
xchg
mov
test
loop
mov
loop
lock
insl
arpl
add
cmpsl
inc
adc
pop
jmp
aaa
adc
addr16
inc
and
popa
inc
es
sub
fiaddl
ja
dec
lea
out
test
iret
inc
rolb
or
add
ret
adc
in
lock
adc
push
push
pop
dec
xor
addr16
xor
mov
jo
sub
std
jle
sarb
cli
rclb
mov
xchg
aad
mov
mov
mov
lcall
sub
cmp
inc
or
inc
sub
pop
pop
inc
mov
aad
filds
cs
subl
xchg
in
imul
lret
out
mov
std
push
dec
inc
pop
lock
pop
jle
push
push
xor
test
and
cmp
mov
mov
xchg
ret
jno
cmp
rcll
push
add
notb
loopne
sub
push
dec
pop
adc
popa
xor
lahf
shll
xor
out
and
sub
out
and
mov
add
pusha
insl
adc
insb
push
dec
js
adc
shll
cmpsb
std
test
push
push
lods
jmp
pop
or
sbb
call
cmp
ret
je
xor
add
inc
xchg
jl
cmp
jg
jae
mov
sub
out
insl
jle
jl
cmc
push
push
xchg
push
int3
jne
push
cmp
pop
pop
cmp
push
push
jl
movsb
pop
mov
mov
js
cmp
insl
pusha
mov
and
jle
les
jnp
push
jbe
in
pop
fs
push
jl
rorb
jbe
push
cmp
or
das
push
mov
insb
pop
test
test
sub
les
testl
push
lcall
sub
pop
inc
inc
inc
push
jl
and
or
inc
push
sub
aas
js
dec
xor
mov
test
adc
jg
sbb
sbb
pop
push
and
nop
ret
mov
sahf
call
roll
test
xchg
sbb
sarb
cmp
mov
repnz
push
lret
and
adc
or
bound
leave
sarb
aas
dec
mov
jl
jl
sub
aaa
and
jnp
aas
add
add
mov
aaa
dec
mov
fcmove
push
and
shlb
nop
lcall
sub
xor
adc
lods
insl
mov
and
js
sbb
sbbl
mov
lock
gs
xlat
add
insb
or
inc
aaa
daa
sbb
or
or
jbe
ss
pop
in
jmp
push
faddl
mov
lret
push
pop
push
js
xor
ja
add
into
mov
pop
and
mov
pop
mov
loopne
xchg
adc
sub
cwtl
pop
inc
xor
inc
xor
jo
xchg
jle
sub
fsubs
mov
add
testb
sbb
je
lcall
push
push
sbb
jbe
scas
addl
sub
test
out
add
or
mov
mov
dec
adc
push
aam
dec
jecxz
jno
pop
std
jl
sub
repnz
and
mov
aas
or
repnz
hlt
js
sbb
xchg
pop
inc
inc
xchg
jb
pop
sbb
sub
iret
mov
outsl
sbb
pop
dec
jmp
sbb
andl
les
and
xchg
mov
mov
sbbb
loope
or
iret
add
inc
repnz
repnz
jl
sbb
push
leave
and
or
push
xor
adc
jl
enter
and
sbb
fcom
and
inc
aas
mov
je
dec
jge
filds
andl
mov
out
pop
mov
pop
cmp
orb
sbb
mov
fiadds
daa
cmpsl
mov
loopne
rol
rorb
sbb
cs
int3
inc
sbb
mov
add
add
mov
or
and
rep
popf
adc
xchg
mov
adcb
jnp
adc
add
test
jns
loope
testl
add
push
mov
cmp
loopne
fildll
xchg
adcb
or
sbb
push
push
es
idiv
data16
and
lcall
das
fwait
shlb
dec
mov
inc
in
mov
sarl
clc
add
ret
jle
jmp
stc
repnz
sub
ret
rcpps
dec
xchg
add
sub
sbb
jecxz
sbb
ret
jmp
xor
cli
or
mov
push
cmpl
sbb
push
or
fsubrs
mov
fs
pop
test
and
out
pop
dec
mov
loop
jno
adc
dec
bound
and
push
pop
insb
adc
pop
and
fistps
add
jg
lret
loope
cmp
dec
es
cmpsl
out
insl
push
cmp
push
pusha
mov
push
sbb
js
fsubs
rcrl
ret
sarl
adc
mov
dec
jns
bound
sbb
dec
xchg
pop
sbb
insb
push
adc
aaa
daa
push
loope
sbb
std
mov
adc
inc
data16
sbb
push
je
gs
sbb
je
fcompl
pop
pop
push
pop
xor
sbb
add
xor
adc
push
sub
push
push
lods
and
pop
lahf
dec
pusha
mov
repnz
pop
outsl
add
nop
rcrb
adc
mov
lods
je
or
mov
push
inc
xchg
add
test
ret
mov
add
les
or
cli
push
mov
nop
cmp
das
je
dec
push
test
rclb
ss
andb
pop
push
push
lods
push
adc
enter
xor
dec
js
sahf
fs
pop
push
cmp
ss
testl
or
call
outsb
mov
call
jns
jnp
jnp
xchg
jns
sub
dec
test
movsl
lods
imul
xlat
xor
mov
loopne
or
pop
inc
ja
lahf
or
enter
out
loopne
dec
mov
cmp
cmp
and
iret
and
pop
aas
xor
adc
and
mov
or
push
jnp
ss
dec
pop
mov
add
ror
dec
cmp
sbb
xchg
push
sub
mov
dec
xchg
push
aam
mov
and
mov
add
lods
sub
test
je
xchg
popa
push
pop
mov
sbb
add
mov
bound
fsub
jns
pop
adc
and
mov
enter
push
in
pop
xchg
push
and
dec
mov
push
aas
push
xchg
fcompl
psubq
insl
pop
fs
and
mov
xor
pop
sbb
test
cmp
sahf
sub
xor
lock
jge
mov
xor
sahf
divl
ss
pop
pop
push
int
call
ficoms
add
sbb
sbbl
mov
repz
inc
inc
pushf
xor
dec
and
rol
fstpl
add
mov
xchg
push
pusha
and
lret
xor
add
jecxz
pop
dec
aaa
fcomps
subb
lret
add
jo
adc
adc
sbb
test
sbb
ss
es
cmp
das
inc
fdivl
adc
call
push
sbb
js
insb
popa
cs
pop
gs
gs
xor
gs
cltd
add
shlb
ror
or
push
lea
push
orl
push
xor
in
push
stc
xor
jnp
pop
xor
lods
xlat
push
inc
xchg
cmp
cmpsb
outsl
mov
stos
arpl
bndstx
jno
ret
int
dec
jno
and
sbb
fnsave
push
lock
pop
mov
adc
cmpl
rolb
out
es
loop
pop
adc
add
xor
pop
jle
mov
sbb
push
dec
sub
and
mov
mov
xorb
inc
mov
je
inc
push
dec
sbb
mov
or
mov
xchg
and
aad
shlb
dec
cmp
dec
dec
xchg
inc
lcall
xchg
lock
enter
addr16
jmp
dec
lods
mov
filds
cmpsb
arpl
test
rcrb
pushf
push
push
dec
out
mov
ret
leave
pusha
push
cwtl
gs
loopne
pop
mov
stc
and
lea
shrl
loop
jne
and
sbb
inc
push
mov
adc
lcall
push
clc
mov
lret
ret
roll
push
fnsave
test
mov
out
add
aam
push
loope
push
loopne
fdivl
fsubs
xchg
sbb
addb
sbb
push
daa
je
pop
mov
loopne
cmpb
mov
es
cmpsl
ror
xchg
out
mov
push
ret
and
movsl
and
sbb
add
adc
lret
xchg
bound
pop
test
ds
push
mov
lret
aas
sbbl
inc
mov
adc
test
inc
add
pop
repz
cmpsl
addb
data16
into
fidivs
dec
or
outsl
sub
roll
cwtl
popa
cmp
sub
inc
sahf
cs
cmp
sbb
dec
cmp
xchg
push
loop
les
in
push
push
arpl
cmp
cmpsl
addr16
or
and
dec
inc
xchg
adc
push
sbb
arpl
add
sub
nop
leave
aad
roll
test
fs
dec
dec
xor
loope,pt
repz
add
or
aaa
sahf
push
lea
adc
push
push
push
sbb
cmp
xchg
or
push
inc
fbld
mov
stos
addl
mov
rcl
and
sub
pop
mov
sub
sbb
mov
and
and
ds
nop
lea
xchg
bound
fdivs
add
push
add
mov
aas
add
js
call
or
push
daa
and
popa
andb
aam
je
xchg
xchg
and
or
lds
test
pusha
mov
xor
push
shl
adc
mov
mov
imul
mov
jbe
adc
clc
movsl
jns
cmp
pop
xor
testb
roll
cs
js
xor
xlat
push
pop
sbb
shlb
dec
push
rorl
fmuls
testl
xchg
cs
mov
loopne
xchg
cltd
xchg
fs
loop
mov
das
jbe
rcrl
stos
sbb
jbe
xorl
std
or
or
pop
add
xlat
push
push
hlt
push
push
movsl
js
pop
jnp
test
sub
es
xchg
aam
ror
dec
sub
insb
add
inc
jl
pop
jge
and
sti
sub
add
xchg
mov
add
out
xchg
and
xchg
test
dec
push
sub
aam
fsts
or
lods
fcompl
pop
pop
sub
xchg
je
adc
pusha
push
imul
mov
xchg
sub
or
pop
sub
sbbb
pmulhw
clc
or
push
push
inc
test
and
push
aad
xor
shlb
incl
je
imul
popf
push
sub
sbb
xchg
add
insb
mov
ja
aam
and
jno
fsubr
call
sbb
push
enter
ror
mov
or
add
mov
sub
add
ret
ss
dec
mov
cmp
sub
pushf
adc
xor
sbb
cmp
jge
cs
inc
outsb
push
pop
nop
pusha
dec
jg
sti
jmp
adc
adc
nop
aas
loope
popf
cmpl
lcall
ret
mov
outsb
adc
mov
mov
mov
cmp
leave
xchg
mov
fsubs
stos
xor
cmp
push
push
push
xchg
movsb
lds
pop
ficoms
lret
stos
test
xchg
push
repnz
repz
lds
fisttpl
mov
es
int
ds
or
in
clc
mov
ja
sub
fdivrs
pushw
out
lea
outsl
cmp
mov
leave
cli
ds
decb
cmp
ljmp
jo
cmp
imul
loop
lret
sbb
arpl
jo
rclb
jae
nop
insb
test
mov
inc
hlt
ret
mov
and
or
fsts
dec
adc
push
add
inc
pop
add
ret
and
xor
add
mov
or
lahf
pop
and
jmp
aam
aas
movsl
leave
inc
push
ret
xor
call
jg
mov
push
nop
loope
pushf
mov
movsl
push
jp
test
fs
pop
daa
adc
ret
or
or
mov
and
add
push
push
aaa
or
cmp
jp
inc
xchg
push
xlat
ret
and
add
push
dec
cmp
cltd
jne
arpl
fdiv
ret
add
push
push
movsl
pop
push
adc
push
xchg
je
lahf
cmp
push
cltd
clc
cltd
mov
stos
inc
es
jns
jne
sub
les
push
jnp
pop
mov
sbb
subl
adc
sti
push
inc
out
dec
sarb
mov
push
icebp
sub
pop
push
xor
mov
pop
imul
push
ja
fidivrs
movsb
xchg
js
or
ret
push
xor
shll
jmp
and
imul
pop
mov
mov
adc
fs
or
xor
xchg
xchg
inc
es
lds
xor
xor
pop
je
out
add
sub
xor
in
pop
or
xchg
inc
dec
dec
sbb
sbb
inc
inc
sbb
and
lods
lea
jge
mov
sbb
inc
je
and
adcl
cmp
and
jns
fdivl
jae
add
nop
adc
js
in
or
cli
incl
add
or
scas
test
mov
xor
and
mov
je
push
movsb
les
sub
mov
or
pop
xor
push
push
std
inc
mov
cld
loop
pop
in
dec
xchg
or
sbb
push
xor
xor
js
call
or
mov
dec
pop
sbb
add
xchg
or
les
fistpl
sbbl
cltd
std
xor
lret
push
sub
sbb
sub
mov
inc
xlat
mov
dec
jmp
cmp
push
frstor
movsb
adc
ficoms
or
mov
das
dec
sub
xchg
scas
pusha
pop
stos
ja
or
test
test
jl
cmp
pusha
xchg
cmp
loopne
inc
adc
cld
pop
mov
adc
or
pop
cli
xor
in
pop
cmp
iret
dec
call
dec
int3
add
inc
dec
cmp
fistpl
inc
lods
fwait
adc
sub
mov
popa
xchg
or
sub
scas
rcrl
das
inc
add
cwtl
cmc
pop
sub
mov
repnz
push
jmp
inc
push
inc
inc
sbb
movsb
test
add
push
push
aas
bound
mov
sbb
ret
jmp
fildl
xchg
mov
mov
inc
adc
or
jne
and
cmp
mov
lods
inc
jno
andl
or
mov
adc
cmp
mov
lret
push
dec
mov
xlat
push
fwait
jp
adc
mov
inc
push
pop
sub
inc
clc
sbb
or
lods
movsl
cmp
jno
and
push
inc
dec
les
pop
rcr
add
push
jg
add
adc
je
mov
cmpsl
inc
adc
lea
loop
sahf
rclb
dec
push
push
and
xchg
mov
fwait
mov
lea
and
lea
das
imull
mov
testb
or
cmpsb
jnp
adc
js
sub
pop
shr
ret
or
mov
or
sbb
push
jmp
test
dec
dec
jo
inc
sbb
jb
dec
cmpsl
adc
add
mov
dec
sbb
stos
lea
push
ss
pop
sti
sbb
push
xor
dec
pop
jb
shlb
je
cmp
push
lock
xlat
and
cmp
adc
xor
or
adc
jne
or
sub
push
loopne,pt
sbb
pop
push
pop
or
sbb
ret
jl
test
out
pop
or
jg
cmp
fs
pop
movsl
shll
pop
adc
xchg
dec
xor
mov
sub
cmp
pop
and
test
sub
xor
dec
cmp
or
jg
jge
push
daa
stos
mov
cmp
sbb
cmp
jge
and
sti
add
rorl
rcrl
mov
cmpl
sbb
fwait
nop
push
push
mull
ss
lea
jo
mov
adc
rorl
jbe
mov
sbb
mov
pop
jne
cmp
outsb
push
xor
push
mov
js
adc
fcoml
scas
add
or
mull
lea
xor
test
roll
cmpsl
pop
data16
pop
repnz
shrb
jo
mov
adc
ret
mov
mov
je
lods
mov
clc
movsb
mov
pop
jns
mov
jg
add
lods
push
pop
add
xor
add
and
and
and
mov
les
sbb
sbb
movsl
mov
sbb
push
mov
je
mov
pop
inc
mov
fisubrl
rorl
enter
mov
ficoml
xor
dec
aad
lret
pusha
xor
loopne
xchg
add
push
push
arpl
adc
or
and
xchg
jmp
xchg
sub
fwait
cmpsl
xor
push
sbb
sub
dec
inc
adc
jno,pn
pop
inc
inc
sidtl
hlt
or
cmpsl
enter
lret
fdivs
cmp
ljmp
adc
push
adc
and
mov
lock
push
sbb
or
push
and
sbb
lcall
inc
jle
dec
dec
dec
jo
xchg
mov
lret
xlat
clc
and
dec
add
sbb
sub
into
loopne
sub
aas
inc
imul
mov
js
push
jmp
add
add
movsb
adc
pusha
push
addb
out
sub
push
fidivrl
dec
jl
sub
cmpsb
popa
iret
sti
adc
ret
jmp
push
add
pop
pusha
sub
xor
push
call
xor
sti
pop
dec
mov
push
sub
call
cs
mov
rolb
cmp
jns
push
cmp
in
outsb
idivl
push
bswap
dec
int3
out
enter
enter
outsb
adc
pop
cli
mov
ret
cmpl
lret
in
std
iret
pop
popa
push
mov
mov
jne
and
imul
or
pusha
je
les
loope
push
sbb
enter
xor
nop
push
or
movsl
mov
and
stos
cmp
je
popa
or
add
adc
add
or
movsb
jnp
and
xor
push
push
call
int
dec
sti
mov
dec
lods
xor
and
imul
mov
repz
loop
mov
jns
ret
add
es
dec
and
pop
roll
mov
jl
inc
sbb
es
push
orl
mov
sub
pop
mov
adc
nop
fsubrl
mov
xchg
or
mov
sbb
mov
mov
into
neg
push
push
ret
js
jecxz
fists
repz
sbb
mov
add
cmp
cmp
xor
inc
dec
aad
popf
dec
hlt
enter
dec
imull
clc
mov
std
cmp
test
adc
jl
popa
inc
cmp
adc
dec
mov
mov
xor
push
inc
jb
test
push
adc
xchg
push
xchg
xor
mov
xchg
movsl
mov
cli
jo
call
cld
mov
decb
call
adc
sub
mov
ret
mov
mov
fldpi
jge
cmp
dec
and
fldcw
xchg
lcall
test
je
xchg
mov
xchg
pusha
sub
sbb
addr16
aas
cmp
cmpsl
pop
or
push
jae
inc
xchg
adc
adc
dec
call
push
outsb
cmp
aad
clc
test
fnstenv
jge
popl
push
loopne
push
jge
xor
jnp
inc
mov
inc
jl
jmp
jle
push
and
movsb
das
xor
dec
xor
in
sbb
mov
mov
js
icebp
es
pop
mov
sub
add
pop
ret
fwait
inc
mov
mov
mov
push
or
pop
inc
mov
or
dec
push
adc
bound
inc
in
andb
ja
clc
jle
ret
ljmp
pop
jg
lods
popf
adc
xchg
pop
mov
lock
mov
and
pusha
and
aas
sbb
sub
xor
filds
mov
pop
pop
in
adc
lea
int
lcall
mov
dec
cmpsl
adc
and
add
dec
inc
pusha
add
xchg
repnz
dec
sbb
adc
inc
mov
fcompl
adc
adc
xchg
inc
add
daa
int3
push
jne
jns
pop
pop
mov
data16
dec
push
and
push
stos
dec
and
test
pop
movsb
sar
jae
ret
cli
dec
and
sbb
pop
sub
ret
sahf
das
sti
jge
outsl
outsb
push
mov
rclb
daa
xchg
fists
leave
mov
mov
jmp
mov
sbb
punpckhwd
add
jle
jne
enter
loope
push
enter
rcr
stos
xchg
shll
xchg
dec
lea
test
push
cwtl
test
push
mov
mov
lods
scas
mov
ret
push
jo
xlat
enter
fidivrs
pushf
ja
jmp
mov
mov
sbb
fimull
push
and
add
clc
sbb
xorl
or
out
sub
xor
mov
call
repz
push
loop
or
cmp
sub
mov
cmp
mov
dec
fcom
adc
int
fisubl
add
add
inc
adc
lea
cs
mulps
or
cmp
mov
pop
in
mov
or
stos
adc
xchg
and
inc
roll
pop
jmp
mov
test
and
inc
push
push
cmc
sub
push
or
dec
jns
rcrl
ret
test
rcrb
imul
test
inc
pop
xchg
sbb
mov
testb
sbb
repz
je
call
mov
dec
lea
outsl
push
sbb
jno
add
test
cmp
in
mov
imul
arpl
pop
dec
dec
mov
jp
decb
sbb
push
lahf
inc
or
out
cmp
push
jo
into
or
rcll
je
cs
popl
xor
add
add
out
pop
test
or
push
add
xchg
jmp
jl
push
jmp
notl
inc
ret
push
sbb
push
outsl
sti
arpl
or
imul
push
ret
add
lahf
mov
sub
or
lods
test
jbe
ret
xor
ss
sbb
add
sub
imull
bound
imul
adc
lock
mov
add
adc
xor
mov
mov
add
aam
or
push
add
push
decl
jne
mov
sbb
or
mov
push
sbb
adc
decb
push
pop
or
or
jmp
or
or
mov
mov
adc
dec
pushf
xor
nop
ret
lods
xlat
orb
adc
push
add
andl
jne
jo
mov
iret
dec
mov
fsubrl
bound
lret
mov
xlat
sahf
push
into
push
in
pop
jl
fcoms
cmp
rcrb
cmpsb
add
insb
subl
xor
mov
cmp
inc
mov
sarl
pop
jae
fwait
push
bound
cmp
push
dec
or
sub
mov
inc
pop
xor
adc
dec
pop
inc
and
movd
cmpb
jmp
sbb
cmp
int3
cmc
ret
pop
pop
pop
testb
mov
movsl
and
rolb
js
mov
dec
cmp
and
lock
sub
scas
mov
adc
jo
fnstcw
je
pop
add
mov
inc
mov
cmp
mov
dec
jns
fcoms
dec
sbb
inc
outsb
mov
setg
adc
lcall
mov
stos
xor
rcrb
add
and
rorb
test
add
scas
mov
hlt
jmp
or
push
xor
decb
movsb
push
imul
inc
test
into
jo
adc
pop
shll
and
pop
pop
mov
mov
dec
sub
hlt
adc
xor
outsl
push
je
fisttpl
adc
pusha
fnsave
fidivl
push
jo
inc
stos
cmp
sub
dec
pop
pop
push
jl
jne
into
outsl
inc
aaa
fcomp
xor
fsubrs
mov
mull
add
jl
push
xchg
cltd
mov
out
inc
mov
enter
lret
ds
adc
sbbl
dec
sub
lds
or
movsb
fdivs
andl
sub
sbb
aaa
pushf
add
fdiv
lods
inc
cltd
mov
add
mov
mov
fisubl
fstl
xorl
xchg
stos
xor
les
into
xchg
loope
mov
pushf
push
aas
dec
xor
or
and
inc
jo
and
inc
pusha
lea
mov
adc
fdiv
mov
xor
in
stos
in
adc
daa
or
jge
inc
sub
clc
int3
stos
jae
leave
or
aas
loopne
add
add
subl
mov
mov
add
stos
sub
sbb
addb
jle
mov
inc
cs
jne
and
add
xor
daa
fmull
mov
lahf
xor
orl
xchg
outsl
dec
mov
jl
xor
enter
add
imul
int3
push
bound
je
addb
mov
or
outsb
sahf
test
mov
xor
push
and
movsl
dec
mov
push
or
sbb
pop
les
mov
mov
or
mov
or
pop
arpl
test
mov
loopne
sbb
adc
dec
or
adc
sarb
fwait
sub
test
push
and
adc
je
divl
lahf
ret
mov
push
push
enter
and
in
and
sbb
in
cmpsb
sub
ret
adc
jb
xchg
dec
inc
cmp
push
enter
push
push
mov
adc
push
and
mov
fcoml
push
mov
add
cmpsl
dec
inc
sbb
sbb
push
adc
loop
add
cmp
jbe
cmp
mov
enter
nop
ljmp
and
mov
es
adc
jg
adc
sbbb
push
ja
mov
fwait
mov
in
lock
dec
ret
sbb
ljmp
mov
sub
dec
cmc
add
add
xor
lret
lret
roll
sbb
iret
pop
inc
or
push
mov
adc
aam
out
addl
or
rcrl
push
adc
mov
add
out
cmp
insl
add
or
loope
or
cmc
and
popf
fdivs
dec
dec
push
roll
fcomip
push
sahf
andl
xor
push
or
fsubr
or
adc
in
rorb
inc
rcrb
xchg
cmp
ja
pusha
inc
dec
push
sub
add
shl
popl
xor
mov
mov
push
shlb
push
int
nop
push
enter
ret
or
lods
test
cmpsl
add
andb
mov
sub
adc
and
push
pop
out
add
or
xor
pop
nop
test
js
sbb
mov
add
add
sub
repnz
jge
loopne
jecxz
in
in
mov
add
mov
push
mov
xchg
cmp
or
addb
mov
pop
cmp
loope
mov
or
mov
add
xor
ja
or
clc
jl
cmp
mov
jg
imul
divl
push
add
cmp
lods
push
sub
push
inc
and
outsl
pop
adc
addr16
add
sbb
ret
push
fwait
push
or
sti
pop
sbb
sbb
xchg
or
and
rcrl
iret
and
sbb
xor
ret
jl
cmp
add
cmp
jl
cmpsl
mov
in
jns
add
add
iret
lret
loopne
dec
rcr
int3
adcb
mov
add
fisttpll
fsubr
call
cld
clc
scas
jbe
loope
lahf
sbb
jmp
lods
pop
sbb
cmc
or
adc
addb
and
xor
inc
dec
sbb
and
adc
pushl
or
das
adc
shlb
ret
scas
mov
std
and
daa
je
or
je
sub
je
and
je
pushf
gs
and
jne
in
dec
sbb
xor
sbb
test
jae
scas
dec
scas
in
sahf
pop
inc
jnp
dec
sub
add
adc
xor
mov
add
adc
dec
fiaddl
dec
dec
xor
mov
and
or
insb
sbb
mov
jl
inc
sub
scas
out
or
push
sbb
adc
xor
in
movb
add
dec
loopne
fidivl
sub
adcb
insl
loop
cmp
push
add
adc
adc
or
xor
dec
inc
xor
arpl
xchg
or
test
into
insl
xchg
mov
sbb
enter
push
dec
arpl
jo
pusha
jb
lods
xchg
mov
push
mov
push
jmp
inc
cmp
inc
cmp
push
jmp
das
je
outsl
test
scas
push
shlb
dec
inc
test
je
and
or
popa
inc
dec
fcoms
or
mov
add
dec
scas
jne
icebp
dec
and
pop
jmp
push
push
cmp
mov
or
test
xchg
inc
xchg
mov
adc
push
mov
xor
push
pop
cmp
jnp
out
xor
movsl
or
push
cmp
repz
fiadds
add
mov
cwtl
push
pop
or
or
or
xor
popa
or
inc
sub
sbb
aas
dec
xchg
push
ds
push
inc
adc
sbb
sbb
sub
push
sbb
add
iret
pop
adc
inc
inc
pop
ficoms
add
or
fbstp
cmp
ret
mov
cltd
sbb
xor
and
sub
and
cltd
jmp
ret
fsubs
dec
lret
adc
push
mov
sub
xor
xor
dec
ret
jnp
cs
jmp
shrb
aam
cmp
js
cmp
jge
mov
push
add
and
sbb
jge
cmp
mov
jge
out
sub
add
sub
pop
xchg
add
mov
into
push
add
sbb
dec
xor
mov
popf
mov
clc
lock
push
sub
andb
lds
addb
adc
mov
or
scas
xor
mov
adcl
dec
lds
loope
orl
mov
test
notb
jle
inc
pop
and
jmp
out
cmpl
or
sub
arpl
add
ss
jno
out
adc
fidivrs
enter
pop
add
push
in
jl
out
cmp
pop
jmp
repz
pusha
xchg
and
jecxz
push
dec
test
push
push
pop
mov
and
cmp
inc
adc
xor
push
xorb
mov
mov
out
les
push
rolb
or
adc
cmpps
add
inc
or
add
sbb
aaa
adc
sub
add
pop
sahf
out
rolb
sub
mov
movsb
mov
xchg
dec
rcrl
mov
adc
imul
addb
mov
sub
lods
and
sarb
add
dec
push
xor
or
imul
je
pop
push
adc
xlat
jge
test
xlat
inc
sub
xorb
push
subb
or
mov
mov
ret
mov
adc
shl
dec
outsb
ret
or
pop
rcr
add
cmp
mov
jo
int
add
jnp
sub
sbb
jnp
sub
dec
push
je
xchg
js
stc
jbe
push
adc
iret
xor
aaa
aas
aaa
jnp
mov
stc
out
ficomps
jge
pop
or
push
neg
pop
imulb
dec
adc
insb
cmpsb
nop
or
scas
add
inc
lock
js
ljmp
and
pop
fsubrl
ss
in
and
scas
sbb
mov
mov
add
jecxz
adc
or
loope
push
and
push
dec
sbb
enter
fldl
push
fcoms
add
pop
pop
dec
sbb
sahf
call
cli
add
push
sbb
mov
xchg
pop
cs
cmpsb
jecxz
clc
push
or
imul
xor
lock
addr16
push
add
lret
data16
jp
add
jl
sbb
fwait
sbb
mov
jge
je
add
or
jns
cmp
movsb
sub
shll
push
pop
shlb
push
xor
sub
pop
test
xor
adc
xor
repnz
sub
add
outsb
cmp
or
or
gs
mov
imul
test
mov
ja
cltd
mov
fstl
cmp
dec
or
cmpsb
filds
xor
add
add
or
inc
adc
mov
mov
cmc
mov
fwait
jne
faddp
push
and
cmp
fsubrs
jo
fnsave
adc
pop
cli
and
test
in
mov
adc
push
lock
lret
test
fnstsw
pop
pop
das
xchg
ret
test
shlb
test
cmp
sbb
mov
out
pop
mov
jle
xchg
and
es
hlt
xor
rcr
test
adc
aad
rcl
add
xor
rol
cmp
cmp
mov
or
enter
cmp
pop
or
add
pop
push
pop
jg
cmp
jbe
jb
inc
jne
cmpsb
sub
cmpl
jge
lods
sbb
scas
nop
fs
pop
sbb
sub
cs
xor
and
addps
and
mov
out
and
cmpsl
xchg
cmp
cmp
and
in
inc
or
xor
mov
outsl
movsl
xchg
shlb
and
xchg
dec
push
inc
xor
add
test
adc
mov
pop
dec
add
or
repnz
adc
mov
lock
sub
xor
lea
or
mov
and
or
mov
movsb
push
xlat
mov
push
mov
cs
jmp
or
fs
add
sbb
ficompl
jne
insb
dec
sbb
add
push
jp
add
loop
nop
push
dec
roll
jp
mov
inc
les
pop
dec
dec
or
call
cmp
ss
jmp
aaa
das
or
cmp
add
aas
dec
pop
add
jmp
or
or
into
push
mov
mov
jo
pop
inc
cmpl
pusha
pop
movsb
xor
pusha
xchg
dec
push
test
sbb
mov
mov
add
jns
push
and
adc
ja
in
nop
mov
jbe
loop
dec
imul
je
xor
cs
or
ret
add
add
clc
test
fbld
xchg
or
fstl
rclb
or
push
js
jmp
jp
shrb
movsl
jmp
arpl
or
lock
xor
sbb
push
int3
mov
mov
in
push
push
push
xor
jbe
xor
and
pop
rcrl
and
or
and
and
or
push
insb
push
lds
test
ret
add
adc
cwtl
loopne
push
xchg
push
je
mov
dec
test
mov
iret
ficomps
insb
or
push
or
pop
or
adc
mov
or
push
insl
fwait
adc
dec
push
add
or
imul
inc
pop
dec
jl
dec
pusha
test
lea
mov
lret
cmp
lcall
movsl
xor
fldl
jne
push
sub
push
add
cmp
lcall
cmp
daa
sub
sub
cwtl
dec
sbb
sahf
imul
add
ret
lds
push
push
and
daa
inc
pop
mov
loop
fistpll
mov
mov
int
mov
push
or
stc
dec
fucomip
aaa
popa
jl
enter
sti
fwait
sbb
jne
in
call
push
push
xchg
push
sbb
pop
or
sbb
and
loopne
jne
cmpl
rolb
mov
or
adcl
push
pop
or
add
scas
je
mov
lods
mov
mov
adc
loop
adc
pop
push
ret
sti
and
or
adc
mov
sbb
lahf
cmp
dec
mov
xorl
sub
or
jecxz
pop
or
pop
xorl
in
or
jl
and
out
rorl
and
dec
adc
sbb
cmp
add
orb
xor
sbb
sbb
or
fwait
sbb
jg
or
jecxz
or
and
xor
add
imul
scas
xor
mov
jnp
pause
push
fisttpl
mov
mov
test
dec
sti
xor
inc
clc
push
fst
push
push
dec
ficoml
hlt
lret
je
mov
and
call
aaa
jle
mov
jns
sbb
lds
push
sbb
push
inc
push
xor
add
or
or
je
dec
imul
push
repnz
repnz
data16
std
add
enterw
dec
dec
push
push
lods
cmovo
outsb
mov
pop
adc
push
repnz
dec
mov
and
pop
sbb
lods
push
test
sub
and
popa
in
xor
push
mov
sub
loope
dec
xchg
push
je
lahf
mov
inc
pop
push
push
adc
jp
sbb
ficoms
push
adc
add
cmp
test
or
mov
inc
mov
adc
or
sahf
ss
dec
push
es
pop
pop
adc
xchg
pop
int3
or
add
dec
or
test
sbb
or
push
push
rcrl
cmp
xchg
repnz
add
ret
jp
or
fcmovu
or
and
outsl
mov
add
ret
xchg
cmp
cmpb
cmp
dec
jne
movsl
push
fidivrl
jno
fsubrl
mov
xchg
push
add
inc
gs
add
or
lret
inc
inc
test
lods
andl
lods
sub
fadds
ret
cs
pop
or
nop
int3
jo
add
jne
mov
mov
sbb
lahf
insb
sub
adc
sub
add
adc
fdivr
jge
jbe
push
das
mov
pop
push
rcll
jmp
mov
jo
in
insb
iret
adc
shr
pusha
inc
sbb
out
mov
inc
add
imul
cmpb
lret
and
push
cmp
mov
fbstp
add
xchg
mov
push
pop
mov
and
xchg
push
in
adc
mov
mov
mov
mov
ljmp
jnp
lods
in
sub
adcb
mov
out
mov
cmp
add
sahf
inc
jno
dec
pushf
sub
rorb
push
jge
rclb
pop
push
dec
add
adc
leave
aam
lods
mov
test
dec
push
fadds
sbb
add
xchg
hlt
xor
rolb
test
adc
adc
out
and
sub
out
sbbl
call
sbb
or
or
jecxz
test
push
adc
jne
data16
mov
rorl
iret
daa
faddl
cmpsb
incl
mov
jmp
ss
or
sti
sbb
ljmp
loopne
dec
adc
mov
jge
loopne
mov
pop
mov
repnz
xor
pusha
push
rep
cmp
sub
pushf
mov
test
rcl
dec
pop
and
adc
sub
adcb
jle
dec
push
push
imul
ret
movsb
je
add
or
cmp
je
add
push
fidivrl
pop
fsubrp
sub
les
jge
sub
and
or
jmp
cmp
or
js
mov
add
aam
add
mov
ficompl
add
addl
rcrb
inc
pop
dec
repnz
fndisi(8087
xor
sbb
sub
test
mov
andb
pop
mov
rcrb
mov
sahf
xchg
mov
inc
xchg
int3
iret
aam
xchg
push
and
lret
inc
and
dec
push
aas
sbb
lea
inc
dec
rcll
into
jge
lahf
pop
sub
les
jle
mov
mov
dec
mov
inc
pushf
add
dec
ds
xchg
cmc
mov
out
sub
lret
sub
push
push
push
add
push
addr16
nop
pop
adc
rclb
sbb
jbe
fdivs
neg
push
lea
idivb
sub
mov
push
mov
cltd
jp
call
dec
adc
test
insl
enter
inc
addl
add
inc
imul
jb
hlt
ret
aas
mov
into
push
cmpl
loop
and
loopne
mov
or
sbb
jo
xchg
test
cmp
out
jp
dec
lds
loope
jbe
repnz
jge
dec
add
add
cs
fstps
cs
shl
sar
aas
push
inc
pushf
and
fidivl
fildl
ret
repnz
decl
push
push
out
subb
adc
outsl
push
mov
sub
insb
and
xchg
sbb
mov
sbb
sub
lds
pop
pop
aad
daa
iret
ja
pop
int
inc
add
cwtl
shlb
int
xor
adc
xchg
in
cmp
mov
or
das
push
push
and
pop
pushf
mov
push
pop
cli
push
cmc
sbb
add
push
jo
adc
push
add
cmp
add
cld
jg
arpl
mov
test
jecxz
loope
cmpsl
pop
mov
aas
aad
cmp
mov
jl
pop
dec
pop
sbb
insb
cmp
push
pusha
test
push
das
mov
mov
cmp
enter
sub
movb
in
sub
mov
dec
fsubrs
into
and
sub
and
sbb
add
sbb
mov
or
pop
sbb
and
mov
jg
stos
dec
ret
sti
jg
testl
or
sahf
pusha
test
push
inc
inc
enter
push
nop
ret
mov
and
and
pcmpgtd
stos
sub
or
in
pop
sbb
cwtl
adc
inc
mov
inc
adc
out
test
inc
sub
add
cmp
je
imul
pop
adc
cmp
icebp
mov
dec
mov
int
ss
ljmp
dec
inc
pop
rcl
in
mov
in
mov
sub
adc
xchg
addr16
add
sbb
pop
clc
or
sahf
xchg
testl
addr16
or
or
pop
adc
or
rolb
dec
sahf
icebp
or
dec
jle
addr16
adc
sbb
popa
mov
or
inc
dec
bound
enter
inc
sub
add
inc
mov
adc
roll
popa
inc
adc
mov
cmpl
mov
arpl
les
into
xchg
ss
mov
jle
lea
inc
sbb
ret
fs
mov
sbb
jge
mov
or
jbe
aas
or
xor
es
xor
sub
dec
dec
test
and
dec
inc
sub
add
inc
and
movsl
pop
cmpsb
test
pop
idivb
sbb
inc
imul
shl
sbb
dec
call
rolb
xchg
pop
movsb
jnp
jg
inc
pop
xor
and
rcrb
mov
ror
dec
loope
and
vprotb
clc
dec
inc
lea
jp
and
push
pusha
stc
or
imul
and
popa
or
rolb
dec
inc
out
fadds
jle
cmpl
push
pop
sbb
enter
clc
jl
jmp
mov
jle
mov
lret
test
daa
jl
movl
or
add
jne
inc
mov
sub
ret
cli
jbe
dec
sbb
fdivrs
das
and
js
inc
add
pop
sub
sub
std
or
decl
add
push
add
lods
out
subb
fstl
shlb
das
jp
mov
sbb
gs
lds
mov
jnp
jb
sahf
sub
rclb
xchg
xchg
dec
jne
lds
mov
enter
or
jo
ret
mov
movsl
test
dec
sbb
or
sbb
or
sbb
adc
push
dec
lock
dec
jne
mov
xor
cli
adc
xor
je
push
ret
mov
mov
or
adc
insb
cmp
add
and
xchg
pop
adc
popa
cmp
out
mov
push
xchg
push
mov
lea
nop
push
stos
add
inc
fcomp
movl
or
jge
push
cld
jne
or
cmp
xor
cmp
ret
mov
sbb
sti
orl
push
scas
push
jbe
sti
cmp
call
add
aam
cld
inc
jne
inc
cmpsl
ret
lods
jne
and
out
push
push
ret
pop
loope
loope
jne
insb
loopne
scas
lret
pop
inc
sbb
lea
dec
sub
or
mov
ret
movb
aad
xchg
sbb
aam
cmpsb
push
mov
xchg
xchg
outsl
aad
fsub
test
aas
pop
mov
jo
inc
pusha
add
sbb
dec
mov
xor
push
or
push
push
faddl
std
outsb
mov
add
rclb
inc
or
add
fwait
and
sbb
jp
add
push
and
jl
popf
adc
xor
push
add
lods
sbbb
adc
adc
dec
rolb
sbb
pop
xor
or
repz
push
cmp
push
push
push
clc
mov
inc
call
sub
fidivrs
mov
jne
movsl
mov
lea
jl
mov
lds
pop
ds
push
push
shll
ret
and
jo
push
cmp
rcl
xchg
xor
pop
jns
dec
ss
in
pop
push
pop
pop
mov
cmp
sbb
mov
sub
movups
jecxz
dec
dec
and
out
mov
bound
push
push
imul
out
loopne
pushf
cmp
inc
add
mov
pop
add
call
jp
js
clc
mov
lods
std
hlt
push
adc
lea
push
rep
xor
xchg
cmp
mov
mov
insb
jge
jne
stos
mov
sub
xor
repnz
testb
fiadds
fwait
jge
shrb
sub
add
dec
add
push
out
mov
mov
lea
push
adc
je
xchg
sahf
je
lds
inc
loope
push
adc
or
push
jo
xchg
push
jo
or
rclb
sbb
popa
ja
push
or
int3
jno
jp
xorb
fildll
addb
jmp
mov
adc
lea
ret
sub
jb
inc
jne
inc
loope
inc
es
mov
mov
sbb
dec
pusha
add
xor
cmp
pushf
dec
inc
out
inc
imul
lods
das
xchg
adc
std
sbb
xorb
xor
nop
jo
add
push
test
mov
out
jecxz
add
fcompl
fisubrs
les
mov
mov
lret
movsb
xchg
out
lea
sub
mov
xor
icebp
cmp
in
ss
jno
ja
xchg
popf
add
inc
xchg
pusha
addl
xor
test
sbb
rcll
mov
rol
pop
mov
and
shl
dec
popl
jbe
cs
and
pop
lret
sbb
mov
fldl
addb
adc
sbb
adc
sub
push
je
xor
rcr
push
stos
fcmove
fiaddl
les
pop
movsb
sbb
jno
dec
ret
adcl
mov
je
push
push
cmp
and
mov
out
add
push
arpl
jno
xchg
in
jbe
mov
push
adc
xchg
mov
sub
inc
mov
cmp
rol
rorb
fdivp
insb
add
jmp
xor
sbb
int
push
push
pop
rorl
mov
fcoms
pusha
mov
pop
sbb
leave
lock
insb
or
inc
mov
dec
test
jge
push
shr
mov
add
shlb
mov
cwtl
rolb
in
fnstsw
call
push
ret
repnz
outsb
shll
mov
pop
push
aad
popa
add
loope
push
mov
add
add
adc
push
sub
sub
adc
outsb
xor
inc
loope
or
test
ret
add
jne
xchg
mov
cmpsb
pop
mov
push
xchg
lods
sbb
jge
inc
cmp
push
pop
sbb
and
adc
shrb
adc
push
cmp
jbe
mov
stos
and
les
dec
pop
cmpsl
inc
in
add
pushf
lods
push
mov
outsb
das
push
or
mov
cmp
cs
nop
push
into
cwtl
mov
in
shlb
mov
cmp
pop
pushf
das
sub
adc
mov
inc
mov
inc
std
mov
mov
movsb
insl
jae
add
lock
push
inc
dec
pop
out
xor
sub
mov
imul
adc
addr16
push
aaa
mov
add
cmpsb
jmp
and
xchg
mov
dec
imul
inc
add
inc
fcoms
ret
movsb
mov
mov
mov
and
xchg
cli
adc
push
xor
adc
es
dec
adc
lahf
call
push
les
les
mov
dec
pusha
sub
jecxz
adc
mov
rorb
mov
xchg
jbe
nop
pop
inc
sub
stos
fs
lock
mov
add
xchg
pusha
cmp
scas
pop
or
and
das
push
push
or
sahf
movsb
push
and
xor
pop
add
add
inc
mov
mov
std
or
pushf
jge
dec
icebp
lea
mov
js
xchg
xor
mov
cmpsl
les
cmp
rorl
xor
call
inc
gs
loopne
push
dec
seta
or
dec
push
jno
and
andb
scas
sbb
push
xchg
inc
or
push
sbb
ret
sarb
mov
dec
or
stos
dec
lods
inc
cltd
jo
mov
cmp
fwait
gs
test
cmpsl
test
add
enter
adc
adc
inc
or
inc
inc
fxch
adc
pop
inc
pop
add
push
dec
dec
or
jle
push
xor
lock
or
jp
nop
inc
pop
incl
pushf
cmp
cmp
icebp
data16
pushf
mov
pop
xchg
sbb
inc
dec
xchg
xor
inc
xor
lock
pop
push
inc
movb
cmc
fs
xchg
outsb
clc
add
sbb
cmp
mov
arpl
push
loopne
rcll
add
inc
xchg
xor
push
pop
pop
cmpb
sub
adc
or
inc
push
ljmp
dec
cmp
sub
out
and
push
les
xor
mov
dec
sub
xchg
xchg
push
push
sbb
sub
mov
aam
daa
pop
add
sub
inc
data16
mov
or
pop
pop
stc
ror
clc
rorb
or
inc
xchg
loope
fwait
rclb
in
dec
mov
jmp
gs
mov
pop
mov
inc
lock
mov
sub
pop
mov
add
aam
add
addb
add
cmp
popf
gs
sbb
jne
cltd
in
add
cmp
mov
or
sub
inc
xor
orb
shr
push
fidivs
push
adc
dec
add
pop
mov
popl
push
lock
mov
test
adc
xor
mov
aas
sub
dec
pushf
fists
popf
call
add
xchg
aaa
and
ja
sub
push
dec
mov
adc
or
or
cmpsb
xchg
inc
stos
adc
stos
cld
lcall
adc
xor
adc
in
sub
in
inc
cmpsb
pop
adc
cmp
jb
push
in
and
dec
or
cmp
lods
mov
xchg
aad
mov
inc
add
cs
aam
push
cmp
adc
adc
xchg
lea
mov
adc
mov
cmp
jmp
push
sbb
mov
or
negl
sub
clc
sub
into
sbb
loopne
les
mov
mov
add
fisubrs
pusha
popa
push
ljmp
mov
push
scas
imul
inc
call
push
ret
aad
jo
and
xor
adc
outsl
sub
adc
addl
out
lret
xchg
xor
push
cmpsl
je
inc
fadds
out
lea
nop
push
xor
and
pusha
call
jecxz
insl
mov
and
pop
adc
fabs
jle
add
ficoml
shlb
fiadds
and
test
bnd
xchg
dec
cmpsl
mov
test
jno
test
outsl
inc
call
mov
or
daa
sti
adc
or
adc
pop
sub
xchg
jmp
lods
loopne
das
add
aam
dec
fadd
push
jo
push
and
add
inc
mov
or
mov
leave
xor
cmp
cwtl
mov
dec
pop
mov
jle
test
sbb
imulb
jge
add
push
or
add
sbb
push
outsb
sbb
into
fcoml
mov
je
inc
push
push
xor
or
xchg
lret
fwait
push
pop
adc
pusha
aad
mov
and
adc
add
in
adc
xchg
sar
dec
jo
xor
dec
xlat
and
sbb
add
movsb
loopne
and
mov
mov
inc
rorb
enter
pop
sarl
push
adc
jo
mov
mov
cmp
and
mov
orb
mov
push
cmp
rol
addr16
insl
mov
jb
int3
fisubrs
cmp
cmp
orb
out
add
cmpsl
std
jmp
push
inc
sub
lret
mov
jl
mov
jg
sbb
cwtl
shrb
flds
fcomps
and
push
cs
xchg
fcoml
sbb
pop
std
mov
push
lea
add
sbb
aaa
push
not
jmp
jb
and
push
pop
add
pop
popa
xor
jle
or
push
imul
outsb
sti
xorb
or
iret
pushf
push
ja
jb
lods
inc
daa
cmp
sbb
dec
push
cld
lret
in
cmp
add
add
jno
sub
xor
xor
xor
lcall
xor
pop
lcall
xor
mov
shlb
stc
adc
outsl
bound
iret
repz
leave
repnz
sbb
imul
and
daa
add
lea
daa
adc
jne
testb
lds
adc
jb
adc
cmp
bound
mov
mov
cmp
jl
dec
or
enter
pop
xchg
mov
jae
daa
sub
jae
rorl
push
push
iret
add
rorl
fdivrs
add
xor
add
dec
test
jle
and
sub
inc
das
dec
test
sbb
sub
push
hlt
add
cmp
mov
inc
out
inc
dec
mov
cmpsl
pop
adc
test
xchg
sbb
test
je
cmp
mov
add
push
fmuls
push
js
fs
rcrl
decl
jb
cmp
jb
cmp
ja
add
jnp
xchg
aad
test
mov
add
xchg
out
xlat
add
idivb
shrl
das
pop
pop
push
fidivrl
loop
test
roll
inc
and
xor
jp
jle
fs
shl
sub
and
or
lods
sbb
cmpsl
pusha
data16
xor
pop
lcall
jae
out
xor
or
adc
js
xchg
cmc
push
rcrb
sbb
push
add
sar
push
mov
cld
sub
inc
cmp
in
mov
clc
mov
mov
add
mov
push
clc
mov
jb
or
sbb
int3
and
inc
cmp
pop
outsl
lock
push
setp
inc
mov
mov
mov
jecxz
mov
dec
dec
add
aad
adc
mov
mov
mov
jecxz
movsl
movsl
jno
mov
shrl
movsl
pop
in
pop
add
push
test
and
mov
adcl
dec
aas
add
dec
shlb
mov
pop
aas
mov
cmp
fildll
sbbb
or
mov
add
or
push
cmp
add
cmp
ds
add
popa
fsubl
mov
lahf
stos
adc
push
adc
push
lock
mov
lret
js
lds
pop
lock
xchg
pop
xor
pop
adc
jno
les
pop
and
test
xchg
dec
insl
adc
cli
adc
inc
les
cmp
iret
ret
pushf
or
outsl
notl
fs
push
imulb
and
add
add
ret
ror
inc
dec
mov
or
push
in
sahf
mov
sbb
sbb
stos
pop
xchg
xchg
adc
aad
dec
insl
scas
add
dec
cmp
sbb
adc
cmpl
sbb
pop
xor
inc
inc
xor
mov
mov
push
or
cmp
loope
adc
enter
rcrb
add
add
sbbb
mov
jne
or
inc
or
or
inc
sub
cs
adc
cmc
pusha
ja
dec
sbb
adc
push
and
xchg
in
inc
lods
or
xchg
in
clc
mov
jno
and
das
inc
je
inc
pop
psraw
jmp
rclb
push
aas
add
mov
cmpb
mov
push
xchg
jb
dec
mov
push
push
mov
pop
jo
pop
je
inc
lock
or
and
cwtl
xchg
data16
adc
xor
ret
pop
movsl
loopne
arpl
mov
rorb
ljmp
mov
call
sbb
lret
les
nop
sbb
jae
push
push
mov
pop
dec
not
clc
sub
adc
ret
jmp
push
or
jbe
push
andb
pop
push
inc
pop
and
or
jo
mov
sbb
out
xor
add
lods
dec
pop
jg
shlb
add
ljmp
cmp
mov
add
jle
inc
mov
xchg
dec
adc
dec
and
jno
and
sub
push
adc
dec
or
dec
push
and
minps
push
xchg
fiaddl
inc
lahf
push
add
test
int3
pop
push
dec
or
jmp
or
les
pop
out
add
loopne
cmp
mov
xor
xor
inc
push
dec
pop
pop
fistpl
sahf
inc
push
push
mov
pop
dec
insl
and
cmp
lea
ret
inc
lcall
push
sahf
and
and
mov
xchg
push
jns
mov
pushf
sub
and
push
jp
sahf
jp
or
push
clc
xchg
inc
mov
inc
pop
rcll
mov
out
aam
dec
fsubrs
fiadds
jmp
sbb
mov
addl
xor
fimull
sub
sbb
sbb
inc
add
mov
dec
push
add
sbb
add
or
or
sub
lahf
dec
jne
loope
pop
sub
mov
imul
das
loope
and
add
js
loopne,pn
ss
fmuls
adc
clc
push
add
loop
clc
push
scas
or
call
push
rorb
mov
testl
push
dec
xchg
dec
lea
sub
mov
push
push
jmp
pop
jmp
pusha
adc
inc
popa
add
jno
out
dec
push
pop
sub
fs
or
mov
inc
pop
xchg
mov
xchg
or
sub
push
lods
mov
add
mov
es
sub
adc
popf
pop
inc
pop
adc
add
and
xchg
bound
cmpb
insb
pop
or
mov
dec
inc
sbb
pop
add
mov
lcall
or
mov
sub
adcb
sub
mov
jno
je
push
or
loope
add
mov
test
lea
cmc
test
dec
popa
sub
js
sbb
int3
pop
cmp
jbe
adc
inc
enter
pushf
sub
add
pop
arpl
out
jno
pop
inc
inc
lcall
add
fidivl
call
mov
dec
sbb
mov
pop
mov
push
mov
adc
add
mov
fcmovu
fiadds
add
mov
add
adc
lret
movsb
adc
dec
popa
les
fadds
leave
ss
or
sbb
inc
mov
testl
jmp
in
mov
sbb
movb
sub
and
popa
jae
lahf
sbb
aad
ds
jb
push
xor
jae
or
loopne
mov
jns
add
mov
xor
insb
addr16
push
inc
je
data16
cld
jmp
inc
adc
stos
movsl
add
movsl
cmpsl
and
dec
push
adc
and
js
imul
popa
leave
ret
mov
jmp
cld
scas
arpl
inc
mov
jp
cmp
jge
and
push
dec
xchg
dec
mov
inc
loope
test
int3
adc
push
and
cmc
movb
pop
ljmp
sbb
xor
clc
call
push
adc
subb
imul
leave
je
lds
add
bound
mov
nop
addl
loope
movsb
or
dec
adc
cmp
mov
cmp
cmc
or
sub
mov
les
lea
xor
loop
out
imul
mov
jl
inc
inc
sub
sub
dec
xchg
add
out
mov
sub
sub
xor
lds
cmp
shrl
and
int
jmp
xor
stos
dec
mull
cmpsb
inc
push
inc
push
sbb
cs
mov
movl
inc
test
movsb
hlt
push
daa
movsl
daa
cmp
push
and
adc
push
mov
sbb
aas
ret
ss
js
out
inc
cmp
push
inc
loope
adc
push
movsb
fsubs
test
mov
clc
orl
mov
dec
ljmp
mov
push
in
in
mov
andb
add
push
jne
xor
imul
add
and
or
stc
push
std
pop
adc
mov
mov
mov
push
out
dec
mov
int3
loop
adc
mov
adc
les
mov
je
lds
xor
xchg
inc
xchg
jo
cmovs
push
pop
add
icebp
cmp
xchg
pop
loopne
jecxz
je
adc
aas
insl
cmp
in
dec
lea
nop
int3
stos
cmpsb
int
outsb
add
loope
add
adc
lock
cmp
sti
xchg
stos
push
jne
dec
js
decl
and
or
adc
negl
and
push
push
xor
in
ds
andb
cmp
sub
negb
sbb
push
pop
insb
insb
push
mov
sbb
shlb
push
mov
mov
rolb
push
es
arpl
movsb
inc
sbb
xchg
sti
lahf
mov
mov
fdivl
xchg
mov
fisubrs
inc
jge
and
pop
add
pop
and
and
fildll
mov
and
pop
push
sbb
lock
push
push
sbb
cwtl
dec
daa
jbe
dec
mov
inc
std
imul
push
cmc
jb
sbb
sbb
sub
dec
lcall
add
adc
lds
inc
scas
adc
jp
xchg
pop
lret
push
mov
frstor
add
jmp
rorb
mov
jp
pop
mov
in
cmp
cmp
mov
loopne
push
leave
ret
mov
sahf
or
outsb
stos
jno
lret
add
mov
repnz
std
fldcw
dec
sub
rclb
xchg
rcrl
mov
and
inc
das
enter
xor
sahf
inc
pop
jecxz
pop
aad
mov
sbb
add
mov
cmpsl
and
push
or
sbb
insb
imul
mov
xor
cmp
imul
push
inc
pop
arpl
xor
sub
inc
pop
dec
aam
xchg
jo
jbe
push
xor
lret
push
fimull
or
sub
or
fsubrs
xor
xchg
add
inc
mov
orl
push
jp
add
call
sub
dec
dec
xor
cmp
movsb
dec
push
inc
adc
mov
xor
jns
mov
push
icebp
and
pop
pop
sbb
das
es
xor
dec
pop
ret
sub
pop
cmp
cmp
or
cmp
add
or
dec
lods
pop
sub
push
rcrb
aam
insb
cmp
iret
rclb
ljmp
mov
cs
sub
xchg
inc
add
and
or
test
fsubrl
test
unpcklps
push
push
inc
addr16
jo
movsb
stos
mov
shl
pop
bnd
mov
insb
xchg
add
inc
add
mov
jne
rol
mov
adc
jns
test
or
adc
subb
add
sbb
xchg
call
add
xchg
push
clc
pop
addr16
je
std
lret
and
mov
lock
arpl
mov
push
pop
addr16
aas
cmp
fisubl
pop
ds
mov
xor
enter
dec
addr16
add
and
dec
ss
jmp
gs
add
pusha
call
dec
mov
pusha
inc
ror
repz
push
dec
push
lock
mov
sub
sub
mov
cmp
mov
and
arpl
push
ret
push
push
dec
xchg
mov
sub
dec
aas
xchg
mov
fsubl
push
inc
sub
adc
adc
xor
xchg
ss
cmp
pop
scas
call
sbbb
insl
dec
imul
mov
adc
and
xchg
push
pop
xchg
popa
test
add
inc
sub
sub
mov
jp
icebp
cs
lea
test
gs
mov
jns
sub
mov
mov
pusha
stos
outsb
sub
pop
adc
mov
sbb
xlat
add
cmp
sub
ret
push
shlb
mov
mov
lahf
mov
decl
pop
xor
mov
mov
and
add
sub
aaa
add
mov
jne
cmp
out
sub
xor
addb
cld
or
or
pop
push
cmp
pop
xchg
mov
rcrb
inc
or
rolb
pop
inc
and
mov
or
push
mov
cmp
clc
std
push
rol
xor
call
outsb
adc
movsb
in
lret
dec
bound
iret
hlt
mov
test
pop
jo
mov
arpl
bound
jo
jmp
push
dec
cmp
or
das
pop
and
inc
dec
cwtl
loop
mov
lods
jne
mov
inc
scas
sbb
je
adc
adc
xorl
sbb
and
pop
adc
fsubrs
sti
adc
sbb
push
sub
push
sbb
inc
aas
shlb
pop
adcb
cmp
cmpsb
xor
lahf
popl
fidivrs
mov
lock
aad
hlt
scas
dec
lahf
xchg
jge
fsubs
lods
pop
mov
xor
inc
clc
repz
dec
lret
das
out
xor
sub
mov
push
ds
ficoml
sbb
add
add
dec
sbbb
fwait
dec
insb
pusha
add
inc
jge
sahf
sbb
push
lock
div
rorl
pusha
inc
xor
pop
fbld
push
mov
and
sub
mov
sub
dec
jl
cld
add
test
mov
xchg
pop
or
pop
jmp
inc
add
popf
add
jo
mov
loope
mov
out
fistl
mov
xor
inc
or
mov
das
stos
inc
add
enter
mov
loopne
test
ret
rolb
lds
push
repz
and
cmp
sbb
mov
pop
dec
add
fstpt
je
mov
push
push
testb
mov
or
or
jle
push
lods
pop
cld
add
adc
movsb
test
mov
enter
mov
fiadds
fwait
imul
push
cli
xor
sub
je
pop
xor
jmp
mov
clc
inc
dec
pop
push
push
push
cmpsl
movsl
push
insb
imul
mov
ret
pop
or
xchg
cmp
add
shll
push
ret
xor
ljmp
fdivl
pop
lea
push
movsb
mov
mov
outsb
jmp
dec
lock
pop
push
popf
loop
inc
movsl
mov
jne
sbbb
sub
daa
push
mov
add
pop
shll
mov
sub
shll
xchg
jg
rclb
inc
jb
movsb
add
jmp
dec
dec
push
or
pushf
movsb
push
xchg
imul
push
and
mov
rorb
mov
adc
xor
inc
dec
adc
lcall
jle
and
cs
cmp
jno
ffree
clc
push
pop
or
xor
jbe
pop
mov
sub
aas
frstor
xchg
or
push
adc
inc
push
ds
xchg
xor
xchg
sti
dec
ljmp
add
push
and
xor
push
mov
add
pusha
cwtl
mov
push
leave
shlb
push
nop
push
sub
mov
call
nop
or
mov
and
inc
fisubrs
popf
adc
incl
pushf
arpl
sub
fs
or
add
or
jg
mov
mov
sbb
mov
enter
jge
ret
push
call
mov
push
std
sub
add
sarl
mov
insl
jge
sbb
jmp
cmp
addb
xchg
cmpsl
in
push
xchg
lods
push
mov
stos
pop
sbb
test
jmp
adcl
sbb
adc
push
adc
cwtl
lea
in
pop
fcmovu
push
ficoml
in
lcall
nop
adc
jmp
cmp
outsb
pop
outsl
xor
pop
lcall
push
cmpsl
mov
movsl
mov
push
push
or
enter
in
sub
inc
shlb
adc
pop
add
dec
mov
and
outsb
push
gs
ljmp
jg
shl
dec
push
push
cmp
push
mov
cmp
lods
pushf
lock
push
loop
or
fs
insl
add
mov
pop
movsl
inc
jmp
test
pop
sbb
pop
aad
jo
mov
push
push
movb
push
test
and
rolb
cli
jo
into
mov
pop
andb
pop
sub
push
mov
outsl
pop
adc
lds
test
push
les
in
sub
pop
scas
mov
add
or
xchg
mulb
cmp
cmp
add
cmpsl
sbb
push
inc
cmp
cmp
push
jbe
and
stos
inc
mov
add
sub
inc
adcb
mov
xchg
adc
xor
mov
inc
add
jbe
inc
cmp
mov
mov
jns
inc
add
shrb
jae
jge
mov
fistpl
inc
les
js
adc
out
sub
imul
adc
pop
or
mov
pop
jmp
or
insb
mov
jnp
pop
cmpb
or
push
push
movsl
cmp
addb
dec
sbb
mov
add
dec
cs
pop
add
add
test
push
push
xchg
imul
pop
ds
add
dec
pusha
jo
lret
sub
adc
jl
imul
imul
sub
adc
push
loope
dec
pop
movsb
add
inc
xchg
or
add
stos
xchg
xor
fisubrs
add
ret
loope
sbb
push
inc
pop
or
sbb
loopne
int3
sbb
mov
inc
inc
sbb
and
adc
or
call
push
dec
pop
dec
ror
jmp
xor
dec
out
imul
or
and
inc
or
adc
mull
push
xor
iret
sub
xor
pop
in
sub
pop
cmp
push
js
cmp
rorb
mov
or
dec
and
mov
or
push
sub
jle
out
aad
jmp
mov
push
sub
push
addl
push
xchg
jge
pop
xchg
rclb
mov
push
mov
jo
jmp
enter
outsl
jmp
fsubrp
pop
in
pop
or
fistpll
mov
fs
je
out
mov
adc
fidivrl
inc
je
sar
ret
mov
or
loope
lahf
ds
sbb
imul
cmp
jmp
sbb
push
xor
adc
dec
pop
xchg
imul
sbb
and
mov
mov
or
xchg
in
subb
in
jl
inc
sbb
out
mov
or
add
cmp
mov
pop
stos
fmull
les
dec
or
jl
or
jmp
ja
addr16
mov
fisubrs
jl
shlb
cwtl
repz
fs
xchg
xchg
dec
dec
dec
mov
push
fs
ret
jnp
ret
or
leave
mov
mov
add
push
push
push
mov
addl
hlt
insl
add
dec
add
ja
leave
dec
lahf
adc
pop
scas
or
add
rcll
cmp
js
movsb
sarb
and
push
ficoms
ljmp
jne
out
scas
push
adc
inc
push
or
mov
inc
mov
lahf
mov
and
dec
cs
mov
dec
fists
je
push
hlt
mov
insl
clc
sub
dec
test
xchg
adc
fbld
adc
mov
je
sub
sub
in
mov
xchg
push
push
mov
pop
sub
mov
out
sti
nop
mov
sub
out
lahf
jg
ds
ret
mov
sbb
adc
jmp
pop
bound
shll
lcall
pop
mov
outsb
ficompl
hlt
and
jbe
outsl
test
sub
inc
push
mov
dec
dec
mov
push
movsb
cwtl
adcb
cmp
xchg
jbe
or
lock
push
sbb
call
push
imul
pop
and
and
dec
pop
and
and
mov
jmp
push
aas
kmovb
sbb
mov
andl
push
pusha
pop
mov
sub
xchg
movsb
fcom
rcr
pusha
mov
sbb
mov
xchg
out
mov
nop
xor
in
jge
movsb
xor
rorb
enter
ror
ret
mov
je
sub
inc
bound
fs
mov
add
insl
test
add
or
push
sub
cli
js
inc
cltd
ljmp
and
fiaddl
push
adc
or
in
xor
xor
aaa
add
inc
inc
dec
fstl
pop
je
out
sbb
adc
out
mov
dec
dec
mov
push
cmp
mov
ret
dec
cmpsl
pushf
or
inc
xor
mov
aad
sahf
adc
rorl
enter
nop
push
lcall
mov
xchg
pop
inc
sub
packuswb
fildl
mov
std
push
xor
sbb
insb
bound
out
sub
push
lock
mov
add
mov
in
xor
lods
dec
pop
xor
stc
add
adc
adc
insb
xchg
jo
push
mov
xor
shll
adcl
pop
loopne
lock
pop
xor
pusha
mov
push
cmp
sub
arpl
adc
add
inc
mov
mov
xchg
mov
inc
int
push
enter
cmc
add
jne
sub
imul
je
pusha
and
icebp
push
mov
mov
push
push
mov
sbb
inc
sti
jle
das
and
xchg
scas
fists
inc
sbb
filds
xchg
xor
push
push
xor
ror
xor
adc
inc
pop
xchg
mov
jne
push
adc
aad
dec
xchg
add
loopne
subl
xchg
ror
loopne
pop
in
mov
jmp
or
xor
lock
aam
pop
push
dec
jge
insl
gs
dec
inc
lret
repz
imul
aam
lea
pop
leave
enter
jne
pop
pop
xor
jo
sub
loope
jmp
sub
sbb
cmp
pop
imul
sub
inc
xlat
xor
push
inc
or
daa
push
cmpl
push
loopne
or
inc
push
mov
mov
repnz
je
call
mov
leave
mov
ret
push
xor
dec
and
mov
lahf
mov
push
jle
adc
xlat
pop
lcall
sub
pop
add
subb
pop
js
push
ljmp
sub
pop
int
aam
push
cmovne
aad
shl
push
inc
nop
in
mov
pop
mov
mov
fstpl
adc
push
cmpsl
dec
cmc
inc
stos
enter
sub
paddusb
dec
cmpb
test
rorl
aas
js
cmp
inc
dec
or
dec
inc
mov
push
das
out
bound
or
in
nop
hlt
adc
bound
ret
cli
adc
jb
mov
add
dec
mov
push
xor
test
dec
mov
add
xor
mov
add
sbb
rolb
fildl
jp
xorl
add
push
out
dec
cs
dec
ss
mov
pop
dec
mov
push
add
fisubs
lea
and
mov
in
push
insb
or
dec
cmp
stc
loopne
push
pushf
cmp
adc
jb
xchg
fwait
adc
hlt
pop
add
movsl
addl
inc
push
daa
ret
orb
push
push
arpl
add
clc
mov
xor
inc
loopne
ja
push
cmp
push
sbb
cmpsb
jmp
sub
out
movsl
fsubp
xor
sbb
je
mov
mov
imul
dec
push
push
cmpsl
xor
pop
adc
jo
mov
ss
cmp
inc
mov
addl
add
mov
dec
ret
sets
jo
xchg
and
add
fsubs
push
and
sbb
and
push
mov
lret
add
movsb
adc
xor
xchg
addb
push
loopne
insl
ret
in
xor
mov
test
mov
sub
inc
les
sub
mov
cmc
sub
stos
xor
push
push
js
sbb
pop
stos
orb
movsb
or
shl
enter
jmp
xchg
pop
aaa
loopne
push
js
inc
in
sub
fldl
jbe
outsb
cmpsb
push
add
addr16
popf
stos
popa
jne
scas
test
adcl
and
cmp
jnp
xchg
mov
push
in
push
ljmp
pop
fldenv
push
mov
sbbl
pusha
mov
cmp
popf
xor
or
jae
adc
decb
jmp
jnp
lods
popf
ss
nop
pushf
mov
add
sarl
add
subl
add
aaa
je
cmp
sub
add
jbe
cmp
add
inc
push
sahf
adc
inc
sub
fdiv
bound
push
pop
jo,pt
dec
or
ja
loope
inc
shl
insl
fs
fs
fwait
pusha
add
test
rcr
jecxz
nop
lea
cmp
jg
mov
ja
imul
adc
lea
outsl
push
das
push
cmp
insb
inc
movsb
insb
test
sub
fnstcw
mov
repnz
push
mov
in
dec
je
and
jmp
mov
dec
pop
mov
sbb
pop
push
mov
pop
lret
jo
outsl
cwtl
xchg
movsb
mov
in
inc
sbb
out
xor
cwtl
inc
pop
jecxz
xchg
dec
cmp
pushf
subl
pop
jno
jae
mov
mov
movsl
xchg
push
pop
mov
mov
mov
mov
ret
lcall
and
lret
add
pop
mov
loopne
aam
mov
jo
mov
mov
mov
mov
xchg
addl
xchg
mov
rorb
inc
or
mov
mov
push
push
inc
dec
pop
cmp
mov
nop
inc
inc
pop
and
jnp
in
mov
xchg
mov
cmp
fsts
and
lcall
mov
pop
lret
mov
cmp
mov
dec
xchg
out
pop
xchg
mov
sbb
add
dec
lock
stos
xor
mov
out
cmp
shrb
cmp
mov
pop
imul
shll
movl
xor
jmp
rorb
jnp
andl
lds
mov
mov
sbb
aam
jg
jmp
pop
aas
jbe
movsl
in
std
adc
stc
adc
cmp
aas
mov
int3
movsb
lods
sbb
std
sti
xor
mov
aaa
mov
add
add
fiaddl
xor
add
mov
out
jns
jp
sahf
test
xor
in
inc
fsubrs
mov
sbb
gs
test
mov
mov
or
mov
outsb
push
pop
or
jne
push
or
cli
outsl
dec
mov
or
sub
lea
dec
xchg
mov
mov
insb
ds
pop
pop
enter
icebp
adc
sub
push
mov
mov
mov
xchg
xor
lea
dec
and
lea
out
xor
adcb
mov
scas
ljmp
add
cmp
push
repz
push
adc
mov
aam
nop
adc
add
movw
lcall
adc
sbb
and
pusha
cmp
and
dec
cmp
pop
cmp
jno
mov
pop
mov
movsl
cmp
insl
add
mov
andb
add
mov
xchg
jg,pn
sti
mov
jbe
lods
jns
mov
mov
sbb
push
mov
mov
enter
and
mov
or
out
cli
or
sbb
shufps
mov
mov
dec
mov
and
adc
and
add
sub
or
or
outsl
rclb
aam
inc
fadds
adc
std
or
adc
inc
inc
adc
or
or
mov
push
mov
es
add
aam
inc
push
dec
or
cmpl
add
xchg
lcall
inc
fs
std
bnd
mov
mov
rcrb
dec
xchg
adc
lret
xor
imulb
and
mov
shr
dec
mov
mov
mov
jbe
push
mov
push
xchg
je
ljmp
ljmp
push
xchg
lods
pop
push
push
lea
sub
sbb
jnp
dec
je
adc
iret
dec
or
inc
pop
fs
sbb
jne
dec
dec
es
sbb
nop
push
push
sub
jnp
movb
inc
sbbl
or
inc
push
mov
lret
movsl
jle
pop
mov
mov
shl
mov
out
mov
mov
adcb
or
fldt
pop
shl
lock
jb
cmc
leave
imull
lea
and
daa
fsubr
adc
lret
sahf
test
stos
dec
xchg
jmp
mov
adc
aas
add
sub
push
movsb
dec
or
fbstp
sub
mov
push
cmpsb
sub
cmp
or
mov
adcb
fiadds
insb
pop
ljmp
adc
inc
popl
and
add
xor
xor
cltd
lods
fcmovnu
sbb
adc
fsubl
outsl
outsb
add
cli
pop
cmp
pusha
xor
dec
mov
jmp
ds
jecxz
aas
or
mov
pop
out
lret
shrb
jg
sbb
inc
sbbl
inc
inc
pop
mov
fdivl
add
mov
lock
cmp
lret
sbb
in
push
aam
adc
loop
pusha
sbb
mov
pop
repnz
dec
dec
mov
mov
mov
pusha
adc
mov
mul
in
mov
enter
test
fwait
or
loopne
fmuls
jle
nop
push
jne
or
inc
fdivl
sarl
popa
in
add
icebp
cmp
push
push
test
fs
flds
or
add
out
add
add
xchg
mov
and
mov
stos
int3
sar
in
test
js
pop
rolb
add
cwtl
xor
mov
shlb
jl
jle
out
adc
bound
cmp
adcb
jecxz
adc
loop
test
rolb
stos
cltd
lock
dec
pop
push
xor
jmp
mov
bound
test
mov
inc
mov
stos
add
or
insb
popa
dec
bound
add
pusha
mov
add
or
enter
stc
or
xor
push
jle
jl
inc
lcall
cltd
dec
jle
xchg
iret
shll
xlat
or
decb
lret
and
dec
fidivrs
in
or
fdivs
lret
sub
hlt
mov
cmpl
enter
fistl
nop
inc
roll
xchg
enter
sub
mov
pop
xchg
xchg
lret
clc
inc
and
sub
call
pop
mov
or
or
popl
xchg
out
pop
or
add
jns
dec
sbb
sbb
xor
rolb
nopl
mov
and
rorb
mov
je
xchg
sub
mov
mov
mov
ds
and
in
sbb
dec
cmpsl
cmp
xlat
mov
outsb
xor
push
xorl
sbb
jg
add
jle
and
jmp
cmp
jl
pop
push
out
les
jmp
ja
leave
sub
adc
movsb
lret
loopne
or
cmp
mov
xchg
mov
cmp
aas
pop
push
data16
cmp
jne,pt
fs
shr
mov
dec
subb
shlb
outsb
sbb
dec
ss
lcall
and
loop
pop
rorl
je
or
pop
sar
fwait
adc
add
push
pop
inc
rorl
push
jno
lea
jge
xchg
test
adcb
sbb
xchg
xor
repz
dec
push
push
cmpl
mov
inc
cwtl
xor
push
loopne
out
adc
pop
lea
aaa
xor
jmp
xchg
inc
xor
adc
int
inc
mov
mov
inc
push
sub
cmp
sub
cmp
aas
leave
sahf
add
xor
test
add
mov
iret
mov
or
mov
ljmp
sbb
mov
or
jmp
andb
cmp
xor
xor
dec
repz
pop
mov
pushl
mov
mov
call
dec
sub
mov
and
das
loopne
scas
je
adc
int
jbe
test
xchg
popa
dec
adc
push
adc
add
cmpsb
inc
push
test
test
movsl
mov
pop
add
mov
bound
push
mov
inc
add
inc
sub
and
je
mov
xor
ret
or
ret
inc
pop
jbe
cmp
dec
dec
imul
cmp
xchg
and
inc
cmpsl
inc
mov
sbb
ds
test
jg
mov
jo
mov
or
or
pop
ret
inc
movsl
daa
test
aas
add
dec
push
imul
dec
inc
and
cmpb
adc
in
push
stos
or
mov
lahf
insl
jge
out
shl
inc
xchg
movsl
add
add
sbb
cld
add
jne
pop
mov
aam
sub
les
stos
in
ss
repz
pop
or
inc
in
jp
mov
insl
aas
lea
call
mov
lock
nop
pop
cwtl
or
push
add
mov
mov
adc
dec
dec
fcmovnb
int3
ss
ret
mov
lods
push
sbb
adc
cmp
cmp
add
or
sub
adc
lret
mov
std
mov
test
sar
icebp
mov
nop
pushf
popa
xchg
std
lea
test
mov
loopne
pusha
popa
inc
push
jne
popf
mov
ja
lcall
test
rcrl
or
mov
lods
mov
or
jl
jge
push
cs
or
mov
daa
and
and
lea
fists
mov
int
loopne
rcrb
adc
sub
scas
das
sub
rorb
jns
ret
insl
leave
sub
xor
mov
push
push
out
dec
mov
mov
mov
pop
inc
mov
push
clc
dec
bound
js
subb
add
xchg
movsl
iret
adc
jb
add
insb
jmp
add
push
jne
cli
adc
and
push
jmp
or
sub
addr16
adc
sti
mov
push
or
fs
mov
dec
imul
jl
sub
inc
xor
push
push
push
in
lcall
add
cmp
pop
test
mov
in
inc
sub
xchg
loope
imul
shll
jne
pushf
rclb
pusha
lret
or
jns
inc
dec
mov
stc
xor
cltd
and
push
mov
inc
and
cmc
fisubl
push
mov
cli
push
lock
push
icebp
adc
or
jmp
xchg
jbe
pop
jmp
sub
inc
jge
and
call
je
cltd
or
mov
mov
inc
cmp
jne
cltd
mov
pop
and
in
sub
pop
or
jo
leave
dec
aam
push
push
shl
jmp
lea
aas
mov
add
cld
fadds
push
test
mov
add
lea
gs
push
pop
lret
dec
cmp
push
popa
mov
sub
dec
inc
jl
mov
dec
insb
loop
dec
mov
jnp
scas
hlt
jmp
push
inc
cld
push
push
dec
xchg
push
cmpl
iret
cmp
xchg
nop
and
push
and
adc
mov
jge
shlb
mov
push
sub
jo
cmpsl
and
shll
out
add
ss
sub
jl
icebp
add
fidivrl
jle
push
add
aam
jge
inc
push
xchg
xchg
loopne
in
add
aam
decb
repnz
add
testb
adc
push
pop
hlt
ss
nop
and
cmp
or
or
jle
push
mov
cmp
test
imulb
add
nop
push
mov
jg
push
imul
xor
cmp
pop
jge
push
dec
mov
and
mov
jle
sub
je
add
mov
mov
jo
add
and
or
xchg
xorl
mov
or
lret
pushw
jnp
cmpsl
mov
mov
data16
cli
add
decb
in
adc
dec
push
adc
shl
sbb
inc
ds
push
inc
and
sub
add
and
dec
dec
push
les
push
sbb
je
aaa
test
shlb
ljmp
and
ret
cmp
je
inc
jmp
mov
add
mov
push
pop
xor
pop
call
push
mov
or
sub
js
pop
data16
and
jp
bound
xor
adc
add
add
fildl
push
or
push
or
shrb
sub
in
push
cmp
adc
jno
add
push
or
jbe
pop
rcrl
add
or
mov
xchg
lds
or
aas
inc
or
sub
cmpsb
dec
add
push
mov
js
leave
and
pop
inc
and
jmp
push
pop
call
cmp
inc
es
xor
mov
loop
add
or
jbe
or
bnd
enter
add
jle
dec
jne
fists
ret
xchg
adc
nop
push
push
mov
push
mov
lods
frndint
mov
pop
lahf
inc
mov
hlt
mov
shl
adc
int
lock
add
imul
adc
adc
movsb
xchg
dec
adc
movsb
dec
testl
scas
and
push
push
sbb
push
nop
push
xor
lea
shlb
loop
xchg
std
aaa
push
adc
es
or
movsl
sub
xorl
add
insb
sbb
adc
inc
pop
sbb
inc
cmp
scas
pop
add
movsb
lds
or
and
and
dec
int3
xchg
mov
mov
dec
repz
pop
sbb
adc
shlb
pop
push
aas
jnp
pop
ja
cmp
cltd
inc
test
sbb
clc
xor
lock
lea
fmull
stc
adc
ret
sbb
fimuls
inc
rorl
push
xorl
clc
sbbl
adc
cmpb
test
jge
push
and
inc
mov
dec
shrb
outsb
dec
cmpl
add
out
mov
aad
loopne
sbb
mov
or
mov
in
imul
pop
mov
or
xor
imulb
cwtl
inc
insl
pop
xor
cmp
mov
push
add
inc
and
and
pop
inc
push
push
xor
cmp
and
jbe
xor
lods
shrb
pop
inc
push
sub
pop
sbb
dec
nop
sti
cmpsl
mov
mov
push
mov
push
ss
sub
pop
nop
icebp
push
nop
push
faddl
sbb
xchg
test
dec
rclb
inc
fsubl
outsb
ljmp
push
add
fmul
dec
rolb
add
jle
js
add
fisubs
dec
lea
mov
jne
or
cmp
shll
call
outsb
movsl
inc
sub
mov
cmp
push
cmp
and
jecxz
ljmp
dec
stos
fistl
or
popa
and
movsb
loopne
or
adc
sub
mov
cmp
jne
add
sbb
add
inc
call
sbb
dec
mov
jbe
sub
test
sbb
je
add
lods
cmp
cmp
faddp
inc
dec
mov
sbb
sub
xorl
jne
xchg
call
pop
or
movsb
push
mov
or
mov
movsl
adc
xchg
push
orl
push
add
adc
fimuls
pushl
add
sbb
int
or
sub
inc
xlat
sbb
push
push
lods
lea
mov
xor
xor
xor
cmc
test
or
mov
incb
inc
add
stc
iret
push
fistpl
outsl
cmpsl
and
or
mov
pop
into
rcrb
jb
mov
cmp
sbbb
sub
inc
imul
adc
adc
ljmp
aam
es
and
jne
and
ret
adc
divl
lods
mov
lret
and
and
or
icebp
ljmp
js
push
fs
call
call
enter
shll
lret
or
xchg
or
call
clc
adc
loop
inc
out
rorl
xlat
push
decl
xchg
aad
stos
jmp
jo
and
cld
fistpl
sarl
shl
or
add
and
not
and
or
sub
fldl
into
mov
push
shr
sti
sbb
or
sti
add
mov
push
lcall
leave
cs
lods
jmp
mov
decb
jl
sbb
andl
sti
nop
and
xchg
nop
push
stc
shrl
push
xor
lds
adc
pusha
lret
dec
or
push
test
xor
pop
cwtl
push
mov
inc
xor
mov
and
mov
add
cmp
mov
xorl
xchg
aas
push
sarb
loopne
rol
mov
cmp
mov
sbb
xlat
add
faddl
cmp
or
inc
mov
lcall
ret
jp
out
push
test
mov
mov
or
adc
add
out
pushf
or
cmp
xor
lret
mov
pop
cmp
shr
iret
cmp
push
lahf
and
nop
imul
lret
bound
dec
fsts
inc
cmp
xchg
jno
std
adc
push
sub
or
pusha
and
repnz
add
cmp
cmpsb
adc
xchg
cmpsb
movups
clc
enter
pop
outsl
cmp
lea
mov
push
push
in
or
ljmp
fstpl
pusha
clc
sbb
push
idivb
loopne
add
fs
and
jmp
xchg
pop
test
inc
mov
rclb
cmp
popa
dec
add
je
and
repnz
push
pop
pop
and
cwtl
cmpsb
adc
jo
pop
or
stc
xchg
jns
nop
jmp
push
stos
mov
out
mov
test
mov
add
das
mov
and
ret
lock
or
push
ret
paddsw
mov
insl
add
cld
push
adc
add
loope
mov
or
das
mov
pop
movups
dec
popl
adc
aad
cld
cmpsl
inc
aad
sub
sahf
or
cmpsl
mov
xchg
call
ficoml
dec
pop
iret
aaa
fucomp
call
loope
out
dec
xor
orl
jnp
cli
imul
ret
mov
loopne
bnd
mov
push
lret
movsl
push
xchg
aad
jp
adc
int
jmp
in
pushf
sbb
adc
inc
mov
push
dec
and
int
ljmp
das
fldenv
jecxz
pusha
imul
mov
int
dec
mov
insb
shrl
lea
inc
stc
clc
mov
or
stc
xchg
shl
pop
sti
pop
cmp
dec
imul
addr16
adc
and
cmc
into
fnsave
dec
sub
jnp
adc
xor
xor
in
cmpsb
lret
inc
cmp
cmp
or
aam
fistpll
lock
xor
xor
mov
xor
mov
inc
adc
mov
pop
inc
shll
shlb
shl
cmp
pop
and
insl
sbb
push
push
adc
or
cmp
xlat
fs
and
adc
in
mov
sbb
mov
xchg
xor
fbstp
jl
dec
push
stc
inc
ljmp
lret
mov
iret
fimuls
je
nop
jno
lcall
jmp
int
lret
pop
punpcklbw
jbe
sub
xor
mul
fbld
xor
cld
dec
and
mov
outsb
jo
mov
repz
push
cs
xor
cli
xor
jle
sub
ret
and
sbb
ret
data16
sarb
daa
mov
in
jmp
push
cmp
mov
out
aam
fbstp
shll
call
add
mov
out
in
or
inc
out
sbb
jg
rcl
fldl2e
out
loopne
sbb
mov
lcall
pop
in
test
adc
iret
jl
pop
xchg
loopne
into
sub
pop
jge
jg
ret
push
inc
push
mov
and
push
lods
push
punpckhwd
enter
loopne
xor
sub
adc
sbb
xchg
or
stc
xchg
leave
loopne
iret
cmp
ljmp
inc
test
push
push
or
adc
or
xor
add
jb
fs
xor
fsubs
mov
cli
fwait
dec
mov
pop
pop
gs
add
lcall
and
lea
xchg
int3
or
push
pop
jb
cmp
jecxz
adc
cwtl
fimull
inc
push
jecxz
cmp
hlt
out
ljmp
adc
test
cltd
mov
jmp
subl
test
sbb
jb
inc
pop
in
cltd
pop
ss
jle
outsl
jmp
and
pop
fnstenv
xor
sub
inc
jmp
mov
repz
dec
adc
add
add
adcb
into
cld
mov
and
stc
shll
jle
mull
cs
jmp
jle
inc
cmp
mov
dec
sbb
sub
cltd
pop
pop
push
ss
sub
add
in
inc
ror
movsl
xor
ss
roll
loope
je
inc
pop
out
adc
dec
or
icebp
xor
fisubl
les
mov
popa
and
push
add
aam
mov
sbb
xchg
mov
cmp
add
inc
stos
cmp
adc
or
push
xor
loope
test
repnz
jo
or
ljmp
add
aaa
add
iret
shrl
shl
adc
and
add
pop
add
add
outsl
xorb
movl
inc
fistpll
dec
add
movl
or
mov
fdivrl
aaa
pop
jbe
xor
mov
sub
mov
sub
mov
outsl
mov
push
decl
adc
jmp
mov
sbb
dec
nop
clc
inc
mov
pop
pop
push
rclb
sbbb
add
xor
lea
lahf
xchg
mov
pop
add
cmc
or
add
add
jle
out
push
jnp
and
jl
adc
adc
pop
aam
xor
push
js
add
pop
clc
in
sbb
jle
jmp
cmp
ja
adc
push
xor
rol
pop
sbb
or
sbb
or
ljmp
rep
jl
xchg
stos
or
pop
and
push
inc
loop
lea
nop
loopne
int
leave
xor
into
cmp
push
mov
incl
jnp
sarl
sub
mov
inc
cli
cmp
mov
push
mov
ja
dec
add
xor
mov
ret
jne
clc
add
cmc
jae
add
mov
rcll
or
xor
xor
inc
pusha
sbb
xor
mov
insb
popa
mov
mov
test
cmp
lea
insb
ret
push
jge
cmc
sub
xor
lahf
and
push
faddp
outsb
movl
std
pop
rcrl
lea
or
outsb
or
dec
cmpsl
push
fwait
cmp
cmp
insb
xor
pop
imull
das
mov
add
sbb
xor
stos
sub
imul
cmc
xor
add
sbb
jecxz
mov
popa
imul
mov
sarl
ret
scas
and
sahf
shr
push
mov
mov
cmp
jae
xor
test
pusha
push
sbb
cld
ss
add
push
mov
mov
ficoml
rorl
pusha
pop
xor
pushf
movsb
sub
dec
inc
mov
xchg
push
xchg
pop
ret
and
frstor
or
shrl
mov
mov
mov
xor
pop
jle
cli
outsl
loop
jnp
aam
adc
mov
sar
inc
inc
mov
decb
fisubrl
add
int
pop
xor
ficomps
and
cmp
je
aam
add
or
xchg
lahf
sub
mov
rclb
mov
jae
mov
loop
lods
pop
addb
cmpsb
and
aas
push
dec
cmp
daa
xor
pusha
mov
daa
outsb
data16
insl
cltd
adc
jl
push
mov
in
in
ss
sbb
das
out
shll
out
xor
xchg
cmpb
jge
imul
rcrl
xor
push
cwtl
sub
mov
dec
lcall
lock
xor
call
sub
test
push
or
loopne
jnp
jno
cmp
out
inc
jecxz
rclb
out
ja
jb
rcll
xchg
in
pop
add
jne
jbe
stos
test
push
shrb
je
mov
add
add
push
insb
or
mov
loopne
cmpsl
loopne
add
xor
pop
jnp
add
inc
xchg
in
add
sub
pop
xchg
loopne
sbb
mov
sarl
add
aaa
rclb
push
sub
cmp
adc
pop
jae
adc
test
adc
xor
ss
sbb
test
adc
xor
or
lgdtl
cld
push
and
inc
adc
dec
data16
and
cmp
mov
push
roll
decl
data16
fsts
repz
addr16
insb
lock
icebp
mov
xchg
mov
mov
xor
int3
mov
test
mov
ss
enter
push
push
mov
mov
jp
sub
xor
push
sub
sbb
imul
insl
mov
aad
mov
pop
push
hlt
loopne
sbb
in
inc
mov
ret
int3
cwtl
test
int3
push
rolb
jmp
lret
call
mov
sarl
std
adc
dec
addl
add
outsb
dec
mulb
mov
jb
rcll
jae
xchg
imul
adc
dec
dec
adc
add
fdivrl
adc
inc
shl
lods
cmp
inc
push
aam
es
enter
lea
jle
clc
pusha
subl
fcomps
or
mov
sub
test
jne
js
dec
cld
push
cmp
mov
mov
aam
add
popl
popa
push
push
xor
pop
test
mov
stc
and
in
push
pop
sti
gs
jmp
rcrb
lods
jle
repnz
lea
mov
into
sub
shlb
in
incl
inc
mov
mov
mov
or
adc
mov
cltd
add
sub
inc
add
dec
jne
push
mov
xrelease
sbb
sub
inc
ret
je
pop
ret
sbb
aad
roll
jmp
es
shlb
adc
popa
js
loope
pusha
pop
popa
je
adc
dec
adc
jle
test
test
push
inc
out
fcomp
lret
push
add
ucomiss
sbb
mov
add
pop
sbb
pop
in
repnz
mov
dec
cmp
xor
fistpl
dec
ljmp
das
push
push
jb
aam
mov
adc
in
in
inc
add
push
mov
push
xchg
push
jbe
lret
das
pop
in
cmp
jb
mov
pop
js
mov
jbe
daa
or
das
or
and
sub
or
and
pop
jb
movsb
push
xchg
jb
loopne
sbb
aas
adc
cs
adc
cs
xchg
pop
adc
das
adc
fs
or
adc
jb
or
pop
test
push
add
rclb
pop
push
and
add
jg
add
rcrl
roll
push
sbb
mov
cmp
add
movsb
mov
int
push
push
and
ds
xchg
push
jnp
jnp
fisubrs
and
jb
push
les
and
scas
push
jb
jnp
mov
jb
in
lock
shll
idivl
ljmp
leave
jmp
pop
repnz
pop
inc
dec
xchg
mov
push
jb
in
ss
rorb
xchg
negl
push
adc
popl
movb
add
sub
add
pusha
repnz
rorb
xor
push
or
jl
push
or
fisttps
aam
inc
sub
mov
cmp
add
test
cmp
cmp
push
jp
sbb
dec
enter
pop
xchg
adc
and
mov
add
xor
iret
sbb
dec
xchg
push
cmp
dec
pop
push
push
sub
outsb
xchg
sahf
divb
pop
jp
or
jmp
sti
push
test
inc
inc
push
cld
push
out
in
mov
mov
insl
addr16
push
mov
sbb
or
inc
add
add
imul
dec
lea
push
add
outsl
xchg
jge
je
jmp
adc
icebp
aam
dec
adc
dec
mov
sub
dec
sub
jo
mov
dec
inc
mov
mov
call
ret
lds
or
mov
sub
xchg
jle
fmull
add
cs
mov
push
inc
jne
jp
push
aam
dec
adc
mov
jno
cmp
fimull
rolb
aam
andl
inc
ret
mov
pop
movsl
mov
mov
adc
sub
sbb
sbb
pop
sbb
and
cmp
mov
push
lea
stos
lods
or
mov
sbb
add
popf
dec
leave
cmp
mov
mov
inc
add
dec
inc
dec
adc
push
pusha
mov
adc
inc
negb
push
push
xchg
fcmovnbe
lahf
pop
dec
adc
cmp
lods
pusha
fistpl
inc
rolb
pop
adc
xor
mov
icebp
mov
daa
push
xor
jo
sub
mov
and
add
xor
repnz
add
les
pop
or
mov
push
aas
jmp
add
xchg
add
lods
add
dec
lds
jle
repnz
and
aaa
sub
mov
add
sbb
xchg
mov
push
add
inc
xlat
nop
xor
mov
aaa
movsl
jp
adc
jnp
pop
or
adc
mov
mov
jp
outsl
or
aas
sbb
jl
stos
test
aas
sbb
pusha
imul
sbb
test
inc
jmp
and
mov
mov
inc
clc
jl
mov
push
subl
push
iret
inc
fisttpll
lds
fisubrl
or
pop
insl
xchg
and
rol
dec
sarb
jb
ret
arpl
int3
fninit
adc
add
pop
add
or
fs
push
xor
inc
sub
mov
cmpb
sub
ret
mov
call
pop
xchg
imul
inc
enter
pop
and
sbbl
rolb
push
call
aam
sbb
adcb
sarl
sub
push
push
and
mov
add
test
xchg
cmp
adc
mov
sahf
jne
loopne
popf
mov
cmp
fadds
push
test
call
clc
js
in
fildll
mov
scas
fdivs
mov
xor
sub
jno
mov
adc
clc
mov
xor
addr16
ret
pushf
or
xor
rorb
and
push
jo
ljmp
dec
mov
cmpsb
push
cli
pop
popa
adc
shrl
push
jbe
cmp
inc
xchg
add
mov
dec
inc
rol
inc
jge
push
jno
mov
and
test
mov
loop
xchg
and
xor
mov
ret
xchg
orl
repz
daa
dec
sub
and
push
inc
popa
loop
adcl
mov
mov
sbb
ret
push
leave
arpl
lods
and
sbb
push
ds
sub
lock
sbb
inc
add
and
push
icebp
aas
popa
pusha
add
mov
add
loopne
adc
push
rol
outsl
pop
aam
cmp
xor
mov
bound
jge
and
ret
add
jo
push
and
add
ss
or
inc
cmp
je
dec
xor
and
xchg
std
xchg
jge
movb
inc
push
push
adc
sub
mov
pop
push
sub
jle
popf
xchg
pop
xchg
mov
adcl
fwait
js
subl
mov
inc
and
lods
jns
xor
jmp
sbb
popf
mov
imul
inc
and
pop
into
push
mov
add
enter
or
pop
push
int3
pop
mov
push
jecxz
stc
jbe
lcall
inc
pusha
add
sbb
repz
bound
mov
jbe
pop
push
and
ja
repnz
push
out
add
jp
adc
aaa
rol
xor
xlat
jo
fdivrs
mov
push
ds
mov
mov
mov
xchg
sbb
push
push
outsb
enter
jle
inc
inc
add
call
sub
jnp
xchg
mov
sbb
inc
or
in
inc
add
fmul
shll
add
mov
lods
fisttps
mov
adc
push
pop
sub
add
shlb
adc
movsb
fwait
push
adcb
inc
sub
xor
sbb
pop
push
sbb
in
into
subb
push
lret
push
xor
test
jo
pop
arpl
jae
sti
inc
mov
adc
aas
or
dec
rorl
int3
and
clc
sbb
add
add
insb
and
push
lea
xchg
and
ret
pop
popa
push
mov
cli
add
dec
mov
std
leave
ret
jnp
incl
aaa
xchg
cmp
test
and
mov
cwtl
nop
pop
popa
sub
mov
add
lahf
mov
add
jae
js
nop
dec
inc
fiaddl
xchg
int3
push
jo
ja
orw
addr16
out
push
sub
rolb
sbb
nop
mov
neg
jnp
das
data16
js
mov
xchg
mov
mov
fldl
ljmp
push
adc
cmp
das
aaa
jns
insl
push
pop
jge
jo
pop
jecxz
mov
aas
inc
add
insb
fwait
mov
adc
xlat
push
push
dec
adc
rcrl
outsb
sbb
xchg
jbe
sub
mov
adc
fdivl
repnz
sbb
jo
and
es
scas
sbb
xor
dec
push
and
add
cmp
je
and
push
xor
mov
jo
shll
cmp
push
xor
fsubl
sbb
xchg
fsubrp
dec
adc
jo
and
in
mov
inc
and
lcall
dec
test
inc
stos
dec
dec
mov
pop
inc
out
in
jmp
add
push
xchg
cmp
push
mov
cld
and
or
in
mov
xor
sub
outsb
and
add
inc
lret
or
xor
push
mov
std
cmp
xchg
sub
mov
jbe
pop
mov
ss
sbb
cmp
adc
adc
push
adc
hlt
shlb
or
or
ret
cmp
inc
dec
data16
bound
ret
test
dec
mov
or
sahf
adc
pop
dec
pop
pop
pop
cmpsb
movb
pop
aam
sbbl
xor
push
dec
sub
lcall
pop
mov
and
xchg
mov
xor
add
inc
xor
pop
inc
leave
and
or
fimuls
popf
inc
xor
or
and
xchg
xor
je
pop
dec
loopne
js
and
pop
dec
push
sbb
dec
inc
push
cmp
add
adc
jns
pusha
and
lea
pop
and
add
outsb
add
call
or
add
push
mov
pusha
sbb
mov
dec
fadds
ds
ficomps
mov
imull
sbb
inc
lods
pop
pop
add
aaa
sti
pop
lahf
pop
jb
adc
or
push
jg
mov
movl
sbb
insb
or
dec
aam
pop
rcrb
xor
pop
mov
nop
or
lcall
pop
leave
push
popa
add
movsb
fs
mov
outsl
icebp
xchg
dec
mov
pop
je
cmp
pop
in
fisubs
mov
cmp
xor
shrl
loopne
dec
push
add
mov
lahf
mov
mov
adc
and
add
jno
adc
or
in
int3
es
push
push
rorb
fwait
dec
mov
dec
xor
cmpsl
dec
jl
mov
cmc
in
roll
iret
out
push
cmovl
aas
mov
std
scas
test
popf
sub
ss
movsb
cmp
shll
les
fbld
scas
call
lds
xchg
rcr
mov
inc
push
cmp
aad
out
enter
inc
shrl
fistpll
xchg
lea
je
sub
dec
add
rcrb
iret
pushf
loope
test
insb
loope
or
dec
add
mov
dec
xor
cmp
dec
lcall
xor
add
fisttps
xor
inc
dec
lea
inc
insl
sti
pop
rorl
pop
pop
jo
jle
push
sbb
push
push
dec
rclb
adc
nop
dec
dec
inc
add
pop
push
je
pop
test
mov
mov
pop
insb
rorb
push
xchg
mov
pusha
pop
cmc
aaa
push
aam
addb
testb
insb
mov
lock
lret
or
cmpsb
movsb
add
sub
repnz
decl
shlb
movsb
and
lcall
inc
jno
pop
inc
add
fs
shll
loopne
push
add
jge
adc
test
add
mov
push
insl
mov
add
push
sbb
cwtl
ja
lret
xlat
das
push
sahf
adc
or
leave
and
cmc
mov
add
add
into
jns
or
das
sbb
movsb
jmp
xor
cmp
fists
add
cmp
mov
mov
or
xor
sti
add
push
pop
push
xchg
jp
push
mov
nop
clc
loope
pop
stos
pusha
pop
sub
in
push
pop
inc
fsubrp
fsub
add
cmp
and
dec
cltd
or
or
xchg
fdivs
test
inc
cwtl
add
insl
sub
cmp
insl
dec
add
dec
mov
movsl
or
pop
filds
inc
sub
xchg
sbb
mov
push
mov
sub
adc
inc
push
or
bnd
sub
dec
jmp
inc
popa
loope
and
movb
aaa
repz
inc
cmp
cltd
movsb
pop
repz
je
test
bound
dec
pop
jns
sub
push
lret
sbb
sahf
xchg
out
or
fs
fdivrs
add
and
add
jns
inc
flds
fsub
xchg
jo
xchg
out
into
mov
inc
cmovns
mov
add
adcb
shrl
inc
cmp
push
xor
push
gs
sbb
dec
nop
arpl
inc
and
rorb
inc
nop
adc
cmpsb
sahf
add
xor
sub
fbld
inc
sbb
dec
fstpl
push
sub
or
jae
jg
add
add
js
sti
ret
inc
sub
mov
sub
cmp
shl
mov
add
pushf
neg
push
push
mov
sbb
cwtl
fs
push
pop
ss
pop
je
movsb
add
sti
aam
ret
push
je
or
or
xor
shll
xor
enter
lods
mov
lods
xor
sub
mov
dec
jb
or
push
lods
lods
xor
cmp
insb
enter
add
movsb
xor
or
clc
cmp
add
or
push
loopne
pusha
and
sub
push
add
xor
sub
and
ds
xor
jecxz
les
fcomps
rcrb
xor
mov
sbb
movsb
stos
test
pop
push
imul
jns
dec
sbb
js
pusha
fbld
loope
add
call
or
mov
lcall
xchg
jo
add
dec
dec
test
sarb
imul
jo
outsb
pusha
inc
sarl
dec
stc
ret
sub
es
pop
jno
push
addl
push
outsb
or
cmp
fs
sub
or
rclb
push
or
pop
xor
sarl
fists
pop
insl
push
dec
aaa
sub
hlt
outsb
and
sbb
fsubrp
loop
mov
inc
mov
stos
inc
rorb
mov
cmp
xor
addb
or
notl
xchg
mov
dec
test
or
jbe
or
loope
out
push
loopne
pop
adc
lea
push
aas
fs
fadds
leave
mull
sbb
pusha
or
mov
xchg
mov
daa
ljmp
insl
dec
inc
inc
lea
xlat
out
push
adc
int3
adc
push
xlat
add
or
inc
imulw
les
loopne
push
cmp
in
sbb
loopne
xor
test
in
add
mov
aam
dec
and
mov
in
pop
fdivrl
push
xchg
popa
push
push
ret
pop
inc
inc
and
decl
in
or
ds
sub
sub
je
cmp
adc
xor
loope
mov
pop
lds
andnps
addl
jle
mov
icebp
rcll
xchg
mov
fstl
test
lds
add
es
mov
push
aad
negb
dec
add
or
sarb
mov
ret
loopne
push
mov
insl
or
push
push
pop
jg
adcl
push
arpl
and
leave
push
ret
inc
mov
pusha
push
adc
out
xchg
mov
add
aam
cmp
js
je
mov
push
js
xorl
sbbb
pop
les
pop
add
lret
aas
mov
and
gs
loope
push
push
adc
and
and
adc
movsl
subl
mov
jmp
out
mov
nop
les
fildl
mov
lret
fs
aas
push
cmp
adc
lea
jno
sbb
cmp
popf
jo
mov
pop
aam
insl
fcmovnu
push
aas
xor
in
sbb
stos
dec
mov
xchg
mov
repz
rorb
push
push
or
ret
dec
dec
and
cmp
les
cltd
shll
dec
add
pop
pop
lcall
inc
mov
rclb
add
push
inc
xor
movsl
or
mov
xor
or
push
dec
adc
xchg
or
add
add
pop
imul
mov
lds
push
popa
jmp
cmpsl
mov
add
jl
loop
inc
stos
mov
adc
or
cmp
lcall
lahf
inc
shlb
jg
push
mov
jae
gs
call
sub
add
inc
jmp
jo
inc
inc
and
dec
cmp
sub
pop
clc
sbb
test
icebp
mov
pusha
mov
je
fs
adc
mov
mov
inc
inc
cmp
jmp
cmp
cmp
adc
add
rorb
lcall
add
shlb
add
in
inc
jp
mov
das
pop
cmp
movsb
mov
add
enter
es
dec
imul
xchg
adc
cmpsl
aad
add
pop
adc
dec
jecxz
xor
addb
lret
sbb
hlt
lds
stos
aad
add
incl
cli
sets
inc
xchg
std
inc
sbb
icebp
pop
lret
outsl
test
cmc
rcll
mov
cmp
mov
xchg
xchg
int
or
jne
imul
jns
cmp
xor
and
int3
dec
dec
lahf
pop
or
adc
je
and
sbb
inc
lock
inc
mov
sbb
push
mov
cmpsl
mov
or
popf
fimuls
xor
add
mov
loop
adc
jp
imul
mov
adcb
shlb
jb
and
or
outsb
sbb
push
iret
inc
out
mov
or
popf
pop
adc
into
push
sbb
dec
jne
mov
adc
rclb
dec
mov
movsb
sub
push
or
adc
test
sarb
sbb
mov
int
sub
pop
ljmp
pop
es
adc
mov
xchg
adc
dec
cmpsb
nop
lea
jecxz
outsb
dec
jl
mov
pop
xor
movsl
popa
rcrb
dec
jle
dec
movb
mov
and
or
adc
mov
xor
jg
adc
lock
sub
mov
movsl
sub
push
je
and
jno
imul
popa
or
cmpsl
jo
jmp
pop
xorl
add
test
pop
out
pop
shrl
inc
test
popf
loope
xchg
ss
cmp
popf
push
push
pusha
pop
xor
popa
movsb
push
sbb
push
sbb
out
ror
add
adc
inc
dec
fildll
js
or
mov
sub
jns
arpl
xchg
pop
adc
xor
jo
add
mov
std
jmp
push
fs
lods
pop
ja
out
push
adc
hlt
dec
lock
jg
mov
aam
por
inc
lea
sbb
mov
lods
shlb
sbb
pop
xorb
nop
test
lods
ret
test
pop
jb
add
and
sub
movsl
and
xor
mov
scas
or
pop
push
add
out
sbb
mov
lret
mov
and
inc
nop
dec
sub
lret
aad
rcr
aam
sub
jle
add
add
xchg
popf
dec
sub
aas
sub
xor
inc
xchg
jmp
js
dec
inc
or
stos
xor
pop
movsb
jle
mov
push
cmc
dec
decl
cmp
lea
adc
leave
mov
push
sub
imul
or
sahf
aad
mov
push
sbb
push
test
sbb
shll
jae
inc
pop
pop
mov
dec
sbb
loopne
scas
mov
and
rorb
xchg
and
or
adc
lock
out
daa
mov
cmp
cmp
inc
cmc
add
mov
or
adc
inc
mov
movsl
or
fisubrs
pop
or
xchg
mov
shrb
mov
add
js
movsl
std
das
inc
push
mov
inc
add
xchg
jmp
sub
mov
inc
fadds
iret
mov
mov
pop
mov
dec
dec
jg
or
popf
out
inc
push
lea
push
lret
push
push
and
leave
push
popa
and
int
les
fcomps
xchg
sbb
jecxz
or
test
insb
add
fnstsw
adc
push
xchg
sub
mov
or
popa
lods
jo
or
lcall
push
movsl
sbb
lea
pop
mov
push
lahf
mov
lret
enter
push
lods
in
shrb
mov
push
je
or
test
ficoms
int
jbe
arpl
mov
sub
push
sbb
subb
inc
pop
inc
dec
and
cli
jne
sbbl
enter
inc
nop
push
mov
or
rcll
xchg
loope
push
adc
hlt
lea
les
je
loope
jae
cmc
rcrb
push
jae
loopne
imul
imul
mov
xlat
mov
push
push
je
xor
push
daa
orl
mov
adc
mov
sbb
xor
jno
jnp
add
scas
popa
ljmp
add
addr16
lret
adc
call
sub
cmp
imul
es
sahf
inc
add
xchg
orl
cmpl
cmpsb
ljmp
sbb
test
stos
ja
frstor
or
cmpsl
mov
and
ret
sbb
data16
and
xor
adc
jnp
mov
push
ret
ljmp
shlb
loope,pn
sahf
es
test
lods
insb
in
jg
mov
mov
mov
jle
adc
int
popa
jae
mov
ret
outsl
pop
movsb
ds
and
xchg
push
pushf
add
mov
orl
popf
loope
mov
pop
add
mov
cmp
add
rolb
insb
ret
xor
inc
cmp
push
ret
xor
in
push
sbb
push
sub
sbb
push
or
leave
sbb
mov
test
xchg
add
sub
dec
cmc
fldt
push
and
mov
xor
ffree
pop
inc
cld
adc
les
or
bound
dec
push
ds
pop
ret
inc
dec
call
or
cmp
adc
jbe
push
jge
jle
pop
dec
dec
push
adc
push
cltd
pop
into
adc
sub
mov
or
add
inc
and
rorl
popaw
loope
add
sti
sbb
push
jle
mov
daa
stos
adc
push
or
in
fisubrl
pop
cmp
movsb
daa
inc
dec
inc
insb
add
jl
out
scas
cwtl
sub
xchg
and
pop
fcmovb
stc
adc
clc
les
pop
sbb
push
xchg
fnstenv
imul
xchg
sub
movntq
dec
int3
xchg
andl
jb
pop
jge
xchg
mov
sbb
pop
adcl
into
jecxz
xchg
dec
aas
jmp
push
stos
sub
test
int
and
cmp
sarb
pusha
adc
and
pusha
xchg
push
add
add
rcl
push
or
sbb
ds
outsl
repnz
sub
inc
daa
or
push
add
sub
mov
outsl
or
push
sbb
es
xor
xchg
fisttpl
dec
and
push
sub
mov
push
nopl
fstp
sbbl
sbbb
cmc
pop
sbb
cmp
push
nop
adc
int
xchg
cmp
push
dec
mov
push
addr16
sbb
adc
xor
sbb
test
js
test
pop
aad
ja
in
push
fmull
adc
cmp
test
pop
jo
xor
inc
stos
cli
sbb
mov
lock
sbb
clc
daa
mov
cmp
jne
cmp
push
stos
push
adc
clc
out
cmpsb
mov
mov
cmp
aaa
loopne
inc
repz
xchg
inc
pushf
jns
mov
lea
imul
sti
add
outsb
or
es
lret
pop
xor
in
movsl
fdivrs
sbb
ss
aam
push
insl
lock
cmp
push
cmp
insb
xchg
orb
and
mov
shrl
test
daa
jne
push
and
es
es
jmp
xor
inc
push
inc
into
push
or
dec
sub
xchg
lock
xorb
mov
push
sbb
stc
and
mov
adc
mov
push
adc
jg
icebp
push
push
lock
push
jmp
add
dec
adc
inc
dec
adc
imul
das
mov
pop
icebp
orb
fwait
lock
testl
jge
ja
cld
xchg
cmp
xchg
add
adc
pusha
pop
sbb
jo
add
adc
mov
ret
in
mov
jo
add
test
stos
sub
dec
std
push
popf
loop
sbb
and
push
loop
push
sub
jl
inc
push
dec
xor
or
in
add
and
insl
pusha
jb
push
lods
arpl
push
les
popf
sbb
xchg
mov
ret
adc
mov
call
insb
push
scas
gs
pusha
push
or
loope
add
or
add
cmp
mov
push
std
xor
jl
sbb
cli
add
push
add
jl
cmp
jge
or
lds
popa
mov
loopne
pop
inc
mov
push
out
in
jbe
aas
cmpl
leave
js
in
clc
inc
mov
lea
loop
inc
leave
push
push
jo
sbb
rcll
into
mov
add
mov
lahf
sub
cli
lahf
add
xor
sub
js
icebp
lock
jbe
pop
cmp
cmp
std
pop
std
sbbb
xor
push
sti
add
inc
jge
inc
inc
pop
punpckhbw
cmp
dec
call
add
in
xchg
adc
pop
enter
pop
sub
das
fdivs
xchg
sbb
cld
movsb
or
inc
pop
int3
jns
push
xchg
orl
test
or
add
lahf
push
push
cmp
dec
xor
push
out
popa
mov
addb
adc
sub
scas
cmp
je
push
push
stos
and
int
xor
pop
sbb
mov
out
cltd
mov
es
mov
cmp
adcb
add
adc
in
mov
mov
test
out
inc
push
insl
sub
push
fimull
mov
adc
mov
fucomi
addb
jp
pop
jne
ljmp
jl
xor
jns
dec
aad
push
adc
stos
shrl
jae
mov
pop
and
enter
insb
test
pop
adc
roll
aas
icebp
inc
add
in
mov
sub
sti
xchg
sbb
lahf
pop
es
test
jge
xor
jne
movsl
popa
add
xchg
mov
std
rcll
lock
mov
sub
test
jmp
pop
pop
aaa
sbb
pop
dec
test
out
xor
jle
inc
push
ret
adc
mov
jo
xchg
adc
movb
data16
lea
or
xchg
add
daa
nop
inc
add
rolb
aas
mov
and
xchg
in
inc
inc
xchg
mov
mul
add
cmpb
add
push
add
inc
adc
pop
sbb
or
and
out
add
cltd
shl
test
add
dec
push
push
icebp
mov
sbb
jle
add
ret
shrd
outsl
dec
lock
cs
lea
jle
fidivl
flds
lret
sbb
push
mov
adc
sti
pop
ljmp
loopne
mov
cmp
popa
rcrb
dec
xchg
and
notb
push
or
xchg
mov
and
in
mov
inc
cmp
rorl
loopne
xchg
mov
and
fstpt
mov
in
add
ret
loopne
add
sbb
cmp
sbb
push
inc
sbb
pop
xlat
pop
js
shr
mov
std
cs
es
add
in
popf
jge
rcrl
fcoms
and
or
arpl
fldcw
jno
insl
test
and
or
add
or
push
mov
std
and
jns
xor
setne
je
add
push
jnp
rorl
dec
mov
adc
arpl
sbb
lock
xchg
js
pop
sub
cli
call
cmp
lcall
dec
scas
push
lods
mov
sub
inc
inc
out
mov
repnz
add
or
fimull
rclb
popa
mov
dec
push
sbb
fldt
jmp
push
sahf
push
rorl
fs
and
aaa
pop
shrl
cld
jne
sbb
int
inc
pop
xor
rol
mov
jno
pop
sub
sbb
ret
xchg
inc
or
fwait
adc
outsb
adc
xor
mov
sbb
cmpl
push
push
jo
pop
fstpt
adc
cmpsl
add
inc
fsubl
adc
out
cmp
addr16
gs
pop
xorl
jmp
xchg
push
xchg
inc
mov
pop
xrelease
sub
xchg
push
or
xor
inc
mov
aas
mov
sbb
and
aas
dec
ss
dec
dec
inc
push
push
pop
add
mov
and
and
adc
push
adc
jp
pop
pop
sbb
inc
xchg
jmp
mov
in
adc
push
pop
inc
cmp
jo
sarl
pop
movb
push
sub
sbb
shl
jo
aam
xor
sub
push
sbb
insb
push
outsl
test
push
outsl
add
jno
loope
dec
inc
psubsw
testb
xor
adc
xchg
mov
cmp
jmp
imull
fwait
add
inc
jnp
cmp
push
adc
push
bound
es
xchg
or
add
xchg
and
or
shr
adc
cmp
fsubs
fdivr
insb
inc
push
fwait
mov
pop
sub
insl
cs
addb
and
test
lock
rep
sub
sbb
scas
add
push
les
push
addb
into
mov
rolb
mov
mov
das
cmp
pop
push
mull
sahf
sbbb
or
clc
add
fistpl
dec
mov
push
mov
pop
movl
sub
gs
shl
sbb
inc
xchg
lock
insb
pop
test
push
shrl
or
pop
and
stos
adc
push
test
mov
add
inc
xchg
xor
test
lret
push
lds
loope
or
xchg
lret
dec
pop
test
sub
push
adc
xlat
push
mov
or
pop
push
movsl
inc
test
or
or
outsb
inc
mov
mov
dec
fisttpll
sub
xchg
addr16
or
scas
cmp
push
subl
push
mov
push
xchg
je
inc
jno
or
roll
cltd
ffree
jg
cmp
pop
push
popa
sbb
adc
adc
pop
dec
pop
or
int3
mov
dec
inc
adcl
pop
in
or
dec
cmpsl
push
push
or
dec
push
cmp
xchg
or
pop
mov
dec
js
mov
cmp
add
fs
loopne
shll
adc
pusha
sbb
icebp
cmpsb
mov
pop
jno
rol
add
or
lret
push
test
shll
dec
add
mov
jbe
les
je
call
or
dec
inc
inc
inc
test
and
inc
mov
dec
add
or
jo
push
lds
in
push
icebp
or
mov
imul
mov
in
mov
and
dec
mov
fs
sbb
dec
push
mov
jmp
loop
push
in
loopne
push
dec
or
pop
leave
or
fistps
sbb
push
dec
adc
enter
and
push
mov
rcrb
jmp
lahf
sbb
js
mov
mov
sbb
xchg
and
xor
push
pushl
lock
or
jp
push
adc
push
xor
dec
or
out
push
sbb
cs
data16
jmp
pop
jl
sbb
mov
or
pop
lock
call
cmc
push
jle
mov
pop
inc
mov
add
shrl
cld
in
sub
ret
call
pop
or
pop
inc
je
cmp
xor
dec
mov
je
mov
mov
addl
insb
push
or
push
add
xor
cwtl
pop
les
mov
cmpsb
cld
cmpsb
and
inc
or
mov
insb
push
hlt
adc
push
or
push
movsb
or
jae
xchg
and
xor
sub
js
adc
outsb
add
adc
mov
sub
sbb
mov
out
decb
add
pop
lds
mov
sti
push
and
rorb
fcomps
add
sub
js
add
mov
adc
or
pop
ljmp
and
mov
mov
jle
push
and
aaa
jno
push
cmp
and
sub
mov
dec
sub
pop
dec
lods
push
push
imul
or
mov
push
test
call
popf
adc
xlat
fisubs
cmc
push
sub
jo
and
sbb
inc
jne
sub
adc
scas
test
push
push
pusha
sub
xchg
rolb
add
and
lcall
pop
sti
add
lock
aad
dec
and
imul
sbb
or
pusha
aaa
push
xor
add
lock
sub
dec
add
cltd
push
cmp
sarb
sub
jmp
in
pop
aaa
jmp
shrb
lods
jnp
or
test
xchg
das
cmp
sahf
shlb
pop
and
hlt
ret
pop
je
into
clc
push
sbb
adc
cmpsb
jle
sbb
pop
fisttpl
push
jp
lahf
push
cld
sbb
mov
adc
jno
add
sbb
iret
xchg
aaa
cli
and
mov
push
inc
or
int
jecxz
mov
dec
push
xor
pop
cs
mov
lods
push
dec
loope
add
bnd
push
cs
xorb
add
test
pop
cmp
loop
inc
xchg
mov
add
mov
pop
add
dec
icebp
loop
mov
mov
orb
push
mov
push
faddl
es
outsl
pop
xchg
sbb
mov
in
dec
cmp
shll
mul
das
jmp
adc
inc
push
xchg
or
or
std
cmp
int
sti
push
loop
mov
xchg
cltd
jg
add
mov
nop
jnp
fidivrs
adc
xor
enter
cmpsb
mov
push
sbb
loope
fadds
sbb
sub
xor
fdivl
shrl
mov
pop
push
pop
add
inc
fcomps
inc
das
das
fwait
add
adc
adcb
cmp
xchg
dec
sbb
xchg
xchg
inc
or
jns
fisubrl
xchg
xor
and
xlat
ja
test
in
stc
pusha
dec
les
and
dec
pop
push
fsubrl
rdmsr
push
inc
cmp
add
add
mov
jbe
dec
lds
inc
sbb
add
adc
bound
aam
cld
movsb
mov
xchg
out
push
sarb
jle
push
sub
in
or
add
jg
fimull
insb
mov
mov
imul
ret
inc
inc
fisubrs
add
or
and
lcall
insb
adc
jo
enter
dec
jnp
add
jl
mov
mov
mov
sub
mov
test
and
add
lods
in
xor
decl
pusha
or
daa
movl
jno
daa
test
stc
pop
imulb
add
or
leave
add
loop
mov
rcl
cmpsl
lock
xchg
dec
jmp
dec
pop
cmpb
enter
add
mov
inc
push
sbb
or
add
mov
mov
mov
sarl
adc
test
fsubrl
jnp
and
pop
xchg
loop
inc
or
pop
push
mov
ja
mov
xor
mov
inc
dec
nop
inc
imul
aam
adc
je
xchg
lods
xor
sarb
inc
cld
lea
test
push
loopne
push
cmp
data16
andb
lret
inc
mov
push
push
pop
add
pop
aad
push
ss
pop
and
adc
insb
test
inc
inc
adc
div
mov
add
cmp
mov
or
xlat
mov
mov
stc
xchg
xchg
jbe
adcl
in
add
repz
mov
jbe
mov
lcall
sbb
add
push
stc
xor
push
jns
adc
mov
mov
add
mov
sbb
push
or
loopne
hlt
add
and
inc
xor
insb
add
jns
push
or
add
imul
inc
and
test
mov
mov
rorl
and
add
jnp
dec
dec
cmp
cmpsl
and
add
and
fadds
jne
loope
popa
xlat
cmpsb
push
dec
aaa
fwait
inc
mov
inc
add
jo
dec
mov
aad
inc
bound
call
push
out
xchg
add
push
lea
mov
imul
mov
sbb
add
cmp
or
or
jb
cld
lcall
mov
mov
sub
mov
mov
adc
cmp
jl
loopne
je
dec
pop
ret
push
insb
mov
inc
adc
dec
lea
ficompl
jg
bswap
push
pop
mov
dec
je
dec
jne
dec
pushf
xchg
sbb
dec
xor
rorb
push
sbbb
push
in
ret
ds
inc
inc
iret
mov
add
mov
jecxz
sbb
fidivs
int3
arpl
cmp
js
out
mov
jg
fsubl
inc
sbb
add
insb
sbb
sbbl
leave
cmpl
dec
sub
push
add
aam
xchg
xor
push
sbb
lea
pavgb
inc
cld
pushf
adc
jg
stos
lahf
mov
popl
mov
inc
adc
ss
sbb
xor
lods
test
jmp
cmp
or
leave
in
mov
sbb
in
sub
into
push
jp
pop
pusha
int
popf
ret
dec
enter
xor
push
scas
into
andl
xor
ss
test
and
add
inc
or
sbb
shll
xchg
or
or
shrl
ret
shrb
cwtl
lret
mov
or
pop
pop
cmp
pop
jl
fmull
add
out
out
pop
or
mov
add
pop
in
mov
rolb
cmp
test
inc
jo
pushf
xchg
dec
jl
cwtl
push
xor
mov
push
pop
sbb
push
jl
xlat
cwtl
xor
jg
lea
sahf
jno
test
xchg
jp
lea
rorb
push
ret
imul
add
pop
mov
mov
dec
loop
mov
sub
in
dec
je
add
cs
push
jb
adc
inc
das
lock
xchg
and
movl
or
sub
out
cmp
negb
lahf
mov
dec
inc
jnp
xchg
dec
adc
jo
test
imul
mov
mov
imul
gs
xor
and
cmp
std
mov
xor
mov
pop
roll
sarl
cli
shrb
mov
nop
dec
pop
add
mov
andb
ja
je
ss
inc
pop
ret
sahf
ret
mov
lcall
xor
arpl
add
cli
pop
dec
out
movsl
arpl
cmpsb
dec
mov
mov
js
inc
or
pop
sbb
jo
sbb
jns
insl
pop
shlb
cmpb
cld
xor
push
or
fsubrl
push
dec
dec
xor
mov
dec
int3
inc
dec
add
in
and
add
push
call
loope
aam
ss
daa
inc
cmp
orl
mov
cmovle
roll
add
daa
mov
lods
test
jae
jbe
fidivrl
pop
dec
mov
push
add
inc
inc
imul
lea
push
cmp
or
outsl
mov
adc
sbb
in
dec
imulb
jl
push
dec
adc
cmp
dec
sti
sub
sbb
pop
aam
and
daa
xchg
pop
test
sbb
jbe
or
arpl
add
sbb
or
sbb
int3
sbb
jp
mov
lods
ffree
sub
and
mov
sub
mov
push
movl
xor
mov
or
cld
add
dec
add
loopne
add
pop
cld
pop
and
mov
sarl
and
jmp
inc
popa
mov
xchg
jecxz
fnsave
xor
adc
sbb
hlt
push
pop
out
les
movsb
push
cmp
ss
mov
loop
nop
imul
mov
test
fsubl
pusha
mov
dec
push
push
cmp
adc
dec
sub
pop
jl
icebp
test
or
mov
jg
jle
adc
push
outsl
jne
pop
bound
sbb
sbb
add
cmc
xchg
fisubl
add
push
inc
jno
cmpsl
adc
fdivs
cmp
adc
ret
push
dec
jle
pusha
push
std
das
push
push
mov
add
nop
jg
stos
inc
push
test
ret
push
pop
and
fldt
lock
mov
inc
xor
cmp
mov
aas
xchg
sub
mov
push
mov
jns
dec
out
decb
push
mov
inc
inc
dec
pop
out
out
add
cmp
push
cs
push
cmp
jne
rorb
push
loopne
arpl
and
mov
cmp
push
and
cmp
fadds
jp
fcoml
pop
inc
cltd
mov
push
push
jmp
add
jo
dec
sti
mov
mov
aaa
mov
add
mov
or
std
cmp
xor
cld
add
insb
loopne
pop
aaa
and
daa
fists
nop
fadds
or
or
andb
adc
rolb
sub
push
das
xor
xor
bound
mov
xchg
movsb
sbb
cltd
push
mov
sub
fimull
out
fiaddl
push
jno
enter
sahf
je
lods
bound
out
push
in
jbe
push
sbb
mov
adc
add
or
push
cld
pop
outsl
nop
roll
add
or
or
mov
add
cmovnp
add
rolb
ret
sbb
and
push
je
pop
cmp
ja
or
jne
cmp
dec
sub
mov
mov
stos
mov
inc
lea
std
adc
loopne
xor
cld
orl
movw
adc
cmp
adcl
or
sbb
out
jmp
or
lock
mov
sbb
sub
test
xchg
dec
add
push
sbb
cltd
leave
pavgb
enter
adc
add
pop
jnp
sbb
sbb
int3
add
sarl
stos
mov
add
sbb
sub
add
pop
inc
inc
dec
sub
mov
push
pop
fcoml
and
imul
push
daa
sbb
cltd
cmpsl
insl
sbb
push
or
pop
ljmp
push
ja
mov
pop
pop
mov
add
rolb
stos
and
xchg
sbb
dec
sbb
movsl
in
jnp
jp
xchg
pop
and
push
into
ret
scas
test
scas
stos
add
pusha
outsl
mov
dec
xchg
add
mov
loop
xor
or
fdivs
inc
cmp
adc
dec
cs
mov
cmp
pop
xchg
push
bound
cmp
aam
and
adc
nop
adc
movsb
mov
jg
sbb
aaa
insb
data16
adc
jge,pt
mov
repnz
or
dec
inc
enter
inc
cmp
push
in
ds
call
cltd
pop
lret
dec
dec
shlb
push
and
cmpsl
and
cmp
lods
or
lret
iret
add
cmp
pop
insl
ret
mov
mov
inc
cltd
xchg
pop
cmpl
cwtl
sbb
in
sbb
das
es
sub
lahf
rolb
inc
std
jl
mull
cmp
je
inc
inc
lretw
js
and
xorl
les
es
lods
inc
sbb
push
add
scas
push
pop
lea
mov
lods
dec
jle
cltd
add
cmp
xor
outsb
xchg
adc
jns
nop
mov
nop
inc
cli
fadds
enter
orps
add
inc
mov
cmp
inc
inc
dec
cmpsb
lods
pop
fdivs
lea
mov
or
xorl
push
lea
inc
mov
scas
xor
sbb
push
mov
das
mov
inc
scas
adc
sbb
add
ret
add
inc
ljmp
mov
subl
xor
adc
pop
repnz
sbb
andl
jl
xorps
pop
jmp
or
daa
mov
sub
sti
add
xchg
lock
das
cmp
and
inc
sbb
sub
sbb
push
xor
fwait
sbb
push
lods
or
fisubrl
or
and
ss
xchg
jbe
pop
pop
mov
cmp
sub
orb
add
mov
xchg
cmp
sbb
aam
or
ds
lock
fnsave
sbb
fidivs
in
bound
inc
inc
cmp
mov
inc
inc
fidivl
ret
mov
jle
xchg
lods
or
in
push
lea
xchg
daa
cmp
mov
inc
add
ljmp
adc
add
or
out
ficoml
fimull
and
push
pop
dec
and
dec
hlt
adc
adc
push
jb
insb
or
test
lods
lock
jb
jle
nop
sbb
pop
les
or
call
xchg
cmp
sbb
into
sbb
pshufw
sub
test
mov
jbe
adc
pop
clc
js
mov
dec
jl
adc
add
cli
or
pop
daa
adc
lock
inc
xlat
cmpl
in
xor
pop
xchg
push
pop
insl
mov
scas
adc
jp
adc
inc
push
add
ret
and
dec
sbb
shll
push
push
push
jne
cmp
jl
adc
sub
mulb
mov
inc
cmp
adc
xor
cmp
xor
or
xchg
addr16
imul
pop
movsl
daa
ret
das
sbbb
mov
inc
sarl
es
xchg
jecxz
or
or
lods
cmpsl
sbb
adc
pusha
cwtl
movsb
sbb
inc
pop
push
xchg
sahf
aam
dec
repz
je
inc
ret
ror
pop
roll
sbb
jge
add
lret
adc
lcall
push
add
jmp
inc
mov
add
inc
add
in
jge
cmp
cmp
mov
jl
add
rolb
or
mov
inc
dec
jne
cmp
rolb
add
mov
rcrb
ljmp
loope
mov
xchg
push
and
test
push
mul
xchg
and
mov
inc
pop
mov
or
inc
test
mov
push
cmp
pop
cmp
ss
jge
test
push
mov
movsb
push
movsl
push
pop
mov
orb
sbb
adc
inc
add
inc
aad
loope
js
dec
inc
notl
or
pop
je
sbb
and
pop
lock
mov
movsl
sub
rolb
cld
push
arpl
notl
mov
add
ss
lea
movsb
sub
add
test
popf
lock
mov
pop
pop
push
insl
faddl
mov
dec
adc
push
push
adc
adcb
mov
pop
mov
jg
loope
dec
push
xor
pop
ret
cmp
cmp
aas
js
movsb
push
lods
jp
insb
push
mov
aam
imul
and
orb
icebp
andl
xchg
push
shlb
fdivrl
or
and
sub
adc
adc
sbb
lret
and
addr16
imul
mov
xchg
dec
cmpsb
pop
jno
ss
add
xor
or
pop
and
jl
mov
inc
add
xchg
in
pop
dec
fs
adcb
push
lock
js
sbb
cli
inc
sbb
inc
mov
push
sbb
aas
addl
pop
pop
int3
popf
pushf
inc
sub
mov
mov
inc
add
jmp
xchg
jbe
push
add
sub
xchg
lret
ficoms
dec
rcrb
sub
stc
mov
sbbb
and
dec
insb
or
jae
mov
inc
imul
adc
or
faddl
xor
rcl
jge
sbb
enter
sub
cmp
jbe
pop
cld
push
sbb
push
push
addr16
and
out
shlb
jae
add
ds
inc
je
aam
mov
sbb
dec
or
cltd
jb
rcrb
lds
or
fwait
rcrb
cmp
sbb
repz
mov
dec
and
ss
test
pop
mov
pop
popa
xor
sub
push
rcll
push
or
les
ret
dec
push
pop
inc
test
xchg
dec
add
push
and
les
inc
sbb
dec
lea
push
lcall
mov
out
or
adc
or
sub
push
arpl
cmp
bound
add
ljmp
and
ret
cmc
repz
in
mov
outsl
add
aam
lcall
cmp
jbe
psrad
fnstsw
into
gs
imul
pop
imul
fst
xchg
mov
lock
ret
dec
jne
cmp
jb
adc
jle
inc
add
shl
inc
push
sub
and
jbe
sbb
pop
push
push
dec
push
dec
cmp
cltd
and
pop
inc
jne
mov
ds
xor
arpl
popl
pop
push
and
sub
mov
or
and
sub
sub
sub
into
sbbb
mov
inc
inc
add
in
test
inc
xchg
stos
movsb
inc
rcrb
push
andl
dec
or
addr16
cmp
jne
dec
inc
and
sub
push
adc
cmovnp
adc
cli
push
push
xchg
fists
jl
mov
jmp
leave
add
repz
sbb
cltd
or
pop
sbb
les
inc
testb
or
pop
cmp
roll
cmpsb
jmp
loop
add
add
inc
aam
addr16
xchg
enter
addb
add
lea
push
into
in
jl
add
or
dec
dec
xchg
add
and
in
jmp
xchg
xchg
out
jo
fmull
test
cld
js
push
mov
out
dec
pusha
lea
movsb
mov
xchg
in
inc
sbb
adc
sbb
popa
dec
inc
push
push
nop
dec
push
jbe
fwait
inc
sub
insb
ja
cmp
call
add
pop
push
in
mov
lds
cmpl
jbe
fnstenv
push
sub
jbe
push
adc
jns
loop
test
sbb
mov
push
jbe
in
rorl
dec
push
push
mov
sti
jae
cli
xchg
sub
ret
enter
add
jmp
inc
scas
add
jmp
je
sbb
sub
outsb
adc
sub
mov
sar
add
jb
xchg
icebp
and
cmp
mov
push
enter
mov
call
inc
popa
dec
jnp
imul
push
movswl
je
loop
push
mov
xchg
add
mov
ja
popa
jns
ds
cwtl
add
mov
add
rorl
pop
sbb
mov
jecxz
push
ret
in
or
jmp
push
mov
out
cld
and
push
xor
push
jl
mov
xor
add
stos
pusha
mov
roll
lods
xchg
loop
add
xchg
mov
push
enter
lahf
sub
outsb
fdivrs
pop
sub
icebp
inc
jb
pop
lds
sbb
outsb
lahf
std
jae
push
sub
xchg
fldt
pop
jb
or
je
push
enter
std
pop
fistl
or
fcomps
test
pop
xor
mov
cwtl
sub
mov
push
fsubs
bound
nop
iretw
add
int3
lea
mov
mov
sbb
xchg
insb
in
js
leave
push
inc
adc
in
inc
xor
pop
sub
dec
xor
pop
push
cmp
jg
xor
inc
pop
inc
loop
push
mov
xor
mov
cmp
and
dec
mov
icebp
pop
or
insl
pop
adc
cmp
dec
icebp
mov
mov
push
jne
outsl
xor
cmp
xor
and
aas
pop
movb
or
cmpsl
int3
cmp
jns
clc
add
fdivrp
mov
push
xorb
add
mov
rcl
aas
fdivs
pusha
xchg
je
orb
add
orl
fs
insb
pop
add
loopne
pop
pop
dec
jb
imul
mov
pop
loopne
movsb
les
push
sub
pop
dec
imul
add
mov
inc
fidivrl
push
and
rolb
imul
pop
xchg
jmp
shll
pusha
cmpsl
push
push
push
push
lods
dec
sbb
mov
jo
int3
inc
je
scas
xchg
xchg
negb
jmp
bound
enter
pop
loopew
cmp
arpl
push
push
nop
dec
add
loope
push
sbb
sahf
push
jo
or
jl
sub
hlt
in
jle
ret
jb
enter
cmp
or
adc
es
outsl
mov
mov
or
shl
cmp
jg
dec
sbb
sub
in
sahf
clc
mov
pop
jl
mov
xlat
mov
push
cmp
out
lods
push
jae
sub
mov
scas
push
in
mov
sbb
jge
pop
or
jne
lds
push
mov
repnz
dec
pop
sahf
push
xchg
insl
adc
outsb
js
sbb
stos
adc
loop
mov
lds
icebp
dec
adc
js
loopne
repnz
push
je
inc
inc
scas
ret
pop
andl
lcall
shlb
subb
decl
imul
lcall
inc
and
cmpl
jne
adc
mov
mov
inc
mov
ss
clc
jne
cmp
neg
xor
jg
cmp
jne
and
pop
pop
pop
cld
inc
xchg
xor
cs
xor
or
xchg
cmp
pop
dec
pop
incb
icebp
push
jmpw
movl
mov
sti
xor
adc
pop
mov
sub
mov
mov
hlt
mov
dec
fs
jmp
jnp
add
push
out
mov
rcrl
int3
inc
jne
test
insb
and
push
pushf
cmpsb
divb
inc
imul
inc
dec
cmp
jmp
je
pusha
pop
out
jbe
adc
dec
sbb
sti
mov
lods
dec
enter
sub
jne
push
imul
pusha
add
mov
sub
cmp
sbb
xchg
ja
aas
push
fiadds
pop
adc
push
push
mov
adc
mov
lahf
out
imul
fdivrl
mov
or
cmp
out
mov
fisubs
lods
pop
jbe
lea
push
jecxz
jl
fsubrl
sbb
insl
push
sti
mov
outsb
inc
dec
iret
je
orl
jl
mov
movsl
jmp
cmp
adc
pop
or
lcall
clc
dec
and
out
test
cmp
mov
test
aas
xorb
mov
sbb
dec
shlb
ret
inc
dec
and
xchg
popa
sub
pop
test
mov
inc
cmpsl
popf
in
xchg
adc
dec
or
sahf
mov
sbb
lock
jbe
push
add
add
mov
inc
in
lods
jg
jbe
adcb
aas
sbb
imul
jo
pusha
cltd
movsb
adc
fisubs
add
inc
push
dec
sbb
cmp
pop
sbb
dec
sbb
adc
fs
dec
cmp
loopne
inc
imul
xchg
adc
shlb
lods
pop
scas
or
xor
pop
rcl
mov
or
mov
xchg
push
icebp
mov
jge
pushf
add
mov
and
sti
sahf
push
test
push
rclb
push
imul
movsl
sbb
mov
fmuls
mov
dec
fs
insl
cld
call
jp
or
adc
sbb
mov
or
mov
jl
mov
imul
andb
xor
pop
sub
rcrl
pop
movb
dec
push
aam
or
dec
js
push
imul
outsl
fimuls
cmp
mov
jmp
push
pop
adc
rep
jne
mov
push
or
xchg
push
adc
pop
aam
jg
adc
gs
out
fcos
mov
ret
pop
mov
test
in
xchg
inc
and
imul
mov
fadds
test
cltd
pusha
test
push
sub
cmp
pop
loope
cmpl
xchg
push
jle
sbb
lea
add
in
mov
fucomp
cmpsb
ret
sub
aam
test
addr16
popf
popa
add
sbb
clc
jmp
popf
test
or
add
xchg
push
in
dec
inc
pusha
out
ffree
ret
inc
lret
mov
sarb
xchg
push
mov
add
xchg
jb
outsl
arpl
push
inc
cmp
adc
inc
cmp
and
adc
cmpsb
push
push
aas
or
add
clc
scas
aam
imul
rcr
dec
cmpsb
repz
je
mov
xchg
inc
push
cmp
cld
xor
pop
push
push
and
inc
insb
add
aaa
clc
dec
add
scas
mov
xor
sub
lds
iret
je
xor
mov
ret
add
mov
nop
shlb
and
ja
dec
daa
pusha
pushf
gs
fnstenv
dec
xor
adc
mov
js
jbe
and
add
fldt
addr16
inc
sti
into
jecxz
pop
cmp
push
scas
jbe
lea
inc
lods
dec
daa
xchg
adcb
jmp
cmp
popaw
xor
inc
div
shll
xor
stos
adcl
test
pop
cmp
jb
test
inc
push
add
out
mov
xor
rcr
ss
pop
sub
je
fistl
or
cwtl
dec
das
add
insb
int
in
mov
mov
mov
mov
inc
push
lea
mov
xchg
mov
cmp
sub
and
lahf
push
sub
sub
mov
in
orl
add
jno
and
push
cmp
sub
mov
add
icebp
insl
mov
and
jmp
loopne
out
jl
js
gs
and
test
loop
ss
fcmovnbe
ret
xchg
pop
fadds
mov
mov
xor
dec
aaa
mov
add
inc
loopne
jg
lea
push
push
push
insb
push
mov
push
cmp
pop
jb
jb
pop
xlat
testl
add
es
add
dec
add
adcb
pop
sbb
push
dec
sbb
sub
and
je
dec
mov
repz
rorl
push
dec
jecxz
ss
inc
adc
mov
rcll
push
mov
jb
std
or
cmp
jae
or
rorl
nop
cmpsb
out
insl
add
push
jb
pushf
xor
adc
jb
xchg
and
push
dec
dec
arpl
aad
push
fdivrl
inc
outsb
add
push
adc
int3
shl
sub
mov
loopne
xchg
rol
and
and
mov
pop
xor
push
mov
push
and
shlb
mov
sbb
mov
sbb
pop
push
sbb
imul
dec
push
mov
xlat
pop
mov
xor
xchg
sbb
mov
rcl
enter
in
jb
push
cmp
sub
sub
add
xor
add
lods
cmp
or
mov
or
or
or
push
jae
xor
cwtl
inc
pusha
dec
pusha
and
pop
sbb
push
fs
cmp
push
pop
pop
scas
pop
loope
setle
sbb
or
shlb
push
mov
clc
mov
mov
push
js
mov
xchg
icebp
or
dec
jmp
adc
pop
nop
cmp
aam
fstpt
test
test
loopne
mov
jno
sub
sub
ss
mov
and
push
inc
loopne
push
adc
pop
adc
sbb
sbbb
daa
and
mov
clc
add
mov
add
imul
mov
sbb
out
mov
popa
int3
dec
pusha
xchg
adc
icebp
push
sbb
jle
je
pusha
mov
push
xchg
mov
sub
xchg
inc
test
lcall
or
ret
inc
daa
sbb
xchg
cli
add
popl
mov
test
lahf
dec
dec
push
add
add
push
sbb
adc
dec
push
pop
or
and
add
add
adc
jbe
mov
add
pop
push
les
adc
andl
and
icebp
mov
push
lea
dec
push
sub
in
sub
jae
mov
push
sbb
push
rol
xchg
add
push
dec
or
mov
out
dec
insl
and
je
push
cmp
enter
sub
mov
rolb
sub
bound
mov
inc
mov
addl
sub
dec
sarb
sbb
pushf
cmp
jg
mov
adc
lea
leave
add
jmp
adc
ja
dec
and
test
xchg
arpl
xchg
add
cmp
push
in
add
ret
stos
cmp
insl
aas
sbb
jecxz
call
cmp
push
sbb
wrmsr
pop
or
dec
cmp
add
insl
fsubrl
push
das
mov
inc
addb
fnstenv
push
dec
add
loop
faddl
and
adc
mov
mov
push
mov
push
enter
pop
dec
inc
js
sbb
cmp
add
icebp
jb
rolb
jg
cmp
jge
jmp
sbb
and
sbb
adc
push
incl
push
xor
ss
pop
nop
cli
xor
sub
pop
jge
pusha
outsl
jge
std
dec
jne
xor
dec
mov
lea
mov
jl
dec
cwtl
mov
push
and
mov
ss
sub
push
inc
test
bnd
sbb
push
in
sub
sbb
outsb
aas
and
sbb
jae
addr16
repnz
ret
jno
inc
mov
icebp
enter
pop
mov
inc
inc
mov
cmp
ljmp
mov
push
out
cmp
lods
mov
rcrb
call
xor
xchg
scas
cmp
pop
add
loopne
rcl
adc
dec
or
popf
cltd
dec
fstpl
fwait
and
pop
mov
loop
rep
lock
arpl
add
add
fisttps
cmp
cli
mov
xchg
jns
inc
add
push
pushf
mov
jne
or
mov
test
ds
loopne
xchg
rcll
mov
xchg
mov
mov
rcll
xor
mov
mov
mov
lods
bound
sub
cmp
addl
or
dec
das
sbb
add
or
sbb
or
mov
add
je
or
jbe
pop
sbb
incb
repz
in
push
mov
mov
mov
sbb
mov
adc
and
sarb
push
inc
int
test
or
pop
add
sbb
test
push
addr16
or
jns
sub
out
sbbb
scas
fs
add
xor
in
xchg
iret
inc
dec
xchg
push
dec
inc
lcall
push
ljmp
bound
xor
ss
imul
rcrl
adcl
jne
and
pushf
ja
or
add
cltd
jmp
add
xor
jmp
sbb
or
adc
dec
sub
int3
fs
pop
add
test
mov
or
mov
xchg
push
inc
cmp
dec
lock
jmp
lock
push
push
sbb
mov
movsb
adc
icebp
add
add
in
and
loop
push
push
fwait
jle
cmp
inc
mov
sahf
add
add
lods
jbe
jae
push
xor
xor
adc
out
mov
add
aad
mov
ret
adc
into
ret
cmpb
mov
jns
mov
lods
cmc
and
sub
ja
jl
mov
outsb
inc
xor
mov
aaa
or
lret
xor
jbe
dec
lods
jno
lods
mov
test
pop
jle
add
mov
ss
mov
xchg
sub
loope
jo
inc
xchg
add
xor
add
or
popa
movaps
add
adc
sbb
push
iret
test
dec
add
or
js
inc
jno
adc
test
popl
pop
fs
jl
pop
inc
adc
mov
sub
or
dec
dec
sub
or
adc
jns
pushf
movsl
cmp
inc
or
imul
jno
xor
adc
add
adc
push
iret
add
mov
pop
mov
or
dec
iret
or
loope
stos
add
subb
std
pop
call
das
mov
and
inc
mov
or
push
arpl
mov
jle
xchg
and
dec
jae
pusha
or
jo
inc
les
push
push
std
adc
pop
cmp
push
inc
rorb
jecxz
or
mov
mov
imul
adc
dec
dec
jae
shl
jp
jbe
add
jmp
dec
pusha
and
inc
jp
sahf
push
js
lcall
test
loope
shl
push
sub
loop
mov
add
mov
dec
inc
lea
adc
dec
loope
mov
call
or
or
pop
pop
or
fsts
lea
adc
pop
sbbb
into
cmp
dec
iret
in
mov
jl
je
outsl
add
adc
mov
mov
and
add
adc
in
mov
addb
imul
xor
add
push
fistpl
adc
cmp
or
mov
outsb
add
je
xchg
or
or
ret
jmp
xor
sub
sub
cmp
dec
andl
imul
ss
sbb
dec
inc
je
shrb
icebp
shlb
push
enter
std
test
and
inc
mov
imul
and
dec
popa
sbb
shlb
or
adc
fldenv
sbb
dec
inc
cmpsb
inc
add
scas
sahf
lcall
pop
push
insb
cmpsb
test
data16
jg
scas
cli
pushf
lds
add
cltd
shl
testl
xchg
je
cwtl
jl
inc
jmp
sub
les
fxch
sbb
lret
lock
or
test
jb
nopl
jnp
and
xchg
lret
dec
dec
or
mov
adc
je
add
movsb
loopne
sarb
ret
xor
jb
enter
je
add
fadd
imul
sub
cs
addb
ljmp
cmp
inc
cmp
stos
sarb
mov
outsb
mov
adc
or
pop
add
enter
dec
loopne
and
jo
inc
sub
ficoml
adc
dec
out
outsl
lods
jne
inc
sub
jbe
push
mov
jne
cmc
adc
xchg
shlb
mov
xchg
in
repnz
dec
mov
imul
lahf
cs
pop
lea
push
push
ds
or
andb
sub
sbbb
dec
clc
mov
pusha
xor
pop
test
adc
les
ret
inc
mov
cwtl
xchg
lds
push
mov
iret
mov
test
inc
dec
adc
or
loope
ss
nop
add
in
fistps
push
negl
pop
xor
push
adc
mov
mov
outsb
sbb
rolb
sar
dec
orl
lahf
and
push
xor
clc
jl
and
ret
inc
mov
ja
int
inc
hlt
add
mov
cli
adc
movb
andb
scas
sahf
sbb
mov
xchg
cs
sbb
push
test
lret
fildll
add
inc
cmp
je
mov
loope
pop
jne
xor
pushf
dec
cmpb
fdivrs
arpl
data16
and
sbb
jle
js
ss
ljmp
and
add
clc
int3
movl
sbb
imul
push
into
pop
aad
mov
test
xor
lds
dec
xchg
cmp
lea
xchg
sbb
shl
or
mov
aam
in
sbb
sahf
cli
sar
sub
inc
dec
jne
lods
sti
push
or
adc
mov
xor
mov
mov
roll
cmp
fiadds
mov
fcomip
adc
clc
mov
pop
add
lea
add
and
inc
mov
inc
add
pop
jns
je
mov
bound
push
daa
fmuls
je
pop
je
push
ss
jnp
add
mov
ficomps
mov
rclb
mov
dec
and
das
push
sub
sbb
cmp
ror
adc
enter
sbb
mov
mov
and
outsb
mov
sub
xchg
or
inc
cli
or
push
cmp
and
sub
jecxz
add
lret
add
inc
adc
push
fmull
ret
pop
popa
icebp
pop
in
decb
lods
mov
or
nop
rorb
in
mov
inc
push
pop
dec
push
fwait
je
mov
mov
jl
sar
jge
test
mov
inc
dec
jp
jg
leave
and
les
cmp
lods
addb
bound
inc
xchg
rorb
fists
jb
add
mov
xlat
cld
xor
inc
xor
andb
sbb
xchg
jg
lret
push
ret
andl
xchg
sub
push
sysexit
jl
test
adc
xor
and
add
outsb
movsb
push
mov
mov
xchg
xchg
pusha
push
lcall
gs
dec
adc
bound
lea
cs
popl
scas
js
pop
lea
adc
mov
pop
sti
scas
adc
mov
lea
popa
loope
out
jp
dec
adc
adc
jno
movsl
arpl
leave
inc
dec
lods
mov
mov
mov
and
or
or
mov
add
inc
sub
int
lahf
push
adc
jne
jb
sahf
pushf
ds
pusha
inc
and
pop
sti
xorl
je
xchg
icebp
mov
sub
cmp
push
popf
outsb
mov
xor
pop
jnp
dec
mov
push
or
jb
dec
sub
aas
and
out
xor
xor
nop
or
mov
mov
loop
fs
jge
popa
dec
pop
int
sahf
or
jno
and
cli
sti
lods
jg
sbb
lret
xorb
xchg
arpl
in
jge
test
mov
arpl
push
pushf
mov
lea
mov
sub
mov
sub
sub
mov
pop
ss
mov
sub
mov
icebp
jmp
or
enter
fbstp
mov
arpl
fimuls
mov
dec
push
add
push
add
mov
jg
or
jb,pn
fbstp
enter
or
out
call
lret
pop
add
sarl
rcrl
push
sbb
bnd
pop
loope
mov
xchg
pusha
scas
mov
imul
xchg
push
clc
xor
xor
jo
inc
fxch
pop
adc
repnz
add
and
std
cld
dec
dec
nop
mov
addr16
das
dec
push
xor
mov
xor
mov
xchg
cs
xor
jmp
cmovo
pshufw
inc
sbb
shr
nop
sbb
and
std
sar
adc
and
lock
cmp
or
sub
lea
jne
aas
add
inc
enter
sbb
into
jae
push
pop
repnz
shrb
dec
pushf
stos
push
inc
push
pop
sbb
sbbb
xlat
adcl
jb
push
inc
dec
stos
mov
and
test
push
hlt
pop
sub
and
dec
sbb
fistpll
sub
inc
or
sarb
dec
push
pop
test
mov
rcrb
lea
add
sbb
shrb
popf
fistl
bound
mov
movsb
xchg
add
insl
in
xchg
fdivrp
add
stos
jne
push
loopne
cwtl
xchg
adc
xchg
dec
adcb
lods
xor
sub
sbb
aam
popa
shlb
inc
shrb
mov
mov
outsl
loope
add
inc
lret
xor
test
test
or
scas
or
pop
orb
loopne
ret
push
sti
adc
adcb
jnp
sub
or
scas
loop
mov
pushf
pusha
jmp
mov
cli
inc
insl
lock
add
mov
mov
sub
xor
add
or
xor
inc
out
mov
jo
daa
add
add
sbb
mov
add
cmp
xlat
es
push
lret
movd
outsb
loop
fdivrs
lea
mov
sti
pusha
aad
adc
mov
push
cmc
inc
mov
insl
movsl
sbb
pmaxsw
jle
or
sub
sbb
jns
jae
les
push
xor
or
vmovups
cltd
pusha
mov
push
pushf
pop
adc
add
test
fcompl
mov
cltd
xor
rol
adc
mov
lcall
sub
sbbb
inc
je
xchg
outsl
test
push
inc
jne
pop
inc
hlt
ret
sub
or
pop
mov
push
in
xor
add
and
inc
dec
cmp
cmpsb
add
mov
mov
sbb
arpl
add
loop
cld
test
xor
mov
imull
push
icebp
fcompl
frstor
mov
sbb
push
mov
ret
inc
xchg
jno
test
adc
mov
loopne
push
or
or
mov
dec
movsb
lock
dec
mov
push
loope
lret
pop
pop
call
cmp
sbb
ret
sbb
cmp
cmp
xor
add
pop
xchg
stos
ret
push
push
inc
push
cmp
cmp
inc
sahf
or
pop
push
test
and
notl
dec
push
lcall
xlat
pop
and
xor
pop
sub
sbb
bound
sbb
imul
in
shl
add
pop
cmp
and
clc
lods
cld
lea
test
pop
push
jno
sbb
lea
addb
inc
in
mov
sub
sbb
sbb
xor
and
sbb
adc
lea
ret
rorb
nop
mov
imul
popa
xor
mov
xorb
adc
adc
or
dec
push
loope
inc
inc
mov
mov
sub
xor
lahf
movsb
sub
mov
sub
cmp
imul
scas
or
push
and
pop
clc
mov
jg
faddl
mov
cltd
inc
lcall
nop
sub
into
rorb
jg
jae
mov
jne
xor
insl
pop
add
jp
sub
ficoml
xchg
outsl
mov
roll
mov
sbb
mov
sti
mov
loope
test
pop
xor
test
push
cmp
loop
jmp
or
adc
or
push
xor
inc
bound
xchg
mov
loope
sub
dec
and
add
dec
pop
rcrb
cmp
ret
jnp
jne
mov
adc
test
xchg
push
dec
inc
testb
push
out
aaa
jb
lcall
pop
and
push
shll
loopne
adc
add
jb
pop
rcl
pop
stc
and
call
nop
shl
mov
mov
sub
push
daa
loope
push
lcall
inc
mov
jge
dec
lret
repz
daa
xorb
shll
shrb
jnp
es
or
int3
sahf
lods
push
or
inc
mov
fisubl
scas
xor
sbb
push
pop
inc
test
sbb
inc
subb
push
or
sbb
pop
out
pop
orb
mov
add
sub
fs
in
sub
jns
mov
push
add
mov
rolb
xor
xchg
add
pop
out
popf
and
cwtl
popa
add
test
or
out
test
mov
popf
push
cmc
sbb
fisttps
or
data16
sbb
pop
ds
addl
subl
push
xor
je
push
not
dec
das
push
scas
cli
andb
lea
ret
sar
and
enter
xchg
cmp
and
mov
sub
call
pusha
and
insl
jge
in
sub
cmp
pop
daa
rorb
popa
mov
inc
mov
sub
xchg
dec
mov
mov
je
xor
xchg
lods
xor
aaa
xor
pop
or
mov
inc
xor
xlat
lods
cmp
push
mov
mov
je
sub
icebp
add
sub
push
add
cwtl
jp
test
jne
sbb
lcall
inc
push
adc
add
adc
loope
pop
lret
rorb
or
mov
push
dec
xor
icebp
test
jno
sub
lret
test
xchg
arpl
cmpl
add
lds
mov
add
cmp
add
jo
pop
sbb
mov
jo
shl
mov
cmp
ja
dec
and
jnp
mov
shl
fsubrl
mov
mov
loope
xor
lahf
out
dec
mov
inc
inc
je
fstps
pop
add
call
mov
push
add
push
das
sub
outsb
decl
mov
pop
lock
push
pushl
int3
inc
xchg
pop
sub
dec
test
inc
xchg
daa
inc
add
loope
adc
cld
mov
outsl
pop
call
dec
inc
mov
or
cld
mov
int3
xchg
mov
imul
push
push
mov
aas
push
mov
and
add
jmp
push
push
cmp
mov
lea
lds
pop
loope
xchg
inc
clc
cmp
pusha
cld
inc
pop
enter
lds
inc
fadds
add
jb
pushl
push
and
mov
xlat
lret
pop
outsb
lds
sbb
pusha
push
and
not
sbb
add
mov
lss
xor
aaa
testb
nop
mov
lock
jae
adc
arpl
fwait
pushf
ljmp
lods
divb
dec
je
add
jmp
mov
dec
mov
sub
and
mov
mov
pop
movsl
pop
push
fdiv
dec
add
cmp
cmpl
xchg
es
cld
sbb
lds
imul
mulb
or
std
sub
or
fisubrl
inc
call
mov
roll
add
adc
loopne
cmpsb
or
adc
mov
fmull
push
or
clc
fmull
fstps
jl
pop
cmp
sub
rcrl
sub
pushw
mov
push
xor
lret
xchg
sbb
mov
je
add
pop
cld
cmp
cltd
mov
mov
mov
clc
das
jecxz
dec
imul
push
or
xor
dec
pop
int
pop
int
sbb
mov
mov
push
ret
push
pop
dec
shrb
sbb
push
sahf
imul
sub
push
lea
inc
roll
inc
adc
dec
je
movsb
push
add
push
js
les
rorb
dec
xchg
pop
les
movsl
rcr
inc
cwtl
cmp
imulb
filds
arpl
fiaddl
xchg
jno
sbb
mov
or
loopne
in
adc
fildl
jo
mov
xchg
jl
add
sub
shlb
xor
ds
xchg
fs
shll
mov
mov
nop
testl
push
mov
loop
dec
sahf
xlat
xchg
test
adc
dec
push
jo
or
xor
xchg
cmp
pushf
orb
adc
xor
pop
test
adc
or
jle
adc
mov
movsb
dec
js
or
je
lret
xchg
pushf
movsb
add
sbb
insb
inc
leave
push
sub
or
push
push
sbb
and
push
xor
call
fsubs
daa
mov
sub
push
xor
call
xchg
dec
or
cli
fldl
or
jb
clc
sub
sbb
jae
adc
andl
dec
xor
pop
push
insb
pop
inc
add
jle
ljmp
sbb
jbe
in
imul
sbb
ja
push
xchg
enter
mov
adc
adc
movnti
adc
pop
fnstsw
inc
rcrb
insb
pusha
pop
arpl
shr
mov
xlat
loopne
jl
add
hlt
push
xchg
add
inc
xchg
shr
or
test
inc
xchg
movsb
andb
jb
dec
cmp
je
mov
insb
ret
subl
push
cld
lret
push
mov
std
push
xor
inc
in
popa
lods
push
or
sbb
loop
scas
imul
scas
xor
pop
lock
push
lea
jne
sub
stos
inc
xchg
les
dec
cltd
insb
cmpsb
jns
jmp
lret
add
sub
pop
push
das
sbb
add
imul
lock
inc
adc
push
mov
les
inc
or
push
sbb
sbb
or
lods
push
mov
pop
cmp
dec
jmp
push
je
push
pop
and
xor
or
je
adc
push
and
aas
bound
xchg
repnz
cwtl
dec
les
xadd
jmp
inc
fists
cmc
pop
jle
add
push
mov
push
push
inc
and
dec
mov
cltd
les
das
cmp
push
sbb
aas
mov
nop
mov
pop
and
inc
pusha
ret
rcl
adc
test
dec
adc
and
inc
pop
mov
aad
add
popa
inc
inc
pop
jae
mov
push
pop
mov
repnz
mov
adc
mov
rclb
imul
lret
mov
and
push
pop
ljmp
xor
cmp
cmp
icebp
roll
jb
popf
scas
pop
je
xchg
jae
push
and
inc
mov
adc
pop
mov
jb
xchg
stos
xchg
aam
pop
jl
or
jmp
mov
sbb
mov
pop
cmp
das
sbb
lock
push
xchg
adcl
das
inc
push
sub
mov
les
xchg
scas
push
xor
xor
xor
sbb
push
and
push
mov
aad
mov
sub
addb
sbb
jbe
je
xor
popf
push
scas
cmp
inc
add
cmp
jge
imull
imull
insb
pop
dec
inc
test
jo
add
xor
add
mov
aam
sti
daa
add
ret
inc
push
sbb
pop
pop
or
and
inc
push
mov
push
sub
pop
aaa
mov
cmpl
stos
add
adc
shll
cmpsb
das
into
icebp
push
dec
inc
jae
mov
inc
mov
add
test
fcomps
jb
push
fdivl
and
ret
mov
xor
fs
push
enter
into
push
push
ret
ljmp
int
inc
cmp
ljmp
push
lods
dec
jns
adc
test
scas
and
rorl
in
mov
xlat
push
jl
sbb
add
inc
adcb
xchg
mov
add
fldt
mull
add
xor
scas
xor
adc
sbb
rol
adc
cmpsl
push
push
or
ljmp
ljmp
push
decb
fnstenv
xor
sub
gs
dec
jne
mov
movsl
mov
pusha
push
xchg
lea
sub
push
cmpsl
mov
filds
push
cmp
xor
sbb
pop
shl
sbb
dec
inc
testb
insl
inc
sbb
ja
mov
mov
mov
das
jecxz
icebp
push
and
call
mov
dec
cmp
or
mov
mov
add
add
pusha
sub
sbb
jge
add
jbe
repnz
inc
pop
mov
inc
andb
out
push
imul
mov
push
jo
push
push
push
pop
and
or
pop
sub
jmp
je
sbb
mov
mov
jnp
popf
xor
jbe
pop
adc
xor
jle
fcomps
inc
dec
jbe
insl
jne
mov
es
sbb
inc
push
adc
nop
test
add
clc
or
inc
add
inc
aam
xchg
stc
sub
adc
orb
xchg
cmpb
add
mov
pop
mov
cltd
sbb
push
push
xchg
les
xchg
dec
and
mov
popf
xchg
je
jle
sub
and
add
in
andl
add
adc
xchg
jmp
inc
jge
dec
cmp
adc
mov
and
mov
outsl
bound
sbb
dec
and
sub
sbb
dec
mov
fdivr
popa
sub
ss
je
out
mov
mov
sbb
imul
addl
jne
jo
fwait
mov
mov
ret
jo
mov
je
jmp
lods
and
out
jnp
xor
jle
mov
inc
inc
adc
and
cmp
xchg
js
out
or
jl
xchg
dec
mov
xor
pop
adc
jp
pop
push
filds
sub
sbb
inc
and
add
loopne
testb
push
pop
adc
jbe
insb
xor
adc
outsl
xor
mov
mov
mov
sar
fnstenv
fldt
add
mov
out
and
add
push
jmp
mov
loope
pop
mov
stc
outsb
add
sbb
aam
imul
cmpb
push
jo
fcomps
shr
les
xchg
inc
xchg
dec
test
lcall
inc
and
shll
ds
or
mov
or
daa
cmp
push
fnstcw
or
inc
inc
rolb
xchg
test
mov
sub
add
dec
sbb
ret
sub
pop
add
loopne
lock
xor
sar
mov
sbb
pop
shrl
or
jmp
std
out
add
stos
add
mov
mov
stos
call
mov
lock
ja
cmp
push
bound
add
test
push
jnp
dec
sub
repz
jne
or
adcl
repnz
mov
push
xchg
icebp
sbb
xchg
cmpsb
xchg
test
test
inc
inc
xchg
popa
pop
inc
jo
into
lods
sarb
mov
or
sub
fldl
xor
push
mov
inc
mov
hlt
add
bnd
push
loope
inc
pmovmskb
rcrl
mov
and
loope
dec
cmp
fists
lea
jo
push
loopne
pusha
adc
adc
xor
pop
fbld
cmp
rorl
sbb
in
sahf
out
cmp
push
hlt
and
xor
push
mov
fildll
loopne
test
add
sbb
push
or
pop
add
mov
xor
cld
cld
inc
cmc
in
inc
mov
cmp
sbb
sub
push
cmp
or
adc
add
add
add
adc
sub
mov
jmp
dec
ljmp
out
mov
or
repnz
fisubrl
pop
mov
stos
mov
shlb
js
pop
push
jmp
xor
pop
inc
add
jl
inc
adc
push
orl
scas
push
test
pop
push
xor
pop
lock
daa
push
and
add
lods
dec
jo
sub
mov
mov
mov
mov
mov
and
std
xchg
ds
movsl
pop
and
adc
push
or
cmp
test
enter
adc
sbb
leave
and
adc
inc
push
enter
push
inc
cmpsl
loopne
hlt
pusha
adcl
xchg
pop
ret
addl
out
push
push
addr16
xchg
and
in
test
andb
pop
pop
adc
push
lcall
pop
rcrb
jmp
sub
or
jae
jg
add
inc
cmpsb
sbb
push
das
and
sub
imulb
add
adc
aad
sub
cmp
loope
or
daa
or
push
or
sbb
push
cmpb
jnp
add
mov
pop
aaa
and
or
jne
incl
loope
adc
and
xchg
pop
cmp
push
mov
jge
sbb
mov
mov
sahf
inc
mov
outsb
xchg
fdiv
pop
inc
cmp
adc
data16
fs
lea
aad
ljmp
adc
test
xchg
mov
mov
xor
sbb
and
push
das
inc
push
jo
shr
add
lods
add
out
xor
mov
add
adc
add
pop
sub
fs
ljmp
jae
scas
add
mov
pop
pop
mov
arpl
add
neg
push
mov
pop
cli
lea
add
push
xchg
imul
sub
push
inc
dec
add
cmp
push
ljmp
in
or
dec
sub
cmp
jo
je
and
sarl
push
decl
shrl
adc
stos
sbb
or
push
loopne
push
sub
mov
or
adc
lret
adc
sbb
dec
jb
and
mov
mov
push
adc
push
and
stc
add
loope
rorb
mov
mov
sti
jbe
insl
jno
imul
xchg
push
xchg
push
jo
sbb
popl
jl
pop
icebp
shlb
add
inc
inc
lock
loopne
pop
pop
jo
dec
push
add
jl
loope
inc
sbb
cmp
sub
cmp
incl
stc
shrb
addr16
sub
push
fdivr
adc
sti
pop
add
push
nop
mov
mov
cmp
cmp
sbbl
dec
add
pop
push
or
rcrb
or
iret
loope
aam
sahf
les
push
ret
dec
pop
xor
cmp
mov
addr16
aaa
xchg
xor
push
sbb
pop
mov
cli
rclb
cmp
mov
sbb
lock
mov
mov
jge
add
dec
and
or
or
lret
sbb
xchg
ja
add
mov
ret
mov
sub
jo
or
into
push
out
add
and
add
push
xor
sbb
dec
cmp
inc
nop
rclb
outsb
mov
add
dec
lcall
push
sbb
jl
lcall
xor
mov
rol
inc
push
jge
push
cwtl
outsb
add
aaa
dec
xchg
push
add
inc
add
je
and
scas
add
mov
movsb
pushf
add
xor
sbb
add
fldenv
test
fsubrs
jmp
shrl
xchg
pop
lods
push
call
cli
pop
push
out
stc
push
add
adc
fstps
sbb
enter
xchg
lock
mov
clc
out
add
dec
dec
outsl
mov
inc
lea
mov
sub
fildl
mov
divl
shl
roll
lret
dec
jl
roll
fwait
inc
push
sbb
push
push
lea
sub
mov
in
repnz
pop
ljmp
xchg
je
cmp
inc
mov
aaa
jge
cmp
and
sbb
jnp
aas
xor
or
ror
movsb
push
pushf
lods
or
mov
ret
add
push
lds
rol
adc
jg
imul
mov
sbb
ret
test
shl
mov
or
pop
and
push
xor
insb
imul
cmc
add
sbb
stc
es
int3
ret
out
imul
xchg
ljmp
pop
pop
mov
aad
cmp
shrb
sbbl
or
cwtl
loopne
adc
fistpl
inc
add
ljmp
inc
notl
xor
pop
mov
push
mov
test
ja
dec
aam
and
pushf
add
dec
cli
xchg
sbb
jnp
mov
leave
cmp
pushl
and
lret
or
stos
add
outsb
push
jo
data16
out
lahf
outsl
push
sub
push
push
lods
sbb
hlt
pop
xor
jbe
cmp
insb
push
mov
jmp
push
and
aam
sbb
inc
orb
inc
push
stc
mov
push
out
sub
jnp
mov
sub
mov
push
mov
sbb
add
sub
int
lods
and
sti
hlt
sbb
add
jne
call
test
bound
inc
das
loopne
lods
cmp
pop
outsb
sub
lock
pusha
jp
sar
std
add
mov
movsl
decl
and
dec
pop
cwtl
or
fs
popf
ss
jnp
add
dec
push
inc
loop
add
sbb
je
test
mov
rcrl
mov
xor
sub
sub
adc
cs
dec
push
mov
jno
loope
in
into
sarl
test
adc
hlt
into
loopne
mov
insl
shl
mov
cld
insb
jge
inc
lret
mov
icebp
fadds
popf
sub
add
and
loopne
and
mov
cmp
or
jo
xor
inc
pop
jg
outsl
sbb
add
inc
aaa
inc
aaa
pop
xor
sbb
sar
mov
jl
adc
stos
adc
sar
sub
fldt
cmp
or
jmp
adc
add
jno
dec
mull
or
jo
ret
cli
inc
and
add
cld
cmpsl
add
data16
loop
scas
rolb
sbb
rcll
push
aad
push
shrb
pop
lods
add
cli
notl
ficomps
sbb
pop
inc
fimuls
int
pop
jp
xchg
push
push
or
jmp
jns
aaa
push
cld
jg
sub
jmp
cmp
jle
cmc
mull
sub
iret
arpl
cmp
mov
je
or
inc
xor
push
outsl
test
cmp
jg,pn
call
movsl
ss
pop
cli
sub
sbb
arpl
xor
add
add
lret
frstor
adc
dec
and
add
mov
cltd
sbb
add
or
push
and
mov
jg
cmp
mov
or
inc
inc
imul
lods
lret
and
out
cmp
sub
push
mov
push
mov
stos
cmp
loop
adc
loope
add
dec
enter
and
mov
mov
dec
mov
or
test
aam
mov
js
and
js
mov
inc
pushf
add
mov
push
fildll
add
or
lea
cmp
dec
or
clc
dec
mov
mov
sub
loope,pt
inc
dec
lret
and
pusha
jge
mov
call
mov
leave
jle
push
mov
jbe
outsb
and
cmpsl
lock
dec
jne
imul
and
daa
mov
xor
cmp
arpl
bound
dec
mov
jno
or
inc
pusha
mov
sub
loope
pop
cmp
push
arpl
test
mov
add
aaa
flds
cmp
cmp
sbb
jmp
sbb
or
mov
add
push
sbb
rol
sub
sub
sub
movlps
mov
les
je
je
adc
dec
jo
xor
mov
mov
dec
std
dec
push
ud0
iret
add
dec
add
inc
loop
or
and
or
sub
ret
push
push
xor
and
add
cs
sbb
mov
pop
dec
aaa
and
adc
inc
xor
push
pushf
push
xor
cs
and
add
add
sbb
movsb
imul
bound
adc
cmp
pop
cli
push
lock
mov
mov
inc
adc
cltd
incb
pop
sub
adc
mov
enter
xchg
enter
test
lcall
add
push
cmp
pop
dec
cmp
add
sbb
dec
mov
xchg
and
js
sub
mov
dec
sbb
add
stc
pushf
fnstenv
adc
add
clc
outsb
pop
push
jp
lock
push
mov
jb
xchg
xchg
lcall
sbb
sbb
dec
xlat
push
inc
les
pop
fs
jns
sub
daa
and
add
rolb
fcomps
and
je
dec
adc
xchg
stos
jo
xor
cmp
xor
push
mov
cmp
pop
sbb
mov
or
jbe
push
dec
daa
adc
or
pop
sahf
lret
sbb
add
pop
add
mov
std
adc
jg
test
push
daa
test
sbb
mov
mov
jo
int
adc
push
xor
test
outsl
es
sub
filds
push
pop
jbe
aas
adc
and
ss
fcoml
mov
and
and
jmp
adc
mov
sub
fnstsw
scas
mov
cmpb
fbld
imul
int3
js
inc
fisubl
push
adc
inc
add
pop
mov
cmp
jl
jno
mov
vprotb
sub
inc
push
inc
sbbb
dec
std
mov
inc
mov
xor
loope
adc
add
hlt
inc
sub
loop
mov
ret
jle
addl
or
adc
loope
push
pop
or
sub
jecxz
mov
jmp
sbb
pop
push
add
fldl
add
sbb
cmpsb
mov
pop
inc
push
push
mov
inc
add
sbb
pop
sub
and
mov
fstps
mov
or
or
clc
adc
dec
divl
jne
jg
inc
shr
push
add
shl
xchg
sbb
mov
aaa
rol
sub
dec
ffreep
aad
ret
adc
rcr
stc
add
inc
cmp
pop
cmp
xor
jp
adc
push
adc
jle
aam
loopne
jmp
or
es
or
inc
or
in
pop
add
div
or
orl
adc
mov
add
sbb
or
rorl
or
lds
jo
dec
sub
jg
xor
pop
pop
iret
shl
aam
subb
cli
jg
push
cmp
inc
push
repnz
push
imul
into
movsl
loope
or
movsl
js
inc
out
sub
xor
scas
cmp
inc
repz
jbe
add
testl
pushf
lods
stos
xor
loopne
mov
pop
pusha
icebp
in
dec
inc
jecxz
sub
adc
hlt
stc
dec
popa
cli
fcmovnbe
fldl
mov
out
sub
xor
adc
mov
ss
or
pmulhuw
add
lock
shll
in
in
sub
addb
or
loope
add
dec
jg
cmp
sbb
adc
lret
and
mov
sub
je
inc
mov
add
enter
fdivrs
sub
jmp
jg
aad
sub
in
jl
out
sbb
push
add
filds
inc
push
add
clc
mov
mov
pushf
and
lea
outsb
cmpb
adcl
insb
jmp
pushf
add
lods
or
fiadds
jnp
push
loopne
int3
push
sbb
mov
lret
adc
sub
cmp
add
js
push
jmp
sarb
clc
xor
or
std
add
lea
shl
add
lcall
add
jg
cmc
aaa
adc
dec
je
dec
jne
adc
add
or
inc
push
add
sub
in
xchg
sub
js
mov
push
imul
push
js
xchg
push
or
add
push
pop
add
popf
repnz
mov
movl
mov
add
pop
and
inc
or
adc
and
dec
add
pop
cld
mov
xchg
repnz
dec
pop
ja
sbb
sbb
call
xchg
and
test
inc
test
jecxz
rolb
sub
or
and
push
xchg
mov
std
enter
jmp
div
jae
add
fsubrp
enter
inc
mov
mov
fdiv
push
cmpsb
cmp
dec
sub
add
sub
add
sbb
mov
mov
push
dec
mov
lock
sbb
add
psubsw
cmp
inc
add
mov
or
imull
sub
and
add
pop
daa
pushf
and
dec
jne
jne
daa
jno
xchg
mov
mov
lock
sti
jne
jbe
aaa
imul
inc
pop
shlb
and
mov
mov
ds
jae
jp
or
les
das
add
cmp
cmc
adc
daa
into
popf
test
push
add
sbb
and
push
or
inc
mov
pop
inc
jno
and
pop
enter
add
rcl
les
rcll
and
jp
cli
addr16
jle
add
xchg
sbb
insb
dec
jge
nop
clc
or
ret
and
jb
outsl
and
push
insb
cmpsb
js
scas
adc
jg
xchg
or
jmp
cmpsl
roll
addr16
push
andl
mov
addr16
xor
cmp
jo
sbb
je
ret
jg
stos
ret
outsl
mov
sub
std
mov
call
xor
je
xor
inc
fcoml
mov
or
rorl
inc
movsb
es
lods
jge
pop
dec
dec
or
lcall
dec
adc
pop
sbb
out
shll
jo
push
push
addb
subl
mov
push
js
push
in
es
pop
sbb
add
outsb
lret
add
enter
fsubs
dec
mov
jb
lcall
fnsave
push
pusha
scas
xchg
subl
mov
mov
dec
inc
ret
dec
jne
in
sbb
add
add
jle
outsb
and
xchg
jecxz
mov
roll
andl
jne
int
cmpl
xor
and
dec
or
sub
ret
push
out
imul
pop
daa
and
sub
mov
imul
jae
jl
jmp
cmp
and
adc
adc
mov
or
fwait
pop
cli
repnz
aas
cmp
xor
sahf
enter
inc
xchg
or
or
int
sbb
or
loope
jo
adc
iret
dec
push
push
jmp
pop
dec
js
adc
push
sbb
sbb
rorl
xor
jmp
int3
test
adc
ret
cmp
orb
add
rorb
push
adc
and
je
push
outsl
ss
mov
sub
jmp
loopne
xchg
jmp
push
call
fwait
jle
int
lret
mov
fstpt
sub
push
mov
pop
out
jo
cmp
inc
or
add
xchg
mov
sbb
mov
adc
push
leave
mov
dec
lock
bound
out
push
lea
and
addr16
inc
push
lea
inc
or
lea
test
xor
out
addl
mov
inc
adc
sub
inc
push
dec
adc
movsl
lret
push
cwtl
aas
push
mov
inc
inc
sub
dec
sbb
mov
add
add
outsl
push
scas
add
add
js
pop
rclb
jno
push
mov
loopne
adc
xchg
inc
shlb
add
adc
inc
push
js
push
fsubl
jbe
test
jne
sbb
cld
ja
jnp
fwait
or
nop
aad
push
rcl
push
pop
add
cli
push
les
lea
xor
sbb
mov
sub
xchg
sbb
xor
out
test
push
jg
call
adc
out
pop
inc
lock
leave
pop
add
push
add
adc
shl
sarb
and
test
add
push
jl
add
mov
inc
or
dec
fs
xchg
stos
adc
or
mov
loopne
imul
enter
push
push
js
and
daa
mov
cmp
xorl
jne
adcl
sub
jecxz
rol
add
addb
lahf
and
dec
je
test
cmp
aas
sbb
or
or
add
ja
add
inc
cwtl
push
aas
addr16
pop
mov
inc
jae
push
ret
popf
movb
call
mov
dec
aad
mov
or
xchg
mov
sub
cmpl
test
inc
add
add
lock
mov
sub
sbb
inc
mov
push
mov
dec
cltd
test
inc
out
adc
pop
or
loopne
cmp
and
push
mov
mov
imul
dec
xor
mov
xchg
fwait
aas
push
sub
mov
or
imul
adc
enter
shll
inc
sub
push
in
mov
adc
or
mov
ja
add
js
mov
ret
xchg
mul
push
lea
repnz
cmp
xor
push
ret
jg
sub
lea
aas
mov
inc
sbb
cmpsb
jbe
lock
dec
xor
xchg
sbb
cli
push
pop
in
lsl
mov
mov
mov
ret
inc
inc
or
push
push
mov
iret
xorb
jl
push
pop
mov
insl
adc
sbb
push
cwtl
loope
arpl
les
dec
push
ja
xchg
pop
dec
jo
icebp
inc
push
inc
inc
sbb
mov
sub
outsb
xor
jo
mov
pop
repz
lods
daa
mov
sub
or
pop
stos
daa
mov
xor
std
mov
push
sbb
jb
shl
add
add
push
inc
inc
push
jmp
idiv
std
add
popf
sbb
cmp
xor
sbb
push
mov
lock
jae
pop
fisttpl
dec
lret
inc
xor
jo
loope
sbb
add
orl
pop
test
ret
mov
push
pop
or
cmp
bound
test
repnz
ret
sbb
adc
mov
add
js
int
inc
mov
test
or
mov
cwtl
enter
dec
sub
jecxz
push
imul
mov
cmp
add
rol
testb
jle
je,pn
inc
movsl
adc
cmpsb
je
adc
mov
daa
xor
xchg
adc
jmp
loopne
lock
iret
mov
or
fldl
mov
xchg
cmp
outsb
pop
je
or
pop
inc
lcall
cmp
or
jo
js
dec
cmp
inc
outsl
adc
and
imul
test
jle
rcrb
inc
pusha
xor
int3
add
pop
adc
add
or
add
mov
insl
dec
pop
and
ljmp
mov
mov
lret
mov
rcll
dec
sti
arpl
dec
imul
inc
mov
mov
cmp
lods
pop
in
test
sti
ljmp
fldenv
mov
sub
fistpll
sub
pop
lcall
push
xchg
pop
or
sbb
lret
adc
js
arpl
xor
subb
andl
mov
xchg
mov
pushf
outsb
adc
jnp
data16
inc
adc
sub
xor
and
inc
insb
stc
lods
jle
xor
incb
div
pushf
movsl
cmp
sbb
rolb
cmpb
add
ret
push
push
pop
dec
mov
inc
sub
jmp
xchg
mov
adc
loopne
jp
xor
or
jp
xor
xor
cld
stos
inc
sbb
addb
add
push
or
addb
lock
adc
lock
jg
push
lea
or
and
call
jbe
int
push
pusha
lea
dec
clc
or
sub
xchg
mov
leave
movsl
jbe
mov
lcall
scas
cmpsb
or
lea
fcmove
scas
xor
sub
push
fbstp
push
push
sbb
orb
and
fstps
sbb
jo
mov
pop
mov
call
gs
lea
xor
add
adc
or
adc
and
scas
and
ljmp
out
inc
push
sbb
shlb
jne,pt
xchg
leave
adc
test
movsb
or
or
test
lods
adc
add
jmp
call
shrb
adc
and
xchg
div
sbb
imul
add
cmpl
dec
cmp
imul
adc
clc
push
cmc
aaa
pop
ret
sub
add
fsts
pusha
xor
cwtl
les
inc
sti
cmp
fmuls
mov
add
mov
sar
sub
cmpsb
lea
sarb
pushf
cmp
vcvtsd2si
or
dec
mov
mov
mov
mov
stc
cltd
movb
decl
dec
jns
pop
fdivs
ss
push
test
pop
test
mov
xor
inc
dec
push
and
cmp
mov
push
clc
push
das
add
add
push
dec
inc
or
out
push
call
pop
xor
sub
inc
and
or
or
mov
inc
daa
mov
and
jns
add
sub
add
imull
push
pop
adc
iret
cmpsb
xor
ljmp
adc
adc
mov
sub
ljmp
inc
mov
rol
in
clc
cs
jmp
rorl
in
mov
sbb
movsb
xchg
fs
add
mov
mov
insb
sbb
cmp
call
aaa
add
sbb
or
push
and
xor
dec
pop
cmp
sbb
mov
fstpl
cmp
daa
out
data16
idivl
fdivs
inc
or
sbb
inc
movsl
arpl
test
push
jp
push
pop
or
lea
jmp
cmp
adc
adc
sbb
jecxz
mov
xchg
movsb
adc
fists
dec
pop
scas
push
pop
lea
out
jge
add
inc
and
push
bound
shr
jecxz
cmp
sarl
pop
add
add
outsl
sub
movb
cs
out
rorb
ret
xor
and
sub
lock
lret
scas
mov
mov
push
int
push
jb
and
pusha
xadd
mov
add
inc
mov
sbb
push
push
cmpsl
bnd
pop
sbb
sub
and
cmp
xor
xchg
sti
jge
out
mov
pop
pusha
adc
or
inc
rcrb
push
fisttpl
scas
cmp
out
and
add
aam
rorb
mov
adcb
jbe
pop
xorb
pop
and
testl
pop
movsb
sub
cltd
jns
add
sub
pusha
sbb
repz
xchg
push
sahf
push
shl
mov
lret
push
or
inc
push
sub
or
movsl
and
outsb
xor
out
push
or
or
mov
xorb
orb
adc
pusha
and
popf
call
lods
or
or
testb
add
sub
orb
imull
mov
sub
add
pop
adc
add
pop
jg
sub
subb
adc
fbstp
inc
setbe
out
rcrb
test
jae
or
jmp
mov
adc
cwtl
xor
scas
sub
clc
lret
jl
and
push
cwtl
rclb
push
push
push
mov
push
mov
sub
mov
cmp
jmp
dec
jb
out
add
test
stc
test
cmp
and
mov
es
lods
pop
or
leave
popa
xchg
push
sbb
dec
sbb
pop
push
mov
fwait
lcall
pop
push
adc
sbb
push
scas
sarb
ljmp
out
out
adc
leave
clc
sbb
adc
mov
add
shll
push
jo
cli
add
aad
mov
and
nop
rcrl
mov
jl
pop
sub
loope
stc
push
lret
and
jne
xor
cltd
xor
mov
int
sub
fmull
sbb
data16
add
lea
sahf
loop
test
xchg
cmp
add
xor
out
outsb
pop
mov
cli
sub
lahf
push
sub
jne
shl
std
dec
sbb
pop
xchg
mov
mul
andl
or
mov
ss
lcall
pop
jbe
data16
cmp
pop
inc
or
adc
dec
mov
pop
add
jg
add
repnz
fbstp
xchg
sub
sub
daa
sar
sub
in
mov
jl
dec
cmp
xor
shlb
and
lock
inc
and
fimull
mov
jmp
pop
inc
inc
inc
sub
cwtl
mov
pop
or
cmp
daa
iret
add
and
gs
push
js
and
inc
adc
shr
add
push
or
or
divl
xor
mov
or
adc
push
and
pusha
fsts
lcall
push
sti
mov
add
pop
imul
lcall
in
jno
adc
fsts
lcall
inc
jp
mov
xor
rcr
push
xor
loope
out
mov
fadds
fsubs
shrb
les
jge
cmpsl
xor
bound
daa
and
fadd
mov
pop
inc
inc
and
mov
clc
inc
pusha
add
sbb
adc
xchg
push
sbb
and
sub
sbb
add
out
sbb
push
push
or
stos
adc
pushf
in
push
loopne
dec
fwait
adc
shrl
test
adc
mov
movsb
fdivrl
mov
fnstcw
cmp
cmc
sbb
and
add
sbb
test
lds
in
add
mov
adc
sahf
pop
pusha
xlat
mov
dec
add
add
mov
inc
imul
jo
scas
or
or
inc
clc
or
fsubs
test
and
sub
adc
xchg
mov
imul
mov
popf
scas
add
data16
cld
jae
push
sbb
adc
sbb
shll
mov
bound
loope
jmp
stos
or
push
xchg
scas
stos
xchg
sbb
lds
or
pop
cmp
popa
xor
icebp
shll
fwait
cmpl
lds
xlat
and
lods
or
add
sbb
xor
jecxz
cmpsl
add
xor
inc
dec
repnz
mov
sub
subl
jno
adc
fs
xor
popa
test
ds
push
mov
loope
iret
ficompl
mov
fmul
or
inc
pop
pop
adc
ljmp
mov
xor
rclb
inc
pushf
cmpsl
adc
das
cmpsl
or
fsubrs
sbb
push
push
lock
sub
add
push
mov
mov
mov
shlb
icebp
adc
push
inc
repnz
mov
jle
idivb
add
lcall
shlb
inc
cmp
out
int
js
or
shl
lea
add
pop
outsl
push
sub
jo
mov
lea
inc
push
mov
sti
lret
and
adc
imul
rolb
sbb
int
mov
ljmp
push
lock
cmc
pop
add
jecxz
shll
add
dec
xor
pop
dec
and
in
add
arpl
rolb
add
jo
push
call
inc
insb
shlb
ss
add
rcrl
dec
push
push
push
push
or
aam
addl
test
inc
and
std
mov
out
lea
jb
cmp
cli
or
and
push
aam
adc
orb
and
pop
insl
outsl
jg
mov
mov
fwait
adc
pop
mov
mov
les
adc
xor
inc
cwtl
test
jmp
or
std
lret
and
ret
repz
sbb
push
add
adc
fdivl
and
subb
stos
add
or
fstp
mov
dec
sub
and
rorl
ret
or
das
push
pusha
sahf
test
add
or
add
dec
pop
out
aam
mov
sub
cli
cmp
inc
out
sub
mov
dec
and
push
and
ss
mov
fistl
dec
add
dec
pop
add
lods
sub
add
lds
inc
packsswb
jle
cli
ret
add
adc
xor
adc
sub
setp
stos
xor
cmp
jnp
xlat
push
sbb
cmpl
cli
loope
cmp
push
add
cld
xchg
lds
dec
push
and
push
dec
mov
dec
push
mov
add
push
mov
cmpsl
xor
pop
mov
orb
mov
adc
mov
lcall
add
or
out
outsl
push
adc
mov
or
or
loopne
push
inc
and
push
jle
out
or
sbb
mov
in
adc
lods
repnz
add
loopne
push
imul
jl
add
aad
rorb
in
test
mov
or
and
repnz
pop
aaa
imul
aad
mov
fisubl
mov
loopne
push
and
pop
add
push
adc
fstpl
sbb
test
or
push
shrb
or
lret
add
test
in
cs
pop
add
addr16
pop
lods
stos
icebp
add
jno
push
ret
lods
ss
or
add
or
adc
orb
jmp
sub
jne
pop
add
cmp
icebp
sbb
xor
cmp
sbb
scas
dec
lcall
movsb
cmp
repz
sbbb
fcmovu
cmp
jmp
clc
adc
mov
movsb
sbb
xor
imul
orl
aam
xchg
inc
ret
rol
mov
mov
bound
sahf
orb
mov
xchg
add
test
outsl
imul
add
loopne
jmp
jo
xchg
mov
sbb
or
mov
mov
je
sahf
adc
or
out
inc
sbb
cmpsb
jp
mov
push
movsl
pop
jbe
xor
and
push
pop
insl
add
into
arpl
lods
mov
lock
xor
adc
push
push
dec
adc
insl
pop
stc
dec
cwtl
add
pop
enter
push
ficoml
mov
dec
cmpb
mov
mov
dec
nop
mov
scas
bound
add
jecxz
pushl
mov
pusha
dec
xchg
dec
fsubl
cltd
js
mov
pushf
and
and
aas
loop
sub
sub
ficoml
inc
repnz
les
sub
push
cmp
out
or
add
or
mov
or
xor
lea
pop
add
adc
jo
xchg
minps
daa
inc
mov
xchg
test
mov
and
mov
js
mov
xchg
push
add
lods
push
dec
jmp
lret
dec
and
push
add
add
pop
das
push
push
aam
mov
pop
or
into
fcoml
pop
pop
dec
pop
enter
or
jmp
mov
cli
cmp
xchg
inc
xor
adc
negb
sbb
jbe
je
xor
or
aas
adc
adc
loop
mov
pop
nop
push
sub
loopne
sbb
sbb
nop
hlt
fstps
fbld
daa
lcall
insl
std
pcmpgtw
push
mov
repnz
fisubs
sbb
pushf
mov
lods
mov
stos
stos
mov
mov
add
pop
sub
or
pop
mov
pop
outsb
or
mov
jmp
jo
or
repnz
xchg
dec
push
in
mov
mov
dec
cmpsl
jl
nop
aad
sahf
jno
add
mov
or
push
out
sbb
inc
inc
outsb
add
add
sbb
jnp
sub
test
lea
add
mov
fsubrl
sbb
enter
pushf
pop
add
test
enter
jle
mov
incl
sbb
inc
or
cltd
mov
jl
repnz
pop
adc
insb
insl
adcb
mov
xchg
inc
stos
fnstsw
push
push
adc
mov
pop
and
lret
xlat
cmpsl
imul
out
sbb
outsl
inc
icebp
xchg
and
subb
xchg
ja
shl
mov
cmpsl
mov
or
dec
imul
pop
shrb
pop
mov
lahf
imul
adc
or
or
pop
icebp
lahf
rcll
or
adc
in
or
ja
int3
pop
movl
xchg
pop
cwtl
call
mov
ljmp
xor
mov
fistpl
nop
adc
pushf
inc
ss
add
or
pop
jg
xchg
adc
sub
or
pop
add
push
push
add
dec
add
jmp
xchg
mov
inc
rol
push
jle
jns
cltd
jp
std
inc
das
add
scas
push
sar
push
pop
hlt
mov
in
push
push
js
push
add
sahf
lret
adc
and
test
or
or
addl
sub
dec
fisttpll
mov
push
mov
sbb
clc
cmp
push
or
out
adc
mov
sub
js
adc
leave
loopne
adc
mov
inc
jne
inc
push
sbb
push
push
push
gs
sbb
aam
sub
mull
inc
xchg
test
cmp
xchg
movsb
mov
fsubrs
mov
mov
repnz
into
mov
inc
push
and
xchg
int
lock
or
test
nop
mov
xchg
or
fstl
mov
push
in
jno
jne
cli
add
mov
ljmp
pop
sti
add
or
sub
mov
inc
mov
mov
test
add
inc
or
clc
in
mov
inc
xor
push
push
cs
fdecstp
and
inc
sub
lcall
mov
xor
push
mov
and
addr16
jl
mov
push
lret
rorb
sbb
sbb
xchg
dec
or
push
mov
aas
sbb
add
std
add
adc
inc
dec
push
jg
cmp
sub
sbb
sbb
push
add
and
push
dec
or
inc
test
inc
or
push
test
xor
addr16
jmp
jp
dec
out
pop
stc
or
jns
std
dec
add
insb
loope
push
inc
fcoml
adc
sbb
and
cmp
leave
and
push
mov
pop
add
sahf
lods
or
mov
mov
pushf
hlt
dec
movsl
sub
sbb
add
mov
cs
xor
repz
mov
dec
lahf
jl
or
sahf
sti
pop
fists
dec
pop
xchg
sbb
xor
mov
into
ret
enter
sub
shll
jg
inc
adc
push
mov
stos
imul
roll
adc
adc
push
cmp
incl
std
nop
fiaddl
cs
push
adc
in
lods
mov
or
or
cmp
jl
roll
dec
arpl
adc
lret
adc
movb
mov
xchg
fadds
push
shll
adc
jmp
ss
sbb
jmp
xchg
sub
insb
insb
mov
mov
ds
sbb
jl
movsl
and
adc
jnp
pop
rcrb
push
mov
adc
add
dec
dec
fists
les
inc
and
nop
sbb
push
data16
mov
test
insb
sub
xchg
sub
xor
sub
rcrl
sub
pop
and
add
cmp
jmp
stos
cmp
dec
push
sub
dec
fcomps
call
push
mov
sbb
pop
jno
sarb
fsubrp
pop
sarb
sub
clc
push
xchg
jne
cli
push
lea
mov
mov
inc
shll
jl
adc
jl
pop
sub
push
es
add
stos
enter
push
and
sub
push
test
cmp
nop
jg
or
and
jge
or
cmp
push
rcl
sbb
or
inc
sbb
adc
pop
mov
popf
iret
pop
add
outsl
dec
andl
rcrl
icebp
jo
les
and
loop
lea
sub
in
decl
adc
sbb
mov
sbb
xor
jbe
push
xor
mov
loope
mov
fstl
xchg
inc
cmp
mov
enter
add
sbb
add
xchg
dec
inc
xor
pop
pop
and
adc
ret
rorb
pop
or
int
ds
clc
hlt
fcmovnb
pop
sbb
or
adc
mov
adcl
arpl
bound
push
dec
pusha
pop
pop
inc
arpl
xor
pop
jns
ret
pusha
mov
push
pop
and
adc
dec
stos
inc
fidivl
scas
dec
add
cmp
and
push
or
sub
in
or
inc
push
loopne
dec
mov
je
dec
je
cwtl
scas
sarl
sbb
inc
add
orb
xchg
mov
jl
cmp
rcrb
push
outsl
aad
xor
push
movsb
xor
add
inc
mov
jo
orl
sub
sbb
pusha
inc
and
cmp
and
dec
insl
push
orb
adc
mov
adcl
mov
add
ret
or
add
mov
in
dec
cli
mov
nop
adc
push
sarb
cmpb
add
incb
stos
or
sarb
sahf
in
test
pushl
ja
lea
sti
mov
je
mov
sub
sbb
push
cmpsl
mov
cmp
les
sub
push
ja
jo
lods
lcall
fstp
xor
shlb
sahf
xchg
mov
add
xchg
popl
or
inc
inc
repnz
mov
mov
icebp
inc
xor
xchg
xor
roll
and
sub
pushf
jae
lods
pop
shlb
pop
add
xchg
loopne
cld
push
push
mov
adc
push
sbb
movsl
sbb
pop
test
add
adc
xchg
adc
mov
bound
add
or
add
cmp
in
xchg
xchg
xchg
or
or
inc
orb
mov
or
gs
stc
xchg
rol
pop
shlb
cmp
xchg
push
icebp
inc
xchg
out
rolb
sub
push
cmp
mov
push
push
sbb
shlb
xchg
cmp
mov
add
adc
dec
mov
add
loopne
test
cmp
mov
push
loope
leave
jns
mov
aas
mov
cmp
fs
or
lods
leave
sub
roll
or
push
xor
imul
scas
psrld
pop
testb
inc
push
je
mov
pop
push
nopl
mov
daa
out
or
xor
leave
adc
xor
daa
sbbl
ror
and
jge
scas
sub
in
or
mov
cmpsl
nop
iret
lcall
test
in
lahf
clc
js
dec
test
add
dec
adc
jbe
xor
mov
fsubrp
adc
add
add
cmp
jmp
inc
push
int3
jp
inc
in
cmp
cmp
adc
mov
icebp
into
and
mov
lahf
push
mov
faddl
and
mov
dec
daa
dec
lods
mov
mov
fwait
in
dec
push
inc
loop
js
add
orb
test
push
or
addr16
in
pop
push
push
inc
mov
lock
sar
insl
insb
dec
or
mov
push
push
inc
aad
sub
push
adc
adc
data16
cmp
mov
faddl
lock
and
test
push
andl
movsb
sub
pusha
adc
fisttpll
rorl
jmp
cmp
jmp
mov
je
in
cmp
push
adc
jl
and
sbb
je
stc
or
aas
shrb
add
push
cmp
movb
jne
mov
sbb
aam
xchg
fsubrp
adc
or
push
pop
sbb
std
xchg
push
adc
sbb
pop
imul
std
mov
or
lock
lret
add
mov
or
mov
stos
adc
and
aaa
test
xchg
sbb
sub
je
mov
jp
xor
clc
xor
pop
adc
daa
dec
or
dec
popa
imul
cmp
cs
dec
add
inc
insl
mov
pop
sbb
inc
loop
dec
xchg
dec
icebp
fstps
pop
pop
mov
sbb
or
push
xchg
push
add
xchg
or
cld
or
fsubrs
clc
mov
cmpl
or
add
mov
arpl
imul
adc
inc
mov
push
xchg
or
test
arpl
push
loopne
push
sbb
xchg
mov
data16
mov
inc
movsl
sub
ss
ja
testb
int3
jno
repz
push
insl
insl
idivb
ret
jbe
lea
sahf
or
add
jae
jne
ret
inc
test
dec
bswap
adc
les
mov
dec
mov
sbb
push
dec
or
test
mov
push
andb
bound
jne
sti
fcmove
sbb
sub
dec
mov
es
xchg
pop
push
xor
imul
lds
fldpi
pop
xchg
pop
pop
xchg
subb
push
cli
addb
mov
inc
and
xchg
rcrb
loope
push
jnp,pn
hlt
test
bound
daa
mov
inc
mov
inc
adc
sbb
add
ja
dec
pop
lea
push
je
ljmp
int3
cmc
in
aad
sti
enter
push
fistps
repnz
jle
rorl
push
adc
notb
leave
jne
popf
and
jnp
inc
les
xchg
shrl
sahf
jp
sbb
ss
inc
xchg
pop
or
or
jne
pop
or
xchg
xchg
pop
pop
inc
arpl
mov
mov
imul
dec
jno
jb
pop
lea
xlat
inc
dec
sbb
inc
add
xchg
scas
jne
repz
dec
pop
sbb
sbb
add
fwait
dec
sub
dec
cmp
pop
sbb
cmp
add
mov
dec
fimull
or
jg
fcomps
and
mov
mov
loop
fstpt
push
dec
inc
jle
andb
cmp
mov
ret
sbb
sbb
inc
movsb
lret
js
aad
and
xor
add
xchg
cmp
insl
push
add
aas
push
sub
pop
enter
dec
sbb
and
adc
dec
mov
sub
pop
mov
sbb
ret
in
and
inc
lock
and
test
rcl
jbe
inc
push
outsb
clc
sub
lahf
popa
pusha
jg
insl
mov
dec
add
sarb
or
xor
inc
ds
ds
into
pop
vpblendd
pop
sub
pop
repz
or
shl
test
xor
cmp
popf
push
adc
inc
xor
sahf
adc
sub
icebp
in
sbb
sbb
jg
call
fs
subb
pop
add
rol
inc
repnz
enter
rcll
leave
adc
les
and
outsl
push
inc
scas
pop
sbb
cld
nop
stc
fildll
in
xchg
out
aaa
pop
dec
mov
dec
cmp
jb
test
add
sub
sbbb
lds
add
test
or
push
test
imul
cmp
dec
inc
mov
aad
test
icebp
dec
js
mov
pop
mov
jns
push
pop
pop
fadds
dec
sub
sbb
adc
adc
sbb
sbb
jno
jo
repnz
shlb
mov
sahf
push
scas
or
push
addr16
pop
inc
pop
jmp
stos
ret
lea
aam
loopne
add
in
shlb
ljmp
jg
shl
bound
mov
mov
push
lods
pop
push
adc
mov
and
adc
mov
movsb
mov
push
sub
dec
rcrb
jae
mov
iret
cmp
jmp
arpl
xchg
dec
jb
and
sub
mov
shrb
mov
enter
push
push
leave
xchg
sbb
lret
dec
mov
popa
jne
aas
add
lods
adc
out
bound
jne
or
adc
inc
mov
inc
in
out
sub
pop
dec
dec
lret
inc
jl
xchg
xchg
iret
out
addps
jecxz
lods
pop
add
push
mov
push
dec
aam
movsb
xor
sub
add
jne
push
xchg
insl
adc
iret
adc
gs
dec
lea
nop
inc
push
sbb
xor
pop
andl
inc
ret
mov
xchg
push
dec
imul
sub
dec
lret
movsl
cmpsl
jmp
pop
insl
mov
jbe
test
sub
mov
push
mov
adc
push
lods
adc
loopne
sub
fcom
add
fucomi
inc
imul
push
in
dec
insb
sub
inc
pop
sub
rolb
mov
mov
mov
and
lahf
pop
jno
adc
popa
scas
push
or
sub
push
add
mov
cmp
mov
and
aas
adc
insb
nop
fwait
add
pusha
add
incl
adc
mov
jmp
popa
push
and
stos
lea
into
adc
and
scas
test
xadd
or
out
addr16
popf
dec
pop
movl
sbb
dec
test
rolb
push
and
iret
inc
sbb
sub
xor
add
fsts
add
sub
push
mov
or
sbb
repnz
sub
jge
cmpsb
loopne
dec
out
push
push
jne
or
cltd
add
inc
sub
fs
stos
dec
jle
sahf
test
aaa
loopne
xchg
mov
push
lret
inc
or
or
or
dec
push
lea
testl
lea
leave
std
fs
sbb
inc
pop
dec
mov
xchg
jle
sarb
or
inc
adc
xorl
and
test
push
or
inc
xlat
push
cs
fcmovnb
xchg
or
adc
rcrb
sbb
or
and
or
insb
or
jbe
inc
xlat
mov
xchg
pop
nop
into
pusha
call
test
mov
mov
js
cwtl
add
dec
inc
orb
jmp
inc
dec
inc
xor
daa
test
sub
dec
pop
mov
lret
shll
or
mov
mov
movb
call
dec
daa
les
pop
xor
add
push
push
inc
popa
or
rcrb
or
pop
pusha
sbb
repnz
push
iret
inc
ds
jl
sub
xchg
push
rorl
and
push
mov
add
imul
inc
add
movb
es
add
ret
subl
je
orb
inc
sub
pop
push
mov
out
fsubr
test
rcrb
fistpl
nop
shlb
and
add
add
daa
out
add
inc
mov
clc
or
pop
jg
icebp
adc
dec
jl
sub
in
daa
or
cmp
mov
cmp
push
or
lea
cmp
fldl
pushl
sbb
pop
push
or
fiadds
popa
dec
dec
dec
add
addr16
lret
push
repnz
pop
into
out
mov
gs
pop
inc
xor
or
es
jb
adc
jae
pop
test
push
movb
sub
mov
sub
adc
pop
aad
int
dec
sub
cmp
and
inc
mov
add
inc
xchg
dec
or
xor
fdivl
pop
cmc
pop
push
addr16
lea
mov
pop
jl
inc
fs
mov
push
aaa
inc
loop
fstpl
and
cmp
or
or
dec
pop
fildl
dec
sbb
fsts
cmp
insl
fs
pusha
xchg
adc
pop
pop
mov
movsb
push
adc
mov
inc
sbb
push
jl
rorb
aad
inc
je
nop
and
adc
add
cmp
dec
xchg
jne
jno
loop
mov
lea
jne
ja
pop
imull
add
movsb
pushf
cmp
xchg
movsl
ret
mov
sbb
pusha
xchg
mov
lret
push
mov
rcr
cmpsb
mov
mov
roll
adc
dec
out
sahf
out
jae
xchg
test
roll
cmp
or
les
and
ja
or
insl
jne
or
xchg
sbb
stc
sub
jo
sbb
cmpsb
adcl
or
cmp
mull
ljmp
mov
adcl
in
movl
push
pop
inc
in
jo
pop
push
bsr
mov
push
xor
aam
mov
mov
ja
xchg
push
je
repz
icebp
ss
mov
inc
pop
push
insb
inc
lods
ret
push
cltd
rorb
lcall
xchg
jg
ficoml
int3
pop
mov
pop
mov
aam
and
push
aad
mov
jae
enter
dec
das
lds
cmp
push
or
or
pop
push
inc
xchg
xor
or
dec
cmp
mov
sub
lahf
and
mulb
sbb
insl
cmp
xchg
pop
or
loop
stc
xor
inc
pop
inc
movsl
orb
das
in
fs
add
sbb
push
sti
and
mov
mov
push
loop
push
adc
xor
pop
lret
dec
push
xchg
sbb
nop
aad
mov
cmp
sbb
shlb
sbb
dec
and
ret
pop
and
inc
push
data16
sbb
mov
dec
and
fsubs
dec
stos
mov
xchg
nop
rol
sbbb
adc
cmp
test
jle
pop
pop
mov
jbe
xor
mov
inc
inc
int
dec
imul
lahf
push
push
push
pusha
adc
cld
dec
jmp
stos
adc
sub
or
and
xor
or
add
sub
in
pop
and
sbb
add
and
mov
push
or
and
subb
inc
insb
xorb
mov
fs
inc
mov
ds
lods
cmp
mov
lea
dec
loop
inc
cmc
pop
je
cmp
dec
add
cwtl
outsl
sub
jge
dec
sbb
push
and
push
add
push
sbb
sub
push
push
ss
add
dec
cmc
push
push
inc
adc
xor
xor
das
xchg
dec
in
sbb
dec
arpl
dec
cmp
ds
mov
fidivl
mov
jmp
ds
addr16
nop
xchg
out
ds
nop
xlat
push
stc
and
inc
bound
mov
sub
inc
sub
aad
xor
xor
ret
clc
pcmpeqb
dec
je
or
inc
stos
pusha
adc
int3
test
insb
call
sub
rcrl
adc
pop
lahf
xor
or
inc
cmp
pop
add
fcoms
bound
sub
movl
test
dec
pop
mov
shlb
push
hlt
inc
faddl
movsl
mov
push
movsb
mov
add
idivl
push
sbb
jns
inc
push
sbb
jecxz
rclb
repz
pusha
inc
jmp
pop
mov
shll
aam
add
sub
dec
insb
cmpsl
pop
mov
or
sub
xor
cmc
mov
movsl
sub
and
mov
jp
pop
cld
loopne
aam
lock
clc
shll
loop
sbb
ret
jbe
cmp
push
mov
push
mov
inc
xorl
pusha
pop
xchg
sub
les
push
add
in
lcall
mov
cmc
frstor
jl
dec
loopne
and
add
and
adc
add
aaa
cltd
bound
or
dec
mov
xchg
mov
js
movsb
jle
adc
addl
fsubrl
sub
or
add
dec
imul
je
push
aaa
lret
inc
mov
in
clc
mov
xor
xlat
mov
sbb
pusha
sbb
jb
subb
and
pop
ss
or
sbb
add
movsl
jge
rclb
gs
ret
adc
pop
and
icebp
push
fisubs
loopne
sbb
inc
add
add
clc
clc
out
dec
jmp
add
shll
dec
daa
cmp
leave
movsb
push
sbb
cmpl
dec
stos
add
call
and
xor
ret
adc
mov
cmp
outsb
mov
adc
test
dec
mov
mov
lock
pop
jmp
xchg
inc
movsl
jbe
imul
xchg
add
int
cmp
nop
aas
add
stos
test
sub
movb
pusha
sbb
inc
adc
aas
push
pop
les
popa
filds
pop
cwtl
ds
mov
leave
stos
in
pop
or
add
gs
pop
cmp
xchg
call
push
cmp
or
xchg
xor
push
nop
push
adc
sub
arpl
lcall
insb
popa
dec
movsb
inc
jo
subb
sbbl
add
adc
cmp
sbb
dec
xchg
sbb
scas
push
ss
mov
dec
pop
addl
dec
inc
hlt
sti
push
mov
repnz
add
inc
dec
sahf
cmpsl
sbb
cs
push
add
xor
push
adc
pop
popf
outsb
dec
pop
mov
jb
mov
xchg
cmp
sub
jg
shlb
jmp
jge
dec
and
aaa
aad
cltd
gs
and
loopne
js
stos
mov
dec
ret
and
jmp
int3
mov
push
jge
icebp
pushf
jne
push
push
imul
push
js
inc
xchg
add
mov
sbb
nop
jmp
add
scas
xor
jne
pop
pop
add
or
add
sbb
and
pop
lahf
xchg
xchg
cmp
pusha
and
roll
xor
stos
je
inc
pushf
mov
xor
rcll
and
sub
push
sbb
sarb
cmp
push
scas
sub
addl
push
outsb
push
lcall
inc
aaa
mov
rclb
push
mov
fisubrl
pop
xor
dec
push
mov
add
push
out
lret
scas
push
outsb
sbb
movsl
xchg
das
add
push
pop
dec
pop
addl
shl
dec
mov
add
cmp
xchg
adc
mov
adc
ret
adc
and
dec
add
adc
push
cmp
ds
sbb
clc
js
aaa
xchg
add
xor
adc
mov
push
pop
xchg
sahf
les
xchg
gs
popl
test
roll
in
int
jecxz
daa
pushf
sub
lret
call
orb
pop
add
adc
sbb
adc
ret
pop
push
and
cmp
push
nop
mov
cmp
movb
push
push
or
add
test
and
test
or
xchg
or
movsl
insl
jl
leave
jge
xchg
lods
fstps
not
jmp
adc
addr16
es
adc
loop
insb
sbb
shrl
dec
sbb
cwtl
in
push
jge
pop
sub
dec
jne
ret
test
push
push
push
mov
movsb
enter
ds
sbb
lds
roll
push
dec
push
jno
shl
mov
cmpsb
je
xor
mov
mov
cmpb
inc
andl
push
xchg
xchg
xchg
shrb
sbb
pop
pop
dec
pop
shlb
mov
les
leave
ljmp
push
adc
push
movups
ret
mov
dec
xchg
je
pop
add
push
add
inc
aaa
divb
dec
inc
jbe
xchg
sbb
sbb
dec
test
call
pop
inc
pop
jne
outsb
sbb
add
push
push
xchg
cs
or
lds
ret
aas
add
sub
nop
pop
into
pop
xor
adc
test
cwtl
pop
test
add
insb
xor
jo
mov
add
or
rorb
jge
sbb
sbb
and
daa
mov
xor
arpl
push
add
jno
mov
daa
mov
or
jmp
sti
daa
and
shrb
fcomps
sbb
pop
addb
xchg
push
es
xor
sbb
and
or
popa
insb
popa
or
mov
loope
cmp
dec
sbb
aad
pop
pop
fldt
cmpsl
stc
sub
mov
dec
sar
sbb
xchg
das
mov
fisubs
xchg
pop
sub
push
dec
or
and
add
sbb
pop
jns
push
lret
add
add
gs
mov
pop
add
sbbl
and
jnp
mov
fsubl
mov
xchg
push
scas
lret
inc
scas
shlb
icebp
dec
and
js
jge
inc
sahf
test
sub
add
adc
or
enter
mov
adcl
mov
inc
or
pushl
adc
fidivl
push
sbb
movsl
xchg
test
push
xor
shlb
xchg
sbb
jbe
shlb
dec
shlb
dec
pop
bound
dec
les
mov
push
scas
mov
lahf
or
mov
dec
xchg
cltd
mov
pop
les
push
mov
xor
nop
add
dec
or
jne
push
add
dec
call
sub
xor
xchg
xor
pop
dec
pop
or
movsb
pop
arpl
jo
sbb
lds
mov
push
mov
imul
hlt
add
fbld
or
inc
mov
dec
add
or
adcl
xchg
add
mov
xor
dec
xchg
jle
or
lds
shlb
sti
icebp
scas
rcll
mov
pop
sub
mov
mov
jmp
leave
xchg
dec
push
fsubl
cmpsl
or
cltd
dec
sti
push
cmp
addl
mov
jae
xor
push
dec
dec
push
xchg
xchg
movsb
test
test
xor
lahf
call
and
mov
xchg
cs
adc
xchg
fisttpl
inc
cmpsl
andl
lock
insb
xor
push
out
xchg
xchg
addb
jl
mov
jo
xchg
sbb
outsb
add
cmp
and
subl
push
sub
cltd
sub
pop
or
xchg
mov
je
mov
adc
lock
adc
cwtl
clc
or
dec
shrl
jl
or
xchg
push
in
ja
ret
dec
inc
adc
or
mov
sar
and
or
add
arpl
xchg
insb
inc
fnstsw
xchg
lcall
push
and
jnp,pn
adc
sbb
xor
mov
jns
push
test
sub
push
dec
jb
sub
xor
mov
push
or
test
adc
inc
sub
xchg
les
or
dec
and
inc
outsb
dec
inc
mov
add
insb
adc
cmp
inc
ljmp
push
repz
das
push
pop
add
push
add
loopne
aas
mov
push
pop
jb
movsb
lcall
adc
jbe
or
test
jecxz
adc
dec
mov
push
cli
or
sub
pop
pop
sbb
xchg
pushl
cmpsb
push
or
add
dec
mov
xchg
loope
pop
push
dec
movsl
or
sbb
inc
xchg
inc
pop
jp
nop
sub
je
sub
lret
aam
inc
cmp
cmpsb
push
jo
sub
pop
cli
or
or
sbb
inc
xor
test
dec
arpl
xchg
mov
pop
pusha
aas
push
adc
cmp
pop
std
mov
xor
inc
and
or
es
sbb
rol
in
rcll
sbb
inc
push
inc
inc
inc
insl
push
adc
dec
out
dec
or
and
iret
add
or
lahf
adc
inc
jb
add
mov
push
stos
aaa
lods
fs
xor
cmp
out
cwtl
sbb
out
sahf
test
jmp
pop
push
je
orl
ds
adc
shrl
pminub
dec
fimuls
push
ret
inc
xchg
cmp
movsl
push
push
sbb
add
mov
mov
ljmp
xchg
into
lret
cmp
add
pop
and
adc
xchg
xor
xchg
sbb
test
cwtl
in
shr
push
test
add
les
push
add
sub
das
add
mov
js
cld
xchg
mov
adc
loope
jp
xor
push
pop
ret
mov
push
push
cmpsl
sub
mov
adc
add
pop
std
inc
insb
cmp
add
adc
sub
std
sub
cmp
imul
cmp
cld
dec
cwtl
mov
lock
loopne
dec
or
push
sahf
subb
je
push
js
sbb
inc
rcr
mov
and
push
out
test
add
dec
pop
pusha
mov
sbb
mov
push
sub
fstl
inc
adc
gs
jecxz
jo
addl
out
xlat
call
ret
sub
dec
pop
ret
sbb
popa
push
pop
adc
sub
ret
adc
test
xchg
sub
sub
aam
and
inc
incl
cmp
or
jecxz
lods
inc
and
and
add
sub
fiadds
stos
insl
test
xchg
jg
sbb
mov
lcall
push
iret
mov
mov
add
xchg
sbb
std
ss
sbb
push
jle
xor
pop
inc
sar
mov
cmp
jne
imul
pop
dec
cwtl
push
lcall
adc
xchg
nop
imul
push
push
sbb
push
movsb
adc
and
xor
movl
push
sbb
adc
sbb
jmp
adc
mov
add
inc
add
pop
fs
xlat
shrb
ret
mov
push
repz
inc
das
ss
lcall
fwait
inc
cmpsl
push
push
xor
push
cwtl
lcall
andb
dec
push
push
mov
popa
jae
xor
and
push
nop
push
testb
jp
int3
inc
roll
leave
sbb
cwtl
mov
and
jo
or
mov
mov
dec
shrl
cltd
addr16
pop
mov
or
fwait
dec
popa
movsb
or
sub
adc
sbb
inc
adc
mov
xchg
xor
mov
test
or
jmp
jns
dec
call
push
adc
xor
fisttps
nop
daa
test
push
inc
cmp
mov
incb
add
or
push
or
fistps
mov
mov
adc
shrb
shll
aad
or
xchg
sbb
sub
dec
dec
adc
add
sub
scas
faddl
push
outsb
ret
push
push
out
xchg
adc
push
dec
lock
pop
cmp
jns
stc
and
sub
inc
push
push
out
lds
pusha
or
jno
ret
sbb
scas
xchg
mov
mov
or
movsb
push
jmp
add
dec
pop
cmpsl
xor
in
adcb
mov
jno
and
ljmp
and
ret
lahf
adc
cmp
pop
and
stos
sbb
shll
mov
inc
lods
rcr
faddl
cmp
add
out
adc
and
sub
adc
movb
push
stos
outsb
ret
lahf
rolb
fiaddl
inc
or
adc
mov
dec
adc
or
push
adc
nop
gs
push
popf
adc
pop
cmp
clc
aam
sub
add
push
inc
mov
daa
xor
fs
sbb
xor
int3
leave
stos
sbb
movsl
adcb
dec
add
ljmp
adc
nop
jmp
decl
call
pop
or
enter
xor
pop
sub
jne
sbb
add
and
add
dec
movsl
cmc
into
lret
sub
jb
and
jg
adc
adc
add
mov
stos
and
jg
test
dec
sahf
jg
cwtl
dec
push
add
or
mov
les
rcr
and
add
cs
into
and
mov
dec
loop
adc
lahf
xor
push
test
and
test
push
sbb
add
popl
sbb
es
push
rorl
add
lods
aas
subb
add
scas
das
nop
add
cmp
and
ljmp
push
jg
jae
xchg
pop
add
dec
or
add
jns
ret
loopne
inc
or
xchg
nop
sub
inc
les
leave
cmp
or
insl
jns
cmp
mov
and
push
mov
dec
mov
ret
rolb
jle
dec
jle
push
fwait
mov
dec
or
fwait
pop
shrb
push
aad
aas
insl
push
mov
pop
leave
sbb
fdiv
pop
and
inc
dec
mov
fcompl
jne
adcb
ss
ficoms
dec
sub
inc
aam
or
push
dec
fwait
cli
sbb
loopne
pop
loope
bound
movsb
or
jg
sbb
push
add
int
icebp
jp
cmp
invd
sub
add
and
mov
xor
add
scas
push
andl
lds
xchg
xchg
or
adc
fs
pop
add
mov
subb
add
bound
dec
pop
lahf
push
xchg
inc
sub
lret
int3
add
xor
dec
pop
mov
loopne
or
sbb
add
or
add
jae
pop
movsb
push
xchg
xor
mov
mov
popf
cmpl
enter
cmp
add
cmp
lret
xchg
or
mov
adc
adc
movsl
imul
pop
gs
nop
adcl
lahf
loopne
mov
js
out
jo
lock
iret
ja
rcr
pop
xor
cwtl
adc
mov
mov
pop
ljmp
cmp
aas
jo
push
mov
ja
shrb
sarl
xchg
jl
pushw
test
fldt
jg
out
pop
les
cmpl
outsb
popf
jl
fldcw
lret
decb
or
mov
sti
pop
sub
and
iret
js
mov
add
xor
addl
lcall
pop
ret
pop
in
out
and
repz
jnp
inc
or
xchg
ret
add
sbb
add
cs
dec
adc
mov
pop
ds
aas
dec
mov
or
xor
insl
data16
js
push
repz
jl
insl
call
cld
les
bound
gs
addr16
xor
push
into
jp
call
and
add
test
sub
and
mov
inc
xchg
ret
xchg
dec
ljmp
loopne
xor
or
xor
dec
lea
into
push
or
test
jnp
or
add
inc
aaa
push
mov
push
insl
inc
cmpsb
sub
or
adcl
test
lods
in
sbb
mov
add
dec
cmpsb
pop
adc
aas
push
cmp
cmpsl
sub
dec
push
bnd
ret
push
dec
imul
insb
push
or
mov
push
icebp
cmp
jmp
xor
inc
es
ror
mov
test
and
shlb
or
test
push
dec
mov
cmp
pop
popf
push
push
xchg
inc
call
xchg
lods
add
or
inc
mov
xor
inc
jmp
hlt
outsl
and
mov
sub
add
fwait
adc
shlb
add
arpl
test
sbb
ret
sbb
dec
push
dec
out
adc
movsb
sub
or
adc
int3
or
push
pop
fadds
push
fwait
mov
add
add
xchg
push
or
imul
pop
dec
fs
mov
orb
ror
dec
mov
mov
push
push
cmp
and
test
ss
mov
popa
xor
orb
push
jg
xor
fbld
mov
ljmp
xor
mov
pop
test
jg
test
jecxz
cmpsl
mov
sbb
dec
xor
add
and
adc
in
aam
ret
mov
rcrb
sub
mov
or
test
inc
pusha
test
sbb
or
push
adc
pusha
mov
or
sub
and
sub
call
inc
sub
pop
cmp
ja
pop
pop
dec
cs
jmp
cmp
mov
out
push
sbb
pop
sbb
mov
mov
inc
add
push
push
add
and
movsb
push
and
push
sub
inc
mov
ret
enter
loopne
mov
push
and
jns
and
lcall
fstl
aas
test
xor
dec
inc
add
add
add
sub
repnz
fucomp
add
test
popa
aas
xchg
cmp
pop
rclb
jno
sbb
insl
inc
dec
das
mov
shr
mov
push
cmp
and
dec
and
mov
adc
dec
inc
add
xchg
insb
xlat
add
adc
or
mov
dec
mov
dec
fs
push
jp
or
cwtl
icebp
inc
cltd
inc
fiaddl
or
add
inc
mov
push
sub
mov
ror
lret
nop
mov
add
lock
add
lods
inc
lcall
cwtl
push
dec
add
push
enter
shlb
xor
popa
and
dec
pop
stos
add
push
dec
cltd
test
pop
jecxz
push
xor
fucomip
push
or
aam
add
in
dec
xor
inc
icebp
ror
negl
repnz
jne
lock
add
movsl
shll
cmpsl
sub
popf
xchg
mov
outsl
push
dec
push
fsubrp
mov
push
sahf
or
push
call
nop
and
lock
and
cmpb
xor
cmp
pop
mov
cmp
loope
jns
pop
outsl
adc
fiadds
pop
sbb
inc
inc
imul
mov
inc
add
and
add
dec
gs
pop
sub
pop
mov
sbb
outsb
dec
inc
outsb
addl
dec
inc
mov
jmp
mov
in
dec
xor
pop
mov
cmp
pop
jo
sbb
js
sub
adc
xchg
pushf
jp
adc
movsl
lret
xchg
enter
lds
dec
sbb
test
push
insb
and
mov
xor
hlt
adcl
push
sbb
movsl
stos
fistpl
lods
nop
push
bound
ficoms
sub
cltd
pusha
push
into
mov
pusha
bound
cmp
and
push
je
push
mov
add
push
jmp
push
mov
add
hlt
mov
or
jmp
aas
leave
dec
dec
repnz
insl
shrb
jb
leave
or
xor
jb
movsl
push
mov
in
movsb
loopne
in
in
cs
call
inc
in
lock
cs
hlt
aam
add
fmul
pop
lcall
aaa
sbb
inc
inc
mov
jb
cmp
dec
sub
mov
xor
iret
jno
out
and
sbb
and
adc
sbb
or
push
add
add
mov
call
and
and
fsubrl
add
mov
stc
andl
add
pop
pop
or
push
data16
or
push
push
jne
inc
push
push
or
out
call
add
fcoml
ljmp
add
je
sub
push
sahf
xchg
lock
lea
dec
xor
les
dec
or
js
les
adc
add
mov
jne
pop
sbb
jmp
or
or
jmp
data16
adc
test
pop
add
pusha
aaa
or
or
cmpb
or
adc
sub
adc
movb
push
xchg
cmc
jbe
mov
fimull
push
push
loope
inc
sbb
push
jp
lret
subb
xchg
push
xchg
faddl
js
orw
or
xchg
mov
lods
sub
push
pop
mov
mov
mov
loopne
testb
jne
movzwl
nop
push
cltd
pop
idiv
jae
pop
subb
stc
sub
inc
adc
adc
pushf
outsb
loopne
jmp
andl
test
xor
mov
add
ljmp
dec
lea
inc
mov
add
sahf
or
dec
jae
cmp
in
nop
adc
int3
cmp
sbb
ja
insb
mov
in
sti
neg
insl
mov
enter
insl
es
cltd
pop
idiv
js
movsb
iret
std
inc
inc
ja
add
mov
add
or
mov
inc
adc
sbb
cmp
sub
inc
mov
pop
mov
fildl
loopne
or
add
out
sbb
icebp
sub
rcr
pop
fnsave
mov
or
sbb
int3
adc
fldl
cmp
dec
and
xor
inc
inc
cmp
and
js
jnp
fs
push
clc
aam
inc
add
ds
fstps
push
pop
ret
add
add
std
pop
sbb
push
lret
jmp
fsubrl
and
rcrl
jo
pop
fs
movsb
jle
ljmp
mov
mov
ret
pop
adcl
pop
sarb
mov
hlt
sbb
mov
xor
mov
clc
adc
call
fcoms
mov
out
sbb
mov
rorl
mov
fdivl
mov
mov
push
xchg
push
push
call
lock
rclb
negb
hlt
push
mov
xor
mov
add
ficompl
xorl
jne
jle
lock
cmp
push
cmp
movl
inc
or
adc
in
int3
into
fisubl
adcb
cwtl
mov
inc
jbe
ret
xchg
loop
mov
inc
xchg
clc
add
xor
in
insl
int
outsl
jle
push
mov
out
or
es
cwtl
adc
jo
mov
or
add
jmp
fnstenv
push
xor
mov
fildll
sbb
lock
movsb
pop
sub
rcrb
leave
cmovne
adc
and
inc
fdivs
jbe
sub
mov
add
pusha
xchg
fadds
mov
adc
or
mov
push
pushf
sbb
mov
pop
sbb
sbb
jmp
xchg
lock
test
lea
popa
adc
fadds
pusha
xchg
mov
jno
push
fldl
mov
cltd
push
addr16
mov
adcl
fcomi
cmc
dec
nop
adc
clc
add
dec
push
jo
push
js
jnp
add
call
push
lahf
out
push
loopne
fmull
pusha
inc
dec
xchg
in
inc
add
add
fcoml
mov
xor
lock
ret
sahf
or
in
fs
call
in
shrb
xor
lds
mov
sti
ret
lods
and
or
movsw
shrb
or
sub
inc
adc
inc
add
push
iret
gs
lret
push
cmp
pop
or
cmp
rorl
add
imul
and
sbb
mov
mov
std
test
jne
pop
and
mov
inc
into
sbb
insl
sti
gs
popf
add
inc
cmpsb
loopne
adc
cmp
adc
xchg
ljmp
inc
clc
fcompl
mov
dec
mov
adc
clc
sub
shlw
xor
xor
pop
mov
test
mov
sbb
and
popf
subb
adc
bound
cli
xor
insl
cmpsl
xor
pop
sub
inc
inc
hlt
push
adc
cmpsl
push
xor
sti
adc
test
and
xor
inc
cmp
shlb
cli
or
or
lahf
ret
mov
jp
pushl
or
loope
insb
int
and
icebp
push
call
pop
das
lock
loope
sbb
xor
push
cmp
push
dec
sub
or
notb
adc
adc
hlt
sub
scas
cmp
or
stos
fiaddl
dec
dec
insl
lock
pop
enter
adc
add
mov
cwtl
loopne
xor
int
cltd
mov
test
add
mulb
add
pop
movsl
repnz
pusha
add
pop
aaa
dec
sbb
out
and
dec
out
inc
pop
push
sbb
and
mov
ss
xchg
lea
and
dec
ror
and
adc
push
pushf
pusha
icebp
js
fcomp
add
dec
cmpl
adc
xchg
push
mov
xchg
or
add
daa
push
cmc
lds
or
lock
cmp
or
je
ds
call
sub
out
leave
adcb
push
sti
jbe
rolb
mov
ds
les
mov
push
and
dec
push
sbb
cmp
push
xchg
in
sbb
call
sbb
mov
sbb
xchg
lret
in
in
add
rclb
or
jo
cli
xor
adc
movsb
stos
push
daa
cmpl
bnd
call
or
push
sbb
jle
inc
dec
cmp
jge
clc
push
inc
add
or
cmc
xchg
sbb
adc
gs
mov
daa
add
push
pop
scas
fmull
sbb
xchg
loop
pop
jmp
das
clc
push
pusha
add
cs
and
mov
sbb
add
daa
scas
fbld
sub
jb
push
mov
outsb
jle
add
xor
dec
pop
mov
sar
adc
pop
cmpl
jb
mov
sub
mov
ss
push
inc
add
cld
jae
pop
mov
mov
rcl
in
push
jb
adc
jne
movsl
add
movsl
pop
mov
jae
pop
jb
sub
mov
in
add
and
and
sbb
lcall
add
push
dec
add
dec
ret
push
cmpb
mov
inc
or
inc
and
dec
sbb
add
mov
dec
ljmp
cltd
loop
jecxz
leave
push
popf
cmp
xchg
lods
int3
stos
add
cmc
and
test
cli
inc
lods
xor
sbb
or
es
sbb
cmp
maskmovq
imull
pop
xor
sub
inc
mov
jbe
ja
pop
enter
or
push
mov
and
clc
add
push
jbe
xchg
lods
xchg
xchg
lcall
jl
negb
cld
test
mov
pop
rcll
and
or
mov
mov
push
shll
and
mov
and
sub
xchg
js
adc
push
in
imul
loope
clc
push
mov
mov
scas
and
sub
sbb
jmp
rclb
or
je
cld
and
push
js
clc
mov
je
fs
mov
sbb
xor
sub
pop
or
adc
loopne
mov
push
lods
and
cmpsb
dec
movb
xor
cmp
cmp
and
mov
pushf
xchg
clc
lahf
stc
add
pop
aaa
adc
adc
aas
test
je
adc
and
fsts
das
pushl
or
mov
xchg
imul
jmp
je
int3
inc
push
fadds
adc
cmc
add
mov
ret
mov
fdivr
rcrb
jbe
sbb
lock
inc
inc
push
subl
jg
cmc
jmp
dec
cmp
push
inc
inc
dec
dec
mov
mov
sbb
push
sub
dec
or
jne
fistps
lahf
xchg
or
in
lea
push
adc
incb
inc
lea
lock
pop
jl
iret
mov
xchg
je
fisttps
arpl
push
cmp
rcrl
cmp
popf
cld
and
pop
and
out
jne
test
sub
call
stos
imulb
jl
xor
fsubr
scas
nop
xorb
pop
push
pop
mov
cld
pop
inc
pop
stc
leave
xchg
pop
jb
imul
leave
and
and
pop
jmp
sub
mov
call
push
insl
je
out
push
jmp
lret
adc
xchg
push
adc
cmp
cmc
test
pop
xor
test
popa
sub
add
and
dec
and
sbb
dec
mov
push
push
or
push
add
mov
xor
sub
push
mov
xchg
inc
sub
and
je
lea
shll
jns
and
cld
sahf
rolb
xchg
pop
cmp
scas
out
jne
mov
mov
clc
jmp
xchg
es
or
or
xchg
mov
mov
in
stos
add
pop
pop
mov
adc
inc
or
lcall
and
jg
fistps
inc
push
jl
cmp
adc
hlt
cmp
ds
and
data16
dec
cmpsw
addl
sahf
adc
mov
sub
or
pop
nop
shrl
jmp
xor
mov
sbb
adcb
inc
loopne
inc
fs
and
adc
insb
cld
add
inc
notb
es
mov
es
add
and
cltd
mov
sub
sub
lods
addb
ljmp
hlt
insb
inc
test
add
movsl
and
push
jnp
adc
data16
push
test
mov
into
jo
je
arpl
js
cltd
lea
mov
rorl
dec
ss
out
mov
add
pop
dec
push
repz
sub
outsl
insl
inc
movsl
add
inc
mov
fnstcw
das
mov
idivl
pop
cs
jno
push
popa
dec
xchg
inc
mov
sbb
mov
adc
daa
cwtl
call
adc
cmp
xor
or
dec
cmp
adc
and
aam
pop
and
adc
fldcw
push
pop
pop
nop
jnp
dec
xor
test
popf
push
push
jo
cld
sub
mov
push
add
test
sarb
xchg
adcl
xacquire
mov
pop
dec
pop
push
mov
cmp
data16
and
les
inc
adc
push
mov
sub
mov
test
adc
mov
lret
and
nop
icebp
aam
sbb
shrb
mov
fistpl
dec
in
js
cld
imul
add
pop
rorb
andb
mov
sbb
dec
lods
pusha
dec
adc
shlb
pop
push
adc
fstps
add
es
imul
movsl
insb
push
add
decb
push
push
xchg
movsb
xchg
add
push
xchg
stos
push
mov
adcb
pop
cmp
xor
jb
dec
sub
mov
xchg
pop
stos
add
sub
cmovb
adc
jge
es
push
clc
or
mov
not
inc
push
xor
in
insb
dec
cmp
ljmp
add
add
push
jo
sub
mov
push
je
fs
jmp
dec
add
add
adc
pop
test
repz
nop
jle
jg
sbb
adc
mov
xchg
inc
iret
dec
fs
jmp
adc
jb
rorl
outsb
push
sub
cmpb
adc
pop
push
push
inc
pop
out
addl
les
inc
loope
clc
addl
ss
push
push
inc
and
pop
lea
xlat
cmp
in
dec
xor
mov
sbb
js
fcompl
inc
adc
adcl
sub
push
into
jnp
mov
out
dec
cmp
and
movsl
adcl
lret
xlat
mov
outsl
adc
push
push
xor
jne
add
add
sub
insb
jl
mov
cmp
jp
mov
nop
pop
inc
je
and
pop
xchg
push
push
cli
and
je
daa
in
add
pop
cltd
add
rorl
lds
or
stos
enter
cmp
adc
ficompl
loop
ja
mov
sti
sub
xchg
je
mov
nop
adc
pop
mov
adc
or
shll
inc
out
push
pusha
loope
add
push
mov
xchg
xchg
sbb
xor
ret
cmp
lock
push
adc
push
pop
lods
push
and
inc
sahf
in
or
call
or
adc
gs
inc
js
jge
jns
into
push
cmpsl
mov
test
jae
mov
scas
lds
and
lds
ja
jecxz
add
and
out
lahf
mov
push
add
decl
pop
add
adc
pop
rclb
fnstsw
add
add
adc
sbb
lock
and
mov
mov
adc
das
mov
fisttps
and
pop
xor
add
enter
imul
inc
lods
aaa
pop
lahf
orb
cmp
and
ss
movl
iret
orb
icebp
xor
sub
sub
add
jp
xor
adc
in
pop
mov
push
adc
xor
loope
mov
xor
adc
xor
clc
pop
push
sbb
bound
lcall
and
lcall
xorb
sbb
add
xor
mov
push
in
jmp
push
jge
dec
inc
or
sahf
fdivrs
rep
and
dec
shlb
pushf
mov
shr
push
cld
or
and
pop
inc
dec
loopnew
mov
clc
pusha
jl
mov
xchg
or
pusha
jl
sti
jbe
jae
jl
rorb
mov
pushf
in
aad
adc
in
gs
jmp
dec
xchg
inc
aad
icebp
dec
fistpll
dec
pop
dec
mov
mov
jl
std
inc
cli
push
call
inc
out
rorl
cld
pop
adc
cmpw
cmpb
inc
push
push
pop
call
adc
aam
xchg
mov
mov
popf
mov
mov
mov
cwtl
ljmp
sbb
lods
divb
lods
mov
insl
stos
push
xor
sub
and
adc
int
push
ret
or
in
data16
or
pop
jne
sbb
pop
inc
jge
mov
add
sub
loopne
loope
add
sbb
lret
sbb
pop
clc
insb
fsts
lea
enter
dec
xchg
sbb
jne
pop
in
and
imul
insl
push
nop
push
mov
cmpsb
dec
ret
push
jg
or
mov
inc
mov
mov
lret
or
adc
sub
adc
and
roll
shl
push
mov
bound
jne
push
sbb
adc
sub
push
inc
inc
popa
jmp
sub
rolb
lret
clc
adc
xor
cld
lea
inc
sbb
test
or
movsb
in
jle
pop
jne
rorl
mov
clc
data16
dec
pop
xor
inc
cmp
inc
dec
add
pop
adc
push
add
dec
jo
dec
jle
push
ret
shll
jle
adc
jo
xchg
dec
adc
or
mov
push
mov
repz
add
adc
call
nop
add
push
repz
flds
inc
cmp
icebp
inc
pop
dec
bound
sub
push
push
fdivs
add
mov
or
mov
pushl
hlt
jne
push
cmp
jo
pop
or
inc
pop
or
sbb
lea
or
je
mov
adc
xchg
into
push
push
mov
adc
nop
clc
cwtl
jb
mov
pop
rcrl
mov
adcb
or
js
or
sub
xor
push
call
in
add
aas
push
xchg
push
sbb
clc
shlb
clc
ss
sbb
scas
adc
nop
imul
loop
dec
orb
pop
or
pusha
push
mov
mov
add
cmp
lds
and
xor
lret
fstl
lods
pop
fidivl
push
je
imul
ja
jnp
ret
fdivl
sbb
xchg
inc
jl
test
js
lea
data16
movsb
cli
mov
pusha
enter
jmp
and
test
mov
or
ret
add
add
dec
outsb
cmp
push
pop
fidivrl
cmp
loope
push
cmp
and
or
mov
xor
sub
inc
clc
sahf
sub
ds
add
add
adc
mov
cmp
mov
push
pop
je
mov
jnp
shrb
inc
cld
imul
inc
movsl
mov
or
xor
dec
aam
dec
dec
xor
clc
xchg
add
adc
sti
outsb
fs
mov
mov
cmp
inc
pop
sbb
pop
rclb
jg
ss
push
mov
pushl
cmp
imul
add
movsb
add
imul
cmpb
pusha
xor
cmp
into
adc
adc
add
sahf
or
pusha
pop
and
adc
mov
xchg
out
xorb
punpcklbw
cmp
subb
adc
sub
xor
outsb
aam
imul
mov
cmp
jbe
movsb
push
jle
cmpsb
adc
pop
fldt
stos
inc
adc
sbb
sbb
lea
push
xor
mov
push
dec
mov
or
or
or
clc
into
pop
rol
push
push
enter
add
add
loop
and
adc
stos
adc
sbb
cmp
adc
lods
add
fldt
cmp
pop
and
adc
sbb
and
xor
in
fdivl
mov
push
mov
sbb
lcall
sbb
xchg
sub
ret
cmp
cmp
inc
pushf
add
insb
jbe
cmpb
push
loopne
push
jae
fmull
push
pop
enter
push
es
sub
add
sbb
inc
mov
jo
xor
add
fmuls
rclb
add
inc
adc
mov
test
incb
push
mov
addl
dec
add
push
insl
or
push
nop
add
sti
push
enter
sbb
test
and
push
add
enter
jno
add
data16
xor
lock
jp
cmpsl
cltd
clc
adcb
insb
out
adc
or
les
jge
clc
pop
or
pushl
push
mov
jb
xor
mov
nop
test
pop
adc
leave
xor
adc
jp
and
sub
xlat
push
les
mov
lea
dec
mov
iret
push
loopne
xchg
ljmp
jns
xchg
mov
mov
cmp
inc
filds
mov
pop
mov
pop
mov
mov
push
add
fmuls
arpl
push
inc
xchg
js
and
fwait
dec
or
push
in
andl
or
icebp
stos
lea
mov
arpl
int
testl
test
aad
in
sbb
pushf
cmp
arpl
inc
daa
test
iret
mov
fisttpl
pop
xchg
jle
xor
lock
sub
mov
js
cmovb
push
add
shll
or
xchg
fprem
and
sub
and
dec
pop
sbb
add
mov
rorb
add
rcrl
xchg
cmpsb
mov
mov
lock
dec
lds
mov
repnz
add
inc
mov
outsl
lods
or
shlb
add
pop
cmp
mov
lds
mov
in
push
add
jmp
xor
in
pusha
loopne
jns
testb
add
mov
loope
lret
push
lds
and
test
add
stos
cmp
inc
aaa
lock
addb
popa
add
mov
sub
imul
sub
or
inc
stos
and
in
addb
jmp
sub
or
sbb
jmp
and
or
iret
in
aaa
xchg
mov
pusha
adc
jns
les
or
jns
lahf
int3
in
add
fmuls
dec
nop
or
loope
ficoml
fcoms
push
push
ret
mov
loop
cmp
ret
add
mov
inc
dec
sbb
jecxz
lret
xchg
mov
scas
fcmovne
add
mov
addb
repz
pusha
push
ja
outsl
sbb
loopne
add
mov
and
int3
add
out
es
cmp
sbb
xor
mov
or
push
dec
xchg
lods
jnp
push
push
and
sbb
adc
dec
and
mov
mov
add
movsb
jbe
sahf
aaa
adc
adc
lock
pop
xchg
pop
push
fcompl
cmpsl
inc
daa
clc
pop
adc
test
mov
dec
xchg
cmp
adc
stos
loopne
out
xchg
sub
sub
add
sub
ret
sbb
inc
bound
in
cmp
mov
adc
push
mov
xor
out
frstor
add
fs
addr16
add
xchg
mov
cmp
or
enter
inc
pop
dec
jl
mov
and
mov
lcall
xchg
mov
xchg
jl
pop
cmp
dec
rorb
mov
cmp
ret
lods
shlb
add
shrb
out
sbb
lahf
sbb
adcb
mov
mov
or
jne
push
xor
xchg
or
inc
fwait
pop
add
les
xchg
enter
lea
lea
xor
aas
adc
inc
faddl
ret
shrb
mov
jl
ret
neg
fwait
and
ret
jge
movsw
mov
daa
imul
or
imul
call
in
fsin
outsb
pusha
movsl
hlt
jo
inc
fidivs
pop
push
add
mov
pop
add
add
pop
out
cmp
and
jmp
imulb
lea
int
sbb
pop
sub
sub
push
jns
mov
aam
addr16
xor
sub
rorl
shll
mov
rol
bound
inc
pop
adc
push
push
cwtl
push
push
sub
push
sahf
in
cmp
outsl
sub
jmp
cli
sub
push
and
cs
mov
aas
and
sub
pusha
jge
popa
femms
jo
stos
and
cmp
dec
mov
inc
or
inc
jmp
push
mov
add
xchg
aaa
pushl
inc
lret
pop
imul
int3
or
pushf
loop
mov
and
leave
fwait
mov
cmovns
lret
loope
mov
nop
sub
mov
xchg
int3
orb
or
fadds
cmp
sub
js
cmpsb
sbb
outsl
fwait
mov
xor
popf
adc
and
call
outsl
mov
cmp
push
adc
adc
int
pop
xchg
xchg
mov
adc
dec
pop
jl
in
sti
xor
insl
lock
cmp
gs
xor
add
and
int
sbb
push
ja
cld
or
mov
js
nop
sub
mov
lock
push
xor
xor
or
cmp
pop
push
cmpsb
jns
inc
push
dec
mov
mov
pop
xchg
int3
xchg
adc
inc
test
pop
mov
adc
dec
test
xor
xor
push
cli
js
cwtl
mov
pop
sbb
aas
iret
jl
sbb
sbb
mov
xchg
sub
inc
mov
cwtl
push
cmp
adc
push
into
push
push
jbe
mov
pushf
cmp
inc
sub
dec
inc
mov
jbe
mov
mov
inc
push
movsb
adc
fstps
or
jno
pop
jge
movsb
xor
call
push
push
test
les
scas
push
pusha
pusha
lahf
in
ss
mov
sbb
or
add
xor
fs
xchg
inc
outsb
pop
add
in
inc
movsb
vsqrtss
dec
inc
xchg
dec
test
and
mov
inc
sub
or
sub
jmp
loope
dec
pop
push
loopne
cs
xor
push
mov
insb
lcall
inc
jb
je
es
cmp
and
mov
arpl
loopne,pn
popf
jp
mov
pop
push
outsb
push
repnz
fldl
pop
cmp
int
push
cli
push
push
adc
call
cmp
xchg
jbe
cmpsl
jnp
adc
fists
stos
out
aaa
lock
shlb
ljmp
push
lock
adc
call
xchg
jb
cmp
push
fisttpl
nop
xor
xchg
repnz
insb
jmp
not
push
arpl
nop
jo
inc
ja
mov
fucom
xchg
in
loopne
inc
xchg
and
ficompl
xchg
push
push
enter
dec
rcr
sarb
shrl
cmp
xchg
sahf
push
add
movb
xorl
sbb
adc
or
and
rcl
andl
mov
add
sub
and
jno
outsb
add
je
les
sbb
add
or
call
inc
adc
fdivs
pop
inc
mov
testb
jl
sub
sub
adc
in
call
sbb
in
sub
pop
pop
jo
lcall
insl
pop
push
xor
inc
sub
sbb
push
inc
mov
mov
jge
pop
cmp
adc
sbb
pop
in
imull
je
cmpsl
pop
rolb
lea
and
inc
sub
cmp
pop
push
insb
dec
cmp
fcmovnbe
call
add
push
jp
es
cmp
push
loop
sbb
sub
jl
test
sbb
mov
jl
sbb
int3
and
cmpsl
rolb
out
and
inc
mov
or
push
or
enter
mov
dec
xchg
orb
in
pop
inc
in
dec
mov
adc
pop
jle
xor
scas
aaa
push
lahf
sbbl
out
cmpsl
jmp
push
test
inc
clc
xchg
inc
scas
xor
outsb
das
mov
adc
es
and
cld
adc
in
and
hlt
popf
inc
imul
test
popa
addr16
leave
rcl
xchg
xchg
sbb
ja
mov
daa
lods
inc
sub
shr
mov
push
aam
and
shlb
fstl
adc
out
cmpb
cltd
add
outsl
sti
add
lahf
negb
xor
mov
repz
loopne
testb
enter
or
jmp
cld
sub
ljmp
js
push
mov
mov
push
jae
xor
cmpsb
sbb
jnp
loopne
cmp
je
inc
movzwl
sahf
idivb
pop
push
loopne
clc
push
pop
and
jl
filds
pop
loopne
cmp
in
dec
stos
inc
lcall
daa
cmp
cs
jo
push
popa
jnp
inc
dec
dec
mov
sbb
xchg
test
fimull
mov
lock
cmpl
jg
imul
shlb
cld
mov
lret
mov
push
adc
push
test
ret
push
scas
lock
mov
jl
xchg
add
andl
jle
shll
int
clc
pop
and
mov
xor
add
xchg
mov
add
stos
cmp
pusha
inc
outsb
or
jmp
rorl
push
movzbl
and
cmp
xor
pop
jmp
in
mov
repnz
cmp
jl
jmp
jl
push
push
rorl
pop
dec
sub
dec
or
mov
jno
addb
sbb
xchg
fildl
jae
cmp
pop
ja
mov
and
push
push
imul
jns
call
orl
xor
or
lods
and
cli
lock
push
repz
jo
add
mov
mov
daa
mov
cmpl
xor
adcl
out
add
or
and
xchg
cli
and
sbb
pop
shlb
clc
enter
xchg
sbb
pushf
add
enter
ret
xor
xor
dec
cmp
inc
jns
add
jne
push
mov
cmpsb
jo
push
mov
xor
pushf
sbb
adc
sti
mov
adc
inc
stos
bound
decl
pop
and
push
pop
mov
and
jg
mov
stos
adcb
cmp
ret
mov
cld
xor
push
loop
cmp
stos
push
push
cmovle
sbb
inc
push
cmp
dec
xorl
pop
add
pop
push
pop
pop
ret
dec
test
jnp
in
add
adc
pusha
cmp
adc
adc
dec
push
pop
ret
push
mov
notl
jnp
xchg
cmpsb
push
add
ret
pop
sbb
xor
mov
mov
lea
loop
add
push
jecxz
lcall
test
push
and
mov
or
outsb
push
push
push
add
adc
movsl
mov
sahf
and
loop
pop
mov
fadds
cwtl
xchg
daa
sub
inc
scas
or
adc
jp
dec
ljmp
pop
and
js,pt
fs
orb
loopne
and
jae
xchg
outsl
scas
and
adc
out
jo
gs
lret
jo
sub
pop
add
add
dec
iret
in
add
out
add
in
ret
dec
jmp
add
cs
test
and
or
or
mov
fildl
cmp
xlat
fidivl
or
push
das
ret
or
jle
jbe
and
and
pusha
inc
cmpsl
fmull
and
add
inc
cmp
rolb
adc
xor
pop
push
sub
dec
test
and
out
stc
or
and
call
or
rolb
unpcklps
xor
jae
push
das
sti
nop
xchg
pop
and
add
out
fnstenv
mov
xchg
fcoml
int3
sub
sbb
es
fwait
add
mov
movsb
call
in
jo
aam
pop
pop
in
addb
jns
cs
call
icebp
and
xor
and
pop
dec
adcl
mov
in
xor
mov
or
and
iret
inc
sub
add
enter
dec
call
xor
subb
test
adc
mov
in
xor
cmp
clc
out
sbb
sti
inc
or
inc
add
inc
or
add
fsub
sub
in
addr16
push
push
push
test
mov
xlat
in
sbb
mov
mov
ds
enter
data16
add
adc
pop
ss
cs
or
xchg
cmp
adc
repnz
jb
cwtl
js
dec
cmp
inc
sub
inc
push
lret
add
xor
mov
jbe
xchg
pop
adcb
shll
add
fsts
add
mov
jbe
loope
add
loopne
add
scas
mov
pop
jg
test
add
pop
rcrb
scas
push
push
xchg
lea
adc
sub
lret
push
aam
inc
mov
cmovge
aad
ret
imul
cltd
xor
jp
push
mov
mov
push
sbb
add
pop
mov
lcall
loope
mov
adc
push
ss
sub
ret
push
loopne
sbb
xchg
loope
or
jecxz
sub
popl
sbb
imul
insb
push
rcr
xor
loop
stos
fiadds
jge
xchg
orl
cmpsl
add
mull
movsl
sub
das
ljmp
and
or
dec
xchg
sbb
cmp
aam
jp
scas
add
testl
outsl
shll
xlat
mov
ret
call
lret
and
dec
ds
ficoms
hlt
cmp
ljmp
sbb
shr
mov
or
lret
mov
push
add
in
cld
sbb
ficoms
mov
stos
das
sub
pop
jp
xchg
outsl
sub
or
add
jge
xchg
pop
lock
hlt
inc
clc
divb
iret
cltd
fcomp
je
lea
sub
push
inc
jle
icebp
inc
adc
or
ss
inc
mov
xchg
test
in
inc
jnp
xchg
jne
adc
adc
addb
pop
fsub
xor
jne
adc
mov
add
mov
mov
push
adc
loop
add
xor
mov
fs
nop
mov
push
inc
or
addl
imul
xlat
imul
dec
mov
aaa
jne,pt
and
subl
subl
and
shlb
shrl
xchg
mov
std
loopne
lea
or
pusha
cltd
mov
adc
mov
push
jmp
xor
jp
mov
jo
push
out
orb
jno
les
jo
add
ret
adc
insb
cmp
push
push
pop
push
rcr
js
sbb
ret
ret
pusha
xor
rcl
les
and
sbb
mov
xor
sbb
jo
cmp
sub
in
movsl
in
addb
jo
push
sbb
in
or
daa
inc
inc
insb
or
inc
inc
and
movsl
pusha
add
dec
repnz
pushl
or
inc
lods
push
ret
add
lret
adc
jo
or
je
mov
pop
cmp
or
cmpsb
and
adc
data16
jmp
cs
shrb
sub
push
mov
cmpsl
adc
fisttpl
cmp
fstps
sub
je
je
xchg
insb
and
fstps
pop
sub
loop
and
inc
mov
adc
xchg
lretw
adc
or
mov
pop
insb
pop
aam
lods
adc
xor
repnz
add
cld
push
sbb
ret
insb
and
test
adc
cmp
add
xchg
pusha
add
roll
xchg
dec
xchg
cmp
std
std
add
sub
leave
pop
outsb
mov
jecxz
sbb
xchg
je
sub
pop
insb
add
cwtl
mov
rcll
xor
dec
sub
cmp
mov
test
add
pop
add
sbb
jl
iret
lcall
int3
mov
add
fsubs
add
cmovo
rcrb
push
lock
lahf
xchg
xchg
movsb
rolb
mov
enter
and
jecxz
push
int3
push
push
iret
dec
mov
in
aam
fimull
fcoms
int3
push
js
loope
in
pop
push
test
ficompl
cmp
sbb
sbb
mov
sub
aam
fcom
loopne
mov
or
or
xchg
fstl
xchg
mov
mov
fcomps
jne
cmp
sbb
ds
add
adc
in
adcl
sub
jno
inc
pop
pop
out
inc
or
insb
leave
fwait
inc
xor
lea
mov
or
lods
xor
xchg
out
mov
pop
pop
adc
sbb
sahf
test
xchg
adc
bound
in
call
and
sub
enter
nop
nop
addb
mov
sahf
ud2
push
sub
sbb
cmpsb
mov
insb
mov
dec
inc
stos
imul
add
cmp
inc
and
add
movl
mov
push
sub
mov
lods
lods
scas
pushf
inc
aas
test
sub
pop
pop
dec
push
mov
scas
mov
movsl
mov
add
aaa
add
test
and
push
stos
dec
mov
pop
add
add
lahf
push
fisttpl
leave
push
mov
ud0
sahf
mov
mov
sub
jmp
mov
dec
mov
pop
inc
inc
fimuls
pop
hlt
push
sbb
add
xchg
aaa
pop
mov
rclb
cmp
jl
push
cmp
push
aaa
push
inc
inc
movsb
movsl
add
or
add
xchg
pusha
adc
pop
or
das
push
sbb
push
cld
and
inc
cmp
inc
bndldx
jbe
stos
cltd
in
shlb
cmp
push
sbb
call
xchg
in
mov
cmp
jl
neg
negl
call
xor
pop
push
sbb
push
fimuls
adc
xchg
mov
mov
sti
dec
lret
test
add
mov
push
or
adc
or
dec
cmp
xchg
push
in
mov
je
adc
mov
sti
loopne
add
pop
push
push
sbb
cli
mov
outsl
inc
mov
fisubrl
jl
fmull
push
jp
pushl
mov
inc
faddl
jmp
mov
or
pop
push
dec
pushf
sarb
adc
mov
sub
mov
jo
dec
mov
ss
push
or
pop
loope
lods
ret
and
andl
daa
pop
push
cltd
xchg
cwtl
adcb
sbb
push
lea
cwtl
shlb
out
ds
push
add
push
or
loop
mov
popa
rclb
add
adc
loopne
sbb
scas
out
add
jb
xor
cmp
mov
aaa
movsb
add
jno
mov
jl
aam
imul
mov
adc
int3
fcoms
inc
repnz
mov
sbb
push
int3
pop
jbe
nop
loopne
jp
and
sbb
and
daa
arpl
jo
xor
dec
pusha
stos
lret
lock
xchg
add
sbb
adcl
loopne
aad
add
pusha
in
pop
jne
pop
neg
lock
sub
je
mov
add
xor
xor
je
push
add
loop
or
fwait
adc
mov
and
scas
subb
mov
jne
sub
ss
popf
push
or
and
notb
or
repz
test
add
push
mov
pop
ror
add
xor
inc
push
add
sub
push
in
aaa
mov
and
inc
jp
mov
cld
mov
orb
pop
inc
add
cmp
insb
bound
jl
add
sub
or
jle
cmp
mov
and
cmc
mov
pusha
clc
push
test
cmp
ffreep
test
mov
lea
xor
dec
jnp
fcomip
ja
icebp
push
aad
fdivrs
je
lcall
mov
push
mov
jno
subb
movsb
mov
imul
imul
std
outsb
out
push
outsb
push
pushl
xchg
mov
sbb
addr16
out
mov
sub
in
nop
xchg
push
jl
or
adc
cwtl
jo
mov
cs
jmp
into
mov
jb
push
in
fcoms
xor
testl
push
in
movsb
xchg
jo
jo
adc
pushf
pop
sub
out
dec
dec
cld
mov
xchg
lods
mov
sbb
mov
cmp
dec
or
outsb
xchg
pusha
mov
andb
insl
xlat
cmc
dec
lods
lcall
popf
push
dec
movsb
sbb
fiaddl
and
xor
sub
jge
jb
ret
mov
enter
aam
push
adc
into
jl
add
lea
les
int3
jb
or
test
jmp
push
jnp
sub
rclb
loop
dec
pop
nop
adc
mov
mov
sbb
jge
jle
xor
ja
sub
orb
cmp
adc
add
adc
fisubs
jo
sub
inc
jnp
insb
iret
je
lods
je
jne
xchg
and
mov
or
rolb
lods
inc
adc
mov
ljmp
add
addb
jle
push
sub
dec
call
or
jne
cwtl
mov
pop
lret
in
std
and
jle
or
add
inc
pusha
inc
adc
es
mov
fadds
or
cmpsl
push
hlt
nop
adc
sub
lods
fistl
push
mov
mov
inc
or
imul
out
push
or
or
ss
adc
xchg
jp
dec
cmp
xchg
adc
test
xor
xchg
mov
or
stos
rcrb
stc
lock
ja
inc
pop
xchg
add
adc
add
xor
lcall
ss
pushl
mov
in
sbbb
adc
and
add
stos
loopne
dec
ret
movsl
lea
test
push
xor
xor
ss
test
adc
push
sub
call
stos
or
jge
popa
sbbb
inc
sarl
sbb
sbb
or
gs
outsb
test
dec
data16
xor
push
or
lcall
pusha
cmpsb
adc
mov
pop
adc
push
push
sub
dec
mov
jl
arpl
cwtl
mov
mov
jmp
movb
pop
enter
call
jne
lock
jmp
mov
das
lret
mov
push
xchg
aam
push
aaa
add
fildll
or
mov
or
std
inc
adc
lcall
add
or
ja
xchg
inc
pop
sub
inc
sahf
lret
pop
into
aam
lret
mov
cmpsl
fst
jmp
mov
aam
jne
ljmp
sub
js
add
cmp
inc
movsl
lds
xor
mov
movsb
fsts
adc
loop
push
or
mov
test
subb
in
js
iret
test
inc
push
mov
add
out
js
add
push
mov
or
cltd
fcoml
push
jae
hlt
mov
mov
and
fdivl
and
dec
add
xchg
mov
jne
push
in
dec
xor
cli
aad
pop
cmp
lds
test
push
xor
adc
loope
int3
sbb
push
ljmp
dec
push
inc
sub
enter
inc
ret
jnp
mov
lods
push
and
fisttps
fstps
jmp
stc
insl
addr16
adc
push
push
inc
xor
xlat
pop
mov
sub
mov
lock
incl
push
pop
and
mov
mov
rcr
add
pop
add
fst
push
je
xchg
add
xchg
pop
jge
dec
ret
add
or
or
push
adc
sub
call
ss
xor
pop
jne
jge
adc
inc
dec
push
adc
orb
push
data16
mov
jo
pop
sbb
mov
mov
push
xor
sbb
sbb
mov
push
sbb
or
and
push
xor
in
lods
imul
sbb
cmp
jo
outsb
push
or
dec
sbb
imul
inc
js
fstpt
orl
sbb
add
cmp
adc
popl
sbb
int
lcall
stc
shrb
lret
movb
cmp
xor
inc
pop
pop
fwait
push
inc
dec
add
sbb
inc
cmp
pop
out
test
cmp
push
mov
cmc
push
adc
sbb
or
jge
adc
test
cli
inc
sbb
or
push
mov
sbb
adc
inc
ret
add
xchg
ds
gs
inc
mov
ret
mov
repnz
neg
pop
sbb
lock
jp
sub
subb
jl
in
xor
aas
jmp
add
incl
das
sarb
popf
push
aaa
ret
pop
lock
jle
xor
loope
jmp
mov
sbb
hlt
shrl
push
jmp
cli
xchg
rcrb
dec
test
xor
jle
jbe
andl
cmp
fisttpl
pop
stos
fiaddl
or
sbb
lods
rorb
into
out
inc
jo
dec
dec
sub
sub
daa
aam
mov
jns
sbb
mov
out
push
inc
rorb
add
add
inc
adc
cmp
jb
xor
dec
dec
fdiv
mov
ds
je
sbb
jae
add
push
sub
push
loope
ret
add
das
or
rclb
or
and
xor
xchg
and
es
sbb
xor
pop
pop
mov
or
pop
adc
movb
jnp
outsb
outsl
out
adc
push
mov
inc
push
je
or
jle
push
dec
fisubrl
add
inc
xor
and
cmp
jbe
and
xchg
push
ds
push
adc
cmp
xor
add
dec
mov
loope
ret
and
or
mov
sub
inc
pusha
hlt
jle
inc
push
jl
mov
push
jno
inc
and
add
pop
xor
clc
add
mov
mov
inc
cmp
cs
xor
sti
andl
adc
cli
decl
and
rclb
sbb
cmp
mov
xor
inc
hlt
add
add
rorl
and
out
and
sbb
sub
scas
imul
inc
cmc
and
ret
adc
push
mov
adc
mov
das
sub
inc
xor
push
jle
nop
sarb
dec
adc
lcall
push
or
dec
push
xor
ret
ds
cmp
sub
call
push
es
lea
mov
push
push
cmp
call
lods
cmp
pop
mov
mov
inc
lock
adc
orb
les
ds
test
lock
sbb
cmp
les
and
cmpl
pop
pop
lods
cs
gs
rorb
xchg
xor
sbb
ljmp
dec
shl
lret
pop
mov
add
dec
dec
xchg
sbb
push
dec
dec
push
in
in
mov
loope
fs
lret
addl
xlat
fbstp
dec
inc
or
lock
push
pop
inc
lods
adc
adc
or
and
sbb
pop
add
popf
inc
clc
sbb
in
gs
sub
push
popf
xorb
add
mov
inc
lods
bound
leave
lods
push
sbb
es
or
mov
outsl
insb
xor
in
add
pop
sbbl
clc
inc
pushf
push
fstps
bound
pushf
jl
mov
adc
pcmpeqd
lods
xor
adc
mov
or
insb
scas
xor
lea
xchg
add
push
or
or
test
cmp
xor
mov
pop
fldcw
cmp
push
push
daa
dec
inc
jb
xchg
push
outsl
dec
add
rorb
leave
add
or
in
pop
or
decl
pop
adc
add
inc
sbb
pop
rorb
mov
in
add
shlb
sahf
dec
test
fldt
sbb
xor
cld
ljmp
lahf
insl
push
pop
xlat
stos
scas
loope
jge
sbb
lock
rolb
jge
fwait
int
rclb
jne
movswl
sub
push
mov
cmp
in
pusha
push
jns
repnz
sub
test
jo
sub
xchg
cmp
das
fldl
faddl
aaa
fldz
cmp
pop
int3
inc
add
andl
js
mov
or
imul
int3
cs
pop
daa
sub
fs
or
pop
and
jnp
sarb
clc
lds
mov
pop
mov
push
push
adc
scas
out
adc
je
inc
mov
pop
xchg
inc
push
in
xchg
xchg
mov
mov
aad
mov
xchg
add
sub
lret
mov
jg
ret
enter
leave
jbe
fld
or
mov
jmp
cmpb
and
loopne
in
pop
push
shl
test
jl
ud0
rorl
imul
mov
add
inc
dec
push
add
push
sbb
rcrl
sbb
mov
popa
cwtl
jno
adc
mov
jns
rorl
xchg
std
add
popa
fs
imul
mov
rcrb
ss
hlt
push
adc
lcall
insb
popf
or
clc
or
cmp
inc
enter
push
dec
arpl
adc
or
inc
xchg
jle
ret
inc
test
subl
and
jo
sub
and
add
ret
cwtl
pop
fadd
inc
sub
pop
jg
mov
iret
inc
push
xor
inc
push
push
enter
shrl
add
imul
jl
pop
mov
pushf
mov
inc
inc
inc
dec
xorl
insb
mov
and
jbe
enter
mov
xor
push
sbb
daa
xchg
cmpsb
mov
out
add
mov
nop
nop
xchg
xchg
or
call
and
or
lock
jno
sbb
inc
cmp
scas
mov
dec
into
in
inc
cmp
mov
repz
mov
pop
dec
dec
test
sub
mov
inc
sbbl
adc
add
sub
call
addb
fsubp
int
rolb
mov
sub
add
adc
loop
add
je
cmp
imul
call
push
jne
add
add
test
jl
shl
push
call
dec
xchg
dec
pop
movsb
or
insb
add
inc
push
pop
bound
insb
sub
movsb
ret
popf
inc
push
mov
fisubs
mov
data16
imul
dec
adc
cmp
sbb
rorl
popf
xchg
mov
or
or
in
pop
inc
stos
dec
adc
or
xchg
adc
adc
push
gs
ss
cmpsl
mov
cmpsl
jg
push
and
shll
adc
dec
ror
push
and
mov
xor
add
les
int3
push
cs
xchg
lea
xchg
addb
arpl
adc
lcall
cmp
shrb
mov
xchg
fldl
dec
fiaddl
mov
int
mov
push
shlb
repz
fadds
fcoml
enter
push
xorb
xchg
add
lret
adc
add
push
pop
sub
inc
subl
pop
frstor
sbb
adc
pop
mov
cmp
testb
lea
push
shll
scas
mov
sbb
adc
pop
in
mov
mov
lret
mov
xchg
and
or
jne
lea
mov
movsl
mov
cmp
dec
sub
test
scas
xlat
cmp
push
xor
mov
stos
fsubrs
cmp
stos
sub
add
inc
or
jbe
and
inc
jmp
inc
test
bound
js
mov
mov
repz
push
sbb
mov
cmp
repz
mov
mov
push
dec
jmp
ljmp
orl
test
popl
scas
cwtl
lea
lods
jne
sti
add
shlb
inc
push
or
jmp
icebp
test
outsl
ss
rclb
aam
xor
push
in
mov
xchg
insl
jg
inc
icebp
jle
lock
rolb
mov
jle
lock
mov
pop
subl
sub
inc
cmp
mov
call
orb
cmp
inc
inc
mov
or
inc
or
or
stos
test
push
aad
jl
loopne
addr16
jno
or
xchg
out
int3
and
mov
imul
cli
pop
les
aam
pop
fiadds
fisttpl
pop
ret
adc
call
sbb
push
mov
sbb
xor
push
mov
push
and
xor
dec
sub
push
sarl
sarb
add
inc
nop
cmp
dec
mov
jbe
pop
or
je
jmp
mov
cld
ljmp
or
xor
adc
test
aam
ss
lds
aam
sub
mov
in
adc
jne
xchg
shrl
xchg
sbb
test
mov
cmp
adc
or
pop
call
xor
xor
test
fsubrp
and
inc
repnz
or
or
jo
inc
add
pop
lods
int3
jl
cmp
and
sbb
mov
les
xor
push
push
xchg
dec
clc
push
adc
enter
push
push
sbb
sbb
push
add
xor
test
xchg
inc
push
les
decb
push
in
adcb
jb
into
mov
mov
or
jecxz
mov
out
mov
xor
mov
into
imul
fdivl
jns
jbe
push
xchg
test
ret
or
pop
jb
pop
push
add
sub
jo
xor
lret
mov
ret
push
addb
adc
xchg
or
and
pusha
test
push
add
pop
xchg
data16
in
inc
fwait
push
insb
inc
sbb
jae
pushl
push
fdivr
mov
js
decl
dec
pop
loope
sub
sbb
or
insl
ljmp
inc
test
je
sub
sbb
push
add
xor
adc
subb
out
jmp
cmp
or
sub
cmp
orb
andl
and
js
out
ret
lock
add
aaa
mov
sub
adc
jmp
outsb
into
es
adc
and
lahf
and
jmp
andl
mov
push
or
lea
pop
nop
sub
fistpll
add
mov
and
or
loopne
lock
cmp
and
dec
jbe
fisttps
dec
adc
inc
or
cs
iret
shlb
daa
nop
or
test
or
pop
lods
push
nop
cld
adc
and
sub
mov
push
movb
mov
sbb
or
fldt
clc
cmp
or
or
in
push
sbb
adc
imul
mov
aam
rcrb
sti
fsubs
pop
repz
sbb
xchg
mov
incl
xchg
shlb
adc
cmpsb
lods
add
ret
pop
sbb
sarl
or
enter
dec
pop
adc
jns
cmpsb
insl
sbb
xor
sub
popa
xor
in
xor
adc
imul
adc
pop
add
sbb
test
rol
call
iret
jnp
pop
push
outsl
or
ss
out
push
je
or
je
add
adc
inc
ljmp
mov
test
adc
mov
test
dec
mov
sbbl
push
add
adc
scas
inc
ds
xchg
pushf
mov
and
out
in
rolb
nop
sbb
push
lcall
or
scas
dec
lea
hlt
divb
jle
xchg
test
hlt
push
shl
and
sub
add
adc
sbb
cmp
sub
push
in
xchg
or
pop
ret
sub
int
mov
and
inc
xor
popf
inc
sub
pop
pushf
fwait
add
fwait
mov
push
cld
xor
cmpsl
imul
dec
pusha
or
pop
dec
ja
movzbl
dec
loope
loop
inc
and
inc
jae
jmp
popa
rorl
jmp
cmp
push
mov
dec
rolb
dec
subb
jle
pop
jno
mov
je
iret
dec
xor
idivl
bound
cmp
repz
dec
pop
inc
push
add
in
pop
cwtl
add
mov
adc
add
add
nop
and
fstl
ljmp
sbb
inc
mov
dec
je
add
rol
cmp
jo
out
aam
jne
ficoml
clc
push
xor
in
push
add
jmp
es
push
xchg
mov
fmull
sbb
aaa
es
add
add
es
and
sub
mov
je
pop
and
cwtl
dec
push
jo
adc
sub
and
inc
fisubl
push
out
sbb
nop
call
dec
out
mov
mov
das
xchg
mov
push
jle
ret
mov
sti
sbb
shll
dec
add
or
push
fldpi
or
lea
imulb
clc
das
cmp
xchg
mov
dec
cmpsb
mov
mov
mov
cmpsb
data16
jne
sti
xchg
cmp
jno
stos
pop
or
call
test
add
pop
loope
sub
add
rcrl
push
hlt
push
aaa
cmp
sub
movsl
orl
push
out
xor
mov
popa
jae
mov
push
sub
mov
add
xor
les
inc
outsb
or
sbbl
and
pop
or
xchg
call
clc
jns
lods
mov
inc
xlat
ret
mov
push
cmp
cmp
in
push
inc
mov
and
cmpsb
stos
xchg
mov
and
jg
orl
dec
push
sbb
cmpl
push
or
in
mov
mov
jle
mov
mov
push
fldt
xchg
rorb
ret
sbb
push
or
aas
cmp
jl
inc
das
push
sbb
test
lret
inc
add
push
aam
gs
dec
and
push
cmp
inc
cmp
mov
movsb
mov
mov
jbe
xorl
jp
pop
ja
jbe
movsl
cmp
xorb
and
add
add
inc
cmp
cmp
mov
popf
inc
xchg
push
xchg
lods
dec
xor
in
js
je
sbb
xchg
push
dec
pop
dec
shlb
dec
lods
inc
or
adc
or
test
lock
mov
cmpsl
pushf
pop
je
push
mov
mov
nop
pushl
pop
inc
shlb
pop
inc
adc
ret
or
orl
loopne
dec
mov
jp
jl
add
sarb
mov
enter
xor
xchg
push
test
xchg
loope
sbb
nop
ss
cmp
enter
fsubrl
mov
jge
popl
daa
add
cs
js
mov
int
bound
mov
lock
jbe
cmp
cmp
cmp
lsl
sarb
dec
mov
call
cmp
aaa
mov
jge
js
jne
cmp
xchg
aad
jge
in
shl
pop
and
push
cmpsl
adc
jbe
pop
jne
sbb
stos
pop
mov
sbb
dec
adc
pop
sti
test
out
and
or
xchg
jb
or
sub
pop
fcompl
test
sub
adc
dec
jbe
dec
inc
xor
xor
jo
test
aam
nop
mov
lock
xlat
adc
int3
cmp
sub
fbld
lods
inc
je
sub
fimuls
push
push
arpl
mov
jp
pop
or
or
dec
and
push
sbb
dec
movsb
je
test
sti
inc
imul
shlb
test
sub
jp
push
sub
jbe
je
add
and
push
andl
cmovno
je
add
mov
cmp
inc
mov
jl
or
insb
and
push
jmp
sub
inc
push
or
mov
or
stos
push
xchg
les
jae
sbb
je
and
mov
mov
dec
sub
cmpsb
repnz
fwait
lock
pop
fsubrs
sub
cld
xor
inc
cmp
cmp
add
mov
cmpsb
in
pushf
in
pushf
cltd
iret
mov
pop
push
add
ja
mul
jmp
or
arpl
rolb
and
les
cmc
push
addl
fdivrs
das
inc
mov
push
adc
push
nop
or
and
add
cli
mov
shlb
aas
push
inc
cld
cmpl
adc
in
je
jmp
adc
sbb
add
fcompl
fisubrs
test
sbb
out
loopne
mov
movsb
fildll
inc
and
rorb
inc
lds
lea
xor
addb
adc
xchg
xchg
icebp
inc
movsl
imul
cmc
int
lea
in
call
ret
fidivl
push
and
icebp
and
into
and
nop
xchg
xchg
or
lret
jo
mov
lahf
adc
arpl
sub
inc
cmp
jno
mov
testl
pop
cmp
loopne
inc
push
or
pop
jmp
sub
jo
ret
rcr
testl
pop
xchg
mov
add
adcl
xchg
add
inc
sarl
stos
push
jne
lock
sbb
hlt
loope
dec
nop
sub
stos
lock
mov
cwtl
lahf
xchg
push
and
test
push
stc
outsl
or
xchg
clc
arpl
jmp
sub
js
test
mov
mov
daa
loopne
pop
pop
dec
popa
shll
mov
add
inc
loopne
jae
mov
push
mov
add
adc
push
aam
adcb
xor
sub
stos
jo
stos
pop
xchg
jae
sbb
nop
aam
or
cmpsb
mov
sbb
aaa
cmp
loopne
pop
imul
gs
mov
push
hlt
sti
pop
mov
fistpll
test
jp
add
sub
sbb
and
xchg
shlb
fsubs
scas
jge
movsb
xor
push
mov
loope
popa
mov
push
pop
sub
jno
sbb
inc
add
sbb
and
push
mov
mov
and
fmull
lcall
adc
stos
pop
jb
mov
sbb
in
adcl
or
pop
sti
cmp
hlt
and
inc
lods
mov
xchg
cmpsl
xchg
adc
jb
je
sbb
xchg
jp
mov
push
or
insl
aaa
sub
add
jo
cmp
or
fidivs
push
imul
cmp
testb
sbb
adc
cmp
je
in
push
pop
cld
dec
pop
dec
fisubrs
sub
ret
jne
pop
loopne
adc
pop
and
wbinvd
call
js
ret
gs
addl
push
fs
sub
push
inc
or
test
test
mov
cmc
test
data16
pop
stc
or
mov
push
test
adc
cmp
sbb
fidivrs
jbe
xor
test
inc
push
lds
cmp
addb
pop
inc
shlb
popl
ja
or
adc
test
out
cwtl
add
sti
jb
sub
sub
xchg
scas
pusha
xchg
cmp
or
andb
sbb
pop
lcall
mov
popa
roll
fisttps
dec
adc
testl
loope
fisttpl
add
or
xchg
cmp
leave
pop
lea
inc
sarl
inc
pop
pop
inc
mov
adc
mov
dec
push
call
sub
cmp
and
add
lahf
sub
popf
outsl
sub
jbe
loopne
xorb
shll
lods
mov
or
jne
insl
gs
test
mov
push
xchg
push
imul
imul
pop
fcomp
call
push
pop
ja
mov
call
pop
cmp
in
or
xor
leave
js
imul
popf
shlb
adc
push
ja
push
mov
in
push
jae
shrb
movsl
sbb
fldl
and
add
or
sub
and
sub
adc
mov
or
dec
mov
cwtl
and
out
adc
in
xchg
jo
jne
cwtl
jge
inc
or
push
inc
mov
jae
and
lahf
adc
mov
mov
push
faddl
sbb
loope
out
xchg
push
mov
adc
sbb
js
sub
jge
pop
out
pop
and
and
adc
and
cmp
mov
jg
mov
cmp
aaa
outsb
or
mov
mov
aam
inc
movsb
push
push
inc
add
or
dec
testb
push
or
cmp
aam
or
or
inc
add
push
push
cmc
pop
cmp
je
and
and
and
push
dec
cwtl
push
push
dec
jnp
pusha
in
ret
mov
cmpl
ret
aas
dec
aaa
gs
out
subb
imul
dec
pop
or
mov
mov
nop
jle
and
fnclex
ret
fnsave
mov
xchg
lods
push
adc
frstor
xor
inc
adcb
loop
enter
leave
out
cmp
adc
mov
loope
and
fnstcw
addw
lahf
sub
add
rcll
lock
pop
movsb
jne
lock
jp
add
add
inc
inc
lea
xor
adc
cmp
or
adc
sbb
add
testb
out
bound
lea
jmp
inc
push
out
sbbl
or
push
or
inc
jmp
fsubp
std
add
rcll
push
je
test
lock
pop
mov
push
sarb
or
dec
pop
xor
cmp
fldl
pop
and
and
inc
jne
push
ret
pop
testb
pop
jbe
jb
fnsave
dec
dec
dec
pop
frstor
fldl
adc
inc
cmpsl
je
inc
dec
pushl
call
out
loope
xchg
test
loope
dec
lcall
aaa
cld
into
jmp
shr
imull
xchg
loop
lds
fldt
je
cmp
jbe
lods
xchg
fldz
and
mov
pop
xchg
xchg
pop
fld1
daa
xchg
mov
cltd
dec
or
leave
ljmp
lods
lock
mov
fcomp
negb
push
jne
fmull
sub
fldenv
add
outsb
mov
sbb
insb
cmpsl
push
lahf
add
inc
pop
push
or
dec
push
xor
repnz
mov
and
cmp
test
cmp
es
sbbb
cwtl
cmpsl
mov
clc
xchg
loop
dec
push
fs
cltd
les
out
xor
inc
outsb
psubsb
jbe
dec
out
lcall
add
xor
mov
in
jnp
sbb
or
je
jmp
xchg
push
xor
clc
imul
xorl
jmp
or
int3
adc
xchg
add
fstpl
sbb
sbb
imul
xchg
xor
aaa
fsubl
dec
inc
fsubs
test
mov
repnz
pop
adc
loopne
sub
add
clc
jmp
bound
lods
fwait
sahf
jp
fstp
and
mov
inc
fdivrp
jecxz
mov
sbb
mov
fstps
hlt
repz
mov
je
inc
pushl
lcall
rcrl
fldl
sbb
mov
test
sbb
pop
push
daa
push
sub
subl
test
jo
or
or
xchg
pop
jmp
mov
cmpsl
or
cmp
std
out
xchg
test
jne
pop
cmp
push
jge
and
add
push
addb
or
cmpb
pop
fucomi
adc
inc
jg
adc
enter
or
clc
mov
shll
jmp
je
cld
fs
mov
push
cli
add
stc
lcall
sbb
and
add
aas
sub
push
idivl
dec
or
rcrl
fldl
push
push
fbstp
call
loopne
out
andb
addb
ljmp
push
push
jne
sbb
imul
sbb
lret
add
jle
jo
xchg
xchg
roll
into
mov
xchg
jle
sub
adc
add
gs
dec
push
push
je
ficompl
cmp
lret
rcll
inc
cmp
movsl
ds
cmp
clc
lret
das
push
sbb
hlt
jbe
and
cmovg
cmp
jle
add
js
mov
adc
lret
add
add
aaa
jne
push
shrb
and
sub
loop
sbb
mov
cld
mov
mov
jo
loopne
pop
pop
xchg
sbb
cmpsl
pop
test
loop
adc
incb
jae
cmp
int3
das
and
inc
xor
std
enter
or
fs
pop
mov
in
add
cld
xchg
jae
sbb
lds
add
pop
andb
fs
mov
loopne
pushf
hlt
adc
sbb
dec
fnstenv
lock
cwtl
in
sbb
in
enter
jp
inc
push
mov
jb
mov
out
shl
mov
push
jo
rclb
push
pop
jo
add
push
cmp
fadds
cmc
movsl
rcrb
pushf
jge
sbb
mov
dec
and
push
hlt
clc
in
cmp
mov
cmp
mov
sbb
or
insl
clc
cmp
fadds
stc
mov
int3
aas
shrb
jno
push
es
mov
repz
es
int3
or
and
jnp
fsubrs
lods
and
fcomps
int3
iret
ret
mov
loopne
setne
xchg
push
pop
mov
pop
dec
or
jo
ret
gs
cld
or
adc
mov
js
stos
or
add
clc
adc
out
cmp
dec
adc
jmp
pushf
adc
pusha
add
inc
jmp
ja
pop
int3
push
sub
stos
ss
cmp
add
push
jbe
mov
dec
addl
add
add
fstpl
dec
push
dec
adc
mov
addb
add
add
adc
lods
int3
in
ret
dec
add
inc
add
add
imull
push
mov
dec
andb
push
call
inc
dec
dec
xchg
push
lock
add
pop
cld
pop
add
and
sub
or
mov
xchg
ss
dec
adc
pop
mov
clc
imulb
icebp
mov
ret
popl
pop
and
pop
cwtl
sarl
in
push
js
pop
push
or
push
xor
cmp
adc
mov
adc
dec
add
push
or
rclb
sub
scas
inc
add
movzbl
fistpl
mov
addr16
mov
aad
in
jo
jmp
cmp
scas
enter
fldl
xchg
dec
sbb
out
or
pop
ret
sbb
aaa
inc
sub
fisttpll
call
xor
xchg
dec
data16
add
orl
mov
fwait
lea
popa
jmp
cmp
mov
jne
loopne
xchg
sub
push
xchg
xor
mov
inc
jo
xor
in
xor
sub
cmpb
fisttpll
push
addb
lods
test
js
imul
insl
mov
mov
pop
push
jo
sahf
lret
push
ficoml
pop
jmp
adc
sbb
add
rorl
push
pop
sbb
or
orl
add
add
mul
push
push
iret
dec
cmp
sahf
add
loope
mov
loope
rcrl
adcb
add
push
add
je
or
mov
push
inc
sbb
cmp
out
pop
mov
xchg
roll
addb
insb
add
push
insb
ret
push
outsb
gs
dec
dec
jg
xor
inc
pushf
shlb
daa
xor
push
ret
inc
dec
push
hlt
ss
push
add
je
mov
mov
ljmp
mov
mov
mov
sub
aaa
imul
pop
add
shlb
inc
xchg
xchg
cld
negb
jnp
pop
loope
mov
insb
sbb
inc
or
xor
rclb
adc
addb
ficompl
aaa
mov
push
call
push
imul
sub
ret
leave
xorb
dec
inc
aam
push
sub
ds
sbb
ret
pop
or
cli
ficoml
or
jmp
nop
mov
mov
and
push
or
sub
mov
adc
push
enter
orl
ds
xchg
pop
jae
jne
push
add
loopne
lcall
jmp
cmpsl
mov
mov
aam
push
xchg
mov
jne
data16
jo
mov
sarb
fiaddl
ret
sbb
sub
sub
pusha
push
bound
js
or
mov
sbb
dec
xor
mov
out
sbb
fldt
jne
inc
jg
mov
add
push
test
inc
push
xor
shr
rcr
shr
rcr
or
sbb
lock
fildl
add
jb
cmp
loope
sti
ja
jb
cmp
add
mov
dec
dec
fcoms
mov
mov
mov
xorl
dec
and
or
mov
out
add
adc
jnp
sbb
or
push
or
jns
jmp
out
push
lahf
mov
xor
sbb
add
adc
push
jns
adcl
adc
push
or
push
in
adc
in
and
jno
jge
xchg
lods
daa
repnz
mov
mov
add
inc
loop
mull
das
outsb
cmp
sub
movsl
mov
pop
or
call
xchg
stos
mov
dec
andb
cs
out
push
fidivs
push
jl
or
pusha
dec
stos
ds
xchg
cs
sbb
add
dec
mov
int3
lea
dec
movsl
imul
jbe
inc
inc
inc
inc
jg
cmp
repz
or
push
les
rep
pushf
jg
mov
sbb
out
call
sahf
out
sahf
lock
hlt
clc
clc
cld
push
outsb
cltd
jp
ja
mov
or
loope
or
pop
mov
xchg
in
fildl
pop
repz
xor
push
inc
sbb
dec
outsb
mov
into
jl
cld
jmp
sub
or
orb
fsts
out
xchg
pop
stc
sub
jnp
mov
pop
nop
cwtl
push
mov
int
fiaddl
je
add
dec
lods
mov
mov
out
add
in
xchg
outsb
out
add
nop
dec
dec
popa
pusha
fisubrl
push
pop
add
dec
in
aad
pop
add
xor
cmp
inc
ds
repz
push
pop
fs
iret
repz
das
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
icebp
jns
xchg
nop
or
sub
push
add
inc
pusha
mov
pop
pop
daa
outsl
add
xchg
jb
inc
je
adc
sbb
sub
mov
adc
pop
nop
add
or
push
ret
push
inc
or
mov
inc
test
ja
andb
dec
adc
adc
dec
test
jb
cmp
inc
mov
jge
or
or
inc
cli
rcrb
test
mov
and
mov
mov
push
in
in
or
or
jae
popf
sti
mov
xchg
mov
and
or
inc
adc
push
sub
push
addr16
fucomip
push
push
sub
mov
dec
cli
cmp
sbb
add
xchg
sahf
fdivrp
es
mov
jbe
add
add
push
sti
dec
rorb
ja
jb
ja
andb
dec
fsubp
or
call
mov
dec
inc
call
adc
add
push
xor
adc
shrd
shr
ret
and
mov
and
shr
outsb
adc
sbb
push
lods
or
int3
pop
push
jle
sarb
lods
in
scas
cld
dec
cmp
pop
push
cmp
inc
scas
adc
sbb
sub
pop
imul
mov
sbb
xor
mov
pop
clc
ficoml
aaa
cmp
mov
push
cmpsl
imul
mov
mov
mov
mov
imull
inc
insb
cmp
daa
jne
mov
inc
daa
test
inc
pop
add
pushf
stos
mov
aaa
loopne
xchg
add
and
popf
push
ds
dec
xor
push
popf
push
movsb
jp
xchg
push
addr16
mov
push
mov
mov
jmp
clc
inc
test
mov
push
enter
aas
jne
pop
cmp
and
je
inc
cmp
dec
dec
andb
popa
adc
jnp
push
in
mov
fisttpll
insb
xor
aam
ss
pop
ret
mov
scas
leave
rcrb
cmp
push
cmp
fs
fiadds
sbb
push
push
push
cmp
jne
push
push
add
fidivs
sbb
push
add
xchg
sbbb
or
pop
lock
or
pusha
jne
inc
ret
adc
call
lcall
jns
aam
dec
cmp
pop
jmp
pop
or
js
pop
adc
in
push
stos
aas
call
and
jmp
arpl
lea
mov
xor
inc
inc
xchg
test
push
cmpsb
xor
xchg
jmp
fmull
sbb
dec
or
inc
mov
and
out
lea
or
adc
and
aas
test
add
cmp
cmp
or
daa
pop
mov
add
in
or
aaa
jo
and
or
int3
sbb
or
push
jnp
sub
jne
pusha
js
cmp
jmp
jno
loope
ja
inc
loopne
add
and
out
loope
es
mov
popa
add
sbbl
dec
clc
xor
cmpsl
jne
push
sub
lea
mov
out
inc
add
and
push
jae
push
or
loopne
inc
push
mov
xor
and
mov
in
xor
xchg
xchg
mov
rorl
xor
aaa
xor
sbb
xchg
push
jge
cs
jle
inc
ljmp
mov
sarb
mov
es
cmp
add
and
repnz
lea
add
pop
mov
or
jg
testl
mov
jl
pop
xchg
xor
pop
xchg
out
sahf
or
cmc
rclb
mov
pop
cmp
sub
xor
add
lods
pop
fld
or
cmp
jbe
in
jnp
push
mov
daa
and
out
or
arpl
imull
or
push
push
adc
std
jae
mov
bound
cmpsb
adc
ss
mov
ret
into
popa
sub
fstps
call
in
pop
das
cmp
popf
out
js
add
inc
pop
or
ljmp
popl
das
sub
jno
xor
adc
mov
jmp
aad
push
mulb
inc
clc
jp
push
sub
pushf
mov
pop
je
push
dec
push
lods
sbb
ret
cmp
and
out
mov
lret
adc
add
gs
test
pop
xchg
mov
add
pushf
sub
push
popa
pop
and
sbb
cmpl
clc
lea
fs
imul
add
lcall
sub
push
cmp
je
pop
pop
test
dec
imul
popa
adc
in
inc
dec
es
sbb
push
andb
mov
mov
xor
popf
int3
mov
sbb
mov
nop
push
add
sarb
enter
icebp
jl
mov
movsb
xchg
jle
jmp
addl
cmp
lods
push
add
jle
adc
ret
jno
cld
add
dec
mov
cmp
je
or
orl
or
inc
inc
mov
and
inc
push
mov
mov
test
je
xor
cmpb
jne
mov
push
clc
in
scas
jmp
and
mov
push
inc
jl
add
adc
loope
and
lret
push
cmp
into
rol
and
pop
imul
add
push
xchg
mov
pop
cmp
je
cmp
ja
push
pop
loopne
xchg
pusha
ds
xchg
mov
loopne
cmp
out
cmp
sbb
add
lcall
cmp
inc
pusha
add
divb
test
sbb
xchg
mov
dec
cmc
sub
sbb
sbb
or
fnstenv
push
jo
loop
and
push
push
jecxz
push
adc
add
and
icebp
jle
xor
and
jbe
popa
and
or
shll
les
cwtl
movhps
inc
cld
cmp
je
outsb
insb
fdivl
out
iret
adc
add
adc
cmp
arpl
outsb
or
dec
cmp
in
sub
neg
add
pop
ret
dec
mov
std
adc
es
clc
sub
cld
ret
mov
xor
arpl
xor
mov
xor
clc
testb
mov
je
es
xchg
push
pusha
inc
mov
cli
jno
jmp
adc
test
add
icebp
mov
jne
add
jecxz
cltd
test
sub
lret
adc
sub
jne
je
jp
movsl
push
inc
push
test
add
jg
loopne
pop
rep
test
mov
lret
fbstp
add
jecxz
inc
add
in
and
dec
push
imulb
push
xor
rorl
enter
loopne
xor
std
xchg
lcall
inc
adc
inc
push
fnstsw
shl
dec
shll
and
inc
xchg
sbb
pushf
jp
cmp
cltd
ret
insb
orb
lods
mov
icebp
hlt
movsb
dec
pop
sbb
enter
inc
iret
adc
and
cs
movsl
and
jb
shr
and
add
or
clc
int3
movsb
mov
dec
jne
pop
push
inc
cmpsl
nop
dec
jmp
cmp
fwait
xchg
xchg
je
mov
mov
dec
cld
push
and
jmp
sbb
adc
cmp
shll
enter
inc
mov
xor
mov
test
pop
test
add
call
inc
and
xor
or
mov
sbb
or
test
movb
mov
or
push
dec
icebp
cmp
push
or
sbb
and
adc
pop
mov
fidivrs
xchg
sarb
bound
mov
push
scas
sub
nop
push
sub
cmp
push
xchg
jo
dec
test
adc
sbb
lea
cmp
mov
cmc
xchg
sub
and
imul
and
mov
les
cmp
adc
pushf
sbb
rorb
xchg
jle
rcll
mov
mov
jmp
popf
fisubrl
dec
sub
pop
lahf
stos
inc
loopne
inc
push
adc
imul
sub
call
and
popf
jne
out
mov
inc
pop
cli
call
lock
add
and
loopne
cmpl
cmp
sub
adc
and
pop
push
inc
add
and
sbbl
aad
xor
cmp
jp
dec
mov
clc
pusha
fwait
jg
je
sub
cmp
sbb
and
add
fiadds
scas
rorb
rcr
mov
mov
cmpl
add
jmp
es
popa
je
xchg
push
mov
shl
nop
into
daa
pop
inc
or
xor
push
push
push
clc
jnp
adc
adc
cmp
je
mov
xor
sub
popf
jmp
ss
leave
sbb
sahf
dec
cmc
sub
repz
push
xor
loopne
out
mov
ljmp
sbb
cmpsl
repnz
sbb
out
and
repz
sahf
loop
adc
adc
mov
inc
lea
push
jecxz
add
adc
es
mov
jmp
push
dec
add
and
mov
or
push
push
cld
or
and
push
clc
div
test
movzwl
adc
xchg
fistpl
or
or
sub
je
adc
fbstp
or
pop
les
fs
enter
push
fists
xchg
pop
rol
push
stos
icebp
cmpsb
fcoml
inc
mov
aaa
fdivr
aaa
xchg
out
xor
adc
inc
mov
inc
or
outsb
in
push
jmp
cmp
cmp
pop
cmp
jb
es
data16
lret
sbb
movsl
mov
lods
push
out
clc
jne
ds
mov
dec
add
adc
scas
lods
and
mov
adc
ror
jae
or
and
stos
push
popa
mov
mov
fstpt
cmp
iret
mov
push
xchg
or
mov
insb
add
cmp
sti
xor
jbe
rcrl
mov
lcall
enter
mov
imul
call
cmp
bound
clc
push
jae
push
jmp
fs
cmpsb
and
push
mov
push
pop
inc
cmp
sub
push
insl
mov
add
sbb
inc
int3
cs
xor
push
pop
xchg
sbb
punpckhdq
mov
cltd
xchg
cmp
sub
movsb
sbb
into
lock
push
xorl
and
loopne
and
scas
mov
lds
arpl
push
jb
mov
jb
hlt
aas
push
repz
push
inc
xor
pop
inc
xor
aas
add
add
push
cld
fmuls
pop
or
or
gs
sub
inc
inc
jae
or
dec
mov
jl
add
inc
add
adc
push
push
pop
pop
add
ret
xor
dec
push
or
fildl
mov
inc
add
lds
stos
or
pop
or
fisttpll
pusha
xor
xor
jmp
mov
cmp
mov
or
or
pop
sub
push
inc
dec
sub
xor
inc
repnz
dec
dec
jmp
imul
pop
push
sub
xor
rep
mov
or
dec
loopne
or
sbb
lods
addl
add
test
inc
add
test
add
pop
inc
bts
jmp
fwait
mov
inc
mov
sub
mov
arpl
and
dec
and
ss
std
mov
std
xchg
jbe
dec
push
stos
add
xchg
mov
movb
pop
xchg
mov
pop
outsl
xor
push
adc
out
and
rcl
or
mov
add
adc
data16
or
enter
add
leave
cwtl
push
cltd
or
outsb
sub
jae
arpl
cltd
sub
nop
bound
adc
add
adc
movsl
popf
idivb
out
aas
in
jg
mov
mov
and
or
cltd
jle
push
mov
scas
or
pop
enter
mov
inc
mov
push
xchg
scas
nop
daa
lock
xchg
push
fistps
jge
xchg
pop
jo
push
orb
sub
and
mov
fisttps
pop
adcb
jg
or
out
sahf
out
xor
and
adc
add
shrl
jmp
jo
jl
pop
jns
pushf
fcomip
and
and
push
push
and
and
or
xchg
loop
mov
fists
push
jo
fists
dec
fbstp
jns
out
mov
int3
aam
add
ds
popf
aas
add
sub
sub
or
pop
cs
inc
mov
int3
inc
inc
xchg
imulb
rcl
dec
movsl
test
les
pop
add
dec
loope
cmp
test
lcall
pop
inc
and
push
scas
faddl
push
sub
push
xor
shl
movsb
mulb
in
je
jmp
and
lcall
in
push
or
add
inc
pop
jmp
sbb
subb
imul
and
mov
cli
mov
jecxz
in
cli
mov
adc
je
cmc
das
inc
sbb
cli
mov
sbb
lret
out
jg
je
rep
je
inc
dec
js,pn
jns
test
pusha
or
adc
add
xor
inc
sub
mov
add
adc
sbb
sub
lret
inc
mov
cmp
xchg
inc
mov
xor
add
cli
ret
adc
or
fs
push
mov
imul
inc
ds
loopne
pop
or
xlat
clc
test
leave
dec
xor
inc
inc
dec
dec
scas
pop
cmp
jne
mov
add
push
add
cmp
or
test
shlb
enter
imul
repnz
add
inc
mov
cmc
sub
cwtl
daa
xor
sbb
jge
or
cli
mov
decb
cmp
jne
sbb
out
jne
inc
movlhps
or
or
ja
int
mov
push
lds
push
cmp
jl
add
insb
xor
ficoml
dec
mov
je
mov
adc
sbb
add
popa
cmp
std
fchs
push
ficompl
sbb
fsub
push
pop
inc
pusha
sbb
adc
pop
xchg
sbb
mov
adc
or
movsl
sbbl
push
loop
icebp
testl
jp
push
loopne
mov
cmp
adc
cld
jg
push
sub
mov
sub
and
and
sahf
sub
or
loopne
das
enter
and
sub
insl
cmp
daa
mov
sub
test
mov
int3
add
test
cmp
pop
cltd
mov
mov
inc
add
or
dec
imul
push
shlb
cltd
sub
inc
add
adc
push
jmp
push
add
or
push
rcrb
cmpb
inc
xchg
sbb
or
pop
cs
cmp
stos
push
jle
mov
inc
xor
inc
sbb
sti
add
or
jge
inc
and
inc
insb
inc
lahf
es
fdivrl
loopne
or
adc
dec
inc
sbb
adc
xor
or
xchg
mov
cmpl
mov
fidivrl
jp
push
mov
sbb
movsb
sahf
mov
sub
mov
nop
dec
ret
adc
jne
sbb
fcom
rcl
mov
sbb
ja
adcl
loop
stos
and
inc
dec
rclb
jbe
pop
adc
out
add
decl
push
pop
cmc
popa
cld
xor
jmp
andl
xlat
and
fnstsw
sarl
jne
dec
xchg
pop
adc
subl
push
mov
inc
add
and
ja
fs
xor
jbe
imul
sbb
shll
repnz
sub
iret
add
add
test
loopne
sub
call
push
push
push
je
repnz
push
mov
cmp
mov
inc
iret
call
push
pop
imul
sbb
ret
or
outsb
loop
pop
sub
subl
pushf
ret
push
jl
fcmovnu
mov
and
cmp
push
pusha
push
std
pminub
fcoms
mov
je
add
xchg
add
arpl
es
js
or
push
mov
or
dec
repz
mov
mulb
push
nop
and
lods
js
icebp
add
jo
rorl
test
pop
out
add
mov
sbb
push
pop
jmp
aad
mov
sbb
into
jae
incb
cltd
pop
sbbb
clc
sbb
mov
inc
lods
push
fsts
xor
nop
insl
adc
scas
lods
out
icebp
popa
rorl
mov
jo
sub
sub
add
inc
add
push
push
add
ljmp
add
push
sbb
data16
rorb
cmpsl
or
movsb
call
cmp
xrelease
das
cli
add
pop
cmp
ljmp
dec
or
add
subl
mov
jo
dec
ret
movsl
sub
pop
push
xchg
dec
sub
pusha
add
out
dec
ljmp
ljmp
insb
rcrb
push
punpckhbw
lret
add
and
movsb
sti
jmp
sbb
in
inc
cmp
outsl
imul
stos
mov
cmp
sub
jg
insb
cwtl
push
mov
and
dec
pushf
and
enter
xchg
jbe
push
add
and
ret
mov
push
test
mov
enter
sarb
and
loope
mov
jne
or
xchg
xor
xor
cmp
pop
js
pushf
movsb
ss
sahf
or
aam
jbe
mov
pushf
rcrb
call
ss
jne
ljmp
sbbb
xor
inc
cmp
jge
popf
movsl
fldl
jbe
mov
lea
inc
xchg
popa
mov
iret
ret
fnsave
insb
pop
adc
inc
sbb
add
add
cmp
aam
frstor
dec
mov
unpcklps
xchg
mov
sarl
or
bound
lock
or
or
cmp
je
fmuls
mov
shll
je
or
adc
add
xchg
push
jne
out
ss
je
push
fiaddl
int
testb
adc
sub
sbb
inc
call
mov
lods
mov
or
inc
adc
dec
test
stos
pusha
pop
xchg
push
loop
pop
adc
inc
scas
and
adc
jne
pop
loopne
mulb
push
negb
cmp
js
sub
out
in
fwait
or
jmp
push
ret
pop
adc
push
mov
add
xor
rolb
add
pop
sbb
adc
mov
adc
daa
je
jge
cwtl
and
bound
rorl
notl
mov
rcl
loopne
and
xchg
or
ror
dec
adc
ret
xor
inc
popa
fs
cmc
and
push
push
pop
lcall
xchg
nop
and
dec
mov
pop
pushf
dec
lret
and
xor
xchg
lahf
sub
shll
dec
cmp
jbe
mov
lret
sbbb
cli
sbb
sahf
out
mov
inc
push
roll
stos
mov
bnd
jns
jl
xor
enter
mov
in
push
jmp
cmp
sbb
test
dec
and
rcr
add
dec
and
les
add
inc
jno
loopne
stos
sbb
scas
imul
mov
pop
inc
push
and
mov
jns
hlt
loopne
add
or
cmpsb
push
fisubl
and
and
dec
mov
push
or
cmp
add
xor
xor
pop
cmp
sar
fiadds
pusha
inc
mov
add
or
or
adc
sub
stos
cmp
fldenv
sbb
pop
push
xchg
push
je
and
aaa
cmp
add
ja
in
inc
frstor
push
movsl
adc
popa
cmp
add
mov
orb
loopne
mov
call
sbbl
stos
push
xchg
in
dec
mov
xchg
xchg
push
stos
add
push
jge
xchg
xorb
es
mov
mov
rclb
adc
mov
or
cld
inc
sub
or
cmpsl
in
ret
jne
andb
mov
add
xchg
push
aas
inc
and
add
mov
mov
jmp
sub
pop
loopne
inc
dec
jb
jo
or
xchg
sbb
pop
aas
cwtl
sbb
xor
inc
mov
imul
sbb
push
or
scas
repnz
loop
loopne
pop
daa
popa
push
and
push
sbb
dec
shlb
or
jbe
fdivr
adc
in
pop
pop
add
dec
mov
ret
cmc
push
nop
cld
mov
add
dec
or
movsl
xchg
push
ja
fcomp
andl
add
add
rolb
push
adc
sbb
dec
and
addr16
and
mov
mov
add
loop
add
dec
pop
popa
popa
sti
dec
and
xor
or
loop
outsb
js
or
mov
dec
test
nop
cmp
xor
jne
aas
add
pop
add
xchg
mov
fdivrl
call
mov
sub
jnp
inc
pusha
loopne
or
mov
cmp
and
push
dec
ret
pop
add
push
insb
push
ss
sbb
mov
or
jb
push
pop
dec
dec
in
cmp
jbe
mov
mov
icebp
outsl
jb
mov
mov
rorl
cmp
lcall
cld
add
dec
test
mov
lods
xchg
or
test
adc
dec
or
call
mov
mov
and
push
jecxz
rcr
mov
daa
or
lea
clc
mov
lock
push
mov
add
jbe
xor
mov
add
ja
je
mov
outsb
xchg
sahf
inc
xchg
decb
mov
xchg
cmp
std
imulb
or
cmp
icebp
cmp
jb
adc
push
stc
and
sbb
jo
add
sbb
fs
lock
dec
cmp
repnz
outsb
mov
or
push
dec
xor
push
cmp
aaa
or
enter
stos
cs
dec
cmp
inc
lods
leave
stos
mov
loopne
shrb
dec
inc
cmp
cmpsl
or
push
mov
dec
insb
push
push
mov
xchg
ficoml
sub
jge
mov
dec
adc
cmpsb
dec
cs
add
enter
in
cmp
mov
es
ja
leave
insl
cmp
inc
pop
pop
pusha
aam
add
pushf
sub
mov
popa
cld
lea
jl
jb
in
out
mov
xchg
cmp
sub
sbb
add
jb
inc
sbb
adc
jl
shlb
push
scas
add
or
xor
shl
mov
xor
in
imul
sub
in
cmp
add
push
in
stos
pushf
je
xchg
xor
test
dec
pop
test
push
mov
xchg
sarb
or
add
push
mov
ss
mov
adc
jg
jge
jge
subl
loope
shll
mov
inc
test
subb
push
pop
ljmp
ret
mov
rorb
call
les
xchg
cmpl
push
std
test
mov
and
add
inc
lret
pop
xchg
dec
std
pop
sarb
shrb
and
clc
add
cmpsb
adc
ss
xorb
sbb
sbb
lock
or
mov
dec
inc
pop
add
xchg
jno
pop
sbb
cltd
test
cmpb
cmpsl
or
ljmp
adc
xor
daa
fsubl
push
mov
cmp
jge
out
mov
and
push
adc
sub
mov
mov
in
test
cmp
push
or
cmp
sbb
mov
lock
pushl
rcr
xor
sub
adc
xchg
sub
addl
or
fneni(8087
xor
jmp
aaa
call
mov
mov
sbb
inc
cmp
sub
imul
adc
and
xorb
xchg
mov
add
loop
idiv
jmp
jl
mov
jge
add
lea
mov
test
xor
pop
jae
mov
incl
cmp
cmp
xchg
out
pusha
inc
popa
jbe
lods
lahf
sbb
sahf
orl
pop
mov
sub
or
dec
cli
cmp
mov
push
cld
mov
inc
pop
mov
cmc
inc
inc
pop
aam
scas
dec
pop
sbb
sub
shll
push
pop
sti
faddp
mov
lea
push
icebp
jmp
clc
movsl
movsl
pop
mov
jns
add
rcll
inc
or
pop
ss
push
jno
scas
stos
and
mov
add
push
adc
imul
nop
and
pop
dec
inc
mov
xadd
popa
test
js
insb
sbbb
xchg
jb
adc
test
push
ds
pop
cld
jne
imul
push
xor
mov
js
and
pop
aas
inc
dec
push
add
repnz
adc
adc
or
pop
mov
inc
push
jecxz
sbbl
movsl
lret
sahf
pop
lock
inc
aas
adc
dec
mov
pop
jnp
push
xchg
sub
or
call
add
insl
add
hlt
mov
movb
mov
aaa
push
push
repz
test
adcb
pop
sbb
call
xchg
cli
or
sbb
inc
inc
mov
call
xchg
and
lods
push
mov
pop
stc
inc
std
cmp
push
xchg
jl
xchg
push
mov
test
in
mov
mov
sbb
fcoms
pop
adc
nop
lret
xor
je
and
and
mov
jecxz
mov
sub
add
jb
xchg
xchg
enter
mov
jb
fcomp
mov
xchg
ja
popf
cmp
and
loopne
cmp
pop
xchg
mov
mov
sub
cltd
pop
clc
aas
lret
pop
jno
stc
fidivrs
or
pop
mov
jae
mov
popa
das
inc
add
push
mov
es
lcall
sub
andb
mov
test
dec
sbb
dec
je
adc
or
daa
xchg
adc
mov
idivb
mov
jmp
fs
ror
or
jo
cmp
sub
idivl
add
sbb
enter
sbb
xchg
je
lea
flds
sbb
ficoml
and
add
jge
or
sti
push
mov
lea
js
add
and
and
lods
or
jne
fcomps
and
pop
sub
inc
add
jmp
or
js
test
mov
pop
dec
orl
and
xor
add
subb
jbe
xchg
cmpl
fcomps
mov
adc
push
call
add
dec
cwtl
aaa
test
sub
and
and
xorb
es
push
ja
jp
leave
push
call
and
or
or
pop
ret
mov
lock
mov
movnti
adc
icebp
pop
daa
fbstp
negb
rorl
mov
fadds
jnp
scas
cmp
xorl
enter
jle
pop
pop
xor
test
push
pop
pop
inc
xor
push
mov
pop
mov
sbb
testb
outsb
sbb
push
xor
jne
or
cmp
mov
add
xchg
inc
cmp
sub
inc
lock
adc
iret
rol
mov
insl
push
and
test
jmp
add
negl
cltd
or
inc
clc
sbb
arpl
xor
cmp
mov
rcl
mov
adcl
adc
cmp
mov
mov
cmp
xchg
dec
push
push
xor
jo
adc
data16
movsl
inc
mov
sbb
inc
inc
jmp
and
les
push
xchg
or
sub
mov
pop
ror
data16
mov
rorb
insb
dec
lret
jmp
xchg
pop
pop
rorb
std
nop
or
adc
push
fnsave
sub
sub
imul
jb
sbb
orl
push
pop
and
inc
hlt
or
or
add
das
and
mov
adc
or
dec
add
mov
xor
loop
push
xchg
dec
push
cs
fs
inc
cmp
mov
aam
jl
xchg
and
or
sbb
into
fsubr
mov
enter
inc
cmp
cmp
xor
cmp
and
add
test
pop
mov
mov
call
aaa
scas
inc
xor
sub
loope
push
xor
enter
push
mov
cmp
or
insb
mov
ret
dec
add
rolb
add
xor
push
or
sbb
out
mov
rcrl
pop
xlat
and
sbbb
xor
push
mov
and
sbb
push
inc
adc
push
fs
out
ds
push
sub
or
jecxz
push
cs
ja
iret
add
jmp
repnz
mov
xchg
gs
and
push
inc
push
cmp
xchg
loope
test
inc
adc
cmp
xchg
icebp
add
cmpsl
mov
dec
jecxz
mov
cmpl
je
push
push
addr16
mov
call
xchg
and
cmp
test
pop
push
pushl
test
push
jne
pop
decl
ret
jl
or
movl
jnp
dec
pop
cmpsl
mov
sbb
inc
inc
push
andl
inc
push
mov
pop
es
xchg
push
cwtl
out
and
cmp
mov
push
or
mov
test
inc
repz
or
popa
scas
addr16
dec
xchg
push
dec
mov
cmp
loopne
pop
scas
add
add
xchg
and
and
js
or
cmpb
inc
xchg
test
dec
lcall
or
mov
push
addb
hlt
mov
into
sbb
mov
fistpl
cmp
inc
cmp
std
sub
xorl
mov
inc
lret
or
adc
jne
push
add
push
push
jle
callw
das
jge
mov
jmp
scas
add
das
mov
push
incl
jg
and
repz
add
inc
jmp
and
fs
or
or
mov
push
xchg
pop
into
pop
sbb
outsb
adc
add
sbb
lret
pop
adc
jnp
or
mov
push
pop
inc
bound
rolb
dec
push
jne
test
aas
je
fildll
inc
xchg
js
sbb
push
aas
aaa
scas
jbe
xor
addl
ds
popa
mov
andl
jne
sub
push
mov
xchg
or
dec
pop
and
js
shrb
or
out
sub
aam
testb
cmp
add
sbb
jg
add
cmp
xchg
fildl
jle
lahf
cmp
out
adc
aam
pop
or
sahf
or
sar
adc
popa
inc
sbb
add
push
pop
add
add
adc
cmp
out
push
xchg
or
inc
cmp
jmp
adc
addl
add
mov
ret
jmp
push
dec
dec
or
jp
arpl
mov
fisubl
inc
cmp
sti
or
sub
inc
aam
test
inc
test
sub
pusha
mov
adc
jno
pop
xorl
lods
dec
xchg
push
and
mov
ljmp
inc
jae
ss
ficoms
xorl
std
xor
or
aas
inc
outsb
stos
imul
lock
les
add
mov
push
adc
test
push
cmp
mov
out
pop
movsb
cmp
in
daa
fcoms
addl
lea
add
pusha
or
cmp
and
mov
aam
roll
adc
add
fwait
jl
add
and
inc
ja
jmp
add
add
xor
or
xchg
enter
cmp
sbb
stc
push
fwait
adcb
adc
enter
or
inc
inc
cli
pop
xor
inc
fildl
lock
test
sbb
xor
out
adc
negb
and
mov
pushf
add
cmc
push
js
shlb
loope
mov
ds
push
orb
dec
sbb
dec
jge
or
or
mov
xor
mov
add
xchg
in
dec
test
in
mov
sbb
xchg
push
out
or
fimuls
push
mov
outsl
cmp
mov
lods
int
cmpl
jne
pop
rorl
push
push
js
dec
sbb
xor
adc
aam
sbb
test
sbb
xchg
test
jg
or
fisubrl
es
data16
adc
and
dec
cmp
jmp
lods
add
mov
mov
mov
mov
aaa
add
xchg
sub
lea
push
loop
movaps
xor
andl
sbb
in
inc
in
dec
jb
cmpl
push
inc
mov
test
and
cmp
sti
lcall
bound
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
orl
jl
adc
into
cmpsb
decl
xor
dec
push
fs
adc
mov
lea
addr16
stos
xor
sub
xlat
and
ds
push
js
aaa
mov
cmpb
into
mov
jmp
shlb
repnz
lea
in
add
xchg
push
xor
mov
xchg
push
pop
fs
cmp
and
test
loop
and
dec
ret
add
or
xchg
je
arpl
jae
xchg
adc
mov
sbb
outsb
add
mov
push
add
add
scas
shr
stc
or
add
andb
popa
adc
ljmp
pop
sub
or
jmp
mov
dec
dec
jl
mov
cmp
fnstcw
or
icebp
cmp
xchg
sbb
pop
cwtl
mov
test
das
cwtl
adc
pop
or
add
mov
lahf
push
mov
jbe
xor
movsl
and
iret
sbb
add
push
fldenv
add
adc
mov
and
sub
nop
les
clc
sub
mov
cmpsb
sub
pushf
fcompl
dec
push
mov
lea
fbld
adc
xlat
xor
pop
add
jo
rcr
sbb
loopne
add
sub
sbb
add
inc
pusha
imul
mov
jne
adc
mov
or
sbb
add
int
stos
stos
push
lret
push
aad
int
dec
ss
int3
inc
out
adc
sub
push
jbe
inc
popf
dec
cmpsb
lret
push
or
dec
xor
mov
scas
mov
push
mov
mov
adc
popf
add
fdiv
push
mov
rdmsr
or
lret
jg
test
jecxz
and
stc
sbb
xor
inc
push
in
dec
cli
sub
cmp
je
cmp
enter
jl
add
mov
mov
adc
fldl
movsb
pop
rclb
jb
mov
or
je
push
les
push
jl
test
mov
pop
lcall
imul
sbb
adc
das
mov
add
sbb
test
int3
test
add
ds
add
sub
mov
setg
sbb
arpl
jne
std
dec
push
mov
and
test
shrb
xor
pop
roll
mov
push
jo
shlb
dec
cmpsb
jo
dec
sub
cwtl
push
mov
loope
pop
sub
int
rcll
data16
into
scas
cmp
lcall
mov
insl
xchg
outsb
cmp
lods
enter
inc
ficompl
mov
xchg
dec
jns
neg
add
cmp
jl
mov
jne
add
lds
sbb
in
or
in
add
xor
inc
inc
xchg
test
hlt
out
inc
add
xor
addb
mov
fstpt
adc
pushf
adc
mov
movb
sbbl
sti
add
jnp
pusha
test
or
insl
pop
xor
jmp
popa
fsubrs
inc
mov
jle
das
mov
pop
pop
pop
jbe
inc
clc
jge
adc
dec
jge
add
pop
push
sbb
dec
cmp
xor
cltd
shrb
push
push
popa
adc
mov
and
inc
ds
push
cwtl
and
sbb
mov
adc
ficoml
lods
xchg
dec
mov
pusha
adc
jl
jmp
and
or
add
sbb
inc
pop
cld
mov
and
or
mov
inc
in
or
jecxz
clc
lcall
adc
jo
adc
mov
push
add
inc
imul
and
inc
dec
out
inc
rcll
sbb
cli
push
add
test
pushf
adc
mov
or
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
jbe
fiaddl
ret
clc
fld1
faddp
testb
data16
ljmp
ficomps
cli
pop
in
test
xorb
imul
int3
mov
call
sub
sbb
mov
not
mov
xchg
or
or
cmp
adc
loope
ret
fldln2
inc
in
fstp
je
shll
es
inc
popa
lcall
ficoms
in
inc
gs
mov
inc
mov
mov
push
fldz
push
xchg
rclb
xchg
cmp
cmp
xor
jmp
xchg
mov
xor
add
adc
add
lea
cmp
loopne
add
adc
fcompp
mov
sub
fisttpl
xchg
inc
daa
jbe
lock
arpl
xchg
pop
mov
sbb
loopne
or
or
and
and
icebp
push
enter
fdiv
or
or
int
frstor
push
push
je
shl
sbbl
dec
inc
pop
cmpb
mov
sbb
mov
jmp
mov
xlat
mov
sub
jo
or
push
in
xchg
enter
pusha
xchg
loope
stc
shlb
hlt
add
shll
sub
loope
mov
das
jb
add
int3
mov
in
hlt
jmp
int
iret
out
insl
orb
and
rol
mov
sub
jl
loopne
shl
add
les
lret
add
call
out
cs
adc
imulb
sbb
ret
fstpt
or
mov
arpl
add
add
dec
push
pop
leave
pop
or
add
insl
pop
pushf
test
add
or
fnstenv
js
mov
dec
jg
loopne
or
pop
sti
sub
clc
xor
or
adc
adc
push
fcoms
cmp
ret
mov
mov
adc
movsl
xorb
mov
fisubl
loope
lret
dec
je
loopne
push
or
flds
hlt
nop
mov
insb
push
fldcw
adc
push
ret
mov
pop
and
mov
jnp
add
cmp
or
fldl
and
or
mov
jl
sbb
or
movsb
enter
or
and
sub
push
out
out
or
sub
scas
xchg
and
outsb
cmp
pop
mov
mov
sbb
cmp
popf
push
lcall
mov
fiadds
divl
push
cltd
or
and
les
jmp
daa
je
xlat
pop
mov
in
das
subl
je
mov
leave
pop
fldl
mov
fcompl
push
pop
adc
jae
dec
and
mov
push
xor
add
add
jae
fidivrl
imul
dec
jae
sarb
inc
adc
xor
push
adc
mov
in
ja
sbb
in
push
test
push
jo
fstpl
movsl
std
jp
jae
dec
jo
push
inc
paddq
mov
or
dec
xor
or
clc
pop
jmp
insl
cmp
loopne
gs
sarb
ss
inc
mov
test
mov
daa
lahf
movsb
popf
fwait
cmp
cmp
add
pop
adc
adc
sahf
cwtl
in
push
mov
pop
roll
in
pushf
pop
test
pop
jne
and
sbb
fstps
inc
sub
pop
fcomps
push
inc
add
data16
add
dec
xchg
mov
shll
movsl
test
or
and
and
push
rcll
fisubs
movsb
and
ffreep
sbb
add
imulb
pop
out
sbb
cli
divl
and
gs
push
pop
and
dec
adc
pop
dec
pop
dec
fcmovnb
xorb
fs
push
jp
add
fcoml
push
sub
lcall
sub
xchg
jbe
xorl
add
push
movsl
add
sub
dec
mov
mov
adc
sbb
jg
pop
rclb
or
test
nop
jns
and
pop
sbb
inc
add
int
mov
and
sbb
and
fwait
adc
push
or
add
loop
and
pop
insl
out
out
and
andl
shr
shrl
xor
mov
and
sahf
and
sub
scas
cmp
sub
lret
test
jle
lods
inc
push
testb
add
or
pop
xchg
movb
or
test
or
cli
pusha
ds
jp
adc
je
insl
cmp
sub
je
or
or
mov
mov
lods
ss
mov
iret
ficoml
movsl
jb
sbbb
or
mov
decb
and
and
jecxz
sbb
or
inc
in
add
or
jmp
inc
and
aad
mov
ret
sbbl
cmp
cmp
cmp
dec
and
jecxz
push
xchg
out
xchg
cmp
cmp
mov
mov
inc
and
pop
cmp
pop
inc
add
inc
stc
out
push
mov
mov
inc
or
sub
in
mov
sti
add
pop
lock
jns
out
test
fisttps
repz
insb
mov
loop
sbb
pop
dec
je
ljmp
fmuls
or
shll
push
and
or
or
test
or
push
push
push
imul
pusha
pop
push
stos
in
outsb
shrb
push
and
inc
dec
pop
sbb
pop
fldl
fstpl
cmp
jno
push
jb
pop
bound
or
jp
je
test
sbb
mov
cld
subl
inc
lret
or
pop
test
cmp
mov
orb
push
inc
mov
dec
pop
and
imul
stc
iret
pop
push
shrl
add
addb
xor
mov
adc
fcomi
fldl
outsb
aas
stos
or
pop
dec
mov
aas
jmp
dec
daa
notb
fstpl
mov
add
into
adc
aam
and
add
test
jmp
sbb
pop
loope
and
or
sub
or
lea
ds
xor
mov
into
sti
or
lret
jmp
test
jo
add
inc
add
mov
sub
cli
mov
pusha
add
sub
test
xor
inc
mov
hlt
sbb
bound
sbb
push
clc
push
or
xchg
lea
adc
push
pop
pop
je
imul
adc
cmpsb
adc
mov
and
mov
or
jns
push
cmp
inc
lret
sub
or
dec
pushf
sbb
and
rolb
lret
push
sub
and
mull
cmp
es
mov
mov
add
push
aaa
sub
push
pop
int
outsl
push
mov
pop
lret
sbb
and
mov
mov
add
pop
pop
pop
lods
jl
pop
add
and
adc
clc
add
push
sbb
jmp
test
push
xchg
dec
push
add
or
inc
nop
mov
shl
pop
test
sahf
add
cli
les
jo
dec
out
shrl
rcrl
je
in
pop
loope
or
inc
add
mov
clc
jg
enter
imul
stc
push
mov
push
adc
lds
push
ret
icebp
test
lretw
cmp
add
repnz
nop
mov
lock
mov
negb
shll
lock
push
mov
or
sbb
dec
jmp
js
inc
pop
adc
out
sbb
and
cmpsl
sub
daa
sub
ja
mov
ss
and
loope
jp
mov
cs
out
mov
fstsw
ss
nop
inc
ficoml
sbb
cld
ror
mov
dec
cld
or
out
das
adc
fldcw
inc
cld
cli
mov
cwtl
fwait
mov
jae
or
fwait
clc
adc
and
fwait
sbb
sub
scas
jmp
icebp
fstp
test
jbe
sbb
fldpi
xor
adc
xor
inc
or
adcb
fwait
out
std
pop
out
je
inc
repz
out
ss
test
js
xchg
jp
push
push
sub
inc
mov
lcall
mov
xchg
sbbl
push
cmpl
pop
nop
fsubrs
sbb
xchg
add
test
xor
xor
mov
aaa
jne
addr16
ja
fdivrp
sbb
je
cmp
je
push
xor
mov
inc
mov
mov
out
nop
outsl
cmp
movl
jp
lods
daa
ret
push
ss
or
dec
into
or
lcall
cmp
sbb
fwait
div
cltd
or
sub
sahf
pop
enter
adc
dec
popf
ret
lock
bsr
push
xchg
jne
cld
cli
mov
mov
jp
and
lods
mov
into
sbbb
mov
mov
cltd
push
push
orl
mov
loopne
or
jecxz
adc
lea
push
data16
push
fsubrs
jne
js
push
pop
jo
pusha
fs
movsb
fmuls
xchg
sarl
fldt
insb
or
test
fldt
cld
inc
iret
cli
push
add
add
jae
push
enter
je
fdivrp
ret
push
fcompl
fistps
pop
sbb
adc
addr16
push
jg
jmp
xor
jns
cmp
testb
push
xor
bswap
dec
mov
sub
push
popf
or
pusha
rcr
add
fimull
je
xor
int
xor
adc
icebp
shlb
into
rcl
jae
pop
xor
fwait
out
pop
add
das
and
aas
ja
hlt
xor
lock
int
xchg
test
fdivr
adc
fisubrs
outsb
out
and
and
and
sbb
or
adc
xchg
adc
scas
insl
push
lea
shll
pop
cltd
xchg
add
or
movsl
cwtl
sub
mov
dec
pop
out
xor
or
lret
push
jb
or
adc
and
jbe
mov
xor
add
lret
fcmovb
inc
cs
xchg
bound
cs
mov
out
xor
das
inc
int3
cmp
enter
push
int3
xchg
dec
or
mov
movsl
sub
xor
das
inc
int
add
mov
xchg
imul
jge
xor
das
inc
into
pusha
and
pop
xor
or
mov
jge
xor
fisubrs
movsl
das
push
cmp
aad
scas
sbb
fistpl
je
fnstsw
sbb
clc
out
dec
test
xor
sahf
mov
in
outsl
sub
lods
aam
mov
or
fdivrs
movsb
dec
and
sub
or
and
xchg
push
xor
or
xlat
push
addr16
fs
and
nop
add
jl
add
vhaddpd
inc
in
mov
ljmp
push
mov
push
dec
push
xor
lock
aas
inc
call
pop
clc
maskmovq
mull
xchg
dec
or
inc
ficompl
cs
in
xor
stos
test
ja
test
das
rclb
add
fdivs
xor
out
push
rorb
mov
sub
pusha
add
and
or
push
imul
add
fsubrl
ret
push
dec
inc
push
adc
inc
cmp
sub
mov
jle
shll
aaa
es
and
jb
xor
cmp
lret
and
aas
loopne
add
jbe
add
add
sub
or
fcoms
popa
add
add
xchg
call
out
das
sbb
and
fldt
lcall
mov
loopne
int
or
ror
sub
ficoml
jg
jl
notb
xor
sbb
clc
push
inc
scas
fnstenv
andl
or
fstps
sbb
pop
xor
xor
xor
jbe
test
mov
clc
dec
pusha
add
pop
ret
mov
xor
je
icebp
and
ret
cmp
lret
and
idivb
and
dec
insl
sti
mov
sbb
fsubrp
cwtl
pusha
leave
mov
jns
je
cmp
ficomps
adc
outsl
ret
xchg
pop
and
cmc
cmc
enter
inc
pop
add
mov
mov
adc
mov
shlb
repnz
xor
stc
xor
shl
movsb
push
aam
movsb
pop
or
cmpl
lahf
les
jne
adc
adc
cwtl
sahf
clc
pop
test
fwait
lea
out
add
insb
cwtl
and
ret
mov
jmp
fildll
stc
rcrl
ss
add
sbb
xlat
hlt
sahf
lea
stos
sub
xor
cmp
or
cmc
mov
gs
pop
inc
subb
and
test
and
xchg
dec
sarl
push
add
ja
scas
inc
push
adc
out
je
mov
cmp
cmpsb
ss
inc
adc
rolb
push
imul
pop
mov
jne
ret
ret
js
mov
ret
xchg
outsl
loop
std
or
cmp
mov
mov
clc
je
cmp
cmp
sub
mov
add
mov
mov
insl
push
xchg
xchg
adc
pop
gs
leave
push
mov
cmp
fwait
test
mov
je
mov
addr16
xor
xor
cli
mov
aaa
xchg
pusha
in
test
jl
fidivrs
subb
mov
cmp
push
sub
test
subl
daa
inc
dec
insb
lret
out
sub
adc
inc
adc
nop
pushf
add
jmp
scas
xchg
in
movsb
jp
fimuls
xor
js
dec
mov
xor
sub
mov
popa
arpl
mov
bound
es
dec
jge
cs
fwait
add
cs
sub
push
push
push
pusha
add
lret
or
pop
or
enter
xchg
add
popa
imul
cmp
pop
cmpsl
mov
xchg
push
push
jns
cmc
mov
mov
cmp
test
notb
mov
add
add
pop
mov
lahf
leave
add
push
mov
lea
ret
mov
cmp
hlt
fsubr
add
adc
out
aad
dec
mov
pop
mov
cmc
add
dec
push
mov
mov
nop
jmp
mov
mov
mov
mov
inc
dec
push
push
xor
negb
push
fwait
pop
shll
jns
or
std
jmp
imulb
add
or
sbb
or
pop
inc
es
loopne
jmp
daa
outsl
nop
cwtl
jl
add
leave
loope
daa
fnstenv
jo
or
std
adc
clc
jg
pop
mov
sub
push
inc
pop
hlt
mov
je,pt
sub
add
add
adc
cs
push
imul
outsb
adc
insl
popa
sub
pop
notb
test
cmp
insl
loopne
iret
xor
js
jbe
mov
or
movzbl
push
dec
push
jbe
sbb
jb
jmp
das
dec
or
xor
ret
and
int
leave
sbb
sbb
or
add
mov
loope
lcall
push
pop
test
cmp
jle
imulb
and
bound
jle
jne
adc
push
cmpsb
sbb
sarl
es
addr16
xor
cmovo
push
or
pop
scas
jo
add
mov
add
sub
fildl
test
stos
seto
xchg
mov
jno
adc
lods
daa
dec
xor
xor
ss
ja
cmp
cmp
jg
sub
or
fs
in
popf
or
add
and
jle
jmp
aaa
arpl
mov
pop
lahf
lahf
sbb
dec
clc
inc
cmp
loope
hlt
xor
and
mov
jg
jmp
andl
outsb
pop
and
in
or
loope
popa
icebp
adc
shlb
cs
arpl
jno
ret
sub
movsb
mov
insb
pop
mov
mov
mov
xchg
and
add
and
push
out
cmp
jae
sbb
nop
icebp
pop
push
lock
jae
cmp
jl
xchg
js
in
mov
ds
adc
or
jnp
arpl
bound
lock
jnp
lret
fnsave
rol
adc
test
mov
std
xchg
dec
cmpb
push
or
xor
xor
dec
lret
mov
xchg
testb
mov
adc
testb
aaa
adc
test
or
gs
mov
shll
inc
adc
xor
movsl
dec
add
jo
pop
je
or
cmp
mov
inc
add
add
fdivrs
sbb
sti
jb
ss
lea
push
cmp
in
lcall
add
pop
nop
test
sti
insb
xor
mov
cmpsb
mov
dec
push
stos
addr16
sub
leave
jne
repnz
rorl
divl
movnti
add
jge
rolb
add
add
ds
push
sub
cmp
dec
icebp
out
fstl
sub
pop
sub
leave
sbb
pusha
push
jbe
mov
jno
seto
in
adc
mov
or
test
push
sbb
shll
fmull
int3
fsubrs
ficoml
insb
adc
jo
pop
cmc
gs
mov
mov
push
dec
jo
add
fwait
cwtl
sub
push
dec
xchg
imul
ret
inc
out
pop
or
outsl
pop
mov
imul
stos
movsb
mov
add
sub
iret
test
jb
icebp
shlb
in
loopne
aas
sbb
pop
ja
sub
jg
arpl
pop
or
sub
leave
aam
push
lahf
mov
lcall
movsl
inc
push
jl
outsb
adc
js
sbb
lea
stc
dec
out
push
fs
jne
movsl
popf
out
adc
or
and
cmp
add
inc
mov
jbe
das
out
dec
pushf
out
pop
dec
xor
sti
js
or
push
sti
mov
enter
adc
dec
ret
outsb
jle
mov
es
je
push
push
cmp
add
add
mov
adc
push
and
mov
pop
inc
mov
das
imul
sbb
stos
mov
cmp
fsubs
sahf
std
cmp
jmp
jae
or
divb
dec
repz
ret
mov
mov
test
lea
ss
stos
pop
mov
xor
jmp
mov
scas
jl
and
add
sbb
rolb
xchg
push
or
jo
ret
jae
ja
cmp
inc
or
int
sbb
leave
mov
mov
ss
mov
pushf
and
xorl
dec
sbb
push
cmp
pop
outsb
arpl
push
es
insl
cld
pop
mov
rclb
mov
pop
es
jmp
sbb
jl
imul
pop
pop
popf
mov
dec
cmc
sub
aad
cmp
je
gs
dec
sti
pusha
ss
gs
adc
in
jb
int3
mov
xor
jo
sbb
cmpsl
not
jmp
stos
jae
xor
pop
xchg
add
jb
or
fdivrl
inc
xor
ret
cld
dec
popa
int
pop
cld
ds
inc
push
xchg
or
mov
pop
add
jne
push
test
dec
rclb
and
lock
sub
insb
mov
enter
sbb
dec
cmp
inc
push
adc
daa
mov
mov
enter
js
lret
nop
xlat
push
add
jg
incb
mov
xor
mov
sbb
or
and
imulb
cmpsb
inc
or
adc
sub
inc
sbb
sbb
imul
es
sbb
and
add
push
add
xor
push
xor
sbb
adc
dec
in
shlb
lock
jmp
aas
shlb
add
pop
mov
add
push
sub
xchg
cmpsl
cltd
fisttpll
inc
mov
add
mov
jge
jle
lea
jbe
inc
adc
cmp
xor
push
pop
inc
xchg
mov
gs
gs
rorl
test
lcall
clc
xchg
inc
leave
or
push
xchg
mov
es
jle
sbb
cmp
push
les
shll
loopne
and
sarb
lods
or
scas
xchg
lock
movsl
mov
adc
inc
or
rclb
sub
jno
stos
jg
mov
lahf
mov
test
fwait
push
xlat
gs
jp
push
fcoml
jo
adc
pop
xor
push
enter
fildl
data16
push
jmp
sbb
add
push
sarl
jl
xor
lret
and
inc
pop
fs
and
or
icebp
dec
sub
sbb
sub
shrl
lahf
jbe
xchg
mov
mov
and
push
adc
fcomps
rcr
test
leave
repz
adc
xor
jno
push
xor
rorl
pushf
mov
imul
push
fldl
iret
xchg
test
adc
imul
and
adc
and
faddl
iret
or
clc
adc
xchg
or
push
jmp
enter
addl
mov
push
mov
je
movsb
int3
das
mov
pusha
cmp
je
fidivrs
scas
mov
stos
and
cmp
add
push
fiaddl
dec
mov
adc
jmp
call
pushl
cs
mov
push
mov
iret
imul
test
ret
xorl
push
dec
xlat
popa
xchg
int3
int3
out
and
xor
mov
add
sub
mov
orb
decl
cli
aas
jbe
push
pop
sub
xor
mov
push
mov
or
add
pop
mov
icebp
pop
xchg
cld
or
sbb
and
loopne
jns
loop
cmp
push
sub
je
adc
insl
inc
jmp
rcpps
add
pop
add
jae
sbb
and
push
je
sar
inc
add
sub
push
pusha
adc
and
pop
sub
dec
pop
xlat
dec
or
cmp
jbe
mov
roll
jno
and
cmp
add
add
inc
cmp
push
sti
jp
mov
or
je
dec
add
push
mov
cmp
or
jae
xchg
or
int3
pop
add
or
cmp
sbb
or
pop
roll
in
or
es
bound
outsb
jo
or
sbb
pusha
mov
sub
dec
paddd
mov
jae
cmpb
or
test
adcb
or
dec
cmp
dec
ret
adc
dec
stos
push
mov
ljmp
xchg
inc
xchg
insb
movsb
xor
and
scas
lcall
mov
add
push
jmp
clc
xor
lsl
movsb
adcb
rcll
cld
imul
and
aas
gs
push
or
jae
movsb
mov
scas
cmp
dec
inc
adc
inc
cli
jne
jo
xor
and
dec
sub
dec
jo
mov
push
adc
jmp
adc
jp
or
push
dec
adc
push
adc
adc
mov
loop
mov
fwait
or
or
movsl
pop
cmp
mov
add
in
adc
pusha
jo
xorb
sbbb
jmp
and
inc
pop
pop
add
dec
and
test
or
mov
rcl
jmp
loopne
not
call
sbb
mov
mov
mov
sbb
and
sbb
ret
adc
jmp
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
sub
cmc
xchg
cmp
outsb
jmp
es
inc
or
xchg
mov
imulb
je
js
inc
pop
mov
mov
daa
sbb
rcrl
dec
sub
aaa
mov
adc
pop
mov
cwtl
cmp
aaa
mov
sbb
inc
or
sbb
rclb
or
cmp
pop
js
loop
and
or
push
loop
fs
cs
rcll
scas
into
cli
int
and
pop
sbb
pop
imul
push
stc
imul
icebp
pop
mov
add
push
sbb
repnz
jle
pop
rcl
sbb
rolb
inc
dec
sbb
push
jno
cmp
sub
iret
shrl
and
jmp
pop
mov
decb
jne
adc
and
sub
or
xchg
dec
sub
push
jo
sub
in
dec
mov
xor
arpl
rorl
rolb
and
xor
sbb
xchg
fistpl
jle
inc
mov
push
inc
lcall
fs
jbe
test
subb
mov
les
mov
cmpl
cmp
imull
pop
jmp
push
or
push
jnp
or
or
or
and
or
inc
dec
inc
xchg
lret
add
xlat
push
inc
jp
clc
mov
roll
sbb
bound
cld
mov
xor
add
or
fnstenv
xchg
cmp
sbb
push
fbstp
bound
add
push
fimull
push
xor
xor
je
mov
loope
xor
cmpsl
test
les
mov
sub
sub
data16
push
test
out
je
push
and
data16
xor
movsb
shrb
cwtl
xchg
aad
dec
inc
mov
mov
out
or
dec
inc
cmp
jns
and
shll
or
mov
loopne
ret
outsb
imul
inc
pop
lock
xor
loope
cmp
or
out
lahf
insb
mov
stos
mov
mov
dec
dec
cmpb
cli
ja
lea
cld
jge
stos
dec
in
mov
psubsb
inc
cld
lock
es
test
sahf
add
cmpsl
jmp
movl
pop
push
adc
sbb
add
pop
imul
lea
adc
inc
fs
inc
test
jmp
sbb
roll
add
inc
jecxz
loope
add
xor
not
and
or
ret
imul
jmp
sub
push
or
insb
or
dec
cld
dec
cmp
idivb
xchg
inc
pop
test
dec
xchg
cmpsl
add
clc
addl
loope
scas
loope
aas
sbb
pushf
pop
push
mov
mov
lcall
mov
mov
lret
nop
push
xor
repnz
inc
testl
or
es
mov
cmpl
mov
hlt
sar
dec
mov
cs
pop
mov
sbb
adcb
data16
push
dec
pop
dec
add
xor
pop
pop
pop
pop
add
adc
push
jae
int3
adc
iret
lret
and
in
ja
and
mov
sub
ljmp
xor
add
mov
sub
xorl
xorl
lea
mov
mov
insb
push
xor
push
xor
and
test
scas
pop
notb
mov
cld
aaa
xor
insb
ret
inc
inc
cmp
inc
push
xlat
or
ljmp
in
xor
xlat
dec
push
lcall
ja
xchg
adc
ja
pop
add
and
push
push
push
fstpt
aad
adc
sbb
cmc
pop
movsl
ret
movnti
pop
gs
xchg
xchg
or
ret
sbb
dec
jns
inc
daa
xor
sbb
xchg
test
jmp
cld
jmp
nop
push
jmp
and
mov
mov
inc
dec
sbb
mov
fs
sub
add
mov
xor
add
aam
dec
mov
dec
push
push
loop
out
pop
lcall
sbb
por
add
adc
xor
push
insl
cwtl
sub
dec
stos
adc
pusha
pop
xorb
clc
xchg
or
and
dec
inc
fnstcw
inc
xchg
es
sub
jecxz
xchg
or
andb
sbb
inc
add
insb
sbb
xor
mov
push
rorb
imul
sbb
cmp
and
or
add
adc
or
pop
clc
cltd
fsubl
xor
andb
test
jecxz
or
sub
add
push
mov
inc
cmp
or
in
test
test
pop
popa
mov
cmp
into
lock
lods
aas
jae
daa
sub
ret
cltd
add
xchg
loopne
mov
mov
decl
sbb
add
in
cs
or
out
and
mov
sahf
mov
xchg
es
mov
inc
and
or
mov
cli
out
punpcklbw
dec
pop
cld
enter
cmp
or
add
add
sar
andl
cmp
jbe
xchg
mov
adc
sub
pusha
loop
cmp
out
test
mov
mov
cwtl
and
and
or
push
gs
jo
ret
sbb
and
push
sar
or
mov
push
fstpt
dec
scas
stc
jg
into
mov
fimuls
mov
fwait
inc
pop
lock
andb
lock
jnp
shrl
hlt
lret
mov
adc
arpl
pop
jne
push
xor
addb
cmp
sub
mov
add
inc
das
ret
sub
stc
fidivs
mov
push
clc
or
lret
jl
cs
outsb
movsb
push
pop
push
add
mov
mov
jne
mov
outsl
adc
movl
or
mov
fcomps
sbb
lret
xor
sbb
imul
popf
es
xorl
movsb
cmp
jb
mov
cmp
adc
adc
mov
sub
push
push
sub
js
shll
and
icebp
fnstenv
adc
scas
aas
fisubl
dec
pop
setp
sub
sub
out
mov
rcrl
add
cld
adc
adc
add
cs
movsb
cmpl
stos
movsb
add
loopne
movsl
cli
mov
adc
dec
dec
jno
mov
jle
cmpsl
fisttpl
outsb
sbb
mov
leave
push
sbb
loope
sub
movl
cmp
lock
mov
enter
out
ss
inc
mov
andl
jle
or
add
mov
push
lret
test
xor
je
aas
jnp
insl
sbb
pop
xor
jmp
jmp
shl
jle
adc
sbb
insb
adc
xlat
sbb
adc
lea
mov
lds
hlt
scas
and
nop
add
jae
add
sub
and
sub
imul
dec
add
rorb
add
ret
add
dec
inc
mov
or
push
test
xor
add
cmp
add
pop
sahf
inc
inc
jmp
mov
add
inc
jmp
add
adc
cltd
sbb
jno
stos
aam
xorl
lea
divl
xlat
add
lods
hlt
push
data16
sub
subl
inc
inc
lea
bound
scas
pusha
or
push
sbb
mov
sbb
dec
ret
sub
jnp
mov
jb
fsubrp
scas
or
lock
outsb
push
add
dec
push
ret
mov
and
scas
add
imul
sbb
inc
inc
xor
or
pop
aad
cmpl
clc
or
adc
jl
sbb
xchg
notl
push
cld
enter
setle
jmp
jae
mov
add
movsb
adc
or
dec
rcl
mov
fisttpl
push
mov
sub
daa
mov
jae
xor
push
andl
mov
push
mov
into
ss
arpl
sub
rolb
cli
mov
inc
fisttpll
push
nop
out
mov
loop
pop
mov
insb
jbe
add
cli
mov
dec
stos
rorl
dec
insb
push
dec
or
cmpb
or
mov
mov
inc
mov
sub
or
push
cmp
and
pusha
cmpb
fcomps
sarb
mov
and
or
mov
shlb
and
add
test
int3
xchg
test
je
or
je
or
jmp
xor
lret
mov
inc
ficoms
add
and
push
add
sub
mov
mov
loope
pop
or
jge
out
pop
sbbb
sub
lret
xchg
add
dec
cwtl
inc
inc
shr
jmp
jg
clc
pop
in
xchg
faddl
jne
cmp
jae
xor
dec
jbe
push
adc
push
add
aas
sbb
adc
and
ss
cmpb
jne
inc
inc
add
push
or
les
or
pop
cmp
outsb
dec
sub
add
fidivrl
test
inc
push
sub
dec
jg
scas
clc
addr16
or
mov
inc
lret
das
call
addb
push
insb
mov
or
xor
or
addb
add
addl
outsb
loopne
inc
mov
or
hlt
mov
pop
add
je
clc
add
movsl
call
mov
dec
mov
lock
out
sahf
adc
inc
add
push
add
add
xchg
push
sub
lea
xchg
or
mov
pop
jae
xor
lods
pop
icebp
punpckhbw
cmp
outsl
sub
push
filds
into
push
sti
les
jl
outsl
in
mov
ds
cli
add
mov
pop
mov
cmpsl
adc
pop
inc
movq
add
loopne
fwait
outsb
je
ucomiss
call
mov
cmp
jnp
mov
mov
sub
and
mov
or
xlat
sub
and
add
cmp
in
shrb
jecxz
sbb
dec
cltd
lods
das
or
jne
outsb
andb
xchg
mov
inc
les
dec
fcomps
movsb
out
test
loopne
loop
adc
out
add
xchg
push
mov
push
dec
jl
adc
mov
sub
fcoms
sbb
pop
sub
nop
loopne
mov
shlb
or
je
xchg
out
mov
loopne
outsb
inc
mov
pop
lock
inc
imul
daa
mov
push
cmp
xor
inc
fs
xor
dec
nop
mov
fidivrl
insl
jo
jb
mov
mov
mov
mov
xor
and
jle
ret
jbe
jmp
inc
addr16
or
cmpsb
stos
rol
arpl
or
in
incb
or
add
cmp
jecxz
or
icebp
jbe
mov
je
jne
pop
jmp
jnp
and
inc
stos
inc
in
leave
or
hlt
cltd
jmp
sbb
fdiv
inc
nop
xchg
or
loopne
xor
xor
jg
jl
jae
lock
sarb
jmp
sbb
mov
adc
divl
mov
pop
inc
cmp
or
add
arpl
fnstsw
inc
dec
cli
cmp
insl
mul
or
push
faddl
call
imul
pop
add
aaa
je
push
cltd
mov
ret
adc
push
or
fildl
xor
int3
sti
or
mov
mov
jbe
sbb
mov
jmp
lods
sub
add
add
out
cmpb
call
rorb
push
movb
xor
shlb
mov
daa
fisubl
test
jge
and
inc
sub
mov
jmp
mov
and
faddl
or
xchg
popa
xor
mov
gs
repz
pop
adc
and
ljmp
and
rclb
bound
sub
xor
inc
sub
cmp
xchg
xlat
outsl
xchg
cmpb
inc
mov
add
jnp
js
das
mov
dec
mov
push
pusha
add
jmp
mov
or
dec
add
cwtl
mov
shlb
outsb
orb
adcl
or
clc
mov
or
lret
xor
fwait
inc
add
repz
push
push
mov
and
or
dec
add
push
mov
mov
or
or
incl
pop
jmp
push
lods
dec
inc
cs
push
lock
inc
add
jbe,pt
or
push
mov
jns
pusha
leave
and
subps
xor
pop
sti
pushf
es
jg
lret
or
ret
dec
jo
xor
add
sbb
inc
jl
inc
jns
dec
sarb
fisttpl
mov
sbb
or
push
inc
sbb
cld
cmp
dec
cmp
pusha
nop
stos
or
add
in
sbb
sub
or
test
push
insl
loope
ljmp
push
mov
adc
cmc
jl
adc
mov
xor
and
push
in
jmp
xchg
cmc
mov
mov
test
push
test
mov
test
mov
lea
jne
sbb
inc
loope
inc
bound
fs
push
pop
pop
test
push
pushf
adc
or
xchg
orl
adc
push
cmpb
cld
shl
mov
xchg
orb
inc
or
in
push
add
call
sub
rclb
xchg
pusha
jg
cmp
mov
movsl
pop
loop
xchg
fmull
or
sub
shrl
push
fwait
sbb
or
lods
add
movsb
xchg
sbb
add
push
mov
jne
mov
xchg
push
and
push
mov
mov
test
cmp
jne
outsl
inc
add
test
jne
push
pop
leave
rolb
mov
and
mov
aaa
lock
cmp
xchg
mov
mov
mov
pop
and
cmp
push
or
jbe
adc
inc
andl
dec
push
or
or
add
xor
adc
clc
push
dec
sbb
xchg
and
int3
addps
adc
add
or
sub
or
shll
imul
fdivl
add
mov
mov
mov
or
mov
je
idiv
pop
or
cld
jb
cmp
ja
add
cmp
adc
clc
lahf
fadd
cmp
jne
dec
jne
roll
sahf
data16
or
cmpsl
imull
arpl
ret
mov
lahf
and
add
lcall
pop
je
or
nop
out
push
xor
pop
int
movsb
lods
sub
aam
xor
loop
push
adc
lret
and
aad
push
dec
push
adc
add
xlat
dec
rclb
adc
pop
or
dec
cwtl
shrb
out
add
and
add
jnp
fadds
pop
test
or
loope
hlt
or
fistpl
sbb
rolb
mov
ss
loope
popf
mov
pop
cmovno
push
adc
pop
push
add
jns
push
mov
and
lcall
mov
repnz
ljmp
sti
add
ret
hlt
movb
rorb
adcb
mov
fidivrs
loopne
inc
rorb
cmp
add
cmp
jg
push
or
sti
inc
jne
sub
pop
lea
inc
jmp
ss
dec
mov
mov
inc
and
fucomp
dec
or
sub
jmp
inc
bnd
xor
lcall
ja
or
fildll
add
jmp
dec
push
dec
sti
cmpb
fisubl
adc
sbb
mov
mov
xlat
adc
push
shr
aam
jge
mov
push
cwtl
cmp
fdivs
orl
mov
imul
xchg
inc
in
jbe
je
push
arpl
jnp
inc
mov
or
mov
int3
dec
sbb
mov
roll
add
mov
fwait
adc
outsl
jg
fistl
push
mov
sub
fs
add
push
fsubr
out
mov
addr16
or
sbb
xor
test
movsl
shll
dec
xchg
adc
xor
je
stc
push
pop
in
push
shrl
sub
sbb
clc
mov
lea
jno
jnp
push
mov
and
loopne
mov
jne
test
dec
push
mov
sub
jb
add
jbe
sub
cltd
icebp
mov
sub
into
jle
and
aas
add
push
shll
and
pop
scas
ds
and
mov
in
scas
sbb
push
pop
inc
mov
xor
push
inc
fldt
mov
loop
cmp
lea
mov
cmp
pop
jbe
push
gs
pop
shll
inc
ss
fwait
dec
push
push
and
mov
sub
or
aas
es
loopne
push
daa
inc
fs
add
dec
adc
je
andb
addr16
test
sbb
inc
pusha
cmp
out
xchg
mov
xor
dec
loopne
jle
ljmp
or
mov
sub
xchg
or
andl
mov
sub
and
inc
xor
aas
imul
ret
xorl
push
rclb
inc
aas
pop
dec
dec
and
sarl
lret
call
fdivrs
xchg
les
hlt
imul
xor
iret
test
cmp
pop
je
in
lea
cmp
mov
pop
je
subl
cmp
lock
jmp
pop
shlb
add
pushf
push
and
lds
sti
cmp
aas
pop
jne
mov
inc
push
cmpsl
and
cmc
mov
mov
cmp
je
inc
movsb
xor
cmp
inc
mov
shrl
jmp
ret
add
shlb
xchg
add
or
adc
test
mov
push
ret
add
jge
and
sbb
xor
jmp
rcrb
gs
cmp
jmp
ljmp
lcall
push
jmp
leave
cmp
push
test
imul
addb
popa
pop
push
pop
call
or
adc
or
shll
fsubrl
popf
jne
or
add
pop
cmc
sub
mov
adc
arpl
gs
fnsave
ret
inc
pop
ret
push
xchg
shll
jbe
add
and
mov
addb
pop
sbb
xchg
fcomp
lcall
pusha
mov
les
push
push
ret
or
sbb
insb
cmp
add
sbb
inc
sbb
sub
into
out
add
jecxz
or
inc
clc
jp
dec
sub
and
pop
aas
or
xchg
sbb
addr16
cmpsl
stos
adc
mov
insb
push
sbb
cmp
ja
push
xlat
subb
pop
loopne
outsb
adc
push
lahf
add
movsb
or
inc
call
and
aad
test
adc
add
lea
arpl
out
hlt
movsb
pusha
inc
fsubr
add
sarl
roll
lods
neg
mov
mov
int3
sbb
jo
cmp
jbe
insb
shl
jmp
add
shl
jmp
fwait
xor
push
jno
lock
add
lea
mov
sahf
std
je
neg
push
inc
roll
sub
sub
mov
adc
repz
orl
inc
jmp
or
inc
loope
mov
nop
cmp
clc
int3
adc
jl
push
dec
daa
sbb
pop
xrelease
enter
ss
leave
in
push
jne
orb
addb
inc
mov
shrl
inc
mov
push
divb
lea
add
ljmp
das
dec
mov
add
push
prefetchw
dec
or
jmp
and
iret
mov
or
pop
xlat
or
je
pop
out
pop
jg
cmp
inc
decl
js
mov
inc
mov
ret
lods
xchg
inc
dec
cmp
pop
movsl
incl
or
sub
cmp
or
push
inc
clc
push
add
sbb
sbb
stos
std
or
or
subb
popw
out
pop
push
dec
inc
or
dec
or
addb
cmp
loop
mov
out
or
cmp
dec
cmpl
popa
mov
cmp
pop
filds
outsl
testw
jl
add
addr16
fbstp
mov
dec
insb
add
test
adc
shlb
stos
jno
outsb
sbb
adc
orb
iret
mov
scas
loope
popf
push
fimull
adc
push
pop
stos
xor
add
in
xor
out
lods
test
push
in
sub
cltd
and
enter
std
adc
cmp
xchg
and
push
cmp
mov
sbb
test
add
inc
cmpsb
movsl
iret
adc
and
mov
lods
cwtl
adc
stos
lods
pop
lock
mov
mov
les
enter
fldl
dec
sbb
or
addl
es
lea
loop
push
jl
and
test
push
jo
cltd
je
shll
test
cli
and
jae
or
jbe
mov
sbb
xchg
jecxz
adc
pop
dec
push
add
lods
mov
dec
into
xorb
pop
mov
into
inc
mov
ja
push
insl
addr16
orb
mov
sbb
daa
ret
test
or
enter
push
cmpsl
aam
mov
add
sbb
fisubl
xchg
push
xor
mov
mov
out
xlat
pop
sbb
add
push
jns
mov
mov
in
sbb
push
pop
xchg
sub
mov
and
adc
xchg
std
adc
inc
sub
lock
lea
pop
sub
mov
ret
frstor
cmp
mov
int3
add
inc
and
test
adc
or
or
idivl
je
dec
dec
and
fisttps
mov
mov
mov
inc
dec
sbb
aam
ret
fiadds
xchg
stos
jb
xchg
xchg
xor
or
pop
nop
push
fisubrs
movsl
test
add
aam
jge
or
sbb
imul
decl
mov
pop
dec
and
lcall
jle
les
cmp
or
cmp
shlb
or
sub
test
cmp
mov
unpckhps
pop
shrl
mov
sub
pop
sbb
push
add
jb
dec
iret
leave
dec
lods
jle
mov
jae
lret
or
add
push
push
push
mov
cmp
ret
or
jecxz
xchg
idivb
add
cmp
enter
and
inc
sbb
mov
or
jo
cwtl
test
add
and
xchg
xor
add
pop
sub
adc
jb
xchg
xor
bound
sub
dec
and
cmp
fs
cltd
popf
rorb
mov
sbb
call
mov
es
les
repnz
mov
inc
cs
inc
push
mov
add
jne
dec
or
and
or
ret
jl
mov
or
push
in
daa
shlb
dec
add
pop
fisubl
dec
and
add
sub
cmp
insb
fidivs
in
push
xor
adc
add
jmp
sbb
or
push
jbe
or
push
sub
es
out
ret
ret
test
adc
inc
and
push
mov
outsl
push
pop
mov
push
int3
pop
or
daa
dec
jns
sub
sbb
push
cli
clc
movsb
mov
sub
adc
pushl
shll
loopne
adc
push
fdecstp
inc
fldt
dec
push
mov
cld
and
shr
ret
and
movsb
jne
adc
je
mov
xchg
nop
fs
mov
inc
cmp
push
aas
push
inc
push
jmp
and
jecxz
add
dec
mov
push
in
pop
xchg
xchg
hlt
sbb
je
pop
sarb
add
fwait
cmp
jge
lret
jmp
fsubl
enter
ret
adc
jg
aaa
movsb
mov
lret
or
adc
or
ja
push
imul
push
movsl
loope
xor
sbbb
lods
rcrb
int
add
xor
push
mov
pushf
sbb
push
stos
or
pop
jmp
or
inc
rcr
imul
and
push
lods
or
pop
add
outsb
xchg
cmp
lcall
pop
cmp
jg
popa
aaa
adc
add
loop
jmp
sbb
xchg
fiadds
sbb
jne
inc
xchg
roll
enter
das
or
jle
sub
jmp
adc
test
and
aas
inc
in
inc
dec
and
sub
xchg
sahf
or
insb
xchg
inc
sbb
adc
mov
mov
mov
push
lret
jns
mov
es
or
inc
xchg
mov
mov
ja
add
rolb
jae
xchg
push
jbe
mov
je
ret
xchg
xor
sbb
or
mov
bound
mov
pop
mov
popa
outsl
rol
mov
aas
out
jge
fmuls
sbb
ret
cmp
dec
mov
mov
or
push
pushl
or
incb
mov
les
lea
aas
movb
cmpb
adc
scas
add
pushl
mov
push
cmp
je
in
adc
clc
mov
dec
cwtl
adc
pop
out
or
push
and
pop
insl
fsubrs
push
mov
or
out
in
test
scas
or
mov
ret
add
add
add
mov
scas
clc
mov
in
popl
popa
mov
cmp
data16
into
sbb
aas
cmp
je
push
mov
ret
sub
inc
inc
cmpb
or
add
pop
movb
inc
mov
jae
push
sub
jbe
adc
cmpsl
test
or
js
xchg
lods
adc
inc
cmp
cmp
mull
in
pop
cmp
mov
cmp
add
outsb
in
adc
sub
jmp
lcall
iret
pop
lock
loopne
xor
jle
jb
loop
mov
clc
out
test
enter
sub
ljmp
lods
filds
nop
in
dec
xor
lret
or
xor
rcll
mov
lret
add
push
and
or
fnsave
push
xchg
mov
add
jb
scas
add
pop
in
sub
outsb
cwtl
jns
inc
loope
push
sub
fldl
mov
stc
or
adc
inc
mov
sbb
push
sub
push
das
add
jl
popw
add
lcall
sub
xor
shll
cmp
push
jl
ss
push
es
sub
daa
sbb
pop
jns
bound
push
mov
les
pop
inc
sti
push
lea
dec
or
std
leave
mov
fcmovb
shl
mov
pop
pushf
sub
mov
or
cmp
inc
push
fwait
add
push
inc
stos
or
stos
sub
nop
sbb
jmp
dec
lock
sbb
and
sbb
adc
or
add
lock
push
rorb
adc
lret
push
cmp
mov
jne
ljmp
add
mov
lea
scas
cmp
rorb
jae
enter
xchg
imul
pop
int
push
shr
push
pop
and
push
pop
popw
sub
push
cmp
fisubrs
je
jno
add
xchg
ljmp
sub
nop
addl
and
inc
lds
dec
push
je
jp
add
jnp
aam
sub
inc
xchg
lods
sbb
inc
push
rcrl
inc
xor
push
pop
shrl
into
jb
or
mulb
mov
lcall
push
or
and
xchg
cmp
sbb
imul
data16
sti
inc
pop
mov
sub
das
aaa
add
push
jg
xchg
jae
icebp
movsb
adc
test
add
xchg
sbb
aam
sbb
jle
and
push
mov
test
xchg
popf
mov
inc
push
fdivl
mov
in
sub
or
push
je
outsl
mov
and
bt
sbb
dec
jb
fsubl
ja
sbb
and
dec
movsb
xor
test
xor
clc
icebp
cmc
xor
mov
xchg
fiadds
and
mov
sub
mov
sbb
xor
pop
test
lret
push
call
push
mov
xor
ret
sub
pop
bound
or
cmp
rcll
add
add
cmp
into
or
lret
hlt
push
lock
mov
add
pop
ja
out
scas
push
adc
not
jne
cli
mov
or
jmp
or
jmp
and
pop
cmp
jae
test
int
mov
int3
cwtl
insb
aaa
add
pop
pop
test
pop
mov
and
adcb
sub
das
sbb
xor
add
add
test
sbb
lret
mov
push
xchg
rcrb
je
add
xchg
ret
pop
clc
testb
or
sbb
lea
in
xor
dec
or
xor
ja
add
or
pop
sahf
add
loope
or
adc
ret
outsl
or
inc
sbb
mov
incb
ret
not
test
outsb
mov
jge
cwtl
mov
push
and
and
xchg
out
rclb
cltd
mov
mov
sub
pop
push
mov
dec
ds
cmp
mov
jne
jo
fidivs
inc
jge
ret
cmp
xchg
mov
rcl
push
mov
int3
js
lock
pop
cltd
addr16
jae
sbb
xchg
sar
ret
and
sub
pop
or
mov
loop
cmp
xchg
outsb
pop
jmp
adc
add
xlat
push
pop
mov
push
mov
pop
push
dec
and
mov
mov
cld
enter
sub
inc
pop
insb
or
adc
lcall
or
inc
and
jmp
add
dec
or
xchg
stc
dec
mov
push
push
hlt
pop
mov
adc
test
imul
push
or
dec
jo
mov
stos
enter
and
outsl
mov
call
lret
add
add
push
add
add
jne
xchg
hlt
sbb
sbb
divb
jb
repnz
pop
inc
xor
bound
aam
push
jns
popf
cmc
icebp
and
mov
pop
subb
and
dec
push
or
add
add
dec
sub
std
sub
and
loopne
xchg
add
mulb
ljmp
test
mov
push
pop
push
cmp
shrb
lock
and
add
mov
std
push
inc
pop
enter
dec
stos
xor
addr16
test
sub
mov
cmp
push
xchg
jle
mov
mov
or
inc
jle
mov
mov
cmp
jl
movsl
pusha
or
pusha
insb
inc
fs
sub
aaa
inc
cmc
jbe
xlat
push
jb
and
add
inc
fadds
adc
jg
mov
mov
mov
mov
or
incl
xor
dec
fsubrs
clc
mov
fmull
hlt
jne
and
pop
xlat
push
aaa
mov
sub
dec
outsl
jmp
insl
gs
bound
adc
dec
loopne
ja
pop
ret
enter
subl
add
push
push
sbb
push
mov
jle
xchg
fisttpl
je
or
inc
xor
mov
jne
insb
ss
jl
cmpb
jl
inc
pop
test
xor
cmc
inc
les
out
xor
incl
pusha
inc
xor
xor
push
imul
pop
cmpsb
push
xchg
mov
push
hlt
sub
push
je
adc
jnp
ljmp
mov
adc
out
mov
mov
lods
add
push
and
xor
fs
out
xor
dec
lret
mov
add
dec
rcl
iret
push
sahf
fnstenv
xchg
pop
xor
je
and
or
jne
pop
jmp
sub
or
jecxz
dec
cmpsl
mov
jbe
inc
or
data16
jmp
dec
add
ds
ss
adc
mov
inc
or
or
mov
and
push
xchg
add
scas
pop
or
adc
xchg
lods
pop
scas
push
jmp
adc
iret
adc
pop
scas
test
add
inc
pop
mov
addb
xchg
cli
push
imul
add
dec
pusha
add
push
fimull
outsb
push
jmp
or
cmp
xchg
jmp
push
outsb
ss
or
pop
mov
xchg
push
out
mov
dec
loop
inc
mov
or
je
sbb
push
xor
test
lds
movsl
inc
sbb
mov
xchg
ss
jecxz
pop
rolb
incb
lea
push
dec
add
xor
pusha
and
js
adc
scas
fisubs
or
mov
popf
xchg
ss
nop
adc
mov
lods
pop
pop
es
sbb
add
pop
jne
push
mov
pusha
shl
pop
orb
cmp
mov
mov
cld
movl
out
adc
mov
mov
sbb
xchg
fsubl
imul
jecxz
dec
mov
popf
inc
sub
outsl
mov
inc
bound
movsb
xor
shlb
pop
fs
sub
adc
jb
dec
loope
popa
scas
and
jmp
mov
add
cmp
cmp
pop
pop
jp
sahf
push
add
rcl
adc
cmp
jb
cmp
jbe
inc
leave
xlat
mov
xor
insb
cs
popf
xchg
sbb
jbe
add
cld
mov
pop
push
push
push
or
xorb
mov
push
ret
mov
add
mov
mov
sbb
inc
pop
out
mov
mov
xor
jg
loop
movsl
xchg
mov
repz
popa
mov
daa
adc
pop
aad
fsubs
mov
mov
loopne
sub
insl
xchg
xchg
sub
push
mov
fs
pop
aaa
and
scas
sbbb
aaa
movsb
nop
lock
das
mov
das
push
aam
adc
imul
stc
add
mov
pop
pop
sbb
mov
fcomp
add
rcrb
call
lock
loopne
sub
mov
mov
sbbb
es
jae
or
pusha
ss
aad
out
pop
sub
sbb
ja
data16
inc
jmp
inc
mov
jl
or
jge
pop
fdivrs
hlt
sarb
mov
push
sub
inc
daa
jecxz
push
movsl
aam
cld
add
mov
adc
cmpsl
add
call
sahf
pushf
inc
ret
push
or
jle
xchg
out
out
lret
mov
or
test
xor
cwtl
xchg
lock
imul
jnp
jg
jle
push
sti
dec
push
cmovnp
test
or
sbb
pop
push
dec
sbb
mov
ret
les
popf
cli
cmp
inc
or
inc
xor
jmp
dec
fsubs
loop
movb
and
bt
clc
push
jmp
adc
sbb
ret
and
adc
or
lea
dec
repz
or
gs
mov
lea
cmpsb
or
loope
daa
mov
lcall
icebp
push
lea
pop
hlt
pop
inc
dec
popa
jns
je
nop
sbb
loopne
add
add
movl
adc
inc
push
jmp
popa
push
or
pop
dec
adc
jmp
pop
scas
fisttpll
je
mov
mov
les
cmpl
jle
adc
pop
pop
dec
pop
add
test
out
xchg
and
xor
add
je
rolb
sti
sbbl
subb
xchg
outsl
rorb
sub
pop
repnz
js
std
mov
mov
sub
std
sub
je
add
add
mov
mov
adc
popa
mov
xchg
cmp
xor
cmp
cmp
mov
sub
pop
sub
add
dec
loopne
push
sbb
add
inc
sbb
cmpl
imul
jle
sub
movsl
pusha
mov
add
xlat
adc
rorb
scas
mov
dec
and
push
rol
imul
nop
ret
test
ret
add
xchg
jmp
adc
mov
cvtps2pi
rcl
xor
mov
push
roll
xlat
push
mov
mov
adc
mov
je
repz
add
push
pop
test
push
iret
dec
repz
mov
mov
shlb
lods
jecxz
jo
adc
mov
mov
inc
stc
cltd
lods
dec
push
inc
xor
or
dec
push
gs
mov
jbe
push
xchg
pop
sub
mov
xor
add
and
imul
scas
mov
mov
pop
adc
or
inc
sub
mov
add
jo
pushf
push
aam
lock
inc
cmp
sbbb
jp
xchg
insb
mov
and
gs
popf
inc
dec
pop
mov
add
insl
inc
and
push
inc
mov
jmp
sbb
loope
fs
int
add
mov
sbb
ret
les
sbb
pop
loop
lods
or
pusha
cmp
sbb
mov
push
lods
cwtl
arpl
jmp
loop
aam
in
xchg
push
cmp
push
xchg
leave
loope
les
lret
je
je
pusha
in
sbb
shll
jo
lds
jae
or
jne
push
jb
pop
jne
addr16
xchg
jge
add
push
cwtl
sbb
inc
jmp
jg
and
test
pop
lea
adc
push
mull
or
push
cmp
jl
test
jne
imul
add
add
push
or
andb
jo
mov
insl
adc
push
lea
and
jbe
mov
nop
incl
and
mov
push
or
cmc
inc
daa
add
add
pushf
fadds
mov
cli
cmp
sub
add
sub
jbe
sbb
adc
or
inc
sbb
test
add
push
xlat
jnp
and
pop
jmp
fdivs
cmp
popa
lods
xor
shlb
push
push
or
lods
push
and
je
mov
mov
mov
js
push
inc
das
call
push
lea
and
push
enter
and
dec
xchg
test
dec
push
jne
sbb
mov
addr16
cs
or
sbb
add
lock
cmp
push
push
and
enter
movsl
cmp
movsb
iret
jl
lcall
jmp
mov
jmp
pop
fucomip
adc
pushf
push
ss
testb
push
and
mov
xchg
dec
pop
push
scas
jb
test
and
cmp
hlt
or
mov
mov
adc
lret
cltd
jbe
cmp
js
into
mov
mov
cmp
push
push
mov
xchg
aaa
es
push
cmpsl
xchg
or
xor
xor
add
dec
or
xor
or
mov
adc
popf
into
add
aam
aas
andb
or
fcoml
ljmp
loope
pop
mov
mov
and
jle
cmp
or
mov
or
out
shr
or
push
ds
aam
jne
pop
es
mov
cmp
loopne
dec
inc
je
adc
rorb
push
pop
adc
aas
test
aaa
push
or
repnz
push
fstps
jmp
insb
inc
insl
movsl
inc
int3
fcmovbe
and
test
stos
jne
rolb
sub
cmp
enter
xor
pop
inc
out
adc
lret
mov
add
add
sarl
adc
pop
sub
mov
jmpw
xorb
inc
or
sbb
push
and
push
iret
repz
inc
in
push
in
out
jmp
ljmp
faddl
insl
out
aas
xlat
shlb
lcall
jmp
or
dec
inc
iret
fcompl
mov
add
push
and
xor
shrl
add
lret
inc
sub
mov
cmp
or
test
cmp
cmc
mov
jmp
jl
cmpl
call
xor
movsb
pusha
iret
fbld
and
cmp
loopne
imul
push
and
push
sub
movzwl
inc
jge
nop
sahf
sbb
adc
dec
loop
call
call
sahf
cli
imul
mov
lea
or
mov
je
dec
inc
xchg
neg
cmp
ja
mov
jge
aas
jb
dec
xchg
in
xor
in
in
testb
mov
orb
push
out
xchg
xor
in
enter
call
je
pop
ljmp
fs
cli
fwait
xor
cwtl
push
and
adc
adc
jne
sti
dec
cmpsb
outsb
int3
pop
neg
imul
push
gs
xor
dec
add
inc
data16
jne
pushf
movsl
adc
sti
mov
add
sti
mov
push
and
or
push
mov
mov
adc
ds
bound
push
push
fists
outsb
dec
jmp
movsb
inc
incw
incb
sub
sub
add
ret
add
add
jo
xchg
jge
add
cmp
pop
hlt
flds
add
andb
xor
shrl
cmp
fstpl
fistl
in
xor
push
movb
mov
cmovno
mov
and
adc
add
repnz
das
in
adc
add
lods
cli
std
cs
repnz
aas
ja
cmp
inc
and
xchg
add
jmp
push
push
dec
test
cmp
cmp
int3
out
ljmp
hlt
push
cmp
adc
add
pop
jge
dec
insl
mov
cmpsb
push
sbb
cld
push
or
addr16
sub
jmp
dec
jno
rcrb
setae
add
inc
inc
push
inc
inc
xchg
push
adc
sar
xor
push
pusha
push
mov
add
enter
imul
adc
pushf
cwtl
fdiv
enter
rolb
and
push
popf
and
lods
fbstp
sti
cmp
or
sub
push
push
cmp
insb
add
fdivrs
add
push
xchg
add
repz
dec
ljmp
ss
faddl
dec
inc
mov
mov
popf
xor
jb
movsb
inc
fiadds
adc
push
dec
je
sbb
push
or
adc
test
xor
jmp
loop
sub
push
jae
add
cmp
sbb
sub
or
push
sbb
jmp
or
ret
xor
or
push
insb
add
insl
leave
int3
jle
sub
dec
movsb
xchg
pusha
dec
xor
cmpsb
jmp
lcall
push
mov
or
add
jl
adc
inc
inc
xchg
push
sbb
pop
dec
add
jge
dec
bound
lea
cmp
rorb
and
dec
hlt
and
push
inc
inc
add
mov
jl
mov
insb
ret
and
mov
test
aam
dec
cltd
mov
sbbb
or
aaa
fcoms
mov
pop
xor
add
not
and
inc
into
cmp
mov
ljmp
rcr
add
clc
or
outsb
cli
mov
pop
push
push
xchg
dec
mov
inc
adc
push
inc
sbb
cmc
pop
add
push
divb
ret
mov
push
pop
orl
pusha
dec
dec
jp
xchg
gs
int3
fucomip
cmp
sub
sub
add
mov
or
xorl
mov
push
mov
jmp
mov
out
mov
xor
and
pop
orb
popa
loope
dec
adc
in
push
test
and
xor
data16
mov
movsl
pop
xchg
lds
push
movsb
mov
add
lret
movsl
mov
ret
aaa
fs
insb
inc
hlt
xchg
add
orb
xchg
cmp
pop
mov
cmp
add
mov
or
inc
popf
scas
or
xor
pop
push
sarb
movsb
mov
mov
loopne
mov
leave
aad
pop
flds
add
inc
mov
sbb
adc
push
lods
dec
data16
dec
mov
dec
fistps
sbb
shlb
loop
jmp
push
jecxz
inc
out
push
xlat
sahf
xor
cmpsb
adc
mov
cltd
mov
mov
sbb
clc
pop
xchg
aaa
cmp
push
jl
xchg
sbbl
mov
inc
fwait
rcrl
push
jp
mov
add
pop
xchg
test
in
jg
sbb
pop
mov
xchg
aam
add
add
push
clc
jl
push
fucom
mov
lods
ret
cmp
rorb
nop
cmp
add
sub
push
push
xor
xchg
and
adc
xlat
cmp
loope
cmpsb
push
adcb
jmp
sbb
adc
testl
aam
inc
idivl
pop
lcall
test
and
lods
sbb
xor
xor
jg
xor
roll
xchg
inc
js
push
subl
dec
mov
clc
lret
and
ficoms
add
test
add
ficoml
xorl
and
push
out
rcrb
pop
dec
loopne
ljmp
add
pop
pushf
add
mov
cld
jmp
cmp
je
mov
xor
lcall
or
xorb
or
sub
xor
xor
cmp
sbb
pop
inc
loope
lcall
and
add
or
jecxz
cld
push
fcomps
rclb
push
call
xor
and
bound
pop
jmp
fsub
int
adcb
call
mov
sarb
cwtl
sbb
sbb
in
add
mov
add
imul
mov
cmp
mov
ficompl
pop
sub
adc
aas
lea
setbe
sub
mov
jns
clc
imul
inc
mov
pop
sbb
shr
stc
nop
or
xor
repz
je
pusha
clc
je
or
or
test
lds
arpl
jo
sub
and
add
mov
mov
pop
pop
dec
les
outsb
ret
xor
mov
cmp
push
cmp
pop
out
and
jle
or
fistps
or
aaa
pop
in
ret
push
fldl
push
mov
cmpl
xchg
icebp
fmuls
sahf
sbb
dec
out
mov
ret
dec
push
stos
mov
sub
add
mov
test
bound
jmp
outsl
and
sbb
jl
lret
in
pop
inc
adc
add
out
jmp
aas
loope
pop
imul
inc
and
xchg
or
xchg
shlb
push
shlb
or
push
ret
jnp
lea
add
jne
mov
hlt
shl
mov
inc
inc
adc
push
and
movsb
xchg
push
mov
xchg
push
dec
sub
add
mov
es
inc
imul
outsb
mov
jae
pushf
cmpsl
mov
pop
or
pop
out
xor
fadd
pop
xor
lea
or
cmpsb
jne
jmp
adc
dec
sahf
lock
pusha
dec
mov
mov
pop
leave
push
lret
shrl
lods
adcl
dec
push
repz
mov
adc
mov
test
lock
dec
popa
jmp
add
cmc
add
roll
cmp
cmpsl
or
pop
subb
or
sahf
hlt
shll
dec
lret
sbb
adc
lea
adc
xor
insl
cmp
pop
xchg
mov
mov
das
and
mov
mov
and
jp
xor
ret
mov
stos
dec
imul
jae,pt
es
addb
sbb
loop
mov
shrb
test
or
adc
push
add
pop
mov
fisubs
sbb
inc
sub
pushf
xchg
push
jbe
addps
js
dec
lcall
js
subb
rolb
test
jmp
sbb
jp
in
addr16
insl
adc
push
jns
xchg
enter
pusha
push
add
fcoms
xchg
fdivl
push
jnp
cmpl
jne
lea
jmp
or
push
test
pop
xor
inc
aaa
lret
rcrl
fdivr
push
dec
testb
add
loope
pop
movsl
jno
and
je
add
adc
push
add
and
insl
xor
inc
jb
mov
sbb
das
dec
xchg
mov
cmp
addb
insb
cmp
sbb
dec
gs
or
mov
dec
cmpsl
push
clc
call
not
iret
mov
lea
xor
jo
push
fnsave
xchg
lods
ja
mov
jge
insl
push
mov
std
stc
imul
inc
gs
cmp
xchg
enter
lcall
pop
push
pop
sarb
ret
ret
inc
or
roll
mov
xor
fwait
xor
or
in
aas
cmp
je
cmp
jb
cmp
cmpsb
pop
cmp
cmp
xchg
xchg
lret
imul
push
xchg
imul
adc
mov
inc
cmc
dec
sbb
push
and
in
and
pop
divb
jmp
aam
pop
xor
add
movl
cmp
add
pop
mov
add
and
jae
and
scas
mov
dec
xchg
xor
out
or
je
push
or
push
pop
popa
mov
pop
outsl
pop
cmp
popa
loop
pop
movl
lahf
scas
push
insb
or
inc
mov
aaa
push
lock
dec
jo
push
sub
lcall
dec
or
mov
or
je
shlb
jmp
adc
jmp
les
lock
dec
add
cmpsb
mov
xor
pop
int
mov
pop
cmp
sub
xchg
dec
cwtl
test
or
sub
inc
add
xchg
popf
mov
sub
shl
or
scas
rcrb
cmp
add
mov
push
jmp
push
or
or
push
sbb
or
jmp
jo
cwtl
xchg
mov
les
sar
lahf
inc
das
loope
test
aas
mov
sar
adc
cmp
adc
xor
test
es
xchg
or
or
shrl
inc
addr16
mov
cwtl
movsb
jl
pushf
gs
dec
mov
loopne
in
xor
pushf
jno
push
shr
or
inc
lock
mov
or
mov
repnz
lcall
sbb
popf
push
sub
push
sbb
fisttps
mov
and
adc
clc
mov
std
push
adc
mov
pop
fmul
dec
movsb
test
movsb
mov
mov
loopne
pop
cwtl
adc
or
fiadds
cmp
push
rclb
ds
push
add
adc
orb
xchg
hlt
and
mov
dec
icebp
jne
sahf
mov
mov
ss
fisubl
movsb
and
ret
pusha
ret
xchg
popf
movsl
dec
repz
andl
nop
mov
adc
roll
sbb
adc
js
fsubrs
stos
mov
lret
mov
cld
xor
mov
pop
sbb
sub
and
jo
push
fcoml
rorl
or
jecxz
cmp
rcrb
adc
add
push
sarl
addr16
lea
lcall
push
jno
sub
or
incl
nop
aam
adc
mov
scas
push
addl
xchg
or
jmp
dec
mov
mov
divb
or
mov
mov
test
jmp
pop
scas
sub
push
orl
jmp
cmp
pop
pop
pusha
imul
adc
repz
mov
lahf
aaa
push
add
leave
loopne
fstl
add
movsl
pop
fstpl
fldenv
ds
mov
push
loope
sbb
pop
repz
cld
loopne
xor
jne
dec
shll
fildl
ret
lock
popa
pop
mov
fsub
loope
dec
and
outsl
addr16
adc
shrb
push
sub
mov
mov
sub
sbb
dec
or
jge
or
dec
jmp
mov
push
stos
and
in
fmuls
arpl
test
lock
aas
inc
into
inc
mov
ja
mov
lods
enter
cmp
cmpsb
movsl
pop
clc
add
add
int
fdivrp
rorb
xorl
mov
cwtl
add
adc
hlt
pop
push
nop
xchg
lock
clc
in
jb
leave
or
or
add
loop
mov
and
xor
data16
and
mov
pop
and
xor
or
add
sub
hlt
push
xchg
mov
scas
sub
adc
push
ds
and
fs
nop
or
das
cmp
jle
jbe
sub
mov
in
and
lret
enter
mov
xor
add
rcll
push
inc
xchg
mov
in
add
fistl
sbb
mov
mov
dec
mov
sbb
jle
push
push
cli
mov
adc
insl
cmc
iret
sub
mov
pop
in
mov
mov
imul
push
imul
or
inc
out
out
inc
push
sub
in
popa
sub
imul
cli
jecxz
pop
push
lods
in
stos
and
rcl
push
add
or
add
outsl
repz
rolb
lock
loopne
or
std
lods
stc
pusha
or
cli
xchg
sub
jbe
pop
shlb
mov
ljmp
pushf
aas
out
gs
test
adc
jae
or
or
or
enter
ret
clc
push
pop
xor
cmp
mov
dec
inc
orb
push
xor
add
adc
pop
ret
mov
mov
ds
xor
js
fwait
add
insl
gs
jmp
or
mov
mov
mov
adc
lea
pop
outsb
xor
cmp
clc
push
add
cli
mov
out
mov
out
movsl
cmp
das
push
sbb
push
ret
mov
or
push
sbb
fisubrl
push
sub
shrb
or
push
cmpsl
and
loopne
add
test
es
pushf
push
pop
cld
imul
and
dec
pop
das
lods
movsl
push
shl
sub
lahf
clc
sub
pop
lea
rep
push
hlt
jne
or
negb
bnd
adc
je
add
cmp
mov
cld
cs
sub
push
mov
mov
aaa
add
cmp
loop
popa
add
dec
aam
lret
pusha
push
pop
jmp
jecxz
add
xor
add
xor
test
and
in
sbb
push
or
std
xchg
add
push
ja
ret
pop
shl
clc
mov
jae
test
rclb
repz
inc
cmp
cld
movsl
pop
jnp
addr16
pop
or
fstpt
push
mov
mov
jl
in
jmp
jmp
imul
push
sbb
rorb
push
xchg
clc
outsl
clc
rcrb
lcall
adc
rolb
cmp
inc
sbbl
fsubl
xchg
push
and
out
adc
ret
loopne
sbb
orl
dec
scas
jmp
scas
fs
hlt
inc
repz
or
out
xor
mov
pop
mov
movsl
scas
xchg
mov
sub
mov
outsb
pop
mov
inc
adc
je
test
fstps
mov
mov
cmp
shlb
xorl
dec
subb
pop
adc
ret
aam
or
add
mov
cmp
xchg
enter
mov
jmp
iret
and
sbb
or
pusha
or
hlt
adc
dec
outsb
stos
prefetcht0
pop
sub
movsl
xchg
call
pop
nop
jae
jmp
nop
and
xor
jmp
arpl
cs
xlat
sbb
add
add
ror
sbb
sub
inc
popa
js
xor
ret
out
pop
mov
cwtl
and
pop
sbb
rcrb
sbb
add
pusha
pop
fistl
cwtl
and
push
adc
push
inc
cmpsb
mov
insb
xchg
jg
shrl
test
in
imul
cld
add
cmpsl
pop
inc
and
or
ds
and
or
mov
mov
push
add
mov
or
in
add
push
xor
push
cld
jl
mov
out
jnp
jo
fdivrs
jb
lret
push
testb
addl
xor
jmp
jecxz
mov
push
mov
icebp
dec
lock
in
rcl
and
mov
jmp
inc
insl
addr16
adc
and
mov
adc
pop
pop
or
orb
sub
subl
adc
pop
push
and
lds
jno
loop
push
xchg
dec
rol
push
pop
outsl
lds
insl
push
insl
test
or
outsl
mov
jno
push
push
jmp
jle
sub
push
and
dec
test
mov
and
xchg
lock
andl
sbb
mov
jge
ljmp
fcompl
enter
or
add
ja
inc
imul
test
fsubl
arpl
push
fwait
stos
pop
sbb
or
ret
push
jo
in
pop
addb
sub
sub
cmp
mov
punpcklbw
test
sub
add
cli
push
scas
cli
cwtl
adc
adcb
enter
inc
or
sbb
cwtl
sub
rol
and
aad
jmp
push
dec
or
lret
js
add
push
or
cmc
adc
inc
or
insb
push
jnp
adc
cmpb
rorb
add
lahf
push
jmp
mov
jne
dec
or
and
adc
inc
mov
mov
dec
add
cmp
stos
push
inc
ret
add
sbb
out
sbb
pop
andb
xchg
scas
sub
pop
inc
mov
xor
sbb
mov
in
sbbl
inc
pop
pop
insl
inc
jge
add
xchg
lock
dec
enter
clc
stos
push
inc
or
pop
xchg
lea
pop
loopne
adc
sub
xchg
dec
inc
jg
xlat
shl
add
sbb
sbb
add
add
push
pushf
shl
jg
shl
mov
in
mov
sbb
lea
push
adc
inc
mov
jns
cmp
repnz
xor
add
add
repz
mov
push
sbb
or
sbb
test
mov
and
imul
add
out
add
push
push
mov
dec
push
icebp
pop
enter
aas
inc
js
xor
sub
into
arpl
jge
adc
je
mov
pop
unpcklps
or
xchg
ficompl
daa
cmc
aad
adc
add
enter
lahf
stos
gs
push
inc
clc
inc
dec
adc
push
orb
dec
in
inc
sbb
sbb
and
jl
inc
jo
test
pop
test
pop
sub
sbb
adc
icebp
daa
inc
sbb
incl
cltd
mov
movsl
xchg
addr16
shlb
inc
ss
ja
test
jnp
cmp
jmp
cmp
roll
sub
jo
rolb
inc
xchg
bound
push
pop
sti
lods
popa
mov
ja
adc
cmpb
dec
mov
push
add
mov
and
jne
jbe
adc
es
pop
jo
fnstenv
insl
mov
lret
add
test
add
icebp
jb
inc
and
lret
add
inc
sbb
stos
push
inc
fsubs
sahf
or
cs
sbb
adc
push
sub
bound
clc
into
je
stos
add
movsb
sub
movsl
push
movsb
movl
mov
pop
movsl
mov
daa
add
cs
pop
shrb
sub
pop
leave
or
enter
cmpb
xchg
pop
sub
into
push
mov
pop
test
mov
fists
pop
inc
clc
push
divl
pusha
dec
xchg
cmp
jnp
or
xchg
lods
roll
jmp
add
fs
lods
inc
sbb
sub
add
jae
mov
hlt
cmp
lret
sbb
pop
mov
shl
push
rcrl
incb
imul
xchg
das
pop
movl
mov
repz
divb
or
inc
adc
add
test
mov
cltd
rolb
hlt
add
clc
xchg
sbb
js
push
out
xor
xor
stos
iret
sub
and
or
xor
adc
test
cmp
rolb
mov
ds
sub
ds
repz
sub
push
dec
rclb
movsl
sub
pop
inc
inc
inc
inc
dec
rcrl
cmp
xchg
mov
mov
in
add
lea
movl
je
inc
or
out
pop
xorl
pusha
in
int3
shrb
or
sbb
sar
adc
inc
xor
js
dec
cmp
cmp
dec
lea
mov
aas
jmp
inc
cmp
pop
iret
and
inc
insl
pop
cmpsb
or
xchg
sbb
push
or
xorb
jns
sar
fsubrs
add
jae
lock
xchg
add
insb
mov
jo
pop
mov
push
adc
or
aaa
rorb
adc
pop
push
push
xchg
shlb
pop
and
mov
push
add
out
add
adc
xor
insb
stos
push
nop
xor
sbb
adc
jmp
inc
cli
shlb
leave
jae
stc
mov
lea
dec
mov
dec
mov
rolb
push
leave
dec
aas
enter
dec
jnp
inc
pop
ja
dec
or
pushl
cmp
xchg
push
push
mov
dec
jmp
pop
aaa
ds
mov
xor
sub
loopne
inc
aas
sbb
xor
int3
jo
jb
or
sub
sbb
scas
adc
push
jmp
jne
dec
sub
negb
sbb
add
push
loopne
dec
pop
adc
adc
dec
jnp
sbb
das
cmp
or
inc
les
mov
jnp
push
mov
push
sub
jmp
push
test
cmp
lret
mov
add
enter
jo
xor
push
test
xchg
pop
dec
cmc
aam
rol
int
jmp
push
jp
add
mov
inc
sbb
adc
sbb
cli
loopne
pop
inc
jmp
xchg
jbe
cmpsb
repnz
jo
add
mov
push
or
push
sbb
andb
daa
add
cmpsb
push
xchg
sbb
inc
je
pop
xchg
into
ret
cmp
mov
jnp
bnd
iret
fdivrl
add
adc
int3
mov
gs
cmpsb
xorl
and
dec
jmp
pop
in
mov
cmp
push
push
cmp
mov
cmc
dec
mov
lds
std
mov
ret
call
push
push
add
ret
gs
push
push
ret
cltd
sti
or
movsb
imul
pop
aaa
xlat
in
cmp
sbb
add
inc
lock
ret
sti
jmp
xor
adc
mov
add
stc
les
or
cmp
sub
mov
mov
adc
and
or
add
sub
cld
insw
loope
hlt
pushf
or
inc
or
jmp
push
mov
adc
dec
cmp
push
push
mov
mov
mov
loope
xchg
lahf
mov
inc
cmp
push
xchg
add
lea
cwtl
xchg
int
les
aad
jmp
xchg
and
or
inc
push
push
scas
jns
push
rcll
push
aaa
xchg
jne
and
jecxz
clc
imul
add
insb
imul
aaa
ret
mov
mov
add
push
jnp
cltd
rolb
rclb
push
test
inc
nop
jno
popa
jno
cmp
lock
pop
inc
and
mov
icebp
push
push
sbb
sbb
shlb
jp
arpl
ret
push
out
cmc
lret
dec
add
dec
rorb
pop
jl
cld
loopne
ljmp
jl
leave
inc
and
movsl
pop
sub
pushf
cwtl
cmp
lcall
dec
mov
fdecstp
push
hlt
push
out
and
jb
or
push
add
mov
iret
jne
mov
push
test
dec
push
lea
jg
data16
cmp
push
hlt
push
cld
jg
enter
adc
inc
adc
inc
dec
lock
fdivr
shl
or
and
lods
lret
or
or
sub
or
dec
push
out
add
dec
xor
sub
movsb
popa
mov
in
push
or
imul
push
and
inc
sbb
and
xor
xor
shr
push
mov
or
lret
mov
movb
cwtl
test
mov
inc
adc
lock
xchg
clc
sbb
push
or
test
cmp
shlb
roll
sbb
js
and
rclb
push
sahf
xor
push
pop
cs
aaa
xchg
add
scas
pusha
cmpsb
and
jb
pop
sbb
push
sub
adc
push
add
jmp
jl
fidivrl
lea
cli
adc
mov
lea
adc
lods
cwtl
cld
lea
adc
addr16
inc
cmp
and
insb
jmp
cmp
xor
test
adcl
sbb
daa
and
es
inc
mov
inc
jbe
pop
dec
jno
aaa
or
mov
mov
pop
cmp
aas
call
adc
add
mov
add
repz
add
cs
faddl
mov
cmp
mov
or
lods
sub
and
cmpsl
lods
xorl
clc
lock
mov
add
add
sbb
fwait
movsl
pusha
mov
jae
or
jmp
or
inc
nop
adc
outsl
stc
push
mov
shll
or
and
movsb
pop
adc
fwait
xchg
or
adc
sub
and
sbb
jg
xchg
fdivl
xchg
insl
mov
adcl
leave
push
or
in
aaa
hlt
dec
jne
mov
inc
jmp
fs
and
jo
int
lods
data16
and
or
popa
pop
mov
imul
sahf
movb
loop
xor
andl
jl
movsb
adc
and
out
adc
cmp
dec
mov
inc
inc
mov
and
pusha
xor
mov
push
inc
sub
sbb
adc
xchg
lock
lret
movsl
js
or
pop
inc
xlat
inc
or
pop
sbbb
jbe
adcb
dec
push
arpl
or
jbe
ret
add
aaa
jne
inc
sahf
outsb
push
jno
jo
sbb
orb
push
aas
dec
push
sahf
adcb
jecxz
out
in
dec
movsl
lcall
pop
pop
add
push
push
push
ret
loop
inc
jne
lret
adc
add
adc
mov
jmp
enter
inc
push
xchg
push
push
pop
sub
jnp
insl
gs
rcrl
adc
nop
mov
or
sub
sub
xchg
push
adc
pop
pop
sub
scas
mov
fcoms
add
into
shrb
push
push
ljmp
movsb
rcrb
fs
push
test
push
inc
sbb
mov
icebp
xor
adc
cmp
jmp
or
movsl
out
push
xchg
inc
pop
pop
cmp
lock
lds
cmpsb
sbb
xchg
and
xor
and
add
add
jp
aad
sub
test
inc
pop
in
xchg
ss
and
test
in
mov
jne
subl
lock
and
dec
xor
add
pop
js
or
mov
stos
jo
inc
ret
lock
hlt
das
mov
stos
sbb
ror
xchg
cmp
dec
inc
inc
adc
in
cmp
or
out
pop
pop
test
and
or
xor
mov
or
testl
or
sbb
xor
adc
xchg
xchg
lret
pop
loop
xchg
iret
shlb
adc
cmpsl
daa
jne
push
fmuls
push
addl
cmc
sbb
cwtl
mov
pop
mov
push
popa
push
dec
loopne
add
and
pusha
rcll
ret
js
call
ret
and
ficompl
add
das
leave
insl
and
and
push
jne
ljmp
dec
les
mov
in
loope
jp
adc
iret
jae
xor
ss
xchg
add
aad
cmpsl
mov
xchg
ret
mov
out
sbb
add
cmp
dec
dec
nop
pop
sbb
jmp
push
stos
dec
cmpsb
push
roll
inc
or
adc
out
mov
jbe
ss
fmuls
repnz
es
loop
and
sub
pop
xchg
imul
test
dec
push
pop
fsts
push
push
fdivl
or
add
pop
mov
mov
add
es
test
rolb
fwait
aam
ret
xor
cmp
fiadds
mov
mov
loopne
xchg
cwtl
lock
mov
aaa
fsubrs
je
roll
loopne
cmp
cmpsb
xorl
mov
pop
nop
icebp
mov
xchg
push
push
scas
lods
fildll
jmp
sarb
bound
lods
and
adc
jne
mov
ror
push
adc
insb
jecxz
cmp
or
adc
sarl
sub
popf
orl
lock
or
pop
ret
or
xchg
and
outsl
pop
lods
mov
push
push
sub
inc
pop
cwtl
test
pushf
push
mov
xchg
call
jp
shll
add
lods
dec
dec
xchg
mov
push
mov
cltd
lods
sbb
push
sbb
call
inc
push
mov
test
movsb
pop
inc
jo
inc
adc
inc
and
call
in
andb
add
test
xchg
aam
inc
call
mov
pop
pop
lock
pop
pop
cmp
and
and
out
jge
cmc
add
je
mov
inc
lea
mov
or
test
inc
xchg
dec
cmp
push
ds
xor
frstor
hlt
rol
mov
das
pusha
pushf
mov
mov
mov
lret
mov
cs
pop
xor
xchg
pop
ret
add
pushf
pop
push
sbb
cltd
sbb
outsl
icebp
lret
add
jle
or
out
dec
inc
dec
pop
inc
pop
or
push
sbb
je
jge
push
mov
push
loopne
push
pop
mov
les
ja
inc
iret
fs
or
fdivrl
cmp
arpl
out
jp
dec
adc
movsb
lret
jmp
push
nop
enter
addr16
push
mov
push
inc
loope
out
call
gs
push
inc
xchg
and
pop
adc
in
les
stos
adc
ret
inc
mov
push
jmp
sbb
jne
popf
pop
in
cmp
add
sbbb
in
pusha
inc
pop
add
or
fldl
les
ja
sub
inc
or
xchg
js
imul
mov
gs
push
repz
ds
xor
mov
ret
test
adc
cmp
movsb
xor
insl
insb
dec
es
jmp
push
dec
inc
mov
add
cmp
shlb
xchg
push
call
dec
sub
mov
mov
mov
pop
and
inc
pop
or
inc
mov
sbb
pop
sub
roll
js
xchg
cmp
outsl
jecxz
inc
aaa
test
movsb
or
in
fadds
in
test
gs
add
pop
fidivrl
push
mov
adc
orl
sub
xchg
mov
add
xchg
cmp
adc
xchg
add
dec
cmp
and
cmpsl
popa
dec
cmp
outsl
inc
jne
jnp
add
or
adc
fmull
inc
testb
push
add
or
outsl
dec
arpl
cmpw
pop
movsb
push
mov
or
jbe
fstpt
mov
sbb
lods
cmc
add
jne
fcomps
or
add
sbb
mov
dec
rcl
xchg
je
sub
push
add
pop
add
outsl
jmp
mov
lret
mov
dec
and
adc
movsb
data16
shl
xor
fdivrs
adc
and
les
mov
add
orb
mov
jecxz
mov
and
mov
lahf
xlat
jnp
adc
and
inc
cs
and
dec
cmp
push
cmpsb
jnp
pop
push
mov
outsl
nop
and
or
sub
mov
jns
push
lods
add
pop
sub
icebp
adc
fs
inc
push
cmp
mov
rcr
sbb
or
sbb
push
dec
addr16
jo
insb
gs
dec
adc
or
add
lock
leave
dec
adc
push
push
ret
mov
mov
push
fst
jb
mov
scas
out
lock
xor
dec
or
dec
jp
sub
xchg
sbb
and
push
je
subb
out
add
jge
push
jne
push
ja
push
dec
lock
cmp
and
push
jns
xor
push
sarb
mov
mov
imul
lock
jno
dec
and
jecxz
jne
int
stos
lods
iret
add
inc
jne
jne
and
pop
movsl
sbb
push
pop
insl
cmp
outsb
mov
add
or
idiv
lods
gs
dec
dec
in
jmp
adc
cwtl
clc
test
dec
lods
pop
es
gs
jo
sbb
sub
cwtl
fwait
cmp
cmp
fwait
out
rcll
idivl
lcall
jge
add
or
incb
push
dec
fcomps
out
jp
lea
and
outsb
push
add
shl
mov
xor
adc
jnp
cmp
inc
cmp
jae
adc
cltd
aad
adc
xor
sbb
mov
into
push
pop
outsb
mov
aam
push
xchg
inc
mov
add
or
mov
iret
ficompl
insl
cmpsl
nop
ss
pop
cmp
inc
push
push
xchg
jmp
sbb
mov
mov
xor
loope
push
insb
pop
xor
jo
xchg
and
es
mov
xchg
xor
shlb
xor
pop
push
sub
ds
gs
inc
inc
sbb
loope
sub
or
dec
dec
sub
mov
push
xor
insl
adc
ficoml
xor
jo
add
les
pushf
or
xor
and
push
and
adc
add
jl
add
pop
aas
inc
jb
stos
in
mov
sub
and
lea
scas
inc
or
and
lahf
lea
lea
add
xor
out
adc
mov
xchg
or
cmp
cmp
mov
sbb
cmp
sbb
pusha
xor
add
push
shll
sbb
jge
mov
cmp
fisubrs
and
popf
adc
je
shlb
cmp
xorb
das
jbe
popa
sub
mov
hlt
push
adc
shl
xchg
sbb
or
adc
add
nop
cltd
call
push
pop
push
adc
das
dec
adcb
bound
mov
dec
shll
push
or
push
or
rcrl
xor
jae
dec
xchg
add
clc
or
cld
push
addl
out
sub
dec
adc
push
cwtl
sahf
jecxz
sti
jo
out
faddp
and
cli
inc
fnstsw
dec
jb
mov
xor
mov
xorb
sub
sbb
test
mov
mov
loop
sbb
addl
inc
sub
push
cli
dec
loope
cwtl
lock
pushl
test
cld
add
cmp
pushl
pushl
lret
into
insl
mov
add
mov
sti
nop
jmp
daa
push
sbb
xchg
in
lahf
nop
sub
cmpsl
loopne
inc
jnp
sub
mov
fcomps
adc
jo
and
mov
adc
mov
pop
and
mov
or
movsl
test
cli
adc
and
mov
lret
ret
ret
clc
test
adc
femms
and
ja
scas
add
sub
lock
into
push
push
add
mov
pop
pop
jecxz
int
testb
int
nop
push
shlb
push
or
popa
xchg
add
push
lods
cmp
cmpl
add
es
inc
adc
pushf
dec
lcall
xor
test
push
sbb
and
lock
pop
frstor
jp
clc
inc
xchg
test
mov
sub
mov
into
jno
fucomip
adc
mov
icebp
add
adcb
push
xor
pop
xor
popf
int
cli
sbb
dec
inc
lahf
xchg
push
inc
cmp
adc
mov
and
inc
jp
popf
hlt
jle
sub
cmpsb
mov
sub
mov
push
jecxz
je
fld
ljmp
add
loope
je
and
pop
mov
pop
cmp
sub
cmp
pop
and
lea
inc
pop
jle
jne
xchg
popl
loopne
shlb
jns
add
mov
mov
test
xchg
xor
test
cmpb
sbb
pusha
add
stos
pop
push
imul
mov
xor
xchg
dec
sub
call
jbe
sub
xor
pop
add
jae
inc
jmp
xor
sarb
pop
sbb
movsb
dec
repnz
repnz
push
popf
sub
mov
fdivrs
int3
lret
pop
mov
mov
clc
decl
ss
sub
xchg
pop
test
aam
cmpsb
adc
xor
and
sub
mov
lahf
add
cmp
xor
test
sbb
sub
xchg
lock
add
push
push
add
jb
xchg
lods
push
adc
adc
push
jecxz
stos
and
sbb
sub
adc
jmp
dec
mov
cmp
sub
sub
inc
pop
jno
xor
adc
add
aaa
hlt
clc
inc
das
ss
xor
jne
inc
cmp
jmp
negl
jne
adc
jbe
adc
inc
insl
push
xor
cmp
push
and
or
in
ljmp
xchg
inc
stos
outsl
int
popf
hlt
call
and
test
fs
scas
and
gs
cs
add
push
add
or
sahf
fildll
push
or
movsb
xor
pop
fdivs
and
adc
bound
data16
aam
mov
inc
or
aaa
or
or
mov
mov
xor
pusha
pop
jmp
jno
dec
mov
mov
adc
sbb
add
ds
shlb
add
mov
pop
int
jne
ret
add
jne
xor
or
pusha
scas
loopne
movsb
jmp
daa
push
fs
sbb
push
lea
mov
push
popf
mov
push
inc
dec
shr
pop
shrb
pop
xlat
mov
pop
dec
cmpsb
sub
mov
mov
add
scas
rol
arpl
add
dec
xchg
adcb
lds
mov
cmp
pushl
lea
arpl
cs
insb
int
mov
sub
jbe
movsb
mov
sub
push
add
push
mov
add
sti
xchg
jle
pop
push
xchg
xor
inc
stos
pop
pop
nop
mov
ret
and
jg
mov
lods
pusha
fmull
loopne
mov
das
push
push
inc
xchg
je,pn
fcomps
jo
or
adc
xor
fs
jae
js
sbb
adc
and
pusha
les
mov
mov
call
adc
outsb
jne
mov
jne
push
nop
dec
or
inc
xchg
mov
mov
and
adc
xchg
push
dec
pop
dec
cmp
jb
or
gs
dec
scas
rcr
push
mov
ds
and
push
jle
lods
xor
in
sbb
jne
sbb
adc
sahf
inc
stos
mov
or
lds
lock
sbb
sbb
inc
xor
iret
mov
mov
push
cli
push
jmp
test
xor
jo
jns,pt
xlat
jl
adc
pop
in
aam
inc
xlat
or
sbb
cmp
sub
mov
xchg
pop
mov
ret
adc
cwtl
cmp
add
xchg
ss
xor
xor
add
fldt
push
test
sub
push
dec
cmp
xor
test
or
add
push
push
mov
and
sti
mov
pop
cwtl
pusha
imul
xor
into
xor
fidivs
jge
mov
popa
inc
xchg
adc
pop
adc
cmp
out
or
adc
sub
or
push
aaa
jl
call
scas
ret
inc
lods
lcall
and
addb
int3
repz
test
sub
jo
js
jbe
incb
ficompl
push
hlt
jae
push
je
popa
mov
and
sub
aaa
or
push
dec
lds
jmp
in
sub
sub
xor
jp
push
fisttps
std
xchg
sbbb
or
add
leave
int
insb
cltd
mov
dec
ja
lods
jb
adc
subl
mov
rcll
mov
sub
mov
jae
repz
push
inc
sub
or
inc
in
mov
xchg
sbb
aaa
push
add
mov
push
sbb
movsb
sbbl
push
rol
rcll
pop
mov
ret
cltd
and
loopne
push
add
cmp
xchg
mov
cmp
fwait
add
ret
sbb
loop
pop
pusha
jb
dec
or
in
daa
gs
add
mov
movsb
adc
or
je
into
pop
negb
ret
es
shrb
push
sub
sbb
cld
mov
or
and
adc
sti
mov
pop
popa
js
xor
mov
dec
fs
mov
xlat
aas
pop
pop
cmpsb
pop
mov
inc
push
idivb
pop
test
add
loopne
pop
push
fisubrl
lret
and
mov
sbb
loop
sub
ret
sub
mov
sub
mov
ficoms
push
push
adc
enter
pop
xor
or
adc
jmp
add
cmp
add
ss
jne
cmp
mov
jmp
pop
sub
cmp
dec
jno
jecxz
test
mov
je
int3
pop
or
movsb
mov
push
in
lods
mov
jo
and
jmp
sbb
add
add
or
or
adc
dec
sbb
xor
push
jne
lret
xor
shrl
andl
sarb
push
sub
dec
movl
jns
lods
inc
jecxz
sbb
gs
sub
fldt
dec
cwtl
ja
pop
adc
test
loope
sub
sbb
fstpt
push
sub
jo
cmp
outsl
shlb
packsswb
aad
mov
cli
mov
jbe
pusha
push
add
cmpsb
push
sbb
andl
test
fs
mov
push
push
pop
call
push
shlb
andb
dec
pop
loopne
cs
add
and
jbe
movsl
add
jg
jo
popa
jo
jo
cmp
icebp
andb
jmp
sbb
add
xor
jbe
out
push
ja
inc
xor
mov
push
sub
push
and
or
pop
insb
sbb
pop
mov
outsb
dec
pop
cmp
in
jnp
hlt
jmp
xchg
fsubs
insb
xor
inc
jmp
lock
div
adc
out
into
stos
aas
mov
push
sub
jmp
pop
pop
mov
cmp
add
sub
stos
maxps
jmp
adc
mov
mov
jmp
sub
jne
or
cmp
lods
sub
jl
dec
mov
rcrl
ret
sub
dec
imul
pop
fcomps
jmp
mov
or
mov
jmp
mov
pop
mov
cmp
out
jno
pop
cmp
cmp
repz
jl
ljmp
pop
insl
iret
jne
pop
pop
xchg
mov
shl
out
jns
fistpll
in
testl
push
and
jge
cmp
push
ja
cmc
pop
dec
or
arpl
dec
mov
out
push
mov
mov
sub
or
adcb
lcall
xchg
rol
or
js
test
and
dec
data16
or
push
adc
push
mov
pop
or
mov
sub
loopne
ds
mov
or
aaa
and
adc
or
or
pop
imul
sub
clc
dec
or
mov
push
xlat
mov
sahf
inc
or
or
roll
mov
push
inc
push
pop
push
les
pop
jmp
mov
iret
jle
sbb
inc
inc
test
js
inc
push
and
nop
es
push
add
xor
sbb
jo
or
pop
add
outsl
push
jb
push
inc
dec
and
push
add
xor
adc
xchg
cmp
pop
pop
in
push
aam
movsb
push
sarl
inc
lock
repnz
add
sbb
or
push
sub
adc
xchg
add
cmp
enter
or
push
add
gs
mov
je
dec
jo
adc
pop
xchg
and
mov
nop
mov
aam
and
sbb
adcb
dec
mov
or
pop
cltd
mov
int3
pop
xor
inc
pop
add
arpl
mov
sub
imul
icebp
or
jno
and
dec
lcall
add
jo
jae
or
sbb
adc
dec
add
cmpl
jnp
push
push
into
push
pusha
cs
push
mov
loope
outsl
dec
fstps
dec
pop
mov
inc
fwait
add
pusha
sbb
or
inc
and
adc
pop
bound
frstor
sahf
and
mov
dec
xor
mov
sbb
dec
fs
adc
or
dec
imul
cmp
cmp
jmp
xor
outsl
xchg
aas
orl
sbb
and
cmp
jae
pop
mov
add
mov
sbbb
jle
imul
mulb
or
xor
push
leave
mov
jb
sub
mov
pop
das
dec
fmuls
push
jno
inc
lods
inc
push
imul
sbb
scas
je
xor
adc
les
and
jle
cmp
in
insb
mov
xchg
adc
sbb
push
jge
test
ja
jbe
jecxz
mov
sub
and
das
jbe
or
sbb
dec
jne
loop
inc
mov
push
movsb
pop
add
add
test
mov
add
mov
shlb
sub
xor
mov
jmp
into
pop
je
shr
push
pop
push
cmp
adc
cmpsl
movsb
xor
popf
adc
add
jl
push
jmp
cmp
sub
pop
add
add
arpl
push
loopne
outsb
add
mov
cmp
pop
jo
inc
add
or
sub
add
or
call
outsl
jne
pop
adc
xchg
sbb
test
inc
inc
icebp
cmpsl
adc
mov
add
fstpl
mov
sub
fdivrl
dec
sbb
test
and
test
hlt
inc
lock
adc
in
or
stos
rclb
cmpsb
pop
add
sub
adc
adc
enter
lea
andl
data16
xor
js
xor
sub
xor
aas
or
push
lret
pop
inc
jo
add
pop
pop
inc
dec
jmp
mov
das
cmp
dec
jl
push
add
push
sbb
mov
mov
xor
shl
xchg
in
pop
cmp
jne
inc
xchg
lds
lea
pop
pop
repnz
mov
cmp
xchg
mov
sub
pop
nop
sub
adc
mov
fsts
dec
xlat
add
push
sbb
sahf
jbe
aaa
push
jmp
mov
adc
fwait
add
shrl
popf
push
cmp
sub
sbb
imul
fcoml
mov
into
in
inc
rclb
mov
fistl
lds
xchg
arpl
je
add
adc
push
int3
push
xlat
js
jo
dec
push
ds
xor
insb
push
add
push
fstl
xor
adc
or
popa
leave
dec
or
test
add
push
mov
dec
dec
bound
and
and
call
popf
mov
sbb
out
enter
jge
cli
lea
jp
pop
or
leave
push
ds
aam
loop
iret
shr
mov
or
xchg
push
push
cwtl
movsb
lret
mov
or
jne
jae
mov
mov
and
pushf
mov
jno
jne
pusha
dec
add
pop
adc
lds
inc
incl
ret
xor
or
stos
adc
and
cmpsb
test
push
dec
jo
pop
xor
lea
cmpb
lock
add
xchg
add
or
add
xchg
js
xchg
jne
imul
or
and
xor
movsb
in
mov
lcall
jmp
and
nop
les
fcmovbe
imul
sub
jnp
and
or
xor
adc
xor
and
jmp
or
adc
sar
out
data16
add
and
and
sbb
sub
cmp
push
call
adcl
pop
daa
aas
inc
nop
cmp
jne
xor
mov
jmp
cmp
jle
js
inc
mov
in
xchg
push
adc
push
in
movl
ret
test
fwait
ret
adc
adc
sbb
mov
push
xchg
lret
push
xchg
add
add
ret
add
cmp
cwtl
xor
xlat
mov
sub
es
dec
inc
and
inc
inc
sbb
or
ficoml
cmp
xchg
add
scas
and
ret
cld
ja
lcall
das
sbb
aam
add
mov
adc
scas
add
adc
je
or
sbb
fiadds
dec
cmp
out
pop
lret
and
enter
dec
or
mov
cltd
lock
fiaddl
nop
inc
jb
pop
lds
psrad
and
and
aam
cmp
jbe
loope
adc
inc
push
add
adc
pusha
sub
mov
sbb
orl
push
scas
dec
jecxz
adc
scas
lds
cmp
je
push
and
mov
add
sub
adc
cmp
out
cmp
dec
call
push
clc
ss
push
jne
add
dec
xchg
not
sub
add
rorb
sbb
test
dec
push
ret
gs
and
push
je
sub
jne
daa
popa
adc
inc
cmp
push
mov
sbb
pop
cmp
jnp
and
aas
test
and
movsb
mov
cmp
add
sub
xchg
sub
mov
shrl
adc
push
and
xlat
xor
lock
popa
sub
xchg
mov
adc
je
sbb
dec
or
xor
je
sarb
std
sbb
push
repz
insb
js
cmp
add
stos
adcb
and
cli
std
dec
pop
push
push
idivb
ds
lea
pushf
and
add
jmp
imul
sbb
call
dec
pusha
iret
lods
sbbl
xor
dec
incl
inc
sbb
shlb
add
xchg
sbb
mov
outsl
sbbb
add
lods
mov
shlb
or
aam
bound
lods
sbbb
ret
push
mov
add
xchg
rorl
dec
pop
insb
cmp
pushf
fs
jbe
xor
dec
inc
sbb
jle
adc
inc
add
shr
cmp
or
dec
aad
mov
dec
add
and
jp
or
dec
ds
mov
test
loopne
dec
add
push
aaa
movsl
cmp
and
push
sbb
repz
inc
adc
xor
dec
and
inc
xchg
or
dec
iret
or
ja
aas
rolb
add
mov
xchg
out
in
sub
bnd
push
pop
push
mov
cmp
inc
dec
clc
xor
adc
and
flds
ss
cmp
add
inc
fcmovu
cmp
filds
push
jbe
adc
nop
and
clc
or
cmpb
cmpsl
cmp
push
sub
mov
rorl
jno
shlb
and
cmp
cmp
adc
add
adc
adc
jo
sub
inc
ljmp
or
mov
loopne
movsl
add
jge
iret
pop
dec
cmp
pop
and
sbb
jp
jge
jne
sbb
mov
test
lahf
push
aaa
mov
cmp
andl
and
ds
mov
adc
dec
xor
add
jnp
rolb
inc
cmp
sar
and
inc
dec
ret
push
xor
jno
push
adc
loopne
xchg
pop
sub
push
lret
push
sub
mov
gs
loope
inc
pushf
push
test
aaa
dec
sarl
xchg
lock
adc
xor
dec
xor
xor
test
jne
mov
nop
mov
add
sbb
or
cmp
sub
sub
or
lock
push
pop
pusha
ret
inc
bound
cmp
and
in
je
cmp
shlb
aas
jbe
fnstcw
dec
sub
dec
cmp
jo
sbb
jnp
gs
rcll
and
movsb
rolb
inc
adc
pop
test
mov
cltd
loopne
lahf
xor
rclb
jg
notl
sub
sbb
popa
cmp
jecxz
pop
jg
cmp
mov
and
cmpsl
or
mov
pushf
xor
sbb
or
ret
push
or
mov
fs
or
ret
adcb
mov
fcoml
xor
and
push
adc
jl
add
popf
mov
ljmp
mov
sub
dec
add
push
push
mov
xor
dec
cmpsl
test
stos
inc
pop
bound
adc
in
or
aaa
addr16
shll
fs
cmp
or
add
jl
jp
mov
and
sub
hlt
dec
sbb
arpl
ja
cwtl
add
int
push
and
xchg
fisubl
popf
add
or
inc
sub
and
add
cltd
sbb
cmpl
sub
sbb
mov
jecxz
pop
insb
push
dec
dec
les
or
mov
call
lea
xchg
sbb
ror
pop
xor
hlt
push
lret
shlb
pop
pop
sbb
xchg
cmp
push
inc
inc
xor
pop
dec
push
fistpll
mov
or
jg
push
andb
add
cwtl
test
mov
mov
les
mov
fiaddl
and
and
sbb
dec
dec
mov
movsl
add
pushf
inc
mov
dec
sbb
sbb
mov
jae
or
out
pop
aad
push
xchg
cmp
xchg
xlat
into
js
sub
pusha
hlt
les
push
aas
pop
push
insb
xchg
cli
aaa
aaa
sbb
dec
push
je
sub
je
xchg
cs
je
cmp
inc
movsl
mov
inc
mov
out
and
insb
push
sub
mov
push
push
adc
test
or
shlb
or
pop
std
ret
cmp
jae
jg
push
leave
enter
jle,pt
cmpsl
jp
cmp
inc
adc
xor
sub
push
xchg
loope
or
sbb
mov
sbb
xchg
movsb
and
sbb
add
mov
dec
push
mov
push
jp
mov
push
pop
aad
inc
rolb
mov
jo
dec
add
out
pop
je
jbe
arpl
or
ljmp
gs
adc
stos
shlb
push
adc
add
push
je
fistpll
pop
flds
popa
sbb
jo
fiadds
addb
stc
push
adc
ret
mov
popf
cmp
xor
je
push
push
dec
sub
js
aam
lods
and
mov
push
fsubrl
mov
ja
fmull
push
je
push
ds
into
lahf
or
imul
pop
negl
push
adc
xchg
or
jmp
mov
sub
les
je
ror
push
fisubs
add
lahf
das
dec
mov
inc
adc
sarb
sbb
fisubrl
mov
jmp
das
sbb
jbe
out
mov
sbb
int
pop
fdivrs
or
and
pop
jo
out
in
orb
adcl
dec
cwtl
mov
lret
or
add
push
call
out
adc
pop
rcl
and
in
and
push
arpl
cmp
mov
lds
xchg
and
push
and
xchg
pop
or
test
mov
lods
push
push
mov
mov
orl
fdivr
fisubl
or
sbb
mov
lret
push
adc
aas
test
push
movsb
inc
js
scas
jmp
jo
and
xchg
sub
mov
mov
sbb
adc
jle
mov
push
ret
sub
mov
movsl
repnz
or
inc
into
cmp
mov
cwtl
jne
andb
outsb
xchg
cwtl
movsl
or
pop
add
push
add
jbe
andb
add
sbb
nop
adc
int
add
or
hlt
add
and
mov
jp
push
dec
push
lock
test
xor
scas
dec
add
or
add
jnp
adc
and
xor
nop
cmp
aad
and
add
and
inc
dec
jg
sbb
test
test
fadd
adc
xlat
pop
add
add
adc
push
rcr
push
fdiv
das
popa
icebp
pusha
popa
jge
mov
jo
mov
jle
insl
loopne
adc
in
xor
cmp
popa
cwtl
shll
sbb
sbb
sbb
mov
inc
mov
mov
decl
jl
sbb
or
and
mov
jbe
mov
cmp
add
sbb
hlt
sbb
push
cmp
add
aad
imul
arpl
xorb
adc
pushf
sub
xchg
mov
push
inc
fs
lock
outsb
mov
sbb
imul
sbb
dec
pop
dec
insl
and
pop
cmp
add
in
sub
outsb
add
pop
ret
in
loopne
inc
call
jne
push
fidivrs
addl
jo
sbb
jmp
add
jmp
arpl
cmp
cmp
sbb
push
incb
iret
and
sbb
sub
or
js
jae
push
cmp
jne
cmp
sarb
fs
sub
mov
pop
jno
jno
mov
sti
jge
shlb
ret
push
mov
in
mov
sbb
arpl
and
scas
and
cs
jo
inc
push
aaa
sbb
and
dec
sahf
push
loop
jle
jnp
push
push
push
sbb
lods
add
xor
popa
ret
mov
push
pop
jg
cmp
je
je
cmp
mov
xor
mov
aam
xor
or
add
jo
popa
cmp
push
xchg
lret
and
adc
push
add
push
sahf
nop
or
xchg
out
adc
xchg
addb
add
cmp
and
sub
pop
pop
sub
mov
cmpl
test
popa
or
xor
js
adc
xor
das
je
mov
push
cld
sbb
cmp
inc
sub
jb
cmp
stos
mov
adc
mov
pop
push
rcll
mov
test
dec
inc
js
fisttpll
mov
idivb
sub
pushl
and
cmp
sub
xchg
adc
daa
insl
add
mov
adc
into
adc
add
xor
sub
xchg
jne
cmp
clc
sarl
jo
mov
test
xchg
jo
mov
cwtl
jo
and
cmc
cmp
inc
jge
push
cmp
jns
js
xor
clc
lret
aaa
xchg
jo
mov
cmp
inc
push
iret
fadd
pop
stos
mov
push
in
push
adc
push
fistl
add
jo
push
lock
add
clc
push
mov
test
or
inc
lcall
cs
ss
pop
aas
addr16
cmpsl
cmovg
gs
xchg
push
ds
pop
push
je
lret
and
pop
cmp
fs
and
stc
inc
push
pushf
gs
push
lods
xor
hlt
cmc
xlat
int
jge
cmp
jae
or
mov
dec
mov
jae
inc
jge
push
jmp
inc
jne
loopne
add
hlt
pop
and
in
add
pop
sbb
add
fadds
mov
test
jge
pop
movl
fisubrl
sbb
pop
loopne
mov
lahf
mov
scas
arpl
pop
pop
xchg
and
xor
loope
jp
lahf
or
nop
pusha
daa
sbb
es
ljmp
and
cmpl
jle
rol
push
cmp
rol
test
cs
pop
and
inc
clc
dec
cmp
iret
sbb
mov
push
cmpsl
fldl
stos
pusha
loopne
add
push
ret
or
xchg
sub
fs
xorl
mov
push
insl
pop
lods
ret
sbb
push
or
loopne
ljmp
xor
or
test
rcr
bound
xchg
push
add
ljmp
push
fidivs
imul
incb
add
inc
mov
jle
ds
imul
and
jne
sbb
pop
rcl
adc
push
rcll
sub
in
pop
sbbl
in
dec
rcrb
enter
cmp
jbe
pop
and
insb
popf
inc
pop
pop
jns
adc
cs
pusha
dec
imul
ljmp
es
push
mov
push
ds
add
adc
push
sub
mov
ljmp
push
or
pop
fisubrl
daa
ja
insb
frstor
ja
je
mov
cwtl
into
popa
leave
cs
push
jo
push
lea
imul
jle
or
jp
and
add
xchg
imull
ds
push
jmp
add
lock
push
data16
jmp
push
or
inc
imul
xchg
imul
jbe
cmp
xor
jnp
mov
pop
es
jge
mov
mov
push
add
mov
stos
lock
cs
or
inc
je
mov
aaa
dec
shll
in
je
popa
xchg
jg
popf
cmpsl
lcall
push
jmp
sbb
imul
outsl
or
popa
jge
rcl
add
stc
push
xor
lahf
mov
je
sub
jl
fisubl
das
je
jne
mov
push
pop
sub
out
fists
or
int3
jp
mov
and
push
outsb
sub
lock
pop
or
cmp
push
shlb
repz
stos
gs
pop
fs
shll
es
pop
repnz
pop
pop
fcmovnb
outsb
mov
sysret
aaa
mov
mov
xchg
jb
mov
push
imul
cmpsl
aam
xchg
fidivl
jecxz
push
arpl
enter
pop
loope
sub
imul
lock
adc
add
inc
or
jle
rorb
or
jmp
push
insl
stos
cwtl
mov
push
and
prefetchwt1
xor
cwtl
fiadds
xor
push
xchg
inc
push
dec
adc
icebp
jecxz
cmpsl
mov
lret
stos
push
xchg
dec
xor
leave
aam
fwait
in
imul
inc
movsb
mov
hlt
and
mov
xor
jl
xor
jbe
jnp
add
jp
movsl
or
roll
adc
pop
icebp
pop
inc
shrl
dec
push
cmp
ret
and
int3
xlat
adc
xorl
add
mov
xchg
and
sbb
and
shrb
sub
push
or
push
test
adc
scas
daa
daa
in
add
adc
outsl
sub
and
js
push
arpl
xor
popa
test
nop
cmp
into
and
sub
cmpl
mov
jg
loopne
repnz
pop
pushl
dec
inc
cmp
inc
stos
rclb
or
and
pushf
cmp
pmuludq
lcall
add
dec
jge
lock
jmp
and
dec
mov
fs
loopne
push
push
rcrb
adc
mulb
int
lcall
sub
imul
xchg
push
push
lods
fcoms
bound
push
adc
add
mov
pop
pop
loop
and
in
adc
ret
xchg
add
push
add
ret
cmp
jnp
dec
xor
outsb
or
mov
and
adc
cs
lcall
adc
dec
aas
sbb
xor
inc
cmpsl
or
test
add
push
inc
xchg
mov
xor
adc
or
sub
or
jmp
add
inc
push
sub
inc
dec
rcl
or
xor
cs
add
push
or
sub
mov
sbb
clc
and
xchg
pop
cwtl
add
push
and
pusha
icebp
push
rclb
iret
push
inc
shrl
push
inc
outsb
sbb
inc
push
ror
movsb
loop
icebp
push
ret
pop
and
xchg
insl
sub
sub
aaa
and
lods
stos
xor
les
or
mov
movsl
cmpb
test
sbb
add
inc
sbb
pop
dec
or
imul
ror
and
dec
rclb
dec
mov
jp
sub
pushl
dec
push
add
inc
add
lods
dec
sub
jnp
aam
or
pop
inc
roll
adc
inc
pop
pushf
push
lods
jb
push
or
inc
jmp
push
hlt
sbb
and
or
in
mov
mov
or
xor
loopne
push
xor
sbb
mov
inc
leave
push
leave
loop
adcb
ds
sbb
sbb
pop
stos
cmp
shlb
push
mov
rclb
mov
loop
xor
add
xchg
sub
mov
ss
add
loopne
and
pusha
mov
inc
shl
cmp
shlb
mov
pop
mov
je
inc
xor
push
scas
cmp
movsl
and
inc
cmp
push
cmp
inc
xor
cwtl
push
xor
push
movsb
testb
push
add
jo
mov
mov
pop
stos
pop
push
push
or
sbb
cli
add
pop
add
daa
fcoms
dec
push
hlt
rorb
push
mov
fistpl
dec
jne
jge
dec
add
add
or
in
lock
pop
pop
and
push
mov
sub
push
pcmpeqb
push
mov
gs
and
push
add
xchg
clc
cmp
lock
push
movb
xor
mov
test
sub
in
sbb
cmp
pop
insb
jmp
data16
push
mov
and
popa
jle
inc
fnstsw
sbb
inc
lcall
adc
adc
jnp
push
mov
mov
cmp
and
adc
mov
xor
cmc
or
xlat
pushf
push
mov
test
jmp
or
add
push
rcr
sub
pop
push
cli
push
loopne
or
cmp
or
lock
inc
mov
add
je
mov
add
and
ret
add
jno
xor
cmp
jmp
adc
dec
rorb
es
lcall
inc
and
push
mov
xchg
pop
xchg
int
enter
fdivl
cmp
pop
aaa
ss
pop
push
and
lods
adc
or
ljmp
cmp
xor
push
dec
adc
sbb
and
add
add
push
and
jbe
cmp
pop
je
push
pinsrw
rcll
or
add
adc
ret
xchg
and
rclb
xchg
imul
movl
cmp
dec
pop
xchg
lret
mov
push
pusha
or
je
push
ds
and
jbe
popa
mov
xchg
pop
xchg
adc
mov
mov
and
adc
fcomps
ret
mov
adc
jno
or
aaa
jbe
outsl
addr16
mov
enter
add
std
sub
mov
imul
pusha
cmpsl
xchg
pop
push
or
insb
rol
mov
jnp
xor
sbb
subb
or
or
and
test
cmp
loope
repz
or
sub
xchg
add
daa
mov
test
fsubrs
add
sub
and
adc
and
add
or
cmpb
adc
push
dec
rclb
stos
jmp
pop
pushf
xor
pop
or
push
paddw
and
push
adc
sbb
mov
add
lea
cwtl
xchg
push
xor
or
and
dec
roll
adc
xor
jmp
pop
adc
repz
out
xor
cmp
jbe
mov
jp
cmp
dec
dec
mov
jecxz
lcall
push
int
gs
loopne
or
pop
pop
or
jle
and
ja
xor
jns
std
add
and
dec
mov
xor
adc
cmpsb
mov
pushf
clc
mov
sti
fstpl
push
push
sarb
push
jp
sbb
cmp
cwtl
rcl
xchg
inc
hlt
adc
adc
or
inc
mov
lock
xchg
mov
ja
pop
les
pop
mov
push
test
add
mov
dec
mov
add
jge
add
and
jecxz
and
fists
popa
adc
test
enter
addr16
in
push
sbb
add
lock
insl
test
push
push
ret
push
insb
sbb
xor
add
push
dec
loope
cwtl
loop
clc
fists
jo
cltd
cmc
push
or
fldenv
pop
lahf
xor
inc
enter
jg
nop
dec
jb
and
add
dec
lea
sbb
pop
imul
scas
or
xor
jne
or
push
loopne
or
xchg
clc
xor
pusha
lds
lahf
div
inc
pop
and
sbb
jb
mov
nop
shr
or
sbb
pop
pop
aaa
and
clc
nop
lock
cmp
out
mov
jmp
sbb
jge
and
je
cmpsb
clc
inc
cmp
fdivr
xor
jg
xor
sbb
pop
or
push
je
testl
adc
dec
enter
jl
imul
mov
jmp
pop
adc
add
jp
js
mov
mov
add
add
in
and
loopne
faddl
sub
test
ljmp
adc
arpl
jae
aam
icebp
add
dec
or
mov
jmp
jp
push
inc
add
mov
push
push
rclb
les
add
and
and
mov
insl
popa
and
or
inc
add
cs
cmp
inc
sub
lcall
sbb
push
push
pop
je
or
sub
test
imul
aam
push
or
add
test
xchg
gs
and
push
xchg
or
sub
gs
mov
adc
dec
inc
punpckldq
jle
push
and
test
mov
xchg
push
or
mov
inc
cmp
enter
sub
xor
adc
daa
repnz
aam
xchg
in
push
push
or
xor
bound
jge
stos
aam
and
sub
adc
int
sub
cmp
adc
ficoms
test
add
ljmp
outsb
test
add
arpl
dec
subb
les
daa
or
ss
in
cmp
sbbl
push
inc
inc
jo
dec
inc
push
in
hlt
dec
xlat
pop
push
mov
jg
mov
jle
sub
sub
mov
aad
test
lcall
or
or
ret
int3
cs
adc
inc
sub
stos
sbb
inc
add
test
sub
xor
add
sub
jbe
jno
test
pop
clc
sbb
shll
sarb
ret
cmp
ja
fldln2
xchg
imul
xchg
clc
ss
push
in
or
jb
jge
loope
rorb
sbb
xor
fimuls
adcl
inc
mov
inc
xchg
vphadduwd
rclb
mov
fwait
xor
sbb
jne
push
or
inc
pop
ror
lahf
adc
push
push
push
cmp
fmuls
fstpt
mov
push
adc
dec
clc
or
add
daa
fwait
and
add
mov
push
sub
mov
or
idivl
push
sub
push
ss
sub
sub
testl
dec
sbb
ret
push
xor
call
jmp
adc
mov
push
mov
iret
adc
push
push
pop
daa
mov
js
cmp
pop
and
sbbl
push
mov
lea
stc
add
popf
cmpsb
ret
xor
xchg
jge
push
push
loope
subl
inc
or
add
mov
adc
adc
xchg
in
shll
shlb
lds
out
cld
jo
lcall
aad
neg
or
out
pop
aaa
sbb
es
or
cmp
pop
sub
mov
inc
test
lods
mov
jae
pop
mov
fiadds
test
sbb
cmp
inc
sbb
loop
fisubrs
fcompl
push
stos
jo
ds
and
jb
or
mov
jns
leave
or
and
inc
push
in
sub
jns
and
loopne
or
insb
popa
leave
or
or
ret
insl
adc
push
xchg
adc
lds
adc
add
dec
imul
incb
inc
mov
outsb
sbb
inc
test
in
and
push
inc
and
sti
sbb
push
push
adc
cwtl
filds
out
inc
push
cmp
and
adc
je
aaa
adc
shlb
lock
dec
mov
sbb
or
cld
dec
jmp
push
mov
orl
call
dec
adc
sub
sbb
jo
les
mov
push
sub
outsb
insl
sub
push
scas
and
addb
int
outsl
bound
mov
add
and
in
frstor
pop
xor
pop
push
sub
sbb
clc
cmp
clc
je
xor
ficoms
in
sub
adc
dec
or
jne
add
fisttpl
testb
mov
aas
repnz
cmp
cmp
inc
call
cmp
pusha
ja
orb
adc
sub
sub
mov
sub
and
sbb
pop
mov
test
lea
jo
adc
push
test
into
lods
mov
stc
dec
pop
jbe
ret
adc
xchg
adc
andb
lcall
sarb
lds
mov
mov
mov
testl
ret
test
sub
out
and
mov
sbb
push
adc
jo
cmp
push
push
xchg
iret
in
fwait
and
je
bound
test
fs
add
xchg
add
xlat
popa
sub
hlt
js
pop
mov
dec
test
pusha
push
xor
mov
fmull
out
repz
ret
or
pusha
dec
addr16
into
fisttpl
jbe
jmp
push
xor
fsts
add
clc
cli
add
sbb
push
mov
lock
sahf
push
mov
aaa
pop
movsl
jae
mov
xor
les
jbe
insb
dec
adc
jae
or
aaa
push
ret
sbb
push
test
xchg
or
mov
testb
addb
movsl
mov
rclb
movsl
inc
insb
push
or
jp
rcl
or
pop
add
xorl
or
inc
fsts
push
and
mov
lods
cmpsb
out
popf
js
dec
xor
nop
rol
pop
into
subl
push
xchg
sub
xchg
adc
lods
mov
sbb
add
mov
loop
or
mov
cmpsb
cmc
xor
test
test
mov
pusha
lds
and
and
dec
lret
pop
sub
mov
ud1
jecxz
add
insb
jmp
jns
loopne
or
in
fiadds
inc
pop
dec
jno
lods
adc
data16
lds
in
adc
mov
adc
mov
pop
xchg
jle
adc
shrl
add
sub
pop
pop
push
xor
call
add
inc
sbb
add
dec
sub
and
pop
push
shrl
push
adc
xchg
pushw
adc
push
dec
rol
ret
sbb
movb
push
dec
out
add
cmpsl
xchg
add
xor
imul
jbe
mov
sub
and
cld
push
lea
sbb
repz
push
adc
add
cmp
test
addl
push
les
xor
pop
pusha
ja
xor
lods
inc
pop
scas
stos
jg
jmp
imul
jnp
daa
lea
icebp
xor
hlt
or
cli
fs
mov
adc
orl
fisttpll
cltd
int
inc
adcl
adc
cmp
jns
sbbb
pusha
lock
inc
sbb
lea
and
push
aam
es
add
es
mov
movb
xchg
xor
ss
jne
outsb
sbb
loop
jnp
jle
adcl
adc
or
cwtl
subb
cmp
notl
pop
and
pushf
sub
mov
lods
inc
loope
popf
push
call
adcb
dec
cmp
xor
and
push
pop
iret
outsb
scas
stc
lahf
mov
loopne
sub
addr16
pop
sbb
les
sub
push
add
mov
xor
adc
and
decl
test
test
jo
add
int
add
fisttpl
cwtl
aam
push
dec
pop
shl
and
data16
test
add
push
gs
xor
pop
sub
sbb
popa
and
es
or
jmp
or
xchg
xor
ss
cmp
lea
adc
push
inc
jle
shrl
or
push
movsl
jecxz
ret
mov
adc
push
pop
jo
aas
cmpsb
mov
mov
adc
lock
rorb
into
jne
rcrb
aam
fdivr
mov
out
inc
ds
jne
cmp
add
insb
jbe
mov
and
inc
std
or
mov
sbb
popf
enter
jl
aas
stos
push
push
and
pop
lds
sub
cltd
mov
sub
adc
and
pop
jmp
jnp
and
adcb
adc
sbb
push
les
dec
lea
jno
dec
xchg
add
jge
and
jnp
popa
std
and
and
jl
enter
add
cmpb
add
pop
jg
push
jb
sub
jmp
pop
add
jg
xor
cmp
jge
testb
and
xor
movsl
add
adc
add
push
inc
adc
clc
subb
and
dec
nop
lret
xchg
call
data16
mov
fisttpll
inc
inc
cmp
jmp
and
cmp
pop
adc
inc
jmp
jmp
mov
mov
movsl
dec
add
fs
inc
inc
push
or
insl
sahf
or
lea
cmp
push
jae
mov
and
mov
inc
mov
and
mov
and
outsl
dec
ljmp
je
or
mov
pop
outsb
sbb
nop
mov
add
inc
and
jmp
cwtl
inc
push
lock
jl
ficoml
frstor
sti
or
jl
add
inc
push
rorl
and
inc
adc
shlb
aam
push
push
sbb
daa
pop
lds
xor
sbb
test
sbb
stc
push
adc
pop
push
mov
add
dec
loopne
mov
mov
dec
ret
or
sub
pop
xor
adc
or
nop
mov
hlt
inc
mov
test
add
sbb
push
jae
imul
pop
pop
push
out
and
or
test
fsts
xchg
sbb
sbb
adc
add
add
dec
jae
push
push
or
in
sub
xchg
sbb
out
fists
sbb
fsubs
xchg
loopne
lret
xor
dec
call
fbstp
xchg
pop
xchg
in
andb
adcb
fldl
push
enter
mov
icebp
sub
xchg
mov
js
add
mov
nop
bound
jbe
push
dec
cmp
roll
push
and
dec
or
sbbb
add
mov
jo
popf
divl
js
test
push
sbb
cs
push
mov
mov
and
vprotb
or
inc
pop
mov
cs
cli
push
push
or
adc
daa
add
cmp
jne
and
gs
xchg
pusha
cmp
and
pop
jnp
mov
enter
test
pusha
inc
add
bound
dec
pusha
movsb
pop
mov
loopne
jg
inc
and
loope
dec
mov
cmp
inc
xor
insb
mov
adc
mov
adc
testl
pusha
dec
lret
gs
negb
les
xchg
in
call
lret
push
sub
in
inc
stos
push
mov
clc
cmp
scas
popa
test
lea
mov
mov
sti
leave
add
add
fisttpl
mov
lahf
dec
loopne
mov
nop
movsl
sbb
fsubr
nop
cmpsl
lret
xlat
shlb
shlb
sbb
mov
lods
push
and
rolb
pop
test
clc
push
testb
imul
lods
pop
push
in
mov
loop
sarl
outsb
pop
notb
leave
cld
push
push
push
clc
mov
cltd
leave
dec
mov
mov
push
fstps
jne
xor
xchg
dec
jne
push
adc
adc
lock
sarl
shlb
mov
fcomps
push
mov
dec
sahf
idivb
clc
add
lea
sbb
lock
xor
xor
mov
test
mov
add
into
pop
mov
push
adc
pushf
cmpsb
push
xchg
pop
sbb
fsts
or
adc
movl
test
mov
sbb
ss
push
ret
jbe
or
pop
push
jmp
ret
out
sub
inc
mov
jne
push
and
sub
dec
rol
cmpsb
es
in
push
orl
sbbb
push
add
ja
sbb
sbb
xchg
push
add
add
bound
insb
push
add
je
mov
or
mov
cmp
clc
mov
outsb
xor
inc
sbb
cltd
sbb
sahf
nop
push
dec
push
insl
or
outsb
add
fldenv
cmp
pop
add
popf
and
inc
mov
adc
clc
or
pop
and
mov
add
sbb
popf
or
pop
fbld
or
or
sub
pop
cmp
js
cmp
lahf
adc
pop
mov
dec
sub
add
pop
mov
jns
aas
xchg
subl
les
mov
lock
jnp
pop
xchg
bound
xor
jno
xor
mov
je
rcrb
mov
std
es
ficoml
mov
nop
sbb
inc
mov
xchg
and
pop
leave
or
sbb
ficoml
or
xchg
dec
or
or
xchg
cltd
mov
orb
xchg
mov
mov
fimull
push
dec
enter
inc
ffreep
mov
test
rorl
jae
pop
jns
hlt
xlat
ljmp
sbb
sbb
inc
push
sub
mov
gs
push
dec
jecxz
repnz
push
mov
xor
dec
mov
inc
xchg
dec
dec
mov
loopne
or
jge
and
sbb
in
jae
jmp
and
lds
jecxz
fmulp
mov
js
and
outsb
jae
mov
adc
mov
or
pop
adc
adc
fstl
dec
sbb
jb
sahf
dec
sar
adc
cmp
or
pop
push
sbbl
bound
inc
les
sbb
mov
in
mov
sbbb
movsl
mull
popa
inc
loopne
outsb
jg
movsb
mov
loop
hlt
xor
sub
dec
push
out
ljmp
jl
xchg
ljmp
pop
sub
test
movsb
loope
adc
jmp
inc
mov
enter
dec
imul
push
packssdw
scas
xor
and
sub
insb
pop
ret
rorl
pop
push
aaa
inc
and
sbb
inc
mov
pop
shlb
int3
add
or
insl
js
scas
sub
add
xor
sub
pop
cmp
add
xorb
adc
mov
mov
dec
pop
push
imul
xlat
test
push
mov
gs
cmp
and
adc
and
int3
ret
xchg
sbb
shll
inc
or
xchg
lock
iret
push
aad
jbe
aam
mov
fstpt
and
mov
lock
mov
insl
stos
ret
push
dec
aaa
in
fcompl
sbb
add
and
ljmp
mov
and
sub
and
push
add
into
adc
mov
fucomp
in
push
cmp
shr
fstl
sub
mov
xchg
mov
and
xchg
or
xchg
xor
sub
jle
nop
outsb
mov
test
mov
pop
mov
or
or
dec
or
jb
jl
fmul
or
lret
and
sub
fwait
add
cmp
jecxz
insb
sahf
or
enter
imul
jmp
pop
shl
test
jbe
xor
mov
inc
inc
les
sbb
push
dec
and
addr16
fcmovnb
xchg
add
inc
mov
daa
pop
xchg
xchg
mov
mov
cmp
dec
sahf
lret
jg
inc
push
or
nop
jl
sbb
add
cmp
scas
mov
or
and
adc
test
mov
inc
jns
pop
or
lock
adc
sbb
out
pop
inc
add
xchg
pop
pushf
call
push
aas
adc
idivb
dec
sub
xchg
cmp
push
out
dec
pop
repnz
mov
xor
add
mov
push
jne
cmp
cmpsl
jge
aam
sbb
or
and
das
fsubr
mov
leave
cmpsb
lret
jp
movsb
push
adc
mov
dec
subl
orl
rorb
sbb
pop
xchg
jno
sbb
or
xchg
adc
in
dec
adc
inc
add
test
aaa
xor
add
mov
sub
add
fsts
dec
addl
xchg
repz
sbb
out
cmpb
inc
sub
and
mov
or
add
and
lods
mov
loopne
rorb
cmp
or
and
ss
mov
daa
pop
jmp
or
adc
jge
push
adc
in
push
cmp
data16
enter
and
jle
sub
ret
imul
shl
sbb
or
push
or
mov
inc
xchg
jo
add
xchg
cmp
repnz
mov
or
sub
mov
in
inc
mov
dec
pop
and
ret
loop
mov
orl
push
dec
sbb
pop
sbb
in
dec
and
ret
inc
pop
dec
testl
mov
jmp
jmp
pusha
leave
rcrb
ss
popf
dec
adc
cmpsl
sub
pop
pop
pop
out
decb
push
add
aad
ret
sbb
mov
push
ret
jne
xchg
popf
lods
movsl
inc
or
adc
inc
add
and
push
loopne
jno
or
mov
mov
or
xor
lods
mov
pop
mov
test
lds
rorl
mov
add
inc
cwtl
add
adc
shlb
xor
sbb
mov
add
mov
outsb
clc
test
add
cmp
cmp
sub
push
inc
dec
test
cmp
push
lcall
push
test
adc
inc
mov
mov
lock
push
test
popf
dec
push
mov
push
repz
adc
sbb
or
sub
adc
sbb
mov
jp
dec
popa
sbb
push
cltd
pop
add
sbb
pushf
xchg
and
inc
pop
or
test
in
mov
pop
dec
loopne
adc
inc
push
lods
and
mov
sbb
dec
outsb
and
xlat
xor
sahf
aad
and
jl
sbb
std
jge
xchg
testb
movsl
and
cmp
jle
ficoml
mov
test
dec
jl
sub
pop
xchg
inc
xor
aad
push
jo
loope
or
jge
sbb
lahf
outsl
jmp
pop
fcoms
mov
sarl
push
add
pushf
lods
jae
jmp
xchg
outsl
aam
aaa
ret
mov
int3
inc
sbb
pop
xchg
or
add
mov
add
add
push
cmp
loopne
outsb
shlb
add
or
movsb
pop
cmp
pop
and
xor
repnz
jge
mov
push
fsubrs
push
and
xchg
cltd
fs
fstl
addb
insl
and
inc
fdivrs
loop
ss
cld
inc
ret
mov
in
xchg
add
mov
or
xchg
or
jmp
lret
lret
incb
jno
xchg
pop
leave
andl
int3
add
test
adc
mov
lea
push
cmp
inc
imul
pop
addb
mov
aam
push
xchg
add
or
dec
pop
sbb
adc
mov
fdivs
mov
dec
dec
or
xchg
push
pop
adc
xchg
fwait
cmpsl
adc
mov
repnz
or
pop
movb
push
fwait
sbb
daa
stc
add
int3
xchg
je
mov
sbb
bnd
mov
adc
les
cmp
push
lea
push
or
scas
push
push
sbb
ret
movsb
add
or
xor
xchg
fucom
pop
sbb
xchg
sbb
cmpsb
cli
jmp
jmp
add
test
or
or
jno
in
jmp
push
repz
pop
sub
in
push
sbb
adc
mov
sbb
inc
orl
lcall
xorb
cltd
xor
aaa
pushl
add
or
cli
int
mov
sbb
movsl
out
add
andl
outsl
add
add
aas
ja
inc
adc
mov
dec
lods
cmp
icebp
cmp
fs
sub
sub
add
and
pusha
or
xchg
movsb
mov
adc
inc
js
push
cmpl
add
lds
cmp
inc
test
cvttps2pi
jmp
inc
pop
int
inc
add
xor
or
adc
push
or
faddl
rcll
bound
or
inc
imul
pop
and
nop
loopne
arpl
jecxz
add
jge
loop
jbe
int
cs
js
jle
or
loope
int
and
xor
shrl
cmpsl
and
adc
push
sub
sbb
sub
jle
xorb
leave
test
sbb
mov
inc
jo
stos
mov
lods
leave
or
mov
sub
and
push
movsl
and
int
lahf
pop
adc
add
or
or
adc
into
cwtl
xor
add
xor
and
dec
cwtl
aad
mov
mov
and
inc
aaa
xor
mov
mov
ret
adc
or
xor
test
sbb
dec
fwait
dec
or
ret
push
cwtl
lock
mov
inc
out
mov
mov
sub
fcomps
iret
sbb
rcrl
stc
or
hlt
adc
dec
js
pop
out
addr16
jo
mov
in
mov
jl
test
es
xor
and
sbb
mov
adc
movups
pop
push
or
jge
sub
sbb
add
add
add
jne
cmp
or
and
lock
sbb
pop
push
mov
jmp
push
xchg
sub
add
push
fimuls
sbb
xchg
mov
pusha
jl
inc
inc
mov
or
cmc
jae
hlt
push
jmp
or
inc
mov
fisubl
sub
shlb
pop
or
dec
push
xchg
jbe
or
xorl
dec
add
int3
adc
xchg
add
and
lea
iret
xor
add
cmpxchg
sbb
call
clc
sub
dec
in
jae
es
or
inc
pop
cmp
loopne
xor
xorb
inc
mov
jecxz
cltd
sbb
sub
pusha
lods
jbe
outsb
mov
and
clc
add
mov
add
jg
add
xor
push
mov
mov
add
fmul
cmp
inc
or
sub
or
gs
js
xor
push
sub
sti
mov
mov
mov
add
push
movsb
or
and
or
dec
imul
cwtl
xor
xor
pop
or
movsl
and
mov
pop
sbb
and
push
stos
in
pusha
nop
testl
cmp
cmp
clc
push
jecxz
cmpsb
push
push
movsb
lods
mov
mov
jb
inc
push
clc
sti
jb
lret
out
das
movsb
ds
dec
mov
testl
push
add
in
inc
mull
lock
push
sbbl
fadds
stc
das
or
cli
arpl
loop
repnz
xchg
mov
pop
push
sbb
fstpt
cltd
fs
insb
movsl
sbb
daa
jmp
push
adc
push
outsb
imul
enter
push
sti
fldt
pop
mov
bnd
fsubl
das
push
fwait
movsl
xchg
push
hlt
rcl
lcall
or
add
or
add
movsb
cmp
andb
repz
xor
loopne
jo
or
mov
pop
sub
testl
aad
adc
pop
or
mov
push
inc
mov
fisubl
hlt
dec
in
fwait
call
and
fsubr
push
jmp
mov
adc
cmp
mov
sahf
or
cmp
xor
pushf
ja
mov
sbb
icebp
pop
cld
or
loopne
mov
cs
xor
push
sub
test
fimull
pop
lods
adc
and
jbe
test
push
mov
sub
rorl
xchg
aam
and
push
xor
jns
je
sbb
mulb
aam
fldt
cmp
fidivrl
mov
jg
sbb
or
or
or
adc
xchg
mov
adc
and
cmpsb
push
fimuls
xor
clc
xchg
ds
jge
inc
fisubl
lea
xor
add
jg
stos
adc
mov
jne
and
test
lods
in
pop
out
sysenter
pop
mov
or
xor
mul
xchg
xor
aaa
inc
mov
in
dec
push
pop
mov
outsl
push
sub
scas
movsb
icebp
lret
es
adc
mov
loopne
outsb
add
nop
adc
sub
sbb
loope
push
dec
dec
andl
inc
addr16
add
mov
add
pop
xor
cli
sahf
lret
xor
cmp
adc
call
lods
jns
push
sti
push
pusha
or
pop
inc
dec
jae
js
cmp
or
push
or
ds
mov
cmp
pop
xchg
adc
lods
insl
mov
rolb
aad
add
pop
setne
movl
in
unpckhps
dec
mov
sbb
es
fs
aad
out
mov
test
or
ds
jo
and
jl
jne
fidivl
and
test
cmp
cltd
cld
sub
jmp
push
push
pop
notl
push
pop
pop
mov
int3
jge
inc
decl
xor
jge
xlat
mov
and
mov
fnsave
pusha
mov
jl
das
dec
cmpsl
call
arpl
addr16
push
out
xlat
test
mov
xor
mull
movsl
sti
jne
push
mov
shlb
pop
stos
roll
push
mov
mov
pop
adc
sbb
inc
arpl
sbb
mov
xchg
mov
mov
test
push
xchg
pop
adc
inc
push
hlt
add
clc
sbb
ret
inc
stos
cmp
push
pop
xchg
jae
jns
ret
sbb
xchg
cmp
inc
dec
sbb
enter
mov
shll
sub
xchg
and
ljmp
mov
cmp
inc
loopne
cli
mov
or
stos
mov
xor
and
mov
ja
cmc
xor
or
outsb
movsl
roll
mov
dec
dec
push
adc
cmp
clc
jle
call
lret
jbe
adc
push
and
and
add
pop
inc
loope
mov
jl
mov
call
mov
sub
imul
fsubrs
inc
mov
mov
adc
fs
pop
icebp
push
or
test
adc
adc
cmp
iret
or
add
cs
in
adc
sbb
sbb
and
bnd
or
or
xorl
lea
in
imul
jne
jmp
lcall
jge
push
lods
outsl
xchg
cmc
jne
inc
push
movl
je
into
mov
dec
pushf
inc
inc
inc
ret
jne
scas
sbb
fnstenv
das
pop
insl
dec
xsaveopt
xbegin
mov
xor
mov
mov
and
ds
jnp
out
sbb
xchg
test
pop
adc
mov
adc
pop
pcmpeqb
push
outsb
add
jp
ret
jmp
mov
inc
jne
mov
jbe
incl
cwtl
sub
dec
mov
add
mov
and
arpl
lods
inc
xchg
cwtl
cld
push
fsubp
xchg
nop
xchg
cs
out
lods
fcompl
cmp
and
les
nop
ud2
lret
add
push
and
aaa
aam
incb
lret
sbb
pusha
push
and
test
rclb
fisttpll
inc
cmp
ret
es
cmp
push
push
push
enter
es
adc
push
addr16
cld
push
mov
mov
enter
inc
mov
add
dec
rolb
testl
push
push
les
or
or
ret
sbb
lock
dec
adc
cli
mov
add
or
xchg
lock
push
sbbb
es
nop
imulb
ret
dec
add
add
add
or
adc
mov
xchg
test
jg
lds
flds
xor
dec
adc
cmp
lea
cmpb
and
dec
negl
xor
cmpsb
test
lods
or
dec
adc
inc
dec
cmp
jne
or
push
dec
adc
roll
insl
std
adc
jecxz
cmp
or
sub
pop
adc
sbb
sbb
lcall
nop
xchg
mov
js
shll
pop
add
int
test
les
inc
adc
inc
add
jb
mulb
push
or
lods
sub
xor
sbb
add
mov
xchg
adc
inc
mov
iret
mov
mov
add
fmul
mov
ss
adc
scas
lods
sub
jle
cmpl
mov
xor
cmp
pusha
lds
lods
cmc
repz
out
pop
push
hlt
mov
mov
in
adc
xchg
and
and
sti
int
push
jmp
mov
iret
mov
arpl
push
adc
stos
fldcw
pop
mov
dec
pop
jmp
fldl
adc
sbb
or
dec
scas
or
imul
ret
test
sub
push
lock
je
outsb
mov
fs
outsl
call
or
fdivl
add
jl
dec
loopne
movsl
mov
adc
mov
movsb
or
mov
lds
frstor
mov
repnz
pusha
inc
mov
and
sbb
inc
call
adc
ret
add
cmp
outsb
and
sbb
ja
push
push
mov
loope
lea
ljmp
cmpsb
jecxz
cli
rcrb
or
les
shlb
out
loopne
mov
and
test
mov
lods
sub
mov
jmp
test
dec
sub
jno
and
gs
popl
adc
inc
pop
pop
or
cld
inc
add
sub
lret
dec
xor
add
shll
push
jns
incl
mov
sbb
popa
hlt
sub
ret
dec
inc
xchg
adc
sub
andl
dec
sti
bswap
sub
mov
lar
mov
clc
jl
pop
test
sub
pop
mov
das
adc
movsb
popa
sub
sub
loope
add
int3
adc
adc
xchg
rorb
xor
adc
push
mov
pop
sbb
push
add
and
cmpsb
movsb
pusha
cmp
loop
enter
adc
xchg
sbb
mov
adc
or
push
push
inc
daa
pop
inc
fstl
xor
or
push
sbb
push
mov
jb
ljmp
mov
or
les
orb
mov
mov
in
cmp
or
push
int
fmull
nop
inc
or
repnz
outsb
dec
lock
inc
ja
fwait
bound
mov
xor
mov
js
cltd
mov
xchg
and
call
jmp
xor
sub
mov
mov
inc
leave
sbb
sbb
hlt
nop
xchg
jo
enter
dec
popa
adc
in
repnz
bound
addl
ljmp
push
test
add
imul
cmpsb
dec
push
push
inc
jp
gs
push
addl
stos
and
sbb
push
push
jb
sub
jp
add
mov
cs
pusha
data16
adc
dec
lock
je
mov
outsb
lock
ret
mov
adc
add
sub
in
push
sbb
nop
and
clc
dec
mov
and
mov
pop
nop
gs
outsl
push
lds
fistpl
dec
mov
pop
adc
xor
jne
pop
adc
cmp
adc
test
les
lea
and
or
fs
call
or
mov
mov
sub
adc
es
into
sti
add
es
add
adc
ljmp
rcrl
invd
jl
orb
les
mov
jbe
add
xchg
add
shlb
jl
push
movsb
pop
and
dec
aad
iret
dec
pop
lahf
push
cmp
xor
lods
sub
pop
pop
roll
push
fisubrl
push
add
outsb
sub
roll
pop
shrl
mov
movl
push
aas
add
cmp
outsb
add
rcrl
rol
js
andl
jmp
adc
rcrl
and
popa
push
mov
add
pop
imul
sbb
xchg
cmpsb
aad
inc
js
daa
popf
cmovb
pop
ret
xchg
xchg
and
aas
xor
or
cmp
insb
loope
push
je
push
movsl
pop
mov
pop
push
pop
cmp
or
or
push
rolb
adc
sbbl
in
fcompl
pop
sbb
jne
scas
and
adc
cmpb
or
push
andb
inc
sti
inc
sbb
push
or
pop
fs
add
pop
xor
jl
test
pop
stos
or
std
and
or
push
mov
or
cmp
sub
rorl
icebp
mov
into
fiaddl
jge
mov
add
mov
int
jge
sbb
xchg
sub
dec
xchg
into
les
fldl
fstps
and
fstpl
insl
imul
mov
out
fisubrl
mov
adc
add
gs
int3
dec
fmuls
mov
aaa
lock
and
outsl
addr16
cmp
pop
mov
loopne
inc
fmull
notb
mov
es
pop
sub
sub
fistl
inc
fcompl
iret
in
out
sbb
mov
add
xor
lods
lock
aaa
cld
int
fcomps
xor
mov
xorl
xchg
adc
lret
lods
adc
pusha
mov
rolb
push
ret
insl
lock
or
or
loope
add
lcall
mov
jno
mov
jne
ljmp
clc
fimull
call
xchg
push
mov
addb
scas
mov
or
mov
mov
mov
lea
je
sub
mov
push
stc
rcr
adc
inc
shl
jbe
adc
xchg
xchg
sbb
push
aaa
or
lea
adc
xor
mov
call
in
lods
je
ds
push
lods
dec
dec
addr16
dec
out
fs
dec
scas
rcr
jb
mov
push
pop
js
fisttpl
mov
cmp
adc
cmp
je
mov
pushf
or
dec
movsl
jb
mov
cmc
inc
add
movsb
push
enter
mov
ljmp
push
add
pop
jb
add
je
push
xchg
xchg
int3
dec
subl
sbb
ja
pushf
mov
jle
fistl
adcb
xchg
dec
adc
adc
int3
sbb
movsl
adc
or
test
in
nop
push
icebp
lcall
adc
out
pop
xchg
jnp
xor
mov
sub
sbb
push
lret
out
aas
int3
fnsave
scas
push
pop
push
sub
cmp
in
out
in
cmp
std
test
dec
int3
pop
test
push
pop
jbe
dec
fistpl
add
push
dec
or
das
cli
fcmove
mov
pop
test
adc
xor
outsb
xchg
bound
enter
or
enter
or
or
cmc
add
int3
fisttpll
jnp
insl
jmp
push
dec
cltd
adcb
shlb
test
pusha
sub
jp
fimull
cmp
sbb
mov
pusha
or
sarb
add
mov
pushf
daa
test
fistl
mov
pop
mov
add
push
push
jne
pop
in
or
ds
mov
sub
or
pop
mov
inc
or
adc
cmpsl
adc
add
cmp
cwtl
mov
lcall
mov
sbb
mov
mov
or
sub
outsb
daa
in
add
dec
mov
jne
sbb
lock
stc
or
sahf
push
punpckhdq
jbe
and
or
fcoms
push
out
or
push
outsb
sbb
inc
sbb
imul
mov
cltd
hlt
dec
jne
addb
add
add
and
ljmp
cmp
daa
and
cmp
adc
add
or
xchg
mov
loopne
repz
in
fadds
push
push
adc
jge
cmp
adc
rorl
or
ret
sbb
push
cmp
jo
test
sbb
ret
gs
dec
push
add
add
mov
and
fldl
xchg
popa
sbb
add
cmpsl
sbbb
xor
jg
jmp
mov
jmp
lods
rclb
fcompl
in
imul
and
hlt
mov
jle
push
shrb
xor
push
outsb
mov
test
mov
inc
fcoml
addb
add
rclb
inc
adc
pop
push
push
pop
pop
fists
les
movsl
enter
sub
gs
insl
and
pop
data16
and
in
js
push
pop
inc
sub
arpl
jp
mov
xor
cmp
inc
or
add
lea
aad
out
mov
pop
or
dec
mov
lret
pop
nop
orb
incl
add
andb
cs
cmp
inc
and
je
add
shl
mov
lods
imul
mov
sub
mov
lods
mov
adc
mov
les
and
inc
cwtl
add
iret
add
insb
push
das
jo
xor
mov
mov
sub
jge
jp
and
cmp
and
dec
dec
in
lock
inc
enter
adc
push
fdivl
jmp
cmp
and
sbb
in
jmp
sbb
xchg
mov
int3
mov
mov
sbb
fcoml
cmp
in
mov
ret
add
dec
inc
dec
adc
mov
dec
and
rcl
adc
lea
cmpsl
jnp
adc
or
loope
shrb
arpl
fs
cld
pop
sbb
push
fisttpll
cmp
out
scas
add
dec
inc
lea
mov
cmp
mov
ret
push
push
ror
por
dec
loope
pop
push
or
sahf
push
push
jo
push
inc
popf
mov
sbbb
subl
jo
push
adc
sub
mov
sbb
pop
xor
cmp
cmc
call
dec
out
es
adc
ja,pn
shlb
ret
rep
inc
test
aad
pop
xor
shll
jge
push
xchg
dec
xchg
push
movsl
pop
hlt
inc
inc
stos
push
and
nop
xor
cmp
add
inc
pop
xchg
pusha
adc
mov
jp
adc
mov
shll
fs
mov
or
test
cmp
pop
dec
je
pusha
clc
cmp
test
push
testl
or
cwtl
rolb
jge
jecxz
jbe
clc
and
and
dec
ret
jmp
aam
and
out
test
adc
or
xchg
sbb
xor
sbb
aam
pop
bound
sbb
jne
or
out
hlt
add
mov
les
sahf
jne
scas
mov
dec
test
scas
movsb
xorb
adc
andb
adc
or
shll
add
dec
push
push
and
add
fs
pop
ret
push
std
lea
push
jecxz
daa
sbb
addb
push
add
sub
sbb
testb
and
js
push
cmc
mov
add
rorb
mov
xor
lock
xorb
xor
test
out
sbb
and
sub
jg
orb
cmc
in
push
cmp
sbb
sbb
test
incl
pop
pop
add
xor
or
inc
loopne
mov
cmc
add
into
sbb
lods
loop
jge
mov
push
push
enter
pop
lahf
jp
ljmp
mov
ljmp
bnd
nop
or
mov
loop
test
lods
out
fisubl
and
pop
mov
cli
inc
sbb
xchg
mov
adc
out
mov
in
dec
call
dec
loope
jne
or
and
or
jbe
jo
xor
icebp
xor
push
sub
jecxz
mov
outsl
dec
xor
inc
sti
adc
add
cmp
jmp
adc
jl
jno
dec
and
lods
mov
std
movsb
testl
popa
std
test
and
or
jns
popf
rcr
sub
rcr
jl
lahf
sbb
iret
mov
mov
push
mov
inc
adcb
or
inc
push
or
test
inc
inc
enter
call
cltd
adcl
and
outsl
loopne
daa
dec
add
sahf
jl
xor
inc
dec
sti
cmp
push
cmp
cs
cmp
fistps
mov
sbb
lock
outsb
add
pop
sahf
sbb
add
push
shll
inc
cmc
mov
inc
cmp
lods
inc
adc
add
jmp
push
pop
xchg
ss
jo
mov
lahf
push
add
or
cmpb
sahf
push
adcl
add
mov
and
adc
or
sub
in
jmp
ds
loope
testl
fsubr
mov
sbb
cs
dec
or
sub
mov
and
aas
movsb
dec
or
mov
pop
xor
ficoml
in
nop
add
push
add
in
aas
loopne
pop
dec
inc
push
cmc
or
fcmove
shlb
dec
aas
in
inc
popa
and
cwtl
dec
mov
pop
inc
mov
in
mov
bound
cmp
jl
sub
pusha
cmp
mov
jg
not
push
loopne
mov
and
push
aas
mov
lock
ds
mov
test
dec
pusha
scas
popa
lods
push
dec
mov
cmp
mov
inc
jl
xchg
xchg
dec
inc
mov
dec
dec
cmp
in
test
aas
jmp
sti
adc
and
cmp
xchg
xchg
fnstenv
push
cmp
fs
out
arpl
push
dec
mov
daa
insl
ds
in
in
bound
pop
rcrb
inc
xchg
pop
and
jno
jbe
pop
mov
and
in
dec
ret
test
popf
push
lea
fisubrl
call
outsl
mov
cmp
pop
in
lret
mov
adc
dec
mov
in
inc
lahf
mov
sbb
cmp
fadds
mov
jp
or
pop
loopne
dec
out
sub
xchg
mov
outsl
mov
js
and
iret
inc
inc
insb
leave
in
in
jg
jmp
enter
jo
jge
test
rorb
nop
cltd
pop
pop
mov
lahf
jl
pusha
je
int3
fnstenv
imul
pop
xchg
pusha
cltd
mov
add
push
inc
pop
call
in
inc
inc
dec
cs
pop
leave
test
dec
and
inc
add
in
inc
pop
cmp
push
cs
or
mov
jne
push
repnz
sarl
mov
and
inc
jg
inc
pop
and
stos
add
jg
je
imul
mov
mov
nop
popa
or
inc
aas
pop
push
xor
test
pop
das
adc
dec
or
mov
pop
or
adc
ss
pusha
pop
outsl
adc
shlb
mov
xchg
int3
inc
sar
shlb
mov
jmp
jo
js
daa
sbb
dec
dec
addb
inc
jg
mov
sub
call
pop
adc
cmp
mov
and
loopne
inc
rcll
cmp
aas
rorb
jbe
leave
lock
das
dec
add
mov
pop
dec
in
rcrb
aam
cmpsb
push
into
jg
dec
sbb
cmp
imull
dec
pusha
ja
imul
and
jg
popl
jmp
inc
out
bound
sbb
movsl
movsl
out
sub
enter
movsl
les
adc
mov
pop
add
dec
andl
cwtl
dec
jg
imul
jg
cmp
aas
test
adc
xchg
sbb
int3
aas
fcompl
punpcklbw
cs
cmp
aas
pusha
jg
mov
sub
inc
fcoms
in
mov
add
scas
test
out
mov
daa
daa
cwtl
mov
out
pop
xchg
dec
jo
cwtl
pop
nop
psubusb
push
xor
daa
sub
add
dec
aas
mov
cmpb
enter
sbb
cld
clc
add
lods
cmc
or
insb
pusha
das
pusha
jne
jne
outsl
push
mov
mov
repz
imul
pop
and
adc
pop
sbb
pop
sub
rol
sub
add
ja
mov
xor
nop
add
dec
pop
jo
cmp
adc
add
push
push
ss
add
clc
outsl
enter
or
sbb
cmp
fadds
je
cmp
mov
adc
push
fs
jl
dec
nop
mov
push
mov
inc
push
les
push
push
sbb
dec
sub
dec
sbb
out
sbb
aas
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
enter
in
sbb
stos
bound
inc
sti
and
or
or
jns
enter
ror
xlat
lods
mov
scas
cmp
xchg
push
pop
lock
and
scas
fbstp
lahf
inc
int3
adc
into
lahf
call
pop
fsubrs
push
lds
push
pop
xchg
pop
and
ds
push
nop
loopne
mov
dec
sbb
arpl
cmp
pop
pop
cmp
scas
cwtl
addps
add
mov
adc
out
sub
mov
inc
mov
mov
call
xchg
dec
sbb
je
push
popf
test
dec
dec
cmp
pusha
push
mov
popf
mov
push
lods
add
cmpl
lock
xor
mov
mov
pop
sbb
rcrl
sbb
jmp
fiaddl
loopne
push
rol
cmp
call
int3
cli
mov
xchg
xor
out
and
adc
jle
sub
mov
mov
cmp
outsl
push
mov
outsl
jg
outsb
inc
push
add
xor
mov
adcb
add
mov
je
mov
shll
push
push
insl
fsubrl
push
jle
int3
mov
cmp
jb
mov
test
bound
das
loopne
int3
pop
flds
and
inc
rorl
sbb
push
inc
or
pop
jg
test
jle
lods
push
clc
or
jg
mov
mov
pop
incl
add
cmpsl
adc
add
mov
in
lret
das
sbb
mov
adc
cmp
xorb
adc
mov
dec
cmpsl
pop
xorb
rorb
repnz
mov
imul
and
nop
aas
inc
add
addb
and
pop
mov
cmp
aas
pop
pop
fisubl
cld
push
dec
push
and
clc
mov
push
push
pop
mov
nop
fsts
or
mov
pop
sbb
fsubl
cwtl
sub
pushf
lahf
out
mov
jmp
lcall
adc
add
mov
in
fcomps
sub
push
cmp
mov
and
adc
ret
sarb
push
rolb
inc
pop
addr16
inc
call
pop
xor
inc
xchg
lock
gs
mov
inc
cwtl
xchg
cld
xchg
pop
mov
jmp
pop
xor
loopne
test
popa
aas
xchg
dec
mov
sbb
insb
jl
pusha
out
adc
pop
mov
fdivr
push
xchg
mov
inc
sub
dec
push
bound
adc
daa
mov
mov
mov
mov
adc
adc
cmp
arpl
js
lods
pop
add
dec
aas
call
movsb
enter
fcmovne
sar
mov
cmp
dec
repz
pop
xchg
jle
add
sti
inc
dec
sti
xor
roll
sub
nop
xchg
cmp
je
mov
enter
in
sub
fs
fdivr
pop
sbb
leave
mov
scas
push
sub
fwait
xor
sub
dec
addb
cmp
push
cwtl
xor
fs
testb
sbb
idiv
aam
pop
sbb
add
add
add
lds
sbb
les
sub
aaa
cmp
js
pop
cmp
add
nop
add
push
roll
add
pop
add
in
push
ss
aaa
rcrb
or
sbb
pusha
pop
dec
add
les
pop
fmuls
fsubrp
pop
fsubr
leave
cmp
hlt
adc
or
push
pop
es
shlb
in
test
and
sub
mov
and
cmp
mov
and
mov
mov
xor
fsubs
add
inc
xor
aas
sub
pop
mov
push
js
mov
enter
adcl
sub
movsl
es
cmp
outsl
enter
in
xchg
loopne
rorb
mov
roll
jg
adc
or
xchg
mov
mov
ds
sub
xchg
jbe
sub
mov
adc
lock
xchg
jne
mov
in
enter
loope
pop
mov
inc
mov
cwtl
mov
mov
push
nop
pop
pop
sub
aas
out
push
mov
dec
aas
int3
add
adc
xor
call
fwait
lahf
movsb
out
sub
mov
fistps
rolb
sub
fstpt
pop
adc
sbb
jmp
imul
enter
adc
mov
fs
bound
xor
test
outsb
and
nop
aas
and
xor
mov
leave
sbbl
or
stos
jle
mov
sbb
push
nop
nop
insl
mov
scas
cwtl
xlat
inc
xchg
dec
pop
sbbb
mov
inc
pop
mov
cmc
popa
out
outsb
call
fmuls
hlt
sbb
aas
insb
std
xor
sbb
inc
addb
mov
test
bound
pop
xor
xchg
pop
shlb
mov
outsl
mov
fmuls
mov
dec
xchg
enter
aam
mov
inc
fdivrs
pop
imul
movsl
mov
das
shlb
bound
xor
scas
jb
ret
add
call
dec
in
adc
cmp
mov
mov
rclb
sbb
adc
nop
mov
loopne
jbe
loopne
or
je
arpl
add
lods
mov
xchg
nop
mov
add
pop
adc
mov
pop
dec
pop
push
pusha
sub
jne
dec
cmp
andb
pop
or
aas
sub
mov
in
por
test
fwait
push
mov
jbe
dec
mov
and
aas
lahf
prefetch
pop
in
push
push
cltd
aas
test
insl
rclb
rclb
pop
mov
dec
mov
movsb
imul
inc
dec
sub
adc
shlb
pop
adc
mov
cwtl
ret
ja
pop
xor
es
inc
adc
pushf
dec
sbb
push
popa
or
mov
dec
adc
xor
push
pop
sub
popa
shrb
mov
sub
cltd
mov
lahf
adc
pop
popa
jnp
sub
lahf
jo
test
jg
adcl
xchg
jnp
jo
mov
pop
pop
imul
or
push
sub
orb
movsb
lods
aad
in
pop
and
aas
movsb
dec
pushf
dec
or
test
inc
or
shlb
or
mov
loopne
lock
stos
mov
leave
mull
lock
inc
pop
pop
inc
jne
ret
cmp
pop
add
xor
xchg
sbb
pop
push
push
and
and
sarb
mov
sbbl
inc
push
mov
je
adcb
jge
cwtl
jge
shll
cmp
pop
mov
inc
jle
call
sbb
adc
lods
das
lods
pop
xor
mov
mov
stc
scas
add
ljmp
out
rcr
fbld
jg
inc
dec
cs
pop
inc
lds
mov
dec
in
mov
mov
insb
push
xchg
fdivs
add
push
sbb
xor
test
xchg
jl
roll
sbb
mov
xor
add
add
mov
jb
pop
dec
orb
test
sbbb
dec
jp
comiss
movsb
popf
fmull
lahf
in
in
dec
pop
fwait
jg
lahf
test
push
cmp
popf
push
xor
xor
adc
sbb
lcall
inc
adc
and
mov
and
cltd
out
mov
test
push
or
popf
or
cmp
xchg
cld
adc
in
sarb
test
adc
push
or
imul
mov
adc
movsb
and
jmp
and
mov
in
add
loopne
sbb
sub
mov
mov
cs
enter
insb
inc
xchg
arpl
es
fidivs
aas
adc
test
xor
test
sbb
js
sbb
add
js
inc
jae
xor
xchg
cmpsl
cwtl
ja
sub
push
roll
aaa
xor
add
mov
ret
inc
sbb
lcall
in
adc
inc
das
mov
mov
pusha
jg
or
jg
xchg
pop
aas
jl
rclb
enter
in
pop
adc
sahf
mov
pop
lock
pop
sbb
filds
pop
pusha
imul
iret
push
and
enter
jecxz
fisttps
push
push
int3
fistps
fcmovu
adc
sub
cmp
mov
orb
jb
lock
test
push
push
dec
int3
lahf
out
es
adc
aaa
xchg
mov
movsb
jge
int3
push
dec
lahf
call
mov
call
or
cmp
imul
subl
mov
xor
adc
iret
pop
mov
adc
mov
test
mov
xchg
addb
mov
mov
xor
jns
cmpsb
pop
in
mov
aas
dec
ficoms
xchg
in
in
sbb
cmp
or
push
cmp
and
pop
jb
sbb
aas
pop
lret
cwtl
xchg
loopne
adc
add
mov
aas
add
xchg
xchg
mov
xchg
sub
push
mov
mov
push
adc
lock
aas
in
je
mov
ja
inc
scas
lds
sub
push
inc
pop
fsubs
aas
rol
mov
int
mov
xchg
es
or
sbb
imul
jg
out
pop
imul
adc
jp
daa
fdivl
or
fmuls
xor
daa
xchg
enter
push
mov
xchg
and
mov
dec
pop
sub
repnz
cmpsb
cmpsl
pop
dec
pop
adcb
sar
and
dec
and
bound
xchg
add
out
call
test
addr16
insl
xchg
cmpsb
xchg
sub
add
jno
lret
inc
sub
ja
decl
daa
push
ds
sub
and
jne
test
daa
repnz
push
inc
adcb
cmpsb
adcb
xchg
lock
inc
iret
lret
add
daa
sub
add
sbb
pop
jg
lock
aad
in
mov
pop
cwtl
inc
jb
add
add
xchg
cltd
jecxz
sub
das
js
cmpsl
in
cmpsb
popf
mov
xchg
xor
or
insb
stos
test
lcall
mov
js
mov
test
test
daa
inc
sub
xchg
xchg
add
mov
adc
ret
in
ja
pushf
addr16
mov
lock
push
ja
out
push
popf
movsl
cltd
insl
inc
scas
fdivr
sub
scas
test
popf
in
dec
push
or
xchg
pop
adc
dec
ja
pop
dec
jb
leave
mov
jbe
sub
dec
xor
xchg
outsb
push
add
xor
das
ret
sbb
loopne
call
inc
call
mov
daa
imul
jns
daa
add
lock
mov
add
sbb
cmp
sbb
orb
adc
lods
inc
aaa
adc
push
sbb
aaa
mov
pushl
push
fidivrl
push
js
pop
pop
xchg
loop
dec
dec
movsb
add
adc
jne
inc
push
or
aaa
cmp
add
xchg
daa
mov
mov
ljmp
inc
cmp
outsl
in
add
aas
ja
and
es
or
push
daa
nop
xchg
ficoml
xor
mov
daa
mov
mov
adc
inc
test
and
and
imul
xchg
jge
pop
bound
js
cmp
stos
jg
in
stc
push
out
cmp
insl
adc
adc
pop
aas
pop
push
jbe
jg
stos
out
mov
cmp
push
stos
mov
pop
scas
out
sbb
cmp
lods
insb
pushf
adc
jb
inc
pop
sub
dec
rolb
jge
fs
notb
data16
pop
push
dec
es
rol
mov
inc
mov
test
outsb
xchg
pushf
aaa
mov
shl
fs
xchg
arpl
push
or
push
pusha
lods
decl
push
iret
mov
lods
xchg
dec
cmpsb
pop
scas
pop
mov
mov
lahf
nop
sub
mov
dec
pop
xchg
mov
sub
insl
fcoms
mov
add
adc
nop
lret
and
mov
cmp
repz
testb
jns
mov
add
push
loopne
cli
iret
repz
adc
adc
push
sub
cmp
iretw
imul
mov
push
sbb
or
add
fucom
jns
out
mov
jns
out
pop
inc
cmp
es
sarl
or
aam
lret
repz
repz
cli
or
ds
xor
mov
push
xchg
mov
ss
jle
cmp
jnp
mov
xchg
sahf
mov
cmpsl
stc
cmp
clc
add
or
out
sahf
sbb
ss
push
insb
jnp
out
jle
pushf
stos
bound
push
push
cmp
adc
aad
stc
cmp
cmp
fdiv
add
out
sahf
cmpsl
or
sub
sahf
out
sahf
pop
insb
jl
lcall
mov
aam
ret
xor
mov
mov
out
push
push
cmp
iret
push
push
sahf
out
sahf
cmpsb
cwtl
test
pop
jns
out
dec
inc
xor
repz
out
hlt
into
loop
mov
mov
mov
repz
inc
sub
or
cmpsl
stc
hlt
int
ljmp
ret
xchg
cmp
fs
inc
sub
cld
sahf
out
lcall
jns
out
cwtl
mov
out
sahf
out
xor
adc
iret
repz
out
mov
mov
nop
test
pop
repz
repz
ss
jns
imul
in
mov
les
out
jl
pop
dec
int
cmp
and
or
mov
cmp
enter
adc
push
mov
iret
repz
adc
xor
dec
pop
cmp
repz
sbbb
call
xor
jns
out
dec
push
jns
cwtl
test
fsubr
cld
neg
sarl
push
testl
jns
orb
push
adc
out
xchg
adc
sbb
jns
out
pop
push
mov
cmp
mov
mov
push
inc
cmp
dec
bnd
decb
out
sahf
ja
cs
fs
out
sahf
jbe
mov
out
aam
repnz
repz
repz
sub
dec
pusha
cmp
cmp
fadds
int3
shl
iret
repz
xchg
xchg
cmp
bound
cmp
sbb
out
cmp
add
ret
ja
out
mov
jle
repz
push
push
inc
push
sub
jns
out
aam
fmul
mov
cmpsb
xchg
jle
push
inc
negl
adc
jns
outsb
bound
inc
xor
lahf
out
sub
test
repz
repz
mov
cmp
nop
xorb
dec
ds
repz
sub
or
sarb
imul
fidivrs
out
subb
push
ja
out
lock
mov
jns
imul
cs
repz
pushf
push
mov
cmp
ds
jbe
and
dec
sahf
out
iret
pop
js
movsb
mov
repz
jl
rolb
push
xchg
repz
xchg
movsb
mov
into
in
sahf
cmpsl
stc
cmp
or
and
jns
out
push
out
sahf
out
enter
mov
mov
push
push
out
sahf
out
insb
jle
cmpsb
mov
adc
lret
div
jns
cli
mov
dec
xor
jne
jb
dec
pop
adc
movb
push
je
jns
dec
out
jl
jae
cmp
cmp
xlat
cmpsb
push
push
faddp
and
cmp
outsb
push
fidivrs
test
into
int3
ja
sahf
cmpsl
push
jp
lods
jle
or
sti
add
xchg
repnz
rorl
dec
test
push
push
or
es
repz
out
inc
es
push
hlt
aaa
jo
push
in
sahf
out
lcall
cmp
sarl
adc
sub
repz
repz
push
push
push
push
iret
repz
push
push
pop
pop
pop
pop
cmp
repz
pop
pop
pop
pusha
repz
repz
bound
gs
repz
addr16
imul
cmp
insl
outsb
outsl
jo
cmp
repz
jae
jne
repz
jbe
js
jp
cmp
repz
jge
jg
repz
repz
xchg
iret
repz
lea
iret
repz
xchg
xchg
xchg
xchg
iret
repz
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
mov
iret
repz
mov
add
cmp
sub
dec
pop
jns
out
insb
jp
cwtl
mov
jns
out
int
out
clc
iret
repz
or
pop
cmp
repz
je
cwtl
cmpsb
repz
repz
fldl2e
idivl
repz
push
incb
and
cmp
repz
addr16
or
cmp
mov
iret
repz
lret
in
sahf
out
repnz
adc
xor
jns
out
push
arpl
sahf
out
sahf
lahf
mov
fsubr
stc
cmp
sarl
sbb
iret
repz
push
pusha
outsl
test
repz
xchg
cmpsl
mov
fsubrp
ja
imul
add
gs
call
fs
jo
adc
fs
insb
sbb
xchg
push
ret
inc
jb
pop
mov
jmp
gs
outsl
outsl
insb
push
push
outsb
js
push
ja
push
jb
arpl
jae
inc
imul
outsl
dec
sub
test
xor
dec
jae
imul
outsl
ja
jb
jo
inc
arpl
pusha
gs
outsl
outsb
je
inc
fxch
out
gs
jp
pop
push
aam
mov
dec
daa
cmp
sbb
dec
imul
je
jns
inc
gs
push
popa
jb
test
jle
insl
and
fs
pop
mov
shll
ret
push
sbb
dec
popa
jns
gs
aam
bound
pop
jo
into
in
push
imul
arpl
push
mov
gs
je
popa
lcall
inc
inc
inc
jne
xchg
dec
pushf
bound
xor
fiadds
fs
jne
add
push
push
outsl
xor
loope
imul
sub
shl
idivl
addr16
gs
xchg
aas
shrl
dec
test
cs
mov
sub
push
and
push
jne
cmp
xchg
test
outsb
sub
sbb
jp
push
je
popa
or
in
outsl
xor
inc
ret
push
push
enter
outsl
or
fdivs
out
adc
push
mov
xor
xor
test
dec
or
xchg
mov
adc
gs
sub
push
outsb
insl
pusha
mov
sbbl
popa
jmp
sbb
fs
push
cmp
inc
insl
jo
jb
xchg
dec
sbb
ljmp
insb
fs
sub
mov
inc
je
dec
inc
cmp
insl
cmp
inc
inc
xchg
sti
push
rorb
jl
or
push
popa
imul
push
pop
es
bound
mov
sub
push
ret
fs
fisttpl
dec
rorl
jbe
and
pop
sbb
sub
mov
es
call
insb
pop
shlb
ret
add
dec
subb
xor
push
jo
test
mov
sub
mov
xchg
dec
lods
lcall
and
in
jb
mov
dec
xchg
fadds
push
imul
xor
sbb
adc
mov
inc
push
add
add
cmp
add
shlb
mov
dec
dec
aas
xor
jnp
inc
daa
xor
icebp
outsb
pop
inc
inc
dec
notl
sbb
inc
pop
nop
push
pop
adc
idivb
push
add
or
sbb
pop
mov
inc
shrb
add
pop
mull
or
negl
stos
mov
lret
add
xor
inc
fmull
std
movsb
sbb
add
decl
xor
data16
xor
cmp
cmp
cmp
ss
popa
data16
ljmp
aaa
test
mov
lret
rol
cmpsl
mov
mov
lcall
je
mov
adc
push
pop
negl
push
loopne
add
loopne
jnp
fnstcw
push
mov
pop
inc
push
dec
push
ja
jge
shlb
xor
fdivrl
fsubp
push
push
xor
xor
outsb
xor
rclb
out
fsubp
mov
cmp
lahf
inc
ja
jnp
jg
outsb
inc
mov
push
nop
inc
push
cs
jnp
mov
mov
jbe
push
data16
lahf
testl
push
loopne,pt
pusha
cmp
sahf
out
imul
das
scas
xor
fdivrp
fidivrs
push
xor
inc
aaa
inc
inc
jl
xor
inc
aaa
rcll
jp
inc
inc
xor
incl
mov
add
jo
inc
add
cmpsb
rol
mov
mov
mov
mov
pushl
aaa
arpl
aaa
lcall
push
push
mov
sbb
xor
xor
add
clc
imul
bound
fs
gs
gs
cmpsb
js
adc
and
ss
or
aad
mov
sarb
inc
cmp
xchg
mov
mov
add
mov
into
les
sarb
lret
lock
cmc
sarb
fidivl
add
cld
inc
push
roll
or
add
jl
lods
rcr
xchg
add
xor
mov
repz
and
roll
inc
outsl
jno
enter
or
pop
lock
mov
das
adc
push
xor
popf
jo
push
cs
inc
adc
lock
scas
negl
test
adc
add
jns
fwait
mov
inc
das
sbb
pop
nop
out
inc
adc
sub
push
inc
nop
mov
icebp
add
pusha
out
cmp
inc
shlb
cmp
aas
testl
inc
xchg
shll
and
add
mov
inc
inc
push
mov
arpl
cmp
inc
fildl
lcall
loope
mov
inc
push
inc
inc
cltd
dec
ss
das
cmp
dec
pushw
cmpb
repz
data16
mov
fiaddl
ja
movsb
rorb
add
mov
fs
daa
pop
sbbb
repz
mov
daa
out
sbb
icebp
ja
push
or
or
lcall
adc
repnz
orb
or
clc
aas
sbb
pusha
scas
jmp
push
xor
pop
cli
mov
mov
lods
imul
and
sbb
push
sbb
jae
daa
cld
and
test
gs
mov
or
and
daa
sbbl
adc
push
mov
aad
add
loope
jg
and
add
and
clc
jne
je
outsb
lahf
icebp
xor
add
cmc
or
repz
shlb
addb
push
mov
dec
cmc
fadds
add
add
adc
inc
or
pop
adc
cmc
cmp
adc
popa
jb
out
and
insb
add
jmp
mov
push
insb
ret
push
inc
jb
sub
jmp
or
imul
mov
shrl
dec
jns
dec
inc
inc
outsl
stos
imul
add
add
push
loope
xor
sub
or
loop
lret
roll
adc
jl
pop
inc
jmp
int
sub
push
jb
add
daa
stc
push
jb
enter
sub
inc
cmc
call
mov
sti
adc
pop
decl
mov
popa
outsb
jae
xchg
lds
cs
divb
adc
jmp
jge
les
clc
insl
insb
insb
push
out
pop
mov
add
push
out
jns
pop
adc
push
mov
cmp
lock
pusha
push
and
inc
subb
in
mov
arpl
jae
pop
mov
gs
inc
push
gs
push
outsl
jb
fs
add
outsl
outsl
imul
outsl
dec
imul
push
das
das
ja
arpl
push
hlt
jge
pop
jp
arpl
das
aas
ja
push
dec
push
dec
jae
dec
add
mov
pop
nop
add
outsb
popf
mov
mov
mov
test
mov
int
mov
imul
out
arpl
add
push
and
outsb
and
or
push
and
cs
cld
std
mov
mov
pop
inc
roll
push
sbb
cli
mov
clc
scas
stc
ds
jp,pt
sti
push
imul
lock
es
push
out
out
push
imul
or
mov
dec
add
loopne
in
rcll
and
add
or
adc
mov
das
lds
outsl
pop
add
add
mov
inc
pusha
sbb
push
add
outsl
js
insl
or
mov
or
jo
push
out
adc
and
push
sub
cs
push
orb
add
add
js
or
mov
mov
ljmp
dec
pop
movsl
mov
dec
and
xor
js
xchg
or
sahf
jae
arpl
xlat
inc
mov
or
mov
adc
jb
lahf
push
push
push
shrb
mov
inc
fnsave
cmp
decl
push
call
icebp
in
adc
or
mov
push
mov
je
add
fistpl
test
mov
rol
call
adc
scas
add
fiadds
push
loope
dec
movsb
fldcw
inc
out
out
insl
inc
jmp
fidivrl
dec
fdivrl
idiv
shll
subl
add
or
and
and
aaa
data16
icebp
and
push
and
and
rclb
sahf
or
cld
aas
and
popf
out
cmp
mov
xor
into
add
call
push
dec
jmp
call
movsl
ja
dec
jb
push
daa
aas
xchg
fs
add
mov
push
mov
sub
ljmp
mov
popf
adc
loope
mov
pop
in
or
sbb
sbb
pop
or
pop
inc
fnstsw
lcall
ficoms
adc
cmp
jl
sbb
push
gs
ficomps
shlb
inc
xchg
xor
cld
mov
pushf
and
pop
dec
ret
mov
mov
rol
out
imul
push
cmpl
add
in
or
test
subl
jmp
xchg
insb
xchg
sbb
sbb
rol
or
cmpsl
inc
insb
or
in
and
adc
cmpsl
mov
lahf
int3
int3
push
movsb
test
or
push
sub
inc
or
cmp
mov
cmp
mov
ret
ret
adc
movsl
or
popf
jbe
outsl
stc
push
out
or
insl
add
out
sbb
and
push
xor
mov
iret
repz
mov
adc
fstps
push
ds
sub
dec
mov
or
test
mov
orb
inc
ja
jle
rclb
pushl
adcl
adc
outsb
imul
add
insb
adcl
ret
add
fs
jae
imul
dec
pop
inc
jo
pop
arpl
imul
pop
add
and
arpl
pop
push
bound
lods
inc
push
aaa
xor
jge
daa
imul
outsb
dec
mov
sbb
inc
imul
aas
adcb
jae
dec
inc
push
dec
inc
dec
sldt
adc
add
add
add
mov
inc
popa
fidivrs
test
push
add
inc
sbb
push
enter
dec
das
fsubr
and
enter
inc
or
andb
ja
xlat
push
sub
pop
push
repz
pop
nop
inc
mov
shll
stos
add
pop
add
or
jb
out
lret
popa
add
imul
mov
and
add
cmp
and
filds
add
add
pop
jae
neg
neg
imul
ds
adc
out
lret
mov
imul
inc
pop
daa
into
movsb
jnp
mov
adc
insl
out
jnp
mov
jae
jne
arpl
and
xorl
jae
sti
fcmovb
imul
jl
shll
je
push
jecxz
mov
dec
je
out
pop
jb
jbe
subb
aaa
insl
lahf
jbe
push
pop
iret
jnp
sub
add
pop
sar
cmp
inc
sub
add
jbe
xchg
pop
data16
rep
dec
stos
or
xchg
sysret
adc
jae
jb
sbb
and
out
sbb
outsl
fimuls
subl
popa
xor
pop
push
sbb
pop
daa
out
mov
arpl
push
testb
xchg
rcrl
cld
sahf
adc
push
or
dec
push
divb
dec
mov
sahf
fimuls
jns
jle
jmp
cmpsl
sub
xor
sarl
and
inc
outsl
xorl
daa
mov
pop
scas
scas
and
sbb
pushw
imul
mov
xchg
pop
pop
call
scas
ret
pusha
or
ja
sub
jecxz
in
arpl
jnp
fisubrs
pop
hlt
loope
out
lret
popa
scas
arpl
cmp
mov
and
jnp
xchg
or
outsb
jns
jmp
pusha
jmp
insl
mov
dec
sub
mov
in
cmp
adc
iret
jnp
arpl
mov
imul
out
pop
stos
push
idivb
scas
les
sahf
push
arpl
subl
insl
jecxz
loopne
ret
push
jns
xchg
sub
dec
adc
cs
sbb
das
pop
or
daa
adc
fistpl
adc
jne
or
pop
jp
lods
sbb
mov
sbb
jo
sbb
push
es
rorl
adc
dec
pop
or
adc
sbb
and
add
xor
dec
xor
popa
xor
jno
pushl
jge
mov
xchg
xor
mov
shll
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
xor
sti
pop
repz
xor
inc
xor
push
xor
mov
test
lret
xlat
ror
loope
mov
xlat
mov
pop
lock
clc
cmp
int
cli
iret
sbb
into
mov
mov
pop
mov
negl
and
inc
or
fs
sbbb
enter
lret
mov
dec
dec
mov
into
repz
mov
mov
repnz
mov
arpl
mov
mov
ret
sub
shll
mov
inc
fldt
mov
into
iret
mov
mov
leave
or
outsl
add
sub
rcl
cs
pop
add
xor
rorb
mov
stos
mov
sub
mov
mov
pushl
fnsave
mov
xor
jae
xor
decl
fs
shrb
mov
fsubrl
mov
cs
je
mov
adc
pushf
popaw
xor
aaa
cmp
push
arpl
fcomi
mov
push
arpl
xor
xor
popa
fadds
rcl
shll
sti
adcb
lret
testl
mov
xor
mov
icebp
shl
lods
stos
mov
adc
test
fidivrs
pop
mov
pop
aad
popa
lds
ss
add
shrl
or
or
push
loop
sarl
outsl
cld
and
inc
dec
imul
data16
inc
sbb
in
and
jo
xor
sub
or
cs
mov
inc
inc
push
repnz
jo
cmp
pop
rorl
and
orb
add
push
jb
pushf
rol
push
cmc
pop
cs
imul
pusha
add
sbb
sbb
inc
xor
add
inc
push
add
push
insb
and
sbb
mov
push
add
xchg
sbb
pusha
push
pop
add
sbb
add
nop
or
push
leave
notb
pusha
mov
movq
std
mov
pop
leave
sub
xor
xor
iret
repz
xchg
sbb
in
sub
sahf
shlb
addr16
xor
ss
sub
xchg
stc
jne
or
mov
adc
call
aaa
daa
stc
mov
xor
xchg
adc
dec
loope
loopne,pn
push
shll
sbb
stc
push
mov
push
kmovb
das
clc
mov
xor
add
insb
cs
push
add
push
xor
imul
sarl
or
xchg
push
aaa
push
jg
movsb
fcomp
push
and
stc
rcll
psadbw
in
inc
or
and
sbb
mov
rcl
ret
push
mov
pusha
out
or
dec
stc
sub
add
adc
mov
mov
stos
inc
adc
sub
jmp
out
adc
test
repnz
test
test
inc
js
les
arpl
cmpsl
call
and
xchg
gs
movsb
mov
pop
jnp
cld
imul
mov
hlt
mov
add
sarb
push
aaa
ljmp
xchg
xor
int3
ret
movsl
push
cltd
cmp
add
call
mov
pop
test
imul
sbb
push
pop
jmp
js
cltd
sub
popf
insl
das
sahf
sbb
clc
fwait
inc
sarb
mov
add
or
dec
jae
sbb
lock
add
sbbb
ret
test
and
inc
add
and
or
mov
sub
aaa
and
mov
in
mov
in
nop
adc
hlt
mov
xchg
mov
mov
loope
out
stos
cld
xchg
addr16
pop
jne
or
cltd
in
sbb
xchg
dec
scas
or
or
dec
shlb
iret
cmp
stos
and
push
xchg
add
arpl
add
mov
inc
mov
popf
pop
and
sbb
aam
push
sub
or
cmp
and
out
mov
push
sti
jns
mov
xchg
add
dec
enter
add
js
cmp
in
call
jno
xchg
mov
les
sbb
pop
mov
or
and
sub
into
ljmp
loope
icebp
pop
movsb
add
scas
cli
and
loopne
stos
pop
ds
inc
ret
push
pop
imul
sbb
icebp
sub
int3
and
mov
out
xor
push
mov
arpl
mov
mov
or
dec
sbb
ret
xor
bound
clc
sahf
add
or
xor
xlat
add
icebp
pop
repnz
pop
fdivr
mov
cmpb
rcrl
pop
rcll
jmp
shlb
push
push
sub
and
or
dec
cmp
jo
dec
dec
pop
pop
daa
add
call
ret
sbb
imul
hlt
or
cmp
pop
pop
adc
pop
cmp
sbb
xchg
andl
or
xorb
rorb
and
popa
nop
inc
lock
or
or
push
imul
sahf
inc
adc
mov
inc
adc
call
push
and
add
test
and
in
cmpsl
jae
sub
xchg
loopne
dec
inc
xchg
or
add
inc
sbb
and
sub
and
dec
add
ljmp
andl
or
cmpl
test
jmp
mov
and
xor
jnp
ds
xor
or
popf
in
adc
rclb
rcll
sti
call
push
jo
sub
adc
push
jnp
mov
mov
cmp
cmpl
std
mov
xlat
out
xchg
in
mov
mov
mov
jge
mov
xor
rclb
jns
sbb
push
mov
lods
push
test
fimull
pusha
push
lret
push
cmp
fs
mov
pop
mov
and
xchg
push
add
pcmpgtb
out
push
push
jb
in
push
cs
jmp
pop
loopne
mov
cmp
jmp
hlt
pop
sub
mov
sub
fdivs
lret
push
js
rcl
aam
jmp
jns
mov
insb
ret
in
adc
xlat
push
dec
hlt
mov
cmp
mov
sub
sbb
test
pushf
call
lock
pop
dec
cmp
sub
push
mov
cmp
push
add
sub
jge
std
loope
inc
stc
cmp
popf
mov
and
xlat
push
into
adc
jns
push
sub
push
inc
xor
mov
addr16
pop
mov
inc
push
dec
or
inc
popf
xor
das
cmp
mov
sbb
and
and
into
cmp
daa
fcoml
or
leave
mov
es
mov
cltd
in
push
call
or
sbb
mov
inc
dec
mov
add
sbb
inc
and
int
and
push
xchg
add
out
stos
inc
and
insl
loope
test
dec
adc
imul
add
push
jne
add
add
push
nop
xchg
ret
movsl
out
inc
push
lea
das
add
adc
push
inc
mov
leave
cmp
test
popf
pop
lock
xchg
mov
aas
sbb
mov
or
xchg
adc
add
jnp
cltd
imul
xor
sti
dec
mov
out
loopne
add
dec
iret
cmp
xor
repnz
push
rorl
dec
mov
out
leave
add
inc
scas
sub
xlat
sbb
mov
fistps
inc
push
mov
subb
push
sti
dec
in
lahf
cmp
add
rorb
push
and
push
fs
mov
jnp
mov
in
pusha
jnp
dec
inc
xchg
and
mov
jno
clc
int3
orl
incl
or
xchg
lret
sbb
or
add
pop
mov
push
push
dec
or
dec
leave
sbb
sbb
cmpb
pop
jg
or
xchg
dec
mov
clc
add
cmp
in
orb
adc
pop
jnp
sbbb
aam
inc
sbb
add
push
mov
push
enter
xchg
data16
xchg
mov
cltd
mov
dec
fs
orl
ljmp
xchg
mov
pushf
in
in
scas
or
cmpsb
in
in
dec
in
adc
dec
addr16
pop
xchg
jle
jbe
in
push
cld
cld
mov
cld
push
rclb
sbb
mov
ret
add
push
pushf
mov
or
nop
inc
mov
ret
add
mov
out
xlat
mov
enter
jns
fs
and
push
ss
rolb
jns
ljmp
popa
mov
nop
sub
adc
rol
sbb
dec
sbb
enter
dec
fnsave
jb
sbb
and
dec
cmpsl
enter
mov
xchg
xor
and
jmp
fistpl
dec
xchg
pushf
inc
pop
iret
dec
mov
fistpl
dec
gs
or
popf
dec
hlt
mov
cmp
icebp
push
std
insb
dec
inc
mov
push
sahf
dec
cmpsb
mov
xor
add
in
sbb
add
mov
into
out
jmp
or
inc
stc
or
add
pop
lahf
add
movsb
sbb
mov
pop
inc
data16
adc
pop
and
movsl
inc
nop
inc
mov
dec
or
andb
and
xchg
and
les
cmpsl
bound
test
in
or
push
add
cmp
nop
sub
inc
push
mov
movsb
pop
lock
pop
clc
and
cld
add
mov
xor
xchg
cmp
pop
popf
or
lock
imul
movsl
add
and
and
pop
nop
xchg
add
jo
cmc
shll
movsb
jb
add
pop
mov
popa
andl
add
mov
cwtl
jae
lds
xchg
push
and
loope
adc
inc
add
jo
jbe
push
andl
push
inc
pop
xlat
and
add
in
jb
pop
scas
inc
cli
inc
nop
inc
repnz
inc
movsl
inc
sbb
aaa
mov
push
and
nop
pushf
add
and
jge
inc
and
mov
inc
pop
inc
pop
dec
xor
test
adc
inc
mov
add
nop
inc
sahf
inc
and
ret
aaa
call
ss
stc
sbb
call
pusha
or
in
sub
push
mov
inc
clc
test
mov
push
xor
movsl
rcpps
lock
mov
add
sbb
jmp
faddl
and
into
inc
mov
int
jl
jle
push
mov
push
loope
aam
repz
daa
adc
mov
jns
adc
xor
adc
push
sbb
in
push
mov
test
jns
xchg
inc
jl
repz
push
or
enter
mov
and
or
jmp
or
xor
mov
fldenv
cmp
push
nop
sbb
scas
jmp
dec
into
mov
dec
pusha
fcoms
loope
inc
hlt
mov
adc
inc
or
mov
lods
push
cs
cmp
sahf
aas
xchg
aas
ret
fildl
aas
pop
scas
inc
ds
jne
adc
test
out
nop
push
scas
jmp
stos
in
ret
xor
clc
mov
jl
lea
repnz
mov
add
lds
jecxz
xchg
data16
cmp
in
and
sbb
orl
xchg
sub
movsl
cld
aam
or
lods
fsubl
add
fdivl
cmp
xchg
sbb
testb
xchg
inc
out
cmp
stc
lock
test
sub
enter
cmp
loope
cmpl
aaa
in
push
inc
and
xchg
cmp
enter
call
jmp
adc
or
or
cmp
lods
xchg
outsl
push
mov
bound
jge
sbb
enter
into
aam
inc
imul
fsub
cmpb
pushf
push
shrl
and
dec
push
add
repz
cmp
stos
test
dec
and
inc
test
dec
shll
loopne
mov
dec
scas
nop
cmpsb
fsub
fmul
and
insb
cmp
sub
inc
jne
or
xchg
test
cmc
popa
insl
cmp
cmp
and
cmp
push
inc
cmp
test
mov
ja
jl
sbb
addl
pop
pop
sahf
or
mov
or
test
xchg
jb
cmp
roll
mov
leave
cmp
jo
call
push
xor
shlb
js
xor
pop
jb
aaa
inc
pusha
mov
dec
adc
add
cmp
rorl
xchg
dec
adc
adc
or
cmpsl
lret
add
dec
lcall
sub
aaa
and
insl
jg
and
iret
cltd
lods
mov
mov
in
add
aam
js
xchg
aaa
jge
dec
or
adc
or
mov
cs
imul
and
lods
pop
xor
rcrl
dec
sbb
mov
pop
mov
mov
sbb
mov
jbe
or
pop
pop
push
dec
sti
rol
orl
scas
mov
add
aaa
test
out
and
sub
mov
dec
pop
mov
and
cmp
sub
jg
jmp
shlb
cmp
xor
cld
add
add
jo
add
js
insb
inc
pushf
ja
dec
adc
adc
cmp
enter
xor
or
push
roll
orl
mov
mov
mov
lcall
mov
jmp
jmp
loop
dec
pop
and
and
pop
jecxz
jbe,pn
sarl
pop
data16
xchg
jmp
xor
notl
xor
mov
mov
adc
inc
jbe
aam
mov
sub
sbb
imul
sub
cmpl
test
pop
or
je
dec
adc
add
aas
mov
mov
loop
test
ror
sbb
inc
xchg
add
adc
mov
call
ds
or
popf
dec
inc
sub
inc
cmp
ja
loopne
sub
xchg
lock
sbb
dec
loop
inc
fsub
dec
dec
jo
and
mov
dec
lret
pop
dec
push
push
adc
push
inc
pop
mov
adc
aas
jb
pop
cmpl
dec
and
sub
std
adc
xor
xchg
add
negl
mov
outsb
ljmp
jno
and
dec
push
enter
xor
adcb
pop
pop
inc
xor
rolb
mov
pop
adc
les
jo
adc
add
dec
loop
roll
lds
xchg
xchg
dec
inc
test
mov
mov
dec
push
call
mov
pop
push
dec
int
shlb
add
test
sub
insb
sbb
dec
je
or
insb
leave
mov
sbb
das
mov
mov
sbb
xor
orl
pusha
js
dec
pop
push
mov
in
dec
dec
cmpsb
in
out
out
push
ds
mov
into
pusha
xchg
pop
adc
in
jo
cs
cs
into
iret
add
and
jne
leave
shlb
cs
or
cs
xor
xor
xchg
cmp
pop
cmp
daa
cs
daa
ss
adc
fdiv
test
ljmp
mov
lahf
sub
inc
enter
push
mov
mov
fisttpll
les
cltd
xor
xor
jp
nop
xchg
loopne
cmc
adc
xchg
sub
xchg
inc
repnz
sub
sub
sub
sbb
es
or
and
cmpsb
fnstsw
and
loop
xor
add
ret
fdivrl
lret
loopne
and
rolb
stc
test
mov
pop
and
mov
mov
adc
sub
inc
push
pop
and
cwtl
mov
add
ret
test
adc
cmpl
adc
cmp
xchg
add
mov
and
leave
sbbl
xor
ret
add
and
loope
lret
push
leave
jl
or
pushf
icebp
enter
add
mov
cmp
add
ret
or
or
pushf
fs
jecxz
dec
xchg
add
mov
or
mov
mov
pusha
test
movb
loopne
xchg
ret
fldenv
or
es
mov
xchg
adc
or
lds
or
xor
push
xchg
add
inc
es
and
js
xchg
or
cs
fadd
mov
mov
fwait
dec
and
add
mov
test
ret
mov
xor
and
sbb
inc
gs
dec
dec
into
mov
mov
rorl
ja
inc
andl
adcl
push
mov
push
push
mov
out
mov
push
mov
push
pop
ret
xchg
and
lret
push
orl
push
and
push
pop
ret
jmp
or
sbb
mov
mov
in
mov
add
stc
cmpsl
scas
cld
xchg
add
add
push
jo
jno
xchg
ret
ss
lea
push
or
sbb
je
cli
push
jmp
gs
or
dec
mov
mov
mov
mov
inc
push
push
mov
test
adc
mov
sbb
add
andps
mov
out
mov
add
sub
das
ja
pcmpgtb
fisubs
leave
and
mov
xchg
add
fadds
push
ret
cltd
mov
ret
add
inc
and
push
mov
enter
jg
pop
les
jmp
xor
xchg
sub
or
add
sub
add
cmp
xchg
xor
push
les
pop
xchg
add
add
orb
or
inc
ja
xor
daa
xor
orl
stos
cltd
cltd
sbb
mov
jbe
mov
mov
add
orl
xchg
add
lret
test
or
jno
ret
test
push
sbb
loop
inc
dec
sub
ret
scas
dec
enter
outsl
lcall
adcb
ja
cmpl
or
or
lock
add
cmc
add
pop
adc
push
loop
sub
ret
aam
call
rcrl
les
or
xchg
adc
add
adc
andl
inc
dec
enter
xor
inc
xchg
add
and
dec
mov
loopne
movsl
test
ret
xchg
orl
jl
xchg
addr16
test
sbb
and
jecxz
add
or
jge
lea
movsb
popa
push
cmpsb
sub
cld
fidivs
lret
jmp
jmp
leave
inc
push
and
clc
xchg
sbb
xchg
pushf
insb
jne
pop
inc
orl
or
shrl
clc
jmp
outsl
push
pop
and
push
inc
fdivl
ret
outsl
mov
add
sub
xchg
mov
lret
sti
and
push
xchg
adc
xorl
callw
or
aam
seto
cmp
rclb
orl
mov
and
or
in
push
push
lret
add
sbb
stos
icebp
add
add
push
nop
xchg
popf
push
adcb
mov
add
cmp
push
ret
fcoml
dec
pop
dec
stos
mov
sub
xlat
sbb
push
push
add
das
adc
call
insb
mov
das
pusha
sub
les
sub
lret
mov
push
pop
cmpsl
jno
push
enter
adc
sub
les
mov
fst
int3
push
xorl
cmp
adc
adc
in
and
pop
mov
push
push
mov
nop
add
push
pop
ret
mov
xor
pop
scas
and
sbb
mov
and
sub
outsl
mov
mov
inc
adc
movsl
and
mov
mov
push
pop
ret
lret
outsb
mov
jg
sub
pop
and
dec
mov
adc
mov
stos
mov
js
ret
push
push
mov
loop
add
jo
inc
and
push
adc
push
push
mov
fcoml
sbb
xor
pop
mov
or
testl
adc
and
jg
xlat
rolb
outsb
push
imul
push
pop
ret
cmp
mov
add
mov
push
sub
sub
ret
jb
or
add
inc
movaps
loopne
push
add
sub
inc
sub
sub
aaa
and
stos
ret
adc
sub
jp
xchg
dec
push
pop
ret
subl
les
adc
inc
adcb
or
push
enter
mov
fbstp
push
xor
nop
or
cmpl
gs
and
or
nop
pop
enter
or
xchg
inc
repnz
or
xchg
leave
push
clc
mov
jmp
sub
stos
fs
xor
sub
les
xor
pusha
scas
push
jmp
sbb
inc
rorb
adc
or
pusha
cmp
aaa
jge
add
cmpsb
cltd
scas
cmpl
seto
test
js
movsb
loopne
sub
ret
xlat
or
push
pop
and
sbb
test
adc
mov
mov
fnstenv
or
sub
xor
adc
insb
stos
ret
sbb
add
testb
xor
enter
hlt
or
xchg
add
test
adc
fwait
add
lods
push
or
dec
add
ret
sti
pop
rorl
dec
call
in
pushf
roll
pop
lea
enter
jb
into
repz
sbb
pop
and
cmp
and
push
push
mov
jmp
push
sbb
push
popa
inc
faddl
movsl
push
fists
mov
dec
mov
hlt
or
cltd
fsubrs
push
pusha
sub
es
and
inc
dec
and
add
mov
cmpsb
add
xor
jecxz
inc
outsl
add
int
inc
add
call
mov
faddl
inc
adc
popa
call
test
orl
add
ret
incb
and
sbb
xlat
test
or
lret
add
sub
jns
sti
cld
inc
insb
lds
sub
inc
addb
push
test
fistpll
pop
sub
daa
into
shr
imul
jmp
and
cmc
add
jb
adc
loopne
pop
push
pop
and
mov
leave
out
jmp
jne
add
in
or
push
fcoml
repnz
jmp
add
cld
cmc
aam
xchg
lahf
sbb
leave
dec
popa
cli
andb
jmp
clc
cs
dec
adc
mov
lods
push
mov
ret
cmp
dec
ds
or
addb
addr16
jbe
pop
fisttpl
das
stos
sub
inc
add
add
adc
mov
push
push
pop
and
filds
daa
mov
mov
lret
scas
add
push
add
icebp
sbb
mov
shrb
inc
insb
push
dec
fstl
shlb
ret
add
inc
sub
cmpl
cld
mov
add
fimull
imul
add
adc
jbe
and
ret
xor
and
ja
ret
jecxz
fcompl
push
pop
ret
lea
push
add
mov
xor
dec
push
ret
call
fcmove
call
and
shlb
push
jb
xchg
iret
pop
call
mov
or
cmp
cmp
cmp
in
mov
cmp
or
into
inc
xor
jae
cmp
sub
pushf
xlat
fnstsw
add
sbb
pop
test
gs
xor
adc
mov
pop
sbb
push
repnz
in
inc
xor
mov
inc
shll
test
xor
add
inc
cwtl
mov
cmp
or
add
test
test
mov
fistps
push
inc
je
lret
adc
xor
cwtl
add
roll
es
lcall
ret
jnp
xorb
movsb
or
or
add
test
scas
stos
push
or
pop
xchg
jbe
or
add
push
sub
dec
imul
dec
pusha
loope
adc
adc
jp
adcl
call
fadds
roll
rcrl
aam
dec
pop
mov
cltd
jmp
shlb
jae
cmp
pop
jae
add
adc
push
lods
shlb
aas
mov
cli
xchg
pop
sub
imul
inc
or
and
enter
cwtl
sbb
rolb
in
adc
sbb
dec
sbb
xor
test
inc
xor
push
adc
xor
push
add
pushf
jns
sbb
pop
ret
mov
test
clc
or
aas
ret
enter
orl
loopne
ljmp
aam
push
cmp
ret
push
mov
jno
mov
xlat
imul
sbb
imul
inc
dec
repz
ret
pushf
inc
or
call
sub
ret
jne
adc
jo
or
pop
iret
int3
ljmp
insl
or
repz
adc
jae
sub
adc
add
jae
fadds
cmp
jae
ret
fcmovu
push
jo
inc
xchg
mov
in
mov
shrl
mov
push
aad
ficoml
mov
adcb
or
xchg
xchg
shll
movsb
mov
add
xchg
cmpsb
mov
adc
mov
fisttps
shll
mov
xchg
mov
fwait
and
sbb
xor
add
xchg
movsl
and
sbb
xchg
or
loopne
sti
push
call
sbb
cmpsl
inc
mov
and
sub
leave
add
outsb
dec
nop
shlb
add
clc
sub
rcll
inc
cmp
cmp
mov
les
pusha
xchg
xor
xchg
xor
pop
dec
xchg
push
inc
push
or
lcall
mov
and
leave
lods
or
arpl
adc
enter
pop
fwait
xor
or
int
push
push
dec
jo
add
test
inc
das
cmp
push
divl
cmp
and
call
test
mov
or
fs
cmp
rcll
popf
dec
sysret
ss
lret
test
or
push
aas
fisttpl
je
movsl
sbb
mov
cmp
iret
jo
jecxz
add
and
jns
add
add
cmpsl
in
les
add
push
cmp
push
mov
sub
popf
arpl
fcomps
rclb
fmuls
inc
lods
inc
cwtl
outsb
pop
mov
push
push
clc
jg
or
push
and
pop
adc
push
xchg
mov
sub
and
push
dec
out
pop
dec
popa
rclb
xor
xor
push
and
inc
ljmp
push
adc
adc
aam
cwtl
bound
rcl
test
lahf
test
rolb
je
cmpsb
jnp
rclb
push
mov
xchg
shl
loop
call
daa
inc
mov
imul
adc
mov
mov
mov
mov
fmuls
sbb
and
mov
loopne
jle
aas
test
scas
andb
add
lds
mov
mov
mov
sub
test
jae
shlb
mov
inc
push
rclb
subb
rclb
push
scas
xchg
push
mov
push
inc
push
cmp
repz
add
add
push
inc
inc
push
mov
rclb
clc
mov
xor
push
imul
cwtl
inc
sub
add
sbb
icebp
push
inc
push
mov
into
push
test
mov
xchg
fwait
mov
daa
lcall
inc
movsb
rolb
mov
mov
push
inc
push
mov
cmpsb
pusha
ret
push
mov
pusha
sub
sub
les
mov
fs
fiadds
mov
push
push
mov
dec
cmpsb
mov
sbb
mov
inc
repnz
xor
mov
mov
adc
sub
cwtl
addb
andb
rclb
jle
or
push
mov
shrb
pop
int3
dec
ret
cltd
inc
cmpl
or
enter
xlat
scas
dec
push
int
xor
lret
sbb
mov
xor
mov
sub
inc
mov
xor
adc
ret
mov
and
and
add
jmp
or
pushf
not
mov
sub
jo
inc
push
mov
add
add
push
mov
dec
flds
xchg
mov
test
sbb
aaa
add
inc
sub
mov
push
mov
or
pusha
add
mov
sub
or
test
sub
push
push
mov
lcall
fnop
or
adc
inc
add
sub
sbb
mov
xchg
or
dec
mov
daa
sub
fcoms
popa
jb
scas
popf
or
mov
push
je
loope
sub
fs
push
xor
out
test
stos
push
out
dec
sbb
pop
popa
insb
sbb
xchg
and
and
push
mov
mov
xor
and
jae
pop
out
add
sub
add
scas
mov
pop
cmpsb
and
xchg
sub
mov
xor
or
call
xor
jp
lret
sbb
xor
movsb
addr16
xor
mov
adc
sbb
sbb
lret
xor
jae
pop
inc
sahf
cmp
jbe
jnp
pop
cmpsb
jo
pusha
jbe
popa
jne
xor
push
mov
int
scas
xor
lea
push
lock
cmp
push
adc
lahf
xchg
adc
addb
repnz
jp
nop
jne
sbbl
sub
leave
xor
adcb
sti
lahf
mov
lret
xor
shrb
inc
xchg
and
sub
les
pop
add
xchg
mov
js
sub
mov
les
xchg
shl
adc
ds
loope
pop
outsb
xchg
xchg
push
hlt
inc
dec
shrl
out
mov
xchg
and
push
mov
xchg
mov
pop
ret
push
mov
loope
xchg
adc
pop
rcr
add
xchg
cmpsb
and
mov
add
cmpsb
test
xchg
or
push
fdivl
add
dec
dec
cmpsl
pop
dec
push
sub
push
cwtl
pop
mov
test
jae
add
inc
fcoml
mov
xchg
pop
cmpsb
rolb
jbe
dec
inc
lods
mov
adc
xchg
push
push
sub
orb
add
push
sbb
xchg
call
sbb
aad
jg
popa
cmc
push
and
in
add
xchg
and
or
jno
xchg
leave
in
jne
adc
sbb
xchg
jo
adc
inc
add
dec
popa
pop
xchg
mov
loope
push
xchg
dec
shll
dec
popa
jo
xchg
jae
adc
inc
mov
mov
lret
xchg
push
into
sbb
dec
or
fsubs
sub
push
sbbb
dec
fnsave
test
mov
jo
mov
pop
sub
adc
les
inc
addr16
clc
cmp
inc
push
jno
adc
inc
sbbb
xchg
cltd
sbbb
inc
adc
sbb
sbb
mov
sub
sub
xchg
mov
mov
shr
or
out
sbbb
orl
sub
loopne
cld
cltd
addb
jmp
jne
outsb
xchg
lahf
mov
clc
xchg
fdivl
test
dec
rcrl
xchg
add
xlat
and
cld
test
fnsave
xchg
faddl
in
push
fdivl
xchg
stos
adc
lret
adc
cltd
or
pop
or
pusha
sbb
pop
fnsave
xchg
daa
mov
xchg
adc
or
mov
fstl
xchg
sub
mov
lahf
xchg
pop
shrl
push
call
jne
adc
negl
adc
loopne
outsl
mov
loope
mov
pop
mov
add
sub
fcomps
mov
sub
or
xchg
mov
cltd
ret
xchg
jno
cmpb
lret
jmp
or
pop
xchg
fnsave
test
cmpsb
jo
push
dec
xor
sbb
pop
xor
xchg
bound
addr16
sub
fnsave
test
adc
and
lret
xchg
outsb
cltd
cmpb
jmp
mov
ljmp
and
xor
inc
or
les
add
xchg
cmp
push
aas
jno
lret
xchg
and
call
push
loop
outsb
cltd
ret
das
xchg
sub
adc
xor
popf
jl
repz
out
sahf
out
lahf
and
sub
lods
repz
or
cmp
sbb
and
dec
mov
xchg
shrb
cmpsb
and
push
inc
cmpsb
pusha
cmpsl
adcb
sbbl
xchg
sub
ret
mov
test
rol
xor
ljmp
sbb
cmpl
jne
popa
cmp
cltd
aas
inc
or
shrl
mov
imul
jle
mov
loope
xchg
imul
out
mov
mov
dec
rcr
xchg
dec
jne
add
adc
sbb
mov
xchg
subb
push
mov
ja
xchg
pushf
addl
dec
jae
jle
loope
sub
ret
mov
lret
adc
dec
ret
xchg
and
les
adc
fiadds
in
aam
push
mov
lret
adc
outsl
and
pushf
inc
stc
adc
jne
jl
les
pop
cmpsb
jo
xchg
xchg
sub
rcr
loopne
loop
sbb
cli
mov
xchg
inc
imul
test
pusha
sbb
mov
test
jo
adc
xchg
inc
jo
xor
test
xchg
dec
popa
and
adc
xchg
mov
jnp
sub
fs
mov
adc
pop
cmpb
enter
xchg
shll
dec
arpl
mov
jecxz
enter
jns
add
pop
and
mov
jb
nop
xchg
sub
xchg
pop
mov
mov
push
cmp
or
push
shrl
js
dec
add
xchg
dec
jecxz
pushf
xorl
ljmp
lcall
je
sub
aaa
inc
mov
test
pushf
es
add
push
int3
popf
pop
adc
cli
push
xor
imul
xchg
ret
adc
xor
or
sbb
adc
ljmp
jo
mov
dec
xchg
push
enter
xor
push
call
push
jne
adc
je
push
cmpsl
dec
loope
cmpsl
push
sbbl
push
add
data16
jno
dec
cli
push
subb
dec
push
mov
enter
in
add
jo
pop
jle
je
adc
mov
sarl
movsb
adc
push
dec
clc
pop
stos
rcll
dec
mov
fs
push
adc
stc
pusha
adc
push
aam
push
js
adc
cmpsl
dec
push
lods
pop
mov
cmpb
push
add
hlt
mov
dec
xor
fsubrs
push
xchg
sub
imul
xor
mov
cmp
sbb
js
pusha
xchg
mov
push
jmp
sbb
fs
dec
xchg
or
mov
adc
add
outsb
insb
dec
jne
sub
sbb
loope
cmpsl
dec
loope
push
xor
or
aaa
pop
cmp
adc
loop
xchg
insl
imul
nop
and
repz
push
add
mov
lcall
adc
loope
cmpsl
dec
loope
mov
rclb
test
push
lods
push
push
pcmpeqb
cmp
push
push
and
dec
xchg
ret
loopne
sub
push
xor
pop
rolb
inc
dec
xchg
cmp
sbb
add
nop
stos
xor
pushf
es
cmp
inc
inc
push
dec
xchg
sbbb
test
push
sbb
or
adc
cmp
sub
add
mov
jo
movsl
test
xchg
adc
push
lea
es
adc
inc
push
shll
jo
push
popf
push
inc
cmp
out
pusha
push
lcall
and
jne
push
incb
lods
dec
out
lds
push
je
in
jo
adc
inc
push
cmp
xor
and
loope
add
pop
adc
inc
enter
rcll
pop
pushf
push
inc
push
rcl
popa
lock
xchg
cmp
inc
mov
dec
rorl
mov
rorl
nop
scas
ret
cli
add
push
dec
subb
pushf
mov
dec
push
add
or
ljmp
or
xchg
ret
jl
sbb
sub
or
and
das
jno
sbb
loope
cwtl
repz
adc
inc
mov
jg
inc
inc
push
jae
fiadds
sarb
adc
test
js
jae
adc
add
fcoml
nop
dec
or
mov
out
push
jbe
jae
mov
push
nop
adc
loopne
jae
and
jnp
jae
or
pop
push
or
lds
testl
dec
jae
mov
addl
mov
sbb
pop
dec
popa
cmc
mov
jmp
fisubl
inc
stos
andb
ja
jae
push
js
push
add
add
jae
movsb
jo
out
subb
mov
add
stos
and
mov
movsb
dec
popa
lock
sub
pop
push
xchg
orb
jae
fwait
std
or
ds
jmp
aaa
push
das
cmp
in
dec
and
call
push
jae
fnstcw
in
in
push
inc
push
jae
pop
sub
adc
test
inc
push
sbb
jae
adc
pop
enter
xor
push
inc
movsb
xor
add
mov
push
scas
mov
add
call
fldenv
xor
pop
pop
add
rcrb
nop
dec
adc
jae
mov
loope
in
adc
in
pop
loopne
dec
or
mov
inc
push
mov
mov
push
jae
vpmovsxwq
ret
and
pop
and
orl
and
cwtl
out
jae
nop
adc
es
xchg
clc
pop
lds
dec
pop
mov
mov
xchg
jae
adc
sbb
push
jae
sub
sub
popa
sub
popa
hlt
dec
icebp
addb
add
repnz
pop
clc
repnz
pop
and
popa
push
cmp
push
sbb
and
inc
and
sbb
jae
add
push
add
or
jae
sub
mov
and
or
push
sarl
adc
insl
mov
ret
outsb
test
adcb
and
rcrl
lahf
stc
movsb
pusha
es
mov
mov
add
adcb
mov
movsb
shrb
push
test
roll
adc
xor
jb
sahf
out
sahf
ja
xchg
push
js
mov
in
sbb
mov
lahf
mov
out
mov
adc
inc
and
into
or
sbbl
mov
or
loopne
pushf
movsl
cmpl
mov
push
adc
sar
sub
sahf
pushl
lcall
jae
sub
or
jmp
loop
jae
or
pop
push
adc
js
jl
jae
mov
add
ror
in
sbbb
jb
lret
rcrl
orps
rorl
jae
loopne
inc
push
jae
xor
jg
sub
mov
cmp
inc
push
mov
rorb
lds
movsb
movl
cvtps2pd
call
cmp
or
or
cmp
add
push
mov
cmp
in
ds
shlb
ja
jae
dec
test
inc
push
jae
adc
daa
hlt
sub
mov
fwait
or
out
and
ja
pop
mov
jae
xor
cmp
or
or
clc
ljmp
mov
jae
aad
push
js
jae
daa
es
xor
loop
sbb
jae
insb
repnz
xor
cmp
jno
rolb
jae
or
popa
mov
cmp
jg
inc
pop
inc
jae
adc
test
ret
cmpsb
cwtl
pop
xchg
sbbb
cltd
cmp
dec
push
dec
cwtl
xchg
mov
mov
pop
out
xchg
add
inc
xor
mov
roll
repnz
fsub
add
dec
inc
xchg
mov
fsubr
adc
adc
sbb
fs
out
inc
xor
test
in
or
jge
xchg
xchg
je
adc
mov
add
add
popa
mov
push
jmp
pop
xor
rolb
sub
adc
aaa
movsl
mov
sbb
cmpsb
sub
je
andl
sub
pushf
xchg
and
andl
inc
mov
cmp
andl
jo
sarl
stos
push
mov
test
roll
xor
out
jo
adc
push
out
dec
inc
inc
mov
cltd
or
shlb
mov
or
popf
aaa
fwait
or
sbb
cmp
or
add
andl
and
mov
push
mov
or
xor
xor
sbb
jne
adc
fbstp
cmp
or
dec
xor
faddl
jne
cmc
adc
out
fldl
xor
fsubrs
iret
dec
mov
mov
mov
cmpsl
mov
aas
aad
mov
xor
cmp
mov
std
add
arpl
bound
sub
repz
cmp
xchg
lahf
add
sbbl
inc
add
mov
sbb
test
pop
cmp
repz
loop
inc
push
push
adc
repz
push
pop
iret
shrl
sbb
inc
repz
push
adc
iret
adc
cs
andb
mov
loopne
repz
push
mov
mov
pop
inc
inc
repz
inc
inc
dec
repz
adc
cmp
jbe
adc
cmp
inc
jl
int3
aam
adc
mov
dec
push
push
adc
scas
add
repz
dec
jp
popa
aas
pop
xchg
and
cwtl
sbb
sbb
sub
adc
outsl
movsl
mov
sbb
or
test
rolb
or
ja
adc
cwtl
pop
push
mov
adc
call
inc
adc
ja
sldt
xchg
cwtl
stc
xor
hlt
adc
mov
or
push
inc
xor
sub
push
bound
daa
sbb
adc
adc
loopne
fistpll
lahf
cltd
jp
cmpsl
insb
loopne
adc
push
inc
adc
movsb
xor
sbb
ja
push
scas
test
xor
sub
sbb
mov
lret
jle
xchg
push
add
les
inc
out
ljmp
leave
out
mov
call
inc
xor
and
dec
lret
sbb
mov
cmp
fcoml
xor
mov
fldl
push
addb
pop
sahf
xor
sbb
adc
or
inc
popa
rolb
sbb
mov
or
sbb
sbb
and
adc
xor
sub
inc
adc
rclb
ljmp
aam
push
or
push
inc
adc
mov
xorb
stos
sbb
and
ja
inc
scas
xor
sbb
or
mov
push
inc
adc
or
fisubrs
push
xor
sbbl
jo
sbb
fmuls
sbb
xor
in
lds
push
xor
fnstsw
fistl
push
xor
mov
dec
xor
inc
xor
sub
and
pop
add
jae
inc
fistpl
cwtl
and
jae
inc
ljmp
and
repz
roll
adc
jae
mov
outsb
outsl
mov
cmp
jae
subb
enter
adc
movsl
sbb
cmp
dec
adc
in
ret
fldenv
dec
adc
bound
ljmp
xlat
nop
or
dec
adc
adcb
push
mov
lahf
mov
mov
lods
mov
and
pushf
xor
and
add
nop
xchg
lret
enter
nop
cmpsl
mov
jb
mov
fwait
and
or
jge
pop
imul
mov
xchg
inc
mov
add
xchg
pusha
ficomps
lock
xor
jae
or
adc
mov
cmp
pop
inc
loope
mov
and
mov
adc
add
daa
movsb
out
lock
xchg
adc
jg
movsb
dec
scas
mov
push
jb
xchg
push
inc
adc
lret
scas
pop
cmc
cmc
in
inc
adc
or
inc
xchg
movsb
rorb
pop
js
in
jo
sub
jo
cmp
adc
js
add
and
leave
leave
and
rorl
outsb
mov
imul
orb
adc
adc
test
mov
adc
sbbl
cs
sbb
leave
nop
dec
aam
add
or
push
adc
inc
loope
dec
cltd
mov
adcl
subb
sub
mov
and
adc
sbb
adc
test
xor
and
xor
jb
add
aad
les
test
jmp
jae
roll
pushf
fs
pop
mov
mov
and
mov
xchg
xchg
or
add
adc
ljmp
es
xchg
fcoml
shlb
cmp
xor
adc
shrl
sbb
dec
and
mov
push
sar
and
sub
dec
mov
lahf
dec
xchg
sub
arpl
push
add
pop
adc
pop
dec
lret
pop
test
pop
adc
cmpsl
inc
and
inc
addr16
jg
nop
cmp
and
push
add
or
int
pushf
dec
ret
pusha
push
push
leave
sub
push
xor
daa
push
dec
mov
push
shrl
mov
mov
sub
sub
push
cmp
movsb
fst
sbb
mov
leave
shlb
arpl
mov
push
mov
add
add
in
int
adcb
rorl
mov
aaa
inc
je,pt
lods
stos
cwtl
push
jbe
inc
push
sub
loope
push
int
pushf
inc
lds
push
clc
pop
push
repnz
test
mov
ret
add
cld
cmp
in
lahf
scas
lahf
inc
jb
cmp
jne
lahf
inc
enter
pop
sbb
and
sti
adc
lret
sbbl
in
dec
pop
sahf
adc
and
sahf
push
je
faddl
or
pop
repnz
pushf
imul
loopne
add
mov
and
insl
jle
mov
mov
jle
adc
insl
push
clc
mov
jl
push
adc
pop
movsl
bnd
push
and
mov
in
push
sub
pop
lock
movl
daa
cld
or
pop
push
add
cmp
or
cmp
adcl
adc
leave
enter
sub
xor
cmp
inc
in
test
push
test
negl
cmp
xor
insb
cmc
add
outsb
pop
imull
push
jo
je
js
or
sub
insl
mov
movsl
sti
jns
dec
mov
xchg
xchg
cwtl
cmpsb
adc
push
cmpsb
push
push
adc
or
jbe
inc
inc
add
popl
cmpsl
mov
fwait
push
and
cmp
popa
js
inc
or
push
js
test
push
mov
push
add
xor
pop
pushf
mov
lods
add
sub
mov
lock
mov
xchg
shlb
rcrl
sub
mov
adc
push
or
jo
mov
lods
in
add
mov
mov
push
pop
lret
push
xor
dec
rorb
shrl
mov
mov
push
divb
adc
xchg
mov
add
mov
add
push
mov
popf
mov
sub
sub
xchg
mov
dec
pop
popf
add
fdivl
mov
shlb
adc
mov
and
xchg
mov
xorb
sub
dec
mov
add
sub
ret
jns
je
adc
fdivs
push
cmp
in
push
mov
or
pop
sbb
jmp
sbb
mov
fdivl
jns
mov
shrb
push
mov
or
add
cmp
outsb
dec
mov
loopne
mov
adcb
add
rcr
repnz
in
inc
pushf
add
je
adc
add
mov
pushf
mov
sbb
and
shrl
pop
lahf
or
js
faddl
in
mov
es
mov
sub
mov
inc
ja
or
mov
or
xlat
pop
sbb
or
mov
movsb
mov
scas
dec
xorl
add
push
inc
push
or
adc
mov
in
adc
outsl
mov
push
mov
dec
push
outsb
push
scas
dec
add
adcb
xor
lea
adc
pop
dec
mov
xchg
movsb
inc
or
mov
push
or
push
cmp
push
mov
mov
call
mov
mov
std
mov
dec
addl
mov
movsb
mov
add
loope
and
adc
addl
cmp
mov
popf
xchg
cmp
mov
mov
or
push
or
or
jge
mov
mov
push
mov
adc
shrl
loope
jno
mov
xor
mov
test
shll
adc
mov
jo
cmpsl
inc
mov
int3
mov
push
and
jo
push
sub
mov
sbb
add
cltd
test
mov
mov
in
adc
jno
adc
push
mov
add
adc
dec
push
push
jecxz
push
mov
stc
std
adc
mov
sub
int
cmp
or
lock
cmp
jl
out
push
test
mov
jne
or
xchg
pop
cwtl
cmp
mov
aaa
mov
test
mov
sbb
cmp
and
fcmovu
adc
push
loopne
add
repnz
ret
in
outsb
dec
out
lock
xchg
dec
hlt
clc
cld
add
or
popa
rorb
outsl
adc
mov
outsl
movsl
or
outsl
dec
adc
xchg
push
dec
movntps
sbb
and
add
xchg
lret
mov
sub
xor
lea
mov
xchg
dec
movsl
inc
dec
dec
push
and
and
mov
lret
movsl
push
imul
pop
test
fs
dec
in
push
je
jl
push
and
xchg
in
push
test
sbb
lret
lods
mov
dec
movsl
push
stc
aaa
mov
sub
aam
movsl
push
mov
call
in
lock
clc
cld
fdivr
pop
push
add
or
or
pop
movsl
mov
or
adc
sbb
sbb
and
movsl
jb
sbb
xor
xchg
xchg
dec
cmp
inc
inc
jns
push
sub
push
cmp
sbb
or
adc
test
adc
mov
push
cmpsl
inc
shl
les
mov
add
push
mov
add
adc
addl
mov
hlt
or
or
add
loop
sub
add
jo
dec
push
mov
repnz
or
mov
jge
fisubrs
inc
sub
mov
cmpsl
inc
loope
mov
mov
adc
mov
push
adc
cwtl
mov
stc
into
inc
pushf
call
pushf
int
cmpsl
inc
rcrl
pusha
sub
inc
sub
mov
shlb
mov
cmp
or
add
xchg
test
adc
js
faddl
pushf
add
adc
pop
dec
adc
dec
shll
push
xorb
je
mov
add
xchg
lret
or
adc
test
dec
add
rcr
rclb
mov
ficomps
push
push
push
ljmp
cmp
sub
pushf
jecxz
loop
subl
pop
inc
lret
rcl
sub
or
push
pop
sbb
pop
addr16
js
adc
aas
inc
push
rolb
fwait
push
je
call
mov
push
inc
popa
sbb
mov
pushf
popa
push
mov
ljmp
dec
leave
and
add
sub
cwtl
aas
ja
xor
adc
adc
or
or
aas
xchg
lea
addl
add
ja
adc
movsb
mov
arpl
pop
pushf
add
pop
add
int
mov
cmpsl
mov
outsb
add
popa
stos
push
mov
mov
popf
add
mov
inc
rcrl
lods
repnz
shl
loopne
cmp
mov
cmp
xchg
dec
mov
add
push
cmp
daa
or
push
dec
xorl
adc
and
mov
cmpsl
sub
xor
jmp
loop
mov
dec
add
adc
faddl
jae
mov
es
clc
test
mov
outsl
add
aas
cmp
les
push
mov
test
cmp
add
sbb
or
lods
push
aaa
mov
test
movsb
xchg
outsb
mov
add
aam
dec
scas
das
nop
fnstcw
sub
and
call
inc
or
fistps
lahf
inc
inc
push
popf
pop
adc
dec
xorl
xorb
pushf
xor
loope
aad
enter
cmpsl
mov
arpl
mov
repz
jb
stc
sub
sub
push
dec
enter
sub
les
or
pop
int
mov
xchg
push
je
inc
movq
pop
mov
jo
adc
push
mov
adc
add
push
vcmpss
inc
push
and
mov
in
jne
pop
fnstsw
push
or
pushf
add
adc
lret
ret
scas
jle
loope
dec
mov
cld
jae
inc
cmpsl
mov
mov
sti
mov
pushf
add
xor
test
loop
sub
xor
xlat
sub
mov
mov
adcb
outsb
mov
cmp
aas
mov
lcall
aas
outsl
popf
cmp
dec
add
pop
clc
jecxz
enter
in
inc
shll
pop
shlb
xchg
mov
xchg
popa
loope
sbb
mov
roll
pop
cmpsl
inc
mov
mov
inc
or
movsb
dec
sbb
pop
jno
mov
nop
shrb
push
cmp
mov
pusha
sub
in
push
mov
out
mov
inc
or
adc
sbb
add
test
icebp
inc
pushf
jae
cmpsl
add
pushf
add
add
mov
adc
cmp
sbb
add
xchg
cmp
mov
xor
sub
xchg
sbb
inc
rorl
pop
jae
or
mov
pop
shrb
jae
shrb
mov
xchg
jae
or
xchg
addl
dec
xchg
adc
in
adc
ds
adc
adc
into
inc
sub
and
das
adc
fdivrl
push
mov
inc
shll
or
inc
ret
dec
movsb
jl
cmp
inc
adc
pop
sbb
or
inc
mov
push
jo
adc
mov
fcoml
shll
adc
sub
pop
sub
adc
or
and
push
pop
cmp
test
and
test
rcll
rol
inc
adc
jb
add
mov
pusha
add
cli
adc
fwait
or
push
push
shll
adc
push
mov
jo
stos
shll
rcrl
or
inc
sub
jae
shrl
push
pop
or
js
rcll
jns
adc
sbb
gs
push
sub
inc
push
push
data16
xor
add
push
icebp
or
inc
jg
cmp
rcll
adc
and
shll
jle
fmuls
mov
inc
or
push
ror
adc
and
ja
pop
sbb
rcll
adc
adc
pop
ret
pop
ret
cmpsl
das
adc
mov
mov
push
add
ret
sarl
inc
loope
rcr
add
cwtl
rcr
push
jp
nop
ret
aas
loope
mov
add
test
jge
bound
pop
pop
test
shll
sub
push
and
popa
sahf
or
push
rcll
pushf
push
push
rcll
push
mov
es
addb
push
mov
inc
add
mov
sbb
jb
js
sub
dec
not
xchg
push
in
inc
jl
jl
in
mov
adc
lods
aad
ret
shr
add
dec
inc
mov
rcl
push
push
sub
int3
rorl
add
roll
or
add
lock
mov
mov
sar
pop
or
sarl
or
or
pop
xor
mov
push
cmp
rcr
jp
push
cwtl
sub
shrl
adc
add
cltd
push
cmp
mov
sub
push
fimull
add
roll
sbbb
scas
xor
xor
adc
ror
jg
pop
inc
popa
ror
fwait
or
push
cmp
ja
sub
push
dec
nop
or
mov
push
mov
decl
add
adc
sub
xchg
jo
sub
push
cmp
mov
push
mov
sbbb
adc
cmp
test
js
cmpsl
push
pop
inc
test
shll
sub
push
mov
inc
loope
stos
shrl
shll
cmp
rolb
or
mov
push
add
das
inc
cmp
shll
shrl
add
enter
addl
sbb
aaa
test
psrad
inc
sub
insl
lock
stc
add
rcll
or
enter
add
mov
push
in
xchg
add
outsb
dec
or
popa
jle
mov
add
test
add
test
test
sbb
ja
add
or
inc
or
cmp
xchg
enter
test
scas
mov
adc
rcrl
imul
cwtl
xor
xchg
inc
add
add
mov
roll
and
fmull
or
and
push
js
and
dec
out
jns
or
xchg
xchg
mov
adc
add
adc
roll
xchg
inc
addb
jl
inc
test
sarl
sub
mov
jbe
mov
cmp
sub
or
or
lret
call
sub
loop
sub
popf
fsubs
lock
inc
rol
cs
jmp
lods
push
mov
mov
sbb
subl
push
or
add
or
jle
adc
insl
sbb
add
dec
cmp
add
push
and
inc
sbb
adc
xor
xchg
jo
addr16
and
lods
test
and
xor
addb
fadds
or
mov
xchg
jl
cltd
or
and
fcmove
and
dec
mov
and
ss
test
and
mov
push
and
data16
mov
jecxz
mov
adc
pop
dec
test
xchg
inc
nop
addl
rcll
xor
mov
or
adc
ret
in
or
mov
rcl
mov
les
arpl
xchg
les
xchg
out
xor
pushf
es
and
pushf
cmp
and
push
add
mov
or
mov
push
enter
mov
data16
or
fdivrs
and
mov
mov
shll
shl
mov
mov
adc
mov
decl
fadd
jmp
or
sbb
adc
adc
cltd
push
push
into
jecxz
sar
aaa
cli
add
adc
outsl
test
cmc
call
or
test
sarl
add
outsb
andl
push
jnp,pn
fbld
test
add
aaa
fsubl
pop
jb
cmp
in
jb
adc
leave
leave
in
and
outsb
adc
xchg
xchg
or
pop
jo
adc
shrl
inc
cmp
push
mov
sub
roll
adc
lods
mov
cld
arpl
dec
cs
daa
or
jo
pushf
pushf
pop
dec
mov
cmp
mov
in
jb
pop
js
push
or
inc
addl
hlt
jb
add
pusha
es
das
test
test
lds
adc
add
push
mov
sub
roll
jne
sub
xor
mov
adc
test
add
jmp
xor
inc
dec
mov
test
roll
inc
popa
aam
addl
rcrl
inc
rol
ljmp
aad
push
push
sbb
inc
push
sub
dec
roll
add
pop
xor
adc
sub
icebp
push
cs
push
cmp
xor
inc
add
out
adc
adc
xlat
sub
sbb
adc
fs
inc
loope
add
mov
push
or
add
add
add
test
shrb
push
adc
mov
sar
mov
push
adc
sub
xchg
mov
and
fiadds
adc
adcl
jns
and
jmp
loope
xchg
mov
das
mov
mov
faddl
push
rcrl
sub
add
or
stc
mov
dec
arpl
lock
adc
rorl
inc
cmp
in
sbb
mov
or
call
inc
inc
insb
rcll
adc
xor
cmp
or
shll
addr16
xor
ret
push
rcl
jae
inc
adc
test
test
jnp
testb
or
aaa
loopne
scas
or
mov
sub
mov
adc
stc
in
aam
inc
adc
shl
fsubs
or
mov
or
pusha
out
and
inc
sub
pop
cmp
adc
fcoml
push
shll
fs
addr16
or
loop
push
sbb
iret
frstor
pop
test
dec
in
adc
aam
sbb
or
and
sarl
rorl
fisubrs
add
ret
inc
sub
aaa
xor
or
jmp
mov
mov
or
pop
loope
addr16
mov
push
les
push
cmp
and
push
and
xor
shrl
xor
adc
test
and
shl
ret
les
ljmp
into
pop
mov
ficoml
push
mov
rcrl
push
pushf
cltd
inc
loope
and
ja
adc
adc
shrl
bound
fstl
or
sbb
dec
ss
cmp
xchg
cmpsl
sub
push
sub
jne
sub
push
cmp
push
mov
mov
push
mov
sbb
mov
adc
pop
stc
or
rcll
pusha
pop
sbb
mov
hlt
sbb
pushf
out
dec
imul
sbb
sub
roll
or
jbe
add
hlt
push
sbb
repnz
mov
test
shll
imul
adc
cltd
jg
rorl
adc
in
lea
jmp
adc
shrl
push
ja
or
dec
sbb
fisubs
loopne
adc
adc
pop
or
jns
xchg
shrl
sbbb
pop
jmp
cmovb
and
xor
adc
push
push
scas
or
push
xor
das
jnp
in
outsl
or
jmp
in
jbe
cltd
jb
cmp
and
push
mov
loope
mov
xchg
adc
inc
sarl
sub
add
push
and
mov
leave
into
or
jnp
add
and
data16
add
sub
adc
outsb
sub
mov
jo
or
test
mov
add
or
shl
fsub
add
pop
push
inc
loope
inc
roll
sub
add
cmp
fucomp
lea
push
mov
mov
fmuls
mov
test
test
test
test
or
roll
or
aad
and
aad
call
or
adc
inc
addl
or
sub
or
sub
cmp
or
adc
inc
mov
add
add
add
adc
sub
movsl
les
test
and
or
add
cmp
sahf
testb
and
push
sbb
imul
and
gs
out
xchg
cmpsl
call
insb
pop
ljmp
push
repz
cmp
repz
stos
mov
stc
pop
sub
imul
out
sub
out
test
or
push
imul
jnp
rorb
push
or
sahf
out
push
push
and
lahf
out
push
pop
push
and
xchg
add
cs
rcr
push
mov
cmp
aad
cmp
pop
mov
add
add
add
shll
adcb
sarl
xchg
inc
pop
lock
in
sar
mov
roll
jo
mov
or
add
sub
sarl
and
orb
adc
sti
aam
push
repz
pop
add
or
pusha
add
addb
mov
and
shll
inc
rcr
push
enter
into
mov
push
test
jo
or
arpl
rcrb
push
adc
cmpsl
inc
rcll
fadds
add
adc
push
push
push
test
inc
xchg
ret
push
shll
mov
shl
add
enter
inc
sarl
adc
push
shll
rcrb
sub
xchg
pop
movsb
push
jo
xor
cld
xor
mov
sar
xor
and
ror
mov
mov
adc
add
mov
outsb
roll
push
roll
push
xchg
roll
and
sarl
shll
mov
lcall
add
imul
pop
out
push
and
or
sub
sbbb
or
cwtl
xchg
outsl
shll
adc
adc
pushf
roll
xchg
popf
mov
push
push
test
rcll
ror
and
cmp
mov
movsb
lods
inc
and
rcll
mov
or
mov
xchg
xor
push
mov
mov
aad
or
roll
sbb
inc
sub
mov
ret
fcom
push
mov
es
sub
cmpsb
sarl
cmp
push
jo
sbb
jle
int
push
jo
sub
sub
mov
rorl
add
rcll
pusha
paddusw
add
push
jle
mov
ret
inc
sub
das
ss
or
add
or
dec
out
inc
addl
sub
dec
mov
rorl
sbb
andb
stos
push
mov
xor
int3
and
adc
sbb
roll
add
mov
xchg
lods
inc
rorl
adc
sub
mov
ror
cs
push
std
dec
xchg
push
pop
int
jecxz
push
sti
sbb
adc
ret
rcll
pusha
das
mov
mov
adc
mov
pop
js
sarl
or
mov
es
mov
inc
mov
rorl
add
shll
nop
or
push
mov
icebp
and
rorl
and
fcoms
adc
push
roll
movsb
nop
stos
pop
shl
pushf
jl
sbb
mov
push
sbb
dec
inc
addl
leave
mov
in
xor
adc
jne
or
jb
testb
rcl
dec
mov
or
mov
out
rorl
adc
mov
push
adc
orb
push
mov
mov
dec
flds
ret
push
sarl
test
rcll
mov
and
mov
inc
cmpsl
aas
mov
push
mov
xchg
xor
sub
mov
addl
mov
add
push
mov
adc
and
roll
sbb
sbbl
lahf
and
add
fmuls
jns
or
popa
andb
in
ljmp
sub
fsubr
push
roll
int3
jno
test
or
shrl
or
pop
inc
test
ds
push
sbb
loope
iret
dec
push
push
dec
jmp
push
jne
aaa
sbb
add
repnz
int3
dec
dec
inc
dec
add
jmp
lock
roll
rorl
inc
jae
adc
pushf
jle
adc
adc
and
cmp
jle
jno
add
push
sbb
sbb
test
xchg
mov
roll
test
xor
xchg
mov
push
test
add
mov
push
js
shl
jp
adc
push
and
dec
and
xlat
imul
pop
mov
adc
xchg
cmp
push
rcr
ljmp
or
test
rorl
add
push
sub
test
add
sub
push
fidivrl
ret
adc
arpl
test
iret
or
cld
ds
mov
test
xchg
loope
inc
sub
pop
fsubs
ret
push
js
inc
pop
decb
setnp
dec
sub
es
push
test
test
shl
push
jbe
sbb
jle
inc
shll
add
push
inc
test
lds
ror
pop
or
inc
rol
push
adc
or
push
adc
rcll
in
push
sub
or
in
adc
adc
cli
inc
sbb
pushf
lret
out
pop
cwtl
and
inc
xchg
adc
add
or
or
cwtl
or
or
add
pop
jno
xor
and
rcl
xchg
shll
push
clc
jne
jmp
rolb
mov
lock
aam
mov
pop
adc
adc
cmc
or
rorl
add
sbb
add
movsb
push
inc
das
or
xor
sub
inc
loope
roll
out
sub
test
shl
push
sub
xchg
xor
cmp
test
or
jo
mov
mov
push
fs
or
inc
inc
sub
rcrl
xlat
sub
rorl
roll
lcall
or
test
jnp
jns
adc
fcoml
rorl
add
or
cmp
and
or
mov
rdtsc
mov
inc
repz
sub
adc
sub
test
sub
push
adc
mov
or
sub
push
mov
call
push
push
adc
dec
or
push
or
loope
daa
mov
int3
and
pushf
pop
shrl
xchg
daa
xchg
mov
pop
mov
outsb
adc
adc
rcrl
cmp
pop
mov
lret
add
ret
shrl
push
js
cmp
in
push
shl
mov
or
push
ror
push
fisttpll
pop
add
outsl
sbb
test
or
jns
pusha
mov
bound
cmp
push
mov
add
adc
insb
mov
or
shll
dec
lea
ret
sub
adc
adc
repnz
adc
bound
cmp
adcl
or
xlat
imul
or
mov
pusha
xor
add
jge
mov
add
rcr
bound
cmp
push
push
dec
test
rcll
fcoml
cmpsb
rcll
mov
insl
stos
push
mov
adc
jae
icebp
pop
insb
push
mov
adc
dec
test
push
sub
call
sub
daa
enter
sarl
inc
sub
nop
jbe
add
cmpsb
lea
add
inc
rcll
ds
mov
xor
cwtl
test
shrl
cwtl
pop
in
add
sub
xor
cs
xor
nop
xchg
fwait
adc
rcrl
ret
imul
adc
mov
add
fs
push
test
sub
inc
shrl
push
mov
leave
push
rol
sub
and
add
cmp
sub
out
xor
ret
ds
xchg
dec
lcall
lods
call
sbb
outsl
cmp
and
xor
into
dec
cmp
mov
sub
push
rorl
sub
or
or
push
xor
outsb
xor
rolb
add
and
ror
or
inc
shll
rcl
xchg
cmp
adc
mov
push
adc
adc
mov
add
adc
adc
mov
stos
mov
andl
outsl
jmp
push
inc
cmc
and
roll
data16
dec
add
add
test
aaa
test
test
sub
or
push
adc
adc
test
test
pop
roll
inc
or
out
lcall
aas
mov
push
sbb
dec
test
test
orl
insb
jns
sub
inc
scas
sub
in
mov
es
or
sti
into
addl
add
mov
dec
shll
sub
sbbb
cwtl
stos
in
adc
add
jg
ret
or
push
aad
inc
add
sbb
dec
pushf
xchg
lret
add
fistps
out
push
cmp
sbb
sub
in
lret
mov
mov
aaa
push
sub
or
roll
repz
push
mov
push
or
rorl
ljmp
xchg
push
inc
loop
nop
mov
je
inc
loope
push
ror
xor
sub
mov
push
sbbl
sahf
loopne
enter
push
mov
sarl
push
mov
adc
adc
roll
sbb
enter
loope
cmp
inc
adc
xor
shlb
popa
movsb
push
rorl
inc
mov
jecxz
push
roll
adc
or
shlb
adc
pusha
test
add
adc
cmp
stos
sub
adc
mov
addl
adc
inc
add
mov
mov
pushf
inc
add
mov
repnz
mov
cmp
or
or
test
test
scas
sbb
push
mov
or
loop
push
leave
shrb
push
bound
sub
add
adc
mov
stos
pop
xor
sarl
pop
adc
lods
cmpsb
rcrl
cmpsb
and
lahf
rcr
mov
roll
loop
test
sbb
ja
roll
shll
mulb
adc
shll
or
or
ret
xor
imulb
inc
dec
push
shll
inc
adc
or
aam
ja
push
mov
adc
add
loopne
or
in
popa
jno
push
rcll
mov
sub
movsb
roll
sub
push
add
shll
and
ror
repz
push
jne
mov
sub
cmp
scas
sub
xor
sbb
push
sub
rcrb
adc
in
sbb
test
mov
or
add
ljmp
adc
movsb
loopne
addl
jnp
pop
fisubrl
and
push
shrl
rcrb
pop
sub
adc
cmp
inc
add
pop
xchg
and
call
push
or
pop
shll
nop
rcll
das
jmp
das
adc
rcll
or
bound
inc
shlb
movsl
addl
inc
rorl
xchg
sbb
mov
jbe,pt
cs
roll
cmpsb
or
mov
sahf
push
add
dec
sub
sub
roll
ret
adc
out
adc
adc
push
mov
dec
mov
pop
adcb
gs
cltd
addr16
ss
sub
ljmp
test
ret
sub
mov
inc
shll
mov
movsb
sbb
xor
gs
jae
or
pushf
je
xchg
int3
add
sub
mov
pop
or
add
shll
mov
jo
ret
adc
test
mov
loopne
roll
push
jnp
and
pop
sti
and
shl
cmp
call
das
aas
mov
cmp
mov
inc
sub
roll
out
into
roll
add
test
sarl
addl
or
rcll
pusha
daa
cld
and
push
sbb
or
push
sub
shufps
or
cmc
add
jl
les
fisubrl
inc
rol
xor
sub
pop
sub
clc
jmp
push
cmp
inc
xchg
adc
fcoml
jp
push
cmp
shll
daa
and
aam
sub
add
imul
jns
bound
inc
sarl
or
add
push
mov
push
or
sub
jno
pushf
adc
add
adc
roll
and
adc
or
loope
inc
das
mov
mov
mov
inc
sub
cmp
mov
sub
fdivrl
sub
and
pusha
and
dec
mov
shll
adc
sbb
or
sbbl
shll
out
jns
out
push
int
pcmpgtw
inc
sub
rcrb
and
cmp
jo
out
jns
fbld
push
add
jl
push
rol
inc
adc
inc
adc
or
pop
sub
sub
rorl
and
or
add
xchg
jecxz
outsb
mov
rcll
sub
popf
sub
inc
rcl
loope
and
scas
mov
cmpsb
mov
add
and
test
aad
loopne
stos
push
shll
adcb
and
push
rcll
xor
adc
roll
daa
fbld
push
imul
pop
lods
fldt
mov
pop
adc
cmp
ja
outsl
repz
je
nop
mov
jmp
inc
sub
push
adc
cmp
mulb
js
pop
sub
test
roll
sbbb
testl
adc
roll
ret
jo
mov
fdivrs
and
dec
sbb
or
jo
scas
push
adc
add
cs
mov
ficoml
inc
loope
shll
pushf
ror
rorb
inc
dec
pop
mov
adc
adc
test
sub
fwait
pusha
rcrl
add
adc
fldenv
xchg
sti
and
pushf
inc
shr
and
jecxz
inc
stos
push
mov
mov
rorl
rcll
pusha
psubw
mov
or
and
cmp
mov
push
sub
nop
sub
adc
cmp
sarl
shlb
lahf
sub
push
int
repz
adc
mov
popf
and
rcrl
inc
shl
mov
or
mov
outsl
stos
push
imul
in
ds
or
rcll
mov
inc
loope
ja
and
push
ss
adc
push
push
mov
or
add
jb
test
test
sub
fnstsw
je
shll
mov
or
pushf
lret
sub
jmp
push
cltd
pushf
test
push
sub
xchg
test
shll
jmp
pop
pop
mov
push
rorl
adc
push
cmpsl
inc
rorl
rorl
add
rol
jno
inc
adc
ret
jnp
rcll
inc
inc
or
popa
add
mov
popa
popf
inc
add
inc
addl
jmp
adc
add
roll
movsb
or
or
push
sbb
roll
aaa
aaa
stc
cmp
fmul
cli
sbb
push
push
pop
cmp
adc
adc
push
xchg
mov
or
adcb
leave
lea
or
jae
ss
rcrl
push
mov
cmp
pushf
adcb
jg
xor
sbb
test
add
roll
or
aaa
inc
mov
daa
or
inc
sub
push
rorl
add
roll
mov
push
pop
fmuls
dec
adc
push
mov
adc
roll
cmp
hlt
hlt
add
add
mov
adcb
pop
add
lds
jge
and
fsubrl
divl
mov
cmp
rcll
adc
jnp
mov
sbb
push
insl
rcrl
push
sbb
cld
sbb
mov
adc
push
lock
mov
push
into
fadd
push
sub
loop,pt
adc
adc
jno
or
add
lods
adc
adc
rcll
syscall
sarl
sbb
xor
add
or
mov
xchg
pusha
shrl
adc
fsubrl
pop
loopne
es
test
test
or
rorb
mov
or
jnp
add
push
or
adc
adc
adc
les
sti
add
mov
inc
loope
xchg
outsl
sbb
in
addl
shll
mov
jo
xchg
xor
cmc
mov
dec
inc
jo
nop
xchg
repnz
test
push
imul
shll
roll
ret
rcll
adc
sub
jb
test
or
or
add
sbb
fisubrl
cmp
pop
adc
psubw
push
and
mov
pop
enter
cmp
push
leave
push
shl
sbb
shll
mov
roll
into
sbb
sub
roll
push
mov
int
jbe
stos
shll
insl
or
mov
mov
adc
adc
push
jb
fnstcw
adc
jne
iret
repz
cmp
bound
sub
ja
xor
out
fwait
inc
mov
jns
test
test
cmp
shlb
jo
nop
int3
mov
push
rorl
int
add
adc
inc
ja
or
test
mov
push
and
sub
rorl
pop
adc
mov
das
shlb
pop
or
rcll
loopne
fdivrs
xchg
aad
aas
push
sub
adc
adc
pop
push
sbb
sbb
adc
and
mov
mov
pop
test
and
pop
push
xchg
test
pop
sub
jns
movsb
xor
and
out
or
push
pop
xor
andb
scas
jp
adc
in
rorb
andb
fidivrs
lret
sub
mov
mov
adcl
mov
xor
in
jo
push
xchg
add
movsl
mov
ficoms
int3
icebp
xor
add
dec
mov
cmpsb
cmp
xor
push
gs
xor
xor
mov
cmp
push
xor
mov
sbb
xor
jecxz
stos
sub
ja
gs
jo
xor
add
push
push
push
xchg
test
in
or
pop
inc
inc
lcall
pop
pop
xchg
and
and
mov
cmp
and
ret
lret
sbb
jg
push
test
sub
push
or
nop
mov
test
xor
mov
push
gs
push
repnz
push
jo
push
je
pop
scas
sbb
sub
mov
jns
dec
ret
jmp
stos
sbb
sbb
mov
or
dec
orb
test
and
jo
xor
mov
or
lret
cltd
lret
and
pop
or
lods
xor
in
mov
fs
push
jb
cmp
push
xor
push
or
loopne
cwtl
sub
cwtl
lcall
xchg
jo
mov
push
jg
push
sub
scas
add
or
push
mov
push
inc
xchg
and
pop
cmp
xchg
and
push
push
js
pop
inc
repnz
fs
push
mov
adc
push
rcrb
or
dec
push
xchg
nop
cmp
leave
push
orb
xchg
and
inc
dec
xchg
push
popa
call
inc
out
xchg
cmp
mov
push
dec
xchg
add
push
push
lahf
sub
outsb
pop
push
test
xorl
je
imul
es
push
dec
sub
fcompl
loope
push
xlat
leave
xchg
loopne
push
nop
push
lcall
dec
xchg
test
cmpsl
es
adcb
or
sbb
call
inc
adcb
pop
and
loop
dec
push
push
es
dec
adc
pop
fadd
xor
push
jo
xchg
test
xchg
and
inc
dec
loop
lret
dec
dec
add
std
xchg
jo
fs
test
push
cmp
leave
push
sbb
push
adc
cwtl
sub
push
hlt
sbb
push
mov
mov
in
cmpsl
mov
insl
xor
adc
call
mov
dec
lock
inc
add
pop
adc
or
xor
cwtl
cwtl
sub
pop
popa
xor
push
push
lcall
push
pusha
mov
cwtl
sub
into
sti
sbb
lock
dec
ret
loop
add
push
clc
xor
inc
mov
sbb
jb
push
inc
xchg
push
and
pop
push
out
or
mov
lock
cwtl
pusha
mov
push
fmuls
jmp
xchg
testl
dec
mov
aas
sarb
adc
and
push
adc
add
je
adc
test
adc
push
insb
and
inc
adc
push
and
jne
js
ljmp
and
add
dec
adc
dec
leave
xlat
push
repz
sbb
and
dec
xchg
test
adc
pop
adc
adc
pop
jne
fiaddl
xchg
addl
lods
das
adc
and
test
cwtl
bound
shll
call
jae
mov
fsubl
push
call
je
jecxz
aam
or
adc
dec
movsl
mov
or
mov
ret
xchg
lock
mov
daa
inc
mov
leave
call
out
loop
jae
cmp
aaa
jo
jae
int3
and
cmp
mov
fsubl
mov
xchg
ljmp
jae
or
loope
xchg
or
jae
push
dec
ret
xor
mov
or
jae
add
pop
push
aaa
push
call
xchg
test
cs
dec
ret
adc
xchg
loopne
push
xchg
add
xorb
dec
dec
sbb
jo
push
dec
ret
jae
xchg
cld
add
xchg
add
mov
mov
mov
loopne
pop
adc
lods
jae
loopne
dec
loop
sbb
aad
fisttpl
mov
ret
jae
cmp
dec
ret
in
ret
xchg
mov
jae
popa
dec
jo
jae
xchg
test
adc
cltd
scas
jae
and
pop
mov
mov
jae
sub
jo
dec
shll
je
push
dec
ret
cmp
mov
jl
shr
scas
clc
push
decb
xchg
pop
adc
sbb
dec
inc
add
test
cmp
sub
jmp
dec
jae
xor
xchg
movsl
ret
xchg
jae
jo
xchg
cmpsb
ret
xchg
jae
mov
sbb
test
or
aam
add
cmp
mov
jae
push
pop
ja
adc
xchg
dec
and
aad
or
push
jae
jg
or
adc
and
inc
shlb
cmp
inc
shll
jae
inc
or
test
lahf
call
and
cmpsl
jae
testl
adc
sub
sub
jnp
and
cmp
push
push
jae
inc
jmp
test
pop
lret
sbb
dec
sbb
add
mov
push
push
jae
cmpsb
xchg
sub
sub
jae
sub
mov
es
adc
jmp
jo
adc
js
cmpsb
cmp
mov
cmp
and
push
test
cmpsl
cmp
jae
out
add
or
lock
outsb
sbb
jae
roll
push
xchg
rolb
jae
xchg
inc
sbb
mov
jae
ss
and
jne
jae
push
loope
loopne
jae
xor
and
add
shlb
sub
ja
call
scas
sarl
mov
fcoml
dec
adc
cmpsb
loopne
lcall
dec
sbb
enter
mov
jae
sub
jae
and
or
adc
push
pop
loop
sub
cwtl
jg
mov
fmull
jae
test
adc
jl
fisttpll
fisttps
mov
inc
loopne
lock
or
fwait
cmp
aas
jo
test
popa
dec
jae
movsb
ljmp
test
add
mov
fsub
jae
jne
dec
ret
jae
pop
pop
add
jae
dec
mov
push
or
mov
and
push
cmp
xor
mov
popa
enter
testl
or
mov
lret
jae
les
adc
dec
shr
mov
jae
add
and
mov
iret
or
xchg
sub
jne
popa
dec
jae
sbb
jae
pop
push
push
clc
xor
pop
jae
push
aam
dec
jae
adc
xor
jae
pop
cmpsl
add
add
add
and
inc
or
push
sbb
dec
dec
inc
femms
dec
jae
push
adc
pop
adc
jae
test
je
aad
jo
pop
sbb
stos
push
jo
ret
xchg
jae
les
dec
xor
les
les
cmpsb
ret
xchg
jae
scas
jnp
xchg
dec
loope
iret
xor
arpl
jae
sub
cmpsl
push
xchg
jae
adc
je
adc
pop
adc
jne
out
inc
andb
jae
or
mov
and
xor
popa
jae
les
and
adc
jl
rcrl
jle
inc
add
inc
xchg
jo
sbb
jae
sbb
add
call
pop
mov
jbe
adc
fmuls
and
out
les
clc
adc
mov
pop
jae
xor
mov
xor
fst
popa
jae
cmp
sarb
jge
lods
arpl
outsb
cmp
lcall
dec
mov
push
dec
ret
and
and
movsl
pop
daa
push
xor
adc
or
cmp
jae
jo
das
rolb
mov
ret
jo
ret
jae
add
sub
mov
xchg
jo
sub
leave
sub
test
jae
mov
mov
push
xchg
rol
popa
jae
inc
les
jae
mov
jae
test
xor
lds
sbb
fdiv
test
sbb
and
dec
cmp
sbb
xchg
insb
and
fsubl
je
adc
add
and
stos
and
mov
rorl
push
dec
addb
jae
mov
xorb
push
dec
ret
xchg
ret
xchg
pusha
ss
adc
daa
test
ja
mov
sbb
pop
jae
cmp
shlb
jae
pop
xchg
loope
repnz
or
mov
jae
push
dec
sbbb
sub
jbe
popa
fildl
push
fcoms
and
push
jae
cwtl
pop
inc
or
jp
scas
loop
jae
ficoms
aaa
jo
adc
and
sbb
jae
ret
push
fcoms
sahf
mov
mov
dec
mov
shlb
mov
jae
cwtl
rorb
cmp
and
shlb
jae
sub
insl
jecxz
dec
ficomps
out
and
lods
jae
dec
mov
jnp
cmp
dec
cmp
add
jae
or
dec
or
cmpsb
jmp
popa
dec
jae
add
outsb
sbbb
repnz
into
push
mov
or
xchg
clc
mov
call
test
add
push
imul
iret
jnp
mulb
das
xor
mov
scas
mov
pop
mov
pop
fisubrs
in
push
in
ficomps
inc
inc
fnsave
clts
mov
ret
nop
xchg
mov
xchg
jae
scas
add
sub
pop
adc
daa
sbb
jmp
aas
je
or
and
shrb
jae
sbb
fisubs
btl
loopne
std
test
cmpsb
loopne
jae
jno
adc
jo
cs
ret
jae
xor
sub
aad
shlb
lahf
std
add
or
or
repnz
sub
or
adc
inc
shll
jae
scas
ret
and
xor
dec
jae
popf
xor
add
add
repz
or
jne
add
and
jae
dec
mov
xor
andb
add
jae
lock
cmp
out
sub
inc
loope
mov
sbb
jae
pop
les
xor
mov
imul
mov
jae
daa
and
test
neg
xchg
push
aas
push
call
fldln2
fcomp
ja
iret
cmp
and
test
daa
mov
xchg
ret
popa
dec
cwtl
sbb
pop
adc
aam
jnp
sub
ja
jae
xor
add
jae
push
test
aam
jae
dec
cltd
jp
xchg
jae
iret
ret
xchg
pusha
lock
jnp
jae
add
adc
xorl
add
or
jae
rorl
jae
dec
fisttpl
dec
inc
mov
aam
jae
add
mov
adc
sub
inc
push
mov
jae
pop
ljmp
sub
out
inc
xor
xchg
jo
jb
dec
arpl
add
push
xchg
jns
iret
xorl
xchg
adc
mov
jo
adc
mov
loopne
adc
push
xchg
test
jmp
jae
pop
movsl
aad
in
sub
adc
ret
sarb
and
cmp
jae
add
dec
xorb
mov
cmp
jo
clc
sbb
and
out
dec
sub
testl
jae
pop
les
clc
adc
adc
or
xchg
or
push
push
icebp
xor
or
cmp
lcall
movsl
pop
push
dec
ret
jae
addb
and
pop
push
jae
or
jo
adc
ret
xchg
nop
jbe
das
or
adc
insb
inc
xorb
mov
jno
test
decl
sbb
and
aam
jae
je
mov
pusha
and
shlb
call
ret
mov
push
jae
and
pop
hlt
jae
lahf
rorb
daa
dec
and
ret
call
sti
or
jae
test
mov
xchg
test
mov
jae
lret
mov
push
dec
jae
xchg
nop
bound
mov
mov
sub
mul
jae
sarb
ret
jae
sub
orl
jge
popa
jae
sbb
adc
cltd
sub
ljmp
inc
xchg
xchg
int3
push
cmp
jae
dec
sbb
pushf
les
jae
testb
jo
shll
or
inc
xor
dec
sbb
add
in
ss
xchg
lds
sbb
ljmp
ret
xchg
xor
ljmp
cmp
pusha
xchg
jae
ja
and
mov
hlt
or
and
cmp
loope
fmul
call
sub
sbb
ret
and
push
jae
add
mov
data16
inc
add
bound
jae
xchg
inc
xchg
in
ret
xchg
jae
jbe
adc
pop
jae
adc
xchg
cld
push
xchg
push
jo
sbb
pushf
int3
mov
jae
fmull
dec
and
shll
test
bound
je
adc
xchg
dec
bound
and
and
pop
adc
mov
ret
xchg
and
jae
sub
testb
jae
ret
movsb
or
bound
push
jae
fcomps
push
dec
jae
xor
popa
dec
sbb
testl
fs
popa
dec
mov
xchg
loopne
scas
cmp
adc
or
push
dec
jae
sbb
cmp
add
sbb
pop
dec
addb
adc
in
hlt
leave
rorb
sub
xchg
mov
xchg
jae
and
jae
pushf
out
dec
jae
sahf
xor
outsb
out
mov
lock
push
xchg
jns
pop
pop
dec
lds
sub
lcall
jae
pop
adc
jmp
and
xchg
test
scas
ror
jae
xchg
jo
jge
jnp
repnz
iret
pop
jnp
xchg
test
and
dec
cmp
data16
fistpll
jae
lds
push
xchg
jo
popa
jae
in
or
ret
jae
into
bound
rcll
pop
inc
adc
test
add
push
sarl
movsb
adc
lds
jae
out
add
lods
test
pop
sbb
jae
dec
push
or
dec
jae
dec
js
or
jle
rolb
jae
pusha
xor
mov
xchg
jp,pn
sbbl
dec
sbb
mov
and
aad
or
popa
call
mov
popa
and
mov
je
push
push
xor
fadds
aad
in
jo
mov
jns
in
roll
js
cmpb
lret
call
imul
fidivrl
push
dec
cmp
xorb
cs
mov
aaa
jmp
mov
lods
fidivs
xchg
pusha
adc
mov
push
or
popa
jae
sbbb
enter
sar
arpl
in
je
add
or
push
cmp
pop
xchg
sbbb
sub
and
roll
repnz
and
shrl
ret
and
sbb
testb
xchg
rcr
ljmp
push
test
and
pop
push
cltd
xor
and
inc
sar
push
inc
push
xor
xchg
hlt
dec
orb
movsb
jo
pushf
mov
leave
mov
mov
sub
dec
or
movsl
jb
jl
xor
cmp
fs
jno
lret
test
and
sub
out
cmp
shll
xchg
ret
xor
inc
and
cmp
ret
and
and
xor
push
dec
inc
rcl
lret
xlat
sub
push
and
nopl
rorl
aaa
shlb
fbstp
mov
xlat
nop
inc
and
roll
cmp
push
mov
aaa
and
push
cmp
add
enter
cmp
add
and
cmp
fs
nop
sub
cmpb
cmpsb
in
jl
orb
pop
insb
add
test
pop
in
sbb
lods
jo
nop
add
sar
inc
inc
push
js
sarl
mov
mov
lods
adc
push
xchg
adc
rcll
mov
pop
sbb
dec
or
dec
cmp
or
or
xchg
pop
scas
leave
add
dec
orb
inc
mov
test
xchg
cmpsl
in
inc
jg
repnz
jge
mov
cwtl
inc
lahf
mov
add
mov
add
push
pop
shll
push
movsb
jnp
pop
cmp
add
dec
movsl
repnz
mov
adc
nop
sbb
dec
mov
repz
add
xor
jb
dec
mov
sbb
sub
push
jno
xor
movsl
inc
shl
adc
shrb
sub
add
js
push
add
shlb
sbb
mov
repz
dec
mov
xchg
loope
sbb
adc
test
dec
fcoml
adc
popf
je
mov
mov
adc
mov
dec
cltd
inc
mov
repz
stos
sbbl
test
sub
pop
mov
sbbl
lret
repz
shlb
es
adc
mov
stc
xor
adc
mov
repz
adc
mov
repz
sbb
repz
loop
repnz
and
int3
mov
sub
and
test
std
loope
test
mov
repz
and
cli
mov
sbb
fbld
cmpb
adc
xor
push
ficoml
mov
push
jno
and
and
mov
inc
adc
add
add
bound
inc
addr16
cltd
mov
pop
adc
hlt
insb
push
push
push
outsb
and
inc
adc
lea
bound
xor
push
adc
sub
bound
add
adc
xchg
adc
loopne
lods
sbbb
pop
adc
int3
adc
or
test
loop
mov
enter
xorb
test
scas
fsubs
or
outsb
sbb
bound
cs
test
dec
fcoml
push
adc
push
pop
adc
pusha
push
add
dec
push
imul
adc
sbb
add
or
adc
test
mov
push
jb
faddl
and
sub
data16
sbb
inc
loope
adc
adc
test
add
mov
xchg
jnp
dec
or
sub
sub
adc
cmp
adc
and
jne
fcoml
pop
adc
mov
test
sbb
mov
adc
mov
bound
adc
mov
adc
fcoms
fnstsw
in
imul
push
push
adc
rcrl
or
adc
icebp
jo
inc
rcl
adc
loopne
adc
mov
push
mov
gs
mov
adc
mov
ret
inc
push
push
mov
add
push
insb
adc
test
inc
adc
daa
jmp
mov
popa
push
adc
adc
push
mov
sub
sbb
and
adc
push
stos
clc
and
or
mov
push
ret
sub
adc
push
insb
push
pop
adc
jle
add
sbb
imul
inc
adc
adc
insb
push
jo
pop
push
pop
dec
inc
adc
adc
insb
adc
or
adc
pop
adc
inc
sbb
in
mov
add
mov
lds
test
adc
ja
push
lds
add
sub
add
xor
adc
mov
push
adc
ret
and
xor
push
insb
adc
mov
mov
xor
xchg
or
jnp
sub
adc
xor
mov
loope
mov
loop
xor
enter
adc
fadds
adc
insb
push
mov
testl
es
rcrl
adc
cmp
adc
adc
ret
pop
adc
add
adc
sub
and
mov
pusha
ss
adc
jl
orl
adc
fsubrs
adc
test
or
mov
push
sbb
mov
and
add
stc
xchg
adc
in
mov
cmp
mov
push
mov
sub
test
inc
insb
adc
mov
pop
adc
mov
push
mov
insb
push
mov
adc
xchg
dec
rol
sbb
sub
insb
push
pop
loop
adc
mov
push
cmp
loopne
adc
lock
adc
movsb
sub
sub
sbbl
out
sub
sub
adc
or
cmp
mov
mov
and
sub
mov
adc
mov
push
mov
mov
jno
and
inc
insb
adc
adc
orl
adc
adc
pop
sub
lods
mov
aaa
shrl
sub
out
test
jle
mov
test
inc
insb
push
adc
mov
sbb
ret
adc
es
adc
pop
adc
int
pop
adc
adc
push
sbb
adc
pop
ror
fimuls
cmp
adc
popa
jecxz
sub
inc
loope
adc
insb
push
mov
sub
into
bound
cmp
js
sub
je
btc
insb
push
adc
mov
adc
adc
test
push
lds
sub
lods
ja
pop
adc
repnz
add
mov
inc
daa
leave
jnp
mov
rcll
sub
and
std
es
xchg
push
mov
adc
pop
pop
adc
push
lods
push
icebp
inc
insb
push
adc
mov
and
mov
faddl
fnstenv
pop
adc
sub
les
adc
push
adc
gs
adc
adc
out
and
mov
repz
ljmp
movsb
push
pop
les
test
inc
mov
addl
unpckhps
inc
popa
sub
inc
and
loop
inc
mov
adc
and
adc
adc
xchg
lds
add
pop
adc
push
mov
mov
mov
mov
mov
loope
add
lods
push
mov
adc
mov
mov
mov
popa
lock
dec
adc
lods
dec
rcll
mov
mov
mov
adc
dec
sbb
inc
rcrl
adc
and
js
mov
loop
push
test
lock
mov
fsubs
mov
pop
lds
test
sbb
bound
sbb
insb
mov
push
insb
adc
adc
adc
push
mov
mov
fcoms
push
inc
lods
fsubs
mov
setp
sbb
jbe
adc
in
out
adc
and
xchg
mov
dec
mov
jmp
bound
sub
fiadds
les
std
cmpsl
pop
cmc
psraw
pop
adc
jmp
add
loope
cmpsl
mov
mov
cmp
adc
push
push
sbb
jnp
inc
add
sub
imul
mov
jne
call
mov
push
call
hlt
mov
mov
inc
call
mov
pop
pushl
fbld
js
test
adc
xor
pop
adc
push
xchg
test
sbb
push
adc
jnp
insb
push
adc
inc
push
lds
add
cmp
add
setae
ret
sub
call
sbb
xorl
mov
sbb
sub
cmp
sub
fcoml
push
insb
adc
push
mov
sub
sbb
add
ficoms
jb
mov
pop
adc
mov
mov
mov
js
adc
adc
stos
fcoms
aaa
sbb
mov
sub
adc
add
push
xchg
cmp
push
test
add
adc
push
lds
sahf
xor
adc
pop
adc
and
orb
insb
push
push
loopne
add
mov
push
adc
mov
scas
inc
sub
xor
cmpsb
mov
pop
mov
inc
mov
pop
andl
mov
adc
pusha
adc
sub
and
mov
sbb
or
xor
enter
cld
adc
test
inc
jp
ret
pop
adc
bound
fmuls
outsl
es
mov
adc
inc
test
sub
test
or
dec
add
pop
adc
lds
rclb
dec
call
adc
loopne
inc
lds
adc
xchg
and
pop
adc
mov
loope
adc
adc
sbb
subb
mov
data16
push
jl
push
call
push
mov
adc
lds
add
popf
arpl
repz
inc
les
test
adc
adc
push
add
adc
push
push
adc
int3
test
xor
adc
f2xm1
add
mov
fdivl
adc
push
sbb
adc
push
cli
mov
add
fsubs
rcrl
addb
in
out
jbe
les
test
or
adc
mov
loope
adc
jmp
adc
loop
or
dec
stos
adc
mov
adc
pop
pop
adc
rcll
fmuls
and
fsubs
mov
repnz
push
and
adc
adc
insb
push
pop
adc
mov
imul
pushf
rcrl
ficomps
inc
cmpl
sub
adc
push
test
sbb
mov
popa
xor
aam
mov
fcoml
cmp
pop
test
adc
add
pop
adc
cmp
adc
mov
pop
or
addl
cmp
mov
push
adc
fcoms
js
pop
cmpsl
mov
push
sbb
mov
and
call
fcoms
push
add
in
push
lds
lock
push
clc
cmpsb
lret
es
sub
jmp
in
pop
sarb
ret
jo
jns
mov
push
push
lret
pushl
insb
push
mov
js
cmp
les
inc
call
adc
in
mov
xor
dec
sub
mov
roll
jo
or
push
adc
push
adc
jmp
mov
xchg
xor
jb
pop
add
add
sub
push
lds
adc
stc
add
sub
push
or
or
loope
mov
inc
mov
adc
sub
out
outsl
shlb
adc
adc
lret
sbb
push
adc
push
js
adc
inc
test
jo
adc
mov
sub
add
sub
sub
lock
aam
rcr
sahf
popa
repz
pop
div
clc
pop
mov
repz
rol
aas
pop
pop
inc
insb
push
cmp
adc
adc
sub
iret
mov
and
or
in
inc
push
add
and
bound
sub
pop
add
mov
rol
inc
insb
push
adc
adc
sbb
adc
cs
mov
mov
test
mov
dec
call
aam
dec
into
fildll
mov
adc
inc
insb
push
adc
push
or
or
push
add
inc
loopne
les
daa
mov
adc
sub
inc
insb
push
sbb
adc
adc
mov
inc
popa
test
adc
or
jo
and
jmp
iret
jecxz
sub
bound
dec
es
mov
out
sarb
mov
mov
jmp
stc
cmpsb
adc
andl
add
push
adc
sub
sub
movsl
addl
adc
mov
xchg
jb
bound
test
mov
popa
xchg
adc
sahf
andb
test
adc
ret
adc
sub
fsubs
bound
mov
pushf
popf
jne
mov
shll
add
test
lret
mov
or
sub
movsb
lahf
loop
sub
or
sub
test
ficoml
fsubs
hlt
mov
push
les
mov
or
adc
fcompl
aas
clc
adcb
fdivrl
or
adc
dec
jae
xchg
mov
cmp
imul
or
jae
loope
add
pusha
cmp
jae
lods
sub
and
pop
sbb
xchg
add
or
jae
jp
fcompl
imul
pusha
movsb
jae
xchg
xchg
pusha
or
dec
adc
sub
les
sbb
adc
imul
jae
rclb
outsb
ret
sbb
sub
xchg
xchg
jo
xchg
pop
cmp
stos
jae
inc
sub
mov
jae
mov
movsb
and
test
imul
lods
pushl
pop
ret
sub
ret
cmp
aaa
roll
push
push
or
imul
movsb
jbe
push
call
es
ss
je
out
lods
mov
adc
lea
loopne
mov
inc
lea
std
imul
jecxz
popa
mov
aam
xchg
xchg
loopne
cld
movsb
and
xchg
jo
push
inc
les
or
mov
imul
jae
cmp
push
cmp
sahf
or
mov
and
or
lea
loopne
jae
pop
addb
mov
lds
cmp
mov
bound
push
jae
jmp
ret
pusha
movsb
and
jae
and
js
and
cmp
les
jae
and
push
and
pop
adcb
jae
rclb
outsb
dec
cmpsb
jae
imul
mov
dec
dec
mov
or
es
loope
jae
imul
ret
or
inc
pop
jae
pop
ret
adc
xor
jae
loopne
sbb
adc
mov
pop
adc
sub
dec
js
jae
imul
into
rcr
jnp
and
jae
add
imul
add
sub
loope
test
push
aad
mov
mov
call
mov
adc
pop
dec
pop
jle
pop
sbb
shlb
or
adc
push
lods
ret
pop
ret
jg
ret
inc
jae
inc
rolb
jae
add
rclb
jae
sbbb
mov
jae
adc
sbb
jae
sub
movsb
and
adc
inc
jb
mov
and
xor
loope
mov
fwait
jae
xchg
addb
jae
mov
jl
dec
js
pop
enter
dec
jae
mov
mov
sarl
xor
jae
push
sub
jle
dec
xchg
lock
and
pop
jns
adc
xchg
jb
jl
rcrl
inc
jno
jno
and
xchg
and
mov
adc
mov
xor
jae
xchg
jo
pop
stos
dec
dec
mov
xchg
pusha
shlb
or
dec
push
out
sbb
adc
cmpsl
jo
rclb
jae
add
sub
sahf
stos
idivl
incb
push
mov
mov
lock
jmp
pop
call
inc
pop
jae
in
nop
fistps
add
insl
push
sbb
add
push
mov
add
adcb
pusha
adc
pshufw
aam
rorl
jae
sub
cmp
nop
bound
or
movsb
and
adc
shlb
jp
popa
aad
sbb
sbb
jae
add
xchg
ret
mov
sub
jae
xchg
cmpsl
sbb
jae
ja
xchg
xchg
pusha
scas
jae
scas
xchg
xchg
loopne
jae
and
xorl
dec
and
adc
xor
test
dec
mov
or
cmp
dec
jae
push
jo
and
and
pop
sbbb
adc
cmpsb
mov
ret
jae
inc
and
xchg
hlt
test
bound
mov
movsb
and
or
pop
pushf
rclb
push
jb
mov
clc
mov
movsl
iret
mov
out
adcb
xor
jae
adc
xor
add
push
jae
and
mov
cmp
popa
dec
xchg
jo
mov
ficoml
outsb
adcb
xor
jae
or
xor
adc
xor
lods
rorb
dec
jae
pop
ret
je
jae
dec
mov
cmovbe
jae
mov
imul
and
add
push
xor
add
add
jae
jne
add
mov
add
sub
or
xchg
pusha
daa
sbb
jl
adc
xchg
jae
je
push
xor
jae
jnp
rcl
dec
dec
jae
mov
dec
dec
sbb
add
inc
shlb
add
rclb
les
mov
and
push
movb
inc
and
pop
ret
out
push
add
or
dec
jae
inc
pop
addb
jae
sbbb
mov
sub
lea
test
add
mov
pop
pushf
adcb
or
xor
lock
jae
adc
movsl
adc
dec
fldt
adc
and
push
lea
loope
popa
inc
ljmp
movsl
xchg
xchg
loopne
jae
and
dec
pop
or
dec
lds
insb
adc
sub
cmp
push
xor
jae
pusha
movsb
and
or
mov
cwtl
sbb
mulb
dec
xor
jae
inc
and
mov
es
dec
outsl
faddl
ret
cmp
outsb
pusha
movsb
and
xor
adc
or
ret
lea
into
in
and
adc
cmp
xor
adc
popa
and
rclb
sbb
xor
adc
pop
cmc
mov
mov
or
push
jae
rclb
pop
fdivl
dec
push
push
mov
pop
xor
adc
sbb
inc
jle
xchg
mov
sub
jae
push
add
sub
or
sub
sub
add
popf
mov
jae
outsb
mov
and
pop
addb
testl
inc
push
shlb
outsb
sbb
jae
sbb
xor
adc
and
sub
jae
sti
out
inc
pop
sbb
jae
addb
test
jae
test
push
sbb
aad
jmp
es
popa
xor
les
mov
fwait
pop
mul
shlb
sbb
jmp
push
sbb
lock
iret
clc
in
sbb
jge
call
hlt
pop
shll
inc
call
xchg
sub
jo
ljmp
arpl
dec
sti
cmpb
dec
jg
and
mov
xchg
test
add
jae
push
pop
xor
adc
and
mov
pop
and
pop
ret
xor
inc
jae
xor
fadd
dec
jae
and
mov
xchg
rclb
scas
sbb
test
and
adc
jae
mov
jmp
in
es
call
and
pop
jnp
cmpsb
fs
adc
push
and
iret
leave
jnp
stos
push
mov
rcll
xor
adc
sbb
scas
ljmp
mov
or
mov
daa
imul
nop
imul
cmp
mov
sbb
push
sbb
dec
adc
xor
mov
fiadds
jae
ret
jp
test
jae
xchg
push
or
jae
sub
rclb
jae
dec
dec
cmp
mov
adc
imul
rclb
jae
mov
adcl
sbb
aaa
int3
sbb
movsb
and
loope
bound
outsb
shll
jae
xor
and
and
and
adc
inc
mov
jae
aaa
xor
dec
jbe
inc
pop
ret
sub
popa
je
or
ret
mulb
jae
icebp
adc
mov
add
sub
jae
sub
pushf
outsl
mov
call
and
pop
ret
xchg
xchg
loopne
xchg
sub
or
pop
inc
and
lret
xor
lock
imul
inc
pop
cmpb
adcb
mov
xchg
lea
mov
rorl
inc
pop
and
ja
jae
sub
inc
sub
jae
call
cld
mov
sub
inc
adc
and
adc
push
adc
cmp
or
rclb
mov
add
outsb
sbb
aad
jae
cmpsb
push
and
add
fs
ret
pop
xor
mov
int3
add
xchg
jae
lock
imul
insl
and
mov
lcall
sub
bound
cmpb
adc
jo
xor
std
stos
aad
pop
ret
cs
pop
ret
mov
outsb
sbb
and
ret
jae
dec
mov
cmp
jae
pusha
push
out
push
xchg
xchg
jo
gs
lock
lea
nop
and
pop
xor
movsb
mov
push
jge
inc
lahf
mov
inc
pop
inc
scas
aad
dec
adc
xor
adc
movsl
test
jae
xlat
add
mov
fdivs
xor
adc
ret
enter
cmp
and
jae
jl
cwtl
pusha
movsb
and
xchg
or
call
dec
dec
jae
xor
add
test
inc
lea
dec
xor
sbb
fldenv
pop
jae
jo
mov
rorl
and
inc
push
mov
test
inc
pop
ret
push
sub
pop
push
xorl
and
loop
sbb
cli
addl
or
in
orl
push
adc
jns
rorl
jae
adc
jecxz
push
adc
cmp
adc
or
sbb
imul
mov
loope
sbbb
mov
push
xchg
and
imul
mov
jae
sbbb
and
ja
inc
cmp
sbb
bound
sub
mov
xchg
pop
inc
and
jns
inc
cmpl
jae
rclb
fcoml
mov
clc
ds
inc
and
jg
cmp
shlb
jbe
xchg
xchg
and
cmp
sbb
aad
dec
jae
sbb
dec
pop
jae
in
out
scas
xor
cmp
shll
pop
dec
xor
pushf
bound
dec
pushf
jne
mov
cmc
out
out
mov
pop
xor
adc
aaa
sub
pushf
pop
imul
int3
stos
add
jmp
xchg
xchg
jle
pop
add
mov
enter
outsl
dec
xor
sbb
sub
xchg
jo
cmp
add
xchg
movsb
and
xor
sarl
xchg
xchg
add
adc
pop
jae
and
mov
jae
adc
aam
jae
and
xchg
jo
shlb
inc
xor
adc
orb
dec
jecxz
iret
mov
inc
jae
pop
mov
add
xchg
subl
cltd
and
jae
pop
add
push
mov
mov
sbbl
push
inc
pop
andb
xor
stos
mov
jae
mov
lea
inc
nop
jae
or
or
xchg
mov
ficoms
loop
rorl
jae
stos
dec
pop
jne
jmp
fidivl
xorb
xor
cmp
adc
sbb
sbb
jae
dec
xor
mov
loope
jae
fisubrs
lock
inc
sbb
adc
xor
lea
cmp
jae
lock
mov
jae
mov
rcl
dec
dec
jae
inc
pop
orb
mov
pop
ret
pop
jae
mov
or
cmp
repz
stos
test
test
jnp
mov
and
lea
punpckhwd
sub
dec
or
dec
jae
aas
sti
shll
xchg
or
jmp
inc
aaa
jge
add
fwait
inc
push
movsb
jae
idivb
xor
adc
hlt
jae
mov
jnp
das
sbb
xchg
and
insl
cmp
test
test
ss
or
shlb
out
mov
imul
jae
rclb
fisubs
mov
mov
push
cmp
fistpll
inc
pop
xorb
or
insb
clc
jae
xchg
xor
mov
cwtl
jo
jae
insb
lods
xor
lea
cmp
dec
cmp
sbb
jae
rclb
add
lret
mov
pusha
inc
xor
mov
mov
jae
adc
adc
mov
or
jae
push
push
and
sub
loopne
add
push
xchg
jae
outsb
pop
push
mov
xchg
jae
xor
out
add
and
and
inc
mov
or
jno
add
push
add
and
pop
data16
sub
adc
loope
aas
and
dec
xor
push
xor
dec
jae
gs
sbb
imul
jae
inc
cmpsb
sbb
jae
inc
and
mov
adc
adc
jae
inc
mov
push
cmpl
jae
cmp
ret
mov
out
jae
mov
add
data16
mov
add
jae
movsb
and
jae
mov
mov
adc
into
mov
mov
aam
dec
jae
ret
ljmp
mov
xor
jae
xchg
movsl
add
xchg
jae
pop
ret
jae
dec
mov
mov
mov
jae
xchg
cmp
and
xchg
xor
jae
ret
fidivrs
add
mov
and
pop
ret
clc
mov
jae
xor
adc
push
jae
imul
addb
and
mov
xor
jae
and
and
mov
sbb
mov
dec
dec
xor
jae
ret
mov
jae
add
adc
and
sbb
or
subb
dec
dec
mov
sub
push
arpl
mov
ret
lea
movsb
and
sub
in
pop
pop
sbb
and
push
rol
dec
jae
mov
popa
add
imul
pop
scas
sub
jae
pop
les
rclb
jae
stos
xchg
xchg
jo
jae
adc
cmpsl
push
push
ret
xor
gs
and
jb
adc
adc
jae
xor
adc
jae
add
xor
jl
movb
inc
sbb
or
adc
arpl
sbb
or
xchg
and
rclb
adc
jae
and
add
dec
inc
lea
or
jae
pop
ret
and
fdivl
inc
pop
jae
push
push
and
mov
pop
push
ds
rclb
lret
pop
sbbb
mov
fiaddl
pusha
movsb
and
inc
inc
test
fwait
add
jae
xchg
pop
mov
sbb
pop
mov
jae
pusha
fwait
add
jae
xchg
pop
ret
push
push
pop
outsb
rol
sub
add
push
push
pop
mov
xor
inc
pop
ret
adc
mov
popa
xor
rorl
adc
and
and
adc
xchg
mov
inc
dec
adc
orb
xchg
sub
clc
movsb
push
lahf
clc
orb
test
mov
pop
es
pushl
sub
adc
test
pop
sub
inc
dec
xchg
rcll
insb
dec
in
and
or
xchg
and
dec
add
mov
cmp
xchg
es
ret
xchg
mov
shrl
pop
cmp
aam
dec
xchg
or
dec
mov
adc
outsb
xchg
es
ret
ss
mov
and
push
cmp
xchg
cmpsb
test
lcall
dec
mov
push
add
xchg
adc
inc
dec
js
push
sub
sub
xchg
inc
dec
sbb
inc
sub
rclb
xor
adc
orb
add
pop
xchg
dec
sub
pop
ret
dec
js
sbb
adc
push
mov
mov
test
add
rcll
in
out
and
jo
into
pop
faddl
rcl
repz
mov
push
lahf
push
sub
lds
imul
and
ss
in
xor
adc
xor
adc
push
loopne
xchg
pusha
mov
lahf
clc
inc
add
shlb
and
or
mov
push
dec
mov
andb
aaa
xchg
jb
or
mov
xchg
xchg
roll
jge
xchg
xor
fists
iret
and
adcb
leave
cmpsl
es
xchg
mov
sub
or
stc
sub
nop
lret
cltd
add
push
and
sub
cwtl
push
mov
aaa
inc
adc
sbb
repz
dec
scas
push
fdivr
out
jns
out
insb
and
ret
es
dec
mov
jnp
xor
push
pop
jne
and
or
adc
bound
mov
push
and
mov
cmp
dec
xchg
and
and
sub
into
xchg
inc
push
adc
rcll
popa
pop
xchg
mov
es
ret
mov
add
xchg
xchg
xchg
dec
mov
pop
push
xchg
mov
xlat
adc
cs
xor
scas
pusha
mov
adc
ds
pop
sbbb
int3
pusha
cltd
mov
mov
mov
push
dec
mov
jl
inc
dec
cmp
xor
rcll
in
les
ret
xchg
xlat
dec
addl
leave
insb
sbb
xor
adc
clc
xchg
inc
mov
cmp
sbb
and
cmp
xchg
adc
xchg
in
roll
fcompl
es
xchg
mov
test
dec
mov
movsb
shll
les
inc
or
and
lods
mov
cmp
and
xchg
jo
mov
pop
ret
fidivs
mov
cmpsb
xchg
mov
mov
cltd
shrb
dec
cmp
fsub
js
rcll
add
jl
rcll
fdivl
cmpsl
aad
nop
add
mov
pop
push
mov
int3
sub
xchg
dec
and
push
adc
es
ret
mov
mov
sub
mov
or
add
fwait
cwtl
mov
adcb
push
dec
mov
js
push
xor
mov
mov
cwtl
push
ds
xchg
jo
stos
cmp
mov
mov
js
cs
push
xchg
mov
mov
cmp
cmpsl
rcll
int3
sub
cmpl
rcll
into
adc
push
xor
add
inc
mov
into
fsubrl
es
mov
movsl
loop,pt
mov
es
ret
dec
shll
negb
add
pop
ret
mov
add
aaa
jns
mov
pusha
pop
aam
dec
push
pop
xor
adc
cs
push
mov
or
test
sub
dec
mov
jae
imul
pop
mov
adc
inc
popf
jmp
push
repnz
lcall
mov
loope
add
mov
mov
and
pop
es
bound
test
es
mov
stos
es
cs
mov
mov
lds
orl
mov
mov
rcll
out
int3
es
push
mov
mov
mov
pop
ret
es
sub
mov
adc
pop
mov
xor
mov
pop
ret
mov
dec
sub
sbb
dec
mov
mov
and
inc
es
bound
ja
shll
dec
mov
inc
and
or
loop
jmp
pop
pop
mov
xchg
call
dec
or
addr16
bswap
xchg
call
lahf
mov
ds
sub
call
nop
jl
call
dec
dec
test
dec
ret
mov
cwtl
es
es
mov
es
adc
mov
fadd
inc
dec
mov
es
mov
es
ret
and
addr16
dec
ret
mov
clc
es
es
mov
mov
adc
push
dec
ds
sbb
mov
addr16
and
sbb
adc
mov
mov
and
and
push
adc
and
mov
inc
dec
jo
mov
adc
xlat
mov
pop
mov
push
push
inc
loop
adc
lcall
xor
dec
mov
mov
push
adc
mov
pop
push
push
mov
mov
mov
push
mov
rcll
out
es
mov
mov
mov
inc
dec
mov
scas
mov
pop
adc
mov
mov
push
jnp
mov
mov
scas
pop
or
movsb
adc
scas
adc
push
fcoml
adc
in
cltd
or
mov
mov
inc
jno
inc
jne
push
dec
pop
adc
inc
dec
mov
or
cmc
fcomps
js
or
ss
lcall
cld
cs
pop
adc
dec
cmp
or
cmovs
mov
and
mov
rcll
mov
andb
into
addr16
ret
cmp
push
inc
test
mov
loop
or
sbb
push
sub
stos
roll
adc
arpl
ss
mov
callw
xchg
cld
add
sub
add
lods
es
dec
mov
push
and
aaa
rcll
mov
sbb
cmpsb
mov
dec
adc
fcoml
sub
push
daa
pop
ret
dec
sub
js
ret
ficompl
js
inc
mov
and
dec
roll
mov
js
shll
add
fimull
jbe
mov
cwtl
cmp
inc
dec
adc
cltd
push
mov
jo
bnd
add
call
and
rolb
mov
pop
popf
stos
add
mov
and
dec
popa
or
dec
sarl
das
in
sbb
sbb
sbb
dec
leave
or
sub
mov
or
insb
and
dec
mov
mov
adc
nop
sbb
xor
dec
mov
cmp
push
xor
mov
mov
pop
adcb
sub
jle
or
out
ja
inc
dec
mov
inc
sub
dec
js
jle
mov
mov
sbb
push
push
lcall
sbb
sbb
xor
add
pop
mov
push
add
dec
adc
or
roll
pop
add
sub
mov
adc
inc
dec
pop
popa
mov
mov
shlb
xor
mov
push
cmp
push
and
es
ret
bound
inc
mov
dec
mov
or
aad
pop
dec
inc
mov
cwtl
mov
call
mov
mov
sub
sub
pop
mov
jne
inc
adcb
add
es
and
in
stc
mov
mov
mov
push
dec
mov
mov
add
sti
push
jecxz
rcll
out
lcall
xor
xchg
mov
lcall
sub
fsubr
add
push
inc
adc
mov
cmpsb
pop
xor
adc
jo
mov
dec
xor
fisubrl
push
xchg
rclb
adc
jle
dec
mov
cmp
pop
in
mov
mov
push
mov
pop
push
lock
inc
arpl
cmp
clc
rcll
jae
cmp
mov
jae
rcll
in
enter
lcall
inc
dec
jo
movsl
jl
pop
pop
lds
fisubrs
aam
jae
dec
mov
mov
mov
pop
mov
jae
out
adc
and
call
xor
jae
stos
lea
sub
jae
and
adc
call
jae
nop
clc
pop
xor
adc
test
xchg
jo
jae
mov
in
movsl
dec
jae
roll
aaa
adc
adc
fsubrs
mov
in
jb
mov
pop
es
ret
jae
xchg
pusha
cmpsl
sbb
mov
jecxz
and
sbb
xchg
dec
mov
inc
or
roll
inc
or
lcall
mov
adc
push
jae
and
rcll
outsb
push
push
test
xor
mov
or
or
es
cmpb
pop
fidivrl
or
jle
aaa
or
nop
leave
aas
xor
pop
dec
sub
dec
shll
or
inc
jae
dec
arpl
lcall
ret
cwtl
push
jae
pavgw
xor
adc
mov
adc
outsb
js
roll
push
xchg
push
pop
ret
jae
sub
jae
push
dec
add
inc
dec
sbb
mov
nop
shll
sbb
push
add
rolb
inc
jae
add
jo
ljmp
scas
test
dec
mov
sub
jae
lock
mov
mov
repz
adc
adc
in
add
adc
xor
stos
inc
mov
jno
int
adc
sbbb
adc
adcb
adc
pop
or
pusha
add
sub
mov
xchg
cmovge
xchg
andb
lods
imul
test
pop
sub
call
xlat
cs
ret
xlat
xchg
mov
aas
ret
and
sbb
cmpb
add
pop
xchg
mov
mov
test
xchg
cs
ret
outsb
xchg
cs
cmpb
sbb
push
xchg
dec
dec
add
add
and
adc
xchg
lods
jle
push
and
xlat
push
pop
enter
jle
jle
jg
xchg
mov
xor
jne
adc
add
fnstsw
xchg
pushf
or
add
xchg
xchg
jge
pop
cmpb
pusha
and
xchg
enter
adc
jno
adc
mov
xchg
xor
test
pop
xchg
cmc
jl
mov
xor
xchg
inc
jb
or
rclb
cmp
les
xchg
and
mov
add
xchg
call
ss
jne
adc
cli
xchg
cmp
xor
pop
jl
jl
sub
loope
jl
lds
test
mov
jl
repnz
pop
or
jl
and
inc
dec
mov
push
cmp
nop
comiss
adc
mov
cmp
push
pop
sub
mov
xchg
jno
adc
daa
xchg
mov
xor
lods
cmpsl
or
cmpsb
mov
mov
mov
test
and
add
test
mov
test
xchg
mov
aam
and
inc
add
shll
or
cmp
clc
inc
sub
loope
xchg
pop
mov
aaa
int3
push
xchg
outsl
rolb
jecxz
inc
add
fildl
adc
rclb
cmp
rclb
jne
adc
jno
adc
rcrb
dec
jno
xchg
sbb
or
roll
xor
jne
adc
xchg
mov
pop
xchg
test
mov
pop
adc
jns
push
pop
mov
lret
pop
sub
orl
and
inc
dec
mov
adc
fsubl
jmp
cmp
adc
call
mov
aad
add
sub
loop
and
sahf
jl
sub
loop
test
dec
pop
fidivs
adc
xchg
lret
dec
cmp
xor
rolb
push
or
stos
add
cmc
cwtl
mov
sub
and
mov
aas
js
adc
mov
enter
ds
add
pop
mov
or
mov
sbb
cmp
dec
pop
xchg
mov
mov
fdivr
inc
dec
mov
rcll
in
rclb
test
jne
jno
push
adc
pop
xchg
in
ret
jne
xchg
je
adc
ss
xchg
mov
mov
test
xchg
xor
sbb
js
mov
or
jno
xchg
and
shll
xchg
xorb
add
sub
sarl
xor
mov
pop
sub
xchg
add
add
cs
xchg
aas
and
pop
adcb
pusha
mov
xor
inc
xor
addb
sbb
fsubp
mov
in
jne
mov
inc
dec
mov
push
xchg
pop
adcb
add
xchg
aaa
lret
and
adc
xchg
pop
das
inc
call
rcll
rcll
xchg
cltd
sbb
mov
push
test
dec
pop
mov
insb
add
ret
push
scas
mov
mov
inc
mov
jo
push
xor
adc
xchg
aaa
xor
or
jne
and
jp
mov
jno
adc
xchg
rcll
push
pop
inc
push
xchg
pusha
shlb
call
xchg
add
cltd
pop
pop
sub
mov
sub
pop
sub
pop
xchg
out
lock
xchg
xchg
dec
jge
pop
sub
dec
popa
imul
add
addr16
iret
jb
jbe
cmpsb
mov
call
or
mov
adcb
outsl
add
pop
xchg
test
jmp
jns
xchg
and
xchg
pusha
out
lret
push
xchg
mov
and
sbb
xchg
jae
push
test
sub
xchg
ja
adc
mov
mov
jl
es
ret
sbb
data16
push
mov
sbb
sbb
js
cs
ret
mov
mov
dec
fwait
cmpsb
and
push
xchg
and
loopne
xchg
andb
jo
into
je
rolb
loope
and
js
in
push
ret
mov
xchg
pop
mov
cmpsl
scas
xchg
add
sbb
scas
jno
adc
xchg
xchg
mov
cmp
sub
and
push
push
push
inc
cltd
mov
xchg
xchg
jne
pop
roll
xchg
or
lcall
xchg
aad
mov
add
dec
notb
notl
push
or
push
or
pop
push
movsl
insl
pop
ret
int3
pop
jmp
subl
les
jns
xor
in
cmp
pusha
cmp
inc
xchg
inc
push
sbb
push
loopne
xchg
push
dec
cmp
push
cmp
and
dec
or
aad
xchg
xchg
cmc
mov
cmp
mov
or
lock
xchg
repnz
adc
sub
pop
sub
rcll
in
and
xor
lcall
xchg
push
insb
and
gs
or
mov
adc
mov
popa
sub
xchg
inc
dec
sbb
mov
cmp
xchg
nop
in
push
sbbl
cwtl
out
mov
or
lea
mov
mov
fistl
mov
mov
inc
insb
mov
sub
mov
xchg
insb
and
jne
rcrl
loop
xchg
in
mov
call
leave
call
inc
sbb
cmp
pop
xchg
sbb
in
add
out
loop
push
jno
adc
shll
xchg
sub
mov
sbbb
push
test
outsb
mov
in
pop
push
pop
mov
jge
cs
sub
pop
mov
sbb
cwtl
xchg
pop
mov
lds
jno
ficoms
cs
rolb
call
jo
mov
and
mov
loop
xchg
test
or
rcll
mov
pusha
das
cs
xchg
pop
stc
or
mov
mov
push
jns
dec
imulb
es
cmp
ds
inc
jg
sbb
rcll
push
mov
adc
fs
xor
xchg
xor
xchg
lods
xor
loope
cs
xchg
sub
orb
addr16
xchg
dec
xor
xchg
xor
xor
pop
xchg
inc
xchg
jns
xor
call
inc
xchg
pop
sub
pop
cmpb
xchg
pusha
sub
cs
ret
jle
or
or
or
mov
push
or
push
or
push
dec
cmp
sbb
out
test
sbb
scas
out
orb
push
and
pop
ret
je
aas
push
cmp
iret
lahf
sub
xchg
push
mov
push
mov
rcll
xchg
inc
dec
mov
lret
testb
mov
rcll
or
cltd
mov
jmp
add
pop
xchg
jne
adc
fcoms
xchg
rcll
xchg
in
push
sbb
mov
cs
adcb
pop
outsb
xchg
pop
mov
sbb
xchg
cs
ret
mov
cmp
sbb
sbb
aas
imul
cs
xchg
in
push
clc
fimuls
or
adc
mov
sbb
cs
push
out
loopne
fisubl
mov
cmp
sbb
and
rclb
xchg
jae
cmp
lret
xchg
mov
stos
mov
dec
ret
pop
xchg
xchg
cs
xchg
cwtl
mov
and
rcrl
adc
xchg
inc
pop
sub
test
jo
movb
pop
xchg
imul
test
sbbl
xchg
xlat
ljmp
dec
mov
or
xchg
cmp
cmp
orl
mov
jmp
xchg
pusha
out
xchg
lds
mov
repz
mov
fcoms
imul
mov
xchg
pop
mov
faddl
call
ret
test
pop
xchg
xchg
pusha
jno
clc
sub
mov
je
xchg
cmpb
xchg
pop
addb
xor
push
ret
and
sbb
dec
push
ret
push
or
jo
jae
mov
ret
inc
xchg
mov
xchg
es
xchg
jae
add
add
ret
dec
mov
inc
xchg
cs
ret
mov
pop
les
mov
call
inc
dec
fsubrs
sbb
mov
mov
xchg
lds
xchg
pop
jg
fdivp
mov
dec
push
imul
xchg
stc
and
mov
push
or
mov
pop
pop
xchg
pop
sub
xchg
test
mov
xchg
sarb
pop
sub
xchg
mov
cmp
scas
jl
ret
xchg
fsubl
jo
cs
imulb
roll
test
sub
movsb
push
dec
mov
pop
xchg
sbb
or
out
rolb
aad
sbb
rcll
rcrl
lods
cmp
fwait
and
adc
mov
xchg
loop
and
xchg
jo
imull
aad
push
lock
daa
mov
addl
cld
xchg
es
loopne
adc
sub
test
ret
js
sbb
sub
in
sbb
cs
xchg
mov
xchg
inc
dec
mov
sbb
rcll
jo
xchg
lock
cmp
adc
push
and
inc
js
lods
mov
sbb
int
and
ss
xchg
dec
loop
add
mov
mov
jnp
xchg
inc
jmp
and
lods
rolb
mov
xchg
int3
xchg
outsb
out
mov
xchg
rclb
out
rcll
repz
sub
add
rcll
mov
cs
ret
aad
dec
mov
movsb
cltd
stos
ljmp
pusha
scas
cs
xchg
push
ljmp
sub
and
or
ret
push
aas
lods
push
pop
sub
test
or
jg
mov
inc
pop
mov
push
rcll
push
add
sub
push
push
jo
xchg
push
dec
pop
ret
fadds
imulb
xchg
or
sbb
or
inc
dec
mov
xchg
jo
int
or
stc
lock
mov
xchg
adc
out
cmpsb
sbb
dec
jecxz
add
xchg
lret
sub
sub
mov
inc
pop
mov
je
cs
ret
cmp
adc
lret
hlt
pminsw
cmp
mov
push
je
adc
sub
push
xchg
inc
dec
mov
ret
xchg
fimuls
add
xchg
push
out
push
jo
mov
dec
jp
stos
push
mov
xor
xchg
sbb
and
cs
or
mov
ficoms
mov
mov
call
mov
mov
sub
out
jle
ret
scas
mov
xchg
pusha
xchg
rclb
cs
ret
movsl
pop
mov
xchg
sbb
mov
inc
dec
mov
cmp
cmpsl
test
cmp
xchg
mov
mov
xchg
pop
mov
test
xchg
xchg
xchg
and
xor
push
sub
sub
push
popa
add
xchg
adc
add
lcall
lcall
inc
add
xchg
jl
inc
dec
mov
xor
xchg
xchg
pop
sub
xchg
xchg
mov
inc
pop
inc
sti
bound
outsl
jne
adc
or
or
mov
mov
les
pop
ror
dec
lret
ret
sub
adc
out
xchg
pop
ret
push
inc
movsl
sub
xchg
cmpsl
ss
inc
pop
sub
dec
js
xchg
and
push
cmpsl
call
xor
jno
adc
mov
xchg
pop
mov
mov
xchg
pop
mov
jnp
dec
je
ret
add
dec
mov
cs
ret
mov
cmp
jo
loop
fwait
or
mov
push
pop
pop
sub
mov
dec
js
xchg
adc
pusha
xor
fs
pusha
mov
cmp
mov
aad
dec
xchg
in
inc
dec
sbb
mov
rcll
dec
sub
xchg
add
sub
mov
loope
loope
xchg
adc
mov
sub
mov
push
pusha
inc
dec
mov
xchg
dec
pop
adc
and
xchg
cmc
adc
jl
jb
mov
adc
jne
mov
push
xchg
movsb
sbb
test
cs
ret
push
pop
sub
roll
mov
inc
or
mov
or
adc
pop
adc
nop
cmpsl
rcll
in
das
xchg
outsl
pushf
mov
and
sbb
push
dec
or
popa
jne
adc
mov
mov
cmp
lds
push
xsavec
xchg
xchg
jo
add
mov
xchg
xchg
jno
adc
add
test
inc
cmc
mov
mov
and
idivb
scas
and
aad
pop
mov
in
adc
loope
ljmp
pop
xchg
ja
push
mov
dec
mov
mov
xchg
lgs
movsl
mov
xchg
sub
cmp
or
pop
xchg
icebp
push
sbb
jmp
pop
mov
addl
and
loopne
lcall
sub
inc
adc
xchg
rol
fsubrp
sub
pop
xchg
enter
ret
mov
mov
mov
jle
or
xchg
rcrb
xchg
mov
xchg
mov
push
sahf
dec
cmp
inc
jne
pop
mov
aad
xchg
es
insl
fwait
mov
sub
pop
mov
xchg
out
xchg
repz
mov
call
and
xchg
mov
popa
add
sbbb
inc
mov
enter
dec
cmp
xchg
xchg
and
xor
orl
mov
repz
or
faddp
dec
push
pop
xchg
das
dec
sub
mov
pop
xchg
cmp
dec
inc
dec
cwtl
cmp
dec
push
add
inc
fcmovne
in
xchg
or
cmpsb
ret
inc
dec
sbb
fstpl
push
jecxz
in
or
adc
xchg
in
push
and
mov
adc
movsl
sarl
dec
xchg
dec
push
mov
int3
xchg
out
cs
ret
lcall
push
jno
adc
cmp
add
jo
xchg
cmp
adc
add
and
mov
or
mov
and
mov
fsubl
loop
and
loope
add
mov
xchg
mov
xor
mov
lds
xchg
pop
mov
jae
mov
mov
icebp
imul
dec
cmp
ficoms
or
add
xchg
decb
jl
xor
jnp
popa
dec
call
ret
sub
sub
rcll
sub
and
pop
pop
xchg
fsub
add
pop
ret
lods
or
mov
bound
mov
mov
mov
pop
mov
add
add
into
push
mov
pop
mov
xor
arpl
push
jb
lahf
pop
arpl
insl
mov
push
lock
jne
add
jbe
mov
sahf
inc
es
pushf
orb
mov
call
jb
sti
fiadds
jp
push
fwait
push
rcr
push
aaa
add
push
imul
and
in
jo
jp
dec
pop
pop
sub
adc
add
mov
or
lock
inc
dec
xchg
fisttpll
daa
and
adc
and
mov
sub
jmp
loope
mov
adc
sub
cmpb
pop
mov
mov
and
aam
pusha
out
mov
mov
inc
jmp
cmp
fisubl
xchg
popf
and
sbb
mov
ret
xor
ss
pusha
mov
cs
test
mov
mov
ret
mov
loopne
cs
xchg
enter
enter
stos
sbb
rcll
inc
dec
xchg
adc
cmpb
pop
xchg
mov
xor
xchg
pop
and
pop
xchg
xchg
loopne
push
imul
xchg
andb
pop
mov
xchg
inc
dec
cmp
cwtl
xchg
adc
dec
cmpb
sbb
mov
mov
pop
sbbb
mov
xchg
mov
add
xchg
jae
loopne
cli
cmc
jns
fimull
add
xor
xchg
sbb
cmp
aad
dec
sbb
rorb
test
xchg
dec
inc
pop
pop
sub
sub
rolb
mov
mov
sub
inc
xchg
rcll
in
inc
int3
mov
adc
push
jo
lods
cs
jo
xchg
pop
into
roll
xchg
push
je
cmp
pop
pop
mov
inc
lcall
pop
orb
or
mov
xor
test
mov
lret
loopne
xor
xchg
jo
es
es
orb
cwtl
cmp
xor
rorl
xchg
and
xchg
add
inc
pop
xchg
in
jl
sub
xchg
out
mov
les
addl
xchg
xchg
mov
add
add
sbb
aas
mov
dec
mov
nop
xor
pop
sub
negb
adc
scas
jb
add
ret
adc
push
lret
cs
xchg
sub
sub
mov
ret
mov
and
popl
aam
sahf
xchg
cmp
xchg
cmp
int3
je
xchg
cmp
jo
adc
mov
push
pop
mov
xchg
ja
inc
dec
mov
or
out
sub
dec
cs
int3
mov
cmp
sub
xchg
movsl
pop
push
add
mov
pop
mov
push
inc
and
or
cs
cltd
test
mov
and
cmp
mov
ret
adc
cs
xchg
int
in
rorb
imul
adc
dec
scas
lahf
xor
sub
xchg
push
xchg
xchg
sub
adc
fsubl
fildll
fsubs
jno
ret
mov
daa
cs
xchg
jo
and
mov
adc
dec
shrl
sbb
xchg
cld
sbb
adc
ret
and
jne,pn
xchg
aaa
test
mov
addb
xchg
mov
xchg
dec
xor
fisttpl
in
add
jo
mov
xchg
and
cmp
pop
mov
xchg
adc
pop
sub
jno
adc
outsb
xchg
push
pop
daa
dec
adc
mulps
pop
dec
leave
and
mov
sti
or
dec
ret
mov
pop
jno
lock
mov
pop
xchg
stc
or
inc
xchg
mov
cmpsb
cmp
js
pop
ret
sbb
dec
dec
dec
arpl
aam
dec
xchg
imul
adc
mov
loope
jo
xchg
add
sub
jne
adc
movsb
sbb
lea
rol
xchg
sub
adc
pop
pop
jns
jmp
rcll
pop
sub
xchg
mov
pop
ret
xchg
fistl
push
cs
adc
pop
xchg
mov
pop
xchg
sub
xchg
xchg
and
xchg
test
hlt
lea
ret
test
call
cmp
ljmp
add
pusha
repz
sbb
test
and
sub
xchg
out
repnz
repz
mov
cmpsb
dec
dec
jo
adc
cs
dec
and
xchg
shll
push
test
xchg
jo
xorl
pop
js
mov
stos
mov
inc
orl
and
js
pop
dec
xchg
add
xchg
out
xchg
addr16
mov
adcb
pop
xchg
cmp
int3
jo
inc
dec
xchg
scas
add
and
dec
mov
mov
fidivrs
xchg
lock
inc
dec
xor
decb
sbb
xchg
test
xor
and
cs
xchg
push
xchg
jl
adc
xchg
cs
ret
aad
xchg
mov
jo
adcb
inc
xchg
mov
pusha
das
mov
mov
mov
mov
or
or
and
call
mov
pop
cs
xchg
dec
nop
std
incl
inc
outsb
cmpsb
test
pop
mov
jo
adc
ret
ss
pop
popa
call
and
pop
fisttps
xchg
pushf
xchg
mov
lock
mov
addl
mov
rcll
pop
mov
mov
jb
fldenv
cmpsl
or
ret
pop
dec
pop
jo
jg
adc
gs
imul
popa
xorl
mov
mov
add
mov
push
mov
test
xchg
sub
xor
xchg
jmp
and
add
sarl
jnp
ret
inc
pop
xchg
jecxz
fbstp
push
mov
cmp
add
pop
xchg
ja
xor
mov
xchg
adc
rcll
push
pop
or
or
xchg
and
adc
inc
dec
xchg
jbe
or
jle
xor
pop
fnsave
xchg
sahf
jp
mov
ffree
xchg
pop
ret
sub
ret
or
xchg
xchg
rclb
xchg
mov
pop
xchg
nop
push
sbb
aad
xchg
test
dec
xchg
sbb
xchg
add
jo
adc
xor
mov
mov
and
insb
mov
xchg
call
movsb
pop
and
daa
mov
mov
and
xchg
rcrb
mov
jbe
ret
mov
dec
call
pop
mov
push
adc
daa
mov
push
loop
and
adc
sub
mov
mov
push
and
loope
mov
xor
mov
lods
mov
pushf
roll
mov
adc
mov
sub
rcll
push
adc
cmp
or
mov
rorb
rolb
cs
mov
mov
cmp
scas
xor
pushf
dec
adc
jo
adc
jo
mov
mov
mov
sbb
add
inc
mov
int
or
push
addr16
jae
pop
je
adc
shlb
lahf
push
fwait
pop
pop
ljmp
jb
inc
dec
xor
adc
mov
sub
mov
inc
xor
adc
xlat
jno
test
sbb
add
mov
mov
sahf
pop
rorb
dec
add
insl
mov
mov
rolb
testl
mov
rcll
in
or
mov
cmp
mov
mov
sub
es
mov
pop
mov
fnstsw
mov
or
loope
xchg
test
loopne
subl
add
push
and
jg
mov
adc
rol
pop
mov
mov
jmp
dec
je
adc
in
mov
ljmp
pop
sub
aam
dec
ficompl
jl
sub
xchg
jo
mov
insb
lods
test
mov
movl
ja
and
inc
dec
rcll
repnz
stos
add
xor
sbb
mov
adc
lds
add
xchg
and
and
test
push
enter
loop
and
mov
fists
sub
mov
dec
sahf
mov
ja
and
xor
pop
rcr
or
test
test
mov
rorl
rcrl
jnp
lods
je
sub
dec
sbb
cmp
or
rcll
pop
call
xorl
rcll
push
push
mov
je
cmpsb
rcrb
or
sub
mov
pop
roll
sub
ds
loopne
and
mov
fwait
push
rcll
sub
pop
sub
adc
or
hlt
aaa
pop
lods
mov
mov
jb
dec
adc
or
rol
jo
ror
xor
rcr
js
inc
dec
roll
and
inc
pop
roll
rcll
shrl
out
pop
outsl
xchg
adc
cmpsb
mov
loop
and
xchg
pusha
adc
shll
add
xchg
mov
or
mov
mov
roll
pop
and
mov
sub
lock
jmp
inc
mov
sub
cmp
inc
dec
mov
push
shll
adc
gs
adc
orl
ror
call
shll
sub
pop
sub
push
shrl
aaa
adc
shlb
sub
lea
pop
sarl
rorl
jle
pop
ret
roll
adc
mov
int3
test
inc
rcll
jg
loope
pop
mov
or
push
push
pop
sub
jno
adc
pop
mov
shl
subl
lahf
push
iret
or
add
mov
rorl
jnp
adc
shl
ds
inc
jo
rcr
rolb
rcll
shll
dec
xor
pop
ret
sarl
jbe
bound
bound
aad
dec
jo
roll
sbb
or
cli
rolb
rol
mov
rorl
push
xorb
mov
jns
movsb
mov
push
pop
mov
fwait
xlat
add
stos
mov
add
loop
mov
stc
roll
mov
pop
sbb
shll
inc
rorl
lods
orl
stos
mov
or
push
fidivs
add
aad
dec
sarl
sar
sbb
adc
icebp
mov
cs
adc
pop
sub
movsl
loop
and
or
or
xchg
xor
mov
adc
mov
ljmp
shll
fidivrs
sahf
jno
adc
dec
pop
adc
or
pusha
aam
inc
shrl
xchg
shrl
mov
or
shrl
jbe
dec
push
pop
rcll
rcll
sub
sub
xchg
loopne
add
and
aad
inc
sbb
out
jne
mov
or
sbb
ror
je
and
jae
shll
xchg
xor
mov
pop
mov
shl
mov
rcl
adc
cwtl
enter
inc
jno
bound
shl
les
push
in
or
pop
ret
adc
cmp
mov
pop
or
and
aam
dec
rorl
jp
mov
or
adc
push
inc
pop
mov
roll
mov
sahf
rorl
outsl
jle
adc
shr
cmp
pop
je
inc
incb
sar
dec
pop
mov
fwait
jno
test
xchg
pusha
shrl
pop
sbbb
rcll
out
push
shrl
pop
ret
sbb
mov
push
xchg
lock
xchg
lock
cs
shll
imul
inc
dec
shll
mov
adc
pop
mov
cmp
sub
pop
ret
cmp
shll
loopne
shl
jle
mov
test
push
sbb
sbb
pop
mov
and
cmp
cld
leave
sbb
pop
mov
sbb
pop
jo
adc
fidivl
adc
rcll
mov
add
inc
jo
je
shrl
leave
orb
pop
add
jmp
push
popa
fucom
inc
sbb
pop
ret
push
rcrl
lea
das
shrl
inc
loopne
and
inc
mov
inc
sub
out
cs
ret
sbb
push
mov
mov
and
adc
shll
lcall
and
mov
inc
dec
sub
lods
xchg
test
call
shll
push
adc
adc
jle
inc
jno
shll
jo
adc
cs
and
push
rcl
dec
mov
or
shll
adc
loope
mov
xor
rcr
lret
pop
sub
das
sub
inc
dec
mov
or
rcll
loopne
and
jo
adc
push
inc
dec
xor
ljmp
sbb
roll
repz
cmpsl
stc
adc
inc
pop
sbb
push
pop
sub
mov
xchg
std
incl
out
jmp
pop
and
inc
xor
cmp
dec
xor
add
sub
and
pop
mov
icebp
insb
cs
inc
pop
sub
test
test
dec
mov
jmp
or
or
shll
pop
cmp
jbe
dec
and
pop
fs
insl
and
mov
xchg
cwtl
rorl
ds
push
push
rorl
roll
inc
shl
cmpsb
jo
pop
sub
and
test
add
into
xchg
lock
pop
sarl
ret
mov
or
subl
rcll
sub
pop
adcb
in
fstps
subl
sub
pop
adc
sub
shrl
pop
loope
add
rcll
adc
pop
pop
sub
orb
dec
lock
rcrl
add
adc
shll
mov
pop
jo
shll
mov
cs
rcr
xchg
mov
rcll
shrl
out
imul
adc
mov
or
xor
xchg
pop
shll
sub
lds
shll
xchg
jo
pop
rcrl
mov
pop
pusha
push
loope
mov
sbb
cmp
mov
mov
repz
or
pop
adcb
add
mov
rorl
jne
adc
movsl
je
adc
test
sub
pop
inc
ret
inc
pop
sarl
in
pop
inc
aas
sbb
xchg
sarl
in
int3
fcmove
ljmp
pop
les
rol
inc
pop
shll
shll
lock
pop
sub
stos
mov
dec
xchg
push
push
pusha
test
shll
dec
rcrl
inc
mov
fwait
mov
pop
lods
ret
pop
roll
cs
shl
inc
cmpsb
ljmp
add
stos
rcl
adc
pop
test
jne
xchg
shrl
test
pop
sub
mov
rorl
jp
add
mov
rcrl
and
daa
pop
adc
sub
inc
sbb
mov
inc
dec
cmp
push
pop
mov
xlat
fdivr
rcrl
loopne
jnp
jl
jo
sarl
lret
sbb
inc
sarl
sarl
inc
cmpsl
dec
testb
lock
rcll
sub
push
shll
push
ja
rcll
ret
mov
roll
pop
loop
jo
pop
rorl
pop
mov
push
jne
adc
push
jle
mov
cs
cmpb
dec
mov
and
aad
push
adcl
sub
loope
inc
jmp
and
fidivrl
in
out
lock
sub
mov
je
xor
cmp
sbb
loopne
and
scas
pop
hlt
roll
addr16
add
sbbb
add
pop
sub
mov
rcl
adc
and
jo
mov
insl
adc
fsubl
jne
sti
xchg
outsb
jmp
mov
inc
pop
mov
rcrl
test
jge
rcrl
or
sbb
outsb
and
shll
stos
mov
and
sub
mov
jo
add
mov
sub
addr16
inc
pop
sar
clc
test
pusha
rorl
cs
mov
mov
sbb
pop
mov
push
push
loop
test
sbbb
pop
rorl
and
mov
push
fneni(8087
cs
ret
mov
loop
sub
test
lds
push
or
andb
mov
loope
inc
jle
mov
cmp
ret
or
lea
rorl
or
fs
ds
sub
loope
rcrl
jmp
jl
loop
and
insl
es
sub
dec
and
sub
test
push
fcoml
adc
and
mov
mov
and
dec
push
mov
roll
fs
insb
sub
ret
pop
mov
mov
rcrl
add
pop
into
addl
pop
mov
shll
and
in
adc
pop
ret
shll
adc
mov
adc
push
das
ds
ret
roll
and
je
rorl
add
shr
mov
sarl
push
rcll
sub
rcll
xchg
add
jle
or
mov
add
pop
pop
jno
adc
pop
mov
rcl
inc
dec
mov
push
shrl
stos
adc
shll
pop
shl
inc
addl
pop
shll
cmpsl
mov
jmp
pushf
je
movsl
inc
addb
popa
xor
shl
cld
jo
pop
sub
stos
mov
adc
sub
inc
rorl
pop
shl
push
rol
in
ja
mov
rol
cmp
xor
and
cmpb
mov
rorl
cwtl
loop
and
adcb
mov
push
mov
ja
shrl
mov
roll
cs
pop
mov
mov
mov
and
pop
mov
rcll
sub
shll
mov
shl
xor
mov
pushf
ljmp
xchg
mov
or
pop
mov
jne
cs
addb
pusha
pop
roll
test
orb
pop
mov
or
jbe
mov
cmpb
or
fidivl
add
cmp
pop
pop
shrl
out
push
push
or
scas
es
mov
loop
pop
sub
mov
cmc
xchg
dec
test
aad
dec
rcrl
pop
ret
sarl
sbb
dec
inc
pop
sub
test
pop
pushf
rorl
add
pushf
fimull
movl
jne
adc
imul
test
roll
xchg
xor
jnp
cmpb
or
mov
shll
or
rcl
jae
pop
mov
adc
rcrl
test
or
push
xor
lcall
test
mov
in
inc
xor
adc
ret
hlt
aas
je
loope
ficompl
dec
pop
mov
roll
jno
or
je
rcrl
add
and
pop
mov
inc
roll
jmp
rcrl
stc
push
cs
ret
and
mov
mov
fcoml
sub
push
mov
cs
roll
add
mov
rcl
mov
roll
in
cwtl
adc
inc
dec
cmp
adc
and
leave
cmp
lds
jno
adc
roll
and
sbb
or
aad
dec
rcll
adc
sub
adc
xor
jmp
sbb
sarl
stos
push
inc
dec
rcll
sub
push
jbe
push
pop
mov
mov
je
roll
roll
sarl
sub
lods
cs
ret
xchg
movsb
push
xor
incb
leave
add
nop
data16
push
dec
mov
push
pop
mov
and
sbb
pop
cmp
mov
flds
jmp
dec
sub
shrl
shl
fldcw
lods
adc
roll
into
mov
imul
inc
dec
rcrl
rcll
shrl
dec
cmp
int
or
mov
adc
mov
inc
dec
mov
orb
mov
pop
outsl
rcl
adc
add
mov
or
jo
or
ret
push
sub
add
cs
rcl
fsubs
mov
int3
cs
sbbb
test
xor
pop
mov
add
add
jo
mov
adc
clc
cltd
mov
shll
roll
shl
js
mov
push
addr16
xchg
cmp
pop
push
pop
mov
xor
push
fisttpl
push
addr16
dec
jno
adc
pop
enter
push
pusha
xor
pop
dec
scas
mov
shrb
jb
movsl
mov
jmp
push
repnz
mov
mov
xor
or
cltd
mov
shrl
sbb
push
xor
subl
inc
pusha
movsl
imul
fwait
int3
jo
adc
push
sarb
push
imul
repz
xchg
push
inc
inc
adc
mov
sbb
sub
andl
shl
adc
pop
aad
dec
mov
leave
mov
decl
inc
dec
pop
repz
adc
je
add
cmp
sub
push
roll
call
mov
inc
jo
adc
test
pop
orb
repz
jo
lods
rep
mov
cmp
repz
stos
xchg
jo
xor
sbb
mov
mov
repz
xchg
repz
leave
rol
push
cmc
lret
iret
sbb
mov
pop
sbb
repz
jmp
add
xchg
rcrl
mov
aam
cs
ret
repz
xor
stos
adc
mov
and
repz
pop
sub
rcll
push
xor
rcll
push
adc
call
repz
popa
and
pop
repz
sub
insb
cmp
mov
subb
dec
je
adc
or
test
test
js
add
test
sbb
mov
push
rorb
repz
and
dec
scas
loopne
add
or
mov
sbb
repz
ret
push
add
push
sbb
pushf
int3
xchg
outsl
pop
dec
cs
ret
cs
adc
repz
or
imul
xlat
dec
jle
inc
dec
js
repz
aam
dec
mov
push
repz
and
or
mov
and
pop
xchg
push
mov
lds
add
pop
push
or
push
sub
cs
ret
push
pop
rolb
js
push
pop
mov
add
push
add
add
inc
pop
mov
jo
mov
rcll
push
pop
cmc
pusha
and
inc
dec
push
pop
sub
adc
add
fwait
les
inc
dec
push
rolb
cmp
push
hlt
adc
jo
adc
jl
xor
enter
daa
rclb
push
push
or
call
dec
or
loope
les
or
ja
push
aam
push
push
call
inc
dec
push
cmc
das
pop
ret
ja
loopne
and
adc
mov
sbb
in
push
jno
insl
jmp
inc
dec
push
adc
add
dec
cs
adcb
pop
ret
jge
ret
push
das
xchg
into
les
rcll
lods
and
jbe
and
jns
adc
stos
pop
adc
mov
jg
pop
fdivs
push
jmp
add
mov
mov
leave
pop
inc
outsb
push
cmpsl
sbb
mov
xchg
aam
int
rcrb
add
iret
in
shll
adc
cwtl
add
xchg
and
jg
jg
xchg
mov
xor
push
mov
test
sbb
rorl
pop
mov
push
xor
mov
fadd
inc
dec
push
shlb
ljmp
repnz
add
sub
dec
js
push
sub
push
or
pop
inc
push
mov
pop
sub
iret
adc
lods
enter
mov
jb
cs
pop
ret
jo
lods
adc
fs
mov
mov
add
orb
jecxz
and
jns
lcall
cs
push
dec
insb
push
jo
adc
mov
mov
push
rcll
or
stc
inc
je
inc
push
add
hlt
movsb
xchg
adc
xor
ret
rcll
test
inc
jo
pop
dec
xchg
add
pop
mov
adc
mov
sbb
xchg
add
adc
sub
add
jmp
enter
push
je
adc
push
xchg
mov
push
fcmovb
rorl
mov
fsubs
cs
push
xor
pop
mov
mov
sub
test
or
pop
mov
roll
cs
orb
pop
addb
pop
addb
xlat
inc
add
push
mov
arpl
sub
push
mov
and
inc
dec
jo
push
pop
rcll
out
rcll
inc
mov
pop
jno
gs
pop
pop
pop
mov
push
push
push
pop
sub
and
mov
mov
push
or
xor
mov
xchg
mov
push
and
fs
dec
jo
mov
aad
push
lds
fstpt
adc
dec
shll
push
shll
push
rolb
dec
push
inc
dec
xor
push
push
push
push
les
adc
inc
jo
dec
mov
inc
dec
mov
popa
inc
dec
lds
mov
push
inc
mov
push
pop
sub
push
inc
dec
xor
sbb
adc
push
inc
sub
pop
andb
inc
dec
mov
dec
mov
int3
dec
scas
or
rcll
dec
mov
or
aam
push
out
mov
mov
jae
pop
mov
push
pop
sub
push
inc
or
xchg
pusha
add
test
dec
cmp
push
push
roll
rcll
pop
pushf
push
sub
mov
add
push
pop
mov
mov
push
test
lds
ja
outsl
push
in
adc
pop
xchg
mov
adc
les
repnz
add
inc
and
pop
sub
addb
sarb
sbb
or
push
mov
push
pop
add
subb
sub
mov
inc
add
adc
jo
add
inc
push
fistpll
push
scas
sub
xchg
jo
pop
push
xchg
sub
mov
sub
adc
inc
push
je
adc
push
push
cs
ret
clc
push
and
fiadds
mov
mov
adc
outsb
arpl
push
lods
jl
lods
mov
dec
pushf
mov
push
inc
jo
push
mov
push
mov
mov
out
xchg
les
push
jl
jo
adc
imul
cs
push
add
add
add
mov
ret
fcoml
jo
pop
push
mov
adc
mov
roll
imul
push
pop
push
test
loope
push
mov
aam
xchg
sub
xchg
push
push
push
mov
and
xor
adc
pop
push
out
orb
jo
adc
lret
push
push
xor
test
and
sbb
mov
loopne
push
push
stos
xor
int
push
test
dec
or
push
fidivs
push
pop
jne
adc
inc
or
sarl
cmp
sub
dec
ret
pop
push
das
repnz
fisttpll
adc
push
inc
jno
adc
push
mov
xor
or
fwait
add
mov
clc
insb
and
in
scas
dec
pop
mov
push
lock
mov
fildl
sarb
push
pop
and
push
cmp
push
ss
mov
push
push
pop
xor
rcll
pop
ret
push
and
adc
mov
adc
push
fs
sub
mov
aaa
pop
push
fwait
push
and
mov
xor
addr16
mov
and
mov
mov
call
mov
add
or
cs
addb
scas
subl
sub
aaa
jo
push
insb
sub
nop
mov
push
xor
test
call
pop
psubsb
dec
push
aas
mov
dec
xorl
inc
jmp
jp
pusha
dec
sbb
push
push
push
mov
movsl
mov
pop
sub
inc
mov
push
ret
test
inc
xchg
or
pop
push
pop
cs
ret
push
pop
mov
cmp
push
cs
ret
and
adc
or
dec
clc
dec
je
rorl
inc
push
add
jo
inc
push
and
add
mov
and
sub
pop
sub
shrl
ret
sub
pop
ret
test
adc
lods
inc
mov
mov
inc
loope
shll
push
hlt
sub
int3
lock
and
pop
push
icebp
test
orl
sub
mov
mov
gs
mov
cli
fmull
push
clc
push
pop
dec
add
inc
and
rcll
push
or
pop
ret
or
dec
mov
dec
sbb
mov
in
mov
lods
mov
rcll
push
inc
push
sub
adc
adcb
xorb
and
add
sub
push
adc
and
xor
dec
pop
int
xor
dec
xor
xor
daa
xor
xor
stos
jno
xor
xchg
xor
dec
pop
ret
xchg
loopne
and
rclb
out
ss
xor
adc
mov
rclb
xor
pop
xor
inc
sub
sub
stos
xchg
adcl
adc
add
dec
dec
mov
xlat
xchg
pop
fisubrs
loopne
and
or
sahf
push
ret
fisubrs
push
sahf
mov
jbe
lcall
loopne
es
cmp
xchg
xor
cmp
xor
push
and
sbb
xor
dec
xor
xor
mov
fcoml
xor
dec
loope
loopne
xor
push
jo
daa
sub
mov
sub
jno
adc
pop
xor
movsb
and
adc
or
out
ja
xor
xor
cmp
jno
xor
jl
xor
xor
inc
push
pushf
mov
xor
xlat
and
ret
xor
dec
xor
lahf
sub
fidivrl
ja
into
int
out
adc
mov
add
pop
jne
xor
in
cmp
dec
xor
adc
dec
pop
xor
paddw
dec
pop
ret
int3
adc
cmpl
mov
mov
xor
sub
movsb
xor
pop
dec
pop
jno
or
dec
xor
je
mov
mov
outsl
jg
push
mov
mov
in
cmpsl
lahf
xor
dec
sbb
and
fidivs
push
push
sti
mov
xchg
jo
enter
xor
test
fcomps
xor
notb
pushf
mov
xor
xor
pop
adcb
inc
mov
repnz
xchg
jp
adc
imul
jo
xor
daa
sub
or
push
popf
mov
xor
xor
sbb
mov
test
or
aad
xor
imul
daa
sub
ljmp
popf
mov
xor
ret
stos
xor
mov
mov
aaa
aad
dec
xor
or
imul
movsb
and
xchg
xor
mov
adc
sub
adc
sub
out
cmp
xor
adc
push
mov
imul
xor
ret
cwtl
xor
or
push
xor
movsb
and
test
pop
push
push
les
xor
pusha
add
sub
orl
nop
mov
jne
adc
in
ret
rclb
xor
mov
xor
pop
pop
ret
cmp
mov
dec
fdivl
xor
pop
lds
xor
rorb
mov
xor
sub
xor
out
pushf
loop
inc
pop
jmp
imul
test
loopne
clc
test
dec
dec
xor
xchg
mov
sbb
cmp
popf
xor
stos
jecxz
push
or
cmpl
xor
adc
xor
mulb
pop
mov
loop
xor
xchg
mov
rclb
scas
mov
adc
jno
ds
adc
inc
sbb
dec
dec
mov
adc
std
dec
xor
and
outsb
or
aaa
pop
rcrl
shlb
mov
cmp
add
sub
adc
xor
cmp
sbb
rclb
imul
mov
pop
pusha
pop
rorb
xor
daa
sub
pop
nop
xor
movsb
and
pop
dec
dec
mov
mov
ja
xor
popf
xor
cmp
pop
daa
xor
rorl
push
lds
mov
cmpsb
xor
dec
notl
sbb
out
adc
jmp
and
xchg
xchg
jo
das
enter
xorl
sub
lods
push
rclb
mov
pop
popf
pop
cwtl
insl
jnp
xor
push
je
lods
loopne
and
and
adc
sub
mov
stos
lods
pop
push
cs
mov
rclb
xchg
mov
mov
xchg
mov
in
mov
xchg
mov
or
cmp
imul
in
test
push
ret
xchg
mov
stos
xchg
xchg
mov
cmp
xlat
scas
mov
pop
js
jp
cmp
xchg
mov
lock
or
mov
movsb
mov
das
push
or
xchg
iret
leave
and
mov
shrb
mov
mov
js
sub
xchg
pop
adc
shrb
adc
mov
das
jo
mov
mov
and
outsb
push
pop
test
push
inc
test
xchg
mov
cmpsl
mov
jl
pop
add
xchg
mov
mov
pusha
mov
adc
test
adc
aam
xchg
imul
and
and
jg
sub
insl
imul
pop
and
push
sub
lret
dec
mov
imul
sub
out
and
xchg
out
adc
dec
add
sub
out
xchg
pop
ret
mov
and
lret
and
pop
and
js
dec
mov
imul
dec
mov
imul
dec
mov
imul
imul
dec
pop
ret
mov
pop
ret
imul
and
sub
mov
mov
push
cwtl
cmp
rclb
pop
push
mov
push
mov
in
dec
pop
mov
adc
xchg
and
xchg
xchg
mov
xchg
call
mov
mov
mov
dec
dec
mov
jmp
xchg
ljmp
mov
push
mov
add
mov
push
mov
jnp
dec
adc
mov
push
scas
mov
ds
imul
dec
dec
pop
pop
mov
add
xor
mov
into
shll
insb
inc
ljmp
fstl
push
or
hlt
inc
mov
mov
push
mov
cmc
cmp
in
inc
dec
mov
mulb
add
push
shlb
or
mov
sbb
xor
push
xchg
mov
adc
push
dec
dec
mov
pushf
dec
sub
cmp
rclb
mov
add
inc
xor
and
mov
mov
mov
add
movsb
shlb
adc
pusha
push
movsb
mov
sbb
test
xchg
mov
dec
sbb
adc
sbb
mov
push
fisttpl
ret
push
mov
xchg
mov
outsl
adcb
mov
push
push
shlb
add
sub
lock
push
xor
or
std
cmp
add
sub
les
js
sbbl
or
adc
sub
adc
xchg
and
and
push
stos
push
fdivrs
mov
stos
mov
mov
pushf
sbb
mov
rclb
inc
mov
mov
push
xchg
mov
aaa
and
sub
movsl
adc
imul
mov
or
push
adcl
mov
sub
out
sub
inc
lds
pop
xchg
mov
cld
shll
mov
cmpsb
movsb
and
mov
adc
sub
rclb
fisubrs
xchg
inc
sahf
out
or
mov
rcll
adc
mov
mov
movsb
and
fs
aas
test
sub
mov
xchg
lret
dec
enter
pop
in
add
add
lret
lcall
add
and
sub
mov
test
mov
mov
nop
xchg
aaa
or
dec
xor
add
test
or
add
dec
mov
add
sub
mov
and
incl
mov
push
mov
add
jno
lcall
dec
fsubl
push
or
jno
test
xchg
sub
dec
cmp
xchg
repz
enter
movsb
cmp
mov
dec
lods
push
jmp
outsb
fs
call
and
sbb
stc
es
push
push
popf
add
ret
pop
inc
ret
icebp
sbb
jo
sub
add
sti
jp
xchg
add
ret
dec
mov
enter
cmp
dec
push
rclb
into
add
in
push
dec
dec
mov
fisubrs
push
xchg
mov
mov
addl
call
cmpsl
dec
pop
mov
sub
cmp
jl
mov
push
addl
sub
pop
mov
dec
scas
or
jnp
rclb
mov
sub
dec
and
mov
sub
pop
xchg
add
adc
mov
stos
lahf
aam
pop
xorb
ret
mov
dec
mov
sub
push
and
lret
adc
add
xor
cmp
push
mov
ja
lock
mov
sub
cs
and
jg
push
xchg
mov
shlb
mov
push
ret
or
dec
pop
ret
xor
mov
movsb
jae
cmpsb
sub
mov
xchg
xchg
and
test
stos
add
addl
add
pop
dec
pop
orb
push
mov
adc
add
push
sbb
arpl
xchg
xchg
xor
inc
cmpsb
and
les
mov
and
sbb
mov
imul
aad
dec
dec
push
enter
mov
mov
mov
repz
push
xchg
mov
in
and
add
and
mov
enter
ret
sbb
enter
add
fbstp
mov
lea
sub
mov
imul
mov
outsl
loopne
nop
add
test
ja
orw
addr16
out
mov
rolb
sbb
lods
lods
push
out
neg
jnp
pop
push
push
push
xchg
dec
sahf
ja
mov
rolb
add
cmp
das
outsb
repnz
fildl
insl
pusha
jp,pn
test
imul
or
mov
outsb
mov
add
fsts
dec
mov
inc
and
call
stos
movsb
mov
inc
in
pop
xchg
mov
mov
xchg
xchg
jo
inc
enter
mov
cltd
push
fisubrl
cld
movsl
sub
addr16
push
add
jnp
dec
dec
or
xor
cmp
pop
push
shlb
add
mov
or
out
push
in
inc
dec
dec
mov
pusha
and
push
rclb
mov
mov
adc
data16
std
inc
mov
or
and
out
push
mov
cmpb
pop
lret
or
pop
mov
repz
fwait
jno
cmp
cwtl
xor
aaa
add
pop
inc
dec
mov
adc
mov
cmp
jmp
pushl
adc
or
mov
ds
sbb
mov
cmp
xchg
inc
repnz
shr
enter
or
or
ret
push
mov
fwait
popa
add
cmp
pop
mov
idivl
xchg
addr16
mov
and
or
inc
inc
xchg
stos
sub
xor
jno
pop
xchg
mov
cmpsl
cmp
jno
dec
dec
mov
xchg
mov
mov
mov
mov
jnp
or
dec
cmp
push
mov
out
push
dec
mov
jp
cmp
push
shlb
loopne
pusha
add
sub
mov
mov
mov
inc
add
sub
ret
nop
jnp
or
movsb
dec
pop
mov
jo
loope
or
popa
adc
popf
push
and
movaps
mov
adc
sub
aas
ss
test
aas
add
xchg
mov
cmpsb
movsl
pop
ret
mov
mov
pop
mov
and
sub
push
dec
dec
mov
sbb
pop
sub
mov
pop
cmp
and
and
sub
xchg
loopne
mov
mov
int
pop
dec
dec
adc
dec
imul
enter
add
pop
and
dec
push
rclb
mov
out
add
test
fsubl
or
push
and
mov
mov
adc
mov
inc
push
rclb
mov
mov
or
sub
add
in
xchg
xchg
xor
push
and
xchg
push
cmp
xchg
dec
fistps
push
enter
loope
pop
ret
mov
and
test
xchg
add
xchg
mov
leave
or
lods
and
push
sahf
or
sahf
inc
mov
jb
pop
nopl
inc
ja
rclb
mov
sub
sub
mov
mov
add
scas
jb
inc
pop
inc
mov
fidivrs
push
lret
or
push
rclb
dec
repz
mov
push
mov
es
add
cmpsl
in
es
jnp
nop
iret
add
and
pushf
cmp
int3
rcl
mov
test
pop
daa
nop
adc
push
shlb
dec
dec
mov
cwtl
or
sbb
mov
and
mov
xorb
pop
ret
sub
stos
dec
mov
je
sub
mov
es
xchg
mov
mov
xor
xorl
xchg
mov
imul
fiaddl
insl
pop
mov
sub
std
inc
stos
add
rclb
adc
bnd
nopl
ss
mov
gs
push
and
mov
xchg
mov
mov
mov
test
je
fldl
add
mov
mov
rclb
inc
call
orb
xchg
pusha
and
shll
push
dec
mov
mov
adc
push
fidivs
jo
mov
add
scas
mov
xlat
add
sbb
sbbb
inc
mov
inc
fsubl
dec
pop
mov
cmp
mov
fnsave
sub
xor
mov
loopne
xor
stos
movsb
and
cmpsl
bound
cli
pop
sub
adcb
sub
orb
or
test
xchg
inc
xor
cmp
rcll
push
xor
adc
rclb
add
xchg
and
fs
dec
dec
mov
nop
subb
or
aad
pop
ret
int3
xchg
xchg
xchg
pusha
cmpsl
outsw
sub
inc
call
dec
das
dec
push
rclb
xchg
nop
xor
enter
dec
push
inc
dec
dec
xchg
xor
and
repnz
insb
pusha
pop
clc
ljmp
mov
xchg
arpl
add
dec
xchg
lds
imul
push
andb
push
add
jns
and
jg
adc
push
addb
jl
xor
xchg
cmp
shlb
push
xor
add
xchg
jo
xchg
out
popf
sub
shlb
jp
xchg
std
aas
push
rclb
dec
jo
rclb
dec
pop
push
mov
adcl
dec
dec
mov
addr16
push
xchg
and
inc
scas
movsb
and
push
adc
movsl
add
shlb
inc
dec
dec
xchg
mov
ret
dec
push
push
push
sub
push
rclb
xchg
stc
cs
dec
or
push
dec
add
dec
pop
ret
adc
inc
mov
add
push
xchg
jecxz
jp
or
or
inc
dec
dec
xchg
xchg
mov
xchg
cmpsb
je
inc
lea
lock
mov
add
dec
mov
cmpsl
inc
mov
and
rclb
xchg
shrl
insl
outsb
or
and
or
out
add
inc
cmpsb
push
pop
fistpll
cmp
pop
mov
sub
jns
mov
or
dec
ret
shll
adc
adc
push
subb
add
or
mov
xor
push
rclb
pushf
out
or
adc
js
pop
ret
pop
mov
jecxz
dec
roll
dec
lcall
das
dec
fsubrs
loope
mov
push
dec
roll
ds
aaa
lcall
in
lock
xchg
adc
adc
popa
movsb
xor
jae
imul
pop
pop
dec
addl
mov
stc
push
xchg
and
xor
loopne
movsb
and
pop
addb
dec
rorl
dec
sbb
mov
dec
shll
inc
dec
shll
mov
adc
inc
dec
shll
ret
and
push
rcl
insb
fbld
ror
add
adc
rclb
outsb
push
js
pop
ret
dec
sub
call
cmovp
jg
or
addl
or
nop
inc
pop
xor
outsb
sub
stos
dec
stos
out
pop
dec
dec
sbb
rolb
xor
test
popf
dec
pop
js
mov
and
aam
out
loop
push
shrl
adc
pop
ret
cmp
imul
or
lods
sub
inc
test
test
and
rclb
outsb
mov
cmp
jo
mov
shlb
xchg
rcrl
xchg
inc
inc
fs
push
mov
add
inc
sub
in
sub
pop
and
icebp
loopne
dec
shrl
xchg
mov
and
shrl
add
hlt
or
ret
adc
push
imul
dec
dec
rclb
sub
rclb
cs
and
shrl
push
sbb
xchg
mov
sub
aam
sbb
adcb
push
rclb
lods
pop
shll
and
les
mov
mov
ret
mov
dec
dec
xor
rcll
sub
dec
dec
fdivs
adcl
loope
push
rcl
push
rcrb
sbb
jne
sbb
imul
xor
dec
loope
imul
out
or
js
fs
rorb
inc
pop
ret
lret
stos
fbstp
pop
push
fucomp
inc
neg
xor
nop
push
js
ds
roll
pop
daa
push
imul
xlat
xor
and
xchg
mov
dec
mov
lret
or
cmp
add
mov
sbb
pop
adc
gs
xor
pop
or
jb
pop
jb
popa
adc
arpl
and
mov
pop
test
add
mov
pushf
add
stos
movsb
and
dec
lret
sub
xchg
mov
mov
push
dec
cmpl
mov
loope
inc
or
xchg
test
dec
pop
mov
int
jp
dec
pop
ret
imul
ret
add
dec
pop
mov
add
cmpsb
in
mov
in
shll
sub
xchg
pusha
ret
cmpsl
xor
cwtl
push
das
sub
mov
test
dec
or
xchg
xchg
nop
xchg
mov
dec
dec
mov
popa
mov
add
pushf
mov
inc
add
or
mov
pop
call
sub
sbb
push
sbb
sti
sbb
sbb
mov
push
shlb
lahf
and
mov
dec
repnz
inc
dec
dec
mov
push
sbb
xor
xchg
mov
mov
ficoml
shrl
mov
ljmp
and
inc
rolb
mov
dec
cmp
pop
sbb
inc
jle
dec
mov
addb
or
mov
outsb
sub
test
sbb
shlb
and
cmp
xor
and
and
iret
push
rclb
out
cmp
sbb
mov
xor
push
dec
mov
inc
or
mov
cmp
dec
mov
cmp
cmp
hlt
shll
dec
dec
cmp
or
mov
inc
mov
inc
scas
and
scas
sub
cltd
and
adc
or
or
and
arpl
fmull
mov
jo
cmp
wrmsr
call
adc
sub
lock
js
and
arpl
mov
push
or
push
push
xchg
imul
rclb
jae
pop
ret
or
sub
jae
adc
inc
add
add
xchg
xchg
xor
jno
rclb
push
and
sub
inc
dec
inc
and
ret
sbb
out
and
fwait
mov
jo
xchg
mov
push
ds
adcb
pop
ret
sub
push
in
jae
fiadds
test
mov
push
jne
mov
xor
outsb
sbb
add
jae
mov
movsb
and
test
rclb
outsb
xorb
test
push
push
jae
stos
ljmp
scas
dec
pop
cmpb
jbe
idivb
orb
and
test
push
rclb
push
push
jae
mov
test
stos
movsb
and
rorl
in
pop
ret
sub
mov
insb
je
and
mov
cmpsl
outsb
jae
fadd
push
rorl
xor
out
inc
and
dec
dec
push
mov
dec
fmull
popa
mov
je
dec
jae
cld
add
movsb
and
and
jae
pop
ret
push
jae
xor
adc
mov
jae
push
add
pop
push
rclb
jae
push
dec
dec
js
jae
test
add
jae
xchg
xchg
lock
jae
imul
jae
inc
mov
test
jae
lods
dec
pop
ret
movsb
and
jmp
ds
xchg
mov
xor
inc
bound
sbb
imul
movsb
and
mov
sbb
outsb
xchg
dec
pop
ret
xchg
dec
dec
mov
xchg
jo
xchg
lods
bound
js
xchg
xchg
cmp
stc
push
xchg
pop
push
mov
inc
dec
dec
xchg
push
rclb
sahf
jb
and
das
mov
andb
roll
dec
pop
xchg
lods
stos
xchg
xchg
jo
xchg
sub
push
iret
xchg
dec
dec
mov
imul
xchg
inc
inc
dec
dec
jo
xchg
inc
mov
in
adc
xchg
xchg
xchg
jo
or
mov
dec
cmp
xchg
test
in
add
mov
jl
movsb
and
sub
xchg
iret
adc
sub
push
inc
test
test
xchg
and
mov
add
dec
cmp
xchg
push
inc
dec
xchg
or
push
push
and
jo
rclb
xchg
movsb
or
int3
xchg
call
scas
mov
xchg
push
stos
xchg
xchg
xchg
and
mov
xchg
cmp
jns
add
push
push
aaa
loop
nop
sbb
pusha
adc
testl
ret
xchg
test
out
pop
push
mov
mov
imul
outsb
sar
adc
loope
dec
mov
mov
dec
xchg
adc
inc
call
aaa
sbb
call
and
mov
imul
add
xchg
cs
adc
dec
mov
xchg
xchg
push
xor
sbb
jo
orl
lods
mov
and
push
rclb
in
in
jmp
push
pop
pop
es
jnp
push
xchg
test
lahf
push
iret
and
xchg
popa
push
inc
and
loope
mov
mov
addb
xchg
xchg
sub
or
add
add
sub
and
out
adcb
push
xchg
loopne
je
mov
lock
mov
adc
dec
pop
xchg
pusha
mov
ret
inc
fdivs
dec
pop
xchg
lock
pop
inc
fisubrs
add
or
add
xchg
mov
pop
pop
add
xchg
push
push
xchg
shrl
imul
push
adc
cmp
xchg
test
jmp
aaa
and
fidivrs
pushf
in
les
lods
sbb
xchg
cmp
cmpl
xchg
xchg
jo
xchg
stos
movsb
and
xchg
dec
dec
cmpsl
jne
loope
rolb
and
dec
push
rclb
xchg
call
movsb
mov
ds
xchg
pusha
cmpsl
xchg
xchg
and
or
mov
pop
cmp
xchg
ljmp
iret
aad
roll
xchg
jle
add
xchg
mov
inc
enter
hlt
mov
cmp
shrb
push
xchg
mov
xchg
xor
cmp
scas
nop
popa
lock
xchg
push
and
adc
mov
inc
roll
xchg
cmp
test
add
xchg
lahf
dec
sbb
xor
xchg
mov
xchg
sub
ja
sub
xchg
mov
fwait
pop
sub
dec
dec
mov
push
inc
xchg
and
push
rclb
push
push
jg
inc
dec
dec
xchg
fs
pop
ret
mov
mov
push
add
loopne
sbb
xchg
mov
out
dec
pop
ret
push
xor
push
rclb
xchg
xor
xor
add
int
imul
call
or
pop
xadd
cwtl
dec
xchg
jge
arpl
dec
xchg
xlat
imul
push
mov
insl
imul
and
mov
dec
pop
ret
pop
mov
pop
or
and
vmwrite
cld
add
lret
and
or
or
or
mov
mov
ret
xchg
test
sbb
dec
xchg
xchg
jmp
std
xchg
sub
push
pop
jp
push
sub
jmp
and
incb
iret
repz
push
jns
push
pop
mov
mov
inc
addl
loopne
mov
and
add
dec
xchg
xchg
xchg
mov
call
xor
inc
dec
dec
xchg
or
mov
inc
push
xchg
mov
lret
imul
cmp
dec
pop
subb
push
stc
push
rclb
xchg
rorb
out
andl
stc
mov
in
pusha
adc
adc
mov
adc
push
scas
jl
sbb
add
mov
movsb
and
sbb
xchg
mov
add
cmp
push
shlb
rclb
in
xchg
xchg
roll
add
test
push
rclb
dec
pop
xchg
add
xchg
and
adc
xchg
mov
add
pop
sub
mov
pop
ret
xchg
andl
xchg
dec
dec
xor
out
mov
mov
test
lcall
and
subb
stos
movsb
and
xchg
adc
mov
xchg
xchg
xchg
imul
pop
adc
dec
add
sub
outsl
add
mov
xchg
push
dec
dec
xchg
xor
and
ret
push
adc
dec
xchg
mov
rclb
push
rclb
xchg
dec
pop
inc
dec
rol
dec
inc
dec
xchg
mov
sbb
dec
pop
xchg
inc
dec
pop
adcb
mov
cmpsb
mov
and
xchg
dec
jo
push
addr16
jo
dec
xchg
pop
nop
xchg
pusha
xchg
movsb
test
mov
xchg
push
dec
dec
mov
into
in
data16
mov
xor
add
loope
sbb
add
cmp
je
add
adc
and
or
sbb
scas
and
leave
cs
jbe
pop
inc
mov
hlt
push
dec
push
pop
mov
mov
adc
pop
ret
in
or
ss
rclb
pop
xchg
add
add
mov
mov
mov
cmp
xchg
jle
mov
push
call
cmp
dec
pop
ret
icebp
xor
xchg
xchg
pusha
mov
pop
xor
or
mov
call
call
add
cmpsb
lods
out
cltd
or
or
mov
xchg
in
xchg
xchg
and
rclb
add
scas
xchg
hlt
cli
stc
adc
xchg
loopne
add
xchg
xor
add
jno
mov
and
and
sub
adc
mov
dec
pop
xchg
dec
pop
ret
xchg
xchg
xchg
jo
add
mov
pusha
sub
adc
outsb
jbe
or
or
add
xchg
mov
xchg
jns
push
push
rclb
xchg
mov
sub
int3
fsts
xchg
nop
jge
sub
rclb
xchg
or
dec
pop
ret
pop
adcb
lock
xchg
mov
adc
push
rclb
adc
xchg
mov
rcll
add
inc
xchg
xchg
cs
dec
dec
adc
sub
adc
movsb
and
test
xchg
mov
mov
cmpsl
xor
les
ja
xchg
xchg
popf
lcall
cmp
addl
xchg
pop
xchg
mov
xchg
and
xchg
mov
xchg
and
popa
mov
and
ret
pop
adcb
es
dec
xchg
dec
add
add
xchg
dec
cwtl
or
lret
push
rclb
out
mov
xchg
adc
add
xchg
pop
ret
mov
xchg
xchg
mov
sarl
xchg
shlb
xchg
or
push
rclb
push
mov
add
mov
inc
xchg
mov
xchg
and
mov
or
adc
mov
cmp
inc
add
add
inc
lock
xor
sbb
and
dec
sbb
xor
pop
adc
and
pop
push
xchg
sar
sub
xchg
inc
dec
dec
mov
xor
xchg
xchg
xchg
mov
pop
test
xor
aaa
inc
xchg
xchg
mov
add
imul
sbb
xlat
or
pop
xchg
imul
adc
int3
xor
mov
jge
xchg
mov
pop
mov
pop
push
rclb
inc
dec
dec
xchg
pop
ret
adc
sbb
dec
xchg
mov
add
mov
rclb
aam
mov
xchg
cs
shlb
push
rclb
mov
push
adc
add
dec
dec
sbb
pop
dec
mov
inc
xchg
imul
inc
dec
xchg
xor
rolb
xchg
adcb
adcb
add
adc
xchg
mov
sub
cmp
sbb
and
dec
dec
xchg
es
dec
dec
sbb
xchg
mov
push
add
xchg
mov
shll
push
stos
movsb
and
and
pushf
pop
arpl
xchg
nop
xchg
dec
sub
jb
cmp
loopne
sbb
adcb
sub
enter
outsb
and
mov
dec
jo
xchg
xchg
and
xchg
dec
mov
stos
movsb
xchg
fnstenv
xchg
mov
sbbb
push
std
push
mov
pop
ret
imul
mov
aad
mov
push
xchg
xchg
xor
out
test
xchg
xchg
loopne
push
push
rclb
xchg
mov
add
sub
fwait
js
sbbb
mov
or
mov
push
ret
sbb
mov
sub
mov
xchg
adc
pop
xchg
sub
jbe
pop
push
xchg
push
rclb
outsb
inc
mov
rclb
mov
xchg
pop
and
ffreep
mov
xchg
xchg
mov
xor
adc
test
xchg
mov
xchg
cmp
or
popa
mov
call
inc
bound
in
mov
movsb
xchg
imul
mov
pusha
subb
loope
xchg
jge
xchg
mov
xchg
xchg
mov
rcll
xchg
dec
outsb
in
push
xor
cmp
inc
or
inc
add
sbb
rclb
and
push
adc
loopne
inc
push
xchg
add
out
mov
inc
and
or
addr16
sub
inc
push
ja
and
cmpsw
and
imul
or
mov
rclb
pop
orb
add
pusha
jge
dec
pop
orb
sbb
sub
and
xchg
in
add
aas
adc
and
mov
inc
pop
rclb
xchg
mov
ss
jb
push
push
xchg
pop
ret
fiaddl
lcall
mov
add
sub
push
adc
and
sahf
xchg
sub
sub
push
adc
xchg
mov
cmp
pop
adc
movntps
xchg
outsl
add
sub
js
xchg
xor
add
cmp
and
je
lods
fsubs
or
daa
stos
mov
cmpb
or
mov
xchg
push
pop
outsl
inc
add
jo
xchg
mov
mov
xor
xchg
dec
dec
sbb
imul
adc
bound
xchg
dec
cmp
aaa
inc
dec
xchg
jb
pop
or
imul
rclb
mov
xchg
sub
mov
and
sub
jbe
test
xchg
xchg
mov
divl
mov
lds
sbb
sarl
test
mov
or
sbb
ljmp
add
inc
xchg
xchg
mov
inc
xchg
mov
outsb
sub
mov
movl
add
mov
xchg
xchg
loopne
gs
cmp
mov
mov
adc
dec
push
xchg
pop
ret
mov
orb
xchg
dec
pop
ret
xchg
adc
push
push
rclb
ja
fsts
sbb
test
dec
and
lods
sub
and
xchg
or
xchg
mov
mov
imul
sub
xchg
imul
dec
adc
aaa
dec
cmp
xor
xchg
movsb
and
pop
ret
xchg
cli
sbb
dec
mov
cmp
ja
dec
xchg
shlb
push
sub
cmpsb
xor
push
and
push
mov
pop
dec
inc
push
xchg
cs
push
dec
dec
xchg
sub
movsl
inc
push
and
xor
jne
and
or
adc
cmp
adc
leave
sbb
daa
lea
call
sarl
adc
xor
dec
movsb
or
add
test
adc
mov
cmp
mov
cmp
stos
std
pop
or
mov
jmp
mov
mov
add
or
sbb
stos
addr16
or
dec
mov
call
nop
mov
jmp
push
popf
pop
pop
push
mov
sbb
pop
jle
mov
stos
je
mov
out
inc
jmp
lock
adc
mov
fcmovne
sub
mov
mov
inc
inc
push
pop
ss
sbb
int
fcoms
add
xchg
enter
or
mov
addr16
mov
mov
cmp
push
jo
xor
mov
aam
mov
xchg
jns
hlt
xor
adc
jnp
adc
xor
arpl
mov
add
rclb
cmp
mov
add
inc
add
mov
jge
mov
add
xor
mov
addl
mov
sbb
jecxz
mov
push
mov
and
add
or
sbb
and
mov
push
mov
and
sbb
push
jbe
inc
inc
mov
push
mov
add
mov
lds
les
or
jne
pop
xor
roll
aam
push
and
jns
movb
xor
aam
rclb
les
loopne
hlt
pusha
iret
push
adc
stos
pop
xchg
aam
add
or
dec
in
add
push
fs
dec
ret
cltd
pop
js
add
cmp
nop
enter
rolb
dec
and
mov
dec
fwait
jns
xchg
icebp
sub
or
test
fwait
pop
xchg
and
lret
adc
mov
rorl
fwait
in
xchg
dec
or
mov
lock
shrl
gs
hlt
xchg
pop
jne
andb
pop
xchg
adc
popf
cld
stos
fwait
clc
or
adc
push
aas
push
pop
ret
jle
push
ss
sbb
ja
or
push
push
push
xchg
and
push
mov
in
push
and
cmp
sub
hlt
sbb
imul
roll
xor
int
in
in
lock
add
sbb
xorl
js
dec
aam
or
pop
mov
shll
push
sub
aam
test
cwtl
dec
fwait
mov
rorl
xchg
and
call
xor
lea
pop
lock
stos
gs
add
sbb
mov
jge
arpl
or
out
adcb
xor
dec
popa
push
loop
call
cmp
xchg
cmp
lods
popf
jae
sbbb
sti
es
mov
pop
xor
lods
jbe
nop
inc
scas
add
je
cmp
andb
gs
xchg
and
and
and
or
shrl
or
nop
iret
mov
movsb
call
sub
add
add
iret
stos
mov
lret
xor
mov
lcall
adc
sbb
push
xchg
adc
add
or
sahf
insl
rol
ja
inc
nop
adc
mov
out
cs
xor
adc
cmp
xchg
adc
push
imul
std
es
sbb
or
pop
or
or
subl
lea
dec
imul
pop
call
xor
sbb
jg
adc
insl
imul
push
mov
mov
add
or
js
jle
popa
cmp
sbb
adc
out
mov
loopne
dec
xchg
or
mov
dec
addr16
pop
mov
add
mov
mov
lcall
test
lds
hlt
andb
mov
jge
out
es
or
xor
add
fstp
sbb
sbb
jmp
cmp
nop
add
jnp
fistl
loope
or
shr
xor
push
and
out
ds
adc
and
rorl
and
faddl
pop
es
addl
sub
pusha
add
cld
clc
cli
sahf
dec
call
call
jp
popf
dec
pop
jno
data16
adc
or
aaa
push
push
inc
ret
mov
testb
and
nop
je
mov
inc
sub
enter
je
mov
andl
mov
cwtl
sbb
rorl
mov
insb
mov
pop
jl
mov
lret
dec
jl
jno
add
pop
cld
add
ds
mov
fs
dec
leave
clc
adc
das
stc
sahf
dec
imul
xor
inc
jo
stc
je
xchg
cmpsb
jno
push
insb
sbb
lds
les
sbb
mov
shr
push
add
insl
shlb
sub
rol
mov
sbb
xor
and
fcompl
fildl
push
loop
pop
int3
adc
push
cmp
call
fildl
rcll
rcll
add
mov
rol
mov
shll
add
dec
pop
pusha
push
inc
dec
jo
lds
test
inc
jecxz
insl
add
neg
arpl
sarb
shlb
fnsave
in
dec
jmp
ss
leave
loopne
mov
cmp
insl
shll
push
adc
pop
sbb
shrl
add
fs
ss
repnz
sbb
sbb
mov
mov
jmp
jo
shll
in
mov
negl
lock
shrl
les
fdivs
jo
sbb
push
outsb
mov
sub
fyl2xp1
xor
shll
jmp
sbb
mov
rclb
gs
les
push
les
testb
cmp
mov
xor
or
jmp
mov
pusha
or
push
push
out
in
add
adc
loopne
mov
pop
loop
push
inc
mov
xor
sbb
insl
rcll
sbb
rol
mov
jnp
aaa
ljmp
sbb
mov
add
insl
insb
sbb
sbb
fildl
loopne
or
fdivl
mov
ror
sbb
push
push
or
insl
rcrb
shr
pop
ss
dec
mov
loopne
insl
loopne
shl
and
mov
adc
addb
add
ljmp
shll
adc
mov
sub
cmpsb
and
popw
push
outsb
adc
push
adc
rcrl
mov
shl
sub
add
dec
dec
lds
mov
shrl
mov
fcomp
jno
shll
mov
push
add
adc
ljmp
xor
lds
mov
xlat
push
inc
push
insl
loopne
vaddsubps
rolb
rol
inc
jmp
mov
rorl
testl
dec
xor
fildl
roll
push
in
lds
jb
adc
sbb
pop
rorb
insb
roll
adc
jns
adc
push
rcr
rclb
enter
shrl
add
add
or
xor
add
popa
mov
ss
shll
inc
mov
ror
pusha
and
mov
xlat
aad
push
inc
insb
sbb
jl
insl
loopne
adc
outsl
roll
ret
mov
call
mov
fildl
shrb
or
insl
loopne
sub
rcr
ss
push
es
push
add
jno
add
ss
pop
andb
adc
sbb
fs
adc
roll
sbb
sub
fildl
mov
mov
fildl
jb
add
fdivs
pusha
rol
mov
mov
shll
shl
sbbl
fbld
mov
add
xchg
sbb
adc
push
roll
add
mov
and
pop
or
clc
nop
push
add
mov
cmp
pusha
jo
mov
push
pop
stos
fdivs
rorl
and
out
outsl
fisttps
push
les
jns
pushf
push
pop
add
fcmovnb
jns
add
push
or
sbbb
sbb
fisubs
insb
rcll
inc
sbbb
out
jge
cwtl
push
mov
inc
insb
rcll
adc
fcmovnbe
push
sub
mov
shll
xor
cmp
inc
dec
push
pop
fildl
into
repz
xchg
sarl
nop
or
push
test
mov
add
add
adcl
pop
repnz
cmp
xchg
test
shrb
xor
jno
push
xchg
push
ljmp
in
test
mov
sbb
fnstsw
push
push
sub
aam
xchg
adc
imul
xchg
test
xchg
cli
out
or
mov
mov
je
dec
adc
xchg
jo
push
mov
xchg
shll
loopne
push
xor
add
or
pop
mov
add
cmp
fcmovnb
jg
jo
push
add
mov
pop
adc
aam
mov
jecxz
cwtl
hlt
shll
cmp
mov
xchg
and
xchg
ret
imul
dec
fcmovnb
pop
mov
sbb
loopne
adc
repnz
push
sub
fistl
dec
fistl
mov
out
rclb
adc
sbb
shll
jo
xchg
enter
fistpll
ficoms
js
push
inc
xchg
jae
push
ss
xchg
push
xchg
ss
xchg
mov
or
cs
xchg
popf
mov
xor
xchg
jo
aas
call
adc
push
fimull
jbe
dec
fildl
ss
mov
xchg
jae
mov
add
clc
jl
adcb
mov
les
aaa
call
mov
mov
mov
cmpb
es
pop
dec
fistl
jne
xchg
pusha
cmp
pushf
mov
jo
adc
shll
xchg
clc
test
cmp
jmp
sub
mov
or
js
fcmovb
and
push
out
fiadds
out
add
out
inc
mov
xor
adc
lret
xchg
fiadds
push
mov
mov
sbb
adc
or
push
mov
pop
xlat
mov
xchg
popa
sub
scas
mov
sbb
xchg
pop
loopne
pop
test
adc
insl
xchg
loop
or
pop
add
pop
pop
cmp
ficoml
xor
xchg
adc
mov
adc
sbb
add
inc
inc
loopne
int
push
xor
mov
jnp
cmp
popf
xchg
adc
loopne
push
fsubr
mov
ffreep
or
push
sub
insl
add
add
sub
mov
xchg
cmp
popf
xchg
xor
jo
push
xchg
ss
and
lret
rorb
rcll
fistl
shll
xchg
inc
or
cmpsl
insl
rclb
push
xchg
mov
or
mov
and
rclb
push
bound
push
xchg
les
cmp
xchg
dec
fcmovnb
pop
lahf
mov
bound
cmpsb
add
int3
add
insl
add
push
adc
cmp
je
xchg
fldcw
cmp
sbb
add
mov
pop
mov
mov
sbb
add
mov
or
mov
rcrl
rcrb
or
cmc
push
adc
mov
aas
dec
aas
out
out
xchg
jg
fsubrp
push
in
sbb
jns
aam
les
add
jmp
and
scas
mov
sub
sarb
mov
and
test
aam
jbe
nop
mov
sarl
mov
push
xchg
push
aas
push
out
mov
push
aas
mov
or
jns
out
push
fs
je
test
add
cmc
xchg
sarl
aas
mov
mov
push
enter
and
inc
sub
push
cmp
fs
and
or
dec
fcmovb
cmp
loopne
lods
je
dec
or
and
and
mov
dec
fidivl
test
and
and
adc
scas
add
or
mov
scas
aad
movsb
or
mov
adc
sub
insb
fstps
insl
add
pop
and
andl
xor
push
push
insl
push
bound
popf
sysexit
nop
stos
push
call
movsb
xchg
leave
les
js
jae
mov
push
shll
jl
sbb
shl
xchg
jmp
add
movsb
or
add
pushf
out
ss
sbb
mov
rorl
adc
cmpb
shl
lods
sub
push
in
dec
mov
jne
out
push
sbbl
mov
test
inc
pop
and
inc
imul
and
pop
xor
nop
xchg
or
sub
xor
hlt
sub
mov
daa
in
adc
sub
or
call
mov
cwtl
iret
push
jns
cs
and
xchg
ja
jns
adc
nop
pop
mov
add
daa
in
test
push
add
daa
out
adc
xchg
add
daa
sti
xchg
add
mov
xlat
dec
sbb
lahf
adc
push
into
popl
rclb
lahf
rcrb
or
mov
fcmovb
jge
aam
lahf
fiaddl
into
leave
cmp
fcomps
pop
fbstp
push
lahf
stos
pop
dec
imul
fldl
lahf
insl
fldcw
or
mov
loope
stos
lods
push
cmp
jmp
jmp
inc
cmp
and
or
shr
shll
out
lock
sub
and
out
and
add
out
pop
push
out
pop
add
gs
adc
or
xor
or
in
movsb
in
push
fisubs
and
add
out
int3
inc
add
js
add
mov
add
rcrl
add
int3
inc
lods
xor
push
xor
and
icebp
cmp
and
fwait
es
add
mov
out
dec
push
ret
insb
cmp
adc
out
xor
push
and
adc
adc
cmpsb
out
add
bound
ret
jl
xor
xchg
push
and
push
pop
out
inc
pop
inc
iret
mov
ss
out
xlat
pop
mov
sbb
pushf
pop
add
cwtl
or
je
movsb
sahf
fs
push
and
or
out
cmp
mov
pop
lds
test
jne
inc
sbb
mov
movsb
iret
xor
add
or
frstor
scas
mov
cwtl
xor
mov
mov
mov
push
push
movsb
sbb
test
mov
stc
adc
or
xor
imul
pop
loopne
fcmovb
add
cmpsl
add
pusha
adc
cmp
inc
sub
pop
cmp
fisttpll
push
cmp
ss
sbb
and
pop
inc
push
sbb
int3
das
rolb
insl
or
xor
pop
mov
pop
pop
inc
sbb
in
pop
inc
or
xor
iret
rcr
or
add
cmp
adc
adcl
jae
mov
loopne
jae
cmp
dec
xchg
or
inc
test
jae
dec
pop
leave
pop
inc
repz
or
shrb
jae
mov
and
fimuls
js
int3
jae
repnz
aam
jae
sub
cmp
adc
ds
jae
add
dec
jle
and
add
pusha
dec
dec
lods
mov
jo
dec
push
mov
pxor
or
roll
outsb
mov
fidivrs
stos
mov
mov
inc
mov
lahf
push
roll
sbb
dec
inc
sbb
roll
out
inc
dec
inc
pop
dec
test
push
dec
aad
aas
sub
inc
or
dec
push
mov
mov
pop
add
shlb
inc
inc
dec
sbb
cmpb
inc
push
cmp
jb
ss
push
dec
or
dec
ja
ja
or
mov
test
sub
or
sbb
fdivr
add
mov
xor
push
out
call
fiaddl
jmp
test
sbb
add
push
inc
push
jmp
xor
bound
add
jmp
ror
sbb
sbb
addb
adc
xchg
roll
jmp
mov
jmp
inc
jns
shrb
mov
fiaddl
add
fmuls
or
push
add
jmp
jae
dec
mov
adc
cmp
mov
test
jmp
add
pop
inc
sbb
daa
inc
or
aad
xor
cmpsb
fists
insl
jmp
ss
add
mov
mov
inc
sbb
mov
inc
sbb
cld
in
sub
rolb
jmp
test
mov
add
mov
jmp
jae
lahf
cwtl
push
fcmovb
jmp
xor
jmp
cmpsl
or
or
jmp
add
jge
mov
jbe
jo
mov
mov
jmp
xor
xchg
push
push
mov
and
sbb
outsb
je
jmp
or
js
call
sbb
mov
jmp
inc
jle
xchg
xorl
movsl
lfs
mov
jmp
std
sub
enter
call
aam
sbb
jl
mov
jecxz
cmpl
sbb
pusha
jmp
push
fucompp
push
fcmovb
mov
fstpt
jl
push
cmp
pop
sbb
cmp
inc
inc
fistpl
xchg
cld
push
shlb
xor
pop
pusha
popa
mov
add
xor
jmp
shr
xchg
push
fiadds
insl
jmp
shr
popf
ss
cltd
or
mov
loop
mov
clc
and
push
das
stc
push
push
ljmp
mov
jnp
arpl
test
push
dec
jae
dec
int3
adc
lahf
and
dec
pushf
mov
call
fstpl
add
rorb
fimuls
sbb
in
mov
popf
mov
add
ja
inc
leave
mov
sbb
adc
adc
es
or
ret
xchg
je
push
xor
shrb
and
negb
jne
push
fnstsw
add
shll
dec
mov
xlat
xor
enter
cmp
enter
push
cmp
frstor
mov
or
mov
pop
insb
rcrb
dec
flds
adc
test
roll
pusha
adc
mov
ja
mov
inc
dec
insb
loopne
push
inc
enter
adc
mov
roll
outsb
nop
or
insb
rorb
faddl
or
inc
int3
push
add
loopne
adc
addb
rol
mov
mov
inc
loope
push
enter
adc
sbb
push
testl
clc
jae
lea
cmpl
fmuls
add
call
inc
jb
pushl
call
pusha
pop
es
pop
mov
push
push
push
ss
das
adc
xchg
or
mov
adc
mov
rcrl
insl
inc
cmp
icebp
xor
ss
rcll
adc
pusha
or
add
pusha
jne
pop
push
cmp
notb
aad
sbb
and
je
int
pop
aam
jnp
sti
mov
adc
shl
sub
into
stos
add
mov
mov
insb
pusha
xor
shrl
pop
bound
push
mov
pop
imul
sub
mov
lret
push
rcl
mov
add
rcll
rolb
rol
nop
lods
push
shll
nop
mov
rcll
push
mov
stos
xchg
or
pop
adc
loop
pusha
xchg
fcmovbe
mov
rorb
ja
dec
rol
mov
fdivl
das
push
sarl
sub
pop
ss
test
fs
mov
insb
shl
rol
cmp
shll
mov
int3
xor
mov
out
mov
movsl
mov
push
jp
mov
mov
shrb
jecxz
inc
mov
add
mov
mov
and
mov
pop
es
mov
xor
mov
xlat
mov
and
mov
sarb
lret
inc
mov
cld
jle
roll
cwtl
sbb
pop
lea
out
test
add
xchg
bound
shlb
fisubrs
sbb
mov
andl
sub
xor
scas
push
jp
jne
scas
dec
push
and
les
mov
mov
or
xchg
or
mov
or
movsb
outsb
aaa
rcll
jle
sub
aad
adc
cmp
js
sbb
daa
and
or
xchg
sbb
sub
xchg
nop
rorl
test
in
ret
pop
adc
stos
push
lret
or
add
xor
shrb
or
dec
mov
aaa
dec
or
lahf
or
jmp
loope
shlb
or
cmpsl
or
test
inc
cmpsl
insb
rorb
mov
or
pop
and
mov
fdivs
sub
or
dec
and
xor
adc
mov
iret
and
mov
cmpsb
sub
mov
or
add
add
pop
mov
stos
rcr
mov
ss
or
mov
mov
jp
jo
sub
insb
loopne
adc
or
mov
je
mov
ljmp
ja
push
or
lret
cmp
push
into
into
or
aaa
dec
es
decb
mov
je
outsb
les
sbb
add
push
or
cmp
xor
dec
xor
add
ljmp
pushf
mov
or
push
or
jbe
add
mov
xchg
add
sahf
push
cmp
js
sub
add
movsl
es
sub
or
insb
shrb
js
add
aad
or
add
push
or
push
xor
fld
dec
test
addr16
xor
cmp
or
loopne
or
call
or
sub
or
rolb
in
sub
js
add
or
out
or
lock
adc
push
mov
xchg
or
cmpsl
insb
shrb
xchg
inc
pop
mov
push
cmpsl
insb
shlb
test
push
es
jmp
insb
pusha
dec
jp
add
adc
cmp
dec
in
mov
adc
push
pop
in
fld
cmpl
jo
dec
adc
loopne
sub
xlat
add
adc
loopne
xchg
or
add
dec
fld
cwtl
adc
shl
lock
or
cld
push
bound
adcb
adc
dec
fld
std
adc
loopne
hlt
dec
xchg
mov
dec
adc
pushf
mov
adc
cmpsb
mov
inc
pushf
adc
or
pusha
jmp
les
mov
adc
mov
add
push
adc
in
sbb
and
mov
dec
fld
adc
and
mov
adc
sub
cmp
loope
sbb
add
lods
insl
sub
adc
leave
mov
sub
jno
add
ds
mov
jmp
sub
pop
cmp
cmpl
test
pusha
ds
insb
lahf
pop
cmp
or
cmp
push
ss
mov
sub
push
xor
jne
push
faddl
adc
rcrb
adc
loopne
dec
fsts
test
add
adc
pop
test
jb
add
loopne
rorb
fimuls
ss
cmp
adc
scas
push
jmp
cmpsb
popa
icebp
sarl
add
pushf
mov
shr
dec
adc
xchg
or
cmp
xorl
orb
adc
fsts
cmp
adc
lret
push
pusha
je
jno
jnp
enter
adc
sub
cmp
gs
fldenv
sti
jmp
cmp
aas
inc
sbb
cmpsl
adc
in
push
or
sub
dec
inc
clc
nop
sub
xor
adc
mov
cmp
adc
xchg
or
pop
inc
inc
ret
shrb
test
lods
test
adc
sub
mov
pusha
dec
and
inc
ja
cmpsl
adc
insl
pop
push
gs
push
ss
jle
stos
adc
add
les
sbb
insb
adc
ficompl
lret
test
adc
jo
push
push
mov
cmpsl
insb
shlb
adc
add
push
adc
loopne
mov
push
adc
adc
push
cmpsl
insb
adc
adc
jo
loopne
add
cmpsb
mov
sbb
dec
fsts
sbb
popa
push
cmpsl
insb
adc
inc
jnp
je
call
jbe
adc
push
adcb
jns
ss
sbb
mov
lods
adc
mov
out
dec
fld
adc
push
adc
jno
inc
sarb
push
outsb
or
adc
adc
ja
jecxz
scas
imul
adc
sub
mov
sarl
push
mov
xor
adc
stos
movsl
popf
mov
adc
xchg
jecxz
pusha
scas
sbb
out
or
adc
xor
xor
adc
ss
or
ss
inc
sub
mov
push
pop
cmpsl
adc
test
ja
lret
dec
mov
pushf
cmpsb
aaa
shrl
adc
add
pop
xlat
sub
fdivrs
dec
scas
push
ss
jmp
fisubrl
fisttpl
leave
lahf
cmp
addr16
adc
mov
fwait
ljmp
and
mov
adc
das
test
inc
dec
fld
dec
push
adc
sbb
xor
aad
and
inc
jge
inc
fidivl
out
pop
clc
cld
movsl
sbb
push
das
loopne
sub
xor
cmpsl
cmp
push
popf
mov
orb
jge
out
fadd
sbb
push
movsl
das
cmp
or
inc
and
add
push
popf
mov
fdivr
dec
dec
jnp
push
inc
jge
das
out
fadd
xchg
das
cwtl
push
sbb
jle
add
lds
adc
cmpsb
cmp
cmp
inc
jge
out
fmuls
movsl
das
hlt
cli
push
sbb
fidivl
add
lds
adc
adc
inc
jge
out
pushf
mov
das
push
outsb
call
sub
mov
sub
sub
sub
push
adc
push
outsb
mov
jo
imul
mov
inc
xor
adc
pandn
iret
mov
sbb
sti
incb
scas
xor
sub
jo
adc
xchg
push
dec
in
mov
adcb
jle
ljmp
cmpsl
insb
loopne
adc
leave
stos
loopne
ljmp
push
and
std
dec
pusha
or
pop
mov
adc
imull
jo
sub
adc
or
jo
test
xchg
outsb
adcb
xor
inc
jo
adc
loopne
or
fnsave
and
fmull
or
fcompl
adc
outsl
push
ss
add
adc
push
shrb
adc
test
sbb
adc
jne
adc
fs
call
or
mov
adc
hlt
jb
rcrb
mov
inc
dec
add
mov
and
sub
fldt
and
les
mov
push
add
into
imul
or
psrlw
mov
xlat
aad
xchg
or
aad
pop
push
leave
jo
jmp
lcall
cmpsl
pushf
jnp
mov
jmp
xchg
mov
push
lret
push
or
jmp
pusha
or
jmp
test
push
cmpsl
insb
jmp
mov
scas
push
ss
daa
sbb
mov
lds
jmp
lret
push
out
js
or
shlb
sub
jmp
push
xor
and
jmp
or
ss
psrad
mov
stos
sbb
mov
sub
jmp
sbb
movsl
test
ficompl
aaa
add
sub
jmp
push
or
stos
adc
jmp
outsl
out
push
ss
insb
loopne
fidivs
xor
mov
outsb
cmpsl
jmp
add
ss
das
cmp
call
mov
popa
mov
gs
dec
push
stos
push
ss
lock
jmp
mov
or
cmpsl
dec
or
push
ss
inc
cmp
xchg
or
lock
push
pop
fmuls
sub
sub
jmp
mov
and
loopne
ja
insb
shrb
jo
xchg
and
cmpsl
jmp
mov
push
adc
cmpsl
jmp
mov
jmp
add
add
pusha
mov
add
es
sbb
jno
pushf
mov
or
repz
insb
pusha
xor
jo
adc
sbb
sbb
cmp
push
mov
xor
cmp
ja
sub
repz
cmpl
add
call
xchg
fdiv
fidivs
lret
fld
addb
or
imul
bound
xchg
pop
gs
jmp
cmpsl
insb
rorb
enter
push
out
adc
rorb
repz
repz
jle
dec
fld
loopne
test
and
ja
adc
add
insb
loopne
repz
ret
mov
ret
jo
das
cmp
and
sub
mov
add
lock
popf
cmp
bound
sub
add
lret
cmpsl
insb
loopne
repz
fdiv
sub
pop
rcrb
push
out
adc
loop
ss
xor
lahf
mov
xlat
repz
mov
fld
pusha
mov
cmpsl
insb
loopne
cmp
or
gs
loop
inc
xchg
sbb
popf
cmp
movsl
or
adc
jmp
sahf
cmpsl
insb
pusha
shr
icebp
push
repz
xor
cmpsl
insb
repz
adcb
repz
insb
pusha
mov
insl
pop
push
xchg
andl
xchg
repz
xlat
sub
xor
fsubs
repz
mov
ret
pop
xchg
sbb
out
fcoms
sbb
gs
cli
test
pop
lds
std
xchg
jmp
call
movsb
sbb
dec
xchg
or
sbb
mov
lea
push
pop
lea
jo
jb
add
testl
cmp
clc
insb
rcrb
ret
mov
shlb
add
sub
pop
xchg
cmp
ja
inc
repz
adc
or
sub
data16
push
dec
fpatan
push
and
jge
int3
fisubl
shll
mov
or
repz
dec
stos
dec
ljmp
in
test
mov
dec
xchg
and
or
sbb
ss
repz
repz
push
add
sub
repz
add
inc
lods
inc
add
rorb
fistpl
dec
fpatan
cmpsl
insb
sar
or
add
out
cmp
mov
lret
add
loop
repz
inc
push
ss
repz
pop
mov
nop
jno
push
cs
repz
call
repz
push
sbb
xchg
repz
push
repz
repz
push
adc
mov
sbb
push
data16
repz
dec
mov
dec
fld
nop
repz
or
fs
test
add
mov
mov
mov
in
push
loopne
inc
pop
out
clc
xlat
mov
adc
adc
cmp
mov
out
lods
popf
jmp
mov
dec
mov
or
enter
ja
popa
cwtl
add
dec
cmp
dec
lock
sub
popa
jmp
subl
xchg
or
adc
mov
xor
into
xorl
xor
xor
push
fsubl
mov
sbb
movsl
xor
xor
xor
or
rcrb
adc
ss
shr
mov
pop
xor
dec
or
xor
loopne
fwait
xor
add
xor
flds
cmp
nop
mov
xor
add
pusha
inc
int
xor
sub
mov
add
xor
sub
lcall
fnstenv
push
loopne,pt
inc
or
lock
lret
xor
cmp
xor
jne
and
je
xorl
loopne
xor
lea
out
pop
pop
int3
xor
lret
xor
jo
pop
ss
push
lds
xor
lret
push
or
xor
push
pop
push
mov
xor
insb
shlb
inc
rclb
adc
push
pop
inc
xor
jo
jle
xor
xor
xor
xor
xor
fadds
not
pop
mov
mov
mov
adc
adc
ja
lret
push
fdivl
xor
loopne
add
push
je
insb
and
popa
cmpb
xor
and
pusha
jae
test
lret
push
push
mov
xor
lret
push
sbb
xor
push
or
xor
or
shlb
lret
xor
xor
rcll
add
xor
mov
sbb
or
es
push
xor
inc
int
add
int3
mov
sarl
aaa
add
mov
jmp
push
push
xchg
sbb
xor
js
in
inc
xor
xor
dec
int3
mov
xor
mov
inc
and
insb
shlb
aaa
jno
mov
xor
dec
int3
mov
xor
xor
jo
xor
xor
int3
scas
mov
xchg
inc
jbe
enter
xchg
je
adc
jp
xchg
loopne
and
std
and
cmp
inc
fistl
dec
mov
add
nop
and
aad
call
stc
pop
sbb
push
lret
push
stc
mov
add
inc
lds
addr16
aad
popf
adc
xchg
lods
gs
add
mov
adcb
jmp
mov
mov
stc
push
sbb
stos
xchg
or
or
lret
push
outsb
test
push
adc
aaa
push
stc
add
addr16
test
loope
sti
adc
fcoms
and
mov
stc
fimull
mov
les
adc
mov
dec
stc
cmp
push
sbb
inc
sub
pop
ss
stc
sub
mov
stc
mov
push
stc
ja
sub
and
sbb
add
ja
or
pop
je
test
add
sbb
mov
cli
sahf
push
push
aad
stc
ljmp
fcomps
test
es
adc
sub
test
or
loopne
lods
rorb
insb
xor
outsb
mov
adc
lret
stc
inc
ror
push
push
shr
mov
mov
stc
int
xor
stc
push
lret
push
out
test
stc
mov
lds
je
push
add
stc
cmp
lret
stc
sbb
push
stc
cmc
bound
ja
insb
stc
jmp
gs
aam
jmp
call
rorb
push
test
cmpsb
jp
add
lret
stc
clc
in
pop
add
push
sub
mov
sub
pop
ss
clc
je
sub
or
lret
push
outsb
jmp
stc
push
rcrb
lock
test
lret
push
push
cmpsl
stc
xchg
cmp
ljmp
xlat
and
pop
push
arpl
push
stc
xchg
loopne
mov
aam
add
fcoml
jae
scas
stos
stc
shlb
stc
sbb
inc
and
xorl
stc
das
shll
fst
mov
cmpsb
out
inc
lret
push
int3
sub
add
stc
arpl
inc
add
in
sarb
dec
cmp
std
icebp
xchg
sub
mov
rorb
mov
stc
insb
and
sbb
jo
and
notb
stc
add
inc
sub
adc
pop
lret
push
clc
push
sub
push
lret
push
in
cld
sub
push
lret
push
mov
stc
mov
divl
mov
xlat
clc
jecxz
test
lret
push
fsubrl
mov
insb
loopne
stc
dec
fdivrp
or
cmpb
cs
addb
in
jbe
xor
jo
adc
push
cmp
js
nop
adc
or
and
sub
in
test
test
in
xor
in
mov
or
in
mov
adc
loopne
push
or
or
push
xchg
xor
subb
or
sub
add
ss
cmp
addr16
push
push
roll
or
rclb
push
fcmovb
adc
test
test
mov
enter
add
cmpb
sbb
pop
inc
aam
sbb
pop
inc
popa
pop
push
mov
sbb
push
fcmovb
cmp
add
push
pop
push
adc
addl
or
cmp
mov
push
mov
sub
in
and
push
dec
mov
fiaddl
push
cmp
push
xorl
insl
loopne
push
jbe
push
add
pop
adc
push
cmpl
mov
into
mov
jo
and
xlat
mov
arpl
rcll
mov
mov
dec
inc
mov
aaa
push
sub
jl
sbb
push
fiaddl
adc
push
push
sahf
push
movl
xchg
loopne
sbb
jb
bound
add
rcrb
enter
add
enter
ret
xchg
or
into
or
push
cwtl
pop
xor
push
push
fld
rcrb
sbb
rolb
rolb
xor
sbb
push
pop
add
sub
cwtl
cmp
mov
push
or
jo
rolb
push
rolb
insl
loopne
push
jge
push
push
ss
sub
push
outsb
mov
add
push
cmp
push
push
lret
jb
or
inc
sbb
mov
sbb
insl
add
stos
jo
jo
clc
insl
fisttpll
mov
ss
pusha
rolb
into
mov
adcl
push
cmp
sbb
push
not
aas
or
and
push
inc
dec
out
cmp
fwait
push
xlat
mov
add
stos
shlb
add
inc
in
rolb
frstor
add
rolb
push
ss
ret
arpl
jmp
sub
sbb
push
add
inc
xor
cmpb
add
push
sbb
daa
xchg
inc
sbb
xor
roll
push
pop
add
out
xchg
and
adc
dec
dec
or
outsl
cmpsb
test
sbb
mov
or
insl
loopne
push
jge
loopne
fcompl
adc
jae
addl
push
xor
mov
sbb
push
imull
pop
rclb
jo
inc
inc
add
repnz
push
ficoml
sbb
out
mov
inc
add
addb
sbb
dec
sbb
xchg
push
sbb
add
or
roll
mov
data16
pop
insl
loopne
inc
cmp
cmp
sbbb
sbb
add
rolb
in
add
push
inc
push
fcmovb
inc
cmp
insl
loopne
push
inc
cli
and
mov
pop
inc
scas
sbb
out
clc
inc
sbb
mov
les
mov
cmc
test
push
js
and
cltd
inc
sbb
in
push
xor
cmc
xchg
lods
and
sbb
sbb
inc
inc
cmc
outsb
mov
mov
andl
data16
push
or
cmc
push
inc
sbb
cmc
or
or
cmc
test
ss
dec
mov
lret
ror
adc
js
sub
push
or
add
pop
add
sub
mov
sub
pushf
inc
inc
fsubl
push
rcrl
adc
pusha
or
fwait
mov
inc
mov
adc
add
push
fdivs
into
outsl
add
gs
and
sub
imul
sbb
fcmovb
loope
mov
or
cmpsb
or
mov
mov
scas
inc
mov
push
addl
daa
nop
cmp
inc
xor
loope
insl
loopne
cmpsb
push
loopne
loope
add
push
cmc
add
push
fiaddl
loope
cmp
daa
inc
jb
sbb
add
repz
sbb
loopne
ss
pop
or
push
inc
loop
pusha
sbb
pop
fs
lfs
and
stos
push
cmp
adc
loope
jno
adc
sbb
pusha
sub
jb
and
imul
pop
add
fsub
xor
call
fcmovb
test
mov
aaa
mov
andl
mov
push
push
xchg
call
ja
xorl
ret
sbb
loope
and
fiaddl
mov
dec
add
pop
mov
push
mov
mov
insb
add
xor
loope
inc
mov
push
loope
call
insl
loopne
loope
ja
fiaddl
cwtl
mov
jle
lfs
addl
rol
jo
jno
cli
xor
insl
loope
shr
sbb
outsl
shlb
loope
cmp
add
jle
push
repnz
ja
mov
push
jp
mov
adc
jbe
or
shl
loope
push
sub
push
add
sahf
addr16
sbb
and
movsb
jae
in
jne
adc
jns
and
fiaddl
in
or
insl
jmp
cmp
fcmovb
loope
inc
sbb
mul
fistpll
pop
mov
or
sbb
jo
fdivl
push
loope
sbb
pusha
mov
mov
add
add
orb
roll
mov
push
orps
insl
loope
pop
or
add
std
loope
sbb
insl
inc
sbb
fsub
mov
outsl
add
icebp
jmp
push
jl
adc
or
ret
sub
xor
push
ficomps
loope
xchg
gs
movups
mov
push
adc
enter
xchg
insb
sub
cmp
fistpl
push
sub
mov
flds
sbb
and
and
push
ja
leave
push
adc
add
push
adc
stos
pop
or
inc
movsb
or
inc
les
ret
stos
and
adc
mov
stos
add
sub
adc
sbb
lret
xchg
mov
rol
lods
or
mov
inc
movsl
mov
movsl
shll
cmpsl
ja
mov
movsl
xor
mov
jnp
and
mov
mov
dec
pop
inc
mov
or
dec
sbb
or
dec
ss
mov
push
or
jmp
cmpsl
imul
mov
add
inc
mov
stos
mov
adc
scas
rorb
mov
sarb
sub
mov
jo
and
loopne
dec
mov
fld
dec
xchg
mov
insb
loopne
sub
push
xchg
mov
mov
andb
ret
push
lock
mov
inc
mov
and
pop
insb
loopne
jb
xchg
xor
outsb
push
test
push
cwtl
push
inc
push
mov
inc
and
leave
push
mov
push
adc
mov
in
or
xchg
xor
adc
mov
icebp
push
mov
cmpsl
into
mov
pop
mov
jnp
mov
popf
push
loopne
adcl
ds
push
mov
fwait
pop
mov
enter
rorb
mov
insb
dec
adcb
cmpsl
xchg
cmp
mov
sbb
mov
pusha
ret
xchg
or
sub
mov
fld
in
adc
cs
mov
mov
add
sub
mov
loopne
fs
pop
and
dec
mov
ss
push
stos
mov
addl
push
mov
mov
mov
mov
mov
mov
pop
push
cmpb
lahf
push
sub
inc
cmpsl
jl
xchg
insb
loopne
filds
rolb
fcoms
add
arpl
push
dec
lods
fs
rolb
push
and
add
dec
js
sbb
add
jmp
and
stos
dec
fists
fucomip
dec
ss
faddp
push
outsl
push
leave
push
fildll
fistps
sbb
push
cmp
fs
orb
fists
add
loopne
ret
adc
xor
mov
fisttps
nop
fst
in
mov
mov
inc
movsl
mov
push
mov
xchg
rcr
adc
pop
jno
fildll
sbb
sbb
dec
mov
add
les
fists
inc
filds
xchg
cmp
sub
sbbb
and
push
pusha
out
ds
mov
pop
je
faddl
divl
mov
push
dec
adc
fs
and
push
fildll
fists
sub
xor
xchg
hlt
mulb
mov
stos
add
mov
test
add
or
cmp
add
movsl
fmuls
adcl
aaa
adc
out
and
sbb
adc
adc
xlat
add
add
push
push
ret
xchg
sbb
frstor
and
xlat
cmp
push
jo
mov
push
push
or
xlat
mov
insb
or
add
fistpl
loopne
data16
out
sbb
pop
ret
xor
or
add
or
int
subl
xor
mov
call
imul
or
adc
pop
int
and
pop
popf
fisttpl
xor
adc
and
popa
xchg
stos
adc
and
add
data16
add
sbb
and
and
inc
add
popa
inc
mov
adc
push
inc
mov
or
add
insb
stos
bswap
insb
xchg
mulps
adc
adc
and
fstpl
pop
mov
inc
bswap
dec
push
and
add
ja
adc
test
fucomp
push
lds
imul
add
repnz
push
jo
push
adc
push
test
imul
imul
imul
add
test
imul
test
mov
or
push
lods
xorl
cmp
mov
sbbb
loopne
push
ficompl
inc
and
pop
roll
enter
sbb
push
mov
pop
rcrb
rolb
push
or
out
push
fcmovb
cmp
nop
push
cwtl
jo
sbb
pop
jg
aaa
rolb
pop
int3
add
sbb
jae
fcmovb
imul
jns
xlat
stos
addl
dec
or
lds
inc
mov
add
out
orb
xchg
push
test
xchg
xor
and
and
push
and
test
sub
bound
and
sbb
xchg
dec
fisttpl
jmp
sbb
xor
cmpsl
or
sub
sbb
push
fdivl
and
jno
fdivl
and
push
or
xorl
xchg
and
xor
push
cmp
adc
dec
ja
and
push
stos
cmp
and
mov
inc
sbb
inc
fiadds
push
fiaddl
insl
loopne
and
outsl
and
shr
cmp
lret
int3
loopne
push
fisubl
mov
bound
insl
and
out
or
and
mov
sti
callw
loope
ss
add
pop
fcmovb
imul
add
and
xchg
sbb
aam
sbb
mov
jo
sbb
sbb
mov
ss
inc
and
sub
add
testb
outsb
shrb
cmp
add
fcmovb
and
orb
mov
mov
call
and
ss
add
insl
and
mov
sbb
and
cmp
adc
and
jl
movsb
pop
loop
or
or
mov
add
push
outsb
test
and
rolb
shlb
rorb
fiaddl
es
or
cmpl
cmpb
add
rolb
inc
cmp
and
add
and
es
add
and
xchg
push
pop
insl
and
add
pop
cmp
stos
mov
loop
mov
mov
loope
and
out
or
mov
add
mov
add
and
les
pop
sub
mov
fmuls
inc
inc
inc
sub
mov
inc
data16
adc
das
ret
into
push
push
int3
das
adc
or
das
je
and
das
adc
sbb
pop
push
out
adc
and
or
adc
pop
nop
xor
subl
xchg
das
cmp
loope
das
mov
sub
mov
or
push
and
xor
ja
addb
or
test
int
dec
andl
lahf
jmp
xchg
ss
xchg
je
jl
push
mov
rolb
jae
sbb
inc
insb
mov
test
jae
xlat
nop
sbb
cmp
sbb
sbbl
mov
call
ja
insl
hlt
xor
push
sbb
test
rorl
inc
insl
fsubrs
cmp
push
insl
push
dec
dec
adc
and
into
and
xchg
call
fiaddl
add
rolb
pop
out
insl
insb
inc
imul
adcl
add
insl
shlb
xor
mov
sub
div
inc
outsb
inc
adc
insl
or
pop
push
mov
insl
lahf
and
ficomps
adc
inc
push
pop
jbe
adc
mov
insl
insl
ds
jo
add
add
inc
sbb
inc
insl
push
rolb
in
data16
insl
out
bound
sbb
mov
pushf
mov
out
cmpsb
and
mov
ja
push
insl
xor
push
xorl
lcall
movsb
inc
mov
jo
adc
cmpl
mov
adc
insl
adc
or
dec
mov
push
add
push
shrb
rolb
push
je
adc
add
xor
insl
xor
push
add
or
push
dec
aaa
insl
mov
rcll
dec
ljmp
jmp
pop
insl
leave
push
rolb
dec
call
faddl
incl
insl
mov
subb
sbbb
inc
sbb
insl
insl
sbb
or
andb
decb
ficoms
jbe
push
adc
js
in
int3
add
lock
nop
mov
inc
js
rolb
insl
repnz
test
in
add
insl
add
push
inc
sbb
adc
orb
ss
sub
dec
insw
adc
add
das
insl
mov
mov
push
mov
insl
inc
xchg
add
fcmovb
insl
inc
push
cmc
add
imul
or
sbb
push
inc
insl
xor
js
rolb
pop
rolb
sbb
and
loopne
push
insl
push
mov
mov
mov
ss
scas
insl
scas
imulb
testb
xor
aaa
fcmovb
adc
or
scas
dec
sbb
lock
neg
shlb
fldenv
or
xchg
rcrl
fcmovb
loopne
fdivr
push
and
xchg
or
push
adc
insl
movsb
movsl
aas
push
fwait
dec
lock
inc
sbb
insl
insl
or
subb
xor
mov
fcoml
mov
push
out
inc
sbb
rolb
in
push
insl
clc
xor
xorb
push
insl
adc
adc
insl
rolb
sbb
mov
adc
xor
sbb
sub
int3
subl
sbb
insl
fs
xlat
addr16
adc
add
fidivl
dec
xor
sub
push
lret
jae
shlb
cmpsl
dec
sub
sbb
cmp
push
cmp
scas
pop
nop
sbb
into
in
dec
or
mov
shlb
sub
sbb
pop
push
dec
adc
jae
sbb
or
addb
inc
jae
rolb
inc
pop
inc
pop
subb
push
jae
push
cmc
push
add
stos
dec
popa
sbb
adc
rolb
push
xlat
aaa
or
sub
jae
enter
inc
sbb
popa
pop
lock
enter
mov
lods
sbb
ret
call
test
mov
jne
cmp
or
or
xchg
or
xor
fnsave
pop
sbb
sti
imul
adc
or
mov
mov
inc
sub
xchg
fcoml
dec
mov
dec
test
or
inc
adc
xor
xchg
adc
loopne
mov
sbb
xchg
mov
mov
popf
pop
xchg
fwait
jb
xor
adc
aam
fisttpll
xchg
mov
fnsave
push
or
insb
shrb
fisttpll
push
mov
dec
mov
push
negb
mov
sar
or
add
mov
push
adc
add
mov
roll
fcmovb
sbb
inc
subl
aaa
mov
and
addl
or
sahf
pusha
xchg
xor
loop
xor
push
gs
pop
ss
sbb
mov
gs
add
add
mov
mov
gs
flds
or
or
mov
andl
xchg
or
inc
jb
or
mov
mov
or
inc
add
push
push
int3
mov
dec
daa
cmp
adc
xor
test
rol
xor
cld
xor
jo
add
insl
push
sub
cmp
and
mov
cmp
jecxz
aaa
add
cmpsl
lods
lock
les
insl
mov
xchg
jle
push
sub
mov
push
int3
testb
add
adc
pop
xor
cmpsl
mov
mov
sub
ret
fbstp
shrb
add
popa
orl
inc
les
adc
add
xchg
jne
add
bound
cmp
fcompl
nop
push
sbb
xchg
push
pop
dec
pop
lahf
mov
mov
sub
ficoml
sub
push
movsl
loope
daa
pop
sbb
movsl
and
dec
inc
pinsrw
add
and
lret
ljmp
lea
add
lret
cmpsl
add
orb
mov
test
dec
jge
in
push
push
or
mov
lea
push
lret
mov
mov
sbbb
inc
sub
lea
sbb
aad
sub
xor
sbb
insb
loopne
xchg
lea
lea
movsl
lea
lea
test
or
lock
lea
adc
lea
pusha
mov
loopne
addb
lea
cmpsl
dec
mov
mov
orb
leave
call
adc
or
add
xorb
stos
ja
insb
popf
xchg
dec
or
push
jb
mov
xchg
cmp
insb
mov
xor
movsb
dec
notl
and
sarb
push
stos
xchg
jb
add
xchg
mull
out
add
mov
sbb
rcrb
cmp
and
cwtl
rorb
not
mov
xchg
ss
and
testl
notl
mov
lcall
cs
loopne
mov
out
push
popa
add
adc
stc
cmp
add
bound
mov
negl
xchg
insb
loopne
testl
pusha
daa
xchg
sbb
flds
jg
add
or
aaa
inc
mov
xchg
inc
pop
xchg
ds
mov
pop
adc
lcall
pop
enter
push
xor
out
cwtl
js,pn
push
lret
xorl
lret
push
xchg
sub
filds
mov
xor
pop
push
enter
adc
mov
mov
loopne
push
cmp
or
or
orl
fistpl
xor
sbbl
orl
fadd
and
mov
mov
subl
sbb
inc
dec
sbb
add
and
xor
ret
push
insl
inc
dec
xchg
jmp
js
sub
std
sub
js
pop
filds
or
dec
jmp
sub
add
scas
insb
loopne
mov
jo
xchg
sub
or
lods
sub
sub
cmp
fwait
sbb
sbb
jnp
mov
and
insl
jnp
mov
lds
dec
js
clc
push
inc
sbb
arpl
adc
test
sbb
mov
adc
inc
xchg
or
pop
add
lret
nop
or
ret
push
les
xor
aas
fcmovne
aam
sbb
pop
push
sub
push
fld
pusha
addb
add
imul
jmp
sbb
inc
mov
aam
sbb
jo
push
xchg
xor
push
fld
jge
add
cmp
cld
push
stos
addb
test
push
stos
in
add
push
cs
or
push
pop
or
adc
adc
sbb
pop
cld
add
inc
ss
bound
sub
sub
mov
faddl
mov
inc
test
lret
sbb
and
sbb
movsl
jnp
pop
sbb
fwait
movsb
pop
subl
inc
pop
or
ret
nop
pop
sbb
cmpl
dec
or
xor
cmpsb
and
and
in
sbb
mov
scas
or
cmpsl
pop
out
leave
adc
sbb
fcomps
mov
pusha
dec
pop
sub
push
or
cld
and
dec
negl
add
mov
inc
ss
popf
mov
enter
xchg
ret
push
popf
lahf
fistl
sbb
sub
mov
xchg
push
pop
inc
sub
rorb
lret
push
cmc
adc
js
inc
sahf
xchg
mov
scas
sbb
iret
xchg
add
add
lods
jmp
sub
sbb
rcrl
insb
pop
enter
or
sbbl
pop
xor
pop
xchg
or
pusha
nop
or
xor
add
pop
ror
push
ficomps
pop
iret
es
ss
int
scas
inc
ss
pop
les
or
insb
pusha
add
js
nop
int3
cltd
pop
add
sti
sub
push
xor
push
fdivl
cltd
sub
lock
push
pop
jge
xchg
inc
cmp
pusha
xchg
pop
sbb
sbb
mov
outsb
push
inc
lock
jb
gs
ss
enter
rol
inc
pop
ret
sbbl
mov
mov
sbb
cs
bndldx
pop
mov
pavgb
push
push
enter
pop
sar
push
mov
cmpsl
movsb
ret
xor
adc
inc
ss
xor
push
lea
mov
pop
dec
xchg
and
ret
imul
nop
or
add
cmpb
ljmp
and
pop
rcll
add
sbb
enter
pop
ret
and
ret
mov
inc
push
ljmp
sbb
mov
add
repz
inc
bound
fs
leave
cmpsb
add
rclb
mov
xchg
in
lret
out
and
js
add
push
and
adc
dec
and
push
imul
add
mulb
nop
or
add
mov
ret
mov
xchg
je
push
shlb
add
faddp
subl
leave
inc
orl
imul
add
rcrb
ret
fld
loopne
pop
cli
push
adc
add
rcr
add
inc
add
mov
outsb
push
rol
fs
dec
andl
fld
jnp
test
fs
subl
rcll
xchg
or
add
and
loopne
outsb
ret
or
jne
sbbl
cmp
add
insb
loopne
ret
xor
loope
dec
push
sbb
inc
xchg
pop
scas
enter
xchg
fld
popa
or
rcr
or
out
dec
sub
or
mov
xchg
dec
fbstp
dec
push
xor
add
mov
testl
add
ret
test
push
dec
sar
pusha
ss
das
or
cmpsl
divb
pusha
dec
lea
dec
add
subl
ret
or
adc
ret
lods
pop
lret
pusha
dec
enter
push
ret
bound
add
hlt
mov
xor
add
testl
or
adc
push
call
and
mov
sbb
xor
dec
movsb
push
subl
ret
add
sarb
pusha
pop
inc
dec
and
dec
jo
sub
mov
inc
adc
sub
pop
add
ret
or
subl
ret
add
pop
ret
dec
outsb
xchg
mov
lds
or
adc
add
jle
and
pop
pop
lcall
push
ret
pushf
imul
cld
fstps
sub
sub
addb
adc
sbb
sub
fld
mov
adc
stc
shlb
cmp
fld
jp
jo
subl
ss
fsubrl
nop
or
ja
shl
pop
fcoml
fsubrs
nop
or
mov
mov
ret
jecxz
enter
ret
or
mov
nop
or
mov
sbb
ret
out
add
add
fstps
or
xchg
and
cwtl
sub
add
ret
push
iret
bound
push
add
ret
inc
ss
test
ret
mov
cwtl
test
dec
ljmp
rorb
mov
mov
es
or
ss
ret
push
xchg
xor
enter
mov
addr16
add
inc
or
mov
ret
mov
sub
jg
mov
ret
test
push
les
nop
or
addb
ret
out
popa
or
fucomip
flds
pushf
movsl
push
nop
or
cmp
ret
push
adc
mov
sbb
fisttpll
mov
jnp
and
and
mov
sbb
ret
not
jo
fs
in
adc
inc
ss
mov
rol
add
ret
and
js
cmc
jp
rcl
ret
movsb
out
jg
add
xchg
xchg
loopne
in
jo
dec
sbb
imul
adc
add
ret
add
dec
mov
adc
adc
ret
aas
mov
jo
ret
mov
adc
and
xor
ljmp
mov
movsl
and
mov
xchg
outsb
ret
or
lret
ljmp
mov
loopne
cmp
roll
ljmp
and
cmp
dec
inc
ret
cmpsb
sbb
fs
fldcw
loopne
loop
push
in
push
add
ret
ret
ret
adc
push
ret
push
imul
push
lods
push
fldl
mov
or
sbb
sub
cld
iret
aaa
imul
jne
pop
ret
add
push
sub
dec
addl
addb
cmp
push
ret
das
sbb
rcrl
inc
or
dec
or
add
add
dec
add
adc
nop
or
sbb
cmp
addr16
ret
ret
xor
call
enter
cs
andb
push
pop
and
cwtl
test
cmp
jbe
test
das
xchg
shll
mov
roll
dec
add
ret
fdivl
sbb
loope
ret
jo
rorb
movsl
es
ret
mov
add
rolb
inc
ss
dec
loope
rolb
cmp
shrl
subl
pop
loopne
or
mov
ret
xchg
sbb
or
shrl
and
push
and
stc
movsb
xchg
fs
repz
rcrl
adc
loop
rcrb
es
fld
sbb
sbb
rcl
add
clc
sarb
or
lods
add
rol
sub
subl
jecxz
mov
xchg
enter
mov
cmp
ja
inc
ss
addb
xlat
shll
ss
inc
loope
inc
shrl
rcrl
xor
xchg
mov
and
push
orb
lods
les
aas
cmp
jne
testb
cltd
adc
pop
or
xchg
pop
pop
sub
jnp
add
aaa
repnz
nop
dec
add
dec
jp
lahf
xchg
lret
mov
stc
add
aaa
enter
dec
jp
or
in
test
mov
mov
or
dec
jp
loopne
push
mov
mov
rcrl
mov
jg
jb
or
add
mov
jge
push
and
push
push
add
add
jo
shll
or
shr
inc
rcrl
call
loope
mov
faddl
lea
push
fisubs
nop
lea
pop
adc
lea
cmp
add
mov
add
enter
lea
xor
push
add
loopne
nop
lea
sbb
orl
or
insb
rol
sbb
jmp
fldl
add
and
add
pop
iret
les
loopne
inc
and
lea
dec
cld
inc
inc
or
popf
addb
lret
call
add
lea
jo
aam
clc
sbb
xor
push
mov
lea
jge
mov
orb
and
lea
push
add
ret
jl
or
dec
lea
jo
sub
addb
mov
nop
lret
addr16
sarb
adc
sbb
test
xor
add
shlb
add
push
outsb
or
adc
lea
sub
dec
push
in
xchg
in
nop
pusha
decl
adc
lea
pop
cmpl
push
mov
fcompl
cmpsb
inc
ss
lea
lea
enter
lods
add
rcl
xchg
push
or
inc
insb
pusha
jno
sbb
inc
icebp
orl
inc
jp
adc
cwtl
xchg
pop
xchg
sbb
and
sbb
xchg
sbb
add
pop
fimull
and
sbb
dec
cmp
dec
push
daa
inc
xor
push
and
gs
fs
hlt
mov
pop
subl
ss
mov
insl
or
xor
push
and
xor
outsb
mov
add
stc
add
mov
repz
lret
int3
lret
cmp
push
jb
add
enter
push
dec
rclb
ljmp
mov
imul
jmp
mov
cwtl
cmp
jmp
sbb
push
and
cmp
flds
nop
or
icebp
push
sub
call
xchg
pop
add
shrb
mov
xor
add
pop
pusha
lar
int3
or
loopne
inc
ss
dec
or
sub
or
push
and
sub
fucomip
adc
insb
pusha
int3
sbb
nop
or
dec
dec
and
or
cs
jo
mov
in
in
jmp
out
bound
jbe
insl
in
cs
fsts
inc
ss
dec
aaa
adc
push
sub
mov
add
jecxz
pop
cmpsl
test
ds
imul
add
loopne
jmp
dec
sbb
add
or
call
or
pop
mov
mov
addb
call
mov
xor
addb
je
insb
loopne
mov
pop
popl
inc
cmp
push
addr16
addl
xor
or
jmp
and
or
imul
pusha
adc
imul
ja
or
pushf
or
into
or
mov
and
inc
and
or
enter
adc
ljmp
jge
sbb
sub
bound
nop
or
push
or
push
and
mov
push
add
cmpsl
loope
push
or
push
mov
push
out
push
mov
xlat
and
adc
mov
jmp
dec
inc
and
adc
push
push
movsb
and
sbb
add
rolb
insb
pop
fmull
add
sbb
nop
or
loopne
adc
push
outsb
mov
popl
pop
mov
adc
jo
sbb
nop
popl
mov
nop
or
insb
loopne
mov
xchg
push
loopne
enter
sub
push
subl
lcall
or
or
cmpl
dec
xorl
add
nop
or
rcrl
or
nop
or
mov
je
rolb
add
insb
or
inc
push
cwtl
and
flds
cmp
xor
cmp
aaa
adc
mov
nop
outsb
sbb
int
jb
pop
xchg
jp
and
arpl
mov
int3
repz
loopne
cwtl
and
xor
or
fisubrl
add
push
dec
push
or
adc
popl
mov
fstl
les
andl
jo
sbbl
outsb
orb
sbb
adc
xlat
fiadds
ljmp
adc
add
or
ss
push
aaa
push
sub
or
enter
add
add
mov
js
cld
or
adc
push
inc
or
lods
xor
add
ss
lock
jmp
jo
sti
insb
adc
xchg
add
enter
loopne
movsb
push
inc
or
add
decb
or
popa
mov
pop
subl
or
add
call
subl
addb
sbb
rorl
add
insb
inc
subl
add
push
subl
sub
cmp
adc
xchg
subl
add
add
popa
xor
sbbb
push
sbb
add
popl
mov
rcll
fld
dec
add
out
add
adc
sbb
enter
aaa
inc
and
push
cmp
inc
ss
mov
call
jmp
add
push
mov
call
dec
dec
lahf
or
add
mov
jo
adc
push
in
sbb
cmp
or
ds
popl
flds
sbb
popa
add
or
and
nop
das
ss
sub
cmp
push
enter
cmp
stos
shrb
test
inc
subl
fwait
loope
add
push
sti
xor
add
fidivl
jmp
mov
out
adc
dec
orl
imul
ja
enter
push
in
add
mov
pop
adc
push
adc
lahf
jmp
jo
and
popl
fs
enter
sbb
or
rorb
sbb
xor
add
andb
jo
pop
push
test
iret
repz
adc
lods
and
sub
int
repnz
sbb
enter
cmp
cmp
cmp
pop
sahf
out
fstpl
jae
push
lahf
test
jns
aad
ljmp
adc
pop
xchg
mov
es
fbld
outsb
xchg
roll
push
push
ret
movsb
jge
inc
fimull
out
push
add
push
sbb
inc
sub
cmp
nop
or
sbb
inc
and
sbb
or
test
nop
popf
lods
adc
adc
pop
mov
push
cwtl
add
insb
inc
js
dec
and
aaa
xchg
pop
mov
mov
add
cmp
cmp
add
and
dec
and
add
enter
lcall
add
sbb
data16
inc
ss
lods
xchg
fld
dec
clc
enter
or
or
jo
mov
pop
xor
jbe
insb
addb
sahf
arpl
push
mov
xor
shrb
inc
subl
sbb
or
dec
cmp
nop
xchg
add
mov
xor
test
mov
sbb
faddl
movsb
bound
scas
and
or
pusha
xchg
xor
and
fld
imul
mov
js
pusha
mov
outsl
xor
inc
flds
push
and
adc
sbb
jnp
insb
rorb
fld
repz
repz
jle
pop
test
loopne
add
orl
add
adcb
insb
pusha
imul
pop
xor
push
add
aas
inc
and
subl
add
and
adc
or
sbbl
stos
xor
sbb
orb
pop
inc
and
add
movsl
xchg
dec
popa
cmpsb
insb
rolb
add
or
sbb
ljmp
mov
rorb
add
aas
fdivrl
adc
push
push
sbb
pcmpgtb
mull
call
sbb
pop
lods
gs
xor
ret
insb
popl
inc
add
dec
shl
lds
or
stos
stos
inc
adc
mov
sbb
loopne
mov
lahf
xchg
mov
stc
pslld
fs
or
call
inc
mov
mov
pop
xor
ss
cmp
pop
pop
inc
push
jo
push
xor
cmp
mov
inc
ss
mov
popl
in
js
mov
pop
ret
mov
mov
dec
ret
sub
leave
loop
lahf
loop
cli
xchg
adc
push
out
mov
cmp
fwait
or
cltd
dec
nop
or
insl
fld
pusha
and
addl
faddl
mov
sbb
nop
and
xor
subl
add
imul
pop
cmpsl
or
push
out
or
adc
push
and
and
pop
nop
or
add
sub
push
into
adc
add
jo,pn
xor
xor
push
adc
mov
and
arpl
add
adc
add
orb
mov
mov
adc
inc
cmp
nop
or
loopne
sub
lods
pusha
mov
adc
mov
lcall
data16
roll
add
add
pushf
imul
pop
call
loopne
stos
lcall
pop
push
adc
sbb
sbb
and
enter
lods
inc
ss
xchg
jo
ja
sbb
mov
and
pop
inc
test
subl
add
sbb
push
orl
add
das
add
cmp
add
cmp
add
loop
add
rolb
mov
or
xchg
or
movb
xchg
sbb
cmp
xchg
xchg
adc
push
xchg
mov
fld
xchg
lods
nop
jmp
flds
shl
les
scas
push
movsb
insb
loopne
inc
jge
fisubs
add
push
mov
jo
xor
adc
dec
ss
mov
testl
jo
jge
cmp
jo
cmpb
add
and
sbb
lods
push
in
inc
and
push
nop
and
adc
jge
nop
or
rolb
add
add
outsb
popa
and
add
jge
js
and
call
enter
subl
or
mov
add
xchg
dec
jge
mov
mov
flds
jge
push
mov
movsb
or
pop
sbbl
inc
loopne
add
jge
outsl
mov
jge
cmp
add
inc
add
cmpl
push
push
push
mov
rorb
mov
add
jge
cmp
andl
jge
xor
test
fld
or
sbb
and
jge
push
inc
and
jge
inc
and
mov
mov
ja
ss
or
dec
les
jge
mov
scas
pop
xchg
mov
adc
sar
push
fdivs
push
push
add
mov
shll
mov
adc
add
adc
and
adc
out
push
and
fdivs
adc
lock
out
dec
cs
or
or
ss
or
xorl
push
xchg
xchg
mov
push
xchg
mov
cmpsl
lods
push
ss
push
mov
arpl
loope
ss
xchg
ret
or
xor
xorl
inc
mov
insb
rolb
addr16
and
adc
in
push
or
inc
rclb
push
addr16
jle
mov
dec
push
enter
mov
lret
iret
jo
inc
add
addb
mov
mov
add
and
mov
addr16
cmp
std
jb
push
or
xor
sbb
lock
sbb
mov
jo
or
outsb
mov
xor
ret
addr16
sbb
addr16
ss
and
push
xor
fadds
je
pushf
inc
inc
imul
movsl
mov
adc
push
aam
nop
rclb
mov
or
and
test
adc
mov
orb
insb
loopne
sbb
loopne
stos
xchg
popa
add
sbb
mov
or
addr16
shlb
add
mov
popa
add
sbbb
xchg
xchg
mov
test
add
int
xor
inc
addr16
rcrb
addr16
cmpl
pop
cmp
and
fstpt
loopne
push
aam
andl
addr16
push
adc
mov
ss
xor
mov
and
push
add
jb
rclb
addr16
push
add
xor
clc
addb
data16
sub
xor
adcb
insb
inc
test
sbb
xor
fldl
addr16
xchg
push
pop
add
sub
push
das
add
insb
add
in
js
add
push
nop
adc
add
popa
add
and
loopne
shlb
push
imul
jns
mull
xor
test
jo
pop
ret
push
outsb
push
push
ss
push
jns
mov
jns
addb
les
push
pop
ret
push
fdivrl
js
xchg
cmpb
xchg
insb
loopne
jl
jns
add
push
aam
pop
adc
add
fwait
inc
inc
icebp
or
pop
lcall
jns
inc
sub
js
sbb
movb
call
sti
mov
inc
or
les
orb
jns
lahf
xorb
dec
enter
pop
out
jp
xor
int
mov
push
push
inc
or
call
sahf
fs
test
add
add
popa
insb
mov
sbb
sub
test
mov
xchg
lods
stos
movsb
sub
enter
add
aaa
mov
scas
std
add
or
ret
push
cltd
loopne
or
shl
rclb
shlb
cltd
insl
or
call
mov
imul
xchg
push
pop
je
push
cltd
lock
mov
fwait
lds
ja
ret
cltd
arpl
push
out
mov
add
ret
cltd
lods
xchg
sbb
mov
cltd
jmp
int
or
sbb
cltd
mov
hlt
cltd
aaa
insb
loopne
mov
xor
pop
push
adc
stos
lods
mov
shll
repnz
cltd
adc
int
ficoms
mov
cltd
fidivl
into
push
inc
aad
sbb
xchg
shl
cmp
mov
dec
mov
fadds
shlb
add
movb
cltd
adc
push
push
decl
call
add
jle
loopne
andb
fcompl
outsb
fcomps
or
dec
pop
push
jmp
mov
andl
pop
add
cltd
cmpsl
push
aad
sbb
lock
mov
and
rolb
mov
add
into
cltd
mov
cltd
jp
lock
or
push
pop
pop
gs
adc
xchg
cld
sar
repnz
loopne
pop
enter
aam
xchg
rclb
inc
movsb
fiaddl
sbb
test
mov
xlat
mov
xorb
mov
mov
cmp
dec
adc
sbb
lock
shl
add
push
cld
add
fmuls
test
adc
xchg
add
mov
loopne
or
fs
clc
in
sub
int3
jbe
xchg
sbb
fcoml
daa
xor
jae
ljmp
mov
dec
repnz
or
or
sbb
clc
roll
lods
out
mov
fs
call
sarb
adc
mov
mov
add
cltd
aaa
insb
loopne
jns
cltd
add
add
popa
cltd
jno
push
fidivrs
ja
xchg
adc
or
fs
or
pop
sbbl
ret
ja
or
add
inc
push
push
aad
arpl
and
mov
daa
jbe
pop
push
push
aaa
pop
pop
mov
push
outsl
push
pop
sahf
scas
insl
outsb
jb
aad
aaa
pop
fadds
outsb
sbb
pop
sbb
ret
leave
in
jb
adc
dec
dec
lret
insl
into
push
sbb
leave
scas
or
imul
mov
fsubrs
mull
sbb
inc
mov
imul
push
or
jo
leave
mov
aaa
pop
inc
leave
xchg
xchg
mov
sub
jp
xchg
push
xlat
push
fadds
scas
sbb
pusha
mov
addr16
xor
leave
push
in
outsl
add
call
add
ret
leave
mov
add
leave
les
mov
mov
aaa
sbb
leave
jo
cvttps2pi
int3
sbb
sbb
leave
fisttpl
aas
mov
and
ret
push
out
adc
call
fcoml
leave
addr16
mov
shrl
leave
sti
pop
inc
mov
fstl
and
xor
adc
ret
leave
push
sbb
lcall
and
add
inc
ss
stos
and
inc
xorb
subl
inc
xchg
cmp
fmuls
push
cmp
ljmp
nop
or
xchg
sti
mov
ret
aam
sti
fimull
sti
rolb
leave
shlb
xor
lods
xsave
mov
mov
push
cwtl
cmp
cmp
and
add
mov
les
cmpl
ficompl
mov
adc
les
or
fnsave
test
and
push
faddl
outsl
sub
shrb
popa
lea
rclb
inc
and
das
xchg
push
add
insb
shlb
push
inc
cli
ret
push
dec
push
mov
jbe
push
push
sbb
jo
or
xor
roll
add
and
fdivl
or
aaa
insb
pusha
jo
lcall
lds
rcrb
lea
addb
adc
std
mov
shrb
lea
add
ss
out
push
sbb
lea
rorb
lcall
test
dec
cmp
or
ror
sbb
outsb
fmuls
out
or
popa
add
lea
lea
lea
inc
fbstp
insb
shl
popa
lea
add
xor
adc
fcoms
jmp
or
fldenv
mov
call
repnz
sbb
pushf
shlb
sbb
call
xchg
bound
sbb
sbbl
test
mov
mov
push
inc
inc
aad
mov
sbbl
mov
shrl
sub
cld
mov
ret
popa
add
jge
xor
push
mov
add
mov
stos
popa
mov
pushaw
call
xor
mov
sbb
loopne
mov
popf
jo
aam
subl
push
mov
mov
xor
mov
dec
shr
or
insb
loopne
add
and
xor
in
in
adc
nop
int
nop
dec
push
inc
fs
adc
mov
xor
inc
scas
adcb
push
mov
push
fisttps
scas
add
ret
popa
add
inc
rorb
ljmp
mov
xor
stos
popa
add
cmp
sbb
push
mov
mov
lods
xchg
or
push
add
mov
jl
add
xor
adc
sbbb
insb
push
mov
xor
dec
dec
mov
jne
mov
sbb
jo
cmp
scas
mov
sbb
mov
inc
dec
loope
xlat
lds
lds
pop
mov
mov
shlb
dec
push
mov
adc
jmpw
sub
movmskps
push
inc
xor
fwait
xchg
xchg
xchg
and
push
ffreep
and
stos
inc
adc
mov
aam
mov
test
out
in
or
enter
mulb
cmp
repnz
fstl
push
mov
pop
sbb
popa
mov
xor
xor
in
in
cmc
add
and
mov
shl
mov
insb
mov
xchg
pop
pushf
xchg
jno
cmc
inc
cs
iret
jle
mov
and
bnd
adcb
jl
in
and
inc
xchg
and
push
repnz
in
sbb
mov
cmp
jo
pop
cmp
scas
lea
jecxz
cmp
mov
sbb
lcall
mov
cmp
movsb
nop
dec
pop
lcall
mov
cld
lahf
fs
inc
dec
test
sbbl
cmpsb
mov
out
or
mov
rcll
mov
or
xchg
xchg
and
sbb
pop
sub
inc
sbb
je
cli
js
xchg
popa
add
sbb
sbb
in
in
add
push
mov
mov
push
mov
push
ret
push
mov
add
out
pop
push
mov
cmp
mov
lods
cmp
mov
pop
or
sbb
jo
and
dec
adc
test
add
mov
cld
rcrb
mov
dec
mov
dec
mov
bound
aad
mov
aad
mov
ret
push
mov
push
push
mov
repnz
lods
fimuls
adc
mov
inc
cmpsb
mov
cmpsl
je
add
or
dec
mov
mov
push
xor
sbb
pop
pop
adc
inc
or
ret
push
scas
pop
adc
xchg
pop
mov
xchg
add
xorb
xchg
mov
or
in
mov
cs
xchg
and
mov
cmpsb
adc
in
xchg
mov
xchg
int
call
inc
mov
fwait
mov
sub
xchg
pusha
push
ret
push
mov
lods
push
pop
lea
loopne
lcall
mov
jbe
ss
dec
add
sbb
and
hlt
push
inc
aam
pop
inc
and
fcoms
pushf
add
push
mov
ret
push
sahf
test
aaa
mov
add
mov
aad
dec
mov
popa
add
lea
xchg
shlb
movsb
push
mov
add
pop
mov
xchg
push
ret
push
mov
popa
add
shlb
and
cltd
mov
or
ss
push
out
andl
or
je
dec
or
mov
xor
aad
add
lahf
mov
aad
push
mov
add
xchg
bound
inc
dec
in
mov
or
push
xchg
and
lock
lods
sbb
sub
sub
push
or
push
or
or
mov
aaa
dec
mov
xchg
sub
cmpb
push
out
and
push
sub
fcmovne
sbb
cmpl
insl
push
xor
aam
sub
sub
mov
mov
aad
sub
mov
xchg
stos
popa
add
ss
lods
dec
lea
xchg
jo
sub
push
dec
sarb
sub
push
xchg
out
or
cmp
mov
push
push
sarl
sti
les
aam
imul
sub
lods
ret
bound
push
mov
sub
scas
push
call
push
or
loopne
sub
ss
add
mov
daa
sbb
shrb
or
aam
add
subl
mov
cmpsl
call
sbb
dec
push
sarb
sub
xor
sub
or
pop
ret
push
sub
and
loopne
hlt
cmp
ss
sub
adc
mov
sub
sub
mov
sub
adcb
or
filds
inc
test
or
push
mov
cmp
sub
or
xchg
add
mov
mov
xor
sub
dec
add
rcrb
test
jo
cmpsb
push
sub
enter
or
mov
clc
jmp
mov
cmpsl
cld
xor
mov
add
jmp
xchg
push
mov
lea
cltd
inc
mov
dec
ja
push
leave
and
or
popa
add
add
xchg
loop
or
scas
pusha
and
sbbb
xor
push
pop
jl
test
repnz
lahf
inc
or
js
shlb
je
dec
adc
cs
ret
xor
jns
xchg
daa
test
ss
and
sbb
jl
mov
pusha
das
xchg
testb
movb
xor
push
xor
imul
pop
or
dec
ljmp
dec
sbb
or
push
mov
rolb
mov
xor
mov
xor
in
cmp
enter
sbb
loopne
xor
add
cld
negb
aaa
or
popa
add
mov
adc
jmp
or
faddp
cmp
xor
and
das
loopne
fcoml
xor
sub
sbb
in
mov
stos
push
xor
les
mov
xor
popf
fisubrl
loopne
loop
scas
ss
xor
sbb
insb
xor
push
xor
divl
in
mov
xor
sub
or
xor
and
xor
popa
add
mov
xor
or
xor
jns
push
sbb
xor
or
xor
jl
inc
call
mov
insb
xor
popf
lods
push
rorl
xor
ss
cmpsb
push
ret
push
out
xorb
adc
xlat
lret
imul
fdivs
add
sbb
jbe
push
sbb
mov
fdivs
push
xor
call
inc
xor
mov
adc
xor
dec
jo
add
pop
ret
push
xchg
xor
mov
fnstenv
out
or
push
dec
pop
std
mov
fadd
sub
fadd
pop
and
icebp
add
add
sbb
mov
mov
call
pop
sbb
out
mov
lods
lcall
or
mov
xor
jo
fadd
sbb
loopne
bound
add
add
insb
xor
add
xor
add
aam
and
ret
in
in
jb
fadd
pop
leave
scas
jb
shlb
nop
and
xor
imul
loop
push
or
xor
sarb
mov
sbbl
add
adc
inc
push
cmp
pop
mov
mov
fcmovnu
sub
and
sub
adc
std
pop
sbb
or
std
xchg
xor
jnp
aaa
pop
mov
icebp
imul
mov
jno
mov
loope
mov
nop
out
out
jns
fxtract
out
imul
in
out
sbb
outsl
and
in
fstl
jl
push
cmp
xor
xchg
cwtl
adc
adc
cmp
sub
cltd
fmul
and
lret
addr16
xchg
fsubrs
popa
cmp
xchg
jbe
out
pop
subb
xchg
dec
gs
cltd
mov
arpl
push
xchg
add
push
xchg
dec
mov
or
adc
fildll
pusha
popf
mov
add
rol
sbb
cmp
mov
sarb
mov
lret
in
sbb
lds
mov
js
add
sub
outsb
jecxz
rcrl
mov
sahf
sbb
push
inc
dec
mov
or
outsl
sub
push
dec
mov
jp
movsb
andl
push
ljmp
adcl
mov
addr16
push
rorb
repz
sbb
dec
mov
in
jo
subl
cmp
mov
add
out
jns
adc
sarb
aaa
rorl
jg
aaa
aas
ljmp
add
cmpb
mov
xchg
jno
jbe
data16
insl
mov
dec
mull
js
xchg
xchg
outsl
sbb
push
pop
xchg
jp
cmp
mov
insb
jge
test
xchg
and
xchg
jecxz
test
insl
daa
sub
mov
xchg
push
cmp
xchg
in
xchg
and
mov
ficoms
dec
jmp
lcall
add
hlt
or
movsb
test
int
cmp
mov
cli
jo
lret
adc
inc
icebp
js
jb
fcomip
das
cltd
pop
rorb
into
cwtl
addr16
sbb
inc
shl
lret
push
mov
fnstsw
adc
in
das
push
pop
lock
sbb
push
add
push
adc
add
mov
sbbb
xchg
fadds
sub
sub
shlb
add
or
dec
and
add
inc
mov
fadds
shlb
mov
ret
or
jno
std
add
inc
mov
shlb
mov
jmp
pusha
add
test
add
mov
loopne
clc
cli
lods
add
mov
jne
adc
nop
jmp
add
push
push
mov
scas
mov
jnp
lahf
xlat
mov
loopne
inc
xchg
mov
adc
push
ds
add
mov
dec
and
pushw
aad
pusha
add
jo
lea
outsl
or
push
mov
aam
pop
daa
outsl
jae
mov
ret
xor
pop
std
imul
xor
lods
pop
daa
push
push
add
les
adc
adc
mov
jnp
add
test
pusha
jbe
cmp
xchg
mov
cwtl
xor
ljmp
sbb
or
shrb
shr
cmpb
call
aam
clc
and
push
out
adc
add
sarl
push
sub
add
jmp
pop
fcoms
inc
add
sbb
mov
jnp
add
sbb
push
mov
ljmp
push
roll
scas
jnp
sbb
and
jnp
insb
loopne
sub
cs
aam
adc
orb
pusha
xor
fmuls
jnp
std
jns
mov
imul
jmp
jnp
test
add
jnp
add
cmpsb
nop
push
fadd
or
cmp
jnp
in
dec
or
sbb
imul
insb
loopne
xorb
jne
testb
loopne
fdiv
push
add
cmp
loope
xchg
orb
insb
std
gs
sub
jbe
mov
fadds
test
or
roll
xchg
stos
pusha
add
xlat
std
roll
mov
std
and
pusha
add
sub
repz
sbb
adc
sbb
pushf
push
adc
call
std
repnz
mov
rol
std
jno
jl
push
lock
rcr
loop
xor
fisubrs
scas
and
adcl
push
inc
lods
aas
addl
adc
cmpsb
adc
push
inc
cwtl
mov
aaa
jne
push
test
push
mov
shrb
inc
add
fcoms
fsubl
js
xchg
jne
push
push
push
sbbl
add
out
sbb
xchg
adc
xorb
push
arpl
andl
cmp
lahf
and
or
in
stc
rclb
dec
xchg
or
mov
nop
or
jo
jbe
add
scas
xchg
dec
test
add
xchg
xor
je
add
jmp
fs
or
inc
sub
loop
loopne
xchg
pop
xchg
pusha
adc
pusha
add
xor
ret
pop
mov
xchg
or
dec
dec
xchg
add
insb
shrb
shlb
aaa
pop
xchg
pop
loop
xor
mov
jmp
or
arpl
mov
scas
or
orb
push
xchg
pusha
add
add
mov
xchg
cmpsb
add
jl
data16
push
mov
nop
inc
or
lods
roll
call
push
sarb
fildll
stos
aam
shlb
stos
pop
mov
cmp
xor
push
xchg
shr
add
inc
cld
push
mov
les
stos
or
insl
addb
mov
pushf
inc
sub
mov
scas
pop
add
shrb
jmp
dec
ja
jl
and
jp
loopne,pn
jle
add
mov
pop
insb
insl
orb
fadds
sbbb
mov
mov
and
orb
push
mov
daa
cmpsl
nop
roll
sbb
dec
add
cmp
lea
cmpl
popa
enter
add
popa
lret
sahf
adc
mov
aaa
je
push
popa
mov
add
rcll
movsb
and
movl
push
sub
loopne
jl
ret
add
sti
pop
outsb
enter
push
sbb
adc
stc
lods
rcrl
fmul
pop
aam
in
mov
and
das
mov
das
cmpl
pop
pop
out
test
outsl
xorb
jp
out
and
push
xchg
movsb
cltd
pop
xchg
out
push
jnp
inc
xor
adc
aad
repz
repz
lock
jnp
push
sti
stos
lret
ja
inc
jo
inc
call
inc
dec
and
mov
dec
adc
jp
dec
adc
imul
xor
push
push
out
push
mov
sub
shrl
dec
inc
sub
pusha
das
sbb
das
xchg
inc
add
orb
jmp
das
mov
add
pusha
add
xorl
mov
das
inc
or
adc
sbb
insb
loopne
fsts
pusha
imul
push
xor
das
sarb
jne
andl
sub
addb
das
inc
lods
add
loope
adc
in
in
cmpl
sar
xor
push
mov
aaa
shrb
and
leave
cvtps2pd
or
mov
sub
ja
adc
js
push
push
lcall
xlat
mov
std
les
insb
rorb
dec
mov
push
pushf
sbb
mov
lcall
orb
mov
iret
cltd
pusha
mov
rcrl
pusha
add
pushl
ljmp
arpl
mov
and
pop
mov
fcomp
adc
insb
ja
insb
stos
ffree
sub
jle
loopne
or
ret
addl
sbb
sbbl
je
jmp
dec
xchg
inc
adc
out
xor
lret
clc
or
imul
jae
push
rclb
ret
xchg
out
in
out
out
insl
inc
adc
add
aam
mov
pop
dec
and
push
cwtl
inc
movsl
mov
inc
and
js
or
insl
test
fadds
or
fstpl
cmp
insb
insl
add
sbb
xchg
adc
popa
insl
arpl
inc
dec
add
test
add
and
push
aam
testb
sub
adc
mov
push
mov
mov
sbb
push
jo
pop
stos
sbb
inc
stos
push
inc
add
inc
inc
mov
mov
jnp
inc
rol
cli
out
int
mov
and
push
movsb
and
rorl
pusha
xchg
test
rorb
je,pt
xchg
inc
cmovbe
out
xchg
inc
rolb
out
loop
cs
xchg
mov
call
adc
or
aaa
sub
cltd
js
sbb
movsb
adc
cmp
inc
stos
cmp
stos
adc
insl
call
or
push
shrb
in
inc
or
cltd
pusha
mov
push
cld
pop
xor
dec
sbb
les
jmp
push
aad
enter
scas
dec
sahf
xchg
add
add
inc
cmp
outsl
dec
sub
clc
es
dec
adc
mov
aas
in
fcom
jmp
push
enter
pop
push
cs
stos
sbb
pop
ds
or
out
in
inc
mov
pop
ljmp
test
fstpt
lcall
mov
mov
mov
jecxz
pusha
sub
dec
and
push
xchg
inc
mov
jg
or
push
mov
mov
jb
dec
adc
cmpsl
inc
and
clc
daa
cs
shlb
pop
movsl
or
stos
lods
jmp
inc
add
xchg
sarb
lret
pop
add
cltd
daa
adc
sub
push
jmp
sub
adc
fadds
daa
test
adc
jns
pop
stos
repz
inc
inc
pusha
enter
xor
pop
mov
cld
mov
inc
movsl
cs
push
lahf
dec
nop
hlt
je
iret
mov
ficomps
lods
pop
pusha
adc
mov
dec
mov
es
es
mov
clc
cltd
mov
out
xchg
pop
mov
cwtl
das
and
jle
in
mov
ds
pop
jmp
sbb
pop
push
cmp
imul
add
jg
lret
jmp
jmp
xchg
in
mov
pop
sub
push
push
test
popa
leave
mov
or
lret
push
push
mov
sbb
insb
push
in
pop
aad
sub
pop
cmp
mov
ret
push
adcl
in
sbb
test
xor
je
push
aas
adcb
rorb
subb
cmp
out
push
aas
sbb
imul
pop
lret
ds
add
ds
scas
cmp
sub
pop
mov
int3
mov
ret
ds
pusha
push
pop
pop
and
repnz
ffreep
cmovs
shrb
xchg
movsb
mov
mov
scas
lds
add
sbb
jmp
subl
dec
pop
cwtl
repnz
cli
pop
loopne
fistpll
and
cmp
jg
push
mov
cmpsb
push
outsb
in
sub
jg
mov
and
fidivs
cld
cs
add
outsb
push
aas
fwait
dec
ds
sbb
xchg
cmp
mov
popf
adc
inc
imul
sub
xchg
add
pusha
notb
pusha
push
push
aas
or
lods
dec
push
cli
inc
nop
shll
xchg
pop
das
xor
shll
xchg
jge
jnp
add
jmp
dec
in
call
jnp
xchg
add
sbb
test
cwtl
aas
lock
and
pop
add
push
mov
xchg
inc
sub
xor
dec
push
nop
lret
pop
jo
movsb
xor
test
push
test
and
xchg
pop
or
imul
dec
xchg
frstor
xchg
fmul
clc
outsl
in
adc
xchg
inc
fimuls
sbb
and
pop
gs
lret
dec
mov
movsb
xor
pusha
cmpsb
je
scas
or
sbb
test
cld
dec
add
into
lahf
cld
jl
mov
nop
sbb
mov
and
mov
mov
mov
aas
into
jle
push
cmp
repz
adc
orl
js
test
mov
aas
in
lea
push
mov
jno
dec
push
push
fdivrl
lock
mov
cwtl
aas
xor
cli
sbb
adc
pop
dec
dec
gs
lret
cmp
sbb
cwtl
xor
add
pop
or
aas
fidivrs
sbb
xchg
fsubrl
nop
lret
aas
mov
xor
cmp
push
sbb
je
out
push
push
pushf
push
jl
dec
sub
in
scas
popf
in
and
outsb
sbb
sbb
mov
leave
je
mov
sahf
cmp
les
xchg
lret
mov
mov
jl
sub
out
mov
xchg
adcl
sbb
rclb
adc
fdivs
out
xor
iret
adc
es
mov
test
push
mov
mov
xor
push
sub
jmp
jmp
rcrb
insl
sub
jbe
adc
sahf
mov
out
lahf
ljmp
psubusb
rorl
cmp
aas
call
in
das
outsb
push
jg
aas
mov
dec
test
sbb
call
insb
xor
sbb
movsb
rcrb
out
dec
sbb
inc
into
dec
sub
add
dec
push
sarl
or
aad
mov
call
mov
push
js
mov
mov
xor
mov
scas
pop
mov
test
xchg
push
or
call
out
loopne
sahf
outsb
dec
dec
aam
dec
pushf
outsb
mov
cmp
sahf
aas
mov
push
fldl
and
sbb
mov
inc
dec
mov
mov
cmpsb
imul
clc
and
mov
sbb
nop
mov
popf
ja
inc
movsb
popf
punpckhwd
or
shrb
arpl
jg
in
movsl
or
adc
in
mov
test
xchg
les
outsl
enter
call
nop
aad
dec
add
cmp
fldt
or
fs
xor
push
sub
sbb
shll
push
stos
inc
pop
leave
out
jle
pop
dec
shll
ds
ds
std
push
add
leave
and
or
lcall
dec
mov
inc
or
mov
inc
insb
shlb
push
movsb
xor
bound
stos
jl
hlt
std
mov
inc
cld
adc
jecxz
pop
clc
sub
xlat
test
repnz
bound
ds
aas
enter
pop
cmp
xchg
fwait
mov
or
adc
enter
adc
dec
pop
fucomp
popf
iret
dec
inc
fmulp
out
lock
xor
inc
lods
enter
jle
gs
rolb
push
jns
or
adc
cmp
xor
dec
lahf
fldenv
int
mov
out
leave
xchg
stos
sbb
adcl
inc
fimuls
inc
inc
or
cmp
and
dec
or
inc
fcoms
ss
lret
test
dec
mov
inc
cmp
shrl
mov
push
fnstcw
aas
push
sahf
and
mov
hlt
cmp
pop
je
daa
test
addr16
sub
fwait
fs
cmp
inc
adc
test
sub
aaa
jmp
or
enter
decb
sub
and
jae
jl
test
outsb
add
add
xor
fildll
or
ja
pop
aaa
and
das
or
dec
jo
fisttps
incb
shlb
aas
jnp
loop,pt
ret
dec
dec
or
sarb
call
lds
call
sti
pushl
pop
push
pushf
in
inc
in
ucomiss
mov
adc
fldenv
dec
fsubr
sbb
das
test
pop
int
cmp
fsubr
sbb
or
push
test
push
scas
mov
rcrb
popf
out
sbb
or
fsubl
lods
rcrb
and
xchg
je
push
sub
aas
fsubs
or
cmp
test
pop
cld
adc
jno
outsb
push
xchg
loop
mov
movsl
es
inc
pop
pop
aas
push
mov
scas
aam
cmp
mov
div
in
jge
cld
push
clc
arpl
xor
jle
mov
jbe
out
shll
cs
aas
mov
push
cwtl
add
dec
xor
adcb
pop
xchg
fnsetpm(287
mov
adc
aad
pop
add
cli
in
out
in
dec
movsl
test
pop
incb
je
call
dec
test
xor
movsb
data16
fwait
mov
scas
jb
dec
sarb
or
loop
fsubr
inc
cmpsb
push
or
mov
sbb
ds
jb
push
sub
cmp
bound
xor
nop
dec
mov
or
jle
pop
push
xchg
out
nopl
fildll
out
or
call
jo,pt
xor
stc
xchg
or
je
sahf
movsl
cmp
cmpsb
jae
rcll
lret
mov
dec
gs
inc
or
outsb
mov
xchg
arpl
inc
xchg
cld
sub
jne
out
cld
jge
adc
cmp
xchg
dec
sub
and
std
push
dec
in
mov
mov
test
push
adc
outsb
sub
push
push
mov
mov
sbbb
sbb
dec
and
vmwrite
inc
sbb
xchg
and
mov
push
repnz
mov
and
jns
insl
mov
nop
xchg
adc
enter
lock
in
vmwrite
push
mov
xchg
mov
cmp
sti
inc
jg
mov
repnz
cwtl
jns
mov
sbb
add
dec
lret
mov
les
add
lods
sbb
loopne
ret
cmp
add
js
movsb
sbb
push
jns
push
fldcw
lret
push
mov
es
loopne
adcl
mov
xchg
xchg
inc
sub
sar
mov
or
ljmp
fldl
pop
add
in
mov
push
xchg
jae
sub
jmp
ror
repz
sub
test
xor
sahf
push
in
inc
pop
test
in
sub
dec
enter
pop
ret
movsl
sarb
lock
cmpsb
les
jae
inc
ljmp
adc
sbb
incb
cmp
sub
sbb
mov
jmp
andb
jg
pop
cld
ds
sub
dec
jle
rcrb
movsl
jb
mov
insl
pop
push
dec
mov
push
subb
pop
dec
movsl
xor
jo
jmp
adcb
mov
movsl
rcrb
push
stc
adc
movsl
repnz
sub
cli
adc
push
aam
pop
sahf
xchg
dec
loopne
shlb
xchg
xchg
outsb
in
enter
lods
or
mov
inc
mov
cmp
jmp
sub
sbbl
adcb
push
sub
and
mov
pop
or
sub
cltd
iret
or
les
icebp
mov
add
scas
or
or
out
or
cwtl
or
movsl
mov
ja
insb
push
sbb
addl
lods
call
xor
mov
fsubr
imul
sub
pop
xchg
addr16
jg
ja
stc
insb
ds
out
cmp
imul
dec
pusha
xlat
hlt
pop
popa
lahf
fstpt
into
nop
cmp
cmp
nop
push
imul
ror
and
shlb
mov
jnp
adc
fnstsw
or
xchg
cmp
or
mov
pop
insl
les
push
xor
inc
dec
cmp
test
sbb
dec
pushf
daa
sub
add
inc
fistps
mov
mov
lock
pop
jns
jo
cmp
cmp
xchg
inc
mov
cmp
jmp
les
enter
repnz
sub
pusha
or
movsl
mov
jg
aas
cmp
imul
push
loopne
cmp
orps
sub
push
outsb
pop
sbb
mov
push
and
cld
lahf
and
dec
dec
decl
das
sbb
jmp
mov
addps
clc
adc
adcb
insl
mov
sbb
inc
sub
jae
mov
and
sbb
sbbl
add
mov
push
dec
test
scas
sbb
cmp
je
movsb
push
sbb
xchg
test
or
fwait
inc
adc
fdivl
xor
shr
sbb
leave
inc
jle
ds
inc
stos
mov
xchg
dec
ja
outsl
inc
movsl
xchg
push
ficoml
mov
js
or
outsl
fcompl
outsb
cmp
enter
dec
dec
cmp
mov
call
mov
or
push
mov
jne
call
push
lods
or
adc
mov
rcrb
aas
subb
push
mov
xor
cmp
mov
xchg
push
mov
clc
add
add
fadds
stc
stc
dec
pop
leave
mov
nop
lock
push
push
pop
out
cmp
icebp
lods
push
push
nop
into
sub
scas
cmp
scas
xor
sbb
cmp
pop
cmp
add
jne
mov
push
mov
mov
cmp
nop
dec
aaa
jg
mov
jns
dec
orb
push
adc
mov
aas
pusha
cmp
aaa
cmp
aas
cmp
pop
pop
xchg
sub
xorl
pop
mov
repnz
jmp
push
jmp
dec
loopne
cld
push
push
fcomip
cs
and
cmp
loopne
push
mov
or
fcompl
adc
mov
pop
js
add
test
imul
mov
aas
enter
test
cmp
pusha
pop
mov
aas
mov
dec
sbb
iret
sbb
pop
pop
sub
aas
push
ds
fiaddl
push
pop
push
push
das
or
mov
ja
nop
jmp
stos
sahf
adc
sti
pop
out
test
stc
pop
jne
pop
imul
xor
pop
fadds
std
push
cmp
scas
xor
cmp
scas
aas
mov
ds
adc
enter
popw
sub
cmp
fs
push
scas
repnz
xchg
mov
popf
scas
jns
dec
pop
scas
mov
in
das
mov
scas
pop
repnz
xchg
cmp
das
jns
dec
adc
xchg
mov
push
repnz
lods
mov
sbb
jmp
or
cld
idiv
adc
cmp
or
jl
divl
sti
jbe
jl
and
lahf
pop
std
pusha
aad
xchg
dec
jo
lahf
jmp
mov
mov
xor
aas
jo
imul
jecxz
jmp
das
push
push
mov
adc
popa
and
int3
lds
adc
leave
sti
test
jo
lahf
movsl
cmp
fnstsw
xchg
inc
push
imul
add
jg
outsl
inc
sbb
std
sbb
sbb
stc
inc
mov
rcll
call
inc
fisubrs
dec
fnstsw
dec
ja
or
fidivrs
jmp
mov
xchg
mov
arpl
pop
aas
push
fsubs
rorb
sar
lahf
sub
xor
push
call
inc
fwait
in
cld
frstor
sub
adc
repnz
push
or
xchg
adc
xor
pop
ljmp
sbb
test
or
add
inc
cmpxchg
cmc
stos
mov
mov
icebp
push
fmulp
in
cmpsb
xchg
sbb
cs
mov
adc
mov
xchg
push
in
inc
adc
in
in
inc
in
xchg
push
lcall
psubusb
mov
cltd
cmp
adc
sbb
sahf
push
jns
nop
xor
xchg
ds
jle
pop
xor
push
subb
test
add
sbb
repnz
cs
sarb
mov
js
mov
mov
clc
cld
das
lock
mov
das
lret
dec
aas
popf
ss
pop
inc
inc
fidivs
cld
inc
mov
sub
pusha
push
dec
mov
sahf
daa
xlat
inc
ja
push
xor
sub
fwait
movsb
xor
and
lret
xchg
mov
cs
imul
movsb
pop
insb
inc
inc
sub
mov
sbb
push
out
sbb
test
ret
repz
cld
push
aam
mov
mulb
loopne
adc
iret
fsubl
mov
cmpsb
mov
sub
sub
jp
imulb
iret
or
pushw
or
sahf
les
push
in
fsubrp
dec
pop
cwtl
nop
jbe
xchg
lret
mov
daa
sub
test
mov
push
add
int
inc
jnp
add
ficompl
xchg
lret
sub
adc
pop
mov
cwtl
ja
aam
rclb
mov
or
es
out
inc
cld
ret
es
xorb
inc
cmp
inc
jbe
cmp
fucom
and
cs
cwtl
sub
mov
cmp
notb
push
iret
mov
and
jle
sub
out
sub
clc
add
and
daa
fcmovu
incb
dec
pop
inc
pop
push
sti
mov
cmpsb
cmp
xchg
lret
and
xchg
mov
cmp
stc
sub
ja
pop
push
mov
insb
dec
xor
lret
sub
pusha
into
add
sahf
inc
daa
int
sub
xor
push
push
movsl
js
xchg
rolb
sub
jl
push
push
pop
cli
paddsb
enter
movsb
inc
pop
decl
xchg
or
mov
pop
loopne
xchg
adcb
lods
aad
pop
stos
rcrl
sub
ja
and
jbe
sbb
test
add
nop
bound
dec
addr16
or
xchg
mov
inc
inc
cmp
stc
in
addr16
add
cs
xor
repnz
push
fldl
mov
outsl
inc
and
sub
push
jecxz
sbb
add
xchg
push
pop
pop
or
sub
pusha
sahf
int3
dec
daa
mov
pop
jp
mov
iret
lods
stos
mov
adcb
push
ror
cmp
inc
jle
cmp
out
and
rcrl
sub
sub
insb
sub
notb
fisttps
xchg
outsl
fstpt
sub
xor
xor
sub
lahf
adc
adc
sub
sub
mul
in
jmp
or
or
sub
loopne
mov
push
jbe
scas
ja
daa
inc
cmp
ds
call
and
or
inc
xor
daa
sbb
jb
push
sub
sub
pop
lret
cs
sub
cmc
jbe
xchg
dec
aaa
enter
daa
call
sbb
and
or
sub
in
push
rep
cmc
dec
shl
mov
mov
jmp
stc
inc
call
add
in
loope
sbb
mov
adc
std
sub
insb
sub
lds
jmp
data16
push
dec
jb
daa
add
sbb
adc
repz
fsubl
and
shlb
movsb
jnp
jmp
outsl
jmp
daa
mov
movsb
push
cmp
sahf
movsb
inc
loopne
fbstp
stos
inc
push
and
ja
repz
xor
adc
or
lods
or
and
jns
xlat
insb
push
pop
dec
cmp
iret
repz
sbb
and
loopne
mov
mov
pushf
mov
cmp
repz
sub
out
ds
push
add
and
rcrb
stos
lcall
jns
pop
dec
ds
xor
out
add
and
loop
repz
lret
mov
cmp
subb
sahf
out
cmp
test
out
mov
iret
repz
fcmove
shrb
xorb
cmp
cmp
add
mov
push
enter
ds
and
pop
mov
sub
sub
jns
ja
aam
movsb
xchg
jnp
jns
xorb
push
inc
push
es
out
ds
sbb
cld
sub
enter
sahf
mov
jl
pop
dec
jns
out
cmp
and
add
cmp
les
jns
mov
jle
repz
cmp
pop
inc
sub
out
lcall
sahf
out
sahf
mov
pop
jns
out
push
inc
xor
add
cmp
repz
sbb
fmulp
mov
mov
xchg
xchg
cmp
repz
dec
cmp
or
cmpsl
stc
cli
pop
repnz
repz
repz
sub
xor
adc
jns
iret
or
sub
sahf
out
sahf
les
jns
out
pop
dec
inc
sub
idivl
call
mov
outsb
mov
push
test
jns
outsb
push
ds
push
xor
mov
cmp
es
out
push
push
sub
xor
dec
loopne
bnd
mov
es
repz
push
lods
loop
mov
or
sbb
cmp
sahf
out
pop
push
adcb
scas
mov
jl
in
cld
or
cs
iret
repz
push
pusha
adc
incb
out
sahf
out
and
aam
mov
out
sahf
movsb
nop
andb
lahf
out
and
add
pop
in
cmp
repz
xchg
jp
repz
push
sbb
mov
push
fiadds
rol
iret
repz
mov
jbe
iret
repz
push
inc
xor
jns
out
add
sbb
xor
out
mov
sub
inc
push
sahf
out
sahf
dec
pop
push
mov
mov
fsubrp
jnp
int
adc
insb
sbb
pop
pop
sahf
out
sahf
push
jp
cwtl
scas
mov
lret
add
adc
jns
repz
es
pop
push
jo
iret
repz
cwtl
lods
mov
repz
add
and
fidivrs
out
pop
data16
sbb
sahf
out
je
push
dec
cmp
jns
out
and
repnz
repz
loop
mov
mov
add
repz
out
or
and
cmp
repz
ss
bound
mov
movsb
mov
add
sbb
data16
or
pop
mov
je
cmp
add
adc
into
out
int
out
xor
xlat
xchg
push
call
add
fcomp
pop
xchg
add
lret
push
mov
mov
pop
add
aam
es
movntq
dec
xchg
fcoms
out
out
sahf
call
in
jns
out
out
out
lock
repnz
sahf
out
cli
sti
cld
std
iret
repz
incb
cltd
or
or
cmp
repz
or
cmp
repz
adc
push
pop
sbb
sbb
cmp
repz
sbb
cmp
repz
and
es
sub
sub
cmp
repz
sub
cmp
repz
xor
iret
repz
pop
imul
repz
mov
sahf
cmpsl
stc
or
out
sahf
out
insl
jns
xchg
sahf
out
sahf
movsl
mov
aad
idivb
repz
adc
cmp
repz
gs
xchg
iret
repz
movsb
mov
int3
sahf
out
cmp
decl
pushf
adc
jns
out
and
sahf
out
pop
bound
lahf
out
sahf
adcl
loopne
insl
insl
sti
sti
adc
xlat
add
aas
mov
jbe
gs
sbb
je
insl
mov
gs
add
and
push
pop
fs
adcl
outsb
jne
faddl
xchg
or
jo
push
imul
testl
dec
popa
pop
es
push
inc
cmp
add
in
push
scas
std
ss
sbb
jb
inc
and
inc
push
mov
insl
lods
add
xor
push
shll
jb
jo
and
add
fs
or
inc
icebp
pop
scas
push
inc
xchg
fcomps
repz
push
jo
mov
sbb
pop
pop
xchg
push
xor
jae
and
or
addr16
or
es
hlt
jb
or
add
es
push
fisubl
push
jo
push
push
add
jnp
insb
push
rolb
loopne
data16
lock
push
lock
pop
push
adc
mov
rolb
int
jle
nop
loopne
add
sarl
shl
push
xor
pusha
pusha
xchg
or
mov
lret
divb
stos
mov
add
sbb
testl
inc
push
inc
insw
je
xchg
add
and
push
inc
push
and
into
cld
mov
std
push
push
push
add
lock
icebp
xlat
mov
pop
repz
out
ja
pop
jnp
icebp
push
out
sub
push
mov
cmc
push
cli
add
add
add
adc
add
cmp
or
xor
pop
add
add
in
add
and
add
test
inc
add
pushl
faddl
jae
push
cmp
or
pushl
and
int3
std
xor
push
add
add
add
clc
and
jmp
push
nop
push
fistpll
add
decl
scas
add
cld
lret
divl
or
std
addr16
mov
xchg
add
add
std
fwait
add
inc
add
and
xor
xor
dec
ljmp
cli
xor
push
std
jo
call
add
add
mov
push
add
movsl
stos
add
add
cltd
add
sbb
mov
pop
std
imul
cmp
std
dec
inc
ds
add
add
add
add
add
ljmp
sbbb
add
add
mov
sub
fadds
jmp
lret
add
cld
dec
clc
mov
pop
fstpt
add
pop
add
sbb
std
aam
jbe
pop
add
add
pushl
add
clc
and
fcomip
scas
cmc
stc
pop
pusha
add
add
pop
sub
call
std
pusha
clc
aam
cmp
roll
jo
lods
pop
lock
das
push
inc
add
pop
add
scas
std
mov
dec
add
aad
xchg
incl
jge
popa
std
adc
sub
xchg
mov
call
popf
xor
call
std
add
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
cmp
inc
mov
ficoml
push
in
xor
add
lcall
dec
mov
add
add
add
add
arpl
decl
mov
jge
push
mov
out
push
call
stc
jmp
clc
ljmp
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
daa
stc
sti
ss
movsb
cld
push
jg
push
mov
ljmp
xchg
add
add
xor
mov
mov
or
dec
pop
iret
push
les
dec
push
mov
add
add
decb
cld
jmp
shl
mov
out
fsubrp
sub
ljmp
divl
cmc
inc
cmc
jo
call
dec
add
add
adc
jmp
or
or
cld
decl
or
push
fimuls
lahf
pmaxub
adc
or
push
sbb
add
push
sbb
ljmp
test
push
in
aaa
call
xor
adc
sub
sbb
mov
pop
cmc
ljmp
hlt
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
clc
decl
jbe
dec
adc
adc
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
sete
push
mov
jnp
enter
psubq
sti
imul
negb
repz
in
fsubrl
dec
fstps
icebp
xor
in
push
incb
sti
and
xlat
cld
test
or
adc
add
mov
pop
popa
sbb
adc
adc
sbb
xchg
test
or
lcall
decl
test
hlt
cli
repnz
adc
ljmp
loop
aaa
sub
dec
into
shl
fcomp
loopne
repnz
jp
add
incl
add
xor
test
sbb
pop
sub
outsb
push
bound
sub
pop
or
ljmp
lock
push
or
pop
add
mov
repnz
out
fcomip
lahf
in
jae
je
jmp
in
ljmp
imul
fadds
jg
add
jle
add
or
pop
or
xor
sbb
cmp
sbb
push
push
sbbb
and
adc
or
add
add
add
incl
lahf
sti
fcomip
mov
jmp
out
shr
mov
adc
pop
fidivrl
test
fdivp
call
or
adc
adc
xor
repz
call
xchg
adc
sbbb
push
mov
movl
stc
jns
loope
mov
jg
cmc
clc
jbe
add
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
call
aam
daa
pop
sbb
fimuls
jecxz
into
adc
adc
ds
adc
adc
push
jg
daa
adc
adc
or
rolb
cld
enter
xchg
clc
imul
jne
jmp
cli
pop
cli
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
cld
js
jg
lds
push
test
adc
push
lahf
adc
imul
adc
aaa
std
lcall
add
clts
sub
cli
in
xor
cld
notl
loopne
add
repz
das
testl
fsubrp
xchg
out
insb
out
mov
or
push
jmp
frstor
in
icebp
add
adc
adc
adc
jg
jmp
adc
adc
scas
adc
lret
adc
adc
mov
jg
stos
std
mov
stc
or
stc
sbb
push
sbb
out
jb
cli
push
inc
repnz
stos
in
sub
jecxz
fcoml
rcr
stos
ljmp
call
adc
push
pop
pop
loop
popa
adc
xchg
adc
sbb
std
or
ljmp
adc
pop
femms
or
add
or
xor
inc
cmp
mov
call
sti
outsl
imulb
icebp
mov
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
outsb
aam
fdivrl
incl
movsb
add
ljmp
push
pop
sbb
adc
mov
aaa
fs
fbstp
push
adc
or
or
jle
std
mov
test
aam
movsl
std
cmpsb
sti
mov
repz
mov
shl
jmp
fldl
aad
ror
xlat
popf
in
repz
call
ds
or
adc
push
lock
xor
pop
sub
inc
sbb
push
xor
jl
push
rclb
and
pop
cmp
or
int3
pop
in
add
loopne
lcall
aam
jle
stos
std
fcomip
inc
hlt
mov
jecxz
fisubl
sub
mov
mov
call
and
or
stos
pop
aad
bound
lds
adc
adc
jno
inc
btr
cmp
pop
push
adc
orb
push
pusha
add
sbb
incl
push
dec
add
add
sbb
and
out
out
loopne
fstps
push
mov
mov
out
and
pop
ljmp
sbb
push
adc
adc
rorb
jg
stc
push
inc
adc
pop
mov
ret
or
or
or
lcall
add
lock
mov
xor
int
sti
insl
lds
jmp
or
adc
sbb
rcrl
rclb
adc
push
call
xlat
or
push
mov
and
scas
inc
call
xchg
or
test
xor
mov
lds
pop
or
add
stc
cmp
and
loope
cmp
test
lds
jb
and
add
or
or
adc
adc
push
sbb
hlt
adc
xchg
or
push
sub
mov
add
call
out
add
or
or
or
mov
or
add
decb
inc
in
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
pmulhuw
xchg
cmovge
stos
or
xchg
lcall
rorl
adc
iret
or
packssdw
lcall
mov
fildl
xchg
add
sbb
mov
and
or
or
add
fiaddl
scas
sti
ret
out
push
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
pop
call
add
mov
add
add
mov
pop
lcall
or
adc
pop
jbe
adc
adc
adc
cld
sub
loop
xor
fwait
jecxz
fsubl
les
aad
icebp
cmp
adc
push
pop
loopne
dec
adc
xchg
add
add
decl
movsl
add
std
pop
lcall
push
test
pop
adc
lcall
adc
cmp
clc
lods
in
in
jge
xchg
fsts
int3
mov
fcom
jb
pop
jmp
sbb
pop
push
and
jmp
cld
test
scas
cld
xor
sub
stos
dec
add
or
decl
lds
and
add
std
idiv
mov
or
or
inc
pushf
adc
das
or
stos
mov
jecxz
loopne
fsts
push
lock
and
sub
add
sti
jmp
in
inc
repz
call
or
fimull
xor
add
push
add
rorb
or
or
push
or
incb
imul
out
fmul
push
leave
pop
shlb
adc
stos
pushl
std
ljmp
pop
add
call
and
leave
add
pop
pop
popa
std
sar
inc
push
sub
sbb
add
dec
push
into
push
mov
cmp
and
adc
adc
add
add
fldenv
ret
cmc
push
xchg
neg
test
dec
sub
das
xchg
ss
clc
adc
sbb
inc
loop
lock
stc
loop
and
out
faddl
cmpsl
add
pushf
inc
push
ljmp
jmp
mov
out
dec
or
xchg
add
fst
inc
sar
cmp
inc
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
ljmp
outsl
dec
std
clc
aam
in
pop
loope
lock
cli
mov
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
and
or
sub
test
ror
ret
push
iret
repnz
sbb
daa
mov
ds
xor
loope
push
add
loope
fistl
fdivrl
imull
add
or
adc
imul
adc
adc
xor
mov
mov
cmp
decl
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
or
cmp
sub
call
fstpl
fcoms
pop
add
cmp
mov
les
cltd
adc
adc
push
clc
and
les
xchg
push
inc
ljmp
adc
push
shrb
leave
push
mov
dec
fimull
incl
clc
adc
cwtl
es
xor
cmp
in
inc
xor
cmp
lds
or
scas
fisttps
mov
out
cmc
fdivrs
in
icebp
or
or
clc
pop
daa
in
xchg
and
and
sbb
adc
or
jecxz
call
jno
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
cmp
call
out
inc
out
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
mov
nop
mov
mov
mov
loop
xor
test
inc
ret
mov
inc
cli
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
fistl
fnsave
fldcw
fldenv
and
sbb
mov
xor
ljmp
jo
pop
or
sti
stos
call
ror
ret
aaa
mov
lods
in
std
call
and
cli
pushl
or
xor
inc
aam
xor
pop
inc
call
push
fistl
lret
pop
iret
mov
fiadds
icebp
adc
jb
sub
xor
add
or
sub
push
imulb
insb
ljmp
out
ret
or
into
lock
cli
fildll
adc
cmp
inc
mov
out
subl
sbb
repnz
call
out
fldt
roll
mov
add
adc
sbb
pushl
inc
aaa
das
xor
es
ja
int3
sti
sub
and
mov
adc
mov
jne
sub
decl
sahf
sbb
and
pop
ds
xor
push
xor
fldl
inc
incl
jne
sbb
adc
rcr
aam
iret
push
shlb
xlat
loopne
das
add
xor
xor
cmp
pushl
inc
and
jne
insb
in
aad
enter
mov
mov
mov
daa
push
ljmp
cmpl
ret
or
cld
mov
ljmp
jo
dec
push
cld
call
mov
mov
pop
test
xor
aaa
lret
xor
decl
roll
mov
mov
addb
cs
ds
dec
push
lcall
xor
sub
shl
jmp
call
mov
sbb
add
outsl
mov
pushl
cld
jge
inc
pop
jg
lods
sub
xor
bnd
xor
in
jns
shl
jg
dec
stos
ret
ds
in
lcall
and
mov
pop
pop
adc
es
pop
insl
push
push
add
leave
out
push
call
in
shr
into
pop
iret
jg
call
jmp
xor
cmp
mov
clc
push
in
dec
push
mov
aam
out
sarb
sbb
lcall
sub
and
fsubrs
ja
xlat
push
mov
stc
xchg
cmc
shl
mov
xlat
cwtl
aam
call
ret
iret
adc
aaa
clc
push
adc
cmp
xlat
push
sti
or
cmc
es
ljmp
int
mov
int3
or
sub
pop
pop
sub
stos
aas
scas
cmp
aaa
xchg
sbb
cmp
stc
cmp
repnz
addr16
jmp
fiadds
loopne
fsubl
loope
stc
push
psllw
fsubrl
pop
aaa
fildll
leave
sbb
incl
dec
icebp
shl
sbb
scas
outsl
mov
shl
add
adc
aaa
std
inc
test
aad
xor
sub
sbb
or
cld
loop
ljmp
cmp
fildl
neg
lcall
ja
std
push
out
ljmp
ss
push
cmp
adc
pop
out
fstps
int3
mov
inc
mov
jg
arpl
in
movsl
cmp
inc
je
mov
js
sbb
jb
test
cmpsb
ljmp
test
mov
inc
into
xchg
rcll
out
add
sbb
sub
mov
inc
xchg
mov
icebp
adc
outsb
loopne
iret
xor
mov
ljmp
and
incb
xor
inc
or
dec
pusha
inc
xchg
jmp
pop
adc
add
jmp
out
jmp
filds
leave
test
fcmovne
insb
sarb
in
or
inc
push
cld
incl
xor
mov
iret
pop
mov
mov
imul
addl
mov
outsl
sub
cwtl
dec
mov
sub
mov
mov
cmpsl
jmp
jmp
adc
aam
aam
shll
adc
inc
aad
out
add
aaa
sub
xor
aaa
mov
sub
sbb
or
int3
adc
in
mov
mov
mov
cmp
add
xchg
sub
inc
fdivs
or
mov
daa
out
sub
repz
sub
popf
flds
call
sarl
pop
mul
push
xchg
push
lcall
xor
cmp
inc
adc
std
or
or
lret
xchg
mov
mov
decl
sub
xor
test
ss
push
mov
push
notb
fsubr
mov
rol
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
push
aas
dec
das
fcompl
repz
into
or
mov
test
mov
jnp
ljmp
jns
repz
mov
cs
in
aam
int3
push
repnz
inc
or
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
pop
and
roll
mov
cmpsl
les
ja
pusha
sbb
mov
pop
sbb
mov
decl
inc
and
mov
fstl
jo
sbb
fs
data16
js
fs
jg
and
jle
sahf
inc
addr16
jo
xor
adc
call
xlat
int3
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
lea
mov
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
or
stc
pushl
jo
sub
inc
mov
repnz
sbb
or
aad
into
in
mov
leave
mov
incl
jmp
pop
dec
sub
fldl
dec
sbb
sbb
rcll
mov
loop
mov
rcll
ljmp
out
xor
popa
aaa
test
add
rcrb
dec
pop
fidivrs
test
cs
push
sti
push
jp
les
lcall
cmp
cmp
dec
mov
js
aas
cld
loopne
sbb
popa
sub
ljmp
inc
cmp
daa
xor
mov
sub
loope
int
iret
outsb
leave
xchg
ret
test
aaa
insb
mov
mov
notb
outsb
inc
cmpsb
push
inc
pop
int3
push
add
lcall
icebp
inc
stos
sarb
mov
ss
mov
dec
ljmp
cli
pushl
dec
dec
dec
iret
dec
jl
lret
sbb
pop
lock
loop
shlb
shufps
lcall
mov
sti
fistps
dec
inc
fmull
stos
pop
aam
les
incl
pop
jmp
mov
stos
leave
ret
pop
loope
push
rcl
xor
inc
je
push
dec
xchg
inc
mov
scas
sub
adc
add
fldcw
scas
rcrb
imulb
jg
shlb
in
ret
popa
sti
mov
pop
dec
sbb
hlt
call
push
fs
lahf
ds
insl
add
jecxz
lret
int
mov
loop
lock
mov
pop
bound
mov
cmp
pushf
sub
sbb
and
arpl
add
popf
lcall
xor
mov
lds
sbb
xchg
or
and
arpl
ret
inc
cli
fisttps
fisttpl
push
sub
jae
pop
inc
pop
mov
mov
lcall
and
das
fidivs
mov
jp
rcrb
adc
rolb
icebp
sub
aam
pop
fdivrl
flds
lret
das
out
add
adc
cmp
dec
inc
xor
lcall
out
in
fimull
cmpb
leave
in
add
cmc
sub
cmp
repnz
pop
mov
xor
jg
repnz
sahf
jmp
xchg
ficompl
out
add
cli
fistl
lret
and
xor
roll
inc
es
and
adc
cmc
clc
fsqrt
movsb
mov
mov
mov
in
fmul
stc
leave
adc
es
sbb
ss
sbb
add
sti
adc
or
cmp
lcall
fdivl
aad
pop
ficoml
nop
clc
adc
je
or
or
lcall
adc
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
cli
das
sar
pusha
and
cmp
pop
ljmp
mov
rorl
cmp
ljmp
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
ljmp
clc
push
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
incl
inc
pop
rol
xlat
fs
aam
addr16
add
xor
sbb
enter
out
cmpsb
hlt
call
hlt
clc
lock
out
je
mov
dec
adc
aaa
dec
cli
and
ljmp
sti
sahf
adc
das
cs
add
xor
sbb
xchg
fcmovnu
lret
inc
cmp
ljmp
repnz
mov
inc
and
sbb
pop
inc
push
mov
decl
test
test
imul
adc
mov
mov
fadds
stc
mov
or
test
sub
mov
push
sbb
or
jg
lahf
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
sbb
inc
or
or
or
incl
fwait
or
mov
xchg
hlt
repnz
sahf
ficomps
inc
iret
loopne
call
aam
push
add
push
out
and
cs
add
das
jecxz
ljmp
ret
lock
mov
mov
sbb
sbb
and
xor
cmp
add
add
add
incl
adc
or
xchg
cmc
push
ds
fidivs
aad
rcl
int3
in
repz
popf
icebp
decl
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
jmp
repz
divl
sahf
mov
pop
mov
xor
add
jle
mov
or
adc
decl
nop
or
push
out
xchg
jecxz
fbld
xlat
fldl
ror
rcrb
incl
add
pushf
sbb
push
jbe
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
sbb
mov
xchg
loopne
mov
adc
pop
lods
add
decl
call
adc
or
mov
jp
imul
cmp
out
loopne
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
adc
shrl
and
mov
xchg
or
clc
repnz
out
in
ljmp
arpl
bswap
adc
push
sbb
aas
push
adc
mov
add
cli
shl
jmp
mov
fcmovu
hlt
decl
in
enter
enter
out
mov
push
insl
sub
adc
dec
test
stos
decl
cmp
add
repnz
loopne
aad
into
and
add
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
sbb
xlat
icebp
and
inc
aam
jg
insb
jbe
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
enter
test
std
ljmp
mov
inc
and
add
jmp
shr
ret
sbb
jmp
cmp
jmp
cld
add
sbb
and
out
imul
push
pop
cld
shr
fcomip
aam
leave
rol
cltd
mov
sbb
xor
popf
push
cltd
cmp
push
jno
jmp
je
js
jo
push
pop
xor
adc
out
imul
int3
fcomip
pop
or
es
ljmp
cmp
lret
or
lcall
rorl
pop
mov
mov
cmpsl
and
sub
mov
dec
or
decl
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
xlat
test
add
jmp
lods
sbb
ss
ss
xor
mov
in
decl
or
pusha
ljmp
stc
mov
push
mov
mov
mov
add
cltd
rolb
out
cmp
inc
cmp
popa
inc
addr16
call
imul
out
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
sbb
pop
push
xor
xor
cmp
xor
sub
and
adc
add
push
call
pop
in
and
rcr
sbb
mov
cmc
inc
or
sub
jbe
mov
xor
ss
add
lcall
jecxz
out
pop
iret
fwait
jo
les
cmp
addr16
cmp
imul
dec
sub
sub
pop
pusha
jmp
adc
inc
out
arpl
fnsave
int
insl
repz
sti
sub
adc
add
add
sbb
sbb
call
mov
sub
xor
mov
pop
ss
or
iret
cmp
xor
pop
mov
call
jp
mov
mov
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
sbb
js
incl
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
repnz
ljmp
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
mov
pushl
mov
sti
fimull
fs
sbb
cltd
and
popf
cmp
sub
lcall
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
ret
push
sar
decl
test
xchg
ret
push
mov
bound
jnp
ds
ret
call
ret
les
lret
lahf
sarb
add
sub
sar
cmp
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
mov
scas
imul
add
xor
idivl
std
and
jmp
add
push
dec
pop
add
dec
imull
mov
mov
mov
das
sahf
jno
ljmp
mov
sub
fists
bound
mov
dec
push
out
inc
cmp
pop
ds
fisttps
nop
mov
jae
mov
lret
std
adc
pop
insb
adc
incl
cli
inc
xchg
and
cs
cs
aas
jmp
out
lock
inc
leave
ljmp
lods
push
ret
add
and
sbb
mov
std
aas
loopne
decl
push
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
cwtl
cmc
mov
loopne
call
adcl
xor
ficomps
inc
clc
lcall
sub
aas
cmp
xchg
es
or
enter
rorb
hlt
dec
psubusw
in
add
shrb
xor
cmp
adc
pop
faddl
or
out
clc
out
jo
fwait
pusha
jecxz
sub
mov
out
xor
mov
inc
add
not
repz
jl
sar
test
mov
xchg
fdivrl
xor
incl
push
aaa
std
and
mov
xchg
rcrb
std
jmp
jmp
js
xchg
or
adcl
pop
jl
imul
sbb
ljmp
push
add
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
jge
xchg
aam
in
hlt
mov
push
cmp
push
pushl
mov
hlt
and
das
int
lds
rolb
clc
mov
and
xor
sub
xor
and
das
adc
shr
incl
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
mov
sti
rcll
xor
pushf
imul
insb
fldl
sbb
mov
stc
xchg
insl
popf
xor
inc
adc
es
or
cmp
aaa
adc
pushl
push
ss
das
enter
xor
loop
aad
enter
sarl
lcall
lcall
jmp
push
repz
mov
pop
xorb
insl
jg
jl
jo
incl
out
push
dec
jmp
push
xchg
mov
xchg
mov
or
and
inc
fisttpll
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
ljmp
lret
mov
fs
mov
jmp
repz
or
inc
insb
mov
pop
lahf
gs
sbb
jl
shll
test
rcl
jmp
and
sbbl
pop
inc
dec
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
shr
loop
ds
leave
and
into
push
fildll
out
clc
icebp
shl
ret
ljmp
cli
lods
mul
adc
and
imul
adc
and
lahf
nop
jg
hlt
inc
nop
xor
sbb
int3
out
sub
hlt
xlat
lcall
sub
jmp
daa
push
daa
pop
es
pop
cmp
mov
jbe
push
or
sbb
scas
pop
sbb
jmp
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
filds
cmc
or
and
sub
es
sub
cld
daa
call
jecxz
je
xchg
int3
test
inc
lds
dec
mov
sub
or
sub
sub
and
sbb
call
sti
fwait
lock
cmp
fcmovnb
rclb
mov
jg
fisubrs
or
adc
sbb
jns
aas
lcall
adc
mov
lcall
sub
incl
inc
in
dec
fcompl
int3
inc
lds
loopne
jmp
or
ljmp
ljmp
daa
xchg
and
pop
stos
int3
repnz
add
fcomip
aad
cmp
sbb
roll
leave
daa
aam
call
rclb
lcall
lret
and
adc
and
ds
jae
lods
repnz
cli
xor
call
das
jle
cltd
fcomip
pop
xchg
add
call
fsubl
dec
add
test
ljmp
add
add
add
pop
test
or
roll
mov
rcrb
call
cli
pop
pop
daa
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
ljmp
xor
dec
je
xor
into
add
into
sub
int3
xor
sub
call
cwtl
out
stc
pop
push
pop
pop
or
pop
fwait
add
or
or
sbb
mov
push
mov
std
jno
out
ffree
loope
ljmp
sbb
mov
mov
test
stos
andl
clc
mov
shrb
dec
adc
scas
cli
push
pop
lods
inc
aas
push
or
rol
ret
aad
sbb
xlat
lock
lea
pop
jg
out
adc
aad
loope
pushl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
lcall
popa
cmp
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
lcall
cli
adc
ss
and
es
sub
lret
adc
add
add
fs
std
repz
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
and
xor
pop
push
push
aam
shr
shrl
jg
inc
dec
mov
int3
lret
mov
addr16
iret
add
and
shlb
push
sbb
or
add
mov
loop
jb
lcall
std
cmp
jmp
stos
loopne
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
add
incl
out
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
jmp
sbb
rcrl
push
lret
bound
sbb
sub
ljmp
adc
adc
push
fdivl
enter
lret
into
rolb
js
push
out
in
jmp
sub
xor
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
mov
lret
jbe
testl
adc
push
add
pushl
cmp
push
cwtl
cmp
inc
and
and
or
call
or
mov
mov
mov
push
repnz
jmp
xchg
iret
in
mov
out
xor
fwait
pop
and
cmp
push
inc
pop
cmovb
and
or
ljmp
add
pushl
call
in
test
jb
jb
sahf
sti
jecxz
lods
sbb
mov
dec
lcall
sub
in
int
mov
mov
out
les
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
pushl
lds
fwait
xor
inc
inc
dec
mov
or
not
in
rolb
fdivs
xor
addr16
inc
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
ljmp
lock
sub
cmc
mov
adc
sbb
popa
std
add
cmp
insl
or
or
or
cmp
shl
dec
or
adc
ds
jg
xor
sub
dec
add
jmp
fldt
mov
mov
int
out
mov
adc
clc
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
lcall
push
and
jecxz
fnstsw
mov
cmc
mov
inc
add
push
lods
or
or
out
ljmp
jmp
sub
and
or
shl
mov
mov
shrb
cmp
bound
xchg
cmp
popf
inc
jge
fwait
sbb
pop
cld
in
inc
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
fdiv
movsb
std
stos
add
inc
call
cmc
mov
push
jecxz
jmp
clc
jb
or
xor
cmp
ja
scas
cli
ljmp
sbb
mov
scas
scas
mov
call
xor
xor
decl
or
add
out
aam
lret
cli
xlat
cld
orb
adc
insl
pop
mov
push
lcall
pop
adc
lcall
cmp
jbe
in
and
filds
push
adc
and
ds
and
adc
lock
add
mov
filds
icebp
add
incl
cld
mov
push
das
pushl
adc
jmp
in
js
out
incl
imul
test
movsl
adc
sar
lahf
repz
out
or
jge
lcall
addl
sub
or
sti
cli
mov
mov
in
push
mov
add
sbb
sub
cmp
dec
into
dec
mov
sbb
jmp
mov
ss
nop
loope
repz
jmp
push
or
jbe
test
test
cmp
stc
cmc
repnz
in
test
popa
sti
xor
iret
push
xor
and
mov
lcall
imul
adc
mov
cli
mov
shl
xor
sbb
outsl
in
lcall
and
loopne
cwtl
into
movsl
lret
pop
idivl
movsl
sbb
or
mov
mov
ljmp
sub
sub
test
sub
push
fisubl
in
push
adc
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
jmp
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
xor
and
loopne
dec
or
pop
out
fdivp
fbld
fidivl
jecxz
call
pop
idivl
call
or
or
mov
out
dec
and
sbb
jmp
sbb
clc
mov
loope
in
in
in
xor
ret
push
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
mov
pop
dec
arpl
aaa
jns
mov
add
mov
pop
enter
pop
lock
out
rolb
or
mov
sbb
mov
mov
mov
mov
add
sti
push
cmc
adc
pushl
ljmp
insb
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
and
fistpll
outsb
push
jbe
add
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
add
ljmp
jg
jle
lret
push
mov
adc
adc
adc
adc
clc
sbb
es
and
sbb
and
mov
test
jmp
push
fsubs
out
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
add
call
pop
dec
sub
jae
arpl
or
sub
add
cmpsl
leave
mov
mov
add
pop
fsubp
sbb
add
or
xor
sahf
and
and
daa
mov
pushl
pop
and
or
cli
jecxz
xlat
nop
into
mov
and
iret
push
icebp
loopne
jmp
incl
in
fcomps
incb
sbb
daa
cmp
call
outsb
sub
ljmp
dec
subb
push
ret
in
scas
sarb
test
dec
repnz
pop
nop
pop
cld
lcall
xor
and
sbb
jnp
adc
test
std
adc
fimuls
fdivs
xlat
xchg
aam
shrb
or
jo
jecxz
popa
jmp
out
and
push
pop
out
sub
lods
repz
push
repz
jp
dec
sub
cmp
inc
push
inc
xchg
cmp
and
jg
or
jle
and
pushf
mov
mov
mov
rolb
jno
imul
jmp
and
in
xchg
jecxz
in
adc
adc
cs
jbe
xchg
pxor
clc
ljmp
jmp
jecxz
loopne
fnstsw
xor
iret
fldcw
adc
lock
shl
out
out
icebp
add
or
pop
loopne
and
lcall
jae
out
and
daa
cmpsb
es
sub
das
clc
call
sar
jmp
flds
enter
shl
addr16
fcomip
incl
adc
sbb
and
hlt
jbe
out
adc
or
cmp
add
test
ja
sbb
hlt
sbb
loope
and
mov
cmpsb
loopne
ficomps
in
sub
mov
push
fimuls
inc
or
call
mov
or
add
int
jns
and
mov
pop
aad
clc
int3
ljmp
dec
in
in
icebp
ljmp
and
cmp
pop
adc
inc
imul
testl
adc
adcb
decl
lock
push
add
hlt
jecxz
push
fisttpll
shl
clc
rolb
jecxz
negb
mov
pop
and
js
xchg
and
push
jns
mov
in
loope
sbb
cmpsb
push
and
push
es
xchg
add
out
mov
lcall
dec
into
call
data16
in
roll
nop
adc
and
pop
and
aaa
cld
dec
sbb
cli
sub
shl
repnz
mov
jmp
sbb
das
cli
incl
ljmp
into
and
lahf
loope
out
xchg
add
adc
es
je
fadd
aad
aad
loope
cmp
adc
pushl
hlt
out
sub
push
stc
push
aas
aas
shrb
push
hlt
jp
add
outsl
push
int
lret
fmul
sbb
push
mov
and
push
jecxz
int
imul
call
ret
hlt
cwtl
add
or
decl
daa
push
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
lcall
add
ja
mov
cmpsb
mov
add
fldln2
push
add
mov
call
dec
test
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
stos
add
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
pushl
or
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
pushl
int
ljmp
ljmp
and
bound
cmp
sub
pushl
fcoml
mov
test
gs
call
jb
into
push
fiaddl
jbe
pop
jmp
add
stos
add
or
scas
call
sarb
rcrb
push
adc
and
loop
dec
cmc
scas
clc
push
push
out
xchg
out
pop
in
jnp
dec
out
dec
repnz
out
xor
dec
in
fcomip
ftst
xchg
clc
add
movhps
mov
lret
inc
dec
inc
inc
xor
sub
shrl
pusha
aam
int
pusha
frndint
sub
add
jg
adc
or
or
push
call
std
push
pop
sbb
decl
nop
sub
rcrb
mov
in
fcmovnu
xor
fcomip
call
cli
call
add
in
loop
sarl
stc
arpl
ljmp
pop
cmp
mov
sbb
add
lock
shrb
or
pop
iret
js
lahf
ljmp
or
sub
testl
lods
fidivrs
sar
mov
adc
inc
ss
dec
pop
push
repnz
cmp
mov
push
flds
lret
pusha
mov
std
loop
testb
push
push
lds
or
out
fisttpll
aad
fchs
repnz
or
and
mov
imul
mov
cld
mov
lret
inc
sbb
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
sub
or
lcall
lcall
jge
or
ds
cmp
push
pop
orl
adc
stos
jmp
ret
fldenv
mov
push
adc
adc
add
incl
in
jp
or
inc
repz
or
and
cs
inc
sbb
pop
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
fcoml
fcoms
pushl
sub
push
dec
or
add
ljmp
sti
mov
out
push
dec
cld
out
clc
adc
ret
cli
daa
cmpsl
cld
push
add
lcall
mov
testl
in
icebp
aas
loop
loope
lock
push
testb
pop
sub
pop
mov
add
imulb
mov
filds
dec
or
sbb
mov
adc
dec
clc
sbb
push
lock
push
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
in
out
lock
std
adc
sbbl
sbb
add
cld
push
repnz
iret
addr16
pop
pop
hlt
inc
daa
fcompl
add
adc
xor
sub
or
das
add
pushl
in
in
out
repnz
add
cmpsb
call
fdivp
test
push
in
in
jmp
add
push
std
or
pop
cmc
or
inc
and
rclb
and
xor
call
stc
lcall
or
bound
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
or
loope
clc
pop
ja
cmp
daa
sbb
push
sbb
jg
decl
add
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
mov
out
out
out
stos
mov
std
dec
or
sbb
incl
mov
addr16
push
cli
or
or
add
mov
std
jl
mulb
jo
out
lods
out
mov
pop
adc
into
out
mov
jmp
cmc
std
mov
inc
add
fs
cs
xor
das
in
sub
and
xchg
or
call
pop
icebp
out
fists
fcomi
out
repnz
or
mov
decl
sbb
or
adc
inc
sbb
sbb
pop
fcos
lcall
insl
adc
lcall
jmp
insb
stc
add
enter
inc
incl
inc
cli
pop
repnz
shl
inc
ror
leave
in
iret
or
sbb
inc
ret
incl
mov
cwtl
mov
stc
sarb
fcos
jg
stos
loopne
sti
testb
push
adc
or
cld
mov
std
jo
ss
pop
xchg
sbb
adc
or
std
xor
out
mov
idiv
lcall
icebp
xchg
hlt
xor
push
mov
repz
dec
out
sar
scas
jmp
jecxz
jmp
mulb
and
cs
xchg
sub
and
jp
loopne
sbb
sti
icebp
inc
ljmp
jecxz
push
add
pop
mov
add
mov
dec
std
sbb
mov
repnz
cli
adc
lahf
sbb
icebp
mov
sbb
xchg
mov
mov
xchg
std
in
dec
testl
jg
sub
add
ljmp
popa
out
sar
add
add
pop
lock
add
xchg
push
int3
or
adc
add
cli
imul
call
fwait
push
adc
sbb
inc
push
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
jg
incl
dec
or
sbb
sbb
adc
or
add
jg
mov
cmpsb
add
mov
adc
pop
out
pop
push
mov
add
fs
outsb
in
loop
ficoms
incl
mov
pop
outsb
push
adc
sbb
or
add
fnstsw
add
in
fstpt
in
stc
sar
pop
cmpsb
call
cmp
imul
cli
js
lock
call
insl
stc
inc
aad
loope
add
add
push
cwtl
adc
sahf
idiv
ljmp
out
push
out
dec
sbb
cld
xchg
add
or
push
mov
das
sbb
pop
cmp
jg
xchg
clc
and
mov
lahf
out
in
in
mov
sub
cmp
add
push
or
or
test
sbb
lcall
outsl
cmp
test
ja
mov
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
clc
mov
push
imul
daa
lcall
mov
divb
pop
cli
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
std
pushl
repnz
not
std
mov
fwait
or
and
or
mov
call
iret
loop
loopne
out
jmp
adc
leave
clc
daa
push
push
or
or
cld
call
add
sbb
push
pop
or
xor
out
clc
adc
out
jmp
out
or
mov
pop
add
clc
mov
movsb
in
add
lcall
jp
or
pop
out
add
jmp
sub
cmpsl
add
jg
icebp
add
mov
pop
outsl
or
cmp
decl
sub
out
add
clc
gs
ljmp
ds
cltd
clc
ja
clc
push
call
inc
fwait
add
add
cmp
int3
jecxz
in
incl
add
xchg
adc
inc
pop
xchg
sbb
adc
add
std
decl
xchg
out
fyl2x
pop
repnz
clc
mov
push
add
les
mov
jle
imul
and
cltd
std
cmp
cld
jno
rorb
sub
icebp
call
ret
sbb
sbb
adc
inc
adc
incb
push
cld
stc
outsl
cmc
mov
sub
out
aad
mov
int
xchg
cli
scas
stc
js
mov
sti
push
inc
icebp
or
out
push
cmc
lcall
mov
and
inc
and
or
add
notb
jmp
mov
jecxz
in
jmp
repz
clc
xchg
jnp
inc
add
add
or
jle
and
mov
mov
push
shl
add
popa
add
sbb
pop
sub
and
js
push
clc
jmp
in
loopne
loop
jecxz
in
ljmp
inc
decl
sbb
test
filds
xchg
fdiv
cmp
sarb
cmc
cmc
mov
pop
dec
or
fcomip
decl
repz
adc
adc
sbb
mov
rolb
test
inc
notb
std
fdivp
jl
hlt
out
imul
mov
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
fbld
add
in
push
sbb
xor
mov
sbb
sar
icebp
adc
jle
jnp
loope
adc
ret
out
mov
mov
out
fucomi
fucomp
test
ret
std
inc
add
cli
adc
incl
addr16
adc
or
ljmp
in
repz
mov
out
clc
scas
data16
pop
push
push
sbb
into
add
push
add
lock
in
loop
fimuls
mov
sbb
clc
in
add
aaa
xchg
adc
xchg
adc
movhlps
push
fnstcw
mov
mov
or
sub
aas
pop
loopne
iret
sahf
add
outsl
push
sbb
cs
repnz
lock
outsl
repnz
call
cld
inc
testb
add
pop
inc
push
test
adc
push
jo
std
or
incl
lods
add
cli
push
icebp
and
jne
mov
hlt
jge
mov
or
adc
loope
decl
fdivr
int3
mulb
in
dec
out
cli
mov
jns
or
or
es
bound
adc
ja
decl
push
add
sti
jl
lods
repz
lock
jnp
std
repnz
aam
fistpll
ficoml
orl
add
stc
idivl
clc
sar
stc
jmp
inc
ret
or
dec
push
mov
jg
sti
popa
stc
das
test
jmp
sub
aad
pop
push
add
or
adc
lcall
fistpl
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
decl
lock
cli
push
xor
xchg
dec
cmp
shr
inc
cmc
out
cli
add
pop
or
jbe
pop
adc
lds
nop
push
push
or
mov
mov
pop
incl
cmp
mov
call
imulb
jle
repz
add
scas
clc
scas
sbb
add
cli
lock
mov
outsl
push
mov
clc
or
pop
xor
jmp
cmp
or
sub
hlt
pop
repz
hlt
ljmp
sti
ljmp
incl
cld
icebp
cli
inc
divl
jp
insl
idivb
or
or
sbb
mov
shlb
pop
sbb
adc
out
shl
psllw
out
test
sbb
jg
icebp
inc
hlt
mov
jp
test
mov
jbe
sahf
cmp
int3
add
add
mov
lock
aaa
in
jnp
stos
in
out
aaa
std
das
xchg
testl
cmovae
fimuls
xchg
add
in
adc
pushl
std
pusha
hlt
sub
out
in
in
call
movl
rolb
movb
and
clc
negl
clc
jae
insl
cld
lcall
jge
out
sbb
and
sbb
inc
pmulhuw
insl
icebp
lock
incl
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
test
jne
add
testb
push
mov
add
mov
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
prefetcht1
cmp
jmp
loope
sbb
leave
pop
jp
dec
imull
jle
out
aam
jg
jmp
cmc
insl
sti
sub
adc
faddl
inc
cld
mov
out
sub
out
cli
repz
idivb
ds
or
sbb
ds
pop
mov
xchg
std
shl
lcall
repz
in
cli
psubq
cli
xchg
xchg
mull
out
inc
repnz
ljmp
jg
or
sub
add
cmp
test
repz
cli
xor
adc
adc
xchg
or
cld
dec
divb
repnz
add
cld
jmp
cli
inc
add
decl
pop
or
rclb
jnp
rorl
leave
add
add
sti
lahf
testl
xchg
add
fcomip
cmp
adc
adc
push
mov
cli
dec
repnz
or
sti
in
lods
or
dec
shl
int3
adc
negb
mov
jb
push
inc
cmc
iret
stc
push
cld
pop
es
ffreep
test
cmpsl
sbb
sbb
sbb
pop
das
stc
shr
filds
fsubrl
jmp
xchg
out
iret
or
push
adc
into
adc
push
dec
push
mov
jle
push
clc
sub
je
mov
push
out
sub
jg
pop
push
testl
loopne
jecxz
jmp
hlt
push
std
or
adc
ret
lcall
or
loopne
out
mov
roll
roll
push
imul
mov
xor
das
bnd
pop
imull
cli
dec
stc
push
stc
incb
or
ja
push
or
push
push
ja
dec
push
int
mov
push
repz
jmp
dec
out
clc
fisubl
out
lock
or
mov
pop
adc
mov
pop
or
sbb
dec
add
lods
push
cld
mov
or
add
jp
nop
push
in
mov
jecxz
in
jmp
add
pop
add
or
pop
sbb
loop
lea
lock
std
or
scas
repz
mov
cli
outsb
cli
call
jle
sbb
add
cwtl
cld
movsb
cli
cmp
mov
ljmp
sbb
dec
and
movhps
mov
push
cli
ljmp
arpl
loopne
fiaddl
in
out
fs
daa
push
sti
adc
push
or
pop
daa
fisubs
and
aaa
sub
adc
sbb
cmpb
shl
cli
addl
pop
add
add
repnz
jmp
movsb
loope
int
jmp
inc
cmp
dec
push
and
mov
xchg
lock
lcall
sbb
jno
xchg
setle
add
es
cmp
pop
add
add
add
add
decl
add
add
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
sar
add
call
enter
rcrb
adc
imul
in
fnstsw
jno
lods
fdivr
decl
clc
cmp
push
setno
rcrb
jo
push
adc
or
cmp
std
and
mov
sar
std
insb
add
ljmp
jo
std
dec
cli
shl
mov
in
or
inc
out
lcall
push
lret
stc
pop
nop
add
adc
fcomip
call
push
mov
or
sbb
sahf
divb
in
push
pop
mov
in
out
jo
enter
mov
cli
jno
pop
lcall
decl
les
or
or
jo
mov
in
ljmp
mov
hlt
inc
sti
mov
or
adc
mov
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
incl
stos
or
or
or
or
add
and
jo
loop
movsl
aad
aad
fldt
adc
ret
add
in
daa
pop
sub
push
pop
push
decb
idiv
ljmp
aam
add
sti
inc
std
jbe
loop
stc
pop
negl
and
and
dec
ljmp
sub
mov
adc
lcall
and
xchg
and
and
and
add
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
jmp
mul
add
adc
dec
pop
mov
clc
jg
add
pop
add
add
push
pop
or
jmp
std
lcall
loopne
ficoms
in
jmp
hlt
dec
add
sbb
sbb
outsl
mov
sbb
inc
adc
or
movb
add
incl
fadds
push
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
call
scas
sbb
pop
and
mov
sub
pop
fcoms
pop
push
pop
add
mov
jecxz
loopne
scas
and
loopne
loop
out
hlt
dec
cli
sar
xor
cld
sub
cmp
addr16
push
nop
mov
fistl
sbb
inc
adc
rorl
add
or
fsubrp
dec
jmp
filds
jmp
ljmp
icebp
lock
cld
lds
push
cld
sti
mov
ret
sub
nop
push
mov
push
adc
push
test
std
scas
mov
sbb
sbb
adc
cli
decl
and
jmp
out
add
repnz
test
hlt
out
pusha
dec
or
or
mov
insl
adc
ret
adc
fimull
filds
dec
ljmpw
loope,pn
fdivr
incl
filds
add
pop
pop
xchg
push
js
xchg
int
xchg
js
mov
fcomip
adc
or
mov
stc
inc
div
not
clc
in
lods
std
xchg
xor
pop
sub
jg
sti
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
sbb
mov
loop
push
jg
ds
push
cmc
decl
imul
hlt
clc
call
cmc
inc
testl
add
addr16
add
mov
pop
ljmp
or
or
or
orl
or
notl
repnz
jmp
jmp
sub
sbb
mov
hlt
daa
sti
in
js
out
test
and
xchg
or
add
cmp
pop
les
enter
or
pavgb
fwait
jle
incl
pop
add
decb
into
out
out
jmp
lcall
test
sti
or
or
xchg
or
outsl
fdivr
or
pop
or
or
push
cmp
aas
mov
inc
or
ss
cli
hlt
jae
sbb
icebp
sbb
decl
idivb
push
std
or
sub
popf
push
jns
sub
decb
add
push
dec
notl
repz
repnz
test
push
out
in
in
imul
jg
jmp
add
scas
sbb
aam
andl
and
ljmp
pop
and
std
push
div
repnz
lods
out
imul
ret
incl
in
mov
cmpsl
in
pop
in
mov
out
sbb
adc
stos
or
sbb
and
pop
icebp
sbb
sbb
rorl
lcall
stc
scas
cmc
mov
insb
bnd
lock
decl
fs
jno
mov
cmc
aad
data16
hlt
or
adc
sbb
push
add
and
lcall
dec
add
lcall
pop
inc
mov
shll
push
aad
fst
out
repz
decl
adc
cmp
inc
and
jbe
test
mov
adc
xchg
mov
add
filds
dec
add
outsl
cli
push
sub
in
ss
stc
fisttps
loop
in
lret
in
dec
repz
mov
scas
or
ret
and
and
test
xor
inc
sbb
adc
bound
ds
outsl
hlt
dec
out
and
pop
out
sbb
lret
incl
ljmp
xlat
clc
repnz
add
jg
pop
lcall
push
sbb
sbb
repz
add
mov
adc
frstor
pushl
mov
out
in
jne
fdivrp
cmp
pop
or
or
push
inc
jg
push
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
or
add
mov
jmp
mov
fnstenv
push
fcoms
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sar
lcall
push
sbb
sbb
push
sbb
adc
add
cltd
push
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
neg
and
lea
xor
or
sar
rdpmc
adc
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
cld
in
dec
sbb
pop
or
xchg
xchg
std
arpl
push
test
out
sbb
xor
hlt
xor
ljmp
pop
jmp
roll
or
in
outsb
pushf
push
ret
pushl
or
or
nop
scas
xchg
add
add
sar
stos
jp
pushl
std
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
aam
dec
std
ds
add
add
ss
or
or
pop
push
push
push
and
movl
lret
ja
sbb
repz
out
add
jp
push
jmp
out
sbb
ljmp
sti
cld
decl
rclb
stos
adc
adc
adc
ljmp
and
cs
sahf
or
or
lock
sti
jbe
call
sub
cmp
sub
out
ja
pop
notb
je
ljmp
icebp
add
adc
pop
lock
sbb
sbb
sbb
pop
cmp
push
push
add
xchg
out
in
repnz
push
hlt
mov
cmp
std
jecxz
loop
loop
in
std
mov
dec
or
idiv
int3
add
dec
sbb
cmp
xchg
and
in
and
test
aaa
push
mov
mov
imulb
ljmp
sbb
add
push
jecxz
loope
loopne
loopne
call
out
cmc
test
cmc
call
sbb
and
and
les
cmp
push
ljmp
inc
sbb
stc
out
jp
cwtl
ljmp
or
cmp
pushf
jmp
pop
call
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
mov
jge
dec
pop
pop
pop
repnz
dec
int3
in
das
ljmp
clc
or
loopne
loope
outsb
out
jmp
mov
das
fdiv
std
sub
insl
mov
mov
adc
pop
adc
and
mov
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
ljmp
fisubl
ficoms
in
jmp
jg
das
push
jnp
sbb
mov
call
push
sti
push
mull
fsubs
jl
sbb
sbb
adc
std
and
add
mov
jecxz
loop
jecxz
loop
loope
in
call
in
into
icebp
xor
cmp
or
adc
ljmp
adc
sbb
push
pop
xchg
sbb
sbb
add
push
jl
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
jg
push
sub
sahf
adc
adc
adc
adc
adc
clc
lcall
pmaxub
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
add
jecxz
out
jmp
out
pslld
cli
incl
add
cmpb
adc
mov
and
and
pop
leave
sbb
adc
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
mov
jmp
daa
ljmp
push
std
xchg
mov
add
call
or
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
xor
lcall
out
cmc
jmp
jmp
fcomip
xor
ljmp
sar
filds
or
or
or
or
or
inc
or
or
or
or
or
pop
add
cld
dec
pop
icebp
inc
in
repz
pop
jmp
incl
out
push
repz
pop
mov
stc
mov
mov
xchg
add
pop
cmp
add
adc
sbb
and
pop
adc
jg
mov
cld
sub
out
xor
inc
lock
mull
jne
dec
negl
dec
clc
in
decl
cmp
cmc
ss
out
hlt
xor
lret
sti
and
jmp
pushf
or
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
or
call
add
clc
js
mov
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
testb
mov
cmp
sbb
or
ret
adc
ljmp
sar
bound
pop
xchg
add
std
jb
imul
cmc
in
icebp
shl
gs
icebp
inc
and
in
mov
dec
in
fucomip
mov
out
icebp
es
jo
add
xor
adc
sbb
and
es
ja
and
sbb
shll
loop
xchg
clc
adc
out
out
in
out
jmp
and
cmpsb
call
xchg
out
inc
repnz
and
testl
pusha
lcall
pop
ret
les
add
add
cmp
es
adc
hlt
mov
arpl
in
cmc
mov
mov
jnp
lds
cs
call
repnz
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
ljmp
pop
stc
push
dec
push
nop
adc
les
mov
cmp
xchg
testl
icebp
pop
icebp
call
icebp
in
in
out
shr
mov
out
ljmp
insb
ds
sub
push
or
int
call
and
sub
and
jnp
das
clc
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
in
fdiv
stos
add
xor
sub
lock
mov
or
into
sbb
and
call
enter
repnz
xchg
adc
test
out
push
sub
jecxz
call
fmull
push
mov
pushl
cld
test
jle
or
adc
sbb
push
pop
hlt
jmp
sbb
xchg
in
mov
mov
fdivrp
ficoms
loopne
popf
out
jmp
insb
repz
cmpsb
mul
clc
popf
stc
dec
mov
jbe
inc
or
adc
pushl
fistpl
and
xchg
daa
sub
sbb
sbb
aam
lock
in
incl
cld
fildll
aam
cld
fstps
js
stc
and
icebp
incl
and
inc
adc
adc
adc
test
mov
push
adc
adc
adc
das
push
mov
cld
sti
cmc
ljmp
xor
bnd
loope
fnsave
insb
out
out
jmp
jg
sar
mov
push
in
popf
repnz
sbb
in
cmp
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
ljmp
ljmp
sub
mov
adc
push
add
push
popf
or
or
or
jmp
or
add
ss
inc
clc
sar
dec
div
stc
daa
add
add
add
mov
add
push
sti
fcomip
push
popa
lock
mov
clc
add
push
lock
or
mov
adc
adc
sbb
fucomip
testb
add
cli
in
hlt
sbb
fucomip
xor
jmp
out
push
push
cld
jmp
aas
pop
inc
or
adc
or
or
add
adc
inc
cld
aam
mov
add
and
or
push
add
jmp
jecxz
add
inc
repnz
cmc
inc
stc
push
sub
mov
clc
repnz
adc
cmp
adc
punpckhwd
cmp
decl
mov
sti
sar
xchg
negl
testl
cmc
enter
lahf
repnz
mov
cli
mov
xchg
sub
mov
idiv
jmp
sub
lock
or
in
sbb
and
and
and
and
and
decl
adc
sbb
hlt
int3
in
mov
pop
inc
out
jmp
dec
or
ret
mov
cld
pop
cld
adc
sahf
cli
mov
cs
mov
push
iret
or
adc
pusha
sbb
sbb
and
and
adc
add
lret
incl
adc
sbb
cmc
loop
jecxz
out
ljmp
cmp
mov
out
clc
decl
sub
or
pop
or
or
cmp
or
adc
mov
adc
or
stos
add
stc
adc
jmp
ljmp
loopne
loop
in
jmp
sbb
push
int
or
popa
std
inc
std
in
sti
cli
clc
push
neg
add
pop
test
ljmp
xchg
cli
or
push
or
push
push
adc
adc
and
mov
pop
jl
cmp
aad
adc
xchg
cmc
push
out
mov
push
push
jle
ds
das
sti
jb
loop
add
add
push
pop
aad
pop
mov
aas
icebp
call
mov
add
add
pop
inc
or
or
mov
fs
or
or
mov
pusha
push
jg
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
or
or
push
dec
adc
adc
incl
or
add
xchg
shll
sti
mov
add
add
mov
bound
add
inc
push
std
cmp
xchg
repnz
in
inc
in
fldz
sbb
adc
test
add
or
and
decl
adc
add
testb
ljmp
jne
test
into
notl
call
sub
adc
push
push
or
add
idiv
repnz
icebp
clc
mov
movsb
lcall
fsts
es
or
pop
jecxz
jg
sbb
ret
cli
jmp
jmp
gs
lock
push
cld
icebp
call
inc
js
pop
adcb
xor
push
jl
xchg
xor
stc
push
stc
outsb
in
mov
incl
pop
push
jae
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
scas
sar
out
pop
out
cmpsl
lock
repnz
cld
dec
add
add
filds
or
test
or
or
or
or
ljmp
clc
or
cli
sti
cmp
repz
inc
in
cli
call
filds
jo
xor
jb
ret
ljmp
std
jne
or
scas
jg
jg
sahf
sbb
sub
scas
and
push
scas
cli
or
pop
push
add
lock
cmp
in
or
decl
lock
scas
repnz
negl
cli
jmp
add
repnz
cmpsl
or
lds
lcall
sbb
call
add
pop
or
add
inc
imulb
jmp
in
inc
out
mov
imull
cld
add
pop
add
add
add
add
add
add
mov
sar
testl
mov
lods
fiaddl
repnz
adcl
sbb
adc
std
pushl
push
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
loopne
mov
pusha
sub
add
add
mov
cmp
push
lcall
repnz
lahf
negl
inc
push
xlat
push
cld
add
push
mov
ljmp
ret
mov
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
cli
push
cli
jno
pop
pusha
cld
mov
std
mov
out
and
std
dec
cld
sar
inc
std
leave
cld
adc
mov
add
std
add
pop
adc
pop
or
or
fimuls
mov
lahf
add
push
mov
test
inc
std
sar
mulb
pop
stc
sbb
cmp
dec
push
std
aas
stc
mov
and
inc
notl
clc
xor
sar
fs
sub
add
stos
cmpsl
pop
dec
push
or
incl
or
or
pop
xlat
add
ja
sub
xchg
call
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
imul
out
fdiv
ret
clc
mov
push
pop
jl
dec
add
icebp
or
rolb
push
add
add
inc
decb
push
data16
cmp
and
push
push
pop
add
xor
sbb
mov
mov
testb
jbe
dec
or
insb
add
sar
sub
sbb
pop
push
push
mov
jmp
add
mov
hlt
dec
sbb
add
add
std
push
cli
pop
cli
jg
lcall
cmc
mov
pop
cmc
imul
clc
add
dec
add
or
xchg
adc
mov
data16
incb
sti
xor
das
clc
mov
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
inc
ret
pop
cmp
orb
or
insb
or
jg
loopne
cs
add
add
xor
jbe
push
std
jecxz
fst
std
cmp
mov
add
scas
outsl
mov
sahf
add
add
add
dec
cli
jns
xor
dec
loope
pop
clc
ljmp
loope
dec
add
outsb
or
or
add
jb
stc
adc
ljmp
das
lock
out
cmc
out
or
out
aad
jmp
out
js
adc
sub
jmp
or
orb
or
or
or
or
or
mov
decl
dec
or
test
add
into
sti
dec
clc
mov
xor
xchg
jg
daa
lock
and
cmp
add
sbb
cmp
add
mov
pop
or
pop
ret
repnz
adc
fiaddl
cmp
pop
data16
incl
clc
xchg
inc
add
add
add
mov
pusha
std
pop
icebp
mov
das
std
dec
cld
stos
sti
pusha
sti
sar
xchg
or
lcall
mov
add
add
mov
add
sub
sub
addb
outsb
loope
fnsetpm(287
cld
dec
dec
cli
gs
adc
pop
ja
add
add
jmp
add
add
add
add
add
add
roll
add
mov
decl
cmpsb
mov
lcall
pop
clc
mov
pushl
test
hlt
or
jle
mov
je
mov
js
mov
bound
jp
mov
mov
jp
push
stos
or
out
loop
mov
add
fildll
dec
std
pop
sti
clc
inc
notl
cmc
xchg
addr16
inc
jg
fdivp
test
cmpsb
inc
test
cmc
stc
int
stc
outsl
cli
idiv
data16
sti
lods
cld
hlt
std
js
dec
add
push
sub
rorl
xlat
incl
jp
or
or
add
inc
cld
psubw
and
push
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
hlt
incb
mov
outsl
or
rolb
or
std
xchg
std
cwtl
std
ljmp
push
or
cmpsl
add
add
das
or
or
or
daa
pop
cmpsb
std
add
push
std
xor
push
jmp
cli
stc
insl
stc
add
mov
jmp
pushl
stos
add
add
cld
test
subl
stos
or
repnz
repz
xchg
test
es
push
add
add
add
out
xchg
leave
or
push
or
rorl
or
add
call
call
mov
mov
sbb
push
aad
ds
mov
decl
cmc
sti
repz
repnz
bnd
js
lock
sub
notb
add
push
add
clc
fnstenv
addr16
mov
pusha
or
pop
and
dec
push
dec
add
add
mulb
lock
clc
xor
not
divb
fidivrl
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
movb
movb
or
inc
inc
or
or
aad
mov
or
or
or
add
push
add
dec
std
sbb
cmp
mov
cli
or
cmpxchg
cmpsb
sti
mov
cld
inc
std
test
sar
fscale
inc
mov
ljmp
std
arpl
dec
std
inc
std
or
push
std
dec
bound
pushl
std
sbb
decb
cmp
sar
cmp
add
inc
add
add
add
jo
and
mov
add
mov
xchg
cld
cli
push
cli
sbb
jmp
clc
mov
shl
xor
divl
testb
pop
clc
mov
xchg
xchg
sti
xchg
scas
ljmp
xor
outsl
cli
fbstp
rorb
iret
or
or
or
or
push
mov
add
add
dec
out
ljmp
mov
push
mov
sti
aaa
sti
movsl
cli
adcb
cli
xchg
cli
out
mov
std
mov
pop
xor
inc
add
or
cwtl
or
aas
fs
sbb
or
or
add
jo
aad
add
cltd
add
sti
xor
gs
xorb
sub
pushf
std
add
xor
sub
xchg
orl
add
call
lcall
inc
add
add
call
jmp
sti
aad
xbegin
mull
clc
jmp
das
subl
std
lods
lcall
pushf
add
mov
and
mov
add
xchg
jmp
std
ret
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
push
aad
fstpt
incb
add
add
sti
add
mov
call
mov
xor
fiaddl
movsb
add
cs
cmc
sbb
lahf
add
dec
add
add
sbb
addl
sbb
fwait
push
sbb
and
outsl
cld
push
std
pop
pushl
lret
in
filds
rolb
add
add
dec
add
xchg
add
add
mov
xor
xchg
xchg
lock
adc
in
jle
xchg
std
popf
sub
add
add
add
mov
mov
pusha
fisttps
cmp
call
mov
add
outsb
clc
incl
test
add
add
add
add
inc
add
cld
mov
imul
sti
pop
sti
mov
sti
imul
fs
jle
std
fidivrs
fdivp
incl
std
jp
in
xchg
daa
sti
cli
push
or
dec
cli
es
cmp
gs
data16
add
sahf
mov
jmp
add
add
insl
cld
pop
jno
decb
push
add
mov
mov
add
setno
push
rolb
sti
sub
cmp
std
jge
mov
and
push
incb
rolb
int3
mov
popf
inc
pusha
push
sub
gs
add
ret
adc
pop
icebp
dec
push
int
pop
push
sub
in
sub
aas
mov
lret
sti
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
mov
add
pop
add
add
scas
incl
add
inc
add
das
add
add
push
adc
add
clc
or
pop
add
pop
sub
sub
and
add
dec
mov
add
stos
mov
fcmovbe
mov
sub
jns
cltd
sti
int
xlat
stc
idiv
push
clc
cwtl
testl
mulb
test
pop
lock
fincstp
mov
sti
sbb
stc
xchg
add
imul
push
jg
xor
or
mov
push
cmpsl
add
add
cmpsb
add
std
movsl
cld
idiv
push
sti
push
sti
cmp
jmp
ds
push
lret
pusha
std
or
incl
lcall
aaa
add
mov
clc
add
sub
add
loop
inc
add
pop
or
add
out
jnp
jmp
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
std
repnz
cmpsb
mov
cmp
add
add
std
mov
add
insl
add
scas
add
jno
add
add
jp
mov
mov
add
add
sbb
push
mov
ficompl
mov
cli
scas
mov
std
aam
jb
in
adc
pop
add
or
mov
cltd
cld
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
jg
decl
stc
test
mov
inc
cli
jo
mov
cld
std
pushl
cld
loope
inc
jmp
xchg
add
push
outsl
pop
mov
jge
stos
or
jg
mov
mov
sub
out
mov
adc
mov
and
ficomps
js
jb
lcall
sti
or
std
xor
sbb
push
xchg
add
inc
xchg
push
aad
jmp
and
dec
push
inc
push
out
add
jbe
mov
incl
ret
cld
add
push
sti
iret
cli
pop
cli
daa
push
insb
outsl
clc
dec
jae
pop
inc
sti
out
sub
std
enter
cmpsb
call
fadds
roll
add
add
push
push
add
faddl
es
add
or
push
outsl
add
pop
jnp
cmp
emms
pop
push
xor
pop
push
sub
mov
dec
scas
add
inc
testb
stc
decl
xor
dec
lods
std
xor
sar
cld
in
sti
jl
sbb
cmc
incl
mov
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
ja
xchg
dec
push
inc
mov
xchg
add
add
jg
shll
flds
fiadds
add
sar
xor
push
add
decl
ss
jns
idiv
jno
or
cmc
sti
pop
mov
cld
mov
movsl
std
or
outsb
fsin
and
cmp
lcall
add
add
sub
js
mov
add
add
xchg
add
add
add
subb
inc
add
lock
pop
stos
decl
stos
pusha
mov
jmp
paddd
arpl
mov
pop
jmp
pushf
add
add
add
pop
add
adc
add
faddl
add
add
cmp
inc
add
add
add
ret
pop
das
add
add
pop
data16
fdivr
pop
shll
ret
std
push
lret
push
mov
fiadds
add
add
lcall
cld
mov
pop
incb
mov
std
or
xchg
testb
add
push
cmp
cmp
lods
push
jnp
aaa
add
push
stos
sub
ljmp
not
pop
scas
pop
sahf
mull
ficomps
std
xor
add
sahf
add
jl
sbb
add
sub
jmp
add
sahf
leave
add
push
aaa
jb
push
sbb
mov
outsb
add
add
enter
jg
sti
add
ljmp
out
cmpsb
push
jl
stos
std
pop
fdivp
cmp
incl
mov
sbb
nop
mov
add
add
add
movsb
add
jbe
fisttps
xlat
pop
cs
lcall
outsb
and
fildl
and
add
add
jmp
daa
or
repnz
mov
sahf
push
call
jmp
call
cmp
test
sub
add
jmp
pop
add
add
add
add
add
push
adc
pop
cmpsb
mov
std
fdivr
stos
cld
xchg
cld
mov
cld
add
xor
mov
mov
ljmp
lock
out
sti
es
sub
mov
std
insb
std
sbb
sar
mov
idiv
xchg
decb
orb
loope
lcall
mov
xor
sbb
push
add
xor
cli
sbb
test
imul
inc
es
xchg
and
add
insl
add
addl
add
cld
sub
or
cmp
mull
daa
pushl
inc
mov
mov
add
add
loopne
lock
push
mov
mov
cmpsb
mov
cmp
testb
mov
sahf
ss
imul
xchg
mov
ljmp
scas
cmp
mov
adcb
add
mov
sbb
xchg
add
pop
pop
mov
in
mov
jg
pop
test
out
ret
ss
bound
out
mov
pop
loope
std
lahf
cs
int
sahf
cld
push
cld
inc
cld
arpl
lcall
sahf
mov
sub
stos
ret
lahf
nop
movsb
inc
rolb
mov
int
aad
lcall
mov
into
mov
ss
sbb
out
push
shr
or
cmp
loop
pop
jb
add
test
lret
add
cmp
add
and
add
add
sub
adc
orb
fimuls
in
std
mov
ja
and
incl
dec
or
add
sbb
add
cmpsb
sbb
faddl
test
push
and
loop
mov
jle
ljmp
ljmp
pushl
push
sub
inc
and
xor
sbb
sub
add
add
test
fbld
add
adc
push
mov
loopne
mov
add
add
adc
dec
or
or
mov
push
int3
cld
frndint
mov
sar
cmp
cld
idiv
sbb
pop
std
mov
decb
mov
add
pop
or
fiadds
push
fimull
mov
push
mov
decb
lret
std
shlb
or
mov
xchg
mov
sti
sti
std
sti
xchg
cld
sbb
loope
sahf
lcall
mov
stos
incl
hlt
add
shlb
add
loope
in
add
add
ret
lret
xchg
or
js
scas
xor
push
adcl
push
sar
in
call
cs
pop
mov
sar
pop
pop
es
mov
add
call
add
add
add
jecxz
xchg
cs
pop
add
jmp
shll
pop
mov
lock
push
add
xchg
icebp
jo
loopne
add
mov
xor
dec
add
loop
add
outsl
mov
push
decl
popa
cs
lods
decb
loop
add
bound
ret
jmp
leave
shrb
inc
shl
cmp
lcall
bound
or
jecxz
out
inc
mov
pop
or
hlt
addr16
sbb
leave
std
jle
mov
std
push
hlt
cld
enter
loop
xor
es
shlb
push
fisubl
jg
filds
outsl
pop
xor
push
lods
loopne
bound
and
into
xchg
add
clc
stos
mov
inc
call
add
jne
pop
aas
lods
pop
add
ret
decl
mov
repz
movsl
pop
push
add
mov
push
add
mov
jo
mov
ret
xchg
jne
and
or
and
inc
pop
std
cmp
ret
mov
jle
add
add
test
pop
push
outsb
nop
push
xlat
add
add
shlb
adc
fcoms
pop
ljmp
push
push
rcll
inc
xchg
fsin
cmpsl
decb
shrb
push
push
pop
rol
sub
inc
out
scas
xchg
mov
jecxz
cmp
bound
decl
imul
add
lods
ljmp
std
std
add
or
std
add
cld
adc
loopne
push
xor
jg
mov
mov
jp
push
pop
add
cmp
loopne
sbb
out
add
add
lcall
data16
fcmovbe
inc
fisubrl
mov
shl
sahf
aam
xor
repnz
mov
loope
sahf
xchg
stos
pop
or
pop
roll
jle
aam
out
inc
xor
add
out
push
mov
add
xlat
or
or
dec
add
ss
add
sub
shlb
sub
xor
mov
add
add
dec
ficoml
cmpsb
sbb
mov
mov
stos
xchg
mov
idivb
scas
rorb
ljmp
call
fwait
stos
push
test
lods
rclb
fdivr
add
xor
mov
out
sbb
outsb
lahf
add
push
fwait
mov
mov
shrb
lret
jb
outsl
lcall
iret
jp
push
scas
or
subb
pushl
cmc
sbb
test
mov
out
cmp
data16
mov
jle
add
mov
lret
pop
loop
js
add
xchg
inc
sub
dec
xchg
cmp
mov
add
aaa
xor
inc
mov
add
sbb
cmp
scas
ret
push
mov
xor
jae
rolb
cld
push
loopne
mov
ret
mov
cmp
sbb
pushf
adc
cmp
jo
pop
ss
push
loopne
mov
shrb
push
pusha
pop
cli
sbb
push
jne
jl
pushl
decl
or
lcall
popw
decl
push
fiadds
scas
cltd
decb
inc
jl
adc
std
ss
std
cmpsl
std
cmpsb
std
sub
xor
sbb
push
aas
test
jl
pop
test
lds
jp
ret
cmp
add
adc
jmp
adc
push
mov
xor
je
jo
and
cli
loop
pushl
in
ljmp
adc
mov
push
add
lgdtl
push
pop
inc
xor
es
call
mov
aam
cli
cmp
sahf
rcl
cli
mov
je
out
cmpsb
mov
mov
scas
sub
jecxz
dec
fimuls
out
cmp
push
mov
dec
fnstenv
lock
ret
lret
cmc
mov
sub
mov
cmp
mov
xchg
fucomip
call
or
sbb
jg
aaa
and
rcrb
inc
inc
bound
sbb
test
loope
sbb
clc
or
adc
mov
or
iret
inc
inc
test
dec
cli
mov
roll
loopne
mov
pop
outsb
xchg
mov
or
inc
repnz
push
push
fidivrs
imul
data16
xor
je
lock
aam
mov
scas
sub
mov
out
inc
pop
ss
cmpsb
outsb
ja
sbb
xor
push
test
cmpsl
and
iret
add
cmp
cmp
pop
scas
pusha
dec
jns
mov
xor
dec
mov
sahf
jns
jnp
js
insb
lret
cltd
lcall
lock
push
clc
add
js
dec
stos
mov
cmp
xor
notb
sbb
mov
pop
outsb
adc
scas
push
cmc
jp
std
sbb
bound
xchg
dec
cs
xor
mul
lret
test
push
inc
mov
aad
xchg
inc
sbb
pop
jle
mov
mov
rorl
mov
test
outsb
mov
outsb
push
pop
mov
int3
push
test
mov
dec
xlat
jo
dec
add
dec
push
xchg
imul
test
into
div
mov
mov
push
inc
movsb
xchg
xchg
push
push
cmp
jb
jge
lahf
es
cli
push
lods
outsl
lret
dec
lea
out
adc
aad
push
scas
ret
testl
repz
fcomi
inc
xchg
pop
fiaddl
out
fstps
inc
mov
push
adc
cli
and
inc
pop
cmp
mov
or
mov
xchg
repnz
cld
jmp
adc
push
push
cmp
ret
jmp
push
lret
fadd
adc
push
or
and
jge
iret
andl
and
pop
dec
add
sbb
sarb
cmp
push
push
jns
pop
pop
pop
xor
push
daa
faddp
dec
repnz
mov
xchg
push
ds
sahf
mov
out
xchg
mov
push
add
push
dec
shr
test
fimull
inc
jp
add
pusha
sahf
cli
add
mov
idivb
push
push
add
jp
mov
xchg
pop
out
jnp
pop
cld
sbb
popa
pop
xor
sbb
jne
outsb
lock
push
aam
in
sbbl
popl
mov
bnd
lret
mov
jmp
sbb
mov
fsubrl
sub
mov
dec
lea
inc
mov
out
mov
rorb
jg
loopne
movb
xor
inc
mov
jb
lret
jnp
xchg
movsl
fidivrl
loop
mov
dec
sub
pop
pop
pop
out
mov
and
jbe
ret
pop
dec
fsubrp
mov
push
sbb
loop
pop
push
ret
aad
test
xchg
mov
pop
dec
add
xchg
int
mov
or
sub
add
call
fadd
inc
in
lcall
aaa
xchg
cmp
and
imul
pop
dec
push
or
cmp
rcr
push
xchg
out
mov
xlat
test
jg
je
js
xor
dec
gs
pop
loope
or
push
lret
sbb
or
or
adc
lock
pop
test
js
stos
out
mov
adc
cs
sbb
xlat
scas
mov
lea
sbb
jbe
inc
and
push
and
mov
push
or
pop
in
mov
mov
into
push
cmpb
jno
outsl
pop
cmpsl
fstl
mov
push
imul
fisubrs
pop
add
jl
addb
shll
rolb
cmp
out
xlat
xor
cmp
xor
cmpb
adc
lds
div
cli
sbb
add
add
push
mov
cli
jp
cmp
sub
inc
or
loope
jns
mov
cwtl
out
jmp
repnz
loop
push
add
ficoms
into
mov
into
add
inc
jne
dec
test
jge
faddp
mov
push
sbb
push
scas
push
sub
jbe
imul
dec
out
lcall
ds
rol
cmp
push
mov
das
push
pop
pop
sbb
jp
ss
mov
sti
pop
movl
xchg
xor
sub
imull
cmp
xor
or
jnp
jnp
mov
sub
ss
inc
scas
inc
cs
mov
sbb
or
mov
rcll
out
scas
adc
sbb
add
repnz
dec
loopne
negl
dec
divl
inc
sub
sbb
fisubrl
fstpl
leave
daa
pop
pop
loopne
xchg
jbe
sub
cmp
test
add
testl
rcr
ss
and
pop
pop
pop
push
jle
dec
jmp
or
cmp
dec
xor
scas
ret
enter
jp
ljmp
scas
scas
mov
not
inc
xchg
fsubrs
jb
inc
push
or
mov
push
cs
add
lcall
fisubs
jp
add
lds
dec
aam
iret
inc
push
faddl
out
and
dec
and
loop
ljmp
add
push
out
ret
das
xlat
push
out
loop
jb,pn
lret
mov
mov
inc
add
sbb
mov
add
add
faddl
and
cmp
inc
sbb
movb
or
jp
mov
std
push
mov
push
fcmovb
jnp
in
aad
push
out
mov
mov
cld
and
mov
jmp
push
push
aad
xorl
hlt
inc
sti
repnz
push
mov
ss
out
loope
xor
lret
adc
adc
mov
inc
and
ss
in
out
cmp
add
mov
push
sbb
jnp
fiaddl
dec
out
imul
mov
lret
js
call
push
inc
sbb
pop
jnp
inc
aaa
inc
xchg
stc
push
or
out
mov
cli
data16
in
sub
clc
dec
sahf
push
pxor
add
adc
or
loopne
cmpsl
jecxz
mov
pop
mov
or
loope
addr16
lcall
lcall
sub
out
loopne
push
pop
hlt
jmp
cld
out
ds
movl
mov
js
add
add
or
out
sub
fisubs
sbb
add
inc
sbb
sbb
sbb
add
daa
add
cmp
ss
push
out
pop
imul
sahf
or
sbb
sub
out
popa
mov
push
clc
add
fidivrl
cld
out
not
cmc
jo
xchg
emms
inc
popl
mov
or
pop
jp
push
push
pop
sysret
ret
shrl
add
add
adc
fdivp
push
mov
add
scas
pop
loopne
lret
scas
dec
push
dec
adc
cmpsb
push
or
cmc
xlat
or
ds
pop
mov
pusha
lock
push
cmp
arpl
adc
add
add
into
loop
les
std
cmp
or
ja
cmp
fcomi
push
fimuls
mov
call
inc
xlat
insl
mov
add
sti
aas
mov
testl
in
sub
or
incl
sbb
loope
cld
pusha
loopne
sub
xchg
sub
xor
outsb
push
adc
jo
sub
in
inc
addb
and
jl
fstpt
mov
jnp
jns
jle
addb
fstpt
add
es
xorl
push
aaa
sbbl
jns
jp
stos
addl
pop
mov
cmp
sbbb
jle
jg
jp
js
dec
test
jnp
inc
cmpl
cmp
addl
jl
mov
mov
jle
jp
test
rolb
cmp
stos
ljmp
fisubs
test
add
jl
xor
ljmp
xchg
insl
sbb
xchg
mov
outsb
push
lcall
test
lea
cltd
mov
dec
aas
incl
cmp
stos
cmpsb
popf
mov
pop
pop
data16
mov
mov
pop
inc
cmp
cmp
push
andb
push
dec
inc
dec
pop
ja
movsl
mov
mov
mov
jbe
cmp
idiv
cmp
xor
xchg
lods
mov
pusha
dec
dec
dec
pop
jno
cmpsb
ds
mov
imul
fistl
ds
outsb
lea
jge
inc
push
bound
ds
mov
stos
sahf
xchg
xchg
xchg
lea
inc
ds
outsl
xchg
stos
mov
stos
cwtl
jns
push
push
push
ljmp
xchg
test
pushf
xchg
nop
mov
dec
dec
push
inc
dec
test
test
pop
popa
mov
popf
stos
cwtl
stos
notb
cmp
outsl
xchg
test
ljmp
jmp
push
pop
bound
cmpsb
mov
lods
mov
pop
dec
inc
dec
inc
dec
popa
sbbl
mov
pop
arpl
xchg
mov
xchg
xchg
xchg
jg
inc
aas
std
jne
decl
bound
xchg
subl
mov
mov
mov
xchg
jns
inc
dec
inc
dec
data16
push
pop
popa
jb
xchg
fstpt
mov
cltd
xchg
inc
cmp
jne
cmpsl
lods
movsb
sahf
mov
add
mov
divb
pushf
scas
mov
test
cmp
mov
pushf
stos
lods
mov
push
pop
addr16
movsb
mov
lods
mov
add
ljmp
cmp
dec
inc
push
jne
movsl
lods
cmpsl
popf
ja
jo
mov
stos
mov
lcall
mov
cld
fistps
imul
mov
cwtl
xchg
xchg
cmp
pop
jle
or
nop
cld
pushl
xchg
pop
pop
jae
lcall
dec
cmp
inc
push
je
mov
push
inc
xchg
jle
pop
cmpsb
insl
adcl
lcall
dec
push
pushf
test
test
lcall
subb
sahf
scas
mov
cmpsb
mov
inc
cmp
idiv
mov
movsl
lods
cmpsb
sahf
mov
pop
pop
gs
xchg
test
cltd
mov
cmp
loope
aaa
cld
dec
dec
pop
jp
mov
imul
aaa
fdivrs
nop
outsb
dec
ds
cmp
xchg
mov
clc
mov
in
jle
mov
mov
cmp
mov
outsb
mov
subl
jl
fwait
stos
or
clc
call
dec
dec
push
adcb
gs
lock
call
sahf
popf
xchg
mov
dec
dec
push
dec
pop
jne
popf
mov
ljmp
in
mov
stos
cmpsl
jbe
mov
push
dec
push
push
pop
insl
sub
add
xchg
pushf
sahf
fwait
xchg
test
arpl
jp
cltd
mov
jbe
jecxz
lcall
push
pop
push
pop
jne
xchg
lcall
imul
movsb
pushl
pop
ficoms
pop
push
pop
pop
pop
push
lea
imul
ja
cs
jp
xchg
lahf
movsl
mov
push
in
lcall
xchg
xchg
mov
jb
xchg
sahf
mov
decl
pop
pop
bound
jb
mov
insl
outsb
jo
xorb
mov
jnp
jbe
fs
pop
pop
lock
mov
js
dec
lcall
ljmp
imul
mov
jl
lea
aad
lea
jg
push
lods
add
cmp
scas
int
jge
lea
cmpb
std
stos
popa
outsl
insl
adc
mov
mov
mov
test
xorl
pop
lcall
push
orl
lea
jne
jb
imul
sbb
adc
xchg
jno
imul
push
mov
xchg
flds
das
decb
jo
add
add
jbe
test
lock
add
xchg
js
dec
mov
mov
mov
add
mov
movb
xchg
jle
imul
jne
mov
add
adc
jnp
or
fisttps
and
arpl
jbe
nop
cwtl
popf
fwait
xchg
lea
add
xor
adc
loope
jne
fidivl
jle
nop
xchg
xchg
mov
sbb
xor
jl
cli
mov
push
testb
je
mov
xchg
nop
mov
lods
sti
js
jnp
test
sbbb
js
jb
jle
outsb
pop
adc
mov
cmpl
int
inc
test
cmp
jae
fwait
outsb
jno
and
mov
lock
mov
jne
jp
xchg
stos
jb
jp
loope,pt
xlat
mov
mov
test
subl
fcmovb
shlb
jge
cmp
pusha
and
pop
cmp
cmpl
addb
pop
pop
out
mov
push
fnstsw
cmp
jnp
int3
mov
cmpb
cmpb
fnsave
insl
jge
jle
sbb
cmp
mov
add
pop
inc
repz
cmp
xchg
arpl
pop
sbb
cmp
and
pop
ret
mov
lods
repz
fnstenv
fstpl
js
sub
sbb
int
adcl
test
pop
or
adcl
mov
jb
mov
jnp
sbb
sbb
popf
push
loopne
jmp
xor
fstpt
lock
fwait
cltd
pop
xor
test
sub
mov
ret
fcmovu
or
insb
xor
addr16
xor
add
mov
push
aas
int
or
fidivl
cmp
mov
fsubs
aaa
mov
ja
add
aas
adc
jno
jae
sub
adc
push
outsl
mov
lds
pop
and
insl
cmpb
push
or
outsl
rolb
and
mov
mov
sbb
scas
sbbb
push
test
add
outsb
sub
adcl
sbbl
lahf
add
repz
xchg
mov
addl
addb
fistl
fcmovnbe
jno
outsl
adc
sub
jnp
push
cmp
addb
push
inc
or
inc
mov
pop
mov
imul
mov
push
push
adc
or
adc
mov
lret
xor
imul
mov
pop
fcmovnu
mov
cmp
xchg
pop
pop
fdivs
push
xchg
fwait
xor
mov
pusha
clc
mov
or
divb
adc
jge
pop
andb
iret
push
or
or
in
or
jno
adc
fwait
inc
jmp
xor
mov
adc
adc
sub
mov
sub
mov
inc
cmpsl
push
fidivs
mov
or
pop
mov
inc
pop
lahf
jge
adc
cmpsb
add
ljmp
adc
test
adc
js
je
je
jp
addl
test
not
xor
out
jg
insb
imul
jl
out
sub
mov
test
push
mov
fs
xchg
mov
fildll
jne
jne
jnp
xchg
lea
jbe
mov
orl
ja
je
jae
jp
mov
std
fcmovnu
mov
js
pop
inc
arpl
xchg
xchg
xchg
nop
mov
jae
jo
sti
mov
jle
mov
mov
gs
addr16
nop
and
cli
fisttpl
push
outsl
jbe
mov
xchg
pop
addb
mov
data16
pusha
jb
mov
jo
gs
jmp
jns
lea
xchg
mov
popa
pusha
push
nop
xchg
cltd
cltd
push
ljmp
imul
jno
test
inc
dec
mov
pop
pop
imul
decl
ret
outsl
push
pusha
push
pushf
jge
cwtl
mov
xchg
insb
clc
jg
mov
ja
xor
pop
imul
cmpsb
lahf
and
fists
xchg
pop
pop
push
imul
mov
cmpsb
xchg
mov
mov
incl
imul
pop
push
push
pop
popa
test
mov
fcomip
lods
mov
lcall
bound
test
dec
dec
mov
pop
pop
data16
mov
scas
movsl
lcall
dec
push
fcomip
mov
ds
jge
mov
shll
inc
dec
push
pop
inc
mov
pushl
cld
mov
stos
mov
xchg
inc
and
outsl
mov
stos
xchg
je
dec
scas
mov
dec
pop
fs
xchg
cmpsl
mov
mov
cwtl
xchg
aas
sbb
xor
xor
mov
mov
jne
dec
ds
push
pop
fs
xchg
lcall
fldt
xchg
dec
pop
sub
xor
mov
lahf
andb
aaa
inc
inc
push
pop
pushl
stos
mov
mov
fwait
cltd
cwtl
pushf
jne
adc
xor
jns
leave
fmul
mov
jae
sub
sbb
inc
sub
data16
mov
mov
mov
cmp
and
push
sub
ret
fst
lds
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
scas
movsb
sahf
mov
sbb
pop
push
xchg
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
pushl
mov
mov
or
and
sbb
mov
mov
imul
ds
xor
stos
ds
lods
lods
jge
or
sbb
jmp
pop
lcall
sbbl
and
xchg
scas
mov
sbb
lcall
dec
xchg
dec
unpcklps
lods
int3
fsubp
fcmovnb
cwtl
jae
aaa
daa
sbb
cmp
mov
or
stos
mov
mov
and
sbb
popf
mov
xlat
jecxz
shrb
sbb
xor
popf
mov
enter
scas
lods
test
or
adc
decl
cmovns
loopne
xchg
jo
xor
push
sub
push
outsb
scas
ret
ror
ret
mov
pushl
xchg
dec
adc
sbb
pop
xor
out
into
mov
push
and
dec
andb
iret
rcl
enter
mov
bound
adc
or
and
in
fnstenv
push
push
jg
outsl
ljmp
inc
popa
jge
mov
into
dec
lret
mov
push
push
pop
nop
mov
jecxz
jle
add
dec
xor
dec
inc
pop
jns
mov
sub
lret
mov
inc
mov
and
sbb
add
pop
mov
dec
dec
xor
pushl
and
inc
pop
jp
mov
fimuls
mov
and
sbb
mov
sbb
xor
jl
mov
into
rcl
int3
mov
push
and
sbb
jg
nop
mov
loopne
lods
mov
xor
xor
jl
mov
mov
fadd
mov
sub
add
das
arpl
scas
mov
sti
sbb
and
aaa
dec
pusha
jge
leave
into
ror
xchg
mov
sub
incl
or
push
fcmovne
test
sub
xchg
scas
rol
into
lret
mov
sti
xchg
dec
and
mov
test
insb
push
xor
das
inc
push
arpl
push
leave
int
mov
dec
sub
cmp
aad
enter
cld
decl
ss
push
data16
mov
sub
jle
decl
aaa
pusha
andb
sub
ss
inc
push
js
cmpsl
ljmp
inc
aam
enter
xchg
push
xor
and
xchg
jg
pushl
lcall
inc
pop
outsl
test
lds
call
and
jno
lods
ror
mov
mov
inc
cmp
push
push
fwait
scas
mov
push
js
shlb
or
ss
jno
stos
mov
stos
mulb
or
xchg
stos
mov
rcr
sti
pushl
daa
or
ss
insl
xchg
jns
dec
inc
inc
dec
fs
in
mov
xchg
test
mov
int
scas
mov
sub
sbb
push
insb
xchg
inc
mov
pop
push
inc
inc
inc
dec
arpl
cmpsb
mov
in
enter
pop
cld
stos
push
and
imul
cmpsl
cwtl
andb
inc
mov
dec
pusha
jne
movsb
dec
or
leave
mov
das
push
cld
decl
sbb
cwtl
lods
mov
pop
dec
inc
inc
dec
pop
outsl
xchg
ljmp
xchg
or
cmp
xor
jbe
movsb
jp
int
jg
lods
mov
inc
inc
dec
pop
insb
test
shlb
call
sbb
dec
pop
je
lahf
mov
mov
mov
dec
inc
inc
push
addr16
cmpsb
mov
mov
lods
test
sbb
inc
push
push
adc
test
push
lock
pop
dec
dec
sub
sahf
mov
out
iret
mov
mov
popa
inc
dec
cmp
and
imulb
push
dec
inc
dec
pop
xchg
je
adc
sbb
sarl
xor
sub
sub
popf
xchg
push
cmp
mov
je
lcall
cltd
addr16
add
inc
and
cltd
enter
idiv
stos
mov
push
dec
dec
push
fs
mov
leave
sarb
mov
sbb
pusha
jae
popf
scas
mov
loopne
js
cli
or
lcall
dec
dec
pop
push
xchg
mov
jle
dec
dec
xor
insl
clc
outsl
inc
inc
push
addr16
mov
xchg
dec
push
pop
outsb
fistl
faddl
fdivs
mov
jne
mov
roll
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
sar
fs
outsl
adcl
dec
sub
sti
pop
sarb
pop
insb
jle
movsb
xchg
test
xorl
arpl
xchg
mov
push
aam
push
push
dec
sub
push
xchg
mov
jmp
jae
pop
push
push
pop
gs
and
mov
push
dec
cld
jg
sub
mov
xchg
xorb
pop
pop
pop
data16
mov
add
mov
push
dec
xor
cmp
inc
mov
pushf
mov
test
gs
pop
pop
dec
sahf
lods
fadd
or
mov
sahf
jne
push
or
cmp
pop
push
stc
out
pop
cmpsb
lahf
xchg
xchg
pop
pop
dec
lea
lahf
jbe
pop
cld
call
sbb
cs
ja
cwtl
mov
mov
addr16
pop
pop
ret
adc
dec
scas
mov
lods
xchg
jno
push
dec
xor
add
outsl
das
push
cltd
lahf
lahf
mov
push
jb
push
lcall
mov
test
insl
pop
pop
dec
xor
imul
xchg
mov
std
mov
je
xchg
movsb
mov
rorl
test
inc
xor
incl
mov
cltd
fwait
sahf
mov
jo
pop
pop
arpl
xchg
test
or
clc
mov
call
stos
adcb
add
arpl
les
pushf
push
jg
sarb
push
dec
cmp
push
pop
push
test
xchg
mov
or
push
orl
test
inc
ss
mov
push
pop
insb
jp
xchg
loopne
lcall
jbe
insl
js
movsl
mov
xchg
add
ds
inc
dec
push
loopne
mov
outsl
addr16
loope
cwtl
test
mov
je
pop
dec
cmp
ret
pop
jl
addr16
xchg
js
lcall
cmp
jg
fwait
lods
mov
push
movsb
mov
pop
inc
cmp
push
or
push
lcall
imul
repnz
mov
sub
push
push
inc
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
jbe
bound
mov
mov
pop
push
mov
pop
push
inc
inc
jp
imul
dec
fwait
xchg
or
mov
xchg
mov
stos
decl
addr16
cmp
xchg
xchg
cltd
lcall
sarl
pushw
sub
mov
enter
add
xchg
ja
js
inc
push
pop
addr16
dec
add
inc
xchg
xchg
les
outsl
push
push
ja
jbe,pn
push
shl
mov
js
dec
clc
inc
xor
xchg
popl
jo
test
outsb
aas
cs
je
dec
cmp
xchg
cwtl
cwtl
or
dec
outsb
insb
imul
mov
mov
insl
push
lds
addr16
dec
cmp
dec
ds
dec
xchg
xchg
add
mov
push
jb
movsl
lods
mov
mov
movsl
mov
pop
dec
aaa
cmp
jae
xchg
xchg
xchg
cs
lea
insl
push
insl
je
xchg
mov
mov
add
inc
mov
dec
aas
dec
push
jl
test
fildll
clc
test
dec
push
jb
xchg
add
mov
pop
inc
aaa
inc
dec
push
dec
xchg
cs
mov
fistps
test
mov
fs
dec
lock
jae
adc
xchg
lea
mov
outsl
xchg
xchg
jp
mov
jno
mov
out
bound
inc
dec
push
pop
fdivrl
nop
adcl
nop
mov
jp
mov
and
js
push
ds
pop
pop
outsb
or
mov
mov
imul
lods
mov
mov
cltd
subb
xor
push
pop
push
test
cld
xchg
mov
push
ficompl
mov
popf
xchg
pop
dec
cmp
dec
xor
and
lahf
into
mov
push
inc
jo
mov
ret
fstpt
xchg
je
pusha
push
inc
inc
dec
in
outsl
jl
xor
cmp
shlb
insl
jbe
mov
lcall
push
in
pop
pusha
imul
xchg
ljmp
cli
sbb
dec
push
cmpsl
scas
mov
mov
popf
mov
mov
rclb
jbe
sti
xor
dec
push
mov
rorb
jnp
pop
inc
in
pusha
insb
jbe
mov
inc
xchg
in
xorl
xchg
mov
cwtl
mov
xchg
cltd
mov
pop
dec
ds
push
push
pop
in
push
pop
or
dec
js
imul
mov
cld
xchg
mov
mov
fwait
jp
inc
inc
push
popa
insl
jnp
xchg
popf
cwtl
nop
call
inc
loopne
jo
xchg
popf
movsb
cmp
pop
mov
pushf
mov
dec
aas
inc
dec
cwtl
cs
stos
outsb
rcrb
cwtl
jg
lock
dec
insl
jae
mov
mov
pop
dec
call
dec
push
push
pop
int3
xchg
xchg
or
fistps
adcl
mov
push
inc
inc
dec
push
nop
outsb
jl
orl
mov
sbb
test
mov
xchg
mov
sbbb
inc
add
push
pushf
arpl
outsb
jne
lea
shlb
sahf
xchg
xorb
inc
cmc
pop
mov
xchg
mov
out
pushl
adcl
mov
cwtl
ja
pop
pop
dec
inc
out
push
xor
cltd
xchg
mov
js
dec
mov
lcall
pusha
das
mov
dec
into
outsw
jle
out
stc
addl
test
repz
movsb
insb
bound
inc
inc
dec
xor
cli
xchg
mov
outsl
je
xchg
popf
push
mov
movsb
pusha
xor
fwait
test
addb
loop
sbbb
icebp
jg
icebp
jb
jl
push
mov
cwtl
jg
gs
dec
inc
dec
dec
jbe
mov
sahf
cli
xchg
test
lcall
nop
shrb
mov
pop
dec
inc
inc
dec
push
pop
pop
out
imul
icebp
dec
jns
push
mov
pushf
mov
arpl
shlb
inc
inc
dec
push
mov
xchg
je
fimuls
jae
push
jp
xchg
rcrb
inc
dec
dec
outsl
fidivl
push
scas
xchg
dec
cmp
push
addb
outsw
jne
pushf
sub
lahf
fdivrp
popf
jae
pop
push
inc
out
pop
gs
cwtl
popf
cmp
ljmp
jo
insl
jno
adcl
out
outsb
mov
mov
add
je
lock
insl
cmp
decl
mov
mov
push
inc
inc
inc
xor
into
push
or
or
push
mov
xchg
mov
test
jns
push
inc
dec
dec
sub
mov
jb
cmpb
cmpb
mov
add
fwait
xor
inc
inc
dec
into
and
cmp
lock
xchg
movsb
mov
cmpsb
cltd
subl
jo
push
ret
dec
inc
sbb
or
xchg
fwait
lahf
rclb
js
mov
mov
stos
pop
jno
dec
into
or
push
out
popa
insb
jp
int3
andb
fwait
xor
lea
int
jno
mov
js
inc
dec
dec
mov
mov
jo
popf
push
push
mov
jb
outsl
enter
outsl
adc
sbb
mov
dec
inc
xor
cmp
jle
pop
fs
mov
popf
mov
clc
jmp
mov
mov
test
mov
andb
inc
dec
dec
arpl
mov
aam
push
jns
outsl
xchg
insb
movsl
cmpb
cmpsl
lcall
dec
push
andb
sahf
fwait
xchg
popl
mov
scas
mov
subl
les
mov
fwait
dec
mov
cwtl
jno
std
jnp
loopne
movsb
scas
mov
dec
subb
inc
test
test
mov
mov
outsl
dec
xchg
cltd
cmpsb
mov
mov
movsl
xchg
jge
cmc
out
fimuls
push
push
aad
mov
push
jne
outsb
dec
jb
xchg
call
mov
lods
movsl
mov
push
inc
dec
push
pop
mov
aas
ret
insb
push
dec
xchg
mov
jo
sub
lock
pushf
movsl
lods
shrb
push
inc
inc
inc
dec
inc
jns
lahf
jbe
sahf
cwtl
xchg
stos
ja
jo
mov
fisttpl
jge
push
sub
call
dec
nop
jb
jno
xchg
cs
push
repnz
add
fdivr
ja
dec
inc
fwait
insl
jl
xchg
cwtl
xchg
xchg
inc
add
insl
rcrl
cltd
movsb
mov
mov
mov
sbb
inc
inc
inc
ss
ss
ja
cli
cmpsl
mov
cmpsb
lcall
dec
inc
mov
bound
movsb
xchg
mov
ret
jno
cmp
out
push
scas
movsb
cwtl
mov
pop
dec
inc
dec
inc
add
or
dec
jb
xorb
push
incb
scas
mov
dec
inc
scas
test
lcall
cwtl
lcall
pusha
dec
xchg
scas
adc
nop
xorb
xchg
dec
xchg
movsb
orl
js
cltd
adc
jp
jb
aas
dec
jle
stos
mov
cmpsl
sahf
lea
fs
dec
dec
jo
js
repnz
fwait
mov
scas
js
mov
cmpsb
fwait
clc
pop
dec
dec
jo
subl
out
lcall
sbb
shrl
push
dec
dec
dec
mov
mov
adcb
lock
ja
cld
jbe
je
orl
jbe
push
dec
dec
dec
es
push
xchg
xchg
out
dec
mov
jl
mov
sub
dec
cwtl
ret
jo
dec
push
ljmp
test
jne
push
mov
je
xchg
cli
lods
xchg
nop
mov
push
lret
jae
call
or
into
mov
jg
xchg
adcb
movsb
cltd
mov
dec
out
int3
inc
push
adc
mov
jg
xchg
jne
orl
nop
add
push
push
sub
pusha
cwtl
mov
cwtl
xchg
mov
push
ss
cwtl
js
sbb
out
sub
sub
push
push
dec
cwtl
pop
enter
xchg
xchg
xchg
sbb
outsb
adc
and
cmpsl
lods
stos
insb
icebp
add
push
dec
lahf
arpl
pop
xchg
scas
mov
xor
shll
fwait
mov
cwtl
inc
dec
push
pop
imul
jns
int3
xchg
add
xchg
mov
dec
add
or
jns
push
test
dec
cwtl
cwtl
jnp
jle
sub
pushf
nop
xchg
pop
mov
cmp
je
fs
test
and
xchg
lcall
jno
push
dec
cwtl
out
mov
add
mov
jle
subb
mov
push
dec
inc
insb
js
mov
clc
enter
cmpl
iret
push
mov
xchg
mov
pop
push
dec
or
cmp
bound
or
mov
orb
into
stos
movsl
fwait
xchg
test
pop
dec
inc
cmpsb
dec
pop
gs
adc
hlt
add
outsb
jbe
sub
addb
into
lcall
jg
sbb
inc
inc
dec
add
je
mov
jne
test
insb
xor
nop
std
jg
mov
pusha
push
dec
inc
inc
dec
mov
push
sbb
test
cmpsb
mov
insl
popa
rolb
in
lahf
lahf
mov
in
adc
and
xchg
popf
movsl
stos
dec
mov
pushf
jle
bound
loopne
jo
ret
pop
movsb
popf
mov
jg
pop
add
fwait
mov
cmpsb
jb
loope
sub
inc
inc
dec
or
mov
sub
pop
cmp
jnp
js
cwtl
mov
or
push
inc
inc
inc
push
pop
imul
incl
cmpsb
mov
data16
ud2
mov
mov
mov
pop
dec
inc
aas
aas
inc
mov
pop
push
sarb
clc
das
ss
insl
jno
cwtl
mov
cwtl
or
push
inc
or
ds
dec
push
gs
or
push
xor
pushf
xchg
lcall
push
dec
inc
inc
inc
dec
push
lret
pushf
lods
scas
lods
cmpsb
or
ret
jge
outsl
mov
mov
jne
add
mov
cs
or
inc
inc
dec
push
pop
insb
jnp
stos
jb
and
int
pushf
jp
outsb
insl
jo
fdivs
bound
dec
dec
scas
jg
push
test
cmpb
jo
ja
pop
inc
mov
movsb
sbb
adc
arpl
dec
dec
push
pop
fs
and
test
add
clc
test
mov
sub
mov
xchg
xchg
xchg
jb
arpl
pop
pop
arpl
jbe
add
loopne
push
or
add
adc
mov
pusha
pop
pop
pop
fs
jl
popa
mov
fs
jne
rolb
push
push
je
dec
pop
pushf
mov
leave
dec
jb
and
and
mov
jl
jle
mov
es
lods
imul
xchg
sub
push
xorl
dec
xor
xchg
cmpb
fiaddl
addr16
fs
xchg
xchg
add
ret
insb
xchg
scas
add
xor
xor
mov
mov
or
nop
nop
lahf
test
nop
jns
loop
cmp
jl
dec
fs
inc
mov
xchg
add
mov
mov
mov
out
push
push
mov
cmpb
adc
dec
subl
mov
add
xor
pop
leave
cmpsb
test
inc
inc
scas
sbb
js
test
add
mov
and
sub
push
inc
mov
mov
sub
xchg
jnp
sub
sub
das
sub
int3
inc
add
adc
add
jg
xchg
mov
or
scas
jnp
ficoml
pop
xchg
inc
inc
push
out
add
add
jg
enter
insb
push
inc
xor
add
movsl
cmp
leave
call
mov
mov
sarl
fstpt
push
mov
xor
cmp
xor
and
outsl
dec
cmc
mov
mov
xor
aaa
and
adc
lcall
mov
xlat
xlat
lret
aad
and
test
mov
call
and
into
and
jo,pn
xor
arpl
mov
iret
les
adc
out
ret
idivl
ret
or
inc
or
sub
dec
int
mov
and
ja
test
enter
sarb
and
lahf
ret
mov
ja
or
adc
push
sbbb
xlat
mov
cltd
pushl
sub
stos
ror
mov
mov
jmp
icebp
mov
mov
mov
add
mov
neg
test
ret
mov
cld
shr
sar
int3
lcall
and
outsw
jb
insl
imul
jo
jo
imul
icebp
fs
fdivs
decl
sub
jmp
enter
mov
ret
mov
mov
sub
and
popa
and
pop
test
ja
das
jbe
gs
clc
repz
test
aaa
xor
add
pusha
xor
scas
testl
dec
rcl
or
push
add
jg
mov
aaa
mov
mov
cmpb
mov
les
push
ret
push
xor
movsl
pop
mov
mov
add
xorl
pop
add
cmp
dec
push
jne
push
push
test
lods
add
adc
dec
inc
mov
dec
ds
fnstcw
dec
jmp
dec
in
and
out
insb
ja
icebp
xor
mov
out
out
push
push
push
push
mov
addr16
cmp
xor
adc
dec
jnp
fwait
push
aas
pop
fwait
pop
pop
push
mov
int
mov
pop
into
bound
pop
gs
push
push
les
fwait
insl
fisubrl
jo
mov
cld
call
dec
jo
jb
inc
inc
mov
mov
jae
mov
rol
sub
in
mov
push
out
push
jnp
iret
mov
rcl
sub
sbb
inc
mov
inc
pop
push
jns
jnp
jmp
xor
pop
inc
jb
jbe
and
arpl
push
jbe
pop
jae
arpl
sub
popa
fwait
cmp
and
jno
jns
jne
bound
push
add
sub
ret
scas
push
insb
pop
xor
adc
push
imul
das
push
adc
shr
cmp
push
outsb
addr16
addl
cmp
fdivp
das
xlat
test
je,pn
je
je
mov
push
rcll
cmpsl
mov
in
cli
jg
idivl
mov
int3
shlb
out
sub
cmp
stos
sbb
ljmp
mov
xlat
not
fbld
rcl
sbb
add
out
in
pop
in
fadd
in
cld
enter
addb
mov
add
mov
mov
mov
xor
js
sbb
hlt
mov
mov
sub
lret
mov
mov
shr
mov
pop
mov
not
xor
cltd
aam
js
not
aad
ror
repnz
into
mov
mov
mov
arpl
std
ror
rcr
addr16
mov
push
mov
push
inc
mov
ret
add
lret
testb
in
push
xlat
aam
mov
mov
jne
enter
push
addr16
dec
inc
rol
or
mov
test
jmp
shlb
shrb
pusha
push
lret
sub
pop
cwtl
push
into
in
sti
jl
xorl
adc
aad
mov
or
js
mov
add
stos
mov
adc
out
es
lock
cmp
sbb
mov
mov
add
mov
clc
adc
or
xchg
rcrb
ret
mov
inc
jb
rorb
xlat
stos
cmp
fisttps
sub
ds
addl
push
sti
outsb
sbb
enter
shll
repnz
stos
push
negl
xor
iret
in
mov
popa
out
in
iret
ljmp
mov
iret
mov
add
and
test
ret
xlat
ljmp
call
add
aam
iret
shrb
adc
inc
push
xorl
mov
mov
fmul
mov
clc
sub
or
dec
lahf
ds
cmp
ds
imulb
cmp
fs
xor
ja
clc
pop
ror
and
and
fs
push
push
mov
rcl
lds
xor
das
jno
mov
imul
cwtl
adc
insb
push
jns
lcall
and
mov
push
and
jp
xor
jne
in
adc
adc
fcompp
out
es
das
ds
or
mov
inc
jne
arpl
and
scas
imulb
shrb
sub
and
inc
and
push
mov
shrl
sbb
and
and
mov
and
pop
xor
jnp
adc
jae
popa
mov
cmp
and
cs
outsb
out
popa
loopne
jae
data16
dec
faddl
jbe
xor
sbb
or
cmp
inc
adc
inc
popa
js
mov
neg
and
aaa
add
cmp
or
ja
fs
out
andb
cmc
pop
inc
pusha
clc
insb
dec
sbb
outsb
or
ds
sub
push
push
inc
xchg
dec
xor
inc
in
inc
inc
inc
add
inc
cmp
inc
xor
aaa
xor
inc
xor
xor
inc
inc
xor
std
ja
scas
push
inc
dec
dec
add
xor
xor
ss
cmp
test
inc
inc
sbb
aas
test
inc
hlt
inc
push
ds
lds
leave
lcall
or
rorb
arpl
add
repnz
add
or
mov
adc
xor
test
jbe
stos
add
pop
add
inc
jecxz
add
inc
dec
scas
mov
ds
xor
add
adc
or
inc
stos
sub
sub
mov
mov
movsl
add
or
lcall
imul
inc
mov
loopne
jg
movsb
test
cmc
inc
sub
mov
mov
outsl
pop
sti
dec
xchg
add
daa
cmp
adcb
imul
sbb
lcall
push
pop
and
in
jnp
jne
mov
fwait
out
imul
js
das
das
ds
sarl
fwait
shll
mov
push
punpckhwd
fidivs
popf
outsb
inc
add
xchg
aaa
lahf
push
jae
popf
mov
loopne
add
mov
sti
pop
inc
or
popf
sbb
push
xor
and
jo
seto
lahf
jb
and
adc
pop
or
inc
add
dec
enter
add
or
fcomp
jns
or
pop
dec
pause
lcall
pop
dec
test
push
test
inc
cwtl
pop
adc
repnz
fs
outsl
addb
push
mov
cmpsl
das
fs
mov
push
movsl
sbb
and
shlb
xchg
and
ficoms
cmp
mov
iret
and
jbe
das
and
jae
iret
nop
sub
sbb
notb
add
jle
sbb
cs
pop
nop
push
pop
mov
and
rcr
adc
lock
cmpsb
cmove
inc
das
mov
or
inc
adc
enter
pop
adc
mov
pop
or
adc
pop
outsl
mov
rorl
mov
push
jno
adc
pop
pop
scas
dec
iret
xor
das
pop
addb
inc
jnp
sarb
repnz
mov
and
nop
out
jge
inc
add
mov
loope
dec
push
mov
add
mov
ficomps
sub
adc
sbb
mov
inc
dec
and
pop
bnd
push
aas
or
js
daa
adc
enter
inc
rolb
js
add
cs
pusha
pop
cltd
dec
adc
adc
mov
pusha
ret
aas
stc
hlt
add
or
les
scas
or
mov
shrb
add
adc
cmp
dec
incl
pushf
out
mov
fwait
and
pusha
lret
sahf
jb
loop
filds
pop
push
lds
loope
mov
das
and
and
enter
mov
lret
lock
outsb
adc
dec
cmpsl
cmp
xor
outsl
clc
es
add
nop
cs
xorl
ljmp
repz
insb
add
lahf
xor
add
and
cwtl
mov
add
in
add
dec
mov
jo
outsl
inc
xor
adc
adc
outsl
loopne
pop
sub
xor
aas
xor
aad
aad
add
rcr
inc
pusha
outsl
cmpl
fadds
jecxz
pop
in
sbb
pusha
movsl
in
push
pop
sub
mov
popl
cmp
fcmove
add
pusha
lock
flds
fcos
sarb
test
fisubrs
or
or
fstpl
pop
pusha
fldl
fsubp
add
subb
fidivs
loop
aad
rcr
mov
in
jb
jg
fiaddl
push
push
mov
rorb
add
mov
daa
nop
or
pusha
loope
lock
inc
dec
and
nop
loop
repnz
iret
pusha
fildll
loopne
fildll
add
adcl
cs
xor
pop
add
stos
add
add
mov
shlb
ljmp
and
jno
cs
mov
daa
cmp
sti
fbstp
fwait
push
insb
cmp
iret
call
lds
nop
outsl
and
nop
or
add
shlb
sahf
mov
lock
fists
inc
dec
xor
ljmp
xor
pop
call
rcrb
xorl
enter
jl
add
filds
lahf
cmp
sbb
add
pop
lods
add
or
shlb
out
subb
mov
stos
sbb
and
lahf
jne
roll
outsl
add
sub
jg
outsl
xorb
sbb
cmp
scas
or
jo
pop
nop
sbb
nop
adcl
fadds
mov
clc
iret
or
xchg
test
jno
lahf
push
shrb
out
and
jl
pop
inc
adc
ds
add
mov
mov
push
orb
jl
lods
or
roll
insl
cli
stc
out
sti
lea
inc
cmp
outsb
push
stos
push
repz
jnp
mov
out
push
pop
ds
cmp
fidivs
in
shlb
fwait
int
int
in
push
in
fcomp
fs
jns
imul
push
or
xlat
insb
mov
push
cmc
xlat
cmp
sub
mov
imul
loop
out
sbb
xchg
loopne
and
ds
push
adc
or
loopne
iret
cmp
dec
and
mov
push
jo
repnz
or
pop
dec
pusha
and
mov
add
sbb
inc
dec
insl
ss
sub
ss
mov
add
inc
popa
out
mov
mov
shlb
imul
scas
mov
sub
cmpsb
push
jle
push
xchg
adc
xor
mov
div
push
dec
push
wrmsr
adc
cmp
jl
push
pop
subb
cmpsb
setne
out
sbb
and
and
jg
out
imul
icebp
push
call
sbb
inc
scas
addb
mov
inc
cwtl
inc
pop
sub
fcomip
mov
push
rclb
pop
int
outsb
push
out
mov
dec
dec
outsb
lahf
shrb
out
das
adc
rorb
mov
inc
cltd
sub
mov
pop
popf
out
and
cltd
nop
fnstenv
add
sbb
ljmp
cvtpi2ps
enter
iret
lahf
adc
inc
jb
mov
outsl
outsl
rcrl
mov
outsb
adc
jbe
jbe
pop
iret
roll
add
pop
shrb
das
rolb
dec
rolb
pop
das
lock
mov
pop
aas
ret
enter
sarb
mov
enter
sub
in
lds
mov
ret
dec
test
mov
dec
fmul
or
in
push
out
sbb
test
cmpl
and
imul
ficoml
sarb
cs
add
sub
fnstsw
fldt
adc
pushf
ja
and
rolb
hlt
aad
mov
std
dec
clc
adcb
mov
add
add
out
xchg
push
mov
pop
loopne
mov
pop
mov
and
sub
add
es
and
ss
popa
cmpsb
int3
aas
nop
aas
or
in
into
rcl
pop
pop
out
icebp
mov
cmpsb
mull
ret
in
add
mov
or
scas
rorb
add
aas
inc
sub
int
jns
je
imul
pop
aas
jo
add
imul
inc
pusha
pop
jo
pop
mov
push
inc
pop
mov
adc
ss
js
or
inc
cmp
sub
cmp
leave
shlb
jns
pop
in
push
aas
add
ja
movsl
lea
push
scas
and
movb
out
inc
jg
adc
sub
jne
add
test
mov
and
out
and
cs
pop
dec
adc
loope
pusha
fucomi
aas
and
add
in
outsl
faddl
add
mov
jnp
jg
repz
stc
push
pop
shrb
or
sahf
dec
jl
xchg
popf
pop
xchg
incl
es
icebp
inc
sbb
test
ds
mov
out
push
or
mov
jo
push
pushf
stos
das
lock
pop
or
mov
sbb
fcompl
popa
or
ret
and
cmp
loopne,pn
and
add
jo
jmp
in
das
pusha
inc
jmp
loopne
insb
test
mov
add
dec
cmpl
add
lock
inc
outsb
lock
push
jg
inc
gs
inc
outsl
test
pop
movsl
sub
push
jg
add
push
roll
stos
pusha
push
push
push
outsb
add
outsb
andl
pop
out
popf
add
xchg
ja
iret
pop
pop
popa
pop
popa
dec
repnz
inc
inc
pusha
fwait
inc
cmp
repnz
inc
cs
and
repnz
pop
dec
dec
cs
out
sahf
sub
push
filds
push
inc
dec
jnp
mov
das
inc
repnz
jb
inc
mov
dec
popa
repnz
jb
dec
dec
xchg
xchg
addr16
xchg
xchg
out
pop
jo
xchg
out
xchg
push
mov
out
rcrb
xor
pusha
pusha
add
call
cltd
add
je
cmpsb
mov
das
repnz
push
add
lock
add
mov
add
add
aas
aas
stos
push
popl
dec
ret
push
fdiv
xor
jmp
cmpsl
call
mov
shl
aaa
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fcos
aas
cmpsl
push
lret
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
sar
mov
and
insb
lods
aas
jnp
scas
inc
loope
test
jge
das
cmp
mov
jo
repnz
shlb
pop
mov
aas
scas
dec
and
xor
push
jns
mov
mov
in
lahf
xorb
iret
bound
add
dec
sahf
dec
jbe
pusha
mov
pop
adc
inc
xchg
jo
jg
dec
xor
das
mov
inc
mov
adc
sarb
cmpb
scas
mov
sarb
adc
and
outsb
jnp
rcll
das
rol
pusha
mov
pop
cmp
xor
adc
add
pop
mov
rolb
adc
ret
cmp
push
lods
xchg
mov
or
add
push
andl
daa
mov
add
in
leave
sub
enter
xor
nop
or
pop
sbb
push
and
mov
dec
adc
mov
push
cmp
incb
das
out
shll
xor
push
test
aas
and
fists
rcl
aad
push
je
loopne
outsl
js
add
inc
roll
cmp
lock
xor
icebp
push
icebp
stc
pop
cmp
int3
mov
cmpl
jg
and
fs
or
sbb
mov
or
out
pop
xchg
add
sbb
and
out
sahf
xor
and
adc
cmp
jns
or
sbb
xor
cmp
mov
mov
sbb
iret
repz
push
push
and
cmp
repz
cmp
daa
cs
iret
repz
aaa
ds
in
sbb
add
mov
jns
pop
push
mov
push
jns
out
roll
iret
cld
clc
lock
addb
xor
std
testb
inc
lds
push
inc
dec
xchg
dec
xor
fldcw
sbb
jnp
jae
push
xor
sbb
push
bound
mov
inc
sub
sbb
push
and
mov
int3
adc
or
xor
mov
push
andb
sbb
or
push
sbb
xor
jnp
adc
outsb
push
ss
incl
push
popa
dec
mov
xor
aas
lret
xchg
scas
out
jg
push
aas
stos
adc
shl
aas
aas
cmp
jmp
jnp
push
lcall
stos
jb
push
test
shlb
or
cmp
add
xor
bswap
aas
incl
pushl
dec
mov
jae
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
call
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwtl
lcall
fs
push
stos
imul
add
xor
push
into
incb
shll
or
inc
mov
pushl
dec
mov
jno
dec
mov
shrb
out
push
fisubs
loope
shrl
bound
push
scas
outsb
sahf
pop
mov
insl
popf
pop
or
dec
pushl
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
call
sub
sbb
and
push
pop
cmpsb
xchg
push
test
gs
push
add
jmp
popl
aam
mov
jne
daa
inc
pop
sub
repz
aas
lock
or
mov
mov
or
nop
ret
mov
orl
mov
mov
add
idivb
sbb
xchg
fistps
pop
and
push
dec
ss
cmpb
scas
call
mov
cmpsl
dec
jg
mov
dec
outsl
je
test
aaa
call
gs
rcrl
mov
mov
popa
mov
rcrb
mov
enter
add
cmpsb
add
and
push
sub
in
adc
or
or
add
jbe
fistpl
push
inc
add
sub
add
push
xor
jl
inc
add
adc
push
cmp
and
mov
sub
mov
mov
enter
sub
mov
idivl
ja
das
sub
lcall
cwtl
push
aas
gs
cmp
mov
test
sub
cmpsl
out
addr16
pop
cli
nop
jle
mov
imul
rorb
push
pusha
lea
mov
mov
addb
push
addr16
xor
push
popa
call
je
cmovg
adc
cmovb
insl
popa
jo
js
inc
jmp
jle
jb
in
shrl
mov
arpl
fcom
push
pop
pop
sarb
mov
sbb
imul
nop
ja
dec
adc
adc
neg
push
push
dec
inc
insb
imul
js
adc
mov
inc
cwtl
out
push
or
rorb
inc
dec
sbb
lcall
pop
pop
adc
cmp
repz
jno
jnp
add
imul
rcll
add
stc
xor
out
adc
mov
pop
fiaddl
ljmp
sub
scas
mov
ror
dec
ds
sbb
mov
sahf
mov
dec
sbb
jns
and
mov
icebp
xor
clc
loopne
sbb
cmp
inc
in
mov
nop
es
lock
ds
loopne
loopne
repz
int3
cmpl
xor
inc
adcl
dec
mov
pop
mov
add
rclb
addr16
out
enter
les
out
cmp
dec
fists
out
sahf
mov
add
rorb
das
testb
ret
or
jo
push
scas
add
loopne
or
inc
leave
dec
mov
inc
and
inc
xorps
xor
or
push
jno
test
je
pop
dec
mov
mov
push
and
outsb
jae
jb
data16
fildll
push
insb
addr16
xchg
jbe
dec
cmp
cmp
push
seta
adc
call
ds
mov
dec
mov
xchg
lods
xor
xor
xorl
pop
aaa
cli
dec
fisubrl
sub
aam
mov
add
sbb
mov
out
sbb
and
sub
outsl
cs
lahf
or
cs
inc
sahf
out
push
sub
sahf
dec
popf
mov
into
add
iret
les
cs
out
and
jge
sbb
dec
in
out
nop
push
sub
into
jae
cli
lahf
popf
ljmp
pop
pop
jle
and
iret
test
push
push
out
out
inc
notb
xor
insb
fs
daa
xchg
pop
ljmp
jb
daa
dec
inc
dec
inc
jb
mov
push
sbb
pop
mov
imul
ss
and
mov
lcall
pop
or
dec
mov
and
imul
fldenv
pop
pop
mov
scas
lret
dec
adc
inc
push
pop
xorl
jb
pop
inc
inc
rcrl
addr16
add
or
cld
lods
sahf
mov
dec
and
add
xchg
lods
loop
in
pusha
cmp
cmp
and
mov
dec
mov
inc
push
test
jae
js
or
add
dec
les
shlb
mov
cmc
incl
aaa
push
rol
js
cmpl
mov
movl
lock
lahf
pushf
insb
mov
mov
mov
pop
push
call
or
fsubs
cmpsl
adc
add
xor
sub
mov
sub
xchg
mov
pusha
push
fs
mov
stos
ja
cmpl
scas
lock
xlat
movsl
in
sahf
xor
cltd
cs
ds
xchg
sub
inc
inc
stos
scas
hlt
add
xor
ds
xchg
ss
loopne
mov
mov
pop
pop
lahf
inc
pop
addb
xchg
addr16
ja
fists
pusha
cmp
loope
add
jns
mov
dec
cmp
loop
pop
add
out
push
mov
push
add
mov
lahf
fidivrs
popf
dec
repnz
push
into
add
fisttps
nop
data16
or
push
inc
xchg
xor
int3
mov
pop
mov
cs
pop
ucomiss
mull
xor
dec
mov
push
fisubrs
xor
add
push
rcrb
add
js
cmpb
int3
sbb
test
aaa
push
in
ljmp
scas
aaa
ds
jo
iret
pusha
inc
mull
mov
mov
and
das
sbb
push
sbb
fisubrs
into
sub
pop
daa
pop
push
add
or
push
jb
cli
sbbl
gs
cmp
pop
sarb
adc
xchg
pop
scas
bound
test
insl
faddl
xchg
scas
inc
add
ret
scas
lea
into
mov
mov
xchg
dec
insl
pop
rcrb
enter
pop
dec
mov
inc
das
xor
inc
test
mov
lock
mov
xor
enter
mov
mov
aad
cmp
push
mov
fcom
dec
cmc
cmp
jmp
addr16
push
clc
loopne
dec
push
aas
push
lods
add
arpl
jmp
xchg
inc
xchg
js
ds
gs
pusha
mov
stos
add
push
and
js
mov
aas
inc
insl
fs
test
push
popa
jb
into
push
lldt
movsl
jmp
rcl
add
rclb
ds
mov
or
inc
daa
sub
mov
cmpsb
mov
pop
in
lock
push
outsl
jo
push
addb
sub
nop
push
sub
mov
lock
jb
inc
push
leave
imul
outsb
cmpsl
xchg
push
lahf
loopne
push
mov
stos
sub
std
mov
mov
sub
stos
outsl
xor
dec
inc
inc
cmp
add
shlb
cld
cltd
sub
fiaddl
outsb
test
xor
pop
repz
cs
cmpsl
jmp
push
movsb
dec
outsb
jne
aad
mov
dec
aas
push
incl
sbb
jnp
ret
add
mov
push
das
arpl
sub
sbb
js
movsl
je
sub
jg,pn
call
push
movsl
aas
dec
popa
jo
pop
loopne
test
pop
out
adc
rcrb
pop
test
outsb
pop
das
clc
adcb
xchg
fisubrs
push
insb
iret
cmpsb
test
adc
or
sub
lahf
sahf
add
add
pop
push
sbb
inc
push
cli
adc
push
int
pop
mov
cmp
nop
popf
test
je
add
push
jo
pop
jmp
fisubrl
icebp
add
xor
cmp
jo
push
xor
lock
cmp
paddsw
ds
xchg
inc
cmpb
dec
xchg
cmp
xchg
mov
push
jg
xor
dec
dec
dec
filds
dec
dec
push
pop
pusha
aaa
push
push
bound
pop
clc
or
js
test
cli
cwtl
scas
jbe
and
push
fs
addr16
mov
daa
fmuls
leave
push
pop
cmp
pop
jne
shr
fs
and
push
neg
xchg
inc
xchg
cmp
test
xchg
test
sbb
aam
cmp
push
mov
pop
iret
test
dec
jge
pusha
repz
fs
inc
pop
shrb
rcrl
testl
or
dec
mov
in
push
cmp
push
pop
sub
and
and
fdivrl
add
dec
das
fs
or
mov
icebp
mov
push
inc
inc
adc
gs
mov
pop
dec
outsl
icebp
popa
add
mov
jne
mov
jne
orb
incl
sub
or
movb
and
bound
push
inc
pushf
jae
sahf
push
into
mov
into
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
mov
push
push
adc
sbb
jne
and
movntq
pop
dec
inc
aas
cmpsl
loope
add
mov
daa
cmp
imul
and
icebp
dec
and
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
inc
sbb
mov
inc
inc
push
inc
inc
ss
pop
pop
add
das
addr16
add
sahf
add
mov
or
jle
push
push
sbb
es
mov
jbe
dec
inc
shlb
xor
cmp
sub
icebp
and
push
jae
in
add
jp
repnz
aaa
in
je
aaa
cwtl
jp
in
and
popa
arpl
out
dec
cmp
push
ja
jno
outsl
ss
lods
arpl
mov
push
jbe
and
divb
cmpsl
arpl
insb
or
movsb
jnp
mov
add
mov
xor
lds
sahf
lret
jo
mov
sbb
fs
pop
insl
ret
pop
arpl
mov
mov
xor
lock
insl
jne
inc
push
arpl
das
push
and
mov
in
pop
add
inc
jb
add
je
mulb
popa
pop
xor
lahf
jae
in
pusha
and
mov
inc
mov
or
fucomp
push
jae
push
xor
pop
add
xlat
fdivr
add
jne
nop
xor
mov
cwtl
mov
call
sub
push
cmp
das
in
pop
pop
sub
cmp
cmp
or
cmpsb
cmp
pop
std
and
ja
pop
jle
push
mov
sbb
movsl
or
or
xor
gs
sbb
ja
add
imul
aas
sbb
ret
mov
inc
leave
mov
jg
sets
out
insl
fildl
aas
push
pop
jns
xor
sti
pop
insb
mov
jb
es
outsl
fs
push
xlat
inc
je
inc
bound
fs
loopne
jmp
cmp
aas
sub
addb
xorb
fldl
mov
add
imul
mov
popa
sub
sysret
insb
imul
pop
inc
cmovs
jbe
fnsave
cvttps2pi
les
xor
add
jo
add
ret
rcl
pop
and
ds
iret
jmp
pop
fs
aaa
leave
push
roll
dec
and
and
fwait
adcl
sub
sub
popa
testl
stos
scas
cmp
push
fistl
outsl
push
sub
inc
push
call
add
pop
movsl
xor
push
fiadds
add
xor
cmp
ja
inc
ljmp
push
and
add
lods
stc
or
pusha
add
add
inc
out
into
and
add
shlb
mov
jne
add
adcb
outsb
nop
insb
adc
pushf
xor
pop
test
pop
cmp
fadd
push
dec
pop
push
xchg
push
loopne
add
inc
push
bound
jle
add
mov
lcall
push
pusha
outsb
jl
adc
mov
adc
je
pop
iret
dec
out
je
mov
enter
jo
and
sbb
or
or
mov
xor
cld
push
pop
addr16
jns
inc
incl
xor
push
dec
inc
js
dec
dec
inc
add
push
das
andb
jg
dec
sbb
inc
dec
cld
subl
or
fadd
scas
mov
and
jb
or
ja
movsb
pop
js
aas
nop
cs
in
xchg
add
sub
mov
repz
pop
inc
add
pusha
mov
mov
das
xchg
mov
in
mov
cmp
xchg
adc
cmp
dec
add
das
and
mov
pusha
daa
xor
das
nop
aaa
inc
jo
mov
add
mov
mov
push
fadds
push
jo
lahf
lock
xchg
mov
push
sub
add
push
daa
cmpb
cmpsl
mov
sahf
nop
xchg
lahf
cwtl
enter
enter
lahf
mov
cmpsl
nop
pop
sbb
outsb
mov
inc
daa
enter
in
ror
push
nop
cwtl
xchg
pop
and
shr
and
daa
mov
pusha
leave
and
in
test
lahf
and
sub
scas
mov
adc
test
rcrb
shlb
cwtl
in
clc
mov
insl
leave
test
daa
cltd
dec
pop
mov
scas
push
mov
jo
jne
xchg
andb
in
or
mov
in
in
mov
jnp
fadd
push
test
cvttps2pi
sub
mov
popl
mov
addb
xor
dec
dec
in
sbb
add
cwtl
or
bound
xchg
dec
and
scas
cs
or
add
loopne
inc
inc
outsb
sub
insb
pop
das
xchg
rcrb
mov
sbb
xchg
mov
clc
scas
xchg
adc
scas
lock
push
mov
and
nop
test
fdivrl
and
add
in
sbb
cmp
mov
lahf
xchg
pusha
out
jb
add
nop
mov
test
xchg
inc
loopne,pn
mov
push
jne
mov
push
mov
mov
fnsave
push
out
push
outsl
xor
push
mov
cmpsl
andb
iret
push
fwait
inc
pop
test
rcrb
rcrb
xchg
push
adc
cltd
inc
dec
mov
lahf
dec
mov
or
aaa
inc
jo
cwtl
inc
add
mov
shlb
out
leave
sub
add
mov
fldt
adc
cwtl
bound
cmp
or
mov
sub
daa
fdivs
shl
jg
out
lock
xchg
cmp
ret
das
or
xchg
and
adc
pop
frstor
leave
dec
mov
nop
adc
daa
xor
outsl
mov
cmpsb
mov
push
push
cmp
add
cmpsl
mov
xchg
aas
scas
or
xchg
daa
nop
and
mov
outsl
mov
lahf
xchg
fistps
enter
mov
insb
daa
addr16
shrb
daa
shr
sub
sarl
mov
dec
dec
shrl
xchg
scas
nop
or
xor
cwtl
mov
outsb
fldl
rcrb
call
inc
icebp
jbe
daa
push
mov
sbb
add
xchg
or
aas
mov
mov
and
xchg
inc
mov
inc
jb
outsb
mov
xchg
or
outsl
jmp
xor
dec
ret
pusha
ret
xchg
loopne
outsl
mov
cwtl
mov
cmpsl
mov
enter
add
dec
and
jmp
ljmp
xchg
push
repnz
das
js
nop
or
frstor
ja
daa
pop
mov
out
push
inc
loopne
mov
leave
adc
fadds
adc
leave
adc
popf
addr16
adc
addb
dec
xor
or
punpckhwd
xchg
je
mov
sub
add
or
and
xor
inc
pop
and
in
out
jmp
add
dec
and
push
jo
jb
adc
adc
enter
leave
shl
lock
mov
pop
add
divl
scas
jo
dec
add
jae
cmp
orb
and
dec
dec
jo
iret
fadds
dec
popf
pop
mov
mov
sub
lret
fidivs
repnz
jmp
aaa
jnp
pop
dec
adc
pop
sbb
fisubrs
xor
call
jns
outsb
pop
pop
add
jo
or
nop
repz
mov
outsb
daa
iret
add
fisubrl
in
pop
pop
in
leave
xchg
sub
pop
dec
push
in
inc
add
inc
pusha
push
insl
xorb
scas
sbb
mov
js
lret
sub
push
push
mov
das
call
cmp
decb
pop
aas
adc
out
mov
xor
in
mov
pop
xor
inc
test
mov
jb
pop
jb
nop
lock
adc
aaa
mov
aas
pop
push
fmull
pop
mov
add
fs
sub
jo
pop
pushf
pop
and
or
cwtl
popf
mov
loop
push
pop
push
dec
outsb
aaa
and
mov
adc
fdivrs
enter
push
lock
clc
cmpsl
nop
rcrl
pop
adc
and
in
dec
cmpsb
xor
mov
add
sub
pusha
pusha
leave
in
mov
mov
mov
enter
out
mov
or
pavgb
sub
mov
and
outsl
in
adc
popa
es
add
repz
add
add
cmp
insb
pop
jp
repz
xrelease
xchg
or
mov
push
or
into
push
fmull
ljmp
adc
bound
out
sahf
out
adc
adc
sahf
out
sahf
adc
pop
jns
out
sbb
jbe
out
sahf
out
sbb
jns
sbb
fmull
cmp
lret
iret
dec
nop
out
and
pop
add
adc
and
and
lock
cmp
arpl
enter
arpl
jle
inc
mov
mov
arpl
enter
arpl
arpl
arpl
arpl
arpl
fs
jns
out
adc
adc
sahf
out
sahf
inc
adc
adc
out
insb
pop
jp
mov
jns
out
xchg
sbb
mov
rcrb
jns
pop
ljmp
add
das
add
mov
push
or
dec
push
mov
outsl
pusha
pop
or
popf
push
pop
int
or
add
js
sahf
mov
pop
into
fsubrl
mov
pop
fsubr
pushl
jo
leave
adc
nop
in
mov
fistpl
iret
xor
mov
test
pop
dec
fwait
adc
call
enter
cwtl
adc
pop
and
shlb
inc
pop
jb
push
adc
mov
cmp
pusha
mov
inc
cs
in
mov
xor
rcrl
addr16
adc
or
aam
mov
push
add
jne
jbe
das
imul
xchg
inc
cmp
addr16
mov
mov
daa
push
enter
mov
loopne
push
dec
dec
or
aad
push
pop
mov
cmp
xor
testl
xlat
sahf
dec
push
dec
add
in
in
pop
testb
iret
xor
dec
repnz
je
sahf
cltd
and
pop
pushl
leave
add
xchg
mov
sbb
lods
mov
mov
out
lahf
fnsave
jb
out
cld
aaa
dec
inc
cmpsb
mov
dec
jo
enter
imul
enter
imul
ret
xchg
sbb
btc
fisttpl
cmp
xlat
dec
add
xchg
adc
push
enter
pop
and
addb
or
pop
shl
mov
inc
cmpsl
dec
jo
fcom
aas
adcl
add
cmp
mov
push
sub
lahf
push
rorb
in
or
js
clc
daa
cmp
repnz
imul
imul
data16
or
inc
outsl
jns
leave
in
dec
imul
jns
jae
jge
test
out
nop
pop
in
sahf
out
or
enter
fnop
loopne
jo
outsb
psubsb
iret
sub
xor
in
xchg
insb
push
add
jecxz,pn
in
cmp
pop
insb
jb
lds
js
enter
insb
mov
jae
test
test
jae
inc
jg
jg
test
fsubrs
jns
pop
mov
insl
xor
inc
es
insl
mov
or
and
push
insl
aas
and
cmpsl
cmp
cmp
add
push
sahf
aaa
cmp
add
mov
push
mov
or
enter
hlt
jbe
push
decl
scas
call
pop
aas
psubb
xor
sub
xchg
push
adc
outsb
incl
xor
scas
nop
ja
push
add
pushf
fmull
jae
cmp
fcoml
fstpl
outsb
sub
setb
add
in
mov
pop
leave
leave
and
shl
add
jb
call
ja
out
aaa
add
fidivrs
fimuls
jns
adc
outsl
cmp
cmp
push
fsubrp
repnz
aas
or
adc
dec
test
popa
jb
push
out
rcr
test
fidivs
dec
dec
leave
add
mov
cmc
xchg
mov
pop
cmpsb
dec
scas
fcoms
lret
push
in
or
out
mov
push
lods
outsl
decl
jo
mov
daa
lcall
jo
xor
es
out
iret
jo
xor
cmpsb
nop
loopne
imul
pop
orb
nop
dec
scas
mov
nop
dec
fsub
xor
jg
push
pop
nop
push
jb
sub
dec
loope
jno
cmp
loope
jb
in
cmp
iret
nop
mov
enter
dec
enter
pop
sbb
jns
xor
clc
lahf
ficompl
jno
lret
lret
lret
lret
jbe
xorl
lret
lret
lret
mov
jno
jno
lret
lret
lret
into
jno
jno
jno
jno
lret
lret
lret
cli
jno
jb
jb
jb
lret
lret
lret
jb
jb
jb
jb
lret
lret
lret
push
jb
jb
jb
jb
repz
outsl
xchg
sbb
sbb
sbb
iret
repz
mov
cmp
repz
fisubs
jmp
and
and
out
lcall
jns
out
sub
sub
jns
out
dec
sub
jns
bound
insl
xor
xchg
rcll
mov
sbb
ret
dec
jae
jae
in
sub
jae
jae
jae
mov
fnsave
jae
jae
je
enter
je
je
je
sbb
jb
je
je
je
je
xchg
and
je
je
je
cmp
mov
je
je
sbb
fnstenv
aas
cwtl
in
xchg
push
add
add
jne
cmp
push
jne
jne
jne
jne
sub
dec
jne
sub
adc
jo
cmp
mov
aas
fwait
cmpsb
outsl
in
pop
imul
scas
loopne
pop
mov
test
dec
repnz
sub
sbb
adc
inc
leave
adc
xorb
jb
mov
adc
ret
leave
loopne
jle
out
ja
xor
out
push
add
push
jns
out
add
add
add
aaa
push
inc
pop
dec
sahf
out
sahf
or
arpl
outsb
jns
out
or
test
push
lcall
icebp
mov
mov
scas
roll
out
repnz
das
jl
es
js
adc
push
xor
call
lods
lcall
xchg
cmp
fisttpll
push
dec
xor
mov
cmp
fistl
add
mov
test
fdivrs
mov
iret
repnz
sbb
pop
or
jmp
and
iret
jae
jae
inc
add
mov
das
addr16
fistpll
lds
adc
mov
sub
lea
jg
dec
add
jbe
cmp
loopne
call
jns
ljmp
inc
es
and
cmp
inc
mov
jp
lds
lcall
in
xchg
push
js
jp
pop
sub
loop
leave
jo
jmp
pop
scas
fadd
in
pop
rclb
loopne
fsub
mov
sub
jnp
js
cmp
aaa
push
add
and
push
sub
decl
ss
dec
jnp
pusha
jnp
lds
cmpb
xchg
mov
sub
pusha
sarb
sarl
cwtl
outsl
lock
nop
sub
shr
jl
enter
in
jl
in
or
in
jl
orl
jg
in
lahf
call
in
pop
add
in
ss
repz
loopne,pn
movsl
call
jo
push
adc
inc
add
incl
stc
orb
adc
repz
aas
aas
or
inc
pop
xor
out
lods
inc
xor
out
outsl
xor
loop
xchg
xchg
popa
aaa
cli
push
fbld
mov
ret
daa
ds
adc
in
pop
adc
xchg
and
adc
xor
lock
imulb
cmp
dec
out
out
pop
sbb
js
and
pop
sbb
push
and
adc
adcb
fbstp
iret
mov
repnz
push
clc
out
sub
and
nop
inc
xor
jge
rcl
sbb
jmp
pop
sbb
dec
adc
jo
ds
das
sbb
fcompl
inc
pushl
push
jge
cmpsb
nop
xchg
pop
jo
icebp
nop
dec
scas
nop
dec
sub
push
rolb
js
mov
sti
scas
test
es
adc
enter
xor
jle
repnz
fsubs
jo
inc
scas
sub
cmp
cwtl
add
fcompl
pushf
xchg
mov
addr16
jg
leave
adc
lock
loop
clc
add
add
jge
xchg
sub
das
adc
inc
dec
pop
sub
ljmp
mov
orb
xlat
scas
nop
shlb
pop
sarb
hlt
repz
adc
nop/reserved
cmpb
inc
dec
cwtl
pusha
into
xor
or
outsl
cmc
or
sbb
jg
push
xor
nop
push
pop
das
xchg
fisttpl
pop
mov
bt
jg
or
dec
dec
addb
push
and
orb
lret
xor
cmc
lock
and
mov
in
pop
xchg
mov
add
cmc
adc
inc
leave
add
adc
pusha
cmp
les
shlb
mov
xchg
add
or
pop
sbb
das
lret
lret
fistpll
cmp
lret
lret
lret
lret
pop
subl
lret
lret
lret
lret
xchg
andl
lret
iret
sbb
cmpl
push
adc
cmp
repz
adc
adc
iret
push
imul
test
pusha
testl
movsl
into
leave
mov
inc
or
sub
push
pushf
adcb
clc
das
xlat
outsb
xchg
sub
sahf
out
pop
and
pop
add
xchg
fs
subw
test
cmp
in
mov
shlb
aaa
stc
jmp
lock
loopne
outsl
repz
das
or
push
and
addb
mov
push
adc
or
pushf
pushf
dec
and
pop
or
cmp
test
aad
test
loope
jg
sahf
adc
inc
sahf
add
cli
das
xor
test
inc
mov
test
jb
cmp
jo
jbe
jb
orl
loop
mov
sti
or
pusha
jb
dec
repnz
test
fcomps
jb
pusha
push
and
dec
into
dec
ja
orb
nop
hlt
jbe
xchg
iret
push
das
test
mov
cld
filds
dec
sbbb
fcmove
adc
pop
in
sub
fsubrs
xchg
xchg
test
jb
pop
cmp
jp
test
mov
xchg
iret
loop
pop
and
xchg
add
and
rorb
jg
jnp
scas
fcomps
add
jp
cmp
mov
in
fwait
or
inc
popl
repnz
pushf
mov
test
adc
rorb
and
call
xchg
push
enter
mov
sbb
sub
and
mov
push
enter
enter
sbb
xchg
mov
pop
and
xchg
pop
and
pop
int3
mov
xchg
loopne
or
or
nop
add
push
in
lahf
push
in
or
mov
sub
ja
mov
mov
imul
pop
aas
cmp
das
out
insb
xlat
pop
fdivrs
aam
fsts
sub
sbb
jnp
imul
xor
scas
xchg
dec
ds
add
mov
mov
nop
jo
enter
add
rorb
loopne
negb
jns
add
mov
lcall
test
and
and
add
adc
mov
dec
out
lock
into
mov
xor
push
incl
fcoml
inc
pop
inc
add
add
jmp
adc
pop
js
push
inc
cwtl
pop
mov
pop
and
push
pop
test
and
fcoms
mov
and
dec
adc
dec
leave
adc
pusha
jb
adc
xchg
push
adc
loopne
popf
sub
cmpsb
nop
cmp
sub
and
mov
pop
jb
bound
push
mov
or
mov
xlat
and
mov
xlat
cmpsb
push
dec
dec
fs
pop
scas
pushl
pop
addb
push
push
cwtl
pop
iret
rorb
pop
stos
decl
test
inc
dec
xlat
mov
pop
sub
dec
mov
lock
push
lock
dec
mov
mov
scas
shrb
in
adc
adc
xchg
pop
and
insb
jb
adc
mov
adc
in
mov
mov
jo
and
jne
pop
test
daa
add
sub
pop
ds
leave
adc
or
int3
aad
lds
rcr
outsl
hlt
dec
dec
repnz
enter
sbb
lahf
rorb
jb
in
or
or
std
add
pop
jb
cs
dec
push
push
fs
jb
pop
jb
mov
pop
loopne
fisttps
mov
cmpsb
nop
or
xor
enter
lea
rorb
leave
mov
pusha
ds
adc
in
add
leave
in
cmc
ljmp
nop
sub
mov
or
mov
dec
xor
and
scas
pusha
push
imul
enter
pop
pushf
or
sarl
loopne
and
movups
xchg
xchg
pushf
dec
xchg
lahf
inc
push
rcr
enter
pop
cmp
testb
cwtl
test
sub
mov
add
mov
xchg
sub
sbb
loopne
in
mov
sub
mov
sbb
dec
mov
fcoms
daa
sub
ss
fldcw
jo
cmpsb
and
nop
xor
xchg
insb
cmp
mulb
imul
mov
mov
int3
mov
jae
shlb
test
add
jo
lahf
and
sbb
xchg
ja
es
ja
pop
xor
add
jbe
xchg
subb
pusha
nop
aad
add
insl
add
or
arpl
imul
lret
mov
jo
sbb
push
and
jecxz
dec
jne
inc
xor
add
test
push
and
loopne
sbb
test
insb
clc
sub
push
movsb
jb
push
mov
pop
add
xlat
ret
pushf
jb
ss
cmp
outsl
jbe
add
ja
mov
inc
nop
add
xchg
add
pop
dec
fists
xor
insb
push
outsb
mov
outsl
fisttps
dec
sbb
xchg
mov
data16
mov
mov
outsl
add
inc
loope
push
stos
in
out
loopne
add
jbe
in
sub
inc
push
fcomps
cmp
scas
inc
js
or
jl
add
inc
outsb
ss
add
imul
add
mov
fisubrl
pusha
ret
cltd
add
jo
adc
mov
imul
lahf
sbb
mov
aaa
popf
xor
xor
divb
add
ret
mov
or
sahf
imul
sub
sub
orl
and
mov
xor
lret
sub
mov
shll
das
mov
pop
nop
mov
add
les
and
xchg
cli
arpl
je
dec
bound
pop
aad
pop
pusha
fcmovbe
mov
mov
pop
mov
mov
xchg
gs
add
mov
jmp
lret
fs
push
inc
iret
push
sbb
dec
das
rcrb
jo
sahf
imul
sbb
mov
in
push
push
sub
lea
test
or
das
add
mov
push
and
hlt
sahf
jne
push
jae
pusha
arpl
xchg
inc
outsl
inc
int3
rorb
add
dec
pop
add
cmp
ret
imul
or
repnz
pop
push
insl
sub
pop
into
add
sub
in
xor
dec
inc
and
scas
xor
inc
add
sub
dec
add
add
add
pop
scas
mov
or
ss
mov
and
xorl
and
xchg
out
outsb
mov
fiaddl
addb
inc
inc
add
xchg
outsl
jo
xor
add
jne
lock
mov
xchg
jbe
fs
sbb
add
xchg
add
pop
inc
xorl
inc
cmp
pop
xor
xchg
popf
and
adc
mov
mov
inc
jl
xlat
jo
and
adc
ret
in
mov
andb
es
mov
in
call
sub
int3
add
xchg
push
sbb
dec
add
add
das
push
inc
push
cmp
fs
jnp
sbb
mov
push
xchg
add
mov
rorl
lods
ds
pushf
sbb
mov
dec
pop
inc
adc
jns
negl
jl
repz
cmp
xor
fisttpl
inc
das
push
arpl
shlb
mov
and
cmpsb
outsb
je
in
sbb
adc
mov
push
pop
mov
jae
jmp
add
sbb
out
pop
jo
cwtl
rcrl
fisubl
xchg
xchg
stos
cmp
mov
add
sbb
arpl
outsb
sbb
movsb
adc
rcll
pop
cmpsl
test
pop
add
push
test
dec
or
pusha
out
ret
inc
shlb
push
xor
fnsave
push
mov
mov
shll
fdivr
imul
out
xchg
lahf
adc
xor
mov
cwtl
jge
dec
insl
pop
lds
cmp
cmp
mov
rol
cs
test
or
inc
jne
and
pop
push
lcall
inc
inc
dec
inc
rolb
mov
out
or
xchg
rcll
lret
ret
xchg
loopne
jne
jns
adc
shlb
dec
push
add
jnp
loope
mov
test
xchg
add
push
push
mov
push
xor
jbe
imul
insl
add
pop
push
pushf
add
xchg
sbbl
jp
sbb
push
aas
pop
push
pop
mov
cmpb
xor
xchg
loop
testb
add
mov
incl
sbb
addr16
xchg
cmp
arpl
sub
and
fistpl
add
hlt
jnp
jno
jns
movsl
pop
inc
bound
sub
push
insl
jmp
es
inc
push
fiaddl
xor
bound
jl
call
cmpsb
mov
outsl
das
xchg
add
mov
outsb
imul
mov
lods
xor
mov
idivb
push
add
or
ds
adc
mov
adcb
scas
add
das
call
inc
insb
push
ljmp
jo
push
fmuls
mov
add
jb
push
cld
pop
inc
sub
push
mov
sub
pop
cmp
aaa
ja
dec
loop
xor
divl
and
and
push
outsl
push
cmp
fcomps
icebp
xchg
inc
testl
jnp
test
adc
add
inc
ret
in
or
cltd
mov
ret
into
repnz
and
mov
sub
popa
mov
outsb
push
and
jns
shrb
mov
xchg
pop
cmpsb
add
add
loope
pop
push
dec
push
xor
das
sti
popf
add
sbb
mov
loopne
jg
jb
scas
jns
adc
roll
lcall
popa
sbb
scas
xorps
je
loop
mov
pushf
add
push
or
lds
and
adc
cld
clc
ds
pop
and
dec
loopne
mov
call
sbb
xor
mov
add
mov
cmc
ljmp
inc
jmp
loop
movl
push
mov
xchg
inc
xchg
addr16
fcmovnu
add
sbb
loop
sub
dec
add
cmpsb
loop
add
push
das
inc
or
mov
insl
imul
xchg
lret
dec
daa
push
in
cmc
sti
inc
pop
and
mov
push
fs
rorb
and
cwtl
ret
outsb
cmpsl
into
arpl
movsb
push
mov
add
cmp
bound
mov
add
es
pop
sub
mov
jg
outsb
jo
popa
fistps
insb
xor
sbb
xchg
or
xor
orb
jns
mov
jnp
pop
test
aas
rcrl
lods
adc
mov
adc
daa
push
dec
dec
dec
adc
movb
ret
and
or
cld
jg
addl
dec
inc
jg
push
dec
dec
dec
cs
push
push
ret
fs
lods
or
jb
pop
sbb
xchg
je
pop
cwtl
push
inc
and
insl
inc
imul
lds
inc
push
lds
push
jbe
orl
pop
pop
sub
dec
inc
dec
dec
push
xchg
jo
xor
pop
test
sbb
sbb
negl
add
and
fsubrs
pop
outsl
sbb
inc
inc
push
push
xchg
add
and
ret
jle
push
xor
mov
jae
sarl
gs
jae
loope
or
mov
rolb
subb
xor
adc
dec
mov
in
cmp
int3
push
dec
cmp
push
leave
mov
dec
gs
pop
pop
fisubrl
rorb
pop
xchg
pop
sbb
mov
or
and
xchg
mov
das
not
jno
ljmp
lock
xorl
inc
jne
data16
cltd
fisubrl
fsts
lcall
popa
stc
rcr
aas
mov
add
insl
jo
mov
addr16
fwait
adc
jo
daa
pop
sub
fmul
and
outsl
fs
xchg
xchg
and
pop
and
push
test
jae
pop
into
cld
cmp
ret
or
enter
jbe
pop
mov
push
xor
mov
sub
adc
mov
pop
add
add
movsb
cmp
adc
lcall
stc
idivl
push
sub
movb
and
inc
aas
sub
cmp
aaa
add
mov
xor
inc
dec
sbb
pop
push
je
push
sub
ja
add
push
popa
pop
sbb
push
or
mov
lret
sbb
xor
addl
cmp
mov
ss
mov
jae
insl
jnp
ret
daa
int3
lods
outsl
push
shll
out
or
pop
jns
push
cmp
and
pusha
clc
lahf
mov
add
jp
inc
notl
fwait
jnp
xor
movsb
out
xor
popa
mov
push
add
xor
aaa
push
pop
lahf
das
popf
scas
lret
fwait
sbb
shlb
sbb
add
daa
bound
mov
add
cli
mov
mov
dec
push
out
loope
sub
push
mov
xchg
sub
lods
imul
rclb
and
lods
adc
push
mov
shrb
ret
jae
add
insl
jo
aad
pop
push
gs
je
cs
add
dec
and
fldl
lock
mov
jle
add
jp
sbb
jae
xor
xchg
pop
jecxz
loopne
jb,pt
dec
fldenv
mov
jns
add
mov
mov
in
dec
dec
pop
arpl
sub
jge
fidivs
out
stos
mov
xor
sub
out
xchg
cli
popf
pop
pop
push
and
and
arpl
pop
xor
adc
stos
sbb
test
mov
imul
inc
add
mov
push
stos
xchg
jns
incl
rolb
jae
xchg
call
aas
jae
adc
inc
push
cmp
inc
jmp
mov
adc
movb
pop
pop
and
sub
je
pusha
inc
mov
pop
mov
mov
loopne
aas
dec
cmpsl
lods
add
pop
add
inc
ret
nop
dec
test
mov
stos
jns
mov
dec
inc
negb
push
popf
mov
add
or
jno
mov
cmpsb
sti
pop
jbe
leave
fisubrl
lret
and
and
or
sbb
push
daa
mov
pop
push
push
jns
imul
loopne
out
push
cli
pop
in
and
xor
xchg
inc
mov
aas
or
movl
arpl
add
dec
xchg
sbb
pop
xor
into
sub
jmp
add
inc
mov
cmpl
loop
fmuls
sbb
xor
jbe,pn
mov
orb
shll
sub
or
push
stc
and
jb
jae
daa
sbb
or
outsb
pop
stc
cwtl
add
addb
insb
jne
and
addr16
mov
test
push
arpl
imul
andb
inc
push
stos
cmp
daa
pop
sub
fdivl
mov
or
dec
and
sub
ja
das
out
mov
ret
je
push
or
push
or
adc
arpl
daa
jp
out
ret
mov
cmp
mov
pushf
dec
pop
jg
sub
xor
sub
sbb
gs
divl
sti
filds
test
lods
push
mov
cmp
push
add
xchg
sbb
mov
mov
add
int
jne
stos
push
fmull
scas
sarb
int
rcrl
push
aas
push
sti
enter
xchg
or
ds
fcompp
ds
mov
push
dec
ficoml
lock
jmp
cmc
lods
sub
xchg
and
xlat
mov
pop
push
jo
mov
roll
cmp
jae,pt
into
mov
movl
into
xlat
inc
add
push
sbb
adc
push
pop
ja
outsb
mov
inc
enter
push
add
and
add
and
test
or
stos
sbb
push
jp
jp
enter
cmp
jmp
push
dec
xor
add
sbb
aam
mov
cs
in
out
ss
mov
cmpsl
int
psrld
pop
shrl
inc
jecxz
mov
lret
into
in
stc
fbstp
data16
fcmovnb
jg
out
popf
stos
pcmpgtd
addr16
lahf
cmpsl
icebp
dec
ror
ret
loop
mov
mov
push
sar
sti
enter
lret
shl
mov
mov
cmpsl
insl
ss
fs
ljmp
fbld
mov
ret
jmp
mov
bound
cs
mov
or
inc
push
inc
inc
inc
add
mov
push
mov
adc
push
inc
cli
rol
iret
mov
adc
jae
leave
iret
jo
push
sahf
jge
out
jo
outsb
add
into
les
sub
xor
jl
sub
enter
jl
xchg
lock
jp
mov
mov
mov
mov
aam
out
movsl
sub
push
push
movsb
int
jns
test
in
jnp
push
mov
xchg
dec
xchg
in
add
jmp
lahf
imul
in
andb
pop
dec
and
xchg
idiv
daa
cmc
add
outsb
pop
jmp
jmp
loopne
pop
aas
dec
inc
dec
orl
xchg
add
dec
ja
daa
sub
nop
mov
or
push
mov
popl
mov
dec
push
inc
mov
cmp
les
mov
dec
stc
jg
sub
arpl
iret
jg
bound
push
push
data16
ljmp
pop
dec
mov
and
dec
add
adc
and
mov
mov
lret
outsl
dec
inc
test
push
inc
imul
fs
shl
testl
or
pop
pop
add
mov
sub
or
addr16
incl
xor
das
mov
add
inc
mov
dec
ljmp
outsb
push
add
add
add
addb
aaa
clc
mov
jmp
je
adc
cmp
sub
cmc
cmp
es
in
sbbb
in
daa
jbe
xlat
mov
push
in
daa
or
lods
dec
je
add
js
mov
mov
orb
pop
pop
mov
mov
mov
outsl
pop
add
loopne
push
jg
push
add
popa
adc
aas
out
test
sub
and
xorb
pop
and
add
add
addb
sub
daa
testl
add
stos
daa
es
dec
xor
and
sub
add
pop
jmp
iret
add
pop
mov
and
mov
add
sub
les
orb
jl
or
push
ja
push
ret
or
incl
sbb
add
nop
orb
pop
sbbb
inc
subb
bound
mov
dec
jl
orb
lahf
or
and
arpl
daa
mov
mov
dec
mov
inc
mov
and
push
lahf
cmpsl
xor
jl
sub
push
adc
shrb
push
add
add
add
repnz
out
add
incb
btc
cmp
mov
fdivrs
jns
andnps
or
sbbl
adc
mov
xchg
cvtpi2ps
lgdtl
or
idivb
sahf
out
mov
jo
jae
jbe
pcmpgtd
add
icebp
add
adc
jle
or
jecxz
mov
ds
add
push
mov
insb
fmuls
stos
add
pop
pusha
fldt
jbe
add
jae
xorb
fstl
xchg
imulb
pop
lock
clts
jg
notl
sti
sbb
movsl
outsb
inc
shl
mov
add
cmpsb
in
pop
mov
ud0
out
jnp
cmp
cld
cmp
idivl
addb
add
aad
fdivrs
jne
push
jge
loope
mov
cli
std
xchg
mov
push
xchg
fmull
ja
ja
repz
mov
inc
jbe
add
pop
xor
mov
cmp
ss
into
mov
add
jbe
mov
xor
pop
daa
mov
ja
mov
xchg
jmp
push
frstor
jecxz
and
orb
mov
inc
add
loopne
scas
add
sub
scas
loop
add
mov
or
roll
aas
lods
mov
test
lods
add
enter
push
leave
notb
dec
jl
dec
push
gs
xor
and
add
iret
rorl
jb
push
jne
jae
or
cmp
ja
popa
push
dec
or
inc
or
iret
and
adc
adc
push
mov
pop
jne
push
adc
clc
inc
or
in
decl
xchg
loope
dec
out
ret
dec
stc
pop
pop
adc
cmp
pusha
jb
dec
jge
stos
sub
push
cmp
sahf
xlat
add
adc
dec
jns
out
mov
sub
dec
dec
dec
jo
cmovno
imul
xor
dec
outsl
dec
rorb
pop
lret
stc
int3
loope
test
mov
mov
mov
mov
repz
int
mov
test
in
dec
fdivl
pop
xor
push
into
lods
sub
cltd
mov
repz
mov
fcmovb
jecxz
repnz
xor
mov
mov
and
xchg
mov
mov
iret
out
shll
not
outsb
jnp
mov
outsl
mov
mov
ror
mov
mov
into
aam
cld
dec
pop
mov
mov
mov
fcompl
pop
inc
paddw
aaa
out
aas
dec
xlat
rcl
out
mov
mov
mov
int
dec
aad
pop
scas
mov
sbbl
stc
mov
mov
rcrb
mov
mov
pushl
rcl
mov
fidivs
pop
xor
movsl
ss
leave
aam
mov
ret
pop
xchg
ja
jmp
ds
inc
push
outsl
subb
std
jbe
stos
xor
shlb
cmp
push
mov
push
lods
mov
outsb
jp
ret
rcrb
pusha
xchg
sub
sbb
or
arpl
dec
push
sahf
push
xor
cs
push
xor
jne
es
aaa
and
xor
shll
cltd
and
aas
or
dec
pop
arpl
pushf
jae
push
xor
sub
add
dec
lret
sub
cmp
push
les
dec
inc
pop
dec
shrl
mov
mov
push
or
dec
les
rcr
inc
and
cmpsl
aad
cmp
arpl
daa
pop
addb
test
adc
aam
enter
mov
into
fsubrp
push
xor
mov
mov
cmp
pop
shrl
mov
xor
leave
rcrb
fdivrl
or
hlt
mov
inc
lret
fmul
mov
xor
mov
shrb
push
and
sub
shl
mov
js
adc
push
and
popf
loopne
fsubs
xlat
mov
fbld
xor
sbb
jne
out
insl
push
outsb
add
push
daa
icebp
aam
rcl
es
and
test
sbb
jbe
xchg
sub
push
and
dec
adc
loope
inc
push
dec
push
pop
dec
inc
dec
dec
add
sti
xor
sar
mov
adc
mov
js
fmulp
int3
in
fidivs
lret
das
dec
xor
jle
cmp
fsubrl
mov
das
fcmovbe
stos
mov
mov
addb
rclb
addr16
push
out
push
mov
ss
dec
push
and
jnp
add
ds
nopl
jg
add
repz
repz
repz
addl
inc
cmp
pop
push
xor
sbb
and
adc
pop
pop
mov
pop
aad
push
mov
mov
int3
ret
enter
cmp
repz
add
iret
push
mov
cmp
repz
lods
or
rep
or
or
iret
push
cwtl
sete
nop
cmp
repz
mov
mov
repz
repz
adc
iret
push
js
je
jo
iret
repz
insb
sbb
repz
repz
sbb
iret
push
pop
pop
push
and
iret
repz
dec
and
repz
repz
and
and
iret
es
sub
and
iret
repz
and
sbb
repz
repz
sub
iret
cs
or
add
iret
repz
add
cld
ret
sahf
out
clc
xor
xor
out
in
aaa
call
loopne
mov
push
bound
sbb
sub
inc
add
push
dec
fidivl
push
add
or
lods
add
add
adc
popa
pusha
fs
in
push
outsl
outsl
push
jb
call
fsubs
sbb
pop
sbb
sbb
sub
and
cld
ljmp
push
sub
xor
sub
sub
and
ret
call
insb
imul
jp
outsl
sbb
sbb
sbb
push
pop
and
and
sahf
inc
jb
xor
sbb
sbb
cmpsb
push
sub
pop
add
cmpsl
sbb
or
add
sbb
jb
pop
imul
add
sbb
jb
orb
addb
sbb
sbbb
jnp
or
or
add
leave
inc
pop
sbb
repnz
cmp
or
jb
lods
cmp
sub
sub
enter
xor
and
lret
jo
or
sti
add
rolb
adc
adc
sbb
addb
fcmove
xor
sbb
es
sbb
and
and
orb
xchg
pop
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
in
mov
sbb
adc
add
lods
mov
inc
sbb
and
and
repnz
pop
add
and
fdivs
and
repnz
imul
aaa
add
add
mov
push
sub
and
push
and
sub
xor
mov
sbb
lret
test
xor
push
hlt
and
sub
in
mov
add
sub
add
or
sbb
xorl
add
jb
fcompl
xorb
sub
jbe
inc
xor
pop
sub
xor
cmp
add
push
daa
add
or
idivb
sub
cmpb
adc
insl
es
add
adc
cmp
jg
mov
add
sub
cmpb
inc
je
in
and
add
xor
pop
in
push
mov
and
inc
orb
inc
inc
push
nop
mov
in
mov
mov
aaa
inc
aaa
add
add
fcoms
add
pop
in
sbb
or
add
mov
dec
orb
rcrl
ret
add
dec
dec
subb
dec
push
in
pop
add
sub
nop
and
sbb
lret
mov
sbb
sub
imul
push
or
add
sub
push
xor
xor
push
and
sbb
push
pop
sbb
sbb
and
push
dec
jnp
jnp
push
push
pop
pop
daa
add
sbb
mov
add
sub
rcr
dec
sbb
mov
mov
pop
xor
xor
pop
adc
pop
fidivl
imul
or
add
add
sub
bound
fs
xor
add
ss
or
sub
addr16
jne
insl
add
add
push
imul
mov
adc
add
push
in
insb
orb
add
outsb
ss
sub
idivb
jno
jb
push
je
sub
das
jbe
sbb
ficoml
sub
xor
push
jp
daa
add
das
add
aaa
psrlq
jnp
jnp
pop
xor
fsubs
sub
xor
out
or
xor
jg
sbbb
add
fmuls
sbb
sbbl
ja
add
sbb
stc
add
test
fimuls
pop
add
xchg
sub
sbb
aaa
xor
pop
in
sahf
sub
je
mov
add
and
mov
adcb
add
in
scas
sbb
subb
cmpsl
push
nop
adcb
stc
stos
in
xchg
or
add
xor
sub
add
or
pop
xchg
adcb
xchg
sbb
pop
daa
jb,pn
rcr
xchg
mov
add
push
xchg
sbbb
inc
sahf
dec
push
sub
xor
out
ficomps
fwait
orb
addb
add
popf
cmp
add
sbb
sbb
mov
int3
dec
mov
add
mov
pop
sbb
faddl
movsl
push
cmpsb
adcb
test
popf
in
add
orb
add
jns
das
xor
out
jmp
and
push
pop
lds
sbb
aaa
add
and
out
scas
subb
or
add
inc
jle
sbb
sbb
and
add
or
or
in
pusha
insl
dec
mov
sub
and
rcr
mov
das
add
or
cs
outsb
stos
pushf
sub
add
or
push
leave
add
loop
add
add
sbb
in
pop
sbb
cmpb
mov
sbb
leave
in
fmuls
mov
sub
xor
mov
divl
add
add
sbb
jg
pop
ret
adcb
add
movb
inc
faddp
add
es
lret
xchg
outsb
sub
or
add
and
into
sbb
in
popf
ss
roll
out
push
rolb
aam
add
adc
aad
xor
daa
pop
jnp
iret
es
xorb
int
dec
push
sub
orb
fdivs
jb
mov
add
push
xor
adc
sbb
and
sbb
in
jle
adc
sbb
pop
sub
xor
mov
sbb
orb
add
sbb
sti
outsl
dec
and
and
addb
add
or
pop
repz
sbb
fbld
sbb
int
add
loopne
loope
sbb
loop
pop
enter
and
imulb
cmp
sbbb
add
and
pop
pop
out
push
in
ss
orb
sub
fdivs
ljmp
sbb
popw
repnz
in
sub
pop
xor
jns
sti
add
lock
sub
sub
xor
ds
add
pop
jnp
add
xor
sub
sti
push
leave
leave
sbb
sub
sub
xor
in
lar
and
adcb
sbb
clc
jle
popf
fdivs
add
sbbb
std
mov
sbb
ss
cs
nop
or
test
sub
aaa
sub
mov
xor
xor
jmp
sarl
and
sbb
xlat
fdiv
push
add
orl
inc
and
andl
ss
add
add
and
imul
push
ss
add
adc
and
ss
orl
in
xlat
jp
push
adc
or
xor
or
or
push
sub
push
push
add
mov
enter
adcl
in
lcall
pop
das
add
addl
sbb
sbbl
roll
aaa
push
pop
aaa
or
mov
popf
pop
add
and
add
sbb
add
mov
add
and
sbb
push
sbb
sbb
xchg
or
xchg
and
cmpsb
jbe
sbb
add
ss
dec
add
xchg
or
sub
xor
daa
mov
sub
adcl
rolb
add
pop
insb
add
xchg
add
and
outsl
sub
subl
lcall
jg
cs
adc
sbb
subl
mov
cmp
sbb
orl
jnp
sub
and
and
pop
adc
sub
insl
fcomps
and
xor
xor
sbb
cmp
jb
xor
sbb
sbb
xchg
and
xchg
and
leave
inc
jb
add
sbb
xor
fwait
pusha
inc
in
sub
aaa
inc
sub
cmpl
add
imul
add
cmp
das
xor
cmp
add
or
adc
aas
and
out
xor
inc
dec
insb
pusha
adc
pop
sub
out
popf
add
sbb
or
jae
faddl
sub
jecxz
inc
orl
loopne
xor
aaa
or
shlb
add
out
orl
incb
xor
out
add
adc
and
or
mov
sbb
xor
fwait
aam
adc
adcl
adc
sbb
xor
add
mov
cli
add
xor
xchg
push
push
rcrb
mov
daa
or
and
fimull
mov
bound
sub
jb
pop
lock
je
daa
or
sbb
push
aaa
adc
aad
pop
insb
or
adc
fisubl
andb
push
sbb
push
xor
push
mov
sbb
outsl
push
sbb
or
add
movntps
sub
jmp
inc
add
push
mov
mov
dec
addl
xor
or
ret
sub
sbb
adc
push
push
stos
or
xor
add
pop
push
cs
sub
sbb
xor
xchg
ret
fidivl
push
sub
jbe
pusha
push
mov
or
xchg
sahf
add
adc
xor
sbb
or
add
adcb
push
dec
push
xchg
dec
xor
adc
loopne
and
push
das
add
sbb
popa
int
andb
mov
mov
cld
push
outsb
push
orl
adc
pushw
ret
adc
push
xor
xchg
notb
xor
dec
adc
and
ljmp
xchg
incb
and
sbb
inc
inc
sub
bound
xor
ljmp
lcall
push
popa
pop
loope
adc
into
or
mov
sub
out
push
and
push
push
sbb
fiadds
sbb
rcrb
es
cs
inc
or
xor
push
ljmp
jp
pop
pop
pop
or
xchg
xor
xor
daa
out
into
push
sub
sbb
rcrb
push
sbb
adc
addl
adc
push
cs
and
add
bound
shrl
cmpl
push
mov
xchg
pop
or
sub
sub
inc
push
cmp
and
add
mov
cmp
das
pop
orl
add
xor
mov
inc
ficoml
jbe
sbb
pop
data16
add
or
or
or
xchg
cmpsb
sbb
ljmp
xor
jbe
sbb
xorb
adc
and
sbbl
push
ds
xor
into
adc
adc
rorl
out
dec
testb
xchg
inc
jp
add
cwtl
xor
adc
test
sub
and
mov
xor
rorl
popa
adcl
aaa
mov
xor
lods
into
add
xor
pop
ljmp
push
jbe
arpl
sahf
mov
and
ds
call
adc
push
mov
xchg
push
push
and
cs
gs
adc
mov
andw
inc
add
ret
jb
cmpsl
add
cmpsb
adc
add
dec
pop
push
push
mov
push
sbb
bound
push
push
xor
pop
xor
xor
inc
aaa
jb
mov
mov
es
loopne
add
mov
fsubrs
pop
cli
adc
rcrb
es
mov
add
add
inc
lds
sbb
or
or
xor
or
sub
repnz
add
out
subl
ds
rol
sub
add
add
cmp
xchg
gs
push
ficompl
imul
dec
cs
loopne,pn
mov
mov
insl
orl
push
push
pop
or
scas
sahf
mov
outsl
bound
xor
jmp
sub
sbb
or
push
add
stos
push
or
mov
add
test
mov
cmp
sub
pop
xor
add
addl
sbb
mov
jo
int3
sbb
adc
loop
push
imulb
jo
scas
add
adc
or
jno
xchg
add
cmpsb
add
adc
xorb
scas
and
adc
cmp
pop
je
and
push
shlb
jle
xor
daa
or
or
pop
sbb
adc
sbb
sbb
dec
pusha
xor
jbe
data16
ret
or
push
cs
dec
and
mov
mov
jp
fimull
sbb
cmp
adc
bound
roll
test
xor
sub
into
aaa
scas
add
shlb
popa
xor
es
jp
jle
cmp
popa
mov
out
or
jl
ss
fidivrs
sarl
lcall
ret
cs
ret
jge
xor
or
xchg
jle
lcall
bound
mov
and
adc
add
or
mov
jg
mov
xchg
inc
push
aaa
sarb
les
cmpb
and
test
out
mov
popa
push
loopne
lcall
sbb
add
bound
and
sub
add
movl
adc
or
xor
push
or
sbb
stos
jno
stos
lret
xchg
push
cmp
mov
rcrb
cwtl
mov
sbb
roll
sub
sbb
mov
xor
loop
dec
add
mov
jne
scas
mov
andl
sbb
xorb
les
stos
cs
push
sub
cmp
or
inc
test
pop
and
dec
add
outsb
out
or
add
mov
cmp
xchg
test
adc
movsb
and
loop
fisubl
add
lcall
push
jbe
mov
js
adc
cmpsb
ss
movsl
jb
xor
into
add
adcl
add
cmpb
repnz
push
cmp
sbb
mov
xor
sbbl
inc
ss
loopne
test
jle
mov
push
push
push
sbb
sarb
xchg
sbb
fimull
push
adc
dec
sbb
cmpsb
mov
cs
mov
mov
xor
pop
mov
pop
in
mov
sbb
pop
pop
pop
js
rcrl
outsb
rclb
inc
xor
outsb
push
roll
pop
or
cmp
fidivl
xchg
or
adc
scas
cmp
insb
out
push
push
or
jne
push
and
aaa
sub
lcall
dec
adc
subb
mov
add
adcl
out
fisubrl
jb
inc
loopne
push
iret
add
addl
mov
xchg
mov
xchg
sbb
and
push
test
sahf
mov
mov
sub
hlt
add
outsb
push
dec
repnz
pop
pusha
sbb
xchg
adc
sub
scas
xchg
adc
fimull
lods
inc
cli
cli
and
add
test
out
sbb
pusha
fs
out
stos
mov
add
adc
mov
stos
and
movl
pop
adc
int3
xchg
cwtl
negb
cmpsl
and
or
mov
sahf
xor
mov
cltd
xchg
xchg
add
add
into
mov
lcall
pop
stos
or
cmpsb
pop
sbb
lock
xchg
sub
stos
mov
scas
test
loop
dec
and
shll
and
inc
add
push
cmp
bound
cmp
push
mov
in
pop
andl
adc
adc
mov
or
jbe
jo
dec
xor
or
sbb
cmpl
push
aas
sbb
xor
add
ss
jbe
mov
bound
adc
and
mov
pop
jbe
add
int3
test
mov
jae
ficoms
jbe
or
sub
daa
scas
sar
into
xor
jecxz
bound
xchg
and
inc
ss
mov
rolb
dec
cmpsb
push
or
repnz
dec
mov
ljmp
push
xor
adc
push
adc
pop
orb
es
pop
push
xor
sahf
bound
xor
data16
jle
mov
mov
js
push
dec
popf
add
push
lods
push
ds
add
rolb
es
loope
loope
aaa
fisubs
xor
pop
xchg
rolb
sbb
dec
movsl
push
push
into
mov
pop
jae
scas
push
mov
jb
sub
ret
cmp
sar
xor
jbe
test
outsb
adc
sahf
mov
add
jle
mov
adc
sub
sbb
lods
or
push
sbb
or
pop
push
push
mov
mov
cli
add
or
ljmp
mov
xor
loope
sub
xchg
dec
mov
xchg
orl
push
push
xchg
mov
and
push
out
jecxz
dec
mov
push
lret
inc
adc
repnz
frstor
sbb
push
mov
adc
cmp
mov
sub
and
push
add
push
or
rcr
cwtl
add
sbb
test
pop
mov
movsl
addl
popa
cmp
lret
push
dec
sahf
ds
push
pop
sub
test
bound
sbb
sub
push
adc
mov
adc
into
pusha
ret
and
stos
scas
xor
andl
sbb
stos
and
rclb
sbb
or
inc
ret
fcom
shll
ss
daa
into
adc
sub
adc
push
push
shr
push
lods
adcl
push
shll
sbb
lcall
daa
pop
mov
adc
lea
into
dec
or
add
stos
push
xchg
mov
mov
adc
xor
push
or
push
add
ds
adc
bound
mov
xor
jp
loop
sahf
rorb
push
and
sub
xor
lcall
dec
es
fiaddl
sbb
sbb
or
data16
sbb
inc
push
xchg
inc
ret
adc
dec
mov
inc
movl
scas
or
and
mov
lods
sub
and
inc
sub
and
lcall
xor
sbb
sbb
repnz
shrb
xor
bound
push
enter
jle
aaa
and
ret
push
cmpb
mov
and
add
push
es
mov
and
push
roll
dec
add
sbb
adc
or
push
sub
sub
xor
ds
popa
xor
push
mov
xor
pusha
push
push
cmpsb
out
pop
push
push
in
jbe
pop
sbb
add
or
stos
sub
sub
mov
adc
jbe
sub
sub
dec
loopne
add
jp
or
add
mov
popf
adc
addl
incb
mov
cli
mov
xchg
sub
bound
add
or
mov
sub
mov
cmp
mov
popf
js
fstl
adc
fsub
aad
sub
sbb
xor
rcrl
loop
lret
sbb
lods
fmuls
xchg
push
sbb
xor
jo
shl
pop
jle
es
push
fiaddl
pop
mov
sub
insl
out
ss
or
test
inc
adcb
bswap
fisubrs
out
mov
divl
xchg
mov
ss
mov
or
xor
or
fidivs
mov
xchg
pop
repnz
xor
sub
adc
sbb
bound
bound
and
xor
adc
or
bound
add
push
sbbb
and
push
mov
and
pop
and
pop
xor
or
sbb
ret
in
les
sbb
push
sub
lret
dec
mov
and
xchg
bound
sbb
pop
inc
xor
shlb
adc
sbb
pop
push
fildl
sbb
adcl
cmp
push
cli
xor
push
es
into
or
push
xor
pop
cli
cmp
sbb
faddp
push
cs
je
pusha
xchg
and
pop
xor
push
or
cltd
dec
cs
sbb
push
adc
push
add
fs
push
test
push
add
add
and
jae
out
or
sbb
push
or
push
xor
or
xor
mov
in
sbb
add
lods
add
add
cli
daa
lcall
fisubs
inc
lds
jbe
ret
push
add
or
add
sub
pop
push
cmp
push
adc
xor
or
sub
or
push
xor
das
ret
inc
or
and
dec
addr16
add
out
ds
xor
mov
das
dec
fisubl
push
sub
mov
pop
rol
and
push
iret
push
sub
xchg
sub
bnd
adc
cmp
cmp
xchg
xorl
push
and
push
xor
xchg
push
add
subb
adc
inc
pop
cmp
pop
sbb
aad
push
adc
adc
jo
cmpsb
jle
xchg
push
adcl
xor
repnz
sub
jle
push
shrb
adc
or
and
leave
sbbl
int3
test
sbb
add
add
daa
xchg
push
sub
rorb
sub
cmp
dec
add
cmpsb
test
fiaddl
xchg
lret
lcall
das
xor
cmpb
or
add
lret
pop
pop
xchg
or
push
sbb
mov
aam
add
xor
xchg
sbb
mov
push
addb
rclb
and
adc
xchg
push
es
sbb
repnz
int
dec
aam
ds
adc
and
cmc
add
pop
push
lret
std
es
adc
sbb
mov
push
pop
jp
or
xchg
mov
and
mov
sahf
or
test
or
cmp
and
aad
daa
outsb
repnz
test
sbb
push
es
xorl
push
adc
pop
xor
lcall
lea
out
or
xchg
xchg
out
mov
das
adc
das
or
ljmp
jg
add
add
sub
pop
ljmp
mov
adc
into
or
adc
and
push
dec
test
into
pop
add
mov
gs
icebp
sbbb
cmpsb
out
test
int3
and
adcb
loop
dec
xor
fs
xchg
jb
sbb
int
sub
jp
and
lock
cli
add
pop
dec
push
push
and
and
push
push
cli
sub
jbe
sbb
dec
xor
loop
out
mov
cli
mov
add
jbe
sbb
fidivrl
adc
xlat
pop
adc
rcrb
sbb
sub
push
ljmp
je
stos
or
mov
lcall
sub
sub
mov
adc
bound
or
pop
mov
push
xchg
mov
std
adc
inc
push
push
pop
pop
push
rcrl
inc
xor
or
push
add
or
enter
cs
and
jbe
repz
addl
pushw
outsb
pop
lods
loopne
outsb
adc
adc
inc
adc
test
sbb
pushf
ret
cli
movb
adcb
xor
push
jb
cmpsb
mov
sub
aam
xchg
stos
add
push
data16
adc
add
arpl
xchg
into
sarb
aad
jo
sbb
add
je
in
ljmp
push
inc
cwtl
push
add
push
inc
xor
xchg
add
neg
adc
jb
das
fiaddl
mov
sti
lcall
mov
xchg
and
divb
fildl
xchg
dec
das
add
xor
mov
adc
bound
push
sbbb
push
loop
or
into
outsb
mov
sub
and
les
scas
mov
mov
frstor
les
or
out
loop
add
push
shrb
jge
add
dec
and
xor
xor
xor
mov
xchg
out
notb
inc
sbb
push
pop
outsb
jbe
and
mov
pusha
and
mov
divb
or
cmpsl
add
nop
mov
mov
lods
sbb
jbe
add
data16
mov
cli
push
xlat
test
push
xchg
mov
into
xor
sub
and
int3
add
and
jle
out
ret
sbbb
into
test
data16
subb
push
adc
and
es
scas
add
pop
mov
hlt
add
add
loop
push
adc
rorl
push
lods
dec
mov
lret
jle
sahf
inc
sub
sahf
out
fs
aaa
push
push
adc
push
pop
loopne
jb
xchg
ss
sub
jnp
xor
jp
push
add
sbb
xchg
rcll
jno
adc
add
out
sbb
push
mov
negb
loop
push
ja
test
ss
pop
fidivrl
or
mov
sbb
mov
dec
add
cs
jp
je
inc
sbb
push
and
or
push
push
pop
aaa
or
adc
xchg
mov
cmpsb
ss
add
dec
xchg
dec
push
sarb
shlb
cmp
push
ljmp
or
or
out
ds
imul
cmpsb
push
or
adc
shll
insb
pushf
and
out
dec
arpl
add
or
out
push
or
out
push
rcr
push
in
push
and
test
xor
jbe
or
sbb
add
movl
jnp
or
or
push
or
jnp
add
loop
push
or
pop
inc
cmp
and
push
lahf
leave
je
cs
or
cmp
adc
rorb
aaa
mov
stos
inc
fisubl
push
jle
jecxz
add
and
pushf
sbb
out
cs
and
or
pop
xchg
daa
aam
stos
fisubrl
or
add
push
into
sbb
inc
mov
cmp
or
or
push
xor
sbb
jno
inc
out
and
or
cmp
or
pop
or
sbb
daa
xor
cs
popf
bound
xchg
in
xor
xchg
popf
push
stc
mov
or
xlat
push
or
add
mov
into
rclb
or
xor
mov
or
sbb
xor
shrl
cmp
or
or
or
fnstenv
bound
push
or
push
fsubl
pop
or
lea
xchg
repnz
mov
loopne
xchg
or
push
or
adc
in
sbbl
push
adc
or
xor
shlb
or
jmp
mov
add
push
fsts
or
or
pop
push
push
or
or
or
xchg
push
mov
cs
and
and
imul
sbb
xor
outsb
push
jae
sub
and
dec
pushf
imul
jle
sbb
and
pop
and
xchg
cmpsl
popf
xchg
testb
add
xlat
push
jb
or
or
push
aaa
or
add
mov
or
push
jb
inc
je
daa
mov
add
aas
cmpsl
cltd
mov
or
push
or
and
pop
inc
dec
mov
push
or
insl
xor
adc
cmp
or
mov
xor
ds
add
ds
mov
push
sahf
aaa
call
outsb
icebp
or
mov
adc
cmp
test
add
mov
popf
or
or
mov
into
or
or
xlat
or
cmpsl
jbe
add
and
or
cmp
sbb
daa
add
xchg
jns,pn
pop
addr16
pop
adc
xchg
in
mov
or
aaa
add
sub
mov
push
ljmp
inc
push
adc
pop
push
ret
inc
xchg
test
or
mov
rol
sub
or
push
nop
repnz
add
mov
adc
or
pop
push
pop
mov
mov
or
addb
aaa
adc
inc
sub
cs
outsl
fisubs
popf
ds
push
pop
and
inc
and
pushf
or
or
or
adcl
push
push
das
xchg
inc
inc
or
pushf
inc
or
add
cmp
lds
imul
mov
fisttpll
pop
and
or
sub
or
or
mov
adc
and
fistpll
scas
push
mov
push
adc
and
or
ret
stos
cmpsl
nop
add
push
and
push
cmp
imul
add
into
and
sub
xorb
or
out
bound
add
fcmovnb
push
cmpsl
add
or
or
test
pushf
fisttpll
addr16
push
lcall
mov
adc
sub
mov
and
add
push
xchg
push
outsb
xchg
push
xlat
movsb
xchg
cs
inc
push
ret
mov
and
mov
or
imul
push
mov
push
out
xor
rol
pushf
pop
pop
ret
add
aad
mov
add
pop
sub
push
sub
adc
dec
ret
or
es
sbb
mov
xchg
lret
jle
pop
sbb
and
mov
adc
and
sbb
lods
jl
xor
cs
iret
push
ret
jp
repz
pop
adc
aaa
out
sbbb
ret
lea
push
inc
ret
mul
and
or
jl
dec
lock
rcll
or
ficoms
repz
jbe
add
ljmp
push
cmp
and
xor
fucomp
sub
and
ret
imul
push
in
aam
cli
mov
add
les
push
sub
adcb
sub
ret
mov
xor
test
dec
push
mov
lcall
sbb
push
xor
push
inc
cwtl
or
jg
jmp
out
pop
jmp
or
or
ret
add
popa
or
mov
adc
or
mov
push
push
pop
adc
cmpsl
xlat
cltd
ficoms
adc
inc
xchg
add
int3
cmpsl
adc
inc
dec
xor
xor
xchg
xor
addb
data16
xchg
divb
sub
jbe
cmp
arpl
or
mov
jbe
fs
add
xchg
pop
or
push
dec
xchg
xchg
ret
loope
dec
out
add
xlat
test
dec
shlb
push
xlat
push
je
mov
cmp
imul
jne
imul
push
popa
popa
push
outsb
outsb
mov
pop
jne
imul
out
dec
outsb
push
and
push
adc
aas
pcmpeqw
jae
inc
push
popa
pop
jle
outsb
es
jne
cmp
mov
es
pop
gs
repz
dec
jns
jae
jp
js
iret
repz
push
imul
repz
insb
push
outsb
je
xchg
aaa
xchg
push
mov
mov
out
negl
push
jp
push
or
fisubs
out
cmp
push
adc
or
rcl
mov
cmp
sub
aas
and
jbe
push
push
jle
out
pop
mov
add
sub
dec
jl
imul
pop
cmpxchg
mov
mov
or
sub
std
add
fidivrs
fbstp
mov
orb
pop
inc
aam
rol
shlb
pop
push
pop
push
add
sti
ja
mov
shl
aaa
jbe
push
adc
or
inc
inc
sbb
mov
jl
inc
aaa
jl
dec
sub
gs
scas
sbb
mov
out
inc
sub
fdivrl
push
or
pop
mov
nop
inc
or
addb
in
xchg
jo
and
pop
xor
leave
sub
iret
daa
add
addb
or
stos
xor
and
mov
inc
push
jne
push
jl
enter
aas
jg
fstpt
jnp
pop
pushl
pop
aas
and
cmp
outsb
aas
decl
sbb
aas
out
cmp
fwait
das
stos
push
adc
cmp
pusha
or
mov
cmpl
ss
inc
ja
mov
and
xor
or
sbb
arpl
fcmovne
mov
push
push
pop
push
or
adc
push
xor
jae
mov
add
int3
dec
xchg
push
pop
js
add
insl
mov
push
xor
inc
push
push
or
int
adc
push
test
pop
das
ret
add
int3
sub
xor
gs
bound
and
fildl
call
sbb
addr16
sub
mov
push
cli
jns
sub
pushf
shlb
or
fbld
hlt
push
xor
in
jge
xor
test
test
sbb
fiadds
ss
adc
cmp
and
faddp
cltd
cmp
or
dec
mov
push
fldcw
fwait
jb
push
inc
cmp
pop
cmp
ljmp
mov
loopne
mov
lods
inc
push
cmc
dec
mov
cwtl
pop
and
or
data16
inc
popa
and
sbb
bound
fcmovne
int3
push
scas
sub
pop
shll
imul
fistpl
cmp
int3
repz
or
add
pop
jno
test
or
outsl
push
mov
pop
cmp
loop
ret
xlat
push
gs
negb
dec
das
mov
fidivrs
ja
mov
das
pop
repz
outsb
mov
repz
jecxz
cmp
or
and
push
pop
push
int
pop
data16
add
pushf
cltd
cmp
or
in
pop
pushaw
and
inc
pop
push
jnp
jo
mov
xchg
and
scas
mov
jbe
outsl
xor
cmpsl
fadds
mov
push
xlat
es
xor
inc
lret
cmp
stos
pop
jp
mov
ds
push
outsb
jg
shll
out
mov
or
cld
shl
repz
repz
in
aam
iret
repz
les
iret
repz
mov
rep
fs
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
and
stc
cmp
repz
or
cld
iret
out
sahf
cmpsl
hlt
in
in
aam
out
sahf
enter
cwtl
mov
out
xorb
out
sahf
out
cmp
adc
repz
add
into
loopne
shlb
nop
xorb
sbb
repz
pop
cmpsl
or
inc
push
iret
repz
inc
inc
inc
inc
inc
inc
cmp
repz
dec
dec
dec
dec
repz
repz
dec
dec
push
push
iret
repz
push
push
push
push
push
push
jmp
pop
pop
sbb
adc
movsb
jno
jb
jbe
imul
iret
repz
or
or
or
cmp
repz
or
or
repz
or
add
add
iret
repz
add
add
repz
repz
or
or
repz
or
or
or
lret
cmp
or
add
mov
mov
add
pusha
and
aas
pop
sub
imul
pop
jb
cs
xor
add
jb
adc
aaa
and
jb
xor
jb
cmp
fcomp
or
push
jne
das
mov
cmp
mov
xchg
pop
jb
cmp
ss
xor
xor
loopne
in
aas
sbb
outsb
xchg
or
das
xor
dec
dec
dec
aaa
ss
dec
xor
xchg
add
mov
lods
mov
or
mov
pop
cmp
out
pop
mulps
cmp
cmp
push
push
cmp
cmp
push
push
push
push
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
inc
inc
inc
inc
mov
inc
inc
mov
test
stos
nop
out
repz
aad
dec
push
inc
cmp
inc
dec
push
inc
dec
inc
clc
cmp
push
int3
insl
jae
lds
pop
out
cmp
insl
sub
jbe
negb
jl
mov
adc
aas
ja
and
and
pop
loopne
cmpsb
sub
jg
jmp
cmpsb
stos
pop
push
lret
outsb
outsl
xchg
push
pop
dec
dec
add
add
fiadds
cmp
push
in
loopne
cmc
xor
xor
shrb
sbbl
mov
jp
pop
jg
data16
sahf
out
sahf
mov
sti
jns
out
mov
js
push
clc
push
testl
sub
adc
cld
fcomi
cmp
repz
repnz
int3
cmp
cmp
out
fisttps
out
xor
cmp
repz
and
or
out
sahf
out
loopne
lods
out
out
call
out
push
stc
sahf
out
in
push
in
jecxz
hlt
fxch
repz
loop
loope
loopne
cmp
repz
jl
pop
fst
cmp
sbb
jg
mov
push
fld
fmuls
push
xlat
pushf
jo
jns
out
push
aam
push
shll
shl
jns
out
rcll
sar
xlat
iret
repz
iret
in
int3
int
cmp
repz
movsb
lret
js
repz
repz
leave
inc
enter
cmp
sahf
add
sarl
aam
popl
ret
jns
enter
shrb
mov
out
out
pop
mov
cmp
ds
repz
mov
repz
push
mov
mov
mov
cmp
cmp
mov
push
mov
or
add
dec
xor
jmp
add
outsb
add
mov
cld
rol
inc
add
sub
mov
jbe
xor
pusha
ja
repnz
ror
lahf
adc
cli
mov
mov
repz
sub
movb
mov
shr
test
pop
ss
mov
int3
cmc
je
mov
lock
popf
add
mov
add
fmul
jecxz
mov
push
dec
pop
mov
cld
and
xor
mov
pushf
add
daa
cmpsb
mov
shlb
popf
aas
sar
mov
aad
rol
rorl
mov
mov
add
inc
dec
decb
loopne
scas
jp
loopne
enter
ret
pop
push
stos
add
aas
aaa
notl
shlb
cs
fildl
aas
push
sbb
add
test
ret
jecxz
adc
repz
inc
rcrl
dec
daa
enter
mov
pop
iret
std
adc
mov
xchg
data16
pop
aas
add
or
or
xorb
arpl
add
iret
out
rcl
sub
test
ret
sarb
dec
add
test
and
fnsave
push
adc
xchg
aas
cmpsb
gs
sbb
push
inc
cwtl
dec
push
xchg
and
push
mov
mov
mov
sub
jmp
xchg
and
lret
daa
pop
mov
ret
shll
daa
pop
sbb
rcr
scas
pop
outsl
mov
nop
dec
out
aad
in
pusha
jo
out
inc
dec
rcll
mov
and
inc
daa
push
into
stos
mov
mov
or
outsl
lahf
ja
push
addb
das
cmpsl
mov
cmpsl
int3
stos
mov
das
jg
daa
pop
out
mov
das
fwait
adc
pop
push
push
dec
lret
lock
cmp
aaa
mov
inc
jno
sbb
adc
in
shlb
out
shlb
scas
int
inc
xor
test
aas
pop
inc
mov
fstpt
adc
add
shrl
out
pop
clc
test
pop
sub
and
and
aaa
aam
bound
xor
test
cwtl
sti
pop
adc
mov
push
add
mov
mov
or
jmp
push
or
mov
pop
xchg
add
mov
pop
mov
adc
sarb
js
movb
jmp
std
mov
add
scas
mov
sbb
jecxz
lea
and
jnp
fdivrs
nop
mov
lahf
pop
loopne
outsl
int
pop
aas
or
fwait
mov
mov
pop
jae
xchg
add
aas
out
push
jo
add
adc
je
dec
add
xor
daa
jge
xor
cs
ret
mov
inc
sub
pop
dec
idivb
sti
pop
scas
pop
mov
cli
leave
cli
ret
add
mov
int
das
shll
iret
cs
cmovg
daa
mov
and
or
cmpsl
jle
adc
mov
mov
jg
mov
and
mov
aas
addr16
mov
sbb
rclb
faddl
and
xchg
jne
push
sbb
sub
pop
push
inc
loopne
lret
aad
stos
jle
sbb
fs
hlt
jo
sbb
or
or
sbb
mov
push
les
js
pop
out
mov
cmpsl
sbb
or
push
mov
and
daa
or
js
mov
loopne
or
jb
sar
daa
dec
mov
push
cmp
jne
inc
push
add
iret
mov
xlat
repz
std
addr16
mov
iret
ret
insb
jb
out
sub
mov
arpl
negb
out
sbb
in
pop
lret
lds
cmp
push
lock
pop
mov
icebp
mov
and
add
pop
repz
repz
pop
pop
pop
pusha
pop
or
iret
popa
bound
fmulp
repz
mov
les
cmp
cwtl
nop
mov
lret
xor
add
into
pop
enter
jl
ljmp
lds
out
ja
test
movntq
pop
pop
pop
nop
xor
std
pop
fdecstp
xor
fstl
inc
mov
adc
fcoml
sub
das
outsl
and
dec
test
pop
mov
jecxz
dec
in
xchg
mov
mov
jo
mov
push
leave
pop
push
shlb
lar
mov
pop
inc
mov
push
rolb
pop
mov
sub
add
pop
sbb
mov
push
pushl
adc
jge
mov
push
adc
loopne
push
call
pop
xor
loopne
loopne
fmuls
jge
sbb
pop
enter
jl
fcomp
mov
cmpsl
test
pop
mov
mov
pop
mov
ds
outsl
pop
popf
testb
mov
push
sbbb
js
mov
out
mov
in
bswap
aas
cmp
int3
shlb
loopne
mov
jne
insl
dec
ret
in
pop
xlat
iret
mov
cmp
xlat
and
mov
jg
jg,pt
fcomps
out
jp
pop
shufps
or
rcr
orb
pop
xchg
sbb
rol
mov
fiaddl
jg,pn
mov
jg
stos
pop
mov
add
inc
outsl
mov
pusha
sbb
ja
mov
scas
push
lret
jle
clc
xlat
cmpsl
pop
cltd
stos
add
cs
incl
and
inc
dec
inc
dec
add
scas
enter
push
xchg
xchg
pop
push
cmp
out
sahf
js
mov
repz
and
repz
dec
insl
jne
dec
push
mov
push
inc
das
push
mov
adc
add
aas
xchg
fdivrs
aas
scas
aas
inc
fwait
sub
aas
out
test
push
leave
aas
iret
sbb
and
mov
ss
pushl
rcr
mov
inc
inc
pop
pop
mov
fiadds
and
fidivl
mov
ja
flds
push
lret
xchg
fidivl
das
xor
dec
sub
mov
das
xlat
pop
sub
mov
pusha
rcr
outsb
add
xor
adc
xor
mov
das
adc
or
sub
sahf
push
dec
pop
jae
add
or
push
pop
sbb
fwait
gs
pop
inc
inc
pop
pop
mov
inc
pop
push
push
inc
push
inc
jg
movl
add
pop
test
mov
fiaddl
push
pusha
adc
comiss
add
dec
scas
dec
dec
xor
push
xor
mov
push
push
addr16
lcall
jg
or
cmp
push
dec
push
inc
inc
mov
aas
cmp
dec
inc
vmovsldup
aas
mov
inc
push
inc
fwait
push
cmpsl
sahf
or
testl
icebp
push
pop
out
andnps
adc
nop
jge
cmp
add
and
ss
out
mov
lods
adc
ret
lcall
mov
out
xlat
fimull
pop
sbb
daa
fbld
mov
aas
cmpsl
loope
mov
pop
dec
movsb
jmp
push
adc
pop
and
pop
cmp
push
das
or
insb
jnp
or
cmpsb
jno
dec
ja
xchg
outsb
pop
add
or
ja
aas
dec
dec
dec
push
add
add
or
std
or
dec
or
inc
cwtl
inc
insb
in
adc
jno
push
mov
adc
aas
into
aas
dec
lods
xchg
add
cmpsb
add
test
push
push
add
es
lcall
in
pop
pop
pop
sub
push
jbe
aas
aas
xor
adc
negb
add
or
inc
xchg
pop
jp
outsl
mov
add
xor
out
xchg
push
in
fsts
add
dec
call
add
xchg
inc
mov
pop
loopne
repz
sub
push
fcom
ror
iret
repz
enter
movsb
cwtl
jns
out
nop
pop
test
sahf
out
jo
push
sahf
pusha
pop
pop
push
dec
inc
cmp
in
cmp
sub
and
jns
iret
repz
clc
test
sahf
out
fmul
shrb
notb
add
add
repz
repz
outsb
daa
daa
iret
or
or
aaa
or
jne
scas
or
daa
cmp
es
adc
adc
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
jns
or
pop
xchg
sub
mov
and
pop
aas
into
aas
xlat
pop
sbb
add
add
stc
movsb
add
jns
and
addr16
movsl
sbbl
out
test
shll
decb
in
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
or
mov
ficompl
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
xor
inc
das
or
adc
aaa
lods
aaa
ja
lods
inc
xchg
push
or
jne
push
inc
sbb
adc
lods
adc
adc
sbb
cmp
mov
sarl
sbb
stos
sbb
js
iret
repz
jns
jp
jo
jge
in
inc
mull
outsb
add
add
jg
mov
loopne
fsubl
jno
or
pop
adc
ss
or
sbb
xchg
std
aas
mov
lret
adc
mov
add
or
icebp
std
add
lret
xor
cld
lahf
lcall
or
pop
pop
or
add
test
repz
sbb
cmp
repz
insb
adc
cmp
and
or
cmp
inc
adc
xor
xor
sub
repz
and
or
out
iret
repz
or
push
adc
scas
lock
sahf
out
push
call
out
sahf
fsubl
fsubs
in
pop
pop
out
iret
clc
cmp
push
lods
lods
movups
mov
sub
push
or
aas
mov
sbb
out
fistps
shrb
cmp
loope
test
jg
dec
adc
sahf
out
sahf
dec
push
pop
pusha
data16
jns
out
jb
xchg
test
out
push
adc
repz
and
cmp
repz
ret
out
sahf
cmpsl
stc
push
adc
xor
out
sahf
out
test
jl
ljmp
iret
repz
bound
scas
stc
cmp
repz
shl
push
adc
jns
cmpsl
push
xor
jno
hlt
jns
jbe
stos
ret
and
and
add
pop
in
bound
push
push
inc
negl
pop
or
outsb
cmc
or
mov
sbb
mov
sub
and
push
add
addl
sub
push
mov
ja
aaa
xchg
je
stos
add
xchg
cwtl
push
inc
jae
mov
icebp
pop
mov
adc
add
ss
jne
rol
sub
push
cmp
pop
pop
out
adc
or
cmp
mov
xorb
incb
push
push
mov
inc
jg
add
scas
ss
sbb
xchg
in
push
push
rorb
dec
dec
sahf
sbb
in
dec
dec
mov
mov
xchg
or
jno
dec
push
add
out
ret
cmp
xchg
mov
int
jns
repnz
das
dec
sub
inc
test
lret
xchg
xor
cmpl
add
inc
mov
es
or
pop
outsl
mov
scas
and
or
shll
jg
mov
cmp
mov
add
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
clc
lcall
lds
mov
cmpsb
lock
mov
popa
incl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fld
cmp
and
sbb
int
pushl
cltd
add
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
dec
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
pop
ficomps
frstor
pop
cmp
or
push
and
jb
jb
add
jne
roll
in
xchg
dec
adc
push
cwtl
dec
adc
ficompl
add
dec
add
fwait
dec
adc
scas
lods
mov
dec
adc
bound
pop
shrl
push
mov
jbe
push
adc
mov
mov
pusha
mov
mov
hlt
scas
aad
loop
xor
jns
add
mov
jp
cmp
pop
push
inc
loop
jge
add
push
sub
jg
add
mov
xor
in
push
lods
cltd
jl
push
cmpb
sub
aad
out
push
or
xchg
push
jno
loopne
push
push
jg
cmovno
adc
inc
data16
push
pusha
adc
sbb
adc
js
adc
add
mov
or
mov
or
es
mull
add
xor
cld
jb
adc
sbb
xchg
or
sbb
ficomps
stos
cmp
add
mov
push
pop
or
mov
pop
push
out
add
data16
and
fcmovnbe
cli
addb
push
stc
xchg
icebp
lret
and
add
and
sbb
add
daa
popa
pop
addr16
arpl
pusha
add
sub
pop
rcll
inc
jmp
cmpsl
mov
sub
push
imulb
push
and
sbb
xor
inc
push
sahf
pushf
and
outsb
scas
jle
outsl
xor
xor
dec
les
sub
pop
rcll
xor
add
sysenter
icebp
cmp
add
cmp
js
add
inc
push
xlat
mov
pop
cmp
push
mov
imul
jo
inc
clc
sub
add
mov
mov
inc
ret
mov
cmp
shlb
inc
aaa
pop
test
and
sbbl
lea
mov
mov
in
punpckhbw
push
xor
cld
insb
std
cltd
push
xor
mov
or
test
cmp
outsl
cli
xchg
mov
mov
loopne
loopne
loopne
push
incb
mov
dec
push
push
nop
add
sub
fidivrl
xchg
or
orb
pusha
sarb
push
push
add
dec
cmp
orb
add
repz
lock
add
sub
adcb
int
in
sahf
jb
push
scas
rolb
add
dec
or
or
mov
add
push
add
repz
pop
adc
push
push
xorb
iret
repz
mov
enter
iret
repz
clc
ja
add
jns
cmpsl
js
jns
addr16
lcall
mov
mov
jl,pn
jns
add
rolb
call
mov
pop
sbb
xor
loopne
out
mov
aas
or
pusha
cs
sarb
rclb
sahf
out
push
cmp
fsubrs
ss
out
jle
push
add
pop
adc
out
cmp
mov
sahf
out
dec
push
push
push
sahf
out
cwtl
adc
sahf
out
loopne
clc
sbb
repz
adc
sbb
sbb
mov
pop
or
jo
popl
add
cwtl
push
jg,pn
mov
lods
jbe
jmp
ljmp
jb
out
dec
pop
das
adc
pop
enter
add
push
pop
and
enter
enter
nop
mov
mov
pop
enter
loopne
cltd
inc
pop
and
or
nop
or
add
xor
mov
or
lods
in
add
jbe
cs
adcb
nop
or
mov
das
nop
lock
adc
add
sbbl
add
jb
pop
and
add
sbbl
lock
das
add
and
inc
pop
leave
xor
pop
add
pusha
mov
loopne
jo
cmp
pop
in
push
shlb
pop
repnz
fcoms
sub
pushf
nop
xchg
xor
pusha
ds
aas
out
in
test
inc
mov
movsb
cmp
dec
add
inc
inc
or
bound
rcrb
pop
mov
adc
dec
push
in
dec
sbb
dec
js
int
enter
lods
push
or
movl
rcl
jg
pop
ds
int
pop
sub
lods
lock
popa
or
lcall
or
push
test
push
in
pop
sarb
cwtl
les
jp
inc
insb
jnp,pt
jnp
cli
cmp
push
ljmp
fs
or
jbe
mov
les
push
int3
pop
js
or
push
loop
imul
lock
jl
ds
cmp
push
sub
js
xchg
xor
jg
jl
xor
push
sub
dec
lcall
jle
xchg
fs
cmp
fadds
pop
in
ja
and
push
adc
repnz
repnz
test
mov
in
pop
add
jle
notb
shrb
pop
or
inc
pop
div
sahf
mov
inc
add
push
fidivrl
cmp
sahf
fnsave
add
imul
and
popa
data16
and
loop
and
xor
daa
pushl
mov
dec
push
push
inc
push
pop
push
inc
push
dec
push
add
or
sti
andl
inc
dec
andl
rclb
inc
push
pop
inc
into
fstps
imul
cmp
sti
push
sbb
sub
jl
and
push
add
inc
push
inc
lcall
mov
add
inc
dec
inc
push
inc
inc
inc
and
fadds
lahf
and
jo
insl
popa
ja
cmp
jns
jo
sub
xor
cmp
ss
das
das
outsl
insb
clc
rcll
inc
insb
arpl
pop
push
add
andb
add
jg
push
dec
jo
mov
inc
mulb
cltd
movsl
arpl
jmp
push
mov
push
or
lds
add
idivb
xchg
movsl
add
popf
orb
das
aas
enter
mov
push
adc
inc
push
data16
ds
jbe
jg
ss
jl
repz
push
js
pusha
inc
data16
add
push
clc
lock
aas
addr16
ret
rol
mov
cld
ret
fcomi
mov
adc
sbb
jl
fst
jl
insb
and
cltd
pop
bswap
mov
add
add
add
fidivs
push
push
int3
add
addr16
scas
mov
inc
xor
pop
sub
out
pop
clts
or
cmp
std
add
notl
add
fs
add
outsb
sub
loope
push
clc
or
lock
mov
rolb
dec
pop
add
pop
jg
sbb
out
es
in
cmp
loopne
rclb
push
imul
shl
fs
adcb
sub
jle
outsl
fmulp
test
pop
cmp
push
push
fwait
lahf
out
push
dec
push
rcrb
pop
add
push
sarb
cmp
movsb
push
lock
push
add
scas
insl
lcall
cld
pop
ret
xchg
scas
push
stos
js
iret
dec
scas
aaa
adc
pop
cmpb
mov
clc
imul
push
leave
dec
test
mov
fs
rcrb
subl
int
test
mov
ja
out
pushw
pop
js
xchg
push
dec
ret
leave
movl
pop
add
mov
iret
sub
incl
aas
and
loopne
sar
pop
lret
orb
jnp
rolb
and
jmp
fldl
and
mov
ret
xor
in
cmp
mov
orb
add
pop
jae
fdivr
jnp
ds
add
mov
imul
fstpt
push
fdiv
pop
mov
lcall
test
fs
sbbb
cmpb
aaa
cltd
pop
orb
pop
cmp
in
or
jg
and
lea
xor
jg
adc
ud0
pop
pop
mov
divps
mov
ficomps
js
nop
lea
jle
in
cltd
in
into
movd
fldl
btc
pusha
xorl
mov
bt
in
jno
and
faddl
or
cwtl
fsubrp
cmp
orl
push
add
fstpl
xchg
adc
xor
cs
mov
clc
ja
js
gs
imul
mov
es
adc
aas
outsb
ja
add
jnp
daa
xchg
movb
daa
out
jmp
js
loopne
aas
daa
fsubl
xchg
xchg
inc
pop
pop
push
sub
pop
cmpb
loopne
ss
cmpb
mov
sbb
push
pop
adc
pop
bound
popl
and
aaa
scas
sub
call
pop
add
pop
scas
fwait
ds
add
pop
outsl
jnp
sqrtps
sbb
sbb
pop
js
xor
mov
pop
in
dec
jge
lods
pop
adc
mov
fistl
adc
add
scas
inc
mov
add
xchg
repz
mov
nop
dec
scas
and
ret
cltd
xor
mov
sub
dec
ret
sub
test
fmuls
ficoml
cs
sarl
adc
pop
push
nop
dec
insb
mov
andb
aas
inc
add
push
or
cmovbe
jl
scas
pop
adc
arpl
mov
mov
js
pop
mov
jp
inc
loop
loope
fimuls
sub
pop
dec
adc
pop
faddl
jnp
pop
mov
inc
lret
sbb
out
inc
xchg
or
maxps
mov
add
pop
rolb
or
mov
jle
js
or
jo
adc
ss
xchg
lock
sub
jg
push
pop
mov
jo
mov
popl
loopne
mov
pop
xchg
lret
popl
and
pop
aas
xchg
xchg
mov
add
jmp
sub
sbb
mov
mov
sbb
push
in
mov
adc
xor
pop
mov
xor
pop
xchg
push
mov
or
ja
js
xchg
xor
cmp
xorl
mov
cmp
jae
idiv
inc
jp
jp
dec
or
out
jnp
sbb
fisubrl
mov
push
push
ret
xlat
pop
data16
in
or
js
mov
or
jbe
push
scas
or
or
ja
xlat
pusha
mov
xchg
or
xor
or
or
fistps
or
push
pop
or
insl
roll
add
xor
cmp
inc
inc
adc
lahf
sub
ja
sbb
mov
mov
pop
push
outsb
inc
iret
xlat
into
mov
sbb
and
mov
movsb
cmp
jle
xchg
sub
push
loop
adc
add
xchg
dec
sbb
jo
push
imulb
or
stos
or
sub
mov
cld
clts
pop
seta
negb
sysret
pop
psrld
mov
iret
daa
or
add
fwait
inc
or
xchg
mov
addr16
daa
lock
add
sub
xchg
dec
dec
inc
xor
in
add
adc
mov
lahf
out
xchg
or
aas
popl
adc
lods
add
pop
mov
add
enter
xchg
lock
sahf
daa
add
loopne
cmpsb
es
or
mulb
sbbl
es
andl
lock
and
add
addb
orb
add
sbb
sbb
pop
sbb
jl
mov
cmp
rcrb
sub
add
mov
outsl
ja
jo
insl
pop
jnp
ja
cmp
mov
outsl
in
insb
or
add
or
ret
mov
jg,pt
popf
enter
hlt
mov
jl
pop
xchg
add
add
sbb
aaa
add
push
sbb
or
shr
push
xchg
pop
sub
push
xor
movsb
addb
addb
shlb
aas
lea
xchg
xor
sarb
repnz
psrad
or
fldcw
popl
ud0
or
cmp
pusha
dec
pusha
insl
sub
cmp
bound
mov
xchg
add
pop
cmovae
adc
pop
pop
dec
push
or
into
xor
mov
outsl
mulb
idiv
or
gs
and
add
ja
sbb
inc
add
or
scas
dec
and
ss
div
pop
data16
out
andb
or
inc
rolb
flds
clc
adc
mov
pop
mov
mov
xor
jo
fstpl
push
jg
sbb
cmp
xchg
clc
xchg
add
push
pop
ja
out
pop
add
add
lret
xchg
pop
jno
int3
mov
testb
pop
negl
inc
push
mov
lds
add
cmp
out
ja
ficomps
sbb
adc
xchg
std
add
test
sub
icebp
out
js
jbe
aas
push
jg
jns
or
addl
ja
mov
or
sub
jecxz
insl
ret
xchg
inc
aaa
in
sub
clc
mov
insl
fcmovnb
mov
mov
or
fidivs
pusha
add
ret
add
jg
fsub
ss
sbb
sbb
xchg
fsubrs
insl
xor
imul
lods
int
divl
subl
out
and
cmp
adc
in
mov
mov
das
aad
dec
cmp
add
das
jbe
mov
outsb
shr
popa
addr16
dec
mov
out
mov
jbe
popa
insb
fstpt
popa
das
repz
dec
mov
pushf
popa
add
fstp
das
nop
out
pop
imul
popa
outsl
popa
das
sub
popa
das
pop
arpl
mov
jg
out
cmpsb
sbb
fs
pop
cmp
dec
pop
movups
sub
lods
jg
cltd
mov
or
xor
add
pop
push
xchg
shll
push
and
jo
popf
or
push
sbb
add
notb
pop
jg
dec
xlat
loope
ret
jb
xor
negl
setne
mov
cmp
clc
pushf
jnp
cmpsb
and
xchg
inc
loope
js
test
cwtl
rclb
movsl
jbe
das
sub
cmp
mov
dec
mov
push
inc
das
out
jmp
das
mov
dec
mov
adc
insb
push
incl
add
push
jg
out
or
pop
pop
or
cltd
add
dec
je
or
mov
sub
popa
xchg
aaa
aaa
scas
sbb
add
push
push
dec
mov
inc
pushf
xchg
aas
iret
push
call
or
dec
and
and
dec
or
daa
out
jb
or
daa
add
addb
nopl
inc
outsl
pop
arpl
aaa
or
sub
pop
mov
push
faddp
pop
xchg
andb
dec
mov
mov
and
orb
aas
mov
or
or
add
je
push
xchg
xchg
push
bound
sbbb
cmpl
xchg
in
lock
daa
or
cs
adc
mov
nop
cmp
btr
sti
insl
mov
add
outsl
mov
fcoms
fs
mov
add
outsl
lahf
out
inc
dec
or
add
or
ja
fsubrl
cmp
pop
pusha
enter
xchg
pop
sub
or
addr16
adc
stos
jecxz
add
jnp
mov
dec
push
inc
scas
lods
movsb
cmc
xor
ss
xorb
gs
jne
andl
add
xorl
aaa
aam
ss
ss
in
loopne
cmc
aaa
dec
add
outsb
cmc
aaa
add
fisubrs
add
das
fists
sahf
in
and
out
sub
mov
cmpl
lock
adc
add
push
loop
imul
cmp
shr
adc
lods
sub
sub
jb
cltd
dec
pushf
pop
pop
push
bound
insb
inc
xchg
push
jmp
push
push
lret
dec
inc
in
xchg
and
add
pop
gs
pushf
pushf
sbb
dec
pop
add
jns
push
mov
insl
out
in
fisttpll
pop
rclb
cmpsl
inc
jle
sbb
push
mov
arpl
xchg
inc
push
inc
idiv
fisubs
clc
adc
pop
pop
add
push
xchg
shlb
out
mov
mov
mov
mov
sbb
xchg
add
mov
pop
adc
and
sar
int3
je
stc
add
mov
sbb
cmp
pop
loopne
sbb
jle
adc
outsb
js
mov
inc
sar
dec
movsl
dec
pushl
test
xlat
dec
shll
mov
adc
pop
lock
add
add
xchg
add
push
xchg
cmc
xor
loop
and
mov
fcoml
outsl
sub
mov
aaa
ljmp
dec
aaa
xlat
iret
xor
mov
adc
push
xlat
jmp
and
xor
push
mov
mov
stc
pop
fisttpll
or
outsb
adc
ss
pop
cmp
push
and
outsb
mov
aas
jp
and
testb
addr16
xchg
push
xchg
inc
dec
add
cmp
inc
dec
iret
xor
testb
xchg
push
gs
dec
fisubrl
xor
xor
ret
inc
add
pop
inc
int
xor
outsl
jne,pt
mov
push
push
dec
dec
lret
jae
adc
imul
or
xor
mov
scas
daa
add
xor
add
jae
or
mov
insb
push
pop
jo
sahf
mov
sub
imul
xlat
push
jb
dec
ljmp
leave
dec
pop
out
xchg
xchg
xchg
sub
add
dec
mov
jbe
dec
xchg
sub
imul
imul
xchg
shl
dec
aas
sub
vmwrite
jg
movhps
lcall
mov
aas
inc
mov
outsl
mov
pop
inc
pop
sbbb
sbb
push
dec
mov
pop
loop
popa
shll
sbbl
faddp
das
push
pop
out
jle
push
push
aam
push
push
inc
mov
and
repnz
cs
movsb
ret
jecxz
idiv
das
pusha
push
loopne
orb
xchg
mov
add
sub
add
jmp
xor
pop
jbe
dec
imul
mov
inc
call
inc
or
xor
mov
cltd
or
mov
cmp
sbb
adc
in
cmp
mov
inc
jl
xlat
fcmovb
xchg
scas
cmp
ja
lret
pop
mov
mov
andb
jnp
iret
push
repnz
movsl
sub
jle
addr16
nop
lret
add
push
int3
or
fbstp
xchg
rorb
ficoms
adc
xchg
or
add
sbb
cmpsb
idiv
dec
jo
pop
test
xor
shl
je
sti
mov
insl
inc
stos
add
fnstsw
scas
sarb
outsb
jg
lahf
jmp
sahf
push
jg
sbb
jg
cltd
sbbb
inc
ret
iret
xchg
xor
pop
xor
mov
pop
pop
sbb
aad
test
int
or
pop
inc
push
add
mov
push
sbb
xor
filds
lock
inc
add
push
jle
rol
mov
iret
imul
inc
mov
sub
xor
cld
and
lods
sub
fbstp
dec
push
pop
rcr
pop
xchg
pop
test
mov
ficomps
push
lock
add
pop
adc
test
fsts
dec
pop
shrl
cmpps
repz
add
or
pop
aas
adc
pop
dec
mov
jle
daa
lahf
add
xchg
inc
ds
adc
insb
add
pop
orb
and
mov
insl
ud2
icebp
outsl
icebp
arpl
push
das
or
testl
adc
add
sbb
mov
outsl
pop
inc
pop
pop
xchg
dec
orb
enter
call
jb
xor
xchg
addr16
insl
inc
jbe
push
sub
jmp
xchg
push
lds
push
mov
popa
rcl
aaa
adc
fimull
sbb
bound
insb
or
xchg
push
call
icebp
jle
addr16
mov
cli
and
push
ret
adcb
push
insb
es
fidivl
mov
jnp
ss
test
outsl
push
dec
mov
clc
jge
fs
sbbl
cmp
xchg
inc
aas
xchg
aas
sub
or
cs
test
sarl
or
hlt
mov
fisttpl
int3
and
mov
addl
pop
dec
sbb
push
loope
sub
daa
push
pop
pop
jnp
call
xchg
push
in
sti
test
jbe
jbe
inc
cmp
fisttpl
mov
xchg
mov
push
nop
dec
pop
dec
push
xchg
arpl
xor
inc
lock
push
cli
push
iret
jg
inc
add
mov
mov
add
outsb
icebp
add
mov
cmp
aaa
cmpsb
shll
in
pop
push
add
cmp
sub
pop
data16
inc
mov
push
loopne
pop
push
xchg
jge
ret
adc
nop
xchg
iret
test
add
decl
inc
adc
push
cli
push
sbb
add
or
test
or
jl
or
das
sahf
add
cmpsb
ss
sbb
int3
insb
rcll
jb
push
test
fcmovne
es
sahf
xchg
shll
jo
jae
ds
dec
cmpsb
out
mov
push
add
pop
sahf
dec
gs
adcb
not
outsb
pop
pop
sbb
xor
mov
sbb
std
push
ficompl
dec
pop
cmp
push
sub
jle
andl
pop
ficompl
jp
xor
jp
cmpsl
sub
pop
sub
sbb
lret
and
pop
das
push
cmpb
pop
stos
ds
cmp
ja
mov
nop
xchg
pop
jne
mov
shl
pop
and
pusha
andl
lret
and
inc
das
or
push
call
cwtl
push
stos
jb
sub
xchg
jbe
adc
clc
jbe
push
and
push
push
xor
incl
sbbb
or
mov
jmp
pop
dec
fildl
mov
repz
xchg
push
push
bound
add
insl
data16
nop
mov
xorl
xchg
das
jle
xor
ret
or
mov
xor
movsl
arpl
shll
ja
mov
xchg
fcmovbe
hlt
in
ss
pop
pop
cmp
push
out
cmpsb
subb
pop
inc
jl
mov
movsl
jbe
fsubrs
dec
ja
cs
mov
inc
je
mov
fildl
imul
out
push
imul
xchg
xchg
imul
dec
push
pop
dec
pcmpgtd
pop
xor
sbb
dec
lahf
scas
mov
js
or
and
nop
jmp
xchg
add
outsb
sub
xor
cli
xor
orl
fisttpl
pop
addr16
add
mulb
cmp
push
xchg
jge
jae
lea
pop
das
fnstenv
mov
outsb
cwtl
jp
xchg
mov
sbb
outsl
inc
mov
xchg
mov
push
jbe
mov
push
out
lea
push
cli
pshufw
outsb
js
and
js
jbe
lcall
fsubp
outsb
xchg
pop
stc
rorl
pop
cmpsb
pop
xor
mov
mov
std
mov
or
push
push
dec
mov
xor
pop
pop
cltd
push
loopne
xorl
sti
fiaddl
in
xor
add
aad
rcll
jne
pop
jecxz
mov
xlat
or
arpl
xchg
xchg
imul
lahf
push
data16
daa
mov
sbb
pop
mov
or
mov
nop
push
adc
das
xchg
arpl
pop
cmp
mov
cmp
cltd
push
cmpsb
and
dec
xor
jb
add
sub
scas
out
adc
ret
push
pop
subl
addr16
pop
das
push
sbbl
push
add
das
popa
and
push
cmpsb
add
outsb
out
cs
jae
add
aaa
cmp
mov
push
xor
fnstsw
add
add
or
les
dec
push
lcall
push
addb
lret
push
je
cmp
inc
into
orb
adc
adc
out
push
cli
pop
cmp
shl
push
mov
pusha
add
cmp
pop
insb
js
shl
adc
lret
mov
cmp
pop
movsl
bound
pop
jo
jno
stos
dec
fisttpll
pushf
inc
xor
xchg
cmp
cltd
jnp
out
jbe
inc
sub
xchg
out
jp
mov
hlt
push
stos
scas
sbb
and
or
push
xor
aad
adc
test
ds
pushl
sbb
ljmp
arpl
xor
jmp
cs
jbe
mov
data16
add
jge
mov
xchg
pop
outsl
push
inc
mov
nop
lret
nop
add
add
ljmp
add
mov
add
sub
and
call
jbe
xor
sbb
jne
loope
mov
js
jnp
daa
xchg
xchg
inc
add
push
xchg
adc
scas
pop
or
cmp
iret
pop
incl
add
out
push
add
mov
lidtl
cwtl
add
addr16
popf
jp
and
scas
popa
jns
fisubrl
jl
cmp
xor
mov
and
ret
jl
push
inc
int
xor
pop
incb
mov
inc
dec
arpl
jo
outsl
dec
jnp
dec
adc
mov
mov
data16
sbb
inc
mov
push
or
and
dec
mov
adc
mov
lods
xor
daa
inc
dec
dec
stos
fsubl
mov
mov
subl
push
orb
dec
js
inc
add
or
pop
int
jbe
jg
sub
jne
in
jne
imul
rolb
jae
cmp
loop
addr16
je
aaa
cs
dec
push
jg
sub
add
das
add
push
xlat
out
mov
jne
popa
jp
arpl
js
add
jb
stos
or
mov
jae
ds
xchg
adc
test
add
inc
or
mov
test
adc
or
adc
mov
xor
push
xor
xor
xor
popa
xor
xor
and
pushl
cmp
outsl
xorl
ss
cmp
cmpsb
push
push
imul
sub
xor
mov
xor
xor
xor
lods
ss
ss
and
xor
pop
cmp
mov
cmp
cmp
mov
xchg
cmp
cmp
cmp
pusha
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
sahf
cmp
loope
cmp
inc
ds
ds
test
mov
mov
ds
sbb
xor
cmp
dec
aas
and
clc
aas
fwait
aas
movsl
aas
aas
fidivrs
call
mov
xor
test
aaa
sarl
fdivrs
out
cmp
cmp
cmp
mov
inc
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
mov
ds
ds
xor
scas
aas
decl
pop
inc
cmpsl
or
lods
xor
xor
xor
xor
cli
pushl
pop
xor
xor
xor
xor
xor
xor
xor
xor
add
pop
or
sub
cmp
jge
int3
ss
cmp
xchg
insb
into
xor
xlat
xor
xor
jg
cmpsl
divb
popf
aaa
mov
mov
cmp
cmp
in
idivl
add
pop
fcomip
lcall
lcall
lods
cmp
cmp
cmp
jl
xchg
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmpb
pop
cmp
or
aas
mov
ds
in
aas
mull
xchg
xor
xor
xor
xor
push
xor
int3
xor
sub
pop
mov
push
mov
cmp
lcall
adc
xor
cmp
cmp
lock
cmp
idivl
inc
ds
ds
jae
jle
mov
aas
lods
std
ljmp
js
xor
xor
rcrb
pushl
in
xor
xor
sbb
xor
aas
xor
xchg
xor
xor
xor
mov
xor
push
mov
mov
and
xor
xor
and
cwtl
ss
pop
fbld
adc
push
cmp
mov
cmp
cmp
aas
lods
out
adcb
xor
pop
lock
xor
ljmp
xorb
adc
inc
mov
mov
ss
lock
sti
sbb
sbb
loopne
ljmp
out
cmp
nop
sahf
decl
scas
xor
xor
xor
xor
xor
lahf
xor
pop
cld
cmp
test
xchg
dec
cld
cmp
mov
mov
cmp
sbb
jae
xchg
jle
pop
aas
lea
fsubl
inc
mov
push
div
aas
hlt
push
mov
lock
xor
pop
xor
push
xor
push
xor
xor
xor
shll
adc
cmp
cmp
cmp
cmp
cmp
loope
std
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
sarb
test
sbb
xor
cmpb
and
pop
icebp
inc
pminsw
mov
xor
xor
jg
iret
xor
xor
cmp
ss
ss
inc
aaa
test
leave
aaa
add
inc
cmp
lcall
mov
loope
xchg
or
adc
adc
out
cmp
lahf
sahf
jge
insb
and
dec
or
cmp
cmp
and
sub
cmp
jg
adc
cmp
cld
cmp
or
or
adc
fistpll
mov
xchg
xor
xor
xor
mov
xor
mov
ret
ss
lcall
push
aaa
xor
mov
mov
cmp
cmp
cmp
mov
xchg
repnz
aas
inc
aas
push
aas
popa
aas
jno
jl
popf
aas
cmpsl
scas
dec
icebp
push
lcall
push
xor
clc
pushl
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
add
icebp
jg
dec
xor
xor
out
xor
xor
xor
test
aaa
ja
in
lea
cmp
cmp
sub
inc
cmpsl
ror
xchg
cli
jg
xchg
xor
xor
mov
clc
clc
pop
xor
xor
or
cmc
fbld
mov
cmp
cmp
cmp
cmp
lock
aas
cld
orb
adc
cmp
cmp
cmp
cmp
cmp
jg
bound
cmp
jb
jp
jg
test
mov
mov
xchg
cmp
mov
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
push
cmp
call
aad
cmp
cmp
cmp
xchg
cmp
inc
cmp
push
cmp
add
cmp
test
jmp
cmp
cmp
cs
mov
cmp
inc
ds
aas
lret
xchg
hlt
adc
ljmp
xor
add
call
scas
xor
xor
xor
jg
sar
aad
pushl
jecxz
dec
xor
xor
xor
xor
xor
in
jmp
bnd
sar
cld
xor
push
and
dec
cmp
inc
lcall
dec
ss
ss
ss
arpl
push
ss
xchg
mov
pop
aas
cld
ss
ss
ss
dec
test
shlb
ss
ss
or
fbstp
out
out
ss
ss
decl
or
sbb
pop
aaa
and
sub
xor
add
das
cli
aaa
inc
aaa
dec
aaa
loop
aaa
pusha
aaa
gs
push
outsl
aaa
jbe
jge
test
mov
xchg
aaa
or
aaa
mov
aaa
mov
aaa
enter
aad
ficompl
in
lods
clc
pushl
jmp
icebp
aaa
divb
sti
aaa
add
pop
cmp
adc
adc
and
mov
cmp
xchg
aas
cmp
dec
cmp
push
cmp
bound
pop
std
stos
xor
insl
cmp
ja
jle
mov
pop
test
scas
pop
lcall
cmp
inc
enter
rol
bound
loopne
out
cmp
subb
cmp
cmp
cmp
sbb
cmp
xor
cmp
mov
dec
sub
cmpsb
cmp
mov
cmp
dec
xchg
cmp
sub
cmp
cmp
cmp
mov
inc
mov
aas
dec
sbb
add
mov
xchg
xor
jnp
pop
xor
xor
xor
sbb
es
inc
aaa
inc
aaa
data16
imul
aaa
mov
out
add
fs
mov
scas
insb
xor
in
jle
xor
xor
or
ss
xor
mov
lock
clc
decl
imul
mov
jae
aaa
cli
popa
cmp
sbb
xor
cmp
cmp
mov
loopne
cmp
sub
cmp
cmp
cmp
cmp
xchg
cld
cmp
ret
cmp
or
ds
negl
sahf
sahf
test
push
fistpll
repnz
loope
lahf
mov
xor
in
or
push
xor
xor
clc
jmp
cld
xor
xor
xor
xor
xor
xor
jl
add
lods
xorb
or
jmp
push
fsubp
xor
ficomps
jo
sbb
inc
and
out
cltd
aas
lahf
iret
xor
xor
ljmp
xor
je
js
jl
xorb
xor
call
xor
test
lods
xor
xor
enter
pop
jg
aam
fdivs
fdivl
loopne
xor
xor
xor
xor
jg
dec
pop
xor
xor
xor
or
or
pop
fldl
rclb
sbb
sub
popa
hlt
incl
mov
xor
xor
xor
xor
clc
stos
insb
insl
push
mov
je
aad
cmp
cmp
cmp
push
lcall
pop
cmpsl
imul
xor
xor
and
xor
pop
loope
and
push
jbe
jle
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
add
adcb
xor
ss
ss
cli
cwtl
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
dec
cmp
mov
stc
cmp
inc
add
cmpsb
pushl
movsb
xor
xor
imul
lock
loope
mov
add
popf
xor
or
push
xor
xor
lcall
xor
xor
xor
stos
xor
xor
pop
adc
lea
inc
rcl
xchg
lret
bound
adc
jo,pt
mov
cmp
test
icebp
cmp
aas
insb
decb
push
cmp
insl
cmp
cmp
add
cmp
xchg
cmp
clc
push
dec
ds
xchg
or
adc
adc
sbb
sbb
and
and
sub
add
add
xor
xor
xor
xor
xor
subl
xor
dec
cwtl
xor
xor
dec
sbb
xor
cs
stos
sbb
cmp
cmp
adc
sbb
and
pop
pop
inc
cmp
push
cmp
cmp
xchg
cmp
clc
fbstp
and
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
fwait
lock
push
cmp
mov
cmp
cmp
repnz
pop
cmp
test
arpl
jae
cmpl
ds
aas
aas
mov
lcall
jge
xor
fs
mov
shlb
loopne
clc
ss
lcall
jl
inc
cmp
cmp
lcall
cmp
cmp
aaa
sub
clc
cmp
cmp
iret
inc
movsb
mov
add
sub
push
or
loopne
int
hlt
xor
xor
xor
xor
and
loope
aas
cmp
pop
push
xor
cli
xor
loope
inc
mov
push
jp
xor
aam
fdivl
or
xorb
data16
pop
mov
mov
cmp
cmp
repnz
jle
xchg
aaa
mov
cmp
cmp
cmp
xor
jno
test
movd
loope
lahf
cmpsb
nop
mov
xor
ja
xorb
push
and
push
xor
mov
arpl
lcall
faddl
xor
jp
les
scas
shlb
loop
push
ss
cltd
ss
in
aaa
aaa
bound
xchg
aaa
sub
adc
aaa
out
aaa
shlb
jae
in
inc
cld
or
cmp
mov
cmp
cmp
cmp
cmp
or
push
cmp
push
cmp
insl
xor
out
xor
xor
xor
imul
xorl
xor
xor
ret
push
xor
lods
fdivs
ljmp
sti
ss
out
cmp
pop
clc
fidivrl
scas
aas
mov
mov
push
loop
les
enter
sarb
aam
fcomps
fwait
inc
jp
mov
out
xor
xor
push
mov
sbb
sbb
es
sub
sub
add
incl
dec
dec
xor
xor
xor
xor
xor
xor
lret
xor
outsl
sar
bound
jl
lods
xor
inc
ss
ss
jno
outsb
xor
sbb
add
das
rorb
cmp
jbe
cmp
sbb
cmp
dec
cmp
cmp
cmp
mov
ja
cltd
sbb
push
or
mov
iret
aas
shlb
jle
xor
xor
xor
xor
push
xor
xchg
xor
stos
xor
lret
and
cld
jg
ret
push
lcall
cmp
mov
cmp
clc
out
fwait
cmp
call
and
cwtl
jb
xor
xor
push
orl
xor
dec
xor
in
in
xor
icebp
call
push
xchg
mov
xor
xor
xor
xor
push
xor
jae
sub
cli
pop
mov
ss
shll
ds
cmp
cmp
decl
dec
cmp
mov
mov
xor
inc
daa
insl
cmp
xchg
stos
aad
ds
mov
stos
aaa
inc
andl
pop
sar
xor
xor
outsl
add
xor
xor
fstpl
xlat
aaa
adc
push
dec
cmp
in
cmp
mov
push
push
testb
mov
jmp
cmp
fwait
cmp
cmp
cmp
or
jp
push
jl
loopne
add
and
aas
xor
push
aaa
mov
sahf
xor
mov
sbb
sti
scas
dec
std
shll
mov
cmp
inc
inc
cmp
xchg
clc
jmp
rclb
push
cmp
pop
cmp
ficoms
add
mov
cmp
xchg
sahf
push
cmp
cmp
mov
movsb
ds
ds
cmc
or
xor
call
js
add
ja
xor
xor
jl
mov
ret
xor
xor
aaa
xor
jae
jns
repz
stos
xor
jge
mov
push
sbbl
orb
cs
push
pop
and
sbb
or
cltd
xor
sahf
shlb
movsb
jle
xor
and
jno
add
bound
cmp
fidivrl
stos
hlt
cmp
cmp
cmp
stos
or
add
cwtl
mov
sub
lds
push
sub
sbbl
pushl
push
mov
mov
cmp
mov
or
dec
repnz
cmp
inc
cmp
jb
cmp
cmp
lock
das
cmp
pop
lahf
into
mov
sub
in
xor
mov
jg
mov
dec
xor
push
xor
push
push
test
xor
inc
in
or
mov
aad
call
pop
add
add
data16
imul
not
push
arpl
push
divl
cmp
push
cmp
add
xor
test
add
inc
xchg
clc
jne
lds
cmp
subl
icebp
ds
push
pop
jbe
pop
cli
aas
inc
dec
xor
lds
divb
xchg
xor
pop
xor
aaa
lea
xchg
cmp
cmp
inc
push
cmp
pop
cmp
adc
sub
mov
mov
sahf
pop
pop
push
xor
es
and
jl
arpl
cmp
cmp
mov
mov
push
dec
sub
ss
movsl
push
xchg
out
cmp
fdivp
cmp
cmp
dec
hlt
lcall
inc
cmp
cmp
cmp
cmp
cmp
push
push
fstl
incl
push
stc
xor
xor
fnstenv
mov
aaa
test
fwait
aaa
stos
push
nop
stos
pushl
jg
dec
cmp
cmp
cmp
arpl
mov
xchg
cmp
mov
push
push
cmp
test
iret
out
lcall
jecxz
jo
xlat
mov
xor
stos
xor
cmp
inc
and
xor
inc
call
bound
xor
call
and
cmp
push
xor
xor
cmp
push
cmp
pop
push
stos
inc
ret
cmp
cmp
aam
mov
lcall
xor
cmp
ss
cmp
les
lcall
xchg
cmp
push
mov
or
stos
sub
loop
ds
ds
add
out
add
xor
xor
xchg
mov
pop
xor
inc
jecxz
or
hlt
xor
xchg
ljmp
aaa
pushl
fnstcw
pop
cmp
jae,pn
scas
cmp
mov
cmp
ss
push
ds
ds
dec
aas
push
out
add
xor
xor
sbb
dec
cs
dec
aam
mov
loopne
adc
and
adc
ds
sbb
cmp
cmp
cmp
cmp
cmp
cmp
dec
ds
into
add
cli
aaa
jl
xor
xor
xor
xor
mov
xchg
cmp
cs
cmp
shl
ja
mov
lds
jb
ljmp
bound
xorb
repnz
xor
xorb
xor
je
lea
pop
cmp
sub
mov
movsb
jle
cmp
xchg
inc
and
cmp
or
cmp
addl
iret
lods
stos
mov
mov
inc
xor
xor
xor
xor
push
fdivs
sub
into
outsb
adc
imul
sahf
sub
add
cmp
inc
stos
inc
jo
mov
outsb
cmp
cmp
cmp
cmp
push
push
cmp
jg
fidivrs
bound
cmpsb
adc
push
loopne
lock
stc
xor
cmp
xor
nop
push
xor
xor
adc
cmpsl
mov
cmc
jg
xor
outsl
ss
mov
xchg
ss
ss
icebp
jmp
cmp
cmp
mov
xchg
cli
fdivrp
clc
and
push
cmp
cmp
or
push
jmp
mov
shll
mov
cmp
pop
and
adc
and
lock
jl
out
ss
cli
pop
clc
and
mov
xchg
cmp
cmp
add
cmp
xchg
fisubrl
xor
ljmp
insb
xor
xor
sbb
sub
cmp
mov
jle
inc
cmp
mov
push
ds
js
jl
sbb
and
lock
jo
push
mov
push
xor
pop
xor
xor
ja
sub
xor
xorb
clc
jmp
jns
push
xor
pop
repz
xor
fwait
ss
mov
call
cmp
cmp
push
inc
mov
daa
xor
push
pop
xor
xor
loope
pushl
arpl
cltd
xor
xor
or
test
add
push
add
xchg
out
into
fnstcw
clc
mov
leave
mov
loope
test
xor
xorl
xor
incb
je
and
ja
mov
mov
les
in
aaa
or
pop
aaa
xor
dec
out
shlb
adc
push
add
xor
lock
ss
in
fidivrl
xor
and
adcb
dec
faddl
popa
aaa
xchg
aaa
sahf
mov
cmp
jg
pop
pop
fstl
jle
cmp
cmp
cmp
cmp
dec
xchg
cmp
cmp
cmp
outsb
movsl
jg
cmp
sarl
or
fdivs
inc
xlat
scas
sarb
faddl
test
nop
cwtl
xlat
add
adc
push
sbb
or
cli
adc
xor
xor
xor
push
xchg
mov
shll
sarb
cmc
sbb
xchg
repnz
out
shlb
dec
dec
mov
mov
sub
loopne
push
cmp
cmp
sbb
scas
decb
push
cmp
cmp
cmp
cmp
mov
inc
jl
and
js
fdivrl
test
fwait
rcl
xchg
mov
and
cmp
jg
add
pop
cmp
add
movsl
lcall
xor
loopne
adc
pop
aas
and
push
push
sahf
mov
subl
js
xor
jb
sbb
mov
push
sbb
xor
cli
jmp
fbstp
jmp
xor
xor
jmp
cmp
xor
mov
xor
xor
mov
xor
push
xor
xor
scas
ljmp
xor
xor
mov
mov
mov
lds
lret
rclb
add
ja
xchg
ss
sub
sbb
arpl
jo
jp
mov
mov
fsubr
test
aad
cmc
addb
stos
push
or
xchg
mov
into
cmp
cmp
push
mov
pop
sub
mov
cld
cmpsb
fistpll
cmp
out
cmp
cmp
mov
cmp
inc
clc
and
jnp
xchg
test
repnz
cmp
push
mov
cmc
jg
mov
jmp
adc
dec
cwtl
test
push
add
repz
xor
xor
inc
cli
jb
ljmp
jbe
adc
aam
sbb
push
mov
mov
repnz
mov
out
outsb
repz
dec
ljmp
fstps
rcll
sahf
imul
jg
lock
cmp
cmp
cmp
cmp
pop
filds
lret
pop
cmp
clc
loopne,pn
je
xor
dec
ds
xor
fimull
es
cs
pusha
nop
add
orb
scas
add
xor
cs
add
xor
xor
push
mov
mov
or
mov
inc
and
push
push
fisttpl
mov
out
dec
lea
xchg
cmp
xor
or
cmp
dec
push
filds
cli
cmp
bound
cmp
mov
cmp
or
sbb
scas
mov
mov
mov
or
cwtl
ds
mov
ds
ret
dec
mov
les
enter
sarb
mov
loopne,pt
in
in
ds
arpl
repnz
std
call
push
xor
xorl
mov
ss
mov
aaa
push
aaa
cmpsl
inc
and
idivb
push
sbb
loopne
cmp
lcall
ss
inc
pop
cmp
jg
cmp
cmp
cmp
lcall
sbb
and
cmc
lahf
rolb
mov
jp
fmul
sub
aas
mov
push
xor
push
mov
scas
add
icebp
add
adc
mov
stc
ss
fcoms
fiaddl
jg
jecxz
adc
cmp
cmp
push
jp
lock
dec
push
cmp
mov
cmp
cmp
ss
cmp
pop
jg
stos
sbb
es
push
aas
pop
aas
insb
aas
jb
mov
int
inc
mov
or
xchg
mov
cmp
cli
ljmp
or
into
pop
loopne
je
xor
push
arpl
mov
mov
scas
mov
cs
and
add
cmp
cmp
pop
aam
push
pop
cmp
cli
ds
aas
add
js
nop
aas
cmpsb
test
mov
xor
mov
inc
std
lds
popf
xchg
xor
xor
xor
pop
loopne
push
mov
mov
cmpsl
scas
ss
push
and
pop
sarb
bound
movb
je
hlt
inc
cld
cmp
push
pop
lret
out
adc
test
rolb
mov
popa
xor
icebp
xor
xor
loopne
xor
fdivl
cmp
mov
loope
inc
add
add
aam
adc
mov
into
test
orb
sbb
outsb
push
ds
cmp
adc
shlb
test
pop
popf
rcrb
test
aas
mov
add
std
adc
incl
inc
xor
cmp
push
cmp
pop
xchg
dec
push
push
pop
jbe
cli
sahf
fnstcw
out
inc
add
sti
mov
into
ret
xor
xor
xor
outsb
ja
lret
sub
rorb
sbb
xor
repnz
ds
adc
loop
cmpsb
jle
cwtl
pop
es
aaa
loop
xor
mov
jnp
mov
movsl
jp
adc
pop
xchg
rol
repnz
mov
out
inc
pop
lock
mov
xchg
data16
sbb
jmp
mov
ds
je
js
cmpb
sbb
sbbl
xor
cmp
jge
add
sbb
add
add
cmpsl
cmp
clc
rcll
mov
xor
out
addl
xor
ss
mov
lcall
aas
pop
add
lods
adc
mov
push
pop
mov
xor
xor
xor
dec
lcall
xor
xor
xor
dec
daa
icebp
add
push
je
cltd
not
aaa
jecxz
jno
mov
cmpsl
jp
cmp
or
cli
scas
push
pop
fidivrl
cmp
push
out
cmp
jns
mov
cmp
add
sbb
ss
fdivrl
sti
cmp
lea
mov
cmp
cmp
inc
clc
loopne
pop
outsl
cmp
stos
jb
mov
add
push
pushf
outsb
rclb
outsb
scas
cmp
daa
fidivrl
pop
or
xor
cmp
lcall
add
aas
push
mov
stos
push
stos
mov
test
mov
cmpl
pop
xor
xor
mov
or
daa
pop
dec
xchg
mov
mov
sysexit
test
push
clc
orb
jb
ret
mov
add
cmp
cmp
cmp
cmp
push
adc
cmp
jmp
mov
std
cmp
fidivs
push
call
cmp
notl
rolb
pop
test
xor
rolb
mov
xor
xor
xor
jle
xor
cmp
pop
jbe
xor
fisttpl
cmp
xor
push
sub
adc
pop
jbe
xor
mov
rcl
and
xor
sub
loope
xorb
ja
mov
cmp
repnz
cmp
addl
frstor
popf
cmp
mov
or
daa
push
cmp
fnstsw
cmp
fsubrl
repnz
mov
cmp
cmp
push
lock
call
cmpb
cmp
cmp
cmp
pop
adc
xchg
cmp
cmp
dec
fists
push
clc
pop
xor
xor
xor
cmp
xchg
xor
cmp
lods
fidivl
test
or
adc
test
cmpsl
xchg
or
aam
sarl
sub
add
dec
adc
imul
stos
mov
inc
add
lret
aaa
in
aaa
cmp
sbb
mov
stos
inc
lds
shr
call
pop
xchg
cs
in
cmp
add
rol
stos
cmp
je
dec
cld
or
cmp
into
push
ds
stos
incb
or
ljmp
es
lea
xchg
xchg
aas
pushf
and
lock
call
cmpsb
inc
in
loopne
add
pop
xor
add
xchg
jmp
xor
push
dec
imul
push
pop
mov
xor
test
push
and
movsl
xor
pop
cmp
outsb
cmp
test
and
notb
mov
jle,pt
jo
push
mov
cmp
dec
stos
fstpt
out
cld
or
sub
add
mov
clc
push
inc
aaa
test
push
xor
inc
mov
mov
cmp
cmp
mov
or
and
inc
cmp
push
jbe
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cs
adc
cmp
je
or
cmp
push
add
test
scas
push
push
aas
pop
aas
push
jne
mov
clc
pop
push
dec
lock
xor
jnp
outsl
orl
xor
adc
sub
es
jae
shll
es
xor
xor
mov
fs
xor
xor
push
and
or
js
mov
scas
push
xor
xor
out
push
sbb
push
test
loopne
sub
push
ss
xchg
push
adc
jp
mov
inc
adc
filds
inc
mov
aaa
adc
sub
inc
or
pop
cmp
mov
sahf
cmp
aam
push
adc
xchg
loop
cmp
ljmp
out
bnd
pop
adc
xor
cmp
loop
xor
jbe
mov
andl
in
sahf
adc
adc
sbbb
cmpsb
sbb
xor
xchg
mov
xchg
adc
fwait
divb
out
cmp
cmp
clc
js
cs
cmp
faddp
into
jl
or
pop
bound
es
stos
lock
mov
int
sub
xor
inc
aaa
mov
cmc
cmp
test
inc
cmp
cmp
cmp
cmp
fwait
icebp
scas
push
push
mov
cmp
sub
cmp
test
mov
pop
cmp
push
add
sbb
das
outsb
les
lea
fwait
inc
mov
ds
shll
or
xchg
out
pop
or
xor
xor
xor
outsl
mov
push
and
xchg
into
adc
clc
sub
dec
cmp
cmp
cmp
xchg
cmp
add
out
fidivl
cmp
aas
jge
cmp
jle
adc
rcl
xorb
jg
sbb
xor
push
arpl
outsb
xor
movb
xor
fimull
stc
pop
rcr
loop
xor
into
cmp
dec
push
pop
and
dec
pushl
xor
ja
xchg
pop
movsl
xor
rol
inc
enter
mov
cmp
shll
out
push
test
mov
sub
and
inc
push
jp
aaa
into
aaa
outsb
mov
cmp
push
or
mulb
cmp
jbe
in
push
lahf
rol
mov
cld
int
call
cmp
int
dec
ds
add
inc
inc
mov
notb
pop
and
jp
xor
xor
ss
aaa
inc
aaa
push
divb
lcall
leave
sbb
cmp
mov
cmp
cld
inc
test
sbb
cmp
or
and
fs
cmc
push
add
clc
push
push
push
dec
jl
or
jle
shrb
xor
lcall
or
xor
xor
xor
dec
cmp
inc
adc
pushf
scas
mov
cmp
rorb
cli
push
jl
push
aas
mov
cmp
inc
add
and
inc
mov
cmp
push
movsb
mov
jo
mov
pop
xorb
xor
inc
dec
cld
xor
pop
xor
xchg
bound
push
pop
jb
xor
xor
and
outsb
rolb
add
xor
mov
inc
xor
xor
mov
xor
xor
xor
adc
or
lea
mov
cmpps
pop
je
xor
inc
push
xor
imul
cli
push
xchg
xchg
into
test
mov
push
or
lcall
push
mov
adc
add
xor
push
xor
cmpl
mov
cmc
mov
ds
cmp
test
ss
xchg
shrb
mov
movq
aaa
sub
arpl
jne
les
push
sbbb
inc
aas
adc
mov
aas
jbe
cmpl
lods
aas
loope
sbb
lock
jo
lods
adc
test
push
test
stos
mov
rorb
ja
jo
pop
xor
xor
xor
push
aaa
outsb
sub
ss
push
pop
add
test
add
aaa
sbb
sbb
aaa
daa
bound
pop
mov
mov
es
aaa
nop
out
add
fdivrl
and
stos
sbbb
cmp
push
clc
test
into
mov
negb
push
fiaddl
pusha
ds
mov
lcall
bound
xor
jmp
lahf
lcall
mov
jge
adc
xor
dec
dec
xor
sub
movsb
es
mov
add
test
push
cmc
cmp
push
and
xor
adc
jmp
stos
fwait
cmp
loope
pop
push
jbe
ficomps
cmp
pusha
inc
mov
pop
mov
push
out
cli
mov
xchg
loope
sti
xor
push
xor
dec
xor
adc
push
loop
cmp
xor
dec
ss
mov
jp
pop
pop
ss
pop
sbb
jg
adc
push
mov
jb
aaa
xlat
aaa
loope
clc
aaa
and
mov
cmp
mov
out
subb
inc
pop
jno
fsubrl
add
insl
ss
out
sahf
cmp
orb
imul
or
adc
or
cmp
and
sarb
stc
iret
ja
lret
outsb
inc
mov
ja
mov
push
jl
lds
loopne
sbb
cwtl
fsubp
ss
fnstsw
pop
cmp
or
pop
cmp
push
jl
dec
cmp
add
xor
int3
ds
ds
stos
xchg
pop
call
mov
xchg
inc
fbld
scas
xor
inc
aas
dec
push
lret
xor
jmp
xor
rorb
dec
cmpsl
fildl
xor
jl
xor
sbb
fidivs
adc
mov
sarb
xor
test
popf
ss
aaa
ret
sbb
inc
stos
test
xchg
mov
cmp
mov
dec
adc
inc
imul
dec
sarb
sub
push
xor
addr16
cmp
or
stos
push
pop
add
add
lea
sbb
ds
cmp
push
jnp
in
pop
xchg
outsb
inc
and
mov
aas
in
bound
push
loopne
xor
jbe
xor
stos
dec
test
inc
jle
repnz
or
mov
outsb
scas
xchg
push
pop
inc
cld
push
scas
outsb
mov
push
cmc
xor
sbb
xor
scas
sahf
scas
mov
ja
push
rorb
ss
pop
sbb
sahf
mov
fdivrs
lock
cmp
mov
std
and
jno
mov
xorl
inc
cmpsb
push
cmp
pop
cld
cmp
cmp
cmp
xchg
cmp
cmp
ljmp
sbb
pop
cmp
fildl
call
cmp
adc
and
es
push
imul
sbb
add
add
mov
push
inc
pop
push
push
int
push
jbe
mov
push
xor
mov
push
ds
test
arpl
xor
xor
push
and
mov
add
and
or
lcall
inc
js
xchg
mov
mov
out
pop
cmp
jmp
repz
sti
repnz
or
sbb
stos
push
outsb
and
push
xor
adc
inc
cmp
adc
or
push
ret
and
addr16
cmp
push
stos
mov
dec
mov
xchg
subb
fstpl
mov
inc
scas
btcl
mov
in
jbe
orb
pop
push
loopne
pushf
jmp
adc
out
mov
add
push
movsb
push
adc
adc
and
fldl
mov
jle
xor
push
out
or
fwait
loop
sub
pop
push
cli
movsb
xchg
shlb
aaa
loop
pop
call
sarl
jmp
mov
mov
inc
clc
add
cmp
pusha
cmp
push
xor
pop
mov
add
cmp
push
stos
xor
loop
bound
mov
mov
xchg
scas
add
add
mov
xchg
push
jo
shlb
ja
mov
cmpsl
add
xor
mov
fwait
xor
xor
cwtl
enterw
adc
fnstsw
shrb
faddl
shlb
cmp
lock
inc
xchg
mov
xchg
cmp
or
sbb
imul
cli
sti
jp
sub
dec
ds
popf
or
daa
cmp
dec
bound
cmp
mov
cli
xor
xor
jp
outsb
sbb
push
xor
std
xor
push
adc
out
push
aaa
xor
xor
push
stos
inc
mov
pop
ja
or
jp
aaa
xor
xor
aaa
inc
bound
pop
sub
jb
out
pop
out
aaa
test
gs
insl
aaa
jno
jne
jge
xorl
test
lea
ret
xchg
mov
or
rorb
push
lcall
leave
cmp
fildl
push
or
push
aas
sub
clc
inc
adc
lahf
fcmove
mov
xor
das
inc
adc
and
adc
test
les
xor
and
push
jle
mov
or
mov
cmpsb
jne
roll
or
arpl
mov
add
sahf
aaa
cmp
sbb
mov
bound
jno
mov
pop
or
cs
pop
mov
sub
ds
cmp
jb
cmp
push
lret
pop
dec
add
push
xlat
adc
mov
inc
cld
inc
and
lcall
adc
fidivs
sahf
adc
xor
into
imull
ret
shll
xchg
xor
xchg
and
mov
jae
pop
mov
cmp
pop
or
or
push
cmpl
out
out
lret
and
loop
cli
lds
cs
push
mov
xchg
enter
mov
and
xor
and
mov
mov
or
test
push
xchg
into
xor
add
mov
outsb
mov
mov
inc
push
push
cli
and
ss
push
stos
mov
sub
cmp
cmp
cmp
mov
dec
xor
push
adc
fwait
cmp
add
mov
inc
ljmp
xor
push
mov
insb
xchg
mov
push
push
mov
push
loopne
repz
loopne
pop
mov
mov
xor
inc
xchg
movsb
adc
mov
cmp
add
or
and
cmp
or
cmpsb
xchg
cmpb
adcb
aam
or
sub
xor
cmp
popf
xor
mov
or
es
inc
xchg
lock
xor
push
push
ret
sbb
das
xchg
loope
jmp
lock
xor
xor
xor
xor
xor
dec
xor
shl
xor
sbb
add
notb
mov
das
aaa
outsl
stos
mov
cli
jmp
mov
and
add
fs
mov
stos
cmp
mov
hlt
xor
ds
jbe
testl
daa
xchg
xchg
dec
push
sub
mov
aad
xchg
mov
push
jo
add
ljmp
push
fistpll
jl
mov
push
xchg
stos
bound
sbb
or
xor
or
cli
push
into
nop
xor
aas
sbb
and
xor
mov
std
int
rcl
sub
xor
lock
stos
ljmp
lret
push
and
add
adc
pop
movsb
or
pop
push
mov
xor
pop
stos
pop
jg
ds
xor
stos
arpl
outsb
xor
es
or
test
xchg
and
push
xor
adc
xor
scas
inc
orl
dec
or
xor
lret
mov
out
pop
adc
jmp
xchg
ss
push
mov
mov
xchg
cli
mov
loop
aaa
inc
jp
pop
stos
mov
aaa
sub
inc
sbb
sub
push
push
ss
cmp
mov
stc
cli
inc
jl
mov
jns
mov
sbb
push
sub
pop
and
sbb
cmp
push
push
test
ds
jns
cltd
clc
jecxz
mov
xchg
adc
push
imul
add
or
lcall
leave
jno
stos
pop
mov
pop
cltd
mov
lcall
test
adc
xchg
sahf
outsl
xchg
shrl
rcrb
or
pop
fstpt
xor
mov
cmp
cmp
mov
loope
sbb
dec
mov
add
daa
sub
daa
and
sub
mov
loop
cmp
das
xchg
jo
test
dec
adc
push
outsb
jae
stos
leave
lcall
push
mov
divb
pop
sub
icebp
mov
jmp
lds
imul
jmp
jl
mov
icebp
inc
xchg
leave
lcall
push
push
mov
jmp
sbb
cmp
push
pusha
je
cmp
mov
inc
inc
jns
inc
xchg
or
pop
inc
mov
mov
add
mov
mov
sahf
orb
add
imul
xchg
rolb
jmp
fisubrs
pop
int
add
mov
xor
jp
pop
adc
inc
jae
cmp
outsb
adc
inc
xchg
dec
lret
fisubrl
or
ret
loope
rcrb
lods
mov
jge
or
and
outsl
jbe
and
lea
lods
xchg
adc
pop
ja
sbb
cs
jge
aaa
loope
mov
adc
and
rolb
fisubs
data16
cmp
push
jne
add
mov
adc
add
scas
fidivl
cmp
xchg
or
clc
jp
push
push
adc
inc
xchg
jg
stos
jae
pop
sarl
ds
rorl
push
lods
jg
push
pop
ret
rclb
call
cmpsl
or
mov
push
sbb
sbb
and
cmp
test
sub
xor
mov
inc
repnz
aaa
dec
scas
xor
aam
push
mov
push
fs
push
push
jo
js
sbb
push
sbb
mov
push
popa
cmp
pushf
movsb
jbe
cmp
push
lods
push
mov
mov
pop
in
in
aaa
adc
loope
aaa
hlt
lcall
jg
cmp
cmp
xor
add
pop
add
jbe
cmp
je
test
push
mov
nop
pop
add
bsf
sarb
rorb
cmp
sahf
aam
sub
mov
xor
push
jp
andb
bound
mov
bound
sahf
aam
fdivrs
push
inc
das
loop
cmp
add
cmp
adc
ret
lret
or
push
push
pusha
xchg
sbb
addps
mov
aaa
loopne
arpl
xor
xor
xor
cmp
push
fmull
adc
fiadds
cld
pop
or
insb
xchg
sub
inc
xor
xchg
inc
cmpl
xor
add
cli
push
push
mov
movsb
je
jl
sub
outsb
add
cs
pop
pop
pop
jl
test
mov
in
jo
jno
jbe
dec
cmp
pop
inc
mov
ljmp
xor
or
call
rclb
test
pop
push
movsl
mov
mov
fcompl
push
cmp
push
jp
sbb
and
mov
xor
fs
stos
lods
cmp
adc
in
sbb
cmp
or
xorl
sbb
xor
mov
dec
mulb
pop
and
dec
cld
add
dec
mov
pushf
push
add
xchg
xchg
aam
in
dec
push
dec
cmp
mov
cmp
xchg
stos
outsb
push
lret
movsb
aam
xor
dec
aam
add
dec
loope
push
cmp
cmp
push
mov
push
bound
mov
xor
dec
push
jl
push
fs
lret
fmul
cwtl
popa
ret
add
aam
add
mov
in
xor
xor
pop
inc
dec
add
xor
fidivl
push
stos
mov
mov
hlt
jmp
je
movsb
iret
fdiv
hlt
aam
cmpsb
sub
pop
mov
test
adc
clc
adc
pop
pop
adc
insb
cmp
das
mov
cmp
push
sbb
mov
jo
cmp
adc
adc
adc
or
cmp
das
pusha
xor
mov
pop
and
cmp
mov
daa
call
cmp
xchg
fisttpl
cmp
cmp
or
out
and
mov
add
sbb
filds
inc
cmp
cmp
push
push
pop
cmp
or
sbb
cmp
cmp
les
mov
cmp
sub
data16
mov
shlb
shr
jecxz
rorl
fsubs
loopne
call
jbe
adc
pop
pop
mov
mov
sub
xor
cmp
jecxz
pop
mov
jle
out
popf
clc
clc
data16
pop
cmp
jo
std
stos
sarb
int3
outsl
adc
jne
out
and
inc
inc
mov
scas
cmpsb
je
mov
sbb
mov
dec
adc
outsb
mov
xchg
push
push
sub
xor
or
mov
das
add
movsb
mov
push
mov
push
call
cld
into
jo
fstl
inc
adcb
adc
sbb
daa
daa
xor
xor
inc
sbb
jp
stos
push
addr16
mov
cld
data16
or
mov
xor
adc
xor
cli
fs
fmulp
sahf
shr
cmp
jecxz
fdiv
loopne
in
in
add
adc
add
or
adc
shrb
mov
sub
jge
sahf
lcall
dec
xor
xor
aas
frstor
push
pop
jle
xor
arpl
test
je
data16
xor
mov
out
rclb
hlt
xchg
cmp
pop
xor
xchg
ds
mov
aam
pop
call
jl
xor
and
xchg
pop
add
xchg
stos
sbbb
xor
call
cmpsl
add
add
or
ss
and
sbb
stos
jno
dec
pop
pusha
push
push
jo
js
adcb
aad
test
nop
jecxz
daa
pop
ret
fadds
cmp
cmp
sbb
cmp
or
pop
sub
mov
cmp
jbe
xchg
dec
sub
mov
jo
push
xchg
jl
xorb
ljmp
int3
jb
addl
inc
je
dec
call
aam
dec
imul
popf
ds
hlt
cmp
cmpsl
push
adc
orb
jmp
addb
mov
xchg
inc
hlt
push
xor
je
xor
xor
ja
inc
mov
outsb
rcrb
fdivs
fdivl
push
pop
inc
lock
clc
xchg
add
jecxz
cmp
or
xor
cmp
inc
rorb
shrb
orb
pushf
mov
xchg
xor
stos
push
scas
pusha
jne
pop
dec
imulb
jo
js
inc
dec
pop
or
or
les
xor
jl,pt
popf
aad
sbbb
dec
nop
inc
push
and
cwtl
xchg
aaa
shrb
pop
mov
fdivl
dec
adc
hlt
push
mov
adc
mov
cmpsl
push
sarb
sbb
mov
aam
loopne
call
loope
cmp
dec
clc
mov
push
or
stos
lea
ret
arpl
rcll
sub
call
cmpsb
sub
push
je
add
xchg
mov
loopne
push
jle
call
orl
cli
cmp
mov
nop
lcall
unpcklps
inc
xorl
fisubrl
push
xor
xor
dec
cmp
dec
dec
bound
pop
pop
pusha
jbe
inc
loop
iret
and
mov
jp
sub
xor
pop
or
inc
inc
pop
push
aas
push
cmp
sub
adc
push
ret
mov
mov
fbstp
aas
movsb
aas
test
mov
lcall
add
push
test
lcall
sub
pop
scas
pusha
add
insb
xor
sbb
mov
or
or
push
dec
mov
test
pop
xor
test
pop
push
das
not
or
into
or
cmp
mov
test
outsb
pushf
push
int3
idiv
xor
mov
mov
dec
mov
out
ss
ret
fimull
mov
mov
enter
adc
pop
xor
movsb
rclb
adc
shrb
cmp
nop
add
rolb
sub
lock
jo
das
test
lods
cmp
inc
mov
int3
or
adc
into
aam
mov
ret
sbb
sbbb
xchg
sbb
sbb
push
mov
add
cmp
jl
cwtl
pusha
sarb
pusha
add
rolb
outsb
dec
push
je
movsb
add
mov
or
push
popf
rol
call
test
cmp
imul
sub
mov
idivb
add
mov
mov
push
fmuls
decl
add
not
aad
mov
sub
xor
insb
mov
daa
lock
pushf
xor
sbb
sbb
and
sub
xor
jecxz
mov
pusha
outsb
push
inc
jo
js
test
pcmpeqw
es
ss
adc
lock
movsl
mov
test
dec
dec
push
add
push
xor
sarl
cmp
add
nop
mov
jbe
adc
adc
push
out
call
jg
mov
jp
xchg
js
outsl
sub
pushf
lock
xor
in
pop
enter
push
xchg
mov
xor
inc
xor
mov
movsb
popa
sub
or
dec
je
xchg
xor
xchg
cmc
inc
insb
mov
sub
fdivrs
or
sub
sub
jecxz
sub
cwtl
lret
lods
xlat
enter
inc
mov
or
lds
mov
push
jno
ret
loop
adc
adc
sbb
cmp
and
pop
fwait
mov
test
add
iret
fdivl
clc
ss
mov
sbb
push
jecxz
inc
cmc
mov
test
fsubrs
adc
add
mov
inc
push
xchg
not
arpl
sbbl
je
nop
ret
mov
xchg
loopne
sbb
sbb
inc
mov
lahf
je
jno
adc
or
pop
call
out
and
inc
aam
push
outsl
je
nop
push
or
loopne
test
lcall
xor
inc
test
dec
lahf
xor
mov
or
xchg
loop
mov
mov
mov
sbb
cmp
call
dec
mov
mov
cmp
and
sub
dec
cltd
aad
inc
mov
xchg
mov
add
out
inc
jp
popf
push
sub
dec
inc
adc
ds
and
psubb
add
rclb
mov
jl
ss
push
push
ljmp
roll
mov
pop
insb
xchg
addr16
test
fcomps
aam
sbb
xor
sbb
aam
iret
xorb
mov
cmp
push
enter
sbb
push
movsl
push
xor
inc
jo
xchg
adcb
cmp
pop
push
loop
test
or
sbb
dec
add
sub
adc
adc
andb
rcr
add
loop
rcll
push
sub
cmp
call
push
or
test
cwtl
cs
in
hlt
pop
sbb
movsl
add
adc
sub
push
call
xchg
mov
jmp
sub
adc
icebp
jl
call
bnd
add
or
ljmp
test
mov
mov
xchg
in
int
test
hlt
ret
sub
jge
mov
mov
mov
mov
sub
push
sub
mov
test
xchg
push
in
sub
pop
or
sbb
inc
jl
test
sbb
scas
je
movsl
bound
test
ds
aam
mov
ss
ret
outsb
jl
adc
and
xor
aaa
stos
rorb
sbbb
test
jle
lret
cmpsl
mov
into
push
add
test
sub
cmp
mov
insb
fidivrs
xor
loop
negb
test
out
into
faddl
add
push
mov
cmpsb
sbb
test
sub
int3
cli
hlt
fiadds
inc
xor
inc
lret
and
je
ss
into
in
xchg
ds
fs
sub
inc
mov
lock
and
add
aam
ds
push
cmpsb
xchg
lret
stos
or
mov
cmpsl
cmp
outsb
sbb
xor
inc
add
popf
cmp
push
inc
mov
mov
pusha
andb
sbb
add
add
xor
je
aad
sub
mov
out
in
push
es
pop
lea
nop
aaa
cwtl
rcl
in
sub
add
lock
jl
xchg
shlb
int3
cmp
rorl
sbb
jo
xchg
ljmp
mov
rol
hlt
aad
aam
out
sahf
ljmp
dec
jmp
dec
mov
out
mov
rorb
jl
push
pop
pop
ret
pushf
data16
jmp
testl
pop
add
jo
cwtl
orb
out
and
jmp
pop
mov
mov
pavgb
jl
mov
jmp
ficoms
sarb
mov
xchg
push
jl
movsb
shl
mov
scas
loopne
loopne
test
clc
clc
jno
fwait
dec
mov
cwtl
xchg
add
clc
jbe
imul
jge
loop
dec
insb
jb
outsb
movsb
sbb
push
imul
rclb
push
xor
jno
stos
sub
adcl
sbb
test
xchg
mov
mov
les
inc
sbb
cmpsb
hlt
outsb
add
test
rol
adc
fidivs
movsl
push
lock
rcrb
test
mov
or
jecxz
sbb
xor
out
dec
cli
pop
addb
inc
je
pushf
cltd
inc
or
lods
stos
loop
ja,pn
sbb
add
sti
pop
mov
clc
sub
mov
xchg
les
push
push
ja
mov
xlat
lock
cli
sub
adc
fs
add
dec
test
xchg
iret
mov
mov
aaa
aam
in
inc
subb
loop
inc
iret
clc
push
fs
push
fdivr
or
sub
cmp
cmpb
mov
sti
mov
out
fucomi
inc
add
icebp
add
jo
mov
ficompl
call
inc
or
inc
adc
dec
inc
xchg
or
js
out
fisubrl
xchg
sar
adc
orl
push
js
mov
rcl
mov
and
shlb
add
mov
or
add
mov
inc
inc
push
out
xor
push
aaa
out
mov
les
call
or
jle
inc
mov
jo
cmp
mov
push
test
xchg
push
call
add
imull
fistpll
jle
jno
shr
sbb
ds
push
ja
jmp
clc
fisubs
jg
aad
sbb
push
fsub
jecxz
adc
add
or
sub
sub
xor
test
mov
and
cmp
dec
add
sub
scas
aam
loop
add
jnp
ss
jl
icebp
arpl
js
mov
fadds
push
orb
xchg
add
jo
mov
add
lock
cmp
cs
loop
dec
mov
mov
ljmp
or
push
inc
loop
es
inc
push
jae
dec
lods
int3
call
in
hlt
mov
jle
jp
stos
test
outsb
cmpsb
jo
cwtl
xchg
shl
call
adc
sbb
inc
daa
lock
xchg
pop
and
lods
ficoms
in
add
push
add
je
pushf
jo
xor
pop
fcompl
cmpl
push
push
push
imul
push
sbb
sub
pusha
pop
fadds
or
pop
adc
mov
js
pop
aad
inc
mov
int3
xchg
dec
mov
mov
push
in
mov
mov
inc
dec
sahf
andb
and
mov
ret
push
jb
lock
push
mov
into
sub
loopne
add
lcall
mov
push
lea
sbbb
push
in
stos
or
push
pop
or
xor
jp
sbb
or
out
cld
push
adc
and
mov
cmp
loopne
xor
subb
in
cs
sub
and
pop
es
les
test
loopne
mov
lock
inc
dec
ds
fstpt
je
or
and
jo
clc
sbb
and
es
movsl
sbb
push
xor
pusha
mov
scas
inc
xor
mov
push
jmp
push
add
xorb
test
mov
stos
add
or
js
adc
jnp
das
loopne
pop
push
addl
rcrb
push
mov
xor
and
clc
add
sub
pop
push
shrb
adc
add
fildl
jmp
jne
inc
or
mov
dec
inc
adc
imul
out
shr
rorl
or
jmp
sbb
mov
xchg
rolb
dec
jb
sub
test
arpl
sbb
cmpl
pop
push
cmp
cs
cmp
and
lea
or
sub
adc
or
popf
inc
dec
loope
insb
mov
sbbb
lcall
stos
stos
mov
lock
stos
mov
sbb
pop
rorb
jg
rolb
stos
mov
cmpsb
lcall
sbb
pop
add
pop
lret
push
sbbl
sub
repz
test
inc
outsl
push
mov
fwait
sbb
push
cmp
xchg
daa
rcr
hlt
scas
jo
pushf
test
sahf
and
adc
dec
cmp
outsb
bound
adc
dec
dec
ret
inc
aas
ss
js
das
daa
inc
cmp
daa
sbb
inc
mov
cmp
testb
movsb
dec
jp
add
rorb
testl
push
fbld
inc
sbb
mov
xor
mov
lea
sbb
pop
push
dec
xchg
and
xor
rorb
and
xchg
es
push
mov
push
stos
and
sub
rorb
cmpsb
add
pop
pop
scas
mov
popf
stos
ret
dec
ret
jp
ret
adc
imul
push
mov
add
imulb
sbb
pop
push
loopne
pop
add
fistps
pop
add
lret
sarb
pop
outsb
jp
pop
pop
sbb
push
shrd
push
sbb
mov
cmpsb
scas
push
mov
push
mov
jae
jp
add
sbbb
push
scas
mov
xchg
xorl
dec
push
or
adc
test
xor
imul
mov
pop
mov
mov
or
lods
mov
xchg
xchg
pop
imul
and
adc
add
push
pop
ljmp
pop
les
inc
jl
iret
data16
cmp
mov
cmpl
lcall
repnz
test
dec
notl
loop
xor
push
inc
das
loopne
lods
inc
notl
push
ret
bound
nop
adc
rclb
sub
add
jecxz
ret
fcmovnbe
daa
jo
pop
or
pop
adc
popa
and
cmp
add
xor
push
ret
bound
or
adcl
aas
fwait
pop
xor
cmp
repz
jo
cwtl
lods
or
mov
xor
test
pop
cmp
sahf
pop
pushl
subb
ljmp
add
bound
pop
scas
push
cmp
mov
dec
pop
cmp
aas
jne
nop
daa
test
mov
xchg
or
ljmp
jo
jl
dec
mov
add
shrb
lahf
xchg
jmp
push
fisttps
insl
add
or
adc
xchg
ffree
sbb
xor
lock
jo
lods
mov
aam
in
mov
add
das
pop
adc
mov
loopne
fs
pop
jae
outsl
pop
or
bound
sbb
and
adc
push
push
lods
add
jecxz
insl
sbb
sbb
sub
mov
jo
pop
pop
insb
sahf
pusha
lods
jae
jg
rorb
and
pop
cmp
adc
xchg
or
adc
dec
je
dec
ret
ret
test
lock
inc
push
daa
into
jp
pop
push
add
push
sbb
xor
ficoml
popa
ret
lcall
pop
cli
daa
loopne
cmp
out
loope
pushf
adc
adc
or
and
rcl
movsb
adc
or
sub
sahf
pop
jecxz
js
xor
lods
adc
add
loope
pop
imul
fimuls
iret
sahf
js
sub
mov
sub
les
lods
sub
jnp
sub
pop
inc
pop
div
mov
loop
out
rolb
and
xchg
sbb
fisttps
or
push
cwtl
or
js
xchg
pop
bound
fadds
shl
xor
imul
add
mov
add
inc
or
sub
cs
ret
and
or
xchg
mov
push
mov
xor
sub
lahf
adc
mov
sbb
ret
and
jl
lahf
daa
pop
adc
xor
push
adc
mov
daa
and
repnz
jecxz
mov
cli
mull
inc
mov
repnz
mov
xchg
push
mov
inc
mov
mov
xchg
mov
sbb
add
daa
adc
xchg
mov
pop
rclb
sub
xorl
adc
es
xlat
push
dec
mov
les
outsl
loop
lcall
ret
arpl
cmpb
mov
iret
xchg
rorb
xchg
add
lret
cmp
or
iret
and
repz
or
mov
add
inc
and
dec
hlt
cs
sub
dec
ss
lea
sbb
je
jnp
pop
inc
btcl
sbb
sbb
in
inc
daa
or
jge
push
lock
pop
jb
mov
sbb
lods
push
lahf
xchg
test
shlb
push
jmp
inc
xchg
jno
push
dec
cmp
push
sbb
xorl
sub
ds
ret
inc
xchg
jno
sysret
mov
das
or
adc
xor
pop
mov
push
ret
cmpsl
push
inc
add
inc
add
mov
pop
push
es
sbb
add
int3
xchg
fsubrl
mov
js
mov
fisubrl
sbb
fsubs
test
sbb
mov
adc
call
push
cmp
sahf
mul
pop
loop
sbb
mov
adc
dec
test
add
push
mov
lock
push
inc
mov
call
andb
sbbb
adc
dec
mov
xor
rclb
and
roll
push
pusha
sbb
jno
xlat
adc
fsubs
cmp
cmc
push
adc
scas
nop
xchg
daa
mov
push
sbb
push
push
fiaddl
push
daa
add
inc
test
push
mov
andb
adc
call
or
shl
iret
or
xchg
scas
rclb
stos
rolb
dec
adc
add
xchg
hlt
mov
xchg
mov
mov
pop
out
mov
push
push
add
xor
xor
add
push
daa
stos
sarb
stos
adc
bound
loop
out
ljmp
into
cli
mov
movsl
push
sub
or
adc
lds
or
sbb
and
xor
mov
ss
bound
or
fwait
movsb
fwait
lods
dec
cs
xor
shlb
cmp
push
jb
jp
leave
sub
add
call
sub
adc
mov
das
outsb
fists
gs
cmp
test
mov
inc
test
orb
push
add
cld
cmpb
loope
mov
mov
shlb
and
or
pop
or
clc
mov
add
shrb
mov
mov
mov
cmpsb
les
ret
nop
dec
adc
sbb
sbb
mov
push
ja
jl
add
imul
pop
mov
xor
repz
pop
cmc
sub
pop
out
lcall
pop
push
pop
xor
out
pop
push
mov
insb
sahf
in
repz
sbb
popa
inc
arpl
ds
fldenv
scas
imul
fwait
int
jo
jae
jne
js
jns
dec
mov
push
jnp
repnz
jge
xchg
in
shrl
xchg
dec
xchg
out
fsubl
fstps
scas
ds
imul
cli
xchg
ficompl
int3
test
dec
and
xor
lret
ss
xor
xor
imull
test
xor
push
or
xor
xor
test
sysenter
ss
test
push
insb
ss
push
movsb
push
fmull
jp
jo
pushl
jge
push
and
and
ret
mov
shll
add
loop
add
clc
jae
xchg
pop
adc
nop
popa
aas
pop
pop
add
mov
cmp
arpl
fs
mov
mov
je
inc
js
inc
xor
popa
or
jmp
inc
pop
popa
arpl
pop
push
push
arpl
dec
shlb
adc
fcoms
cwtl
xor
xorl
inc
inc
add
pop
or
jb
lock
and
sub
add
aas
push
cmp
add
and
push
push
dec
dec
dec
ret
in
das
and
dec
or
inc
and
jle
data16
xor
add
in
push
dec
int3
cmp
push
sub
in
jge
xor
pop
push
pop
push
inc
and
sbb
adc
add
or
dec
inc
dec
sub
addl
push
les
xor
cmp
fsubl
mov
das
xor
push
inc
subb
dec
push
nop
and
dec
cwtl
and
mov
aas
mov
fidivl
mov
adc
call
out
shrb
or
push
pop
inc
inc
pop
into
mov
fidivl
in
orl
addr16
pop
mov
fstpt
fisubl
je
mov
test
out
mov
out
xchg
aam
in
xchg
or
je
mov
pop
shrl
mov
ja
xor
sbb
push
leave
mov
push
push
mov
int
cltd
ds
mov
jae
or
or
cmp
addl
add
xor
sbb
mov
inc
jl
mov
mov
jne
push
add
cmp
leave
sub
iret
lds
fwait
xor
cltd
pop
in
lret
ja
sbb
add
insl
repz
add
fwait
cmc
xor
fwait
add
mov
push
sti
or
int
or
xchg
adc
sub
outsl
push
sbb
jl
push
mov
loop
addb
or
insl
push
sbb
aad
adc
cmp
inc
sbb
pop
lcall
dec
dec
dec
stos
push
dec
push
add
adc
xchg
bound
dec
dec
xor
das
add
fcmovnbe
inc
push
xchg
mov
adc
das
add
push
leave
les
or
or
and
les
and
push
inc
out
sbb
sub
add
or
nop
mov
push
push
inc
es
ljmp
pop
and
push
push
inc
push
jo
mov
nop
adc
ljmp
mov
jmp
or
add
inc
push
inc
ds
cmp
push
add
stc
push
lcall
aas
test
adc
xchg
and
jmp
testl
push
outsl
add
out
push
pop
dec
or
and
sahf
push
or
or
mov
add
pop
sbb
lods
pop
enter
mov
jns
or
faddl
ss
imul
xchg
pop
cmp
in
push
orl
pop
adc
test
add
push
icebp
sbb
add
mov
jo
add
xchg
test
fstl
incl
add
adc
mov
xor
and
add
adcb
add
in
mov
fxsave
sahf
xchg
sbb
inc
ds
add
pusha
jg
mov
les
stos
push
jo
adcb
js
mov
and
mov
or
lds
or
or
sub
aad
das
sbb
repz
push
scas
cwtl
add
xchg
aaa
add
jns
fsubrs
cmp
hlt
push
insl
dec
mov
mov
mov
jg
push
movsb
dec
mov
lock
adc
testw
jg
pop
mov
push
add
push
push
lcall
xorb
mov
xor
jg
outsl
add
xor
xor
cmp
xor
cmp
sub
add
pop
cmp
pop
cmp
ljmp
sub
xor
xor
cmp
xor
imul
mov
pop
insb
jae
jo
gs
pusha
cmp
xor
pusha
and
jle
jae
push
mov
fwait
sub
jne
jno
gs
jne
imul
out
lcall
jno
cmp
cmp
daa
dec
add
cmp
gs
ja
cs
out
iret
mov
outsb
push
add
arpl
cwtl
add
add
jmp
inc
jmp
js
dec
cmp
ds
fisubl
mov
mov
xor
bound
lea
ds
inc
inc
push
stc
push
push
inc
add
inc
mov
es
push
push
inc
les
je
pop
and
mov
in
or
pop
xor
mov
lea
enter
or
or
popf
aas
sti
rcr
jg
push
sbb
pusha
pop
and
clc
notl
rorl
mov
int3
sub
sub
adc
mov
cwtl
addr16
xor
inc
xor
cwtl
push
dec
add
cs
aas
xchg
fnstenv
push
imul
cmp
xor
scas
cmp
xor
out
lock
pop
xlat
imulb
sub
xor
push
data16
pop
fstpt
hlt
sub
jbe
cmp
jae
fs
jmp
in
in
insb
insl
jbe
insb
bound
sub
sub
insb
push
lcall
daa
je
cmp
insb
xor
jle
and
adc
lds
nop
add
xchg
subl
shlb
inc
add
cld
test
inc
xor
xor
data16
mov
and
out
mov
lock
or
and
stos
mov
xor
add
pop
jae
sub
rolb
and
sub
and
cmpsb
insb
jle
mov
cmp
sub
push
dec
push
and
push
bound
outsl
pop
jg
xor
lods
popa
or
xor
insl
gs
jbe
xor
stc
pushl
or
and
inc
insb
cs
pop
jo
bound
outsb
in
mov
bound
cs
addr16
cmp
movsl
int
push
mov
jb
das
jo
das
js
xor
mov
insl
push
ja
and
test
mov
add
ja
pop
mov
loope
cmc
in
sbb
fs
xor
or
imul
adc
inc
and
in
jmp
outsb
dec
xorl
dec
mov
sbb
roll
inc
xor
xchg
inc
iret
repz
push
push
adc
cmp
adc
xchg
inc
or
popf
out
or
les
lods
and
stos
mov
mov
cli
sbb
fwait
scas
or
push
xor
push
inc
push
enter
inc
mov
ljmp
cltd
inc
es
dec
xor
push
xchg
xchg
or
xor
add
mov
cmc
push
mov
pop
les
in
pop
dec
pop
pop
jmp
xor
leave
add
int
xor
dec
sbbb
inc
lock
add
push
xor
pop
sub
test
sbb
xor
xor
jp
cltd
pop
push
xor
push
mov
loopne
loopne
movsb
or
pop
or
or
cmp
popa
and
pop
add
incl
add
orl
or
sbb
outsl
xor
or
push
dec
movlps
cmp
inc
orl
jmp
and
mov
leave
xchg
nop
inc
sub
roll
sub
pop
adc
pushl
sti
fistps
dec
inc
mov
adc
and
inc
inc
push
push
data16
ljmp
push
push
dec
adc
or
xchg
xchg
enter
and
lret
lret
mov
lcall
daa
xchg
scas
pop
add
or
adc
adc
imul
jno
cmpsl
es
call
mov
leave
and
inc
cs
cmp
cmp
sbb
mov
sub
incl
sub
lret
adcl
inc
inc
or
lods
push
outsb
imul
fildl
outsl
inc
ds
pop
and
cmpsl
lea
push
push
cmp
cmp
cmp
inc
test
push
push
adc
and
sub
sbb
push
push
push
inc
dec
push
cmp
xor
push
adc
jge
mov
fbstp
xor
cmpsb
pop
push
daa
inc
pusha
addr16
decl
pushl
cmp
adc
mov
xchg
arpl
cltd
sahf
lahf
mov
pushl
pop
lgs
pop
imul
pop
push
cmp
inc
inc
adc
jae
adc
dec
sar
adc
sub
pop
pop
pop
les
incl
cld
xchg
imul
mov
rcrb
jge
ret
mov
stos
decl
mov
fldt
mov
mov
movsl
xchg
push
test
mov
sar
jnp
mov
outsb
insb
jo
adc
cmpsb
movsb
mov
sbb
test
xlat
aad
gs
inc
loopne
mov
cmpl
and
and
push
inc
jbe
clc
mov
insl
xchg
in
scas
push
fbld
cwtl
mov
mov
stos
dec
sub
add
mov
jno
call
jmp
stos
lods
lods
pop
push
lahf
pop
push
cs
stos
dec
js
sahf
jo
jns
adc
ljmp
xor
dec
test
ja
xchg
pop
jno
je
scas
mov
push
inc
inc
aas
cwtl
mov
incl
outsl
xchg
lret
and
cmp
mov
aam
lret
aad
movsl
mov
push
mov
jg
dec
lcall
fwait
xchg
mov
ret
sbb
jnp
bound
fildll
jg
or
inc
push
jo
je
je
adc
aaa
das
enter
jmp
mov
and
es
mov
mov
mov
jle
xchg
sbb
jmp
adc
mov
pop
js
mov
adc
aaa
sbb
xor
xorl
imul
call
cwtl
loope
mov
mov
mov
xchg
sub
xchg
xor
pop
mov
push
popf
jb
clc
decl
outsl
mov
or
sub
fbstp
add
sbb
pop
orl
sub
mov
dec
pushf
push
nop
lock
mov
cmpsb
fdivs
fcmovne
add
and
xchg
daa
inc
cmpsb
test
dec
sbb
shl
add
or
dec
jo
clc
sub
pushl
adc
sbb
fwait
add
imul
das
mov
xor
popa
adc
aas
ret
paddq
cwtl
test
ljmp
mov
out
es
jnp
outsl
xor
mov
ret
mov
decl
out
xor
iret
or
mov
lret
pop
sahf
or
xor
push
sbb
pushl
shll
mov
popa
ret
pop
int
mov
test
mov
mov
sarl
shl
in
cli
call
lahf
cmp
popf
mov
jns
fildll
jge
jae
fidivs
and
call
push
cmp
test
mov
jmp
mov
iret
mov
sub
movsl
push
ret
cltd
test
subb
les
cli
incl
dec
jne
inc
dec
cmp
std
cmpsl
adc
ja
das
aam
add
push
dec
in
push
popa
push
pop
push
add
sub
sub
cs
outsl
js
push
xor
hlt
pusha
xchg
mov
nop
push
xor
pop
outsb
push
xlat
es
out
jmp
in
addl
addl
sbb
cltd
or
inc
cltd
fcomip
addr16
jge
xchg
inc
push
cmpsb
out
test
nop
int
sbb
aad
sbb
mov
fcomip
cmc
mov
test
cmp
aaa
and
out
jno
and
fnsave
imul
push
sbb
push
cmpl
xchg
push
add
stos
jmp
mov
ja
nop
sub
ljmp
mov
stos
push
mov
les
mov
loopne
jae
mov
dec
or
in
inc
orl
push
dec
jge,pt
orb
mov
pop
push
sbb
jnp
mov
incl
pop
enter
push
loopne
sub
sub
push
push
aad
xchg
pop
jae
dec
out
push
pop
dec
nop
arpl
pop
xchg
jno
xchg
mov
xlat
pop
call
pop
pop
sub
fistl
fadd
jg
es
xchg
sbb
gs
cltd
leave
inc
xor
fxch
sahf
mov
ficompl
decl
fwait
popf
in
sub
push
test
insl
fdivs
mov
addr16
incl
fwait
ss
hlt
cmpsl
aam
sbb
loope
lcall
lods
mov
mov
ljmp
push
arpl
mov
fisttpl
rcl
sub
adc
loope
nop
mov
ja
in
neg
jg
or
into
mov
mov
ss
mov
decl
or
cmp
jbe
mov
sahf
mov
adc
push
fnsave
mov
adcl
incl
and
mov
in
and
or
dec
fsubl
insl
mov
mov
ds
cmp
sti
inc
mov
xchg
mov
dec
jae
leave
outsb
mov
cmc
ret
mov
or
and
out
xchg
mov
xor
push
rcrb
and
gs
xorb
jecxz
popa
pop
bound
icebp
add
addb
xchg
jg
cltd
push
pop
cwtl
pop
or
fs
push
lcall
rcrb
inc
mov
cmp
lds
ljmp
mov
ljmp
repz
loop
xor
mov
fs
outsb
inc
cmc
test
dec
cmp
lds
push
test
iret
lods
call
xor
and
mov
call
lods
lret
mov
ljmp
xor
adcl
and
and
ljmp
add
mov
sbb
xlat
lock
out
je
or
jmp
mov
inc
cmp
mov
or
dec
insb
inc
mov
sbb
outsl
push
std
loop
xchg
push
and
jae
fs
out
bound
test
mov
lret
mov
and
jnp
or
clc
dec
sub
add
mov
jmp
aad
dec
out
cmp
aam
movsl
les
adc
xor
pop
es
jmp
and
add
xor
pop
cmp
xor
mov
add
inc
pop
or
adc
pushf
mov
addl
test
mov
outsl
clc
jg
adc
pop
add
cmp
cmp
pop
pushl
lret
jae
call
jb
dec
lods
mov
xchg
jo
fildl
add
dec
fldenv
or
mov
incl
addr16
loopne
and
push
inc
mov
or
dec
inc
sbb
aaa
lds
dec
jno
sbb
ret
mov
mov
pop
add
or
nop
incl
push
nop
mov
sbb
out
mov
adc
mov
dec
dec
fisttps
stos
pop
inc
std
dec
push
jge
aad
jb
stos
push
add
scas
es
popa
decl
mov
shrb
xor
mov
loopne
push
mov
pop
xchg
rcl
mov
repnz
imul
hlt
sbb
sbbb
decl
add
lock
fs
dec
fdecstp
insl
ret
sbbl
pop
stos
dec
or
decl
xchg
xchg
dec
gs
pop
or
mov
stos
mov
leave
test
mov
xlat
call
fcomip
call
repnz
rorl
xor
inc
and
sub
imul
jmp
and
movsl
jbe
ret
jmp
lret
cmp
fwait
repz
mov
mov
call
mov
or
push
lds
rol
add
dec
in
mov
mov
jle
stos
repnz
pop
aaa
xchg
sub
mov
in
incl
fdivr
mov
sbb
loopne
xchg
jge
out
xchg
or
jne
decl
push
and
lahf
sbb
add
mov
test
push
and
xchg
add
sub
pop
fs
jp
jo
mov
sbb
cmp
inc
dec
jb
xchg
cld
test
stc
lods
mov
outsb
and
push
add
sbb
mov
and
lahf
dec
shlb
clc
jmp
add
jb
mov
adc
add
jmp
push
nop
mov
xchg
push
sbb
ljmp
adc
pop
or
sub
pop
dec
loopne
push
pop
xchg
or
cli
mov
push
lods
pushl
inc
fdivs
subb
orl
addl
std
incl
mov
xor
and
inc
mov
sbb
movsl
arpl
jbe
push
pop
add
in
mov
jp
push
xor
in
lret
cmpsl
cmp
dec
xor
mov
fwait
jae
jg
inc
inc
repz
aaa
xor
push
out
sub
push
cmpb
ljmp
movsl
mov
nop
push
mov
mov
lods
inc
test
mov
fstpl
fucomi
sbb
loope
mov
call
mov
dec
inc
insb
outsl
shrl
sbb
out
rcr
aaa
sahf
sar
lock
aas
push
jmp
lcall
pop
fisubl
and
cmpsb
insb
aam
ret
jo
sbb
loope
jmp
ds
clc
inc
fimull
cmpsb
cmp
inc
sbbb
dec
mov
add
push
mov
fadd
lea
cmc
adc
mov
pop
push
xchg
das
clc
call
popa
leave
or
int3
je
cmp
lahf
adc
es
add
push
adc
push
xor
xorl
movsb
and
lds
push
lock
lock
ljmp
cmp
and
sarl
cltd
imul
std
lcall
shll
mov
and
addl
cmp
loopne
push
lock
lahf
dec
mov
xor
cmpsl
jbe
shl
imul
jg
jns
mov
das
push
shlb
movsl
inc
add
scas
dec
inc
push
push
inc
jg
add
lcall
xchg
in
dec
push
and
shrb
mov
addr16
pop
inc
cld
decl
inc
aad
fmull
das
rolb
ljmp
outsb
addb
shlb
push
les
pop
mov
push
movsl
lcall
or
inc
lds
add
je
adc
pop
add
arpl
js
or
push
push
adc
inc
jno
mov
sub
push
sbb
jb
jecxz
aas
testb
jmp
cmp
jae
call
andl
add
xchg
mov
das
daa
add
push
add
or
icebp
incb
insb
mov
or
data16
add
mov
je
mulb
and
push
out
mov
cmp
cmp
enter
ja
jbe
dec
adcb
push
sbb
ljmp
dec
andb
data16
lock
xchg
add
add
cs
or
dec
jno
add
mov
rolb
cwtl
jne
sub
add
jbe
dec
or
rclb
pop
add
ja
and
lods
mov
addb
insb
rolb
imul
add
xchg
es
imul
adc
test
xor
push
dec
pusha
sbb
loope
mov
xor
dec
add
add
mov
sbb
jle
dec
mov
inc
inc
lret
addb
les
sub
ret
clc
sub
movsl
pop
call
push
aam
xor
addr16
fs
pop
inc
jg
cmc
push
test
push
dec
in
idivb
call
adc
mov
negb
out
cmp
aaa
std
call
inc
jae
pop
ret
fsub
popa
pusha
adc
jo
cmp
mov
xchg
dec
pusha
adc
inc
sbb
or
jb
inc
nop
push
jmp
push
inc
push
adc
cs
adcb
xchg
adc
outsl
andb
add
adcb
or
jmp
xor
int
adcl
pop
inc
xchg
pop
add
sbb
sub
push
sbb
pop
jno
push
daa
xor
stos
push
xor
push
test
dec
mov
mov
xlat
gs
dec
or
aam
jae
mov
js
fbstp
data16
pop
pop
dec
mov
inc
adc
movb
cmpsb
dec
adc
mov
xchg
movl
add
sub
pop
sbb
jo
lods
or
jbe
xor
mov
jne
adc
xchg
sub
mov
dec
movb
push
or
clc
jp
loopne
xchg
sbb
add
pushl
aaa
dec
push
sbb
push
or
adc
ss
lahf
add
jmp
mov
xor
fs
xor
hlt
es
es
daa
fwait
mov
daa
push
and
and
pop
lods
and
push
dec
and
cmpl
mov
lret
loope
and
fsubrp
incl
add
daa
push
add
jle
repz
cmc
push
mov
inc
pop
add
call
fdivp
mov
xchg
sub
nop
outsb
jecxz
cmc
inc
pop
dec
mov
sbb
adc
pop
lahf
adc
fcomip
pushl
call
stc
test
xor
sub
cmp
cmp
fldcw
adc
xchg
xor
mov
and
or
xchg
push
xchg
aaa
decl
adcl
xchg
push
rorb
jmp
inc
test
aaa
call
mov
or
add
and
xchg
inc
mov
aaa
cld
jmp
lcall
fdivl
or
cltd
or
lcall
lret
jbe
dec
xchg
movsl
push
add
xchg
mov
fs
mov
cmp
fdivl
xchg
cwtl
dec
and
cmp
jbe
add
call
adc
cmpsb
or
and
push
mov
jns
xor
sub
pushl
add
test
test
notl
mov
ljmp
add
test
aas
cltd
mov
inc
lcall
aas
and
sbb
pop
insb
outsl
clc
jmp
lcall
jmp
inc
adc
mov
mov
paddd
pushl
inc
int
sbb
test
jb
jecxz
insl
int3
loope
rcl
xor
or
bound
xor
mov
xor
jmp
jle
mov
loop
inc
mul
popf
inc
adc
push
movsl
cmp
sub
adc
jo
testb
mov
mov
adc
es
or
jmp
shrl
xchg
xchg
repnz
and
lret
push
inc
orl
sub
or
xor
lea
nop
push
sub
insl
sbb
incl
sbb
leave
and
mov
mov
je
es
sub
jnp
sti
andl
and
push
gs
fcomip
mov
sti
adc
dec
fs
lcall
addr16
mov
in
pop
push
hlt
pop
lret
push
jne
add
sbb
inc
add
test
andb
pop
xor
es
mov
or
push
mov
jmp
mov
inc
and
mov
addl
fs
mov
cmpsb
push
sbb
and
adc
stos
neg
in
and
mov
lods
stc
sbb
adc
out
mov
daa
jmp
dec
daa
movsb
jl
add
imul
pushf
loopne
pushf
pushf
mov
pop
sar
decl
and
test
dec
xor
call
outsb
mov
sub
notb
jecxz
fistps
inc
dec
push
cli
jmp
sahf
out
sbb
sbb
pop
jns
cmp
repz
fcomip
scas
xchg
add
sbb
add
scas
mov
mov
lret
ja
lcall
into
xor
push
xchg
mov
loope
and
sub
ficoml
mul
cmp
pushl
mov
mov
in
dec
xor
mov
aam
or
jmp
mov
mov
js
leave
rorb
pop
xor
mov
xchg
push
jge
filds
jbe
push
add
bound
clc
mov
push
and
cmp
mov
mov
leave
pusha
adc
cmp
and
pop
or
cmp
mov
mov
fs
decl
mov
aas
mov
test
bnd
shrl
test
imul
stc
aas
mov
mov
fwait
sub
scas
loope
mov
xor
insb
cld
fcom
sbb
sbb
mov
adc
fsubl
sub
popa
inc
rclb
push
js
repnz
pop
test
sbb
adc
test
push
mov
aaa
lahf
adc
pop
je
jb
and
mov
repnz
cmp
cmpsl
scas
out
cli
cmp
test
andb
cld
mov
xchg
mov
inc
adcl
lret
scas
inc
inc
push
cld
mov
xchg
lock
ljmp
and
rclb
data16
lret
dec
jo
xor
std
fwait
int3
fildll
and
pop
insl
cmp
sti
ss
sub
fdivrl
push
pop
sarb
jge
pop
enter
decl
xor
cmp
adc
xchg
and
mov
lret
jno
cmp
adc
icebp
add
add
popa
cmpsb
pop
adcl
ljmp
iret
sub
push
cmpsl
divb
in
ret
outsl
mov
fwait
inc
add
shll
and
xchg
test
mov
pusha
ret
push
mov
out
lret
aam
add
fcomps
xor
xor
cmp
ljmp
insl
ret
jns
ret
adc
mov
popa
insl
inc
ret
insl
add
out
push
pushf
cmp
mov
das
push
sub
aad
cmpsl
sbb
xchg
inc
bnd
inc
mov
dec
les
insb
arpl
cmpl
sbb
inc
xchg
push
subb
adcl
mov
andl
dec
cmp
sbb
jo
or
fwait
scas
fimuls
push
std
lcall
jns
sbb
jl
scas
xadd
and
or
orl
in
mov
jae
cwtl
loopne
add
xor
arpl
ret
movsl
lcall
call
test
mov
xchg
mov
mov
int
daa
imul
xor
out
clc
push
das
fwait
add
xchg
xchg
mov
sti
or
xlat
add
adc
pop
cmpsb
int
cld
add
fcomip
bound
das
add
shrb
push
incl
sbb
lods
das
ja
push
adc
mov
mov
mov
and
jae
ret
mov
sub
dec
popa
inc
and
push
ds
inc
pop
xchg
ret
or
dec
push
mov
inc
sbb
push
xchg
decl
mov
or
push
inc
mov
fists
call
stos
cmpsb
dec
enter
sbb
cmc
loopne
mov
mov
sub
aaa
lea
aam
or
xor
jg
lret
icebp
push
jmp
aad
push
aaa
clc
out
add
sti
test
lock
fwait
jecxz
out
leave
cli
mov
cmp
addl
jl
fistpl
xchg
push
push
popa
std
xchg
cmp
mov
ret
sar
jnp
test
adc
mov
pop
imul
adc
push
or
cld
pop
dec
orl
push
adc
ds
mov
xor
adc
push
xchg
push
sbb
and
add
inc
adc
call
push
aaa
lods
std
or
lock
insl
ja
lcall
gs
int
shlb
pop
loopne
cli
add
mov
mov
lods
mov
pushl
pop
into
in
mov
shlb
pusha
adc
cmp
pop
jl
pop
mov
les
and
push
test
or
add
aas
stos
daa
and
adc
fbstp
mov
je
aas
jle
aas
movsb
gs
sbb
dec
mov
imul
decl
fwait
mov
dec
ret
pop
mov
and
popf
sbb
loop
int
lcall
pop
loop
dec
push
add
push
clc
xlat
aam
dec
mov
push
out
inc
outsb
jmp
push
cmc
inc
lock
lahf
mov
andb
std
fnstcw
lcall
mov
or
jo
fsub
sbbl
jp
ret
sub
sbb
jl
imul
mov
push
push
xor
inc
push
decl
pop
push
adc
and
xchg
add
cmp
adc
mov
jg
add
aaa
js
and
out
mov
dec
out
hlt
sbb
hlt
jns
rclb
or
cmp
mov
add
repz
pop
add
push
push
mov
and
sbb
pop
mov
or
gs
cmp
call
sbb
or
and
add
ret
and
repnz
lods
adc
sbb
in
jg
jmp
fidivs
push
pop
mov
ret
push
mov
data16
icebp
dec
cltd
dec
xor
call
sub
je
inc
daa
mov
imul
push
cmp
stos
sarl
incl
loopne
test
adc
mov
test
cmp
sbb
out
cli
mov
data16
xor
jbe
jae
outsb
or
sahf
lods
imul
mov
das
and
lock
inc
push
into
decl
cmp
inc
pop
cmp
nop
fbld
xchg
jmp
push
and
mov
movups
push
sbb
popa
int3
inc
test
pop
push
and
push
loope
push
psubsb
mov
pusha
dec
and
dec
fidivs
adc
decl
adc
orb
dec
je
mov
dec
xchg
and
lcall
mov
xchg
sub
clc
rolb
cmp
inc
xchg
shll
lret
sar
jmp
mov
stos
adc
cmpsb
mov
xchg
mov
pop
bound
jbe
fcomip
pushl
xor
add
mov
sub
mov
stos
jg
jmp
lcall
andb
xor
and
or
mov
inc
data16
leave
xchg
cmp
push
and
dec
jno
leave
ljmp
popf
jp
ljmp
gs
cmpsb
jae
jbe
fcomi
in
fstpt
jecxz
lcall
lcall
fiadds
mov
xchg
into
fnstsw
jmp
mov
rol
lahf
pop
aas
push
mov
ret
xchg
icebp
pop
int3
ja
imul
inc
jg
add
stc
neg
iret
test
sbb
inc
push
ret
aam
pushl
int3
xor
fistps
or
adc
adc
xor
add
pop
nop
jo
mov
xor
jg
pushl
or
and
data16
sub
sbb
in
or
decl
jb
and
divb
mov
xchg
mov
leave
daa
pop
add
sub
test
and
and
arpl
test
inc
sbb
and
jl
int3
xor
mov
xchg
mov
xor
add
dec
test
xchg
push
ss
movsb
cmp
xchg
lret
or
jmp
jmp
mov
dec
movsl
xor
lea
dec
pop
fdiv
lcall
push
dec
mov
adc
or
xor
mov
lcall
scas
pusha
js
sub
ljmp
stos
cs
push
sub
add
jmp
andb
bound
sbb
xor
sub
mov
insb
and
sub
and
cmp
mov
into
push
lcall
jmp
and
outsl
cmp
ljmp
fdivrs
mov
jg
and
cmp
inc
out
pusha
call
jmp
fbld
dec
pushl
out
fsubrl
or
pop
and
xchg
cmp
rolb
xor
iret
mov
sar
ds
call
inc
lcall
fcoml
mov
add
lock
sub
ret
or
sub
adc
jae
movsb
ljmp
cmp
repz
test
jmp
sub
add
push
mov
xchg
pop
pop
push
sub
xchg
mov
rcll
mov
call
push
enter
xor
adcl
adc
insb
cmp
jns
sub
idiv
dec
pop
lock
dec
xchg
pusha
mov
int3
push
inc
test
or
test
call
lcall
push
xchg
sub
xchg
push
loopne
add
aad
xlat
xchg
clc
cmpl
jle
push
xchg
hlt
xchg
push
pop
insl
mov
scas
xchg
dec
fadds
outsl
cli
sti
xchg
jbe
loope
mov
inc
mov
or
shrl
mov
or
f2xm1
rorl
add
sub
clc
idivl
fmul
adc
or
cmpsl
mov
sub
inc
cmp
push
xchg
cmpsb
xor
jmp
jb
xchg
jg
pushf
loop
cmp
jecxz
pushf
aam
add
push
mov
lcall
cmp
mov
mov
mov
lds
sbb
pop
mov
pusha
insb
and
xor
or
sub
pusha
xor
sar
cltd
sbb
add
nop
test
mov
shll
dec
pop
rcrl
nop
add
movsb
inc
dec
pop
sti
sbb
jmp
jbe
mov
scas
jae
mov
mov
add
loopne
or
add
jge
xor
orl
jbe
movsb
ds
cmovae
adc
push
daa
out
mov
jae
pop
xlat
hlt
jmp
aaa
stos
mov
mov
lods
jge
jb
xchg
arpl
lret
lret
stc
sub
stos
lret
inc
call
std
cld
xor
or
push
xchg
sbbl
cmp
inc
or
add
mov
rolb
add
adc
lcall
outsb
rorl
pop
mov
rcrl
flds
mov
jns
lock
fwait
and
repz
add
push
mov
outsl
scas
push
sub
cmpsl
xor
test
movsb
scas
mov
dec
pop
enter
outsl
adc
je
add
sub
test
mov
cmp
pop
mov
jge
movb
orl
arpl
bound
xchg
fiadds
push
sub
dec
pop
mov
jg
incl
shlb
popf
jmp
lret
daa
xor
dec
insb
pop
and
adc
fstl
and
and
pop
adc
cmc
or
sub
clc
ljmp
xlat
loopne
pusha
pop
sub
push
in
xor
pop
inc
js
fcomps
imul
loopne
clc
mov
adc
imul
fs
incl
xor
lods
out
add
movd
mov
pop
fsts
lcall
adc
adc
std
decl
inc
inc
pop
pop
ljmp
adc
js
test
inc
xchg
and
dec
loopne
sbb
popa
addb
mov
es
decl
fcmovnb
add
and
push
into
or
xor
dec
xchg
sbb
es
jmp
lea
cmp
dec
xor
adc
xor
and
scas
jmp
xchg
adcb
pop
je
jb
das
jmp
mov
or
ljmp
rol
push
andb
mov
adc
mov
decl
shrl
or
push
adc
add
lcall
mov
clc
lock
or
aas
cmp
sbbl
or
test
test
jmp
inc
push
sbb
pusha
das
jns
sbb
test
incl
clc
dec
sub
push
scas
cwtl
rolb
push
roll
in
lcall
pop
pop
lret
push
jbe
test
mov
test
arpl
add
and
and
pushl
test
insb
xor
jecxz
cld
rcrb
iret
cmp
call
ljmp
add
stos
les
aad
dec
loopne
mov
pushl
jl
jle
sbb
call
adc
push
js
cmp
sahf
mov
jecxz
or
in
mov
sub
pusha
push
dec
mov
jb
iret
inc
dec
pushl
leave
cmp
mov
jp
xchg
xor
pushw
inc
and
out
sub
jns
pop
mov
xor
mov
xchg
xlat
jb
and
push
fistl
cmp
inc
push
adc
push
call
xchg
int3
out
push
pop
into
ljmp
cmp
jo
movsb
lcall
decl
fs
insb
jbe
sbb
mov
in
dec
pushl
or
je
dec
mov
std
adc
mov
push
ja
scas
insl
test
or
mov
pop
stc
pop
xchg
sub
call
adc
cld
add
das
shrl
pop
out
out
inc
adc
test
sbb
enter
mov
and
cld
out
enter
sahf
in
adc
pop
pop
mov
movsb
inc
pop
pop
push
push
je
xchg
cli
fiadds
lret
push
sbb
push
ret
jge
mov
ds
ljmp
jbe
imul
test
fcomip
arpl
pop
out
pop
fbstp
adc
jnp
inc
push
pop
push
loope
push
cmp
pop
push
jo
add
cld
add
stos
decb
popf
push
inc
xchg
xor
ret
pop
fdivp
sar
sarb
pop
out
dec
pushl
jne,pn
xor
out
sbb
jae
call
mov
sbb
pushl
mov
pusha
mov
arpl
mov
addr16
sbb
push
scas
sub
lcall
rolb
movb
dec
mov
incl
cld
stos
mov
lcall
scas
ja
mov
pop
sub
fs
and
mov
or
inc
cmp
aam
sbb
cmp
xor
pop
rolb
jp
scas
inc
js
pusha
xor
inc
cmp
or
dec
add
ret
addb
es
mov
xor
push
push
in
sub
mov
ljmp
test
movsb
sbb
inc
scas
repnz
jecxz
subb
dec
mov
mov
adc
adc
cmp
pop
mov
cmp
ret
test
ret
sub
xor
mov
arpl
in
enter
sub
inc
xor
ret
xor
ds
aaa
lcall
rolb
inc
cmp
test
inc
mov
xor
scas
mov
rolb
add
fildl
or
aaa
addb
cmp
rolb
mov
mov
adc
orl
incb
adc
ja
test
sbb
insb
pusha
lds
inc
insb
nop
xor
add
aad
cmc
pop
stos
lds
pusha
rolb
lds
lock
add
call
xor
push
test
sub
cmp
ljmp
cmp
mov
adc
sub
stos
push
jb
in
mov
sub
inc
call
mov
sbb
bndldx
div
xor
or
incl
sub
pusha
dec
adc
mov
xor
pusha
sbb
sub
dec
clc
sbb
mov
sahf
leave
mov
and
adc
dec
xor
jmp
add
pushl
addr16
sbb
leave
inc
push
adc
xorl
lret
orb
aas
push
dec
add
pusha
xchg
mov
sbb
fwait
adc
lcall
dec
andb
ja
mov
gs
loope
test
lret
cmp
inc
dec
sbb
lcall
and
icebp
mov
add
lret
mov
mov
ret
movsl
mov
mov
mov
jl
sub
jnp
ja
xor
shrb
pushf
test
push
dec
cmpb
mov
roll
push
jge
ja
shrl
outsl
jge
add
pusha
inc
push
sub
pop
enter
lret
mov
leave
faddl
mov
pushf
ret
add
ds
lea
loopne
scas
mov
push
mov
scas
sar
mov
lcall
pusha
mov
push
sub
jg
sub
inc
fs
pop
incl
and
mov
mov
popa
inc
add
in
lcall
test
add
and
pop
push
or
dec
pop
enter
xchg
jg
push
pop
mov
invd
push
enter
pop
dec
sbb
arpl
mov
push
lret
cmp
cmp
cwtl
lcall
mov
pushf
sbb
arpl
and
xchg
mov
inc
or
incl
and
and
xchg
xor
loop
jns
push
mov
push
or
xchg
rcrl
xor
repz
xor
mov
pop
adc
mov
and
lcall
sbb
pop
fisubrs
lcall
pushl
push
cmp
adc
mov
push
sbb
jns
daa
pop
add
dec
add
ljmp
sbb
mov
fs
add
rol
add
mov
lcall
aaa
lret
jae
fwait
sbb
push
or
pusha
mov
and
mov
add
mov
shrl
jno
aaa
jb
leave
rorl
dec
fcmovbe
push
cld
ljmp
scas
lods
pushf
xorb
xchg
sub
or
mov
idiv
decl
xor
dec
fcoms
push
adc
inc
arpl
test
xchg
xor
loope
lcall
xchg
jmp
add
pop
sub
pop
rolb
and
fldt
sbb
sbb
movb
sti
pop
sbb
arpl
test
andl
inc
test
xchg
add
fsubrs
sub
adc
sub
dec
pop
add
add
lcall
sub
and
sub
adc
add
pusha
add
enter
int
clc
cmp
lcall
pop
adcl
add
fadds
xorl
xor
mov
mov
dec
enter
popa
adcb
decb
add
stos
out
sbb
pop
test
pop
bound
incl
push
clc
pop
repnz
push
sbb
pop
xchg
mov
xchg
cmp
mov
pop
push
and
call
add
mov
push
xor
leave
pop
push
sbb
call
push
adc
movsb
xchg
xor
addl
idivl
and
repnz
push
jecxz
jnp
jle,pt
push
and
sbb
into
stc
adc
jl
or
push
and
cmp
loop
aas
mov
sub
jns
in
adc
insb
xchg
nop
in
or
pop
lea
and
js
es
ss
cmp
push
and
adc
lods
sarb
push
ss
pushf
rclb
cmpb
faddl
mov
xor
xor
sbb
mov
ljmp
shrb
and
adc
pop
lahf
and
loop
std
adc
or
imul
pop
xor
jg
into
pop
jo
out
add
pop
pop
lods
fdivp
les
add
mov
sub
insb
and
jmp
push
lcall
sbb
mov
lret
stc
cmc
orb
icebp
hlt
scas
sub
out
dec
dec
sub
xor
addl
outsl
xor
fcomip
dec
clc
mov
cs
or
stos
mov
es
xlat
jl
mov
mov
pop
adc
pusha
pop
cmp
rolb
mov
outsl
or
or
adc
mov
into
bound
push
mov
mov
out
add
jbe
pop
xchg
lods
popa
out
pop
mov
lea
mov
mov
cmp
shrb
sahf
movb
mov
decl
ljmp
add
push
or
call
pusha
mov
dec
cwtl
ljmp
push
dec
cmpl
xor
mov
mov
mov
ljmp
push
sbb
test
std
mov
mov
jp
jg
cmpl
push
fldenv
pop
push
jo
cmp
movsl
and
out
cli
pushl
fsts
test
pop
push
lea
enter
adc
mov
es
fwait
cmp
mov
cmp
ds
xchg
decl
nop
xorb
push
clc
add
call
sbb
xchg
push
cli
adc
lcall
jl
cmpsb
pushf
rorl
and
adc
or
scas
xchg
jnp
subb
arpl
outsl
cli
mov
add
pop
push
pop
xchg
test
pop
adc
ljmp
insb
fadds
inc
imul
pusha
js
movsl
mov
ljmp
push
repnz
incl
cld
add
adc
call
shl
adc
pop
push
add
std
in
push
pop
adc
sbb
push
rorb
dec
mov
mov
cmpsb
jg
add
xchg
sub
mov
clc
add
addb
or
incl
stos
add
xlat
dec
rolb
mov
fisttps
mov
push
pop
out
adcl
sbbl
sbb
add
repnz
pop
imulb
push
pushf
or
xchg
adcl
fildll
xor
imul
jbe
ret
pop
lds
mov
cltd
ret
in
shlb
or
fldenv
sub
jmp
cmp
arpl
push
sbb
mov
insl
scas
cmp
mov
xchg
dec
mov
lea
push
or
and
js
adc
lcall
cltd
mov
insl
jmp
or
or
mov
lods
in
decl
dec
cmpsb
xor
push
mov
aas
pop
cmp
dec
xor
add
fists
ljmp
sub
rcrb
out
pusha
dec
cwtl
decl
lock
mov
into
mov
fs
popf
and
cmp
shrb
fldcw
popl
mov
mov
int3
cltd
movsb
push
xchg
mov
mov
imul
lock
call
push
xlat
xchg
ret
fdivs
lret
add
pop
sbb
inc
movl
xor
or
icebp
hlt
int3
movl
cmpsb
fwait
mov
pop
sbb
orl
scas
clc
call
pop
cmc
inc
imul
pop
pop
sbb
andb
lock
mov
mov
add
push
sbb
mov
decl
xchg
addb
in
lcall
adc
mov
aam
bound
and
push
push
add
mov
ljmp
jno
outsb
pop
nopl
outsl
clc
adc
pop
enter
and
or
in
mov
add
dec
pop
in
test
or
mov
fcom
dec
inc
pop
lret
mov
decl
mov
cmovp
mov
fcmovbe
scas
mov
and
pop
in
mov
test
push
jle,pt
in
ds
xor
mov
arpl
sub
out
daa
or
int
lcall
fs
andb
push
rclb
test
sub
pusha
pop
adc
std
out
out
outsl
repz
loope
outsl
adc
sbb
mov
out
jp
cmp
ds
and
sbb
and
sub
add
xchg
push
pushl
push
lods
loopne
inc
mov
adc
mov
mov
mov
data16
adc
lods
enter
decl
mov
out
test
add
lret
adcb
mov
jno
dec
test
clc
mov
icebp
test
pop
xor
stc
adc
mov
movsl
jb
sarb
lcall
rsqrtps
imul
fsubs
fisttps
xchg
js
call
imul
mov
lods
add
xchg
cld
adc
pop
cmp
adc
psubsb
xorb
ljmp
cmp
test
adc
inc
sbb
scas
add
mov
dec
les
pusha
add
clc
scas
xor
rcl
sbb
lahf
mov
jmp
cld
dec
popa
jb
mov
ds
lds
outsb
jmp
pop
push
cli
outsl
cli
cmpsl
dec
mov
add
jl
gs
xchg
cmc
jmp
adc
fcomip
sarl
cld
jne
es
scas
mov
and
mov
push
pushl
and
arpl
rcl
mov
mov
cwtl
shlb
xor
lods
arpl
pop
in
sbb
sbb
mov
or
xchg
mov
aaa
std
std
incb
sbb
xchg
imulb
mov
and
jbe
lock
mov
inc
or
icebp
xor
and
adc
or
xor
adc
ljmp
into
shlb
or
or
and
xchg
add
pop
inc
cmpb
fistpl
cmp
sbb
mov
ja
cltd
stc
xor
lret
pushf
cmp
cld
cltd
fsts
push
aad
adc
int
inc
outsl
sbb
push
imul
fwait
and
hlt
sub
xor
imul
push
ds
ljmp
push
add
inc
test
add
push
mov
pop
out
js
stos
dec
or
pop
hlt
push
icebp
mov
sbb
stos
sbb
jnp
or
push
cmp
sti
shlb
and
dec
add
leave
pop
sub
jae
in
in
sbb
stos
mov
inc
ret
add
iret
mov
adc
imul
jg
rol
jl
inc
mov
ret
xchg
mov
in
incl
mov
js
jecxz
shl
stc
repz
pop
nop
lds
sbb
enter
decl
lods
lret
jl
lret
andl
dec
xor
bound
sub
lods
pop
pushf
cmp
incl
cmp
xchg
notb
lret
jl
addl
inc
sub
mov
adc
sbb
popa
prefetch
or
pushl
mov
mov
xorl
repz
cmp
cwtl
and
imulb
jecxz
cmp
cmp
push
mov
bound
mov
mov
inc
add
rolb
inc
xor
in
pop
dec
jns
sbb
cmp
fs
ljmp
adc
dec
xchg
pop
cmpsb
cwtl
bound
es
jns
fxam
cwtl
jge
test
cmp
cmc
fbld
jns
stc
out
addb
sub
mov
andl
xchg
push
sbb
imul
stos
push
xchg
out
mov
test
or
ljmp
test
adcl
xchg
lods
xor
je
dec
dec
jno
incl
faddl
sbb
xor
xchg
or
ret
lock
inc
push
sbb
incl
xor
popa
hlt
or
adc
xchg
push
inc
push
pop
in
pop
and
sbb
decl
dec
xor
lret
push
in
push
mov
push
hlt
push
test
scas
mov
test
push
push
stc
fwait
aad
push
int3
loope
cwtl
add
add
jle
mov
jo
aad
mov
or
xlat
add
jnp
pusha
xchg
pop
and
not
and
js
loopne
or
pop
jae
cmp
addl
dec
pop
imul
pushl
popl
rcll
and
test
je
mov
orl
push
lods
inc
rolb
and
jno
std
push
inc
add
adc
lcall
mov
inc
add
ljmp
test
pop
pusha
mov
adc
ljmp
xor
mov
xor
add
and
rcll
push
int3
aam
test
and
xlat
xchg
jle
pushl
imul
test
pop
xchg
xchg
les
adc
call
nop
sti
arpl
mov
cmp
xor
lea
sub
call
out
sub
pop
sbb
cld
fstps
or
imul
movsb
xchg
cmpb
decl
loop
addr16
jno
leave
fs
loop
ljmp
cli
jmp
mov
mov
and
mov
popf
loop
cmpsb
add
sub
dec
add
adc
cmp
add
cmpsb
ds
cmpsl
adc
push
pop
loopne
adc
jmp
lcall
mov
clc
les
popa
dec
or
add
jmp
mov
inc
adc
rcll
inc
sub
jmp
ljmp
sbb
mov
rolb
mov
xchg
pop
leave
or
mov
ret
fcomip
call
stos
jnp
insb
sub
adcl
mov
loop
es
movsb
xor
sub
mov
add
jl
decl
sbb
rorl
or
pusha
sbb
pop
mov
pushf
ja
dec
leave
stos
xor
test
inc
inc
cltd
dec
add
and
add
inc
pop
jmp
adc
lret
lcall
inc
imul
cmp
xor
lods
in
repz
addr16
jae
pop
mov
or
jmp
pop
pop
sub
loop
inc
or
sbb
in
mov
push
and
pusha
subb
stos
dec
fs
cmp
sbb
add
push
test
cmpsl
cmp
sub
call
mov
repz
insb
cld
mov
adc
call
xchg
sub
int
je
clc
fsubs
adc
outsl
stc
add
stos
incb
ret
sbb
rcrb
mov
mov
cli
incl
orb
icebp
sbb
inc
cmc
or
jmp
and
sbbb
dec
cmp
pop
xchg
test
cmpsb
das
gs
dec
in
roll
fisubl
xor
mov
push
cld
aam
std
lds
ljmp
cmp
repnz
lds
incl
push
xor
mov
push
dec
sub
adcb
daa
stos
cs
add
pushf
aam
dec
clc
lcall
ljmp
adc
push
jo
daa
xor
xchg
pop
cmpsl
bound
cwtl
or
fists
cld
push
ret
divps
inc
jl
jl
loop
xchg
mov
subb
and
sub
mov
movsb
add
sbb
jb
mov
dec
call
add
insl
cwtl
pusha
and
in
test
mov
xchg
xor
lcall
mov
sub
cli
mov
data16
in
jb
adc
int3
inc
add
pushl
ret
cs
stc
mov
scas
jno
decl
cmpsl
push
pop
sub
push
icebp
xchg
sub
push
lods
xorb
cltd
lods
jg
sub
push
sub
aam
add
pop
push
incl
pop
fwait
jmp
pop
mov
xor
pop
cwtl
inc
xlat
jl
xchg
inc
sbb
xchg
or
fdivr
ljmp
js
mov
ficoms
cmp
adcb
call
add
decl
sbb
incl
push
push
mov
and
add
out
and
int
lcall
ljmp
sar
aam
sar
cltd
and
enter
mov
inc
call
jl
fwait
pop
shlb
mov
out
dec
sub
mov
jmp
adc
inc
sbb
mov
xchg
cmpl
orl
cmp
mov
fwait
call
fbld
push
sub
lods
push
lcall
mov
jle
je
std
int
dec
jnp
lahf
inc
sbb
lea
pop
add
mov
inc
nop
call
and
mov
test
stos
dec
mov
push
mov
mov
mov
outsl
clc
jp
ret
outsl
jmp
and
mov
test
lock
and
fmuls
call
add
xchg
and
call
inc
imul
sbb
scas
cmp
mov
lods
ljmp
pop
pop
or
push
xchg
push
scas
call
mov
jnp
stos
mov
dec
inc
xchg
jmp
push
pusha
rolb
adc
add
shlb
or
xchg
notb
aam
ret
mov
sub
pop
mov
sbb
mov
mov
adc
loop
jg
rol
cmp
data16
test
sub
cltd
lret
inc
add
inc
cltd
ljmp
es
mov
test
clc
stos
push
push
push
pop
adc
inc
inc
cmp
inc
dec
jecxz
inc
adc
jg
mov
add
sub
add
aaa
mov
ret
adc
call
or
sub
addl
js
sbb
decl
xor
pushf
xor
daa
jnp
test
imul
movsl
sti
push
push
in
pushl
in
fadds
inc
scas
xchg
mov
adc
rorl
mov
adc
scas
call
cmp
dec
movsb
and
sbbl
cmc
push
mov
cmp
dec
jl
out
push
mov
out
shll
and
cli
call
aam
sbb
jge
push
je
into
add
pop
push
pop
push
sub
or
sbb
xor
sbbb
aam
mov
adc
dec
sub
sbbb
inc
pop
xchg
jg
sub
popa
lods
loop
xlat
sbb
lods
dec
add
jbe
cli
adc
inc
and
lock
lcall
and
mov
les
pushl
lret
inc
cmp
inc
xor
mov
inc
add
push
mov
xchg
scas
cwtl
sarl
cld
xchg
insl
int
sbb
xchg
in
shlb
mov
jno
addl
rcrl
inc
adc
pop
sbb
mov
incl
les
mov
push
shll
xor
xchg
rol
loopne
push
hlt
lds
call
loopne
insb
rcl
jp
inc
mov
sub
dec
roll
add
push
sub
xchg
call
or
xor
sub
lods
add
pop
rcll
adc
cmpl
and
rcr
pshufw
jmp
cmp
int
dec
inc
push
les
and
movsb
lea
push
add
pop
dec
dec
inc
mov
add
mov
pushf
jae
inc
push
popa
pop
mov
sub
or
inc
xchg
cmp
pushl
cltd
xchg
jmp
xchg
mov
gs
inc
inc
movb
mov
pop
out
cmp
incl
clc
into
out
je
push
fs
adc
push
push
nop
or
ljmp
cld
in
inc
setl
repz
cmc
cltd
dec
mov
xchg
int3
fsts
decl
cmp
lcall
cld
xor
popf
test
pushf
in
lock
dec
lahf
xor
lahf
push
adc
call
add
adc
pop
imull
pop
inc
rcrb
push
test
pop
push
sbbl
call
add
movsb
pushf
push
stos
aam
lods
loope
push
shl
or
movsb
adc
cwtl
cmpb
jmp
mov
add
hlt
inc
bound
inc
sbb
sub
mov
rclb
inc
pop
gs
pop
dec
pop
xorl
add
mov
push
call
push
ljmp
loopne
aad
mov
cmp
mov
movsl
sbb
roll
and
pop
lods
ret
mov
cmp
jmp
pop
aam
pop
fisubs
std
ret
in
sbb
or
lret
test
ficoms
incl
in
pop
addr16
popa
jecxz
inc
sub
out
inc
out
mov
out
ljmp
lea
decl
hlt
add
and
or
add
add
out
clc
ret
xorl
sbb
xchg
mov
add
sbb
push
mov
push
adc
add
fildl
sub
aaa
loope
cmp
outsl
push
push
add
pop
mov
jnp
loop
incl
pop
inc
push
mov
call
js
cmpb
shlb
data16
ja
ret
mov
es
rorb
popa
in
aam
dec
or
pop
call
jl
push
aam
lods
bound
ss
cmp
push
pop
in
push
jl
cltd
aam
dec
and
hlt
decl
leave
sbb
cmpsb
aam
lock
push
mov
loop
mov
jecxz
adc
and
lcall
fs
in
mov
pop
clc
pop
pop
movsl
sbb
cwtl
mov
mov
push
loop
stos
pop
hlt
mov
shlb
jb
mov
or
cmp
push
sbb
ljmp
inc
ljmp
adc
dec
adc
push
mov
push
inc
xchg
dec
or
jbe
imul
inc
mov
push
inc
mov
fcompl
insl
stc
ljmp
dec
aam
scas
rclb
outsb
movsl
dec
in
push
push
push
pop
icebp
ljmp
fsts
jp
push
pushf
orl
repnz
test
lcall
int3
adc
gs
inc
into
pop
and
leave
xchg
int3
leave
add
lret
int3
add
bound
pop
cs
ljmp
pop
out
loop
bound
in
add
int3
and
fisubrs
sbb
jg
filds
pushf
das
aam
ss
inc
mov
sub
inc
mov
roll
pop
std
clc
loope
mov
data16
adc
sbbb
add
ret
sbb
je
ss
sub
es
imul
xchg
call
pop
sar
subb
mov
lods
and
push
and
xchg
sbb
adc
adc
jmp
sar
in
into
in
sbb
test
pop
sbb
sbb
mov
jmp
loop
push
inc
dec
pop
or
jecxz
aam
rolb
insl
iret
in
lea
jmp
mov
cld
sbb
mov
sahf
or
mov
vpmacsdqh
icebp
popf
pop
mov
incl
push
jns
add
test
jo
push
xor
inc
dec
movsl
adc
cli
add
mov
stos
call
scas
dec
movsl
mov
imul
shlb
pop
adc
adc
push
push
rcll
lret
inc
push
or
mov
outsl
inc
pop
sbb
inc
cmp
mov
or
lret
adc
pushl
movsb
or
sbb
or
loopne
dec
into
fldt
push
out
sbb
xchg
mov
ljmp
dec
dec
int3
add
ljmp
les
rolb
and
push
scas
pop
pop
xor
mov
pop
push
dec
cmpsl
into
decl
or
xchg
add
ljmp
test
inc
cmpsl
adc
mov
out
add
call
das
inc
scas
push
dec
scas
hlt
mov
cmc
ss
hlt
push
subb
mov
orb
shl
adc
mov
addb
dec
ffree
sbb
movb
loop
xchg
shlb
xchg
cli
lcall
sub
dec
adc
push
add
jmp
fcompl
push
fstl
scas
in
add
test
mov
pusha
add
mov
add
std
push
dec
lock
arpl
xor
jb
ljmp
lret
mov
inc
aam
jl
add
mov
movsb
enter
xorb
xchg
push
add
dec
xchg
ljmp
pop
cmp
mov
jecxz
js
dec
ljmp
sahf
mov
out
mov
hlt
mov
mov
pop
adc
push
incl
inc
lcall
sbb
mov
and
push
push
sbb
mov
popf
pop
lods
mov
adc
popa
inc
loope
or
lcall
rcll
test
or
fidivrs
lcall
pop
mov
add
xchg
fbld
inc
push
loopne
addb
pusha
call
insl
rorb
sbb
lret
gs
sahf
pusha
push
fcoms
mov
mov
jecxz
out
jno
rcrb
ret
adc
orb
or
sub
stos
movsl
jbe
popa
stos
enter
add
out
jae,pn
adc
leave
push
and
pop
jecxz
rep
ljmp
outsl
shll
jg
push
mov
cmp
lock
mov
pop
idiv
shll
fadd
sbb
adc
mov
sbb
addb
mov
je
add
loope
cmpsb
or
dec
fdivs
inc
add
stos
mov
add
fwait
xor
pop
ljmp
xor
adc
dec
jg
push
adc
dec
enter
test
jp
cmp
or
arpl
les
mov
adc
xchg
js
call
mov
pop
pushf
insb
iret
xchg
fs
fwait
mov
inc
cli
pop
cmp
push
lret
and
mov
adc
repz
iret
push
lahf
movsl
xor
cmc
adc
decl
mov
cltd
fimull
pop
sti
dec
sbb
mov
test
pop
lods
shll
lcall
mov
lods
xor
push
loopne
and
call
jmp
pushf
lods
inc
or
call
ss
inc
sub
dec
movb
lods
loopne
and
or
pop
loopne
sbb
into
mov
or
add
popf
loop
pop
inc
outsb
mov
pusha
push
repnz
scas
out
out
push
into
fwait
sub
test
jmp
mov
shl
les
outsb
jp
repz
rclb
inc
jbe
mov
nop
push
jg
pushl
inc
popa
or
cmpb
mov
scas
xor
mov
popa
sar
das
cli
xor
ljmp
test
xchg
movsb
add
cmpsb
jno
sub
sti
or
sub
jno
hlt
jae
mov
pop
mov
incl
mov
and
addl
fistps
aas
fnstcw
xchg
xchg
roll
js
lock
adc
decl
mov
int
lret
xor
cs
xchg
inc
xchg
orl
idiv
jmp
sub
cld
mov
adc
adc
hlt
les
mov
idivl
jg
fimull
lock
sbb
push
cmp
in
ds
decl
pop
imul
mov
mov
call
nop
icebp
push
sbb
mov
mov
inc
incl
cld
jbe
sbb
movsl
pop
cmpsb
xchg
out
orb
xchg
ret
loopne
call
dec
jl
pusha
fldl
fcmovbe
lods
pop
sbb
jno
bound
les
fldt
mov
jo
inc
or
cld
or
add
ljmp
fwait
inc
sbb
mov
and
popf
jb
inc
outsb
push
fcomp
push
movsb
and
frstor
jno
cmp
movsb
fidivrs
fbld
or
les
push
mov
xor
addb
cltd
mov
cmp
lock
fwait
push
data16
dec
lea
adc
loop
sti
subb
in
and
call
sar
add
pop
das
dec
mov
push
mov
xlat
js
cmp
or
sub
mov
incl
mov
inc
add
ret
cmpb
cmpl
test
out
and
lcall
bound
clc
fdivrl
les
gs
mov
pop
out
in
jmp
jo
add
push
leave
pop
shll
scas
xor
xor
loop
into
call
jno
xchg
sub
dec
scas
addr16
imul
in
out
fsubl
addr16
adc
lcall
jns
bswap
lea
cmp
loopne
cltd
push
xor
fists
int
push
icebp
jecxz
lock
mov
lahf
aas
sahf
lahf
push
jne
aas
or
xchg
add
incl
shlb
test
nop
stc
cmp
mov
sti
gs
mov
mov
mov
sbb
mov
rcll
incl
sub
pop
fsubrs
inc
pushf
mov
inc
and
inc
stos
lcall
in
mov
inc
fmuls
shlb
scas
sbb
pop
mov
mov
lods
icebp
mov
add
jo
mov
aad
mov
outsb
cli
xlat
jmp
cmp
push
pop
xchg
test
fdivs
dec
xor
cmp
imul
dec
jl
add
decl
cmp
dec
adc
mov
adc
adc
std
jecxz
cld
pop
rolb
incl
js
sbb
jp
adc
add
arpl
sbb
push
je
jno
or
and
mov
cmpsb
mov
lds
mov
push
pop
scas
dec
xchg
fadds
or
movsb
dec
inc
jb
lret
xor
and
stc
leave
addr16
mov
mov
xor
xchg
and
jae
push
mov
mov
test
dec
adc
gs
es
cli
movups
sub
addb
or
mov
xchg
jmp
dec
add
imul
mov
and
pop
ds
pop
mov
rolb
xor
push
sahf
sbb
mov
int
daa
mov
adcl
push
mov
inc
pop
in
sbb
push
pop
push
mov
fdivrl
lcall
repz
gs
outsb
pop
mov
pop
lret
outsl
in
xchg
daa
jg
cmp
cmp
jmp
pop
xchg
or
les
jp
loope
lahf
orl
orb
jmp
mov
subl
jle
stc
out
push
sbb
xor
mov
adc
sbbl
seta
and
mov
jecxz
mov
xor
or
clc
sbb
arpl
loope
or
cli
push
mov
mov
or
pushl
jl
lret
push
scas
or
inc
push
insl
jl
sbb
shlb
and
cmp
fildl
andl
nop
add
cmpsl
or
dec
jg
and
sub
xchg
dec
xor
mov
and
dec
sub
ljmp
fiaddl
dec
sub
or
and
ds
es
and
fcoms
mov
add
loope
pop
incl
or
and
dec
and
xor
xchg
adc
ljmp
push
pop
inc
adcl
dec
and
bound
mov
jge
ljmp
pusha
movsl
in
test
xchg
sbb
lods
mov
sub
adc
and
jmp
popa
or
mov
cmp
fidivl
daa
jb
xchg
in
dec
movsl
outsb
push
jg
loop
dec
cmp
push
movsl
push
fdivrs
xlat
xorb
or
pop
ss
add
incl
pop
push
jmp
aaa
pop
jns
sub
stos
mov
push
or
sub
add
incl
lds
cmpsb
andl
mov
sub
xor
call
dec
int3
mov
pusha
into
sbb
out
insb
fisubrl
shll
sub
sbb
sahf
inc
lret
insl
fcomip
add
xchg
insb
in
sub
aaa
popf
mov
test
in
push
jl
in
mov
lods
mov
mov
mov
loope
lcall
ret
nop
ds
loopne
imul
stc
hlt
inc
add
xor
or
lcall
mov
int3
cmp
adc
push
lcall
inc
adc
pusha
xor
push
and
cwtl
sbb
daa
mov
lret
cmp
out
jl
ret
adc
in
jecxz
pusha
pop
mov
inc
sbb
dec
loopne
pop
pop
dec
pusha
sar
mov
or
inc
cltd
ret
cwtl
in
jb
xor
into
jb
loop
pop
cmc
or
jb
lret
and
pushl
mov
daa
std
sti
jg
mov
shll
add
cwtl
arpl
rolb
add
decl
sub
adc
gs
shll
movsl
push
mov
pop
call
push
scas
pop
jp
inc
or
pusha
dec
or
out
test
add
inc
decl
add
jge
add
jmp
aas
add
push
sbb
pop
push
inc
mov
mov
int3
sbb
test
add
ljmp
clc
decl
xchg
outsl
imul
lret
or
push
jmp
jbe
icebp
pop
jnp
adcl
xchg
cmpsb
loopne
push
fs
or
das
ss
orl
sbb
mov
leave
stos
arpl
pop
popa
xor
sbb
push
sbb
out
movsl
call
sub
inc
push
xor
call
dec
addr16
in
into
dec
push
xor
ljmp
int
mov
or
xchg
arpl
push
imul
inc
jmp
popf
pop
imul
roll
ljmp
and
out
in
push
loope
inc
sbb
xchg
daa
insb
push
pop
vmread
xchg
lods
ja
push
mov
jo,pt
iret
push
pop
lock
addb
xor
jle
inc
jns
pusha
ret
out
mov
mov
xor
xchg
sub
inc
xchg
ret
mov
mov
incl
cmp
lods
outsb
jbe
mov
mov
jl
aam
adc
scas
enter
push
xchg
xchg
shlb
imul
lcall
dec
inc
jecxz
inc
mov
andl
lcall
push
xor
push
or
lcall
ljmp
inc
call
xchg
add
adc
cmpsb
jmp
xchg
dec
mov
mov
or
rcrb
incb
dec
sub
pushl
and
lret
add
adc
or
pushl
sbb
and
inc
popa
pop
xor
push
mov
ret
imul
sub
pop
add
dec
cmpsb
mov
adc
incl
js
sbb
xor
sbb
add
call
rclb
ret
pop
xor
sub
jmp
or
enter
mov
xor
add
cmpsb
inc
cmp
push
call
mov
or
iret
pop
lods
mov
es
dec
data16
or
jmp
push
data16
cld
insb
xor
cmp
cmp
int
jno
mov
imulb
mov
outsb
xchg
inc
sbb
inc
cmpsl
mov
dec
pop
mov
mov
scas
jae
ss
pushl
iret
fcmovnb
sti
popf
pushf
ret
jne
paddusw
imul
decl
adc
jb
mov
and
insb
pop
adc
testl
cld
fildll
jmp
loope
inc
out
sbb
mov
fsubl
fadd
outsl
nop
mov
gs
idiv
mov
iret
dec
dec
jp
inc
dec
cmp
sub
cmp
cmc
adc
jmp
imul
lret
movsb
orb
pop
inc
lock
inc
add
orb
test
ljmp
push
push
cwtl
addb
xchg
add
je
xchg
xchg
imul
addl
dec
incl
lea
dec
std
push
or
pop
sub
sub
mov
push
cmp
fxch
movl
idiv
mov
inc
sub
xchg
add
cmp
xchg
sbb
das
mov
decl
mov
cli
rcl
enter
adc
in
and
xchg
orl
sub
dec
lea
xchg
shlb
incl
push
insb
out
cli
pushl
js
cmp
and
cmpl
push
sub
jmp
and
xchg
pop
rcr
xor
mov
mov
in
push
pushl
or
lods
xchg
jne,pn
pop
mov
int
movsl
jne
fstps
rclb
outsl
clc
lcall
mov
aaa
hlt
lods
int
mov
adc
and
inc
aaa
jle
jnp
mov
pushl
std
and
and
mov
aam
aam
or
mov
sub
mov
inc
and
call
mov
xor
popf
pop
mull
xor
push
cmp
jmp
add
ja
add
and
loop
aad
outsl
sub
xchg
cmpsl
bound
sub
pushl
lret
cmp
dec
push
lcall
pop
xor
xor
xchg
cmp
dec
imul
add
and
jle
aas
test
mov
into
jb
mov
stos
cmp
fsub
sbb
and
call
add
push
addb
push
add
xor
dec
test
out
scas
add
push
mov
lds
jnp
xchg
incl
pop
inc
adc
pop
movsb
lods
adc
stos
or
jbe
dec
pop
xor
adc
adc
pushl
cwtl
incb
cmpsb
aaa
adc
lock
sub
rcl
mov
ljmp
arpl
js
les
sbb
cmc
add
es
lea
call
shll
fstl
and
adc
mov
or
fsubl
dec
ljmp
mov
cmp
mov
add
inc
or
or
aam
cmp
and
jecxz
fiaddl
outsb
ljmp
inc
ds
int
fmull
jg
lods
lret
insb
pop
cmpl
xor
es
jg
test
fsubl
cmp
bound
sub
clc
and
outsb
les
cld
jg
cltd
jb
inc
pusha
shrl
int
ret
addb
ljmp
pop
clc
loop
mov
into
inc
lds
or
add
xchg
pop
movsl
adc
lods
adc
subl
or
sbb
dec
and
sbb
pop
lcall
cmpsl
push
mov
stos
cs
and
add
inc
xchg
shlb
or
decl
add
lret
push
mov
out
adc
jg
sub
movsl
add
and
stc
mov
decl
and
or
test
or
and
test
fistl
jo
pop
cmp
out
aam
and
stos
pop
jo
loopne
mov
int3
loopne
scas
movsl
pop
fadds
mov
outsl
divb
dec
rcrl
or
outsl
aam
sub
adc
dec
mov
stos
rcrb
inc
xor
inc
stc
lcall
repz
sbb
loopne
jle
clc
mov
loop
bound
arpl
loop
fwait
add
enter
xor
inc
xor
xorl
loop
decl
xchg
fcoml
push
add
or
mov
out
das
mov
je
lcall
mov
jl
mov
addl
ret
xchg
ret
sarb
shl
push
add
xchg
add
ds
les
cwtl
sub
mulb
add
dec
bnd
and
xor
stos
jmp
pop
adc
push
inc
jmp
popw
popf
jb
jne
adc
leave
leave
popf
jbe
jbe
lock
inc
sahf
xor
pcmpgtb
add
xchg
cmp
loopne
gs
mov
sub
mov
cmp
nop
loopne
mov
jp
sbb
fbld
dec
mov
add
pusha
or
scas
movsb
enter
mov
push
cld
out
out
in
push
dec
xorl
lcall
adc
and
icebp
icebp
mov
test
sub
shl
mov
pop
jl
jg
incl
icebp
lods
lods
movsl
and
outsl
or
lods
cmpb
cmc
inc
add
out
inc
push
cli
lcall
ss
xor
cmp
mov
decl
dec
mov
insl
movaps
sbb
sbb
mov
sub
inc
fsubrs
out
lcall
xrelease
jge
lea
fcomps
sti
or
mov
cli
test
and
outsl
clc
decl
jle
xor
cmp
dec
fcmovnb
fmul
hlt
mov
decl
mov
cmp
xchg
or
mov
cmp
es
test
or
sti
ljmp
enter
sub
dec
push
aas
xor
add
add
ljmp
add
scas
mov
mov
lret
incl
and
das
cli
push
dec
lcall
inc
xor
addb
in
xor
pop
inc
inc
decl
jmp
inc
and
inc
movsl
in
jbe
int3
push
xor
jl
lahf
push
push
dec
jg
ljmp
dec
popl
or
mov
daa
dec
push
js
jb
dec
sub
incl
or
inc
or
add
lcall
inc
das
sti
cmpsl
add
call
ljmp
enter
lods
das
and
lret
mov
mov
and
or
lcall
test
mov
or
inc
mov
and
mov
rcrb
sarb
mov
icebp
dec
call
and
sbb
imulb
pop
jnp
call
jmp
mov
testb
mov
pusha
xorl
bound
ljmp
pushl
sbb
xor
fs
push
dec
ret
xchg
andb
mov
fldt
ljmp
jmp
out
jno
not
and
bnd
cmp
scas
cmp
push
mov
lcall
loop
cmp
ror
add
andl
lcall
ja
inc
loope
jbe
insl
aad
lock
mov
adc
add
mov
pop
and
ljmp
add
cmp
lcall
scas
loopne
ror
in
jno
dec
in
and
mov
xor
out
pushf
jl
add
imul
outsb
call
stos
or
cmpsl
cwtl
lcall
or
in
mov
sub
loope,pt
nop
or
and
push
mov
and
push
gs
je
mov
mov
add
add
and
dec
xchg
ljmp
push
js
das
imul
std
lcall
in
das
or
sub
enter
loopne
or
jg
outsl
mov
lret
adc
push
les
repnz
shlb
add
jg
stos
mov
cmp
jae
ja
xlat
jb
mov
pop
cs
sub
pusha
sub
push
or
add
push
mov
mov
test
push
std
mov
aaa
add
mov
pusha
lret
bound
mov
mov
lea
arpl
push
pop
xchg
divl
in
mov
add
imul
nop
push
imul
mov
int
cli
mov
dec
fisttpl
pop
xlat
lea
dec
dec
in
aas
pop
jmp
pop
ljmp
cmp
aaa
movsb
dec
cmp
sbb
xchg
xchg
xor
pop
xor
fisubl
pusha
sub
push
and
aas
shlb
and
mov
inc
adc
and
inc
inc
jnp
fwait
push
in
inc
mov
jmp
inc
mov
pop
lock
sub
cmp
adc
inc
cli
mov
arpl
inc
pop
jbe
je
and
mov
push
leave
xor
push
jmp
xchg
push
dec
push
sub
pop
in
dec
lods
mov
aam
mov
add
xchg
lods
push
outsl
mov
mov
adcb
sbb
lods
sbb
dec
repz
inc
and
sbb
jg
incl
loop
push
pop
add
inc
xchg
xchg
outsb
cmc
pop
sub
xor
and
dec
push
enter
sub
nop
dec
out
clc
ljmp
adc
xchg
pop
jns
xchg
and
xchg
loope
push
push
and
or
push
xchg
test
test
push
mov
adcl
push
or
incl
and
rcrb
mov
insb
cltd
mov
mov
call
mov
pop
adc
mov
fucomip
cwtl
icebp
mov
mov
xchg
jno
lods
repz
xor
dec
push
cmp
sar
les
sub
add
int
dec
mov
outsl
mov
mov
fcmovnbe
icebp
mov
out
in
lea
in
adc
add
push
dec
and
hlt
fadd
ljmp
inc
test
movsb
rcr
fsub
arpl
fadd
filds
jmp
pcmpeqd
enter
pop
mov
adc
xchg
dec
and
cs
std
jmp
push
add
jmp
movsl
andb
inc
imul
pushl
in
push
in
nop
je
movl
leave
je
pushl
je
movsb
add
shrb
jbe
mov
pushl
cmc
test
call
out
ja
xchg
jns
in
or
add
mov
call
movlps
push
sahf
mov
sbb
bswap
mov
adc
add
mov
push
xchg
out
repnz
cmp
orb
fmuls
mov
push
enter
mov
or
mov
cmp
inc
call
or
cltd
push
xchg
loopne
jmp
lcall
fwait
rclb
push
fsts
scas
aaa
cmp
mov
or
fistpll
push
mov
dec
mov
lret
inc
mov
sti
mov
ljmp
mov
xor
mov
movsb
setnp
incl
ret
sbb
cmp
xor
or
inc
cmp
cmp
xchg
jge
lret
cmp
xchg
fnstcw
ftst
xor
jl
mov
aaa
mov
push
ds
push
jg
sub
add
or
scas
cli
sarb
add
cmp
lds
int3
imul
insl
je
pusha
out
ds
pushl
aam
sbbl
cmp
in
mov
or
and
loop
movsl
aaa
push
or
pusha
jne
mov
pop
repnz
or
lcall
movsb
mov
xor
push
push
out
lcall
mov
cli
push
addl
sub
or
ljmp
mov
add
movsb
mov
xchg
jp
loopne
xchg
adc
jmp
mov
dec
mov
outsl
mov
dec
pusha
or
pop
lret
add
inc
add
cli
stos
pop
cmpsb
push
add
incl
pop
or
xor
sub
test
dec
push
jmp
xchg
mov
es
add
push
lcall
mov
sbb
incl
pop
xorb
pop
int
mov
mov
and
and
rorl
pusha
mov
decl
lock
mov
pop
mov
and
pop
push
pop
pop
fwait
mov
decl
mov
or
xor
mov
inc
stos
scas
mov
or
mov
sti
mov
xchg
inc
pop
decl
mov
das
ret
pop
movsl
int
rcl
cli
pushl
lods
fstpt
dec
ficoml
pop
mov
out
decl
add
adc
or
inc
mov
cmp
jecxz
sub
ds
decl
adcb
and
ret
xchg
add
sbb
fimuls
cld
insl
push
je
cmpsl
push
loope
xor
lcall
inc
sbb
imul
test
sub
jecxz
sbb
xchg
js
inc
inc
push
data16
out
aaa
cld
dec
scas
inc
repnz
arpl
mov
je
jmp
addr16
jle
decl
xlat
loopne,pt
push
lcall
ret
imul
pop
cmp
push
icebp
enter
push
popa
push
pusha
or
lcall
or
jg
xchg
mov
dec
loope
test
into
ud0
lret
and
scas
loope
jecxz
pushl
push
xor
es
dec
mov
add
dec
lock
push
inc
mov
dec
sbb
das
xchg
or
mov
push
pusha
mov
dec
xor
dec
add
sar
pop
add
cmp
push
test
add
ljmp
pop
xor
or
xlat
icebp
or
or
mov
push
call
leave
xchg
lods
jmp
repz
pop
push
pusha
mov
fwait
mov
or
iret
or
int
subl
sub
add
jns
dec
jmp
push
imul
xor
lcall
sbb
fdivs
and
inc
das
xor
or
sbb
jno
jle
jmp
addr16
jge
in
pop
sub
mov
cmc
pop
inc
dec
inc
inc
leave
lahf
sti
das
mov
dec
xchg
lcall
decl
mov
or
rclb
rcrb
sbbb
inc
shrl
jecxz
outsb
add
push
add
xlat
sub
add
clc
dec
cmp
push
mov
cmp
sub
adcb
inc
jmp
scas
add
andb
scas
orb
add
mov
incl
push
stos
add
xor
adc
push
into
sbb
mov
xchg
test
stc
jmp
shll
test
jo
shll
pusha
push
sub
push
mov
xor
xor
xor
enter
xchg
push
mov
jmp
jb
or
insb
cmp
or
cli
cmp
sub
mov
xchg
pusha
push
bound
xor
push
sbb
jmp
pop
xchg
inc
ret
xchg
pop
aas
cld
js
call
jp
ljmp
rorb
pop
call
mov
add
lcall
push
adc
cmpl
and
call
xchg
sub
mov
add
adc
dec
sub
lock
cmp
icebp
sbb
xchg
das
mov
jmp
ret
jl
clc
lock
paddw
call
loopne
hlt
lock
pop
lar
out
jle
mov
or
pushl
xor
pop
add
push
insb
mov
arpl
inc
addr16
or
and
adc
clc
popa
xchg
call
cwtl
sbb
enter
mov
mov
bound
cmp
les
cld
incl
xchg
cmp
sbb
adc
mov
push
dec
pop
and
rcrl
movsl
xchg
dec
ljmp
dec
loop
incl
popf
je
dec
pop
es
push
pop
mov
pushl
stc
out
or
pusha
cmpsl
add
xor
popf
jo
cmp
cmpsl
popf
test
ljmp
mov
fwait
cli
mov
cltd
or
jo
movsl
cmp
movsl
jnp
mov
jmp
sbb
xchg
dec
mov
icebp
sub
mov
add
es
dec
add
adc
decl
cli
shll
insb
or
fs
inc
sbb
xor
inc
and
movsl
insl
lret
inc
in
dec
add
pushl
dec
xor
insl
rolb
xchg
push
inc
inc
xchg
test
imul
shlb
or
lcall
mov
adc
xchg
pop
add
cmp
mov
push
mov
lcall
mov
adc
xchg
pop
jbe
popa
into
pop
imul
repnz
adc
popa
mov
movsl
dec
jg
or
cltd
imul
mov
in
fcompl
jg
pusha
shrb
add
pop
xor
cmpsl
inc
aam
shlb
jne
fcomip
incl
je
and
cmpsl
test
sbb
popa
fimuls
filds
lcall
decl
sub
pop
jnp
out
xlat
dec
cld
stc
push
aaa
addl
push
inc
call
test
nop
adc
mov
into
out
adc
je
andl
and
decl
movsb
lea
clc
fdivl
sbb
daa
add
jae
inc
ja
cltd
jp
mov
shll
je
push
xlat
in
pop
add
xor
jge
adc
jg
jo
push
rcr
call
out
jge
loope
testl
cld
add
add
mov
sub
xchg
test
movsb
cld
decl
fwait
pop
dec
or
mov
jo
add
pop
lods
cmp
fwait
ljmp
xchg
xor
dec
and
idiv
call
addr16
add
dec
mov
loop
xchg
andl
push
mov
adc
decl
and
mov
adc
jmp
inc
sahf
cld
les
mov
das
sub
call
adc
jo
adcl
test
pusha
push
stc
mov
loopne
les
mov
lret
pop
sahf
sbb
push
mov
sbb
xor
pusha
or
jg
push
ds
add
dec
and
lcall
xor
cmp
add
jmp
mov
mov
outsb
and
imul
xchg
ljmp
pop
add
dec
inc
aam
repz
arpl
xchg
insl
pop
insb
fdivl
lcall
js
mov
push
mov
iret
sub
mov
imul
lea
xor
jg
xchg
std
in
rorl
pushl
adc
push
push
xchg
inc
mov
es
dec
in
xor
shlb
icebp
dec
imul
icebp
call
adc
push
xchg
into
or
call
andb
push
dec
shll
sbb
sarl
cwtl
xorb
lods
adc
cmpsl
repz
test
int
push
jbe
push
inc
loopne
xorb
filds
xor
jmp
je
shlb
scas
mov
push
dec
sti
imul
dec
incl
xchg
lods
push
inc
sub
and
jo
test
enter
nop
add
mov
decl
and
mov
jne
xchg
dec
pop
pop
dec
xchg
xchg
loopne
xchg
dec
mov
call
cld
push
aas
out
repnz
push
out
scas
std
call
push
jb
sub
dec
pop
dec
adc
call
mov
bound
sub
shll
xor
jb
or
ret
xchg
push
mov
decl
push
xor
test
add
out
cmpsb
mov
dec
rclb
sbb
data16
decl
repz
sub
dec
mov
outsl
jb
test
mov
mov
cmp
and
ljmp
push
ss
xchg
in
xchg
in
pand
mov
mov
rcr
push
and
in
adc
xor
mov
add
dec
rcrb
stos
in
data16
adc
jle
and
popa
xor
fstps
ror
xlat
jbe
decl
xchg
mov
jg
in
xor
xor
aam
adc
int
jns
in
xor
hlt
out
add
cmpsl
call
adcb
rorb
xor
jl
mov
lcall
mov
aam
stc
cmp
xchg
shld
lahf
test
add
jmp
lcall
nop
push
insl
movsl
ret
daa
xchg
roll
lcall
call
inc
or
xchg
and
xor
add
outsl
cmp
call
lods
ret
incl
pop
es
push
gs
adc
shrl
lcall
cli
imul
jmp
push
cs
loop
movsl
cmp
add
mov
xchg
fbld
push
pop
in
xor
rolb
lcall
loope
pop
repz
test
jle
xor
fldenv
ljmp
adc
sbb
sub
push
xor
jp
xor
mov
cli
test
into
mov
cmc
filds
loope
popa
lock
cmp
mov
mov
std
test
fbld
mov
mov
sbb
loop
lcall
mov
mov
adc
in
cmp
xor
pop
das
sub
sbb
daa
movsb
cs
cwtl
or
jmp
add
and
aad
jae
xchg
data16
cmp
sbb
cmpsl
mov
ret
pop
mov
fimull
jns
jp
lds
mov
adc
incl
call
orl
push
fsubl
movsb
mov
jp
sbb
mov
jne
jge
cli
call
clc
mov
xchg
test
rcrb
xchg
inc
inc
pusha
das
iret
jb
push
shll
add
jg
clc
stos
fcoml
push
cld
test
sbb
into
dec
xchg
pop
mov
mov
js
mov
xchg
dec
and
lds
cmp
mov
xchg
adc
push
dec
sbb
mov
push
xchg
mov
jae
dec
adc
cwtl
xor
insb
and
call
adc
inc
arpl
xor
je
in
clc
jno
imul
sbb
loopne
or
hlt
andb
shr
dec
nop
sahf
outsb
in
push
cwtl
leave
fsubrl
mov
adc
jmp
mov
pop
negb
mov
outsb
rol
adc
push
ss
adc
loop
mov
push
mov
pop
jae
inc
mov
jecxz
mov
add
push
adc
incl
je
jbe
sub
dec
add
out
mov
jb
es
aaa
cld
jmp
dec
stos
dec
adc
dec
daa
sbb
movsb
decl
ret
or
and
decl
jae
pop
cmp
pushaw
hlt
les
add
push
push
bound
mov
push
xchg
andl
lcall
jbe
sbb
jb
sbb
xchg
push
lahf
mov
es
xchg
jmp
bound
cmc
jae
subl
xor
rorl
sub
xor
mov
inc
imul
inc
or
ja
push
inc
inc
sub
loopne
xor
in
repnz
fs
mov
sub
inc
loope
hlt
push
ja
cmpsb
pop
inc
test
dec
adc
outsb
jbe
dec
mov
jb
push
or
adc
xchg
ja
push
pop
inc
push
xchg
push
addr16
xor
jmp
loop
inc
push
add
nop
push
xchg
inc
or
rclb
mov
lahf
adc
cmp
jp
movsl
sbb
cmp
cmc
inc
xor
xor
mov
imul
pop
sbb
mov
pop
ret
xor
insb
dec
sarb
dec
cmc
ss
call
es
negb
pop
add
pop
fdivl
cmc
aaa
andl
push
add
test
cmp
idivl
sub
stc
out
jnp
and
pop
and
repnz
aaa
and
mov
xor
jo
ljmp
in
aam
cld
inc
pusha
imul
ret
rclb
mov
and
mov
leave
lock
push
imul
bound
icebp
decl
inc
nop
adc
cmp
ret
jmp
xchg
sub
sub
push
lock
or
push
push
lock
and
jae
xor
lcall
xor
sub
ret
jae
inc
cmp
jbe
mov
add
mov
incl
inc
fcoms
jl
sub
bound
push
adc
xlat
cli
and
jmp
inc
jno
jge
adc
and
fs
xlat
push
inc
sar
je,pn
inc
gs
pop
leave
lcall
call
mov
pop
mov
gs
jb
je
push
mov
or
incl
xchg
xchg
dec
roll
nop
inc
sub
daa
pusha
or
add
or
call
cmp
dec
cwtl
sub
and
aaa
jecxz
mov
call
sbb
pop
sub
outsl
adc
shrl
pop
xor
mov
mov
and
pop
mov
pop
and
mov
stos
ljmp
mov
dec
jl
mov
push
and
rolb
mov
pop
in
and
fcomip
call
jnp
add
bound
jb
inc
jo
aas
sarb
xchg
sbb
cmp
mov
lret
mov
fsubp
mov
xor
les
xchg
cmp
call
and
pop
cmp
xchg
xor
mov
add
iret
arpl
popa
in
mov
movsl
and
rclb
mov
push
subb
popa
shlb
bound
test
in
ret
ljmp
xchg
bound
or
xor
ljmp
dec
inc
adc
decl
shrb
cmp
push
movsb
adc
fs
xchg
sub
jo
ds
xchg
sbb
dec
and
pop
mov
pop
lds
stos
cmp
xchg
icebp
bound
dec
cli
push
fs
or
pusha
inc
jbe
xchg
jne
xchg
outsl
jne
je
xchg
js
mov
or
jbe
inc
arpl
add
adc
inc
add
pusha
movd
mov
cmpsb
lock
outsb
movb
mov
mov
sarl
adc
pop
mov
inc
lock
call
sub
jnp
sbbl
mov
add
add
cmp
pop
stos
xchg
jnp
inc
lcall
jmp
jl
testb
xor
push
fwait
shl
mov
decl
inc
decl
insl
iret
mov
jl
pop
aam
mov
fdivrs
in
xlat
outsb
pop
out
mov
ret
xlat
in
out
pop
hlt
jmp
inc
jb
fdivl
ret
and
mov
or
jl
add
out
cli
aam
push
dec
jl
cli
xchg
insb
push
addl
sbb
mov
hlt
sub
mov
gs
ret
mov
cs
sbb
pushl
lcall
movsl
mov
lock
lds
mov
push
xor
sub
mov
push
mov
sbb
test
inc
xchg
inc
leave
sub
jmp
pop
jbe
es
mov
jmp
xchg
push
movsl
movsb
nop
push
in
bound
pop
or
bound
sbb
cs
cs
sti
rorl
rclb
movb
movsl
push
test
xor
xchg
xchg
or
or
jno
add
sbb
sbb
fcomip
jg
cmp
gs
pop
sbb
jo
stos
mov
das
adc
jmp
nop
jns
mov
pop
cltd
movsl
test
popa
xor
orl
lcall
mov
pop
mov
add
xor
popa
xor
xchg
cmp
rcrb
icebp
jmp
mov
jo
pop
int
stos
mov
jge
imulb
push
aaa
push
inc
dec
adc
dec
push
jle
nop
and
xchg
and
sub
jle
mov
repz
jg
cli
pop
call
fists
inc
dec
dec
jb
not
dec
push
out
adc
push
jg
pushl
inc
jno
jae
pusha
xchg
pusha
clc
and
adc
daa
xor
pop
repnz
popl
ds
sbbl
cmp
jae
push
repnz
loop
jno
inc
adc
bound
jb
mov
hlt
je
imul
pushl
movsb
mov
adc
push
sbb
fwait
adc
inc
xlat
test
adc
push
xchg
scas
ljmp
xchg
aam
dec
lret
test
cmp
add
shll
insb
pop
mov
daa
mov
sub
fiaddl
js
or
js
daa
mov
lcall
pop
xchg
pop
xor
movsb
add
xor
imul
cwtl
cmc
ljmp
sbb
jae
push
push
add
add
mov
test
xor
mov
jnp
lret
sbb
test
mov
imul
jl
xor
dec
mov
jmp
cmp
cmp
stc
lcall
shll
pop
bound
imul
loopne
aaa
jne
jge
test
add
pushf
fistpll
lock
ljmp
jecxz
cmp
subb
and
jb
in
inc
mov
mov
aam
jg
or
in
pop
mov
jmp
out
lods
in
push
sub
leave
or
scas
mov
lods
or
pushl
sub
cld
jns
addl
orl
popa
sub
xchg
or
xchg
stos
add
sbb
jnp
aas
out
push
sub
push
and
pushl
jecxz
push
cmp
arpl
cmpsb
add
lret
xchg
add
mov
inc
inc
dec
push
add
decl
mov
inc
fmull
adc
xchg
jbe
jbe
xor
mov
add
js
out
loop
sbb
pop
push
mov
pop
mov
cmpsb
icebp
decl
mov
ja
mov
add
lret
xchg
call
xor
ret
xor
add
arpl
fnstcw
insb
pop
jae
mov
mov
fcomip
call
and
leave
inc
sarl
gs
nop
mov
inc
sbb
pushf
jmp
pop
sub
adcl
jp
xchg
jo,pt
jnp
aad
dec
repz
push
insb
pop
arpl
clc
call
xor
stos
aam
mov
dec
int
xchg
outsl
dec
sar
sbb
inc
aad
insl
add
add
jo
jne
aam
pop
ljmp
insb
addb
pusha
fidivl
lea
gs
rcl
imul
mov
je
cmp
call
add
add
pop
xchg
adc
in
mov
fs
pushl
mov
sbb
fidivrl
out
repnz
out
je
jmp
and
jb
les
outsl
add
mov
dec
hlt
inc
jno
or
mov
push
mov
fisubrl
add
cld
xchg
cmpsb
and
shll
das
xchg
out
mov
sub
inc
pop
adc
push
or
inc
fcoms
push
decl
sub
icebp
test
sub
or
sbb
mov
xor
ljmp
decl
cmp
push
inc
adc
mov
inc
adc
imul
pop
pusha
add
mov
or
and
xchg
mov
add
insb
fsts
push
popa
adc
push
mov
push
pop
popa
xor
sbb
loope
rclb
pop
adc
add
pushf
sbb
les
xor
mov
loop
jmp
xor
xor
popa
jnp
test
push
std
call
test
pop
add
pop
pop
xor
ss
jb
mov
sbb
jo
push
out
in
cltd
cmp
jle
cmp
inc
jmp
rclb
sub
rsqrtps
sbb
xchg
arpl
cmp
mov
jg
incl
cs
add
mov
push
add
call
jmp
out
mov
ljmp
sbb
push
adc
adc
sti
dec
sbbb
cmp
mov
aaa
mov
pop
jae
mov
aas
mov
dec
daa
mov
sub
ja
mov
xlat
incl
push
stos
adc
mov
loope
adc
dec
fmulp
adc
add
ljmp
fs
popa
fisttps
mov
popa
adc
mov
or
iret
pop
mov
cmp
clc
dec
mov
out
add
movsl
sub
cmp
mov
push
add
jp
push
pop
pop
inc
pop
testl
jno
and
add
out
pop
xor
dec
mov
mov
cltd
xchg
mov
scas
add
or
sbb
jg
popf
add
mov
sbb
insb
pushf
les
mov
mov
jmp
repnz
lret
leave
icebp
inc
in
pop
sbb
lcall
test
pop
scas
pushf
mov
pushf
ja
or
in
and
outsb
decl
leave
xor
inc
jb
ja
lods
in
call
add
out
stc
add
pusha
pop
pop
lahf
loopne
jno
std
and
std
lcall
mov
fcmove
sbb
dec
daa
fcomi
mov
jmp
fistpl
sub
mov
mov
cmp
mov
push
push
out
mov
xchg
je
xchg
add
and
mov
jmp
mov
mov
sub
and
add
rolb
xchg
inc
dec
and
mov
ljmp
rcr
or
xor
outsb
out
aas
mov
divl
xchg
leave
mov
mov
xchg
xchg
lods
loope
js
sti
inc
mov
js
lods
xchg
mov
push
sar
push
add
out
roll
and
add
mov
nop
sbb
mov
insb
cltd
inc
nop
push
push
mov
jo
rcrl
lcall
loope
cmp
sbb
xchg
xor
imul
out
insl
pop
sahf
push
push
adc
rolb
rorb
cli
inc
inc
adc
incl
mov
sub
test
arpl
xor
pop
loope
mov
inc
pop
call
clc
pop
mov
orl
in
andb
jae
sbb
cmp
lcall
negl
mov
mov
pop
dec
loopne
jp
fsubl
scas
sub
xchg
mov
pop
ss
jg
mov
mov
inc
into
mov
rclb
jecxz
mov
in
or
cli
push
out
popa
les
out
in
pusha
ljmp
mov
jnp
push
repnz
scas
jmp
int3
movsb
outsl
jo
jg
decl
push
cmpsl
negb
jbe
add
hlt
inc
out
fidivl
incl
les
js
fidivrl
cld
lea
fdivr
mov
cmp
mov
inc
cld
clc
out
jecxz
lahf
lahf
sbb
test
lret
cmp
sub
push
popa
sbbl
and
mov
add
nop
and
sub
pop
push
shll
pop
lock
or
dec
jo
cmpsb
inc
mov
sub
in
rorl
jo
mov
push
or
mov
add
pusha
mov
push
or
incl
mov
pusha
xor
xchg
inc
push
push
mov
pop
push
orl
dec
movb
rorb
testb
lret
stos
mov
sub
mov
pushl
lret
stc
cmp
jecxz
sub
loopne
prefetcht2
and
sbb
cmp
incl
cmp
pusha
mov
adc
mov
mov
push
insl
inc
add
cmpsb
and
outsl
decl
xchg
push
popf
jecxz
sbb
xchg
incl
inc
xor
cmp
sub
ljmp
push
sbb
jecxz
decl
rolb
push
pop
movsl
mov
add
pop
test
call
lock
pop
jno
sbb
mov
mov
push
js
test
sub
mov
call
mov
lcall
outsl
push
and
jo
add
mov
clc
jecxz
ljmp
mov
mov
xor
vmaxsd
in
mov
xor
jecxz
lock
stos
adc
sub
sub
mov
lcall
mov
test
fcmove
cs
xchg
xchg
sub
pop
call
cmp
into
sbb
in
xor
jp
lods
mov
dec
jnp
mov
lea
add
or
or
mov
cmp
mov
sub
or
in
imul
fisttpl
in
sti
insl
add
ret
lcall
test
outsb
mov
mov
in
mov
mov
push
xchg
xor
mov
xor
inc
lds
push
push
mov
and
lock
and
xor
push
aaa
decl
adc
and
jge
sbb
adc
arpl
sbb
inc
adc
fdivs
jno
adc
xchg
leavew
inc
loopne
roll
rcl
cmc
int3
sub
es
lds
push
jns
imul
cmp
out
cmp
fildl
int
xor
into
add
jmp
call
cmp
xor
sbb
imul
call
and
inc
in
sbb
push
or
mov
mov
jmp
aam
out
mov
add
push
lcall
pop
xor
add
loopne
push
icebp
lret
loop
lret
push
adc
nop
call
addr16
lret
sbb
rcrl
call
pusha
mov
aad
fcmovb
lcall
dec
and
cli
call
xlat
mov
jmp
mov
fadd
sub
sbb
mov
pop
es
lds
dec
sub
rorl
call
incl
lds
fcomps
jb
lret
xor
dec
lret
cld
ret
out
xor
push
loop
fs
inc
cmp
fisubl
call
push
pop
mov
dec
imul
imul
mov
mov
jne
and
mov
xchg
aam
sahf
jmp
incl
outsb
shl
testb
cmp
adcl
lss
pushl
cld
xor
mov
dec
bound
cwtl
lea
andl
ds
call
pusha
test
leave
xchg
ret
xor
pop
and
and
adc
mov
loope
int
call
mov
inc
jne
or
sbb
pushf
loope
adc
and
jmp
sar
fs
dec
lret
fistl
xchg
test
lret
sub
dec
push
adc
adc
dec
sub
call
add
adc
dec
ret
rolb
sub
pop
lock
push
stc
jecxz
dec
icebp
imull
adc
dec
fcom
push
imul
adc
test
add
jg
and
js
mov
in
sti
push
decb
dec
pop
cwtl
ret
add
add
lods
stos
or
mov
out
jg
push
push
mov
or
hlt
test
ficoml
mov
icebp
jmp
cmp
scas
jl
sub
mov
and
imul
mov
jecxz
xor
fs
mov
xchg
sub
sarb
jae
cwtl
in
xor
jmp
push
xor
scas
adc
repnz
cmpsb
xor
fwait
jo
lcall
ficomps
xchg
xor
fisubrl
sub
dec
inc
xchg
cmp
pop
ja
popf
out
dec
xchg
mov
or
iret
push
sbb
adc
decl
test
mov
or
call
sbbl
pop
rolb
pop
cs
nop
fwait
sbb
clc
jecxz
jmp
inc
fwait
or
adc
pop
cmp
mov
xor
xchg
mov
dec
clc
das
clc
mov
je
mov
cmpsl
and
jle
push
jnp
ljmp
repnz
aad
or
inc
cmpsl
pop
push
sub
ret
sarl
incl
inc
lcall
sbbl
mov
mov
ljmp
inc
je
jbe
adc
mov
clc
int
pop
faddl
incl
test
mov
jp
push
sub
and
adc
into
popa
push
inc
popf
aad
je
aam
sub
test
ljmp
aad
push
lds
adc
dec
xor
lods
xchg
or
aaa
cld
mov
jmp
out
shl
mov
lock
jg
xchg
stos
addl
add
rol
movb
mov
xchg
es
mov
lds
lcall
push
rorl
mov
xchg
sbb
jge
lcall
push
lcall
imul
nop
test
xchg
aad
in
jmp
and
cmpsl
mov
scas
mov
jb
imul
xchg
hlt
movsb
outsb
pop
pushl
lea
iret
xchg
fcoml
outsb
js
mov
mov
push
pushl
aad
scas
lds
jae
test
enter
jl
inc
jnp
mov
mov
js
dec
je
dec
pop
shrl
in
nop
adc
pop
hlt
lcall
loope
mov
insb
and
cmc
test
adc
dec
aad
inc
push
mov
jb
jne
or
cmpsl
in
push
lahf
push
jecxz
jbe
jo
jg
jl
or
cwtl
ret
push
test
ret
bswap
stc
shrb
outsl
les
mov
es
xchg
enter
dec
popf
sub
jne
scas
push
ljmp
mov
xchg
mul
cmp
iret
mov
call
xor
push
fwait
in
push
mov
dec
push
inc
scas
pop
movsb
ljmp
insl
sub
les
sbb
shrl
sub
add
call
sub
in
or
cmp
adc
jmp
and
pop
xor
ret
xor
ljmp
cli
mov
into
push
cmpsb
xor
jl
and
jnp
cmpsb
ss
inc
sbb
imul
mov
lcall
xchg
push
cmp
imul
fxch
push
mov
cld
fisubs
push
aad
jbe
call
ss
sarl
ret
pop
out
neg
decl
fnsave
aam
out
cmp
add
ja
es
and
hlt
xchg
inc
add
jo
addr16
dec
jae
jg
rorl
or
cmpsl
cmpsl
fnstenv
call
test
cmp
xchg
or
int3
dec
jo
jg
and
cmpsl
inc
rolb
xor
cmp
cmpsl
xor
sub
jg
xchg
jmp
xor
faddl
iret
roll
rolb
stos
cmpl
add
fadds
pop
addl
xchg
push
push
cmp
popa
cmp
add
xchg
mov
mov
mov
push
jp
and
daa
pop
cltd
xor
mov
call
je
cs
stos
xor
xchg
je
add
cmpb
push
mov
pushl
inc
mov
cmp
mov
mov
stos
cmp
sbb
lods
sbb
decl
pushl
cs
call
mov
mov
les
cmp
inc
mov
js
jecxz
pop
xchg
mov
fwait
shll
int3
dec
sub
orl
adc
lcall
lods
lods
test
jecxz
and
stc
mov
mov
dec
jmp
push
insl
cmp
xchg
mov
rorb
ljmp
pushl
cld
mov
add
je
add
orl
jp
cld
ret
aas
incl
cmpb
nop
idivb
fs
sar
mov
lret
or
cmpsl
sbb
adc
std
xchg
adc
daa
xlat
jmp
jge
das
or
sub
or
call
jbe
mov
test
rorl
xor
sbb
mov
stos
incb
fmull
fiaddl
test
rolb
jg
or
sbb
jae
push
sbbl
xchg
mov
push
flds
es
test
adc
mov
adc
incl
xor
ud2
mov
mov
adc
mov
pop
int3
jg
dec
mov
xor
sti
or
shll
rcll
mov
stos
mov
xchg
inc
lcall
arpl
dec
jnp
mov
les
mov
mov
push
add
mov
sbb
mov
push
or
pushf
push
pushl
xchg
inc
pop
lods
lea
fwait
loopne
lds
fisttps
cmpsl
mov
push
ds
ljmp
imul
push
mov
inc
loop
fistps
pushl
or
add
mov
push
add
or
incl
hlt
sbb
or
add
inc
push
mov
movsb
xchg
add
adc
popf
xorb
daa
outsb
adc
adc
sbb
or
and
hlt
popf
mov
pop
lock
pop
xor
pushl
cmpsb
lcall
cmp
cmp
stc
sbb
mov
push
dec
sbbb
pushl
pop
adc
add
imul
add
lahf
dec
shrl
mov
lret
xchg
sahf
push
mov
mov
movsl
aam
push
shrb
mov
or
lds
dec
sbb
loopne
lcall
xor
shlb
jg
lcall
dec
cmp
stos
adcl
xchg
cmp
outsl
ljmp
les
jp
rcrl
cmp
mov
dec
inc
int3
xchg
mov
mov
sub
inc
lds
mov
pusha
int3
lcall
mov
int3
dec
fmull
and
mov
inc
int
pop
mov
insb
int
xor
incl
imul
in
jo
push
sbbb
fwait
inc
jb
push
mov
jae
into
ljmp
cs
rclb
dec
add
add
or
dec
jns
cmpsb
ja
adc
nop
add
add
ret
jmp
sbbb
jmp
add
inc
addl
mov
push
or
or
dec
cmp
xor
decl
push
pop
xchg
dec
mov
jmp
inc
nop
push
inc
mov
sahf
ja
rorl
call
mov
mov
push
pop
test
add
push
jo
add
pushf
and
or
dec
aas
call
and
add
and
movb
cmp
adc
cmp
mov
and
dec
jns
adc
sahf
out
stc
xchg
movsb
mov
arpl
add
pop
shlb
cmc
call
je
mov
mov
mov
and
xor
inc
jb
xor
daa
lods
das
cli
decl
mov
sbb
inc
inc
dec
or
dec
adc
sbb
jmp
xor
sub
test
add
call
mov
sbb
inc
int
lods
iret
mov
pop
sbb
int3
mov
push
jmp
add
repz
push
int
and
jo
aaa
pushl
cmc
test
cmc
add
sub
mov
cs
mov
push
call
clc
mov
loopne
arpl
or
stc
mov
icebp
xchg
add
pop
lea
or
jg
mov
enter
cld
inc
cld
dec
cmpsl
pop
iret
out
popf
loop
xchg
loope
sub
push
addb
inc
push
cmp
nop
cmp
xchg
xor
incl
ret
test
xlat
fstpt
mov
jp
vphaddubd
orb
pop
cmp
add
orb
pop
push
adcb
pop
aas
sbb
nop
call
cltd
xchg
subb
add
repz
lods
xchg
sub
fldenv
pop
sub
cmp
or
or
pop
or
add
xchg
adc
lahf
push
mov
or
stos
or
and
pop
fdivl
sti
pop
inc
xor
das
cli
incl
cmp
jns
test
mov
enter
in
xor
cli
cwtl
lcall
lret
les
mov
imul
sbb
sarb
in
call
cli
or
loopne
aad
push
movsl
fstps
push
shl
lcall
in
cltd
mov
fimull
pop
jl
arpl
call
fimull
pusha
cs
mov
sbb
mov
and
ffree
or
enter
jmp
and
test
pop
incl
lcall
xchg
test
in
push
repz
nop
clc
jecxz
fcomip
fnstsw
out
and
sbb
daa
fsubrs
pop
sub
jle
scas
and
sbb
jg
xchg
xchg
add
cmpsb
or
sub
push
je
add
xorb
jnp
mov
xchg
jg
push
ds
push
xorl
xor
cmp
add
add
sub
add
rolb
add
push
sbb
nop
mov
loopne
clc
or
pop
jae
xor
xor
lcall
xor
sbb
jle
xchg
push
scas
cmpl
jecxz
fwait
lods
xor
xchg
add
and
lret
je
mov
incl
xchg
push
loope
add
cmp
test
push
cld
lcall
and
lods
xchg
or
adc
mov
mov
jmp
mov
mov
sbb
push
stos
mov
lds
dec
mov
jg
mov
jl
mov
clc
and
xchg
mov
sbb
decl
pop
inc
movsb
out
adc
lods
sub
mov
push
lds
fcomip
push
mov
lret
repnz
movsl
fwait
mov
cs
mov
and
mov
incl
jge
xchg
orb
loopne
xor
xorl
enter
pushl
arpl
and
add
nop
add
or
push
roll
adc
mov
sbb
add
mov
subb
ljmp
xor
andb
sbb
dec
bound
lock
incl
into
xor
mov
ficoms
xor
and
xchg
outsl
sub
in
xorb
call
outsb
aas
mov
loop
mov
andb
and
sbbl
sub
addr16
jg
mov
pushl
mov
mov
std
adcl
out
fldcw
lret
stos
jg
fwait
mov
mov
xor
mov
xchg
pop
or
mov
mov
call
xchg
and
mov
stos
outsl
clc
and
mov
in
xchg
inc
or
bound
lods
fadds
mov
mov
js
xor
sahf
popf
or
stos
hlt
mov
iret
mov
mov
and
mov
dec
jecxz
shrl
dec
mov
lahf
or
pushl
sub
mov
pop
mov
rorb
jp
imul
mov
in
int
decl
and
in
bnd
lods
rclb
jns
ret
jg
pop
hlt
dec
push
nop
dec
sub
or
and
sub
clc
decl
pop
dec
es
adc
sub
xor
fadds
adc
call
xchg
sbb
inc
enter
pop
lods
popf
add
xor
pop
add
incl
shlb
pop
pop
xchg
scas
and
test
mov
mov
fstsw
sarb
in
ljmp
mov
mov
push
and
push
sbb
pop
or
pusha
shl
pusha
es
xchg
stc
mov
or
pop
sti
fsubr
xchg
cmc
or
lds
push
jne
jbe
arpl
sub
sub
inc
lock
movsb
push
mov
outsb
pop
stos
adc
clc
mov
dec
fs
pop
xor
dec
jmp
hlt
jg
mov
repz
jmp
mov
mov
sbb
mov
inc
pop
mov
decl
cltd
sub
lods
fdivs
and
das
and
sub
test
mov
loope
fldenv
fcmovbe
pop
insb
rcrl
ds
mov
stos
sub
arpl
insl
add
inc
lcall
push
outsl
adc
adc
out
int
pop
int
and
outsb
inc
into
incl
mov
add
adc
pop
cli
repz
pcmpeqb
inc
int3
neg
jp
je
loop
mov
negb
or
add
xchg
insl
jb
mov
arpl
mov
in
je
push
test
push
push
xor
mov
pop
cmpsl
and
hlt
scas
out
popl
cld
cld
jmp
xorl
loope
outsl
pop
loopne
call
addr16
loope
fcomip
outsl
adc
xchg
add
adc
jne
out
stc
out
xorb
pop
mov
jg
testl
add
mov
idivl
roll
iret
stos
add
mov
pushl
scas
jle
or
xor
call
push
icebp
lcall
and
pop
pop
mov
inc
lret
push
ja
add
insl
cmp
mov
mov
lods
test
inc
addr16
jmp
adc
mov
sbb
js
and
sbb
jno
lea
ljmp
sbb
movl
mov
sub
push
or
imul
outsl
dec
pop
xor
or
pop
pop
and
pop
mov
mov
std
call
test
mov
cltd
xor
scas
push
or
sbb
mov
stos
push
pushl
aad
push
sti
es
pop
movsl
push
mov
add
jbe
pop
mov
je
cmovl
je
daa
daa
fcomps
cs
dec
adc
pushf
fwait
add
sbb
cmpsb
dec
lahf
push
mov
scas
pop
dec
jmp
adc
mov
sahf
mov
mov
sub
inc
adcl
addb
scas
fdivr
incl
loope
mov
inc
sahf
jl
lock
mov
jle
inc
jbe
into
mov
xchg
and
pushf
dec
or
enter
call
push
addr16
roll
clc
loopne
push
inc
inc
test
sahf
mov
fistpll
adc
mov
mov
inc
sbb
call
and
sbb
ret
cmp
aam
inc
adc
and
ret
push
decb
sbb
add
adc
dec
xor
movsb
xor
pushl
sbb
lcall
inc
or
or
mov
incl
mov
mov
add
and
ljmp
xchg
add
shll
shr
idivl
xchg
flds
cmpb
andb
pushf
pushl
sub
pusha
or
fwait
insb
jb
es
call
or
dec
xor
ljmp
fisubrl
sbb
cli
test
inc
add
movsb
aad
arpl
sbb
xchg
andb
mov
aam
sahf
mov
popf
rcll
rclb
scas
push
inc
nop
inc
std
jg
or
jmp
insl
mov
dec
es
mov
lods
xchg
push
inc
sub
in
push
and
inc
stos
xchg
mov
leave
inc
enter
pushl
push
push
filds
lds
xchg
pusha
insl
or
pop
pop
pop
sar
in
in
pop
repz
push
mov
pop
outsl
xor
or
mov
mov
sub
mov
push
xor
fsubs
leave
dec
adc
and
lcall
adc
addr16
inc
cmp
push
test
pop
imul
pop
roll
cltd
mov
and
outsb
jo
mov
pop
iret
jns
pop
jo
andb
incl
xor
rorl
jno
je
ret
xor
dec
not
mov
dec
xor
stos
cmpsl
insb
mov
ret
sbb
roll
repnz
gs
adcw
out
cli
test
loop
inc
sub
push
pop
aas
inc
lods
sbbl
add
adc
and
dec
mov
add
jle
lock
incl
xor
lahf
and
push
pop
in
cs
fld
adc
call
pusha
gs
fs
jmp
outsb
push
cmp
ja
filds
pushl
adc
out
fldl
add
cmp
popf
lret
mov
repz
pop
mov
fistps
test
test
lret
data16
pushl
inc
sbb
test
mov
sub
pop
mov
mov
lcall
stos
mov
dec
and
call
xchg
mov
and
dec
mov
movsl
add
ret
add
mov
insb
inc
sub
mov
pusha
dec
push
adc
jmp
add
or
gs
arpl
mov
mov
hlt
inc
pop
bound
mov
icebp
and
pop
fidivl
inc
cli
pushl
dec
test
cmpl
dec
sbb
cmp
mov
lea
cltd
push
mov
int3
data16
pop
and
pop
inc
xor
pushf
or
sub
xor
push
xor
mov
aam
mov
test
pushl
std
push
mov
shrl
cmpsl
add
into
jno
jbe
call
leave
push
je
mov
jp
imul
jo
rolb
call
cld
jmp
inc
cmpsb
clc
mov
dec
jle
test
sub
lods
test
fisubrl
pop
fucomp
push
dec
cmp
adc
and
inc
into
sbb
out
pop
rorl
loopne
sarl
imul
sub
sub
push
in
mov
adc
insl
into
jae
sub
hlt
mov
jne
rcl
xchg
jl
movsl
push
sbb
fistpl
jbe
repnz
jle
mov
decl
sti
adc
test
das
js
sub
ret
aaa
sbb
std
dec
imul
out
daa
push
cmp
mov
ljmp
jmp
dec
push
out
push
xor
and
push
std
push
mov
sub
call
cld
mov
push
xchg
aad
push
and
or
xor
decl
jp
mov
add
xor
stos
dec
push
jns
inc
pushf
push
leave
dec
dec
mov
jmp
pop
xor
adc
mov
sub
xor
jns
icebp
xchg
inc
inc
pop
mov
cwtl
in
jg
mov
lahf
cwtl
xchg
mov
pop
or
rclb
mov
insb
sbb
incl
repnz
jmp
push
sbb
gs
mov
sbb
js
fadd
adc
dec
sbb
outsl
fdiv
dec
es
cmpb
xor
sbb
push
stc
pushf
in
pushl
xchg
shll
pop
xchg
xchg
pop
out
or
cmp
mov
in
imul
mov
les
inc
shl
iret
jl
int
inc
adc
outsl
leave
xorl
fwait
xchg
or
mov
nop
sub
ds
xchg
inc
and
adc
and
adc
outsl
pop
add
test
dec
jbe
cmovs
jg
nop
pop
mov
cmp
aaa
or
pop
bound
jl
mov
incl
dec
test
adc
je
fdivl
adc
out
daa
je
inc
mov
mov
push
pushl
mov
xchg
mov
incl
jnp
pop
dec
cmp
ljmp
and
push
and
fmuls
decl
mov
mov
stos
iret
and
sahf
push
cmpl
decl
scas
add
stos
push
mov
mov
xor
test
push
shlb
sub
out
cli
decl
pop
nop
push
call
idivl
mov
in
shlb
je
or
pop
loopne
inc
lock
or
jns
bound
sbb
dec
push
xor
mov
incl
add
pop
pop
or
add
jbe
fs
and
mov
or
loopne
ret
adc
fcmovbe
ret
sbb
dec
popa
or
add
sbb
mov
sub
xor
cmp
clc
mov
pushf
inc
and
stos
arpl
movsb
inc
lea
cli
push
add
jl
or
dec
and
call
push
xchg
scas
xchg
push
mov
adc
scas
int3
sub
rcrl
xor
or
aaa
testl
test
and
dec
pusha
or
lock
sbb
push
and
jg
clc
loopne
or
sbb
jnp
lcall
mov
fs
push
xchg
dec
js
jl
testb
or
dec
loopne
shlb
dec
mov
and
mov
jmp
adc
aad
inc
mov
mov
sbb
xor
cmp
mov
imul
dec
push
adc
lahf
xchg
cmpsl
sub
adc
iret
movsl
das
inc
xchg
stos
mov
xor
adc
sbb
push
inc
aam
dec
les
lcall
mov
push
jmp
add
or
adc
out
fcoms
int3
ja
int
incl
imul
sub
jmp
xlat
add
pop
push
mov
cltd
pop
push
outsb
call
pushl
std
pop
loopne
test
jg
fisubl
aam
push
cld
inc
pop
test
mov
or
out
mov
cli
rolb
jp
cltd
xor
xor
dec
pop
call
cli
add
shll
pop
ret
xchg
cmp
lret
and
jo
mov
fisubrl
popa
jp
pushl
ret
sbbb
js,pn
adc
lahf
jo
inc
ja
xchg
pusha
xor
dec
shrl
mov
jo
shlb
orl
inc
adc
shll
inc
and
mov
lcall
pushl
out
fwait
xchg
mov
popf
add
cmp
hlt
add
xorl
xor
fisubrs
mov
inc
addl
add
addl
pushf
and
sbbl
sbb
and
ljmp
int3
adc
push
cmpb
mov
nop
call
insb
mov
cmp
fdivr
call
popf
call
xchg
in
mov
sbb
fucomp
inc
popf
repnz
aad
leave
aad
cmp
pushf
jl
pop
sub
mov
add
loope
test
inc
std
add
dec
mov
pop
xor
popf
stc
fs
adc
fmuls
xchg
popf
dec
stos
inc
cltd
dec
in
stos
lock
incl
int3
lret
xchg
bound
mov
ljmp
sahf
push
jno
push
inc
push
dec
mov
add
dec
mov
add
leave
fsts
push
dec
jl
decl
inc
pushf
icebp
cltd
dec
clc
pop
push
cmp
fcoms
pop
mov
mov
lds
or
xchg
inc
pop
add
mov
push
adc
inc
shl
mov
lret
in
in
shl
rcll
sbb
sub
pop
cmp
add
xchg
sarl
call
pushf
add
fadds
pusha
xchg
adc
xchg
imul
cli
or
scas
push
repnz
push
adc
call
or
or
adc
sbbl
outsl
clc
outsl
mov
movsb
add
mov
mov
cli
decl
loopne
sbb
xchg
xchg
clc
pusha
adc
ljmp
pop
insb
inc
or
pop
push
pop
lods
add
fldl
adc
sbb
ret
std
mov
rclb
inc
addb
adc
add
clc
cmpl
add
jg
adc
xchg
cld
dec
fstps
pop
out
mov
jno
adc
cwtl
rclb
mov
clc
mov
bound
and
and
push
cmpl
test
adc
sbb
jns
clc
jl
testl
jmp
aam
dec
leave
dec
dec
ror
mov
add
mov
inc
or
scas
adc
cwtl
dec
mov
mov
shlb
push
mov
les
rorb
shr
sbbl
or
das
sar
sahf
rol
jge
push
call
or
in
mov
xor
pop
mov
cmc
dec
out
mov
in
add
push
mov
mov
or
pusha
lea
mov
inc
or
arpl
jmp
inc
or
ret
or
arpl
lods
insl
xchg
dec
adcb
lcall
inc
push
fwait
jb
push
inc
rclb
rorl
add
adc
inc
jne
in
ljmp
cmp
outsl
and
xlat
insl
inc
pop
jbe
xor
jbe
pop
sarl
jg
sbb
rorb
orb
test
rcrb
bound
leave
xchg
add
decl
dec
xchg
into
sub
push
xor
out
cwtl
or
nop
clc
inc
nop
and
jnp
rcr
push
xchg
lcall
sbb
shlb
call
mov
pop
nop
jmp
int
or
jno
out
mov
mov
and
and
cwtl
jg
data16
test
cmp
cmp
and
mov
call
sub
xchg
xlat
jge
and
loope
ss
inc
pop
mov
cmpsl
sbb
rol
lcall
mov
sbb
pop
fcompl
dec
sbb
iret
es
test
fisttps
les
jl
mov
loope
iret
cld
jo
sub
sahf
scas
push
sahf
sub
lret
jo
cmpsb
das
shlb
lcall
icebp
cs
aad
fidivrl
dec
sbb
call
add
mov
xor
lock
mov
pop
jns
arpl
ljmp
shlb
push
cmp
int3
mov
inc
xor
adc
js
cmp
sub
lods
arpl
orl
xor
negb
ljmp
sbb
call
or
pop
inc
ret
push
push
cmc
rol
incl
adc
sbb
inc
and
iret
js
jne
inc
jno
pop
jo
mov
push
cld
dec
add
or
inc
add
in
pushl
jge
xor
add
inc
sbb
add
shrb
inc
pop
and
aam
mov
vrcpps
mov
in
mov
mov
mov
mov
push
or
push
es
push
cs
imul
mov
scas
clc
incl
in
int
inc
movsl
or
or
jmp
or
sbb
test
call
cld
leave
sahf
cwtl
into
aaa
mov
es
ds
mov
fmuls
cmc
mov
mov
adc
loope
mov
out
out
rcrl
push
into
decl
dec
xchg
xchg
pop
mulb
dec
mov
nop
mov
movsl
mov
mov
scas
adc
sbb
sbb
xchg
adc
mov
lcall
adc
adc
nop
sub
push
mov
push
jecxz
fidivs
mov
add
lcall
fs
cmp
into
pop
mov
jecxz
push
test
sahf
pop
aam
mov
test
mov
cmpsl
pop
in
sub
arpl
push
adc
pop
mov
out
mov
xchg
push
and
push
pop
lds
xchg
lods
mov
and
xor
push
ret
push
add
dec
and
and
out
jp
inc
sbb
cmpl
xor
adc
movsb
lahf
aam
add
nop
lcall
aam
aam
movsl
adc
iret
add
aaa
xchg
cmc
lahf
add
int3
into
jb
into
or
and
jo
inc
xor
rcrl
add
mov
je
add
repnz
sbb
dec
aad
rcr
movsb
sub
pop
sub
push
xchg
xor
cld
push
pop
dec
pop
xchg
movsl
mov
dec
decl
ficompl
adc
sbb
add
sbb
leave
push
pushf
nop
in
sub
shlb
inc
popf
pop
add
cwtl
inc
pop
adc
fcomp
gs
xchg
ds
jecxz
mov
scas
clc
mov
jge
aam
inc
mov
and
ljmp
jb
lcall
push
loop
loope
pop
mov
es
out
in
xor
mov
inc
lret
int
nop
adc
mov
rcll
pushf
pop
push
outsb
imul
dec
jmp
add
sbb
aam
clc
dec
inc
shlb
sub
or
outsl
and
out
sbb
int
fldl
out
xor
dec
pop
aad
jle
pop
or
in
push
incl
adc
fidivl
inc
mov
lds
dec
jl
out
push
or
xor
cmpsb
lds
jae
add
jmp
xchg
jge
mov
sub
inc
and
inc
fbld
decl
dec
mov
int3
add
repz
std
lcall
jo
pusha
insb
xor
push
mov
xor
dec
xor
cld
lret
xchg
dec
push
rol
lods
or
jae
int
mov
enter
push
mov
push
rclb
mov
jg
sub
loope
sahf
pusha
or
xchg
or
pop
sub
sbb
sub
adc
xchg
leave
cli
ljmp
push
lcall
inc
mov
adc
xlat
loopne
push
sub
or
sbb
adc
add
scas
mov
add
movsb
inc
sbb
xchg
xor
sub
push
mov
adc
subl
ss
push
rorb
iret
mov
pushl
ret
jle
data16
inc
dec
out
or
push
test
sub
jmp
mov
or
lcall
popf
xchg
dec
fsts
call
xchg
and
cmp
fimuls
adc
stos
bound
inc
add
scas
and
mov
pop
jno
pop
dec
cmp
dec
or
aam
mov
testl
mov
pop
lock
cmp
dec
movsb
aad
lea
push
hlt
call
mov
adc
jmp
jp
ficoml
stc
nop
mov
arpl
call
icebp
pop
inc
inc
pop
arpl
jo
sub
push
lods
movl
imul
outsb
add
mov
inc
inc
in
or
xchg
push
sbb
pop
adc
loope
adc
mov
push
faddl
dec
pop
loop
inc
mov
ljmp
dec
jmp
lret
rclb
xor
dec
ljmp
mov
xor
jge
dec
xchg
sub
push
push
mov
inc
sub
iret
lcall
ja
add
insb
mov
mov
adc
call
jl
in
imul
pop
icebp
inc
cltd
and
add
ret
push
sub
cmp
clc
fucomi
ret
and
cmp
sbb
inc
loope
or
cmpsl
mov
jmp
xorb
popa
fadds
and
and
jbe
jle
jmp
ljmp
ret
sbb
bound
insl
add
movsb
ljmp
movsb
mov
xlat
ss
int3
lret
shrl
cli
inc
call
stos
loop
mov
test
loope
sbb
inc
push
inc
out
negb
push
mov
inc
mov
lcall
mov
fprem
subb
xor
lds
sahf
pop
mov
cmp
idivl
mov
idivl
pop
hlt
jmp
jne
lock
xor
push
add
lahf
pusha
xor
adc
sbb
shrb
inc
or
test
inc
lock
hlt
inc
ljmp
jl
fiaddl
shrl
mov
xor
in
fbstp
lods
and
lea
lea
add
dec
push
js
orl
push
sbb
ljmp
jne
stc
arpl
ss
hlt
call
cld
jge
cmc
mov
push
push
ljmp
stos
adc
in
xor
sbb
outsl
pusha
enter
shrb
mov
cmp
cli
pushl
xor
dec
hlt
rorb
mov
popf
aaa
jge
push
call
call
cmp
dec
cltd
ucomiss
notb
inc
xor
in
out
jp
xorb
and
add
jo
idiv
jg
test
cmpsl
mov
and
sbb
push
sub
inc
mull
outsb
mov
imul
icebp
es
int
repnz
dec
sbbl
imul
lods
push
mov
les
cmp
pushl
and
les
arpl
pushl
pushf
sub
lds
jns
push
push
mov
sti
sarb
mov
xor
or
mov
or
addr16
push
pop
shrb
pusha
js
jg
sti
pop
jl
add
xchg
jmp
jg
xor
sarl
pop
cmp
iret
xchg
je
rolb
xchg
push
dec
sar
ja
call
inc
dec
adc
nop
pusha
inc
sub
lret
unpckhps
test
call
sub
fadds
push
call
roll
sub
adc
or
decl
sbb
ds
add
push
adcb
je
shlb
cmpsl
pusha
imul
jmp
sub
fst
movsl
lret
sub
xchg
shrb
mov
lcall
les
or
loopne
les
imul
incl
test
mov
popa
movl
pop
shrl
pop
mov
or
dec
mov
dec
jno
ds
lock
mov
fadds
add
push
mov
push
fisttpl
sub
loope
mov
out
xorl
sbb
es
jle
adc
ret
decl
and
fldl
mov
pop
mov
fwait
shrb
xchg
movsb
in
fistps
jl
jnp
sbb
inc
daa
inc
mov
sub
call
pusha
mov
pushl
rcll
scas
aas
push
repz
cmovno
mov
test
ret
les
and
xchg
sbb
xor
sbb
cmp
adc
dec
push
cvtps2pi
nop
inc
mov
or
jg
lds
push
dec
icebp
add
sbb
rolb
sbbl
add
pop
lea
pushl
hlt
sbb
jno
test
bound
ljmp
cld
jmp
sbb
cs
arpl
scas
decl
sub
or
int
roll
lea
mov
or
adc
pushl
rcll
aam
xor
mov
push
xchg
iret
inc
in
jae
cmp
scas
rorl
nop
mov
add
sub
add
ret
aad
jmp
push
mov
andl
push
cmp
cmpsb
cltd
test
test
fwait
jle
call
xor
xorl
inc
mov
xchg
ljmp
fnsave
leave
sub
sahf
xchg
orb
jo
mov
pop
pop
fidivrs
incl
mov
pop
ret
mov
fisubrs
mov
aam
or
pop
jp
and
push
imul
mov
inc
lret
mov
mov
sub
sub
push
jnp
loop
dec
mov
js
cs
ret
xchg
sbb
and
mov
inc
lods
add
pop
xchg
cmp
decl
and
mov
in
mov
mov
xchg
cmp
sub
stos
jnp
push
ljmp
cli
mov
ljmp
mov
data16
iret
mov
in
dec
mov
mov
add
or
ljmp
hlt
mov
or
mov
cmp
ret
sbb
rorl
popl
rcl
push
sbb
xchg
repnz
mov
dec
xchg
dec
and
mov
lret
aam
dec
sbb
and
fists
sub
into
cmp
js
dec
cmp
rcl
mov
dec
repz
aam
dec
flds
in
mov
cmp
fstl
das
lds
repz
in
lahf
aam
dec
test
in
int3
dec
xor
jmp
mov
mov
sub
cmc
xchg
pop
arpl
dec
or
outsb
fprem
pop
xor
movsl
mulb
push
inc
or
or
decl
xchg
inc
sub
shlb
outsl
cli
ja
cwtl
and
mov
push
mov
jb
cld
in
daa
cmp
mov
arpl
lahf
cli
fmuls
imul
leave
push
lods
inc
das
test
or
and
push
jbe
and
loope
pop
xor
scas
in
sbb
mov
andb
loop
jg
addl
xor
jo
bound
push
mov
test
push
std
lcall
insb
xor
push
int3
lods
xor
xorb
mov
lock
xchg
inc
or
incl
jle
pusha
or
subb
sbb
int3
push
fdivs
jns
shll
popf
jmp
xchg
add
xorb
sbb
out
adc
repnz
nop
es
inc
add
jg
test
xor
jo
dec
test
fs
xchg
dec
pop
adc
mov
push
sub
lcall
push
cmp
pop
nop
jbe
add
bound
mov
les
arpl
fdivl
xlat
push
movsl
ss
lcall
loope
inc
fst
xor
dec
mov
mov
outsl
call
dec
dec
push
mov
dec
fdivrs
add
sahf
ret
js
test
add
mov
fcmovbe
into
dec
jbe
shlb
add
incl
jmp
adc
xchg
popa
push
in
test
push
cld
incl
lods
mov
add
adc
xchg
xchg
xchg
iret
and
decl
hlt
dec
and
mov
add
lods
add
enter
mov
addb
dec
lcall
or
dec
outsl
sub
inc
pop
repnz
pop
dec
mov
adc
jecxz
and
or
das
add
shlb
jl
adc
jb
mov
outsb
sbb
xchg
inc
out
addb
add
jle
ds
sub
pop
rcrl
push
in
pop
subb
mov
dec
pusha
rcl
movsl
decl
add
jnp
or
loopne
push
and
push
and
push
jmp
lods
addr16
mov
movsl
xor
pushf
aam
dec
xor
and
pop
cmc
jg
cwtl
icebp
sbb
and
insb
repz
iret
lcall
dec
stc
pop
add
shrl
pop
sub
or
test
mov
adc
outsl
andl
adc
std
xchg
inc
inc
sub
dec
lcall
xor
je
das
aaa
xchg
int3
rclb
jb
es
out
and
ja
paddd
incl
jnp
push
popf
mov
out
lret
jae
jmp
fnstcw
shll
pushf
out
mov
sub
sub
dec
call
inc
jno
mov
idiv
scas
sbb
inc
push
cmp
jo
sbb
mov
insb
ljmp
pushl
ds
add
es
clc
pop
xchg
jp
pop
sub
inc
mov
test
push
jmp
cmp
add
dec
and
imul
imul
loopne
pop
add
xchg
ljmp
mov
test
push
jmp
or
jbe
mov
xor
jo
jmp
lock
mov
les
xchg
sub
shlb
sub
ljmp
mov
outsb
mov
inc
add
lods
sbb
sbb
pushl
aam
aam
sbbb
dec
ja
add
pop
pop
loopne
cmp
ljmp
movsl
push
sub
mov
fwait
sub
lods
mov
imul
push
or
decl
mov
xor
adc
insl
or
adc
int
sub
les
push
cmp
and
xlat
adcl
outsb
inc
lcall
daa
xor
mov
pop
dec
lods
push
inc
xchg
mov
cmp
jbe
cltd
repnz
out
out
ljmp
jo
jmp
jmp
imul
xchg
out
andb
inc
lea
sahf
decl
or
shr
and
cmpsl
fwait
outsb
inc
popa
fnstsw
leave
jbe
and
add
jnp
mov
ss
loopne
es
push
xchg
jmp
jno
or
sbbl
orb
mov
and
cld
sbb
jg
cmc
decl
cli
pop
std
cli
inc
fs
mov
or
loopne
inc
jl
aas
cmp
dec
mov
dec
test
xor
into
ljmp
in
push
leave
int3
or
xor
or
jb
mov
jbe
mov
mov
jmp
bt
mov
adc
push
fadd
data16
pop
mov
dec
scas
call
sub
ljmp
mov
aam
inc
dec
jno
stos
mov
mov
mov
loopne
ljmp
jmp
cmp
out
les
mov
sbb
mov
lods
or
xchg
dec
roll
loopne
sti
pop
shrb
ljmp
xchg
mov
aad
xchg
pop
mov
jmp
cs
xchg
stos
fdivrl
ss
dec
xchg
pushf
xchg
mov
incl
cld
ljmp
ljmp
fildl
cld
jne
add
ljmp
ljmp
cmpsl
or
push
add
push
out
add
push
adc
ret
ja
dec
dec
aam
inc
jmp
movsb
ret
push
dec
mov
clc
call
mov
push
mov
pusha
push
loop
pop
into
movsb
pusha
vsubss
int3
and
fcomip
jmp
sub
jle
js
add
inc
and
ljmp
lds
and
cmp
repz
pop
pushf
or
or
sub
ljmp
dec
in
scas
mov
int3
inc
lods
add
ret
enter
inc
pop
in
xchg
sbb
inc
inc
adc
or
add
mov
bound
test
aam
pop
sub
xor
mov
repz
mov
ret
icebp
pop
dec
fcomip
dec
inc
push
xor
push
ret
aaa
xor
repnz
hlt
cmp
imul
cmp
adc
mov
nop
or
test
mov
imul
ljmp
inc
push
leave
xchg
xchg
clc
ret
adc
push
and
inc
mov
or
insb
leave
inc
sbb
inc
nop
inc
inc
mov
jb
out
push
dec
nop
adc
ljmp
dec
pop
movsb
std
or
dec
and
repnz
mov
cld
lret
pushf
mov
xchg
das
sarb
add
popf
out
sub
movsb
push
rorb
testl
add
test
shl
call
push
mov
inc
dec
push
pop
mov
repnz
loopne
jo
add
inc
lcall
enter
out
push
xor
stos
and
push
mov
mov
cmpb
inc
mov
test
test
enter
add
es
sub
rorb
lret
lods
int3
inc
dec
mov
ret
out
test
sbb
mov
adc
push
jp
mov
fisttpl
mov
test
lock
jl
hlt
or
loopne
mov
ljmp
mov
rcll
lock
adc
in
lcall
mov
adc
mov
add
int
mov
push
lock
ljmp
xor
and
cmp
call
add
aad
mov
in
adc
loopne
lods
out
jo
aaa
mov
push
jo
idivl
imul
incl
mov
inc
es
fsubs
decl
push
aaa
dec
push
push
mov
lods
and
cli
mov
xchg
clc
xchg
pop
fsubl
movsb
sbb
aaa
cld
in
incl
addr16
lret
jp
mov
mov
shl
sub
pushl
cld
dec
nop
insl
cld
iret
loopne
mov
icebp
scas
addr16
std
sub
xchg
mov
cld
push
push
repnz
loope
imul
cmp
mov
or
push
ret
ljmp
orb
add
inc
push
xchg
addl
jae
out
incl
and
aas
pop
loop
sub
or
xchg
cmpsb
add
call
rcrb
jle
decl
and
lods
sbbb
ljmp
cmp
hlt
incl
cwtl
mov
mov
in
movsb
xor
sub
ret
mov
lods
xchg
xor
pop
mov
push
loop
sbb
sbb
dec
cs
push
lret
jl
das
and
inc
cld
add
adc
rol
pminsw
int
hlt
or
sub
mov
out
jo
and
clc
sub
dec
xor
lds
pop
dec
nop
or
das
jp
ds
icebp
ljmp
mov
ficoms
lock
bound
mov
xlat
jbe
fsubs
add
and
pushl
push
mov
les
xchg
in
adc
inc
inc
insb
jno
hlt
lcall
mov
sbb
pop
mov
out
xchg
jp
xchg
dec
add
push
inc
into
int
jp
pop
cwtl
fs
fstl
dec
cwtl
and
in
insl
mov
nop
pushl
shlb
ja
cmpsl
ja
mov
and
addr16
decl
sbb
jns
or
fists
pushf
clc
push
out
xchg
pop
stc
xchg
ret
dec
xor
adc
jge
cmp
pusha
subb
add
xchg
and
test
or
push
aam
and
adc
movsb
ljmp
fimuls
push
call
and
ljmp
push
into
outsb
mov
sbb
push
mov
adc
call
push
call
cmp
inc
jg
lret
xchg
push
xchg
mov
push
aam
xchg
jo
scas
loop
scas
cli
pushl
and
adc
sahf
push
lods
inc
xchg
sub
pop
out
pop
mov
incl
inc
pop
or
jo
push
and
lcall
pusha
mov
mov
or
add
or
das
xor
xor
mov
mov
incl
dec
aas
or
sub
pmaddwd
decl
aad
test
sbb
xor
push
mulb
push
cmp
lods
xchg
add
xor
aas
push
jmp
incl
mov
mov
lea
push
ja
cmc
mov
call
scas
pusha
adc
outsl
pop
add
mov
push
jnp
inc
mov
aaa
imul
ds
lcall
std
ljmp
jb
jp
outsl
push
lock
fs
push
aam
sbb
push
sahf
xchg
sbb
adc
lcall
jbe
mulps
cmp
outsb
and
ds
cmp
in
xor
lret
xorl
enter
xor
lcall
xlat
pusha
push
push
push
mov
jmp
enter
sbb
and
mov
sbb
ljmp
add
or
call
shlb
into
inc
loope
bound
mov
scas
outsl
call
and
inc
push
cs
inc
stos
inc
inc
sbb
rorb
mov
sub
adc
nop
sub
add
int3
popa
or
movsl
int
rcrb
rcrl
rorb
pop
pusha
add
ds
mov
push
cmovg
xor
lock
mov
sub
pushl
ss
sbb
push
push
add
adc
adc
xor
es
call
nop
data16
push
xchg
je
divl
or
outsb
add
incl
pop
ficompl
add
xor
push
pop
and
test
jo
cmp
jmp
sub
mov
inc
jl
mov
scas
fcomip
int
adc
cmpsl
mov
inc
sarl
xlat
mov
lcall
test
in
repnz
jecxz
pop
sbb
pop
aas
push
jns
xchg
push
xchg
incl
dec
fsubrl
mov
pop
jne
pop
sti
icebp
pop
fwait
dec
mov
in
mov
inc
sbb
hlt
push
loope
les
div
jns
xor
jg
push
push
xor
sbb
pop
jmp
and
inc
subl
dec
mov
cmc
daa
and
inc
and
pop
push
pop
lret
ljmp
enter
sbb
aaa
sub
daa
rorl
and
lahf
add
rorb
fcomip
sub
incl
sub
add
mov
rclb
push
enter
jg
bound
or
std
mov
cld
inc
pop
push
jecxz
cs
adc
jg
or
pop
jo
cld
fisubrs
cmp
mov
call
inc
sysenter
out
mov
addr16
dec
test
push
xor
jae
inc
jmp
decl
cmp
xchg
mov
iret
push
mov
lods
inc
xchg
clc
push
mov
mov
ljmp
mov
fnstenv
clc
push
xchg
mov
call
setbe
push
inc
inc
inc
sbbb
les
outsb
je
cmc
pushl
in
and
mov
mov
out
jae
adc
scas
cmp
int
xchg
lcall
ja
test
cmc
jne
js
imul
lahf
ljmp
push
dec
mov
ret
jae
mov
sar
loop
jo
std
mov
cmp
cld
jg
pushl
roll
adcb
inc
scas
dec
push
jmp
les
test
pop
rcrb
inc
xor
fistl
call
arpl
and
stos
movsl
stos
xor
push
leave
mov
fwait
cs
loop
jg
xchg
bound
icebp
sub
jmp
rclb
fwait
test
add
push
movsb
adc
out
aam
sub
rolb
sub
loopne
aaa
cld
mov
negb
sub
xchg
sbb
and
and
jmp
jno
insl
rorb
fisttpl
cmpsb
sbb
movsl
mov
ljmp
rolb
push
xor
add
js
xchg
jle
sar
fcomip
sbb
xor
cmp
mov
mov
aas
icebp
sets
xchg
sub
imul
xchg
and
mov
push
lahf
dec
inc
fsub
mov
or
sub
cwtl
jp
inc
in
das
and
xor
jnp
xchg
inc
int3
insl
mov
sbb
inc
mov
dec
es
push
xchg
lods
aaa
inc
xchg
data16
rorl
aaa
cld
cmp
mov
movsl
dec
inc
mov
add
push
mov
jne
test
inc
std
incl
push
jmp
ret
cld
lods
jg
addr16
push
enter
movsl
xchg
add
pop
mov
cmp
jl
mov
push
or
xchg
lret
xor
xlat
cmc
mov
shr
ret
call
push
mov
pushf
into
pop
divb
cwtl
das
inc
cmpsl
inc
mov
adc
call
popa
lcall
les
fsubrs
bound
lea
incl
or
orl
arpl
int
add
sarb
dec
pushfw
pop
jmp
sub
rcrb
addb
adc
pusha
mov
inc
mov
pusha
or
dec
clc
inc
lods
int3
ret
lret
mov
lods
cmp
data16
push
lcall
xchg
jge
arpl
das
fsubl
dec
pop
pop
push
das
js
ds
xchg
push
fdivp
loopne
mov
popa
pusha
and
addr16
push
pop
mov
xchg
or
sub
mov
pushl
insl
sbb
data16
outsb
xor
push
or
add
insl
mov
mov
or
je
dec
push
fisubrs
cltd
pushf
cltd
aam
lods
shll
out
int3
push
ljmp
pop
js
cmp
fwait
adc
xchg
jno
mov
js
fbstp
mov
sub
mulb
lock
jmp
dec
ret
mov
pop
jl
add
mov
incl
and
mov
mov
insb
xor
lahf
add
or
cmovbe
sub
cld
push
daa
leave
andb
jne
imul
mov
leave
push
sar
decl
and
lea
xlat
jge
dec
addl
xchg
fildll
pop
je
pushf
adc
inc
inc
sub
int3
inc
or
decl
out
fcmove
dec
ret
stos
add
rorl
loopne
mov
mov
data16
mov
pop
push
hlt
incl
sub
andl
cli
shlb
data16
xor
scas
add
out
popf
rcll
xchg
cmp
mov
mov
loopne
cli
fbld
jl
rcll
fidivs
les
leave
dec
add
decl
lcall
mov
sbb
mov
push
cwtl
inc
sbb
icebp
dec
popa
lea
and
and
popa
pop
incl
sbb
and
cwtl
lret
sbb
pop
jl
in
push
pop
mov
mov
push
arpl
mov
das
lcall
outsl
pop
je
repz
incl
mov
cmpsl
xchg
add
loopne
call
push
lds
cmp
ljmp
incl
sub
sahf
cs
cs
push
push
sub
mov
cmp
inc
push
incl
loope
xchg
or
ret
andl
stos
movsb
das
xchg
inc
xchg
inc
xchg
inc
leave
movsb
clc
nop
push
xchg
arpl
int3
jns
or
xchg
aas
jg
incl
and
add
subb
shll
in
imul
add
cmpsb
popa
ja
data16
call
inc
sbb
pop
imul
fdivrl
sbb
or
mov
sbb
mov
clc
stos
xchg
cltd
mov
xchg
xor
loop
mov
dec
pop
push
aas
out
jnp
call
add
pop
daa
inc
push
movsb
jns
push
in
mov
shlb
xor
add
rclb
and
cmp
into
add
into
fldenv
sbb
push
fcomp
addl
jbe
mov
call
scas
mov
adc
add
scas
shl
sbbb
and
adc
sub
outsl
decl
and
push
sub
jp
inc
cmp
sbb
pop
adc
cwtl
cmp
jmp
adc
pushaw
imul
sub
pop
cwtl
popa
stc
pop
cltd
data16
xlat
sahf
ja
rcr
adc
lcall
es
cld
icebp
pop
mov
xor
xor
leave
inc
arpl
pushl
fisubl
or
rcll
icebp
sub
mov
dec
movsb
and
sbb
scas
cli
jmp
cmp
inc
jo
adc
add
pushl
and
scas
mov
or
psubsw
je
dec
sbb
lea
dec
sbb
insl
dec
adc
xor
dec
xor
cmp
ds
and
add
pushl
xor
lds
push
push
mov
mov
pop
repz
mov
inc
lock
add
mov
decl
adc
rcrl
mov
jo
mov
lea
sbb
call
insb
cmpsb
pop
sub
push
xchg
jbe
lret
mov
mov
test
cmp
add
cld
in
jae
sbb
ror
inc
adc
rolb
fmul
sarl
negl
and
jo
incl
sbbb
lahf
fsubr
lea
jge
in
pop
arpl
test
mov
mov
dec
cmp
mov
jle
scas
cmpl
push
xchg
adc
xorl
popa
adc
sti
addl
faddl
icebp
pop
add
cs
call
sub
imul
and
inc
pop
push
inc
scas
sahf
sahf
js
mov
xor
pop
call
cmc
cwtl
pushf
arpl
aam
jb
stc
out
jae
cmc
mov
jmp
insb
pop
mov
jb
mov
movsb
mov
negl
inc
sbb
lods
mov
scas
sahf
lcall
stos
jmp
leave
loopne
lcall
scas
lds
or
test
aad
and
lods
add
loop
mov
xor
into
shrb
lods
or
dec
mov
sub
sub
orb
mov
lock
jmp
push
xor
test
int3
sbb
pop
jbe
xchg
jl
jmp
popa
add
sbb
mov
jnp
dec
ret
call
call
adc
fsubl
sub
cmp
stc
pop
sbb
fs
mov
inc
inc
rorb
lcall
cmpsl
cmp
jmp
pushl
jae
cmpsb
add
fnstenv
xchg
leave
push
add
out
shrb
outsl
pushl
jo
incb
insb
bound
add
xor
in
push
sbb
push
les
or
decl
adc
jge
inc
jo
pop
popf
or
mov
mov
push
mov
mov
push
rcrb
clc
inc
inc
or
pop
mov
add
xor
decl
repz
xchg
lcall
push
xchg
xorb
and
nop
daa
ss
pushl
jp
adc
lret
mov
pause
push
js
push
adc
mov
outsl
jns
lcall
lcall
push
mov
mov
pop
stos
jl
fiaddl
call
dec
push
in
fildl
test
lds
pop
cmp
subb
push
pop
cltd
sub
loop
decl
ret
ljmp
sbb
xchg
mov
sbb
add
ret
jns
jg
jmp
lcall
dec
loopne
cmp
rcrl
jg
inc
in
test
sahf
mulb
mov
push
stos
sbb
rorl
mov
lock
dec
mov
out
cli
adc
or
hlt
lock
mov
add
jg
cwtl
or
jae,pt
xor
push
jno
jo
int3
pop
roll
mov
xor
sbbl
fdivp
jmp
jo
popa
xor
pop
xchg
sub
out
ljmp
sti
subb
adc
aaa
sti
jg
decl
int
pusha
mov
sbb
dec
es
xchg
push
push
aaa
lds
inc
lcall
std
jno
rcrb
add
dec
xchg
jo
dec
fxch
repnz
jmp
adc
add
sub
mov
jmp
inc
adc
inc
pop
shrb
decl
adc
jae
push
cltd
enter
lcall
loopne
push
sbb
fisubrl
es
imul
les
in
jmp
call
mov
notl
test
aam
adc
mov
xchg
lcall
pushl
in
mov
notb
xchg
out
jle
push
xchg
outsl
mov
incl
add
dec
adc
les
add
adc
orl
aad
xchg
les
push
inc
pop
stos
adc
pop
ret
mov
and
cmp
mov
popf
movsb
fs
fcomip
jns
dec
xchg
push
xor
and
cmp
jle
xchg
mov
gs
mov
cli
fwait
mov
insl
inc
clc
push
mov
in
ljmp
rolb
mov
inc
add
imul
lret
dec
loope
sub
jmp
gs
cltd
int
loopne
push
rolb
and
loop
mov
jmp
or
push
jno
pop
sahf
add
fcmove
xchg
cmpl
outsl
cmp
push
pop
call
sub
cli
pop
xchg
inc
lods
lret
out
fstl
fsincos
nop
sub
sahf
daa
mov
push
sti
daa
cmp
mov
push
lret
mov
orl
inc
adc
fisubl
push
xchg
daa
pop
sbb
adc
xorl
add
pop
out
jb
fistpl
fsubs
or
mov
mov
and
int3
xor
sub
and
xlat
movsb
add
sub
pushl
xchg
mov
fisttpll
xor
sti
ja
cli
popf
fwait
addb
or
mov
or
jmp
or
cmpsl
movsb
mov
aam
pushf
mov
stos
mov
inc
dec
mov
fdivl
mov
das
sbb
outsb
mov
xor
pushl
xchg
add
sbbb
enter
push
call
jne
mov
mov
cmp
ret
add
and
push
xlat
rclb
jmp
mov
xor
push
cmp
popa
repnz
dec
xor
data16
cmp
lahf
cltd
in
pop
fiadds
push
mov
adc
dec
mov
pushf
mull
std
sub
into
xchg
inc
xor
xchg
mov
clc
mov
fsubrl
mov
gs
fmuls
mov
call
add
imul
fwait
sahf
mov
decl
adc
pop
push
fs
mov
mov
fsubl
dec
adc
cli
adc
xor
popa
sbb
mov
fdivrl
push
pop
xchg
pop
pusha
and
out
add
jg
jg
pushl
jne
add
push
aad
ss
push
loopne
fidivrs
outsl
and
cmpl
push
xchg
dec
and
dec
filds
incl
out
cmc
cmp
aad
mov
es
cmp
repnz
out
add
insb
push
or
fistl
pusha
or
ds
in
ljmp
jmp
add
mov
lahf
adcb
jb
push
or
push
lods
add
repz
ja
aam
push
inc
add
push
pop
mov
xchg
aas
sub
ljmp
xchg
and
pop
adc
inc
adc
mov
sbb
inc
cmp
je
mov
je
adc
shll
jns
cmp
aad
rcl
mov
cmp
test
gs
cmp
jbe
in
outsl
or
cmp
jbe
fdivs
dec
cmp
pushl
insb
adc
pusha
add
addr16
xor
pusha
add
jo
push
sbb
push
popa
loope
loopne
xor
fisubrs
add
add
fidivrl
imul
enter
into
int
sbb
xchg
sbb
sbb
rolb
push
leave
mov
inc
imul
mov
mov
jnp
mov
enter
push
xor
int3
pop
dec
into
pop
pop
ffree
jl
mov
mov
and
push
and
dec
mov
jmp
sub
aad
scas
mov
adc
sbb
outsb
sub
add
push
inc
xor
aam
movsl
adc
add
pop
and
adc
jg
jo
andb
sbb
iret
add
shrl
xchg
es
jg
cmp
push
addps
adc
xchg
ret
scas
xor
test
xor
or
sub
bound
ds
jg
push
sub
popf
add
test
push
cmpl
inc
mov
or
call
dec
enter
push
es
je
add
sub
shll
adc
xor
incl
pop
nop
jne
adc
test
xchg
cmc
push
pop
test
pop
lock
dec
add
test
jg
fsts
xchg
shl
xchg
lret
mov
push
das
clc
jg
je
xchg
jno
cwtl
outsl
cwtl
add
mov
add
decl
test
mov
add
mov
sbb
xchg
add
call
cmpsl
shll
nop
jns
mov
pop
in
jecxz,pn
sub
sbb
loope
add
popa
pop
xor
push
mov
pop
iret
inc
ja
stos
insb
out
inc
push
loop
or
mov
pushl
rorl
pushf
xor
mov
jnp
popw
mulb
push
jg
ljmp
test
ja
push
jo
leave
addr16
aad
lea
sbb
inc
xchg
add
sbb
cmc
xor
mov
mov
xchg
and
cli
inc
test
out
add
sbb
inc
and
loopne
lcall
jmp
or
dec
or
scas
and
and
mov
and
push
cmp
adcb
pop
jmp
dec
or
es
fnsave
push
lock
adc
sub
daa
mov
call
or
daa
repnz
xor
mov
xchg
mov
incl
or
call
xor
push
push
xor
movups
mov
mov
cmp
and
shll
xchg
push
cltd
pushl
rclb
inc
adc
inc
push
hlt
inc
dec
test
jmp
xchg
or
mov
imul
or
xchg
in
cmpsl
dec
push
sbb
xchg
jo
push
jno
cmpsl
jp
adc
xchg
push
xchg
jne
cmpsl
pushl
xchg
test
jle
xchg
and
fisubrl
lock
xor
push
jb
loope
aad
cwtl
jp
push
enter
sbb
or
push
cld
mov
cmp
inc
ja
jns
and
push
xchg
loope
fwait
inc
mov
xor
add
movsl
xor
mov
jns
pop
subl
xor
cltd
xor
lcall
xchg
and
push
xor
sarb
in
enter
cmpl
in
cmp
fmuls
fisttpl
add
add
dec
dec
add
dec
bound
sbb
push
std
pop
std
push
rolb
in
sub
mov
inc
and
jp
push
and
ljmp
adc
jl
push
and
dec
push
xor
or
or
mov
int3
cmpsl
jl
out
and
mov
pop
and
adc
sbb
add
sti
pushl
jnp
mov
jp
or
ret
push
mov
aam
ljmp
xchg
and
loope
xchg
jecxz
dec
sub
jnp
sub
push
jecxz
or
push
in
sub
aas
and
adc
bound
cmp
movsb
add
into
repnz
adc
adc
and
inc
xchg
out
jmp
push
inc
xchg
sub
sti
mov
cli
mov
add
jne
add
stos
mov
incl
inc
stos
cmpsb
jb
cmpsb
outsl
ljmp
cmpsb
jae
aaa
push
cmpsl
cmp
ljmp
jo
xchg
test
test
cmp
outsl
sarb
mov
pop
jge
mov
dec
lock
jmp
cs
inc
jl
cwtl
jns
pop
sar
pop
je
inc
jo
pop
inc
loop
jg
imul
sub
or
cmp
sbb
imul
sub
jns
outsb
xor
pop
shll
cmpsl
aaa
lods
ret
rorl
lock
ljmp
inc
sbb
adc
mov
sbb
sbb
ret
decl
dec
data16
jecxz
mov
pop
push
xor
ss
loop
mov
mov
add
ds
cmpsb
fiaddl
inc
popa
stos
inc
jg
call
sahf
or
movsb
sbb
std
stos
add
mov
add
ljmp
sti
and
insb
pop
add
add
xchg
imul
aam
and
test
cmp
mov
push
cmp
pop
add
mov
jo
sub
ss
mov
push
sbb
insb
pop
add
scas
test
pusha
fdivs
lea
ds
les
divb
lock
add
icebp
xor
sub
sub
ljmp
adc
jb
add
adc
jmp
sub
dec
adc
add
adc
dec
aaa
cld
ljmp
pop
ljmp
arpl
adc
xor
adc
shll
pop
pop
and
ljmp
add
addb
jo
ljmp
enter
mov
insb
enter
mov
leave
xchg
sbb
xchg
sbb
xchg
insb
leave
cltd
mov
dec
and
cmp
mov
int3
pop
dec
jo
cmpsl
faddl
adc
add
addb
pushl
pop
lock
lret
mov
xchg
sti
enter
outsb
jno
test
movsb
lret
adc
adc
push
in
hlt
rorl
mov
push
fisubl
pushf
test
mov
mov
stos
jg
add
inc
jg
imul
push
mov
jo
movsl
clc
xor
pop
mov
sbb
arpl
mov
mov
cli
add
lods
call
imul
xchg
in
add
mov
std
cmp
jnp
test
aaa
mov
bound
fiaddl
nop
mov
push
push
lods
xchg
add
mov
pop
cld
mov
sti
jge
fdivrl
pushf
push
add
enter
and
in
ljmp
incl
mov
rorl
outsl
cmp
jmp
add
imul
jmp
pushl
sti
pop
or
daa
int
pop
ss
ret
and
aad
cmc
mov
inc
mov
insb
mov
push
dec
pop
lcall
cli
mov
add
xchg
mov
sub
ds
ljmp
pushl
jmp
xchg
mov
xchg
pop
jl
ret
rol
dec
mov
or
loope
push
and
incl
aas
out
fdivs
popf
and
adcl
mov
mov
lock
fisubl
in
mov
fisubrl
std
fnstenv
add
sti
out
inc
pop
lret
loopne
lret
mov
fcompl
mov
fidivl
incl
sbb
shrb
xchg
lret
test
std
xor
test
adc
ja
cmp
pop
ja
loop
push
aam
pusha
add
add
dec
fidivrs
rcrb
test
inc
xor
xchg
push
lods
inc
xor
enter
lcall
push
xor
movsb
fwait
inc
orl
xor
pushl
sarl
shlb
pop
stc
popa
push
push
adc
enter
push
js
sbb
push
xor
cmpb
jne
aam
ror
insb
subl
mov
orb
jg
std
fstpt
pop
mov
sub
cld
enter
and
xor
pushl
cld
mov
push
and
push
mov
divb
pop
lock
dec
or
push
push
cmp
repnz
mov
outsl
and
sub
push
dec
sbb
mov
mov
les
fwait
imul
mov
lcall
in
shl
adc
aas
enter
cmp
mov
sub
aam
into
ret
xor
or
pop
dec
sbb
push
je
dec
inc
je
add
popa
sbb
sub
jg
push
xor
or
mov
and
dec
ljmp
fldt
mov
imul
and
jmp
sbb
mov
inc
lods
jge
inc
into
fmul
int
into
lods
sbb
int3
fmul
dec
fst
pop
and
ficoms
push
adc
push
adc
rorl
pop
faddp
mov
jo
mov
fdivp
jge
scas
nop
stos
in
scas
int
inc
shlb
xchg
insb
sbb
stos
pop
sub
jnp
jne
fwait
xlat
loope
push
push
mov
fsubrl
or
fstpl
adc
xchg
hlt
pop
lea
int
adc
incb
hlt
jg
jecxz
arpl
push
and
outsb
pop
dec
repnz
mov
xor
mulb
adc
stc
scas
or
in
scas
jae
and
lcall
pushl
sub
jmp
adc
sbb
add
adc
jnp
mov
ret
pop
int
mov
cmp
es
bound
cmp
jp
xor
les
insb
data16
push
pop
ljmp
cmp
add
insl
push
or
imull
mov
jae
aas
sub
notb
push
fcmovnbe
dec
lcall
lret
push
and
or
xlat
mov
cmp
lcall
stc
aaa
xor
loope
push
jo
js
push
sbb
mov
cld
add
jg
add
mov
jmp
lcall
std
rcrb
mov
jmp
pusha
add
xor
rcrl
les
cld
aas
cld
lret
and
fistpll
cld
cld
and
cld
inc
pop
inc
std
ror
subps
loopne
clc
lock
pop
fcomip
call
rcrl
mov
and
das
cmpsl
cmp
sbb
out
loop
pop
icebp
fstpl
mov
leave
pusha
cltd
mov
out
or
adc
xchg
cmp
adc
mov
push
push
sub
fisubrs
add
jp
or
mov
inc
dec
sub
push
jp
mov
mov
dec
xchg
and
and
icebp
ljmp
pop
sub
shrb
or
add
inc
adc
add
and
push
sub
jmp
ljmp
sub
aad
dec
mov
sbb
mov
cmp
dec
pushf
cmp
hlt
out
in
add
cs
test
xlat
jo
or
mov
jg
test
xor
and
pop
and
ja
decl
andl
nop
rol
mov
cmp
loopne
jg
ljmp
outsl
push
faddl
pop
sub
cld
fsubl
sarl
jg
sub
pop
clc
jo
fwait
pop
ud2
popf
xorl
push
dec
ficomps
je
fldcw
add
int
fidivl
mov
jle
cltd
push
inc
pop
or
jmp
and
jg
adc
bnd
add
mov
adc
or
push
and
test
add
decl
jmp
daa
mov
mov
inc
or
add
or
ss
mov
pushl
add
add
dec
lds
outsb
pop
jecxz
cmp
fisubrs
and
mov
jno
pop
jl
xchg
incl
ja
add
xor
and
pop
popa
in
daa
popf
test
sub
popa
and
mov
jo
loop
sbb
rcl
or
inc
roll
dec
push
xchg
decl
jae
das
fldenv
repz
push
adc
lods
ljmp
clc
or
lods
enter
adc
inc
or
push
push
inc
jg
xchg
pop
sub
in
push
dec
stc
mov
xor
jl
addl
out
test
aad
push
push
sub
xor
fldl
sub
sub
ljmp
fiaddl
mov
jbe
ds
or
and
sbb
andb
mov
lock
adcl
pop
and
and
and
mov
jbe
xchg
pop
cli
pushl
and
pop
jae
nop
lds
movsl
test
addr16
jmp
add
movsb
js
push
scas
push
into
lret
adcb
sub
scas
mov
mov
repnz
mov
bound
lret
dec
stos
xchg
aad
and
int3
mov
mov
ljmp
add
insb
mov
or
mov
push
orl
cmpsl
test
in
sbb
pusha
xchg
test
lcall
pop
into
cmp
ret
mov
out
dec
cs
mov
mov
ret
mov
or
mov
lcall
mov
sbb
ljmp
and
shlb
dec
inc
jno
sbb
lods
inc
add
push
call
ljmp
push
push
movsb
inc
rolb
and
adc
repnz
adc
movsb
mov
and
pop
sub
outsl
clc
mov
sbb
pop
mov
dec
sub
call
inc
ljmp
push
lods
mov
aam
or
test
dec
cmp
push
xchg
dec
ss
pushl
adc
fistpll
lds
cmp
dec
add
inc
or
sbb
mov
jg
incl
dec
repz
pop
dec
aaa
in
dec
jne
push
mov
fbld
add
adc
push
mov
ja
incl
pop
imul
adc
cmp
rcll
cwtl
movsl
sub
xchg
sub
jg
xchg
push
pop
push
rclb
sbb
push
dec
push
cld
jg
jno
push
push
or
cltd
sub
jo
je
lock
lcall
loop
push
loop
pusha
mov
pop
insb
mov
xchg
adc
icebp
lcall
ret
adc
test
popa
pusha
adc
inc
sub
test
popl
mov
cmp
jnp
int3
enter
cltd
cmc
xchg
xor
mov
out
in
nop
inc
mov
cmp
mov
inc
add
or
pop
or
or
lret
scas
lcall
jmp
insl
insb
dec
into
fcmovb
out
mov
out
pop
jnp
mov
xchg
dec
mov
shrb
jns
xchg
lahf
mov
dec
cmp
shl
mov
push
outsb
aas
push
cmp
sbb
xchg
stos
jno
mov
rcrl
sahf
dec
addr16
jb
mov
jne,pn
inc
daa
push
adc
mov
xchg
add
jo
ljmp
ds
call
lcall
iret
mov
adc
push
and
push
ret
loopne
push
clc
mov
repnz
cmovle
jg
jmp
fwait
mov
cmp
rcll
cmc
mov
clc
cmp
mov
push
ds
sub
jle
mov
std
and
push
repz
add
sub
jg
int3
sbb
rcrl
in
push
xor
or
aad
xchg
cmp
jg
or
pop
or
scas
stos
repnz
mov
adc
sbb
mov
and
mov
shlb
aad
es
and
push
dec
pop
jle
mov
adc
mov
scas
and
and
add
bound
adc
jmp
decl
fcoms
mov
dec
sub
cwtl
ret
fdivrl
stos
cmpsb
push
mov
jmp
push
mov
xor
add
ret
adc
jmp
xor
sbb
jns
int
mov
push
es
sub
rclb
cmp
mov
dec
push
aaa
lahf
adc
mov
xchg
popf
scas
in
cmp
cmp
fistpl
push
mov
ljmp
mov
cli
add
pop
out
push
or
shll
ja
decl
orl
in
add
outsb
inc
add
xchg
adc
call
and
call
into
inc
add
xor
shl
add
sub
xchg
fcompp
leave
test
decl
or
cmp
andb
imul
nop
fimuls
lahf
dec
jp
es
clc
or
lods
mov
cmpsl
push
js
ja
adcb
arpl
out
loopne
inc
leave
xchg
mov
call
mov
push
daa
movsl
jb
and
dec
decl
dec
mov
lcall
popf
out
mov
pop
push
push
test
and
pop
or
mov
sub
fcomps
mov
jmp
dec
push
ror
cmp
lods
or
lods
imul
sub
xchg
les
lock
pushl
mov
orl
data16
fildll
dec
test
add
mov
insb
rcll
xchg
xchg
mov
xor
lods
pop
inc
adc
mov
jmp
cmc
insb
push
pop
test
inc
xchg
nop
aas
lock
movsb
cmc
sbb
xor
mov
lcall
mov
xchg
insb
in
das
sarb
inc
cli
aam
test
push
or
push
ja
idiv
lcall
sbb
insb
ficoml
movsl
xlat
sahf
stos
popf
ja
in
xchg
scas
in
lods
or
mov
jecxz,pn
scas
ljmp
les
pop
roll
out
push
pop
adc
cld
sti
int3
push
test
and
in
pop
jle
jne
lcall
shll
mov
adc
ret
rorl
cmp
in
mov
pushl
cld
aam
adc
dec
inc
ret
xor
test
loope
or
rorl
lcall
cld
jo
push
jle
add
xchg
dec
dec
push
bound
and
fcoms
push
out
push
cmpsl
fildll
dec
dec
mov
cli
inc
shrb
inc
pop
ds
aas
inc
dec
or
call
sub
stc
lret
mov
xor
add
sbb
pusha
mov
ds
ljmp
ret
jo
mov
stos
in
int
movsb
mov
or
nop
jo
or
call
shlb
pop
push
xlat
dec
xchg
dec
adc
sahf
lcall
imul
xlat
shrl
inc
sbb
push
jmp
sbb
inc
lret
xchg
lcall
aad
adc
aad
mov
xlat
cmp
arpl
mov
fs
mov
mov
sbb
mov
sbb
sbb
mov
cltd
lock
cs
fadd
xchg
pushl
call
orb
pop
insl
ljmp
jae
decl
in
ret
or
pushl
mov
pop
and
cmp
mov
push
repz
incl
stc
movsl
sti
rol
stos
xchg
es
pop
cmpsb
pop
popa
pushf
add
sbb
xchg
mov
jmp
xchg
mov
adc
punpcklwd
outsb
mov
test
xor
push
sbb
sbbl
push
xchg
fisubs
cmp
adc
cmp
push
rolb
mov
dec
pusha
add
xchg
xchg
pop
rolb
jae
movsl
and
cltd
sub
imul
and
mov
xchg
repnz
cmp
mov
jg
incl
add
test
xchg
cltd
cmpb
mov
shrl
incl
mov
popa
xchg
add
xor
push
mov
cmp
aaa
add
fcomip
push
movsb
adc
out
sarb
addl
inc
cmp
xchg
incb
dec
pop
or
xor
and
sub
call
cwtl
loopne
mov
call
js
mov
push
sbb
sbbl
mov
push
sub
inc
xorl
mov
bound
inc
ds
or
loopne
pop
mov
sbb
or
pushl
movsb
cmp
out
rcrl
ret
lods
xchg
or
push
xchg
repz
mov
lds
cmc
call
loop
pop
bound
rolb
movsb
jo
call
xchg
dec
pop
cmpb
mov
fisubrl
push
xchg
scas
mov
inc
jns
enter
mov
mov
sbb
add
pushl
lods
sbb
xor
test
clc
cmp
xor
adc
sti
push
lock
cld
cmp
pushf
xchg
sti
dec
add
call
dec
push
ret
outsl
xchg
xor
nop
xor
jae
mov
std
push
cld
jg
xchg
adc
cmp
xchg
push
pop
and
sbb
mov
pop
mov
and
adc
adc
and
add
test
ret
mov
rcrb
add
dec
das
in
das
inc
adc
xor
ret
xor
inc
push
test
pushl
inc
mov
mov
test
jmp
push
mov
aas
xor
sahf
sbb
xor
sub
xchg
pop
push
xor
add
and
xor
jg
cwtl
cmp
enter
mov
xchg
and
inc
mov
push
sbb
add
rolb
mov
andb
mov
jp
push
test
mov
clc
cmpb
call
stos
test
pop
pop
and
ljmp
inc
mov
inc
enter
or
push
pop
addl
push
imul
lcall
repz
mov
ds
fldl2e
inc
hlt
sbb
xchg
sbb
or
mov
js
jp
mov
lret
pop
add
pop
pop
movsl
cs
stos
jnp,pn
fwait
lods
mov
jp
inc
push
cmp
loope
and
jl
push
loope
enter
incl
push
sbb
mov
sub
cmp
adc
enter
adc
jg
xchg
or
mov
ror
and
inc
xchg
sbb
lret
pop
mov
jae
xor
adc
jge
jle
push
sub
jne
inc
movsb
jnp
incl
sub
xchg
pop
sti
ret
mov
les
leave
mov
xchg
shrb
add
lret
xchg
mov
push
cmp
inc
mov
mov
mov
sar
adc
clc
dec
pushf
lret
dec
adc
adc
call
call
subb
dec
cmp
movsb
les
leave
inc
mov
incl
xor
inc
lds
mov
inc
inc
mov
and
mov
adc
scas
jo
mov
stos
pushl
sub
mov
pushf
into
in
into
out
decl
cmpb
loopne
ret
push
inc
xchg
mov
dec
cli
mov
imul
mov
icebp
rol
clc
or
icebp
in
into
push
dec
push
mov
mov
jno
pushl
nop
jl
sbb
mov
jmp
cmp
clc
incl
push
mov
xlat
or
jg
scas
add
adc
out
dec
pop
lock
mov
dec
mov
xor
cld
ljmp
adc
lret
fistpl
popa
inc
lea
adc
enter
decl
leave
roll
fwait
adc
les
add
incl
jp
cmpsl
and
and
adc
sbb
cmp
hlt
ljmp
sahf
and
pop
dec
and
add
pop
xor
inc
xchg
dec
std
lcall
mov
fisubrl
lcall
cli
mov
sbb
aas
pop
fcomip
push
xchg
xchg
loope
or
mov
add
mov
inc
xchg
dec
push
mov
incb
data16
adc
inc
rcrb
mov
cli
ljmp
add
mov
push
push
push
and
xlat
jecxz
and
mov
sub
rolb
adc
pop
jne
in
aad
or
pusha
push
lods
bound
ds
in
stos
push
daa
or
or
incl
xor
fldl
sbb
ljmp
std
adc
clc
decl
dec
cltd
iret
inc
aas
push
pushl
mov
mov
sub
movl
lcall
out
loopne
call
ficoms
push
push
in
xor
mov
icebp
push
das
push
std
and
add
or
cmpsb
add
pushl
xchg
cmp
adc
jg
inc
pop
push
lret
cmp
test
fwait
insb
sbb
movsb
adc
jno
cmpsb
decl
popf
and
cmpsl
inc
dec
and
daa
mov
add
incl
andl
pop
ret
fldcw
add
xchg
xchg
in
icebp
sahf
stos
sub
jmp
and
subb
cmc
addl
js
icebp
dec
sub
pop
out
popa
and
add
es
in
int
out
int
push
loop
mov
xchg
daa
mov
xchg
mov
or
cmp
cmp
adc
test
into
inc
insl
pushl
ljmp
dec
orl
mov
and
mov
sub
loopne
clc
loop
mov
and
int
lds
mov
inc
aad
xchg
xchg
decl
mov
lods
cmp
test
lret
xchg
out
and
push
call
cwtl
scas
loop
mov
add
inc
fstpl
out
cli
ljmp
inc
mov
cld
mov
fildll
xchg
pop
mov
decl
mov
arpl
fildl
sub
add
xchg
mov
jp
in
push
ljmp
cmp
ja
scas
mov
mov
sbb
xor
mov
popf
push
cmc
add
mov
or
stc
icebp
bound
cli
inc
add
pop
xchg
pushf
push
pop
push
jecxz
rclb
rcr
lea
mov
mov
xor
in
movsb
pop
jne
and
xchg
cltd
dec
adc
rorb
mov
add
call
mov
ss
mov
loope
pop
imul
iret
xor
pop
icebp
out
repnz
sbb
cmp
xchg
ds
mov
decl
pop
add
fisubrl
dec
dec
mov
cmp
dec
ljmp
mov
or
enter
decl
mov
sahf
push
or
sbb
mov
sub
mov
sbb
sbb
adc
mov
mov
push
mov
ds
add
xor
fmull
sahf
mov
or
ret
cmp
repnz
or
fnsave
in
and
sub
lods
push
mov
lock
and
shll
adc
or
inc
insl
mov
lcall
imul
push
in
cli
mov
mov
test
xchg
fdivp
repz
mov
insb
mov
mov
xor
jg
add
push
aad
pop
adc
out
das
ret
clc
and
out
cli
mov
xchg
inc
rcrb
pusha
addr16
es
es
adc
loopne
decl
bswap
mov
in
add
es
loope
sbb
enter
ret
mov
aad
popf
or
and
arpl
or
or
and
push
rorl
loop
dec
sub
cwtl
lock
cs
in
decl
das
orl
jne
lock
out
push
xchg
adc
or
lock
or
cli
call
lahf
jo
push
adc
jno
xlat
sub
shl
mov
push
pop
ljmp
or
and
add
and
push
pop
pop
and
pop
mov
xor
push
jecxz
cmp
mov
stos
mov
cmp
xor
add
add
push
cmp
or
orb
ljmp
push
sub
add
call
xor
fiaddl
fwait
adc
xlat
or
fiadds
test
incl
pop
xchg
fdivl
push
fldt
cmp
scas
cwtl
or
insb
popa
mov
inc
cmp
rcl
mov
pushl
adc
out
xor
mov
xlat
out
fidivrl
mov
jg
add
xabort
sub
adc
or
mov
jb
pop
pusha
loopne
add
cs
sub
mov
add
dec
movsl
imul
xchg
sub
mov
in
mov
fcoml
push
mov
add
clc
rclb
sub
imul
adc
adc
push
adc
insl
inc
jl
jb
sbb
clc
decl
push
adc
rcll
mov
mov
jo
out
and
sub
jnp
lock
hlt
stos
ja
add
lds
aaa
in
mov
push
push
cmp
and
fnstsw
and
js
js
vmwrite
push
sub
pop
pusha
stc
lea
jns
inc
stc
xchg
out
jne
pusha
adc
loopne
lahf
mov
cli
lcall
cmp
xchg
repnz
shlb
pop
add
adc
ljmp
cmp
xchg
lods
cs
push
adc
cs
push
push
push
scas
ret
iret
mov
mov
inc
decl
int
test
and
out
dec
dec
push
xchg
and
es
in
je
jg
pop
test
arpl
out
jecxz
mov
jmp
xchg
enter
lcall
add
pusha
mov
jnp
push
cmc
fdivs
xlat
push
lods
pushl
push
add
ret
mov
mov
loop
add
push
cld
stos
push
jg
call
mov
fldt
pop
sarb
mov
sbb
das
icebp
std
cmpl
outsl
call
cld
adc
jo
dec
ja
push
hlt
mov
jnp
nop
jbe
nop
jno
nop
imul
jg
pop
icebp
cli
cmpsb
rol
xor
mov
mov
push
loopne
rcrl
ljmp
xor
mov
mov
mov
incl
es
jns
inc
cs
add
pop
cld
jg
add
jl
mov
sbb
and
dec
dec
movb
call
adc
inc
movsb
mov
sbb
xchg
shll
sub
pop
pop
xchg
push
dec
push
jecxz
xchg
cs
leave
adc
adc
addr16
adc
ficoml
and
call
inc
popf
sbb
cmp
popa
repz
add
push
movsl
inc
addb
jmp
mov
sub
into
xchg
test
xlat
lods
pop
sub
pop
mov
push
cmp
dec
push
loopne
mov
int3
dec
xchg
push
movsl
xchg
adc
cmp
push
jecxz
ljmp
aad
mov
pop
add
xor
xchg
jmp
mov
pop
das
pop
jl
out
mov
mov
mov
pushf
mov
mov
cmp
incl
add
dec
sub
outsb
cmp
repz
push
nop
mov
jb
in
arpl
sahf
cmp
cmp
mov
jmp
and
mov
adc
inc
sbbl
incl
mov
loopne
adc
or
mov
adc
and
outsl
in
sar
incl
fwait
jl
pop
fwait
enter
rcll
sbb
xchg
and
push
aas
push
mov
adc
decl
xchg
movsb
rolb
mov
imul
dec
sub
decl
jno
xchg
push
push
imul
cmpsb
xchg
sub
pop
fs
decl
testb
aaa
xchg
mov
test
or
subb
add
xchg
and
hlt
fistpl
jnp
sbb
cmp
aaa
cld
ljmp
cmpl
hlt
icebp
rolb
sub
movsb
orl
inc
mov
and
adc
push
add
pop
mov
inc
sbb
call
in
sbbl
lods
sar
in
lods
dec
add
mov
sar
ljmp
lods
mov
sub
in
inc
rorl
stc
je
push
inc
cmc
out
push
push
dec
mov
push
cmpsb
mov
push
mov
test
xchg
add
jg
jo
inc
movsl
and
jne
pop
jno
xchg
scas
pop
pop
in
adc
jno
test
insb
or
sub
push
add
aad
bound
dec
rol
inc
push
in
push
insb
mov
cmpsb
incl
jne
fistl
addl
push
mov
jmp
ret
je
sbb
cld
pushf
push
mov
lret
pop
dec
iret
sub
and
incl
int3
addr16
aad
lods
xlat
lds
sub
loop
out
clc
call
jne
cwtl
or
adc
fcompl
sub
xor
jmp
test
std
and
clc
loope
pop
ficomps
push
dec
jbe
sbb
cmpsl
popf
sbb
sarb
icebp
decl
push
insb
clc
pop
dec
push
aad
pop
dec
sub
stc
ljmp
in
sub
jno
xchg
pop
pop
jns
xchg
arpl
imul
cli
lcall
jmp
cwtl
jp
stc
cmpsb
fwait
jae
add
mov
xchg
push
stos
and
loop
ljmp
mov
repz
cmp
je
inc
sbb
adc
lds
fimuls
pop
dec
mov
cmp
dec
in
fsqrt
add
scas
out
jmp
icebp
mov
das
mov
jg
lock
inc
std
rorb
jo
xchg
lcall
mov
mov
scas
aam
orl
outsl
sub
inc
xor
xchg
mov
xchg
pusha
push
inc
sub
stos
pop
mov
mov
or
fcomip
movsl
add
inc
or
add
scas
js
sub
add
dec
inc
or
mov
xor
mov
adc
das
cli
pushl
enter
fadds
fmuls
lds
mov
call
adc
mov
cmp
mov
mov
inc
xchg
or
pop
nop
xor
cmc
ljmp
int3
inc
cmp
loope
stos
push
and
jbe
call
mov
mov
jno
xchg
sbb
lret
mov
inc
cmp
or
adc
test
push
mov
and
push
mov
cmp
jo
adc
mov
lcall
xor
lea
push
pop
xlat
cmp
xchg
xchg
jmp
aam
cmp
xchg
stos
fistl
jmp
pop
es
orb
xlat
push
dec
mov
sbb
in
sub
aam
and
incl
inc
stc
push
faddl
jo
out
cmp
clc
enter
lods
adc
ljmp
adc
mov
cltd
mov
push
adc
movsb
push
inc
rolb
icebp
pusha
add
lret
or
inc
and
mov
or
jne
and
adc
mov
adc
call
clc
rorl
mov
pop
add
stc
enter
popa
test
nop
pop
add
add
push
xor
cmp
cs
jle
ljmp
loop
sbb
mov
or
xchg
mov
mov
out
xor
jb
clc
sbbb
mov
mov
clc
shlb
int3
int3
loop
call
push
and
dec
sub
xchg
xchg
cwtl
lds
or
lret
adc
inc
xchg
mov
dec
sahf
mov
fwait
mov
loope
js
xor
dec
push
rorl
mov
sub
cmp
mov
icebp
add
aas
icebp
ficompl
js
aaa
dec
pop
nop
mov
add
sbb
adc
xor
decl
lock
sbb
dec
inc
ljmp
incl
jp
mov
push
xchg
shrl
sub
decl
jp
xchg
pop
mov
imul
xchg
cmp
cmp
into
dec
std
incl
push
popf
mov
rorl
jae
scas
adc
mov
rclb
adc
outsb
jg
icebp
aaa
ljmp
daa
dec
iret
push
adcb
jmp
jl
mov
xchg
mov
jg
shrb
lods
repz
in
pop
js
inc
inc
sbb
dec
pop
mov
ljmp
mov
popa
add
sub
add
jl
movsb
ss
scas
aaa
lods
loop
clc
xor
push
push
shlb
mov
xchg
mov
sub
xchg
add
fs
lcall
mov
rclb
shrb
and
pop
jmp
in
stos
xor
cwtl
mov
lcall
int3
xor
push
inc
cmc
call
and
int
nop
enter
jne
scas
and
mov
lods
repz
jo
push
add
sbb
inc
xchg
mov
sbb
ror
cltd
jbe
in
imul
sbb
jae
stos
movsl
cmpsl
ds
mov
sbb
into
mov
insl
data16
lcall
cltd
aaa
or
outsb
mov
test
sar
addl
mov
movsl
icebp
jmp
push
lret
mov
in
imul
inc
je
dec
add
inc
mov
pop
data16
lcall
mov
popf
mov
and
mov
loope
cmpsb
cmp
popf
jge
push
test
cmp
jmp
lock
ja
inc
stc
fwait
rcl
push
movsl
or
mov
sahf
clc
push
add
iret
ja
and
sbb
cmpsb
insl
js
test
orb
lcall
sub
mov
loop
lret
cmp
and
arpl
and
jp
jge
fs
test
jne
xchg
xchg
mov
iret
pusha
inc
call
push
sbb
out
loop
rolb
pop
adc
add
pop
pop
out
das
jl
loope
push
cmp
mov
subb
fnstenv
lcall
adc
mov
pushl
mov
data16
xor
pop
inc
hlt
jno
xchg
lods
js
pop
pop
popf
sbbb
data16
xor
jbe
xor
stc
jae
shr
hlt
rcl
repnz
mov
jmp
ficompl
add
jg
cmp
or
push
addr16
enter
cmp
lcall
dec
xchg
and
and
lea
pop
hlt
xchg
shrb
xor
insl
sbb
notb
dec
lcall
rorl
xchg
das
ret
xchg
cmp
fldl
hlt
incl
adc
dec
jl
mov
jmp
mov
sub
mov
push
jg
outsl
test
jae
mov
pushl
mov
cmp
cwtl
add
dec
rclb
test
insl
fadds
sbb
lea
decl
pushf
mov
leave
sbb
fmul
in
jnp
decl
dec
nop
pusha
mov
xchg
in
xchg
sub
lods
and
xor
mov
sbb
std
mov
mov
sbb
inc
push
stc
dec
fs
insl
std
call
test
jl
pop
push
or
jg
adcb
rcrb
lret
pop
adc
mov
leave
hlt
adc
in
sbb
adc
jo
or
icebp
xchg
shll
pop
sub
movsb
cmp
incl
jo
imul
addr16
push
sbb
rcrl
lea
test
clc
incl
adc
orb
fcompl
lret
insl
or
call
incl
jo
or
add
test
je
mov
ret
pop
jae
pop
ljmp
cwtl
inc
out
or
into
adc
sub
push
mov
mov
cwtl
adc
adc
clc
and
cli
popf
mov
dec
aaa
add
lahf
jmp
push
ss
rol
popa
or
iret
inc
mov
test
push
sbb
jmp
add
add
iret
sub
mov
ds
addb
and
mov
jge
ds
dec
add
nop
insl
pop
into
popf
pusha
dec
sbb
incl
xor
push
adc
mov
dec
cmp
daa
dec
xchg
sbb
into
cli
pushl
ret
add
add
int3
add
pop
call
adc
xchg
xchg
cltd
ljmp
add
pop
dec
adc
mov
add
lahf
test
imul
add
fcomip
adc
pop
xor
adc
scas
ljmp
pop
mov
loopne
jbe
int
hlt
push
xor
loop
pop
xlat
cwtl
fidivl
rorl
sbb
cmp
jb
xchg
imul
adc
adc
mov
call
insl
sub
sub
xchg
pop
popa
loopne
int
test
jo
xlat
jmp
push
xchg
and
mov
mov
dec
push
pop
sub
mov
cmp
ljmp
xchg
push
pop
out
dec
cs
out
ss
jg
call
jl
xchg
pushf
inc
out
fwait
test
xor
stc
mov
clc
pushf
fcoml
outsb
pop
mov
cmp
cld
add
ret
cmp
cmp
sbb
decl
xchg
jbe
dec
lds
and
dec
jno
outsl
sbb
cld
ds
addr16
mov
bound
mov
inc
fcmove
or
in
ss
test
cmp
inc
fisubrl
dec
sbb
xchg
mov
lock
jg
or
push
rolb
rorl
aad
faddp
adc
js
rorl
roll
and
sbb
xor
push
les
xor
xor
mov
es
lods
or
popf
mov
aam
jno
xbegin
orl
test
sbb
loope
mov
outsl
push
sbb
movsl
pop
xor
stos
out
cmp
inc
hlt
popa
in
iret
sbb
cmp
notb
shll
push
fcoms
call
lods
push
sbb
inc
dec
mov
pop
sbb
lcall
insl
icebp
push
popa
jbe
es
daa
sub
xchg
push
loop
pop
sub
mov
loopne
mov
xchg
in
xchg
jl
cs
push
imul
aaa
cld
pushl
rorb
aam
jmp
dec
xor
mov
mov
lahf
mov
sbb
movsb
insb
arpl
pop
jae
iret
jae
dec
test
outsb
mov
stos
mov
dec
nop
mov
sbb
add
daa
inc
xchg
fdivrs
repnz
jecxz
imul
lret
jmp
into
pop
in
fwait
mov
or
adc
sbb
shrl
loopne
or
adc
sub
xchg
adc
mov
sbb
inc
dec
cmpsb
in
sbb
cwtl
mov
scas
sbb
cld
sbb
decl
js
sbb
push
mov
rcrl
sub
push
pop
mov
ret
pop
mov
aaa
mov
push
adc
lods
call
lcall
push
adc
js
jo
int
xchg
and
xchg
push
addr16
inc
jo
movsl
pop
push
and
sub
pushl
add
je
pop
sub
push
xchg
xchg
fiaddl
pop
cmp
stos
jno
shlb
bound
inc
pushl
add
adc
vmovaps
out
icebp
sbb
xchg
es
insl
mov
adc
pop
xchg
outsb
leave
cmc
ja
lcall
sbb
sub
xorl
shl
inc
xchg
in
pusha
pop
sub
into
xchg
cld
and
dec
das
cli
jg
ljmp
fwait
movsb
rorb
jns
cmpsl
ret
pop
add
mov
mov
inc
or
mov
cwtl
add
sub
push
cmp
dec
movsb
jecxz
out
ja
incl
xchg
int
jcxz
mov
imul
lret
inc
call
loopne
mov
jge
mov
lcall
and
cmc
mov
int3
out
cmpb
adc
fisubs
dec
repnz
add
lar
lret
or
mov
pusha
inc
test
or
dec
loopne
inc
mov
ret
mov
js
or
test
mov
dec
cmp
adc
and
push
jbe
push
push
repnz
push
insl
enter
inc
loop
fcomip
incl
jle
in
xchg
push
scas
mov
popf
xchg
sbb
enter
or
lods
jns
sbb
movsl
int3
pop
or
push
imul
rorl
jo
push
out
push
lcall
and
sub
lcall
pop
dec
xlat
sub
sbb
call
xchg
cmpsb
mov
fistl
xlat
xchg
cmp
xor
out
fmull
mov
mov
or
jno
pop
and
mov
push
inc
cmpl
incl
xchg
dec
inc
fdivrl
ss
loope
out
fidivl
add
into
shl
sbbb
mov
mov
jne
inc
lcall
mov
out
push
inc
repnz
jnp
scas
inc
ljmp
sbb
inc
add
mov
test
or
sbb
call
subb
push
jmp
cmc
fiadds
rcrb
pop
cld
fildll
fdiv
sub
sar
push
scas
ret
push
cmp
mov
incl
lret
xor
pop
insb
in
mov
icebp
xchg
add
mov
les
int3
and
jge
int
cmpsb
and
mov
data16
popa
pop
jl
data16
mov
cmp
frstor
in
add
xor
lahf
push
xchg
lcall
insl
pop
out
outsl
lcall
adc
loope
shr
ljmp
cmpsb
mov
sbb
cmp
sub
jo
sub
sub
mov
enter
std
jo
add
inc
ja
decl
out
xchg
adc
dec
movsb
fsubrp
movsb
push
or
jno
js
mov
cli
lods
ljmp
sar
call
xor
mov
sysexit
sbb
cld
jne
in
sub
add
add
mov
cmp
aad
clc
inc
lods
sbb
adc
leave
call
xor
cs
in
mov
dec
test
rol
sbb
or
dec
in
ss
movsl
inc
mov
mov
fstl
mov
mov
sub
inc
pusha
stos
jb
gs
sub
sbb
sbb
rcll
pushl
mov
and
decl
bound
push
pop
shlb
and
sbb
adc
lret
inc
dec
sub
pop
hlt
lcall
lock
mov
adc
idivb
mov
rclb
incl
sbb
jo
stos
gs
sub
sahf
dec
or
jmp
and
cmpsb
inc
out
push
outsb
cmp
mov
push
fdivrp
in
orb
cmp
lea
loope
mov
cltd
add
icebp
sub
ds
clc
shlb
dec
xchg
fsub
clc
int
xor
pop
paddsb
xchg
mov
fcomip
lcall
xor
movsb
and
orl
mov
adc
stos
cmp
fadds
xchg
sbb
popa
test
xchg
mov
xchg
js
lods
ljmp
clc
mov
mov
dec
lods
push
push
shlb
insl
jmp
ja
popa
dec
add
add
decl
xchg
inc
insb
aaa
sbb
or
fadd
xor
adc
sub
push
fcmovbe
sub
jle
mov
fcomip
xor
jns
loop
rclb
dec
test
pop
repz
lcall
stos
data16
jo
ss
lcall
jo
mov
cmp
fsubl
or
gs
jne
mov
cmc
xor
jge
daa
arpl
lock
decb
iret
sahf
outsl
push
data16
fisubrs
scas
push
sub
pop
dec
clc
shl
dec
sub
jns
stos
repnz
in
mov
push
std
adc
gs
fistl
mov
jo
mov
pop
jle
sub
mov
push
out
sub
mov
sti
repz
addl
hlt
test
je
fcomps
jge
decl
call
outsb
push
aaa
xor
pop
fiaddl
cmpsl
push
inc
je
sub
sarb
imul
insb
imulb
push
fs
ss
mov
mov
dec
fmuls
out
cmc
test
stc
scas
int
nop
lock
stc
cwtl
out
adcb
sbb
mov
push
test
aaa
cmp
adc
jnp
leave
lock
jmp
push
pop
repnz
enter
decl
jl
sub
xchg
addb
fistps
fdivl
xchg
pop
xchg
arpl
fwait
push
jl
dec
into
mov
jns
decl
mov
pop
mov
push
movsl
gs
xor
push
jns
pushl
fst
or
push
test
mov
pop
xchg
jo
or
ja
or
cld
ffree
sub
cmovae
in
pop
push
shrl
xchg
enter
call
adc
and
mulb
and
in
rclb
fisttpl
fists
or
mov
orl
test
jne
imul
ds
lods
push
sbb
push
and
rcll
mov
dec
cld
scas
iret
int
lock
mov
out
addr16
sbb
sar
enter
call
and
in
cwtl
xor
cmpsl
mul
call
mov
pop
pop
lcall
add
jns
or
pop
mov
jae
scas
test
sbb
test
push
mov
out
decl
pop
rep
and
ss
push
adc
les
add
add
pushl
je
adc
add
sub
sub
addl
shll
mov
and
jg
inc
xchg
adc
jb
sbb
xchg
daa
add
jno
inc
mov
mov
add
xchg
add
cli
push
sub
aas
jo
xchg
push
push
fld
call
push
mov
push
ljmp
sub
push
mov
pushl
and
jp
or
pop
mov
ficompl
mov
push
insl
push
mov
pop
push
out
out
inc
add
xor
xchg
sub
xor
cmp
decl
adc
fwait
sub
dec
push
cmpsb
jae
mov
shlb
ds
jp
jmp
cltd
popf
pop
psrad
mov
fdivr
call
mov
jp
sti
repnz
push
jo
lret
pop
sbb
mov
stc
out
xchg
inc
scas
jle
lret
sbb
ljmp
add
ja
das
loope
push
hlt
add
jle
jns
in
pushl
fists
and
sbb
cmpl
scas
ds
shr
ret
notb
nop
shll
pushl
mov
rolb
pop
das
mov
mov
mov
std
divb
cmp
and
and
mov
sbb
icebp
push
jb
push
imul
lcall
adc
and
xchg
lods
or
cmpsb
lea
xor
mov
mov
lds
mov
dec
mov
cmp
sbb
inc
inc
xchg
ljmp
mov
add
aaa
adc
iret
ds
mov
ljmp
xor
lcall
jb
movsb
aaa
adc
pop
xor
scas
fdivr
fisttpl
cmp
add
mov
movsb
xchg
aam
xchg
push
pop
movsl
cmpsb
sub
decl
stos
mov
mov
loop
pop
mov
sub
lods
mov
gs
sbb
mov
ss
jbe
mov
xor
cmp
sub
call
sarl
arpl
xor
sbb
lock
pushl
lret
dec
mov
fs
sub
insl
xor
mov
jmp
xor
jle
fcmovu
sahf
adc
mov
mov
out
mov
out
mov
cmp
mov
sbb
cmp
add
loop
out
shll
inc
cmp
mov
les
cmp
push
ds
xchg
pop
das
inc
pop
inc
push
or
cmp
mov
mov
aas
add
mov
and
outsl
aas
xor
lods
mov
jmp
sbb
imulb
cmpsb
and
repz
stos
xchg
push
call
mov
sbb
and
roll
mov
pop
test
popa
out
mov
repnz
cmp
sub
push
dec
and
sahf
mov
cmpb
cs
cmp
push
mov
lcall
aaa
or
xchg
mov
pop
or
call
pop
lret
jne
stos
sub
fistps
sub
decl
lea
mov
hlt
dec
sub
insb
mov
pushf
adc
arpl
jg
daa
ss
iret
fisubrl
mov
dec
xchg
sub
jae
rorl
xlat
mov
sub
pop
notb
sbb
pushf
loope
sub
rcll
xchg
repz
call
cmp
pop
and
mov
lock
mov
in
aaa
std
decl
ds
mov
sbb
movq
add
imull
incl
push
or
xchg
loope
in
pop
mov
cmp
dec
and
mov
mov
push
sbb
add
pop
arpl
xchg
test
adc
xchg
inc
and
xchg
mov
scas
jmp
mov
adc
pushf
filds
cmp
popa
leave
mov
cmp
cmp
pop
inc
in
arpl
call
mov
je
lcall
mov
in
arpl
adc
pushl
icebp
icebp
outsl
or
aad
ja
inc
int
outsl
cmp
inc
out
je
pop
in
xchg
nop
jecxz
idiv
incl
xchg
lret
or
and
pop
stos
and
mov
adc
lcall
leave
dec
dec
cmc
xchg
add
dec
mov
xchg
push
gs
pop
pop
inc
adc
stos
lds
dec
out
mov
push
add
mov
pop
nop
push
mov
jg
int
push
xor
jl
seto
fisubs
ret
lods
testl
cli
ljmp
lcall
pop
pop
add
shl
cmpsb
jle
test
sbb
out
movb
xchg
xchg
xor
or
ret
sub
cmp
leave
pop
jb
push
decl
mov
dec
sub
xor
xchg
pop
pop
das
xchg
xchg
jnp
in
stos
sbb
and
jo
dec
push
pop
rcrl
leave
imul
inc
mov
push
pop
test
test
mov
lcall
cmc
sub
xchg
push
sub
mov
sbbb
pushl
jbe
and
or
push
sbb
ljmp
jl
aaa
or
inc
ss
in
rorb
jecxz
out
leave
sub
lods
or
pop
pop
divb
mov
sbb
shr
jne
arpl
cwtl
mov
lds
outsb
stos
mov
call
jns
or
ds
dec
call
mov
lcall
repnz
rclb
and
dec
pop
movsl
add
dec
test
lcall
pop
mov
sub
sbb
call
pop
dec
push
sub
inc
dec
das
push
cltd
add
rorl
pushl
sub
sar
test
in
fimull
fsubrl
lahf
icebp
stos
outsl
mov
ljmp
jp
maxps
cld
pop
jno
pushf
sbb
adc
add
xchg
orb
out
cli
ss
adc
les
and
push
push
test
les
dec
icebp
push
bound
lahf
sbb
inc
sub
inc
mov
add
xor
movd
cmp
jno
mov
add
scas
js
div
jmp
popf
mov
jg
inc
adc
lret
fcmovb
lahf
push
sub
in
int3
jmp
popa
pop
push
jmp
xchg
cmp
and
mov
xor
aaa
clc
rolb
decl
mov
aaa
imul
ret
jl
cs
push
in
inc
adc
lds
jecxz
pop
in
inc
sbb
mov
andb
cmp
push
rol
mov
inc
pop
adc
dec
xor
hlt
and
jg
fsubs
popa
les
sub
mov
push
mov
inc
pushl
jno
imul
or
xor
mov
ficoms
inc
dec
faddp
incl
cld
lret
or
stos
jp
mov
imulb
inc
xor
fdiv
push
clc
sub
lods
jb
rcrl
in
cmp
xlat
lods
sti
out
push
scas
pop
pop
imul
lcall
add
outsb
pushl
inc
test
out
ret
add
mov
add
mov
and
vmulps
mov
je
pushl
adc
cltd
push
test
lds
jbe
mov
arpl
jg
cmp
fs
mov
mov
and
or
cs
rorl
mov
test
cmp
inc
add
gs
fcomip
insb
push
or
ret
andb
inc
pop
jno
repz
sub
int
cmp
decl
loope
mov
aaa
rolb
ja
lar
pop
icebp
mov
cmp
sar
js
push
clc
cli
cmp
mov
push
sbb
popf
push
jnp
jecxz
adc
ljmp
rcr
cwtl
call
int
mov
dec
and
sbb
ljmp
mov
jb
dec
cmp
push
sub
test
subb
mov
call
lret
test
cs
mov
arpl
div
int3
int
stos
into
mov
cld
cwtl
inc
mov
jg
add
insb
arpl
mov
movsl
sbb
pop
or
pop
xchg
adc
fldt
lods
xchg
scas
mov
xchg
or
clc
dec
push
mov
and
inc
lcall
decb
scas
loope
cmpsl
cmp
or
add
sarb
and
call
andl
ret
cmp
inc
test
or
es
and
push
shlb
in
push
out
lds
in
push
out
cs
and
jle
out
dec
enter
ds
mov
adc
cmp
mov
xchg
xchg
pushf
mov
xchg
adc
cmpsb
out
jle
into
sahf
pusha
cmp
fiadds
jo
or
test
mov
pop
out
in
fmull
or
mov
jmp
sbbl
and
scas
add
bound
lcall
sub
or
rorb
add
out
scas
add
mov
or
mov
jg
call
push
sub
add
nop
outsb
out
shrl
rcl
and
sub
and
decl
push
cs
roll
movsb
addr16
and
xchg
ljmp
movsl
pop
dec
js
push
add
push
adc
adc
ljmp
push
push
inc
inc
mov
mov
jg
xchg
mov
cwtl
sub
decl
lds
sbb
mov
fimull
out
xor
mov
jnp
and
int3
rcrb
fdivrl
add
fcomip
popf
int3
pushf
call
enter
addr16
outsl
jge
cmc
fisttps
cli
out
cld
or
cmp
push
sbb
das
mov
cmpl
mov
adc
lcall
call
lret
out
mov
xor
add
inc
or
and
cld
mov
dec
dec
push
and
in
sub
push
rol
decl
mov
mov
pop
jo
mov
insb
rolb
mov
mov
add
pushl
sub
mov
ljmp
movsb
test
sbb
jl
orb
pusha
fdiv
das
nop
sub
mov
xor
pop
sub
adc
lcall
or
jo
mulb
pushf
xor
pusha
loopne
out
out
mov
or
adc
sub
or
call
rcrb
iret
mov
or
cmpsl
rcrl
dec
mov
xchg
out
inc
nopl
xchg
dec
dec
icebp
and
aad
movsb
jb
inc
inc
push
mov
pop
mov
adc
sbb
lcall
xor
push
outsl
imul
bound
jae
push
mov
lcall
mov
push
mov
cs
repz
fstpt
adc
xor
and
call
iret
xor
ud0
jmp
shl
bound
movb
xchg
jmp
scas
jle
lods
jg
ret
lahf
pushf
rcrl
sarb
stos
inc
cmp
mov
sbb
sbb
and
nop
loop
nop
jecxz
or
and
mov
call
inc
inc
repnz
mov
cs
and
mov
or
ljmp
push
lock
push
sub
outsl
into
and
and
xchg
loop
and
sub
cli
das
clc
and
jp
test
jmp
pusha
hlt
jg
dec
push
push
fisubs
nop
or
mov
mov
lahf
repnz
nop
int3
mov
add
inc
filds
pushf
cld
inc
decl
loop
es
xor
xor
xchg
dec
jno
call
or
sub
mov
sub
sub
or
mov
dec
inc
ret
cwtl
aam
lcall
and
orb
aam
cmp
add
dec
inc
sar
and
ret
movsb
jae
fstl
xor
inc
inc
xor
mov
push
xlat
xchg
add
call
xor
xor
mov
pop
in
xchg
test
insb
add
clc
inc
sbb
incl
pop
shll
imul
sub
mov
pop
test
pop
into
mov
adcb
push
pusha
xor
faddl
out
sahf
enter
out
lock
pop
clc
or
fisubs
or
cmp
int
or
arpl
xor
and
jg
jl
and
inc
and
loop
and
jg
ret
aam
test
ljmp
out
lock
mov
mov
cmp
insb
push
xor
cmpsl
add
add
call
cld
xchg
inc
fs
mov
push
add
jns
rcrl
pop
fists
outsl
push
lock
or
shlb
mov
sub
test
or
incl
jo
or
aaa
mov
add
cmp
add
inc
and
pop
sbbb
mov
call
pop
in
or
mov
jg
sub
inc
push
fcomi
sar
dec
wbinvd
or
es
push
psllw
push
sbb
int
out
dec
call
incl
out
xor
je
test
je
es
shlb
mov
jmp
dec
jae
jbe
shl
mov
mov
mov
decl
lea
cli
movsb
ljmp
repz
decl
add
xor
jmp
les
out
sub
mov
push
mov
outsl
cli
mov
pop
les
adc
xlat
adc
loopne
ret
sub
lcall
mov
jno
pop
ljmp
add
cmp
jae
dec
cmp
pop
mov
inc
incl
ret
ds
pop
dec
dec
aas
sub
or
aad
insl
in
aas
push
nop
jmp
push
aam
pop
xor
xor
fcomip
aas
fdiv
push
jg
aas
mov
out
andb
ljmp
je
pop
push
nop
nop
xchg
mov
push
inc
inc
lahf
pusha
mov
cs
stos
mov
mov
enter
movsb
mov
add
addb
imul
xchg
lods
sub
push
icebp
push
add
adc
pushl
push
push
addr16
orl
jg
dec
mov
cmpsb
jno
sub
pop
js
out
dec
and
mov
dec
icebp
je
hlt
adc
xor
mov
fcomip
ljmp
cwtl
ret
mov
movsb
mov
sbb
jl
xchg
xor
xor
xor
int
push
push
ret
push
push
push
movsb
pushl
fistpll
jbe
pop
icebp
sbb
xor
ljmp
pusha
mov
add
cmp
data16
jecxz
idiv
cmp
xchg
mov
les
test
mov
jne
aaa
jbe
pop
add
xchg
pop
jo
imul
push
inc
pop
or
subb
or
push
jmp
xchg
add
fsub
pop
jle
dec
loop
scas
out
jno
mov
cli
mov
push
in
stc
push
mov
popa
add
lcall
decl
sub
test
pop
push
mov
ss
push
jg
sub
mov
clc
or
iret
mov
loop
cwtl
lret
arpl
mov
pusha
lock
call
dec
imul
fwait
jbe
or
and
icebp
xor
divb
mov
loop
call
aam
iret
cltd
fcoms
aas
mov
push
mov
sbb
push
mov
lcall
or
xchg
sbb
mov
dec
jo
push
in
sub
incl
pop
adc
hlt
add
or
mov
push
mov
mov
js
push
lods
pop
jecxz
fidivl
xor
popa
enter
adc
loopne
out
sbb
testl
pop
cmp
or
inc
mov
arpl
mov
mov
adc
call
out
pop
xchg
pop
xchg
iret
xchg
lret
ds
pushl
jle
scas
adc
subb
lcall
cmpsl
xchg
lret
dec
fcos
push
repnz
mov
xor
in
and
dec
cltd
push
pop
mov
and
lcall
mov
shll
sbb
mov
xor
imul
xchg
rcrb
and
and
xor
adc
sub
adc
test
hlt
pushf
mov
push
ret
mov
push
push
inc
es
push
mov
dec
push
add
mov
pop
loopne
mov
ljmp
pop
ret
sbb
in
fmulp
fsubrl
jge
idivb
push
decb
mov
pop
ss
sub
hlt
aaa
push
push
stos
lods
push
mov
or
stc
jno
cmp
sub
jbe
mov
dec
xlat
addr16
inc
or
jne
cmpsb
gs
popa
xlat
pop
mov
mov
pusha
cs
out
popl
cmp
stos
pop
inc
out
inc
push
stc
mov
incl
int
jo
lcall
cltd
sbb
aaa
lcall
mov
cmpsb
pop
and
xchg
test
pop
xchg
fwait
data16
mov
jmp
arpl
xchg
popa
pop
cmp
add
movsb
pop
imul
dec
mov
cmp
mov
je
addr16
incl
xchg
stos
pop
cwtl
adc
mov
inc
stos
dec
adc
add
adc
outsl
cmp
fcomip
xchg
addb
cmp
divb
jg
js
mov
lock
cmpsb
decl
dec
sahf
mov
sti
incb
mov
ss
leave
pushf
ss
mov
sub
mov
mov
mov
cmp
xchg
fcomip
fimull
jnp
adc
xor
das
ficoml
fadds
addr16
decl
cmp
call
jg
test
push
mov
pusha
std
add
lcall
aas
rcl
sbb
insl
dec
cmpsl
js
xlat
add
inc
mov
and
js
and
lcall
dec
sbb
push
push
gs
jns
fcmovb
call
cli
leave
aaa
shl
outsb
into
xchg
and
jl
cmp
or
pushl
push
lods
mov
ror
mov
movl
lcall
test
xor
push
dec
inc
jb
test
sbb
dec
fs
icebp
mov
lods
sub
fs
lcall
adc
bound
sub
lcall
dec
loopne
ss
pop
fs
mov
push
mov
dec
outsl
jmp
xor
mov
mov
pushf
lods
sub
sub
test
lcall
out
addb
jp
icebp
mov
not
cld
xchg
lock
incl
pop
jl
or
push
push
std
repnz
in
test
testb
scas
jg
mov
sarl
xor
mov
mov
and
arpl
inc
addr16
inc
xor
test
out
jecxz
inc
mov
sahf
xlat
orl
nop
cmpl
ficompl
dec
cli
jmp
pushf
aad
cwtl
test
std
sarb
cmp
fldenv
lods
mov
fcomip
incl
mov
add
fisttps
ret
cmp
inc
pop
test
pop
xchg
data16
lods
inc
lods
scas
add
out
push
mov
nop
out
mov
inc
adcl
popf
xchg
ret
outsb
lea
cwtl
sub
inc
out
push
ret
mov
adc
inc
stos
xor
decl
fdivl
arpl
and
movsl
jle,pn
lods
call
sahf
divb
lods
pushf
jecxz
jg
dec
gs
jmp
or
test
or
cwtl
cmpsb
add
mov
sbb
sbb
stc
jp
dec
xor
mov
shrb
je
out
pop
jle
fisttps
loopne
jge
cmp
mov
orb
or
arpl
inc
inc
orb
sub
or
mov
shl
lcall
inc
sub
mov
sbb
scas
shll
xor
xchg
and
mov
and
addb
bound
pop
cmp
ljmp
loop,pn
mov
inc
xchg
pushf
cmp
mov
cmp
test
mov
dec
pop
mov
ret
mov
imul
gs
mov
hlt
push
sub
pop
add
call
lds
sbb
or
fildll
add
xor
rcrb
stc
jb
ret
test
mov
cli
lcall
sub
cmpsl
or
lret
cwtl
sub
sub
in
fnstenv
test
fwait
dec
std
data16
in
xlat
jo
ret
adc
mov
add
ja
and
in
mov
cmp
add
mov
icebp
loop
cli
aad
insl
cltd
xor
mov
push
imul
icebp
cmpsb
addr16
hlt
addr16
or
je
loop
cld
stc
sub
imul
aad
pushf
mov
neg
pop
std
pop
and
push
add
sub
jne
mov
sub
mov
dec
test
push
jl
mov
loope
decl
pusha
sbb
mov
push
sub
jo
push
les
arpl
mov
lea
jecxz
cmp
pop
mov
pushf
repnz
cmc
add
add
jg
pop
lea
aad
call
xchg
je
jno
sbb
push
sub
or
hlt
ljmp
and
out
add
popa
es
je
test
jns
fwait
rolb
fldcw
xchg
inc
adc
call
cli
dec
punpckhbw
inc
mov
dec
sub
pop
adc
lods
and
dec
and
xchg
xchg
or
incl
or
push
cmp
es
stos
dec
stc
les
jnp
test
inc
dec
inc
lcall
cmpsb
stos
sub
lods
js
aad
push
mov
mov
pop
mov
mov
stos
mov
pop
pop
inc
loop
add
cwtl
arpl
push
sub
sbb
or
in
sbb
mov
icebp
addb
mov
mov
rcll
mov
mov
lcall
imul
fidivl
aam
fidivrl
xchg
sbb
inc
push
aas
and
pop
pushl
cwtl
pop
cmp
movsl
lahf
test
mov
jb
movb
mov
cmp
orl
jo
stc
fcompl
adc
jle
jle
outsb
ja
addl
mov
mov
mov
jne
sbb
lea
lea
cli
or
push
inc
sahf
mov
decl
xor
jl
movsb
xchg
rcr
int
sbb
dec
repnz
outsb
ret
jo
cmp
scas
cli
lcall
gs
jmp
and
fwait
ss
nop
inc
pop
cs
mov
or
fnsave
adc
sbb
addl
out
jns
mov
sub
roll
stos
hlt
cli
movsl
and
dec
jmp
test
in
sub
add
adc
lods
push
sbb
scas
ljmp
jnp
add
cmc
sbb
sub
or
pop
enter
mov
sub
cmc
inc
out
jp
hlt
ret
pop
das
xchg
pop
jp
adc
popa
sahf
popf
jmp
das
mov
dec
xchg
jno
sarl
test
or
cltd
add
inc
data16
or
jmp
push
adc
jle
mov
push
pushf
ljmp
jb
test
adc
cmp
into
mov
loop
test
push
rolb
xchg
test
mov
push
cmpsl
mov
dec
add
and
fwait
add
pop
mov
and
incl
sbb
add
into
int
push
mov
push
cwtl
sbb
rclb
xchg
decl
sbb
mov
jb
sbb
enter
leave
dec
inc
mov
movsb
es
decl
outsl
arpl
push
xchg
nop
and
test
inc
or
xchg
in
jno
mov
jecxz
pushl
adc
dec
outsb
jb
and
xor
add
xor
xchg
incl
sbb
dec
lods
ljmp
cmpsb
pop
sub
sbb
and
or
cmpsl
inc
cld
pushl
push
cmpsb
adc
icebp
jle
sub
ror
daa
les
push
push
lret
out
scas
add
xchg
jmp
xchg
sub
sub
push
nop
jp
or
fcomip
pushl
lret
jge
jno
into
jecxz,pn
cmpsb
popf
push
pop
mov
pop
gs
xchg
push
lcall
decl
push
iret
sti
movsl
lods
xor
jg
scas
leave
dec
inc
pusha
inc
leave
cwtl
push
lds
xchg
push
adc
xchg
mov
addr16
shl
xchg
adc
jecxz
adc
lods
shlb
stos
jg
imul
xlat
mov
sub
incl
lahf
pusha
loop
mov
data16
incl
mov
or
sbb
jno
rcrl
adc
jnp
xor
ret
incl
aad
in
and
and
xlat
ret
xor
je
fcmovne
inc
add
aad
jge
pop
mov
cmp
sub
push
xchg
pop
lea
jmp
ljmp
lret
lods
or
jecxz
pushf
call
dec
inc
js
in
xlat
cmpsl
lret
std
sbb
dec
into
inc
xchg
push
pop
pop
sub
dec
in
fs
sbb
mov
es
popf
addl
mov
xchg
xor
iret
dec
push
pop
mov
push
movsl
pop
mov
decl
mov
push
mov
pop
jns
popa
fcmovb
cwtl
ret
inc
icebp
xor
fcoml
call
mov
mov
lret
arpl
add
mov
or
hlt
movsl
mov
dec
jmp
xchg
jns,pt
xor
adc
jne
pop
pushf
cmp
daa
pusha
fs
push
mov
and
sub
std
imul
pop
push
test
jle
fistps
xor
cli
imul
daa
cmp
test
jmp
xor
rcrl
adc
jg
call
and
lods
mov
cwtl
pop
or
adc
inc
pop
je
and
push
call
mov
clc
add
in
out
sub
lea
insb
enter
icebp
test
adc
mov
xchg
sbb
dec
dec
jmp
mov
cmpsl
lret
or
inc
lods
inc
cmpsw
rorb
push
mov
orb
sub
add
call
sub
adc
lea
xor
popf
pop
stc
xchg
sbb
fistpll
or
ret
push
mov
xor
imul
or
decl
rcrb
stos
hlt
movsb
loope
rorl
sub
lahf
fstps
sarb
fisttpll
lock
cli
sub
popf
or
mov
add
jmp
sub
pop
shlb
fldcw
or
mov
xchg
mov
ljmp
pop
pop
mov
inc
jmp
or
sub
stos
stc
lcall
xchg
push
lea
push
mov
faddl
mov
mov
pushf
repnz
mov
push
sub
call
sub
push
cmp
add
xor
scas
test
cs
cmp
inc
jecxz
lds
inc
jmp
sbb
mov
icebp
dec
dec
jo
ret
dec
cmp
xor
pop
pop
push
mov
dec
sbbb
pop
int3
jno
push
add
mov
nop
repz
call
jno
xchg
xchg
cmp
cmp
mov
or
mov
call
test
lds
fists
mov
push
jnp
fmull
sub
les
mov
push
in
incl
mov
and
pop
cld
xchg
lock
add
jae
inc
push
incb
stos
fildll
iret
add
mov
mov
jg
cmp
mov
xchg
mov
or
incl
test
ljmp
push
stos
sbb
cwtl
push
add
mov
push
addb
mov
pop
mov
jmp
int3
addr16
sbb
pushf
mov
mov
nop
xchg
loopne
xor
push
hlt
push
xchg
lea
jl
mov
addr16
sub
mov
inc
push
stos
sub
xor
push
jg
add
mov
jnp
mov
outsl
fsubl
in
outsl
xchg
loopne
call
and
inc
adc
mov
mov
and
movsb
fs
sbb
xchg
daa
jnp
cmp
dec
cmp
addr16
lods
mov
test
adc
pop
mov
je
cmpsl
adc
and
adc
jmp
xor
test
dec
test
dec
mov
sub
dec
rol
jbe
pop
subl
xor
decl
sub
test
sbb
gs
xchg
dec
or
movsb
push
les
add
loope
pushl
sbb
jae
or
push
in
push
cmp
mov
pop
sub
mov
cmp
mov
mull
sub
cli
cmc
call
adc
xchg
jp
add
push
mov
mov
pop
cmp
cs
fs
icebp
test
xor
add
decl
ret
pop
and
mov
or
popa
icebp
inc
jmp
ja
sbb
lret
bound
add
ss
mov
lahf
js
gs
add
jmp
pop
xor
insb
xchg
mov
out
adc
gs
xlat
jg
and
pushw
push
and
lds
inc
adc
sti
xchg
add
mov
mov
jg
push
jg
dec
sub
pop
test
cwtl
xor
ja
jae
adc
mov
pop
cmp
pop
icebp
ljmp
xchg
lds
ficompl
mov
outsb
push
pop
sub
adc
sarb
inc
and
in
sti
jmp
jmp
add
aaa
bound
stc
test
jbe
mov
imul
incb
and
sbb
xorl
lcall
aam
push
test
jns
cwtl
adc
adc
test
push
pop
call
fistps
push
jmp
pop
dec
xchg
shll
in
jb
mov
insb
aad
xor
sub
jmp
inc
cmc
and
ss
sbb
add
adc
xor
insl
add
lcall
imul
jp
push
sbb
orl
ds
push
repz
jmp
jl
popa
and
outsl
int
pop
pusha
cltd
ds
ret
and
shlb
jb
pop
xchg
inc
cs
fadd
and
push
mov
pushl
test
jle
shlb
mov
ljmp
jmp
ja
sbb
and
inc
jno
arpl
es
daa
addr16
jmp
mov
and
es
push
pop
mov
cmp
pop
popf
roll
or
pop
adcb
pop
add
sbb
sub
xor
inc
xchg
ljmp
and
dec
cmp
movsl
add
adc
inc
adc
jno
stos
mov
xchg
into
xor
stos
sti
fcomps
cld
pop
nop
hlt
mov
js
cwtl
popf
jne
icebp
test
push
les
in
sub
adc
and
jmp
dec
loope
cmp
cs
addr16
push
ss
add
push
inc
inc
xchg
cli
lahf
mov
or
jg
cli
xchg
mov
sbb
lds
xchg
sbb
xchg
les
insl
int
fildl
push
dec
loope
fists
jnp
popa
xchg
adc
dec
adcl
cmpb
iret
cmc
inc
cmp
jmp
push
outsl
bound
pop
imul
mov
xchg
jae
xor
cmpsl
cwtl
and
xchg
das
push
jo
inc
inc
js
mov
xlat
jge
out
cmp
and
bound
adc
dec
cli
incl
movsb
jno
jb
pop
xchg
test
adcl
das
mov
dec
jo
std
aaa
cltd
dec
mov
xorb
std
ja
mov
andb
daa
adc
in
inc
xlat
dec
inc
cmc
inc
pop
ja
je
adc
jecxz
push
fsubl
or
cmp
push
test
lds
popf
hlt
dec
xorl
mov
fstps
cmpsl
jns
xor
mov
cmp
lcall
adc
sbb
add
test
lahf
xor
lahf
push
clc
das
sub
out
popa
mov
push
decl
sbb
xchg
fiaddl
test
stos
ficoml
js
xlat
sbb
mov
mov
xlat
flds
call
test
js
sub
add
pop
lret
decl
mov
nop
add
stos
adc
jl
cltd
jl
call
add
adc
mov
and
enter
and
jge
xlat
and
inc
movsl
or
inc
dec
mov
scas
jb
mov
jno
rcll
sbb
push
cmpsl
bound
lcall
add
sbb
movsl
adc
mov
or
popa
sub
cmp
mov
mov
cmp
dec
mov
mov
fwait
pop
loopne
das
add
pushl
sub
rorb
sbb
sbb
cmp
dec
cmpl
jbe
icebp
pop
cmp
mov
call
test
push
sahf
into
daa
sbb
hlt
sbb
in
call
xchg
scas
xor
sti
lahf
or
xchg
and
incl
xchg
sub
inc
out
cs
adc
idiv
out
jp
int3
lods
mov
and
loopne
sub
fisubrl
mov
push
adc
cmpsb
add
push
mov
jp
addb
hlt
mov
mov
mov
xor
repz
xor
int
ljmp
jl
inc
xchg
mov
mov
mov
je,pt
cltd
sbb
lret
lcall
filds
adc
push
lcall
and
dec
bound
mov
fdiv
pop
dec
add
nop
test
jno
jb
mov
push
pushl
xchg
lahf
inc
lea
andb
movsb
sub
fwait
pushl
dec
jecxz
jp
movsl
add
inc
jmp
mov
sub
stc
test
or
pushl
std
nop
bound
and
jno
stos
ja
adc
mov
call
inc
cmp
mov
mov
mov
sbb
cmp
call
cmp
xchg
mov
mov
sbb
leave
lahf
lock
movsl
xchg
mov
pushl
lret
or
add
pop
dec
movsl
cmc
lods
int3
add
pop
test
pop
dec
dec
jmp
inc
enter
mov
pop
dec
mov
cmp
push
or
incl
mov
inc
dec
mov
fdivrl
pop
mov
mov
call
add
pop
xor
add
inc
mov
sti
or
sub
mov
sub
mov
bound
ss
jmp
cmp
test
xchg
outsb
in
mov
xorb
cmpsl
aaa
rcll
mov
or
cmp
add
cltd
dec
mov
jg
push
lret
outsl
shlb
mov
sub
daa
jg
jmp
or
cmp
divb
rcrb
repnz
loop
cld
or
sub
rorb
ljmp
or
fistpll
mov
and
lods
into
sub
xchg
stos
sub
mov
inc
mov
leave
fwait
mov
rcll
pusha
push
outsl
inc
adc
movsb
push
adc
cld
mov
in
xor
push
xchg
push
dec
or
fnstenv
ss
xchg
call
dec
add
jmp
adc
mov
mov
xchg
in
cmp
inc
xor
stc
das
sti
inc
or
push
inc
cwtl
xor
and
mov
cmp
xor
imul
sbb
jle
sub
push
jmp
push
push
movsb
sbb
inc
sub
inc
sbb
repnz
push
lret
out
sahf
adc
jge
pop
jmp
jb
jmp
and
add
adc
jl
ret
cmp
lret
sub
gs
jb
cmpsl
cs
pop
cli
pop
fadds
int3
movsb
xchg
jae
sub
push
rol
pop
mov
adc
sbb
add
shlb
decl
or
mov
mov
cmc
sub
add
inc
adc
sub
sar
decl
inc
stos
out
in
fisubl
sbb
xor
sub
sbbb
jo
cmpsb
jbe
mov
in
jnp
jae
pushl
adc
ret
add
push
sub
and
mov
xor
insb
jg
add
cmc
movsb
add
xchg
sub
mov
ss
xchg
hlt
pushl
lcall
xor
shrb
and
sub
adc
pop
or
out
outsl
clc
mov
movsb
inc
mov
clc
mov
jbe
sarl
push
movsb
ja
mov
cld
rolb
or
popa
inc
ffreep
push
pop
inc
fistpll
inc
cli
decl
lret
movsb
adc
aam
pop
ret
mov
sub
xor
pop
ljmp
scas
push
stos
xchg
sub
and
imul
aaa
inc
notb
pusha
push
inc
and
jmp
lret
popa
jmp
sub
mov
je
loope
call
dec
xchg
adc
mov
cmpsl
mov
decl
mov
or
jbe
mov
test
mov
lea
sub
xchg
mov
hlt
jg
xor
jne
sub
test
ljmp
push
icebp
shll
mov
ret
out
lods
mov
sub
cmp
lcall
ret
cmpsl
mov
inc
adc
hlt
push
cmp
pop
cmc
mov
push
mov
jns
pop
cmp
mov
add
insl
lds
inc
sbb
and
fisubl
jg
shlb
pop
daa
fs
dec
adc
jp
pop
dec
adc
lock
inc
dec
rcrb
xchg
mov
int
cmp
lcall
mov
jl
jl
dec
test
cmpsl
mov
add
add
movsb
incl
push
ja
cmp
push
aam
add
shl
daa
push
movsb
ljmp
out
clc
int
mov
ljmp
inc
push
push
out
and
loop
and
lcall
push
movsl
out
add
xchg
and
adc
out
mov
jg
mov
sub
sub
cmp
pop
subb
cmp
jno
xchg
adc
add
fstpl
jne
lahf
hlt
fs
dec
mov
dec
nop
jb
mov
sub
adc
pop
dec
adc
mov
dec
div
decl
orl
out
pop
out
cld
mov
pop
add
decl
xor
addb
fstl
inc
outsl
sub
push
inc
call
push
mov
bound
nop
xor
mov
mov
pop
out
inc
xchg
lcall
or
fstl
jmp
jmp
faddl
fstl
insl
decl
xor
cmc
mov
add
push
xor
add
cld
inc
sub
sbb
jp
popa
cpuid
and
jg
dec
lods
jmp
dec
enter
repnz
xchg
add
xor
incl
gs
outsl
push
out
sub
loopne
mov
les
inc
les
call
decl
std
cmpsb
mov
repnz
mov
ds
stos
inc
aaa
call
hlt
mov
ja
lret
xor
and
push
or
and
dec
push
push
fcomip
mov
in
dec
pop
gs
xor
icebp
jne
int3
sub
mov
cmp
mov
push
push
inc
adc
sbb
fxam
jbe
pushl
mov
mov
xor
stos
xorb
xor
inc
andl
or
mov
call
pop
cld
lock
inc
test
xor
lcall
mov
adc
inc
ret
shlb
add
mov
pop
dec
sbb
incl
xor
cld
add
repz
rcrw
outsl
dec
push
cmp
incl
imul
fs
push
stos
mov
or
mov
pop
add
or
add
mov
les
xor
fisubs
cld
jge
and
push
ret
jbe
icebp
xor
ret
out
js
jns
fsubl
shl
fisttps
ret
push
xchg
mov
or
int
aaa
mov
push
push
pop
sahf
jnp
in
out
popf
aas
insl
mul
sbb
cltd
imul
ret
pop
add
xchg
xchg
test
loop
daa
ljmp
lcall
mov
jbe
loopne
sub
scas
orb
into
cmp
icebp
jg
inc
in
xlat
push
insb
clc
icebp
or
mov
push
outsb
ret
sahf
addl
aas
xchg
push
push
jmp
clc
out
push
fsubs
and
es
shrb
data16
mov
cmp
cmp
push
ljmp
pop
pop
movsb
ret
mov
inc
jl
les
sbb
mov
adc
pop
andl
and
dec
sbb
sub
rolb
or
add
cs
rorb
sti
pushl
dec
xor
xor
pop
pusha
int3
cmp
xchg
pusha
dec
mov
jg
mov
ds
pop
into
mov
mov
cmp
push
test
outsb
jg
orl
dec
daa
xchg
xor
dec
inc
mov
push
and
lds
roll
push
mov
es
xchg
es
push
scas
test
dec
sbb
stos
mov
jmp
in
movsl
mov
orb
pushf
scas
xchg
sub
fidivl
cmp
movsl
stos
test
aaa
cld
sbb
lret
cmp
and
movsl
mov
das
jae
and
ret
ljmp
dec
cs
jno
lea
or
fmulp
stos
cmpsb
mov
push
mov
xor
sahf
xor
in
and
popa
and
incl
pop
js
pusha
lds
mov
inc
add
xlat
mov
mov
push
out
rolb
or
movsb
jo
pop
std
lcall
in
movsl
adc
js
daa
sbb
insl
mov
jb
lahf
jecxz
mov
mov
mov
cmp
ss
add
jo
std
insb
jbe
lcall
test
cmpsb
inc
xor
in
loope
cld
decl
cmp
sbb
sbb
lds
iret
dec
loope
lea
inc
mov
fisttps
jecxz
rol
pop
xchg
push
inc
and
outsl
dec
xor
and
clc
push
mov
mov
ss
sbb
rorl
aad
dec
xor
push
jmp
push
int
jmp
bound
add
xchg
add
adc
xor
fst
orl
frstor
adcb
je
push
xor
jg
ja
std
push
fildl
and
sub
aaa
sub
shll
gs
lea
jmp
or
scas
shrb
test
test
mov
lcall
dec
stos
push
mov
sub
or
jbe
lods
mov
xchg
jge
xor
dec
jmp
adc
add
das
fs
adc
pusha
cmpl
test
dec
lret
cli
incl
jl
hlt
mov
movsl
lods
out
call
mov
xchg
mov
sub
daa
mov
ret
adc
clc
mov
ret
sub
xchg
sbb
xor
adc
call
sub
es
mov
push
ret
cmp
nop
clc
dec
sbb
mov
mov
aaa
jp
sbb
push
mov
icebp
mov
inc
movsb
jae
enter
adc
xchg
movsb
xor
cmp
ds
incb
pop
mov
adc
in
gs
into
cwtl
fs
das
rclb
adc
fsubrs
xor
dec
inc
or
xchg
push
in
push
js
inc
dec
sbb
inc
popf
push
xchg
mov
cmp
adcb
mov
jmp
jmp
mov
jno
dec
dec
adc
pop
xchg
dec
sub
sub
lock
dec
lods
jno
ret
out
test
adc
xchg
jg
call
mov
imul
sbb
or
mov
adc
test
int3
push
pop
call
mov
jnp
addl
mov
out
xor
les
filds
inc
int
jns
ret
or
jae
stos
shlb
adc
jmp
dec
mov
lds
mov
lahf
mov
loop
gs
movsb
cmp
dec
push
or
lahf
icebp
sbb
imul
mov
pop
pop
xor
fcomps
cmp
and
decl
fmull
inc
and
xchg
sbb
cmpsb
mov
mov
and
jmp
sub
pushl
mov
sub
push
into
push
mov
xchg
dec
mov
lcall
xchg
dec
add
ss
loope
dec
xor
cmp
pop
jne
sarl
mov
push
lea
lret
xchg
xchg
push
gs
mulb
fcomip
push
mov
lods
data16
hlt
aaa
mov
sub
cmp
dec
test
enter
pop
rcrl
mov
test
and
incl
xchg
xchg
out
xor
or
xor
rorl
insl
repnz
adc
push
inc
lock
incl
push
mov
xor
arpl
mov
lret
mov
aaa
pop
loopne
popa
fs
out
push
fisttpl
cmpsb
mov
lcall
mov
inc
leave
dec
js
ffree
mov
jmp
adcb
hlt
or
data16
rcrl
aaa
cld
jg
jl
cwtl
les
icebp
xor
shrl
aad
inc
push
insl
or
lcall
shlb
fsubs
xor
jecxz
stos
mov
popf
int
sub
lea
jg
sbb
aad
jbe
fcmovnu
enter
hlt
icebp
lods
test
add
scas
popa
mov
clc
sbb
lcall
jo
lds
rolb
inc
dec
mov
inc
repz
lcall
popf
sbb
cmp
pop
fdivp
xchg
and
rorb
push
push
xor
cs
dec
push
xchg
movsl
dec
push
pop
xor
ljmp
xchg
pop
pop
rolb
fcoml
lahf
mov
lea
adc
xor
xchg
ljmp
jmp
pop
lock
dec
rol
pushf
cwtl
pusha
or
dec
clc
lcall
imul
lock
jne
jecxz
inc
incl
mov
sub
jmp
hlt
pop
dec
xchg
call
call
push
bound
loope
or
scas
or
xchg
push
outsl
lcall
dec
or
mov
imul
jo
jp
sbb
mov
cmp
stos
fcmovbe
scas
mov
dec
xor
xchg
bound
push
dec
jecxz
jae
aad
fisubrs
cmp
rcll
mov
jg
incl
xor
xchg
xor
movsb
inc
sbb
pop
in
mov
xchg
pop
inc
stc
xchg
or
push
dec
dec
cmpsb
sub
mov
popa
out
gs
lahf
or
or
rclb
sahf
sbb
call
jl
xchg
xorb
std
out
xlat
mov
movsl
sbb
fdivrp
js
or
into
mov
adcb
popf
jmp
or
outsl
jle
cmp
cli
negb
call
mov
repnz
ret
push
fnstcw
pop
xor
sarb
push
mov
mov
das
adc
test
mov
sahf
cmp
jmp
out
jo
addr16
sbb
mov
rorb
iret
je
iret
or
pop
xor
sbb
test
es
test
addr16
loop
adc
sub
mov
sti
call
inc
pop
and
out
test
or
addb
lock
adc
ljmp
pop
add
sub
and
repz
or
loop
cmp
ljmp
test
xchg
push
add
test
dec
orl
fiaddl
bound
jge
inc
adc
push
scas
push
and
leave
clc
lods
mov
lea
xchg
adc
repz
inc
pushl
mov
ljmp
and
and
add
stc
cmp
dec
movsb
mov
xchg
fsts
inc
jb
jmp
lods
jo
lods
arpl
lret
cwtl
sbb
add
lock
mov
pop
or
adc
or
adc
je
pop
or
mov
push
add
push
pushf
add
rol
sbb
add
pushl
and
in
add
and
xchg
adc
pushl
add
int3
add
ret
ret
xchg
and
ret
in
in
sub
push
sub
inc
inc
mov
int3
cmpb
xorl
xor
cmc
cmp
addb
pushf
sbbb
rorb
xor
xor
mov
lahf
out
cmp
popa
cwtl
cwtl
mov
mov
or
fildll
std
loopne
and
es
nop
cmp
or
pop
lret
dec
cld
pushl
mov
and
in
call
stos
add
addb
cmp
and
jno
leave
lock
cltd
push
test
xor
decl
mov
test
dec
cmp
enter
inc
jmp
loope
decl
insl
jmp
loop
xchg
loop
mov
js
xchg
inc
das
sbb
out
test
mov
lcall
mov
movsb
fnstenv
or
test
call
incl
mov
sub
imul
adc
test
mov
mov
mov
lcall
mov
xor
test
test
fwait
and
and
pushl
rclb
mov
mov
loopne
pushf
lea
call
cmp
mov
dec
shlb
pop
mov
mov
pop
cmp
mov
aaa
dec
cli
xchg
xchg
mov
mov
push
incb
enter
dec
ja
and
jecxz
jecxz
movsl
lods
or
arpl
sub
std
popa
sahf
xchg
out
cltd
jmp
stos
push
push
push
sub
xor
mov
stos
clc
or
add
mov
jmp
xchg
xor
cwtl
mov
or
mov
inc
lds
pop
pop
push
ret
mov
inc
add
nop
add
pushl
push
pop
sub
xorl
xor
or
mov
mov
pushl
push
fcomps
mov
inc
cwtl
lods
cmp
lock
cwtl
loope
xchg
add
mov
mov
mov
dec
push
jmp
test
xchg
lcall
scas
push
jmp
jecxz
add
mov
insl
enter
outsl
je
and
lcall
and
adc
ret
sub
mov
or
icebp
addb
nop
sub
aaa
movsl
lret
lcall
pusha
mov
cmp
fstpt
mov
sbb
pop
mov
fwait
and
incl
push
fcoms
stc
and
ret
cmp
aam
lret
enter
xchg
incl
sub
xchg
ret
and
sbb
iret
loope
mov
jp
sub
pushl
cld
jmp
dec
mov
inc
adc
or
loop
ljmp
push
arpl
add
xor
test
push
arpl
sub
or
sbb
dec
push
cmp
sbb
call
rcrl
dec
scas
orl
mov
test
nop
xchg
shrl
ljmp
jnp
mov
sbb
xchg
pop
dec
mov
dec
loop
xchg
hlt
cmp
jecxz
lcall
pop
mov
xor
cmpsb
ret
pop
ret
mov
and
xor
sbb
sub
bound
mov
fs
scas
div
mov
mov
mov
cltd
cltd
dec
xchg
adc
xchg
js
out
add
in
movsb
dec
mov
adc
add
sub
add
ljmp
push
or
xor
popf
sub
inc
dec
cmpsl
adc
js
xchg
aas
mov
ljmp
adc
and
cmp
jle
cmp
xor
and
and
xor
xor
and
pushl
push
adc
fidivrl
loope,pn
mov
fwait
shlb
mov
mov
in
pushf
push
or
adc
call
and
lcall
mov
clc
ljmp
add
push
cwtl
xchg
push
test
add
fists
das
sub
mov
mov
xchg
movsb
stos
lret
jmp
cmp
subl
pop
prefetchnta
ja
sbb
add
xchg
xor
inc
lods
cwtl
cmp
fldcw
arpl
popf
call
fs
sub
or
int3
cs
inc
shl
adc
jmp
jg
cmp
jnp
and
aam
repz
or
mov
mov
mov
or
sub
and
lods
ljmp
and
popa
lods
es
and
and
outsl
cli
call
mov
cmp
mov
xchg
inc
loop
and
or
mov
xor
jmp
insb
mov
cmp
pushf
lret
inc
sbb
movaps
or
lcall
adc
xor
and
xor
cmp
repnz
stos
jg
xchg
mov
stos
rol
rol
sub
and
fdivrp
movsb
xchg
pop
or
imul
or
adc
sub
cwtl
pop
xchg
cmp
fidivs
test
loope
fsubrp
les
lods
push
cli
push
je
addl
pusha
add
and
sbb
test
inc
sbb
pop
fwait
mov
stc
popf
xchg
push
xor
adc
inc
clc
lods
push
pop
and
mov
call
sbb
leave
imul
movsl
adc
decl
add
cmc
test
adc
xor
std
movsl
lret
icebp
shll
call
push
sbb
int3
push
or
xchg
jmp
mov
sbbl
call
cli
lahf
insb
orb
stos
fisubl
lahf
mov
or
ljmp
addl
or
mov
xorb
xchg
jne
fistpl
mov
decl
xchg
orl
int
and
add
inc
lods
lahf
nop
call
mov
mov
mov
aaa
mov
lret
jno
pop
dec
xchg
test
push
dec
and
pop
jne
repz
jmp
test
ljmp
fisubl
sub
test
jg
xchg
mov
std
jae
and
scas
pop
dec
and
xorl
and
imul
incl
push
xor
fdivrp
das
test
sub
int
out
andl
dec
ret
jbe
rolb
jg
lcall
jb
pushf
dec
jp
insb
popa
icebp
gs
mov
scas
jne
paddusw
pushl
cld
sbb
mov
sti
in
std
cmp
stc
int
sbb
loopne
out
push
decl
addr16
filds
xchg
addl
adc
push
pop
into
andb
pop
xor
mov
lods
arpl
cwtl
fimull
gs
sbb
inc
fwait
sahf
mov
xor
mov
loope
inc
les
jo
mov
cmp
incl
dec
es
ret
pop
les
popa
bound
bound
jmp
sbb
push
sbbl
repnz
call
pop
imulb
pushf
int
test
xlat
jo
sti
mov
incl
sbb
cmp
call
mov
sub
dec
pushl
push
jecxz
sbb
enter
inc
sub
sbb
pop
clc
decl
in
js
movsl
icebp
test
cmp
clc
test
adc
cmp
or
add
mov
jns
mov
in
fcomip
push
dec
mov
mov
dec
xor
inc
cld
sub
incb
mov
mov
xchg
repz
sub
jne
xlat
dec
cmp
in
xchg
or
adc
mov
ljmp
rorb
pop
bound
sbb
pop
xchg
jecxz
adc
sub
lock
incl
push
sbb
fmuls
jp
icebp
mov
push
push
addb
arpl
fnstsw
mov
call
mov
inc
ljmp
jl
sub
popa
shl
test
sahf
adc
lret
ds
lds
rclb
movsb
sar
pushf
aaa
and
shlb
mov
xor
shlb
jmp
int3
and
xchg
and
scas
mov
cmc
cmp
add
jo
inc
mov
cmp
aaa
xchg
lcall
fwait
loopne
xorb
js
cltd
pop
dec
fldt
jo
or
icebp
cmp
adc
pushl
fwait
int
movsl
fsubl
mov
fs
jge
movsl
popa
insb
int
xor
nop
mov
or
jmp
iret
mov
lcall
sbb
sar
mov
in
fldl
jg
mov
in
mov
iret
fstl
pushl
inc
rorb
test
pop
cmp
and
inc
mov
insb
add
jp
push
jmp
sahf
xchg
add
push
nop
shlb
es
or
xchg
fisttps
mov
push
add
pop
jp
jbe
push
or
into
test
out
addr16
xor
jg
call
subb
movsl
test
ja
imul
std
fimuls
call
call
scas
pop
inc
cwtl
jmp
push
inc
imul
fs
sub
or
mov
mov
pushf
testb
or
mov
mov
pushl
daa
fs
mov
sbb
stos
mov
mov
or
scas
xchg
xor
cmpsl
fisttpl
xchg
sub
pushl
xchg
lods
or
xchg
mov
arpl
cmp
lcall
ficoml
clc
mov
je
xchg
cmp
std
mov
mov
mov
cli
fsubr
arpl
stos
test
pop
jo
mov
loopne
decl
testb
stos
lret
into
nop
adc
nop
das
ljmp
lcall
pop
mov
sti
mov
or
fldl
dec
add
gs
mov
and
xchg
xor
mov
stos
outsb
sub
and
aaa
shrl
jo
out
clc
movsb
fucom
movsb
add
imul
dec
shlb
sub
shll
out
add
rcrl
jno
adc
leave
js
push
sbb
bound
ss
addr16
loopne
fisubrs
push
mov
je
test
std
mov
in
push
decl
inc
cld
xor
out
mov
cmpsl
dec
and
lcall
decl
cmpb
jl
pop
mov
and
imul
lds
lret
shr
leave
jl
mov
mov
xlat
fidivl
dec
addr16
rcl
bound
fwait
cs
out
jo
inc
lcall
push
in
jne
rol
pop
or
xlat
loop
sbb
push
mov
bound
add
dec
jp
pushl
add
or
and
mov
adc
cs
xor
enter
call
stos
add
daa
dec
xchg
movsl
xchg
mov
test
popa
aad
push
scas
pop
mov
leave
ljmp
addl
push
cmp
jl
into
int3
dec
dec
ss
push
test
mov
out
cmpsb
push
hlt
mov
or
push
stos
xchg
orb
jnp
in
jno
mov
mov
addr16
pushf
fxch
cwtl
sbb
pop
lods
sbb
call
mov
jl
out
fdivl
arpl
cmp
call
jae
cmp
repnz
mov
ljmp
jnp
jmp
filds
popa
cmp
fwait
test
lret
xchg
pop
mov
adc
adc
jl
cs
ja
pop
sbb
icebp
jge
clc
cli
ljmp
ret
sub
ljmp
add
sub
mov
fwait
push
js
push
mov
stos
xor
ljmp
xchg
leave
sub
xchg
sub
mov
call
jl
or
xlat
lock
or
mov
dec
adc
mov
mov
sbb
movsl
das
stos
cld
jb
test
divb
lock
adc
dec
pushl
or
pop
and
inc
add
leave
lcallw
inc
push
push
addr16
je
call
cmpsl
lahf
jg
aam
xchg
in
push
ret
jmp
sub
sbb
icebp
xchg
add
mov
add
cmp
mov
test
test
scas
movsb
lods
pushl
mov
xchg
inc
addr16
jno
sbb
test
lcall
jg
jmp
xor
inc
adc
popl
inc
jo
adc
rclb
jg
sub
dec
jno
xchg
dec
pop
lea
xchg
or
stc
jg
xchg
push
in
mov
sbb
push
repz
or
sti
mov
inc
incl
xor
test
jmp
sub
lcall
inc
or
sub
ret
and
popa
data16
mov
lock
lahf
mov
xor
add
call
ss
lods
leave
sbb
jecxz
rep
cmp
mov
push
pop
ljmp
sub
jae
dec
push
popf
jb
cmp
mov
dec
xor
popf
pop
js
pop
mov
decl
pop
jnp
rcll
pusha
xor
pop
mov
mov
addb
fsubrs
pop
bound
lock
call
mov
mov
mov
dec
mov
ljmp
xor
adc
mov
jecxz
push
mov
decb
jmp
xor
sub
pop
sbb
mov
xor
ror
xor
lcall
jl
aam
xchg
pop
outsb
sbb
push
adc
shrb
ret
jg
popf
mov
rcr
cmp
test
xchg
xchg
dec
mov
mov
incl
add
xchg
imul
test
push
xchg
cltd
pop
mov
aas
roll
in
decl
jbe
push
inc
js
sub
lods
in
test
stc
adc
nop
sbb
and
repnz
ret
mov
inc
add
push
or
mov
push
ret
sub
xor
xchg
cmpsl
in
popa
xor
hlt
ds
in
mov
push
pop
lods
add
and
sbb
adc
push
popf
jg
sub
in
cwtl
cs
xor
lds
incl
shrb
adc
dec
cwtl
aaa
mov
sbb
dec
enter
mov
pushf
shll
jo
dec
inc
rcrl
adc
push
fs
lcall
cmp
fcompl
cmp
into
outsl
jo
sbb
cmpsl
incl
ret
jae
mov
jmp
or
jns
push
push
pop
popa
dec
push
dec
vmwrite
cmp
mov
ljmp
fxtract
and
add
dec
xorl
inc
js
pop
xchg
xchg
mov
fdivr
sbb
push
in
add
rolb
cmp
inc
mov
mov
cmc
js
cld
mov
fcoml
enter
inc
sub
jg
xchg
and
test
and
lods
cmpsb
xchg
dec
and
rolb
cli
incl
xchg
scas
movsl
sub
add
nop
incl
bound
sahf
icebp
cmp
cmp
icebp
dec
dec
ja
fsubrp
lcall
mov
adc
sbb
xchg
into
pop
cmp
add
out
insb
cld
sbb
xchg
push
cli
xor
test
dec
sahf
ljmp
xchg
add
cmpsl
xchg
test
xchg
cli
push
rorb
mov
sbb
jmp
xor
push
or
sub
fs
test
lret
mov
and
in
mov
sub
sbb
or
or
jno
repnz
test
and
push
stc
mov
add
fcmovnb
add
pop
inc
pop
call
adcb
mov
mov
mov
inc
add
jg
lds
sub
lea
adc
pop
xor
int3
pusha
cmp
sub
xchg
stc
mov
sbb
in
aaa
std
incl
popl
xor
mov
gs
mov
popa
test
je
jg
clc
inc
insb
push
push
mov
repz
loope
inc
cmp
into
jb
adc
jg
loope
dec
mov
cltd
xor
fdivr
in
fcmovnbe
xor
pushl
lret
fmull
mov
jb
incl
adc
push
ljmp
lods
add
pop
in
lret
sbb
sub
lret
pushf
and
jno
xchg
sbb
jmp
mov
cltd
stos
and
loope
fidivrs
push
inc
xor
es
jg
leave
ret
add
xchg
xor
sub
sbb
rcrl
sub
decl
pop
icebp
xchg
sahf
js
call
test
scas
cmp
cld
mov
incl
jae
xchg
mov
push
cmp
dec
jo
jns
shlb
or
push
mov
iret
and
ret
xchg
outsl
cmp
xorl
mov
fildll
call
lahf
pusha
scas
and
pop
rorl
adc
lcall
rol
fistpll
push
rorb
mov
jle
les
call
or
repnz
mov
push
cs
jp
xorl
outsl
cwtl
loopne
mov
mov
sub
incl
stc
xchg
push
sbb
mov
ds
jo
sbb
and
lcall
mov
sub
rcll
xchg
addr16
outsb
fdivr
stos
mov
xchg
sub
pop
push
ret
inc
sbb
dec
xchg
fnstenv
inc
jp
sub
push
xorb
hlt
icebp
ljmp
addb
mov
jle
mov
push
insl
out
ljmp
rol
mov
fisttpll
imul
and
sbb
ds
jmp
and
push
fcomip
push
shl
in
push
jge
push
aaa
neg
outsb
jne
rolb
sti
in
push
data16
je
negl
pop
or
sbb
sub
fcompl
sub
sbb
jmp
cmpl
mov
jmp
sub
mov
push
rolb
icebp
jmp
clc
lret
cmpsl
sahf
es
jnp
outsl
js
loop
iret
test
cmp
sub
jbe
nop
dec
sub
call
cmp
addr16
ljmp
mov
pop
sub
pop
xchg
lock
sbb
jmp
mov
movsb
jmp
pop
xor
aam
pop
jp
in
cmp
outsb
inc
fdivrp
dec
jge
sbbl
lret
xor
xor
push
cwtl
or
ja
add
aad
cmc
je
and
pop
subb
rolb
scas
ss
lret
xchg
dec
pop
adc
cwtl
cmc
jnp
cmpsb
out
cli
dec
pop
push
ret
and
fs
jmp
mov
das
dec
call
loope
insl
nop
jb
jne
adc
mov
ficoml
das
popa
pop
lds
mov
mov
jecxz
je
sbb
test
mov
arpl
es
jae
pop
dec
addr16
mov
or
addb
call
int3
mov
mov
in
fdiv
and
inc
dec
lcall
inc
xchg
mov
mov
test
lcall
sub
jno
xchg
xchg
xlat
pop
fimull
enter
aad
mov
mov
xchg
cmp
enter
cmpl
pusha
or
decl
mov
mov
insb
push
cmp
xbegin
or
loopne
fchs
xorl
inc
inc
push
inc
lods
mov
mov
lcall
xor
iret
mov
adc
pop
or
mov
incl
adc
into
movsl
subb
jno
xchg
mov
ljmp
fbld
mov
push
cli
sbb
iret
inc
call
sti
xor
or
mov
cmp
dec
push
in
add
inc
add
jno
dec
mov
cli
decl
cltd
fidivrs
mov
leave
add
nop
out
mov
xor
mov
or
ljmp
inc
push
orb
aad
push
aas
pop
sahf
std
adc
outsl
mov
enter
movsb
xadd
mov
je
call
adc
in
inc
out
inc
pop
cmc
dec
push
dec
addps
adc
lcall
pop
dec
and
lods
inc
cmp
pushf
and
int3
sub
inc
popa
xchg
cmp
sbb
cmp
jo
or
push
arpl
int
rcll
imul
sbb
push
sbb
shrl
inc
push
xchg
jo
lcall
and
jb
in
fcomps
jne
push
rcll
mov
jp
xchg
ja
dec
mov
xchg
fld
fistl
jle
and
idiv
jge
dec
jne
pop
jbe
mov
adc
hlt
inc
cmpsb
mov
testb
mov
std
mov
dec
rolb
test
push
fsubl
mov
nop
ljmp
dec
loop
dec
repnz
dec
call
int3
in
movsb
push
idiv
add
push
shlb
movsl
push
dec
in
hlt
roll
pop
loop
sar
movsb
lock
scas
test
cmp
jg
pop
adc
faddl
int
xchg
mov
inc
cmp
shl
adc
inc
nop
dec
std
pop
and
dec
movsb
insb
loopne
cmp
mov
setae
call
sbb
rclb
pushl
adc
mov
cli
mov
sbb
mov
test
insb
nop
fsubrl
outsl
and
shrl
dec
lcall
movb
stos
enter
adc
lcall
push
imul
fstpl
stos
push
adc
fiaddl
cmp
push
test
ss
ljmp
orl
adcb
lcall
add
sahf
mov
sahf
push
loopne
pop
cmp
cmpsl
inc
fisttps
loopne
sub
mov
add
add
cwtl
lcall
sbb
repnz
aaa
and
lcall
int
sbb
ret
cmp
int3
gs
sbb
pop
insl
movb
into
lods
push
clc
xchg
xor
sti
cmc
push
insb
add
and
jae
jg
push
jbe
push
mov
and
movsb
xlat
mov
mov
inc
andb
ljmp
pop
movsb
jb
pop
es
in
mov
push
andb
dec
inc
std
int
nop
les
lcall
test
repnz
mov
je
jmp
lods
pushf
mov
jmp
fdivrl
push
int3
fdivrl
lock
incl
mull
cwtl
dec
out
ds
rorl
movsb
addb
or
dec
jmp
loope
jno
sbb
add
or
fsubs
lea
sbb
add
mov
xchg
mov
mov
es
clc
mov
pop
pop
andl
mov
inc
push
incl
dec
lods
xorb
loopne
push
int3
rol
cmc
push
lods
push
addl
or
test
xchg
roll
dec
in
lret
sbb
pop
outsl
jg
std
stos
sahf
andl
push
in
jbe
inc
push
mov
jmp
movsb
jge
ljmp
jl
cmp
cmpsl
in
lds
fiaddl
js
sub
fwait
jg
adcb
gs
and
sub
rolb
cmp
xor
insl
push
sbb
mov
ss
incl
rcrb
adcl
pop
sbb
jno
test
hlt
jg
inc
or
inc
push
pop
jns
and
mov
subl
xchg
aad
out
andl
mov
push
les
add
fcoml
sub
adc
gs
stos
mov
inc
rclb
in
sub
enter
scas
test
dec
imul
dec
jl
inc
sub
mov
inc
out
cli
push
sub
into
jmp
int3
leave
into
xor
pop
xchg
test
jmp
in
push
or
aam
imull
push
loopne
movsb
call
aam
push
inc
enter
fdivrs
lods
cmpsb
ljmp
and
outsb
fadds
rclb
inc
sbb
inc
add
in
xchg
aam
push
cmpsb
cmc
incl
or
mov
pop
mov
test
lea
sbb
add
cmp
jne
cmpsb
dec
jl
mov
add
popa
fcomip
ja
scas
inc
in
stos
xor
dec
push
stos
out
add
pop
push
mov
je
add
xchg
or
push
mov
push
mov
push
or
das
mov
aad
iret
pop
in
hlt
into
push
cmpsb
jge
out
fldcw
jmp
xchg
rol
pop
push
int3
add
adc
push
adc
push
pop
aam
stos
push
sbb
xor
cmp
addr16
andb
push
sbb
lock
ljmp
push
mov
into
mov
jl
push
sbb
lcall
lret
sbb
pop
call
dec
xchg
cmp
insl
sub
je
xchg
call
cwtl
fisttpl
sub
in
mov
xlat
push
and
xchg
int
mov
mov
or
and
adc
dec
sub
mov
flds
inc
ljmp
jb
adc
in
out
call
outsb
lds
mov
enter
jmp
sbb
dec
fs
add
enter
mov
mov
aam
xchg
mov
sub
add
add
les
xchg
xchg
adc
sbb
imul
int
es
jne
inc
xor
in
jmp
dec
push
push
push
and
dec
adc
sub
or
cmp
adc
icebp
jg
call
incl
xor
jne
stos
scas
and
outsb
out
adc
push
cmc
lcall
rcrl
pop
jl
in
push
inc
cs
cmp
fidivl
and
push
pop
adc
or
and
fcompl
pop
hlt
das
cli
test
insb
sub
clc
adc
aad
in
sti
mov
mov
sbb
and
or
ljmp
rcrl
leave
sbb
pop
int3
add
xor
insb
or
mov
lret
rolb
cmp
stc
icebp
add
or
dec
jo
in
adc
dec
pop
outsb
push
fildl
pop
dec
int
in
xchg
or
jg
incl
xchg
xchg
adc
jo
in
mov
pop
sub
adc
std
incl
movsb
adc
jo
ret
xchg
fcoms
dec
fsubrl
jmp
mov
adc
in
push
xor
pop
mov
rorl
repnz
jmp
dec
orb
inc
sbb
ret
inc
mov
incl
sbb
inc
cmp
imul
jb
add
jno
das
xchg
lods
call
fdivrl
xor
sti
loope
mov
fnstenv
push
mov
mov
jno
sub
fdiv
icebp
addb
into
mov
and
mov
xor
mov
sub
int3
cli
stos
repnz
cwtl
or
jno
xchg
incl
inc
pushl
mov
sub
push
inc
jbe
aad
mov
fists
jmp
jb
or
sub
jecxz
andl
push
repz
call
inc
add
cmp
mov
pop
mov
les
test
lds
flds
sub
add
add
imul
adc
sbb
call
loopne
cmp
sbbb
push
jge
adcb
mov
cli
fcomip
fwait
sub
add
add
adc
ljmp
test
push
andl
outsl
mov
mov
push
sub
js
jg
test
mov
mov
mov
fwait
jb
lea
shlb
dec
or
jmp
lcall
decl
cmc
xchg
dec
xor
xchg
enter
pop
pop
inc
les
mov
push
hlt
and
mov
adc
mov
inc
jne
pop
dec
and
ljmp
iret
mov
push
dec
mov
mov
stos
and
xor
adc
adc
cmc
jg
rorl
lods
xchg
daa
das
in
mov
std
out
js
cmp
xlat
mov
jg
pop
mov
pop
loop
in
sbb
out
popa
jns
call
or
adc
mov
or
dec
push
mov
xchg
out
bound
jecxz
subb
cld
call
std
or
negl
or
xchg
inc
inc
fdivrp
decl
xchg
and
cs
call
incl
loopne
push
leave
cltd
add
hlt
jg
nop
lret
or
sbb
insb
mov
es
pop
cld
adc
test
test
jnp
lods
loope
cwtl
mov
cmp
mov
mov
sbbb
pushl
loope
sbb
sbbb
mov
cmp
mov
sub
js
add
dec
pop
sbb
int
jo
and
or
outsb
lods
jg
lods
aad
mov
add
and
pop
es
mov
cmp
sahf
lock
call
lods
inc
xor
xchg
xor
ja
adc
xchg
in
test
lcall
push
cmp
cwtl
push
cmpsb
adc
pushf
push
or
jnp
cltd
adc
adc
inc
mov
imul
out
lcall
scas
or
jl
mov
dec
pop
pop
lret
push
stos
and
in
fwait
mov
pop
inc
push
jno
je
pusha
movsb
cld
hlt
mov
pop
push
decl
xchg
sarb
mov
fbstp
mov
add
out
and
xlat
jo
xchg
mov
fistpl
mov
inc
and
inc
lods
cltd
or
inc
fldenv
inc
fistpll
dec
push
loop
scas
dec
push
or
test
idiv
lcall
dec
std
jns
mov
push
rclb
sbb
xlat
dec
stos
inc
cmpsl
out
lret
decl
dec
jb
int3
mov
cmp
push
cmpsl
out
les
sarb
mov
jnp
xchg
adc
int3
sbb
inc
inc
xchg
cmp
loop
add
lcall
jo
xor
sbb
rorb
mov
repz
sub
dec
loopne
subps
jg
mov
cmp
push
call
mov
and
and
clc
call
std
xchg
aam
push
jns
xor
test
mov
xlat
xorb
pop
push
addr16
jg
ljmp
nop
and
callw
sti
iret
mov
sti
and
adc
call
and
inc
fildll
push
pop
rolb
sbb
lds
in
mov
jmp
mov
ret
test
and
xchg
mov
xchg
fs
xchg
das
inc
ret
add
mov
xchg
mov
push
mov
adc
xor
adc
es
mov
incl
inc
stos
push
mov
sub
test
data16
mov
or
lock
decl
push
mov
or
shlb
pop
clc
sub
mov
or
movsb
mov
mov
mov
mov
xchg
or
decl
addr16
add
enter
push
add
cmp
and
inc
and
sub
aad
or
jae
add
mov
les
push
inc
pop
push
inc
cmc
mov
dec
movl
orb
push
or
mov
ret
ljmp
cmp
fistps
dec
lods
loop
mov
mov
mov
jnp
ds
add
cmp
add
dec
xor
out
inc
adc
cmp
jo
xchg
xchg
push
or
lcall
sbb
mov
lods
cmp
or
dec
test
lcall
pusha
inc
adc
ja
fdivr
fisttps
lret
mov
cmp
orl
lcall
xor
xor
loop
daa
dec
stos
or
mov
cmp
xchg
lret
xor
xchg
outsl
out
cmp
mov
pop
inc
mov
pop
rol
int
cmp
je
dec
cmp
dec
aas
std
cmp
xchg
mov
push
inc
sub
rolb
jmp
xor
loopne
inc
sbb
pop
add
mov
or
aam
dec
sbb
aam
mov
pop
dec
mov
scas
xchg
sub
mov
stos
jne
test
dec
leave
movsl
lcall
bnd
cmp
cmpsl
fidivrl
mov
stos
scas
sub
or
movsl
inc
adc
outsl
ljmp
repnz
test
fsubrs
pop
jne
insb
or
test
mov
xor
mov
mov
bound
das
push
pop
arpl
mov
jne
ret
mov
insb
pop
jp
dec
enter
jecxz
cmpsb
cmp
inc
subl
rol
pushl
cld
incl
xchg
add
inc
add
add
pushf
sub
dec
test
and
ja
jp
aam
dec
into
cmp
les
pusha
xor
mov
jg
test
inc
mov
mov
nop
ljmp
lea
lods
sub
or
mov
mov
add
jns
pop
mov
mov
jg
ljmp
in
mov
xchg
sbb
cmp
lea
mov
ljmp
inc
daa
sub
or
jecxz
sub
je
pcmpeqd
add
idiv
jb
adc
add
xchg
push
inc
sbb
add
mov
movsb
fdivl
cmc
das
int
ror
adc
push
and
push
xor
daa
insb
cmp
mov
aaa
jb
ja
dec
aaa
out
mov
idivl
or
and
xor
push
xchg
decl
or
cli
inc
sub
hlt
push
test
pop
jg
inc
jne
xchg
push
arpl
and
cli
call
jge
cmp
mov
push
dec
loop
ljmp
mov
xchg
cld
dec
and
insl
adc
xor
xchg
add
bound
sbb
leave
sbb
add
mov
leave
push
xor
sub
jbe
cmpl
leave
lret
mov
xchg
lret
jns
lods
scas
xor
incl
or
pop
jns
inc
pop
fdivrl
sub
pop
int3
out
mull
enter
dec
fxch
decl
sbb
push
cmp
add
mov
sub
loopne
cli
lcall
and
mov
mov
xor
sbb
pop
and
inc
add
xor
add
add
dec
jae
pushw
adc
add
mov
test
daa
mov
and
jg
loopne
aas
ret
orl
in
inc
xor
cltd
jne
mov
pushf
in
pusha
inc
lods
push
adc
fdivr
jg
icebp
lea
push
sbb
nop
mov
inc
dec
add
movb
pushl
adc
es
and
popf
mov
mov
loope
aas
jb
jne
pusha
movsb
pop
pusha
call
pop
xor
jge,pn
dec
inc
rcrb
jmp
xchg
pushf
clc
les
incl
xchg
repnz
movsb
pop
jns
add
mov
sub
dec
sub
lret
aam
sub
test
fnstenv
mov
jb
stos
stos
and
sub
in
mov
sti
pop
adcb
xor
loopne
mov
and
jp
pushl
popa
jns
and
mov
mov
add
sub
enter
pop
adc
xchg
inc
shlb
bound
sub
xchg
ljmp
les
cmp
pop
shll
cli
push
or
jg
mov
and
bound
cmp
mov
dec
push
jbe
xchg
mov
jmp
cwtl
ret
das
xchg
das
add
ret
adcb
or
push
xorb
and
jg
sub
sbb
jns
add
jl
push
into
or
add
and
mov
inc
mov
outsb
lcall
popf
insb
inc
pushl
in
rol
imul
cmpsb
adc
xchg
inc
xchg
sbb
ljmp
push
mov
xor
sbb
addr16
mov
aam
xchg
xor
cmp
out
clc
je
rolb
mov
mov
xchg
mov
mov
adc
shrb
pop
mov
inc
ljmp
pop
int
or
jp
push
jg
mov
daa
subb
lret
jns
xor
mov
mov
ljmp
shr
mov
out
into
cltd
into
pop
push
adc
cmp
xchg
dec
cmc
push
jl
pushl
clc
leave
dec
adc
stos
sub
enter
sub
adc
test
and
pusha
es
icebp
inc
cld
mov
mov
inc
popa
pop
inc
dec
add
dec
push
mov
loop
or
add
lret
mov
dec
fildl
js
movsl
xor
mov
pushl
int3
mov
fwait
test
mulb
xlat
ljmp
cltd
and
cmp
mov
inc
test
imul
pop
lret
decb
dec
hlt
xor
mov
push
mov
decl
and
xchg
mov
dec
add
mov
imul
movsb
hlt
jp
mov
and
pop
pop
pushl
mov
addb
xchg
jmp
je
sbb
add
fnstenv
cmp
dec
push
nop
jmp
cmp
mov
mov
cwtl
push
sbb
jno
push
arpl
mov
in
test
dec
jecxz
je
mov
pusha
repnz
mov
std
jg
int3
inc
sbb
xlat
outsl
faddp
nop
xchg
push
cmc
fisubl
xor
add
sub
test
loop
and
and
popa
mov
sub
pushf
dec
xchg
mov
cli
add
and
shl
ljmp
mov
pop
popf
jnp
inc
pushf
push
push
dec
or
cld
jo
call
imul
lcall
sbb
adc
push
stos
push
cmp
cmp
inc
bound
sbb
ficomps
mov
xchg
adc
cmp
call
mov
cmp
and
inc
pop
mov
je
movsb
dec
xchg
mov
and
lds
popf
and
cmpl
test
sub
decl
lret
adc
lods
sub
push
mov
sbb
clc
ljmp
ja
rorb
sbb
lcall
jmp
jmp
repz
fists
pushf
aaa
cmp
iret
sbb
pop
cmp
push
mov
pop
mov
cmpb
push
dec
pop
add
pop
in
mov
mov
dec
inc
mov
popa
jnp
fwait
mov
or
add
repnz
or
sahf
imul
mov
mov
mov
decl
ret
fdivrl
mov
and
lret
sahf
ljmp
mov
cwtl
stc
icebp
cmp
inc
pop
add
js
xchg
xchg
mov
data16
or
and
fisubl
call
sbb
add
sbb
je
incl
push
cs
bound
jae
inc
in
loop
outsb
ljmp
test
pop
pushf
sub
mov
outsb
inc
or
das
cli
orb
test
pop
out
in
push
in
or
imul
das
mov
fs
ret
inc
outsb
or
outsb
in
into
xor
js
inc
les
decl
sbb
push
or
jnp
dec
jnp
mov
addr16
push
sub
rolb
fsubs
jle
inc
mov
and
das
test
addb
gs
orb
lcall
lods
cs
scas
jbe
jge
sub
int
dec
push
stos
or
xchg
inc
dec
cli
ljmp
decl
iret
inc
dec
imul
sub
pushl
icebp
lods
fadds
loopne
scas
dec
inc
scas
hlt
lret
push
repnz
test
orb
inc
das
sub
add
ss
out
push
cmp
repz
faddp
repz
push
jg
inc
push
cmp
dec
das
repz
dec
aam
out
rcrb
dec
repnz
mov
xor
dec
nop
inc
push
xor
sub
xorl
mov
push
cld
jnp
andb
add
or
loopne
mov
or
mov
cmpsb
iret
nop
sbb
cmp
mov
and
cmp
dec
cmp
call
jbe
add
cmpsl
cmpl
insb
clc
mov
jne
mov
fs
pusha
adcb
mov
int
pop
xorb
sbb
and
subb
ds
fdivr
jg
pop
loop
addb
loope
insb
in
add
lret
cltd
jl
loop
mov
ljmp
shrb
mov
dec
fs
dec
mov
ja
daa
js
jmp
loopne
ja
insb
ja
sarb
mov
pop
push
insb
outsb
out
test
push
xchg
ljmp
int3
or
cmpsl
dec
je
push
scas
mov
int3
stos
inc
bound
test
pushl
test
pop
adc
jmp
jge
inc
jmp
mov
mov
movsl
lret
and
ljmp
lods
push
stos
daa
inc
lret
adc
int3
adc
xorl
push
inc
push
mov
ljmp
adc
push
cmp
adc
out
dec
out
cmc
pop
xchg
repz
pushl
sub
inc
push
rolb
add
dec
orb
add
cli
jmp
push
cmp
mov
pusha
or
popa
cmp
in
mov
mov
pusha
inc
test
mov
dec
imul
adc
sti
call
or
js
or
cli
cmp
addb
lcall
fadds
in
mov
jle
daa
stos
orl
xchg
mov
sub
mov
cmp
std
mov
xchg
sub
movsb
or
mov
stos
shrb
lock
movsb
dec
mov
lods
pop
xor
mov
aam
inc
into
rolb
mov
add
pop
dec
mov
mov
loopne
test
mov
shl
and
add
ja
push
jmp
loop
xor
push
xchg
clc
mov
inc
fs
xor
jmp
out
icebp
mov
and
xor
testl
or
push
or
decl
mov
inc
and
xor
mov
adc
out
ljmp
pop
aam
push
jl
jge
scas
and
inc
dec
pcmpgtd
or
adc
adc
decl
int3
into
in
call
mov
add
xor
stos
ss
push
ss
call
cmp
outsl
clc
incl
subb
das
xor
or
inc
das
clc
loop
es
dec
lret
enter
push
and
icebp
dec
xorl
xor
es
xor
ss
push
adc
adc
adc
shrw
sub
cmpsb
pop
xor
aaa
sub
lcall
sub
test
add
bound
xor
movsl
bound
pop
mov
out
mov
cmp
and
jl
mov
call
dec
add
int3
sbb
cmp
xchg
jle
inc
jmp
mov
data16
inc
and
je
sar
das
orb
lock
or
aad
lret
sub
call
icebp
mov
in
ret
es
out
lods
data16
out
mov
ljmp
add
lret
nop
and
mov
jbe
push
push
and
ljmp
ret
push
mov
testw
sahf
test
inc
incl
dec
out
shlb
push
daa
daa
dec
jecxz
push
loopne
stos
movsb
push
pop
inc
jbe
into
shll
sub
in
or
jmp
mulb
jg
cmp
mov
jns
add
mov
stos
mov
and
decl
lock
mov
in
lret
int3
push
subb
test
repz
decl
push
cmpsb
xor
sub
dec
jmp
ss
jne
push
xor
xchg
popa
xchg
add
mov
outsb
add
jle
das
sbb
dec
mov
xorb
aam
push
test
dec
ja
dec
xlat
dec
xor
adc
pop
in
or
jg
out
pop
jno
pop
in
xor
push
sub
ret
ja
imul
clc
inc
imulb
fcoms
rorl
push
dec
mov
pop
mov
stc
mov
pusha
int
fbstp
call
mov
push
ret
aam
xor
sbb
ret
ljmp
add
fnstsw
and
out
sbb
and
mov
shrb
inc
fidivs
dec
arpl
dec
sub
pop
xchg
ljmp
adcb
xor
sbb
add
loopne
jo
jo
mov
loopne
pop
decl
fs
jae
push
faddl
daa
gs
adc
ljmp
movsb
pop
mov
js
hlt
dec
aas
int3
xchg
dec
jnp
sub
dec
jecxz
decl
insl
aaa
test
ljmp
ljmp
or
adc
data16
push
outsl
xchg
xchg
call
mov
xor
in
push
lock
lret
push
dec
cmp
mov
or
lds
xchg
cmp
mov
out
jle
inc
mov
push
jmp
es
push
in
ljmp
pushl
push
dec
push
mov
sub
sub
or
hlt
fmuls
mov
lds
movb
add
call
jbe
push
mov
aaa
aas
adc
sub
adc
push
aam
lcall
fs
cmp
in
out
xchg
es
xchg
cmpsl
push
cmc
in
loopne
int3
jp
inc
repz
test
or
mov
mov
xor
jne
clc
mov
das
xor
mov
add
add
sub
pop
or
bound
inc
ds
fs
adcl
rorb
add
mov
or
fcomps
jle
jae
rorb
or
loopne
cmp
fdivr
incl
dec
mov
out
or
test
and
lcall
leave
dec
jne
inc
jbe
leave
dec
jb
ret
dec
into
fs
jmp
mov
out
lods
lcall
incb
inc
add
clc
test
push
push
and
rcrl
ja
push
or
movsl
mov
insb
mov
outsl
in
insb
lock
sub
and
dec
cltd
mov
push
xchg
jo
scas
sbb
filds
sub
fdivs
std
lcall
jb
sbb
cmp
movsl
daa
repz
and
ja
aaa
outsb
add
pop
enter
lods
inc
ljmp
es
adc
out
test
xchg
repnz
add
incl
push
pop
repz
dec
push
mov
mov
arpl
xor
pop
pop
cltd
add
lcall
or
fwait
call
ja
push
and
stos
mov
cmp
dec
in
mov
ja
std
incl
push
test
cmp
andl
jne
lcall
or
fiadds
cmp
dec
xchg
and
sub
outsl
mov
and
or
dec
data16
call
std
and
push
inc
xor
add
sbb
adc
inc
dec
xchg
push
or
shl
mov
dec
mov
jbe
dec
xchg
repnz
mov
imul
push
push
sub
xlat
mov
jmp
mov
lret
push
neg
mov
movsl
push
aam
and
cmpsl
push
mov
jmp
in
and
jl
inc
mov
aas
mov
push
bound
mov
scas
enter
daa
and
add
dec
test
fildll
jg
sar
lods
lds
push
or
negl
sti
xchg
or
dec
jne
cli
sub
xor
inc
adc
fs
les
dec
push
ss
aad
fiadds
rcll
inc
pop
jl
insb
mov
jns
xchg
or
pop
iret
jl
jo
add
cmp
fs
sub
sbb
pop
mov
lods
mov
call
lahf
inc
iret
jmp
pushf
cmpl
stc
scas
xor
icebp
out
fiadds
push
shll
sbb
mov
jmp
or
mov
incl
mov
jl
mov
mov
mov
int
xchg
lret
jmp
or
xchg
dec
jl
dec
xchg
or
sub
mov
sbb
cmp
xor
mov
jecxz
ljmp
stos
stos
jge
add
mov
xor
jmp
out
clc
mov
repnz
and
dec
dec
shrb
in
cld
fidivrl
out
pop
and
pop
adcl
out
popa
enter
leave
mov
or
lcall
adc
dec
sub
dec
xor
pop
aas
sub
pusha
pop
push
hlt
dec
stc
loop
mov
dec
iret
lret
cmp
mov
cltd
xlat
popf
mov
popa
decl
or
add
or
shll
jnp
je
sbbb
loope
push
incl
rcrb
call
addl
lds
fidivrl
jae
sub
sbb
icebp
int
lret
or
cmp
or
jmp
mov
xor
nop
and
mov
mov
aad
sbb
lcall
les
addr16
xlat
loope
les
jns
into
out
or
jbe
xchg
or
pushf
fsubs
pop
dec
mov
pop
lret
and
loop
sub
inc
jbe
out
jg
decl
sbb
mov
inc
cld
hlt
rcr
and
fldl
pop
mov
bound
fsub
mov
xor
lret
add
aad
push
sub
ljmp
jmp
gs
sbb
pop
popa
call
inc
mov
mov
shlb
cmp
push
cli
pop
jae
xor
pop
dec
scas
repnz
cmc
push
scas
decl
xchg
xor
push
cld
mov
sub
dec
and
jl
sub
push
into
popa
dec
cli
decl
addl
cmpsl
lods
push
cmp
ret
int3
adc
rolb
inc
mov
inc
jbe
inc
cwtl
add
cmp
out
mov
adc
arpl
mov
lcall
js
or
jg
leave
xchg
sub
inc
es
cltd
sub
dec
jb
lahf
dec
shll
cmp
or
mov
int3
push
incl
mov
jbe
aad
jnp
push
popf
lods
sub
jmp
push
lods
arpl
sub
shlb
ret
fisttps
mov
scas
fidivrs
jae
lock
mov
mov
filds
pop
cmp
sbb
mov
fwait
add
inc
cld
dec
imul
mov
pop
dec
sbb
xchg
mov
out
clc
pop
mov
mov
adc
add
jno
sbb
mov
jmp
lods
mov
outsb
insl
pop
clc
add
fistpll
pop
cli
jnp
repz
ja
cs
loopne
dec
mov
std
dec
cmp
out
cli
int3
jg
pop
ds
jg
jmp
add
and
andb
fs
and
loopne
push
xchg
sahf
jnp
in
ja
jg
test
sbb
adc
lcall
loop
stc
adc
mov
mov
arpl
push
mov
bound
mov
mov
ljmp
mov
imul
ret
cmp
call
mov
dec
ss
bound
xorb
sub
mov
pushl
mov
push
sbb
jb
sub
fdivs
inc
sbb
xchg
rcrl
sbb
push
inc
cs
mov
std
jmp
imul
testb
lret
in
shrb
and
or
dec
cltd
outsl
mov
es
adc
pop
jmp
adc
or
push
xor
fcoml
jno
mov
pusha
leave
in
mov
lods
xchg
xchg
pop
mov
fcomps
and
gs
pop
aam
xchg
xchg
lcall
cld
movsl
xchg
fldcw
fldenv
and
pop
arpl
popf
dec
mov
cmpsb
fldenv
call
std
mov
push
push
insb
stos
dec
adc
sarl
lcall
push
push
cmpsl
sbb
out
push
pop
int
xlat
adc
rorl
daa
sbb
mov
fcomip
fsubl
aaa
mov
mov
fiadds
lock
cmpsl
jge
xchg
fidivs
cld
outsl
lcall
push
push
dec
or
dec
repnz
add
xor
xchg
call
lcall
xchg
pop
inc
popf
popf
aam
repnz
mov
cmp
mov
push
insb
ljmp
mov
mov
leave
and
fwait
insl
lret
and
push
cmp
pop
outsl
push
jne
sub
jge
fcomps
fdivs
pop
data16
scas
nop
and
ljmp
add
stos
call
pop
movsl
push
mov
cli
inc
jae
lcall
mov
sbb
iret
sbb
fbld
pop
sahf
jg
ljmp
pop
rorl
popf
jp
dec
ret
push
push
aad
gs
je
lret
push
push
jne
ljmp
or
push
mov
imul
pop
jbe
xor
sub
xchg
pop
nop/reserved
push
fstl
fsubs
push
es
lcall
daa
cmp
sbb
idivb
cwtl
outsl
jle
and
daa
cmp
lret
int
clc
push
sbb
or
dec
jbe
jmp
arpl
lcall
xor
inc
jecxz
dec
ret
push
push
sbb
xor
test
ret
inc
movsb
int
dec
xor
incl
pop
pushf
jmp
iret
mov
nop
les
push
sub
rolb
dec
lea
pop
fs
std
or
mov
adc
aam
mov
or
dec
inc
adcb
test
and
lock
sub
jle
mov
shrb
mov
push
cmpsb
mov
or
inc
sbb
in
add
or
or
enter
fisttpl
inc
pop
push
nop
idiv
jg
call
leave
je
or
mov
adc
ljmp
adc
test
mov
pop
lods
fcmovb
stos
mov
stos
mov
inc
inc
scas
sahf
or
cli
push
adc
or
cld
decl
mov
sub
jno
mull
out
imul
add
inc
fidivs
nop
push
int3
sti
sbb
xchg
cmpsb
xor
mov
push
sub
adc
cli
push
decl
ds
dec
into
add
jl
lahf
clc
xchg
int
sbb
dec
fisubl
decl
mov
or
mov
mov
in
or
mov
daa
cltd
mov
fdivrs
mov
pop
cmc
out
cld
icebp
pushf
inc
xchg
mov
adc
add
mov
or
lds
jno
jg
stos
mov
sbb
mov
inc
lcall
pop
stc
xchg
mov
dec
push
test
cmpsb
lcall
push
and
or
ljmp
adc
ret
packsswb
lcall
add
add
movsb
dec
cltd
rcl
jp
mov
stc
xor
and
dec
jl
and
add
sbb
jl
mov
xor
incl
lcall
in
lahf
loop
test
pop
push
and
shlb
mov
adc
mov
sbb
mov
arpl
outsl
cli
decl
sub
mov
xor
inc
lods
in
push
out
dec
ss
nop
ds
mov
mov
sub
xor
ret
sub
sbb
lods
adc
sbb
je
add
fcmovbe
call
add
jmp
xor
call
jns
fwait
fwait
mov
xchg
aaa
adc
stc
aam
in
aad
jno
pop
rorl
xchg
shlb
test
and
pop
mov
aas
xchg
les
decl
jne
mov
test
and
jnp
cmpsl
fldenv
xor
mov
pop
cmc
adc
incl
cltd
sub
sbb
xchg
stos
jle
ljmp
aad
decl
stos
push
clc
call
nop
inc
rolb
sbbb
push
cwtl
arpl
push
rorb
out
mov
jne
sti
ljmp
add
sub
add
adc
aam
add
dec
dec
andb
test
decl
nop
popf
adcb
fimull
repnz
add
subb
dec
daa
test
cld
fstpt
adc
mov
out
mov
mov
mov
cs
sub
movsb
loop
pop
pop
and
xor
repz
jg
jmp
adc
aam
pop
aad
pop
pop
sub
outsb
add
xchg
bound
cwtl
jbe
popfw
jecxz
int3
cmp
push
popf
divb
gs
pushl
data16
popf
repnz
int
pop
xor
fnstenv
or
insb
push
js
repz
and
pusha
push
xor
mov
inc
ret
insb
xchg
inc
int
sub
pusha
add
or
sbb
lret
test
test
movl
aad
cli
incl
pop
pop
push
xchg
mov
repnz
or
mov
lods
incl
popf
pop
lods
arpl
lds
adc
dec
jb
mov
es
mov
push
scas
mov
stos
xor
sub
sbb
mov
mov
out
xor
xor
mov
call
push
mov
xor
test
lcall
push
sbb
push
dec
jg
in
nop
lret
divb
lahf
sub
aad
daa
or
sar
and
add
sti
dec
adc
and
xchg
fists
sub
in
adcl
mov
inc
lret
or
mov
pop
xchg
test
in
roll
pop
cwtl
push
ljmp
movsb
movsb
mov
mov
cli
sub
outsl
push
data16
fiaddl
sub
jle
mov
aas
ror
push
xor
jl
outsb
aam
shll
out
push
jl
movaps
jg
mov
pop
mov
call
test
jno
xor
or
scas
pushl
test
testl
dec
lods
fcos
decl
xchg
fdivs
pushf
push
fcmovbe
sahf
test
lahf
and
cmp
rcrl
or
jmp
rcrl
lds
pop
mov
enter
mov
and
jno
ret
arpl
fcomip
inc
pop
in
adc
add
and
inc
jb
jg
add
jo
mov
or
decl
pop
mov
push
divb
aaa
or
dec
pop
ljmp
adc
sub
push
addr16
cmp
addr16
xchg
cwtd
inc
adc
push
test
mov
add
call
test
addr16
xor
jbe
push
cmp
xchg
cmp
adc
pushl
call
xchg
xchg
inc
pop
mov
push
adc
pop
pushl
cmp
nop
sub
les
xchg
xchg
adc
pop
subl
add
decl
ss
pop
js
pop
seto
icebp
pop
out
adc
sbb
pop
jmp
add
mov
insb
jmp
insb
and
adc
mov
jecxz
outsl
clc
lcall
bt
and
movsb
sbb
xor
ja
in
or
hlt
pop
and
aam
add
inc
add
jg
cli
outsl
or
inc
sbb
cli
mov
sbb
shlb
xchg
jo
bound
jle
xorb
cmp
jo
inc
jg
push
inc
sub
and
fcoms
push
and
mov
aaa
andb
fs
enter
and
or
xchg
and
call
push
enter
push
aas
lcall
call
add
sbb
inc
cmp
adc
addr16
repnz
call
cmp
xchg
cmp
adc
pop
dec
call
pop
pop
test
jle
sub
pop
cltd
push
cmp
ljmp
jge
dec
mov
inc
adc
adc
push
add
jo
rclb
mov
adcb
imul
jno
push
out
imul
pushl
sbb
pusha
sub
mov
xor
mov
sub
adc
fs
adc
xor
flds
xchg
outsb
mov
sbb
std
ljmp
pop
pop
xchg
nop
pop
inc
mov
pop
xor
pop
sbb
sbb
jg
imul
mov
aaa
xor
test
inc
push
inc
and
loopne
push
loope
sbb
or
call
addb
orb
inc
dec
xor
jbe
enter
push
add
inc
out
push
in
pop
jno
inc
jo
daa
jg
ret
ss
pop
add
mulb
sbb
js
fs
lea
stos
lcall
test
and
fs
pushf
jae
and
pop
push
and
push
and
test
and
andb
jg
ds
adcl
inc
cmp
sub
dec
adc
outsl
cmp
add
jmp
adc
inc
nop
mov
xchg
sub
cmp
fldenv
mov
mov
test
mov
xchg
push
or
inc
adc
arpl
out
int3
movsb
dec
ret
ret
adc
dec
mov
outsl
loope
iret
add
pop
sbb
and
loope
jns,pn
sbb
imul
fcomip
subb
sbb
std
les
insb
xchg
sbb
jb
cmp
mov
gs
bound
shl
dec
lret
pop
xor
adc
daa
jl
inc
inc
jmp
loope
mov
outsb
out
pop
sub
es
and
testl
adc
mov
cwtl
push
cmpsb
test
cltd
in
mov
in
dec
dec
mov
pop
jg
push
cmp
inc
and
xor
ds
movsl
jg
dec
fwait
clc
jmp
xlat
and
icebp
lea
mov
fwait
mov
sbb
jb
test
add
ljmp
js
dec
loop
push
jo
fisubrl
jne
test
test
rolb
cmp
stc
nop
mov
repnz
out
daa
lcall
stos
mov
outsl
push
rclb
sbb
test
std
das
mov
popa
push
test
rcll
adc
rcl
pushl
ds
inc
pop
lods
adc
cwtl
ja
add
mov
cwtl
jbe
pop
add
call
pop
inc
add
adc
mov
push
xchg
jo
dec
push
test
fnstenv
icebp
in
call
push
repz
popf
loope
xchg
xor
das
repnz
jecxz
and
aam
lock
movsb
icebp
call
add
outsb
flds
sbb
insl
mov
inc
cmpsl
popa
xchg
sahf
mov
adc
adc
pop
dec
dec
push
sti
movsl
lcall
dec
push
inc
hlt
xor
fwait
push
sub
push
xor
xor
push
sub
and
sbbb
jbe
add
addl
outsl
mov
int
mov
xor
adc
ljmp
sub
arpl
add
test
cli
fwait
mov
daa
pop
pushf
dec
or
ljmp
cwtl
test
jnp
adc
lock
add
xor
push
ss
aas
idivl
push
ljmp
jo
pusha
push
push
push
stos
jb
adc
xor
sahf
and
mov
adcl
andl
sub
add
add
sbb
xor
xchg
adc
push
loope
dec
and
sbb
xchg
mov
adc
dec
out
xor
dec
jno
pop
icebp
add
xchg
add
pop
data16
incl
ds
lods
fldenv
ja
jmp
add
mov
mov
rolb
ja
adc
das
cmp
mov
mov
rcl
aas
xchg
or
xor
in
cmp
mov
jp
inc
sub
cli
mov
pushl
les
push
push
out
mov
pop
mov
aam
lcall
push
jne
shll
xor
and
dec
mov
jmp
cmp
inc
lret
sub
jle
add
js
cmpsl
pop
mov
dec
mov
fidivrl
ja
call
adcb
adcb
cmp
push
or
mov
out
test
mov
push
pushl
aaa
and
imul
inc
add
test
sub
sub
out
bound
inc
aaa
xor
enter
dec
xchg
inc
pop
cmpsl
xor
and
pop
ss
cmpb
cmp
jle
mov
push
popf
xchg
sub
ljmp
sub
lahf
sbb
lcall
cmpsb
xchg
jne
push
xor
mov
add
insb
or
mov
lock
stos
push
pop
xchg
push
call
sbb
sub
xor
arpl
push
dec
mov
xchg
ret
mov
sbb
sub
xchg
call
mov
and
hlt
pop
fldenv
add
xor
fs
sub
imul
push
incl
dec
push
ret
dec
hlt
add
push
mov
xorb
xlat
rcrl
out
jg
xchg
cwtl
push
fwait
mov
pop
xor
mov
repz
push
and
cltd
imul
lcall
mov
test
sbb
cltd
mov
jmp
stos
mov
dec
inc
test
cs
mov
sbb
pushf
jmp
cmpsl
cmp
xor
or
lcall
mov
fdivs
jb
dec
pushf
imul
xor
in
lcall
pop
mov
adc
jbe
xchg
jl
test
push
sub
mov
pushl
pop
cmpsl
adc
inc
add
inc
add
and
xchg
movsl
mov
push
ljmp
mov
imul
add
test
add
jg
add
adc
loop
adc
ret
xchg
push
imul
mov
fdivrp
call
sbb
jnp
pop
ret
and
test
mov
ret
cmp
subl
out
movsb
sbb
push
dec
sub
inc
xlat
sbb
aaa
out
xor
nop
pop
outsb
and
fldt
call
and
inc
sub
jl
or
addl
mov
dec
mov
pusha
fdivrp
cwtl
in
mov
sub
ret
and
mov
jo
cli
mov
les
mov
mov
sub
int
aad
push
lcall
inc
pop
and
mov
mov
dec
roll
push
or
xchg
ljmp
add
push
pop
repz
testb
insb
push
pop
imul
sub
mov
add
xorb
dec
clc
nop
add
push
dec
popa
test
movhps
decl
mov
xor
mov
jl
cmpsl
ret
popa
adc
and
fnstsw
scas
jp
test
xchg
gs
push
icebp
adc
dec
test
xchg
push
dec
loopne
cmp
fadd
inc
lock
aam
cmp
loop
sub
lret
push
imul
sbb
lcall
xchg
lock
mov
cwtl
call
insl
push
rep
mov
mov
and
jmp
test
sbb
mov
call
pop
xor
push
jl
pop
inc
sbbb
cmpsl
xlat
fsubl
inc
mov
jg
pop
or
andl
fwait
mov
es
pushl
mov
inc
daa
mov
cmp
and
es
enter
mov
jl
jp
add
or
jno
fildl
push
aaa
push
sub
add
in
and
push
or
pop
aaa
add
incl
sub
mov
dec
fwait
push
add
popf
testb
push
sti
int3
sub
das
xchg
hlt
push
mov
jge
test
dec
pop
cmp
nop
or
test
decl
xchg
adc
or
scas
cmpsb
adc
cmpsl
add
xchg
jmp
fcomip
call
xchg
stos
ret
outsl
sub
adc
sarl
add
loopne
cmp
stos
xchg
sub
xchg
outsl
int3
push
test
lods
cmp
cltd
xchg
xchg
dec
ss
pop
mov
lods
enter
push
scas
mov
mov
scas
pop
insb
loope
insb
enter
jmp
and
loop
mov
into
cmpsb
das
mov
pop
out
dec
or
int
jnp
mov
lcall
xor
fsubrs
xchg
push
outsl
fisttpll
inc
mov
xor
jbe
mov
jle
cmp
push
fsts
inc
outsl
cli
and
cmp
gs
bound
pop
inc
push
cmpsl
sbb
stos
lea
mov
lea
jg
mov
cli
lea
xlat
pop
or
lcall
and
rolb
adc
adc
push
sbb
sahf
mov
pop
inc
int3
adc
mov
test
sahf
nop
jne
mov
fsubrs
ljmp
mov
orb
loopne
clc
mov
sbb
in
dec
in
popf
fdivrp
dec
test
cmp
jno
and
jmp
nop
push
popa
push
fwait
xor
lret
xlat
pop
mov
call
insl
popa
sub
xor
jbe
pop
inc
popf
imul
dec
andb
outsl
incl
in
aad
mov
ss
sub
cmpsb
inc
xor
mov
jecxz
and
add
jmp
mov
pusha
les
mov
jg
xlat
loopne
jecxz
scas
jbe
insb
int3
pop
lock
in
push
lock
clc
inc
mov
outsb
mov
xchg
push
sub
inc
pop
out
jo
call
inc
test
bound
shrb
push
inc
int
ficoml
mov
ret
fdivrl
das
and
ljmp
aas
cmpsb
test
push
jb
fbld
rep
sbb
cwtl
mov
cmpsb
aam
ljmp
xor
push
sbb
adc
mov
pop
sub
loopne
add
inc
addl
mov
adc
pop
das
decl
inc
sbb
enter
dec
movsb
cwtl
jb
cmp
pop
xor
shll
lret
shll
inc
nop
inc
mov
call
leave
adc
ljmp
cs
test
int3
inc
inc
push
int
xor
jns
xchg
sahf
cmp
jg
cwtl
cmp
es
call
jno
jmp
xchg
mov
stc
and
dec
clc
mov
popa
outsl
sbb
clc
lea
pop
hlt
cmp
sub
lret
lcall
ljmp
cmc
lods
icebp
sbb
je
xor
insl
mov
inc
mov
xorb
incl
inc
lret
sbb
adc
out
sahf
or
jl
pushl
jl,pn
cmpsl
push
pushf
ja
in
scas
mov
ja
cmp
mov
leave
repz
xchg
fcmovnbe
sar
mov
jnp
aad
push
out
dec
lahf
cmp
out
ja
mov
or
cmp
sti
jmp
rolb
dec
scas
and
out
pop
and
and
sbb
popl
pop
loop
or
dec
aam
les
dec
push
xor
adc
out
cli
pushl
push
adc
icebp
sbb
or
push
push
jmp
andl
andl
adc
enter
repnz
and
call
sar
in
incl
scas
mov
lret
or
dec
pop
ret
sub
inc
xor
je
dec
and
xchg
xchg
push
or
pushl
cmp
andl
sahf
add
lcall
repnz
movsl
xchg
xor
inc
push
sbb
jmp
ret
mov
xchg
mov
fcmovu
cmc
pushl
ret
hlt
dec
aam
push
jo
imul
test
movsb
mov
push
dec
xchg
mov
ficoml
stos
push
movsl
push
adc
sub
ljmp
cmp
rolb
sub
scas
mov
mov
mov
mov
mov
dec
int3
or
sbb
xor
push
cwtl
mov
mov
arpl
in
mov
sub
xor
fsin
movsl
in
ss
lods
lret
sub
das
mov
arpl
mov
cmp
stos
jecxz
ljmp
decl
fdivp
or
test
cmp
out
cmp
scas
mov
das
jp
ds
jmp
sbb
cld
fcompl
dec
push
ret
push
or
out
xchg
xchg
into
inc
add
cmp
adc
xchg
lds
mov
rol
and
and
roll
enter
enter
mov
cmp
in
xchg
jb
xor
lcall
insb
xchg
dec
sub
mov
xor
cmc
dec
adc
stos
mov
add
das
xor
das
xor
adc
incl
add
jne
push
xchg
xor
xchg
push
cltd
xchg
fidivs
xlat
aad
popf
push
and
decl
gs
aas
jb
sarb
loop
and
jbe
pusha
sbb
jbe
pusha
fwait
jg
and
stos
mov
lods
mov
cmpsb
sbb
ret
mov
push
lret
das
mov
add
fsubrl
lock
xor
mov
inc
xor
cmp
xchg
sbb
incl
clc
in
xchg
mov
dec
popf
cli
addr16
lcall
push
or
cmp
cmp
shll
mov
lock
orps
call
mov
adc
into
mov
jno
arpl
add
leave
push
divb
xchg
cmp
decl
cmpsl
adc
out
hlt
int3
cmp
jae
lahf
dec
add
shlb
mov
sbb
call
mov
int
imul
add
adc
adc
jo
and
subl
pop
mov
dec
ficoml
sbb
dec
sbb
adcb
fsubl
fnsave
pushl
xchg
xchg
mov
test
pop
leave
adc
sub
inc
jp
fnclex
movb
or
fcmove
sbb
repnz
and
mov
and
je
pop
ret
loop
adc
js
leave
and
inc
inc
fcomip
in
push
into
fisubl
test
test
sub
mov
shlb
mov
jmp
mov
mov
das
fcmovnbe
out
mov
dec
cwtl
add
jmp
or
test
sub
jae
daa
pop
mov
pop
testl
std
ljmp
cltd
sbb
incl
es
jle
mov
fs
lcall
lahf
mov
and
push
sbb
add
ss
or
adc
mov
icebp
jno
adc
int
sub
gs
mov
jg
mov
dec
lret
enter
mov
into
sbb
pop
cwtl
ljmp
cld
add
adc
ljmp
data16
mov
bound
dec
mov
adcl
call
mov
mov
mov
pop
jmp
sub
fwait
fs
cmp
inc
push
and
mov
push
rcrl
jno
rolb
out
adc
scas
mov
mov
xor
mov
add
mov
mov
sub
pushl
adc
xor
or
test
mov
push
jmp
mov
pop
cmp
and
sbbb
mov
add
cmp
std
ja
mov
push
xor
adc
inc
mov
sub
cmp
dec
pop
ret
cld
adc
pop
das
sub
mov
inc
xchg
jl
shlb
fsub
cmp
loopne
cmp
mov
scas
outsl
pushf
jmp
xor
into
rcrl
and
shlb
pop
add
shl
sub
dec
dec
add
sbb
pushl
sbb
add
dec
lcall
xor
mov
loopne
jl
mov
int
push
sti
ret
xchg
incl
mov
filds
add
lock
cmp
inc
adc
cmpsl
inc
inc
xor
adc
mov
rcll
adc
adc
sub
or
jb
xchg
rcrb
push
ljmp
shl
push
mov
inc
fisubrs
mov
lea
mov
inc
lcall
push
push
jp
xlat
mov
push
into
xchg
pop
jp
stc
in
mov
sti
add
decl
cmp
pop
in
push
jb
cmpsl
sbb
inc
add
loope
jmp
xlat
inc
inc
pop
add
dec
push
test
aas
nop
shll
cltd
or
and
push
xchg
hlt
push
ja
test
add
sbb
push
push
mov
mov
lds
rclb
inc
gs
out
scas
pop
fidivl
jne
xchg
push
mov
jno
sbb
pusha
mov
cld
jmp
xor
out
and
mov
dec
js
jmp
mov
jl
sbb
push
loope
lret
rcrl
mulb
add
dec
cld
sti
loopne
jb
rcr
add
popa
push
push
pushf
shll
xor
and
dec
mov
push
pop
dec
lods
push
dec
adc
xchg
aam
loope
mov
ljmp
orb
nop
call
pop
jecxz
arpl
idivb
int
pop
push
jg
decl
xor
repnz
cli
sub
or
mov
xchg
mov
fstpl
inc
or
jbe
test
add
mov
cmp
jmp
adc
call
icebp
jae
ss
mov
sbb
in
adc
add
shll
inc
pop
fcmovbe
repnz
rcrb
pop
ljmp
imul
xor
ljmp
jbe
es
push
mov
das
das
lock
fbld
cmpsb
int3
mov
lcall
lret
cli
mov
cltd
neg
xlat
flds
loopne
or
inc
or
add
mov
incl
sbb
push
push
dec
jns
pop
or
sub
out
ss
inc
cmp
and
sub
pushl
ljmp
cmp
pop
stos
sbb
out
js
or
pushl
mov
aaa
or
xchg
std
ds
push
sub
hlt
add
shrl
decl
push
std
xchg
fs
int3
xor
cmp
dec
adc
mov
cmp
add
pop
jo
add
lock
movsb
jecxz
movsl
jmp
sbb
and
add
sub
mov
xor
call
sub
repnz
or
or
xor
push
inc
xor
fstpt
jnp
push
sub
xor
incl
fcoms
ss
sub
pop
sbb
and
push
daa
je
dec
mov
mov
ss
loop
mov
xchg
rorl
rorl
orl
push
sbb
call
rolb
fbld
mov
xor
xor
push
pop
dec
sub
orb
mov
sbb
xor
arpl
repz
or
jge
and
mov
adc
adc
nop
sahf
or
sar
lahf
add
fwait
adc
mov
sbb
and
sub
mov
xchg
mov
dec
cmp
jbe
jl
popf
shll
dec
push
dec
les
mov
aam
jmp
cwtl
les
mov
mov
aaa
and
and
test
inc
pushl
push
loop
or
add
inc
icebp
xor
fcos
neg
incl
sbb
aam
mov
imul
add
sub
mov
fdivp
call
loope
daa
loop
pop
stc
movsl
mov
mov
pop
mov
rclb
inc
mov
insb
cld
mov
push
jl
movsb
dec
inc
jg
push
mov
or
stc
sahf
daa
aam
je
xor
add
ss
cld
cmp
mov
xchg
pop
and
xchg
stc
cmp
clc
bound
jmp
ljmp
scas
rcrb
inc
fcoml
xchg
paddd
je
mov
push
or
mov
fnstsw
in
sub
popa
xchg
daa
or
outsb
inc
add
xchg
push
lahf
das
clc
jg
cmp
inc
xor
ds
or
popf
push
fstpt
pushl
aas
call
mov
repz
lret
inc
pop
je
xchg
ret
push
scas
orb
inc
shlb
mov
mov
inc
mov
imul
pushl
xor
push
and
mov
inc
mov
subl
sbb
mov
movsb
rorb
test
pushf
adc
or
ljmp
jb
mov
arpl
stos
shll
call
nop
and
mov
add
pop
xor
mov
ja
or
inc
lods
mov
repz
popa
ret
cmpsb
ja
mov
decl
mov
mov
aam
and
scas
add
scas
cld
sbb
ljmp
mov
jmp
xchg
adc
mov
fildl
push
mov
repnz
cltd
in
cmp
jg
fildll
sbb
sahf
loopne
out
mov
dec
pushf
les
lret
cmp
sar
mov
mov
lret
test
in
addl
sub
dec
mov
sub
sub
mov
dec
add
and
adc
or
int3
sub
ljmp
push
inc
insb
sub
cmp
pop
les
add
mov
or
loop
mov
dec
test
sub
dec
push
addl
xor
mov
jp
decl
mov
hlt
xor
xor
inc
imul
adcb
inc
mov
sub
push
hlt
sarb
sbb
xor
xchg
mov
push
icebp
call
mov
cmpl
scas
in
mov
xor
and
xchg
mov
inc
mov
mov
mov
lcall
bnd
push
ret
imul
lret
mov
fdivr
fbstp
add
popf
mov
cwtl
xor
mov
sub
adc
ja
xor
mov
cmc
push
mov
mov
fwait
rcrb
fcmove
push
sbb
mov
push
dec
pop
dec
and
push
and
aam
push
ljmp
pop
push
mov
and
sbb
jbe,pt
test
jnp
add
decl
test
dec
movsb
lret
jl
lret
adc
int3
shlb
sub
inc
aad
seto
xchg
push
dec
inc
xor
dec
roll
lcall
inc
cwtl
mov
sbb
popf
nop
fisttpll
and
nop
inc
mov
aam
sbb
decl
lock
lea
js
mov
sti
push
movsl
andl
mov
mov
rorl
dec
jg
inc
outsb
sbb
jb
push
idivl
scas
je
mov
rol
sub
ret
ljmp
js
xor
or
pop
inc
roll
popf
in
ljmp
stos
push
mov
lret
cmp
cmp
call
rcll
cli
push
cmp
mov
cwtl
inc
shrb
lret
mov
jbe
fldl
mov
lds
dec
xchg
inc
das
out
xchg
or
ljmp
add
inc
mov
lahf
sub
faddl
ficoms
xchg
inc
fwait
mov
mov
dec
xor
xor
mov
ds
adc
xchg
mov
int
sbbl
filds
dec
sub
sbb
jge
test
incl
push
adcb
lret
mov
or
xchg
pop
cmp
add
inc
mov
lea
cli
nop
dec
add
shr
cli
lcall
mov
fimull
push
push
sarl
or
mov
sarb
aad
cmp
xchg
jbe
pop
in
xchg
aad
pop
mov
jo
call
mov
mov
sbb
xchg
push
scas
iret
repz
add
lea
into
fcomip
jg
add
fildl
inc
dec
loopne
inc
hlt
xor
loopne
movsb
mov
ljmp
leave
mov
hlt
decl
add
inc
add
sub
aam
shr
inc
push
ljmp
pop
xor
mov
sbb
add
dec
jecxz
bound
sub
test
das
push
lea
pop
pop
push
xor
mov
and
mov
mov
data16
mov
mov
out
xchg
cmp
andl
adc
ret
inc
dec
pop
in
test
movsl
jnp
fildl
push
add
loope
sbb
inc
xchg
adcl
adc
xchg
enter
pushl
pop
into
mov
jno
aas
mov
push
mov
sub
push
in
cmpsb
pushl
or
cwtl
fs
iret
rcrb
xchg
mov
pusha
fwait
push
mov
ja
cmpsl
jns
push
cld
add
mov
push
xor
cld
or
ret
loope
lea
mov
cli
and
movb
jne
add
loop
incl
push
test
and
cltd
mov
mov
jae
ss
sarb
lcall
shll
mov
xor
xchg
mov
push
dec
sub
cmp
dec
pushl
sbb
xchg
and
sub
aad
mov
push
pusha
std
incl
or
mov
mov
mov
xchg
insb
mov
xchg
enter
pop
pop
into
jb
cmp
cmpsb
jmp
sub
bound
adc
loop
adc
fisttpl
lods
inc
jge
je
mov
and
lock
arpl
xor
push
call
add
dec
xchg
cwtl
add
pmaxsw
xchg
shrl
cmp
ljmp
inc
pop
xor
insb
cli
sahf
and
or
fucomip
push
lods
loopne
sbb
leave
mov
sub
lock
enter
jge
mov
rorb
sbbb
cltd
popa
stc
ficoml
sahf
scas
insb
cmp
lcall
cmp
mov
int3
xadd
call
rolb
push
das
add
lcall
pop
loopne,pt
cmp
mov
push
jge
adc
mov
call
sub
jecxz
loop,pn
lcall
sbb
xor
cmp
sub
jmp
push
mov
sub
lcall
cmp
or
xchg
mov
push
lock
and
fbstp
sub
addb
sub
in
decl
mov
pop
push
xchg
rclb
dec
or
int
mov
incl
movsb
movsl
dec
sbb
add
fbstp
sub
mov
adc
add
inc
jg
sbbb
or
mov
test
cmp
shrb
daa
adc
mov
les
xor
mov
xor
cmp
std
repnz
mov
dec
xchg
scas
in
xchg
ret
inc
cwtl
out
cmp
mov
cmpl
jg
sbb
stc
pop
fistpll
loope
cwtl
ljmp
loop
xchg
xor
dec
lahf
jecxz
or
lods
dec
adc
sbb
fs
cs
push
lea
inc
call
xchg
gs
adc
xchg
dec
testb
incl
js
add
mov
jbe
adc
or
testb
and
fwait
mov
imul
data16
popa
and
pushl
mov
and
sub
lahf
adc
xchg
xor
fiadds
lcall
mov
adc
and
or
sub
jg
and
pop
lock
mov
dec
push
and
imul
jbe
add
sbb
add
neg
jb
push
dec
add
jmp
pop
dec
rcrl
fisttps
or
xchg
js
lock
es
cmp
js
pop
scas
imul
jmp
out
jne
mov
and
popw
imul
decl
mov
cmp
addb
jg
aaa
loopne
mov
or
repz
inc
xchg
pop
enter
cs
pop
insl
pop
repnz
mov
xor
cmp
out
shrb
jae
or
xor
fisubs
insb
add
pushl
shlb
les
addr16
lods
mov
pop
add
xchg
outsb
test
mov
movsb
cmc
push
mov
mov
scas
xor
adc
pop
pop
fbstp
in
es
popa
xchg
outsl
cmpsl
jmp
lea
icebp
iret
xchg
out
stos
inc
mov
out
pop
sub
scas
je
es
lock
xor
stos
mov
fwait
aam
imul
inc
lcall
sub
pop
js
adc
imul
cltd
lcall
add
imul
stos
adc
cmp
ljmp
pusha
pop
fdivrs
int
cwtl
jns
pop
add
push
jmp
push
lock
jmp
popl
and
andb
cmp
xor
orl
aad
aam
xor
or
sub
shll
push
mov
adc
je
in
nop
and
ret
and
incl
inc
push
pusha
adc
add
xchg
rcrl
push
movsl
xor
je
int3
aaa
cld
incl
add
repnz
dec
dec
mov
xor
pop
or
popa
iret
inc
jnp
shl
call
repz
lcall
sub
inc
cwtl
jb
push
push
mov
fdivr
jg
jp
lea
push
in
fstps
jp
lods
shll
lods
fnstcw
jmp
jge
imull
push
mov
test
xor
mov
lock
mov
fcompl
mov
jmp
lds
jecxz
call
xor
cmp
pop
cmp
mov
jg
mov
jae
push
int
jo
loopne
xor
in
lret
xchg
ljmp
sbb
repz
cmp
mov
mov
ret
sub
jl
pushl
pop
sub
xchg
mov
pop
out
fidivrs
cld
les
pop
cmc
jg
jle
incl
mov
test
push
jp
mov
add
cmpl
ljmp
loope
or
mov
sbb
das
shlb
xchg
je
inc
push
and
sbb
cmc
out
clc
fisttpll
fisttps
push
mov
in
jae
ljmp
lods
and
push
inc
mov
xchg
push
push
or
lcall
cs
mov
mov
rcrb
or
popf
movsl
and
incl
inc
add
or
cmp
sbb
sub
ljmp
jle
and
adc
inc
or
mov
pop
or
lods
mov
push
call
aam
inc
sbb
test
xor
xor
inc
mov
lcall
incl
add
movb
jno
prefetchnta
add
out
and
shll
aad
mov
pushf
arpl
add
adc
push
loopne
adc
scas
pop
adc
lcall
test
cmc
arpl
jmp
mov
or
inc
and
sbb
movsl
xchg
pop
mov
insb
stos
add
inc
or
outsl
cltd
xchg
popa
sub
les
lret
xchg
mov
xchg
sbb
pop
and
jb
test
ja
and
sbb
ret
sbb
mov
xor
out
jae
fcos
ljmp
mov
add
mov
lods
hlt
cmpsb
push
mov
push
iret
jl
insl
and
or
mov
mov
lcall
decb
sbb
test
loope
jecxz
aaa
ficoml
add
add
mov
fiadds
cmp
int
mov
cwtl
mov
xorl
pop
cmp
and
movsl
add
shlb
ljmp
add
adc
push
hlt
or
lcall
test
icebp
incl
and
xchg
add
push
andl
push
xchg
mov
jns
cmp
fisttps
mov
dec
adc
inc
inc
or
sub
sbb
adc
push
mov
lcall
add
int
fisttpll
fidivs
popa
es
inc
adc
movd
mov
scas
inc
scas
clc
sub
xchg
push
push
test
jmp
add
pop
pop
mov
xchg
sbb
push
pop
sbb
jb
jg
or
or
mov
stos
xor
rclb
xor
das
mov
xor
push
inc
lds
pusha
add
int3
add
xor
shrb
test
int3
imul
and
and
jmp
add
sbb
loopne
enter
jle
sarb
lods
lahf
jae
xchg
mov
and
sbb
add
pop
fsubl
lcall
mov
jno
pop
push
into
jl
arpl
cmp
pop
jns
arpl
fxch
outsb
dec
je
ficompl
lds
xlat
inc
pushl
mov
inc
push
fsubrl
or
out
clc
lcall
imul
dec
inc
mov
outsb
xor
test
mov
and
dec
dec
inc
sbb
push
sarb
and
adc
adc
nop
daa
ret
dec
sbb
jmp
test
test
inc
rol
outsb
mov
inc
or
mov
sar
dec
clc
mov
rclb
sbb
das
rolb
xchg
clc
jb
sub
or
jbe
dec
test
les
lock
pushf
adc
shrl
and
mov
insl
and
or
dec
mov
call
sub
mov
test
sbb
lock
lods
inc
dec
jmp
pop
lret
and
popa
push
mov
outsb
add
pop
pop
decl
xchg
mov
lcall
sub
mov
push
stos
in
xor
std
jg
rolb
test
xchg
sbb
subb
fwait
add
fstpl
int3
cmp
or
sbb
push
xchg
xchg
dec
stos
sub
sub
mov
or
pop
xor
hlt
sub
out
test
ljmp
xchg
mov
and
jmp
sbb
xlat
out
lock
cmp
push
decl
nop
ret
test
mov
rorb
or
incl
ret
inc
xchg
mov
mov
movsb
test
adc
repz
or
call
xchg
ljmp
je
in
and
sbb
das
clc
mov
and
mov
lahf
aaa
pop
sbbl
sbb
sub
adcb
pop
pop
xorb
push
inc
ljmp
jo
or
sub
or
scas
pop
cmpsl
ja
mov
out
ret
out
dec
push
sbb
push
pop
push
pusha
add
dec
call
xacquire
push
or
lea
or
test
loopne
or
fisubs
or
mull
addr16
js
mov
ljmp
cmc
inc
pop
sbb
cld
mov
push
or
mov
push
rcrb
push
fcomip
pushl
test
out
sub
data16
scas
mov
jmp
and
push
xchg
fisttps
aam
ror
inc
xchg
popa
adc
adcl
incl
rcrl
mov
adc
push
addps
push
xor
call
int
jne
cmc
pushl
mov
mov
jo
xchg
pop
xor
in
mov
in
ja
mov
cmp
ljmp
push
mov
pop
in
jne
lods
gs
inc
mov
or
call
inc
mov
enter
insb
out
mov
sbbb
sbb
movsb
aas
ljmp
mov
pop
rolb
mov
scas
jle
cltd
dec
hlt
adc
imul
sub
and
cltd
adc
test
cmp
inc
add
pushf
fsubrl
mov
mov
xor
ljmp
cld
jne
push
jmp
push
adc
pop
aaa
in
subb
subb
loop
jg
xchg
cmpsb
movl
int3
aam
lods
mov
mov
dec
sub
pop
mov
clc
popa
xchg
sub
add
xor
enter
lcall
add
in
add
call
add
clc
clc
orl
adc
stos
lcall
test
mov
nop
addl
movsb
push
dec
or
xor
sbb
int
xchg
das
xor
mov
sub
lret
ljmp
jge
pop
pop
dec
push
jmp
cmpsb
leave
xor
test
cltd
cmp
pop
xchg
push
pushl
pushl
and
iret
mov
mov
lods
mov
dec
orl
mov
xlat
mov
push
out
dec
pop
jmp
jo
mov
xchg
mulb
pop
hlt
inc
push
dec
mov
bound
jp
fisubl
push
pop
nop
push
cli
in
jmp
mov
pop
sub
and
add
xor
pop
aas
mov
ljmp
scas
scas
sub
cmp
inc
sub
repz
push
xorb
outsb
lcall
add
and
mov
sbb
ljmp
ds
add
cs
subl
into
push
loop
test
push
scas
dec
fldl
lea
push
out
rcll
or
or
cmpb
iret
mov
cld
call
adc
mov
jge
or
dec
jno
push
jns
push
inc
popf
xorl
push
and
mov
test
lret
fcompl
jo
lret
ljmp
push
dec
test
rol
add
ffree
iret
popf
lds
cwtl
mov
jmp
sarl
jge
arpl
adc
popa
clc
sbb
ffree
add
je
lcall
sbb
mov
xchg
mov
mov
mov
xchg
leave
xchg
pop
ss
call
loopne
popa
push
je
cmc
dec
cmpsb
sub
paddw
mulps
xchg
push
lcall
xor
ror
cltd
jne
cltd
push
inc
pop
sub
insb
dec
jnp
das
cli
call
shll
lds
mov
imul
test
enter
lock
lea
fcmovbe
xor
and
out
mov
jmp
roll
xor
sbbb
mov
pop
cmc
sbb
dec
push
stos
es
cmc
in
xor
pop
jbe
xlat
cmc
jno
ljmp
fsts
adc
add
adcl
jle
mov
sub
call
lock
decl
outsb
cli
adc
imul
push
sbbl
pop
jl
add
ret
sbb
push
cwtl
call
mov
inc
pop
cmp
les
mov
push
push
pop
lods
ret
cmp
stc
cmp
movb
sub
scas
loopne
or
push
cld
mov
push
add
and
clc
push
dec
xor
call
decl
popa
cmp
inc
pop
xchg
pop
add
decl
or
aam
push
pop
popa
adc
sbb
inc
sbb
nop
decl
movsl
and
push
jae
or
or
or
jg
imul
cld
xor
xchg
popa
sbb
push
pop
pop
xchg
les
adc
pop
fs
push
adc
push
dec
inc
fcompl
pop
push
dec
decl
fstps
ffree
push
pop
pop
data16
inc
popf
sub
push
sbb
decl
test
push
fidivrl
sub
inc
in
mov
push
fcomi
mov
out
mov
and
or
xlat
jl
pushl
xchg
lcall
xor
inc
stos
icebp
pop
lods
cmp
jo
sahf
cmpsl
adc
stos
test
fisubrl
lcall
xor
xchg
std
roll
push
pop
mov
pop
ss
lcall
pop
test
lock
xor
jge
add
rcrl
arpl
jecxz
pop
or
decl
cmp
sarl
addl
fistl
or
add
and
push
inc
fs
push
or
pop
mov
add
rcll
mov
jnp
inc
inc
or
incl
cmp
push
pop
add
mov
inc
mov
mov
dec
cmp
add
sbb
aaa
mov
dec
mov
push
std
incl
loope
push
push
push
scas
push
add
nop
push
inc
call
lret
push
hlt
pusha
mov
loope
mov
add
adc
mov
rolb
pop
popa
adc
adc
xchg
and
ljmp
jl
or
outsl
cmc
push
mov
sbb
sbb
fstps
cli
dec
dec
cmp
jo
popf
lcall
movsb
mov
push
stc
gs
mov
lcall
dec
bound
cmpsb
ljmp
pop
dec
cmp
fnstsw
loop
loope
loopne
dec
mov
fidivrl
es
incl
xchg
fs
inc
xchg
jge
movsb
imul
pop
loop
pop
daa
hlt
or
repz
pop
push
sub
pop
push
xor
arpl
and
outsl
mov
sbb
stos
imul
push
jb
and
ljmp
mov
out
sahf
scas
or
and
mov
ljmp
push
add
lds
sbb
push
xlat
inc
pop
sub
ljmp
hlt
lea
movsb
push
jnp
out
je
xor
adc
fdivp
adcb
sar
mov
mov
cmp
xchg
dec
or
les
sbb
divl
dec
mov
inc
rcrl
dec
mov
pushf
lock
add
sbb
and
add
imul
lcall
fs
inc
sahf
inc
mov
mov
cmc
out
push
jp
sub
les
mov
mov
incl
lds
popa
push
rolb
cmp
test
mov
push
in
outsb
and
rorb
fwait
dec
push
cltd
lds
jne
push
pop
adc
pop
std
call
sarb
xchg
fldt
ljmp
cli
int3
mov
cmp
dec
dec
jns
inc
pop
mov
adc
lcall
stos
in
cmp
jge
add
and
imul
jbe
jg
ljmp
mov
movsb
push
imul
insl
loop
call
incl
and
jo
lcall
jno
adc
cmpsb
mov
xchg
cmc
push
decl
sub
push
cmp
mov
jecxz
popf
int
sub
jns
std
or
rcrb
sbb
sbb
mov
adcl
xchg
pop
jno
sub
pop
out
nop
ljmp
fstpt
clc
orb
rcrb
and
inc
add
mov
add
dec
inc
les
mov
in
test
cli
incl
adc
lock
jge
inc
andb
js
mov
incl
ret
pop
inc
ret
inc
lods
jg
inc
push
je
dec
xchg
sbb
sub
dec
fcomp
add
loop
or
in
sbb
inc
ljmp
fcoml
lods
into
cmp
jge
mov
in
incl
repnz
enter
aam
push
dec
dec
and
es
fldenv
mov
decl
jge
adc
shll
push
test
cmp
mov
or
imul
ljmp
cmc
mov
or
mov
sbb
pushf
add
mov
stos
repnz
sbb
cmp
faddl
out
and
gs
lcall
loopne
imul
lods
and
jg
push
jne
arpl
adc
mov
push
mov
sbb
cs
fcmovu
insl
push
int
cmp
insl
cmp
stos
fs
in
adc
xchg
sub
inc
mov
dec
repnz
mov
in
lea
add
test
clc
ljmp
lea
out
sarl
subl
les
loopne
add
ljmp
mov
push
in
add
cli
enter
xchg
subb
dec
pop
adc
add
jg
call
call
jno
addb
push
pop
shrb
out
roll
lock
xchg
ret
inc
clc
clc
push
int
add
addb
aam
dec
sbb
adc
jg
call
hlt
or
lds
or
rorb
inc
in
into
icebp
pushf
adc
sbb
pop
dec
test
mov
nop
sarl
or
ja
decl
cwtl
mov
adc
pop
dec
ret
sarb
imul
ds
rolb
pop
adc
out
push
pop
mov
jns
ljmp
mov
xchg
int
fnsave
and
pushf
leave
pop
push
loope
inc
jo
fsubr
decl
outsl
dec
pop
pop
dec
fidivs
sbbb
lcall
add
jmp
test
out
and
out
daa
scas
mov
gs
imul
push
incl
daa
dec
sub
sbb
fsts
cmp
test
addr16
dec
out
adc
and
lcall
out
or
mov
scas
cmpsb
clc
frstor
dec
cmpsl
cmp
jp
ficompl
mov
ret
dec
jbe
pop
ja
into
add
outsb
xor
popf
incl
insb
pop
loope
sub
out
mov
lahf
mov
test
cmc
inc
add
pushl
mov
int3
inc
push
cmp
jae
xor
inc
in
ficompl
jmp
in
adcb
or
shl
mov
sbb
mov
rorl
cmp
faddl
cmp
das
cli
incl
aaa
cwtl
sbb
aam
rorl
femms
ljmp
insl
cli
or
sub
pushf
decl
test
xchg
push
jmp
icebp
jo
cmpsl
test
je
into
dec
in
hlt
xchg
push
pop
mov
xchg
ljmp
rcrl
dec
aam
jmp
fdivr
mov
addr16
jg
mov
fidivl
push
das
fstps
sub
in
and
sbb
popa
sbb
mov
jmp
mov
cmpsb
mov
pop
jg
mov
inc
pop
jnp
pop
sbbl
jno
and
push
scas
xchg
arpl
sti
mov
jle
push
xor
mov
jmp
jne
xchg
lcall
ljmp
scas
ss
push
loope
out
or
pop
jmp
adc
popf
push
imul
jbe
pop
pop
pop
cld
jl
insl
xchg
xor
jns
inc
mov
daa
xor
push
jns
aaa
cmp
js
push
jp
xchg
xor
out
inc
sbb
mov
jmp
adc
sbbl
orl
sbbb
dec
std
fildll
adc
mull
or
movsl
insb
call
pop
mov
mov
adc
dec
stc
push
inc
push
inc
movsb
cmp
add
dec
out
xchg
or
sar
inc
adc
ret
add
in
shll
fistps
adc
xchg
and
pop
imul
jle
push
mov
rolb
xchg
aam
xor
movsl
dec
in
adc
mov
sti
pop
xchg
pop
xor
mov
mov
movsl
mov
dec
mov
cmp
adc
xchg
xlat
loope
sbb
dec
gs
ja
sbb
shll
sbb
xor
pop
or
bnd
cmpsb
jg
call
add
mov
imul
ljmp
lahf
pushf
adc
jne
in
pop
fidivl
arpl
sarl
sub
jb
ljmp
xchg
inc
lods
stc
sahf
scas
sub
mov
cmpsl
outsb
mov
movsl
push
sub
xchg
jno
pop
out
push
stos
subb
insl
add
lahf
aad
xchg
hlt
dec
jbe
xchg
or
mov
pushl
out
pop
stc
scas
pop
xchg
mov
push
xlat
or
or
clc
dec
rcrl
pop
jl
jg
cmpl
mov
dec
push
outsb
mov
pop
add
sbb
jbe
and
inc
or
incl
sub
mov
cmpb
add
dec
cld
ljmp
dec
adc
aaa
add
sub
mov
fcomip
inc
sub
scas
int3
push
in
add
int
les
adc
incl
inc
scas
pop
inc
in
into
rcrb
cli
decl
adc
adc
add
aam
mov
ret
clc
ljmp
repnz
push
xchg
mov
pop
mov
xchg
lcall
lds
out
mov
ret
add
inc
clc
mov
cwtl
cs
inc
dec
xchg
out
pushf
cmp
add
fcmove
sbb
mov
push
jg
aam
into
lcall
gs
cmpsl
pop
xchg
push
add
mov
shll
pushl
sub
sub
sbbb
push
inc
cmpl
addl
mov
rol
mov
call
shrb
adc
bound
ljmp
mov
jb
into
dec
popf
jb
lods
and
gs
inc
pop
mul
int
mov
cmp
pushl
mov
mov
cmpl
out
in
sarl
jecxz
pop
sub
lock
pushf
adc
sahf
clc
mov
mov
mov
ret
cwtl
xor
add
dec
mov
mov
xlat
jnp,pt
aam
mov
jecxz
push
rolb
pop
loop
pop
mov
pop
push
call
movsb
test
jo
or
mov
syscall
pop
mov
dec
mov
je
call
call
bound
incl
nop
lahf
and
inc
or
add
popa
add
call
mov
dec
adc
ret
or
push
dec
dec
or
xchg
pause
mov
lods
or
cmpl
pop
inc
push
sub
push
loope
mov
mov
scas
and
insb
into
sbb
dec
dec
call
mov
mov
neg
sub
and
xchg
pop
ds
mov
xchg
sahf
dec
xor
aaa
fs
pop
cmp
incl
loopne
and
and
push
mov
xor
hlt
call
and
sbb
mov
sbb
add
test
fisttps
inc
jo
mov
sub
jb
movsl
incl
adcb
ljmp
mov
xchg
dec
push
jmp
enter
sbb
pop
call
and
movsb
inc
dec
xor
mov
lods
cmp
sub
std
mov
pushl
mov
sbb
pusha
adc
or
sahf
lods
mov
pop
jmp
lods
and
loope
mov
ljmp
in
inc
xor
mov
mov
dec
xor
in
pusha
push
cmp
push
call
sub
sub
fwait
sarl
xor
add
stos
and
pop
fsubl
lret
scas
or
push
jg
outsb
xor
sbbb
data16
sahf
adc
lcall
in
sti
out
jmp
mov
jmp
push
iret
push
or
imul
not
or
mov
loop
or
idiv
lcall
mov
jo
add
mov
dec
cmp
push
shrl
cmp
jmp
into
xor
adc
ss
fcoms
pop
or
or
dec
bound
or
or
pushl
loop
sub
das
push
dec
mov
fldt
bnd
ficoms
mov
ret
or
fadds
jmp
add
ds
or
mov
adc
cmp
scas
sub
cmp
dec
loope
and
rolb
aas
mov
pushf
push
mov
aam
popa
aad
adcl
sbb
incl
pop
inc
cli
cmpsl
adc
jmp
and
mov
loop
mov
push
mov
call
pop
jo
and
jns
mov
sbb
in
bound
dec
cwtl
xchg
cwtl
pop
test
pop
dec
mov
lcall
je
and
mov
pop
jp
and
test
adc
movsl
movsb
dec
sub
adc
loope
lock
jg
mov
jo,pn
das
mov
shll
mov
or
jmp
sbbl
es
sar
inc
sbb
push
dec
fisubrl
mov
xor
adc
pushl
out
dec
mov
pop
jp
xor
fmul
mov
pop
mov
arpl
je
jae
icebp
incl
xchg
xchg
mov
bound
fs
jnp
push
jmp
adc
xor
rcr
jp
ss
cld
fadds
jp
sbb
push
add
cld
pop
outsb
repz
str
mov
jg
adc
adcl
rorb
dec
or
jg
movsb
push
int3
testl
add
testb
fsubrl
mov
decl
inc
xchg
mov
add
pop
or
or
cmpsb
mov
sub
leave
test
shlb
pop
ljmp
dec
pop
orl
mov
popa
clc
sbbl
xchg
mov
jnp
add
mov
ss
loope
arpl
decb
rolb
and
ja
data16
loopne
adc
cld
ljmp
jbe
xchg
movsb
mov
push
cmp
aad
cmp
clc
decl
mov
jp
dec
push
mov
cltd
imul
incl
mov
mov
pop
cmp
mov
inc
adc
jmp
popa
fisubs
scas
scas
xor
push
add
pop
pop
jns
push
nop
bound
mov
sub
sub
mov
adc
scas
inc
push
xchg
les
and
pusha
cmp
loop
scas
rclb
loopne
pop
enter
push
xor
xor
jo
mov
loopne
and
sub
arpl
pop
fcos
mov
or
adc
lret
mov
loope
subb
popa
rol
aam
push
jmp
push
test
push
sbb
add
cld
lcall
xchg
fisubrl
mov
sbb
sbb
jg
mov
movsb
adc
mov
stos
aaa
sub
enter
and
jmp
mov
push
movb
mov
or
scas
add
mov
lock
call
loope
shl
sbb
add
add
repnz
dec
enter
sub
xchg
xlat
int3
aaa
dec
inc
adc
jmp
dec
push
fwait
rorb
clflush
inc
or
ja
sar
add
js
adc
cmp
or
insb
cmp
andb
jnp
ljmp
xor
push
sbb
clc
mov
pop
test
push
stos
push
mov
aad
or
adc
call
inc
push
inc
adc
and
pop
xchg
mov
jb
xor
mov
cmp
nop
and
and
jmp
mov
mov
xor
or
in
cmpsb
js
xorb
xlat
push
jnp
scas
sbb
lret
jmp
test
push
cmp
mov
mov
fwait
pop
xlat
mov
mov
in
pop
into
call
std
ljmp
mov
in
int
xor
push
daa
dec
prefetchwt1
popa
lea
sbb
cmp
loop
lcall
andb
in
cmp
ljmp
add
addr16
mov
stos
data16
call
mov
fdivrl
push
fisubrl
sub
dec
jb
inc
cld
call
mov
pushf
shll
xlat
xchg
dec
js
andb
push
ljmp
pop
mov
shrb
pop
mov
jp
fists
movsb
sahf
and
clc
ja
js
xor
fwait
test
add
cwtl
mov
push
inc
add
addb
pop
add
xchg
adc
inc
movsb
add
scas
or
dec
pushf
aas
hlt
in
ficoml
ljmp
mov
ss
dec
push
xor
cmp
hlt
jbe
fmull
outsb
loopne
mov
std
or
loop
mov
sub
or
dec
sub
fsubrl
dec
and
rclb
int
jle
mov
aas
push
cltd
dec
and
aad
incl
jb
out
pop
or
add
rclb
mov
stos
js
enter
push
outsb
movsl
lock
push
in
mov
loop
jg
ljmp
pop
xor
xchg
mov
cmpsb
orl
cld
sub
mov
xor
sub
out
das
xchg
iret
jecxz
scas
cmp
aam
pop
repz
mov
jmp
pop
in
data16
imul
idiv
incl
fsts
sbb
mov
arpl
sub
and
fcomip
out
cmp
sub
andl
xor
out
mov
ss
dec
jo
fadd
push
mov
cld
movsb
jno
xchg
insl
cwtl
mov
dec
sarl
mov
mov
out
fistpl
clc
xchg
cli
add
imul
adc
decl
sbb
mov
inc
hlt
pop
hlt
dec
dec
out
lock
or
mov
incl
sbb
outsb
cltd
sub
inc
sub
inc
cmp
sub
test
pushf
ret
xchg
stos
add
sar
imul
jo
mov
dec
or
mov
lods
sbb
add
or
decl
jp
ljmp
or
and
sbb
test
out
cmpb
fsub
add
call
push
push
pushw
jl
push
pusha
xchg
sbb
ret
scas
aaa
or
and
dec
jmp
mov
pop
cmp
test
call
sbb
pushf
bound
dec
enter
pop
rolb
decl
dec
and
in
bnd
sub
ljmp
push
cvttps2pi
lcall
iret
into
imulb
mov
sub
sarl
testl
out
mov
ret
or
bound
or
push
sub
sbb
sbb
mov
insl
add
cmpsl
push
push
add
adc
mov
xor
clc
outsl
jg
lock
cmpl
in
xchg
cmpsb
sti
cmpsb
andl
into
push
ljmp
nop
outsl
cmp
mov
dec
xchg
xchg
scas
clc
pop
xor
pop
fisubl
mov
mov
sub
sub
ljmp
test
jbe
dec
int3
inc
aas
call
inc
cmp
scas
xchg
lock
cmp
fistl
insb
add
outsl
insl
pusha
cli
cmpsb
cwtl
sub
jne
pushl
pop
add
jmp
lods
inc
add
xchg
jg
add
jbe
push
sub
inc
jo
cs
shrb
sub
in
decl
xor
xchg
and
mov
outsl
mov
test
stos
cld
and
mov
adc
mov
insb
cli
call
or
dec
movsb
cmp
push
lcall
bound
pop
jne
inc
insb
in
clc
xchg
pop
push
mov
sub
pop
add
imulb
lret
pop
std
scas
clc
int3
seta
lods
test
lds
lock
pop
cld
pop
pushf
stos
mov
incl
pop
enter
and
enter
lret
insl
outsl
push
scas
add
dec
push
shlb
lods
sub
mov
adc
std
mov
call
xchg
movsl
scas
dec
aam
imul
scas
mov
xor
sbb
push
insl
addb
jg
icebp
mov
popl
cmp
sbb
cmp
call
insb
das
xor
test
push
imul
pushw
test
inc
mov
test
mov
lcall
jne
xchg
bound
lret
and
lea
test
incl
push
push
ss
outsb
mov
fisubs
mov
in
mov
inc
xchg
push
test
ljmp
hlt
arpl
cwtl
repnz
out
orb
call
ljmp
std
add
test
dec
add
or
bound
aam
out
or
lcall
call
loopne
in
push
inc
stc
int
inc
dec
inc
push
xchg
inc
and
xchg
dec
cmp
ljmp
inc
jns
pusha
jns
repnz
push
mov
rcll
pop
andb
jl
dec
enter
fs
lock
and
int3
into
push
add
pushl
push
and
bound
jmp
pop
xor
out
pop
mov
add
movsb
out
pop
mov
icebp
mov
sub
sub
inc
pushf
cld
xor
sbb
push
dec
mov
dec
cld
ret
inc
or
stos
add
shll
cmc
fmull
mov
and
outsl
cli
ljmp
pop
xchg
adc
mov
aas
jne
outsb
dec
cmp
pop
insl
shrd
pushl
add
jno
inc
test
test
xchg
xchg
jle
adc
xor
inc
push
mov
call
mov
xor
mov
or
and
aas
gs
lcall
insb
into
ja
push
mov
sub
bound
arpl
or
insl
pop
xlat
inc
test
dec
pop
call
and
cmc
or
cli
dec
xchg
xor
in
loope
icebp
sbb
call
xchg
cs
sbb
std
es
repnz
or
clc
dec
adc
leave
and
roll
cld
decl
loopne
mov
xlat
mov
jbe
add
lcall
pop
or
cmpsl
inc
andb
in
out
daa
mov
mov
xchg
repnz
pushl
xchg
dec
aad
cmp
out
rcl
push
and
mov
cmp
fadds
inc
stos
call
jo
lcall
in
push
mov
xchg
inc
push
mov
or
gs
lcall
icebp
gs
or
in
sahf
inc
pop
adc
xor
out
ljmp
fidivrl
dec
adc
xor
pop
xor
pop
lret
std
decl
push
pop
cld
mov
addb
jno
fiaddl
popa
push
mov
repnz
push
xor
dec
test
sarb
into
hlt
lods
push
jae
rorl
les
sub
xor
adc
cmp
mov
jno
imul
and
mov
lcall
addl
mov
lcall
adc
cld
xchg
orl
sti
adc
adc
jb
push
push
aaa
stos
jecxz
mulb
incl
ss
push
les
insb
hlt
out
loopne
jge
es
lds
add
mov
decl
out
cmp
inc
inc
jg
inc
adc
cmp
inc
dec
movsb
js
insl
inc
mov
mov
dec
xor
push
push
roll
pusha
add
push
cmpsb
mov
jl
pushl
insb
cld
addr16
pop
xor
mov
pop
aam
sub
xchg
ljmpw
dec
imul
dec
aaa
and
loopne
mov
sub
pusha
or
lods
movl
or
and
inc
idivb
enter
inc
add
ljmp
push
movsl
push
enter
or
adc
xchg
inc
xor
out
push
es
andl
ljmp
out
sub
xchg
dec
sub
push
pop
xchg
xor
movsl
adc
fcomip
shlb
cli
gs
scas
inc
jne
pop
cltd
daa
push
or
pop
nop
push
push
push
hlt
push
pop
fs
cmp
xor
jnp
scas
mov
mov
push
or
add
jno
and
pushl
add
jp
ret
ja
sub
aas
in
jge
idivl
mov
rclb
mov
iret
imul
mov
xlat
pop
lcall
adc
mov
test
mov
mov
and
add
or
inc
or
jg
inc
and
add
sar
mov
in
addr16
fsubs
mov
adc
xchg
jbe
or
mov
or
or
bswap
inc
add
imul
ljmp
repnz
and
push
sub
das
movsb
and
icebp
sarl
adc
fistl
or
mov
incb
adc
lret
xchg
scas
mov
jmp
in
mov
cld
lcall
jle
inc
in
jb
jg
jo
pop
in
jp
lcall
and
sti
sbb
pop
and
and
xchg
test
add
lock
ljmp
mov
jae
int
icebp
in
int3
movsb
mov
pop
adc
inc
xor
div
push
aad
lock
call
outsl
push
jne
adc
or
icebp
push
in
xor
xor
inc
in
cmp
add
dec
xchg
frstor
jmp
xchg
add
cmp
loopne
xchg
jbe
cwtl
sbb
movsb
lcall
inc
clc
insl
jl
pop
cltd
or
adc
pushf
cmpsb
data16
nop
insl
bound
in
aad
insl
and
inc
scas
dec
loop
mov
sbb
mov
lods
mov
test
imul
loope
lcall
dec
mov
aas
hlt
xlat
cmp
leave
fwait
xor
adc
pushl
cli
or
movsb
inc
mov
rcr
pop
aam
push
mov
out
or
xor
add
inc
xchg
pop
fs
shl
repz
pop
sahf
push
mov
mov
sbb
push
inc
popl
mov
movsl
dec
aas
push
jae
shl
paddd
std
inc
mov
dec
xchg
mov
jb
cmp
dec
push
or
aam
test
jge
jo
stos
clc
lret
jg
in
jg
and
mov
popa
mov
lds
add
negb
jno
pushf
push
mov
lea
outsl
mov
dec
ficompl
mov
sub
test
xchg
rorl
xchg
push
fsub
cli
pop
mov
popa
icebp
jb
and
mov
dec
mov
imul
aas
mov
ljmp
adc
jmp
mov
cmp
divl
cmp
sub
pop
sub
mov
pop
jl
dec
daa
mov
lcall
push
cltd
sub
push
into
cmp
mov
fldcw
mov
jle
call
xchg
fs
sub
pop
js
stos
mov
int
xchg
xor
mov
mov
bound
and
xchg
add
cmp
enter
lcall
cld
imul
fiadds
stos
out
add
jmp
push
daa
mov
repnz
and
mov
xor
popa
pop
repnz
mov
mov
mov
decl
cmp
movsb
iret
out
sub
icebp
movsb
insb
inc
in
jmp
dec
cmc
jb
fnsave
outsl
clc
jmp
or
add
subl
xor
sub
roll
mov
mov
lds
int3
enter
push
lock
push
mov
push
pop
mov
icebp
xchg
sbb
and
adc
hlt
loop
scas
fcmovu
lods
jecxz
pop
dec
mov
arpl
jne
mov
lcall
jmp
cmp
gs
and
faddl
inc
cld
jg
mov
xchg
sbb
push
rcrl
rcrb
mov
jp
jl
into
int
lcall
jp
mov
movsl
lcall
xchg
xchg
mov
pop
ror
dec
mov
sbb
adc
lods
cmp
into
imul
subl
mov
inc
lods
es
and
add
inc
add
js
aad
hlt
cmpsb
jmp
test
jg
sub
mov
fs
push
push
cwtl
popf
jmp
out
sub
add
mov
mov
in
push
add
ret
int
pop
pusha
movsbl
fcomps
mov
or
pusha
imul
fstl
push
cli
movsb
jnp
mov
in
inc
and
pusha
test
mov
jg
and
and
and
in
outsl
mov
scas
filds
dec
lock
outsl
xor
iret
pop
push
mov
pushl
lret
mov
cmp
leave
cmp
aad
inc
jle
add
mov
cld
lcall
fsubs
adc
mov
ljmp
adc
shl
arpl
and
mov
cs
mov
jl
jb
dec
pop
sub
pop
imul
sbbb
dec
andl
push
or
push
pop
and
inc
in
fdivs
adc
out
cli
call
jp
js
adc
adc
xor
mov
iret
mov
mov
dec
mov
ja
and
jnp
jge
les
mov
ljmp
and
call
pop
ret
sbb
shrb
enter
sbb
pusha
imul
cmpsl
push
popf
ret
hlt
sub
test
test
movsl
in
test
rcll
fs
cwtl
test
mov
popf
int3
add
call
mov
fs
mov
idivl
or
pop
xor
aas
cmc
ljmp
mov
ds
lahf
int
pushl
xor
hlt
jmp
mov
adc
jl
les
mov
dec
inc
test
shlb
test
push
and
xchg
jl
sbb
outsb
clc
shl
sti
lcall
pop
pushf
test
xchg
jno
ja
push
mov
mov
sub
orl
adc
push
cmp
and
cmp
mov
call
pop
cld
cli
cmp
movsb
mov
loope
xchg
jle
and
xor
push
or
fcomip
in
cs
movsb
xchg
data16
cmp
pusha
pop
jmp
cmp
ret
pushf
ljmp
dec
cld
adc
sub
andb
jmp
inc
jge
or
mov
inc
sbb
mov
movsl
out
and
dec
ret
fdivr
std
movsl
xchg
dec
and
pushl
pusha
outsb
push
ss
ljmp
incb
data16
sub
inc
movsb
fwait
jo
mov
jp
cmp
sahf
push
sbb
push
and
adc
xchg
pop
sub
jne
pop
shl
adc
outsb
push
sub
pushl
stos
aam
dec
pop
insl
into
jne
pop
pop
or
xchg
xchg
push
mov
hlt
movsl
sar
call
jno
jo
or
sbb
test
ja
pop
mov
mov
sbb
jae
jbe
ret
scas
sub
fldenv
popf
call
or
xchg
mov
test
jmp
push
dec
cltd
mov
push
mov
call
pop
lahf
addl
rcrl
adc
mov
icebp
xor
mov
dec
push
incl
movb
pusha
push
mov
fisttpll
jg
jmp
daa
out
lock
xchg
in
push
fsts
cwtl
jecxz
push
decl
in
push
mov
and
cmp
je
cltd
pop
out
and
sub
movsb
cltd
jle
dec
lods
sahf
movsb
daa
dec
jnp
add
in
jb
test
daa
inc
xlat
call
loop
and
sub
lods
iret
leave
push
inc
icebp
pop
je
movsl
sbb
jmp
jg
mov
cli
sub
mov
insl
push
xchg
out
in
pop
push
push
popf
cmp
lret
jbe
mov
mov
mov
fisttps
fidivrl
push
inc
adc
rolb
push
xchg
cli
ficomps
lret
lcall
dec
pop
fwait
arpl
cs
sub
gs
sub
das
into
add
inc
mov
xchg
xorb
mov
lcall
call
adc
add
push
mov
test
loope
lcall
outsl
test
inc
pop
mov
stc
lret
popa
sar
adc
mov
and
aaa
sbb
ds
adc
js
ljmp
and
sbb
push
sbb
or
shlb
xchg
orb
icebp
inc
sbb
rorl
outsb
pusha
mov
mov
inc
adc
push
and
jg
fidivl
in
dec
cmp
push
fidivl
mov
push
dec
jnp
arpl
ljmp
inc
ficoml
loopne
les
push
adc
lds
je
fbld
mov
je
and
jle
inc
je
mov
mov
pop
dec
negl
aad
or
jb
lea
cmp
xchg
scas
pop
mov
stos
cli
cmpsl
sub
jmp
pop
inc
cmp
adc
jg
imul
cwtl
insb
sub
add
hlt
add
stos
les
push
xchg
sahf
xchg
push
xchg
sbb
push
cmpsb
push
cmpsb
cltd
ret
pop
xchg
add
jae
or
dec
sar
decl
movsb
push
add
and
mov
subl
and
push
in
mov
add
lds
imull
imul
xor
adc
leave
data16
inc
loope
dec
shll
mov
sbb
cwtl
or
mov
dec
je
clc
cmp
aas
in
or
and
mov
movsl
xor
jg
mov
loop
addr16
jmp
fnstcw
rcrl
or
xchg
lock
mov
push
sbb
dec
inc
pushl
std
inc
pop
stos
mov
mov
inc
or
sbb
incl
arpl
jmp
and
or
mov
push
inc
xchg
lcall
mov
sti
hlt
int3
mov
fstp
pushf
sahf
sbb
pop
bound
ljmp
xor
daa
dec
popw
and
mov
jnp
pop
sub
bound
mov
sbb
cmpsb
ss
test
or
jg
data16
hlt
decl
push
cld
pop
sbb
or
nop
lods
insb
imul
mulb
mov
sub
cli
fistpll
mov
ret
push
lcall
stc
push
xor
out
aad
call
or
adc
jmp
fidivrs
repz
inc
decl
or
push
fcmovnu
scas
lock
sub
cmp
xor
xor
lahf
stc
faddl
aas
xor
xchg
mov
and
loop
scas
or
xchg
outsb
cmp
mov
cmpsl
addr16
xlat
jo
mov
in
mov
xchg
adc
xor
xchg
out
pusha
mov
add
cmp
std
lcall
xor
add
sbb
repnz
ds
addb
add
fs
call
mov
sub
call
test
adc
push
frstor
leave
push
jne
mov
data16
mov
sbb
dec
lret
xor
mov
dec
dec
push
jecxz
pop
fst
push
lcall
lcall
jno
lock
call
dec
jp
mov
push
and
bound
mov
leave
fildll
inc
insb
adc
inc
ficompl
inc
sub
jbe
dec
and
incl
pop
fcomps
in
mov
and
fldl
pop
or
dec
outsl
ljmp
jp
push
sub
push
into
loope
movsb
push
in
mov
cmp
int3
jo
int3
addl
jl
pop
pop
jge
or
das
push
mov
mov
int
mov
das
sub
jge
mov
or
add
jmp
and
rcl
test
adc
mov
enter
insl
adc
test
into
ret
or
push
pop
ds
adc
push
fistps
enter
icebp
nop
addr16
xchg
sahf
xchg
scas
je
sub
add
sbbb
ljmp
adc
in
cmp
js
out
adc
push
addr16
inc
xchg
decl
adc
push
jb
sbb
xlat
out
mov
mov
ljmp
adc
mov
mov
cmp
xor
mov
ljmp
mov
fs
mov
notb
mov
imul
lcall
pop
bound
jns
lret
sub
ljmp
lcall
in
nop
mov
or
jmp
push
sub
jbe
push
std
pop
mov
sar
jns
cmp
cmc
int3
jae
xchg
cs
fcmovnb
cmp
int
mov
decl
hlt
xchg
mov
push
jecxz
mov
test
loopne
in
lds
xchg
sub
cmp
add
or
clc
mov
shrb
sub
cltd
jmp
push
jmp
inc
ja
js
mov
dec
divl
out
adc
popf
mov
clc
insl
or
adc
imul
call
loop
stos
filds
inc
inc
lods
pop
dec
or
nop
push
std
dec
jl
adc
cli
inc
inc
inc
push
jb
popa
jb
das
and
aaa
jl
out
xor
jb
mull
adc
fs
pop
pushl
pop
hlt
push
popa
hlt
and
jae
adc
ret
inc
dec
pusha
in
dec
cmpsl
aaa
outsl
xorb
inc
mov
data16
adc
dec
push
and
jecxz
inc
adc
imul
adc
xchg
bound
pop
jae
imul
push
pop
xchg
sub
push
xor
stos
and
adc
lods
les
push
mov
jmp
adc
xchg
jl
ret
pop
aas
and
loopne
adc
sbb
push
and
incl
jecxz
lock
pop
rcll
xorb
cs
fsub
add
pop
adc
jmp
sbb
add
mov
push
jne
xchg
pop
sbb
pop
outsb
and
inc
mov
mov
sbb
sbb
mov
iret
push
jp
incl
mov
outsl
xlat
push
inc
mov
sbb
push
cs
outsb
mov
mov
arpl
repz
adc
jns
jae
xor
and
addr16
cmp
ljmp
push
xor
inc
inc
push
and
xchg
xor
inc
lock
and
mov
jmp
and
jb
jb
adc
pusha
add
or
incl
sub
push
push
and
and
jae
rolb
clc
push
popa
rclb
outsb
je
push
jae
aas
bound
and
jne
fadds
data16
inc
pop
adc
cmp
mov
clc
inc
test
enter
push
xchg
test
jg
or
psraw
or
pop
cltd
mov
sbb
inc
out
imul
lcall
jle
jno
in
dec
lahf
out
loope
mov
push
cs
xchg
fstl
inc
pop
jecxz,pn
sar
decl
sbb
shll
ljmp
adc
out
hlt
inc
inc
xor
and
test
mov
xchg
lcall
ljmp
cmpsl
inc
pop
enter
add
xor
lock
adc
stc
bound
mov
outsb
push
push
jl
out
lahf
xor
in
mov
adc
insb
push
inc
adc
imul
incl
enter
sbb
ret
xchg
mov
pop
sbb
push
cmpsl
outsl
push
aad
movsl
inc
mov
movsl
cmp
jg
fwait
ljmp
dec
bound
push
push
dec
mov
pop
xchg
jno
nop
incl
repz
add
daa
out
dec
test
push
dec
xor
xor
mov
call
and
and
fcomps
daa
gs
dec
incl
je
xchg
push
in
dec
dec
jb
les
and
inc
dec
xor
and
push
mov
jo
cmp
stos
jae
aaa
mov
lcall
daa
dec
cwtl
sbb
in
sub
loope
pushl
xchg
gs
test
sub
dec
push
ret
pop
push
enter
adc
in
incl
aaa
push
mov
push
pop
out
xchg
dec
sbb
mov
push
inc
scas
dec
adc
mov
pop
mov
outsb
or
sbb
movsb
movsb
out
clc
incl
mov
add
cltd
cli
int
mov
push
dec
adc
mov
sbb
fs
push
pusha
inc
or
sbb
call
sbb
xor
xchg
mov
xchg
cltd
outsl
les
ja
pusha
mov
adc
mov
push
push
xor
xchg
sbb
cmpl
rcll
sub
adcl
inc
mov
loopne
xchg
and
pop
fimull
lea
incl
cld
xor
cmc
push
inc
andb
mov
pushf
push
add
sbb
and
add
stos
push
js
push
push
xor
lcall
push
lds
cld
pop
je
arpl
bound
leave
jne
sub
push
dec
mov
pop
mov
xchg
and
adc
jnp
movsl
mov
jle
gs
pushl
dec
stc
cmp
adc
pop
into
dec
mov
sub
cmpsb
dec
sbb
jae
push
or
sbb
jns
lods
add
jl
shl
ljmp
mov
pop
imul
pop
clc
fisttps
sub
and
mov
cmp
out
xchg
ljmp
gs
outsb
fsts
call
movsb
test
jle
xor
sub
adc
sbb
add
ljmp
rclb
jecxz
and
add
aam
mov
adc
cmpsb
sbb
ljmp
pusha
and
cltd
adc
pop
fdiv
movsb
xlat
daa
sbb
cmpsl
outsl
pop
adc
mov
imul
sbb
stos
jns
push
adc
xchg
and
inc
adc
inc
inc
pop
mov
jo
dec
arpl
jae
sub
xor
incl
inc
and
xorl
add
ljmp
adc
pop
xor
inc
movsl
dec
stos
xlat
leave
push
inc
sahf
daa
cmp
fistpll
xchg
mov
mov
pop
sahf
jp
mov
pop
adc
or
push
adcb
fldenv
mov
push
adc
dec
shl
test
repz
cmp
pop
lea
pop
xchg
dec
cmp
adc
add
or
incl
push
out
or
mov
push
mov
mov
adc
lcall
scas
movsl
xchg
enter
leave
mov
js
pop
addr16
sub
mov
pop
cli
mov
ljmp
mov
mov
mov
in
rorb
push
outsb
and
insl
jmp
insl
std
pushl
mov
xor
je
cmp
inc
and
ljmp
add
push
mov
inc
mov
or
movsl
movsb
pop
jae
mov
dec
sub
cs
cmpsl
test
cmpsl
mov
cmpsl
ja
add
mov
in
adc
and
mov
push
insb
mov
test
xchg
jg
fstps
arpl
orb
and
out
cmp
fwait
sub
mov
rolb
and
call
and
mov
xlat
jae
ljmp
xor
push
ss
addr16
push
out
je
arpl
pushl
xchg
xchg
mov
andb
mov
mov
cmpl
popl
sub
mov
and
mov
test
ja
sub
dec
or
pop
cmpsl
or
sbb
jmp
insb
add
push
movsl
sbb
shll
fsubrl
ljmp
mov
sbbb
jg
mov
push
imul
jns
aad
xchg
jmp
hlt
adc
push
xchg
imul
icebp
xchg
insl
sbb
xchg
mov
or
adc
xchg
and
mov
inc
sbb
jmp
xor
sub
mov
cmp
jg
sahf
mov
pop
xchg
jmp
daa
adc
push
adc
leave
mov
hlt
xchg
push
push
testl
inc
inc
ret
inc
mov
and
xchg
push
push
jnp
dec
and
push
mov
std
lcall
sti
xor
sbb
cmpsl
and
push
and
out
push
cmp
jg
or
arpl
loop
popf
xorl
jne
jge
and
outsb
jbe
jnp
xchg
jecxz
insl
sub
jmp
jne
mov
pop
adc
add
inc
decl
cmp
cmp
cmp
xchg
xchg
and
mov
es
mov
mov
push
ja
sbb
mov
xor
sbbb
pop
xor
incl
pop
xor
mov
xchg
aam
icebp
mov
pop
out
sub
arpl
mov
jnp
scas
mov
sbb
fsubp
sub
mov
add
mov
push
ljmp
test
roll
push
dec
push
mov
xor
xor
mov
les
pushf
cmp
repz
xchg
std
cltd
orl
aaa
int
sub
mov
push
mov
insb
adc
inc
mov
and
fildl
ret
xchg
test
pop
jg
inc
out
arpl
loope
mov
push
wrmsr
push
dec
inc
inc
inc
incl
movsb
jae
push
imul
cmp
stos
pop
rcl
pop
aam
aam
and
adc
inc
xor
xlat
lea
ficompl
jmp
jne
jg
mov
push
shrb
mov
stos
fwait
mov
bound
pop
ds
addr16
lcall
lods
lods
jecxz
fs
cmpsb
xchg
sub
stc
dec
xlat
pop
aam
xchg
jns
adc
loope
xchg
mov
sbb
cld
andb
mov
xchg
pusha
mov
fdivrl
fbstp
aad
popf
push
in
aad
rorl
adc
imul
jmp
lods
xchg
ss
stos
xchg
je
incl
push
sbb
inc
pusha
fs
mov
jmp
inc
ficoms
and
xchg
xchg
sbb
add
mov
adc
adc
incl
cld
sub
and
sub
stos
call
or
scas
mov
cmpb
cltd
in
repz
out
adc
dec
push
mov
scas
sbb
mov
xor
cmp
imul
sub
js
into
stos
int
aaa
mov
add
and
and
jae
mov
xor
cmp
or
fcmovnb
sbb
and
mov
clc
inc
lret
in
ret
pop
sbb
cmp
mov
pop
shrl
mov
mov
and
loop
lea
sahf
jbe
and
sahf
push
insb
addr16
fstl
imul
push
mov
ja
dec
or
add
jbe
rcll
dec
sub
iret
cs
sar
lcall
daa
pushf
jne
sahf
imul
mov
loop
rcll
incl
push
inc
pop
sbb
loop
push
leave
pop
fstpl
outsb
mov
adcl
cmpb
loop
pop
lcall
add
add
shll
push
push
in
icebp
mov
loop
xchg
insb
xchg
cmpsb
sub
repnz
cmp
mov
jl
mov
loope
cwtl
push
mov
adc
pusha
jo
inc
or
mov
cli
pushl
outsb
sbb
dec
jle
mov
xchg
or
mov
aaa
ds
cs
ret
call
lahf
xor
lcall
sub
fsubl
push
and
and
cmp
inc
in
sbb
fcompl
inc
sbb
cmc
jmp
popf
push
insb
stos
jnp
je
mov
xor
xchg
lds
fidivrs
decl
cmp
je
jne
adc
stos
lahf
pop
xchg
pop
gs
ds
bound
cmp
jnp
aad
cmp
push
dec
dec
ja
in
xchg
inc
dec
sbb
dec
ret
adc
lock
aas
xor
or
xchg
adcb
aad
rclb
iret
out
pop
mov
mov
adc
mov
lea
mov
clc
cli
ss
repnz
push
dec
xchg
pop
mov
scas
in
lret
mov
add
dec
mov
jae
xor
xchg
stos
push
js
sub
jns
pop
and
lcall
add
sbb
sbb
mov
les
incl
jmp
je
lock
mov
cmpsb
mov
mov
mov
addl
sub
pop
rcl
jo
ret
sbb
push
imul
mov
fsts
sbb
cmpsb
push
mov
and
cmp
adcl
scas
push
rolb
mov
or
jge
ds
pop
inc
outsl
sbb
mov
sub
stos
test
call
scas
inc
test
loope
fisubrs
mov
or
push
inc
mov
pop
mov
sbbb
cs
mov
mov
adc
sbb
cld
nop
jo
jmp
roll
sub
dec
es
mov
mov
sbbl
mov
pushl
jbe
aad
inc
xor
mov
call
cmpsb
std
fdivr
in
pushl
outsl
ss
aaa
addb
pop
dec
sbb
ret
dec
xor
int3
xlat
dec
lahf
fdivrp
enter
dec
je
icebp
stc
xor
mov
lcall
and
push
bound
std
ljmp
and
xchg
fcomps
cli
pop
xor
rolb
pushl
sub
aam
out
cmp
hlt
and
mov
in
mov
or
sub
ret
adc
or
dec
roll
mov
loop
or
and
adc
lds
push
sub
inc
lret
add
jo
adc
jge
dec
aas
incl
in
sbb
mov
cwtl
inc
inc
adc
mov
aam
nop
inc
sahf
sbb
sub
mov
add
shlb
mov
dec
repnz
inc
outsl
mov
and
fcmovne
add
push
and
call
ljmp
cmp
xchg
inc
jb
inc
dec
add
sbbl
xor
push
idivb
push
dec
push
fisubrl
and
pop
xchg
dec
bound
mov
loop
push
cwtl
cmp
loop
nop
push
test
lcall
movsl
hlt
inc
dec
xor
shlb
mov
cwtl
sbb
scas
sarb
stos
sbb
gs
das
lretw
in
ljmp
and
pop
jo
scas
mov
jp
pop
ror
push
mov
dec
shrl
insb
mov
stos
imul
ds
lods
mov
ss
fsub
int3
xor
xor
inc
pop
lcall
pushl
xor
fadds
sbb
sahf
out
shll
out
loop
in
hlt
cmp
mov
shl
into
dec
mov
sub
jnp
ds
push
in
lcall
das
sar
pop
mov
nop
inc
dec
sbb
pushl
mov
andl
sbb
icebp
cli
mov
cmp
mov
push
jne
push
call
add
xor
out
inc
xchg
repnz
sbb
mov
xor
and
push
mov
das
lcall
adc
fsubl
mov
ret
lcall
ret
dec
cmp
iret
mov
mov
sbb
cmp
inc
push
fiaddl
sar
int
daa
dec
pop
ret
or
je
push
or
jo
fdivrl
sub
push
xchg
movb
dec
cmp
pop
mov
ljmp
or
pop
jmp
je
leave
cmpsl
mov
pop
jnp
xor
mov
stos
mov
incl
sub
xchg
aad
lods
cmpsb
mov
loopne
dec
das
fs
push
stos
scas
insl
push
call
imul
out
mov
mov
cwtl
mov
pop
cmp
nop
cld
xor
cs
dec
pusha
call
dec
das
fucom
call
jl
push
xor
imul
add
add
dec
imul
xor
push
lea
dec
add
jno
call
jl
enter
aad
sbb
cwtl
xor
cmp
jmp
jecxz
int3
xchg
jno
dec
aam
lahf
cli
mov
mov
mov
add
cmpsl
sbb
pop
addb
jg
pop
add
pop
mov
adc
push
and
or
call
enter
sarl
cmpsb
mov
ljmp
and
sub
scas
insb
dec
adc
jl
aaa
enter
xor
cmp
aaa
sub
dec
pop
adcb
push
es
mov
inc
push
insl
mov
mov
push
daa
jnp
lret
pushl
iret
hlt
jmp
jecxz
clc
cmp
adc
cmp
xchg
lock
push
or
push
imul
test
inc
adc
mov
testb
adc
xchg
into
or
xchg
sub
clc
dec
pop
add
pop
and
loop
lahf
fisttps
stc
mov
mov
mov
lcall
fcompl
clc
mov
jle
sub
ret
xchg
sbb
lock
inc
ret
sarb
stos
pop
mov
dec
mov
mov
mov
push
test
js
sahf
andb
cmp
jnp
lds
cld
jmp
mov
xor
bound
mov
clc
push
fmul
mov
lds
dec
pushl
gs
pop
jno
inc
andb
add
out
cli
and
mov
dec
push
sbb
sub
test
cmp
cmp
hlt
das
clc
ljmp
push
pop
pop
xchg
push
mov
push
insb
push
push
loopne
add
ds
jge
add
movsb
xchg
and
sub
outsl
jbe
mov
mov
cltd
xchg
ffreep
add
and
push
mov
xor
sub
call
adc
scas
sub
xchg
xchg
insb
sub
aam
mov
call
mov
outsb
rol
aaa
mov
adc
in
mov
inc
xchg
mov
push
and
inc
out
pushl
xchg
out
and
xor
hlt
ljmp
mov
inc
adc
jl
sub
xchg
mov
pushl
xchg
lds
inc
sub
mov
cwtl
pop
push
push
repz
add
arpl
outsb
cs
clc
jmp
lret
popa
aam
sbb
cmpsb
inc
dec
pop
cli
cltd
cwtl
test
call
stos
test
fmuls
mov
rolb
and
pop
call
xchg
mov
movsl
cmp
aad
lods
mov
ljmp
inc
ljmp
xor
jg
xor
shlb
jmp
loopne
mov
dec
sub
mov
inc
mov
enter
xor
lods
inc
jbe
xchg
ja
dec
mov
ljmp
fnstcw
test
or
jae
shl
dec
ja
dec
adc
cld
jmp
pop
lcall
push
popf
sbb
lret
jns
addr16
gs
ljmp
or
adcb
adc
xchg
mov
jmp
inc
inc
movsl
cs
or
pusha
jle
and
rclb
adc
push
test
pop
mov
pushf
sub
aam
dec
mov
sub
mull
ljmp
sub
pop
push
adcl
shll
mov
adc
pop
arpl
out
add
aas
movl
lcall
sub
test
push
sbb
lret
fdivl
and
or
icebp
fadd
subb
ret
mov
cmpsb
jmp
popf
or
xor
mov
dec
test
mov
push
jp
sub
cwtl
shrl
cmp
aam
ljmp
or
jmp
dec
pop
test
test
and
mov
pop
lods
mov
mov
jg
inc
cltd
adcb
cmp
fsts
adc
inc
dec
ljmp
mov
out
xchg
cmp
arpl
pop
mov
dec
mov
pop
jo
xchg
dec
scas
and
lcall
aam
btc
xor
xor
pop
mov
popl
mov
push
lcall
inc
in
sti
decl
dec
insl
dec
test
jp
push
mov
leave
dec
pop
xor
pop
push
lods
sahf
sbb
mov
aad
push
adc
pushf
cvtpi2ps
imul
scas
xchg
dec
mov
mov
sub
cld
jmp
and
call
xchg
jb
add
cmp
xor
jmp
popa
loopne
jp
push
flds
inc
adc
mov
decl
mov
shlb
push
mov
out
jo
adc
jae
mov
jmp
pusha
lods
cmp
lock
xor
loopne
cmp
outsb
xor
fbld
jbe
lods
xor
xor
std
sti
push
fildl
dec
fwait
push
fs
ljmp
or
jmp
sbb
call
cwtl
stos
and
mov
xchg
mov
inc
loop
inc
mov
pop
xchg
push
call
jno
cld
imul
pushl
sub
sbb
repnz
jl
adc
lret
cmp
mov
pop
sbb
xchg
sbb
dec
xor
and
mov
cmp
shrl
and
pushl
jae
out
mov
dec
lret
sbb
fnstenv
inc
or
adc
and
ljmp
push
fwait
mov
push
pushl
lock
imul
and
icebp
mov
pop
test
xchg
or
push
icebp
xchg
mov
bound
mov
sarb
decl
mov
cltd
mov
adc
xlat
orl
inc
mov
js
cmp
xchg
xchg
mov
sti
das
mov
in
xchg
lds
mov
mov
cli
or
jmp
push
or
in
jae
nop
sarl
inc
jmp
xchg
dec
sahf
xor
sbbb
jo
cmp
or
cmp
adc
inc
sub
sbb
lods
xor
jg
sahf
push
leave
xor
fwait
repz
lret
sub
and
lcall
mov
mov
inc
sbb
xchg
add
or
xor
push
jg
decl
mov
cltd
ss
shl
adc
addb
lret
mov
dec
cli
fwait
and
adc
mov
mov
mov
sarl
and
orl
or
xor
mov
add
push
shll
sbb
or
mov
imul
cmpsb
pop
mov
out
mov
inc
mov
int
lock
mov
xchg
cwtl
xchg
jmp
mov
jg
and
pushf
mov
add
mov
jmp
inc
adc
ja
mov
xchg
pushl
shll
sbb
mov
ljmp
mov
cltd
sub
ss
in
mov
repz
push
ret
fsubrl
jl
push
ljmp
or
and
incl
aas
cmp
mov
sbb
fimull
lods
lret
loop
adc
lods
imul
jmp
sbb
or
scas
mov
adc
sti
stos
xchg
repz
xchg
jo
xor
fistl
adc
cmpsb
ljmp
cltd
lcall
int3
in
or
mov
sbb
movsb
sbb
orl
fwait
adc
sbb
rorb
mov
shrl
jnp
cwtl
aaa
loop
movlps
lods
test
nop
sbb
mov
lcall
in
mov
mov
xchg
or
mov
and
sbb
or
sub
mov
sub
das
mov
nop
sub
mov
data16
ljmp
dec
in
cmpsb
call
sahf
movsb
dec
inc
mov
mov
hlt
cmpsb
enter
push
or
dec
xchg
jl
inc
mov
ret
sbb
pop
xor
push
and
cld
mov
mov
push
sub
test
jecxz
das
mov
int3
call
mov
repz
fcoml
and
aaa
daa
adc
mov
int3
push
enter
xor
incl
ret
stos
sub
int3
int3
pushl
mov
mov
jns
sarl
xor
inc
pushf
ss
repnz
inc
aad
dec
stos
adc
scas
jb
lods
adc
js
inc
and
cltd
lret
adc
dec
sbb
jg
lods
lds
pop
adc
pop
xchg
das
mov
xchg
pop
rol
roll
sub
sub
push
and
mov
sub
adc
add
add
sub
enter
flds
push
or
test
clc
decl
and
xchg
cmp
jb
mulb
repnz
cvtps2pd
fcoms
std
mov
xchg
adc
mov
jp
mov
xchg
dec
push
imul
imul
dec
sahf
test
rclb
decl
xor
jnp
lock
cmpsl
clc
cmpsb
scas
cmp
test
shll
xor
ljmp
cmp
lahf
sbb
iret
dec
decl
push
test
shll
sbb
and
xor
mov
pop
mov
sub
push
fnstsw
add
jnp
js,pt
mov
add
lret
dec
jl
sub
sub
call
cwtl
sbb
and
mov
lret
sub
fwait
jecxz
int3
rcrl
ljmp
ja
and
in
cmp
sarl
vmwrite
movsl
fwait
rcll
sub
outsb
movsb
mov
mov
pop
das
or
mov
sar
mov
sbb
cmc
mov
stc
jmp
mov
aad
xor
sub
sbb
fs
movsb
ljmp
sbbl
jo
dec
cli
push
sub
cmp
ds
aad
add
lcall
adc
inc
lret
push
orb
or
incl
xor
mov
sbbb
in
iret
imul
inc
pop
jl
mov
enter
pop
dec
jg
jg
ret
cld
and
clc
cmpl
xlat
jmp
out
mov
cld
dec
popf
orb
cs
push
repnz
cmp
mov
mov
mov
mov
arpl
xchg
decl
mov
xchg
fmuls
leave
mov
aad
test
test
in
lcall
sar
pop
jl
rorb
lds
fsts
xor
xchg
mov
decl
rcrl
inc
pusha
jge
fcmovbe
inc
ficoml
cmp
xor
xor
lret
roll
lret
cld
inc
lcall
incl
in
sahf
jno
scas
inc
push
test
nop
inc
rclb
in
cmovno
loopne
push
mov
incl
sub
loopne
repnz
dec
rcrl
and
cmp
jne
std
jg
add
add
popf
iret
repz
push
add
rcr
and
idivb
xchg
sbb
shll
pop
faddl
push
lock
mov
push
aam
pop
cli
incl
loopne
lock
into
cs
mov
or
and
xorb
add
in
incb
push
insb
in
and
dec
mov
push
xchg
mov
cli
fists
test
insl
dec
xchg
xor
lcall
jo
aaa
shlb
and
into
or
sub
sub
data16
leave
or
popf
ss
leave
inc
scas
lret
jg
jb
push
push
ss
cltd
xchg
imull
sbb
ljmp
ret
sub
mov
repnz
fmuls
ss
push
sub
cmc
cmpsl
push
mov
popf
pop
add
int
dec
mov
sbb
std
pop
xchg
mov
dec
mov
cltd
push
or
in
sarb
dec
push
fldenv
decl
sbb
mov
inc
mov
mov
pop
je
mov
sub
cmp
lods
add
cmp
nop
cmp
and
dec
sub
inc
dec
xchg
sbb
adc
stos
in
mov
lcall
jne
cmc
insb
lods
mov
cmp
sti
pusha
xchg
inc
cli
adc
cmpl
arpl
cmp
add
sbb
sti
mov
pop
add
adc
mov
inc
hlt
cwtl
arpl
clc
test
sub
sub
mov
ficompl
dec
mov
mov
jmp
mov
add
call
xchg
xchg
cmc
orb
or
andl
je
leave
xchg
sub
jmp
dec
inc
pop
hlt
les
push
add
xlat
incl
add
pop
cmp
mov
jmp
lods
cwtl
xor
fidivl
es
push
ds
out
repnz
shrb
cs
jmp
ret
icebp
dec
pop
inc
xchg
das
js
dec
adc
movsb
mov
jecxz
les
mov
mov
cmc
outsl
clc
mov
pushl
add
jbe
xchg
lds
popa
mov
add
pusha
ljmp
lods
aaa
rclb
hlt
dec
adc
dec
adc
pop
or
pushl
out
mov
movsb
stos
mov
adc
out
sti
or
pop
jl
les
pop
loopne
xor
out
and
mov
into
shll
sbb
pushl
fdivrs
inc
fs
not
shlb
out
cmp
inc
jae
xor
push
cmp
js
sub
das
mov
lds
hlt
mov
std
aad
or
push
pop
cwtl
ss
xchg
pushf
stc
cmp
lret
mov
xor
sub
gs
cmp
sub
shlb
xchg
pusha
mov
in
out
clc
add
and
pop
cli
pop
repnz
fiaddl
sbb
mov
adc
in
lcall
js
or
frstor
ficoms
sub
add
or
in
popa
mov
push
scas
insl
jb
sub
xor
mov
dec
cmpsb
dec
jae
das
arpl
mov
pusha
and
fidivs
mov
xchg
add
inc
in
in
clc
push
xchg
xor
out
cmp
mov
mov
cmc
call
int3
inc
lahf
insl
mov
mov
mov
popa
pusha
cwtl
lcall
sbb
xchg
sub
hlt
es
jns
mov
ljmp
sar
hlt
lods
mov
lea
in
pop
stos
xchg
lret
push
mov
push
scas
addr16
ja
aad
inc
push
addb
str
sar
loop
pop
add
sub
xchg
and
add
xchg
pop
or
loope
js
adc
mov
enter
mov
and
int
ljmp
xchg
ret
loopne
roll
cmp
pop
add
jo
push
dec
sub
sti
add
mov
rolb
jo
and
xorl
outsb
and
mov
pop
cwtl
add
sar
pop
or
xchg
incl
sbb
fldl
in
push
add
xchg
in
inc
xchg
pop
mov
movsb
mov
lahf
mov
cmp
push
sbb
aad
jge
xchg
mov
shlb
or
inc
hlt
dec
mov
jge
fdivs
dec
xor
and
or
adc
addb
fsubs
aaa
cld
lcall
inc
inc
aaa
stc
fsubrs
xchg
lea
pop
mov
add
xorl
ret
add
push
sbb
jp
fsubr
stos
call
outsb
mov
je
sar
pushl
int3
pop
out
cli
ret
jno
push
aas
lods
in
inc
and
sbb
rcr
xchg
out
decl
sti
sbbl
lods
sti
jmp
pusha
xor
add
sub
call
jl
int
cmpsl
and
mov
pop
div
je
jl
hlt
inc
pop
push
dec
mov
mov
fisubl
dec
subb
push
fcos
decl
inc
dec
sbbl
daa
ss
mov
fdivrp
ljmp
push
addb
out
addl
or
scas
in
and
in
mov
dec
je
pop
in
cmp
or
sbb
je
add
mov
pop
inc
es
adc
sarb
dec
cli
call
ret
jmp
adc
push
in
xchg
not
sub
daa
popa
repz
bnd
subb
movsb
iret
arpl
sub
push
ss
dec
mov
inc
dec
decl
call
fdivrs
mov
test
rol
fadds
mov
fisttps
decl
adc
icebp
popa
les
xor
pop
add
outsb
aam
ljmp
cmp
inc
mov
ja
rcll
push
dec
setp
hlt
sarb
jmp
sbb
and
jo
shll
je
movsb
dec
pop
xchg
stos
test
incl
cmpsb
pop
xchg
pop
inc
sub
scas
call
in
xorb
push
lcall
fnstenv
jnp
outsb
fsts
push
cmp
dec
ljmp
jmp
das
add
pushl
out
inc
sub
push
mov
inc
mov
and
xchg
test
mov
jne
out
ret
shrb
dec
popf
pop
mov
dec
mov
jp
in
add
or
incl
rolb
icebp
pop
loope
ret
adc
pop
inc
inc
roll
sbb
mov
orb
and
les
outsb
mov
xor
jmp
xor
adc
pop
roll
mov
add
bound
inc
into
mov
inc
cmpsb
je
icebp
fistps
pop
loop
pusha
or
enter
adc
mov
ljmp
nop
add
xchg
jbe
pushf
adc
inc
mov
les
push
aaa
fdivr
jmp
or
sbb
shrl
mov
sbb
add
pop
sub
movsb
push
decl
dec
popa
cmp
mov
push
adc
push
bound
sub
xchg
pop
mov
jmp
out
das
imul
test
cmpsb
dec
lods
shrl
in
aaa
mov
nop
inc
or
aam
popf
fs
sbb
je
lcall
test
inc
ja
inc
push
inc
sub
call
insb
xor
xchg
cmpsb
cmp
cmp
dec
or
bound
adc
lcall
push
xor
xchg
push
pop
or
pop
inc
fldl
inc
push
pushf
jne
lahf
jge
mov
add
jne
push
add
imul
mov
movsl
push
or
data16
jg
xorb
xchg
xor
scas
jo
push
cmpsb
or
fdiv
cwtl
push
out
push
mov
fdivrl
je
sbb
inc
mov
push
lret
dec
sub
pop
lret
xchg
add
inc
sbb
mov
and
sbb
movsb
mov
pop
inc
fnstsw
and
fists
mov
fs
lret
adc
cld
cmp
pop
cs
pop
xchg
mov
or
jle
xorb
and
addl
mov
int3
xchg
popa
or
incl
js
and
outsb
sub
sbb
loop
xor
lock
sub
nop
inc
lret
fstpt
loop
aaa
xchg
ja
mov
nop
fs
dec
pop
pop
out
add
dec
xchg
sbb
movsl
xchg
data16
xchg
fcomip
incl
test
cmp
xchg
mov
lahf
rorl
jns
lahf
aas
sar
ficoml
or
in
push
xchg
cltd
push
lea
repnz
jg
dec
fs
inc
ljmp
push
ret
subl
xchg
test
stos
mov
gs
sahf
lods
pop
int
cmpsl
mulb
inc
push
sub
sbb
xchg
shl
aad
pop
lret
nop
ljmp
push
mov
push
sub
push
jbe
mov
sahf
or
popa
mov
lods
mov
jp
sbb
add
lds
pop
inc
iret
mov
call
or
and
pop
shll
sarl
stos
mov
inc
sbb
ds
xchg
aaa
jo
cmp
sbb
inc
pushf
in
leave
cmp
xorl
inc
out
or
lea
cwtl
jg
lods
addr16
cmpsb
cmp
and
movsb
add
in
sbbl
adc
add
lock
mov
sbb
push
dec
or
mov
sbb
call
inc
sbb
shlb
adc
pop
orl
or
add
dec
push
xchg
shr
dec
outsb
imul
aam
sub
insl
jb
mov
cmpb
or
jg
cwtl
adc
and
jae
dec
adc
mov
sub
and
jge
inc
dec
icebp
push
push
mov
popf
incl
xchg
aas
popf
or
mov
aam
pop
adc
shlb
in
push
adc
scas
nop
movsb
and
adc
adc
cli
mov
sti
subl
mov
ljmp
inc
sub
lods
test
das
rclb
ds
and
scas
mov
sub
incl
pop
dec
lock
xorb
jmp
call
sub
mov
dec
or
decl
adc
aas
lock
add
int3
mov
add
hlt
xchg
inc
dec
jns
sahf
add
mov
inc
cmp
push
add
mov
adc
mov
std
inc
sub
adc
iret
xchg
cs
rcl
add
adc
pop
jmp
cmp
mov
sbb
jmp
fdivr
sub
inc
pop
cmp
push
mov
in
decl
inc
dec
add
and
pushl
xchg
loopne
cmp
decl
test
add
mov
icebp
inc
jmp
loopne
aaa
js
mov
mov
adc
jp
aaa
mov
jnp
pop
xchg
adc
adc
mov
add
repz
fnstenv
mov
sub
pop
fs
adc
pop
decl
lret
rcrl
push
mov
enter
xchg
out
sub
ljmp
fisubrs
adc
pop
fisubrl
lret
mov
sub
cmpsb
fnsave
lock
bound
add
pop
inc
mov
push
ljmp
inc
mov
dec
sub
push
push
cmp
add
into
jg
mov
addb
movsl
bnd
cmp
add
sub
out
clc
incl
imul
arpl
pop
dec
mov
push
or
mov
inc
xchg
pushf
push
or
pop
into
jg
add
inc
lret
lock
or
dec
nop
mov
and
subb
in
or
test
and
xchg
call
dec
or
ret
jo
lods
es
adcl
call
cmp
push
push
add
lea
sbb
push
pop
or
icebp
and
outsb
jp
sub
hlt
aaa
pop
add
filds
enter
ret
testb
dec
mov
jae
pushf
fwait
in
dec
xor
dec
and
fistps
test
movsl
clc
mov
aam
sub
mov
and
fstl
sbb
push
cs
inc
repnz
xor
incl
mov
jns
ss
jmp
hlt
inc
popf
into
in
enter
mov
dec
out
mov
in
imul
push
mov
insl
xchg
mov
and
outsl
push
aam
mov
je
fs
sbb
repnz
mov
rolb
lcall
sbb
ss
add
fisttps
cltd
pop
jo
and
cmpsl
add
dec
cmp
push
loopne
jnp
add
add
fiaddl
inc
jge
push
fs
pop
or
insb
jo
add
lea
dec
cmp
jg
xor
adc
sub
clc
add
adc
pop
shll
push
shll
mov
xchg
imul
orl
std
or
fbstp
jmp
sub
sbb
add
leave
xchg
xchg
dec
test
movsb
scas
fidivl
xor
mov
mov
xchg
add
aad
jg
aam
jp
mov
add
sub
test
aam
ljmp
lcall
jg
dec
das
or
pop
nop
push
fwait
cs
mov
adc
call
pop
test
pop
jo
imul
cs
out
nop
push
shrl
xlat
rcll
dec
add
dec
dec
jg
pop
cs
xchg
ljmp
int
xchg
or
fcoml
cltd
std
push
xor
in
lcall
cld
push
xor
pop
cmp
add
data16
sub
jg
add
cmp
clc
cmp
or
cmp
popf
adc
ja,pn
lock
clc
inc
jg
xlat
rcrb
add
lods
xorb
mov
jo
add
xchg
pushf
push
push
cmp
jmp
and
push
cmp
int3
cmp
sbb
or
inc
insl
mov
addl
add
rcr
sarb
ljmp
outsb
enter
aad
mov
mov
push
xchg
int3
mov
call
xchg
adc
xchg
xor
xlat
pop
or
push
xchg
incl
fcoml
push
sbb
mov
mov
lahf
dec
dec
xchg
adc
in
frstor
mov
inc
fsub
sbb
decl
movsb
movsb
push
cmpsb
dec
mov
fsts
pop
and
sbb
dec
inc
dec
mov
mov
mov
outsl
icebp
xchg
push
push
fcoml
scas
add
or
add
lcall
push
add
loope
push
push
bound
repnz
mov
out
add
mov
mov
adc
inc
add
push
jno
add
bound
jp
inc
call
decl
je
push
movsb
test
dec
pop
cmp
xchg
je
vpaddsb
arpl
stos
loopne
leave
or
fs
jmp
sub
mov
popf
dec
hlt
sbb
mov
push
rorb
inc
leave
adc
stos
mov
jecxz
movsb
rorb
sub
fldenv
push
mov
rorb
adc
shll
cmp
push
aaa
sarb
rcl
js
push
push
or
inc
sarb
movsb
clc
pop
pop
pushf
dec
or
xor
ja
call
sbb
push
stc
arpl
dec
dec
or
or
adc
adcb
dec
add
inc
adc
fxch
add
mov
mov
push
mov
lock
fnsave
pop
xchg
int3
pop
nop
int3
cltd
fistps
adc
cmp
stc
dec
loopne
orb
dec
push
inc
sub
pushf
xchg
dec
adc
push
test
push
pop
jo
filds
adc
sub
sub
insb
inc
test
ljmp
rcll
or
mov
dec
mov
popl
mov
ljmp
adc
stc
test
subb
mov
inc
xor
inc
add
pop
ss
mov
push
or
pusha
add
sub
adc
jmp
incl
lcall
decw
clc
arpl
sub
ret
decl
dec
or
fisubl
clc
lods
pop
jns
int3
jb
fisubrs
sbb
loope
pusha
fdivr
jg
inc
pcmpgtb
adc
cmp
cwtl
mov
cmpl
push
sub
xchg
fiadds
or
adc
movsb
nop
loopne
js
inc
decl
xchg
pop
cmc
jmp
ret
lods
es
mov
sbb
adc
ljmp
inc
outsl
jle
push
or
pushf
push
mov
sbbl
adc
std
mov
push
es
decl
pop
dec
adc
or
and
pop
xor
rcrl
pop
loop
jmp
inc
incb
call
and
xchg
fstps
push
mov
rorl
add
cld
rcrl
popf
ficomps
test
dec
xchg
or
xchg
loope
fsubp
xchg
cmp
pop
mov
ljmp
cli
mov
pushf
mov
dec
and
mov
or
sbb
sbb
incl
movsl
cwtl
xchg
push
push
mov
mov
loop
push
jne
test
mov
lea
rcl
decl
push
rcrl
enter
xor
sub
ficoms
dec
inc
enter
inc
daa
incl
and
andb
sub
pop
sahf
jmp
push
cmpsb
cmpb
fs
fs
out
fsubrp
cli
jmp
es
fldcw
scas
fmul
pop
mov
cwtl
pop
dec
addr16
cmp
and
dec
xchg
sub
out
cmpsb
cmp
mov
add
cmp
add
jnp
inc
sbb
mov
sbb
sqrtps
inc
inc
inc
xchg
out
xchg
movsl
push
fcomp
outsb
mov
dec
ljmp
push
icebp
push
dec
mov
je
jmp
ret
xchg
inc
lods
stos
les
loop
out
idiv
ljmp
stos
cmp
dec
inc
cmp
mov
roll
loopne
pop
lods
adc
dec
test
out
cli
and
inc
inc
test
cmp
and
xor
or
ds
ljmp
mov
inc
sub
xchg
nop
enter
push
pop
in
xchg
mov
jmp
std
decl
icebp
push
rorb
sbb
adc
data16
flds
mov
ljmp
insb
pushf
loopne
popa
xchg
cmp
popa
insl
into
ret
ds
frstor
cld
loop
into
fstl
call
xchg
mov
iret
sub
jmp
movsl
dec
lret
in
ljmp
xchg
sbb
mov
ljmp
fst
lea
fs
cmpsb
mov
mov
pop
cmp
lcall
xchg
adc
cld
in
mov
gs
out
push
cwtd
push
aam
fdivr
mov
push
pop
subl
or
negb
shrl
xlat
decl
inc
cld
mov
or
pop
pusha
inc
repz
add
jg
push
movsl
bound
push
or
inc
xor
or
pop
sbb
cmp
push
std
decl
pshufw
add
mov
mov
std
dec
incl
xor
test
outsb
aam
add
idivb
mov
push
test
mov
int
jns
or
or
ret
ljmp
fs
cmpsl
adc
out
pushf
imul
mov
jmp
xorb
inc
mov
aam
jmp
mov
xor
mov
mov
dec
and
push
loope
push
push
sub
cmp
mov
jl
addr16
les
mov
dec
popa
mov
iret
lds
lahf
imul
inc
dec
int3
leave
sbb
pop
std
ficoms
test
pop
mov
adc
mov
icebp
decl
mov
shlb
addr16
mov
lret
push
cwtl
out
push
loop
cmc
and
lock
sub
movsb
xchg
lcall
lret
fsubrs
mov
mov
adc
gs
push
fwait
inc
cli
dec
mov
pop
in
and
mov
fcomip
mov
mov
movsb
adc
push
push
pop
push
rol
push
incl
cld
incl
and
call
orb
add
lret
or
and
fisubrs
rolb
stos
in
test
sbb
out
das
jl
add
jl
pop
rolb
call
add
pop
jns
jmp
sub
or
jne
mov
test
inc
std
and
cs
inc
jg
insb
add
les
ljmp
pop
xchg
add
mov
push
adc
push
pushf
mov
ljmp
jmp
test
test
int
or
rcrl
mov
sbb
push
lcall
adc
adc
sub
sbb
cwtl
xor
in
out
fnsave
in
pushl
aad
incl
dec
mov
pop
inc
dec
gs
insl
sbbl
jg
dec
xchg
xchg
sbb
pushf
or
pop
add
popf
add
push
je
pushf
xchg
cmp
popf
jl
push
jmp
pusha
add
jae
daa
add
call
std
bound
push
pop
mov
inc
xchg
sub
loop
pop
mov
jg
lcall
sbb
mov
cwtl
test
fisttpll
in
dec
xchg
push
fdivs
test
jg
mov
loop
rcrl
fisttpl
xor
mov
bound
shrb
dec
jo
incl
push
ret
sbb
and
inc
and
cmp
int3
outsb
jl
jo
and
incl
movsl
cmp
stos
mov
pusha
insb
cmp
push
leave
daa
sbb
xchg
movsl
adcb
ret
incl
adc
subl
pop
clc
sub
jp
adcb
rol
xchg
dec
jg
jg
cmp
mov
idivl
test
push
fucom
push
mov
push
frstor
xchg
icebp
dec
fldenv
mov
das
ljmp
pop
mov
movsl
lcall
push
stos
call
cmp
lcall
push
dec
lods
sub
inc
or
pop
xor
enter
sub
jmp
inc
daa
ja
daa
fisubrs
push
je
dec
jmp
cmpsb
call
xor
push
jle
or
imul
push
test
imul
push
jno
inc
out
sbb
adc
push
sub
lcall
lahf
adc
dec
roll
xor
cmp
scas
adcl
or
fs
test
lcall
rcrl
xor
or
jp
cmp
jnp
mov
into
lds
or
andl
hlt
nop
inc
rolb
jp
pop
push
dec
enter
jae
fiaddl
mov
lcall
cmp
inc
shll
xchg
lods
mov
push
aad
xor
mov
add
ds
sbb
jb
out
sbb
sbb
xchg
imul
mov
rcl
mul
or
lcall
sar
or
fucom
mov
call
ljmp
jmp
in
lcall
adc
xor
cmp
mov
add
mov
or
mov
and
cmp
add
in
in
xor
sbb
in
mov
or
ljmp
je
add
push
push
ljmp
in
shll
and
stos
pop
icebp
scas
dec
leave
mov
mov
jp
out
js
imul
cmpsb
inc
mov
hlt
jb
push
push
cmpsb
or
pop
jl
mov
int
xchg
xor
pushf
or
call
ja
xchg
push
test
push
test
test
mov
inc
outsl
out
add
popa
add
sar
xchg
inc
aam
xchg
fwait
ljmp
mov
pop
push
jg
iret
imul
lcall
ret
in
daa
jl
sub
jnp
incl
mov
xchg
dec
cli
leave
hlt
mov
mov
pop
outsl
sahf
xor
pop
adc
dec
insb
dec
scas
cli
decl
sbb
sub
pop
dec
mov
jnp
sbb
lcall
mov
add
or
mov
call
aad
loop
xor
or
and
mov
fimull
test
test
cmp
push
insb
sti
jns
cs
mov
fucom
out
and
insb
xchg
into
repz
ljmp
sbb
xor
mov
jmp
mov
nop
sbb
cmp
call
or
dec
dec
cwtl
mov
ret
fidivl
and
out
subl
ljmp
jbe
fs
sbb
mov
jmp
jge
test
xor
sti
test
lcall
stc
fmuls
clc
or
fwait
sbb
inc
pop
hlt
mov
int
mov
push
cs
inc
mov
dec
push
rolb
mov
out
scas
jns
ja
xchg
mov
jae,pt
or
dec
pop
mov
mov
cltd
cmpsl
add
fdivrl
add
pop
and
pop
mov
enter
pushl
shrl
cli
mov
push
dec
addb
in
andl
call
xor
cwtl
in
mov
cltd
pop
xor
cld
pop
mov
ljmp
insb
arpl
fisttps
std
fwait
inc
adc
or
ljmp
rolb
inc
mov
jbe
dec
mov
mov
clc
push
inc
xchg
add
outsl
pop
xchg
or
movsb
push
incl
mov
cmp
add
sbb
mov
xchg
int3
dec
jno
fcomip
jmp
iret
mov
call
test
sbb
ljmp
das
mov
cmp
push
and
addr16
dec
fwait
xchg
lods
fnstenv
adc
xchg
cs
jecxz
xchg
mov
incl
lods
lock
pop
ret
fisubrl
mov
pushf
and
jns
fnstenv
sub
cmpsl
out
fwait
jae
movsl
mov
hlt
mov
out
fcoml
mov
dec
mov
lcall
and
je
push
ret
add
push
jns
mov
sti
add
flds
mov
push
add
lock
lcall
add
and
push
lahf
sbb
cmc
mov
std
cs
inc
data16
sbb
decl
dec
js
fs
jg
add
sub
mov
call
add
hlt
jg
ljmp
fsubs
ljmp
jo
ss
push
pop
cli
stos
insb
aaa
fsubl
mov
mulb
or
sbb
lcall
nop
rol
sbb
aam
add
stos
sbbb
and
jg
call
mov
xchg
sub
pop
nop
add
mov
mov
call
cs
sub
call
xchg
pushl
xor
dec
test
sub
int
jp
imul
insl
movsb
add
dec
or
jg
test
aam
rcll
daa
mov
inc
add
ljmp
push
fdivl
sarl
cmc
inc
dec
lods
cwtl
push
inc
inc
mov
mov
ret
ret
notb
mov
lcall
or
sbb
insb
pop
pop
shl
mov
lds
push
mov
mov
xor
push
gs
lcall
inc
xor
test
dec
mov
mov
jb
test
dec
sbb
mov
mov
cmpl
aaa
movsb
push
fsubrp
mov
xchg
push
lock
pushl
shl
cmp
mov
xchg
push
pop
push
inc
or
adc
fisttpl
inc
pop
rclb
and
nop
inc
ss
sub
ljmp
xchg
rclb
les
in
pop
loopne
or
or
adcb
and
inc
fwait
addr16
inc
xor
lods
jle
xor
and
mov
xchg
scas
pop
lret
jl
fstpt
fidivl
fcomps
test
repz
ljmp
bound
dec
sub
mov
jp
clc
cli
mov
push
hlt
mov
lods
xchg
sub
mov
aas
mov
and
sti
push
mov
push
sub
out
inc
fwait
and
add
and
lret
and
sub
adc
inc
in
mov
adc
ret
jo
inc
mov
shrb
repz
popl
mov
into
xchg
mov
jb
lret
jge
lcall
mov
fdiv
fiadds
daa
addr16
xor
inc
add
jmp
lret
out
arpl
lcall
push
dec
dec
mov
pushf
inc
add
or
mov
cmpb
adc
pop
jge,pt
lcall
fmul
push
xchg
shll
test
pop
pushf
imul
jae
repz
xchg
test
cmp
xor
test
cs
les
pop
mov
inc
mov
call
pop
jbe
lcall
mov
sbb
ret
pushl
movsb
pop
std
nop
je
inc
sbb
sub
mov
rclb
cmpsl
push
lds
inc
mov
ja
rclb
fs
ss
call
lea
adc
cltd
and
ss
loopne
xor
mov
test
fsubs
outsl
fcompl
xchg
cmp
call
xchg
mov
jp
and
adc
jecxz
stc
test
call
dec
add
sbb
pop
sub
js,pn
in
bound
mov
mov
clc
call
dec
or
mov
ss
test
push
add
ljmp
and
test
in
jle
int3
syscall
adc
ficomps
rolb
dec
xadd
jno
cmp
or
cmpsb
jmp
outsl
xor
fwait
cwtl
mov
xchg
sub
lcall
mov
stos
add
fs
js
loopne
icebp
jl
jmp
cmp
sbb
push
cmc
addb
inc
cld
imul
xchg
push
scas
and
decl
push
jo
xor
rcl
inc
and
push
sbb
dec
mov
popf
mov
scas
jg
repnz
xchg
je
push
loope
movsb
add
es
sbb
call
cmp
data16
ljmp
loope
push
xor
inc
stos
sbb
mov
push
shlb
push
decl
nop
es
mov
pop
jae
inc
movsb
jp
cs
dec
or
ljmp
mov
or
aam
ss
mov
int3
ret
ljmp
jmp
loopne
and
aaa
mov
sub
mov
pop
mov
cli
decl
lods
repz
in
subb
out
mov
in
rcpps
aam
nop
hlt
ljmp
sub
test
jno
inc
fldl
decl
cs
enter
sub
mov
popf
insl
jae
xchg
lcall
inc
jo
cld
dec
mov
cltd
sub
xchg
cwtl
sub
jno
in
dec
cltd
movsb
lea
sub
push
xlat
testb
jo
in
insl
fistpl
dec
jno
xchg
call
pop
nop
call
repnz
lcall
sub
sbb
pop
push
inc
in
je
cld
pushl
mov
jle
adc
cmp
movsb
mov
mov
call
imul
leave
stos
gs
mov
lods
cmpsb
xor
shll
repnz
popfw
icebp
lahf
call
movsl
and
lcall
pushl
insl
aam
adc
cmp
in
andb
mov
out
or
iret
adc
dec
and
call
fnstcw
mov
adc
cmc
int
or
add
in
pop
lcall
call
xchg
bound
sub
imul
mov
aas
mov
aam
or
pop
lock
cmp
mov
cmp
sbb
call
fnsave
jne
pop
pop
sub
iret
push
jo
add
mov
dec
xor
in
mov
and
out
push
call
movsl
xor
int3
cmp
lcall
loop
vmwrite
mov
xor
test
aad
rcll
mov
cmpsb
inc
xor
pushf
adc
orb
sub
jmp
enter
lea
jne
xchg
pop
dec
cmc
pop
scas
ds
fwait
stos
insl
mov
movsb
loopne
lods
cmp
lcall
mov
mov
enter
mov
mov
jb
repz
fisttps
dec
add
jge
xor
out
push
xchg
adc
clc
cmp
mov
int3
jg
lahf
cwtl
out
sbb
add
mov
popa
sub
pop
mov
xchg
stc
sahf
adc
jnp
in
ret
inc
lods
jae
push
shll
sysenter
js
sahf
je
push
ljmp
or
pushf
ret
inc
mov
clc
xor
pop
repz
test
mov
daa
pushl
or
pop
xchg
insl
filds
add
mov
sub
imul
push
mov
xchg
rcll
popl
mov
lcall
mov
add
fbstp
xor
add
cltd
enter
aaa
xor
jnp
outsl
lock
negl
dec
scas
aam
dec
mov
push
hlt
dec
lcall
mov
out
lcall
and
jge
push
in
sub
sub
fdivl
pushl
loope
fsts
ret
in
popf
xor
aad
add
fisttpl
out
sbb
decl
lods
test
jge
sub
pop
fwait
lea
xchg
insl
aas
cmp
scas
pusha
lahf
cltd
lahf
jle
add
rcl
fisttps
cmpsb
pop
cmp
std
cld
pop
shl
std
std
jns
xchg
aam
and
dec
aas
add
stos
jmp
inc
ljmp
push
in
push
or
popa
fsubrs
mov
es
mov
mov
jmp
xchg
les
das
test
pusha
ja
test
scas
fcmovb
fsubl
push
lods
shrb
rolb
stos
icebp
in
or
fmuls
jle
mov
fbstp
xchg
lret
leave
add
or
cmc
push
scas
mov
out
add
jmp
adc
mov
in
gs
mov
mov
fisubrs
cmp
xor
out
movsl
pop
sahf
pop
xchg
lcall
add
pop
lods
scas
out
or
or
mov
mov
fisubrl
repnz
mov
jmp
dec
lcall
ds
arpl
in
scas
movsl
push
inc
and
fisubrs
sbb
adc
inc
shr
xor
mov
incl
les
sub
ret
enter
add
call
adc
fsubr
cmpsl
jb
lahf
mov
mov
je
ljmp
mov
add
dec
movsb
xchg
stos
add
jo
dec
in
mov
push
mov
dec
and
add
test
and
or
adc
and
insb
lds
lock
mov
xor
out
or
out
inc
mov
mov
lret
loope
adcl
mov
out
or
je
push
adc
or
rcrb
je
adc
or
bound
jnp
cld
pop
sub
adc
dec
mov
sbb
pop
or
adc
pop
out
mov
arpl
adc
mov
decl
add
shr
ds
jo
cmp
inc
jecxz
cltd
gs
sub
mov
xchg
ds
in
insb
inc
cmp
mov
or
pushf
sub
call
lock
inc
aam
inc
pusha
insl
mov
push
jo
ljmp
out
sbb
imul
mov
ljmp
lods
add
iret
sbb
lods
or
or
mov
dec
call
sbb
scas
enter
rorb
or
in
outsb
pushf
insb
and
loopne
imul
std
incl
mov
ljmp
movsl
stc
xorb
lods
out
jg
add
das
shlb
enter
xor
lock
incl
push
cmpsl
sub
xchg
and
fwait
iret
daa
loope
cli
loop
push
pop
loop
sbb
xor
clc
pop
insl
add
mov
and
and
pushl
lret
push
repnz
add
sub
mov
xchg
and
or
fsts
pushl
in
call
dec
and
pushf
iret
adc
jmp
push
inc
cli
and
in
xor
out
jbe
mov
xchg
push
ljmp
inc
dec
cmpsb
adc
and
and
add
ljmp
incl
sub
push
add
xor
mov
mov
adc
dec
jbe
aas
mov
fmull
mov
dec
xor
idivb
lods
aam
sbb
adc
pushl
xchg
mov
lods
mov
dec
cmp
mov
adc
dec
adc
pushf
inc
xor
dec
cmp
roll
arpl
mov
das
push
es
xchg
pop
push
cs
jg
push
testl
xchg
push
and
adc
into
adc
push
pop
int3
mov
jg
enter
pushl
iret
rcr
mov
test
mov
or
jl
fs
ljmp
aaa
daa
push
xorb
test
outsl
xchg
aam
ss
xor
xor
jmp
dec
mov
sub
adc
mov
hlt
cmp
xchg
mov
fs
sbb
dec
test
jbe
xchg
sub
mulb
rorb
call
cmpsb
decl
mov
xchg
adc
inc
test
adc
pop
cmp
sub
les
lock
ss
dec
inc
adc
mov
add
pushl
jo
cmpsb
sbb
or
subb
mov
sbb
das
test
hlt
lock
incl
cmc
sub
sub
mov
xor
out
mov
inc
shlb
jno
out
dec
and
push
push
sub
test
jecxz
mov
pop
dec
xor
adc
mov
fimuls
pop
xchg
decl
jb
inc
push
jg
movaps
xor
push
xor
push
mov
fadds
xchg
mov
lretw
out
dec
jg
imul
int
pushf
dec
push
notl
decl
jle
std
add
sbb
pop
pop
int
dec
and
xchg
cmpsl
mov
mov
test
add
movsb
xor
les
inc
mov
orb
mov
dec
aas
pop
inc
cmp
xor
call
xor
dec
mov
sub
iret
js
add
imul
push
mov
push
sbbb
loop
sub
call
jne
jl
push
nop
lods
dec
jbe
dec
jb
dec
xchg
insb
outsl
xchg
adc
dec
lahf
lock
incl
sti
or
push
push
daa
add
dec
rcrl
je
iret
xor
xorl
popf
add
lea
subb
lcall
xor
iret
dec
sbb
push
sub
arpl
mov
js
mov
clc
jae
jns
dec
inc
mov
mov
cmpsb
ja
test
out
jmp
gs
and
ja
divb
pop
mov
xchg
repnz
sub
call
mov
icebp
ljmp
shl
jge
ja
in
sub
outsb
inc
pop
cs
inc
mov
stos
mov
pop
hlt
ljmp
dec
push
stos
sub
lahf
hlt
iret
jge
sub
in
inc
ljmp
inc
xor
xlat
jp
in
jo
inc
push
push
bswap
xchg
add
push
ret
inc
lea
decb
ljmp
into
sbb
mov
mov
stos
mov
dec
push
insb
push
pop
xchg
das
outsl
adc
xchg
and
mov
scas
clc
jmp
test
mov
adc
js
es
ja
div
cmc
sub
sbb
dec
cmc
adc
outsl
and
out
xchg
gs
out
aad
orb
sub
inc
xchg
push
xchg
jne
fdivs
cmp
or
or
sub
mov
addr16
and
xchg
aaa
jns
dec
insb
or
dec
or
sbb
outsl
push
inc
clc
js
xchg
repz
jmp
cmp
fadd
mov
add
mov
or
jg
or
test
xchg
or
out
nop
inc
cmp
jmp
xchg
xchg
notl
mov
in
data16
notl
idivl
ja
lods
push
push
mov
scas
adc
lret
les
inc
dec
inc
je
mov
ljmp
mov
mov
push
sbb
sbbb
test
mov
mov
repnz
icebp
inc
repz
lods
leave
adc
and
lods
jb
das
lea
sti
dec
jae
incl
in
adc
es
out
mov
xor
call
in
dec
mov
lods
in
cmp
es
gs
mov
jbe
and
repnz
in
ss
push
mov
rcl
cmpb
sub
or
incl
js
incb
xchg
scas
mov
stc
adcl
pop
pop
dec
cmp
sti
cmp
xchg
lahf
mull
mov
movb
loopne
jge
xchg
or
test
jg
mov
xchg
fisubrl
notl
pop
xchg
push
adc
cmpsl
sbb
mov
ja
addr16
adc
push
stos
repnz
sbb
mov
imul
js
push
pop
dec
sbb
in
incl
sub
xchg
ret
add
mov
push
in
ja
sub
fiaddl
movsb
mov
and
ret
dec
or
push
clc
fistps
mov
xchg
pop
jg
stos
loopne
mov
clc
dec
dec
adc
es
rcrl
out
push
jns
or
cmp
xor
sbb
call
mov
outsl
gs
pop
push
dec
adc
pusha
add
xor
add
inc
xchg
sbb
jp
inc
cltd
xchg
fisubl
stos
mov
psubw
mov
fidivl
mov
sub
xchg
cmp
js
add
movsl
cmpsb
mov
lea
lcall
gs
stos
lods
cmp
mov
mov
xchg
test
cmp
jg
push
xchg
push
into
gs
mov
int3
adc
nop
jns
clc
decl
jae
mov
ret
inc
cltd
es
repnz
lods
ljmp
fildl
mov
add
mov
test
adc
cltd
add
hlt
inc
rdpmc
or
push
aad
testb
ljmp
popf
sub
cmp
lea
xchg
or
jp
mov
outsl
mov
loopne
test
or
mov
mov
jae
xor
ljmp
sbb
xchg
pop
cmp
sbb
fcmove
movsl
inc
pushf
stos
jge
jl
adcl
gs
inc
add
pop
test
sbb
cld
pop
push
inc
js
jnp
lcall
ds
push
in
fcomip
jnp
out
xchg
cmc
fldt
lea
jne
imul
or
lcall
cmpsl
cmpsb
xchg
sub
mov
stos
inc
in
stos
mov
inc
pop
out
nop
xchg
fiaddl
outsl
das
ljmp
lods
mov
mov
inc
cmc
out
mov
jmp
sub
adc
add
outsl
repz
push
or
mov
mov
jns
repnz
lret
scas
add
ljmp
xchg
jl
and
adc
lods
xchg
repz
mov
adc
mov
push
jo
xor
ljmp
push
imul
subb
iret
sti
cmp
mov
mov
add
lods
jl
inc
in
cli
aaa
xchg
sbb
fwait
sbb
sbb
daa
mov
cltd
sti
sbbl
or
mov
xchg
mov
add
cmp
push
punpckhbw
imul
jbe
cmpb
out
repz
inc
mov
mov
dec
pop
test
cld
sub
in
std
scas
cmpsl
jle
aam
push
xor
in
ret
fmull
loop
dec
insb
stos
adc
decl
push
jg
sbb
sub
adc
mov
push
test
fisubs
jb
xchg
mov
out
jo
es
sub
sub
and
insb
cli
aad
clc
pusha
daa
mov
andb
sub
jp
mov
adc
push
jb
fistpll
sbb
adc
push
and
push
jp
cs
xor
mov
xchg
or
mov
xor
fistl
mov
jg
dec
mov
cmpb
sbb
xor
sub
or
xchg
jnp
iret
cltd
jp
call
lock
lahf
clc
adc
xchg
adc
cmpsl
push
inc
and
and
ret
int3
or
lcall
repz
clc
dec
rcrb
pop
inc
fs
add
sub
sub
ljmp
inc
add
and
enter
out
push
pop
stos
jne
aad
outsl
mov
and
incl
jbe
flds
mov
mov
inc
xchg
sbb
in
adc
incl
sbb
and
orl
jp
fsubs
push
adc
arpl
sbb
pushl
cmpsb
int
xor
rclb
ss
ljmp
xchg
dec
imulb
sub
cltd
dec
mov
adc
pushl
imul
ret
mov
adc
push
shlb
cmpsl
add
xchg
sbb
inc
or
scas
fnstsw
or
jnp
cmp
add
pop
mov
add
clc
sub
mov
aad
cwtl
cmp
jg
fnstenv
imul
aad
scas
popf
mov
xor
iret
pop
mov
shl
incl
incb
or
xor
jo
pop
cmp
ffreep
orl
lods
pusha
mov
ljmp
ljmp
cmc
mov
xchg
rolb
push
sub
mov
jge
int3
dec
or
scas
cmp
ds
ljmp
jbe
imul
js
orb
inc
sbbl
loope
adc
loope
outsl
push
mov
xchg
clc
call
and
adc
mov
ds
adc
jle
rorl
push
or
xchg
inc
aaa
fcmove
push
push
push
xchg
xchg
push
push
xor
adcb
ljmp
xor
push
push
dec
inc
cmp
inc
inc
adc
in
dec
in
adc
jg
dec
dec
inc
xor
sbb
mov
arpl
pop
nop
imul
pop
sahf
jp
jne
xor
and
repz
out
mov
data16
mov
mov
xchg
cli
xchg
push
cs
or
pushl
adc
jge
cmp
call
jmp
insl
ret
lcall
stos
je
pop
mov
mov
adc
lahf
push
outsl
sar
lcall
les
test
into
push
lcall
lahf
jge
and
std
dec
loopne
in
and
mov
mov
ljmp
push
out
push
adc
jmp
add
fldcw
pop
scas
mov
in
xchg
and
sbb
mov
clc
rorb
into
or
inc
adc
loope
xchg
les
or
jno
push
and
incl
and
jne
xchg
dec
dec
cmpsb
xchg
repnz
sub
mov
aas
jmp
adc
pop
mov
leave
lcall
lahf
jno
jmp
push
popf
jl
mov
rcr
xchg
pop
cmp
add
shrl
mov
decl
test
push
popf
popf
call
push
mov
fstpl
pusha
ljmp
push
hlt
push
inc
enter
iret
lods
or
xlat
lods
mov
or
decl
jge
lock
cmp
shll
sub
jle
lcall
inc
push
sbb
call
jnp
jns
inc
mov
addr16
or
call
ljmp
xor
outsl
xchg
loope
rclb
int
xor
lcall
cmc
aam
dec
insl
stc
jecxz
inc
and
push
pop
loope
decl
fs
xchg
aad
movsb
mov
push
mov
sub
cld
jecxz,pt
jb
pop
mov
pop
rolb
rcl
ljmp
add
add
cwtl
jbe
mov
dec
xchg
add
inc
test
xchg
jae
cmc
mov
lock
insl
pop
fidivrl
jg
aad
mov
pop
cmc
sub
mov
mov
outsl
mov
ljmp
push
mov
call
inc
lods
cmc
cwtl
inc
lcall
cltd
ret
mov
cmp
jae
xchg
iret
pop
fiadds
sbb
jmp
pushf
or
lcall
pop
add
mov
mov
shl
je
cmp
sbb
lcall
and
inc
add
xchg
xchg
mov
inc
or
enter
in
pop
xchg
sbb
xor
jns
and
jo
out
xchg
shlb
mov
fcoms
dec
call
lcall
call
test
pop
push
and
add
js
sub
lret
xchg
mov
mov
mov
adc
and
pop
dec
and
inc
pop
add
jg
sub
pop
sbb
insb
js
mov
mov
or
sbb
cli
sbb
outsb
sub
xchg
add
cmp
mov
ret
pop
pop
insl
fwait
adc
in
ret
imul
push
sbb
loopne
mov
pop
hlt
mov
push
sub
shlb
insb
je
cltd
lret
ljmp
jbe
lcall
add
inc
out
ljmp
nop
aas
pop
mov
jns
lret
inc
add
push
inc
and
and
push
mov
loop
jp
icebp
inc
ljmp
pop
pop
xchg
sbb
es
add
push
or
inc
insb
hlt
mov
adc
leave
dec
lret
jmp
out
in
pop
xchg
das
dec
adc
leave
xchg
and
fwait
xchg
insb
daa
and
mov
fcos
ljmp
jg
fs
or
ret
ficoml
data16
add
xor
jl
sub
mov
and
pop
dec
xor
mov
push
mov
ljmp
jmp
sbb
cmp
jg
shrb
mov
or
xor
sub
mov
sub
mov
fistl
pause
push
dec
push
sbb
cmp
cmp
cmp
cmp
inc
imul
xor
add
mulb
or
jg
rep
enter
std
cmp
or
imul
call
fsts
inc
test
sub
and
mov
or
decl
and
popf
pop
sti
push
and
jmp
push
xchg
adc
ljmp
dec
xchg
pop
push
mov
pushf
stos
inc
and
fwait
lods
push
dec
xor
inc
ljmp
xchg
and
cmp
movsl
pop
cmc
in
add
push
cld
sbb
je
add
insb
and
pusha
or
lods
dec
pop
mov
cmpps
pushl
mov
lea
nop
adc
mov
mov
test
arpl
movsl
icebp
pushl
and
jp
mov
fcoms
pop
movsb
lods
lock
inc
js
mov
mov
add
aaa
call
lcall
call
aaa
nop
scas
push
jns
xlat
add
loopne
or
pop
fnstsw
inc
inc
jmp
inc
inc
ja
in
in
out
pushf
fcmovu
stc
stc
inc
jb
das
call
jge
mov
ljmp
xchg
xchg
dec
xchg
ljmp
cld
notb
sub
lock
jg
lcall
test
mov
gs
add
xchg
dec
icebp
push
cltd
out
daa
xor
jge
jmp
adc
int3
lods
sbb
xchg
cli
xlat
adc
xchg
mov
dec
pop
and
fdiv
xor
in
xchg
test
gs
dec
xchg
push
imul
xchg
cmc
jecxz
incl
fstps
or
mov
mov
fists
mov
xlat
sbb
mov
lock
adc
push
jge
sub
jecxz
jmp
or
mov
sub
lcall
mov
mov
hlt
inc
in
cwtl
xchg
bound
jp,pn
decl
push
mov
dec
jbe
and
push
dec
mov
xchg
or
and
lcall
mov
sarb
pop
mov
xlat
jnp
iret
jnp
pusha
sbb
pushl
mov
mov
sub
xchg
lea
stos
lret
mov
popa
mov
cltd
and
sub
and
ljmp
into
jge
adc
dec
or
imul
lds
loop
jg
adc
les
in
popl
push
add
loopne
mov
nop
cltd
add
pop
loopne
pop
adcl
fiadds
inc
dec
pop
mov
jecxz
and
incl
xchg
mov
inc
lcall
inc
push
push
pop
push
nop
int3
rcl
int3
adc
loopne
jmp
push
lret
js
pop
xchg
mov
in
repz
jbe
ds
ljmp
out
in
repnz
arpl
xchg
lret
outsb
xor
mov
sub
ds
ljmp
push
jns
popa
test
popa
scas
xchg
xor
pushl
xchg
gs
imul
decl
dec
xchg
lock
pop
jg
push
icebp
arpl
pop
pop
push
aaa
xchg
in
outsb
mov
add
xchg
call
push
outsb
sahf
and
mov
jmp
and
es
ss
xor
ret
cmc
jg
js
rolb
out
pop
lds
inc
jns
push
adc
adc
cmc
adc
incl
add
or
adc
inc
outsb
xchg
push
dec
std
mov
push
jb
xor
aam
int3
xor
cli
fwait
inc
lret
and
xchg
out
cli
cs
pop
fdivl
mov
adc
jae
xchg
sub
decl
adc
xor
inc
dec
popa
sbb
test
adc
in
jle
sub
data16
pop
push
lret
push
pushl
push
xor
inc
aaa
and
pop
xchg
inc
repnz
cmp
insl
shll
mov
jg
test
pop
dec
shll
shrl
ljmp
add
jg
loopne
push
insl
ss
sub
popa
cmp
rol
xor
ja
sbb
adc
mov
sub
loop
cld
add
pop
arpl
arpl
mov
fcomip
ljmp
cmc
jb
jne
cltd
inc
and
jo
inc
add
xchg
inc
add
push
repnz
incl
and
push
inc
jl
push
mov
jno
ret
das
adc
jnp
cmpsl
mov
xor
push
jno
aad
adc
adc
imul
xor
popf
test
cmpsl
push
lcall
push
test
and
inc
xor
jecxz
dec
mov
inc
xchg
and
sub
xchg
aad
xchg
sbb
test
aaa
sub
mov
fsubrs
insl
leave
es
pop
xchg
test
incl
mov
mov
insb
cmp
lcall
mov
sub
mulb
call
arpl
insl
lcall
loop
sbb
xchg
incl
and
pop
mov
jae
or
add
mov
push
dec
in
ja
adc
je
lea
cmpb
push
dec
and
decl
add
rcl
xchg
adc
test
xor
call
push
fcoms
lret
adc
jmp
xor
nop
out
rorl
jb
push
or
adc
pop
or
out
cli
jmp
repz
ds
in
cmp
pop
fsubrs
inc
push
pop
cmp
add
arpl
adcb
dec
ljmp
test
lcall
addr16
xchg
xorl
leave
push
xchg
fnstenv
jns
push
jae
xchg
ja
outsb
dec
movb
xchg
dec
out
pop
inc
push
lret
add
xor
xor
popa
inc
xor
add
push
jg
cmp
inc
adc
aaa
mov
mov
jno
push
pop
or
test
jmp
mov
inc
or
mov
xor
cmc
xor
repz
dec
cmp
adc
and
jb
xor
data16
dec
ret
xchg
push
movsl
push
notb
ljmp
cltd
adc
ds
sub
inc
jle
test
mov
ljmp
mov
dec
mov
inc
sub
mulb
and
jo
jbe
jmp
outsb
push
test
push
mov
xchg
jg
adc
mov
xchg
xchg
icebp
push
xchg
xor
aad
push
cwtl
pop
out
fs
dec
xlat
jns
out
fs
orb
aas
push
xor
fwait
sbb
aaa
mov
in
jmp
cmp
add
jns
aaa
dec
push
jns
call
fimull
out
clc
jmp
push
sub
addr16
jp
repnz
jae
push
repz
outsl
testb
decb
pop
pop
shll
xor
rcll
call
mov
add
stc
adc
xor
pushl
sbb
jbe
aaa
roll
xchg
loopne
dec
jbe
fwait
shll
inc
or
ja
pusha
mull
jmp
lods
dec
sub
stos
sub
movsl
xorb
jns
addl
inc
dec
push
jg
jo
add
and
or
sub
dec
outsb
mov
xchg
das
btc
pushf
test
or
loopne
inc
icebp
je
or
add
ljmp
cmp
dec
mov
xor
inc
and
inc
cmpl
jmp
adc
enter
and
inc
add
xchg
inc
mov
adc
test
stc
push
pushl
pop
nop
leave
lcall
cwtl
lcall
test
pop
cmp
inc
call
cmpsl
cwtl
jge
cmp
rorb
mov
xchg
and
add
out
cmc
adc
cmp
pop
mov
add
cwtl
ljmp
ljmp
addl
inc
mov
scas
xor
xchg
shlb
xorl
pop
cmc
lcall
arpl
insb
pop
cmpsb
lods
notl
outsb
imul
dec
dec
imul
inc
mov
mov
or
fcomip
and
push
cmpsl
xor
sub
fsts
mov
ret
adc
or
addr16
aas
nop
scas
insb
or
call
andl
push
inc
sarb
mov
sbbl
xchg
mov
pushl
sarl
pop
es
pop
in
mov
push
pop
pusha
data16
cmp
clc
lahf
add
aam
and
push
mov
push
aad
lock
and
test
adc
pop
pop
icebp
lcall
sub
inc
stos
cltd
aam
imul
loop
lcall
pushl
push
and
xlat
ds
cmp
push
test
xchg
sbb
stos
jne
call
fcmovb
es
popf
xchg
mov
pop
movsb
inc
mov
push
and
mov
sub
mov
pop
mov
pushf
mov
pop
stos
call
mov
and
cmp
push
ja
roll
mov
add
ss
push
cld
jp
jmp
pop
lock
push
sbb
std
ljmp
add
jne
ja
daa
xchg
inc
orb
sub
mov
push
addb
adc
arpl
rcrl
ljmp
test
push
loope
test
jb
push
int3
mov
popa
sbb
mov
pushl
popl
mov
sbb
je
clc
mov
daa
lcall
jnp
xor
cltd
pusha
enter
cltd
stos
in
inc
jae
xlat
mov
cmp
and
pop
bound
mov
add
mov
lods
pusha
dec
shlb
dec
sbb
xchg
popf
lods
int3
mov
dec
fwait
gs
ljmp
sub
bound
mov
cmp
mov
xchg
cmpb
lahf
sbb
dec
pusha
vcvttsd2si
insl
lret
lret
sbb
enter
shrl
es
mov
push
dec
in
mov
mov
inc
push
lds
pop
add
adc
imul
aas
and
aam
pop
mov
cld
adc
adc
and
test
popf
adcb
adc
addr16
mov
add
or
pop
fcmovnu
scas
mov
in
mov
imul
pusha
inc
xchg
incl
data16
mov
jmp
insb
cmp
adc
add
stc
pop
je
pop
jo
imul
inc
push
aam
or
sahf
sub
lds
push
push
pop
mov
clc
jg
stos
bound
push
add
dec
pop
nop
ds
cmp
lret
dec
cmpsb
imul
pop
jmp
fsubl
xlat
ret
sub
hlt
sub
cltd
pop
lea
push
incl
inc
pusha
popa
fs
mov
sbb
lods
js
jle
fwait
sub
jne
jmp
dec
fcomip
cld
push
fstpl
pop
fst
xlat
dec
stos
int
push
add
fwait
mov
add
pop
add
sbb
js
ret
dec
dec
pop
dec
sub
xlat
dec
mov
sbb
addr16
out
mov
mov
jg
out
push
jo
insl
bnd
mov
retw
add
mov
sbb
add
dec
inc
lcall
pop
sar
hlt
adc
movsb
ret
dec
xchg
sub
sbb
mov
add
mov
fcoms
int
mov
fldl
test
movsl
jp
jl
jmp
cmp
cli
jl
push
jno
push
mov
sub
cmpsb
hlt
imul
dec
stos
movsb
jmp
hlt
mov
and
dec
inc
pusha
lret
add
and
out
mov
mov
decb
shlb
es
jmp
aaa
inc
mov
sbb
incl
push
sub
adc
cmpsb
insb
and
or
decl
lods
jb
sbb
cmp
xor
aas
jbe
lock
sbb
incl
popa
jp
cs
mov
jecxz
jnp
sti
jno
push
add
popf
mov
xor
inc
xor
testb
and
mov
mov
inc
inc
mov
jo
cld
or
aas
jb
movsb
mov
push
cmp
inc
jg
sbb
add
mov
fdivrs
add
mov
pop
adc
ret
xlat
cmp
add
mov
fmul
push
jns
lods
sub
mov
sub
aaa
rcrb
pop
hlt
call
mov
cmp
fldcw
sahf
push
mov
jb
xorl
jns
push
rorl
hlt
push
stc
xor
push
sahf
cltd
mov
ja
pop
mov
dec
mov
xor
fwait
decb
nop
out
push
lcall
rorb
inc
stos
pushl
loope
mov
sub
cmp
cmp
insl
push
inc
pop
cmp
cmp
clc
mov
stos
mov
inc
ds
fsts
dec
pop
icebp
add
rcrl
dec
pop
cmpb
and
jecxz
scas
lcall
add
movsb
ret
call
sbb
dec
sbb
les
cltd
cli
add
mov
jecxz
shlb
push
push
xchg
cmc
add
decl
rolb
out
mov
ljmp
push
adc
mov
js
ljmp
out
js
mov
fistpl
dec
mov
pop
into
in
faddl
nop
ret
push
mov
push
scas
enter
xor
add
ljmp
ljmp
push
cmpb
int3
adc
nop
ljmp
out
cltd
call
cli
pop
or
mov
xchg
imul
je
jg
lea
into
pusha
sub
test
imul
mov
dec
into
fcmovbe
scas
fsubrl
mov
mov
imull
lret
pushf
inc
stos
xchg
jne
jmp
adc
fisubrl
es
fnstcw
pushf
ss
jbe
push
inc
jmp
sbb
pop
add
out
pushf
xchg
pop
inc
fiaddl
pushl
mov
in
mov
pop
pusha
out
pop
adc
roll
call
push
nop
jge
mov
sahf
jp
push
dec
dec
int
and
add
imul
jge
stos
add
add
out
popf
fdiv
push
repnz
pop
add
into
and
adc
fbld
std
sidtl
shrb
pushf
cli
pushl
add
cmp
je
inc
jnp
out
data16
add
inc
cltd
in
aad
sub
adc
cmpsb
mov
mov
cmp
inc
sbb
fsubs
inc
xchg
or
and
addl
xchg
popa
in
sbb
mov
jg
xchg
pop
dec
fimull
or
mov
inc
pop
shlb
and
pop
and
lock
call
daa
cli
jl
mov
inc
cmp
sbb
xchg
push
shll
aad
push
lods
call
loopne
call
sbb
aad
adc
aad
fisttpll
ljmp
mov
pop
mov
mov
and
imul
add
and
mov
test
inc
cmp
mov
decl
pop
mov
push
in
adc
or
add
mov
insb
mov
add
sarl
mov
out
cmpsl
push
stos
pop
enter
lcall
push
xchg
mov
jae
pop
ljmp
call
lcall
in
push
mov
mov
ljmp
or
mov
shlb
fs
idiv
ljmp
bound
sahf
shrl
mov
cld
xor
cmpb
and
mov
test
mov
lock
incl
test
mov
inc
clc
in
aas
adc
icebp
and
sbb
call
mov
pop
pop
pop
jno
pop
pusha
fs
mov
pop
enter
pop
jl
sbb
sbb
xor
test
js
jmp
sub
mov
testl
dec
daa
aam
dec
sub
dec
in
cmpsl
mov
and
cmp
in
cs
add
imul
sbb
in
decl
iret
mov
scas
or
xor
or
inc
std
xchg
hlt
sub
ljmp
fucomip
inc
out
stos
and
sarl
or
sub
mov
incl
add
xor
cmp
push
enter
test
xor
pop
pop
dec
insb
incl
jbe
cmpsl
mov
loop
movsl
mov
lcall
call
cmp
shl
jp
ret
adc
sbb
in
or
divl
add
xor
scas
arpl
jg
or
lods
add
sub
dec
xor
mov
xor
sarb
push
mov
rcrb
loopne
fdivr
push
cli
add
mov
loop
sub
nop
adc
push
aam
lcall
push
imul
sbb
daa
mov
lea
xchg
test
cltd
fs
pushl
movsl
push
fldenv
dec
mov
mov
pop
int3
sbb
mov
mov
pop
xchg
call
enter
mov
mov
cmp
pushf
adc
mov
dec
insl
mov
dec
sbb
pushl
rorl
mov
movsl
mov
push
pop
jg
adc
lret
add
or
adc
daa
inc
call
ljmp
add
cs
in
fists
lea
mov
add
and
or
jge
xor
and
fildl
call
cmp
cld
call
ret
jb
pop
add
clc
jnp
sbb
pop
aam
ja
mov
pushl
cs
jmp
mov
lcall
mov
outsl
sbb
jno
sbb
dec
inc
adc
fbstp
mov
imul
sbb
incl
sub
push
je
inc
pushf
mov
fsts
add
dec
fcomip
jp
cmpsb
pop
nop
dec
sub
or
sub
mov
aaa
mov
cmp
loope
bound
lods
popa
arpl
sub
xor
mov
fcompl
hlt
incl
and
lahf
and
pop
adcl
add
popa
push
test
out
sbbb
dec
add
fistl
inc
lock
pushl
daa
js
and
xchg
bound
jno
outsb
xorb
or
xchg
ret
mov
or
fbstp
push
mov
push
jne
jo
xor
xchg
xchg
jnp
add
add
ljmp
add
xchg
into
mov
aaa
dec
bound
xchg
xor
cwtl
add
inc
mov
push
daa
addl
sub
sub
incl
lock
sbb
mov
mov
les
rorb
rorl
cltd
in
andb
jp
lds
lock
xor
sbb
and
mov
lcall
jmp
mov
pop
dec
data16
in
imul
dec
cmp
decl
nop
jo
mov
push
mov
xchg
push
jmpw
cli
jbe
mov
cmp
aaa
mov
fistpll
dec
push
shll
mov
mov
and
mov
sub
jg
aad
fcom
test
xchg
popa
sub
test
jg
sub
je
push
adc
or
in
or
ljmp
adc
push
sub
stc
dec
push
call
and
adc
mov
xchg
pop
jne
rcll
lcall
sub
call
mov
pop
in
cld
mov
xchg
mov
push
and
push
into
daa
and
stc
and
popa
repnz
sahf
call
fmull
aaa
xchg
clc
dec
scas
sbb
inc
add
call
adc
push
mov
and
or
cli
dec
arpl
int3
inc
sbb
xor
ds
sar
or
and
mov
xor
test
sub
fwait
jg
out
insb
adc
and
movsb
sbb
leave
test
cltd
loopne
mov
imul
fildl
xchg
adc
nop
mov
mov
movsb
xchg
shlb
add
xor
outsl
call
xchg
lret
bound
ja,pn
adc
push
repz
xor
sub
daa
pop
push
rorl
decl
mov
inc
xchg
sbb
add
or
and
dec
popa
jae
add
mov
incl
test
int3
dec
in
shl
sbb
sub
pop
and
cltd
inc
push
ret
out
push
jmp
jle,pt
pop
out
inc
call
mov
pop
mov
adc
sbb
mov
adc
leave
add
sar
incl
adc
inc
stos
cwtl
pop
pop
push
sub
or
shr
negl
addl
and
mov
inc
pop
sarb
xchg
xchg
cli
aaa
cwtl
setae
jno
cmp
nopl
sbb
push
push
and
cli
jg
sub
push
jae
dec
fwait
movsb
add
roll
incl
adc
les
push
loope
and
mov
mov
je
jae
decl
xor
mov
cmpsb
xchg
into
loopne
hlt
ds
rcrb
leave
push
mov
decl
aad
inc
test
js
sub
loop
push
mov
dec
xchg
mov
notl
sbb
and
xor
int3
rcl
jg
jp
add
sbb
xor
daa
dec
sarl
or
push
inc
clc
das
pop
push
fstl
mov
mov
adc
cltd
out
push
les
push
inc
arpl
scas
xchg
stos
ret
mov
lcall
mov
inc
inc
and
mov
inc
repnz
and
icebp
jns
pop
orl
cwtl
loope
dec
bnd
sub
int3
shll
lcall
in
decl
repz
sbb
cs
xor
inc
jno
jmp
mov
out
jbe
xor
sahf
xchg
adc
sub
and
and
push
in
cmpsl
fistl
lcall
call
leave
jmp
sub
jmp
popf
inc
rcrl
cmp
gs
jmp
aaa
mov
lods
dec
jp
cmp
sub
call
sub
adcl
lcall
es
xor
incl
addr16
or
inc
xchg
add
sti
dec
dec
cmp
add
sbb
or
xchg
aam
loop
clc
pop
jmp
into
push
cmp
ljmp
scas
pop
lock
pusha
test
pop
cli
fwait
pop
lret
mov
ljmp
popl
fs
adc
lods
rolb
testl
xchg
call
out
add
fsubs
call
xchg
dec
rcr
cs
jle
inc
add
sbb
aam
mov
rcrl
and
nop
insb
push
dec
mov
mov
sub
leave
insl
pop
std
movsl
inc
out
clc
aam
sub
es
arpl
fsubs
cmpb
jmp
cmpsl
mov
shrb
mov
inc
scas
sti
fwait
mov
test
jno
mov
and
clc
or
mov
roll
leave
rolb
dec
sub
or
jmp
loop
cmpl
add
or
mov
cmp
mov
cmp
sub
jmp
int3
or
mov
or
add
or
push
mov
js
shrb
jle
mov
adc
hlt
mov
mov
js
popa
stos
adc
ja
movsb
loopne,pn
incl
shlb
add
movsb
int
mov
sub
sbb
and
filds
inc
cmp
fcomps
lea
shlb
xor
mov
call
cld
call
and
imul
sub
and
xor
mov
dec
mov
mov
xchg
xor
aas
pusha
mov
add
cwtl
daa
decl
lock
sbb
cmpl
ret
cmp
mov
lcall
pushl
mov
or
test
sub
cli
sbb
movsb
mov
js
adc
mov
fisubl
or
inc
aaa
lock
roll
aam
push
stos
mov
mov
fstpt
cmp
cmpsb
jp
leave
enter
incl
adc
mov
mov
or
inc
inc
ret
xor
lods
and
pushl
xchg
adc
jo
in
dec
lcall
std
decl
jo
jmp
mov
jmp
into
xor
popa
dec
mov
sub
jb
loopne
or
pop
call
cmp
inc
adc
mov
mov
mov
call
pusha
sbb
jbe
les
mov
jecxz
fsubs
jl
cmp
pop
xchg
pop
std
fnsave
pushf
lret
vpshufd
mov
cmp
xor
inc
jae
mov
mov
addb
jg
mov
jge
mov
mov
dec
sti
lds
push
mov
imul
xchg
mov
xchg
inc
push
ror
cmpsb
xor
aam
cmp
and
mov
xor
or
or
xchg
outsb
dec
adc
adc
mov
loope
jmp
mov
push
mov
push
jle
inc
and
fbstp
stos
pusha
mov
pop
xor
rol
mov
adc
cmp
insb
xor
ljmp
mov
add
sti
and
addb
js
jnp
nop
xchg
popa
dec
lahf
cmp
mov
loop
and
xchg
hlt
xchg
leave
sbb
pop
and
mov
icebp
mov
sub
dec
decl
mov
repnz
adc
sub
loop
and
lret
cltd
add
dec
cmp
lret
aad
sbb
and
loope
push
int3
cmp
pop
push
jl
notl
pop
scas
xchg
icebp
ljmp
repz
jnp
cmp
sbb
inc
cli
push
gs
mov
lea
imul
ljmp
decb
in
rorb
movsb
dec
adc
xchg
xlat
mov
lock
inc
add
out
cmp
fmull
hlt
sahf
or
insl
xor
fcomip
add
add
push
sub
repz
es
jno
fldl
fwait
or
mov
rolb
decl
mov
loopne
sub
arpl
sub
sbb
or
jl
orl
dec
mov
xchg
fcomip
call
mov
mov
mov
xorl
dec
inc
mov
jg
incl
or
add
adc
jmp
out
in
cmp
decl
xor
ds
mov
xor
sub
add
mov
and
xchg
adc
jmp
push
and
cli
jnp
hlt
mov
mov
mov
jg
enter
fs
sub
mov
aad
or
shll
loop
xor
insb
ss
push
cmpl
fst
sarb
jne
cmp
mov
cmpsb
mov
cmp
mov
fisttps
or
test
dec
sub
cs
call
adc
inc
test
and
jno
and
cld
push
ljmp
push
jo,pn
shll
rorb
sbb
jg
mov
aam
mov
nop
mov
or
out
push
jg
mov
js
jge,pt
push
in
scas
add
pushl
in
add
dec
adc
jns
ss
xlat
add
adcb
in
das
sub
mov
pop
ljmp
test
jmp
xor
pop
std
je
push
inc
mov
cli
or
mov
sbb
in
jecxz
ja
pop
sbb
cmpsl
stos
pop
inc
fstpt
xor
add
add
aas
pop
and
push
scas
cmpsl
mov
ds
decl
adc
inc
sub
ret
add
pop
rol
adcl
dec
shll
pop
inc
pop
fsubrl
sub
test
or
pop
add
lret
push
sbb
mov
add
stos
jg
push
add
jp
dec
mov
pop
sbb
or
adc
es
test
je
dec
popf
mov
cmp
inc
call
mov
scas
mov
test
sbb
mov
fsubr
lock
push
fwait
lret
lods
mov
decl
fldl
lcall
rclb
cmp
jp
add
add
sub
lea
push
adc
incl
and
xor
decl
rolb
nop
xlat
mov
ljmp
and
adc
sbb
dec
push
mov
jae
push
insb
dec
inc
push
inc
movsl
inc
pop
sbb
and
call
mov
loopne
fisubrl
fnstenv
call
movsl
aam
inc
add
rolb
popf
fcmovnb
dec
popa
sbb
ret
pushl
xchg
lea
adc
loope
aad
outsb
test
push
jne
xchg
mov
adc
jg
clc
push
pop
out
cmp
push
adc
rorb
add
push
pop
test
lcall
push
dec
scas
jb
add
add
push
sub
sbb
adc
decl
jecxz
lea
int
mov
imul
fucomi
shr
push
mov
fdivr
jmp
push
ficoml
mov
xchg
sub
sbb
xlat
ret
add
ds
roll
cwtl
fcoml
sti
adc
jg
or
pop
lahf
pop
fdivrl
icebp
pop
les
mov
add
lods
mov
fiaddl
sbb
dec
pop
jne
mov
xchg
push
inc
inc
fnclex
loopne
mov
cmpsl
jmp
jnp
lret
mov
dec
shll
add
or
pop
gs
jle
pop
xchg
mov
incl
sbb
push
das
mov
imul
insl
in
and
add
ds
jmp
orl
je
push
je
addr16
pop
cmp
dec
lds
xor
and
mulb
pushf
mov
out
shl
cmc
add
lcall
xorb
js
out
popf
push
js
xor
sub
or
push
push
in
sub
mov
mov
int
xor
dec
cmp
nop
cld
sahf
push
nop
cli
incl
leave
xlat
inc
mov
repnz
xchg
aaa
push
imul
cmp
mov
cmc
fbld
push
pusha
xor
fbld
push
sub
or
mov
adc
xchg
imul
jno
aad
stos
xchg
nop
xchg
push
loop
xor
ljmp
clc
lods
sti
pop
dec
loopne
cmpsb
or
push
repnz
pop
cmp
mov
call
cld
lcall
es
insl
out
ds
jne
push
push
data16
out
adc
ljmp
mov
imul
mov
arpl
daa
mov
jb
jbe
cli
dec
mov
dec
and
pusha
arpl
dec
out
mov
ret
scas
in
lods
stos
rorb
adc
sub
ds
xchg
fldcw
jae
jmp
into
call
test
loop
mov
mov
nop
or
pop
sarl
insl
hlt
ljmp
outsb
nop
test
divb
aad
into
dec
sbb
inc
push
movsl
push
test
add
sub
add
mov
incl
sbb
or
push
sub
rolb
in
mov
jge
lods
test
dec
pushl
cmp
mov
push
stos
cld
iret
movhps
cmpsl
out
dec
loopne
sub
pushf
mov
loopne
xchg
jmp
ss
lret
cmpsb
or
aas
icebp
mov
sbb
push
mov
lcall
call
clc
mov
fdivrs
out
jecxz
in
mov
insb
adc
jno
divb
loopne
cmp
adc
stos
mov
repnz
repnz
insb
aad
push
aas
jno
mov
jne
push
xor
mov
pop
out
and
out
fdivs
jno
pop
sbb
xchg
repnz
loop
stos
lods
or
push
outsl
hlt
inc
imul
inc
sub
adc
icebp
fildll
jno
shlb
das
jae
das
sbb
cs
pop
ret
cmp
and
filds
sbb
hlt
sbb
xchg
sub
adc
mov
or
call
or
sbb
cmpsb
cmpsb
and
pop
mov
or
lcall
dec
cld
adc
sub
pop
popf
cwtl
add
pop
inc
xchg
nop
sub
jp
daa
push
es
mov
popa
cs
lcall
jb
xchg
sub
adc
jb
adcl
sub
jl
lahf
icebp
sub
insb
imul
sbb
jno
xchg
repnz
scas
jbe
pop
icebp
decl
and
jno
xchg
xchg
ljmp
bnd
repnz
icebp
xor
notl
jg
cmpsl
jbe
fcomip
jecxz
call
push
and
in
cs
xor
js
addr16
adc
inc
pop
shr
cli
call
fiadds
sub
xchg
cld
push
dec
mov
sbb
xchg
mov
decl
incb
daa
pusha
add
fs
out
inc
mov
or
or
cmc
rolb
or
jmp
lods
fmul
inc
dec
adc
lahf
dec
inc
inc
and
xchg
lock
loopne
inc
test
cmpsb
scas
lds
jbe
jb
sub
or
addr16
lods
mov
push
fwait
mov
clc
loopne
jnp
xchg
mov
sbb
jbe
pop
jae
icebp
jnp
fcomip
sbb
negl
pop
jl
call
std
ljmp
clc
test
in
jo
insl
clc
ja
outsl
push
pop
sti
jle
jg
ljmp
mov
sti
mov
mov
jnp
pop
jge
jl
iret
divl
divb
aas
rep
jge
outsl
sti
int
std
xchg
jle
insl
ss
jge
bnd
mul
lods
sub
mov
jmp
mov
test
ret
test
xor
imull
fsubrp
ljmp
push
adc
enter
ljmp
mov
iret
aaa
out
push
popf
je
cwtl
jbe
ja
ds
call
mov
xchg
xchg
int3
addr16
leave
nop
adc
jp
push
lods
testb
add
jmp
or
pop
inc
aas
xchg
js
incb
mov
cs
loopne
test
pop
out
sbb
nop
decl
int3
adc
sub
inc
outsb
insb
xor
dec
test
incl
and
in
jecxz
leave
sbb
je
sbb
or
xchg
sbb
pop
sar
pushl
aad
ljmp
sub
fldcw
shlb
mov
and
mov
sub
mov
roll
xlat
xchg
aaa
popf
mov
jns
sub
push
and
fs
insl
push
test
mov
pop
icebp
ljmp
mov
jmp
out
pop
mov
adc
les
pop
sti
jmp
cwtl
aaa
into
xor
int3
lcall
sar
or
add
xor
mov
iret
sub
jp
or
jae
pop
or
pop
fsubrp
andb
testl
fisubrs
push
in
pop
jbe
ljmp
nop
or
push
lods
lock
loop
ja
add
add
push
stc
add
mov
pop
out
pop
add
sbb
call
add
push
loopne
and
decl
push
adc
or
jg
shll
fisttps
jno
outsl
or
rolb
leave
daa
mov
rolb
push
enter
roll
cmp
incl
sub
and
pop
push
sbb
cmp
mov
mov
popf
js
push
xor
decl
push
cmpsb
mov
inc
stc
test
push
inc
jmp
adc
hlt
arpl
push
mov
mov
in
inc
bound
aam
call
sbb
xor
push
push
fidivs
movsl
in
jp
icebp
inc
ja
popa
test
sbb
decl
stc
es
inc
and
in
sbb
cltd
mov
mov
xchg
cmp
fildll
mov
popa
enter
push
or
sar
jmp
cmpsl
popf
lcall
sbb
jns
add
mov
inc
movsl
cwtl
dec
sub
ljmp
cmc
inc
sbb
xor
nop
pop
fmull
adc
xchg
inc
ja
mov
fistpll
repnz
inc
sbb
hlt
and
push
bound
jg
incl
divb
mov
push
hlt
pop
mov
adc
cmp
mov
ja
call
orb
pop
inc
sbb
enter
ds
push
xor
inc
push
cli
test
xchg
inc
incb
icebp
xchg
pop
push
jl
lds
ftst
xchg
push
cmp
cwtl
gs
dec
cmc
and
dec
xor
dec
insl
in
xchg
push
jno
lods
test
pushf
xor
cmc
repnz
ljmp
xlat
pop
dec
stos
in
jae
ds
mov
popf
cmp
aaa
std
lcall
add
clc
shll
sub
push
sbb
xchg
pop
fiaddl
add
test
mov
mov
dec
ja
fstpt
push
lret
cmp
shlb
mov
shl
fidivs
push
push
mov
jns
xchg
aaa
movl
filds
mov
in
sbbl
clc
cmp
jmp
xchg
push
inc
test
add
lcall
pop
dec
dec
icebp
out
adc
jmp
lds
xor
cmp
shlb
mov
cmp
shl
decl
pop
test
cmc
mov
cmp
mov
fbld
push
incl
aaa
rcrl
jmp
jl
cld
jmp
ljmp
fbstp
mov
out
add
add
pop
jle
xor
sub
bound
adc
xor
mov
pop
xchg
mov
sub
orb
add
or
mov
mov
xchg
or
mov
cmc
pop
sahf
outsb
push
sbb
and
pop
leave
into
decl
dec
arpl
pop
std
daa
cmp
mov
xchg
in
sbb
cmp
js
jp
mov
cmp
fcos
inc
xchg
int
jp
sub
mov
addr16
jnp
scas
cmp
ljmp
add
fdivl
xlat
aaa
sub
lea
and
mov
or
xchg
or
outsl
jp
arpl
jle
mov
test
and
lcall
in
scas
jns
rorl
in
jg
stos
pop
and
xchg
inc
fisubrs
lock
icebp
clc
decl
scas
jg
fwait
pop
repnz
xchg
ds
cmpsb
adc
fisubl
decl
dec
mov
sub
xor
mov
jge
hlt
gs
scas
and
call
shrb
pusha
push
daa
xchg
test
call
fwait
dec
cmp
add
lods
xor
movsl
inc
aaa
ret
int
movsb
lods
jmp
and
cs
cmpsl
imul
lcall
scas
daa
xchg
enter
xor
and
in
pop
mov
sbb
rorb
call
mov
and
or
lds
mov
pushf
adc
pushf
in
push
fisttpl
cmc
nop
xlat
mov
inc
fwait
pop
mov
gs
push
xchg
lahf
std
xchg
idivl
ljmp
clc
enter
sbb
std
xor
in
cmp
xchg
inc
pop
push
subl
test
adc
sub
cmp
arpl
call
clc
test
mov
outsl
lods
addr16
dec
mov
shrl
mov
aas
push
data16
popa
jne
scas
lret
push
xor
inc
pop
data16
outsb
pop
fwait
cmp
mov
jecxz
adc
dec
enter
push
cmp
loope
enter
mov
xchg
ljmp
sbb
insb
pusha
arpl
pushf
in
mov
inc
mov
push
lcall
and
xchg
lcall
rol
pop
in
gs
mov
add
incl
pop
je
push
fldl
dec
push
rcr
fmull
dec
sarl
loop
cld
mov
cs
push
cmpsb
mov
xchg
push
insl
pop
push
or
cmpsb
cli
ljmp
loope
pop
sti
scas
cmc
mov
xor
cld
outsl
mov
fbstp
or
fstpt
jecxz
and
lret
cld
jg
dec
sub
jno
sbb
icebp
jne
sub
adc
mov
fwait
pop
inc
pop
lock
xchg
mov
jg
inc
iret
jl
and
ud0
fadd
rclb
jecxz
push
sub
es
test
orb
incl
fbstp
or
movl
popf
jne
adc
rorb
scas
stos
inc
test
mov
adc
sbb
sar
push
outsl
pushf
pop
inc
mov
lret
dec
mov
dec
inc
jmp
mov
fst
cmpsb
add
lahf
and
xchg
rorl
jbe
repz
decb
rorl
jmp
mov
jl
xchg
bound
iret
ret
jmp
ds
jge
leave
imul
pop
dec
xlat
pop
es
mov
jno
mov
cmp
push
sub
xor
ss
aam
insl
cmp
ljmp
scas
cli
test
js
mov
and
or
cld
sbb
inc
loope
jns
cmp
xorb
and
pop
mov
decl
in
adc
pushl
call
inc
push
xlat
inc
mov
call
in
fidivrs
pop
loope
fcomip
lret
lds
lods
adc
xor
call
mov
cs
lea
mov
aaa
push
jb
arpl
addr16
and
fcmovbe
in
cwtl
cmp
incl
mov
mov
out
out
out
int
push
mov
xchg
in
fwait
decl
shll
shlb
or
out
push
call
mov
jg
das
clc
out
movsb
cmc
cmp
fiaddl
sub
mov
mov
call
lea
cmp
dec
mov
dec
jecxz
mov
mov
daa
pop
jle
mov
push
std
jmp
jne
adc
dec
stos
jbe
jnp
mov
xor
push
enter
jle
dec
pop
jl
and
jno
dec
push
adc
cmp
mov
mov
scas
repnz
lahf
mov
pushl
push
cli
mov
out
lds
jle
aad
std
mov
bound
jge
mov
ljmp
mov
pop
push
dec
pop
sti
push
lret
jbe
inc
subb
call
mov
jp
jmp
lahf
stos
filds
in
shrb
add
jb
push
mov
ljmp
dec
adc
fnstsw
xchg
xchg
lret
xchg
jnp
ljmp
xchg
inc
rorl
pop
pushf
sub
mov
subl
loopne
dec
jne
cmp
aam
push
or
push
or
jae
dec
dec
int
inc
clc
lcall
ss
movsl
jo
pop
imul
incl
ss
dec
dec
rcrl
inc
imul
or
call
pop
ljmp
call
push
cmp
xchg
xchg
outsb
push
adc
test
decl
jo
xchg
in
pop
ljmp
push
push
loope,pt
addb
cmp
out
insb
add
dec
pushf
pop
sub
mov
jb
sbbl
adc
fistl
fidivs
mov
adc
outsb
add
jmp
push
mov
fisubl
jg
stc
pusha
int
push
pop
movsl
pop
pop
arpl
fdivrl
and
lcall
lds
pushf
adc
dec
pushaw
jbe
loope
les
cltd
inc
inc
mov
inc
fadd
imul
movsl
pop
scas
or
loopne
jbe
dec
add
outsl
roll
push
lcall
or
mov
jp
sbb
es
decl
or
dec
mov
sahf
test
sub
xchg
aaa
push
adc
loope
cmpsb
fs
mov
pop
out
in
in
lahf
cmp
adc
jmp
jno
xchg
mov
popa
cmp
arpl
add
push
bound
cmp
inc
cmp
lcall
or
xchg
and
mov
out
sbb
xlat
mov
jmp
in
pop
pop
sbb
mov
sub
lahf
out
loope
jg
adc
fmuls
adc
popa
sbb
adc
inc
dec
adc
push
hlt
cmp
incl
aam
cmp
inc
fs
clc
and
int
out
jl
scas
fimull
lahf
mov
xchg
sbb
clc
push
mov
ja
lcall
icebp
xchg
lret
add
stc
pop
cmp
into
mov
sarb
push
inc
pop
jbe
inc
call
test
nop
or
adc
inc
clc
test
sub
mov
call
loope
xchg
and
cmp
dec
pusha
mov
push
bnd
jl
mov
dec
cltd
loopne
aam
jno
aaa
ljmp
fimuls
or
and
jle
call
ljmp
mov
out
inc
arpl
repnz
pop
das
push
in
jmp
adc
pop
push
jne
movsb
inc
jp
inc
dec
or
mov
and
es
push
std
or
es
icebp
scas
jecxz
cmpsl
cmp
out
jo
ljmp
cs
cmp
and
lds
add
cmp
pop
aam
incl
mov
dec
bound
xchg
in
add
mov
and
dec
xchg
dec
mov
decl
push
sbb
cmc
inc
loop
icebp
daa
push
pop
ror
test
fcompp
sbb
pop
mov
push
lea
mov
and
loope
cld
gs
sahf
push
fdivl
in
aas
dec
add
roll
test
fcoms
pop
lret
mulb
mov
or
test
pop
faddp
outsl
mov
popf
fisttpl
pop
sbb
sbb
insl
rorb
push
inc
and
push
lgs
fcomip
jg
adc
xchg
in
fmuls
and
cmp
jmp
inc
mulb
xchg
mov
insl
pop
imul
decl
lret
add
jg
inc
es
ret
sub
jb
popa
jne
and
cmpsb
in
fdivr
inc
jg
movsb
insl
fisubl
into
jecxz
add
jo
daa
mov
das
push
addr16
cmpsb
out
js
imul
jbe
jae
sbb
jbe
out
push
gs
cmpsb
and
incl
pop
adc
jecxz
arpl
mov
jb
sbb
sahf
sbb
popa
test
jmp
adc
mov
or
cmp
or
sbb
ja
movsb
push
sbb
fcompl
pop
sub
das
xor
andb
xchg
incl
aam
mov
jmp
pushf
je
mov
test
pop
add
pop
cltd
xor
add
stos
pop
sub
mov
out
pushl
xchg
cltd
dec
out
push
rorl
or
jo
push
imul
xlat
pushl
mov
imul
mov
push
jmp
inc
sbb
cmp
decb
push
in
loop,pt
shlb
addr16
adc
ja
es
shrb
sub
ss
xchg
push
jbe
pop
data16
ljmp
pushl
std
ljmp
push
jmp
push
fs
lcall
inc
inc
scas
aam
andb
or
call
fwait
xlat
sbb
jmp
lds
sub
int
jg
cmc
mov
andb
push
sub
lret
fdivl
lcall
decl
inc
test
aad
lret
je
sahf
jl
push
std
push
repz
pop
icebp
push
lret
hlt
push
out
push
insb
icebp
push
scas
lcall
or
mov
fcoms
ja
imul
int
push
lcall
imul
in
jecxz
add
pop
mov
stos
enter
xchg
jmp
mov
cmp
lock
incl
and
into
imul
lcall
jb
fcomip
outsb
cmp
ljmp
shlb
inc
scas
movsb
jl
cs
data16
ja
scas
popf
cli
sub
jmp
inc
push
out
cwtl
sub
in
sahf
mov
mov
movsb
jmp
add
es
adc
mov
jg
je
dec
lods
pop
xchg
mov
outsl
cmp
jns
in
enter
lret
bound
ds
xchg
cmpsb
lea
and
aam
rcll
movsl
fcos
lcall
movsb
sbb
adc
repnz
movsl
mov
pop
cmpsb
pop
jp
lret
imul
mov
lock
incl
pop
xchg
sbb
in
roll
fs
outsb
imul
call
jmp
push
push
mov
ret
xchg
mov
outsl
push
insl
repnz
insb
mov
jle
push
scas
repz
jo
int3
out
mov
adc
mov
sahf
scas
leave
outsb
sub
push
scas
out
imul
adc
sub
adc
scas
rcrb
outsb
push
jp
into
shlb
inc
pop
and
ljmp
add
sbb
pop
sbb
stc
push
lods
mov
sarl
pushl
arpl
insl
adcb
fs
mov
or
sbb
mov
pop
add
inc
leave
ljmp
out
and
mov
or
ljmp
fstpt
pop
incl
jge
into
push
mov
add
xor
fisubrs
mov
insl
imul
xor
cmc
incl
lods
adc
loop
xchg
arpl
push
and
inc
jl
xchg
decl
mov
ror
lock
xchg
rorl
cli
pop
sbbl
mov
es
sti
lcall
adc
outsl
es
lret
movzwl
movb
imulb
push
in
scas
jg
xlat
out
sar
mov
mov
xchg
test
or
fs
es
sub
ljmp
lds
out
xor
ljmp
insb
ficomps
and
es
loope
out
test
mov
cld
or
mov
decl
loop
add
lods
add
push
sbb
dec
push
mov
movsl
jno
repnz
add
mov
ljmp
mov
pop
mov
xchg
fucomi
int
mov
mov
xor
jg
loopne
dec
pop
or
xchg
popf
mov
jecxz
xor
cmp
fstpl
out
sahf
cmp
push
ret
mov
xor
sbb
mov
call
out
jg
cmp
je
mov
xchg
push
xchg
mov
aas
mov
xor
scas
repz
jmp
mov
lahf
imul
mov
ret
or
ljmp
mov
xor
lahf
incl
jmp
out
lock
adc
mov
push
sub
jns
sub
fnsave
out
adc
xchg
sbb
or
sar
jmp
scas
jo
add
into
in
xor
sub
and
insl
insl
js
cmp
jg
jmp
inc
mov
aas
push
xor
and
mov
sub
mov
or
mov
jmp
mov
call
pop
sbb
in
xor
mov
push
cmp
decl
inc
xor
jp
xchg
sbb
push
xlat
loop
sbb
adc
mov
or
outsl
ds
mov
mov
pop
or
popf
mov
jl
xor
sbb
jne
stos
ficomps
push
outsl
pusha
cmpsb
call
mov
xor
leave
pop
jno
xchg
mov
jae
pop
out
mov
bound
repnz
inc
movb
jmp
js
stos
outsl
xchg
mov
mov
or
out
xchg
test
mov
shrb
int3
inc
mov
out
lcall
fdiv
mov
xor
mov
sub
jb
data16
clc
push
pop
mov
add
push
mov
sbb
pop
cltd
stc
lret
mov
xchg
mov
push
decl
jne
mov
arpl
jns
fwait
arpl
scas
ja
scas
mov
jecxz
cmpsb
lock
pushl
mov
and
fwait
subps
mov
outsb
pusha
jae
jecxz
lock
pushl
call
or
cmc
mov
cmpsl
cs
inc
adc
test
xor
cmpb
xchg
fwait
jg
aam
stos
ss
pop
decl
repnz
jne
mov
add
pop
jecxz
rol
pop
push
neg
lea
xchg
addr16
scas
and
xchg
xor
and
mov
lcall
mov
inc
inc
sub
ss
push
add
pop
mov
and
xchg
xor
rcrb
icebp
adc
pusha
jmp
mov
xchg
mov
xchg
dec
sbb
repnz
mov
xchg
jns
shlb
fsubs
adc
jecxz
xor
push
ds
mov
mov
dec
and
mov
and
inc
insl
in
and
push
popa
xchg
push
insb
dec
pusha
aaa
clc
ljmp
xchg
xchg
pop
out
or
mov
jmp
and
jae
jg
jl
loopne
out
fdivs
stos
pop
fwait
jae
mov
xor
bound
push
lods
test
push
out
and
fsubl
incl
pop
add
cs
xchg
bound
fldcw
ret
jp
icebp
mov
scas
mov
or
mov
jmp
jp
or
mov
insl
lret
adc
push
mov
dec
xchg
jb
dec
or
int3
mov
decl
lret
dec
ja
mov
das
pushf
mov
outsl
shrl
stos
stos
clc
int
push
out
stos
inc
sub
adc
xor
out
mov
jo
and
pop
repnz
jle
ret
dec
push
xchg
cmp
or
push
out
cli
in
xor
jl
xlat
mov
jae
jp
cmpsl
ljmp
out
sub
jp
jno
fldcw
inc
dec
mov
push
popf
ret
ljmp
sub
lea
jbe
loop
ret
fs
incl
fsubs
xchg
jle
pop
adc
aas
mov
push
das
cmp
aas
adc
test
mov
aad
aas
xlat
sahf
xchg
mov
pop
mov
mov
in
dec
cs
jl
xchg
stos
mov
incb
inc
pop
fildll
jbe
xor
mov
inc
addl
mov
inc
sbb
decl
daa
dec
pushf
js
and
add
rolb
jp
test
dec
xchg
sub
test
fwait
je
andl
and
sub
mov
xchg
sub
jns
movsb
int3
sahf
cs
cli
xchg
leave
adc
decl
mov
je
je
push
lods
pop
popa
ss
cli
repz
popa
mov
insl
mov
dec
jp
mov
inc
xchg
ljmp
mov
pop
mov
sti
pop
jo
sar
mov
sbb
cmpb
pop
ret
and
ja
inc
ljmp
popa
sbb
fisubrs
cld
inc
mov
shlb
xlat
mov
lds
clc
out
pop
mov
jmp
scas
mov
mov
pop
lock
adc
cld
jg
jge
push
in
mov
adc
pop
jp
fdivrl
fstp
and
lcall
add
stc
aaa
inc
xchg
pop
xchg
push
lret
mov
sar
clc
call
sti
movsb
repnz
sub
sbbb
mov
jp
das
xor
mov
mov
aaa
cld
or
add
jmp
xchg
or
stos
or
mov
inc
cs
inc
decl
xchg
jno
pushf
push
mov
cmp
mov
stos
push
test
xchg
jno
cld
movsb
bound
inc
popf
repnz
incl
in
mov
xor
scas
into
ret
push
jae
mov
sar
dec
push
push
lods
jmp
mov
mov
and
or
and
jb
jmp
add
mov
mov
sub
cs
mov
int3
add
aam
incl
sub
out
jl
mov
pop
jo
das
xor
les
xchg
adc
repz
mov
mov
or
sub
jbe
adc
rcr
les
ljmp
test
sub
jmp
mov
out
mov
cmc
dec
jno
push
arpl
cmp
mov
mov
mov
inc
pop
lock
clc
sub
sub
rcrl
ror
nop
je
shrl
ljmp
adc
mov
and
xlat
pop
loope
nop
aad
daa
push
ljmp
mov
jo
or
mov
fdivr
fs
mov
clc
lock
jle
in
inc
adc
xchg
lret
imul
ljmp
test
aam
mov
loope
ljmp
incl
dec
rolb
pop
aaa
pop
xchg
fldt
into
sbb
rolb
into
mov
mov
inc
outsl
dec
or
adc
dec
leave
sarb
ficomps
dec
call
stos
jecxz
decl
push
pop
jns
cmp
sub
mov
adc
or
call
mov
test
popa
cmova
dec
cmovs
std
push
popa
addr16
cmc
outsb
out
arpl
push
mov
decb
aad
fidivrl
or
and
cmp
adc
jnp
inc
je
outsl
out
icebp
mov
inc
insb
leave
pop
sbb
mov
andb
stos
sbb
or
push
lret
aad
jae
or
mov
or
and
movsl
jns
aam
and
sbb
mov
and
mov
jg
clc
dec
jbe
fiaddl
int3
pop
pop
adcb
imull
mov
adc
jmp
fldt
decl
lock
lea
in
sar
jg
movsl
dec
xchg
jae
out
out
in
jmp
in
cmp
lock
push
dec
jg
mov
ds
stc
pop
mov
sub
mov
scas
xchg
aad
outsl
jbe
es
lock
jmp
imulb
dec
dec
repnz
push
push
ret
mov
jp
inc
dec
rclb
xor
lock
push
inc
add
outsb
ds
jmp
or
push
cmp
in
jae
cmpb
ljmp
dec
xchg
or
js
sub
jbe
jno
loopne
cmp
push
and
or
fldcw
popa
or
cmc
mov
sahf
in
ljmp
and
push
xchg
fstpt
sbb
pop
cmp
nop
pushl
sbb
xor
sub
jl
jns
push
test
xor
mov
stos
cld
es
call
xchg
insl
add
add
and
xchg
cli
ljmp
add
push
mov
cmp
fbstp
mov
ljmp
push
jno
cmp
aad
and
mov
js
in
nop
or
mov
dec
jmp
ja
cmc
lods
out
and
add
xor
rcr
test
pop
mov
scas
in
fildll
decl
push
and
popf
mov
arpl
call
xor
xor
dec
cld
mov
lahf
mov
das
mov
cmc
mov
dec
imul
mov
dec
xor
xchg
addr16
xchg
xchg
sbb
shl
xchg
mov
dec
xchg
cmp
push
je
call
cli
add
xor
decl
call
sbb
xchg
and
dec
mov
repnz
mov
and
mov
call
test
mov
mov
and
add
push
mov
rcll
mov
int
jb,pn
imul
lcall
mov
iret
mov
cmp
inc
sub
andl
andl
aad
cmp
inc
in
adc
cmp
dec
cmpsb
xchg
jns
dec
nop
cmp
aam
mov
test
lock
icebp
cmpsl
pusha
dec
cmpb
dec
xlat
mov
cmp
mov
sub
les
cwtl
cmpsb
mov
aam
xor
xor
push
ss
jle
mov
push
outsb
loopne
repnz
mov
mov
nop
insb
or
pop
mov
or
pop
inc
sbb
cmp
mov
xor
popa
aad
jb
jo
pop
outsb
cmp
pop
scas
or
push
icebp
xor
xor
fdivrs
xchg
xchg
out
call
xacquire
jo
mov
cmp
test
inc
mov
xor
xor
fstpl
mov
lcall
loope
mov
pop
mov
mov
sarl
inc
add
mov
fisubl
mov
jmp
dec
pop
push
xor
mov
test
cmp
pop
into
arpl
stos
js
cmpsb
mov
dec
arpl
mov
sub
dec
lcall
call
mov
xchg
and
mov
mov
sub
dec
iret
sahf
testl
mov
mov
and
loop
mov
sti
inc
shl
nop
mov
mov
mov
lods
jmp
pop
ficompl
iret
inc
adc
xor
jo
scas
jnp
outsl
sbb
or
decl
inc
adc
jmp
test
into
mov
nop
pusha
add
add
in
inc
push
icebp
decl
and
in
lcall
push
inc
mov
and
sbb
xor
fbstp
mov
mov
mov
int
or
xchg
lahf
lds
loopne
inc
inc
stos
pop
fdivrs
adc
ljmp
jmp
out
push
cs
pop
xchg
bndldx
mov
mov
ss
or
jae
call
dec
sti
xlat
imul
rcrb
jo
cmp
push
jns
adcl
or
or
xor
cmp
lods
loopne
movsl
in
xor
cld
incl
rcll
xchg
cmpb
and
mov
lcall
sahf
pop
cmpsb
lods
nop
adc
add
inc
cltd
push
addl
roll
ret
sub
and
jmp
cmpsl
adc
jmp
push
xlat
pop
inc
adc
fdivrl
outsl
cs
push
imul
popf
sbb
lds
cli
jg
jmp
or
jmp
adc
lods
or
loop
lods
sbb
pushl
movsb
push
mov
or
and
lods
testl
ljmp
push
pop
push
movsb
inc
dec
test
xor
xchg
jl
aad
jle
push
psubusb
push
sahf
pushf
rclb
jg
mov
pop
dec
jb
pop
test
in
test
into
movsb
fcompl
ret
dec
ljmp
stos
sarb
pushf
xchg
cmpsl
fs
or
fildll
xchg
push
dec
cmp
scas
rorl
mov
adc
ret
xor
and
mov
dec
pop
dec
enter
pop
les
hlt
jl
cld
dec
je
xor
outsb
lock
arpl
dec
roll
dec
pop
icebp
jb
add
sarb
sti
test
pop
icebp
jmp
jp
add
xorb
and
and
xchg
or
call
ret
not
lret
jmp
and
and
and
mov
or
ljmp
fsubp
push
nop
lods
cmp
scas
lahf
fmull
inc
lds
sub
cli
out
push
inc
in
add
adcb
cmp
add
xor
and
or
frstor
mov
jecxz
mov
mov
lret
js
add
mov
leave
xchg
cld
ljmp
ds
mov
sub
inc
das
test
int3
jl
or
repz
int3
loope
ljmp
add
lods
mov
xor
xchg
call
orb
mov
sti
mov
push
lods
or
sti
xchg
iret
sti
cld
dec
in
jg
add
and
jne
and
adc
push
insl
out
outsb
add
dec
push
jbe
in
iret
or
ret
and
ror
dec
and
or
iret
dec
cmp
add
mov
cld
decl
add
aam
jmp
add
cmp
pop
pusha
jnp
out
aad
xor
jecxz
mov
xchg
or
scas
cmp
jo
loop
push
add
in
mov
imul
in
push
lcall
xor
mov
adc
lock
cs
icebp
sub
fidivl
mov
sub
mov
mov
cmc
sahf
jo
call
mov
dec
loope
jno
pop
cld
stc
dec
or
sbb
mov
mov
and
inc
loop
mov
mov
dec
push
jo
iret
incl
mov
inc
inc
or
dec
not
push
and
pop
addr16
and
or
imul
decl
adc
push
inc
adc
call
movsl
or
lods
adc
les
jno
pop
and
sub
enter
pusha
lahf
lcall
mov
and
sbb
inc
mov
bound
out
mov
add
lods
arpl
xor
pushl
xor
into
test
call
push
dec
and
xor
dec
jecxz
pop
inc
inc
lea
push
fucomip
sahf
ficoml
mov
movzwl
push
push
ljmp
add
or
push
imul
fdivp
enter
insb
or
mov
sub
int
adc
jge
pop
and
mov
lock
cmc
cld
mov
es
inc
clc
icebp
and
nop
xlat
lds
mov
fcoml
sbbb
inc
xor
call
jl
in
incb
pusha
or
dec
mov
sub
and
imul
xchg
lock
or
pop
xor
add
push
inc
or
decl
jo
insl
inc
inc
dec
sub
pop
adc
shll
mov
xlat
mov
mov
push
dec
xor
out
push
lock
lret
ljmp
out
das
dec
jecxz
pushf
cmpsb
xor
sub
mov
icebp
fcoml
xor
imul
sub
push
lock
pushl
add
push
push
insl
cmp
mov
hlt
push
shrl
lret
insb
in
add
pop
dec
in
mov
mov
shrb
test
testb
or
ljmp
inc
cmp
fmull
inc
push
leave
lret
jp
loop
sub
in
or
and
and
shr
xor
loope
or
xor
dec
mov
or
sub
roll
push
push
dec
xor
daa
mov
call
xchg
icebp
push
xor
lock
xor
mov
sub
das
rcl
push
adc
mov
call
shll
shlb
shrb
or
mov
sbb
pushf
movb
clc
adc
jp
inc
sub
adc
and
dec
adc
jle
das
mov
cmp
shll
icebp
push
pop
int
dec
adc
rclb
xor
movsb
adc
das
add
push
mov
mov
scas
push
push
jo
decl
adc
ret
xchg
or
test
and
cmp
mov
xor
sub
call
sub
push
sbb
decl
mov
rolb
into
das
lds
dec
jl
mov
lret
dec
xor
decl
jmp
sbb
ljmp
or
jno
and
or
adc
aad
or
cld
fcomip
pushl
add
mov
and
or
push
cmp
clc
das
jbe
hlt
es
xor
xor
mov
push
daa
aaa
mov
mov
call
lret
add
dec
push
push
pusha
mov
ss
mov
rorl
and
into
loopne
sub
fdiv
adc
insl
pop
jp
or
popa
inc
shll
aam
add
xor
push
adc
nop
xor
repz
inc
xor
fldenv
out
push
movsb
add
xor
ret
imul
adc
test
push
xor
xchg
testl
or
imulb
cmp
mov
lcall
fsts
inc
sub
push
int
mov
dec
adcb
repnz
inc
jbe
jmp
push
into
push
dec
rclb
jecxz
jmp
and
mov
jmp
outsl
jge
cmpsl
xor
dec
cld
fdiv
inc
shll
lret
inc
popa
xor
insb
push
pop
sub
loopne
ljmp
jno
adc
fidivl
mov
pop
jp
dec
and
sub
decl
xor
dec
imul
mov
jecxz
pop
mov
and
std
aam
or
sub
push
aaa
or
adc
sbb
mov
push
pushl
xor
adc
push
ret
mov
movsl
in
add
in
dec
xor
lock
push
and
dec
adc
xchg
out
inc
xchg
lcall
cs
shrb
inc
xor
or
push
in
jbe
fnstenv
push
bound
jl
movsl
push
dec
es
das
jns
insb
ljmp
and
dec
lcall
or
movb
cli
push
test
testb
incl
testl
mov
cld
push
push
cs
add
push
test
aad
dec
inc
xlat
ret
call
sar
xorb
mov
je
adc
out
aad
mov
incl
jo
inc
push
and
jno
xor
pop
sub
decl
aad
lret
ljmp
aaa
or
jnp
pop
xchg
push
adc
pop
mov
rcrl
shr
or
adc
and
jmp
decl
dec
dec
xor
roll
nop
or
add
push
fldenv
in
loop
inc
inc
pop
jb
or
mov
iret
in
cmp
outsb
jg
xor
push
dec
xor
and
std
bound
adc
xchg
insb
dec
dec
es
insb
cmp
das
cmc
dec
insl
sub
jae
lret
push
mov
cltd
iret
xor
cld
cmp
aad
sti
negb
rcrb
pop
or
addl
das
push
fwait
jns
test
cld
pushl
lods
aaa
mov
outsl
dec
std
mov
shlb
ret
jg
or
repnz
es
adc
push
jnp
repz
adc
or
ljmp
push
mov
lock
push
imul
push
bound
or
xorb
or
mov
xor
repnz
dec
xor
in
shrl
pushl
std
sar
movsb
js
sub
and
mov
enter
mov
scas
outsb
dec
mov
pop
jl
mov
std
ret
testb
xor
mov
mov
out
xchg
out
xchg
imul
pop
xorl
add
add
mov
jmp
ljmp
imul
cwtl
bswap
cs
sahf
enter
sbbl
lcall
cmp
pop
testb
scas
xchg
nop
xchg
mov
iret
adc
out
pop
ljmp
adc
mov
sub
scas
mov
rorl
sar
xor
fidivs
out
mov
adc
or
ret
shlb
cmp
sub
push
sbb
ja
scas
mov
std
adc
inc
dec
pop
rcl
dec
adc
mov
pusha
pop
mov
jp
dec
sbb
mov
adc
cs
loope
and
xor
call
cmp
movsb
outsl
or
cld
decl
jnp
movsl
xor
inc
and
xor
int3
aaa
insb
cli
jg
xchg
pop
shll
arpl
jbe
pop
adc
decl
dec
int3
mov
add
arpl
jecxz
in
fs
fisubrl
cwtl
lret
push
pop
mov
incl
push
and
and
int3
addr16
or
xchg
mov
sbb
sbb
insl
test
ljmp
fld
inc
fcoml
cltd
pop
lret
lods
cmpsl
cltd
test
jp
loope
and
push
scas
popf
adc
jmp
jmp
scas
ret
xchg
test
xor
fwait
ljmp
xor
mov
xchg
jnp
and
out
aad
in
and
out
adc
mov
mov
xorb
clc
cmp
cli
jae
xchg
sahf
add
mov
mov
sti
dec
mov
in
in
or
lcall
shl
xchg
icebp
imul
ja
and
lods
into
mov
enter
sahf
jg
jg
xlat
movsb
and
cld
dec
int3
daa
stc
xor
and
mov
xchg
addr16
cmp
std
ljmp
incl
cs
cmp
dec
sub
pop
loopne
push
mov
push
or
pushl
insl
mov
cmp
lahf
mov
sub
lcall
in
sub
xchg
push
jecxz
or
mov
jns
and
in
incl
push
pushf
enter
dec
clc
ret
adc
inc
jl
fildll
decl
fxch
push
or
lcall
aas
mov
lds
xor
outsb
mov
dec
incl
jno
out
push
dec
sbb
dec
aas
cli
call
scas
in
mov
cs
fists
outsl
adc
out
mov
fistl
fadds
ljmp
or
dec
in
mov
lods
bound
sub
push
leave
add
in
mov
ds
adc
xor
pop
dec
ja
hlt
nop
jae
lds
out
repz
mov
push
jb
add
xor
test
adc
jmp
and
jns
js
sbb
add
cmp
xchg
pusha
adcl
and
xchg
in
inc
mov
call
xchg
pop
stos
roll
es
sub
push
ror
sub
inc
sbb
dec
inc
repnz
jmp
add
jle
xchg
xorb
jb
xchg
push
fcmovu
xor
jns
lcall
pop
ret
loope
pop
push
faddl
arpl
mov
jle
adc
outsl
cmc
pop
outsl
sbb
mov
setp
jmp
lock
sar
decl
add
sbb
mov
mov
mov
jnp
aad
shlb
mulps
out
xor
inc
ljmp
lret
jp
bnd
mov
pop
loope
cmp
pushl
sbb
aaa
shll
and
iret
mov
mov
add
decl
addr16
mov
add
stc
mov
or
xor
les
std
decl
sbb
xchg
divb
leave
cld
xchg
mov
cld
xchg
imul
jg
sbbb
sub
cwtl
js
cmp
and
or
add
lret
subb
pop
adc
xor
inc
test
push
dec
pop
adc
sbb
mov
inc
mov
add
ljmp
les
enter
xchg
sub
mov
mulb
xchg
daa
aas
outsb
sbb
shlb
fwait
ss
call
add
cli
sub
imul
mov
add
push
push
or
test
mov
and
fimuls
shll
add
and
add
add
decl
sti
adc
mov
sub
test
mov
jle
hlt
jg
popa
pop
cwtl
jmp
mov
push
inc
sbb
lods
pop
mov
fimuls
mov
decl
test
cmp
or
inc
mov
push
sub
mov
pop
add
hlt
iret
mov
dec
adc
push
jae
sbb
push
filds
jno
call
cmp
jg
fists
enter
fs
push
pushf
popa
fistpl
rcrb
out
iret
pop
shll
outsl
jbe
mov
out
inc
lret
sbb
inc
fidivrl
add
sub
adc
pop
aam
rcrb
add
xchg
xor
pusha
loope
int
rol
sbb
push
aaa
movl
adc
dec
and
adc
inc
mov
xor
xchg
mov
ds
add
call
adc
dec
and
sub
adc
xor
jg
call
push
test
inc
gs
xor
xchg
and
push
pop
sub
addr16
jbe
adc
lcall
dec
pop
gs
cltd
in
and
movsb
movsl
fwait
insl
sbb
push
xchg
pop
es
ljmp
vmovq
mov
and
push
mov
jno
adc
lcall
outsl
movsb
gs
inc
pop
test
rorl
pop
notb
push
sbbl
aaa
sub
inc
jl
inc
jo
cld
mov
pop
jnp
incl
stos
mov
push
fwait
push
lods
pop
lock
pop
mov
push
jnp
inc
pop
jp
lea
push
call
filds
sbb
call
sbbl
pop
cld
mov
scas
sarl
or
mov
or
jmp
fnstsw
scas
sbb
mov
lcall
or
lcall
test
and
shlb
testb
xor
std
and
mov
xor
inc
mov
push
dec
push
ljmp
call
daa
lds
cmp
xor
xchg
ja
gs
push
das
or
data16
popa
cmc
cmpsl
ljmp
leave
rorb
in
push
jo
cltd
fcomps
xchg
mov
push
outsl
nop
xchg
movsl
inc
xor
xchg
pop
pop
cmc
pushl
aad
imul
add
int
or
add
push
sbb
incl
adc
dec
hlt
stos
push
or
mov
out
mov
sbb
sub
mov
mov
icebp
push
js
popf
add
sub
push
rol
divl
std
sbb
and
pop
push
add
sub
or
cld
lret
add
fnsave
mov
mov
jmp
test
test
jg
add
pop
test
jae
push
pop
lods
sub
popa
jl
mov
sub
stos
cmc
cltd
js
mov
das
fs
jnp
orb
das
sub
out
cltd
mov
loopne
push
jb
pop
fldlg2
dec
add
adc
mov
imul
push
jb
adc
std
push
lods
dec
xchg
mov
jl
cmp
add
fstps
dec
dec
push
rcl
cmp
es
call
sub
in
dec
push
sbb
add
pop
in
mov
mov
adc
push
add
decl
sub
pushf
push
mov
leave
stos
jle
sub
add
xor
popf
outsb
add
push
es
push
mov
inc
push
mov
and
decb
lea
cmp
inc
pop
jecxz
stos
incl
cs
sub
xchg
call
je
cmp
inc
int
mov
test
stos
jmp
sub
cmp
addr16
ljmp
add
fld
add
add
loop
outsl
aas
pop
movsl
jle
cmp
loopne
xchg
sti
or
mov
fistps
cltd
repz
data16
sbbb
or
shlb
or
mov
incl
inc
adc
jbe
int
mov
loopne
mov
imul
fs
push
rorl
or
adc
les
enter
das
adc
inc
dec
cmp
fimull
xlat
add
dec
pushf
sbb
leave
pop
or
outsl
cli
pop
cwtl
adc
sbb
in
mov
enter
mov
jmp
and
mov
mov
jp
decl
and
arpl
je,pn
push
daa
pushl
cmp
push
je
adc
ljmp
ljmp
outsb
add
sbb
xor
pop
ljmp
incl
mov
pop
dec
in
pop
mov
loope
into
pop
push
pusha
dec
add
call
rolb
fstl
imulb
push
into
rclb
add
outsl
jne
pusha
decl
cmp
xor
push
inc
cmpsb
testl
add
mov
dec
repz
ljmp
lcall
adc
xor
je
adc
or
popa
or
push
jg
pop
jg
jbe
fs
mov
adc
popa
inc
incl
push
scas
add
imul
mov
mov
xchg
test
inc
mov
and
jge
push
cmp
push
fadd
dec
rcll
aam
stos
sub
cmc
xchg
dec
inc
pop
xchg
dec
pop
fiadds
cmpsl
dec
sar
inc
leave
and
and
push
out
mov
jne
enter
call
mov
xor
cmovg
mov
cmc
sub
xchg
insb
test
push
scas
mov
pop
lock
incl
inc
scas
repnz
push
cmp
mov
stos
jle
out
packssdw
decl
sub
mov
adc
mov
lea
cmp
cltd
or
rolb
or
add
out
xchg
int
icebp
movsb
adc
sbb
in
ud0
cmp
and
jae
movsl
mov
jle
adc
mov
xchg
sbb
cmp
fldt
f2xm1
leave
es
xchg
pop
cmp
push
jae
adc
mov
adc
loope
movsb
mov
loopne
inc
mov
push
xorb
jmp
dec
adc
sbb
xchg
push
mov
je
dec
insb
hlt
xchg
cmp
push
mov
push
push
mov
and
sbb
lcall
push
push
mov
xchg
jl
inc
jmp
add
inc
les
scas
sub
jmp
in
ja
fmull
adc
addl
xchg
lods
movsl
xchg
clc
decl
add
sahf
or
jecxz
jmp
inc
ret
decl
mov
mov
mov
and
and
inc
hlt
imul
arpl
fmull
inc
jmp
mov
xor
call
mov
dec
leave
notb
push
dec
and
push
lcall
decl
out
out
test
xor
decb
push
dec
in
dec
mov
hlt
inc
dec
xchg
mov
mov
stos
pushl
outsl
jbe
daa
gs
xchg
xchg
popa
loop
adc
push
mov
call
push
mov
or
adc
outsl
sarl
decl
lods
lret
outsb
cs
sbb
mov
ficompl
test
jno
cs
mov
shll
or
clc
lods
cmp
xlat
mov
cmp
mov
cmp
xor
jg
nop
mov
icebp
mov
idiv
int3
jmp
jo
iret
add
stos
mov
or
fadds
pop
mov
sahf
inc
cmpsb
ljmp
mov
add
sub
lea
dec
pop
mov
inc
test
inc
push
push
and
aad
outsl
xchg
jo
dec
movsl
add
dec
lret
popa
inc
cmp
jge
arpl
sbb
lahf
out
xor
push
pop
mov
cmpsb
sub
jg
std
add
push
dec
fs
lret
sub
adc
xor
decl
daa
adc
sbb
add
movsl
xchg
jbe
clc
pop
lock
lock
lcall
mov
cli
inc
push
mov
lods
btrl
xor
test
fwait
cli
and
jge
dec
mov
add
repz
mov
jno
push
cs
pop
jp
jmp
test
mov
push
shll
insl
call
mov
sbb
add
mov
iret
push
outsb
sbb
in
xor
lcall
and
jns
inc
outsb
hlt
ret
cmp
push
inc
pop
jae
mov
dec
mov
jle
sar
incl
inc
bound
sti
mov
imul
push
inc
push
mov
or
push
jb
dec
mov
xor
call
mov
sub
dec
mov
push
push
test
decl
jnp
sbbl
mov
adc
adc
je
ret
repnz
addr16
addr16
js
mov
orl
repnz
add
call
dec
add
jg
lock
mov
or
jmp
or
clc
add
mov
loopne
push
push
ds
jp
roll
mov
or
add
rcr
es
bound
data16
sub
push
and
repnz
sbb
xor
repz
dec
adc
test
dec
jmp
out
adc
push
cs
in
incl
pop
pop
or
cmp
scas
xchg
mov
inc
ret
xor
testl
fs
push
dec
push
lea
ret
aas
test
mov
add
ja
inc
js
in
pushl
inc
dec
andl
shll
push
push
or
adc
xlat
bound
fdivr
ja
call
out
push
test
bound
cmp
cmp
nop
and
jns
and
inc
sub
jle
add
ja
sub
mull
mov
push
hlt
decl
dec
push
dec
dec
insl
xchg
cmpl
inc
loope
decl
pop
inc
ds
js
punpcklbw
in
aas
and
mov
rcll
cwtl
xor
xor
jmp
cmp
outsl
push
sarl
dec
inc
xlat
xor
push
gs
inc
mov
cmc
gs
gs
pop
inc
push
es
lcall
dec
and
pop
pop
mov
xor
test
xlat
pop
jb
ret
inc
adc
lds
pushl
xchg
jnp
cltd
push
adc
xchg
mov
test
mov
sub
incb
inc
mov
push
loopne
push
push
push
lock
out
push
add
push
jnp
add
and
das
jns
push
incl
scas
add
jns
xchg
imul
add
mov
dec
xchg
fs
ljmp
adc
js
daa
mov
xchg
arpl
mov
out
jo
call
mov
push
mov
mov
loop
xchg
cmpsl
icebp
js
inc
repnz
xchg
pop
cmp
push
or
sbb
xorl
pop
xor
adc
test
cwtl
sbb
mov
insb
pop
inc
xchg
fidivrl
idiv
decl
test
add
fildll
jl
xchg
fiaddl
mov
sub
xchg
arpl
pop
mov
and
incl
pop
jg
dec
pop
push
mov
clc
fwait
jmp
push
inc
lcall
mov
pop
pop
and
das
push
das
bound
fcoml
das
cltd
cmpsl
fwait
cli
fwait
add
mov
ds
mull
and
push
and
pop
and
stos
les
xor
addl
jns
dec
jne
adcb
xlat
inc
xchg
push
outsl
mov
mov
cmpsl
push
pop
or
push
pop
addr16
xchg
out
test
cmc
jns
jp
cmpsb
mov
pushl
popa
dec
xor
leave
mov
lahf
push
clc
lea
pop
pop
popf
andl
mov
lcall
call
push
mov
cmovae
push
test
es
mov
add
pushl
sub
aad
xchg
mov
data16
mov
jg
cmp
mov
mov
sub
pop
stc
jb
in
decl
lcall
xchg
inc
dec
ss
sbbb
dec
test
test
mov
divl
iret
adcl
aaa
std
repnz
cmp
push
push
fucomp
popf
pop
mov
aam
cld
push
cwtl
hlt
jmp
dec
pop
pop
xor
call
inc
call
mov
xor
loop
out
mov
sbb
xor
fstpl
mov
out
cli
enter
jae
cltd
xchg
fcmovnb
mov
hlt
lods
mov
imul
lret
or
leave
mov
cmp
lret
mov
cld
ljmp
bound
and
insl
hlt
mov
pop
xor
xor
cli
icebp
push
iret
mov
lcall
jns
mov
push
aam
jle
mov
addr16
mov
inc
orb
xlat
xchg
lds
iret
sbb
jno
inc
cmc
sbb
push
xchg
dec
testl
jp
hlt
enter
pop
es
gs
and
shr
hlt
jp
adc
adc
fs
sahf
sub
mov
pushl
push
mov
mov
cmpsl
arpl
test
aaa
mov
aam
xchg
cmp
stos
outsl
fcoms
insl
or
cwtl
stc
cmp
add
add
mov
push
faddl
push
incb
rclb
inc
insb
xchg
or
cmp
test
sar
pushl
and
cmp
and
xor
aaa
or
or
leave
cmp
clc
jg
out
dec
push
ljmp
movsl
sarb
cmp
add
mov
loop
adc
jbe
mov
mov
pop
xor
sahf
jecxz
jl
arpl
lcall
push
jo
pop
mov
fldenv
fidivl
pop
mov
sub
call
cli
xchg
insl
sub
or
jnp
ljmp
jp
call
cmp
adcb
mov
nop
cmp
mov
or
insl
call
insb
notb
loopne
icebp
subb
and
sub
fwait
mov
and
mov
inc
jmp
and
jle
stc
sub
and
sbb
mov
mov
dec
addl
mov
mov
pop
xor
xor
cmp
mov
cltd
rcrb
ja
cmpsb
inc
arpl
clc
ljmp
hlt
adc
lcall
mov
xchg
scas
lret
jmp
aaa
mov
aam
pop
pop
jl
in
out
sbb
mov
imul
lcall
mov
loope
je
xlat
push
jle
pushf
sbb
scas
sub
decl
pusha
stos
jnp
mov
mov
sub
xor
shll
inc
fwait
mov
jg
jmp
xor
adcb
sbb
inc
mov
sub
xchg
xchg
and
add
mov
or
lods
mov
insb
rcll
adc
rep
cmpsl
inc
js
in
mov
call
inc
add
or
ljmp
cmpsl
mov
test
jns
mov
xchg
add
enter
js
inc
inc
repz
dec
jl
call
pop
lret
into
push
gs
mov
bound
mov
and
pop
jl
inc
xchg
push
add
and
xchg
xor
jmp
push
pushw
mov
mov
addb
mov
push
scas
cli
mov
fildl
test
ror
cmpsb
stos
mov
mov
pop
mov
aaa
dec
sarb
pop
add
lret
sbb
popf
enter
inc
or
lods
and
incl
or
and
mov
xchg
cmp
jmp
sbbl
cwtl
sbb
mov
cmc
xchg
fs
daa
stc
fldenv
push
lcall
cli
and
pop
or
pop
add
call
jo
iret
jns
mov
cld
mov
cld
data16
aad
cld
mov
pushf
mov
mov
mov
cld
adcb
jg
lea
int3
cli
lcall
lods
pop
or
decl
popa
add
fistpl
mov
lret
dec
dec
mov
push
sarl
lcall
imul
pop
movsb
inc
jmp
cltd
sbb
cmp
xchg
std
sub
aas
fxtract
int3
add
sbb
jmp
adc
fsubrs
iret
push
cwtl
pushl
jl
or
out
mov
jmp
jmp
repz
call
into
insb
cltd
popl
mov
inc
push
mov
lods
adc
int
in
fnsave
pop
shlb
test
incl
rclb
cmp
int
bound
les
fstps
shl
adc
mov
mov
ss
insl
push
aad
mov
add
push
mov
cmp
mov
mov
faddl
aas
and
int3
inc
jnp
or
pushl
inc
cmp
rol
adc
inc
fdiv
repz
icebp
cmpl
fadds
call
dec
call
data16
push
dec
js
pop
dec
mov
jmp
cmc
fwait
call
call
or
push
pop
enter
fisubrs
in
ja
mov
test
cmpsl
test
in
mov
out
clc
dec
out
jb
pusha
ss
int3
xchg
in
push
adc
or
hlt
push
dec
shlb
pusha
lcall
mov
sbb
add
out
mov
das
iret
push
mov
incl
sahf
cli
xchg
ret
insb
aad
aam
mov
jbe
fdiv
adc
pushl
sbb
pushf
xchg
rorb
sub
mov
dec
mov
and
in
jle
idiv
ffreep
mov
jle
sbb
add
xor
mov
lcall
test
xchg
or
adc
incl
js
sahf
push
jle
in
mov
and
incl
insl
out
lea
xor
repz
pop
clc
sahf
stc
fs
fdivrs
pop
lcall
or
call
dec
sbb
mov
push
loopne
adc
out
mov
jle
ljmp
ja
out
shlb
repz
das
or
ret
and
mov
std
adc
push
dec
mov
lcall
and
stos
and
movsb
pop
cltd
mov
jge
mov
and
test
and
dec
sar
call
scas
imul
cmp
fidivs
mov
cmp
les
arpl
scas
xchg
stos
sub
out
push
or
xchg
pop
arpl
pop
dec
cmc
pop
decl
sbbl
mov
imul
outsl
xchg
ljmp
sti
push
push
addb
xchg
lcall
lret
mov
cmp
int3
sbb
jb
fwait
and
andb
add
cmp
push
dec
testb
aas
pop
pushf
inc
fsubrl
and
aas
std
rcll
movsb
lods
push
jns
test
adc
and
arpl
call
dec
jmp
inc
lea
and
test
ja
pop
cmpsb
mov
insb
cmc
inc
fcomps
dec
hlt
std
dec
push
repnz
repnz
insb
sbb
mov
scas
cmpsl
xchg
hlt
in
into
pop
cmp
fdiv
fldenv
lahf
cmc
push
dec
fists
jne
jno
and
push
loopne,pt
pop
divl
adc
cmp
jns
mov
push
sbb
in
mov
mov
and
xchg
sbb
lfs
cmp
sbb
faddl
fcomip
jmp
mov
adc
lock
dec
cwtl
or
sub
jg
insb
cld
sub
movsb
test
mov
fidivs
or
mov
lds
cmp
pusha
je
ficoml
decl
cmpsl
xor
loop
shll
and
push
scas
arpl
jbe
stc
aam
mov
dec
pop
cmp
incl
xchg
insl
insl
cmp
pop
fwait
insb
mov
push
mov
outsl
clc
lcall
add
pop
mov
xlat
repnz
mov
jbe
pop
lret
fisttpll
in
out
xchg
jge
sbb
fnsave
sti
pop
icebp
pop
lret
mov
jmp
push
into
mov
jbe
adc
mov
faddp
jecxz
bound
inc
lret
sbb
pop
jecxz
lret
jp
outsb
xchg
div
enter
ljmp
out
fnstsw
popa
js
pcmpeqd
fbstp
dec
cld
push
mov
add
test
in
mov
and
inc
and
ljmp
push
mov
and
in
xchg
enter
jb
mov
or
ljmp
inc
xchg
call
daa
int3
pop
orb
pushf
push
stos
lods
push
shll
mov
jmp
stos
mov
aaa
shrb
adc
ret
add
fbld
cmp
enter
lea
push
stos
leave
xor
jae
imul
or
pop
jg
add
inc
jecxz
aaa
scas
push
add
jmp
push
xor
stos
push
outsb
lods
mov
mov
repz
js
imul
cmp
in
sub
dec
cmp
fidivrs
insb
hlt
mov
push
dec
das
std
push
orb
ss
ret
inc
add
bound
fisttps
adc
shlb
test
jecxz
mov
add
mov
and
add
in
rcll
jp
mov
fdivr
test
add
iret
nop
xor
les
movsb
ret
mov
stos
and
sbb
push
aam
repnz
push
jmp
push
adc
aas
in
hlt
rorb
scas
cli
cmp
mov
xchg
lods
dec
aam
rcl
mov
into
xchg
rcrb
jle
fisubs
or
pop
insl
pop
and
out
pop
jne
mov
pop
add
push
xor
lret
mov
mov
dec
repz
testb
shlb
mov
aad
push
lock
dec
mov
xchg
dec
mov
fstpl
es
lcall
gs
add
pusha
data16
ljmp
cli
push
movsl
and
push
lock
add
mov
lcall
or
enter
cmp
ficomps
shrl
stc
sub
cs
lcall
leave
sarb
and
test
movsl
mov
incl
stos
push
sbb
daa
fstps
imul
lcall
loopne
push
jmp
lret
mov
jle
loope
cwtl
test
int3
jmp
shll
jg
xchg
fptan
fnstcw
inc
mov
hlt
mov
ljmp
fldenv
insl
adc
fimuls
or
jp
fwait
mov
inc
test
ja
decb
mov
push
fisubrs
mov
ljmp
fstps
mov
cmc
fadd
and
mov
and
hlt
adc
sarb
nop
adcb
loopne
ljmp
xor
mov
mov
sahf
les
shrl
xor
cmpb
dec
and
ret
int
jno
arpl
mov
xchg
jno
cld
lcall
stos
sbb
and
popa
hlt
repnz
shl
adc
sbb
pushl
or
or
jnp
insl
add
sub
xchg
out
xchg
push
jmp
xor
adc
push
rep
nop
jno
dec
push
ss
inc
mov
xchg
lds
inc
sub
pushl
add
hlt
push
in
stos
nop
iret
mov
sbb
inc
enter
sub
adc
push
lods
sub
push
dec
xchg
inc
dec
push
mov
add
decl
and
pop
and
pop
push
add
js
fs
in
jne
inc
test
adc
call
push
and
cld
and
cmpsb
cmpb
lock
mov
shll
jb
jl
xchg
push
ja
xchg
push
xchg
xchg
xor
cmp
inc
jp,pn
dec
push
jb
mov
insb
dec
ljmp
push
xor
outsb
into
in
jo
movsl
lcall
sbb
mov
xor
xchg
mov
addr16
cmp
cmp
cwtl
hlt
dec
iret
cmp
cli
and
lcall
pop
aas
cltd
ret
mov
ja
sub
andb
sub
js
sbb
pop
nop
aas
mov
add
fcoms
sub
push
nop
dec
mov
and
mov
daa
iret
push
jg
add
mov
popf
sub
dec
mov
pusha
mov
dec
mov
sub
je
cmp
out
sub
hlt
mov
stos
jmp
popf
out
dec
int
jmp
xor
int
dec
icebp
pushf
movsb
mov
push
cmpsb
es
xor
add
xchg
push
jp
cmp
test
cmp
cltd
daa
lret
mov
addr16
add
jg
dec
jne
or
and
jne
sbb
roll
inc
inc
and
mov
adc
inc
mov
dec
xor
sub
or
add
lea
lret
test
add
lcall
fiaddl
adc
mov
mov
imul
pop
sbb
lcall
lods
cmp
mov
call
sub
ficoml
or
enter
adc
mov
lcall
mov
hlt
push
aad
es
out
loop
jns
sbb
cwtl
mov
cltd
inc
aaa
daa
call
push
mov
cs
ja
adc
jp
ret
cmp
xor
in
fs
or
cli
dec
mov
test
adc
lcall
int
mov
insl
cld
cmp
ljmp
or
mov
pop
pusha
push
mov
sub
or
cmp
pop
dec
es
push
shlb
popf
or
cmp
and
mov
push
clc
ljmp
ljmp
mov
aas
fs
push
mov
test
loop
adc
iret
jb
jne
add
add
test
outsl
popa
cltd
ljmp
les
out
popa
fcomip
pushl
fcomps
jmp
dec
jae
stos
adc
lock
pop
add
scas
pushw
pop
movsl
sub
rcll
mov
push
sub
rcrl
arpl
or
insb
pusha
cmp
mov
add
cmp
in
push
enter
es
mov
adc
add
mov
adc
fwait
sti
inc
or
mov
ljmp
push
fucomip
or
xchg
aas
xchg
fistl
mov
push
mov
sub
fcoml
in
xchg
mov
push
mov
lahf
or
int
mov
test
cmpsb
out
jge
dec
mov
xlat
dec
das
rorb
pop
jmp
movsl
jns
mov
aad
ljmp
push
ja
inc
jbe
xor
push
xchg
imul
add
repz
xchg
sub
mulb
dec
push
push
xor
lcall
out
sbb
jb
ds
int3
mov
cmp
pop
call
int
adc
shlb
pop
aas
out
mov
inc
js
cld
lcall
lret
in
les
adc
xchg
in
sbb
dec
inc
cltd
push
cld
inc
push
jbe
pop
push
xchg
les
icebp
sbb
sub
fwait
or
insl
bound
inc
insb
cmp
int
mov
push
in
repz
fildl
loope
inc
xchg
xchg
cli
cmc
scas
xor
pop
dec
jecxz
sub
daa
xchg
jge
mov
xchg
jg
stc
adc
pop
cmpsl
inc
adc
and
jmp
sub
mov
jg
stc
test
cli
cmpl
in
inc
int
dec
jne
mov
jmp
and
mov
push
jge
or
jnp
imul
movsl
xchg
fs
and
call
hlt
xor
repnz
and
lcall
cltd
sub
iret
cmp
lods
mov
xorb
scas
cli
pushl
fs
mov
xor
inc
mov
sbb
sub
gs
shl
and
add
popf
mov
xor
and
fildll
lcall
dec
fwait
or
imul
pushl
rol
cmpsb
add
adc
xor
shll
sbb
xor
sahf
mov
aad
xor
xor
cli
or
cmpsl
rolb
in
rcrb
xor
lcall
push
sarb
daa
sub
mov
nop
pop
jno
add
out
lods
mull
sbb
decl
sbb
pop
and
mov
push
addb
and
inc
popl
jb
mov
mov
call
push
xchg
mov
loope
std
mov
jne
inc
test
mov
xchg
call
mov
cmpl
ss
pop
xor
jg
xor
mov
pop
jl
sar
jmp
mov
mov
inc
stos
mov
adc
cmp
adc
pushl
inc
pusha
mov
pop
mov
pop
push
daa
pop
xchg
out
sarb
test
cmp
in
adc
cwtl
xor
or
inc
mov
fdivrs
sti
add
pop
cld
add
add
and
push
lcall
decl
pop
adc
sbb
cmp
and
inc
scas
mov
pop
in
mov
ret
sysret
std
das
xor
adc
movsl
lcall
sub
sub
mov
lds
ret
jmp
sub
mov
ret
or
or
scas
rcrb
or
aam
inc
fisttpl
lcall
inc
shlb
mov
and
pop
insb
leave
test
jb
sub
cwtl
les
xchg
bound
out
inc
xor
mov
jecxz
dec
xchg
mov
pop
mov
jmp
and
fwait
aaa
pop
dec
sbb
fisttpl
push
cld
lcall
xchg
mov
mov
icebp
xor
xorl
movsl
lret
inc
add
inc
dec
mov
sbb
lcall
sub
jg
sub
pop
adc
xchg
ss
xchg
adc
movsb
imul
xor
arpl
mov
add
cltd
sar
inc
cwtl
loop
movsl
rcrb
push
repnz
and
mov
insb
mov
mov
inc
fs
lock
outsl
jo
add
jb
fs
and
xor
ss
call
adc
mov
lret
mov
mov
imul
and
mov
inc
jnp
or
push
push
jmp
sbb
pushf
push
lret
push
push
imul
movsl
xor
push
mov
out
icebp
adc
mov
rorl
pop
int3
mov
xchg
cmp
jmp
ret
cmc
in
pop
or
pushl
add
dec
fcomip
mov
test
add
test
xor
mov
or
adc
lret
xchg
pop
xchg
sub
aam
mov
jl,pt
cmp
incl
adc
xchg
sub
jae
or
fs
lret
pushf
lods
inc
push
in
icebp
jmp
call
mov
rorl
nop
cld
aaa
nop
fwait
pushl
lret
or
cltd
xchg
fnstsw
loopne
inc
jbe
jg
lcall
add
cmp
inc
cwtl
sub
mov
aam
fiadds
lock
incl
cmp
lret
lret
cmp
adc
sbb
cmp
mov
sub
incl
js
adc
inc
cmp
sub
clc
inc
or
mov
lret
roll
rorl
enter
pop
and
mov
push
cltd
xor
mov
dec
dec
dec
popf
aas
cld
inc
sub
int3
mov
in
iret
fs
loopne
and
adc
aam
mov
dec
and
dec
int3
rorl
cmp
dec
jg
cmpsl
mov
dec
fidivs
mov
mov
stc
mov
ljmp
cli
les
and
imul
call
pop
cli
movsl
jae
test
mov
or
rcll
mov
incl
pop
icebp
roll
sbb
mov
leave
add
aam
lret
and
xchg
adc
mov
pop
push
cli
jmp
dec
shlb
lret
fdivrl
lcall
loopne
mov
or
and
xchg
adc
sbb
sub
incl
int3
pop
stos
pop
popf
push
in
mov
xchg
enter
cmpl
pushl
sbb
and
insl
leave
cmp
xor
stos
jae
push
cmp
mov
call
sub
lods
jp
je
push
or
or
and
clc
or
xlat
in
xor
push
pop
sbb
aad
xor
rolb
rcrb
lcall
shll
mov
cmp
sub
ds
cmp
mov
jmp
rolb
rolb
mov
mov
pop
sti
dec
mov
shll
ret
mov
cmp
pop
cmp
stos
dec
jge
loope
mov
cmp
leave
and
pop
lods
pop
out
arpl
xchg
push
fsts
nop
pushl
fld
or
mov
or
add
mov
sub
shlb
add
js
icebp
jg
add
mov
xor
dec
sub
xor
decl
push
sub
shrb
aam
xchg
ss
add
pop
adc
out
add
adc
fiaddl
mov
decl
popf
xor
jecxz
idiv
mov
scas
push
into
enter
push
xlat
das
insl
inc
cmpsl
xorb
mov
andb
fcos
add
adcl
mov
sbb
pop
leave
mov
inc
dec
pop
call
dec
adcl
adc
xchg
pop
xor
dec
push
maskmovq
negl
fadds
pushl
lret
jne
fcompl
jmp
in
fdivr
fs
mov
scas
orl
and
push
or
jbe
mov
jmp
add
stc
sub
push
stos
fcomp
stc
mov
in
int3
cltd
mov
je,pn
sub
push
mov
das
pop
sub
sbb
pop
dec
dec
es
movb
push
arpl
pop
push
lea
mov
ljmp
test
pop
add
inc
int3
fwait
or
add
mov
test
incl
or
xchg
sbb
adc
es
mov
cmpsl
hlt
movsl
fdivrl
in
add
in
cmp
cmp
sbb
clc
xchg
xchg
loopne
fbld
call
adc
push
repnz
push
add
shlb
in
inc
dec
and
andl
or
xchg
outsb
cmp
push
sub
sub
add
test
decl
cmpb
cmp
xor
cmp
stos
adcb
add
xchg
lcall
or
scas
cmp
es
sub
aas
adc
shll
mov
cmp
loopne
arpl
jmp
cmp
mov
lods
cmp
int3
add
mov
dec
add
subl
jg
jecxz
or
push
lds
stos
push
mov
add
mov
adc
lcall
sbb
pusha
pop
adc
inc
in
add
ljmp
or
add
and
fsubrl
xor
jle
out
cld
mov
pop
mov
rclb
pop
icebp
scas
pop
push
jle
pop
scas
loopne
pop
bound
xchg
pop
js
int
push
flds
or
mov
or
stos
add
orb
out
out
cmpsl
mov
push
rsm
pop
inc
test
mov
shll
pushl
cmp
mov
jns
pop
dec
mov
ror
lods
mov
adcb
lret
xor
sbb
jl
out
push
decl
ljmp
lds
inc
adc
call
mov
and
dec
cmp
popf
fcompl
push
dec
cli
cli
cwtl
dec
je
ljmp
imul
sbb
lds
add
pushl
cli
in
jle
into
add
imul
xchg
jo
negl
out
mov
lea
xchg
mov
adc
lods
incl
and
fnstsw
xchg
outsl
int
dec
xchg
xchg
icebp
adc
pop
out
lds
lock
sarl
sub
jle
ss
out
push
andb
sub
cmp
iret
inc
add
xchg
ljmp
push
ficompl
inc
mov
dec
sahf
push
das
jnp
push
out
jnp
pop
sub
jl
or
lods
fstps
faddp
pushl
fldenv
shrb
shl
into
lret
int
rcrb
jb
jg
in
cmp
data16
add
or
in
xchg
pusha
inc
sahf
in
xorb
imul
cmp
mov
sbbb
sahf
cwtl
aaa
clc
jg
dec
sub
xor
in
jbe
lds
inc
in
xchg
xor
inc
lock
push
inc
xorl
aaa
sbb
or
jne
dec
jmp
dec
cmp
repz
incl
push
and
dec
jo
push
xchg
or
or
sub
subl
shr
inc
xor
out
sub
cmp
mov
cmp
or
jne
or
inc
scas
fsubr
mov
and
enter
sub
inc
fnstcw
pop
shr
jl
fxch
pop
pushl
lret
cmp
cvtps2pd
sbb
out
test
xchg
rorb
addr16
jmp
pusha
xor
inc
cmp
mov
sub
dec
rcrl
mov
in
pop
add
mov
scas
in
ja
lcall
jno
push
push
and
cs
pusha
repnz
test
cmp
clc
out
mov
lock
mov
sub
ss
mov
add
addl
js
jbe
div
pop
jbe
push
iret
sbb
push
decl
pusha
xor
xchg
repnz
and
xor
enter
imul
lahf
stc
dec
pop
pop
sbb
inc
int
or
xor
bound
and
clc
or
fadd
sub
rcrl
aad
loopne
lahf
stos
out
in
fsubl
cmp
std
lcall
addb
xor
jbe
sahf
inc
fiadds
cltd
ffree
fiaddl
int3
mov
call
outsb
pop
ret
insl
sub
xor
push
in
add
sub
or
mov
inc
sbb
ds
add
mov
test
mov
fwait
mov
lods
or
fucomip
inc
mov
mov
cs
dec
pop
cmc
mov
test
out
shrl
loopne
movsb
dec
lahf
imul
hlt
fadd
popf
subl
mov
pop
jle
push
popa
idivb
sub
decl
and
clc
inc
aam
mov
push
pop
rolb
ret
incl
int3
mov
and
pop
out
lret
movl
xchg
inc
les
incl
adc
jg
icebp
add
sbb
add
cmpps
mov
adc
mov
ret
jno
mov
jbe
lcall
imul
jb
jns
and
mov
pop
lcall
inc
mov
dec
lock
jg
push
dec
dec
xchg
sub
add
xor
dec
mov
mov
pop
mov
lret
mov
adc
pushl
es
ret
push
xchg
stc
adc
mov
and
push
or
incl
pop
lock
xor
sub
stos
inc
sti
scas
push
sbb
fstpt
js
decl
or
xor
push
mov
pusha
popa
in
fcoms
or
inc
jg
inc
cld
mov
xor
dec
daa
sub
mov
add
add
xchg
sahf
push
and
mov
jecxz
popf
pop
inc
call
les
jl
jno
shll
decl
push
fwait
dec
shrl
enter
lahf
movsb
mov
movb
jg
std
fldenv
fwait
adc
mov
mov
out
add
loopne
sbb
jg
jae
loopne
add
hlt
xchg
rorl
cmp
stc
in
call
pop
add
add
in
sbb
cmpsl
ficompl
add
mov
or
test
jl
arpl
cs
rcll
movsb
dec
inc
adc
adc
rcll
dec
in
adc
call
dec
push
xchg
nop
or
xchg
pusha
dec
scas
adc
push
rorb
push
test
add
pop
push
add
inc
push
add
pop
inc
nop
cmc
xchg
push
ds
incl
lcall
add
mov
mov
or
out
jno
cmpsl
mov
fwait
decl
sub
xchg
pop
dec
mov
sbb
pushf
push
xor
mov
sub
sbb
mov
ss
outsl
jl
pop
addb
xchg
stos
pop
les
call
stos
mov
xor
xchg
pushf
adc
rcrb
enter
add
push
rclb
call
lods
ja
in
popa
push
jns
cld
shr
pop
rcrl
fnsave
call
incl
fmulp
out
addb
add
adc
popa
jle
ja
outsl
bound
push
push
or
andb
mov
int3
mov
insl
jmp
mov
arpl
sub
inc
cmp
ds
push
dec
inc
cli
les
gs
push
mov
ficoml
adc
ret
xchg
cmp
data16
fnstenv
jg
test
dec
dec
jb
add
int3
dec
cmpsl
add
xchg
cmp
and
scas
push
outsb
scas
rcrb
and
stos
mov
stos
xchg
adc
push
pushl
fsubrs
lds
push
es
lcall
js
loop
jg
push
inc
test
lods
or
sahf
fs
jp
outsb
outsb
into
in
sbb
xchg
mov
cmpsl
in
jnp
shrb
adc
jo
out
adc
out
mov
sub
mov
fcmovu
cmp
xor
insb
cwtl
xlat
outsb
xor
repnz
lods
xor
cld
cmc
sti
pop
pop
mov
cld
rorb
jbe
lahf
or
data16
sbb
fistpll
dec
push
repnz
sahf
call
dec
dec
adc
sbb
andl
pushl
sbb
add
int
xchg
xchg
push
xchg
imul
inc
and
inc
adc
adc
pushf
and
mov
cltd
scas
outsl
nop
hlt
call
mov
ja
mov
sub
jmp
fcmovbe
xchg
pop
cmp
mov
mov
adc
imul
cmp
js
pop
lret
and
cs
xorl
sub
xor
or
jno
into
pop
into
mov
aas
mov
inc
cmpsl
mov
aam
push
adcb
fdivrl
and
mov
mov
push
loopne
sti
incl
lcall
lret
mov
push
adc
jmp
adc
sbb
iret
mov
mov
or
jp
sbb
pusha
xchg
outsl
adc
mov
lcall
mov
or
repz
jg
idivl
or
aas
sti
cltd
inc
adc
sub
or
lcall
jle
movsl
mov
pop
rorb
lea
pop
mov
subb
jo
fcomip
mov
ss
xchg
xchg
jne
pushf
das
sbb
fimull
daa
push
or
pushl
adc
loope
mov
inc
nop
add
push
dec
cmpsl
or
cltd
es
mov
sar
sbb
shlb
lahf
and
cmpsl
rol
mov
jg
xchg
popf
jnp
adc
xor
mov
inc
pop
cmp
or
lret
enter
mov
xchg
lahf
jne
mov
add
cwtl
rcr
inc
mov
imul
xchg
out
dec
sub
jno
dec
fmul
aaa
cld
call
jbe
add
stos
les
enter
popa
dec
adc
adc
aaa
enter
sbb
sbb
mov
inc
xorb
test
repnz
add
ljmp
dec
js
arpl
xor
orb
call
les
cmp
fisubs
inc
les
mov
jmp
incl
enter
push
imul
pop
mov
fistpll
insb
int3
sub
lods
jmp
lcall
add
xor
or
jmp
int3
fsubs
movsl
adc
subl
and
lods
inc
imul
fldcw
jmp
sbb
jmp
movsl
andb
sbb
cmp
mov
add
mov
xor
cmp
icebp
jno
test
addb
sar
or
mov
repz
adc
push
test
mov
push
jmp
lcall
inc
dec
gs
cli
jg
dec
imul
dec
std
mov
call
rcrl
ljmp
sub
adc
mov
inc
fisubs
cmpsl
xor
ret
push
fdiv
rcrb
ficompl
xlat
rorb
jbe
xchg
nop
pop
push
mov
in
and
nop
dec
push
mov
jnp
or
pop
xlat
subb
fsts
push
and
loopne
jge
bound
ficoms
fisubrs
cmp
int3
popa
cli
and
jmp
inc
lock
dec
push
mov
lcall
and
sbb
int3
bound
sbb
mov
loopne
in
mov
jo
jmp
pop
cltd
enter
sbbb
add
pop
xchg
xor
push
mov
xchg
fs
ret
mov
sahf
push
outsb
ror
cmp
in
aaa
test
ror
pusha
es
loope
push
adc
push
and
repnz
or
xor
add
push
xchg
dec
call
arpl
pop
xchg
mov
adc
dec
and
shlb
mov
sbb
pop
pop
mov
dec
adc
lahf
cmp
add
cli
outsl
mov
xchg
jecxz
push
and
jl
in
mov
xchg
add
dec
cmp
fisttpl
jmp
add
push
mov
add
cmp
xor
sahf
or
imul
ljmp
ss
mov
call
mov
and
cwtl
incl
sbb
push
int
ljmp
repz
add
enter
lock
cmp
mov
pop
dec
jmp
jns
and
xor
jl
mov
lcall
or
lods
push
sbb
popf
xchg
hlt
mov
incl
mov
sti
jmp
out
stos
sub
shlb
push
ret
lret
lcall
push
cmpl
push
scas
in
push
mov
call
sbb
xor
xchg
aaa
cmc
dec
push
cwtl
fcoms
cld
test
fdivs
and
jg
leave
insl
out
lret
sti
cmp
sahf
dec
and
mov
xor
push
stos
ljmp
push
mov
js
pushf
xor
cwtl
push
xchg
mov
pushl
in
xchg
lret
xchg
in
sbb
icebp
push
cmpsb
test
fldl
stos
nop
add
popa
add
fcmovu
adc
idivb
call
mov
dec
push
sbb
out
int
xchg
subb
mov
jmp
add
push
in
clc
fucomi
repnz
pop
test
fcmovne
call
inc
repz
cld
lcall
cmp
push
jg
rorb
shll
or
push
les
jmp
flds
imul
push
cmp
pop
loopne
or
lods
rcrb
in
enter
call
sbb
test
inc
xorb
sub
push
mov
rol
lcall
and
jo
or
mov
inc
call
aad
test
int3
or
adc
out
mov
jo
call
inc
ljmp
fs
fidivrs
faddp
mov
repnz
push
adc
clc
test
sbb
and
xor
xor
xchg
fisttpll
jg
je
or
in
mov
mov
push
jl
cwtl
jns
push
incl
pusha
enter
mov
arpl
cmpsl
mov
movsb
and
adc
pop
cmc
lcall
dec
stos
lds
adc
movsb
mov
lcall
pop
sub
stc
cltd
bound
mov
pop
sub
pop
adc
inc
adc
inc
lcall
add
xlat
push
inc
pop
pop
adcb
cld
lcall
sarl
lahf
mov
ljmp
popa
dec
lret
pop
dec
mov
jbe
and
lea
pop
jmp
outsb
push
movsb
add
or
roll
adc
xchg
shlb
pop
cwtl
inc
add
cmp
push
adc
mov
fmuls
ss
jg
jmp
xchg
popa
jae
shll
push
loop
push
xor
pop
vunpckhps
icebp
call
repnz
insl
inc
xor
subl
fsubp
movsl
popa
shll
popa
xchg
ljmp
and
mov
mov
jno
scas
push
push
pusha
std
test
jmp
shll
push
leave
and
mov
lcall
fsts
jg
pop
lret
stc
pop
je
or
pop
nop
or
pop
mov
sbb
xchg
loop
insl
xlat
dec
lock
loope
xor
ss
jmp
push
ficoml
es
inc
mov
cmp
inc
stos
push
aam
dec
pop
jle
vcvtps2dq
idiv
lock
add
jno
inc
fadds
add
mov
pushl
fcmovu
lods
mov
es
icebp
mov
decl
cmp
adc
fnstsw
inc
mov
and
lcall
fisttps
push
and
or
cli
mov
int
pop
cmp
push
bound
jmp
movsb
adc
ja
inc
jb
push
ud0
test
test
fmuls
and
jae
in
sar
in
push
or
or
iret
xor
sbb
pop
je
and
push
call
dec
sbb
xchg
inc
and
and
nop
push
mov
push
sahf
mov
test
push
pop
shrl
data16
pop
or
xchg
xchg
aam
insl
pop
leave
rcrb
and
into
adc
dec
outsb
fstpl
sub
inc
hlt
lds
inc
pop
je
dec
loopne
test
shlb
scas
and
dec
lcall
adcl
push
sub
lcall
inc
in
xchg
lds
sub
hlt
aam
les
aaa
mov
dec
sbb
filds
cmpsb
lcall
cmp
fstpl
ss
fistpl
mov
rolb
popf
in
lret
popa
xchg
pop
and
push
jg
ljmp
addb
and
push
out
jge
push
inc
movsbl
adc
test
imul
pusha
xchg
test
and
and
mov
pop
mov
cltd
pop
icebp
pop
fldenv
cmp
cmpsb
or
stos
push
mov
inc
mov
inc
mov
adc
call
stos
push
push
add
bound
pop
mov
mov
rcrl
pop
xchg
xchg
push
jmp
mov
mov
mov
cmp
push
cli
cltd
pusha
xor
mov
nop
mov
pushl
jne
pop
inc
add
scas
push
mov
mov
cmp
xchg
adc
mov
pop
cwtl
add
mov
dec
aad
xchg
xchg
pushf
imul
sbb
roll
dec
loope
sbb
aaa
ljmp
add
incl
lcall
push
push
nop
arpl
mov
adc
and
rcll
sub
fcompl
pop
lock
sbb
adc
adc
mov
inc
sbb
dec
call
decl
add
sbb
insb
ret
or
cli
sub
sarb
scas
push
mov
dec
loope
xchg
and
or
enter
decl
lock
sahf
and
cld
mov
adc
frstor
xchg
cmpsl
loop,pt
aaa
adc
jmp
and
and
stos
xchg
sub
popa
nop
daa
fisubs
aad
es
icebp
pop
cmc
fst
sub
add
fcomps
sahf
shrl
ss
std
dec
cmp
mov
xor
sbb
fcomip
call
in
push
fwait
dec
in
or
mov
test
and
movsl
dec
or
aam
or
mov
add
imul
mov
popl
imul
mov
fadds
nop
test
jle
fcmovnb
data16
jns
dec
pop
js
sub
xchg
add
add
sub
fwait
je
das
fsubrs
adc
lret
add
ljmp
addl
ljmp
in
es
jmp
rorb
pop
push
xor
data16
lods
xchg
jne
test
rcrb
shlb
sub
jmp
out
cmp
mov
scas
jmp
pop
movsl
ljmp
test
cmp
sub
shlb
aad
push
cmp
jno
xlat
cmpsl
xor
mov
pop
jge
mov
adc
cmpb
cli
fimull
push
push
dec
lock
incl
rorl
negb
outsb
ss
or
sbb
cmc
filds
adcb
insl
test
jo
ljmp
push
or
pop
cld
and
frstor
mov
inc
sbb
fisttpl
stos
arpl
and
cmpsl
jo
fwait
adc
mov
mov
scas
test
call
jmp
loopne
lcall
sbb
inc
jo
dec
push
lret
jecxz
leave
in
ss
sahf
pop
or
mov
fsubl
xchg
sahf
push
push
ljmp
clc
sub
hlt
push
add
dec
push
lods
pop
sbb
fstpt
xchg
call
sahf
or
push
xchg
ljmp
bnd
pop
xor
les
clc
fcomip
call
sub
push
and
leave
test
xchg
cmc
outsl
push
add
shll
and
lcall
add
push
addb
rorb
or
xchg
sub
lock
pop
jg
call
movsl
shlb
pop
mov
add
push
push
mov
push
or
mov
out
popf
xlat
xor
ljmp
push
out
mov
xchg
ljmp
push
je
imul
push
es
dec
sub
lods
sub
mov
adc
pop
cmp
jno
mov
fsub
lret
push
cmp
hlt
ja
jo
icebp
adc
mov
pop
scas
jg
icebp
xchg
adc
adc
popl
mov
cmpb
cmpsb
daa
das
dec
mov
mov
test
stc
jmp
jmp
cmpsb
jne
push
mov
and
scas
jo
enter
inc
xchg
add
bound
pop
push
ljmp
shld
adc
xchg
lods
lret
fldl
jmp
jle
mov
fistpl
push
pop
xor
sbb
jle
mov
sub
pop
pop
or
mov
hlt
and
cwtl
pop
cmp
call
and
push
mov
rorl
and
xchg
or
mov
mov
inc
hlt
cmp
mov
jmp
out
addr16
pop
xchg
imul
and
mov
jp
jmp
mov
add
pop
mov
out
adc
les
out
or
push
jl
dec
repz
or
cmc
incl
faddl
jp
lret
dec
sbb
pushf
xchg
xchg
lock
fisttps
shr
cmp
xchg
or
sahf
ret
mov
mov
bound
jbe,pt
xor
decl
ss
mov
mov
fsubrp
das
ret
jb
mov
add
jo
add
lcall
aaa
mov
es
mov
aad
pop
jmp
jbe
pop
pop
iret
mov
pop
mov
cmpsb
outsl
js
ss
test
iret
cmp
pusha
outsb
dec
pushf
or
push
dec
out
xchg
testl
pushl
and
or
sub
mov
fildl
sbb
inc
mov
call
movsb
xchg
jb
addr16
dec
mov
fimuls
mov
rcrl
sbb
decl
test
mov
xor
xchg
insl
pop
icebp
sub
sahf
jg
sbb
lea
jns
pop
and
sub
or
lock
push
mov
es
in
adc
imul
call
xor
sub
jne
mov
lahf
pop
cmp
jbe
mov
dec
jge
jge
sub
out
push
int
testl
aad
mov
sar
ljmp
ficompl
mov
pop
and
inc
call
mov
mov
jnp
lcall
add
imulb
jecxz
add
pmuludq
divl
popf
dec
cltd
jecxz
decl
decl
lods
in
outsb
inc
je
loope
es
xor
mov
pminsw
decl
pop
mov
insb
push
xchg
fsubrp
or
je
insb
dec
inc
cli
testl
hlt
ret
in
xchg
fldl
push
push
sbb
js
cwtl
inc
xorl
mov
mov
dec
push
mov
cmpsl
sub
pop
add
xor
push
sarb
and
out
out
sbb
add
ljmp
inc
push
pop
cmpsb
lahf
enter
rcll
ljmp
clc
aam
fisubl
mov
or
push
mov
mov
add
inc
ss
lret
js
cmpsb
ss
push
cwtl
xor
mov
outsb
sbb
mov
jnp
cwtl
roll
cs
incl
hlt
push
push
test
mull
push
ljmp
lods
cmpsb
ljmp
mov
nop
gs
cs
push
push
push
xchg
push
xbegin
cmovnp
inc
out
cli
std
sbb
jnp
adc
mov
std
push
cmp
jp
push
decl
pusha
repnz
inc
jl
or
in
inc
push
mov
xor
xor
and
jg
sub
lods
cmp
aad
jle
jp
test
fnsave
jns
xor
fdivl
lcall
lret
lret
mov
push
add
adc
fisubrs
negb
in
or
jno
jmp
inc
clc
mov
bound
push
add
orb
mov
test
cs
call
ret
pop
xor
or
xchg
adc
add
inc
dec
cmc
mov
push
dec
jo
push
cmpsb
addb
mov
mov
in
xchg
imul
add
mov
sbb
test
xchg
call
les
js
arpl
mov
add
cmp
xchg
cs
jmp
lret
popa
je
xor
imul
into
cwtl
cmp
stc
and
mov
and
adcb
test
or
repz
dec
sbb
or
sub
call
pop
mov
add
sbb
addb
clc
jg
fistpl
fidivl
jns
mov
call
cli
or
mov
jnp
xor
call
mov
xchg
pop
pop
push
mov
mov
test
lcall
lock
decl
enter
bound
sbb
call
sub
jo
pushf
gs
add
mov
out
mov
fsub
movb
push
orb
pop
mov
jg
mov
jo
cld
sbb
or
cmp
and
inc
or
fimuls
dec
mov
cmp
inc
mov
popa
cvtpi2ps
xor
subl
add
mov
jmp
div
or
mov
ret
mov
sbb
or
sbb
icebp
and
mov
add
outsb
and
dec
mov
or
sar
ljmp
add
sub
sbb
xchg
inc
stos
test
push
sub
cmpsb
lcall
cld
mov
bound
cs
test
add
in
cmp
hlt
push
dec
sarb
jmp
sbb
dec
inc
mov
aam
dec
push
lds
sbb
leave
inc
rcrl
mov
xor
jl
or
mov
xchg
push
lock
xchg
bound
rclb
jb
and
add
jle
jg
sub
out
xchg
into
pop
jno
mov
lock
pusha
ret
lds
lock
frstor
incl
inc
cmp
cli
orb
pop
fs
jge
add
add
cmp
jo
add
dec
cmpb
rolb
cwtl
cmc
outsb
pop
addr16
sub
call
xchg
es
inc
mov
inc
adc
lea
push
popa
test
push
dec
xor
bound
enter
rcrb
push
inc
lret
sahf
xor
sub
mov
sub
push
xchg
or
mov
and
decl
stos
dec
les
mov
nop
push
jmp
inc
jg
cltd
dec
dec
xor
leave
movsb
sbb
mov
ss
jmp
lret
mov
je
jnp
int
push
xchg
mov
or
push
decb
mov
push
hlt
call
jae
es
add
xor
enter
push
inc
jg
mov
cmp
push
lock
mov
and
cld
sahf
ffree
or
mov
push
mov
mov
fdivrl
jae
stc
jecxz
repnz
out
cmp
ljmp
lret
jo
or
fldl
idivb
jbe
and
sbb
out
push
xchg
push
inc
test
out
mov
mov
mov
sub
imul
push
test
loope
xchg
push
incl
outsb
and
repz
iret
xchg
ljmp
mov
ss
test
ss
into
je
push
mov
xor
fsubrl
mov
aam
jp
and
movsb
xor
pop
lret
fcomip
add
imul
int3
orb
icebp
dec
or
push
lds
aaa
les
test
pop
xchg
stos
enter
and
pusha
cwtl
ljmp
sub
inc
or
jo
cmp
rolb
xorb
add
lcall
addl
nop
pop
dec
lret
cmp
mov
out
inc
cmp
pop
pop
cmp
lcall
pop
fadd
inc
insb
adcb
jmp
push
add
icebp
outsb
ja
or
test
in
mov
jg
xor
mov
ss
mov
mov
pop
sub
aad
sub
inc
push
lcall
fsts
inc
pushl
pop
sub
dec
mov
stos
test
push
push
cmp
aas
scas
in
addr16
dec
xchg
add
es
clc
ret
xchg
cmp
test
adc
stos
decl
mov
push
aad
es
push
mov
sbb
incl
jo
pop
adc
imul
in
data16
stos
int3
fsubrp
repnz
insl
outsb
les
mov
repnz
das
mov
aaa
fwait
mov
pop
aaa
jl
push
enter
loopne
or
add
decl
or
rclb
pop
stc
mov
sti
and
xchg
test
lea
or
incl
pop
mov
icebp
jb
adc
push
mov
inc
adc
mov
xchg
xorb
lock
cli
jno
jle
inc
push
xchg
call
fnstenv
dec
sbb
add
or
sahf
insl
bound
add
inc
or
add
andl
stos
jb
and
pushl
in
lods
jge
pop
cltd
sub
push
xor
test
mov
stos
add
or
pop
stos
mov
leave
mov
nop
mov
dec
imul
xor
call
loopne
imul
mov
ja
enter
mov
popa
ljmp
jae
mov
popa
adc
outsb
dec
jbe
loopne
lods
cmp
mov
add
movsb
add
push
mov
jo
jp
sbb
test
pop
cmp
cmp
dec
shll
jl
inc
loopne
cmp
scas
hlt
sub
mov
jmp
subb
pop
jmp
push
inc
xor
or
jae
ljmp
ror
loope
loop
sub
lock
popf
dec
lcall
lret
or
cld
icebp
les
cwtl
rclb
filds
ljmp
addl
loop
xor
nop
ljmp
xchg
cli
lret
iret
cmp
nop
addr16
push
dec
call
lock
xchg
push
xchg
xchg
pop
psrlq
inc
lea
add
cmp
add
push
xor
pop
imul
sbb
das
das
sub
cld
stos
scas
mov
shll
jl
mov
ljmp
sub
popf
test
mov
pop
and
xchg
jmp
mov
les
js
sbb
pop
sbb
and
xchg
vmread
mov
mov
incl
or
and
push
add
sbb
pushl
ljmp
decb
adc
popf
in
cmp
call
inc
push
ret
call
jge
xlat
add
lock
pop
mov
insb
xor
jg
cld
push
and
lret
jmp
sub
add
xor
jg
ss
das
mov
xchg
push
lcall
mov
sbb
out
sti
xchg
cmpsb
rcrb
lcall
orb
fwait
and
xchg
push
int3
aad
xchg
mov
adc
lret
sbb
daa
pusha
fwait
rcrl
pop
fidivs
mov
incl
jno
jb
je
adc
repnz
outsl
inc
ss
or
sub
jno
push
adc
ret
adc
call
pop
cmp
je
mov
sbb
out
add
pop
pusha
push
icebp
mov
movsb
or
rol
mov
push
iret
aad
pushl
inc
mov
lods
inc
mov
popf
push
and
out
sahf
xor
das
adc
pushl
pusha
push
push
xor
inc
sbb
mov
insl
mov
out
xchg
int
mov
loop
rclb
or
out
mov
or
jno
lcall
das
aad
push
xlat
mov
bound
mov
out
dec
sub
lahf
or
sub
sbb
jg
int3
or
mov
imul
insb
and
push
mov
vrcpss
adc
lock
scas
call
fisubrs
movsb
xchg
test
mov
add
lods
aaa
mov
lcall
aas
ret
into
push
fstpl
dec
sbb
cmp
popa
mov
sarl
stos
cmp
jmp
lock
xlat
out
mov
cmp
movsb
and
adc
lds
inc
adc
aaa
fcomi
ror
mov
icebp
pushf
out
pop
out
adc
sarb
and
mov
or
push
mov
aam
xchg
dec
imul
je
imul
pushl
or
xorb
add
push
xor
nop
test
pusha
test
fcmove
ljmp
pop
orb
lods
movsl
loopne
ret
in
or
lock
test
push
outsb
mov
sub
sub
xchg
in
xchg
or
inc
ret
dec
es
pop
sub
outsb
mov
dec
add
push
and
dec
int
mov
mov
sub
fidivrs
mov
jb
repnz
pop
cld
push
inc
push
cs
xchg
mov
add
dec
cwtl
out
jae
pcmpeqd
les
int3
pusha
mov
pushl
and
sbb
mov
pusha
inc
mov
jbe
sub
scas
divl
jo
cmpsl
inc
pushf
jmp
mov
or
jmp
sub
sub
stc
push
or
mov
aam
int
icebp
mov
inc
out
and
in
sub
andb
dec
cmpsb
cmp
adc
add
hlt
pushl
test
test
inc
jmp
sub
orb
ljmp
dec
sbb
mov
xlat
sub
mov
in
outsb
and
inc
outsl
push
test
incl
push
and
add
and
adc
add
orb
pushl
push
ljmp
pop
sub
out
ljmp
mov
cmc
xchg
rorb
loopne
mov
hlt
or
mov
lahf
and
mov
mov
mov
mov
dec
push
cs
stc
sbb
test
call
movl
decl
loopne
and
in
and
sub
or
ljmp
mov
jo
pop
xchg
addb
aam
dec
xchg
out
incl
inc
adc
xor
test
sub
pushl
cmp
push
in
lret
fldenv
in
cmp
shrl
bound
idiv
add
add
inc
jmp
lds
add
dec
push
fdivrp
pop
icebp
or
mov
fmull
and
aam
add
pop
inc
incl
add
jecxz
push
and
mov
mov
in
fcmovb
sbb
aas
push
stc
decl
add
pop
fmul
pop
into
gs
mov
pop
xchg
inc
js
inc
mov
xor
mov
in
fcoms
sub
or
xor
cli
lcall
dec
cmpsb
imul
adc
sub
mov
sub
pop
popa
or
test
incl
and
out
or
loop,pn
jmp
and
dec
xchg
adc
incb
jg
jo
out
sqrtps
rcr
mov
aaa
loope
xor
or
ds
scas
push
cs
hlt
stos
dec
push
push
int3
add
incl
lods
adc
push
fnsetpm(287
cmpsb
clc
jg
pop
ret
scas
mov
inc
sub
repnz
iret
jb
out
fistl
or
bound
mov
inc
nop
jmp
lahf
add
sub
les
xchg
sbb
or
inc
push
jnp
mov
scas
andb
pop
add
sub
movsb
mov
ljmp
add
jae
inc
mov
cmp
addr16
test
insb
repz
add
jp
mov
jmp
pop
mov
and
pop
pop
inc
add
adc
dec
int3
test
push
lea
arpl
and
or
jmp
aam
adc
xchg
and
and
call
cmp
call
push
in
jl
aaa
andl
incl
jo,pn
xchg
xchg
cmp
add
xchg
dec
cmp
in
cmp
adc
jg
add
mov
add
jecxz
xchg
inc
cmp
repnz
decl
jae
test
or
js
jmp
mov
pop
inc
inc
inc
jmp
cmpsl
inc
mov
cmc
cmpsb
mov
jg
adc
mov
inc
jb
mov
lret
sub
inc
popf
ds
into
cld
ljmp
stc
xor
xchg
jg
pusha
sbb
push
and
lock
dec
test
add
pop
dec
and
lcall
hlt
and
stos
dec
stos
mov
pop
adc
aaa
gs
xor
ret
call
mov
push
repz
pop
cmp
addr16
adc
repz
cli
push
cwtl
stc
lret
ss
dec
in
add
jmp
aaa
xchg
adc
rolb
cmp
mov
ret
cli
sti
adc
lods
dec
shlb
cmp
and
xor
sbb
and
or
dec
ret
dec
inc
or
push
je
add
fistpll
int3
nop
lock
shrb
and
adc
mov
pop
inc
das
add
enter
inc
inc
adc
dec
hlt
in
out
jmp
inc
clc
mov
pop
cs
sub
adcl
call
out
out
sub
xchg
pusha
cmpsl
call
and
rcrl
and
xor
add
xchg
push
imul
outsb
insl
sub
jo
mov
and
stos
xor
inc
cmc
sub
outsl
dec
sub
cltd
ds
scas
adc
aaa
mov
ret
mov
icebp
and
cmp
mov
xor
and
pop
push
incl
mov
movsb
jbe,pt
pushf
cwtl
test
or
push
cmc
adc
sub
call
mov
roll
and
mov
cmp
aaa
lahf
inc
in
xor
sub
loopne
mov
adc
jae
shr
xchg
ss
fcomps
repnz
inc
adc
xlat
adc
sarb
decl
xchg
lods
sbb
sarl
daa
and
mov
adc
jg
cmpl
incl
push
ret
dec
popf
dec
dec
inc
test
xchg
ljmp
in
inc
insl
xlat
or
movsb
push
mov
call
xor
hlt
xor
dec
cmp
sub
jns
lock
lcall
or
and
mov
insl
jno
jg
mov
test
je
mull
lcall
sub
dec
into
or
jae
pop
into
mov
push
pop
ret
xchg
cwtl
mov
hlt
decb
dec
xchg
lock
popa
loope
out
jne
cmp
jecxz
mov
mov
xor
jmp
and
iret
daa
mov
rolb
dec
shll
loop
jle
mov
or
adc
and
mov
cld
ja
cmp
pop
jns
popa
sub
xlat
orb
sub
sbb
xchg
sub
test
ljmp
mov
pop
out
roll
ljmp
cwtl
push
aam
shll
xchg
insb
xor
cli
decl
xor
push
lcall
mov
jmp
pushl
les
xchg
jle
sbb
or
incl
bound
add
ss
fwait
mov
js
iret
or
mov
je
sub
aas
push
mov
int3
stos
ljmp
cli
jp
push
or
and
aaa
add
pop
lret
add
imul
repnz
push
sub
mov
and
dec
ljmp
decl
sbb
mov
pop
add
andl
lcall
ljmp
clc
orb
xchg
mov
sub
mov
cli
xor
shrl
cltd
call
pop
cmp
std
adc
arpl
movsb
scas
and
inc
dec
push
cmp
hlt
sub
stos
dec
jb
test
jae
mov
mov
test
leave
adc
mov
push
push
cltd
in
stc
fsub
sbb
jl
pusha
incl
stos
push
cltd
xchg
sbb
and
lea
dec
add
fbstp
pinsrw
or
imul
mov
call
jne
fwait
cmp
mov
out
mov
push
pushf
and
daa
es
inc
jp
rolb
mov
test
jmp
adc
cmp
mov
sub
pusha
jmp
call
aaa
cmp
jle
xchg
daa
sub
fcom
pop
pushl
je
pop
dec
loop
pushl
pop
test
je
scas
pusha
add
outsl
cmp
add
cmp
daa
je
xor
xlat
cwtl
cmp
ljmp
add
mov
mov
les
shr
in
push
cmpsb
fisubrl
bound
cli
mov
push
mov
lcall
enter
imull
gs
mov
inc
fsubrl
movsb
inc
es
mov
loopne
in
mov
or
xchg
mov
test
jae
push
imulb
pop
push
dec
and
icebp
fstpt
jle
shrb
dec
sub
pop
mov
dec
rorb
ret
mov
icebp
ljmp
adc
sbb
adc
in
aaa
mulps
test
jl
sbb
inc
sbb
clc
lcall
jg
xorl
cli
psraw
in
add
ljmp
insb
or
jmp
pop
inc
inc
addr16
idivl
aaa
popa
dec
outsl
fbld
or
or
mov
jge
addr16
mov
or
ror
cmp
jbe
pusha
or
call
inc
and
inc
jns
movsb
or
test
cmpsb
lcall
add
sub
push
lock
jno
jnp
mov
mov
loop
jae
decl
repz
inc
sub
jne
dec
test
cmp
aas
inc
nop
jg
iret
push
out
or
je
xchg
jle
jne
or
mov
call
inc
dec
sbb
rcrl
rep
and
ret
lcall
icebp
mov
mov
jnp
mov
std
jl
adcl
mov
sub
and
jge
add
aam
mov
pop
mov
mov
fisubrs
jmp
fdivrp
loopne
idivb
lcall
add
inc
loopne
and
or
loope
or
incl
mov
aas
or
repnz
pop
sub
data16
fsubp
pop
repnz
loop
das
fiadds
call
sub
aad
jl
ret
push
jecxz
out
popa
pusha
or
and
ljmp
push
out
fcomps
fstpt
in
mov
clc
sub
idiv
mov
push
cltd
aam
enter
inc
jb
xchg
jnp
mov
addb
or
or
xchg
stos
push
or
frstor
ret
into
sub
addr16
cmp
decl
xchg
loopne
mov
fstps
xor
or
pusha
hlt
imul
sub
sub
hlt
int3
jle
or
nop
lcall
push
mov
insb
in
pop
fdivl
bound
mov
arpl
jle
adc
incl
sbb
jl
add
and
movsb
sub
fndisi(8087
sbb
add
movsb
ljmp
mov
cmpsb
lock
pushl
stc
push
ds
push
mov
xor
mov
test
dec
jl
movsb
ret
sti
mov
fs
jg
je
cmp
or
aas
push
rcrb
arpl
out
test
jg
cmpsb
mov
movsl
add
repz
adc
and
es
or
negb
and
sbb
lock
or
pushl
add
adc
xor
xor
out
cli
pushl
sbb
movsb
dec
popl
pushl
fsubl
rcrl
cmp
mov
jnp
jg
subl
jb
rcr
add
mov
loope
outsl
sbbb
lret
subb
mov
pop
fimuls
cmp
pushl
jp
fdivrl
sarb
jecxz
or
fstpl
xor
add
aaa
out
push
mov
mov
cltd
add
ret
add
dec
sti
out
xchg
pop
insl
pop
shlb
sbb
fsubs
mov
scas
int
popa
mov
mov
jmp
jl
and
adc
fs
sbb
gs
mov
pop
out
adc
incl
push
fisubrl
aaa
test
dec
dec
mov
jae
xlat
jmp
lock
jns
and
xchg
pop
adc
andl
lods
dec
or
push
sub
jnp
das
or
jg
dec
jne
add
leave
and
inc
filds
int
xchg
adc
rcrb
addl
ret
outsb
call
push
orb
ret
inc
sub
pushl
xor
xchg
ja
movsb
adcl
cmp
lock
sbb
xchg
dec
push
xchg
daa
arpl
jge
adc
dec
sbb
pushl
lret
xchg
and
xor
popa
and
push
les
add
arpl
add
popf
pop
arpl
jb
ret
xor
call
test
test
je
pop
sub
imul
call
and
lods
rcl
push
xchg
and
aam
push
jns
out
or
aad
mov
lret
xchg
push
cwtl
clc
ljmp
jp
mov
stos
pcmpgtb
in
incl
adc
cmc
shrb
xchg
cmp
pushf
andnps
add
imul
lcall
xchg
ss
or
cmp
mov
cwtl
push
lods
pop
xor
sub
mov
call
das
sar
mov
fadds
test
xchg
mov
inc
filds
lcall
cmc
fldt
sbb
dec
sbb
lcall
dec
insl
and
dec
mov
inc
mov
jl
in
daa
dec
adc
inc
and
out
js
jl
fs
jnp
in
pop
or
adc
mov
ds
lcall
icebp
incl
push
mov
iret
and
and
mov
hlt
jmp
push
je
pop
dec
xchg
add
mov
addl
lock
pushl
arpl
fsubs
adc
bound
insl
in
and
xor
decl
mov
xor
lret
fisubrs
jge
call
rol
rolb
mov
lret
popf
cmp
mov
fiadds
fsubl
fadd
test
push
cs
fidivrl
pushl
rclb
dec
or
mov
cmpl
ret
adcb
push
lock
call
lods
mov
movsl
dec
cmp
jb
mov
mov
sub
lcall
push
filds
lea
outsl
mov
out
xchg
inc
pop
jbe
out
mov
in
pushl
add
sbb
mov
or
std
push
sbb
push
decl
imul
or
sahf
pusha
sbb
faddl
xor
lret
dec
xor
sub
cmp
jmp
ljmp
xchg
pusha
add
cli
test
loopne
scas
jle
loopne
ficompl
das
fwait
add
ljmp
cvtpi2ps
dec
mov
adc
mov
shll
cmp
push
mov
mov
pop
orl
fs
andb
inc
and
incl
mov
xor
mov
rolb
xor
sub
pusha
aam
cmp
mov
jp
or
sbb
fistps
xor
popa
lahf
ret
xlat
aam
ds
dec
and
loopne
push
hlt
add
filds
or
pop
repz
enter
xchg
push
xor
dec
lret
fildll
mov
add
lock
mov
insb
je
xlat
nop
test
mov
outsl
mov
dec
adc
adc
ljmp
es
adc
sub
xchg
jge
mov
jns
stos
mov
adc
data16
sub
test
xor
stc
movsb
dec
shlb
cmpsb
inc
xor
call
jp
push
mov
add
ljmp
jge
outsb
clc
mov
pop
cmc
call
or
jo
daa
out
ficoml
pop
xor
iret
and
ljmp
addl
fnstsw
inc
imul
pop
jge
pop
mov
add
sbb
outsl
mov
cwtl
mov
loope
pop
xor
pop
pusha
sbb
hlt
filds
inc
lret
or
mov
add
push
mov
ss
cltd
push
or
insl
lcall
push
js
push
jmp
dec
mov
add
adc
shlb
sbb
dec
test
mov
cmp
jg
imul
ss
adc
cmp
int
pushf
sbb
mov
jle
aad
stc
add
push
add
pop
and
add
pushf
mov
and
sbb
mov
pusha
add
mov
xor
inc
cmp
pop
ret
mov
mov
and
dec
sbb
inc
dec
pop
cmpb
xor
rolb
int
mov
decl
inc
dec
pop
sti
inc
xor
pusha
in
pop
xor
mov
subb
xor
shr
add
ljmp
cltd
xlat
add
xor
sbb
das
out
mov
dec
pushl
cmp
sub
mov
dec
xchg
xor
mov
mov
xchg
sub
scas
adc
les
sbb
ds
cmp
decl
sti
ret
or
cwtl
out
mov
sub
mov
xor
shlb
decl
dec
mov
sbb
dec
inc
xor
test
xor
call
lock
pop
or
mov
cmp
jno
movsl
mov
iret
xor
test
call
cmp
or
xchg
sbb
incl
int3
popa
xor
loopne
push
pusha
test
int3
outsl
mov
xor
mov
out
addr16
shlb
test
pushaw
ljmp
sbb
aam
mov
repnz
xchg
test
sahf
roll
or
nop
lods
xchg
adc
int3
push
das
pop
ret
adc
stos
add
or
cld
repz
adc
dec
arpl
filds
pop
in
repz
dec
fdivl
ret
pop
loope
pop
jp
scas
sbb
rclb
ljmp
fmuls
xor
add
loop
lea
decl
shlb
cmp
ljmp
clc
mov
or
inc
inc
sub
jmp
addr16
out
icebp
mov
cmpsb
adc
ljmp
xchg
mov
movsb
filds
mov
sub
cmp
imul
and
ljmp
sbb
shlb
scas
jl
sub
inc
dec
pop
mov
rolb
adc
push
mov
aaa
cld
incl
or
push
bound
xor
push
pop
enter
stos
mov
jecxz
iret
lods
enter
add
call
inc
mov
xchg
mov
cmp
xchg
inc
lcall
dec
jecxz
addb
out
sbb
decl
dec
cli
shll
mov
call
sahf
push
sbb
jae
les
xor
lock
cmc
cwtl
out
dec
push
pop
aad
mov
call
pop
jnp
push
push
lods
mov
lcall
push
data16
and
inc
int
mov
cltd
mov
jp
sti
sub
xor
mov
pushl
add
loopne
andl
dec
adc
xorb
flds
push
dec
test
fisttpll
iret
aad
add
add
add
fadds
and
jg
ss
pop
cli
orl
jae
stos
lret
je
incl
aaa
rcll
dec
or
mov
mov
lods
cwtl
add
lcall
mov
pop
aas
dec
mov
imul
dec
pop
push
mov
add
sar
and
and
adc
or
inc
fcomip
push
fiadds
push
rcr
jl
in
loop
jno
sub
adc
xor
cmp
xor
adc
sub
xor
jbe
xchg
add
mov
mov
lahf
lods
jp
sbb
imul
pop
push
popa
dec
pop
adc
shrl
mov
cmp
add
or
jno
xchg
cmp
and
out
jbe
decl
pop
mov
ljmp
jl
adc
pop
daa
push
loopne
xor
outsl
pop
push
push
pop
push
sar
jmp
add
or
loopne
push
pop
cwtl
adc
nop
or
test
decl
clc
test
test
arpl
test
xchg
test
pop
ret
fisubs
outsb
enter
ret
push
xchg
or
cwtl
xchg
xchg
xchg
test
dec
mov
add
arpl
and
popa
jmp
popa
and
bound
daa
push
jae
xchg
and
dec
cld
ljmp
mov
pop
ds
pop
jb
pop
mov
push
jne
sub
cmp
popa
push
sbb
in
ds
loop
inc
clc
call
rcll
les
cwtl
jno
hlt
xor
lods
rclb
add
ficoml
lret
inc
add
add
lock
add
cmp
push
bnd
or
xchg
sbb
sub
xor
dec
movsl
fimull
jp
push
imul
out
pop
rorb
shrb
pop
lods
rcl
jp
sti
jne
adcb
shrb
das
cld
push
or
or
ljmp
jge
jne
repnz
das
arpl
nop
or
ljmp
jle
repnz
rolb
int
dec
adc
jle
nop
add
sbb
call
insl
xlat
jg
lock
mov
push
sbb
decb
inc
sbb
xorl
mov
add
and
pop
xchg
push
add
mov
or
adcb
add
add
and
push
jb
imul
adc
dec
cmp
sbb
lcall
dec
adc
cmp
sub
pushl
push
and
addr16
addb
and
jge
fsubs
pop
jp
or
lds
jmp
jp
xor
cwtl
test
jmp
outsl
mov
decl
cwtl
xchg
or
sbb
mov
xchg
dec
cltd
bound
cwtl
lcall
dec
cwtl
cmpsb
xchg
cmp
mov
lcall
jge
cmp
push
cmpsb
aad
ret
push
fwait
push
pop
call
adc
mov
sub
add
mov
jecxz
decl
xorl
sub
pop
jo
ja
push
sbb
sub
lock
push
sbb
sbb
xor
push
hlt
and
out
dec
add
xchg
xchg
data16
loopne
rcll
inc
lret
pop
or
add
mov
and
pop
xchg
mov
rolb
and
std
nop
add
data16
clc
push
push
add
sbb
fdivrs
mov
pop
outsl
call
jne
xchg
add
nop
add
pusha
inc
mov
clc
jne
repnz
ret
addr16
fs
and
aas
xor
inc
adc
cmpsb
push
or
nop
incl
call
das
jnp
nop
add
or
push
cmp
mov
mov
cld
pop
cld
adc
add
cltd
push
add
push
adc
cmp
inc
decl
jle
mov
sbb
arpl
sub
jle
pop
ljmp
xor
xchg
cmpb
sub
in
pop
mov
or
add
pop
subl
pop
jo
leave
rcrl
cmp
add
push
push
aad
dec
sub
pop
ja
cld
dec
dec
jg
xchg
call
and
je
sbb
push
jg
test
jmp
add
push
addb
adcl
or
inc
mov
stos
gs
stos
pop
icebp
mov
test
gs
mov
es
lcall
jmp
mov
lods
lret
lret
ror
sbb
dec
sub
stos
sub
lret
push
xor
or
stos
pushl
aaa
xor
lods
and
insl
adc
arpl
cmp
push
clc
loop
cmp
scas
dec
pop
push
or
sub
and
sub
sbb
xor
lock
mov
pop
mov
sbb
or
ss
sub
inc
pop
sbb
pop
dec
add
decl
les
xchg
subl
in
or
or
lahf
sahf
cmp
inc
popf
add
std
cmp
decl
fldt
popf
shrb
lds
pop
das
pop
insl
xor
lret
repz
mov
sub
pop
cmpsl
dec
pop
clc
jmp
clc
and
cmp
and
sub
rorl
pop
mov
mov
pop
fstl
inc
ljmp
lods
adc
dec
xor
or
adc
add
lods
jl
mov
xor
mov
xor
adc
scas
cli
jg
and
sub
push
mov
outsl
clc
scas
sub
and
pop
or
out
pop
dec
aam
mov
jl
cmp
adcb
xchg
aam
dec
repnz
rorb
cmpl
push
mov
lock
inc
lcall
cmp
lods
dec
push
dec
inc
subb
jae
adc
and
pop
jo
push
push
dec
fcomi
es
cmp
fisttpl
sub
push
mov
pop
mov
aaa
add
add
addr16
sbb
decl
xchg
lret
mov
in
lret
mov
nop
or
mov
cmp
ljmp
fiaddl
fwait
inc
rol
and
cmpsb
cmp
mov
dec
sbb
ss
inc
jb
ret
pop
je
ja
loope
sar
inc
or
pop
push
loopne
dec
lock
in
inc
push
mov
incl
aas
mov
popf
xchg
mov
jbe
shrb
mov
lock
sub
stos
sub
or
nop
or
or
popa
push
pop
jl
out
es
jl
mov
shll
xor
add
inc
addl
aam
pop
sbb
inc
popf
inc
inc
mov
pop
push
xor
pop
add
insb
fadd
cmp
jg
sbb
mov
jns
aam
or
and
inc
je
cld
and
ss
jbe
nop
repz
jg
or
add
ja
fldz
lahf
or
ljmp
push
or
fcompl
add
loope
and
inc
jno
xchg
push
mov
mov
adc
cmpsl
pop
lcall
arpl
mov
push
push
lret
mov
cmpb
add
jno
lcall
dec
push
cmp
cmp
inc
sub
or
sbb
fsubl
into
mov
data16
sbb
test
mov
fwait
lcall
pop
clc
adc
int3
push
xor
sbb
jno
jne
cld
xor
xor
cmp
addb
ret
jne
lock
iret
in
iret
dec
mov
pop
cmp
mov
and
shrb
shll
add
or
sarl
jecxz
adc
push
bound
sub
lock
in
or
mov
sub
aas
add
lods
and
popa
cmp
call
loope
mov
mov
dec
data16
ljmp
hlt
loopne
jns
subb
nop
addr16
inc
push
or
adc
ret
sub
push
pop
sbbl
sub
mov
sbb
mov
add
xor
push
fldl
and
aad
pop
rcr
mov
mov
jo
push
cli
adc
push
out
xor
jne
leave
pop
fbstp
lahf
int3
inc
jns
stos
jle
xlat
mov
or
add
testl
decl
ret
movsl
and
mov
lods
add
push
adcb
mov
call
mov
rorb
mov
push
nop
in
sbb
out
decl
lods
mov
sbb
xchg
pop
fadd
insb
inc
xchg
cmpsl
decl
dec
cmpsb
test
pop
mov
sbb
movsb
sar
hlt
or
adc
pusha
dec
lock
mov
mov
or
xor
loopne
outsl
clc
ret
dec
pop
mov
xchg
pop
mulb
inc
rclb
and
cld
mov
loopne
stc
movsb
push
ja
xor
insl
rclb
dec
cltd
xor
lcall
push
ficomps
jmp
mov
jl
pop
aad
and
out
xchg
decl
pop
ficomps
rorb
loope
push
loope
mov
and
push
xlat
sbb
jb
std
loope
arpl
jne
jo
xchg
enter
imul
add
jecxz
daa
adc
push
loopne
mov
cmp
xor
add
and
popf
adc
adc
jg
push
fsubs
jle
addr16
jno
adc
push
int3
adc
push
cs
mov
mov
lcall
jmp
sbb
cwtl
stos
je
lcall
mov
add
jno
sbb
push
shrl
ljmp
negl
movsl
xchg
sub
add
xchg
out
and
and
sub
sbb
jle
push
adc
pop
pop
dec
pop
cld
js
cwtl
or
or
mov
push
test
mov
or
adc
and
pop
ljmp
dec
jmp
lods
push
xor
lret
xchg
lods
pushf
cmpsl
cs
lds
add
pop
mov
mov
pop
dec
les
test
pop
add
inc
add
subl
call
jno
stos
sbb
mov
aad
add
les
stos
fwait
cmpsb
jmp
mov
pop
arpl
sub
dec
jmp
adc
jo
jbe
das
mov
cli
ficomps
loopne
loopne
cmp
and
sbb
cmpb
lock
lcall
loopne
add
rcr
in
sub
filds
mov
call
jp
add
and
loopne
pop
js
adc
jb
mov
mov
call
dec
xor
jecxz
bound
mov
pop
pop
int
xchg
call
push
xor
xchg
cmpsb
pop
sbb
adcl
mov
add
inc
pop
lret
pop
mov
aam
test
rcr
out
clc
sbb
mov
cmpsl
fisubs
add
out
clc
call
repnz
je
push
and
and
daa
cltd
hlt
cwtl
sub
fs
inc
inc
pop
sub
sbb
je
jb
decl
sbb
jl
inc
jl
repnz
or
pop
jmp
or
lock
jmp
push
pop
into
call
das
push
rclb
lcall
inc
cmp
jae
xor
cli
and
inc
mov
mov
jns
and
xchg
mov
push
push
in
outsb
cwtl
cli
or
mov
insl
rcr
adc
addr16
int3
lods
mov
add
xchg
add
jo
pop
and
xorb
push
add
add
cmp
sbb
stos
popa
in
xchg
scas
push
and
adc
jbe
push
add
cs
out
jmp
std
int3
and
and
cmp
and
mov
pop
roll
call
cld
or
adc
jne
andl
push
mov
inc
andb
loop
pop
decl
push
fcomps
sbb
call
add
push
pop
rcrl
jae
int
pop
and
ljmp
xor
or
int3
push
movsb
inc
popa
sub
mov
inc
mov
inc
or
or
jg
dec
mov
sub
sub
sub
test
pop
rcrl
fisubrs
and
xlat
dec
lds
out
sbb
arpl
lret
adc
or
jg
cwtl
aad
jo
inc
call
fnstenv
pop
jecxz
mov
repnz
sarl
jp
je
and
xchg
fldcw
xlat
scas
addr16
sahf
pop
loop
int3
mov
incl
cld
jp
cwtl
mov
fwait
sbb
roll
mov
push
dec
aam
in
inc
incl
inc
andb
roll
pop
adc
sub
sbb
adc
mov
push
pop
push
enter
mov
fbstp
clc
out
dec
lcall
enter
stos
mov
mov
mov
mov
icebp
ret
or
mov
xor
add
test
sub
addl
cmp
sbb
test
icebp
fcomip
mov
ret
and
idivb
sub
test
lock
incl
sbbb
lret
ds
adc
sub
add
mov
sub
pusha
pushf
mov
loopne
sub
aam
cmpb
add
xor
shl
and
inc
cld
sub
adc
dec
add
adc
mov
mov
andb
cli
mov
xchg
or
movsb
push
mov
mov
rcll
adc
and
xchg
adc
push
mov
xchg
dec
stos
test
push
inc
jo
jg
jmp
pop
jnp
lock
lret
mov
pushf
xchg
dec
movsl
adc
jmp
shlb
stos
popa
pop
add
mov
test
mov
pop
mov
ljmp
sbb
subb
pop
pusha
sbb
outsl
repz
aam
das
add
mov
add
adc
addl
xchg
mov
dec
mov
call
xor
andl
jecxz
iret
inc
xor
loop
cwtd
aad
jmp
fldenv
lods
cltd
xchg
sbb
lcall
fwait
roll
cmp
ss
inc
mov
jg
decl
out
xchg
or
stc
add
add
mov
inc
fwait
popa
mov
sub
ja
les
sbb
mov
xchg
jg
push
stos
mov
dec
and
lds
dec
pop
sbb
push
jp
scas
xchg
pop
dec
mov
sbb
lds
adc
sub
lds
out
jo
ud2
pop
xor
call
sbb
adc
daa
mov
mov
data16
out
rolb
push
incl
nop
push
xchg
in
bound
or
and
decl
and
das
fisubl
test
mov
ljmp
push
mov
xor
addb
bound
jae
imul
jg
lods
mov
das
sub
mov
fistpll
and
mov
es
add
xchg
les
mov
shl
jmp
repnz
dec
movsl
mov
adc
jecxz
cmp
push
or
xchg
lock
cmc
lcall
dec
and
inc
aam
or
sub
dec
ror
cwtl
xor
dec
adc
test
add
pop
jg
std
push
or
ret
jne
sub
fadd
xchg
push
gs
data16
repnz
add
inc
pop
cmp
or
mov
roll
das
cmp
outsl
pop
dec
arpl
pop
lret
add
add
cli
pop
scas
mov
sbb
adc
push
clc
bound
push
and
aaa
xchg
enter
das
xchg
incl
jae
or
xor
das
nop
call
jne
mov
cmp
adc
xbegin
fwait
jnp
push
mov
inc
insb
out
add
inc
aaa
es
outsb
hlt
ret
js
aad
ret
lcall
in
insl
ret
cld
sub
ds
icebp
mov
sub
ja
pop
push
scas
and
inc
loop
inc
sub
or
ret
add
mov
or
js
lcall
rolb
mov
inc
adc
mov
push
ljmp
cli
das
data16
popa
xor
xchg
js
idivb
mov
clc
dec
decl
je
mov
in
pop
sub
in
and
push
mov
test
stos
add
jle
call
adc
mov
cld
incl
aas
mov
inc
in
aam
mov
test
jge
jg
fdiv
xor
push
rcl
test
stos
sbb
dec
fcompl
pop
fisubl
rcrb
cmp
xchg
mov
ljmp
xor
shlb
mov
stos
fildll
sub
loope
ret
in
loopne
in
xchg
dec
push
mov
ljmp
inc
subl
xchg
and
movsl
push
xor
int3
adc
rcrb
inc
or
push
add
call
test
pop
dec
test
mov
adc
adc
xor
and
addb
add
push
test
mov
adc
push
lock
add
adc
mov
mov
lcall
movsb
imul
movsb
lods
inc
fs
lods
push
call
mov
daa
decl
aas
ffree
inc
sub
leave
jbe
sbb
das
cs
mov
mov
inc
fstps
icebp
lcall
dec
fidivs
lods
rol
cli
fsubl
push
test
mulb
mov
cli
xchg
cmp
sbb
mov
insb
leave
and
push
sub
out
pushf
inc
fisttps
and
lea
cmpsl
cmp
adc
test
mov
mov
lcall
xor
js
or
add
jbe
or
lcall
out
dec
loopne
add
adc
aad
orb
cmp
and
xchg
inc
dec
enter
sbb
dec
sub
mov
mov
jno
xchg
test
push
test
xchg
pushl
push
imul
jno
inc
jbe
push
pop
in
test
hlt
jmp
scas
mov
loope
fnsave
negb
cwtl
in
push
sub
push
pusha
cli
subl
push
xchg
mov
aam
shlb
jno
lret
push
cmc
mov
ud0
cltd
in
adc
test
sub
test
sbb
pushl
fisttpl
and
xor
rcrl
ret
arpl
pusha
test
and
cmp
das
push
icebp
or
call
rol
and
stos
gs
mov
push
rclb
xor
xchg
add
add
sbb
mov
mov
add
and
mov
push
adc
call
ljmp
jg
sub
dec
js
mov
push
movntps
jmp
cmp
orb
cmc
mov
push
and
ljmp
test
and
mov
push
test
insl
adc
mov
ljmp
call
daa
xchg
icebp
or
icebp
inc
add
mov
or
rclb
cmpsb
cwtl
scas
orb
incl
add
xchg
dec
add
cmp
ja
push
pop
push
ds
psadbw
mov
repnz
lret
in
mov
addr16
add
add
xchg
jg
dec
push
mov
cld
push
ret
call
push
test
sbb
dec
pop
and
pop
dec
adcl
jecxz
in
adc
jno
test
icebp
ljmp
lds
and
fbstp
mov
call
je
ja
jne
dec
mov
in
inc
and
adc
lock
incl
and
add
cmp
jo,pn
rcrl
ljmp
xor
xor
gs
cmp
cwtl
int3
popa
pop
jge
pop
jg
jecxz
into
and
or
mov
jns
in
popa
or
inc
inc
xor
mov
pop
cli
faddl
sbb
add
stos
popa
push
xor
adcb
push
mov
lcall
lcall
hlt
inc
mov
int
ss
dec
xchg
pusha
add
js
and
shll
decl
aas
aad
popa
add
test
mov
dec
aaa
into
push
cltd
scas
mov
add
in
adcl
std
pushl
sbbb
mov
out
outsl
cmp
fcomip
aas
orl
inc
dec
daa
add
scas
sar
adc
lock
call
inc
mov
pushf
add
sbb
sub
orb
stos
fadds
add
sahf
bound
filds
sub
and
sub
sbb
call
mov
test
jg
push
sbb
das
adc
jmp
sbb
xchg
jnp
push
push
push
sub
mov
jmp
in
aaa
mov
jecxz
popf
mov
xchg
out
add
das
clc
scas
push
and
ljmp
xor
jo
adc
call
loop
popf
mov
cmp
push
clc
das
aaa
pop
sahf
add
dec
cmp
jno
or
incl
inc
push
push
test
push
mov
bound
push
popa
add
lods
ret
nop
call
clc
lcall
les
add
les
adc
ja
inc
mov
xor
inc
add
das
push
cmp
xor
jg
add
sub
mov
cmpsl
mov
mov
mov
loope
mov
stos
add
mov
add
sbb
jnp
cmp
cmp
call
mov
adc
ret
outsl
jns
sbb
sbb
cmp
stos
jmp
cmpl
pusha
sub
cmp
rcl
outsl
outsl
mov
add
mov
lock
xchg
add
movsb
pusha
test
mov
or
mov
loopne
sbb
push
lret
stos
sub
mov
js
cld
dec
mov
addb
mov
ret
add
loop
test
test
fwait
scas
cmp
outsl
sbb
pop
dec
jp
out
ret
cmp
ret
fwait
dec
adc
mov
jg
cmp
xchg
mov
cltd
ds
hlt
sub
mov
xor
mov
js
ret
xchg
inc
jns
pusha
cmp
mov
mov
mov
stos
mov
pop
xchg
pop
xchg
aaa
addl
cs
clc
ljmp
xchg
add
inc
icebp
lock
inc
outsb
mov
jmp
push
stos
cld
xchg
xor
andb
dec
xor
lret
pushf
inc
adc
sbb
clc
call
dec
add
roll
ret
ret
clc
sbbl
decl
mov
mov
mov
push
add
push
ljmp
mov
adc
ret
adc
jo
inc
leave
push
call
or
or
or
clc
xchg
mov
jg
mov
mov
xchg
lods
mov
rorl
jb
mov
mov
and
mov
sarb
sub
clc
and
push
inc
and
jo
cmp
xor
jmp
call
mov
xor
outsb
dec
add
jno
xchg
aaa
lret
dec
loopne
or
mov
jp
incl
rcrb
sbb
nop
add
adc
jge
add
pop
into
push
filds
mov
ds
fmuls
shlb
ljmp
push
in
dec
subb
aas
push
mov
and
pop
ja
ljmp
sub
push
setne
add
sbb
fwait
jmp
inc
xchg
je
sub
add
dec
andb
sbb
decl
shll
mov
orb
shrl
cmpb
andb
jge
cli
fcomip
ret
and
stos
mov
jo,pt
leave
sub
jp
test
pushl
aas
sub
lret
leave
mov
inc
inc
pushf
mov
cltd
mov
ds
add
and
mov
sbb
jmp
subl
add
decl
mov
inc
jg
fisttpl
mov
mov
add
inc
lock
call
loop
jecxz
arpl
ffreep
and
scas
sub
lods
adc
cltd
xor
lcall
roll
addb
pop
dec
incl
add
push
enter
pop
std
call
add
inc
jae
adcb
xchg
push
adc
nop
add
mov
and
mov
mov
into
daa
js
cmp
or
popa
std
clc
subl
imul
inc
subl
rorl
sub
fs
bound
or
pushl
xchg
inc
cmpsb
add
nop
add
dec
movsb
sti
lods
sub
fisttps
das
sbb
inc
or
jg
hlt
mov
mov
dec
dec
fsts
adc
xchg
fisttpll
mov
mov
pushl
mov
nop
or
jp
adc
lock
fmull
ljmp
fldt
push
mov
xor
jmp
aad
popf
push
mov
inc
dec
addb
fwait
xchg
push
jne
mov
testb
mov
push
push
cmp
mov
push
andb
lods
and
es
mov
setno
mov
xchg
jmp
adc
aaa
cld
inc
add
push
sbb
add
mov
mov
adc
clc
jmp
push
call
shll
sar
sbb
push
xor
push
sub
jg
and
sbb
and
push
push
pushf
mov
or
lret
sub
pop
or
jmp
or
aam
pop
pop
mov
jg
jmp
lods
jl
and
adc
and
clc
sub
inc
sbb
outsl
decl
lock
fildl
sub
inc
add
mov
and
sbb
dec
ljmp
loope
adc
adc
sub
or
fstpl
ljmp
jg
mov
add
or
addr16
test
test
lock
add
cmp
lcall
fneni(8087
sub
fmuls
arpl
popf
scas
rcll
loop
push
fstps
gs
cltd
popa
mov
mov
inc
lret
add
jg
sub
xor
sbb
ds
pop
stos
cmp
pop
movsl
jo
call
cltd
add
xor
int3
cltd
adc
loope
fildll
cmp
call
scas
add
push
insl
sub
fdiv
cltd
arpl
loope
les
enter
pop
test
loopne
mov
fsubl
and
xchg
imul
call
cmp
or
or
fidivrs
xorl
adc
cld
pop
lock
and
gs
mov
or
mov
rorb
or
and
jg
or
data16
mov
cmp
adc
popa
out
sbb
adc
roll
cld
mov
jmp
xchg
in
test
cmp
out
dec
mov
js
add
cmc
xchg
or
and
or
stc
and
pushl
mov
mov
nop
add
dec
mov
xchg
popf
frstor
inc
dec
std
jmp
mov
adc
cmp
sub
pop
fwait
loopne
nop
sub
ljmp
movsb
icebp
lret
jmp
inc
mov
repz
ret
and
push
xor
bound
pop
push
cmp
loope
mov
loopne
adc
lock
add
mov
mov
clc
xchg
jg
or
rorl
orl
mov
pop
cli
jg
and
inc
xor
mov
in
inc
jecxz
xchg
clc
ljmp
orb
call
mov
ljmp
out
scas
push
cmp
rcll
or
call
lea
sbb
ljmp
xchg
loope
cmpsb
popa
loope
fstpl
movsl
or
push
mov
push
or
inc
ret
push
add
pop
fbstp
call
add
or
cltd
cltd
or
call
mov
or
xchg
or
in
jle
pop
pop
add
push
pop
outsb
cmp
jg
or
adc
pop
push
in
mov
pop
out
inc
nop
in
cmc
sub
inc
mov
inc
lret
imul
jp
and
mov
mov
mov
pop
xchg
dec
jne
clc
das
inc
gs
test
push
bound
loopne
push
test
test
das
orb
push
mov
les
lock
ljmp
xorb
mov
push
cmc
out
sbb
mov
mov
sbbb
ffreep
push
loopne
or
jmp
or
je
add
cld
call
cmpsb
scas
aam
incl
inc
mov
or
jg
rclb
xchg
ljmp
or
pop
nop
pop
sub
mov
gs
es
pop
shll
mov
adc
cmp
add
cmpsb
jg
out
fcoms
out
and
jno
iret
or
jg
inc
jno
fdivs
mov
nop
or
das
pop
test
push
sub
out
loope
push
incl
mov
lcall
xchg
mov
insl
sbb
repnz
js
loope
xchg
mov
adc
adc
push
xor
mov
cmpsl
fildl
mov
stos
lock
mov
ljmp
lock
and
push
js
sbb
fwait
mov
nop
nop
cwtl
mov
ret
dec
sub
rcrl
add
scas
mov
or
out
xor
dec
daa
mov
mov
shll
and
lods
xchg
push
ja
int
pusha
sbb
clc
mov
js
mov
pushf
add
push
test
xchg
inc
std
dec
add
ret
jp
push
enter
ljmp
pop
jge
out
pop
pop
mov
outsl
scas
sbb
mov
mov
test
repz
mull
inc
ret
push
push
pop
lea
pop
inc
sar
mov
out
sbb
inc
pop
xor
aaa
std
dec
mov
in
lock
jecxz
adc
into
movsl
mov
or
ja
jg
stc
and
sub
lock
xchg
nop
add
int3
ror
sahf
mov
pop
pushl
clc
js
xchg
ja
mov
sub
test
jo
dec
push
stc
adc
or
cmp
cmp
lcall
pop
xchg
fdivr
lods
call
daa
xlat
cltd
adc
rcrb
aam
cmpsb
adc
push
fdivrs
or
mov
fs
scas
or
sti
into
xchg
mov
inc
iret
jl
pushf
or
popf
call
sarb
aaa
fidivrs
add
test
subl
ficoml
movsl
shlb
jg
hlt
cmovo
xlat
rclb
test
jge
test
mov
ljmp
cmp
negl
inc
push
clc
add
add
push
jne
pop
out
idivl
and
ljmp
pop
loope
mov
add
xor
adc
inc
jmp
push
add
pushl
inc
int3
mov
mov
xchg
fadds
or
mov
and
je
adcl
mov
push
ja
ret
push
lods
mov
adc
or
xchg
lock
jp
mov
push
push
and
pop
cmp
popf
add
jmp
add
add
mov
movsl
sub
mov
stos
add
pop
adc
stos
mov
mov
push
ret
xchg
xor
out
js
pop
add
xor
fdivrl
xor
dec
adc
loop
mov
mov
cmpsb
jmp
xchg
and
lock
xchg
mov
push
nop
lcall
test
lret
cwtl
mov
gs
add
xor
clc
pop
es
pop
ret
popa
push
cltd
into
add
lds
cmpsb
dec
xchg
add
ljmp
in
mov
mov
fnstsw
xor
xor
sbb
loope
sub
and
sbb
jmp
notl
or
decl
mov
jno
ficompl
das
loopne
mov
jmp
sub
mov
loope
in
loopne
xchg
sub
add
push
out
ret
ljmp
sti
icebp
fstpl
subb
aas
std
sti
jne
ljmp
leave
push
out
pop
subb
int
clc
xchg
xor
mov
jae
adc
cld
adc
cmpl
fs
insl
jne
inc
xor
lods
pop
xchg
ss
xchg
mov
add
adc
or
mov
std
mov
jbe
sub
notb
mov
leave
enter
xchg
push
arpl
cmp
mov
xchg
popf
add
cmp
mov
xchg
xor
or
inc
pop
xchg
dec
rcrl
inc
mov
incl
mov
sbb
aaa
call
xchg
add
cmc
add
and
or
xchg
shl
adc
adc
fxch
mov
dec
mov
lcall
daa
mov
adc
int3
add
mov
mov
inc
sbb
call
push
pop
xor
dec
aaa
add
xchg
inc
add
js
and
xchg
add
stos
cmpb
call
mov
pop
dec
ror
test
sub
imul
xor
incl
sbb
sbb
dec
cs
int
dec
cmp
aam
pushl
push
loope
hlt
lcall
add
movl
sub
add
dec
sbb
push
mov
adc
shlb
js
ret
mov
in
sbb
xor
mov
push
adc
cltd
pop
inc
out
aam
dec
inc
shll
add
adc
mov
fistps
out
lret
sbb
dec
jno
pushl
mov
test
in
xor
ret
xor
cmp
aas
aaa
xlat
fdivl
dec
ljmp
sar
add
sbb
and
ret
add
sti
cmp
jle
ljmp
mull
dec
pop
inc
push
dec
add
subb
sbbb
push
cmp
popf
adc
mov
mov
jb
add
xor
pop
adc
clc
jo
daa
and
mov
jl
or
or
call
bound
adc
idiv
call
scas
adc
mov
into
adc
dec
mov
sbb
adc
push
rolb
ljmp
dec
sub
ficoms
inc
xor
leave
lret
out
xor
dec
outsl
xor
adcb
cmp
inc
lock
pop
dec
ret
pop
xchg
insb
push
push
lea
push
jo
aaa
cmp
inc
push
outsl
adc
mov
lds
pop
lods
push
and
hlt
inc
sbb
in
pop
cwtl
out
lahf
ljmp
sub
aam
push
or
adc
push
pushl
push
stos
push
xchg
sub
cwtl
add
jp
or
xchg
lret
adc
mov
cmp
xor
sbb
rorb
cwtl
test
add
cmp
mov
push
call
push
ljmp
mov
sub
add
nop
xor
jno
push
out
xchg
decl
add
cmpb
pop
dec
gs
xor
sub
popa
mov
and
pusha
push
out
jg
ljmp
sbb
dec
pop
push
sahf
cmpl
pop
mov
sbb
jg
jbe
popa
rclb
les
sti
jno
jae
push
and
cli
push
lret
inc
xor
ss
hlt
in
mov
scas
clc
and
dec
mov
xorl
cmpsl
xchg
cld
jno
iret
adc
enter
incl
mov
and
jns
inc
inc
out
je
add
fisttps
mov
inc
aas
nop
in
add
mov
nop
pop
pop
add
div
mov
pusha
je
mov
xchg
xor
andl
ja
ret
adc
addb
and
lcall
mov
es
pop
add
pushl
lds
out
fisttpl
xchg
or
mov
xor
cmp
mov
ret
test
shlb
loope
dec
cmp
loopne
loop
inc
pop
xor
inc
mov
mov
xchg
in
add
mov
pop
sahf
sarl
sub
push
imul
sub
ljmp
ret
sbb
mov
dec
and
loop
push
popa
and
pusha
cmp
mov
adc
rorl
mov
add
test
fildl
or
popa
mov
cli
data16
xchg
xchg
dec
xorb
cmp
pushf
incl
cmp
inc
repnz
stos
dec
rol
mov
xor
cwtl
insb
sbb
sbb
pop
pop
jbe
or
mov
fsts
and
mov
rolb
jno
or
cmp
test
adc
aaa
pop
clc
mov
xor
fxch
mov
mov
mov
and
jb
sbb
roll
mov
fldt
mov
mov
mov
jg
ljmp
sbb
or
xchg
nop
xor
loopne
add
divb
adc
test
lcall
in
mov
adc
jb
mov
jbe
call
bound
loop
invd
into
cmpsb
lcall
in
clc
or
test
cltd
push
xchg
int3
aad
dec
pushl
loopne
or
cmp
add
loopne
add
stos
jmp
xor
pusha
xchg
jae
enter
inc
lahf
clc
cwtl
xor
or
out
dec
xchg
xchg
pop
icebp
adcl
adc
dec
mov
jmp
dec
roll
push
sbb
xor
adc
ficoms
push
lock
call
jmp
jmp
mov
or
pop
adc
and
mov
rcrl
imul
push
pop
jmp
movsb
je
sub
jno
add
cmp
pop
jo
push
add
decl
seto
test
xor
add
xchg
fbld
add
mov
pusha
mov
sbb
xchg
and
out
jns
out
lcall
cwtl
mov
xchg
shr
sub
inc
sbb
inc
addb
ret
pop
mov
jmp
out
add
cmp
or
ret
add
sbbb
jne
out
mov
sub
inc
xor
or
pop
rolb
mov
jg
jbe
jle
jne
lea
jne
jne
xchg
mov
mov
loope
push
out
pop
cmp
inc
and
scas
mov
ljmp
out
add
sub
outsl
adc
add
sarb
pusha
push
test
bound
mov
out
outsb
mov
mov
fdivrl
pop
out
jle
cld
mov
inc
xor
mov
in
loop
call
fiadds
imul
cmpsl
inc
pusha
insl
jmp
imul
lock
jp
movsl
aad
add
orl
xchg
add
fsub
or
sbbb
sub
and
lcall
mov
pushl
sub
addr16
mov
or
subb
call
adc
cmp
daa
sbb
mov
sub
push
xor
icebp
hlt
mov
push
ljmp
je
cmp
mov
decl
rcl
nop
push
xor
in
mov
mov
jg
push
scas
aam
out
or
in
aad
inc
xor
call
fdiv
cmpsl
fs
test
shrl
xchg
xor
mov
ss
mov
inc
idivb
mov
adc
mov
mov
addr16
arpl
scas
lret
lds
sti
mov
add
stc
dec
or
sti
rcrb
data16
fcoms
call
pop
sarb
pushl
insl
and
popa
in
fists
aad
mov
out
andl
and
fists
cld
in
int3
clc
rorl
repz
xor
sub
ljmp
xor
int
hlt
stos
cld
call
xor
mov
aas
scas
push
in
add
and
std
lea
cltd
nop
stos
lahf
add
sbb
cli
adc
pop
or
xchg
mov
add
loopne
and
ficompl
sbb
dec
call
pushf
rclb
jno
pop
xor
pop
and
les
mov
push
adc
or
incl
or
xchg
sbbl
ds
inc
test
ror
mov
cli
in
inc
mov
jmp
or
adc
jmp
or
fs
call
mov
in
xchg
dec
xchg
out
push
das
and
add
adc
cmpsb
lcall
xor
cwtl
push
cmc
call
jl
xchg
push
inc
negl
dec
shll
dec
mov
xor
or
add
mov
cmc
frstor
call
xchg
add
incl
jle
test
andb
lcall
cmpsl
lods
mov
adc
nop
test
popf
xchg
pop
add
test
jnp
or
sub
fldt
and
in
cmp
mov
inc
in
sbb
ljmp
imul
call
inc
adc
add
adc
jg
jmp
test
popa
push
push
sbb
fs
shlb
sahf
arpl
dec
inc
sbb
lcall
imul
push
stos
in
and
arpl
push
fs
pop
shll
push
ljmp
add
and
out
or
movsb
decb
mov
cmp
neg
xor
out
insl
outsb
in
and
inc
data16
dec
inc
pop
mov
call
push
clc
inc
pop
lods
in
xchg
cld
ret
movsb
dec
pop
add
dec
lcall
inc
pop
or
inc
adc
inc
stc
stc
mov
fcomip
std
pop
jmp
jne
dec
jo
insb
je
test
loop
mov
fcmovne
ja
jg
dec
mov
ror
pop
jg
and
mov
lods
shr
adc
mov
cmc
call
out
inc
add
aam
add
cwtl
sbb
sbb
pop
or
iret
lea
sbb
pop
sub
lock
aas
cmc
popa
out
rolb
lcall
mov
sahf
sbb
inc
sets
sti
fcomps
les
cmp
fiaddl
jmp
and
push
push
jns
mov
shlb
push
cmpsb
test
ret
fcos
das
sar
xor
sub
aam
lcall
out
mov
mov
das
mulb
in
dec
les
in
test
push
cmp
xchg
or
dec
fwait
rclb
clc
inc
pop
mov
add
mov
add
pop
jmp
jns
pop
lret
jae
add
add
insb
push
in
mov
adc
in
call
jp
lret
pop
or
adc
shll
pop
adc
sahf
add
stos
or
lret
jecxz
xchg
xor
mov
adc
inc
push
mov
das
push
addb
es
push
sub
dec
rorl
mov
sti
mov
mov
adc
inc
or
mov
jle
faddl
dec
mov
mov
fldt
pop
incl
pop
shll
movsl
add
adc
jns
xchg
out
test
or
push
imul
push
pop
dec
pop
hlt
pushf
or
inc
std
les
outsl
cli
in
or
mov
fcoml
pop
stos
gs
fidivs
enter
xchg
movsb
popa
pushl
std
filds
pop
mov
std
shrl
clc
fcomps
inc
fwait
ljmp
nop
or
fstpl
xchg
xchg
add
adcb
jmp
iret
mov
flds
insl
fsts
iret
push
lret
cltd
stos
stos
ljmp
or
fcmovnb
dec
mov
and
aad
inc
inc
lods
inc
nop
inc
dec
add
mov
xchg
jne
mov
dec
pushf
sahf
mov
rorb
dec
incl
adc
ficomps
daa
cmp
daa
xor
rorb
shrl
add
xor
pop
lods
jbe
pop
lcall
mov
push
mov
mov
sub
push
sbb
push
clc
xchg
mov
daa
cmp
out
add
or
clc
orb
sarb
sub
add
lods
ret
jbe
test
jp
das
xor
sub
data16
mov
mov
or
or
imul
push
in
test
out
call
jmp
sbb
rclb
in
int3
stos
sub
into
in
mov
in
lret
clc
and
mov
clc
out
ljmp
add
pop
stc
int
add
mov
imul
mov
dec
pop
cmc
ficoml
test
call
rol
xchg
mov
cmp
rcl
push
mov
cmp
pop
movsb
cmc
shll
leave
hlt
cmp
int3
fdiv
adc
jmp
xor
sub
push
sbb
loop
cmpsb
incl
rolb
fwait
adc
int
and
inc
xor
nop
loop
shld
cld
mov
lret
addr16
fnstenv
mov
stos
add
pushl
mov
mov
cmpsb
sbb
dec
loop
add
inc
std
mov
cmpsb
fisubrs
pusha
sbb
inc
sub
lret
scas
jmp
test
push
scas
add
mov
sub
cmp
fimull
mov
push
out
mov
dec
out
lcall
out
lret
sbb
inc
or
pop
jl
cmpsl
mov
sub
mov
or
lcall
cwtl
in
rcr
push
cmpsl
jb
push
mov
add
lcall
call
fdivp
scas
and
pop
scas
bound
inc
sbb
xor
movsb
dec
dec
xor
lock
arpl
jo
add
out
lds
scas
les
jmp
xlat
adc
inc
imul
test
xlat
sub
adc
into
mov
insl
dec
adc
dec
loope
or
loope
cwtl
mov
cmc
add
popa
aam
adcl
leave
loope
xchg
adc
add
ljmp
faddl
sbb
push
xchg
push
xchg
in
mov
jg
je
pop
or
mov
xchg
pop
stos
pop
mov
scas
inc
push
pop
mov
popf
xchg
sub
jg
jge
cmpsl
into
nop
xchg
push
or
xchg
mov
out
xchg
bound
dec
sahf
lods
ret
fcom
dec
clc
stos
hlt
call
in
or
int3
lret
mov
sub
ljmp
mov
sbb
leave
adc
ja
adc
fidivrs
lock
inc
das
inc
nop
ljmp
fcomip
cmpsb
push
mov
push
mov
sbb
repnz
je
dec
or
pop
sub
fcomip
incl
notl
idiv
test
subl
cmc
int
mov
fbld
push
mov
adc
aaa
imul
inc
ljmp
aam
xlat
sbb
outsb
sbb
jbe
shrb
jle
inc
push
sbb
lock
ljmp
jno
xor
jb
jmp
adc
std
mov
decl
xor
out
mov
mov
scas
aas
push
iret
fmuls
icebp
or
push
ljmp
sbb
inc
add
pop
xor
xor
fimuls
movsl
inc
cltd
inc
aam
out
fimuls
pop
or
popa
fsubrp
mov
loope
adc
mov
decl
ljmp
sub
movsb
scas
push
inc
or
xchg
fsubrl
hlt
add
popa
and
jmp
daa
addr16
sub
bound
push
pushl
arpl
and
lret
int
push
sub
mov
mov
std
jae,pt
fdivs
call
stos
cmp
jge
pop
xor
imul
jne
inc
dec
push
hlt
cltd
and
lret
pop
lods
decl
mov
je
inc
int3
sub
cmp
sahf
dec
ja
addr16
lret
jne
decl
fnstsw
pop
int
xchg
outsb
fcoms
pusha
push
push
imul
ljmp
fptan
pop
std
outsb
dec
lret
xchg
cmpsb
push
repz
cld
sub
nop
gs
enter
ljmp
xor
and
push
add
mov
inc
fistps
push
add
jmp
es
testb
xor
jb
fmull
add
ds
cli
pop
mov
aad
xchg
xor
data16
mov
xchg
loop
filds
nop
lods
js
sub
inc
enter
pushl
outsl
inc
push
lea
adc
adc
sbb
sub
stos
mov
pop
loopne
jmp
jg
aas
xchg
push
sti
mov
mov
jmp
jb
mov
cmp
xor
inc
xor
fidivl
scas
sti
and
out
jb
add
jg
pusha
jb
out
clc
pop
sub
mov
ljmp
xchg
test
shlb
dec
jecxz
xchg
out
pop
push
pop
lock
call
pop
jns
or
sub
xchg
jmp
xchg
addr16
inc
daa
repz
sub
pop
dec
inc
and
repz
or
int
push
xchg
mov
sbb
xor
js
inc
mov
mov
loop
out
pop
out
jb
xchg
mov
pop
mov
clc
fists
push
dec
inc
sbb
jns
push
pop
push
ret
or
cmp
movsb
dec
add
inc
mov
ret
sbb
pusha
movsb
rcl
leave
inc
mov
faddl
scas
incl
rorb
add
pop
enter
push
xchg
and
dec
mov
mov
call
mov
rol
lret
stos
in
adc
or
jo
jo
aaa
cld
call
sbb
add
push
aaa
lods
xor
push
das
mov
daa
push
sub
ja
jmp
repz
add
orl
cmpsl
push
and
push
cmp
jo
mov
cs
jnp
clc
fistpll
cmp
or
clc
inc
adc
daa
cmp
pop
mov
sub
dec
jnp
jae
les
mov
inc
xchg
mulb
cmp
mov
pop
pop
fnsave
iret
jl
mov
add
pushl
out
xor
mov
mov
fnstcw
mov
loopne
bound
std
stc
adc
popf
into
imul
int
adc
fidivl
mov
repz
das
or
mov
cmp
hlt
inc
out
enter
mov
test
imul
aam
xchg
mov
pop
or
and
push
fsubr
fadds
inc
popa
cli
add
and
mov
mov
jge
jbe
xor
in
hlt
mov
xchg
mov
scas
xor
add
cltd
jns
sub
and
xor
xorl
mov
mov
add
add
adcl
jmp
sub
jecxz
out
mov
icebp
add
test
dec
add
push
add
ljmp
insb
inc
add
outsb
sub
rcrl
adc
ja
int3
cmp
dec
xchg
cmp
jmp
scas
mov
push
lcall
cltd
xor
out
mov
cld
ret
aas
lret
sub
mov
jge
cmp
add
sbb
pusha
je
push
or
sub
cmp
popa
inc
xchg
add
xchg
pop
and
xor
xchg
fs
add
push
mov
push
lcall
imul
add
and
subb
inc
add
inc
test
insl
add
or
xchg
sub
ljmp
and
pop
aas
js
jnp
stos
push
mov
cmc
hlt
shl
jbe
push
mov
notb
jnp
mov
push
jo
aaa
jbe,pn
fcomps
lcall
push
loopne
sbb
sub
mov
push
cmp
inc
pop
filds
dec
call
sbb
sub
dec
in
mov
call
mov
adc
scas
mov
in
fdivrl
repz
mov
mov
fidivs
add
push
jbe
fildl
push
sbb
ljmp
inc
sbb
rorb
lods
aam
jg,pt
call
je
fdivl
addr16
std
jnp
pop
mov
and
in
cmp
xchg
mov
shr
jmp
ret
mov
xor
adc
mov
cli
call
out
and
push
in
mov
and
insl
inc
adc
lcall
daa
in
inc
jmp
pushf
mov
sbb
pushl
sbb
je
cmp
ss
xor
add
test
and
decl
pslld
mov
push
and
cmpsb
cmp
mov
pushf
jb
sub
add
add
add
loope
mov
mov
pushl
aaa
std
add
inc
xor
lcall
jge
xchg
and
int3
mov
cmc
mov
add
dec
mov
orb
mov
cmp
mov
mov
sub
xor
fadds
xchg
pusha
mov
cld
and
je
roll
lds
xchg
push
popa
fs
cmpsb
pushf
stos
xor
jmp
leave
sub
xchg
cmpl
add
in
call
imul
xor
sbb
inc
sbb
in
sarl
adc
or
inc
pushl
adc
or
and
push
pop
mov
cwtl
ret
sub
decl
imul
aaa
cmpsb
js
outsl
adc
inc
xchg
xor
andb
jmp
out
xor
gs
adc
and
sub
stos
xor
sbb
dec
nop
jmp
loop
shlb
cmp
sbb
and
dec
mov
and
fmuls
insl
lea
cs
ljmp
or
incl
pop
cwtl
sub
cmp
inc
cmc
adc
or
mov
push
push
icebp
rcrb
mov
sub
ret
and
mov
add
bswap
sbb
les
add
shrl
pop
mov
es
jo
addr16
ret
adc
pop
ja
jnp
add
clc
call
mov
shl
fsubr
cmp
out
sbb
test
adc
adc
sub
jns
mov
incl
pop
xor
lds
or
js
aad
dec
popf
jl
call
fldt
repnz
insl
jle
neg
lahf
fsubr
jg
lret
mov
mov
and
orl
sbb
imul
movsl
inc
or
into
fcoml
or
imul
mov
cwtl
push
cmp
lcall
jmp
dec
add
aam
pushf
add
incl
fidivs
test
stos
jno
jns
fs
cld
mov
push
lods
ret
int
insb
dec
sbb
shlb
push
lods
cmp
jg
sub
mov
ret
adc
insb
sub
lcall
imul
sub
jp
mov
cmp
outsb
mov
cltd
jle
xchg
cmp
rol
xchg
incl
repz
test
mov
jbe
xchg
sbb
sbb
mov
mov
cmp
dec
push
push
fwait
sahf
xor
aas
mov
punpcklwd
mov
stc
cmp
inc
xchg
test
dec
inc
lret
imul
fisubl
xchg
mov
and
pushl
jns
clc
stc
push
test
and
ljmp
push
xor
sar
cmp
loopne
adc
movsl
xchg
and
or
pop
push
subl
pushl
clc
out
or
sub
jno
hlt
xchg
cvtdq2ps
sbb
inc
pop
dec
test
dec
xchg
jmp
movsl
cwtl
mov
insb
pop
clc
xchg
cltd
adc
pop
test
call
cld
cwtl
xchg
insl
stos
jb
cli
mov
mov
pushf
adc
push
stos
adc
add
movsb
incl
test
mov
jp
stos
fdivrl
xor
shll
fcmovb
fcoms
incb
lcall
xchg
leave
jp
fmull
adc
jbe
in
mov
ja
pop
decl
mov
add
pop
lret
lcall
icebp
test
scas
xchg
add
xorb
and
std
or
scas
dec
out
xchg
fcompl
ljmp
scas
xchg
jb
lods
shrl
repz
mov
test
sbb
add
movsl
and
sub
or
mov
incb
push
das
repz
push
adc
lcall
or
sub
or
outsl
dec
push
xchg
pusha
jmp
xor
sub
lcall
subb
pusha
xchg
fnstcw
and
mov
mov
adc
enter
xchg
shrl
lret
das
cmp
ret
imul
add
aam
push
xchg
loope
dec
lret
scas
call
xor
mov
pop
dec
pop
cltd
sub
jo
add
decl
and
xchg
xchg
xchg
pop
clc
xor
pop
lret
push
inc
les
std
daa
or
xor
mov
outsl
lods
mov
cmp
pop
or
adc
sar
cli
inc
cmc
movsb
lret
inc
jl
int3
daa
dec
push
stos
adc
shll
sub
leave
mov
call
rcr
jb
jae
adc
out
adc
inc
daa
pop
jo
fstps
mov
jo
jmp
or
pop
and
ret
mov
jge
add
cmc
pusha
inc
lock
sahf
out
addl
in
shlb
lcall
dec
in
push
shlb
push
int
fs
nop
call
push
cs
clc
mov
xchg
popf
mov
mov
jae
leave
imul
add
jl
mov
in
jmp
sbb
fiadds
inc
push
and
test
mov
fcomip
cmc
mov
iret
jb
mov
loope
dec
or
jnp
pop
push
pop
push
adc
decl
pop
jecxz
fwait
ds
bound
cld
inc
or
lea
push
test
aam
sar
call
rorl
in
cmp
or
jp
lcall
stos
mov
cmp
mov
mov
shrl
push
or
push
dec
push
lea
jmp
fnstenv
ds
sub
mov
fisttps
divb
push
mov
add
fists
stos
or
loop
xor
xchg
add
sub
fwait
pushl
loop
mov
adc
push
jno
pop
sbb
sbb
clc
mov
loopne
mov
cld
incl
xchg
mov
push
cwtl
arpl
pop
cmp
bound
lcall
xchg
fwait
push
xor
pop
lea
lcall
rcrl
std
or
roll
pushl
adc
ljmp
lahf
mov
and
not
dec
sub
inc
jmp
decl
mov
daa
add
outsb
mov
loop
mov
pushf
in
call
enter
std
and
mov
pop
jmp
or
xchg
loop
inc
test
xchg
cltd
lcall
cmp
mov
xor
negb
inc
jns
fwait
pushl
jmp
mov
popf
into
push
clc
jmp
push
xchg
flds
orb
aam
mov
mov
lods
xor
sub
jae
out
xchg
test
jne
incl
mov
fucomip
dec
xchg
loope
enter
nop
mov
pop
iret
fcomip
fcmovnbe
loopne
xor
cli
push
dec
sbb
sub
and
ret
mov
adc
sbb
repz
xor
outsb
mov
lods
cmp
jg
pop
movsl
test
cmp
and
in
dec
pop
and
xor
call
mov
insl
imul
sbb
push
jb
pop
push
and
decl
and
shrb
mov
das
int3
sbb
adc
outsl
sub
ljmp
mov
inc
int
int3
lcall
test
ret
bound
push
lds
or
cwtl
dec
push
rcll
push
inc
testl
out
decl
dec
sub
lea
lock
or
mov
lock
lods
pushl
stos
inc
push
mov
insb
xchg
je
jmp
mov
sti
nop
fs
lds
loopne
dec
call
lods
mov
ljmp
mov
fucomi
iret
les
daa
or
push
inc
jmp
outsb
pushf
inc
add
ljmp
leave
pop
addb
push
decl
add
inc
lds
and
add
lahf
or
mov
pop
cld
pushl
adc
lret
mov
sub
mov
mov
hlt
inc
lret
sub
repz
mov
xor
loope
mov
fnsave
lock
mov
insb
es
in
jmp
test
mov
sbb
incl
or
out
popa
mov
adc
mov
or
icebp
inc
scas
dec
sub
xchg
cmp
pop
je
arpl
mov
or
divl
fcomip
lods
adc
ds
xor
jmp
jp
lcall
cwtl
cmp
lea
adc
mov
mov
out
iret
inc
data16
fisubs
push
push
fs
leave
dec
inc
and
or
push
sar
jmp
cmp
aaa
cmp
hlt
add
jb
lock
add
insb
leave
pushf
sub
call
mov
fiadds
and
mov
dec
mov
ret
mov
jno
fcomip
pushl
jo
and
test
test
inc
hlt
add
adc
incl
stos
into
movsb
test
imul
dec
xchg
or
sbb
xchg
aam
stos
rcl
movsl
out
pusha
ds
pop
or
mov
or
xchg
push
jmp
or
push
clc
enter
lock
or
jmp
jp
call
scas
aad
nop
sbb
ret
mov
jle
adc
cmp
lcall
iret
or
ret
imul
xchg
push
hlt
push
icebp
incl
outsb
sub
xchg
jmp
fcmove
int
lock
test
sbb
out
je
add
out
adc
leave
sub
mov
sar
pushf
jb
outsb
mov
int3
dec
das
sub
xchg
add
pushl
sbb
xchg
icebp
add
ljmp
repnz
pusha
cmpsb
xchg
cwtl
or
pop
icebp
lcall
lods
or
cmpsb
sub
lods
sarb
neg
xor
pop
das
divb
cmc
dec
mov
rcrb
or
jb
xchg
pop
test
xor
cmpsb
pop
int
notl
mov
aam
xchg
pushl
and
xor
and
jb
xchg
inc
xchg
ss
cmp
ror
roll
pushl
dec
stos
and
test
loopne
dec
mov
adcl
jle
ss
adc
insb
jo
jmp
add
add
imul
push
mov
ljmp
lock
jno
push
and
push
hlt
jmp
jl,pn
sbb
cmp
pop
stos
push
xchg
jmp
mov
push
fstpl
xchg
or
out
add
shll
test
movb
xor
xchg
xor
inc
and
jmp
sbb
lea
or
sbb
sub
add
decl
mov
or
cs
cmp
xchg
push
dec
inc
and
mov
clc
push
pop
addr16
ljmp
mov
lea
test
sahf
jo
inc
xor
add
fwait
test
cmpsl
test
call
xor
xchg
or
cs
xchg
jg
sbb
test
mov
and
push
jno
adc
pop
pushl
insb
inc
cmp
imul
and
sub
adc
cmpsb
movsl
out
inc
sar
dec
test
sub
and
lods
push
cli
cmp
sub
cmp
cmp
loopne
add
dec
dec
dec
je
jg
sar
decl
cmp
es
subb
rolb
mov
xorb
jae
decl
and
mov
into
loop
push
dec
cwtl
cmp
sbb
jne
jae
push
jle
inc
pusha
mov
cmp
push
push
push
pop
inc
sub
cmp
decl
mov
mov
aaa
and
out
aad
add
mov
imul
ljmp
das
je
dec
das
xor
push
enter
pop
cmp
xchg
hlt
incl
pusha
sub
xchg
or
imul
cli
popf
mov
sub
mov
mov
mov
or
pop
pop
inc
dec
pop
imul
daa
sbb
decl
lods
shlb
mov
xlat
mov
jo
mov
mov
mov
ljmp
cmpsl
inc
sahf
popa
mov
mov
shlb
dec
inc
sub
fcmovne
mov
iret
cwtl
mov
mov
jbe
in
mov
ljmp
fsub
dec
bound
call
mov
data16
scas
sub
lods
jns
cmpsb
mov
dec
mov
xchg
inc
clc
jg
int3
mov
inc
jbe
call
fstl
pop
mov
sahf
stos
or
cmpsb
das
pushf
daa
dec
insl
aam
xor
cwtl
mov
jnp
jnp
rcrl
lret
or
fnstcw
jne,pt
cwtl
fcmovb
mov
lcall
mov
lret
movsl
js
adc
add
pop
xchg
jmp
mov
pop
inc
mov
sahf
popf
jo
and
mov
inc
ds
mov
mov
inc
decl
xchg
das
or
mov
pushl
sub
pop
mov
test
lea
aas
pop
jns
dec
push
test
pop
jno
lcall
adc
pop
mov
xchg
aam
fld
in
ljmp
mov
push
jb
ljmp
popf
sub
lea
popa
imul
mov
pop
xor
nop
scas
lret
nop
dec
push
jecxz
jg
pop
cwtl
adc
mov
test
push
addr16
cwtl
int
in
push
adc
xchg
cmp
add
mov
inc
xchg
ljmp
loopne
adcl
jecxz
mov
adc
and
daa
and
loop
adc
xchg
pop
jp
clc
mov
int3
fwait
cmp
jle
pop
test
fs
or
mov
sar
ljmp
and
sub
cmpsl
dec
sahf
imul
call
lret
popa
mul
inc
stos
pop
or
daa
push
xchg
pop
insl
push
sbb
mov
dec
mov
mov
pop
mov
and
das
inc
mov
dec
mov
rol
call
and
sbb
xor
dec
xchg
mov
lret
xchg
xor
mov
fbld
push
jae
mov
das
mov
adc
sbb
ja
in
lods
cmp
incl
dec
pop
mov
in
cmp
and
sbb
sbb
mov
mov
push
iret
js
jge
ja
fadd
cmp
dec
push
mov
jnp
jge
stc
hlt
lock
in
into
test
adc
and
mov
pop
lock
rol
xchg
rcr
hlt
nop
dec
mov
xor
xchg
add
dec
cli
push
sub
daa
xchg
push
or
adc
filds
mov
inc
call
sbb
lock
movsb
adc
les
jle
pushl
sub
cwtl
push
push
dec
push
cltd
push
xchg
arpl
ss
gs
and
mov
cld
jmp
dec
mov
and
sub
pop
jbe
xlat
mov
jle
xchg
cwtl
push
scas
test
insb
sbb
cld
fists
cmc
fsts
sbb
push
add
sbb
mov
stc
jmp
mov
ljmp
test
mov
add
aaa
imul
cmpsb
xchg
push
sub
or
pushf
jo
xchg
ficompl
and
sbb
sbb
xchg
fldl
fdivs
ljmp
cli
out
js
mov
stos
neg
jns
mov
adc
inc
add
decl
sti
in
xlat
pusha
pusha
adc
push
pusha
lcall
mov
push
pusha
iret
lret
nop
fildl
movsb
dec
push
repnz
cs
mov
jmp
popa
mov
cmpsb
hlt
popa
mov
imul
repnz
xchg
pop
mov
insb
lock
mov
mov
inc
add
enter
sahf
xor
sbb
outsl
std
mov
xchg
insb
insl
adc
xchg
cli
jle
xchg
mov
decl
push
push
jle
cmc
mov
push
jl
enter
jne
call
pop
into
cmp
enter
out
imul
dec
aam
sub
in
rorl
int3
lock
mov
shlb
mov
fstl
mov
cmpsl
addr16
lcall
or
fistl
mov
ljmp
je
scas
incl
scas
mov
jle
pop
insb
mov
iret
rolb
jl
push
cmp
pushl
jle
popf
and
inc
jg
movsb
adc
and
mov
aad
scas
call
and
insl
pop
mov
mov
push
das
mov
pop
sti
inc
mov
call
xor
push
adc
lret
cmp
cmp
jmp
inc
xor
cld
adc
mov
inc
call
mov
inc
adc
jnp
or
outsb
repnz
scas
lds
loope
pop
lret
dec
movsl
icebp
xor
cmp
iret
or
cltd
push
push
add
jmp
movsl
and
pop
fs
test
cmp
rolb
ljmp
stos
bound
pop
add
stos
cmpl
ss
mov
pop
outsb
pusha
jecxz
out
ljmp
lock
in
in
push
jl
into
jnp
xor
inc
cmc
dec
pop
xchg
pushf
mov
mov
lock
mov
push
mov
push
pop
pop
xchg
lods
mov
dec
xchg
lods
adc
movsb
cmc
pop
cld
pusha
xchg
mov
stos
push
in
outsl
psllw
or
and
or
ljmp
sub
faddp
insb
movsb
pop
stos
and
orl
mov
push
xor
in
push
pop
movb
adc
incl
aas
push
cltd
lods
lds
pop
jo
dec
fistpll
mov
jmp
movsl
jg
or
test
and
fcom
xor
pop
dec
call
dec
xor
insl
inc
dec
or
push
call
sub
shrb
in
xchg
sub
pop
and
or
adc
decl
push
adc
in
insb
rclb
lcall
xchg
xchg
cmp
pop
loopne
fbstp
daa
popf
enter
mov
inc
mov
sub
pop
pop
stc
xchg
xor
inc
shlb
int3
mov
push
imul
repnz
pop
movsb
and
and
ljmp
pop
push
dec
out
jecxz
cmp
cmp
jns
sub
leave
in
xor
shl
push
sub
mulb
sahf
cli
hlt
cmpsl
inc
or
pop
insl
loopne
push
daa
or
lea
cmpsb
cmp
lcall
push
jge
adc
cmpsl
jge
inc
push
sbb
inc
stos
pusha
int
mov
ljmp
rolb
lret
xor
mov
adc
lret
push
in
es
inc
push
pop
ljmp
ret
int3
sahf
push
test
ret
xor
pop
orb
sub
aad
test
xor
xchg
mov
cli
sbb
push
sbb
movsb
mov
and
pop
fwait
data16
sub
test
or
adc
stos
dec
jge
lcall
mov
jecxz,pt
sub
stc
push
cmp
sbb
loop
mov
lahf
enter
sub
ljmp
mov
movsb
inc
adc
movsb
inc
mov
jne
inc
xor
dec
adc
call
push
push
pop
scas
jbe
push
push
xor
fcmovnbe
pop
loopne
scas
adc
pop
std
decl
repz
std
and
movsl
negl
adc
rcll
mov
sub
call
jnp
pusha
mov
in
imul
adc
add
add
lahf
rcl
aaa
dec
les
add
or
cld
ljmp
xchg
shrl
add
pop
movsb
add
inc
cmp
mov
pusha
adc
add
and
xor
fcomip
xchg
xchg
push
je
js
addr16
xchg
xchg
sbb
adc
stc
lods
sub
repnz
xchg
or
xor
or
jns
xor
out
pop
adc
mov
xor
decl
movsl
and
mov
pop
dec
lret
adc
lret
xor
fidivl
sbb
fsubl
pop
sub
subl
sbb
adc
fs
sbb
dec
sub
push
outsl
sub
jmp
mov
repz
mov
stos
mov
mov
pushl
adcl
inc
mov
dec
out
in
jbe
xlat
jae
loope
test
inc
cmp
pop
sar
cmp
imul
out
fsts
movsb
in
xlat
clc
js
cmpsb
loopne
out
js
bound
out
out
jge
sti
xlat
jmp
fwait
jmp
xor
inc
cmp
sbb
incl
ret
or
shl
add
iret
fwait
push
mov
rclb
incl
push
icebp
sbb
push
adc
sbb
imul
adc
fidivrs
sbb
nop
push
gs
int3
pop
dec
std
push
std
lock
rorb
roll
lahf
inc
sbb
sub
push
outsb
xchg
aad
sarb
xchg
xlat
loopne
cwtl
pop
int3
inc
ret
enter
out
dec
or
popa
mov
mov
imul
xor
shrl
pop
push
gs
mov
inc
mov
shll
cmp
rcll
pop
mov
sbb
fisttpl
outsl
sbb
rcr
aam
movsb
push
jnp
stos
sub
icebp
xor
cmp
sbb
jg
negb
pop
dec
cmp
je
lret
shll
push
leave
push
mov
in
adc
mov
inc
loop
sub
lahf
jmp
in
inc
loope
call
clc
jbe
cs
repnz
pop
fwait
or
icebp
cwtl
xor
repnz
pop
or
cmpsl
push
ret
decl
add
and
jno
cmp
push
dec
jno
mov
movsb
loope
imul
sbb
icebp
cmpsl
pop
or
movsb
test
pop
shlb
rorb
aaa
outsl
repnz
dec
jle
imul
mov
ljmp
mov
xadd
or
mov
dec
or
xor
addb
fdivr
incl
mov
imul
test
test
jle
adc
mov
pop
xchg
cmp
pop
pushl
lds
adc
sub
jge
xor
mov
popf
push
sbb
and
filds
fs
cmpsb
and
cmpsl
subb
lcall
repnz
sub
dec
mov
aaa
testb
inc
hlt
adc
mov
decl
and
call
inc
ds
movl
andb
idivl
or
adc
insb
sbb
jp
aad
mov
js
or
push
fisubl
sub
jnp
push
out
cli
incl
inc
ljmp
and
mov
shlb
divl
incl
outsb
pop
cmpsl
xor
cmp
and
hlt
xor
add
jbe
hlt
decl
mov
popa
sti
mov
lock
jg
decl
pop
test
call
jae
cmp
mov
arpl
xor
xlat
bound
or
inc
add
testl
add
pop
sar
mov
cwtl
mov
mov
pop
add
pop
bound
punpcklbw
xorl
mov
pop
mov
cmpb
imul
cltd
addb
dec
inc
sbbl
adcb
jbe
daa
je
mov
ljmp
push
pop
xchg
mov
jb
sbb
cltd
cmc
push
mov
pop
or
rolb
stos
rol
lahf
les
ljmp
stos
push
pop
in
dec
xlat
jno
sti
les
push
pop
mov
push
incl
lods
movb
in
dec
jmp
jae
js
cmp
leave
pop
lcall
shrb
mov
imul
dec
aam
scas
pop
mov
mov
jp
daa
jnp
rclb
adc
out
or
jl
popa
inc
into
push
mov
inc
cmp
mov
pushf
cwtl
inc
in
pop
cwtl
mov
call
mov
jl
push
xor
repz
lods
test
nop
xor
push
sub
cwtl
push
adc
mov
cmp
pop
or
call
cmp
add
orl
out
cli
lcall
imul
lret
dec
inc
nop
and
decl
adc
adc
push
jnp
push
xchg
clc
mov
add
pop
shlb
jae
inc
cmp
cltd
inc
out
xor
and
nop
mov
mov
push
push
iret
and
pop
sub
nop
or
cmp
loopne
sub
or
add
test
cld
ja
rorb
dec
xor
jne
inc
xchg
jg
add
mov
pop
sbb
or
dec
jg
xchg
divb
mov
leave
shll
jp
push
sub
mov
xchg
jbe
incl
cld
call
les
rcrl
xchg
cmp
in
inc
sub
hlt
inc
aad
jns
cmp
inc
inc
xchg
xchg
test
incl
pop
mov
dec
and
loopne
dec
mov
xor
mov
jne
lea
incl
fsubs
push
repz
icebp
push
sub
cmpsl
push
mov
movsl
jmp
insl
sub
inc
es
call
xchg
and
add
cmpsb
sbb
xorb
aaa
sub
andl
incl
mov
ror
mov
cmpsl
jne
mov
clc
cltd
xchg
idivb
push
mov
push
push
fwait
push
bound
push
cmovs
pop
dec
loope
imul
lock
jle
push
pushf
push
mov
rol
jmp
adc
ljmp
pusha
sahf
jo
jg
mov
xlat
pop
add
lcall
dec
inc
sahf
fildll
mov
sahf
std
sar
orb
dec
jno
pop
and
cmp
test
mov
inc
cmp
xchg
dec
pop
mov
int3
popf
push
icebp
jg
ret
mov
in
add
jmp
xchg
ja
test
push
dec
popa
push
cmpsb
hlt
decl
inc
popf
xchg
aaa
ds
out
aam
inc
clc
ljmp
pop
dec
xor
fstl
push
xchg
aaa
pop
ret
xchg
xchg
dec
add
aaa
or
loopne
pop
mulb
inc
mov
push
xchg
pop
mov
and
xchg
push
dec
cmp
xchg
movsb
pusha
sub
loop
adc
xchg
pop
sbb
lret
mov
xor
out
daa
push
lock
es
mov
dec
and
je
cld
jmp
fistpll
inc
mov
dec
dec
jp
mov
pop
cmpsl
js
bound
cmpb
cwtl
mov
test
bound
call
add
pushf
jnp
dec
mov
jno
sbb
mov
sti
divb
nop
test
stos
add
jmp
pop
out
cli
incl
pusha
rorb
lock
leave
jo
mov
push
push
dec
mov
dec
sti
sub
ljmp
lret
xor
addr16
xchg
out
xchg
mov
lahf
das
test
xor
pop
xorb
pop
and
sub
leave
sbb
scas
mov
incl
lds
push
push
xor
sbb
mov
jmp
sub
jns
mov
es
xchg
flds
xchg
xor
dec
call
add
cmc
mov
xor
add
ss
adc
push
pop
cmp
adc
incl
shll
lds
xchg
push
icebp
mov
jnp
in
lret
inc
sqrtps
jmp
inc
pop
repz
clc
test
push
add
mov
mov
inc
cmp
inc
cwtl
dec
and
push
inc
out
sarl
dec
mov
stos
es
testb
inc
push
or
inc
mov
inc
jg
inc
test
fwait
in
inc
pusha
popl
pop
jb
pusha
or
xor
shrl
sahf
andb
loopne
sub
xchg
mov
das
jp
and
xor
mov
pop
xor
stc
sub
ljmp
lahf
inc
xor
sub
xchg
jne
jge
fbld
into
pop
sbb
pop
fistpll
sbb
out
sbb
sub
xchg
xchg
inc
and
dec
sub
test
jg
dec
pop
mov
sbb
push
mov
dec
rcll
xchg
mov
decl
nop
scas
jns
pop
ret
add
imul
push
mov
lcall
add
movsb
sbb
inc
jge
pop
inc
and
decl
movsb
cld
pop
jb
jo
adc
loop
mov
push
ret
mov
and
push
xchg
push
xchg
push
xchg
push
sub
sub
aam
cmp
adc
jl
inc
dec
stc
imul
jmp
cmpsb
add
dec
mov
cmp
rorb
enter
or
and
scas
in
mov
pop
adc
add
test
mull
dec
lock
xchg
mov
fwait
jnp
iret
out
jne
ret
mov
nop
pushf
jp
fildll
inc
data16
sub
ljmp
testl
out
lods
mov
push
or
mov
aam
ljmp
cli
lcall
inc
pop
sbb
or
adc
test
dec
add
jl
test
push
dec
adc
xchg
add
mov
movsb
inc
pop
inc
decl
in
test
sub
movsb
movsl
movsl
inc
pop
push
jp
pop
jl
inc
mov
mov
jmp
xchg
and
aam
mov
fsubrs
test
cmp
mov
rorl
sbb
arpl
dec
clc
add
pushf
jmp
dec
xor
mov
push
xor
int
or
sub
pop
inc
or
push
xor
lcall
lcall
dec
nop
test
cmp
xor
pop
jmp
sbb
push
cmp
int3
or
and
ret
dec
test
push
call
or
aam
xchg
cmpsl
mov
inc
lock
mov
fimull
mov
clc
fcomi
cmp
xor
or
add
ffree
aaa
cmp
mov
jg
sbb
xor
xchg
or
and
js
lea
push
jo
or
mov
pushl
call
xor
dec
add
and
fildll
pop
inc
xchg
imul
adc
jno
cmp
ret
lret
in
or
mov
jmp
mov
xor
adc
je
ljmp
clc
xchg
lods
or
xor
jno
jp
mov
ficoml
mov
or
ljmp
in
push
std
mov
mov
incl
insb
clc
mov
in
dec
aam
sub
out
mov
aam
cwtl
pop
je
lcall
cmp
insl
xchg
xor
sbb
jnp
icebp
pop
pop
nop
mov
leave
das
test
jo
or
inc
cld
push
lods
add
mov
loope
xchg
fdivs
fs
call
inc
xor
xchg
repz
data16
mov
ljmp
inc
sub
pop
sbb
cmp
jl
sub
imul
in
lds
jmp
jo
push
xchg
adc
and
bound
movsl
pusha
and
ds
inc
repz
mov
pop
in
add
cmpb
or
idiv
push
sub
mov
iret
pop
addb
xor
leave
add
or
rorb
es
rcl
push
stos
stos
icebp
mov
nop
mov
xor
inc
add
movsb
imul
call
les
mov
ret
hlt
mov
rcl
out
xor
jg
mov
lds
in
pop
mov
movnti
mov
push
sub
fstpl
je
inc
setle
inc
or
test
jbe
fsubrl
inc
adc
cmp
pop
sbb
lcall
push
pop
sub
cli
mov
xchg
leave
dec
or
xor
dec
popa
leave
jl
cmpsb
mov
jecxz
or
cmp
inc
adc
pushf
in
mov
ret
and
jg
cld
pushl
jo
mov
aad
mov
mov
arpl
mov
add
lcall
call
rcr
jl
mov
pushl
je
jge
mov
cmpsl
push
cli
repz
sbb
xchg
inc
ljmp
clc
int3
lds
into
cmpsb
lods
call
jnp
adc
push
jmp
xor
test
sbb
mov
jne
sub
dec
pushf
idivb
pop
lods
mov
pop
loopne
add
lret
les
mov
les
pop
push
push
mov
incl
vmulpd
decl
push
adc
in
mov
decl
sbb
pop
dec
sub
dec
sub
mov
dec
int
out
xor
test
ffreep
pop
xor
jg
scas
ljmp
clc
mov
mov
pop
sub
pop
jo
inc
gs
sub
cmp
jmp
push
xchg
lods
retw
movsl
les
and
mov
cld
sbb
cld
fcomip
outsl
push
add
push
scas
sbb
iret
mov
lahf
cmp
adc
sar
fistpl
fsubs
inc
ds
cmp
aad
int3
mov
dec
sub
repz
fistpll
cmpsb
addr16
loopne
push
lahf
adc
mov
xor
lcall
xor
and
lds
arpl
inc
cld
mov
dec
lods
jge
and
xchg
nop
push
mov
jg
pop
adc
xchg
out
and
enter
das
jo
insb
mov
xor
incl
adc
test
sbb
stos
pop
xchg
ds
aad
push
das
pop
adc
inc
dec
mov
popf
idiv
es
cmp
mov
in
jmp
in
fs
orb
fdivrl
mov
fbstp
pop
pushf
mov
and
cmpsb
sub
sub
lcall
push
jae
or
ljmp
pop
mov
or
ljmp
inc
fcomi
fisttpl
jo
out
shlb
aas
loop
jmp
mov
push
or
int3
fdiv
sbb
add
adc
mov
out
jbe
enter
fcmovnb
xor
mov
adc
insb
push
mov
dec
push
cmp
stos
pushf
das
cmpl
xor
push
dec
shrb
inc
add
popf
xabort
sar
ljmp
push
jo
add
adc
xorl
or
jb
and
mov
imul
mov
call
inc
or
les
lods
cmp
adc
mov
adc
pop
icebp
aas
sbb
jnp
inc
adc
adc
push
rcrl
and
subb
and
inc
push
push
inc
lea
lods
add
ljmp
shll
shrb
sub
or
cmpsl
xor
dec
stos
mov
mov
xor
stos
call
stos
add
xchg
mov
dec
xor
push
and
sub
push
push
and
je
inc
mov
dec
daa
popf
jbe
ljmp
repnz
sub
es
incl
std
push
shrl
dec
lea
ficoml
shlb
test
gs
es
mov
push
dec
jmp
mov
hlt
out
fimull
jbe
ds
and
mov
test
ljmp
mov
sbb
xchg
xor
jmp
mov
ret
xor
scas
add
test
pop
jae
fwait
push
mov
mov
mov
call
or
loopne
in
js
dec
mov
ss
repz
faddl
sahf
sbb
decl
cmp
enter
repnz
pop
jmp
das
inc
cli
loope
lcall
or
adc
dec
xchg
add
fwait
rcl
jns
pushf
jnp
rcr
filds
xchg
mov
call
xor
push
mov
jmp
inc
xchg
xchg
icebp
lcall
xchg
pop
pop
dec
sub
sbb
sub
out
lret
inc
xchg
push
mov
int
stos
dec
lods
clc
inc
iret
mov
push
jecxz
sti
outsl
mov
decl
sbb
rorl
cmp
ret
or
js
push
fcomip
xchg
cmp
lret
jb
in
pop
jb
and
sbb
adc
nopl
fsubrl
mov
jne
js
popf
jne
push
inc
enter
call
push
mov
lock
bound
rcrl
push
je
in
popa
stc
in
push
je,pt
fwait
mov
add
sub
mov
adc
decl
pop
mov
aaa
pop
jl
rcl
mov
in
addl
and
dec
xor
sub
incb
shll
ja
push
pop
imul
fisubl
push
xchg
mov
xchg
leave
call
insb
cwtl
test
decl
stos
sub
lcall
xor
and
cmp
pusha
cmpsb
mov
fdivrs
popa
iret
jmp
mov
call
loope
mov
loope
lods
cmp
stc
loope
add
add
and
and
inc
out
test
out
lret
jmp
lret
xrelease
loopne
add
ret
cmp
add
enter
cltd
orl
fs
loopne
add
imul
sub
mov
and
sub
xor
xchg
xor
mov
or
fstl
mov
lret
mov
test
imul
pop
sarl
push
clc
decl
dec
xchg
rclb
cltd
lea
ja
jp
sbb
bound
or
dec
test
xor
pop
test
add
and
or
xchg
rorb
ret
jno
pop
pop
jo
adc
or
leave
lcall
incl
adc
int3
adc
lret
in
xorb
flds
int
xor
jg
or
or
fsubs
cli
rolb
loopne
daa
add
pushl
cld
mov
add
dec
aad
outsb
jne
test
dec
push
aad
popf
mov
popf
cmpsl
cmp
ret
cmp
and
fists
or
mov
pmaxub
movsl
xor
and
outsb
subb
jmp
mov
sub
add
add
dec
push
mov
movsb
mov
cs
fdivr
incl
cmpsb
jbe
imul
cmpsl
shl
add
daa
xor
clc
decl
call
or
xchg
std
mov
mov
inc
popa
jns
lds
mov
pop
mov
imul
loopne
jl
int
shlb
mov
ljmp
in
ss
dec
or
inc
loopne
push
pusha
jb
into
mov
dec
lods
cmp
mov
push
sbb
and
ret
inc
shlb
mov
in
mov
jmp
in
adcl
cld
nop
sub
xchg
sub
pop
inc
in
push
data16
jo
xor
and
rol
pushf
dec
jl
and
and
jg
inc
call
or
mov
and
mov
push
xorl
inc
adc
daa
adc
push
inc
jmp
fldenv
lea
inc
das
mov
fsubs
mov
and
imul
adc
stos
pop
repnz
leave
jg
push
push
mov
stos
push
lret
cmp
add
decl
cmp
pminsw
push
enter
sti
pop
xchg
sahf
nop
add
add
decl
jl
aaa
clc
rorl
int3
pusha
jl
and
adc
push
or
ret
sbb
xor
subl
mov
ret
das
out
in
enter
sub
shlb
xor
ret
ret
fsubrs
adc
adc
add
fxch
test
push
add
or
pop
fimull
push
cld
jg
jmp
sbb
rolb
push
in
dec
cmp
jg
or
bts
and
bound
xor
lcall
xor
mov
ret
inc
ret
pop
or
pop
sti
ljmp
jp
repz
negl
pop
jmp
mov
ficoml
mov
sbb
popa
loop
push
add
dec
xor
cli
mov
inc
push
fcoml
ret
shrb
mov
adc
xor
shl
mov
cmpsb
daa
push
push
adc
decl
insb
mov
lcall
mov
pop
pop
cmp
loop
arpl
test
pushl
pop
and
and
stos
sub
mov
hlt
inc
pop
push
subl
mov
inc
inc
push
push
enter
inc
xor
movaps
push
xchg
scas
sub
push
into
mov
decl
loopne
lods
inc
push
pop
pop
mov
sbb
fidivrl
outsb
pop
aas
push
aaa
xchg
adc
pushl
ds
adc
movsb
mov
inc
mov
dec
push
pop
sahf
or
sub
xchg
push
cmpsb
fcoml
pushf
out
cli
jmp
cwtl
sti
add
jo
movsl
cs
into
dec
bound
jae
jle
adc
lock
cmp
mov
add
lea
lahf
pop
fucomp
adc
cltd
push
mov
inc
mov
cmp
jmp
or
enter
testl
lock
sbb
pop
out
clc
call
xchg
in
sbb
jle
jo
mov
incl
push
mov
add
sbb
filds
cmp
lea
add
addr16
mov
mov
in
shl
lret
pop
mov
ljmp
insb
insl
imul
fcmovbe
movsl
jo
jge
insl
jp
cltd
repnz
scas
jp
xchg
ret
ljmp
pop
loopne
xchg
mov
sub
sbb
addr16
xchg
push
mov
movsl
pop
ret
push
cmp
mov
mov
mov
pop
mov
ja
push
fnstenv
decl
dec
jge
jno
inc
cmp
mov
xchg
xor
int
jp
das
lock
lret
fdivrs
out
cli
les
xchg
mov
jns
lcall
imul
cmpb
sub
xor
ljmp
inc
push
sbb
orl
xor
cmp
mov
nop
pop
or
adcb
jnp
sub
xchg
cmpsb
adc
fldt
pushl
push
lret
sub
scas
mov
cmp
xchg
lods
mov
popl
jl
xchg
test
adc
leave
movsb
daa
cltd
movsb
in
inc
fwait
mov
scas
daa
test
mov
jg
adc
mov
mov
repnz
xchg
ret
adc
pop
sub
clc
xchg
das
push
add
adc
inc
xor
mov
cmp
push
das
xor
sub
sbb
aaa
js
insl
adc
ret
pop
jo
dec
cmp
incl
cmp
xchg
mov
sahf
cmp
inc
dec
sbb
dec
mov
test
mov
jae
std
mov
mov
xchg
xchg
ret
orl
adc
dec
pushf
push
js
je
adcl
xor
incl
cmp
jne
add
or
and
test
addb
mov
mov
xor
inc
add
lcall
cmp
xor
add
pop
dec
sub
ljmp
fadds
inc
imul
sbb
pop
lock
sub
inc
jno
mov
decl
enter
mov
cmp
jg
mov
push
pop
add
rolb
ret
mov
nop
mov
pushl
mov
xchg
mov
push
or
inc
mov
das
push
cmc
xchg
or
or
sub
adc
pop
test
ljmp
fdivrs
mov
push
jle
stos
jmp
xchg
pop
sbb
out
sbb
fs
jmp
leave
adc
cli
ljmp
orb
js
repz
add
cltd
insl
mov
das
call
shlb
dec
push
cmp
leave
cwtl
test
sbb
mov
xor
mov
cli
fsubl
gs
dec
adc
pop
insl
push
sub
cs
ljmp
fadds
sbb
xchg
cs
jns
call
inc
adc
and
ja
dec
mov
and
fldcw
sub
out
inc
loop
sbb
and
pop
rclb
shrl
pop
icebp
xchg
mov
mov
fs
jnp
add
test
jmp
pusha
xor
jbe
inc
cld
pop
cmpsb
adc
cmp
rolb
push
mov
adc
mov
mov
pusha
push
imul
pop
adc
push
insb
sub
jnp
xchg
mov
sbb
loope
test
enter
test
or
sub
loop
cmp
xor
xor
outsl
fdivrs
mov
lock
push
dec
lds
xor
mov
loop
adcl
sbbl
sbbb
fbstp
or
es
add
xorb
add
pop
cmp
jecxz
inc
jge
adc
mov
push
mov
imul
pop
outsl
add
in
or
cmpb
shlb
call
aaa
mov
mov
jo
rorb
sbb
mov
loop
lock
sub
std
ja
clc
xor
xchg
popa
cltd
mov
and
and
lret
loop
jnp,pt
or
test
push
mov
test
dec
or
ljmp
std
xor
xor
mov
sub
leave
out
cmp
lcall
push
ss
push
pushf
fcompl
sbb
pop
sub
xorb
and
cmp
dec
mov
sub
mov
insb
push
xchg
adc
sbb
lcall
add
aaa
adc
xchg
and
lret
imul
or
sub
ljmp
cli
push
or
pop
into
ds
mov
sbb
push
inc
orb
cmp
cld
and
ret
or
out
mov
cwtl
decl
mov
mov
and
fmull
subl
or
ja
ja
xchg
mov
lcall
loope
rcrb
or
movb
push
add
stos
insb
in
punpckhbw
or
fxch
push
adc
push
fisubrs
xchg
push
nop
les
call
pop
or
cmpl
fs
mov
adc
mov
call
das
negb
jmp
insb
cwtl
movsb
icebp
mov
inc
lds
xor
cltd
or
lcall
js
mov
and
pop
and
rolb
or
sbb
xchg
inc
add
in
sub
cmp
out
push
mov
ja
xchg
clc
mov
fisubl
xor
or
pop
mov
and
add
outsl
shlb
add
cmc
add
xchg
cmp
xor
out
add
enter
dec
adc
pop
jns
aam
mov
mov
jb
sub
js
cs
clc
mov
jns
pushl
and
xor
sbb
or
push
out
sti
xor
cmp
mov
cmp
pop
bnd
icebp
xor
sbb
in
cmp
sarl
imul
xchg
clc
sbb
and
cltd
add
or
xlat
jns
or
pop
adc
mov
push
mov
push
fsubrl
mov
lret
push
insl
es
jg
mov
fisubs
shlb
mov
inc
add
pop
and
movsb
sub
cmp
stc
inc
ret
sbb
mov
mov
out
push
int3
mov
mov
int3
movsl
loop
lods
mov
lds
loop
jns
inc
xchg
or
xor
cmp
add
adc
mov
in
mov
enter
cmp
cld
push
mov
jo
clc
sbb
jg
aam
push
sub
adc
jo
loope
testb
les
sub
ljmp
imul
xlat
lcall
jo
cmp
add
test
sub
orb
add
test
pop
mov
mov
jg
fldt
mov
push
xchg
xchg
xchg
lds
rcrb
jo
xor
push
mov
add
cmpsb
dec
xor
add
mov
fidivl
shl
test
pushl
cmp
inc
xchg
or
je
cmp
outsb
lds
lret
test
aam
xor
add
pusha
add
jl
jnp
xchg
imul
fldt
sar
ljmp
cld
mov
fadd
mov
fwait
enter
lret
push
and
and
out
dec
xchg
lock
xor
iret
movsl
push
test
fdivrl
clc
mov
mov
mov
jp
fnstenv
and
add
inc
jo
out
mov
and
imul
adc
aad
mov
xchg
lock
call
inc
dec
fcmovnb
sub
lret
and
xchg
adc
inc
imul
lcall
mov
add
adc
lods
lcall
mov
mov
sbb
aad
mov
sub
mov
dec
ret
ljmp
sub
stos
fidivs
loopne
push
scas
push
push
addb
xor
jne
outsb
pushf
sar
pushl
xorb
xlat
add
push
dec
enter
add
sarb
arpl
data16
jo
xorl
mov
test
and
and
test
add
xor
and
sub
and
test
or
or
add
pop
mov
adc
movsl
sub
add
movsl
jmp
cmc
test
or
inc
bound
mov
fildll
mov
js
pop
and
hlt
int
jne
or
clc
pushl
xchg
add
imul
outsb
push
clc
xor
das
cmp
xor
and
js
inc
jnp
mov
sub
fdivrl
or
sub
incl
test
push
ljmp
cmp
andb
fadd
adc
xchg
enter
adc
mov
jp
dec
stos
cmpl
jo
sbb
mov
mov
fcos
decl
sbb
cmp
inc
mov
addr16
out
ret
imul
out
nop
mov
push
push
andb
sub
or
add
addb
mov
ja
movsb
out
lds
ds
in
jne
outsl
push
hlt
fidivrs
inc
add
nop
xchg
pop
sub
push
aad
sbb
inc
call
icebp
aad
jae
mov
es
and
sbb
fprem
pop
dec
loopne
nop
inc
add
add
int3
mov
xchg
int
adc
push
subb
das
dec
sub
cwtl
ljmpw
test
push
cwtl
loope
cld
fsts
int
sbb
cmp
incl
sahf
inc
ljmp
dec
stos
in
jg
test
test
cmpsl
outsl
mov
into
jp
icebp
pushl
pop
mov
xchg
xchg
mov
ret
add
leave
daa
lahf
push
cmc
dec
xorl
pop
ds
rolb
adc
enter
dec
pop
shlb
pushl
dec
mov
stos
in
add
dec
xchg
jecxz
sub
xor
xchg
int
scas
xchg
stos
mov
cmp
ds
push
pop
mov
pop
xor
dec
add
sbbl
mov
xor
stos
mov
sub
pop
fildll
and
push
cli
mov
fbld
aaa
jbe
sbb
or
or
mov
imul
das
aad
addl
lods
rorl
jnp
push
loop
bound
scas
mov
lea
lcall
jmp
pusha
xchg
jbe
fnstcw
jg
dec
sbbl
push
shrb
pop
inc
aam
outsl
and
out
mov
pushl
adc
incl
push
ret
clc
jp
sbbb
or
and
adc
jg
inc
out
and
push
popa
sbbb
nop
or
scas
repz
fistps
jno
mov
xchg
adcl
outsb
push
cli
movsl
fcomip
push
out
call
mov
pop
and
ja
decl
or
and
cmp
lock
push
fimuls
clc
ljmp
add
bound
xchg
fisubs
das
cmpl
jge
push
sbb
mov
into
xorb
mov
pop
push
add
xchg
inc
ja
cmp
sub
push
push
add
xchg
pusha
test
mov
pushl
sub
jl
enter
addr16
js
push
push
fcomip
fs
shrb
ret
insb
xor
sti
cmp
decl
js
roll
std
or
mov
mov
mov
shrl
cmp
in
jp
pop
cmp
jge
pusha
fisttpl
jge
add
int
idivb
scas
test
dec
inc
mov
jmp
sarb
mov
lock
popa
cmp
scas
jle
mov
xchg
cld
call
mov
ficoms
les
int
ss
inc
push
in
outsl
adc
call
iret
aad
in
lea
sbb
test
xor
xor
mov
mov
add
mov
mov
inc
es
xor
dec
adc
fdivr
pushl
xchg
inc
jb
dec
xchg
xor
mov
cwtl
ret
sub
ret
sbb
jmp
adc
inc
mov
daa
push
and
push
inc
cli
xor
lahf
inc
subl
jmp
shlb
shl
std
xor
adc
mov
in
nop
das
inc
shrb
mov
jo
lcall
sub
das
loopne
push
add
insb
dec
scas
popa
ret
test
mov
in
dec
and
mov
cltd
out
shl
fpatan
lcall
or
decl
or
xchg
sub
test
pop
sar
jg
mov
insl
push
cmp
in
fwait
mov
adc
js
jmp
lret
pop
dec
fbld
ljmp
int3
outsl
jae
fisubrs
xchg
jmp
int3
or
cmp
decl
sub
or
les
fmul
mov
pushf
rorb
cwtl
pushf
xchg
and
decl
syscall
push
pop
pcmpgtb
jle
mov
and
lahf
add
mov
adcl
test
xchg
inc
inc
mov
dec
sbb
xchg
fcomps
daa
incl
jmp
push
xor
mov
or
sbb
in
xor
aam
nop
popa
clc
call
sbb
add
js
mov
sahf
push
lea
push
dec
mov
mov
movswl
adc
ds
or
sbb
insb
jg
incl
xchg
sbb
pop
add
cmpsb
pop
sbb
icebp
fcomps
fs
pushl
xchg
xchg
imul
cmovne
jp
sahf
cmpl
mov
hlt
in
inc
jmp
sahf
sbb
popa
ljmp
pop
sbbb
subl
test
inc
stos
psubq
jg
sbb
lcall
sahf
push
scas
or
out
dec
adc
adc
fstpt
adc
inc
leave
xor
inc
or
mov
push
je
or
lea
outsb
icebp
jmp
xor
enter
call
dec
push
rcll
ds
aad
ljmp
or
subb
push
gs
lcall
mov
pop
imul
pop
data16
test
pop
je
xchg
push
pop
in
jne
pop
and
jmp
mov
xlat
pop
jge
pop
cwtl
xor
push
lret
inc
cwtl
jle
call
repnz
jecxz
lock
imul
lds
jnp
add
jmp
inc
jmp
lods
xchg
xchg
ss
out
xchg
mov
roll
inc
adc
mov
or
rol
sub
fcomip
fnstenv
push
push
jns
mov
je
andb
loope
cwtl
arpl
scas
decl
ja
loope
roll
outsb
les
js
daa
inc
lock
nop
push
mov
sbb
lock
iret
add
js
xor
add
or
call
pop
mov
xor
add
loope
jmp
mov
lds
and
inc
push
int3
push
ja
mov
ret
mov
ljmp
mov
orl
in
clc
repnz
lods
adc
inc
ret
ret
cmc
fwait
or
decl
lock
ret
jg
movsb
adc
sar
add
js
push
mov
jns
add
xchg
orb
call
fs
outsb
lret
adc
pop
fstps
std
mov
inc
rcrl
out
in
pop
inc
push
inc
add
push
add
push
xchg
ret
sbb
sub
mov
ljmp
adc
inc
push
xor
incl
xorl
push
dec
inc
and
inc
inc
mov
dec
push
test
dec
cmp
enter
test
sbb
add
jbe
pushl
add
mov
stos
or
pop
arpl
mov
popa
pop
push
mov
push
nop
repnz
mov
cmp
or
lcall
adc
mov
inc
lret
bound
pop
call
jo
push
pushf
in
xor
je
mov
xchg
sbb
xlat
lcall
push
push
cwtl
mov
xchg
dec
dec
and
or
outsl
loope
pop
add
jg
out
jo
test
mov
fadds
add
fs
aad
adc
jecxz
loope
daa
outsl
mov
decl
add
sub
mov
sbb
pop
push
mov
incl
jmp
xchg
rclb
arpl
sub
adc
pop
mov
icebp
push
add
inc
orb
add
pop
decl
sarb
cld
sub
or
mov
sbb
add
addl
incl
mov
inc
sbb
shll
hlt
rorl
and
es
cld
lcall
mov
sub
pusha
push
adc
inc
imul
mov
xchg
mov
xchg
ljmp
sbb
lods
shl
stos
test
jmp
add
sbb
pop
rorl
repnz
add
xchg
pop
je
mov
jo
jbe
dec
cmp
mov
and
xchg
inc
mov
mov
add
push
push
or
or
push
jmp
cmp
or
sbb
loope
je
stos
ljmp
mov
xlat
pop
xor
mov
dec
xchg
mov
jns
push
popa
dec
xchg
mov
lcall
or
test
inc
shlb
or
enter
enter
or
incl
imul
mov
jge
lods
sub
and
sbb
sub
outsb
cltd
and
mov
pushf
cmp
mov
jmp
arpl
pop
out
out
dec
mov
pop
dec
and
dec
adc
pop
or
push
inc
test
xchg
dec
aad
sub
adc
rorl
inc
adc
icebp
fisttps
sub
lds
in
fwait
xchg
pop
dec
dec
or
xchg
lcall
orl
cmp
and
cmp
dec
repz
test
test
pop
push
mov
movsl
lock
push
xchg
mov
pushf
pop
rolb
movsb
cmp
mov
pop
call
icebp
or
decl
rcrb
inc
out
inc
mov
popa
add
push
xchg
adc
scas
and
fadds
inc
ds
sbb
cwtl
push
adc
lcall
nop
or
sbbb
push
fs
mov
pop
dec
fidivs
les
inc
fsubrs
pop
mov
bound
inc
daa
into
roll
enter
mov
subb
ljmp
add
add
pop
mov
out
pop
push
xchg
push
push
adc
cld
inc
push
sub
ljmp
popf
jp
pop
inc
insl
sbb
test
jno
mov
scas
pop
stos
lods
lcall
fbld
stos
rcrl
pop
orl
push
sbb
aad
mov
adc
mov
js
xchg
adc
push
mov
adc
stos
lcall
dec
cld
decl
jno
xchg
jno
xchg
adcl
pop
add
mov
adcb
aad
fucomi
push
pop
jg
gs
sbb
dec
mov
fidivl
mov
or
dec
xchg
fldl
pushf
dec
ficomps
pop
mov
lret
dec
scas
fmuls
cmp
arpl
cmp
ljmp
mov
mov
imul
int3
xchg
fldt
pop
inc
xor
ljmp
inc
clc
popf
push
gs
push
pop
repz
pushl
popf
or
sbb
xorb
pushf
fisttpl
enter
mov
fs
mov
ds
push
dec
nop
or
imul
pop
inc
xor
sbb
addb
mov
sub
outsl
xor
push
cld
js
mov
and
lock
cmp
ret
xchg
int3
mov
cmp
popa
or
add
rolb
outsb
sbb
fwait
cmp
cmpsl
push
jns
xchg
mov
mov
sbb
icebp
ljmp
cmpsl
gs
pop
rcl
sbb
dec
fwait
ss
imul
xlat
movsl
xchg
mov
dec
push
add
fucomip
push
out
imul
js
mov
ret
pop
popa
adc
daa
movsb
decb
cmpsb
decl
jecxz
rorl
and
add
mov
add
outsl
sarl
push
cmpl
or
repnz
cmc
add
mov
adc
lock
bound
xlat
mov
pop
stc
shlb
or
mov
test
pop
inc
nop
inc
adc
mov
sbb
add
cmpb
incl
mov
scas
std
fcmovnb
mov
or
dec
lods
sar
in
push
hlt
sbb
add
in
xor
rcrl
sarb
data16
mov
add
pop
dec
decl
inc
and
pop
pop
inc
xlat
and
inc
adc
xor
test
cwtl
dec
add
bound
movsl
push
scas
imul
pushf
pop
sub
jnp
dec
xchg
cmp
or
cmpb
lcall
scas
mov
jge
je
jmp
add
rcrb
rcrb
ljmp
jge
xor
and
add
aaa
cld
and
or
add
rolb
xor
test
push
inc
rorl
add
sbb
add
call
rolb
enter
orb
fadd
or
fwait
in
incl
push
inc
xor
pop
sbb
loop
inc
pop
mov
add
fimuls
mov
mov
stos
aaa
cld
jg
xchg
je
cli
xor
and
into
inc
lahf
test
lahf
hlt
test
fcomip
cmovs
movups
dec
leave
imulb
and
push
addb
mov
sbb
inc
push
mov
inc
icebp
and
add
push
ficoml
lahf
gs
pop
hlt
loope
push
sub
cmp
lcall
cmpsb
sbbb
testl
sbb
cli
lds
add
pop
lds
std
mov
dec
or
pop
incl
mov
cmc
pop
mov
xchg
mov
sbb
cmp
lcall
bound
add
sub
jl
adc
inc
dec
xchg
add
out
es
push
inc
js
adc
inc
adc
inc
adc
xor
loope
sbb
sbb
imul
push
dec
sar
das
cli
and
mov
mov
inc
adc
dec
pop
adc
jg
xchg
pop
sub
pop
data16
adc
and
or
fs
test
push
sarb
movsl
cs
call
push
shrb
xchg
inc
sbb
insb
xor
call
xchg
in
call
jo
pushf
jo
sarb
iret
std
pushf
cmp
andl
jmp
gs
sub
incl
js
cmp
push
gs
frstor
es
sar
cwtl
inc
aam
add
inc
adcb
jo
jle
xor
pop
cmp
out
incl
jb
ret
outsl
cs
jle
push
sub
into
ds
inc
sbb
add
mov
lcall
pop
adc
push
sbb
add
ljmp
incl
push
es
fcoml
ja
cmp
in
leave
outsb
int
dec
mov
stc
ds
fcomip
jmp
popa
fisubs
dec
gs
mov
pop
push
in
leave
adc
inc
sub
pop
subb
clc
push
pop
push
pop
pop
sbb
into
lcall
filds
aad
call
addr16
or
xchg
sti
push
or
dec
mov
push
cmc
or
movsb
adc
lahf
bound
lea
add
adc
ljmp
mov
fs
dec
dec
adc
mov
add
adc
or
in
lds
cs
mov
call
outsb
lret
shll
mov
mov
jbe
jg
addr16
inc
xor
inc
pop
hlt
and
movsl
movsl
mov
mov
cmp
add
stos
or
hlt
imul
mov
add
xchg
pushf
repz
pushl
sbb
dec
sbb
int
popf
push
rorb
dec
xor
iret
aam
ljmp
sbb
roll
mov
fadds
pushf
ljmp
fstpt
cwtl
stos
stos
mov
test
lods
ret
outsb
inc
add
mov
mov
and
fwait
nop
orl
data16
out
adc
or
subl
dec
jmp
adcb
mov
add
andl
or
arpl
add
mov
stos
in
cwtl
stos
xor
bound
adc
jmp
mov
sbb
cmc
hlt
sbb
dec
xchg
adc
xchg
mov
push
push
les
shrd
je
add
and
adc
dec
or
sbb
aad
add
mov
xchg
leave
mov
push
xor
inc
cmp
call
mov
sub
add
decl
mov
mov
dec
mov
mov
lcall
mov
adc
in
fcoms
jmp
enter
adc
mov
sbb
adc
loopne
inc
loopne
mov
lods
lcall
inc
and
adc
push
sar
or
lcall
mov
push
in
insl
push
clc
sub
mov
and
lock
mov
out
cmp
cmovb
nop
icebp
popf
inc
push
adc
pop
pop
adc
test
ljmp
pop
jb
aad
arpl
jl
mov
add
sbb
jg
and
sub
imul
xchg
pushf
aam
add
fcomip
jmp
adc
popf
xorb
jo
sbbl
out
or
fucomp
ljmp
loopne
insl
test
push
scas
icebp
push
das
outsb
pop
adcl
pop
sbb
inc
in
in
hlt
mov
sbb
cld
push
mov
sbb
repnz
mov
or
outsb
std
jg
loope
push
out
jbe
lods
pop
sti
mov
cld
sahf
xchg
cld
scas
in
fisubrs
loop
adc
sub
cmpsl
incl
jecxz
loopne
lret
dec
mov
subb
cmpsb
mov
pop
fisttps
push
ss
pop
sbb
call
call
push
stc
mov
xor
dec
push
movsl
sbb
ljmp
loopne
addr16
enter
test
cltd
dec
sarb
incl
fxch
stos
sbb
or
mov
lret
pop
pop
icebp
lcall
adc
adc
lret
pop
shr
jmp
insl
roll
xchg
add
test
add
mov
fistl
dec
nop
inc
insl
xchg
xchg
pop
add
movsb
dec
ret
test
fs
into
pusha
nop
push
mov
test
in
xchg
pusha
xchg
ficoml
adc
inc
sbb
xchg
fidivrs
push
decl
adc
fcomps
mov
out
addr16
lds
adc
xor
fsubl
popa
jae
and
cld
ljmp
jnp
adc
mov
and
sbb
call
sbb
fnstcw
adc
add
xlat
mov
lcall
mov
pop
xor
btr
xchg
scas
push
mov
mov
mov
adcl
ljmp
roll
mov
addl
sub
pushl
jg
aaa
popl
jp
cs
repz
cmp
bound
add
sbb
repz
dec
in
je
lahf
dec
insb
lahf
inc
mov
rcrb
clc
mov
inc
add
xchg
les
mov
hlt
decl
jle
inc
lahf
leave
mov
push
cmp
xchg
jo
lock
fists
or
cmpsl
or
lahf
movsb
insb
adc
shll
or
or
mov
sub
pop
int
inc
mov
mov
lret
mov
dec
dec
ficoms
shll
mov
stc
mov
pop
insl
cld
mov
fwait
or
push
lret
adc
or
decl
adc
aad
and
jp
xlat
xchg
fwait
les
arpl
jmp
popf
inc
push
mov
mov
add
pop
and
roll
lcall
or
addr16
enter
inc
push
sbb
enter
test
fucomip
adc
add
hlt
gs
mov
jmp
in
aas
cmpsb
xchg
sub
rol
repnz
inc
sub
imul
testb
ljmp
int
into
shrl
jbe
jecxz
or
loop
inc
outsl
sti
test
inc
sti
stos
call
cld
xchg
push
xorb
dec
cmp
mov
pop
ret
push
cld
incl
stos
or
shlb
scas
outsb
out
pop
enter
aaa
sti
ljmp
je
int3
lret
cs
out
test
jl
mov
mov
in
int
popa
loop
ljmp
stos
inc
ret
xchg
mov
dec
fwait
mov
mov
decl
push
cwtl
stos
outsb
lcall
pop
adc
incl
mov
xchg
in
inc
dec
lret
js
test
lcall
js
daa
int
aam
adc
push
mov
aad
aad
aad
sti
and
std
icebp
adc
mov
and
dec
mov
cld
scas
js
leave
shlb
sub
push
inc
int3
add
ret
sbb
pushl
int3
jle
out
jno
dec
push
sbb
jns
mov
dec
rcrb
test
mov
jmp
fcoml
das
inc
push
mov
xchg
pusha
cltd
subl
push
push
sbb
incl
sbb
mov
mov
and
loop
aaa
fs
mulb
mov
hlt
mov
gs
cs
outsb
fs
xchg
iret
aam
sbb
sub
lods
andl
jl
xchg
ret
pop
les
jp
fbstp
lret
subl
mov
and
shll
pop
cmpsl
scas
out
scas
mov
mov
sti
and
jnp
mov
inc
repz
mov
cmp
mov
jbe
scas
adc
mov
test
mov
bnd
popf
xor
inc
outsb
mov
xchg
jnp
xchg
jnp
push
pop
mov
test
xlat
in
out
mov
mov
pop
inc
or
pop
cld
call
jnp
xlat
mov
push
add
push
pop
add
pop
mov
sbb
jb
sub
pop
gs
lds
or
out
clc
jmp
call
jg
pushf
dec
cmp
mov
lret
stc
sub
sub
add
scas
rorb
push
jl
sub
sub
ljmp
jo
out
lods
push
or
arpl
movsb
inc
pop
pushl
and
jp
test
mov
adc
xor
incl
aam
test
jae
cmp
dec
aaa
stos
pop
js
fildl
sbb
ljmp
sbb
sub
ss
fmull
ljmp
add
mov
push
test
and
ret
movsl
inc
and
lds
and
data16
cmp
inc
sti
mov
mov
and
bound
mov
mov
push
icebp
incl
xchg
xor
in
cmpsl
mov
mov
out
add
add
add
dec
cli
sbb
pushf
push
sub
mov
movsb
testl
lock
mov
in
fistpll
aaa
scas
adc
repz
jb
inc
pop
loop
adc
call
xchg
dec
mov
xor
xchg
les
adc
sbb
lods
add
dec
in
mov
or
inc
cld
call
cmp
cmpsl
dec
cltd
dec
cli
fwait
lahf
shlb
inc
add
mov
and
call
sub
movsb
or
mov
sbb
adc
inc
mov
decl
push
movsb
dec
sbb
inc
or
lock
sahf
nop
sub
push
jmp
sahf
inc
iret
mov
inc
in
and
hlt
in
ljmp
orb
int
add
adc
pushl
ljmp
or
test
sbb
adcl
push
mov
cmp
int3
jb
scas
pop
inc
addr16
in
mov
les
insb
and
mov
clc
rol
mov
call
mov
cmc
js
mov
or
movsb
adc
ret
out
inc
cmp
clc
mov
lcall
mov
xor
shrb
inc
repz
movsb
movsl
loopne
repnz
mov
ficoms
loopne
mov
sbb
sub
roll
lds
fwait
rcl
test
cli
jne
andl
rclb
imul
cmp
aad
aaa
or
leave
stc
sti
stc
lods
push
setg
in
or
adc
jg
lds
adc
mov
inc
mov
push
sbb
inc
dec
pushl
sbb
ret
aam
mov
scas
clc
fbstp
mov
inc
and
out
jae
cmp
adc
arpl
jg
jmp
push
lret
inc
out
loop
or
test
add
enter
mov
arpl
mov
lcall
push
nop
mov
imul
jmp
mov
mov
sub
xor
or
ljmp
dec
mov
decl
add
stos
call
test
das
dec
push
jg
mov
or
xchg
jo
dec
cmpsb
lcall
cli
leave
test
daa
sahf
lcall
loop
sub
inc
push
insl
mov
scas
push
int
push
mov
cmp
add
sub
scas
mov
popa
cmpsl
mov
push
iret
jp
cmpl
add
inc
rorl
xor
pop
sub
jg
fs
lock
mov
inc
shr
xor
je
aaa
mov
rcrb
and
xor
into
ds
mov
inc
cmp
loop
and
outsl
jns
mov
lock
pop
push
add
fisttps
sbb
xor
mov
cmp
cmp
ds
imul
punpckldq
sti
jecxz
pop
push
mov
and
rclb
push
cwtl
cmp
jge
call
cmp
adc
cltd
outsl
fidivs
popf
iret
mov
push
mulb
mov
loopne
adc
adcl
xchg
cld
repz
mov
cmp
cltd
adc
dec
das
jp
push
mov
insb
xor
mov
hlt
mov
mov
mov
add
adc
push
lea
sbb
inc
les
pop
jb
cwtl
adc
jmp
xor
dec
xchg
repnz
mov
cmpsl
imul
adc
pop
xchg
cmp
jmp
rclb
pop
mov
aaa
dec
push
sub
ljmp
cs
push
pop
lcall
call
fsubs
cli
pop
std
pop
push
xor
movntps
and
sbb
lcall
mov
xchg
orl
pop
lock
jmp
xor
or
pop
sub
repnz
insb
andb
xor
sti
in
call
fistps
jbe
xor
cwtl
js
xchg
sahf
mov
arpl
hlt
repz
pop
adc
add
cmp
leave
and
mov
mov
jmp
sbb
mov
nop
test
fadd
int3
add
divb
jge
addl
shll
pushl
mov
jge
mov
bound
mov
out
dec
and
pushl
cmp
xchg
leave
movsb
add
incl
sbb
repnz
cltd
rcr
int3
mov
scas
call
mov
sbbb
lea
repnz
aam
mov
pop
jo
lret
or
in
dec
sbbl
ret
lret
filds
js
decl
xor
je
incl
loop
cmpsl
and
push
mov
xchg
and
test
fistl
add
mov
lods
push
sbb
mov
jmp
push
js
sub
filds
repz
xchg
or
addb
push
adcb
cmpb
cld
pop
lret
imulb
and
dec
out
ffree
inc
ss
int
rol
jl
imul
out
addb
pusha
pop
shr
push
mov
and
ja
into
call
out
popf
jmp
xor
lea
sub
lock
sub
adc
xor
repz
pop
sbb
decl
xchg
cmp
mov
sbb
xchg
movsl
out
cli
jg
and
andb
mov
push
loope
push
cmc
call
adc
cmpsl
inc
das
test
jmp
cmp
loope
mov
mov
dec
sbb
lcall
mov
neg
dec
pushl
inc
inc
mov
call
mov
jg
shl
call
fs
xchg
dec
xchg
push
out
mov
enter
xor
xor
push
inc
sar
jmp
sub
pushf
push
pop
and
mov
ret
ret
test
xchg
stos
ja
call
mov
xchg
push
fidivs
lods
scas
ljmp
pushl
inc
and
inc
mov
jecxz
pusha
jmp
lret
add
out
in
jg
lcall
cmpsl
scas
ja
adc
out
pop
das
fcomi
inc
mov
and
popa
xchg
cld
incl
ljmp
je
jecxz
mull
pop
cmp
inc
stos
cwtl
lds
mov
ljmp
jo
loop
movsl
push
sbb
inc
mov
decl
shll
cmpsb
push
clc
push
and
inc
mov
xor
es
out
and
popa
or
inc
aam
and
fistl
xorb
je
sbb
repnz
jo
ljmp
pop
outsb
mov
cmpsb
mov
stos
arpl
data16
psubd
call
cmpsb
dec
inc
fldenv
push
dec
in
in
pushf
or
push
rclb
call
leave
push
loope
jbe
hlt
mov
in
into
jbe
arpl
sbb
cs
xor
dec
and
ret
sbb
inc
ds
inc
decl
sbb
push
out
arpl
sub
inc
adc
pop
fcom
inc
xor
filds
ja
aam
int
outsl
xor
push
mov
shlb
pushl
mov
pop
cmpsb
sbb
mov
push
incl
dec
data16
mov
add
mov
pop
popf
xchg
mov
jg
sub
aas
mov
mov
pushl
cmpsb
jmp
cltd
popf
mov
mov
bound
sahf
insl
pop
mov
out
popf
inc
sub
decl
mov
and
negl
xor
sarb
xor
test
call
cmp
push
test
mov
jno
out
movsl
adc
sub
and
inc
xchg
decb
lcall
xor
dec
pop
lods
shl
push
xchg
mov
ljmp
jne
mov
out
push
sub
or
mov
push
bnd
mov
sbb
sub
or
sub
cmpsb
std
inc
or
ljmp
ds
xor
jb
lods
sbb
sub
ret
lcall
pop
loop
hlt
xor
pop
pop
pop
push
aas
mov
sti
out
push
or
mov
scas
je
popf
pusha
push
sti
addr16
mov
rcll
addb
out
jne
int3
pusha
sub
enter
pusha
inc
sub
fisttps
lock
push
repz
fisttps
sub
sbb
shl
icebp
sbb
xor
ljmp
sbbb
adc
mov
pushl
or
in
push
pushf
mov
outsb
jnp
lods
insb
jne
adc
aam
out
out
jg
fisubs
jge
loop
or
stos
aam
out
gs
xor
push
dec
mov
mov
test
lahf
stos
lret
clc
xchg
jb
fimull
cmp
repnz
sarl
popa
aad
mov
xchg
fcmove
cmp
jae
jae
insl
dec
lods
mov
sbb
incl
inc
call
test
andb
push
dec
mov
inc
cltd
shlb
das
sar
test
add
and
mov
fwait
and
dec
outsb
mov
sub
cli
addr16
movsl
mov
jecxz
push
sub
out
adc
out
scas
in
mov
decl
fadd
out
push
and
outsb
sub
aad
lret
and
xchg
mov
or
es
movsb
test
pushl
cmp
imul
push
inc
push
and
insb
push
jno
jo
mov
incl
or
pusha
or
adc
lock
or
orl
decb
or
sti
orb
mov
lods
fldcw
add
sbb
rcll
paddw
idiv
jecxz
hlt
rolb
mov
add
push
adc
and
mov
outsl
fistpll
adc
xchg
adc
dec
push
mov
insl
ss
add
cmp
div
or
add
ret
loopne
in
or
fildll
and
add
and
and
push
popl
leave
xor
sbb
or
dec
inc
incl
and
loope
mov
je
in
ljmp
imul
mov
call
add
push
sub
subb
sub
stos
scas
cli
outsl
adc
jmp
pop
jmp
addb
loop
ds
ret
mov
in
aad
incl
sbb
clc
lds
and
xor
jl
inc
cmp
inc
lock
lds
lods
add
mov
dec
add
lods
into
ss
cmpsl
in
mov
out
cmpsb
push
add
push
xor
pusha
push
dec
pusha
adc
addl
in
mov
mov
adc
and
lahf
push
inc
adc
out
mov
cmpsl
sub
cmp
out
call
lcall
jecxz
push
or
mov
jo,pt
add
popa
xchg
xchg
fmull
inc
jg
jecxz
inc
data16
dec
xor
les
scas
cli
cmpsb
outsl
add
fisttps
shl
test
sub
in
test
push
add
push
adc
hlt
push
mov
out
out
add
shlb
xchg
es
subl
outsl
outsb
dec
adc
lods
dec
push
xchg
and
or
cmpsb
cmpsb
fnstsw
push
mov
enter
bound
fmuls
push
pop
negb
ljmp
ljmp
and
dec
movzbl
and
outsl
cld
mov
decl
sbb
out
push
push
out
js
push
push
push
inc
sub
call
xchg
adc
jbe
sub
dec
sub
sub
or
or
idiv
outsl
xor
adc
xchg
addr16
add
push
mov
dec
movb
hlt
inc
push
and
mov
push
rcl
adc
add
pusha
ret
jle
sbbl
xor
into
les
and
xchg
stos
pop
mov
shlb
popf
cli
call
shrl
jo
or
aam
in
fadds
xor
pop
lret
adc
cmp
pop
inc
imul
mov
push
outsl
xchg
mov
lcall
andb
mov
loopne
inc
sub
inc
xor
out
sub
inc
sub
daa
ljmp
xor
mov
in
push
add
notl
fists
loope
xor
xor
ljmp
xchg
push
int3
mov
das
push
mov
test
cmpsb
sub
sbb
adc
xor
jmp
inc
mov
shl
lds
cmpsl
mov
insl
jmp
mov
outsl
jno
enter
sub
pusha
add
aaa
cld
sub
mov
and
inc
mov
loop
repz
fucomp
loop
add
je
loop
aaa
aad
push
imul
jp
push
fs
add
jns
lds
int3
sub
lcall
subb
push
scas
push
int
dec
inc
subb
clc
int3
pop
loope
cmpxchg
sbb
lcall
inc
sar
push
dec
and
popf
xchg
sub
lret
into
xchg
repnz
incl
pop
cs
push
in
and
jne
std
gs
inc
loop
pusha
mov
dec
inc
das
je
in
dec
inc
cmp
fcmovbe
andl
popa
add
incl
fsubs
cmp
aad
test
in
jmp
jge
push
inc
sbbl
dec
lret
pop
icebp
dec
or
cmp
adc
dec
push
loop
out
push
cmp
movsb
cmpsb
icebp
cli
js
vmread
dec
fldenv
sti
pop
hlt
fildll
cltd
jl
pop
push
data16
cltd
jo
data16
add
mov
pop
add
push
push
mov
push
subb
daa
nop
imul
scas
or
mov
and
movsl
mov
mov
fs
mov
dec
inc
repz
xlat
scas
fcomip
cmpsb
and
adc
cmpsl
pop
jne
dec
xorb
dec
and
insl
loop
xchg
insb
cld
call
push
jae
and
sub
xor
adc
loopne
jecxz
loop
ds
push
out
inc
push
mov
shll
lock
push
cld
outsl
movsl
ja
cvtpi2ps
movsl
cmp
adc
adc
add
inc
mov
push
or
mov
mov
jmp
cmpsb
mov
add
cmc
in
outsb
xchg
rolb
add
test
in
rcl
out
xor
in
push
mov
push
sarb
out
lock
pusha
xchg
add
rolb
sbb
sub
fs
jmp
cmp
nop
pop
pop
stos
imul
ljmp
lcall
test
hlt
inc
test
or
inc
icebp
scas
mov
ret
decl
mov
int3
or
mov
fs
gs
sti
incl
add
jno
add
clc
jmp
adc
cmp
cmp
cmp
addr16
jg
pushl
mov
sbb
jbe
out
fimuls
cld
push
xor
add
cmpsb
dec
ljmp
xchg
in
insb
jmp
mov
fs
call
add
jbe
inc
negb
add
setae
add
mov
inc
sub
jbe
xor
lods
scas
cmp
aaa
mov
js
ret
lds
xor
xchg
lock
movsl
push
push
inc
sbb
stos
out
outsb
jo
pushl
out
out
loop
notb
aas
loopne
inc
testl
and
out
pusha
pop
mov
sbb
call
or
pop
out
and
jbe
or
mov
and
out
or
pop
dec
ret
mov
pop
xorl
cmp
xor
pop
pusha
or
loopne
movsb
push
lcall
jmp
hlt
popa
out
ja
insb
push
mov
adc
in
mov
enter
push
dec
hlt
inc
stos
or
lcall
add
inc
sbb
mov
mov
jo
xchg
xchg
inc
in
bound
adcl
insb
and
xchg
gs
dec
cltd
push
cs
andb
cmp
adc
loope
incl
flds
adcb
outsl
jo
cmp
jl
xchg
imul
ljmp
jb
idivl
dec
in
insl
incl
cmc
mov
cmc
inc
xchg
insb
push
inc
ss
aaa
lds
aaa
movsl
mov
pop
rcll
adc
sub
cmp
pop
sahf
mov
push
lcall
cmp
add
bound
push
ja
cli
sub
lret
jecxz
push
dec
jne
decl
push
xor
mov
push
push
adc
es
add
jne
inc
push
decl
inc
in
xchg
sbb
rcrb
aam
cs
lods
adc
cmp
add
pop
and
pop
lds
js
scas
xor
dec
push
and
add
ljmp
mov
sahf
addl
pop
or
jne
daa
jae
jnp
push
mov
call
cltd
inc
or
cmp
sbb
cmc
mov
stos
or
mov
dec
aam
jae
pop
pushl
adc
outsl
dec
xchg
inc
fs
push
or
dec
loopne
mov
add
repnz
loopne
addr16
mov
adc
fcomp
mov
lcall
xor
imul
mov
loope
or
ljmp
test
jmp
xchg
movsb
lds
insb
cld
je
imul
stc
fs
loopne
js
push
jmp
sbb
and
cltd
sub
pop
movsb
mov
xchg
jbe
or
mov
sti
inc
push
ljmp
inc
test
lock
push
addr16
ljmp
addr16
cmpsl
mov
cmpsl
pop
jl
sub
int3
les
cs
cmp
or
mov
clc
jmp
movsb
loope
lcall
ds
sbb
fstps
dec
cmp
daa
in
int3
lds
call
out
pop
addb
rorb
pushf
aad
aad
rorb
scas
sbb
pop
stc
pop
mov
add
data16
jnp
daa
data16
or
mov
ret
xorl
imul
push
cmp
mov
pop
lods
popa
pop
and
int3
ljmp
pop
outsl
filds
cli
divb
sbb
sub
xchg
adc
pop
mov
or
mov
fildll
add
in
out
cmp
pop
mov
es
movsl
inc
mov
insl
dec
xchg
cmc
incl
dec
imul
sub
idivb
in
mov
call
outsl
out
xchg
and
sbb
fwait
sbb
push
push
aaa
cmp
das
inc
add
push
scas
mov
mov
mov
int3
mov
jl
sub
int
mov
pushl
cmp
out
das
mov
ret
inc
jo
mov
push
bound
add
lcall
push
and
cld
js
cs
or
in
jmp
ret
fwait
cmc
ja
mov
aam
jecxz
lcall
pop
test
ffree
gs
enter
lcall
push
mov
insl
fstps
mov
cmp
inc
hlt
aas
into
xlat
sub
ljmp
mov
adc
adc
fists
sbb
pop
imul
push
xchg
ret
subb
mov
andl
shrb
pop
loopne
call
call
nop
test
stc
sahf
mov
jnp
std
fldenv
inc
jmp
lea
incl
add
out
add
movsb
dec
push
mov
movntq
inc
push
test
sbb
cmp
jmp
icebp
push
sbb
jne
dec
inc
xor
and
pushl
scas
std
mov
mov
mov
call
out
mov
mov
pop
out
cwtl
push
jbe
mov
icebp
sub
mov
in
jg
cwtl
pop
sub
imul
dec
nop
mov
test
adc
lcall
aad
lds
xchg
mov
jl
out
mov
mov
jl
pop
mov
mov
iret
push
push
and
sbb
fbld
add
push
and
bound
lock
loop
xor
pop
ss
pop
jbe
dec
or
insl
rorb
jecxz
test
int3
dec
or
or
in
inc
std
clc
incl
add
push
add
push
sbb
jb
pushl
mov
dec
and
incl
ds
sbb
lock
test
adc
loopne
push
mov
push
jl
icebp
ljmp
mov
jo
clc
mov
xchg
xchg
cmp
in
lret
xchg
fdivr
fcomip
pushl
and
int3
es
push
rclb
sub
mov
xchg
es
hlt
das
sar
loopne
xor
xor
les
call
sub
int3
dec
mov
inc
push
shll
sub
scas
clc
lock
xchg
das
push
mov
and
or
insb
ljmp
mov
pusha
sarb
stc
cmp
cmp
lock
enter
jle
sbb
decl
pushf
pop
outsl
fmulp
mov
test
cmp
jns
add
enter
out
int3
sbb
sarw
add
mov
xchg
repnz
insl
sub
xchg
or
decl
xchg
mov
ret
push
mov
cmp
shr
jno
sub
pusha
adc
xchg
add
or
lcall
jle
repnz
scas
maxps
pop
inc
jl
int3
inc
fistpll
cmp
popf
js
cmp
push
inc
and
pop
cmp
orl
lcall
xor
pop
inc
pop
xor
mov
and
mov
mov
mov
dec
clc
push
fsubr
and
fadds
xchg
adc
decl
sub
or
in
mov
movsb
xchg
dec
push
jns
nop
int3
sub
mov
in
and
pop
add
ret
cwtl
test
cltd
pop
js
ja
ret
cli
clc
inc
fwait
dec
jl
fcoml
dec
sub
pop
hlt
call
push
fnsave
push
pop
movsl
xor
adc
push
push
nopl
loope
or
ljmp
xchg
and
call
lret
cmp
xchg
inc
lcall
cmp
roll
test
push
test
stos
mov
in
jp
mov
adc
lcall
dec
dec
dec
daa
pop
je
pop
adc
push
cmp
cli
push
xlat
dec
mov
lods
push
ja
pop
call
xchg
push
push
fstl
push
dec
int
incl
sub
push
pop
push
add
call
mov
cld
xor
pop
lret
lcall
push
push
or
leave
lret
xchg
arpl
cltd
mov
jmp
outsl
cmpsb
fwait
pop
scas
jns
fwait
ret
jo
xchg
and
fcompl
enter
mov
sbb
cmpsb
xchg
lret
inc
dec
lcall
popa
or
in
fs
jp
jae
sbb
sahf
sbb
addb
or
ljmp
add
pop
rolb
fstpl
add
loope
xchg
and
ljmp
shlb
lea
ss
push
and
push
cmp
mov
shl
ja
dec
push
decl
mov
fnstenv
in
push
int3
and
call
jae
pop
cbtw
mov
in
test
cmp
pop
dec
enter
push
cld
call
jns
mov
jge
add
sub
inc
mov
mov
movsl
xchg
ds
pop
inc
pop
add
test
fists
test
or
sub
cmpsl
pop
sub
mov
imul
mov
call
or
sub
mov
filds
in
dec
inc
xchg
test
push
sub
popa
movsl
call
mov
or
push
xor
in
dec
frstor
mov
movsl
push
pop
insl
mov
pop
xchg
pushf
imul
decl
in
adc
pop
jnp
add
pop
out
push
scas
add
ror
dec
repz
inc
xor
and
call
gs
out
adc
bound
push
fsubrs
xchg
add
ljmp
pop
xor
nop
fwait
test
into
enter
incl
into
mov
cli
push
xor
cmp
icebp
cmpl
add
out
cld
push
arpl
outsb
mov
clc
dec
int
cmp
imul
addr16
test
adc
sub
movsb
dec
lods
in
decl
mov
sbb
adc
sbb
mov
incl
je
add
mov
jge
insl
aaa
shlb
in
mov
test
sbb
cld
call
hlt
inc
mov
dec
inc
movsb
and
xchg
mov
cmp
pop
clc
decl
sub
movsl
or
add
xchg
add
push
cli
decl
pushf
ljmp
mov
push
sahf
repnz
ds
push
ljmp
call
inc
sbb
xchg
jg
lcall
sub
lret
call
loope
or
lret
inc
cmp
mov
and
add
xor
stos
mov
push
xchg
adcb
and
data16
fists
js
jnp
mov
adc
lds
lret
sti
lcall
add
jg
stc
rorb
sub
push
icebp
ret
push
scas
jp
or
adc
jg
xchg
ret
mov
dec
push
das
stc
repnz
or
inc
test
int3
add
and
lcall
sbb
loopne
sbbb
int
jg
decb
inc
mov
jmp
cmp
je
dec
arpl
mov
inc
add
mov
rcrl
fisttpl
ret
push
xor
call
xchg
mov
xor
sub
mov
cmp
mov
adc
adc
ljmp
jge
stos
and
push
adc
mov
loop
mov
and
fs
adc
insl
inc
xchg
xchg
loopne
xor
decl
outsl
rcrl
sbb
enter
insb
stos
adc
lret
je
enter
pop
push
and
cmpsl
jmp
test
fistpll
loope
iret
popf
in
pop
xchg
imul
jbe
mov
nop
in
int
icebp
dec
xor
inc
jne
iret
adc
stos
xchg
data16
lds
icebp
jae
aaa
fldlg2
std
jg
test
repz
stc
into
xchg
dec
jp
lds
fldcw
ljmp
sub
addr16
jg
sub
dec
sub
pop
sarl
xlat
lods
decl
push
pop
aad
leave
push
mov
xor
cli
call
mov
pop
lcall
sbb
jne
pop
cld
dec
subl
jl
test
fcomip
jmp
dec
dec
cmp
sub
jb
movsl
lds
addb
nop
cmc
pop
cmp
test
push
push
mov
add
and
int
xorl
int
pop
mov
pushl
cmpsl
cmp
push
jecxz
sbb
rcrl
fiaddl
jl
lret
repz
mov
adc
jl
and
or
das
sbb
fwait
sar
fldenv
cmp
mov
dec
mov
mov
and
xor
pop
test
fs
cmp
sub
lods
or
adc
call
sub
pushl
in
cs
xchg
sbbb
or
data16
cld
mov
insl
mov
jbe
adc
in
adc
in
fs
sub
cmc
call
xor
and
cmp
dec
pop
pop
mulb
movsl
mov
mov
sbb
lcall
repnz
lods
call
add
data16
jmp
ret
dec
loop
xchg
push
sbb
adc
mov
sarl
and
incl
mov
movsl
or
mov
push
shlb
xor
adc
mov
dec
fadd
push
jb
shll
ljmp
aas
mov
xlat
mov
shlb
add
mov
cmp
jb
xor
hlt
lcall
cmc
imul
imul
pop
sub
dec
lcall
ss
sahf
scas
sub
int
sbb
sbb
loope
hlt
dec
dec
mov
outsb
jecxz
cli
and
movsb
ds
ljmp
dec
push
mov
inc
lret
popa
adc
in
mov
std
scas
je
repz
icebp
or
ret
pop
and
dec
arpl
je
ss
sarb
cmp
incl
jp
push
sub
add
mov
inc
in
push
out
stos
jne
jl
test
rolb
sbb
adc
sbb
mov
das
push
mov
cmp
add
cmpl
loop
pop
jo
aad
jmp
jmp
rcl
testl
shr
mov
sti
incl
outsl
shll
dec
movsl
pop
sbbl
pop
push
pop
fwait
incl
xchg
add
mov
test
in
fdivrp
mov
jmp
cld
call
sbb
sti
add
or
push
and
push
decl
mov
es
jp
adc
inc
dec
jecxz
mov
push
pop
push
rcpps
inc
push
lock
incl
xor
pop
clc
pop
dec
arpl
lock
mov
popa
inc
pop
movsl
push
cmp
pop
dec
sbb
pop
cmp
fs
incb
jg
jae
hlt
inc
jl
mov
dec
repnz
pop
ja
outsb
in
test
cmc
incl
gs
push
and
inc
data16
loopne
incl
roll
add
xchg
aam
or
das
mov
push
xlat
cmp
call
push
jbe
aaa
jbe
addr16
lds
cmp
or
push
xchg
daa
cmpsb
xchg
adc
aas
filds
sub
adc
mov
sub
ja
repz
adc
rcll
jmp
imul
mov
jo
loopne
add
js
push
jns
xchg
test
insl
fsubs
pop
adc
insb
mov
adc
xor
push
mov
xor
pushl
enter
adc
insl
add
ss
testl
outsl
mov
mov
and
sbb
call
ljmp
pop
adc
inc
mov
add
das
jb
mov
push
xchg
xorl
xor
ljmp
cmpsb
pusha
fisubl
and
mov
cmpsb
xor
push
jo
inc
pop
ss
add
lea
pop
xor
sbb
loop
fs
jg
push
mov
ret
add
jb
mov
outsl
clc
shll
push
inc
and
cld
inc
inc
xchg
icebp
fistpl
adc
jge
add
push
mov
pop
adc
inc
lret
and
popa
sbb
fmuls
shlb
inc
sbb
fdivs
fdivrs
jbe
incl
push
cmpl
outsb
ss
test
push
jne
out
mov
ss
rorb
jbe
shlb
ss
imul
stos
inc
and
xchg
daa
mov
sbb
jmp
ja
pushw
addb
imul
fucomip
adc
sub
dec
nop
adc
cmp
ljmp
les
cs
push
pop
popa
shrl
adcl
mov
adc
mov
aas
sub
mov
sub
addr16
pop
lcall
add
jo
jnp
xor
shrl
popa
push
mov
inc
sbb
mov
sub
mov
sbb
jl
test
inc
ljmp
imul
or
loopne
xor
mov
jmp
xchg
popa
pop
adc
roll
lea
add
call
arpl
icebp
outsl
and
inc
loope
mov
mov
in
xor
push
adc
sub
arpl
cmp
xor
icebp
jb
inc
push
fadds
jb
movsbl
pusha
test
add
gs
inc
xor
inc
xchg
jbe
mov
imul
cwtl
xchg
and
leave
and
pop
pop
mov
pop
addr16
xor
lcall
bound
adc
popa
push
cmp
cmp
cmp
add
sub
int
push
test
mov
xchg
sbb
cli
xchg
adc
cmp
sub
add
lock
jge
sub
ja
arpl
push
dec
push
jmp
cmp
xchg
sub
and
arpl
ss
lret
ficoms
bound
int3
gs
bound
push
mov
ss
mov
loope,pn
mulb
std
in
frstor
adc
push
into
jb
add
mov
add
mov
clc
mov
cli
add
cmpsb
push
jl
push
or
popa
pushf
cwtl
mov
stos
dec
loopne
jle
inc
stc
jl
inc
lcall
lcall
xchg
shrb
lea
add
test
jg
aaa
into
and
jno
cmc
fwait
das
inc
xor
xchg
jmp
add
adc
dec
and
mov
dec
xor
mov
add
sbb
jg
pushl
pop
add
pusha
stos
push
sbb
rolb
inc
mov
push
cmpsl
and
xchg
push
or
data16
data16
nop
add
inc
pusha
jne
and
jecxz
sub
ret
gs
push
mov
jmp
and
xchg
push
push
sbb
or
outsl
test
imul
out
or
test
or
testl
imul
cld
jo
cld
push
sti
mov
add
daa
loopne
add
pop
add
add
jg
fildl
adc
mov
adc
sbb
mov
and
jnp
stc
popa
mov
jmp
pop
stos
and
mov
adc
stos
mov
lcall
mov
mov
cmp
popa
pushf
loope
imul
or
jmp
aas
cmp
imul
sahf
notl
lcall
shl
jne
dec
icebp
and
out
movsl
sub
adc
push
jnp
decl
or
cmpsb
pop
mov
cmpsb
repz
jl
test
popf
ljmp
adc
stc
xor
xchg
popa
sbb
inc
pop
rorl
fs
pop
xlat
inc
popa
lret
mov
out
clc
inc
les
test
pusha
lcall
push
xor
xor
ret
decl
cmp
imull
bound
cwtl
xor
jp
fisttpl
out
std
jmp
bound
repnz
pop
push
jo
inc
addl
push
loopne
cmp
pop
std
ja
push
mov
jg
fs
ss
xor
mov
cmp
aaa
ja
sub
aaa
jns
and
xlat
je
jb
push
bound
out
lods
cli
sbb
in
pop
mov
add
scas
jne
mov
ret
arpl
ljmp
jmp
and
or
dec
hlt
inc
test
leave
aad
ret
dec
mov
shlb
push
mov
add
cld
ljmp
incl
outsl
xor
sbb
mov
mov
rorb
imul
cmp
push
xor
dec
jg
xchg
add
rcll
call
sbb
out
xor
add
xor
adc
cmp
xchg
hlt
les
dec
xchg
sub
dec
mov
arpl
fsubs
add
adc
sbb
sbb
ljmp
sti
adc
or
push
pop
push
and
sti
insl
adc
inc
loopne
sbb
movsl
sbb
aaa
cld
inc
jo
push
sbb
mov
inc
mov
push
pusha
lock
mov
sub
push
add
jo
or
pop
hlt
in
pop
mov
xchg
inc
xor
xor
mov
and
xor
dec
mov
mov
sub
sbb
add
mov
shlb
adc
adc
pop
inc
jae
aad
dec
clc
jmp
inc
add
jae
pop
mov
pop
jns
sbb
out
xor
xor
sahf
ja
and
enter
sahf
pushf
lret
call
cld
or
test
mov
mov
je
fildll
movsl
adc
xchg
jecxz
pushf
decl
dec
sti
cmp
rorl
int3
push
jle
call
xchg
pop
cmpsl
aad
or
rorl
and
jne
enter
adc
shl
inc
sbb
jg
ds
push
pop
cmp
int
mov
ljmp
insl
xchg
mov
cs
pop
fcmovnb
jns
lods
sub
test
test
adc
incl
cwtl
lret
cld
ret
inc
mov
or
outsb
mul
pusha
mov
shll
or
sbb
outsl
stos
rcll
cmc
xor
sbb
scas
clc
call
cmpsl
test
int3
popa
ret
push
add
lock
jbe
fwait
fwait
jp
cmp
pushl
xor
xchg
jp
mov
bound
push
adc
std
das
cli
incl
pop
xor
arpl
pop
pop
repnz
or
cmp
sbb
sbb
pop
lock
lock
fnstenv
fnstenv
mov
pop
clc
jnp
and
std
call
mov
pop
pop
scas
jge
and
or
dec
lds
mov
or
mov
insb
orb
hlt
test
push
aas
into
xchg
shr
dec
insb
data16
cld
cmp
and
ss
in
into
pop
jl
movsb
lods
aaa
inc
xchg
mov
cmp
mov
mov
pushf
cmp
aas
movsl
or
lahf
aaa
daa
jb
xchg
sub
adc
cmp
fsub
push
xchg
xor
or
xor
repnz
paddw
iret
pop
xor
and
clc
icebp
aad
test
jl
mov
cmpsl
xchg
jmp
clc
es
dec
inc
mov
adc
push
inc
jge
shlb
in
cmp
test
sbb
sbb
and
cwtl
bound
cmpsl
sbb
jle
ljmp
popf
mov
push
cmp
mov
inc
lds
or
dec
push
out
add
inc
inc
push
scas
stos
xor
nop
inc
and
nop
pusha
jecxz
adc
add
jmp
rcrb
sbb
jbe
mov
or
dec
lahf
xor
das
pop
dec
cmp
ds
cmpb
fildll
scas
xchg
push
pop
mov
in
fwait
add
pushl
push
inc
fldcw
and
sbb
scas
dec
imul
int
mov
xor
and
dec
inc
clc
ds
adc
sbb
jp
push
fiaddl
sbb
jmp
shll
faddl
sub
int
fidivl
les
je
mov
das
sar
jmp
ret
ds
mov
inc
das
cld
xor
xor
sbb
adcb
adc
cmc
jg
shlb
pushl
orb
incl
xlat
lds
and
xor
leave
jno
aas
bound
orb
inc
push
aaa
out
call
mov
jg
fwait
xor
and
aaa
inc
test
decl
push
fs
adc
scas
lret
pop
and
add
leave
scas
hlt
mov
push
cs
mov
add
imul
hlt
add
shll
loopne
stos
jg
lcall
sub
jae
and
sub
inc
dec
jno
and
mov
rcrb
pop
icebp
ljmp
in
adc
or
push
fsubs
pushf
jecxz
sahf
add
pop
das
cs
enter
jle
and
lods
pop
scas
fldcw
jne
aaa
sarl
mov
loopne
adc
fcoml
push
ds
scas
out
imul
ror
in
jl
daa
loopne
sub
lfs
cmp
lods
xchg
test
call
cs
inc
sub
dec
dec
call
ret
jp
orl
mov
add
cmp
btr
leave
mov
xor
jg
inc
pop
xor
popf
xor
push
ljmp
les
lcall
test
rcrb
in
sub
pop
add
sbb
adc
inc
mov
push
decl
push
rcrl
test
push
in
dec
jne
gs
out
pushf
sbb
jbe
in
inc
lcall
jmp
loop
mov
inc
mov
in
sbb
cli
jge
jno
decl
ret
lcall
cs
inc
dec
data16
push
xlat
jge
mov
cmp
push
inc
out
dec
xchg
shrl
cmp
in
fs
mov
ljmp
subl
add
popf
adc
cmp
subb
movsb
frstor
ret
pushf
adc
dec
jg
lcall
cld
cltd
dec
push
fs
or
mov
loop
out
pop
daa
add
gs
xchg
andl
mov
adc
and
hlt
mov
or
aaa
pop
shrb
xor
js
push
in
add
sbb
js
push
xchg
shr
pop
sub
pop
int3
push
aaa
cld
decl
sub
int3
mov
test
xchg
sub
in
pushf
dec
push
ljmp
pusha
push
push
and
stos
mov
xchg
addr16
stos
push
shll
decl
dec
call
cltd
dec
lods
jle
cwtl
pop
scas
adc
jne
push
std
ljmp
jle
adc
outsl
pop
mov
xor
pop
pusha
ret
sbb
inc
mov
mov
lods
sahf
fs
xchg
in
lock
iret
mov
enter
fisubrs
hlt
fimull
jg
xchg
cmp
add
insb
flds
lock
test
inc
inc
clc
pop
loope
inc
adc
aas
mov
sub
inc
pop
cmp
out
mov
out
xorb
mov
adc
mov
xchg
aaa
pushf
and
cli
decl
shrl
in
adc
scas
outsl
lods
decl
push
or
imul
scas
xor
fmuls
mov
ds
lock
scas
cmp
mov
clc
push
mov
pop
sbb
sbb
xor
incl
xor
cli
int
lock
xor
mov
ljmp
and
adc
rorl
xchg
xchg
dec
xabort
sub
rcrb
incl
or
mov
scas
clc
pusha
xchg
mov
pop
arpl
cmc
mov
cmp
jecxz
call
sbb
repnz
add
mov
lods
jb
les
cwtl
repnz
sub
ja
repz
sbb
bound
push
sub
or
pop
int3
xchg
mov
mov
and
and
xor
aaa
jmp
cmp
icebp
mov
adc
xchg
fisubl
mov
inc
sub
popf
int3
mov
ja
jp
es
pop
pop
lcall
lcall
sub
lods
mov
stos
bound
mov
lcall
scas
scas
fdivrs
cmp
ljmp
scas
in
mov
cmpsw
in
pop
inc
or
and
adc
xor
pop
mov
nop
test
jmp
or
xor
js
mov
push
jl
lods
mov
ret
and
scas
mov
shll
lret
dec
or
mov
adc
mov
xchg
add
in
mov
addl
into
loopne
sti
loopne
mov
incl
push
fsubs
dec
cwtl
scas
mov
xor
orl
push
xor
cmp
mov
dec
xor
mov
iret
mov
add
and
inc
pop
adc
outsl
mov
cmp
pop
mov
cld
imul
bound
sub
jb
push
nop
clc
jmp
or
ja
jae
mov
incl
inc
sbb
int
mov
adc
popa
jl
mov
mov
sub
mov
mov
leave
ljmp
push
pop
push
sub
xchg
and
mov
or
add
mov
repnz
jmp
xor
xchg
adcb
es
cmp
dec
ret
cmp
pop
fsubrs
ljmp
sbb
popf
scas
in
jmp
hlt
xchg
mov
jle
lret
push
das
movsb
pop
fsubrs
xchg
mov
incl
subb
mov
lcall
push
mov
sub
or
push
cmp
in
fst
cmp
int3
cmp
scas
js
inc
pop
add
subl
clc
or
mov
arpl
xchg
cmpsb
mov
incl
cmp
inc
sbb
sub
cmp
mov
out
add
mov
loopne
mov
mov
cltd
stc
inc
or
xchg
ret
pushl
dec
mov
push
inc
ljmp
les
pop
rolb
cmp
imul
fdivr
jmp
inc
cmp
mov
je
xchg
xchg
fwait
xchg
cli
aas
clc
inc
pop
inc
sub
ret
movsb
adc
push
mov
push
and
sar
ljmp
in
popa
mov
inc
sub
dec
lea
inc
cmp
dec
xor
push
lea
jne
adc
pop
ret
movsb
lahf
and
hlt
ljmp
mov
cmp
cwtl
aam
push
imul
jp
or
xor
popf
lock
sub
aad
pop
mov
cltd
hlt
into
es
lret
dec
test
jmp
cwtl
lds
pop
movsl
dec
movsl
sbb
adc
sub
sub
adc
cmpsb
loop
call
das
sub
lret
mov
adc
imul
cmp
or
mov
clc
test
cld
add
jmp
lret
add
cltd
or
out
jmp
lahf
add
pop
xor
aad
jns
pop
mov
xchg
xchg
lock
in
ret
lods
sub
fists
out
push
sbb
call
scas
push
ds
call
xor
aam
sbb
jns
xor
scas
clc
xchg
imul
mov
cmp
subb
pop
ss
xchg
dec
sbb
lcall
sub
ljmp
lea
xor
mov
mov
gs
xchg
mov
adc
jge
xor
movsl
enter
ljmp
dec
cs
mov
int
sbb
or
and
enter
pushl
mov
mov
les
push
imul
dec
data16
xor
outsb
or
call
and
push
sarb
push
sbb
call
sub
xchg
add
ret
lret
mov
mov
gs
out
daa
aaa
pop
loop
call
push
xchg
push
sub
add
or
push
adc
xchg
dec
clc
stos
and
insb
jle
aad
push
pop
lret
jbe
lds
or
pop
out
mov
sahf
dec
sbb
cmp
scas
mov
stc
aam
mov
cmpsb
mov
cmc
test
add
mov
cmp
adc
or
andl
xor
sub
scas
sbb
call
pop
fsubr
adc
movsb
mov
fcmovb
leave
je
pop
jg
orl
push
adc
xor
popf
inc
mov
cs
mov
out
xchg
fninit
and
jb
lea
aaa
xchg
call
mov
mov
mov
mov
mov
jne
pop
dec
stos
xchg
dec
mov
das
dec
arpl
ljmp
imulb
insb
test
sbb
sub
jo
jmp
or
jmp
hlt
adc
inc
and
xchg
add
test
mov
xchg
add
dec
es
or
lods
ljmp
jbe
cmp
and
outsl
arpl
xchg
mov
pop
adc
pop
mov
out
mov
lcall
adc
jns
jge
pop
cwtl
sbb
mov
pushf
sarb
call
jmp
arpl
xchg
lea
inc
int3
sbb
inc
xor
push
mov
dec
or
shll
add
shlb
insl
dec
pop
cli
mov
mov
in
jmp
lret
or
pusha
hlt
ret
sbb
mov
or
ljmp
cli
shlb
jb
lods
arpl
bound
lods
aaa
cmp
mov
movsb
rcrl
testl
jno
aam
neg
pop
icebp
incl
scas
jno
xchg
push
test
imul
mov
int
arpl
scas
and
imul
adc
lret
and
cmc
decl
push
inc
push
sub
lret
dec
push
stos
repnz
adc
gs
jo
das
mov
call
je
test
sbb
dec
movsb
inc
inc
mov
je
xchg
lods
adc
sub
xor
sbb
push
cld
decl
sbb
andb
sub
mov
in
in
aam
inc
stos
sub
mov
push
xchg
xchg
movsb
push
lds
mov
stos
sub
xor
xlat
daa
lods
imulb
pop
sti
loopne
mov
repnz
cli
sti
cmp
inc
pop
add
andb
ljmp
xor
in
das
add
xor
out
jo,pn
inc
or
add
dec
imul
cmp
jmp
jg
aas
mov
mov
adc
push
shrb
jno
inc
iret
rolb
and
sahf
loope
loope
sbb
out
push
xchg
push
ljmp
mov
push
jnp
mov
or
lcall
or
decl
int
insb
dec
mov
xchg
pop
nop
pop
dec
decl
jmp
and
sub
ljmp
cmp
mov
push
dec
pushl
mov
pop
adc
adc
aas
inc
mov
and
xchg
xchg
imul
mov
loope
mov
stos
enter
and
rolb
aad
sbb
loope
push
add
xchg
dec
inc
mov
bound
in
or
mov
mov
and
decl
dec
ret
or
es
stos
and
cwtl
sahf
dec
adc
mov
or
sub
mov
xor
pushl
mov
jns
shll
sub
push
cmp
popa
xor
sbb
or
js
scas
add
mov
cld
mov
xchg
adcb
push
add
add
pop
xor
sub
cwtl
jp
mov
lock
lcall
repz
jecxz
jbe
das
push
add
mov
fdivs
cld
mov
mov
std
push
cltd
lcall
push
or
pop
xchg
nop
lahf
and
push
stos
std
mov
test
inc
xor
mov
and
mov
pushl
cld
lcall
mov
rorl
sbb
mov
xchg
arpl
xor
sub
cltd
shrb
shlb
inc
inc
adc
xor
mov
in
fildll
ja
push
cltd
mov
and
pushl
imul
lods
dec
rcrb
shl
or
pop
cmpsb
loope
leave
rorb
mov
mov
hlt
and
inc
das
js
mov
push
jp
rcrl
pushl
fsubrs
lds
mov
push
xor
adc
dec
sbb
lcall
dec
add
repnz
rcrb
mov
mov
push
add
pusha
bound
fcomip
incl
inc
push
mov
cmpl
test
jbe
aaa
fsub
cmp
stos
pusha
mov
add
add
pop
add
movsb
or
call
adc
mov
scas
cli
filds
clc
adcb
and
imul
inc
ljmp
xor
sbb
lods
stos
fisttps
pusha
dec
sub
shll
fwait
add
sub
add
mov
adc
nop
data16
aas
icebp
dec
mov
xchg
movsb
adc
xchg
inc
and
sub
sub
call
cli
imul
les
repnz
pushf
xchg
lret
and
je
ds
mov
jo
sbbb
adc
push
pushf
incl
pop
inc
test
or
repnz
xchg
enter
xchg
inc
mov
fcomps
sbbl
mov
or
in
mov
xchg
es
inc
mov
fadd
decl
ljmp
sbb
orb
hlt
jmp
xchg
xor
mov
pushl
imul
mov
pop
sub
daa
data16
lahf
pushl
movsb
adc
mov
add
pop
dec
cmpsb
sub
inc
mov
ljmp
test
mov
loop
or
mov
jp
inc
inc
jg
or
lret
in
mov
mov
loopne
dec
in
mov
mov
inc
int
lcall
les
lds
pop
jecxz
ljmp
xor
cmpsb
aam
adc
ljmp
nop
repnz
sbb
shrl
lret
stos
and
pop
popa
cli
mov
clc
mov
cmpl
sub
jbe
mov
cltd
mov
adc
mov
mov
cmp
insb
stos
xor
stos
scas
sbb
call
and
sbb
sub
push
or
cmp
dec
lods
or
inc
sti
xor
js
and
mov
inc
hlt
in
mov
mov
mov
pop
pop
ret
mov
cs
jnp
scas
ror
imul
ret
arpl
decl
adc
call
cmp
mov
jmp
ret
xchg
cltd
add
mov
incl
xor
mov
xorl
stos
shlb
inc
int3
mov
rorb
push
cmpsb
adc
adc
fldl
cmp
add
lea
xor
cmp
or
or
pushl
and
clc
push
mov
push
test
mov
arpl
test
scas
jmp
clc
mov
loop
in
push
or
add
adcl
add
or
push
push
ljmp
and
add
subb
pop
cmp
add
pop
les
xor
ret
cwtl
adcb
jg
cltd
adc
lcall
or
into
sbb
repz
aas
inc
int
fsubrl
cmp
cmpsb
in
or
stc
imul
aam
lds
add
js
ds
cmp
clc
ljmp
cmp
loope
bound
cmp
lret
ja
rcr
add
out
inc
fnstenv
mov
ljmp
sbb
add
or
movsl
fcmovb
lods
push
jns
pusha
fcos
call
icebp
popf
and
mov
mov
or
arpl
fs
in
sbb
call
pop
mov
pop
xor
in
jmp
push
dec
imul
aad
js
comiss
cmc
adc
add
pushf
addb
out
scas
or
jns
das
push
cmp
jg
outsb
dec
sbb
cmp
cmpsb
pop
add
or
xchg
ret
mov
add
clc
outsl
pop
decl
sbb
add
sti
add
cmp
push
push
mov
cwtl
lea
mov
cld
les
mov
jmp
cmp
adc
push
adc
movsb
push
pop
add
mov
stos
nop
pusha
jg
loope
cmpsb
mov
jp
xor
jge
and
cmp
adc
shlb
dec
or
or
pop
jnp
adc
or
xchg
fimull
xchg
sub
xorb
jg
fdivrs
pop
xchg
lds
mov
push
mov
push
lret
ljmp
inc
loope
mov
push
and
sbb
pusha
sub
xchg
dec
add
mov
jl
outsl
cli
incl
dec
test
sub
push
adc
or
nop
ror
xchg
pop
pop
add
rolb
pop
push
test
pop
xor
addr16
mov
xchg
insb
lods
lcall
stos
sbbb
inc
pop
dec
sub
adc
fdivrp
in
call
leave
add
imul
cwtl
xor
popa
enter
jl
hlt
rorb
testl
faddp
sub
cwtl
mov
add
subl
cli
jg
fidivrs
sbb
mov
add
jmp
sarl
in
mov
mov
sub
lcall
and
ret
pop
mov
xchg
insl
mov
mov
mov
cmpl
ljmp
clc
mov
inc
pop
js
ret
clc
shlb
add
jge
ss
sub
sub
in
loope
push
adc
inc
sub
cld
dec
add
ss
sub
push
ret
xor
add
add
pop
cmp
int3
es
ficompl
mov
aaa
sub
xchg
aad
sbb
lcall
pop
sar
pop
sub
call
push
pushf
mov
cmp
and
inc
sete
sahf
out
cld
ljmp
adc
cld
and
push
aaa
pop
xchg
shll
in
cld
mov
xor
inc
pushl
push
cmp
dec
jecxz
aas
es
int3
and
xchg
test
xchg
shll
call
lcall
push
inc
outsb
push
arpl
push
xchg
mov
imul
push
imul
pusha
decl
add
xchg
fs
fwait
inc
lcall
sahf
pushf
xchg
jp
add
adc
into
and
push
pop
ret
jl
ror
jle
push
stos
dec
xor
fadd
movsb
fadd
int
call
shrb
fcompl
cmp
addb
loopne
mov
sbb
xlat
push
andl
sbb
jp
xor
mov
adc
cld
inc
cmp
xchg
cmc
js
push
dec
mov
xchg
inc
pop
loop
push
incl
lock
mov
ud2
pushaw
js
addr16
xchg
adc
or
xor
sarl
inc
or
mov
pop
xchg
rcrb
or
or
cmp
or
sbb
xchg
dec
subb
xor
mov
cmpsb
sbb
in
or
xor
xor
inc
mov
pushf
jmp
lea
push
xlat
pop
dec
push
add
enter
and
enter
adcb
dec
cmpb
pop
push
cwtl
jg
loopne,pt
xchg
pusha
and
aas
stc
adc
mov
loop
mov
sbb
cmp
sbb
movsb
adc
rolb
decl
rcll
jmp
mov
cmp
cld
fsubl
es
push
pop
decl
cwtl
xor
and
lods
pop
push
scas
fwait
xor
call
in
xor
mov
mov
push
push
addb
in
jge
faddl
mov
xchg
pop
xchg
lock
lcall
or
cs
pop
sub
xor
inc
add
xchg
fbld
push
mov
mov
inc
test
clc
call
mov
mov
fldl
hlt
or
fstps
push
insl
testl
sub
dec
sbb
mov
xor
scas
cli
or
outsb
mov
sti
pop
prefetch
sti
push
sbb
cmovle
sub
or
ret
jg
call
mov
mov
outsl
jg
aaa
repnz
loope
aam
pop
xlat
add
and
cli
int
dec
mov
cld
rclb
adc
bswap
add
sbb
sub
inc
outsb
je
add
stos
or
inc
data16
cmpsb
xorl
dec
outsl
aad
movq
cwtl
xchg
mov
mov
fcoms
xor
and
jae
mov
mov
sbb
aad
imul
int
sarl
jb
jecxz
lods
cmpsb
xorb
jmp
or
or
int3
call
repnz
aad
mov
imul
or
push
mov
jne
push
sbb
cmp
cmpsl
push
out
sub
pop
mov
cmp
fldenv
sar
xchg
test
shrb
cmp
fcmovnbe
ret
mov
or
jg
inc
je
aas
je
dec
hlt
mov
or
in
add
addb
push
andb
cmp
mov
xchg
add
das
sbb
dec
inc
and
push
sub
out
add
call
pop
pop
fcmovnb
outsl
nop
jno
add
add
fisttpl
out
push
rolb
adc
or
pop
pop
jne
xchg
dec
cmc
decl
lcall
insb
out
pop
pop
xchg
add
cld
pop
out
outsb
int3
xor
loopne
xor
jg
stos
fidivrl
fcomps
pop
popl
fisubl
clc
pusha
jno
mov
or
jg
movsb
lea
mov
xor
add
lret
out
out
push
inc
nop
icebp
jg
gs
or
ja
cmovbe
lcall
xor
adc
inc
div
pushf
test
push
sar
jmp
int3
dec
push
cmp
or
xlat
mov
and
loop
sbbb
mov
ficomps
inc
lret
ret
push
push
jns
test
inc
cmp
arpl
inc
inc
jp
clc
andb
pushl
bound
adc
test
and
and
lcall
es
cltd
andb
incl
dec
push
sub
hlt
or
sbb
cwtl
inc
add
push
push
lcall
push
cmpsb
push
fwait
sub
lods
pop
jbe
cli
gs
mov
lods
xor
add
decl
aam
arpl
cmp
in
lods
ljmp
xor
pop
shlb
imul
cmp
shlb
orl
pop
repz
dec
push
lock
lcall
jns
inc
test
scas
scas
rorb
out
fidivs
ljmp
cmp
dec
mov
cmp
out
mov
push
out
les
mov
scas
jge
sti
xchg
shlb
cmp
push
xchg
jge
jns
push
mov
push
test
jl
call
jge
and
bound
xchg
pop
ret
pop
or
add
inc
jl
inc
adc
loopne
jbe
mov
cmp
lcall
pop
test
call
xor
push
pop
push
testl
out
test
sbb
inc
xor
fsubrs
ljmp
les
fists
adc
xchg
daa
mov
fidivrs
adc
cwtl
movl
decl
and
and
mov
pop
sub
ja
adc
pop
or
mov
pop
incl
push
mov
fwait
or
test
push
sub
sahf
dec
mov
cmpsl
or
pop
cmc
lahf
or
jp
mov
stc
out
or
and
mov
movsl
xchg
pop
sub
call
sbb
cmp
nop
lcall
dec
xor
and
popa
push
push
dec
cs
xor
stos
adc
cli
subb
pop
inc
adc
pop
movsb
adc
lock
rorb
or
push
shll
inc
int
jg
fs
adc
push
push
push
push
dec
in
push
pusha
jl
push
mov
jge
push
mov
cltd
gs
pop
fs
aad
xchg
sbb
pop
xor
scas
sub
cmpsl
inc
sbb
sbbl
sbb
sbb
pop
sete
pop
gs
adc
movl
mov
or
sbb
cmp
cmpsb
sbb
fnsave
outsl
mov
mov
pushf
fsubl
jne
pushf
leave
push
rclb
pop
sbb
jecxz
add
lcall
cltd
fimull
inc
cmpl
cmp
out
inc
mov
icebp
cltd
cmpsl
add
rolb
fisttps
jmp
jae
cld
lea
adc
push
push
inc
sbb
adc
shl
addl
incl
or
js
push
addl
mov
decl
lock
icebp
push
jmp
loope
outsb
or
icebp
ljmp
fnstenv
dec
dec
arpl
cmp
sub
jbe
push
sbb
xchg
or
in
adc
cmpl
roll
mov
xchg
xor
sub
inc
pushl
push
xchg
dec
cwtd
insl
inc
xchg
ja
in
add
scas
call
sub
jnp
or
sbb
mov
jle
ficoml
mov
adc
dec
sbb
sbb
movsl
add
cmp
mov
cmp
add
sbb
loopne
fdivr
fnstcw
mov
aam
adc
movsb
lahf
ss
fisubrl
adc
fisttps
or
jle
imul
mov
add
cmp
jmp
pop
movsb
aad
push
mov
setl
xor
test
add
jmp
push
push
mov
adc
push
pop
std
decl
and
dec
xchg
pop
dec
inc
adc
add
andb
sbb
jmp
xchg
scas
movsb
icebp
mov
sbb
jns
push
test
mov
sbb
fs
icebp
add
xchg
fwait
sub
sub
incl
sbb
sbb
push
ljmp
xor
cmp
push
pop
data16
jbe
sti
cmpsb
dec
sub
movsb
mov
or
pop
lret
sub
adc
add
icebp
mov
xchg
or
bound
repz
cwtl
mov
hlt
push
insl
or
add
xor
in
les
cs
xor
push
hlt
call
or
or
repz
xorl
decl
push
into
test
jp
adc
es
push
data16
inc
cmpsb
call
push
leave
jne
jp
mov
es
ror
or
xchg
in
mov
and
aam
adc
jmp
mov
jge
addr16
daa
dec
dec
sub
mov
push
in
dec
dec
push
cwtl
incl
daa
jg
or
stos
dec
mov
sbb
and
mov
jne
ds
or
dec
dec
inc
mov
and
xor
ret
movsb
fdivr
push
xorl
cli
pushl
adc
push
or
je
imul
clc
lcall
pop
add
mov
test
int3
xchg
bound
or
or
or
xor
gs
adc
shr
dec
lret
jg
fisubs
cmp
xchg
mov
mov
nop
xchg
pushl
enter
out
mov
mov
fisttpl
adc
pushl
xorl
shll
jecxz
pop
mov
fdivrs
cltd
lea
pop
or
std
jmp
fstps
jmp
add
loopne
or
in
hlt
jg
insb
push
pop
shlb
xor
push
out
lcall
push
mov
scas
and
inc
rolb
imul
xor
incl
xchg
adc
mov
adc
push
dec
and
dec
push
and
decl
mov
mov
stos
sarl
sbb
push
push
es
add
xor
dec
lods
xchg
data16
xchg
popf
and
ljmp
adc
fdivrp
mov
movsb
shrb
in
scas
popf
jo
xchg
cmp
imul
mov
sub
xchg
xchg
push
sub
adcb
fwait
mov
leave
inc
pop
cmp
fldcw
inc
in
imull
les
jle
push
std
stc
add
lret
mov
jmp
xlat
cmp
add
push
jg
ljmp
xor
pushf
mov
and
call
mov
cmp
inc
or
add
xchg
das
movsb
cli
and
outsl
jp
ljmp
shll
jo
decl
push
push
push
mov
or
cs
mov
lock
je
hlt
ljmp
inc
mov
imul
push
adc
int3
xor
sbb
add
mov
and
pop
inc
out
cli
clc
hlt
jge
adc
xor
in
into
loope
xor
loope
xchg
fs
lcall
sub
jp
add
test
pop
mov
cwtl
and
inc
ds
inc
ljmp
xchg
fdivr
jo
cmp
roll
jl
mov
xchg
ret
push
sbb
cs
bound
cwtl
in
cmp
xor
xor
mov
and
mov
test
or
mov
pop
mov
lcall
push
jg
fwait
iret
adcl
inc
xchg
cmp
nop
add
sub
xchg
adcb
mov
jle
ljmp
xchg
ss
mov
mov
sub
push
pusha
leave
sub
sub
lret
incl
xchg
jo
jle
adc
arpl
nop
sub
mov
dec
popf
test
jno
xor
scas
insl
ret
pop
lock
jmp
rorb
lcall
clc
imul
sbb
add
cmp
imul
push
xor
xchg
ret
inc
add
jg
inc
or
test
sbb
hlt
lods
jns
int
lret
mov
sub
hlt
hlt
aaa
add
pop
out
jl
mov
fnstsw
push
lahf
in
adc
jbe
sbb
in
mov
loopne
pop
call
mov
je
movsb
fsts
movsb
or
icebp
sub
ja
decl
and
jns
inc
mov
push
movsb
and
decl
aam
idivb
mov
mov
mov
sbb
jmp
call
int3
cltd
daa
pop
jp
xchg
adc
fdivrl
ret
and
jbe
xor
in
call
popf
add
fucom
jne
mov
mov
decl
out
dec
pop
mov
fnstcw
ds
ret
ljmp
inc
iret
notl
push
xchg
test
pop
xchg
lret
inc
mov
enter
sbbb
sahf
add
incl
test
ror
test
mov
int
adc
inc
push
push
push
push
mov
jmp
pushf
lret
mov
push
mov
pusha
pop
addb
popa
js
test
inc
xor
inc
pop
in
lcall
sub
xchg
adc
rcll
xchg
cmp
xchg
fldl
jno
xchg
jmp
push
rcll
pop
jge
lds
fwait
lds
pop
aad
pop
xchg
mov
pop
int
hlt
add
push
cwtl
sbb
inc
or
lcall
mov
sbb
in
dec
jbe
pop
mov
xchg
scas
cmpsb
mov
push
dec
or
push
xor
call
mov
ljmp
lcall
push
mov
pop
aam
rcrl
dec
inc
push
xchg
mov
dec
imul
or
lcall
rcll
mov
hlt
loop
adc
jo
mov
sarb
ror
mov
call
xchg
int3
push
xchg
cwtl
inc
mov
addr16
adc
pop
mov
fprem
cli
adc
mov
lahf
ss
std
int
test
cmp
pop
inc
or
push
mov
insl
mov
lock
mov
jns
hlt
or
pop
cmp
inc
dec
cwtl
add
ljmp
mov
or
inc
in
mov
cmovnp
add
or
inc
add
lret
test
add
test
xchg
or
pushf
mov
mov
jmp
insl
mov
push
sbb
call
jbe
sbb
or
dec
fldenv
pushl
sahf
in
aam
popa
aad
and
xchg
insb
pop
loope
add
incl
addb
inc
adc
push
add
int
insl
mov
mov
push
push
in
lret
dec
or
loope
in
aad
and
pop
leave
dec
mov
adc
incl
pop
loope
pop
pop
pop
movsl
dec
push
loop
sbb
push
or
sbb
incl
xlat
les
add
xchg
and
xchg
ror
adc
cld
mov
mov
mov
cmp
loop
add
pop
cwtl
pushf
jns
int
cld
mov
repnz
push
into
sbb
ja
shlb
test
in
rcr
pusha
inc
sbb
jge
sahf
push
insb
popa
jecxz
cwtl
xchg
dec
xor
mov
jns
sar
dec
mov
jl
mov
jmp
jnp
push
pushf
call
ret
adc
sbbl
and
lcall
clc
lcall
inc
adc
stos
test
std
mov
pop
fdivr
adc
data16
sahf
les
pop
shl
inc
mov
mov
add
or
clc
ljmp
xor
cmpsb
cwtl
add
popl
adc
push
into
aad
or
fs
mov
dec
lea
push
setbe
test
dec
jle
imul
rorl
aam
push
mov
mov
cmp
dec
sahf
pop
and
add
pop
push
lea
adc
call
sahf
fldl
insl
lock
sbb
push
push
push
pop
jp
incl
scas
shl
mov
lret
xor
jbe
test
inc
insb
pop
sub
sbb
ficomps
push
jnp
mov
call
pop
cmpsb
ljmp
in
lcall
or
out
or
lods
ret
xchg
rorb
and
inc
xor
repz
rcrb
or
clc
mov
and
pop
mov
cbtw
mov
cmp
fidivl
push
lea
inc
mov
or
push
sbb
add
pop
sar
cmc
std
fwait
mov
dec
or
jnp
push
outsl
sbbb
cwtl
inc
xchg
out
and
add
rcll
add
dec
cmp
in
lahf
aaa
cmc
mov
or
jg
or
orl
jp
ds
lret
aam
dec
fdivrs
mov
inc
lods
iret
inc
lods
daa
mov
inc
dec
inc
cwtl
inc
clc
ljmp
cli
int
jmp
or
movsb
test
lea
or
dec
jns
inc
push
ret
jp
filds
dec
jmp
mov
rorb
sub
push
push
call
pop
mov
cltd
sbb
hlt
hlt
or
dec
out
arpl
fstpt
call
ret
sbb
xchg
cwtl
addl
in
mov
mov
sbb
rcrb
adc
push
cli
pop
mov
sbb
je
decl
sub
cli
lods
ficompl
jmp
mov
xchg
add
cli
adc
in
in
inc
sbb
pop
push
popa
pop
decl
in
pop
push
add
loopne
adc
mov
subb
call
pop
stos
mov
lock
mov
cmp
pop
mov
jecxz
cld
stos
dec
jecxz
sub
and
cltd
inc
insb
jg
or
movsb
push
pop
vunpcklpd
push
and
lea
outsl
clc
jmp
push
sub
pusha
cltd
inc
xor
jo
mov
push
insb
push
addr16
call
lock
sti
and
scas
pop
mov
pusha
mov
mov
cs
clc
xchg
pushl
daa
inc
dec
mov
insl
inc
ljmp
jl
adc
out
test
sbb
lock
mov
xor
mov
fmul
dec
lret
dec
stc
imul
test
inc
ret
mulb
addl
lcall
pop
or
xor
add
sbb
push
add
scas
add
leave
pop
loope
mov
fnsave
aad
mov
gs
sar
cwtl
adc
popf
lds
mov
enter
dec
fsubrs
rcll
cmp
and
pop
cli
sub
pushl
cld
into
inc
test
gs
xchg
mov
decl
call
xchg
pop
push
pop
mov
aad
ficoml
and
inc
pop
in
sub
sub
addl
std
sub
lahf
loop
test
inc
fidivs
test
loop
add
ret
fnstsw
rclb
xor
fldt
sub
int3
mov
dec
or
fisubrl
or
cmp
inc
incl
scas
sbb
sti
jns
jl
stos
jno
xchg
cmp
ljmp
test
fcomip
es
dec
cli
shr
loopne
popf
mov
cli
cld
out
sti
mov
mov
push
jns
cwtl
dec
lcall
mov
mov
loop
jg
out
call
cmc
stos
or
dec
sub
mov
call
mov
insl
adc
sbb
adc
ljmp
inc
lods
popa
fadd
push
repnz
jbe
add
lcall
or
adc
and
sbb
xchg
add
mov
jmp
or
pop
stc
xchg
sub
or
test
dec
mov
and
sbb
inc
pusha
adc
add
lcall
mov
or
cmp
rol
dec
xchg
sub
ficoms
lcall
pusha
cmpsb
stos
sub
jns
insl
adc
or
adc
pop
push
push
movsb
incl
enter
sbb
fldcw
fisttps
stos
lods
inc
adc
lods
mov
and
cld
call
cmp
mov
sahf
xor
adc
in
insb
ss
push
xchg
sbb
lods
sbb
fmuls
fsubs
ja
imul
cmp
in
adc
ljmp
jb
mov
xchg
jb
adc
cmp
push
ss
hlt
fs
mov
ljmp
mov
test
add
stos
mov
jb
fs
inc
test
jnp
aam
iret
incl
cld
fsubrl
add
cmp
mov
enter
add
daa
call
adc
pop
pushf
or
das
xlat
mov
sub
pop
nop
dec
ss
or
fisttps
in
pushl
pop
push
es
inc
sbb
or
lret
cmp
xchg
inc
ficoml
adc
push
test
pusha
dec
addl
mov
or
outsb
mov
mov
imul
lcall
out
mov
pop
test
jno
je
imul
dec
jnp
cmp
stc
push
aad
inc
dec
inc
inc
ljmp
push
adc
pop
movb
dec
xchg
lcall
mov
jl
xor
inc
sahf
shrl
lea
cmp
icebp
inc
lcall
pushf
dec
fwait
loopne
lock
push
hlt
rcrb
adc
adc
add
sub
jns
and
push
imul
cmpl
imul
sbb
and
sub
cmp
push
popf
call
jbe
mov
idiv
mov
adc
add
lds
xchg
lock
dec
push
test
inc
mov
test
ljmp
pushf
fwait
sbb
xchg
mov
xchg
mov
mov
nop
push
aam
cld
inc
mov
adc
sub
or
sbb
xor
imul
dec
ljmp
push
rcll
mov
fmuls
or
or
popa
pop
cli
lcall
lds
icebp
outsl
std
xchg
fstps
adc
sub
sub
or
mov
jle
adc
mov
jno
scas
mov
fcmovu
mov
fcomi
sbb
jmp
jle
or
jmp
mov
in
fdivs
adc
sar
jg
jmp
sbb
mov
pop
inc
xor
lea
loope
loop
fsubrs
sar
jo
incl
je
or
bound
faddl
xchg
add
jb
shl
rolb
hlt
sbb
push
rol
fistps
addl
add
pop
mov
mov
pop
not
and
fidivrs
pop
lea
call
addl
pop
faddl
adc
sbb
adc
out
push
out
cld
sub
or
adc
outsl
clc
incl
mov
add
jns
dec
pusha
pushf
cmpsl
out
push
or
es
clc
out
into
daa
inc
out
test
scas
mov
ja
call
inc
push
xchg
testb
aad
and
lret
scas
mov
rclb
dec
ljmp
shlb
repz
mov
sbb
inc
pop
xor
push
pushl
cli
decl
push
or
movsl
fcmovb
pop
orb
inc
cmp
adc
cmp
add
mov
xor
enter
cmp
pusha
or
xor
mov
xor
pop
std
call
or
mov
insl
jg
xor
or
jnp
inc
fistl
and
js
rorb
fs
cld
aad
dec
and
out
mov
xchg
lea
rorl
push
movsb
push
sbb
les
mov
adc
cld
dec
dec
paddsb
pop
imul
jl
push
mov
xchg
pop
sbb
xchg
fs
xor
sub
leave
xchg
es
adc
sbb
push
xchg
sub
mov
ljmp
into
sbb
in
mov
cmp
mov
rorl
push
fdivp
dec
scas
add
adc
into
cwtl
pop
sahf
lods
mov
decl
je
sbb
popf
sbb
push
out
and
jo
jo
inc
aam
mov
popa
movb
xchg
push
in
pop
inc
xadd
xlat
mov
add
call
jecxz
popf
jp
imul
jmp
xchg
mov
call
outsb
jecxz
xchg
pop
pop
jb
lret
xchg
jns
mov
fdivs
iret
lahf
getsec
loopne
pop
lret
push
aam
dec
dec
sbb
mov
loop
incl
popf
mov
adc
sub
push
inc
cwtl
cmp
cmc
mov
sahf
cmp
mov
dec
ds
or
stos
push
mov
pop
inc
add
cld
or
xchg
push
lock
cmp
pop
mov
cli
inc
movsb
hlt
jno
jge
cmc
fxam
jae
mov
cmp
cmp
aaa
std
call
stc
loop
mov
das
dec
mov
push
int3
dec
ret
mov
dec
and
inc
add
inc
or
inc
stos
clc
pushl
add
inc
loopne
mov
add
and
icebp
or
das
ret
or
add
icebp
ljmp
xor
sub
vmovsd
popf
push
lcall
ficoms
xor
daa
shll
orl
ret
aaa
aaa
mov
dec
addl
sub
jmp
xor
and
bound
inc
and
aas
arpl
lock
dec
imul
or
decl
dec
mov
jb
mov
adc
ljmp
fisttps
cmp
movsl
and
push
cwtl
push
jbe
lret
add
push
lcall
daa
movsb
push
sbb
stos
scas
mov
mov
sub
mov
das
mov
mov
sub
inc
lock
stos
cli
fiaddl
stos
arpl
mov
mov
int3
scas
mov
lcall
call
pop
shrl
insb
mov
inc
shll
jns
imul
lock
arpl
sub
ss
jb
loope
and
test
adc
mov
dec
clc
addl
cmp
incl
cmp
xchg
addb
fnstcw
out
mov
push
cmp
cmp
in
xchg
outsl
ds
pop
test
idivb
pop
mov
lcall
push
addl
dec
shlb
pop
xor
or
or
inc
ss
shrl
add
clc
decl
jnp
xorl
insb
sbb
fcomip
fcomip
dec
pop
bound
fcmovnb
es
insb
ss
sub
incl
add
imul
or
cmp
jl
shlb
xchg
pop
test
stos
dec
loop
and
add
and
adc
and
lret
and
loope
incl
arpl
mov
lods
mov
xor
or
push
adc
jb
mov
xor
cltd
pop
cmc
mov
fsubp
jmp
push
pushf
push
mov
jl
leave
jnp
imul
ljmp
fdivl
cmc
mov
mov
stos
aas
ljmp
sti
out
pop
iret
sarb
sbb
push
pop
pop
scas
les
call
add
lcall
or
les
xor
ds
add
mov
insl
mov
xorl
sbb
inc
sbb
add
mov
mov
ret
decl
pop
sbb
xchg
fadds
or
or
mov
orb
or
mov
adc
out
xchg
testb
adc
movsb
pushl
nop
dec
cld
popa
inc
jae
fcoml
sub
adc
sbb
movsb
ss
xor
cmp
sub
xchg
movsb
adcl
mov
mov
xchg
ljmp
mov
mov
icebp
cmp
and
mov
repnz
dec
nop
test
and
jno
decl
mov
dec
mov
sub
dec
mov
jo
sbb
daa
dec
dec
adc
and
push
subb
pop
cmp
aad
sahf
dec
insb
xchg
stos
testb
fisttps
inc
xchg
bnd
daa
rol
jmp
push
push
stos
jb
jb
mov
fwait
or
mov
jg
mov
sbb
mov
cmpsb
pop
push
xchg
lret
lcall
incl
or
pop
or
mov
lret
sbb
decl
lea
ss
insb
fadd
shlb
push
mov
mov
decl
push
jb
nop
inc
xchg
push
out
lcall
lcall
incl
and
push
adc
dec
pop
sub
lods
push
mov
shlb
nop
dec
rolb
xchg
mov
xchg
rclb
pop
mov
stos
push
push
push
xlat
sub
xor
sbb
mov
inc
xor
outsl
push
loop
icebp
stos
test
add
dec
insl
sub
in
aam
fcom
pop
xchg
scas
and
orl
push
sub
mov
push
repnz
push
mov
mov
mov
cmp
lret
cmp
push
add
pop
lods
nop
stc
mov
inc
add
mov
sub
mov
add
dec
mov
mov
std
pushl
push
stc
push
pop
out
add
add
lods
sub
xor
call
in
or
mov
aas
jae
jle
xor
aam
and
nop
push
outsb
stos
nop
repnz
int3
fdivrl
dec
dec
xchg
mov
lcall
into
pop
mov
movsl
outsl
jne
adc
cmp
pop
dec
xchg
test
popf
or
imul
pushl
push
in
add
cld
rorb
xor
test
stos
mov
sbb
call
lcall
pop
movsb
adc
decl
and
in
cmp
cmp
mov
rcr
mov
repnz
sbb
xchg
sar
jg
ljmp
mov
mov
push
popl
cmp
call
movsb
jmp
test
das
jmp
sub
pushl
lret
mov
dec
or
mov
popf
sbb
push
sti
mov
fnstenv
add
lahf
leave
imul
mov
andb
jg
cmp
mov
jmp
popf
add
shll
cli
mov
decl
sbb
mov
ljmp
xchg
lods
std
mov
or
fsubrl
jns
mov
mov
js
cmp
xchg
mov
loope
cmpb
add
push
dec
incl
mov
jmp
pushf
add
adc
add
and
push
gs
mov
push
push
scas
inc
adc
lcall
sub
xor
dec
xor
iret
test
pop
ret
imul
aaa
incl
xchg
filds
mov
imul
adc
iret
mov
mov
lcall
enter
les
pop
lret
dec
cmp
repz
ret
popf
and
ljmp
inc
leave
leave
lods
mov
jmp
iret
repnz
movsl
lods
mov
ljmp
xchg
je
test
data16
cld
or
pop
stos
lods
jae
leave
jge
arpl
mov
jmp
adc
xlat
mov
pushf
dec
roll
sbb
mov
add
pushl
mov
scas
outsb
ret
movb
jbe
popa
scas
mov
call
fcmovb
inc
mov
sbb
cmp
jg
mov
pushl
cmp
push
jmp
incl
shrb
xor
cld
inc
out
pop
mov
test
pushl
sahf
clc
xchg
fisttps
mov
aad
mov
popf
insb
adcb
pop
jmp
icebp
loop
mov
out
loopne
dec
push
jp
loop
ds
sub
add
dec
fisttps
pop
fs
sbb
ret
push
push
pushl
ds
mov
gs
push
or
mov
jl
adc
xchg
jmp
outsb
in
push
cli
xchg
imul
hlt
daa
pushf
int3
dec
roll
shll
movsl
mov
mov
stos
cld
jg
mov
add
pop
add
add
rorl
cli
add
imul
mov
icebp
jg
mov
outsb
in
push
jo
push
cmpsb
mov
and
mov
rclb
bound
adc
jmp
arpl
out
add
push
pusha
or
adc
decl
sahf
mov
test
repnz
repz
rcll
icebp
sub
sbb
push
mov
sub
pop
adc
lods
jo
cwtl
dec
cli
clc
or
es
ljmp
sub
int3
cmc
fimuls
lock
dec
scas
hlt
in
dec
lret
push
lock
lods
test
dec
hlt
inc
in
cwtl
out
cli
xchg
dec
stc
outsb
cmp
enter
ljmp
inc
xor
psrad
mov
jbe
or
inc
cmp
mov
jl
adc
adcb
cwtl
fsubrl
jbe
cltd
outsb
sub
unpckhps
jmp
loop
push
imul
loop
out
int3
into
pusha
imul
mov
ret
or
ljmp
mov
sbb
or
setle
xchg
rcrl
cwtl
push
incl
mov
sbb
mov
sbb
icebp
gs
data16
leave
adc
xchg
insl
jnp
andl
jno
icebp
sub
jno
xchg
mov
and
orb
mov
scas
pminsw
pusha
call
jl
xlat
orb
sbb
ret
add
inc
cmp
dec
mov
and
arpl
mov
incl
xor
jl
fsqrt
loopne
cmp
cmp
insb
fdivp
push
cli
sub
es
mov
and
sub
insb
data16
or
rdmsr
icebp
pop
hlt
call
lods
mov
test
jecxz
dec
or
pusha
jo
loope
scas
cli
mov
and
ret
mov
shlb
xor
inc
sub
sti
inc
gs
out
adc
pusha
cld
int3
dec
adc
outsb
push
dec
jno
aam
int3
inc
stos
jp
imul
and
pop
jg
rolb
shlb
push
sarl
sbb
adc
cld
jmp
xor
xor
xchg
xor
xor
daa
push
xor
repz
mov
dec
push
xor
dec
adc
jmp
xor
icebp
ss
add
fisubrl
bound
xor
or
xchg
incl
jne
aas
test
ds
add
andb
fimull
les
outsl
ds
call
call
js
test
push
ds
or
es
movsb
mov
mov
stos
mov
iret
or
inc
xor
in
pushl
add
test
cmpsl
or
ret
or
fdivrl
fildll
xor
incl
inc
leave
push
add
and
gs
insb
lea
xchg
mov
sub
popa
ljmp
sub
xchg
push
push
cld
ljmp
inc
dec
mov
addb
pop
rcll
cmpsl
and
fwait
mulb
call
adc
add
in
lea
dec
lock
dec
and
mov
inc
jae
sub
push
adc
rorl
xor
ret
push
xor
decl
xor
xchg
dec
fistl
hlt
dec
push
loope
dec
sub
adc
jb
jecxz
jmp
push
mov
sbb
xchg
cmp
decl
mov
fiadds
in
and
lahf
add
or
rcrb
lcall
pop
dec
mov
fsub
test
pop
addr16
filds
adc
shl
movsb
lss
rorb
mov
cli
ret
sub
sub
inc
lret
ljmp
ret
fisubrs
mov
adc
incl
mov
add
pop
jmp
scas
das
inc
and
fisubl
jb
inc
scas
inc
sti
ljmp
out
inc
iret
lods
cs
adc
adc
loop
test
jmp
add
push
sub
and
xor
xor
fbld
sbb
aam
cmp
pusha
mov
dec
mov
ljmp
dec
xor
fists
xchg
xor
xchg
ljmp
ss
xor
push
pop
jp
bound
and
fcmovne
mov
push
rol
sbb
xor
incl
sub
js
push
movsl
andb
sbb
ret
and
and
xor
ljmp
jmp
and
dec
test
loopne
jp
push
hlt
pop
call
in
hlt
test
aam
decl
mov
insl
adc
aad
stos
pop
scas
fst
or
call
xchg
push
fbld
inc
xchg
push
cld
pushl
mov
xchg
insb
xchg
dec
and
xchg
loopne
mov
mov
hlt
add
fwait
dec
ljmp
mov
jne
xchg
out
push
adc
mov
int3
shrb
mov
push
out
daa
pusha
out
push
mov
fwait
mov
popf
cld
ljmp
mov
dec
sti
mov
cli
aad
inc
adc
add
push
jae
imul
pop
push
add
add
ja
outsl
pop
jbe
divl
divl
lea
add
mull
mov
inc
or
xchg
or
ss
fisubl
xchg
rclb
add
sub
mov
push
and
sub
mov
pop
cmpsb
addr16
cmpsl
mov
or
and
insb
outsb
aam
sub
push
fsub
pop
imul
ds
enter
push
mov
stos
daa
repz
dec
mov
sub
lods
fimull
into
or
imul
outsb
mov
aad
sbb
cmc
cld
das
sar
add
push
jg
lret
es
adc
push
cs
aaa
cmp
adcb
mov
int3
and
repnz
hlt
and
adc
and
call
pop
fnstenv
dec
or
jp
pop
loope
out
sbbb
jg
or
pop
call
pop
mov
cli
xor
ret
and
jb
or
rorb
ljmp
mov
mov
adc
inc
mov
jo
mov
mov
ret
notb
add
xor
cwtl
mov
js
cmpsl
adc
cmp
cwtl
mov
mov
clc
mov
pop
xor
js
das
xchg
jbe
arpl
decl
dec
jmp
add
inc
xchg
dec
inc
jbe
sbb
mov
mov
lea
std
cmpsb
push
decl
aad
fwait
xor
xor
call
idivb
add
shlb
mov
scas
or
popa
push
outsb
mov
fcomip
decl
scas
and
pop
inc
test
pop
jmp
jg
and
xchg
mov
clc
xlat
std
ljmp
mov
sbb
sub
sub
insb
mov
sub
aaa
enter
adc
pop
xchg
cwtl
dec
sub
outsl
cmp
imul
decl
jns
pushl
inc
dec
loop
cli
lret
ret
jb
mov
jb
cmp
mov
push
mov
ret
aam
shl
jge
test
mov
fiadds
xchg
rclb
push
xlat
dec
andb
mov
mov
add
sar
or
jg
in
aaa
xchg
sbb
sbb
arpl
mov
mov
lcall
aas
sbb
cmp
clc
ss
jmp
fimull
scas
call
xor
add
bound
push
fs
imul
movb
rorl
mov
jmp
hlt
out
xlat
testb
arpl
rolb
and
rcll
mov
fs
loop
scas
in
add
or
push
mov
cmp
mov
pushl
mov
dec
xor
add
es
jle
cltd
int
cli
add
add
rorl
fdivrl
sub
xchg
btc
into
xor
cmp
mov
ljmp
sbb
mov
popf
aas
mov
add
adc
dec
pop
xor
dec
fsubrs
shrb
js
push
xlat
push
fisubrs
call
sbb
or
dec
in
fwait
push
int
subb
aad
mov
incl
aad
push
les
or
sti
mov
jnp
fdivrp
mov
mov
pop
mov
adc
pop
imul
add
dec
push
cld
sti
mov
mov
popf
and
pushf
loopne
testb
and
or
pusha
or
ret
add
or
adc
ret
push
or
pop
ja
mov
xor
jbe
mov
into
test
cmpsb
cmp
scas
out
push
gs
cmc
call
mov
repz
nop
bnd
fnstcw
and
imulb
leave
cltd
pushf
leave
cpuid
push
leave
jg
bound
jge
loope
shl
pop
mov
je
outsl
imul
loopne
fistl
mov
bound
fs
test
or
popf
fldcw
incl
ljmp
lcall
mov
jo
dec
fwait
loope
mov
xor
cmp
shl
inc
call
xchg
scas
xor
add
adc
leave
mov
out
cmp
pop
lahf
std
cltd
ljmp
or
scas
addr16
push
mov
mov
mov
mov
xlat
sub
call
mov
mov
inc
or
xchg
lock
pusha
or
add
popf
xlat
mov
std
xor
cld
or
fisttpll
mov
std
outsl
outsl
xchg
xchg
sbb
mov
fst
jnp
push
test
fisubrl
push
scas
or
adc
loopne
aaa
fadd
jns
ret
aaa
pushf
pop
enter
pusha
cld
fsubl
push
fst
or
lcall
loope
mov
inc
sbb
mov
decl
rorl
cli
aad
jecxz
xor
test
jb
repz
mov
xchg
hlt
orb
cmpsb
lock
loopne
mov
enter
jnp
fists
inc
sahf
mov
cmp
push
mov
es
sub
lock
movsl
pop
sbb
and
cld
decl
imull
in
push
dec
adc
fbstp
push
ss
sbb
int3
ja
dec
es
xchg
add
fldt
out
pushf
add
insl
nop
mov
xchg
stos
sbb
xchg
jns
pop
mov
decl
mov
cmc
and
int
lret
mov
xchg
out
and
mov
call
or
loope
xor
fst
jge
or
lcall
aas
sbb
mov
mov
out
sub
insb
aam
dec
add
andb
add
mov
mov
popa
add
pop
sbb
orl
incl
cmp
push
jg
lahf
sbb
popf
nop
filds
fdiv
cmp
int
idivl
div
jecxz
outsl
mov
pop
cmp
jo
xchg
clc
xchg
aas
stc
jge
mov
icebp
test
cmp
adc
and
fsts
jmp
test
inc
jg
push
or
cmp
or
lods
in
mov
inc
lods
movsl
pushf
sarb
dec
jns
incb
test
in
mov
push
cmp
incl
and
nopl
shr
sub
mov
nop
scas
decl
xchg
mov
cmp
mov
mov
mov
xchg
orl
xchg
jae
xor
mov
xchg
cld
jg
cwtl
xor
sub
mov
xchg
and
cmp
xchg
jmp
sahf
fs
xchg
decl
cmc
movsl
inc
lods
sbb
test
shl
int3
xchg
cmp
int
xchg
and
ljmp
dec
rcrl
push
mov
fldt
jecxz
movsl
xor
inc
sub
in
in
jecxz
lea
dec
push
dec
cmp
xor
das
lods
stc
or
lds
addr16
cmp
and
das
clc
xor
cmp
mov
stos
pop
cmpsl
incl
inc
mov
ret
outsl
push
xor
test
add
jle
mov
jns
faddp
xchg
xor
fcoml
add
dec
inc
cltd
notl
incl
sbb
xor
bound
inc
hlt
lret
xor
mov
sub
mov
mov
rcrb
cli
loope
pop
sbb
mov
push
and
or
push
mov
sbb
and
xor
inc
mov
fadds
sub
inc
ds
ljmp
lea
das
xchg
push
mov
out
clc
orb
test
ficoms
incl
popf
test
xchg
push
sbb
cld
cmpl
adc
sbb
pop
xor
cld
xor
je
pushl
push
inc
bound
inc
es
outsb
mov
lret
add
push
mov
mov
sbb
call
sub
mov
rolb
leave
xchg
and
push
mov
push
pusha
dec
jne
adc
push
dec
push
sbb
pushl
jmp
in
fs
sub
ljmp
xchg
lods
dec
jne
adc
xchg
push
sbb
ret
pop
jne
lcall
leavew
les
cs
xchg
xchg
adc
ss
jmp
ds
mov
inc
movsl
adc
jbe
test
mov
arpl
xchg
pop
fldenv
mov
ja
push
sbb
lods
lock
pop
insl
push
push
fwait
outsb
aaa
std
in
mov
cld
mov
jb
sub
sbb
incb
popf
outsl
pop
hlt
fimull
lods
rolb
test
sub
inc
add
or
cltd
fmuls
add
decl
lock
sbb
jle
scas
mov
roll
cld
mov
int3
test
lea
sbb
bound
mov
pop
push
dec
in
loop
xlat
les
pop
mov
and
ljmp
ret
nop
insl
ret
dec
adcb
push
imul
mov
rorb
or
cmp
push
out
arpl
push
rcrb
fwait
ret
add
jecxz
ds
push
mov
sahf
aad
ljmp
rcrl
hlt
roll
ljmp
and
sbb
sahf
mov
mov
inc
test
dec
jmp
push
xor
ljmp
add
xor
jmp
std
jmp
mov
push
fs
sub
pop
lods
add
pop
sub
ret
std
mov
ljmp
aad
sbb
pop
das
mov
das
mov
scas
pop
jmp
mov
ljmp
loop
push
lods
inc
xor
or
push
add
jle
nop
jg
pusha
push
add
mov
jg
mov
cmp
dec
dec
movsb
push
xor
xor
popa
sbb
adc
add
sub
cli
outsl
dec
in
iret
sbb
lock
mov
lret
pushl
sub
pop
cmpsl
test
add
insl
mov
adc
inc
les
sub
sti
jmp
sub
add
xor
sub
das
cli
call
push
mov
xchg
adc
or
add
pop
addb
cltd
pushl
imul
rcl
mov
int
lret
popl
int
push
mov
adc
lcall
fiadds
xor
icebp
push
cmp
rorb
decl
jmp
shll
addr16
or
xor
jecxz
loopne
cs
mov
lea
icebp
mov
mov
icebp
xchg
jb
ljmp
xchg
in
adcl
cs
xorb
dec
stc
mov
and
jo
pop
out
xchg
ljmp
outsb
cmp
pop
cmp
cltd
ljmp
subb
cmp
push
mov
ds
xchg
xchg
decl
mov
test
push
pop
mov
jne
insl
int
cltd
adc
push
enter
fdivr
add
cmc
in
pop
add
sub
jns
pop
cld
insb
int
rcrl
pop
imul
aaa
fldt
add
adcl
cwtl
orb
ljmp
ret
and
insl
in
dec
or
ret
aaa
dec
jbe
repnz
sbb
ljmp
orl
inc
pop
cmp
mov
enter
popa
adc
push
mov
adc
call
lret
pop
push
mov
pop
mov
loop
mov
mov
pop
inc
inc
or
decb
incl
jecxz
arpl
sbb
js
mov
ret
sbb
or
sbb
and
pop
test
decl
arpl
mov
mov
lret
imul
push
sbb
call
data16
push
test
dec
push
movsb
jno
xchg
add
sub
add
incl
xor
push
scas
and
and
test
mov
sahf
sub
ljmp
jb
push
push
xchg
mov
mov
insl
pop
aad
movsb
cmp
jns
cmc
out
push
lret
cmpsl
push
xchg
data16
fucom
inc
into
bound
arpl
mov
cld
ljmp
mov
push
jbe
es
out
repnz
mov
dec
in
cmpsb
lock
fcmovnu
fs
cmp
ja
xor
ret
sbb
xor
pushl
or
call
popa
adc
pusha
shrl
mov
pop
rorl
ss
dec
inc
inc
or
mov
sbb
aam
mov
push
cmp
decl
xchg
sbb
xor
and
jp
mov
lcall
aas
or
push
rcrb
xor
inc
push
imul
mov
lock
ljmp
jns
pusha
in
or
pusha
and
inc
sbb
adc
mov
add
incl
adc
jmp
rolb
daa
fldl
movsl
add
fsubrs
fcoml
sub
dec
mov
adc
mov
test
and
fwait
cmpsb
pop
lods
pusha
leave
je
sub
pop
or
add
pusha
add
inc
pop
cmp
mov
pop
call
sub
mov
hlt
idivb
and
dec
mov
lcall
inc
jge
cwtl
add
and
dec
testl
lcall
xchg
xor
mov
pop
aad
adc
mov
clc
les
enter
dec
pop
jmp
push
cmp
repnz
sbb
inc
les
andb
fwait
add
loopne
sub
orl
jbe
jl
push
pushl
js
js
loop
into
or
data16
movsl
pop
sbb
inc
jns
jo
push
sbb
clc
cmpsl
cwtl
test
fadds
das
mov
sbb
ljmp
incl
int
call
inc
pop
cltd
add
roll
cs
push
outsl
add
fistpl
xchg
nop
lods
data16
and
add
xchg
icebp
push
jg
shlb
mov
sub
or
push
cltd
xchg
cmp
inc
sar
cmpsb
and
jle
fsubl
xchg
outsb
dec
shl
mov
adc
pop
or
bound
test
mov
push
mov
cld
pushl
pop
cmpb
adc
je
mov
movsl
mov
icebp
ljmp
adc
cs
ss
fisubrl
dec
mov
push
jne
out
add
xchg
hlt
sti
sub
mov
aad
xor
outsl
xor
mov
addr16
pop
cs
and
cld
push
mov
add
jl
daa
movsb
or
sub
idivb
scas
cmp
mov
ljmp
sub
or
or
sbb
push
data16
das
inc
pop
jecxz
jecxz
fisttps
sbb
dec
arpl
js
test
int3
mov
cli
inc
ljmp
fiaddl
dec
mov
xchg
mov
call
jo
sub
push
hlt
mov
cmp
loope
sub
inc
xchg
loop,pt
ffreep
loop
pop
sbb
xor
pop
inc
mov
aas
inc
arpl
incl
xchg
shll
push
and
and
and
xchg
push
xor
hlt
push
cld
cmpsb
fs
ljmp
and
xor
bound
ss
fistpll
lock
mov
ret
jae
xor
add
and
xchg
jg
push
push
lock
pop
push
es
pop
test
cmp
or
repnz
fildll
rclb
cmp
adc
and
hlt
xorl
bound
or
cmpsl
mov
nop
mov
add
outsl
subb
fsubp
ja
sbb
push
dec
inc
cmp
loop
shl
ss
js
push
adc
mov
lret
ja
jns
and
outsb
push
jns
jne
mov
test
sub
cmp
pop
jnp
push
sub
jmp
int3
xchg
push
jnp
addb
pop
mov
cs
xor
out
push
inc
jecxz
pop
pop
xor
cmc
inc
pop
mov
fisttps
int
push
cli
xchg
sbb
rcrl
in
pushl
mov
and
push
cld
cmpsb
inc
call
sbb
lcall
mov
add
or
inc
xor
addb
adc
mov
inc
inc
gs
loop
std
aaa
cld
stos
and
daa
testb
cmp
and
imul
inc
push
and
rolb
fs
adc
sbb
push
pop
ret
push
xlat
inc
add
jae
cmp
cmp
call
adc
push
sbb
subb
je
es
inc
xchg
repnz
or
out
js
rcll
add
adc
nop
jne
and
inc
add
xor
jbe
test
xchg
movsb
test
lea
sbb
cmp
movsl
push
cmp
ljmp
es
aas
nop
xchg
mov
insb
mov
lds
pop
sub
decl
adc
js
dec
push
inc
pop
mov
add
mov
decl
dec
cmp
cmp
scas
push
pop
mov
lcall
fwait
clc
jg
mov
popa
push
sub
icebp
jp
loope
inc
sub
lcall
mov
adc
inc
insl
jmp
cs
jnp
jge
decl
enter
lds
and
cli
xchg
xchg
sub
or
xor
fcoms
fwait
or
mov
lcall
loope
shlb
loope
lea
ss
push
push
ljmp
rolb
add
loop
int3
mov
xor
popf
cmp
mov
or
mov
jb
cs
push
add
dec
clc
repz
nop
out
rclb
popa
jecxz
jmp
fs
jae
push
subb
out
mov
sbb
dec
cmp
adc
xchg
ja
loopne
popa
xor
and
mov
aas
aam
jne
test
add
adc
and
outsl
subb
mov
jle
call
and
jns
add
daa
pop
and
mov
and
lea
cmpsl
xor
outsb
sub
jno
cld
sbb
adc
xchg
adc
cmpl
jg
fs
dec
xchg
imul
adc
jnp
add
mov
mov
sub
les
pop
and
dec
into
push
adc
out
lods
or
xchg
and
pop
jl
ret
int3
mov
sbbb
jno
adc
arpl
decl
adc
pop
jmp
insl
repnz
mov
out
loop
cli
rcrl
movsl
stc
mulb
jmp
or
xor
cmpb
lcall
mov
inc
or
inc
orb
xor
aad
sti
xor
ljmp
or
or
sub
and
mov
push
push
and
inc
mov
ja
xor
and
adc
clc
pushl
into
cli
popf
adc
adcl
xor
xchg
popa
movsl
add
push
sub
scas
bound
stc
leave
xchg
outsl
in
mov
pusha
lock
out
subb
adc
mov
bound
je
add
test
add
sub
fbstp
mov
push
lock
mov
test
mov
shlb
jp
adc
incl
pushl
cli
xchg
je
bound
imul
xor
fcomip
andb
sub
jns
movsb
jge
xchg
movsl
imul
pop
call
xchg
mov
nop
add
jnp,pt
pop
stos
movsl
aas
push
sub
jnp
shll
jg
hlt
adc
out
adc
jbe
xchg
aaa
cwtl
pop
pop
call
push
cmpsl
loop
pop
ja
js
leave
cmpsl
mov
mov
loop
sbb
lret
call
lcall
sbb
lds
cli
cmpsl
decl
inc
mov
stos
inc
leave
push
xor
outsl
cld
pop
inc
and
or
cmpsl
cmp
stos
mov
loopne
inc
add
dec
jg
pushl
ffreep
pushf
lcall
and
pop
and
mov
call
test
mov
ds
pop
ds
mov
pop
mov
mov
dec
mov
fisubrs
fstpt
inc
add
dec
mov
in
loop
mov
cltd
lahf
pop
jbe
pop
sbb
inc
ljmp
mov
in
cmpl
mov
cmp
dec
dec
jbe
or
ds
or
pop
cmp
cmp
mov
inc
or
js
fmuls
stc
decl
sbbb
imul
cltd
xchg
enter
cmp
aam
vcvtsi2ssl
ljmp
mov
dec
nop
jo
xchg
dec
cwtl
push
dec
mov
mov
int3
roll
mov
dec
inc
jnp
mov
mov
je
xchg
adc
mov
xchg
adc
push
jns
mov
call
sbb
and
cmpsl
fadds
mov
mov
mov
out
mov
jmp
nop
pop
pop
out
inc
pop
rcrb
mov
loope
sbb
xchg
gs
push
fwait
std
cmpsb
mov
push
dec
adc
dec
push
push
inc
sub
mov
mov
popf
jmp
sar
repz
insb
addb
ljmp
popf
mov
mov
mov
add
loop
pusha
leave
mov
sti
pop
into
leave
pushf
lods
leave
cmp
push
stos
mov
mov
dec
loopne
sub
addr16
subb
mov
mov
xor
gs
mov
xor
pop
pusha
add
roll
inc
rolb
arpl
or
mov
in
scas
or
add
divb
pushl
cmp
push
pop
jb
inc
pop
inc
rorb
add
incl
mov
jbe
mov
movsb
ja
cmp
mov
mov
mov
testb
sbb
push
xor
movsl
mov
movsb
sarl
lods
bound
incl
add
mov
or
das
sbb
xor
push
push
sarb
ljmp
ret
lods
cmpsl
lcall
fldcw
inc
int3
dec
inc
int3
sbb
sbbb
in
test
divl
leave
pop
mov
decl
mov
dec
mov
xor
inc
xor
xchg
sbb
jl
shr
pop
mov
mov
jecxz
mov
add
push
and
push
jb
add
push
mov
adc
arpl
adc
pop
fbld
dec
outsl
in
incl
xlat
insl
or
push
arpl
gs
icebp
add
sbbb
les
fiaddl
push
adc
std
fmuls
loopne
push
imul
int
jo
jmp
int3
adc
pusha
pop
lret
lods
cmpsb
insl
fimull
ror
lods
or
stos
std
and
mov
cmp
add
data16
mov
cwtl
mov
pop
cmc
mov
orb
and
push
addb
lret
xchg
push
jg
pop
or
pusha
addr16
call
sub
int
cmp
and
jecxz
add
push
ret
inc
pop
aad
call
dec
sub
iret
jae
xchg
xor
pop
sbb
push
repnz
mov
add
sub
movsl
or
aas
in
mov
decl
stc
xor
jns
clc
mov
push
push
jmp
rcrb
fisubs
data16
pop
jg
lcall
repnz
arpl
mov
xchg
ljmp
mov
in
gs
cli
aad
fwait
orl
lcall
fst
mov
push
add
jno
je
outsl
lods
xor
jbe
sbb
pop
add
dec
cs
daa
lods
push
add
mov
push
pop
inc
jg
mov
push
out
push
in
shl
jle
pop
sbb
cs
mov
add
jbe
lret
pushf
and
divps
idiv
ja
or
out
jle
jnp
out
out
mov
in
lret
bound
cli
loope
std
out
push
arpl
dec
out
xchg
call
nop
outsl
add
je
jp
mov
je
out
ja
xor
pusha
shlb
mov
and
out
xchg
pop
or
int
lods
mov
std
xor
lock
imulb
push
sbb
sub
mov
rcl
cmp
sub
and
jecxz
push
hlt
ljmp
mov
rorl
orl
insb
xchg
ds
mov
jnp
mov
mov
mov
jns
lret
adc
outsb
lcall
fs
popa
sbb
dec
sub
popa
in
sub
loop
add
xchg
ret
push
loope
add
xor
mov
insl
stos
and
test
icebp
loop
icebp
jg
in
inc
dec
xor
daa
aam
sti
lcall
mov
aam
clc
or
fwait
dec
aad
incl
push
push
mov
mov
xor
push
ss
outsb
ljmp
fdivrp
lret
lret
out
sub
scas
lods
out
iret
repz
dec
lahf
hlt
cmpb
lcall
lret
aaa
das
call
mov
ret
sbb
cmc
cmc
or
xor
mov
sbb
cmc
test
pushl
pop
mov
dec
aaa
xchg
lds
adcb
cmp
jp
push
leave
lock
call
sbb
dec
add
lret
sarb
and
in
cmpb
nop
js
fmull
mov
fnstsw
inc
js
xor
mov
dec
sbb
cmp
sahf
sub
jmp
js
repz
inc
adc
adc
cmp
loop
mov
loope
or
inc
or
out
or
mov
pop
loopne
pushf
fstpt
add
mov
insb
scas
jecxz
jle
adc
das
xchg
xchg
aaa
mov
mov
cmpsl
es
in
test
rcl
incl
or
and
sbb
jne
mov
sbb
test
or
sbb
pushl
subl
mov
cmp
in
std
xor
stos
flds
adc
cmp
inc
push
incl
or
loope
xchg
and
mov
int3
js
jecxz
sbb
mov
push
inc
sbb
stc
mov
pop
sahf
mov
mov
out
leave
ret
daa
unpckhps
add
aas
addl
cmp
push
push
xor
ljmp
push
ljmp
inc
cmp
scas
pusha
pop
push
hlt
lret
rol
call
add
lods
dec
lods
leave
movsl
cmp
lcall
pop
rcrl
enter
add
and
push
and
decl
xchg
sub
test
out
dec
lahf
ds
sub
adc
mov
hlt
pop
or
xor
sub
inc
lds
xor
jle
dec
pop
das
ja
sbb
insb
pop
mov
daa
dec
scas
cmp
ss
jmp
clc
jne
fstps
mov
mov
cmp
lcall
jg
or
rclb
jge
fmuls
sbb
decl
incl
cld
movlps
jecxz
rolb
cmp
inc
mov
or
or
in
mov
mov
mov
push
sbb
ds
mov
cmp
xor
mov
mov
mov
push
sbb
push
push
test
arpl
les
scas
mov
fwait
inc
push
jg
into
inc
and
cmpb
repnz
in
lret
orb
loopne
pusha
jb
popf
hlt
loop
mov
cwtl
loope
fcmovne
sbb
and
pop
adc
lods
xchg
mov
mov
dec
cmp
and
jg
test
and
inc
sbb
mov
aaa
std
ljmp
dec
inc
pop
nop
inc
and
xchg
lret
lcall
call
push
cmpsl
push
flds
adc
pop
addr16
push
pop
outsl
aad
push
pop
jns
adc
lcall
addb
sub
push
cld
sub
xchg
adc
push
add
mov
or
stc
mov
mov
rcrl
mov
dec
cmp
xor
call
or
loope
cmp
mov
sub
pop
jle
fwait
aaa
mov
ljmp
ret
shrb
inc
mov
in
lret
adc
cmp
cmpsb
mov
out
mov
pop
xchg
cmp
out
mov
out
lret
icebp
mov
adc
push
outsb
das
mov
ljmp
call
repnz
xchg
fwait
adc
sbb
cmp
jns
add
scas
sar
lcall
das
adc
test
dec
movsb
fdivs
xchg
fnstcw
outsb
vpunpcklqdq
adc
mov
xor
loope
xor
scas
xchg
in
or
leave
sbb
sub
ss
lcall
dec
xor
sbb
int3
sub
sub
je
xchg
dec
fadds
jae
mov
aaa
mov
fisttps
inc
adc
sbb
rolb
sub
sub
add
dec
lock
mov
fidivl
cmc
cmc
pop
dec
xor
adc
jo
and
fnsave
in
pop
and
js
inc
sub
or
test
call
xchg
cmpsb
subl
jle
jb
push
cmp
adc
in
mov
mov
roll
mov
dec
cmp
sub
dec
xor
add
push
psubsb
adcb
jnp
sub
icebp
pushl
clc
aas
cmp
pusha
inc
nop
ret
orb
xor
lcall
pop
push
popf
mov
bound
nop
fiaddl
cmc
xchg
xor
in
xor
mov
incl
jl
inc
and
std
and
mov
test
bound
adc
push
aas
decl
pushl
addb
stc
in
inc
inc
xor
add
dec
xchg
jns
clc
pop
adc
das
imul
loope
pushf
es
scas
aad
decl
movsb
dec
adc
mov
gs
imul
mov
dec
mov
addb
xchg
movsb
aaa
ds
push
int3
mov
lcall
push
lock
dec
imul
fdivs
stos
decl
sar
push
lock
jb
fs
out
and
adc
cmpsl
inc
jno
pop
xchg
div
cmp
mov
ja
fcomip
and
inc
dec
jae
mov
dec
shll
lock
cmpsb
mov
lds
xchg
mov
and
fildll
ret
and
xor
outsl
js
sub
mov
add
cmp
dec
sbb
xor
gs
fsubp
adc
cmpsl
or
mov
sbb
cli
sbb
add
jl
adc
xchg
dec
mov
push
xor
mov
push
jp
cmpsb
test
and
and
and
inc
ror
cli
add
scas
jmp
fwait
jg
xchg
add
jo
je
orb
call
pusha
sbb
lahf
test
ret
mov
ljmp
repz
test
adc
jecxz
jmp
cltd
push
ret
xor
cmp
pop
add
push
data16
mov
inc
sahf
cmp
add
add
adc
xchg
aam
adc
inc
jecxz
sarl
inc
adc
push
cmpsb
mov
fldenv
jge
hlt
sub
mov
jmp
imul
sbb
cmp
ljmp
sahf
xor
mov
daa
outsl
mov
inc
or
orb
push
xchg
cmpsb
cmp
jo
and
loopne
daa
ss
in
fwait
add
mov
dec
adc
push
push
adc
add
jmp
jae
dec
and
sbb
je
xor
push
jmp
sbb
mov
ljmp
es
je
int3
gs
cltd
sarl
sahf
xlat
add
inc
iret
lcall
or
lahf
test
decl
or
xor
pop
insb
popa
lahf
std
stos
inc
cwtl
js
xor
dec
sbb
mov
call
or
sbb
mov
movhps
cmp
fimuls
pop
adc
push
xchg
stos
jns
push
neg
add
dec
pop
mov
adc
cld
and
and
test
add
mov
and
mov
push
lds
in
adc
fs
add
mov
mov
mov
pop
fadds
add
add
or
int
in
aam
cli
mov
out
nop
xchg
shlb
adc
mov
pop
mov
aaa
and
jl
mov
mov
mov
and
sbbb
and
add
aas
ficompl
cltd
xchg
xchg
cmp
add
pop
hlt
jne
xchg
cwtl
push
xchg
outsl
adc
pop
lods
add
jg
insb
mov
repz
sbb
mov
push
cli
gs
pusha
leave
dec
data16
or
mov
dec
leave
inc
mov
movsb
cld
fs
ja
aaa
fcmovb
or
push
repnz
and
jg
clc
add
adc
cmp
adc
xchg
cld
dec
stos
pop
std
xchg
pop
icebp
push
ret
in
outsl
lcall
jecxz
sarl
xor
je
mov
movsb
imul
mov
rcrb
xchg
mov
orl
sub
in
sbb
lods
cld
aaa
mov
flds
mov
xchg
jmp
incl
xor
jmp
loopne
cmp
adc
shrl
jl
cmp
inc
add
stos
lret
push
fcom
adc
mov
adc
push
adcb
loopne
jge
mov
inc
pusha
cmp
mov
adc
pop
sbbb
cli
les
movsl
jl
and
inc
iret
ret
mov
inc
repnz
shrb
pushf
mov
xor
sbb
adcb
mov
mov
mov
mov
mov
sub
fistpl
out
test
jmp
daa
sub
cmp
pop
stc
push
mov
mov
scas
test
mov
jg
lcall
leave
pop
sbb
and
xchg
mov
lcall
mov
dec
dec
in
movsb
and
decl
stos
jbe
mov
and
push
jecxz
mov
out
and
pop
mov
out
mov
mov
js
mov
fsts
jbe
jge
xchg
jo
jae
leave
push
push
lahf
fcomip
inc
test
in
mov
pop
enterw
test
out
or
mov
and
push
pop
cmp
sbb
loopne
sbb
pusha
mov
outsl
fwait
push
scas
clc
xchg
sbbl
neg
inc
mov
push
mov
add
push
cmpsl
and
jle
lock
sbb
mov
sub
aas
xor
out
xor
decl
incl
pushf
mov
fwait
sub
and
add
sbb
in
sbb
adc
shlb
add
mov
mov
dec
or
loopne
mov
add
jg
in
stc
xchg
cmp
inc
stos
or
sub
call
mov
and
jns
mov
mov
mov
and
lcall
xchg
mov
and
loope
and
add
mov
push
popa
and
xor
cmp
decl
adc
mov
mov
sbb
mov
or
cmp
sub
cmp
cmp
push
xchg
decl
and
add
fidivl
sbb
cmp
sub
and
pop
sbb
jnp
pushl
mov
pop
fildl
push
rclb
sahf
loop
es
xor
out
cli
mov
sub
mov
xor
gs
or
xor
outsl
push
lcall
add
inc
hlt
repnz
cmpl
and
cli
jg
fmuls
test
dec
xorl
xchg
add
mov
push
cs
push
sbb
or
and
xor
xchg
popf
lods
xor
data16
adc
loopne
cld
lahf
lret
mov
jge
sbbl
ljmp
cwtl
push
add
xchg
cmp
jmp
add
fisttpl
or
nop
sub
lahf
mov
pop
cmc
add
mov
cmp
sbb
call
pop
dec
addb
mov
mov
sbb
sub
add
xor
xchg
ljmp
sub
push
and
and
mov
jge
pop
mov
insl
add
push
add
mov
mov
mov
xor
loop
sahf
inc
dec
adc
xor
subl
mov
adc
or
cmp
mov
inc
xchg
or
nop
adc
xchg
xchg
dec
aam
fimull
imul
lcall
int3
cmp
fadds
cmpsb
dec
mov
mov
mov
push
cmp
ljmp
pop
inc
mov
adc
ret
jg
fs
xor
pushf
mov
or
fadd
adc
jbe
push
jl
xchg
aas
lret
jg
popa
shlb
or
nop
xchg
jl
je,pt
add
enter
int
sar
int
decb
lea
jge
into
ss
incl
adc
je
mov
mov
insb
andb
jecxz
scas
cli
mov
into
xor
and
or
inc
sub
fsin
jg
xor
pop
xor
adc
stos
mov
inc
stos
add
mov
mov
insb
inc
add
cmpsb
sbb
adc
ret
cwtl
xor
orl
sbb
or
das
sub
dec
sub
xor
adc
xor
jg
xorb
cmp
addb
sub
mov
dec
jg
mov
adc
and
lret
xchg
aas
or
jg
cmp
mov
dec
mov
sub
inc
xchg
movsb
mov
and
orl
mov
movsl
lret
shrb
lcall
in
dec
pop
add
pop
addb
pop
jb
dec
jl
ret
lds
fwait
popf
mov
es
into
or
and
imul
jae
adc
adc
loop
in
cmp
dec
imul
jmp
jp
cmpsl
sbb
sbb
lds
and
jno
fbstp
dec
push
pop
sbbl
add
incl
cmp
scas
add
into
in
test
enter
xorb
and
mov
inc
or
mov
out
mov
dec
bound
or
das
lock
fcomip
daa
jnp
nop
push
mov
add
add
sub
xchg
push
xchg
rolb
sbb
int
mov
cmp
hlt
push
cltd
or
cld
push
gs
xchg
dec
sahf
sub
and
lock
adc
add
add
jecxz
add
mov
and
in
and
sub
cmp
clc
sbb
add
jge
cmp
or
cli
std
sbb
and
and
loop
mov
xor
xor
stos
mov
dec
and
sarb
jmp
daa
mov
lret
xchg
xchg
lods
xchg
xor
xor
xor
decl
sub
enter
fistl
ret
sub
aas
adc
sub
adc
lock
call
and
add
push
cmp
xchg
mov
decl
mov
mov
push
fistpl
mov
popf
enter
cli
lcall
adc
pop
sbb
mov
push
hlt
int3
inc
mov
orb
xor
or
push
out
add
ss
lods
fcompl
mov
fiaddl
mov
xor
xchg
push
insl
ljmp
and
enter
sbb
push
jns
push
jo
mov
fdiv
shll
xchg
mov
pushl
das
jnp
stc
cmp
push
cmp
adc
iret
jns
or
push
or
sbbl
xor
pop
fsts
cli
sbb
pushl
pop
pop
pop
xchg
and
loop
movsl
sbb
push
fmuls
xchg
inc
mov
xor
rolb
adc
dec
cli
pushl
std
or
mov
xor
clc
push
fadd
mov
sbb
sbb
jmp
xchg
jmp
push
sbb
aad
and
inc
rclb
aaa
repz
adc
ret
cs
movsb
nop
cli
dec
hlt
mov
ret
test
jns
mov
xchg
mov
or
sub
add
xchg
cmpsb
adc
inc
hlt
shlb
dec
loope
mov
mov
inc
mov
jae
lret
mov
dec
sub
add
fidivrs
cmp
inc
mov
mov
pusha
mov
xchg
fwait
cwtl
lods
sub
je
lds
insb
fsubrl
stos
cld
push
xchg
rcrb
repnz
cwtl
popf
test
pushl
sbb
jbe
add
or
into
fisubl
incl
roll
jle
cmpl
mov
adc
fnsave
and
add
mov
fs
dec
xchg
out
cli
jmp
imul
adc
mov
incl
lcall
and
jmp
sti
fbld
xor
pop
nop
jae
pushf
cmp
call
xchg
aam
jle
xlat
fsubs
cli
lar
ds
add
cltd
lcall
in
fistpl
cmp
lods
mov
mov
cmp
sbb
jmp
or
add
pusha
mov
xchg
fdivs
ss
mov
mov
or
push
sub
jg
inc
mov
fsubl
add
fldcw
mov
fwait
ret
mov
inc
inc
add
das
outsl
xchg
mov
add
pop
popa
incl
cld
incl
fcmove
mov
sub
roll
lods
add
int3
dec
mov
mov
dec
mov
ret
sbb
in
cs
cmp
es
fldcw
ss
dec
add
push
add
push
ljmp
pop
inc
mov
ljmp
clc
call
outsb
push
jbe
cmpsl
and
in
nop
push
clc
or
fistpl
decl
lds
in
push
inc
or
dec
push
setnp
jecxz
xchg
cwtl
jge
and
call
pop
test
pop
mov
pop
and
mov
and
or
mov
sbb
insb
je
xor
fcomip
call
loope
clc
icebp
cmp
cmp
gs
lcall
cmp
mov
pusha
jg
icebp
jge
add
neg
mov
mov
and
mov
add
lcall
jge
mov
aad
cmc
lods
adc
inc
idivb
add
xor
xlat
jmp
mov
fwait
stos
rolb
sbb
lock
mulb
jne
es
inc
shrb
pop
sub
xchg
adc
and
das
fisubrl
pushf
add
mov
xchg
and
lcall
lea
xor
inc
pop
and
inc
and
inc
push
xchg
fimull
push
loopne
xchg
mov
push
ss
pop
dec
test
push
inc
mov
int3
mov
dec
and
incl
or
pushf
pop
lahf
or
nop
mov
push
and
outsl
decb
xorb
push
out
jg
ljmp
lret
movsl
pushf
mov
mov
cmpsl
dec
push
shrl
push
mov
pushl
sbb
push
fmul
mov
lahf
sarb
jge
jmp
aad
mov
aam
out
arpl
adc
call
incl
inc
pop
rcrb
pushf
dec
sub
das
pop
inc
push
sbb
popa
xor
jne
fmul
dec
jbe
sbb
mov
lret
or
inc
push
jmp
jl
fsub
lds
jno
mov
js
jle
cmp
rolb
mov
push
rcll
adc
and
jmp
sbb
pop
sbb
inc
rsm
add
dec
add
add
clc
or
pop
aam
xchg
and
movsb
leave
sub
loopne
cmp
jp
syscall
outsl
mov
ljmp
stc
push
adc
xchg
dec
inc
je
pop
orb
outsl
cmp
adc
imul
popf
je
loope
decl
sbb
nop
sub
adcb
push
call
add
femms
loope
dec
loope
lcall
push
and
push
popa
jno
push
push
aaa
leave
mov
bnd
decl
lods
xor
and
and
hlt
lock
jno
outsb
add
outsl
sbbb
or
jno
pop
adc
dec
cmc
pushl
mov
mov
popa
sbb
js
addr16
dec
cmc
inc
cmp
fists
outsl
adc
sbb
and
mov
pushl
jo
sub
fs
test
xor
pop
mov
call
loop
movlps
insb
test
decl
addr16
push
movsb
addr16
add
push
pop
pop
adc
add
incl
in
fistl
inc
adc
out
pushl
cli
add
push
subb
testl
scas
loop
lock
iret
jmp
fwait
mov
fstpt
jbe
das
cli
das
insb
cmp
punpckhbw
sti
add
and
mov
pop
lock
fldcw
loop
and
das
pushf
mulb
std
mov
lock
call
push
ficompl
outsb
pushf
aas
mov
xlat
xlat
inc
cs
ret
mov
dec
jle
lock
cmp
inc
in
add
outsl
jmp
movsl
les
out
mov
mov
rcll
outsl
xchg
mov
loop
test
fsts
incl
push
leave
jle
and
lret
push
popa
mov
arpl
fdivrl
scas
test
shll
push
stc
cld
out
push
jbe
test
inc
mov
ud0
adc
sbb
jmp
imul
cld
and
adc
ljmp
xor
inc
adc
ret
es
insb
adc
inc
mov
or
sbb
lcall
adc
cmpsb
dec
add
inc
or
mov
xor
incl
vmovlps
shlb
arpl
push
cwtl
adc
sbb
push
mov
movsl
nop
cmp
loopne
adc
popa
or
xchg
movsb
cltd
jg
jne
in
jmp
add
ljmp
lret
pop
xchg
sbb
data16
pusha
cmp
ljmp
adc
pop
mov
adc
ja
sub
lods
in
mov
xor
fnstenv
push
or
bound
mov
mov
dec
into
jl
push
repz
inc
in
arpl
jecxz
pushl
sbb
cli
mov
xor
mov
imul
icebp
mov
icebp
in
mov
cmp
rorb
mov
fdivr
pop
pusha
xlat
jle
sti
push
in
dec
je
shl
fs
sbb
aad
push
iret
add
cli
imul
pop
mov
jp
sub
jae
outsl
sahf
mov
dec
jle
sbb
andl
mov
jno
inc
xorb
mov
mov
push
fcomip
lcall
push
and
sbb
mov
and
jnp
js
mov
data16
ljmp
jecxz
addr16
push
jp
fisubrs
mov
ret
mov
imul
cltd
arpl
lcall
jns
ljmp
out
roll
sbbl
mov
jmp
inc
pop
push
inc
adc
adc
jg
cmp
sub
imul
or
pop
jmp
imul
jo
dec
daa
mov
inc
adc
fs
mov
inc
mov
loopne
xchg
stos
adc
popa
adc
incl
fs
dec
roll
fwait
insb
js
lcall
lock
test
jmp
movsl
adc
inc
xor
pop
pop
gs
cmp
arpl
mov
pop
call
adc
out
dec
push
sbb
out
dec
ljmp
adc
xor
ss
add
gs
xchg
xchg
ret
xor
xchg
cmc
ljmp
lcall
push
test
orl
jg
mov
clc
ja
jno
and
jb
das
mov
ror
cmp
jno
cltd
out
imul
fists
ficoms
loope
sub
jecxz
jl
xchg
shll
leave
repnz
xlat
push
jg
cmpsb
xchg
incl
jl
leave
push
pusha
cmp
js
into
or
push
icebp
sbb
xor
daa
in
mov
clc
add
jp
mov
cmc
mov
test
nop
push
xchg
cmpsl
add
inc
js
xchg
stos
rorb
jbe
insl
xchg
add
aas
dec
rcrb
fs
setl
stos
pop
mov
in
xchg
xchg
cwtl
xchg
rcl
cmpsl
dec
jmp
mov
mov
cmp
jecxz
push
adcb
movsb
call
enter
push
sub
inc
cmp
xchg
fs
cs
out
add
js
push
pop
cmpsl
pushl
insb
jl
push
fwait
loop
mov
add
lods
repz
push
xor
rorb
cmc
inc
loope
inc
dec
xor
hlt
pop
leave
inc
repnz
jl
gs
mov
fdiv
pop
add
cltd
inc
push
adc
in
outsb
pop
hlt
adc
mov
fldt
jp
push
and
sbb
mov
loope
push
adc
pushl
icebp
or
iret
jnp
xor
pusha
cld
ljmp
add
and
mov
test
sbb
mov
xchg
xchg
scas
test
ret
or
dec
ljmp
rcrl
jle
ss
out
cli
mov
enter
sbb
cmpsl
aas
mov
lds
popa
dec
jp
dec
lahf
std
mov
mov
les
data16
dec
shlb
add
or
in
add
incl
fiaddl
mov
lcall
insl
imul
adcl
incl
or
and
xchg
xchg
mov
sbb
pop
add
movsb
and
and
push
outsb
pop
jae
mov
enter
add
adc
dec
jae
xchg
out
idivl
ret
jmp
out
add
lret
xchg
mov
fcmovu
cwtl
ss
push
lret
cmpsl
dec
or
adc
xor
aaa
adc
imul
push
adc
push
int3
jbe
and
mov
es
decl
push
cmp
or
lock
xor
loope
aad
adc
adc
jecxz
ljmp
jmp
aad
and
adc
orb
xchg
popf
cld
fs
push
addb
inc
push
pop
cwtl
lret
cmpsb
dec
fadds
hlt
outsl
xor
sub
jmp
jl
incl
int3
lds
imul
inc
cwtl
inc
push
popa
xchg
nop
pop
mov
imul
hlt
incl
hlt
xor
mov
stos
bound
push
test
and
ljmp
cmp
push
mov
sub
xchg
jl
push
nop
inc
and
push
bound
sbb
cmp
out
xchg
icebp
sahf
sbb
lret
push
clc
mov
gs
pop
and
call
mov
mov
pop
in
dec
xchg
xor
loope
inc
gs
fcomip
fwait
stos
pusha
sahf
movsb
in
or
push
sbbl
or
jmp
and
dec
adc
mov
add
test
add
movsl
lods
gs
dec
fxch
pop
pushl
inc
sub
adc
xorl
fimull
adc
in
imul
inc
jg
dec
push
mov
push
in
loop
mov
mov
adc
or
fs
xchg
incl
sub
cmp
outsl
pushf
xchg
mov
outsb
clc
jmp
in
inc
mov
mov
bound
ljmp
or
sub
sub
movsb
jmp
mov
or
mov
or
dec
jmp
add
add
into
ja
ljmp
ret
loope
cmp
ret
dec
dec
aas
sub
mov
cltd
mov
rolb
fildll
adc
ss
cmp
popa
pop
jb
adc
rcrb
in
das
mov
pusha
adc
ljmp
sbb
imul
cmpsl
ret
imul
cmc
ljmp
shlb
fmuls
pop
sbb
ljmp
xchg
test
lcall
sbb
sbb
subb
cmp
jg
cmp
cmp
leave
in
mov
stos
xor
ljmp
iret
into
or
repz
adc
sbb
fbld
out
push
push
addr16
sub
lcall
mov
inc
hlt
call
nop
xchg
popa
adc
xchg
mov
xor
cmp
fcmove
push
adc
jne,pn
push
mov
cmpsb
xchg
cmp
jg
xor
shlb
or
outsl
or
out
pop
push
and
push
sbb
mov
pop
loop
jnp
into
xchg
sti
scas
js
jg
into
cmp
cmp
scas
cwtl
fidivrl
cmp
xchg
jg
ficoms
inc
sbb
mov
fdivp
xchg
loope
mov
xchg
mov
add
adc
push
push
mov
repnz
int3
xor
pushf
adc
outsb
fldenv
and
es
loopne
rcr
js
mov
add
sar
ljmp
and
lcall
inc
or
orl
pop
or
inc
mov
xchg
nop
add
sbb
nop
inc
push
xchg
push
outsb
lcall
insb
decl
sbbl
loop
adc
xor
shrl
mov
es
call
insb
adc
aaa
cld
mov
sub
pop
data16
loopne
mov
cltd
fdivrl
call
jbe
sub
and
cmp
mov
and
mov
or
int
pop
xor
sti
mov
insb
sbb
js
mov
add
jns
jnp
mov
hlt
dec
imul
sti
pop
subl
hlt
mov
sub
ljmp
mov
cmpl
subb
fildll
mov
xor
mov
aam
shll
decl
and
lea
xor
mov
inc
push
add
call
fidivrs
xor
out
push
sbbl
js
pushl
or
cmp
jmp
fistpll
cwtl
mov
das
nop
rcll
daa
and
adcl
push
xchg
pop
std
ljmp
insb
test
test
xlat
xchg
mov
ret
jg
ljmp
leave
dec
inc
inc
in
inc
add
cltd
clc
or
add
mov
clc
sbb
mov
incl
mov
shrb
nop
les
mov
lods
rorl
sbb
les
pusha
fisttpll
filds
adc
xchg
xchg
xlat
insl
out
clc
xchg
pop
fistpl
or
leave
ljmp
push
sahf
popa
pop
cltd
dec
add
fidivrs
sar
int3
into
fs
adc
dec
dec
arpl
sbb
mov
mov
sbbw
mov
push
push
and
stos
fisubs
aad
jmp
add
pop
jmp
loop
sahf
fdivrp
push
jno
pop
ss
adc
pushl
mov
pop
pushf
lods
lahf
in
loop
sub
repz
push
and
dec
fbstp
dec
xor
jp
xlat
icebp
dec
fildl
xchg
test
pop
push
ljmp
jle
add
mov
push
sbb
xchg
rcrb
sbb
hlt
xchg
test
pop
clc
jg
decl
or
clc
movsb
lds
test
pushf
push
xor
lahf
aam
push
int3
in
lcall
mov
xchg
rcrb
inc
dec
jmp
arpl
dec
sarl
sbb
pop
rolb
push
inc
push
xchg
das
cli
mov
hlt
sub
jo
xchg
add
outsl
sbb
rclb
lds
cmpsb
adc
adc
clc
decl
xchg
mov
push
and
and
fs
xchg
incl
ret
aad
stc
mov
mov
andl
aam
adc
jmp
sbb
push
mov
push
cli
mov
xor
inc
fidivrs
lea
dec
pop
push
mov
push
add
js
test
pop
aas
push
incl
imul
jno
and
rcrb
or
movsl
loopne
movsl
xor
sbb
stc
int
or
movsb
pop
mov
in
adc
adc
popf
lock
mov
dec
jnp
and
pushl
out
dec
dec
xor
xchg
dec
lahf
js
rorl
mov
xor
push
mov
call
test
or
inc
mov
lret
loopne
insb
add
or
cmp
pop
add
adc
push
incl
inc
ret
mov
fdivl
test
pop
movsb
dec
or
cmpsb
push
fdivrl
out
mov
lcall
mov
jo
pushf
sbb
mov
pushf
dec
sub
nop
insl
test
aas
negb
addb
jbe
dec
inc
push
aas
push
add
add
insl
inc
or
dec
inc
jo
fnstcw
cli
xchg
fstl
inc
push
mov
inc
xchg
pushl
rclb
dec
pop
lret
mov
jl
sbb
push
popa
jp
push
aaa
cld
lcall
int
dec
cli
sbb
popa
pop
jns
fists
sbb
sbb
push
mov
and
cmpsb
popa
loop
dec
aad
push
jle
and
loope
pop
and
pop
insl
lcall
adcb
add
pop
xor
int
pop
into
jg
call
mov
add
fildll
push
roll
in
imul
out
mov
decl
out
and
es
sahf
sub
arpl
push
cmc
js
pop
stos
mov
fldenv
push
shrl
jg
add
rorl
or
lret
or
inc
js
xor
pushf
nop
mov
or
lahf
xor
lds
lahf
jmp
negb
inc
call
add
pushf
lds
jecxz
mov
mov
out
add
push
mov
pop
loopne
pop
loopne
data16
mov
int
inc
sarb
and
incl
push
or
jmp
and
addr16
insl
or
inc
add
clc
sbb
ss
adc
jge
addr16
jmp
cmp
push
mov
pop
jno
push
orl
pushf
xchg
dec
or
inc
fwait
dec
push
pop
pop
insl
mov
push
popf
dec
inc
enter
mov
mov
loope
sub
mov
add
dec
xchg
clc
mov
mov
int
sub
push
sahf
mov
mov
add
jle
push
lcall
xchg
xchg
gs
sub
push
xchg
sub
push
xchg
cmp
test
decb
clc
scas
add
pushl
loop
and
idiv
jne
in
sbb
push
out
adc
sahf
jb
into
ficompl
out
xor
sbb
lcall
dec
cmp
call
sahf
pop
inc
shrb
test
lret
and
sbb
cltd
in
push
loopne
mov
std
inc
sbb
adc
xor
fstl
test
pop
ret
stos
pop
and
mov
outsb
and
and
jbe,pn
sbb
sarl
pop
mov
sbb
mov
inc
jne
jo
shrl
inc
hlt
call
ljmp
pop
xor
sbb
ljmp
push
test
rorb
mov
bound
rclb
sbb
or
pop
pop
insb
movsb
jg
in
sbb
mov
enter
ss
mov
mov
lcall
lods
imul
test
jmp
mov
pop
into
push
sub
pop
jnp
sbb
mov
and
mov
sbb
call
flds
insb
cmp
jbe
test
jmp
push
sub
scas
pop
mov
aad
and
in
jle
pop
xchg
mov
pusha
leave
sub
mov
dec
jmp
leave
push
popa
mov
ljmp
sbb
lcall
ss
add
inc
dec
pop
mov
xchg
xchg
adc
mov
inc
insb
data16
loop
cld
decl
popa
mov
das
movb
mov
xor
js
pusha
repnz
test
lcall
sub
jmp
xor
add
jl
notl
jg
lcall
movsl
je
add
cmp
outsb
jne
and
inc
lods
outsb
cs
mov
int
inc
jmp
std
xchg
aad
repz
dec
sbb
imul
incl
popf
jae
add
in
push
inc
xchg
xchg
xor
dec
sub
popa
fdiv
out
js
adc
stos
pushf
test
dec
cmpsb
mov
pop
push
dec
ficomps
dec
jle
scas
fbstp
frstor
pop
enter
movsb
pop
sbb
fimull
outsl
divb
sbb
or
loope
cli
call
push
insb
imul
push
aas
mov
imul
nop
jb
insl
adc
jmp
cmpsb
lods
fists
and
and
pop
mov
xlat
xor
ljmp
mov
mov
fsubrp
and
pushf
mov
pop
mov
and
jp
jge
sub
loopne
dec
stos
sahf
cmc
idiv
pushl
nop
add
test
cli
sbb
mov
aaa
stos
test
sub
pop
add
lcall
xor
mov
jne
mov
hlt
insl
dec
mov
std
mov
ret
mov
jnp
jno
dec
out
int
adc
sarb
pop
int3
loopne
shrb
aas
xchg
incl
xchg
add
pop
and
and
hlt
push
gs
pop
shll
add
jno
cwtl
add
incl
adc
xchg
scas
dec
int3
mov
adc
mov
adc
incl
out
xchg
cmc
data16
mov
push
mov
fcmovnb
int
into
pushl
fwait
cli
lea
ret
push
jb
pop
xchg
ficompl
xchg
push
pop
push
cmp
push
mov
fcom
sub
adc
mov
imul
call
xlat
xchg
push
dec
cwtl
insb
xor
mov
mov
or
sbb
inc
or
test
lret
xchg
incl
mov
hlt
mov
or
bound
ss
adc
divb
adc
cmp
inc
je
stc
sbb
and
dec
jecxz
inc
call
ljmp
shl
mov
pop
js
pop
mov
push
dec
cld
mov
int3
mov
lret
push
notrack
or
mov
dec
cmp
xor
xchg
or
and
cmpsl
jno
stc
or
mov
pushl
shrb
dec
adc
fldl
or
gs
jmp
in
addl
mov
inc
mov
adc
dec
lock
adcl
inc
sub
or
popa
fildll
jmp
mov
das
mov
mov
or
xchg
jle
sahf
xadd
scas
mov
clc
lods
mov
jge
lea
mov
cmp
lcall
leave
ret
das
and
lahf
adc
xchg
jmp
mov
data16
pushl
xchg
pop
les
mov
test
dec
out
arpl
mov
or
cwtl
jb
lcall
dec
add
inc
repz
jo
je
aaa
cs
mov
ss
fisttpl
incb
outsl
inc
lahf
ja
inc
jbe
sub
add
inc
xchg
inc
outsb
ja
je
mov
lods
push
pop
ds
jp
repz
rsm
mov
xor
icebp
adc
hlt
adc
inc
jle
xchg
jmp
scas
mov
mov
sarl
mov
decb
mov
cmp
hlt
adc
xchg
mov
stos
lcall
pushl
test
aas
or
xor
clc
call
mov
lret
lcall
mov
scas
xor
outsl
add
insl
and
jbe
jg
jmp
lcall
fcomip
push
fisubs
in
arpl
call
hlt
and
cld
add
filds
cld
adc
movsb
negb
fildl
leave
pop
nop
dec
lcall
jmp
sub
mov
inc
sub
adc
mov
incl
pop
push
lds
jnp
js
jge
mov
xchg
jno
push
jno
int3
pop
ljmp
mov
dec
jge
jno
into
aam
jl
in
aad
mov
adc
fnstcw
int3
or
and
repnz
lret
movsb
int
popa
test
decl
call
aad
push
jb
incl
inc
ljmp
dec
shll
fnstcw
mov
insb
inc
sbb
decl
loopne
sti
mov
loopne
cmp
pop
cmp
cmp
fmull
out
mov
imul
jl
imul
push
push
stc
rcll
sbb
loopne
xor
fldcw
push
repnz
xchg
movsb
jbe
loopne
adc
call
jb
sub
filds
xchg
cmp
lahf
sbb
dec
aad
mov
sti
decl
or
aaa
and
pop
cwtl
lret
cmp
lock
daa
data16
mov
cwtl
mov
fsubl
aad
cltd
ja
jge
mov
sti
jg
sti
imul
outsl
clc
cli
rol
idivl
mov
pop
popf
roll
xchg
xor
test
sbb
out
inc
test
xlat
or
xor
cwtl
and
mov
out
xchg
pushf
movb
clc
add
lea
cmp
add
scas
jmp
sbb
adc
mov
pushf
cmp
adc
xor
push
mov
sub
cltd
inc
jns
std
or
sub
dec
cwtl
xor
enter
inc
aas
movsl
push
sbb
push
pushl
mov
in
lret
mov
sahf
xor
xchg
stos
fnstenv
cmp
sbb
sub
lods
fdivl
sti
pop
lods
pop
mov
push
push
idiv
adc
iret
pop
sti
mov
es
adc
cli
mov
fs
ja
test
mov
cmp
ss
stos
cmp
arpl
mov
push
sarb
push
jb
js
shlb
lcall
fcompl
mov
cmp
sti
inc
lcall
lods
dec
js
jmp
ss
pop
out
cld
sti
hlt
icebp
sarl
clc
ja
jge
jne
jmp
add
out
cmpsb
and
xchg
pop
or
nop
rolb
and
mov
incl
adc
sbb
mov
mov
xor
insb
cmp
inc
add
aaa
jl
jmp
sbb
ret
cmovno
or
mov
das
push
cld
add
pop
mov
insl
mov
fs
das
jp
xor
adcl
inc
icebp
inc
adc
call
push
and
mov
jo
stos
inc
dec
mov
and
movsb
pop
inc
adc
int3
adc
cmpsb
sbb
pushf
mov
adc
mov
enter
xorb
and
ljmp
push
stos
sbb
gs
imul
incl
in
ljmp
xchg
rorb
lods
mov
shl
cs
mov
pushl
mov
es
xchg
push
scas
and
dec
aam
int3
mov
sub
xor
in
mov
shlw
ret
pop
addr16
mov
push
ret
sahf
aad
std
call
in
mov
into
shr
mov
cmpsb
adc
pop
mov
xchg
sub
in
sub
ljmp
lret
fisttpll
pop
mov
or
mov
outsl
mov
sbb
call
pop
js
push
into
cld
cmc
xlat
rolb
or
decl
roll
fucomi
mov
cmp
ds
push
icebp
ljmp
repnz
fiaddl
xor
inc
sbb
cmp
sbb
pushf
mov
xchg
push
outsb
fxch
andb
push
mov
jmp
test
fisubl
lea
add
sub
xor
decl
pop
shrb
xor
and
decl
push
cwtl
mov
cmp
jp
or
adc
jg
out
test
cmpsl
add
adc
push
xchg
out
mov
pushl
nop
xchg
cs
into
lock
stos
pop
pop
stos
jmp
mov
dec
or
pushl
push
leave
sub
adc
xchg
jmp
loop
hlt
adcl
mov
push
fmuls
mov
xor
mov
push
repz
hlt
ljmp
mov
jg
or
pop
stc
mov
shll
add
mov
clc
neg
jnp
mov
icebp
ljmp
push
clc
mov
jmp
int3
ds
or
in
pop
mov
inc
testl
xchg
inc
mov
sar
das
je
flds
push
flds
es
jo
dec
and
inc
sahf
push
adc
adc
sbb
sub
inc
push
pushl
push
call
cltd
pusha
loop
xchg
or
popa
lret
iret
aam
cmp
lret
xchg
dec
push
add
or
jmp
inc
inc
jl
sub
mov
add
sub
adc
jno
decl
pushf
pop
data16
ret
sub
xchg
movsl
test
stos
push
push
icebp
push
xchg
adc
jb
lcall
aad
outsl
nop
or
mov
xchg
or
fstpt
insl
hlt
subb
sub
mov
and
push
mov
cmp
inc
push
sbb
jmp
cltd
psllq
and
xchg
in
ljmp
push
inc
cli
call
and
popf
outsl
add
or
icebp
call
jno
jl
adcl
enter
cltd
outsl
jge
mov
push
pop
hlt
jmp
imul
push
rcll
sub
sti
arpl
jbe
lods
int
inc
aas
push
out
clc
mov
mov
addr16
and
push
int
adc
int
ljmp
adc
push
adc
imul
xor
rcl
xchg
adc
mov
cmp
xchg
sbb
dec
dec
pop
inc
fstpt
sahf
ret
lds
cmp
and
adc
incl
xor
aaa
mov
test
xor
pop
rorl
mov
inc
cmp
dec
ss
pop
sbb
or
mov
lods
ret
lret
push
lcall
cmp
jb
outsl
sub
insb
aam
test
lcall
xor
jmp
mov
rcll
pop
mov
push
and
add
jno
decl
pop
shlb
iret
movsl
inc
leave
out
out
sub
mov
ljmp
dec
or
or
sbb
fadd
dec
push
decb
xchg
call
es
jg
mov
add
ljmp
cs
in
lods
rorl
pop
decl
add
or
mov
sbb
adc
lahf
test
addr16
pop
scas
test
decl
les
pushf
arpl
dec
pusha
cmp
lock
insl
jmp
daa
and
dec
scas
xchg
sbbl
jmp
ljmp
sub
mov
lcall
test
pop
xlat
aad
jbe
mov
push
lcall
push
icebp
inc
mov
in
scas
jg
shufps
or
sub
fsubl
testb
mov
aaa
mov
inc
popf
out
je
mov
cli
sbb
ljmp
mov
sbb
pop
in
ljmp
bound
call
lods
pop
sti
xlat
pop
inc
mov
xchg
insb
sbb
call
pop
cmc
ret
push
div
aad
dec
and
ljmp
mov
dec
cmpsb
xchg
xor
dec
and
mov
mov
fs
push
mov
es
or
ret
sub
jp
jg
mov
add
ficompl
dec
mov
mov
jbe
sub
dec
sar
call
adc
pop
movsl
daa
imul
aas
mov
push
jle
push
lahf
fdivrl
lock
push
xchg
aam
pop
ficoml
jno
or
and
pop
mov
aad
ja
mov
rcr
aad
sub
jp
cltd
scas
loopne
push
ljmp
xchg
shrb
mov
nop
mov
xchg
ss
and
movl
fwait
jecxz
xchg
jmp
test
imulb
jge
mov
push
jbe
test
int3
nop
ja
fsubr
ljmp
jl
pop
sbb
jns
call
dec
imul
pushf
dec
inc
sbb
pop
and
sub
fidivrl
rorl
pushl
or
mov
int3
fcomps
leave
mov
fadd
push
stc
mov
push
pop
std
adc
nop
sub
or
xchg
mov
pushl
icebp
pop
push
xchg
and
loopne
sbb
jecxz
insb
into
movsb
clc
das
cli
jmp
dec
dec
int3
aam
bound
jmp
xor
sbb
inc
lret
popa
pushf
mov
rep
shlb
push
adc
pop
cmpb
mov
scas
jae
fistpl
inc
hlt
mov
mov
add
xlat
cmc
mov
jmp
xor
xor
mov
add
add
add
js
dec
sbb
inc
roll
xor
cmp
out
stos
fdivrp
pop
stos
ret
pop
sahf
ss
mov
arpl
imul
xor
in
dec
jl
ret
pop
imul
and
and
add
cmp
loop
mov
push
cmp
call
scas
xchg
cmp
shr
stc
pop
mov
push
mov
jle
mov
fld1
movl
xchg
test
decl
dec
scas
mov
sbbl
cltd
jne
cltd
and
shr
cmp
aaa
sub
into
push
rcrb
xchg
jp
or
cmp
sar
pushf
and
popf
dec
push
xchg
cmp
dec
ja
mov
das
mov
decb
and
aam
rcr
call
sub
repnz
sub
add
dec
xor
pop
insl
mov
nop
push
and
jo
or
xor
sarl
rolb
int
mov
pop
xor
pusha
push
es
incl
xor
jae
in
pop
jecxz
dec
and
test
out
insb
dec
cmp
sar
mov
dec
cmpsl
stos
sub
cwtl
lods
mov
rcr
dec
and
xor
xchg
pop
addb
xchg
imul
sub
jmp
xchg
fsubrl
in
in
fisubrs
cli
out
shl
ljmp
inc
push
xchg
call
dec
mov
and
mov
fs
outsb
inc
inc
inc
inc
pushf
pcmpgtw
out
gs
clc
pushl
lret
gs
es
xchg
inc
jmp
sub
fwait
dec
stos
inc
push
scas
dec
pop
loop
ljmp
or
mov
xor
faddl
and
js
push
mov
cld
sahf
cld
in
test
fisubrs
les
cli
pushl
mov
dec
sbb
addr16
ret
push
sub
pushl
pop
add
mov
lret
adc
nop
add
aad
decl
ljmp
imul
in
cmp
je
sbb
arpl
add
dec
or
fcomip
repnz
lods
mov
and
cmp
stos
aam
pop
jbe
sbb
loopne
cmp
or
pop
push
iret
stos
mov
pop
mov
ljmp
adcb
lods
incb
out
sub
rolb
jnp
lods
out
xchg
or
or
mov
icebp
push
jg
lock
decl
adc
lcall
data16
or
adc
adcl
push
call
cmp
add
mov
in
int3
push
jmp
stos
dec
pop
add
mov
aam
popf
rolb
dec
push
imul
mov
stos
add
cs
jb
mov
clc
imul
lahf
push
out
xchg
cwtl
mov
cmp
push
push
in
add
call
sbb
sub
dec
nop
sbb
mov
mov
rcpps
add
imul
push
mov
icebp
ljmp
xor
or
push
js
mov
das
jne
arpl
adc
stos
mov
scas
xor
scas
jne
xor
or
sarb
sbb
in
jg
fs
xchg
jle
lods
dec
sub
pushl
jo
dec
call
ljmp
and
int
call
xlat
xor
sub
call
mov
and
xchg
loope
jmp
dec
repnz
pusha
les
xchg
insb
adc
enter
lret
or
inc
dec
divb
push
inc
sti
jl
mov
adc
and
enter
xchg
dec
icebp
jg
dec
scas
test
std
push
push
rorl
es
sub
es
scas
inc
add
pop
out
sub
jno
pop
clc
mov
add
mov
mov
or
fcomip
das
sub
ror
xor
das
mov
add
adc
or
mov
push
daa
xchg
xor
shlb
outsb
inc
aad
and
lock
and
sub
mov
adc
fnstenv
pop
pop
jae
mov
loop
ljmp
subb
arpl
je
mov
xchg
push
lcall
sbb
dec
mov
ret
cmp
pop
or
and
jecxz
lea
adc
xchg
and
aaa
add
jecxz
call
mov
lods
cli
mov
jle
out
cli
ljmp
imul
fs
hlt
cmp
orb
movsb
add
gs
cli
inc
lret
adc
loopne
xor
scas
sub
xor
pop
pusha
jmp
lret
mov
clc
dec
cmp
ds
repz
decl
xchg
dec
loopne
mov
push
sub
cmovle
ret
push
nop
rcrb
shl
into
pop
xchg
cs
call
ret
and
push
outsb
ljmp
lcall
test
dec
int
inc
aam
dec
in
sbb
or
add
mov
inc
push
mov
lock
and
cmpsb
adc
xor
jno
mov
adcl
xchg
pop
jae,pt
mov
pop
inc
mov
sahf
lock
in
icebp
lock
ljmp
dec
and
dec
mov
ljmp
xchg
fs
pop
mov
cmp
pop
rol
pop
jp
cmc
jp
ret
pushl
cmp
xor
ss
or
nop
xor
inc
cmp
loopne
pop
inc
push
push
jg
cmp
testl
movsb
push
lahf
jmp
mov
and
incl
push
sti
dec
sub
sub
iret
jle
popa
jp
pushf
push
xor
bound
into
in
cmpsb
adc
inc
adc
ret
add
or
frstor
test
rol
xor
sar
xchg
addb
add
incl
mov
arpl
mov
mov
or
mov
pop
fldt
pop
push
pusha
clc
imul
push
out
test
add
jb
push
mov
bound
mov
xor
add
push
adc
jg
xor
jl
test
push
aas
push
or
add
dec
arpl
jg
lcall
mov
adc
lds
or
jg
xor
lods
mov
call
jne
or
ficoms
add
pusha
clc
sub
xchg
mov
mov
jmp
dec
daa
push
inc
loop
mov
adcb
xor
adcb
popa
cmpsb
dec
dec
es
mov
decl
mov
mov
insb
or
inc
incb
push
mov
inc
xchg
adcl
out
bound
inc
adc
jmp
movsb
call
test
cmp
ds
decl
push
lea
cs
in
xchg
xorl
pop
in
ret
clc
mov
outsl
call
inc
mov
cmpsb
adc
cmpsl
jno
xchg
add
pop
pop
xor
add
pushl
addr16
sub
jno
cmc
pop
or
pop
mov
cmp
mov
ljmp
ljmp
xlat
xor
daa
test
lock
popa
sbb
jno
lahf
push
fsts
cld
decl
push
push
mov
inc
stos
rclb
or
lcall
mov
sarl
xor
jg
cli
cmp
lock
call
cmp
jnp
push
cmp
jp
add
icebp
jecxz
mov
pushl
lcall
test
xchg
and
ljmp
test
addr16
push
call
stos
dec
addr16
xorb
aaa
cld
out
push
cld
lcall
lret
loopne
push
push
in
in
push
in
adc
add
push
xchg
mov
push
mov
je
scas
data16
dec
xchg
adcb
imul
shlb
repz
hlt
xor
imul
outsl
xchg
jns
dec
js
sahf
cmp
xor
add
pop
rcll
lods
adc
xchg
and
js
xchg
jae
test
xor
cli
jg
imul
jge
shr
test
inc
jne
test
clc
xor
inc
icebp
stos
movsl
fdivrs
icebp
call
dec
push
lcall
test
dec
or
dec
fnsave
ljmp
fstl
ljmp
xchg
iret
jecxz
inc
hlt
in
cmp
jns
and
cwtl
jp
aaa
jp
xlat
dec
push
ret
xlat
dec
aas
fs
or
inc
inc
movsb
pavgw
mov
test
push
jmp
das
flds
ljmp
pop
inc
or
loop
dec
xchg
xor
adc
cmp
lcall
add
cmp
cli
xchg
push
inc
andb
decl
les
les
dec
push
lods
and
adcb
stos
test
cld
ljmp
jbe
bound
adc
int
aad
xor
fwait
dec
pop
mov
xchg
xorl
test
push
jb
sbb
adc
xchg
lcall
aam
sbb
pushf
sti
mov
pop
cs
push
mov
add
pop
popa
jecxz
clc
mov
sbb
mov
mov
jg
jecxz
push
or
pop
stc
inc
fs
int3
mov
pop
jmp
js
int
dec
iret
mov
cmp
dec
mov
test
incl
push
fcmovnu
stos
jnp
mov
cwtd
cmpsb
add
out
fwait
dec
cwtl
pop
fs
cmp
inc
lret
sub
adc
arpl
jmp
sub
push
cmpsb
and
sub
sub
xchg
ja
and
xchg
icebp
adc
jmp
cmc
leave
test
mov
arpl
lea
jne
aas
pop
adc
or
cs
or
sbb
subl
xor
xchg
add
inc
mov
pop
popf
pop
das
fs
ljmp
mov
push
or
xor
xchg
movl
pusha
test
jnp
popf
mov
sub
jmp
movsl
stos
add
mov
pusha
cld
call
mov
xor
incb
pushl
aaa
sbb
inc
clc
stc
inc
mov
mov
and
sbb
out
xor
fs
in
fiadds
dec
mov
rol
jle
nop
jmp
mov
add
das
clc
or
xchg
xchg
daa
xchg
cli
jmp
push
xchg
icebp
sbb
mov
xchg
add
dec
into
dec
sbbl
mov
fwait
adc
incl
imul
or
jno
sub
lcall
fimuls
xchg
shrb
push
cmp
sub
inc
sub
fcmovb
lahf
cmc
das
ljmp
outsb
inc
clc
les
mov
js
or
mov
xchg
sub
test
ljmp
adc
cltd
mov
cltd
xchg
jl
inc
sbb
push
jbe
or
push
std
pushl
sbb
mov
cmp
loopne
pop
pushf
fisttpll
std
push
jg
add
inc
sbb
popa
insb
das
mov
in
mov
jp
paddd
repnz
fisubrs
out
mov
jecxz
jecxz
xor
push
cmp
je
rol
jnp
addb
in
imul
in
add
stc
cmpsb
mov
mov
adc
lock
pushl
jno
jge
mov
push
sub
push
jo
subps
adc
adc
dec
mov
fsubs
sti
dec
sub
or
lcall
daa
mov
add
mov
in
lods
pop
pop
xor
fucomp
fnstcw
mov
out
jmp
sub
cld
mov
arpl
push
lcall
fs
jns
lret
into
repz
lods
sbb
jnp
imul
add
incl
cmp
xor
fiadds
mov
jnp
cmp
out
xor
repz
cld
decl
jecxz
xor
in
lcall
pop
and
cmp
add
inc
ds
rcrb
call
and
popf
jnp
sahf
cmpsb
sti
rorb
daa
cmp
mov
sub
daa
mov
ljmp
cltd
loop
jns
adc
in
data16
mov
jmp
rol
or
adc
out
pop
mov
push
icebp
push
movsb
xchg
and
xchg
and
add
adc
xor
pop
inc
push
and
ds
cmp
dec
cmpb
sub
gs
ljmp
mov
popa
lds
or
les
mov
fisttps
shll
mov
inc
pop
mov
shll
xor
hlt
loope
orl
lcall
mov
movsb
dec
xchg
jle
popa
je
adc
lods
pop
xorl
test
fiaddl
call
cmpsb
dec
xchg
ss
rolb
mov
stos
xchg
lea
mov
fwait
push
lods
fldenv
add
or
shrl
scas
cli
decl
cmp
leave
xorb
aam
arpl
jp
imul
sbb
pushl
push
popf
xlat
sub
dec
jle
or
inc
mov
jnp
in
fnstsw
out
push
shrl
stos
leave
jle
stc
cmp
arpl
decl
lret
pop
mov
xlat
pushl
repnz
mov
jle
dec
jmp
sub
in
aam
mov
jmp
lret
outsl
pop
jp
mov
lds
xchg
add
cmpsl
mov
les
inc
sbb
les
dec
hlt
xchg
dec
clc
mov
fs
loope
and
rolb
and
and
sbb
ja
mov
mov
ds
xor
push
mov
or
and
in
cmp
js
sub
arpl
adc
cli
ljmp
and
xchg
cmp
inc
adc
dec
pop
outsb
mov
sbb
inc
mov
movsb
sahf
mov
inc
or
cld
incl
add
push
out
into
imul
daa
push
jae
inc
xchg
lcall
loope
push
pop
sahf
adc
test
push
mov
pusha
nop
test
sbb
push
lock
lock
jp
push
je
push
fwait
incw
cld
or
sub
imul
enter
ss
imul
pop
xor
fldt
in
mov
imul
negl
leave
inc
pop
popf
mov
leave
cmp
loope
cmpsl
popf
and
lea
out
jg
or
cltd
pop
mov
dec
jg
lret
xor
cmp
popf
push
fisubl
enter
in
es
pop
pop
add
jb
sarb
cmp
and
pop
jo
aaa
jmp
int3
mov
and
adc
cmp
inc
push
stc
das
pop
inc
in
or
xchg
xor
ljmp
xchg
push
push
mov
inc
xchg
imul
rcr
add
add
cmp
pushl
insb
push
adc
push
dec
ror
mov
out
aad
jge
jmp
mov
pop
cmpl
push
pop
outsl
jns
test
imul
push
stos
pop
jg
push
pop
popa
xchg
into
pop
xor
aaa
aaa
cld
insb
ret
mull
popf
pop
stos
ja
inc
sbb
scas
loop
sub
pop
aaa
jmp
xchg
scas
addl
sub
ret
sub
loop
pop
repz
sub
pop
decl
fcoml
insb
lret
popf
mov
xchg
jmp
dec
pop
xlat
test
or
mov
adc
pop
lahf
mov
mov
or
mov
add
and
sub
inc
inc
outsl
mov
loop
icebp
ja
pop
fsubl
test
xor
out
cmp
mov
pop
adc
dec
pop
lods
repnz
or
aas
adc
or
test
movups
aaa
dec
decl
inc
add
test
add
js
outsl
mov
adc
das
xor
lods
mov
rolb
push
pushl
inc
add
enter
or
loope
sbb
jo
ljmp
clc
pushl
lods
mov
or
xchg
hlt
sub
add
ficompl
call
cmpsl
loopne
push
pusha
xor
daa
ljmp
adc
test
insl
arpl
outsb
cltd
clc
fidivs
lods
push
sbb
gs
jg
incl
xchg
jmp
sbb
pop
xor
xor
and
sub
mov
fnsave
stos
int3
in
in
push
jnp
adc
push
test
mov
push
mov
leave
mov
add
scas
inc
cmp
sub
pop
xchg
fs
js
jo
test
ja
cli
fnsave
mov
pushl
out
or
ret
sahf
cmpsl
cmp
dec
pop
mov
mov
arpl
xor
mov
xchg
mov
mov
adc
xchg
clc
lret
push
xlat
and
frstor
cmp
ja
gs
jge
sbb
enter
xchg
add
call
in
and
sbb
addr16
sar
xchg
lahf
sbb
inc
add
sbb
mov
xor
inc
lahf
cld
ljmp
xchg
clc
insb
cmpb
cltd
mov
sbb
sbb
pushl
out
pusha
call
jbe
insb
mov
sbb
mov
xchg
pushl
daa
pusha
clc
add
pop
inc
scas
icebp
xchg
or
mov
mov
popa
loope
and
inc
lods
sub
call
fdiv
push
ss
dec
insb
outsb
and
mov
dec
dec
sbb
cmpsl
cld
cmp
mov
outsb
jl
lahf
mov
xchg
mov
mov
stos
rol
xchg
pop
int
lcall
inc
jg
inc
jl
sub
notb
incl
dec
dec
mov
jne
mov
dec
mov
or
jne
xor
shlb
lods
xor
hlt
incl
adc
out
xchg
orl
imul
xlat
mov
adc
addr16
xchg
call
xor
int3
inc
or
sarl
cmpsl
mov
rcrb
imul
dec
daa
inc
std
outsl
cli
cli
sbb
outsl
mov
loop
xor
decl
fidivrs
add
xchg
stos
and
cmpsb
imul
stos
pop
or
incl
xchg
pushf
aad
pop
jae
ret
xor
jnp
pop
test
mov
lcall
xchg
mov
hlt
push
outsl
jl
stos
rorl
xor
xor
and
ret
xchg
fildll
je
push
mov
dec
pop
pop
sbb
cmp
cli
mov
notl
loope
pushf
sub
push
cltd
mov
shrl
ljmp
test
adc
jne
xchg
mov
xor
pusha
aad
mov
mov
mov
cmpsl
sub
decl
fsubl
push
gs
xchg
inc
repnz
dec
pop
stos
in
jmp
jg
mov
movsb
inc
mov
movsl
jg
mov
pop
mov
icebp
decl
jbe
cmp
xchg
pop
xchg
lds
sbb
incl
mov
pop
ret
cltd
fidivrl
leave
jp
dec
mov
push
ds
popa
mov
push
stc
adc
xchg
test
xchg
or
mov
sub
es
lret
inc
enter
xchg
inc
cld
pop
movsl
push
outsl
mov
shl
mov
lcall
sub
xchg
and
or
popa
or
inc
sbb
rolb
incl
adc
orb
outsb
negb
out
or
ret
mov
inc
ljmp
sbb
or
mov
dec
nop
inc
fsubr
ljmp
inc
xchg
ss
xchg
divb
jbe
loope
push
cmp
sbb
js
inc
jmp
decl
movsb
sbb
push
outsb
dec
aad
pusha
sbb
pop
aad
cmp
ja
shl
mov
cmpsl
ds
sub
incl
mov
es
aad
push
mulb
ljmp
mov
dec
jp
mov
gs
pop
int3
pusha
out
xchg
leave
adc
out
jp
mov
lcall
sarb
test
xchg
int
cmpsb
das
repz
fiaddl
lock
es
mov
mov
lcall
inc
cmc
ret
pop
push
dec
and
stos
hlt
mov
cltd
dec
dec
pop
test
cmp
cli
popf
jns
je
lcall
sub
inc
in
nop
pop
pop
fs
and
mov
lods
ljmp
dec
inc
xlat
mov
mov
jmp
arpl
rorl
insl
mov
xchg
cmovne
pop
pushl
or
sub
fiaddl
xorl
sbb
ds
imul
hlt
or
push
jnp
addl
test
pusha
js
sbb
cmp
lret
loopne
jle
mov
push
dec
inc
ljmp
pop
jns
nop
test
jg
fnstsw
loop
xchg
call
mov
push
pop
lods
cmp
jle
pop
dec
jecxz
xor
popf
and
iret
inc
push
ljmp
dec
mov
hlt
jb
inc
sbb
jae
pop
dec
push
rcrl
pop
and
pop
loopne
clc
add
dec
xor
repnz
call
xor
dec
test
xchg
iretw
ret
push
insb
mov
cmp
mov
out
mov
sbb
jne
and
xchg
and
test
push
push
es
call
cs
out
sub
jbe
cli
daa
ja
push
ja
pushl
add
push
clc
pop
xorl
sub
xor
ds
jl
daa
imul
pushl
adc
push
or
sub
insb
mov
call
cmpsb
pop
or
jns
or
or
pop
rclb
imul
mov
jp
mov
jo
cwtl
nop
loopne
pop
out
lock
pusha
push
push
mov
mov
sub
cmpsb
adc
outsl
roll
outsl
cmpsl
mov
push
push
sub
push
insb
and
xchg
jge
daa
mov
pushl
mov
stc
daa
aaa
mov
aaa
dec
test
xor
in
aaa
jno
hlt
jle
ret
jmp
inc
inc
adc
lds
add
adc
adc
es
mov
icebp
sub
add
mov
rolb
xchg
pop
push
fnsave
xor
add
cmp
jnp
jb
mov
mull
and
sbb
stc
or
ljmp
dec
nop
add
pop
or
push
adc
sbb
shrb
push
js
jne
ret
lock
lcall
addb
adc
and
inc
test
ljmp
fiaddl
jbe
jb
mov
sub
xor
adc
and
adc
hlt
test
test
pop
inc
sbb
cli
rolb
push
imul
shrb
jp
or
loope
mov
mov
jb
or
xchg
cwtl
xor
testb
outsl
call
jns
mov
cwtl
pusha
or
rorb
mov
mov
pop
and
imul
add
mov
cmpsb
dec
mov
lds
test
sub
xchg
push
les
inc
pusha
bound
mov
lock
inc
xchg
jg
inc
aaa
jnp
lock
andl
lcall
or
pusha
push
dec
push
aaa
jo
aaa
imul
and
roll
push
push
sbb
addb
jg
mov
fcmovnb
lea
push
repnz
lea
gs
sbb
xor
and
pop
roll
adc
pop
insb
int3
sbb
lcall
decl
nop
mov
mov
mov
add
mov
aad
xor
sub
mov
xor
adc
mov
adcb
imul
dec
nop
cmpsb
xor
sbbl
pop
es
into
outsl
cli
jmp
xchg
xchg
sti
mov
ss
mov
xor
xchg
ja
push
xchg
mov
lcall
ja
rolb
inc
adc
and
imul
pop
mov
faddl
idivl
sahf
push
cld
outsl
call
xor
adc
push
shlb
add
outsl
clc
pushl
insl
cwtl
xchg
sbb
or
pop
std
add
imul
mov
inc
clc
xchg
push
in
adc
jg
and
outsl
fincstp
xor
cmp
xchg
cwtl
xchg
sarl
cmpsb
xchg
cmp
jns
jo
and
aaa
push
sbb
sbb
inc
jae
ljmp
push
lds
adc
mov
daa
xchg
inc
jo
call
pushl
push
sbb
mov
test
shlb
add
sub
dec
data16
pushl
test
leave
push
ret
sub
push
jb
fildll
sti
lock
fs
mov
xchg
gs
add
mov
lock
enter
sbb
mov
or
lock
stos
lods
inc
std
incl
mov
and
mov
jno
push
cmp
xor
shl
add
xchg
decl
and
bound
fmuls
and
arpl
decl
ds
cmp
jo
arpl
inc
xor
rolb
clc
outsl
ficoml
das
xchg
clc
xlat
imul
sbb
inc
jmp
mov
xchg
punpcklbw
inc
fldcw
imul
mov
decl
pop
jmp
mov
push
ret
nop
push
dec
add
incl
or
mov
push
cmpb
xchg
inc
adc
lods
test
dec
les
xor
mov
cmp
inc
push
pop
lcall
xchg
jo
add
sub
jge
xchg
mov
mov
test
xlat
or
jmp
popa
pop
jno
dec
and
add
or
sub
dec
ljmp
or
mov
arpl
cmpsl
mov
jg
xchg
mov
lods
stos
sbb
jmp
sahf
hlt
mov
incl
in
jb
fisubrl
lea
push
pushf
mov
fnsave
sbb
jg
jg
fwait
add
stos
mov
nop
sbb
fcompl
sub
loopne
or
dec
sbb
mov
lret
or
mov
mov
and
in
or
xor
shlb
scas
sbb
dec
ret
incl
dec
sub
and
add
jb
push
loop
cld
or
xor
inc
jg
mov
lret
dec
cmpsb
push
notb
flds
es
dec
inc
jecxz
enter
ljmp
fdivl
xchg
cltd
xchg
xchg
cmp
cltd
rcl
or
mulb
cmpsl
pop
std
mov
imul
stc
xchg
xor
or
mov
rorb
mov
dec
add
sbb
pop
cmpsl
push
push
js
xor
push
popa
jg
xor
cmc
movsl
cmpsl
or
test
jge
pop
mov
sbb
jae
add
xor
mov
out
xchg
cltd
adc
xchg
dec
add
cmc
pop
out
bound
xor
scas
cmp
outsb
lret
jg
add
loopne
add
jle
sbb
fwait
mov
mov
add
mov
mov
mov
inc
ret
jae
sahf
push
and
gs
data16
sbb
je
add
mov
fs
sub
xchg
dec
mov
int
jmp
pop
or
sbb
xchg
push
push
push
pop
mov
add
pop
cmpsl
cs
cmp
cmp
ja
push
movsb
cmpsb
cs
push
push
movsl
mov
incl
sbb
inc
push
scas
push
repnz
imul
cld
call
push
pop
filds
dec
jecxz
and
pop
out
ljmp
cmp
fcomip
sti
sub
je
mov
andb
sub
cmp
sti
test
jg
dec
push
into
or
and
mov
xchg
jmp
cmp
push
mov
xchg
sub
mov
mov
cmc
mov
roll
jno
xor
xchg
movsl
je
es
nop
dec
rcrb
ss
pushl
mov
pop
lcall
inc
cmp
sub
outsl
jb
add
andb
ljmp
sub
cmp
sub
jge
add
sbb
fwait
pop
pop
popa
jae
mov
daa
lcall
ret
mov
mov
adc
inc
popa
ljmp
cli
add
vorps
loopne
outsb
jno
aaa
add
adcl
incb
jns
cmc
testl
sbb
inc
jmp
cmp
push
cld
mov
inc
or
dec
jo
pushf
sbb
dec
fwait
popl
pop
jg
jmp
and
mov
pushf
arpl
filds
popf
enter
push
incl
pushf
jp
ja
pop
mov
lock
insl
cld
mov
ficoms
rcrb
fwait
lahf
push
adc
pop
fs
sub
jg
repnz
bound
sub
fistps
or
scas
sarl
cmp
xor
xchg
cmp
mov
jmp
sbb
xchg
cmp
push
cmp
les
cmp
ljmp
and
or
test
or
jmp
lock
xchg
fadd
outsb
push
add
dec
movsb
das
mov
bound
add
pusha
push
stos
rorb
cld
jge
mov
pop
out
loopne
add
xor
pop
ud0
add
loope
push
lret
jae
jge
sti
outsb
lods
rcl
xchg
inc
jmp
cwtl
inc
mov
push
mov
mov
mov
push
imul
pop
jnp
jo
loop
mov
pop
std
lret
imul
cmpsb
jne
les
push
push
mov
insl
insl
push
jl
xor
sbb
test
shrb
adc
sahf
cli
sbb
imul
cld
mov
cmp
adc
pop
das
ss
stos
clc
test
daa
insb
push
push
ljmp
lea
pop
xor
jnp
stos
mov
fwait
mov
test
call
test
stos
add
jg
sbb
fs
das
dec
fsubrp
xchg
push
jno
subb
divb
mov
xchg
sbb
mov
lret
les
sbb
icebp
pushl
and
lahf
cltd
ds
mov
or
addr16
xchg
mov
push
int3
sub
mov
ret
in
int3
rcll
fs
cltd
int
mov
loope
into
sub
int
lcall
fldl
and
imul
in
iret
jle
fmul
adc
popf
add
shrb
decl
mov
ffree
xchg
pop
enter
add
jmp
punpcklwd
in
into
and
aad
in
scas
or
int3
xor
std
push
cmp
push
jl
mov
jl
cmpsl
pop
adc
jno
mov
jns
sub
mov
jae
mov
sub
dec
test
mov
push
lcall
test
test
ret
sbb
jl
popf
jl
mov
lock
inc
aaa
cmp
bound
in
mov
pushl
sbb
movsb
mov
pusha
xlat
push
push
sbb
mov
cld
test
sar
call
add
loopne
push
sub
fldcw
clc
stos
pop
pusha
sbbl
insl
push
jb
jmp
mov
mov
in
inc
push
and
lods
and
cmp
push
insb
divl
push
cmp
loop
pop
and
lds
add
cmp
pushf
pushf
dec
int3
fisttps
pusha
inc
dec
add
mov
xor
mov
inc
inc
dec
mov
sbb
cmc
lret
mov
ljmp
adc
jb
xor
mov
push
clc
imul
mov
int3
mov
and
and
sub
je
cli
dec
rclb
std
xchg
add
pop
repz
jo
mov
subl
jg
pop
pop
decl
xchg
sbb
inc
out
pop
adc
mov
cmpsb
outsl
clc
icebp
cmp
add
jg
ss
jge
sbb
inc
pushf
push
xorb
repnz
ds
sbb
std
repnz
inc
je
call
push
or
dec
pop
inc
push
imul
mov
ljmp
xor
imul
push
xchg
xor
bound
out
cmp
fsub
pop
add
dec
inc
sub
sub
mov
adc
dec
adc
enter
xor
add
lds
roll
seto
lcall
fldenv
dec
pushf
push
mov
mov
das
xor
jl
jmp
in
xor
sbb
dec
xchg
mov
leave
int
dec
jb
pop
xchg
jno
and
mov
dec
mov
test
pushf
jge
mov
test
bound
xchg
pop
add
cltd
and
mov
shl
fs
jg
cmc
push
sbb
push
dec
sbb
cmp
add
mov
and
fildll
sbb
mov
lret
mov
inc
sbb
mov
inc
notb
and
stc
mov
out
pop
or
mov
pop
std
fisubs
xor
fnstsw
gs
and
faddp
jnp
jge
jg
out
in
mov
jge
hlt
fildl
leave
inc
inc
aas
add
std
xchg
rcr
inc
xchg
add
and
incl
add
popf
jbe
pusha
nop
roll
adc
inc
or
es
and
decl
dec
pusha
repnz
adc
inc
add
lcall
out
ds
and
test
aam
sbb
ljmp
or
mov
andb
pop
mov
sbb
fmuls
leave
and
sub
scas
cmp
sar
add
sbb
lds
das
inc
push
int
int3
adc
dec
xor
sub
lret
sub
out
adc
lcall
sbbb
sbb
add
movsb
mov
and
sar
pushl
mov
inc
add
xor
inc
or
mov
adc
mov
clc
ljmp
dec
dec
sbb
and
sub
and
fs
out
mov
mov
test
and
lods
cltd
sub
lods
ljmp
xor
cmpsb
rolb
cmpsb
fmuls
stos
sub
add
ljmp
and
xchg
je
mov
mov
add
sub
call
sub
or
imul
and
jl
loop
lea
clc
push
call
incl
sbbl
hlt
cmc
sub
mov
pushl
mov
cwtl
and
cmp
int
leave
xchg
mov
lods
mov
sub
adc
std
das
aam
inc
cmp
aam
jecxz
mov
jg
out
orl
js
mov
mulb
xchg
hlt
jg
mov
mov
lcall
mull
js
ljmp
imul
repz
dec
mov
or
mov
pop
jmp
neg
outsl
pop
popa
xchg
mov
add
jg
mov
aas
neg
sbb
aas
add
fmull
mov
ret
pop
ljmp
push
xorl
out
icebp
ret
and
pop
aas
lock
pop
sub
mov
jl
lret
inc
jno
decl
mov
outsl
mulb
popa
add
shrb
add
jg
or
push
fnstsw
je
test
testl
push
into
cmp
and
lcall
mov
out
movsb
rorl
rep
inc
dec
cmp
aad
mov
sbbb
inc
jno
xor
push
pop
sub
dec
lret
mov
mov
push
pop
push
push
sub
enter
js
aad
push
push
ss
call
imul
push
inc
adc
pop
clc
scas
out
enter
xchg
cwtl
popa
daa
pop
cmp
inc
int3
nop
or
push
mul
pop
orb
push
aam
and
xor
les
push
cltd
aad
decl
pop
push
mov
xor
enter
xchg
scas
shl
and
or
clc
jb
ljmp
jb
push
enter
rolb
pop
add
cmpb
repnz
xor
stc
mov
add
or
mov
mov
sub
mov
adc
add
cmpsl
xor
pop
add
sahf
push
push
call
xor
add
call
cltd
cltd
rol
xor
jmp
sbb
xor
movsl
inc
cld
mov
int
xor
mov
dec
push
lret
repz
cmp
jae
mov
jge
push
lret
nop
mov
out
sub
cmpl
add
hlt
xchg
movsl
ja
rclb
es
push
push
rcrl
shll
sbb
dec
ss
mov
push
js
inc
push
out
lods
and
rcll
mov
in
into
fwait
jg
mov
cld
jb
aas
jp
inc
ss
daa
cmp
or
jmp
xchg
pushf
sahf
xchg
movsl
xor
int
dec
sar
rclb
dec
dec
rcr
pop
clc
movsb
loope
js,pn
call
nop
aam
shl
and
push
dec
and
ret
mov
push
or
filds
sbbl
sbb
cmp
pop
decl
ljmp
lods
shlb
or
ret
insl
xchg
stos
sbb
push
loop
dec
gs
incl
mov
or
and
bound
stos
add
cmpsb
and
jmp
rolb
dec
cld
mov
pop
xadd
sbb
mov
pop
loopne
sbb
clc
pop
cmp
mov
in
and
or
add
sti
pop
adc
sub
leave
mov
push
hlt
adc
lods
add
into
lock
sub
xor
sbb
or
pushl
stos
popa
dec
push
mov
gs
xchg
fldcw
xorl
sbb
outsl
movsb
lods
xor
jb
cld
jg
push
dec
mov
sub
jns
mov
call
mov
mov
iret
jns
sub
dec
stos
daa
xchg
pop
stos
pop
jg
jmp
push
hlt
inc
adc
push
mov
cmp
test
push
xor
fsubr
adc
pushl
xchg
dec
mov
and
inc
test
aam
cmp
xchg
ja
ljmp
pop
cmc
cs
ficompl
ud0
jo
mov
mov
addr16
call
xchg
push
mov
jmp
xchg
push
jno
outsl
pushf
call
sbb
add
rolb
aam
add
dec
ret
push
adc
ret
nop
rclb
ds
pop
cwtl
mov
push
popa
loope
ds
sbb
stc
push
add
cmpsl
add
lcall
and
es
adc
mov
test
lcall
pop
adc
sbb
call
nop
stos
push
dec
test
xor
or
inc
pop
hlt
lcall
shlb
xchg
push
mov
add
cmp
clc
sbb
xchg
fimuls
push
pop
ret
pop
ret
mov
repnz
push
inc
pushf
cmp
add
ljmp
in
sbbl
mov
arpl
pop
fldlg2
shll
jnp
push
pop
add
mov
negb
les
fidivl
cmp
lcall
pushl
pop
cld
mov
mov
popf
jne
mov
adc
dec
fwait
lods
repz
push
push
fldt
faddl
ret
cmp
fisttps
mov
das
dec
dec
lods
lds
xor
in
imul
add
mov
mov
jge
xchg
mov
mov
out
pop
sbb
insl
sbb
mov
scas
xchg
mov
mov
adc
adc
lea
and
lock
mov
dec
lret
lcall
outsl
icebp
cli
mov
shlb
xchg
mov
dec
sub
loop
pop
mov
cld
jg
xor
cmp
loop
fists
or
or
push
mov
mov
fadds
add
dec
jo
aad
js
push
inc
test
xchg
enter
call
sub
add
repnz
wrmsr
mov
ljmp
clc
call
push
xchg
insl
xchg
inc
mov
mov
jmp
out
push
inc
sub
lea
adc
int
aaa
imul
xorb
add
pop
mov
lods
dec
adcb
dec
xchg
lcall
shl
sbb
arpl
cmpsl
inc
lahf
sbb
xor
xchg
arpl
add
decl
stos
por
push
mov
movsb
sub
fwait
push
cmp
mov
inc
cs
fwait
call
dec
or
outsb
cmpsl
mov
fdivrs
out
or
icebp
aaa
ss
lahf
push
jl
or
pop
fs
fstpt
push
out
je
lea
jmp
sbb
out
out
dec
divl
inc
pop
mov
add
mov
sbb
pop
hlt
addb
mov
ljmp
ljmp
cli
pop
push
std
ret
loop
loop
lretw
push
lea
add
aaa
xchg
push
jmp
aas
sbb
adc
and
add
push
xor
xor
jae
popf
sbb
stos
nop
xchg
xchg
test
or
mov
mov
lcall
adc
dec
mov
add
mov
subb
xchg
cmc
decl
ret
xor
cmp
sub
mov
mov
mov
pop
dec
adc
or
inc
mov
xchg
xor
sbb
cld
mov
xchg
push
or
or
dec
xchg
decb
mov
cmp
xchg
cltd
cli
lcall
inc
imul
orl
lret
jecxz
sub
or
loopne
aam
and
cmp
or
xchg
test
rorb
shrb
filds
lock
rcrb
inc
bound
loopne
inc
dec
lods
push
and
push
cmp
fmul
scas
dec
ret
pop
mov
dec
lcall
ljmp
sbb
sbb
nop
cmpsb
jmp
std
decl
fwait
pushl
mov
js
sti
add
mov
outsb
insl
repz
ds
mov
sbb
add
cld
pusha
popf
in
push
mov
jg
jns
or
inc
cli
repz
jae
mov
loope
inc
inc
test
and
sbb
out
sub
or
inc
test
inc
jecxz
mov
sahf
jle
sub
and
cmp
lock
sarl
sub
outsl
clc
fisttps
cs
andb
xor
ja
incl
mov
rorb
popf
lret
stos
rorb
mov
xorl
sbb
test
cmp
test
stos
cwtl
mov
ret
inc
inc
mov
mov
add
sub
out
cli
mov
and
mov
add
and
xor
adc
jo
inc
adc
mov
sar
cmp
incl
or
call
out
mov
sbb
in
sub
dec
sub
cli
or
inc
sub
xor
nop
int3
add
stos
clc
xchg
add
add
push
leave
mov
and
or
repnz
rcrl
cmp
mov
jmp
add
dec
add
dec
mov
lods
out
ds
jmp
hlt
sbb
mov
sub
sbb
fldpi
lds
loope
fstpt
rolb
scas
js
fcompl
pandn
mov
std
mov
adcl
out
xor
jno
ud0
lcall
dec
imul
pop
aas
in
ds
lret
sbb
pop
inc
insb
jb
jb
adc
add
lcall
jecxz
add
cmp
in
cmpsl
das
jmp
mov
add
mov
in
or
jno
push
adc
aaa
cld
jg
adc
cmp
xchg
sbb
mov
shrl
test
call
mov
xor
cltd
and
jno
sbb
stos
xor
or
std
ret
call
fwait
mov
or
mov
mov
or
test
add
mov
jle
mov
ljmp
cmp
mov
push
fs
jg
jg
xor
hlt
stos
lods
dec
lret
jmp
mov
xor
lret
decl
xchg
shll
subb
inc
fiaddl
enter
pushf
sub
fs
decl
dec
aas
cli
cwtl
enter
lcall
mov
xchg
push
inc
xor
mov
cmpsl
jns
push
in
dec
loopne
fstpl
sti
mov
test
pop
rcll
jo
mov
dec
and
pushl
jl
add
mov
push
sub
sub
aam
loop
mov
in
out
mov
lock
pop
mov
fildl
mov
ja
sbb
mov
mov
push
stc
push
adc
xchg
inc
mov
in
fs
clc
mov
push
mov
ljmp
and
call
int3
iret
jge
dec
je
mov
mov
xor
pop
adc
loope
push
sub
incl
call
pop
xchg
mov
adc
mov
ffreep
sbb
and
mov
shrl
sub
and
rorb
push
jnp
mov
out
xchg
sbb
bound
mov
pushl
mov
fcoms
daa
sbb
xchg
and
mov
bound
mov
inc
pop
push
mov
sub
mov
or
mov
loop
mov
repnz
xor
inc
or
leave
nop
mov
aaa
in
sub
dec
mov
cwtl
pop
or
pop
lea
add
push
fadd
inc
inc
ss
rcll
dec
iret
adc
int
dec
jg
add
andb
pop
or
add
fldenv
scas
and
pushl
fisttpl
xor
ret
int
fnsave
ljmp
and
cltd
pop
xor
insb
add
out
mov
pop
test
enter
or
pushl
lret
cli
insl
dec
into
icebp
mov
xor
loope
mov
icebp
fnstcw
push
notb
jnp
push
jl
dec
outsb
cmpsl
inc
mov
call
sar
push
mov
dec
mov
ja
adc
fmuls
repz
cmp
ja
mov
sar
mov
nop
dec
dec
mov
cld
sbb
stos
fdivrp
pop
xchg
adc
ds
orb
xor
enter
call
test
or
rcrl
xor
ljmp
xor
mov
push
mov
cwtl
lcall
xor
sbb
fsubs
sub
push
jle
dec
sbb
mov
xchg
test
xorb
and
adc
incl
add
mov
sbb
pop
xor
add
es
lea
nop
lret
lock
jmp
sti
aas
xchg
adcb
mov
test
mov
sub
add
int3
xlat
jmp
lret
and
dec
ret
lds
or
lea
pop
inc
sub
cmp
in
call
scas
rcll
or
xor
inc
pop
hlt
mov
aam
xor
lcall
pop
out
add
es
push
dec
sbb
dec
pop
lods
ss
fcomip
mov
inc
bound
push
inc
pusha
fucom
jno
call
push
repnz
sbb
adc
aas
jle
mov
xchg
fstp
std
sub
aad
cmp
hlt
jns
test
scas
cmc
aam
fbstp
cli
xchg
rolb
stc
push
fidivs
push
loope
lcall
pop
test
in
adc
addb
xchg
imul
xor
add
mov
cli
xchg
out
jo
or
insb
or
mov
mov
mov
mov
add
mov
xchg
cmp
adc
cmpsb
in
cmp
mov
push
mov
xchg
pop
xchg
dec
dec
xor
jg
sbb
add
push
add
nop
lods
push
and
shl
inc
xor
jbe
add
xchg
cli
xor
mov
jmp
incl
sbb
dec
jecxz
es
lods
and
jg
fistl
dec
mov
push
mov
bound
mov
push
push
jg
dec
fnstsw
ss
movsl
ret
fldl
dec
cmpsb
out
call
dec
ficompl
jg
fs
pusha
iret
popf
pop
lret
sbb
pop
popf
cmpsb
push
fnstsw
push
pop
mulb
pushl
dec
es
dec
jbe
cmpsl
xchg
and
jge
clc
mov
fdivrp
lcall
incb
loop
dec
xor
jne
iret
pop
push
mov
hlt
adc
push
lcall
sbb
xor
and
loopne
pop
pop
std
cmp
xchg
mov
nop
addr16
jb
jle
sbb
sbbl
mov
call
xorb
pop
data16
fisubs
insb
out
rorb
mov
sbb
jne
cwtl
lret
sahf
mov
add
shlb
mov
ljmp
mov
ret
or
gs
sub
ret
jns
pop
add
mov
loopne
dec
fsts
push
subb
das
add
sub
sub
dec
add
jo
xorb
or
jl
sahf
adc
add
pop
lcall
pushw
and
xor
shlb
cmp
fcmovnb
call
cltd
inc
xor
pushw
pop
lcall
inc
push
xor
pop
cmc
call
mov
pusha
dec
int
push
dec
insb
lcall
test
clc
decl
int3
cs
cmp
or
push
cmp
pop
push
incl
sbb
push
pop
cmc
ds
icebp
pop
lds
fiadds
movsb
pop
incl
push
jno
pop
shl
in
imul
fnsave
data16
call
mov
add
scas
sbb
ljmp
imul
shl
iret
mov
jb
in
adc
aas
jnp
popf
cli
filds
jecxz
cmpsl
stos
adc
or
mov
adc
adc
jae
call
enter
addr16
sub
sahf
mov
push
push
std
jg
stos
fwait
js
xor
dec
mov
fdiv
xchg
mov
enter
sbb
outsl
andl
scas
sub
lods
andl
and
xchg
shl
lcall
sub
add
or
sbb
add
lcall
add
nop
enter
lods
into
pop
pop
cmp
outsl
call
jo
dec
cld
decl
and
cmp
inc
lock
fldt
jmp
hlt
or
stos
mov
or
push
sbb
cmp
mov
movntq
push
test
cmp
cmp
imul
mov
out
push
aas
pusha
adc
rorb
cmp
push
fsubs
fsubs
cmp
xor
std
es
pop
jns
push
dec
aad
mov
or
imul
in
adc
pushl
cmpsl
sub
fdivrp
sbb
je
repnz
repnz
xchg
inc
mov
shrb
or
mov
pop
xchg
sbb
not
rclb
add
call
insl
sbbl
movsb
or
xor
jb
ret
hlt
mov
lret
pop
xor
xchg
stos
aaa
xor
call
xchg
rolb
lea
add
xchg
ret
sbb
and
add
jne
and
dec
mov
aaa
mov
out
rolb
sarl
jmp
rcrl
roll
dec
aas
in
leave
cwtl
mov
call
rcrb
lock
inc
sub
mov
dec
gs
imul
dec
clc
jmp
bnd
lea
das
mov
mov
push
or
in
ja
std
insl
sbb
fdivp
std
shl
ja
pop
addps
pop
pop
add
xor
mov
dec
ja
gs
or
lock
jmp
mov
push
mov
cli
incb
sar
fcomip
fistpll
pop
jg
arpl
cmpsb
outsb
subw
pop
js
jo
xchg
mov
popf
clc
inc
jg
xchg
adc
mov
or
xchg
es
sbb
movsb
leave
sbb
clc
gs
inc
adc
aas
push
mov
incw
jl
pop
and
nop
popa
lock
rol
incl
jecxz
mov
mov
rolb
jne
xor
mov
xor
dec
mov
dec
lcall
mov
push
sub
lret
add
adc
std
jp
xchg
xor
mov
orb
mov
mov
into
or
and
mov
jbe
cwtl
cmpsl
mov
scas
adc
adc
rcr
mov
cwtl
sbb
out
incl
addb
fs
xchg
and
push
scas
xchg
aas
addl
and
shlb
ljmp
cli
xchg
sbb
pop
xor
in
jp
push
scas
aas
enter
imul
pop
jl
icebp
decl
lods
mov
into
mov
ja
mov
sbb
push
dec
lcall
ret
cli
dec
jno
inc
into
shll
rcrl
and
cwtl
xchg
inc
mov
iret
push
jle
loopne
iret
xchg
ljmp
jg
push
pushf
outsl
or
xor
or
pop
push
orb
loopne
inc
ljmp
cmp
xchg
sub
mov
mov
inc
mov
jo
loopne
mov
test
dec
cmp
sbb
insb
mov
fildll
lcall
enter
fmull
leave
mov
and
mov
mov
or
loop
adc
pop
addb
inc
pop
jle
out
pop
test
inc
cwtl
add
xor
add
inc
fwait
push
jno
jle
pushl
inc
imul
je
or
jno
xor
roll
dec
or
mov
mov
push
mov
inc
es
pop
sar
cmp
aam
arpl
inc
adc
dec
sar
pushl
fs
popf
je
push
inc
lea
stos
pop
adc
mov
pop
insl
inc
sbb
mov
jno
inc
dec
lds
test
adc
mov
pop
movl
xor
add
clc
mov
inc
jmp
gs
xor
add
imul
pop
push
imul
push
pop
lods
mov
mov
pop
outsb
cmc
jbe
mov
mov
mov
jo
adc
loopne
testb
push
add
loopne
ret
ja
nop
add
pushl
vmovq
sbb
and
mov
icebp
leave
xlat
sahf
leave
push
notl
pusha
roll
enter
jbe
push
cmp
dec
dec
int3
mov
sarb
mov
push
popf
mov
pusha
int
es
movsl
nop
cmp
jg
cmp
push
sbb
xchg
pop
ss
call
cmp
lea
std
inc
test
popf
ss
pop
sub
stc
in
add
ja
sub
push
ret
aaa
jne
dec
xor
leave
mov
jo
dec
addr16
push
inc
insl
loopne
push
roll
nop
mov
adc
sub
or
push
xchg
mov
decl
call
stos
xchg
fwait
lcall
cmpsl
cmp
xor
call
sbb
push
jle
cmp
push
inc
cmp
pop
popa
mov
xor
push
test
lcall
mov
sbb
inc
fstpt
jnp
into
jmp
mov
pop
push
jge
fwait
movsl
gs
mov
lcall
cs
lret
test
pushl
iret
inc
pop
mov
jno
sbb
mov
cli
loope
sbb
test
das
xor
add
push
sbb
mov
subl
mov
add
arpl
sub
xchg
ljmp
not
iret
push
pop
fadd
int3
cmp
fxch
or
push
and
mov
cltd
test
mov
jne
add
inc
je
popf
dec
test
mov
adc
push
xor
call
lcall
imul
aam
scas
cmc
mov
sub
mov
dec
mov
mov
out
jmp
push
add
or
loop
jmp
insl
add
lret
mov
leave
pop
xor
mov
test
mov
test
jmp
lret
push
add
dec
shll
push
test
dec
test
test
pushl
xchg
and
and
mov
leave
mov
pop
mov
push
leave
hlt
out
add
lcall
or
repnz
fcmovnbe
xchg
jg
hlt
repz
mov
jl
xor
pop
and
stos
out
loop
jbe
push
cltd
call
or
pushl
xchg
mov
mov
sub
dec
add
push
or
popa
int
mov
scas
add
fisubrl
cmp
fwait
hlt
xchg
cld
jmp
push
cmp
xchg
out
dec
push
cmp
jg
stc
pop
ret
out
sbb
or
inc
push
fisubrl
jno
mov
adc
adc
jg
sub
sub
or
sub
enter
pop
shrl
xchg
and
xor
and
outsl
adc
cmpsl
inc
leave
ljmp
jae
sbbb
inc
dec
add
mov
mov
cmp
sbb
xchg
addl
jns
mov
mov
jae
lcall
jno
imul
inc
bound
mov
ret
jge
mov
pop
cmc
jmp
mov
mov
mov
xchg
les
mov
push
xchg
mov
lcall
add
push
mov
mov
iret
xchg
xor
or
cli
push
ror
fisubl
push
or
mov
push
int3
ljmp
test
lret
inc
sub
enter
dec
cmpsb
cwtl
cld
mov
xchg
ds
dec
maxps
lods
mov
hlt
loope
aas
cmp
pop
out
int3
popa
in
dec
arpl
inc
xor
je
cmp
pop
mov
jl
mov
sti
push
mov
mov
and
pushf
pinsrw
fsubs
add
incb
adc
ss
adc
push
adc
clc
jg
sbb
es
aam
mov
test
xor
test
fdivp
icebp
inc
add
cmpsb
lcall
incl
inc
inc
cmpsl
insl
adc
and
dec
js
pop
sbb
test
cmp
mov
jne
xor
test
pusha
jne
call
adc
and
sbb
or
jbe
adc
pop
jmp
push
aaa
dec
push
lea
pushl
jecxz
mov
sbb
pop
jbe
mov
outsb
pop
add
incb
adc
in
test
pop
hlt
cli
mov
pop
push
dec
xchg
into
jb
mov
aaa
adc
imul
push
mov
xor
add
decl
scas
fnop
arpl
xchg
and
mov
out
xor
jb
mov
add
jg
push
incl
pop
cmp
shlb
jns
pop
cld
or
mov
decl
mov
js
adc
test
xor
sbb
stos
xor
lock
ljmp
lods
lcall
mov
xchg
xlat
cmpb
stc
push
loope
stc
sub
pusha
xchg
movsb
lcall
mov
push
nop
jle
cmp
xchg
mov
insb
insl
mov
decl
sbb
lea
push
fs
sub
mov
out
xchg
in
cmp
fwait
dec
sub
in
xchg
loop
mov
mov
push
xchg
fwait
adc
ljmp
push
xor
rolb
call
test
hlt
js
ds
adc
lcall
cmp
jmp
pmaxsw
popf
addr16
sbb
or
out
outsb
in
xor
inc
lods
mov
push
cld
dec
rcrb
pop
push
fnsave
cwtl
push
add
xchg
cmp
and
stc
sub
int
shll
jge
imul
mov
mov
rep
cmc
cld
out
stc
or
xchg
dec
sub
fstpl
into
sbb
fdivl
cmpsb
or
mov
jmp
inc
pop
test
das
clc
cmp
ljmp
and
and
push
gs
mov
mov
insl
pushf
jnp
pop
inc
rolb
std
aam
push
mov
das
and
out
dec
add
pop
hlt
mov
mov
sub
pop
push
or
mov
lods
stos
mov
ss
addl
xchg
arpl
decl
mov
and
add
add
insb
cld
or
lock
inc
adc
and
push
xor
test
push
call
sti
mov
cmpsb
in
call
fidivrs
test
in
cmp
pop
out
sbb
jp
loope
pusha
imul
decl
or
inc
push
sti
xor
sub
nop
test
cltd
push
popf
jns
call
in
mov
push
cmp
add
add
and
push
xchg
cmp
incl
push
jno
xchg
or
jg
pop
inc
lods
sbb
movsl
and
lcall
aam
add
cltd
or
int
dec
popf
int
test
inc
gs
aad
test
test
in
clc
pop
inc
sbb
mov
adc
adc
aad
inc
sub
dec
push
inc
xor
mov
inc
mov
pushl
mov
out
pop
loope
sahf
jmp
sbb
mov
push
scas
dec
mov
pop
push
fstps
lock
and
add
add
adc
inc
testb
incl
dec
rorl
clc
pop
and
xchg
pop
fcmovbe
mov
popa
pop
incl
decl
test
es
daa
cli
into
or
inc
add
lods
inc
ds
add
aaa
adc
sbb
mov
or
sar
push
or
push
dec
lods
in
incl
push
rorl
pop
into
add
cld
or
roll
add
ja
push
insl
adc
sbb
jl
outsl
cmp
insb
inc
and
aam
mov
and
cmp
hlt
call
jns
sarb
jl
adc
outsl
cmp
jb
adc
incl
and
push
sub
or
ja
xchg
jg
push
dec
add
adc
int3
inc
mov
jmp
fistps
rcl
popf
inc
imul
xlat
jge
popa
jecxz
or
popa
inc
push
mov
adc
or
into
test
and
fstps
and
push
mov
jg
add
mov
mov
or
mov
xchg
popa
mov
dec
and
std
call
mov
mov
or
inc
and
test
call
pop
xor
jmp
fldenv
orl
xchg
pop
test
mov
add
jmp
es
add
std
ret
cmp
call
xchg
inc
dec
testb
sti
mov
fisubs
sub
adc
inc
ds
pop
ret
bound
and
test
dec
add
outsb
dec
sarl
arpl
in
insb
inc
and
inc
pusha
test
mov
adc
loopne
sub
pop
call
movsl
icebp
cltd
call
mov
sahf
loopne
add
sbb
inc
insb
fisubs
inc
mov
insl
cmpsb
mov
jg
loopne
mov
sbb
or
incl
mov
xor
rorb
jge
in
inc
mov
call
add
out
push
jle
in
sub
dec
or
xchg
jmp
add
in
in
xor
pop
sbb
mov
inc
push
dec
shl
call
lods
or
decl
or
movsb
and
sbb
dec
and
inc
mov
cmp
enter
add
cld
pop
and
jnp
sarl
add
lcall
push
xchg
popa
push
xchg
jge
pusha
in
shrb
inc
mov
gs
cli
aaa
xor
dec
mov
pop
pop
loop
lock
scas
add
sbb
cmp
dec
rcrb
sbb
jg
jp
xor
push
iret
xor
push
fmul
add
or
js
sahf
out
ficoml
ljmp
pop
arpl
push
ret
jo
sbb
jo
mov
jb
cmp
jmp
addr16
push
ds
mov
or
sub
pushl
fnstenv
inc
push
or
pusha
xchg
jno
daa
inc
mov
jnp
call
sbb
mov
pop
and
xchg
int
push
inc
adc
ljmp
pop
sahf
jl
decl
jp
and
pusha
or
addr16
in
jl
mov
fs
decl
push
pushf
fs
into
mov
mov
frstor
add
and
ret
mov
cwtl
bound
inc
mov
pop
and
or
lds
mov
pop
xchg
pop
jle
sub
xchg
sub
outsl
in
push
popa
mov
hlt
mov
pop
pop
mov
xchg
mov
mov
imul
and
es
faddl
or
mov
adc
popf
mov
mov
lahf
sbb
fiaddl
lods
push
mov
nop
fisubl
cs
clc
pop
lock
decl
jbe
shr
insl
nop
xor
push
xchg
jnp
fidivrl
ljmp
fidivrl
ljmp
mov
loopne
mov
fwait
mov
std
frstor
push
inc
lods
inc
jg
or
sbb
adc
in
cmpsl
jle
test
sar
jmp
int3
test
pop
xchg
shlb
jl
lods
lods
mov
mov
add
shrb
inc
mov
add
adc
inc
mov
sub
add
cmp
call
sbb
jns
pop
fisttpll
lds
cltd
arpl
push
mov
pop
testb
adc
xor
xorl
mov
stos
mov
mov
jg
sub
jmp
mov
rep
dec
sub
lock
ljmp
arpl
insl
fmull
repnz
jmp
into
repnz
sub
inc
loopne
xchg
sub
push
xchg
mov
jmp
mov
jb
in
or
test
insb
fistpl
leave
mov
lods
xor
dec
mov
in
ja
lcall
xchg
shlb
out
dec
sahf
or
aam
out
ss
push
pop
pop
mov
ljmp
jo
outsl
inc
and
mov
pushf
sub
mov
mov
lods
fmull
outsb
pop
in
push
add
shll
jge
mov
cmp
add
inc
adc
rclb
stc
dec
addl
pop
bound
dec
add
fs
xchg
fsub
out
call
call
mov
xchg
add
gs
gs
outsb
nop
fisubrs
sub
adc
outsb
pushf
cmp
xchg
iret
xor
jb
repnz
push
mov
push
lods
jb
ljmp
clc
xchg
adc
pop
clc
add
rcl
addr16
jg
inc
cld
hlt
mov
repnz
cmp
jno
mov
insl
shrb
imul
or
sar
lret
out
xor
cld
mov
rcrl
icebp
incl
daa
mov
scas
call
lds
jp
test
fistps
add
mov
inc
loope
pop
add
inc
insb
inc
stos
push
lods
mov
mov
rcl
fwait
dec
lcall
push
sbb
hlt
incl
mov
in
imul
mov
sbb
decl
inc
icebp
mov
loop
push
sub
test
add
jno
gs
xchg
icebp
aad
jmp
ljmp
outsb
sub
pop
mov
in
bnd
in
imulb
cld
sub
ja
shlb
jno
daa
dec
pop
add
cwtl
lcall
mov
bound
lods
xchg
jle
sbb
rcll
fmuls
jns
shlb
pop
leave
out
and
push
pusha
sbb
push
imul
pushl
and
jnp
xor
rcrb
pop
or
fldl
or
test
ja
push
sub
leave
or
adc
jb
cs
ficompl
dec
insl
adc
push
sub
decl
test
push
mov
das
mov
xchg
xor
push
out
call
loopne
or
or
lods
mov
mov
mov
add
push
inc
sub
pop
mov
ljmp
inc
decl
mov
push
and
lock
push
xchg
pop
cli
pushf
jmp
test
cmp
and
incl
adc
test
stc
in
bound
mov
jae
aas
std
jmp
hlt
cmpsb
xor
jno
sbb
inc
mov
inc
rclb
fs
add
mov
sbb
lods
scas
pop
sbb
call
pusha
outsl
aaa
loop
dec
jnp
add
cmp
jno
lret
lcall
cmp
dec
repz
fcmove
mov
ljmp
or
scas
xchg
test
mov
sarb
jle
mov
andl
push
push
push
addr16
push
add
pushl
addr16
iret
sbb
push
mov
stmxcsr
or
jns
push
roll
decl
fiadds
xor
fs
adc
and
jmp
xor
sbb
aaa
add
in
inc
sub
into
call
cmp
insb
push
add
out
aad
popa
pop
mov
dec
mov
call
aas
cmpsl
jbe
push
inc
mov
mov
or
push
mov
ja
pushf
xor
pushl
std
add
outsl
cwtl
arpl
push
pop
mov
std
pusha
test
lods
mov
xor
pushl
cmp
lret
mov
inc
arpl
stos
jecxz
add
push
mov
mov
dec
sti
imul
xchg
jne
sti
stc
test
jl
iret
mov
pop
shll
push
mov
aaa
into
fisttps
loop
cli
push
lea
subl
roll
lcall
xor
shll
pop
cmp
int
xor
jo
in
dec
jb
push
in
jmp
or
daa
push
mov
mov
mov
insb
jae
out
out
pop
or
filds
incl
scas
inc
push
push
sub
cmp
dec
hlt
push
mov
push
nop
sti
and
mov
jmp
shll
jbe
xchg
mov
mov
out
xchg
jecxz
insb
jg
mov
jmp
or
ficomps
outsl
iret
dec
cmp
int3
xor
test
add
xor
lcall
addb
int3
mov
cld
out
mov
mov
in
pop
hlt
pop
lock
in
dec
neg
adc
jp
jecxz
pop
pop
adc
sub
decl
or
hlt
rcrb
xchg
js
scas
cmpsl
jp
aam
xchg
add
push
call
or
shl
pusha
ror
aaa
jle
les
dec
lock
pop
mov
out
xor
pop
pop
test
push
test
aad
push
pop
test
gs
mov
out
fdivs
cwtl
in
or
inc
push
lock
insb
out
dec
test
inc
arpl
pop
inc
push
mov
mov
imull
pop
cmp
aam
mov
pop
lcall
call
sub
sti
out
mov
icebp
imul
sbb
jecxz
iret
icebp
outsl
sbb
lea
xchg
jle
stc
test
jle
cmc
inc
imull
cmpl
test
das
lds
mov
sub
out
inc
add
iret
lcall
sbb
incl
filds
pushf
in
rclb
xchg
dec
shrb
out
decl
or
jnp
jp
and
inc
ret
xchg
xchg
cmp
incl
clc
shl
ljmp
cmpsl
jnp
testl
jl
addb
and
ja
mov
movsb
sbb
mov
nop
and
das
pop
pop
lcall
cwtl
mov
dec
mov
adc
cwtl
adc
inc
orl
push
std
insb
pop
mov
mov
stc
inc
cmpsl
inc
xchg
ds
jle
and
addr16
lea
dec
call
inc
or
xchg
sbb
or
mov
mov
add
jo
in
adc
xor
add
mov
roll
mov
das
cli
pop
notb
push
loopne
sti
pusha
jbe
popa
mov
imul
lea
jmp
test
xchg
mov
xchg
xor
mov
push
aam
adc
inc
pusha
dec
jae
jnp
loope
cmp
jo
sbb
pop
cmp
add
mov
jg
loope
xchg
mov
aaa
outsb
cld
ret
xlat
in
ja
pop
mov
cli
push
add
lods
add
jg
icebp
mov
pop
add
jne
insb
fmul
lahf
inc
out
pop
cmp
lock
ljmp
jae
pop
mov
std
jle
clc
mov
mov
lods
mov
rorl
or
ss
push
incl
bound
mov
ret
int3
lock
or
push
mov
fisttps
xchg
lds
dec
bound
das
pop
mov
and
mov
sbb
sbb
push
test
pushl
test
dec
push
xorb
sbb
addb
mov
adc
push
loop
adc
sbb
call
lds
xchg
loopne
movsb
xchg
sbb
jmp
movsl
test
jmp
ljmp
xchg
mov
bound
int3
js
lock
lcall
test
imul
dec
and
mov
into
add
ss
or
mov
jno
sub
adc
dec
mov
mov
mov
mov
push
in
mov
sbb
test
rcl
jp
pop
xchg
bound
cmp
fsubs
pop
xchg
pop
movsb
jmp
add
push
fcmovnu
movsb
popf
lea
aaa
loopne
sbb
jg
rcr
sbb
mov
cmp
fsubs
shr
cmp
mov
adc
jmp
fcomp
test
ljmp
fwait
dec
mov
test
ret
out
mov
loop
push
rolb
adc
add
in
clc
insb
rcll
es
scas
nop
sub
sub
incl
or
xchg
pop
cltd
les
mov
adc
es
push
cld
ja
clc
mov
sbb
pop
mov
icebp
call
push
mov
dec
sbb
movsb
cmp
inc
push
push
push
call
lret
push
push
jp
dec
ss
cld
push
and
add
call
call
xchg
lcall
imul
cmp
cmp
lds
adc
push
pushf
je
mov
sar
clc
push
mov
rcrb
jb
nop
stos
scas
push
inc
adc
push
mov
push
mov
push
std
sub
mov
sbb
mov
mov
decl
addb
clc
jecxz
push
orb
dec
insl
jns
mov
pop
mov
jge
fdivs
or
dec
mov
fldt
lret
push
mov
mov
mov
jmp
in
mov
add
jmp
fsubrs
iret
jg
sub
mov
in
andb
dec
addb
and
inc
jo
lret
iret
mov
inc
jmp
ret
fstps
shrl
lret
push
lret
mov
inc
daa
cli
fsts
sub
dec
sbb
call
sbb
and
add
aad
inc
sub
cld
dec
pushf
movsb
xor
pusha
jl
pushl
jge
inc
mov
popf
test
sbb
int3
push
inc
hlt
or
pop
pusha
pop
inc
adc
xchg
and
jmp
push
push
jnp
push
fdivp
jbe
movsl
add
jno
orb
in
jmp
jecxz
push
mov
inc
addl
push
call
lcall
sbb
in
pop
jp
xchg
imul
and
pop
push
cmc
lods
shrl
pushl
pop
in
lret
fsubrl
mov
jle
pusha
or
in
xchg
insl
xchg
lods
lcall
mov
xor
mov
mov
xorb
rol
fisubrs
dec
fistpll
ds
ljmp
in
pop
repz
dec
dec
sti
mov
subl
or
mov
or
ret
mov
inc
inc
popa
pusha
cmp
adc
out
sbb
lcall
lcall
scas
sbb
mov
pop
sbbb
mov
decl
dec
xchg
sub
lcall
les
cmp
dec
adc
aam
imul
mov
inc
fcomip
mov
mov
rolb
xchg
adc
incl
sub
push
and
fisubl
xchg
je
and
and
push
xor
ljmp
push
lock
sub
jmp
int3
pushl
gs
test
cmp
dec
icebp
jecxz
jecxz
or
dec
or
add
movsb
scas
xchg
fstps
test
mov
loope
daa
jns
cltd
dec
imul
push
rcll
lock
test
push
jmp
add
xchg
inc
es
test
sub
inc
dec
xor
fnstenv
testb
push
insl
jg
or
and
push
pusha
test
scas
xchg
cmp
stos
cmp
dec
in
shlb
ljmp
lods
sbb
fwait
in
addr16
mov
scas
pop
call
out
push
ret
lcall
cmp
daa
jno
test
push
sub
nop
xor
call
push
cwtl
ret
inc
fwait
xchg
jo
pop
add
std
call
and
push
xor
mov
and
push
mov
xchg
inc
sub
jg
shr
ljmp
mov
call
cmpsb
push
lcall
mov
and
add
lret
out
or
jb
inc
ljmp
leave
lcall
ds
sbb
xor
ret
les
dec
sbb
call
dec
ljmp
dec
loop
adc
xchg
mov
adcb
test
dec
xchg
mov
stos
and
sarb
sbb
cwtl
out
nop
mov
rorb
pop
icebp
pop
cmp
repnz
lret
and
sub
add
push
enter
repz
mov
pushl
mov
jmp
je
mov
mov
insb
lret
int3
dec
ss
mov
int
ficoml
iret
jmp
sbb
cmp
pushf
not
dec
mov
rcl
adc
mov
jge
fmull
imull
mov
cld
jl
jne
jge
in
int3
arpl
rorl
jg
mov
lcall
dec
loop
sub
adc
push
sub
inc
mov
or
hlt
movsb
cli
pop
insl
mov
popf
mulb
ret
adc
loop
test
out
es
cmpsb
mov
incl
movsb
shlb
jmp
mov
je
sbbl
or
es
cwtl
ret
xor
lcall
decb
cmp
test
addr16
jns
stos
fiadds
aaa
push
ret
or
or
in
push
pushl
jge
push
incl
rorl
xor
push
cwtl
stos
fsubl
jo
add
clc
pushl
sbbb
xchg
mov
cmpsb
ss
shl
pop
icebp
mov
mov
repz
cltd
jg
mov
sbb
pop
stc
and
loop
or
call
mov
insb
in
gs
out
into
mov
lea
popa
add
fmulp
loopne
mov
jnp
je
mov
cli
movsl
mov
and
pop
or
inc
insl
mov
push
or
lret
add
jno
jo
popa
dec
shlb
jmp
ret
inc
addr16
incl
aas
pop
lahf
add
push
xor
push
insl
ljmp
sbb
decl
add
mov
push
mov
fmuls
lcall
pop
mov
jmp
mov
cmp
xchg
ret
test
rcll
adc
int
cld
fisttps
shrb
sahf
add
pusha
rcll
adc
jg
add
rorl
fcmovbe
adc
dec
sub
mov
loop
imul
arpl
les
jmp
loopne
lea
jno
in
sbb
aad
adcb
xchg
cmp
adc
jg
push
std
mov
or
add
fidivrs
inc
sbb
xchg
jae
cmp
xor
push
hlt
mov
xor
inc
cmp
aaa
movsl
aaa
mov
mov
cltd
cmp
cmpsb
inc
add
pop
xor
jmp
stos
ja
sub
mov
addr16
sbb
fs
out
es
jmp
sahf
inc
add
jg
incl
into
popf
cmp
cmp
mov
inc
xor
enter
jmp
inc
rep
jbe
inc
dec
push
roll
fcoms
push
sub
imul
mov
dec
or
outsb
adcb
loop
push
ud2
mov
and
int3
mov
in
pushl
fst
lea
insb
cmpsl
cs
mov
fmulp
push
xchg
sub
cmp
mov
dec
and
pushf
testb
push
out
int3
stos
sub
adc
insb
insb
in
inc
jns
sub
or
js
sti
cmpb
inc
scas
jl
xchg
sub
pop
xor
shrb
add
mov
std
ljmp
or
push
aam
or
jns
incb
lret
cmpsb
in
jnp
scas
call
mov
das
sbb
mov
jmp
incl
testb
xor
xchg
pusha
pop
jb
add
in
jg
inc
sbb
or
ljmp
cmpsb
pushf
sbb
bound
mov
jmp
test
incl
leave
mov
test
dec
mov
subl
xchg
sarb
out
xchg
xchg
xchg
sub
scas
adc
mov
repnz
fwait
pusha
test
or
outsl
mov
jg
pushl
jno
fcoml
sbb
push
mov
nop
call
cmp
inc
in
enter
and
pand
pop
mov
add
jb
loop
sbb
les
mov
subb
add
test
sub
lock
adc
jb
movsb
pop
enter
lcall
popl
sbb
cmp
js
adc
and
or
std
mov
ja
xor
in
cmp
popa
adc
mov
jns
adc
hlt
rclb
imul
stos
mov
imul
movsl
cwtl
loop
mov
in
mov
imul
mov
arpl
test
add
jle
cmp
or
cmp
insl
fwait
lock
rolb
ss
sbb
fsubrs
fwait
add
or
ljmp
jmp
je
xor
fisttpll
movsb
and
lcall
jg
lret
aaa
adc
fsts
test
cmp
inc
push
mov
scas
and
decl
mov
dec
nop
data16
test
mov
dec
inc
dec
hlt
mov
cmp
shrl
sub
and
mov
in
lock
cmp
mov
clc
push
jno
daa
push
and
adcb
aas
pushl
mov
add
adc
lods
lret
jl
push
pusha
das
push
lret
shrb
cld
pushl
add
test
int3
cli
scas
loop
mov
jbe
enter
arpl
inc
call
incl
ret
les
repnz
and
out
ljmp
sar
push
mov
xor
or
decl
pop
pop
arpl
out
dec
incl
imul
inc
inc
adc
gs
xchg
mov
cwtl
jo
popa
cs
add
filds
rcl
mov
xor
sub
ja
adc
dec
mov
push
aas
adc
dec
movl
stos
decl
sbbl
hlt
jp
xor
lahf
sbbl
jg
mov
lock
movsb
and
dec
enter
nop
xlat
mov
pushl
sbb
incl
inc
push
dec
xchg
es
and
xchg
scas
js
out
fcoml
movb
dec
sub
or
mov
xchg
xor
and
dec
fisubrl
addb
nop
fidivs
in
cmpsl
in
call
stc
or
sub
push
ljmp
xor
mov
loopne
insb
or
push
pop
cmpb
xchg
xorb
incl
mov
xchg
sbb
movsb
xchg
sbb
or
cs
jg
incl
in
push
std
into
jb
push
or
movups
or
and
sub
pushl
pop
jg
int3
xchg
pop
add
call
lds
dec
sbb
pop
mov
sbb
cmp
mov
ljmp
inc
adc
in
inc
jl
cmp
mov
or
xchg
outsb
mov
sub
xlat
or
fidivl
out
inc
push
gs
sbb
mov
mov
insl
sub
jmp
data16
fists
test
je
and
jl
test
mov
dec
movsl
test
jne
xchg
in
cmp
test
mov
cmp
call
ds
push
rcll
sahf
jbe
lds
cmp
loopne
pusha
dec
rorl
jp
fstl
testb
push
jb
push
mov
loop
clc
push
lds
adc
inc
sqrtps
shll
mov
in
cs
adc
pop
scas
add
and
push
sbb
add
inc
mov
fsubrs
arpl
sub
add
sub
cld
jmp
loop
popf
cmpsl
xchg
push
and
out
sub
pop
pop
jmp
xor
call
adc
mov
das
sub
hlt
call
mov
xor
inc
cltd
mov
lcall
adc
lcall
add
mov
inc
lock
shll
mov
subl
sar
pop
adc
loop
shl
ljmp
ljmp
xchg
push
data16
lea
adc
mov
cmp
outsb
push
push
mov
mov
inc
outsb
dec
cmp
in
dec
loopne
adc
and
scas
jmp
add
cmpsb
push
data16
push
popa
push
bound
ret
div
clc
adc
push
pop
es
call
xchg
outsl
push
test
stc
cld
xor
inc
push
fmuls
mov
cltd
jb
adc
nop
mov
inc
loop
insb
inc
sbb
mov
test
call
xchg
xchg
fmuls
sub
loopne
pop
pusha
pop
inc
mov
sahf
test
decl
ficompl
mov
push
inc
xchg
xor
gs
das
in
jp
push
jbe
adc
ja
pop
sbb
adcl
dec
movsl
push
ds
lcall
sbb
into
cwtl
shlb
push
jmp
fcomi
add
dec
mov
call
xchg
iret
lcall
mov
out
xlat
xor
or
inc
xor
mov
pop
incl
or
dec
hlt
inc
mov
push
dec
fdivl
adc
jmp
jns
xlat
xlat
cmp
mov
xchg
test
out
idivl
cmc
div
adc
and
xlat
cmpb
movsb
es
pushf
push
clc
filds
mov
es
inc
imul
xchg
mov
push
push
insb
sub
dec
testb
inc
ret
mov
mov
cmc
push
fwait
or
outsl
add
xchg
shrb
pusha
outsb
lds
cmp
in
or
int3
pusha
js
inc
mov
xchg
mov
out
add
inc
pop
xchg
sub
push
mov
lahf
stc
pop
adc
rcrl
clc
lcall
aaa
cmp
adc
test
mov
dec
jnp
fwait
mov
pop
loopne
cltd
in
add
out
lods
hlt
dec
imul
mov
pushl
jnp
fnstcw
cmp
popa
call
ret
dec
vphadduwq
cmpb
adc
xchg
fisubs
out
add
dec
xor
sub
arpl
gs
push
adc
mov
fcomip
ljmp
mov
xchg
jnp
xorb
jns
push
lret
out
mov
rclb
mov
push
push
sub
notb
das
add
repnz
jg
rorb
rorb
sarl
mov
daa
adc
push
incb
ficomps
test
pushl
cmpl
imul
mov
loopne
add
cmc
xor
lcall
xchg
jmp
aaa
pop
cld
sub
pop
std
inc
leave
outsl
lea
incb
push
movsb
mov
lods
int3
ret
cli
je
stos
jne
aaa
std
incl
aam
xor
iret
roll
lret
test
shl
test
sub
adc
jge
imul
mov
jmp
int3
addb
inc
bound
cmp
data16
dec
aam
jg
movsl
fisubrs
aas
lcall
enter
cmpsl
lret
ret
sar
inc
pop
in
bound
mov
mov
mov
pop
test
ja
ja
mov
ficoml
ja
mov
and
mov
ja
dec
mov
movsb
lods
int
and
sbb
push
cmp
les
imul
in
test
loop
repz
jmp
mov
sbb
push
mov
mov
icebp
xchg
scas
dec
lock
outsl
and
mov
shll
dec
js
fwait
mov
pop
aad
out
or
addr16
add
fisubrl
hlt
sub
shlb
xchg
rolb
ret
mov
cwtl
daa
jp
jg
adc
pop
and
scas
test
in
jnp
insl
jnp
adc
aaa
pop
cld
clc
int
jecxz
mov
add
js
sbb
ja
and
jge
dec
movsl
push
test
in
sar
sti
jmp
mov
add
andb
aas
cmpb
or
mov
fwait
cli
test
popf
shrl
test
stos
pop
cmp
repz
pop
clc
mov
mov
cmp
or
jp
lods
and
nop
push
mov
outsl
sub
insb
add
inc
ret
aas
sbb
add
aaa
pop
and
dec
cltd
lret
out
std
test
incl
pop
fwait
mov
mov
sbb
lock
decl
and
mov
or
xlat
std
adc
mov
pushl
aad
aaa
pop
lret
push
hlt
in
pop
dec
xchg
lods
pop
jne
and
ret
xchg
add
mov
jl
mov
sbbb
jg
int3
lods
cmpsl
jle
mov
rol
mov
fdivr
pop
mov
and
xor
stos
ds
sar
cmp
jecxz
imul
cltd
aas
xchg
jmp
stc
arpl
sbb
call
push
int
aad
fwait
shlb
popf
mov
cld
mov
mov
ss
mov
sub
test
cld
jecxz
inc
push
push
inc
out
jle
mov
jg
jl
mov
testb
cmp
pop
fldenv
inc
xor
mov
pushl
add
jecxz
fsubs
push
jecxz
idiv
nop
mov
jo
in
insl
inc
fsts
jno
push
daa
mov
sub
in
push
pop
lods
mov
insb
pop
out
xlat
jecxz
push
mov
mov
les
adc
lods
mov
scas
ja
mov
inc
sbb
sbb
xchg
pop
dec
xchg
lods
sbb
jae
dec
lret
sub
cmp
pop
jns
xor
pop
inc
loope
jle
pushl
sbb
xor
jl
stos
mov
adc
jp
arpl
clc
std
cmp
lcall
ret
pop
jmp
testl
shlb
orl
cld
shll
jnp
add
add
les
pminsw
in
cmp
lcall
cmp
aaa
mov
dec
inc
add
and
shlb
out
jle
fadds
xchg
call
leave
mov
shll
xor
xchg
jg
fwait
pusha
sbbb
repnz
dec
stos
pop
leave
mov
jmp
dec
xchg
sub
adc
call
cmp
out
cmp
jno
xchg
xchg
sub
fwait
loope
jmp
inc
leave
xor
dec
xchg
and
dec
push
or
sub
js
push
nop
jl
scas
aad
mov
pop
mov
mov
or
cltd
negb
iret
jg
xor
mov
xor
repnz
add
call
std
pop
int3
mov
and
cld
js
add
cld
stos
push
icebp
cmp
lcall
out
incl
push
add
out
adc
adc
pop
push
inc
or
scas
pop
lea
mov
lock
xor
cmp
ret
in
inc
stc
lahf
add
dec
add
data16
pushl
and
addl
ret
ja
in
mov
outsl
cmpsb
movsb
cli
imul
aas
call
cltd
inc
fidivrs
push
hlt
fmull
fcomps
pop
jmp
cs
jle
inc
push
add
add
test
lcall
data16
jo
or
dec
xor
pushl
lahf
subb
test
andl
pop
inc
mov
mov
js
jg
mov
sahf
xorl
mov
mov
xorl
addl
fildll
nop
or
jno
sbb
nop
or
lret
decl
and
jb
in
pop
inc
mov
cwtl
fs
mov
xchg
imul
lcall
jge
add
imul
cmpsl
adc
xor
rol
incl
in
inc
or
sbb
mov
inc
sbb
rcrb
in
push
mov
push
incl
in
pop
inc
adc
or
lds
or
ret
test
push
dec
jne
mov
sub
pop
pop
and
xchg
out
xor
inc
ret
xchg
movsb
aad
insb
daa
clc
ja
cli
stos
insb
sbb
insl
push
fs
dec
cmp
jmp
lcall
loopne
daa
out
mov
fcompl
adc
insb
out
push
push
add
fimuls
loope
fsubrl
push
sbb
push
outsb
push
sbb
call
pop
outsb
mov
rclb
xchg
cmp
lock
sti
push
rorl
ja
test
sub
mov
out
enter
pusha
jp
jmp
stos
xchg
repnz
jecxz
mull
fdivl
stos
out
cmpl
push
add
rcrb
jb
sbb
sbb
ljmp
ret
jg
mov
stc
call
cld
mov
push
out
mov
jg
je
sbb
dec
mov
call
jle
lods
neg
push
andl
cltd
je
in
es
add
mov
sahf
cmp
xor
and
fildll
roll
xchg
out
pop
aad
popf
pop
outsb
rcrl
mov
add
inc
test
cmp
mov
test
movsb
mov
sub
lods
sub
ret
push
push
push
popa
inc
adc
adc
adc
mov
mov
cs
lds
pop
out
scas
push
xlat
dec
and
aas
cld
adc
mov
xchg
pop
mov
bound
dec
nop
cs
shlb
mov
and
inc
dec
ljmp
jle
cld
test
ffree
add
sbb
xor
orb
rorb
or
jne
arpl
fidivrl
ljmp
stos
add
pop
xor
fsubrs
out
stc
je
cmp
xchg
add
cmp
clc
jmp
clc
ret
or
test
inc
mov
adc
mov
mov
xchg
lcall
sub
ficoml
decl
stos
loope
adc
pop
xchg
mov
mov
jmp
subl
test
dec
outsb
xor
pushf
fisubl
sub
sub
xor
dec
pop
ljmp
in
je
adc
push
mov
out
mov
xchg
repz
xor
inc
int
pop
rcrb
cmpsb
push
loop
xchg
adc
mov
cmpsb
sbb
mov
loop
xchg
mov
add
jmp
ja
fdivs
sbb
push
out
dec
pop
jno
lret
mov
cmc
cmp
and
fnsave
hlt
call
pop
enter
cmp
jns
mov
out
xchg
lock
sbb
push
pop
sbb
mov
out
cmp
cltd
mov
lahf
clc
pushl
cld
add
inc
add
cmp
or
sbb
ror
pusha
fmull
pop
mov
or
into
shlb
test
lock
loopne
ljmp
divl
xchg
xlat
mov
mov
shrl
cmpsb
push
nop
sbb
xor
pop
jge
mov
bound
test
iret
inc
or
and
aad
ds
and
cmpb
dec
fbld
and
sarl
test
lods
pusha
adc
out
je
push
mov
cmp
decl
int3
push
adc
lods
fwait
push
xor
fcoms
mov
push
mov
clc
inc
aaa
push
or
dec
jl
arpl
scas
sub
sbb
add
add
loope
sbb
dec
idivb
nop
ret
push
daa
leave
nop
push
or
mov
int3
leave
and
je
adc
push
lds
cmp
mov
call
into
sub
adc
jns
in
and
push
adc
icebp
push
sub
mov
jle
mov
mov
enter
pop
into
push
popa
or
or
sub
push
int3
dec
int3
jg
sub
aas
lcall
xchg
sbb
cmp
mov
es
fidivs
xor
cld
push
or
or
inc
sar
mov
outsb
pop
iret
out
or
loopne
std
add
add
iret
jns
push
adc
inc
cmp
pop
inc
leave
mov
add
pop
inc
xchg
pop
imull
pop
sub
fwait
movsb
xchg
movsl
push
and
movsl
lcall
add
adc
jge
xchg
test
rclb
fs
ljmp
pusha
pop
xor
inc
ret
lret
push
fmull
stos
jg
push
aaa
cld
movsb
add
sbb
adc
inc
push
call
std
test
movb
cli
or
ja
stos
dec
decl
xchg
nop
call
add
shrl
stos
cmpsb
and
xchg
das
hlt
ljmp
ror
test
stos
push
frstor
leave
stos
dec
inc
xchg
push
mov
and
inc
lret
outsb
sub
cld
cmp
sbb
dec
ds
cmp
adc
push
pushl
shl
and
pop
fsts
insb
pop
jmp
inc
xchg
or
sahf
and
fdiv
lahf
sti
jo
mov
shll
mov
lcall
ret
fdivrl
cmpsl
or
or
pop
inc
adc
addr16
mov
decl
clc
mov
pop
ficomps
sub
add
xor
lds
inc
or
mov
mov
sub
out
push
movsb
std
int
adc
mov
mov
add
lods
cmp
call
lock
popa
and
in
fmull
pop
or
cmp
enter
adc
mov
inc
ret
fstpl
or
mov
incl
jae
sub
sbb
nop
adc
leave
bound
mov
xchg
and
call
and
fwait
push
sub
and
mov
xchg
mov
aad
test
jmp
fildll
shlb
pusha
leave
push
lods
pop
xchg
gs
stc
js
xchg
mov
out
jns
js
out
icebp
fildll
push
jo
cli
call
cs
lcall
into
andb
push
push
sbb
push
pop
dec
mov
imul
adc
xor
push
add
icebp
cmp
sub
cmpb
sbb
mov
mov
jg
jmp
sub
mov
fwait
xorl
mov
scas
clc
push
jge
loope
and
or
fstps
lcall
dec
mov
mov
test
dec
rcll
movsl
ljmp
ret
and
sub
lret
scas
xor
scas
incl
call
outsl
sub
pop
stos
std
lcall
mov
jmp
inc
out
lock
loope
mov
pop
adc
push
jg
and
and
ret
and
jmp
bnd
mov
leave
push
stc
in
andb
xchg
push
cmp
push
xchg
lds
pop
and
pop
and
pop
xchg
clc
lahf
or
rorb
je
push
incl
dec
movsl
adc
dec
mov
mov
sbb
jmp
sbb
mov
imul
xchg
push
imul
sahf
sbb
add
mov
psrlq
push
jbe
adc
and
pop
jecxz
fistl
sub
pop
pushl
or
imul
js
in
out
lcall
push
push
pusha
push
gs
pextrw
push
dec
enter
inc
popl
jns
and
jmp
sub
cmp
and
sub
outsb
xchg
and
xor
cmp
test
outsb
mov
out
pushl
pusha
sbb
repz
push
jno
or
xor
jne
jo
jae
adcb
cltd
fdiv
pop
in
js
pop
push
or
mov
decl
xor
shll
xchg
lcall
daa
mov
jbe
jno
addb
push
add
adc
jb
bound
sub
scas
cli
dec
push
cmp
sub
mov
mov
outsb
cmp
jmp
lock
dec
xlat
rolb
in
or
jo
lcall
pop
lret
les
xor
pushf
mov
mov
pop
lods
inc
jne
add
mov
sbb
dec
decl
lea
pop
pop
inc
sbb
movsl
imul
xchg
xor
push
pop
loope
mov
cmp
add
cmp
stc
add
incl
inc
sbb
sbb
adc
ljmp
sub
cmc
jne
out
xchg
lods
sub
lds
daa
incl
test
sbb
pushl
aam
add
outsb
xchg
mov
sbb
inc
inc
or
lds
loop
lcall
push
fs
mov
lds
mov
xlat
data16
es
push
stos
insb
stos
add
es
jg
ljmp
mull
repz
je
push
test
xchg
pop
add
out
stos
inc
sub
mov
mov
adc
mov
sbb
ljmp
jle
pop
sbb
xchg
push
sub
jne
xchg
mov
xchg
loope
test
sub
data16
adc
sub
sar
pushl
enter
mov
lret
popf
inc
xor
ljmp
nop
das
mov
imul
mov
adc
incl
push
inc
dec
adc
push
push
xchg
push
repz
sbbb
push
add
nop
cmpsl
out
imul
mov
pop
xor
pop
adc
aas
movsb
xor
add
pushl
inc
dec
push
dec
mov
push
pop
xor
and
adc
loop
xor
jmp
push
aaa
inc
add
add
jbe
sbb
push
inc
in
ljmp
push
xchg
jb
and
push
pop
bound
cmp
mov
outsl
pop
bound
add
incl
and
movsl
pop
arpl
cmp
out
add
cmp
xchg
adc
sbb
repnz
cmp
add
push
xchg
sti
xchg
inc
push
insl
xor
rclb
pushf
mov
jbe
lahf
adc
lods
and
jecxz
xor
test
nop
jbe
xchg
out
add
out
test
cmp
lds
movsl
jne
inc
out
cmpb
fsubl
push
or
add
dec
adc
pop
pop
mov
jne
jmp
iret
shrl
call
and
leave
stc
dec
rol
mov
dec
push
aam
cmpsb
imul
inc
cld
inc
decl
lcall
arpl
and
cmp
test
in
out
adc
add
dec
js
xchg
xor
pop
xor
xchg
pusha
test
ljmp
push
fnstcw
jmp
fldcw
and
inc
cmpsl
xchg
test
pop
add
xchg
sub
call
cmp
ss
mov
push
stos
push
jne
lcall
adc
jmp
pop
jno
ja
lahf
aas
mov
inc
add
xor
jecxz
dec
jns
repnz
lret
jo
inc
adc
test
xor
test
inc
sub
test
in
jo
cld
pop
lock
push
adc
sub
push
sub
ret
inc
adc
aaa
jb
adc
xor
fs
cmc
jmp
xchg
jno
cld
nop
pshufw
shrb
sbb
lcall
sbb
jmp
icebp
xchg
inc
rcl
movsb
xchg
shrl
mov
xor
xchg
sbb
or
sbb
jnp
imul
pop
stos
sbb
mov
add
pop
ja
test
mov
hlt
shll
jmp
sub
push
scas
sbb
mov
loopne
mov
jns
xor
and
cwtl
pusha
leave
push
pop
jg
jb
jno
insb
shrl
bound
subl
push
jecxz
frstor
popf
addr16
subl
inc
dec
inc
and
cmpsl
ss
dec
cld
pushl
pop
pop
data16
popa
adc
jbe
push
in
cltd
outsl
loop
repnz
adc
mov
jp
incl
outsl
mov
sbb
stos
xchg
and
ret
add
and
test
enter
lcall
xchg
mov
lods
sub
sbb
mov
mov
sub
adc
and
cmp
pusha
cli
add
and
stos
or
fwait
inc
aaa
jp
cmp
ljmp
flds
js
push
mov
mov
xor
aaa
insb
sub
sbb
call
jle
add
jg
push
dec
adc
fwait
out
push
in
add
incl
call
out
mov
fistpl
notb
dec
aam
inc
insb
mov
inc
or
lret
xor
pushf
jle
sar
incl
shrl
push
je
and
cmc
jns
adc
xchg
and
inc
pushf
cmpsl
insb
inc
lds
mulb
xor
ljmp
cwtl
add
decl
jnp
ss
mov
xchg
jl
inc
mulb
cli
push
fs
mov
je
push
out
incl
mov
nop
cmp
add
imul
daa
push
push
in
jo
stos
pop
pushl
std
data16
jo
jo
pop
xchg
cwtl
xchg
mov
pushf
mov
and
push
je
jmp
push
mov
fwait
mov
ret
sbb
jg
add
lcall
jo
and
or
icebp
push
cmp
incl
sbbl
and
repz
dec
lock
imul
inc
loope
add
jnp
jmp
mov
mov
push
jae
pop
or
and
movsl
out
inc
sar
add
fwait
enter
shlb
sub
lcall
inc
imul
cs
jmp
fwait
adc
jmp
cmp
cmpsb
ljmp
xor
pushf
cwtl
xchg
and
imulb
js
inc
mov
push
push
cmp
and
in
add
dec
mov
dec
cmp
mov
inc
and
shlb
sbb
in
and
aaa
push
mov
lods
dec
adc
cmp
jo
ja
cmp
xor
pusha
push
aaa
inc
xchg
mov
fistl
cmc
mov
inc
dec
call
cmp
insb
push
pop
mov
loope
lods
cmp
mov
adc
xlat
mov
xchg
outsl
cli
fcomip
cmp
add
test
les
mov
cld
mov
mov
lds
rclb
nop
lcall
mov
mov
mov
push
call
in
mov
xchg
pop
call
cld
inc
movsl
test
js
adc
sbb
mov
or
lods
enter
data16
clc
mov
cwtl
imul
push
cmpsb
add
adc
sti
rcrb
mov
sbb
jmp
xchg
xor
xor
inc
aam
sbb
outsb
hlt
sbb
inc
rolb
int3
push
pop
add
pop
add
push
mov
mov
and
mov
mov
cltd
and
sub
call
lods
and
lret
imul
xchg
ret
jmp
cmp
push
pop
popa
push
mov
mov
cli
push
hlt
mov
movsl
xor
ljmp
lods
jbe
xchg
inc
ss
data16
adc
lcall
adc
and
pop
sbb
push
es
fdiv
mov
adc
adc
jge
pop
xor
jp
cmpsb
arpl
fwait
jle
add
xchg
psubd
and
cmp
lea
pop
orb
lcall
data16
mov
cmp
sub
mov
xor
dec
cmp
lods
cmp
pop
sub
sub
movsl
test
xchg
enter
pop
rcl
das
ds
pop
sbb
pop
js
push
mov
add
outsb
scas
or
add
xor
xor
or
xchg
mov
cmp
xor
jmp
push
xchg
push
fisttpl
jns
mov
mov
insl
jp
lods
xchg
fdivrl
insl
les
dec
lahf
jge
es
jmp
jecxz
adc
mov
test
add
jl
pop
daa
mov
jmp
xchg
push
pushl
xchg
mov
xor
cld
push
lods
ret
mov
lods
ret
push
adc
fbld
push
jae
sub
pop
sbb
push
push
icebp
sub
pop
add
cli
push
mov
int
das
js
xor
cmp
xchg
call
loop
jge
jp
adc
std
lret
cmp
cmpsb
cs
ja
scas
mov
or
std
aas
pushl
inc
fidivl
pop
sbb
push
orb
sbb
shll
ds
fcomip
repnz
cmp
mov
shl
mov
add
push
sub
pushl
js
movsl
xor
mov
inc
xor
cmp
push
insl
sbb
popf
pop
mov
lret
leave
mov
loop
cmp
adc
loopne
and
pop
and
into
xchg
push
xchg
mov
mov
pop
xchg
int3
jnp
out
xor
and
jge
sar
call
call
nop
lods
jle
stos
adc
push
pop
and
call
xor
pop
push
ret
ja
cmp
fildll
xor
arpl
push
adc
imul
pop
mov
add
inc
pusha
push
je
sbb
cmp
rcll
dec
mov
adc
xchg
jg
inc
xor
jge
inc
mov
and
mov
fstl
aas
mov
mov
inc
pop
jmp
cld
mov
stc
imul
aaa
xchg
stc
push
add
mov
ljmp
out
dec
loop
sub
sti
scas
addb
push
add
mov
mov
mov
pushl
xchg
mov
dec
neg
dec
imul
push
ret
inc
or
clc
xor
les
cmp
ret
jbe
mov
cmpsb
pushl
sbb
jbe
pop
arpl
mov
mov
jg
mov
xrelease
daa
out
cmp
push
and
xor
jns
fsubrs
jg
xchg
adc
fdivrp
int
mov
shr
cli
or
mov
jmp
push
ds
repnz
adc
icebp
push
popa
rcr
cmp
cmp
sub
fisubl
fsubrs
mov
sbb
cmp
jl
push
sti
jg
in
mov
out
roll
fadd
sub
ss
jg
push
or
mov
pop
push
xor
cwtl
push
adc
push
aad
movb
pop
push
xor
inc
ret
add
cltd
or
or
mov
dec
add
cli
xor
mov
add
push
movsl
lds
dec
movsb
or
nop
int
push
jno
in
mov
iret
push
in
inc
stc
pop
xchg
jecxz
jle
aam
clc
sar
jg
inc
lock
dec
mov
or
mov
call
mov
dec
mov
lret
xchg
rcl
in
xchg
jmp
insb
pop
mov
sbb
adc
loop
dec
xchg
push
xchg
es
filds
mov
sbb
in
pop
ret
pop
mov
sub
incl
mov
fildll
dec
push
repz
jg
add
xchg
movsb
push
jl
in
fdivs
pop
mov
aaa
into
in
fnstenv
inc
mov
mov
or
dec
mov
sar
pushl
inc
and
jge,pt
jae
roll
dec
mov
mov
movswl
jno
adc
mov
sbb
in
adc
sti
or
ljmp
icebp
in
stc
add
and
cld
rep
add
les
cs
xor
out
xchg
jo
inc
push
out
nop
decl
rorb
shl
push
outsl
mov
icebp
sub
adc
jecxz
mov
decb
negb
nop
lds
inc
xchg
icebp
ret
add
pushf
xchg
cmp
or
lcall
and
adc
sbbb
mov
inc
lea
xor
sub
test
jb
inc
or
adcl
rcl
push
test
das
shlb
dec
xor
mov
xchg
es
mov
jo
iret
xchg
ljmp
test
and
xchg
push
adc
ljmp
and
sub
jne
sub
or
fidivrs
inc
cmp
je
xchg
pop
shrb
mov
jmp
cli
or
pop
rorb
jg
int3
xchg
pushf
cmp
sub
stos
test
test
mov
push
pop
dec
sub
pop
mov
pop
pop
js
mov
lock
add
xor
decl
sub
push
or
lret
sbb
lcall
jb
jb
cs
fisttpl
cmp
sbb
outsb
or
cwtl
dec
test
ljmp
cmp
xchg
mov
imul
ss
xchg
clc
inc
push
cltd
sbb
mov
cmp
pushl
dec
cmp
repz
jecxz
clc
into
jae
in
push
xchg
inc
std
push
int3
out
vandpd
lcall
adc
pop
and
cli
out
clc
cltd
ret
test
ret
loope
and
mov
sbb
ficomps
in
inc
sbb
or
stos
mov
int3
xorb
adc
test
bound
mov
inc
fdivrs
mov
addl
fdivrl
fsubp
fwait
outsl
cmp
das
fmull
lret
pop
mov
xor
ds
adc
and
divl
adcb
dec
leave
or
or
pushl
aam
mov
leave
movsb
and
loopne
pop
inc
push
cli
xor
lcall
pop
cmc
lcall
jb
push
lea
pop
fmull
xchg
lret
stos
jbe
sub
pop
jno
rcrb
icebp
jmp
inc
mov
nop
cmp
lcall
sti
mov
sbb
in
xchg
fcomi
fbstp
and
xor
jae
lods
stos
pop
fsubp
xor
lcall
fistps
imul
insb
push
xor
mov
icebp
int
sbb
out
dec
inc
stos
mov
loopne
xchg
jae
icebp
mov
leave
pusha
js
out
enter
dec
cltd
lret
sahf
adc
mov
pop
pop
loope
mov
and
call
jp
inc
ret
in
call
xchg
int3
push
ret
mov
dec
imul
or
add
jmp
sub
hlt
imull
or
test
lcall
movsb
mov
dec
mov
xchg
rolb
lcall
cld
ljmp
jg
push
loope
push
sahf
in
add
and
dec
call
test
inc
push
adcb
adc
dec
test
in
daa
cmp
outsb
push
jg
fsubl
call
lock
fwait
loop
in
cmp
jbe
and
in
dec
and
call
mov
push
ret
push
mov
dec
mov
or
out
mov
add
clc
stos
pop
mov
out
scas
or
sub
mov
push
cs
ljmp
mov
mov
subl
sub
addr16
out
repz
dec
mov
mov
push
or
jne
ds
push
insb
hlt
inc
shrb
fsubrs
jecxz
xchg
or
into
lds
incl
mov
jne
cmp
sbb
lcall
ret
mov
lret
rclb
mov
xor
and
arpl
inc
sub
push
inc
call
hlt
mov
jle
or
sub
test
and
shlb
sbb
xchg
mov
inc
test
sbb
shlb
js
decb
or
mov
das
sub
mov
cmp
jo
adc
push
mov
cmp
dec
push
mov
incl
push
push
cmp
push
mov
jbe
and
movsl
push
sub
add
lcall
add
gs
shlb
lahf
dec
inc
xor
bound
out
jbe
xchg
jb
ret
xchg
addl
lcall
dec
cs
mov
enter
stos
gs
mov
dec
in
pop
pop
sub
push
repz
lcall
loope
sti
mov
mov
int
or
mov
stos
mov
cmp
push
dec
lcall
jae
icebp
movsb
cmpsl
insb
or
and
pop
or
sub
push
in
add
mov
call
mov
jns
mov
adc
ljmp
xchg
sbb
lock
mov
pop
cld
ret
sbb
lcall
xchg
mov
imul
loopne
inc
pop
subb
mov
sbb
std
cmp
mov
push
sahf
sarl
cmc
movsl
mov
pop
xchg
push
mov
es
jle
popf
sbb
mov
je
mov
inc
add
lret
or
int3
sub
dec
testb
pushf
pusha
or
inc
xlat
aas
test
inc
lods
sub
xor
incl
sbb
pop
pop
sub
add
jb
cwtl
in
add
or
and
pop
xchg
xchg
pop
pushl
jno
jnp
add
bound
das
mov
or
adc
clc
loope
xor
call
fs
addr16
push
sub
std
idivl
mov
sub
pop
xchg
cmpsl
ret
filds
jbe
mov
push
btr
mov
out
clc
ja
es
mov
push
jecxz
inc
or
mov
lcall
loopne
cmp
mov
icebp
in
or
adc
ret
cli
push
jnp
lcall
sub
dec
and
popa
mov
inc
xor
jmp
cwtl
enter
or
ret
and
inc
add
or
mov
cmp
jmp
mov
push
or
inc
int3
movsl
adc
jno
int
push
nop
mov
sarb
xor
add
push
inc
out
sbb
xchg
imul
sub
into
int3
lcall
movsl
lcall
mov
xor
xchg
test
dec
cmp
loope
fsts
mov
xchg
jae
cltd
mov
inc
dec
nop
xchg
xchg
mov
push
ficomps
scas
add
or
aad
fbstp
dec
sub
data16
ja
test
imul
push
add
push
test
xchg
xchg
add
fs
bound
jmp
shll
subl
pop
sub
or
dec
lfence
negl
outsl
cmpsb
mov
sbb
xchg
sarl
mov
add
inc
rcrl
inc
lret
sar
xor
pop
lret
dec
inc
testb
inc
push
loope
test
mov
or
hlt
sbb
push
inc
inc
call
mov
jnp
add
mov
jmp
add
cmpsb
shr
cmp
jb
mov
bound
inc
or
push
les
sub
push
fdivl
xor
test
ljmp
jbe
stos
cltd
sbbl
test
pop
add
mov
jns
incl
scas
push
push
push
xchg
jnp
dec
pop
jae
adc
xchg
lret
mov
xchg
inc
sbb
jmp
fwait
add
loope
pushf
mov
pop
dec
push
loopne
mov
in
stc
lods
js
and
cmp
and
cmp
or
imul
fadds
push
pop
je
mov
cmpsl
dec
fwait
mov
jae
jp
call
loopne
inc
sub
xor
mov
push
fdivl
insb
and
outsl
nop
lcall
jbe
dec
mov
scas
jg
mov
push
in
mov
xor
mov
dec
sbb
sub
sub
xchg
test
idiv
xchg
cmp
add
sbb
adc
movsl
pop
rorb
pop
cli
lea
add
adc
add
push
decl
inc
adc
cmovo
lsl
lock
add
or
xchg
dec
cmp
pop
mov
or
incl
cld
inc
mov
bound
inc
clc
sbb
jge
movsb
xor
add
mov
lret
dec
stos
jmp
mov
jg
int3
adc
lock
push
jl
and
rorl
bound
xchg
nop
sbb
adc
adc
lcall
mov
mov
adc
loope
adc
call
push
stos
nop
mov
adc
icebp
icebp
sub
call
ljmp
push
mov
mov
jg
lock
outsl
push
rcrl
lahf
fistpll
xchg
or
hlt
lods
cltd
test
sub
adc
rcll
movsb
jmp
mov
lods
lret
insl
shlb
out
je
cs
call
sub
sbb
xor
leave
mov
into
cmp
pop
cld
add
arpl
sub
sbb
cmp
or
sahf
pushf
ss
cmp
pop
and
mov
lahf
fs
or
subb
cmp
xchg
ljmp
lods
loop
xor
jne
sbb
mov
mov
push
stos
mov
inc
leave
mov
sub
stos
lods
push
push
inc
lret
push
arpl
inc
loop
inc
sbb
das
rclb
rorl
or
sub
call
xlat
sub
dec
cmpsb
push
sub
sti
or
and
clc
in
cli
cmp
ljmp
lcall
cmp
push
sub
inc
mov
cmp
mov
mov
adcl
pop
enter
repnz
daa
in
mov
hlt
mov
insb
xor
cmp
cli
test
fistpll
aad
js
adc
loope
daa
mov
cs
lcall
adc
leave
fwait
icebp
ret
cmp
fwait
scas
xor
dec
int3
jae
gs
cmp
fcomip
sti
mov
and
add
dec
xchg
mov
jl
stc
dec
dec
cld
inc
add
fcomip
inc
xor
inc
add
jae
adc
jbe
jo
cmpsl
cmp
dec
dec
xchg
or
inc
les
hlt
add
push
adc
fisttps
sbb
mov
dec
std
xor
push
dec
shll
push
cmp
call
loopne
mov
sub
lds
mov
or
or
xorb
ljmp
xor
and
xor
push
sahf
fidivrs
mov
loop
incl
pop
mov
outsb
mov
ja
xchg
into
clc
or
jmp
or
mov
push
fsubrs
mov
lahf
jl
dec
outsb
sub
ficoms
decl
rclb
jl
lahf
cmp
xor
adc
mov
scas
jns
dec
mov
fbld
mov
into
ret
ljmp
clc
incl
dec
sbb
je
cmp
adc
dec
inc
ret
xchg
insb
dec
mull
jmp
sbb
mov
cwtl
mov
in
xchg
sbb
decl
inc
push
xchg
loop
cmpsl
xchg
add
xor
sbb
es
push
or
sub
add
popf
push
jmp
mov
test
in
push
mov
inc
xor
adc
adc
add
jge
and
push
mov
je
in
xor
jecxz
inc
subb
sub
add
xchg
loop
push
fstpt
int3
flds
popf
ret
xchg
dec
int3
and
mov
adc
inc
rorl
or
mov
lahf
mov
mov
incl
in
pinsrw
es
sti
or
jns
xor
movsl
mov
jb
xchg
loopne
into
mov
sub
mov
test
lods
call
aaa
dec
sar
inc
mov
loope
negb
adc
scas
and
decl
push
comiss
lret
push
int
mov
jl
sti
cli
jg
in
iret
addr16
cmp
sub
adc
cmp
cmpsl
sub
outsl
jo
std
dec
stc
jo
xor
add
enter
jg
sbbb
scas
xor
adc
test
or
fs
sub
dec
cmp
ljmp
sbb
mov
imul
adc
push
lret
jae
fldl
mov
pop
hlt
pushf
mov
mov
cmp
jmp
xor
aas
sbb
or
pop
and
push
or
sahf
inc
xchg
sbbb
mov
es
jl
and
inc
mov
enter
mov
xor
or
lcall
pop
or
cmp
aaa
sub
sbb
adc
sbb
in
fnstcw
jnp,pn
pop
testb
mov
call
in
test
inc
test
inc
out
ret
fwait
sbb
mov
cmc
and
insb
iret
push
lds
jle
aaa
dec
cmp
sti
scas
fs
ss
mov
cmp
test
push
outsb
das
lcall
xor
call
xor
mov
mov
inc
mov
js
add
ror
mov
call
scas
or
jmp
jno
xor
shl
mov
xlat
mov
daa
adc
lcall
lds
mov
lcall
pushf
ljmp
adc
test
mov
jl
fistl
push
mov
lahf
shll
push
mov
imul
mov
sub
mov
cmp
bound
es
ljmp
xor
sbb
or
jns
sahf
cli
mov
mov
push
fistpll
fists
fisubl
and
fstpt
jne
ret
or
jge
mov
jns
cmp
inc
popf
dec
cwtl
insl
push
pop
sti
imul
out
add
mov
add
in
cmc
incl
sbb
movsb
rcll
ficoml
pop
add
inc
cmpsb
shll
adc
pusha
stos
int
in
dec
insl
push
scas
cmp
inc
pop
mov
outsb
imul
inc
mov
add
add
or
sbbb
add
push
subb
jle
pop
call
push
ljmp
mov
in
rorb
loope
mov
lcall
mov
dec
lea
popf
pop
xor
xchg
lock
repz
or
leave
sbb
decl
mov
adc
arpl
sub
out
cmp
xor
decl
mov
sbb
or
dec
xchg
mov
imul
cltd
addb
fimuls
in
cmp
sahf
shlb
jmp
ds
fs
xor
push
adc
jo
fisubrs
test
lret
fcomps
sbb
je
test
xor
stos
fstps
aam
decl
or
jmp
jmp
mov
outsb
xor
pop
sub
mov
call
clc
hlt
rdpmc
les
adc
lods
jne
stos
dec
loop
imul
ficompl
stos
mov
ljmp
add
jb
push
mov
pushl
lcall
nop
subl
sub
add
orb
and
lahf
mov
leave
call
mov
bound
adc
mov
mov
xchg
add
adc
push
inc
das
clc
push
mov
ret
lret
jmp
xchg
push
xlat
and
mov
cld
xor
mov
pop
pop
mov
dec
push
sbb
and
in
cs
sub
sub
sub
aam
fdivp
adc
dec
jecxz
negl
push
push
lahf
out
mov
fdivrl
mov
cmp
xorl
ljmp
and
loop
inc
movsl
scas
push
mov
adc
mov
mov
pop
ljmp
and
mov
mov
cmpsb
in
scas
aam
gs
andl
mov
imul
scas
mov
fistpll
arpl
sbb
push
jno
sbb
aad
jnp
ficomps
incl
and
sbb
adcl
in
jo
pushf
add
pop
and
or
push
movsb
xchg
adcl
decl
jnp
dec
xor
pop
adc
add
out
dec
push
inc
aam
cwtl
xchg
add
decl
cmp
pushf
std
fsts
into
int
test
pop
xchg
sbb
inc
or
inc
pop
pop
fdivr
mov
ljmp
ret
ljmp
mov
xchg
push
call
js
int3
add
sub
cmp
pop
jno
xor
in
out
shll
sbbw
inc
and
cli
inc
in
lahf
xchg
or
xor
addr16
push
fucom
mov
popf
cmp
lea
mov
sti
jmp
mov
sbb
cs
sbb
fwait
test
add
frstor
lret
gs
mov
int3
test
jbe
jle
mov
and
pop
insl
or
mov
stos
adc
inc
mov
adc
push
and
xor
lcall
rcrb
xor
jecxz
inc
jg
or
push
and
sbb
fninit
jmp
dec
adc
pop
adc
adc
lret
fldenv
loop
xor
push
inc
sar
sub
repz
mov
sub
mov
int3
xor
outsb
sub
call
aaa
rclb
mov
inc
aas
rcr
adc
loope
cwtl
push
stos
nop
inc
jl
ljmp
leavew
jmp
inc
cmpsb
jnp
mov
sar
push
dec
pusha
xchg
inc
sbb
jmp
ljmp
lock
sub
movsb
or
jne
mov
xor
mov
push
out
push
movswl
sbb
std
lock
stc
push
cmc
dec
icebp
pop
push
pop
into
jbe
jmp
popf
div
aam
jl
lcall
dec
cmp
adc
adc
push
ljmp
fcoms
ds
les
add
loope
inc
xor
ljmp
fcoms
push
pushf
test
std
push
cmp
push
test
xor
insl
stos
push
fsubrl
push
cmp
pushl
daa
mov
das
out
rcrb
aam
aas
push
in
inc
lcall
lds
clc
incl
cmpsl
push
sub
lcall
push
and
addr16
push
movsl
cmpsl
mov
leave
cld
dec
jp
stos
insl
sub
stc
dec
sahf
hlt
inc
sti
xchg
cmpsb
out
xor
dec
cld
decl
add
popa
add
xor
loope
and
pusha
leave
xchg
adc
clc
and
test
clc
mov
xchg
hlt
adc
movsbl
mov
enter
xchg
adcb
jmp
and
sahf
and
shlb
dec
orb
jmp
mov
nop
lea
mov
cmc
stos
xlat
scas
cmp
pop
dec
dec
cmpsb
pop
push
in
fdivl
ja
cmp
jge
push
das
pop
mov
jmp
insb
mov
pop
xlat
mov
mov
fidivrs
sbb
ffree
cwtl
aaa
inc
jle
stc
scas
gs
inc
xchg
loope
jb
xor
xor
sarl
in
fsubrs
int3
mov
pop
incl
adc
mov
dec
loop
shll
out
cld
mov
or
into
ret
jp
cmp
pop
fs
pop
lock
loopne
cli
scas
daa
cmp
repz
and
shr
hlt
jle
sti
mulb
pushf
decl
and
adc
sbb
unpcklps
lcall
add
jge
jno
shlb
add
jge
push
or
rorb
sbb
or
into
cmpl
jb
xchg
mov
lret
call
cld
decl
cmp
push
js
cmp
xlat
rolb
push
loop
daa
mov
rol
pop
or
pusha
inc
or
add
movsl
adc
icebp
xchg
xchg
pusha
scas
add
mov
decl
xchg
inc
add
insb
jbe
rorb
adc
shlb
xchg
inc
sub
adc
daa
xchg
hlt
aam
dec
test
test
push
jl
loop
adc
std
and
mov
xchg
xchg
xchg
or
cs
inc
mov
mov
push
sbbb
test
cmp
xor
mov
inc
movsl
xor
jg
cmp
stos
pop
mov
dec
outsb
cmp
rcrb
sub
mov
inc
xor
pop
pop
shll
jmp
sub
negb
mov
and
fisttps
lcall
add
adc
ret
or
mov
fbstp
scas
mov
loope
inc
pop
js
jmp
mov
pushl
mov
jnp
jmp
call
clc
fldl
or
dec
mov
lcall
iret
pusha
add
push
nop
js
cmp
sbb
adc
lret
shlb
mov
pop
add
push
and
mov
push
push
dec
sub
jmp
shll
pop
je
dec
ret
enter
ss
adc
bound
test
cmp
int3
popl
xlat
add
lret
inc
pop
idivb
push
testb
ljmp
mov
popf
jns
inc
pop
into
ja
loope
mov
sbb
std
pop
xchg
dec
jmp
xchg
clc
or
int
inc
sahf
movsb
in
inc
push
push
adc
gs
lcall
jns
pop
xchg
push
dec
jg
push
test
aam
pushl
lds
cmp
push
data16
mov
mov
add
rorl
pop
mov
popa
adc
int3
outsl
mov
scas
call
shlb
mov
pop
mov
outsb
pop
jmp
and
loopne
mov
push
test
xchg
test
ror
psllw
adc
sti
jmp
and
je
out
stos
mov
ja
mov
fidivs
pusha
push
xchg
popa
not
inc
les
adc
call
inc
or
xor
mov
dec
dec
sub
insb
mov
cli
sbb
push
clc
incl
in
adc
and
push
dec
push
add
repnz
pop
daa
push
andl
addr16
inc
and
rcll
out
fisttps
adc
inc
or
or
jno
repnz
and
inc
clc
rclb
add
sub
decl
decb
adc
loop
xchg
cmp
add
jno
mov
lods
rorb
scas
cli
jg
leave
inc
lret
dec
les
leave
dec
out
out
push
and
xor
incl
adc
sub
inc
pushf
sbb
call
insl
les
call
sub
and
jo
aam
stos
push
scas
mov
incl
jno
scas
push
insb
leave
sbb
aad
pop
in
mov
stc
lcall
cmp
and
pop
lea
hlt
cli
push
sbb
jmp
jne
xor
pusha
push
and
xor
sbb
mov
sub
mov
in
mov
jecxz
sbb
lock
icebp
jecxz
mov
jo
fwait
divb
or
push
cmp
cmp
push
ret
rolb
mov
and
sbb
jbe
dec
jo
xor
xchg
or
adc
lods
inc
push
jl
std
inc
rcrb
roll
stc
mov
push
add
pushf
push
call
js
dec
inc
or
aad
aam
jl
mov
nop
addb
xchg
push
xchg
and
adc
inc
dec
push
insb
sub
fsubrl
mov
add
sbb
mov
and
cmp
inc
jp
test
cmp
cmp
test
jae
enter
pop
mov
push
rorl
xchg
out
and
lahf
inc
ljmp
and
and
push
pop
pushl
push
sahf
pushf
mov
in
ljmp
mov
xchg
jbe
xchg
push
je
int3
outsb
aad
xchg
cmpsb
int3
movsl
scas
sbb
hlt
jg
mov
pop
cmp
cltd
jge
add
int3
or
ret
xchg
jae
je
clc
ljmp
clc
call
outsl
fwait
pop
rcl
add
fmuls
call
outsb
or
add
mov
incl
fldt
dec
stc
pop
loopne
sbb
lahf
clc
xchg
inc
jecxz,pn
dec
into
mov
dec
sar
push
cmp
ljmp
lcall
mov
or
mov
sbb
and
jp
sbb
push
push
inc
adc
pop
push
repnz
inc
add
ljmp
push
or
dec
insb
xlat
cmpsb
mov
icebp
lret
insl
sub
mov
ljmp
dec
adc
jns
rcrl
ja
inc
cmp
xor
sub
mov
les
and
pop
cmp
movsl
push
ss
push
cwtl
push
dec
sbb
lret
lcall
nop
test
jl
sbb
mov
repnz
test
sub
mov
stc
or
mov
movsl
adc
ret
add
fildll
or
xchg
jmp
fxch
out
cwtl
mov
subl
ss
sbb
fwait
jmp
das
xor
inc
cld
mov
adc
popf
push
nop
xchg
jmp
repnz
cmp
xor
out
lahf
or
daa
sahf
push
push
scas
cmp
sbb
cmpb
inc
rolb
mov
ret
out
ds
adc
or
cltd
or
adc
call
mov
fs
sbb
inc
adc
sbb
cmpsl
mov
lods
jecxz
mov
xchg
lods
pop
lahf
dec
jp
adcb
lds
jae
loope
lcall
movsb
push
cmp
fwait
test
aam
stc
std
push
and
fcomp
xor
mov
push
adc
pushl
and
jno
dec
inc
addr16
dec
xchg
or
lods
test
popf
imul
call
rcr
cmp
xchg
pop
mov
cld
out
clc
int3
nop
sbb
lock
mov
aaa
cmp
loope
jns
popa
pushl
push
lods
mov
int
sub
xchg
int3
fsubrs
test
jnp
mov
mov
inc
xchg
clc
or
fldenv
push
call
sti
jae
ja
rcr
repnz
adc
out
cmp
lods
jne
cli
popa
jmp
pop
fcoml
sbb
andl
inc
aaa
mov
clc
leave
testb
cmc
sbb
cmp
or
pusha
push
call
enter
jnp
ffreep
push
push
cmp
lcall
div
xchg
daa
xchg
adc
jno
push
xchg
rcll
movsl
pop
dec
ljmp
cmp
rcrl
cmpsb
pop
sar
aas
mov
cltd
pop
outsl
dec
aaa
test
call
testb
mov
loopne
adc
scas
dec
lock
push
ljmp
fchs
and
scas
mov
mov
pop
shl
mov
incl
mov
out
sbb
pop
out
mov
popa
or
mov
xchg
repz
scas
xchg
mov
pop
movsl
std
cmp
adcb
fstpl
jg
out
fs
cmc
in
jmp
inc
insb
js
sbb
adcl
add
inc
mov
jno
xor
mov
js
inc
ret
call
jo
push
jns
fidivrl
lcall
cmp
jg
call
or
jno
inc
fiaddl
test
adc
jne
iret
leave
mov
fst
fimull
adcl
lea
cmp
shl
xchg
iret
test
jp
pop
jb
push
nop
adc
loop
mov
fisubrs
fwait
decl
lock
fsts
js
cld
push
mov
stc
xor
adc
xlat
call
lcall
fimuls
ljmp
fwait
mov
mov
call
inc
int3
fildl
lock
ljmp
mov
inc
push
sub
rorl
mov
outsl
push
pop
xchg
dec
test
dec
sbb
popa
xchg
lcall
repnz
mov
popa
pusha
fldenv
sub
xchg
test
decl
mov
jmp
mov
inc
pop
xchg
xchg
sahf
in
gs
lret
mov
add
fildll
push
sarb
sbb
add
and
mov
or
jo
pop
mov
sarl
cmc
xchg
jmp
lret
sub
dec
sbb
pop
ja
push
aad
pop
adc
std
fidivrs
stc
or
xchg
jl
xlat
enter
xor
push
outsl
mov
pushl
dec
inc
add
int
push
dec
push
adc
xchg
or
inc
rcll
push
jmp
pop
cli
sub
adc
jmp
inc
pop
add
popa
sbb
and
jg
insb
shll
popa
test
mov
push
push
into
lret
mov
cmc
incl
inc
hlt
int
mov
mov
adc
sahf
nop
sahf
es
push
daa
cli
cli
pop
call
bound
xchg
and
repz
pop
jno
xor
call
xchg
popa
mov
xchg
fstpl
mov
cli
mov
sub
pop
scas
cld
ljmp
push
jbe
ljmp
popf
fstps
sar
cltd
push
pop
adc
lret
cmc
lds
dec
inc
pop
ret
push
sub
jmp
das
add
insb
cmp
jo
mov
lcall
ss
aaa
mov
mov
aaa
adc
push
or
shlb
push
adc
push
outsb
lea
aam
mov
movsl
cmpsb
mov
dec
inc
inc
frstor
fsubl
shlb
aam
fdivr
decl
js
mov
cmp
inc
and
mov
inc
es
and
inc
push
push
fs
fwait
mov
pop
add
jle
fcmovne
pusha
cmp
out
xlat
sbbb
lcall
hlt
sbb
sbb
sbb
mov
fs
dec
enter
xchg
arpl
xchg
dec
xor
movsl
and
jg
dec
shlb
jne
and
and
mov
icebp
stc
xchg
mov
movsl
call
loope
cmpsl
out
clc
incl
sbbl
cmp
and
and
mov
mov
and
fcomps
push
mov
in
fcompl
or
inc
cmpsb
icebp
mov
xchg
pop
pusha
cld
int3
mov
in
call
jb
out
xor
roll
xchg
mov
clc
lret
jg
call
addl
jp
push
out
movb
lock
jecxz
inc
pop
dec
cmp
pusha
jbe
push
dec
ret
sahf
leave
push
sbb
je
mov
rol
dec
and
inc
push
cld
jmp
sbb
dec
movsb
dec
adc
inc
mov
and
inc
mov
or
aaa
cld
adc
mov
dec
mov
dec
push
xchg
call
adc
xchg
push
add
and
jno
out
rolb
inc
cld
lcall
inc
lea
nop
lret
shl
push
dec
movsb
push
bound
movsl
push
xchg
loopne
jg
and
jbe
call
push
insb
lcall
gs
in
sub
mov
enter
ljmp
testb
call
jle
divl
pusha
fcompl
mov
call
sbb
les
in
adc
scas
xor
insb
faddl
xchg
add
scas
pop
and
ficoml
orb
mov
or
push
insb
out
dec
sbb
nop
inc
push
sbb
push
fistpl
in
pushf
jmp
aad
cmp
addb
cmpsl
or
add
mov
cs
test
xor
cld
mov
pushf
cs
add
jne
dec
push
adc
mov
mov
in
mov
cwtl
movsl
xchg
and
shll
pushl
ficompl
jb
dec
push
fadds
pop
dec
lret
cld
and
xchg
inc
mov
and
scas
mov
lcall
dec
je
mov
scas
xor
cmp
adc
repz
push
or
dec
test
inc
or
and
gs
imull
fwait
fwait
hlt
xchg
movsl
pop
mov
fists
mov
scas
nop
mov
and
stos
xchg
sbb
xor
push
sub
jmp
lods
shr
sbb
fwait
xor
jne
xchg
inc
imulb
dec
stc
and
ret
adcb
pop
lock
in
popf
pushw
out
jmp
push
inc
xchg
outsb
outsl
cmc
push
sbb
rorb
ror
cli
decl
mov
fsubl
cmpb
shl
cmp
imul
std
mov
xor
jbe
or
movsb
add
inc
or
cmpl
xor
in
stos
cs
iret
or
pop
mov
in
scas
adc
adc
dec
cmpsb
xchg
adc
loopne
mov
les
push
fcoml
adc
dec
lock
inc
or
jmp
es
sub
call
sub
loop
adc
sbb
mov
sub
daa
jmp
int3
adc
inc
push
or
cmpsb
push
loopne
dec
pmaxub
pushl
jecxz
outsb
jecxz
test
stos
jecxz
xor
xchg
mov
sbb
nop
jb
cs
lcall
fisttps
outsb
sub
cltd
mov
add
fisubrs
rolb
add
mov
incl
sbb
gs
insb
jmp
lods
shll
mov
decl
cld
push
aaa
xchg
and
inc
lods
pop
push
outsl
xor
inc
cmp
sbb
leave
rclb
mov
pushl
xchg
int
outsl
stos
nop
test
lods
jg
mov
incl
je
test
loop
int
aam
jno
iret
xor
inc
push
mov
cmpsl
inc
outsl
sarb
fisttpl
popa
jmp
out
and
test
cmp
push
decl
daa
fstps
inc
ljmp
jecxz
mov
in
roll
in
ljmp
adcl
xor
scas
outsb
repnz
and
jb
push
adc
mov
push
cmpsl
and
dec
sbb
clc
mov
imul
aam
xchg
mov
inc
enter
pop
loope
and
scas
xchg
pop
aad
in
xor
jmp
shrl
gs
lret
cmc
sbb
cmp
lret
fldenv
or
mov
mov
push
sbb
enter
clc
jns
std
cwtl
loopne
in
movsl
and
lock
sar
xlat
dec
fcmovb
enter
nop
loop
pop
push
addl
outsb
call
movsb
enter
lcall
out
xor
push
dec
add
xchg
add
mov
mov
cmp
fisubrl
push
xchg
sub
pushl
shl
xchg
sub
pop
loop
das
inc
dec
adc
fimuls
push
shll
jmp
leave
decl
inc
mov
call
movsb
sbb
jmp
push
add
cmc
mov
test
inc
add
or
sbb
mov
add
hlt
jb
xchg
in
lock
push
rclb
decl
mov
pushf
arpl
sbb
mov
inc
push
fst
and
inc
or
inc
dec
mov
outsb
data16
mov
jno
ds
mov
xchg
sub
and
add
jae
mov
push
mov
xchg
sub
pushl
stos
out
dec
mov
lret
dec
nop
pusha
int
lahf
dec
mov
test
sar
fwait
decb
int3
cmp
jne
jns
push
adc
add
in
sub
jns
incl
dec
arpl
jb
xor
inc
xchg
and
outsb
adc
fmull
jns
loope
fstps
data16
call
or
jg
rorb
push
cli
mov
mov
call
adcl
aam
lea
mov
xlat
les
cmpsb
xchg
or
push
pusha
fdivs
add
es
sbb
lods
push
cmp
and
inc
add
jmp
cmpl
int
mov
mov
dec
xorb
push
xchg
push
gs
pop
and
cmpsl
jl
cmpsb
test
inc
fdiv
push
push
add
gs
ret
jg
int3
jmp
mov
xlat
and
mov
iret
mov
lret
insb
cmp
out
incl
lcall
inc
xor
scas
insb
add
fildl
dec
decl
sbbl
test
jb
dec
jae
aam
adc
push
push
ret
decl
add
push
adcl
jg
stos
add
test
mov
test
aam
push
mov
add
orl
incl
mov
and
push
or
jge
xchg
mov
cmp
push
cmp
into
push
mov
mov
sbb
pop
aaa
mov
push
xorl
fcomp
jb
mov
inc
shr
pop
adc
jmp
xchg
inc
in
or
lcall
lods
stos
ljmp
out
movb
and
push
add
add
and
push
lret
adc
add
out
xlat
dec
jns
or
lahf
pop
in
adc
out
xchg
imul
lcall
sub
dec
cmp
xor
xor
inc
insl
daa
xchg
xor
jo
decl
lea
loope
adcl
bound
xchg
shlb
sar
lcall
sbb
divl
loopne
jge
sbb
je
dec
pushl
dec
xchg
xor
jl
jo
jno
popf
or
movsl
inc
pop
movsb
std
call
jle
jno
jge
shl
test
nop
dec
fdivl
adc
outsl
movl
icebp
ja
push
adcl
and
sbb
call
or
cld
or
cmp
rcr
pop
movsb
push
cmp
sbb
mov
xchg
popa
mov
je
mov
ljmp
mov
aad
mov
sbb
or
xlat
js
call
pop
mov
or
lcall
bound
repnz
ss
gs
push
cmp
jne
jno
test
dec
xchg
jg
stos
mov
insb
dec
jmp
lret
ljmp
stos
inc
mov
mov
aaa
cs
imul
sbb
xsaveopt
pushf
incl
lret
mov
imul
bnd
das
scas
xchg
mov
dec
pop
lcall
jmp
mov
imul
mov
out
pushl
xor
cwtl
lods
mov
jl
dec
test
les
dec
push
pusha
pop
fs
inc
sbb
int3
cwtl
mov
lods
push
push
mov
mov
std
pushl
into
sbb
mov
sub
sbb
call
mov
inc
add
pop
xchg
out
jle
mov
decb
pop
push
daa
and
push
inc
jmp
lcall
out
cli
fsubr
adc
inc
pop
cmp
push
push
pop
add
lret
pop
popa
les
loopne
inc
sbb
pop
stos
cltd
clc
xor
inc
sub
aam
jl
lock
imul
dec
aas
aam
mov
dec
jmp
cmc
mov
lods
xor
mov
adcl
xchg
sub
jl
repz
fisttps
mov
or
mov
push
test
xor
loope
mov
dec
mov
jmp
mov
clc
ret
xlat
lods
ljmp
mov
sbb
in
fbstp
ja
add
je
rep
pop
adc
mov
in
cmp
jmp
mov
cmp
dec
jecxz
xchg
pop
cmovns
in
je
in
call
out
fisttps
ds
jge
sarb
cmp
push
bound
sti
loop
call
rol
cmp
loopne
jo
jmp
mov
cld
mov
add
test
pushf
and
xchg
adc
test
sbbb
cmp
call
push
stos
pushf
cmp
roll
dec
es
mov
jge
jno
add
hlt
mov
inc
enter
icebp
inc
sbb
sub
cmpb
decl
and
imul
pop
pop
mov
fidivrl
add
adc
psrad
dec
xor
mov
add
out
and
enter
xor
test
mov
adc
sub
cli
insb
mov
fisttps
test
jb
mov
add
icebp
dec
add
push
mov
pop
cmp
mov
mov
test
mov
pop
or
dec
push
mov
mov
push
dec
ret
aam
cld
cmp
push
sbbb
dec
std
rclb
mov
fdivrp
ficoml
aaa
ficomps
dec
push
mov
int3
xchg
pop
hlt
lcall
mov
sub
inc
adc
es
dec
sub
aam
or
loopne
pushl
push
fildll
push
mov
and
in
negb
idivl
dec
jecxz
xchg
push
push
add
mov
mov
mov
cmp
lcall
push
psraw
xor
mov
or
or
out
adc
cmp
xchg
stc
mov
xchg
divl
add
fmull
int
dec
sbb
or
mov
call
dec
sbb
add
pop
and
dec
cmp
cmpsl
mov
out
cwtl
pop
jb
and
repnz
insb
dec
xchg
les
lds
stos
dec
leave
es
ljmp
insb
bound
sbb
mov
rorb
ss
pop
mov
dec
les
mov
pop
jmp
mov
shll
aas
int
cmp
mov
mov
or
push
xlat
and
push
cmpsl
rcrb
dec
jnp
add
cmp
xlat
popf
dec
push
test
gs
call
test
push
iret
dec
jecxz
dec
mov
fdivs
cs
mov
fcomip
jbe
jge
addb
mov
jne
popf
subl
xchg
mov
lret
out
fwait
mov
push
outsb
fsubs
and
dec
std
lock
mov
push
and
inc
add
gs
lahf
ret
and
mov
mov
push
or
dec
jno
pop
int3
outsb
adc
xor
aam
push
mov
ret
js
xchg
pushf
mov
inc
and
xchg
jbe
mov
jmp
loope
sbb
jg
sbb
adc
lea
dec
push
jmp
jmp
push
test
jo
or
clc
int3
lock
xor
cmp
mov
fdivs
ds
sbb
mov
imul
call
stos
mov
mov
mov
gs
jl
stos
adc
sub
dec
pop
jmp
pop
movsb
call
cmp
add
xor
jp
insl
push
ja
leave
in
out
clc
mov
xchg
adc
lea
cmpsb
push
out
rcrb
jne
cmpsb
je
fs
sbb
cmp
ljmp
pop
xchg
lret
jg
sbb
pop
outsb
sub
popf
mov
int3
cmp
adc
mov
lcall
pop
cli
in
addr16
add
clc
and
test
xchg
js
push
int3
sti
clc
out
call
mov
sbb
mov
cltd
je
cld
mov
aas
dec
fcom
add
mov
pushf
sbb
pop
data16
jg
push
fldenv
pop
lock
mov
ljmp
xor
inc
repz
dec
inc
pop
ds
dec
push
xor
daa
lods
gs
push
push
xlat
inc
xchg
ss
cwtl
aas
insb
adc
jg
sbb
mov
inc
add
imul
lcall
pop
adc
jns
ds
xor
push
sub
lods
push
sbb
stos
sub
jmp
inc
or
fwait
and
add
call
test
stc
mov
jb
outsb
pop
leave
jg
jnp
and
dec
dec
cmp
mov
je
add
shrl
xchg
pusha
std
or
pushl
stos
movsl
push
in
rcrb
into
xchg
dec
sbb
mov
popa
insb
roll
and
lahf
cmpb
jne
mov
jg
xchg
dec
cltd
or
push
dec
stc
popa
xchg
xchg
fstps
pop
push
aaa
scas
pop
adc
jmp
pop
add
and
xor
incl
mov
mov
cmp
movsl
jle
add
scas
add
enter
add
outsb
adc
inc
cmp
add
lcall
xor
movsb
out
dec
dec
xchg
push
push
jnp
inc
sub
inc
movsb
inc
sbb
mov
fdivrp
push
xchg
enter
out
adc
xchg
sub
and
aas
dec
add
ja
or
out
xor
adc
sbb
push
and
sbb
push
xchg
mov
cmp
mov
cmp
cwtl
shr
jg
stos
outsl
mov
pop
pop
les
dec
popa
int3
hlt
insb
loope
jmp
pop
mov
fs
ret
sub
xchg
mov
xchg
push
outsl
cmc
decl
or
in
pop
stc
cmp
xor
fs
ud0
push
cwtl
les
insb
sub
nop
push
pop
out
popa
sbb
aad
push
rcr
mov
mov
jmp
sahf
jle
xchg
bound
int3
mov
pop
mov
fwait
aas
cmp
pushl
jl
int
pop
repz
dec
pop
sub
xchg
push
arpl
adc
sub
cmp
je
jecxz
mov
or
sub
decb
sbbb
pop
dec
aam
cmp
cmp
ljmp
bnd
test
clc
jp
push
into
lcall
insb
sub
or
push
je
sub
and
and
inc
faddl
dec
lcall
pop
ljmp
add
movsb
std
adc
add
lret
mov
dec
pusha
in
ljmp
or
push
sub
jae
add
mov
ljmp
mov
add
ss
pop
pop
add
or
jmp
daa
sar
cwtl
fldt
jae
popa
mov
clc
pop
sbb
sbb
sub
outsl
cli
inc
push
fadd
dec
mov
jmp
fsubrs
xchg
out
sub
ret
sub
shrb
inc
add
pop
popf
inc
enter
cmp
inc
lcall
cmp
pushl
xor
outsl
insl
insb
popf
jns
add
xchg
jno
mov
pop
or
pushf
cmpb
rorb
pop
cmp
jmp
subl
inc
cmp
jb
pop
push
inc
aaa
imul
push
pop
ljmp
imul
and
loop
loop
mov
xor
loopne
or
call
and
and
push
push
movsl
mov
and
xchg
mov
ret
sbb
xor
sahf
lcall
push
mov
in
js
mov
mov
incl
fwait
push
out
cmpsb
lret
ss
int3
arpl
ja
xchg
mov
inc
loope
imul
adc
mov
decl
out
enter
xchg
aas
cltd
mov
out
mov
pop
mov
push
xor
mov
xor
dec
sub
mov
incl
stos
pop
adc
push
inc
mov
ficoml
cmp
push
mov
pusha
bnd
pusha
in
out
inc
decl
add
and
mov
lret
inc
add
movsl
ljmp
or
mov
in
inc
or
in
xor
mov
icebp
jbe
ret
lock
stos
ret
call
add
ds
mov
and
in
xor
nop
or
jg
inc
dec
enter
xor
les
mov
add
in
les
hlt
cmpsb
mov
stos
or
incl
inc
inc
add
add
mov
lcall
mov
enter
adc
adcb
xchg
mov
sub
mov
int
mov
loop
add
add
dec
xchg
xor
incl
xchg
ljmp
adc
das
xor
setbe
mov
pop
scas
and
jp
cli
loopne
xchg
test
int3
je
je
sarb
xor
and
pop
iret
fldt
sub
imul
dec
in
out
ljmp
in
dec
inc
xchg
or
pop
cmc
dec
cmp
int3
incb
mov
incb
push
popf
fsubrs
xchg
outsb
rcrb
popf
or
inc
or
mov
adc
repz
je
add
rolb
shlb
leave
rclb
and
in
dec
enter
xchg
or
add
outsb
pushl
shlb
ror
dec
clc
rcr
and
decl
movsb
inc
lret
or
xchg
or
push
add
inc
add
xchg
sub
sbb
lret
inc
add
fcmovu
stos
push
push
fs
movsl
lods
sub
push
sbb
aaa
cld
ljmp
fsubr
jb
ret
adc
xor
je
movsl
add
push
pop
add
mov
aam
repnz
xchg
dec
cmp
xchg
sub
mov
std
aaa
cld
scas
outsb
ret
clc
and
dec
out
jbe
dec
xchg
movsl
or
add
adc
mov
ja
outsl
js
push
subb
push
or
xchg
cld
cmpsb
cmpsl
stos
decl
jmp
sub
sahf
add
mov
add
inc
dec
scas
mov
leave
incb
shlb
cmp
sahf
adc
out
out
push
int
int3
jbe
add
pushl
iret
xchg
rcrl
test
fs
dec
add
xor
out
jmp
in
sub
loop
mov
adc
aaa
or
rol
jp
xor
mov
push
ds
pop
enter
enter
or
xchg
dec
not
cmp
out
clc
jmp
jl
xchg
sbb
lock
and
in
lret
and
stos
sub
ljmp
push
mov
push
fsubrs
fsubrs
pop
dec
push
daa
sbb
adc
mov
jo
mov
call
dec
fcmovne
dec
out
rcrl
clc
in
daa
or
sub
jg
decb
mov
pop
fldcw
pop
movsb
sarb
out
lock
or
cmp
sub
hlt
lods
stc
nop
inc
xor
inc
dec
cmp
sub
aaa
dec
push
cmp
xlat
lds
dec
decl
shll
arpl
in
das
xchg
adc
push
ja
sar
sub
loopne
xor
adc
hlt
jmp
push
fcomip
jmp
orb
jmp
rcrl
xor
roll
out
inc
aas
and
call
inc
xchg
mov
inc
xchg
xor
or
call
xor
jb
shr
les
popf
ja
xor
push
int3
dec
jp
cmp
adc
mov
clc
xchg
dec
cmp
cmp
ja
test
shll
adc
xor
add
dec
mov
mov
in
mov
push
sub
push
push
inc
fsub
push
decl
xor
adc
mov
decl
outsb
es
jg
jmp
iret
sub
push
cmp
sub
pop
fmull
push
pop
rorb
sub
push
sbb
shrb
mov
xchg
ret
leave
inc
mov
lods
es
or
clc
sub
mov
pop
dec
xor
aaa
mov
xchg
jg
or
imul
loop
dec
pop
sub
adc
clc
incl
pop
lods
cld
lods
insb
lret
jle
cmc
mov
cld
clc
jo
movsl
pop
add
in
mov
bound
test
add
or
mov
xor
in
mov
repnz
xor
push
jl
push
mov
xor
sbb
jge
jae
cli
and
jmp
lret
pop
push
sub
and
sbb
push
pop
lea
push
enter
icebp
out
in
push
int3
loopne
or
cmp
lock
call
les
movsl
add
decl
cmp
decl
push
aas
xchg
dec
sub
aam
and
mov
sub
and
call
stos
cmp
push
insl
pop
xor
lea
dec
push
in
adc
arpl
mov
mov
inc
xchg
xor
and
orb
cmp
jmp
divl
mov
loop
xchg
repnz
je
xor
in
clc
jmp
jp
or
and
imul
dec
loope
push
out
or
incl
fs
mov
pop
dec
xchg
call
lea
xor
call
xor
jbe
repz
jmp
xchg
je
sbb
int
das
out
mov
jmp
pop
imul
jecxz
fs
lcall
xor
dec
lea
and
gs
lcall
arpl
or
and
arpl
cld
mov
shll
pushf
fs
jo
popf
dec
dec
jg
push
xor
add
dec
inc
sub
lea
and
xlat
decl
icebp
inc
mov
incl
mov
push
imul
mov
fs
dec
add
mov
pop
loop
sub
cmp
negb
mov
fsts
mov
jg
inc
inc
hlt
mov
inc
fcomi
aas
mov
outsb
out
rolb
shrl
call
xchg
bound
test
xchg
push
test
loope
pop
movsl
adc
iret
outsb
jmp
lea
push
inc
jmp
pop
mov
stc
test
mov
sub
shr
ljmp
mov
xchg
cmp
inc
pusha
pop
ret
out
sub
lcall
popa
adc
es
popa
push
jnp
addr16
fsubs
scas
aas
mov
or
fildl
cld
daa
call
divb
push
cmp
mov
movsl
idivl
inc
call
add
lea
fadds
popa
adc
jp
inc
daa
xor
inc
and
test
pop
jne
ret
test
inc
int3
ja
jnp
or
xor
xchg
aad
cli
das
xor
inc
dec
les
out
sbb
add
out
sub
es
mov
insl
hlt
scas
add
fisubl
movsb
or
cli
adc
push
dec
inc
pop
decl
jle
push
repnz
xchg
cmp
mov
incl
or
in
jle
jmp
insl
xor
mov
int3
iret
test
sub
pop
lock
test
pushf
icebp
mov
es
cmc
mov
adc
mov
adc
jg
ljmp
add
loope
es
and
adc
or
add
int3
inc
add
loopne
cs
mov
jmp
push
jns
sub
sbb
pop
arpl
or
popf
scas
bound
loop
jp
mov
mov
pop
or
outsl
imul
cld
xchg
mov
lcall
mov
cli
and
sbb
xor
inc
repz
aaa
mov
into
cmpsb
mov
aaa
dec
fs
call
and
ljmp
in
movsl
cmc
dec
lds
aad
lret
ja
decl
cwtl
loopne
push
ss
mov
cli
dec
fidivs
push
fists
test
and
cmc
pop
fdivr
pop
lock
jg
push
lret
and
test
pop
jne
push
sbb
jmp
loope
jo
bound
fxtract
add
stos
adc
add
or
into
call
adc
push
clc
inc
xchg
jg
notl
clc
xor
xchg
in
xchg
xor
ljmp
fdivl
jecxz
cmp
sbb
ret
or
leave
das
mov
pop
push
ljmp
cmp
pop
mov
fdivs
sub
jmp
xchg
inc
mov
jb
push
xor
jnp
mov
leave
mov
adc
cli
jmp
clc
or
jbe
jecxz
push
jmp
subb
cmp
dec
inc
aam
bound
mov
mov
testb
mov
mov
jmp
imul
or
stos
pushl
dec
in
mov
rcrl
cwtl
xor
inc
add
xchg
pop
fists
sbb
fs
inc
les
and
jg
xor
push
ljmp
scas
sub
push
rorl
movsb
cli
movsb
xor
ljmp
push
imul
or
add
ret
sub
inc
cmp
mov
aam
lea
pusha
aaa
cmp
call
in
inc
inc
out
imul
nop
jecxz
ret
add
pop
mov
or
testb
jecxz
xchg
mov
inc
adc
mov
adc
call
jp
mov
rorl
gs
pop
xlat
enter
incb
insb
push
xchg
lock
lret
jg
mov
orl
dec
xchg
arpl
mov
mov
lcall
sbb
cmpsb
mov
xor
bound
nop
std
push
lcall
xorb
xchg
sbb
out
adc
stos
aaa
pushf
jl
sbb
mov
cli
call
add
call
xchg
test
lods
dec
ret
lods
jns
lret
cld
and
ret
inc
push
add
outsl
jg
dec
xchg
aam
or
arpl
sbb
cmp
scas
inc
mov
adcb
pop
jae
adc
hlt
xchg
test
outsb
lahf
mov
xchg
sarl
nop
add
gs
lret
out
xchg
add
mov
mov
sbb
jmp
inc
lcall
stc
mov
mov
add
shlb
inc
lods
call
scas
mov
sbb
cli
cmp
incl
jle
mov
out
sub
inc
mov
mov
mov
in
movsl
jne
in
pop
push
dec
sub
fwait
mov
dec
jge
mov
xchg
fs
jbe
jg
add
ljmp
es
mov
lret
jns
adc
xor
jmp
loope
incl
repnz
jl
insl
lretw
xchg
imul
inc
call
cld
add
xchg
std
inc
ds
fadds
lcallw
addb
mov
and
adc
or
addb
mov
sbb
xchg
call
push
js
xchg
scas
sbb
test
adc
inc
dec
sbb
cld
outsb
sti
sahf
push
mov
pop
out
push
push
cmp
cld
fisttpll
mov
dec
mov
call
mov
aam
and
xor
mov
cmp
ja
jg
fs
pop
push
mov
mov
pop
movsb
cltd
sti
pop
imul
push
dec
jmp
loop
pop
jnp
jne
mov
mov
bound
xor
int
jmp
outsl
stos
adc
dec
mov
iret
ret
nop
jg
dec
cld
rolb
ret
mov
xor
and
pushl
cwtl
xor
lods
clc
add
or
lcall
xchg
and
jle
mov
in
xchg
sub
mov
test
ljmp
imul
test
jne
shl
adc
mov
pop
jecxz
shlb
dec
xchg
scas
jecxz
jecxz
push
lahf
cmp
cltd
shrl
jbe
repnz
xlat
and
decl
push
add
loope
or
imul
cmp
test
mov
cmpsl
mov
dec
mov
ja
inc
out
loop
sbb
js
mov
lds
add
js
inc
xchg
mov
inc
movsl
add
or
pop
sub
pop
push
cltd
test
push
add
jb
into
clc
enter
incl
push
and
cltd
testb
imul
std
mov
test
popf
shlb
decl
add
shlb
cs
dec
ljmp
roll
mov
mov
xor
or
sub
pop
icebp
mov
jl
sub
add
imul
dec
mov
jg
or
dec
add
lgs
hlt
pusha
sbb
xor
ja
call
xchg
sarb
stos
add
test
pop
sbb
loopne
sbb
imull
cmpsl
jmp
fildl
sbb
inc
push
jns
into
call
and
rolb
xor
inc
mov
push
dec
and
shlb
dec
push
cmp
add
cmp
ljmp
xor
dec
push
jns
dec
je
xchg
xchg
je
test
es
sbb
sbb
inc
push
dec
imul
cli
lcall
cltd
push
cmp
shlb
jl
sbb
inc
std
outsb
or
mov
dec
in
mov
jecxz
in
inc
pop
push
push
push
movsl
aas
roll
repz
clc
sbb
inc
push
adc
cmp
pop
jmp
or
les
inc
cltd
rorl
pop
or
int
push
popa
sbbl
pop
scas
setl
adc
push
jmp
rorb
mov
fxch
push
sbb
mov
and
pop
xorb
adc
sarl
movsb
incl
push
inc
subl
popf
lret
inc
imul
and
fisttpl
test
mov
fidivs
adc
cmp
push
out
jo
ljmp
outsl
mov
add
inc
xchg
sub
adc
and
sbb
aas
push
adc
mov
decl
scas
xchg
call
pop
xchg
mov
pop
mov
daa
mov
sti
cmc
ja
or
and
jg
mov
xor
and
and
push
mov
fidivrl
inc
cmp
mov
xacquire
mov
add
movb
mov
lcall
inc
pop
inc
push
out
adc
pop
leave
movsb
xchg
add
or
lcall
or
xchg
adc
pop
add
mov
imul
out
push
test
js
adc
inc
lcall
fsubl
mov
scas
inc
jns
cs
xchg
test
imul
pop
adc
dec
push
xchg
sub
adc
mov
loope
dec
jp
lea
pop
dec
je
push
lods
bound
push
pop
mov
pop
add
pop
mov
stos
push
xor
popa
mov
out
arpl
insl
in
bound
lcall
mov
jnp
mov
inc
cmp
mov
mov
mov
push
pop
lock
js
fistpl
in
rorl
lret
popf
dec
pusha
sub
sbbb
and
in
sbb
sbb
adc
pop
iret
inc
aaa
add
inc
mov
daa
out
adc
or
push
pushl
cld
inc
and
or
nop
dec
fs
mov
sti
pop
incl
pop
pushl
sbb
sub
lea
xchg
fimull
hlt
cmpsl
imull
inc
jp
mov
icebp
movsb
sub
push
lcall
outsb
dec
inc
fwait
xchg
mov
pop
hlt
call
sbb
frstor
mov
jo
dec
jecxz
lods
fsubs
jp
lock
jmp
sarb
pop
ficoml
mov
or
adc
inc
and
incl
inc
daa
inc
pop
rorl
rorb
xchg
movsb
push
loopne
adc
cs
decl
je
rolb
imul
in
dec
add
pushf
mov
push
in
lcall
add
dec
jnp
insl
mov
test
jo
dec
add
mov
add
or
inc
xor
sub
xchg
mov
lcall
push
jl
sbb
sbb
cmp
fcomip
lods
mov
inc
int3
sar
push
test
xor
jb
mov
xchg
icebp
mov
jns
clc
insb
mov
lcall
je
ficoml
sbb
pop
push
xor
adcb
adcb
jg
and
xchg
dec
or
fadd
cwtl
xchg
cld
call
incl
loope
xchg
mov
dec
xchg
xchg
sbb
mov
popf
call
ret
movsb
xor
insl
dec
jo
rcrl
aad
cmp
inc
lds
ja
inc
mov
arpl
xchg
sbb
xor
and
stc
jg
add
data16
sub
mov
xchg
jecxz
sub
xchg
cli
jmp
in
mov
sub
ret
jmp
jl
xchg
xchg
sub
outsb
pop
and
rorl
cld
mov
mov
dec
icebp
orl
dec
ror
and
pushl
out
into
in
ljmp
sub
cmpsl
ljmp
or
loop
xor
js
or
inc
dec
mov
pushl
leave
push
adc
xchg
mov
ljmp
pop
dec
iret
push
and
data16
inc
and
mov
jns
jns
push
inc
leave
add
jo
and
adc
add
lcall
and
lods
int3
push
sbb
les
xchg
and
adc
gs
clc
wbinvd
pop
stos
fwait
sbb
inc
subl
jg
or
jbe
imul
adc
cmp
sbb
pushl
inc
sub
mov
adc
adc
add
lock
loopne
dec
loop
out
mov
loope
sbbb
mov
adc
pop
mov
mov
js
rcrl
mov
fwait
or
jmp
mov
xor
cwtl
lods
xchg
jbe
adc
pop
jbe
xor
jb
mov
daa
mov
pop
cmpl
mov
and
xchg
push
shl
mov
jmp
gs
jmp
add
test
insb
aas
mov
or
and
imul
jmp
arpl
xchg
sub
ljmp
add
mov
xchg
leave
inc
pusha
mov
ljmp
cmp
test
sti
cwtl
push
lock
sbb
mov
jg
push
mov
lea
cmp
lods
in
test
or
inc
or
cmp
lret
fisubs
push
xchg
cld
adc
and
pop
dec
dec
ljmp
jmp
sti
add
and
fcoms
xchg
aad
sar
fucomi
pop
repz
aas
dec
mov
test
push
push
mov
pushf
addb
dec
rol
sub
icebp
dec
or
test
xchg
mov
decl
aaa
mov
push
push
mov
fisttpl
test
cli
jbe
lcall
cmp
jne
fstpl
scas
pop
leave
push
jmp
nop
dec
push
pushl
call
call
nop
xor
inc
cmp
scas
jl
test
pusha
aad
fidivrs
xchg
mov
lock
xchg
decl
cmp
cmc
ljmp
jl
xor
jl
sbb
jmp
fs
jnp
jl
mov
aaa
dec
fildl
int3
jno
xchg
xor
hlt
adc
fnstcw
cmp
aaa
movsl
roll
std
out
pusha
or
push
push
decl
cmp
push
xor
icebp
inc
imul
stc
divb
pop
ret
repz
ds
xchg
inc
sub
ror
cld
dec
jmp
xchg
dec
cwtl
ss
mov
scas
pop
les
or
pop
cmc
mov
jae
dec
out
scas
xchg
fisubrs
loop
jb
test
ficoml
fldl
fisubs
jmp
and
clc
adc
push
in
das
jecxz
xor
clc
mov
test
mov
lock
mov
ja
jle
ljmp
push
cmp
stc
push
push
mov
lcall
jg
sub
in
push
jge
jb
je
cmp
push
out
mov
jmp
add
lcall
sub
test
pop
cmpxchg
mov
add
aam
cld
adc
mov
decl
pop
fildl
cmp
pop
inc
aas
popa
and
notb
mov
sbb
pop
cmpsb
xchg
xor
fs
add
popa
std
ljmp
jb
in
inc
sbb
pop
jle
push
inc
sbbl
ss
daa
inc
popf
ss
pop
push
push
shll
and
daa
je
jns
cmp
adc
push
or
movsl
xlat
jns
movsl
inc
add
sbb
dec
dec
and
add
mov
mov
stos
xchg
jne
push
pop
outsl
jns
adc
aas
push
inc
sti
mov
mov
sti
notb
and
xchg
jl
xchg
aaa
cli
arpl
jp
call
add
int3
ret
cmpb
test
xor
jmp
jno
in
and
or
adc
outsl
add
mov
mov
adc
cmpb
add
dec
pop
mov
outsb
sbb
dec
imul
cmp
sub
sub
xchg
incl
jb
movsb
cmp
xchg
addr16
adc
push
daa
sbb
mov
sbb
scas
gs
jne
mov
aam
daa
out
jb
sub
push
dec
in
repz
test
pop
push
mov
and
cmc
aas
or
addl
lcall
xchg
push
sbb
pop
adc
ja
aad
call
ljmp
gs
push
pop
nop
pop
pop
add
push
pop
xor
pop
pop
cmp
arpl
incl
shl
ja
enter
pusha
push
imul
push
incl
aad
mov
xchg
and
ljmp
test
push
iret
xchg
sbb
clc
push
push
xchg
testl
jmp
imul
jp
mov
push
dec
aad
add
jp
daa
xchg
mov
jmp
imul
and
xchg
jle
and
sbb
adc
push
dec
adc
incl
fists
mov
jns
add
pop
mov
data16
jg
repnz
rcrb
aaa
out
dec
lcall
loopne
pop
orb
mov
jne
leave
orl
incl
push
sbb
push
sbb
cwtl
dec
adc
xchg
mov
sub
mov
fincstp
push
and
pop
xchg
enter
imul
sbb
xor
pushl
outsl
xor
enter
xor
and
jne
rolb
pushw
xor
pushl
dec
fmuls
and
adc
adc
mov
xor
sar
xchg
cmp
pop
lcall
jmp
push
movsb
ja
sub
and
rclb
stc
insl
int
xchg
pop
in
decl
shlb
sub
sbb
xchg
inc
and
ret
decl
mov
inc
jmp
enter
push
push
shlb
subl
ds
ss
or
jns
dec
cmp
adc
imul
xchg
test
lock
jle
inc
mov
enter
std
jns
mov
push
fwait
mov
pop
xchg
sarb
sub
add
xor
sar
clc
fstpt
scas
add
and
xchg
jae
insb
sub
icebp
data16
xor
lcall
stos
lcall
or
mov
es
shlb
jne
in
and
inc
mov
ljmp
clc
sbb
pushl
inc
lock
mulb
xor
xor
insb
pop
fwait
stos
cmpsb
and
xor
filds
add
and
push
or
cwtl
xchg
xchg
and
mov
sbb
xor
inc
int3
mov
inc
inc
cmp
subb
and
lds
ss
ljmp
add
popf
fldenv
inc
sub
push
rcrl
xchg
sahf
cltd
cwtl
sbb
adc
pop
mov
add
lock
test
inc
movsl
add
jmp
std
sub
idivl
lcall
or
or
inc
pusha
xchg
movsb
xchg
ffree
test
jmp
push
movsb
cmp
sub
and
cmpsl
adc
push
dec
fwait
sbbb
adc
ljmp
add
sbb
push
int
mov
ljmp
sub
cwtl
call
lret
add
inc
sbb
push
cmp
mov
lcall
ljmp
and
lea
data16
jp
and
adc
imul
lret
roll
jne
mov
push
pushl
add
fwait
loop
pop
fs
popa
pushf
and
aaa
cld
pushl
pop
mov
or
aaa
push
add
adc
dec
jecxz
fst
cmpsl
sbb
mull
fcomip
incl
inc
push
outsl
sbb
pop
adc
or
push
pusha
test
and
xchg
dec
movsl
and
test
out
jno
stos
out
ljmp
stos
stos
iret
inc
ss
aam
adc
jge
icebp
stos
lcall
mov
xchg
add
jno
mov
idivl
pop
sub
std
outsl
ljmp
das
push
add
or
jae
push
sub
jg
push
xor
jb
mov
pop
lret
scas
lock
jg
xor
movsb
sub
mov
mov
xorl
es
add
decl
lock
push
ds
adc
jl,pt
jne
imul
jmp
xor
inc
pop
orl
xor
aaa
jp
adc
and
lret
ljmp
jmp
stos
pusha
test
or
xlat
popf
jecxz
dec
ret
aaa
push
sub
in
ljmp
clc
repnz
mov
xchg
sarb
pop
cmc
sti
and
loopne
xchg
jp
add
cmpsl
xor
lods
sbb
sub
in
dec
dec
sti
fwait
sahf
testb
jp
or
stc
jnp
addr16
sub
int
mov
push
clc
das
pop
fimull
jl
hlt
xor
jmp
push
adc
rcr
lock
cmp
xorl
mov
push
jbe
subb
xchg
push
xor
add
push
mov
clc
outsl
and
mov
aaa
push
scas
mov
ret
jo
fbld
jmp
cmp
stc
mov
cltd
dec
inc
jo
test
call
inc
shrb
jne
lea
jbe
fadd
pushl
mov
or
sbb
jmp
jne,pn
adc
pushf
pop
inc
ja
lcall
fwait
or
lods
testb
movsl
dec
mov
insb
sbb
or
xchg
fbld
or
or
xorb
pop
imul
pop
repnz
aad
icebp
xor
lret
test
stos
jbe
mov
and
mov
xor
jp
popa
lret
pop
xor
xor
inc
sbb
push
cmp
push
push
cltd
jl
cld
es
mov
test
cld
aaa
std
cli
add
pop
cld
sub
insb
stos
mov
inc
cld
jl
mov
mov
das
nop
mov
jg
fs
xchg
lret
mov
cmpsl
js
scas
and
push
adc
xchg
fs
jmp
lods
std
incl
xchg
ja
sbb
call
mov
push
int3
push
cmp
out
jbe
xchg
in
test
and
cwtl
xchg
je
roll
inc
lcall
sar
inc
xor
xor
or
cmpl
ljmp
das
cli
jg
inc
aas
jge
and
add
push
cmpsb
sbb
mov
decl
bound
mov
adc
lret
and
adc
adc
test
mov
xchg
add
rcrb
ljmp
and
xor
inc
inc
dec
popf
mov
xchg
xchg
and
decl
mov
mov
adc
pop
and
pop
cmp
cwtl
mov
lcall
push
adc
lods
jnp
outsl
dec
movsl
push
iret
mov
push
int
loope
mov
scas
xchg
ror
ror
or
jno
pop
cmpsb
dec
int3
push
cltd
sbb
jnp
fldenv
dec
mov
jno
gs
inc
mov
ljmp
mov
rcll
dec
scas
into
inc
lea
sub
pop
mov
push
adc
push
lds
pop
mov
nop
push
mov
test
mov
ljmp
nop
gs
shll
lds
fs
pop
sub
pushl
std
les
or
inc
ja
dec
inc
aad
dec
push
xor
or
xchg
incl
sbb
insb
cmp
adc
xor
add
in
dec
lret
orb
lcall
xchg
imul
mov
lods
sbb
xor
dec
shrl
xor
dec
roll
push
sbb
and
jno
std
jbe
adc
movl
push
data16
jo
decl
jbe
sbb
or
adc
dec
mov
pop
into
out
push
jl
ret
mov
mov
xchg
fcom
jle
iret
hlt
mov
mov
incl
ljmp
iret
fs
cwtl
inc
mov
push
dec
lods
mov
sbb
sbb
fwait
or
sub
jo
and
hlt
repnz
adc
incl
fnop
das
mov
cld
jg
adcl
jne
jae
and
or
add
mov
lcall
jle
push
cmp
pop
sbb
mov
cmpsb
dec
in
mov
adc
js
aad
lods
aad
jne
test
cmp
test
ss
xchg
push
adc
shll
sub
lret
sbb
jg
cmp
movsb
and
cmpsb
pop
popa
mov
in
sub
push
sub
jge
inc
adc
pop
mov
rcrl
into
daa
cmp
jl
loopne
ffree
mov
popf
mov
movsl
xchg
fprem1
pop
mov
je
mov
jle
sub
or
iret
mov
jae
push
scas
or
int
mov
sbb
sub
sbb
decl
scas
les
jg
popa
or
jge
shrl
and
adc
sbb
cld
mov
sub
add
add
or
movsl
scas
sbbb
jg
movsl
sub
test
ss
pop
mov
or
push
jae
mov
cmc
add
mov
std
inc
xor
movsb
sub
lods
nop
and
les
clc
mov
inc
lcall
je
adc
adc
mov
mov
xchg
sbb
pop
data16
shlb
stos
in
push
insl
notb
xor
xor
dec
movsb
and
mov
mov
imul
jmp
push
andb
xchg
sbb
dec
inc
test
pop
xchg
es
pslld
stos
mov
fisttpll
ljmp
outsb
adc
in
mov
mov
xchg
xor
mov
frstpm(287
mov
fisubs
pop
out
mov
aaa
data16
scas
pusha
dec
adc
iret
insb
jno
pop
lock
popaw
push
ja
in
movsb
mov
addr16
nop
nopl
dec
incl
incl
and
cmpsl
inc
xor
das
inc
add
xor
ret
in
mov
mov
cmp
adc
jmp
mov
mov
jp
aas
lds
adc
push
cwtl
rcll
lcall
mov
adc
cwtl
push
and
jne
mov
cwtl
adc
push
xorb
cmp
push
popl
dec
pop
rorb
xchg
sarb
xor
dec
cltd
pusha
cmp
add
jg
and
popf
cmp
loop
bndstx
push
ds
jg
in
jl
cmpsb
jp
and
mov
lcall
cmp
shrb
in
cwtl
es
int3
xchg
or
pop
mov
jg
fdivr
add
or
push
jl
jo
test
lret
mov
add
push
mov
and
jmp
and
push
jmp
aas
or
or
jecxz
fwait
lods
jg
push
ret
cmp
fisttpl
sbb
xchg
inc
jnp
js
inc
mov
jns
fcmove
imul
repnz
popf
aas
out
pop
divb
jno
imul
call
add
addr16
sahf
lahf
popa
nop
jmp
pop
jmp
jnp
icebp
dec
ret
push
add
decl
std
jmp
jae
mov
inc
dec
in
mov
pop
or
sub
or
call
das
inc
xchg
andl
mov
mov
mov
sub
cli
inc
test
leave
inc
lea
xchg
mov
dec
and
dec
jmp
inc
push
dec
jnp
rcl
lcall
jmp
xor
lock
and
sbb
mov
sub
in
add
out
sbb
add
mov
inc
adc
mov
repnz
jmp
call
call
push
push
dec
movsl
pop
sahf
and
mov
mov
xor
ljmp
lods
xchg
ret
mov
mov
lods
xchg
jg
add
test
push
inc
sub
push
lcall
movsl
xchg
or
mov
mov
out
inc
scas
mov
pop
and
adc
mov
mov
jl
out
mov
and
sub
call
icebp
aam
pushf
shr
mov
hlt
enter
les
pop
mov
cs
ja
rcr
push
cld
cmpsb
push
outsb
cmp
push
out
pop
cmp
stos
xlat
or
and
xor
and
dec
dec
outsl
movsb
pop
mov
sahf
add
mov
add
lcall
mov
add
push
shlb
pop
push
push
jno
or
and
mov
xchg
test
inc
pushf
jns
push
or
test
icebp
jmp
mov
cs
add
hlt
bound
incl
stos
mov
xchg
sbb
and
push
ret
push
test
rsm
add
dec
loopne
pushl
sub
and
int3
fwait
or
lret
and
push
push
call
mov
sbb
push
cmp
mov
mov
push
add
call
cmp
movsb
xor
mov
sub
mov
dec
leave
xor
incb
sbb
jo
mov
mov
rcll
ljmp
negl
ret
pop
ja
or
xor
imul
jmp
cmpsb
adc
jecxz
and
inc
cmp
and
out
ljmp
pop
jne
mov
ror
and
and
mov
call
dec
cmp
mov
and
repnz
push
dec
and
inc
pusha
xchg
repz
incl
inc
or
loopne
cmp
fs
adc
rolb
xor
orl
sbb
or
ljmp
stc
xchg
cwtl
xchg
scas
loopne
mov
sbb
xchg
sbb
sbb
adc
jge
enter
mov
call
fcmovu
xchg
push
xchg
je
xor
sbb
mov
add
ljmp
mov
mov
pop
in
loop
add
inc
aad
dec
add
popa
fidivs
aam
out
cli
decl
adc
adc
push
sbb
clc
test
cmp
lcall
add
push
es
test
xchg
stos
fistpll
ljmp
pop
mov
dec
es
inc
inc
lret
mov
in
push
mov
lcall
jl
stos
pop
fldl
mov
dec
loope
xchg
jns
orl
pop
dec
test
jl
sbb
sbb
decl
mov
hlt
es
into
je
jo
and
mov
ljmp
jl
out
cmp
stc
leave
out
aad
ljmp
sbb
mov
add
inc
ljmp
incl
arpl
push
sub
adc
add
lock
incl
clc
addr16
xor
push
test
adc
ljmp
sub
or
or
lock
ficoml
mov
les
mov
sbb
or
pushl
stos
fsubrs
test
shlb
popf
out
sub
movsb
push
cli
pop
xchg
scas
push
movsl
sub
ret
mov
cltd
push
roll
inc
popf
or
mov
xchg
jbe
call
xor
inc
nop
xchg
fs
adc
mov
push
test
add
pop
and
decl
movsb
adc
mov
jge
in
mov
dec
mov
mov
cmpsl
and
idiv
enter
fnstcw
out
sub
rcrl
pop
in
xchg
ret
stos
gs
xor
mov
fcos
decl
fs
es
hlt
mov
mov
lcall
ljmp
fcmovne
jnp
jl
cmp
mov
inc
pop
add
push
pop
cld
mov
sbb
or
pushl
cmp
int
lods
arpl
mov
mov
das
clc
and
sbbb
pop
or
orb
icebp
shll
cmovns
decl
call
andb
pusha
dec
pop
jbe
dec
mov
stos
mov
cwtl
sub
fstl
je
test
sub
call
rol
sbb
int3
out
xorl
push
dec
pop
lcall
add
loope
mov
or
fdivrs
dec
gs
jb
cmpsb
stos
imul
lcall
push
cmp
inc
leave
push
add
bound
cmp
or
cmc
enter
dec
dec
dec
imul
mov
stos
sbb
sub
mov
and
mov
scas
xor
pushl
sub
adc
xor
les
insb
xchg
dec
into
inc
das
mov
aad
lcall
jmp
mov
xor
mov
dec
jae
push
aam
insb
mov
ljmp
in
into
xor
dec
hlt
std
push
cmp
xor
jecxz
jmp
aam
ljmp
push
jp
xchg
iret
cmc
mov
cmpsl
es
rclb
in
lahf
push
push
aaa
sub
clc
jns
mov
push
sarb
cli
aas
sub
fdivs
mov
sbb
adc
nop
das
jge
out
mov
sarb
inc
ficompl
sbb
repz
mov
sub
xchg
arpl
mov
adc
movsl
mov
mov
and
mov
sbb
les
jmp
pop
jbe
xchg
fistl
and
mov
adc
xchg
inc
sub
pop
shrb
xor
test
dec
call
call
jge
adc
in
loopne
mov
jno
mov
rclb
cmp
ja
dec
pushl
fisubrs
mov
sbb
stos
lret
ret
bound
out
mov
in
repz
arpl
out
dec
add
mov
xchg
xor
pop
jmp
movsb
dec
loope
out
fmuls
mov
fistps
push
mov
loopne
sar
jle
ss
clc
push
push
add
xchg
dec
ss
fisubrs
fcmovnu
fsubrp
cmpl
clc
shll
int
fcmovnb
xor
pop
mov
cmp
lcall
jmp
mov
std
cmp
in
push
adc
mov
mov
incl
xor
mov
push
gs
mov
or
mov
stos
lods
xchg
dec
and
je
lock
cwtl
sbb
aaa
pop
fcos
fisubl
lcall
mov
push
jns
dec
pop
push
idivl
xchg
adc
and
stc
icebp
adc
popf
sbb
out
ljmp
push
mov
add
pop
aad
dec
fs
adc
decl
inc
ficomps
mov
iret
jae
ffree
fstps
dec
pop
sbb
fwait
jb
inc
clc
call
test
push
pop
fwait
dec
lret
cltd
xchg
pop
xchg
incl
data16
jnp
out
movsl
mov
mov
rcll
or
incl
scas
or
sahf
rcrb
pop
insl
jb
push
lahf
ja
cld
mov
inc
stos
push
mov
jb
mov
xor
mov
add
aaa
inc
addl
aam
loop
jp
and
mov
add
mov
decl
mov
lcall
sub
sti
xor
xchg
scas
loopne
sti
ret
cltd
sar
inc
ret
nop
xor
xchg
pushl
mov
inc
push
pushl
ror
sahf
xchg
cmp
xlat
ret
sahf
xchg
rcrb
jg
sbb
loop
add
and
scas
adc
jl
cltd
and
add
mov
add
adc
decb
cmp
sbb
call
out
mov
pop
xchg
mov
ds
xchg
adc
repz
ret
ds
cmp
mov
pushl
xchg
jnp
shlb
mov
mov
ret
add
xor
xor
cmp
pushl
push
cmp
orb
loopne
or
sub
inc
cmp
pushl
pop
jae
rcr
xchg
cmpsb
cmp
aas
fwait
inc
loop
mov
adc
cmp
stos
andb
jecxz
scas
xor
fmuls
clc
call
mov
xorb
or
sarl
test
adc
pop
cli
scas
pop
pushf
mov
mov
adc
and
add
jg
mov
adc
inc
adc
ss
scas
shll
sbb
and
lcall
sub
and
xchg
xchg
insb
mov
push
cmpsl
sub
sarl
cmp
mov
xor
fs
or
xorl
test
ret
add
jle
sub
mov
sbb
lcall
aam
inc
call
sub
lds
inc
dec
ret
mov
sbb
add
mov
aaa
lods
sbb
jecxz
jo
ljmp
es
mov
subl
pushf
or
sarb
mov
lcall
or
cmpsb
and
aaa
rol
xor
cmp
mov
adc
sub
inc
pop
lret
pop
pop
negl
xor
decb
in
mov
dec
xor
lcall
mov
mov
jo
test
inc
xor
sar
fwait
inc
jmp
cmpsl
push
roll
adc
addb
lcall
add
lock
jmp
mov
jl
les
or
push
cs
cwtl
add
cli
pushl
mov
lods
adc
xchg
std
call
mov
and
xchg
lret
repz
ds
sbb
push
inc
xor
cwtl
testb
inc
sbb
mov
sbb
mov
les
pushf
in
xor
and
dec
sbb
xor
jg,pt
and
cmp
mov
orl
mov
xchg
push
ds
and
push
mov
xor
sar
inc
loop
adc
mov
sub
test
jg
cmp
ret
mov
ret
mov
sub
andl
lcall
in
shrb
in
cmp
and
mov
inc
sbb
incl
sub
jo
int
je
movb
mov
sbb
movsb
mov
mov
icebp
inc
lods
dec
xor
cmp
sub
pop
and
push
fwait
sbb
cmp
push
sub
mov
mov
loopne
and
push
add
mov
ja
jmp
bound
loopne
cmp
loope
and
sahf
sub
xchg
xchg
clc
pop
cmp
mov
jp
cmp
mov
xorb
add
sub
ret
pop
jmp
mov
or
movsb
aad
and
movsb
jns
loop
cmp
decl
fistl
roll
sub
scas
lock
pusha
pushf
add
hlt
or
add
lret
mov
adc
ret
ljmp
test
cmp
inc
cwtl
jl
repz
or
test
scas
mov
adc
pop
test
addb
sub
dec
cld
inc
or
movsb
aas
mov
call
cld
sarb
pushl
inc
sub
pusha
pusha
jb
adc
add
int
fimull
jl
push
push
rolb
mov
loope
pop
cs
xlat
or
je
outsb
cmp
dec
sub
aad
cmp
lcall
sbb
addl
xor
mov
mov
sub
jl
add
ljmp
add
push
cmpb
ret
push
sub
sub
pop
cmp
rorb
lret
lock
mov
mov
sti
adc
mov
scas
jle
outsb
xor
xchg
jns
xor
cmp
push
add
inc
dec
test
mov
and
dec
in
loope
lods
rcll
inc
cmp
sti
or
mov
add
std
adc
inc
jl
mov
lock
jg
add
test
push
fmull
adc
lcall
sub
sub
sub
fisttpll
xor
mov
cmp
cli
mov
dec
stos
mov
add
or
call
pop
ret
clc
dec
loopne
mov
mov
fildll
pop
mov
fdivs
nop
sbb
xor
leave
cld
jg
insl
cld
dec
mov
test
into
lods
insl
cld
shrb
test
call
lods
lea
fs
aad
adc
insl
add
das
push
mov
lds
mov
inc
jns
and
adc
push
sub
fidivrl
inc
fisubl
cld
int
pop
or
mov
pop
mov
aam
leave
notb
fmuls
sbb
incl
push
push
daa
bound
aad
sbb
push
mov
incl
jg
push
rclb
sbb
sarl
mov
je
cld
sbb
pop
cmp
call
lds
mov
out
xor
mov
test
cmp
add
jmp
test
mov
add
xor
arpl
push
dec
pushf
decl
cmp
cmp
scas
mov
and
scas
aam
jbe
mov
mov
sbb
pushl
jl
xlat
cwtl
rorl
lds
sbb
mov
sbb
ret
xor
bound
sub
sarb
scas
repnz
shrb
movsl
jae
call
add
sub
iret
mov
inc
adcl
test
call
adc
mov
xchg
push
xor
pcmpgtd
shlb
jp
orps
mov
push
xor
push
inc
add
push
xor
dec
pop
pop
jecxz
call
call
pop
shlb
loopne
push
enter
out
aam
aam
push
loopne
add
lds
xchg
cmc
inc
mulb
mov
jle
sub
mov
ss
mov
push
push
loop
ljmp
xor
call
xchg
fcomps
jbe
sub
addr16
jmp
sbbb
jno
stos
push
mov
call
incl
mov
inc
lods
mov
jecxz
push
movsb
push
mov
xor
or
nop
aaa
mov
fwait
xchg
pop
aas
lea
mov
xor
add
movsl
mov
imul
adc
outsl
clc
xchg
pop
dec
fcomps
inc
dec
sahf
push
scas
mov
cmp
adc
ljmp
adc
dec
insl
xchg
cmp
mov
hlt
cmp
insl
push
cmpsl
push
in
jmp
mov
xchg
out
je
cmp
jl
adc
pmovmskb
scas
mov
cltd
push
cltd
daa
jnp
jg
sbb
and
ljmp
or
mov
aam
icebp
mov
xor
call
cmp
rcrl
pop
loop
into
das
stos
stc
test
in
enter
mov
inc
xchg
cwtl
dec
or
ljmp
out
repz
and
loope
add
adc
std
mov
pop
jbe
sub
lea
sub
ljmp
xor
dec
and
aaa
pop
lods
or
scas
ljmp
sbb
clc
pushl
mov
out
push
stos
dec
xchg
dec
popa
mov
arpl
call
cmp
shlb
fisttpll
mov
insl
sahf
gs
push
test
addb
ljmp
push
lods
in
and
ficoml
pop
inc
out
movsb
mov
or
xor
js
sub
ljmp
pop
mov
in
push
gs
int3
inc
cld
rolb
xchg
incl
int
shr
sahf
lea
dec
stos
mov
push
cs
into
sbb
inc
jecxz
and
addr16
sbb
add
gs
ss
mov
add
ds
loop
nop
xor
xchg
adc
orb
jno
loopne
sbb
push
lock
dec
in
or
sbb
push
mov
cmc
decl
movsl
insl
jge
and
outsl
hlt
in
and
pop
ljmp
arpl
and
jbe
enter
mov
pop
stos
mov
int
add
sbb
ljmp
xor
das
mov
push
sbb
push
xor
pop
icebp
push
rcll
fiadds
dec
scas
call
mov
mov
push
dec
add
and
js
mov
jo
mov
out
cli
mov
adc
pop
mov
pusha
sub
jo
cmc
leave
sbb
call
sbb
shrb
mov
mov
insl
sub
repz
jmp
inc
jbe
lahf
lods
mov
dec
mov
inc
push
cwtl
or
out
sub
scas
jecxz
mov
cmp
add
enter
push
sbb
cs
clts
ljmp
cs
mov
ljmp
jb
repnz
sub
popa
sub
ljmp
ljmp
sbb
jb
popa
loope
or
bnd
enter
stos
lcall
repz
jb
sub
fcoml
std
in
ret
mov
mov
repnz
jmp
incl
add
jbe
out
or
cwtl
pop
add
in
add
adc
dec
test
std
loop
mov
push
test
lds
jbe
pop
pop
hlt
mov
out
fldenv
xchg
or
sbb
and
cmp
push
std
rcll
sbb
and
mov
fs
lods
xchg
fmull
cmp
lock
inc
aad
sti
inc
insb
fcomip
call
jbe
jmp
or
getsec
pop
insl
jl
mov
sub
jecxz,pt
sub
rcrl
pop
mov
jg
mov
mov
inc
data16
bound
cmpsb
sub
mov
fs
dec
push
out
ja
sub
fucomi
jnp
std
cli
daa
das
mov
xchg
xchg
fmuls
loope
cmpsb
ljmp
bound
dec
push
sbb
push
fists
call
push
jae
addr16
enter
adc
icebp
pop
jecxz
call
push
mov
ja
add
int
jo
dec
stc
and
insb
incl
outsl
and
jae
dec
fimull
lods
hlt
outsb
mov
je
imul
lds
jmp
and
lock
or
and
or
jl
mov
mov
add
xchg
sbb
mov
call
in
xchg
xchg
dec
xchg
mov
xor
push
jle
pop
xor
and
mov
mov
sbb
sbb
bound
mov
jg
xor
addb
inc
es
or
or
stos
cmc
ljmp
dec
cli
test
pop
divb
sub
mov
dec
mov
aad
jo
add
cmpl
mov
mov
scas
cmpb
in
cmp
push
fidivs
push
out
xchg
iret
pushf
cs
ljmp
cmpsb
dec
xchg
push
nop
iret
or
into
sbbb
cmc
mov
add
inc
popa
mov
lcall
fimuls
in
dec
mov
xor
fidivrs
not
out
jge
xlat
mov
std
or
out
sbb
sub
push
orl
jle
test
fwait
sahf
icebp
mov
ljmp
sbb
gs
cmp
jp
test
inc
aam
add
mov
xchg
pop
dec
inc
dec
inc
cmc
add
add
inc
add
cld
ljmp
mov
mov
and
mov
clc
aam
or
adc
incl
adc
ja
mov
adc
nop
arpl
inc
or
les
nop
adcb
jbe
scas
push
dec
or
hlt
or
xadd
aas
test
push
cmpb
jmp
test
or
and
pusha
orl
push
mov
gs
mov
cltd
or
jmp
test
mov
jb
in
jns
pop
out
jge
stc
ret
mov
cmp
and
jmp
sub
popa
xchg
push
dec
sub
xor
aam
dec
dec
cmp
dec
loop
xor
adc
sbb
ds
enter
push
insl
adc
gs
pop
movsl
ljmp
cli
xchg
pop
push
rcrb
rcrl
cmc
adc
cwtl
mov
in
test
leave
es
in
pop
xor
and
les
mov
ljmp
movsb
mov
ja
sar
add
sub
out
data16
rorl
inc
mov
sbb
ret
or
mov
sbb
mov
rolb
fcompl
push
scas
sbb
jns
cld
push
xchg
scas
ret
xor
sbb
movsl
push
icebp
jp
mov
pushf
fidivs
fcomip
add
xchg
rcl
mul
xchg
insl
pop
pusha
enter
push
push
inc
cmp
pushl
int3
mov
loope
sub
loop
aam
divl
mov
or
and
sbb
outsb
mov
mov
and
sbb
xchg
push
arpl
test
out
push
push
jns
inc
ljmp
lcall
push
data16
in
jns
pushf
pop
lret
lods
pusha
fbstp
jns
xchg
test
or
ljmp
call
in
addr16
in
dec
lcall
inc
lcall
mov
push
jo
decl
cmpsl
ss
lods
mov
pop
pop
scas
push
push
lods
ret
imul
mov
mov
push
xlat
mov
aas
imul
mov
in
iret
mov
je
enter
mov
mov
fstps
cmp
push
sbb
fsts
insl
subb
mov
lcall
push
sbb
and
xchg
pushf
std
add
add
push
jbe
mov
pop
decl
les
adc
fwait
add
ds
stc
pop
cmp
jg
mov
mov
mov
lret
mov
movsb
and
push
test
cmp
fxch
cli
aaa
adc
movsb
loop
push
rolb
push
or
push
jo
js
mov
les
mov
les
ret
sbb
push
inc
adc
jo
adc
call
push
insl
jns
daa
mov
mov
mov
sub
add
nop
cmp
decl
or
les
xor
fsub
cmp
test
aaa
add
incl
shrb
inc
imul
call
into
imul
push
inc
in
aam
or
lods
xchg
fwait
mov
pusha
lds
loope
decl
mov
and
out
pop
leave
cmp
stos
lret
pusha
outsb
daa
ljmp
jns
pop
cs
mov
outsb
sub
push
cltd
outsb
sub
cld
mov
inc
add
and
inc
mov
jle
add
xor
pushl
xchg
xchg
scas
jge
jo
clc
mov
rorb
mov
ud0
fwait
pop
mov
lock
pop
mov
add
fcomps
lds
subb
dec
dec
inc
aas
lcall
js,pt
and
pusha
es
lcall
rolb
sbb
cmp
jge
ret
xor
rcll
push
adc
lock
jnp
test
cmp
fisubrl
xchg
decl
incb
mov
cli
pop
push
iret
xor
sbb
movsb
movsl
add
inc
bound
arpl
lcall
in
pop
pushf
sbb
aad
inc
mov
mov
mov
push
in
cmp
call
lahf
cwtl
sbb
cmp
les
adc
mov
jl
dec
popa
jge
and
jne
leave
popf
jne
call
enter
mov
push
xchg
mov
pop
mov
sub
adc
mov
scas
aam
xchg
and
jp
pop
test
dec
mov
movsl
sub
xchg
mov
call
add
pusha
in
lods
bound
imul
xor
fwait
imulb
jp
xchg
lods
mov
cmpsb
pop
push
insl
cwtl
cltd
cmp
jmp
cmpb
clc
xlat
fwait
add
lret
push
into
jp
cmpsl
pop
std
push
ffree
clc
sub
mov
dec
out
adc
into
inc
jl
xor
ja
pusha
pop
aas
adc
fstpt
das
cli
lcall
mov
nop
add
flds
scas
sarb
dec
into
jnp
sbb
add
push
movsl
mov
or
ljmp
popf
push
hlt
lcall
inc
or
mov
sub
insb
pop
hlt
ljmp
out
jecxz
in
and
mov
add
cmpsl
movsb
and
insl
or
lret
mov
and
add
push
inc
add
bound
stos
shll
mov
push
adc
incl
or
or
enter
pop
jo
popf
push
or
in
adc
ljmp
push
int3
pop
arpl
movsl
adcl
cmp
out
lods
xchg
cli
pop
and
mov
fcomip
lds
rcrl
ljmp
or
xchg
fisubrl
stos
jl
cli
jmp
pop
leave
mov
sub
lea
jns
cmp
push
xchg
idivl
inc
push
sbb
push
cmp
scas
ss
fcomps
or
les
popa
mov
mov
mov
scas
rcrl
call
inc
inc
fiadds
mov
inc
aam
andl
mov
xor
mov
fdivs
iret
stos
out
fidivs
and
xor
cmpsb
jle
push
test
xchg
pop
add
hlt
enter
lcall
sub
and
fwait
inc
aam
fldenv
iret
push
ret
xchg
fiaddl
decl
insb
sbb
mov
shll
and
lcall
add
jo
dec
push
cmp
mov
orl
inc
push
or
xor
cmp
xchg
bound
filds
lcall
loope
shrl
sbbl
aam
shlb
cmp
call
inc
push
lret
push
xorb
scas
lcall
mov
sub
fs
lods
inc
and
sub
test
pop
icebp
mov
icebp
aaa
cld
xchg
dec
notl
sbb
jae
mov
int
fisubl
pop
stos
jg
sub
sahf
mov
jns
add
ja
out
dec
outsb
sbb
mov
mov
mov
jg
dec
push
push
int3
jnp
int
into
push
push
out
jmp
dec
sbb
out
insl
std
jg
push
xchg
in
decl
pop
inc
test
sbb
push
jmp
nop
gs
lods
mov
das
and
jns
sub
stos
test
call
ja
inc
mov
and
dec
inc
out
dec
sbb
xchg
cmp
inc
xor
adc
jmp
std
test
xchg
clc
push
jae
inc
shl
js
cmp
lret
sbb
jno
jnp
xchg
dec
jb
neg
push
hlt
dec
movsl
mov
stos
mov
fnsave
ja
jbe
jnp
cld
ljmp
dec
sbb
dec
pusha
sbb
pop
mov
adc
and
sar
jg
orb
int3
xor
xchg
push
cmp
rcrl
lcall
enter
cltd
sub
pop
arpl
pop
bound
popf
aam
fsts
or
add
imul
lcall
sub
or
fildll
fmuls
xor
adc
push
push
cmc
sbb
mov
mov
call
in
fdivrp
std
fisttpll
mov
mov
and
test
xchg
ljmp
adc
dec
jl
popf
enter
xchg
fistl
int
loopne
xchg
add
dec
jg
adc
mov
les
sbb
insb
pushf
mov
add
cmp
cmpsb
jne
aam
int
incl
icebp
pop
or
mov
int
lock
in
inc
and
dec
sbb
andl
rcl
fadd
dec
or
movsl
lea
push
in
inc
sbb
aad
ljmp
inc
or
sbb
pop
xor
mov
rcl
mov
add
inc
out
shlb
es
das
mov
push
adc
push
repnz
add
dec
sub
into
shr
add
pop
push
add
sahf
mov
mov
inc
imul
rorb
mov
mov
je
xor
fnsave
call
sbb
push
xchg
fsub
adc
insb
loopne
cmpsl
mov
stc
in
mov
int3
call
adc
lret
fildll
loopne
popa
jne
rolb
mov
lcall
inc
add
xchg
lock
dec
dec
dec
cmp
adc
movsb
or
sbb
mov
push
xchg
jb
test
sbb
lea
rcrb
mov
xchg
test
mov
sbb
les
or
cmp
xchg
sub
decl
lea
rol
dec
stc
or
orb
add
idivb
mov
adc
and
decb
mov
stos
or
xor
mov
pop
bound
cmp
lea
adc
enter
lcall
inc
lret
mov
xor
pop
cli
pop
cs
mov
push
shrl
sub
and
data16
xchg
add
cmp
push
push
pusha
pop
and
stos
mov
mov
cs
and
and
pusha
mov
loope
push
shl
sub
call
pop
fstpl
dec
sbbb
push
mov
pop
cmp
pushf
les
cmp
jle
mov
std
pslld
aad
call
xchg
xchg
add
sbb
add
inc
scas
int
subps
lds
jle
mov
lds
rolb
fldenv
mov
push
push
vcmppd
inc
xchg
subl
in
cmpb
inc
inc
mov
loope
sub
push
lods
enter
shr
decl
loope
lea
gs
aad
inc
xchg
negb
xor
sarb
add
push
and
movb
sbb
and
push
inc
jmp
mov
cltd
and
roll
xchg
mov
fistl
and
jne
fmull
fs
cld
nop
cli
mov
xchg
jns
sub
add
ljmp
push
jp
xchg
mov
push
fstl
rcr
cmp
sbb
out
push
out
enter
pop
sub
add
adc
dec
mov
sbb
fcoml
pushf
fstps
jg
jg
dec
fimull
pop
iret
mov
cltd
ds
insb
dec
rolb
mov
jmp
in
test
pop
lret
lock
out
std
sbb
adc
sbb
mov
fdivrs
push
leave
sar
mov
rorl
push
jne
add
ds
add
adc
jbe
out
lds
andb
test
mov
xchg
pop
mov
add
pop
or
pop
ljmp
decl
out
out
push
cs
mov
dec
dec
bnd
add
and
jp
mov
pop
push
adc
ljmp
or
push
and
pop
dec
pop
pushf
jl
call
lea
cmc
xchg
lahf
xchg
movsb
jge
push
fadds
loopne
xor
call
test
add
jg
rolb
inc
mov
out
inc
call
push
xchg
int
and
push
hlt
ljmp
addl
icebp
push
pusha
pop
xor
aam
push
mov
jmp
sub
add
jmp
insl
test
fs
hlt
sbb
xor
or
arpl
xchg
aad
fisubl
insl
shlb
in
push
cmp
jno
xchg
es
call
arpl
jecxz
xor
push
mov
dec
or
lcall
mov
push
cmp
inc
xchg
and
insl
fs
push
popf
xlat
dec
xor
or
mov
mov
push
dec
fimull
sbb
dec
lods
cs
jmp
jl
sahf
push
je
add
push
subl
jg
add
inc
jp
fistpl
inc
scas
js
idiv
mov
daa
ficoml
nop
stos
stc
mov
test
jg
dec
mov
cmc
shrl
push
les
shl
jle
and
cmpsb
push
adc
loop
pop
mov
fistpll
sarl
mov
xchg
mov
cmpsb
shll
bound
xor
hlt
into
jb
in
pushf
dec
jmp
loope
xchg
push
lcall
mov
pop
aad
js
std
inc
mov
mov
jns
imul
xchg
das
addr16
adc
dec
imul
popf
std
and
jo
inc
inc
aas
mov
jg
test
or
xchg
fsubs
pop
pusha
adc
jge
inc
adc
cltd
fstl
jo
adc
daa
inc
xor
jecxz
inc
pushf
jg
mov
mov
mov
inc
add
mov
mov
stos
push
rcll
jmp
int
and
push
rolb
push
rol
outsl
jmp
or
fsubrs
inc
in
mov
out
call
movsl
rol
jb
mov
and
sahf
xchg
pushf
pop
push
inc
and
lea
incl
fistpl
adc
mulb
pop
mov
lret
imul
dec
test
into
and
jg
out
les
test
lods
or
dec
lock
dec
pusha
and
out
sbb
out
xor
xor
xor
push
and
sbb
jns
cmp
and
or
es
cmc
cwtl
or
inc
push
rol
xor
std
outsl
adc
dec
push
push
insb
ret
cmp
mov
popf
fimuls
mov
adc
sbb
js
jbe
pusha
lods
cmpsl
ss
mov
fbld
pop
lock
add
add
and
pop
lds
push
scas
mov
push
jnp
xchg
xchg
dec
pop
cmc
or
inc
in
stos
lret
mov
call
add
push
insb
cmp
jl
fcomip
ja
cmp
pop
or
insb
in
loope
sbb
icebp
adc
add
js
dec
inc
xchg
fisttpl
dec
xor
out
push
mov
xchg
fbld
jp
les
test
test
mov
sbb
out
cli
jmp
xchg
or
jle
sbb
popf
stos
outsb
push
hlt
pop
scas
dec
ljmp
je
and
sbb
and
ljmp
or
fs
inc
and
hlt
sbb
mov
adc
xor
inc
xor
pop
iret
jno
push
push
aam
arpl
push
les
push
addr16
clc
jbe
mov
pop
cltd
cmp
dec
inc
xor
sbbl
pop
test
pop
insb
sbb
cld
or
ficoml
sahf
push
cmpsl
jb
fldt
or
mov
incl
push
incl
and
notb
es
xchg
inc
lahf
xchg
jp
fdivrl
adcb
push
adc
xchg
nop
or
push
aaa
lret
cmpsl
stos
jbe
jg
mov
fidivrs
push
js
pop
or
in
push
mov
push
ds
pop
negl
out
pop
fidivs
nop
mov
fdivr
incl
inc
pop
inc
dec
pusha
add
test
adc
cs
stos
inc
lahf
testl
push
jmp
pop
xor
and
mov
mov
jmp
outsb
icebp
pop
aad
movsb
pop
cltd
mov
ljmp
mov
dec
mov
lcall
rorl
push
dec
lods
add
je
adc
and
pop
lods
rcrl
incl
sti
mull
adc
add
lea
enter
mov
aas
inc
aaa
push
es
jle
call
and
clc
jp
ss
test
pusha
push
jmp
mov
notl
mov
jne
jno
inc
xor
repnz
jb
repnz
mov
cmpsb
divb
pop
clc
ljmp
xor
jbe
inc
and
push
jae
pop
xor
push
aas
imul
call
or
dec
jp
cmp
xchg
jae
test
mov
inc
inc
mov
loope
out
ss
fstp
or
inc
or
push
cmc
loope
adc
fistps
sbb
xor
adc
shrl
jnp
mov
mov
outsb
std
cwtl
enter
pushl
mov
scas
loope
push
dec
and
fstps
stos
adc
pushl
jns
lods
pop
jecxz
jp
outsb
bound
push
add
frstor
xor
imul
push
mov
push
filds
fs
mov
incl
lret
xor
mov
push
dec
or
fdivrs
push
xchg
mov
mov
sub
fcoml
ret
shrl
pop
cmp
mov
mov
sub
loopne
pop
incl
xchg
outsl
loopne
int3
cld
cmp
jmp
or
sbb
mov
enter
dec
dec
add
rol
xchg
and
or
rcll
sbb
mov
mov
outsb
nop
pop
jae
pop
or
hlt
mov
and
sti
mov
ffree
jmp
call
mov
imulb
loope
push
stos
addb
loopne
rorb
or
leave
and
jecxz
lret
adc
adc
ja
pushl
aad
popa
push
les
clc
inc
vandnps
add
cwtl
pusha
jno
mov
loop
inc
sub
cmpb
jno
mov
ja
cmp
sarb
add
clc
push
cmp
xchg
add
mov
sub
mov
jg
xchg
stos
sbb
mov
les
fstpl
pop
push
inc
sbb
pop
cmpsl
inc
std
pushl
push
cmp
jg
sbb
mov
mov
cmp
int3
scas
mov
mov
cmp
ljmp
clc
adc
mov
out
mov
cmp
push
inc
mov
mov
jbe
and
sbb
dec
sbb
dec
jnp
in
push
frstpm(287
push
nop
imul
cli
addr16
es
adc
es
shll
push
daa
mov
fs
lcall
add
test
imul
leave
test
frstor
push
adc
adc
loop
idiv
decl
int3
push
sbb
sbb
sbb
sbb
inc
sbb
cli
or
inc
sbb
or
jmp
lcall
stc
scas
lahf
inc
inc
cmp
jmp
mov
inc
inc
hlt
mov
clc
rolb
adc
adc
inc
xor
mov
lcall
popa
inc
leave
xchg
xchg
dec
xorb
push
xchg
pop
mov
dec
fwait
pop
es
jmp
ja
add
imul
jbe
add
mov
xor
je
dec
cltd
xchg
scas
into
lods
cmp
in
xchg
das
mov
fs
push
jmp
cmp
inc
cvttps2pi
jge
jecxz
pop
push
pminsw
mov
mov
stc
into
cmpb
sar
jo
mov
jo
push
and
pushl
sbb
adc
int3
dec
test
sbb
bound
shlw
mov
lock
pushl
mov
adc
ficompl
inc
shlb
fstl
out
cmp
jmp
scas
add
lret
subl
jne
sbb
jo
fisttps
pop
mov
mov
and
repnz
jno
lcall
push
cld
mov
mov
add
cld
div
out
pop
aam
or
incl
add
or
into
fs
push
cmp
xor
aam
scas
pusha
inc
insl
or
add
cmp
cmc
fisubrs
daa
lahf
es
sub
loop
orb
jbe
mov
inc
adc
add
mov
lods
lea
pushl
inc
js
push
enter
sub
movl
in
ljmp
mov
ljmp
leave
nop
add
decl
mov
cltd
cld
insb
dec
and
mov
mov
cmc
jo
mov
push
mov
in
movsb
sbb
xorb
pop
jecxz
xor
pusha
mov
mov
push
dec
xor
dec
xchg
mov
push
lods
call
mov
lcall
lcall
mov
push
push
mov
xchg
jmp
and
xor
lcall
scas
mov
nop
mov
mov
cli
adc
insl
push
and
cmpsl
or
incl
mov
rcll
int
insl
pop
lret
push
xor
cmp
sar
call
inc
in
cmp
cmp
xchg
or
cmp
pop
in
arpl
cmp
nop
sbb
out
adc
dec
pop
sarl
fildll
sub
fdivl
sub
cmp
in
scas
cmp
add
add
xchg
movsl
incl
xor
mov
cmpl
ljmp
jmp
jb
loope
pop
and
ret
sbb
adc
and
icebp
inc
mov
inc
or
adc
pop
xchg
out
movsb
or
mov
and
dec
dec
dec
xchg
stos
fcomip
pop
cmp
cmc
mov
push
bound
rcll
cmc
sub
lret
in
pop
sub
xlat
pop
inc
and
sbbb
das
ficomps
inc
loope
jmp
es
outsb
std
int3
or
mov
ljmp
cmpsb
push
dec
std
test
dec
push
enter
push
mov
cmp
fcoms
or
or
sub
mov
push
pop
xorl
int3
sub
xor
mov
pop
fs
jmp
adc
xchg
popa
addr16
jl
insb
mov
cmp
lods
iret
outsl
dec
cmp
sti
push
mov
sti
fsubl
sub
or
sub
pushl
sbb
sub
fs
ljmp
fmull
rol
hlt
cltd
fadds
and
mov
xchg
cmp
dec
lock
or
dec
xchg
xchg
hlt
pop
lock
cwtl
inc
add
or
or
out
shlb
shr
inc
ja
ret
inc
jl
or
lock
xor
fcmovbe
xchg
jecxz
js
lea
or
and
dec
into
shll
mov
ljmp
enter
inc
sub
push
sbb
add
inc
add
ss
fs
xchg
push
jbe
or
ss
and
add
mov
xor
ja
mov
push
dec
lods
inc
cmp
mov
mov
jmp
out
aaa
cmp
insl
stos
sub
or
xchg
enter
sub
add
and
jg
ljmp
pop
mov
inc
jno
dec
cld
pop
addr16
mov
mov
pop
add
lcall
pusha
fldl
lods
imul
pop
icebp
test
push
addb
and
mov
jmp
cmp
lds
out
lea
cmp
ror
outsl
mov
adc
cmp
leave
and
out
clc
fdiv
mov
xchg
shlb
adc
gs
ljmp
push
imul
add
add
lock
mov
out
jg
fcmovu
jle
ret
mov
add
adc
fcoms
pop
and
data16
cli
add
mov
loopne
push
mov
mov
cmpsb
dec
mov
loope
sub
and
das
stos
jmp
and
dec
ficompl
xchg
lds
inc
and
fisubl
test
and
ljmp
adc
sub
dec
mov
test
sub
fwait
call
push
and
and
jmp
jo
or
pop
pushf
call
and
inc
xchg
dec
and
sub
inc
sbb
loopne
rclb
ror
ds
shlb
nop
mov
test
std
inc
sub
and
pop
fucom
outsb
xchg
mov
test
xchg
mov
jecxz
bound
push
sahf
sbb
pop
or
movsl
add
sub
inc
or
fidivl
mov
decl
pop
jg
pop
mov
dec
daa
pop
arpl
lcall
es
adc
or
fistpll
test
inc
lcall
inc
mov
mov
not
pop
in
jl
or
test
das
jmp
inc
loop
jmp
mov
fxch
push
out
mov
add
mov
dec
arpl
hlt
dec
test
out
jp
cmp
xchg
pop
ds
add
dec
decl
dec
or
cli
mov
push
sbb
es
ljmp
sbb
inc
mov
cmc
lods
mov
rcrl
xchg
pushl
nop
adc
mov
lret
lock
dec
out
scas
jo
jno
jmp
mov
cltd
arpl
aad
jae
lods
or
insl
mov
nop
xchg
xchg
pop
mov
imul
das
shrb
push
stos
les
push
jl
out
push
cmp
lea
outsb
sbb
mov
push
xchg
jg
sub
sbb
mov
fcoms
mov
aad
push
adc
xor
pop
mov
pushl
mov
xorl
inc
fnstcw
xchg
repnz
fwait
aam
dec
jg
sub
push
and
out
shrb
mov
lcall
add
xor
add
rcrl
cs
mov
add
pop
mov
out
inc
xor
fwait
pop
jg
push
pop
jle
inc
add
mov
push
stc
mov
loope
loope
roll
adc
add
and
mov
dec
decl
imul
ret
xchg
icebp
xor
push
add
dec
mov
jle
xchg
shlb
lcall
or
xchg
add
movsl
sbb
xchg
dec
je
sarl
test
cmpsl
insl
rorb
fisubs
push
mov
or
jmp
orl
fmul
jg
ja
push
xchg
dec
sbb
cmp
cmp
lock
xlat
dec
jp
loopne
pop
imul
jmp
lret
jne
repnz
or
cs
fsubrl
push
adc
xchg
pop
jmp
fiadds
xlat
mov
sub
pop
dec
jnp
mov
sahf
inc
andl
les
cli
mov
cli
mov
insl
insb
inc
incl
cld
sub
adc
ljmp
xor
lret
loop
xor
ljmp
andb
cmpsb
mov
das
clc
cmc
das
or
xchg
pusha
or
push
daa
mov
or
jg
stos
jo
adc
inc
lds
push
shl
loop
add
pop
test
or
xor
sub
lcall
imul
sub
add
ljmp
pushl
mov
and
xchg
mov
and
sub
jae
and
popf
push
popf
mov
and
ret
mov
scas
rcrb
call
fildl
and
adc
lods
in
data16
dec
jmp
sar
push
add
inc
inc
idivl
pop
adc
in
out
and
dec
stos
aas
cmp
incl
jmp
loopne
aad
lahf
stc
pop
les
add
popa
in
push
xchg
orb
mov
mov
mov
popf
mov
pushl
arpl
and
enter
movsl
jge
or
ret
movsb
jmp
fdivr
xchg
sub
subb
pushf
out
incl
out
ds
cld
into
mov
lock
dec
cmp
and
call
stos
cmpsb
sub
jp
les
rcl
dec
or
std
push
jecxz
addr16
inc
push
rolb
mov
call
jg
sub
rcrb
int3
jmp
stos
movsb
test
and
shll
mov
mov
out
xor
xadd
pop
dec
shrb
mov
or
sub
loopne
inc
fmul
fs
aaa
cld
jmp
insl
mov
out
dec
or
or
push
outsl
dec
or
sub
mov
fs
decl
mov
scas
ret
inc
xchg
inc
into
stos
mov
cmp
je
call
xor
es
std
fmull
leave
jb
in
or
push
jo
mov
inc
imul
in
or
aaa
adc
pusha
push
ja
inc
out
jo
adc
xchg
add
inc
mov
inc
add
jmp
cmp
cli
sub
ljmp
dec
dec
lock
dec
xor
pop
add
cltd
and
dec
jmp
jg
stos
fdivl
clc
gs
jo
les
cmp
jp
in
test
pop
shlb
out
pop
inc
dec
out
fisubs
and
inc
sub
pop
or
test
hlt
xchg
call
adc
jg
test
fs
dec
add
andb
pop
pusha
sbb
test
inc
pushf
push
loop
cmp
or
dec
movsb
hlt
dec
dec
fwait
xchg
add
sub
div
and
and
pusha
mov
push
or
jno
xor
fildll
push
clc
and
in
mov
mov
cwtl
das
stos
inc
add
into
jmp
call
loopne
or
push
push
std
push
mov
pop
push
ret
mov
fs
in
sti
pushl
ss
cli
push
repz
insl
inc
sub
leave
rorb
add
ljmp
sub
lret
sbb
out
int3
xor
and
out
mov
test
jg
lds
cmpsb
scas
das
jo
scas
xor
mov
or
inc
inc
jg
sub
or
dec
repz
shll
insb
add
addl
push
pop
pushf
push
fs
pushl
lret
jb
push
cld
ljmp
xchg
call
rolb
pushf
js
cmp
sub
out
add
or
sbb
dec
lahf
je
xor
add
jmp
sub
dec
adc
dec
in
sub
int3
lret
xor
aad
inc
fs
outsl
and
mov
ret
lods
cmpsb
push
or
and
bound
rolb
test
xchg
testl
push
xor
xor
ljmp
push
rol
sub
dec
and
push
adc
sbb
mov
mov
jmp
mov
mov
add
push
out
inc
and
aad
scas
mov
adc
scas
xor
sub
sub
xor
xor
mov
xor
push
mov
mov
and
ret
pusha
js,pn
in
push
pushl
outsb
pop
xor
jno
sbb
adc
push
xor
call
icebp
jg
and
sbb
mov
xchg
xor
lcall
inc
lcall
test
jne
icebp
fwait
inc
loop
mov
in
hlt
xchg
shl
ljmp
adc
call
cmp
out
cmp
add
xchg
inc
movsb
repnz
aam
gs
sbb
sar
rolb
xor
shll
inc
xchg
xor
or
mov
mov
mov
mov
fisttps
xchg
mov
push
mov
call
popa
test
bound
pop
and
sarb
es
decl
adc
clc
icebp
xor
or
test
je,pt
mov
inc
xchg
inc
leave
mov
inc
pop
inc
daa
inc
je
incb
sub
lods
inc
pop
stc
mov
loope
xchg
cli
mov
je
shll
push
xor
nop
pushl
sbb
repz
lcall
add
or
lds
out
pop
adc
loopne
sub
adc
dec
dec
push
call
leave
inc
ljmp
insl
and
add
inc
mov
shlb
stos
add
jg
and
daa
lods
imul
xchg
lahf
jbe
cwtl
push
push
aam
outsb
mov
arpl
lods
or
push
arpl
imul
mov
je
xor
arpl
test
add
fcoms
push
jae
mov
xacquire
add
lea
dec
adc
jno
fwait
push
call
loop
and
icebp
adc
in
fmul
xor
call
scas
enter
idivl
les
add
fisubs
lods
mov
dec
and
divps
call
sti
loop
pop
pop
xor
aad
in
loopne
out
jno
scas
pop
xor
inc
aaa
mov
jo
les
push
imul
dec
arpl
rcr
inc
xor
bound
jg
pushl
mulb
mov
add
sub
sahf
cwtl
mov
inc
les
lret
ljmp
call
data16
inc
push
fs
cmpsl
jmp
arpl
or
add
icebp
pop
test
jbe
xlat
aaa
comiss
cli
call
cmp
push
test
ror
arpl
in
ret
out
call
jmp
enter
add
stos
dec
loopne
or
inc
or
jb
pop
call
nop
ret
clc
or
repnz
push
fnstenv
pop
and
sbb
cld
push
cmp
sub
lock
test
inc
cmpl
dec
fcmovnbe
pop
or
stos
mov
test
and
jg
or
sub
jns
test
call
sbb
push
loop
sbb
or
lea
call
or
dec
inc
daa
je
cmp
mov
jecxz
scas
cli
je
xchg
jb
jmp
lock
pop
aaa
pop
std
mov
jmp
repnz
add
sbb
testb
scas
or
jmp
dec
push
dec
pusha
xchg
adc
call
mov
add
xor
les
and
aam
xor
mov
xlat
arpl
mov
cmp
dec
dec
sbbl
add
jmp
icebp
push
cmpsb
lods
jmp
call
cmpsl
arpl
or
cld
adc
test
in
decl
xchg
add
sub
bound
inc
test
and
push
lret
imul
jbe
incl
dec
mov
add
push
cmp
and
mov
test
pop
lea
adc
cwtl
cmc
shr
cld
xor
lea
orb
and
fs
jne
clc
insb
out
cmp
insl
push
js
decl
cmp
adcb
aad
pop
dec
jnp
inc
add
les
into
loopne
data16
jg
mov
das
push
push
jl
nop
dec
xor
mov
adc
jne
jns
sti
sbb
mov
test
call
les
xchg
cmp
gs
xor
or
movsl
scas
mov
cld
dec
mov
jmp
outsb
push
push
ja
cmc
dec
jg
jg
call
ds
rcl
fwait
jmp
std
mov
movsb
testl
inc
cltd
js
das
cli
jns
lock
scas
notl
xor
hlt
es
push
pusha
out
daa
jl
into
jbe
in
or
mov
pushl
repnz
sbb
sbbb
jle
jo
xor
cmp
mov
repz
lcall
and
sarl
imul
imul
fprem
pop
lock
es
push
cmp
cwtl
mov
dec
xchg
ljmp
jo
sub
mov
fwait
inc
cwtl
imul
dec
and
movsb
lcall
int3
mov
mov
rcl
push
mov
jb
push
inc
es
mov
push
inc
aas
jmp
mov
and
jno
cs
cmp
addr16
fwait
sbb
mov
movsb
decl
test
inc
jmp
lcall
ja
js
xchg
icebp
xchg
rcrb
popa
xorb
stos
das
clc
jmp
add
cmp
es
inc
jb
inc
int3
adc
mov
clc
mov
clc
incl
pop
xorb
push
add
int3
cmp
sub
cld
cmpsb
mov
xchg
cmp
shll
xchg
jecxz
lcall
push
inc
fdivl
shrb
and
mov
dec
testb
lret
lods
sarl
xor
cmp
mov
push
xor
push
hlt
sbb
cmp
xchg
shlb
ja
sbb
imul
call
push
sbb
ffree
test
call
mov
cmpsb
cmpsb
subb
mov
lock
call
popa
enter
into
jo
and
aad
inc
or
push
push
pop
adc
mov
repnz
dec
sti
xchg
dec
xchg
mov
fstps
xor
jns
inc
pop
jnp
push
fistpl
or
sub
sti
adc
ret
mov
xor
ja
dec
ljmp
imul
aas
stos
ss
in
add
mov
jmp
pop
decl
pop
ret
mov
mov
arpl
call
push
cmpsl
daa
sti
hlt
lret
mov
movsb
test
lods
and
pop
mov
mov
addr16
call
push
push
inc
stc
jge
jne
pop
in
pusha
xchg
rcrl
mov
mov
sub
pop
ret
inc
or
iret
repz
call
pop
decl
daa
in
inc
xchg
filds
push
xchg
les
mov
cmc
xlat
push
enter
jne
out
cmpsl
jb
decl
scas
stos
sub
push
push
outsl
mov
pop
inc
sub
out
add
pop
and
push
fdivr
call
pop
das
xchg
cwtl
dec
scas
adc
push
jae
pop
pop
xchg
lods
fists
pop
mov
out
xchg
int3
std
iret
mov
jne
mov
leave
mov
fwait
loop
mov
mov
push
push
cli
js
addr16
imul
bound
rolb
fbld
mov
mov
cmp
xchg
incl
fs
stos
sbb
push
out
cmpsl
inc
iret
out
fstl
xchg
adc
xchg
xchg
jl
call
sbb
andl
icebp
mov
lock
cmp
mov
orl
push
insb
movsl
ljmp
xchg
sbb
or
cmp
addl
pop
dec
and
add
or
jmp
pushf
les
repnz
std
insb
xor
dec
cwtl
rorl
fbstp
dec
out
data16
fisubl
repz
or
fst
add
lret
lods
sub
cmp
mov
pop
scas
pushf
pop
lds
mov
filds
aas
inc
aam
dec
mov
sbb
sub
lock
loopne
mov
push
or
pop
mov
cwtl
lret
mov
xchg
data16
outsl
and
fidivrs
jle
std
cmp
decl
mov
nop
vrcpps
pushf
gs
sbb
aaa
sub
mov
mov
clc
incl
cltd
call
xchg
xchg
movb
jb
pusha
mov
sub
popf
jmp
inc
clc
and
xchg
push
pop
or
pop
xchg
lock
stc
ret
pop
xor
movsb
push
and
in
lock
mov
rclb
adc
lcall
into
add
pusha
es
popf
das
sub
test
jb
leave
xchg
and
sbbb
jmp
xchg
sub
jno
jl
loope
xchg
cmp
jmp
jns
push
cmp
sub
jg
mov
dec
mov
int
and
adc
leave
pop
jmp
cmp
and
inc
sbb
testb
jecxz
jge
inc
pop
scas
inc
pop
cs
mov
out
and
xchg
mov
cs
mov
hlt
and
mov
jmp
cmp
mov
lret
xorb
ss
lock
orl
sub
mov
incl
mov
xchg
or
xor
xor
mov
mov
or
enter
rcr
mov
clc
out
loopne
aas
loopne
add
or
pushl
cmpsb
xchg
pushf
mov
test
imul
fistps
push
mov
xor
dec
add
mov
decl
pop
sub
inc
icebp
xlat
pop
shll
std
packuswb
mov
add
pop
outsb
stc
ja
orb
out
outsl
adc
mov
pop
adc
pushl
mov
rorb
imul
xchg
push
cmp
dec
lcall
sbb
int
sarl
xor
hlt
lcall
add
lock
cmp
loope
sbb
push
pop
nop
dec
movsb
jg
dec
fnstsw
cld
mov
movsb
push
pop
jmp
fs
ret
add
add
cmp
and
push
xchg
add
pop
cmc
aad
mov
lcall
cmp
les
cmp
fwait
popf
inc
mov
jg
ja
push
adc
and
mov
push
outsl
ret
push
cmp
mov
fisubrl
pop
popf
adc
dec
adc
push
sbb
xchg
decl
sub
inc
pop
imul
or
pushl
scas
lds
popa
mov
jmp
subl
or
pop
stos
jp
inc
lcall
mov
fsubrs
push
fwait
fwait
inc
jb
fisubrs
lock
fstp
gs
jne
jp
sbb
iret
add
insl
neg
cmpsb
call
stos
and
ja
adc
in
in
popa
xor
cltd
bswap
cmpsl
fistps
adc
fstps
mov
pop
jle
cli
pop
push
jle
lcall
pop
adc
add
decl
xchg
aad
push
ja
andl
jno
aam
adc
lea
adc
ljmp
add
xor
or
roll
jno
jg
daa
sub
outsb
dec
adc
scas
inc
sub
jg
call
aas
pop
out
pop
sarb
adc
inc
push
decl
pop
add
rolb
ljmp
push
sub
aam
push
outsb
xor
push
push
and
or
cmc
push
mov
pushf
xor
fs
pop
jg
icebp
and
and
jp
jmp
and
jg
push
lock
jne
inc
clc
dec
movsl
xchg
sub
xchg
dec
pop
in
icebp
stos
pop
lods
sub
jmp
loop
sti
lods
mov
add
fidivl
bound
stos
sbb
sar
sbb
stc
push
mov
fistpl
xlat
mov
sbb
pushl
lahf
repz
mov
jb
fnsave
scas
push
jae
jmp
jns
into
pusha
test
stc
jbe
movsl
add
imul
pop
sub
jg
add
aaa
pusha
jge
sahf
add
into
or
call
sbb
or
ffreep
je,pn
cli
push
leave
data16
call
loop
pop
push
movsb
mov
cs
in
mov
inc
inc
incl
jo
mov
push
cmpb
sbb
xor
call
loope
jmp
pop
inc
sub
and
or
lock
xchg
adc
push
mov
xchg
ja
pushf
shrb
and
mov
jae
sarb
adcb
pop
pop
lods
or
cmpsb
xor
mov
push
sbb
test
pop
shl
mov
insb
int3
sub
push
mov
inc
dec
mov
int
ljmp
lds
cwtl
xor
imul
gs
mov
cmpsl
sub
cltd
lcall
ljmp
addb
aam
push
xor
or
mov
fsubr
into
push
je
rcr
pushl
aam
pop
fcmovnb
sbb
jne
cmp
xchg
jl
in
out
xchg
xor
lcall
jae
push
add
and
pop
mov
mov
iret
and
add
dec
jg
jmp
add
cmp
loope
jmp
cli
repz
mov
test
pop
hlt
aam
mov
xor
push
leave
pushf
cmp
mov
test
sbb
incl
out
rolb
mov
xor
aas
repnz
push
push
loop
insl
inc
pop
jnp
call
mov
fsubs
xchg
cmpsb
sti
jge
sti
aaa
adc
fcoms
call
scas
daa
int
les
xchg
xor
call
ljmp
xchg
out
or
popa
and
movsb
xor
xchg
sub
shll
mov
adc
dec
jne
or
outsb
test
mov
mov
jle
gs
push
pop
push
jmp
lahf
inc
dec
lods
mov
cmpsb
jne
or
call
cmp
fisttps
imul
ljmp
sub
mov
mov
cwtl
push
mov
jno
cmc
xchg
mov
mov
cmp
repz
imul
mov
xchg
gs
jb
add
ret
mov
add
int
cmp
mov
push
mov
test
mov
sub
push
insl
and
std
cmpsl
cmpb
add
mov
jo
mov
and
hlt
loop
xchg
pushl
mov
sub
loop
mov
pop
rcr
and
pop
test
data16
dec
xchg
mov
call
cwtl
inc
dec
ds
aas
sahf
jmp
mov
test
inc
mov
movsb
cmpsb
cmpl
sbb
mov
ljmp
jle
and
sbb
outsb
lea
aad
decl
cmp
or
inc
mov
ret
and
inc
pop
or
push
les
inc
daa
xor
pushf
mov
daa
lods
push
fisttpl
stos
inc
cmpsb
je
mov
and
xchg
push
and
test
mov
decl
jo
mov
push
sub
push
sub
push
push
jl
dec
xlat
pop
stos
sub
mov
pop
scas
xchg
loopne
push
jne
clc
call
pushf
xlat
push
pop
add
pop
cmp
add
call
mov
ret
adc
mov
in
pop
push
mov
xor
popf
cvtps2pi
test
push
out
outsl
cli
popf
adc
mov
mov
clc
ljmp
enter
insb
leave
gs
jl
and
insl
rcll
fistl
stos
and
call
mov
jno
arpl
subb
and
and
shrb
and
dec
add
add
add
lods
mov
sar
inc
rcl
test
int
push
shll
loop
mov
sub
pop
mov
push
mov
in
sub
sub
ja
test
aam
push
divl
aam
stc
xchg
pushf
mov
lods
cmpsb
cmp
xlat
jmp
mov
testl
sub
pand
jg
imul
inc
add
in
dec
idivl
loope
jb
dec
cs
xchg
stos
cmp
fcomip
sbb
out
dec
pop
repz
adc
xorl
or
orb
sbb
sahf
decl
add
push
popa
mov
clc
pop
out
fimull
inc
push
push
cmpl
test
decl
sub
mov
cmp
mov
fstpl
dec
or
inc
dec
or
enter
gs
mov
and
outsb
mov
push
cld
or
lcall
cmp
insl
mov
pusha
arpl
int
cmpsb
mov
sub
dec
incl
push
xchg
inc
or
push
test
mov
call
incl
mov
mov
sub
hlt
inc
incl
sub
xlat
jbe
out
aam
push
xchg
leave
and
idivb
or
je
mov
sti
dec
pop
or
loope
lret
adc
and
aas
test
ficomps
pop
ds
jne
lcall
xchg
xchg
test
outsb
lret
mov
jae
xchg
mov
mov
cs
push
int3
loope
jae
mov
pop
int3
jp
mov
lret
sbb
int
jecxz
pop
arpl
mov
push
and
std
inc
ss
xor
loopne
push
ja
fisubs
inc
dec
push
divb
push
mov
xor
inc
inc
cld
repz
ret
call
xchg
xchg
imul
sub
push
sbb
addr16
fdivs
call
sbb
xor
mov
sub
adc
inc
pop
cmp
push
cmp
dec
jns
incl
add
es
pop
addr16
pmuludq
push
jb
cmp
or
xorl
adc
call
aad
mov
inc
jp
inc
pushf
mov
aas
adc
sbb
cltd
mov
sbb
insl
xorl
data16
jg
movsl
xchg
mov
push
addl
xchg
mov
cmp
call
test
push
clc
mov
adcb
mov
mov
sbb
dec
xor
jl
push
lret
push
loope
mov
lcall
sbb
and
cmp
inc
cmp
jecxz
ljmp
call
jns
sub
push
mov
add
cmpsl
gs
cmp
xchg
xor
pushl
idivl
add
xor
arpl
add
inc
outsl
idivb
bound
push
and
and
addr16
mov
xor
jmp
sub
push
push
jns
push
adc
xchg
imul
push
orb
mov
lcall
push
pop
daa
in
lock
jne
adc
testl
xor
repnz
jns
or
ret
push
adc
decl
js
cmc
adc
push
pop
xchg
insl
jge
inc
notb
dec
fadd
xor
inc
inc
sbb
jne
je
call
cltd
pop
xor
xor
in
push
jb
xorl
adc
movsb
test
fs
xlat
inc
scas
ret
sbb
xchg
jnp
or
test
dec
bound
cmp
dec
sahf
xor
add
sahf
adc
mov
cmp
incl
cmp
sub
dec
in
dec
cmp
loop
pop
ja
sahf
jno
cmpsb
fcomip
pushl
jo
test
cmp
adc
xchg
gs
jae
mov
cwtl
push
dec
mov
das
xchg
push
jae
and
pop
jnp
and
pop
cwtl
outsb
mov
decl
pop
push
hlt
sub
bound
enter
adcl
jb
ljmp
push
push
mov
xchg
inc
sub
jns
es
xlat
gs
push
pop
fnsave
fbstp
popf
xchg
pop
and
incl
dec
imul
inc
and
jg
push
and
xchg
nop
adc
movsl
imul
xor
and
orl
decl
pop
cmp
and
ret
inc
jnp
jb
aaa
or
pop
cmp
cmpsb
and
sbb
xchg
out
xchg
jo
xchg
adcb
mov
xlat
dec
in
dec
dec
arpl
pop
fsubl
incl
sub
mov
mov
repz
adc
sbb
mov
mov
pop
scas
cwtl
sbb
rcrl
jb
cmp
mov
das
shll
cli
out
je
loopne
push
jg
clc
mov
xchg
jbe
push
fwait
jns
inc
jge
xchg
repnz
adc
repnz
inc
test
xor
xor
sti
add
adc
inc
jl
xor
aaa
mov
inc
sbb
decl
arpl
dec
cltd
sbb
arpl
xchg
je
xor
gs
das
addl
ja
ret
adc
call
mov
hlt
cmpl
jns
stos
sub
ja
dec
es
cmp
pop
lret
jg
cmc
fadd
fsubrs
dec
cmp
fs
or
ljmp
jbe
push
pushw
out
imul
mov
xchg
jle
xchg
adc
mov
cmpsl
enter
repnz
lret
andl
sub
cltd
test
call
call
xchg
fs
fs
mov
inc
popa
jp
or
sbb
ret
lcall
cmp
add
push
dec
mov
pop
sub
and
pop
std
jg
mov
daa
pop
pop
js
lea
pop
test
ret
shr
addr16
push
jne
cwtl
xlat
pop
adc
insl
push
jns
aas
xor
sti
push
rolb
mov
cmp
incl
dec
xor
arpl
jb
mov
inc
cmc
cwtl
xor
fists
jns
and
lods
jp
jns
test
and
pop
js
ljmp
jg
jmp
dec
loope
push
leave
in
adc
leave
test
mov
mov
cmp
dec
jne
jmp
ss
cwtl
mov
loopne
jp
adc
lcall
js
stos
cmp
icebp
push
fs
in
sub
cmp
fisttps
add
cmp
pop
inc
or
pop
sub
jnp
and
jnp
jns
cli
cmp
incl
jl
popa
mov
jp
lods
sbb
rorb
mov
mov
xchg
jne
pushl
push
add
sbb
rolb
sbb
push
call
aas
inc
in
stos
shr
dec
and
or
imul
movsl
lcall
dec
or
jne
cmpsb
pop
adc
and
xor
bound
and
out
cli
lcall
popl
scas
cli
inc
movsl
in
xor
cmp
xor
imul
aaa
cli
ljmp
decl
adcb
pop
fwait
imul
fwait
mov
popa
lahf
cmp
pushl
movsl
mov
mov
cmpsb
movsl
sar
insl
inc
sti
popf
jle
sub
mov
incl
or
cmp
scas
adc
cmp
lds
mov
xchg
adc
push
incl
fdivrl
test
cmp
sbb
add
mov
adc
dec
push
rcll
jbe
imul
std
lcall
mov
cmpsb
mov
mov
adc
push
aam
push
xor
lcall
movsb
dec
mov
mov
ljmp
out
clc
aaa
lret
adc
xor
and
lret
cli
dec
ss
cmp
mov
pushl
pop
lret
xchg
adc
mov
sub
insb
dec
add
add
adc
mov
xor
mov
insl
into
xor
in
jbe
imulb
out
dec
test
pop
jmp
push
outsl
inc
sub
mov
pop
mov
shlb
sub
sub
mov
lret
sahf
xor
jg
call
je
dec
lcall
mov
inc
push
sub
jns
mov
add
decl
sub
cltd
sbb
cmpsl
push
mov
sub
or
pushl
xchg
cmp
mov
inc
sbb
fcompl
xchg
jg
stc
ret
call
je
adc
vmcall
push
add
pop
pop
popa
clc
lret
insl
sti
ret
ret
outsl
mov
jb
lcall
add
lcall
mov
jne
dec
xor
popa
inc
xor
mov
dec
mov
addr16
pop
cmp
ja
and
mov
add
push
jmp
adc
nop
movsl
imul
pop
mov
lcall
fucomip
fwait
or
mov
fldt
xchg
xchg
jne
dec
inc
xlat
test
add
sbb
xchg
repnz
or
into
sub
inc
mov
and
loop
cmpsb
pop
cmpl
cmpsl
push
or
js
mov
jg
mov
loope
les
sbb
sbbb
cmpsb
popa
test
push
mov
jno
mov
frstor
jg
fsubrs
cld
xor
push
and
mov
mov
or
aaa
push
jmp
test
cmp
ljmp
mov
jae
push
incb
lret
sub
ss
xchg
es
and
insb
ret
jmp
inc
sub
inc
dec
sub
dec
and
jl
inc
xor
jno
sbb
mov
inc
int
cmp
pusha
lret
les
cmc
and
enter
mov
sbb
push
add
mov
mov
mov
xor
mov
push
inc
adc
jg
mov
movsb
add
arpl
sub
rcrb
xchg
idiv
cmp
adc
imul
jnp
adc
js
mov
js
stos
mov
pop
xor
lcall
fnsave
and
lods
repnz
sbb
loope
push
dec
or
mov
ret
stos
loope
dec
popf
pushf
xor
mov
cwtl
mov
mov
jg
incl
jg
lods
dec
pop
lea
fdivs
int
sub
cmp
pop
lods
add
call
mov
adc
cmp
jge
jl
and
cmp
cwtl
lcall
idiv
insb
pop
shrl
popa
pop
pop
insb
fwait
xchg
push
jns
add
jecxz
fisttpll
pusha
inc
add
jmp
repz
xor
nop
xor
cmp
xchg
mov
jmp
mulb
xchg
std
ss
or
mov
int
or
imul
lcall
push
cmpsl
es
imul
xor
cmp
js
xchg
xchg
aam
sbb
mov
incl
popa
cmp
bound
fnstsw
mov
dec
mov
je
add
cmp
shll
pop
jmp
mov
shrl
addr16
cmc
dec
adc
in
stos
cld
decl
sub
aam
cmp
jg
mov
addr16
jae
jns
jecxz
call
mov
fbld
mov
inc
mov
and
jbe
or
ljmp
dec
cmc
ret
aam
or
jae
adc
jae
cmp
dec
loope
lcall
aam
popf
inc
hlt
push
add
ss
xchg
imul
call
add
cmp
fcomps
iret
outsb
or
ljmp
sub
push
add
decl
lock
dec
test
xor
add
xor
push
mov
dec
mov
call
bnd
sti
mov
pushl
in
jp
mov
dec
push
cmp
jp
sbb
jl
sub
adc
or
mov
jle
cmp
sub
jle
icebp
leave
out
xor
cmp
rcrl
dec
scas
mov
push
inc
xor
mov
mov
mov
cmp
mov
xchg
jmp
int3
inc
push
xchg
ljmp
mov
adc
rclb
aam
fisttps
sub
imul
decl
jbe
xor
shll
int
cli
mov
adc
ret
mov
pop
mov
call
dec
jmp
mov
jle
loope
sub
call
imul
lcall
test
pop
insb
adc
scas
scas
je
cmpsb
pop
popa
vhaddpd
jmp
filds
push
mov
popa
icebp
xchg
insl
in
adc
jl
pop
sbb
cmp
mov
data16
call
xchg
xor
sub
sar
sub
jbe
xchg
jo
imul
jecxz
rcl
mov
nop
int3
jb
addr16
decl
outsb
aaa
fstl
aas
ret
mov
jns
push
add
sbb
incl
cld
mov
sti
orb
push
adc
lods
ja
cmp
inc
cmpl
pushl
and
push
adc
cld
fbld
push
inc
inc
outsl
int3
out
jecxz
cltd
jb
int3
ret
lds
sbb
daa
push
jbe
mov
pop
dec
aad
scas
mov
fbstp
pushl
pop
shlb
lods
sti
xlat
rclb
hlt
dec
orb
sbb
rol
addl
adc
ret
ficompl
add
inc
fs
adc
pop
sub
cmp
andl
call
out
xchg
xor
push
dec
aam
shll
fnstenv
and
out
pop
ljmp
rclb
pop
xchg
pop
cmc
in
sub
push
mov
insb
push
mov
pushl
in
or
stos
cmpsl
enter
adc
ret
popf
mov
rcl
pop
and
pushl
loope
xchg
add
pushf
xor
inc
adc
stos
decl
outsb
fstl
xor
scas
pop
shlb
lcall
pusha
add
lcall
data16
inc
jnp
xchg
and
jb
scas
or
push
insb
push
sub
lret
clc
or
adcb
pushl
adcb
jge
jb
dec
pushl
inc
xorl
clc
repz
jne
jmp
loope
mov
push
dec
negb
add
mov
incl
jecxz
mov
pop
cmp
cld
push
mov
ljmp
cltd
insb
mov
inc
aam
sti
scas
and
dec
xor
out
inc
cmpsb
add
lock
mov
ret
mov
addb
inc
sbb
xchg
rolb
jns
jo
inc
lcall
ret
mov
xor
push
icebp
aaa
rcl
xchg
or
rolb
and
jg
clc
loopne
and
mov
es
cmp
dec
cmp
xchg
sbb
incl
push
es
dec
add
lret
jbe
fisttps
into
fldl
mov
stos
mov
dec
xchg
lods
cli
insb
pop
mov
ret
sbb
stos
add
cmp
or
ljmp
stos
inc
repz
lods
inc
mov
aam
lock
mov
sbb
int3
scas
push
divl
jne
push
sbb
ljmp
lcall
jmp
repnz
push
decb
mov
mul
mov
mov
jae
pop
pop
xchg
inc
into
xchg
mov
cmp
mov
ret
movsl
dec
mov
xor
ljmp
fwait
jb
icebp
rcrb
sub
inc
lcall
mov
fs
xor
shll
movsb
mov
xchg
sbb
sub
sbb
or
xchg
mov
and
iret
cmp
cmpsl
fs
dec
imul
fistpll
cmp
xchg
xor
nop
jnp
xchg
and
add
jmp
push
stos
imul
lret
cwtl
add
jbe,pt
mov
jl
test
or
add
mov
xchg
decl
inc
jns
shld
je
pushf
imul
ja
nop
enter
mov
push
jnp
jmp
sub
sar
dec
shrb
xor
cld
push
rolb
out
js
es
mov
aad
dec
or
inc
cmc
jg
or
cmp
movl
xor
pop
xor
xor
imul
mov
xor
cmp
ljmp
loopne
adcl
jb
mov
xor
loop
xchg
lcall
divl
sub
mov
mov
pop
and
scas
lret
dec
push
incl
insl
adc
std
fwait
out
pusha
push
dec
xchg
repz
arpl
roll
add
sub
cmp
aas
sub
ficoms
dec
je
or
leave
push
jb
push
sub
ljmp
ficompl
jmp
std
call
lcall
iret
cmp
push
test
subl
nop
xchg
mov
add
mov
inc
out
add
jl
sbb
jg
dec
rcrl
cmp
outsl
xchg
test
add
loopne
xchg
xor
mov
andb
inc
in
cmpl
cmc
movsb
push
cmp
or
xor
and
shr
rcll
fcompl
inc
push
jno
pop
int3
loop
mov
lods
push
xchg
rorl
call
jmp
aas
ljmp
ljmp
mov
add
jle
aaa
add
or
decl
push
pop
int
xlat
into
movsl
sub
mov
xlat
mov
jno
pop
call
sbb
push
sahf
les
lea
adc
add
jne
jecxz
nop
push
xor
cmp
incl
sub
sbbb
mov
gs
mov
jg
fsubl
mov
arpl
sub
pushf
push
push
xor
fdivrl
add
in
lods
jo
xor
push
mov
mov
xorl
sbb
and
addr16
mov
call
and
rcll
xor
rcll
and
xor
add
jmp
and
adc
mov
es
cmp
push
or
push
push
repz
push
xchg
cmp
and
xchg
pop
aaa
sub
pushl
jo
adc
daa
adc
movsl
inc
dec
adc
popa
lea
js
push
inc
sti
incl
xchg
xchg
mov
in
jae
ret
push
jne
push
jae
ror
push
jg
or
pop
mov
daa
mov
push
push
jge
fwait
mov
and
pop
sub
das
cli
call
pop
xchg
cs
scas
cmp
call
dec
jbe
ja
pop
jg
add
mov
xchg
inc
sub
hlt
push
testl
lahf
xor
fisubl
add
pop
mov
adc
fcomip
sbb
push
push
leave
dec
pusha
dec
pop
cli
mov
inc
sti
dec
repz
jmp
cmp
fwait
ljmp
sub
xor
outsl
push
test
xchg
jge
in
mov
jmp
jne
popf
dec
xchg
movsl
lcall
test
and
or
mov
mov
pop
lock
push
lahf
lods
in
mov
sub
sub
jecxz
dec
sbb
pushl
adc
dec
mov
push
xor
xor
cmp
mov
push
add
xor
and
adc
push
std
lds
pushl
xor
sbb
push
pushf
stos
xchg
ret
push
movsb
mov
lcall
lds
lahf
leave
or
lock
aad
add
xor
pop
in
pushf
aad
fcom
dec
ss
jno
and
dec
sbb
cmp
insb
stos
mov
and
mov
mov
adc
and
jnp
fsubs
mov
dec
push
fstps
push
outsb
imul
push
push
or
sbb
dec
push
fdivs
iret
ja
addb
lcall
call
or
imul
or
test
xchg
pop
pop
sti
out
ds
in
xchg
sti
call
and
cmp
aam
fisttpl
out
or
push
psrld
fsts
jg
movsb
add
jle
sbb
int3
cmp
pop
mov
lock
decl
test
push
adc
adc
out
inc
imul
sbb
decl
mov
xor
xchg
cmpsb
cli
add
out
or
jge
pushl
jp
ret
mov
inc
loopne
das
cmpsb
cmpsb
jns
sbb
insb
lcall
and
push
inc
xchg
cmp
ret
or
or
xlat
arpl
iret
mov
push
jbe
jmp
sbb
lds
jmp
pop
dec
jne
int3
and
add
xor
je
lret
dec
add
decl
lock
and
mov
dec
dec
sub
neg
repz
adc
jp
xchg
ljmp
hlt
out
cmp
out
daa
cmp
imul
fildl
decl
je
mov
gs
pop
stos
imul
push
add
cli
jmp
mov
ds
dec
daa
cs
cmp
dec
cmp
sub
fbld
loop
or
ror
push
notl
aad
mov
shlb
ja
dec
dec
fwait
int3
cmpsb
ljmp
sub
lcall
dec
ret
fcompl
xchg
sub
pusha
xor
mov
push
xchg
ret
sub
mov
lock
sub
call
lret
or
cli
xchg
cmc
sbb
fnstcw
shrb
jmp
cmp
dec
mov
jl
cmpl
testl
mov
in
movl
fimuls
mov
outsl
cld
cmpsb
jmp
bound
cltd
xchg
outsl
dec
jne
add
jmp
ljmp
ss
test
mov
cmp
adc
roll
adc
lcall
dec
jmp
ret
adc
push
mov
repnz
mov
lods
mov
fnstenv
push
les
mov
cmpsb
mov
mov
mov
jmp
xchg
nop
mov
scas
sub
lods
mov
stos
push
pop
xchg
and
test
mov
xchg
mov
cli
lcall
jns
aad
mov
mov
pop
orl
ss
pop
xchg
xchg
ret
mov
lcall
xbegin
pusha
jmp
jg
stos
mov
popf
push
shll
fs
std
ficoml
mov
loopne
fcom
mov
fsubl
inc
repnz
rcrb
or
outsb
xor
das
test
movsb
push
inc
jp
or
and
cmp
cmp
lods
add
jo
inc
cmp
jg
cmp
or
jecxz,pt
test
cmpsl
pop
fidivrl
cs
jle
mov
and
xchg
adc
push
jmp
ljmp
mov
xor
cltd
xchg
xor
jb
mov
fsubr
test
mov
outsl
stos
mov
lock
mov
adc
pop
hlt
mov
cmpsl
jbe
nop
call
mov
nop
mov
rolb
pusha
mov
rclb
push
fstpt
sarb
ds
stc
mov
mov
cld
xor
cs
cmp
mov
enter
inc
cmp
or
xor
ret
repz
inc
outsb
sbb
jmp
mov
outsb
mov
mov
jmp
lods
or
mov
insb
lret
mov
cld
repnz
mov
mov
mov
movsb
fsubrp
sbb
movsb
mov
mov
fcomps
dec
fisubl
aaa
add
test
jle
imul
pop
pop
scas
xchg
insb
sbb
xchg
mov
pushf
dec
or
outsl
outsb
pop
xorb
sbb
cmp
pushl
sbb
cld
xchg
mov
push
movsl
cmp
add
repnz
movsl
icebp
call
mov
imul
shrl
aam
xor
test
push
adc
push
les
sub
mov
imul
xor
aas
repnz
cmp
ljmp
or
mov
mov
movsb
imul
pop
pop
imul
hlt
cltd
pop
loopne
lcall
sub
loopne
mov
aas
cmpsb
dec
mov
and
scas
pushf
lea
inc
lea
hlt
adc
jo
lock
scas
ljmp
mov
call
cld
inc
pushf
lahf
xchg
adc
sbb
xor
pushl
bound
enter
or
sbb
add
or
fcmovne
sub
jg
ljmp
mov
mov
mov
loop
nop
xlat
js
xlat
call
mov
rcll
push
jmp
pop
add
sbb
xchg
xchg
add
test
loopne
push
pop
cmc
pop
dec
imulb
inc
clc
dec
add
inc
hlt
sub
leave
jl
test
mov
lds
sbb
enter
mov
mov
out
jnp
adc
add
dec
int3
aas
cltd
xor
cli
dec
dec
jno
fcmovb
xorb
xchg
cmpsb
fs
outsb
mov
dec
add
cmp
lcall
mov
lock
or
pusha
adc
or
cwtl
xor
push
and
sbb
call
jmp
push
ljmp
mov
adc
hlt
decl
inc
sub
test
mov
fmuls
popa
mov
inc
shrb
mov
or
lret
outsb
adc
sbb
jo
or
shll
mov
jae
sti
fildll
ficompl
add
mov
push
cmp
sbb
or
sar
call
sbb
mov
sub
and
mov
xchg
in
ds
jg
sbb
or
adc
sbb
add
adc
sub
adc
push
fdivrp
jmp
push
dec
mov
cmc
lcall
jmp
mov
roll
sub
jnp
out
xchg
jbe
adc
mov
mov
push
cmpl
mov
inc
lret
xor
andb
mov
pusha
aam
fwait
out
fstpt
sub
cmpsb
mov
jns
push
scas
nop
adc
loop
ds
ljmp
jns
mov
mov
pushf
pop
adcl
cmp
xlat
inc
and
xchg
sub
aaa
xor
call
popf
cmp
das
shrb
xor
and
push
lea
call
icebp
mov
xchg
js
je
popf
pop
imul
jg
sti
enter
aad
cmp
sbb
dec
mov
sbb
dec
cmp
push
jg
push
xor
sub
pop
dec
outsb
or
xchg
xorl
decl
out
sbb
std
and
mov
sub
cmp
mov
and
xor
jmp
fistps
test
dec
mov
cmp
dec
in
xchg
mov
mov
xor
dec
mov
mov
mov
jns,pt
pop
inc
fwait
cmp
and
inc
call
xor
bound
push
adc
cs
decl
mov
or
aaa
pop
xchg
push
or
scas
inc
icebp
or
push
and
inc
mov
push
dec
pop
cwtl
enter
pushl
shrl
sbb
xlat
sahf
push
mov
sbb
xor
inc
fisttpll
ret
jno
ljmp
pushf
pop
or
out
cli
fcomip
and
rclb
orb
pop
movsb
insl
fisttps
ja
popf
jl
fmuls
cltd
lret
subl
bound
stos
mov
cltd
js
pop
jmp
clc
lcall
lret
push
pop
and
pop
sbb
pusha
adc
sbb
mov
jge
mov
icebp
iret
add
pusha
sub
mov
nop
lods
mov
cmp
call
stos
xor
cmpsl
lret
pop
adc
lret
aas
or
cmc
xor
ret
int3
mov
jecxz
pushf
cmp
adc
and
and
subl
mov
movsl
sbb
mov
fucomp
pushf
enter
fnstenv
ret
insl
mov
adc
or
sub
ja
cmp
test
jno
fsub
sub
loope
loope
sub
pushl
pushf
insl
fcomps
and
lret
lock
addb
push
mov
pop
inc
pop
in
xchg
dec
cmpsb
lods
cmp
adcb
les
mov
popf
cmp
out
mov
xor
mov
xchg
pop
sub
add
push
fdivrl
testb
call
ds
sub
popf
xor
dec
mov
mov
sub
pop
adc
daa
lds
clc
sti
or
das
inc
dec
xchg
or
inc
fnstsw
loope
add
lods
xchg
sub
icebp
fildl
add
bound
std
call
mov
fwait
inc
fidivl
rcrl
xchg
cli
jg
aam
mov
sbb
push
push
push
scas
mov
test
jmp
sbb
ljmp
or
xor
xchg
in
push
in
add
mov
lock
in
fdivs
inc
out
outsl
adc
lcall
jl
mov
pop
cmc
mov
stc
mov
fbstp
add
dec
push
sbbb
int3
push
inc
and
sbb
mov
or
xor
dec
push
pushl
mov
jnp
jge
gs
xchg
dec
xor
sahf
sbb
sahf
das
xchg
movsb
decl
mov
mov
jmp
pop
sti
inc
sub
and
push
inc
mov
push
add
aam
data16
stc
xor
stos
out
popf
cmp
sar
punpcklwd
sbb
les
pop
sub
lret
jb
insb
mov
mov
sbb
repz
push
and
xchg
xor
sub
xchg
sbb
aam
mov
les
call
rolb
sahf
inc
inc
sbb
dec
aaa
xor
jg
icebp
idivb
psrld
in
outsb
dec
push
lods
pop
xor
or
popf
mov
movsl
jp
cmp
cmp
adcl
cmp
icebp
sbb
lcall
mov
mov
sahf
sbb
loop
pop
and
push
cmp
outsb
jle
inc
xchg
fsubs
fdivrl
xchg
loopne
pushl
jge
pop
arpl
add
dec
mov
cs
cs
scas
push
int3
mov
decl
clc
sti
popa
pop
movsb
inc
and
pop
enter
jg
or
fnsave
insl
lock
mov
adc
xlat
jmp
inc
in
mov
loop
xchg
xor
fcmovbe
loop
sbb
inc
aad
jg
inc
std
imul
mov
jle
mov
sahf
movsl
sbb
pushl
mov
aam
mov
xchg
in
fstps
mov
loop
ljmp
daa
pushf
inc
pusha
add
out
or
cwtl
mov
fcoms
sbb
iret
cmp
sub
pop
or
mov
sti
cld
ljmp
mov
nop
or
adc
popa
cmp
cmp
outsl
inc
shl
xchg
mov
fwait
mov
pop
call
in
jp
mov
pop
mov
inc
mov
ljmp
insl
push
pop
sarb
jno,pt
xor
xor
imul
jmp
adc
mov
pushl
ret
es
fimuls
mov
mov
in
out
push
mov
ror
mov
push
jo
adc
popf
push
ret
clc
push
sarl
in
inc
call
push
hlt
add
inc
ss
sahf
and
ret
in
inc
ljmp
push
ret
aas
and
out
push
dec
cmp
push
cmpsl
xor
push
notl
adc
lcall
xchg
aaa
neg
adc
push
add
mov
jg
jo
push
add
adc
pop
add
sbb
sbb
lods
jmp
add
incl
out
sub
and
pop
mov
jmp
aam
popf
sbb
adc
push
push
add
das
loopne
mov
decl
adc
add
mov
xor
mov
jmp
cmp
mov
lods
cmp
loopne
xor
call
decb
testl
cmc
xor
movsb
fbld
pop
sbb
decl
push
add
push
cmc
movsb
insl
cli
and
mov
dec
xchg
nop
movsl
or
pusha
scas
mov
push
mov
in
imul
push
sbb
clc
jmp
pop
mov
push
push
ja
inc
mov
mov
adc
shlb
outsl
sub
jae
inc
cmpsl
lods
xchg
mov
es
test
adc
xor
cld
test
mov
hlt
arpl
mov
sti
out
ja
clc
push
lret
sbb
out
pop
out
mov
mov
mov
dec
mov
inc
dec
jmp
adc
mov
push
fwait
cmp
jno
lcall
fildll
xchg
insb
dec
aam
mov
pushf
pop
fistps
pop
or
jmp
pop
mov
idiv
icebp
jmp
inc
dec
dec
and
dec
add
push
lcall
or
lcall
icebp
mov
test
mov
push
or
adc
pop
dec
mov
mov
cs
push
mov
repz
icebp
cmp
jo
lock
in
in
xchg
inc
aas
add
mov
adc
subl
or
pop
cwtl
ud2
and
clc
or
mov
inc
xchg
ss
icebp
jmp
cwtl
mov
xor
sub
call
sub
shlb
in
in
jns
out
add
ja
in
repz
push
std
stc
mov
int3
and
dec
inc
mov
ljmp
loope
sub
and
in
mov
sub
and
fs
add
ljmp
jne
int
in
in
pop
mov
or
lock
adc
pop
sub
out
xchg
and
push
aaa
scas
in
mov
or
lcall
incl
sahf
incl
lcall
or
nop
mov
mov
shrl
mov
scas
insl
push
mov
sar
ja
jl
test
fwait
inc
mov
cmpb
insb
adc
cwtl
call
fbld
data16
jne
shlb
adc
mov
movzbl
hlt
pop
mov
mov
fdivrl
and
clc
pushl
jg
imul
inc
loopne
shll
fadds
and
and
dec
in
or
push
push
dec
adc
and
and
pop
dec
sar
sub
cli
jb
add
jns
xor
incl
lods
nop
push
inc
add
fmul
sarb
xchg
cmc
jecxz
ds
pop
push
dec
cs
xchg
rorb
sub
call
and
inc
push
dec
xor
test
inc
push
ds
je
dec
dec
in
in
pushl
xchg
dec
gs
add
mov
les
in
add
in
add
add
inc
push
xchg
sbb
mov
pop
pop
jl
push
pop
jns
out
ljmp
stos
push
cwtl
orl
cmpsb
add
shlb
fs
push
bound
incl
adc
pop
push
add
adc
push
sub
inc
push
and
lret
lods
mov
popl
or
mov
mov
ficoms
cld
lock
inc
adc
mov
xchg
loopne
aad
push
in
pop
xlat
jbe
ficoms
xchg
xchg
mov
out
lcall
js
popa
mov
jle
shl
out
adc
push
arpl
sbb
adc
lcall
jecxz
mov
cmpsb
pushf
jne
xor
addr16
sub
shrl
incb
sbb
enter
arpl
adc
inc
clc
lock
mov
jno
push
dec
jle
fsts
mov
jmp
cld
arpl
dec
adc
fbstp
inc
jo
inc
adc
cmp
pop
push
pusha
lcall
adc
xor
mov
xchg
lcall
push
jge
sahf
insb
lods
or
xchg
jle
mov
jg
mov
push
pop
andl
fsubs
mov
cmc
xchg
xchg
pop
popf
stos
test
cmpsl
cmovp
es
cli
xchg
mov
stos
add
jo
adc
push
lea
popf
dec
xor
stc
ss
inc
inc
cmp
and
add
fidivl
sub
cld
or
or
es
fadd
shrb
daa
sub
popf
mov
jno
sub
sahf
mov
jnp
mov
fnstsw
and
fistpll
dec
mov
pop
mov
xor
and
loop
decl
sbb
out
add
and
in
fcoml
movsb
jae
sbb
in
rcll
insl
test
addr16
aad
sbb
add
and
xchg
sbb
mov
jmp
mov
xchg
mov
cwtl
mov
ljmp
ficompl
mov
mov
jno
mov
ret
mov
cltd
mov
adc
sub
xchg
cli
ljmp
or
sbb
cwtl
mov
lret
pop
pop
test
sub
mov
fbld
sbbl
roll
lcall
push
in
sti
add
cmp
cmpb
and
push
fucomp
push
mov
xlat
leave
scas
mov
int
jle
cmp
orl
cmp
out
hlt
xchg
cs
or
push
mov
sub
jae
iret
sub
cli
lcall
scas
addb
mov
mov
pushl
mov
xchg
sub
mov
xor
popa
pusha
jg
jb
lds
aaa
or
add
gs
aas
decb
cmp
jmp
cwtl
hlt
cs
xchg
mov
nop
cmp
mov
cld
sbb
xor
call
jg
xor
pop
push
sbb
sarl
and
in
incl
inc
pop
adcb
fcoms
and
out
or
xchg
or
add
call
xchg
fwait
test
inc
jns
xor
dec
sbb
pushl
hlt
subb
adc
push
testb
icebp
dec
pop
in
hlt
mov
jp
dec
bound
mov
loop
scas
call
mov
mov
scas
call
adc
lcall
push
cmp
popf
pushf
addl
mov
je
stos
xorb
ss
xor
mov
scas
inc
ficoml
xor
shrl
cmp
idiv
lcall
loop
popa
fiadds
push
jge
dec
movsl
ljmp
int3
xchg
push
pushl
cld
call
xchg
xor
jne
ljmp
add
or
bound
std
dec
outsl
test
sahf
adc
leave
incl
dec
cmp
ljmp
cmp
loop
xchg
decl
into
and
adc
push
orl
and
sub
push
cld
ljmp
subl
push
mov
sahf
add
ficompl
adc
test
sti
mov
mov
aam
jg
or
or
ret
mov
mov
add
dec
mov
or
jne
jp
lret
push
pop
fildll
data16
mov
rorl
pop
decl
mov
push
in
xchg
mov
mov
sub
lcall
mov
push
mov
xchg
mov
test
sahf
dec
ds
inc
jg
call
jp
mov
dec
adcb
scas
out
shr
cs
adc
incl
or
jl
loop
test
cwtl
inc
sub
jb
flds
mov
xchg
cwtl
push
mov
mov
mov
push
xor
into
xchg
adc
enter
push
test
xchg
mov
push
mov
sub
and
int3
pop
sub
dec
leave
insl
xchg
cmpsl
in
pop
jnp
cld
jmp
lds
pop
inc
cwtl
add
mov
fadd
and
cwtl
int
adc
icebp
xor
jbe
movsb
xchg
imul
js
or
mov
xor
incl
cmpsb
jae
push
xchg
jbe
movsl
cmp
or
sbb
dec
rep
pop
mov
xchg
xchg
dec
mov
sub
cwtl
outsb
es
push
fwait
sub
jmp
mov
add
add
adcl
cmp
sub
daa
stc
adc
fwait
cmp
jb
repz
mov
inc
xor
pop
sub
xchg
mov
pushl
scas
xor
scas
mov
xchg
cmp
sub
js
loopne
fiaddl
int3
adc
or
or
adc
and
hlt
call
sti
cmc
pop
and
adc
incl
and
inc
xchg
daa
push
xchg
les
push
scas
shll
push
mov
mov
jecxz
ret
mov
pop
xor
or
ret
ja
out
aad
mov
sub
mov
pusha
call
fwait
mov
fcoml
and
fneni(8087
xor
les
inc
mov
pop
inc
add
cmp
data16
sub
pop
insb
movsl
jnp
das
cli
aaa
pop
cmc
inc
stos
ljmp
loope
cli
lcall
loopne
mov
mov
add
fcoml
aaa
pop
notl
ss
mov
add
sbb
pop
cmp
inc
and
leave
and
or
jnp
aad
jae
sahf
push
jle
fucom
mov
jg
imul
in
aaa
imul
dec
outsb
xchg
decl
incb
sub
pop
jge
insb
pop
push
lods
nop
sub
mov
pop
iret
cmp
movsb
adc
das
push
cmpsb
subb
xchg
jne
xchg
lcall
cmp
test
popf
out
mov
imulb
lods
xor
cmp
das
mov
loope
lods
rorb
add
outsl
push
pop
fs
inc
idivb
push
repnz
pushl
fstpt
inc
mov
mov
test
call
adc
scas
and
jns
mov
xor
mov
clc
fimull
movsb
push
jmp
call
fnsave
lods
and
xor
into
add
add
mov
into
push
mov
xchg
pop
pop
shlb
hlt
jp
rolb
pop
lds
mov
out
outsb
in
ljmp
pop
stc
into
out
inc
out
sarb
lcall
pop
outsb
push
mov
dec
nop
lods
add
pop
mov
sarl
mov
and
imul
add
dec
je
push
pop
or
jl
mov
adc
inc
sbb
pop
or
iret
sbb
repnz
decl
aad
int
pop
inc
jns
insl
in
enter
loopne
sbb
test
adc
pop
pop
movsl
pop
les
bound
pop
jne
or
mov
lds
incl
adc
push
insb
xor
dec
jne
int3
mov
mov
dec
imul
add
inc
sub
fsts
mov
and
cwtl
call
add
push
mov
add
gs
cmp
orl
push
iret
std
int3
repz
psubw
jp
add
mov
in
dec
lcall
mov
ret
and
mov
iret
data16
cwtl
cld
loopne
nop
add
xor
sbb
test
leave
out
out
inc
or
enter
mov
outsb
dec
clc
mov
ds
rolb
pop
dec
or
lcall
rcrb
mov
and
pop
lret
pop
or
hlt
sub
or
in
fcompl
mov
aad
inc
mov
adc
pop
and
push
mov
mov
push
mov
pop
cld
int
and
popf
mov
add
stos
pop
cmpsl
cmp
or
sbb
repnz
aad
add
sub
dec
pop
add
dec
pop
mov
das
cli
call
push
scas
add
mov
lods
push
in
mov
sbb
inc
ret
int3
fstpt
lret
or
jmp
add
in
inc
lcall
pop
insb
cmp
or
ja
mov
xlat
ss
inc
in
or
cmp
inc
fs
mov
and
je
data16
inc
in
rorb
push
or
xchg
std
fistl
xchg
add
fidivrs
in
push
inc
jl
in
stc
lcall
ja
decl
push
fcmovne
hlt
push
lds
inc
out
int3
nop
pusha
and
jmp
inc
pop
movsb
inc
ljmp
or
insl
int
pusha
loop
pop
jb
dec
mov
pop
and
mov
bound
mov
fwait
jo
ja
push
adc
push
mov
lret
pop
sub
sbb
mov
mov
jmp
xchg
pop
sub
pop
push
cmpsb
data16
outsb
xchg
pop
mov
in
push
mov
inc
loopne
mov
mov
lods
gs
loopne
and
cmp
or
mov
call
das
inc
xchg
mov
jnp
mov
popa
and
push
neg
inc
mov
add
incl
gs
pushf
aad
xchg
aam
cmp
or
lcall
sub
outsb
in
data16
jg
js
shrl
arpl
mov
inc
pushf
outsb
push
in
inc
imul
aad
out
clc
inc
dec
lret
mov
cltd
rorl
push
add
jmp
or
push
push
movsb
sub
push
pop
push
jo
dec
fs
cmpsb
pop
cmc
jg
mov
jb
pop
xlat
aam
inc
sbb
jbe
inc
xor
aam
cmp
call
adc
adc
mov
out
test
test
jp
iret
fdivrp
call
lcall
pop
mov
xchg
enter
popa
push
loop
cltd
outsb
imul
hlt
jle
rcrl
sub
sub
loopne
incl
dec
out
inc
xor
xchg
jb
jecxz
jle
lret
cmc
pop
movaps
mov
jg
lea
cli
adc
mov
fistps
fisubrs
mov
jl
push
or
lock
les
imul
fisttpl
fwait
aaa
popf
ljmp
nop
cltd
push
enter
gs
add
iret
add
leave
ret
cmc
cmpsb
and
cmp
inc
dec
adc
inc
es
push
std
pop
repnz
inc
add
or
ljmp
inc
into
and
jbe
leave
popf
dec
in
fxtract
inc
mov
lea
ficoml
mov
inc
pop
sbb
pop
xchg
testl
jge
push
lods
mov
cmp
sbb
int
adc
adc
pop
inc
pop
jg
lcall
aam
push
add
adc
sub
ljmp
movsb
decl
adc
nop
and
je
push
or
xor
ljmp
cmp
loopne
sbbl
mov
pop
leave
xchg
cmp
inc
pop
stos
test
ljmp
stos
push
pop
clc
sub
pop
and
mov
sbb
incl
or
test
pop
xchg
cmp
loopne
outsl
lcall
jg
or
or
loope
enter
dec
popf
lea
leave
sar
dec
sar
lcall
push
js
in
push
push
push
insb
pop
std
and
repz
jne
lahf
mov
inc
loope
ja
lahf
dec
adc
pushl
std
and
into
push
adc
mov
test
xorl
cwtl
dec
dec
dec
fcmovnbe
xchg
or
add
sbb
dec
or
int3
or
or
fistl
jecxz
dec
or
fwait
push
lods
in
stos
lcall
pop
mov
scas
xchg
lods
fstps
xor
fdivrl
pushl
sbb
pop
ror
jge
popa
xchg
icebp
in
loope
cmpsb
loopne
push
addr16
cmp
insb
push
jmp
push
out
pop
cmp
mov
dec
scas
mov
push
push
sbb
push
jns
popa
adc
call
lcall
adc
loopne
mov
dec
rolb
movsl
dec
ficomps
push
or
loopne
xchg
mov
ss
dec
cmpsb
xchg
sub
add
dec
xor
mov
dec
mov
gs
lret
stc
cmp
sar
jp
movsl
movsb
lods
xor
arpl
mov
sar
push
in
icebp
cmpsl
jg
sub
nop
xor
sarl
imul
mov
popf
sti
or
cmc
lcall
mov
lods
ficompl
andb
adc
sub
das
cli
mov
fdivl
jge
lds
mov
mov
inc
pop
lock
add
cli
dec
inc
out
cs
imul
clc
ljmp
push
xchg
outsb
xchg
and
out
notl
call
fiadds
mov
outsb
ss
xor
ficompl
cs
xchg
inc
push
jmp
push
cmp
lcall
pushl
mov
cmp
cltd
fstps
roll
pop
jae
pushf
int
cmpsl
loop
jg
inc
std
or
movsb
jae
mov
lea
cmc
mov
lds
pop
jp
fst
dec
mov
add
pop
mov
ljmp
cmpsl
mov
shr
xor
mov
stos
add
xor
sbb
sub
push
sub
ljmp
xchg
test
xchg
sbb
xor
dec
mov
push
jb
cwtl
shrl
xlat
out
aaa
mov
ljmp
inc
sbb
sub
xchg
orl
jl
in
adc
adc
add
lcall
repnz
into
add
xchg
inc
inc
jmp
fsubrs
adcb
xor
xchg
push
scas
xchg
mov
jg
xor
mov
mov
ss
mov
or
leave
pop
imul
aaa
mov
sub
rcrl
int
call
push
clc
jmp
push
sahf
popf
dec
daa
pop
sub
lahf
nop
in
and
leave
rep
insb
push
shll
xlat
mov
icebp
pop
inc
fiaddl
push
cmp
jecxz
mov
movsl
pop
sbb
mov
jp
data16
mov
xor
or
mov
mov
icebp
ljmp
add
lods
or
sbb
sbb
fwait
hlt
xor
mov
xlat
lret
ljmp
lcall
sbb
push
mov
jo
mov
call
mov
mov
adc
dec
mov
jb
sub
mov
fwait
shrl
jecxz
cmp
incl
movsb
push
push
iret
sbb
xchg
mov
push
subb
cmp
in
push
adc
pushl
rcl
icebp
jo
outsb
mov
mov
imul
loopne
add
pop
cltd
idivb
call
lret
push
cmpsl
movsl
bound
repz
scas
mov
push
fistpl
ljmp
adc
pop
pop
cmp
test
inc
out
dec
pop
fnstsw
daa
rol
pop
add
xchg
bound
mov
std
push
adc
pop
mov
adc
aam
inc
cmp
cltd
jmp
xor
push
sbb
rorb
jno
hlt
std
fisubrl
jb
aam
cld
jg
fldl
push
adc
enter
out
pushl
cmpsb
mov
push
jae
adc
loope
mov
out
jo
or
add
mov
jb
cmp
pop
lcall
cmc
adc
decb
cmp
push
push
lcall
mov
aam
out
subl
cltd
cmp
push
cmc
inc
sub
hlt
in
call
push
test
push
fsubr
mov
js
adc
push
pop
mov
dec
mov
incl
in
int
loopne
jp
dec
mov
js
inc
inc
add
mov
scas
xor
addr16
iret
pop
call
xorb
xor
jle
xchg
cs
pop
in
insl
xlat
jno
push
lcall
push
add
das
adc
xchg
hlt
xchg
out
mov
loop
stos
dec
incl
or
call
stc
fwait
daa
jl
iret
sarb
pusha
js
mov
filds
xchg
aaa
lahf
ljmp
test
xchg
sbb
inc
sbb
jge
stos
ljmp
mov
jl
jb
mov
movsl
or
das
xor
xor
pop
lock
std
scas
call
in
pop
hlt
and
inc
add
fs
repz
push
jmp
jo
ror
inc
cmpb
imul
mov
jmp
incl
ja
mov
aas
and
icebp
js
xchg
fcomip
cld
pop
movsl
repnz
pop
jns
lea
lock
rol
xchg
nop
xchg
xchg
push
inc
mov
push
out
jae
addr16
outsl
mov
mov
mov
cmpsb
add
cwtl
jne
add
cwtl
mov
test
or
mov
dec
in
test
or
stc
cwtl
or
test
mov
dec
negl
inc
jmp
data16
cli
inc
pushl
outsb
dec
xor
push
iret
and
mov
aad
cmpb
cmc
lcall
mov
mov
xchg
js
xchg
jmp
fsubp
insl
ror
mov
mov
sub
lcall
call
testb
pop
pop
sbb
fcmovnbe
sub
arpl
arpl
add
push
ftst
push
xchg
cmpsl
inc
incl
push
cli
jne
pop
int
fsubrs
lea
insl
add
clc
xchg
and
mov
mov
jg
addb
mov
lcall
push
cs
lock
ret
xchg
push
jl
mov
pusha
xor
add
shll
mov
cmp
sbb
in
adc
ss
xor
mov
jb
and
loop
and
push
xor
stos
cld
jmp
andl
cltd
ss
adc
push
test
sbb
fistpll
push
lock
or
cltd
shrb
lock
inc
fisubrl
jmp
ljmp
sbb
mov
pop
outsl
pop
mov
mov
inc
sub
addb
pop
cmp
sub
jecxz
sbb
into
enter
leave
push
xor
fcomps
jae
fwait
pushl
bound
lret
stos
xchg
call
sub
icebp
enter
push
pop
call
cmp
ret
loopne
lcall
mov
popf
xor
not
cld
jns
mov
scas
cld
dec
jbe
lret
jge
mov
inc
inc
sbb
cmpsl
test
psubb
nop
fxch
scas
jl
rcll
adc
adc
jle
aam
gs
fildll
mov
fsubs
enter
shlb
inc
nop
sbbl
sub
add
daa
or
inc
push
and
jb
and
incl
push
loopne
shlb
rorb
inc
sahf
fs
mov
stos
cs
xor
das
mov
sbb
sar
decl
pop
shlb
jecxz
es
pop
mov
orb
sbb
loop
and
decl
or
lock
test
mov
out
movsb
lods
lcall
lods
add
lret
pop
movsb
sub
rorb
add
dec
pushf
push
sbb
xchg
roll
int
sbb
call
inc
add
stos
int3
out
xchg
xor
and
xor
push
mov
dec
pop
shll
jle
rcl
pop
incl
xchg
cli
push
add
aad
cmp
push
and
xor
call
fwait
lods
mov
loop
push
cmp
jp
mov
out
jae
mov
cwtl
mov
mov
incl
mov
mov
cmp
bound
xor
sub
ret
lock
mov
arpl
dec
in
xor
int3
add
pop
lock
push
in
std
jo
das
push
mov
add
cmp
leave
inc
xchg
popa
adc
pop
push
pop
sahf
jb
or
and
stos
movl
mov
jbe
push
sbb
fsubrl
repnz
push
ljmp
test
loop
rcl
jbe
xchg
fbstp
push
lods
xlat
shll
mov
or
in
mov
fimuls
add
dec
or
ret
mov
jmp
or
push
fwait
in
mov
ds
mov
inc
sti
mov
inc
cmp
and
dec
xchg
fbstp
mov
mov
scas
pop
or
int
ret
int
jne
int
mov
or
mov
cmp
xchg
dec
inc
in
dec
clc
adc
es
pushf
fisubrl
fwait
dec
scas
nop
into
stos
out
in
mov
inc
sar
jmp
sarb
gs
aas
jno
mov
xor
decl
pop
cmp
roll
push
jo
push
xor
ret
ljmp
pushl
pop
inc
call
int
mov
hlt
imul
in
cld
push
arpl
std
shlb
sub
or
std
fstpl
mov
xor
adc
hlt
push
mov
mov
shlb
movsl
pushf
mov
inc
sub
lcall
bound
xor
and
ret
or
jp
adc
pusha
cld
int
stc
loopne
adc
popf
mov
push
mov
mov
mov
inc
jmp
sbb
push
jns
jne
or
adc
mov
adc
cmp
xchg
in
xchg
xchg
xchg
lods
add
call
cwtl
dec
les
cmp
loopne
jecxz
std
popa
in
adc
pop
scas
sub
xor
xchg
sbb
jmp
fmuls
jb
xor
cld
xchg
or
push
cmpsb
jmp
pushl
inc
cwtl
fdivs
add
inc
enter
jbe
mov
sahf
lods
pop
andb
sbb
jnp
jecxz
sti
in
push
cmp
mov
incl
js
iret
jmpw
inc
adc
and
pop
outsb
push
test
ljmp
dec
jno
jp
jecxz
test
and
adc
xor
lock
mov
mov
cwtl
xchg
pusha
cli
xor
lock
xor
movsb
decl
and
and
pushf
pushf
jmp
mov
jl
push
adc
jnp
dec
push
movsl
mov
bound
pop
int3
inc
lret
add
dec
fsts
in
adcl
ds
fcomip
hlt
adc
xchg
lret
ss
rorl
popa
inc
call
test
ljmp
xchg
push
mov
imul
jg
sbb
mov
and
and
jmp
mov
scas
xchg
fcompl
xor
push
mov
orb
lret
add
sbb
fs
jecxz
push
cltd
and
out
inc
lret
cmp
jecxz
in
adc
sbb
decl
and
mov
es
pop
lock
mov
push
cmp
outsl
and
add
xor
bnd
pusha
xlat
xor
push
push
mov
xchg
and
xor
adc
repnz
decl
mov
sbb
les
add
pushf
lds
lcall
dec
mov
movsl
add
lods
loopne
pop
jl
jmp
sub
dec
cmp
inc
into
push
bound
ja
jmp
or
inc
lret
lds
out
adc
pusha
pop
rorl
es
loope
add
jb
adc
sub
xchg
cmpsb
test
jmp
pop
mov
xchg
sbb
and
cmp
inc
shl
es
sub
ja
mov
sub
mov
outsl
in
fnsave
fcmovnb
jp
jb
sub
inc
xor
in
mov
dec
fstpl
hlt
jne
out
and
stos
dec
push
pop
and
jmp
mov
dec
out
sub
ffreep
in
xchg
ret
push
cmp
shlb
hlt
cmpsb
out
or
sbb
ret
addr16
repnz
enter
call
and
jne
lds
fcmovnu
add
stos
mov
push
xor
out
adc
lcall
sar
add
pop
cwtl
ret
mov
fsubrs
movsb
xchg
sbbl
or
cltd
and
push
xor
call
mov
or
jbe
fs
inc
push
xchg
incl
incl
cmp
adc
push
ds
insl
movsb
lcall
inc
rorb
out
jae
aaa
or
and
lock
imul
xchg
push
xor
jg
cmp
int3
xor
push
test
cmpsl
cmp
add
js
xchg
adc
pushl
xor
cmpsl
push
push
jae
pop
pushf
in
adcb
cmpsl
xchg
xor
fiadds
stc
call
jmp
jl
push
xor
or
adc
sub
xlat
insb
idivl
into
cmpb
jb
xor
xor
rol
mov
or
dec
enter
dec
push
pop
adc
in
out
test
jae
pop
loop
jno
cli
pushl
outsl
lret
or
leave
mov
outsb
sub
cli
jmp
call
and
mov
jge
push
test
popa
mov
dec
insl
sbb
call
hlt
fimull
xor
stos
push
arpl
int
sbb
in
pop
mov
mov
lcall
insb
jne
adc
sub
sbb
push
mov
in
stos
repz
pop
push
cli
cmp
fldcw
jno
stos
mov
decl
add
push
div
call
sub
dec
decl
xchg
jecxz
nop
stos
fwait
lea
or
fsubrs
ret
xchg
jmp
push
push
pop
pop
das
call
decl
dec
jl
sbb
fistl
and
arpl
gs
mov
incl
jbe
bound
push
mov
cmp
dec
and
or
into
cmp
test
push
xor
pop
dec
pop
lock
cwtl
lea
imul
repz
sbb
cs
xor
jecxz
addb
stc
repnz
pop
jb
push
and
cmp
jl
shrl
dec
leave
shlb
dec
iret
roll
fnstsw
inc
cld
and
jmp
jl
dec
rcrb
dec
fists
adc
xor
push
push
mov
shrl
ret
lahf
sahf
fbstp
ds
scas
cli
mov
stos
lret
jmp
icebp
inc
fmul
dec
adc
aaa
mov
add
cmp
lods
and
icebp
fists
mov
cmpsl
scas
xor
inc
push
fs
mov
jnp
inc
dec
cld
decl
xchg
mov
xchg
adc
adc
add
js
outsb
sbbl
incl
cld
data16
xchg
xchg
clc
sub
scas
mov
iret
pop
call
cmp
push
inc
out
notb
mov
cmp
jo
add
int3
popf
fs
addr16
cmpsb
ret
cmpsl
and
and
pop
cwtl
aam
mov
xchg
hlt
test
jg
test
lcall
loopne
enter
outsl
dec
cld
add
dec
out
sub
decl
inc
mov
int
mov
cld
fmuls
subb
scas
push
dec
pop
or
ljmp
fs
shll
shll
or
in
or
xchg
rol
rol
ds
rol
sub
stos
stos
dec
cmpl
lods
lods
ljmp
in
mov
mov
mov
out
gs
xor
add
gs
xor
inc
pop
dec
xchg
add
sbb
cmpsb
rcll
call
outsb
push
pop
popl
jmp
insb
test
pop
iret
push
aaa
cwtl
orb
ds
pop
ljmp
push
mov
adcb
jg
sahf
les
sbb
push
inc
pop
call
mov
jmp
testb
shlb
xorb
jle
xor
jmp
and
mov
enter
scas
or
add
add
mov
push
xlat
sbb
imul
into
or
jae
xor
scas
cmpsb
cli
and
jmp
daa
and
lret
and
push
push
adc
mov
xchg
sbb
ljmp
add
cmp
rclb
arpl
rol
daa
fldenv
addb
out
dec
jge
fbstp
in
or
into
xor
jg
adc
bound
jnp
sub
test
pop
test
add
cld
cs
lods
cmpsl
push
call
sub
test
adc
mov
cld
aad
sbb
das
and
fisttps
push
push
jecxz
lcall
cmc
aaa
and
and
or
dec
fs
data16
daa
adc
cmc
or
or
lcall
ret
dec
cmpsl
out
dec
loopne
mov
push
xor
push
add
cmp
lahf
mov
mov
dec
and
ljmp
test
mov
jmp
adc
adc
and
imul
leave
lcall
cld
test
push
push
lds
inc
packuswb
adc
jmp
inc
lret
jae,pn
movsl
call
pop
mov
jle
adc
jecxz
outsb
pop
adc
out
jb
lods
addb
iret
and
jae
cmp
shrl
shl
jg
scas
sub
in
mov
js
aas
rcll
push
mov
mov
inc
sbb
cmp
das
mov
fwait
xor
xchg
int3
mov
repnz
filds
adc
pushf
add
sbb
jno
pusha
and
popa
and
out
push
jmp
data16
js
fisttpll
and
js
outsb
push
push
pop
call
mov
push
sbb
pop
subb
mov
movb
shll
lahf
aam
sahf
das
cmp
mov
bnd
mov
or
stos
lea
jl
sbb
out
adc
and
dec
shlb
out
es
pop
sub
ret
cmp
in
sub
add
cli
jg
mov
and
in
inc
add
jae
jl
pop
mov
pushl
in
shrb
fcmovnb
fadds
nop
cmp
add
adc
sbb
and
out
movsb
sub
cwtl
xchg
adc
adc
popl
jl
sbb
mov
bound
imul
cs
xchg
push
aam
lods
jmp
add
scas
shrb
or
jno
xchg
dec
loope
push
clc
lcall
mov
popa
ds
inc
adc
jg
and
dec
xor
stos
loop
out
pop
mov
pusha
scas
fdivr
pop
fstl
mov
out
mov
fisubl
mov
mov
or
mov
lcall
and
add
jmp
mov
jae
mov
or
adc
and
pop
jbe
lea
jg
fcompl
scas
mov
xchg
shrl
xor
cmp
shrl
or
push
stos
fisubl
andl
push
mov
dec
push
jbe
icebp
fwait
push
xchg
mov
mov
pusha
push
inc
xchg
push
or
add
cld
ljmp
roll
movsb
push
and
mov
scas
push
pop
ljmp
add
push
cmp
lods
jbe
fs
jo
xor
fimull
fisubrs
or
mov
mov
inc
xlat
mov
or
jmp
sub
call
hlt
sub
into
mov
shl
lret
fidivs
pop
lahf
adc
lret
jmp
or
call
sub
jo
mov
imul
call
jae
jae
andb
gs
iret
aas
push
jb
clc
data16
lods
xor
popf
push
negl
xchg
loopne
push
jne
xor
sub
stos
xlat
jle
sub
inc
fdiv
ds
aam
incl
pop
and
mov
jns
inc
bound
dec
aad
lret
lcall
jns
push
imul
bound
xchg
xchg
imul
add
gs
or
sbb
or
nop
int
adc
xchg
lods
jg
pop
vandnps
sbb
push
sub
ljmp
push
push
fs
dec
pop
adc
call
outsl
jg
std
push
nop
add
ja
jmp
or
js
mov
mov
mov
int3
scas
cmp
aaa
cld
ljmp
in
lea
data16
test
popaw
fsubrs
jp
mov
dec
ljmp
aaa
sbb
jbe
adc
in
xchg
adc
jne
xorl
clc
xchg
cmp
mov
push
mov
adc
pop
jo
lcall
xor
adc
or
jp
inc
jl
jp
add
fcoml
stos
scas
xchg
lock
jno
sar
xor
bound
or
jge
outsl
imul
lds
xchg
sti
mov
incl
sbb
arpl
adc
out
mov
xlat
mov
imul
jecxz
test
push
lock
addr16
push
ds
cmp
ds
flds
cmpsb
and
pop
inc
pop
or
adc
or
loopne
iret
xor
xchg
add
pop
mov
stc
lods
xchg
mov
outsb
and
jb
xchg
jno
loopne
cltd
iret
xchg
pop
cwtl
outsl
mov
dec
push
xor
scas
mov
lret
dec
jmp
insb
daa
scas
xchg
je
incl
cli
pop
insl
push
test
mov
outsb
orl
inc
ljmp
push
shl
in
mov
std
mov
jae
fs
lock
call
insb
add
xor
dec
inc
lods
xor
cmp
sbb
inc
pop
add
mov
and
ss
xchg
decl
pop
mov
sbb
cwtl
mov
enter
adc
xor
leave
clc
pop
hlt
mov
stc
mov
pop
imul
xor
decl
sbb
pusha
insb
jmp
xor
cli
fs
xchg
dec
mov
sarl
fcoms
pop
xchg
pop
sub
cmp
incl
rolb
pop
xor
mov
or
lods
ret
add
jg
pop
lods
dec
ljmp
xor
aas
out
imul
jns
push
jb
mov
inc
inc
xor
mov
lcall
shr
outsl
incb
mov
and
inc
shr
push
adc
jne
xchg
int
cli
dec
into
inc
ljmp
adc
adc
dec
in
stos
inc
fldenv
mov
push
mov
movsl
daa
pop
test
pop
in
inc
out
sub
add
outsl
push
inc
lret
jg
pop
mov
or
out
jb
cmp
fstp
cwtl
movsb
mov
or
dec
xchg
std
ja
cli
cmp
movsl
mov
lock
push
inc
or
call
hlt
inc
std
pushl
pushf
lcall
mov
ficoms
push
repz
cmpsl
jg
inc
jbe
sub
or
ret
popa
mov
scas
sbbb
xor
ljmp
call
xor
inc
rol
mov
or
ret
xchg
fadd
and
arpl
add
lods
test
sbbb
add
jae
xlat
aam
inc
ja
and
in
pop
leave
aam
fisttps
or
out
push
pop
adc
sbb
xchg
and
dec
gs
mov
cmp
fisttpl
sbb
xchg
lcall
mov
in
xchg
fcoms
xchg
fwait
jp
pop
lcall
call
and
xorl
lcall
jnp
adc
push
mov
push
xchg
loope
push
loope
jnp
and
and
ljmp
sar
call
gs
cmpsl
hlt
push
cwtl
xor
jae
and
mov
sti
repnz
dec
cmp
rol
mov
js
shrb
out
mov
mov
xor
sub
jbe
dec
pop
and
lahf
repnz
imul
xchg
mov
movsb
das
mov
daa
dec
das
cmc
cmp
xor
sub
test
inc
dec
inc
inc
jge
push
sub
nop
sub
lcall
divb
daa
and
pop
mov
iret
test
jb
lock
jmp
xchg
mov
jg
pop
pop
xchg
sbbl
xor
ret
ljmp
ljmp
jmp
into
arpl
repz
out
sub
sub
adc
pop
ljmp
faddl
loope
aas
jmp
pop
add
xchg
inc
js
inc
jg
mov
incl
dec
daa
xchg
mov
fidivrl
add
add
cmp
cmp
dec
xchg
inc
incl
mov
ja
mov
pop
xor
movsl
outsl
sub
jg
or
popa
adc
jp
mov
jbe
pop
push
ret
push
mov
aad
jmp
jmp
leave
ljmp
ljmp
aam
jl
lret
leave
scas
movsb
test
in
lret
loop
sti
ss
lcall
xchg
xor
es
cmp
pop
xchg
ljmp
call
in
lock
jnp
add
mov
fmuls
push
or
faddl
outsb
aad
cmp
inc
push
xor
xchg
loop
mov
lcall
add
jg
sbb
loope
xor
mov
mov
pushl
xchg
enter
mov
push
cli
mov
push
lods
das
shrl
or
pop
jmp
pop
testb
inc
jns
mov
mov
jecxz
sbb
negb
inc
cld
mov
shll
adc
sbb
lcall
js
or
xorb
fidivrl
inc
gs
adc
aad
loopne
das
cli
filds
ds
out
jno
mov
push
mov
jg
daa
add
je
mov
cmp
das
test
cmp
in
imulb
lock
shlb
cmp
pushf
sbb
adc
hlt
and
jg
push
mov
sub
fbstp
addl
mov
mov
call
stc
adc
mov
mov
xor
pushf
cmp
pop
cld
pop
adc
mov
cmp
xchg
add
dec
addr16
subb
and
sub
ret
ljmp
ljmp
adc
xor
mov
mov
popf
mov
jg
mov
dec
pop
inc
loopne
jg
mov
pop
mov
mov
lods
clc
adcl
fcos
pushl
push
fimuls
repz
or
inc
je
push
mov
mov
cli
jae
out
stos
sub
jnp
ret
add
sbb
cmp
loope
mov
sbb
rol
lods
and
lock
insl
fcmovnu
cmp
repnz
fnstsw
xor
fwait
sub
sarb
in
mov
dec
fwait
ret
adc
dec
mov
push
inc
xchg
or
cmp
stc
addb
pusha
cmp
call
mov
decl
pusha
sub
xchg
stc
adc
pop
adc
mov
sub
xchg
cld
lcall
fldl
call
nop
sbbb
sbb
and
sbb
inc
push
ljmp
jle
into
add
or
mov
int3
movsb
adc
incl
cld
jmp
aad
push
dec
inc
dec
jmp
in
jp
test
jbe
lcall
inc
pop
je
cmp
popf
push
out
dec
lods
leave
adc
dec
sub
pushf
pop
addl
pop
ss
xchg
mov
push
out
mov
adc
add
inc
pop
jg
jmp
stc
aad
mov
push
adcl
push
pop
gs
call
dec
adc
imul
leave
push
jne
outsl
cmpsl
xor
push
test
push
push
cmc
ljmp
xchg
push
mov
inc
push
sub
jae
aam
pop
or
inc
movsl
sbb
dec
and
jae
in
mov
jbe
xlat
mov
sahf
mov
leave
pop
outsl
add
jg
rcll
test
pop
mov
popa
ljmp
add
adc
xchg
sub
mov
adc
mov
cmp
in
mov
aaa
in
mov
ds
ret
or
clc
and
out
xchg
sbb
mov
xchg
adc
adc
outsb
pop
popa
add
inc
mov
mov
incl
jge
sbb
adcb
mov
pushl
jge
in
pop
adc
rcll
xchg
test
push
imul
pushl
test
jne
inc
jle
int
pop
jb
push
popf
jbe
sub
mov
lcall
iret
aaa
xor
jecxz
pop
xchg
dec
ds
sbb
stos
mov
pop
leave
ljmp
sbb
andl
mov
mov
jp
and
call
and
movsl
mov
push
dec
enter
dec
inc
adc
cmp
adc
data16
pop
out
leave
push
outsl
fistl
sub
incl
add
sub
lea
cwtl
mov
mov
aad
incl
xor
call
xchg
int3
fildl
jge
imul
ljmp
stos
and
lahf
jg
imul
clc
das
xor
and
cld
jmp
xchg
xchg
cwtl
add
pop
decl
ret
pop
lcall
pop
pop
mov
cmpsb
xor
lock
cld
lcall
addps
ret
jo
or
ret
mov
inc
xchg
lea
and
cmp
movsl
ss
add
pushl
call
loopne
ljmp
jbe
mov
dec
stos
xor
cmp
insl
cld
les
xor
mov
mov
rcl
push
in
ret
popa
xchg
dec
cwtl
jb
lds
scas
test
into
push
mov
fdivp
dec
inc
insb
inc
sahf
lock
cltd
and
icebp
jne
stc
sar
or
cmp
xchg
rclb
sbb
repnz
fs
jnp
jmp
jnp
icebp
xlat
mov
mov
jae
sub
test
mov
pop
call
call
decl
cmp
cmp
clc
test
mov
xor
push
es
adc
mov
push
xor
loop
lcall
dec
aas
inc
xchg
dec
test
and
pop
pop
rclb
test
push
inc
push
call
sbb
pop
lods
lea
dec
sub
clc
pushl
sbb
pop
lock
jae
and
jl
cmp
add
lods
popa
push
scas
cmp
ljmp
loop
inc
mov
movsb
stc
loope
ss
dec
or
xchg
insl
add
push
adc
arpl
inc
mov
lret
sub
mov
test
scas
movsb
mov
mov
push
movsb
mov
aas
rcr
daa
into
sub
dec
rcll
cmp
jg
decl
lahf
and
into
test
sahf
jge
push
jns
sbb
cmp
jne
mov
xchg
leave
adc
jo,pt
jmp
jge
ret
mov
sub
mov
jg
cmc
and
cltd
out
adc
popf
sub
mov
and
push
leave
mov
lock
push
xor
and
popf
stc
push
ljmp
shl
rcrb
sti
jp
push
js
dec
mov
xchg
xchg
mov
shrl
push
loopne
call
fldenv
fcoms
subb
flds
insl
lret
mov
and
test
leave
jecxz
pusha
push
jp
loope
out
add
loopne
sbb
test
aad
sbb
dec
ss
incl
mov
stos
push
add
mov
add
mov
push
fsubrl
andb
rorb
inc
mov
mov
mov
repnz
jg
inc
loop
out
hlt
pop
mov
cld
jmp
cwtl
lahf
and
or
addb
aad
jne
add
xor
das
mov
adc
or
xlat
mov
enter
lcall
ficompl
inc
sbb
or
xor
mov
add
fcmovu
and
decl
xor
sub
test
mov
lods
xor
dec
mov
pop
std
cltd
xchg
es
imul
das
sub
xor
mov
mov
dec
cli
call
dec
jmp
sub
loopne
call
fmuls
mov
xor
sbb
sub
outsb
mov
add
and
mov
jo
call
push
xchg
push
test
lcall
incl
js
mov
sbb
into
add
push
pop
in
test
sbb
lcall
dec
das
sbb
stos
imulb
sbb
pop
fs
cmp
xchg
sbbl
sub
push
and
sbb
push
leave
movsb
mov
sub
repnz
fisttps
push
mov
les
xor
pop
ss
loope
popf
mov
inc
mov
mov
cwtl
pop
xchg
sbb
cmpsb
pusha
adcl
fcmovnb
xor
jne
clc
call
xchg
adc
inc
add
jns
test
mov
rclb
cmp
lods
xchg
xor
pushl
repnz
std
xchg
iret
xchg
loope
aam
mov
push
xor
pop
cli
enter
jg
inc
cld
lahf
or
out
cmpsb
mov
arpl
push
mov
mov
jg
cmp
mov
mov
jns
adc
fcmovnb
xor
pop
sti
jl
fildll
call
rorb
jmp
test
jg
dec
mov
xor
push
add
sub
jb
movl
sub
pushf
fld
call
push
es
cmp
dec
mov
nop
lods
mov
decl
cmp
fistl
pop
or
pushl
dec
stos
mov
flds
lcall
lret
sub
dec
jmp
hlt
add
mov
fsubl
push
arpl
lods
or
mov
pushf
sbb
shll
stc
mov
xor
call
mov
and
sub
push
test
and
in
cmp
mov
or
je
mov
repz
cmc
das
or
repz
mov
cld
adc
into
jge
mov
push
dec
cmp
movsl
lock
mov
pop
lret
inc
jno
imul
stos
filds
addr16
push
insl
addr16
jge
sti
fdivr
mov
xchg
lahf
aam
xor
mov
loopne
test
cwtl
inc
jle
dec
mov
call
cli
sub
mov
daa
shlb
call
jp
xor
and
popa
aas
int
and
jb
testb
xchg
call
push
arpl
cmpsb
and
repnz
rolb
out
mov
jns
addl
je
dec
inc
jns
xchg
fldenv
push
mov
inc
js
popa
sub
xor
lods
aaa
cmp
lds
ljmp
clc
pushl
dec
test
repz
pop
inc
push
insl
rclb
out
repz
mov
pop
adc
test
mov
lcall
jecxz
cwtl
adc
fadds
rorl
pop
mov
sbb
inc
test
and
sti
incl
addb
inc
adc
add
adc
in
mov
in
lds
inc
pop
add
and
jg
repz
mov
jmp
push
decl
bnd
push
adc
bnd
push
xor
imul
dec
or
push
adc
pushl
cmp
sbb
xor
and
shrl
xor
xchg
jbe
mov
or
mov
les
xorb
subl
lcall
xchg
daa
push
cmp
cmc
xor
adc
inc
pop
adc
pushl
outsl
jbe
sub
mov
add
or
mov
mov
push
inc
inc
clc
ss
pushl
jae
lds
add
xchg
push
pop
dec
sbb
push
test
ljmp
aam
sbb
insb
aam
test
dec
mov
aaa
cli
and
mov
mov
ljmp
inc
test
cmp
pushl
xorb
mov
lods
sub
in
hlt
pop
xchg
call
pop
aaa
orb
inc
pop
lock
cmp
call
lock
inc
cmp
cld
push
fcomps
adc
mov
xchg
subb
cmp
xchg
test
sbb
dec
fists
and
andb
sbb
aam
repz
bound
xchg
sbb
xchg
mov
call
rclb
int
imul
sbb
mov
jl
adc
popa
adc
dec
loop
pop
mov
bound
xlat
or
jmp
jns
repz
pop
pop
jno
cmp
imul
lea
mov
cmp
cltd
fisubs
mov
jmp
aaa
aaa
fidivl
dec
mov
cmp
incl
adc
test
bound
inc
jl
test
aad
icebp
push
cltd
pop
jae
mov
xchg
jle
dec
ss
inc
pop
outsl
xchg
mov
pop
push
add
lock
das
jmp
push
aaa
mov
popf
inc
test
or
lcall
mov
and
dec
loope
imul
cld
xor
adc
jge
mov
add
jo
jp
adc
leave
and
xor
dec
inc
pusha
mov
push
lret
pop
test
jns
mov
incl
inc
push
pusha
loope
cmp
adc
stos
pop
orl
mov
cmpsb
xchg
dec
ret
adc
jmp
sbb
jb
pop
sbb
sub
je
adc
sbb
daa
sub
xor
mov
adc
adc
ja
push
jnp
jae
in
inc
shr
and
push
pushl
cld
decl
xor
cmc
nop
pusha
shrb
shlb
push
jne
out
ljmp
push
cmp
addr16
inc
sbb
add
rolb
stos
pusha
inc
mov
pop
lcall
lods
loope
push
in
jae
mov
push
cltd
jg
push
or
jmp
dec
and
ds
xor
lcall
mov
jl
cmp
ret
xor
inc
shll
daa
and
test
mov
cld
cmp
push
adc
bound
xor
push
cmp
decl
and
xchg
inc
xor
inc
popf
mov
jb
and
xchg
call
cmpsb
lock
sub
push
shll
jo
repnz
mov
adc
jns
mov
pop
mov
mov
xchg
fwait
sbb
mov
incl
das
sbb
lcall
adc
sub
inc
pusha
cltd
test
cmpl
sbb
inc
and
dec
addl
cmpsb
fildll
addb
fmuls
cmpl
cmpsl
fmull
lcall
xchg
sbbb
pushl
jo
xor
test
ljmp
jno
imul
adc
test
pop
inc
inc
cli
jmp
adc
sub
pop
adc
ljmp
imul
push
adc
leave
add
xchg
xchg
daa
sbb
add
jmp
mov
xchg
mov
sbb
push
arpl
test
test
adc
jg
mov
addr16
mov
jmp
imul
stc
cmp
mov
mov
push
or
cmp
ficompl
inc
ljmp
lret
inc
mov
push
or
cmp
shrl
add
ljmp
rcrl
fmuls
cmp
or
ljmp
and
mov
xchg
push
cmp
fbstp
imul
push
cmpsl
jb
push
sbb
sub
add
movsl
mov
enter
outsb
mov
jbe
sub
lcall
loope
pop
arpl
or
lcall
test
dec
ss
sahf
test
cmp
ljmp
mov
lcall
mov
inc
add
dec
sub
lods
and
ja
sbb
mov
cwtl
jns
and
mov
push
jg
cmp
or
sub
xchg
movb
lods
push
imul
cmp
sarl
mov
jbe
mov
adc
sub
mov
dec
in
loop
popf
in
add
lods
call
and
insb
out
mov
xor
cmp
and
lcall
jge
mov
push
dec
outsl
sbb
xchg
subb
dec
xchg
xchg
addl
cli
cmp
orl
sub
addl
or
sbb
pop
sub
adcl
sahf
cltd
push
cwtl
and
xorl
decl
add
mov
cltd
mov
mov
mov
ret
call
test
mov
jae
test
pusha
cmpsb
lds
add
pop
push
insb
call
jmp
cwtl
mov
scas
xchg
imul
popf
inc
inc
adc
jns
out
clc
pushl
call
ja
inc
pushl
jns
mov
andl
push
jns
incl
add
sub
and
int3
int3
pop
adc
bound
gs
loopne
dec
shlb
clc
arpl
inc
imul
das
add
xor
test
jge
stos
xor
mov
inc
das
mov
cs
dec
out
or
stc
sbb
xchg
loope
xchg
jnp
mov
in
imul
dec
pop
sub
pushf
jl
ret
rorb
jns
nop
int
cmp
cmpsb
mov
mov
jbe
add
cmp
adc
sub
push
xchg
jno
daa
lea
adc
lcall
inc
ret
pop
sub
rolb
and
dec
and
xor
incl
cli
movsl
xchg
js
iret
push
and
xchg
sub
adc
dec
scas
dec
sbb
inc
popa
mov
cmc
mov
arpl
and
pushl
mov
call
outsb
or
imul
pusha
push
xor
jno
sbb
push
sub
mov
fistl
sub
jns
mov
pop
iret
testb
push
xor
pushl
push
cli
dec
mov
lods
dec
inc
lcall
adc
jg
bound
lods
gs
out
fisubrs
mov
leave
cmp
ja
jl
sbb
mov
clc
inc
shlb
jg
add
ret
cltd
stos
sub
mov
lods
movsb
cmp
lcall
lret
jo
pop
sti
pushl
fisubrl
mov
scas
arpl
aas
repnz
sub
adc
int
movsl
jne
sub
jg
and
jg
xorb
int3
aaa
lret
xchg
cmp
mov
sub
imul
adc
add
add
cmc
stos
es
clc
mov
pusha
mov
stos
dec
fstpt
ljmp
push
jo
sub
stc
pushf
inc
cmp
xlat
pop
shlb
ljmp
vpsravd
cmc
jp
gs
insl
push
fnstenv
xchg
jmp
fdivr
lcall
lods
jb
aaa
not
aam
and
sbb
nop
push
imul
sub
jae
lods
dec
pop
ljmp
cmp
cmp
xchg
mov
popf
clc
sar
incl
movsl
fistpl
pop
aas
mov
adc
shrb
jg
xchg
arpl
sub
aad
scas
int3
jl
aam
inc
pushf
mov
push
xlat
add
push
shll
stos
mov
dec
push
in
fs
push
popf
daa
jp
inc
fbld
sub
mov
dec
xlat
mov
jmp
in
cmp
jl
stc
mov
js
sbbl
lds
push
decl
xchg
dec
stos
xchg
mov
push
pop
dec
inc
sub
fadds
xor
fcmovb
pop
sbb
mov
xor
cmc
fiaddl
pop
pop
lock
cs
mov
xor
adc
decl
dec
sbb
mov
cs
in
adc
ja
clc
pushl
cmp
push
cmpl
lcall
icebp
repnz
iret
pushf
sub
mov
int
dec
jae
fsts
in
xor
pushl
lea
mov
pop
pop
inc
push
dec
icebp
stos
pop
mov
xchg
inc
std
pop
or
imulb
das
mov
fbstp
and
pop
jns
push
jg
mov
dec
inc
out
inc
cmp
and
or
decl
lods
insb
mov
hlt
jmp
xchg
popa
xchg
push
test
nop
add
jo
int
sub
mov
and
lcall
add
and
lcall
filds
sub
adcb
mov
mov
dec
js
cmp
call
out
and
gs
xor
call
push
or
stos
cltd
test
adc
ret
jg
dec
call
xchg
adc
adc
push
rclb
jg
stc
leave
jmp
addr16
incl
mov
push
out
xchg
cwtl
in
js
daa
negl
mov
sub
clc
sbb
in
fbld
cmp
out
aad
fmuls
push
aam
sbb
call
fcomps
jno
sub
movsb
movsb
mov
or
cmp
stc
mov
mov
pop
in
sti
les
jg
xchg
ficoms
xor
out
test
imul
dec
int3
cmc
addr16
jne
sahf
mov
cmc
es
inc
in
sub
repz
jg
call
shlb
add
outsl
xchg
cs
cmp
pop
sbb
jns
mov
leave
mov
ret
les
xchg
pop
inc
pop
std
xchg
out
lds
fistl
mov
hlt
out
xor
outsl
icebp
lahf
xor
inc
outsl
dec
stos
jg
pop
dec
cwtl
or
lar
sbb
test
pop
inc
pop
pop
rolb
cwtl
push
jecxz
mov
cmp
ss
pop
dec
jle
xchg
adc
mov
js
repz
cmp
call
or
and
sbb
js
jmp
es
or
xor
pop
movsb
inc
push
push
pop
imul
clc
lock
dec
mov
adc
jmp
jns
fisubrl
or
scas
les
insb
test
stc
hlt
imul
jmp
sahf
pop
jns
scas
sub
jbe
dec
pushf
shll
xchg
mov
jb
dec
shrb
xchg
fmul
stc
pop
inc
sbb
pushl
xchg
sub
jge
lds
aam
lock
xchg
mov
xor
clc
int3
xchg
jle
or
fisttpll
test
push
sbb
sub
mov
test
push
or
aaa
outsl
loopne
jge
jl
push
movsb
es
decl
sahf
xchg
dec
lock
xchg
dec
jb
jl
cli
decl
clc
incl
push
jl
sti
in
push
and
adc
add
jg
ljmp
int3
mov
inc
mov
xchg
mov
and
push
ficoml
dec
inc
mov
das
and
cmpsb
jae
cs
mov
decl
xor
sbb
cwtl
jle
int
movsb
sahf
sub
and
test
inc
cmp
and
fcomip
or
mov
hlt
push
adc
ljmp
hlt
push
jp
cmp
ljmp
int
cs
adc
stos
ljmp
int
cmp
leave
es
popf
push
xchg
and
lock
cmpsb
outsb
bound
sub
jmp
call
ljmp
in
or
xor
fs
mov
sbb
push
out
mov
dec
cmpsb
and
xor
push
xchg
jp
sub
mov
pop
jnp
push
mov
insb
insl
or
pushl
and
lock
xchg
fmuls
cld
sbb
and
dec
adc
inc
js
pop
add
ljmp
xor
ja
cmp
incl
dec
adc
or
push
jge
and
inc
sbb
not
jae
sbb
bnd
cmp
xchg
cs
out
mov
lret
shr
mov
or
call
xchg
lret
lock
out
fs
xor
int
jo
rcl
jg
or
cmp
sub
lods
xor
xor
mov
cmpsb
lret
sub
sub
inc
and
dec
fildll
sbb
es
xorb
mov
sbb
repz
dec
ja
adc
fldenv
sub
xchg
fcmovnbe
push
lret
decl
movsb
in
cs
push
mov
pop
decl
lahf
bound
xchg
rcrb
dec
stc
ret
push
pop
add
dec
and
jbe
insb
mov
cmp
dec
add
in
sbb
mov
out
xchg
cmp
jnp
test
sbbb
enter
pushl
mov
faddl
js
rcll
mov
dec
adc
ljmp
ret
jp
lcall
or
je
fld
insb
xor
sbb
jecxz
out
mov
lods
jl
mov
les
cli
cmp
xor
pop
pusha
push
pushf
ja
push
gs
dec
xor
popa
or
out
repnz
cwtl
cmp
dec
hlt
mov
enter
pause
xchg
out
and
mov
inc
mov
or
mov
xchg
pusha
test
roll
cmp
sub
jecxz,pt
xchg
out
ret
mov
ljmp
clc
ret
xor
cmp
inc
scas
adc
jmp
pop
push
pop
xchg
sahf
inc
scas
or
pop
adc
fildll
or
or
and
fwait
add
lock
mov
ds
dec
jmp
shr
sub
push
sub
fisttps
fwait
add
dec
aad
jmp
mov
ret
lret
pusha
add
xchg
pop
cmc
and
push
adc
cwtl
sahf
cmc
mov
leave
pop
mov
push
xor
dec
icebp
jne
push
mov
pop
push
ljmp
decl
mov
pop
dec
or
xor
xlat
cmpsl
shll
shl
mov
ljmp
decl
sbb
cmpsl
cmpl
sahf
shlb
sbb
fildll
xchg
pop
xchg
push
gs
adc
jo
cs
and
sbb
shll
loopne
nop
sar
mov
mov
xchg
inc
jo
dec
mov
pop
mov
enter
jmp
outsb
inc
es
pop
sahf
and
push
orb
rol
cmp
adc
call
or
push
mov
mov
dec
cmp
call
jnp
push
fsubrs
ljmp
daa
fisttpll
ret
sub
pop
pop
xlat
and
push
push
es
shll
sar
mov
mov
xor
sbb
in
pop
lds
mov
das
and
movsl
ret
push
movsl
add
or
jmp
jg
rcl
cwtl
insl
and
out
sbb
fisttpll
cmp
ljmp
xchg
xor
test
jb
sbbb
in
inc
xor
sbb
xor
adc
jg
push
pop
jo
nop
lods
ljmp
cmp
cmpsl
mov
jmp
das
cli
add
and
pop
dec
ljmp
mov
push
je
push
xchg
ds
xchg
lock
in
cltd
mov
decl
sbb
or
dec
mov
push
mov
push
ficoml
jmp
and
loopne
sarb
push
stos
jns
ja
decl
dec
shr
and
int3
in
pop
lcall
lods
leave
mov
pop
pop
add
push
mov
push
sbb
lcall
sbb
cmp
dec
mov
ficompl
xchg
xor
fdivr
adcb
nop
or
leave
jecxz
inc
movsb
jbe
jg
xchg
lea
sub
cld
stc
mov
sub
mov
xchg
lret
dec
or
addr16
or
adc
mov
decl
fucom
aaa
sarl
sbb
loop
adc
and
cmp
icebp
cmp
decl
js
js
in
inc
inc
in
out
rorb
jg
rorl
std
and
mov
adc
sbb
loopne
sub
mov
or
sahf
push
inc
inc
mov
in
sub
mov
pop
add
add
lock
adc
pushl
ret
ljmp
jl
mulb
clc
mov
cmp
push
mul
movsl
mov
imull
gs
mov
cmc
cmp
mov
icebp
mov
decl
adc
scas
push
jmp
dec
adc
and
icebp
arpl
xor
dec
hlt
imul
ljmp
sub
popa
mov
cmp
popa
stc
and
add
push
inc
js
dec
sbb
sub
mov
and
mov
fsts
int
jp
pusha
shlb
and
daa
jg
sub
call
outsl
leave
fldenv
push
inc
ljmp
mov
lods
stos
and
mov
cmp
xchg
inc
xor
jecxz
call
and
mov
lcall
into
jge
je
cmp
negl
nop
pop
in
sahf
jb
adc
es
mov
frstor
cmpsb
inc
out
imulb
xor
add
xor
andb
cli
call
cmp
jmp
cmc
xor
enter
aaa
lret
sbb
push
inc
add
add
fisttps
cmpsb
push
mov
inc
pop
movsb
and
mov
lock
shr
decb
jecxz
add
pop
ja
mov
popa
mov
movsl
pusha
std
sub
enter
in
push
je
clc
or
mov
fistpl
jg
mov
fsubs
mov
jns
mov
ljmp
ds
out
mov
dec
dec
cmp
push
aaa
sti
or
arpl
mov
mov
push
int3
js,pt
jecxz
imul
and
lds
xor
ja
sahf
and
in
dec
addr16
xor
test
aam
or
jmp
test
bound
sti
mov
xchg
shlb
scas
cli
jp
adc
test
xlat
outsl
andl
sub
add
ljmp
push
jle
adc
lock
pop
incl
les
jb
jge
in
inc
int3
xchg
mov
lods
and
fldenv
cwtl
mov
cltd
cmp
decl
jmp
sub
xor
pop
mov
cmp
repz
mov
xor
xor
call
or
mov
and
adc
shll
bound
mov
sub
adc
mov
xchg
xchg
stos
cs
inc
add
call
rcrl
subl
inc
cmp
scas
rorb
xchg
xor
pop
or
xchg
pusha
xchg
lahf
push
and
sbb
adc
sub
loope
pop
bound
sbb
icebp
rorl
inc
mov
shlb
inc
mov
sahf
sbb
aas
inc
mov
xchg
orl
and
mov
or
pushf
dec
hlt
pushf
push
das
clc
inc
or
pushf
insb
jne
lods
shll
jp
mov
mov
lcall
and
cmpsb
and
mov
je
cld
ljmp
inc
fwait
mov
xchg
scas
sub
sub
icebp
fidivrl
mov
loope
out
nop
fbstp
aam
sub
ljmp
cmp
mov
and
popf
cmp
aam
movsl
pop
fimull
mov
test
rcrb
ljmp
lret
xchg
mov
add
jns
add
inc
jnp
or
jp
inc
or
pushl
cld
mov
in
and
push
xor
add
cmp
cmpsl
js
mov
sti
sbb
mov
scas
stc
mov
dec
fs
outsl
pop
pop
sti
dec
or
bound
inc
pop
stos
cmpsb
xor
mov
cli
outsl
pop
nop
sbb
mov
clc
push
stc
bound
scas
mov
xchg
jne
and
pop
enter
mov
jle
decl
lret
add
shrb
call
jnp
repz
pop
mov
loopne
out
loop
push
jns
pop
sbb
sub
jl
lods
repnz
and
mov
hlt
cmp
mov
mov
mov
add
clc
xchg
sbb
ret
dec
das
sar
push
movsb
andl
adc
cmp
and
or
decl
roll
xchg
dec
enter
faddl
cld
ljmp
cmp
mov
ljmp
adc
loopne
xor
xor
aas
add
mov
or
incl
pop
or
fs
rorb
push
xchg
mov
fwait
mov
loop
mov
call
inc
mov
std
lret
pushf
arpl
mov
cmp
dec
xchg
lret
inc
pop
inc
jns
and
test
pop
jb
mov
stos
sbb
xor
test
mov
lock
push
and
adc
or
hlt
shrb
loopne
incl
dec
pop
ret
test
xor
jns
fdivrl
mov
sbb
repnz
int
mov
incl
cmp
cmpsl
sbb
out
sbb
cli
adc
cmp
adc
cmp
mov
loopne
sarl
jmp
dec
loope
imul
jp
add
jl
decl
cs
mov
mov
loopne
mov
cmp
and
shll
in
sti
movsl
aaa
les
pop
adc
jmp
adc
ret
xor
xor
or
and
pop
ret
xor
rclb
adc
add
decl
xchg
and
add
mov
hlt
mov
mov
add
les
stos
mov
push
lods
adc
subb
lods
sbb
add
clc
mov
sub
cmp
cmpsb
mov
mov
lcall
sbb
std
push
mov
test
stos
dec
mov
adc
pushf
xor
addb
cmp
pop
dec
xor
scas
push
mov
sarb
xor
in
mov
loopne
mov
call
jge
push
popf
or
test
adc
add
adc
cli
add
call
mov
dec
stos
aam
jp
fimull
pushf
shlb
pop
dec
cmpsb
cmp
call
pop
cs
lock
sub
test
mov
outsb
or
adc
test
ljmp
cmp
rep
xchg
aam
sbb
sarb
adc
jo
lahf
decl
leave
mov
shlb
dec
dec
shlb
dec
jb
add
sbb
fstl
lea
sbb
cli
fwait
sub
js
mov
jb
mov
cli
sbb
cmp
cmp
popf
enter
mov
mov
daa
dec
jge
rcrb
mov
xor
decl
and
adc
lret
lahf
dec
lcall
sahf
mov
and
scas
pushl
clc
fsubs
mov
fwait
adc
push
adc
fldl
or
pusha
sbb
cmp
or
popa
mov
sub
jg
call
adc
std
adc
cmp
or
xlat
mov
test
repnz
data16
add
subl
jns
mov
dec
add
cmp
ljmp
mov
lret
aas
jne
inc
pushf
int3
leave
mov
lcall
and
adc
gs
adc
pop
mov
sub
das
cli
loopne
mov
jg
mov
xor
pop
mov
dec
sbb
push
pushl
or
lret
or
xchg
sub
cmp
sbb
in
pushl
test
mov
adc
inc
push
out
test
out
add
add
sbb
scas
nop
aad
cwtl
push
or
pushl
in
sbb
fisubl
mov
incl
pop
push
or
fists
stos
push
mov
fcmovb
xor
xchg
sahf
cli
mov
inc
xchg
fildl
cld
pop
pop
fildl
cmpsb
jno
adc
pop
push
cmp
dec
rorb
and
orb
outsb
pop
add
push
inc
push
and
xchg
mov
lcall
pushf
mov
into
pop
lock
loope
and
or
cmp
pushl
sbb
jmp
loope
xchg
push
hlt
in
mov
les
jmp
mov
pushl
pop
pop
mov
pop
aam
adc
cmp
or
jle
dec
xchg
adc
sar
cmp
xor
mov
xorb
xor
rcr
cmp
push
jge
fstps
adc
lret
pusha
fcmovbe
and
or
incl
mov
mov
mov
sarb
jge
jge
gs
sbb
lods
decl
dec
incl
data16
inc
popa
aam
je
ret
lods
pop
leave
sbb
cli
cmp
and
imul
scas
cli
pop
sbb
into
loopne
rolb
sbb
add
ljmp
adc
mov
sbb
popaw
mov
xchg
enter
mov
jmp
icebp
mov
icebp
cli
test
push
push
sub
frstor
lods
or
lcall
lea
stc
jg
pop
mov
outsl
cmp
mov
fnsave
popf
cltd
xor
std
das
call
fsubrl
imul
icebp
push
mov
jae
inc
adcb
cmp
cmpsb
aad
pushl
mov
push
jae
fwait
sbbb
jnp
insl
sahf
mov
cld
push
rorl
mov
insl
mov
and
rorb
cmpb
xor
adc
pop
daa
adc
adc
jg
xor
fldt
mov
repz
push
cld
ljmp
jmp
push
dec
mov
mov
popa
gs
push
sub
add
test
push
mov
push
pushl
adc
xchg
xchg
mov
sti
inc
xchg
sub
shll
sar
push
push
sti
lret
fdivs
mov
pop
push
in
pop
sub
in
push
je
push
lret
dec
int3
dec
sbb
js
decl
dec
mov
add
cltd
jmp
mov
shll
mov
hlt
call
mov
in
sbb
mov
jmp
inc
adc
cmp
ds
mov
decl
rclb
int3
in
xchg
dec
test
mov
sub
mov
pushl
loopne
rcrl
pop
mov
pop
jbe
sbb
cmpsb
pusha
inc
call
inc
call
sar
incl
stos
out
lahf
jo
clc
jmp
ljmp
dec
inc
mov
data16
push
les
decl
fdivp
adc
int
out
js
ret
mov
sahf
lahf
mov
dec
pop
adc
loopne
psubb
aad
inc
mov
aam
sub
mov
lahf
stos
lcall
dec
jbe
push
fmull
sub
incl
jecxz
jns
jo
mov
test
add
shlb
inc
lea
dec
mov
pushl
sbbl
test
add
xchg
pop
or
call
fstp
adc
in
xchg
decl
mov
lods
push
add
or
or
pop
in
xchg
fwait
das
sbb
mov
out
shll
push
and
shll
movsb
inc
push
pop
push
fs
hlt
inc
call
lock
pop
cs
inc
xor
outsl
cmp
xor
cmp
jmp
lcall
clc
mov
arpl
roll
dec
mov
decb
jle
dec
push
test
test
es
test
sub
pop
mov
call
test
xchg
push
xchg
enter
mov
sbb
gs
loop
mov
sub
pusha
les
cmp
push
dec
out
dec
sti
push
loope
sub
push
incl
in
ret
inc
or
shr
xchg
sbb
mov
andl
fcomps
push
outsl
jb
jo
loopne
and
jmp
mov
aaa
push
inc
testb
dec
addb
push
jne
push
popa
out
outsl
add
decl
mov
roll
adc
js
incl
inc
xchg
or
sbb
data16
pop
test
pusha
dec
mov
add
mov
mov
incl
jns
int
adc
sub
inc
mov
or
data16
or
pushl
lock
xchg
mov
jecxz
push
faddl
mov
inc
lcall
inc
sub
stc
scas
or
cmp
pop
inc
fsubrl
lcall
cmc
jne
bound
jbe
data16
push
pop
push
cli
sbb
icebp
imul
pop
ret
xorl
ret
out
mov
pop
stos
jb
arpl
mov
cs
fs
decl
mov
push
arpl
add
sahf
mov
cld
pop
inc
push
lahf
pop
jp
jp
stos
and
ljmp
and
mov
inc
mov
test
jo
push
dec
add
jg
cmpsb
inc
loop
out
rolb
add
sub
lods
push
out
push
xor
lea
mov
or
adc
ret
and
loope
mov
push
sub
mov
sbb
inc
loope
dec
mov
push
lahf
psubd
inc
cmp
xchg
push
mov
lcall
pop
jb
xchg
dec
das
jge
ja
rclb
inc
mov
inc
add
hlt
jmp
jmp
add
cmp
mov
lock
cmp
movsl
adc
sbbb
mov
pushl
sub
push
push
mov
inc
mov
jno
lds
js
and
or
pop
fcomi
pushf
fprem
xor
or
sbb
add
lcall
add
btc
aam
addr16
int3
aam
repz
pushf
xor
adc
jg
cld
imul
fmuls
dec
lret
ljmp
sbb
add
adc
cvtps2pd
add
jmp
xor
gs
xchg
mov
adc
mov
and
pop
inc
dec
push
in
jecxz
push
sbb
mov
std
call
sub
data16
pop
mov
in
subl
dec
add
push
and
pop
js
and
dec
addl
ljmp
aam
inc
stos
push
mov
mov
xor
and
out
ss
jle
or
cmp
ljmp
jmp
and
xchg
out
ds
hlt
daa
lret
add
jg
mov
push
cld
aam
pop
roll
add
lcall
out
xchg
aad
ja
addr16
cmpsb
pop
cmp
mov
out
lahf
pop
adc
cmc
cmp
add
xor
dec
lcall
dec
xchg
pop
adc
mov
pop
dec
sub
sub
mov
or
sbb
flds
in
adcb
xchg
pop
jp
xor
inc
push
sub
out
xchg
lock
jae
or
push
and
mov
cwtl
int
loope
xor
push
push
pop
mov
cmp
jbe
cmp
loopne
fisttps
cmc
mul
outsb
data16
stc
adc
movsl
leave
xchg
fwait
xchg
js
jbe
pop
push
test
cmp
fdivrs
push
and
std
bound
and
andb
inc
mov
inc
xchg
jge
pop
push
adc
jmp
cli
sbb
mov
mov
lds
fwait
push
imul
push
mov
scas
in
cli
mov
pop
scas
leave
xor
pop
jbe
mov
adcb
sbb
push
arpl
xor
add
enter
cwtl
mov
mov
dec
push
fidivrs
repnz
rcl
mov
imul
andb
lahf
dec
jno
call
xor
stc
ja
orl
hlt
sub
insl
clc
pusha
jnp
pop
jg
mov
sbb
sbb
adc
jl
jo
xchg
add
ljmp
cmp
sbb
adc
scas
int3
ljmp
js
lret
mov
dec
sbb
fnstsw
in
dec
push
shlb
fildl
pop
outsb
pop
and
xchg
push
rolb
rclb
jne
rorl
ljmp
or
test
adc
insl
movsb
mov
addb
add
icebp
xor
loop
bound
repnz
jg
negb
sub
lahf
subl
sbb
mov
fldcw
push
incl
test
insl
loopne
cmc
lea
cmp
icebp
lea
lods
dec
repz
lret
lahf
dec
les
cmc
mov
js
test
push
pushf
mov
dec
xchg
pop
je
scas
je
ljmp
lcall
push
mov
xchg
in
cli
mov
sahf
lcall
xchg
out
jl
fwait
cmpsl
push
subb
das
push
clc
pop
loopne
cmpsb
sbb
int
xchg
cmp
xor
inc
fists
imul
push
mov
andb
lcall
mov
sbb
pushl
js
je
pop
loopne
pop
es
xor
dec
add
leave
mov
insl
in
inc
aaa
xchg
fisttps
xchg
call
fwait
or
mov
cmp
pop
mov
rep
lahf
lcall
pusha
inc
adc
cmpsl
sbb
lret
call
sub
lods
xchg
push
rorl
cmpb
cli
call
jecxz
mov
sub
insl
jl
inc
aaa
nop
and
lret
mov
push
sbb
or
adc
inc
cmpsl
and
fwait
lds
lods
push
cmpl
mov
adc
pusha
js
add
mov
arpl
rolb
and
mov
inc
mov
pop
sbb
add
loope
push
add
push
mov
scas
adc
es
pop
pop
call
add
sub
mov
leave
adcl
test
jg
jg
add
lods
into
sbb
push
fcmovb
xchg
int
ja
sbb
ljmp
adc
sbb
jo
insb
call
fcomps
lcall
out
test
mov
cmp
pop
push
mov
xchg
xchg
mov
dec
lcall
rorl
aad
addr16
cltd
dec
jge
inc
pop
jbe
inc
xchg
pushf
test
and
ljmp
sti
xchg
int3
adc
ljmp
loope
pop
push
add
fsubl
mov
ljmp
jecxz
pop
rorb
ret
jge
jmp
pushl
xchg
sahf
jge
dec
aas
repz
xor
pusha
cmp
inc
or
out
xchg
imul
mov
ja
std
jmp
jl
mov
nop
shrl
ret
add
testb
lcall
rolb
jns
cli
pushl
mov
cmp
lods
sbb
ds
lcall
das
insb
push
stos
or
mov
mov
insl
popf
sub
xlat
mov
mov
pop
hlt
cmpsb
lods
jmp
lret
fadds
push
inc
adc
in
bound
push
inc
int
inc
sub
movups
xchg
push
inc
adc
sbb
mov
adc
lods
mov
pop
pop
adc
pop
fistpl
cld
add
call
mov
into
xor
lret
or
popa
add
sub
push
mov
push
scas
sbb
iret
jno
arpl
xor
divb
stos
jp
or
dec
scas
aaa
cltd
movsl
inc
cwtl
ret
dec
mov
dec
insl
sub
adc
rclb
sar
lret
push
bound
sub
addl
call
jb
pop
ret
add
ja
adcb
orb
sub
nop
mov
inc
or
mov
dec
orb
dec
pushf
and
stc
movsb
pop
sub
mov
movsl
xor
push
push
xchg
push
adc
mov
push
mov
push
fildl
addr16
cld
ljmp
sub
mov
lods
sahf
inc
sub
push
sahf
push
push
mov
sbb
add
ja
call
push
test
pop
rcll
inc
xchg
adc
jmp
enter
adc
push
insl
lret
repnz
xchg
popf
adc
iret
jmp
ret
das
cli
mov
jne
jbe
pop
lret
dec
push
mov
sub
mov
adc
rcr
loopne
or
jmp
andl
push
cmpsb
push
ljmp
cmp
add
cmpsb
incb
outsl
rolb
bound
mov
cmp
mov
incl
jmp
mov
xlat
lcall
clc
andl
push
jnp
push
repz
scas
cld
int
jns
mov
mov
ljmp
js
mov
add
nop
push
or
fwait
test
ss
call
jl
bound
fwait
cwtl
mov
mov
out
mov
int3
inc
bound
and
incl
xchg
int3
inc
data16
and
mov
loopne
sbb
fistpll
pop
push
cmc
xor
sub
jmp
jae
lods
daa
jno
addr16
or
add
mov
jmp
bound
or
aam
scas
add
jo
dec
mov
scas
movsl
push
loop
pop
inc
and
pop
test
sbb
sub
mov
aad
std
ljmp
mov
or
sub
lods
sub
cmp
dec
es
std
jg
mov
add
inc
add
cmc
jmp
cli
ljmp
mov
imul
pop
repz
jmp
xchg
xor
mov
sbb
jnp
andb
adc
jg
call
idivl
jns
cmove
test
fbstp
int
adcb
mov
daa
push
cmp
call
das
test
in
mov
pop
add
mov
mov
call
mov
mull
jne
xor
adc
jmp
dec
roll
cmp
jns
ljmp
xor
lods
test
insl
call
js
scas
lds
lcall
imul
or
dec
call
cld
lret
cmpsb
push
fcompl
ja
dec
ljmp
fistl
pop
fisttps
fdivs
cmpsb
ret
or
popf
pop
xchg
hlt
push
nop
addb
pop
jl
cmp
vpsubsb
ds
lcall
xchg
imull
dec
cmp
std
sbb
xor
mov
or
add
inc
or
mov
mov
xor
popf
mov
adc
cld
inc
dec
inc
mov
xchg
pop
lods
loopne
lods
cmpb
leave
aam
cmpsb
fsubr
sbb
sarb
int
add
add
cmpb
add
les
imulb
add
rorb
loope
mov
xorl
ficoms
loope
adc
and
push
jg
dec
pop
pop
pop
dec
enter
pop
test
jge
push
fstps
xor
sbb
sbb
int3
out
add
roll
ds
mov
daa
jge
in
sub
xchg
sub
subl
pop
jg
sub
fiaddl
add
jae
inc
es
call
test
or
shll
shl
mov
call
aaa
aaa
mov
inc
scas
inc
push
jl
fldt
repnz
clflush
pop
ss
pop
or
lea
neg
int3
fs
loopne
int3
loop
xchg
xchg
pop
ljmp
cld
xchg
and
shlb
xor
cmp
aaa
cs
cmp
scas
adc
pop
mov
and
push
call
add
xor
cmp
arpl
loopne
inc
decl
mov
insb
add
mov
dec
cmp
mov
push
inc
outsb
dec
and
int
pop
xchg
or
push
out
mov
cltd
inc
ja
sar
jl
into
dec
adc
push
jmp
sub
mov
pushf
int
or
mov
mov
fcmovnbe
mov
call
xchg
in
add
cmpl
ret
add
or
jae
pop
adc
idiv
ret
add
add
cld
addb
repz
pop
dec
mov
adc
mov
fdivrl
aaa
repnz
pop
jmp
fsts
icebp
mov
mov
jmp
int3
popa
fcmovne
inc
push
jle
push
push
sbb
adcb
fisubs
shr
jl
push
inc
ret
ljmp
out
lods
adc
stc
inc
ljmp
call
fs
nop
fs
or
filds
test
mov
mov
sbb
dec
push
test
adc
mov
pop
ret
or
aam
es
insb
idiv
jg
cli
shlb
mov
imul
sahf
inc
enter
jl
aam
mov
insb
or
jo
inc
sbb
jbe
int3
or
ss
fisttpl
std
rcrl
adc
and
add
testb
fidivs
inc
and
adc
and
js
add
loop
adc
mov
test
inc
push
push
push
lds
loope
pushl
cmpl
adcb
sbb
push
add
fadds
in
pushl
fsubrs
dec
rol
loop
dec
push
inc
int3
add
sub
incl
or
popa
cmp
and
or
nop
add
ret
cmp
out
adc
les
pop
add
inc
sbb
add
or
in
sub
inc
movsl
pop
inc
out
cld
adc
cmp
adcb
pop
popf
loopne
imul
inc
adc
dec
cwtl
sahf
movsl
mov
mov
jns
movsb
mov
fbld
leave
ret
or
daa
test
cmc
gs
rol
decl
cld
cltd
adc
add
call
cmp
movsl
push
pop
and
xchg
movsb
inc
out
loop
int3
push
jmp
cli
lcall
sahf
sbb
jge
out
pushf
test
rolb
pop
test
aam
ljmp
dec
mov
push
sahf
sub
pushf
ljmp
mov
stos
bound
xchg
sbb
push
pop
stos
mov
scas
andb
sti
mov
ds
add
stos
mov
stos
mov
jmp
outsb
mov
push
adc
scas
outsl
jg
imul
push
adc
add
aad
push
out
pop
daa
and
ljmp
jbe
adc
mov
cmp
push
cmp
inc
sbb
insb
add
push
xchg
push
lock
cmp
add
lret
pop
sbb
sbb
jmp
pop
and
jmp
in
ret
repnz
lcall
pop
pop
mov
outsb
mov
cwtl
jnp
insb
test
in
mov
mov
push
into
popf
sub
add
add
sub
pop
fs
inc
cmp
pop
in
test
jg
mov
int3
cld
mov
pop
inc
adc
into
popf
mov
das
push
sbb
sbb
xor
add
xchg
or
jg
aad
idivb
pop
popf
lahf
pop
cmp
sbb
arpl
xlat
jg
dec
mov
jo
rolb
jmp
cld
lcall
movsl
xchg
fisttps
push
dec
shll
ljmp
scas
xor
push
lods
aad
sub
stos
xchg
adcl
push
stos
decb
cwtl
dec
data16
outsb
in
rorl
sub
pop
aad
fists
je
xor
cmpsb
test
mov
fucomip
add
mov
sbbb
cs
fldt
cli
jg
mov
add
ret
out
fs
in
into
cs
cs
fucomi
sahf
or
cs
sbb
ljmp
mov
pop
push
incl
sahf
inc
cmc
mov
cmc
cli
push
out
cmc
sahf
ret
mul
outsb
mulb
push
dec
sbb
pop
scas
stc
dec
scas
clc
xchg
outsl
cs
add
in
jge
inc
dec
mov
ss
jb
cmc
jmp
sbb
mov
jle
add
ljmp
and
jg
xchg
inc
jmp
mov
sub
add
adc
jp
int
pop
call
fxch
inc
xchg
mov
sub
xorb
fwait
inc
mov
or
pop
fcoms
scas
nop
adc
outsl
lea
addb
bnd
add
incl
clc
dec
xchg
add
movsb
cmpl
mov
inc
xchg
pushl
aam
dec
push
sub
lock
decl
inc
sub
mov
add
addl
pop
cmc
decl
mov
push
into
cmp
dec
popf
ljmp
in
pop
adc
or
lahf
stc
xchg
arpl
enter
pop
adc
pushf
incl
or
jno
jb
adc
push
adc
andb
lcall
subb
jle
sub
adcl
ljmp
mov
and
repnz
mov
jb
cmpsb
push
scas
adc
sbbb
pop
insb
pop
inc
inc
orl
rcll
jae
pushl
adc
inc
jae
cmp
loop
inc
repz
add
arpl
ljmp
push
mov
dec
jae
inc
repz
inc
mov
orl
cmp
cmp
fdivp
pushl
cmp
xor
adc
mov
std
jle
and
aaa
cmp
aaa
push
push
cmp
das
sar
js
sbb
add
adc
hlt
mov
lcall
mov
inc
jo
pop
fstpt
test
adc
inc
xor
je
mov
call
add
add
xor
xlat
inc
jle
push
mov
adc
xchg
xor
fistpll
mov
dec
out
dec
addr16
sbb
sarl
xor
push
add
xchg
mov
ljmp
jp
pop
sub
shlb
jg
xchg
enter
in
add
sub
push
and
jmp
mov
into
in
inc
cmpsb
adc
lcall
push
push
inc
xor
cmp
icebp
add
iret
sbb
sub
ljmp
xchg
ds
icebp
jp
jg
out
xor
mov
in
xchg
lcall
loope
push
dec
jmp
mov
movsb
dec
lcall
pop
mov
inc
in
sbbb
je
icebp
ljmp
in
imul
xor
mov
cmp
incl
inc
mov
sub
mov
fisubrl
rcll
inc
in
ljmp
cld
rclb
push
inc
pop
lock
dec
outsb
and
out
pop
cld
inc
rclb
jne
cmpsb
sub
push
xorb
bound
mov
or
cmp
jg
dec
push
pop
ja
jne
jp
fidivl
mov
jge
jnp
clc
pushl
cmpsb
and
jne
push
js
ja
jnp
adc
jmp
jge
mov
sbb
ja
es
in
jl
cld
push
mov
push
and
push
add
push
jge
fisubrl
adc
add
xor
adc
xor
lods
fisttps
pushl
xchg
xchg
add
orl
stos
subb
jmp
ret
mov
or
or
mov
aam
or
sbbb
inc
mov
shr
mov
sbbl
scas
xchg
sbb
xor
sub
adcb
or
mov
add
add
inc
fstps
mov
call
or
call
jae
inc
call
sbb
xlat
jge
adc
mov
mov
push
pop
adc
push
out
cltd
adc
mov
nop
lock
add
lods
mov
decl
dec
fcoms
lods
mov
sahf
int
add
sahf
inc
inc
inc
jg
shrb
sahf
push
add
jbe
dec
xchg
push
cmpsb
push
rorl
ljmp
das
pop
inc
adc
pop
out
sub
adc
lods
ljmp
jle
or
enter
fimull
mov
inc
sbb
addr16
add
add
push
stc
popf
and
or
rcll
mov
gs
imul
dec
imul
push
sub
sub
das
ljmp
pop
sarb
pushl
mov
scas
mov
mov
fnstcw
call
std
loopne
mov
les
stos
xor
fldl
pop
jmp
dec
daa
and
ljmp
push
xchg
jl
in
lret
popa
mov
pop
rcll
dec
fsubrl
mov
and
dec
and
push
push
js
push
or
pop
orl
mov
mov
sub
nop
lods
add
xchg
cmp
push
add
dec
mov
adc
sbb
decl
add
cmp
add
fnsave
nop
insb
stos
push
cmp
or
ret
leave
repnz
pop
dec
andb
push
lods
in
pop
inc
xchg
add
lcall
jne
int3
addb
sbb
sbb
add
sahf
pushf
add
call
jno
cld
and
push
sbb
pop
mov
sbb
lcall
ljmp
das
notb
aad
subb
frstor
ja
decb
sub
aas
test
xor
aam
fimull
es
push
rolb
inc
movsb
sahf
fstpt
repz
and
inc
or
sub
jnp
in
lret
inc
rorb
ljmp
das
jnp
in
xor
data16
pop
push
out
les
cltd
jno
mov
push
ljmp
lahf
sti
in
rorb
adc
mov
cmp
jg
or
inc
cwtl
repnz
pop
inc
cmp
mov
inc
inc
push
sub
in
addr16
jbe
stc
mov
adcb
ss
cmp
test
test
pop
test
out
xchg
or
xchg
int
xor
xchg
jns
cmpsl
dec
cmp
fcmovb
adc
rcrb
ret
add
or
mov
clc
sub
test
ljmp
jle
mov
inc
loop
and
inc
lret
sub
movsb
movsl
mov
jg
incl
pushf
pop
loop
dec
and
lock
mov
jle
add
std
fsubr
pusha
mov
cwtl
mov
imul
lret
mov
inc
lcall
lods
and
lret
fwait
aaa
scas
inc
or
jmp
jne
pop
xlat
test
or
add
inc
stos
nop
lods
ret
aam
push
jg
sub
stos
sahf
dec
inc
imul
lret
push
inc
cld
mov
outsl
out
nop
test
xchg
shl
je
pusha
sbb
xchg
decl
out
push
xchg
xchg
pop
xor
pop
adc
scas
sub
jnp
dec
ljmp
fistl
pop
xchg
jge
sti
xchg
cld
mov
push
or
add
rcrl
mov
imulb
shrb
inc
or
mov
xchg
in
adc
and
add
inc
mov
pushf
inc
add
decl
mov
inc
inc
push
icebp
inc
sbb
ss
push
icebp
xor
or
mov
lods
sub
or
adc
stos
ljmp
inc
xchg
mov
sarl
or
adc
push
mov
incl
xor
mov
in
mov
mov
movsb
adc
std
mov
mov
adc
ss
mov
inc
pop
dec
incl
or
jbe
lret
test
and
jmp
or
and
xchg
rorl
and
and
hlt
mov
rorb
outsl
push
pop
push
dec
push
aad
insl
dec
adc
pop
loopne
rcrl
or
mov
mov
test
addb
pop
mov
xchg
hlt
mov
and
bound
fs
stos
mov
and
dec
push
fnsave
adc
mov
mov
loop
icebp
xor
jge
ljmp
inc
cmp
or
or
inc
sbb
pushl
addb
daa
jecxz
xor
pop
jecxz
dec
sub
test
loope
push
inc
mov
inc
cld
adc
in
stos
inc
add
add
push
mov
mov
into
xor
lock
scas
call
sar
lret
ljmp
inc
adc
mov
in
lcall
les
es
push
xchg
sub
add
mov
xchg
lock
shrb
ret
fwait
inc
or
decl
adc
pop
push
fistpl
pop
cmpsl
inc
add
lds
aaa
std
sub
sub
push
push
xor
mov
call
pop
jbe
mov
inc
or
in
enter
lret
push
loopne
jmp
mov
sub
mov
push
mov
in
sbb
mov
and
out
stc
sbb
jae
lods
and
and
fildll
sahf
push
adc
pop
lcall
out
das
jp
mov
xor
pop
or
lcall
mov
std
movsl
mov
xchg
jmp
sub
and
sbb
xchg
mov
outsb
stos
mov
or
push
test
xchg
shrb
mov
xor
pop
fisttpll
incl
clc
adc
and
pop
in
lret
inc
xchg
and
and
jge
rorb
ret
fucompp
nop
sub
cli
incl
test
lcall
add
inc
jg
add
pop
test
sbb
ret
cmp
lcall
add
test
fstps
mov
inc
dec
das
cli
bound
movsb
xor
filds
jne
pop
jno
push
aaa
fnstenv
push
lret
jne
incl
pop
sahf
std
in
cmp
mov
adc
fisttps
xchg
add
in
adc
fs
decl
mov
in
mov
dec
sub
mov
shlb
pop
push
shrb
lret
jmp
sahf
call
mov
xchg
and
test
inc
mov
test
inc
sub
out
push
mov
fwait
lea
mull
cld
adc
add
lds
rorb
in
or
fildll
in
dec
sub
inc
test
xor
decl
push
pop
push
jns
pop
add
movsb
mov
hlt
mov
add
hlt
pop
fadds
or
pushl
movsb
and
lock
ret
mov
mov
ds
int3
into
sahf
adcl
add
pop
jns
stos
ja
and
push
pushf
mov
call
out
into
mov
dec
lret
and
lds
cmpsb
xor
adc
dec
lds
fwait
ret
lds
enter
add
push
movsl
push
into
cmpsb
xor
mov
stos
shlb
loopne
add
cmpsl
aas
std
jmp
pop
out
call
inc
sub
inc
incl
stos
cmp
push
mov
add
sub
adc
cmc
lcall
call
ret
xlat
adc
lret
and
por
inc
add
xor
sbb
bound
imul
xchg
shl
sbb
or
sub
lret
aad
out
lods
push
mov
push
pushf
jns
loope
adc
lcall
add
push
mov
shrb
call
lahf
add
or
jp
pop
popw
cmpsb
mov
adc
sbb
stc
mov
adc
ljmp
aad
movsb
add
add
je
cmp
or
popa
add
fcomip
mov
jnp
imul
adc
mov
push
sbbl
sbb
ljmp
xorb
cwtl
mov
xor
shll
mov
xor
fsubl
mov
loopne
add
into
mov
call
dec
add
sbb
jg
and
ljmp
lcall
clc
pusha
scas
jle
cmpb
pusha
add
mov
test
pushf
rcrb
mov
xchg
js
dec
sub
popf
xchg
xor
dec
jge
sub
add
xchg
test
cmp
fbstp
dec
int
std
ljmp
orb
or
dec
ret
pop
rorl
loop
sub
loopne
movsl
sahf
and
sbb
lods
mov
add
les
push
pop
incl
cld
mov
xchg
sahf
dec
rcrb
insb
xor
mov
les
push
insb
push
add
pushl
loopne
rorl
jecxz
xor
push
adc
ret
loopne
icebp
outsb
pop
and
lcall
sub
mov
add
mov
rol
mov
ljmp
pop
cwtl
cmp
movsb
xchg
and
imul
lea
push
jbe
sbb
imul
add
outsb
add
into
jns
mov
out
push
cmp
xor
inc
jge
inc
add
cmpsb
add
loope
xor
loope
pop
jns
das
add
xchg
pusha
rolb
jnp
or
call
shlb
mov
sti
loopne
push
push
mov
fimull
lcall
xadd
pusha
push
xchg
adc
jb
mov
cwtl
jmp
ljmp
cmp
add
movsl
jbe
fstl
and
repz
cmp
jae
fisttps
scas
lret
aad
fldcw
aaa
fwait
cmpsb
inc
sub
stos
mov
push
out
repnz
pushf
dec
gs
lahf
loope
incl
adc
aad
aam
cltd
xlat
fidivs
call
sub
jae
xchg
fnsave
xor
lcall
loopne
xchg
dec
fiadds
icebp
rolb
insb
loope
mov
decl
rol
sub
pushf
hlt
push
cld
cltd
and
incl
icebp
jg
xchg
adc
int3
int3
mov
cmp
loopne
mov
mull
push
cld
jns
arpl
mov
sarl
xor
cs
stc
int
call
add
cmpsb
je
repz
nop
rorb
add
sbb
mov
dec
jmp
sub
mov
decl
adcb
jle
lods
ret
mov
cli
jmp
mov
mov
lock
decl
sub
mov
mov
into
mov
or
xadd
insb
push
std
imul
je
cmp
inc
push
add
jb
out
sbb
or
sbb
mov
push
mov
cmpsb
mov
in
xor
outsb
inc
jns
sub
lcall
add
aad
sbb
sbb
stos
das
sbb
push
sub
sbb
in
jbe
mov
lahf
or
pop
or
movsb
mov
loop
shlb
repz
jb
ud0
out
push
aam
adc
int3
jmp
pusha
movsl
ret
or
add
dec
test
mov
popf
ljmp
cmpsl
adc
loopne
sahf
daa
or
scas
orb
jp
pusha
push
add
or
push
add
shll
lods
fimull
or
lea
push
push
loop
xor
sub
sar
ljmp
sub
add
push
inc
scas
mov
inc
jns
out
adc
data16
lcall
pop
popa
lods
into
xacquire
ljmp
cmp
movsb
sub
idiv
lcall
insb
inc
sbb
inc
psrad
jbe
sbb
sbb
sbb
insl
sbb
ret
cmp
and
mov
cmc
inc
sti
pusha
inc
sbb
sbb
and
nop
roll
dec
cmp
add
add
fcompl
fucomi
xchg
adc
mov
in
inc
adc
arpl
ljmp
in
push
jg
adc
push
into
dec
cmp
add
jmp
lock
mov
repz
ljmp
xor
jns
les
in
loopne
outsb
int
dec
inc
dec
cli
inc
push
xor
cmp
add
and
add
bound
outsb
lods
sbb
pusha
mov
das
push
push
jmp
lock
add
push
inc
lock
pusha
nop
push
stos
dec
or
shlb
ret
repnz
or
ljmp
jle
pop
add
dec
lods
inc
sub
inc
or
push
rorb
inc
pusha
or
and
insl
ficoml
aaa
std
push
and
adc
inc
cli
adc
f2xm1
int3
fmuls
ljmp
inc
cmpsl
aam
out
mov
std
inc
mov
or
jb
ret
int
cs
scas
int3
dec
subl
mov
inc
adc
push
jle
add
push
call
pop
js
icebp
and
add
ret
subb
adc
ljmp
jp
mov
mov
add
mov
pusha
jno
jns
and
incl
push
scas
cmp
add
mov
push
ss
sarb
add
outsb
out
jp
div
pushl
nop
cltd
repz
popa
sub
cmpsl
push
sbb
out
clc
pop
stos
cmp
add
add
and
cmp
jne
sub
sti
and
sar
or
xor
in
mov
aas
sbb
jmp
xchg
dec
leave
lds
loopne
sub
mull
add
out
sbb
or
jg
cli
dec
fidivs
inc
adc
mov
incw
data16
dec
inc
pop
add
mov
js
ret
push
sub
fdivr
push
sub
fs
incl
jnp
add
mov
or
xchg
add
push
push
aaa
cld
inc
or
mov
outsb
xor
or
mov
call
les
leave
leave
or
or
movsb
sarb
pushl
mov
xchg
push
xor
pop
dec
popf
inc
nop
or
or
inc
add
mov
sub
pusha
lret
sub
into
sub
rorb
cli
lcall
cwtl
lret
adc
shrb
lock
iret
mov
int3
cwtl
mov
stos
push
xchg
ljmp
adc
out
decl
in
repnz
jae
sbb
sub
sub
lods
xor
std
enter
or
ljmp
ds
xchg
ss
xor
aas
loopne
nop
mov
mov
cmc
pop
cltd
mov
push
and
or
pop
popa
adc
sti
mov
mov
popa
and
lcall
ret
test
inc
or
xor
stos
int
pusha
add
call
ljmp
scas
sbb
cld
mov
fisttps
dec
pop
fisttpll
fsubs
loop
adc
xchg
fmulp
jmp
test
test
icebp
push
inc
inc
push
or
adc
call
sbb
push
in
adc
jno
dec
mov
ljmp
xor
rcll
mov
jbe
push
adc
mov
push
ss
dec
int3
add
jo
cmp
mov
push
imulb
mov
add
es
sub
mov
jbe
or
inc
or
scas
and
aaa
js
pop
lock
ret
dec
sub
dec
add
std
and
cs
jmp
loope
push
and
and
mov
pushf
shrb
repz
inc
in
in
lahf
test
lcall
repz
jmp
xor
cmp
or
push
sub
stos
push
add
xor
ud0
mov
das
imul
fisttpl
into
sub
loope
inc
cmpb
mov
inc
inc
pop
mov
paddd
or
pop
push
push
adc
inc
clc
loopne
xor
lcall
ljmp
inc
cli
aad
add
pop
fmulp
das
xchg
dec
rcrl
pop
xchg
mov
xor
das
mov
ljmp
decl
mov
jl
js
jne
addr16
adc
pop
ja
cli
stos
arpl
je
push
loopne
pushl
or
adc
pop
mov
fnstcw
leave
mov
decl
ret
xchg
imul
std
ljmp
mov
fcoml
inc
aad
aas
adc
sbb
inc
adc
mov
push
popa
pop
fcmove
decb
dec
in
dec
inc
adc
and
sti
jbe
sbb
cmp
pop
mov
mov
lock
lock
out
or
cmpsb
ja
js
stos
sub
or
mov
or
and
aam
hlt
push
push
xorb
nop
mov
int
add
sub
sbbb
jg
xchg
mov
add
xor
mov
xchg
les
decl
insb
dec
xchg
push
lcall
sbb
push
je
dec
cs
call
push
sti
xchg
int3
push
add
add
sub
scas
push
add
lea
mov
sub
lret
clc
adc
push
test
test
xor
lret
mov
sub
inc
ret
call
and
push
addr16
sbb
push
fdivs
dec
les
dec
ja
hlt
mov
decl
sub
mov
stc
inc
xorl
loop
lea
and
orb
addl
push
and
cmp
xor
cmp
nop
insb
pop
jnp
lret
dec
test
nop
mov
mov
sti
jle
sti
pushaw
jge
pusha
stc
mov
cwtl
cmp
rcrl
jg
or
adc
sub
inc
xchg
inc
pop
std
decl
push
lods
out
test
popa
sbb
popa
leave
mov
mov
xor
mov
into
push
arpl
sub
pusha
jbe
mov
enter
fs
push
mulb
or
ljmp
jl
inc
ja
lret
and
ljmp
mov
jl
leave
in
add
loopne
mov
ret
test
dec
inc
movsl
mov
inc
in
add
loopne
fcomip
jmp
fwait
xchg
lock
cs
lcall
sub
pusha
push
stos
or
sub
jp
jb
test
inc
push
enter
in
insl
mov
or
pop
and
std
je
test
nop
lret
decb
jo
push
push
lret
adc
dec
cmc
cwtl
rorb
jmp
int
xlat
adc
dec
xor
or
addb
add
xor
in
pushl
daa
popl
xchg
fs
push
xor
cmp
mov
cmpb
xchg
sub
ret
call
orl
addr16
sbb
mov
popa
jo
xchg
hlt
jg
mov
mov
sub
decl
push
pop
mov
in
divb
mov
ds
sbb
sbb
ljmp
sbb
push
popa
stc
pop
loope
sub
imul
xchg
mov
inc
jmp
mov
iret
push
and
jmp
inc
dec
inc
and
out
sub
fcomip
pushl
loope
push
cmpsb
push
pop
push
mov
movsb
mov
mov
pop
mov
ds
incl
inc
sub
pop
adc
sti
mov
xorb
pop
jge
xor
and
pop
popf
outsb
in
sub
pop
icebp
decl
fldcw
inc
sub
fisubrl
incl
lods
movsb
jge
dec
fsubs
push
adc
rorb
add
lcall
stos
sub
adc
push
fs
xchg
push
fwait
dec
stos
loop
pushl
invd
or
and
mov
or
jne
into
mov
sbb
mov
adc
dec
je
decl
xchg
daa
icebp
lods
imul
push
les
inc
repz
adc
repz
inc
push
inc
mov
adc
mov
adc
push
sbb
add
lret
push
lock
mov
jnp,pt
stos
mov
cmp
and
jno
push
cmpsb
pop
jo
cmpsl
out
lock
imul
adc
outsl
xor
add
nop
mov
andb
mulb
in
arpl
cmp
out
fsubp
jecxz
pop
and
jb
data16
and
add
add
mov
xchg
push
jae
mov
mov
cmpsb
pushl
dec
or
movsl
shrb
jmp
mov
cmp
mov
das
cmp
and
cmpsl
mov
or
ljmp
xor
adc
ja
xor
sbb
ret
or
subb
inc
icebp
decl
xor
jo
outsl
and
push
inc
sbb
ljmp
insb
cmp
pop
test
cmpsl
or
jbe
lret
inc
mov
dec
cld
mov
add
incl
sbb
jae
pop
inc
orb
mov
fldcw
addr16
push
je
in
pop
push
cmp
lock
xor
and
sti
mov
ljmp
call
mov
xchg
lret
lret
push
push
pop
mov
sub
cmp
fisubs
es
daa
add
jg
clc
mov
int
test
lcall
out
nop
xor
lret
inc
jno
or
fsts
sti
std
pop
insl
sti
jg
sub
lods
cltd
pop
mov
pusha
mov
mov
xlat
pop
jmp
add
and
cwtl
xor
dec
inc
mov
mov
das
xchg
inc
sbb
popa
les
loopne
add
data16
jno
out
xchg
push
sbb
dec
aad
dec
xor
or
popa
sub
and
and
xor
icebp
lcall
pop
je
jecxz
mov
inc
lock
cli
add
cwtl
fucompp
fbstp
add
jecxz
xor
movl
lret
jbe
adc
inc
inc
ja
je
sub
inc
test
mov
aam
pop
push
pop
xchg
or
push
and
jle
test
fwait
ljmp
push
pop
cmp
push
enter
xor
adc
push
pusha
mov
or
ds
andb
scas
inc
xor
sub
xchg
cmp
loope
loopne
stc
iret
or
jp
ret
xchg
mov
jecxz
ja
roll
xchg
and
mov
add
jge
or
idiv
fbld
outsb
in
pop
sarb
push
cltd
pushf
xchg
dec
bound
and
pusha
push
fwait
std
lcall
in
adc
adc
or
adc
push
add
fwait
xor
dec
cltd
iret
add
pop
lock
mov
push
gs
mov
ljmp
int
push
mov
cmpsl
mov
ret
scas
pop
pop
xchg
mov
fadds
mov
mov
incb
test
out
mov
and
enter
scas
or
add
xor
out
orl
add
add
cmpsb
xor
call
add
or
adc
arpl
lock
pop
sub
popa
loope
lret
inc
jecxz
xor
and
adc
mov
mov
xchg
sub
add
pop
xor
push
mov
sub
leave
jae
lcall
in
rolb
mov
xor
les
iret
fisubrl
pop
pop
add
test
sub
movsl
mov
xchg
cmp
fs
sub
ficomps
aas
call
icebp
nop
and
cmp
mov
cwtl
cwtl
test
mov
loope
sub
test
ds
mov
ds
mov
lcall
or
or
test
andl
arpl
dec
pop
mov
mov
and
das
adc
int3
call
incl
push
sub
add
dec
inc
add
in
push
cmp
fs
mov
sub
cmovnp
lcall
neg
jb
sub
pushf
jno
dec
out
jae
mov
add
hlt
mov
ljmp
sub
ds
roll
adc
nop
inc
push
adc
or
sar
xchg
lock
lock
sbb
test
lcall
mov
xor
adc
cwtl
dec
inc
push
mov
adc
imul
adc
cmp
add
mov
and
mov
add
sub
decl
faddl
sub
fdivr
mov
xchg
scas
ljmp
nop
ret
sbb
in
pop
jle
fcmovnb
push
xchg
out
gs
cmp
dec
sbb
cmp
mov
loope
incl
sbb
rcrb
and
ds
call
adc
loop
jb
popf
and
das
cmpsb
test
sub
adc
outsl
mov
icebp
inc
pop
dec
inc
pop
das
inc
cli
rolb
jno
out
and
push
push
hlt
sbb
and
inc
mov
fldl
insl
jmp
roll
pop
cmpsb
jg
stos
repnz
jb
xor
ret
pop
and
test
fiadds
pop
add
and
or
sub
out
mov
std
and
sub
mov
add
rcr
or
shlb
mov
js
gs
or
sub
enter
sub
mov
bound
test
add
adc
add
push
stc
in
cli
jmp
adc
je
movsb
sbb
xchg
stos
cmp
addb
adc
loop
mov
fwait
fwait
loope
ljmp
mov
jb
outsb
insb
pop
lock
jge
sbb
test
mov
mov
std
jg
stos
dec
and
inc
int
pop
std
inc
sub
dec
int
aas
ljmp
or
and
aad
adc
inc
and
push
add
sbb
push
mov
cld
outsl
subb
or
sub
add
xchg
std
rorb
clc
add
loop
incl
and
xchg
add
dec
and
xchg
xor
movsl
sub
das
in
ljmp
pop
sbb
add
sbb
js
mov
push
add
or
aam
or
pushl
jno
mov
xor
stos
ljmp
test
sbbb
adc
decl
dec
cmp
xchg
jnp
into
jl
call
xor
flds
xchg
jge
add
fcmovb
repnz
mov
jg
and
sbb
inc
shll
arpl
lods
push
addr16
lock
incl
lea
jb
repz
or
dec
dec
and
outsl
sbbl
xchg
xor
push
repnz
push
mov
aaa
inc
xchg
repnz
arpl
in
push
ja
mov
cmp
push
adc
stc
cmp
mov
xchg
push
loopne
lea
decl
daa
cmpsb
mov
lret
and
mov
xchg
addb
xchg
adc
in
stos
decl
int3
data16
int
sbb
dec
jp
adc
sarb
rcll
dec
cmp
outsb
inc
cli
les
jmp
sbb
dec
test
push
das
shlb
je
ljmp
or
add
mov
jmp
test
stos
sub
xor
sti
stos
pushl
sbb
mov
ficoml
scas
es
dec
xor
dec
adc
lret
imul
jmp
lds
add
inc
out
mov
or
das
cmp
sub
clc
mov
aaa
xor
jno
mov
jmp
mov
ret
xor
xor
test
jl
test
mov
stc
and
call
dec
or
add
sub
xchg
int
js
ja
adc
pusha
lock
call
addr16
inc
leave
or
push
repnz
mov
ljmp
pushf
mov
test
aaa
mov
and
mov
insb
jle
and
aaa
lds
xchg
pop
aad
push
dec
mov
leave
or
mov
mov
and
pop
fidivrl
test
in
loopne
sbb
cmp
xchg
nop
aam
mov
mov
aad
sub
ljmp
push
inc
popf
cmp
cwtl
sbb
adc
sbb
cmp
fcompl
jbe
jg
insb
data16
lds
xchg
xor
lcall
cmp
fisubl
movsb
sub
dec
in
or
aam
aas
nop
nop
ud0
push
cmp
je
push
inc
jno
push
cli
outsb
dec
cli
push
sub
pop
sub
fisttps
out
mov
enter
pusha
subl
fcoms
push
or
and
sub
jg
dec
inc
icebp
push
dec
or
adc
jmp
cmpsl
lret
pop
std
or
jbe
jecxz
lcall
jo
mov
and
xchg
and
stos
testb
cwtl
pop
xchg
fbstp
and
add
clc
incl
and
cmp
ret
jecxz
fstl
addr16
inc
jns
mov
nop
sbb
dec
pop
sub
mov
push
cmp
hlt
jp
cld
data16
lock
movsb
xchg
cmp
rorb
std
call
fmuls
xchg
shrb
pop
pop
dec
jg
outsb
outsb
and
and
pop
ficoms
lahf
aad
movsl
sbb
scas
xchg
ljmp
lds
out
sbb
jbe
cli
pop
das
out
out
iret
add
incl
mov
push
jp
jmp
pop
cli
dec
js
scas
sbbb
cmp
mov
adc
fcmovnu
mov
cmp
pop
iret
test
dec
dec
mov
out
mov
sub
ljmp
cmpsb
mov
fistps
pop
aad
std
jmp
ja
sbbl
mov
or
xchg
add
sub
les
mov
adc
pushl
xchg
adc
mov
sub
or
fists
imul
andb
push
stos
lcall
dec
or
or
sub
dec
add
call
mov
sbb
addb
mov
call
scas
divb
xor
cmp
xor
outsb
mov
rcll
loopne
scas
loop
push
hlt
jmp
test
notb
pop
dec
xor
rcll
aam
lcall
xor
jo
add
pop
scas
dec
and
leave
into
pushl
cmp
out
jne
rcr
and
loopne
or
cwtl
sbb
ljmp
xor
fbld
dec
pop
cmp
inc
xchg
inc
cmovs
movl
cltd
mov
frstor
fidivrl
mov
lahf
jmp
and
mov
divl
and
fstpt
in
popa
and
mov
rorb
xor
xchg
pop
out
gs
loop
adc
ret
jb
fwait
fwait
mov
mov
in
xor
cmpsb
out
test
cli
std
nop
pop
jle
dec
pop
std
out
jae
out
inc
xchg
imul
lret
call
mov
lods
xor
adc
out
push
adc
jno
out
xchg
popa
clc
xchg
jb
mov
fnsave
inc
xchg
cmc
filds
mov
mov
lock
out
push
mov
push
adc
or
pushl
fsubl
das
pop
push
sbb
inc
cs
call
sbb
inc
xorb
je
xorl
icebp
cmp
cmp
xchg
or
sbb
nop
sbb
cli
addl
pusha
xlat
fs
inc
outsb
shll
not
es
add
sbb
cwtl
xor
and
or
adc
push
add
dec
nop
ja
call
jmp
add
jae
add
fcomps
pop
dec
cmp
push
outsl
pushl
std
push
push
sbb
or
xor
add
std
decl
adc
pop
mov
mov
mov
mov
daa
add
mov
mov
daa
mov
cmp
shlb
imul
es
sbb
add
mov
mov
push
and
lcall
add
out
mov
sbb
and
outsl
mov
cmp
es
dec
add
and
inc
ja
cmc
sbb
add
call
mov
ret
and
notb
or
incl
out
les
out
and
testb
jg
push
adc
inc
adc
movsb
mov
test
xor
incb
mov
xor
adc
or
push
stc
pusha
and
pusha
or
outsl
cli
adc
mov
xchg
adc
nop
add
ret
in
sbb
punpcklwd
incl
lock
xchg
inc
xor
cmp
cmp
aas
inc
inc
notb
fs
test
xor
cmp
jbe
jb
push
mov
adc
push
adc
cmp
jno
orl
adc
imul
xchg
lock
andb
xchg
push
nop
adc
xchg
mov
ja
jo
push
xchg
jne
inc
shlb
rorb
push
sbb
decl
or
and
ret
push
inc
or
jmp
add
mov
mov
xchg
decl
cwtl
lods
sub
rolb
adc
jl
pop
inc
add
xchg
es
incl
xorb
jge
push
adc
and
je
dec
in
jg
inc
cld
fwait
cwtl
add
pop
in
jo
xchg
dec
into
and
lcall
or
icebp
addr16
dec
popf
inc
jg
inc
jo
repnz
mul
adc
cmpl
inc
jo
mov
lods
jb
lods
inc
addb
loop
sahf
jecxz
add
mov
add
cltd
adc
mov
adc
pop
and
push
aas
xchg
cmc
sub
dec
push
mov
inc
sbb
mov
test
push
fs
stos
mov
sbb
les
pop
outsb
push
fbld
ds
push
mov
inc
dec
lds
pop
or
xor
mov
sbb
cltd
data16
adc
addr16
mov
jmp
xor
push
pusha
push
mov
sbb
xchg
pop
andb
xorb
jge
movsb
pop
xlat
pop
cltd
mov
adc
xchg
cmpsb
sbb
push
mov
mov
sub
movsb
movsl
cmpsb
rorb
or
and
lcall
in
das
cmpsb
mov
movsl
pop
mov
outsl
aaa
in
sub
fiaddl
dec
punpcklbw
movsl
push
mov
int
mov
jl
bnd
test
inc
ret
clc
mov
xchg
cwtl
jns
inc
insb
test
mov
mov
imul
test
cmp
mov
out
cli
pushf
fists
sti
pushl
movsb
sbbb
sub
fs
or
dec
jecxz
popf
xchg
bound
cmp
adc
adc
ljmp
xor
pop
adc
stc
push
scas
add
or
in
int
add
sbb
dec
adc
push
cmp
mov
sub
ljmp
adc
jmp
add
push
inc
je
and
gs
adc
or
push
stos
inc
jp
push
pop
das
mov
pop
mov
test
loope
xchg
push
sub
rorb
das
sbb
jg,pt
hlt
call
aam
or
mov
mov
inc
inc
xor
incl
inc
pop
mov
loopne
es
mov
push
mov
mov
fisubl
mov
pop
sar
jmp
xorps
mov
mov
jnp
shlb
call
pop
mov
mov
outsb
mov
stos
fs
sbb
adc
lcall
cltd
fsubs
orb
mov
and
mov
mov
cmp
jmp
add
inc
pop
outsl
cmp
icebp
test
lcall
pushl
adc
cmp
jns
lock
dec
loope
daa
lcall
std
call
fldcw
xchg
sub
push
dec
mov
test
in
pushl
rol
xchg
mov
sub
mov
movl
sbb
or
inc
pop
mov
xor
hlt
call
sbb
push
or
mov
and
jp
add
stos
cmp
xchg
fidivs
mov
sbb
out
xchg
ljmp
lret
push
xor
mov
js
mov
or
call
std
push
adc
aas
dec
mov
test
mov
mov
in
addr16
lock
out
mov
push
mov
push
sbb
and
jo
add
insl
subb
add
repnz
shrb
mov
rorb
insb
mov
rcr
push
push
jecxz
push
das
cltd
add
sbb
pusha
shll
pop
add
sbb
repnz
jg
add
int3
ret
or
ljmp
clc
pop
cmp
xor
push
outsl
incl
mov
ret
jecxz
lea
cmp
or
pushl
dec
lods
and
inc
adc
xchg
cmp
xor
mov
mov
mov
dec
mov
push
adc
adc
es
ljmp
inc
mulb
sbb
push
lret
stc
lock
lcall
sbb
pop
adc
sub
cmpb
sbb
add
loope
and
pop
pop
enter
xchg
loop
pushl
adc
sbb
iret
repnz
aaa
sbbb
enter
inc
or
leave
cli
jmp
push
xchg
cmpl
push
in
cs
pushl
je
fs
adc
pop
jle
xor
aam
lret
cmp
out
cli
xchg
outsl
rclb
in
lret
hlt
stos
js
fwait
mov
dec
mov
insb
ja
jns
adc
and
call
or
push
xchg
sbb
fldt
ljmp
inc
andb
add
rorl
jg
jl
clc
loopne
pushf
sbb
out
in
into
ljmp
sbb
stos
orl
fmul
jmp
decl
sub
decl
pop
iret
or
clc
pop
xchg
sub
jmp
sub
lcall
aad
and
pushl
push
mov
add
sub
jno
pop
mov
mov
xchg
mov
mov
ficoml
pop
movsb
mov
testl
mov
mov
clc
out
mov
mov
pop
sub
adc
sbbl
mov
sbb
cmp
and
lret
ljmp
unpckhps
aad
es
cli
jmp
add
jo
push
push
insb
mov
jge
fstl
scas
dec
mov
cmpsl
cmp
mov
jecxz
outsb
shlb
mov
cmp
loopne
adc
or
xchg
icebp
mov
jnp
out
mov
cmp
int
sbb
and
pop
in
jg
and
negb
xchg
sub
xlat
aaa
mov
cmp
lcall
cmp
cmp
dec
inc
inc
xchg
sarl
jecxz
inc
test
fcmovb
repz
or
ja
cmp
mov
xlat
pop
mov
sbb
clc
jae
in
add
ret
push
insl
jg
or
inc
push
sbb
ja
mov
jge
mov
jg,pt
ljmp
sub
adc
shll
mov
or
std
js
jge
cmp
xacquire
pop
sub
xor
add
movsl
fistl
call
or
inc
sub
fstl
test
aad
adc
sbb
pop
add
pushl
or
adc
stos
rclb
and
sbb
add
call
pop
je
mov
sbb
xlat
push
outsl
mov
das
into
incl
fcmovnb
jecxz
mov
mov
mov
jecxz
std
sbb
in
jecxz
and
pushf
out
jg
mov
adcb
cmp
inc
sahf
in
sar
out
jo
xchg
inc
pusha
adc
push
pop
cs
loope
and
mov
add
ljmp
and
adc
out
sahf
in
mov
add
aam
in
out
fbld
in
jno
loop
jmp
jo
out
sahf
out
mov
outsl
scas
js
sub
inc
xorb
jns
jae
dec
add
cmp
and
lea
test
fmuls
or
jne
addb
addr16
decl
push
les
fildll
loopne
sar
inc
or
pushl
add
cmp
repz
mov
and
adc
jle
rcll
movsl
cmp
pop
hlt
std
cmp
sub
nop
add
testb
imul
sub
lods
movsb
mov
jne
lret
cmpb
adc
call
or
arpl
mov
pcmpeqb
test
jl
popf
andb
mov
jae
jecxz
push
std
add
pop
int3
jecxz
out
mov
pop
sbb
lock
push
inc
jg
sub
jle
daa
mov
popf
sbb
incl
mov
pushf
in
mov
sbb
dec
add
mov
ljmp
pop
lock
push
fcomip
das
popa
adc
push
test
pop
push
outsb
in
sbb
mov
mov
lods
dec
repz
xor
inc
adc
pop
mov
aad
pop
inc
outsl
pop
jmp
and
popa
jl
sub
loop
fstpl
fidivrs
jge
addr16
fcomip
xchg
pop
ljmp
cmpsl
dec
sub
shrl
shll
subb
stc
mov
test
or
dec
mov
add
rolb
adc
mov
leave
leave
scas
or
xor
movups
pop
jmp
pop
sub
jg
or
in
jle
xlat
fdivrp
jae
adc
inc
popa
dec
ja
pop
xor
scas
fcomi
lret
adc
out
fldenv
jg
test
or
lcall
scas
mov
sub
jmp
fists
pop
jecxz
jmp
rolb
cltd
inc
rcrb
lcall
dec
pop
cwtl
test
sti
ja
add
cld
jg
pusha
jo
xchg
sub
iret
cld
jg
inc
outsl
cld
dec
cld
mov
cli
cmpsl
sbb
and
jecxz
out
fists
out
test
mov
pop
sub
outsl
lock
fidivl
std
pop
pandn
mov
js
out
adc
sar
jmp
adc
decl
popa
je
fs
mov
cmp
mov
push
lds
sub
mov
push
cld
jg
and
add
xor
mov
scas
add
mov
adc
jae
mov
mov
and
cmp
xor
dec
test
aas
jo
clc
pusha
adc
cwtl
orb
pop
in
jne
xchg
sub
inc
scas
push
lret
and
add
push
pusha
out
cmpsl
movsb
outsb
jmp
xchg
movsb
dec
cwtl
xor
jmp
ret
mov
movsb
sub
popa
xchg
imul
mov
and
add
jbe
cmp
or
and
push
cmp
or
and
pop
mov
call
fmuls
icebp
xchg
in
jae
rol
lods
push
in
push
inc
jae
dec
xor
decb
incb
inc
sar
mov
jb
pop
dec
lret
push
dec
pop
orb
cmp
fisubs
lock
mov
fldcw
iret
inc
sbb
or
stos
push
scas
sub
dec
fsubr
cwtl
mov
cmp
rcr
shll
jmp
dec
cmp
add
adc
cmpsl
movsl
adc
imul
xchg
stos
ljmp
ret
enter
push
push
xor
inc
std
inc
mov
cmp
lock
adc
aam
lods
scas
ljmp
clc
push
mov
fisttpll
dec
inc
sbb
orb
scas
push
dec
test
and
mov
push
sub
lds
push
xor
test
movsb
stos
ljmp
sub
test
pop
ret
mov
shrb
pushf
rcl
sub
add
pushl
mov
jecxz
cmpsb
cwtl
inc
cs
xor
out
andb
sub
xor
cmp
je
xchg
dec
ret
mov
mov
and
jg
insb
push
push
stos
lods
lods
or
add
sub
je
push
dec
sbb
aad
or
jmp
sub
nop
mov
int
fcmovnb
ds
adcb
and
inc
adc
inc
push
xor
add
ss
push
cmpsb
sbb
in
adc
push
scas
jp
or
fildll
insl
enter
inc
xchg
ficompl
or
ficoms
in
push
cmp
call
lods
inc
jecxz
xchg
rolb
jp
push
xor
pop
or
jno
adc
adc
or
mov
leave
stos
xor
push
mov
loopne
mov
xchg
inc
mov
or
push
or
int3
and
lods
push
popf
fs
cmpsb
pop
es
xchg
stos
sub
sub
mov
shrl
das
loop
inc
mov
mov
testb
xchg
mov
adc
jle
dec
or
fcomip
pop
push
out
cli
push
movsl
cli
cmc
mov
sbb
pop
sub
mov
repnz
push
pushl
inc
arpl
pop
pop
lods
mov
and
dec
in
pop
and
orl
mov
and
adc
pop
ret
sub
and
pop
mov
les
inc
mov
test
mov
cmc
call
push
add
or
dec
jno
stos
fistpl
and
mov
pop
lock
xor
add
dec
xchg
and
ds
push
mov
jne
adc
add
xchg
dec
insb
xchg
mov
push
or
scas
js
pushf
mov
ss
dec
andl
mov
mov
mov
bnd
and
mov
mov
pop
adc
ljmp
imul
fbstp
lahf
xchg
lcall
mov
fs
and
cmp
pop
push
sbb
and
pop
nop
sub
pop
test
push
loope
push
mov
jmp
xchg
cwtl
mov
mov
lea
jno
ret
mov
cltd
loope
fwait
rclb
cmpsl
pop
push
pop
imul
dec
inc
incl
movsb
test
xlat
inc
outsl
dec
adc
loop
jb
lahf
add
mov
loope
xlat
jle
movsl
jmp
roll
xchg
xchg
hlt
pop
mov
cmpsl
adc
ljmp
enter
push
repz
jmp
cmp
push
nop
dec
cmp
push
pop
push
inc
inc
cltd
mov
rorl
shlb
jge
xchg
outsl
stos
or
in
xor
movsl
jo
dec
cmp
xchg
push
cmc
cmp
fsts
insl
imul
mov
mov
ljmp
adc
sahf
push
sbb
shll
cwtl
pushl
insb
pop
sbb
mulb
cmc
int
mov
divb
inc
fcomps
push
inc
push
dec
mov
rorl
adc
arpl
ss
or
xor
stos
mov
dec
xchg
cmc
jmp
dec
lret
dec
add
sbb
sti
xlat
mov
lods
dec
mov
or
outsl
sub
jl
repz
lock
mov
decl
shlb
xor
clc
add
adc
lds
lret
insb
inc
xor
mov
lcall
aam
adc
movsb
cmpsb
fdivrs
test
sub
outsl
pop
mov
xor
outsl
arpl
rcrb
test
in
pusha
xor
test
sti
decl
xchg
call
mov
js
and
fwait
dec
adc
inc
push
add
push
sub
cltd
add
mov
not
fdivr
call
adc
mov
push
pop
adc
xchg
lret
jg
and
stc
pop
mov
loop
lds
dec
push
lds
scas
xor
jle
dec
inc
mov
sbb
adc
les
movsb
mov
dec
jmp
shll
cmp
jp
inc
xchg
push
inc
mov
sub
fnsave
adc
incl
xchg
or
dec
sub
push
adc
xchg
pop
sub
jb
movsb
test
jg
jg
rolb
push
add
cmc
push
pop
adc
call
fsubs
pop
mov
pushl
es
adc
push
cmp
dec
dec
pop
call
push
push
test
fmul
inc
push
sub
mov
mov
int3
jbe
stos
lcall
or
mov
in
sbb
mov
mov
or
fisttpl
push
in
nop
test
mov
pop
outsb
movsl
int
fsts
rcll
jecxz
or
jmp
outsb
dec
and
push
call
arpl
sub
roll
pop
add
jp
lods
das
jnp
pop
ljmp
inc
or
ja
fucomp
inc
push
jne
sub
inc
xor
ljmp
sub
rorb
jne
in
adc
mov
mov
hlt
jge
add
jle
fisubrs
loopw
scas
dec
push
sub
dec
fimull
adc
mov
mov
mov
icebp
ljmp
roll
call
insb
inc
cmovne
inc
lcall
mov
xor
adc
into
into
data16
lret
ljmp
and
inc
sub
sahf
int3
push
stos
scas
add
int
lret
inc
imul
pop
sbbb
outsl
sahf
imul
call
xor
mov
mov
jmp
repz
cli
dec
jg
aad
and
adc
push
mov
mov
fcmovnb
mov
push
lods
mov
fnsave
cmc
lcall
sahf
lret
popf
sub
imul
jp
insl
in
stos
lods
repz
and
push
dec
pop
and
add
or
ljmp
decl
cld
je
pop
cmp
xor
lret
aam
ljmp
and
test
xchg
movsb
xchg
stos
rcrb
xchg
cli
add
sbb
push
test
pushl
xor
jmp
cmovnp
dec
mov
ss
mov
loope
mov
sub
or
jmp
lret
pop
jb
mov
xchg
cwtl
pop
xor
mov
add
out
and
ljmp
into
prefetcht0
dec
rolb
repnz
inc
cltd
dec
inc
adc
adc
jns
cld
incl
mov
dec
test
movsb
pusha
and
nop
sub
inc
in
cld
jg
dec
addb
mov
mov
popa
cmp
dec
jns
sub
pop
jbe
fldcw
nop
ret
mov
lcall
fiaddl
push
fwait
dec
gs
mov
pushf
test
jae
or
cmp
add
lock
fisubrs
fstl
pop
fsubs
and
jns
jns
pop
xlat
and
jg
cld
push
push
in
xor
lret
push
rorl
ja
decl
cmp
lret
scas
mov
dec
or
int
lret
mov
xchg
push
in
mov
inc
mov
or
and
xchg
xchg
test
int3
dec
sub
mov
mov
shrb
cwtl
aam
lcall
fldl
push
mov
out
xchg
mov
push
mov
mov
fdivl
loop
and
imul
cs
call
mov
in
jp
mov
mov
jnp
adc
xchg
jmp
add
cwtl
cmp
add
stos
sub
jo
pop
jp
adc
mov
mov
jnp
inc
and
repz
sub
mov
hlt
sbb
in
lahf
lcall
push
movsl
movsl
mov
xor
lcall
and
xchg
sub
ficompl
lods
jae
hlt
mov
xchg
xor
ljmp
cmp
xchg
mov
loope
add
dec
outsb
push
jmp
ljmp
loop
sub
sti
mov
fidivrl
mov
and
mov
push
mov
and
cmpb
mov
lret
cmp
in
cmp
cmp
cmp
or
and
inc
icebp
rolb
pop
and
add
mov
cltd
pop
and
xor
inc
or
mov
cwtl
inc
dec
lods
fwait
push
adc
adc
add
push
lcall
push
or
xorl
or
or
out
clc
sti
pop
cmp
out
loop
adc
imul
movsl
incl
mov
mov
fstpl
test
lods
sbb
mov
cmp
aas
ret
mov
stos
jmp
je
cs
lcall
mov
mov
mov
sub
fdivr
mov
pushf
jae
stos
jecxz
mov
popa
cmp
lods
decl
lcall
mov
mov
lcall
fs
mov
inc
cmp
lcall
inc
fimuls
and
xchg
or
cltd
pop
cmp
lods
mov
ret
or
decl
pop
xor
cltd
mov
cltd
std
imul
mov
icebp
cmp
inc
lds
mov
cli
add
and
and
sub
ret
cld
mov
push
ret
call
pop
and
mov
ss
dec
call
ljmp
shlb
cs
xchg
sub
and
mov
enter
push
xchg
cmp
test
mov
sub
mov
lcall
int3
pop
pusha
xor
adc
out
xor
lea
and
ret
js
mov
cld
mov
or
jg
ljmp
nop
xor
daa
lret
nop
dec
cmove
adc
push
xor
mov
push
pop
fcmovnbe
pushl
mov
js
adc
or
ja,pn
or
test
push
mov
decb
sbb
mov
fidivrs
test
mov
and
test
repnz
sarb
mov
dec
cli
pop
sub
cld
cmp
loopne
ds
dec
lret
or
pop
push
adc
pushl
dec
cwtl
xchg
orl
es
or
popa
stos
cwtl
rcrl
cmp
xor
movsb
icebp
decl
adc
mov
jg
mov
in
inc
push
inc
inc
push
mov
stos
cmp
mov
call
push
mov
scas
mov
sbb
push
dec
ja
lds
cmp
fwait
pop
mov
inc
lret
aas
shll
sub
add
cltd
adc
imul
shll
xchg
adc
jae
dec
push
aaa
dec
cld
nop
xchg
pop
test
or
insb
enter
cmp
lock
and
add
jle
xor
and
jo
filds
mov
addb
sub
lea
inc
xor
test
push
inc
ds
xchg
nop
and
sbb
or
pop
pop
sbb
or
sub
push
mov
insl
inc
inc
lea
fisttps
divb
sbb
fwait
and
call
int3
lret
arpl
push
imul
lea
sub
xor
lcall
sbb
inc
dec
xor
xchg
or
outsl
inc
xor
cmp
sbb
sub
cmpsb
and
inc
cmp
lret
cmp
jne
inc
and
jg
and
es
pop
pop
adc
xchg
incl
ds
imul
popa
pop
xor
cmp
call
in
and
mov
sbb
cmpsb
pop
adc
pop
dec
dec
lock
aas
inc
dec
dec
cwtl
push
or
mov
mov
fs
xchg
outsb
mov
test
and
in
loopne
sub
mov
icebp
ljmp
mov
into
int
pop
push
jbe
cmova
sub
push
xor
jmp
push
xchg
push
outsb
pop
push
fst
cltd
sub
sub
and
mov
aas
mov
setns
xchg
cmp
dec
ss
lcall
pusha
dec
xor
sbb
adc
sub
mov
mov
inc
ja
push
inc
dec
pop
outsb
push
aas
push
push
push
xchg
lcall
outsb
lcall
jb
int
mov
sbb
mov
mov
mov
push
scas
jns
mov
shl
fisubrl
gs
lcall
cwtl
add
cmpsl
pusha
mov
dec
mov
jmp
lock
out
ljmp
inc
ja
out
cmpb
xor
test
mov
incb
mov
ja
out
sarl
in
mov
dec
dec
bound
push
dec
pop
outsb
mov
test
stos
rclb
shll
incl
lods
movsb
rcl
xchg
lret
ja
xchg
xchg
repnz
pop
xchg
mov
mov
dec
lcall
incl
je
arpl
test
loope
pop
push
inc
ja
lock
into
xlat
in
fwait
popa
pop
cli
fcoml
ja
cwtl
es
insb
or
hlt
lcall
pop
inc
jbe
insl
mov
cmp
out
cmpsb
xor
into
mov
xchg
sub
popf
dec
jb,pt
mov
sbb
mov
popf
js
ds
jae
mov
ljmp
pop
cmp
std
mov
push
mov
jecxz
fsubrs
dec
mov
sti
jns
sub
movsl
sahf
xchg
jnp
cltd
mov
shl
loope
pop
or
test
ret
xchg
pop
pusha
gs
bound
pop
pop
mov
scas
push
movsb
incl
scas
jb
mov
add
xor
mov
insb
pop
inc
mov
js
sub
pushf
lcall
rol
mov
jne
adc
jo
inc
addl
sub
mov
cmp
cwtl
shlb
pop
hlt
adc
inc
mov
fs
push
sub
fsubl
jmp
mov
int
cmp
fsubrl
leave
push
add
out
daa
iret
sub
ljmp
lds
test
inc
dec
sub
lret
mov
test
mov
adc
dec
push
push
mov
jg
aad
mov
test
dec
push
lds
ss
lret
jns
je
push
jmp
call
mov
push
xor
movsl
aas
xchg
cmpsb
add
mov
insl
lret
mov
leave
xchg
outsl
inc
xchg
lcall
iret
mov
mov
push
mov
dec
enter
test
mov
fdiv
enter
xchg
mov
out
cmp
pushl
or
popf
sbb
icebp
mov
repnz
or
pop
sbb
sahf
mov
decl
and
sbb
mov
int3
mov
mov
dec
xchg
mov
hlt
in
mov
lahf
ljmp
cmp
push
inc
sahf
js
test
add
fists
in
test
jge
xchg
fs
incl
mov
dec
out
aad
fldl
jnp
sub
jns
pop
pop
or
xchg
int3
push
das
xor
jmp
xchg
fcoms
sub
jbe
mov
sar
mov
fimuls
arpl
ret
push
imul
mov
jb
sbb
inc
dec
push
rolb
jge
or
adc
incl
pop
cmp
ret
rorl
mov
insl
cmpsb
in
sub
pop
loope
cmp
pop
lcall
cs
mov
stc
jecxz
inc
sbb
loopne
add
sbb
loopne
cmpl
xorl
cmpsl
pop
pop
cmp
or
push
jmp
movsb
mov
or
and
xchg
jbe
pop
rorl
xor
push
jo
adc
mov
adc
push
lret
mov
inc
adc
fs
les
mov
incl
lods
mov
cmp
and
mov
ljmp
pushf
popf
inc
imul
fsubrl
test
lock
cwtl
mov
bound
negl
jo
or
adc
out
movsb
sahf
ja
xchg
repz
dec
add
pop
popf
sar
mov
dec
mov
adc
and
sbb
test
stos
sahf
cmpsb
decl
adc
pop
push
outsl
shll
shll
popf
jg
test
pushf
xchg
ja
daa
mov
push
jecxz
mov
enter
push
or
gs
movsl
cltd
pop
stos
stos
dec
jecxz
xchg
addr16
add
and
sub
add
jo
cli
xor
in
cmp
mov
mov
mov
sbb
lcall
push
lods
mov
add
xchg
fnstcw
out
lcall
xor
dec
xchg
and
orl
mov
xchg
int3
dec
decl
popa
rclb
jno
jns
or
adc
or
jecxz
incl
inc
dec
cmp
icebp
cli
dec
daa
paddsb
test
add
sbb
out
mov
pop
sbb
pushl
inc
insb
jmp
test
gs
das
push
call
lret
lret
adc
inc
cmc
rcr
idiv
lret
sti
sbb
pop
inc
mov
xchg
lea
cmp
mov
adc
ret
das
mov
pop
shrb
repnz
mov
xchg
fwait
dec
arpl
clc
popf
xchg
daa
mov
lods
ret
scas
sub
push
jle
xchg
mov
daa
mov
cmp
lcall
pushf
mov
xchg
sub
dec
push
shlb
scas
mov
mov
iret
mov
mov
jo
pop
faddl
pop
fdivrs
mov
xlat
mov
hlt
mov
ds
cmovno
dec
lcall
stos
pop
and
outsb
jl
ljmp
cmp
ficomps
add
int
push
mov
sbb
call
inc
loope
push
mov
iret
lock
adc
sbb
push
add
mov
dec
pushl
inc
in
out
mov
jbe
mov
mov
fucom
and
dec
and
cltd
rolb
call
adc
mov
movsb
es
enter
xchg
fwait
cmp
dec
dec
lcall
jmp
add
or
add
dec
cmp
rol
sub
or
fistps
ljmp
sub
mov
and
decl
cmp
pop
pop
mov
movb
pop
js
push
into
stos
insl
and
xchg
pusha
loop
dec
push
aaa
sarl
nop
adc
xor
mov
fwait
mov
insl
imul
call
nop
xorb
pop
jae
xlat
test
inc
xor
sub
inc
scas
mov
decl
popf
inc
loopne
cmp
cs
scas
pop
dec
adc
arpl
out
jne
cltd
pop
and
push
inc
sti
jl
cmp
mov
push
mov
pop
cmpsb
into
jecxz
mov
and
loopne
movsb
das
incl
cld
add
daa
jmp
fiadds
mov
lahf
xchg
or
push
jb
dec
mov
movsb
push
xor
mov
push
pushl
orb
shrb
xchg
rorb
cmp
stos
xchg
enter
popa
or
shrb
mov
or
push
or
xchg
jb
dec
dec
into
inc
setns
cmp
inc
ljmp
pop
in
inc
shll
pop
cmp
lcall
sbb
fxch
lcall
sub
xor
or
adc
js
sbb
mov
or
inc
xchg
sbb
cmp
jne
dec
or
cmp
lock
lahf
jne
ret
or
or
cmovb
jb
movsl
mov
sub
lcall
loopne
mov
or
mov
int
inc
jmp
sbb
xor
xlat
outsl
call
call
mov
mov
xchg
push
inc
xor
mov
bound
ret
mov
mov
mov
xchg
lret
and
dec
rcrb
cmp
adc
ficoml
icebp
stc
insl
ja
mov
xchg
or
addb
or
adc
pop
into
pop
call
les
dec
icebp
add
pushf
bound
jmp
mov
and
jle
pop
pushf
scas
int3
and
call
jmp
lret
pop
loop
loope
test
idivb
loop
mov
add
mov
xchg
clc
add
inc
test
adc
loop
sub
lods
push
or
sbb
cmp
pop
enter
push
dec
call
loopne
sbb
mov
pop
cmp
adc
ljmp
lods
inc
lahf
mov
sub
fistl
push
or
sti
dec
add
or
jo
mov
jl
imul
cld
sub
push
outsl
dec
cwtl
clc
ja
pop
or
iret
insb
ljmp
xor
aaa
mov
adc
dec
and
fbld
data16
int3
mov
jp
repnz
iret
push
fisttpll
daa
mov
repz
jg
decl
sahf
inc
mov
mov
mov
mov
and
jmp
cmp
lcall
divb
ss
data16
sub
js
lods
sub
mov
pop
jg
or
fsub
jg,pn
pop
dec
jno
aas
jl
fwait
adc
mov
xchg
add
xchg
icebp
pushl
inc
push
cltd
jo
and
add
and
xchg
lret
pop
and
clc
push
jl
sub
add
mov
sub
repnz
inc
add
cmp
mov
push
add
cmpl
mov
jecxz
inc
xor
js
adc
lahf
mov
lds
shlb
mov
ja
and
push
pop
sub
imul
decl
lock
mov
jmp
push
push
dec
sahf
lret
xchg
and
call
cld
incl
xchg
push
xor
dec
cld
or
jmp
cmpsl
pop
mov
cld
lods
jmp
imul
pop
adc
jbe
jg
test
cmp
leave
mov
ljmp
mov
jle
rcr
adc
mov
loope
outsl
rcr
scas
adc
lock
pushl
mov
nop
add
out
dec
mov
sub
ds
call
mov
imull
inc
jg
fwait
ds
mov
loop
dec
cmp
push
aas
subb
call
out
jle
jmp
call
ds
or
mov
cli
call
test
addr16
inc
cwtl
mov
les
std
loop
or
cmpsl
jge
ja
sub
add
es
in
cmp
dec
data16
repnz
loope
add
pop
pop
add
add
add
es
in
jo
xchg
jle
daa
jg
cmp
pop
inc
jle
icebp
jmp
sub
sub
push
test
push
jae
or
xchg
jbe
jo
lcall
push
cmp
mov
in
ja
push
pop
cmp
ds
xchg
xchg
dec
test
jg
sub
shll
inc
jle
test
call
mov
sbb
xchg
daa
jns
inc
pop
or
imul
lcall
mov
das
adc
leave
jbe
cmp
adc
das
in
xchg
es
sbbb
jnp
inc
jnp
push
ja
shrl
add
inc
push
push
sarb
loop
xor
out
sub
stos
movsb
outsb
andb
push
mov
popa
aad
pop
pop
xchg
cmp
popa
sub
cmp
adc
clc
adc
xchg
mov
sub
jle
cwtl
clc
scas
jge
nop
push
xor
pop
push
nop
jno
adc
sub
rorb
clc
pop
clc
mov
xchg
addb
jmp
mov
fadds
call
xchg
std
jae
pusha
add
add
add
push
inc
mov
sub
andl
cld
decl
push
repz
add
push
adc
and
aaa
movsb
xlat
dec
jo
inc
aas
jae
nop
xor
inc
inc
xor
jmp
dec
daa
adc
and
clc
sub
idivl
adc
cs
cmpsl
push
push
mov
or
pusha
hlt
jns
xchg
xchg
imul
mov
jns
fbld
es
ret
push
jg
test
jae
cmp
sub
xor
xor
mov
inc
shl
mov
sbb
das
mov
adc
jnp
xchg
inc
cmp
and
mov
in
xchg
mov
cmp
xor
sub
and
fbld
jmp
inc
jnp
mov
rorl
loop
and
adc
repnz
scas
clc
mov
xchg
jl
lea
jb
gs
xchg
arpl
add
mov
cmp
int
gs
ror
cmp
add
jg
js
xchg
js
mov
add
xchg
adc
xchg
xchg
jl
xchg
add
jb
xchg
pop
xor
insl
mov
add
mov
push
mov
loop,pn
add
push
mov
cli
pop
adc
cmp
xor
decl
test
lahf
aaa
leave
mov
sbb
test
xor
bound
mov
sar
jmp
popf
pop
jmp
roll
dec
into
add
hlt
xchg
fwait
inc
jecxz
cli
scas
sbb
les
mov
inc
js
xchg
push
jb
xchg
sub
xor
xchg
inc
xor
sbb
push
cld
push
adc
xchg
push
das
pop
jno
pop
repnz
add
or
out
icebp
jbe
rolb
cld
pop
jl
sbb
daa
in
push
jb
pushl
std
mov
and
ljmp
or
cmp
xor
push
rcrl
xchg
and
mov
mov
add
lcall
ret
cwtl
push
push
xor
ss
mov
mov
and
xchg
test
aaa
fsubrl
jbe
dec
fs
add
loopne
push
pusha
cmp
add
cltd
push
addb
decl
lock
movsb
neg
fwait
in
and
dec
mov
sbb
fwait
sar
decl
dec
ret
xor
incl
daa
sbb
clc
sub
cmpsl
and
adc
inc
ljmp
push
inc
sub
shll
xchg
test
pop
xchg
stos
jne
pop
sub
mov
call
inc
hlt
movsb
pop
adc
inc
sub
js
mov
push
xchg
pop
outsl
orb
xchg
ds
decl
or
fwait
aaa
and
rcrb
aaa
stc
push
filds
aam
mov
jb
push
push
in
pushl
dec
xchg
fsub
push
add
mov
mov
jae
xor
lods
jb
inc
popa
outsb
out
push
dec
add
sbb
xor
mov
inc
mov
ret
pop
dec
fsts
call
and
pop
movsb
mov
movsb
dec
inc
inc
xor
jg
decl
jg
dec
cltd
mov
sub
jb
nop
pop
xchg
lock
mov
push
inc
lcall
and
test
scas
andb
insl
push
jae
xchg
xchg
jmp
mov
add
cli
mov
cmpsb
mov
aas
sbbl
jg
outsl
xchg
testl
es
sub
ja
lock
fwait
stos
pop
cmp
test
and
inc
icebp
fs
nop
popf
mov
ljmp
test
loop
push
push
mov
pop
cs
xchg
mov
mov
push
rcrl
or
jp
fcoms
dec
jecxz
mov
adc
pop
leave
mov
mov
mov
icebp
cmp
xor
pop
push
xchg
inc
sub
mov
xchg
decl
pop
adc
pop
clc
stos
adc
inc
xor
push
imul
jl
fisubrl
xchg
jle
inc
sub
aaa
mov
fdiv
mov
sub
mov
mov
and
ret
clc
scas
xor
pop
mov
dec
jg
incb
mov
xor
movsb
or
add
lcall
add
lock
movsl
pop
lret
mov
cltd
fwait
mov
jmp
scas
inc
sub
inc
loop
arpl
test
loop,pt
or
stos
push
pop
loop
or
adc
lcall
push
nop
mov
push
mov
hlt
jecxz
dec
adc
pop
and
mov
sbb
dec
shll
sbb
sbb
jg
sub
lods
jp
imul
ja
mov
add
adc
mov
jmp
push
idiv
sbb
adc
mov
cltd
inc
lods
adc
and
jg
rclb
mov
and
mov
cmp
push
mov
xchg
lods
and
and
rep
mov
cld
jmp
adc
mov
fcoms
pop
lock
cmpsb
push
mov
je
sbb
or
mov
dec
adc
cld
mov
pusha
mov
fs
movsb
loop
mov
incl
jae
mov
jmp
xchg
cltd
mov
icebp
imul
rcrb
testb
in
sbb
push
add
and
mov
dec
ja
or
jecxz
out
mov
cltd
sbb
mov
les
xor
lret
adc
inc
sbb
add
aam
push
jnp
hlt
and
ret
jmp
jl
jbe
mov
fcmove
aaa
pop
jmp
add
cmpsl
es
imul
xchg
cmp
push
cld
lcall
sti
xchg
fistl
cmp
add
adc
cmp
lcall
mov
mov
lret
out
xchg
in
inc
iret
cmp
call
loop
sub
adcb
xchg
push
pushf
enter
inc
add
lret
in
and
shr
mov
inc
sub
xchg
lea
and
pop
mov
out
clc
scas
mov
clc
std
mov
ja
push
or
pusha
cmpsb
mov
sub
mov
inc
jle
push
clc
jo
icebp
inc
cltd
jmp
rcrl
xchg
loopne
lcall
ljmp
mov
es
xor
mov
lcall
sub
shll
or
mov
mov
cmp
cmp
jl
lcall
cmc
pop
mov
ljmp
hlt
push
pop
rolb
stos
aaa
rolb
cld
test
fcomip
pushl
imul
jns
mov
cs
int
fsubrl
pushf
fadds
lret
dec
rolb
mov
jae
push
lods
and
int
cmc
ja
lds
push
or
dec
subl
rolb
cmp
cmp
data16
lock
pusha
mov
hlt
decl
jle
xor
in
outsl
insl
mov
adc
and
decl
mov
fdivrl
cwtl
inc
cmp
loop
mov
popf
rcrl
sar
ljmp
addl
add
int
cmpsl
push
add
icebp
ljmp
push
and
adc
sar
and
pushf
mov
xchg
cmpsb
bound
xor
inc
and
enter
imul
int3
insb
adc
ljmp
movsb
sub
mov
mov
ret
sub
stos
cmp
into
mov
pushl
dec
cmp
out
mov
adc
add
cmp
xchg
push
into
dec
adc
lods
sbb
lods
pushf
arpl
in
sbb
mov
ljmp
fidivs
cmp
fs
loopne
in
push
xor
xor
call
add
cmp
push
rcrl
push
xor
insl
fadd
mov
iret
mov
std
faddl
jmp
in
sbb
insb
xchg
je
out
jle
ja
xchg
jne
out
ljmp
jle
fbstp
out
sbb
pop
aas
js
push
mov
push
test
out
mov
sbb
and
fmull
movsb
ret
cmp
xchg
hlt
pushl
fadd
stos
fstl
sub
jp
mov
loopne
push
cli
cmp
outsl
sbb
sarb
xor
pop
sbb
mov
lods
stos
cld
call
inc
scas
pop
sbb
pop
imul
jle
mov
icebp
loop
sahf
in
ret
add
push
lds
jbe
mov
dec
sub
std
jb
push
ret
xchg
dec
std
ljmp
jp
add
shl
pop
loopne
push
add
mov
or
add
or
add
dec
or
aad
pop
int3
mov
decl
test
rcrl
mov
mov
rcrb
push
pusha
sub
push
jns
shl
call
mov
scas
jno
mov
lahf
icebp
ljmp
cmp
fistps
mov
sub
repnz
pop
mov
sub
add
ljmp
cs
xchg
fidivs
xrelease
sub
decl
or
push
jp
push
stos
repnz
loopne
mov
pop
cwtl
mov
jle
and
push
inc
mov
hlt
xchg
ds
mov
imul
xor
shll
mov
jp
push
lret
jmp
sub
push
xor
pop
xlat
jg
adc
jne
aaa
push
dec
fmul
out
imul
fisttps
lcall
mov
int
push
clc
mov
xor
add
movsl
in
ljmp
pushf
xchg
movsb
out
enter
add
push
decl
add
stc
movsb
das
cli
movsb
syscall
mov
or
push
push
jle
hlt
call
cmp
cmp
xchg
ficoml
int
pop
pop
xor
sarb
sub
cmc
ljmp
and
data16
vxorps
icebp
cmp
dec
jae
testb
mov
jae
gs
pop
jg
addb
dec
ljmp
aaa
loopne
lods
jg
std
mov
push
out
call
sub
add
dec
ret
insl
mov
cmc
lcall
jecxz
call
pop
clc
fcomip
decb
adc
inc
lock
ret
or
lock
ret
adcb
roll
inc
sbb
lock
sub
ljmp
adc
lea
push
cmpsb
inc
jecxz
nop
xor
movsb
call
push
jb
jg
and
loopne
rorl
aas
fsubrs
aas
dec
movsl
jmp
and
cmpsl
push
mov
adc
mov
les
or
das
adc
jle
cli
in
fbstp
arpl
sub
xchg
cmp
mov
leave
into
add
mov
and
sarb
inc
ret
icebp
arpl
xchg
sbb
xor
xchg
sbb
xor
push
sub
lcall
inc
mov
push
mov
mov
imulb
scas
imul
add
mov
fbstp
ljmp
enter
icebp
jp
xchg
sub
sbb
push
mov
add
adc
decl
mov
pop
mov
aam
decl
jl
xchg
add
mov
stos
fadds
inc
and
pushl
js
stos
inc
xor
lds
xor
test
jl
mov
xchg
jns
jg
or
adcb
scas
inc
mov
mov
mov
sti
or
push
orl
roll
sub
loop
sbb
xor
stos
inc
xor
add
jb
xor
or
negb
adc
and
popa
add
cmp
mov
lret
ljmp
mov
xor
loopne
or
lcall
sbb
or
mov
movb
loop
cmpsb
icebp
mov
adcl
adc
cwtl
aam
call
cmp
movsb
mov
push
movsl
mov
into
in
lret
and
fdivs
hlt
or
dec
dec
sbb
fimuls
sub
mov
and
add
or
mov
push
cmp
pop
cmc
enter
fmul
jne
mov
adc
sub
xor
dec
scas
mov
lcall
jp
ret
adc
jnp
sub
mov
stos
jbe
mov
mov
mov
ljmp
jno
or
cmc
xchg
xor
pop
filds
arpl
jl
lea
xor
dec
cmp
clc
pop
jle
imul
mov
pop
outsb
test
cld
mov
jp
js
xchg
js
repnz
mov
mov
adc
xor
dec
sar
nop
test
cld
jecxz
adc
scas
mov
fwait
out
sub
roll
and
pop
scas
or
pop
add
insb
cli
aas
ljmp
mov
ret
ljmp
fstl
mov
ror
adc
insb
jno
pop
popa
les
fwait
test
add
outsb
sar
mov
call
rolb
xchg
push
lcall
dec
jl
push
es
jmp
add
repnz
call
push
clc
cld
je
inc
push
and
cmp
and
sbb
mov
jg
sub
adc
mov
test
mov
clc
cmp
jl
xchg
mov
cmp
das
pusha
test
jb
data16
add
mov
jg
subb
push
xchg
mov
jg
sbb
pop
loop
test
jge
jmp
pop
icebp
and
mov
pop
cmc
mov
icebp
or
and
loopne
or
mov
xchg
xchg
lods
adc
and
jg
adcl
mov
or
cld
ret
jl
xor
or
imul
push
mov
imul
push
sbb
jecxz,pt
push
fidivl
ret
xor
rolb
ljmp
ss
aam
push
dec
mov
xchg
inc
add
shll
mov
incl
adc
into
sbb
ficoms
add
es
push
data16
rorb
xchg
push
cmp
bound
mov
mov
adc
movsb
pop
call
or
mov
movsb
pop
push
inc
inc
xchg
mov
jg
add
outsb
mov
stc
enter
js
adc
aaa
adcl
push
ljmp
pop
stc
lcall
dec
orb
aad
dec
movsl
movsb
and
loopne
adc
dec
pop
sbb
incl
inc
cwtl
shr
das
sbb
cwtl
lret
add
add
incl
cmp
inc
sub
rolb
mov
dec
fisubrl
pop
cld
loopne
pushl
add
xor
les
sbb
add
sbb
lret
mov
idiv
decl
arpl
out
mov
jne
jae
jmp
lds
xorb
and
push
lock
dec
sbb
dec
pop
inc
shll
mov
popa
push
push
lret
push
cmc
scas
call
lret
and
dec
pshufw
push
mov
jp
cwtl
pop
lds
dec
pop
es
and
ljmp
push
test
repnz
pop
inc
sub
sub
xchg
push
pop
push
nop
sub
imul
push
sub
sbb
and
sahf
add
test
push
jnp
adc
cs
sbb
inc
xor
ja
push
addb
lods
push
adc
add
adc
adc
decl
clc
xlat
cmp
orl
test
nop
and
rolb
clc
jno
xor
cmpsb
mov
test
fwait
adc
sysexit
enter
and
push
mov
cmc
inc
push
mov
stos
orl
inc
lock
sub
inc
fcmovu
mulb
push
mov
pop
fucom
fstpt
fadds
add
fdivrl
fs
lock
in
out
mulb
je
xor
add
adc
or
lret
push
test
lock
inc
add
ja
mov
push
or
sbb
mov
pop
pop
mov
xchg
shrl
xor
addr16
xchg
and
js
xor
and
mov
ret
dec
outsb
xor
add
push
fwait
add
jg
pushf
add
rorb
lock
jmp
sbb
inc
mov
xlat
and
cli
or
les
mov
incl
aaa
and
or
dec
add
pop
cwtl
xor
lcall
sbb
mov
push
mov
inc
sub
es
cltd
cmpb
jo
inc
sbb
mov
jg
call
mov
nop
pop
mov
or
or
je
lea
sub
dec
sbb
mov
scas
fs
ljmp
mov
test
or
cmp
xor
lcall
fidivl
imul
dec
testl
cwtl
mov
push
cld
cmp
inc
nop
test
push
push
mov
jl
pop
fucomp
ret
aam
jno
fimuls
mov
xchg
lcall
sbb
adc
roll
xchg
aas
xchg
mov
int3
out
ss
incl
into
push
pop
imul
loope
jbe
inc
pop
adc
pop
fwait
push
cmpsb
push
dec
push
pop
aas
jp
call
nop
jo
xchg
add
push
mov
or
mov
aaa
fprem
lea
jnp
and
inc
lods
pop
movsl
sub
scas
dec
cmp
xor
fs
push
cmp
adc
pop
sbb
cli
jg
inc
add
nop
add
les
push
dec
or
cwtl
lds
fisubs
jle
movsb
test
popa
mov
dec
in
incl
cwtl
popf
cmp
inc
jo
inc
test
mov
sub
cmp
nop
cmp
outsb
out
push
call
data16
hlt
addb
inc
push
daa
outsb
jno
cmp
mov
mov
fxch
or
cld
pop
mov
je
or
fisubs
xchg
and
add
cli
jle
mov
aaa
std
jg
and
ds
xor
ljmp
outsb
jge
gs
push
add
or
fisubrl
xor
push
stos
rcr
cmp
imul
ljmp
out
lods
jns
push
sbb
xchg
sub
call
jle
jmp
pop
xor
mov
ss
bound
ljmp
lds
mov
rclb
stos
inc
inc
test
aad
ljmp
jmp
ficomps
sbb
icebp
or
or
into
jne
ffree
addb
or
fwait
mov
aam
sub
lcall
dec
mov
imul
cmp
das
cwtl
mov
cmp
mov
sub
test
fbstp
cmp
and
dec
addb
inc
sbb
dec
mov
mov
lods
and
and
mov
sbb
pop
mov
call
mov
jg
push
sbb
push
enter
aam
add
roll
js
ljmp
or
lock
and
arpl
xchg
or
add
fiaddl
test
enter
fcomip
adc
cmpsl
das
loopne
and
cs
orb
call
std
call
sbbl
mov
mov
mov
cwtl
add
insb
cmp
add
inc
fadds
ljmp
js
or
push
adc
inc
mov
test
xor
inc
mov
lahf
daa
repz
lcall
cmp
and
push
push
add
push
cmpb
fs
mov
jg
test
sti
push
mov
and
sarl
int
and
mov
push
adc
mov
jmp
fwait
ret
ljmp
or
mov
xchg
cmp
jecxz
int
push
dec
sbb
sub
loopne
cwtl
lea
dec
mov
or
in
sahf
xor
ja
xchg
xor
xor
arpl
xor
es
rcrl
rcr
subl
mov
addb
adc
sti
and
fwait
lret
sub
adc
mov
shlb
or
sub
insb
testl
incb
movsb
dec
jb
je
mov
rcrb
lds
mov
mov
cli
sbb
mov
push
pop
repnz
xchg
incl
cmp
scas
jg
jmp
mov
cmp
inc
mov
add
dec
push
and
sbb
test
adc
ret
mov
sub
mov
mov
xchg
push
arpl
xchg
add
and
mov
jo
push
cwtl
xor
ljmp
popf
jge
xchg
sub
jg
push
rolb
daa
clc
add
add
and
test
int3
stos
arpl
cmp
scas
mov
insb
add
js
adc
mov
sbb
xor
test
or
push
add
popf
hlt
cmp
mov
rorl
frstor
add
cmp
adc
sbb
hlt
mov
inc
inc
pop
mov
jmp
or
movsb
jbe
inc
js
mov
jmp
faddl
dec
stos
sbbb
sub
cmp
or
clc
mov
pop
call
or
inc
test
mov
lea
pushl
mov
cmp
push
add
out
pusha
inc
ss
js
je
js
dec
pop
mov
jmp
jae
inc
out
xor
inc
and
test
mov
dec
subl
addb
stos
jno
aad
dec
mov
adc
std
inc
sub
lock
adc
xchg
mov
sbb
mov
add
mov
jo
cld
add
inc
test
cs
addb
icebp
add
xor
mov
fwait
test
jmp
xorb
jno
sbb
xorb
rcrl
mov
stos
jmp
popf
jo
add
clc
orb
xchg
push
mov
cs
loop
and
cmpsb
cmp
adc
test
enter
cmp
js
add
pop
rcll
js
sub
mov
or
decl
sub
ret
mov
shrl
lcall
cmp
stos
ret
sub
rcrl
inc
inc
add
fildll
inc
and
push
pushf
mov
sbb
inc
xlat
cmp
sub
cmp
cmp
call
cwtl
rcrb
mov
sbb
mov
cmpsl
jp
lret
test
inc
in
test
ss
fisttps
mov
rcrl
cmp
or
mov
jg
rorl
sbb
inc
adc
fcmovnu
dec
xbegin
mov
fildll
imulb
jmp
rolb
push
ja
adc
xor
add
out
jecxz
xor
xor
jbe
addps
mov
enter
nop
or
xchg
and
incl
cld
cmc
addb
or
aas
test
add
in
mov
pop
outsb
mov
vunpckhps
mov
sub
adcl
dec
cmp
xchg
shl
ds
pop
movaps
sbb
push
adc
and
stos
lods
jns
xor
fs
aaa
inc
sbb
adc
int3
mov
push
push
pop
jg
nop
or
mov
in
cli
incl
push
lock
dec
cmp
test
add
cli
add
push
inc
add
clc
subb
cmp
sub
cli
fs
lcall
mov
outsb
cli
add
mov
sub
xor
push
xor
sbb
jl
xor
cmp
cmp
adc
ror
scas
hlt
ljmp
adc
lock
sbb
mov
xor
sti
cmp
fcomip
decl
pop
rcll
pop
and
mov
ljmp
add
addr16
insl
jge
outsl
sub
lret
dec
xor
cmp
pop
clc
jmp
fsubp
in
rclb
test
mov
aam
shrl
xlat
jae
addl
lret
sbb
inc
shrb
jge
insb
xchg
jl
add
ja
or
aad
add
inc
xor
sbb
cmp
push
das
or
xchg
add
ljmp
push
mov
mov
add
push
test
add
jmp
sbbl
lea
lods
in
xchg
or
sub
mov
std
sub
fimull
sub
call
push
xor
fadds
repnz
rclb
pop
cld
popa
ret
iret
adc
or
pop
enter
cmpsb
mov
sbb
cmp
push
bound
sub
pop
adc
add
add
dec
andb
mov
pusha
daa
inc
in
pusha
add
lcall
popa
sub
push
call
aaa
adc
loopne
push
adc
add
js
fadds
and
adc
std
decl
cmpsb
jmp
aam
inc
fldt
cld
fiaddl
and
rcrl
jecxz
jg
mov
aam
cmp
int3
inc
sub
call
mov
movsb
call
mov
mov
into
sub
mov
pop
fisubrs
loopne
ficomps
das
sar
adc
adc
adc
sub
and
dec
das
cli
scas
mov
rcll
iret
pusha
push
ja
dec
pop
lock
inc
sub
cli
out
inc
or
dec
iret
dec
xchg
imulb
lea
pushf
mov
push
in
sbb
std
in
iret
xchg
popl
loopne
shrb
mov
pop
pusha
pop
dec
pusha
add
add
mov
add
lret
xchg
push
lock
add
test
dec
pop
inc
dec
call
sub
xchg
ljmp
and
loope
adc
sti
adc
std
or
call
pop
loope
push
std
add
inc
aaa
sahf
cmp
rcl
pop
and
push
pop
or
mov
jb
shlb
sbb
js
and
test
orl
dec
in
push
test
adc
xor
stos
enter
adc
fcomip
dec
add
subb
cmpl
mov
cld
lcall
les
orl
nop
cmp
test
rol
cli
pop
aaa
mov
ljmp
push
xor
adc
xchg
add
pop
push
int3
enter
cli
pop
incl
dec
int
xor
add
into
xorb
fcmovb
shll
xor
pop
es
fistpll
xor
int
fstl
pop
ror
cmpl
cmp
fcoml
ljmp
mov
in
mov
sbb
inc
loope
push
lcall
mov
pushl
bound
lds
mov
xor
imul
push
rcrl
out
hlt
fisubs
inc
negb
mov
out
jmp
idivb
mov
pop
cld
gs
ret
adc
jl
pop
ss
add
mov
jg
incl
pop
mov
jge
mov
call
js
push
test
inc
cwtl
add
call
add
or
adc
lcall
pop
jbe
dec
dec
push
or
imul
jge
add
fsts
xchg
xchg
mov
sbb
sbb
call
inc
int3
loope
test
repz
pop
movsl
or
bound
or
pop
inc
pop
clc
test
cmp
rorb
adc
add
sar
in
inc
sahf
xor
pop
add
sub
call
mov
scas
push
jecxz
arpl
inc
mov
cmp
es
sbb
or
or
push
inc
cmp
xor
xchg
daa
incl
fadds
mov
aam
popf
out
orl
test
call
repz
cld
dec
iret
or
add
adc
add
and
aaa
aaa
jmp
mov
mov
sub
clc
xchg
add
mov
decl
or
pop
fidivrs
add
into
jo
fbld
fisttpl
push
insl
test
dec
fcomip
ljmp
mov
sbb
scas
dec
out
mov
lods
dec
lea
call
sub
pushl
stos
jmp
xor
dec
dec
filds
mov
stos
in
cmpb
sub
dec
adcb
jg
hlt
mov
jo
jae
ja
mov
xorb
or
add
xchg
addb
mov
dec
lcall
mov
adc
fwait
push
mov
stos
shl
test
cmp
psubsw
aaa
add
cmp
cli
pushl
dec
iret
pop
and
lea
call
and
and
and
add
or
or
lods
lods
ret
dec
in
jg
mov
call
and
filds
scas
test
lcall
pop
enter
push
push
jo
push
xor
rolb
jno
popa
adc
mov
xchg
jae
clc
cmpl
pop
pop
ficompl
dec
pop
cwtl
dec
mov
lret
mov
push
add
mov
push
shll
ds
decl
enter
insb
push
fsubrs
or
or
cld
enter
mov
lcall
shl
jle
mov
xchg
mov
js
and
ljmp
pop
mov
adc
xlat
sbb
decl
outsb
sbb
xchg
pop
out
cmp
mov
mov
cmp
lcall
or
pop
xlat
scas
cli
jge
dec
jbe
push
lea
lea
push
dec
pop
sub
jmp
jmp
pushl
sub
outsl
ja
idiv
add
cmc
lods
adc
fcoml
cmp
fwait
daa
mov
or
ja
xor
mov
fsubrp
std
inc
ljmp
push
mov
nop
cmpb
cld
push
sub
incl
mov
mov
es
mov
xor
inc
xchg
sbb
add
enter
add
enter
aad
pop
decl
dec
push
sbb
shll
dec
cwtl
data16
inc
lds
push
loope
shll
adc
cmp
push
push
inc
xchg
add
mov
stc
ljmp
lds
mov
mov
or
xchg
lea
arpl
push
enter
push
push
mov
cmpsb
xchg
aam
mov
mov
inc
lret
xor
fwait
decl
loop
loop
sub
outsb
and
sbb
incl
cmp
sub
daa
lods
cli
icebp
inc
rorb
pop
cmp
inc
pop
mov
fsub
ja
adc
push
pop
clc
and
adc
pop
push
mov
mov
lock
cld
fldenv
xchg
popf
mov
movsl
dec
jmp
mov
mov
mov
push
mov
or
aaa
out
sbb
in
test
pop
jmp
xor
ret
les
adc
push
clc
in
push
dec
sbb
or
pusha
orl
pushl
dec
pop
enter
test
fsubs
add
mov
bound
inc
push
test
jmp
mov
movsl
enter
test
adc
mov
jmp
icebp
call
or
jg
insb
sub
fs
ds
and
or
jne
xchg
push
ds
xchg
push
inc
mov
jmp
rolb
xchg
push
pop
dec
out
push
ljmp
jno
or
add
push
cmp
mov
xchg
xor
popf
test
or
orb
jl
add
adc
loope
inc
loopne
cmp
pop
jp
movsl
dec
pusha
lcall
cmp
xlat
outsl
adc
mov
pop
adc
jo
sub
or
push
inc
and
fwait
test
pushl
jg
pusha
into
pop
xchg
jae
dec
push
adc
int
jg
dec
std
mov
sbb
pop
xchg
mov
fisubrs
adcb
nop
jecxz
mov
cmpb
xor
mov
dec
cmp
hlt
scas
dec
sbb
cmp
adc
push
or
cmp
incl
das
rclb
adc
rorb
int3
inc
adc
rolb
insb
mov
lcall
fsubrl
iret
ret
adc
xchg
or
adc
loope
sub
hlt
loope
fisttps
ret
or
sar
and
or
in
jl
adc
cmp
xchg
and
inc
xor
fs
adc
xchg
lods
jb
push
in
out
int3
sar
push
bound
xor
jle
ljmp
adc
stos
mov
push
ds
das
jge
inc
fistpll
or
mov
aaa
sub
add
xor
pushf
add
jl
push
ret
clc
mov
enter
cmp
icebp
cmpsb
lcall
mov
sbb
push
mov
pop
adc
je
or
fucomip
pop
lock
pop
and
inc
bound
aam
mov
cmp
arpl
bound
das
je
icebp
or
adc
push
cltd
movsl
cltd
dec
lcall
cltd
push
cld
pushl
iret
inc
fwait
aam
flds
fdivrs
std
neg
mov
mov
decl
cli
jbe
call
cwtl
jmp
in
cmp
and
ljmp
push
les
add
sbb
into
jno
sbb
movsb
mov
loop
stos
dec
xchg
xchg
lret
or
pushl
sub
add
in
xchg
lods
sub
test
cmp
sub
nop
test
imul
inc
nop
xchg
and
imul
sbb
sub
xlat
cmp
inc
xchg
and
je
adc
pusha
fwait
loopne
out
xchg
lods
add
or
dec
adc
in
cmpb
subl
adc
xor
das
jg
lods
ljmp
inc
incl
inc
cmc
xchg
and
pushl
cmc
shr
mov
and
adc
pop
or
pusha
fsubl
adc
rorl
push
faddl
or
sub
sub
jl
and
in
ret
dec
push
int3
in
imul
dec
call
add
gs
ljmp
push
in
hlt
rcr
pop
lcall
cli
loopne
sar
outsl
dec
das
icebp
adc
popa
ljmp
data16
xchg
sbbb
inc
add
pushf
sbbl
mov
cmp
ret
sbb
xor
or
adcl
and
cmp
xchg
pop
addb
dec
add
bound
pop
rolb
decl
push
mov
icebp
enter
adc
sub
push
cmp
pop
bound
adc
pop
push
enter
movsl
sub
sahf
repz
adc
xor
pop
mov
ficomps
mov
rcll
pusha
jb
movsb
jge
pop
sahf
in
adc
cmpsb
pop
pusha
ljmp
fdivl
sub
call
inc
adc
add
popl
mov
sub
and
jl
std
sbb
jae
nop
or
repz
stos
adc
push
fs
dec
pop
movsl
cmp
ja
mov
subb
lock
faddl
pushl
shlb
xchg
push
in
jp
outsl
xchg
mov
leave
cmp
and
and
pop
xchg
clc
inc
adc
mov
add
jl
sub
mov
imul
shlb
cwtl
ret
or
cmp
inc
adc
and
xorl
or
pop
les
mov
jne
insl
insl
or
pop
inc
insb
sub
add
pop
xchg
push
dec
cmpl
mov
aaa
mov
mov
mov
aaa
in
movsb
or
mov
in
cwtl
dec
pop
inc
movsb
sar
ja
nop
mov
gs
insb
mov
sbb
mov
shll
mov
decl
sbb
mov
xchg
addl
mov
and
mov
mov
xor
mov
out
out
or
adc
adc
popa
mov
push
adc
in
push
inc
add
repnz
fsubl
and
pushl
nop
sbb
adc
adc
jge
inc
xor
mov
out
mov
insb
leave
aad
mov
pop
dec
cmpsb
repnz
cmpsb
test
test
jle
pusha
sbb
cmpsl
lds
pop
lcall
int3
adc
mov
push
sbb
sub
push
sub
ljmp
icebp
fsubrl
dec
mov
stos
mov
add
or
addl
jmp
sub
fs
jmp
sub
ret
push
pop
push
mov
sub
ret
shll
imul
cli
jle
adc
dec
hlt
mov
push
adc
xchg
sub
add
lods
out
mov
lcall
push
xor
mov
mov
mov
sbbl
mov
pop
xlat
mov
sbb
int3
cmp
xchg
scas
adc
xor
loopne
and
mov
jbe
inc
adc
jg
sub
dec
ret
sbb
push
mov
dec
and
call
add
out
xor
add
or
loopne
mov
or
mov
into
loopne
adc
inc
icebp
data16
push
jecxz
push
sbb
xchg
cmpsl
and
adc
lock
incl
into
jge
inc
xchg
lds
or
and
and
popf
cmp
cmp
sub
sbb
or
mov
shlb
movsl
xor
push
ljmp
clc
cmpsb
je
pop
xchg
movsb
mov
push
xchg
add
inc
or
rclb
adc
dec
out
xor
ljmp
sub
dec
mov
adc
call
xchg
push
jns
daa
lock
stos
cmp
xor
sbb
cmp
nop
inc
add
pushl
ret
addr16
test
fistps
mov
pushl
sub
inc
cld
mov
and
in
dec
aam
scas
mov
jg
lock
decl
lock
imul
sbb
ss
decl
pop
pop
mov
cmp
cmpsl
scas
std
lret
jo
add
and
add
sbb
push
shlb
xchg
add
clc
int
add
in
xchg
imul
pop
sti
mov
std
mov
or
int
js
sbb
inc
push
cmpb
mov
add
or
mov
fadds
push
mov
xlat
jecxz
inc
and
ret
jg
in
pop
mov
in
inc
pusha
dec
or
in
add
mov
les
pop
dec
xchg
ret
dec
enter
sahf
xor
adc
mov
mov
loope
fdivr
ljmp
into
sbb
outsb
cmpl
push
mov
shrb
inc
pop
adc
push
mov
xchg
gs
cwtl
pusha
pop
xchg
popa
xchg
xlat
jno
testl
hlt
pop
fwait
mov
fldenv
cmpsl
cs
hlt
or
les
shll
loopne
add
add
pushf
lds
sarb
jb
rcrb
fstps
fistl
in
out
fsts
xor
inc
sbb
mov
call
mov
call
dec
les
push
inc
push
shr
sbb
das
je
push
jmp
pop
ljmp
inc
push
into
sbb
dec
aam
test
lret
push
fisttps
stos
out
fsts
pop
lahf
jle
adc
hlt
pop
hlt
aam
add
sub
and
pop
push
jecxz
dec
sar
scas
push
pop
mov
mov
cli
test
or
xchg
add
push
or
inc
dec
enter
mov
call
cmp
jmp
mov
dec
in
pop
sbb
faddl
les
sub
mov
fcomps
sbb
inc
push
faddl
cmc
mov
sbb
inc
movsb
imul
fbld
gs
imul
shll
roll
jg
movsb
cmp
shlb
mov
lret
leave
and
jns
dec
add
lcall
add
sahf
lret
inc
lods
mov
dec
mov
cwtl
mov
mov
jecxz
mov
inc
pushf
inc
sbb
test
jne
repnz
mov
sbb
loope
jne
push
stos
xchg
pop
es
mov
or
insl
dec
pushf
dec
pop
sbb
test
iret
sti
les
fildll
inc
inc
mov
push
add
inc
sbb
rcrb
and
rorb
mov
rolb
push
popf
insl
push
pop
in
mov
xor
lods
dec
rorl
push
daa
adc
lcall
incl
dec
push
loope
adc
lea
pushf
ljmp
mov
xor
mov
nop
pop
rorl
or
mov
movsl
pusha
aad
lcall
sub
sbbl
loop
mov
pop
insb
dec
decl
add
je
jno
lahf
cltd
cli
lcall
icebp
xor
sub
fisubrl
pop
or
inc
cli
dec
int3
pop
xor
popa
out
adc
cmpsl
push
andb
lcall
fisubs
cmp
in
cmp
dec
outsl
clc
fnsave
push
jns
pop
outsb
aam
aam
lock
das
sbb
mov
sbb
inc
aam
add
and
lock
in
test
mov
flds
or
jecxz
into
out
adc
and
dec
lcall
dec
std
jg
outsl
push
aam
call
out
addr16
into
cmpsb
nop
mov
dec
and
jg
or
lods
loop
rcrb
inc
stc
mov
jg
sbbl
jle
or
jb
loope
dec
fstl
push
push
lcall
in
cmp
xchg
sahf
popa
cmc
xor
pop
mov
dec
icebp
add
movsb
insb
sbb
fnstcw
inc
mov
sarb
pushf
inc
loop
aam
and
fcomip
bound
adc
lock
push
pop
cli
adc
push
xor
sarb
and
push
pop
enter
inc
inc
cmp
pop
fs
fidivs
xor
pop
icebp
push
mov
pop
aas
popf
cmpsl
pop
mov
out
aam
imul
loopne
jp
mov
in
lea
mov
cmp
adc
andb
sbb
roll
push
call
mov
xchg
sbbl
es
std
pop
hlt
divb
mov
sub
dec
stos
mov
sub
mov
pop
imul
pusha
sub
arpl
aad
in
shl
or
ljmp
sbb
mov
icebp
pop
push
fdivr
inc
test
inc
cmp
imul
push
mov
mov
mov
insb
mov
sub
lods
mov
cmpl
ds
sub
push
in
les
ret
dec
push
sbb
push
stos
pop
mov
sbb
addl
cmp
leave
dec
in
into
or
adc
push
imul
mov
push
mov
gs
mov
decl
mov
push
push
test
outsb
popa
hlt
insb
in
ds
push
pop
jmp
xchg
loope
jmp
push
push
leave
mov
cmp
sub
dec
pop
test
mov
sbbl
jmp
out
loop
sahf
xchg
sbb
adc
add
pop
lret
test
pop
inc
andb
or
inc
add
jg
shll
dec
and
out
lcall
sub
test
ljmp
test
pushf
adc
stos
mov
jmp
xchg
lcall
call
fmull
mov
cmp
in
out
in
cmpsb
add
fsubrl
clc
outsb
add
push
das
add
push
out
bound
subb
stos
repz
ds
hlt
scas
inc
jge
pop
xchg
xchg
and
dec
dec
mov
xchg
inc
notl
cmp
std
clc
xchg
scas
stc
mov
jp
stos
scas
cli
push
inc
cmp
cld
lret
xchg
jmp
leave
scas
dec
test
mov
std
shrb
ljmp
cld
push
jo
xchg
add
out
call
in
insb
call
decl
in
push
mov
sub
icebp
lcall
cmovne
nop
xor
pop
movb
jg
cmc
pop
xor
cmp
cltd
pushf
jo
mov
std
outsl
xchg
lods
mov
adc
xchg
sub
inc
xor
xchg
std
sbbb
inc
rcr
adc
lcall
mov
decl
loop
sbb
gs
imul
mov
jp
mov
add
or
cs
adc
ljmp
push
fcom
mov
movsl
mov
fsubp
push
mov
loopne
mov
push
inc
pop
scas
jbe
decl
subb
jmp
pushf
dec
mulb
jb
cltd
imul
mov
jnp
stos
scas
or
push
in
stos
cs
dec
xor
inc
inc
xor
lods
sbb
cs
stos
nop
hlt
pusha
test
sub
pop
icebp
decl
cmc
jo
cmp
leave
mov
out
inc
js
sub
out
cmp
mov
into
stos
bound
pushl
mov
lock
enter
sub
dec
xchg
inc
lods
mov
filds
jno
mov
mov
push
cmpsb
xor
mov
sub
sub
cli
sub
scas
push
dec
add
push
mov
and
jne
xchg
inc
fnstsw
dec
aam
cmp
call
mov
xchg
mov
sahf
test
pop
mov
dec
adc
cmpsb
xchg
pusha
and
mov
je
add
out
addb
push
lcall
sbb
add
dec
je
mov
loop
data16
inc
jnp
jp
decl
sbb
push
sub
pop
add
adc
mov
sbb
dec
sub
sub
movsl
sahf
out
cmc
call
bound
scas
out
xor
lret
lret
cmpsl
and
mov
push
repnz
icebp
out
and
mov
es
or
loopne
and
cmc
and
fbld
add
imul
movsl
fcomp
ret
mov
pushf
pop
gs
and
cwtl
inc
mov
fisttpl
pushl
mov
pop
lret
mov
xor
pop
iret
mov
add
iret
sub
icebp
inc
or
inc
std
jbe
inc
mov
aas
lds
mov
sbb
pushf
add
insb
push
push
lcall
ljmp
les
les
lock
fstl
push
sub
jbe
cmp
call
cmpsb
jbe
dec
jmp
mov
adc
mov
dec
adc
jmp
sbb
push
pushf
outsb
or
push
dec
inc
les
negl
push
or
xchg
sub
push
cmpsl
call
fs
stos
and
dec
stos
adc
cld
lcall
repz
sub
dec
fisttps
shrb
mov
or
ffreep
lcall
jle
xchg
xor
and
jg
jge
jge
ja
out
mov
inc
das
jle
ljmp
cmp
dec
push
repnz
push
jg
das
mov
insl
xchg
imul
js
lcall
dec
imul
or
iret
xor
divb
inc
les
mov
jnp
xor
push
incl
iret
mov
mov
sub
fidivrs
bound
sar
pushl
movsb
and
sbb
shlb
xchg
mov
sarl
call
lods
jge
or
leave
shll
pop
mov
adc
incl
mov
add
fldenv
sahf
mulb
enter
mov
mov
popf
adc
cld
jmp
add
gs
pusha
daa
inc
sbbl
shl
pop
pop
xorl
loop
fnsave
ja
xchg
mov
repz
sbb
fyl2x
pop
mov
dec
and
cmpsl
out
mov
test
mov
cmp
ja
lcall
xor
add
mov
lcall
cmp
cmp
xchg
mov
cmp
gs
mov
data16
adc
js
jbe
mov
mov
push
cmp
jle
mov
loope
pop
aad
out
adcb
pop
xchg
mov
jae
inc
mov
nop
sbb
or
lcall
decl
xchg
push
inc
inc
ja
rcr
mov
or
mov
push
push
lret
fildll
frstor
popf
icebp
sub
ja
inc
xor
add
movsl
call
add
sub
outsb
aas
leave
hlt
pop
leave
xor
stos
or
ljmp
inc
mov
scas
fwait
ljmp
ja
push
jne
sbb
xorb
push
and
push
mov
iret
jmp
jle
mov
inc
sbb
and
sub
addl
aaa
out
js
inc
xchg
adc
jnp
pusha
stos
mov
mov
out
sbb
stos
not
ret
jmp
mov
mov
les
cmp
mov
iret
out
sbb
movsl
mov
jp
or
pop
pop
test
sar
jmp
ds
sti
mov
jnp
insl
and
decl
inc
leave
sbb
jns
mov
xchg
jmp
add
adc
aad
mov
add
jl
sbb
sub
mov
jg
jo
jns
push
mov
inc
rcrb
inc
cmpsb
lods
mov
or
or
jmp
cli
pushl
rolb
sbb
lea
mov
xor
or
mov
cli
dec
les
fstpt
fcomip
jg
nop
add
xchg
jl
popw
stc
adc
das
sbb
rcl
cld
daa
sbb
or
incl
mov
clc
cmc
pop
push
or
push
scas
push
add
lcall
jo
push
xor
adc
roll
test
jmp
xchg
aad
cwtl
or
mov
dec
in
roll
mov
in
lock
push
in
xor
cmp
mov
call
es
xchg
cmp
movsb
dec
adc
rcrb
cli
adc
mov
incl
clc
cwtl
dec
dec
ds
mov
fwait
sub
test
adc
ljmp
jnp
inc
pop
scas
aam
dec
lret
xchg
pop
pop
mov
and
push
mov
pushl
shrb
test
imull
call
jecxz
in
pop
nop
decl
or
lock
cltd
aas
jg
mov
in
lds
mov
pop
and
pop
imul
pop
mov
outsb
fnsave
pop
adc
xlat
rolb
movl
pop
test
mov
out
push
js
inc
ja
mov
fnsave
pop
pop
lcall
xor
adc
hlt
call
lcall
pop
stc
mov
xor
pop
movsl
mov
add
mov
nop
rorb
clc
incl
sbb
roll
pushf
xor
or
mov
lcall
test
rorb
ret
sub
cmp
lds
rcll
lea
pop
popa
test
sub
imul
sti
sub
inc
repnz
adc
sbb
mov
xchg
pop
and
cld
mov
jae
mov
inc
xchg
repnz
pushf
in
jmp
sub
mov
mov
loop
mov
mov
mov
lret
ljmp
jno
xor
aas
ret
add
outsb
dec
insb
scas
mov
add
mov
mov
daa
inc
cld
push
mov
mov
xor
int
aad
add
mov
jo
push
sti
incl
sbb
pop
jecxz
cmp
pusha
rorl
push
mov
andb
push
ss
mov
jmp
fldenv
popa
add
in
scas
adc
add
popa
gs
or
push
dec
cld
fisubl
mov
ds
ret
and
sbb
xchg
aam
lds
pop
mov
adc
mov
sub
sbb
sbb
loope
inc
fadds
bound
xchg
mov
dec
pop
mov
push
lock
or
jg
jmp
push
or
xchg
dec
dec
adc
outsb
add
out
lcall
jo
sbb
aaa
lcall
cli
push
jmp
jmp
xchg
lea
mov
bound
cmp
aas
mov
ret
push
add
cmc
push
cmpb
neg
or
insl
cmc
cs
jmp
xchg
rcll
fdivl
fstl
outsl
nop
xchg
dec
popa
xchg
inc
cld
je
aad
dec
rcll
cld
lcall
or
call
dec
mov
push
scas
jns
movsb
inc
ljmp
mov
inc
jg
xor
sbb
outsl
fsubs
sub
dec
xchg
push
leave
pop
clc
ljmp
xchg
mov
gs
shll
aad
and
popf
or
adc
loop
std
lcall
outsb
xlat
jmp
fdivs
mov
lea
jg
je
mov
xchg
mov
pushl
push
mov
inc
or
mov
movd
xchg
jne
push
pop
jg
pop
incl
cld
jg
mov
push
add
call
or
or
mov
jnp
lcall
sub
sub
add
push
loopne
push
test
cmp
inc
pushl
or
test
push
add
add
xchg
loope
imul
add
lock
popa
push
jae
repnz
cmp
clc
aas
sbb
test
jl
inc
cmp
int
ljmp
xor
cmp
pop
in
imul
aam
test
pop
or
mov
paddd
fimuls
cld
mov
mov
testb
xor
fcompl
sbb
mov
pop
jno
pop
sbb
sub
ret
ljmp
je
popa
fcomip
cmpsb
sbb
xor
dec
and
inc
cltd
dec
insl
push
xchg
mov
mov
movsl
subl
mov
call
out
cmp
sahf
lock
or
enter
push
xchg
pop
mov
adc
lcall
ss
cmp
cltd
mov
mov
inc
cmp
jns
or
clc
pushl
inc
rorl
fcomp
dec
loop
aas
outsl
cmpsb
int
icebp
inc
bndstx
addr16
mov
ljmp
addr16
sarb
or
pop
aad
aad
loop
xchg
je
xchg
incl
insb
cld
pop
loop
mov
cmc
repnz
adc
inc
push
xchg
and
inc
or
ds
call
and
sbb
push
xchg
call
loopne
jg
pop
inc
push
inc
inc
rcrb
adc
lods
fcom
sub
dec
pop
call
cld
jl
dec
loop
add
xor
cltd
rclb
popa
jecxz
or
mov
lahf
shlb
fsub
sbb
fmuls
pop
mov
int3
or
cmc
lret
incl
shll
out
mov
das
xchg
stos
xor
jmp
lds
mov
or
cmp
int
stos
cmp
and
mov
sbb
cmp
int3
cmp
cmp
ljmp
cmp
lods
rcrl
lcall
xchg
cmpb
mov
out
dec
incl
jg
add
mov
fwait
lock
sub
xchg
icebp
mov
repz
fs
ljmp
xchg
repnz
ret
ss
lods
xor
aas
gs
into
and
dec
jae
adc
cmp
ds
mov
mov
mov
mov
or
out
xor
pop
mov
ret
mov
inc
or
dec
dec
xlat
sub
ljmp
mov
movsl
pop
pop
sbb
ja,pn
push
and
push
lcall
xor
push
lret
filds
dec
lahf
mov
dec
mov
jmp
sbb
push
push
pusha
js
hlt
pusha
nop
pusha
and
sbb
cmp
xchg
or
js
pop
mov
ljmp
pop
outsb
jns
sub
mov
lret
mov
jno
test
movb
xchg
push
sbb
xor
mov
cli
jg
push
cmp
lea
inc
mov
mov
sub
leave
cmpsl
cmp
fimull
adc
add
inc
ror
and
sbb
adc
sub
jmp
xor
cltd
pop
testl
pop
mov
adc
cmp
dec
xchg
ljmp
loopne
call
inc
imul
fwait
leave
jae
out
mov
aas
sub
das
insl
mov
jbe
pushl
mov
and
mov
inc
inc
sbb
mov
push
int
push
jg
mov
xchg
mov
add
push
stos
mov
aad
lods
imul
fcmovbe
mov
mov
add
push
push
adc
fmul
push
add
pushf
hlt
mov
in
shrl
ljmp
rcrb
jnp
sarl
pop
push
enter
jns
mov
push
push
adc
adc
outsl
jp
xor
arpl
lods
lods
dec
stos
and
in
or
ljmp
test
mov
data16
cmp
incl
sahf
test
push
or
call
lea
pusha
xor
pop
mov
hlt
or
in
cmp
stos
xor
dec
incl
lret
sub
movsb
ret
dec
imul
jo
jno
pushf
idivb
sbb
fldl
cmc
xchg
cmp
test
mov
xchg
jmp
nop
clc
dec
cmp
fimuls
inc
add
push
inc
mov
addb
or
fwait
push
adc
bound
xchg
cs
adc
sbb
rcr
lods
bound
das
sbbb
inc
aam
adc
jp
iret
cs
call
ja
rorl
mul
test
push
repnz
pop
cld
aad
jbe
stos
loope
rolb
mov
mov
jl
mov
hlt
lcall
shl
and
aad
ds
movsl
jecxz
data16
xchg
fldcw
out
and
call
mov
in
cld
roll
xor
ljmp
push
stos
xchg
push
daa
jle
aad
dec
inc
sahf
cmp
test
xor
mov
push
loope
sti
mov
mov
jg
aaa
addl
jo
pop
ret
rolb
adc
cmp
jmp
or
mov
imul
xor
imul
and
jmp
xchg
cmpsl
mov
addl
mov
mov
insl
jb
pop
fimuls
ljmp
sbb
ljmp
jg
loope
cld
dec
xchg
loop
push
mov
pushl
push
shlb
fsubs
dec
add
xor
fistpll
or
add
xor
pop
out
mov
add
pop
into
dec
add
pushl
sbb
xor
dec
pop
sbb
out
out
pop
movsb
sub
or
repnz
xor
sti
pop
icebp
mov
inc
cli
pusha
je
sarl
insl
mov
xchg
ja
int
loopne
fsubs
fsubrs
mov
push
adc
sub
or
lock
sub
sub
sub
xor
or
loop
inc
das
outsl
pop
inc
push
jg
pop
scas
fsub
movsb
fdivrl
adc
mov
call
icebp
or
pop
std
ljmp
stc
push
inc
das
scas
das
loope
addr16
outsl
je
filds
mov
add
jb
xchg
loopne
loope
jecxz
mov
movsl
incl
adc
outsb
sub
add
push
jbe
push
testb
jg
daa
js
dec
lcall
push
pushl
jns
mov
scas
js
add
fisttpl
and
cmp
sbb
fimull
mov
cmp
int3
mov
lret
idivb
call
xchg
mov
jmp
inc
loop
je
aaa
std
or
add
mov
addl
mov
je
cltd
addb
xchg
add
aam
in
lret
mov
xor
pop
sbb
pop
mov
mov
pop
mov
lods
mov
adcl
repz
inc
xor
incl
stos
inc
sbb
xchg
aam
mov
xor
test
test
es
mov
repnz
xor
bnd
scas
es
ljmp
xchg
test
mov
arpl
sbb
popf
dec
bound
xchg
dec
cli
es
ljmp
test
adc
mov
fsubrs
nop
lret
inc
mov
adc
xchg
cmp
cmpsb
scas
hlt
out
pop
test
bound
sar
push
lock
mov
push
fistps
adcb
clc
mov
xor
push
push
sbb
adc
inc
or
fisubrl
push
push
test
lds
clc
push
ficoml
imul
cwtl
push
repz
mov
sbb
inc
vmread
pop
mov
mov
mov
adc
mov
in
shr
ljmp
fs
jmp
popf
repnz
cmpsb
mov
inc
jb
loope
sub
shr
mov
mov
add
and
lret
call
enter
cmp
dec
je
push
loopne
xor
sub
pop
adc
dec
pop
and
add
aaa
lcall
adc
pop
cwtl
push
pop
push
lock
cld
dec
into
or
mov
out
dec
in
aam
scas
mov
dec
fadds
add
lods
xor
shl
shrb
lcall
ljmp
mov
cmpsb
mov
pop
mov
cmpsb
enter
jno
outsb
sub
hlt
dec
fiaddl
js
adc
fdivr
jno
dec
iret
inc
iret
or
incl
outsl
es
mov
and
mov
fsubrs
into
lret
or
ljmp
dec
call
cmp
jne
or
call
push
lods
lods
xchg
pop
aaa
add
mov
sbb
ljmp
jmp
imulb
fisubl
inc
mov
and
mov
mov
loope
pop
movsl
mov
icebp
xor
or
mov
cltd
movsb
or
lret
cmp
shll
and
decb
arpl
mov
jle
insl
mov
iret
pop
enter
jb
test
hlt
dec
call
or
loopne
mov
add
xor
out
clc
pop
cmc
adc
ds
nop
push
xor
xor
xor
cli
mov
insl
adc
push
daa
out
out
js
lret
scas
lret
pop
ja
inc
adc
test
ficoms
hlt
incl
mov
mov
mov
mov
loopne
call
pop
stos
es
pop
outsl
or
int
jo
mov
insb
ljmp
mov
sub
in
or
jle
mov
aam
into
in
pop
out
fadd
in
adc
test
cli
adc
adc
adc
add
sarb
mov
xor
and
adc
stos
adc
arpl
sti
inc
dec
adc
sub
insb
insb
xor
pusha
or
data16
push
xor
mov
ficoms
push
jbe
leave
push
or
dec
xchg
jno
mov
cmpsb
mov
insl
lds
pop
xor
xchg
jo
out
push
mov
push
sub
dec
mov
call
and
mov
call
out
int3
leave
es
pmaddwd
incl
push
inc
rol
addb
inc
add
sub
or
inc
rcr
lock
pop
cmp
push
jno
jg
sarb
roll
inc
push
pmulhuw
jmp
je
jo
aaa
jb
fs
incl
xor
adc
jmp
cli
cwtl
sub
lcall
inc
inc
je
mov
lock
push
inc
and
jo
call
scas
cmp
push
push
and
cmp
pop
mov
inc
aam
fistl
xchg
xor
repz
inc
outsb
iret
in
add
call
js
bnd
cmpsb
sub
adc
out
pop
stc
sub
push
jp
mov
xchg
clc
incl
or
xor
jne,pn
das
xor
adc
outsb
int3
push
mov
or
ljmp
testb
xchg
hlt
pop
sbb
and
xor
decl
repz
leave
mov
faddl
stos
mov
subb
imul
outsl
clc
leave
sbb
jecxz
mov
xchg
out
es
paddq
out
adc
fsubl
insb
test
hlt
fbld
jo
adc
dec
test
jb
notl
push
out
mov
scas
roll
sbb
std
ja
adc
inc
rolb
clc
movsl
dec
xchg
push
aaa
push
cld
decl
stc
in
or
jmp
das
mov
jl
repnz
or
ret
pop
call
sub
mov
or
jmp
nopl
ja
add
dec
repnz
movsl
stos
xor
mov
xchg
jae
aaa
jo
pop
das
inc
std
mov
or
mov
cmpsl
xchg
stos
adc
dec
ljmp
dec
out
sub
adc
push
and
in
mov
adc
std
ljmp
xor
push
ret
adc
mov
push
bound
push
pop
mov
insb
dec
inc
cs
fsub
xor
push
scas
fisttps
call
lret
js
jecxz
pusha
dec
add
hlt
mov
cmc
loopne
jg
pushl
js
adc
and
orb
je
mov
loopne
in
xchg
push
push
lahf
mov
daa
cld
xchg
add
xchg
inc
imul
inc
pop
xchg
ljmp
hlt
inc
pop
mov
cmp
jp
cmp
andl
out
jno
ljmp
xor
pop
sub
aaa
inc
in
das
sbb
fdivrs
pop
sbb
mov
mov
sub
pop
lret
push
pop
jbe
das
sar
push
cmc
xlat
rcrb
inc
hlt
push
testl
lcall
or
ss
mov
xchg
jae
mov
imul
dec
jno
insb
jp
or
ljmp
mov
jbe
add
and
push
xlat
push
iret
mov
incl
outsb
jb
idivb
mov
ds
jge
stos
pop
inc
add
add
ficompl
pop
inc
ljmp
xor
dec
js
lods
sti
ja
pushf
add
call
jns
sbb
inc
adc
dec
adcl
enter
mov
lods
lds
stc
add
rcll
and
jmp
outsb
repnz
enter
outsl
mov
add
jge
cmc
insb
sub
mov
pushl
in
sub
outsb
das
xchg
das
adc
mov
pop
mov
hlt
and
cwtl
pop
subb
das
lock
test
fs
cmp
push
or
push
incl
or
xlat
sbb
mov
jp
mov
sbb
pop
xlat
packsswb
aaa
xlat
jbe
xchg
fisubrl
test
scas
shrb
adc
lods
push
cli
mov
sti
lea
sub
push
sub
mov
cmpsb
dec
jg
xchg
jmp
lods
dec
or
mov
popf
clc
call
push
cs
push
mov
pop
rcrl
cmp
sub
je
incl
add
inc
pusha
jle
loopne
mov
push
jmp
fiadds
add
xor
call
xchg
fisubrs
pushl
sbb
ss
add
std
mov
rcl
or
adcb
int3
mov
add
ret
mov
mov
shlb
or
jmp
dec
int3
ss
pushf
cmp
adc
es
out
cli
sbb
mov
jnp
dec
mov
xor
shl
add
and
dec
xchg
je
mov
nop
lock
jp
into
cli
arpl
mov
dec
mov
push
or
adc
shll
xor
fistpl
js
fists
js
data16
inc
push
vmwrite
mov
sub
push
shlb
pop
shrb
call
leave
inc
cli
xchg
push
sbb
sub
cli
nop
notb
clc
lea
jecxz
dec
mov
or
mov
add
add
incl
ret
xchg
rol
inc
repz
movsl
shll
out
incl
cmpl
jl
pop
or
lea
push
mov
push
loop
adc
pushl
mov
or
sbb
hlt
lock
xor
push
out
jb
xchg
pop
mov
je
int3
cltd
shl
insb
xchg
mov
pop
stos
mov
or
mov
stos
jne
data16
pop
lcall
ja
mov
push
stos
push
mov
scas
mov
aam
je
jecxz
in
xlat
mov
iret
test
inc
mov
cmp
inc
adc
test
les
mov
jmp
xor
out
lret
or
ds
aad
enter
les
cli
clc
add
jmp
or
xor
dec
cmpsl
cmp
xchg
jl
xor
in
addb
xor
js
jecxz
sub
ljmp
sub
aaa
dec
xor
cmp
pushf
insb
push
incl
push
jg
push
imull
testl
std
scas
inc
dec
mov
pop
xor
sbb
popa
jb
xchg
aas
and
mov
cli
pop
mov
lcall
inc
adc
decl
aam
and
sbb
dec
xchg
cwtl
pop
pushl
js
js
lret
sahf
adc
popf
jne
mov
or
adc
cmp
fnstenv
imul
scas
inc
dec
imul
or
mov
arpl
mov
inc
adc
aas
inc
fmul
or
jmp
inc
inc
mov
movsb
pop
into
mov
pusha
fidivrs
insl
push
outsl
and
pop
sub
call
adc
sbb
repz
rcll
orb
add
or
add
cmp
cmc
inc
test
dec
mov
adc
mov
cmp
fs
test
call
cmp
xchg
pop
dec
xchg
add
les
cmpsb
inc
sbb
cmc
jle
inc
into
pushf
ss
adc
adc
xor
xorl
add
imul
loopne
stos
push
test
jg
inc
call
mov
fidivs
sti
les
insb
fisttpl
fdivrl
out
fimuls
pop
push
sti
xlat
out
cmp
jg
shl
and
pop
dec
mov
lods
or
sbb
cltd
xor
mov
pushf
shlb
lcall
pop
add
mov
pushf
fidivl
sahf
cmp
lock
pop
inc
xchg
loop
lds
push
pop
push
sbb
jo
aam
pop
mov
mov
je
push
lret
xor
add
call
inc
sbb
jo
add
icebp
add
jg
jle
or
test
push
daa
sbb
xchg
jmp
clc
lcall
sarb
loopne
dec
xchg
mov
icebp
xchg
pop
mov
dec
enter
mov
cltd
mov
sub
mov
js
lea
sub
clc
int
mov
insb
clc
mov
sbb
cli
test
inc
cmp
push
shlb
fbld
out
mov
lds
xchg
dec
cmp
lcall
sahf
cltd
pusha
cs
sbb
loope
sub
jns
mov
adc
lcall
dec
xor
sub
stc
push
adc
mov
in
add
inc
inc
sbb
mov
add
test
cmp
movsb
jno
loope
mov
pushf
inc
inc
test
xor
pop
xor
jb
in
adc
lcall
push
add
or
adc
and
fdivrs
mov
or
ret
lock
sbb
out
pop
push
push
ljmp
jg
test
mov
sahf
js
lods
popa
cmp
outsl
push
push
je
je
or
sbb
test
push
dec
pop
add
ja
ret
arpl
sub
in
add
xchg
in
sbb
scas
cli
ja
add
call
lds
test
add
sbb
outsl
pusha
std
ljmp
push
in
pusha
jne
leave
cmp
mov
xchg
cwtl
decl
cmpsl
xor
lods
data16
arpl
ss
arpl
cmp
decl
lock
aas
cli
in
add
mov
dec
inc
sub
in
call
leave
jbe
aad
popf
mov
ja
nop
push
xchg
out
inc
cmpsb
inc
psubusw
jg
icebp
or
or
rolb
add
xchg
addr16
dec
loope
lcall
jne
ljmp
pextrw
mov
mov
loop
insb
std
dec
es
test
xchg
lcall
loopne
ljmp
push
pushf
pusha
test
jno
lret
push
pop
insl
leave
and
xor
ficomps
push
inc
adc
add
call
or
pop
pop
mov
push
push
arpl
adc
push
mov
push
mov
cwtl
aad
mov
mov
mov
mov
pop
stos
push
mov
flds
insl
mov
or
outsb
cld
sbb
imul
sub
stos
sarl
je
stc
mov
jbe
jbe
and
out
sbb
out
les
lcall
lods
adc
push
fistpl
mov
push
add
les
incl
data16
outsl
loopne
sbb
add
ss
or
sbb
pop
dec
cld
incl
hlt
adc
pop
or
adc
clc
in
js
push
inc
cmpl
add
adc
and
push
mov
add
aam
ljmp
xchg
popl
bound
rorl
out
xchg
adc
mov
inc
lock
lcall
pop
repz
aaa
lret
and
loope
pop
dec
ret
xor
decl
push
rolb
dec
jb
xchg
xchg
xor
pushl
pop
into
inc
push
and
mov
das
andb
and
cwtl
push
lcall
dec
aam
sub
fcmovu
divb
lcall
hlt
xor
sahf
loopne
es
or
mov
add
mov
pushf
shlb
inc
push
mov
cwtl
ret
lock
cld
call
jmp
adc
jbe
aam
stos
jae
aaa
sbb
jg
sub
cmpsl
mov
lcall
add
sar
add
jp
ljmp
out
test
lea
jp
xor
lods
jae
xor
cs
cli
mov
ljmp
mov
jmp
pusha
add
add
pop
jmp
jb
cmp
jp
scas
jle
rcrl
inc
cli
movsl
aas
or
in
cwtl
out
mov
arpl
mov
add
jne
sbbb
fcomip
cmp
xor
or
mov
dec
or
lcall
incl
pop
inc
nop
sub
mov
and
xor
movq
cmp
mov
jl
pop
lahf
clc
aam
lret
cmpsb
cmp
jp
or
push
idiv
push
adc
xchg
xor
adc
int3
xchg
pop
int
xor
push
pushl
cld
insl
dec
push
in
cltd
rcll
push
mov
mov
cld
push
bound
dec
jmp
je
xor
xchg
and
mov
js
cmpsb
dec
inc
shrb
inc
push
mov
xchg
or
cmp
dec
add
inc
and
daa
jno
add
dec
and
add
mov
sub
inc
xchg
out
jp
ror
sub
test
push
in
imul
pop
or
leave
mov
add
and
add
pop
sub
psrlw
loopne
mov
int3
cmpsb
fs
cmc
or
fsub
pop
das
lret
xchg
jae
mov
imul
incl
xor
mov
xchg
adc
loope
rol
ret
je
imul
and
test
cmp
jmp
je
cs
fisubrl
in
xchg
and
adc
sub
decl
or
sarl
roll
adc
push
and
sub
push
dec
or
mov
fcomp
add
cmp
fs
xchg
scas
lret
enter
ljmp
cld
or
movsb
and
les
pop
xlat
lods
icebp
pop
andl
pop
adc
sbb
push
adc
pop
push
ljmp
sar
mov
mov
add
dec
sahf
pusha
in
ret
dec
push
rcrl
decl
stc
shrl
out
out
mov
adc
adc
jns
aas
stc
inc
xor
adc
ljmp
pop
lret
xor
add
push
cmp
xchg
stos
jecxz
ljmp
or
xchg
xchg
lret
mov
push
sbb
ud0
fbld
pop
in
mov
fdiv
dec
xor
and
loopne
sub
push
inc
incl
jl
sbb
dec
stos
mov
xchg
dec
jmp
sbb
pop
fdivrl
push
dec
mov
fimuls
sti
mov
out
js
push
add
inc
adc
mov
mov
loop
dec
std
bound
jmp
push
rcrb
sbb
xor
pop
adc
xchg
push
pop
jmp
incb
mov
adc
lar
mov
and
enter
and
cmp
cmp
mov
scas
call
addr16
lods
ljmp
jne
push
rcl
mov
hlt
lcall
jecxz
loop
jno
ljmp
inc
mov
in
mov
lret
jns
into
hlt
ds
jmp
test
push
mov
mov
pop
adc
call
mov
mov
inc
ljmp
pushf
lds
xor
mov
cmp
pop
mov
jno
mov
inc
orb
cmp
ljmp
mov
cmp
ja
mov
mov
xchg
incl
lret
push
adcb
xor
aaa
aam
xor
mov
sbb
cs
rorl
fiadds
push
mov
test
and
mov
add
cmp
xor
out
pop
addb
pop
sub
adc
sub
mov
push
out
sbb
inc
adc
sbbl
out
push
std
rcl
adc
popf
dec
dec
sbb
cltd
jo
jl
adcb
pushl
lock
insl
dec
inc
fldt
push
add
pop
xlat
sbb
pop
std
jno
xchg
inc
adc
lods
xchg
push
mov
mov
inc
dec
or
push
mov
cmp
in
mov
repnz
gs
es
adc
jb
xchg
cli
jmp
adc
ret
inc
aaa
mov
daa
cmp
sub
mov
je
sub
push
cmp
daa
adc
push
addr16
xchg
and
add
sub
in
cltd
jecxz
movsb
jne
and
and
ss
pop
mov
shlb
loope
jg
and
ja
mov
jnp
add
loopne
fdivl
add
mov
fadds
xor
fisubl
dec
lds
lods
inc
sbb
inc
sub
cld
jmp
jmp
inc
xor
cmpl
xor
xor
jne
jo
mov
pushf
testl
aas
movsb
cmpsl
xor
mov
xor
push
mov
popa
jg
mov
sub
xor
bound
jb
lcall
and
mov
adc
sbbl
cmpsl
imul
pushl
cli
hlt
jge
movsb
inc
push
sbb
pop
and
mov
cmpsl
pushl
pop
jb
jecxz
adc
scas
pop
icebp
sub
cld
mov
cmc
mov
add
movl
jae
adc
inc
ljmp
push
push
out
push
dec
and
in
and
xorl
add
data16
lret
and
jg
dec
rolb
call
mov
add
fst
stos
pop
add
sub
or
or
and
cli
call
out
inc
shrb
xchg
xorb
mov
pushf
xor
push
xor
fisubl
add
dec
bnd
sbb
addb
jmp
or
jo
shll
in
mov
sub
mov
test
test
xchg
pop
subb
call
adc
ss
loopne
inc
popa
xor
push
fidivs
pushf
xchg
push
mov
bound
add
pusha
xor
insl
add
xchg
fcmovnbe
sub
incl
push
add
add
pop
rcrb
lock
mov
xor
sbb
rclb
js
cmp
and
mov
and
enter
jo
sub
ljmp
pop
pop
and
or
cmp
icebp
mov
gs
and
bound
add
jmp
jg
fs
pushl
xorb
es
pop
push
das
mov
shll
aaa
dec
add
data16
lcall
daa
jg
jae
rorl
adc
loopne
mov
adc
repz
imulb
stos
stc
sub
push
xorb
addb
sbb
pop
pop
cmp
shrb
icebp
adc
inc
pushf
jno
jmp
cmp
push
jns
fs
cmp
sub
jo
pop
inc
xchg
fildll
cmpsl
xor
ljmp
xchg
pop
iret
xor
add
mov
or
mov
das
cmpsb
cmc
jl,pn
sub
push
nop
fsubs
rol
es
jno
shlb
incl
das
insb
pop
fiaddl
and
jg
jno
adc
insl
scas
addr16
sub
jmp
jnp
inc
sbb
xor
inc
popa
push
mov
sub
inc
xor
xchg
shlb
daa
inc
xchg
or
scas
clc
jmp
or
out
push
inc
jne
push
sbb
mov
in
xchg
xor
cmpb
inc
inc
jp
xchg
pusha
inc
jge
mov
xchg
inc
xchg
in
sbbl
pushl
ret
loop
jle
loope
dec
lret
mov
mov
jg
sarl
clc
dec
andb
clc
roll
call
insl
sbbl
rorl
outsb
mov
mov
and
in
mov
aaa
jno
inc
lock
dec
jb
jno
adc
mov
mov
pop
mov
pop
popa
je
adc
orl
pop
orl
dec
scas
rcll
xchg
push
lcall
fmuls
in
fwait
xor
rorb
xor
jp
adc
add
jmp
sub
jb
dec
lods
cmp
pop
cmp
inc
and
addr16
loop
cmpsb
mov
pop
and
dec
and
pop
div
ljmp
andb
leave
idivb
cs
xchg
sbb
lock
jl
rolb
mov
std
subl
insb
sahf
pop
jnp
cwtl
push
cmp
pop
mov
inc
xchg
jns
mov
inc
pop
cli
inc
pop
adc
outsl
mov
xor
dec
sar
mov
add
popa
xchg
in
xchg
sbb
sar
ja
rcrl
and
test
pop
aad
or
inc
call
subb
cli
test
sub
xor
stos
aad
jl
fimull
push
cs
lea
adc
xlat
mov
push
cmpsb
and
stos
jg
fwait
insl
cltd
cmp
jno
sub
pop
sbb
out
xor
call
xor
push
add
mov
lock
push
rcll
xchg
cmp
xor
and
test
lcall
testb
test
test
inc
push
inc
pushl
shlb
lret
push
stc
les
sbb
dec
fcomps
sahf
fdivrs
xchg
mov
stc
js
mov
mov
enter
scas
add
mov
lock
int3
dec
outsl
add
pusha
add
outsl
push
clc
push
jmp
push
lods
out
pop
inc
sub
mov
inc
popa
ljmp
jecxz
mov
arpl
inc
pop
icebp
sub
ds
out
rcrl
adc
data16
jg
ja
pop
xor
adc
icebp
je
or
mov
dec
lcall
xor
fdivrs
jl
test
gs
push
push
call
cli
stos
dec
jmp
jno
adc
adc
bound
ja
push
loope
jmp
inc
outsb
mov
push
cmp
add
js
sbb
fwait
arpl
push
inc
pushl
cmp
rolb
and
dec
and
incl
adc
rorb
add
lret
dec
jo
clc
lcall
pop
sub
mov
xchg
ss
shrb
js
dec
sub
lods
pushl
inc
js
or
sahf
jmp
add
lahf
ret
lret
xor
test
lcall
push
adc
lods
dec
cltd
push
orb
jne
inc
leave
add
push
xor
mov
scas
clc
scas
cli
daa
nop
pop
jg
mov
xchg
mov
ss
sbb
decl
push
pop
lock
push
iret
icebp
pop
and
inc
insb
sbb
ret
or
jmp
mov
push
enter
lret
sub
sub
addr16
call
add
mov
lret
mov
movsl
lods
jbe
mov
arpl
mov
sbb
lds
jnp
jmp
pushl
sub
insb
ss
lock
pusha
push
negb
add
addr16
mov
mov
pusha
aaa
or
or
fwait
in
js
adc
rcrb
mov
cld
ljmp
or
addr16
pop
outsl
jo
xchg
jecxz
pop
sti
inc
push
popf
mov
adc
fs
fadds
js
jo
mov
jg
out
mov
sbb
cmp
ss
in
sbb
inc
ss
dec
push
adc
lods
pop
ret
ret
scas
es
mov
ficompl
jg
mov
mov
push
dec
insb
mov
rcrb
mov
movsb
pop
dec
and
std
dec
push
out
sbb
enter
movb
ljmp
jo
and
inc
in
outsl
mov
repz
iret
dec
pop
lahf
pop
mov
fcmovnb
and
enter
or
lret
mov
ja
aas
and
push
and
fwait
mov
sbb
in
jb
int
mov
pop
js
jg
adc
push
push
out
sub
aaa
and
std
fisttps
inc
insl
xchg
jns
ror
cwtl
sub
jmp
insb
push
cmpsl
mov
mov
pop
int3
imul
inc
int3
cmp
mov
enter
sahf
mov
push
jbe
sub
push
scas
inc
imul
int
inc
add
cmp
cmpsl
inc
flds
sub
lret
sub
jnp
pop
add
test
js
rol
int3
imul
vxorps
aas
cld
xchg
pop
add
add
jp
icebp
xchg
les
add
push
je
fstps
jg
lds
xchg
adc
mov
ljmp
les
test
jnp
jg
fcomip
mov
mov
mov
sub
and
ret
pushl
xlat
mov
mov
dec
enter
sub
inc
push
insl
arpl
pop
aas
xchg
jmp
movsb
in
decl
mov
mov
dec
lcall
push
aam
jmp
fs
fistpl
insb
daa
sbb
fldt
bound
ljmp
vmovlpd
xchg
icebp
adc
adc
cld
incl
scas
test
and
pushf
mov
adc
rclb
xchg
repnz
xchg
sar
jg
decl
sbb
mov
pop
or
ja
nop
push
int
pop
ljmp
xchg
sub
sub
cmp
mov
sub
xchg
mov
sbb
fsubp
cld
fstps
push
stc
pop
cs
pop
pop
push
mov
lods
mov
lods
out
jne
cld
std
insb
std
mov
incb
clc
call
testb
push
xor
fmull
push
ljmp
rorb
loopne
es
cmpsb
in
data16
sbb
cld
jae
pop
ret
or
imulb
lcall
orb
lock
adc
and
sub
aad
xchg
enter
leave
push
stos
incl
fisttps
loopne
cmp
ja
mov
push
cltd
pop
rcll
cwtl
xchg
sarl
fstpt
sbb
adc
clc
out
lods
std
mov
pop
cmpsb
push
mov
pop
sbbl
incl
mov
add
cmp
pop
xor
sub
pop
popa
movl
push
xlat
add
cs
or
adc
in
add
jo
pushf
pushf
jae
add
xchg
sbbb
pop
lcall
dec
loopne
out
inc
inc
xchg
push
cmp
sub
icebp
jg
add
push
xchg
mov
fsts
dec
lds
cli
cmp
loop
sub
cmp
mov
lahf
and
push
push
jb
push
adc
xchg
inc
jb
and
mov
jmp
dec
sub
adc
pop
jecxz
mov
movlps
in
cmpsb
add
pusha
call
add
mov
cltd
xchg
subl
and
mov
outsl
xchg
test
mov
inc
sbb
cmp
scas
clc
ljmp
push
arpl
and
jge
mov
lods
fdivrs
and
ljmp
sub
insl
mov
lret
in
rorb
in
mov
adc
shll
inc
subb
dec
push
insb
cmp
aaa
sub
aaa
adc
mov
jbe
add
outsl
sbb
push
lock
bound
xor
sbbb
addr16
pop
mov
mov
inc
test
dec
push
xor
adc
clc
pop
cmp
cwtl
call
xor
ss
push
lds
out
jl
cmpsb
or
ljmp
out
cs
in
add
ret
jg
pop
push
or
addl
mov
in
subl
lcall
adc
add
roll
loopne
xorl
sbb
addl
cmp
pop
lods
mov
arpl
mov
cmp
clc
popa
xor
or
sbb
sub
incl
and
mov
fadd
fld
bound
mov
pop
bnd
sbb
pop
call
stos
push
out
movsb
insl
ret
ret
sub
cmpsl
dec
arpl
fstpl
sub
lods
enter
leave
int3
es
xorb
fidivl
mov
insb
mov
popf
imul
pop
mov
stos
aaa
lock
test
ljmp
mov
ficoml
mov
ljmp
sbb
cwtl
mov
repnz
cmp
movsb
cmp
and
jge
jb
pop
sbb
scas
test
xchg
stos
mov
ljmp
es
mov
sti
incb
jo
ljmp
and
fisubrs
pop
pop
sub
scas
pop
mov
clc
adc
decl
incb
pop
mov
lcall
add
adc
faddl
inc
xchg
jnp
faddp
jae
xchg
mov
mov
popa
mov
or
nop
filds
sbb
add
cmp
cmpb
aas
dec
nop
nop
decl
and
cmpsb
out
or
orl
and
sub
loopne
outsb
and
dec
pop
ja
mov
aaa
mov
outsl
mov
lcall
inc
fs
or
int3
ljmp
mov
xchg
lods
or
sub
sbb
test
mov
mov
lods
sub
popf
xor
daa
xor
fwait
and
add
fwait
lods
xor
mov
mov
mov
mov
cltd
outsb
nop
or
je
push
dec
xor
call
cmp
test
pushf
outsb
mov
stos
shll
sub
pushl
cwtl
mov
xor
pop
ret
dec
ss
push
inc
lret
dec
shr
or
scas
mov
add
repz
mov
or
xchg
addb
mov
ljmp
mov
imul
xchg
xor
push
push
je
decl
pushf
xchg
and
xor
enter
aam
push
popf
mov
in
push
stos
xor
cwtl
loop
cmp
je
mov
push
or
out
and
outsl
clc
push
fmulp
mov
repz
ffree
iret
mov
ret
imul
mov
sub
fistpl
pop
adc
sub
pop
jns
mov
lcall
hlt
prefetch
or
fwait
bound
xchg
and
inc
adc
cmp
cmpb
fisttps
sahf
add
adc
and
mov
sbb
dec
and
loop
push
adc
es
int3
jp
sbb
incl
int
jmp
je
stos
jb
dec
sub
inc
pushf
push
push
dec
insb
lods
push
sbb
adc
and
arpl
je
lret
mov
ljmp
ret
cmp
sub
and
mov
mov
icebp
push
ljmp
mov
pop
sti
dec
int
lahf
jns
pushl
push
dec
dec
dec
data16
imul
mov
add
jbe
push
ret
lods
out
push
mov
dec
imul
and
mov
jmp
fldt
sub
dec
xchg
push
mov
stos
cmp
out
leave
loope
incl
shll
outsl
js
cmp
cld
cmp
daa
xchg
pop
movsl
jbe
pop
xor
test
pop
neg
xchg
cs
aas
scas
clc
pusha
out
pusha
add
pop
and
fmuls
mov
out
add
cwtl
clc
incl
sbb
or
shl
ret
mov
push
inc
jmp
pop
adc
inc
clc
flds
xchg
call
or
inc
incl
nop
adc
outsb
je
fdiv
mov
xchg
movsb
lods
sub
inc
pop
jmp
fimull
mov
or
jne
fstps
xor
jp
rorl
cwtl
clc
mov
sqrtps
jg
cmc
jb
sub
xchg
dec
lock
pop
lea
xor
stos
leave
bound
mov
ss
mov
popf
sub
mov
dec
test
jmp
rolb
mov
movsb
stos
mov
jb
pop
or
pop
int
sub
movsl
stos
mov
scas
xchg
mov
pop
mov
in
pushf
sub
enter
cmp
lock
arpl
lret
dec
lods
jbe
dec
insl
jl
mov
adc
nop
jno
pushf
cmpsb
clc
call
push
cmp
pop
std
xor
adc
sbb
mov
mov
incl
add
cmp
pcmpgtb
jnp
out
lods
movb
ljmp
clc
lock
inc
push
cmpb
inc
jecxz
aaa
insl
out
push
popa
rorl
and
mov
popf
jno
cmpsb
sarl
dec
test
int3
loopne
sar
outsl
xor
bound
inc
jne
or
in
push
pop
mov
and
ret
jmp
out
mov
adc
movsl
jb
sar
filds
adc
xor
js
adc
sbb
jmp
nop
fiadds
inc
sub
jno
jmp
dec
push
xchg
into
inc
pop
adc
adc
cs
fsubl
lcall
inc
mov
enter
or
das
dec
daa
out
pop
cmp
aad
das
xchg
imul
and
mov
dec
push
inc
push
cmc
movsl
push
xchg
test
aam
aam
inc
push
aad
dec
test
cli
call
test
adcb
xor
mov
jmp
pushf
jo
dec
mov
shlb
and
push
sbb
inc
loope
dec
jl
sub
mov
fmuls
int
decl
xchg
popf
in
push
cltd
incb
pushl
andl
ficompl
sbb
stc
push
out
decb
test
mov
adc
lods
push
xor
movsb
and
adc
sbb
out
incl
dec
xchg
and
dec
mov
repz
adc
enter
xor
mov
and
and
adc
aad
test
push
push
jle
push
and
jge
mov
xor
pop
repz
mov
adc
ljmp
mov
and
jmp
or
xchg
movsl
mov
sub
adcb
pop
leave
add
adcl
sbb
pop
cmpsl
mov
icebp
inc
loopne
inc
push
jg
dec
push
push
cwtl
rclb
loope
pop
inc
jo
loopne
call
scas
mov
mov
js
stos
inc
push
mov
call
mov
jmp
fadd
and
rorl
sub
ds
cwtl
les
call
clc
cmp
xchg
xor
adcl
adc
jmp
mov
sub
in
das
cltd
cli
inc
hlt
xlat
or
add
sbb
fwait
or
addb
sbb
insb
xchg
ljmp
rol
sarb
js
or
mov
incl
fsubrs
push
lea
test
lods
adcb
jmp
jmp
arpl
and
je
jp
cmp
adcb
sbb
xchg
jo
xchg
and
xchg
cmp
aad
and
adc
shlb
pop
push
jg
sub
mov
imul
mov
cwtl
ret
mov
les
cmp
or
or
xor
fldcw
mov
ljmp
clc
cmp
outsb
push
enter
pop
fs
jne
fildll
mov
sbb
enter
dec
ds
stos
int3
scas
add
mov
movsl
or
sub
incl
sbb
mov
push
jb
call
pop
mov
push
cmp
je
dec
call
sar
popf
xchg
lods
cs
mov
sahf
jecxz
jnp
roll
addb
mov
fs
out
jae
les
hlt
std
into
push
addr16
dec
out
test
adc
out
test
sub
jnp
cli
mov
mov
roll
lea
into
dec
scas
icebp
or
dec
repz
test
decl
pushf
je
add
fistl
sub
or
incl
loop
inc
loope
jno
cmpb
sbb
repz
push
pop
mov
ret
push
lret
mov
rolb
cmp
rolb
imul
test
xchg
mov
in
xchg
rcl
outsl
fcoml
cmpsb
jmp
mov
fisubrs
pop
js
dec
dec
clc
mov
xor
jne
scas
mov
lods
cwtl
dec
test
decl
out
inc
mov
fcompl
fucomp
inc
mov
outsl
mov
jnp
xchg
out
xlat
jmp
fimull
popf
aad
mov
jb
or
jmp
xchg
clc
inc
and
scas
xlat
mov
aas
mov
bound
adc
jnp
cmp
jp
cmpsb
jnp
lods
arpl
sbb
cmp
jmp
jp
test
push
std
div
add
fwait
sub
popa
and
and
das
scas
cltd
xor
push
incl
adc
xchg
push
add
aas
stos
cmp
cmpl
mov
sub
sub
dec
call
ljmp
mov
push
enter
call
frstor
or
sub
es
int
stos
pusha
cli
imul
test
mov
pop
hlt
mov
rclb
add
push
mov
lds
loope
sub
cmp
movsb
cld
ljmp
mov
sub
in
mov
jns
adc
push
and
jg
add
pop
push
mov
sbb
push
lods
and
fcomps
mov
ficoml
adc
mov
out
add
mov
clc
jmp
push
sub
add
and
lock
ljmp
cli
test
mov
stc
sbb
inc
push
push
cs
fcmovnb
fistps
andb
add
mov
mov
pop
stos
sub
adc
jg
pop
mov
mov
and
push
dec
stc
stos
push
test
movsb
mov
rolb
cmp
enter
mov
mov
data16
mov
rolb
push
addb
mov
clc
pop
inc
sbb
mov
sbb
ret
xor
lcall
adc
scas
mov
xchg
sti
mov
rorb
rclb
lcall
sub
lret
sbb
out
xor
imul
decl
loope
inc
lcall
mov
fstl
inc
and
or
push
xor
cmp
hlt
lret
movsl
push
mov
cmp
out
cmpb
xchg
jp
xlat
in
decl
bound
test
inc
add
xor
sbb
mov
in
mov
cld
incl
pusha
inc
adc
and
xchg
call
jp
mov
inc
xchg
pop
mov
shrl
pop
dec
inc
lcall
adc
pop
add
cltd
adc
sti
and
subl
mov
int3
mov
fwait
pop
lock
decl
in
mov
mov
sbb
mov
repnz
xor
lock
sub
or
mov
fcomps
mov
subb
adc
inc
add
popa
dec
ljmp
xchg
xor
dec
dec
loop
mov
mov
sbb
sub
jmp
mov
and
inc
push
cltd
mov
or
out
sub
adc
repnz
decl
push
aas
push
sub
mov
xchg
cmpsl
lods
adc
mov
or
rorb
mov
mov
in
mov
adc
add
add
inc
cmp
daa
push
mov
or
loopne
adc
push
lock
jg
divl
xchg
xchg
adc
adc
mov
push
cmp
fidivrl
aam
mov
mov
rcr
int3
outsl
clc
call
aaa
mov
lret
xor
jecxz
push
jle
push
shrb
xor
rolb
cmp
adc
dec
xor
sbb
cld
mov
loop
xor
mov
mov
test
mov
mov
cmp
dec
cmp
popf
inc
xchg
dec
xlat
call
pushl
lret
and
lods
xchg
out
push
mov
in
add
movsl
jecxz
sub
and
xor
and
in
push
cmp
sbb
insl
cmp
adc
cmpsb
ret
jno
ljmp
data16
cli
iret
adcl
ja
mov
push
and
inc
movsl
cmpl
xor
dec
jecxz
adc
rolb
ljmp
orb
add
fstps
dec
adc
jmp
stos
sbb
mov
popa
rcr
dec
ss
repz
test
dec
dec
jno
ljmp
sub
xchg
aas
clc
cmp
add
mov
mov
loop
adcl
or
imul
dec
pop
mov
inc
repnz
add
pop
xor
or
mov
sbb
dec
mov
gs
pop
jae
dec
mov
pop
mov
aaa
pop
fadd
cmp
lock
lahf
in
in
ljmp
sub
test
jp
popf
jo
mov
sub
call
xor
and
sbb
lods
or
dec
push
dec
xchg
fcmovnbe
pushf
gs
push
es
incl
pop
push
or
mov
lret
adc
or
aam
ljmp
push
push
pop
fisubrl
add
fidivl
cltd
push
mov
call
popa
les
or
bound
add
push
add
xor
sbb
call
test
mov
outsl
dec
push
imul
aam
repnz
jg
decl
sbb
je
sub
rcrb
jns
dec
cmpsb
dec
add
incl
ret
mov
pop
mov
int3
adc
dec
cmpsl
jecxz
iret
loope
cmpsb
xor
fcom
movsb
xchg
fs
popf
xor
movsb
xchg
out
clc
decl
add
jmp
mov
mov
dec
in
and
rolb
mov
sahf
mov
and
jns
inc
xor
lret
fistps
call
push
rclb
in
mov
mov
cltd
push
and
pushf
jns
fs
pop
pop
aad
cmp
add
pushl
stos
lods
mov
dec
inc
mov
inc
mov
pop
and
scas
sbb
popa
insl
fildl
add
movsb
sbb
xchg
xchg
and
push
shrl
fdivr
jg
or
cmpsb
icebp
fistpl
inc
lock
mov
xchg
dec
or
lcall
ficomps
sbb
aaa
stc
dec
or
xor
mov
repnz
push
or
call
loopne
add
test
cmp
stc
push
jb
pushl
fdivrl
mov
mov
sbb
or
cmpsl
insb
dec
sub
mov
adc
jg
test
aam
jecxz
push
inc
cmp
jb
rcrb
call
lcall
lcall
pop
xchg
pop
and
imul
aad
leave
xor
add
jmp
movsl
pop
hlt
sub
insl
arpl
pop
pop
stc
mov
and
lcall
andb
lret
pop
xchg
aad
int3
cmp
inc
decl
int
push
mov
jg
addb
mov
repz
cs
sbb
push
dec
xchg
aaa
pop
sub
ljmp
or
mov
xchg
pop
push
push
mov
cmp
and
inc
pop
pushf
xchg
mov
add
lds
test
add
mov
lods
rorb
mov
xlat
cmp
mov
sbb
sbb
fmuls
xchg
mov
jmp
jne
or
pusha
adcb
mov
aas
jmp
ret
xchg
lds
push
ljmp
adc
repz
push
dec
inc
jp
mov
stos
shll
cwtl
stos
pop
cwtl
inc
insl
sbb
out
cwtl
sub
and
js
popa
into
mov
or
push
xor
jle
xor
sub
push
addr16
xor
cmp
push
push
xchg
lret
pop
pop
decl
idivl
pop
sbb
sub
jmp
add
inc
test
pusha
add
daa
add
mov
sbb
xchg
dec
jle
cltd
sahf
cmp
sahf
mov
cmp
pop
rolb
in
push
pushl
push
push
xorl
rcr
leave
loopne
in
cld
adc
imul
push
sar
mov
cmp
cmp
sbb
sbb
mov
pushl
clc
adcl
push
stos
xor
inc
mov
scas
add
andl
nop
or
and
or
jg
fisubl
inc
movsl
sub
lret
jns
lods
adc
inc
cltd
push
push
rclb
jmp
fsub
cmp
mov
mov
mov
sbb
inc
xor
sub
decl
aad
in
stc
in
mov
xlat
aam
movsl
jmp
outsb
das
in
mull
notl
movb
cwtl
jae
loope
or
mov
test
pop
in
imul
and
call
adc
xor
sti
mov
out
add
mov
pop
in
repz
mov
dec
std
ljmp
iret
arpl
dec
mov
insl
push
or
rcll
mov
imul
xor
sbb
out
inc
cmp
or
xchg
and
aaa
xchg
clc
push
ret
fs
pop
mov
test
cwtl
xor
dec
cltd
decl
imul
cmp
lods
leave
int3
in
lret
leave
int
ret
fisttps
cli
adc
test
push
fdivrl
sbb
push
pop
and
adc
ljmp
dec
test
pop
outsl
xchg
inc
mov
enter
fwait
pop
jbe
lret
int
adc
mull
decl
pop
lock
fidivl
xor
sahf
and
lret
and
jmp
imul
decl
cmp
aas
xlat
jp
ja
add
nop
mov
test
ljmp
cmp
dec
adc
dec
inc
scas
xchg
push
flds
fildll
stos
jle
adc
lcall
adc
mov
or
and
mov
repnz
inc
or
mov
testl
gs
mov
mov
jae
add
cmp
mov
push
mov
jbe
push
mov
fdivrs
aaa
mov
shll
mov
insb
mov
je
inc
arpl
lea
popf
pop
mov
mov
decl
pop
and
xchg
mov
repnz
lcall
les
cmc
mov
dec
cmp
fsubs
and
in
adcb
les
jae
mov
cmp
sub
cmp
sub
out
das
inc
pop
mov
xlat
loop
decl
push
add
push
xchg
sbb
jmp
call
inc
dec
or
movsb
dec
push
cmpsl
sti
daa
push
push
or
ljmp
gs
mov
shl
push
mov
xor
out
cld
incl
arpl
stos
lret
popf
stos
cmp
cmp
sbb
icebp
out
movsb
test
stos
sbb
and
nop
cmp
fwait
incb
mov
dec
inc
jl
mov
outsl
xlat
mov
jae
dec
clc
inc
and
cmc
jmp
lcall
ljmp
sbb
lcall
pop
xor
fxch
mov
js
push
fsubs
jns
push
lret
fstpt
jae
xlat
in
jmp
mov
lods
nop
sub
lcall
dec
std
aam
clc
push
mov
xchg
push
stc
xchg
fsubrp
rorb
jle
push
ljmp
sahf
pop
pushf
mov
cmp
div
dec
inc
xchg
jb
outsl
push
data16
dec
jp
add
mov
stos
daa
or
call
cmp
ljmp
push
pop
adc
and
and
cli
roll
or
jmp
adc
push
pop
push
and
inc
or
dec
incl
out
test
jns
sbb
mov
push
push
jno
dec
shrl
add
mov
aas
add
xchg
ret
sbb
cmp
xor
popf
orb
push
push
push
cmp
in
push
das
sar
enter
ss
mov
pop
repnz
adc
in
nop
in
xchg
and
ljmp
addl
dec
jb
or
je
shll
cmp
rclb
lcall
dec
xchg
mov
xor
call
ljmp
mov
push
add
mov
cs
nop
insb
inc
sub
call
stos
sti
xchg
outsb
pop
mov
or
xchg
fisubrl
lea
jb
decl
dec
push
xor
fsub
int3
xor
mov
fmul
sub
imul
jmp
mov
aaa
jg
mov
cmp
mov
aas
scas
andl
push
lret
xchg
lahf
adc
adc
sahf
sbb
pop
fdivrl
shll
mov
icebp
lcall
cmp
daa
mov
sti
push
lock
adc
out
and
andb
stc
pop
addl
push
pop
add
adc
add
fildll
js
mov
or
xchg
pop
bound
push
gs
pop
outsb
mov
clc
push
pop
jns
adc
dec
push
test
dec
lea
adc
xchg
xchg
decl
pop
adc
pop
sbb
mov
jg
push
popa
push
movsl
jbe
dec
xchg
push
movb
popa
xchg
movsl
push
cwtl
xchg
pop
cmp
popa
ljmp
mov
cmpsl
push
cmp
int
push
mov
cltd
fsin
jg
bound
inc
push
pop
or
mov
or
popa
adc
jmp
shll
jne
pop
inc
test
lcall
xchg
mov
push
push
sub
popf
cmpsb
cltd
pop
pop
es
cwtl
push
test
push
add
orb
lcall
scas
sbb
daa
pop
gs
xchg
imul
inc
adc
in
jo
push
pushf
or
stos
pushf
jae
inc
push
or
rorb
andb
in
ja
fadd
jo
jp
mov
cld
pop
push
or
and
pusha
jbe
fstpl
adc
mov
push
mov
push
sub
mov
add
xchg
fadd
popa
sbb
cmp
mov
pop
pushf
icebp
lds
sub
ja
push
fstps
popl
mov
cmpsl
lret
jge
das
adc
cltd
fs
or
mov
rol
or
shl
ret
stos
dec
jno
test
outsl
or
push
test
and
dec
fs
dec
sbb
scas
test
mov
cltd
lret
mov
decl
mov
inc
ss
adcl
xchg
testb
bound
cld
mov
cmpsl
or
dec
cltd
lea
ljmp
stos
addr16
sub
lds
shl
mov
mov
imul
call
xchg
fwait
test
insb
sbb
pusha
cmp
ljmp
sub
movsb
mov
clc
mov
fistpll
into
mov
cmp
outsb
jns
pop
sti
jl
nop
inc
add
mov
mov
js
adc
enter
aaa
cld
add
popa
jo
pop
into
add
and
dec
pop
inc
mov
and
cld
lcall
cmp
movsb
jns
push
imul
sub
inc
sub
decl
enter
adc
dec
jne
add
out
jmp
movsl
jecxz
jmp
add
push
or
out
or
test
adc
inc
and
shlb
lret
js
clc
ljmp
push
fdivr
int3
and
fcomi
rol
pop
mov
pop
or
mov
les
outsl
pop
into
jmp
xlat
lock
lods
inc
jecxz
leave
pop
mov
je
lcall
loop
scas
cwtl
xor
push
mov
jl
ss
push
call
in
cmp
mov
inc
cmp
lcall
jno
into
cmp
inc
enter
pop
test
movsb
ja
xor
neg
pop
jbe
xor
cmc
jg
cmp
stos
add
or
nop
rcll
jl
popa
pop
ret
ss
adc
push
xchg
or
sti
cwtl
mov
ds
mov
xor
cmp
lahf
jp
xchg
popf
lock
mov
xor
movsl
test
inc
sbb
jo
xor
and
jmp
xchg
imul
sub
pop
pusha
push
push
lock
push
icebp
xor
sbb
stos
and
fs
scas
ret
sub
int
push
mov
and
add
sub
inc
insb
std
push
lds
push
adc
cmpsb
add
adc
or
mov
enter
dec
xor
add
cltd
cmpsb
jae
shlb
sar
push
jmp
xchg
rorl
jmp
and
aaa
std
scas
mov
mov
dec
xchg
leave
xchg
and
rcrl
lcall
add
xor
test
pop
xchg
fsubl
scas
js
ljmp
and
in
je
add
jne
push
mov
pushf
xor
outsl
push
cmc
xchg
faddl
sub
add
dec
fildll
pop
adc
sub
arpl
adc
ljmp
or
and
sbb
cli
xchg
lods
lds
push
hlt
pushl
sahf
cmp
movsl
sub
xchg
and
and
pop
sbb
or
pushf
mov
lret
lcall
movb
dec
or
sahf
lock
push
push
rol
shrl
jg
je
cmp
outsl
jnp
inc
and
xchg
mov
aam
add
lcall
sbb
jle
push
imul
and
es
pop
mov
adc
sub
pop
sbb
push
pop
pop
mov
addb
mov
xchg
inc
addl
xchg
lcall
jl
inc
pop
add
lds
dec
inc
xchg
in
jno
shrb
push
add
xor
dec
mov
fisubrs
out
mov
aad
push
sar
call
data16
jnp
cmp
mov
sahf
mov
cmc
addr16
mov
or
cli
call
cmp
sub
and
mov
xchg
scas
incl
subb
push
mov
enter
in
mov
inc
xchg
and
inc
inc
sub
outsb
repz
pushl
add
and
mov
sub
xor
inc
pop
push
outsl
cmp
roll
call
addl
ss
imul
addb
imul
fistpll
xchg
nop
pop
push
push
dec
rcl
jge
lea
lcall
test
mov
call
pop
cltd
aaa
xor
xchg
jbe
mov
leave
incl
cli
fwait
bound
dec
lock
test
das
add
lret
loop
jmp
or
pop
daa
mov
cmpsl
stos
popf
fadd
jg
mov
mov
icebp
inc
movsb
and
stos
mov
xor
cld
xorb
add
adc
sub
test
or
push
imul
mov
sbb
dec
movsb
sub
ja
lcall
dec
insl
xor
sub
xchg
out
or
out
and
push
fcmovb
gs
adc
jns
inc
je
mov
dec
adc
pusha
sbbb
inc
and
pushl
or
adc
or
jo
decl
pop
cltd
push
push
outsb
adc
cmp
mov
sub
add
aaa
add
clc
ja
lcall
push
pop
lea
jne
sahf
jmp
mov
call
pop
adc
mov
fwait
dec
push
push
push
push
mov
push
pop
das
aad
pop
cmp
decl
pop
add
xor
imul
fisttpl
and
sub
inc
add
test
jg
xor
and
cmp
jg
mov
decl
xchg
lret
and
sahf
fcoml
scas
push
scas
fstpl
push
test
or
sub
test
xchg
dec
rorb
cmc
dec
adc
inc
pop
mov
lock
or
into
inc
inc
xlat
sbb
adc
aas
xchg
in
pushl
sbb
xor
call
dec
insb
xor
pop
jae
inc
mov
sbbl
cmp
iret
cmp
jmp
or
out
cmpsl
push
adc
sbb
lcall
adc
in
add
fmuls
in
inc
andl
pop
fiaddl
xor
loope
movsl
mov
jne
push
aas
out
fmulp
rcl
lods
jg
call
pop
cmp
jae
or
sub
ret
in
fnsave
sbb
imul
incl
rcrl
sbb
xlat
push
out
mov
lods
push
or
push
adc
mov
movsl
adc
cld
leave
cmpsl
or
jno
push
jo
xchg
jg
xchg
mov
fimull
push
inc
fs
push
js
inc
jnp
nop
jmp
js
sahf
mov
fwait
mov
xchg
jecxz
movq
aam
in
pop
sbb
addl
mov
js
dec
jne
xchg
adc
adc
inc
mulb
jg
pop
sub
sbb
jmp
pop
shll
mov
lea
pop
hlt
call
lea
xorb
cmp
fdivrl
lahf
push
loopne
xchg
test
mov
dec
or
rcll
and
xchg
push
add
mov
push
pushf
fnsetpm(287
push
mov
add
fcompl
jbe
sar
lret
or
lea
inc
fidivs
xchg
adc
pop
xchg
mov
add
xor
in
add
inc
outsb
add
xor
pop
push
pushf
movsb
jno
dec
insb
arpl
push
dec
push
outsl
fst
inc
or
or
in
pop
mov
jae
or
rcl
cmp
jmp
pop
push
pop
cwtl
dec
pop
xor
add
movsl
movsl
mov
movsb
pushf
test
into
dec
sbb
call
xchg
adc
sbbl
inc
jp
jle
xor
jno
fldcw
fmul
sbb
or
add
fdivr
call
cs
rcrb
adc
stc
dec
and
mov
in
insb
shl
pushf
add
pusha
fwait
mov
add
popa
sahf
fimull
xor
test
xchg
iret
push
icebp
push
pop
icebp
add
jmp
add
cld
xchg
push
dec
inc
pop
jne
push
xchg
les
dec
mov
xchg
adc
jb
add
incb
push
push
push
rclb
sbb
sbb
adc
push
or
push
mov
push
and
or
fcoml
scas
clc
push
add
fbstp
sbbb
into
aaa
ret
pop
dec
adcb
clc
subl
in
outsl
jmp
push
lock
inc
sbb
mov
and
scas
lods
xchg
add
ficoml
sahf
andnps
in
lcall
cmp
punpckhbw
xlat
jl
add
popf
gs
sbb
insl
loop
outsb
scas
inc
outsb
ljmp
out
mov
add
addr16
aad
ss
push
addr16
sar
pop
addl
outsl
dec
out
or
push
jae
cmpsl
xor
inc
mov
xchg
xor
sbb
outsb
into
inc
mov
or
jmp
sub
inc
push
fiadds
sahf
mov
dec
addl
scas
test
sub
adc
popa
loop
sbb
add
ljmp
nop
shrb
rorl
testl
mov
jecxz
xchg
enter
sbb
xchg
jb
lret
adc
loopne
ljmp
insl
inc
mov
inc
push
and
dec
or
lds
decl
or
dec
add
outsl
clc
mov
shrl
jae
inc
or
out
clc
inc
or
sarl
jl
xchg
mov
insl
add
xor
into
adc
mov
push
imul
add
adc
sar
incl
sbb
pop
adc
into
jge
gs
sar
sbbl
pusha
lcall
shlb
sbb
scas
xlat
push
pop
sbb
loop
and
and
ljmp
sub
xor
cmp
mov
mov
stos
movsl
sub
movsb
adc
das
and
ljmp
cmpsl
bound
ljmp
xchg
inc
rclb
out
in
ljmp
xor
adc
add
xchg
jl
mov
test
push
dec
sbb
adc
movsl
and
mov
cmp
inc
dec
and
hlt
mov
mov
sub
sbb
fiadds
mov
mov
or
mov
loopne
mov
test
sbb
mov
jne
jecxz
scas
push
shlb
sar
test
push
nop
std
decl
insb
xor
pop
cmp
xchg
stos
loop
sub
test
add
cmp
daa
add
rclb
add
mov
add
sub
xor
insl
test
add
rcrl
mov
imul
sbbl
jno
xchg
add
arpl
out
pop
adc
xchg
test
rorb
sarl
ds
dec
stos
roll
jmp
stos
aad
sub
push
inc
sub
push
push
orl
sbb
test
call
jl
push
inc
pop
xor
sub
jl
add
and
jmp
adc
decl
adc
pop
fdivrs
movsb
pop
adc
pop
jmp
mov
push
jbe
pop
adc
adcl
cld
pushl
dec
adc
xorb
jg
xor
sub
gs
sbbb
int
xchg
mov
xchg
jmp
stos
sbb
lcall
lret
jle
mov
test
mov
lods
xlat
cmpsl
hlt
iret
or
mov
add
or
inc
addr16
inc
pop
fwait
aam
xor
int
bound
loopne
pshufw
std
pop
pusha
dec
sahf
xchg
mov
pop
test
rcrb
imul
and
negl
jnp
and
inc
mov
out
std
loop
std
jb
fsub
out
rcll
fadds
movsb
mov
insl
or
call
cmpsb
lock
mov
jmp
clc
inc
add
in
pop
dec
adc
fidivrl
cs
mov
lret
mov
sub
and
jle
ja
dec
sbb
imul
jmp
cmp
xorl
sbbl
sahf
sbb
aam
test
cld
ja
or
call
push
roll
icebp
add
sub
inc
leave
scas
cmp
movsb
lea
nop
xchg
aas
pop
fcomi
add
flds
mov
shr
mov
testl
in
aaa
rcl
incl
out
sahf
mov
lcall
sar
push
in
in
sbb
sub
arpl
lcall
mov
sub
mov
xchg
popf
inc
pop
lock
adcb
jb
dec
repnz
ljmp
mov
lcall
cmp
jno
inc
mov
add
fadds
inc
push
decl
stos
inc
cmp
sub
sbb
add
gs
push
xor
sahf
and
orl
lret
pushl
push
mov
dec
mov
scas
mov
cs
mov
push
cli
mov
lods
lcall
and
dec
adc
jno
inc
dec
ljmp
push
lock
lods
pop
cmp
sar
bound
pop
jge
in
stos
fs
pushl
ss
icebp
shrl
mov
fdivrl
jg
xor
and
decl
pushf
scas
push
mov
and
and
mov
add
call
mov
sub
sbb
xor
sbb
fwait
jo
dec
xchg
xor
jl
dec
incl
dec
xor
inc
ja
dec
pop
leave
inc
test
push
outsl
xor
hlt
dec
pop
jb
mov
push
out
aaa
bnd
push
mov
or
js
jb
mov
jbe
jno
ficoml
adc
cwtl
scas
mov
sub
sbb
call
add
lock
sub
cwtl
pop
inc
push
and
or
add
call
adc
cmp
cltd
mov
inc
divl
nop
jbe
data16
xor
enter
xchg
test
nop
jmp
mov
movsl
pop
hlt
or
outsb
cmp
lods
loope
call
js
popf
pushf
jbe
xchg
mov
pop
mov
aaa
cld
add
jno
fstpl
jno
lret
ljmp
arpl
push
sbb
jae
call
fidivl
decl
jb
movsl
inc
push
jo
in
aam
outsb
xor
xor
pop
and
inc
ja
inc
testl
ljmp
jne
je
jnp
ja
push
sbb
or
pusha
gs
sub
mov
push
icebp
mov
sarb
insl
fnstenv
movsb
mov
or
mov
add
or
icebp
call
and
or
push
pop
inc
pop
xchg
jnp
out
push
lods
fs
cwtl
addb
cmp
test
xchg
les
lock
int3
pop
enter
scas
fdiv
call
divb
xchg
or
mov
mov
subl
int3
xchg
xlat
inc
aaa
jbe
iret
outsb
fldenv
pop
push
dec
pushf
dec
cmp
imul
roll
test
repz
mov
lea
mov
lcall
xor
jmp
cmp
lcall
sub
js
xor
neg
dec
sbb
add
dec
test
sub
rorl
mov
stos
dec
rcrb
lret
jns
adc
cmp
mov
pushf
or
fistpll
popf
sbb
add
out
filds
adcl
movsb
mov
add
mov
xchg
call
mov
add
pushf
movl
inc
stos
stos
cli
or
add
aaa
mov
outsb
sarb
ljmp
lea
aaa
add
sbb
jg
or
test
pop
arpl
xor
jno
mov
adc
cmp
icebp
incl
fs
push
push
mov
mov
cmp
push
inc
dec
pop
mov
test
mov
in
fbstp
mov
cwtl
js
push
jbe
push
pop
arpl
loop
push
stos
movsl
mov
call
pop
call
jle
ss
adc
into
repz
sbb
dec
sar
mov
lret
dec
xchg
xchg
inc
pop
push
push
jno
inc
adc
pop
pusha
add
dec
clc
inc
lret
xchg
lret
insl
dec
in
div
xchg
push
std
jmp
jns
or
pop
mov
mov
cmp
inc
into
jmp
into
pop
addb
iret
add
or
rolb
std
iret
out
cld
shl
mov
imul
aas
jge
pushl
int3
add
pop
jge
and
mov
xlat
mov
lods
lahf
add
adcb
aad
add
stos
jge
sahf
mov
mov
push
mov
rorl
jp
jne
and
daa
popa
inc
mov
mov
mov
or
es
inc
icebp
dec
cmp
xorb
mov
cmp
sahf
push
mov
out
xchg
popa
movb
sub
adc
movsl
inc
pop
lcall
cmp
pop
es
xor
ljmp
or
call
pop
loopne
cmpsb
adc
xchg
lret
ljmp
int
cmpsl
jbe
xchg
inc
arpl
mov
jmp
xor
lcall
gs
orb
mov
lock
mov
pop
std
neg
add
inc
es
add
movsb
add
std
rcll
jge
inc
mov
sar
cmp
jmp
inc
int3
dec
xor
rcll
or
add
add
fcoms
mov
push
xchg
lods
jo
mov
sbb
aam
decl
and
rclb
data16
push
insb
fidivrl
dec
iret
cmp
jle
lods
mov
lcall
sbb
bound
movsl
inc
lea
aad
in
cmp
push
pop
adc
stos
xchg
ror
pop
roll
incb
sub
mov
mov
inc
push
sub
fwait
and
pop
and
decl
inc
or
pop
lods
pop
fildll
lret
icebp
mov
xor
aaa
std
decl
dec
jae
jb
or
cltd
mov
cmpsl
pop
pop
test
cmpb
inc
int3
cltd
dec
imul
decl
pusha
mov
ss
add
int3
and
in
jno
jno
jecxz
xchg
sbb
int
icebp
mov
sbb
outsl
fcompl
clc
aam
jl
sbb
xchg
out
out
xorb
jecxz
popf
push
ja
mov
fildl
jg
cli
and
loopne
xchg
fwait
ljmp
repz
dec
mov
push
lea
icebp
test
push
mov
add
lret
add
pushf
cmp
cmp
lock
adc
push
fs
stc
xchg
xchg
out
pushl
movb
and
or
mov
imul
inc
addl
cltd
insb
ror
mov
cltd
xor
insb
mov
or
lret
ljmp
or
mov
leave
and
or
mov
scas
clc
mov
pushl
test
jmp
in
test
and
cmpsb
fwait
push
sub
ret
adc
sbb
js
ljmp
inc
xchg
cli
mov
sbb
scas
mov
jns
lods
shrl
jmp
mov
fstl
mov
or
inc
std
je
mov
mov
cmp
inc
mov
add
sbb
xor
mov
adc
jg
arpl
sbbl
clc
push
or
dec
xor
aas
loopne
fsubrs
aas
insb
jne
pinsrw
push
dec
mov
ret
in
mov
pop
sbb
insb
mov
lea
xor
cmp
or
call
ja
sti
dec
fcoml
loope
rol
ja
dec
mov
add
mov
pcmpeqw
mov
pop
shrl
mov
loopne
cltd
sarl
jno
lret
fs
mov
out
fisttpl
enter
mov
jg
fldenv
sahf
dec
push
dec
sub
dec
loop
call
inc
dec
cs
mov
lret
cmp
or
cmp
mov
movsb
mov
push
in
lods
inc
pop
add
pop
fneni(8087
mov
int3
or
cmpsl
mov
shll
inc
cmpsl
inc
sbb
jg
movsb
sbb
lcall
adc
mov
dec
stos
sub
repnz
fisubs
jno
negb
pop
xor
cmp
mov
adcb
dec
mov
xchg
int
mov
push
roll
mov
shrl
lea
loopne
sub
pusha
add
xlat
fildl
jge
call
mov
in
xchg
mov
out
jns
mull
add
loope
sbb
icebp
jl
jns
pop
pop
testl
fcomi
sbb
ja
pop
enter
pop
cmp
test
add
push
mov
mov
outsl
lcall
lea
in
and
sub
push
lock
incl
or
push
xor
and
pop
cli
jg
pop
adc
enter
nop
adc
popa
push
cmp
decl
ret
xor
ret
clc
test
xor
pushl
mov
nop
push
cmp
dec
outsl
push
cmpsl
cltd
mov
dec
lods
jp
test
pop
jmp
and
jl
push
sbb
lea
icebp
call
mov
mov
dec
lret
stos
mov
push
cwtl
ret
xchg
and
pusha
dec
jno
scas
and
decl
mov
mov
mov
mov
sbb
out
pushl
ja
imul
sub
in
iret
cmp
js
mov
lahf
loope
sbb
ljmp
pop
int3
decl
testb
nop
shrl
outsb
andl
cld
inc
mov
lock
hlt
adc
insb
push
lcall
enter
arpl
jmp
ret
sub
mov
out
push
sti
pop
fildll
jg
rorb
or
ljmp
or
iret
leave
mov
addr16
cmp
int3
and
inc
lret
cmpsb
xchg
xchg
pmulhw
ficoml
adc
orb
xor
pop
inc
test
inc
lahf
les
mov
nop
sbb
adc
dec
shll
rorl
icebp
call
ret
aam
scas
or
add
std
call
mov
jmp
pop
xchg
xchg
sbb
cmpb
pop
fidivrs
mov
mov
sub
adc
add
mov
inc
xchg
cmp
cltd
pushf
push
les
xor
and
testb
movb
test
sbb
pop
std
int
outsb
imul
ljmp
sar
mov
mov
xchg
cltd
inc
mov
lock
fadds
xchg
lock
outsb
jle
xor
dec
cltd
repz
dec
xchg
xor
fs
and
adc
jg
cli
mov
out
xchg
cmp
jb
jnp
pop
xor
outsl
pushf
fistl
bound
cli
jmp
popf
fmull
mov
push
cmp
test
add
xor
ss
pop
jp
sar
jmp
fs
loope
int
xchg
cmp
mov
fs
inc
ret
inc
inc
sub
add
mov
add
and
pushf
xchg
inc
mov
ja
and
pop
stc
xchg
xchg
dec
lods
outsl
xlat
xchg
mov
mov
push
add
decl
pop
mov
nop
lock
jecxz
jmp
mov
sub
ss
add
add
pop
icebp
sub
call
aaa
push
icebp
jno
xchg
pop
nop
jg
or
and
adc
push
sbb
addb
decl
inc
cmp
outsl
add
mov
fbstp
mov
jg
lea
jbe
cmp
xor
and
decl
mov
iret
repz
int
dec
sbb
cbtw
shrl
popa
sub
mov
mov
push
add
xor
jmp
mov
les
xchg
gs
scas
adc
sub
add
sub
inc
stc
mov
insl
xor
das
mov
in
es
mov
sbb
push
fcomps
enter
or
loopne
or
addb
xor
jmp
test
sbb
mov
int
xchg
xchg
inc
nop
sub
adc
aam
or
xchg
imul
adc
ss
mov
mov
ljmp
call
jmp
fldenv
std
xchg
loopne
nop
loope
jns
dec
push
mov
flds
fcomp
sub
add
adc
lock
pop
sub
xorl
aad
ret
out
in
shlb
xchg
gs
aas
xor
loop
pop
pushl
dec
lods
scas
dec
lea
push
fsts
jne
pop
and
mov
call
cwtl
inc
leave
mov
cmc
fs
xchg
cmc
aaa
repnz
aas
push
or
mov
mov
out
inc
fidivs
sti
popf
dec
inc
lods
sub
lcall
dec
add
inc
pop
add
cmp
push
test
lret
mov
aaa
push
shlb
shll
in
fucomp
inc
pusha
mov
ljmp
mov
sbb
add
add
sub
ljmp
hlt
nop
popa
or
mov
push
jb
pop
es
mov
xor
and
aad
push
popa
mov
and
sti
fsubs
inc
mov
jmp
pushl
dec
aam
adc
mov
decl
jge
movsb
push
rcll
imul
dec
clc
push
jmp
mov
subb
call
mov
cmp
ret
lods
adc
or
ret
cmpb
sub
iret
mov
mov
lahf
ljmp
or
and
data16
push
rcl
cmp
outsb
pop
leave
mov
jb
xor
jb
div
pop
fs
push
jae
arpl
hlt
push
cli
es
xchg
lcall
jmp
xchg
std
subb
std
fcomip
decl
stos
cs
pushf
out
jg
cmpsb
adc
jge
push
out
sub
call
insb
pusha
iret
and
cmpsb
add
test
pop
clc
add
je
add
outsl
jnp
or
das
mov
add
shll
mov
or
push
insb
sahf
or
movsb
add
lock
les
or
inc
dec
cli
outsb
mov
inc
loope
dec
or
dec
xlat
adc
icebp
sub
xor
je
mov
sbb
mov
outsl
imul
sub
mov
out
add
mov
outsb
ljmp
mov
gs
fstpl
dec
fnsave
fisttpll
divl
and
pushl
das
mov
clc
ds
mov
jb
gs
lock
ds
push
mov
pop
rclb
pushl
loope
mov
cmp
xor
cmp
subl
jbe
out
pop
mov
sbb
jmp
pusha
mov
mul
mov
add
fistpll
loopne
xchg
mov
cmp
dec
adc
sub
imul
stos
and
jge
sahf
lcall
lock
pop
out
add
jle
insb
popa
in
int3
lret
jle
push
pop
ljmp
test
test
imul
or
lcall
das
add
cmp
out
sub
es
filds
rclb
sub
sub
mov
add
decl
dec
and
inc
jb
dec
fs
or
mov
inc
repz
dec
or
movsl
call
rcl
movsb
push
add
inc
cmc
call
or
daa
fdivrp
cmp
cli
inc
push
cwtl
ret
xor
mov
or
fbld
stos
and
jg
sub
outsb
jb
cmpsl
iret
stos
jle
lds
and
incl
adc
icebp
daa
jle
adc
adc
push
push
sar
das
xor
sub
xor
out
xor
cmp
bound
push
jge
pop
or
mov
mov
xor
pop
call
sub
stos
dec
into
fdivp
out
xor
lret
sbb
or
lcall
loope
lcall
scas
arpl
or
sbb
clc
jg
divl
cs
lods
decl
xor
xor
adcb
cld
mov
adc
push
dec
mov
adc
cmp
mov
dec
and
das
or
les
pop
hlt
lret
mov
add
jno
sub
lret
and
lock
call
mov
sub
lods
test
test
popa
scas
popa
push
lret
or
jae
add
sub
push
or
adc
rorl
lds
and
and
push
push
fcomip
mov
sub
cld
subb
inc
push
adc
xchg
jmp
filds
push
repnz
les
adc
xor
imul
xlat
incl
sbb
and
sbb
hlt
adc
dec
das
cld
cld
jg
and
mov
dec
sbb
xchg
popa
inc
xchg
jg
and
adc
jno
fildl
enter
jg
xor
xchg
jg
ret
add
dec
movsb
inc
or
and
in
add
cmc
incl
mov
mov
imul
push
bound
pusha
inc
dec
pop
call
and
int3
hlt
dec
rcll
mov
loopne
lods
rorb
dec
or
incb
out
aam
cmp
fdivl
aam
add
lret
aad
sbb
push
push
and
push
add
or
adc
fisttps
incl
mov
jp
pop
cmp
pop
mov
out
test
faddl
addr16
cs
rcrb
dec
push
sbb
dec
incl
into
aas
inc
xor
insb
sub
xchg
mov
xor
mov
cmp
jmp
sbb
jne
call
jmp
sub
jmp
lock
lcall
incl
into
cmp
ds
adc
les
mov
xchg
lods
lods
call
call
outsb
xchg
pop
mov
outsl
adc
sbb
enter
sub
daa
mov
mov
inc
inc
mov
adc
push
and
inc
dec
popf
push
dec
cmpsl
inc
mov
das
clc
pushl
dec
push
push
push
mov
xlat
jmp
in
outsl
sub
push
dec
pop
fcoml
das
cmpsb
hlt
incl
fcomip
dec
fstl
xor
push
cmp
and
adc
decl
xchg
dec
lods
add
mov
mov
inc
imul
and
repz
dec
push
cmpsb
mov
pop
and
clc
push
add
clc
mov
clc
ljmp
and
mov
adc
ljmp
xor
arpl
dec
icebp
mov
ljmp
inc
lds
call
pop
arpl
sbb
out
pushl
xlat
fs
and
jmp
dec
sub
push
pop
repnz
push
mov
jmp
imul
lds
adc
incl
inc
icebp
call
or
xlat
mov
xor
push
leave
pop
pop
xchg
in
cmp
jae
imul
movl
jbe,pn
divl
mov
ljmp
jbe
add
pusha
mov
jne
jbe
negl
mov
mov
fldl
push
xlat
or
pop
jp
xlat
jns
mov
in
es
mov
add
or
loopne
mov
push
sar
pushl
add
jge
bound
and
gs
testb
cmpsb
call
call
rolb
or
xorb
inc
test
ljmp
add
loope
scas
loop
out
or
add
sub
iret
lds
fdivr
mov
daa
sub
xor
and
push
mov
pushl
mov
pop
inc
insb
push
subl
jg
ljmp
jmp
mov
les
loop
push
outsl
and
fwait
sub
mov
sbb
push
inc
inc
and
inc
aaa
pop
lock
mov
iret
cli
ss
sub
sub
fcomps
imul
ljmp
test
xor
cwtl
ret
jae
inc
sub
out
inc
pop
jg
xor
push
outsl
clc
aaa
inc
clc
push
movsb
paddd
mov
push
ljmp
out
adc
mov
sbb
repnz
cmp
cmpsb
xor
out
clc
pop
out
jne
clc
bound
in
jg
adc
mov
add
add
ljmp
scas
xchg
and
pop
mov
cmp
inc
mov
mov
movsl
fadds
and
xchg
imul
mov
jp
push
sub
nop
inc
pop
push
mov
stos
mov
cmp
or
mov
mov
sar
or
mov
cmpsb
imul
mov
enter
mov
scas
ror
adc
decl
inc
scas
in
test
mov
jl
or
daa
pushl
cwtl
push
gs
jbe
lcall
in
add
jnp
int3
cmp
gs
cmc
xchg
movsb
icebp
pop
lcall
decl
cltd
adc
arpl
push
ljmp
cmp
cmpsl
mov
stos
adc
pop
cmc
jmp
pop
jmp
or
inc
dec
fcmovb
cmp
mov
jmp
inc
push
ljmp
pop
clc
pop
das
xchg
pop
jns
adc
adc
fcomip
fnstsw
cmpsb
sbbl
loop
mull
inc
adc
call
ret
jno
xchg
inc
repz
and
lds
mov
out
lock
sbb
sub
in
jo
mov
jmp
push
push
mov
push
fisttps
arpl
loopne
jb
lea
movq
lcall
jecxz
and
sub
jecxz
sbb
sub
lcall
xchg
pop
sbbl
call
jmp
scas
add
dec
pop
pop
mov
or
incl
mov
shrb
mov
cmp
cwtl
js
lcall
xchg
mov
mov
call
jmp
mov
push
cld
cs
ds
sub
jp
adcb
lcall
rorl
inc
jl
sub
in
push
cwtl
mov
imul
js
movsl
push
std
fcomip
jmp
sarb
cmp
sti
mov
lcall
lods
inc
or
arpl
mov
inc
push
dec
xchg
or
xchg
pop
jns
decl
add
mov
xchg
icebp
mov
jns
or
cmp
cmp
sarb
mov
jno
jne
cli
mov
cli
lcall
out
add
imul
adc
jns
fcomip
or
sbb
lods
lods
out
decl
repz
mov
dec
cwtl
sti
xchg
fwait
xchg
outsl
sub
sahf
lds
fisubrs
inc
xor
out
lods
lahf
mov
push
jl
iret
mov
inc
mov
das
xchg
mov
mov
dec
add
sbb
test
mov
xor
iret
add
inc
add
fldenv
xchg
aad
cmpsb
popa
je
lahf
sbb
jnp
cltd
repz
in
das
xor
and
shll
jge
and
sub
inc
inc
and
mov
pushl
rolb
xor
movb
mov
xor
mov
jg
ja
sbb
adc
and
stos
cld
jo
out
fimuls
decl
clc
pop
loop
loopne
into
lds
xor
dec
sbb
cmp
paddq
sub
lcall
xchg
dec
pop
rolb
push
fwait
cwtl
mov
mov
decl
aad
outsl
jne
xchg
sub
push
mov
sti
mov
mov
jbe
into
xchg
cld
out
jmp
decl
cmp
pushl
fistps
pop
stos
mov
pop
cs
jmp
scas
sbb
js
loope
ret
mov
lods
pop
and
xor
loope
call
sub
adc
cmc
int3
data16
and
add
test
test
decl
sub
shlb
pusha
pop
cld
mov
lock
pop
sbbb
call
pop
adc
lcall
push
icebp
cmpsb
push
rorb
test
mov
pushf
cmp
mov
inc
pushf
sub
shlb
xchg
shlb
ret
aad
lods
cmp
inc
push
out
add
call
ret
jo
mov
ret
mov
add
out
add
mov
xchg
sbb
push
inc
rcl
and
adc
incl
pushl
inc
stos
sbb
jge
ja
out
mov
scas
fmull
xor
sbb
jmp
add
xchg
outsb
xor
popa
test
arpl
jae
push
cmp
call
mov
addb
and
lcall
add
pop
sbb
flds
stos
popf
adc
popa
jle
test
pop
out
nop
out
push
mov
push
and
call
loop
mov
mov
shlb
pop
jo
jecxz
mov
and
pop
pop
ret
ljmp
je
push
clc
pop
inc
imul
pusha
decl
and
push
mov
bound
stos
bound
mov
inc
movsl
mov
jg
jne
ljmp
sub
pop
mov
sbb
jo
cmpsb
sbb
decl
sbb
sub
push
cmp
pushf
jns
cmpsb
push
fimuls
jmp
mov
mov
roll
fwait
cmp
push
inc
test
sarl
push
pop
es
jne
inc
lods
mov
aaa
stos
push
jnp
mov
call
push
in
xor
scas
in
push
ljmp
dec
imull
cmpsb
dec
packssdw
fwait
call
pusha
rcll
outsb
mov
dec
and
lret
out
sbb
jp
cmp
outsb
imul
outsl
faddp
nop
pop
ja
dec
xchg
and
xchg
jne
lock
lods
aad
aas
push
test
movsb
lock
addr16
aad
inc
jns
xchg
jbe
sub
jae
xor
adc
xor
daa
outsb
jle
jnp
jmp
lods
xor
out
push
ficompl
push
pop
iret
mov
fsubrl
adc
div
jmp
jb
leave
pop
out
mov
stos
mov
inc
or
fadds
or
mov
adcb
cltd
xlat
sbb
enter
gs
test
push
and
sahf
push
mov
loop
and
or
push
int3
pop
mov
cld
incl
cmp
and
clc
cmp
dec
sub
incl
adcl
rcr
push
cmp
inc
popa
xor
ljmp
movsb
gs
dec
jb
test
adc
out
mov
call
das
and
test
push
daa
push
pop
pusha
mov
mov
sahf
jno
adc
fsts
mov
jno
mov
movsl
outsb
mov
push
and
push
pop
fwait
xchg
aad
call
test
push
mov
pop
lcall
pop
sbb
cltd
mov
insb
inc
lea
pop
mov
out
insb
pop
sub
xor
out
dec
int3
loop
pop
sbb
out
add
jmp
sub
cwtl
pop
ja
mov
mov
insl
adc
mov
jge
inc
ficoms
test
xchg
aaa
pop
jne
pop
push
loope
or
fidivs
aad
daa
fistpll
dec
std
mov
std
pop
and
add
pop
test
subb
jle
xor
sbb
add
lock
and
mov
outsl
orb
orl
call
lods
and
push
popl
pop
rclb
nop
inc
cmp
in
add
adc
and
adc
hlt
xchg
incl
mov
imul
jnp
sub
jmp
xchg
push
in
cs
mov
orb
popf
sub
jle
xchg
mov
lcall
mov
mov
aaa
fstpt
lcall
ficompl
mov
into
imul
lcall
ss
fldcw
dec
loop
xchg
lret
cmp
vmovq
in
imul
mov
rorb
lods
push
lret
insl
fsubr
movsl
dec
lea
add
lcall
pusha
xchg
out
es
outsb
movsb
cmp
mov
jp
and
add
in
out
jl
ljmp
fistpll
add
xor
adcl
or
adcl
sbb
mov
cld
addr16
sbb
addb
into
sub
decl
inc
inc
xchg
dec
sbb
nop
cmp
enter
jg
mov
sbb
pop
roll
dec
dec
mov
mov
pop
mov
mov
cmp
add
pushl
es
in
es
dec
or
mov
inc
insl
rolb
or
decl
push
out
sub
shlb
incb
jbe
lods
dec
mov
enter
decl
je
xchg
fldcw
rorl
inc
adcb
sub
push
adc
pop
into
cmc
cmp
jno
dec
mov
sub
lret
dec
mov
xor
insb
and
lods
pushl
call
lcall
and
shl
mov
js
mov
pop
and
decl
add
repz
out
cli
sbb
sub
cld
jb
hlt
faddl
lahf
sbb
pusha
lahf
xor
idiv
jmp
lahf
test
push
cmpb
out
into
out
adc
pop
mov
jmp
sti
mov
inc
cs
adc
dec
je
or
dec
lcall
popa
dec
mov
pusha
incb
pushl
cli
and
adc
and
xor
rol
decl
jmp
loope
mov
pop
movsb
cmp
rcl
cmpl
mov
push
mov
xchg
inc
pushf
lods
jo
sub
cmpsl
sbb
hlt
xchg
jg
mov
adc
push
add
mov
push
xor
sbb
outsl
insb
adcl
incl
iret
int3
or
cmpsl
es
inc
cld
aad
jb
inc
inc
or
pop
xchg
stos
inc
es
pop
mov
cmp
inc
adc
ljmp
call
in
pushf
andb
push
psubsw
add
push
sub
lahf
incl
adc
fucomp
pop
mov
cmp
int3
aad
testb
clc
dec
pop
xchg
add
lcall
sbb
sahf
push
in
jp
push
and
pop
clc
cltd
pop
jle
push
lret
dec
popa
push
lcall
lcall
dec
pop
andl
hlt
lds
or
add
ljmp
outsl
mov
icebp
jb
bnd
lahf
mov
test
add
sbb
and
icebp
or
ja
movb
push
nop
adc
or
xor
adc
add
fucomip
ss
add
imul
push
movsb
loop
das
ret
cmc
xchg
cmp
dec
dec
fcoms
pmaxsw
dec
push
stos
xchg
adc
subl
sbb
out
mov
outsb
test
sub
sub
pushl
push
jno
test
xor
xor
scas
clc
mov
push
cli
inc
ljmp
mov
jmp
call
jmp
cmpsb
xor
pop
in
mov
lods
cltd
dec
je
and
fdivr
decl
mov
pop
pop
jbe
sub
dec
int3
adc
mov
sub
dec
dec
push
push
enter
xchg
test
cmp
scas
shr
movsb
lcall
aad
cmp
aas
adc
iret
pop
clc
xor
jecxz
fxch
jmp
neg
lret
mov
stos
cld
sbb
or
xchg
push
mov
sbb
sub
lcall
inc
insb
das
in
mov
das
cmp
or
pusha
push
inc
sub
dec
and
adcb
push
cli
add
rcl
sbb
aaa
inc
loopne
jg
clc
jmp
addb
cmp
inc
mov
xor
jg
adc
dec
or
add
xor
movsb
test
mov
inc
sbb
lds
lcall
clc
sub
or
or
dec
mov
jnp
jns
fisttps
sahf
sbb
and
bound
pop
lock
cmpsl
loop
rorl
clc
out
cli
lcall
loop
mov
out
or
or
outsb
sub
sbb
push
push
cltd
sar
mov
mov
jnp
xor
subl
xchg
shrl
int3
outsb
scas
ror
jmp
fidivrl
jne
iret
pop
mov
movsb
jne
dec
jecxz
push
arpl
fs
arpl
sbb
sarb
repnz
insl
cmc
movsb
daa
push
push
xor
cld
xchg
cmpsl
inc
les
sub
fistpll
ds
mov
adc
outsl
clc
test
pop
sahf
pop
std
ljmp
lcall
insb
xor
inc
lea
lea
outsl
push
addr16
pusha
mov
inc
aad
cmc
dec
add
mov
mov
jb
add
aas
add
inc
push
cmpb
and
sarb
addb
out
xchg
or
test
xor
xor
xchg
sub
add
fcoms
cmp
pop
lods
pushf
incl
push
in
out
imul
xor
or
pop
stos
test
outsl
mov
lcall
rorb
lods
pop
inc
adc
fwait
fistps
pop
outsb
sbb
or
xor
jbe
push
inc
repnz
mov
fnsave
fdivrl
into
test
sub
sahf
clc
sbb
jnp
frstor
filds
mov
inc
lea
ret
movsb
jb
push
sub
into
out
jo
loop
loop
stc
xor
scas
in
loopne
and
lcall
incb
ja
mov
jecxz
outsl
enter
ret
repnz
dec
out
pop
or
adc
enter
dec
idivb
xor
mov
cmp
sub
pushl
ret
out
cltd
jns
and
xor
incl
loop
jae
adc
adc
xorb
dec
push
push
inc
add
cmp
test
mov
jl
adc
cltd
and
fwait
adc
fwait
xchg
es
jmp
sub
mov
sbb
adc
mov
lock
test
sub
xchg
sub
shrl
and
jmp
pop
addr16
arpl
ficoml
dec
cli
pushl
inc
mov
insb
pop
pop
imul
cmpsb
pop
incl
mov
es
pop
shrb
sbb
push
adcl
sar
outsb
imul
scas
xor
mov
pop
imul
jns
inc
adc
cmpsb
cmp
nop
popa
sbb
pusha
in
xchg
cmc
push
mov
insb
aam
shll
xchg
and
es
call
decl
mov
lods
mov
adc
jae
push
pop
inc
push
adc
inc
add
in
incl
stos
test
cmp
mov
jle
ss
mov
jno
jg
je
mov
ljmp
inc
daa
add
xor
jb
lock
xor
push
decl
push
pop
insb
les
adc
test
incl
in
xlat
add
mov
adc
add
ljmp
in
inc
sbb
int3
sbb
adc
xchg
es
std
test
xor
xor
sbb
movsb
mov
mov
out
cli
jno
xchg
repnz
dec
adc
xchg
insb
mov
stos
sub
sub
xor
decl
jp
sbb
add
mov
xchg
add
mov
ss
ss
ljmp
das
bound
js
insl
xchg
ja
fsubrs
push
mov
sbb
xchg
sbb
ljmp
xor
insl
mov
jns
ret
push
pcmpgtw
jb
push
cmp
sub
bound
push
adc
mov
mov
arpl
cli
mov
inc
dec
mov
and
dec
outsl
mov
xchg
pop
test
repnz
hlt
lods
jne
push
jle
xchg
gs
mov
lock
ljmp
out
inc
xchg
out
jae
pushl
pop
and
cmp
aas
jg
incl
and
das
bound
pusha
mov
dec
xor
adc
adc
inc
pop
mov
or
jo
xchg
xchg
inc
repnz
nop
fidivrl
dec
call
pop
lcall
decl
push
pop
xchg
jno
imul
cmp
out
clc
incl
inc
pushf
push
push
xchg
inc
push
xchg
icebp
fwait
adc
out
shll
sbb
adc
fwait
jnp
jp
cwtl
jne
mov
jo
push
mov
fldcw
addl
pop
inc
inc
xchg
pop
js
pop
inc
test
out
sub
xchg
aas
cmp
push
xchg
jmp
jmp
jnp
les
sahf
jnp
ss
pop
ljmp
add
adc
push
add
pop
add
lds
in
push
mov
sub
lds
mov
popa
jecxz
movsb
push
mov
ljmp
clc
push
push
mov
mov
inc
jmp
mov
xor
sub
xchg
lods
ljmp
aas
mov
pop
das
lret
leave
call
leave
ret
test
mov
mov
rcll
loopne
mov
dec
xchg
daa
mov
cwtl
ret
sub
pop
dec
in
testl
cmp
inc
pop
popa
cmp
arpl
inc
test
orb
xchg
incl
mov
and
jae
mov
call
popa
bound
call
jo
dec
sahf
jbe
mov
xor
sbb
add
test
dec
rcr
add
dec
nop
jae
shlb
sbb
incl
pop
in
je
inc
clc
ja
cmc
lea
or
cmc
sbb
insb
ss
test
pusha
lcall
rol
pop
fldenv
test
loop
iret
jbe
addr16
popa
add
adc
xchg
cmp
adc
mov
push
sahf
in
fldcw
cmp
dec
push
push
xlat
lds
sbb
mov
fldcw
popf
and
mov
xlat
hlt
call
mov
mov
dec
dec
sub
inc
add
cmpsb
jb
xchg
addr16
mov
mov
fwait
jecxz
in
loop
les
pop
dec
push
pop
cmp
push
inc
out
clc
push
cs
lret
mov
adc
cli
jb
sub
lcall
inc
add
adc
xchg
pushf
and
daa
mov
mov
in
mov
add
push
xor
lcall
cltd
xchg
insl
cmpsl
incl
dec
icebp
adc
adc
mov
inc
test
xchg
xchg
cmp
and
fs
mov
pop
push
insb
dec
in
xchg
cmp
xchg
xor
xchg
mov
xchg
push
push
js
sbb
mov
insb
lahf
dec
pop
aas
je
test
jno
decl
dec
cmpsb
cmp
test
jecxz
mov
adc
sub
ljmp
test
xchg
push
insb
xchg
sbb
mov
push
ret
fcomip
leave
insl
inc
fs
sarl
pusha
xor
xlat
cli
jl
xor
mov
iret
pop
and
pushl
pop
xchg
jne
jmp
shl
jg
mov
cmp
bound
xchg
jge
gs
add
adc
sub
movsb
dec
dec
mov
mov
sbbb
mov
inc
mov
jg
cmpsb
outsb
mov
cmp
mov
fcomip
sub
push
inc
mov
imul
add
in
pop
pop
inc
adc
hlt
xchg
push
fwait
test
xchg
imul
fadd
roll
lods
pop
hlt
push
test
mov
imul
xchg
mov
loopne
sbb
cmpsl
fs
lods
in
lcall
mov
lret
fsubr
mov
pop
stos
add
sarl
in
leave
xchg
lcall
xchg
scas
push
push
jecxz
jns
mov
jmp
mov
stc
test
cs
dec
lcall
add
push
movb
addr16
mov
lods
and
sbb
inc
std
call
ret
lods
shlb
push
push
sbbb
mov
push
sbb
pop
xchg
mov
lret
mov
fbld
push
push
sub
and
dec
movsl
ss
movsl
call
fwait
cmp
and
sbb
xor
mov
mov
dec
std
jmp
cmpb
lcall
pushl
xor
add
shr
aas
aas
inc
add
adc
call
fs
movb
sub
dec
or
stos
mov
out
cltd
sbb
mov
inc
xchg
movsb
clc
cld
test
aad
in
fs
ljmp
jmp
adc
shlb
mov
mov
lret
adc
xchg
jge
test
cmp
fsubs
rclb
or
cmp
sbb
xor
dec
pop
aaa
outsl
pop
push
sbb
jmp
mov
lcall
sub
loope
jb
xchg
jae
fwait
push
push
push
adc
jg
mov
cmp
mov
xor
mov
cwtl
adc
push
mov
lahf
pop
jo
enter
gs
cltd
gs
xchg
daa
rcrl
mov
sub
jb
add
lcall
rolb
cmp
das
or
out
inc
xor
in
push
iret
test
mov
xchg
decl
jne
cs
push
std
jb
xor
les
dec
push
jo
aaa
xchg
xchg
cwtl
mov
rolb
sbb
lcall
pop
and
inc
xchg
andl
stc
jp
aaa
int3
sbb
stos
jbe
test
or
adc
not
push
add
cli
jnp
and
sahf
dec
xchg
test
mov
push
popf
lret
stos
icebp
enter
mov
aad
xor
pushl
push
addr16
dec
test
cmp
cmp
lret
call
lahf
inc
inc
lret
out
nop
hlt
call
xchg
mov
mov
sub
mov
pop
mov
mov
in
cmp
xchg
mov
fsubs
or
jb
pop
and
cmpsl
and
add
clc
dec
mov
jl
sahf
or
jg
add
scas
out
scas
xor
lds
sbb
inc
jp
test
icebp
ret
rorl
and
cmp
push
das
insl
push
and
adc
cs
or
ljmp
addr16
clc
dec
push
pop
cmp
cmp
ljmp
mov
push
js
dec
test
fidivs
dec
xchg
repz
aaa
jnp
jbe
xlat
xlat
in
enter
jl
rcrl
pop
lock
test
push
loopne
sub
test
mov
cmp
push
lea
mov
imulb
outsb
push
ljmp
xlat
jle
stos
outsb
mov
add
dec
ljmp
sbb
arpl
out
insl
mov
pop
mov
jge
jge
jae
cltd
mov
jmp
mov
iret
cltd
pop
fimull
cmp
mov
dec
or
ljmp
pop
lods
pop
sar
movsb
pop
test
mov
jb
and
stos
adc
lcall
jle
jmp
adc
or
int3
dec
ret
xchg
ficomps
aad
jge
xchg
out
iret
jno
mov
mov
mov
jmp
mov
sahf
sub
andl
cmc
jp
std
mov
int
in
sar
cmp
call
jecxz
roll
pop
mov
inc
jne
shrl
enter
ljmp
mov
jge
and
call
and
mov
loope
jmp
sub
loope
shl
jle
std
fmuls
and
push
stos
in
call
sbb
and
inc
sbb
ljmp
lahf
hlt
push
ficoms
sahf
int
pop
dec
or
xor
in
jle
add
ljmp
cli
or
scas
pop
int3
in
dec
jmp
jg
sbbl
out
repnz
push
inc
dec
lcall
push
in
or
jb
pop
adc
adc
mov
mov
pusha
rolb
jge
jl
lods
pusha
and
lods
fsubrl
movb
insl
jmp
dec
inc
inc
push
xchg
aad
pop
les
jg
sub
or
out
cmp
out
lock
lea
outsl
mov
mov
stos
orl
dec
jp
popf
pop
loope
lcall
fiadds
enter
ja
lea
mov
add
insb
cmp
xchg
sub
fists
aas
jmp
into
sub
sahf
pop
leave
stos
push
xchg
shl
mov
pop
fwait
sbb
in
cwtl
in
arpl
decl
out
xlat
incb
pop
and
adc
in
into
idiv
lcall
jb
cs
cwtl
sbb
pop
mov
fimuls
das
push
scas
and
sbb
lock
jg
jb
lds
call
cld
fnsave
les
jno
add
rclb
out
and
pop
push
cmp
jmp
and
xchg
inc
hlt
sub
call
xlat
jg
stos
cli
std
shll
and
xchg
sbb
push
std
repz
int3
out
outsl
xor
mov
xchg
in
lods
mov
pop
sar
lcall
adc
das
cld
push
ss
mov
mov
mov
ret
or
in
movl
imul
push
sbb
adc
dec
adc
sbb
daa
xchg
add
push
enter
cmp
or
jne
sbb
call
sbb
and
fdivs
loopne
decl
add
inc
repnz
dec
cwtl
pop
pop
mov
addb
test
xor
adc
icebp
test
pop
cli
decl
push
inc
mov
sbb
lods
pop
mov
sub
mov
jg
outsl
xchg
nop
jp
sub
loopne
aad
test
push
jge
in
pop
xchg
mov
mov
sti
inc
test
adc
dec
pop
sbb
mov
xchg
es
fildl
gs
call
into
push
cld
mov
stc
push
es
xor
test
pop
data16
mov
and
lcall
sbb
jmp
or
jge
fidivrs
ss
push
incl
xor
sub
arpl
jl
in
insl
cwtl
jae
pop
sbb
addb
ljmp
mov
repz
pop
icebp
cmc
rclb
pop
lock
pushf
or
cmpl
lcall
push
shlb
or
or
add
mov
inc
or
mov
add
test
inc
inc
mov
les
inc
sarb
pop
cmp
lds
jmp
pop
cli
mov
and
mov
inc
dec
mov
sub
ss
lcall
add
je
shl
xor
mov
movsb
sar
int
mov
loop
or
stos
xor
and
sub
jmp
clc
xor
sub
stos
stos
test
incl
cmp
adc
das
cmp
pop
orl
mov
mov
xor
aad
inc
insl
jmp
cmp
rcrl
and
mov
shll
pushl
mov
cmp
int3
mov
push
int
mov
push
rclb
incl
mov
push
out
sub
adc
bound
push
push
call
jmp
sbb
into
xor
inc
fwait
insl
mov
xchg
pop
outsb
inc
sbb
aam
lcall
js
pop
je
movsb
adc
sub
ret
mov
adc
jge
add
stos
call
rolb
inc
subl
or
dec
repnz
sbb
xchg
loope
je
ret
sbb
movsl
das
es
dec
enter
repnz
pop
cli
pushl
mov
dec
sbb
movsb
adc
rorb
cmp
cs
inc
out
fldenv
adc
ljmp
sub
lods
ds
adc
aas
movsl
sbb
jne
imul
fwait
adc
lret
mov
cmc
push
stos
adc
mov
in
fstpt
push
stos
mov
push
incl
sar
aas
mov
mov
xor
push
fisubl
insl
mov
std
aad
mov
jne
lock
dec
fldt
insb
aad
sbb
sub
loop
fbstp
std
scas
testb
test
ljmp
and
sbb
int3
push
xlat
hlt
test
adc
mull
fimuls
filds
inc
addl
or
pop
rolb
ss
and
call
out
lret
aam
popa
sbb
adc
mov
xchg
enter
jmp
or
sub
dec
repnz
and
mov
dec
xlat
cmp
sbb
ljmp
lods
popf
mov
movl
in
imul
pop
out
les
mov
pop
jno
and
and
or
call
fisubl
mov
pop
out
jecxz
mov
incl
fiaddl
pusha
xor
dec
xchg
fsubrs
inc
add
jno
stc
pop
add
jae
cmpsl
dec
xchg
es
pop
jnp
or
or
out
jg
lcall
push
lcall
iret
lret
or
das
push
or
filds
mov
loop
sbb
add
cmc
pushl
aam
mov
mov
adc
adc
and
sbb
xchg
mov
xchg
inc
dec
sarb
mov
aaa
and
insb
lods
add
cmp
and
inc
or
jb
xchg
icebp
pushl
lcall
xor
in
ljmp
mov
sbb
mov
mov
in
mov
mov
fisttpl
sar
incl
cld
cld
xor
out
pop
adc
mov
ss
pushl
adcl
sub
scas
je
sbb
inc
xor
in
sub
pop
dec
enter
cmp
dec
es
icebp
inc
sub
out
mov
cmp
cmpsb
or
and
mov
bound
test
enter
xchg
sbb
or
mov
fistpl
inc
mov
insl
hlt
mov
mov
inc
xor
sbb
jo
xor
pushl
or
data16
sbb
pop
add
mov
dec
push
push
inc
push
mov
push
xor
pushl
cmpsb
test
jecxz
daa
in
xchg
xchg
fwait
mov
test
jp
mov
add
pop
jns
xor
leave
jnp
pop
pusha
add
je
mov
or
fcoms
in
fdivrl
inc
fwait
shr
mov
mov
mov
stos
incl
sub
test
xlat
mov
orb
out
ret
jne
jb
jbe
incl
sbb
push
dec
dec
sub
pusha
pop
inc
mov
mov
add
pop
jge
lcall
mov
ljmp
enter
addr16
pushl
mov
in
sbb
aad
lret
sub
dec
popf
ljmp
mov
sub
insl
sbb
jb
jp
push
mov
jno
inc
adc
xchg
sub
inc
lea
inc
mov
popf
sti
pop
pushl
clc
call
je
mov
ds
dec
daa
dec
adc
in
fisttpll
xor
lds
test
daa
push
aaa
mov
jmp
xchg
pop
in
push
cmp
scas
push
pop
in
add
decl
mov
and
test
jmp
bound
insl
jg
pop
faddl
cmp
adc
aad
add
sahf
or
les
cmc
pushl
push
dec
push
lods
rdtsc
dec
mov
dec
sbb
sbb
xchg
mov
out
sbb
jp
jno
hlt
frstor
fstpl
incl
les
cmp
dec
pop
jo
scas
push
and
cmp
cs
call
push
rcrl
pop
in
push
addr16
enter
add
adc
fcoml
cld
lcall
xor
stc
aaa
xor
clc
pushf
and
dec
dec
sub
loop
sub
sub
dec
aad
xchg
dec
mov
movsl
sub
ljmp
mov
pop
mov
push
stos
xchg
dec
cmp
movsl
jnp
out
stos
call
push
dec
mov
leave
mov
ljmp
mov
ljmp
push
icebp
jae
insl
mov
sbb
mov
mov
movswl
mov
push
mov
ror
mov
gs
jbe
inc
adc
pushl
fcmove
subb
cld
insb
pop
ja
lcall
inc
pushf
loope
pop
mov
mov
mov
fldenv
ss
fistpll
and
fcomip
push
pop
mov
lock
mov
lds
sbb
repnz
pop
test
hlt
movsl
ljmp
jg
loop
add
aas
mov
stos
inc
daa
inc
arpl
dec
rorb
mov
dec
dec
or
push
mov
mov
ljmp
or
dec
clc
outsb
mov
out
add
out
cli
inc
add
cld
sbb
or
rolb
pushl
insb
jl
aad
jns
imul
xchg
fstps
cs
ja
dec
pop
jmp
xor
sti
jnp
ljmp
fwait
inc
in
cmp
sti
jbe
arpl
mov
in
popa
sti
in
outsb
jo
sbb
in
ja
mov
nop
lea
jb
mov
into
sub
sti
ljmp
test
mov
in
outsl
addr16
repnz
push
xchg
jg
mov
incl
lahf
iret
sub
aaa
lods
bound
pusha
stos
cmp
ds
lock
mov
pop
ja
sub
les
cli
inc
adc
rorl
fwait
dec
cld
lcall
pop
int3
pop
rorl
mov
in
mov
ljmp
movsl
push
fildll
jle
hlt
cmpsl
jmp
jmp
call
inc
std
std
out
testb
sub
mov
xor
call
pop
push
sbb
mov
dec
stos
cld
repnz
lahf
shrl
mov
call
sti
mov
mov
adc
cmp
nop
xor
shl
and
or
cmp
pop
mov
loop
add
cmp
call
jnp
add
call
lea
mov
push
shll
aad
cmp
pop
dec
pop
mov
test
and
mov
call
mov
inc
inc
jne
inc
daa
sbb
sub
rol
movsb
mov
ljmp
add
xor
aam
mov
jb
cmpb
xchg
fnstsw
in
test
pop
pushl
andb
ds
lcall
adc
lcall
mov
sbb
inc
cmc
pop
aas
pop
stos
xor
or
pop
repnz
lahf
fidivrl
jb
cmp
add
incl
add
sti
lret
mov
mov
cmp
mov
int
push
push
xor
lods
mov
and
outsl
cli
stos
ret
dec
cmp
and
mov
ss
mov
fdivs
jg
insl
cld
sbb
xor
mov
pop
cmc
incl
mov
popf
jne
int3
pop
mov
cmp
jb
mov
push
mov
cmp
int
ret
shrl
imul
cmp
cld
stos
aaa
jl
pop
dec
cmp
dec
adc
push
int3
mov
stos
daa
xor
mov
adc
mov
sbb
incl
pop
xchg
ret
lods
loop
sub
imul
aam
ljmp
jmp
cmp
add
ljmp
mov
mov
test
sbb
clc
or
addb
aas
sbb
dec
push
xchg
in
adc
or
loope
lock
push
les
pop
sbb
mov
sbb
pushf
xchg
sbb
ljmp
lods
xchg
jb
pop
dec
sbb
ljmp
bound
sbb
and
sub
dec
add
mov
cmp
pushl
push
mov
or
mov
cmp
nop
dec
mov
adc
pushl
add
add
pop
dec
les
ret
mov
dec
mov
fdivrl
push
mov
mov
int3
dec
sahf
arpl
data16
clc
or
mov
sub
jo
pop
cmp
int
push
pop
cmpl
imul
sbbb
mov
sub
fldt
adcl
fmul
enter
lea
mov
cwtl
int3
enter
icebp
cld
mov
mov
fwait
mov
push
aas
in
add
push
fwait
cli
repz
stc
movsb
sub
sub
loope
sbb
aas
std
sar
or
lret
lcall
in
mov
lds
dec
scas
ret
das
scas
xor
insb
pushl
dec
or
scas
pop
mov
loopne
mov
or
loop
mov
mov
aaa
cld
call
pop
fistl
inc
push
xor
adc
cmp
cmp
lock
ret
fisttpll
jne
mov
sbb
call
sub
ljmp
lcall
mov
jo
imul
arpl
fmul
sbb
add
cltd
insb
dec
test
call
and
xor
sub
xor
xchg
mov
sub
lods
lods
sbb
dec
or
cmc
js
push
mov
dec
mov
push
int
shrl
sub
ljmp
mov
fisubl
sub
mov
mov
xor
mov
mov
cmp
pop
xor
mov
ljmp
mov
sub
cs
jg
add
push
aad
and
push
cmp
inc
sbb
rolb
pop
int
daa
push
add
enter
dec
shlb
in
or
sub
lahf
hlt
leave
xchg
ret
inc
pop
sbb
push
mov
mov
mov
pushf
push
jmp
mov
mov
lret
push
sahf
stos
scas
mov
add
dec
or
cli
jg
movsl
lds
pop
jecxz
push
int
adcl
and
call
xchg
adc
rcrl
pop
push
jle
rcll
call
orb
clc
xor
jp
mov
rcrb
movsl
push
mov
push
adc
das
sar
mov
push
xchg
or
jb
or
sub
fcomi
xor
pop
nop
call
xor
dec
lods
scas
sub
sarb
mov
cwtl
popf
push
sub
pop
ret
xchg
add
incl
test
push
pop
mov
inc
xor
sub
pushl
sbb
fcomip
lcall
ficompl
or
sbb
sub
xchg
or
cmp
subb
in
cs
mov
push
fwait
and
mov
jmp
mov
fcompl
xchg
dec
push
dec
inc
or
movsl
clc
cmp
adc
mov
and
push
pop
cmp
stos
cli
dec
cmp
cltd
lahf
rcl
stc
xchg
mov
xchg
mov
push
xor
and
jbe
mov
dec
cmpl
add
int
ffree
pop
sbb
call
nop
or
inc
icebp
adc
cmp
ficoms
dec
pop
mov
movsl
cmpsb
ljmp
push
ret
inc
and
lock
std
push
push
mov
mov
nop
scas
mov
sti
push
int3
hlt
addb
ss
ss
sub
in
pop
pop
lods
sub
in
cmc
cmp
sbb
shll
jg
push
es
mov
pop
rcrb
das
jno
shlb
lods
add
incl
test
cmp
lods
cmp
pop
test
scas
outsl
cmp
push
and
jmp
ljmp
in
pop
mov
xchg
cmp
or
lahf
lahf
fcomps
andb
addl
jg
sbb
xor
dec
sub
inc
cs
mov
pushf
cmp
cld
ljmp
jl
aad
xor
and
xor
push
cli
bound
or
mov
lcall
xor
scas
stos
sbb
pop
cmp
shrb
mov
sbb
mov
aad
add
add
mov
pushl
inc
ss
popf
pop
call
loopne
fwait
push
xchg
mov
xchg
incl
inc
adc
enter
aad
fsubp
mov
push
outsb
xchg
xchg
push
call
xchg
call
mov
inc
pop
push
mov
pop
mov
lods
gs
pop
loope
mov
push
hlt
push
mov
pusha
dec
or
lds
es
ljmp
ss
add
lods
mov
call
pop
sti
pop
sbb
push
enter
int
das
les
xor
in
in
mov
push
xchg
lret
dec
cmp
enter
mov
pop
inc
loope
sbb
daa
inc
shrb
rcrl
jmp
rorl
andl
xchg
pop
mov
flds
test
scas
add
or
push
fsubl
inc
mov
lahf
incl
outsb
mov
mov
movsb
dec
xchg
mov
es
decl
add
lahf
test
xchg
jbe
push
stos
inc
pop
int
mov
cli
mov
sar
orl
pop
aas
rorl
rcrl
in
xlat
mov
lcall
decl
dec
push
data16
push
jmp
faddp
dec
push
sub
push
int
jp
stos
sub
in
adc
xor
mov
mov
sahf
lods
mov
in
fcmovnu
pop
fcompl
add
loopne
sub
and
pop
dec
jb
jmp
in
push
ret
stos
ds
fldt
xorb
outsl
jg
incl
andl
fs
pop
popf
loop
jg
aam
imul
enter
cmp
aam
pop
sahf
xchg
lods
xchg
test
dec
dec
incb
mov
inc
mov
out
lcall
rcrb
sub
mov
retw
cmp
inc
mov
inc
sbb
out
movsb
popa
sbb
ljmp
ds
xchg
mov
aas
inc
push
cmc
iret
movsb
or
jg
xchg
dec
stos
popf
arpl
and
inc
imul
xor
dec
aaa
es
add
jge
insb
push
fst
movsl
inc
add
mov
and
lds
push
and
aam
push
cmp
mov
decb
out
or
ljmp
push
lock
xlat
sbb
lock
test
out
xchg
lock
adc
ljmp
mov
mov
out
arpl
lock
mov
and
jmp
imul
out
inc
std
das
push
and
jle
add
jmp
pushf
cmp
add
xchg
mov
mov
fstpl
pop
mov
mov
nop
clc
adc
ljmp
in
mov
and
lods
or
push
outsl
data16
out
testb
fisttpll
dec
add
jnp
ret
mov
or
mov
mov
test
or
aad
fsubrp
ljmp
subb
je,pn
xchg
adc
aas
sti
aam
fwait
lret
mov
lcall
sarb
or
in
inc
push
xchg
jbe
pushl
cmp
or
arpl
lret
xchg
decl
xchg
mul
aas
data16
cmp
nop
add
pop
cli
fiadds
rorl
jo
mov
or
outsl
add
cmc
push
outsl
pusha
pcmpeqd
lock
fcomip
jmp
out
adc
mov
xchg
push
pusha
cmp
mov
fsubrs
icebp
sub
nop
or
loop
rorb
push
incl
dec
fs
jmp
ljmp
sarb
push
pop
lock
xlat
fcos
mov
or
pop
fsubrs
pop
js
icebp
pusha
adc
mov
loopne
push
imul
jns
into
xchg
test
add
adc
jg
add
xorb
int
adc
stos
add
cmp
inc
dec
xor
jae
cmp
lcall
mov
out
stos
in
es
popl
add
popa
loopne
decl
pusha
jmp
and
mov
cmpsl
call
push
dec
lds
cli
mov
mov
out
enter
lock
xchg
inc
popf
es
xchg
mov
dec
jg
or
daa
jmp
into
shlb
shrb
pop
icebp
sti
mov
jne
sub
push
jnp
mov
pop
mov
and
popa
testl
ret
ret
add
adc
jo
aas
ljmp
push
pushf
lock
cld
pusha
fcomip
ret
cmp
push
jge
mov
insl
dec
incl
ja
and
stc
jne
ljmp
mov
call
mov
stos
outsl
mov
cmpsl
scas
lock
lahf
roll
cmp
das
pusha
test
cmp
out
nop
jno
jb
inc
xor
test
js
inc
jns
data16
xlat
aam
jge
mov
or
decl
jo
cmp
inc
xchg
movsb
pop
in
xchg
inc
or
js
jae
mov
clc
lcall
lahf
cmp
repz
decl
movsb
ds
or
inc
pusha
call
shr
cmp
push
or
sub
mov
adc
sub
jmp
inc
sbb
push
sbb
jp
in
or
mov
ja
inc
fimuls
cltd
cmp
enter
dec
sub
push
test
insb
xchg
jmp
or
xor
push
cmpsb
push
cltd
push
inc
cmpsb
mov
pop
cli
lods
stos
inc
ljmp
mov
ljmp
insl
push
movsb
cmp
hlt
call
push
jmp
xchg
sub
ljmp
cmp
xor
mov
pop
es
xchg
insb
jns
sahf
cmp
jmp
cltd
shlb
or
mov
ret
pop
push
in
cli
sbb
popf
pop
xor
rcrb
sub
shl
loop
stos
fildll
lods
add
adc
xor
push
out
loopne
jae
jg
lcall
movsl
xlat
jno
mov
mov
iret
jle
cmp
xlat
out
and
stc
jmp
jmp
add
repnz
xor
mov
push
stos
push
sub
push
mov
ljmp
roll
outsl
mov
inc
rolb
stos
icebp
inc
sbb
jge
xlat
test
xor
lahf
jl
incl
dec
xlat
loope
aad
xlat
push
cs
out
jp
movsl
mov
ja
test
lcall
xor
xor
cmp
popf
adc
jp
push
decl
mov
or
xor
movsb
xchg
dec
dec
jns
jb
inc
stc
pushf
xchg
pop
sahf
ja
jnp
loope
push
nop
push
sbb
stos
call
adc
cmp
shr
or
mov
add
dec
stos
movsb
fisttps
fwait
inc
push
aam
dec
pop
cwtl
and
mov
lcall
dec
xor
and
pop
xchg
cli
fs
pop
inc
add
popa
gs
push
push
xchg
aam
push
ja
pop
cld
xchg
pop
adc
xchg
push
popa
loope
push
stos
xchg
lret
addr16
adc
sub
lds
or
push
test
imul
pop
fwait
sub
cltd
mov
into
add
mov
lods
mov
out
mov
imul
mov
jp
pop
pop
andl
shll
outsb
push
out
mov
cli
adc
arpl
cltd
xchg
fnstsw
loop
jp
sahf
dec
popf
mov
je
in
mov
jbe
arpl
divb
inc
mov
mov
cmp
fiaddl
jno
adc
inc
or
xchg
jnp
mov
pushf
and
sub
add
pushl
cmc
ficoms
mov
into
pop
loope
lret
sub
pop
jbe
loop
jg
lret
inc
sub
gs
and
fs
cmp
mov
in
data16
test
incl
je
inc
imul
inc
add
add
dec
adc
lock
incl
pop
jno
add
inc
es
adc
jno
dec
dec
jmp
sar
filds
stos
cmc
stos
push
jns
dec
cmp
push
mov
jne
push
pushf
mov
sbb
int
jmp
arpl
aam
in
addr16
mov
inc
movsb
pop
push
jb
cli
test
xchg
add
fisubrs
sbb
gs
add
mov
fadd
icebp
imul
push
and
fisubl
insl
push
fsubrs
call
xchg
push
adcb
dec
lods
jo
lcall
outsb
enter
popa
daa
fnstsw
pop
sahf
xchg
mov
mov
push
ljmp
jg
xchg
and
ret
dec
pop
sub
push
and
and
cs
aaa
mov
inc
mov
mov
test
jecxz
inc
pop
das
adc
push
mov
mov
in
movsb
popa
pop
dec
lret
push
dec
mov
cmc
lret
add
loop
jl
test
xchg
add
scas
add
rol
jno
xchg
mov
add
in
decl
inc
mov
xchg
xchg
push
xor
out
pop
xchg
sahf
hlt
inc
and
in
cmp
push
sbb
xchg
mov
ljmp
push
adc
in
dec
push
and
fildll
nop
mov
std
decl
insl
je
inc
add
mov
mov
push
ljmpw
and
call
cmp
iret
dec
push
xchg
xchg
mov
out
mov
call
incl
mov
push
cmp
out
sub
pop
test
inc
adc
inc
push
incl
xchg
lcall
push
pop
xchg
filds
or
pop
mov
icebp
pop
add
mov
xchg
mov
fwait
test
incl
scas
loope
mov
aad
or
xor
lods
sub
pop
ds
jmp
pop
into
or
div
mov
inc
testl
jg
and
cmpb
or
xchg
pushl
cli
push
test
ds
xor
das
pop
mov
mov
cmp
pop
mov
pop
imull
pop
mov
adc
cmp
loope
js
pushf
lea
adc
fstp
test
sbbl
in
mov
call
cwtl
mov
movsl
sub
mov
aad
test
repz
pop
lret
bound
dec
sbb
xor
js
xor
sbb
cld
push
mov
fs
sub
pop
ret
adc
clc
arpl
add
and
or
mov
decl
movsl
dec
push
ljmp
xor
xchg
cmpsl
mov
push
jb
pop
and
push
movsl
jmp
add
je
cmp
pop
pusha
push
out
ret
pop
hlt
mov
pusha
ja
push
mov
out
dec
roll
jmp
push
int
or
dec
aas
int3
cli
mov
loopne
insl
inc
mov
int3
add
jg
insb
mov
movb
pop
xor
lcall
inc
add
sbb
dec
ret
push
subb
in
or
jns
arpl
in
rcrl
mov
andl
jae
push
sub
test
decl
jl
clc
jp
fst
dec
jmp
aam
xchg
push
xor
ljmp
dec
negl
daa
inc
int
inc
stc
push
push
sahf
aaa
inc
pop
jae
inc
mov
imul
mov
or
js
bound
test
sbb
adc
sbbl
push
sub
sar
incl
dec
pop
lcall
adc
xchg
loop
mov
outsb
jp
call
inc
ljmp
sbbb
add
daa
ds
dec
jp
or
pop
add
adc
xor
mov
rcrb
and
movsb
xchg
lea
adc
test
jns
pushf
in
lds
mov
mov
fcoml
ror
je
mov
xchg
and
mov
movsl
and
call
out
mov
daa
adc
aas
jge
lods
daa
pusha
mov
push
addr16
in
inc
in
sbb
dec
jle
int3
inc
insl
mov
js
lret
into
and
ror
mov
adc
jg
add
mov
out
lahf
jb
cmp
jge
aam
cltd
lahf
or
mov
xchg
jle
shrb
out
or
xchg
loop
pop
sbb
jg
inc
imul
mov
pop
mov
stc
push
in
inc
in
lcall
out
push
add
adc
test
test
int
ljmp
fs
mov
or
xchg
sub
inc
pop
mov
lcall
sbb
rcrl
sub
pushl
rcll
rolb
add
xor
repz
xor
cmp
mov
add
push
push
jo
add
dec
jne
push
fistpll
xchg
sbb
jno
es
xor
mov
inc
scas
out
scas
mov
pop
pop
xchg
stos
mov
scas
mov
gs
pop
cltd
out
jnp
sub
aam
cmc
filds
cmp
and
push
pushl
jne
mov
sub
push
pop
shll
loopne
mov
lcall
aam
sub
fldl
mov
sub
inc
or
xor
arpl
aas
and
ljmp
shr
mov
lods
sub
jno
push
mov
sub
je
daa
fisttps
lret
jbe
nop
jle
and
push
test
adc
xor
cmpsb
aad
loop
xor
lret
mov
sbb
pop
jne
scas
xor
dec
pop
jmp
stos
mov
mov
int3
mov
xor
fstpt
sbb
pushl
jge
and
mov
sbbb
fstpl
mov
pusha
lcall
inc
imul
xchg
dec
pop
cmc
jecxz
mov
pushf
incb
jg
cmp
xor
mov
sti
test
jle
pop
push
adc
mov
xchg
dec
incl
add
cmp
mov
mov
ljmp
ja
xchg
leave
inc
xchg
or
sbb
jmp
fsts
les
cmp
outsl
mov
cwtl
in
test
mov
call
popf
cld
pop
inc
mov
ljmp
movsb
loopne
incl
and
inc
popf
mov
mov
adc
incl
or
fmuls
and
fs
sbb
test
aad
call
xor
push
idiv
or
mov
loop
xchg
stos
add
rclb
test
ja
decl
cmp
stos
lods
enter
jne
sahf
push
pop
sbb
push
mov
mov
add
mov
decl
xchg
xlat
jge
imul
xor
xor
push
xchg
nop
cmpsl
fisttpl
call
jmp
xlat
int
push
in
sub
in
dec
loopne
sub
rclb
and
sbb
ljmp
cmpsb
add
adc
test
repz
test
rorb
insl
mov
cld
xchg
pop
mov
mov
sbb
lock
pushf
xlat
mov
fwait
cld
push
sub
clc
pop
test
dec
jl
sbb
enter
je
dec
or
adc
pop
sub
cmc
jg
pop
lea
sbb
scas
sbb
jl
adc
test
mov
cmp
lods
fstps
in
xchg
scas
mov
movsl
cmp
dec
cld
lcall
xchg
sarb
cwtl
stc
push
mov
push
pushf
adc
cltd
pop
adc
adc
mov
jmp
jge
mov
popa
movsl
sbb
inc
mov
add
and
addr16
std
jg
dec
in
lcall
lcall
cld
add
lcall
add
cmp
nop
std
pop
test
loope
and
pushl
shll
cmp
icebp
pop
data16
xchg
jg
cli
jns
or
xlat
and
lret
mov
loop
xor
or
pop
jne
sar
call
in
out
inc
psraw
leave
jl
push
stos
pop
cmp
push
lret
pop
and
sbb
pop
dec
inc
pop
icebp
cltd
and
dec
jno
test
xchg
lret
jle
dec
test
int
jl
mov
mov
test
call
aam
mov
adc
pop
and
push
clc
popa
nop
sbb
rcll
arpl
es
pop
cmpsb
xor
lahf
pop
andb
pop
cmc
in
push
cmp
add
jecxz
cmp
dec
pop
mov
popa
lds
xor
leave
lret
loopne
dec
dec
push
enter
xor
fcomip
faddl
mov
mov
fdivl
outsb
and
sbb
ud0
decl
das
hlt
inc
and
cmpsb
popf
std
adc
mov
clc
pop
inc
incl
xchg
inc
je
test
arpl
iret
loop
jp
stc
lret
mov
push
or
pop
add
push
ds
xchg
and
into
sarl
enter
subl
inc
inc
xchg
je
push
inc
in
mov
loop
pop
stos
mov
adc
inc
into
ljmp
enter
mov
push
dec
jno
test
mov
adc
adc
roll
push
pushl
mov
cwtl
mov
es
sbb
pop
inc
cltd
fsubrs
orb
call
loop
or
lea
pop
out
pop
fisubs
pop
add
dec
movsl
adc
cmp
xchg
out
mov
gs
lret
imul
jo
add
push
mov
out
push
insb
push
jo
frstor
inc
dec
push
add
push
pop
dec
push
decl
or
enter
data16
mov
call
idiv
insb
push
push
out
movb
sbb
outsl
cmp
pop
popf
xor
or
das
mov
fcmovb
push
loop
jbe
mov
push
dec
popa
jg
hlt
add
add
sbb
js
sub
fwait
fs
rcll
outsb
imul
cwtl
sbbl
jmp
repnz
gs
mov
xchg
inc
mov
mov
test
sbb
jl
mov
incl
sbb
and
mov
or
in
pop
or
test
mov
imul
or
call
push
pop
mov
mov
call
lock
test
fisubrl
out
decl
add
and
push
imul
insb
shlb
push
into
lahf
cmc
inc
imul
cmp
out
mov
test
stc
mov
mov
fwait
sahf
jmp
cwtl
test
add
xchg
xchg
add
sbb
ljmp
cmp
adc
push
push
out
push
movb
adc
and
daa
movsl
or
lock
and
negb
mov
sti
mov
test
sbb
mov
stos
pushl
dec
outsb
push
andb
push
dec
mov
jecxz
ficoms
das
clc
pop
std
rcl
inc
test
outsl
adc
ljmp
ret
fiaddl
pop
and
xchg
cmp
mov
cld
shll
dec
jne
fsubrs
lcall
movsb
adc
in
mov
add
add
inc
in
mov
testb
ret
mov
out
ljmp
rclb
cmpb
inc
lock
push
out
lock
fadds
fiadds
loop
adc
sub
jmp
push
adc
add
cmp
inc
push
testb
mov
sti
lcall
cmpsb
das
stc
das
add
or
pushf
xchg
pop
cmp
test
sahf
call
mov
xchg
ljmp
data16
add
pop
retw
aad
add
lods
movsl
push
out
clc
pusha
testb
shll
in
jecxz
sub
jl
sahf
jb
jae
iret
ja
incb
ljmp
out
inc
cltd
xchg
inc
pop
iret
lods
mov
add
or
xor
mov
outsl
inc
lret
lds
hlt
xchg
dec
xchg
mov
xchg
adcb
sub
enter
mov
cmpb
push
sar
mov
xlat
jns
gs
push
das
in
loop
push
pop
enterw
lret
mov
pop
jle
ljmp
les
cmp
mov
jge
xchg
jmp
cmpsl
mov
push
mov
or
push
xchg
pop
jnp
lods
stos
sub
popa
stos
jmp
lea
jae
lahf
xchg
add
clc
fisubrs
test
in
mov
test
js
fcomi
mov
mov
fs
pop
push
mov
sub
orl
subl
xor
lods
les
jmp
push
and
pop
add
push
push
mov
addb
xchg
fsubrl
imull
decl
subb
add
add
and
pushf
roll
into
fsubrp
in
adc
mov
or
cmp
insb
shrl
sbb
adcb
pop
or
and
jnp
mov
adc
pop
push
lock
push
sbb
lahf
jl
jecxz
pushf
pop
dec
push
xchg
or
inc
xchg
push
xchg
or
decl
bound
push
es
out
sbb
xor
inc
scas
adc
jo
test
ljmp
inc
pop
mov
imul
inc
fwait
xor
scas
sbb
pop
jmp
cld
xlat
test
jge
lods
test
mov
jge
mov
xchg
or
xor
push
out
add
xor
adc
pop
inc
jmp
ljmp
inc
push
das
aam
dec
or
call
and
rcl
and
xorl
sbb
pushf
push
ret
fildll
inc
pop
das
add
mov
sbbl
pop
lahf
add
jne
fwait
rcrb
aas
insb
lds
sbb
fst
in
inc
je
in
pusha
shll
cmp
and
sbb
xor
leave
inc
and
nop
xchg
dec
mov
push
gs
lret
pop
mov
dec
mov
or
pusha
xorl
cltd
cmp
popf
cmc
add
lret
push
xor
or
cmp
decb
pop
xchg
mov
push
icebp
jmp
mov
rcll
push
add
ja
mov
or
ljmp
das
das
mov
daa
xor
pop
imul
addr16
ljmp
inc
pop
pop
inc
scas
push
sbb
jbe
into
insl
jo
sbb
push
sbb
cmp
adc
addr16
mov
aas
jecxz
aas
push
inc
ja
lcall
jl
mov
ss
dec
repnz
test
inc
daa
inc
ret
add
das
adc
cmp
jl
adc
fcomip
cmp
sub
add
orl
mov
mov
dec
xor
add
jg
stos
sar
push
rolb
inc
daa
pusha
shrb
inc
bound
mov
inc
mov
inc
mov
add
test
in
push
xor
push
mov
fwait
in
lcall
pusha
lcall
popa
in
fbld
xchg
ss
test
ds
pop
andb
out
pop
jae
ljmp
out
xchg
xor
negb
ja
cmpsl
in
xor
mov
clc
aaa
sbb
xchg
aaa
sub
aas
testb
imul
mov
cmp
pushl
dec
negb
in
enter
sub
jo
mov
sbb
fildll
pop
inc
inc
scas
adc
ljmp
stos
cmp
jae
xor
xchg
es
cmp
mov
sti
ss
sbb
or
xor
je
xchg
pusha
clc
shlb
xor
xchg
inc
std
jl
xchg
aaa
sbb
js
pusha
jae
pop
cmpsb
push
dec
ret
xchg
cs
sti
jg
mov
clc
sub
daa
fadd
pusha
movl
mov
jecxz
mov
lock
sub
das
pop
js
pushf
aaa
cld
sub
mov
push
mov
idiv
aaa
fcmovnb
mov
outsb
cwtl
pshufw
divl
cmp
add
sub
pop
push
shr
rcrb
cltd
cmp
mov
mov
mov
push
int3
iret
jl
mov
movb
xchg
aaa
fs
xor
ds
repz
pushl
pop
cmp
or
cmp
scas
sub
xchg
stc
leave
push
jb
ss
jnp
dec
je
jmp
mov
neg
mov
mov
dec
xor
push
cmp
addr16
cmp
sbb
clc
mov
mov
js
inc
mov
clc
daa
nop
sbb
dec
or
mov
inc
xchg
cmp
xorb
clc
mov
fdivrl
xchg
sub
mov
loopne
sti
pop
ud0
jg
inc
pop
and
inc
pop
xor
mov
mov
rolb
jg
mov
lods
xor
lret
jmp
int
je
mov
decl
ret
xchg
mov
imul
aaa
mov
ljmp
push
dec
jg
cmpsb
aas
incl
xor
inc
mov
out
jp
pop
jbe
pusha
addr16
stc
fsubs
clc
lahf
outsb
lahf
push
mov
iret
mov
xchg
aas
xor
cld
mov
xchg
aas
xor
incl
mov
xlat
mov
loope
mov
dec
lahf
adc
inc
mov
shrb
adc
jmp
shll
mov
or
jg
cmp
call
and
sbb
fs
adc
cmp
mov
fcmovnu
lcall
jno
mov
jne
loop
stc
push
clc
sub
scas
push
movsb
leave
cli
pushl
loopne
stos
adc
push
test
xchg
dec
xchg
push
pop
jmp
xlat
mov
lret
fidivl
lcall
cmp
aad
inc
lods
sbb
push
lret
aaa
scas
push
mov
decl
out
lds
fsubrs
sub
in
sbb
enter
sub
int3
cltd
xor
lcall
popf
shlb
sbb
into
mov
int
ljmp
jge
ja
cld
call
movsb
inc
cmpsl
fidivrs
jns
push
ds
push
jecxz
sbbl
lahf
insl
incl
and
test
aaa
xchg
aad
das
in
in
hlt
xor
mov
rol
cltd
add
dec
sbb
mov
cld
hlt
lea
dec
mov
aas
dec
es
or
dec
pop
mov
frstor
out
outsb
pusha
lcall
mov
stos
test
mov
xchg
les
mov
push
jmp
cs
or
jmp
sbb
orl
enter
jmp
loop
xor
fcmove
xor
add
adc
add
mov
dec
mov
sub
lret
shrb
lret
xor
lret
mov
aaa
out
outsb
add
mov
cli
cmp
cmpsb
jno
aaa
roll
int
loop
push
jmp
xchg
scas
mov
jl
in
mov
rorb
inc
inc
jae
movsb
rcll
lahf
jnp
call
adc
iret
dec
out
iret
sub
inc
push
out
mov
ds
and
sar
sbb
incl
add
and
movsb
rcll
outsb
shll
test
mov
lcall
andb
mov
cmp
adc
adc
xorl
sbb
adc
sbb
mov
lds
and
sbb
pushl
mov
aad
or
mov
repnz
cld
sbb
movb
jb
xor
and
xor
pushl
jmp
into
xor
and
sub
stos
cmp
mov
sub
cmp
pop
mov
in
xor
js
jbe
lods
sbb
fwait
popa
mov
inc
push
incl
sbb
aaa
push
iret
lret
test
and
lock
fcomip
jp
dec
and
std
or
mov
sbb
mov
xchg
nop
bound
pop
and
dec
fs
incl
cmp
adc
ret
outsb
inc
insb
and
mov
sbb
adc
fadds
jne
ljmp
shrb
dec
sbb
fmul
mov
hlt
jg
and
daa
inc
mov
aam
int3
xor
clc
inc
lcall
lcall
mov
mov
xchg
fnstsw
imul
push
scas
jp
jg
dec
std
push
divb
inc
cmpsb
mov
cltd
cltd
push
push
mov
clc
fidivl
cmp
cmp
ret
testl
pushf
ljmp
ljmp
push
ljmp
out
add
lods
das
stos
and
ds
insb
mov
dec
hlt
inc
or
inc
mov
mov
xchg
add
push
orb
mov
movsl
pushl
pop
subb
int3
lds
mov
pop
lock
js
pop
sbb
aam
mov
cltd
jo
and
cmp
pop
lahf
addl
jbe
xchg
mov
sti
dec
cwtl
into
movsb
xor
in
scas
movsb
mov
lret
dec
repnz
mov
pop
lcall
in
into
xchg
mov
cmpsb
mov
inc
jae
dec
arpl
rorl
inc
sub
imul
cmp
out
jne
sub
clc
movsb
repz
rcrl
sbb
mov
cmp
xchg
mov
ljmp
cmp
pop
dec
dec
xchg
adc
loope
cwtl
rolb
pushl
loopne
add
or
test
mov
lahf
and
popa
sbb
rolb
mov
cmpl
jbe
mov
push
xchg
adc
filds
ljmp
shll
sbbl
mov
cmp
repz
add
nop
cmp
sbb
and
jle
popa
jg
inc
mov
ret
push
rclb
movsl
inc
jne
dec
popa
mov
loope
mov
dec
xor
and
inc
mov
ljmp
inc
xchg
bound
das
popl
sbb
shrb
jns
imul
js
xor
sbbl
out
or
fcomps
decl
daa
jge
push
mov
adc
and
loop
inc
inc
sbb
sub
nop
add
decl
push
rcrl
enter
test
jecxz
iret
mov
imul
mov
mov
punpckhbw
push
scas
jg
push
data16
test
popa
pop
push
sub
ljmp
cld
lret
imul
push
in
iret
pop
xchg
xor
fbstp
jmp
add
cmp
ljmp
dec
mov
daa
lds
sbb
add
sub
je
dec
scas
cmp
mov
bswap
cltd
mov
inc
mov
insl
push
xor
pushf
shlb
inc
cmpsl
jmp
mov
insb
xchg
movb
mov
jno
lcall
notb
mov
mov
pushl
fcoml
dec
mov
popa
cmpl
inc
add
lret
mov
sbb
rol
xor
jbe
xor
outsl
xorl
xchg
xor
test
ret
xor
sub
push
pop
or
mov
add
mov
inc
insl
pop
imul
call
testb
push
push
lods
es
xlat
pop
test
adc
pop
dec
sbb
call
push
les
pop
stos
addb
mov
fisttps
xchg
push
sbb
jmp
sub
lods
add
pop
sub
pushf
hlt
js
insb
sub
mov
sub
mov
cmp
xor
push
mov
xchg
pop
sub
push
and
sbb
dec
sbb
incl
jno
push
rclb
push
push
test
pop
outsb
test
scas
jne
cltd
mov
sti
in
cwtl
ret
add
rolb
add
or
lcall
mov
pushl
jl
dec
push
inc
add
sbb
test
pusha
insl
pop
dec
dec
xlat
push
mov
pop
test
pop
mov
ja
dec
aad
pop
aas
mov
lahf
adc
mov
mov
insb
int
pop
ret
sub
push
push
ret
loope
pusha
jmp
adc
pop
xor
xchg
lahf
ja
das
mov
or
dec
mov
iret
sub
cmp
push
out
lods
mov
aas
fldcw
dec
sahf
jg
xor
and
cmp
fcompl
mov
int
mov
inc
test
aad
or
ss
iret
sbb
jns
fwait
nop
jmp
mov
rcl
push
xor
call
jae
cltd
inc
add
push
inc
pop
cmp
mov
add
movups
add
lret
orb
jg
sub
jns
jae
iret
jb
fbld
sbbl
test
inc
out
adc
fidivs
fucomp
cmp
cmp
ja
decl
cwtl
and
insb
xor
fiadds
xchg
pop
scas
arpl
repz
pushl
popa
shrl
pop
in
popa
pop
inc
pop
lods
sub
ret
push
jb
fcoms
mov
decb
ss
je
ret
fcmove
mov
pop
pop
arpl
lcall
cmp
lods
mov
mov
lcall
ljmp
dec
gs
xchg
xlat
std
int
jg
imul
pop
fs
xor
int3
xchg
notl
lcall
lahf
iret
sahf
add
xor
push
xor
insb
push
out
addr16
shll
inc
leave
add
jl
pop
sub
inc
jp
cld
xor
mov
cmpsb
cmpb
loopne
and
repnz
mov
jecxz
mov
cmpsb
nop
daa
add
mov
mov
inc
or
loop
clc
lret
mov
jb
dec
in
mov
ss
ljmp
pop
outsl
mov
jmp
sbb
add
add
into
sub
xchg
dec
or
push
xchg
cld
int3
aas
nop
add
fcomip
inc
push
lock
push
out
sti
scas
enter
jmp
push
int3
fsubr
ret
dec
jmp
mov
pop
dec
or
pop
jns
xor
mov
sub
decl
insl
or
mov
jbe
in
scas
loop
or
cld
pushl
inc
or
dec
push
jo
and
jp
add
and
je
push
mov
arpl
outsb
out
dec
insb
out
fcmovbe
cmc
scas
push
cs
or
or
or
loop
sti
decl
pushf
push
fmull
pop
ficoml
inc
mov
push
push
sub
mov
or
xchg
stos
in
scas
in
or
dec
sub
decl
push
pop
sub
sbb
add
loop
push
insb
mov
xor
decb
add
adc
icebp
add
pop
pop
adc
call
pop
push
push
or
pop
jno
aad
or
jmp
ret
push
jecxz
test
call
or
mov
sub
hlt
dec
jecxz
fs
dec
loop
dec
negb
das
or
lds
pop
push
pop
xor
std
jg
test
fmuls
rorl
mov
sbb
loop
dec
jmp
jmp
mov
add
das
lret
adc
mov
mov
repnz
roll
test
outsl
out
nop
mov
mov
sub
push
or
xchg
hlt
and
idiv
incl
icebp
add
dec
sub
xor
shrb
xor
fxch
icebp
and
jmp
inc
push
push
je
sbb
jno
dec
add
push
push
rcll
lock
jo
outsb
shrb
daa
roll
pusha
repnz
mov
jg
or
adc
or
dec
add
call
lods
adc
lock
add
cs
sub
jno
ss
je
xchg
lods
test
outsl
mov
mov
dec
shrb
imul
rcr
inc
cli
jno
sub
pop
out
dec
in
push
dec
in
lcall
or
sbb
out
fwait
adc
loope
scas
dec
sub
xchg
xchg
fwait
std
pop
or
xor
into
sbb
push
xor
add
icebp
in
lock
sub
pop
push
scas
jp
or
adc
xor
sbb
add
sbb
das
and
lock
jno
repz
aas
push
mov
mov
je
jmp
lods
mov
decl
dec
ja
out
stos
test
lcall
mov
mov
mov
sub
pushl
in
add
lret
mov
inc
sbb
push
in
mov
in
movsl
jns
dec
gs
pop
jmp
mov
sub
push
popa
jo
jae
xlat
repz
xchg
adc
cmp
lret
mov
iret
icebp
sbb
rclb
sbb
push
or
dec
scas
dec
js
scas
andb
inc
mov
dec
loop
adc
js
xchg
jne
push
and
call
inc
iret
xchg
sub
lods
out
push
add
ret
ljmp
cli
cmpsb
mov
push
or
rolb
popf
cmpsl
or
jae
mov
stos
repnz
ret
mov
push
movsb
in
jp
in
inc
ficompl
outsl
dec
imul
lds
or
cmp
dec
xor
add
mov
xchg
sub
or
push
add
pusha
repz
or
clc
push
pop
cmp
cmp
popl
ljmp
jle
pop
aam
inc
nop
cmp
dec
fptan
push
mov
fisubrl
adc
mov
rorb
repz
lea
inc
jne
pop
adc
add
incl
xchg
sbbl
push
test
aam
psrlw
jl
es
xchg
sbb
xor
inc
push
mov
push
jne
lret
or
mov
jecxz
into
sbb
aas
lahf
sarb
inc
add
clc
inc
adc
inc
cmp
inc
std
xor
mov
popa
fimull
cmpsl
xchg
icebp
jmp
jp
and
cmp
cmpsl
loop
out
out
mov
in
mov
xor
mov
inc
andb
sub
xchg
cmpsb
sub
call
dec
loop
jmp
lock
push
lock
rolb
jo
scas
jb
xchg
adc
ret
mov
pop
lock
repz
xor
lock
lods
pushf
push
decl
add
insb
or
cwtl
add
lcall
pop
inc
jo
xchg
aad
cs
fmuls
leave
outsl
cli
fisttps
sub
xor
adc
incl
adc
sbb
scas
sbb
addr16
push
pop
sub
pushl
icebp
out
and
call
daa
mov
lcall
adcb
std
lcall
xchg
and
repz
mov
sbb
shll
and
add
add
push
hlt
push
pop
fcomip
into
cmp
push
in
push
jne
pushf
mov
xlat
sbb
or
push
leave
out
add
ljmp
int
jo
jecxz
fcomi
cmpsb
mov
mov
loopne
incl
cmp
lret
testb
ljmp
pop
xor
and
test
push
sub
xchg
cmp
jg
decl
mov
insl
sub
inc
pop
mov
hlt
mov
sbb
inc
inc
outsl
clc
ljmp
pop
shll
mov
push
insb
dec
push
push
or
notb
popa
imul
push
jg
adc
sub
mov
call
loop
in
mov
bound
jno
std
outsb
popa
jge
add
jne
xor
mov
dec
stc
push
cmp
adc
xchg
fldcw
sub
cmp
xor
mov
aaa
lods
out
repnz
cmp
in
pop
dec
sbb
sub
push
jge
mov
bound
cmpsb
jmp
sub
dec
xor
add
movd
pop
dec
popf
in
outsl
test
outsl
std
push
dec
fisubrl
mov
jno
xor
push
cltd
add
in
push
mov
push
pop
test
lcall
outsl
and
sbb
pop
xchg
scas
xchg
in
call
or
inc
push
add
dec
clc
pop
inc
xor
mov
pop
mov
popf
sub
pop
in
adc
adcb
lock
mov
add
in
dec
pop
dec
cli
lcall
jne
mov
cmp
aam
sub
push
xor
clc
cmp
pop
decl
and
ja
jp
into
push
dec
push
mov
aaa
insl
test
adc
and
ljmp
mov
ljmp
ss
xchg
pusha
div
pop
mull
xchg
xchg
fmul
icebp
dec
inc
jne
icebp
into
push
test
jl
data16
pop
and
mov
loopne
decl
jg
pushf
movsb
push
insb
in
push
xor
inc
pop
sub
outsb
cmp
cmp
xchg
mov
hlt
jg
call
ror
add
cmp
pop
sub
aam
pop
cmpsl
xchg
mov
lret
shr
test
sub
pop
cwtl
mov
cmp
push
sub
pop
fldcw
stc
push
loope
shld
test
jae
xlat
fsubrl
out
mov
sbb
xchg
inc
cmpl
stos
jg
cmc
mov
xlat
sbb
addr16
mov
mov
pop
jbe
insl
or
std
mov
sub
je
lods
xor
add
call
sub
inc
lret
adc
push
scas
dec
cmp
and
mov
icebp
daa
sub
dec
mov
jg
sub
mov
popfw
xchg
mov
push
adc
arpl
lcall
das
mov
mov
dec
bound
pusha
popf
or
push
loopne
mov
stos
or
fisttpl
push
or
lods
mov
push
or
repz
push
pop
mov
call
sub
out
test
xor
push
mov
sub
cwtl
cmp
cltd
add
std
xchg
pushl
add
xor
clc
mov
mov
mov
mov
or
mov
pop
repz
mov
cltd
fdivl
sbb
int3
mov
decl
in
mov
in
fildll
repz
rorb
push
call
lcall
imul
lea
cmp
xor
or
mov
decb
mov
pop
push
mov
push
jle
dec
int3
enter
jg
push
mov
pop
xor
jo
push
sets
cmp
lods
loope
jg
ljmp
xlat
icebp
lods
rclb
fidivl
mov
mov
loopne
clc
ljmp
stc
and
jae
adc
sbb
jae
popa
shlb
push
mov
decl
cltd
inc
mov
or
mov
es
lcall
or
dec
pushf
jo
cmc
jg
and
mov
sub
fstl
aam
pop
sti
popf
dec
cmp
jmp
mov
adc
pop
decl
lea
xchg
mov
sbb
dec
addr16
xlat
jb
sti
xchg
mov
sbb
sbb
lret
and
cmp
idivb
inc
sar
cmp
aas
stos
jb
lods
cmp
xchg
jbe
faddl
decl
fdivp
mov
sbb
daa
sbb
fldt
push
clc
jp
xchg
mov
adcb
fwait
cmpsb
dec
lods
add
pop
lods
and
daa
mov
gs
sarl
fstpl
pop
inc
out
cli
inc
push
outsl
add
adc
loopne
mov
popa
ss
ret
mov
in
jmp
aam
lock
mov
mov
cmpsl
and
or
arpl
aaa
xchg
sub
test
jae
repz
add
arpl
jbe
mov
cmc
inc
cltd
cmpsb
popa
test
pop
and
int
cwtl
sub
dec
push
cmp
mov
mov
loop
lahf
mov
add
test
jnp
fcomi
mov
lock
or
or
cli
and
add
ds
cld
lcall
jmp
les
xchg
sbb
pop
ficomps
popf
xor
test
rcl
sti
sti
fwait
mov
pop
sarb
sub
dec
sbb
sub
call
jp
or
dec
jns,pn
and
les
xor
sub
pushl
pop
sbb
addr16
dec
add
push
ficomps
mov
push
xor
shlb
add
js
out
clc
jg
xor
add
leave
mov
xor
cli
int3
mov
std
fiaddl
je
ljmp
cmpsb
mov
and
mov
ds
pushf
mov
add
push
adc
popf
jle
pop
jle
sarb
cmp
aam
pushf
inc
repz
lret
imul
xchg
mov
filds
mov
sub
or
data16
leave
call
ficomps
cmp
rcrl
push
and
mov
mov
inc
push
jno
mov
mov
fisubrl
jg
or
call
xchg
shl
mov
sub
das
pop
mov
push
cmpsl
insl
jecxz
sbb
mov
adc
pop
pop
int3
addr16
lds
or
push
test
jge
sbb
call
adc
mov
jne
iret
stc
mov
cmp
pop
cli
inc
loopne
fsubrp
xchg
stos
fisubs
ljmp
push
clc
xchg
scas
inc
mov
adc
sbb
mov
push
or
in
add
jo
or
sub
pop
icebp
rclb
ficoml
pusha
sbb
push
sbb
fs
add
decl
shl
inc
into
inc
nop
sbb
xor
pop
ljmp
call
repz
imul
pushl
aas
cmpsb
add
mov
dec
cwtl
sbb
test
mov
jo
jmp
loop
ljmp
xor
sarb
clc
les
test
jmp
xor
ljmp
jmp
sub
scas
jne
push
loope
scas
cmp
sbb
cmc
stos
shlb
stos
adc
push
mov
and
movsb
mov
jno
std
in
aaa
je
addb
lcall
add
cmc
cmpl
jecxz
mov
loopne
popf
pop
lahf
rclb
fnstsw
mov
pusha
mov
scas
fwait
out
jmp
repz
jne
mov
inc
pop
cwtl
out
mov
inc
jne
sub
addr16
std
cwtl
sti
arpl
fs
fistpl
mov
fwait
sbb
out
je
cld
ret
sti
pop
sub
daa
sbb
or
jb
adc
xor
xchg
mov
and
inc
adc
adc
out
inc
mov
mov
push
cs
nop
inc
adc
xor
pop
mov
rorl
jp
sbb
and
ljmp
decl
mov
push
push
test
dec
pop
cmp
or
dec
sub
ljmp
and
cwtl
popa
mov
sub
xchg
cwtl
cmp
in
pushw
pop
mov
and
pop
pop
cmc
cmp
jb
push
push
lahf
outsl
jmp
cmp
pushf
sbb
popa
js
inc
jbe
lds
andl
call
sbb
je
sbb
cwtl
xchg
imul
push
push
xchg
lds
pop
decl
inc
cli
popa
lea
mov
fdivl
roll
jno
pop
jmp
fldt
mov
xchg
cmpsl
sbb
adc
jae
cmp
icebp
cmpsl
sbb
sbb
pop
ja
cwtl
repnz
ljmp
xchg
jg
insb
cld
sub
fildll
addr16
loope
sbb
subb
enter
xchg
or
lcall
call
fiaddl
xchg
mov
movsb
mov
or
mov
push
lock
dec
push
pushl
xor
cwtl
jo
aas
sbb
ret
dec
movsb
push
pop
lcall
dec
aas
cmp
push
cs
call
sahf
dec
mov
pop
xchg
pop
and
xchg
adc
adc
push
cli
sbb
jae
dec
fcomip
addr16
inc
jo
jns
ljmp
lahf
cmp
jne
mov
mov
push
bswap
cltd
movsb
pop
add
adcb
lcall
pop
xchg
cltd
push
cmpb
es
mov
mov
mov
lods
mov
mov
xorb
pop
fnstsw
push
cmpsb
lods
ret
pop
jle
xchg
mov
mov
jmp
lea
lds
jae
mov
push
add
dec
test
test
test
incl
push
mov
pop
jmp
sti
adc
add
xchg
outsb
clc
fnstcw
mov
ljmp
js
jmp
mov
and
les
out
jecxz
adc
fst
sub
divl
dec
mov
pop
fsts
movsb
repnz
cs
pop
pop
jne
mov
aam
ljmp
lods
cmp
xor
movsb
icebp
movq
lret
pop
clc
cmpsl
adc
inc
cld
pop
sbb
pusha
inc
sbb
mov
pop
dec
xor
xor
lcall
sbbb
pop
cmp
or
jecxz
aaa
pop
andb
les
cmpsl
push
shlb
repnz
test
movb
and
inc
lds
cld
je
sub
push
xchg
push
xchg
add
imul
aam
fbld
push
repnz
cmp
cmp
sbb
sarb
out
popa
int
or
scas
push
push
or
out
mov
and
mov
mov
xchg
fcomip
inc
sub
fldcw
addr16
mov
add
pop
mov
call
orl
cmp
and
in
mov
call
dec
das
ja
mov
cli
inc
es
and
scas
push
xchg
inc
imul
pop
lret
sar
cwtl
addr16
xchg
add
test
mov
push
lcall
sti
sbb
addr16
add
ss
data16
rclb
xchg
mov
ljmp
push
movsl
movl
xchg
aaa
and
dec
cmp
mov
ss
dec
lods
test
xor
add
sti
data16
call
pop
sarl
dec
jb
push
xchg
sub
add
movb
fisttps
pop
enter
mov
cmp
add
lcall
leave
test
loop
sbb
push
or
ret
rcll
sahf
pushl
lret
dec
insb
inc
or
dec
stos
xlat
dec
mov
adc
add
rorl
pushl
cmpsb
and
push
adc
es
xor
lods
and
add
cmpsl
les
loopne
cld
call
dec
push
push
pop
ret
inc
jecxz
pop
out
setne
or
adc
jg
inc
xor
test
dec
pop
movsl
add
xor
ljmp
push
lea
xchg
stos
loop
dec
orl
mov
cmp
pop
sti
inc
sar
fsubrl
inc
test
add
push
cmp
mov
and
sbb
bound
sbb
add
add
subl
mov
mov
and
call
rcrl
call
loop
in
ret
mov
add
lods
outsl
xlat
cmp
popa
push
xchg
fdivrs
push
std
xchg
test
lahf
ljmp
adc
cmp
incl
xchg
aam
or
sahf
pop
mov
xlat
sbb
sbb
xor
insl
aaa
inc
aaa
ljmp
mov
mov
and
lock
cwtl
xchg
fsts
xchg
push
jns
xchg
mov
ljmp
jmp
adc
sub
bound
add
xchg
cmpb
scas
ljmp
push
pop
les
lds
popf
scas
fs
call
or
jns
xor
dec
push
pushf
shll
lods
jl
aaa
shlb
ret
mov
sbb
adc
pop
cmp
bound
cmpsl
jle
loope
push
and
stc
pop
in
ret
orb
imul
subl
call
pop
adc
ja
ljmp
fidivrs
xor
aaa
jbe
add
lock
js
jecxz
lcall
mov
and
pop
insb
arpl
in
dec
fidivl
pop
in
mov
sub
rolb
pop
not
pop
mov
pop
sbb
hlt
testb
push
std
jle
test
xchg
dec
xchg
cmp
inc
mov
clc
scas
pop
jo
inc
xchg
clc
dec
jge
add
data16
fisubrl
cwtl
mov
adc
pusha
cmp
mov
fdivrl
sub
mov
jl
nop
mov
mov
clc
lcall
sbb
xchg
scas
sbb
cmc
jecxz
ret
xor
aas
lahf
mov
xor
xorb
imul
xchg
push
sbbb
mov
call
inc
jne
arpl
pushf
or
jmp
inc
loop
das
cs
repnz
or
jl
xchg
mov
popa
inc
push
mov
es
in
icebp
fistps
enter
and
push
pop
mov
bound
inc
das
and
insl
cmp
mov
fsubl
ficoms
pop
jns
fdivp
jmp
push
cmpsl
subb
int3
xor
jg
xchg
sahf
mov
ljmp
cmp
lods
daa
imul
enter
push
or
dec
leave
cmp
scas
or
jg
xor
movl
mov
insb
sbb
mov
imul
push
adc
pop
incl
mov
mull
mov
leave
insl
out
mov
adc
mov
lret
dec
or
pop
lcall
sub
inc
cmp
fnstenv
int3
aam
inc
inc
jns
dec
add
adc
dec
xor
mov
push
adc
sbb
cmp
jns
repz
xchg
ret
enter
ret
aaa
fisubl
call
add
in
pop
dec
std
inc
scas
mov
fsubp
popa
cmpsl
xchg
mov
mov
inc
sbb
test
dec
push
shlb
nop
je
mov
imul
cmc
ja
cmp
pushl
pop
imul
mov
pop
inc
or
push
add
jge
jge
xorl
sbb
add
pop
add
loop
cld
stc
repz
jp
push
pop
scas
inc
inc
fsubp
js
gs
mov
fs
push
aas
xor
aaa
jge
dec
mov
xor
mov
push
adc
inc
add
loop
pusha
push
sub
je
cmc
hlt
or
nop
inc
popf
pop
pop
cmp
rcll
dec
inc
decl
sub
or
incl
jne
jo
push
ss
dec
sar
ss
jle
and
sub
inc
push
out
adc
push
dec
cli
inc
jne
lret
xorl
test
call
pop
js
push
aaa
gs
adc
mov
imul
orb
xor
pop
ret
jg
jg
jbe
or
lods
cmpsb
push
cld
adc
push
jo
incl
notb
pusha
push
push
adcb
popa
adc
das
insb
inc
mov
das
sbb
pop
push
pop
sti
add
ret
mov
inc
movb
cs
outsb
lret
push
decl
andl
enter
dec
test
and
mov
cmp
test
incl
cli
rorl
xor
cmp
push
int
cmp
sub
jmp
mov
sahf
cmpsb
sub
adc
inc
push
test
pushl
pop
andl
mov
divl
jg
push
rolb
aam
aas
sub
push
hlt
incl
jb
push
call
and
inc
cmp
cmp
push
inc
mov
popa
jbe
aam
mov
inc
notl
incl
ja
mov
daa
push
xchg
mov
outsl
and
mov
hlt
incl
jae
or
scas
cmpsl
jbe
jb
mov
or
insl
add
ljmp
roll
addl
stos
icebp
subb
not
cmp
inc
inc
ret
mov
ret
xor
inc
push
cmp
inc
cld
rorl
icebp
ret
add
clc
push
stos
mov
mov
add
das
cmpsb
and
adc
repnz
sbb
decl
jl
pop
cmp
inc
mov
push
xlat
mov
enter
xor
call
rcl
aam
out
sub
ret
loop
loope
nop
lret
fs
incl
cwtl
push
aaa
stc
inc
pusha
das
push
mov
adc
add
mov
daa
mov
xchg
mov
add
leave
mov
jg
gs
popa
add
pushl
cld
out
es
xor
add
hlt
push
leave
xchg
push
cmp
cmc
pop
nop
aaa
inc
sbb
test
inc
pop
jmp
mov
xchg
in
sub
call
pop
je
ja
sbbb
dec
xlat
push
lea
push
xchg
pusha
gs
orb
xor
xor
and
out
cli
add
push
adc
mov
insb
jl
fwait
cld
out
inc
stc
je
mov
mov
outsl
addr16
adc
jmp
sub
add
xor
xor
and
inc
cmp
fcomip
jp
push
or
loope
loopne
adc
add
adc
out
cli
stc
fwait
int3
mov
inc
inc
stos
pushl
cmp
push
inc
jg
sbb
popa
lcall
pushl
pusha
cli
mov
lds
mov
mov
jl
shll
dec
sbb
cmp
sbb
movsl
xchg
jmp
pop
dec
inc
jecxz
lcall
sbb
mov
sbb
sahf
iret
inc
xchg
pop
push
aam
decl
sub
dec
sahf
ret
cmpsl
push
lahf
jnp
mov
std
push
or
pop
dec
dec
lds
jg
pop
in
inc
push
xchg
test
test
test
mov
nop
mov
push
daa
fs
add
mov
cld
cmp
pop
pop
mov
and
fnstcw
push
lcall
sub
xor
mov
sar
mov
push
orl
aad
inc
repz
add
fcomip
jg
cli
mov
inc
dec
inc
cli
pusha
dec
push
ljmp
sub
and
orb
and
lret
jmp
movsb
jg
mov
jl
es
daa
mov
pop
add
popf
out
cmp
aad
sbb
pop
out
mov
ljmp
jae
adcl
jecxz
inc
dec
je
push
dec
xor
pop
push
cltd
dec
xor
sub
pop
pop
int
test
jmp
adc
mov
mov
aaa
mov
jg
sub
inc
adc
xchg
push
push
push
ss
sub
stos
inc
loop
cmp
lcall
subps
mov
inc
inc
andl
adc
lock
fisttps
inc
pop
mov
or
cmp
js
mov
movsb
pop
cmp
daa
lcall
cmp
push
mul
add
adc
mov
push
add
es
dec
mov
pushl
inc
mov
sub
cmpsl
cmpsl
idivb
xor
xchg
jns
cmpsl
pop
dec
or
lcall
xorb
mov
divb
clc
data16
mov
call
add
xchg
pop
loop
insl
iret
add
cmp
jnp
xchg
jb
xchg
ror
fwait
and
xor
popa
js
mov
or
jg
push
test
jns
js
xchg
daa
cmp
scas
jne
pop
clc
das
mov
mov
inc
and
cmp
ret
pushl
push
jo
lcall
lds
lock
in
mov
sub
add
sub
xchg
cmp
sbb
cwtl
dec
mov
inc
mov
incl
mov
add
pop
lods
sbb
mov
jno
incl
sub
and
cmp
adc
xor
sbb
mov
adc
sub
popf
idivb
pushl
xorb
xchg
lahf
loopne
adc
sbb
jmp
pop
cld
lcall
add
arpl
push
lods
jnp
adc
cmp
out
pusha
sbb
mov
push
ja
inc
insl
mov
xchg
mov
and
mov
cmp
mov
or
or
pushf
das
fisubl
inc
cld
decl
stos
jae
loop
xor
xchg
adc
stos
ja
ljmp
jle
add
push
mov
push
mov
and
pop
push
jne
and
call
ja
mov
dec
adc
fidivrl
divb
rorb
imul
ljmp
xchg
cltd
xchg
sub
ljmp
and
movsb
push
adc
lcall
lods
adc
xchg
cmp
shll
sub
icebp
adc
mov
pop
dec
sahf
jo
sbb
cmpsb
mov
frstor
xchg
sub
dec
and
fcoml
aaa
xchg
sar
xor
mov
mov
pminub
ljmp
int
jl
xor
adc
fmul
cmc
mov
add
jmp
nop
add
decl
dec
and
jae
insb
sub
subb
fs
aam
push
and
xor
test
ror
fs
mov
jg
mov
scas
into
cmpl
mov
xor
mov
stos
sbb
cs
imul
test
ret
and
cld
and
adc
push
adc
push
enter
cld
dec
push
dec
cmc
push
shlb
xor
dec
cmp
enter
bound
aam
pop
cmp
stos
pop
ljmp
add
jl
lcall
add
pop
cld
sub
push
call
cld
adc
icebp
add
mov
add
lcall
decl
cmpsb
rolb
cld
add
mov
mov
cmp
std
aaa
cld
stc
sub
clc
mov
cmp
enter
push
add
mov
leave
outsb
xchg
xlat
ret
push
sbb
adc
rolb
negb
push
int
sti
or
bound
xchg
inc
and
in
add
pushf
sarl
jg
dec
pop
es
xor
stos
push
xchg
ffree
or
adc
pop
sbb
xor
sub
clc
call
aad
scas
pop
loopne
jl
iret
inc
pop
shrb
mov
jbe
mov
cmpsl
jne
mov
call
lret
adc
push
xchg
mov
pop
movsb
test
push
mov
jb
jb
pushl
inc
cmp
and
das
into
je
xchg
push
push
push
cmpsl
addr16
jne
pop
push
gs
jge
incl
mov
loope
xchg
push
cmpb
rcl
mov
int
rcrb
call
push
popf
pop
adc
cmp
adc
mov
adc
cmc
ljmp
sub
sbb
ret
ja
cld
sbb
lods
cmpsb
test
movsb
int
leave
lock
sar
outsl
clc
xlat
pop
mov
sub
xor
xor
jo
jg
lock
into
sbb
mov
leave
add
lret
pslld
xchg
sbb
dec
mov
cmp
call
xor
add
and
pop
loopne
mov
std
jg
or
int
jle
dec
push
fadds
add
mov
and
add
push
mov
hlt
call
dec
adc
enter
pusha
add
jp
ror
idiv
xchg
lcall
bound
xchg
stos
mov
rorb
pop
adc
push
sbb
add
repz
push
inc
add
mov
cmp
iret
cmpsl
push
mov
cmp
push
outsl
dec
mov
fisttps
mov
popf
mov
pop
or
cmp
fisttps
adc
xchg
pop
jb
cmp
movsb
push
xchg
out
jl
aam
jecxz
fnsave
cmp
cmp
jge
pop
adc
pop
xor
pop
loope
and
mov
pushf
in
into
enter
ljmp
dec
or
out
inc
and
inc
ret
mov
in
mov
xchg
dec
test
inc
fiaddl
les
decl
js
stos
adc
add
imul
adc
cmp
dec
inc
cli
sbb
xorb
scas
sbb
les
sahf
in
lods
pop
addr16
push
cld
outsl
les
mov
adc
push
int
insb
enter
adc
in
lock
xor
jae
movb
rcrl
pop
shrb
int3
dec
add
pop
sbb
jle
jne
pushl
xchg
and
clc
in
hlt
out
inc
lods
cs
out
jl
call
mov
out
add
push
ljmp
dec
pushl
mov
cmpsl
adc
jo
lods
notl
je
sbb
loop
adcb
jg
xor
imul
add
loop
and
push
ds
int
cmp
std
rcrl
pop
lock
sbb
clc
sqrtps
insl
sub
inc
pop
adc
or
and
out
cli
arpl
xor
mov
mulb
jne
shl
add
int3
roll
lret
dec
popf
rcll
pusha
das
test
test
loopne
mov
popl
jg
in
pop
scas
adc
and
lret
sbb
pop
daa
dec
loop
fnstenv
mov
cmp
pop
pop
popf
sbbb
cwtl
push
xchg
push
jmp
fstps
adc
sti
or
inc
dec
fstp
leave
das
add
inc
add
xor
imul
in
mov
popf
mov
mov
pop
pop
xor
mov
daa
pop
inc
mov
mov
ret
test
push
pusha
test
sbbb
pop
test
pushl
xchg
and
mov
sub
mov
pusha
dec
idivb
in
incl
cmpsb
dec
pop
mov
call
push
adc
or
cmc
movsb
add
gs
clc
dec
sahf
inc
fwait
mov
push
mov
imul
orl
test
cmp
pop
addl
imul
loope
or
jmp
cmp
fs
sub
lods
pop
jns
jecxz
or
dec
push
sbb
pop
insb
add
mov
xor
xor
lock
lcall
decb
popa
lcall
jnp
inc
ret
ja
mov
decl
into
popf
cwtl
adc
mov
xor
jle
negl
adc
das
rcrb
mov
mov
ret
sbb
xchg
cld
call
insb
sbb
lea
sbb
inc
fsubrs
cld
out
enter
cmp
add
xor
dec
adc
icebp
mov
es
and
incl
test
nop
xchg
cmp
pop
or
cmp
ret
test
push
dec
mov
fnsave
into
adc
jl
mov
shlb
push
push
mov
or
mov
into
inc
incb
outsl
mov
push
inc
ret
pop
inc
fcoms
and
ljmp
mov
or
out
sub
push
packssdw
jo
lcall
inc
js
call
ret
daa
dec
add
and
pop
ljmp
adc
mov
ljmp
and
mov
jmp
daa
adc
mov
mov
mov
cmpsl
lcall
pop
cli
repz
inc
in
rolb
stos
dec
mov
add
repz
shll
insb
aaa
ret
mov
in
mov
test
inc
or
dec
xlat
shlb
mov
sub
scas
cmp
into
sbb
inc
ljmp
clc
pushl
std
or
sub
xor
mov
in
push
imul
fucomp
fadds
and
decl
clc
adc
fdivr
cld
ds
mov
sbb
mov
pop
rol
and
aas
jle
imul
incl
mov
add
dec
mov
int3
or
xchg
fidivl
mov
jo
and
in
lahf
jp
pushl
in
pop
inc
dec
and
clc
inc
sbb
sbb
arpl
out
add
or
sar
jg
test
les
xorb
adc
int
push
call
mov
pop
rcll
or
push
mov
std
aad
fimull
sub
dec
test
loop
into
in
mov
add
ret
ljmp
clc
dec
xchg
and
xchg
scas
test
les
push
mov
jmp
mov
clc
ret
mov
push
sub
sarb
ljmp
push
pop
movsl
push
adc
outsl
cmp
movsb
pop
test
call
loopne
or
gs
sub
fcoms
notb
sub
loop
sahf
push
xor
xor
aam
sub
cmp
sub
jg
push
fcomps
xchg
adc
outsb
mov
jg
call
ljmp
jae
rcl
dec
push
cmp
mov
or
inc
jecxz
add
or
or
push
mov
pop
ss
js
sub
and
mov
or
dec
ret
sbb
dec
push
add
inc
mov
or
and
addr16
and
pop
clc
cmp
pop
jmp
das
cmc
fsub
ds
add
cltd
mov
mov
lcall
das
push
sti
and
inc
imul
jg
mov
cmovg
sbb
pushl
ljmp
data16
sbb
dec
xorb
pop
outsb
and
sti
pop
icebp
sbb
mov
jbe
int
and
adc
add
pusha
inc
jmp
outsl
enter
mov
or
push
inc
int3
addb
fwait
add
dec
dec
or
sbb
daa
lea
pop
and
sub
ljmp
cmp
push
mov
je,pn
fmull
in
test
sbb
sub
add
xchg
cmp
cld
mov
and
jno
ljmp
mov
add
in
out
xor
xchg
cltd
out
insb
jns
xor
loopne
push
mov
es
xor
cmpsb
mov
jmp
xor
fsubrs
cmc
js
mov
adc
fwait
add
mov
jg
mov
push
pop
sbb
scas
adc
adc
cmpl
call
and
push
int3
cwtl
mov
xchg
add
or
adc
shrb
or
fmull
movsl
test
xchg
jo
das
adc
fisubl
fsts
or
lock
test
add
xchg
adc
decl
rclb
or
cmpsl
adc
pop
insb
mov
xchg
es
shlb
movsb
loopne
push
adc
adc
pop
and
xor
inc
rcrb
insl
sub
rcr
mov
sbb
mov
js
inc
fimuls
push
push
decl
mov
inc
lock
int3
out
pop
jl
or
and
dec
dec
and
popa
inc
and
ljmp
xchg
pop
sbb
lahf
lock
mov
push
fnstcw
cmpsl
lds
outsb
jno
dec
push
pop
shrb
das
mov
push
ret
cltd
lods
icebp
fldcw
jnp
and
repnz
arpl
cli
lcall
sub
mov
roll
xchg
mov
cltd
adc
out
xchg
ljmp
sbb
js
inc
test
popf
push
lcall
ljmp
test
ds
jl
dec
adc
shlb
add
insl
out
imul
test
xchg
aam
frstor
fdivrs
pop
jmp
stos
mov
mov
incl
add
addr16
std
int3
vmwrite
inc
fnstcw
imul
push
and
outsl
jecxz
add
sbb
out
xchg
mov
or
jnp
lods
rcrb
jne
bndstx
mov
push
inc
movsb
push
pushl
enter
loopne,pn
aaa
rcrl
fstpl
xchg
cli
pushl
movsb
mov
repz
adc
sub
jge
dec
inc
cmp
pushf
push
lcall
inc
xor
push
sbb
fisttps
xor
in
push
xor
mov
add
push
mov
push
cltd
jge
pop
incb
pushf
adc
mov
gs
cmp
daa
hlt
mov
les
mov
data16
cmp
pop
xor
clc
cmpsb
adc
mov
or
jno
call
jg
lods
fisubrl
push
pop
xchg
xor
xchg
scas
sub
jae
jg
mov
add
into
and
loope
mov
cld
inc
inc
push
and
dec
inc
and
stos
int
hlt
mov
in
out
mov
outsb
or
fiaddl
and
decl
mov
aaa
mov
mov
ljmp
in
push
nop
push
and
incl
mov
stc
pop
adc
jns
xor
sbb
addb
lcall
xchg
out
add
cmpsb
inc
lds
call
push
ljmp
bswap
popa
jmp
scas
mov
sub
lea
mov
and
push
mov
xchg
popa
cmpsb
sbb
imul
orb
xchg
mov
call
push
pop
push
sarl
jo
push
nop
fsts
lret
insb
xchg
cmp
add
cmpsl
add
fcmovb
mov
stc
pop
mov
push
mov
jg
pushl
mov
xor
in
lret
push
fildl
mov
ds
mov
dec
cmp
jmp
pushl
dec
xorb
pop
lahf
loope
call
aam
insl
or
pop
or
decl
popa
je
push
loope
mov
xor
lock
mov
test
out
inc
mov
or
addr16
in
das
cli
decl
pop
pop
push
cmc
xchg
fsubl
insl
hlt
test
sbb
incl
cld
ljmp
jno
xchg
sbb
mov
ss
aas
cmp
int3
fsubl
cs
jo
stc
sbb
add
hlt
and
mov
inc
outsb
leave
mov
or
inc
rclb
loope
add
fbstp
mov
rolb
inc
and
jecxz
mov
subl
cmp
push
imull
jne
sub
dec
imul
mov
add
call
add
mov
add
push
inc
mov
xor
jecxz
pop
add
shrl
cmp
and
pop
or
rcrb
adc
mov
xor
mov
mov
adc
pop
sub
ljmp
aaa
inc
ror
xor
jae
and
repz
rorb
stc
and
mov
add
mov
aaa
lock
psrld
mov
add
pop
ret
add
cmp
or
mov
push
mov
and
sub
hlt
jmp
movsb
cmpsl
adc
cmp
fadd
stos
and
stos
inc
call
fcos
mov
mov
or
cltd
and
inc
or
xchg
sarb
sahf
mov
rcll
inc
nop
sbb
xor
int3
mov
mov
jl
or
fidivl
lea
incl
mov
mov
sbb
sbb
sub
mov
mov
push
cli
or
add
daa
jo
push
addl
rcrl
ret
or
nop
mov
cmp
mov
mov
jmp
jae
add
clc
inc
or
mov
push
mov
cltd
or
mov
add
call
mov
and
or
out
or
stos
push
dec
ljmp
ret
pop
cmpsb
mov
mov
or
out
ss
add
subb
push
ljmp
mov
cmpb
push
scas
xchg
xor
es
jne
mov
mov
xchg
cli
mov
xor
mov
popf
add
jns
mov
mov
incl
xorl
add
das
lods
rdtsc
xor
insb
mov
mov
inc
fisttpll
cwtl
decb
pop
imul
mov
inc
pop
dec
jmp
sbb
mov
dec
add
decl
dec
cmp
cwtl
daa
jnp
add
lahf
stos
cs
incl
std
mov
pop
andl
nop
mov
adc
lock
cmp
fcomip
jl
sbb
fcmovne
push
pusha
mov
psrlw
rorl
enter
sbb
in
cmpb
mov
pop
inc
outsb
movsl
pop
sbb
jmp
jp
mov
mov
dec
cmp
dec
fmuls
sahf
cmp
movsl
push
rolb
or
add
sbb
pushf
jbe
adc
push
ror
jnp
sbb
les
dec
mov
add
pushl
in
mov
sbb
enter
fcomps
and
xor
jg
sbb
push
test
sahf
fnstcw
dec
sub
cmpsb
in
mov
js
stos
sbb
cmc
push
mov
cltd
int3
sbb
dec
xor
mov
xor
mov
mov
addb
insb
push
add
xor
nop
mov
inc
mov
push
scas
dec
and
ljmp
rorb
mov
scas
sub
sbb
sbb
cld
in
test
lret
loop
cmp
inc
cmp
aaa
out
mov
pushl
lods
add
in
lea
mov
daa
jge
jl
incl
mov
test
or
std
mov
mov
add
das
clc
incl
test
movl
pushf
cld
lret
sub
adc
shr
lahf
cmp
movsb
sbb
sub
in
mov
inc
js
je
mov
clc
mov
dec
imul
ljmp
out
cmp
push
call
dec
pop
es
inc
and
jg
decl
rcl
cmp
dec
push
pop
adc
roll
rcl
inc
inc
ja
sbb
mov
loope
pop
mov
xor
jg
stos
in
mov
clc
incl
adc
or
mov
pop
xor
add
out
stos
xchg
ljmp
stos
into
or
adc
or
shrl
xor
aaa
jne
inc
dec
push
or
sbb
sub
out
lds
cwtl
mov
jp
dec
cmp
mov
subb
fistpll
dec
or
mov
loopne
pop
mov
add
add
lahf
cmp
ja
out
mov
cmpsb
or
ret
adc
ret
hlt
iret
adcb
or
outsl
or
jle
add
sub
iret
les
ss
jmp
push
pop
in
mov
enter
or
rorb
cli
popa
int
decl
mov
and
push
stos
mov
inc
loop
inc
or
add
incl
mov
and
xor
lret
movsl
jl
dec
adc
rcl
mov
sbb
data16
mov
clc
inc
out
int3
push
pop
jb
cmpsb
icebp
mov
pushf
leave
lret
imul
incl
mov
dec
enter
push
mov
in
lds
xchg
cmp
lds
rcll
pop
inc
xchg
fdiv
push
mov
sub
jl
mov
aad
aaa
bnd
into
sub
cmp
cmp
cld
xor
repnz
incl
xlat
jbe
lea
jl
fcmove
xor
and
orl
mov
mov
fnsave
in
jge
xchg
cltd
sub
mov
cmp
nop
clc
or
cld
rcll
sub
sub
shlb
mov
repnz
add
mov
lods
jg
insb
in
add
xor
das
add
push
sub
xor
cwtl
mov
clc
jg
sarb
pusha
test
jo
fidivs
ja
pop
ret
decb
leave
cli
pop
mov
adc
mov
or
fsts
inc
imul
pop
or
popa
cld
pop
cmpsb
aad
adc
xorb
jg
add
sbb
xchg
xor
aad
aas
cmp
add
pop
xor
dec
cmp
lcall
stos
mov
cmp
leave
push
sub
jg
sub
ficoml
sub
or
ret
cli
insl
lds
cs
and
mov
inc
add
add
mov
sbb
mov
cltd
mov
decl
fadds
lds
pop
add
das
or
inc
cmp
test
adc
push
ret
and
in
xchg
cmc
xchg
ljmp
shlb
cmp
mov
sub
in
push
and
ret
stos
add
call
jb
dec
out
adc
dec
jp
mov
call
das
enter
lcall
into
inc
nop
sub
pushl
mov
and
and
mov
fstpt
jo
and
shll
add
dec
fimuls
mov
push
lcall
jge
scas
xchg
inc
inc
jp
pop
leave
push
pop
loope
jp
pop
ljmp
sahf
mov
mov
test
lds
and
sbb
popa
push
and
add
ret
mov
push
pushf
push
mov
mov
std
push
or
jg
imul
in
or
cmc
adc
mov
mov
lea
std
ljmp
mov
aaa
adc
ds
jle
arpl
inc
ja
sarb
pop
sub
dec
xchg
adc
in
xor
mov
or
jecxz
mov
lret
adc
sbb
push
xchg
xchg
xchg
mov
jbe
add
clc
pop
je
call
shlb
in
mov
dec
xor
jo
sbb
or
adc
xorl
add
stos
add
jg
enter
adc
movsl
int
xor
cmp
call
test
les
nop
jnp
test
push
pop
xor
and
jmp
addl
xor
or
sahf
clc
or
jg
mov
add
cmpl
cmp
push
movsl
push
inc
push
mov
arpl
lods
loope
or
shlb
jmp
sub
jo
idiv
jg
or
push
insl
jno
fstpt
mov
in
into
ror
fiadds
jg
loope
xor
push
push
dec
out
mov
dec
call
sbb
mov
sub
cmpsb
lea
jne
insl
or
call
pop
add
fadds
adc
pop
call
cmp
pop
sbb
adc
mov
loopne
movsb
rcrl
jne
mov
adc
stc
dec
push
dec
mov
push
mov
cmc
cli
xchg
popl
pop
push
lcall
pop
mov
sbb
flds
inc
fstl
out
mov
push
pop
push
sub
mov
pop
mov
jl
insb
jb
sbb
ljmp
and
inc
out
sbb
shl
lock
mov
jo
fdivrl
sbb
gs
inc
test
ljmp
sbbl
and
flds
jle
push
daa
clc
fistps
or
adc
rclb
cmp
xchg
xlat
sub
dec
movb
clc
mov
lods
fucom
or
add
sbb
fadds
xchg
pushl
pop
out
out
mov
push
cs
stc
cmp
pusha
ljmp
mov
insb
shll
pop
pop
hlt
jbe
push
hlt
push
push
lret
push
jnp
movsb
mov
inc
jb
push
incl
jo
enter
ljmp
outsl
imul
xor
xor
icebp
cmpsb
sub
orl
loopne
sub
inc
ss
mov
pop
filds
jg
and
cltd
push
mov
or
rcll
inc
mov
cmpsb
and
popa
dec
inc
jg
repz
and
add
test
mov
adc
xchg
inc
sti
adc
popf
lahf
mov
pop
std
out
rclb
and
adcb
incl
mov
jne
mov
mov
incl
pusha
in
fbstp
imul
or
xchg
stos
cmc
rcrl
insl
push
fcomip
lcall
loope
add
xchg
outsb
dec
ja
push
xchg
fildl
fstpt
test
cmp
xor
cli
mov
fdivr
pop
icebp
jg
je
mov
shr
xchg
push
aam
lds
push
movsb
lret
mov
jmp
push
lahf
mov
pop
and
out
push
loope
ss
mov
fildll
jecxz
sahf
mov
or
mov
fstl
hlt
ljmp
sbb
insl
fs
pop
xor
xchg
call
mov
fisubrl
jle
jg
mov
lret
inc
outsb
or
mov
mov
enter
ljmp
pop
stc
sbb
inc
xchg
push
pop
jge
push
test
cmp
ret
pop
clc
decl
or
mov
outsb
dec
aas
sahf
bound
sbb
or
lret
and
out
call
inc
sub
sbb
xor
add
js
push
out
inc
outsl
jnp
sarl
cli
out
int
cwtl
add
cmp
cs
sti
jmp
cmpsl
lea
inc
cmpsb
inc
insl
add
movb
jne
adc
cwtl
inc
mov
cs
jo
mov
cwtl
call
loop
mov
es
sub
adc
mov
repnz
mov
push
lcall
jg
sub
and
xchg
sbb
xor
xchg
shlb
test
dec
imul
push
and
test
pop
mov
and
dec
out
mov
xor
cmp
les
lcall
fdivp
jo
push
out
inc
pop
and
enter
imul
mov
cmpb
decl
fwait
push
insl
loop
sub
and
mov
jns
cmp
inc
pop
pushf
imul
call
ss
ficoml
arpl
cmpb
inc
mov
movsb
inc
fwait
push
sar
lcall
loope
jbe
fimull
add
loop
pushf
jb
adc
lock
pop
xchg
jmp
ja
dec
or
mov
cmp
call
mov
fadd
mov
js
imul
imul
roll
sbb
and
cmpsl
inc
sbb
and
js
dec
icebp
test
adc
lcall
push
pop
mov
filds
outsl
lcall
or
icebp
push
cmp
in
mov
pop
shl
incl
std
je
jae
sub
pop
cmp
mov
mov
xchg
inc
shrl
outsb
inc
fs
and
inc
push
lds
sbbl
and
aam
mov
push
xchg
pop
sub
and
push
pop
stc
push
sbb
pusha
fstpt
push
clc
jg
cltd
xchg
xchg
inc
jbe
fisubs
lds
popf
lds
cwtl
imul
popf
inc
jns
sbb
incl
dec
jne
fsts
fstps
pop
imul
mov
or
add
dec
jl
fisttps
inc
xchg
lret
inc
adc
out
stos
scas
stos
pop
call
fidivl
push
aad
jle
icebp
jecxz
ds
sub
inc
sub
cmpsb
dec
cmpsb
out
add
jae
pop
out
adc
sub
or
clc
stc
out
sbb
fsts
mov
push
pusha
orb
test
and
fsubrs
call
adc
cmpsb
subl
pop
xchg
xorl
mov
mov
xchg
stos
or
mov
jb
loopne
ds
addr16
lcall
lea
push
push
cbtw
push
pop
lcall
cwtl
jg
mov
pop
xchg
sub
sbb
dec
sahf
hlt
fisttpl
test
shlb
mov
test
nop
ss
and
dec
rcl
call
jbe
ror
or
pop
cmpsb
jl
push
inc
jp
cmp
stos
xor
xlat
push
out
xchg
test
popf
lods
aam
fcoms
jmp
jge
pop
sahf
or
adc
pop
cmpsl
je
sub
sarb
xchg
pop
imul
pop
sar
fdecstp
mov
aad
jle
sbb
outsb
jmp
repz
sbb
loope
ljmp
movsb
outsl
xchg
stos
cwtl
jbe
and
int3
out
pop
sub
mov
jb
jmp
lock
push
mov
mov
push
inc
push
addr16
ds
cld
sub
call
inc
cltd
jae
xor
lods
xchg
neg
loope
xor
decl
int
jmp
out
mov
sbb
xchg
xchg
mov
call
sbb
mov
lds
dec
cmc
jecxz
dec
cmp
cmp
sahf
xchg
popf
test
test
clc
cmpsb
bound
in
in
and
jmp
jns
out
push
repnz
aam
jp
cwtl
sti
in
add
lcall
mov
mov
or
ljmp
lods
test
es
les
lea
push
mov
jae
inc
cmp
jbe
adc
xor
mov
pusha
mulb
inc
mov
fstpt
divb
std
inc
filds
aam
jmp
pop
or
jg
les
fildl
jns
orl
jnp
cmp
lods
and
ja
mov
movsb
jnp
les
jg
mov
fnsave
inc
ss
movl
jg
incl
orb
mov
dec
adc
or
push
jmp
clc
test
ficomps
test
jl
dec
or
jmp
or
mov
sbb
adc
mov
pushf
jg
push
jle
mov
add
inc
add
xchg
jecxz
lcall
sbb
movsl
jb
push
or
sbb
into
jns
adc
js
push
mov
dec
inc
clc
jge
call
sbb
roll
repz
dec
xchg
push
sbb
punpckldq
mov
xlat
inc
stos
jl
sub
ljmp
or
shlb
mov
sbb
push
scas
mov
mov
imul
outsl
jl
rcll
push
imul
fisttps
les
str
dec
pop
shrl
inc
lret
in
movsb
mov
adc
incl
lcall
in
outsb
sbb
adc
ja
jg
and
dec
add
or
inc
pop
inc
add
repnz
sub
ss
decl
cmp
and
ss
lods
sbb
cmpsb
dec
pop
aad
lods
jbe
xchg
adc
mov
and
outsb
aas
icebp
repnz
cmp
xchg
int3
cs
mov
pushl
sahf
std
popa
int
adc
sub
adc
scas
xchg
decl
push
cmp
push
xchg
jo
jecxz
pop
sbb
dec
or
adc
xchg
or
cmp
and
jmp
mov
and
in
lcall
pop
xchg
pop
in
stc
dec
mov
push
loop
fsubrs
faddl
scas
in
jg
aas
arpl
out
scas
mov
cmp
lods
cmpsb
mov
xchg
aad
add
out
xor
xchg
ds
lret
call
push
adc
or
scas
cld
jge
icebp
mov
imul
imul
and
cmc
stos
aas
pushl
pop
or
xor
mov
sbb
add
jmp
or
test
sarb
add
fwait
incl
fisttpll
loop
adc
out
and
jne
mul
push
dec
pop
mov
daa
cmp
aaa
rol
pop
sub
fdivl
sbb
rcrl
incl
sub
pop
inc
div
cmpsb
or
pop
sub
mov
inc
push
mov
lcall
test
or
inc
imul
dec
add
dec
test
adc
xchg
test
shlb
or
movsb
fisubs
pop
outsb
call
and
jp
xor
orl
jle
xchg
cmp
add
jb
mov
dec
mov
popf
jne
fwait
lcall
mov
cld
out
xchg
adc
jno
cwtl
push
mov
in
lcall
pushw
dec
add
cli
sub
fcmovnbe
push
mov
fs
test
decl
mov
sti
cmpsl
push
inc
icebp
dec
push
lods
mov
gs
and
fisttps
scas
jno
dec
insl
sti
movsl
in
mov
cmp
stos
stc
stc
addr16
fsubp
shlb
or
mov
ljmp
jno
ja
xchg
and
add
mov
fucom
vpshuflw
out
xchg
cmp
cmc
or
clc
iret
mov
lea
lcall
mov
icebp
push
test
cld
ljmp
cmp
sbb
mov
pop
inc
xor
lret
jg
bound
insb
dec
cmp
leave
and
pushl
ljmp
sbb
jecxz
xchg
mov
sbb
repnz
xchg
lret
mov
mov
ljmp
in
cmp
jno
dec
divb
aas
out
mov
hlt
sub
ret
std
cmp
push
pop
ror
jmp
cmp
cltd
ja
pop
rorl
and
sub
rclb
pop
fcoml
icebp
pop
add
scas
push
xchg
mov
mov
test
xor
shr
mov
sbb
push
jle
stc
js
mov
cld
outsl
movsb
int3
iret
push
jns
lret
daa
cmpb
aad
push
ja
fildl
mov
jns
lret
cmp
cmp
xchg
jns
jle
aaa
ljmp
push
xchg
arpl
jecxz
and
pushl
jo
inc
dec
fdiv
sbb
cmp
ror
inc
xchg
cmpl
lahf
lahf
int3
xchg
pop
xor
daa
call
jmp
or
sbb
mov
std
adc
nop
mov
jg
push
xchg
pop
push
cltd
rcrl
fucom
in
and
add
lcall
out
dec
mov
pop
insl
loope
push
xchg
xchg
add
sub
lods
mov
ds
dec
leave
aam
xor
clc
aam
adc
xor
aam
mov
int
push
mov
dec
and
push
shlb
push
xor
pop
loopne
loopne
cwtl
and
adc
dec
sub
and
pop
add
xchg
pop
xchg
dec
add
sub
fsts
lret
or
push
jne
fisubrs
mov
push
jns
mov
scas
add
xor
mov
mov
inc
pop
and
jle
dec
lcall
enter
mov
or
mov
adc
test
mov
decl
cmpsb
jge
jmp
adc
movsb
lcall
loope
cmp
leave
sbb
testb
inc
mov
add
fmul
fmuls
fcompl
sbb
pushl
pop
in
adc
inc
insl
mov
lret
mov
mov
call
jle
fnstsw
xchg
push
in
mov
pusha
xchg
mov
sbb
xlat
dec
jno
add
incl
pop
jp
adc
xchg
mov
dec
insl
mov
mov
call
hlt
aas
sahf
xlat
mov
sbb
cmpsb
or
jmp
imul
js
sbb
leave
arpl
rorb
inc
dec
loopne
push
mov
call
loopne
adc
mov
add
data16
sbb
rcrb
mov
mov
clc
enter
and
mov
lret
rcrb
in
ljmp
sub
fiaddl
fldenv
push
sbb
lds
fstps
sub
adc
fmulp
imul
scas
mov
hlt
pop
adc
mov
adc
fsubl
lea
loopne
idiv
popa
stc
dec
pop
sbb
mov
pushf
out
mov
arpl
adc
mov
inc
cmp
and
ds
jae
inc
pop
sbb
lock
shl
sahf
mov
mov
inc
clc
inc
inc
push
ret
sbb
pop
ret
movsl
adc
push
mov
inc
push
rcrl
or
out
clc
jmp
test
in
xlat
push
aad
push
nop
pop
in
jl
pop
or
mov
jmp
dec
fmull
fisttpl
add
lahf
int
arpl
pushl
jl
mov
into
cmpsb
mov
pop
xor
xchg
cwtl
xchg
or
nop
xchg
mov
jp
inc
xchg
mov
and
xor
inc
pop
lahf
add
mov
pop
cmp
lcall
cltd
adc
adc
adc
je
push
loope
movsl
cmpsl
test
add
xor
push
scas
incl
sub
les
jae
aad
xor
cmp
jmp
loop
lods
mov
sub
push
inc
test
rorb
dec
and
lcall
aam
mov
inc
or
inc
cmpb
pop
add
jo
popa
mov
push
popf
lock
sbb
inc
sub
incl
pop
sub
mov
xlat
sbb
lods
and
shrb
hlt
jmp
inc
stc
pusha
xor
mov
sbb
imul
pop
cmpsl
cmc
loopne
mov
jb
dec
jne
loopne
fst
mov
xchg
gs
cmpsb
fcomip
jmp
sub
and
and
adc
or
out
mov
cmp
sahf
dec
mov
pop
jmp
loop
mov
loop
mov
mov
jg
incl
test
xchg
lcall
int
sub
les
test
mov
dec
inc
jbe
xlat
jne
push
popf
pop
jmp
pop
push
int
enter
shrb
cli
shlb
push
sub
pop
cld
std
shll
sbb
int
into
and
inc
jl
gs
jb
mov
pushl
fwait
hlt
xor
push
xchg
int3
insb
jmp
adc
sti
jge
mov
xchg
loopne
incl
icebp
lea
sub
sbb
dec
lea
add
mov
mov
rcrl
sbb
inc
push
stos
hlt
out
pop
sub
pop
push
lods
add
xor
or
sbb
push
or
push
pop
std
push
stos
mov
pop
add
inc
push
arpl
pop
inc
mov
push
cli
or
pop
fisubl
out
test
sahf
movsb
push
lds
adc
mov
jmp
test
pop
dec
xchg
clc
pop
clc
insb
xchg
inc
orb
popa
stos
lcall
lcall
xchg
scas
sub
push
gs
fbld
cmpsl
daa
mov
or
cli
xchg
stos
popf
mov
cmpsb
jmp
scas
inc
call
and
mov
sub
sbb
frstor
loop
adc
adcl
mov
lock
jbe
adc
enter
loop
pop
movsl
adcb
insb
in
mov
ror
dec
inc
stos
push
sub
dec
lods
xchg
lcall
out
pop
rolb
mov
adc
and
inc
pop
addr16
dec
inc
xchg
movsb
es
lcall
sbb
popa
pop
dec
scas
out
mov
ficompl
dec
mov
icebp
mulb
inc
vmovsd
dec
into
int
sar
movsb
mov
cmp
insb
sub
inc
popf
and
mov
cli
pop
test
inc
dec
cmp
out
push
pop
mov
xchg
add
push
lahf
aad
ljmp
call
lods
out
mov
mov
imul
inc
inc
dec
je
popa
or
ljmp
add
and
sbb
push
cmp
or
pop
mov
mov
in
dec
addl
call
sub
mov
int
jp
out
cs
stc
dec
movsl
push
rcll
mov
sbb
in
decl
jo
in
add
mov
dec
jle
inc
mov
adc
icebp
adc
jno
cmp
add
jg
clc
mov
adc
lcall
mov
pushl
ja
adc
je
lret
bswap
shlb
sbb
sbb
xchg
dec
and
or
jp
mov
pop
adc
mov
cmp
pop
out
repnz
ljmp
jmp
scas
sub
in
mov
jb
fldenv
lcall
out
rcrl
mov
hlt
jmp
or
dec
push
xlat
sub
sbb
pop
adc
inc
insl
push
mov
into
cmp
xchg
mov
push
and
icebp
lods
pushf
jno
xchg
mov
lahf
jno
or
sahf
add
imull
sub
add
fstl
push
adc
das
mov
lahf
xorb
push
or
call
xor
adc
pop
mov
xor
mov
mov
push
jno
clc
xor
outsl
mov
xchg
xor
repz
adc
add
out
cmp
das
ficoml
repz
divl
rolb
cs
or
inc
iret
lea
mov
lds
stos
stc
hlt
cmp
cmp
pushl
stc
mov
add
sbb
ret
xor
ja
in
push
jns
xchg
sub
sarb
imul
stc
lcall
dec
dec
ret
loopne
cmpsl
push
or
je
add
pop
out
cmp
jg
inc
jae
xor
jle
repz
mov
iret
hlt
adc
mov
xchg
repz
aaa
mov
sub
xor
repz
clc
sub
xor
push
addr16
sbb
xor
aaa
cmc
push
inc
cmp
mov
ljmp
xor
add
xor
jae
repz
pushl
jmp
test
pop
xlat
xor
pop
scas
xchg
adc
pop
add
xchg
cli
incl
jge
jge
jmp
mov
sbb
jmp
outsl
mov
add
mov
push
add
imull
ss
xlat
xchg
mov
fbld
xchg
jp
stos
popa
and
jg
lahf
cmp
imul
mov
hlt
imul
insb
sti
mov
cld
mov
inc
pop
outsb
pop
icebp
outsb
repz
neg
lock
ljmp
xor
outsb
adc
xor
cmc
mov
repz
pcmpeqw
aaa
aaa
push
adc
repz
jne
dec
mov
add
jae
adc
jne
icebp
ds
cmp
adc
rcrl
pop
scas
mov
arpl
pop
lods
pop
aaa
sbb
xlat
cmc
push
pop
movsb
cmc
das
testb
repz
ljmp
clc
hlt
pop
cmpsb
push
sbb
in
pop
inc
inc
mov
lock
popa
ja
sub
dec
lods
cmc
ficompl
jp
xchg
push
xchg
loopne
call
xor
hlt
jns
mov
pop
mov
and
mov
xchg
mov
inc
mov
pop
inc
pushf
pop
sub
jge
js
or
pop
sti
cmpsb
lret
jbe
imul
adc
pushl
add
repz
insl
sar
push
xor
idivl
aas
fwait
mov
adc
xor
cmc
call
rcrb
or
pop
jno
and
xchg
push
call
cmp
xchg
mov
hlt
sbb
mov
xor
icebp
mov
mov
adc
jg
cmp
sbb
adc
addl
sub
popf
xchg
int
push
mov
or
in
ljmp
xchg
mov
jecxz
sbb
sbb
decl
push
dec
jae
cmp
rorb
mov
push
mov
insb
dec
mov
pop
mov
loope
call
mov
dec
push
stos
js
dec
scas
out
xor
cmp
adc
or
jecxz
xchg
fstpt
push
xchg
incl
adc
mov
lahf
add
aaa
js
jns
aas
cmp
mov
dec
mov
sub
pushf
add
mov
outsb
call
sub
mov
stos
pop
sti
stc
jecxz
adcb
mov
mov
push
int3
adc
jle,pn
test
sbb
mov
add
cmpsb
inc
mov
pop
jbe
mov
xchg
mov
cmpsl
stos
cli
cmp
push
adcl
mov
iret
ficompl
decl
popf
mov
cmp
pop
lods
dec
hlt
mov
cltd
clc
xorb
cld
arpl
jp
rolb
jmp
cmp
out
mov
pop
stc
mov
aaa
pop
mov
ja
pushl
adc
idivl
cmp
jg
lcall
mov
decl
adc
aas
adc
jp
cmp
jns
jg
mov
bound
mov
lods
and
or
leave
and
in
mov
ret
and
pop
adc
popl
push
outsb
lods
pop
sbb
and
adc
call
pop
dec
movsl
stc
sub
stos
and
cld
push
test
scas
mov
add
mov
adc
mov
stc
int3
adc
mov
lcall
mov
cwtl
das
cmp
mov
pop
aas
sar
std
mov
sti
xchg
lret
cmp
mov
xlat
cmp
jns
dec
mov
mov
stos
cmp
out
sbb
pop
ss
mov
std
cmp
popf
lret
aas
lretw
jns
xlat
mov
cmp
xchg
add
inc
cmp
jmp
and
mov
pop
xor
adc
ss
cwtl
xchg
and
adc
jle
cmp
dec
xchg
and
in
repnz
cs
mov
dec
fwait
aaa
imul
xor
decl
xor
test
out
mov
sbb
inc
sub
mov
ja
decl
inc
imul
xchg
pop
sbb
movl
sub
test
mov
jg
gs
ja
sbb
mulb
xchg
out
stos
push
in
pusha
ret
xchg
dec
xchg
lods
incl
push
and
mov
pushf
cwtl
imul
pop
ss
jg
test
sub
bound
cmp
xor
xor
xor
dec
push
addl
std
fidivl
in
into
mov
jecxz
std
jp
call
push
push
fildl
and
sub
mov
call
cwtl
pop
cmp
decl
xor
mov
pop
insl
add
repz
add
cltd
xor
lock
mov
fmul
jno
scas
push
fdivl
insl
sarb
or
cmp
call
sub
add
lcall
and
fwait
push
mov
jle
push
inc
or
jmp
sub
test
cmpsb
sbb
ret
fcomip
inc
stos
nop
push
jno
mov
xchg
mov
pushl
mov
xorl
xor
mov
mov
jg
and
sar
dec
xor
leave
repnz
dec
and
fs
inc
outsb
jp
and
ss
dec
cld
jg
lock
mov
test
dec
mov
jo
mov
cmp
and
jg
mov
push
std
push
push
dec
std
jecxz
rcr
or
scas
mov
mov
jg
call
out
jo
iret
aam
push
das
push
sarb
xor
clc
fs
sar
push
adc
aaa
call
cmp
aaa
mov
pop
bound
lock
cmpsb
pop
push
cmp
inc
xchg
mov
es
mov
inc
push
sub
push
jno
movsb
cwtl
pop
jbe
mov
test
je
mov
dec
push
or
mov
xchg
je
jl
adc
mov
nop
leave
mov
push
outsb
jle
lcall
xor
and
mov
lcall
mov
insb
push
mov
ss
rcrl
in
xchg
xlat
dec
insl
fsts
js
std
lcall
iret
dec
inc
std
xchg
xor
rcl
cmp
into
xchg
es
mov
jbe
xchg
daa
push
rolb
mov
out
jl
cltd
cmp
mov
aas
dec
xchg
fisttpl
dec
popa
lret
sbb
jbe
pop
das
test
mov
ret
mov
sub
addl
les
sar
filds
xchg
inc
sbb
add
push
sbb
fnstcw
xchg
pop
inc
mov
orl
fidivs
mov
mov
addr16
and
bound
call
ror
mov
rcrl
repnz
jl
pop
jb
shl
fimull
in
lcall
jnp
scas
cmp
pop
lea
fisttps
mov
pop
mov
loopne
pop
out
dec
in
ficoml
je
mov
decl
rolb
pmaddwd
arpl
push
fcmovbe
stos
fbld
out
mov
dec
mov
mov
pop
push
in
push
adc
add
jge
pushl
sub
pop
mov
xor
loopne
adc
mov
test
mov
adc
incl
mov
ja
enter
int
adc
add
or
jmp
mov
add
aad
add
add
jmp
and
mov
cmp
decl
or
mov
add
mov
into
pop
mov
call
mov
data16
in
or
mov
dec
dec
mov
xor
inc
xchg
mov
jle
incl
mov
ficoml
mov
cmp
fistps
lahf
mov
push
gs
ja
out
pushf
push
jmp
and
lods
daa
lahf
cmc
or
arpl
push
xor
mov
dec
push
push
cli
push
fxch
mov
or
insl
pop
sbbb
mov
insl
inc
andb
sub
or
cmp
sbb
sub
cld
loop
mov
fdivr
jg
jmp
cmpsb
nop
imul
xor
mov
push
push
ljmp
lret
jnp
fcomps
movsb
movsl
add
pop
mov
adc
dec
ret
cli
pushl
fists
ljmp
jae
or
je
ja
pushl
pop
addl
inc
scas
or
xchg
or
add
test
or
add
adc
push
daa
pop
pop
rcrb
daa
mov
imul
lcall
loopne
mov
out
push
xor
dec
pusha
dec
and
mov
es
sub
lret
loop
push
push
xchg
xor
mov
repnz
cmp
dec
shlb
xor
movsl
push
dec
and
mov
repz
ror
scas
les
and
xor
decl
jns
jp
push
jns
aam
push
sub
mov
loope
dec
push
aaa
sub
lea
or
xor
jecxz
push
ss
int3
pop
aam
mov
scas
push
shl
stc
imul
mov
add
jno
pop
and
rcl
mov
push
ror
mov
sbb
mov
imul
lcall
lcall
lahf
push
lret
mov
decb
lds
and
ror
mov
or
outsl
xchg
push
and
filds
cmc
hlt
daa
mov
out
jne
lcall
rorl
mov
mov
repnz
outsb
pusha
cltd
push
pop
mov
lret
std
sbbl
mov
jg,pn
ljmp
movsb
and
or
mov
mov
dec
repz
mov
aaa
sub
cmc
arpl
fs
sbbb
pushl
scas
xchg
cmpsb
insb
iret
mov
stos
aad
idivb
ss
popa
sub
es
mov
std
jmp
push
popf
adc
adc
sbb
int3
jg
sub
aam
mov
mov
inc
adc
out
mov
jge
push
push
jge
aam
and
testl
jmp
inc
push
fcoml
jmp
mov
test
push
movsl
push
insb
fldenv
fwait
add
mov
pop
mov
cmpsl
outsb
pop
int3
inc
jmp
outsb
cltd
jns
mov
mov
imul
or
int
xchg
jnp
xor
inc
xchg
sub
test
lret
out
ja
ljmp
clc
mov
in
cmpsl
fstpl
rcrb
add
jecxz
jns
jg
lods
mov
sbb
pop
add
dec
cmpsb
mov
xor
cli
stc
push
addl
repz
jecxz
cmpsl
pop
ss
decl
imul
stos
fildl
push
push
jo
sahf
mov
repnz
inc
lcall
test
shlb
pop
test
mov
ds
inc
sbb
mov
adc
sub
das
test
fadds
mov
xor
shl
scas
push
imul
popf
push
inc
mov
fsubs
popa
adcb
nop
aad
test
add
ds
add
xor
lret
jg
shrl
jmp
andl
incl
test
subb
jmp
pop
sub
stc
ljmp
cwtl
mov
rorb
mov
leave
or
push
out
mov
popa
push
movsl
shl
scas
push
fucomi
adc
cwtl
out
inc
push
adc
mov
pushf
push
pop
mul
scas
adc
jg
xchg
fildll
fldcw
jmp
test
xchg
fs
add
cli
outsb
push
cmpsb
xchg
test
push
mov
inc
loopne
add
push
pop
xor
cmp
test
cmpsb
out
mov
or
fadds
xchg
aaa
pop
cli
cmpsl
mov
pusha
or
sub
sbb
jmp
or
pop
mov
into
add
mov
lcall
add
mov
push
bound
test
pusha
jmp
and
inc
sub
mov
mov
sub
pop
neg
jnp
cmpsl
inc
lahf
int
loope
mov
pop
xchg
test
fwait
lret
inc
pop
je
std
stos
pop
ret
hlt
cli
incl
push
js
insl
clc
xor
loopne
cli
ljmp
icebp
adcb
and
shll
scas
cli
imul
sarl
xchg
jo
popa
lret
mov
add
dec
sbb
dec
mov
xchg
stos
dec
push
lret
or
js
add
xchg
inc
add
out
lret
inc
call
ja
xchg
je
sub
icebp
shrb
and
incl
ss
icebp
imulb
push
aaa
out
or
mov
scas
xchg
insl
fwait
into
dec
std
outsl
fcomip
or
bound
and
xchg
inc
mov
std
mov
faddl
movsl
mov
aaa
or
add
lcall
add
test
arpl
test
add
or
nop
jns
pushl
and
lods
cmpb
rolb
push
call
cld
add
incl
mov
pop
scas
cmpsl
ljmp
ljmp
out
in
or
dec
std
je
add
outsb
add
out
inc
jmp
push
mov
cmpsb
pusha
mov
addb
add
inc
imul
dec
insl
ss
out
push
add
mov
lea
lret
dec
xchg
enter
mov
outsl
jb
addr16
push
faddl
test
pushf
mov
add
out
in
add
out
mov
mov
add
xchg
mov
pushf
subb
push
imul
popl
shlb
and
lret
or
xor
clc
loopne
shr
sbb
rorb
or
nop
pusha
repz
adc
ljmp
dec
test
cmc
push
dec
sub
arpl
mov
iret
test
sub
decl
add
ss
xor
enter
imul
call
es
mov
lock
cmc
jmp
lock
pop
movsb
imul
stc
jo
daa
fsubs
pop
pop
inc
fildll
xchg
pop
sti
pop
and
and
push
push
loopne
mov
sbb
incl
adc
xor
sub
test
ljmp
ljmp
add
in
xchg
pushf
out
push
cs
add
push
jmp
lds
adc
movsb
cld
out
cld
dec
stc
outsl
std
add
xchg
out
movsb
sub
add
add
inc
xchg
test
icebp
jmp
xchg
movsb
insl
sbb
sbb
shll
call
stos
in
aam
inc
pusha
sub
shll
aaa
movaps
xchg
push
vpshaq
testb
ja
gs
jo
mov
push
inc
mov
and
call
add
and
nop
inc
and
or
push
pushf
and
out
sbb
cmpl
insl
cmp
sbb
inc
dec
repz
dec
das
mov
test
lods
iret
or
adc
insl
dec
stos
movsl
add
or
lcall
mov
sub
out
mov
call
add
sarb
clc
push
push
out
pop
jg
or
hlt
cmp
pop
mov
cli
xchg
sub
loope
jle
clc
cmp
mov
cli
or
gs
or
movsb
sahf
mov
or
lcall
push
mov
xchg
push
xor
lea
add
dec
loope
std
xor
std
xchg
shrl
cmpsb
and
outsl
test
stos
push
decb
subl
mov
xor
and
add
fsubrl
and
mov
mov
out
jb
jg
in
lcall
add
fisubrs
sub
mov
lock
add
cmove
aaa
mov
push
shll
leave
dec
push
add
push
clc
scas
cmc
test
xor
add
test
inc
out
add
movsb
mov
repnz
sar
orb
or
xor
div
mov
pushl
into
and
loope
imul
out
xor
xor
shrb
mov
pop
or
or
in
dec
mov
or
cli
data16
and
outsl
jl
sbb
cwtl
cmc
scas
scas
inc
push
lods
mov
mov
xor
lcall
ss
push
test
inc
aaa
jae
fdivs
icebp
decl
ss
inc
testl
scas
cmp
push
or
cmc
cmp
int
jb
repz
sbb
mov
daa
pusha
mov
pushl
das
out
ljmp
push
hlt
sub
sahf
sub
out
mov
mov
xchg
mov
imul
loope
adc
adc
mov
ljmp
mov
in
js
scas
sub
lcall
and
push
push
test
fdivrl
dec
xor
rcrb
rol
add
lcall
mov
mov
inc
xlat
pusha
push
scas
repz
pushl
cmp
jae
add
push
mov
loope
and
iret
jae
pop
outsl
addb
jecxz
lcall
dec
cmpl
popa
sub
or
popa
mov
mov
dec
inc
push
jmp
sub
xor
push
push
push
cld
incl
arpl
xorb
push
xchg
inc
adc
pop
xchg
jb
adc
pushl
adc
stos
inc
je
adc
scas
das
and
inc
push
cmp
sar
outsl
mov
push
out
aad
lds
aaa
pop
or
xchg
mov
call
add
ret
je
dec
pop
scas
dec
insb
test
mov
add
dec
ljmp
mov
loop
inc
bound
dec
enter
pop
sub
addl
ljmp
dec
mov
dec
adc
daa
mov
jno
pop
bound
pusha
and
clc
xor
push
cwtl
push
imul
jo
sar
ljmp
ret
lds
out
jo
cmc
mov
xor
testb
xchg
decl
inc
sub
rolb
adc
sbbl
xchg
outsw
lret
xchg
sahf
or
incl
sbb
mov
sbbl
xchg
cmpsl
pop
rclb
sub
mov
pop
xor
mulb
mov
and
jbe
pop
adc
or
sar
push
scas
call
outsl
maskmovq
notl
cmc
mov
push
push
lea
pop
js
rolb
mov
cli
ljmp
rorl
xchg
xor
xor
xlat
pop
xchg
je
mov
clc
pop
push
xchg
je
ret
fcomip
repz
scas
inc
lea
pop
sub
xor
mov
ljmp
clc
call
mov
cmpsb
rorb
pop
adc
push
pop
mov
add
inc
out
test
cmovnp
sub
mov
mov
sbb
movsb
push
leave
mov
addr16
clc
pushl
imul
or
les
mov
xor
dec
pop
imul
js
xchg
int
ja
cs
incl
sahf
and
rolb
push
dec
mov
clc
fbld
orb
jne
out
jo
add
in
and
push
mov
outsl
call
inc
mov
lods
dec
inc
push
out
shrb
mov
rclb
fs
dec
lcall
ss
push
push
and
out
add
pushf
pop
xor
xor
int3
dec
cwtl
stos
and
push
jl
sahf
inc
stc
push
in
outsl
mov
cmc
jbe
pusha
and
sub
test
out
mov
pushl
sti
ljmp
xchg
adc
popf
inc
cli
fdivrs
test
mov
mov
add
jne
push
jg
add
dec
inc
mov
out
bound
idivl
cli
inc
arpl
decl
push
mov
push
adcb
xchg
mov
adc
dec
popa
mov
ljmp
or
jp
jmp
or
pop
ret
cmpsl
cli
pushl
jnp
dec
sbbl
lret
cwtl
lock
ror
out
jnp
addr16
xor
gs
aaa
ret
jns
mov
lock
sbbb
sub
jmp
stc
rorb
jbe
ljmp
call
pop
xor
and
jmp
stc
scas
or
or
in
icebp
pop
les
cmp
pop
mov
and
sti
subb
push
cmc
fidivl
in
cmp
shr
and
mov
repnz
mov
sbb
incl
sbb
fsubs
sub
fcomps
xchg
sbbb
cmp
push
jmp
mov
push
cld
mov
in
mov
pop
sbb
cmp
inc
dec
cmp
fdivp
mov
mov
push
push
or
mov
js
testl
cld
and
add
or
cwtl
inc
or
add
push
cmp
jp
jmp
mov
pop
lret
mov
pop
mov
mov
fld
pop
scas
std
sub
test
ret
je
cmp
jno
std
incl
orb
clc
addr16
bound
rcl
rolb
mov
mov
cmp
dec
jno
pop
cld
add
das
add
lcall
push
add
inc
xchg
sub
jb
mov
popf
out
mov
bndldx
push
inc
adc
popa
mov
sarb
mov
xchg
inc
dec
cmp
adc
fnstsw
add
ljmp
ret
xchg
lods
inc
cmp
xor
out
xor
mov
push
mov
lcall
mov
rcr
pop
notb
sub
or
mov
or
dec
ss
ret
xor
dec
mov
or
cmc
mov
inc
mov
or
fistps
addb
add
sbb
scas
pop
jno
inc
lahf
mov
dec
pusha
rorl
inc
mov
ljmp
rclb
insb
insl
adc
add
shll
repz
incl
test
pop
mov
hlt
shlb
divb
fisttps
and
xor
jns
xchg
mov
sbb
adc
test
sub
push
sbb
mov
bound
nop
mov
icebp
xchg
pop
lret
push
fldl
sbb
jecxz
or
incl
lret
xchg
sub
push
out
movsb
xchg
cltd
add
pop
cli
adc
ret
xor
or
mov
sub
jmp
idivb
mov
and
push
mov
call
mov
fchs
stos
adc
mov
mov
lods
scas
mov
ss
ljmp
lcall
xchg
movsl
xchg
inc
sbb
jecxz
cmp
adc
mov
movsb
std
in
fwait
sbb
std
xor
aad
inc
jge
adc
cmc
xchg
push
mov
mov
fcompl
xchg
pop
in
inc
add
nop
icebp
clc
mov
pop
sbb
fsts
ja
xor
add
aaa
mov
push
fstpt
out
mov
fisubs
mov
jnp
popa
cmp
inc
jns
notb
arpl
fidivrl
call
dec
test
jno
test
lcall
mov
sbb
ss
mov
jo
lcall
insl
push
lcall
call
jno
pop
inc
cwtl
popf
mov
shrb
into
adc
sbb
fisttpll
cmp
xor
call
jnp
cmp
dec
mov
dec
add
jo
and
add
sbb
cmp
mov
xchg
sbb
mov
add
mov
arpl
sbb
cld
jmp
dec
enter
test
cs
repnz
xorl
lret
jae
sbb
imul
inc
jg
fwait
add
lcall
cmp
inc
inc
lcall
mov
and
dec
dec
adc
in
push
sub
xlat
push
mov
or
daa
ret
stos
add
lds
xchg
xchg
stos
jmp
pushf
adc
cmp
insb
xchg
fwait
pop
call
das
add
cmc
jnp
inc
fadd
jl
fcomps
das
pop
dec
test
jnp
leave
mov
jne
lcall
or
mov
or
adc
mov
xor
lds
lcall
incl
rolb
addb
adcl
adc
dec
out
add
push
xlat
sti
loop
decl
cli
adc
sahf
mov
es
sub
sub
sahf
jecxz
mov
cmpsl
call
in
sarl
mov
adc
mov
pop
loopne
or
enter
adc
mov
jg
add
adc
adc
xchg
add
add
mov
aad
pusha
test
ljmp
xchg
dec
adc
enter
out
cmpsl
adc
loop
push
inc
inc
mov
jge
or
push
xchg
pop
add
or
and
dec
sub
aam
and
sbb
dec
adc
test
add
fstl
pop
dec
or
push
dec
and
test
lds
sbbl
dec
dec
je
mov
aam
dec
or
add
dec
jg
xchg
push
dec
inc
rorl
cmp
sbb
incl
push
lds
add
idiv
sbb
push
jp
test
pop
out
adc
cmc
xchg
cmp
popa
push
and
call
sbb
test
sub
mov
roll
movsb
popf
jo
add
test
inc
sbb
decl
or
xchg
aas
pop
aam
stos
cmpsb
inc
popf
sbb
mov
ljmp
dec
pop
aas
aad
jnp
adc
push
loope
sbb
add
push
ret
lds
nop
rcr
jo
stos
or
loopne
popf
pop
jnp
sbb
test
incl
pop
add
xlat
popf
xchg
add
cmpsl
test
push
dec
sub
arpl
decl
test
es
mov
cmpsl
mov
jg
loope
mov
and
enter
cmp
or
pop
pop
mov
adc
pop
jge
xorb
add
incl
jae
popf
or
lret
inc
mov
fs
lahf
test
outsl
clc
mov
icebp
or
insb
aam
or
cmp
mov
decl
fimull
push
xchg
or
addl
cltd
add
add
mov
and
jmp
adc
mov
sbb
mov
jg
mov
xchg
mov
fcoml
sti
mov
lock
movsb
add
inc
insb
arpl
dec
sahf
test
sub
fsts
mov
popa
pop
rcr
sbb
pop
aaa
adc
xorl
mov
bound
fistps
sti
sbb
aaa
push
lcall
imul
dec
ljmp
ret
aad
inc
cmp
add
sbb
xchg
rcr
or
decl
aaa
mov
fisubl
mov
cmp
test
ljmp
dec
adc
sbb
and
stc
adc
xchg
push
sub
ret
into
ljmp
inc
lods
adcl
xchg
mov
and
jecxz
cwtl
fsubl
gs
jp
pop
insb
adc
mov
mov
xor
pop
dec
clc
push
dec
test
inc
jle
add
push
dec
add
call
xchg
cltd
hlt
adc
stos
sbb
in
jae
fwait
push
insb
add
adc
xlat
adc
flds
sbb
arpl
nop
daa
adcb
push
pop
pop
mov
das
scas
insl
and
inc
push
ret
xchg
pop
sub
mov
adc
lds
mov
in
test
mov
cmp
loope
inc
cmc
call
mov
pop
es
cltd
movsb
lock
adc
test
cmp
in
mov
mov
cs
clc
and
es
jg
sub
mov
movsb
incl
je
pop
xchg
cmp
adc
call
push
add
jge
shrb
mov
lcall
inc
filds
push
adc
sar
out
mov
shrb
roll
cli
call
jmp
int
mov
push
decb
std
jo
cmp
cmp
into
add
mov
shlb
mov
out
pop
ja
bound
push
inc
int3
popa
and
es
jnp
push
arpl
lock
push
jge
or
jmp
lcall
mov
ret
lcall
int
cmc
ljmp
mov
mov
jb
push
and
cli
xor
add
or
mov
out
inc
cmp
inc
add
mov
loopne
sbb
dec
aam
sar
dec
pop
dec
test
loop
mov
sub
or
adcl
les
or
dec
adc
adc
nop
inc
dec
jb
pop
mov
adc
inc
rorb
icebp
aam
gs
inc
or
decl
sbb
punpcklbw
ljmp
lods
pop
lock
adc
dec
push
xchg
ret
je
ja
inc
sahf
jp
enter
iret
mov
and
jmp
push
push
adc
sub
xchg
movsb
pushl
repz
or
push
pusha
imul
jle
jg
pushl
mov
sbbb
stos
mov
addl
dec
imul
outsl
das
push
cwtl
add
xor
jecxz
sub
push
jns
sbb
daa
sub
call
adc
mov
fxam
cmpsl
push
es
lcall
mov
lret
and
test
shrl
faddl
sbb
int3
dec
xor
xor
inc
cmp
mov
fimuls
insl
stos
and
inc
mov
mov
leave
inc
add
decl
mov
add
mov
mov
add
es
cmpsl
sar
mov
or
and
orb
gs
mov
popa
lret
idiv
lcall
rcll
ss
movsl
mov
xchg
faddp
xor
fmuls
push
mov
cmp
cmp
rorb
inc
sbb
mov
cs
xchg
push
add
dec
movsl
or
sbb
pop
dec
shrb
aam
roll
pop
test
out
mov
fiaddl
jae
push
mov
mov
pop
andl
out
fcomip
incl
xor
mov
in
test
popf
je
outsb
iret
cmpsb
jb
clc
test
decl
inc
std
jb
fwait
imul
cld
xor
mov
mov
pop
mov
hlt
insw
mov
cmpb
lcall
add
cmp
outsl
pop
aam
lcall
mov
loop
mov
setbe
unpcklps
lods
fcmovbe
out
jnp
popl
mov
and
mov
adc
push
or
add
cs
lds
cld
xchg
inc
push
sahf
ret
sbb
lods
ds
imul
mov
add
inc
cltd
mov
jl
lock
jns
imul
add
mov
negb
incl
sbb
test
pop
mov
adc
mov
mov
sbb
jmp
xchg
idivb
popa
jg
outsb
mov
ret
pop
mov
inc
inc
mov
push
shrb
push
fdivrs
mov
hlt
and
xor
mov
lods
subl
jb
mov
iret
mov
jg
jns
fsubrl
xchg
movsb
dec
pop
mov
in
cmpsb
cmp
addr16
inc
cmpb
pop
daa
mov
fwait
les
adc
xor
call
aaa
adcl
lods
sub
pusha
inc
out
and
jnp
mov
lcall
push
or
loope
jle
xor
jae
loopne
ljmp
or
addb
lea
daa
repz
dec
cmpsl
xor
xchg
xor
dec
mov
sub
rolb
cwtl
ror
je
fcomip
js
pop
sbb
or
mov
mov
leave
push
dec
adc
mov
arpl
aad
mov
adc
and
cmp
add
ja
pop
addb
inc
cmp
add
cmpsb
sub
jmp
nop
inc
push
ss
xorb
adc
mov
push
pop
nop
adc
gs
mov
es
inc
and
jne
inc
pop
addr16
jo
call
add
mov
jo
mov
lcall
rorb
xchg
adc
and
jbe
rorb
adc
adc
and
dec
aaa
addr16
dec
in
push
cld
incl
inc
jmp
pop
add
nop
push
lret
push
decl
pop
ljmp
dec
xchg
push
push
addl
xchg
mov
adc
imul
psubusw
mov
pop
adcl
xchg
ret
push
jp
push
sbb
pop
mov
cli
cmp
add
jae
rorl
sbb
jnp
clc
je
incl
adc
pusha
jl
roll
mov
push
shl
sbb
inc
jp
loopne
ficoml
or
pusha
mov
xor
inc
daa
jne
flds
add
outsl
pushl
adc
add
in
dec
mov
sbb
cmp
mov
cmc
shll
cld
aaa
dec
incl
mov
pop
test
cmc
inc
and
xor
adc
push
and
rcll
cmc
or
jmp
dec
nop
pop
imul
xorb
adc
jno
pop
xor
jg
inc
jb
xorb
mov
adc
gs
loope
dec
or
xchg
test
mov
adc
inc
jae
adc
call
adc
inc
adc
sub
fs
adc
sbb
lcall
adc
adc
add
rorb
adc
cltd
and
lcall
fiadds
add
cmpsb
and
adcb
js
pop
sub
in
jg
clc
adc
push
js
mov
sub
sbbl
sbb
sbb
jmp
cmp
mov
imul
push
sbb
fsts
lock
add
call
cmpsb
add
popa
dec
popa
mov
ss
sub
pop
fcoml
lcall
pop
cmp
adc
das
add
xlat
das
sbb
inc
xchg
mov
inc
and
mov
icebp
inc
nop
rcl
jle
adc
mov
sbb
test
cli
inc
pop
xor
inc
xchg
aam
loop
inc
cli
and
cwtl
fs
jle
add
gs
inc
aam
cmp
lcall
jle
gs
dec
push
mov
sub
fsubrs
mov
sar
dec
sbbb
inc
push
push
push
push
pop
pop
pop
pusha
andl
jmp
jne
and
lds
data16
inc
test
pop
jae
sbb
incl
loope
and
push
add
sub
jg
dec
nop
loopne
pop
nop
jae
notb
push
xchg
xchg
ret
aaa
push
dec
push
je
pop
or
and
icebp
adc
mov
xchg
xor
jg
sbb
mov
sbb
cmp
xchg
adc
jg
adc
cltd
push
mov
inc
push
loope
mov
push
cmp
hlt
adc
sub
movsb
pusha
pop
xchg
jmp
dec
adcb
loop
adc
ss
cli
inc
adc
inc
dec
inc
xor
mov
out
add
mov
loope
frstor
mov
add
loope
imul
sbb
hlt
adc
push
mov
rclb
xchg
mov
mov
and
pop
sbb
sbb
add
jmp
pop
js
pushl
into
daa
outsl
in
sbb
pop
push
popf
test
adc
sub
cltd
jmp
call
mov
bound
mov
inc
xor
inc
jmp
lcall
cmp
cmp
sbb
push
enter
jle
hlt
pop
add
sar
lcall
enter
sbb
push
rorl
dec
pop
hlt
mov
mov
adc
sbb
push
xchg
mov
pushl
inc
jb
test
shll
sbb
push
and
inc
push
sub
jg
mov
mov
adc
push
test
push
lods
jae
cltd
andb
outsl
scas
clc
mov
pop
inc
sbb
inc
fstps
cmpsl
out
je
cmp
ljmp
and
pop
xchg
pop
inc
mov
mov
fwait
sub
pushl
movb
mov
mov
pop
cwtl
mov
repz
dec
dec
adc
loope
mov
popa
mov
dec
ljmp
cli
adc
xorps
inc
add
inc
cmp
dec
inc
and
call
incl
daa
push
xchg
and
xor
push
loop
adc
test
popa
mov
mov
fbstp
and
pop
lea
call
lcall
int3
sub
mov
xor
das
dec
add
arpl
push
nop
test
incl
push
sbb
and
popa
dec
aas
popa
popf
inc
pop
out
ficoml
into
je
addr16
or
xchg
lcall
push
xchg
dec
bswap
xor
adc
clc
pop
xchg
mov
test
lock
jg
mov
lcall
push
mov
test
mov
dec
popa
push
repz
imul
or
aad
jne
sub
sub
sar
push
pop
pop
push
addl
ljmp
test
sbbb
mov
lcall
fisubl
mov
mov
mov
jnp
pop
dec
mov
and
cmpsb
lock
inc
fistpl
cmpsl
adc
in
jmp
hlt
hlt
xchg
aad
sbb
sbb
mov
jnp
mov
inc
sub
mov
out
int
mov
xchg
ljmp
inc
push
lods
stc
xor
stos
test
shll
pop
xchg
stos
sbb
inc
cmp
call
xor
cmp
mov
rorl
pop
dec
sti
lock
addl
adc
rol
and
add
jo
pop
xchg
rolb
add
cmp
andb
sbb
mov
aaa
dec
sbb
mov
lcall
pop
and
sub
pop
jo
data16
ss
adc
inc
sbb
add
mov
jns
and
cwtl
enter
ja
cs
jp
iret
push
mov
incl
mov
mov
adc
andb
inc
out
clc
fistpl
xor
idivl
lret
ret
cld
xorl
inc
xor
ljmp
lcall
popa
xchg
mov
mov
push
data16
mov
jmp
test
xor
mov
int
ret
jno
cltd
inc
in
adc
jmp
es
mov
push
sbb
negb
sarl
jbe
mov
nop
push
adc
dec
shll
xchg
mov
push
lea
jo
ljmp
loop
fbstp
pop
xchg
js
mov
push
add
push
test
inc
mov
push
xchg
dec
incb
mov
cmp
adc
sub
fldenv
loop
call
and
and
adc
or
mov
lcall
push
jge
xchg
icebp
mov
loopne
sbb
lret
lret
cltd
dec
test
jle
lcall
outsl
shll
popa
test
jge
addr16
mov
and
mov
insb
jo
inc
mov
les
lods
mov
lcall
bound
and
and
xor
inc
add
and
popf
cli
inc
aad
push
push
mov
sbb
cmp
mov
and
je
or
test
icebp
cmp
pop
jns
dec
or
xchg
hlt
jl
popf
lret
aaa
sti
insb
fsub
ret
mov
add
xchg
adc
add
xchg
lea
or
adc
inc
xchg
jmp
push
lahf
test
adc
adc
pop
loop
enter
sub
sub
sbb
fidivs
incl
mov
mov
pushf
mov
cmp
fadd
mov
xchg
jge
cmp
mov
jg
insl
std
stos
sub
ret
or
dec
pushf
mov
andb
pop
dec
xor
sbb
mov
cld
lcall
fidivrs
jle
les
imul
ljmp
mov
jg
sbb
adc
les
fdivr
dec
lds
mov
xchg
arpl
iret
in
rorb
mov
into
cld
pop
fldcw
mov
test
mov
sbb
inc
sbb
push
xchg
enter
jg
pop
add
jp
loope
leave
cmc
fimull
jecxz
icebp
xor
leave
mov
aad
jb
jge
cmc
sarb
clc
mov
dec
mov
test
sub
adc
jle
sbb
jmp
fidivrs
push
std
push
clc
pushl
lcall
lcall
imul
ror
xor
decl
rolb
jge
int
in
jbe
cld
jge
ja
jmp
add
iret
fcmove
add
into
pop
dec
insb
lret
aam
dec
mov
cmp
xchg
ljmp
push
in
dec
sub
out
stos
or
ljmp
cmp
mov
cltd
repz
mov
dec
jnp
aam
inc
daa
pop
shlb
and
pop
mov
jecxz
sub
lods
sahf
loop
push
lock
js
in
dec
loopne
or
cmc
mov
clc
mov
dec
ljmp
cmpsb
and
sar
jg
adc
mov
mov
outsl
into
or
mov
dec
ds
jae
push
jle
das
inc
int
int3
fisubrs
in
in
divb
stos
ss
xor
pop
fsubrs
sbb
decl
shlb
adc
add
sbb
adc
lods
std
std
nop
cltd
push
lahf
add
jl
out
iret
lcall
dec
and
push
adc
lock
mov
idivl
out
cmp
aas
lods
xor
das
mov
inc
jnp
rol
cmp
fbstp
dec
xchg
std
lret
fisubrl
push
shr
jecxz
outsl
sbb
inc
jnp
mov
mov
jmp
add
jo
enter
mov
cltd
mov
imul
outsl
test
outsl
pop
loop
loopne
jbe
in
daa
mov
push
dec
out
arpl
pop
enter
lcall
call
pop
cmc
lret
push
call
jmp
xor
inc
or
push
sbb
jns
fadd
cs
sub
lcall
out
xlat
pop
fmul
or
into
jbe
xlat
pop
out
out
pop
clc
fs
cmp
icebp
call
das
fisttpll
adc
sahf
fwait
xor
das
dec
sub
mov
push
and
andb
js
jno
or
xor
sub
cli
incl
lret
jecxz
mov
mov
fcompl
add
sar
int3
pop
mov
enter
loope
sbb
fidivrs
pushf
lods
cmp
pop
cmovae
ljmp
int3
mov
adc
pop
dec
out
or
ss
fwait
push
dec
mov
ret
mov
push
fsubrp
das
or
push
clc
call
mov
push
xchg
cmp
out
ret
outsb
test
sub
push
add
cli
jmp
adc
roll
mov
and
sbb
mov
xor
xor
shll
inc
sbb
mov
pop
jg
fsubrl
jno
in
xchg
das
popa
scas
insb
jmp
mov
ret
lcall
cmpsb
rorb
outsl
or
ljmp
hlt
jns
pusha
shll
shr
aam
pop
lods
pusha
popf
pop
adc
mov
cmp
xchg
cmp
mov
int
popf
lcall
xlat
in
pop
sub
in
ja
fidivrs
adc
sbb
push
add
incl
pop
mov
mov
jmp
imul
jge
xchg
lods
shll
cmc
je
orl
jmp
inc
ljmp
sbb
mov
mov
sbbl
pushf
mov
dec
pop
mov
push
dec
call
push
mov
popf
dec
xchg
cmp
cmc
in
incl
arpl
call
jns
test
xchg
jbe
lock
sbbl
es
nop
ds
add
mov
daa
xchg
dec
mov
repnz
add
add
insb
jp
ljmp
xchg
or
and
inc
adc
test
push
es
dec
je
add
inc
adc
push
sub
stos
sbb
call
sub
ljmp
rolb
mov
and
int3
cs
xchg
das
lcall
xor
or
ret
insb
xor
daa
pop
or
xor
fildll
inc
sti
repnz
dec
stos
scas
xchg
fsubrl
jl
mov
call
mov
or
fnstsw
repnz
adc
scas
jg
iret
mov
mov
shl
mov
into
cmp
push
sub
stos
into
shr
cmpb
decl
adc
mov
dec
shr
arpl
lock
dec
rcrl
sarl
test
enter
in
push
cli
movsb
mov
bound
xchg
stos
mov
mov
mov
push
aaa
nop
insb
add
inc
stc
insb
insb
xor
cltd
mov
lcall
or
mov
fnsave
or
xchg
out
dec
fsubs
out
es
jl
stos
fnsave
loop
adc
fadd
repnz
ljmp
lret
mov
jp
scas
sub
out
lcall
je
imul
pop
jmp
adc
lea
call
shl
xchg
pop
jle
sub
pop
dec
or
push
popa
pushf
sub
mov
lcall
jp
hlt
addr16
xor
inc
mov
out
cmp
stos
sub
mov
push
das
clc
jg
mov
push
add
jne
or
bound
dec
cmp
pop
pushl
fcmovbe
mov
aam
sbb
xchg
and
pop
pop
push
fimull
lcall
jp
movsl
imul
inc
dec
les
les
dec
dec
pop
push
inc
cmp
inc
sbb
decl
inc
loope
pop
xchg
xchg
ja
cmp
xor
and
mov
int3
jl
movsb
or
cld
cmp
fimull
jle
lea
in
mov
mov
push
dec
xor
dec
out
xor
jmp
int3
mov
outsb
lea
in
lcall
or
stos
mov
jp
stos
scas
ret
rclb
jnp
shl
jp
je
out
cmp
cmp
leave
inc
sbb
jnp
dec
pop
lods
xchg
jmp
out
rorl
adc
add
jbe
je
lods
add
mov
aas
mov
add
cmpsl
mov
dec
subl
mov
mov
inc
fdivrp
sub
inc
aad
inc
adc
call
sub
loop
dec
jle
mov
xchg
out
or
sub
call
cmp
dec
inc
mov
and
call
shrb
pop
icebp
xchg
aaa
sbb
or
decl
adc
mov
sub
es
popf
jecxz
rcrl
pop
push
push
loop
mov
sub
sar
call
fdivp
xchg
mov
fldenv
leave
gs
fistpl
pop
outsl
jnp
ret
fstps
pushl
fsts
dec
xchg
aad
mov
xor
or
in
imul
pushl
fiaddl
mov
xchg
xchg
mov
cmpsl
sbb
subl
js
xlat
mov
mov
inc
insb
testb
mov
ret
ror
xor
repz
leave
adc
push
dec
andb
or
lods
pop
and
ss
mov
iret
and
adc
addr16
pop
or
or
adc
or
inc
push
mov
leave
cmpsb
imul
movsl
mov
jns
xchg
js
incl
push
into
hlt
or
jo
movsb
sbbb
push
mov
fmul
aam
rcl
fucomp
sbb
loopne
xchg
rcll
call
pushl
cld
pushf
fldenv
in
bound
xchg
jle
sub
call
addr16
xorb
adc
push
adc
and
mov
add
incl
addr16
jno
pop
cmp
daa
add
xchg
sub
lret
mov
dec
mov
pop
pop
push
xor
sbb
adc
sahf
test
and
mov
jg
movsl
adc
jl
bound
imul
ds
push
pusha
xchg
xor
sbb
pop
shlb
and
jmp
cmp
popf
popa
mov
push
xchg
and
mov
clc
pushl
lds
sbb
cmpsb
jl
jmp
pop
test
pop
add
xor
ljmp
mov
sub
test
in
mov
loope
aad
cltd
ljmp
hlt
sub
or
out
dec
and
jnp
push
jmp
lods
addr16
fistpll
iret
je
enter
aaa
mov
or
push
and
mov
imul
lret
mov
or
in
push
pop
les
popa
jns
lcall
push
push
lods
in
leave
sbb
inc
popf
movsb
dec
loope
cmp
adc
scas
mov
or
sub
xchg
xor
adc
shlb
sub
call
push
shlb
pushl
daa
in
adc
inc
je
divb
inc
pop
sar
mov
push
add
mov
leave
mov
jge
popf
lods
add
or
mov
push
mov
push
leave
stos
pop
dec
cli
lea
test
cld
cmp
sub
jns
mov
push
xchg
dec
outsb
add
repnz
xor
jb
ret
sbb
and
fisubrl
call
mov
inc
and
inc
push
push
and
lcall
aas
jo
out
outsb
mov
mov
sbb
inc
mov
add
lcall
lock
ljmp
lcall
sbb
stos
mov
push
scas
mov
jo
lcall
std
imul
dec
cmp
inc
or
mov
sahf
dec
pushl
push
pop
fadds
insb
mov
inc
movsb
je
jmp
imul
add
aaa
std
pop
xor
in
push
or
mov
aad
mov
pop
jp
jmp
jmp
lcall
push
dec
push
fsts
in
bound
call
mov
les
stos
out
xchg
pop
in
jecxz
xor
rolb
mov
lahf
mov
jg
stc
add
lea
cwtl
pop
mov
test
out
and
jmp
nop
mov
lea
inc
pop
dec
into
lret
pop
int
ljmp
pop
cli
test
in
pop
fiadds
mov
movsl
pushl
push
mov
adc
ret
or
lahf
push
add
inc
pop
jp
and
das
add
mov
push
xorl
xchg
or
inc
push
inc
inc
fcompl
jp
or
pop
lock
into
xor
je
lock
cmp
test
out
jl
pop
incl
adc
sub
mov
fcmove
and
aas
mov
jmp
pop
mov
int3
cmpsl
outsl
cmpsb
add
cmpsb
sub
and
ja
xchg
jmp
fnstcw
xchg
mov
lcall
movsl
xchg
adc
repnz
add
mov
and
popa
add
in
fstpl
fisttps
push
cmpsb
test
hlt
xor
adc
lods
ljmp
cltd
xchg
or
decl
iret
stc
lock
dec
mov
sub
aas
test
ljmp
jns
mov
daa
xor
mov
loopne
je
lahf
cs
push
fdivrs
icebp
pop
jecxz
add
cmp
pop
push
int3
lods
or
clc
icebp
xor
or
sub
gs
sub
lcall
sbb
xchg
mov
mov
add
cltd
rorl
outsb
and
pushl
in
enter
push
mov
ret
aaa
fidivl
out
sbb
cld
call
ucomiss
sti
popa
movaps
inc
cmp
test
test
dec
cld
incl
xchg
ljmp
cmp
nop
test
push
movsl
shll
repnz
subb
mov
call
and
stos
dec
repz
jg
and
mov
aas
icebp
or
orb
imul
mov
mov
and
in
fstpt
add
pop
mov
inc
pop
mov
cmpsb
stos
sbb
es
cld
pop
mov
sub
mov
sbbl
or
pop
and
xorl
imul
ss
ljmp
xchg
cld
or
xchg
sahf
or
adc
ret
lea
dec
shrb
sbb
or
rorl
sub
lcall
pushl
aaa
xlat
ret
cli
push
loop
aaa
pop
rcrl
sbb
mov
adc
push
cmp
xchg
repnz
dec
test
bound
mov
test
inc
sub
push
adc
addl
lcall
xor
cmp
andb
cmpb
or
test
jecxz
hlt
mov
mov
cmpsb
repnz
nop
mov
imul
or
inc
pushf
xor
fstpt
or
cmp
sub
incl
add
sub
cli
lcall
xorl
lds
xchg
jno
lods
and
mov
out
pop
aam
aaa
inc
mov
in
inc
stos
xchg
adc
adc
sub
lods
inc
imul
sub
jae
inc
dec
mov
outsb
sbb
loopne
mov
ret
sti
inc
pop
sbb
xor
pop
movsl
pop
jns
cmc
call
push
dec
mov
mov
mov
movsl
fmul
nop
incl
pusha
ret
xor
hlt
inc
sbb
inc
sbb
mov
sub
call
stos
mov
imul
dec
push
repz
ror
or
in
or
insb
mov
or
jg
popa
std
and
mov
mov
cmpsl
mov
jecxz
xlat
cmp
pop
lret
xchg
xchg
inc
xor
xchg
das
cwtl
ss
xor
sub
pop
adc
cs
xor
lea
shll
and
clc
pushl
cwtl
xchg
mov
cltd
mov
test
lock
call
dec
lea
jae
adc
push
jg
decl
xorl
out
mov
int
and
mov
mov
incl
jmp
pop
repnz
test
movsb
jb
mov
inc
xchg
stos
sub
sub
ret
jmp
jnp
pop
cmp
icebp
mov
gs
lret
mov
xor
inc
out
jo
jmp
xor
add
mov
and
cmc
or
ljmp
pop
stos
sub
adc
fcompl
add
pop
inc
test
sbb
mov
lcall
adc
pop
icebp
mov
addr16
mov
popa
loopne
ret
ljmp
ret
cltd
in
or
pop
hlt
adc
sub
in
test
lods
cmp
mov
jg
dec
call
push
and
push
adc
mov
pop
shll
incl
test
mov
decl
inc
iret
leave
ljmp
sub
add
push
mov
cmpl
loope
or
or
ljmp
cmp
sahf
lods
mov
fadd
and
or
stos
aad
mov
fistpll
xchg
rorb
aad
hlt
pop
std
dec
stos
push
or
gs
xor
int3
xor
cld
mov
cmp
push
cs
stos
and
pushl
mov
lods
pop
jo
out
clc
ljmp
movsl
shrb
mov
ljmp
dec
and
adc
and
push
dec
movsl
mov
jecxz
adc
test
in
mov
ljmp
in
adc
les
xchg
outsb
adc
mov
call
mov
dec
inc
hlt
test
inc
mov
js
jg
sbbl
mov
ret
pushf
adc
xchg
lods
push
inc
lock
les
xchg
fimuls
push
xlat
jge
ret
xor
es
aam
mov
mov
add
sbb
jnp
int3
sub
sbb
jp
loopne
mov
add
dec
sub
xchg
or
push
fwait
hlt
push
jnp
push
hlt
insb
rolb
dec
movsb
shrb
sub
ljmp
push
xchg
xchg
cld
emms
or
or
mov
call
ficompl
sub
pop
fsubrl
inc
jecxz
push
jle
dec
jmp
dec
jns
lret
pop
push
test
loope
sub
push
decl
jb
push
je
pop
repnz
pop
cltd
xchg
jo
sbb
sub
inc
mov
dec
mov
dec
std
mov
xchg
inc
mov
cmp
mov
sti
push
aaa
sbb
xchg
xor
test
xor
sbb
cmp
clc
cmp
lods
sbb
out
cmp
ds
addr16
push
pop
in
xchg
aam
decl
or
dec
daa
in
mov
arpl
adc
sub
add
lea
lret
lret
bound
mov
add
xchg
aad
fsubrs
sub
lcall
xor
leave
scas
adc
dec
sbb
sub
stos
lahf
pop
add
mov
xchg
aam
loopne
sbb
dec
adc
fs
mov
leave
pushf
sbb
decl
decb
fldcw
loope
add
mov
adc
xchg
mov
call
int
cli
adc
sub
fcompl
rolb
lcall
call
mov
lods
sub
test
inc
enter
movsl
add
scas
mov
mov
lahf
arpl
je
scas
dec
xor
xor
mov
jae
hlt
decl
dec
jo
shlb
dec
xor
inc
lcall
add
sub
insb
adc
fisttpll
ljmp
decl
and
test
in
es
ljmp
adc
adc
xlat
jnp
sarl
loopne
mov
sbb
es
push
push
ds
jbe
jg
popa
inc
cltd
mov
cltd
hlt
jne
scas
je
fildll
mov
pop
popa
loope
or
dec
push
int
popa
xchg
jne
add
or
incl
dec
adc
or
and
outsl
andb
push
int3
or
insb
das
push
push
and
pop
cmp
mov
in
mov
ret
loop
fcomip
pop
arpl
int
arpl
incl
mov
mov
pop
lea
inc
mov
fisubl
add
xchg
les
fnsetpm(287
stos
and
std
mov
mov
mov
in
sub
mov
jne
add
mov
rclb
mov
outsb
stos
jp
xor
cmp
pusha
lahf
dec
pop
lcall
rorb
lds
in
push
repnz
mov
adc
repnz
fcomps
decl
loopne
mov
adc
hlt
lcall
or
add
int3
jb
xchg
ljmp
push
cs
mov
fiaddl
cltd
add
gs
mov
jmp
xchg
adc
arpl
addr16
ror
xor
out
mov
test
out
dec
incl
sbb
pop
cmp
xor
andl
cmp
out
inc
adc
ret
lahf
fcmovnu
je
es
outsl
in
cld
popf
mov
push
xor
sub
ljmp
fs
in
shl
xor
push
lods
sbb
dec
mov
mov
fwait
imul
xchg
and
or
or
bound
ljmp
pushl
mov
icebp
mov
cltd
sub
lcall
cmp
data16
shll
out
stc
fwait
xchg
push
in
test
ljmp
pushf
and
adc
cmp
mov
ja
mov
int
jmp
add
lcall
add
mov
enter
stos
cld
ljmp
cmp
lock
in
lahf
push
insb
into
int3
out
add
mov
jecxz
loop
add
push
and
cmp
sbb
pop
sbb
rclb
aam
mov
mov
pushl
or
xchg
mov
rolb
push
out
call
cld
incl
fldt
cs
xchg
roll
pusha
faddl
cmpsl
inc
out
dec
mov
std
in
and
jmp
iret
leave
lret
pop
data16
pop
mov
repnz
out
dec
adc
jg
mov
jne
leave
fdivs
ljmp
mov
mov
aad
sbb
loop
std
decl
xchg
lock
enter
push
lock
jg
push
rclb
icebp
insb
fidivrl
dec
in
dec
jecxz
mov
pop
fs
pushl
fcoml
xor
add
cli
lcall
mov
loope
mov
pop
je
jmp
call
pop
pusha
aaa
mov
cwtl
jns
pop
adc
adc
test
mov
sbb
out
inc
jb
push
jb
mov
jno
loop
pop
add
cmc
push
pusha
fcoms
push
mov
je
jbe
ljmp
adc
push
bound
icebp
mov
incw
scas
orb
push
or
imul
repnz
mov
xor
lock
fildll
push
and
loopne
outsb
pop
cld
hlt
or
xor
dec
in
add
jle
xor
push
mov
cld
aas
in
pop
fistpll
cmp
loope
in
cmp
push
push
jg
pop
cmc
outsl
sbb
xchg
shlb
adc
sbb
sahf
or
icebp
enter
mov
add
jne
adc
loop
add
gs
hlt
cmp
mov
or
jb
adcb
inc
icebp
or
fsubrl
in
shlb
cwtl
cli
mov
pop
sub
or
sar
pop
dec
call
nop
int3
inc
sbb
inc
mov
cltd
add
mov
sub
out
pop
out
adc
pushl
shl
push
sub
outsb
push
cmc
mov
adcb
xchg
jl
movsb
scas
stos
faddp
shr
shrb
mov
js
or
ret
cmp
stc
movsb
std
stos
test
arpl
mov
jle
jecxz
xchg
dec
roll
jbe
mov
mov
fldenv
popf
insl
fstl
sbb
adc
mov
sbb
sar
ja
mov
xorb
into
sbb
sarb
sbb
jmp
push
jbe
push
es
jg
dec
ljmp
cmp
roll
push
mov
call
scas
mov
jg
cmp
jmp
dec
ret
addl
and
mov
incl
dec
cmp
sbb
rol
mov
xor
repnz
xchg
cmp
insb
stc
loopne
lcall
decl
cwtl
pop
ja
mov
lahf
inc
xor
out
add
decl
dec
cltd
dec
push
inc
cltd
push
movsl
push
xchg
and
lods
cmp
decl
and
cmp
fcomi
es
mov
mov
es
ljmp
clc
test
aas
push
sbb
cmp
enter
inc
or
jg
mov
inc
movsl
mov
xchg
and
push
mov
nop
clc
lcall
sbb
dec
mov
lret
xchg
adc
out
insb
mov
inc
xchg
lea
outsl
nop
cmpsl
dec
mov
jl
pusha
pusha
subb
shlb
mov
sbb
in
in
cmp
dec
ja
aad
pop
imul
push
fadd
mov
xor
call
scas
jl
out
daa
pop
mov
add
std
cmp
ljmp
sbb
sarl
fidivrs
push
jg
insl
mov
cli
cmp
jmp
cltd
adc
inc
inc
or
and
adcl
cwtl
inc
mov
orb
push
adc
pop
push
mov
subb
xchg
add
leave
ds
inc
and
jb
lcall
push
xchg
clc
nop
dec
dec
jne
xchg
add
or
jg
xor
mov
dec
sub
adc
call
pop
push
jmp
and
cltd
xchg
push
jb
lds
push
push
cmp
aad
push
imulb
inc
sub
scas
mov
adc
enter
cmp
dec
push
gs
jmp
xchg
movsl
rcrb
pop
dec
loope
xchg
push
test
jne
dec
jp
mov
nop
addb
xor
inc
push
ret
call
hlt
dec
xor
xchg
sbb
and
test
pop
test
ljmp
xchg
mov
push
stos
sbb
test
sub
cmpps
lcall
cmp
cmc
mov
mov
or
cmp
je
pop
xchg
jno
popf
xor
fucomi
out
enter
mov
test
jmp
push
fidivrs
mov
push
mov
mov
and
movsl
xchg
sbb
sbb
jb
mov
jmp
sub
repnz
sub
mov
rolb
scas
pushf
cs
or
fs
jmp
popa
les
test
mov
mov
xchg
push
jg
lods
xchg
jp
jmp
and
xchg
lods
mov
mov
add
dec
aam
call
xchg
hlt
push
mov
sbb
adc
fidivrs
cli
push
les
cs
jg
add
sbb
iret
lret
pop
and
xor
addr16
inc
mov
cmp
imulb
cltd
movb
clc
arpl
cmp
dec
pusha
dec
adc
dec
in
insb
dec
lcall
jecxz
push
fwait
jne
andl
fisttps
sbb
xor
mov
imul
fiaddl
ss
sbb
sub
pop
bound
push
roll
loopne
mov
decl
mov
jecxz
and
inc
jb
in
jnp
fnstsw
inc
das
mov
push
fisttpl
mov
loop
pushf
xchg
sar
cs
loopne,pn
mov
mov
mov
ret
mov
mov
and
inc
mov
stc
inc
inc
fs
jae
mov
or
dec
jl
ret
popa
mov
jg
mov
sub
decl
push
sub
pop
jae
inc
adc
and
stos
and
push
pop
inc
adc
pop
jb
inc
cmp
aam
pop
lock
clc
inc
inc
out
sarb
orb
inc
fsts
inc
imulb
sub
jecxz
or
dec
andb
dec
mov
incl
cmp
xchg
adc
mov
mov
sbb
inc
daa
ss
dec
arpl
loopne
mov
int3
push
pop
jmp
add
xor
es
add
adc
and
in
and
lds
fwait
insl
cld
incl
add
rcrl
test
mov
push
fadds
jne
xor
mov
xchg
adc
call
sub
outsb
xchg
mov
cmp
push
movsb
test
mov
incl
mov
dec
jl
xchg
cmp
int
push
repnz
cmpl
popa
or
pop
cmpsl
insl
xor
call
jg
daa
rorb
icebp
xchg
mov
es
dec
stos
pop
stc
dec
fstps
decl
icebp
adc
ds
in
push
jge
jecxz
sahf
hlt
inc
pushl
pop
push
andl
mov
rcrb
gs
daa
add
cmpsb
add
cmp
bound
repnz
sbb
xor
daa
fsubrl
inc
sub
mov
push
cmpsl
inc
daa
dec
addb
sbb
mov
es
dec
push
sbbb
int3
adc
in
dec
mov
call
cmp
aam
adc
pop
nop
stos
mov
sub
roll
fadds
stc
mov
stos
push
sbb
inc
jns
decl
cli
dec
add
sbb
bound
pop
mov
mov
xor
push
or
push
xor
xchg
rorb
or
pop
sbb
xor
sub
sub
ret
mov
xchg
push
pop
cld
call
pshufw
aas
cld
icebp
xor
push
je
inc
xchg
cmp
mov
sahf
sar
ljmp
imul
push
or
scas
mov
pop
mov
fwait
add
mov
ljmp
or
addr16
int3
mov
jns
adc
decl
cwtl
insl
cmp
ja
daa
test
cmp
sbb
xorl
jecxz
cmpsb
xor
lret
fsubrp
in
aaa
subl
add
fxch
ret
ret
fstp
enter
pushl
inc
aaa
inc
xchg
outsl
push
push
xor
nop
push
pop
push
push
mov
fidivrl
cmpsl
adc
fwait
jmp
sub
mov
call
orb
inc
js
dec
jo
inc
and
mov
and
add
decl
inc
push
std
rcll
xlat
mov
and
inc
mov
ficoml
call
ss
adc
and
sar
mov
push
mov
inc
aad
jo
inc
sbb
mov
in
add
dec
cmp
mov
or
stos
jmp
lds
les
pop
cwtl
sbb
sbb
pushl
gs
push
jne
dec
pusha
or
mov
adc
push
test
pusha
or
jne
jo
pop
cmp
stos
xor
mov
mov
fstps
imul
jns
and
rorl
jae
cltd
cmp
pop
jp
sti
fwait
sub
jae
shrl
jbe
imul
lods
insl
mov
out
mov
ljmp
clc
sbb
cwtl
jge
pushf
adc
scas
test
into
or
fs
arpl
enter
inc
xor
test
ljmp
bound
xchg
and
or
mov
mov
cmp
xchg
test
nop
and
pushl
adcb
aaa
xchg
icebp
fistps
xchg
sahf
or
mov
push
sub
xor
lahf
enter
aad
idiv
call
xchg
adc
push
fisubrs
in
cmpsb
scas
xchg
cwtl
es
mov
dec
dec
mov
dec
xor
call
lret
popf
gs
repnz
cmp
ss
in
sbb
loope
jmp
cmp
or
xchg
sub
test
popa
sub
popa
mov
jg
es
es
jne
movsb
xchg
test
cmpsb
popa
adcb
lcall
inc
fsubs
in
mov
mov
lods
scas
pop
sub
aad
mov
call
sub
jge
jae
loope
cmp
sahf
jg
scas
pop
mov
fidivrs
pop
call
call
xor
scas
call
adc
mov
push
inc
insb
lcall
cmp
mov
out
mov
pop
and
add
jns
mov
mov
test
and
cwtl
mov
mov
aaa
xlat
mov
gs
or
jl
or
cmp
add
int
fdivrl
fld
mov
xchg
adc
sahf
shr
aad
shlb
push
fisubrl
daa
clc
mov
outsb
imul
popf
std
mov
aaa
lock
xchg
push
mov
or
shll
fildl
push
mov
dec
in
imul
add
lock
or
add
mov
outsb
add
jbe
push
mul
jge
mov
test
sbb
add
pop
fwait
out
sub
xchg
push
push
jg
add
inc
hlt
pop
rcrl
push
dec
in
jo
ljmp
lret
sub
into
test
fadds
std
pop
add
push
xchg
inc
loopne
mov
or
incl
inc
mov
xchg
imul
rcl
push
mov
push
jg
mov
mov
and
repz
cltd
jge
and
sub
lret
mov
nop
fs
and
fwait
xchg
mov
mov
mov
sub
rol
mov
icebp
fstpl
popa
jmp
popf
and
inc
pusha
dec
mov
iret
xor
loopne
cmp
push
cmp
stos
int3
add
adc
mov
negb
icebp
mov
inc
fisttpll
lret
pop
sbb
lcall
push
sbb
aas
les
in
mov
jg
or
pop
pusha
push
idiv
add
insb
add
nop
dec
icebp
pushl
pop
aam
or
fmull
mov
add
fadd
cli
lcall
adc
adc
dec
cltd
mov
mov
movsb
push
adc
fcoms
inc
data16
fs
int3
fcoml
sbb
ljmp
jge
jmp
push
pop
xchg
pop
sbb
cmp
roll
clc
push
cld
rcll
dec
pop
add
pusha
les
xor
loopne
sbb
cmpsl
cmc
lcall
test
xchg
pop
push
xchg
test
inc
dec
aas
rcl
sub
inc
test
lcall
mov
jg
mov
sub
sbb
adc
fwait
sub
mov
incl
push
test
pop
call
mov
jmp
push
push
jg
test
jp
andl
cmc
pop
adc
pop
loope
les
call
leave
pushf
push
stos
jge
mov
cmp
sbb
in
push
aad
mov
cmp
mov
cmp
add
and
cli
ror
js
fldz
shlb
ret
push
in
inc
push
outsb
or
movb
loope
inc
out
lock
lods
jns
stc
cmp
rorl
in
loope
les
inc
sub
mov
sub
clc
cmp
je
pusha
add
jmp
cmp
fcoml
xlat
sbb
inc
in
adc
adcb
cld
or
cmc
mov
adc
pushf
std
aad
popa
in
pushf
jmp
ljmp
inc
sub
call
cld
clc
add
pop
xchg
mov
mov
xchg
lods
xchg
popa
jbe
les
test
and
jg
call
and
push
popa
js
inc
add
mov
push
mov
outsl
cmpsb
lods
jmp
out
orb
cmpsl
pushf
mov
mov
loop
call
popf
push
pusha
fldl
push
mov
or
and
pop
add
dec
adc
and
mov
scas
and
loope
ror
or
dec
pop
sub
push
in
mov
and
cmp
cld
nop
std
and
and
xchg
lds
xor
int
push
add
dec
jo
bound
xchg
sbb
fs
fs
add
jns
popa
sbb
int3
call
push
adc
incl
adc
lret
enter
xchg
ljmp
jno
loop
jge
push
dec
pop
xchg
inc
adc
ljmp
mov
adc
mov
mov
lcall
loop
movsb
fsubs
sahf
push
jmp
jmp
cmp
pop
push
pop
dec
and
insl
pop
sbb
mov
xchg
push
inc
jmp
pushf
xor
cmp
in
int3
mov
adc
test
lahf
push
adc
mov
mov
pop
or
add
clc
push
imul
dec
mov
rolb
fldcw
dec
fs
sub
outsb
cmp
or
add
xchg
out
call
mov
movsl
cltd
ljmp
leave
rorl
paddd
je
dec
cli
enter
out
and
cmp
mov
test
fcmovu
or
add
icebp
pop
sbbb
pop
mov
ljmp
call
in
or
mov
ds
sub
enter
imul
inc
decl
push
aam
dec
pop
mov
dec
adc
movsl
fsub
push
cwtl
cmp
movsb
adc
aaa
cld
inc
mov
inc
outsl
or
in
xchg
rorb
push
hlt
ljmp
jl
push
push
sahf
xlat
mov
inc
sub
in
adc
outsl
xchg
jp
dec
test
lds
test
aam
xchg
ljmp
or
clc
or
sar
push
insl
fcoms
push
jp
lds
add
push
mov
pop
inc
pusha
nop
jne
adc
in
addr16
mov
outsb
fiaddl
cli
inc
cmpsl
sub
pop
cltd
ljmp
pop
lret
mov
ljmp
xchg
xchg
leave
push
mov
sub
xchg
push
scas
and
insl
dec
call
or
arpl
fstpl
push
jbe
stos
mov
mov
nop
daa
sahf
daa
insl
std
jmp
mov
sbb
inc
movl
push
sub
mov
loop
mov
adc
scas
ljmp
sub
and
cmp
pop
pop
push
clc
call
scas
test
jno
jne
outsb
inc
call
rcrl
sbbb
es
mov
xchg
jl
mov
repz
add
dec
sbb
push
jl
insb
adc
inc
push
and
jg
pusha
in
jp
dec
icebp
or
mov
cld
fisttpl
ds
lods
pop
mov
jbe
inc
lods
inc
ja
lods
push
pop
push
pop
xchg
int
sar
ja
add
imulb
int3
aam
roll
mov
jmp
js
xor
mov
fcmovb
bound
jecxz
mov
inc
sub
mov
jmp
xchg
push
push
inc
xor
mov
xchg
mov
mov
mov
enter
cmp
xchg
aad
push
inc
pushl
popa
push
leave
stc
pop
clc
filds
fnstsw
push
fs
xchg
fsubl
lret
shl
xor
gs
xlat
incl
or
test
or
sbb
push
push
out
mov
xor
mov
out
dec
cwtl
into
push
imul
mov
push
cmp
decl
add
inc
mov
xchg
mov
pop
dec
inc
test
adc
lock
inc
mov
test
ljmp
cmc
lock
mov
fwait
cmpsb
rcrl
ljmp
fwait
ret
adcb
xchg
adc
lea
push
aad
push
and
decl
lcall
sub
lods
sbb
mov
mov
in
cwtl
loopne
or
sub
dec
sbb
pop
inc
idivl
loope
pop
std
jg
test
or
fsts
xor
cmp
incl
or
inc
arpl
xchg
push
aas
jnp
inc
dec
fidivl
inc
fisttpl
pop
inc
stos
or
mov
and
inc
jnp
pop
push
cltd
xchg
leave
aad
loope
into
test
sub
xchg
addr16
loope
das
out
testb
or
mov
pushf
loopne
fisubl
fadd
sbb
and
outsl
sbb
dec
mov
loope
dec
inc
call
dec
arpl
pop
fstps
dec
pop
sbb
bound
fnsave
ljmp
push
push
dec
lcall
scas
jb
aam
and
cli
pop
es
jmp
loope
out
in
shlb
xor
pop
pusha
xchg
inc
push
call
push
xchg
loop
jnp
dec
int
mov
mov
mov
les
inc
fstpt
rcr
mov
mov
mov
hlt
inc
enter
xor
mov
pop
int
dec
mov
in
dec
cli
test
inc
dec
push
dec
sbb
shlb
and
shrb
sbb
mov
pop
dec
push
fsub
testb
push
xor
ljmp
pusha
cld
pushf
add
decl
rorl
loop
push
adc
in
lea
ret
insl
jae
sbb
icebp
incl
or
mov
imul
hlt
lds
jg
or
int3
inc
test
andb
mov
pop
sub
mov
sub
lret
jne
or
adc
inc
out
sbb
adc
ss
mov
sub
pop
lock
daa
inc
add
nop
push
xor
outsb
cltd
outsb
inc
dec
cmp
xor
jmp
jmp
pop
mov
xlat
scas
or
xchg
mov
clc
inc
cwtl
clc
aad
out
push
pop
inc
xor
cmp
ljmp
cli
outsl
pop
xor
xchg
pop
fistl
cmpsb
cmpsl
sahf
mov
and
loop
mov
xchg
js
in
cmp
cmp
jo
inc
adc
pop
fcoml
pop
mov
imul
loop
pop
add
mov
pop
insb
sbb
call
xlat
clc
in
mov
mov
cltd
idiv
pop
jecxz
jge
pop
dec
jb
fs
add
sbb
neg
call
mov
add
add
jle
outsb
pop
je
pop
cltd
jo
add
scas
fsubr
or
lret
call
in
jo
cmp
push
or
xor
xor
je
sar
ja
aam
push
jbe
xor
js
je
stos
stos
scas
adc
pushl
lcall
sub
imul
pop
mov
rorl
mov
subb
fcos
imul
insb
jmp
pop
mov
arpl
dec
aam
dec
imul
mov
mov
sub
out
cmp
call
adc
pop
repnz
nop
sar
sbb
leave
mov
sbb
cmpsl
loope
mov
sbb
mov
cwtl
and
lcall
mov
call
mov
lret
fistps
jnp
pop
adc
js
inc
mov
pop
sbb
cs
test
pop
cld
call
sarl
cmp
add
xchg
add
cli
mov
test
out
jg
insb
dec
mov
sarl
inc
push
pop
out
add
adc
lcall
rcrb
inc
cmpsb
xor
hlt
cmp
fs
dec
mov
cld
jmp
push
imul
sub
ret
or
cmpsl
data16
jmp
lods
imul
jbe
es
stos
shrb
adc
pushf
lock
xor
movsb
mov
gs
adc
adc
loop
ds
call
fs
cmp
cmpsl
rorl
push
lcall
loopne
fldl2t
push
or
decl
jne
dec
cmp
dec
pop
cmp
sti
jno
mov
mov
dec
sbb
or
add
rorb
outsl
cmp
imul
push
aam
dec
inc
mov
dec
sbb
mov
cmp
add
dec
clc
loop
aaa
xchg
ret
jb
jbe
mov
add
mov
push
xchg
insb
inc
push
ljmp
sbbb
push
and
fidivs
enter
mov
xlat
xor
ds
mov
lcall
pop
lea
rcll
cmp
and
pop
sbb
add
add
dec
in
decl
push
test
fmuls
pop
pop
mov
or
adc
nop
dec
inc
sub
fcoms
mov
and
xchg
sbb
fimuls
pop
test
mov
clc
inc
dec
dec
xor
cmp
jecxz
sub
cli
call
andl
xchg
add
cmpsb
lcall
call
cs
mov
fsts
mov
pushf
inc
push
mov
lds
adc
fdivs
pop
or
outsb
fprem
lcall
aaa
outsb
fnstsw
pop
xor
insb
sbb
call
mov
mov
stos
aaa
xor
mov
jmp
int
add
cwtl
cld
sbb
insl
inc
add
sub
decl
fdivs
iret
xchg
insb
js
popa
xlat
xchg
bswap
popf
popf
data16
fld
adcl
push
jmp
add
faddl
push
and
mov
test
pushl
stos
pusha
test
loope
addr16
cmp
dec
cld
jle
and
jecxz
addl
fnstsw
clc
icebp
ffreep
push
pop
lahf
mov
inc
jl
cmp
lcall
dec
rorb
or
pushf
jle
add
shlb
jo
sahf
xor
enter
mov
add
loopne
add
or
cmp
in
pusha
add
mov
test
add
lea
xor
nop
lcall
add
or
xchg
jecxz
inc
or
int3
adc
test
push
push
sub
xor
and
and
inc
pop
mov
lock
mov
lock
loopne
es
push
enter
pop
dec
and
mov
sub
ljmp
es
test
andb
ror
jmp
lea
loopne
test
test
es
int
sub
cli
je
es
jmp
inc
jne
mov
jb
lods
lds
lods
xor
in
push
mov
push
imul
ret
daa
icebp
mov
pop
jae
xchg
scas
adc
movsl
jg
test
rorl
xor
dec
cmp
jg
ljmp
jb
dec
cmp
pusha
cmp
fldz
ret
fdivp
mov
adc
std
lods
inc
lds
xor
into
stos
adc
lods
cmp
std
out
sti
cs
sar
mov
popa
sbbl
into
sti
pop
inc
pop
shl
icebp
enter
pop
mov
call
push
jp
or
and
mov
xchg
lcall
adc
repnz
loopne
cmp
mov
in
loopne
incl
mov
aaa
shr
test
sbb
orl
call
cmp
out
lods
nop
fadd
mov
gs
lock
sbb
rcrb
pushf
xchg
mov
loope
scas
lcall
adc
mov
dec
cwtl
adc
call
call
jecxz
clc
jae
mov
sub
decl
sbb
loop
test
ret
sahf
push
adc
xchg
scas
cmpsb
add
push
test
cmpsl
xchg
lcall
add
cltd
sub
popa
add
pushl
bswap
xchg
jb
mov
push
jg
nop
push
and
ret
cmc
in
pop
jae
push
adc
fidivs
fdivl
ss
mov
fsubrs
mov
mov
xor
mov
mov
adc
sti
ret
add
pushl
into
xorl
je
cmpl
xlat
jmp
sbb
sub
sahf
xchg
lods
cmp
push
xlat
repz
or
popa
adc
dec
ret
xor
enter
xor
mov
push
mov
cltd
sbb
adc
cmp
loopne
pop
stos
or
jl
mov
mov
dec
jo
sub
push
mov
or
mov
jmp
or
inc
mov
or
nop
ret
adc
lock
leave
roll
pusha
and
add
lcall
and
addl
jbe
lds
int3
cwtl
psrlw
push
dec
add
test
and
insb
mov
inc
or
mov
or
or
pushf
inc
aaa
mov
rol
ret
add
mov
test
inc
add
sbbl
scas
lcall
sbb
mov
test
pop
movsb
dec
sbb
adcb
decl
adc
xchg
lds
add
pop
aaa
cmp
or
push
cltd
sbb
lcall
imul
test
mov
sbb
or
cmc
loop
aas
in
decl
mov
aaa
mov
repz
js
sbb
sbb
mov
or
mov
jae
data16
dec
or
mov
aas
fcoml
xchg
mov
loopne
nop
xchg
shl
ss
sbb
cld
push
loopne
sbb
ljmp
adc
sub
push
je
push
daa
pushl
hlt
jo
mov
les
and
adc
sbb
mov
sbb
je
pop
cmc
xchg
mov
or
lret
rolb
jl
inc
inc
xchg
cmc
pop
cmpsb
mov
inc
hlt
arpl
aam
mov
cs
or
and
jnp
arpl
lock
call
pusha
test
fsts
cli
cmpsl
sbbl
dec
sbb
push
test
fbstp
push
cmpsb
cmp
subl
test
stos
xchg
test
xchg
push
fs
xor
dec
call
xchg
xchg
imul
inc
or
add
leave
popa
or
test
aam
jg
das
and
aas
jp
dec
jnp
mov
lock
xor
sub
pushl
pop
mov
out
inc
xchg
lret
les
mov
imul
outsl
sbb
and
xor
std
xchg
xchg
cmp
push
dec
mov
clc
inc
jae
movsl
push
stos
and
incl
push
sub
lock
jle
shrb
scas
xor
cmpsb
out
repz
mov
lods
inc
ljmp
xchg
call
mov
setge
int
stos
pop
mov
pushl
mov
push
mov
or
pushf
adc
rorb
test
hlt
movsl
push
xchg
aaa
std
jmp
cmpsl
addl
iret
ret
cmp
rorl
xchg
jl
repz
push
lea
pop
fs
hlt
test
add
repz
decl
cmpsb
dec
xor
push
test
dec
stos
dec
pop
push
cs
xor
mov
fwait
mov
mov
push
mulb
mov
mov
dec
and
fwait
int3
dec
mov
mov
pop
pushl
ja
pop
ret
rcrl
jg
xor
cmp
imul
sbb
decl
push
inc
in
roll
lcall
data16
mov
cld
cmp
push
andl
mov
in
inc
ret
adc
and
xchg
mov
stos
adc
sub
dec
push
cmpl
mov
jno
xor
mov
call
jp
mov
stos
scas
movsl
imul
lcall
and
decb
in
das
cmp
call
inc
lods
testb
jle
int3
mov
cmpsb
aas
lret
pop
loopne
dec
insl
mov
clc
addr16
inc
sub
call
add
rolb
fdivp
pop
mov
cld
fs
pop
mov
jg
cmp
lea
lock
pop
pop
aas
rorb
dec
int3
jg
sbb
sub
scas
das
notl
xchg
or
out
push
sub
loope
std
ljmp
mov
mov
cmp
cwtl
sbb
add
popa
call
out
addr16
mov
paddusw
jg
cmp
nop
mov
flds
mov
arpl
incl
movsl
xor
movsb
dec
je
sbb
pop
jb
dec
jno
dec
mov
daa
sub
push
or
call
mov
js
or
xchg
pop
addl
filds
dec
dec
dec
movsl
push
mov
dec
mov
mov
and
in
cmp
jmp
jg
scas
mov
mov
and
and
mov
xchg
lds
out
lea
jg
gs
fldt
ja
mov
leave
in
loope
je
pushl
fucom
filds
lahf
es
add
add
fucomip
sbb
and
ja
mov
decl
inc
and
mov
lret
xchg
fisttps
xor
arpl
inc
sub
jb
movsb
cwtl
adc
lds
call
ljmp
cmc
pop
mov
ljmp
sti
sbb
mov
ljmp
jg
in
xor
adc
push
cmpsb
in
scas
jp
scas
ret
adc
fcomip
jg
int3
imulb
ljmp
outsb
int3
or
dec
jmp
decl
and
inc
cltd
ret
outsb
mov
lds
pusha
sub
test
pop
inc
and
dec
and
add
jmp
repnz
sahf
leave
add
test
into
test
jge
jns
mov
lret
mov
pop
xchg
ljmp
and
inc
pcmpeqb
or
mov
xor
jle
mov
pushl
jp
lret
jle
outsb
sbbb
ret
aas
add
push
clc
jmp
sub
inc
sub
sbb
test
inc
fists
psllw
cs
ljmp
ret
ljmp
cmp
ljmp
lret
jmp
inc
call
mov
addb
addr16
and
fmull
adcb
jmp
jecxz
adc
lea
push
aam
and
jmp
fsubp
xor
lcall
adc
or
testl
adc
outsl
cli
ljmp
push
les
ss
sbb
jmp
add
es
and
mov
ret
rcrb
xchg
hlt
out
jae
call
repnz
xor
inc
mov
jmp
inc
scas
fdiv
or
mov
das
test
cld
sbb
loop
sbb
jg
xor
xor
xor
sar
test
mov
mov
fs
sahf
bound
imulb
and
stos
bound
push
pop
mov
cltd
inc
pop
pushf
jecxz
orb
add
jmp
shrb
xchg
lock
movsb
into
mov
lcall
adc
jno
nop
inc
les
movsb
cli
pop
push
and
and
out
fwait
ds
mov
decl
es
dec
and
sub
or
and
out
or
adc
dec
pop
xchg
out
repnz
sub
xchg
jmp
movsb
das
dec
cld
out
test
shll
hlt
mov
sahf
adc
pop
and
cwtl
dec
andb
xlat
pop
ret
sbb
out
movb
pop
push
jns
mov
mov
movsl
call
hlt
or
xchg
push
mov
insb
and
repnz
incl
into
popa
pop
xor
pop
in
xor
shll
cmpsb
movsl
pop
mov
fcoml
jg
into
and
sarl
mov
popf
dec
rolb
lods
les
cli
pop
pop
out
push
mov
jmp
xor
pusha
cmp
xor
xchg
mov
mov
jo
inc
dec
loopne
pop
and
hlt
adc
ljmp
icebp
xor
push
mov
jno
add
movsl
mov
and
mov
adc
movsl
mov
jmp
and
or
movsl
loop
cld
dec
inc
mov
out
jg
data16
sub
int3
lcall
movsl
call
cwtl
add
decl
pop
repnz
shlb
xchg
or
mov
sbb
es
inc
ljmp
outsl
add
mov
sub
xchg
aas
das
addr16
xorb
lret
gs
lret
imul
lock
xor
mov
lcall
je
pop
in
and
mov
enter
pop
testb
inc
mov
cs
cmp
fnstsw
xor
adc
sbb
pop
je
ficomps
jmp
jecxz
push
gs
out
int
pop
repz
push
outsb
push
inc
dec
je
arpl
in
outsl
lods
enter
sarb
and
mov
adc
loope
out
imul
pshufw
pop
ljmp
sub
jae
stc
push
sub
les
subb
jg
icebp
sub
xchg
lods
jecxz
scas
xor
leave
push
or
mov
sub
cmp
sbb
jg
jecxz
leave
test
push
rcr
mov
incb
jge
addb
daa
or
repz
popf
xor
fidivl
out
inc
cmpsb
lcall
push
xchg
push
mov
xor
pop
mov
push
mov
inc
adc
jnp
or
and
or
test
inc
inc
test
scas
push
xor
xchg
push
xor
clc
cmp
sar
incl
cs
cmp
aaa
mov
pop
ret
dec
lea
dec
sub
dec
decl
xor
mov
and
xchg
pop
fnstenv
and
pusha
push
aam
in
aam
lret
xor
es
xchg
cmp
ss
pushf
dec
push
jmp
ds
xchg
push
pop
insb
cmp
jmp
mov
cmp
daa
pusha
mov
pop
jo
push
sub
dec
push
sbb
ret
ljmp
cmp
mov
jno
mov
mov
xor
push
mov
fcmovu
shrb
push
pop
das
je
lds
scas
andb
cmp
pop
mov
decl
jle
mov
pop
push
dec
or
sar
decl
xchg
cltd
and
ss
das
xlat
jecxz
xchg
scas
sub
cmpsb
loope
arpl
mov
sbb
movsl
js
lret
jl
dec
cmp
dec
idiv
jmp
hlt
cmp
fnsave
loope
stos
movsl
push
test
sbb
mov
loop
cmp
call
into
in
jns
pusha
in
call
jb
out
mulb
loop
inc
inc
in
lcall
sbb
aas
add
sbb
adc
aas
repz
and
arpl
push
xlat
xchg
dec
cmp
mov
stc
scas
sub
aam
mov
les
bound
and
loop
lcall
pushl
ret
xor
sti
push
push
jmp
fcomip
inc
jmp
inc
xchg
movsb
mov
ss
adc
cmp
push
es
pushl
fistpll
clc
push
adc
pop
cmpsl
call
rcll
leave
xchg
in
xor
cld
xchg
or
rcll
cmp
adc
scas
clc
fwait
movsb
sbb
push
dec
xor
jno
pop
push
dec
test
sbb
outsl
shll
or
adc
mov
sub
lea
mov
push
lcall
test
sarl
data16
inc
lods
jmp
push
sbb
notl
and
hlt
add
loopne
pop
mov
adc
xor
or
out
subb
pop
mov
pop
pushf
jbe
idiv
dec
insl
cmp
into
pop
aaa
repz
mov
ret
mov
cwtl
or
test
incl
ret
fidivs
in
sarb
xchg
daa
daa
ret
nop
inc
adc
adc
or
jmp
nop
and
cli
push
mov
repz
pop
addl
adc
iret
int3
xchg
outsl
sub
push
in
orl
fldcw
insb
mov
insl
add
sbb
jmp
clc
xchg
clc
and
add
out
inc
test
inc
icebp
jb
adc
jae
push
or
incl
adc
mov
test
ret
je
sbb
jmp
push
imul
xchg
push
paddq
jns
gs
or
stos
mov
xchg
imul
ljmp
andl
outsb
xchg
ret
cmc
pop
sub
arpl
cwtl
pop
cwtl
out
push
adc
jns
cmp
mov
sar
pushl
jnp
and
inc
arpl
test
xchg
mov
outsl
mov
jg
xchg
cld
cs
pop
mov
movsl
shr
ss
cwtl
cmp
dec
or
incl
xchg
dec
mov
repnz
xor
cmp
sub
decl
loopne
sbb
adcb
sbb
push
leave
bound
aad
out
jne
fadds
add
xchg
sti
fildll
adc
mov
jl
rcrb
shl
mov
jp
xchg
jg
imul
fisubl
stos
mov
or
cwtl
pop
fiadds
jnp
or
and
xlat
and
stos
pop
push
mov
dec
push
call
xor
mov
dec
pop
incl
xchg
pop
jo
xchg
cmp
aad
decl
xchg
mov
jnp
je
xchg
xor
ja
in
mov
cmpl
call
xor
pusha
popa
icebp
xchg
das
clc
xchg
sub
pop
lds
dec
repnz
jp
lahf
xchg
xchg
inc
negb
stc
movsl
cmp
pop
cmp
repz
lock
pop
xchg
sub
sub
cld
incl
scas
stc
jp
mov
cmpsb
pop
fwait
lret
xor
fmuls
repz
out
clc
pushl
gs
xor
push
jnp
call
dec
xor
cmp
popf
decl
xlat
jne
inc
sub
xchg
cmp
xchg
push
lock
test
insl
jmp
insb
xlat
nop
outsl
xor
xchg
loope
scas
daa
jno
mov
jnp
test
pop
adc
jno
mov
stos
ja
pop
call
inc
lcall
xchg
mov
stc
addb
rcl
dec
add
xor
pushf
add
inc
mov
push
mov
mov
cmpsl
fwait
sbb
xor
incl
cmp
dec
xchg
mov
arpl
mov
rcrl
push
ss
mov
jnp
out
fxch
mov
lock
cmp
jge
imul
mov
enter
in
mov
xchg
and
scas
jmp
idivb
push
clc
jns
mov
or
inc
scas
ja
incl
pop
or
fiaddl
rclb
push
call
fmull
xor
or
xor
mov
inc
loope
or
je
scas
in
repz
lcall
dec
test
dec
fdivl
cmpsl
stc
mov
pop
fcoml
add
rcll
lret
jo
cmp
clc
add
ljmp
pop
fidivs
cmpsb
jne
aas
ja
leave
and
mov
pop
cmp
mov
push
xchg
push
roll
mov
rcrb
adc
and
cs
addps
dec
dec
pushl
imul
push
lret
xor
add
jne
xorb
mov
inc
fstps
or
daa
mov
scas
es
push
mov
mov
jmp
cs
ljmp
clc
push
add
xor
cmp
push
fiadds
dec
xchg
ss
adc
xor
imul
inc
cld
and
inc
sbb
inc
jmp
xlat
push
out
movsb
pushf
adc
aas
idiv
aad
sub
push
cmp
call
mov
pop
fwait
ljmp
xchg
xchg
ljmp
fsubrs
xchg
cmp
cltd
cmp
xchg
icebp
aad
push
xchg
push
add
dec
xchg
in
test
jbe
fdivrs
xor
jge
icebp
jg
lods
in
push
xorl
cmpsl
daa
mov
aam
mov
imul
xor
cmpsl
fdivs
and
mov
fidivrs
popf
iret
adc
xor
test
outsl
hlt
xchg
pcmpgtb
sti
mov
scas
and
and
pop
mov
cmp
sar
incl
rcr
ret
push
jmp
ret
fcoms
cli
fldt
pop
xchg
and
call
leave
push
mov
xor
imul
jl
les
cmp
inc
fisubl
push
pop
and
test
scas
clc
mov
xchg
mov
clc
ljmp
ljmp
jo
mov
scas
enter
sbbb
jnp
mov
mov
fcmovnu
mov
jo
cmp
and
popf
filds
stos
or
decl
and
mov
or
and
or
je,pn
mov
lds
xchg
test
jo
cmp
call
loope
add
out
lret
cwtl
xor
pop
mov
mov
pop
inc
les
xchg
and
mov
pop
cwtl
push
inc
inc
sbb
jp
add
dec
cmp
aad
pop
mov
and
fsubr
inc
mov
sbb
ficoml
add
mov
and
inc
loop
das
pusha
shlb
cmp
ffreep
xor
scas
arpl
dec
decl
xchg
in
mov
sbb
addr16
aam
mov
les
inc
arpl
mov
lret
xchg
mov
int3
jl
xchg
sbb
dec
call
push
sbb
or
sti
cmc
jmp
pop
outsl
lahf
push
sahf
jne
xor
call
daa
dec
sbb
mov
addl
hlt
scas
dec
lahf
lods
jle
sub
sti
ljmp
add
sub
call
pop
std
frstor
jle
push
mulb
or
cld
inc
js
or
inc
sbb
roll
pusha
and
sbb
ljmp
insb
push
icebp
xor
or
dec
xor
hlt
adc
jge
rorl
outsb
dec
std
sbb
popf
call
xchg
dec
jmp
and
push
mulb
xchg
std
jmp
sbb
sbb
sahf
vmulpd
jl
push
pop
sub
fst
inc
lcall
xlat
bound
sub
sbb
in
movsb
shrb
cmp
imul
lock
dec
add
cmp
jbe
data16
call
incl
imul
push
xchg
xchg
cwtl
popa
out
sahf
enter
push
imul
incl
jno
fnstsw
mov
je
test
incl
dec
push
fistpll
dec
fcoms
pminsw
loopne
push
clc
movsl
pop
add
xlat
lcall
add
dec
insl
mov
pop
fwait
and
pusha
adc
lcall
inc
inc
fs
es
nop
inc
inc
pop
loop
lcall
push
dec
in
rorl
popf
rolb
mov
add
arpl
dec
sbb
adc
cltd
cwtl
push
inc
mov
push
or
loop
stos
test
lret
dec
adc
decl
lcall
push
mov
cwtl
jno
pop
push
lcall
ljmp
xor
mov
bound
jbe
push
push
dec
out
push
jno
sahf
inc
cmp
pushl
push
test
mov
test
rcrl
sbb
xchg
lcall
pop
dec
jne
outsb
popf
push
mov
daa
stos
push
xchg
sbb
ret
fldt
xchg
lcall
fistpll
jle
popf
jne
xchg
mov
mov
mov
xor
and
cmp
orl
daa
mov
imul
fcomp
pop
call
add
xchg
inc
inc
sub
cmp
mov
ds
stos
test
lahf
sbb
jae
push
sti
bound
data16
add
mov
jmp
cmp
adc
out
cmc
popa
sbb
cltd
push
pop
push
inc
je
sbb
xor
dec
pop
jbe
pop
add
xor
cmpsl
data16
ja
adc
fistps
int
push
or
call
mov
mov
cmovge
arpl
pop
imul
ljmp
xchg
mov
push
insb
jle
test
mov
mov
std
add
pop
iret
dec
decl
outsb
outsb
sbb
stos
into
and
test
call
and
dec
into
jae
xor
ret
sub
js
mov
push
mov
rcrb
and
jp
mov
inc
and
mov
jmp
enter
xchg
daa
cmp
or
mov
inc
fdiv
or
cwtl
jg
jo
sbb
mov
mov
xlat
mov
or
dec
jno
lcall
les
xor
dec
lods
xor
popa
push
iret
andb
std
nop
dec
fucomp
adc
mov
das
gs
pop
mov
imul
pop
mov
xchg
jg
xchg
push
add
jmp
mov
mov
arpl
lcall
dec
dec
movsb
jmp
adc
loop
xor
dec
jnp
pop
lock
jg
inc
imul
push
and
loope
cmc
mov
mov
mov
mov
jae
mov
mov
cmp
insl
inc
fmull
hlt
decl
inc
out
out
mov
jg
dec
inc
rclb
popf
or
loopne
add
enter
xlat
add
and
inc
adc
pop
mov
mov
mov
ja
jle
xlat
adc
in
xchg
shll
add
in
push
mov
adc
ljmp
nop
mov
push
loop
sbb
pop
cmp
mov
mov
ljmp
xchg
jnp
cmp
aaa
xchg
and
nop
mov
pop
cld
ljmp
jg
call
leave
int3
pop
in
lret
in
xor
cmp
xchg
sub
call
xchg
mov
pop
push
mov
jmp
adc
ljmp
mov
test
and
loopne
push
popf
xchg
jo
scas
mov
lods
xchg
cmpsl
jmp
ljmp
scas
mov
jae
imul
int
push
loop
clc
sub
add
inc
in
aam
or
out
movsl
pushl
popf
les
cmp
xchg
adc
adc
fildll
add
jno
sbb
lds
call
sub
lret
enter
push
inc
inc
mov
roll
jmp
shrl
pop
jne
movsl
sbb
sub
add
fs
ret
repnz
sbb
or
fs
pop
mov
jp
inc
mov
push
xchg
sub
pushl
jne
aam
test
xchg
pop
inc
adc
mov
jg
test
dec
sub
xchg
xchg
sub
sbb
inc
lcall
jl
stos
dec
mov
jae
out
or
push
adc
jns
dec
int3
jmp
pop
out
jmp
sub
out
xchg
and
lahf
add
hlt
ret
and
cmp
fwait
mov
fisttpll
cmp
call
xchg
sub
scas
mov
aad
inc
js
mov
mov
sub
mov
dec
push
xor
sub
cmp
inc
adc
ja
shll
xchg
push
pop
cmp
jg
inc
scas
sub
clc
cwtl
and
cli
and
jb
fldenv
fcmovb
push
push
test
pushl
ret
mov
cmpsl
xchg
enter
mov
decl
aad
nop
insb
cmp
pop
fistl
push
jns
push
loop
ret
push
sti
push
adc
jns
dec
fwait
mov
fstl
scas
or
ss
xor
lods
sub
adc
push
mov
xor
jmp
int3
sub
mov
scas
loope
insb
cmp
and
dec
ret
vmovntps
push
ss
popa
jmp
lea
sbb
jns
pop
std
jne
jbe
neg
push
jns
push
push
xor
xor
dec
inc
imul
ljmp
or
sub
outsb
inc
push
pop
push
lods
mov
aad
jg
or
repz
mov
movsl
sub
leave
dec
jge
xchg
and
shr
mov
mov
xor
mov
rcrb
pop
push
sub
pusha
mov
repnz
outsb
call
sar
out
loope
lcall
push
mov
cmp
lcall
sbb
pop
cli
push
inc
inc
fcmovbe
loop
dec
pop
mov
test
mov
clc
cmp
sbb
stc
into
stos
mov
or
xchg
xchg
push
cmpsb
cmp
mov
outsl
pushf
dec
aas
cli
mov
scas
mov
mov
sbb
dec
inc
lcall
and
and
mov
loop
push
and
rolb
xchg
jg
cld
mov
jbe
dec
daa
out
sbb
lret
stos
or
xchg
sub
jmp
repnz
pop
pop
sahf
inc
xchg
imul
fs
sub
cmpsb
aaa
push
icebp
jmp
mov
xchg
sbb
xchg
movsl
push
gs
xlat
xchg
xor
stos
dec
push
lcall
and
cmp
mov
daa
pop
in
or
in
pop
cli
addl
icebp
lcall
mull
fcmovne
adc
lods
cmp
jmp
lcall
rol
dec
out
data16
sbb
rcll
aas
mov
xor
shlb
out
cmp
add
ficomps
mov
out
xor
es
push
inc
stos
xchg
push
jno
push
ret
push
pop
lock
call
pop
hlt
push
mov
pop
inc
rcll
divb
out
push
es
pop
adcl
jg
jmp
sbbl
xchg
fidivs
data16
divb
xchg
daa
outsl
push
inc
cmp
sub
aaa
std
jmp
mov
inc
rcrl
ret
mov
cmp
orb
fs
movsl
inc
mov
ljmp
xor
mov
jnp
jnp
jno
jge
js
adc
lcall
jl
popa
sbb
mov
sbb
mov
pusha
shlb
xchg
add
pushl
xor
inc
out
dec
aaa
sub
cmpsb
push
push
pop
jne
mov
jo
xchg
and
xor
cmp
pushl
ja
aas
call
cmp
repnz
cmp
jg
test
cwtl
insb
add
sar
cmp
or
in
inc
jnp
and
call
dec
and
ret
pop
pop
out
cli
and
lea
sbbb
jmp
jle
jb
xorl
and
out
dec
mov
mov
dec
mov
mov
decl
inc
push
mov
pop
adc
mov
adc
adc
mov
ljmp
xchg
pop
jl
loope
incl
sub
xchg
aam
addr16
push
adc
sub
test
push
dec
out
call
cli
test
fsubrs
mov
bound
sub
jne
mov
fs
cmp
frstor
arpl
pop
mov
dec
in
pop
jmp
loope
in
out
xor
rcrb
outsb
pop
mov
arpl
inc
incl
inc
movsl
push
dec
cmpsb
outsb
lahf
dec
mov
add
incl
jb
jb
cmp
cmpsb
and
push
sbb
ret
push
and
lret
pop
loopne
push
mov
pop
mov
aas
adcb
in
ss
jp
xchg
cmp
add
and
data16
jb
inc
xchg
xchg
jp
cwtl
push
popa
inc
gs
and
cwtl
rolb
xchg
pushl
fsubs
mov
push
and
ljmp
jle
daa
xor
test
das
lds
fcoms
and
ljmp
ja
pop
xchg
mov
pop
mov
pop
cli
mov
ja
mov
jecxz
je
decl
adc
jg
adc
adc
xchg
add
mov
jg
test
mov
stos
push
jbe
add
push
fisubl
pop
je
gs
cmp
ret
mov
adc
push
cli
mov
and
aas
mov
jp
rcll
imul
decl
pushf
pop
xchg
mov
ds
jns
fstps
es
inc
push
sbb
add
push
and
js
pop
adcl
mov
bnd
mov
ljmp
imul
ss
adc
pop
imul
xchg
movsl
inc
call
xor
ret
jae
ret
sub
adc
mov
jge
pop
sbb
ljmp
push
out
xor
inc
test
cmp
decl
in
mov
pop
add
test
sahf
stc
push
sahf
test
and
jmp
adc
adc
lds
mov
ja
sbbb
xchg
scas
fldenv
xlat
ja
cli
xchg
push
sbb
jnp
jmp
or
xchg
push
loop
movb
stc
mov
pop
repnz
jo
pop
and
pop
aad
mov
xchg
sbb
mov
add
xor
aam
fcomp
daa
fwait
xchg
inc
in
decl
cs
push
sbb
inc
cmp
cwtl
test
pop
xor
mov
add
sbb
ret
push
popa
xor
xchg
pop
loope
jmp
daa
dec
notl
cmpsl
mov
jmp
imul
ret
xlat
push
frstor
pop
or
mov
popf
mov
jmp
lods
sub
mov
mov
dec
popa
xor
dec
subl
lcall
mov
jmp
ja
mov
xchg
les
mov
add
mov
lcall
xchg
cmp
or
pop
xor
mov
out
add
push
jmp
lea
aam
pop
roll
jge
stos
mov
mov
jne
mov
lods
les
mov
sbb
push
xorb
jae
popa
jl
clc
mov
out
xchg
das
clc
push
xchg
out
and
ja
cli
push
push
sub
push
lcall
lods
xor
push
pop
lcall
das
decl
jo
pop
nop
stos
outsb
dec
and
xor
dec
inc
inc
mov
int3
scas
ja
lcall
push
mov
dec
xchg
addr16
sbb
icebp
adc
orb
andl
out
leave
cltd
pusha
imul
mov
test
sbb
jns
popa
mov
pushl
lods
inc
pop
pop
mov
sahf
ds
xchg
mov
mov
dec
in
cmpsb
lock
sub
add
xchg
lret
das
shufps
icebp
cwtl
mov
xchg
test
pop
sbb
incl
cmp
mov
mov
push
dec
repnz
push
repnz
lds
pop
or
pop
mov
cmp
dec
and
mov
cmp
sbb
adc
push
ja
add
test
cmpsl
push
clc
fldenv
mov
inc
and
ja
jmp
in
jb
pop
cmp
es
lods
xchg
pop
pop
ret
lods
pop
outsl
pslld
mov
into
imul
inc
imul
pushl
cld
push
sbb
es
mov
stos
lcall
mov
aam
aas
decl
sbb
inc
mov
mov
sbb
and
divl
sub
mov
shll
xchg
mov
cwtl
adcl
imulb
test
loopne
out
push
mov
sub
sbb
fwait
imul
xchg
jg
mov
std
and
decl
mov
and
out
outsb
mov
lret
jmp
inc
jmp
aaa
sub
decl
or
sub
fwait
sub
int3
cmp
outsb
icebp
pop
cwtl
and
out
inc
hlt
xchg
and
cli
pushl
std
subl
imul
and
mov
hlt
mov
mov
mov
sahf
lea
jnp
jnp
test
fidivrl
mov
lahf
cs
mov
sub
inc
ds
lock
incl
out
aam
xchg
arpl
enterw
je
xchg
mov
scas
jmp
imul
xacquire
call
fldt
sbb
je
lds
push
js
fs
aaa
add
sub
subl
sbb
lcall
lret
mov
leave
stos
and
xchg
popf
cmp
adcb
sub
cmp
and
jg
xchg
push
xchg
dec
sbb
adc
les
inc
inc
in
mov
pop
sub
insb
std
add
pop
mov
test
xor
mov
fildll
repz
mov
mov
mov
aam
cltd
testb
jmp
mov
scas
xchg
popa
sar
ljmp
pop
sub
popa
mov
test
xchg
jle
ret
cwtl
adc
mov
call
sub
stos
pop
jp
jg
inc
cld
xchg
pop
rolb
pop
and
jmp
jg
decl
mov
push
adc
mov
xor
stos
pop
fnstenv
mov
jmp
xchg
dec
mov
pop
divb
xor
jnp
cli
dec
xor
mov
lea
cmpl
xor
pop
mov
push
into
out
int3
roll
aas
push
js
les
fstpl
push
fisubrl
mov
aad
cmp
push
mov
iret
sub
aad
adc
xor
lods
fmull
push
cmp
jb
or
pushl
fdivrs
push
sub
adc
mov
inc
push
int
scas
lods
xor
mov
adc
bnd
mov
movsb
lcall
dec
push
rcr
mov
or
cltd
ljmp
and
xchg
stos
aas
mov
jnp
stos
cltd
add
cmp
ss
dec
dec
movsb
jle
pop
mov
movsb
int
dec
sub
aaa
cmpsb
ret
pop
sub
mov
mov
push
dec
fsubs
dec
arpl
xor
adc
popa
lea
test
mov
decb
xchg
ret
mov
cmpsb
ss
fistpll
jae
orl
xor
aad
je
mov
jmp
xor
mov
mov
add
cmp
mov
dec
das
rcrb
cmpsb
cmp
cmp
and
fistps
jbe
insl
add
ljmp
loopne
mov
mov
lret
pop
xchg
pop
jo
xchg
push
push
adc
adc
incl
xchg
cmp
sbb
fsubl
popf
rorl
outsl
mov
fdiv
movsl
pushl
xchg
pop
int
movsb
pop
mov
jge
pop
or
jmp
sbb
stos
pop
leave
inc
mov
pop
popa
sbbl
mov
call
inc
mov
fcmovnb
add
xchg
xchg
adc
push
int
mov
mov
std
shlb
xchg
bound
faddp
incl
pop
pop
ljmp
push
jb
mov
add
push
jmp
add
fucomip
fcoms
outsb
xorl
inc
sbb
out
jp
fistpl
mov
fwait
sahf
adc
test
push
pushl
inc
cli
push
mov
jmp
and
adc
iret
fwait
xor
jmp
and
dec
mov
pop
icebp
lcall
sbb
in
int
les
shrb
ss
ja
fistl
cld
mov
aad
cs
pop
sbb
nop
aam
jg
jmp
jp
decl
cmpsb
or
lahf
mov
fcomps
out
or
out
jl
push
std
ljmp
mov
jmp
cmp
jbe
popa
xor
movsl
dec
std
push
push
xor
incl
adc
out
push
pop
pop
mov
adc
repz
dec
cli
decl
jns
dec
mov
xchg
jnp
jecxz
jecxz
les
fldt
push
dec
ljmp
and
pop
push
scas
imul
pop
insl
mov
decl
mov
add
sub
sbb
test
int
movsb
stos
pushf
stos
cli
inc
mov
hlt
cmc
sub
aam
lcall
xchg
loope
push
jmp
jae
cmp
mov
fisubrs
pop
out
add
jge
pushf
out
push
cli
test
adc
or
jle
and
jp
dec
cld
lds
ror
and
and
ljmp
mov
ja
xorb
insb
jecxz
push
lods
dec
dec
int
lret
dec
adc
cs
lcall
jbe
jns
fwait
mov
pop
push
test
push
sub
xor
shll
cli
add
mov
dec
leave
lods
test
cld
sub
pop
push
pop
test
cs
push
fldl
jno
push
mov
fistpll
aam
cwtl
jb
push
sub
lcall
mov
test
rcrb
add
sahf
ret
ljmp
clc
push
in
ds
fisubs
mov
jbe
outsl
fisttpll
xchg
hlt
push
jle
sbbb
push
jns
inc
dec
mov
xor
pop
sbb
mov
subb
inc
cwtl
incb
add
push
mov
push
and
pushf
cwtl
push
mov
cmpsb
add
xor
ljmp
jmp
sub
lcall
imul
mov
jg
repnz
and
rcrb
fistpll
sbb
test
push
stos
nop
adc
mov
mov
pop
aam
shlb
pop
mov
push
mov
pushl
in
bound
bound
jecxz
rcl
push
mov
mov
movsl
pop
rol
push
icebp
int3
push
ret
cmp
movsb
mov
push
ret
xchg
or
shl
or
out
dec
or
je
decl
and
incl
lods
or
hlt
ljmp
ret
sbb
adc
icebp
pop
cmp
fists
aas
inc
in
jb
pop
test
outsb
jl
hlt
out
xchg
pushl
pop
pop
cli
mul
mov
pop
paddb
loop
movl
mov
dec
loop
jmp
adc
cltd
mov
call
pop
push
add
iret
mov
and
and
dec
and
or
pop
lods
xlat
ljmp
xchg
xor
dec
and
xor
ret
jl
mov
repnz
mov
sahf
cmp
cli
pushl
ficoml
adc
test
stos
cmpsl
out
or
cmpsb
pushf
sbb
ljmp
clc
in
stos
lret
or
movsb
mov
call
cmpb
lcall
inc
jo
mov
cmpsb
std
test
ret
mov
fwait
mov
mov
insb
sub
xchg
shlb
xor
pop
dec
int3
sub
inc
mov
or
int3
insb
adc
test
jno
int
dec
cld
fbld
arpl
rorl
lcall
decl
jle
sub
ljmp
dec
xchg
xor
mov
mov
mov
cmp
pop
sub
fwait
into
shl
shrb
mov
loope
lcall
jb
push
mov
xor
ss
fnstenv
add
mov
ret
rclb
mov
bound
incl
push
cld
mov
sub
push
test
movsl
pop
daa
roll
aaa
lret
out
xchg
xor
sbb
mov
or
lret
fs
inc
add
bnd
jmp
shlb
int3
mov
ret
pop
dec
ret
sbb
call
repz
cs
inc
jg
ljmp
xor
adcb
fidivrl
sti
or
or
pop
sar
push
pop
out
xor
sarb
or
decb
aam
dec
inc
xor
dec
scas
xlat
mov
push
xchg
ljmp
popf
fidivrl
loop
sub
aas
add
cmc
jp
and
jns
cmp
pop
aad
stos
mov
mov
fwait
std
call
cmp
sbb
scas
jbe
leave
rcrb
dec
pop
push
popa
fdivrl
mov
mov
pop
or
jl
cwtl
ret
mov
xor
push
stos
lods
test
adc
subl
int3
mov
decl
ss
les
mov
xchg
adc
test
dec
aaa
stc
mov
dec
mov
inc
jae
fisubs
stos
mov
ret
push
notb
fsubs
jbe
sub
add
mov
je
dec
push
inc
popf
push
push
jle
shr
test
lods
into
enter
cmc
ljmp
ret
jecxz
imul
fimull
shll
pop
push
sbb
vcvtss2si
loope
aas
add
add
leave
fmul
add
sar
sahf
fcompl
add
ret
insl
cmovs
jbe
adc
leave
cmp
inc
add
out
orl
inc
xchg
call
in
xchg
repnz
jge
rcr
cmp
jae
stc
xchg
push
fwait
push
and
mov
mov
cmc
jmp
xchg
adc
push
jecxz
jecxz
rclb
stos
and
clc
int
pusha
mov
lret
push
push
and
cs
sbb
cmpsb
cwtl
pop
ds
cwtl
lea
xor
fldcw
test
ret
inc
sub
sub
sub
es
repnz
dec
xlat
push
adc
jle
imul
int
mov
mov
cltd
movsb
inc
and
dec
mov
pop
ret
lods
or
inc
sub
call
mov
add
push
test
mov
and
push
mov
mov
pop
leave
gs
dec
or
ljmp
fiadds
pop
daa
sbb
enter
pop
sub
dec
mov
stc
nop
jae
fwait
js
movsb
rolb
dec
dec
jg
sub
inc
mov
rorl
cwtl
test
jbe
gs
sub
shlb
mov
push
sbb
push
lahf
lret
mov
rcll
sub
mov
ret
adc
rol
jp
sub
adc
cmp
push
out
adc
call
sub
je
test
mov
xor
cmc
mov
mov
mov
xchg
dec
jmp
jl
jns
dec
mov
dec
add
jns
lods
bound
or
dec
inc
xchg
cmp
call
mov
sub
fbstp
push
mov
push
aad
add
cs
hlt
and
and
int
adc
data16
cmp
push
movsb
imul
mov
mov
dec
movsb
jg
jg
add
adc
insb
sbb
pop
dec
cmpsl
out
hlt
ljmp
sub
clc
mov
pop
je
mov
and
or
decl
pop
cwtl
mov
xchg
lds
outsl
add
enter
incl
jb
adc
lcall
inc
imul
data16
pop
xor
call
mov
mov
js
int
in
ja
add
orl
mov
cmp
pusha
sbb
xchg
fisttpll
dec
push
cmp
mov
pop
xchg
fidivl
sub
cmpsb
in
mov
pushl
or
lea
pushw
pop
xchg
lock
lods
pop
pop
imul
push
fwait
xchg
mov
xchg
lods
in
pop
es
dec
ficomps
outsl
clc
sbb
push
mov
jp
fs
xchg
pop
shll
inc
inc
call
ror
repnz
fcmovnb
adcb
jne
mov
decl
hlt
divl
sub
in
imul
sub
ljmp
lret
clc
decl
incb
imul
rcrl
xor
movsb
insb
sbb
nop
inc
xchg
push
pop
mov
pop
jmp
enter
shlb
fisttpl
adc
arpl
js
outsl
xchg
push
or
xchg
fsubrl
clc
call
popa
inc
popa
je
pop
and
sbb
pop
clc
rcrl
ja
jae
adc
cmp
pop
inc
sar
xchg
fdivrs
pusha
add
js
jg
dec
pop
loopne
cmp
dec
pop
subl
inc
sub
or
ljmp
or
pop
call
add
mov
push
cltd
pop
pop
fwait
loop
mov
test
or
in
int
push
dec
pop
pop
in
mov
jno
adc
ljmp
rol
push
shll
xchg
mov
aad
cmp
fistps
or
lcall
add
dec
loopne
outsb
sahf
cmpl
jnp
cmc
inc
or
add
dec
ss
xor
pop
xchg
jg
xor
ljmp
add
and
mov
les
outsb
jl
adc
stc
cli
mov
jmp
sub
mov
push
leave
pop
call
jno
aad
mov
aaa
rol
mov
in
xor
cmc
aam
adc
push
xchg
es
aas
sub
ror
imul
or
insb
inc
push
or
stc
push
add
je
xor
int
lea
cltd
push
aad
sub
sti
sbb
mov
loop
ljmp
imul
adc
popa
mov
adcl
jl
icebp
fldl
mov
out
dec
add
and
hlt
mov
mov
inc
and
lods
rorl
xor
jl
cmp
adc
incl
pop
inc
sub
add
sbb
ljmp
out
ljmp
adc
jb
xor
inc
pop
push
push
and
cmpsb
cmp
popa
xchg
xchg
cli
mov
out
pop
in
adc
test
mov
add
mov
mov
lcall
or
pop
lea
mov
arpl
mov
aaa
test
mov
mov
xchg
or
xor
inc
mov
mov
movsl
adcb
lcall
jp
and
xchg
mov
daa
in
jae
out
push
sub
or
arpl
enter
pusha
mov
rorl
test
add
sti
sub
bound
pushl
test
mov
lret
xor
lock
fnstcw
cmp
mov
push
daa
mov
lods
mov
adc
xchg
xchg
adc
jmp
mov
cwtl
aaa
ficompl
xchg
rcl
or
jg
and
out
dec
xchg
out
lret
sub
add
xor
ljmp
dec
mov
xchg
dec
mov
imul
mov
loope
cmp
cmp
test
mov
dec
mov
leave
xchg
out
ja
cli
jmp
jp
ss
scas
mov
inc
mov
xor
jmp
adc
cli
ret
test
jb
les
or
sbb
xchg
scas
lds
or
cmp
jge
mov
and
push
and
and
popf
pop
or
sbb
add
loop
sbb
inc
add
cmc
jg
aam
push
or
sarb
push
sahf
outsb
push
jg
jp
cs
or
push
pop
or
pop
sbb
in
sahf
popf
pusha
mov
pop
hlt
pushl
sub
mov
lret
or
mov
pop
mov
clc
pushl
call
inc
xchg
bound
arpl
mov
sbb
jmp
dec
das
inc
test
inc
lods
xor
mov
fistpl
dec
dec
fwait
add
add
mov
sub
pop
std
call
cmpsb
inc
jecxz
icebp
inc
cli
xchg
mov
stos
mov
dec
mov
jg
mov
or
mov
cltd
loope
sbb
sbb
adc
push
push
pop
mov
add
pop
in
mov
xchg
inc
and
int3
sub
mov
xchg
lcall
mov
enter
aam
mov
pop
xor
mov
sub
shll
aas
push
sbb
lret
imul
stos
dec
xchg
xchg
mov
ret
ss
mov
cmp
mov
adc
lcall
sbb
sbb
enter
mov
mov
insl
adc
and
dec
sbb
add
jg
int3
sub
mov
cwtl
inc
mov
xchg
dec
sub
mov
sbb
fldenv
sti
adc
sub
pushl
push
lcall
push
sbb
mov
int3
adc
sub
incl
adc
mov
movsl
cmp
xor
in
mov
mov
out
sar
decl
inc
lods
dec
cli
shlb
test
iret
enter
cli
lret
popa
mov
jge
ljmp
mov
jns
mov
imull
mov
loop
aam
lcall
aas
cmp
daa
arpl
add
shll
mov
mov
ljmp
xor
mov
mov
inc
pop
jb
xchg
test
adc
daa
xor
sti
rolb
cmp
sti
push
adc
mov
or
test
mov
and
pop
cmp
decl
dec
ja
ds
cltd
fcom
pop
or
xor
mov
mov
xchg
xchg
lcall
fisttpl
push
lock
int
mov
dec
enter
pop
incl
xor
gs
push
ss
fwait
pop
movsb
xchg
dec
or
push
and
dec
fldl
xchg
add
aad
ret
cmp
mov
cmp
push
inc
popf
movsb
cmp
mov
aas
sti
push
adc
dec
inc
out
dec
mov
dec
sbbb
adc
xor
push
xor
in
mov
xchg
sbb
stos
movsl
int3
movsb
mov
fnsave
incb
lds
decl
mov
cmpsb
cmc
jns
sbb
stc
insb
leave
int
leave
sbb
aad
add
decb
mov
in
xchg
loope
lcall
adc
xor
adc
xor
leave
call
es
cmpsl
and
stos
test
cli
dec
lcall
cmp
ret
lods
icebp
lods
jmp
ror
sti
mov
je
mov
ljmp
mov
sub
and
cmpb
mov
xchg
pop
cld
jl
and
mov
pop
scas
sub
aam
incl
pushl
ds
mov
adc
xor
inc
ficomps
aam
test
mov
sub
push
inc
outsl
cmp
xchg
adc
mul
aaa
rcr
sbb
cmpsb
ljmp
test
inc
pop
sub
pop
jle
cmp
je
stos
sbb
jmp
and
icebp
decl
rol
mov
xchg
shll
xor
lcall
out
test
rorl
cmp
sub
sbb
stos
inc
xor
lea
cmp
dec
rcl
mov
pushf
mov
xor
ret
ret
sbb
sbb
dec
xor
loopne
lods
mov
ljmp
fimull
iret
lret
mov
jg
jo
inc
push
sub
cwtl
adc
lock
or
mov
cmpsb
jecxz
sahf
shlb
decl
cltd
rcrl
mov
mov
xor
sbb
lcall
ljmp
aad
xor
or
popf
je
mov
popf
mov
pop
cmp
inc
and
stc
cmp
nop
int3
push
push
shlb
filds
loopne
sbb
aam
push
imul
ror
jbe
or
and
jg
push
je
dec
pop
xchg
lea
ret
ss
push
and
ret
sub
seto
cld
lcall
insl
arpl
jns
rclb
pop
dec
icebp
test
rcll
aaa
movsb
push
sbbl
adc
in
or
and
add
mov
inc
pop
dec
jne
dec
gs
test
mov
ja
cmp
nop
pop
add
pop
push
cmp
int
call
pop
cmc
bound
xchg
es
dec
mov
lret
pop
sub
pusha
popf
or
jecxz
pushl
cmp
mov
rorl
sub
daa
in
xchg
jnp
adc
movsb
inc
aaa
sub
loope
lcall
and
sbb
sub
pop
ret
rclb
dec
xor
test
jle
mov
adc
pop
add
pop
lods
adc
sar
incl
scas
std
cmp
add
sbb
fsubrs
btc
call
or
fs
cmc
xlat
add
push
adc
push
inc
mov
js
cmpsb
push
std
rorb
push
or
mov
xor
pop
mov
push
mov
adc
popa
test
mov
hlt
movsl
or
pop
lret
insb
aad
repnz
add
lcall
lea
aaa
mov
mov
or
gs
sub
cmp
loop
fbld
lea
fiaddl
sbb
pop
cli
mov
aad
sub
pop
sub
sub
xor
scas
fcomps
inc
jb
iret
repnz
ljmp
hlt
sbb
ficoml
xor
jb
jge
out
stos
fstpt
xlat
lock
lcall
adc
cld
call
dec
cmp
xchg
inc
ds
sbb
pop
je
push
fcmovu
int3
inc
push
push
fisubs
decl
mov
push
xchg
inc
es
enter
cltd
sbb
gs
xor
popa
sbb
int
lds
pop
std
es
fistl
loopne
xchg
lret
cwtl
mov
imul
fstps
loop
mov
mov
push
fcompl
adc
aad
loop
dec
fucomp
jbe
mov
mov
outsl
aad
push
or
push
cld
jbe
xlat
xchg
mov
xlat
xchg
cmpsb
dec
scas
clc
jmp
fnstcw
xchg
push
cmp
iret
and
pop
sbb
mov
xchg
cmp
fldl
or
aaa
std
jmp
leave
ficoml
sahf
adc
lret
mov
cmp
scas
mov
mov
adc
loopne
mov
lret
cmp
mov
jecxz
sub
adc
mov
inc
rcrl
rcrl
shrb
insb
xchg
or
in
adc
scas
loope
shl
lcall
sbbl
sarl
mov
ss
xor
daa
and
mov
or
sub
in
sbb
mov
icebp
sbb
mov
mov
ljmp
hlt
push
nop
jne
jmp
adc
lock
jmp
lods
sub
ret
test
in
pop
stc
or
inc
pushl
adc
cmpsb
test
mov
mov
stc
insl
sub
push
in
dec
mov
cmp
ljmp
xor
loopne
lods
or
ss
cs
jmp
outsb
cmp
mov
cmp
popa
mov
lds
adc
dec
in
cmp
ret
sub
dec
mov
scas
ss
xchg
jl
jg
testb
ffree
and
mov
popa
clc
popa
jmp
insb
or
jmp
out
ret
cmpsb
pop
inc
or
lock
ljmp
pushl
std
lcall
out
repz
xor
sahf
mov
clc
jle
popa
mov
push
ror
pop
sbb
imul
mov
mov
icebp
cwtl
inc
stos
pop
push
push
ds
xor
nop
ja
pop
inc
xlat
or
lcall
adc
inc
shl
mov
sbb
or
ss
lcall
push
push
ss
bnd
dec
pop
stos
outsl
cltd
mov
and
aad
hlt
outsl
fs
fistpll
mov
fisubl
shll
lcall
jg
out
std
mov
mov
leave
push
jmp
into
loopne
ja
into
pop
cmc
mov
out
jg
lcall
jae
mov
sub
and
dec
loopne
push
push
adcl
shrl
call
or
adc
jb
push
scas
inc
sbb
push
jmp
int
les
push
lcall
test
adc
rol
sar
jmp
ja
mov
dec
jne
adc
enter
sub
inc
into
inc
push
jno
pop
mov
lcall
in
sbb
add
jno
xor
sbb
popf
pushf
stos
loop
mov
leave
or
and
shll
movsl
pop
daa
lds
lret
push
sbb
imul
mov
call
mov
and
pop
loop
lret
xor
sbb
pop
push
andl
lods
repz
lcall
cmp
addl
lret
sub
insl
mov
scas
in
mov
sbb
push
push
push
xor
mov
lock
inc
jmp
dec
dec
or
mov
lods
sar
outsb
pop
popfw
lcall
clc
add
mov
mov
jne
test
sbb
in
xor
sbb
icebp
xchg
jecxz
decl
lea
or
cmpsl
mov
mov
hlt
in
movsl
dec
daa
push
mov
ljmp
cmpsl
outsl
add
cli
hlt
hlt
push
mov
aas
or
in
dec
sar
jmp
hlt
mov
out
inc
cmp
add
cwtl
mov
dec
adc
ret
xchg
rorb
cld
ljmp
cmc
ja
dec
mov
or
aaa
dec
jbe
xor
jg
jp
scas
jl
lea
inc
orb
loopne
push
or
lret
aam
push
les
mov
rolb
jg
push
punpckldq
inc
bound
push
andb
dec
mov
dec
xchg
pop
xadd
cmp
inc
cmpsb
dec
cltd
inc
inc
loop
sub
sahf
cmp
xchg
mov
or
out
clc
movsb
daa
xorb
or
push
mov
push
lds
inc
and
inc
decl
shlb
xchg
pop
push
in
pop
mov
lods
cwtl
xor
mov
sub
cli
clc
sti
pop
insl
pusha
dec
and
js
jecxz
mov
aaa
outsb
push
xor
xchg
pop
pop
sahf
int3
push
mov
pushl
mov
xor
fimuls
and
xchg
xor
in
and
std
pushl
insb
push
push
pop
add
mov
mov
ret
cld
mov
jns
loope
cmp
les
lods
inc
xor
hlt
lods
fmull
dec
test
cmp
icebp
cmp
pop
push
adc
pop
sbb
shrb
aas
mov
sub
jmp
add
or
xchg
pop
dec
adc
cmpb
push
dec
ss
fdivr
ljmp
adc
je
imul
movsb
popf
xchg
aad
dec
jg
mov
push
and
test
jmp
pushl
jb
popa
push
dec
push
cmc
xchg
pop
fidivrs
int
arpl
std
je
add
movsl
dec
push
int
decl
jnp
icebp
test
pusha
test
call
xchg
push
dec
stc
fdivrl
in
movsl
inc
lcall
xor
lds
and
inc
rcrl
decl
aaa
fwait
imul
lds
lcall
push
dec
pop
push
mov
jbe
adcb
fisttpll
cs
jecxz
add
ljmp
push
movsl
movsl
xchg
ss
push
pusha
inc
decb
aam
lcall
loopne
adc
leave
nop
pop
stos
mov
inc
scas
bound
pop
or
cli
lcall
sub
imul
cmpsb
mov
lcall
dec
decl
mov
cmp
insb
mov
pop
and
inc
cmc
dec
adc
or
cmpsl
mov
in
decl
lods
gs
push
sbb
xlat
nop
imul
push
test
ljmp
test
lcall
xor
pop
cld
pop
sbb
jo
lret
dec
sbb
stc
daa
jno
cs
sbb
mov
dec
data16
jg
mov
cld
lcall
addr16
push
dec
call
call
cmpb
jg
mov
mov
ja
fistpl
cmpsl
std
pop
sub
sub
jl
aaa
mov
mov
popf
leave
push
nop
adc
inc
pop
add
les
mov
mov
jb
sub
pop
cmp
mov
inc
decl
test
lret
movsb
adc
movsl
rclb
call
sub
xchg
push
nop
jb
ljmp
mov
in
sbb
inc
cmpb
sub
arpl
mov
lock
dec
xor
test
ss
outsb
cmpsb
jbe
push
jmp
dec
xor
push
cli
lahf
adc
and
sbb
mov
fadds
call
xor
lret
adc
aas
cmpsb
popf
ja
cli
adc
inc
popf
pop
xor
xchg
mov
cmpb
fs
pop
inc
ds
pushf
sbb
adcb
mov
addr16
call
es
mov
aam
mov
adc
iret
insl
in
bound
mov
push
push
call
push
mov
xor
inc
sti
lret
roll
xlat
movsl
mov
cmp
rcrb
lcall
roll
or
test
cmp
jge,pn
inc
or
sub
push
jg
cwtl
and
cmp
jp
imul
adc
xlat
add
pop
es
movl
out
or
and
mov
adc
leave
mov
mov
jecxz
mov
call
xor
cli
jo
push
into
push
pop
bound
adc
inc
imul
lcall
mov
add
pop
push
shll
mov
enter
mov
lea
sbb
inc
aad
xor
mov
inc
test
cmp
loopne
inc
add
push
mov
jo
or
pop
jg
pop
xchg
push
lds
mov
push
cmp
lcall
mov
xor
cmpsb
push
sbb
nop
fmuls
add
jp
xor
mov
push
mov
and
pushl
cmc
call
dec
repz
stc
lret
pop
push
jne
movsl
mov
and
jno
dec
or
sub
pop
sub
push
popf
push
jmp
push
add
cmp
lds
mov
fisubs
mov
dec
or
add
add
pop
mov
lret
xor
pushl
mov
push
shl
dec
cltd
dec
adc
daa
imul
mov
cmpsb
or
pop
gs
xchg
les
jo
and
andb
pushl
sbb
and
leave
cld
lea
cmp
push
mov
movsl
push
push
mov
mov
cmp
fisubrl
pushf
loopne
xchg
add
ja
mov
call
repnz
lcall
movsl
adc
les
jae
and
cmpl
add
aad
mov
mov
call
fisttpll
dec
xchg
sub
jnp
dec
rol
xchg
mov
sbb
pop
sti
cli
and
clc
and
lods
das
push
psubb
sbb
insl
fidivrl
xlat
xor
ss
xor
je
lcall
test
por
cmpsb
loop
mov
fists
cmc
mov
into
mov
and
jmp
mov
push
mov
ja
or
in
inc
xchg
mov
inc
decl
and
adc
test
pop
into
lret
inc
nop
pop
or
jle
add
jmp
ret
sbb
cmpsb
cmpsb
push
mov
pop
dec
aam
imul
sbb
mov
pop
or
stos
sar
ja
or
into
sub
rorb
sub
loop
pop
jl
cwtl
mov
cmp
and
ret
mov
mov
and
adc
in
scas
jo
pushl
cld
push
fdivrp
xor
cmc
lret
cmpsl
int3
ja
cld
cltd
jae
sbb
add
lods
mov
rorl
aaa
mov
mov
aas
sbb
sbb
mov
scas
jno
jmp
mov
lahf
mov
fisubrl
ljmp
cli
fstp
push
adc
mov
add
jae
sbb
jmp
xor
or
add
ds
lods
nop
call
xchg
dec
jae
inc
loopne
jmp
ljmp
jl
sbb
push
dec
lds
mov
call
outsb
sbb
leave
mov
sti
push
cmpsb
out
jmp
xor
rol
jmp
call
push
sahf
mov
imul
cmp
cli
xchg
xor
incl
jp
push
add
dec
std
scas
scas
push
fstpt
sar
incl
pop
stos
mov
push
data16
xchg
jmp
pop
inc
ret
data16
clc
cmc
scas
out
popa
std
jg
outsl
push
out
xchg
fdivr
movsl
mov
jl
dec
in
jg
sub
pop
ficoml
push
xchg
das
xor
pop
push
or
jecxz
sub
mov
aaa
lea
jg
scas
ljmp
add
dec
out
mov
dec
out
or
notb
jo
push
ja
int3
mov
sbb
decl
ja
lret
lret
pop
xor
mov
test
sbb
push
lcall
xor
aaa
mov
or
pop
shrl
cmp
loope
mov
lcall
pop
andb
sbb
out
outsb
jae
ret
and
scas
pause
xchg
cli
cmp
decl
dec
shl
or
loopne
sub
cmp
xor
flds
push
inc
xchg
jmp
call
mov
andl
rorl
lea
mov
popf
cwtl
cmpsl
sbb
decl
bound
rcll
sbb
out
pop
jmp
push
lods
sti
scas
hlt
sti
fstps
dec
in
mov
jmp
ffreep
decl
pop
leave
or
mov
outsl
lods
push
aaa
dec
mov
fwait
add
fidivrl
inc
dec
push
out
sub
outsb
sbb
sbb
dec
xchg
decl
mov
add
mov
ret
mov
mov
out
mov
idivl
roll
sub
fisubl
loopne
mov
push
push
xor
mov
add
ficoms
pop
mov
sbb
xchg
mov
idivl
mov
lods
fsubrp
inc
sub
rolb
cli
jns
sub
test
dec
clc
aam
cwtl
fcoml
cmc
push
out
sub
push
decl
lahf
jmp
jmp
push
inc
sbb
inc
sub
jns
lods
push
or
jns
repz
and
pushl
incl
je
mov
loopne
jge
push
push
fcmovu
push
fldt
push
dec
leave
or
iret
aad
pushf
pop
cmp
int
rcl
popf
ret
std
stc
fcos
call
pop
mov
dec
inc
jne
mov
inc
fldt
int3
xor
inc
jge
xlat
jno
and
mov
inc
jmp
inc
nop
movsb
adc
push
adc
xchg
idivb
pop
js
lcall
loop
mov
mov
stos
lea
int
ja
sahf
mov
test
and
std
push
fwait
add
or
mov
loopne
sarl
xchg
and
dec
into
lcall
push
repnz
inc
dec
dec
adc
inc
adc
insl
mov
popa
adc
nop
aam
iret
xchg
shlb
rcll
inc
std
jg
int
mov
sti
cmp
cwtl
dec
addr16
aam
sub
in
pop
shl
sbb
lock
mov
call
jmp
popa
jo
and
cld
les
add
lcall
inc
and
test
movsb
xor
mov
push
fcomip
jg
xchg
mov
lds
sbb
lds
jge
pop
xchg
lahf
sbb
out
and
push
mov
sub
mov
push
sbb
or
bound
pop
std
mov
nop
repnz
cmc
sbb
jecxz
cmp
lret
jno
lret
sub
scas
adc
xchg
int
mov
iret
adc
lret
repz
xchg
cmp
sub
adc
sbb
hlt
popf
and
mov
orb
movsb
dec
js
or
sbb
push
jmp
jno
orb
mov
fisubl
cmp
and
push
rolb
mov
addl
jg
movsb
lcall
push
jns
ja
and
inc
jg
inc
std
sbb
gs
mov
pusha
dec
sti
jl
cmpsl
aad
pop
incl
rorl
aad
pusha
mov
or
sbb
inc
insl
xor
call
int3
sub
sti
shl
shll
pop
or
pop
jno
lahf
xchg
or
call
jmp
std
in
sbb
add
jge
vmread
cwtl
std
test
pushf
mov
push
pop
sbb
mov
inc
adc
mov
movsl
push
je
push
std
pushl
fdivrs
dec
cmp
xchg
cmc
mov
movsl
mov
shll
lock
fists
pop
pusha
or
pop
fs
mov
mov
push
add
push
xor
push
cmp
loopne
enter
addr16
inc
call
fcmovnbe
dec
in
xchg
shlb
push
pop
mov
inc
movsb
pop
mov
jns
or
push
sahf
outsb
mov
sub
push
and
fisubl
dec
in
hlt
cli
mov
jmp
pop
scas
or
cmp
rcr
mov
pushl
or
sbb
xlat
sbb
or
popa
arpl
data16
popf
pop
aaa
jns
mov
jmp
mov
mov
jns
iret
cwtl
xchg
jmp
cmp
or
pushf
push
dec
xchg
mov
out
and
and
shlb
fimuls
mov
push
mov
mov
decl
add
shlb
cmpsl
dec
ficomps
ljmp
push
or
xor
imul
movsl
xchg
idivb
pop
test
pop
sub
gs
movsl
xor
mov
xor
mov
add
sahf
popa
incl
add
pushf
stc
lcall
ficomps
jg
jmp
and
mov
js
mov
fnstenv
js
pop
sbb
int
bound
push
fabs
out
pop
xor
mov
leave
pop
rorb
decl
out
and
push
es
mov
or
mov
ficoms
mov
push
mov
push
cmpsl
movb
push
fdivrs
pusha
adc
mov
sbb
dec
mov
rcrl
out
jmp
outsl
or
mov
ljmp
mov
add
rol
rcrb
cmpsl
xchg
adc
mov
std
decl
popa
adc
xchg
popf
cli
xchg
push
push
mov
adc
js
call
icebp
imul
lea
fcom
aad
loope
jle
bound
pop
adcl
mov
hlt
gs
shrl
adc
fwait
popa
jecxz
aas
push
or
mov
stos
mov
pop
hlt
sar
fimull
xor
xchg
mov
les
test
decl
call
loop
jb
mov
and
mov
mull
incl
adc
mov
mov
push
aad
insl
mov
sbb
sbb
push
rcrb
sub
inc
sub
mov
pop
fwait
hlt
movsl
popf
xor
push
fstpl
dec
xlat
lret
xchg
push
das
add
cmpsb
test
sub
cmc
add
ds
aam
pop
lcall
stos
dec
imul
jg
sub
mov
cld
fbstp
mov
out
push
out
pop
loop
xor
in
ret
inc
cmp
outsl
mov
ja
cs
or
mov
mov
fnstcw
test
xchg
pop
xor
imul
mov
push
and
pop
pop
out
push
shll
mov
ljmp
or
mov
or
scas
insl
ljmp
cmpsb
lahf
dec
std
ljmp
pop
icebp
cmp
or
adc
jno
fisubs
repnz
adc
push
outsb
mov
jo
test
sbb
jmp
lds
xchg
stos
and
decl
mov
lret
fisubl
idiv
ljmp
cmp
outsb
ret
ljmp
fwait
loopne
stos
loope
inc
pusha
xor
xor
cmp
ds
cmpsl
or
fcomps
cmp
and
inc
mov
lds
aad
xchg
stos
data16
pushf
mov
test
xor
enter
idivl
shrb
sub
mov
int3
add
xor
mov
fs
mov
push
in
cmp
adc
mov
das
aas
das
mov
ss
jecxz
out
stos
aas
xor
sahf
fdivrp
push
sti
mov
clc
decl
ljmp
inc
sub
popf
jp
or
sbb
ljmp
inc
enter
pop
orb
add
call
adc
adc
decl
div
pusha
push
insb
rcll
push
sub
sbb
and
pop
inc
incl
mov
pusha
sub
push
jbe
and
mov
push
jmp
mov
leave
xchg
push
inc
jae
jecxz
leave
sbb
inc
es
xor
xchg
outsb
xchg
add
ljmp
insb
pop
repnz
std
lods
cmp
int3
dec
jg
das
daa
mov
sbb
sub
out
aam
mov
mov
decl
mov
fstpt
movsb
cmc
cltd
je
shll
mov
mov
xchg
mov
call
sub
iret
cmp
pop
inc
dec
or
adc
popf
sub
add
pop
xlat
mov
icebp
add
nop
add
loope
call
mov
push
daa
dec
lret
mov
pop
test
call
call
pushl
in
in
lret
movsl
and
or
jbe
fdivrl
cmc
fsubrs
dec
cmpsl
xor
shll
sub
out
pmaxub
push
imul
lock
inc
jno
pop
jae
or
and
xor
ljmp
jg
outsl
add
data16
mov
push
insb
imul
sahf
mov
push
ss
stos
jmp
arpl
mov
inc
nop
jb
jge
mov
and
mov
pop
xchg
or
or
cld
xchg
test
fidivl
add
repnz
sub
and
divl
icebp
cmp
add
roll
dec
add
in
ljmp
mov
lods
out
xchg
addl
xor
stos
push
inc
ljmp
popa
jecxz
push
push
lock
gs
xlat
mov
mov
in
scas
cli
imul
shlb
dec
nop
pop
das
mov
or
ret
clc
jmp
pop
pop
arpl
mov
cli
xor
stos
js
pushl
xor
jo
out
call
shlb
pop
scas
fnstcw
cmp
nop
push
push
xchg
sbb
mov
push
pop
mov
lahf
sub
add
push
das
xchg
insb
pusha
lcall
sbb
mov
dec
stos
lsl
outsb
jmp
mov
es
or
inc
jmp
sub
dec
add
inc
in
pop
out
mov
incl
sub
and
xchg
cli
dec
aad
pop
cld
incl
arpl
inc
push
dec
jmp
push
jg
enter
call
icebp
cld
frstor
repnz
ja
mov
add
div
lret
pop
sub
jecxz
popa
push
sbb
jno
stc
std
lcall
mov
jbe
sti
popf
push
push
jg
mov
les
jmp
inc
test
loope
xchg
icebp
mov
fcmovb
sahf
and
mov
call
call
pop
or
test
ljmp
pop
xor
fwait
and
mov
add
and
dec
inc
pop
add
sub
or
mov
mov
push
les
push
cmpsb
cltd
ljmp
mov
or
jmp
mov
cmpsl
push
fiaddl
jg
sahf
pop
mov
push
mov
or
adc
jl
sub
int3
and
scas
cs
cmp
fstps
test
pop
pop
jmp
int
decl
in
lock
aaa
sahf
scas
sbb
xchg
jbe
push
sbb
adcl
aaa
enter
divl
mov
fdivrp
fucomp
sbb
lret
adc
lcall
jle
or
pop
shll
icebp
mov
loope
mov
add
pushl
mov
pop
int3
or
dec
mov
adc
push
pop
xchg
inc
outsl
lcall
adc
scas
dec
xlat
je
std
mov
vcvtsi2sdl
sub
test
lods
test
aaa
adc
stos
add
fcomi
mov
stos
mov
push
add
pushl
dec
cmp
xor
mov
repz
cmp
lret
and
fwait
mov
int
addr16
jp
dec
lcall
dec
xor
dec
test
fsubrp
push
stos
sahf
into
pop
pop
pop
mov
jg
dec
pop
decb
push
fistps
add
and
adc
push
mov
loopne
jg
out
out
adcb
lock
xor
inc
stc
or
popa
adc
out
push
inc
adc
adc
rolb
xorb
dec
push
lcall
add
sub
mov
add
mov
incl
push
jns
or
inc
fs
xchg
and
inc
test
jne
dec
add
and
into
pop
dec
ret
mov
sub
cmp
inc
shlb
ljmp
adc
shlb
cmp
je
pop
xor
mov
cmp
cmpsl
dec
mov
leave
jle
cli
aad
movsb
inc
jge
lcall
push
or
into
cmp
dec
mov
push
cwtl
jle
dec
inc
sub
inc
test
loope
arpl
cmpsb
incl
pop
mov
inc
mov
jae
popa
pop
or
push
cmp
cmpsl
arpl
mov
jle
dec
rol
push
xchg
mov
or
mov
mov
jg
outsl
stos
notb
or
xchg
scas
sbb
jmp
shrb
popa
addr16
push
mov
mov
divb
fdivrp
cli
loope
call
mov
icebp
ja
jl
mov
dec
mov
incl
or
sbb
dec
mov
scas
iret
jo
dec
ret
hlt
call
jmp
jmp
xchg
jb
nop
movsl
lcall
adc
mov
call
lret
mov
push
test
stos
andb
mov
jl
mov
scas
mov
or
mov
cmpsl
test
mov
loopne
scas
pop
push
pop
out
ret
loop
xlat
push
inc
int3
xor
pop
hlt
decl
or
ret
or
xor
iret
and
mov
int3
sub
push
xor
dec
inc
lods
movsb
aaa
xor
repz
cwtl
xchg
pop
scas
push
stos
inc
mov
sbb
pop
dec
mov
pop
test
mov
dec
lds
jl
mov
jbe
fdivs
incl
shlb
ret
adc
std
and
aas
add
jg
imul
cmp
xor
xor
sbb
push
fld
fcmovbe
rcrl
fisttps
adc
inc
maskmovq
negl
leave
movsl
shlb
xor
call
sub
aaa
inc
jno
lret
sahf
xorb
inc
xchg
or
jbe
insb
stos
pop
aas
popf
xchg
call
fnsetpm(287
mov
mov
xchg
lods
les
int
ret
cmp
xchg
dec
mov
dec
xor
clc
ja
sub
insl
dec
lcall
xchg
loop
sar
decl
out
aaa
fisttpll
aaa
jno
test
mov
xchg
xchg
mov
mov
into
test
rolb
ja
sub
cs
pop
aad
clc
jg
call
sti
mov
iret
aam
sbb
push
gs
in
xchg
clc
mov
xchg
lds
inc
ljmp
sahf
inc
mov
add
push
ret
or
adc
stos
negb
xor
lods
mov
inc
loopne
pushf
push
pop
pextrw
es
mov
decl
inc
mov
dec
jp
bound
ja
es
fcompl
pushl
and
add
mov
rol
fcoml
mov
cmp
push
insl
loopne
decl
mov
ss
stos
fsubs
xor
decl
insb
insb
push
fistpl
pop
pop
xchg
jnp
xor
ljmp
inc
pop
movsb
icebp
inc
inc
xor
pop
cmpb
shr
int
out
push
addb
pop
or
aaa
mov
push
and
cmp
cld
sti
insb
in
cmc
push
pop
test
lahf
orl
test
xchg
jg
mov
test
cmp
out
and
push
fcmovnb
movsb
push
repnz
xor
mov
push
xchg
pop
mov
pop
rolb
pop
loop
xlat
push
js
xchg
lds
fdiv
mov
mov
cld
jmp
dec
jle
sub
out
outsb
jns
inc
inc
pop
fwait
sub
adc
rcpps
xor
sti
cwtl
jmp
jecxz
loop
incl
mov
push
adc
jle
pop
lds
dec
popa
push
les
lcall
in
xchg
repnz
scas
mov
jae
sbb
dec
pop
fwait
add
lcall
js
pop
push
idivb
aam
xchg
lcall
jno
negb
push
jg
jb
lods
or
divl
cmp
loopne
pushl
mov
loopne
mov
sub
cltd
test
loopne
test
and
adc
out
outsl
pop
in
mov
shl
inc
or
jnp
fistps
push
and
jmp
mov
cmp
cmp
fwait
xor
push
andl
pop
mov
popa
jle
and
sbb
arpl
movsl
add
sub
and
fistpl
lea
fs
call
inc
push
in
push
mov
mov
ljmp
push
push
ret
push
sti
pop
cmpsl
lret
pusha
xchg
sub
cmp
mov
jmp
aas
add
imul
adc
push
insw
in
cli
add
notl
aam
scas
js
push
xchg
enter
cmp
pushl
adc
inc
inc
aaa
cmp
xchg
sbb
dec
xor
vandnps
dec
bound
jo
xor
decl
cltd
repnz
adc
or
fcoms
popf
cmp
decl
jb
mov
and
ret
into
adc
xor
cmc
sub
into
push
sbb
jmp
inc
mov
hlt
pop
or
popf
or
lcall
jae
sub
call
or
cld
sahf
cmp
sbb
jg
xchg
pop
fiadds
test
mov
sti
sbb
rclb
movl
mov
loop
dec
push
loopne
sbb
decl
fdivrs
mov
gs
or
shl
aad
jo
arpl
jae
call
pop
push
aam
mov
jb
imul
fs
fwait
call
mov
test
push
xchg
es
or
pop
pop
jmp
cmpsb
shll
xchg
sarb
or
mov
lods
inc
aad
adc
aaa
xchg
fisubrl
mov
xchg
lcall
or
mov
lahf
int3
inc
push
scas
sub
jmp
cmpsb
or
xor
mov
ficoml
xor
loop
rolb
lcall
inc
movntps
in
xchg
dec
jns
cmp
cmc
push
rorl
jo
jg
imul
stc
pop
flds
inc
mov
jge
and
lods
sahf
cmpsb
xchg
leave
xchg
add
ljmp
lret
sbb
sbb
cmpsl
loopne
test
jg
push
lret
sbb
cmp
pusha
or
test
mov
jb
sbb
pop
sub
addr16
and
xor
sbb
jg
xor
adc
push
clc
loop
lcall
nop
lret
pop
les
sub
inc
js
xor
es
add
ljmp
inc
jmp
sbb
mov
push
lea
clc
adc
shr
cmp
hlt
test
lcall
mov
pop
or
mov
fadds
xor
pop
xchg
aam
mov
hlt
in
mov
sub
and
incl
or
stos
shrb
icebp
jp
out
aad
int
mov
in
jmp
jg
out
popa
mov
and
sbb
add
popa
ffree
stos
cmp
stos
jnp
in
mov
cmp
xor
pop
mov
cli
dec
mov
sbbb
pusha
cmp
jmp
mov
inc
sub
inc
and
ret
movsb
sub
push
xor
int
push
repz
mov
add
test
nop
loop
jg
xor
pop
cmpsl
xchg
mov
dec
xchg
sub
and
and
mov
rorl
xchg
bnd
lcall
fistps
mov
scas
xchg
fucomip
lret
fstps
ljmp
jg
in
push
or
cmp
mov
mov
sub
fcomip
pop
mov
jge
imul
fdivrs
sbb
stos
lds
popa
mov
push
pop
rcll
rcl
push
cld
jmp
lock
jge
inc
icebp
hlt
pop
icebp
ljmp
fs
inc
jge
push
andl
lea
movsl
pop
out
and
stc
jno
push
fmull
call
fimull
into
sbb
idivl
dec
ret
cmpsb
pop
xlat
fs
jnp
mov
stos
dec
fcmovu
dec
movsl
sub
xchg
stos
mov
cmp
mov
mov
xchg
cmc
incl
or
mov
mov
sub
jb
decl
and
mov
mov
je
fstsw
jmp
fwait
jg
mov
mov
movsl
lods
pop
dec
pop
imulb
xchg
mov
pusha
cmp
lret
lcall
out
lock
hlt
rolb
jmp
sub
cld
jecxz
test
ss
incl
fisttpl
call
dec
loop
lret
icebp
cmp
ss
and
or
clc
mov
das
pop
jbe
mov
dec
pop
pushw
jp
xchg
decl
adc
sub
mov
sub
test
addl
fs
jnp
cli
inc
clc
fisttps
jo
bound
mov
pushl
scas
fdivrl
fisubrs
rorb
bound
pop
nop
shlb
ror
out
jg
out
pushf
mov
out
jle
fdivrp
inc
scas
sbb
ret
dec
dec
sub
out
scas
jbe
rolb
loope
outsb
lret
mov
adc
jmp
loopne
push
pop
movsl
jnp
ret
in
dec
ds
loop
dec
lahf
ds
push
inc
push
inc
push
mov
xchg
push
cld
incl
push
test
lods
imul
call
adc
jg
fs
incl
cmpsl
test
iret
rol
inc
test
or
ljmp
or
decl
pop
push
out
shlb
jae
xorb
add
int3
shrb
mov
cmp
hlt
decl
aas
stos
insl
jmp
mov
aad
iret
cmpb
inc
mov
int
or
shll
mov
lret
pushf
dec
mov
jl
jo
xchg
mov
lahf
scas
mov
ror
cli
dec
shll
out
cli
call
mov
in
jecxz
dec
inc
ret
sub
pop
and
testl
inc
cs
cmp
insb
dec
out
imul
sub
mov
mov
inc
pop
push
jp
sbb
mov
lahf
test
dec
orb
inc
test
int
call
mov
cwtl
mov
jnp
js
dec
outsb
lret
inc
sbb
insl
cmp
jg
inc
into
fmuls
fmull
xchg
and
sub
sbb
add
jno
pushl
dec
sbb
lea
xchg
sbb
sar
loopne
fsubp
stos
cli
push
pop
ljmp
cmpsb
clc
xchg
xor
and
das
pop
jo
sub
clc
decl
mov
push
out
sub
add
push
xor
mov
sub
icebp
and
jmp
pop
xchg
and
das
shrb
jmp
gs
imul
jmp
outsl
lcall
test
jp
pop
add
or
xchg
js
hlt
xor
inc
sbb
xchg
sbb
filds
push
imul
jb
sub
out
and
sub
jg
std
sub
addr16
fstl
in
push
mov
dec
mov
dec
mov
add
xor
xor
ljmp
pushl
rcl
sub
mov
lea
adc
shll
pop
adc
jecxz
repnz
shl
in
in
ljmp
mov
and
dec
lods
dec
push
dec
aam
out
sub
inc
mov
jg
sbb
mov
push
cmpsl
int
jb
xchg
pusha
ljmp
xorl
lcall
jb
js
test
leave
xchg
out
das
cld
add
jmp
push
pop
imulb
mov
out
fs
into
jno
into
roll
inc
std
shlb
pusha
sar
call
insl
push
jecxz
pop
jge
sub
daa
jmp
repnz
jo
ds
pop
jns
and
or
mov
sub
jg
or
adc
mov
push
sub
jmp
pop
hlt
sbb
adc
movsl
push
xor
pushl
lret
xor
push
movsb
fisubrs
enter
push
jo
mov
mov
mov
mov
or
ljmp
mov
mov
xchg
xchg
std
ljmp
mov
xor
and
cld
jg
sbb
dec
cmp
test
pop
jno
popf
scas
push
cmp
jmp
or
mov
or
mov
cld
mov
jmp
and
push
xchg
add
xor
test
adc
mov
and
add
push
and
sti
js
add
xorb
sub
push
rclb
push
and
cmp
pop
jae
jg
inc
mov
fs
sub
pushf
testb
mov
stos
and
test
mov
adc
jg
pop
lret
push
sbb
pop
insl
subb
lock
sub
and
jb
sub
in
rcl
mov
dec
xchg
lods
leave
loop
test
test
lock
sbb
es
inc
in
add
lods
jg
decl
aas
adc
pop
dec
call
or
xchg
adc
scas
mov
stos
aam
cmc
ja
push
mov
push
sub
mov
inc
je
xchg
mov
push
int
sub
out
jmp
mov
xchg
pop
aam
add
jg
call
pop
push
dec
in
sub
and
sub
leave
xchg
xor
insl
shll
xor
decl
mov
mov
fidivl
xor
jge
or
pop
mov
add
push
icebp
sbbb
dec
jg
jg
adc
ljmp
filds
cli
jmp
shrl
cld
inc
ret
add
aas
in
idivb
xor
ret
xor
das
cli
das
ret
or
outsb
and
icebp
sub
pusha
sub
and
jg
xor
je
jmp
sbb
xchg
cs
insl
xchg
xchg
xchg
xchg
jns
stos
decl
jae
push
ljmp
addr16
test
loopne
out
lcall
lcall
mov
bound
movsb
sub
push
imul
hlt
cmp
outsl
lret
in
fcomip
jne
jne
push
das
cs
xchg
inc
sbb
dec
dec
sub
jg
inc
loop
int
xor
loopne
adc
and
imul
lcall
xor
jge
insl
int
push
mov
iret
mull
cmp
xchg
dec
adc
jbe
sbb
sar
pushl
aam
mov
jle
xchg
mov
clc
bound
cld
loop
jne
adc
xchg
or
xchg
sub
pusha
xchg
cmp
pop
std
call
inc
fnstenv
jns
sub
pop
dec
in
in
push
imul
jmp
jbe
mov
jae
cmp
fidivs
scas
xchg
xchg
pop
inc
outsb
jbe
dec
fwait
jae
aaa
fsubrs
imul
out
xor
cmp
xchg
xchg
pop
jb
adcl
ds
andl
incl
adc
je
xlat
or
sub
mov
mov
mov
and
mov
shrl
mov
push
jle
add
decl
push
push
and
sbb
adc
pop
mov
js
or
in
fcoms
clc
incl
pop
lods
push
inc
xchg
jmp
xor
ss
imul
into
sub
incb
adc
dec
cmp
stc
and
mov
xchg
int
mov
push
xchg
xchg
out
pop
cmp
jg
or
fbstp
xlat
pop
pushf
ljmp
push
iret
call
cmp
mov
jnp
mov
mov
jmp
lock
ljmp
add
daa
xchg
sbb
mov
lea
or
jg
clc
mov
xchg
jle
jmp
sub
sub
inc
pop
add
cmpsb
scas
xchg
mov
mov
xor
iret
cltd
leave
int3
movsb
das
ss
hlt
data16
outsb
lods
pop
std
call
lcall
sbb
adc
mov
cmp
lock
lcall
jne
inc
xor
ss
xchg
cli
stos
lret
jb
mov
pop
sub
push
in
decl
leave
nop
or
add
into
jnp
push
push
sub
fildl
sub
lea
loop
rorl
push
insb
xchg
push
andb
hlt
incl
jp
leave
xchg
insl
andb
leave
mov
es
pushl
jne
push
cmpsb
enter
call
add
or
sbb
inc
std
ljmp
fdivr
jbe
pushf
xchg
pushf
mov
or
ja
dec
xchg
cmp
inc
sbb
std
js
or
test
sbb
cmp
and
sbb
mov
adc
icebp
nop
orl
jns
aaa
std
mov
mov
inc
pop
dec
cmovo
sub
popa
lcall
mov
out
add
or
xchg
outsb
incl
ss
inc
outsl
mov
bound
jo
imul
xchg
xchg
mov
pop
mov
sub
je
cmp
call
lods
cmp
dec
push
cmpsb
movsb
lock
xchg
aaa
push
mov
cli
cmp
and
loopne
sbb
sbb
outsl
pop
pop
fdivs
push
cli
mov
outsl
jnp
mov
lea
test
jb
test
cs
decl
mov
dec
pop
push
call
aam
jbe
and
pop
xor
enter
cld
pushl
xchg
jl
mov
and
cltd
mov
mov
push
sbb
movsb
jb
mov
lcall
ljmp
mov
sbb
jg
stos
cld
test
inc
daa
gs
sbb
adc
mov
xchg
mov
leave
shll
xchg
pop
xchg
cmc
pop
lods
xchg
sub
mov
test
add
scas
mov
incb
mov
pop
jns
jg
add
mov
testl
sub
pop
lcall
mov
lods
push
pop
sbb
jp
mov
adc
xor
fnsave
mov
pushf
cltd
inc
and
decl
cmpsl
sbb
mov
ljmp
aad
inc
xchg
repnz
lcall
popf
out
gs
shl
push
nop
repz
xor
fisubl
ljmp
mov
es
lods
xor
lret
jno
lea
mov
cmc
pop
mov
enter
fwait
out
pop
lods
out
push
push
xorl
into
cmc
mov
dec
out
repnz
int3
pop
roll
jmp
movsb
ret
loope
movsl
and
ss
loopne
cmp
xor
clc
add
aaa
push
sar
incl
mov
sub
sub
sahf
adc
rcrl
ljmp
and
xor
cmc
popa
xlat
out
pop
inc
out
pop
fcomip
mov
imul
mov
js
cmpsb
and
ljmp
mov
aam
jle
pop
aam
nop
mov
fwait
jecxz
ljmp
adc
sub
stc
in
xchg
mov
js
xchg
jp
cmp
outsl
dec
jno
dec
or
cli
out
or
gs
ljmp
nop
imul
fidivl
adc
mov
mov
and
pop
test
push
aas
scas
push
imul
shrb
rcll
inc
int3
mov
mov
fisttpl
clc
incl
lea
or
nop
sub
xorb
fs
sub
jg
mov
adc
xchg
xchg
xorb
push
lret
lods
or
sbb
mov
jg
addb
lock
push
and
and
jl
mov
ja
loopne
call
mov
push
lods
or
adc
jle
leave
repnz
xchg
adc
cmp
das
xchg
lea
aaa
xor
cmpsl
xchg
sub
call
and
jp
test
pop
sbb
stos
aad
pop
scas
loop
sub
decl
fs
pop
mov
stos
push
sbb
rcll
pop
lods
outsl
int
aad
cmc
imul
and
mov
outsb
pop
aad
test
mov
outsl
pop
mov
aad
jbe
xchg
mov
inc
out
inc
daa
push
dec
testb
and
pop
sbbb
sti
aaa
xor
and
dec
cmp
sbb
insl
dec
mov
ljmp
cmp
int3
lcall
es
mov
fistps
push
mov
mov
shll
lcall
out
mov
test
cmp
xor
cmc
sahf
lret
das
clc
jg
pop
stos
icebp
lock
rcll
xor
jno
das
jmp
repz
dec
movsb
pushl
incl
push
sub
inc
cmovne
mov
inc
sbb
shll
and
test
push
mov
xchg
xchg
cli
ljmp
sbb
ficomps
and
ja
frstor
in
pop
mov
pop
in
fstps
cld
fcoms
push
add
push
lea
dec
xlat
pop
stos
inc
jmp
fs
pop
jno
and
ret
ljmp
shrb
adc
es
insb
icebp
enter
in
jg
sub
pop
add
mov
dec
mov
out
imul
out
mov
jbe
dec
mov
cmp
ss
jb
testb
mov
je
sarl
jg
jmp
and
or
insl
sbb
test
mov
jmp
jle
in
aaa
push
lods
adc
mov
push
out
jp
xchg
sbb
mov
imul
and
call
push
jge
std
dec
adc
adc
push
push
sbb
into
popa
jp
jae
fxam
adcb
jmp
jno
jmp
push
cltd
mov
mov
lds
mov
fistps
inc
mov
sub
out
lock
jmp
out
fsubs
movsl
cltd
jmp
add
xchg
sbb
fs
addr16
sub
pushl
test
ja
dec
sbb
rorb
cmpsb
mov
dec
loope
pushf
int
ret
push
cmp
clc
aas
test
cmpsb
xchg
mov
and
mov
push
inc
xor
mov
sbb
sbb
and
inc
movsb
and
push
push
fistl
mov
outsb
sbb
jb
push
arpl
push
outsl
pop
adc
mov
neg
movsl
add
fcomip
sub
pop
call
decl
jle
xlat
loope
sub
push
jmp
mov
ret
aam
out
push
jle
lds
jnp
xchg
pushf
cmp
ljmp
pop
cwtl
dec
push
sbb
push
or
callw
das
cli
sub
insl
jl
xchg
insb
and
lahf
movsb
mov
mov
mov
in
aam
into
cmp
push
cmp
adc
dec
popa
out
test
pop
adc
fidivs
xlat
mov
stc
mov
jl
loope
adc
decl
pop
fstl
clc
xlat
fisubs
xchg
mov
jns
pop
je
inc
aam
mov
leave
lea
imul
xchg
jb
push
xor
jno
sub
mov
mov
jmp
xchg
mov
mov
pop
test
pop
lcall
ljmp
mov
push
ret
push
sub
add
in
and
lcall
js
push
jo
mov
int
dec
mov
xchg
cmp
cmc
dec
outsb
daa
incl
inc
pushl
pushf
sahf
or
push
in
pop
jbe
out
dec
sub
mov
test
fisttps
pop
mov
adc
sub
repnz
lds
inc
adc
jle
mov
mov
fsubrl
mov
stos
xor
cmpl
and
xor
push
cld
decl
enter
jno
pop
ret
mov
cmp
or
movsl
outsb
or
jmp
in
iret
leave
test
imul
sub
clc
imul
sbb
lcall
fisubrs
fsub
xchg
dec
cmp
jecxz
test
mov
and
or
out
dec
or
mov
sub
js,pn
fsub
imul
dec
lcall
sarl
or
ja
mov
jl
arpl
test
jecxz
inc
xchg
jne
pop
push
shlb
sahf
push
push
stos
jge
sbb
fnstcw
xchg
sub
jg
rorb
mov
or
dec
add
lea
movb
ljmp
or
ss
loop
repnz
fcmovnu
dec
or
sbb
or
pop
mov
leave
push
std
call
pop
dec
int
sbb
test
jl
fisubl
fmul
je
loope
add
adc
cltd
test
adc
decl
mov
dec
test
adc
inc
daa
outsb
mov
cmp
add
sub
test
jnp
iret
enter
xor
nop
adc
xchg
ss
call
jo
out
cmp
sbb
rolb
test
dec
aam
adc
sub
mov
sar
mov
push
xor
in
lahf
xorl
jmp
pop
sti
pop
test
jg
enter
mov
xor
rcl
dec
cs
iret
push
in
lahf
push
mov
rol
nop
push
ljmp
mov
sub
shl
fildl
leave
stos
xor
xchg
mov
lcall
cltd
sbb
imul
jecxz
mov
mov
jo
add
lods
cmp
rorl
sti
mov
scas
dec
shl
hlt
imul
out
mov
jl
mov
lret
mov
jle
sahf
push
data16
mov
fisubs
sub
jg
test
mov
ljmp
pop
addr16
aaa
adc
xor
push
or
mov
jb
or
call
lods
pop
jne
arpl
test
pop
into
in
mov
into
mov
fs
lea
inc
scas
scas
cmpsb
or
push
mov
jno
xchg
cs
mov
sarl
negl
out
push
mov
sbb
lods
inc
push
pushl
dec
or
lock
mov
lods
out
add
cmpsl
jb
xor
insb
ljmp
sub
test
sahf
jmp
push
addr16
inc
cld
decl
xor
inc
mov
popf
jno
jge
mov
cmp
mov
jge
and
clc
mov
mov
cmpsl
jg
sub
ficoml
pop
popa
cli
inc
fisubs
ss
clc
ljmp
xchg
into
push
dec
rcrb
push
sub
vdivpd
cwtl
sub
incl
xchg
lods
scas
jle
idivl
lods
push
mov
xchg
and
das
clc
xchg
bound
repnz
divl
xor
out
inc
icebp
mov
lret
aad
push
cld
jmp
sub
cmp
das
mov
out
addr16
mov
movsb
fdiv
dec
mov
dec
sti
cmpsl
js
out
adc
mov
pop
and
jg
insl
dec
inc
out
ret
xchg
aam
xor
lcall
pop
push
mov
xor
mov
test
mov
sarb
in
repz
mov
push
adc
loop
cli
xchg
jo
xor
lds
ljmp
ljmp
arpl
popa
mov
jne
loope
xor
cltd
enter
mov
scas
mov
cmp
imul
dec
subl
jl
ss
push
cli
dec
mov
pop
inc
push
fxch
addb
sub
fnsave
je
arpl
int3
test
incb
adc
into
pop
popf
push
sbb
cmp
mov
jl
xchg
sbb
incl
mov
fwait
cmpl
push
sti
xorl
dec
mov
dec
movsb
insb
sub
stc
insl
mov
sbb
dec
mov
shlb
test
decl
inc
out
cmpsl
sub
cli
or
push
lret
push
xor
ret
mov
jmp
push
and
dec
arpl
jne
inc
aad
pop
mov
xor
fwait
stos
mov
ja
rorb
mov
pop
push
jnp
and
pushl
leave
mov
in
lcall
cmp
dec
shll
ljmp
out
sbb
out
adc
out
push
mov
dec
pop
testl
xor
mov
pushl
jmp
daa
imul
and
inc
sub
push
scas
bound
pop
aaa
xor
push
mov
add
xchg
aam
or
pop
fdivrs
push
push
push
insl
std
incl
inc
cmp
mov
mov
inc
xor
jnp
ja
xor
in
jg
addb
dec
in
lahf
shrl
mov
int
pop
shlb
fisttpl
jae
xor
divb
cmp
andb
in
lcall
out
xor
ja
xor
cmp
nop
cmpb
sub
adc
push
adc
add
or
loope
adcb
mov
sub
jnp
cmc
aaa
rcl
cmpsl
push
xor
cmc
js
and
pop
add
xchg
xchg
add
and
das
mov
jle
dec
sbb
adc
sbbl
pop
cld
lcall
sbb
mov
das
push
aaa
cmpsl
lds
aad
test
dec
xchg
and
call
mov
cmp
pop
inc
xor
xor
dec
pop
jno
jl
orb
sub
shll
or
rcrl
sbb
cmp
xrelease
incl
ret
dec
out
xor
or
mov
lret
roll
incl
sbb
cmp
cwtl
xchg
adc
sub
popa
cmp
adc
mov
pop
adc
xchg
jp
in
mov
sbb
inc
pushl
xchg
sbb
cwtl
nop
adc
ss
cmpsb
jns
mov
push
addl
imul
and
xchg
xor
mov
xchg
icebp
cmp
pop
das
cmp
inc
push
and
xor
out
std
scas
clc
jg
insl
mov
sbb
das
popa
jb
pop
push
push
jmp
inc
inc
sub
push
test
jg
dec
fmuls
dec
cmp
repnz
cmp
dec
jmp
pop
and
shlb
addr16
jne
push
jecxz
xchg
mov
cmp
xchg
xor
test
outsl
fdiv
jg
test
jl
jns
ja
daa
movb
jns
popa
pop
out
stos
add
push
xchg
arpl
pushl
mov
xchg
jo
test
cmpsl
sbbl
bound
call
and
pop
pop
cmp
adc
test
push
cs
ss
inc
mov
mov
mov
pop
mov
cmp
je
add
cld
jmp
pop
pop
dec
xchg
push
xchg
adc
pop
cli
mov
mov
inc
sbb
push
incl
jge
aaa
jge
mov
into
adc
mov
mov
inc
ja
mov
or
mov
outsl
aad
jo
and
fsubr
xchg
jecxz
jbe
jg
decl
call
xor
cmpsl
testl
sbb
testb
andb
push
inc
dec
cli
mov
mov
das
jo
xchg
mov
popa
mov
js
jg
push
jb
ljmp
pop
repnz
sub
subb
sub
push
mov
and
xor
lret
movsb
jl
add
enter
cmpsb
jmp
fs
push
dec
inc
cmp
je
je
rorb
mov
xchg
filds
cmp
gs
pop
pop
ret
in
xchg
dec
sahf
adc
fisttpll
loope
jmp
roll
push
adc
and
imul
repnz
divl
icebp
call
fsubrs
je
pop
jb
push
ja
mov
jp
jnp
incl
imul
push
add
ds
xor
arpl
addr16
adc
adc
nop
or
cwtl
xchg
cmp
jg
adc
pop
cwtl
xchg
xchg
pop
pushl
decl
movsb
js
sbb
xchg
mov
inc
adcl
mov
in
scas
js
pop
inc
xchg
mov
les
cmpsl
es
inc
bound
leave
sub
lea
adcb
ret
jmp
xchg
pop
xlat
and
pop
aaa
pop
pusha
popf
pop
push
js
outsb
imul
sbbl
add
add
pop
add
divl
push
ljmp
ljmp
ja
ret
adc
sub
sti
mov
sti
add
jg
ljmp
clc
sub
sbb
adc
push
cltd
xchg
mov
xchg
dec
sbb
decl
sarl
andb
jp
cmp
lcall
in
xchg
daa
mov
test
lcall
cmp
and
lods
mov
je
rorb
mov
sbb
pushl
inc
add
shll
and
ret
mov
mov
and
cmp
ja
pop
cmp
xor
pop
push
push
test
inc
je
ja
ljmp
add
in
or
test
outsb
js
orb
sbbb
dec
xor
xchg
arpl
and
orl
call
test
mov
xchg
cmp
dec
cltd
mov
xchg
sbb
mov
mov
push
mov
inc
lcall
sub
adc
lcall
xor
lcall
out
stos
fnstenv
cmp
mov
cld
scas
scas
lret
lods
pusha
or
jg
jg
pop
pop
pusha
mov
add
inc
notb
inc
mov
push
xor
pop
int
dec
push
push
pop
inc
les
xorl
xchg
cmp
pop
push
mov
pushf
dec
dec
pop
fs
dec
out
dec
push
cmp
call
sub
loope
orl
xchg
and
pushl
call
outsb
sub
inc
pop
incl
scas
jle
push
mov
mov
pushl
fwait
push
sub
addr16
imul
and
pop
stos
movsb
fldt
lock
jg
pushf
push
stos
mov
lcall
jecxz
and
das
inc
push
test
imul
shll
int3
lret
mov
cmp
movsl
dec
lock
push
call
push
movsl
adc
movsb
lea
jmp
push
push
insl
pusha
ret
inc
lea
inc
dec
test
pop
mov
xchg
jbe
lcall
incb
adc
into
mov
jae
sbb
stos
and
xchg
add
ljmp
jg
cmp
pop
xor
add
push
xchg
xor
adc
jge
jmp
sti
mov
fdivs
leave
mov
xor
mov
data16
jg
jmp
andl
outsb
adc
dec
push
adc
lock
cmp
pop
dec
pusha
push
lret
fisubrs
push
ljmp
sar
rolb
cld
push
into
add
sbb
aad
enter
jg
je
ret
mov
ja
loopne
movsl
push
es
jl
inc
hlt
push
imul
pop
sbb
inc
jecxz
jle
cmp
xorb
stos
ja
lret
inc
mov
lahf
jge
inc
in
and
jmp
ret
mov
sbbl
ljmp
fwait
mov
jmp
cltd
dec
adc
insb
sub
cltd
and
lods
decl
sub
stos
andl
sub
mov
adc
xor
mov
and
mov
dec
repz
dec
dec
fadds
repnz
enter
adc
mov
cmpsb
dec
int
int
or
and
cmp
repnz
stos
mov
and
xchg
mov
or
mov
xchg
ljmp
mov
sbb
sub
dec
cld
jnp
lea
cmp
dec
rcl
mov
out
addr16
popf
sub
jno
js
mov
pop
or
movsl
insb
dec
mov
shrl
shll
aas
jno
push
cmpsl
jl
cmpsl
cld
mov
pop
lock
lock
ret
xchg
ret
ficompl
mov
xchg
fcomip
data16
cmpsb
inc
xor
test
incl
int
popa
mov
inc
pop
dec
mov
add
mov
nop
add
int3
lret
push
pushf
jl
pop
pop
ret
xchg
mov
movsb
lret
pusha
push
mov
pop
adc
sbb
pushf
dec
cmp
aad
scas
outsl
mov
sbb
push
aaa
dec
sar
cmp
pop
sbb
mov
xchg
and
ljmp
cmp
clc
jge
orb
jg
sub
lret
fbld
roll
xchg
mov
sub
cli
xor
fsubl
or
dec
xchg
aaa
ficoml
enter
jno
mov
or
jmp
mov
aaa
insb
inc
std
ljmp
pop
xor
mov
jle
andl
insl
icebp
add
jg
dec
jle
lock
bound
mov
jmp
int3
or
xchg
dec
cltd
mov
or
pop
jmp
dec
std
fwait
or
or
pushf
in
fbstp
lea
test
sub
and
fstps
sbb
push
jb
cmp
cli
jmp
rorb
test
std
out
test
icebp
cmp
loop
push
stos
mov
adc
shrl
fs
jmp
mov
cltd
sbb
andl
and
movsb
push
jmp
ljmp
test
sub
add
fiadds
ljmp
lds
in
out
shl
imul
dec
insb
add
xor
stos
and
add
xchg
imul
dec
lds
cmp
daa
inc
fimuls
jg
out
cmp
pop
aaa
insl
pop
add
inc
aaa
cmp
mov
insb
push
addr16
inc
mov
cmp
arpl
daa
ds
push
pop
and
cmc
adc
rcll
ror
jae
clc
out
push
lods
mov
jl
dec
mov
test
xchg
sarl
sbb
sbb
cltd
and
cli
and
sha1msg2
cld
xchg
lcall
ret
stos
pushf
adcl
sub
ljmp
and
sbb
stos
mov
testl
sbb
dec
movsb
icebp
outsl
mov
cs
insb
aam
xor
dec
cmp
fnsave
or
adcb
mov
add
mov
jg
out
sbb
out
pop
les
xchg
out
dec
mov
movsl
mov
out
outsb
repnz
push
mov
and
cwtl
jns
xchg
add
ljmp
orb
icebp
sahf
inc
icebp
out
std
std
dec
sub
dec
cli
xchg
test
std
jg
js
mov
ss
sbb
adc
jg
dec
pop
jbe
add
pushf
sahf
aas
and
in
ljmp
call
jp
scas
repnz
es
mov
stos
shrb
fimull
pop
sub
adc
rcll
stos
aad
and
or
std
jmp
enter
dec
std
inc
sbb
cwtl
adc
pop
fsqrt
jmp
fcompl
clc
xor
sti
test
in
xchg
icebp
test
push
pushl
out
mov
push
ljmp
pop
push
leave
shll
out
jle
adc
insl
add
and
or
cmp
pusha
inc
add
call
dec
lds
push
xor
cvtpi2ps
mov
lock
imul
rol
xchg
pop
xor
dec
cltd
aaa
jne
dec
ret
cld
push
es
popf
imul
xchg
gs
mov
push
push
add
andb
pop
cli
mov
insl
dec
xchg
sbb
clc
jns
ljmp
in
pop
mov
jns
popf
imul
mov
fwait
mov
pop
add
cli
sbb
mov
pushf
icebp
push
and
pop
mov
call
dec
xor
aad
aam
data16
ret
sbbl
add
sbb
imul
fs
jns
mov
pop
out
fstpl
mov
sub
jno
int
dec
rolb
cli
decl
nop
add
pop
mov
or
stc
fwait
jnp
ljmp
or
out
cmpsb
jne
fisttpl
adc
jnp
inc
jae
scas
jae
jne
push
mov
ljmp
divb
inc
sbb
dec
jmp
out
dec
xor
sbb
shrl
inc
and
pushl
into
aam
cmpsb
or
dec
or
mov
repnz
add
decl
push
call
movsb
lea
dec
adc
les
and
xor
sub
sub
shlb
test
cs
loop
leave
dec
xor
sub
lahf
jb
lods
scas
mov
repnz
mov
xchg
dec
lods
mov
add
lret
sub
inc
mov
mov
push
in
sub
mov
ret
or
imul
add
dec
sub
adc
outsl
mov
and
inc
inc
mov
aas
fldt
mov
dec
mov
dec
mov
ss
jge
sub
mov
xor
jo
cmp
xchg
aad
loop
mov
decl
add
ret
dec
mov
cmp
lods
sti
scas
inc
fcmovnbe
dec
sub
repz
add
pushl
jge
inc
pop
repz
xor
iret
cmp
pop
push
sub
mul
mov
aad
dec
or
call
push
inc
or
xchg
les
lcall
or
ret
xchg
enter
subb
or
je
lds
jb
adc
out
clc
mov
movsb
push
lock
sub
cltd
mov
xor
fcomip
fistl
xchg
int
and
scas
mov
adc
stos
les
dec
scas
int3
jb
outsl
stc
sub
ret
in
popf
dec
jae
mov
rorl
out
adc
shl
int3
iret
mov
cli
ljmp
nop
inc
sahf
mov
lret
mov
cmpsl
adc
sub
std
decl
cmc
jo
push
jmp
or
jg
jg
sarb
pushl
add
add
mov
jnp
fiadds
jmp
dec
stc
inc
das
fcom
cli
lods
jne
sti
out
movsbl
jge
iret
ljmp
mov
push
fcmovne
sbb
mov
into
pop
out
repz
mov
jge
rorl
rcr
or
jge
or
pushl
loope
negl
xlat
pop
test
in
push
sub
lcall
pop
ficoms
icebp
inc
jns
scas
ja
rolb
pop
insb
push
imul
js
cmpsb
lock
sar
test
or
test
repnz
xor
add
fidivrs
sub
cli
cld
gs
mov
or
mov
jns
sub
mov
jmp
and
jmp
loop
xor
inc
imul
mov
cmp
or
xor
jo
cmp
jmp
jmp
add
push
jno
mov
add
or
incl
inc
lcall
jg
xchg
out
mov
in
sub
decl
mov
popa
jae
andl
scas
adc
cmp
in
xchg
fwait
mov
aaa
cmp
mov
dec
jbe
and
and
movsb
jecxz
pop
adc
mov
pop
stos
and
pop
mov
aad
out
and
sbbb
xchg
adc
lcall
xchg
and
xor
stos
sarl
add
jb
fiadds
add
incl
mov
cmp
insl
jp
pop
xchg
test
outsb
loope
sbb
call
popa
jno
cld
inc
addr16
movsl
arpl
push
clc
sub
stos
shlb
cltd
mov
cmpsb
jp
add
ret
xor
imul
out
add
orb
sbb
in
push
jmp
cmpsb
mov
icebp
outsb
popf
lcall
rolb
add
mov
xor
mov
sbb
add
fcoml
dec
leave
std
ljmp
mov
push
mov
movd
cmp
sub
mov
push
inc
cli
pop
sbb
hlt
inc
aaa
aas
add
in
sub
in
lcall
xchg
and
pop
inc
jmp
sub
xchg
sbb
add
scas
test
mov
and
dec
sub
repz
xchg
mov
sub
out
call
mov
nop
cmp
arpl
or
and
popa
push
and
or
lds
movsb
mov
pop
xchg
sbbl
call
sub
pop
cwtl
or
lods
in
test
push
push
fbld
mov
sar
lcall
mov
xchg
test
push
fs
movsb
xor
adc
decl
call
sahf
adc
or
popa
mov
cli
push
call
aaa
std
pop
cmc
add
fs
inc
adc
test
outsl
jns
lods
fdivr
ja
cmp
fs
fildl
leave
sub
sbb
dec
pop
and
insl
cmc
pop
imul
shlb
sbb
loopne
iret
jge
jge
inc
xor
decl
aam
scas
arpl
mov
or
mov
movsl
xchg
push
adc
hlt
sub
incl
mov
and
rcrb
leave
cs
lret
jecxz
sbb
and
xor
incl
lcall
lods
jnp
jns
xchg
mov
ljmp
cltd
push
push
xor
outsb
jne
mov
inc
inc
fsubrs
push
lcall
out
xchg
or
ljmp
jns
out
and
cmp
fisubrl
lahf
cmpsl
add
and
lret
adcb
push
lods
orb
ljmp
sub
popa
add
test
cld
fsubrs
mov
test
jbe
imul
imulb
repz
ljmp
adc
stos
pop
add
xchg
cmp
jecxz
mov
jb
or
subb
xchg
and
inc
fldl
and
ljmp
or
sub
add
dec
push
ds
jecxz
jecxz
and
mov
xchg
dec
ret
in
dec
cli
push
pop
sbb
mov
cmp
adc
mov
adc
pop
or
ds
inc
mov
cltd
je
fdivr
jmp
lret
mov
add
jge
mov
inc
and
out
int3
nop
or
test
adc
dec
aam
mov
insb
jg
lea
nop
and
xor
xchg
sbb
adc
add
or
ret
decl
add
inc
cmp
pop
bound
mov
incl
imul
ss
mov
push
js
jg
out
popf
sti
test
fcmovnu
loopne
mov
call
push
in
or
pop
jmp
adc
bound
sbbl
in
or
sub
lods
inc
mov
call
decb
fstpl
cltd
mov
loope
jmp
lahf
xchg
nop
das
push
mov
jne
sarl
xchg
call
mov
shl
jge
out
push
outsb
mov
std
jg
xchg
dec
sahf
clc
dec
push
gs
inc
inc
dec
xor
add
repz
sub
or
mov
mov
lods
jp
cwtl
and
push
adc
mov
mov
mov
lret
movsb
sarb
mov
cmpsl
leave
movsl
cwtl
push
inc
pushw
mov
jb
inc
xchg
sarl
fs
ret
testb
pop
cmp
cmp
jg
inc
mov
add
fstpt
push
pop
pop
or
lods
mov
repnz
cmp
mov
mov
xchg
in
cmp
cmc
mov
mov
add
cltd
mov
xchg
test
add
stc
mov
sub
jae
ljmp
cmp
mov
jne
xor
sbb
mov
loope
cld
shl
clc
out
incl
inc
mov
fisttpll
cli
cmc
bound
cltd
aas
xchg
test
or
dec
inc
xchg
adc
jmp
cmp
cmp
cltd
stos
repz
dec
jb
in
mov
dec
sub
mov
mov
and
test
xor
hlt
mov
xchg
adc
test
jns
mov
mov
cli
call
aaa
or
jns
test
lret
stc
sar
aaa
mov
sbb
inc
lods
sbbl
insb
cmp
and
mov
mov
adc
ds
xchg
into
push
mov
fidivrl
inc
mov
dec
test
mov
insb
clc
nop
fstps
call
js
mov
pop
inc
xchg
pusha
and
mov
sub
out
adc
fwait
and
loopne
lcall
mov
push
cmpsb
push
sub
mov
mov
ljmp
inc
or
cmp
mov
dec
mov
pop
cmp
sub
inc
mov
movsl
mov
mov
pop
fldcw
mov
jae
pop
mov
rcrb
jo
arpl
stos
rorl
stos
mov
or
xor
push
push
clc
cmp
sti
aaa
pop
add
and
jo
jns
test
or
pop
jp
dec
xor
ss
inc
or
xchg
or
lcall
inc
sarb
orb
arpl
sbb
adc
or
or
mov
sbb
push
mov
xor
push
repnz
mov
sub
aas
clc
add
nop
and
xor
mov
out
xchg
test
ja
add
nop
add
cmp
incl
adc
cmp
sbb
sbb
add
or
adc
cwtl
push
mov
mov
mov
incb
ret
jnp
mov
cmc
jmp
mov
pop
test
fdivrl
add
shl
xor
insl
cld
pushl
sbb
nop
orps
clc
fwait
jle
dec
jb
adc
sahf
fiaddl
cli
cmp
es
bound
insb
mov
enter
std
jb
pusha
test
out
fwait
aaa
mov
incl
jnp
mov
push
add
adc
hlt
enter
sub
inc
xchg
and
pop
test
fidivrl
xor
dec
scas
imul
sti
lcall
enter
test
sbbb
adc
cmp
in
cwtl
sbb
cmp
enter
pop
xor
popf
xchg
fwait
dec
in
sbb
lcall
nop
sbb
repz
mov
stc
sbb
mov
push
popa
ljmp
cwtl
xchg
or
jmp
mov
xchg
scas
in
leave
and
xor
adc
mov
xchg
sbb
imul
sub
pop
pusha
dec
xor
incl
rcrl
lahf
push
out
sub
sahf
jo
jae
das
sti
outsl
mov
mov
or
mov
xchg
pop
ret
je
lret
test
mov
loopne
jg
add
and
xchg
pushf
aam
jbe
rol
hlt
dec
jbe
ljmp
aad
iret
or
inc
nop
add
negb
pop
adc
enter
pmaxsw
orb
jge
and
cli
incl
daa
cmc
cmpb
rolb
ljmp
subl
xor
push
jg
sub
push
and
xorl
rolb
xor
out
jg
ret
sbb
sbb
push
ss
add
addb
sbb
jmp
or
add
aam
lret
lock
imul
aas
gs
sub
inc
lea
jo
sbb
add
neg
inc
jo
int
lock
sbb
or
mov
mov
cmc
cld
push
and
add
mov
pusha
call
incl
cld
mov
cmp
jmp
dec
pop
movsb
mov
cmp
dec
mov
mov
sbb
dec
adc
pushf
jb
adc
dec
fadds
jmp
das
shlb
outsl
clc
xor
xor
lods
fisubl
mov
mov
sbb
hlt
sub
loope
pop
inc
test
cmp
dec
mov
mov
repnz
aaa
inc
lcall
movsl
imul
dec
ljmp
jbe
cmp
xchg
xchg
mov
inc
shrl
dec
add
xlat
lret
or
fcomip
pushl
xchg
dec
lret
jmp
add
cmc
adcl
sar
mov
cld
jmp
xchg
aaa
sbb
mov
ret
xorb
mov
les
loopne
loope
sarl
jle
lcall
cmp
std
fadds
jae
and
xchg
stos
sbb
sbb
pop
ja
lcall
adc
add
addb
inc
mov
mov
pop
adc
pop
mov
ss
mov
pop
lods
mov
sbbb
iret
repnz
lock
shrb
xchg
enter
mov
xchg
dec
or
nop
aad
add
sub
ja
dec
cmp
xchg
nop
xor
sbb
xlat
subl
insl
into
jo
les
and
jecxz
test
dec
out
adc
scas
imul
lret
out
pop
je
mov
loopne
int3
inc
dec
add
dec
cmp
call
lahf
xor
mov
push
jg
ljmp
punpcklwd
add
inc
popa
mov
mov
push
mov
ljmp
dec
cli
stos
push
ja
lods
mov
mov
nop
mov
or
hlt
add
insb
les
push
push
dec
or
jns
outsl
test
mov
incl
pop
sub
ret
imul
adc
loopne
sbb
sbb
in
jg
inc
cli
add
pusha
enter
add
add
xchg
mov
add
loopne
push
mov
adc
aaa
cld
mov
or
and
sbb
cmp
adcl
add
xchg
or
in
outsl
fcomp
pop
pop
iret
stos
or
daa
add
push
xor
mov
xor
dec
xor
add
scas
inc
jmp
lret
shrl
nop
cld
xor
stc
mov
or
call
fs
jp
aam
or
subl
cmpsb
mov
call
cmp
jecxz
fadd
jmp
jg
sub
int
stos
fstpl
std
cld
or
in
or
in
lods
jge
iret
stos
adc
mov
imulb
xor
movsl
inc
push
xchg
push
adc
jg
cmc
incl
mov
arpl
test
mov
add
push
int3
mov
sbb
int3
stos
xchg
fdivl
jg
mov
pop
or
xlat
ljmp
adc
jecxz
adc
in
mov
imul
mov
cmpb
sahf
mov
fdivrl
sbb
test
bound
mov
mov
ja
orl
jns
xor
aad
pop
push
popa
jle
or
pop
aad
cmp
add
push
lret
call
add
mul
add
mov
adc
pushl
and
push
mov
stos
pop
loope
pusha
test
push
test
call
ljmp
adcb
sub
sbb
imul
add
xchg
mov
pop
mov
or
jb
mov
aas
popf
inc
into
xor
icebp
push
ljmp
adc
and
sahf
jle
cmpsl
mov
fidivl
push
ret
loop
lret
mov
out
dec
popa
insb
or
incl
mov
xor
mov
mov
and
fidivl
and
jg
or
mov
add
mov
inc
inc
icebp
mov
popa
dec
jmp
mov
loope
fwait
ret
adc
cmp
ret
in
nop
lods
mov
xchg
inc
push
pop
sahf
pop
sbb
outsl
push
gs
ss
subb
xor
lcall
sub
jno
sbb
add
insl
jno
ret
jmp
sub
add
pop
add
add
add
pop
add
pusha
call
sbb
jle
invd
sahf
out
ljmp
pop
push
sar
pop
outsb
add
xchg
xchg
popa
sbb
int
mov
add
sbb
jle
pop
sbb
popf
mov
push
mov
and
mov
mov
fdiv
sbbb
call
pusha
rorl
mov
aaa
or
or
out
mov
mov
xchg
rclb
imul
fs
cmc
mov
call
lcall
je
xchg
dec
mov
mov
and
sbb
scas
mov
push
or
pop
sbb
xor
xor
mov
addr16
xchg
dec
call
data16
push
orl
popf
fnstsw
jmp
cmc
leave
frstor
fimuls
sbb
mov
lret
imul
xlat
push
xor
mov
call
ljmp
mov
add
cmpb
icebp
mov
mov
jno
fists
add
and
sub
jbe
add
sub
int
xorb
call
sub
mov
iret
jns
scas
lock
cmp
cmp
pop
lock
pop
sbb
mov
ss
pop
inc
cmp
and
test
add
pop
jmp
movsl
pushl
outsb
outsb
fdivp
push
idivb
jne
xchg
pusha
jno
or
xor
es
pop
popa
mov
orb
scas
jae
loope
lahf
insb
pop
xchg
pop
add
xor
cs
lcall
or
mov
loopne
sub
push
jo
cmp
mov
test
and
nop
out
xchg
ror
xor
push
add
test
xorb
xchg
aam
mov
dec
js
out
jmp
ljmp
push
clc
inc
cmp
aaa
sti
sahf
shll
xchg
js
int
cmc
jmp
xor
adcb
decl
mov
scas
ds
xchg
das
and
inc
rcrb
inc
inc
hlt
mov
ja
xor
cmp
mov
mov
cmovg
xchg
lods
add
lahf
push
addr16
das
js
daa
jge
test
cli
test
shrb
pop
outsl
add
cmp
lcall
lret
fdivs
dec
shlw
test
pop
dec
or
insb
and
mulb
ja
cmp
push
movsl
clc
rolb
add
andb
mov
mov
mov
mov
jp
ljmp
cli
inc
xlat
xorb
push
inc
jo
push
jmp
inc
xchg
nop
out
scas
out
jo
jmp
out
popaw
pop
divb
lret
sub
rcrl
loope
xchg
pop
adc
in
std
ja
std
xchg
mov
sahf
or
xchg
add
popa
and
pop
push
and
sub
pushf
push
jle
ja
incl
rolb
jle
aaa
push
push
mov
loopne
jl
mov
test
cmp
decl
scas
add
fimuls
mov
movsl
dec
inc
call
mov
jg
xor
xchg
or
lahf
shrl
pop
mov
addr16
clc
pop
or
add
cmp
orl
es
aam
inc
mov
adc
sbb
movsb
inc
push
jbe
js
and
nop
pop
mov
mov
ljmp
cmc
sbb
inc
lcall
dec
pushf
cmp
je
or
xchg
and
sub
loop
and
sub
stos
or
sbb
test
and
pop
insl
bound
push
lods
add
fildll
fsubrs
add
scas
pop
ret
mov
mov
push
lcall
add
daa
cmpsb
fnstsw
out
fistps
shlb
inc
js
xchg
xor
enter
scas
mov
adc
jnp
out
xor
or
and
dec
les
push
ss
pushl
mov
loopne
out
pusha
popl
add
cs
pop
aaa
mov
adc
cmovbe
mov
add
fwait
nop
std
add
movzbl
push
lods
jecxz
pop
add
gs
gs
push
jbe
dec
cmp
mov
sti
jge
ja
sahf
pop
dec
mov
pop
jge
push
js
outsl
add
inc
adc
js
subl
ljmp
xchg
pop
push
leave
aad
adc
incl
add
pop
push
bound
push
push
cmpsb
lds
inc
pop
mov
decl
les
add
lea
add
insb
aad
pop
or
sbb
out
xor
push
js
mov
aam
test
dec
js
pop
pushl
call
xor
fs
adc
adc
mov
pop
data16
mov
sti
pushl
add
emms
rcrb
mov
sub
and
cmp
jg
test
sbb
and
push
push
imul
call
hlt
cmpsl
mov
cmpsl
add
or
stos
movsb
lret
mov
sahf
pop
das
lds
sbb
aam
dec
sbb
inc
les
adc
ja
daa
sub
mov
xchg
inc
push
in
mov
fsubs
mov
mov
outsb
test
popf
jne
xlat
pop
xor
movsb
pop
dec
add
clc
pop
repnz
add
enter
call
jecxz
adc
loopne
inc
adc
mov
decl
enter
jl
inc
loope
and
mov
xchg
inc
mov
xchg
mov
sbb
jg
or
fisubrl
xchg
xchg
pop
jnp
and
push
mov
lcall
loope
iret
cmp
add
fdivrl
mov
ret
and
push
xor
adc
push
pop
cmc
xchg
clc
je
jb
fwait
dec
outsl
push
xor
insb
lock
ljmp
movsl
loope
or
int3
pop
orl
les
dec
add
inc
add
orb
cli
mov
xchg
push
sbb
fiaddl
out
xor
clc
mov
cltd
and
test
and
sub
mov
bound
imul
ret
or
call
xchg
xchg
sbb
inc
lea
xchg
dec
push
xor
add
inc
lock
jecxz
jle
adc
and
or
decl
add
nop
dec
pop
ficoms
push
cmp
push
shlb
add
fs
fcomip
call
adcb
int3
add
push
scas
mov
xchg
dec
sub
sar
mov
iret
mov
hlt
fldcw
cmp
mov
neg
decl
mov
std
clc
adc
mov
mov
dec
and
icebp
ljmp
xchg
push
inc
adc
adc
jbe
cmpsl
add
sub
sub
lret
incl
push
rorb
inc
mov
push
push
push
add
jg
add
push
cmc
lcall
les
sub
negb
cmc
cli
inc
push
or
xchg
in
addl
fistps
sbb
push
xchg
inc
vpsubsb
lods
rcrb
les
xchg
mov
jecxz
dec
jl
adc
fsubs
call
add
nop
inc
adc
in
pop
sub
lretw
xchg
mov
xor
stos
fisubrs
popa
pushf
add
xor
rorl
sub
movsb
xor
sbb
shll
dec
adc
pop
shlb
mov
add
mov
out
decl
fwait
rcrb
stos
pop
fs
loopne
sarb
and
push
push
adc
incl
lods
or
xor
adc
push
mov
push
pop
rorl
xchg
fidivrs
adc
incl
and
cmp
les
push
push
bound
sbb
inc
xchg
rclb
lock
inc
xchg
movsb
push
stc
xor
xor
add
add
inc
lret
sub
and
sub
or
fwait
or
sarb
jecxz
sub
clc
pushf
adc
pop
sub
decl
imul
sub
lcall
adc
mov
push
int3
shl
sbb
mov
adc
cmpb
aad
cmp
rorb
xor
mov
out
mov
mov
shll
cmp
mov
mov
dec
dec
adc
pop
add
and
lcall
jl
rcrl
push
adc
inc
and
and
push
push
mov
jae
add
sub
enter
dec
inc
pop
cltd
dec
inc
xchg
lods
dec
dec
loope
scas
pusha
add
jae
cmc
adc
ljmp
dec
push
adc
push
and
xor
add
call
dec
sub
addb
pop
sti
sbb
stos
or
xor
mov
push
mov
mov
incl
cmp
repz
inc
add
lea
mov
sbb
jmp
push
mov
mov
fsts
or
mov
and
lock
push
outsb
movsl
jg
insb
push
test
or
mov
and
xchg
loopne
outsl
adc
and
test
or
test
jo
xchg
decl
mov
inc
add
inc
adc
ljmp
mov
add
adc
incl
mov
sahf
xchg
push
and
mov
or
lock
mov
or
pop
lcall
inc
mov
shlb
xor
inc
fcompl
call
xchg
loop
aam
es
xchg
push
sbb
add
adc
xchg
mov
out
mov
add
inc
leave
inc
xchg
mov
adc
push
pop
loopne
push
data16
jecxz
out
add
xor
test
push
xor
add
test
mov
arpl
xor
sbb
pop
inc
jns
xor
outsl
jmp
and
adc
fldenv
and
andl
adc
mov
insl
jbe
pop
adc
roll
jp
xchg
ret
push
cli
mov
inc
dec
out
aam
jg
or
xor
or
or
orb
add
lcall
ficomps
ss
jo
incl
xchg
sub
sahf
or
and
mov
or
pusha
xchg
aad
shrl
test
mov
repz
sti
or
ljmp
cs
jno
fsubs
inc
and
andl
popa
decl
jg
inc
add
push
mov
inc
fsubrl
rcll
imul
or
decl
dec
lcall
hlt
add
ljmp
fwait
nop
sub
xor
dec
loope
adc
jo
insl
and
xchg
add
icebp
mov
fs
dec
mov
add
adc
sbb
loop
mov
xlat
lea
lret
in
scas
cmp
enter
ljmp
andl
in
lret
popf
pop
stos
adc
mov
add
std
or
add
or
and
or
mov
ret
jmp
cli
decl
push
mov
add
mov
pop
push
inc
push
or
cmp
push
divb
mov
add
cmp
pushl
pop
sbb
xchg
das
and
or
mov
sahf
js
xor
enter
call
js
sbb
mov
pop
insl
jg
jo
in
iret
add
sub
repnz
call
lods
cmp
jns
push
out
xchg
add
pushl
repnz
iret
cmp
pop
enter
sub
cmp
imul
and
add
push
sarb
jle
rclb
in
mov
mov
jg
ljmp
sub
jns
cmp
decl
inc
add
inc
xchg
sti
jnp
add
pushl
add
jne
fldl
inc
cld
stc
cmp
hlt
jge
fmul
lds
into
fisttps
jg
jb
pop
nop
sar
push
mov
mov
pop
lock
incl
cmp
cmp
popa
icebp
aad
sbb
adc
outsb
and
hlt
mov
pop
popa
sub
and
xchg
mov
mov
dec
cld
jl
xchg
inc
xchg
xchg
outsl
fdivr
fistpl
add
int3
mov
addr16
add
add
inc
adc
sub
rclb
lods
cmp
adc
xchg
push
adc
jnp
movsb
sarl
sbb
or
cld
lcall
or
add
or
inc
inc
push
cli
decl
mov
pop
mov
mov
sbb
pop
cmp
mov
sub
xor
fs
mov
mov
aam
nopl
inc
sbb
inc
sbb
incl
jge
push
push
mov
pop
adc
sbb
xchg
int3
jmp
inc
bound
jmp
mov
ja
add
ljmp
testb
mov
loop
inc
call
or
push
lods
ficomps
lahf
push
adc
push
mov
push
and
xor
ss
jmp
das
push
jecxz
mov
test
add
test
mov
sahf
test
rcrl
enter
xor
mov
jecxz
jno
cmp
cmp
xor
mov
mov
sbb
cmp
popa
sbb
xor
test
decl
sub
es
aad
in
in
les
test
mov
and
sbb
adc
inc
ret
inc
cli
inc
jmp
fcmovbe
push
pop
dec
scas
cmp
cmpsl
je
call
lahf
cld
mov
xor
filds
xchg
lcall
pop
addb
fidivrl
adc
rclb
xor
add
push
xor
sbb
fs
push
cmp
mov
cmpl
notb
dec
sbb
inc
clc
mov
cmpl
mov
pop
loopne
aad
enter
sbb
fadds
cmp
inc
cmp
ljmp
cmp
push
dec
adc
or
subl
cmp
add
sbbl
pop
mov
scas
xchg
push
push
ret
jge
dec
mov
fs
mov
xor
or
decl
sarl
sbb
leave
push
push
inc
cmp
sahf
push
les
leave
xlat
or
orl
ljmp
or
call
inc
adc
bound
sbb
pop
les
lret
incl
insl
inc
or
fidivl
loop
mov
sbb
rorb
pop
insb
sub
notb
incl
test
adc
sub
or
add
dec
adc
push
xor
outsl
pop
dec
cmpsl
cltd
cwtl
cmpsl
jp
or
loop
inc
subl
adc
pop
sub
pushl
mov
xor
jl
out
sbb
or
jl
inc
subl
fs
addb
andb
jge
pop
aaa
mov
mov
and
xchg
jl
mov
sbb
inc
pop
adc
into
popf
ljmp
mov
test
in
mov
int
mov
jmp
int
push
pop
call
loopne
push
inc
addr16
add
mov
mov
xor
mov
xchg
xchg
and
test
pusha
dec
fwait
xchg
filds
hlt
decl
and
adc
adc
push
dec
pop
add
sbb
decl
movb
or
and
dec
lret
sbb
and
in
add
rol
jg
jmp
xor
pop
out
fwait
and
or
sub
mov
dec
inc
cs
std
call
dec
fwait
mov
popw
jp
bound
sbb
mov
test
es
add
adc
adc
inc
inc
ss
lds
rcrl
cmc
jg
add
adc
sar
add
imul
inc
pop
mov
mov
adc
pop
push
adc
aaa
xchg
dec
sbb
add
popf
xchg
aaa
std
stos
mov
test
cs
push
call
adc
in
pusha
int3
push
ds
dec
mov
shl
test
loop
mov
loop
imul
xorb
and
xor
push
cwtl
xchg
fisubrs
mov
xor
xchg
icebp
sub
lret
lods
xor
add
mov
lds
mov
jnp
daa
ret
mov
adc
dec
int
pushf
xor
inc
scas
call
push
nop
test
push
mov
or
aad
add
and
jbe
dec
outsl
mov
lods
cmpsl
sbb
lds
add
mov
sub
mov
adc
sub
test
cmp
push
inc
std
ljmp
add
xchg
cmp
ret
pop
mov
and
es
xchg
mov
in
push
cld
stos
sbb
sbb
shrl
dec
push
out
sar
in
inc
adc
sbb
add
sahf
mov
cmp
gs
subb
sub
call
push
mov
popa
and
mov
xchg
jg
and
arpl
nop/reserved
fs
test
in
dec
pop
gs
pop
or
adcl
add
mov
aas
and
push
pushf
subl
dec
pop
insl
pushw
gs
mov
add
xchg
les
mov
jmp
pusha
adc
clc
das
cmp
add
adc
push
cwtl
shlb
or
pop
cli
sub
cmp
dec
or
ljmp
stos
sbb
call
push
xor
mov
dec
jg
jmp
insb
mov
ret
cli
daa
ret
push
inc
movsb
pop
or
test
lock
mov
test
xor
or
enter
and
pop
insl
cmpsb
jne
cltd
mov
loope
add
ficompl
sbb
popf
inc
push
divl
xor
lcall
add
lock
adc
mov
in
sub
lcall
test
pop
je
decl
jns
adc
cltd
inc
cmp
push
ret
jbe
jmp
pop
sbb
or
dec
push
xchg
add
je
popa
sub
sbb
add
movsb
incl
jo
or
ficomps
cli
xchg
push
and
outsb
inc
xchg
push
rcrb
jecxz
inc
jo
add
inc
arpl
loopne
adc
es
imul
mov
xchg
sub
push
incl
lret
cmpsl
bound
mov
popa
or
sub
push
imul
sbb
and
add
or
call
jb
mov
add
hlt
add
inc
ss
add
pop
shrl
mov
clc
add
push
sbb
into
das
jns
ficompl
scas
ljmp
add
sbb
mov
or
lock
int
sub
add
pop
inc
or
add
jo
shll
sub
pop
dec
pop
sbb
fwait
push
cmp
mov
mov
pop
arpl
cld
jle
lock
das
je
sti
sub
jnp
subb
inc
dec
dec
jp
add
dec
decb
inc
sbb
cwtl
insb
movsl
sbb
jnp
les
or
sub
out
in
cmp
es
das
xchg
adc
inc
push
in
mov
push
push
or
jecxz
xchg
sub
mov
add
lcall
and
sub
stos
test
jno
fstl
test
scas
cli
cmp
jp
movsb
inc
cmp
add
hlt
rclb
cld
call
xor
sub
fwait
xor
test
cmc
pop
sbb
adc
push
adc
jg
pop
repz
cmp
add
cwtl
pop
adc
mov
dec
outsb
mov
add
es
inc
xor
pushl
orl
adcb
push
mov
sbb
jb
sub
mov
fiaddl
incl
into
insb
fldcw
enter
lds
sbb
les
fcmovu
lcall
adc
inc
aas
mov
sbb
xlat
sbb
mov
fiaddl
dec
inc
adc
pusha
cmpsl
incl
stos
jbe
mov
cmpsb
xor
cmpsb
pop
dec
push
adc
aaa
jns
fdivrp
fisttpll
pop
std
inc
mov
dec
test
jb
push
nop
popf
adc
iret
pop
inc
test
add
push
cli
incl
addr16
imul
ljmp
inc
sbb
std
sbb
push
sahf
xor
jmp
cmp
psubb
adcb
inc
xchg
add
je
push
adc
mov
pop
mov
jo
mov
sub
xor
cmp
add
adc
pushl
loop
rclb
xor
adc
sbb
les
jno
loopne
mov
stos
clc
lcall
jno
mull
mov
push
daa
jne
pop
mov
inc
adc
dec
movb
inc
push
loope
push
fs
iret
dec
mov
mov
inc
loopne
cmp
test
loopne
hlt
dec
fiadds
push
sbb
jne
jns
push
cwtl
ljmp
inc
popf
jae
pushf
outsb
int3
pop
mov
fcmovnbe
sub
out
movsb
ret
ret
aaa
or
fs
jecxz
mov
adc
jg
loopne
add
pusha
loope
xchg
imul
jbe
aam
xchg
mov
call
and
pusha
push
and
fistpl
adc
test
sub
out
clc
add
xchg
pop
and
jnp
aaa
push
or
inc
mov
jb
dec
adc
adc
fmull
add
aaa
cli
and
dec
or
adc
adcl
ret
jb
lea
cwtl
or
mov
es
lds
sub
xor
add
outsl
add
xlat
shll
inc
stos
jmp
data16
mov
dec
adc
sbb
mov
mov
add
pop
icebp
mov
ljmp
je
xlat
jb
jo
sbb
jns,pn
mov
xor
jb
addl
xor
arpl
daa
sub
js
clc
scas
clc
lock
lock
pop
push
stos
fdivrs
fisttpl
cmc
aad
stc
filds
fnstsw
call
xchg
testl
inc
sarb
out
fnstcw
fcoml
aad
jnp
cs
xchg
sub
icebp
rcrl
dec
jmp
xlat
cld
add
stos
leave
mov
pop
cmp
lcall
inc
test
outsl
xchg
arpl
pop
int3
popf
xor
incl
sub
pop
pusha
sub
push
or
fwait
push
mov
aam
fwait
adc
pop
leave
push
sbb
pop
xchg
movsl
je
mov
hlt
inc
cmpsl
jecxz
push
inc
mov
cmpsl
and
test
imul
xchg
sbb
insb
call
loope
push
push
lret
popf
scas
fldenv
mov
idiv
aad
scas
shrb
jno
ljmp
cli
jmp
push
xor
pop
aas
mov
aam
imul
cmpsb
movsb
dec
rorl
dec
adc
rclb
fwait
hlt
sbb
shll
mov
jnp
inc
sbb
mov
mov
test
add
mov
das
mov
cli
lahf
add
mov
ret
cmp
loopne
aad
std
incl
popl
push
cmpb
push
push
jg
inc
or
nop
push
add
dec
mov
movb
push
jecxz
mov
outsl
cwtl
movaps
dec
push
lret
rolb
fs
jo
pop
cmpb
call
jg
sbb
nopl
xor
add
dec
pop
imul
mov
idiv
ss
add
inc
aam
adc
inc
test
ret
imul
ljmp
push
cmpsl
mov
xor
push
loopne
int
cmp
fucomi
cmc
sti
mov
pusha
add
sbb
loope
test
out
xchg
add
push
aas
cmpsb
lcall
negb
push
cs
sbb
rcrl
mov
enter
jge
dec
ljmp
movsl
cmpl
xor
and
insl
fldl
out
decl
pop
sub
sbb
pop
mov
aaa
ja
scas
cli
dec
adc
rcr
cmp
jnp
in
jg
sbb
mov
fsubrs
xor
imul
mov
push
inc
push
xor
fimull
or
jmp
mov
out
adc
ja
sti
filds
out
add
inc
lock
lock
nop
jle
dec
push
dec
pushf
mov
ret
cmovns
push
fistps
sub
and
fstpt
lods
jo
sub
or
push
add
nop
lods
ljmp
jo
add
push
push
andb
push
scas
inc
es
andb
jp
adc
or
inc
nop
mov
mov
and
sub
ljmp
enter
xor
inc
mov
es
and
dec
nop
clc
mov
sub
push
lcall
clc
and
sub
add
mov
push
cmp
test
test
mov
adc
adc
sub
xor
adc
cmp
xchg
xor
loop
mov
xchg
mov
add
or
daa
xchg
jb
mov
push
xchg
cmp
and
andb
sub
or
ja
jg
add
std
mov
outsl
sub
and
or
ret
mov
test
push
mov
es
in
push
mov
inc
nop
sbb
adc
ret
add
mov
orl
jmp
ficoms
cmpsb
mov
decl
lods
inc
das
fldt
cmp
mov
sbb
or
push
orl
sbb
das
mov
mov
jmp
pusha
jmp
std
cld
stos
lret
aaa
decb
jle
fdivrs
push
add
incl
aas
mov
lcall
mov
pop
push
pushf
add
aas
pop
xor
mov
jmp
cmp
pop
clc
add
mov
scas
scas
lcall
mov
sbb
mov
aas
xchg
aad
or
mov
orl
out
cmp
in
mov
xor
mov
sbbl
mov
cli
add
add
pop
lods
mov
ret
jle
and
stos
call
fsubrl
addr16
mov
fdivp
rorb
bound
add
inc
jo
xor
pop
loopne
decl
dec
mov
sub
push
fmul
rclb
je
push
rorl
fimuls
sub
test
idivb
xor
xorl
pop
sbb
pop
xchg
inc
cmc
and
add
jg
mov
adc
pop
push
sbb
and
xchg
int
mov
pop
cld
mov
pop
cld
aad
push
mov
adcl
mov
in
sahf
push
loop
xchg
cmc
push
xchg
xchg
rcl
fmuls
mov
dec
es
xchg
test
dec
jne
mov
ljmp
cmp
or
mov
fstpl
addr16
ret
push
int3
les
daa
test
ljmp
or
testb
into
mov
sbb
cltd
fdivr
mov
fwait
dec
push
or
nop
int3
xor
or
data16
or
push
sub
sbb
mov
clc
and
cwtl
out
icebp
push
mov
aad
ret
dec
std
decl
cmp
imul
insl
insl
sub
push
subb
xchg
or
and
test
add
mov
push
sbb
inc
mov
les
stos
mov
inc
ljmp
ficoml
mov
pop
push
xchg
sub
sbbl
push
test
jg
jg
xor
xchg
sub
push
lret
xchg
loopne
or
or
xor
lds
std
xor
push
and
xchg
ficoms
lods
jg
sub
cwtl
lcall
dec
or
call
daa
dec
sub
or
cmp
add
adc
xor
cmp
movsb
test
push
pusha
jb
add
shlb
sub
enter
cmp
mov
fwait
movsb
or
xchg
cmp
sub
rolb
inc
pop
rclb
sub
mov
push
inc
xchg
lds
push
in
mov
adc
push
clc
push
mov
call
inc
ljmp
mov
push
pop
cs
lods
adc
or
adc
ljmp
sbb
push
jno
cmp
lcall
call
popa
adc
xor
fistpl
inc
mov
mov
lods
arpl
ljmp
les
xlat
push
dec
adc
pusha
adc
adc
decl
mov
cmpsb
cmp
pop
mov
out
subb
and
cmp
push
repz
decl
or
mov
cwtl
inc
data16
pushl
aam
adc
xor
xlat
inc
pop
call
mov
mov
sbb
in
clc
mov
gs
fcmovnu
out
xchg
imul
inc
or
jns
adc
loop
adcb
ret
jb
adc
jb
call
mov
or
dec
mov
dec
pop
ret
push
mov
push
add
stos
add
or
js
ljmp
call
out
js
sub
shlb
lods
pushf
orb
ret
adc
mov
sarb
test
test
inc
xor
loopne
xor
sub
test
clc
imul
sbb
decl
out
ja
orb
mov
add
mov
cmpsb
push
or
inc
add
loopne
xchg
mov
cli
loop
push
dec
push
push
outsb
jg
test
mov
pop
xor
or
dec
stos
mov
push
outsl
mov
hlt
cmpsb
xchg
popa
adc
mov
xor
cmc
lds
sub
fsts
fidivl
mov
cmc
mov
fmull
data16
mov
int3
fmull
mov
push
jbe
fsubr
sbb
fbld
jnp
pop
adc
shll
rcrb
or
cmp
cmc
pushf
xchg
adc
pop
and
pop
mov
sub
js
aas
insb
xor
ds
cmp
push
adc
inc
test
lret
movsb
icebp
fcmovne
push
pop
lods
add
pushf
dec
cli
incl
jb
mov
cmp
lock
xor
sbb
call
es
add
lcall
xor
xor
test
imul
loopne
cmp
call
test
mov
movsb
fisubl
cs
pop
and
lret
sbb
test
dec
iret
daa
adc
lret
movsl
add
ljmp
ljmp
sbb
lods
push
mov
mov
fdivs
aas
sti
and
xor
incb
inc
push
xor
xchg
adcb
or
adc
andb
mov
arpl
push
fadds
sub
add
adc
lock
jg
sub
push
xor
pop
out
movsb
scas
outsb
cmpsl
push
and
inc
mov
flds
and
icebp
mov
jg
fs
je
mov
gs
and
lds
rolb
push
lret
dec
xor
jnp
scas
insl
movsl
lea
imulb
loop
test
inc
pop
inc
xchg
adc
inc
jecxz
mov
sbb
dec
cli
sub
jmp
outsl
xchg
repnz
lahf
outsb
out
pop
call
fbstp
lea
lods
jb
lods
cmpsb
in
lods
imul
lcall
arpl
aaa
and
cmpl
add
cmp
sub
fwait
stos
push
adc
mov
xor
jg
dec
pusha
sbb
rorl
add
cltd
pop
add
add
xchg
sbb
pop
mov
das
jge
pop
jg
stos
dec
stos
rcrb
movsl
fmuls
ljmp
push
test
out
ja
jb
sub
lcall
outsb
gs
mov
dec
pop
pop
loopne
sub
xor
inc
jle
jecxz,pn
lret
or
xor
inc
outsb
lds
pusha
and
xchg
jp
inc
xchg
test
pop
xchg
mov
mov
pop
test
ljmp
pop
into
orb
lods
mov
pop
aaa
fimull
pop
pop
nop
mov
mov
push
sub
subl
jmp
mov
lcall
cmp
mov
outsb
movsb
lock
lods
fiadds
ss
arpl
mov
aas
movsb
mov
jb
iret
cmpsb
call
mov
cmp
mov
or
loope
pushl
xor
adcl
adcb
and
dec
inc
imul
cmp
mov
jmp
into
sahf
mov
and
lcall
adc
mov
pop
cmc
in
hlt
dec
hlt
inc
xchg
cs
dec
mov
enter
fimull
add
aad
arpl
mov
dec
cltd
and
and
pop
mov
ss
incl
sub
data16
imul
icebp
fidivl
cli
and
add
arpl
cs
lcall
mov
sbb
sti
add
pop
push
mov
xor
ljmp
cli
jmp
js
out
rdmsr
in
cmpsb
xor
adc
pop
out
mov
push
push
inc
sub
jo
pop
cld
stos
push
xchg
rorb
outsb
mov
sti
xor
out
add
fidivs
clc
pushl
push
loope
sub
sub
push
add
pop
adc
and
rolb
sub
sub
push
or
sub
mov
jb
sub
roll
dec
dec
pop
push
push
pop
enter
mov
cmc
mov
sub
insl
sub
sub
idiv
jmp
pop
push
add
je
sub
stos
jl
xor
mov
addr16
arpl
dec
jmp
xchg
or
mov
push
or
push
int
inc
aam
or
pop
inc
cmp
pcmpeqb
aas
or
xor
call
je
scas
sub
fstpt
push
sbb
adc
mov
or
shrl
mov
xor
sti
jg
and
push
push
arpl
inc
adc
cli
adc
add
cmp
imul
xor
push
nop
subl
push
push
scas
cmpsb
xchg
inc
clc
rep
or
inc
inc
js
mov
adc
hlt
imul
or
xor
loopne
cld
in
xchg
add
add
add
movsb
lock
loop
mov
add
adcl
adc
lods
shlb
decl
xchg
loopne
push
loope
mov
cli
lock
push
sti
mov
stos
loope
inc
inc
cmp
aaa
jne
mov
in
pop
jle
scas
mov
mov
sbb
add
shlb
dec
xchg
icebp
mov
push
add
xchg
and
lcall
sbb
repnz
fists
and
decb
nop
add
jb
pop
rolb
or
addb
add
lock
sbb
sbb
add
rcr
ss
add
push
xor
inc
xor
pop
mov
sbb
pop
incl
xor
pop
leave
sar
in
repnz
insb
movsb
sub
mov
out
movsl
sub
dec
outsb
push
out
test
cmp
sub
mov
stc
stos
lods
out
subb
arpl
mov
scas
test
sbbl
test
int3
mov
and
test
cmp
ljmp
sub
dec
leave
cmp
jp
out
shlb
in
push
lock
jmp
addl
mov
icebp
rolb
sbb
push
incl
sbb
data16
setns
xor
das
add
dec
cli
xor
add
or
sbb
fs
mov
mov
and
pop
pushf
sub
pop
rcll
cmc
pop
xor
and
sub
add
popf
mov
pusha
pusha
mov
xor
adc
cli
lods
pop
mov
pop
mov
push
add
inc
add
dec
add
and
cmp
sti
xchg
mov
jl
testb
lods
and
mov
hlt
lcall
and
sub
pop
and
lods
adc
xor
xor
fbld
mov
cmp
and
jbe
sub
je
sub
roll
sti
mov
push
inc
and
rclb
aas
je
hlt
mov
std
pushl
xor
rcr
ss
inc
sub
gs
sti
idiv
push
and
inc
stc
jno
or
inc
xlat
xor
cmp
lcall
test
jb
pusha
popa
movsl
xchg
push
push
inc
mov
jge
cs
or
xorb
push
inc
decl
lock
add
bound
push
pusha
in
sub
outsl
mov
das
xor
xor
push
imul
test
outsl
sub
hlt
or
xor
xor
call
stos
cmpl
int
incl
or
nop
and
adc
xor
sarl
ss
std
mov
inc
imul
ret
push
sbb
mov
clc
repnz
aad
mov
adc
inc
push
and
xor
repz
sub
sarl
xchg
test
data16
ljmp
pop
add
pop
jmp
lds
addb
pop
mov
decl
mov
jae
rorb
ljmp
jp
xor
arpl
lret
xchg
dec
mov
ljmp
jle
jl
push
pushf
clc
cmc
jbe,pn
adc
fldl
sub
adc
pusha
push
cmp
xor
and
cmpl
and
cmp
in
decl
sbb
andb
and
inc
aas
fcomps
adc
cmp
bound
popa
adc
ljmp
push
pop
cwtl
popa
pop
mov
and
clc
pop
jp
dec
stos
ss
aad
shl
pusha
rolb
out
sahf
push
incl
bound
or
fisubrl
aam
pop
mov
fimuls
mov
cli
jmp
cltd
jb
pop
das
insl
mov
mov
decl
leave
fcmovbe
int3
mov
jo
mov
lods
cli
add
ficoms
dec
or
mov
cmp
pop
mov
call
les
mov
dec
inc
lea
decl
cmp
xor
cmp
push
sbb
push
rclb
sbb
call
std
in
aas
inc
inc
sub
loopne
repz
push
xor
dec
xchg
inc
mov
gs
dec
aas
jns
adc
arpl
adc
test
push
loop
cpuid
add
mov
xchg
adc
sub
pop
sti
and
jne
lcall
jg
aad
popf
test
inc
pusha
ds
pop
shll
movsl
ja
or
pushl
movsl
js
dec
sub
sti
or
pop
cld
sub
mov
sub
dec
dec
xor
pop
sub
xorl
add
sahf
dec
mov
dec
lcall
mov
stc
mov
lcall
mov
or
inc
ret
lahf
bndldx
clc
pop
mov
fcomip
test
dec
rclb
push
and
insb
test
mov
jb
imul
movsl
pop
les
sub
mov
arpl
subb
cmp
pop
push
jno
xchg
mov
repnz
mov
lock
int3
movsb
or
hlt
push
mov
xchg
or
push
mov
push
mov
cmpsb
sub
decl
arpl
mov
shrb
mov
cs
xchg
mov
scas
xchg
cmp
ljmp
cmp
add
lret
adc
jb
or
mov
mov
jae
dec
repz
jmp
cli
call
ljmp
adc
mov
pop
dec
outsl
incl
and
bound
test
lods
std
test
fcmove
xchg
cmp
add
add
aaa
sub
cmpb
push
ret
jle
out
test
je
adc
minps
xor
lret
scas
pop
mov
xchg
movsl
cld
pushl
cwtl
orb
ljmp
ja
jecxz
sbb
or
ja
push
xor
aaa
loop
cs
sub
mov
mov
cltd
mov
loop
into
mov
fistl
fistps
mov
and
idivb
sbb
cmc
sbb
pop
or
cmp
decl
rorb
cmp
movsb
bound
inc
hlt
add
and
imul
mov
out
arpl
pushf
aam
push
nop
out
test
cwtl
in
cmpsl
ja
mov
mov
jnp
mov
lds
mov
jp,pn
test
mov
add
cmp
or
lods
or
incl
outsb
js
scas
out
into
fdiv
xchg
jmp
scas
jmp
enter
lret
pop
lret
mov
sbbl
scas
xor
pushf
ds
inc
adc
and
jecxz
add
sbb
mov
hlt
loope
mov
cmp
pusha
push
push
lods
add
cld
and
stos
pop
cmpb
push
sub
sub
test
in
incl
andb
and
nop
sbbb
ret
lret
or
mov
add
ficomps
jp
add
cmp
lods
sub
ljmp
pushf
jns
stc
and
mov
jle
std
cltd
out
mov
out
pusha
push
mov
popa
lret
and
xchg
ljmp
jecxz
xchg
and
inc
fistps
fstps
xchg
ss
sbb
adc
xor
mov
lcall
incl
incl
jle
mov
pusha
dec
mov
sub
rclb
lcall
pushl
test
outsl
lcall
cmp
ljmp
xor
cmpsl
cmpl
lods
ljmp
xchg
cmp
out
mov
mov
sub
inc
es
mov
or
mov
push
push
or
nop
push
mov
jno
lods
mov
out
mov
dec
jae
adc
imul
popa
push
cmp
mov
cmpl
int3
das
lods
cmp
adcl
ja
and
in
mov
push
fs
mov
and
add
cli
add
iret
aad
outsl
mov
jmp
lcall
dec
js
sbb
xchg
jne
jne
mov
mov
test
add
add
test
add
or
lret
inc
pusha
mov
aad
cld
mov
adcl
test
xchg
inc
in
test
adc
sub
sahf
jno
cs
sbb
test
xor
repz
push
insb
insl
jecxz
lock
repz
push
sbb
int3
cld
push
sbb
xor
pop
repz
pop
xchg
incb
insb
icebp
xchg
pop
lahf
repz
fdivrp
jae
fcoms
cmc
xchg
pop
cmp
repnz
cmp
lahf
divl
fdivrs
dec
xor
jge
or
pop
and
test
sbb
cld
xor
loop
sub
jmp
les
inc
enter
pop
pop
aam
sub
insl
mov
push
mov
pushf
stos
rcl
stos
stos
mov
insb
mov
mov
add
or
pusha
lcall
jo
ret
cmovle
mov
push
std
inc
shlb
inc
xchg
shl
divb
popf
xchg
adc
shl
and
xor
mov
cmp
cli
in
jg
add
cmp
sub
arpl
addb
fadds
dec
sub
movsl
gs
ljmp
pop
repz
sbb
lods
cwtl
cmp
mov
call
js
loopne
sbb
in
mov
mov
push
iret
sarb
add
pop
pushl
add
sbb
pop
mov
insl
repnz
jne
jg
incl
push
adc
fidivrs
mov
pusha
dec
insb
pop
inc
ret
out
add
pop
fcomps
std
mov
ficoms
sub
sub
mov
hlt
lock
mov
icebp
into
decl
imul
scas
cmp
mov
mov
jmp
mov
std
cmp
dec
pop
mov
mov
jg
cld
inc
jnp
or
loopne
fiadds
push
clc
inc
addb
loop
lds
mov
inc
sbb
adc
mov
jmp
mov
popa
mov
loope
pusha
lds
out
add
movsl
insl
sub
fdivs
fcoms
jg
dec
nop
adc
adc
fmuls
adc
es
push
faddl
aaa
jmp
xor
leave
sub
ds
adc
jg
xchg
inc
movb
mov
gs
stos
dec
dec
rclb
xor
cmp
jg
or
mov
vpaddusb
or
stos
and
adc
jge
rorl
movsl
gs
aaa
sub
int3
push
adc
inc
mov
jg
decl
cmpsb
lcall
inc
sbb
and
leave
es
push
pop
lods
call
add
push
movsl
aad
cmc
fdivs
pusha
xchg
cltd
add
in
adc
mov
ljmp
pop
test
ret
xor
adc
pop
jp
fsubs
out
push
cld
jg
mov
xchg
insl
xchg
sub
pop
mov
js
addr16
pushl
xor
xchg
cwtl
jns
out
xchg
fidivl
mov
pop
sbb
push
scas
ljmp
xor
jno
std
pushf
lcall
call
bnd
sbb
dec
jmp
out
mov
push
dec
mov
push
dec
in
into
adc
jno
mov
sbb
push
leave
push
dec
mov
jecxz
push
imul
lret
dec
or
outsl
insb
repz
pop
or
out
mov
inc
cld
adc
inc
inc
stos
and
incl
fimull
dec
mov
imul
fwait
dec
jbe
xor
shlb
in
mov
jae
imulb
add
lods
jbe
and
fcmovnu
pusha
dec
cmp
faddl
dec
mov
mov
popf
sbb
adc
loope
jge
cmp
lcall
decl
decl
sub
xchg
lcall
into
rorb
sub
cld
xchg
jmp
cli
push
fwait
and
or
movsb
mov
jle
and
stos
push
pushl
lret
dec
mov
xchg
scas
xchg
scas
mov
test
lock
mov
mov
push
test
mov
mov
dec
test
ljmp
mulb
and
imul
lahf
in
ret
jmp
imul
inc
pop
push
mov
imul
or
ficoml
mov
lcall
sbb
orb
in
mov
ljmp
movsb
jbe
and
aas
sub
push
mov
or
add
mov
adc
das
and
xchg
lret
ret
call
or
clc
popa
adc
loope
dec
push
inc
adc
adc
and
clc
inc
ljmp
or
rolb
mov
test
jl
fimull
out
xchg
jecxz
pushf
and
rcrl
cld
adc
and
test
pushl
hlt
fwait
xchg
cmp
cli
arpl
movsb
mov
imul
mov
incl
or
lcall
imul
pop
idiv
mov
sub
outsb
ret
pop
sbb
dec
nop
ret
dec
pop
adc
cmp
popa
test
adc
sbb
pusha
add
mov
dec
jbe
mov
mov
add
or
je
xchg
jno
or
push
pop
dec
jmp
lds
shll
mov
sahf
pop
add
sub
sub
pop
cmp
jbe
sub
pushf
add
imul
outsl
sub
or
in
incl
gs
test
mov
xchg
dec
addl
pusha
pushf
gs
pusha
pop
pop
pusha
add
das
sahf
loop
add
xrelease
test
xchg
jecxz
ret
nop
jp
add
pushl
or
movsb
adc
sub
test
cwtl
lret
and
cmp
rcrb
pushl
sub
push
xchg
test
and
imul
add
mov
or
daa
and
add
test
in
pop
ss
add
movsb
cld
decl
inc
pop
arpl
enter
movsb
mov
mov
je
push
cmp
jbe
aam
decl
in
test
cmp
sbb
popf
dec
andb
insl
xor
push
inc
xor
leave
xor
xor
inc
imul
mov
je
cld
and
mov
pop
std
aaa
cld
incl
mov
imul
and
mov
js
insl
add
and
insb
jg
and
movsb
fsubrs
stos
cmp
call
and
out
imul
test
stc
sub
jns
dec
adc
cmp
enter
inc
popf
hlt
imul
add
lcall
or
int
cwtl
cmp
dec
lahf
cmp
cmp
subl
xchg
cwtl
lret
mov
dec
loope
arpl
cmc
call
mov
sbb
lea
mov
sbb
inc
adc
lret
fstpt
jo
stos
push
aad
adc
jns
cmc
add
jmp
sbb
lods
mov
add
pop
in
xchg
pop
cli
dec
das
stos
xlat
sub
scas
movsb
cltd
jbe
ljmp
add
fisttps
mov
dec
rorl
aam
add
test
ret
cmp
jns
push
xorb
imul
nop
ret
inc
pop
cmovns
mov
mov
jbe
xchg
into
sbbl
call
enter
mov
sub
push
mov
loopne
jbe
inc
in
shlb
xchg
mov
mov
mov
sahf
scas
mov
imul
pusha
mov
add
insl
push
jg,pt
xchg
outsb
in
sar
jmp
mov
mov
ljmp
jo
fcomps
inc
call
lds
outsb
je
ljmp
push
pushl
insl
int
je
sub
add
pusha
add
mov
mov
pusha
in
fs
daa
push
or
push
outsl
mov
pop
insl
add
in
cmp
mov
cmp
insl
push
pop
stos
or
push
mov
fcoml
add
adc
jmp
inc
push
sub
push
sbb
sub
out
mov
mov
imul
jae
jg
fs
mov
fsubl
shll
jle
mov
into
xor
inc
cli
leave
and
lcall
ljmp
rcll
es
cmpsl
inc
stos
jl
lea
out
xchg
shll
dec
mov
mov
arpl
xchg
mov
xor
addr16
cmovno
sbb
loopne
incl
sbb
lock
pop
add
push
mov
mov
jl
xor
clc
fidivrl
clc
decl
pushf
out
ret
ja
aaa
aad
inc
out
xchg
push
cld
xchg
shlb
adc
mov
jb
fbstp
and
add
test
pusha
icebp
sub
rorl
and
clc
daa
jle
lock
ljmp
rclb
mov
in
scas
add
dec
repnz
ss
stc
lret
hlt
cmpsl
daa
std
add
clc
shrb
dec
jg
push
pusha
sti
outsb
fistl
fimull
pop
dec
hlt
pusha
jg
roll
sarl
lcall
fucomip
mov
insl
filds
dec
pusha
clc
pop
loope
imul
pop
push
push
and
pop
push
repnz
lds
and
jg
xchg
xor
mov
in
sbb
mov
ss
popl
sub
nop
hlt
es
pushl
loopne
jae
loop
pop
call
ja
dec
test
jg
lcall
repnz
enter
out
out
cmp
add
rclb
pop
or
or
addr16
data16
xchg
jecxz
cmp
xchg
push
inc
pop
inc
mov
jmp
jg
arpl
cmpsb
jge
and
shrl
push
fadds
inc
sub
inc
js
stos
test
test
test
fstpt
xor
test
rcrb
push
add
push
push
cs
filds
dec
add
adc
dec
push
xchg
jb
jne
sbb
testb
fadds
ljmp
or
enter
xchg
and
add
and
cltd
std
call
sub
seta
mov
jp
dec
mov
xchg
clc
jns
cwtl
mov
aam
jp
xlat
js
adc
loopne
shlb
add
aam
insb
lods
mov
ret
dec
sti
xor
out
data16
andl
and
jo
mov
ljmp
cmpsb
popa
pop
movsl
add
ss
adc
gs
clc
ss
mov
ljmp
jl
sbb
sbb
cwtl
mov
out
out
arpl
xlat
pop
push
jo
inc
cmp
sar
mov
or
loopne
xor
arpl
cmp
xchg
push
btr
dec
mov
aaa
sub
sbb
test
je
mov
adc
pusha
inc
je
subb
call
cld
dec
orl
xor
add
loopne
push
xchg
xchg
sbb
add
ss
in
xor
aas
add
push
dec
lock
xchg
bound
dec
add
jg
and
xor
mov
mov
fbstp
xor
fadds
ds
push
test
inc
mov
jmp
insl
cmp
je
jnp
and
jb
js
mov
adc
adc
jbe
pop
pop
aaa
mov
dec
jg
pop
dec
js
push
pop
fnstenv
cltd
addr16
sbb
pop
loopne
pop
nop
js
cltd
lret
call
xchg
js
sub
inc
jp
sub
fsqrt
pop
mov
aaa
mov
nop
mov
pop
insl
fadd
cwtl
cmp
jbe
push
jp
bound
mov
xchg
incl
cli
out
push
xor
push
xchg
or
lcall
lcall
cmp
addr16
and
aaa
jge
dec
orb
pop
adc
jb
mov
mov
jbe
sub
sbbb
out
dec
icebp
adc
add
gs
shufps
mov
push
adc
stos
ljmp
add
or
push
add
or
push
pop
push
mov
ljmp
sbb
jnp
addb
xchg
mov
cltd
int
cltd
out
cltd
jge
das
add
xlat
lret
andl
loopne
xchg
incl
outsb
clc
subb
add
imul
lcall
arpl
ss
cltd
mov
cs
ja
jo
lahf
add
stos
ja
cld
mov
jns
jmp
lcall
lret
test
jno
jns
leave
jp
or
cwtl
lahf
call
decl
inc
ljmp
mov
data16
rolb
xchg
stc
jns
add
and
jmp
xor
ja
das
pop
inc
mov
push
push
jmp
mov
push
sbb
in
movsb
mov
jg
lcall
dec
movsb
adc
movsl
adc
popf
jecxz
adc
adc
jecxz
ljmp
adc
inc
cmpsb
out
jae
mov
mov
adc
or
ljmp
scas
jecxz
sahf
arpl
jp
or
repz
or
push
push
mov
pop
cmp
mulb
cmp
fiaddl
incl
lahf
mov
test
jmp
jno
mov
adc
mov
pop
mov
jmp
xchg
aaa
pop
mov
notl
jecxz
movsl
adc
or
pop
pusha
xchg
daa
jns
fimull
xchg
stos
ret
mov
mov
out
mov
ret
aam
stos
mov
adc
rclb
fldt
mov
test
cmpsl
mov
mov
test
xchg
jge
icebp
scas
cmp
loopne
xor
movsb
jle
bound
inc
inc
lods
pop
scas
addb
add
lcall
dec
adcb
sahf
push
mov
pop
cmp
test
sub
clc
jae
jmp
add
ss
pushl
cld
ret
adc
fnstsw
stos
jecxz
jle
mov
jmp
shl
dec
lods
loop
pop
push
mov
call
shll
lea
imul
ljmp
or
mov
loop
inc
jne
repz
jns
mov
jo
mov
sbb
pushl
mov
stos
push
repnz
ficomps
scas
xor
push
mov
pop
mov
decl
jp
daa
jnp
clc
mov
decl
ja
xor
mov
mov
sbb
loop
xchg
or
mov
mov
jbe
or
cltd
out
cli
sbb
cmp
sbb
mov
gs
dec
inc
xchg
jb
adc
adc
nop
jg
dec
std
sti
xor
sub
fwait
jg
pop
dec
call
clc
mov
adc
sahf
aad
dec
loope
push
popa
cmp
mov
sub
jecxz
dec
nop
nop
ja
decl
ret
test
ss
pop
divl
cmp
pop
pop
popf
dec
mov
incl
inc
fistpl
mov
mov
out
dec
sub
test
das
flds
inc
or
cmp
cmp
decl
jns
push
lods
popf
mov
dec
cwtl
fwait
pop
cwtl
cs
mov
sti
lahf
fdivr
jmp
fwait
ret
cmp
jo
jb
xchg
xchg
inc
add
mov
adc
push
pushl
fstps
fistl
test
xlat
mov
pop
fwait
and
addb
ljmp
add
jg
jno
pop
adc
ljmp
add
test
mov
dec
mov
push
mov
sub
or
mov
popf
enter
lcall
mov
lods
inc
sti
jmp
jmp
cmp
push
imul
ljmp
in
mov
xchg
inc
mov
xchg
cmp
mov
push
adc
push
jbe
jne
shr
xchg
pop
lock
xchg
test
mov
jmp
pop
iret
lret
fsubl
or
mov
sbb
jg
pusha
jecxz
push
mov
or
add
incl
cmp
into
sub
in
cmp
pop
cld
jg
jl
xchg
mov
mov
movsl
jne
pop
or
cmp
mov
ret
mov
jl
lock
add
mov
xchg
jecxz
fwait
mov
call
call
sub
enter
shrl
int3
inc
mov
cmp
sub
pop
mov
mov
fwait
sbb
ss
fcompl
push
iret
imul
pushl
inc
sahf
jno
mov
or
push
scas
push
mov
insb
jne
add
jae
push
std
mov
mov
sub
je
gs
pushl
push
add
lcall
mov
leave
mov
jmp
xchg
out
pop
push
pop
mov
aaa
int
aad
test
stos
in
test
cld
mov
sbb
sbb
inc
cmpsb
jp
mov
enter
cmpsb
ds
shl
call
xchg
mov
in
pop
add
mov
imul
mov
arpl
xchg
or
cltd
cmc
fwait
in
cmp
dec
stos
xchg
call
and
scas
out
sbb
repnz
ss
jbe
insb
or
cmc
add
fdivrs
ljmp
das
js
and
fcmovnbe
stos
xorb
jae
push
ljmp
rcrl
scas
addr16
lret
mov
xchg
dec
rclb
lds
out
adc
rcrl
decl
xchg
mov
inc
pop
push
xchg
sub
into
aad
xlat
pusha
fmul
inc
mov
fiadds
lcall
enter
push
push
fnsave
add
add
pop
test
call
and
aaa
pop
std
adc
ret
movb
leave
cmp
in
adc
sahf
call
jle
sahf
dec
mov
cmp
icebp
test
insl
jge
cltd
clc
lcall
and
stos
lahf
rcrl
pop
fstpl
pop
ljmp
cli
imull
pushl
call
ss
push
jl
mov
stos
outsb
mov
stos
cmpl
stc
sub
xchg
in
mov
xchg
mov
or
jmp
dec
jae
cmp
pop
std
jmp
icebp
inc
rcll
sub
into
pop
cmp
jmp
ret
aas
sar
clc
cltd
fdivr
fidivs
and
data16
xchg
fwait
jle
sbb
add
jno
push
inc
push
cmp
hlt
ljmp
or
mov
dec
arpl
repz
jg
fisttps
and
lcall
out
icebp
fistps
lret
fdivl
jmp
dec
into
mov
xchg
jno
mov
js
test
test
insl
mov
inc
test
les
push
push
ss
imul
mov
cld
ss
mov
movsb
dec
pushl
lea
in
mov
insl
fldt
cltd
negl
jmp
js
push
test
popa
inc
dec
jge
jmp
fstpl
push
mov
fisubl
fdivr
jne
push
addr16
push
cmp
jnp
pop
stos
jmp
inc
dec
and
cmpsb
les
sarl
ret
add
mov
adcb
outsl
lcall
and
add
push
sub
add
call
adc
adc
movsb
ljmp
in
mov
loopne
outsl
push
call
dec
mov
scas
pop
add
adc
xchg
dec
cmc
leave
stos
stos
mov
mov
xor
xorb
pop
inc
adc
push
scas
shl
sbb
out
insl
and
jg
push
or
sub
and
scas
sarb
ret
jecxz
repz
lea
lret
outsb
xchg
scas
xchg
or
ljmp
sub
sbb
fdivl
xchg
jp
mov
pop
aad
test
loop
cmc
mov
dec
ficomps
jmp
int
inc
cmpsb
lods
clc
das
sbb
xchg
adc
jne
add
adc
pushl
cmpsb
push
out
insl
push
mov
sahf
fbstp
xor
sub
mov
mov
lret
push
aas
stos
call
xchg
lea
pop
xchg
cs
adc
cmp
mov
xchg
popf
shlb
pop
lcall
lahf
lahf
xchg
das
dec
fisubl
fidivl
pop
jecxz
popf
repz
lock
outsb
fcmovnu
or
xchg
inc
shr
push
ja
or
xchg
cltd
xchg
hlt
push
in
pop
xlat
sub
iret
xchg
fisttps
call
fistps
shlb
inc
std
xor
xchg
jg
lahf
mov
ja
and
mov
add
cmp
cmpsb
mov
adc
pop
popf
jae
loopne
std
pushl
adc
pop
subl
add
mov
faddl
mov
inc
data16
dec
cld
cmp
sbb
ret
adcl
jmp
sub
push
insb
ljmp
lcall
jle
sbb
jecxz
cmp
sahf
inc
cltd
mov
insb
ret
xchg
in
cmc
fwait
inc
xchg
xor
sbbb
cmpsb
mov
sbb
scas
add
sbb
dec
push
in
xchg
and
lea
mov
push
lcall
call
bnd
xchg
mov
cltd
xchg
sbb
jge
push
test
fistl
loop
dec
mov
div
call
fbld
cmpsl
xor
mov
sub
pop
sub
sub
mov
sbb
incl
mov
adc
ret
jnp
lods
fdivs
cmp
lock
mov
xchg
push
sbb
jne
sbb
out
ja
faddl
fdivl
fildll
bound
jns
out
xor
mov
ljmp
jg
scas
idivl
in
loopne
out
pop
cmpsl
mov
orl
jnp
hlt
out
jo
hlt
jno
outsb
into
lret
mov
in
xlat
into
aas
lock
add
dec
add
rorb
sub
mov
or
insb
test
or
lods
fs
fisttps
movsl
data16
aad
insb
insl
inc
xchg
mov
sub
cmpsl
inc
clc
filds
jmp
sub
std
jmp
sbb
push
lcall
cli
fs
dec
mov
mov
sub
or
mov
sbb
lods
dec
lret
jmp
test
jmp
jmp
xor
sbb
or
inc
cld
inc
mov
pushf
dec
xor
xor
push
lock
loope
pop
cs
cmp
mov
shlb
test
lock
jecxz
mov
ss
and
mov
add
jmp
in
or
cmp
pop
dec
lock
loopne
jb
and
push
fistpl
loopne
pusha
adc
clc
add
or
jo
or
decl
and
push
inc
pop
push
or
mov
mov
test
pop
es
decl
push
and
adc
xchg
popf
lcall
pop
pusha
fs
pushw
sbb
inc
inc
jg
pushl
and
mov
outsb
xchg
popf
jo
inc
stos
dec
sub
insl
cltd
sub
sbb
and
ljmp
mov
leave
imul
jmp
sbb
inc
xchg
int3
daa
sbb
push
jl
aas
jno
pop
into
into
xor
dec
xor
mov
call
inc
lods
xchg
nop
mov
sub
push
sbb
jg
sbb
sub
push
outsl
pop
pushf
nop
jge
jp
sti
add
mov
mov
mov
xchg
out
shlb
jl
in
lcall
scas
cmp
xor
push
sbb
adc
xor
imul
adc
sub
jae
insb
dec
daa
mov
cmp
imul
incl
data16
and
sub
fbstp
xor
and
add
push
push
push
outsl
les
lahf
sbb
sub
and
push
dec
push
inc
and
and
mov
decl
adc
push
js
jne
pop
dec
xchg
call
mov
jns
aaa
pusha
push
inc
and
cmp
clc
jg
ja
push
dec
inc
inc
cmp
flds
jne
addl
mov
fists
adc
rol
int3
mov
mov
mov
int3
faddl
lcall
sti
bound
mov
mov
mov
sarb
jg
test
add
leave
mov
mov
lock
cmp
cmpsb
addr16
out
mov
insb
jg
loop
ja
xchg
pop
ret
std
sahf
sbb
xchg
in
scas
sub
cmpsl
or
mov
jnp
jp
div
int3
cmp
popa
imul
mov
mov
lcall
dec
popa
test
andb
xchg
lods
scas
ss
add
xchg
mov
lea
pop
lods
cmpsl
out
mov
xchg
mov
scas
mov
test
fnstsw
rcr
fmuls
fstps
pop
xchg
das
arpl
xchg
insb
inc
fbld
movsb
movsb
ret
lahf
and
adc
icebp
fwait
scas
jnp
ficomps
adc
xor
inc
push
aas
jbe
ja
adc
push
xchg
pop
sar
push
in
push
insl
mov
and
pusha
fwait
lcall
call
inc
sub
cmp
js
mov
or
push
shl
shrb
xor
test
jo
insb
cmp
loop
xchg
cltd
lock
jg
cmp
stos
jns
adc
add
jecxz
lea
xchg
out
clc
pop
incb
jmp
fstl
call
pop
cmp
pop
pop
push
aas
inc
pusha
adc
rorl
sbb
inc
lcall
add
sub
flds
adc
inc
sub
inc
mov
dec
sub
cli
lcall
scas
mov
or
adc
icebp
bound
and
xor
xor
insb
mov
and
ss
mov
sbb
add
jg
call
mov
mov
aam
cmpsl
pusha
sahf
push
push
ljmp
push
adc
cwtl
cmp
fisubrs
lcall
ror
fsubs
mov
cltd
mov
fs
jp
push
movsl
lods
xchg
mov
repnz
in
dec
push
push
popa
sbb
es
jl
xor
or
mov
sub
mov
cli
decl
sbb
mov
lcall
sahf
cwtl
jno
xchg
adc
sbbl
call
xor
nop
mov
inc
xchg
push
mov
mov
xchg
sub
mov
or
xchg
or
decl
mov
or
sahf
jl
je
loopne
mov
pop
cmp
sub
stc
repz
mov
lahf
outsl
inc
incl
push
inc
push
lea
imul
or
lods
int
push
inc
and
outsl
jmp
and
jg
int
push
orl
sub
sbb
xchg
incl
push
sub
push
and
mov
adc
and
es
ljmp
jne
push
pop
popa
movsl
bound
pop
lea
sbb
or
adcl
pop
insb
sub
adcl
dec
js
xchg
dec
into
movsl
adc
inc
or
scas
cli
cmp
fsts
pop
cmp
mov
mov
pop
loop
push
mov
cmp
ljmp
cwtl
imul
negb
push
fsub
jbe
pushf
mov
mov
aas
fisttpll
and
ja
in
dec
push
jge
sbb
in
mov
adc
sbb
ss
decl
pushf
jo
adc
movsl
fsubl
pushf
ja
imul
pop
test
xchg
push
test
pushl
xchg
add
dec
mov
jg
add
repnz
out
mov
jmp
arpl
bswap
xchg
mov
loopne
or
sbb
sub
ss
push
xchg
incl
cltd
js
push
xor
fmuls
push
sbb
push
push
movsb
pop
xchg
xchg
imul
xlat
mov
xchg
movsb
mov
xchg
imul
subb
mov
hlt
adc
xchg
stos
std
ljmp
lods
pop
jo
inc
push
xchg
cmpsl
mov
mov
mov
fwait
sbb
inc
push
sub
and
decl
pop
adc
iret
adc
dec
push
add
pushf
rol
inc
popa
pop
rorb
pop
or
sti
je
aam
out
dec
cmp
mov
mov
xlat
lcall
out
shlb
insl
neg
mov
neg
imul
push
stos
push
xchg
jmp
ja
in
lcall
insl
sahf
cmpsb
sbb
dec
push
sbb
mov
loope
add
inc
cmpsb
outsl
aaa
mov
sbb
jl
loopne
jbe
lods
sahf
or
adc
adc
dec
add
imul
sub
dec
call
lods
mov
sub
xor
or
push
out
push
jl
mov
lea
fiaddl
call
push
and
inc
mov
lcall
in
loopne
cld
jg
enter
repz
sub
push
pop
call
mov
fidivl
popa
pushf
mov
or
clc
out
dec
add
jl
lcall
adc
mov
xchg
or
int
xor
adc
sub
loop
fdivs
or
add
push
inc
movsl
pushf
push
and
or
test
and
inc
fisttpl
jmp
mov
orl
jecxz
into
fdivrp
mov
cld
lcall
cwtl
push
test
push
jno
mov
out
bound
arpl
mov
push
push
push
ret
or
daa
pop
xchg
into
je
ror
pop
gs
clc
call
mov
sub
into
frstor
arpl
ja
sbbb
imul
pop
mov
test
push
pop
dec
dec
add
and
and
push
decl
movsl
cmpb
mov
inc
sub
and
icebp
mov
xor
std
fcomip
popf
mov
push
dec
jg
je
pop
dec
rcrb
and
push
clc
sub
inc
int
adc
nop
cs
incb
push
pop
jno,pn
push
or
add
test
or
incl
push
stos
lods
cmp
and
pop
cwtl
test
pop
jmp
mov
addr16
jne
vmwrite
ret
testb
nop
inc
popf
shufps
cmc
ljmp
dec
inc
aam
inc
sub
add
shll
dec
sbb
pop
fbld
mov
adcl
mov
pop
pop
or
cld
ret
or
or
push
dec
mov
sub
push
call
lock
and
sub
dec
mov
xor
mov
ljmp
jge
push
pop
jle
xchg
call
fcomip
push
sbb
mov
jl
push
adc
add
pop
sahf
ret
mov
mov
push
int
push
mov
aad
cld
shrb
adc
in
int
ljmp
pop
pop
pusha
or
sbb
push
push
mov
ljmp
lret
cli
aad
data16
push
ja
ret
fcmovbe
rcr
lods
pop
or
push
adc
pop
stos
adc
ja
aam
add
push
xor
pop
push
imulb
add
cld
pop
imul
push
sub
inc
push
dec
add
decl
mov
aaa
fdivs
sub
decl
cmpsl
call
adc
mov
negb
adc
cmp
lds
xchg
mov
shll
lahf
and
xchg
jmp
outsb
ljmp
cltd
dec
mov
mov
cmpsl
add
movsb
jecxz
mov
decl
out
mov
repz
in
mov
sbb
aad
inc
testb
mov
push
nop
shrb
pop
pushf
fistl
lret
jne
mov
sub
dec
mov
jno
cmp
lcall
scas
pop
pop
inc
hlt
sub
pop
cmp
ja
mov
cld
jno
xor
xchg
je
sbb
nop
hlt
aam
daa
sub
call
mov
lret
idivb
sar
mov
lret
inc
test
or
jnp
and
add
inc
bound
sub
lods
mov
stos
or
rcll
cmpsb
scas
mov
xchg
and
push
fsubr
sbb
cld
loopne
mov
lcall
add
cmpsl
and
cwtl
jge
or
aam
hlt
lcall
je
add
cld
cmp
ret
sbb
lods
cmp
pop
add
popf
icebp
pop
add
inc
add
sub
mov
jp
jns
hlt
cwtl
imul
push
jp
xchg
push
outsl
cli
incl
aaa
pop
call
mov
mov
test
les
push
sbb
icebp
push
imul
cmp
jbe
mov
mov
popf
and
xchg
jo
lock
clc
mov
cwtl
aam
movsl
out
je
fstpl
fidivrs
ljmp
mov
in
fbld
dec
loopne
mov
add
movsl
inc
cld
decl
jbe
pop
push
in
addr16
cmpsl
test
adc
jg
daa
jmp
push
in
sub
push
pop
dec
jecxz
mov
movsb
in
call
call
mov
daa
in
dec
adc
lock
push
inc
push
push
pop
push
nop
cmp
cmp
pushl
cld
jl
leave
mov
xlat
repnz
ret
adc
push
adc
jno
or
mov
enter
lret
adc
jb
loopew
dec
mov
xchg
mov
cmp
or
sbb
sahf
cld
pop
mov
aam
and
into
or
lods
dec
dec
sbb
je
adc
cwtl
in
xchg
xor
outsl
dec
and
push
dec
mov
jmp
sbb
inc
jb
fdivrl
cmp
lods
xor
cmp
lea
add
and
sbb
mov
add
lcall
das
orl
dec
xchg
adc
or
mov
jbe
mov
jns
xor
sub
call
lods
addr16
mov
faddl
push
es
lcall
lcall
jg
and
cmpsl
mov
sbb
sahf
ficoms
call
dec
aam
iret
add
mov
cmp
push
fisttps
lcall
ja,pn
xor
mov
jbe
inc
sub
lahf
nop
aam
inc
jge
inc
push
inc
jp
jp
cmp
clc
xchg
mov
lock
test
ljmp
dec
lea
push
adc
mov
lock
ds
push
add
push
arpl
add
pop
int
stos
xor
pop
cmpl
out
lcall
incl
sbb
pop
sbb
jb
cmp
xchg
adc
cmp
cli
dec
data16
testb
incl
pop
jbe
or
jae
push
lock
dec
rolb
and
push
cmc
jg
push
lea
mov
and
jne
inc
mov
incl
inc
jbe
pop
test
addr16
nop
add
add
or
mov
sbb
andb
add
std
xlat
ja
movb
mov
js
or
ds
ljmp
push
mov
bound
jno
add
loopne
pop
pushl
mov
sbb
inc
xchg
daa
sub
xor
movsl
decl
add
inc
bound
dec
test
jp
popa
inc
xor
pushl
loope
inc
jmp
push
jno
dec
mov
inc
cwtl
push
push
push
ret
decl
dec
mulb
cmp
jge
add
repnz
loopne
and
popa
adc
stos
mov
call
leave
loop
jge
aam
or
sbb
hlt
pushl
adc
xchg
pop
inc
push
push
xor
adc
popa
lea
in
hlt
addr16
repz
and
jg
fisttps
pop
adc
loop
and
jae
jo
and
rorl
add
pushl
jmp
push
ficoms
jb
icebp
and
xchg
xor
push
push
push
mov
popa
add
and
decl
and
subb
sub
pusha
fdivs
nop
pop
add
dec
push
or
dec
ljmp
mov
push
into
or
inc
or
jae
arpl
test
nop
nop
dec
cmp
mov
dec
decl
mov
jbe
adc
add
orb
call
ja
inc
or
sbb
lock
xor
pop
pushl
pusha
testl
imul
push
ds
sbb
notb
push
stc
pop
fdivrp
aaa
cld
pushl
inc
dec
fwait
cmpsl
sub
je
mov
jnp
push
sbb
ss
fwait
cs
aad
jnp
imul
mov
cli
mov
and
test
mov
test
or
fdivl
mov
jl
xchg
pop
xor
pop
fcoms
out
fldl
sbb
data16
xor
loope
das
adc
lret
inc
cli
lcall
jo
enter
adc
fsubrs
sub
shll
mov
push
mov
sti
aaa
mov
cld
ljmp
dec
ret
test
rcll
repnz
shrb
fninit
cmp
aaa
loop
adc
cmp
sbb
push
xchg
out
pusha
mov
decl
mov
xor
popf
adc
jecxz
cmpsb
add
push
push
xchg
dec
push
data16
ja
out
mov
adc
fmuls
cmp
test
and
ret
add
jo
pusha
andb
sahf
loopne
push
xchg
int
rcrb
and
and
xchg
dec
shrb
mov
ljmp
xchg
jl
add
push
and
mov
add
mov
sbb
negb
cmc
xchg
jno
movb
jnp
mov
jg
ljmp
xchg
sub
mov
sbb
les
xor
push
loope
jp
jne
fcoms
push
and
push
inc
in
mov
xor
test
fidivl
lods
adc
push
inc
pop
adc
mov
addr16
aaa
mov
cmpsl
or
jg
inc
std
pusha
sub
test
out
inc
ljmp
jno
outsb
lret
pop
adc
mov
mov
adc
jno
cmp
push
in
xchg
push
and
adc
pusha
jecxz
adc
les
jecxz
add
decl
loop
hlt
mov
cmp
mov
push
dec
bound
dec
rolb
cmp
mov
or
popl
iret
repz
pop
icebp
popa
fcompl
cmpsl
cld
xchg
sbb
dec
mov
gs
add
xchg
and
lcall
xor
add
and
test
push
mov
or
mov
lret
push
or
push
std
leave
adc
mov
clc
add
gs
fistpll
adc
dec
imul
jp
in
lret
or
xchg
ficoml
jbe
mov
ret
fildll
and
xchg
popa
sub
enter
pop
sbb
scas
jmp
pop
lahf
daa
push
mov
push
xor
push
cmpsb
movsl
ffree
xchg
into
testb
call
mov
stos
mov
xchg
and
outsb
mov
cmp
inc
inc
or
push
xchg
sub
ret
incl
loop
cmp
repnz
lock
push
in
adc
adc
lcall
sub
and
icebp
repz
dec
lods
pop
decl
add
push
jno
sbb
loopne,pn
mov
jecxz
int3
andl
loope
test
xorb
jmp
out
push
jmp
and
stc
and
push
and
and
es
call
cld
es
repnz
cltd
add
pop
push
mov
ja
dec
sub
scas
dec
mov
or
ds
push
add
or
push
adc
sub
push
ja,pn
xchg
cld
pop
std
stos
push
adcb
pusha
inc
mov
add
stos
jnp
das
adc
pushl
fisubrl
add
adc
jno
out
xor
xor
lcall
jmp
push
and
add
scas
stc
adc
mov
mov
pop
movsb
fnstenv
ljmp
push
cmp
insl
fs
and
mov
push
jmp
pop
movsb
movsb
decl
movsl
out
push
inc
ret
jne
aaa
inc
mov
lds
mov
jl
add
xlat
push
add
add
outsl
hlt
mov
lods
decl
add
push
mov
jp
cmpsb
ret
std
xchg
push
in
fs
pop
mov
jnp
pop
or
push
adc
cmp
push
jg
ret
or
jmp
xor
pop
ret
ret
and
push
or
jg
jnp
push
and
in
mov
and
xor
cmp
fwait
add
negl
dec
ja
jno
push
out
adc
das
cli
lea
push
dec
push
dec
gs
loop
or
jo
cli
mov
inc
nop
hlt
in
pop
sbb
and
shlb
pop
push
push
xchg
lods
add
xchg
adc
dec
mov
adc
jg
mov
das
rorb
sub
nop
xabort
add
ds
push
mov
or
add
sbb
push
jnp
nop
andb
inc
mov
jns
decl
pop
lret
stos
pop
shr
inc
out
adc
dec
sbb
xchg
cwtl
lcall
dec
xchg
xchg
jns
xchg
dec
sub
xor
push
aaa
xor
into
cmpsb
jp
mov
aad
enter
mov
xlat
aam
add
jg
cmpsl
mov
stos
shlb
int
icebp
outsl
and
push
adc
ficompl
insb
mov
jge
enter
movsbl
mov
sub
jle
push
test
loope
aaa
mov
ja
push
adc
jmp
out
jo
xor
xchg
bound
mov
mov
add
xchg
ret
fwait
lock
jg
inc
std
xor
arpl
and
sub
mov
adc
xor
es
mov
adc
dec
push
mov
or
ss
push
aas
mov
sub
aaa
je
fadd
push
dec
jl
addl
ljmp
lret
pop
add
icebp
adc
xor
and
sbb
aam
add
mov
dec
jno
xor
inc
insl
fildll
add
mov
adc
jg
lods
jle
sbbb
icebp
add
ljmp
inc
xor
mov
imul
sbb
jmp
pop
movsl
mov
stos
mov
imul
icebp
lret
push
inc
test
ljmp
lcall
dec
mov
sub
jmp
stos
sbb
jbe
sub
cmpsl
aaa
and
jmp
sub
xor
sub
push
and
pop
cmp
insb
pop
xchg
jns
mov
sub
push
jecxz
mov
outsb
imul
jmp
into
inc
adc
sbb
mov
mov
cmpsl
or
pop
repnz
call
sub
mov
cmp
fcoml
inc
lds
xchg
mov
add
aaa
cld
jg
loope
and
mov
add
inc
mov
add
insb
mov
stc
mov
inc
aad
ret
dec
xor
insb
xor
add
rolb
dec
mov
jg
bswap
jb
push
daa
inc
popa
pop
nop
inc
add
adc
adc
xchg
incb
incl
or
mov
sbb
cmp
ret
pop
cmp
lret
mov
cmp
int3
jnp
xor
mov
cmp
xlat
pop
fcom
xchg
test
insl
leave
cmc
pop
inc
adc
fsubl
jge
sub
lcall
sub
ss
sbb
ret
xchg
mov
sub
cs
lret
adc
cmp
or
mov
mov
jge
loope
lret
scas
popa
pop
out
and
mov
hlt
decl
rolb
es
push
fcoms
inc
jle
je
jecxz
lock
adc
aaa
fstpt
inc
loopne
out
in
ja
call
pop
arpl
je
mov
iret
gs
fcoms
lret
aam
ds
pop
xor
rcr
hlt
ret
jnp
inc
call
imul
inc
and
rorb
dec
jbe
and
fisttps
xchg
loopne
repz
jle
jmp
or
cmp
push
jb
push
mov
jg
cmc
ljmp
or
push
mov
mov
jmp
dec
fldl
ret
and
cmpsb
jno
test
insl
jg
mov
and
jp
movsb
mov
cwtl
push
pusha
cld
call
add
mov
in
popa
pop
cwtl
mov
xchg
test
inc
and
es
pop
xchg
mov
aad
insb
xor
mov
fwait
incl
icebp
push
pop
fimull
and
mov
lcall
adc
enter
out
mov
shll
jb
in
xlat
jl
cmp
movsb
and
inc
shl
adc
mov
enter
imul
mov
shrl
xchg
adc
aaa
cld
inc
shll
shll
jg
call
mov
das
lahf
push
iret
mov
lea
lock
aas
inc
cmp
jb
jo
bound
pushl
pop
adc
xchg
inc
mov
and
adc
sub
mov
mov
jle
icebp
dec
sbb
adc
cld
ljmp
add
adc
or
or
adc
hlt
xor
loope
incl
adc
leave
loope
cmp
idivl
movsb
in
in
jns
pop
push
jp
mov
imul
ljmp
subb
xchg
addr16
lret
lret
pop
repnz
and
cwtl
cwtl
and
filds
js
push
inc
ja
out
jp
inc
xchg
or
mov
mov
icebp
pop
pop
mov
and
call
mov
es
dec
sbb
stos
outsl
js
loop
ljmp
and
adcb
cmpsl
mov
push
dec
adc
in
inc
mov
mov
pushl
decl
icebp
push
adc
push
iret
in
call
loope
cmp
mov
mov
jno
inc
ret
mov
jno
cmp
mov
inc
repnz
xor
xor
push
sbb
clc
jb
push
add
xor
roll
inc
popf
xchg
dec
mov
sbb
add
pusha
sub
lods
mov
pop
inc
jb
out
xchg
xor
lods
inc
jmp
jl
lock
fsts
dec
fwait
cmp
in
out
lret
pop
ds
roll
out
mov
outsl
lods
pusha
es
xor
cmp
aam
dec
lcall
or
mov
loopne
bound
rclb
inc
or
push
popa
lret
scas
mov
pop
mov
fnsave
pop
and
or
push
sahf
xor
xchg
add
adc
mov
mov
sub
xor
icebp
loop
cltd
xor
es
pop
repnz
fildll
mov
xor
jbe
int
or
lcall
add
jecxz
clc
jno
leave
xchg
das
scas
dec
data16
fdivs
hlt
fcmovnbe
test
incl
pop
adc
icebp
shrb
shl
in
sarl
add
dec
shrl
mov
or
dec
jle
push
sar
aas
call
and
pop
pusha
xor
jle
jmp
jmp
cmp
rcrb
xchg
in
pop
shlb
pop
stos
mov
lcall
ret
daa
pop
dec
roll
call
dec
ret
lcall
sbb
xchg
push
push
test
push
xchg
xchg
popa
mov
push
add
ljmp
dec
sbb
nop
inc
subb
cli
adc
and
rclb
xorl
mov
sub
pusha
mov
jmp
sub
mov
mov
or
adc
sub
je
sbb
push
cmpsb
cld
fistpll
lahf
rolb
sub
pushf
push
shlb
jae
out
rorb
add
inc
add
wbinvd
bound
mov
lea
pop
sar
fwait
sub
imul
mov
push
outsb
mov
and
fisttpl
imul
xor
daa
jmp
cmp
jb
lods
xor
arpl
xor
cmp
jmp
cs
sbb
dec
fcmovnu
cs
sub
mov
cmp
loopne
lcall
xor
mov
mov
sbb
in
mov
ljmp
mov
xchg
lock
idivl
je
lds
aas
adc
clc
xor
sub
in
push
lods
pushl
xchg
pop
xchg
and
add
adc
add
testb
hlt
fs
push
dec
jbe
push
mov
out
and
dec
jl
imul
call
xchg
mov
test
loopne
add
outsl
movsb
outsl
insb
adc
pop
mov
mov
mov
jmp
or
hlt
ds
ds
push
pusha
out
inc
notl
mov
mov
cmc
call
out
and
sbb
mov
and
sar
frstor
pushf
mov
xor
cld
repz
inc
pop
pop
je
jle
adc
lcall
jge
adc
inc
lock
arpl
mov
dec
aam
pop
sbb
lcall
ror
notl
pop
add
adc
lret
pushl
sub
stos
psrad
in
dec
cwtl
addb
sub
sub
ljmp
pop
inc
and
jle
out
aad
pop
jge
cli
jmp
loope
cld
sub
xorb
push
mov
adc
decl
inc
fidivl
xorl
adc
ret
mov
mov
sbbl
rorl
cltd
insl
test
cmp
sar
lcall
in
jmp
add
or
xchg
mov
fiadds
xchg
inc
mov
push
decl
xchg
mov
push
mov
push
iret
dec
xchg
mov
mov
adc
add
pop
add
filds
or
add
data16
filds
scas
dec
rcll
outsb
adc
inc
decl
call
inc
mov
add
stc
sbb
cmp
int3
push
and
test
addb
or
pushl
mov
push
and
dec
fcmovnu
cmpsb
adc
ljmp
movsl
sub
rcl
cld
decl
cmpsb
pop
movsl
push
xchg
adc
add
pop
sbb
mov
lock
lret
pop
xor
incl
mov
pusha
cli
inc
cwtl
ds
bound
repz
sub
add
xchg
push
xor
sbb
jge
movlps
pop
xor
mov
decl
enter
out
xor
mov
test
sbb
ficoms
int3
cmp
xor
mov
xchg
inc
push
scas
pushf
sti
fadds
and
arpl
clc
mov
cmp
int3
dec
cmpsb
cmc
jg
pusha
mov
orb
subb
mov
call
call
pop
push
aam
adc
movsl
add
mov
push
and
add
lock
aas
and
incl
xor
pop
ds
movsl
xor
push
lcall
mov
mov
inc
shlb
and
or
mov
pop
cmp
push
mov
add
outsb
dec
cmp
xor
sbb
pusha
inc
in
mov
ljmp
addr16
adc
ret
push
push
inc
pop
inc
movsb
jnp
adc
inc
outsb
clc
inc
and
decl
push
in
shlb
xor
inc
fdivp
add
push
mov
jbe
mov
inc
or
loop
loopne
jmp
add
pop
xor
dec
ficompl
pop
adc
ds
sbb
out
ljmp
mov
js
jb
rcll
and
mov
inc
leave
jecxz
xor
sub
mov
incl
sub
pop
mov
and
in
nop
mov
cld
push
popf
push
leave
mov
dec
push
pop
add
stos
dec
jmp
rorb
sti
fstpl
gs
adc
jl
xchg
test
cwtl
loopne
jg
scas
or
aad
adc
mov
dec
fsubrs
jns
or
lock
rol
xor
sti
popf
subb
bound
inc
add
xchg
testb
fadds
cmp
ljmp
dec
inc
lea
cmp
pop
clc
or
mov
and
pushl
sub
add
add
int3
arpl
roll
ja
ljmp
inc
jb
adc
shlb
addl
lea
pop
cli
jge
and
incl
ljmp
stc
leave
xor
clc
mov
lret
mov
mov
ljmp
adc
add
and
loope
inc
testb
call
push
mov
inc
pop
sti
adc
inc
push
pop
sbb
stos
lcall
push
mov
push
push
lcall
sbb
push
out
or
fisttps
repz
fs
adc
ljmp
push
push
iret
jbe
adc
iret
lock
inc
sub
dec
scas
sbb
sbb
inc
pop
shrb
and
ljmp
ss
cwtl
mov
hlt
xorl
mov
fldl
ja
xchg
lcall
cmp
sbb
nop
and
push
dec
inc
and
adc
mov
inc
shrl
jbe
fndisi(8087
xor
jp
pop
mov
test
insl
mov
inc
incl
cld
and
mov
mov
sbb
cwtl
pusha
adc
xchg
ljmp
lcall
arpl
rolb
add
xchg
aam
das
mov
mov
sbb
push
shrb
loopne
and
jb
shl
sub
lret
jb
dec
sub
add
xchg
mov
ret
and
incl
inc
js
mov
add
lock
jecxz
outsl
sbb
std
aaa
std
fidivrs
xorl
inc
jmp
enter
xor
inc
jmp
and
leave
out
add
xor
ljmp
add
push
sub
pop
or
lea
push
cs
mov
decl
mov
test
dec
loopne
dec
cltd
gs
lods
add
decl
sbb
mov
sbb
nop
ss
push
idivl
xchg
pop
and
shl
test
mov
imull
adc
inc
cmp
jg
inc
jge
daa
push
adc
xor
push
sub
gs
pushl
and
fs
imul
into
fs
aad
dec
test
std
add
mov
in
sbb
inc
push
or
push
gs
out
mov
std
jbe
lds
leave
ss
and
pop
and
shrb
and
shrl
call
push
xchg
cli
loopne
loope
dec
mov
add
xchg
cmpsl
call
pop
leave
add
xchg
add
mov
call
mov
xor
add
cmp
scas
lock
scas
icebp
xor
rolb
pop
lock
fadds
test
adc
pop
mov
and
add
and
pop
cmp
push
std
mov
sbb
adc
dec
inc
inc
pop
push
pop
xor
sub
arpl
jmp
or
sbb
add
cmp
push
mov
lods
add
or
jge
add
dec
pop
decl
lret
xchg
orl
lea
add
cmp
or
add
jg
inc
sbb
test
mov
push
xor
inc
push
add
mov
sti
push
pusha
xchg
adc
bound
mov
cmp
adc
pop
pusha
sbbb
les
inc
fbld
pop
push
cmc
cli
les
mov
sub
and
mov
mov
mov
call
mov
pop
mov
arpl
xor
jnp
pusha
xchg
sbb
mov
jmp
xchg
inc
stos
push
in
js
rcrl
test
std
or
or
dec
mov
inc
ret
mov
xchg
ljmp
stos
fnsave
lea
mov
call
pop
dec
xchg
pusha
sbb
insb
mov
enter
cld
jmp
mov
hlt
lret
sbb
push
add
or
jae
jmp
mov
jmp
xorb
test
dec
nop
cmp
mov
sti
mov
sbb
ljmp
mov
negb
adc
or
rorl
sub
sbb
loop
sbb
decl
in
xor
push
repz
mov
fcoml
mov
jnp
add
sub
pop
icebp
fsts
in
movsb
push
add
mov
loopne
push
pop
and
aaa
dec
stos
xchg
dec
inc
push
cmp
xchg
loope
mov
xchg
mov
mov
cld
mov
xor
push
mov
adc
add
xor
bound
dec
les
adc
call
or
adc
push
data16
scas
clc
pushl
push
subb
dec
lock
cwtl
int3
or
sub
loopne
test
adc
pop
movsl
push
add
incl
js
inc
jl
or
push
or
cmpl
jp
add
mov
pop
jl
jecxz
xor
add
inc
inc
add
adc
inc
shl
dec
dec
data16
call
inc
movsb
test
lret
inc
data16
inc
pop
loopne
enter
jb
xchg
cmp
and
xchg
bound
repnz
ljmp
and
sbb
mov
arpl
test
decl
clc
fisubrl
sub
xor
fidivl
loopne
fisubrs
decl
test
lret
mov
pop
adcl
sbb
adc
mov
or
mov
xor
je
lret
decl
lock
fcoms
pop
ljmp
adc
stc
sbb
sbb
sub
pusha
test
mov
or
orl
enter
loope
lcall
lods
mov
fadds
dec
add
or
xor
xor
shll
mov
pop
push
and
ljmp
mov
cmp
sbb
add
xchg
and
mov
lcall
dec
xchg
mov
sub
mov
mov
ljmp
inc
sub
push
add
xchg
or
inc
test
out
mov
dec
add
test
adc
inc
fldl
pop
js
fs
in
xchg
fisubs
xchg
cwtl
dec
mov
stos
ret
in
in
add
adc
pusha
dec
cli
ja
movb
into
mov
dec
add
adc
js
dec
loopne
pop
mov
push
mov
dec
sub
jmp
pop
add
test
xor
les
test
pop
in
decl
cmc
jge
cltd
or
test
xchg
lock
addb
push
xor
xchg
dec
into
in
test
add
mov
add
jbe
cmc
cmpsb
ljmp
push
test
sub
decl
into
sub
xor
outsl
inc
lcall
rol
cltd
xor
sbbl
mov
test
push
sbb
add
sbb
cwtl
or
jg
xor
cmp
out
dec
xchg
cmp
dec
adc
xchg
rclb
repnz
lods
movb
sbb
push
sti
mov
push
cmc
sub
inc
call
or
mov
call
add
xor
and
stos
mov
sub
ds
arpl
push
add
stos
cmp
add
sbbl
daa
add
dec
incl
or
sahf
insl
add
dec
and
ret
mov
call
bound
sbb
jg
dec
and
and
dec
lret
mov
and
dec
or
pop
enter
decl
push
mov
jecxz
cmp
and
test
pop
dec
inc
test
or
decl
inc
into
pop
push
xlat
pop
push
push
push
mov
adc
mov
lods
outsb
dec
movsl
pop
dec
arpl
dec
popf
add
call
inc
push
cmpsb
adc
subl
cwtl
push
mov
push
inc
rolb
sahf
xchg
push
sbb
or
sbbb
cld
jg
mov
and
and
pop
jle
push
dec
rolb
sub
sbb
jns
out
loope
int3
mov
sbb
push
inc
or
in
fnsave
dec
rcll
add
or
xchg
cmc
inc
add
std
dec
js
incl
or
xchg
adc
orb
mov
lock
movsl
aam
pop
mov
test
ljmp
mov
and
sub
sub
mov
dec
xchg
mov
add
and
pop
cltd
popf
pop
fsts
lahf
adc
jl
mov
std
mov
mov
mov
cli
push
stos
cwtl
mov
adc
sbb
lods
xchg
cmp
add
cltd
call
mov
ds
inc
dec
ljmp
in
pop
adc
push
or
cmp
sub
es
add
dec
icebp
mov
jno
mov
cmp
aam
mov
das
and
xchg
icebp
sub
loopne
lods
mov
fwait
cmpsb
incl
je
test
jns
dec
movsl
mov
mov
mov
rcll
jbe
cld
das
adc
into
inc
test
mov
dec
call
lock
test
adc
pop
push
fadds
pop
dec
or
insb
xchg
mov
loope
fisttpll
inc
fisubrl
push
push
cmp
js
sbb
add
popa
jl
mov
sbb
inc
cmp
adc
decl
push
add
xchg
and
push
in
aad
mov
dec
adc
js
jle
xchg
cltd
push
rclb
lcall
cmpb
arpl
and
add
or
mov
test
push
add
pop
jg
decl
mov
sub
push
pop
js
loopne
pushf
inc
pop
xchg
incl
dec
iret
cmc
jl
sets
xor
adc
iret
stc
inc
mov
fmul
rcr
fs
push
cmp
mov
jecxz
filds
dec
stos
sti
xor
fcom
sub
adc
dec
fwait
mov
cs
ljmp
sbbb
inc
fs
loopne
cld
push
pushl
leave
mov
shlb
push
inc
loopne
mov
and
fisubl
jg
push
std
mov
sahf
ds
mov
fbld
cmp
orl
dec
ret
subl
push
and
lcall
push
jmp
xor
push
push
lcall
incl
lret
push
sub
jne
mov
add
enter
lret
xor
and
push
xchg
cli
aaa
lcall
pop
sahf
gs
ret
and
call
pop
inc
cmp
adc
sub
add
xlat
cld
dec
shlb
add
gs
loop
pusha
addr16
inc
pop
xchg
jg
pop
adc
pushw
out
fsubr
jb
pusha
rorb
push
pushl
add
js
insb
fimull
insb
lcall
pop
shll
sub
sub
inc
lds
jns
pop
and
test
lock
imul
sub
rcr
or
int3
jno
decl
data16
dec
fsubrl
outsb
add
inc
adc
fcomip
test
loopne
adc
push
mov
test
jb
fisttpll
scas
mov
add
or
add
add
cmp
or
and
nop
lcall
cli
or
and
or
sarl
jg
cmpsb
ljmp
stos
mov
jmp
cmp
xor
jg
pop
jns
ss
or
sbb
mov
sbb
test
push
adc
push
int
mov
sbbl
aad
and
out
jecxz
inc
cmp
in
andl
sub
lcall
and
aaa
xchg
movsb
adc
mov
add
mov
jmp
fs
and
dec
and
mov
sarl
push
mov
in
bswap
xchg
push
and
mov
loopne
mov
lock
gs
loopne
outsb
incl
pushw
arpl
cmp
test
inc
shrb
push
insl
sbb
mov
mov
and
jg
dec
xchg
pop
sub
adc
add
mov
test
adc
push
fisttps
das
shrb
jb
pushf
cmp
bound
jns
pusha
clc
lcall
sbb
inc
pop
pop
nop
push
insb
gs
jmp
pusha
dec
pop
out
sub
push
mov
test
out
inc
pop
jb
pushl
daa
ret
loopne
out
xor
pop
insb
imul
out
loopne
xchg
lock
decl
jg
or
int
scas
cs
sub
fbld
xor
and
cmp
pushf
xor
cmp
ud0
cmp
adc
cmp
int3
cli
jb
cli
sbb
push
push
push
mov
lcall
inc
jbe
mov
popa
sbb
add
rclb
add
jp
shr
aas
daa
je
jge
data16
mov
shlb
mov
add
ljmp
int3
cmp
push
cmp
xor
idivl
decl
in
lidtl
and
adc
or
adc
sub
sbb
sbb
hlt
aad
icebp
mov
cmp
sub
and
lcall
push
gs
push
nop
mov
decl
test
xor
clc
jg
dec
and
arpl
out
out
cld
movsl
cmp
out
push
push
inc
xlat
in
jo
push
int3
fildll
out
pushl
push
dec
pop
pop
insl
mov
loop
push
push
lahf
pop
mov
add
dec
cwtl
outsl
jbe
test
incl
cmpsl
or
push
test
jae
cli
in
incl
push
xchg
jne
adcl
orb
mov
sub
fs
call
mov
cltd
inc
gs
cwtl
inc
push
test
mov
mov
jbe
fisubs
inc
mov
xor
les
push
or
icebp
rolb
daa
dec
hlt
clc
sub
jmp
inc
add
push
rcrb
js
lea
je
mov
dec
or
aam
lock
test
adc
mov
decl
lock
pusha
mov
sub
push
push
inc
push
or
mov
sbb
insl
pop
mov
jnp
das
fbstp
mov
in
loopne
push
and
nop
icebp
fistpll
mov
pushl
and
xor
int3
stc
xor
xchg
ret
fistps
aam
icebp
mov
jmp
mov
jp
out
lcall
push
testl
icebp
add
std
call
inc
inc
xchg
aas
mov
and
ds
sbb
sti
inc
cmp
ds
add
jl
paddsb
cld
jns
inc
fidivl
jge
cli
push
out
inc
inc
inc
dec
mov
enter
lret
fldt
xor
fyl2x
inc
pop
decl
lret
fwait
insl
pslld
and
jns
fwait
xchg
push
and
jg
call
mov
sbb
arpl
adc
inc
sbb
pop
add
jbe
and
clc
call
jo
adc
push
inc
cmp
inc
push
xor
xchg
fst
xchg
adc
popa
and
inc
or
or
loope
inc
add
cltd
loopne
add
mov
lcall
xor
test
push
shlb
aad
dec
lcall
jne
adc
and
test
mov
test
dec
loopne
movsbl
mov
or
adc
xorb
scas
mov
ds
aas
cld
dec
repz
cli
pushl
or
add
adc
push
add
mov
or
lock
pop
repnz
loop
inc
xchg
xchg
inc
lcall
dec
dec
add
adc
call
jne
adc
test
rorb
dec
hlt
push
push
mov
mov
xlat
cmpsb
xor
mov
sar
btrl
and
call
push
inc
cmp
dec
and
shll
icebp
mov
dec
incl
ret
and
mov
or
pop
pop
adc
incl
pop
insb
cmc
push
inc
pop
xchg
pop
es
pop
xchg
jno
pop
mov
push
pop
pop
pop
mov
fldenv
lret
sbb
lret
ss
lcall
pop
imul
xchg
adc
jl
int
sbb
xlat
bound
mov
mov
push
jg
pop
xchg
arpl
lods
mov
jp
xorb
jbe
je
inc
push
sbb
jmp
jg
fcoml
mov
popf
cmp
rcrb
adc
mov
sub
std
adc
pop
or
ficoms
mov
sbb
lcall
mov
sub
adcl
inc
mov
sub
cwtl
and
fisubl
mov
add
inc
xchg
in
dec
fimull
movsl
xchg
push
ljmp
sbbl
add
inc
sub
xor
icebp
mov
pop
cmc
je
jmp
push
je
push
lods
or
dec
stos
in
sub
pushl
push
inc
out
je
adc
push
daa
cld
and
add
in
push
movl
test
pop
incl
adc
cmp
andl
addb
and
ljmp
or
mov
repnz
inc
lock
mov
inc
cmp
mov
test
add
mov
pushf
orb
fs
jmp
inc
xor
repnz
add
push
cmp
call
cmp
dec
les
mov
xchg
pop
xchg
shlb
ret
mov
sub
cld
clc
lret
lret
and
mov
int
xor
sbb
cmp
mov
add
lahf
sbb
jg
dec
and
push
lret
test
int3
mov
xor
stos
fsubrs
fstl
lock
movsb
mov
xchg
call
lea
fisttpl
push
loopne
push
mov
loop
stc
mov
add
xor
sbb
add
pop
test
fcmovnbe
arpl
pop
loopne
outsb
push
fstpt
mov
call
sbb
lods
mov
jnp
mov
sub
hlt
dec
ret
lahf
adc
inc
cmovns
mov
test
mov
push
test
int
ljmp
inc
xchg
ret
dec
jecxz
movsb
dec
pop
xchg
je
jno
jno
pop
dec
ds
lods
fwait
rorb
push
loope
ljmp
inc
adc
fs
sub
dec
mov
xchg
fs
jmp
loope
inc
or
or
divb
and
sbb
scas
lcall
adc
hlt
xchg
mov
ljmp
adc
push
adc
pusha
sub
pop
popf
sub
add
call
adc
ljmp
lods
enter
bound
out
xchg
movsb
lds
scas
push
mov
orl
sub
or
adc
sub
cmp
and
push
cltd
sar
and
andps
pop
push
or
fists
fadds
xchg
pop
nop
int3
test
push
inc
inc
pop
call
mov
ret
adc
loop
mov
shrl
mov
adc
pusha
sub
mov
or
clc
pop
sub
movsl
fcom
push
and
ret
xor
nop
ret
mov
inc
scas
addb
jmp
lock
call
lock
cmp
adc
mov
push
sub
and
xor
push
xor
insb
push
lcall
xchg
xor
sbb
pop
ss
cmp
mov
pop
dec
dec
rclb
enter
loopne
out
mov
in
sbb
lea
hlt
sbb
jle
inc
inc
lcall
mov
xorl
into
push
fsubs
mov
in
and
push
test
mov
daa
outsb
loope
subl
incl
pop
pusha
fiadds
pop
jl
or
popf
add
lcall
mov
loopne
push
xchg
mov
rclb
fwait
out
rorb
decl
fidivl
call
inc
fisubrs
lods
arpl
push
sar
insl
rorb
inc
adc
dec
test
pop
add
leave
outsl
adc
fwait
int3
test
xchg
popf
adc
ja
sub
loopne
out
out
adc
mov
decl
mov
fcoms
test
inc
sub
dec
or
mov
adc
loope
int3
fstps
jge
and
jge
mov
dec
push
add
dec
push
sbb
mov
sti
nop
push
cld
mov
or
shrb
sub
sub
andl
cmp
sbb
or
or
mov
dec
push
inc
xchg
or
and
cmp
or
nop
sbb
js
sbb
lcall
arpl
push
popf
adc
ja
hlt
daa
adc
add
mov
daa
fisubs
scas
lret
cli
or
mov
ljmp
mov
jecxz
in
dec
mov
outsb
mov
or
in
pushl
dec
cmp
fcoms
insb
je
xchg
xlat
ds
mov
movsb
or
xchg
imul
inc
mulb
adc
test
std
ljmp
es
repnz
sar
sbb
test
mov
xor
sbb
jl
cmp
call
scas
jl
pushw
clc
xchg
mov
rolb
enter
fimuls
loopne
repz
das
pop
push
sbb
pusha
pop
pop
cwtl
inc
fldenv
scas
call
sub
inc
outsb
xchg
test
pop
mov
xor
dec
lea
and
and
out
adc
mov
rcr
pop
cmp
cmp
inc
es
fcomip
call
mov
je
lds
xchg
inc
mov
cmp
int3
xlat
adc
loope
testb
push
jne
lcall
adc
add
cld
rorb
ret
adc
orb
pushl
adc
sub
mov
add
inc
pop
andb
popa
or
fadd
adc
push
push
sbb
sub
mov
int
fidivrs
es
lcall
dec
lock
out
iret
pop
dec
nop
xchg
pushf
ret
xor
add
and
fidivl
stc
icebp
movsl
jle
in
std
clc
xor
cld
xchg
bound
mov
loopne
imul
adc
push
pop
lock
add
add
pop
mov
movsl
inc
imul
icebp
push
push
sub
pop
sbb
fstl
sub
and
pop
add
or
cmpsb
movb
dec
xchg
arpl
fcomip
jg
cs
leave
push
xchg
xor
int3
cld
outsb
cld
push
lds
mov
cwtl
xlat
xlat
push
hlt
int3
inc
sub
push
dec
ljmp
adc
int
enter
sbb
adc
repz
inc
aaa
ret
ds
add
dec
call
and
or
adc
or
lcall
dec
dec
push
or
xchg
xchg
test
in
xchg
cmp
jg
inc
in
test
cmp
out
mov
sbb
xchg
rorb
jge
in
xor
mov
add
mov
mov
mov
or
scas
outsb
push
flds
add
mov
rolb
pop
add
fldenv
or
mov
mov
cmp
rolb
jmp
mov
mov
ret
dec
inc
adc
neg
repnz
or
jecxz
adc
decl
scas
inc
jecxz
and
push
and
jecxz
addb
outsb
mov
push
leave
cmpb
add
loopne
add
cmpsb
mov
dec
lcall
dec
and
or
addb
arpl
fisttpl
ja
jg
inc
mov
push
clc
rcll
add
test
cmc
mov
test
jg
decl
inc
push
fs
pop
test
mov
movsl
sbb
xchg
pop
sarb
push
mov
push
inc
push
pusha
sbb
push
iret
add
push
or
jo
inc
pop
pop
decl
pusha
lock
loopne
lret
lods
xchg
mov
ret
dec
push
jno
mov
cmp
cmp
sbb
psubsb
popa
pop
pushl
push
add
in
leave
fsts
fcoms
lret
rorl
incl
sub
add
sub
int
xchg
cmp
inc
or
fmuls
mov
mov
add
clc
rcrb
pushf
sub
popf
ror
and
push
rcrl
push
outsl
xor
popa
dec
pop
inc
loope
jno
xchg
xchg
sbb
in
popa
fisttpll
shl
je
xlat
stc
dec
cmp
dec
arpl
ljmp
xchg
loop
in
fmull
pop
or
lock
ds
xchg
push
data16
mov
data16
mov
fbstp
cltd
movsb
mov
idiv
xchg
mov
imul
pusha
shrl
push
mov
sub
sub
ret
rolb
add
adc
jmp
inc
push
xor
ljmp
in
xorl
mov
inc
sub
mov
cmp
out
decl
inc
adc
add
subl
std
add
scas
cmpsl
mov
call
cmpsl
jge
dec
jl
or
xchg
pop
fstps
daa
add
mov
lahf
add
push
std
pushl
inc
mov
push
arpl
fstpl
add
sar
fwait
arpl
push
jo
pop
push
inc
dec
push
imul
push
test
call
push
xchg
push
adc
test
push
int3
adc
mov
test
shlb
pop
sbb
push
xchg
and
or
in
adc
push
push
sub
mov
lret
sub
sbb
lock
fcmovnu
rolb
int
cltd
adc
add
iret
scas
andb
popf
inc
inc
mov
inc
add
sbb
pop
fstpl
ficomps
lock
call
xor
xor
test
lods
mov
cmp
lods
sbb
into
adcl
and
dec
push
mov
sbb
jl
scas
subl
push
das
mov
ficomps
dec
icebp
stos
aaa
cld
pusha
sbb
lods
into
stos
fnstenv
sub
filds
push
jb
dec
sbbb
sahf
scas
and
push
inc
adc
faddl
loope
sbb
fiadds
lock
aam
lret
fadd
add
fidivs
fidivs
nop
daa
cmp
mov
mov
xchg
inc
int3
xlat
sub
rolb
stos
punpckhbw
pop
in
xchg
fldl
jecxz
cli
sub
sub
popf
fists
lds
and
fs
ficomps
std
mov
push
dec
sub
inc
movsb
pusha
jl
adc
cmp
dec
mov
sbbb
lea
fldt
imul
imul
or
sar
or
mov
cld
dec
nop
xchg
mov
inc
push
and
cmp
add
jp
js
push
fsubr
add
mov
push
mov
push
push
rcr
mov
pop
fwait
mov
fwait
cli
jg
mov
loope
test
cmp
outsb
test
jecxz
sub
aam
sub
bound
out
lcall
rcrl
sarl
cmp
mov
bound
dec
and
dec
lock
jmp
cmpsb
cmp
enter
out
push
mov
or
jg
jbe
mov
pop
rcr
shl
xchg
pushf
lcall
dec
xchg
pushf
outsb
stos
cmpsb
cs
adc
dec
sar
in
mov
movsb
cmp
jecxz
lods
dec
loopne
pushl
mov
mov
outsb
shr
sub
cs
mov
jmp
dec
scas
push
int3
inc
jmp
shr
mov
outsb
scas
ljmp
adc
loopne
xchg
lea
xor
les
dec
inc
sbb
call
and
ret
pop
cmp
xor
js
mov
push
push
mov
mov
xor
xchg
call
inc
adc
addl
xor
int3
xor
mov
loope
mov
fcoml
pop
and
shlb
ljmp
int3
inc
shl
mov
xor
movsb
adc
xchg
js
insl
jl
or
mov
das
clc
push
push
scas
adc
incb
adc
stos
sub
lods
lret
fisubrs
lock
adc
adc
les
jg
add
jbe
sbb
mov
add
sbb
pop
mulb
decl
and
mulb
aad
sbb
lods
call
cli
push
mov
enter
cwtl
movsb
and
out
jg
decl
push
mov
in
lcall
es
inc
pop
sbb
lcall
sbb
inc
jb
cmpsb
push
pop
xor
addr16
movsl
inc
je
std
mov
adc
ret
fcomip
lcall
enter
jno
or
xchg
sbbl
sbb
mov
inc
outsl
cmp
push
dec
and
rolb
push
add
outsb
add
adc
mov
jb
and
add
outsl
adc
scas
ss
or
sub
push
insl
mov
fimuls
ja
mov
iret
fwait
sbb
arpl
fs
lcall
lret
jne
and
pop
ror
sub
iret
aam
add
into
dec
movb
xchg
pop
call
call
insb
pop
outsb
push
pop
adc
orb
jo
push
pop
nop
in
sub
jp
in
ljmp
xchg
ret
sub
mov
into
in
add
subb
pushf
sub
loope
add
lcall
enter
pop
das
icebp
pop
orb
xor
ljmp
cli
dec
fcomps
and
jno
aad
push
or
lcall
add
lret
or
sbb
inc
add
push
inc
rclb
pop
add
call
pop
daa
add
pop
popa
cmp
mov
flds
jno
cld
les
pop
lahf
inc
fs
xchg
pop
out
fcomip
mov
ffreep
sbb
mov
mov
mov
rclb
jno
inc
mov
pop
inc
ljmp
out
pushl
mov
outsl
outsl
push
or
adc
adc
cmp
call
and
add
or
scas
ss
neg
movsb
mov
mov
add
jbe
jmp
cmp
sbb
shrb
scas
test
pop
xchg
daa
jb
jecxz
sub
adc
cmp
pop
dec
cwtl
xchg
fildll
out
dec
mov
xor
xchg
push
push
mov
incl
add
mov
xorl
xlat
xorb
adc
hlt
ljmp
mov
add
mov
jg
inc
xchg
es
arpl
rclb
clc
and
fdivl
xor
int3
pop
adc
jge
sbb
inc
and
xchg
adcb
imul
pop
dec
inc
push
clc
add
shlb
ja
gs
imul
push
jmp
mov
inc
pushf
xor
inc
test
fistpll
pop
js
sbb
or
cmpl
call
add
cmpsb
mov
dec
or
mov
fldenv
lock
leave
xchg
dec
dec
incl
mov
popf
add
xchg
mov
adc
inc
adc
loopne
call
in
lock
fwait
mov
pushf
mov
mov
loop
jmp
out
popa
cmpsl
rorl
inc
sbb
add
sub
mov
sar
adc
insb
enter
and
aas
outsl
cli
cli
inc
adc
add
cmpsb
sti
xchg
sub
idiv
adc
inc
mov
inc
push
movsl
jp
push
aaa
or
or
mov
aad
decl
lods
cmpsl
cmp
cwtl
stos
outsl
test
fwait
outsl
sbb
js
mov
pushl
add
stc
push
int3
dec
sarb
and
mov
xchg
test
pop
mov
mov
ja
xchg
pop
push
jg
add
push
cs
dec
mov
jmp
test
outsl
and
lcall
into
pop
and
incl
popf
cltd
loop
cmp
mov
movsl
push
shll
jle
mov
mov
hlt
cld
mov
and
xchg
dec
bound
cmp
mov
jns
mov
xchg
enter
cmp
push
jne
push
leave
in
sub
fidivrl
xchg
hlt
push
xchg
jmp
xchg
test
push
cwtl
stc
sbb
outsl
push
ds
cmp
mov
jne
mov
pop
and
mov
sbb
xlat
decl
cmp
cli
loop
jb
das
dec
xchg
xor
scas
std
mov
and
sar
pushl
add
mov
adc
mov
jp
inc
inc
stos
sub
sahf
pop
icebp
decl
mov
pop
add
jo
loopne
fwait
lds
push
sbb
mov
jle
xlat
mov
sbb
in
aaa
jecxz
inc
imul
lcall
jg
push
jg
ds
sub
jbe
mov
push
pop
fdivrs
jp
mov
mov
push
cmpl
repnz
rcl
mov
sub
call
cmovnp
dec
mov
xor
dec
add
xor
push
sub
dec
std
or
sbb
mov
pop
cwtl
push
data16
adc
adcb
xor
push
scas
dec
arpl
out
out
clc
jmp
xor
jge
jecxz
lret
push
flds
add
adcl
mov
mov
ja
push
push
loopne
inc
inc
sbb
es
movsb
test
bound
repz
push
and
xchg
and
outsl
xchg
lods
call
mov
and
sbb
pop
add
inc
fdivl
push
dec
pop
mov
sbb
sub
push
mov
push
movsl
dec
jno
jae
aam
add
inc
aaa
push
clc
call
je
push
mov
fprem1
or
adc
dec
ret
and
mov
movsb
xchg
jmp
repnz
inc
mov
and
push
icebp
fildl
dec
pop
roll
dec
xchg
cld
sbb
decl
leave
xchg
and
cmp
jb
add
cmp
decl
fimull
cmpsl
pop
mov
std
sbb
rolb
mov
ljmp
mov
movl
addb
fisttps
nop
xchg
sub
fldenv
js
js
push
aad
ja
out
and
fdivs
sub
inc
mov
iret
sahf
sbb
mov
icebp
pop
inc
cmp
or
add
orl
or
popl
fsub
std
in
das
cli
roll
stos
inc
es
inc
xchg
push
pop
cmp
pop
xor
orb
sub
add
jne
ret
ljmp
fs
movsb
jp
test
gs
pop
adc
loop
daa
int3
jae
cmpsl
push
mov
cmp
decl
jl
and
stos
xchg
jmp
pushl
xor
add
stos
test
sub
call
clc
call
mov
cmpsb
fnsave
or
adc
inc
pushl
aas
fcoms
xchg
dec
adc
das
xchg
push
push
test
jmp
add
dec
mov
dec
lret
mov
jge
push
cmpsl
stos
stos
lret
ljmp
xor
adc
es
lcall
stos
decb
loopne
enter
push
or
popa
addl
adc
fldenv
push
in
xor
sub
or
add
or
lods
fcmovnu
push
dec
mov
int3
loopne
ljmp
sub
iret
js
int3
pop
loop
xor
jno
push
ja
lds
add
test
dec
mov
ss
cmp
lods
push
lret
add
push
lods
and
test
mov
sbb
stos
and
or
dec
bound
cld
dec
inc
ljmp
mov
dec
out
or
aaa
in
xchg
adc
fdivs
incl
xorl
push
xchg
inc
and
sbb
das
aam
incl
jecxz
xchg
xchg
adc
push
stos
dec
xor
mov
lret
push
lahf
lcall
adc
mov
cmpsl
dec
lahf
jo
sub
leave
add
sarb
pop
in
mov
mov
jmp
sub
mov
mov
add
ljmp
sub
ss
hlt
and
andb
stos
or
loope
dec
xchg
sub
push
mov
mov
adc
mov
mov
out
pop
mov
mov
push
orl
sub
pop
nop
push
pop
pushl
mov
mov
or
mov
jg
in
testl
lods
loopne
push
adc
fcmovnbe
lret
cld
repnz
xor
pusha
or
in
xlat
lods
std
loop
xor
mov
aam
push
pop
stc
scas
decl
fdivrs
int3
std
adc
and
push
mov
sbb
cld
inc
cmp
xchg
xor
xor
jle
loopne
xchg
cmp
incl
call
mov
inc
lock
and
fnstsw
ss
sbb
enter
cltd
jo
orb
call
add
add
jecxz
jbe
dec
add
xor
jmp
xchg
lods
in
mov
jno
push
sbb
mov
leave
mov
fwait
fdivl
aaa
add
pushl
cmp
fiadds
sub
out
sub
ljmp
mov
fs
sub
jo
cmp
dec
mov
mov
movsb
test
sbb
push
jmp
inc
cmp
insl
ljmp
inc
xchg
shrb
ret
cmpsl
xchg
inc
faddp
jo
je
scas
jp
cmp
cld
jmp
pop
adcb
das
jns
mov
push
push
jp
jmp
dec
in
cmp
or
gs
adc
xor
mov
ja
adc
mov
cmp
mov
lcall
test
sbb
add
adc
incl
adc
out
negb
or
mov
adc
call
sbb
jl
push
or
sub
cmp
mov
xchg
inc
or
cmp
adc
call
mov
rclb
mov
push
mov
adc
decl
and
mov
movsl
daa
xor
cmpsb
inc
sub
push
sub
xor
xchg
cltd
xorb
rorb
jo
fistpl
aad
cmp
out
addb
dec
mov
mov
pusha
cwtl
fcompl
mov
or
jmp
imul
inc
aad
mov
jg
or
cmpb
ret
or
sar
stos
and
ljmp
lock
es
or
rol
bound
shlb
sub
xchg
aaa
dec
jmp
ret
clc
jmp
cmp
dec
addr16
mov
cmpsb
mov
pop
sbb
in
push
fsubs
mov
sub
jge
in
cmp
repnz
outsb
addl
dec
mov
jne
pop
es
incb
or
inc
add
dec
lock
lds
mov
mov
cmp
call
pop
xchg
mov
mov
pop
fs
dec
gs
pop
call
shll
or
xchg
andl
aam
lcall
cmp
in
and
lret
adc
imul
mov
incl
ss
outsb
push
xchg
jnp
sub
sub
xchg
cmpsb
cmpsb
sahf
mov
push
std
pushl
cwtl
cmpsl
adc
xchg
xchg
mov
mov
push
lods
and
mov
and
mov
and
decl
push
sub
scas
pop
test
pop
dec
stc
mov
inc
ljmp
pop
sbb
push
inc
xor
sub
lret
ds
pop
sarb
lea
jmp
push
rclb
mov
inc
int3
mulb
repz
out
xor
clc
jns,pt
cmp
mov
inc
cmp
lret
or
inc
scas
push
mov
mov
aad
loopne
mov
insl
push
enter
push
cmp
inc
push
ss
pushl
lock
cmp
in
or
cld
shl
jge
or
add
lcall
push
mov
adc
ret
scas
jnp
sub
nop
add
pusha
push
jge
jnp
push
lea
test
push
je
inc
ljmp
jno
cmp
xchg
pop
adc
lock
jbe
aad
xchg
std
xor
or
mov
movsl
push
adc
jmp
movsl
dec
mov
mov
adc
cmpsb
icebp
pop
jmp
icebp
dec
mov
aaa
shrb
lds
ret
mov
mov
xchg
adc
in
and
dec
clc
push
fiaddl
xchg
orb
push
or
cmp
and
dec
fsubl
sbb
rorb
and
sub
inc
push
mov
call
add
cld
in
nop
test
push
sahf
xor
mov
cmp
sahf
sub
int
ret
jns
out
repnz
pushf
add
nop
pop
cli
jmp
inc
mov
push
inc
loop
or
sub
or
push
xor
lret
data16
call
stos
xchg
mov
lds
or
mov
mov
pop
jecxz,pt
mov
sub
call
fildl
cmp
stos
xlat
mov
fistps
ss
sbb
mov
sbb
lock
inc
mov
sub
pusha
mov
inc
xor
decl
jne
cmp
xchg
repnz
lods
push
inc
xchg
mov
std
scas
xchg
ficoms
gs
mov
sub
lock
call
lock
xchg
add
cmpsb
xchg
add
ss
jne
mov
test
call
xchg
enter
arpl
fs
scas
xlat
cmpsb
aam
mov
inc
jo
dec
int3
scas
fcomip
jg
aam
inc
xor
cmpsl
pop
shrb
add
bound
mov
push
ss
xor
dec
xchg
inc
xor
sub
add
out
xchg
sbb
sahf
test
add
lret
cs
dec
pop
in
mov
popa
mov
fcmovnu
or
pushl
sub
add
dec
es
das
jae
inc
push
inc
int3
ljmp
cs
lock
test
stos
shlb
add
or
js
decl
mov
adc
xchg
xchg
pop
sub
in
into
out
out
scas
and
decl
and
xor
orl
stos
rcrb
pusha
or
or
lcall
cmpsb
mov
rcll
inc
sub
in
or
inc
push
faddp
imul
repnz
jg
hlt
add
gs
test
inc
pop
insl
test
or
mov
push
fmuls
mov
je
out
dec
push
jp
inc
dec
inc
fadds
mov
lret
test
add
rorb
sub
jmp
dec
mov
ret
push
or
mov
incl
sub
dec
nop
lret
sub
and
call
sub
and
ljmp
sub
xchg
dec
and
mov
mov
decb
pop
fildl
mov
test
adc
js
xor
pop
imul
and
and
push
jg
inc
std
cmp
and
and
and
push
push
xchg
data16
dec
and
cld
jg
ljmp
jmp
xchg
daa
mov
inc
push
pop
rcrb
jmp
lret
into
add
pusha
jbe
das
add
jl
jmp
pop
sub
call
jl
shlb
and
mov
jle
scas
pushf
js
or
sbb
in
int3
incl
jo
jo
mov
sub
sbb
orl
sbb
mov
sbb
lock
push
lods
cmpsb
inc
add
cmove
call
hlt
popa
inc
inc
insb
bt
adc
lret
pop
dec
push
adc
push
out
inc
sub
adc
pop
inc
mov
cld
hlt
rcrb
out
inc
xchg
test
pushl
dec
xor
cli
loopne
shll
mov
dec
pop
call
nop
in
mov
int3
push
ret
mov
jbe
out
js
pushl
rol
std
cld
data16
jl
or
test
sbb
and
outsl
push
add
clc
das
push
add
ss
icebp
addb
or
call
add
add
add
incl
cld
icebp
cs
cmp
loop
outsb
and
inc
add
xor
jno
sub
decl
push
or
dec
outsb
lock
test
leavew
xchg
jle
into
lock
ljmp
adc
inc
adc
add
cwtl
or
cli
decl
out
mov
cltd
pop
repnz
decl
shr
ss
mov
shr
or
mov
js
jg
jecxz
mov
jmp
jle
adc
add
or
add
sub
push
stos
sub
imul
cmpsb
pop
in
push
adc
add
dec
adc
mov
sub
add
mov
jg
add
loopne
xchg
int
fsubs
lods
hlt
lcall
mov
repnz
adc
insl
mov
push
push
imul
xor
lcall
adc
psrlq
xor
popf
xchg
int
enter
dec
dec
shr
lret
push
aam
sbb
in
add
cli
xchg
andb
andb
bound
push
sbb
jmp
int3
mov
and
sbb
and
mov
or
and
adc
sub
clc
call
call
sub
push
das
sti
mov
jg
call
push
addl
inc
arpl
rolb
sarl
add
push
imul
js
add
decl
add
sub
jo
js
ret
or
and
ljmp
jae
mov
mov
pop
loopne
sbb
and
push
aas
gs
es
ljmp
arpl
into
xor
lret
in
stos
jecxz
iret
in
test
lcall
push
stos
hlt
stc
add
mov
out
in
cmpsb
repnz
jg
es
pop
jno
mov
mov
mov
pusha
int
or
pushl
aaa
xchg
insb
dec
adc
repnz
mov
in
out
repnz
incl
int
xor
rolb
lcall
mov
das
test
stos
dec
xchg
push
jmp
cmp
xchg
inc
out
insb
call
push
ljmp
std
ljmp
imul
sub
js
int3
decl
popa
xchg
icebp
inc
and
push
and
icebp
ljmp
aaa
adc
push
xorl
jmp
dec
sbb
and
xchg
nop
push
push
inc
jo
xor
push
mov
addb
hlt
cmp
xchg
push
aas
mov
fnsave
pop
ja
xchg
ret
dec
mov
ljmp
add
sbb
pop
in
xchg
stos
mov
loope
jae
xchg
decl
or
aam
mov
adc
mov
aas
lods
imul
mov
in
add
call
sbb
mov
jecxz
outsl
xor
call
and
punpckldq
push
insl
pshufw
sbb
pushl
dec
adc
insb
lods
sub
cvtpd2ps
sub
stos
sbb
clc
rolb
es
xchg
inc
and
adc
test
mulb
movlps
outsb
mov
adc
bound
out
mov
or
adc
push
add
fldt
mov
xor
fwait
imulb
cmp
add
dec
lods
cwtl
fcmovnb
dec
fmulp
dec
fdivr
pop
in
fbld
fimull
dec
and
push
repz
call
cld
ja
imul
mov
in
add
adc
xor
inc
mov
cmp
push
mov
insb
shll
pop
das
mov
inc
mov
push
cwtl
insb
notl
jmp
icebp
sbb
and
cmp
adc
and
adc
incl
jo
push
mov
cwtl
xchg
pop
and
rcr
out
mov
jmp
fildl
repnz
sbb
mov
pushl
popf
enter
dec
sahf
xchg
sub
fiadds
add
scas
push
and
sub
inc
cmp
ds
je
and
iret
jmp
push
inc
mov
or
inc
mov
mov
je
lcall
inc
pushf
push
nop
stos
dec
jne
or
repz
ljmp
ret
shlb
jmp
fisubrl
xchg
fisttpl
daa
cli
mov
test
or
xchg
lcall
enter
lea
and
insl
pushf
mov
push
cld
inc
in
lds
xor
and
and
sbb
xor
icebp
mov
jge
aaa
mov
pop
add
lock
out
bound
cmpl
incl
mov
fcoms
dec
xor
mov
jmp
adc
xor
mov
push
xchg
jmp
mov
cwtl
push
icebp
mov
rep
xor
mov
mov
lret
daa
scas
ret
inc
out
mov
or
add
mov
jmp
ret
mov
subb
sub
icebp
incl
inc
addr16
cmc
mov
add
add
lea
cmpsb
mov
in
pop
dec
mov
add
incl
popa
fsts
ja
mov
mulb
mov
pop
test
or
cmp
and
jmp
xchg
lahf
xor
dec
xchg
xchg
jl
ret
test
les
mov
mov
rcl
xlat
inc
sbb
dec
push
jns
daa
popa
ljmp
sbb
and
jno
ljmp
sub
adc
dec
sbb
adc
lods
incl
jp
jns
cmp
lcall
lahf
cltd
insb
add
loope
test
fcomip
clc
push
inc
pop
insl
fldcw
outsl
lock
xor
dec
mov
lret
mov
cmp
pop
adc
jg
lods
jo
mov
jle
or
aaa
ss
popa
faddl
mov
pop
mov
incl
xor
mov
inc
dec
sbb
mov
popa
aas
mov
xor
mov
cmpsb
push
clc
mov
xor
push
test
inc
data16
adc
clc
notb
add
xor
aaa
mov
popa
aam
dec
lcall
jp
fbld
dec
cmp
sub
or
xor
fistl
sub
leave
mov
mov
xchg
imul
jns
push
bound
ljmp
mov
sbb
adc
push
sbb
jle
push
cmpl
add
jo
push
aad
ja
ret
pop
fcompl
mov
scas
mov
jmp
xchg
data16
jmp
push
and
adc
cmpb
pop
and
cmp
mov
pushl
push
mov
sbb
sahf
in
jle
das
addb
out
pop
shrb
call
mov
pop
out
out
pop
cld
cmpsl
xchg
xchg
jmp
test
mov
roll
adc
arpl
arpl
xor
nop
mov
in
test
adc
xchg
repnz
pop
idiv
fldt
jb
clc
mov
push
hlt
pusha
mov
lods
jb
or
incb
xor
sub
mov
xor
push
mov
push
xchg
shrb
mov
stos
cmc
or
insl
insb
hlt
jmp
push
push
sar
dec
sbb
js
ficoml
mov
call
push
xor
mov
push
cmp
aaa
fcoms
jl
das
mov
decl
fisttpl
xorl
push
mov
mov
push
movl
jle
add
nop
lock
sub
fmul
lcall
sub
testb
mov
add
in
out
cltd
pop
lret
jg
sub
pop
js
jp
mov
xorb
adc
incl
sbb
flds
mov
xor
mov
int
hlt
xor
and
sar
sbb
dec
inc
dec
inc
fsubrs
or
pushl
test
out
inc
nop
sbb
inc
jne
adc
out
ljmp
push
data16
xchg
bnd
imul
and
cld
mov
lods
ret
rolb
insb
push
pushl
hlt
ret
jl
es
pop
jmp
stos
add
sub
ret
lds
cmp
jns
ret
andl
imulb
xor
add
lds
lds
fwait
mov
mov
push
outsb
adc
add
push
jne
nop
clc
sbb
add
gs
cmp
femms
jg
call
jbe
mov
int
mov
xor
out
fisubrs
fcomip
mov
add
mov
rclb
inc
mov
cmp
out
in
or
mov
popa
arpl
ret
daa
adc
sub
or
cmp
pop
lea
ljmp
aad
add
mov
rclb
add
lea
push
lcall
out
outsb
mov
ret
add
add
dec
sub
cld
pushl
sti
add
rolb
lock
inc
mov
inc
adcl
jg
gs
sub
pop
fs
data16
push
lcall
popa
incl
jbe
lods
pop
mov
push
sbb
jmp
clc
cld
test
xor
dec
and
insl
incl
pusha
pop
add
sbb
or
push
test
jae
xlat
scas
push
jl
adc
sub
jmp
and
in
xchg
pop
dec
and
bound
mov
shll
adc
fnsave
loopne
addl
pop
jo
lds
inc
lcall
mov
out
or
shrl
cmp
lds
decl
jge,pn
jne
aad
pop
mov
insl
fidivl
ljmp
insl
loopne
jae
das
push
cmp
jo
rorb
mov
rcl
cmpsl
out
inc
cs
ja
ljmp
add
add
pushf
cmc
jns
mov
pop
jl
std
jnp
hlt
int
lahf
mov
pop
dec
adc
lds
mov
pusha
xchg
adc
inc
clc
incl
cmp
pusha
xor
xor
rdmsr
sbb
enter
test
nop
jp
mov
mov
push
or
push
and
jp
popa
bound
lea
and
add
pushf
inc
shl
push
cmp
mov
inc
xchg
dec
cs
fs
dec
and
and
mov
repnz
push
pusha
inc
test
decl
lret
lods
add
and
cwtl
pop
jb
adc
adc
decl
movsb
mov
push
adc
cltd
sbb
data16
inc
add
push
xor
shr
mov
or
sub
push
adc
and
sbb
cmpsb
aas
dec
push
scas
xchg
hlt
call
push
dec
lds
adcl
pop
pushl
add
push
push
fs
xchg
push
pop
lods
mov
ljmp
rcll
fstps
and
insb
scas
sub
pushl
mov
pop
cwtl
push
fsubs
lret
mov
incb
push
std
decl
mov
sub
aad
add
out
jo
lods
pop
pop
outsl
repz
gs
int
out
jb
push
test
fistpl
scas
jno
pop
daa
insb
add
jnp
jmp
xlat
sbb
pop
sar
sar
in
cmp
mov
xlat
out
inc
or
inc
sahf
push
add
fdivp
call
xor
in
mov
xchg
out
andl
mov
xor
xor
in
inc
mov
in
cwtl
inc
jge
stos
mov
and
arpl
or
aam
adcb
jecxz
daa
jl
dec
daa
inc
jmp
bound
movsb
sub
int3
inc
or
sbb
sarl
pop
inc
jmp
add
es
pushf
adc
in
xor
jns
rcrb
enter
adc
lcall
inc
jg
jge
dec
jno
xor
jecxz
lds
mov
cmc
fs
aas
add
ljmp
clc
push
jmp
push
jmp
stos
pop
test
inc
sub
dec
jg
xor
and
pop
pop
jp
imul
popa
int
cmp
fdivr
sbb
arpl
dec
cld
into
aas
sub
xchg
pusha
rcr
jg
jb
mov
sbb
loopne
pop
inc
idivl
push
iret
jno
adc
or
xchg
popf
je
fnstcw
mov
cld
mov
or
insl
shll
ja
dec
inc
mov
fmull
call
push
mov
gs
pop
xor
lds
pushl
adc
jae
or
push
cmp
test
jge
repnz
jns
adcl
jmp
inc
adc
mov
call
adc
inc
aam
lcall
mov
out
test
mov
pop
lock
call
xor
push
inc
imul
xchg
cwtl
stos
lods
jno
mov
add
incl
mov
or
push
daa
ret
insl
imul
inc
out
adc
cltd
int
push
push
adc
fidivrs
mov
sub
lahf
loop
ss
lret
cmp
sbb
and
decl
inc
adcl
mov
push
dec
pop
or
fcomip
dec
in
fidivl
add
push
xchg
mov
loop
pop
int
xor
repnz
fcomip
dec
mov
inc
dec
sbb
bound
cmp
cmp
pop
subb
mov
push
dec
jmp
dec
movsl
mov
mov
add
inc
push
sbb
add
fsubl
scas
jp
xchg
into
popa
cwtl
in
into
sahf
out
aaa
std
mov
aas
clc
in
mov
leave
mov
cld
jb
dec
cmpsb
sbb
shlb
pop
fstpl
hlt
sub
mov
and
aam
sbb
mov
add
ljmp
nop
test
pusha
mov
movsb
adc
xor
in
popa
mov
adc
pop
xor
jmp
pop
ror
or
xchg
movsb
out
xchg
test
dec
mov
inc
dec
dec
test
ljmp
aad
ret
arpl
jecxz
and
adc
mov
xchg
pop
mov
je
xchg
mov
dec
adc
inc
adc
dec
add
pop
cmpsl
xchg
stos
lods
movsb
and
movsb
push
mov
sti
leave
push
jle
xchg
into
stc
les
or
add
std
call
fs
popa
lods
inc
xchg
les
push
insl
rcl
scas
jbe
or
cld
fists
and
bound
xchg
mov
call
xor
mov
jne
mov
xchg
shrl
call
shr
mov
push
push
mov
xor
xchg
dec
pop
ljmp
rolb
push
push
jge
dec
aaa
out
xchg
filds
pushl
call
mov
mov
xchg
sub
hlt
out
daa
call
jmp
push
cmpsb
or
ja
lods
cmp
out
addb
rorb
mov
jbe
jne
or
jg
decl
add
inc
push
pusha
add
popa
sbb
cmp
andb
pushl
pop
dec
inc
das
jge
mov
xchg
and
adc
les
loop
dec
mov
push
sbb
ret
cmp
push
call
icebp
stos
pop
ret
dec
or
xchg
adc
mov
ljmp
xchg
and
dec
sbb
add
xchg
pop
insl
pushf
inc
push
not
cwtl
lods
movsb
xchg
pusha
mov
push
mov
jne
lret
test
loop
call
xchg
je
cltd
mov
fdivp
pop
stos
enter
pop
pusha
pop
sbb
int
dec
inc
iret
jp
insb
das
cli
jmp
gs
lret
mov
imul
fstpt
outsl
sub
subb
incl
or
mull
mov
jg
add
push
addr16
ficompl
jae
iret
pop
shll
out
pop
dec
ficompl
inc
push
xchg
gs
decl
cli
adc
xchg
popa
lock
jg
fs
enter
fldt
add
fcomip
std
test
arpl
push
inc
jecxz
imul
mov
adc
push
ljmpw
dec
cmp
inc
mov
inc
cwtl
sub
push
mov
loope
dec
jg
mov
fs
inc
push
mov
movsb
rcll
xor
loop
cmp
xchg
in
and
pop
add
ficoml
xchg
sbb
incl
and
jb
sahf
pop
into
xchg
xchg
ficoms
dec
mov
fildl
push
mov
jmp
push
mov
iret
mov
std
addr16
aaa
mov
mov
xor
lcall
sub
jb
mov
fs
xor
xchg
push
cltd
mov
arpl
call
arpl
jl
orl
jnp
pusha
add
cmpsl
mov
ljmp
jno
cmpsl
or
mov
or
test
imul
cli
fcmovbe
stc
and
mov
sahf
fsubrs
enter
pop
ljmp
mov
pushl
xor
ds
pop
mov
imul
dec
push
mov
mov
xor
inc
or
test
mov
fbstp
or
sbb
out
adc
and
movl
inc
add
incl
add
jo
sub
test
cmpsb
out
and
les
dec
loopne
repnz
mov
jg
mov
cmp
divb
insl
cmp
adc
dec
addr16
pushl
and
push
dec
mov
xor
cmp
mov
dec
xor
add
pop
ja
dec
xchg
pop
pop
pop
pop
adc
push
or
andb
pop
and
int3
pop
outsb
mov
mov
lcall
movsl
add
push
sbb
ds
jp
add
add
cmp
pushl
and
clc
andl
addl
cmp
orl
aaa
enter
fdiv
aaa
aaa
je
pop
push
xor
mov
or
sub
fcomps
pop
dec
or
dec
loope
decl
xchg
jae
loopne
dec
pop
push
cmp
popa
add
inc
das
jg
incl
movsl
jp
movsl
cs
mov
iret
xor
mov
pop
js
daa
mov
jo
mov
xor
sbb
push
out
dec
xchg
pop
sahf
test
icebp
adc
fcoms
inc
in
hlt
jp
call
call
push
icebp
pop
incl
cmc
and
add
inc
sub
add
xchg
pusha
xor
loope
pushl
shl
jecxz
jnp
push
pusha
xor
mov
shlb
sub
mov
inc
xor
jb
xor
push
push
fists
aad
bound
decl
cli
jo
xor
mov
add
ss
jo
lcall
or
cmp
jno
jae
icebp
push
imul
shll
roll
adc
jb
mov
and
icebp
test
mov
arpl
outsb
fcomip
jg
loope
cmp
gs
push
sub
adc
xchg
pusha
cmp
push
and
addr16
push
mov
aad
or
pop
jg
sub
loop
or
add
mov
mov
or
or
or
jo
cmp
ljmp
xchg
dec
lds
test
inc
dec
xchg
xchg
xor
xor
add
jb
add
jg
in
push
sub
pop
cwtl
inc
mov
ds
mov
ljmp
jae
roll
dec
add
push
js
xor
mov
pop
pop
sbb
decl
xchg
nop
xlat
xchg
mov
cwtl
inc
ds
cmc
dec
dec
call
decl
mov
push
xchg
mov
test
cmc
test
aad
shlb
jne
push
jbe
fists
push
cmp
cmp
lcall
xor
and
mov
pusha
aaa
inc
and
decl
inc
test
inc
xor
mov
jge
loop
or
add
push
pop
jo
es
fdiv
jge
push
lea
bound
ja
fisubrl
or
push
repz
repnz
dec
lcall
aas
out
addl
decl
push
jg
jle
mov
xchg
icebp
lcall
std
clc
inc
xor
gs
mov
xchg
ret
subb
adc
pop
xchg
clc
sub
loope
cmp
sub
incl
adc
cmp
mov
fdivl
and
mov
dec
dec
flds
push
mov
xlat
push
shr
push
lcall
sbb
or
lods
aaa
cld
mov
push
or
xchg
xchg
cmp
xchg
nop
xchg
xchg
cmp
call
xchg
pop
scas
xchg
cs
mov
roll
jae
mov
in
call
stos
icebp
cmp
or
loope
push
mov
js
and
and
ds
xor
cmp
ljmp
add
sbbb
mov
push
ss
pop
cmp
incb
xor
sbb
jnp
or
push
or
lcall
mov
push
cmp
xchg
or
rclb
mov
pushl
shlb
mov
es
icebp
mulb
add
call
add
inc
mov
and
pushf
faddp
inc
inc
inc
pushf
dec
loop
or
jo
xor
jmp
or
popf
push
es
xchg
ss
repnz
add
push
cmp
call
stos
insb
repz
data16
mov
inc
adc
push
lods
pop
xor
or
lods
push
js
sti
jns
cmpsb
mov
jg
fadds
mov
or
jbe
out
aas
popa
xchg
jl
xchg
gs
stos
scas
incl
clc
mov
push
xchg
mov
nop
hlt
nop
and
mov
push
xchg
cmp
sub
cmp
cmpl
xchg
mov
out
mov
mov
imul
inc
clc
mov
pop
push
lret
pop
nop
xchg
js
mov
inc
pop
sbb
jb
jns
ljmp
call
add
movsl
fidivrl
xchg
adc
orb
adc
lret
add
adc
and
sbb
movsb
cmpsl
mov
and
testl
lcall
sub
or
out
mov
xor
mov
push
lds
addb
test
les
rolb
sbb
test
test
enter
push
mov
mov
stos
mov
and
loopne
dec
ret
add
call
or
push
sar
ss
incl
jbe
push
adc
es
movsl
and
inc
stos
leave
or
push
sub
and
ljmp
mov
or
testl
cli
gs
xchg
adc
add
push
adc
cwtl
jecxz
aas
rcll
cmc
sub
pop
fbld
mov
lcall
sub
sub
call
jp
sub
cltd
sbb
xor
stos
imul
movsb
sbb
xor
out
movsb
push
jg
pushl
cli
sbb
pop
in
imul
pop
sbb
fbstp
mov
fucomip
xor
inc
fwait
pop
fs
jae
sbb
inc
fwait
dec
shlb
lahf
incl
pop
call
divl
mov
inc
ss
push
push
mov
loope
add
decl
push
xor
xor
test
adc
push
loop
push
pop
lds
popa
jnp
sub
outsb
and
inc
daa
incl
test
outsb
sti
popa
sub
push
cmpsl
push
add
jbe
xor
jne
pusha
sahf
decl
lock
add
inc
loope
fiadds
lret
mov
movsw
lods
mov
ljmp
inc
push
jb
adcl
aaa
popa
sar
jns
pop
jae
dec
and
mov
adc
push
lcall
std
mov
and
sub
adc
push
xchg
jb
sti
jmp
in
adc
mov
mov
jmp
loop
scas
xchg
fdivrl
mov
repnz
push
ljmp
sbb
gs
lret
mov
or
ljmp
outsl
insb
or
scas
xor
or
adc
es
lods
cs
xchg
cmp
cmp
and
and
aam
clc
ret
lcall
enter
jne
mov
pop
pop
push
dec
int
jb
sub
mov
pop
dec
cld
inc
lods
repnz
addr16
and
jg
cmp
lret
mov
and
pop
cltd
push
and
shl
inc
fsubl
das
mov
cmpb
dec
shlb
les
shlb
das
push
and
inc
loop
rorb
mov
shlb
xor
inc
push
sahf
ds
inc
xor
aad
decl
and
lea
add
les
add
popf
or
mov
popf
adc
popf
jno
ljmp
data16
mov
dec
jg
repz
push
sarl
in
aaa
xor
mov
aaa
adc
cmp
int3
mov
iret
xchg
addb
xchg
stos
or
add
xchg
xchg
jmp
mov
sub
mov
jno
fcoms
pushf
sub
testl
push
cli
mov
sub
or
dec
ljmp
mov
sub
push
mov
jp
dec
mov
adc
out
clc
jns
xor
push
insl
xchg
sub
sti
std
sbb
mov
mov
jecxz
imul
xor
js
rcr
xchg
les
add
adc
stc
jmp
jno
rorl
pop
jmp
ret
nop
pushf
sub
push
or
lods
lods
rcr
out
add
decl
cmpsb
imul
xor
dec
push
mov
iret
shrl
aad
andl
fld
ss
test
mov
mov
xor
add
adc
out
xchg
mov
lcall
jb
adc
adcb
mov
xor
shlb
test
loopne
nop
add
jns
es
lcall
add
or
sub
jno
sub
hlt
and
push
and
and
adc
pop
or
sti
shrb
fildll
cli
lcall
dec
std
lods
add
sub
nop
add
sub
cmp
incl
cmpl
adc
scas
xchg
mov
fs
lcall
aam
insl
fstl
sbb
test
call
loopne
adc
sbb
cmp
test
mov
adc
dec
icebp
mov
and
sub
or
hlt
add
lods
popa
add
test
loope
sbb
aas
lcall
sti
and
mov
call
pop
roll
mov
mov
mov
into
test
fmull
call
mov
adc
and
cmp
mov
fmull
jo
cltd
cltd
lret
sar
mov
movsb
mov
roll
out
inc
push
push
add
fldl
aad
sbb
jge
fcomip
push
mov
nop
inc
push
std
inc
lcall
js
push
sub
insb
lock
ljmp
aam
jbe
aaa
out
adc
push
sarb
mov
and
cmpb
or
xorl
push
in
out
adc
sbb
sub
cmp
decl
mov
jne
jbe
add
jecxz
sub
xchg
sbb
out
mov
mov
adc
cmc
ljmp
sbbb
jecxz
fbld
or
jp
mov
pop
push
mov
xlat
lret
fsubp
fdivs
push
movsb
fnstenv
lcall
fcmovnu
jecxz
xor
mov
jno
pushf
ss
pop
out
mov
sarl
int
sbbb
cmp
jns
out
cmp
fadds
pop
icebp
adc
xor
jle
cmpsb
mov
inc
out
hlt
mov
incl
pusha
decl
lods
sti
or
cld
and
mov
pop
loopne
xchg
cmp
iret
or
cmc
decl
mov
andb
and
mov
and
push
insb
jmp
lret
ljmp
mov
sbb
int
out
in
mov
jle
cli
mov
lock
add
or
pop
adc
pop
loope
cmp
decl
rorb
ja
lods
jp
aad
loope
fs
aam
dec
sar
dec
loope
addr16
push
sbb
adc
pushl
nop
xor
daa
loop
clc
mov
pushf
and
mov
inc
pop
add
or
cld
sbb
decl
subb
int
jge
sbb
add
adc
jb
repnz
mov
int
add
aad
imul
mov
filds
push
fildl
repz
cmpsb
fldt
lods
cmp
dec
or
xchg
jl
cmp
push
xchg
mov
ret
das
xchg
mov
sbb
inc
xor
pop
sar
call
or
insb
call
xor
jl
sub
cmp
fs
test
push
out
cwtl
push
push
cltd
dec
xor
icebp
jmp
testb
loopne
mov
inc
rcrb
enter
mov
push
mov
lea
test
mov
fs
jmp
dec
test
insb
dec
mov
lods
mov
jmp
mov
adc
incb
ret
ljmp
lret
sbbb
xchg
pop
jnp
jmp
fwait
xchg
sub
mov
pushf
xchg
aaa
push
inc
mov
outsb
cmpsl
out
nop
sub
jb
daa
jbe
xorb
or
jg
test
pop
xor
and
inc
mov
ljmp
mov
in
dec
sub
jmp
out
sbb
cwtl
or
out
jl
maxps
or
clc
cs
add
dec
repz
nop
test
inc
xchg
xor
cltd
pop
dec
adc
outsl
and
push
jae
cmp
dec
inc
add
fwait
lret
xchg
push
jno
xor
lret
sbb
jno
bound
pop
mov
mov
pop
sub
cwtl
mov
add
mov
pop
lcall
xchg
push
ljmp
and
xchg
lret
inc
and
sbb
jg
sbb
pop
cmp
mov
pop
push
fidivl
enter
lcall
stos
mov
movsb
and
or
push
dec
pop
int3
roll
and
decl
add
orb
rorl
call
mov
add
loop
call
andl
and
incl
push
nop
push
lcall
fisubrl
mov
jmp
test
movsb
mov
xor
inc
lock
lcall
push
adc
outsb
jp
insb
add
jle
stos
xor
fists
xor
stos
mov
mov
adc
shlb
push
cmp
xor
jle
dec
sbb
sti
in
ficompl
loop
mov
hlt
lcall
mov
push
ja
add
adc
lock
sbb
incl
sbb
mov
in
fwait
out
pop
jmp
repnz
or
leave
cmp
dec
ficomps
xchg
ljmp
mov
and
mov
mov
sbb
sub
mov
xchg
out
test
push
adc
shlb
decl
dec
icebp
inc
test
js
faddl
in
aam
adc
and
dec
xchg
aaa
fcmovnb
stos
in
leave
xchg
scas
dec
dec
mov
lock
incl
mov
mov
mov
dec
or
push
stos
ss
sbb
fnsave
cld
movsl
add
adc
fcoml
outsl
cmp
aam
int
mov
sbb
aam
iret
mov
cmp
jecxz
int3
mov
call
decl
add
lock
push
int
cmpsl
mov
xchg
sub
movsl
push
stos
xchg
lret
fadds
aad
mov
outsl
cld
dec
ja
neg
popa
aas
jge
test
decl
jo
push
jl
add
test
addl
inc
lods
mov
xchg
ss
adc
push
out
addr16
outsl
and
jl
dec
push
xchg
sbb
fcmovne
inc
mov
outsl
mov
negb
call
mov
shr
inc
repz
xlat
cmp
rcll
mov
aam
dec
lret
xor
orb
jno
mov
adc
pushf
mov
pop
shrb
push
pop
mov
mov
sbb
lock
test
inc
incl
adc
std
sub
sbb
daa
push
lods
sbbl
das
cli
and
mov
pushf
add
sbb
adc
lcall
and
fcmovbe
cmpsb
je
cmp
and
lods
test
sub
leave
insl
daa
movsl
ljmp
rclb
jle
xor
push
ficoml
xchg
loop
insb
jg
or
adc
xchg
mov
and
and
or
cmpsl
lcall
sbb
shll
loope
jecxz
adc
pushf
or
and
pop
and
leave
mov
mov
adc
sub
inc
mov
in
stos
push
pop
out
inc
jns
xchg
repnz
push
cmp
out
push
into
sub
and
and
iret
pop
incl
rcll
sub
insl
sbbl
cmp
pop
pop
lock
mov
push
mov
xchg
sbb
cmpsb
cmp
icebp
pushf
stc
nop
mov
ljmp
out
sarb
loop
lods
fidivrl
fstpl
imul
pushf
jns
pop
fnsetpm(287
pop
mov
mov
sub
je
inc
minps
cmp
dec
iret
jle
xor
mov
jg
movsb
call
xchg
xor
fadds
mov
pushf
lea
lock
out
lods
inc
mov
int3
mov
add
push
ret
and
inc
mov
lods
sub
rcll
mov
orb
xchg
sbb
test
mov
xchg
lods
xchg
sbb
sub
cld
imul
andb
fs
xchg
dec
jb
pop
adc
adc
mov
clc
das
clc
lcall
cmc
adc
scas
lret
pop
mov
cmp
dec
or
xor
add
cmp
imul
loopne
ljmp
inc
mov
add
lds
jg
pusha
std
xlat
cmp
test
les
ljmp
mov
movsl
push
jb
add
mov
push
arpl
and
sub
es
call
shrb
jo
pop
incl
sbb
or
dec
es
lock
decl
movsb
imul
dec
lcall
dec
imul
mov
adc
addr16
jecxz
icebp
cmpsb
mov
xlat
das
enter
add
mov
mov
jbe
dec
inc
xor
push
decl
dec
add
in
pusha
or
dec
push
test
or
sar
sbb
push
shll
pop
dec
sar
incl
jb
movsl
and
mov
add
jne
cmp
push
int
inc
sub
xchg
test
jle
push
aam
call
stos
adcb
aam
fldenv
lds
xor
dec
push
ret
lods
insb
sub
add
add
xchg
stos
mov
les
pusha
mov
pushl
lret
std
stos
lea
and
mov
popf
data16
and
pushl
lods
pop
add
btr
push
rolb
or
add
fwait
sbb
and
fcomip
xchg
mov
mov
adc
shll
add
rcll
jecxz
lret
xor
mov
inc
adc
mov
fadds
aam
into
loope
or
inc
push
cmp
ljmp
in
and
ss
mov
pop
mov
decl
rcrb
push
js
es
hlt
in
mov
dec
mov
mov
decl
jnp
inc
adc
shl
rcl
js
mov
inc
cmp
je
mov
test
jg
ljmp
adc
dec
push
int3
arpl
mov
pop
dec
aam
int
stos
dec
in
xchg
fsubs
inc
jg
fwait
nop
in
cmp
jmp
call
std
jmp
fisubl
push
lods
xchg
pop
sarl
gs
call
fildl
leave
in
mov
push
or
stc
movsb
sti
adc
sbb
inc
jmp
test
mov
sub
lret
mov
pop
imul
mov
cmp
jo
lcallw
and
xchg
inc
pop
ss
add
push
sbb
mov
aaa
std
fbld
jp
stos
pop
aam
dec
and
inc
adc
ja
fstl
loop
jge
xlat
cmpsb
push
adc
pushl
mov
enter
xchg
mov
cwtl
mov
sti
cmp
add
dec
movsb
add
jg
es
lock
fadds
inc
and
mov
sbb
pusha
cld
inc
sbb
jge
movsb
mov
call
add
lods
loope
mov
lcall
or
fldt
lcall
pop
hlt
pop
rcl
push
jno
aad
mov
mov
loopne
nop
in
jg
stos
and
pop
clc
sub
test
das
movsb
mov
jae
adc
shrb
adc
adc
inc
and
incl
in
dec
mov
cmp
test
fadds
outsl
jmp
mov
mov
test
popf
mov
sahf
xor
pop
mov
cmp
cmpsl
and
cmp
and
aad
sarl
ja
xchg
call
pusha
lds
in
inc
mov
mov
add
mov
add
mov
fldt
ret
repz
daa
outsl
dec
xchg
lcall
mull
jle
mov
mov
cld
rcrl
orb
lds
and
orl
sub
pusha
adc
jnp
or
mov
push
jg
psrld
add
mov
sbb
mov
pop
jl
xor
mov
fstps
mov
and
mov
call
test
sti
sub
stos
jg
in
sbb
xchg
inc
stos
jle
and
test
push
adcl
push
adc
jae
xor
popf
add
fisttps
cmc
pop
pushf
sub
jmp
inc
cli
cmp
and
arpl
mov
cmp
decl
xchg
jmp
bound
dec
mov
add
add
lock
or
adc
cmp
xchg
or
bound
xchg
hlt
pop
lock
rolb
and
hlt
decl
pop
clc
inc
pop
and
aam
fbstp
test
push
sbb
add
jo
pusha
test
mov
jmp
xchg
sub
sub
imul
or
loopne
lcall
insb
ljmp
mov
xchg
pop
inc
push
call
and
pop
push
adc
or
cmc
sar
lcall
cwtl
jb
les
lret
inc
xor
clc
xchg
add
aad
test
fwait
adc
decl
or
sbb
je
adc
nop
push
xor
dec
mov
out
mov
ljmp
dec
mov
imul
mov
adc
outsb
loopne
and
out
push
mov
sbb
dec
mov
jae
mov
movsb
loop
movsb
es
jmp
mov
ljmp
inc
sbb
and
shl
or
pusha
icebp
incl
jb
movb
sbb
and
scas
and
lods
mov
addb
or
popf
add
cmpl
psubusb
fbstp
jmp
mov
push
lods
in
inc
jp
push
jb
sub
jg
lcall
into
cmp
es
inc
jl
sbb
test
movsb
dec
in
sar
shrl
ja
inc
insl
ljmp
mov
or
jo
test
out
incl
pop
lds
cwtl
adc
sub
cltd
mov
xchg
leave
xor
xor
cmp
add
sahf
cmp
add
test
cmp
mov
pop
nop
dec
xor
and
xor
push
xchg
add
or
test
mov
jecxz
jle
cmp
jmp
ret
inc
dec
push
sbb
or
or
rclb
xchg
out
and
mov
xor
incl
pop
nop
lret
cmp
mov
inc
stos
cmp
xchg
mov
and
inc
push
mov
fcmovbe
cmp
xchg
mov
or
adc
mov
jnp
cs
movb
lahf
iret
sub
loopne
adc
xor
xchg
jmp
mov
mov
xchg
adc
xor
or
fdivs
lods
adc
insb
pop
fisubrl
es
or
addr16
js
or
dec
jg
adc
sbb
rolb
add
push
inc
cmp
xchg
or
mov
loopne
cs
out
clc
ficoml
ret
movsb
iret
test
ret
aad
xor
enter
decl
sahf
dec
test
or
rorb
mov
cld
push
xchg
add
repnz
mov
xor
and
add
cmp
inc
xchg
fadds
push
inc
adc
and
outsl
mov
loop
push
repnz
xchg
rcr
sti
add
dec
sub
pop
ljmp
mov
jns
dec
xor
aaa
mov
and
cmp
push
pushl
or
xchg
xor
movsb
mov
or
xchg
xor
adc
std
imul
sbb
adc
lcall
fistpll
les
fdivs
push
add
je
incl
mov
or
jmp
push
push
or
or
gs
ljmp
or
inc
pop
imul
or
sar
dec
mov
andl
cmp
mov
sub
xorb
add
loopne
gs
or
mov
jb
pop
ljmp
lock
mov
in
shlb
dec
pop
mov
jo
nop
push
ror
push
jecxz
pop
jne
ss
inc
mov
adc
pop
jb
sbb
xor
decl
cmp
dec
push
das
out
push
cmp
adc
mov
repz
sbb
fwait
lret
shlb
leave
pop
cli
subb
outsb
js
sbb
call
lret
mov
movsl
cmp
lock
push
mov
lock
and
rolb
mov
push
testb
add
jae
inc
dec
and
mov
pushl
sub
call
testb
mov
xor
push
pushl
adc
lock
rorl
dec
and
mov
dec
sub
xchg
pop
sub
or
sub
mov
lods
mov
rcl
mov
es
fidivrl
jmp
xchg
mov
push
fcomip
pop
popa
jno
test
cmpsb
fisttpll
adc
pop
aam
sbb
out
mov
aam
insb
roll
mov
enter
sub
call
out
add
and
jmp
das
sbb
jg
andl
mov
aad
xor
insb
jno
call
inc
testb
outsl
cli
pushl
or
ret
xlat
sub
clc
mov
loop
xor
pushf
rorl
test
dec
lcall
lea
insl
dec
pop
add
mov
insl
test
sub
add
xchg
mov
cmp
sbb
sub
inc
loope
lea
sbb
inc
fisubl
jp
in
incl
jmp
mov
clc
sti
sub
mov
fwait
ret
jno
aas
mov
mov
mov
xchg
jmp
add
push
push
dec
int3
pop
add
in
int
add
or
repnz
subl
adc
pop
pop
cmc
enter
cmp
adc
enter
mov
testl
incl
sbbl
sub
inc
xchg
lahf
jecxz
or
repnz
push
or
push
pop
call
mov
or
sub
jge
js
fisubrl
add
ficomps
sbb
dec
fwait
sahf
push
cld
mov
mov
clc
xorl
jne
sub
lahf
sub
incl
or
fisubrs
sub
notb
mov
loop
lcall
mov
in
clc
cmc
daa
adc
xchg
bound
lods
sbb
call
jae
mov
rcrl
lret
in
add
xor
or
jbe
mov
adc
pop
in
cmp
adc
mov
sahf
mov
addb
adc
les
push
adc
mov
ds
mov
cmp
inc
xor
lret
repnz
jg
jl
pop
jl
dec
ss
movsb
arpl
cs
lock
inc
or
ljmp
lret
pop
cs
in
call
pushf
shlb
dec
popa
push
out
or
clc
orl
lds
popf
cmp
test
andl
pusha
xorb
test
movsl
fildll
xchg
jo
jnp
inc
and
push
adc
pop
loopne
inc
ret
and
call
or
enter
call
dec
lret
xor
lret
std
jno
mov
dec
pop
dec
pop
loope
inc
mov
call
fcomps
sbbl
rcrl
mov
mov
pop
movb
inc
jmp
mov
push
pop
sbbb
clc
mov
std
jmp
add
mov
add
rclb
adc
rol
mov
sbb
jmp
ljmp
xchg
push
fsts
scas
mov
mov
ljmp
mov
xchg
mov
or
cmp
cmp
mov
sbb
sub
xchg
sbb
mov
jno
mov
sub
mov
in
mov
jg
jmp
jno
cmp
xchg
mov
mov
stc
ret
jmp
mov
jl
inc
jl
cmpb
ljmp
adc
add
xor
jg
fidivrl
fcmovnbe
stos
cmp
push
adc
inc
push
repz
cld
cmp
stos
jne
add
jl
adc
add
sub
fld
out
adc
xor
repnz
scas
sub
daa
rolb
ret
dec
push
frstor
hlt
and
or
enter
addl
or
inc
insb
cli
call
iret
sbb
or
jo
adc
jg
mov
nopl
push
aaa
inc
shll
add
jg
int3
cwtl
imull
pop
test
adc
outsb
pop
cmp
inc
cmp
hlt
outsb
rcrb
sarb
loope
outsl
ret
xchg
test
decl
leave
loopne
sub
in
arpl
mov
cli
out
in
cmp
xor
ljmp
fcomi
push
aas
inc
fistps
sub
scas
cmp
pushf
mov
call
sub
sti
xchg
leave
insl
hlt
popf
fcompl
or
movsl
sbb
in
cmc
aad
xchg
in
cmpb
ljmp
gs
or
adc
adc
sbb
push
scas
xchg
test
rorl
nop
xorb
wrmsr
repz
icebp
mov
clc
fnstsw
fadds
inc
out
mov
fnsave
pushf
add
jns
adc
call
mov
mov
decb
pop
out
push
fildll
pop
andl
dec
aas
pop
add
sbb
imul
mov
sbb
add
xchg
push
lea
sbb
lahf
int3
loope
add
lods
jmp
in
cmp
adc
mov
cmp
or
ret
cld
fs
andb
cmp
xchg
sti
fsubrs
sarl
adc
mov
cmp
inc
fs
dec
xlat
mov
and
pop
pushl
or
add
add
lahf
shll
cmp
pusha
adc
and
push
or
dec
jg
stos
sub
pop
loope
mov
test
sub
push
repnz
xor
lods
sahf
xchg
dec
jbe
push
xchg
ret
loope
cmp
mov
int3
sbb
sbb
adc
adc
mov
mov
in
scas
and
jmp
mov
push
sub
and
jo
roll
inc
pop
ret
ljmp
sbb
push
lds
mov
cmp
es
sbb
jne
jmp
sbb
insb
fadd
mov
sbb
fwait
in
xchg
jne
cwtl
xor
sarb
jnp
adc
mov
lea
cli
pop
sub
outsl
sbb
jae
int
push
cmp
call
dec
add
push
push
adcb
scas
std
loope
dec
adc
xor
jge
dec
adc
sub
dec
jl
icebp
mov
and
push
scas
nop
sub
in
rcl
push
sti
lock
mov
sub
out
adc
jnp
push
ss
insl
push
mov
adc
jg
je
ret
xor
iret
and
mov
fisttpl
mov
ljmp
or
repnz
mov
cmp
decl
hlt
sub
sub
mov
or
mov
xchg
cmp
lret
test
pop
xchg
and
scas
xchg
clc
jmp
daa
mov
mov
jle
shll
int
mov
ljmp
mov
or
add
cmp
xor
jae
cmp
jbe
enter
std
repz
ret
dec
in
inc
pop
push
lods
sub
pop
and
loop
fdivs
jne
dec
mov
clc
lea
int3
jl
push
and
add
bound
es
inc
stc
inc
lds
pop
xchg
and
push
bound
in
clc
stos
lods
jg
mov
aaa
dec
stos
and
push
sbb
outsb
jle
jns
mov
cltd
movsb
xchg
push
dec
mov
mov
loop
cmpsl
or
mov
sbb
pop
push
jo
lret
adc
jnp
add
cmp
mov
nop
imul
nop
mov
sarb
ficompl
add
push
add
cmpsb
adc
adcb
or
mov
inc
enter
dec
mov
sbb
rol
dec
ds
incl
or
push
in
dec
fsubrs
movsb
mov
leave
or
mov
sbb
fcompl
inc
xchg
stos
or
xchg
nop
cmp
inc
ss
arpl
sub
incl
mov
pop
fistl
and
sub
pop
shll
cwtl
adc
mov
sbb
mov
xor
fcompl
xchg
xor
pushf
movsl
pop
decl
lcall
mov
imul
sbb
dec
lods
dec
sbb
inc
pop
cmc
or
mov
mov
mov
fwait
sub
mov
movsl
jecxz
filds
sbb
fdivl
popf
jp
jmp
push
lea
or
inc
ljmp
jmp
pop
mov
rcr
test
mov
jbe
andb
dec
cli
aaa
lcall
inc
cmp
mov
addb
scas
js
pop
cmp
incl
lea
enter
cmp
cli
fsubs
and
cltd
push
cs
mov
call
or
xchg
push
lret
call
arpl
lcall
repnz
daa
cltd
pop
ljmp
jge
jmp
xchg
enter
jmp
mov
push
mov
adc
movsl
lcall
mov
movsl
ficomps
stos
or
ljmp
rclb
das
push
xor
fs
push
xchg
insb
inc
and
leave
aad
adc
stos
or
aam
incl
les
lcall
jmp
addl
dec
pusha
pop
jl
inc
or
aaa
orb
sub
dec
and
mov
inc
jl
cmpsb
or
sbb
ljmp
ret
sbb
push
pop
xor
push
mov
jg
inc
xor
lcall
pop
stos
aam
incl
xor
mov
popa
sub
aam
xchg
push
xchg
pushl
jmp
push
xchg
mov
or
cmpsb
push
xor
cmpsl
popa
mov
test
incl
inc
mov
xchg
shrb
and
xor
mov
int3
inc
not
xchg
je
push
das
mov
sbb
test
cmpb
rcl
incl
lcall
sbb
ja
push
aaa
add
sbb
testb
arpl
push
cli
lcall
fists
xchg
test
cmp
inc
jl
loop
jb
mov
repnz
cmp
faddl
xor
das
pop
fmuls
out
mov
inc
adc
mov
cmpsl
ljmp
pushl
adc
int
ja
rcr
out
jb
and
imul
xchg
sbb
add
ljmp
out
dec
leave
shl
repnz
bound
es
test
mov
jg
sti
fdiv
daa
pop
push
stos
cmp
push
ljmp
ljmp
mov
and
mov
in
stos
cmc
pushf
push
shrb
and
sbb
add
decl
nop
rolb
sbb
mov
pusha
and
add
xchg
test
fisubl
pusha
incl
adc
adcb
cmp
outsb
mov
test
xor
or
ret
jo
in
and
ljmp
xor
sub
subl
mov
sbb
push
mov
xchg
cs
popf
lea
rorb
adc
mov
push
stos
das
jns
mov
jge
jmp
sub
mov
pushf
mov
pop
stos
jmp
cld
pop
outsb
mov
lcall
je
call
mov
lea
inc
xchg
inc
lcall
in
add
rolb
int
jmp
xor
push
sti
call
or
jno
dec
lret
inc
push
ja
xor
pop
and
xchg
inc
add
test
insb
xor
or
xchg
ljmp
adc
push
arpl
cmpl
pop
pop
test
decl
or
pop
iret
test
nop
xor
sahf
bound
or
xchg
adc
cltd
mov
cmp
cmp
dec
sarl
out
call
loope
push
mov
push
xchg
add
jbe
push
inc
icebp
mov
mov
ret
enter
jmp
adc
js
lret
sahf
push
dec
cmp
jmp
pop
cmpsb
mov
sub
cmpsb
cmc
stos
aaa
lret
test
inc
sahf
repnz
mov
ret
fsubl
adc
push
dec
jecxz
pop
adc
insl
pop
xchg
clc
les
loope
scas
pop
push
push
clc
decl
and
mov
sub
dec
fisubrl
mov
out
stos
pop
les
adc
mov
push
mov
xchg
mov
mov
or
mov
call
mov
sub
inc
or
sub
cmp
jb
mov
ret
decl
cmp
mov
in
out
fsubl
fcomi
and
xchg
bound
adc
lcall
mov
jno
iret
sbb
ljmp
jg
js
lea
mov
push
fwait
adcl
push
call
cld
roll
pop
dec
adc
xor
test
cmp
mov
lods
jg
pushl
cmpsb
frstor
or
add
fidivrl
mov
ja
inc
or
pusha
push
mov
or
arpl
test
mov
imull
jbe
les
jno
rol
adc
sbb
lock
push
mov
call
into
incl
mov
inc
jge
push
jb
push
iret
aam
jae
inc
adc
sub
test
cli
in
xchg
cmpsl
inc
and
daa
xchg
hlt
push
pushl
jns
pop
xchg
pop
adc
mov
test
clc
test
cmpsb
setb
loop
inc
add
out
xchg
xchg
popa
cmp
jge
lret
push
ret
fwait
jbe
lds
das
iret
push
push
sub
dec
pop
jbe
xor
add
add
xor
popa
std
lcall
cltd
xor
in
shrl
pusha
ret
mov
push
fbstp
mov
xchg
test
pop
mov
decl
pop
push
lcall
fiaddl
cmp
add
mov
call
or
arpl
out
cmp
or
lods
adc
out
bound
pop
push
mov
and
push
xor
roll
mov
dec
in
inc
mov
pop
add
ss
filds
sbb
xorb
jmp
enter
or
add
xlat
int
mov
mov
aam
push
loope
add
sbb
mov
imul
jl
xchg
dec
lret
lea
out
test
push
movsb
push
mov
add
xchg
and
pop
cld
int3
add
into
test
cwtl
in
or
push
adc
flds
scas
clc
ljmp
adc
inc
loope
movsl
or
daa
imul
cmp
cmp
adc
out
or
add
mov
in
xor
incl
sbb
in
mov
mov
inc
rorl
aam
inc
pop
fisttpll
lcall
popa
fsqrt
int3
iret
call
std
je
jae
or
jns
inc
aad
cmpsl
mov
dec
or
dec
seto
movsl
inc
mov
pop
mov
je
xor
add
sbb
inc
pop
xchg
inc
je
mov
or
add
cmc
inc
xor
insb
les
aam
and
dec
inc
sbb
inc
pop
adc
inc
pop
test
adc
cwtl
aad
popf
pop
mov
andb
cmpsb
xchg
mov
cld
adc
push
inc
mov
push
jmp
clc
movsb
or
fcmovb
ss
subl
add
sbb
shlb
shl
imul
test
sub
inc
cld
and
lret
cwtl
pop
inc
lods
inc
int3
stc
lods
push
mov
mov
imulb
push
add
inc
xor
je
fs
add
lcall
mov
mov
adc
popf
fcompl
and
adc
rorl
add
fwait
decl
mov
fidivrl
aaa
in
subb
inc
ret
call
dec
dec
or
sbb
mov
jmp
and
push
push
cmp
outsl
xchg
inc
lcall
fadd
jae
adc
mov
inc
cs
add
add
fdivp
pop
sbb
out
int3
daa
xor
shlb
mov
jg
xchg
popa
in
pop
pop
and
cmp
daa
test
rorb
popa
pop
iret
icebp
faddl
pushl
mov
dec
sahf
pop
pop
in
dec
fwait
inc
and
lock
adc
dec
inc
xor
xchg
dec
add
jg
nop
insl
cmp
hlt
pop
iret
cmc
nop
and
cmp
sbb
pop
mov
stc
int3
pop
cmpsl
add
std
cmp
bound
pop
out
pop
dec
cltd
push
jp
dec
loope
cwtl
in
or
sti
fmul
push
std
movsb
pop
mov
and
inc
stos
add
dec
adc
test
or
add
pop
jg
loopne
dec
mov
scas
hlt
rcrb
and
loop
or
jp
lcall
inc
or
push
enter
push
dec
ljmp
stc
test
aad
and
popf
pushl
int3
cltd
sbb
fstps
xor
mov
adc
dec
shll
pop
or
lds
je
int
push
test
dec
pop
loopne
mov
nop
mov
adc
call
data16
lods
xor
pop
in
shlb
pop
push
mov
or
flds
pop
dec
push
add
icebp
xor
insl
loopne
sbb
pop
aam
inc
ret
roll
mov
cmp
aam
jmp
or
push
xor
je
jns
adc
je
test
call
mov
sbb
and
mov
inc
xchg
xor
incl
or
test
shll
or
adc
cmp
aad
inc
inc
inc
add
push
out
les
pop
jg
movsb
cmp
and
or
in
cwtl
call
xchg
in
inc
jg
jmp
lret
cmp
movsl
repnz
mov
dec
iret
popf
pusha
out
rcr
dec
pushf
int3
or
dec
sbb
fsubrs
cmpsb
cmp
es
xchg
jmp
cli
paddusb
leave
fdivl
inc
pop
lahf
inc
fldt
inc
imul
jmp
vpmaddwd
insl
sarl
lret
imul
loopne
dec
clc
out
aam
popf
jno
add
inc
in
sbb
ljmp
inc
mov
decl
sbb
movsb
and
push
mov
movsb
adc
pop
adc
or
push
cmp
dec
data16
std
das
cli
call
push
call
fs
and
aaa
mov
cltd
mov
jg
dec
mov
push
lea
into
fs
decl
hlt
leave
dec
push
jle
gs
mov
pop
faddl
push
fwait
inc
incl
cld
test
int3
adc
addr16
sub
pop
shlb
add
jge
pop
aaa
adc
inc
dec
cmpb
jo
dec
sub
pop
loopne
call
mov
xchg
pop
push
sbb
aaa
subb
lcall
jp
mov
push
ds
and
aam
lock
hlt
std
pop
loopne
lea
shlb
test
faddl
adc
push
cld
or
push
enter
or
adc
push
out
or
fs
out
xor
test
sbb
out
nop
movsl
pop
sub
loopne
call
mov
out
shrb
in
inc
push
jns
mov
cmc
pushl
std
loopne
inc
popa
lahf
ss
pusha
stos
hlt
test
cmp
fxtract
insb
xchg
cltd
adc
je
dec
inc
sar
leave
loop
cmovne
leave
lahf
rorb
pop
sub
popa
out
push
cmc
call
mov
fcmovu
push
adc
or
add
mov
dec
adc
enter
stos
inc
pop
mov
mov
or
ret
filds
push
xor
mov
add
lock
mov
in
mov
and
nop
inc
xchg
or
imul
xchg
inc
int3
sbb
lock
lcall
mov
shlb
roll
pusha
call
pushf
cltd
and
orb
or
lds
inc
fwait
gs
cld
lcall
xchg
int3
je
scas
push
cmp
pop
mov
lret
imul
ds
mov
xchg
pop
or
or
jae
adc
sarb
clc
xor
push
or
js
jbe
mov
lock
inc
sub
movsb
fnstcw
insb
and
movsb
cmc
jg
sub
call
adc
add
int
repnz
int
dec
in
xor
adcl
sbb
ljmp
and
adcl
add
lods
adc
inc
push
sti
inc
jb
mov
inc
sub
pop
push
jmp
jo
mov
mov
pusha
scas
lahf
data16
dec
sbb
jg
mov
sbb
mov
or
xchg
fsubs
jecxz
loopne
adc
scas
stos
lcall
add
pop
and
ljmp
lcall
jne
sub
fsub
lcall
sub
jno
mov
mov
outsb
sbb
sub
xchg
pop
loopne
pop
sti
addl
fistps
rolb
aad
aaa
bound
dec
daa
jbe
repnz
sbb
push
push
push
dec
cli
call
sbb
sbb
adc
push
cs
and
push
lcall
ss
pop
je
xor
stos
in
xchg
sbbl
decl
mov
adc
inc
aaa
ret
dec
push
push
pop
or
jmp
jb
xchg
adc
xor
dec
cmp
scas
mov
jge
push
mov
lcall
decl
enter
xchg
xchg
out
xor
pop
insb
roll
mov
cli
incl
ret
call
fs
dec
pop
in
je
jp
movsb
jbe
jmp
inc
sbb
into
adc
add
dec
dec
lock
or
push
pop
sub
incl
sub
aaa
sbb
sbb
icebp
inc
push
mov
jp
mov
xchg
push
shrl
jbe
fsubl
out
xor
xchg
rcl
adc
loope
hlt
ljmp
insb
jno
icebp
jmp
lds
sub
hlt
sbb
push
jmp
mov
sbb
mov
and
mov
sahf
dec
popf
sbb
adc
cli
in
add
xchg
sbb
xchg
int
fucomp
dec
fbld
add
outsl
fstps
aam
mov
ljmp
rorl
mov
imul
add
mov
xor
and
imulb
out
mov
cltd
lods
out
mov
add
sub
movsl
leave
ret
adc
loope
test
dec
pop
or
repz
sbb
out
xor
call
xor
mov
int3
scas
xchg
ljmp
sub
in
mov
add
lahf
push
movsb
icebp
call
icebp
push
stos
enter
and
int
idiv
cmp
enter
aaa
int3
dec
add
mov
xchg
push
idivl
push
rcl
pop
fmull
sbb
in
cmp
sbb
incl
call
shr
dec
or
lock
call
push
decl
aas
clc
lds
lea
addl
aas
push
xchg
aam
cwtl
mov
add
inc
push
stc
fiaddl
sbb
lock
shll
popa
aaa
lret
jmp
popa
js
sbb
jne
adc
mov
call
inc
out
inc
jae
inc
add
test
cmp
lcall
sub
enter
movsl
ljmp
xor
mov
sar
sbb
push
pop
outsl
dec
fwait
mov
or
mov
rorl
sub
push
aam
cmpsb
inc
fldcw
in
in
mov
imul
pushl
movsb
fsub
fstpt
addr16
mov
sti
pushf
sub
push
popf
pop
xchg
enter
repz
out
clc
sub
cli
loope
cs
test
add
incl
jl
in
test
mov
and
addl
in
inc
sub
push
xor
divl
inc
repnz
out
pop
in
add
and
pop
scas
fprem1
ljmp
lds
bound
push
lret
adc
pop
and
mov
add
mov
jnp
or
inc
inc
fdivr
jne
pop
pop
pushl
std
leave
aam
mov
mov
sbb
jne
xchg
pop
jo
mov
add
and
div
adc
mov
incb
call
popa
fs
xchg
push
in
xchg
push
int
popa
push
inc
jmp
jl
shlb
dec
add
add
adc
in
sbb
or
adcb
filds
dec
shl
pop
push
xchg
sbbl
call
adc
loopne
push
enter
adc
xor
fsubrs
addb
xchg
enter
pop
decl
test
fcomp
lcall
ljmp
in
cwtl
cwtl
xchg
mov
pop
lock
call
mov
outsb
mov
push
mov
fwait
mov
adc
adc
push
out
dec
push
cmc
pushl
xchg
addr16
enter
out
clc
cwtl
adc
xchg
ljmp
out
and
xchg
int
sbb
xchg
andb
repnz
inc
call
inc
call
lods
xor
jmp
out
mov
jmp
arpl
in
pushl
fisubl
add
push
dec
xorb
or
cli
mov
test
xor
sbb
mov
sub
aas
bound
cmp
call
repz
sbb
jge
xchg
lahf
into
inc
das
iret
sub
jg
mov
mov
and
mov
sahf
mov
inc
test
enter
insb
nop
and
test
inc
lret
inc
stos
jg
dec
push
xchg
xlat
insl
jge
or
inc
sub
clc
add
adc
lods
mov
xchg
pop
out
xor
mov
push
movb
orb
or
sub
push
inc
decl
push
xchg
fs
nop
add
fs
test
add
pushl
lahf
sub
test
mov
lcall
shrl
mov
xchg
sbb
in
cmp
pusha
cmpsl
inc
aam
push
sub
xchg
daa
sub
ljmp
mov
jl
ret
daa
xchg
sar
aad
mov
icebp
cli
mov
pop
outsl
pop
mov
mov
xchg
sbb
jmp
push
roll
adc
ret
xchg
out
clc
pushl
out
inc
repz
adc
mov
cli
repz
jae
lea
mov
ror
data16
test
xchg
icebp
fcmovnu
sbb
mov
push
dec
mov
xor
icebp
pop
hlt
add
sbb
push
push
adc
xchg
cmp
fs
incl
jmp
dec
sbb
mov
mov
pop
sub
inc
enter
pop
mov
movsl
add
aaa
push
add
jns
push
sub
lahf
inc
ret
rolb
push
movsl
push
pop
mov
test
ljmp
and
loope
cmp
or
lock
setnp
xchg
or
incl
push
push
and
inc
sbb
xchg
sub
sbb
xchg
lds
sbb
lcall
sbbb
push
adc
mov
scas
rcrb
aam
repnz
js
add
xor
inc
arpl
mov
cli
adc
inc
dec
add
call
or
add
push
movsb
test
call
test
push
xor
cmpsb
addr16
sub
out
loopne
fwait
cs
imul
jae
insb
lcall
fbld
cld
decl
fsts
popl
sub
and
sbb
decl
sub
or
sahf
jl
int3
adc
stos
mov
xor
add
push
inc
test
mov
out
xchg
mov
add
arpl
ret
and
xor
cmpsl
dec
sub
adc
adc
shlb
inc
mov
and
ljmp
mov
xchg
mov
mov
mov
ljmp
cmpsb
test
icebp
daa
pop
out
xchg
lods
sub
ret
mov
ret
movsb
ljmp
je
dec
scas
or
fbstp
mov
mov
leave
decl
xor
pop
lret
mov
scas
mov
sbb
pop
out
call
inc
jns
std
inc
xchg
mov
lea
cmp
and
push
xchg
cli
call
mov
dec
push
mov
mov
mov
sahf
mov
xchg
dec
sub
add
push
mov
or
adc
or
mov
or
or
mov
aam
dec
loopne
mov
sbb
in
mov
pop
dec
and
add
aaa
ja
lds
adcb
and
fildll
pop
mov
in
adc
mov
jae
inc
adc
loopne
pop
lock
jne
pushf
cmp
decl
adc
dec
sub
jl
sub
add
jmp
repz
jp
dec
dec
add
inc
jmp
xor
dec
fs
ret
jp
push
pop
shlb
popf
adc
call
cs
aam
ljmp
and
popf
sbb
call
mov
adc
test
rclb
cmp
repnz
push
add
xchg
inc
add
mov
enter
adc
decl
sub
sbb
or
adcb
push
xchg
dec
in
dec
adc
adc
inc
movsl
and
addb
fmuls
jge
jmp
mov
xor
cltd
mov
cmp
pop
cltd
ds
xchg
adc
pusha
jecxz
xor
xor
sbb
push
subb
ljmp
jle
inc
add
jbe
mov
cmp
notl
daa
stos
int
pop
adc
mov
shrl
sbb
decl
pop
push
sbb
or
sbb
roll
loopne
push
jecxz
out
sub
pusha
cld
lcall
cmpsl
cmp
and
mov
pop
push
jo
nop
and
ss
cltd
push
xchg
outsb
hlt
sbb
incl
ss
addr16
incl
adc
mov
into
push
or
xor
int3
in
repnz
adc
jmp
or
pushf
cvtps2pd
sub
sub
sub
ss
and
lcall
jp
and
inc
lret
jl
call
in
call
push
in
push
and
orl
sub
xchg
icebp
jmp
adc
decl
xchg
mov
shrl
or
hlt
inc
mov
in
nop
pop
add
ficoms
sbb
lea
or
xchg
cwtl
inc
test
repz
xchg
jno
xor
orps
cs
ljmp
sub
add
jecxz
ret
ds
adc
or
push
sbb
inc
pop
adcb
xchg
outsl
mov
xchg
mov
pop
std
fcomip
xchg
push
call
and
mov
add
push
clc
inc
and
js
notb
and
push
stc
mov
or
cli
push
pop
imul
jg
sub
fs
insl
add
or
dec
arpl
cs
insb
mov
cmp
ss
mov
jg
mov
adc
int
mov
test
sahf
fldcw
popa
fldenv
ss
ds
fcomip
incl
mov
and
out
cli
cmp
and
sub
jg
mov
imul
jmp
roll
loope
jb
addr16
pop
and
xor
cmp
stos
sub
jg
mov
cmp
nop
jne
sahf
push
test
fldl
sbb
adc
jo
or
cmp
decl
popa
call
xchg
xor
pop
mov
pop
cmp
daa
mov
mov
out
mov
arpl
inc
rcr
scas
fsubs
scas
mov
adc
xor
mov
xor
dec
pushl
cld
dec
mov
movsb
mov
leave
jnp
sbbb
fmull
lahf
sbb
adc
call
push
call
subl
push
push
lret
inc
mov
mov
aad
inc
call
xchg
cmc
push
stos
movsb
mov
cmp
mov
aam
lret
jbe
jecxz
push
adc
xchg
sub
or
push
filds
lcall
ret
jb
movsl
jo
xorl
nop
test
adcb
adc
sub
sbb
xor
and
push
hlt
cmpsb
stos
es
pop
xor
and
sub
push
std
mov
leave
adc
push
add
fildll
push
push
add
orl
aad
lcall
and
add
and
push
ja
pushl
mov
and
iret
test
mov
es
les
fadds
repz
data16
xchg
lods
sbb
or
ljmp
cld
decl
aaa
jg
in
mov
cmpsb
cltd
cmp
es
push
xorl
pushf
xchg
xchg
inc
adcb
dec
sub
daa
aaa
leave
and
pop
fwait
push
movsb
and
xchg
pop
dec
jo
pop
shll
xchg
sbb
lock
test
incl
mov
adc
les
aaa
push
or
add
pop
pusha
pop
lods
mov
jnp
sbb
ja
sarb
mov
jns
ljmp
fdivl
in
aas
push
ljmp
mov
push
rolb
or
incl
sti
hlt
push
notrack
loopne
fnstsw
sbb
fiadds
dec
cld
andb
in
stos
pop
shll
cwtl
outsl
or
sahf
nop
inc
dec
sbb
xchg
dec
jae
in
xor
mov
mov
movsl
mov
ficomps
or
sub
inc
rcll
or
pushl
clc
sbb
or
push
nop
adc
mov
mov
or
inc
mov
lods
add
loop
adc
out
mov
call
fadds
enter
js
sbb
pusha
lods
scas
jp
inc
push
pop
sarb
jmp
outsl
mov
test
dec
test
cmpsl
repnz
adc
xor
inc
inc
movsb
and
xchg
add
add
cmpb
out
add
decl
xor
xor
iret
mov
leave
xor
jg
int
data16
cltd
sar
pop
jg
iret
pop
push
fwait
aas
cld
jmp
ljmp
movsb
out
lahf
std
lahf
rclb
out
std
add
push
jo
test
or
loopne
dec
mov
pop
jo
pop
or
jg
jo
jp
mov
add
cmp
add
or
fisttps
inc
and
cmpb
add
fists
inc
sbb
or
shlb
inc
jl
inc
addb
pop
test
fadd
in
orb
and
jl
rorb
loop
dec
adc
imul
shlb
sbb
mov
sub
jmp
lods
dec
jl
xchg
fs
test
push
cli
mov
pop
cmpsl
cmpsl
push
or
or
pop
gs
incl
push
jne
dec
sbb
sbb
mov
ja
mov
xchg
inc
pextrw
pop
adc
mov
js
xchg
ret
and
or
jnp
adc
and
add
or
daa
ret
or
rol
pop
in
adc
pushl
bound
xor
or
or
js
loop
subb
adc
lds
test
sub
mov
incl
mov
mov
push
add
inc
push
in
fs
jo
incl
cmpsl
js
out
or
sbb
sbb
insl
and
mov
add
in
pop
incl
and
xchg
orb
loop
lcall
loopne
cmp
ret
cli
into
outsl
xlat
lret
filds
fmul
call
js
xor
mov
or
addl
and
xor
ja
and
jg
fistpl
repnz
sub
sub
xor
and
xor
and
loopne
dec
shlb
inc
push
ljmp
and
shlb
mov
aaa
push
and
loopne
adc
pop
jp
fsub
arpl
ret
dec
outsb
ficoms
hlt
in
sbb
fs
mov
cld
movb
inc
mov
mov
sbbl
outsb
popa
xchg
test
jl
pop
xor
inc
lcall
push
pop
and
jmp
mov
lcall
jle
dec
mov
or
icebp
aaa
std
mov
dec
xchg
mov
stos
jne
add
cli
pop
call
in
fimull
and
jne
add
push
adc
sbb
jnp
pushl
ret
push
xchg
dec
sbb
divb
inc
sbb
push
fs
and
sbb
ljmp
dec
dec
or
gs
or
das
add
movsl
and
mov
dec
mov
and
push
inc
movhps
or
in
mov
loopne
hlt
xor
inc
sub
sub
shr
pushl
pop
shrb
mov
push
mov
movsb
sub
xchg
lods
sub
jno
mov
stos
sub
mov
je
ljmp
sub
repnz
or
add
mov
xor
inc
stos
sarb
mov
pop
push
push
inc
mov
and
repnz
inc
xchg
add
inc
dec
aam
push
push
inc
push
mov
push
jg
fildll
rol
addr16
arpl
inc
outsl
pop
mov
and
clc
xor
and
xor
and
mov
dec
hlt
inc
cmp
cltd
hlt
add
adc
add
icebp
ljmp
mov
cmpsb
outsl
and
incl
sub
or
out
imul
mov
inc
outsb
setp
sub
call
mov
addb
add
pusha
js
lcall
xchg
loopne
jle
dec
push
xchg
sub
ljmp
lret
dec
call
lahf
push
adc
inc
decl
mov
mov
dec
mov
in
inc
mov
icebp
jmp
ror
pop
ljmp
daa
outsb
xor
lods
adc
outsb
das
pop
clc
fwait
pop
adc
loop
mov
movsb
js
adc
push
hlt
outsl
cli
outsl
enter
ret
sub
pop
pusha
add
add
jg
jb
in
test
rcrl
pop
inc
or
add
sub
pop
sar
jmp
outsb
scas
pop
sbb
fcmovnb
cmpsl
xchg
cmpl
je
lock
push
je
pop
ret
mov
inc
notl
jg
ret
add
add
push
xchg
paddb
bound
add
loopne
decl
and
or
xor
shll
call
adc
or
jle
data16
cmp
mov
or
mov
fwait
aam
imul
adc
xchg
sub
mov
add
inc
dec
hlt
add
push
adc
mov
out
or
imul
xor
aaa
adc
ljmp
shlb
dec
mov
add
inc
fldl
insb
sahf
dec
add
mov
pop
cmp
dec
imul
mov
xchg
pusha
sub
pop
inc
fs
sub
add
call
dec
pushl
dec
push
push
ss
in
mov
sub
pop
mov
incl
out
xor
fs
call
mov
jbe
test
or
push
dec
call
push
call
cli
loopne
xor
mov
dec
mov
sbb
call
xor
cs
or
es
addr16
ds
fsubr
xor
add
inc
repz
scas
cli
sub
dec
movsl
out
push
jns
pop
movsb
dec
js
pop
add
outsl
pop
ljmp
icebp
movsl
mov
shll
xor
mov
or
and
xor
cmp
int3
sub
ljmp
mov
imulb
mov
or
or
pusha
sub
xor
mov
dec
cld
xor
push
dec
and
jae
push
dec
jns
push
mov
dec
jno
das
je
and
inc
push
and
inc
data16
arpl
lea
mov
inc
xor
stos
jmp
cli
ds
cmpsb
ss
gs
dec
mov
inc
xor
ret
cmp
call
inc
data16
push
mov
jge
ss
fmuls
push
or
xchg
nop
xchg
mov
imul
lahf
jbe
fsubrs
push
ljmp
fadds
and
addr16
push
sub
adc
cmc
adc
jmp
jl
sub
in
and
loop
pusha
mov
mov
ljmp
push
jo
ljmp
int3
pop
sbb
or
aam
pop
pusha
sub
push
in
sbb
out
pop
jae
bound
or
xor
mov
shl
dec
or
cmpsb
dec
or
cld
mov
movsb
or
inc
dec
jg
jo
dec
cli
mov
pop
push
xor
or
js
int3
movsl
data16
test
push
testl
sbbb
mov
xchg
inc
cld
and
hlt
test
lods
icebp
fwait
dec
loopne
out
and
hlt
or
lods
dec
bound
call
sub
inc
pop
into
add
jmp
sbb
lcall
jae
testb
push
push
in
cmp
outsl
ljmp
sbb
pop
lods
jno
jl
adc
inc
and
mov
mov
bound
jo
fidivs
loop
mov
fs
fwait
clc
inc
add
xor
out
gs
sbb
mov
sub
push
js
xchg
movsl
push
mov
add
cmpsb
xchg
movsl
addr16
cmpsb
pop
cmp
movsl
imul
xor
adc
incl
lcall
test
popa
inc
shrl
cltd
jp
mov
mov
inc
adc
xchg
call
imul
fildl
pop
hlt
cmp
pop
aas
or
call
push
loopne
in
shl
shll
pop
pop
jno
sar
push
mov
push
jecxz
dec
loopne
les
sbb
jp
push
repnz
aaa
inc
clc
pop
or
mov
pushf
movsb
dec
paddd
xchg
pop
mov
xchg
push
and
decl
mov
in
lea
in
cmp
mov
inc
push
mov
xchg
xor
xor
xchg
push
bound
movsb
mov
dec
jae
fs
pop
ljmp
xchg
jns
mov
or
orb
push
ljmp
cwtl
mov
call
pop
ret
mov
pusha
rclb
pushf
jae
pushl
cld
mov
cmpsb
and
add
shrb
lods
add
inc
sbb
pop
adc
sbb
and
jns
push
ljmp
js
mov
bound
push
call
sub
addl
mov
lea
cli
and
jb
jg
incl
mov
dec
sbb
mov
mov
cmp
cmp
push
idivb
mov
cld
test
pop
test
adc
test
mov
cmpsb
lcall
push
push
ss
popa
xchg
inc
addr16
mov
mov
incl
clc
fstpt
scas
imul
lods
outsl
mov
std
decl
test
xchg
fmull
dec
addr16
add
rcrb
dec
into
das
cli
mov
aaa
mov
imul
and
nop
pushf
mov
add
or
js
jb
fidivl
aad
push
loope
ja
aad
icebp
call
in
je
ret
sub
push
out
xchg
icebp
inc
sar
cmpsl
jg
push
das
insl
pop
push
xlat
cs
clc
xchg
cmc
dec
mov
jp
xlat
push
cwtl
jns
inc
ffreep
mov
mov
out
in
pinsrw
sub
inc
fcomip
pop
mov
lods
test
adc
mov
int3
jge
cmp
decl
and
pop
mov
xchg
aad
mov
loopne
in
sub
or
dec
rcrl
testl
and
mov
dec
push
insl
and
push
arpl
sti
in
or
incl
pop
lret
rorl
out
in
mov
xor
sbb
loope
test
add
filds
push
loopne
fstp
add
or
loopne
loopne
jle
sti
std
fistps
loope
pop
in
hlt
add
inc
inc
mov
or
jecxz
push
in
mov
pushl
jecxz
pusha
add
sub
pop
adc
pop
and
in
inc
add
lcall
insb
insl
sbb
mov
dec
adc
rcrl
push
xor
arpl
jle
inc
clc
incl
jne
lahf
cmp
mov
mov
lcall
fs
cli
scas
cmpsb
dec
push
out
loopne
int
add
mov
push
fcomip
fists
leave
add
push
inc
mov
fsubrp
adc
pushl
gs
lods
lods
and
pop
std
das
mov
dec
jb
push
movsl
dec
pop
stos
sarl
incl
aad
lds
sbb
xor
call
rorl
mov
cmpl
sub
aad
in
adc
mov
jmp
int
aas
pop
scas
add
aaa
mov
cmp
xor
xor
cmp
push
mov
test
mov
daa
fdiv
imul
jae
adc
adc
iret
mov
jg
andb
sti
dec
xor
popf
mov
fimuls
shlb
xlat
outsl
negb
imul
inc
cmp
add
add
std
fnstcw
aaa
incl
add
in
lahf
icebp
aas
aaa
adcb
mov
cli
std
pop
and
or
test
jge
movsb
and
popa
inc
or
and
mov
sub
test
push
inc
mov
jecxz
ss
inc
pop
inc
pop
cmp
test
push
xchg
dec
push
add
lcall
jns
xor
add
xchg
mov
rcrl
and
sbb
jp
sbb
lcall
push
jmp
nop
dec
lods
mov
xchg
mov
scas
add
jo
lret
fnstcw
adc
mov
jmp
fdivs
xchg
lret
xchg
mov
add
adc
inc
sbb
hlt
int3
sub
push
lret
push
popf
lods
xor
movsb
lcall
popf
lcall
jg
ljmp
mov
into
test
fisubrs
jbe
sarl
sbb
ljmp
inc
rcr
cs
pop
cmp
loop
fwait
arpl
or
bnd
mov
fnstsw
mov
mov
jl
cltd
push
cmp
mov
jge
xor
or
xor
mov
add
push
add
popa
loopne
icebp
xor
lahf
adc
hlt
xlat
aam
dec
mov
pop
inc
call
add
push
int3
inc
and
or
add
call
loop
jbe
lock
out
leave
negl
icebp
lds
or
mov
xchg
adc
fbld
lock
push
or
je
test
sbb
jmp
dec
push
nop
and
into
and
xchg
es
mov
inc
push
dec
and
xchg
nop
pop
pop
jns
nop
inc
jp
ljmp
xchg
lds
push
inc
and
int
inc
push
mov
add
inc
je
pushl
rcl
jl
mov
jle
sub
mov
aas
pop
and
mov
dec
or
jbe
pop
cmpb
aam
sbb
test
jg
mov
adc
popa
cmp
test
xchg
ljmp
sbb
bound
aas
ljmp
push
or
test
lcall
ljmp
push
pop
and
push
pop
loope
adc
call
rolb
pop
push
pop
dec
cld
and
sub
add
lea
xor
sbb
jmp
mov
lret
adc
inc
inc
adc
xor
lds
aam
sub
roll
scas
xchg
call
pop
data16
cmpsb
outsl
insb
cmpsl
outsb
dec
icebp
mov
push
or
out
sarl
in
dec
flds
mov
negb
pop
jae
jns
sbb
sbb
xor
jno
push
outsl
inc
sbb
stos
jns
dec
cwtl
and
call
pop
mov
sub
jae
pusha
hlt
sbb
cwtl
clc
incl
lds
cmp
in
lahf
or
inc
orb
add
ljmp
repz
push
call
sbb
les
or
xchg
cmp
icebp
aaa
xlat
popf
and
fidivl
ja
mov
fldpi
ljmp
data16
add
push
test
in
dec
jle
in
pop
outsb
mov
add
xchg
push
outsb
dec
cbtw
xchg
jg
in
jb
int3
out
insb
out
mov
enter
icebp
popl
call
mov
lcall
ljmp
std
imulb
repnz
notl
out
mov
jg
repnz
dec
repnz
inc
das
lock
push
cld
inc
cmc
push
lock
subb
ret
loopne
xchg
lahf
ds
pop
cmp
inc
jmp
xor
aad
arpl
adc
insb
jne
std
into
roll
cli
incl
and
xor
mov
ljmp
jp
add
in
loope
mov
sbb
addb
adc
adc
mov
push
sbb
arpl
and
lret
iret
hlt
test
add
cmp
xor
cmp
jle
popa
pusha
pop
inc
ret
popf
push
ljmp
xchg
mov
rorl
jno
jno
out
mov
and
cmp
fnstenv
adc
and
gs
arpl
mov
inc
and
mov
repnz
mov
shll
jecxz
inc
testb
push
aam
cmp
or
ljmp
adc
movl
adc
call
imul
pushf
lds
into
in
adc
fidivs
insl
xor
mov
repz
cmp
fwait
mov
loopne
xor
movsl
outsb
clc
push
addb
fmull
mov
into
jno
jl
lcall
shll
mov
mov
pusha
cwtl
call
aam
and
pusha
cmp
cmp
mov
mov
enter
jbe
int
icebp
outsb
js
in
es
mov
sub
xchg
lret
xor
mov
std
popf
lock
les
pop
shlb
and
sbb
ret
adc
push
jg
nop
mov
addr16
xor
mov
xchg
rclb
add
popa
pop
aam
push
adc
or
sub
pop
cld
rolb
push
add
mov
add
add
call
adc
sbbl
push
dec
shrb
push
daa
cmp
es
lcall
sub
aam
pop
mov
sub
hlt
das
mov
sbb
sub
sub
bound
sub
pushl
out
push
xchg
imul
pop
cmp
jbe
out
mov
aad
sbb
pop
add
xor
fidivrl
push
xor
int3
pop
inc
jbe
cmc
sbb
movl
inc
andl
cmpsb
dec
hlt
xor
dec
and
test
jno
or
lcall
xchg
or
pop
mov
jp
and
pop
lods
and
icebp
orl
push
dec
hlt
leave
and
xchg
xchg
pop
jp
fisttpll
lret
push
insb
ljmp
das
cmp
xchg
rolb
loope
popa
xor
adc
ud0
cmc
sbb
adcl
add
adcb
icebp
jmp
inc
push
jb
aad
repz
jne
in
push
mov
and
push
lcall
jne
fwait
in
sahf
adc
pusha
js
dec
fisttps
stos
xchg
js
pop
stos
fcmovb
in
and
test
add
fwait
pushf
aas
pop
sub
gs
decl
or
and
sbbb
pop
push
or
into
pop
icebp
jg
ret
push
dec
loopne
outsb
dec
pusha
add
lret
loop
add
mov
nop
rorb
xor
mov
cmp
decl
xchg
mov
jae
sub
push
or
clc
add
pop
add
fucomip
xchg
xor
xrelease
add
push
pop
imulb
js
aaa
incl
imul
xchg
popa
push
ja
fwait
movsb
cmp
jne
mov
jmp
aam
lret
out
test
fildl
xchg
daa
and
pushf
cmp
cmp
push
iret
adc
pushl
mov
jbe
dec
insb
inc
stos
popf
mov
adc
aas
inc
inc
pop
arpl
mov
push
imul
mov
inc
add
ljmp
adc
sub
decl
fidivrl
fnstsw
and
ret
stc
and
sbb
push
or
fsubr
xchg
push
mov
pop
adcb
ret
clc
shl
sbb
incl
sub
test
jne
pop
or
sub
cmp
and
fbstp
ret
adc
xor
add
mov
dec
test
incl
or
repnz
mov
adc
dec
in
sbb
out
dec
lock
jmp
jp
in
adc
vcvtdq2ps
insl
rol
xchg
and
test
mov
cmp
ljmp
lock
sbb
jecxz
and
xor
inc
xchg
in
xor
mov
js
sub
mov
mov
test
orl
sub
call
pop
movsl
adc
or
icebp
cmp
int3
pop
add
cmp
in
movsb
shrl
std
fadd
xor
call
inc
pop
or
das
pause
stos
ret
pushf
xlat
ds
jmp
xchg
in
in
pop
adc
push
shlb
rcrl
divb
dec
sbb
jge
push
or
inc
repnz
xchg
cltd
scas
insl
push
jmp
add
mov
lcall
bswap
pop
inc
ljmp
mov
rcr
insb
xchg
pushf
test
jmp
js
inc
xchg
ss
jnp
lods
dec
xlat
enter
out
cmc
insb
mov
push
mov
gs
sub
loopne
hlt
cmpl
or
inc
jb
sub
jno
ret
lock
mov
jne
add
sti
and
sub
jl
jg
and
add
mov
imulb
movsl
pop
int3
push
push
mov
orl
arpl
pushl
leave
add
and
push
push
xchg
andb
stc
mov
fidivs
add
and
and
js
xlat
popa
jae
gs
popa
sbb
mov
push
mov
inc
pop
mov
insl
adcb
push
inc
ja
pop
sub
dec
dec
je
pop
jo
cmp
std
jmp
sub
dec
clc
push
adc
icebp
incl
inc
cwtl
xchg
push
add
ds
adc
inc
add
testb
imul
jmp
jg
addr16
xor
lds
daa
push
jp
inc
push
add
test
push
cwtl
push
push
test
push
xor
das
imul
call
imul
adc
in
xor
and
mov
adc
xor
jp
ret
xor
pusha
xchg
mov
sbb
inc
pusha
xchg
push
addl
pop
popf
test
push
and
notl
and
dec
orl
mov
mov
mov
add
rclb
cmpsb
movsb
and
mov
and
jge
test
js
aaa
xchg
cld
test
pop
fiaddl
mov
or
adc
in
pushl
inc
or
mov
out
mov
inc
pusha
or
psubq
sub
jg
in
gs
bound
inc
or
jo
add
mov
and
push
jo
fcmovu
cmp
decl
lock
xor
adc
or
add
mov
xchg
xor
imul
aas
inc
sub
sbb
add
inc
fcomip
add
add
repnz
inc
call
push
xorl
jge
icebp
push
inc
aaa
and
push
inc
inc
pop
dec
and
nop
fs
cwtl
push
push
or
in
jg
or
add
push
jno
imul
cld
stos
and
push
pop
xlat
sbb
in
mov
cltd
push
jp
xor
push
mov
jg
pushl
hlt
push
cmp
xchg
inc
jp
push
jne
push
pop
mov
inc
push
dec
push
push
incl
js
jmp
push
dec
fs
cwtl
int
push
pop
data16
aam
test
push
xor
xchg
inc
call
dec
xchg
sbb
dec
cmpsb
mov
xorb
mov
inc
pop
cli
jmp
jnp
mov
popa
xor
mov
xor
sbb
pop
icebp
ja
mov
gs
mov
jp
and
dec
rcll
add
pop
decl
cli
es
lea
or
push
inc
lea
popa
adc
call
movsl
inc
lea
and
ret
and
mov
out
aaa
xor
pop
clc
mov
push
and
mov
or
inc
xchg
push
cld
mov
lods
jo
je
sub
sbb
or
in
test
push
mov
mov
xlat
movsb
pop
repz
pop
mov
xchg
addps
aaa
pusha
call
clc
andl
ljmp
inc
cmpsb
repnz
loopne
daa
ljmp
popa
sub
fldenv
rclb
push
cmpsb
push
andl
add
jmp
sti
mov
inc
jmp
imul
fst
call
push
aas
jnp
sub
push
stc
push
arpl
add
push
dec
sbb
add
push
jg
add
dec
loopne
jne
sbb
data16
xor
inc
xchg
iret
inc
jbe
cmpsl
push
mov
adc
xchg
jb
add
mov
jg
scas
xor
or
push
cmpb
movb
and
inc
inc
mov
lret
pop
mov
cwtl
mov
mov
addl
out
xchg
mov
ret
sbb
lcall
inc
lcall
arpl
clc
mov
push
or
push
and
xchg
out
cmpsb
popa
cld
lcall
lcall
mov
xchg
push
pop
push
bound
xchg
jg
dec
push
insl
inc
push
popf
xlat
ljmp
aaa
mov
jg
test
and
gs
cli
cmp
inc
xor
pop
or
repz
jg
jg
adc
jmp
or
nop
cmp
xchg
ljmp
or
or
aad
or
jmp
adc
int3
adc
xchg
xor
sbb
pop
adc
sbb
xor
divb
adc
inc
pushl
hlt
mov
inc
popa
sub
popa
sub
popa
es
xchg
out
jp
mov
jg
fsubl
xchg
jo
sbb
lock
cs
add
notl
dec
mov
cwtl
push
and
imul
ljmp
add
push
push
insb
mov
push
inc
dec
movsl
add
fucomip
clc
jo
gs
push
inc
add
inc
stc
mov
jg
xor
bound
call
pop
ja
xor
jbe
ljmp
jbe
sbb
fs
pop
std
lret
cwtl
imul
js
xor
decl
adc
out
sbb
mov
in
mov
mov
xor
xchg
pushf
xchg
push
pushf
scas
jno
insl
adc
stos
mov
lock
xchg
xor
inc
dec
mov
sbb
pop
cli
mov
push
pushf
nop
es
jb
test
fsubrs
adc
subb
bound
fmull
roll
popf
fucomip
pop
xlat
cmp
test
out
mov
lods
xchg
mov
xor
iret
mov
iret
cmc
pop
push
aam
jo
loope
sub
addb
pop
xchg
clc
jg
pop
orb
cmp
leave
pop
divl
push
add
lcall
jns
adc
pusha
mov
orl
pop
mov
pop
add
jp
pop
pusha
addb
xchg
sub
fidivs
fcompl
lcall
jne
push
push
push
cmp
cltd
and
push
data16
pop
hlt
jmp
push
roll
sub
mov
or
push
push
mov
cs
mov
pop
sarb
xorb
adc
mov
push
sub
pop
pop
stc
add
shlb
mov
ja
cli
aaa
jge
hlt
in
mov
add
inc
inc
jmp
rorl
cwtl
xor
test
jg
xchg
pop
lret
insl
adc
test
jp
test
mov
call
mov
cmp
js
jb
mov
or
fcmovnbe
pushl
gs
sub
xchg
xor
and
mov
jp
out
pushf
je
mov
xor
mov
xor
push
mov
test
clc
decl
jae
lahf
xor
or
lea
ljmp
and
dec
gs
push
pusha
andb
daa
add
mov
cld
ljmp
jle
subl
sub
jmp
movsb
cmp
incl
loope
dec
sub
add
decb
jg
adc
mov
pop
fimull
push
cmp
out
cli
test
test
cmp
pop
mov
push
xor
dec
sbb
xchg
out
cli
decl
mov
dec
popa
dec
nop
inc
jns
popa
testb
out
push
xor
cmpsb
scas
cmp
xor
shl
lock
mov
xor
aas
sub
int3
mov
stc
mov
cmp
les
mov
daa
rolb
push
je
test
push
pop
cmp
adc
add
movl
shlb
adc
inc
cli
inc
mov
add
mov
mov
xor
and
xchg
push
rcrl
mov
jbe
xchg
mov
fcompl
mov
pushl
fiaddl
cmp
out
sbb
sbb
test
jecxz
aaa
sbb
sbb
les
mov
sub
cmp
movsl
push
add
xor
lcall
decl
lcall
cwtl
inc
pop
sub
fmuls
push
jmp
dec
nop
pop
aad
mov
cmpb
push
cmp
and
fcomp
stc
mov
fsubs
pushf
dec
into
mov
into
sbb
cli
pushl
mov
enter
hlt
add
lock
addb
nop
add
gs
lods
call
int
in
outsl
or
adc
outsb
lret
mov
inc
lea
fst
fstl
pop
ljmp
loop
fnstcw
mov
ret
movsb
pop
xor
fsubp
cmp
imul
iret
idiv
fisubs
ljmp
cmp
or
xchg
adc
leave
inc
xor
inc
imul
pop
push
cld
or
push
enter
xchg
xlat
pop
mov
rcll
pop
ds
adc
clc
jg
movsl
sub
mov
jg
add
outsb
sub
push
shl
push
dec
cs
xor
add
in
addl
ja
mov
pop
out
cmp
jl
aam
je
shll
sub
insl
xchg
xor
xchg
inc
push
mov
cwtl
xchg
lcall
pop
jge
popl
xchg
jno
lods
ja
inc
push
test
xor
and
aaa
cld
jmp
mov
pop
mov
incl
decl
inc
stos
sub
icebp
in
inc
dec
popa
pop
movsl
test
mov
mov
popf
test
mov
imul
inc
add
cmp
cld
ljmp
mov
mov
lret
mov
aaa
jmp
fstpt
movsb
int
ficomps
imul
scas
fcmovne
outsl
jmp
and
xchg
xchg
and
aam
xchg
sbb
dec
and
std
mov
xchg
lock
jecxz
xlat
dec
adc
int
lds
pop
rcr
lcall
clc
adc
mov
adc
or
jmp
rcrb
add
jne
ljmp
fsubrp
insl
fsubp
lods
fisubs
sarl
insl
mov
ret
leave
add
add
cmp
call
test
cmp
xchg
and
or
adcb
adc
fcomip
incl
add
pop
adc
adc
add
jb
sbb
les
call
mov
inc
pop
cs
cmovae
in
mov
adc
js
push
std
ja
incl
push
lcall
push
int3
mov
push
sbb
loopne
cwtl
jmp
decw
pusha
xchg
add
subl
clc
xor
incl
jl
ja
mov
gs
loope
xchg
out
and
cltd
xor
mov
inc
cmpl
xchg
push
leave
hlt
icebp
out
fnstsw
negl
push
mov
dec
sub
push
or
out
fcmovbe
push
stos
or
or
mov
cmpsb
and
dec
jle
fcmovu
insl
xor
xlat
or
fdivrs
popf
rorl
es
and
into
movsl
test
mov
cmp
ja
fwait
or
ret
inc
cmpsl
mov
inc
ret
lock
pushl
je
pop
std
jg
xchg
add
iret
stc
or
stc
aas
mov
and
or
lahf
pop
cli
fbld
test
cli
aas
mov
repnz
mov
incl
aas
pusha
sti
lcall
sar
sti
xchg
add
loope
mov
cld
ret
jg
mov
mov
into
scas
add
cld
sbb
sub
mov
js
idiv
in
mov
rclb
loopne
pop
es
jecxz
repz
pushf
xchg
movsl
popa
push
inc
mov
jg
add
jb
cmp
hlt
push
aas
sub
adc
xorl
adc
add
cmp
inc
or
in
mov
jnp
dec
movsb
sub
incl
pop
sub
xor
mov
outsl
xor
dec
dec
push
mov
sbb
xchg
test
mov
xchg
dec
cli
dec
fldenv
mov
incl
lret
dec
mov
sbb
lock
repz
shrb
ljmp
mov
cltd
adc
scas
sub
flds
pop
mov
dec
push
in
dec
mov
mov
pop
gs
push
xchg
das
aad
dec
pushl
outsl
xorb
add
imul
sbb
lret
sarb
int3
popf
sub
fisttps
xor
mov
rcll
in
sbb
lea
lcall
aaa
imul
xor
fdiv
in
gs
pop
cs
repz
lock
mov
aaa
xchg
loope
repnz
repnz
cmp
add
xchg
arpl
das
and
repz
call
cmp
xor
adc
jle
ds
jmp
adc
push
ljmp
incl
dec
sarb
sar
sti
iret
cmp
jmp
mov
mov
andl
sbb
orl
clc
nop
fwait
popa
dec
sbb
les
and
xchg
inc
adc
add
adc
add
adc
aas
push
arpl
ds
mov
das
mov
ds
sub
cmp
sub
nop
mov
lods
pop
jg
and
push
repz
xor
xor
mov
test
sbb
adc
shlb
xor
xchg
push
mov
stos
mov
push
pop
daa
test
inc
mov
insb
std
ljmp
cmp
cwtl
pop
pop
popa
loope
xor
fdivs
std
inc
lret
js
insl
xor
dec
mov
inc
sbb
or
call
xor
xor
dec
mov
lcall
and
jg
cmp
mov
xor
dec
sub
xor
orb
ljmp
sub
sub
mov
stos
das
lcall
xchg
cmc
mov
call
stos
cmp
movsl
mov
cmp
in
into
jo
ret
shrb
jmp
ljmp
imul
test
out
xor
sbb
mov
mov
cmp
out
mov
inc
add
aad
inc
xor
add
lcall
add
repz
lods
mov
mov
or
sbb
cwtl
cmp
hlt
mov
add
stos
dec
call
mov
out
sub
mov
pop
sbb
add
test
mov
fisttps
adc
and
or
nop
test
ret
dec
sub
xchg
lret
incl
and
pop
sbb
sti
fldl
xorb
jnp
adc
fdivrp
out
popa
adc
jg
jo
mov
jl
mov
adc
xchg
sbb
andb
cld
dec
dec
sbb
ljmp
mov
pop
jnp
sbb
xor
insb
push
jne
fs
pusha
addr16
lcall
and
sbb
or
jb,pn
jb
cmpsb
mov
loop
stos
or
out
dec
js
xchg
dec
adc
inc
lods
jecxz
mov
inc
mov
daa
adc
loopne
lcall
push
push
dec
pop
jge
cmp
pop
pop
xchg
daa
push
sbb
push
dec
loopne
or
addr16
sub
lods
mov
in
adcb
fwait
add
cmpsb
daa
lret
enter
fadd
ja
hlt
pop
ljmp
and
mov
decl
and
bnd
pop
fucom
test
bound
js
cs
mov
lock
and
incl
dec
cld
cmc
inc
mov
mov
ja
or
xor
xor
mov
jbe
and
push
dec
sub
incl
xor
shlb
arpl
mov
lret
jmp
lret
add
in
ds
add
xchg
mov
inc
jecxz
aam
arpl
mov
aas
adc
push
and
xor
cld
ja
rcrb
or
adc
mov
sub
mov
cmp
jecxz
ss
pushl
pop
xchg
call
lea
fwait
loop
cltd
bound
dec
ret
sub
mov
ficoms
xchg
mov
sub
cmp
cmp
xchg
inc
xor
mov
inc
decl
aam
xorb
inc
aam
mov
data16
jbe
mov
push
decb
cs
mov
or
jb
push
aas
push
pop
mov
inc
cmc
rclb
inc
push
lcall
clc
jns
sbb
lahf
add
cmpsb
and
add
and
cmp
ficoml
xchg
push
test
jp
aaa
push
xchg
and
scas
mov
repnz
dec
mov
cmp
mov
sbb
aas
xchg
cmpb
mov
out
je
add
dec
cmc
ljmp
pop
out
pop
fimuls
add
adc
xor
adc
out
cli
fists
pop
ljmp
sub
pop
mov
inc
cmp
out
clc
shlb
push
lret
xchg
inc
lods
rorl
int3
bound
jmp
pop
inc
xor
out
int3
out
mov
es
mov
push
ljmp
add
mov
add
andl
cmpb
sbb
lock
pop
and
sbb
loopne
out
test
jmp
sar
xor
mov
movl
inc
stc
sbb
mov
mov
pop
cs
outsb
insl
fadd
es
cmp
add
mov
sub
addl
lods
gs
ds
xchg
rcrl
adc
data16
int
cs
xor
lcall
fsubl
in
fsubs
stos
pop
push
shrd
jl
and
rcll
jp
sbb
cmp
and
add
test
xchg
mov
add
lret
loop
cmpsl
dec
rorb
mov
and
imul
sub
sbb
ljmp
rclb
scas
pop
movsl
ss
lret
and
ret
in
daa
imull
xlat
dec
mov
cwtl
adc
int3
push
pusha
bound
incl
mov
rclb
xor
out
loop
push
mov
xchg
push
or
jb
mov
call
pop
ret
std
xorb
lods
xor
lcall
mov
xor
mov
mov
fsts
xchg
gs
mov
push
cmp
sbb
daa
fs
decl
mov
rorl
and
jae
imul
sub
ljmp
cmc
ljmp
push
pop
push
inc
test
roll
cmp
popa
shrb
sbb
mov
ds
movsl
push
dec
mov
insl
inc
fstpt
negl
lea
jmp
pushl
mov
mov
xor
hlt
pcmpgtb
mov
add
cmp
adc
popa
insl
imul
xchg
push
mov
adcb
clc
jg
mov
mov
pop
nop
dec
ja
push
sbb
dec
out
xor
hlt
add
icebp
add
push
mov
aam
lods
xchg
dec
jno
sbb
jo
cmpl
out
and
loopne
addr16
push
add
test
arpl
add
call
push
inc
je
push
jns
sbb
lock
test
add
jo
imul
dec
dec
lds
shrl
dec
lods
mov
mov
outsl
daa
xor
pop
shrb
sub
adc
nop
push
push
ss
sti
xchg
sbb
jg
or
mov
jmp
cmpsl
pop
pop
js
pop
ljmp
fs
mov
lret
in
jg
cmc
xchg
push
and
cmp
jmp
xor
out
insb
xchg
js
xor
imul
out
sbb
leave
pop
adc
cmc
mov
or
jb
xor
decl
pop
cs
ds
mov
push
inc
xor
pop
popl
jle
lea
shr
ljmp
sbb
imul
fdivl
push
outsb
ja
fwait
sub
jg
inc
cld
cmpsb
ss
mov
xor
insb
loop
outsb
decl
dec
jbe
lods
jg
ljmp
idivl
rcrb
das
ja
int
pcmpeqw
test
incl
jmp
idivl
mov
pop
xrelease
fistl
pop
jns
out
xor
cmpsb
mov
add
or
mov
jmp
addr16
cmp
cmp
sbb
dec
sbb
sbb
xor
xor
push
xor
clc
mov
not
add
push
adc
add
sbb
cmp
pop
orl
adc
movsb
jmp
dec
cld
lcall
cltd
pushf
add
sub
cld
or
push
cmp
mov
mov
xor
lcall
sub
loopne
xor
movsl
decl
adc
sub
adc
ret
cmp
call
stc
pop
mov
mov
fsubl
dec
mov
mov
fldenv
jle
xor
push
decl
cwtl
push
adc
inc
fnstenv
scas
call
cmp
mov
ljmp
adc
lahf
mov
aam
lods
call
dec
inc
nop
push
adc
mov
sbb
mov
pop
nop
cmc
push
pushl
incl
mov
push
or
sbb
mov
jl
incl
mov
ret
ds
addr16
addr16
insb
lret
ss
addl
push
loop
hlt
inc
mov
cwtl
popf
hlt
dec
scas
stc
imul
adc
outsl
cli
orb
aas
xor
mov
jg
shll
add
sbb
mov
sahf
or
pusha
cmp
aad
mov
rcll
or
inc
xchg
add
cltd
xchg
call
push
mov
call
fadds
popa
inc
bound
mov
or
and
jmp
ds
add
pop
pop
cmp
xor
mov
inc
mov
pusha
fstps
jb
sbb
daa
mov
fwait
mov
or
pushl
mov
mov
stos
stos
sub
pusha
call
ljmp
lods
sub
ret
cwtl
sub
subl
mov
inc
stos
or
cmp
outsl
lcall
lcall
enter
sbb
pusha
mov
inc
sbbb
adc
jp
sti
stos
sahf
push
jmp
adc
and
nop
fisubrs
loop
mov
sub
jno
dec
mov
sti
mov
add
lds
sbb
loopne
pop
aam
pushl
and
pop
mov
cmp
push
lret
pop
sbb
andb
in
or
sbb
or
push
into
imul
mov
inc
jg
xchg
es
push
cwtl
aas
sub
mov
hlt
loope
ja
push
adc
adc
push
jb
xor
jg
test
imulb
mov
or
xchg
decl
js
adc
dec
jns
xchg
mov
add
lea
xchg
dec
xor
pop
pusha
adcl
inc
pop
and
sti
das
clc
dec
mov
mov
or
leave
test
push
gs
xor
pop
pop
dec
loope
dec
unpckhps
sub
and
std
rorl
jge
inc
ret
mov
jle
lret
mov
lret
ret
mov
ljmp
fs
mov
cmp
and
xor
enter
stos
inc
std
incl
adc
stos
mov
sub
stos
decl
and
and
xchg
enter
sub
xchg
xor
nop
cmp
les
lcall
enter
adc
and
mov
or
inc
pop
lods
inc
and
mov
and
ljmp
lods
and
lcall
cmp
inc
pop
shll
xchg
and
ljmp
sbbl
int
push
aad
es
je
pusha
std
sub
mov
in
jmp
mov
mov
push
mov
jp
push
aas
fsubs
cli
mov
jl
sbb
and
sbb
hlt
add
aaa
fldl
cmp
push
xchg
fmul
incl
dec
or
test
jg
daa
or
clc
pop
loopne
xor
dec
or
test
inc
je
std
adcl
gs
pushl
rcrb
xor
push
popf
dec
mov
movsb
jmp
arpl
inc
cld
sbb
pushl
jb
mov
jecxz
add
sub
lods
mov
stos
scas
cli
ljmp
jmp
lret
shll
and
xor
and
inc
cld
lea
sub
loop
cltd
insl
xor
sub
mov
adc
cmc
push
xchg
mov
cmpb
subb
incl
mov
sub
cwtl
adc
test
ds
mov
movsb
inc
mov
enter
aas
mov
cmpsl
pop
lcall
jmp
pop
pop
pop
std
lcall
sarl
fadd
mov
push
sub
push
adc
lret
dec
mov
lods
push
popa
adcb
loopne
ss
mov
mov
hlt
ds
inc
imul
push
outsl
fs
cmc
sbb
ss
cli
outsl
and
fildl
fstpl
incl
incl
pusha
inc
inc
mov
xchg
inc
fsubrs
bound
inc
dec
add
mov
dec
inc
rcl
sti
in
fdivr
decl
andl
mov
inc
add
cltd
mov
or
outsl
mov
push
cmp
jg
push
lcall
mov
test
jne
mov
ljmp
cmpl
fisttpll
stc
pop
stos
xor
iret
xchg
fadds
mov
ljmp
jp
or
ror
stos
or
nop
inc
lods
pop
jno
scas
test
mov
sti
or
in
cmp
pop
push
iret
rcrb
sub
repnz
mov
sub
pop
xor
mov
shl
and
fisubrl
les
cwtl
and
incl
and
adc
or
testb
dec
and
xor
or
stos
mov
adc
cli
add
stc
clc
pushl
mov
fucomi
fwait
sub
fwait
mov
push
dec
aad
push
mov
gs
sub
pop
mov
xor
and
cmp
fnsave
js
enter
lcall
cmpsb
pop
xchg
aas
jl
arpl
test
mov
push
call
xchg
icebp
fists
cmp
shlb
sahf
or
pop
cmc
lds
out
and
adc
fidivrl
fldenv
ret
pusha
clc
stc
cmp
pushl
add
sbb
adc
cltd
push
xchg
popa
or
xchg
add
pop
xchg
add
scas
xchg
movsl
xchg
je
jmp
sbb
adc
mov
xchg
adc
push
repz
xchg
push
dec
pop
adc
push
cld
add
ljmp
mov
dec
jae
pop
movsb
lcall
push
sub
fdiv
pop
mov
cld
pop
cmpsb
jns
sub
cwtl
and
mov
sbb
sbb
popf
sbb
mov
int3
push
mov
and
ljmp
ljmp
push
nop
mov
testb
add
movsl
cmp
sub
jmp
cltd
nop
cmp
add
rcrl
decl
nop
fmuls
popf
mov
icebp
adc
lock
dec
repnz
lret
xor
mov
dec
dec
cmc
mov
xor
sub
jmp
bound
imul
loop
mov
sub
aad
inc
pop
aad
xor
adc
decl
imul
inc
xchg
sbb
scas
stos
rcrl
dec
gs
stos
and
fcomip
jmp
pop
cwtl
ljmp
mov
inc
mov
push
adc
add
mov
or
addb
cs
xchg
loop
test
js
mov
push
gs
call
xlat
mov
mov
inc
pop
repnz
or
mov
adcb
mov
jmp
les
es
pop
cmpsb
data16
mov
ret
mov
xchg
sub
and
cli
fisubrs
mov
frstor
push
jb
push
push
mov
pop
inc
ret
insb
icebp
mov
cmp
mov
imul
push
cmp
xor
or
pop
in
aas
cwtl
hlt
sub
lds
push
xor
insb
and
rorb
jmp
rolb
jl
sub
call
fcomi
repz
nopl
ljmp
pop
jecxz
repnz
pop
cmp
int
outsl
loop
dec
call
sbb
inc
ljmp
sub
mov
add
ds
shll
cltd
faddp
in
pop
lds
call
jl
mov
sub
jecxz
mov
into
pop
fwait
mov
xchg
cwtl
scas
pop
xchg
pop
pop
cmp
sbb
mov
jo
fstl
clc
sbbl
cmpsb
xor
adc
mov
xlat
jp
jmp
jge
and
adc
jp
dec
icebp
cld
xor
jecxz
leave
pushl
push
mov
aad
movsb
cwtl
dec
bound
arpl
popf
fmuls
push
pushf
mov
jns
push
mov
xchg
cwtl
clc
and
test
pop
jns
xor
jo
gs
xor
mov
fdivrp
pop
mov
push
push
add
rcl
push
cli
call
or
and
sub
or
or
mov
inc
push
call
iret
and
lods
mov
mov
and
mov
mov
jl
mov
cltd
repnz
cmpl
cmp
rcll
nop
inc
xchg
call
mov
jmp
pop
sub
xchg
mov
rcrb
jne,pt
mov
enter
mov
sbb
lcall
arpl
and
jno
mov
sub
loop
push
std
out
out
out
xor
jo
mov
push
loop
mov
xchg
dec
clc
repnz
imul
arpl
in
aad
sbb
pushl
push
rolb
dec
xchg
push
adc
or
cmpsl
push
xchg
pop
test
js
movsb
inc
cmpsl
push
cld
pushl
or
arpl
add
js
cltd
clc
mov
pop
pop
xchg
cld
pushl
cmpsb
sub
mov
jno
rclb
rcrb
hlt
mov
lds
jecxz
add
jg
sub
and
rorb
dec
pop
and
or
cld
mov
cwtl
push
jg
or
sbbb
pop
subl
pop
cld
sbb
lahf
lret
cli
push
gs
stos
mov
cmp
cmp
push
dec
cs
mov
add
or
xchg
xchg
jle
or
aaa
lret
sbbl
cmp
push
imul
mov
mov
cmp
lcall
stos
jmp
sarb
push
add
outsb
cmp
outsb
ljmp
pop
jp
out
mov
testb
scas
icebp
fists
fcmovne
adc
mov
rorb
xlat
pop
mov
mov
add
push
ljmp
out
shrb
cmp
andl
sbb
aaa
out
lret
jecxz
cmpsl
sbb
adc
cwtl
add
inc
cmp
into
fnstenv
jnp
xchg
loop
add
push
orb
lds
out
sar
mov
test
and
lods
dec
xorb
adc
xchg
aaa
jo
aas
add
ljmp
xchg
inc
push
inc
xor
xor
mov
ds
mov
or
mov
xor
jg
cmp
int
nop
sbb
mov
lret
xchg
xor
mov
aam
lods
clc
stos
sub
xor
sbb
pop
dec
jno
pop
popf
sub
stos
and
xor
and
addr16
cmpsb
dec
cmp
mov
jmp
popf
das
pop
stos
xchg
pop
mov
pop
pushf
popa
mov
cmc
mov
mov
cmp
insb
lret
add
cli
mov
xchg
sarl
pusha
mov
in
or
out
iret
mov
mov
fldt
xor
push
iret
cmpsb
mov
adc
pop
fs
insb
xchg
dec
xchg
xor
rcl
add
jns
and
fwait
mov
loope
inc
int
sbb
pushf
sbb
gs
jg
sti
push
lods
mov
adc
test
popa
add
jbe
dec
lahf
test
cmp
test
call
lock
call
inc
adcb
push
inc
mov
adc
xchg
mov
or
stos
fldcw
andl
div
fistps
jle
fcoms
lahf
jg
add
ja
lcall
jge
sbb
in
shl
jo
popa
fistpl
add
mov
aaa
cmp
jmp
sbb
test
insl
mov
popa
mov
push
test
mov
lock
add
rcrb
xor
fisttps
fdivrs
pop
cmp
inc
call
cli
xchg
cmp
jmp
rolb
push
push
xchg
jo
mov
incl
cmp
sbb
test
fadd
xchg
pmaxsw
jbe
jno
or
dec
pop
and
test
cmp
adc
dec
jnp
cmc
les
jne
inc
test
jns
movsl
ljmp
gs
sqrtps
and
scas
jg
mov
adc
je
sbb
add
cmpsb
adc
push
sahf
lahf
sub
ljmp
mov
lods
mov
test
cmp
dec
stos
sub
lcall
jecxz
push
cmp
inc
incl
lcall
dec
pop
leave
les
xchg
cmp
pushl
push
adc
pop
int3
add
enter
pop
fcoml
in
lock
xchg
cltd
bound
cmc
movsb
das
sar
into
scas
loop
cmpsb
or
inc
lods
inc
adc
lds
push
cmp
mov
inc
add
or
push
pop
xchg
andl
fwait
push
ljmp
test
cmpsl
test
iret
enter
pop
test
fsubl
pop
outsb
shrb
sbb
jae
insb
mov
jns
dec
push
sahf
adc
lds
and
lcall
jl
add
pop
pop
ljmp
pusha
pop
jns
jg
lcall
rcl
mov
fdivr
mov
aaa
cld
sbb
enter
pop
ret
neg
sub
popa
fsubrl
or
call
loopne
mov
mov
loope
adc
mov
sbb
ds
imul
bound
cmp
lret
ja
xchg
cmp
test
cli
xchg
pop
stos
jg
lock
es
addr16
xor
sar
lcall
mov
jp
cmc
inc
scas
sub
jmp
pushl
dec
or
add
movsb
fcomps
sbb
insl
adc
jno
incl
call
ss
sub
mov
in
arpl
xchg
ret
mov
decl
sub
push
pop
scas
pop
xchg
aam
jns
fcoms
idivb
add
ret
bound
cwtl
xchg
pushl
ljmp
mov
mov
mov
xchg
push
adc
mov
cwtl
pop
sub
sub
xchg
addl
cmp
js
inc
popa
dec
loopne
push
popf
mov
and
add
dec
adc
ret
xor
adc
pushl
sbb
xor
pushf
or
inc
ret
call
push
nop
sahf
addl
dec
inc
sbb
pop
or
adc
jg
pop
movb
jp
rorl
dec
and
adc
mov
add
incl
xor
jl
xchg
or
pop
aas
jl
fists
les
mov
mov
gs
aaa
and
or
jns
insl
insb
jecxz
mov
mov
jg
gs
test
fildl
xchg
adc
incl
jno
fisttpl
xchg
sub
ljmp
jmp
add
adc
addb
incl
in
mov
lcall
or
sti
aam
adc
xchg
xchg
jo
dec
adc
aam
cli
mov
mov
adc
aam
iret
pop
and
lahf
cmpsb
mov
adc
and
sub
and
cmpsb
cmp
push
shl
sbb
dec
call
jb
dec
xor
es
cmp
jns
mov
cmc
stos
cmp
sbb
push
lock
pushl
sub
popf
enter
scas
adc
ror
and
mov
ja
nop
lret
mov
xchg
adc
ljmp
fdivs
xchg
and
ss
gs
sub
jo
mov
test
push
mov
pop
adc
mov
and
push
mov
adc
cmp
scas
incl
pusha
xor
and
test
xchg
fs
call
out
rcrl
xor
adc
and
dec
mov
subb
xchg
push
and
or
dec
movsb
sub
sbb
xchg
adc
incl
or
mov
sub
shll
shrb
dec
fdivr
push
adc
es
xchg
jmp
mov
adc
bound
pop
mov
push
in
lea
pop
adc
mov
iret
ljmp
xchg
mov
mov
mov
mov
or
push
push
or
mov
add
incl
and
or
pusha
jb
in
aad
mov
bnd
fildll
sbb
mov
lds
insb
jnp
inc
pop
mov
decl
jo
sub
dec
cmc
pop
push
and
or
xchg
movsb
mov
xor
icebp
xchg
icebp
nop
mov
mov
inc
jmp
mov
cld
xchg
cmp
dec
lcall
add
adc
movsl
pushf
daa
inc
inc
push
lahf
icebp
adc
ret
mov
fidivl
ret
jo
and
mov
add
mov
shrb
call
nop
addl
sbb
push
divb
imul
adc
xchg
call
mov
in
movl
push
inc
cwtl
mov
lahf
in
cmp
rcrb
and
imul
jbe
call
sbb
mov
mov
jmp
push
cmpb
xor
pushf
inc
mov
iret
sub
popa
test
jg
or
roll
sub
mov
cmp
dec
clc
push
imul
ret
les
cltd
insb
pop
mov
in
decl
arpl
mov
xchg
test
cmp
jmp
xchg
and
sti
test
mov
push
jne
addr16
bound
jne
sti
inc
xor
stos
fwait
mov
and
fdivrl
mov
jnp
cmpsl
movsb
and
add
xor
iret
notl
stos
dec
repnz
decl
gs
das
sarl
dec
inc
lret
xchg
aad
stos
imul
int
adc
clc
xor
adc
fcomip
loope
mov
xor
cmp
sbb
xlat
xchg
xor
pop
pop
xchg
cli
aas
lahf
rcrb
cs
arpl
jo
rorl
insb
popf
adc
pop
pushf
mov
insl
pusha
xor
pop
add
inc
xchg
xchg
into
jne
out
sbb
inc
jne
add
sarb
add
mov
push
mov
sub
ljmp
test
xor
lahf
cmp
or
fwait
sahf
sbb
loope
pop
call
cmc
call
ret
mov
add
sub
pop
mov
aam
or
or
aam
pop
sub
mov
push
or
hlt
js
decl
ja
stos
and
or
lock
jg
push
pusha
or
nop
adc
scas
and
movsb
lods
adc
loopne
loopne
push
out
clc
jecxz
aam
mov
xor
ret
rcr
nop
pop
mov
inc
imul
jb
inc
mov
imul
fldt
cltd
and
repnz
inc
jp
xchg
jle
stc
decl
hlt
das
cmp
fnstsw
movsl
push
test
lcall
pop
shlb
push
jbe
pop
add
add
rorl
js
ljmp
cld
or
add
or
xchg
jnp
shll
mov
and
fcoml
cmc
or
call
or
movsl
test
xchg
pusha
int
aam
andb
pop
and
bound
loope
inc
loopne
lods
sub
lcall
int3
gs
xchg
imul
sbb
jns
mov
or
sub
loop
sar
orl
dec
leave
or
inc
dec
insb
ret
push
xor
pushl
rcl
or
mov
icebp
mov
lret
push
fstpl
call
aam
roll
lds
rorb
sbb
push
push
nop
xor
sbb
add
negb
pusha
jmp
loopne
sbb
mov
insl
mov
push
mov
mov
cli
push
adcl
pop
mov
movsl
push
fmulp
cwtl
ficompl
leave
addb
inc
push
rorl
insb
rclb
scas
pusha
les
les
and
leave
sub
int
pop
test
adcl
add
icebp
out
test
jns
sub
mov
or
mov
inc
adc
jg
incl
push
into
addl
stos
jle
int
jo
xor
mov
pop
dec
push
dec
int
or
pushf
pop
mov
movsl
fisttps
movsb
inc
push
and
push
in
push
inc
inc
push
addb
inc
pop
cmp
out
and
pop
xorb
inc
bound
jmp
fcoms
push
xor
sbbb
mov
or
dec
jp
pop
cwtl
jo
or
inc
sti
dec
rcrl
mov
lret
pushl
aad
rorl
and
dec
sub
hlt
fs
les
lds
lea
adc
jmp
sbb
fwait
cmp
pop
cmp
mov
mov
mov
int3
and
mov
mov
imul
inc
push
inc
loope
pop
aam
sub
cmpxchg
fisttps
and
sbb
rorl
adc
aam
mov
jmp
add
cwtl
pop
call
rcrl
and
sub
jmp
dec
push
aad
push
mov
inc
dec
popf
push
mov
dec
loope
decl
push
dec
sbb
xor
inc
cltd
lods
xchg
cmp
cmpsb
hlt
mov
fiaddl
or
addl
mov
mov
ret
imul
add
xchg
sbb
jecxz
dec
ljmp
sahf
inc
sbb
mov
sub
mov
ret
jae
mov
xorb
mov
pop
incl
test
scas
clc
aam
rclb
sub
inc
jle
int
pushf
and
test
jnp
xlat
call
jl
sarb
lcall
add
xorl
incl
and
insb
add
fsubl
cmp
aaa
add
ds
and
mov
jno
in
decl
xlat
aas
sbb
fs
inc
ss
dec
fs
out
push
inc
jle
inc
push
mov
test
cmc
cli
cmp
cli
rclb
mov
stos
sub
loop
nop
pop
rorb
or
enter
mov
inc
inc
test
mov
movsb
rcrb
pusha
lret
mov
dec
sub
jg
ljmp
in
mov
pushf
cmp
push
adc
and
adc
inc
dec
mov
jge
cmc
fiadds
dec
jmp
pushl
sbb
mov
dec
and
adc
add
pop
and
les
popf
aam
push
push
in
inc
inc
inc
fsts
jmp
xchg
int3
insl
inc
push
test
sbb
inc
popf
xchg
aam
je
dec
in
pop
push
mov
mov
pop
pop
rorb
out
or
fisubs
lcall
inc
push
sbb
sbb
mov
inc
inc
fsubs
sub
cmp
movsl
or
add
mov
nop
js
outsl
xchg
or
nop
aad
je
inc
push
incl
test
scas
and
or
call
loopne
mov
aam
fs
jb
loope
incl
pop
popa
sbb
sub
sbb
xchg
ja
or
cld
xorl
mov
jns
mov
jp
inc
fmull
enter
push
sbb
sahf
lea
or
pop
stc
lods
pop
shrl
test
mov
add
mov
sbb
jb
mov
out
cli
dec
test
pop
call
cmp
ljmp
or
bound
outsb
sub
push
inc
pop
mov
or
sub
cmpb
mov
add
outsl
or
mov
lock
cmpsl
in
inc
inc
dec
pop
pushf
inc
pop
call
xchg
cli
jl
push
xchg
add
insb
shr
inc
add
fldl
or
fcoms
addl
pushf
pop
adc
sbb
movsl
out
mov
psubd
cmp
sarl
es
fmuls
cmc
inc
movb
dec
inc
and
xchg
adc
and
roll
push
loope
add
adc
and
bound
lret
dec
or
popf
xchg
cs
aaa
fcmovb
cmp
data16
mov
jmp
cli
mov
push
inc
cwtl
popl
cmp
outsb
adc
add
xchg
jecxz
loopne
add
xchg
ret
scas
inc
or
dec
cli
jmp
stos
mov
push
jo
popa
mov
push
lods
orl
push
imul
xor
and
push
and
sbb
outsb
lock
std
lcall
popa
xor
das
cmp
jmp
lds
in
repnz
pushl
movb
stos
add
xor
jg
dec
sbb
inc
dec
mov
pushl
push
ret
mulb
popa
pop
decl
into
pop
lods
add
inc
ss
movsb
in
jp
xchg
fcomip
incl
sub
in
pop
loopne
adc
jmp
xor
xchg
mov
add
cmp
mov
jno
dec
cmpsl
jmp
jo
cli
and
and
cmpsb
mov
in
push
cmpsb
cwtl
xchg
adc
stos
decb
dec
inc
sub
pop
pop
dec
push
and
push
and
test
mov
pop
dec
add
mov
pop
mov
add
aam
in
or
pushl
push
into
pop
out
insb
bound
add
pop
fadds
add
pop
pusha
or
cs
dec
ljmp
outsb
pop
xor
sar
aad
sbb
sbb
add
and
cmp
ljmp
pop
inc
push
pop
or
and
lods
inc
dec
fwait
mov
shlb
pop
test
mov
scas
hlt
adcl
jb
dec
int3
pop
add
push
mov
ficoml
push
add
cs
adc
hlt
or
int
mov
mov
imul
sbb
daa
lock
mov
add
inc
dec
into
test
loopne
js
out
jp
ljmp
inc
xchg
cli
ret
in
sti
jbe
ja
outsl
jns
subb
loope
cmp
mov
xor
decl
mov
int3
scas
addl
sub
jecxz
sub
add
movsb
icebp
std
decl
xchg
xorb
xchg
add
je
mov
push
xchg
push
mul
mov
hlt
jae
xchg
push
add
jns
xchg
in
movsb
lock
mov
xchg
loopne
jle
add
andl
or
dec
and
mov
aad
dec
sub
lcall
push
xor
in
dec
pushf
ret
sub
cmp
xlat
iret
dec
push
adc
ds
xchg
inc
fistps
call
test
mov
xchg
or
incl
fsts
fstpl
fcmove
xor
mov
mov
sbb
pusha
sub
data16
mov
jp
repnz
lcall
mov
xor
lods
adc
shl
jb
pop
inc
stos
jg
mov
pusha
cmp
fs
fs
shlb
xor
popf
adc
decl
adc
mov
pop
movsb
mov
or
rclb
jp
or
push
or
repnz
stos
xor
or
fmulp
and
aad
test
ljmp
or
call
mov
add
add
add
add
jle
sar
jmp
sahf
cld
ljmp
ss
cmp
cmp
lods
mov
cmp
decl
jns
xchg
add
ret
cld
aaa
aas
das
sub
lret
jbe
add
xor
mov
inc
dec
push
jp
inc
mov
inc
mov
shrl
jg
inc
addr16
sti
cmpl
pop
jns
mov
js
test
xor
int3
ret
stc
orb
pushf
jo
inc
xor
int3
call
jg
scas
repz
xor
cmp
popf
lock
out
aad
mov
vpunpckhbw
sub
lock
dec
call
jno
mov
xlat
and
pop
push
adc
push
jae
sbb
push
in
sbb
jmp
out
mov
rcll
movsl
pop
out
adc
mov
gs
mov
add
call
add
cmp
fidivrl
and
bound
in
popf
push
lock
std
pusha
stmxcsr
outsl
loope
mov
add
jmp
lcall
dec
add
ret
push
jmp
mov
adc
popa
dec
insl
sbb
decl
push
inc
sbb
jno
add
cltd
out
call
sbb
cmpsl
mov
pushl
sbb
dec
add
pop
imul
into
xor
mov
pop
call
movsb
xchg
cmp
shrl
adc
repnz
repz
ja
dec
jnp
cltd
adc
mov
cli
decl
cmp
test
jae
lock
mov
dec
nop
test
out
mov
incl
mov
js
push
inc
inc
sub
lods
mov
or
lcall
pop
je
pop
inc
call
pushl
fildll
mov
lock
lods
dec
fwait
enter
xorb
mov
icebp
push
mov
jae
xor
loopne
push
les
and
fs
fcomip
or
shll
sar
mov
jg
cmp
or
mov
test
ret
sub
cmpsb
dec
loopne
push
lcall
push
add
stos
add
test
lods
test
sbb
rorb
enter
jmp
andps
mov
in
pop
dec
xchg
mov
test
push
call
sbb
dec
ficoml
repnz
pop
fidivrs
xor
push
hlt
les
inc
cltd
leave
inc
aad
adc
nop
adc
loopne
rorl
mov
cmp
push
inc
jo
pop
pop
lret
scas
divb
sub
ljmp
cmp
je
pop
pushf
mov
adc
lods
les
scas
clc
test
int3
jae
repnz
xchg
dec
pop
dec
mov
mov
add
rcll
inc
jns
pop
cmc
std
call
shrb
sub
mov
mov
mov
jae
jg
and
movsb
aaa
fisubrs
orb
test
sub
mov
ret
out
repz
xor
mov
lock
add
sti
test
xor
js
ret
pop
fs
fwait
xchg
xor
mov
pushl
fisubrs
dec
cwtl
add
or
adc
ret
pusha
dec
ret
sahf
xor
pusha
into
xchg
mov
sub
aaa
sbb
ss
lcall
enter
daa
mov
out
loop
add
pusha
repnz
leave
add
and
gs
cwtl
filds
dec
ljmp
mov
cmpsb
ret
mov
cmp
decl
xchg
inc
test
dec
dec
push
cmp
daa
and
imul
dec
sub
pushl
push
cmpsl
cmp
push
push
aad
je
pop
and
or
inc
push
pop
call
push
pop
inc
cs
cmpsb
cmp
pop
mov
xchg
push
into
lcall
or
ljmp
or
insl
ljmp
lds
test
mov
outsl
xchg
mov
jnp
ficomps
mov
mov
addr16
addr16
jmp
frstor
mov
idivb
int3
aad
jnp
test
cld
or
or
sub
add
adc
lret
mov
pop
outsb
or
or
sub
mov
imul
sbb
clc
mov
jnp
mov
ss
add
adc
push
loope
fcmovb
decl
mov
cli
call
and
inc
or
sbb
xchg
mov
ret
adc
clc
jg
mov
inc
or
adc
clc
jg
push
mov
loopne
add
hlt
inc
rorb
les
adc
sub
stos
orb
push
decl
push
adc
incl
les
and
cmp
cmp
popa
adc
cmp
inc
adc
sbb
popf
push
push
imul
call
imul
add
push
sub
sub
aam
jp
pusha
aad
jp
mov
incl
cmpb
sub
into
cmp
mov
jg
mov
sub
cmpsb
sbb
pushl
push
mov
cmp
push
jmp
popf
push
push
and
push
cld
ja
sub
pop
imul
lcall
xor
push
jp
test
fmuls
addr16
aaa
call
loopne
mov
sub
lods
sbb
ljmp
pop
orl
in
ja
lea
mov
rorb
pop
cmp
xor
mov
sub
rcll
sbb
mov
ljmp
gs
jmp
push
out
sub
mov
sti
clc
movsb
xchg
daa
fildl
pop
sub
scas
xor
loop
gs
mov
decl
mov
push
addr16
push
inc
sbb
bound
xchg
setnp
decl
add
cli
fwait
outsl
mov
out
clc
decb
and
mov
sub
push
mov
push
mov
mov
jmp
stc
and
mov
mov
ljmp
sbb
ljmp
dec
pop
jge
inc
lea
cmp
jbe
outsl
clc
sar
adc
ds
mov
rolb
xor
push
bnd
or
add
xor
test
jmp
int
decl
and
in
fs
in
in
iret
ljmp
mov
rolb
dec
mov
inc
jb
sub
incl
xor
adc
push
aas
std
xchg
aam
dec
cmp
call
andnps
sbb
cmp
and
or
xor
pop
and
imulb
jmp
rorl
xchg
sub
lcall
push
repz
push
or
mov
rcl
xchg
dec
and
adc
xor
jmp
outsb
enter
int3
dec
sub
sub
mov
add
push
fld
jmp
xlat
mov
mov
cmp
call
test
cmp
in
push
mov
adc
mov
xor
sbb
inc
sbb
lret
xchg
cwtl
cwtl
pop
xchg
push
xchg
cmp
dec
mov
pop
cmpsl
leave
rcll
xchg
sti
pop
addr16
pusha
cwtl
lret
les
sbb
sbb
lcall
rorb
out
dec
or
sub
cmpb
orl
lcall
pop
ljmp
mov
outsb
mov
cmp
rcrl
dec
in
xor
lods
ficompl
mov
pop
xlat
dec
mov
or
add
mov
pop
incl
mov
fwait
or
mov
push
je
iret
orb
xor
call
xchg
dec
loopne
inc
pop
rolb
adc
sbbb
sahf
push
adc
pushl
and
fisubrs
mov
mov
pop
mov
inc
xchg
shr
push
jecxz
decl
inc
daa
cwtl
je
into
fdivrl
xchg
sahf
test
out
or
xchg
adc
ljmp
cmc
pushf
ja
jmp
in
mov
mov
xchg
mov
fistl
mov
push
xchg
stos
xor
sub
hlt
mov
enter
aas
cli
aas
orl
loopne
dec
nop
sbb
call
or
mov
xor
mov
leave
mov
or
jo
decl
rorl
cmpsl
cmc
inc
xor
movsl
xorl
pop
mov
add
icebp
shlb
dec
bound
cmp
movsl
shrl
dec
push
and
sub
xchg
sub
dec
nop
dec
push
mov
sbb
ret
fbld
xor
pop
pop
jno
pusha
popf
adc
jmp
mov
pop
add
sar
lock
jae
jne
shl
xorb
mov
call
and
mov
cltd
stos
fmull
cwtl
inc
lret
or
xor
loopne
xor
das
mov
jno
popf
push
inc
cmp
push
stc
inc
jecxz
cli
jmp
ss
ret
add
inc
mov
sub
and
les
mov
ljmp
fld
jl
lretw
mov
movsl
rsqrtps
sbb
add
cmovb
xor
adc
incl
lret
nop
mov
jae
pop
sbb
lcall
adc
and
push
push
push
clc
cmp
cli
jg
and
cmp
jnp
repz
in
mov
cs
popa
mov
xor
ds
out
jp
fwait
sahf
inc
dec
cmp
jne
dec
decl
repz
and
decl
push
adc
call
and
iret
stos
mov
jno
outsl
lods
sub
in
inc
outsb
add
jmp
add
lret
faddl
call
test
scas
fmull
scas
pop
push
push
and
or
in
add
inc
movsb
lds
ljmp
inc
bound
lds
lcall
sub
jne
or
mov
ret
mov
pop
and
sub
fstpt
arpl
jno
fsubp
pusha
inc
std
sub
sarl
decl
push
sub
xor
mov
aad
loop
cmpsl
loopne
fdiv
fstp
data16
push
jb
loop
addr16
cmp
and
or
out
inc
cli
jmp
pop
ds
push
sbb
or
cwtl
insl
cmp
mov
mov
in
adc
loopne
dec
and
inc
sbb
fnstsw
dec
adc
cmpsb
incl
cs
and
sbb
out
adc
add
inc
or
aam
enter
jmp
add
and
push
ret
sub
mov
notb
fdiv
mov
scas
rcrl
xchg
jb
pop
js
jae
mov
inc
es
ljmp
icebp
sahf
pop
out
iret
adc
jmp
mov
xor
cld
out
add
mov
adc
call
pop
lds
cs
mov
adc
pop
lret
pop
xchg
jecxz
mov
enter
test
xchg
sub
pop
sbb
pusha
adcb
fs
imul
les
pop
xchg
jmp
push
xchg
xchg
mov
scas
push
test
dec
mov
stos
fsubrl
push
popa
sahf
jge
lret
sub
mov
push
mov
pop
pop
mov
imul
push
mov
cltd
shlb
sbb
decl
lret
sbb
mov
stc
xor
jae
add
push
jl
pop
dec
push
xor
sti
cltd
cmpsb
fisttpll
pop
and
test
cld
push
clc
mov
clc
insb
xor
dec
dec
mov
or
pop
pop
fisubrs
popa
jnp
dec
pop
mov
fildll
dec
push
dec
jb
outsb
orl
hlt
mov
int3
xchg
and
add
add
mov
push
int3
lcall
sbb
push
addb
ja
movsb
cmp
leave
filds
lcall
out
mov
add
dec
inc
jae
and
xchg
and
pusha
loop
dec
je
dec
jmp
test
hlt
dec
jecxz
mov
outsb
out
dec
outsb
shll
pop
shlb
daa
ret
or
mov
incl
or
into
ret
add
js
sub
cli
mov
out
mov
jo
dec
jb
and
add
lahf
testb
decl
dec
test
rorb
and
sbb
in
inc
push
or
dec
enter
enter
incl
loop
adc
push
sbb
pop
call
cmp
lcall
enter
test
sub
mov
inc
arpl
or
ljmp
movsl
sub
lods
es
adc
and
xchg
test
sub
call
decl
push
add
loop
je
lods
ss
fsubl
cmp
mov
ljmp
mov
add
imul
xchg
and
leave
mov
es
clc
test
mov
call
enter
fldt
aad
hlt
mov
mov
int
mov
sbb
out
inc
lcall
push
inc
ss
rcrl
dec
mov
sti
call
xchg
subl
js
imul
ljmp
call
sarl
fsubrs
les
decl
mov
cmpsb
inc
mov
pusha
mov
push
mov
rolb
leave
mov
add
add
fwait
hlt
mov
jg
loop
inc
xor
loopw
and
mov
or
cmp
dec
sbb
ret
rcr
or
or
pusha
jb
mov
mov
nop
int3
lahf
sbb
jp
inc
jnp
push
push
mov
ds
shrl
cmp
ja
les
pop
add
mov
pop
mulb
inc
scas
adc
movsl
jle
sub
or
clc
daa
ljmp
fiaddl
decl
or
add
dec
xor
test
xchg
dec
test
jecxz
sub
jle
xor
add
pop
cmp
test
mov
subb
jo
inc
jmp
and
cli
loopne
sbb
aam
or
jmp
cmp
addb
or
push
xchg
jmp
and
and
fnstenv
or
in
pop
inc
adc
sbb
mov
outsb
stos
inc
cmp
mov
decl
testb
mov
xor
mov
and
sub
or
mov
loop
imul
movsl
inc
std
sti
scas
bound
dec
test
cs
outsl
inc
sub
mov
incl
xor
cmpb
mov
ds
sub
mov
clc
mov
or
mov
add
jmp
outsb
mulb
aaa
inc
scas
xchg
mov
fsubl
movsb
add
sbb
sbb
jmp
rorl
je
inc
inc
sbb
inc
or
add
loop
push
sub
call
jle
ja
into
popf
fs
es
jp
daa
rolb
xor
jl
sub
add
mov
outsb
ret
cli
jmp
mov
dec
das
sub
jbe
xchg
mov
pushf
rorb
or
mov
movsl
repnz
or
jb
sbb
or
push
mov
or
call
jg
decl
clc
cmpsl
lods
hlt
and
dec
xor
dec
out
lods
mov
or
dec
sub
or
ljmp
call
and
adc
bound
repnz
stos
sub
dec
in
add
xchg
inc
cmp
gs
mov
inc
xchg
lcall
adc
scas
mov
cmpsb
sub
in
inc
addr16
adc
inc
push
mov
scas
clc
jg
xor
sbb
out
sbb
mov
jecxz
inc
xchg
aaa
or
mov
ljmp
fldenv
aad
js
das
mov
lea
push
fwait
rcll
leave
mov
mov
mov
imul
or
dec
sbb
inc
clc
mov
ss
push
inc
test
xchg
stos
add
mov
mov
clc
test
cld
stos
jge
adc
mov
mov
inc
inc
add
inc
aam
add
dec
cmpsl
or
mov
ss
and
aam
fcoms
dec
mov
xchg
cmpb
push
inc
inc
inc
ljmp
xor
fadds
ds
inc
push
fs
pushl
sub
jns
imul
inc
outsb
dec
xchg
adc
mov
push
inc
mov
mov
pop
lds
jno
jmp
adc
or
mov
or
dec
or
orb
scas
mov
rolb
jle
dec
paddq
loopne
pop
ljmp
ja
and
je
cmc
adc
subl
mov
and
xor
loop
push
push
pop
dec
push
sub
sub
xchg
jbe
xorb
and
add
dec
lds
xchg
shrl
fidivs
mov
and
sub
test
punpckldq
sbb
movsb
or
hlt
or
sub
mov
cmpsb
adc
mov
pop
mov
push
ja
cmp
pop
movsl
xor
es
push
mov
mov
cld
hlt
lds
mov
decl
dec
data16
mov
outsl
sbb
mov
data16
int3
mov
mov
push
fisubl
daa
ljmp
cli
scas
dec
inc
pushw
in
pop
xor
jo
cli
aad
repnz
pop
mov
dec
out
push
add
or
dec
repnz
into
aaa
push
add
or
ds
bound
cwtl
cmp
inc
loop
adc
inc
xchg
shrb
and
addr16
ja
aam
jmp
push
or
inc
imul
arpl
xchg
nop
inc
das
clc
movsw
rorb
mov
paddb
mov
mov
add
mov
call
or
clc
lcall
cs
loopne
mov
xchg
or
outsb
or
ljmp
mov
inc
enter
sbb
out
lock
out
lock
pushl
aam
sbb
cmpsl
test
adc
push
call
dec
das
sar
in
mov
cld
xchg
xor
int
push
fidivs
jo
push
xchg
icebp
ljmp
sahf
clc
pop
dec
add
ja
bnd
mov
cmpsl
inc
loop
scas
fimuls
or
add
lcall
sbb
enter
popa
sbb
adc
nop
push
jge
incl
stc
xchg
inc
aad
push
xor
sbb
inc
add
sub
outsl
das
ljmp
add
mov
into
or
jns
mov
test
and
arpl
sub
inc
jge
dec
adc
and
mov
dec
cwtl
jg
mov
aaa
and
lcall
cld
lea
lcall
fcmovnbe
jg
sub
add
inc
or
in
test
xor
daa
mov
pushl
cmp
popf
imul
out
jle
out
rcrb
xchg
sub
out
and
sbb
mov
sbb
mov
jb
xchg
or
mov
push
ret
dec
xchg
sub
fdiv
mov
orb
mov
movsl
mov
ret
das
fcomip
jmp
push
iret
scas
lods
test
out
add
adc
out
lret
imull
insl
ja
jmp
ljmp
push
inc
pop
sbb
outsl
call
add
shll
js
lods
shrb
sbb
pop
add
push
push
push
pop
push
fistl
cltd
pusha
sub
xor
add
and
lods
pop
dec
xor
jmp
decl
jmp
nop
rolb
cli
insb
dec
sbb
loop
ljmp
push
dec
fsubrp
insb
call
mov
pop
and
dec
and
jmp
frstor
mov
ret
in
stos
cwtl
and
and
adc
xchg
jge
mov
dec
fwait
inc
lock
mov
and
jb
rclb
stos
dec
std
decl
es
push
inc
aad
ja
dec
dec
jp
daa
jo
push
incl
bnd
pop
or
xor
mov
dec
int3
mov
data16
lret
jp
or
or
popa
std
clc
mov
insb
xchg
jle
psadbw
mov
ja
adc
jnp
mov
gs
hlt
loopne
in
adc
pop
std
ljmp
sahf
inc
lret
shrb
test
subb
dec
lock
fistl
ljmp
mov
mov
dec
mov
aam
aam
test
pop
push
in
cmp
out
test
sub
mov
mov
nop
sub
and
push
jae
ljmp
out
jb
aad
sbb
int3
mov
add
jg
inc
lods
dec
mov
stc
dec
xor
ficomps
push
mov
xchg
and
cmpsb
dec
cmpsl
sbb
fcomps
sub
jp
cltd
jns
jnp
inc
dec
or
jnp
cmpsl
sbb
mov
mov
mov
lock
mov
mov
jns
dec
mov
repz
orb
mov
or
or
stos
pusha
jnp
aaa
push
popf
jno
jg
inc
fnstsw
sahf
loope
cmpl
mov
dec
jnp
sub
mov
cli
mov
inc
nop
sbb
inc
mov
cli
lods
pop
movb
cmpsl
dec
mov
xor
or
or
cmp
push
cli
sahf
insb
pop
and
dec
cmp
pushl
ror
hlt
shll
repnz
xlat
and
jg
sub
repnz
outsl
mov
sbb
dec
and
ljmp
lret
aam
out
lock
lea
ja
into
fs
mov
call
pop
pop
inc
mov
dec
into
sahf
add
xor
rorl
in
sub
add
xor
pop
push
or
icebp
cmp
xchg
enter
cmp
adc
filds
or
jl
mov
jecxz
inc
jmp
aas
mov
pushf
sub
mov
lret
add
out
mov
scas
mov
adc
fsts
loope
dec
push
fdivrs
sti
pushf
insl
call
jns
into
jge
inc
xchg
in
dec
out
xor
jnp
fs
pusha
dec
lret
movsb
dec
outsl
mov
pop
sub
incl
data16
mov
popf
mov
insb
mov
lcall
lret
mov
mov
and
insb
fs
leave
pop
lret
push
mov
pop
mov
enter
jg
aaa
pop
sbb
incl
mov
pop
js
xlat
dec
and
jge
xlat
sti
push
mov
rcll
sbb
xlat
int
inc
into
sub
filds
mov
decl
jb
adc
int
xor
aad
jo
mov
inc
lods
repnz
jne
mov
jl
cmp
mov
fs
testl
mov
or
call
sbb
icebp
cli
and
out
in
inc
inc
mov
or
inc
mov
mov
sub
dec
ds
xchg
add
mov
dec
mov
push
mov
or
subb
pop
mov
incl
outsl
sar
pop
incb
mov
xchg
in
sub
lahf
add
ret
xchg
movsb
lock
add
adc
nop
dec
mov
dec
and
xchg
xor
cwtl
adc
hlt
call
push
adc
mov
cmpsb
inc
lret
call
arpl
xchg
push
xor
mov
popf
or
int3
fdivl
jae
xchg
mov
inc
rcll
mov
pop
lock
lcall
jne
mov
add
dec
push
xor
jp
mov
rcrb
das
sbb
fldenv
in
daa
stos
dec
loopne
fs
out
aam
jb
push
cmp
add
ljmp
roll
jmp
es
mov
sbb
inc
mov
lcall
push
mov
lret
shrb
sahf
lahf
mov
fcoml
dec
and
add
mov
inc
fnstsw
rcrb
inc
pushf
cmp
repnz
mov
xlat
jns
in
lahf
dec
pop
cmp
je
jg
ret
jge
hlt
mov
ljmp
add
xchg
in
mov
jl
xor
das
aas
jg
clc
loope
outsl
clc
add
jle
mov
pusha
jge
or
lahf
jge
ljmp
addb
cmp
sbbb
daa
add
add
pop
add
mov
test
xchg
js
and
ljmp
movsb
test
mov
xor
loopne
jmp
mov
pusha
xor
rcrb
inc
push
add
nop
incl
sub
push
test
push
gs
xchg
inc
push
pop
stc
adc
jb
inc
dec
pop
pop
aam
dec
sub
inc
adc
loope
ret
sbb
mov
adc
dec
or
pusha
shll
push
push
stos
andl
add
jmp
movsl
mov
push
fnstenv
call
push
push
outsb
jg
push
sahf
pop
lds
push
xchg
jns
adc
mov
test
lcall
xchg
push
mov
pop
cltd
inc
pop
pop
fwait
jbe
push
pop
jg
out
imul
inc
cmp
addr16
data16
int
push
lods
call
jbe
inc
in
pop
lret
push
sbb
fimull
xchg
add
sbb
dec
ss
jns
mov
aaa
cmpl
xchg
popa
cmp
out
and
jle
inc
push
enter
incl
jle
xor
lock
out
lret
sahf
push
daa
stos
pop
and
loope
and
ljmp
out
popa
mov
js
lea
loopne
inc
inc
xor
inc
dec
xor
xchg
jae
dec
test
push
xchg
pop
inc
inc
rcll
popa
cs
pop
inc
mov
cmc
fwait
insl
les
out
jo
loopne
dec
push
cld
or
sbb
les
mov
ljmp
clc
mov
outsl
jmp
cmpsb
jbe
xor
mov
mov
adc
lds
scas
movsb
lods
loope,pt
mov
fisubl
rcrb
lcall
jge
push
xchg
push
outsb
pop
gs
icebp
dec
adc
pop
mov
jle
fisttpl
ja
fcomip
sub
xchg
stos
push
fstps
jle
call
loopne
loop
push
lret
imul
scas
lods
jne
cli
cmp
xchg
cld
out
cmp
stc
sub
scas
push
icebp
call
mov
out
pop
loope
sbb
and
xchg
sti
out
mov
pop
push
lcall
mov
shl
lahf
aaa
dec
aam
test
repnz
add
mov
push
and
mov
loopne
adc
adc
push
fsts
push
or
call
cmp
and
shrb
dec
adc
mov
in
pop
gs
lock
and
fsubs
xchg
pop
fs
dec
loopne
dec
js
ret
sbb
add
sahf
cli
test
incl
add
sub
pop
fisttps
imul
ret
repnz
stos
xchg
jne
mov
mov
jg
sti
push
jp
pop
inc
fs
ljmp
inc
cltd
rolb
jne
xchg
int3
push
sub
fdivrp
pushl
insl
mov
rolb
fmul
in
jge
fiadds
mov
call
cmc
xchg
add
leave
pop
in
lret
test
jle
dec
jo
push
dec
in
ljmp
add
test
add
pop
adc
fcomip
ffreep
xor
mov
and
mov
inc
add
push
lahf
test
decl
add
fdivl
test
bnd
fmul
insb
add
sbb
fldt
mov
inc
adc
subl
xor
ds
adc
adc
addr16
inc
ret
xchg
test
roll
mov
xchg
fiadds
sbb
and
add
lock
sbb
loopne
and
jno
cmp
add
pusha
xchg
mov
add
clc
and
leave
lcall
call
insl
jb
mov
loopne
mov
adc
fldl
jnp
jmp
and
lds
leave
mov
mov
xor
mov
cld
jmp
int3
fisubrs
movsl
lea
divl
mov
sahf
adc
repz
mov
pop
cmp
mov
incl
jne
xchg
fimull
or
les
into
pop
add
cmc
sbb
jbe
aaa
bound
add
scas
xchg
add
add
hlt
cmp
cmc
adc
mov
iret
jg
in
push
stc
cwtl
cmp
test
mov
add
cwtl
xor
shrb
fdivr
cwtl
xchg
decl
movsb
rcrl
mov
jne
insb
inc
cmp
pop
ud0
mov
mulb
in
xchg
jp
pop
push
bound
mov
mov
push
jg
cmp
fs
outsb
or
xchg
and
lods
sub
popa
add
jmp
out
sbb
and
inc
lret
movsb
and
add
sub
xchg
movsb
cli
cmpsb
aaa
inc
mov
call
mov
push
adc
xchg
or
cltd
sbb
test
mov
pop
inc
aam
scas
scas
out
jp
imul
dec
push
push
in
mov
decl
jg
mov
ficoml
je
pushf
mov
aam
daa
mov
jb
decl
decb
mov
fsubrs
xor
shlb
xor
or
jmp
cmp
js
ss
int
stos
and
mov
jge
dec
mov
inc
data16
fcomip
sti
loopne
pop
adc
inc
fwait
dec
adc
inc
fists
cmp
push
lcall
lahf
je
xchg
pop
jno
inc
loop
mov
and
fwait
decl
push
xchg
jmp
xorl
mov
call
xchg
fdivrs
scas
cmp
and
pop
jbe
aam
aad
rolb
ljmp
push
mov
test
repnz
jmp
sub
mull
mov
subl
add
and
push
test
test
jo
rorl
pushf
inc
lock
in
stos
incl
rcll
mov
and
repz
mov
int3
pop
and
jp
pop
fisttpl
mov
scas
mov
cmp
outsl
mov
out
sahf
cmc
mov
decb
push
pop
sub
dec
and
decl
adc
push
push
mov
orl
lret
or
xor
ja
notl
dec
shl
in
incl
pop
cld
lret
rol
dec
xchg
xchg
testb
push
pop
mov
and
in
pushf
mov
lods
mov
mov
mov
popf
xor
insl
cmp
adc
jl
cmp
in
clc
pop
xchg
into
idivl
mov
decl
push
adc
adc
rorb
or
in
mov
add
jbe
shlb
adc
push
stos
and
outsl
xchg
test
mov
mov
and
fcomps
push
or
mov
adcb
dec
pop
aam
bound
jle
xchg
inc
push
push
ret
cltd
cmpsb
mov
test
decl
ss
ljmp
out
clc
push
out
push
loop
jp
int3
imul
inc
push
fcompl
push
scas
int
and
push
faddl
scas
inc
lcall
mov
lods
cs
imul
call
cmp
das
lods
or
and
xor
push
xchg
pmaxsw
repnz
jns
pop
xchg
lods
decl
push
push
jbe
stos
and
pop
lcall
or
insb
add
movl
popf
sub
sub
or
in
add
sti
mov
xchg
movsb
and
subb
cmp
push
or
xchg
xor
and
js
xor
inc
jle
mov
sbb
push
jns
movsb
xor
rcll
xor
xor
inc
call
adc
lods
adc
cs
sbb
inc
jmp
incl
cmp
mulb
ret
sbb
jne
in
out
jo
inc
adc
sbb
mov
inc
mov
js
fwait
inc
cld
xchg
sbb
cmp
sbb
aad
ljmp
nop
mov
jb
arpl
out
outsl
movsb
ss
sub
decl
test
push
push
stos
sbb
cmp
cmpsl
push
xorl
inc
cmp
cmp
push
arpl
sub
decl
inc
push
out
jnp
mov
adc
nop
in
sub
jl
daa
and
inc
and
xor
pop
pusha
add
inc
pop
sbb
jl
push
and
out
pop
cmp
cld
jmp
loop,pt
and
add
add
or
scas
xchg
dec
adc
xchg
xor
xor
dec
pushl
mov
mov
pop
aaa
mov
ds
cli
pushl
dec
bound
je
inc
shrl
and
adc
xchg
add
add
lea
ret
pop
ror
decl
jo
xor
adc
xor
jne
mov
mov
xchg
sbb
jns
mov
andb
cmp
push
jp
subb
in
js
cli
jmp
es
jae
cmp
or
push
popa
push
pusha
mov
test
cmpsb
sub
and
and
scas
fbld
and
mov
cmp
push
cmc
dec
sbb
in
jg
xchg
imul
push
ret
push
les
shl
mov
xchg
js
popl
lret
es
sub
mov
andl
inc
add
lods
les
sub
mov
and
xorb
jl
pop
mov
gs
dec
xchg
cmp
xlat
and
add
xchg
add
dec
mov
dec
or
or
cli
inc
jb
and
sahf
insl
xchg
jle
xor
pop
sub
inc
and
test
std
push
daa
outsb
inc
test
aaa
daa
dec
and
jbe
stc
fs
cmpsb
jg
adc
xor
icebp
inc
add
insl
rolb
push
test
rorb
push
inc
mov
push
mov
adc
imul
inc
pop
xor
sar
pushl
std
sbb
sub
mov
ret
mov
xchg
and
and
popa
out
push
add
jg
push
xchg
pop
insb
repz
mov
dec
mov
pop
mov
jg
popa
lods
negb
test
cmp
imul
nop
jno
adc
fadd
sbb
xor
scas
mov
push
jno
sbb
adc
and
decl
add
jo
repz
inc
mov
icebp
mov
sti
mov
mov
loope
xor
mov
bound
xchg
xor
pop
cmp
and
sub
jg
pop
push
out
fcoml
push
jle
mov
cmc
jle
hlt
xchg
outsl
cmp
adc
dec
adc
inc
test
mov
pop
inc
ljmp
jg
stc
adc
cwtl
sbb
scas
xchg
enter
stc
cmp
mov
fs
incl
pop
mov
aaa
xor
adc
adc
adc
xadd
inc
push
mov
test
lea
dec
mov
clc
push
movsb
call
enter
xchg
out
fisubrl
cld
push
adc
mov
decl
dec
sub
xor
testl
aaa
sub
pop
xchg
jmp
adc
mov
sub
pop
mov
jno
mov
ficompl
stos
mov
push
out
xchg
and
gs
stos
imul
out
jno
notl
xchg
dec
adc
adc
mov
fimull
mov
mov
mov
sbb
or
adc
test
or
sub
dec
repz
xor
scas
lds
jmp
loop
xor
cwtl
pop
popa
movsb
inc
pop
cwtl
hlt
stos
xchg
imulb
inc
add
ja
std
jmp
scas
push
or
push
bound
cltd
push
cmpsb
mov
and
mov
push
add
aaa
or
cmp
lcall
lds
pop
jns
inc
inc
stos
xorl
es
mov
mov
or
cmp
loop
jg
js
aam
lcall
cmc
sbb
pop
xchg
mov
inc
and
insl
gs
xor
movb
nop
pusha
push
pop
sbbl
xchg
ja
incl
adc
cmp
data16
aam
add
incl
xchg
add
loop
imul
mov
stos
pop
pop
pop
xchg
pop
pop
jg
lods
or
push
cmpb
pop
adc
jno
orl
xor
and
clc
jecxz
dec
jmp
push
push
push
pop
xor
js
mov
ret
out
cli
mov
movsl
and
jmp
pop
cmp
addr16
je
out
dec
cmp
sbb
mov
repnz
scas
mov
je
pushl
scas
adc
add
fisubrs
js
mov
mov
jo
fwait
movsb
pop
jo
push
xor
xchg
mov
fbstp
clc
mov
add
sub
mov
decl
insb
mov
fdivrl
ja
lcall
adc
xor
dec
add
popa
aaa
cmp
pop
in
cli
xchg
bound
lcall
clc
mov
stos
insb
jg
sbb
popw
or
mov
cmp
insb
shlb
ss
enter
movsl
call
dec
sbbb
into
xchg
stos
xor
push
jo
mov
cld
sbb
dec
ds
push
cld
jecxz
leave
inc
aas
or
and
pop
pop
push
xchg
sbb
call
mov
add
xor
pushl
in
add
jmp
pop
and
incl
or
test
add
vmovdqu
call
xor
sub
lds
lds
lds
lds
daa
mov
popa
sub
adc
mov
popa
insb
imul
lock
cmp
jae
sti
ljmp
add
add
addb
or
jp
in
inc
jmp
or
cmp
cs
pushl
movl
adc
ljmp
insl
pusha
cmpsb
inc
or
shll
mov
push
xchg
aam
cmp
jp
adc
inc
shlb
cmp
fadds
xchg
ljmp
daa
mov
xchg
mov
rolb
pusha
xchg
inc
scas
mov
in
sbb
ds
incl
push
test
arpl
mov
loope
pop
int3
lods
sbb
call
fcmove
hlt
sub
xchg
inc
dec
sti
call
xchg
cmp
sub
sub
mov
add
pop
or
ds
int3
inc
push
sahf
push
lcall
inc
cwtl
pop
pop
aaa
dec
and
fdivrl
push
adc
add
sbb
push
mov
cmp
sub
pushl
lcall
scas
das
subl
mov
xor
mov
idivb
jl
inc
dec
xor
movsb
cmpb
stos
mov
add
add
and
inc
lea
aam
lret
dec
and
or
add
add
orb
lcall
enter
addb
mov
repz
imul
jmp
push
inc
sbb
sub
and
push
lods
nop
and
lcall
push
jb
sbb
in
jae
arpl
rcll
adc
adcb
sbb
push
add
xchg
incl
xchg
insl
add
cmpsb
cmpsl
mov
test
sbb
data16
jmp
or
into
jb
bound
cmp
int
or
movsb
aaa
mov
xor
sahf
and
push
dec
cli
adc
outsb
movsb
mov
inc
stc
shrl
mov
inc
xchg
and
inc
mov
in
xlat
xchg
dec
aad
mov
rcl
mov
aam
and
xchg
push
or
mov
cmc
push
sub
fists
cltd
mov
pop
mov
scas
cwtl
pop
pop
popf
push
jle
pop
insb
mov
and
inc
dec
push
data16
sub
hlt
inc
insl
adc
pop
lock
push
jmp
loopne
inc
mov
fidivl
je
clc
fisttpl
aad
or
add
jbe
add
shrb
mov
mov
cmp
cmc
mov
inc
repz
dec
insl
stos
xchg
addb
stc
lret
dec
fdiv
sbb
or
out
clc
ffreep
mov
pop
dec
ja
andb
cmp
sub
pushl
push
sub
push
rcrb
subb
cwtl
lcall
mov
inc
loopne
hlt
mov
mov
sti
push
ss
test
xchg
fsubs
inc
or
ret
xchg
mov
fdivr
dec
xor
roll
popa
shll
clc
add
scas
icebp
sbb
xchg
sar
decl
pusha
jns
add
enter
movsb
dec
out
fnstsw
das
rorl
inc
dec
mov
adc
adc
push
push
cs
sbb
pop
sar
or
lcall
adc
mov
mov
js
stos
mov
es
pop
and
sbb
cs
clc
mov
sti
or
jo
lahf
add
jle
popa
push
outsl
sbb
in
pop
pusha
or
insb
mov
in
enter
decl
in
rorl
mov
mov
adc
xchg
loopne
xor
aad
cmpsb
lock
or
pop
push
jmp
or
scas
fbstp
mov
sar
cmp
cld
cmpsl
andb
mov
cmp
pop
fldenv
hlt
or
notb
test
jnp
sbb
pop
aaa
sub
int3
popf
sub
inc
pop
clc
aaa
fcoml
cltd
jecxz
call
mov
cs
shll
or
loopne
pop
jmp
jmp
push
push
movsb
sub
push
int3
add
mov
lcall
mov
fdivs
mov
mov
add
sub
lcall
xchg
sbb
push
lret
sarl
inc
lods
and
jl
add
fbld
and
fisttpll
stos
call
xchg
push
and
aam
or
daa
ljmp
jmp
ficoms
scas
out
incl
sbb
stos
jb
aam
jl
xchg
dec
bnd
add
jecxz
in
ret
jle
sahf
xor
sahf
fbld
std
js
lahf
push
push
lret
mov
mov
out
xchg
pop
pop
shlb
decb
in
and
lock
jg
jg
in
in
ficoml
aad
mov
adc
leave
inc
mov
decl
int3
imul
mov
xchg
inc
and
imul
mov
mov
pop
aam
sbb
or
ds
cmp
std
test
test
dec
push
xorl
cld
cmc
imul
fbstp
imul
lcall
push
in
ljmp
mov
jecxz
rcl
add
xchg
sbb
jl
mov
add
inc
loopne
clc
and
stos
sbb
in
and
in
sub
mov
and
mov
xor
cmp
leave
pushl
aas
push
pushf
js
in
andl
outsb
xor
push
sbb
mov
mov
dec
incl
jl
in
inc
dec
or
inc
stc
shlb
shlb
mov
adc
incl
push
inc
adc
test
movsl
cmp
ljmp
ljmp
in
xchg
sub
mov
fistpl
pop
mov
xor
ret
scas
jmp
or
pop
test
xor
cld
dec
stc
mov
push
push
or
out
xorb
sbb
push
mov
shlb
mov
add
repnz
fwait
and
pushf
mov
pop
out
push
xor
loopne
fistl
sti
adc
cmp
cli
in
push
cld
aas
loopne
test
mov
and
lods
pop
pop
jne
add
sbb
sti
sbb
daa
mov
out
jge
dec
mov
xlat
xchg
mov
mov
fcom
ret
mov
fdivrs
mov
add
add
fmuls
inc
lcall
push
rcr
imul
add
jg
mov
mov
xchg
or
add
pushf
add
sub
add
test
cmpsb
mov
nop
cmpsb
or
inc
mov
add
test
sbb
xchg
movb
jmp
or
ror
xchg
inc
add
and
add
cmpl
les
inc
or
add
mov
mov
pushl
adc
or
mov
sub
mov
lret
nop
cmp
ror
cltd
fcomps
or
jmp
repz
pop
adc
test
sub
scas
and
ljmp
movsl
mov
decl
jmp
xchg
loop
push
test
sbb
dec
mov
add
cs
aad
xor
or
scas
pop
std
ret
rcl
and
call
push
xor
dec
or
or
lds
jnp
xor
sub
dec
cmp
mov
je
loope
lea
pop
mov
xchg
loop
sub
scas
cmp
out
inc
in
jnp
ljmp
loope
inc
and
xchg
inc
adc
xchg
jmp
fistpll
pop
into
mov
outsl
xor
jmp
jo,pn
cmp
mov
inc
mov
pushf
jo
xchg
inc
pusha
vunpcklps
mov
cmp
fadds
fisttps
fwait
mov
mov
sbb
xor
or
test
mov
subl
lcall
and
xchg
dec
scas
xor
inc
push
adc
cli
mov
add
ljmp
add
nop
in
lret
add
mov
sub
dec
mov
sub
xor
cmp
dec
dec
loop
ljmp
lea
test
lods
pop
cmp
popf
pushf
cs
jg
test
and
cmc
rorb
jecxz
icebp
and
inc
xchg
pop
inc
xchg
sbb
cli
movsb
inc
mov
adc
adc
or
lret
out
mov
lea
mov
cmpsl
inc
lds
dec
mov
stos
stos
push
ljmp
popa
in
xor
cmc
mov
mov
stos
mov
adc
clc
lret
push
das
data16
inc
xlat
lcall
into
das
insl
fcmovb
inc
arpl
jge
cmp
ficoml
pop
mov
inc
pop
js
xchg
fnsave
mov
inc
pop
scas
mov
push
fadds
movsl
int3
or
and
out
adc
adc
and
cmp
repnz
jecxz
das
xchg
lock
cmp
jbe
mov
lcall
in
fsubs
cmp
sahf
dec
lods
andb
leave
push
xchg
push
call
add
pushl
cmp
jge
dec
xor
bound
push
cmpsl
mov
and
pop
xchg
mov
or
mov
decl
cmpsl
xor
xchg
push
jecxz
movsl
add
push
push
addr16
incl
jg
mov
add
lcall
xor
aaa
inc
lods
outsb
or
mov
mov
mov
hlt
ja
and
adcl
pushf
pop
jne
sbb
fwait
arpl
fcmovne
dec
outsl
xchg
add
rcll
jbe
mov
push
adc
sbb
pop
or
sbb
ret
jg
or
cmp
dec
push
sub
pushl
bound
gs
in
loopne
mov
shrl
icebp
fsubs
test
ljmp
imul
dec
scas
ss
int
mov
jnp
stos
ret
xchg
lods
rclb
pop
cmc
incl
xchg
xchg
into
pusha
stos
pop
aad
cmp
sbb
inc
pop
push
loope
xlat
movsl
dec
std
loope
ljmp
in
loop
adc
daa
sarb
pop
dec
inc
sub
in
inc
push
ss
test
dec
fadds
push
dec
cmp
and
mov
dec
popa
lds
or
jl
test
dec
iret
dec
push
adc
negb
into
ds
lret
call
int3
cltd
sub
and
sbb
add
dec
pushf
pop
add
call
push
inc
mov
pop
sbb
cmp
ljmp
loopne
sarl
lods
inc
mov
xchg
test
scas
sti
lcall
popa
mov
aam
push
inc
and
inc
inc
xor
inc
shll
lds
sahf
cmp
fildll
xor
add
mov
pop
and
nop
int3
dec
jbe
aad
aad
or
pop
stos
fimull
cmp
cs
fmull
shlb
and
pusha
sbb
jae
test
sbb
and
aaa
rcll
cmpsl
icebp
and
pop
fldenv
aad
sub
sbb
test
aaa
mov
call
or
lret
push
call
in
test
orb
and
xor
xor
test
es
shrl
inc
xor
and
orl
incl
aas
divl
pop
adcb
sbb
insb
cmpb
push
divb
scas
pop
sub
inc
sbb
lcall
lds
into
call
inc
in
nop
pop
add
neg
loop
daa
pop
add
inc
cmp
or
and
into
cmp
rcrb
cmp
bswap
shl
adc
test
sub
sahf
dec
hlt
clc
ljmp
sarl
insl
jmp
popa
pop
xor
inc
inc
test
cmp
fimuls
sbb
imul
sbb
decl
nop
mov
icebp
insl
mov
gs
mov
and
dec
aad
and
inc
xor
cmp
adc
add
rclb
or
movsb
lods
ret
dec
movsl
cld
jg
cmp
cltd
inc
imul
push
test
cltd
sbb
aaa
cld
and
dec
adc
popa
aad
jmp
or
xor
jae
imul
push
add
mov
in
sbb
or
in
cs
mov
fcmovbe
scas
jp
cmpsl
xchg
or
sub
in
push
cmp
xchg
int
icebp
sahf
jmp
fcoml
mov
movsb
hlt
decl
fimull
clc
cmpsl
add
stos
aas
jne
mov
mov
aaa
inc
mov
push
jge
pop
pop
jl
addr16
mov
adc
adc
push
mov
fisttps
jo
pop
sub
mov
aam
fwait
adc
lods
rorb
dec
cli
shl
jg
call
movsl
sub
lret
push
push
pop
call
ljmp
rcrb
dec
mov
fdivl
pop
dec
repz
fucomip
mov
dec
out
sub
cmp
repnz
jb
inc
jg
and
rclb
jmp
pop
fstpl
inc
pop
cmp
ja
test
inc
sub
mov
lods
add
inc
hlt
movsl
test
arpl
push
mov
movsb
hlt
mov
sub
mov
xchg
cmc
call
mov
das
add
xchg
fs
je
jmp
dec
icebp
je
cmpsb
adc
pop
and
mov
sub
fnstcw
lock
and
mov
mov
sbb
mov
xchg
mov
imul
std
loop
lds
flds
mov
mov
sbb
in
repz
add
cmp
fsub
xchg
icebp
jg
dec
cmp
aaa
lahf
enter
or
or
test
sbb
test
aaa
lds
and
test
push
push
add
addr16
in
push
aad
push
push
sbb
pop
fidivrl
xchg
clc
fists
xchg
shll
adc
sbb
or
jmp
pop
pop
movsl
mov
adc
pop
test
mov
dec
xchg
inc
repz
lcall
fwait
mov
adc
stos
out
dec
and
inc
jecxz
lahf
adc
add
pop
imul
outsl
mov
pushf
mov
mov
mov
xor
pushl
stos
push
sbb
or
mov
mov
inc
fsubl
sbb
push
adc
mov
push
push
ret
sti
cmp
inc
sarb
mov
mov
repz
dec
icebp
incl
sahf
in
jmp
fstps
ret
lret
xchg
lods
pop
adc
jmp
cmpsb
leave
sub
or
sub
clc
popa
adc
loopne
ds
in
call
or
ret
call
sahf
push
cmp
mov
mov
or
and
in
inc
push
cmp
push
mov
loopne
push
xchg
incb
mov
mov
dec
xor
out
mov
int
push
push
rolb
and
xchg
mov
loopne
jae
add
js
push
inc
xchg
push
mov
lock
mov
adc
popl
out
xor
cmp
inc
adc
or
imul
adc
in
sub
incl
mov
es
pop
pop
lods
mov
sbb
test
cltd
call
call
filds
mov
sub
mov
sbb
sbb
pop
fwait
mov
inc
push
xor
jg
pop
sub
mov
dec
ret
cmp
sub
jecxz
jno
mov
cltd
and
add
sbb
adc
mov
imul
push
scas
mov
mov
pop
or
xchg
lcall
cmp
sub
ds
mov
push
movsb
leave
popa
sbb
pop
stc
mov
outsl
andb
in
mov
xchg
and
insb
mov
dec
sub
ljmp
imul
shll
push
sub
jecxz
inc
mov
mov
sbb
sbb
xchg
push
push
pop
subb
or
push
add
outsl
add
enter
pop
imulb
pop
movsb
push
mov
jno
add
mov
dec
clc
subl
loope
and
sub
jle
mov
pushl
fcoms
or
and
fwait
xor
adc
inc
mov
cmp
arpl
loop
sbb
int3
test
stos
and
xchg
or
dec
sub
push
decl
imul
dec
dec
test
mov
pushf
movsl
out
nop
movsb
xchg
into
stos
popf
sbb
pop
ret
inc
sar
fcomip
jmp
cmpb
lods
push
fcompl
mov
push
fisttps
mov
sbb
push
jnp
inc
out
or
push
insb
lcall
or
pop
and
in
mov
cmpsb
in
mov
cmpsl
je
pushf
inc
ljmp
mov
clc
mov
addb
add
or
mov
jmp
mov
hlt
cmp
roll
sub
push
mov
push
insb
das
call
mov
xchg
pop
mov
pop
push
sbb
cwtl
mov
cwtl
add
mov
ljmp
or
in
rorb
stc
add
pop
cltd
into
fdivrl
ljmp
cs
int
pop
xor
cmp
mov
or
mov
notb
cmp
repnz
cmp
clc
pop
cmp
cmpsb
jno
push
fwait
dec
xchg
arpl
sbb
add
ljmp
mov
mov
adc
sbb
mov
adc
jmp
mov
loop
lea
pop
inc
aad
xchg
cmp
outsl
pop
cmpsb
in
mov
and
adc
sbb
mov
add
std
aam
sbb
mov
jg
and
inc
mov
mov
imul
mov
mov
lock
into
push
add
adc
repz
stos
loopne
enter
jecxz
push
sbb
ljmp
xor
repz
in
mov
addl
cs
xor
incl
xchg
mov
jmp
pop
jo
pop
sbb
data16
test
jge
dec
and
push
jo
add
rolb
or
fstpt
cmp
pop
test
cli
jecxz
andb
aad
push
add
pop
cwtl
add
cmp
pop
xchg
xor
xchg
or
xchg
dec
flds
sbb
nop
pop
cltd
in
mov
mov
je
mov
mov
push
aam
ret
jge
mov
movsl
pop
fistpll
cmp
aam
inc
dec
or
sub
and
adc
cltd
xchg
cmp
mov
lcall
pop
inc
jg
stos
or
or
mov
ss
lods
or
cltd
nop
and
movsl
stos
inc
test
cmpsb
mov
jne
adcb
adc
mov
jne
cmpl
sbb
mov
adc
mov
ficoml
mov
sbb
sub
jb
popf
or
mov
cmp
pop
mov
push
and
xor
out
add
fsubs
push
dec
sbb
xchg
dec
imul
inc
call
mov
lds
jge
call
mov
mov
jmp
mov
adc
xor
jp
inc
mov
mov
cmp
ljmp
jg
and
add
ret
dec
cmc
sbbb
aas
testl
mov
cmp
rcl
mov
add
lock
pop
jg
mov
seto
pop
fsubs
push
or
add
mov
fbstp
call
or
mov
mov
pop
inc
jmp
sub
and
mov
push
sbb
call
rorl
jp
mov
mov
mov
dec
push
dec
push
test
inc
mov
lcall
jnp
jecxz
mov
leave
add
out
fcomip
call
sbb
fwait
out
int3
add
mov
fadds
jo
aad
and
dec
push
jg
fnstsw
lock
lds
sbb
sub
fbstp
ret
movsb
ret
xor
add
sub
std
fdivrl
jnp
aam
adc
outsl
xchg
enter
jecxz
cmc
cmp
xchg
imul
fadds
add
sbbb
and
pop
jg
cmp
inc
int
mov
pusha
sub
fisttpl
ds
arpl
aaa
fcompl
ljmp
cli
fistps
cmp
pusha
lret
push
mov
or
mov
out
sub
ljmp
inc
loope
pop
jne
jnp
xlat
push
pushf
lret
jle
icebp
std
xlat
in
gs
bound
push
or
ljmp
jbe
gs
adc
xor
add
add
and
sub
sub
fildll
cs
add
pushl
jle
nop
loopne
std
and
xchg
imul
nop
pop
push
jmp
mov
pop
hlt
lods
fnstenv
cwtl
mov
in
inc
cmp
sbb
aad
lcall
mov
stos
xor
mov
movsb
cmc
mov
and
incl
pop
aam
cmp
jge
inc
xor
stos
popf
or
adc
dec
mov
push
xorl
sbb
fwait
aam
int3
in
and
lcall
or
test
rclb
xchg
fcompl
pop
inc
sub
mov
add
and
subl
mov
jmp
loop
test
fiaddl
shlb
test
nop
xor
movsb
or
outsl
sub
sbbb
insb
arpl
mov
adc
push
xor
cli
pop
add
movsb
cs
adc
mov
push
adc
xchg
fsubrl
fimuls
ja
imul
fstpl
push
std
cmp
sub
cmpsb
dec
in
jne
enter
aaa
leave
shrb
push
stos
lock
adc
adc
mov
inc
xchg
mov
inc
loop
jp
in
push
data16
out
push
aaa
gs
data16
fucomp
insl
pop
int
hlt
adc
fisttps
push
jl
out
mov
add
mov
rcrb
rcl
lock
fistps
sub
or
fnstsw
je
fs
xchg
and
lock
data16
pop
mov
stc
popf
fists
fs
out
popl
jg
cmp
mov
cmp
xor
int
fidivl
sbb
movl
sub
mov
add
leave
sub
and
adc
lock
sub
lock
jmp
test
outsb
add
rclb
mov
adc
leave
loop
or
adc
jecxz
call
in
nop
xchg
out
add
aam
mov
das
cli
pushl
cmpsb
ss
bound
dec
jno
push
jg
lea
or
out
add
lcall
call
sbb
pop
sub
mov
pop
add
mov
stos
sub
add
add
and
shll
mov
insl
mov
cmpsb
les
mov
pushl
or
rclb
or
cmp
push
ret
mov
in
jmp
pop
ret
xor
shr
or
lcall
incb
insl
mulb
getsec
push
push
mov
push
out
std
pusha
mov
ss
jnp
cltd
ja
vpshaw
incl
add
or
call
in
orl
in
das
call
jmp
pushl
dec
outsl
pop
jbe
call
jge
add
add
dec
push
sbb
mov
incl
nop
addl
inc
mov
xchg
es
ret
aam
cmp
das
or
movsb
push
lds
mov
das
mov
pop
xorl
int3
mov
mov
pop
lock
ja
loopne
scas
popf
shl
xchg
cld
cltd
call
std
or
pop
pop
pop
jne
push
setge
mov
incl
mov
mov
cmp
fcomip
testb
dec
push
jbe
push
xchg
inc
and
and
lcall
push
jl
or
adc
xor
mov
lcall
repnz
mov
or
lcall
xor
jae
mov
cmpsl
cmp
xor
insb
mov
cmp
movsl
ljmp
ljmp
jle
xchg
jae
shll
hlt
pop
mov
inc
push
cmp
mov
pushl
rcrl
ret
jbe
hlt
pop
cmpsb
hlt
or
mov
fsubp
xchg
insl
dec
fs
jnp
and
jmp
std
cmp
ss
es
decl
sahf
inc
icebp
movb
mov
in
psadbw
pop
lock
mov
cli
jnp
loopne
xchg
mov
outsl
inc
aam
and
decl
sub
cmp
inc
outsb
aas
cmp
jbe
xlat
scas
sub
sub
inc
jg
or
inc
xor
cmpsb
cli
loope
enter
pop
pusha
xlat
xchg
lret
je
sbb
add
xor
call
and
jle
in
notl
ljmp
add
pop
mov
andb
add
jecxz
or
cmpsb
repnz
sbb
lods
pop
xor
cmpsb
xchg
pop
dec
fdivl
bound
out
inc
in
sub
inc
repz
and
daa
push
lcall
mov
push
or
xchg
lods
xor
or
xor
loope
xor
sbb
sub
jle
call
inc
orl
add
add
ds
sahf
insb
mov
sbb
mov
movsl
adc
ds
or
sbb
sbbl
bound
rcrb
pusha
adc
lods
cmc
lcall
jb
and
aam
mov
mov
fnstenv
and
fbld
in
out
aad
fs
stos
lods
sub
insl
fisubrs
decl
sub
inc
loopne
dec
rclb
or
push
cmpb
int
mov
cmp
pushl
xorl
jp
push
cmpsl
push
jg
lock
outsb
out
add
sub
pop
push
adc
mov
loopne
subl
jg
das
outsb
fdivrl
repnz
mov
repz
ret
inc
sbb
mov
fidivrs
int3
ficompl
xor
sbb
pushl
xor
iret
cli
ja,pt
shl
dec
jle
jl
add
aaa
loopne
hlt
out
clc
incl
fs
dec
push
aam
pusha
addb
push
xor
mov
dec
add
inc
loope
xor
aam
dec
test
decl
sbb
adc
pop
movsb
adc
in
cld
jg
sub
fidivl
fincstp
pusha
test
xchg
push
inc
xor
pop
or
xchg
mov
push
or
rorl
nop
inc
std
xor
cmp
or
cmp
roll
in
jg
jmp
inc
loop
movl
iret
hlt
mov
ljmp
cmp
popf
sbb
flds
sub
popf
xor
adc
lcall
incl
mov
les
dec
dec
inc
pushw
cmp
xchg
dec
mov
inc
dec
aaa
inc
aam
and
xor
incl
stos
add
sub
pop
jg
xor
in
pop
cmp
dec
test
pop
fxam
sub
scas
pop
stc
pushl
rclb
arpl
push
pop
pop
out
sbb
push
aad
mov
inc
adc
imul
lods
cmp
pop
int
icebp
imul
filds
lock
inc
sbb
mov
pop
adc
aaa
in
and
push
inc
repnz
pusha
ficomps
mov
in
push
dec
cli
call
jne
loope
inc
jno
adc
pop
cmc
fcmovnb
sbb
insb
pop
je
inc
dec
aam
sbb
mov
pop
inc
adc
jmp
ljmp
lahf
jbe
scas
clc
jg
ljmp
cmp
std
pop
and
push
test
xchg
jp
fcos
pushl
std
sub
mov
xchg
and
popf
mov
dec
pop
cwtl
and
push
das
mov
mov
fnstsw
cli
inc
sbb
inc
mov
add
sbbb
sbb
sub
decl
inc
mov
sbb
and
or
push
hlt
mov
in
jg
rolw
fildll
xor
lea
ret
xchg
std
sbb
decl
aad
in
push
jae
sub
sahf
scas
rol
mov
cli
hlt
movsl
push
xor
pushl
in
and
nopl
and
lods
ss
mov
lock
jg
dec
inc
pop
addr16
test
fdivrl
sbb
test
fildll
clc
outsl
mov
loope
in
push
xor
jg
add
loopne
pusha
mov
mov
fisttpl
push
call
cld
sub
js
rolb
repnz
pop
nop
pop
scas
cltd
or
push
fisttpll
pushl
jne
mov
rorl
fmuls
dec
enter
or
or
call
and
adc
leave
lcall
sbb
inc
add
insb
pop
popa
in
push
adc
xchg
call
or
iret
pusha
test
or
cwtl
cmp
nop
jecxz
jmp
addb
daa
sti
xor
push
xor
adc
insb
lcall
add
je
lcall
xchg
icebp
ds
jl
addl
cmp
xchg
adc
test
mov
jo
sar
fisttpl
imul
cltd
in
test
fxch
jle
push
nop
pushf
add
xchg
lea
lahf
jecxz
jecxz
nopl
push
je
cld
out
test
les
popa
jmp
xchg
repnz
movsl
xor
lcall
xor
sub
jbe
rcrb
or
nop
ds
push
and
out
movsb
mov
and
sub
cltd
push
imul
incl
add
and
jge
arpl
add
adc
sar
jmp
shrb
push
inc
nop
jg
inc
pop
outsb
call
loopne
cmpsl
aas
or
popa
mov
cmp
popa
orl
ljmp
stc
fwait
lahf
push
mov
sub
js
add
push
test
cmp
or
lock
pop
adc
jb
sti
dec
mov
mov
fsub
inc
mov
loopne
add
xchg
mov
or
push
and
add
xor
add
pop
cmp
sbb
mov
decl
mov
insl
pop
pushf
jg
jo
fiaddl
jg
pusha
cld
in
les
loopne
adc
mov
mov
outsb
add
sbb
sub
jno
push
mov
sahf
adc
mov
sbbb
sub
dec
cmpsb
cmp
jecxz
insb
mov
ljmp
data16
decl
mov
mov
mov
loope
adc
ror
shll
in
and
sbb
repnz
xchg
clc
outsl
cmpsb
js
cmpsb
sub
fcmovb
inc
jb
jmp
mov
mov
push
ficoml
aad
push
sub
popa
mov
outsb
push
xor
or
jmp
rorl
xlat
movsl
add
inc
adcl
decl
or
lds
dec
fildl
jo
rcrl
push
add
xchg
xchg
outsl
pop
add
jmp
xor
sbb
xchg
push
clc
in
push
add
inc
xor
xor
mov
das
js
xchg
inc
xrelease
js
ljmp
out
inc
lcall
mov
stos
enter
push
lcall
adc
mov
aaa
rcrl
scas
rorb
cltd
cmp
dec
dec
jecxz
mov
orl
sub
mov
fiadds
push
arpl
fs
popa
adcb
xchg
mov
sbb
add
dec
push
dec
ljmp
cmpsb
fisubrl
sub
adc
jp
test
ljmp
fisttpl
sub
adc
into
jne
push
mov
jmp
lcall
xchg
std
rclb
xor
sti
add
cmp
bnd
outsb
jne
xor
mov
ljmp
test
movsl
adc
aas
jle
xchg
arpl
cli
push
lret
lea
sbb
test
mov
loop
xchg
sbb
fimuls
adc
ret
es
and
cmc
fmull
stos
jmp
outsb
into
in
inc
ficoml
inc
fstp
jle
mov
mov
or
int3
les
xor
dec
mov
cwtl
int3
push
imul
cmc
adc
sbb
sbb
lock
push
lock
insl
push
fcompl
outsl
mov
addr16
call
ret
dec
sbb
xchg
adc
xor
ds
add
add
xor
ljmp
andb
pusha
pop
repnz
dec
mov
push
jl
jns
pop
pop
cli
dec
pop
test
mov
pushl
sub
lods
fsubrs
mov
mov
mov
fsts
lret
mov
push
xorb
sar
mov
ret
xor
mov
jge
or
cld
shlb
clc
cmp
inc
outsl
scas
mov
ljmp
pop
incl
sbb
sbb
mov
movsb
ds
adc
test
scas
subb
loope
stos
roll
pushl
js
xor
into
mov
ljmp
fadd
out
xchg
rorb
add
mov
xor
cmp
je
mov
addr16
inc
rorb
pop
mov
jae
lock
dec
imul
mov
ds
sbb
ret
jmp
sub
leave
xor
sub
pop
daa
imulb
inc
adc
sbb
hlt
fcmove
scas
incl
xchg
scas
into
leave
inc
add
dec
std
mov
sbb
dec
adc
mov
ljmp
or
and
in
insl
sub
ficomps
xor
ss
xor
add
loop
mov
roll
sub
adc
cli
incl
dec
sbb
sbb
sub
lcall
loopne
cmp
test
pop
jl
mov
add
push
xor
pop
enter
push
call
mov
cmp
mov
push
or
xor
mov
cltd
int3
insl
inc
int
adc
lea
mov
mov
mov
pop
or
movsl
and
fnsave
dec
jne
rorb
inc
pop
leave
inc
je
pop
jbe
adc
cmc
jns
or
cmp
ftst
pop
jb
sbb
dec
jno
popa
call
sbb
push
sbb
mov
push
ljmp
sbb
mov
jne
xchg
pushf
sbb
rcr
xchg
loopne
leave
dec
push
adcl
adc
inc
push
jle
cmp
xchg
into
add
loopne
mov
push
dec
clc
test
call
dec
inc
lahf
fisubrl
mov
mov
cmc
pop
sbb
pop
push
push
enter
pop
jne
jb
push
mov
stos
clc
rclb
sub
mov
test
mov
shll
jl
lret
scas
mov
adc
mov
popf
pop
or
push
jb
ss
or
xor
int
xchg
inc
add
fldt
xor
push
mov
add
dec
test
mov
lcall
sbbb
mov
lahf
adc
mov
hlt
loopne
ret
aaa
add
push
add
or
iret
adcb
scas
addps
mov
out
vpunpcklqdq
sub
jg
mov
lret
jo
or
mov
lods
inc
adc
pop
ljmp
adc
and
mov
cmp
mov
mov
inc
repnz
push
out
rorb
mov
sbb
adc
and
les
or
ja
push
fistpl
fwait
jmp
jb
and
incl
adc
sbb
in
pop
aad
hlt
call
mov
and
sahf
jmp
push
test
pop
icebp
pop
sbbb
dec
adc
int3
jo
sub
aaa
xor
or
fidivrl
outsl
mov
enter
rcrl
fstps
enter
mov
leave
ret
lock
lret
push
jge
mov
mov
mov
mov
inc
call
inc
pushl
in
leave
sbb
inc
mov
sbb
add
dec
xchg
jle
and
cltd
dec
in
mov
mov
and
lcall
dec
dec
add
mov
lcall
push
js
test
add
js
rol
inc
cs
dec
lods
add
add
idivb
lods
inc
jg
push
pop
push
push
popa
inc
jo
dec
jo
push
cmp
lcall
sbb
push
ja
or
or
inc
jp
sti
xor
sub
inc
mov
add
xor
incl
xchg
push
lock
pop
add
aad
movsb
sbb
sbb
lret
push
insl
adc
scas
cli
jg
pop
dec
mov
pop
dec
loopne
call
call
rorb
movsl
jne
push
lods
fstl
mov
jb
xlat
cmp
pushl
push
in
rcr
cwtl
xchg
adc
sarb
lcall
adc
and
mov
popa
mov
decl
mov
adc
inc
in
and
pop
in
push
push
sbb
lock
jnp
dec
pop
fisubs
jns
out
fiaddl
cmpsb
jl
inc
adc
mov
adc
add
loope
int
sbb
pop
test
xor
incl
cmpb
call
sbb
lahf
sbb
data16
lds
cmp
dec
pop
cmc
jg
fbstp
sub
sbb
iret
dec
incl
or
lock
sbb
call
test
dec
jle
add
jl
mov
ret
les
test
push
jge
test
mov
or
push
pusha
adcb
dec
add
inc
pop
call
dec
aaa
push
jbe
cmp
mov
ds
popa
pusha
addb
mulb
xchg
add
push
push
pop
test
gs
rcrl
jl
xchg
dec
fcmovbe
mov
inc
dec
dec
call
inc
or
stc
sub
std
jmp
mov
mov
int3
add
inc
lds
jno
pop
decl
bnd
xchg
push
push
popf
pop
lea
ret
enter
nop
mov
lcall
test
or
mov
ficoms
adc
sbb
mov
pusha
lahf
ljmp
sahf
fiaddl
jmp
xorb
mov
gs
aam
jp
xor
scas
cltd
push
cmp
es
or
cmpsl
outsb
mov
mov
rcl
lret
inc
inc
pop
push
lcall
imul
test
add
mov
mov
nop
mov
xchg
in
js
dec
pop
je
and
movsl
and
lcall
dec
xchg
lods
adc
lock
lcall
cmp
pop
sub
data16
fisubs
enter
addr16
sub
inc
add
sbb
add
inc
roll
mov
jmp
jmp
lss
pop
ss
mov
mov
repnz
and
and
decl
adc
mov
cli
jmp
xchg
loopne
js
insb
dec
add
insb
push
loope
lcall
stc
cs
das
mov
jmp
out
inc
insb
aam
xlat
stc
dec
adc
enter
pop
int3
xchg
loope
jb
and
cltd
mov
and
pushl
xchg
cmc
push
pop
and
fbld
fcomip
jg
and
lret
lock
fs
dec
sahf
jle
xchg
jo
hlt
jg
call
leave
fucom
inc
fcmovne
pop
push
insb
loope
push
out
and
mov
inc
jo
ja
std
incl
jo
ljmp
and
loopne
mov
flds
and
loop
sub
cmp
jecxz
fcomip
mov
out
jl
inc
lods
xchg
lcall
xlat
sub
pop
cwtl
push
imul
mov
inc
adc
sbb
mov
loopne
lcall
sub
xchg
pop
dec
inc
test
loope
test
add
fisttpll
dec
icebp
pushf
test
push
out
jno
xchg
pusha
mov
int
xchg
enter
cwtl
mov
sbb
xor
cltd
mov
fwait
cmp
mov
test
repnz
mov
test
or
jg
cli
test
scas
rolb
scas
push
dec
sbb
ror
addl
mov
mov
push
scas
mov
lcall
mov
pop
fs
add
call
mov
push
movsl
push
dec
rolb
lret
fcmovb
mov
addr16
fmull
jle
ret
push
repz
cmpsb
ljmp
lcall
or
inc
add
aad
lock
inc
push
or
inc
jns
and
pusha
call
sbb
clc
fdivrp
stc
and
fldenv
sub
xchg
push
loope
int
xchg
hlt
scas
jg
dec
fmulp
gs
inc
sbb
aam
loope
or
call
std
popf
adc
repnz
push
shll
add
jmp
sub
mov
sub
jg
call
cmpsl
pop
out
movsb
les
adc
lea
xor
rcll
das
cli
inc
pop
dec
jo
xor
shll
xchg
xor
add
xchg
mov
call
or
addb
jmp
add
or
xor
sbb
rcr
lahf
and
decl
cmpsb
addb
xor
jns
xlat
cmp
mov
mov
inc
xor
ljmp
flds
ret
sub
inc
push
fcoml
inc
in
outsb
mov
push
sub
inc
xor
adc
cmp
xor
xor
adc
cmp
lcall
push
scas
test
adc
ss
call
mov
pop
std
xor
mov
push
jmp
rcrb
or
add
sbb
jmp
fstl
and
iret
and
jmp
xchg
push
xor
or
or
or
cld
pop
pop
pop
push
dec
inc
and
push
mov
fsubrs
push
test
add
loope
icebp
out
or
sahf
sbb
pop
ror
enter
adc
inc
sarl
int
add
lret
shl
pushl
dec
dec
loop
test
dec
sub
sub
pop
ljmp
adc
movsb
mov
pop
or
jle
add
jmp
cwtl
cmp
pusha
pop
jp
or
push
pop
mov
icebp
lods
sbb
clc
lods
cmpsb
aaa
fdivr
and
or
clc
and
cmpsb
add
and
or
mov
decl
pop
or
xor
xor
loope
mov
inc
fisttps
xchg
mov
movsb
mov
stos
sbb
inc
adc
test
push
lret
sub
das
add
inc
lods
or
in
pop
push
inc
xchg
loop
push
repz
scas
jmp
mov
ss
lret
mov
test
movsb
dec
mov
push
jp
test
outsl
lods
mov
je
test
dec
ljmp
mov
lcall
pop
test
fsubs
cld
sbb
xchg
lcall
jmp
cli
or
and
jecxz
ret
ljmp
cmc
pop
inc
insb
jge
ret
sub
push
or
inc
or
or
ljmp
sub
add
aad
inc
inc
dec
mov
xchg
xchg
fst
or
xor
mov
pop
adc
mov
sbb
pop
cmc
aaa
cld
jge
inc
sbb
into
inc
sbb
mov
imul
fidivrl
lock
and
dec
fs
pusha
ljmp
les
mov
jns
or
push
sahf
mov
imul
push
inc
ja
or
adcl
test
adc
and
add
pop
cmp
jmp
lcall
mov
in
fbstp
sub
das
clc
sbb
loopne
sub
data16
shlb
fcomip
call
cmp
sbb
sahf
shrl
xchg
jge
mov
jl
leave
addb
ljmp
pop
add
jecxz
dec
or
mov
call
cmp
icebp
icebp
mov
jbe
add
jg
pop
cmp
jbe
movl
ja
jp
lds
addr16
xor
rorl
cmp
xchg
mov
mov
push
in
cmp
pushl
loop
je
sti
push
mov
fisubrl
add
sahf
lret
adc
push
jge
jmp
decl
jno
inc
sub
add
cmp
cmpb
mov
jge
fisttps
inc
xchg
or
fs
and
and
add
lcall
adc
add
pop
adc
cmp
mov
cmp
ret
ljmp
decl
mov
and
mov
push
das
xchg
imul
sbb
push
inc
inc
dec
mov
sbb
pusha
adc
int3
and
add
and
or
sub
arpl
adc
outsl
push
movsb
inc
adc
jge
push
jl
out
push
test
js
dec
shrb
mov
sahf
xor
push
or
shl
pop
cs
sbb
test
cmp
fs
imul
pop
jg
mov
inc
inc
jne
aaa
sbb
push
pop
popf
ljmp
pop
es
pushf
pop
cmp
mov
adc
int3
adc
cmp
call
lret
or
std
mov
sbb
inc
xchg
arpl
xor
and
add
xchg
cmpsl
pop
add
adc
xor
popf
pushl
nop
aam
aaa
addb
jno
jl
add
scas
and
xor
lea
xchg
dec
popf
pop
xchg
add
bound
aas
test
loop
test
jg
addl
jge
repz
mov
cld
ja
scas
aas
cli
in
outsl
cld
stos
out
cli
inc
pop
dec
push
lods
xlat
push
and
es
adc
int3
push
aas
add
sub
sub
xchg
mov
pushl
dec
sub
les
dec
lock
jno
pop
inc
test
cld
add
mov
sarl
jnp
gs
es
inc
or
lcall
call
orl
adc
test
push
xchg
mov
loope
sub
stos
xchg
decl
sub
jb
mov
loop
int
test
mov
xor
scas
pushf
dec
dec
jg
fbstp
mov
push
data16
xor
cwtl
mov
sarl
xchg
cli
or
lret
gs
mov
mov
jp
and
ljmp
mov
mov
jp
or
pop
lcall
pop
add
in
cltd
adc
jns
xor
mov
stos
bound
pop
dec
xor
fisttps
xchg
mov
sub
cmpsb
gs
mov
js
aaa
addb
xchg
pop
cmpsb
inc
stos
and
jg
jmp
sub
pop
or
sbb
pop
mov
mov
enter
mov
jbe
rcr
cmp
dec
mov
addb
scas
xchg
sub
mov
adc
scas
faddl
adc
mov
mov
sub
xchg
and
xor
xor
ljmp
insb
sub
nop
cmpsb
xor
push
stos
into
mov
outsb
mov
add
or
push
fadd
nop
sbb
into
test
into
mov
aaa
sahf
call
or
clc
mov
out
insb
lods
xor
mov
outsb
cs
mul
rcr
or
add
jecxz
rolb
mov
movsb
outsl
lea
fiadds
push
mov
pop
mov
in
mov
adc
mov
cld
and
scas
or
cli
idiv
jb
push
fwait
dec
pushf
inc
and
xor
mov
push
leave
sub
ljmp
add
cltd
bound
xchg
mov
sub
imul
fstl
and
add
inc
adc
dec
imul
les
fcompp
push
jmp
inc
in
test
test
scas
lods
call
push
rolb
loop
loopne
mov
jmp
test
cwtl
xor
mov
std
adc
mov
and
dec
shl
adc
incl
sti
cmp
push
jg
scas
add
sub
push
call
rolb
scas
imul
add
incl
adc
and
cmp
or
and
adc
add
inc
cld
lcall
and
andb
cmp
pop
adcb
stos
hlt
and
jg
dec
stos
xor
mov
jp
int3
inc
sub
sbb
and
adc
adc
ret
mov
mov
inc
leave
loope
enter
add
fsubl
mov
xor
jb
inc
inc
fsubp
dec
add
jmp
pop
push
dec
cmp
pop
push
mov
fistpll
jbe
es
loopne
or
orb
and
cmpb
push
ret
or
xchg
xchg
iret
fxch
in
sbb
xchg
movsb
cli
outsl
mov
bound
xchg
stc
mov
scas
nop
xchg
repz
shll
dec
mov
nop
xorb
lea
insb
push
cs
and
test
fdivl
aas
adc
int
sub
repnz
aaa
sbb
adc
std
fildll
popf
jmp
jge
push
filds
cwtl
mov
cltd
sub
pop
sub
ljmp
or
cmpsb
sub
dec
in
and
push
int3
pop
mov
stos
sub
inc
push
sub
daa
push
lods
out
push
ljmp
test
pop
dec
jge
mov
mov
mov
and
jbe
lock
jle
sbb
jnp
add
fnstsw
dec
jmp
adc
inc
jg
add
pop
inc
push
out
mov
cmpsb
xor
sub
aam
jle
pop
pushl
shll
mov
jbe
add
es
pop
inc
mov
adc
gs
test
pop
out
xchg
lods
cltd
mov
push
or
pushl
mov
and
les
stc
or
lret
push
shll
or
mov
push
jmp
mov
sarb
ret
xorl
mov
sbb
je
sbb
jmp
add
in
push
jnp
pop
sar
out
aam
mov
sbb
popl
jecxz
xchg
arpl
jecxz
jnp
jae
imul
popl
enter
loope
mov
pop
decl
test
fdiv
adc
decl
loop
test
fs
sub
inc
xor
sbb
nop
cmp
push
mov
push
add
xor
pop
aaa
mov
je
adc
subb
movsl
popa
mov
and
adc
xchg
je
jns
stos
fnstsw
mov
scas
dec
fsubrl
push
popf
pop
pop
xchg
jb
fs
xchg
dec
adc
aaa
sbb
push
ljmp
adc
lds
push
cltd
adc
cmpb
je
imul
ret
add
movsl
xor
pop
sub
incl
loope
scas
mov
push
dec
inc
and
clc
xchg
shrb
push
push
xor
add
dec
std
aaa
loopne
leave
push
insl
aad
mov
jg
xor
push
sub
mov
push
les
test
push
sub
adcl
scas
jo
mov
lcall
push
fwait
or
or
sub
aad
xor
dec
int3
bound
dec
mov
aad
decl
mov
add
out
inc
sbb
adc
inc
lea
sbb
pop
push
stos
jns
cmp
jmp
fwait
out
push
rcl
mov
cmpsb
add
leave
sub
decl
cmpsb
scas
mov
cmp
cmp
inc
in
js
xchg
jb
imul
fstl
push
mov
jne
out
es
sarb
push
sub
call
mov
mov
stos
sarb
mov
xor
jnp
jns
insb
imul
xchg
mov
sbb
pop
inc
mov
mov
ja
mov
aam
test
fisttpl
cs
lds
movsl
push
add
and
mov
into
push
sahf
jle
into
inc
aad
xchg
lcall
cmp
adc
xor
and
mov
mov
movsb
mov
push
xchg
pop
sbb
xor
xor
cwtl
cmp
es
jbe
mov
dec
push
call
push
add
daa
mov
push
in
xor
pusha
pop
sbb
mov
xchg
inc
and
adc
repz
sub
or
xchg
jae
leave
rcrb
pop
pop
xchg
inc
mov
cmc
cmpsb
decl
xchg
push
push
loop
mov
movsl
and
add
rorb
adc
scas
or
andl
dec
loop
iret
or
push
je
pop
xchg
out
insb
sar
cmp
xchg
mov
pushf
dec
das
decb
xchg
data16
lcall
jmp
sbb
cwtl
dec
js
inc
xor
cli
mov
inc
mov
push
dec
shrb
xchg
xchg
insb
pop
bound
jo
add
jecxz
call
or
fdivrs
pop
xlat
arpl
stos
mov
loop
nop
outsb
shlb
mov
sub
rorb
data16
pushl
in
add
cmp
sbb
movsb
and
cmp
jmp
daa
fisubl
fadds
aad
pushl
fstl
cmp
loope
imul
add
inc
jnp
inc
int
or
into
ss
jns
daa
bound
push
and
ret
lret
xor
jnp
sub
xchg
lods
and
cmp
jmp
lock
add
xor
aad
test
test
iret
inc
inc
in
adc
jmp
inc
sub
and
xor
or
bound
loopne
xor
add
and
jg
push
lret
cmovbe
push
adc
cmp
dec
rorb
std
jmp
in
or
lock
push
out
jb
jecxz
in
fs
add
add
adc
enter
imul
icebp
pop
sub
dec
and
test
adc
nop
adc
rcrl
push
lcall
jg
cs
mov
jmp
ret
jo
mov
xor
inc
dec
hlt
sbb
call
pushl
movsb
adc
cmp
rcll
cld
inc
adc
inc
jo
ljmp
inc
orb
nop
or
ljmp
dec
insb
push
test
scas
int
dec
addr16
lods
mov
in
stc
sub
clc
pusha
or
add
imul
addb
je
mov
inc
pushl
les
out
cld
clc
dec
sahf
test
call
ja
or
fcmove
in
cli
push
cld
inc
jbe
dec
mov
sub
out
lods
jp
outsb
pop
push
add
adc
or
lret
js
lds
add
insb
clc
inc
lcall
in
int
lock
and
mov
jge
cmpb
ljmp
bound
sbb
pop
dec
mov
or
dec
dec
mov
sub
cld
dec
jnp
gs
mov
ljmp
push
into
stos
push
xchg
inc
jb
mov
scas
dec
clc
dec
jo
xor
cli
into
daa
sub
das
inc
outsb
pop
shlb
ljmp
xorb
add
mov
ss
lea
cmp
test
mov
imul
out
cli
repnz
ljmp
or
mov
test
cmp
cli
rcrb
add
mov
ja
xchg
push
xchg
insb
faddl
mov
jbe
mov
or
inc
fisubl
and
sub
xor
mov
aas
mov
test
lret
adc
or
xchg
in
loopne
cli
cwtl
sub
push
cld
pop
pop
mov
sub
adc
jmp
sbb
xor
scas
sbb
xor
dec
lods
in
std
add
mov
mov
pop
xchg
pop
int
stos
xor
psrad
inc
push
roll
dec
add
or
loop
dec
js
fdivr
fildll
and
inc
mov
pop
or
xchg
xchg
push
mov
in
ljmp
push
repnz
inc
and
or
push
add
repnz
rcrl
and
rorb
leave
in
adc
push
in
and
push
js
ds
fcomip
jmp
ret
lods
call
pushf
cmp
out
rclb
jmp
jbe
gs
inc
aaa
inc
or
jle
pushf
cmpsb
or
outsl
icebp
ficoms
repnz
ss
nop
inc
or
lods
jb
popf
fcoms
or
mov
lods
hlt
lcall
ljmp
cmp
fbstp
xor
cs
outsl
jl
inc
jne
adc
xchg
into
xchg
dec
je
test
sbb
dec
xor
and
xor
lcall
icebp
xor
jecxz
sbb
dec
xchg
bsr
imul
mov
push
xor
xor
inc
in
dec
sbb
push
push
out
test
les
iret
call
lock
lock
adc
xor
push
out
sahf
pop
push
stos
decl
push
mov
lret
add
cmc
xchg
dec
roll
sbb
add
roll
jb
ret
jg
mov
into
sbb
outsb
push
adc
push
and
add
or
push
int3
mov
outsl
push
call
pop
lds
jp
cmpsb
je
push
jmp
xor
mov
push
out
and
mov
inc
mov
fcmove
add
and
inc
sbb
pushf
adc
sub
adc
inc
mov
ja
cmp
xchg
out
mov
rcrb
push
xor
push
mov
inc
shll
das
mov
lods
inc
sub
cli
sub
inc
mov
mov
mov
and
lcall
cmp
hlt
mov
ljmp
shll
ja
fadds
adc
clc
bnd
insl
shll
roll
mov
in
adc
dec
inc
jb
push
add
push
push
add
ljmp
or
inc
dec
movsb
das
ret
scas
inc
call
jb
out
andb
or
mov
stos
mov
je
hlt
lods
lds
jo
shll
adc
scas
and
out
jecxz
scas
and
jmp
xor
ljmp
loope
dec
push
arpl
subb
cmp
cmpsb
hlt
push
add
and
xor
or
sub
pop
das
pop
iret
mov
addr16
loope
sub
std
ret
cmp
push
ja
jmp
ret
decl
dec
out
jo,pn
icebp
lods
out
insb
fnstenv
add
jg
xor
xchg
dec
mov
fs
fistps
out
jl
shl
sub
sub
clc
mov
jne
sub
in
ret
pop
insl
pop
clc
gs
xor
lods
xor
adc
mov
inc
xchg
cmp
push
rcl
xor
shlb
inc
sub
add
mov
idivb
clc
adc
cmc
sbb
pusha
dec
mov
cmpsb
insl
call
cmp
les
iret
pop
xchg
push
fnsave
push
cld
les
xchg
inc
xchg
cltd
js
add
std
or
dec
xchg
loope
lcall
fisttps
call
add
dec
add
push
sub
jmp
or
out
pop
or
mov
repnz
mov
std
fidivl
mov
push
jo
out
push
add
call
xchg
push
lret
test
xorl
push
test
nop
aad
push
test
push
sbb
xchg
push
xchg
sub
das
add
sbb
xchg
sub
push
and
in
sub
call
cli
mov
stc
je
stos
inc
lds
loope
test
das
ss
cmp
cmpsl
pop
jmp
pop
push
cld
jg
or
lret
fdivp
add
ret
mov
and
out
xor
jb
sub
mov
inc
push
xchg
orb
fidivrl
lretw
cmp
pop
iret
adc
mov
and
dec
pop
pushl
inc
arpl
outsl
xor
sbb
mov
jecxz
aaa
xchg
inc
add
cmp
call
mov
sbb
push
sbb
imul
ffreep
imul
jno
mov
outsl
xchg
mov
pusha
jae
mov
outsl
sub
cmp
div
pushl
cld
dec
adc
mov
je
hlt
inc
sub
cld
fadds
inc
push
and
ljmp
and
fsts
dec
notb
lods
dec
fstl
jg
in
gs
movsb
mov
ret
hlt
scas
xchg
push
lcall
jnp
pop
in
push
adc
scas
mov
scas
inc
jmp
or
pop
stos
lock
mov
or
outsb
pop
call
fucomip
cmovl
stos
lods
incl
push
adc
test
and
or
std
call
mov
mov
test
pop
sbb
iret
out
or
xlat
jecxz
jmp
mov
xchg
mov
loope
ret
sbb
xor
inc
mov
stos
sub
insb
stc
mov
cwtl
shll
js
and
shlb
icebp
jb
and
lods
xor
js
aam
frstor
hlt
push
cmp
push
jmp
sub
lcall
sbb
xor
and
adc
stos
and
stos
jg
and
pop
cmp
es
jl
imul
sub
sbb
push
pusha
popa
dec
inc
stos
divl
adc
jp
mov
add
inc
fisubl
mov
inc
inc
push
inc
sub
push
testb
stos
sub
or
dec
in
or
add
ja
ljmp
add
pusha
or
jae
pop
inc
jl
jg
mov
cli
mov
outsl
dec
mov
push
mov
add
popa
fwait
mov
xchg
push
int3
push
cmp
push
in
pop
hlt
pushl
adc
inc
cmp
test
xor
xor
xchg
in
mov
jmp
dec
push
pop
adc
insb
cmpsl
pushf
mov
dec
mov
sbb
aad
push
add
in
stos
sbb
jg
mov
sub
inc
mov
lret
sub
sub
lods
dec
scas
dec
in
rolb
pop
sbb
adc
ret
ss
jbe
and
stos
jmp
in
in
sub
stos
loop
into
bound
cmp
addr16
decl
sbb
fs
clc
add
pop
aam
mov
push
sub
jnp
aam
mov
pop
out
call
xchg
sub
jne
push
pushf
stos
imul
jg
stc
lock
and
cmp
or
add
cs
mov
call
pusha
jge
inc
cmpsb
xlat
scas
and
ret
or
cmp
cltd
pop
cmc
in
adc
jp
cmp
cmp
jg
add
push
mov
jnp
jl
xchg
fmuls
in
psllw
pop
sbbb
es
push
sub
cwtl
lds
out
inc
andb
mov
test
mov
pop
mov
xor
rolb
cmp
mov
sti
pushl
cmp
pop
lods
cmp
or
shl
sub
xor
in
mov
dec
xor
inc
repz
dec
adc
stos
lock
ljmp
add
fcomps
rorl
and
inc
pushf
xor
mov
aad
sub
pushl
scas
loop
mov
xchg
inc
push
push
sub
mov
push
sbb
orb
jo
jmp
lods
adc
add
fsubl
pusha
mov
dec
sbb
sub
xor
inc
fstpl
cmp
sbb
outsl
and
xor
int3
push
mov
hlt
daa
shll
push
shll
inc
or
adc
mov
lds
add
xchg
stos
jne
lods
ja
lock
pushl
insb
add
scas
xor
inc
mov
jns
arpl
js
and
popa
adc
in
clc
cmpsb
pop
and
insb
out
jmp
mov
das
ret
inc
insb
int3
lret
aaa
inc
cld
cmp
pop
cmc
sub
popf
sub
mov
inc
or
fs
inc
jb
fwait
cs
loop
ja
adc
push
cmpsb
ror
mov
fcomip
cmp
les
sub
dec
and
fmuls
mov
jmp
sbb
inc
push
mov
pop
sar
pop
push
add
in
inc
dec
rclb
fst
arpl
or
dec
data16
addr16
or
dec
popf
jae
mov
push
pop
fstpl
int
ret
clc
jp
rcl
mov
stos
mov
aam
repnz
mov
dec
push
mov
xchg
mov
sbb
lods
and
sbb
call
jmp
lds
jne
sub
into
outsb
test
and
lea
decl
icebp
xor
jnp
inc
in
dec
dec
jecxz
jae
lahf
xor
ficompl
decl
or
test
test
into
push
inc
fsub
cmp
ds
add
out
add
ret
les
dec
mov
push
pop
and
inc
loope
jns
mov
vpcmov
mov
xchg
clc
pop
push
or
mov
adcl
lcall
sbb
je
andb
sbb
data16
mov
or
jecxz
call
enter
inc
mov
ds
sub
sbbl
cmp
xchg
and
decl
push
mov
and
lcall
push
gs
incl
xor
jne
test
sub
or
dec
cld
push
cld
and
addr16
aam
loopne
add
add
adc
lcall
rclb
das
push
aad
insl
add
pusha
xor
lret
enter
mov
and
lods
clc
lock
push
daa
es
cltd
repz
std
pushl
rol
push
mov
call
xor
mov
pop
ret
test
jne
sub
aas
sti
fildll
add
add
shlb
icebp
mov
mov
add
xor
jg
pushl
ret
add
add
add
cld
dec
es
je
and
decl
fucomip
jo
push
je
jmp
lea
sub
ret
or
cmp
roll
add
loopne
cmp
push
movl
add
or
push
sub
pop
add
mov
sub
outsl
inc
add
jne
pushl
add
add
mov
pop
lea
push
lea
or
das
clc
fildl
ret
movsb
dec
cmp
pop
add
jle
sub
push
dec
push
jb
je
arpl
imul
in
imul
add
movb
push
clc
mov
sti
cmpsl
mov
mov
add
test
jle
add
fbstp
or
push
shl
inc
add
mov
or
mov
pushl
push
xlat
popa
add
mov
or
mov
mov
idiv
test
jne
mov
and
mov
push
enter
shl
int3
cmpsb
nop
repnz
and
pop
add
cmp
add
adc
fnstenv
pop
comiss
mov
push
sub
sbb
lock
sub
add
cmp
nop
dec
and
test
jne
add
leave
je
cmpb
add
leave
jne
cmpb
lahf
sbb
test
cmp
jne
or
and
repz
or
sbb
call
jne
sub
cmp
mov
cs
sarb
idivl
in
shl
push
je
mov
inc
jle
inc
push
rcrl
add
aam
leave
sahf
lret
les
cmpsl
repz
sbb
or
cmpsb
sbb
testb
or
rep
and
push
mov
pop
sahf
jge
cmp
dec
sub
xchg
daa
fcomip
dec
hlt
mov
push
add
cltd
cs
cmp
or
cld
xor
xor
push
jmp
imul
cmp
mov
or
xor
popf
lcall
and
cli
pop
push
inc
call
and
pop
mov
adc
mov
add
repnz
shr
pop
push
pop
aam
movsl
add
rcll
insb
in
jo
call
inc
push
push
mov
pop
push
push
jecxz
mov
mov
add
jnp
sar
imul
jmp
mov
cmp
xchg
or
pop
ds
sti
pop
ret
pop
popa
sub
hlt
jbe
test
mov
leave
ja
or
add
add
jo
push
pop
and
xchg
pop
push
mov
xor
push
jo
rcrb
sete
cmp
ds
mov
xor
call
pop
movaps
add
lds
sub
jae
clc
push
dec
adc
mov
je
pop
adc
ret
fistl
aas
xor
test
xchg
pop
in
idivb
or
cmp
sub
js
outsb
jns
mov
pushf
push
jbe
add
add
push
sbb
xor
adc
in
jnp
imul
ja
nop
pop
je
call
or
adc
push
cmpsl
cmp
popa
adc
pop
pop
adc
jne
inc
jns
lret
lock
mov
cmp
mov
dec
nop
in
sub
push
adc
nop
call
push
xchg
cld
ss
add
insl
dec
mov
hlt
in
pop
in
pop
cmpsl
xor
add
and
in
or
adc
add
ret
nop
and
mov
or
xchg
lea
or
cld
hlt
pop
fmuls
movsb
clc
mov
pop
movsb
inc
push
xchg
sub
add
leave
inc
ret
add
xchg
mov
mov
enter
adcb
repz
mov
pusha
orb
loopne
or
call
lods
andb
lea
sub
xchg
or
pop
mov
or
or
xorb
mov
push
je
jge
inc
cmp
mov
lds
loop
imul
jge
mov
mov
or
sbb
cld
fistpll
insl
hlt
add
push
clc
stc
inc
mov
enter
popa
and
lock
roll
aaa
or
adc
enter
and
movsb
sbb
in
and
mov
test
call
sbb
pop
mov
movsl
stos
add
inc
hlt
jmp
ja
jnp
pop
adc
xchg
cld
pop
mov
lock
add
enter
stos
cmp
lcall
or
push
sbb
ja
in
xor
adc
add
push
jnp
xchg
fstpt
loopne
inc
loopne
fadds
pop
in
or
xor
jnp
or
and
push
push
mov
cmp
stc
jno
dec
aam
cmpsb
sbb
pop
xchg
rcrb
loope
mov
pop
int3
add
add
push
lods
rcrb
pop
xchg
mov
and
icebp
popl
js
faddl
arpl
nop
jmp
inc
lcall
shlb
pusha
mov
adc
enter
movsb
and
jo
and
sub
in
inc
idivb
add
rolb
shlb
cmpb
and
inc
adc
add
push
sti
lock
stos
add
inc
and
subl
subps
sub
sub
jno
sbb
test
ret
push
pop
enter
pop
repnz
test
pop
xor
xor
inc
or
lock
mov
jne
in
adc
pop
das
or
adcb
ret
push
cmc
lock
and
inc
movsl
pop
xor
adc
arpl
and
xor
mov
push
add
mov
xlat
sub
sbb
adc
test
fildll
or
dec
or
mov
jnp
xor
pop
ljmp
outsb
daa
in
mov
loopne
je
in
sub
or
hlt
mov
in
push
imul
popa
mov
stos
mov
sbb
out
lea
push
lock
inc
inc
xchg
test
add
scas
sarl
mov
roll
in
jmp
ss
pop
shll
add
dec
sbb
cmp
shll
xchg
cld
xchg
jb
adc
pop
mov
rep
arpl
pop
or
sbb
xor
out
add
test
call
or
push
mov
push
cmp
jg
and
sub
mov
dec
jns
add
pop
mov
sarl
fmuls
add
ljmp
mov
js
inc
mov
jg
add
sbb
adc
dec
call
cltd
aam
fadds
ret
ss
mov
inc
mov
xor
xorb
and
push
adc
cmpsl
bswap
in
pop
pop
pop
push
inc
and
adc
inc
sub
inc
fnstenv
cmp
cld
adcb
adc
pop
push
dec
jne
shlb
imul
or
lds
cld
jae
sbb
mov
add
fmull
push
pop
and
arpl
ret
sub
jae
dec
cmpb
out
mov
aas
xchg
bound
enter
ret
and
jl
xchg
adc
test
lcall
add
add
or
add
lahf
out
or
mov
insb
sbb
add
lods
add
je
sbb
test
mov
adc
gs
loope
les
in
push
test
repnz
xor
in
add
pop
shrb
lock
incl
xor
push
int3
lods
add
adc
and
add
cmp
add
push
push
cmp
and
stc
and
bound
and
jmp
or
add
add
std
xchg
or
sub
movb
hlt
xor
inc
stos
and
mov
or
and
sbb
and
loope
or
mov
add
sub
fwait
inc
pusha
test
add
shlb
and
add
add
push
inc
and
cmp
adc
mov
and
jae
lcall
and
and
lds
push
arpl
or
pop
ljmp
pop
xor
stc
or
mov
jecxz
mov
and
sub
or
cli
or
shlb
jmpw
stc
lcall
nop
popa
cmp
add
sub
add
xor
sti
and
imul
call
sub
xchg
leave
in
nop
mov
rclb
add
xchg
and
jp
pop
inc
adc
sbb
nop
push
in
js
or
jo
and
shll
adc
pop
sub
fadd
push
out
sub
pop
ret
popa
mov
or
push
and
cmp
sub
push
call
sbb
jnp
loopne
xchg
xor
xsha256
cmpsb
shrl
add
push
add
ret
aas
pop
add
repz
add
bound
add
adc
sub
cmp
fs
cmp
xor
mov
cld
mov
mov
push
add
imul
xchg
mov
cmc
add
and
or
sub
movsl
test
insb
push
inc
add
push
add
and
fidivrl
frstor
fldl
faddl
push
in
test
iret
adc
ret
dec
mov
les
aad
leave
in
and
adc
pop
in
sbb
ror
push
in
add
mov
loopne
push
imul
inc
jecxz
aas
mov
dec
mov
jge
movl
cltd
mov
inc
lds
xchg
icebp
cmp
je
movsl
hlt
cmpsl
jnp
lods
into
or
xchg
idivb
cmp
sub
movsb
in
jge
movsb
push
dec
scas
push
push
jne
add
push
fcomps
jae
cmpl
mov
xlat
inc
inc
iret
jno
adc
mov
dec
popl
lock
rolb
xchg
negb
cwtl
xorl
lods
add
mov
aas
xchg
fildl
xchg
fisubl
cwtl
addb
cmp
mov
mov
fdivr
fcoml
xchg
and
mov
mov
add
jae
xchg
loopne
aas
je
xor
mov
mov
mov
xor
lea
nop
inc
push
adc
inc
sub
dec
xchg
lods
sbb
mov
push
add
and
repnz
ds
sbb
call
loopne
sti
pushf
cmp
mov
stos
ud0
hlt
xor
cwtl
aam
mov
aam
int3
in
in
add
inc
shrb
out
sarb
add
mov
push
or
cmpsb
or
pushf
repz
push
xor
adc
mov
inc
mov
fidivs
fstpl
imul
pop
popf
insb
and
sub
test
je
fchs
fcompl
sbb
sbb
inc
pop
add
adc
jbe
sbb
inc
pushf
pushl
inc
sub
xlat
push
jl
or
add
add
or
lock
jo
adcb
lock
dec
adc
test
dec
fcoms
fwait
mov
adc
pop
mov
add
inc
stc
add
scas
je
xchg
pop
xchg
jns
push
xor
inc
add
xor
mov
aad
cmpsl
or
sbb
or
mov
fimull
add
pop
adc
enter
push
xor
push
pop
test
or
sti
or
jge
mov
cmc
test
xor
mov
mov
xchg
jecxz
mov
je
ret
fistpl
hlt
add
pop
adc
sbb
js
popf
popf
xor
fdivr
fimuls
subl
pop
add
inc
aad
or
adc
test
cmp
lods
movsb
mov
push
hlt
sub
popa
xchg
test
and
shr
mov
jl
loope
cmp
xor
or
pop
mov
add
sti
and
in
mov
add
or
mov
pop
dec
jno
cltd
mov
and
jg
movb
xchg
jge
cmp
mov
dec
xor
xor
sub
sbb
push
sbb
testb
cmp
adc
nop
cld
pushf
and
push
ja
mov
cmp
cmovg
jo
movsb
jmp
xchg
adc
and
aaa
es
pop
pop
cmc
push
insb
shrl
sbb
add
mov
addr16
aam
movsb
popa
add
mov
movsb
pusha
mov
popa
pushf
out
movsl
nop
sbb
scas
push
ficoms
sbb
lahf
pusha
movsb
inc
dec
cmp
loopne
into
pop
push
rol
cmp
mov
mov
mov
flds
add
adc
mov
jae
mov
jmp
clc
push
sbb
mov
xlat
int3
mov
push
popf
push
clc
push
push
dec
sti
mov
pusha
mov
lock
adc
sub
hlt
push
add
mov
test
cmp
sahf
and
xchg
test
std
leave
add
dec
push
inc
repnz
add
call
adc
addr16
scas
in
inc
add
nop
and
roll
adc
cmovae
loopne
and
xor
int3
frstor
and
les
lea
ret
pop
imul
adc
rclb
js
add
sbb
push
rcrb
fdivl
and
loopne
repz
push
add
repnz
jno
xlat
rcrb
xor
adc
lods
lods
lods
movsb
xor
inc
dec
movsb
mov
push
jo
mov
mov
and
xchg
or
pusha
xor
mov
aas
pop
pop
pop
inc
mov
mov
cmp
jecxz
jg
fsubl
enter
mov
xchg
add
insl
add
stc
movsl
sbb
cmp
adc
adc
add
push
inc
les
out
adc
sbb
test
add
adc
xlat
add
arpl
rcll
inc
and
push
mov
call
cmpsb
ss
jo
cltd
ret
adc
test
and
test
push
loope
xchg
imul
jbe
and
nop
sti
and
pusha
mov
push
fildl
sbb
das
jno
sbb
add
mov
mov
icebp
mov
scas
nop
pop
and
sbb
lret
lods
push
xchg
sub
or
loop
popa
test
mov
and
cmp
lock
push
cltd
mov
dec
or
lcall
in
adc
sbb
add
sbb
and
add
sub
push
xor
pop
and
cmp
in
cmp
sub
xchg
sub
mov
dec
adc
dec
push
and
xchg
add
dec
leave
adc
jl
dec
cmpsb
or
add
or
push
xor
add
inc
test
hlt
and
addr16
sbb
push
shrb
jne
cmp
push
cmpsb
sti
or
sub
movsb
and
mov
test
xor
popa
mov
xchg
int3
testl
jnp
shl
movsl
push
pop
or
sbb
pop
or
sbb
icebp
fildl
pop
out
loopne
push
cmp
movsb
pop
adc
cmpsl
cld
mov
xor
in
mov
or
or
and
repz
cmp
dec
in
lock
ret
fstl
sbb
test
or
mov
adc
ret
xorl
sub
sub
cld
shrb
fimuls
imul
inc
xor
aad
inc
or
fildl
fstpl
fisttpll
fsubl
xor
push
sbb
bound
and
xlat
in
sbbl
add
mov
cld
xor
push
hlt
mov
add
movsb
cmp
dec
xorb
mul
insl
popa
jmp
sbb
add
je
cmp
add
call
pusha
mov
sbb
dec
inc
fstpt
jmp
mov
dec
enter
arpl
adc
push
or
adc
sub
subl
out
ja
fsubrs
fs
add
ja
in
pop
pop
orl
dec
mull
dec
das
jg
xchg
dec
and
outsl
xchg
xchg
add
nop
dec
xchg
incl
inc
jb
dec
xor
push
push
jg
inc
leave
inc
scas
xor
pop
xor
arpl
xor
insl
xor
jecxz
push
fstps
test
mov
es
aaa
lds
in
mov
sbb
adc
and
cmp
push
dec
and
xlat
mov
pop
mov
shrb
sarb
push
shl
push
rcl
sub
push
mov
push
mov
sbb
sbb
nop
add
mov
adc
clc
adcl
push
rolb
xor
adc
lods
ret
add
cmp
add
rclb
add
sub
adc
movsl
push
sbb
mov
mov
sti
adcl
dec
add
andb
and
clc
cltd
jo
mov
pop
jb
inc
rcll
mov
push
loopne
mov
sbb
add
xchg
push
les
or
inc
cmp
lods
inc
sbb
aam
mov
fisttpl
popa
cld
xchg
push
xor
in
and
xchg
mov
in
fs
clc
cmp
add
aad
sub
lcall
incl
inc
hlt
or
iret
mov
push
mov
imul
pop
cmp
cmp
mov
inc
xchg
in
pop
lahf
fcoms
popa
test
hlt
test
and
std
cld
cmp
scas
mov
inc
inc
outsl
hlt
or
call
scas
fcomi
inc
adc
fmuls
mov
push
in
inc
dec
lds
shl
xor
jb
pop
sbb
push
sbb
andb
push
pop
pop
add
pop
mov
in
add
cltd
mov
xor
push
add
or
cld
nop
or
or
sbb
shll
or
xor
pop
or
or
rorb
cld
lahf
or
xchg
inc
les
pop
or
insb
test
xor
rcll
and
rcrb
mov
xor
jae
loopne
sub
iret
lods
inc
addl
mov
xor
add
das
or
icebp
out
sarl
adcl
sbb
fs
nop
mov
adc
mov
dec
pop
movsb
test
add
fcomip
cmpsb
cwtl
je
lock
sbb
aas
dec
in
push
call
sbb
and
leave
adc
fcompl
cmp
fsub
fldenv
aam
shlb
mov
or
lds
push
inc
notl
jge
arpl
and
mov
test
push
ljmp
cmp
or
imul
inc
xor
jnp
mov
in
in
subb
std
loopne
in
in
add
call
fucom
loopne
cwtl
roll
ss
xor
xor
mov
push
xor
pop
js
inc
ljmp
lock
in
call
push
call
popa
daa
lock
jbe
out
xchg
sbb
ljmp
and
adc
xchg
sbb
add
push
xor
cmp
dec
rclb
pop
enter
popa
arpl
push
repnz
jmp
mov
in
jb
push
shll
mov
enter
cwtl
xchg
arpl
cmp
sub
add
les
into
mov
dec
gs
orl
cmp
or
clc
test
sub
add
xlat
loopne
fwait
and
loope
lahf
push
xor
lea
push
add
aaa
add
inc
icebp
test
xor
push
orl
adcl
inc
add
sub
fcompl
xor
je
dec
and
addl
outsl
loopne
inc
lods
fnsave
gs
mov
mov
mov
mov
inc
add
add
call
hlt
mov
mov
mov
movsb
dec
arpl
lock
push
pop
hlt
or
inc
mov
pushf
push
and
leave
push
pop
mov
pop
pop
hlt
ljmp
fimuls
pop
nop
aaa
pop
adc
add
mov
add
inc
subb
xor
fildl
inc
movsl
out
in
mov
or
sub
test
mov
into
adc
mov
shl
inc
adcb
adc
xchg
jmp
orb
jmp
adc
adc
std
rorb
sub
cld
push
mov
pop
fisttpl
adc
push
dec
in
inc
add
cmp
cmp
or
sahf
cmc
sub
movsl
imul
add
pop
adc
jne
andb
decb
int3
cli
fwait
mov
daa
pop
ret
push
popf
add
adc
push
cwtl
pop
push
leave
sub
cmpsl
or
addb
cmp
xor
mov
data16
test
push
add
inc
pop
sbb
and
add
add
add
sbb
gs
and
ja
pop
xor
jae
cs
jecxz
xchg
inc
imul
test
movsl
or
add
sbb
test
mov
inc
adc
rcll
adc
adc
mov
movsl
mov
mov
loopne
divl
pop
call
inc
popa
mov
scas
lods
andl
loopne
add
test
int3
aam
add
adc
dec
and
push
shl
aam
inc
inc
xchg
jns
jmp
aam
jo
filds
and
jnp
sbb
sarb
xor
mov
lock
jne
clc
sti
popf
pusha
nop
pop
xor
outsb
and
sub
mov
test
cmp
stos
xor
sbb
scas
sbb
dec
pop
add
mov
xlat
lods
sbb
adc
cwtl
add
test
add
into
mov
roll
pop
out
inc
or
dec
inc
push
sbb
mov
orl
sbb
sub
or
sbb
clc
dec
jp
or
pusha
xor
add
rep
cmpl
mov
and
push
je
sub
cltd
inc
test
sub
ja
sar
mov
push
or
inc
add
in
inc
add
sahf
dec
test
lods
xchg
sbb
pop
or
inc
sbb
adc
mov
in
outsl
pop
mov
jg
jle
repz
cmp
test
xchg
mov
adc
into
inc
push
rorb
rcr
in
loope
sub
faddl
dec
loopne
mov
inc
imul
jns
xor
xchg
shrl
adc
rclb
add
xchg
xchg
mov
pusha
xor
nop
mov
inc
xchg
jl
aas
lock
xchg
and
stos
xlat
jnp
icebp
xor
mov
inc
repnz
or
fsubs
or
jb
push
xlat
shlb
scas
iret
inc
fdivl
inc
jecxz
bound
mov
jge
inc
pusha
sub
dec
in
fistpll
lock
push
or
lea
adc
aas
push
add
push
sar
sbb
fcompl
push
lea
int3
nop
dec
pop
test
inc
loop
jb
cmpsl
mov
xor
rep
dec
push
sub
mov
mov
or
mov
xor
imul
mov
and
test
das
hlt
enter
rcrb
and
test
pop
dec
xchg
sbb
dec
add
rcrl
jge
mov
mov
or
jge
popa
mov
add
inc
sbb
push
lds
lret
dec
mulb
ret
xor
cmpsb
cmpl
xchg
or
push
inc
or
idivl
or
or
in
mov
leave
pop
gs
add
mov
leave
lahf
xchg
inc
jb
fsubr
fsubs
push
aam
jo
cmp
push
push
add
movl
test
xor
sub
dec
add
loope
sub
mov
inc
cmp
dec
pushf
cmpl
sub
cmp
add
inc
add
jle
addb
shlb
xor
push
mov
dec
inc
jb
add
popf
int
pop
mov
pop
sbb
sbb
inc
fstpt
jae
pusha
fldl
lods
pop
xchg
iret
inc
addr16
and
fiadds
jge
and
shl
arpl
popa
ret
xor
hlt
xor
in
dec
lock
xchg
cmp
in
adc
lea
jns
aam
pop
or
test
pop
or
add
test
lods
adc
sbb
dec
movsl
inc
mov
rcll
and
xchg
and
add
fs
ljmp
mov
or
jmp
dec
dec
icebp
push
push
dec
or
addb
push
pop
rorb
add
inc
pop
inc
clc
les
dec
cmpsl
lds
add
sub
add
bound
sbb
test
popf
and
push
or
mov
xchg
andb
push
nop
inc
sbb
cmp
and
add
lods
in
ds
inc
repnz
mov
stos
or
add
adcl
jnp
lds
int
xor
pop
mov
shlb
lods
and
push
ret
and
cmp
in
xor
dec
gs
push
add
fistps
mov
xor
push
sbb
push
and
or
add
fadd
adc
scas
sub
dec
pop
faddl
int3
mov
and
shlb
gs
mov
test
or
mov
sub
popa
int
and
dec
loope
dec
in
loopne
test
loopne
push
sbb
pop
or
fcomp
push
aam
lea
lods
add
jns
popf
fcoml
pop
jo
faddl
sbb
sbb
int3
das
jecxz
stos
push
enter
test
push
xor
call
gs
add
xchg
add
mov
adc
add
data16
or
mov
mov
and
popa
xor
and
test
sub
sbbb
add
pop
jb
lods
or
fisttps
xor
sub
and
dec
and
sub
pushf
dec
adc
dec
popf
mov
mov
adc
ret
daa
xchg
sbb
cmpl
test
add
and
clc
iret
rolb
in
es
nop
mov
push
ret
xor
popa
adc
test
repz
fdivs
or
loopne
insb
push
sbb
jno
push
adc
mov
add
xor
xor
pop
sub
jle
mov
std
sbb
les
test
fld
lods
xchg
adc
jmp
fiaddl
fcomps
out
outsl
addb
imul
xor
mov
addb
add
xor
lret
add
pushl
mov
dec
inc
test
ret
or
stos
add
pop
dec
mov
adc
subl
dec
sbb
jne
or
xchg
subb
mov
cmpsb
mov
add
jno
aam
cmpsb
push
sbb
pop
test
ss
icebp
mov
xor
adcb
jmp
insl
push
and
or
mov
loopne
fsubr
and
enter
pop
cmovnp
aam
push
cmp
je
lea
stc
test
and
adc
xlat
push
ljmp
cmp
in
lods
inc
dec
mov
mov
jecxz
inc
outsb
or
sbb
inc
inc
inc
bound
lds
and
sub
fmuls
jmp
aas
push
sbb
dec
xchg
fld
adc
test
or
repz
pop
mov
ja
les
sbb
shlb
shlb
adc
stc
or
sbb
add
loopne
ficompl
imul
in
ss
mov
push
enter
and
inc
lock
mov
cmpsl
or
jl
nop
mov
jae
sub
clc
addl
aas
jmp
add
jno
adc
sub
push
jl
sbb
insb
add
or
xchg
clc
push
mov
jmp
xchg
sbb
std
or
cmpsl
jmp
shll
aam
aam
aam
adc
xor
movsb
add
movsb
or
dec
pop
sub
add
imul
adc
fsubrl
ss
xchg
sub
adc
in
popa
xchg
es
fiaddl
push
push
adc
fcmovbe
sub
adc
sbb
xor
sahf
inc
mov
adc
movsl
addr16
or
add
sbb
sub
cmp
adc
stos
add
lods
dec
pop
cmpsl
test
addb
addr16
xchg
sub
enter
icebp
arpl
addr16
scas
dec
mov
inc
and
lea
andb
pop
lds
mov
inc
addr16
push
and
mov
and
ret
or
inc
adc
inc
shrl
outsl
dec
mov
sub
push
ret
adc
test
xor
jg
push
lds
rcrl
or
push
push
pop
xor
aaa
mov
pop
mov
cmp
cltd
sbb
adc
and
mov
movsl
mov
gs
dec
or
and
or
push
jecxz
fldt
or
cmp
test
iret
outsl
or
or
adc
pop
into
daa
xor
pop
lock
inc
and
in
or
sbb
xor
sbb
or
push
xor
aaa
sbb
or
sub
jmp
gs
cld
rcrl
popa
arpl
out
or
hlt
cmp
enter
mov
fwait
pop
adcl
insl
sarl
or
in
mov
addb
sub
pop
mov
jg
enter
or
add
mov
jmp
xor
sbb
add
mov
mov
adc
dec
or
sub
sub
or
leave
and
push
loope
or
add
and
jns
inc
add
sbb
pop
sti
inc
xor
jno
push
add
frstpm(287
add
add
and
mov
bound
sub
cltd
test
in
mov
sti
xchg
dec
inc
inc
sbb
dec
loopne
pusha
adc
mov
fs
xchg
out
ficoml
icebp
hlt
addb
cwtl
xor
ficompl
jecxz
cmpsb
inc
bound
mov
xchg
mov
push
mov
xor
gs
pop
xchg
leave
popa
adc
push
jp
test
mov
xchg
data16
jne
dec
sbb
call
adc
add
or
lea
adc
cmp
js
decl
or
pusha
roll
clc
pop
mov
add
adc
mov
test
out
xor
sub
xor
fmuls
or
repz
aad
sbb
inc
das
adc
push
adc
cmpb
add
aas
add
idivb
sbb
movsb
fsubr
adc
mov
or
inc
orb
push
div
mov
data16
pop
and
or
push
adc
dec
dec
ret
sbb
shrb
cmp
sbb
in
inc
lods
rolb
mov
xlat
in
lea
sub
in
mov
scas
sub
and
popa
mov
dec
pop
adc
mov
and
rorb
sub
dec
push
xchg
fwait
cmp
andl
xor
mov
and
add
bound
cmp
push
mov
add
or
sub
pusha
aaa
pusha
test
hlt
enter
mov
test
in
nop
or
mov
or
or
inc
cs
js
nop
or
and
mov
mov
push
pop
inc
add
mov
xor
mov
or
test
mov
clc
mov
cmp
mov
pop
lock
pop
icebp
in
or
outsl
push
sbb
adc
push
pop
test
sbb
xchg
mov
das
loopne
movsl
rolb
ja
inc
jo
in
popa
and
sbb
inc
jl
js
repz
shlb
or
add
loopne
fildl
aaa
cwtl
push
adc
lahf
dec
xchg
push
add
xchg
roll
cmp
pop
loopne
xchg
leave
dec
fadd
aam
loopne
cld
orl
or
rolb
push
xor
mov
xor
push
sbb
and
and
or
pushf
aaa
adcb
add
ja
cmp
add
push
dec
push
test
stc
scas
mov
mov
inc
and
xchg
dec
les
aas
dec
push
or
add
cmp
and
cmp
aam
enter
aaa
ljmp
add
and
jo
lock
pop
dec
and
mov
mov
shlb
mov
add
callw
pop
ror
enter
jo
sbb
mov
mov
add
dec
inc
and
mov
stos
mov
data16
xchg
in
stos
aam
cmp
mov
push
or
sub
mov
fstps
push
leave
jo
aam
cmp
in
cmp
mov
sub
int3
enter
xchg
cmp
enter
pop
jno
inc
rclb
aas
stos
testl
add
sub
stos
adcb
in
dec
mov
adc
adc
stos
mov
or
add
or
pop
int3
fildl
lock
cmp
movsl
fsubl
add
nop
mull
mov
inc
pop
dec
loop
inc
mov
mov
mov
mov
mov
push
xor
mov
mov
shll
add
out
in
clc
pop
sbb
or
enter
sub
fmulp
mov
sub
popa
mov
dec
mov
das
adc
cltd
ret
cmp
inc
mov
fadd
or
cs
rcr
push
fadds
repnz
lea
inc
cmp
rcl
inc
sub
int3
les
fcomps
stos
adc
or
stos
mov
dec
or
loopne
addl
pop
inc
add
orb
add
lock
sub
sbb
stc
add
xor
xchg
xor
adc
cld
xchg
adcb
and
icebp
fnstenv
fnstsw
repz
inc
nop
add
adc
cld
sbb
add
cmp
inc
das
stc
gs
das
mov
fistl
sbb
dec
mov
insl
lock
inc
adc
mov
sbb
mov
pop
sub
add
sub
ja
inc
test
mov
dec
test
xlat
pop
addl
and
stos
imul
inc
xchg
push
sbb
cld
inc
adc
shlb
cmp
mov
sbb
stos
or
add
fildl
mov
sbb
mov
sbb
xchg
shlb
imul
sbb
pop
int3
add
in
lods
shll
sub
hlt
sbbb
add
or
mov
or
adc
rolb
or
jbe
loope
inc
cs
inc
pextrw
adc
xor
cmp
and
ds
jns
sbb
xor
test
jbe
dec
pop
clc
std
cmp
jl
and
mov
stos
adc
push
int
push
sbb
rolb
mov
imul
adc
mov
and
iret
lods
push
cmp
mov
push
inc
or
fmull
inc
sbb
jne
insb
lret
cmp
and
add
shl
add
dec
outsb
sti
mov
sti
outsb
sti
add
add
sub
mov
and
ficoms
xchg
icebp
cmp
mov
and
enter
outsb
das
stos
jb
jb
stos
stos
jb
enter
enter
mov
add
or
sub
movsb
roll
lods
or
xor
add
call
ret
or
xor
inc
fs
lds
sbb
adc
push
sbb
mov
push
mov
add
sbb
mov
hlt
push
movsl
inc
jl
out
test
pop
movsb
push
lock
dec
push
fidivl
fdivrp
mov
adc
mov
mov
add
and
mov
push
xchg
inc
iret
mov
test
xor
adc
xchg
push
sar
sbb
sbb
aam
xchg
inc
and
pop
iret
sub
push
pop
das
lock
mov
push
or
and
jb
shlb
fsubs
and
int
dec
rolb
ret
sbb
outsl
adc
add
add
call
fsubr
nop
or
std
push
add
mov
fwait
lahf
or
call
dec
xchg
mov
mov
xor
dec
leave
xor
int3
or
enter
mov
mov
nop
les
adc
mov
push
xor
mov
in
loopne
push
dec
mov
and
xor
adc
dec
adc
sub
and
pop
sub
xchg
leave
dec
and
mov
push
and
inc
js
fildl
xor
lea
leave
hlt
testl
lcall
push
incl
or
in
nop
and
or
xor
mov
sub
nop
les
and
mov
adc
push
enter
or
dec
data16
or
inc
push
add
mov
push
pop
push
jae
or
lret
subb
fdivrl
add
repnz
test
inc
popf
xor
mov
or
xor
xchg
addl
stos
pop
inc
pop
loopne
pop
aam
loopne
or
aas
push
xlat
fsubl
mov
jl
bound
sbb
and
fadd
mov
pop
test
test
xchg
dec
and
sbb
dec
mov
inc
test
inc
mov
outsb
arpl
pop
pop
jmp
test
mov
dec
or
or
lock
fcmovu
push
mov
shll
fadds
add
mov
push
or
stos
sbb
in
loopne
mov
aam
add
adcl
hlt
lahf
mov
movsb
xchg
test
lea
lcall
jne
adc
ja
inc
and
sbb
xchg
cmpb
je
faddp
xor
ljmp
jl
loopne
mov
aas
adc
and
sarl
cmp
jl
test
loope,pt
dec
mov
add
movsb
xchg
loopne
lock
pusha
cmp
or
adc
fsubrl
popf
adc
loop
jno
cmp
mov
in
xor
mov
mulb
loop
pop
push
movsb
popf
and
ret
jmp
fsubrs
jns
cmp
popf
and
add
mov
mov
xchg
xor
mov
xorb
js
mov
or
lds
and
test
add
or
loop
xor
imul
jnp
in
mov
dec
adc
mov
sti
mov
inc
imul
cmp
cs
mov
stos
cmp
sub
in
roll
push
sbb
inc
adc
in
jecxz
sub
mov
push
or
or
mov
push
in
push
nop
loopne
faddl
nop
add
out
or
sub
or
xor
dec
es
repnz
xor
rcl
out
xor
mov
loopne
pusha
ret
cwtl
xchg
or
rclb
mov
daa
add
add
pushf
inc
es
fsub
iret
lods
sub
cmpl
inc
sub
xchg
xchg
js
or
loope
in
insl
lods
idiv
xchg
xorl
and
sbb
test
leave
mov
loopne
je
inc
mul
dec
fidivrl
call
loopne
inc
adc
test
leave
xor
push
les
xchg
adc
clc
pop
ljmp
shrb
fsubl
fs
sbb
mov
test
int
sbbb
pop
or
adc
pop
lahf
mov
xchg
sbb
addb
jo,pn
and
add
enter
pop
lea
push
into
mul
push
cwtl
scas
or
mov
int
imul
mov
outsb
mov
loopne
add
cltd
inc
jb
popa
repz
adc
lret
les
add
xchg
shrb
outsb
fmull
fldl
and
lcall
in
scas
add
je
mov
cmp
es
bound
in
stos
xchg
in
xchg
inc
rclb
jb
xchg
cmpsb
les
pushf
or
mov
add
cs
fsubrs
add
dec
es
mull
enter
cmp
xchg
lock
ret
pop
les
sub
adcl
mov
in
adc
xchg
stc
push
inc
lcall
adc
mov
orb
int3
cltd
pop
test
aad
push
mov
cmpl
xlat
cmp
and
xchg
lods
lods
test
push
mov
in
stos
sub
mov
nop
outsl
nop
xor
addb
ss
insl
fldl
pop
popf
js
mov
pop
add
aad
pop
loop
xlat
out
cld
xchg
loop
xchg
add
push
fimuls
lds
and
adc
sbb
fldl
jnp
push
or
mov
lea
dec
pop
mull
add
das
inc
enter
pop
or
xor
inc
dec
and
lods
pop
je
jo
lcall
arpl
lret
ret
sar
repnz
cs
push
popa
dec
mov
mov
inc
sub
leave
and
notl
xor
add
aad
adcb
mov
or
mov
add
sub
sbbl
test
xor
pop
test
push
mov
sub
les
and
stos
dec
or
gs
ret
dec
dec
push
adc
nop
or
pop
std
and
mov
adc
imul
add
inc
loope
lcall
jmp
pop
mov
pushf
and
inc
pop
xchg
mov
in
movsb
xchg
sub
inc
or
aam
xlat
in
test
add
mov
push
add
dec
inc
jg
or
cltd
nop
add
in
lods
rol
in
loope
out
inc
shll
add
mov
pop
push
adc
pop
or
ud2
lock
jno
orb
xor
adc
mov
pop
push
int3
rolb
icebp
fsubl
mov
movsl
adc
dec
mov
mov
mov
mov
movsb
jo
ret
iret
aad
inc
es
in
in
and
sbb
imul
out
popa
aas
add
mov
push
inc
clc
data16
rorl
xchg
push
pop
or
add
orb
jne
adcl
and
and
mov
movsl
sbb
or
inc
or
adc
adc
mov
mov
mov
test
cmp
mov
loope
push
push
fsts
sub
or
adc
flds
mov
add
add
dec
push
inc
sbb
adc
add
leave
or
cmp
adc
or
push
adc
or
popa
jne
push
mov
adc
inc
mov
add
imulb
or
cmpb
fmull
mov
push
jns
test
insl
aas
xor
test
xor
mov
jne
js
xor
arpl
dec
or
addr16
inc
cmp
jle
adcb
iret
shlb
sub
sub
jae
mov
loopne
or
nop
call
add
adc
int3
stos
sub
add
arpl
fwait
loopne
test
fcoml
rcrb
xor
hlt
pusha
inc
xor
or
adc
out
ror
add
add
add
inc
dec
and
rcrb
imul
mov
shll
dec
sub
and
cs
mov
add
add
jb
or
add
xor
imul
xchg
add
dec
cmp
mov
repz
rorb
mov
dec
mov
fimuls
and
lahf
add
or
inc
add
pop
and
aam
inc
hlt
dec
xchg
cld
add
and
lock
push
ljmp
jp
je
cmp
loopne
and
cmp
inc
mov
xchg
hlt
inc
loopne
orb
add
int
or
cmp
mov
mov
ret
add
push
loopne
and
aas
and
add
push
mov
dec
jge
inc
xor
lds
pop
xorb
add
mov
xchg
push
lock
xor
pusha
test
xor
dec
or
mov
or
mov
cmp
sub
pop
inc
hlt
aaa
ret
or
or
test
dec
fcoms
dec
push
and
add
push
xor
jae
and
inc
add
add
xor
mov
adc
push
add
sub
sub
mov
jns
roll
push
ret
dec
sub
call
cltd
fsub
add
xchg
dec
dec
jne
inc
in
bound
xor
mov
les
mov
inc
movsl
xor
cmp
lds
int3
add
fsubr
add
subb
push
inc
aaa
mov
sub
mov
icebp
fdivl
jb
inc
add
hlt
add
and
xchg
in
and
xchg
cmp
loopne
inc
adcb
pop
pop
bound
dec
push
hlt
rclb
push
push
jno
add
cld
stos
add
sbb
loopne
iret
rorb
lret
jge
fs
xor
xchg
insl
jne
int
int3
lcall
push
les
jb
aad
test
cs
test
mov
idivl
or
or
das
ret
lock
ret
inc
jno
cld
fninit
packuswb
sub
ja
inc
push
sub
or
sbb
dec
mov
sub
lea
sub
mov
pushf
test
insb
jo
mov
jl
int3
add
inc
or
inc
inc
clc
inc
rolb
push
ja
adc
push
jg
ljmp
cwtl
ret
push
mov
or
sub
scas
mov
pop
inc
mov
not
mov
add
add
or
or
in
cmpsl
sub
arpl
mov
adc
mov
adc
scas
jne
jl
movl
adc
popa
add
or
sub
add
test
or
mov
fwait
sub
mov
push
push
addb
ficoml
xchg
fs
ret
addr16
dec
inc
stos
out
mov
xchg
xchg
int
roll
add
mov
adc
pop
cmpl
add
ret
or
fdivrs
xchg
pop
add
sbb
fcmovne
xchg
or
pop
repnz
pop
push
je
cmp
ja
mov
adc
cli
or
sub
test
mov
es
xchg
mov
push
push
cmpsb
dec
jl
lock
imul
je
and
or
push
cld
or
pop
pop
je
inc
mov
pop
xor
pop
addr16
push
inc
mov
pop
mov
repnz
or
sub
cmp
sub
jno
insb
leave
or
jge
aaa
cld
mov
mov
pop
out
jne
fwait
mov
mov
push
add
pop
and
xor
das
jo,pn
push
xchg
add
adc
pop
push
add
and
xchg
imulb
je
lods
add
or
inc
cmp
pop
es
pop
iret
pop
loope
in
jge
fisubrs
lahf
or
lret
dec
out
addr16
fcmovnu
mov
shlb
mov
in
sub
push
mov
out
push
pop
or
xchg
icebp
add
lea
fldl
fcompl
or
mov
call
sti
sbb
fdivl
lea
and
cmpps
dec
fstp
jne
frstor
mov
sbb
sbb
rol
or
inc
divps
add
jmp
dec
repz
fstpl
push
sbb
movsb
jb
sbb
cmpsl
xchg
cmp
mov
jle
sub
jg
jp
mov
ret
add
je
dec
jne
xor
jmp
or
add
or
ret
in
mov
cmpsl
lcall
addr16
xor
ja
int
inc
rcll
push
and
imul
add
mov
push
fs
mov
mov
fsub
mov
fiaddl
jo
inc
and
sarb
sar
sub
xor
jl
or
pop
loopne
dec
jmp
sbb
or
inc
or
cs
mov
or
dec
pusha
cmp
js
fcmovnu
dec
ljmp
xor
jecxz
xor
add
pop
add
xorl
sub
add
sub
adc
or
jb
add
mov
cmp
dec
inc
push
or
fimull
push
push
cs
adc
and
in
push
and
xor
or
or
inc
ss
call
push
push
pop
xor
jle
pusha
mov
push
sbb
pop
test
adc
lds
pop
pop
push
add
push
or
insb
xchg
jg
stos
call
inc
sbb
add
pop
inc
pop
sahf
or
xchg
sti
pusha
ljmp
mov
add
leave
ds
xchg
push
orb
push
mov
je
push
push
or
aad
and
div
mov
sbb
jne
pop
mov
fnstsw
push
fadd
adcl
lock
cmpsl
incl
jp
enter
inc
rcrl
pusha
or
xchg
inc
outsb
into
aam
aas
aam
pop
mov
pop
pop
add
imul
out
push
fstpt
mov
pop
dec
pop
push
xor
mov
mov
sub
rclb
loop
ficoms
mov
jo
sarl
sub
jle
clc
loop
mov
movl
jl
push
adc
sbb
cli
cmc
mov
repnz
sub
lds
cmpl
or
xor
jmp
push
xor
lock
ret
rorb
sti
and
mov
mov
sti
mov
and
cmp
mov
jl
mov
cmp
jle
sbb
mov
xor
sub
push
cmp
sub
outsl
sarb
clc
jnp
cltd
xor
sub
inc
cltd
idiv
stos
call
cld
add
jbe
test
jg
imul
add
and
cld
pop
mov
jl
lods
mov
push
push
adc
and
adc
lods
cmp
jg
jo
idivb
scas
mull
adc
sbbb
adc
icebp
sub
add
and
lahf
push
sahf
mov
xorl
test
or
das
clc
sub
sarl
jle
lea
cmp
jle
sub
es
or
mov
adc
adc
mov
mov
inc
xchg
xor
adc
push
ret
push
test
inc
cmovae
dec
mov
inc
cli
cmp
jge
pop
fistpl
repnz
movsbl
mov
aas
jnp
adc
adc
cld
sub
mov
mov
addb
and
es
and
in
fisubl
jbe
push
in
or
mov
push
mov
fld
mov
sub
add
in
xor
mov
jl
sbb
fisttpl
inc
ret
dec
and
push
and
mov
mov
sbb
sub
jl
xor
mov
sub
add
mov
push
jg,pn
or
jl
sbb
cs
stc
mov
imulb
sbb
mov
out
jle
pop
mov
nop
into
pop
cmpsb
cmp
jl
add
inc
clc
in
add
xor
push
or
mov
and
pop
mov
add
cmc
fiaddl
push
jmp
mov
dec
loop
rorb
cmc
into
repz
dec
inc
das
paddusw
inc
inc
or
sub
jns
sbb
xchg
pop
cld
sbb
sbb
outsb
jle
sbb
xor
mov
xchg
inc
adc
pop
es
ds
or
ljmp
rolb
mov
xchg
and
xlat
or
fdivl
pushl
sub
cmp
lret
pop
and
sbb
shrb
jmp
fcomps
sbb
pop
xchg
inc
push
or
sti
cmpsb
fcomps
or
jp
pop
sub
mov
or
rcll
mov
inc
je
inc
push
inc
adc
jmp
mov
mov
cmpsl
je
sahf
inc
pop
orl
shrl
xor
push
add
stos
jmp
lea
and
and
cmpsl
pop
or
das
sahf
xchg
push
add
jo
add
cltd
pop
icebp
or
jl
sbb
int
repz
pop
inc
pushl
push
movl
sub
xchg
dec
aas
add
aas
popa
xchg
je
and
inc
movsl
lea
je
cmp
loop
arpl
xchg
cmp
mov
insb
bound
cmp
cwtl
jo
push
jb
xor
repnz
and
push
repnz
sub
loope
xor
sbb
mov
push
jmp
push
pop
mov
sbb
push
add
sbb
mov
je
test
out
leave
ffree
inc
inc
push
adc
sahf
mov
lahf
js
push
outsl
imul
and
movsb
xchg
lcall
fs
test
shll
ret
mov
outsb
movzbw
arpl
pop
ret
jge
pcmpgtd
je
fidivrs
and
push
cmp
push
pop
push
push
xchg
lods
aaa
rorl
push
rorb
nop
aas
mov
lea
or
cmp
jnp
js
lock
addr16
leave
fs
mov
push
jne
cmp
push
lret
push
adc
push
movsb
xchg
dec
dec
dec
add
xor
inc
dec
add
push
dec
add
add
aas
lock
pop
lret
jecxz
std
stc
jge
dec
or
jmp
mov
and
mov
shrb
jg
cli
and
je
cmp
jne
cmp
jne
test
icebp
jbe
ja
inc
xor
jne
testb
stc
dec
fnsave
cmp
sti
push
pushf
iret
mov
adc
ret
cmp
xor
mov
adc
js
or
or
add
rclb
inc
out
push
fcmovu
popf
cli
addr16
jmp
cli
and
cmp
and
aas
cmp
xor
jle
push
push
sti
pop
mov
mov
pop
ss
jmp
addb
inc
cmp
nop
aas
js
adc
mov
enter
push
mov
dec
or
jmp
je
push
push
movsb
push
ljmp
pop
pop
xchg
mov
cmp
mov
ficomps
mulb
lock
loope
neg
icebp
lea
sub
push
je
mov
mov
adc
mov
lods
adc
pushf
or
mov
push
and
jno
and
loopne
push
movsl
cmp
xchg
add
pop
xor
mov
add
hlt
sub
mov
inc
sahf
dec
jle
push
sbb
fwait
icebp
loopne
mov
adc
int3
jmp
js
fisubrs
sbb
or
ss
popa
outsl
fcmovu
xchg
adc
rorb
daa
lods
adc
inc
cmp
je
xchg
jne
inc
mov
outsb
cmp
xor
sete
shr
sbb
adc
mov
icebp
push
mov
pop
jmp
lret
test
in
jne
je
fists
cmp
jge
jnp
xchg
sbb
or
mov
sub
cmp
adc
jl
and
push
push
lea
dec
and
inc
xchg
sub
js
mov
dec
repz
mov
sub
sbb
push
sub
cmp
icebp
sarl
stos
je
dec
mov
je
jmp
mov
sbb
push
add
adcb
push
inc
dec
jmp
sub
sarl
dec
jo
cmc
cwtl
fsubl
push
fldenv
push
lock
int3
jmp
push
movl
adc
and
fmuls
ret
mov
out
dec
adc
aam
jl
mov
pop
rorb
loop
or
pop
scas
sbb
mov
adc
cs
in
iret
jno
movsb
cmp
jb
mov
pop
lods
sub
jbe
sbb
push
cld
jle
xchg
jne
aaa
in
ret
xchg
xor
insb
xchg
pop
filds
sub
push
push
xchg
shrl
mov
mov
inc
jne
pop
push
aad
push
sbb
fnstenv
es
dec
testb
adc
lods
mov
xor
adc
insb
adcl
cmp
je
icebp
xchg
incl
push
sub
out
add
out
lea
in
mov
mov
pop
mov
jmp
stc
cwtl
and
push
jne
push
call
mov
and
push
fstpt
and
rep
pop
xor
and
xor
sbb
and
push
jp
push
jl
mov
call
filds
not
xlat
and
call
sbb
cmpsl
mov
sbb
sbbb
sub
scas
test
mov
mov
inc
cmp
mov
pop
shlb
cmp
xor
vpunpcklwd
mov
mov
adc
int
imul
xchg
add
rclb
pop
rorb
lods
inc
push
lahf
xor
repnz
popf
dec
add
push
fnstsw
dec
mov
mov
mov
mov
adc
add
sbb
and
add
add
inc
pop
push
hlt
mov
inc
movsb
js
sub
orl
incl
mov
pop
sub
add
push
or
sub
adc
cmp
jmp
push
add
int
add
add
dec
movsl
add
inc
add
out
push
push
sub
sub
mov
sbb
add
sub
shll
jle
outsb
rorb
xor
and
mov
cli
mov
adc
jl
mov
lods
adc
and
sti
pop
cmp
sub
add
add
fucomi
pusha
mov
inc
push
cld
add
sub
push
jl
adc
push
sub
mov
jge
xor
cmp
jo
push
sbb
lret
ja
jo
mov
and
lds
cld
mov
nop
incb
push
or
xlat
clc
inc
adc
call
jecxz
inc
pop
or
pop
mov
int3
mov
xlat
push
jl
std
lea
and
stc
add
adc
mov
inc
add
rol
or
rolw
icebp
in
sub
push
sbb
and
adc
jg
inc
lret
sub
icebp
cmp
leave
xchg
fwait
jge
sub
push
loop
mov
pop
ret
lahf
mov
bound
inc
sbb
lea
inc
cld
cmp
cmp
cmp
into
mov
lock
pop
xor
lea
cmp
movsb
xchg
jle
ret
notl
mov
mov
arpl
nop
push
ret
mov
push
xchg
xor
imulb
jae
rep
je
aaa
jg
xor
add
adc
sub
dec
jns
test
xchg
jle
and
movsl
sbb
addr16
sbb
add
jno
loopne
jns
int
push
insb
mov
pop
fsubrs
int3
mov
lock
jl
push
dec
ret
xchg
int3
sbb
push
push
mov
addb
cmp
es
sub
rcrl
test
sub
inc
adc
shl
into
mov
dec
cmpsb
std
jge
cmp
adc
pop
mov
sub
rcrb
sub
nop
pushf
mov
push
pop
cmp
mov
push
clc
jecxz
in
and
xor
mov
aad
jbe
ret
dec
adc
mov
push
mov
mov
shlb
mov
push
mov
sub
sbb
cmp
clc
fwait
outsb
inc
jg
mov
scas
sbb
mov
rorl
clc
or
push
push
push
push
cmpsb
push
push
or
loopne
divl
jle
and
push
sub
mov
push
and
shrl
sbb
or
inc
adc
pop
and
clc
cmp
shr
shlb
sub
loop
or
movl
rorl
pop
xor
dec
mov
push
cmpsl
pop
add
in
in
stc
outsb
je
xor
lock
jecxz
cld
and
cmp
loopne
push
and
mov
push
push
xor
jbe
push
mov
dec
enter
or
or
addl
jb
imul
aaa
jbe
dec
inc
add
push
add
sahf
fs
mov
inc
push
lock
pusha
pusha
mov
test
inc
pop
jno
xchg
dec
or
dec
mov
or
fisttpl
mov
cmp
push
rcll
ret
push
push
sarb
ret
fs
mov
iret
pop
xlat
dec
mov
add
cmp
cmp
ret
fnstenv
dec
dec
mov
add
jge
pop
mov
xor
js
jo
sub
cmp
add
aad
js
add
push
nop
aas
xor
add
das
repnz
push
in
mov
mov
ret
pop
push
inc
in
mov
scas
mov
aas
repnz
mov
insl
pop
lahf
and
add
pop
push
testl
adc
dec
lods
adc
cmp
fwait
cmc
ret
xchg
inc
and
fs
aas
xor
cmp
fcompl
jo
arpl
adc
xchg
lcall
sbbl
dec
dec
mov
add
add
jge
fadd
adc
and
ficoml
adc
push
add
or
aas
mov
cmpsb
lock
jge
lea
mov
mov
stos
push
sub
sarb
push
dec
daa
xor
push
cs
jmp
adc
sub
mov
sbb
and
cmpsb
push
jmp
hlt
pop
cmp
add
cmpsl
in
mov
bound
mov
push
incl
add
mov
jmp
push
iret
inc
add
push
jecxz
push
das
hlt
rcll
jne
mov
ljmp
call
mov
pop
xchg
add
push
xor
mov
push
adc
lret
dec
xchg
adc
subb
jo
and
das
mov
enter
mov
push
add
sbb
sbb
pusha
hlt
ret
xchg
xor
pop
mov
and
dec
test
clc
adc
out
push
xchg
push
sbb
in
outsb
stc
cmp
sbb
push
idivl
imul
inc
sub
inc
sbbl
les
mov
movsl
push
xchg
test
add
popa
imul
ss
adc
sbbb
mov
aas
rorl
lods
and
les
push
rclb
jl
es
xor
push
mov
sub
cmp
sub
xor
insl
clc
aaa
test
push
push
push
in
xor
test
mov
xchg
xchg
or
push
repnz
mov
loop
rcrl
cmp
sbbl
adc
pop
pushf
insl
icebp
inc
je
xor
cmp
je
data16
sbb
dec
mov
std
ja
push
inc
xchg
mov
mov
cmpsl
outsb
jo
sub
or
mov
pusha
mov
add
jne
test
stos
add
push
popa
cmp
daa
jmp
mov
jl
cmpsl
dec
dec
shll
in
inc
sahf
inc
jns
dec
lret
pop
cmpsb
shll
jo
pusha
dec
dec
movl
push
jo
loopne
ret
mov
mov
pop
cs
add
test
xor
out
in
push
adc
or
pop
sar
clc
xor
xchg
mov
mov
xchg
push
xor
sbb
push
add
jo
push
jne
mov
mov
xchg
gs
push
mov
inc
loope
xor
and
inc
pop
es
xor
sahf
cmp
push
movlps
int
mov
jno
lods
jl
popa
imul
fstpl
in
add
insl
inc
add
xchg
scas
add
shll
jae
push
dec
jne
sar
je
dec
jne
insb
je
jmp
inc
cmpsl
lret
mov
push
add
mov
fistpll
and
je
dec
jne
mov
ret
arpl
js
das
add
shr
adc
adc
adc
loope
aam
cld
lods
pusha
ret
lea
dec
js
dec
inc
setbe
js
or
or
clc
pop
sbb
push
inc
push
test
mov
xor
pushf
jo
push
jle
cmp
xchg
add
dec
jp
movb
xor
movsb
cmp
dec
push
into
xor
test
aad
mov
jne
daa
repnz
pop
push
repz
dec
cmp
jo,pt
es
outsl
nop
je
int3
push
or
or
cmp
push
push
push
xchg
cmp
mov
pop
outsl
and
movsb
cmp
addr16
jmp
push
daa
pop
in
cwtl
cld
xor
sub
insb
pop
sbb
push
push
xchg
cmpsl
das
or
cmp
cmp
adc
mov
sub
fs
push
cmp
sbb
mov
or
pop
cs
mov
mov
loope
push
adc
push
js
xchg
push
xchg
pop
adc
test
jnp
popa
loopne
pushf
or
aas
and
adc
and
addr16
mov
adc
cmp
jmp
lods
lods
pop
adc
shl
repnz
cmp
pop
adc
pop
ja
cmp
sbb
lock
ret
loopne
pop
xor
mov
xor
push
lods
cmp
and
mov
pop
xchg
aas
fs
or
jle
push
popf
enter
stos
sub
testb
cmp
popf
push
jmp
and
push
or
lcall
jae
mov
test
popf
push
push
out
push
xchg
jb
sub
pop
inc
lods
push
sub
push
js
insb
sbb
iret
ret
not
and
jo
push
push
xor
pop
jbe
jne
out
push
call
imul
add
in
fildl
jo
cmp
and
lock
jl
ret
loop
ret
sub
inc
hlt
negl
or
fistps
push
inc
cmp
inc
pop
add
leave
and
mov
js
push
addr16
pop
or
sahf
pop
ds
jo
int3
mov
pop
aas
add
je
popa
cmpsl
lock
inc
mov
sub
in
pop
loop
lock
sbb
push
push
push
mov
js
pusha
in
xor
outsb
or
popl
mov
adc
lret
inc
call
test
pusha
sbb
jmp
push
enter
xor
mov
ret
xor
dec
adc
insb
popa
mov
fwait
push
push
jmp
push
adc
mov
insb
fnsave
fldcw
push
dec
push
sbb
xchg
xor
insb
xor
cmp
and
test
popa
pusha
dec
sub
mov
fcoml
inc
flds
push
jge
int3
cmpsb
test
sub
push
xorl
or
das
inc
adc
xor
pcmpgtw
adc
cmpsl
adc
mov
loope
xor
pop
and
xor
loopne
add
push
pop
mov
imul
leave
pop
mov
int
mov
fldt
add
loopne
mov
js
icebp
cmp
shll
dec
pop
rorb
or
testl
and
xor
ret
movsb
inc
cmp
hlt
fcmovb
pop
rcrb
shl
mov
aas
cli
push
fs
stc
cld
mov
pop
pop
loopne
aaa
ds
add
sbb
jne
ret
jg
adc
leave
test
adc
sbb
sub
mov
popf
push
xor
jg
fcmovb
sbb
sbb
in
testb
fcom
mov
add
movsl
ret
call
cli
add
iret
mov
mov
jne
pushf
jl
jecxz
pop
mov
mov
cmp
mov
jg
fidivrs
pusha
jge
push
rclb
cs
push
in
pop
loopne
push
pop
inc
mov
jb
inc
mov
loop
mov
or
lock
fsubp
jno
adc
lock
jnp
rorb
sbb
mov
out
cs
push
lods
inc
sarb
in
xchg
loopne
jne
or
inc
lcall
sbb
test
dec
clc
in
mov
jne
inc
pop
jnp
rcrl
ds
gs
dec
sub
dec
add
push
fs
jb
add
inc
clc
sbb
mov
cmp
jl
cmp
dec
rorb
jg
or
jbe
push
jne
lea
jae
mov
lods
fldt
adc
jmp
inc
inc
shll
clc
cmp
fadds
lret
enter
dec
pushf
or
pop
loope
js
fucomip
adc
sbb
or
ret
enter
sub
or
push
xchg
and
pop
mov
loope
push
pop
js
inc
sbb
adc
or
je
mov
inc
adc
jb
lea
sub
orl
add
sar
fwait
gs
fdivl
mov
pop
decl
or
into
orl
das
les
xchg
push
or
rolb
mov
jb
adc
push
data16
xor
xor
cmp
je
add
data16
addb
push
add
notb
js
mov
mov
popa
dec
jns
filds
sbb
fisttpl
nop
add
jmp
inc
mov
add
add
inc
or
push
push
or
or
mov
push
or
or
adc
sub
pop
loope
enter
mov
adc
shrb
aam
push
pop
sub
cmp
jbe
xchg
subl
jbe
or
mov
jbe
aaa
cmp
test
lea
adc
or
inc
jno
mov
sbb
test
mov
jle
push
popa
fsub
in
popf
add
clc
lods
enter
sbb
sarl
cmp
and
fsts
dec
lret
popa
shrb
xor
rorb
stos
and
add
pop
mov
fwait
jne
jne
adc
xor
shll
dec
aaa
popf
cmp
push
aaa
add
je
out
add
lret
daa
leave
push
lret
sub
dec
rcrb
mov
push
xor
fdiv
in
jmp
inc
call
dec
in
pop
sub
dec
jecxz,pt
pop
mov
mov
jne
ret
xor
sbb
cltd
insb
jo
loop
in
mov
aas
push
mov
je
stos
lock
aas
pushf
mov
adc
neg
mov
mov
xchg
js
cwtl
adc
outsl
cltd
push
adc
push
dec
push
mov
mov
lods
push
xor
call
cmp
pslld
scas
ret
pusha
and
dec
or
push
push
ud0
mov
mov
gs
shrb
mov
pop
stos
pop
push
insb
push
add
cwtl
mov
fidivs
icebp
push
adc
inc
aaa
ret
inc
int
cmp
push
das
inc
lock
jge
sub
lea
stos
or
push
les
repz
push
and
jo
iret
pop
insl
ds
mov
pop
jl
jmp
cmp
jmp
pop
mov
add
movb
in
sub
push
mov
out
pop
push
test
lcall
incb
stos
xlat
jge
loope
test
rcpps
lods
push
xchg
iret
inc
pop
loopne
mov
shrb
ret
dec
fsubrs
ret
cmp
rol
scas
jb
mov
std
push
inc
xchg
call
mov
push
push
fbld
bnd
xchg
add
dec
cs
inc
mov
addb
mov
xor
adc
push
add
push
push
inc
xchg
je
push
ret
inc
sbb
or
push
iret
sub
push
xor
ss
mov
or
add
cli
lea
jne
inc
add
ret
js
movsb
ret
jae
int
mov
jne
pop
or
dec
sub
insb
jge
loope
test
cmp
add
cmp
jge
sbb
fiaddl
xlat
xor
pushf
fsts
adc
rclb
add
insb
xor
push
or
mov
push
jg
loopne
jmp
or
cld
or
pop
inc
stos
in
mov
shll
popf
sub
or
mov
inc
dec
push
cmp
mov
je
ret
mov
push
pop
push
pop
jle
addb
enter
call
pop
xchg
dec
or
mov
cld
repnz
pop
mov
call
pop
pop
or
jle
and
jnp
xor
or
mov
sbb
push
or
or
push
incl
mov
and
and
mov
jo
out
push
pop
or
add
rorl
rclb
add
xor
inc
sub
cmp
xor
add
push
mov
adcb
ljmp
out
adc
enter
inc
ds
pushf
xchg
push
push
cwtl
outsb
mov
out
dec
ja
aas
clc
add
mov
jp
mov
and
jmp
fiadds
xor
insb
mov
daa
je
inc
sahf
add
add
jnp
and
adc
cmp
sbb
sbb
dec
sub
imul
ljmp
lods
in
mov
popf
mov
stc
decl
mov
sbb
lret
cmp
adc
xchg
cmp
jbe
lods
xor
test
inc
xchg
xor
or
xor
jae
addr16
or
jbe
xchg
mov
js
inc
ss
js
test
cmp
movsl
push
dec
in
xchg
ss
dec
push
ja
mov
push
addr16
jmp
mov
cmp
sbb
pop
sub
sub
and
outsl
mov
add
or
sbb
push
jge
mov
push
pop
cwtl
push
push
push
loop
iret
adc
inc
add
ss
outsb
pusha
test
fistpll
push
adc
inc
mov
push
stos
inc
cmp
fcompl
pop
insb
add
mov
jge
ss
rep
cmp
add
sub
stos
push
iret
lret
add
nop
jo
xor
pop
adc
jp
add
or
aam
imul
pusha
dec
aas
adc
adc
mov
inc
xlat
push
adcb
testl
cmpl
jne
push
or
cmp
and
mov
out
push
mov
cmp
mov
in
jbe
push
jo
fnsave
sub
xor
outsb
loopne
cmp
mov
dec
sbb
inc
sub
sbb
and
push
movsl
push
and
add
sbb
push
jne
orl
adc
xor
pop
popa
fisttps
push
push
adc
ljmp
jle
push
sub
lea
repnz
jg
mov
je
inc
jmp
lea
rol
rolb
cmp
loopne
add
add
mov
sti
jb
mov
sbb
aas
add
sbb
push
add
test
adc
pop
push
adc
stos
hlt
fs
push
or
xor
js
mov
sbb
je
sbb
dec
add
loopne
cmp
xor
insb
dec
lcall
inc
adc
out
adc
adc
add
or
or
mov
lds
xor
rorb
adc
push
sub
inc
movsl
push
xchg
mov
dec
mov
add
out
dec
cmp
call
fiaddl
daa
test
imul
xchg
sub
mov
loope
inc
mov
stos
mov
push
shr
call
jnp
jle
dec
js
mov
jecxz
mov
shlb
or
pop
or
pop
jl
cmpl
push
jle
cwtl
and
jg
inc
mov
push
cmp
enter
sbb
popa
mov
inc
inc
xchg
jb
insb
sbb
sbb
dec
sbb
mov
pop
add
push
xor
adc
push
add
andl
sti
push
adc
cmp
xchg
xchg
mov
sbb
test
mov
pop
nop
repnz
mov
lea
push
inc
push
and
adc
in
mov
out
mov
adc
jo,pn
roll
call
loop
add
dec
fs
and
sub
pop
pop
pop
mov
sub
or
pop
xor
cwtl
fildl
test
cmp
or
lret
jne
cli
subb
add
push
stos
xor
rcr
mov
jp
adc
jmp
dec
pop
jmp
popa
jl
scas
cmp
pop
and
test
out
sbb
jp
inc
fildl
push
pop
call
xchg
xchg
sbb
fadds
inc
cmpsl
call
fiadds
dec
pop
inc
adc
sbb
orl
or
mov
inc
xor
or
push
dec
fcoms
pop
sbb
or
jle
movntq
lds
lods
orb
fstps
xlat
xchg
int
add
and
inc
mov
or
lds
inc
sar
popf
lahf
push
leave
xchg
add
fldenv
dec
addr16
xor
imul
add
pusha
insb
cmp
cmpsb
cmp
push
xchg
xor
push
xorb
lods
je
pop
andb
adc
or
or
cmp
insl
call
jmp
iret
sbb
fdivrs
mov
pop
jmp
loope
cli
mov
ret
imul
jmp
adc
xchg
loopne
push
popa
push
xor
xor
fsubl
pop
add
imul
pop
bound
in
in
jbe
rcrb
js
outsb
or
clc
add
mov
mov
fcoml
add
mov
adc
xor
sbb
push
popa
sub
pop
and
mov
add
jl
jg
pusha
and
dec
pop
lods
testb
push
clc
add
dec
repnz
add
ret
pop
xchg
add
ret
arpl
divl
mov
pop
dec
adc
ror
push
js
leave
cmp
sete
xlat
add
or
stc
enterw
pop
xorl
lcall
insl
fwait
lahf
clc
notb
adc
mov
addr16
nop
call
iret
jp
mov
lds
out
dec
xchg
jno
pop
pop
movzbl
movl
sbb
lahf
cltd
sub
ret
xlat
inc
cltd
pop
sub
in
pushf
insl
add
mov
pop
cltd
fcoml
cmp
jne
sbb
hlt
cmpl
jns
int3
loopne
call
mov
je
jns
push
xor
cwtl
faddl
xchg
lea
add
sub
mov
jnp
inc
mov
and
sbb
and
shrb
mov
xor
cs
inc
mov
mov
push
sub
scas
aad
into
push
add
pop
xchg
test
and
inc
inc
push
cmp
test
jl
sbb
jle
add
aaa
lahf
int
or
je
jne
sub
je
cmp
cmp
mov
loopne
and
cmp
shrl
sbb
or
cmp
rcl
into
sar
das
push
add
hlt
push
jbe
das
jmp
cmp
fidivrl
and
jae
insl
daa
mov
dec
jle
mov
aam
push
jg
sbb
insl
xlat
mov
jmp
push
test
or
inc
dec
mov
jns
pushw
dec
fistps
xor
scas
sbb
jle
ja
das
push
and
xor
inc
cld
and
rdpmc
jl
dec
mov
or
jg
sbb
adc
mov
dec
out
push
fwait
xor
add
pop
fcomps
adc
jle
jmp
iret
jg
rcr
pop
and
int3
dec
mov
call
inc
int
jnp
dec
push
sbb
ljmp
and
rolb
sub
or
push
xchg
loope
jne
icebp
test
mov
mov
mov
js
je
aaa
push
mov
jne
mov
and
je
lds
int3
push
and
testb
mov
push
inc
je
cmp
repz
std
xchg
fists
sbb
cmp
and
fildl
insl
shl
mov
fs
pop
daa
imul
push
adc
test
bnd
mov
jmp
push
xchg
scas
add
data16
mov
mov
mov
xor
sub
imulb
inc
dec
and
mov
dec
or
mov
inc
jge
mov
pop
clc
aas
sub
daa
pop
shlb
add
dec
adc
xor
stc
xor
pusha
inc
aas
cmp
shr
je
push
daa
negb
inc
es
xor
jno
add
push
in
mov
jle
push
inc
fisubl
les
mov
jmp
das
pop
jae
sahf
sub
push
xlat
lea
dec
fnstcw
repnz
cmp
roll
mov
bound
inc
sub
adcl
cmp
insl
sbb
push
mov
iret
push
inc
jmp
sbb
mov
jo
enter
repnz
sub
push
adc
cmp
sbb
push
xchg
inc
pop
cltd
test
lahf
imul
test
fisubrs
xchg
push
je
xchg
jb
adc
lahf
js
je
test
andb
imul
outsl
mov
jo
mov
jl
and
jle
xor
imul
jnp
xchg
in
ret
xchg
jo
jp
js
jns
mov
and
pop
ffreep
xchg
arpl
jno
jo
js
cwtl
jle
subl
test
mov
pusha
inc
imul
mov
mov
fisttps
adc
add
adc
jns
mov
sbb
pop
sbb
sub
mov
out
mov
cwtl
repnz
sbb
or
or
add
mov
xor
test
outsb
dec
pop
stos
and
je
rcll
sub
fsts
cmpsl
out
mov
pop
push
mov
sub
sub
xor
jne
aaa
bound
dec
xchg
sbb
pop
pop
ret
std
mov
inc
push
add
ljmp
ss
cmp
enter
mov
jo
push
push
push
adc
imul
pop
negb
adc
pop
in
and
outsl
mov
cmp
jo
jle
insl
adc
sbb
push
cmp
sbb
cmp
dec
pop
inc
or
push
into
pop
xchg
xchg
jge
cmp
scas
outsl
and
test
or
mov
rcrb
xor
mov
cmpl
mov
add
movl
int
mov
sbb
cmp
mov
sub
and
xchg
cmpsb
xor
inc
push
push
bound
lods
mov
sub
push
loope
xlat
inc
je
inc
pop
pop
push
pop
scas
pop
in
push
jne
adc
pop
inc
mov
fists
call
andl
out
sub
push
mov
insb
cmp
orl
adc
jecxz
movsb
mov
lahf
cmp
clc
lds
cmp
push
mov
mov
test
push
lea
add
lea
aaa
fstl
adc
das
mov
or
mov
mov
inc
orb
test
sbb
pop
inc
mov
adcb
cmp
add
jl
lret
mov
jge
push
pop
adc
pop
sbb
pop
and
cltd
xchg
bound
ret
cmp
inc
pop
sub
lret
add
push
or
sub
in
insb
mov
xor
notl
or
xchg
xchg
in
jno
or
xor
push
nop
dec
fimull
ss
push
add
and
pop
fwait
add
fimuls
pop
enter
mov
sarl
shr
fdivr
loopne
xchg
icebp
push
pop
push
xor
dec
es
adc
mov
add
mov
adc
fs
cmp
dec
add
in
push
sbb
or
dec
jo
fwait
xor
push
push
repnz
jo
je
push
mov
jge
and
cld
inc
add
dec
add
fstpl
test
hlt
cld
adc
mov
xchg
test
jp
push
mov
repnz
daa
je
sub
or
mov
inc
test
test
sahf
jbe
push
cs
push
push
xor
addb
notb
mov
sbb
mov
lock
clc
pop
mov
xor
and
es
adc
add
cmp
mov
push
test
mov
cmp
fcompl
push
or
aas
fsubl
icebp
inc
pop
sbb
jecxz
cs
push
mov
add
cs
test
inc
aas
pushf
lods
filds
sti
jne
clc
mov
js
cmpsl
sbb
hlt
sbb
adc
xchg
add
rcr
lea
xchg
lea
or
lea
lret
iret
xor
outsb
adc
lahf
int3
insl
jg
lods
jge
inc
xor
mov
dec
inc
mov
in
sbb
mov
sub
and
push
push
inc
dec
xor
bound
cmc
test
movsl
pop
push
dec
lcall
jge
xor
cltd
cs
push
cmpl
fisttpll
push
xor
inc
lods
push
pop
mov
cltd
push
lock
push
outsb
xchg
sbb
mov
jnp
sbb
js
add
and
insb
je
js
adc
call
je
aaa
push
sbb
mov
or
or
adc
mov
sub
push
in
loope
insb
and
pop
stc
sbb
jl
sub
pop
imul
xchg
xchg
inc
add
add
push
popf
nop
loope
jns
or
inc
push
lcall
ljmp
pushf
idiv
mov
sbb
mov
nop
movsb
test
fldln2
ds
lea
jmp
sbb
mov
stc
cmc
push
sub
push
xor
out
bound
push
jl
add
cmp
sahf
mov
xor
xchg
repz
das
jle
in
cld
xchg
jl
jne
inc
jmp
movsb
stc
pop
fdivrl
or
and
jae
inc
cmc
xorl
mov
daa
cld
push
inc
icebp
push
arpl
jle
adc
mov
dec
cmpb
or
gs
xor
enter
mov
ss
dec
insb
xchg
push
push
xor
inc
adc
ss
mov
jge
sub
push
mov
sbb
in
mov
jmp
xorb
nop
sub
loopne
out
cwtl
in
mov
or
inc
scas
test
ret
nop
mov
xor
mov
cmp
sub
roll
jecxz
add
cmpsl
push
daa
pop
insb
jge
out
sahf
mov
mov
cmp
repz
dec
pop
jno
inc
mov
ds
xor
out
push
cwtl
test
pushf
std
mov
dec
neg
lock
mov
lock
push
hlt
push
or
mov
mov
push
sub
mov
ds
mov
lods
scas
iret
push
push
fidivrs
jne
pusha
stos
test
cmpl
xchg
mov
add
mov
fdivl
push
fmul
mov
fcomps
in
jmp
mov
inc
jl
daa
add
mov
cmovs
add
lods
sub
add
inc
lods
insl
adc
clc
pminub
rcr
inc
or
ret
mov
cld
fmulp
pop
loopne
cmp
add
jo
loopne
sub
xchg
sbb
and
xchg
andb
mov
xchg
mov
mov
dec
bound
add
addb
xor
inc
push
nop
xchg
xlat
jmp
add
setne
dec
and
addl
add
mov
lods
adc
aaa
out
add
ret
mov
test
inc
jns
js
arpl
add
dec
outsl
push
out
fsubrp
pop
sbb
add
pusha
stos
lods
lock
xor
push
test
movl
or
dec
and
outsl
filds
inc
push
aas
mov
mul
xlat
imul
inc
jne
repz
xor
imul
add
movsl
pop
lea
push
adc
jns
out
lods
add
add
jns
sbb
adc
push
add
add
daa
test
repnz
aas
add
pop
or
lahf
lods
sbb
ret
pop
sub
les
jmp
jnp
mov
sbb
js
scas
adc
cmp
movsb
imul
mov
and
test
or
push
test
jg
and
shll
inc
sub
or
xor
pop
dec
rol
sbb
cmp
fisttps
out
and
push
cli
data16
lods
call
add
jle
push
pop
sbb
sarb
lods
orb
ret
fldt
or
jle
int3
popl
mov
or
cmc
mov
lret
dec
adc
mov
dec
jl
push
or
sarl
ret
lcall
push
add
or
lods
jo
push
in
les
push
decb
nop
les
ret
pop
in
ret
ret
loopne
pop
inc
inc
add
lods
sub
scas
push
fcmovnu
rclb
xchg
shlb
enter
cmp
dec
inc
inc
adc
sub
inc
pop
mov
insb
or
mov
xchg
or
jb
hlt
aam
je
inc
popf
jp
call
testb
fsubrs
into
sub
hlt
mov
data16
dec
or
add
mov
test
inc
or
es
jo
js
jg
inc
rcrl
lds
ljmp
adc
cmp
jg
mov
call
and
sub
aam
lret
dec
fdivrl
push
cmp
jle
fistpl
push
adc
icebp
or
test
je
loopne
imul
fstp
fsubrl
pop
jnp
push
sbb
dec
fxch
fmul
in
into
sbb
jnp
sbb
call
fnsave
dec
std
mov
shl
push
pop
iret
jmp
mov
sub
push
daa
imul
loope
pushf
daa
add
orl
out
addb
add
xorb
js
ret
dec
in
out
orb
dec
aam
mov
push
inc
vrsqrtss
mov
dec
call
push
or
xor
into
cmp
jge
fdivr
inc
sti
lea
cmp
and
add
mov
adc
sbb
push
xchg
int3
cmp
lret
push
test
pop
push
rorb
psrad
inc
and
push
xchg
mov
adc
pop
leavew
adc
pop
scas
add
inc
sbb
enter
stc
mov
insb
filds
push
cli
je
push
add
xlat
cmp
add
push
mov
jns
jbe
sub
push
rolb
fdivs
pop
shll
rcll
cmpsb
push
xor
add
je
dec
sti
push
sti
pop
or
shrb
movsl
xchg
enter
pop
ret
pop
test
adcl
xor
pop
out
daa
iret
shlb
and
mov
clc
out
xor
push
pop
mov
test
inc
sbb
xorb
pop
sub
push
or
mov
push
out
adc
test
sarb
dec
jle
cmp
in
mov
or
cltd
and
sbb
xor
test
test
xchg
fimull
mov
dec
sub
dec
movsl
add
pop
mov
int3
cmp
adc
xor
inc
jo
out
and
sbbb
ja
in
xchg
mov
imull
xor
fldcw
mov
enter
sub
hlt
mov
sub
add
inc
xor
add
ds
add
je
push
sbb
push
xor
hlt
pop
fs
pop
push
cmp
inc
push
ja
mov
sbb
mov
mov
leave
fwait
cmp
je
cmp
pusha
push
js
and
pop
inc
push
cmpsb
rolb
mov
enter
pop
dec
rcrb
mov
pop
cmp
or
in
sahf
mov
add
ret
dec
dec
ja
int3
repnz
les
ret
sub
nop
xchg
mov
lds
sbb
pop
push
cmpb
push
pushf
jo
int3
je
adc
push
in
mov
orb
add
add
push
adc
push
sbb
ret
out
jb
mov
dec
add
add
dec
sbb
xchg
mov
lock
loopne
addr16
dec
xchg
jmp
add
add
xlat
mov
xchg
pop
mov
jne
fidivrl
in
adc
fisubs
data16
inc
out
repnz
sbb
fs
push
ds
bound
xor
sub
dec
cmp
sub
cld
and
lods
mov
push
sbb
push
jmp
push
test
mov
popa
sub
push
adc
jge
jmp
sbb
lods
fs
or
jmp
pop
or
fmulp
push
push
and
or
or
inc
push
mov
aas
lods
bound
or
xor
dec
xchg
out
scas
ret
push
jae
sub
clc
push
fwait
insb
ss
and
push
add
xor
ds
adc
cli
mov
mov
cmp
stos
cmp
cmp
push
or
sbb
jge
pop
imulb
xor
fisttps
fsubr
dec
repz
jnp
loop
push
push
dec
fdiv
cmp
inc
push
dec
dec
add
add
or
cwtl
dec
push
adc
dec
push
iret
xor
push
jbe
cmp
je
daa
or
or
cld
ss
jo
xchg
inc
sbb
dec
and
pop
adc
aaa
inc
outsl
sub
mov
push
dec
dec
idivb
inc
mov
dec
adc
xchg
imul
and
gs
adc
sub
jb
scas
inc
mov
push
enter
jecxz,pn
je
mov
test
imul
dec
cs
xor
insb
xor
jmp
xor
addr16
loopne
cmp
mov
std
jle
pop
loop
inc
add
xor
test
add
push
xor
inc
xchg
nop
inc
inc
and
fs
xlat
and
push
add
pushf
or
shrb
push
loop
cmp
sbb
lahf
or
push
push
dec
or
or
sub
push
or
test
stos
sbb
stos
push
inc
lcall
and
in
mov
js
mov
addl
add
add
sbb
iret
mov
add
mov
imul
or
jl
or
mov
pusha
pusha
push
adc
jo
pop
jecxz
mov
add
arpl
push
xchg
test
mov
sbb
clc
mov
xchg
pop
out
imul
xchg
loopne
and
das
push
fnstcw
jnp
add
sbb
mov
pop
lea
mov
pop
or
push
sbb
adc
clc
pop
inc
jecxz
cmp
cmc
jne
out
mov
lds
aas
jne
pusha
mov
sbb
or
add
or
cmpl
icebp
in
in
pop
andb
xchg
mov
cmpb
out
inc
shl
adc
add
sbb
push
test
add
adc
pushf
sbb
lret
mov
mov
js
sub
mov
subb
or
rclb
sub
xchg
outsl
lret
jb
pop
scas
subl
ficoml
adc
fistl
movl
into
loope
aaa
add
xor
fsubrs
sub
mov
and
sbb
je
adc
arpl
or
loope
add
mov
test
add
mov
or
in
outsl
add
xchg
adc
sbb
xchg
dec
mov
sub
pop
stc
and
add
stc
mov
push
sbbb
sbb
lahf
jecxz
mov
sahf
xor
mov
fs
pop
and
mov
sub
or
mov
jo
fimull
imul
js
in
dec
sub
xchg
pop
add
xor
je
or
fisubs
je
and
sahf
mov
fdiv
add
fcomps
add
lea
mov
dec
jecxz
imul
lods
jo
punpcklbw
xchg
fld
test
cmp
push
pop
mov
dec
out
fld1
add
mov
shrl
data16
push
jnp
dec
pop
shlb
mov
add
and
sbb
loopne
dec
push
cmp
add
cmp
enter
incl
loope
add
mov
movsb
cmp
xor
sahf
inc
push
repnz
push
adc
mov
es
push
add
jo
mov
xchg
push
scas
loopne
push
xor
push
hlt
rolb
mov
test
sbb
jbe
dec
adc
enter
mov
daa
imul
mov
mov
jo
push
xchg
inc
fdiv
add
inc
loope
fsts
sbb
add
push
push
not
mov
pop
cmp
push
mov
aam
add
and
jle
aam
sub
jle
in
sub
xchg
ret
lea
das
jo
push
add
lret
mov
add
pop
and
xchg
scas
fists
add
repnz
loope
movsl
lds
and
divl
pop
xchg
and
mov
dec
xchg
or
sbb
sub
adc
pop
and
mov
test
lods
in
iret
or
test
add
inc
or
push
lret
jne
or
aas
push
push
dec
inc
xchg
dec
add
cmc
imul
divl
pop
mov
xor
test
pop
xor
jmp
pop
xor
mov
or
pop
fadds
lock
pop
pop
add
pop
inc
shlb
insb
xor
push
repnz
stos
adc
or
xchg
mov
cmp
negl
jmp
push
mov
pop
out
mov
loopne
mov
or
inc
pusha
outsb
pop
stos
push
mov
dec
sahf
mov
shll
in
mov
incb
adc
js
ds
pop
es
cmp
je
mov
call
into
insl
lea
mov
fimuls
push
lcall
xchg
add
leave
popf
mov
adc
roll
out
sub
ds
and
outsb
in
outsb
xor
nop
lret
outsb
lds
pop
dec
subb
sahf
xor
leave
pop
pop
lret
add
pop
enter
mov
push
imul
fisubs
loop
adcb
ficompl
fstps
pop
les
inc
mov
rolb
sub
push
rolb
xchg
or
mov
js
pop
aad
test
push
cmp
pop
mov
add
fidivl
inc
adc
mov
loopne
cmp
inc
dec
xchg
ja
mov
pop
mov
push
push
and
add
sbb
add
cwtl
daa
push
or
jbe
jb
cmp
add
jnp
inc
mov
loopne
insb
push
cltd
lods
inc
fsubl
dec
sbb
add
mov
adc
add
dec
and
dec
push
neg
sbb
and
push
jb
jb
push
add
sub
lds
sub
xchg
fsubr
imul
push
das
push
fsubrl
push
xor
sbb
je
mov
aas
add
decl
or
pop
add
inc
pop
inc
xor
mov
inc
jo
andb
sub
icebp
add
dec
sub
sub
push
lods
push
push
push
xchg
loope
hlt
ss
or
sbb
sub
sub
pushf
pop
loop
adc
test
add
add
and
lods
pop
adc
imul
jmp
loopne
mov
ret
xor
lds
adc
or
outsb
lock
mov
aad
loope
add
data16
lods
icebp
sub
mov
subl
xor
add
sub
or
rclb
inc
out
xor
add
sbb
cmp
outsl
cmc
fdivs
pop
jmp
push
jmp
push
xchg
jnp
pop
ja
loopne
data16
and
call
xor
push
popa
inc
or
push
aad
in
lods
outsb
sahf
test
mov
mov
add
out
sar
mov
shr
add
pop
mov
imul
and
loop
jl
sbb
and
sbb
jo
pop
add
movsl
inc
popa
cwtl
and
ret
mov
mov
fstpl
insb
inc
xor
ljmp
xor
mov
pop
insb
outsl
mov
push
addr16
adc
adc
push
decb
jle
jecxz
xchg
push
scas
dec
aas
pop
outsl
jecxz
mov
out
loope
enter
xchg
addr16
xchg
inc
push
sub
adcb
or
add
or
ja
pop
mov
je
jns
shrb
xchg
pop
mov
adc
xchg
push
jg
loop
push
jo
pop
and
xor
mov
or
push
pusha
rcr
lea
xor
or
fs
mov
je
int3
or
iret
aam
mov
cmp
mov
sub
add
push
cld
push
push
popf
xchg
inc
cmp
jo
in
mov
ret
inc
je
imul
xchg
ja
in
xor
mov
or
orb
add
cmp
push
push
jle
mov
sbb
adc
mov
mov
sbb
or
stc
out
out
subl
inc
and
dec
out
add
mov
jg
loop
adc
and
call
lods
aas
gs
pop
dec
stos
xchg
mov
in
add
pop
and
ret
mov
test
sbb
xchg
dec
and
add
add
push
scas
xor
dec
cmc
sub
jno
or
mov
xchg
mov
in
xchg
push
mov
lahf
jp
pushl
sub
inc
shr
rolb
or
sbb
inc
stos
cmp
sub
xor
add
xor
add
add
and
sbb
fisubs
ret
inc
cmp
js
mov
pop
sub
lret
add
mov
loopnew
iret
add
adc
jmp
or
push
cmp
pusha
add
or
sub
lock
dec
dec
inc
sbb
inc
mov
setbe
iret
cmp
mov
pop
jl
cmp
xchg
cmp
sub
sub
ds
jmp
inc
repnz
mov
stos
movsl
outsb
sbbl
lock
push
push
push
das
inc
pop
mov
negb
adc
sub
push
test
push
out
xchg
pop
sub
push
lea
jp
inc
fdivp
ret
inc
je
mov
xchg
cli
imull
sbb
data16
loopne
xor
xorb
pushf
rcr
mov
arpl
adc
imul
imul
mov
pusha
lahf
xor
cli
or
dec
push
addr16
mov
inc
sub
dec
lcall
xor
int
loopne
ret
add
aas
fstl
push
out
pop
adc
sbb
pop
push
adc
mov
push
lea
xchg
mov
pop
and
fimull
pop
dec
fildl
mov
and
pop
movsb
or
dec
loopne
or
sub
add
out
setl
dec
push
xchg
sub
dec
push
mov
pusha
add
dec
mov
sysenter
inc
push
cmp
or
inc
push
sbb
push
push
or
fildl
aas
shll
pop
repz
cmp
inc
nop
pop
rcrb
cmp
jecxz
shlb
mov
push
dec
sub
cmp
push
xchg
mov
outsb
loope,pn
insb
cmp
add
movsb
jmp
iret
repz
mov
xlat
call
jg
nop
add
lock
push
and
dec
idivb
cmpsb
in
test
aad
daa
loope
mov
lea
sahf
ljmp
xchg
loopne
fiadds
inc
pop
push
push
lods
sbb
push
mov
call
mov
pop
cmp
xchg
jo
sbb
xor
add
or
test
repz
cmp
mov
add
adc
cmpsl
mov
js
dec
push
loop
dec
rclb
push
add
or
mov
xchg
insl
add
dec
push
test
inc
mov
mov
stc
push
pop
push
js
or
cmp
xor
pop
enter
adc
nop
pop
xorl
pop
or
lock
clc
adc
mov
mov
cwtl
push
cwtl
push
rorb
or
add
in
jecxz
xor
jo
out
scas
negb
lahf
lds
icebp
push
add
mov
mov
nop
or
add
add
shlb
mov
ret
addr16
jg
sahf
dec
cwtl
shlb
xchg
lahf
inc
js
dec
jl
adc
jae
mov
movsl
je
sbb
add
add
dec
test
inc
sub
inc
lcall
lea
stc
lods
dec
jmp
xor
cmp
pop
push
fcompl
test
ja
push
test
xchg
push
jp
adc
in
push
pop
aaa
mov
jmp
into
sub
jmp
sub
jmp
add
adc
dec
jmp
add
or
outsl
push
je
xor
push
mov
add
push
lcall
fiaddl
push
jle
aam
mov
push
inc
inc
sahf
push
rclb
sbb
les
rolb
lods
push
pop
lea
push
frstor
jmp
sbb
mov
scas
in
mov
mov
idiv
push
mov
add
push
jmp
js
rcll
cmp
nop
push
test
cmp
pop
or
adc
mov
stc
mov
inc
lcall
xor
and
fstps
aas
inc
or
adc
adc
and
ljmp
jecxz
add
adc
stc
lods
mov
and
les
mov
xchg
push
test
dec
mov
shll
nop
sub
add
lods
or
push
xor
or
nop
mov
cli
fwait
adc
int
test
dec
jg
ret
jo
les
cmp
add
movsb
pop
add
mov
dec
and
aas
dec
push
inc
pushf
xchg
jecxz
pusha
cmp
and
mov
pop
bound
add
pop
xor
cwtl
cmpsb
push
mov
push
and
rorl
les
mov
mov
sbb
fcmovb
push
jo
fcmovu
into
sbb
insb
loop
adc
jbe
les
rorb
cmpsl
push
imul
or
push
fs
sub
test
push
cmp
mov
je
push
jl
ljmp
dec
loope
shl
or
lods
and
imul
jle
add
inc
jo
push
cmp
clc
jo
xchg
in
ret
or
xchg
shl
sbb
in
push
inc
push
sti
sbb
jmp
push
sbb
or
or
push
sti
push
insb
mov
xor
gs
insb
inc
add
pop
test
xchg
push
push
cmovo
pushf
inc
mov
shrb
daa
cmp
movsl
add
and
mov
in
or
andl
dec
and
lods
pop
dec
pop
or
xchg
adc
xchg
or
mov
or
mov
push
dec
and
pop
rcll
pusha
adc
pop
shll
push
sarl
mov
push
push
xor
das
mov
mov
shll
push
mov
mov
pop
cwtl
cmp
pop
das
enter
test
pop
mov
ret
pushf
cmpsl
stc
cmp
cld
xor
xchg
icebp
jae
shrl
ja
nop
int3
mov
hlt
scas
mov
mov
cltd
push
stos
fdivrl
iret
repz
leave
dec
push
rol
push
ret
jl
fisttps
xor
xor
mov
mov
nop
aas
mov
mov
sub
xor
mov
pop
lds
push
jbe
pop
push
loope
subb
jg
add
xor
inc
or
sbb
adc
sbb
cs
sbb
add
sub
add
mov
jge
push
pop
and
or
cmpsb
cmp
dec
sbb
sbb
fs
dec
and
push
in
inc
es
xor
inc
mov
add
ret
mov
rorb
inc
dec
test
hlt
sub
adc
inc
or
or
and
add
add
repnz
add
xor
mov
inc
cmp
ret
addl
andl
xor
ret
add
add
inc
or
sti
mov
xor
add
lcall
ja
dec
and
fdivs
or
pusha
jnp
inc
push
jle
outsb
adc
add
and
add
rcrb
outsl
lea
jne
mov
pop
sbb
add
fs
or
shll
push
add
push
fwait
cmp
and
push
jae
push
adc
out
push
outsb
push
pop
ret
mov
imul
pop
lea
push
repz
add
push
push
adc
push
dec
sub
xchg
or
imul
or
pop
ss
push
or
sbb
fs
idivb
fnstcw
je
xor
loop
fcomip
sub
sbb
push
sbb
add
int
lret
out
add
repz
adc
dec
fistpl
jecxz
xor
cmp
or
xchg
cmpsb
mov
rcrl
and
and
mov
je
jb
aad
cmp
int
inc
xchg
mov
sbb
add
fimuls
outsl
push
push
xchg
dec
dec
es
or
and
cs
inc
push
mov
shrb
xchg
sub
mov
mov
sub
inc
mov
mov
aas
imul
add
enter
push
push
lock
pop
jne
stos
rcll
sbb
add
inc
push
jmp
flds
and
sbb
dec
outsl
dec
pop
cmpl
inc
lcall
push
inc
xor
int3
cli
iret
cmp
sub
int3
mov
sub
mov
adc
mov
stc
adc
jnp
push
pop
or
pop
xchg
adc
lods
dec
aas
mov
mov
or
adc
out
mov
push
xchg
stos
add
int
cmp
xchg
add
iret
sbb
xchg
jecxz
mov
ret
stos
rcrl
push
movsb
popa
fprem1
aam
shlb
add
push
cld
dec
push
xorb
cmpsl
jns
iret
xchg
adc
pop
movsb
mov
sub
or
inc
inc
push
push
pop
mov
and
dec
dec
xor
dec
fs
xchg
lock
push
cmpl
xchg
push
out
jno
and
inc
adc
push
pop
into
pop
mov
movsb
lea
pop
xchg
orl
sub
sbb
insb
dec
push
pusha
fs
insb
fwait
nop
jns
xlat
adcb
push
jb
xchg
repz
out
rcll
shlb
xor
inc
mov
pop
push
lret
nop
pushf
ror
xor
push
scas
je
inc
js
and
add
sub
pcmpeqb
jecxz
shlb
jmp
aas
in
sub
xchg
cmp
aas
adc
sbb
xor
push
push
push
xor
cli
mov
pop
sti
push
push
test
mov
push
and
add
pop
lock
imul
or
add
add
lahf
sbb
adc
inc
adc
sub
fsubrl
punpckhbw
mov
cmp
sub
cmovl
mov
aas
xorb
pushf
jg
jb
add
jne
mov
in
inc
lds
mov
addb
imul
cmp
dec
xchg
jg,pt
jg
test
pop
inc
dec
sbb
pushf
cwtl
or
sub
xchg
cmp
add
mov
movzbl
push
add
movsb
clc
sub
add
add
or
sbb
inc
clc
or
jmp
pop
rorb
stc
push
jb
dec
push
fstps
xchg
xchg
and
add
cld
push
pop
inc
clc
addr16
sub
jbe
scas
xor
push
mov
jne
iret
hlt
dec
jb
xor
xor
dec
xchg
ljmp
mov
inc
pop
jne
or
and
in
cltd
arpl
dec
or
or
add
test
pop
stc
rolb
gs
stc
mov
aas
mov
filds
insb
or
add
add
push
or
xlat
add
scas
aas
lret
sub
test
pop
xchg
inc
add
clc
and
stc
mov
xor
push
cmp
add
sub
cmp
inc
add
or
hlt
scas
cmp
mov
jmp
adc
push
add
and
xor
cmp
xor
pop
pop
dec
add
inc
mov
or
loopne
mov
mov
xchg
adc
out
mov
cmpl
lds
inc
push
push
lret
jecxz
mov
add
pop
sti
mov
mov
xchg
icebp
xor
inc
inc
inc
lcall
rol
mov
sub
outsb
roll
sub
mov
je
aas
fcompl
mov
xor
sub
dec
or
mov
call
dec
mov
sbb
int3
xchg
push
aam
imul
add
mov
adc
dec
mov
in
push
mov
loopne
sahf
pop
shlb
cmpsb
pusha
add
pop
push
xchg
sbb
lret
add
dec
and
repnz
mov
cltd
mov
testl
pushf
rcl
dec
ret
xchg
push
cwtl
xor
pop
adc
test
je
xor
mov
sahf
or
cmp
and
pop
adc
push
aad
sbb
test
loope
xchg
sub
adc
mov
push
cmp
dec
cmp
inc
mov
pusha
pop
sub
ljmp
fs
add
push
outsl
ret
mov
testl
push
test
mov
mov
mov
mov
das
push
daa
xchg
push
lea
jg
or
jnp
cltd
std
dec
or
and
shrb
inc
jle
and
cltd
ss
push
xchg
test
test
ja
pop
fwait
test
loop
xor
out
and
xor
or
dec
mov
lds
aas
out
and
mov
cmp
inc
aas
jg
jne
pop
adc
pop
aas
bound
jl
ljmp
jbe
ficomps
aas
cs
outsb
sbb
arpl
add
pop
or
or
clc
mov
or
clc
push
push
out
clc
test
cmp
lock
decl
roll
sub
cmp
cmp
mov
shl
ret
pop
sbb
push
add
pop
cmp
stos
add
mov
clc
in
sub
push
cld
add
ret
fistpl
inc
into
outsb
aas
lods
bswap
mov
nop
cwtl
ss
cltd
test
lahf
mov
imul
jne
mov
jb
sub
mov
faddl
pop
or
orl
stos
popf
aaa
dec
add
pusha
and
sbbb
aas
inc
push
push
lea
outsl
or
adc
dec
cmpsb
or
test
lahf
sub
ljmp
std
inc
or
cmpsb
push
outsl
addb
fisttpl
jne
ds
jle
test
pop
ret
inc
fucomi
rorb
clc
xor
add
mov
into
imul
aas
ret
lea
sbb
xchg
mov
push
adc
pop
mov
mov
mov
dec
push
xchg
adc
outsl
inc
push
sbb
sahf
or
mov
xchg
adc
and
lock
xor
or
adc
dec
dec
es
cmpsb
or
xchg
mov
add
add
cmp
jl
push
push
jmp
and
and
lret
lea
or
push
movsl
pop
in
push
jb
mov
lea
xchg
jp
or
adc
adc
sub
mov
xor
sbb
xor
fiaddl
mov
sbb
ljmp
mov
mov
adc
in
test
fadds
cmp
add
push
loope
cmp
pop
inc
dec
cltd
out
inc
jmp
pop
popa
les
pop
mov
inc
stos
xor
or
daa
sub
addl
push
popa
xchg
pop
sbb
push
push
pop
push
imul
pop
dec
jb
clc
test
popf
sub
and
js
outsl
sbb
and
ret
loope
jae
or
and
fsubrs
ret
aad
jno
mov
xlat
test
mov
js
add
sub
push
inc
rclb
dec
inc
sbb
out
and
or
leave
xchg
mov
sbb
int3
rolb
mov
xor
addb
incl
jb
xchg
adc
push
pop
loop
xchg
xorl
push
push
mov
dec
push
dec
push
sbb
shlb
push
lcall
pop
call
add
inc
pusha
push
call
adc
pop
sbb
rolb
icebp
add
ljmp
adc
xor
cs
jmp
add
add
decb
fldenv
call
push
push
mov
inc
ficoms
push
dec
lock
inc
inc
repz
or
push
and
add
cmpsb
and
jl
imul
clc
push
call
mov
push
out
cmp
sbb
push
pop
cmp
mov
inc
push
dec
mov
insl
adc
inc
sub
cmp
ss
cmp
inc
fistl
test
pop
decl
testb
out
lcall
mov
adc
lahf
cmpsl
call
inc
ljmp
mov
add
inc
pusha
test
iret
repz
movsb
mov
inc
cmp
repz
call
adc
mov
sub
loope
loopne
sti
or
dec
rcll
out
push
dec
leave
shll
dec
pusha
or
sbb
sub
push
adc
push
ret
add
mov
xor
add
in
insb
mov
add
push
adcl
js
xorb
dec
shl
cs
out
js
rclb
dec
or
sbb
daa
cmp
aas
add
and
pop
dec
inc
push
ljmp
aas
jmp
shrb
adc
pop
or
push
dec
mov
sbb
push
cmp
adc
icebp
cmp
fisttpll
or
mov
fiadds
xchg
sarb
or
add
adc
dec
sbb
in
add
bound
dec
mov
jne
out
mov
or
ffreep
and
pushf
mov
cmp
cmp
daa
jno
clc
loope
cmp
jne
jmp
imul
adc
dec
lret
xor
sbbl
adc
cmp
jbe
cmp
je
ss
or
inc
cmpl
shrl
push
push
pop
mov
loope
mov
cmp
fistpl
or
sarl
xchg
push
aad
pushf
unpcklps
orb
pop
inc
sbb
jns
or
das
adc
mov
clc
es
test
add
add
mov
and
cli
rorl
stos
int
or
sbb
das
ja
xor
loope
push
and
cmpsl
enter
pop
add
push
cmp
in
sub
cmp
wrmsr
nop
adc
xchg
repz
insl
sub
cmp
push
orb
adc
mov
pushf
xchg
push
notl
add
push
popa
addr16
in
sbb
je
jne
imull
out
pop
add
into
jns
xor
push
clc
push
out
rorl
loopne
popa
lods
push
pushl
jmp
lea
fists
sbb
push
loope
shrl
repnz
daa
jmp
movb
hlt
mov
rorl
push
fists
pop
insb
mov
mov
xor
fstpl
inc
fimuls
jb
hlt
mov
mov
inc
lods
add
sub
dec
pop
lahf
jg
add
int
xor
inc
dec
outsb
xchg
sub
sbb
dec
jb
xchg
adc
xchg
cmp
aam
mov
push
push
cli
es
inc
push
sbb
xor
sub
adcb
add
popf
add
clc
xor
int
ret
test
pop
inc
push
push
jo
addr16
jo
and
sub
add
clc
ja
adc
int
or
inc
dec
je
or
dec
test
push
ret
push
sub
mov
add
inc
push
loopne
add
imul
push
push
dec
rol
test
lods
in
loop
dec
add
add
adc
insb
cmp
flds
add
sbb
icebp
jns
sti
ss
and
add
daa
xor
add
sub
rcrl
fisttpl
or
sub
movsb
mov
xor
pop
pop
pop
fneni(8087
rcl
pusha
pop
jl
sub
sahf
add
add
bound
add
pop
sti
out
cmpsb
loopne
lahf
aam
jle
ret
and
and
push
inc
or
sub
mov
sbb
sbb
jg
in
push
sbb
or
add
jb
jg
jmp
jns
fwait
mov
add
movsl
setne
mov
leave
inc
and
mov
xchg
push
push
jns
in
lods
add
jne
shll
push
push
cmp
jp
decb
pop
mov
rclb
sub
mov
inc
cmp
and
pop
les
adc
dec
nop
ss
lret
shlb
rorb
je
inc
xlat
sub
mov
cld
adc
inc
loop
xchg
call
inc
inc
mov
nopl
dec
xor
mov
int
ss
adc
push
and
shrl
nop
imull
lods
add
xchg
hlt
mov
mov
or
pop
pop
push
and
jns
cmc
lock
dec
lods
scas
inc
rcll
movl
and
mov
call
js
jmp
adcb
dec
ds
jo
add
mov
loopne
pop
fildl
xchg
pop
lcall
mov
or
add
cmp
test
ss
faddl
mov
and
pop
jmp
adc
push
xchg
das
jecxz
or
xchg
add
or
sbb
and
jle
in
xor
mov
xor
nop
push
call
adc
or
pushf
enter
pop
mov
movsb
enter
lret
jmp
enter
pop
clc
mov
enter
xor
into
push
inc
add
sbb
or
adcl
addr16
jmp
sub
nop
sub
cmpsb
bound
xchg
faddp
pushf
mov
ffreep
xchg
sub
pop
or
adc
xchg
mov
lods
xchg
add
adc
inc
adcl
xor
push
imul
sarl
lahf
xchg
pop
inc
dec
add
movsb
out
dec
cltd
add
in
rorb
sbb
movsb
shrb
mov
mov
in
mov
xchg
pop
hlt
add
and
add
inc
les
inc
je
and
push
cmc
add
jge
sub
cmpb
mov
or
adc
add
int
lret
xchg
shrb
or
and
lahf
mov
dec
ret
lahf
enter
add
andb
pop
or
pop
jns
in
repz
xor
adc
adc
inc
fbstp
mov
add
jg
sub
jle
imul
sbb
movsl
in
xchg
mov
jno
imul
inc
lahf
or
adc
mov
andb
rcrl
loopne
inc
cmp
xor
push
add
dec
cltd
dec
cwtl
pop
pusha
inc
fs
push
leave
fistpll
out
loop
inc
jne
call
dec
aaa
hlt
inc
pop
inc
add
lcall
jl
movsb
lea
stc
or
push
xor
or
push
sahf
pop
mov
ror
add
cmpsl
mov
or
sub
ljmp
mov
or
mov
jno
push
pop
add
aam
cmp
adc
add
xor
mov
test
sub
cmp
add
cmp
or
out
mov
jb
loop
lahf
in
test
incb
jb
mov
push
sbb
ss
popa
dec
jae
push
inc
push
outsb
push
icebp
sub
push
pop
push
add
jle
aaa
xor
jns
cmp
inc
cmp
pop
out
push
insb
aas
dec
sub
xchg
lar
mov
inc
adc
movsb
sbb
or
sub
mov
loop
cmpb
push
jge
mov
inc
mov
xorb
xor
subb
jne
out
cmp
adc
into
or
lds
dec
or
push
push
fucom
mov
and
jne
or
push
dec
loopne
push
out
mov
dec
xor
or
ret
xor
or
rclb
enter
cmp
mov
cmp
pop
inc
push
jg
subb
jg
pop
sbbb
dec
pop
mov
xchg
pop
pop
cmp
jp
shrb
mov
fs
push
xor
in
xor
mov
rorl
dec
dec
xor
inc
fmuls
fst
adc
add
add
xchg
cmp
lods
imul
lcall
push
mov
inc
cmp
jle
mov
pop
push
int
call
adc
push
jmp
lds
in
mov
sbb
pop
mov
dec
and
movsb
xchg
out
jbe
jmp
nop
pop
out
pop
mov
sub
leave
ret
mov
scas
incl
mov
add
push
mov
lods
adc
imul
inc
notl
push
xchg
xchg
rolb
ja
jmp
or
pop
bound
sbb
and
shrb
cmp
scas
inc
push
sbb
ljmp
add
out
nop
and
push
or
xchg
and
dec
std
add
mov
not
pop
call
sub
stos
push
cmp
jge
jge
lods
or
dec
dec
insb
cli
lret
mov
mov
scas
sub
lods
push
js
outsl
rorb
std
push
push
adc
clc
pop
pop
inc
push
icebp
adc
dec
hlt
mov
mov
sub
arpl
push
fcom
in
pop
pop
push
mov
ds
or
mov
cmpl
add
push
xor
enter
dec
adc
or
bound
cmp
jb
pop
in
fldenv
imul
movsb
cltd
dec
pop
mov
stos
daa
shr
dec
outsl
pop
xchg
lea
xor
push
adcb
xor
push
je
lock
jbe
xor
xchg
or
rcrl
inc
loop
adc
push
dec
adc
pop
mov
push
sbb
dec
imul
push
push
pop
sub
mov
adc
jmp
and
jo
rclb
adcb
sub
dec
mov
test
rcr
in
sub
mov
pop
dec
sbb
mov
sub
push
pop
xor
pop
test
jns
pop
nop
cmp
xor
push
mov
int
or
jns
sbb
lahf
sahf
ds
sbbb
mov
add
popf
jmp
popa
add
sub
movsb
sub
adc
mov
pop
jne
dec
repz
cs
push
inc
adc
inc
stos
push
in
aas
dec
or
rorl
cmpsb
xchg
push
push
inc
push
shrb
outsb
adc
and
dec
pusha
push
cmc
insb
adc
or
push
cli
and
pop
inc
xchg
imul
xor
scas
mov
xorb
xor
pop
les
xchg
push
dec
adc
imul
cwtl
cltd
xor
push
je
or
lahf
xor
push
pop
outsb
ljmp
mov
test
jbe
push
rorl
cmp
jbe
mov
push
xlat
js
adc
cs
push
mov
or
mov
fdivr
lea
cmp
add
popa
or
pop
dec
pop
xchg
pop
js
or
sub
nop
stos
enter
mov
leave
pop
das
negl
mov
lods
dec
or
lock
cmc
xchg
cmpl
push
int
jns
xchg
mov
jns
cmpsl
stc
cmp
adc
jmp
or
fldenv
ss
adc
dec
cmp
and
add
add
loopne
ja
in
insb
sub
and
in
lahf
pop
dec
psrad
push
insb
jo
push
or
push
outsb
sub
add
cwtl
sbb
push
push
jmp
jns
mov
test
xor
mov
push
popf
lods
mov
mov
je
push
fisttpl
les
adc
in
pop
dec
xchg
addl
add
jo
es
dec
jl
add
or
in
rcrb
jb
sub
enter
add
sbb
pop
xor
inc
fs
dec
sbbl
sbb
aas
pusha
in
and
or
adc
js
push
cs
push
adc
cmpsl
add
mov
adc
jle
sbb
cwtl
adc
dec
push
aam
pop
mov
xchg
and
mov
sbb
pop
dec
in
ret
add
add
dec
fs
mov
lods
test
mov
inc
inc
loope
pop
and
lret
in
mov
push
ss
add
in
mov
add
adc
add
stc
mov
inc
sbbb
fsts
or
push
pop
xor
mov
add
rolb
and
push
sbb
jbe
sbb
xor
push
lret
sti
call
or
pusha
or
push
xchg
or
xchg
mov
sbb
sbb
xchg
roll
into
out
jg
leave
mov
mov
pushf
sahf
mov
mov
cmp
ds
mov
pushf
sbb
sbb
xchg
or
cmp
mov
dec
or
das
add
and
in
test
adc
les
inc
pop
or
adc
pop
sub
sbb
jl
add
sbb
push
clc
jge
fwait
sub
mov
and
enter
dec
mov
es
push
xor
inc
imul
mov
mov
pop
xor
xchg
and
push
pop
sbb
enter
mov
xchg
mov
sub
cmp
or
out
mov
ja
push
mov
stos
mov
negl
ret
mov
lods
or
pop
les
call
lahf
mov
lahf
std
add
rclb
enter
mov
sbb
and
mov
push
cmp
lahf
push
push
rolb
nop
mov
sub
test
push
lods
xchg
pushf
shrb
mov
lahf
ja
mov
aas
incl
or
movsb
dec
dec
and
dec
pusha
aad
aas
add
and
pop
jbe
les
and
inc
movsl
add
aaa
add
or
out
das
adc
xor
enter
jnp
loop
jl
mov
mov
adc
jle
mov
add
sbb
push
or
and
setnp
ficomps
movsl
roll
inc
cmp
add
mov
add
das
push
xchg
stos
add
pop
or
lock
xor
push
sub
jnp
or
insb
je
mov
jge
mov
mov
ret
js
in
int
bound
ret
jge
xor
push
leave
aad
pop
jl
mov
lods
pop
push
cmp
mov
push
lea
sti
jl
push
aam
mov
imul
insb
scas
in
lock
or
jne
mov
cmpsb
cmpsb
imul
adc
sbb
xor
and
or
lods
push
out
mov
loop
jne
inc
cmp
jl
mov
jg
and
dec
sbb
mov
mov
pusha
push
pusha
test
je
pop
sub
aaa
dec
add
pusha
jne
lcall
pop
lods
pop
push
and
mov
fmuls
dec
pushf
or
xchg
pop
sub
cmp
cmp
pop
cwtl
add
add
cltd
mov
stos
nop
adc
mov
out
dec
negl
sbb
mov
xchg
mov
cmp
push
and
mov
shlb
adc
mov
add
lcall
pop
or
push
jae
add
jo
je
js
cmp
jbe
jl
xor
test
or
ja
jb
test
cmp
xchg
mov
mov
mov
testl
mov
sti
cmc
add
out
subb
mov
push
lock
clc
pop
jns
out
or
jns
xor
or
dec
add
repnz
push
push
adc
xor
aam
jle
int
or
call
sub
inc
cmp
inc
addps
cs
scas
dec
lahf
mov
add
add
leave
inc
test
lret
insb
mov
test
pop
test
lods
inc
filds
lea
das
sub
pop
dec
adc
inc
inc
jecxz
xchg
enter
adc
insl
pop
pop
gs
ss
xchg
test
or
push
or
dec
stos
add
push
pop
pop
or
push
fisttps
lahf
shlb
jns
test
add
shlb
and
inc
xchg
mov
inc
pop
xchg
push
cwtl
push
push
or
ret
jne
jl
mov
add
xor
fcmovb
mov
jno
pusha
popa
jb
lods
adc
xor
movsl
lods
inc
add
fsubs
dec
std
test
js
cmp
xchg
fcomi
daa
jl
cmp
mov
inc
push
mov
adc
inc
pusha
in
add
xchg
jmp
add
pop
add
lahf
jne
fcomps
mov
or
shrl
or
scas
lea
nop
push
or
loopne
repz
xchg
fisttps
mov
xor
xor
and
es
ret
adc
pop
mov
ljmp
inc
xor
add
jp
loope
test
add
jge
adc
mov
mov
jmp
shll
std
adc
adc
sti
cwtl
cmp
cmpsl
sbb
cmp
adc
push
outsl
in
mov
shrb
int3
cld
adc
call
pop
bound
test
xor
lcall
jl
dec
xorb
dec
mov
mov
sbb
je
sbbb
push
jo
loope
xor
mov
adc
ret
jns
ror
and
shlb
test
ror
mov
xlat
mov
push
and
sub
dec
addl
sahf
sub
in
insl
push
push
push
inc
ja
shll
jno
shr
sbb
mov
adc
sub
data16
adc
sahf
mov
pop
sahf
cmp
xor
xchg
xchg
inc
xor
andb
mov
xchg
or
add
mov
mov
daa
adc
bound
jle
es
inc
sub
test
gs
dec
cmp
jo
sbb
xchg
js
dec
fs
sub
in
sahf
in
enter
shrb
adc
cli
ret
mov
out
mov
call
out
sbb
testb
or
mov
xchg
mov
dec
xchg
clc
add
mov
jb
cmp
enter
xor
push
fs
inc
nop
jle
je
add
mov
imul
cld
test
pop
je
sahf
inc
or
push
sbb
out
addl
push
mov
inc
cmp
icebp
test
mov
add
mulb
inc
sbb
and
mov
adc
pusha
test
inc
push
lahf
nop
sub
sbb
and
jo
mov
popa
xchg
dec
cmp
or
ret
pop
andb
xor
sbb
mov
pop
sub
pop
clc
loopne
xchg
add
xchg
sbb
mov
std
add
mov
in
cmp
add
mov
fsts
pop
push
push
push
movlps
lods
xor
and
dec
into
push
push
sub
dec
lea
and
pushf
repnz
cmp
and
xchg
add
lret
mov
pop
inc
mov
adc
dec
inc
jo
ret
sub
mov
inc
bswap
xchg
pop
mov
cmc
adc
xorb
xor
pop
add
cmpsl
pop
cmp
rcrb
int3
mov
enter
dec
push
push
sbb
inc
and
adc
xchg
pop
jo
or
dec
mov
and
xor
lahf
cmp
adc
lock
cmp
les
mov
add
push
jo
mov
push
sbb
inc
pop
mov
dec
test
daa
push
clc
addl
mov
sub
inc
jl
hlt
clc
ret
xchg
stc
inc
inc
fimull
sbb
sub
inc
mov
repz
icebp
jbe
push
lcall
fs
ret
pop
ss
push
fs
cmpsl
add
jo
movl
addl
test
mov
popf
bound
imul
in
mov
mov
pop
jnp
dec
fldenv
pop
data16
or
inc
ret
lret
icebp
mov
sbb
pop
mov
xor
pop
inc
add
xorl
mov
int
loope
add
jmp
push
dec
and
shrb
js
nop
add
push
cmp
mov
orps
in
push
sub
fcmovne
out
jnp
divb
call
sub
sbb
or
adc
inc
mov
pop
jecxz
scas
mov
lock
movsl
rorb
hlt
clc
cld
mov
test
scas
adc
sub
pop
adc
push
sbb
outsb
push
jmp
sub
xor
xor
fnsave
sti
dec
cmp
inc
dec
push
mov
push
pop
cmp
call
arpl
pop
sub
jo
lret
mov
sbb
push
mov
xchg
mov
pop
jmp
nop
xchg
or
lea
mov
xchg
xchg
dec
lods
mov
mov
mov
mov
fs
repnz
adc
fs
inc
push
push
push
fiadds
mov
rcl
sub
aaa
push
fcomp
jmp
push
mov
hlt
clc
in
movsl
cld
add
add
or
cld
xchg
into
xchg
or
adc
sbb
sbb
push
mov
test
aaa
xor
cmp
scas
jb
inc
inc
dec
or
test
push
pop
pop
pusha
xchg
lret
fs
cld
inc
sub
inc
adc
movsl
push
test
xchg
lret
xchg
xchg
cwtl
pushf
mov
movsb
cmpsb
test
lret
enter
mov
mov
mov
int3
adc
mov
mov
sarb
dec
add
xlat
mov
pop
and
mov
mov
dec
test
shlb
rorl
and
jns
cltd
into
jle
leave
dec
xchg
dec
jl
test
fisubs
xchg
shlb
inc
add
subl
xchg
pop
inc
adc
dec
scas
jmp
push
cmp
enter
shrl
jne
sub
adcl
rolb
add
testb
sbb
sbb
dec
lret
push
jae
mov
add
in
lret
pop
sub
roll
mov
sbb
imul
and
femms
add
inc
mov
icebp
shlb
data16
out
fcmovbe
adc
movl
or
sahf
mov
adc
xor
lahf
mov
adc
add
mov
adc
jo
adc
xchg
sub
movsb
bound
adc
mov
mov
mov
je
push
ja
cmp
inc
sbb
popa
movsb
mov
das
out
cmp
mov
sub
xchg
sbb
push
xchg
xchg
add
push
jo
and
and
sub
push
daa
and
je
ss
out
das
adc
add
xchg
idivb
jle
adcb
les
inc
and
mov
pop
inc
xchg
clc
orb
push
and
orb
rcr
pushf
sbb
cmp
je
stc
cmp
mov
mov
inc
addl
sbb
outsb
pusha
dec
das
mov
and
subb
dec
dec
mov
push
cltd
test
or
xchg
mov
clc
xor
sti
mov
clc
pop
pop
pop
je
pop
push
push
mov
stos
adc
icebp
sub
sbbl
sub
loopne
fildl
inc
repz
into
lds
cmp
mov
out
mov
out
push
fwait
into
jne
cmc
jne
aad
xor
cmp
aam
xlat
and
inc
pusha
xlat
adc
cmp
rorl
add
push
adc
pop
ja
sar
into
cmp
incl
inc
cmp
dec
push
or
cmpb
in
pop
aas
cld
cmp
xchg
insb
or
mov
movsb
inc
push
sbb
sbb
hlt
nop
dec
or
pop
adc
jmp
shlb
iret
mov
dec
xchg
dec
int
sbb
cmp
fs
nop
pop
mov
adc
rorl
push
call
mov
ds
adc
imul
xor
push
or
jbe
or
nop
cli
or
shrl
and
inc
loope
cmp
adc
ss
add
jge
xor
test
xchg
enter
mov
push
cmp
bound
sbb
aam
mov
xchg
xor
add
push
sbb
clc
mov
sbb
push
dec
push
push
push
pop
adc
lea
mov
mov
mov
rolb
enter
jo
push
adc
add
and
or
test
sbb
test
cltd
je
inc
cmp
imul
fidivrl
mov
xchg
sbb
daa
out
sub
xor
andb
lahf
push
mov
jnp
mov
adc
fsubr
dec
xor
add
add
test
adc
cmp
or
push
dec
sub
xor
mov
cltd
popa
push
xchg
fadds
jmp
mov
and
aas
cmp
mov
cld
adc
insl
xor
ficompl
sarl
lcall
jno
pop
adc
addb
push
sbbb
pop
push
shrl
and
push
and
test
dec
shlb
sbb
inc
or
mov
and
loopne
lahf
mov
mov
lahf
inc
push
push
arpl
xchg
or
cmpl
jl
out
jae
bound
or
xchg
jno
inc
add
lock
inc
mov
daa
cmp
jl
call
pop
imul
gs
loope
push
daa
fstps
push
add
sahf
lods
movsl
push
jo
stos
js
xor
pop
movsl
add
inc
dec
leave
in
push
mov
adc
je
call
jb
fnstsw
stc
cli
xor
in
xchg
and
mov
std
inc
xchg
int
add
enter
sbb
jl
cmpsl
scas
insl
test
pop
add
std
bndldx
ss
adc
sbb
pop
xchg
stos
fcoml
sbb
insb
insb
jg
inc
movl
lods
push
mov
inc
fmuls
inc
push
cvtpi2ps
pop
cmp
cmp
pop
fbstp
test
enter
nop
mov
jg
dec
repnz
lds
mov
jo
loope
jg
dec
add
or
movb
icebp
inc
sbb
mov
test
add
hlt
xchg
insl
mov
fwait
lahf
mov
adc
clc
push
dec
mov
imull
push
mov
push
and
xchg
dec
push
in
pop
rclw
rcll
push
icebp
push
or
push
push
jb
popf
mov
pop
dec
add
mov
mov
popa
pop
add
sbb
fidivs
ljmp
mov
clc
adc
arpl
sbb
fwait
xchg
and
dec
in
mov
add
cmc
pusha
std
push
add
sub
std
dec
stos
adc
mov
cmp
sbb
cltd
fdiv
ret
pop
jb
ret
jg
dec
movsb
je
sbb
sbb
xor
mov
test
cmp
add
add
push
filds
orb
and
or
and
pop
aas
mov
aam
and
or
push
sub
mov
sbb
test
jl
jne
mov
cld
adc
push
or
adc
mov
cmc
dec
mov
dec
jg
cmp
jge
nop
adc
push
test
lea
subb
add
jp
add
mov
mov
ljmp
sbb
or
fiadds
fwait
jl
adcl
cmp
pop
push
push
insl
sub
inc
test
mov
xchg
cwtl
add
inc
pusha
shrl
inc
out
or
loop
rorl
sub
test
loop
sbbb
push
pop
push
adc
jo
sub
xchg
or
add
shll
fcmovbe
sub
lea
mov
testb
mov
push
lea
push
pusha
or
sahf
adcl
push
ret
std
adc
push
mov
mov
iret
mov
dec
cmc
orb
push
adc
les
imul
adc
filds
push
push
imull
pop
stc
int
fnstsw
xor
imul
cmpsb
mov
push
pop
lock
add
mov
je
aas
pushf
jno
mov
aas
jl
loop
push
xchg
push
sub
add
and
stos
xor
xchg
ret
int
or
mov
loopne
mov
sub
inc
push
push
popf
add
cmp
adc
mov
jle
mov
and
shll
inc
mov
pop
push
outsl
adc
xchg
inc
mov
in
inc
jns
test
mov
add
test
or
xchg
mov
push
mov
repz
push
dec
add
jb
fs
mov
adc
lds
mov
mov
test
pop
dec
push
or
rclb
add
dec
lea
sbb
ret
cld
mov
inc
bnd
hlt
ss
or
mov
xor
jge
push
push
push
mov
sbb
push
das
xorb
and
pop
push
push
sub
pop
inc
roll
add
in
push
cmp
pop
sbb
cmpsb
push
and
cli
push
stc
notl
mov
enter
jmp
sub
mov
flds
test
pop
pop
and
pop
sbb
pusha
mov
addr16
das
or
xor
add
inc
push
mov
inc
push
pop
ret
daa
mov
or
jnp
adc
std
es
adc
cmp
sti
mov
rorb
inc
mov
sub
push
push
mov
dec
mov
xor
lds
sub
mov
insb
test
cld
sub
dec
pop
sub
stos
push
sbb
adc
pop
mov
addr16
and
push
out
add
repnz
jnp
insb
in
or
xor
ljmp
push
mov
sub
or
ret
mov
scas
dec
les
lds
push
pop
rorl
push
jnp
push
imul
ret
push
pop
jno
sbb
call
fidivrl
stos
jb
aam
cmp
shlb
pop
gs
fdivl
mov
jge
push
movsb
call
lcall
stos
push
and
mov
iret
lahf
fdivs
push
call
out
add
add
pop
jne
and
xchg
or
adc
leave
mov
sarl
add
adc
mov
cld
pop
add
faddl
lret
pop
add
add
push
mov
das
sub
cmp
jge
orb
in
pop
pop
dec
push
fistpll
cmp
cmp
or
sub
insb
lahf
xor
data16
inc
cmp
mulb
inc
clc
in
je
cmp
sub
jb
cmpb
lea
and
ja
stos
push
jno
xor
add
stos
in
and
loopne
add
dec
mov
loopne
push
jns
rcll
mov
fildl
mov
push
ds
fstl
popa
rorl
inc
aas
ljmp
push
mov
adc
lahf
gs
jle
pop
pop
xor
and
outsb
out
mov
fbstp
cmp
cmp
dec
inc
fldl
mov
push
push
pop
cld
push
subl
add
xor
xor
decl
sahf
rorl
shll
add
popf
cmp
push
mov
jb
xor
xorl
or
sbb
and
adc
add
lock
enter
frstor
ret
fsubs
fimuls
jae
add
sbb
pop
push
pop
repnz
mov
mov
iret
mov
rolb
inc
test
lea
and
jb
aam
sbb
ret
cld
add
and
adc
mov
mov
xor
dec
test
cld
adc
and
mov
push
in
fstpl
inc
push
mov
je
xorl
pop
and
ss
mov
test
adc
mov
sbb
inc
add
push
rclb
jo
mov
pop
dec
pusha
dec
sbb
push
fnstcw
jmp
sbb
lock
cmp
or
xchg
sbb
test
lea
adc
inc
sbb
push
jb
jge
or
add
ljmp
fadds
out
push
xchg
cmp
out
call
mov
lods
sub
je
roll
cs
int
pop
fists
sub
das
add
adc
dec
test
sahf
xchg
mov
vxorps
pop
mov
xor
and
and
int3
mov
mov
dec
add
jo
rclb
sbb
push
mov
outsb
pusha
cmp
jb
lds
inc
xor
verw
cs
mov
movsl
fmuls
or
push
cltd
sub
inc
add
sbb
test
mov
out
xor
rcl
flds
arpl
lret
add
lods
ja
ss
into
pop
or
es
inc
jmp
loopne
push
jmp
add
rcll
add
testl
cwtl
xchg
add
or
mov
mov
lcall
inc
stos
adc
mov
dec
push
rcrl
ljmp
sarl
inc
jmp
lea
xrelease
test
repnz
je
mov
les
inc
bound
mov
rcr
rcrl
dec
scas
and
mov
push
push
or
loop
lods
xor
outsl
aam
fs
add
pop
cmp
orl
ds
xchg
lea
pushf
push
pop
fsubl
cmp
add
inc
mov
push
cltd
add
add
iret
dec
push
imul
xchg
sbb
or
enter
mov
cmp
pop
pushf
stos
mov
xchg
mov
or
aas
add
adc
sub
ljmp
add
xor
adc
sub
nop
or
push
or
mov
or
in
adc
ds
mov
add
or
push
rcll
mov
lock
ja
daa
inc
dec
cmpb
add
addr16
adc
pop
mov
xchg
mov
cs
fistpll
sub
mov
jnp
sub
movsl
hlt
scas
loopne
adc
add
mov
jo
or
data16
int
push
pop
jo
and
xchg
push
aas
pop
mov
and
and
mov
mov
insl
jmp
dec
pop
je
cmp
push
sarb
cmc
sbb
stos
lds
xchg
xor
sbb
mov
push
call
inc
nop
push
lock
fs
mov
jmp
pusha
push
and
dec
dec
cmp
ret
jecxz
int3
adc
mov
mov
sub
lds
jge
jbe
cmp
icebp
push
or
or
aad
jne
lock
arpl
xor
repnz
jl
dec
lret
inc
scas
aaa
cld
sbb
add
shlb
and
insb
cmpsb
hlt
inc
pop
jmp
lea
mov
stos
jns
mov
or
push
adc
jno
xchg
inc
sbb
ljmp
pop
test
out
mov
xor
mov
nop
js
icebp
dec
adc
dec
je
scas
sbb
add
call
out
dec
bound
and
pop
jmp
mov
push
rorl
rclb
mov
xor
gs
cmpsl
or
cwtl
mov
xor
xor
push
dec
cmp
xor
or
or
push
inc
lods
xor
test
testb
xchg
push
cmp
push
push
dec
and
insl
pop
mov
inc
loop
jno
xor
orb
or
add
daa
inc
loope
lret
lock
mov
push
add
mov
sub
push
bnd
push
lret
test
lea
clc
call
mov
fisubl
or
pop
pop
inc
jb
sub
js
imul
fsts
imul
sub
lea
push
jle
ja
movsb
cmp
xor
inc
add
or
sbb
icebp
xchg
lahf
push
fs
incl
test
mov
mov
fadds
andl
add
ficompl
clc
xorb
cmp
push
cmp
push
or
dec
xchg
dec
aas
sub
jle
jecxz
lcall
xchg
movsb
icebp
xor
xlat
aam
add
fmull
xchg
push
std
adc
lock
cmp
and
icebp
mov
sahf
repnz
sub
and
xor
xor
and
cwtl
and
inc
xor
cltd
dec
sub
fcomps
cwtl
clc
or
dec
cltd
xchg
mov
rcr
push
dec
enter
loopne
xchg
dec
je
mov
sbb
fwait
cmp
or
pop
sbb
inc
mov
sub
fbld
sahf
jl
test
mov
stc
or
imul
lods
enter
jmp
outsb
leave
lret
enter
aam
sete
and
sub
les
mov
negl
rcll
or
loopne
in
pop
cs
lret
in
call
out
sub
pop
mov
nop
dec
in
jb
xchg
mov
lods
bnd
mov
sbb
add
mov
xor
sub
aam
sub
stos
dec
stos
add
add
mov
inc
pop
mov
popa
and
dec
sbb
sub
cmp
add
adc
fs
add
mov
jo
cli
loope
dec
in
les
icebp
fildll
push
sbb
dec
sub
rcll
sbb
dec
mov
adc
es
enter
loope
cmpsl
cmp
rorb
pop
mov
mov
lock
pop
shlb
outsb
imul
sub
push
mov
and
and
push
les
popa
popl
sbb
call
pop
cmpsb
add
xor
lea
pop
mov
xchg
pop
imul
pushf
inc
xorb
ret
mov
xlat
inc
sti
fdivrl
int3
push
pushf
mov
mov
sbb
sub
pop
jb
and
dec
jb
and
adc
daa
pop
and
or
add
jb
jle
adc
shl
inc
fmull
sub
in
rcrl
fmuls
cmp
jb
rorb
in
outsb
sub
or
inc
dec
push
jo
pop
inc
dec
push
in
dec
or
in
xor
and
mov
popa
inc
mov
cmp
inc
and
fldt
or
adc
in
add
cmp
or
pushf
fsubrl
aam
add
cmp
push
rcll
pop
sub
ret
jecxz
sbb
dec
arpl
sub
inc
push
vmread
jno
test
aad
add
dec
xchg
adc
sbb
out
or
loop
or
enter
adc
inc
inc
rorb
loop
xor
movsb
jg
cltd
aam
cmp
jne
pop
dec
sbb
cltd
nop
cmp
xor
add
loop
pop
adc
dec
lahf
lea
push
orl
xchg
xor
xchg
out
dec
or
sbb
ja
insb
inc
jne
rcl
inc
add
cwtl
dec
je
cs
inc
and
or
inc
lea
jle
ss
push
push
push
cmp
push
cwtl
fsubs
mov
outsl
sbb
add
mov
pop
pusha
test
sub
push
dec
cmpl
jle
mov
xlat
or
cmp
adc
adc
push
adc
into
or
and
test
cmp
int3
pop
ret
test
adc
add
or
or
cmp
ds
bound
cmp
push
sub
pop
test
enter
pop
xor
lock
sub
testb
loopne
mov
or
push
mov
mov
mov
dec
repz
pop
inc
shlb
imul
sub
xchg
ja
cmp
inc
sbb
insb
dec
xchg
cmpl
mov
push
dec
or
mov
add
push
mov
mov
add
sbb
int3
xchg
shll
adc
push
push
rcrb
add
out
in
cli
or
ja
popf
add
aad
nop
je
jb
mov
push
pop
lock
shrl
shll
sarb
xor
movl
xor
inc
push
xor
sbb
pop
mov
cmp
cwtl
dec
push
or
pop
dec
rcrl
daa
xor
js
xchg
or
cmp
xchg
stos
lahf
outsb
inc
and
or
imul
aad
test
jne
mov
fldenv
mov
loope
push
sbb
sbb
push
mov
or
add
cmp
xlat
rorl
aas
push
adc
push
add
pop
push
inc
adc
pop
loope
cmpsb
push
lds
lods
mov
leave
pop
data16
bound
adc
cmpsb
shr
pslld
or
push
push
cmp
fmull
mov
enter
push
cmc
popa
jo,pn
mov
push
iret
scas
lcall
push
cmpb
imul
push
cmc
insb
xchg
test
pop
adc
mov
cmp
pop
jb
incl
inc
and
lods
jge
dec
mov
cli
lea
push
das
sbb
pusha
pop
mov
inc
daa
push
cmp
out
sbbb
or
fsubrs
sub
jne
sbb
or
push
xchg
add
aam
in
pushf
test
mov
mov
push
lds
jae
pop
mov
and
push
lea
mov
pop
aas
popf
divl
sarb
in
pusha
mov
sbb
jp
clc
paddb
mov
cmp
add
popl
cmpb
das
sub
push
rcrl
xchg
mov
addr16
into
jno
aad
icebp
add
outsl
push
cmpsb
pop
test
pop
add
ret
lock
push
xchg
mov
inc
cltd
push
add
pop
stc
out
imull
mov
scas
or
or
aaa
pop
lods
jo
stos
cmp
ja
adc
out
inc
push
sbb
sub
xchg
adc
andb
ror
cmp
es
adc
cmp
adc
mov
and
call
fcomps
jle
pop
add
or
sub
movsl
pop
ret
rorb
xchg
popf
into
sbb
mov
testb
add
or
xor
inc
into
push
mov
xchg
cmpb
out
mov
lea
dec
jae
std
out
cmp
push
adc
into
push
jmp
jne
cmp
sbb
cmp
push
pop
stos
adc
adc
mov
std
rcrl
rorl
push
and
loope
movsl
cmp
push
pop
les
cmp
lahf
adc
insb
push
nop
pop
add
sbb
or
ljmp
and
xchg
adc
sbb
xor
pop
testl
push
hlt
add
addr16
inc
lock
faddl
pop
push
adc
test
xor
jbe
icebp
mov
adc
adc
clc
dec
js
pop
mov
push
jne
jle
ja
ffreep
jmp
pop
jle
inc
test
and
dec
ret
movnti
icebp
sahf
dec
sbb
fcomp
das
xor
sub
dec
mov
outsl
cmp
dec
imul
xor
or
orb
push
js
outsl
mov
add
push
filds
mov
loop
add
cmp
mov
jmp
leave
push
daa
inc
out
out
mov
cmp
sbb
xchg
sbb
pop
into
jne
ret
adc
jmp
dec
or
or
imul
mov
loope
push
push
add
jbe,pt
fdivrp
pushf
lcall
popf
sbb
push
mov
push
or
mov
cmp
not
mov
aaa
mov
sub
sub
push
sarb
dec
jl
xor
cmp
cmp
push
adc
ss
sbb
mov
sbbb
adc
xor
sbb
sbb
pop
mov
xorb
sarl
stos
js
and
mov
mov
sub
push
inc
cmp
adc
push
cltd
cs
pcmpeqb
leave
cmp
xchg
mov
jns
and
and
pop
add
sbb
sti
pop
inc
add
pusha
push
sbb
cmp
inc
dec
push
and
cmp
shll
xchg
cmpsl
call
or
outsb
pop
arpl
inc
insb
push
repz
out
repz
sub
fs
mov
lcall
push
out
sahf
cmpsl
push
sbb
push
sahf
idivb
test
or
push
imul
stc
rorb
push
or
out
repz
cmp
pop
push
cmp
xchg
shrl
sbb
mov
and
insl
mov
ss
push
add
sub
and
or
xchg
mov
jmp
dec
js
mov
les
mov
dec
ret
ret
movsl
cmp
out
outsl
loopne
pusha
sarl
push
add
mov
sbb
mov
lcall
dec
outsb
and
ret
call
sarb
in
das
sub
mov
filds
mov
inc
sub
fbstp
arpl
lret
call
pop
inc
aas
sbb
stos
or
out
mov
int
sub
dec
lock
int3
mov
xchg
xchg
adc
enter
pop
mov
or
cwtl
outsl
sbb
cmp
mov
cmpl
out
out
rcl
stos
mov
mov
jb
or
pop
or
shlb
add
add
je
aad
mov
pop
out
add
sub
mov
in
mov
sub
cmpsb
adc
push
inc
cltd
inc
sub
rcrb
in
mov
out
mov
mov
push
mov
jbe
push
dec
or
fsubrl
add
push
mov
mov
mov
jle
sarb
jo
push
sbb
pop
mov
and
idivl
xchg
lods
dec
inc
cmp
pop
je
mov
adc
cmp
aad
mov
lahf
pop
sub
sub
and
jl
sub
roll
sub
jae
pop
adc
and
jns
pop
cltd
sbb
rcll
xorb
xor
clc
pushf
lea
test
lahf
xchg
dec
adc
adc
lock
and
pop
jne
movsl
test
int3
cmpsb
pop
push
cmp
add
or
adc
sbb
lds
mov
lahf
push
dec
dec
adc
bound
jns
popa
add
push
mov
jmp
sub
aad
daa
adc
lret
add
sbb
mov
test
xchg
xor
jbe
pop
push
ss
mov
xor
lret
dec
pop
inc
push
ljmp
je
adc
sbb
es
or
sub
fildll
sarb
pop
sub
in
aam
or
push
push
mov
push
sub
pushf
and
push
loope
jo
es
lea
fwait
cli
xor
jo
cmp
cmp
mov
jne
pop
and
push
dec
push
inc
mov
dec
mov
mov
stc
push
or
or
sub
jno
push
sarl
ret
loopne
les
push
int
popf
inc
test
dec
js
pcmpeqw
push
les
rorl
lcall
jl
and
lods
data16
sbb
mov
mov
or
cmp
pop
pop
out
aas
jne
sub
mov
pop
push
cmpsb
shll
push
push
inc
sbb
sbb
pushf
int3
push
jae
jns
mov
jl
sbb
in
in
xor
mov
mov
incb
int3
jle
mov
xchg
dec
hlt
pop
add
loop
mov
pop
loop
cmp
mov
fsubl
adc
sub
stc
add
mov
sub
xor
mov
lret
pop
and
cmp
jne
sub
pop
pop
push
push
sub
push
push
sahf
xchg
adc
rorl
ljmp
xor
sbb
cmp
sub
xor
or
mulb
in
xor
push
mov
xor
push
mov
les
adc
je
nop
mov
xchg
cli
push
test
mov
mov
pushf
jmp
mov
cmp
xchg
and
aaa
sbb
jnp
mov
test
idivb
je
jle
sbb
add
or
arpl
push
or
nop
adc
push
or
or
xor
sahf
mov
and
stos
jae
cmp
das
lods
enter
sbb
pop
mov
sarl
sub
sub
pop
pusha
jns
mov
cmpl
cmp
aaa
pop
and
fdivs
push
dec
and
cmp
cmp
sub
pusha
rorl
lret
cmp
add
inc
pop
imul
dec
jl
imull
xor
sbb
jns
ret
je
inc
cld
jecxz
sbb
popl
cmp
pop
mov
push
cltd
add
in
mov
shrl
stc
dec
mov
mov
into
xor
mov
and
loope
add
mov
stc
sbb
mov
add
cs
sar
inc
insl
jmp
xchg
loop,pn
mov
xchg
fidivrl
fstl
into
dec
mov
adc
outsl
dec
dec
sbb
push
mov
rorb
loope
mov
mov
fildll
sbb
pusha
jns
sbb
pusha
aad
outsl
and
imul
popa
sub
pop
jle
sarb
mov
push
pop
adc
mov
push
andb
mov
cmpb
das
aaa
sbb
xor
xchg
hlt
es
jg
dec
cmpl
inc
int
ret
add
or
movsb
fidivrs
jmp
and
les
fistl
call
mov
sub
mov
arpl
pop
xchg
ficompl
in
dec
popf
and
fistpl
ret
and
fcomps
cmpsb
push
subb
xchg
ret
add
mov
jl
movsl
push
stos
pop
push
add
sbb
cmp
mov
pop
or
xchg
mov
xor
jno
add
push
ja
jge
and
cmp
pop
jl
iret
cld
fisttpll
add
or
in
cmpsl
push
movsb
adc
mov
aam
adc
cmovae
adc
and
je
lea
fdivrp
rcl
sub
add
cmp
xchg
enter
push
fstpl
ja
jmp
subl
sbb
jg
pop
sbb
imul
push
dec
push
dec
sbb
add
inc
addr16
mov
pop
push
outsl
inc
cmpsl
push
pop
xor
push
pop
sbb
add
sahf
jmp
push
mov
add
jl
in
inc
mov
cmp
data16
fwait
pop
cmp
jle
icebp
insb
and
or
lcall
mov
mov
dec
neg
sbb
and
outsl
xor
cs
jl
fwait
js
jo
incb
add
test
fcmove
mov
das
push
push
loope
sahf
scas
jns
mov
jmp
sti
mov
or
or
inc
inc
inc
shr
and
xor
js
mov
adc
push
mov
mov
mov
movsl
iret
dec
in
mov
inc
and
push
add
push
inc
or
mov
lret
outsl
adcb
sahf
mov
jbe
push
sbb
les
ss
dec
add
push
and
subb
cmpl
dec
push
out
inc
stos
jb
sub
push
pop
shrl
dec
xchg
test
and
lds
jne
mov
lahf
lods
adc
pop
inc
xchg
adc
or
push
pop
cmp
lods
xchg
ljmp
pop
or
dec
adc
fwait
in
dec
push
jbe
mov
pop
imul
dec
and
out
sbb
or
std
dec
dec
int3
pop
jae
push
mov
jg
add
cmp
icebp
jne
mov
mov
mov
mov
jg
rol
adc
xchg
or
cmp
fbld
add
mov
testb
insb
arpl
sti
inc
add
inc
sub
xchg
nop
or
jge
pop
jbe
outsb
xlat
and
mov
mov
sbb
out
add
push
ret
sub
popf
cwtl
and
mov
xchg
sbb
inc
aaa
xor
jnp
clc
test
adc
in
ja
sub
lods
or
nop
jne
mov
xchg
inc
into
sbb
inc
cmp
jl
in
adc
mov
les
or
adc
pop
mov
sub
xchg
ret
roll
dec
jp
in
test
lea
mov
int
outsb
mov
ret
push
incl
or
mov
push
sub
add
xlat
jne
mov
or
mov
xchg
adc
fcomps
add
xchg
pop
call
lods
jns
or
or
cmp
dec
cld
sar
lea
inc
movsl
pop
or
aas
push
xchg
cmp
pop
sub
and
dec
inc
xor
mov
lock
dec
loopne
lea
nop
mov
in
sbb
mov
nop
and
scas
pop
mov
sahf
jg
xchg
sbb
flds
xchg
xor
inc
hlt
adc
add
pop
cmc
rclb
jb
pop
outsl
xor
push
pop
jecxz
push
cwtl
pop
fmull
testb
js
push
lea
sub
scas
or
outsl
jne
add
lea
jmp
jle
xchg
adc
and
das
loopne
xor
movsb
inc
jp
jmp
roll
push
pusha
ss
adc
hlt
jge
pop
aas
decl
cmp
test
aam
inc
or
xchg
inc
push
cmpl
je
mov
sub
mov
popa
das
lods
lea
push
movsl
sbb
pop
cwtl
adc
push
inc
insl
rolb
call
xchg
jb
sbb
inc
xor
sahf
mov
or
pop
inc
xor
repnz
mov
aas
add
ficompl
sarb
jnp
push
inc
mov
shlb
push
inc
fs
dec
stos
add
js
jo
add
outsl
dec
inc
shl
cmp
and
icebp
or
push
hlt
add
adcb
adc
loopne
test
cmpb
add
lods
push
fadds
adc
inc
xor
je
add
lea
sbb
movl
push
sbb
push
test
pop
cmp
mov
inc
cmp
lret
xchg
mov
and
loopne
pop
cwtl
decb
int3
dec
sbb
cmp
xor
into
int
fstpl
and
mov
gs
js
pop
and
sub
lods
xchg
dec
dec
dec
xchg
xor
mov
pop
push
sub
lock
inc
cmpsl
push
inc
mov
nop
str
shrb
pusha
mov
pop
lcall
cs
push
sbbb
mov
adc
sbbb
push
and
push
sbb
cmp
ljmp
cmpsl
cmp
adc
fsubrs
sub
nop
push
jle
cwtl
add
jnp
lds
ljmp
add
fs
lea
sahf
cld
push
jge
inc
push
testl
arpl
scas
mov
movsl
xchg
push
adcb
adc
pop
rclb
adc
add
jb
push
dec
add
or
add
add
add
mov
ficompl
inc
test
jecxz
fsubl
rorb
inc
inc
imul
loopne
pop
in
pop
faddl
data16
sbbl
int3
and
jmp
or
or
push
push
inc
sub
push
daa
mov
xorl
pusha
xchg
lret
inc
inc
gs
test
push
add
inc
dec
cmp
mov
push
ja
mov
ds
loopne,pn
xor
jmp
cmp
or
pusha
mov
shlb
sbb
mov
imul
scas
pop
sbb
sbb
mov
fcompl
in
or
fdivl
aas
pop
cwtl
js
mov
add
ss
inc
imul
sub
js
scas
mov
jnp
mov
xor
sbb
call
and
mov
push
mov
sub
push
test
inc
pushf
insb
mov
push
sbb
popa
orl
loope
ds
push
popf
cmp
insb
xor
int3
xchg
nop
and
sbb
insb
mov
add
add
pop
roll
cmovo
mov
push
add
xor
push
mov
xchg
add
cmp
push
cmp
or
insb
sub
fcoms
push
mov
mov
dec
fisubl
adc
jmp
mov
ds
cltd
push
jnp
xchg
xchg
pop
call
push
xor
jnp
js
adc
xchg
mov
mov
sbb
lods
xchg
push
clc
xchg
loopne
testb
insb
adc
push
movsl
xorl
dec
inc
jl
sar
push
ret
ljmp
add
add
jmp
mov
push
add
sbb
daa
jns
aaa
lahf
sbb
pop
jns
fnstcw
mov
lcall
pop
cli
fidivs
pop
fdivrs
mov
jl
cmp
pop
inc
cltd
add
bound
lods
in
mov
push
popf
jecxz
sub
pop
sub
push
push
lds
mov
and
sub
or
lea
push
xor
sub
dec
andl
fmuls
js
pop
sbb
add
mov
adc
in
fs
inc
addr16
or
dec
jp
mov
ffreep
add
add
pop
or
roll
test
inc
mov
dec
cmpsb
sbb
cmp
push
push
movl
shlb
ljmp
ret
fildll
lea
pop
imul
lea
sub
or
ds
ret
dec
rclb
push
mov
sbb
and
xor
jecxz
or
jno
push
pop
dec
adc
inc
xchg
inc
ret
lea
push
int3
or
and
xchg
add
imul
lahf
jl
shlb
push
mov
imul
add
or
test
dec
int
jge
mov
and
add
aam
and
decl
mov
jo
jge
mov
lea
jne
loopne
add
xlat
rol
aad
pop
pop
adc
mov
xor
or
mov
ficoms
ss
popa
int
and
and
adcb
cmpb
jp
sbb
cld
add
pop
dec
stc
push
je
cmpsl
arpl
adc
jbe
leave
mov
mov
iret
adc
movsl
dec
jl
or
dec
testb
ret
pop
push
leave
shrl
cmp
lds
mov
pop
psadbw
jmp
or
cmp
out
testl
or
daa
lods
add
xor
mov
inc
push
mov
push
jo
ficoml
fisttps
repz
and
lcall
adc
mov
stos
imul
dec
jne
pusha
cmp
sub
cmp
sbb
mov
iret
or
js
aam
mov
xchg
hlt
add
das
pop
adc
inc
rcrb
mov
lea
sbb
push
sbb
popa
push
mov
pop
pop
sbb
movsl
imulb
pop
filds
adc
loop
inc
lret
inc
push
jne
cmpb
jo
push
mov
test
lahf
mov
adc
addl
add
cmpsb
xchg
push
xor
push
test
push
aaa
lods
or
push
and
push
cld
pushf
push
mov
aam
aad
jl
lahf
dec
in
push
mov
dec
lea
fs
dec
jo
xchg
sbb
sbb
sub
xchg
ljmp
pop
dec
or
jne
test
cmp
test
ljmp
xlat
popaw
inc
push
xchg
or
dec
dec
test
loopne
and
mov
jns
call
mov
shr
pushf
movsb
and
mov
mov
pop
sbb
mov
dec
call
sbb
les
sbb
inc
fcomp
mov
testl
sti
dec
jb
clc
lock
test
add
sbb
push
popa
in
adc
js
jo
sub
mov
loopne
adc
out
inc
mov
lock
push
fmull
jmp
ljmp
jne
xchg
fadds
cmp
push
lock
jmp
insl
in
xchg
sbb
inc
arpl
push
add
cmpsl
mov
int3
push
add
les
push
or
sbb
push
pop
mov
testb
jl
arpl
pop
ja
gs
xor
out
repz
ss
lock
xchg
ljmp
jmp
repnz
pop
loop
adc
and
call
push
repz
xor
add
push
sbb
push
adc
nop
fistpl
test
push
adc
push
loopne
aaa
sbb
fisubrs
testl
mov
add
or
mov
lea
xchg
sub
aas
in
push
push
movsb
jo
inc
out
push
mov
xor
or
push
jp
push
sbb
push
jmp
leave
stos
sar
cld
stos
xor
pop
sub
ficoms
cwtl
cmp
andb
jl
lcall
push
adc
out
fldl
cli
in
adc
ss
out
adc
aas
fidivrs
cmp
xchg
pop
adc
mov
sub
sti
sbb
and
test
jne
or
mov
cltd
xor
or
ret
icebp
movl
xor
sarl
and
and
adc
pusha
pop
cmp
mov
mov
scas
xchg
test
xlat
adc
mov
mov
or
clc
js
mov
iret
fldl
cmpsb
dec
test
ret
jb
mov
rorl
jl
cmpsl
jmp
lods
add
add
into
cmpsl
sahf
push
mov
jl
imul
or
in
sub
cmpsl
loop
sub
lahf
shrb
lea
les
test
pop
pop
mov
es
aam
add
inc
or
test
call
mov
roll
int3
push
or
jb
mov
mov
call
dec
jmp
sahf
hlt
jns
sbb
jp
add
call
ret
jle
dec
or
or
stos
cmpb
cmp
cmpsb
mov
cmp
icebp
inc
xchg
or
sub
cmp
aaa
sbb
ds
and
pop
or
mov
daa
lret
jg
dec
fidivs
ret
lock
ss
mov
adc
mov
or
mov
push
add
loopne
xor
lock
jp
cmp
pop
sub
daa
je
cmpl
outsl
push
cwtl
inc
sbb
jne
sbb
jp
inc
aad
scas
orb
push
test
pop
push
das
pusha
std
pop
jp
mov
dec
jne
cmp
ljmp
cmp
inc
lret
mov
lds
jle
xor
pop
xchg
call
sub
add
rorl
pop
sub
or
insb
pop
cwtl
iret
lock
cltd
pshufw
aam
or
jnp
popa
les
mov
bound
jp
sub
adc
fadds
sbb
movl
add
cmp
lcall
jle
subb
pop
push
push
imul
sbb
sub
dec
stos
push
pop
rorb
mov
adc
jg
pop
dec
or
stos
push
cwtl
jns
out
jle
push
jne
mov
lock
loopne
scas
fiadds
add
add
pop
pop
mov
push
xchg
adc
or
mov
mov
mov
adc
push
lret
fwait
cmp
push
push
sbbb
jnp
popa
pop
pop
test
add
js
ffreep
clc
addr16
push
push
push
push
push
push
add
mov
xchg
lock
cmp
dec
mov
jb
test
stc
add
push
xor
cmpsb
or
mov
nop
popf
orl
push
sbb
stos
and
sbbl
and
aas
icebp
jl
mov
ret
or
mov
lea
dec
xor
ljmp
addb
int
test
adc
cs
xchg
add
mov
cmp
movsl
sbb
cmp
mov
scas
imul
sbb
sbbl
scas
and
push
mov
movb
dec
loop
add
stos
dec
pop
pop
cmp
add
adc
pop
sub
push
sub
aaa
and
and
adc
pushf
add
rclb
inc
shlb
mov
jno
xor
out
pusha
cmpsb
xchg
rorb
test
imul
mov
xchg
hlt
loope
movsl
inc
jmp
pop
or
subb
push
mov
inc
sti
dec
mov
add
ror
xor
jmp
inc
mov
adc
add
sbb
aas
jmp
jae
or
xor
sub
adc
cs
adc
push
sub
cmc
push
mov
push
ret
clc
or
and
into
sub
adc
or
jb
cmp
lods
fcmovnbe
xchg
pop
push
sub
sahf
fiaddl
add
testl
rcll
xchg
lret
or
xor
in
aas
mov
jo
iret
xlat
xor
xchg
dec
push
cltd
jle
cmc
movl
pop
xorl
lea
dec
sbb
sbb
xchg
fs
xchg
shll
or
or
add
inc
ret
xchg
add
xchg
pop
pop
adc
jl
sub
fcomps
imul
push
testl
mov
movsb
mov
js
pop
mov
inc
or
shrd
sbb
sub
in
mov
cld
sbb
loop
xchg
mov
mov
ret
mov
mov
xchg
xor
sub
cmpl
mov
jle
or
fs
das
pusha
inc
mov
push
lretw
mov
jg
imul
or
add
xchg
push
xor
adc
xchg
inc
and
and
cmp
loopne
pop
fidivs
adc
std
push
rcl
xchg
lcall
lods
push
push
lods
mov
push
pop
mov
sbb
mov
movsl
jmp
loopne
pop
sbb
and
insb
sbb
sbb
popf
inc
fstp
insl
ljmp
idiv
cmp
add
shl
lea
cmp
cmp
sbb
jno
xchg
mov
ja
rorb
sub
mov
xchg
adc
inc
push
pushf
sub
inc
out
or
lods
push
adcl
or
scas
add
pop
dec
add
jl
hlt
pop
lea
es
idivb
fwait
ret
dec
xchg
mov
add
xchg
mov
add
int3
xor
ficomps
faddl
add
loope
imul
addb
shrl
call
cmpsl
or
sbb
testl
loopne
xchg
push
fwait
ss
ficompl
jo
ljmp
aas
xchg
loopne
mov
jmp
movswl
mov
sub
out
push
cmp
das
dec
xchg
push
dec
loope
push
lahf
aad
enter
jo
push
in
fs
sahf
sahf
cmpsl
stc
pop
in
int
setg
mov
push
incl
add
add
add
add
scas
cwtl
ret
add
incb
cmp
repz
push
cmp
jns
gs
dec
loopne
clc
push
arpl
pushf
andl
push
xor
es
movsl
inc
jo
sub
mov
pusha
out
mov
sbb
cmp
aaa
mov
shrl
pop
push
or
mov
inc
sub
push
push
dec
aad
lret
idiv
xchg
pop
scas
cmpsb
push
pop
orl
mov
in
push
imul
sbb
xchg
sti
push
sub
fadds
push
push
stc
rcl
pop
xchg
stc
add
cs
or
pop
pusha
adc
scas
mov
movsl
jbe
outsb
popa
ljmp
inc
ljmp
loopne
pusha
jp
cmp
shlb
and
clc
je
or
push
movsl
adc
push
add
stc
rcrb
cmpb
adc
call
cwtl
push
mov
out
out
lret
test
pop
mov
sbb
mov
call
adc
xor
push
pop
cmp
fcoms
cmpsl
lcall
aaa
or
push
inc
pusha
cmpsb
or
lock
adc
unpckhps
adc
jo
sbb
shrl
pop
pop
jmp
push
push
test
pop
mov
pop
or
push
push
popf
add
sti
or
pop
dec
fwait
addb
jl
cmp
mov
mov
mov
aas
pop
adc
outsb
push
outsl
repz
je
nop
icebp
cmp
repz
ret
popa
cwtl
push
frndint
out
add
xchg
adc
in
xor
aaa
push
sbb
pop
push
push
popa
pop
movsl
loope
push
pop
xchg
and
ret
mov
mov
or
fldl
mov
movsb
adc
mov
or
cmp
sub
out
mov
jmp
inc
je
jne
adc
adc
sahf
inc
subl
std
fisttpl
jns
sub
fsubr
pop
inc
cmc
arpl
mov
xchg
stos
add
push
adc
mov
inc
cmp
jl
xchg
jo
mov
loope
dec
mov
xchg
jl
add
mov
mov
push
xor
push
mov
inc
popa
sbb
cmp
clc
push
push
ret
cld
pop
dec
fildll
loope
push
jge
or
mov
aas
adc
cmp
repnz
mov
adc
mov
xor
sti
jge
push
cmp
addr16
sub
movsb
jnp
add
xor
and
push
push
dec
sbbl
mov
mov
jnp
jmp
in
mov
xor
pusha
and
cmp
sti
add
sbb
test
and
xor
mov
je
shlb
sub
push
int
xchg
mov
fmull
loop
xchg
dec
cmp
dec
push
out
outsl
cmp
lea
or
sbb
pop
dec
sub
clc
add
or
and
inc
in
addb
orl
and
adcb
ret
and
repz
push
nop
ds
int
add
es
jg
mov
add
inc
sub
sub
cmp
jle
adc
push
jp
or
mov
sbb
mov
and
sub
shr
fwait
add
orb
push
lahf
call
divl
mov
add
sahf
cwtl
add
sbb
mov
or
mov
mov
sbb
cmpsl
ja
enter
adc
add
sub
dec
inc
add
xor
sbb
pop
sub
inc
les
les
mov
jb
pop
push
movsb
sbb
lods
out
test
faddl
sub
xchg
xor
xor
or
dec
mov
or
lods
mov
pop
aam
popa
insb
test
mov
rcrl
fdivrs
adc
aad
ret
js
pop
clc
sub
add
popa
ret
sub
lret
lea
or
xor
jl
jbe,pn
inc
rcl
xlat
mov
dec
xadd
mov
push
cmp
xchg
xor
sub
fdivrl
sub
jb
movsb
lret
xor
aad
pop
movsl
push
mov
adc
test
insb
adc
or
aad
or
sbb
sub
jbe
xchg
or
out
push
add
push
push
and
push
mov
and
adc
push
push
push
mov
mov
sahf
test
dec
imul
inc
aaa
stc
and
cs
xchg
pushw
stos
and
nop
adc
dec
jmp
push
jae
mov
adc
sub
push
xchg
jne
mov
xor
xor
fidivrl
ljmp
or
mov
dec
loope
xchg
inc
pop
and
push
rolb
sbb
cmc
xchg
mov
loopne
push
fimull
lock
in
jp
xor
xlat
mov
and
in
push
fs
or
xor
and
and
cmp
lea
xchg
push
sbb
jle
jbe
push
add
movl
fmuls
mov
or
cs
mov
repnz
and
push
addr16
sbb
cmp
in
mov
jle
mov
mov
lret
pop
rclb
dec
push
icebp
mov
sbb
and
push
sbb
mov
mov
dec
add
pop
adc
outsl
mov
dec
bound
in
scas
mov
getsec
adc
je
dec
inc
push
rcll
cmpsl
add
xor
mov
sbb
fildl
outsb
je
jg
add
dec
push
add
inc
sub
fs
push
insl
loopne
mov
push
loope
mov
insb
sub
inc
or
aaa
and
adc
dec
sbbl
inc
push
ja
movsb
and
or
adc
sbb
and
aam
mov
mov
test
inc
adc
mov
test
jecxz
mov
test
dec
pop
push
add
lea
xor
stos
add
sarb
gs
fcmovbe
ret
lcall
je
sub
sub
xchg
pop
adc
adc
rorb
and
add
pop
jmp
jne
and
add
sub
xor
sbb
cmp
popf
movsb
pop
cmp
push
sub
push
lods
xor
mov
pop
fsubp
lods
sub
pop
mov
sub
cmp
sbb
cld
inc
pop
je
je
add
cmp
cmp
cmp
add
inc
aaa
inc
flds
imul
cli
push
jo
xor
test
rol
sub
and
sub
mov
lcall
add
sub
push
mov
call
mov
cmp
pop
shrb
test
xor
push
sub
mov
cmp
bound
cmp
xchg
nop
sub
cmp
and
push
xchg
cmp
scas
pop
cmp
mov
xchg
nop
cld
mov
cmp
add
pop
pop
pusha
xchg
lret
add
bound
cwtl
dec
inc
cmpsb
push
cmpsl
push
out
sub
js
cmp
cmp
push
mov
add
popa
repnz
cld
inc
adc
mov
mov
mov
aad
or
dec
jb
mov
inc
cwtl
cwtl
daa
and
jnp
adcl
insb
pop
inc
pop
dec
dec
adc
xor
dec
cmp
shrl
loopne
sbb
xor
pop
xchg
push
loope
stos
adc
push
lods
dec
mov
mov
idivl
sahf
out
lcall
pop
int
jl
mov
mov
fwait
imul
push
xlat
in
add
out
mov
jle
sub
jg
andb
mov
pop
daa
addb
or
jae
ds
and
and
cmp
push
lahf
inc
cmp
add
adc
xor
loope
mov
pusha
push
mov
xchg
fadds
jno
cmp
mov
outsb
push
sbb
jg
cmpsb
inc
cmp
das
clc
pushf
ret
pusha
jle
mov
sub
leave
orl
enter
add
push
ljmp
or
jb
cmp
push
pop
inc
lods
adc
mov
or
imul
test
aas
mov
adc
lods
fiadds
mov
fimuls
add
push
out
jne
orb
mov
xchg
add
add
or
xor
add
push
stc
sbb
inc
int3
imul
mov
inc
xor
jmp
js
cmc
insb
mov
and
cltd
and
mov
add
and
lock
flds
add
add
cmp
jmp
jl
jp
push
add
lods
push
xlat
mov
inc
add
xor
pusha
inc
sub
imul
xchg
sub
mov
movsb
outsb
pop
pop
push
lcall
mov
xlat
insl
mov
adc
subl
lods
mov
mov
add
xor
add
cmp
addr16
in
xor
mov
cmpsb
cmp
outsl
shll
jo
or
fwait
js
mov
or
adc
cmp
add
sub
dec
mov
or
insb
add
pop
pop
inc
or
lea
or
or
dec
cmp
sbb
xor
cmp
jns
xchg
fs
dec
jo
pop
popa
cmp
push
push
jl
cld
mov
add
xor
jb
lea
adc
pop
in
lcall
mov
fwait
add
fdivrl
es
addb
xchg
test
adc
lea
push
add
mov
xchg
jb
pushf
mov
or
sub
rcl
sub
sub
xchg
xor
or
push
or
push
fs
int3
jecxz
fs
in
enter
test
mov
and
incb
ret
push
push
add
sbb
loopne
mov
inc
call
xchg
mov
sub
movsb
repnz
outsl
mov
and
sbb
movsl
mov
aad
push
insl
push
inc
cmp
or
jle
insb
subb
cmp
dec
or
xor
pop
and
dec
mov
repnz
pop
dec
cwtl
sub
push
adc
jns
jl
fistl
mov
push
push
sbb
or
test
test
mov
lock
pop
cmc
sub
lods
mov
add
notl
dec
xchg
rcll
int3
mov
mov
add
sbb
das
clc
sub
inc
cmp
fistpl
and
test
push
lcall
sbb
or
loopne
adc
jne
add
push
push
sbb
inc
mov
cmpsb
lcall
or
push
pushf
pop
mov
popl
mov
xchg
cmpsb
nop
aad
andb
idiv
into
sub
push
xchg
push
aam
add
push
sbb
sbb
pop
ja
jne
mov
xchg
test
dec
lcall
movsb
push
adc
mov
aas
jbe
add
in
aas
sar
push
cmp
jne
mov
movsb
iret
and
xor
nop
and
pop
popf
and
clc
enter
mov
xchg
pop
pop
leave
or
inc
adc
sbb
sub
xor
lods
cmp
and
pop
fisubl
xor
insb
lcall
sbb
push
dec
aas
ss
lods
or
inc
add
sbb
xor
orl
jp
orb
scas
mov
mov
or
cmp
cmp
loop
add
sbb
jp
push
pushl
mov
dec
inc
lock
mov
insb
xchg
in
inc
loop
jl
cmp
rorb
lret
cmp
adc
xchg
push
ret
rorb
adc
xchg
popw
inc
pusha
aaa
adc
jge
jmp
das
mov
add
and
les
add
or
adc
ret
push
or
cmp
fs
inc
shlb
nop
sbb
sbb
jnp
cwtl
lock
sti
push
dec
je
add
dec
xlat
cmp
xchg
in
and
mov
xor
add
lahf
jae
and
sub
sub
push
lds
sub
idiv
sar
sbb
imul
sar
and
out
xor
mov
cmp
xorb
inc
push
xchg
ret
or
push
fdivr
aas
lea
and
mov
push
xchg
incl
pop
cmpl
add
je
cmpl
dec
aam
adc
or
inc
bound
mov
or
xchg
outsb
push
sub
ret
sub
push
xchg
lods
pop
xchg
mov
push
mov
push
test
rcll
adc
xchg
jns
sub
xor
cmp
fiadds
dec
add
mov
sub
mov
std
iret
fwait
sbbb
cmp
je
adc
cmp
lods
pop
fidivrl
ja
shrb
mov
dec
pop
mov
jge
leave
push
je
push
dec
jecxz
lret
sub
sbb
sub
in
dec
lret
jne
fistpll
sbb
jnp
fwait
push
sbb
sbbl
lock
adc
push
movsb
and
iret
sahf
push
mov
inc
mov
add
push
mov
jns
aad
pop
or
ds
ds
inc
xor
push
hlt
mov
call
or
cmp
in
and
adc
dec
push
push
scas
jae,pn
lret
adc
ss
lds
pop
into
fisttps
push
pop
cmpb
sbb
push
dec
pop
test
push
adcb
push
jbe
ret
mov
lret
adc
mov
xor
or
and
add
in
adc
mov
int3
push
inc
rorl
mov
push
ficoms
das
push
sbb
sarl
xchg
push
daa
lret
ud2
fsts
movsl
mov
imul
outsb
xchg
int3
push
mov
stos
inc
sbb
jno
xchg
push
mov
dec
cmp
pop
movb
pushf
ja
lcall
jmp
and
movsb
in
xor
jge
add
adc
stos
cmp
jge
xchg
pop
loope
lods
push
and
jns
cmp
shll
out
xchg
movsl
mov
test
imul
dec
adc
mov
into
xchg
lcall
insb
stos
add
data16
rcrb
cmp
pop
pop
add
xor
mov
push
cwtl
dec
mov
enter
js
aaa
mov
adc
adc
std
mov
jg
clc
call
pop
jo
imul
stc
cwtl
sub
outsb
sbb
and
add
cmp
les
sub
mov
push
xor
jl
push
mov
jae
jne
or
push
aas
push
jo
add
aam
push
xor
add
andl
imul
adc
push
cmp
xor
int
mov
and
enter
xor
adc
stos
sbb
and
mov
sub
cmp
mov
jns
jg
sbb
out
imul
into
sbb
jle
sbb
push
add
dec
cmp
push
out
xchg
test
cmp
inc
jge
mov
add
andl
push
and
sbb
arpl
pop
inc
sbb
iret
jge
inc
scas
push
mov
cltd
mov
imul
mov
sbb
adc
inc
sub
cmpsb
fs
mov
mov
imul
lds
mov
aas
jle
cmp
out
xsaves
inc
arpl
xor
out
enter
sbb
iret
dec
imul
jns
lret
pop
cmpsb
jg
fidivrs
out
je
test
mov
inc
negl
add
scas
fwait
add
add
into
and
and
adc
mov
add
mov
jns
pop
xchg
cmpb
push
das
fcoms
sbb
and
fidivrl
cmpsl
xlat
inc
xor
lcall
jb
push
pop
je
xchg
push
clc
adc
pop
inc
std
and
cmp
andb
and
mov
fcoms
mov
test
adc
mov
add
orb
or
add
rol
mov
xor
sbb
ss
push
aad
repz
out
int3
das
jno
cwtl
lcall
bswap
push
jns
out
data16
movsl
mov
iret
in
push
into
and
mov
sbbb
icebp
test
hlt
push
cmc
and
lock
lea
rorb
jne
mov
cwtl
pop
lods
add
outsl
mov
mov
rorb
push
or
push
push
mov
jmp
push
dec
inc
cmp
adc
xchg
add
lods
sub
and
shll
test
jne
and
and
or
je
enter
and
enter
pop
dec
pop
ss
mov
rcrl
pop
mov
adc
rolb
pop
paddd
adc
mov
and
dec
push
sbb
or
fsubr
pop
and
mov
addb
in
sub
mov
mov
push
nop
or
xchg
adc
mov
push
adc
inc
xchg
pop
pop
xor
inc
push
add
adc
stos
loopw
pop
and
pop
cmp
inc
les
movb
push
mov
in
xchg
test
jmp
cmpsb
orl
sub
scas
xchg
mov
test
dec
das
es
movb
daa
mov
leave
pop
inc
lea
mov
mov
gs
pusha
andb
mov
adc
mov
loope
or
xchg
pop
mov
dec
inc
cmp
leave
pop
mov
mov
add
loope
add
pop
fistpl
add
nop
dec
mov
lcall
jecxz
mov
pop
mov
xor
mov
es
sbb
addr16
pop
dec
repnz
rcl
pop
sbb
bound
imul
xor
std
push
pop
outsb
xor
pop
sbb
frstor
jg
mov
dec
mov
cs
push
popa
arpl
sbb
fdiv
lea
xor
jno
adc
inc
imul
mov
inc
stos
jb
add
xor
test
pop
dec
je
xchg
out
inc
repnz
mov
loope
push
daa
sub
test
je
add
push
push
adc
insl
sub
pop
or
in
stc
loopne,pn
fsubr
fdivrs
dec
in
add
mov
repnz
call
loopne
mov
pop
mov
dec
or
or
enter
cld
mov
pop
add
mov
shlb
push
sub
test
outsl
push
xor
or
inc
test
ds
xchg
outsl
push
jbe
sbb
add
add
xor
sahf
pop
adc
jo
enter
and
push
and
mov
ja
dec
adc
or
cmp
imul
mov
leave
and
and
sub
or
or
jne
mov
adc
mov
mov
inc
movsb
mov
and
pushl
or
pop
jp
mov
xor
push
pop
nop
jbe
lcall
dec
add
push
or
mov
add
shlb
out
add
mov
pextrw
addb
insl
add
push
sbb
jae
lret
test
popa
stos
and
mov
push
adc
ror
mov
or
pop
arpl
dec
dec
jmp
pop
add
xchg
fnstcw
cmp
mov
inc
xchg
outsl
mov
jo
in
cmp
loopne
fs
sbb
jmp
sub
mov
push
iret
or
sbb
or
push
arpl
ds
inc
add
push
jnp
xor
dec
fimuls
mov
mov
lods
or
push
jmp
jns
pop
cltd
adc
or
sbbb
sbb
xor
lock
mov
repz
nop
je
jg
repnz
adc
stc
add
test
xchg
movsb
inc
test
pop
test
aam
pop
or
or
ret
inc
or
ret
push
lea
gs
add
mov
mov
fidivl
inc
cld
adcb
pop
mov
ja
out
stos
mov
mov
mov
lods
sar
adc
lock
mov
mov
add
lods
inc
lock
sbb
cli
push
dec
inc
pusha
mov
idivb
movsl
push
icebp
lock
xchg
pop
add
jecxz
dec
std
insb
sbb
push
add
push
ljmp
mov
sbb
xchg
loop
push
fmull
xor
add
xor
inc
sub
push
push
bound
xor
jne
std
repnz
push
dec
dec
es
cmp
loope
push
outsb
jne
jne
sbb
icebp
jle
xor
push
push
dec
push
push
sub
add
push
adc
stc
add
clc
add
jmp
push
mov
and
xchg
xchg
add
in
jle
mov
sub
lret
inc
cs
lods
call
sub
and
inc
jmp
push
enter
in
xchg
inc
mov
dec
or
flds
dec
out
cmc
xchg
or
sti
in
sbb
imul
pop
clc
push
adc
je
into
adc
insl
push
add
sbb
xchg
les
inc
addl
sub
sub
rolb
iret
mov
push
jo
jns
mov
outsl
mov
fisubrl
test
sub
ss
push
adc
cmp
out
incl
test
bound
test
pop
pop
aam
out
push
xor
mov
sti
testl
xchg
adc
push
mov
sub
add
movsl
shr
hlt
xchg
mov
mov
dec
jecxz,pt
push
mov
cmc
ret
push
lea
push
push
stos
or
sub
xor
fs
cs
and
test
dec
mov
sbb
lock
sbb
pusha
mov
xor
cmpsb
pop
cmpsb
in
loopne
imul
pop
inc
pop
adc
mov
add
cmp
jmp
mov
or
mov
push
inc
ja
repz
cmp
adc
shlb
lea
insb
push
test
je
push
push
sbb
cmp
cs
pusha
sub
addb
mov
loope
add
inc
lcall
loopne
mov
stc
sbb
mov
push
push
call
repnz
cmpsb
in
scas
data16
and
xchg
loopne
pop
or
add
or
pop
test
or
adc
pop
mov
sbb
add
adc
cld
sub
jg
outsb
pop
mov
imul
es
cmpsl
push
pop
inc
dec
cmp
cli
push
prefetchwt1
xchg
stos
xor
mov
movsl
push
jno
fwait
lea
insb
repnz
cmp
adc
fidivrl
mov
or
add
mov
cmp
jg
ja
clc
sub
lock
sar
cmpsb
ret
mov
push
cmp
jle
ljmp
dec
dec
adc
xchg
and
dec
fdivrs
hlt
out
sub
pop
bound
in
add
xchg
push
sub
icebp
mov
fiadds
out
cmp
jb
push
testl
pop
testl
jmp
ret
data16
mov
push
and
movsb
scas
cmpsl
lods
pop
in
dec
ljmp
dec
adc
mov
sahf
add
push
mov
imul
mov
inc
mov
in
adc
pop
in
or
pushf
in
lcall
xchg
fidivs
roll
fsubl
in
adc
scas
inc
push
cmp
mov
jb
clc
mov
es
sub
dec
jb
mov
push
push
add
sub
xchg
cmp
bound
das
sbb
jp
mov
sub
bound
jge
mov
loopne
mov
sub
or
xchg
loope
rol
lcall
movsb
sar
cmc
rclb
or
mov
je
mov
and
sub
add
xchg
jo
add
rorb
lret
cmpsb
cltd
sbb
add
rcll
mov
pop
je
add
test
ret
inc
inc
je
cmp
xchg
shlb
subb
add
pop
xor
js
adcl
adc
pop
adc
mov
add
push
pop
push
dec
fisttpll
sub
sub
or
cmp
jae
xchg
xor
jecxz,pn
pop
push
push
mov
sub
inc
jb,pt
ds
jge
ljmp
mov
add
andl
das
ret
mov
push
sub
je
push
and
sbb
sbb
fmuls
inc
sub
xor
sbb
fstl
push
jp
inc
iret
loop
push
adc
filds
test
enter
push
push
jns
push
push
mov
popf
dec
sbb
push
lcall
dec
and
push
pop
jo
mov
lret
and
adc
mov
add
in
inc
jmp
fistl
loopne
or
xor
rclb
or
sub
mov
and
jle
cmpl
popf
icebp
push
push
xor
inc
add
jg
xlat
and
in
sbb
mov
jo
js
push
mov
dec
enter
fcoml
push
shrb
notb
add
adcb
and
adcb
or
jno
test
scas
fisubrl
loope
or
orb
add
lods
mov
cli
xor
sub
mov
xor
dec
push
dec
ret
pop
sbb
call
mov
lcall
cmp
pop
fstl
fnstcw
nop
dec
scas
mov
cmp
xchg
adc
cmpl
shrl
dec
or
out
push
adc
loop
adc
out
and
add
addr16
push
push
push
inc
cmc
addl
idivl
stos
lods
xchg
cmc
jg
repz
lcall
scas
add
adc
adc
push
and
pop
cmpsb
and
adc
sbb
inc
call
sub
dec
adc
jne
sbb
rorl
fxch
jmp
adc
shl
and
in
and
lcall
scas
test
sub
xchg
xor
in
loope
dec
add
or
and
mov
rcl
dec
adc
add
push
or
pushf
inc
jb
inc
push
ljmp
aaa
mov
add
sbb
stos
and
mov
xchg
push
adc
push
pop
and
adc
push
mov
sub
ret
inc
lahf
rorb
mov
jo
xchg
test
in
insl
hlt
outsl
cmp
push
adc
leavew
push
pop
xchg
or
push
and
dec
and
es
xchg
add
mov
rcrb
mov
lea
add
je
enter
adc
in
mov
or
movsb
ret
add
push
xchg
adc
mov
and
dec
in
jle
mov
stos
loopne
rcll
push
hlt
or
inc
add
pop
out
add
outsb
xchg
push
test
jg
mov
sub
ret
in
dec
mov
inc
je
lds
and
adc
inc
pushf
cmpsb
lods
sbb
or
add
cmpsb
sbb
jns
sbb
lea
mull
outsb
ss
dec
and
int3
and
add
repz
fsts
mov
xchg
pop
call
jnp
mov
out
es
filds
sub
mov
cmp
and
adc
or
aas
cmp
fcmovnb
repnz
ret
and
ret
pop
or
sti
jne
test
mov
xor
xchg
das
xchg
inc
pop
call
add
xor
add
into
add
pushl
adc
test
mov
dec
xor
sbb
mov
mov
aaa
adc
mov
ret
loop
jae
pop
cmp
sarl
dec
js
add
aaa
mov
sbb
dec
sub
pop
rclb
hlt
inc
faddl
jge
and
cmpsb
or
mov
int3
loop
dec
sub
and
push
sub
add
arpl
inc
mov
pusha
movsl
nop
shrb
andl
xchg
xorb
movsl
and
test
push
or
and
push
inc
dec
dec
jmp
test
lea
movsb
pop
cld
gs
jl
rcr
insb
lea
and
aas
lods
mov
dec
mov
sbb
mov
mov
fimuls
mov
dec
mov
push
test
add
xchg
push
outsb
add
and
push
push
test
mov
pop
jbe
sub
jne
inc
loop
mov
dec
or
lock
out
lods
in
pusha
lret
gs
dec
popa
mov
mov
cmp
jle
add
js
mov
xor
movsl
mov
leave
pop
enter
ret
out
mov
cmp
rcll
lea
fstl
clc
jo
push
push
data16
or
test
inc
mov
or
imul
repz
fstpl
add
mov
mov
xor
push
out
dec
adc
call
inc
push
bound
or
push
cmp
mov
hlt
sti
enter
out
jecxz
mov
jne
xor
pusha
cmp
inc
jmp
jne
xor
sti
gs
and
push
add
adc
and
arpl
or
inc
ds
loopne
je
dec
cli
add
jg
js
dec
cmp
imul
stos
pushf
inc
sub
adc
push
sbb
data16
pop
dec
pop
sub
jg
push
push
push
pop
push
or
lahf
outsb
mov
dec
adc
and
std
xorb
enter
js
movsb
add
imul
add
push
push
add
rclb
testl
mov
je
mov
dec
mov
sub
movsb
add
push
dec
sbb
clc
jo
je
inc
sbb
dec
pop
insb
push
and
out
cmp
xor
cmp
stos
mov
jg
or
mov
cmp
jne
inc
insb
mov
sbb
and
cmp
add
inc
xchg
fmuls
mov
xorl
add
xorl
sub
xor
scas
hlt
xlat
xchg
and
fst
push
arpl
rcll
adc
push
adc
mov
jecxz
dec
stos
sbb
inc
cli
jmp
mov
pop
add
sbbl
aam
jno
std
sbb
adc
jo
or
push
mov
aad
sub
xchg
je
jle
sub
icebp
jne
mov
jne
or
xchg
sbb
sbb
mov
or
dec
push
pop
pop
icebp
imulb
nop
add
jbe
jg
ret
push
push
add
testl
cmp
lahf
js
movl
mov
jne
jno
sub
ljmp
jecxz
gs
lock
push
xchg
or
jnp
dec
and
pop
xor
mov
and
js
push
sub
nop
mov
fiaddl
add
cmp
sahf
and
dec
push
inc
or
ret
xchg
push
sbb
sbb
orl
dec
jl
push
cmc
dec
ret
andl
loopne
mov
mov
sub
push
xorb
or
pop
lahf
add
mov
xor
push
sti
xchg
jmp
inc
cmp
xchg
ja
jnp
mov
pop
or
rol
mov
xchg
pushf
shlb
push
jo
mov
outsl
and
push
icebp
pusha
cltd
sub
test
test
pop
inc
cmpsl
push
mov
mov
xchg
mov
adc
nop
adc
leave
mov
push
stos
fstps
inc
bound
xor
dec
cmp
outsb
movsl
cwtl
push
pop
pop
lods
xchg
daa
fwait
push
adc
into
inc
cmp
and
and
aaa
jne
stos
push
inc
sub
jnp,pn
xorl
out
adc
ljmp
adc
cmovae
and
adc
mov
je
cmp
stos
lods
sub
shr
je
push
mov
outsl
js
test
loopne
pop
scas
mov
js
sti
subl
jbe
sbb
pop
cmp
jge
ja
icebp
int
inc
mov
jmp
sbb
and
fcoms
sbb
loope
pop
jo
daa
inc
sbb
mov
or
add
or
in
add
mov
pop
adc
cli
mov
ret
leave
test
popf
dec
pop
push
and
mov
dec
add
rcr
push
cmc
add
dec
movsb
and
pop
cmpsb
fstl
jp
cmp
inc
push
pushw
inc
out
adc
dec
sub
pop
je
stc
sbb
or
adc
or
xor
xlat
inc
mov
sbb
ret
or
jg
cpuid
imul
adc
xor
adc
outsb
pusha
imul
shrl
or
pop
jb
dec
loope
movsb
mov
mov
push
scas
sub
dec
imul
pop
xorl
int3
aaa
and
mov
das
adc
pop
pop
mov
pushf
je
mov
push
iret
jne
in
xchg
mov
inc
mov
or
fdiv
and
dec
scas
enter
mov
jb
out
mov
cmp
inc
pop
add
or
lock
inc
adc
scas
ljmp
addb
push
dec
stos
pop
mov
sbb
rcrl
lods
mov
push
out
imul
push
cmp
or
sub
mov
push
cmp
aaa
xorb
mov
jo
add
sbb
push
inc
mov
icebp
and
and
push
pop
cmpsl
or
or
out
outsb
adc
xor
cmp
scas
mov
mov
les
pop
mov
adc
lret
pop
xor
xchg
popa
mov
xor
loop
test
inc
cmpsl
cmp
dec
test
mov
jb
rcrb
nop
push
add
cmpsl
adc
mov
mov
imul
orl
inc
push
add
cmp
inc
test
fisubs
sub
add
dec
add
cwtl
xchg
lods
push
mov
or
mov
and
nop
cmpl
add
cmp
jl
adc
mov
ds
lret
cmpb
pushf
pop
sarb
push
and
push
xor
push
cmp
mov
test
sbb
push
adc
or
aaa
out
push
xchg
sar
xchg
push
inc
js
repz
stc
sbb
sub
inc
xchg
scas
jo
and
adc
pop
inc
or
push
andl
and
dec
sti
pop
adc
lcall
xchg
insb
push
cmp
lea
fimuls
cltd
jmp
aad
inc
mov
ss
js
or
popf
push
loopne
sbb
or
push
and
imul
push
sub
jo
popf
xchg
xor
enter
xor
dec
mov
mov
lea
mov
sti
aam
or
xor
add
outsl
pop
sbb
push
arpl
adc
flds
add
xchg
add
jno
les
popa
jg
pop
or
jne
pop
mov
fs
jns
in
mov
lods
lahf
push
pop
dec
ret
sub
push
jl
inc
jbe
popa
lods
xor
sub
and
xor
pusha
lock
mov
cli
cmp
push
orb
xchg
push
push
loopne
mov
xlat
faddl
dec
inc
std
jne
sbb
fnstenv
out
lods
scas
out
rorb
ja
jle
add
popa
pop
daa
add
fnsave
jmp
scas
insb
add
mov
and
aaa
add
test
adc
orps
inc
and
or
jle
xorb
add
inc
sub
sbb
and
jo
test
add
adc
adc
mov
add
nop
arpl
jge
inc
and
jmp
pop
cmpsb
sarl
add
lds
lret
inc
add
test
xor
sbb
data16
hlt
and
loope
popf
adc
cmp
sarb
testb
push
and
pop
adc
jne
or
xchg
nop
aad
loopne
xor
mov
lcall
cmp
mov
mov
cmp
push
pusha
jo
jge
cli
push
mov
fdiv
xchg
roll
push
pop
es
cmp
inc
push
adc
xor
inc
inc
inc
mov
add
dec
dec
push
scas
loopne
dec
je
inc
jne
cmp
sbbl
sub
dec
aaa
in
aas
rolb
xor
inc
cmpsb
in
mov
repz
mov
add
pop
fcomps
and
ds
push
inc
test
mov
push
push
sbb
cmp
adc
sbb
fwait
jne
push
mov
jg
dec
inc
pusha
sbb
and
jne
subb
clc
mov
sub
sbb
inc
test
lret
into
push
adc
aaa
mov
cmp
mov
insl
jmp
inc
loopne
push
test
test
nop
and
fstpl
dec
in
add
add
dec
xor
adc
sbb
hlt
pop
shlb
pop
outsl
sbb
loope
popa
jne
xor
rep
xchg
cs
cmp
call
insb
jecxz
mov
popf
pop
and
jo
imul
pop
insb
popf
cmp
add
mov
cmp
rorb
add
dec
pop
adc
mov
fs
lock
add
and
movsb
add
adc
mov
imul
inc
cmpsb
cmp
lock
subb
mulb
adc
mov
pop
push
mov
sub
jne
sub
rorb
xor
xchg
sub
mov
incb
xor
lea
add
xor
mov
cmp
sub
lahf
test
sub
std
inc
cld
inc
scas
and
push
push
push
sub
add
dec
jns
fisttpll
dec
add
in
outsl
popa
jl
repnz
sub
lcall
rolb
sub
add
sti
cmp
xor
mov
sub
or
inc
pop
out
shl
push
add
pop
and
add
mov
and
dec
lahf
pusha
dec
pop
add
cmp
sub
jmp
aas
dec
pop
shrl
mov
jg
dec
jmp
adcb
or
movsb
sbb
cltd
jns
sysenter
cmp
adc
lds
ljmp
adc
leave
sti
dec
xchg
xchg
loopne
xor
insl
lock
add
out
in
es
or
push
daa
lods
mov
mov
and
push
loope
dec
push
dec
ret
sub
add
pop
dec
inc
pop
icebp
adcb
cmp
dec
add
or
mov
push
or
sbb
inc
loopne
les
aam
das
pop
xlat
dec
cmp
leave
pop
pop
in
add
adcb
pop
ret
sub
mov
mov
addr16
xor
or
push
loopne
or
push
sub
sbb
test
push
add
xchg
jno
cmp
pusha
mov
push
das
xor
sbb
gs
mov
push
push
cmovo
pop
loopnew
movsl
lock
push
enter
and
and
inc
inc
push
push
dec
insl
pop
sub
addl
or
add
push
inc
loope,pn
dec
xor
push
jmp
lods
sub
and
jno
rcrb
pop
ret
int3
push
sti
pushf
adc
jnp
mov
push
in
shrl
add
jl
imul
push
mov
mov
insl
scas
mov
mov
adcl
xchg
xor
dec
cwtl
sbb
pop
and
call
xchg
sbb
mov
fidivrl
sbb
jbe
mov
mov
loopne
outsb
jbe
int3
aam
push
and
shll
inc
cmp
test
jg
mov
mov
dec
or
in
stc
lock
xor
loopne
push
addr16
xchg
xchg
xor
xor
inc
sbb
gs
cmp
push
aaa
sbbl
imul
les
jo
xchg
add
cs
ss
inc
push
add
sub
movsl
dec
cmp
cmp
mov
and
push
or
push
sbb
jmp
insl
push
mov
adc
adc
add
pop
sbb
jmp
lcall
sub
pop
clc
cmp
movl
fidivrl
inc
and
cmc
push
clc
test
pop
sub
inc
int3
lock
xor
cld
adc
in
fstp
insl
push
inc
in
loop
mov
mov
xor
adc
dec
bound
outsb
fsub
add
insb
jo
sbb
xor
fidivl
cmpsl
xchg
push
xor
add
lock
and
hlt
sbb
data16
int
and
xchg
add
add
fistl
es
loopne
sub
sub
mov
je
test
dec
or
repnz
sbb
mov
add
sub
rclb
aam
lock
dec
push
push
aam
sti
loopne
insb
shl
jmp
cmp
sbb
jne
lcall
jmp
push
scas
ret
js
and
scas
sarl
test
mov
mov
les
les
add
ret
mov
mov
inc
popf
mov
icebp
or
call
pop
outsl
xor
sbb
aad
fcompl
cmp
in
xlat
mov
inc
cltd
mov
pop
mov
pop
data16
cmp
push
outsb
inc
adc
fdivrl
in
xchg
stos
aas
pop
adc
push
push
aad
sahf
push
push
jnp
aas
test
out
adc
out
sbb
cmp
sbb
adc
mov
adc
pop
xchg
cwtl
sbb
scas
leave
scas
mov
mov
sbb
dec
dec
loopne
loopne
or
and
jg
xchg
sbb
cld
aas
cmp
pushw
loopne
push
aad
dec
mov
xor
sbb
jbe
sbb
dec
sarl
in
xor
subl
pushf
pop
sbb
or
popf
or
repz
pop
ja
xchg
cmp
dec
in
pop
es
or
pop
mov
inc
sub
or
sub
out
inc
fwait
lods
lods
xchg
mov
push
scas
inc
jge
and
clc
pusha
pop
mov
je
pop
pop
sbb
cmp
jbe
adc
xchg
fldl
and
rcrl
insb
push
jl
divl
jmp
and
jnp
sti
or
push
and
out
jo
mov
adc
dec
or
mov
sub
or
inc
in
jo
dec
je
movsl
test
and
and
jmp
flds
inc
bound
sub
and
fstps
mov
mov
jecxz
mov
cmp
or
sbb
pop
imul
ljmp
xlat
jl
rol
inc
xchg
stos
pop
cmp
arpl
clc
jge
pop
rcrb
lock
cs
add
xor
push
sbbb
and
aam
sub
xchg
xchg
push
fisubl
add
jns
and
cwtl
cmp
insb
jo
mov
cmp
add
test
sbb
add
clc
inc
add
lock
lock
or
add
arpl
ficoml
push
xor
mov
or
sti
jg
test
pusha
jb
or
dec
popf
js
xor
sub
adc
adc
xchg
ds
xlat
or
or
pop
es
inc
adc
out
loope
subb
insl
ds
test
jne
mov
mov
push
cmp
adc
andb
push
ljmp
insl
daa
icebp
jl
or
and
add
dec
pop
inc
pop
pop
xchg
cmpsl
adc
stos
mov
pop
xorb
push
and
cmp
and
or
hlt
cld
decl
or
and
or
push
loop
lods
inc
fadd
push
cltd
mov
pop
jmp
pop
sub
mov
dec
sbb
imul
shl
fs
push
pop
inc
cmp
bound
cmp
cmpb
jne
push
dec
jne
mov
mov
mov
shll
cmp
jne
xorb
or
adc
fadds
or
or
inc
lea
or
sbb
lahf
add
mov
jmp
in
fldl
fyl2x
fstpl
loopne
rorb
pop
or
loopne
in
jg
mov
xchg
inc
xchg
fmull
leave
ret
adc
or
loopne
iret
mov
fstpl
flds
fabs
insl
mov
jne
jmp
fmull
fcoml
jle
adc
inc
push
adc
xor
adc
sub
je
xorb
pusha
push
and
and
or
xchg
lock
jnp
andb
fcompl
xchg
lea
mov
pop
add
sbb
ficomps
addb
mov
lcall
add
jecxz
stc
push
push
and
mov
mov
add
add
push
loopne
in
sbb
inc
sub
fiaddl
add
cmp
inc
and
or
cmp
out
js
pop
add
cmp
imul
push
inc
xor
sub
shll
and
push
aas
xor
sti
xor
and
inc
dec
sbbl
mov
mov
ja
imul
pop
repnz
inc
inc
xchg
inc
inc
cmpb
andl
in
or
push
pop
mov
push
xchg
inc
push
mov
mov
daa
loope
and
jb
cmp
push
adc
je
out
in
xchg
pop
dec
mov
sub
mov
mov
ss
insb
push
sbb
jecxz
jnp
cwtl
push
add
push
mov
push
jno
push
jmp
pop
xor
xchg
push
pusha
sub
xor
lods
ret
lea
pushf
js
push
add
popf
clc
or
sub
jg
dec
ss
mov
addb
push
jle
mov
adc
lock
add
inc
mov
in
aas
je
and
cmp
jne
ds
enter
shlb
in
mov
or
push
and
pop
out
or
adc
or
add
sub
sbb
or
fst
dec
push
jmp
cmp
daa
test
pop
mov
dec
cmpsb
add
adc
cltd
cmp
mov
fnstcw
addl
sub
mov
sbb
xor
push
sub
mov
sub
mov
adc
sarl
add
sub
and
sub
sbb
or
mov
es
xor
or
bound
mov
or
and
dec
rcrb
mov
dec
das
je
or
sbb
scas
or
je
xchg
icebp
add
ljmp
inc
in
jmp
inc
mov
lret
jns
dec
add
mov
xchg
and
sbb
out
jne
and
or
dec
dec
fimull
adc
mov
into
out
dec
push
stc
push
sub
xor
movsl
sub
inc
aaa
xorb
and
ds
inc
in
testb
adc
pusha
push
inc
adc
lret
mov
in
push
test
daa
and
jmp
and
pusha
pop
pop
jle
int
mov
andb
and
je
ret
adc
pop
jmp
movsb
lcall
or
pop
adc
loopne
add
and
sub
test
inc
add
clc
inc
xor
clc
jne
cmp
jne
mov
sbb
pop
ss
popa
pushf
movsl
sbb
icebp
add
or
icebp
jne
adc
add
push
pop
punpckhwd
insb
or
mov
or
adc
add
fldl
in
jle
or
popa
pop
jnp
push
ret
dec
ret
jg
loopne
mov
inc
pop
mov
je
mov
dec
sub
pop
dec
sub
clc
mov
into
adc
call
out
mov
and
fsubl
adc
pop
or
adc
std
jmp
pop
pop
pop
xor
insl
out
repz
jg
mov
cmp
jne
mov
ret
cmp
or
fstpt
inc
out
pop
out
jne
mov
ret
mov
jbe
cmp
jae
loop
or
aaa
push
stc
call
and
mov
in
jg
test
or
js
xorl
push
dec
adcb
aas
xor
jge
cmp
jle
xchg
repnz
cmp
mov
js
clc
sbb
jecxz
mov
push
mov
mov
jl
jno
mov
adc
dec
jecxz
jbe
mov
pop
pop
sbb
std
imul
push
push
add
addb
fisubrl
add
iret
or
aam
cmp
xchg
fiaddl
nop
mov
insl
pslld
mov
xchg
repz
inc
roll
icebp
jecxz
sti
add
pop
jbe
ljmp
clc
sbb
adc
mov
dec
xor
push
dec
aas
call
mov
pop
sbb
testl
mov
mov
dec
pop
sub
pop
mov
or
jl
mov
mov
inc
and
xor
and
cmp
test
mov
sub
mov
lahf
ret
dec
dec
mov
inc
in
dec
push
in
jbe
push
cmc
lods
pushf
popa
stos
rclb
ljmp
push
sub
les
adc
sub
sti
pop
ret
cli
xchg
add
push
mull
fisubrs
jge
movsb
ret
mov
xor
xor
andl
sub
xor
and
hlt
stos
push
es
ret
push
lcall
faddl
lahf
or
mov
mov
sub
dec
push
pop
or
test
push
mov
imul
out
ss
cmp
push
int3
push
inc
bound
jae
inc
mov
push
sub
add
movsl
sbb
test
lock
mov
sub
scas
rcl
mov
cld
mov
cwtl
ret
inc
ret
lods
adc
rcrb
cli
insb
sub
sub
mov
push
cmp
ds
sub
fimuls
into
pop
rclb
stos
insb
push
lods
pop
sbb
mov
addl
jo
cmp
push
shlb
or
xor
push
mov
mov
movl
xor
dec
movswl
sbb
adc
push
fisttpl
mov
pop
add
add
pop
je
ja
cld
and
and
ret
mov
imul
pusha
leave
inc
insb
pop
sbb
imul
mov
push
fbstp
jnp
cs
push
imul
adc
push
psrld
add
cmp
je
inc
push
adc
es
ret
dec
js
xchg
or
mov
push
sbb
add
lock
pop
cwtl
outsb
xor
push
or
test
mov
xchg
adc
jl
cmp
jg
movsb
cmp
xor
lcall
das
add
and
mov
or
int
pop
sub
dec
cmp
xchg
cmpsb
xorb
in
lcall
in
lods
insl
add
add
outsl
add
mov
fildl
sbb
pop
ret
addb
inc
push
es
aam
jns
and
syscall
or
mov
xlat
ficoms
or
jb
xchg
dec
testb
push
jbe,pn
test
addr16
push
movsb
push
sbb
shlb
outsl
enter
mov
imul
pop
scas
pop
jno
je
jg
negb
or
cmp
mov
or
xchg
jle
fimuls
push
mov
cmp
and
jbe,pt
cmp
jae
or
pushf
call
adc
popa
xor
push
or
fisubrl
insl
mov
push
iret
push
popa
nop
push
popa
adc
dec
xchg
push
xchg
push
add
fiadds
fwait
mov
mov
adc
push
mov
xorb
lods
sbb
push
push
fidivs
add
mov
inc
div
mov
loope
in
outsb
or
ljmp
imul
push
xchg
pmullw
push
xor
push
adc
mov
add
pop
pop
add
pop
cmp
adc
enter
cmp
daa
jp
and
loope
lds
sub
aas
cmc
xor
add
jmp
popa
jge
push
stos
add
pop
xor
lock
sub
and
jne
aas
sbb
je
or
sbb
aam
adc
jne
cmp
jbe
ret
cmp
int
mov
sub
iret
in
cmpsb
ficoml
adc
adc
adc
or
das
xor
daa
pop
sbb
mov
adc
sbb
sub
decl
ds
sub
fwait
inc
mov
xchg
gs
add
pushf
add
dec
sbb
les
dec
shrl
add
lea
fmuls
das
inc
push
cmpsb
sub
adc
mov
rep
stos
lea
mov
lea
pop
inc
enter
enter
aaa
xchg
js
cli
xor
insl
sub
xor
fldt
fidivrs
xor
and
std
jle
test
sbb
out
outsl
adc
movsl
movsb
push
sub
subl
movsw
repz
mov
add
mov
xor
add
sbb
or
test
push
jecxz
pop
or
bound
aas
movsb
dec
sub
fcoms
dec
mov
inc
push
add
movl
decb
push
pop
xlat
push
lock
jne
mov
mov
sub
push
sub
push
push
mov
ljmp
mov
or
jae
or
lret
lock
mov
mov
mov
sub
ja
adc
xchg
pop
pop
sbbl
mov
sbb
mov
mov
repnz
jp
outsb
adc
fdivrl
mov
popa
or
jle
xor
push
mov
ret
adc
sarb
popa
cli
mov
adcb
jle
call
lret
mov
and
insb
adc
jle
aaa
ljmp
adc
mov
lea
cltd
div
inc
cmp
sarl
inc
xorb
outsl
movsl
std
or
jge
mov
push
inc
js
clc
ja
pop
psubb
mov
aaa
fidivl
inc
sub
rolb
dec
jne
mov
sbb
sti
int
inc
jp
int
addl
outsb
jae
fbstp
mov
mov
sub
fmuls
jge
cmp
sub
call
mov
push
xor
inc
cli
out
movsb
pusha
stc
fcmovu
mov
mov
adc
add
out
inc
jg
mov
jmp
lea
aad
xchg
xor
std
shrb
or
ss
mov
enter
push
adc
out
jp
popa
shrb
popf
imul
jecxz
jge
lcall
outsb
ret
cltd
push
loop
pop
mov
inc
add
lea
add
add
popf
add
inc
add
pop
insb
es
push
dec
into
and
sar
mov
add
int3
adc
iret
mov
pop
push
adc
jp
stos
stos
mov
sbb
fwait
int3
call
andb
dec
adc
adc
inc
scas
je
call
push
mov
fwait
dec
xchg
or
or
ret
push
push
shll
rolb
xchg
jle
add
adc
imul
shl
jle
and
lea
or
test
ds
cmp
add
cmp
xlat
mov
outsb
and
int
es
out
in
rcll
in
fdivrs
insb
fwait
push
jmp
jle
loopne
ja
in
ja
push
rolb
and
cltd
fldcw
insl
adc
push
and
inc
inc
and
add
and
outsl
push
sbb
add
test
jmp
push
xor
mov
je
dec
test
xor
call
lods
dec
pop
mov
mov
sbb
adc
out
or
cmp
jb
test
lock
adc
sub
clc
insb
or
jb
jbe
sub
andl
in
mov
clc
adc
sbb
lahf
addl
scas
lret
adc
cmpsl
test
aam
fidivs
sub
cmp
cmp
inc
or
in
dec
enter
xchg
and
adc
xlat
loope
mov
jle
inc
inc
lods
cmp
outsb
inc
sbb
daa
mov
push
mov
cwtl
sub
xor
data16
sahf
xorl
mov
cmp
jns
popa
inc
mov
push
add
jmp
or
sbb
and
in
push
pushf
xor
loopne
xchg
lock
in
sar
cmp
fwait
add
pop
icebp
sub
dec
and
scas
sbb
mov
mov
or
add
cmc
cmpsl
fwait
mov
nop
push
push
dec
pop
cmpsb
cmp
xlat
add
ljmp
mov
das
adc
add
push
dec
cmp
pusha
pushf
mov
cltd
mov
sub
push
popa
test
arpl
cs
xor
rclb
punpckhbw
cmp
add
push
pop
pop
lea
lret
in
das
jns
push
adc
cmp
arpl
add
aaa
pop
mov
xor
rolb
and
or
pop
fcomps
pushl
add
or
push
xor
or
xchg
pop
mov
outsl
xchg
xor
ret
add
je
fldenv
cltd
mov
and
xchg
rorl
jae
in
mov
dec
inc
sbb
mov
jns
addb
pop
pop
xchg
aas
mov
test
sub
arpl
mov
mov
addr16
stc
dec
sbb
jle
inc
xchg
dec
jne
sub
xor
xchg
pop
jb
mov
xor
add
mov
push
fdivrs
jg
jle
add
movsb
aaa
icebp
xchg
jnp
sub
cmp
sub
sbb
or
and
and
sbb
enter
dec
dec
test
dec
inc
adc
inc
push
cltd
inc
or
rolb
or
loop
fwait
int3
adc
rol
dec
cmc
cmp
inc
xor
addr16
mov
enter
add
jge
fmull
xchg
out
cmp
shrb
add
mov
dec
sbb
sub
mov
cmp
rcr
mov
mov
pop
adc
or
add
pop
loopne
outsl
sbb
jge
xor
arpl
xchg
cmpsl
sbb
mov
inc
sahf
outsl
pop
arpl
inc
mov
mov
popl
xor
adc
iret
inc
inc
ffree
out
dec
stc
push
adc
mov
loopne
and
mov
je
adc
push
push
sub
xor
jae
dec
xchg
add
cmc
and
adc
mov
add
push
dec
push
mov
into
inc
sbb
mov
push
add
lods
sbb
arpl
ret
xor
lahf
push
mov
in
idivb
jnp
push
adc
mov
mov
push
inc
jecxz
and
adc
cmpsl
xchg
pop
pusha
add
pop
sbb
xchg
pusha
push
pop
or
dec
cmpl
mulb
loope
dec
inc
std
or
jmp
jge
testb
or
fadds
scas
xor
ds
jle
push
ret
mov
hlt
cmp
or
xchg
push
sahf
push
insl
jne
inc
aam
cmp
adc
insb
or
mov
fsubs
roll
jle,pn
shlb
cmp
sub
xchg
sbb
push
add
mov
inc
adc
jae
xor
icebp
fs
rcrb
add
push
xor
or
lock
sub
push
into
adcl
or
pop
fcmovnbe
ret
and
imul
and
xor
gs
sbb
pushf
ds
xchg
sbb
cmp
dec
mov
cmp
jns
pushf
adc
daa
mov
int3
sub
inc
sbb
mov
cmp
add
das
xor
add
jnp
and
loopne
and
imul
pop
fs
xchg
jno
add
add
cmpsb
jne
enter
xor
in
test
cmp
pop
inc
xchg
sub
or
insb
lods
lods
jmp
jnp
clc
push
add
cmp
mov
add
ljmp
lcall
jle
sarb
xor
adc
mov
fimuls
mov
and
cmp
and
mov
pop
xchg
jb
add
pushf
adc
rol
pop
daa
mov
enter
dec
mov
adc
push
rorb
fmull
adc
repnz
cmpl
adc
dec
sbb
jne
pop
dec
rclb
or
inc
xor
jmp
pop
rcrb
sbb
adc
gs
adc
bound
or
adc
inc
mov
movnti
mov
jge
mov
aad
dec
sbb
in
sub
mov
movsl
inc
push
adc
jne
imul
push
sub
nop
es
les
repnz
xchg
push
in
jne
cmp
ret
pop
test
scas
jae
ret
rorb
popf
sarb
cmp
add
push
call
xchg
lea
testb
ds
dec
mov
or
add
jecxz
jne
loopne
push
xor
push
mov
inc
bound
int3
ret
add
xorl
adc
loopne
inc
movsl
mov
inc
lcall
push
cmp
test
call
adc
popf
jb
mov
inc
inc
test
mov
inc
mov
loope
lods
push
pop
sub
and
mov
aam
pushf
les
loope
mov
pop
subl
adc
pusha
mov
test
jno
mov
push
testb
dec
push
push
mov
nop
sub
imul
add
fs
sub
cmp
adc
shl
xor
add
sbb
pushf
xchg
lea
cld
lds
mov
inc
test
pop
and
xor
push
dec
ja
inc
cmc
shll
sbb
jp
enter
mov
int
mov
or
je
aam
push
push
ja
clc
xor
out
push
push
push
mov
sbb
add
adc
mov
pop
aam
rcll
lcall
fmull
sub
push
cmpb
push
push
and
dec
in
ret
jle
sbb
push
or
mov
lea
add
push
dec
dec
addb
mov
pop
pop
sub
out
add
lods
inc
fld1
sbb
or
dec
mov
or
pushf
fdiv
loopne
cmc
sbb
rcrb
dec
sub
pop
mov
outsb
mov
mov
sub
daa
mov
mov
dec
pusha
test
cli
push
test
push
adcb
lods
jae
into
xor
add
subl
add
shrb
adc
fmull
jo
loop
ljmp
lret
cmp
fwait
jl
xchg
je
faddl
sarl
xor
mov
fnstcw
adc
cs
jecxz
push
push
mov
imul
pmulhuw
cmp
mov
mov
pop
and
sbb
outsl
sbb
xchg
clc
inc
es
mov
jl
repnz
pop
orl
orl
cmc
inc
mov
or
xchg
add
mov
rcll
xor
nop
mov
xor
mov
test
jmp
je
lods
clc
inc
les
je
add
add
bsf
sti
push
cmp
movsl
inc
xchg
fnstcw
push
jle
roll
nop
mov
shrl
pushf
clc
mov
add
inc
add
inc
mov
sbb
sub
mov
sub
sbb
aaa
push
sarb
test
push
notb
cmpsb
cmp
inc
ljmp
push
sbb
adc
jne
cltd
sub
aam
sti
js
cmp
sbb
cwtl
xchg
adc
add
add
adc
and
imul
or
imul
sahf
mov
sbb
jbe
add
and
cmpb
jo
pop
stos
inc
stos
and
pop
jp
add
pop
in
pop
loope
nop
adc
add
decl
push
lea
push
popa
loopne
dec
addb
fs
into
push
lcall
add
into
jnp
aam
push
jp
and
sub
mov
sbb
fadd
pop
call
jb
push
ja
push
mov
mov
sbb
icebp
shrb
mov
dec
add
dec
or
add
pop
ret
push
loope
inc
cmp
and
xchg
jecxz
or
add
fs
fnsave
sbb
cmp
fcoms
ficompl
mov
xchg
ret
sbb
mov
sarl
mov
movsl
jmp
adc
xchg
sub
cmpsl
or
jmp
rorl
sbb
adc
cmpsb
add
and
fcomp
add
mov
imul
cmp
clc
xchg
shl
add
push
mov
fcoml
inc
jge
test
loopne
call
pusha
xorl
imul
mov
or
sbb
js
jae
add
shll
or
testb
lock
imul
push
ret
pop
lret
ja
mov
push
jge
jg
sbb
pop
popf
mov
push
dec
sub
es
inc
out
ds
out
push
out
jnp
sahf
rolb
sub
fldl
add
xlat
fistpll
ret
inc
dec
aam
cmp
insl
xor
cmp
aas
and
aas
js
push
pop
inc
flds
testb
inc
mov
sbb
in
inc
pop
inc
mov
add
fiaddl
dec
cwtl
mov
nop
pop
lret
scas
xchg
ffreep
push
sbb
pop
mov
sub
or
push
pop
mov
hlt
sub
sub
pusha
push
mov
dec
loopne
nop
inc
bound
mov
adc
lcall
ljmp
mov
add
dec
dec
aas
mov
movsl
cmp
inc
popa
push
xor
xchg
addr16
pusha
ret
pusha
je
push
pop
pop
push
andl
push
push
scas
hlt
movsl
loope
or
xchg
inc
dec
pop
sti
adc
add
xor
mov
dec
add
cmp
mov
dec
enter
cs
push
fisubrl
popa
loopne
pop
movl
or
or
inc
jl
clc
push
inc
dec
lahf
js
sbb
add
jg
daa
cmc
popa
add
fstpl
cld
pop
jl
add
insl
inc
and
push
mov
test
push
and
pushl
lods
leave
mov
outsb
je
pop
dec
mov
inc
test
jle
mov
push
lods
mov
mov
dec
mov
add
aaa
xchg
sub
lods
or
sub
mov
repnz
rcrb
inc
cmc
mov
mov
xor
cmp
daa
push
lret
or
sbb
cmp
cmpl
cld
adc
std
dec
enter
ret
sahf
ljmp
cmp
or
subl
dec
test
test
cmp
sbb
stos
daa
mov
out
imul
sbb
xor
fnstcw
ret
lods
mov
push
inc
or
jl
push
dec
out
mov
call
push
inc
fsubrs
push
adc
mov
adc
insl
or
stos
ret
aaa
dec
pusha
loopne
je,pt
lret
mov
inc
faddl
mov
add
jg
fisubs
fs
lea
adc
fisubs
loopne
repz
adc
pusha
xorl
lods
push
jg
adc
lods
loopne
mov
mov
in
inc
ret
xor
push
pop
mov
movsl
xchg
scas
shrl
cmp
adc
mov
add
dec
sbb
out
jle
or
shrb
and
push
jb
insb
test
mov
popf
pop
dec
sub
or
popf
je
push
arpl
lods
push
pop
or
xor
sub
jne
push
aas
enter
sbb
or
add
test
and
push
dec
jl
sbb
js
lret
lods
jne
popf
sub
push
jp
nopl
mov
and
in
dec
jecxz
popl
or
add
outsb
shrb
jnp
iret
cmp
add
rol
xchg
hlt
std
pusha
mov
jl
mov
xlat
xchg
dec
mov
add
inc
pop
pand
sbb
adc
ss
fcomps
push
xchg
push
mov
jl
loopw
imul
xchg
or
shrb
jbe
icebp
or
out
or
imul
or
add
adc
or
dec
les
push
add
in
sbb
arpl
loope
and
das
mov
sbb
fwait
adc
jno
mov
push
sub
sub
mov
cwtl
movsb
loopne
dec
mov
bound
ja
sub
clc
xor
adc
xor
pop
rcrb
xor
mov
or
push
dec
inc
push
xor
push
faddl
jecxz
and
movl
adc
cmpsl
and
adc
sub
or
mov
mov
fstl
add
inc
dec
xor
adc
jne
cwtl
or
push
inc
add
xchg
mov
adc
push
sarb
mov
iret
jmp
xchg
pop
or
and
mov
xor
sub
pop
push
pop
push
arpl
jns
add
in
mull
dec
push
xchg
add
cmc
repnz
xor
or
xor
pop
sub
push
mov
sti
xor
adc
jnp
push
xor
push
push
push
fwait
and
sbb
add
icebp
xlat
push
dec
push
lret
xchg
push
jo
add
mov
test
inc
scas
stos
aad
rolb
adc
and
pop
pop
dec
mov
shll
lea
push
add
mov
fisttpll
dec
add
or
xchg
jge
test
jo
jb
aas
pushf
lea
pop
decl
jmp
dec
or
mov
mov
add
adcl
test
mov
pop
les
jmp
inc
sti
dec
insb
and
cmp
jne
in
cld
mov
das
fstl
inc
jp
adc
ljmp
dec
cld
inc
adc
and
outsb
push
movsb
ss
ret
daa
add
movsb
imul
scas
add
or
rorb
je
add
sbb
pusha
xchg
cmp
scas
xchg
mov
and
mov
xchg
xchg
mov
jl
mov
repz
out
xchg
insb
pop
push
in
and
rcrb
jne
and
ss
or
mov
nop
ret
jo
mov
fistl
and
fstps
jne
or
cmpb
and
loopne
xchg
adc
mov
push
jmp
out
sarb
inc
push
cmpsl
dec
mov
lret
pop
pop
out
or
flds
popf
es
lock
mov
les
sbb
adc
jg
cmp
or
or
pop
popf
sub
mov
or
fimuls
xor
or
clc
push
cmp
add
mov
add
xchg
pop
push
lock
cs
or
push
lods
adc
sti
adc
jg
sbb
mov
loop
cmp
xchg
cmp
lcall
sahf
bound
sbb
popf
outsb
xchg
and
inc
cmp
rolb
pop
cmc
aam
loopne
ret
sub
cmpsb
jno
shlb
xchg
loop
ret
adc
stos
cmp
mov
test
loopne
shlb
mov
ret
push
int
push
movsl
dec
push
mov
push
push
push
repz
cli
push
sub
dec
dec
lcall
out
add
inc
pop
ret
adc
decb
movsl
adc
in
inc
dec
lea
push
add
mov
add
mov
stos
outsl
in
jg
or
mov
inc
push
dec
mov
cmpw
inc
add
jne
dec
cmp
push
jp
xchg
xor
daa
imul
push
aam
sbb
dec
cli
mov
sub
jg
or
jecxz
jae
sbb
in
dec
loopne
lea
dec
mov
rolb
or
or
push
mov
mov
sbb
add
je
pop
pop
je
rclb
or
inc
push
push
test
cwtl
std
mov
sbb
test
jae
fwait
mov
cmpsl
loopne,pt
adc
push
mov
fsubs
mov
ficomps
pop
leave
adc
adc
inc
mov
or
adc
shlb
push
or
mov
mov
cwtl
clc
pushf
push
mov
aas
dec
sti
dec
xchg
mov
cmp
jle
cmp
add
inc
mov
mov
inc
and
pop
incl
nop
xlat
jmp
xchg
cmp
pop
and
and
out
push
pop
cmp
mov
je
and
pusha
push
pushf
adc
add
or
xchg
popa
cs
ljmp
je
out
cs
sub
mov
push
dec
adc
xorb
or
data16
xchg
inc
sahf
adc
in
dec
push
into
insl
insb
arpl
mov
push
sbb
mov
leave
lea
adc
push
inc
mov
insl
add
add
adc
pop
pop
movsl
pop
mov
jg
daa
lock
xor
sbb
ret
adc
call
mulb
cmp
je
push
lcall
in
out
addb
and
lret
and
loope
or
pop
pop
ret
sbb
call
jne
xchg
fisttpl
fcoms
out
or
fidivl
test
or
cld
test
out
xor
sbb
fucom
add
je
test
sbb
and
and
insb
in
push
outsl
sub
xchg
mov
sti
sti
aad
into
mov
clc
je
mov
push
jbe
dec
cmp
dec
into
cs
aam
vmwrite
les
pop
clc
aas
inc
std
lret
sbb
or
cwtl
cmovs
lcall
push
test
dec
adc
dec
rclb
push
pop
push
push
push
jmp
mov
sub
stos
add
sbb
cmp
insb
xchg
fldz
je
sub
stos
lock
mov
flds
push
fnstcw
inc
test
or
add
adcl
pop
jecxz
pop
jp
push
in
pop
pop
insb
xor
adc
cmp
or
jae
adc
incb
sbb
stos
movsl
pop
rcrb
cmpl
or
jp
add
loope
test
pop
mov
icebp
pop
push
sbb
inc
sub
push
ja
test
jbe
push
sbb
insb
jmp
iret
pop
pusha
fs
shrb
invd
test
push
shl
pop
push
sbb
push
push
fdivl
or
loopne
adc
push
push
push
pusha
dec
cmc
push
out
add
mov
jmp
adc
ret
rol
or
loop
push
dec
stos
push
pop
lahf
loopne
adc
insb
lods
fs
push
xor
lods
or
adc
xor
xor
inc
cmp
and
out
add
mov
jl
incb
clc
aas
subb
cmp
shr
shl
subb
add
or
lea
jne
fisubs
shlb
xor
cmp
mov
cmp
or
nop
push
dec
fmul
sti
push
addb
or
movsb
mov
xchg
cmp
dec
pop
std
pop
or
pop
sbb
out
or
push
fwait
jnp
push
jnp
push
xor
pop
adc
xchg
dec
call
pop
jo
faddl
loope
adc
dec
push
shl
dec
jle
mov
push
fadds
inc
or
push
inc
fisubl
or
push
loopne
mov
call
push
mov
gs
mov
cvtps2pi
pop
loope
push
mov
ret
mov
ficompl
xor
pop
push
jne
jg
adc
jl
or
rclb
fs
mov
adc
aad
aaa
jo
sub
out
mov
cmp
out
mov
sar
jmp
adc
neg
cmp
jge
mov
cmp
fsubs
decb
jmp
jge
neg
cmp
outsl
jp
wrmsr
dec
in
nop
fsubr
jle
add
cmp
dec
lret
and
and
add
mov
cmpb
rolb
jne
mov
test
adcl
add
xor
pop
jmp
adc
xor
fs
mov
dec
dec
jno
shlb
aad
jo
rcll
cmp
jne
push
and
push
pop
push
add
xchg
inc
bound
lock
dec
add
loopne
sbb
out
inc
adc
cmp
push
mov
xchg
data16
insb
dec
scas
inc
dec
jge
ljmp
iret
push
inc
adc
sbb
push
add
and
adc
mov
jge
sbb
add
add
jno
mov
ds
callw
adc
call
push
push
lods
cltd
fcoml
sbb
xchg
or
pusha
mov
or
dec
jecxz
push
pushf
jo
pusha
cltd
jno
adc
xchg
or
and
bswap
push
push
js
xchg
push
js
jg
into
rcrl
fildl
push
xchg
add
adc
repnz
adc
xchg
iret
int
inc
je
orl
pop
push
ret
dec
jae
adc
shlb
pop
mov
and
xchg
insb
cli
cmp
sub
push
xchg
and
test
clc
cmc
push
xchg
inc
jg
stc
mov
xchg
push
xor
adc
leave
fdiv
mov
push
mov
sbb
add
dec
sub
jmp
xchg
mov
test
sub
insb
addr16
je
jp
xchg
dec
pop
dec
push
and
dec
stos
and
push
pop
push
sbb
mov
xor
lods
inc
inc
pusha
pop
sbb
dec
dec
push
push
rol
ret
fsts
orb
sbb
dec
sub
push
adc
stc
movsb
addr16
repz
or
fistl
jle
push
push
jb
and
lods
int
and
inc
cmp
out
cmp
adc
or
aaa
and
data16
jne
jecxz
or
pop
pop
pop
leave
insl
pop
cltd
dec
int3
arpl
push
or
insb
in
push
xchg
and
adc
jp
out
sub
dec
adc
and
fisubs
push
adc
adc
add
out
add
inc
insb
adc
pop
nop
xor
dec
sub
mov
mov
je
sub
jo
push
dec
cmp
int
add
cmp
das
jnp
lds
insb
into
dec
add
mov
cmp
mov
scas
imul
pop
xchg
or
inc
int3
xchg
iret
pop
ds
pop
add
in
and
mov
js
int
int
or
insb
js
inc
loop
outsb
push
jbe
mov
mov
inc
pop
cwtl
inc
std
rcrb
in
add
data16
rolb
dec
clc
inc
je
mov
ss
dec
loop
dec
shrl
sub
dec
scas
movsl
lds
sub
push
adc
mov
daa
xchg
push
je
mov
bound
sub
fs
inc
mov
mov
mov
or
pushf
into
lock
cmp
popf
neg
xchg
movsb
adc
xchg
and
loop
push
adc
pop
icebp
test
negb
mov
push
and
scas
js
test
and
xchg
pusha
pop
dec
or
out
loope
jo
and
xchg
mov
lahf
push
nop
ret
int3
mov
jecxz
sub
aas
pop
or
in
inc
outsb
lock
cld
ret
jl
mov
cmpl
sbb
gs
clc
sub
cmpb
push
push
outsb
dec
jno
cmpl
jge
inc
ja
popf
mov
or
cmp
jle
mov
cmp
push
decl
add
mov
push
push
add
jmp
lret
loopne
jmp
jle
rorb
sarb
out
sahf
rol
int
push
lea
push
lea
xor
scas
ljmp
sbb
je
mov
mov
jl
ds
cmp
mov
cmp
jne
push
add
sbb
adcb
insb
xor
cmp
stos
dec
pop
jp
lods
jge
nop
orl
pushf
popf
adc
and
cs
sbb
inc
xchg
pop
ss
pop
and
jge
xlat
push
pusha
ret
mov
push
and
xchg
ja
aam
add
sahf
xor
push
dec
mov
call
aam
dec
push
cmp
mov
mov
mov
push
sbb
lea
popf
dec
flds
fmuls
or
sub
xchg
test
add
shr
cs
or
mov
das
aaa
test
stos
inc
subl
shlb
adc
cmp
test
mov
pop
aas
mov
fcoms
or
add
push
add
mov
adc
pop
push
jo
inc
add
ljmp
sahf
ret
or
shll
imul
mov
sub
dec
jne
and
xlat
and
mov
jo
scas
push
push
arpl
cmp
lock
dec
and
and
xchg
out
inc
out
add
in
jmp
sti
shl
sbb
cmp
fistl
mov
inc
loope
shr
ja
inc
loope
pushf
mov
xchg
jo
mov
notb
lcall
clc
loope
adc
mov
inc
enter
mov
jle
add
pop
pushf
addb
push
dec
push
lea
addb
mov
inc
lds
xchg
sar
jl
leave
jl
push
sbbb
add
inc
dec
stc
loopne
sub
lahf
pop
inc
adc
mov
sahf
adc
rep
test
lret
jge
sub
push
adc
fwait
add
xor
sbb
dec
mov
cs
aam
xcrypt-cfb
cmpsl
popa
xor
dec
or
sbb
repnz
sub
fmull
jne
decl
test
inc
lret
and
and
adc
cmp
clc
in
cli
scas
popa
ja
out
lret
div
fnstcw
inc
xchg
inc
push
out
cmp
fists
cltd
mov
stc
cmp
addb
push
test
cmp
add
jl
test
or
pushf
pop
mov
jecxz
mov
stos
xchg
cltd
xchg
faddp
imul
dec
push
stc
pop
movl
jnp
loop
xchg
add
lcall
push
push
fwait
dec
xor
dec
scas
push
scas
push
aam
push
xchg
imul
into
push
leave
mov
lea
inc
cmp
call
incb
sahf
lret
iret
pop
inc
and
les
dec
cmp
insb
inc
out
fnstsw
addr16
cld
test
rcrb
add
mov
addl
and
popa
mov
pop
mov
adc
add
mov
jmp
movsl
cmp
fcmovbe
pop
add
sub
or
fmuls
aad
and
daa
adc
hlt
and
or
push
out
adc
das
sub
adc
and
stc
inc
jo
xorl
pop
inc
enter
mov
data16
pusha
loope
outsb
pop
outsl
and
lock
jb
and
leave
and
ret
sub
js
loopne
and
fsubrs
leave
and
sub
sarl
pop
add
movsb
cmp
push
rcll
sbb
sbb
test
fwait
mov
test
mov
jle
pushf
xchg
dec
jbe
mov
lret
mov
and
and
push
sbb
push
push
jbe
xchg
ds
jl
sub
xchg
pop
dec
push
add
mov
dec
rcr
rclb
jne
sub
adc
stos
test
dec
jno
ja
pushf
pop
add
cmp
add
adc
adc
pop
inc
mov
das
lods
lahf
jge
xchg
cli
leave
push
mov
sbb
push
inc
in
push
cmp
add
lret
jp
pop
and
cmc
xchg
push
cmp
mov
add
sbbb
push
pop
cmpsb
loopne
loope
adc
adc
pop
and
sub
filds
push
addb
add
popl
adc
sub
mov
call
insb
sub
mov
jle
loopne
adc
jle
clc
dec
sub
xchg
sbb
rcl
dec
arpl
out
mov
cwtl
jge
fdivp
cltd
dec
or
enter
mov
xchg
sahf
push
push
rcr
insb
je
movb
je
pop
ret
es
xor
jg
shr
aam
jp
and
add
jecxz
adc
dec
js
stc
xor
push
jno
jle
lea
push
push
push
cmp
inc
pop
ret
add
daa
xor
pop
sub
adc
mov
push
push
jns
add
cmp
bound
cs
or
pop
pusha
pusha
mov
sbb
sbb
jle
adc
out
sbb
shlb
pop
pusha
cs
fbstp
jl
es
push
enter
aaa
js
js,pt
push
sub
shrb
or
xor
mov
and
enter
dec
push
lret
pop
fdivrs
pop
jl
xor
ret
push
mov
popa
mov
daa
add
cmp
lds
dec
movsl
mov
sbb
add
xchg
enter
ret
adc
pop
aam
mov
xchg
std
add
mov
stc
sub
iret
adc
inc
add
mov
push
xor
push
shrl
shl
adc
inc
push
adc
orb
gs
cmp
inc
add
dec
jns
and
lea
inc
cli
out
sbb
enter
mov
adc
mov
mov
inc
push
adc
ret
into
scas
and
aam
pop
push
xchg
sbb
clc
mov
popf
jne
xor
and
cmp
iret
cmp
pop
or
inc
cmp
pop
mov
add
inc
ljmp
mov
mov
into
push
rorl
shr
divl
loopne
fwait
and
sub
btc
push
mov
add
dec
pop
imul
adc
rcll
jmp
xchg
push
cmp
cli
jo
movsl
movsb
je
dec
sub
xchg
and
js
add
inc
aad
std
cltd
inc
imul
pop
adc
push
add
dec
pop
inc
jl
adc
ret
xor
and
test
lea
sub
or
inc
mov
jl
lea
inc
jb
pushf
xor
dec
jne
jmp
aaa
and
call
mov
xchg
scas
lea
insl
xchg
cmp
xor
jg
mov
adc
cltd
dec
ja
mov
pop
sar
fwait
leave
push
push
scas
repz
js
iret
cmp
jbe
add
clc
push
jbe
push
dec
push
push
xor
insb
adc
mov
inc
imul
inc
lcall
push
push
addr16
popl
lahf
xchg
mov
adc
imul
icebp
inc
cmp
pop
aam
je
dec
test
cmpsl
neg
and
pusha
cld
or
sbb
pop
inc
stos
add
add
or
jo
add
and
scas
or
xor
popa
adcl
rcpps
push
push
push
and
pusha
cwtl
js
dec
add
add
mov
std
cmp
les
xor
mov
jo
push
mov
mull
adc
lcall
inc
inc
jno
mov
rol
and
sahf
mov
jmp
xor
ds
negl
in
mov
or
adc
mov
push
push
push
enter
out
push
cmp
and
inc
cmpl
shll
push
jo
inc
mov
popl
lahf
rcr
mov
call
add
push
rorb
call
add
outsb
loopne
inc
add
push
push
or
std
add
adc
inc
test
fmul
cmp
or
and
cmp
enter
cli
mov
xorl
jmp
jle
ret
lds
fmull
inc
mov
mov
mov
xchg
inc
inc
outsb
mov
sbb
aam
xor
popa
test
push
jne
imul
out
push
or
mov
or
test
xlat
xchg
movsl
cmp
xchg
cmc
jne
ret
fldl
add
call
or
mov
pop
and
data16
idivl
scas
ret
rep
mov
cs
je
nop
or
push
xor
mov
dec
pop
cmc
stc
outsb
sti
fiadds
inc
cs
gs
cmp
jmp
jb
lods
inc
push
or
pop
mov
cmp
or
sarb
je
cli
jge
jbe
pop
mov
decl
jmp
shl
out
fs
push
xchg
mov
push
cmp
inc
and
lcall
or
xchg
cmpb
repnz
dec
jg
sbb
cli
out
ror
mov
xchg
xchg
pusha
sbb
sbb
jg
add
je
push
xor
pop
add
cs
cmp
or
inc
aaa
pushf
js
jg
mov
xor
jae
add
ja
aaa
jns
push
adc
into
rcrb
cmp
std
xchg
test
dec
movsb
pop
push
addr16
daa
jbe
pop
scas
lods
adc
or
arpl
insb
mov
cmp
push
ret
jbe
push
jecxz
push
cwtl
or
jbe
jo
inc
inc
jge
js
fdivl
jmp
out
dec
push
jmp
popa
fcomps
jmp
dec
mov
movsb
jno
cmp
orb
mov
and
mov
adc
push
push
sub
cltd
test
cmpsl
sbb
xor
push
sub
lds
push
pop
add
fucomp
and
call
mov
shll
or
xor
push
pop
call
push
push
add
push
and
or
shlb
add
jb
fs
outsb
movsb
mov
out
xchg
add
xchg
es
cmp
pop
ret
xchg
lret
clc
push
popa
movlps
mov
xchg
es
push
push
mov
orl
les
addb
push
or
movsl
out
sbb
jne
aam
pusha
adc
jo
inc
shl
rcrb
xlat
stos
jno
add
push
adc
adc
ffree
xor
push
and
data16
int
setne
and
sub
add
js
push
add
add
popa
pop
arpl
xorl
arpl
out
pop
xchg
bound
push
outsl
pop
jl
dec
addr16
sbb
dec
push
cmp
jb
jecxz
aam
mov
cmp
sub
sub
repnz
es
cmp
inc
mov
push
lock
dec
adc
add
sub
pop
test
pop
mov
in
and
daa
cmp
das
fwait
xor
xor
inc
test
mov
inc
popf
cld
inc
clc
add
jns
loop
into
shl
ret
add
imul
dec
ret
insb
and
mov
xchg
mov
mov
lea
mov
cmp
sub
ljmp
xchg
pop
adc
dec
arpl
add
cli
add
mov
mov
movsl
inc
pop
sub
mov
dec
add
shll
nop
inc
add
push
adc
xor
sbb
lods
inc
sahf
and
inc
jbe
sub
and
push
test
fsubr
push
ret
dec
pop
lods
data16
and
call
jno
xchg
mov
inc
pop
lods
adc
mov
or
je
or
mov
push
je
xchg
push
sbb
or
hlt
add
xor
or
call
mov
xchg
movb
xchg
pop
push
jge
jo
insl
shrl
inc
jl,pn
push
pop
jae
pop
add
jae
add
jae
dec
dec
or
hlt
jb
jae
dec
ret
and
cmp
popa
or
int3
jno
movsb
hlt
pop
sbb
pop
and
dec
cmp
push
fwait
sub
aas
push
je
mov
cmp
sahf
cmp
push
push
dec
cmc
adc
inc
jecxz
cmp
add
xor
mov
jo
jp
fadds
mov
daa
add
push
jl
popf
out
mov
mov
add
push
cmpsl
sti
push
xchg
jl
inc
cli
mov
popa
adc
pop
stos
add
and
adc
add
pop
inc
add
adc
or
sbb
shrb
fisttpl
push
pop
sub
and
jnp
xorb
scas
or
shrl
jp
mov
and
lret
jp
shll
popa
inc
xor
icebp
jl
movsb
sbb
dec
inc
inc
add
xlat
pop
cmp
jne
insl
inc
mov
jle
push
xor
cmp
les
add
add
test
pop
loop
push
insb
push
push
xor
negl
ret
bound
mov
lods
outsb
sbb
je
and
sub
xor
and
mov
or
cmp
ljmp
adc
les
xor
es
fstpt
and
lcall
sub
cmc
jp
cmp
push
int3
and
addl
ffree
nopl
push
test
in
lods
push
sbb
adc
jb
dec
adc
cs
and
push
pop
add
adc
dec
sub
pop
mov
ja
js
add
adc
inc
pushf
push
call
add
inc
add
mov
and
adc
dec
arpl
jmp
ret
inc
imul
and
push
adc
shl
pop
push
sbb
in
dec
push
adc
imulb
mov
add
or
adc
nop
jne
adc
ret
inc
addb
push
mov
pop
sub
pop
inc
adc
push
adcb
sub
pop
xchg
inc
test
repnz
sub
lcall
inc
test
fcomps
and
scas
pop
push
out
imul
adc
mov
aas
cmpsb
test
cmp
sub
imul
mov
test
mov
cmpl
push
leave
je
mov
mov
adc
mov
xor
add
cltd
loop
orb
outsb
adc
jmp
adc
jmp
dec
lock
aas
cmp
rolb
sbb
xor
aad
and
lahf
or
rorb
cs
fildll
lahf
mov
cmp
jne
nop
dec
jne
mov
or
dec
sahf
fadds
mov
lea
cmpsl
dec
xor
pop
add
outsb
shrb
dec
add
inc
add
push
rol
lods
xor
jge,pn
fcomps
or
inc
jne
add
jne
mov
cmp
stc
aaa
xchg
cmp
add
in
add
add
bound
aas
xchg
mov
add
push
inc
dec
xchg
xlat
or
cmp
aad
push
ds
mov
or
jne
movsb
mov
xchg
mov
push
sti
mov
cli
dec
loope
xor
lea
test
test
icebp
stos
mov
aaa
je
sbb
in
inc
xchg
pusha
add
pop
cmc
xor
movsl
push
sub
sbb
mov
fisttpl
sub
aam
xor
and
inc
movsl
pop
or
lahf
test
out
jecxz
xchg
lock
mov
data16
test
mov
xchg
xchg
dec
sub
ds
xchg
loope
fdivl
sarb
push
mov
out
imulb
faddl
mov
dec
xor
jge
jge
ret
and
loope
push
push
push
inc
imul
sub
out
cltd
out
loopne
push
pop
loop
add
decl
jge
adc
cmpl
xlat
add
lcall
or
inc
inc
sub
xchg
shlb
and
inc
or
test
jnp
and
sbb
push
stos
les
adc
pop
inc
cmp
ret
cmp
fcoml
je
push
cmp
mov
mov
sbb
or
push
movsb
sbb
mov
push
and
popa
mov
dec
jge
rcl
clc
or
stos
cmp
mov
pop
test
or
iret
insl
pusha
pop
cli
jg
adc
mov
cmp
arpl
bound
jecxz
dec
jnp
lods
add
cmc
jmp
adc
shlb
lock
sub
push
js
add
lods
aaa
scas
fdivrs
mov
push
pusha
adc
mov
jg
mov
movsl
push
lcall
jne
movsl
enter
adc
lret
mov
push
pop
pop
or
ds
mov
jne
aad
jnp
icebp
mov
xor
push
push
data16
sbb
inc
or
test
in
push
in
gs
mov
sbb
add
jge
xchg
sub
sahf
pushf
mov
jmp
shlb
test
jg
cmc
xlat
icebp
pop
mov
je
jecxz
je
mov
imul
add
adc
subl
aam
push
fadds
addr16
imul
xchg
mov
push
add
dec
push
add
sbb
js
imull
pop
jmp
test
cmp
scas
mov
sbb
lock
in
jno
cmpsl
mov
inc
pop
aas
aam
sbb
push
insb
add
pop
xor
pop
dec
aas
mov
jne
ffree
push
rorb
jne
inc
imul
mov
pop
sarb
and
cmp
cmp
nop
js
adc
push
add
addb
xchg
mov
or
add
sti
rolb
dec
sub
dec
popf
mov
mov
movsb
aad
dec
jl
push
outsl
popa
rol
adc
ret
mov
fists
dec
mov
jmp
cs
sbb
xchg
mov
add
mov
bound
add
sbb
jo
cmp
push
ja
lahf
sahf
jg
mov
loopne
roll
pop
adc
std
cmp
jg
mov
andl
imul
mov
repnz
add
jle
mov
sub
and
push
sbb
pusha
loop
in
fmuls
and
lock
loope
ret
loopne
scas
jnp
cmp
sbb
fisttpll
loopne
movsb
push
mov
push
dec
or
or
jge
pop
add
jbe
push
push
fadd
test
movsb
roll
pop
repnz
xchg
test
movsl
je
test
pop
xchg
push
xor
cwtl
int3
pop
push
push
cwtl
xor
pop
jmp
xchg
out
dec
push
inc
outsl
or
mov
int3
fidivl
orl
mov
pop
xor
and
cmp
sbb
xlat
cmp
mov
cmc
add
mov
mov
sub
sub
xlat
cwtl
inc
sub
xchg
push
jnp
fstpl
and
push
fimuls
gs
cs
push
sub
push
push
adc
inc
sub
push
pop
inc
in
add
mov
push
sub
sbb
in
adc
enter
rclb
nop
inc
fucomip
rol
inc
loope
outsb
icebp
dec
outsb
or
cld
mov
test
push
push
data16
stos
js
outsb
add
pop
sub
or
push
xor
jo
dec
or
nop
mov
adc
and
cmp
adc
add
frstor
sub
cmp
cmp
push
icebp
imul
mov
or
nop
mov
add
adc
cmpb
jae
leave
shll
imul
cmpsl
jb
or
adc
sbb
jmp
enter
sbbl
sub
add
jmp
shrb
lods
add
outsb
cli
push
out
mov
add
rcll
dec
mov
push
adc
jmp
push
je
add
inc
cmc
cmp
pop
pop
nop
inc
inc
ds
iret
xchg
mov
sbb
aas
test
sbb
add
lds
loope,pt
adc
pop
mov
push
lret
outsl
rcrb
or
mov
rclb
push
inc
pop
call
lods
je
push
xor
adc
pop
sub
push
and
jge
pushl
mov
daa
adc
out
xchg
jle
in
test
push
std
bnd
xchg
cs
mov
movsl
orb
jne
add
int3
or
lcall
or
and
inc
dec
mov
pop
sub
inc
inc
ret
cmpl
jns
sbb
xor
jl
adc
loop
call
imull
cmp
int
add
movsbl
jns
pusha
pusha
popa
shrl
arpl
clc
movsl
cmp
test
test
add
cs
dec
pop
repz
inc
mov
sub
pop
movsb
icebp
xchg
sub
std
lea
lods
mov
pop
push
inc
adc
fcoms
data16
inc
inc
and
push
movb
mov
and
fisttpll
cmp
fisttpll
cltd
and
xchg
add
pop
or
shl
loope
push
imul
lret
jnp
push
pop
cmpl
and
add
cmova
lods
out
mov
or
sub
aad
push
jnp
sbb
jg
call
sub
mov
mov
or
lock
mov
dec
data16
pushf
cli
repnz
xchg
add
jnp
push
add
jmp
cmp
insl
jo
inc
and
mov
outsl
push
jge
sub
into
andl
sarb
ret
jge
out
andl
dec
mov
lods
cmpsb
pop
mov
dec
push
jmp
add
mov
push
add
pushl
mov
movb
dec
jne
jge
sbb
mov
jg
lods
adc
das
push
push
jo
mov
add
and
push
xchg
sub
in
add
inc
xor
inc
cmp
repnz
jmp
shll
clc
adc
incl
and
mov
sub
inc
je
inc
sbb
sbb
dec
or
inc
insl
adc
adc
lcall
add
jae
inc
cmp
rorb
inc
clc
dec
arpl
fwait
inc
jp
nop
jne
in
or
cmp
mov
dec
shl
jne
add
jbe
cmc
sub
mov
ss
jle
jb
les
inc
repz
dec
and
cmp
out
or
sbb
ja
jp
push
push
mov
dec
inc
popf
and
lcall
in
fisttpl
push
dec
xor
xchg
dec
and
adc
ret
inc
gs
pop
subb
test
xchg
add
ret
sub
loope
lret
hlt
loopne
movsb
cmp
arpl
adc
nop
test
and
push
lods
push
jbe
lock
fs
push
scas
mov
adc
lret
xchg
push
jecxz
outsl
ret
ljmp
xor
and
push
pop
sbb
adc
adc
fstpt
jnp
loope
fmuls
inc
and
adc
loope
lods
mov
cmp
pop
pop
push
push
cmpsl
push
loopne
push
out
rclb
mov
dec
xor
ficompl
pop
adc
cwtl
xchg
push
or
loope
add
dec
add
shrb
cmp
pusha
mov
dec
jmp
cmpsb
jge
mov
es
js
push
adc
in
mov
adc
icebp
loopne
nop
adc
leave
adc
in
int3
push
add
mov
adc
rcr
mov
add
test
mov
iret
aas
nop
test
mov
mov
xchg
push
in
std
jae
test
cmp
rcrb
cvtdq2ps
and
adc
sbb
mov
sub
rorl
cmp
test
cmp
rcrb
dec
dec
test
lahf
cmp
cmc
inc
adc
mov
adc
stos
ljmp
fiaddl
sbb
and
xor
mov
inc
xor
mov
cmp
mov
roll
stos
adc
dec
andl
cmp
sbb
outsl
jl
push
cmp
push
inc
je
mov
push
scas
dec
add
adc
out
jbe
or
push
jo
mov
add
into
push
je
xor
mov
mov
pop
add
jle
fldl
xor
test
in
fwait
mov
adc
fildll
mov
xchg
mov
cwtl
aaa
out
add
pop
adc
clc
pop
pop
or
pushf
adc
rcrl
adc
movsb
adc
sbb
adc
inc
and
lcall
clc
push
push
xchg
jecxz
sbb
and
inc
add
inc
inc
jp
rclb
fnstsw
ljmp
adc
nop
pusha
insl
mov
or
or
add
pusha
popf
je,pt
insb
lea
dec
dec
gs
push
jle
xor
inc
add
xor
lods
in
cmp
jecxz
sbb
stos
data16
dec
mov
jp
lret
int3
inc
out
imul
dec
or
test
pop
or
pop
push
jcxz
push
push
cmp
cmp
push
pushf
dec
mov
push
mov
dec
push
pop
adc
clc
popf
xor
insb
cmp
jmp
aas
cmp
jae
xor
pop
cmp
test
sahf
dec
sub
lahf
sbb
cmp
jae
mov
cmpsb
jle
aam
lea
push
xor
ss
into
test
mov
add
jb
data16
pusha
sbbl
stos
enter
sbb
insb
or
push
shl
enter
dec
cmpsb
jl
or
xor
or
jl
out
iret
sub
or
or
mov
dec
cli
dec
rolb
and
orl
jmp
push
push
mov
sub
add
mov
xchg
cmp
or
xchg
test
fmuls
cmpb
inc
mov
andb
or
xchg
mov
lret
loop
ret
mov
nop
pop
sub
jbe
sbb
out
daa
imul
mov
adc
shrb
ret
mov
jecxz
test
jae
jg
pop
sub
in
or
es
mov
dec
mov
and
inc
roll
add
push
sahf
test
xchg
pushf
neg
xchg
sbb
pop
or
iret
mov
pop
push
jb
cmp
mov
sbb
xlat
dec
outsl
pusha
ficomps
add
cmp
pop
adc
add
sbb
dec
inc
adc
outsl
loopne
test
subl
je
jbe
push
push
mov
push
xlat
sbb
jle
lods
push
je
jne
rcrb
or
mov
sub
je
cwtl
or
inc
pop
and
adc
jno
int3
push
test
or
outsb
xorb
dec
inc
sub
loop
jne
push
faddl
mov
jge
sbb
sbb
aas
inc
dec
pop
sbb
pop
and
mov
add
pop
mov
addl
cmp
and
or
rol
sbb
adc
cmp
movsb
adc
mov
outsl
fstpt
pop
or
insb
es
xor
fidivrl
divb
push
add
lret
bound
add
pop
push
adc
test
lea
or
push
sbb
add
push
int
jae
adc
push
push
out
inc
fbstp
inc
int3
cmp
jb
or
hlt
mov
pop
sub
push
pop
add
mov
or
inc
inc
ljmp
mov
je
or
add
sahf
ret
loopne
sbb
xchg
ljmp
xchg
sbb
cltd
into
scas
cltd
jp
ds
pop
std
imul
lock
sbb
mov
mov
cmpb
push
mov
xchg
dec
sub
sbb
cwtl
jne
negl
jae
ljmp
je
cmp
dec
inc
add
xchg
pop
and
sbb
icebp
test
cmp
adc
mov
xchg
fisttps
loopne
scas
push
insb
mov
jae
fwait
jp
jge
lea
pop
mul
int3
sbb
inc
into
adcb
das
push
mov
xchg
mov
sbb
loopne
fwait
mov
mov
fiadds
rcll
xchg
push
pop
pop
add
mov
ficompl
sahf
add
push
push
or
dec
andl
jo
or
ret
jne
mov
add
fwait
add
lds
sbb
jg
mov
les
jp
ljmp
pop
cli
inc
add
clc
pop
adc
adc
xor
pop
or
shrl
pusha
add
sub
add
and
mov
ljmp
dec
pop
mov
mov
and
mov
cmp
movl
pop
scas
out
jbe
xchg
movsb
mov
add
jp
shlb
xor
xchg
mov
xor
ror
xor
or
cmp
loope
cmp
cmp
je
scas
adc
mov
ds
mov
push
or
add
mov
lods
rorb
into
inc
imul
divl
add
mov
test
sti
daa
cmc
sub
fs
or
pop
mov
mov
or
push
cmp
pop
lea
xchg
in
pusha
lods
mov
sbb
cltd
clc
xchg
add
pop
sbb
or
xchg
movsl
rolb
cld
mov
test
jbe
mov
pushf
sub
inc
mov
mov
fiadds
cmp
inc
or
jb
dec
cmpb
jne
cld
and
push
cwtl
push
jmp
and
pushf
or
add
popw
adc
and
cvttps2pi
dec
cltd
and
fadds
pop
mov
mov
push
and
adc
inc
pop
cs
popa
mov
mov
pop
data16
xchg
lahf
testb
addl
sub
cmp
xchg
and
sbb
pop
push
jo
adc
out
or
filds
push
adc
jne
inc
pop
mov
jo
and
decl
dec
mov
mov
add
add
ret
add
mov
pop
dec
or
or
push
pop
cli
fwait
dec
jbe
cmp
je
or
xchg
sub
movl
fldt
outsb
ror
mov
cmp
or
cmp
ret
je
cmp
insb
pop
jg
je
mov
mov
xor
add
sti
cmpsb
add
divl
lods
xlat
xlat
adcb
ret
dec
mov
out
addb
jae
test
add
dec
sub
lods
sahf
cld
cmp
xor
mov
mov
ds
mov
sub
pusha
push
mov
push
mov
jbe
mov
jnp
mov
orl
inc
out
pop
add
pop
mov
xlat
movsl
mov
cmc
pop
push
je
cmp
pusha
mov
insl
or
or
sub
in
and
imul
inc
call
clc
pop
and
push
add
ret
adc
add
dec
ljmp
dec
ss
xor
inc
add
xor
adc
and
call
dec
inc
cmp
pusha
mov
mov
lret
aaa
es
mov
lds
loopne
sarb
sub
into
repnz
out
movsb
and
iret
pusha
ret
fdivrl
fistps
pop
push
xchg
data16
push
pop
icebp
and
test
sbb
imul
cld
dec
jl
call
inc
shl
outsl
push
enter
sbbb
xor
jo
sbb
pop
jae
ds
das
sbb
dec
in
mov
jmp
push
push
pop
movsb
or
or
jae
xor
adc
mov
outsb
pusha
sub
dec
push
cmpsl
and
das
lods
mov
push
nop
or
mov
mov
dec
inc
mov
rcll
jecxz
rorb
addl
aad
lret
ss
inc
mov
jb
cs
andb
in
mov
or
dec
ljmp
shrl
mov
mov
sarb
nop
push
xchg
and
adc
fimull
cltd
test
add
in
sub
iret
sahf
adc
outsb
sub
or
mov
cmp
lods
sbb
push
mov
andb
lcall
scas
push
aam
in
pop
jp
das
and
or
or
mov
mov
cs
xor
mov
adc
loopne
in
int3
and
cmpsb
or
mov
cmp
sbb
rorb
jnp
fadd
outsb
stos
fisubs
sti
arpl
push
push
inc
imul
movl
test
inc
add
mov
aas
mov
pop
dec
push
sub
cmpsl
lods
sub
leave
mov
jne
add
push
in
push
push
sbb
fstl
push
pop
in
add
filds
jne
push
bound
aas
movd
mov
adcb
dec
add
add
inc
sbb
add
add
pusha
mov
fcmovbe
push
pop
aad
jl
inc
cmp
cmpsb
sbb
das
adc
add
push
jl
dec
test
stos
call
mov
xor
rcll
sbb
add
push
push
ljmp
push
adc
mov
jle
add
add
xchg
and
dec
xor
and
sub
aam
jae
or
adc
and
es
out
in
add
inc
pop
xchg
lahf
movb
dec
imul
incb
cmpb
mul
pop
shr
add
dec
add
lock
mov
movb
cmpsb
adc
test
xor
add
test
xor
ss
aam
or
pop
push
push
pusha
and
aaa
orl
cmp
lcall
rcrb
mov
xor
mov
inc
mov
push
and
adc
mov
xchg
sub
shl
push
ja
cmp
notl
dec
dec
clc
push
adc
out
jne
lods
cmc
testb
or
loop
mov
subl
aad
or
and
mov
mov
or
lret
mov
mov
cmp
mov
mov
nop
std
arpl
into
inc
std
cmp
adc
mov
inc
jge
sub
dec
or
or
jb
cli
mov
mov
cmp
add
out
js
or
aam
sbb
push
add
lock
sub
add
dec
sbb
bnd
hlt
mul
test
movsb
jbe
mov
xchg
loopne
mov
inc
push
clc
dec
dec
jne
pop
aas
inc
adcb
insl
movsl
lock
pop
fwait
cmp
lea
je
push
sbb
add
into
inc
xchg
adc
sti
popf
rcrl
mov
arpl
mov
stos
jne
cmp
jo
test
into
inc
aaa
or
orb
add
lea
mov
mov
fisubrl
sbb
sub
and
pop
mov
mov
shlb
or
mov
fwait
repz
xor
jo
mov
bnd
pop
ret
shll
jo
scas
movsl
mov
sub
popa
sub
loop
mov
test
lea
mov
cmp
outsl
mov
sahf
mov
out
or
lods
add
push
mov
xchg
movb
gs
in
sub
insb
dec
sahf
mov
mov
popa
fstl
ffree
pop
dec
pop
fucomi
sahf
pop
sub
ljmp
mov
out
icebp
adc
xor
and
xor
outsb
lods
loopne
outsl
daa
pushl
shrl
xchg
push
mov
sti
push
movsl
in
cmc
js
pop
aad
jmp
out
test
mov
and
nop
cmpsb
xchg
inc
enter
add
cmp
js
add
cmp
dec
testb
lret
call
iret
add
and
es
adc
xacquire
test
inc
or
cwtl
insb
and
inc
adc
fidivl
out
sub
jle
jbe
imul
jo
mov
mov
dec
sbb
lea
sbb
mov
cmp
mov
orl
testl
push
pop
or
sub
sbb
push
stc
push
mov
sbb
shll
fisubl
lds
sub
lea
cs
cmpsl
lds
jp
les
inc
add
in
dec
mov
adc
mov
cmp
mov
jne
lahf
push
cld
ss
sub
je
testb
inc
add
inc
dec
push
cmp
mov
cmc
add
or
ret
jbe
adc
psadbw
lods
mov
sbb
arpl
out
xchg
sar
inc
leave
sub
push
outsl
sbb
fimull
lds
sbb
xor
push
pusha
aad
pop
pop
aaa
mov
dec
mov
jo
push
dec
adc
outsl
or
sub
ljmp
gs
dec
pop
call
cltd
pusha
filds
dec
pop
ds
add
and
add
daa
shlb
jne
push
jb
mov
add
push
clc
dec
push
xchg
testb
jle
in
lds
outsb
sbbl
rclb
inc
inc
mov
push
dec
filds
sub
enter
mov
push
xchg
repnz
or
popa
mov
and
dec
xor
mov
iret
jae
cltd
push
or
mov
xchg
flds
aas
xchg
sti
inc
adc
into
or
leave
inc
shll
jns
fcompl
mov
mov
inc
adc
cs
push
mov
cmp
and
jnp
push
dec
inc
je
lock
xor
adcl
sarl
inc
push
add
test
add
pop
cmp
xor
clc
sub
repnz
lea
push
stc
adc
add
jo
push
push
sub
outsb
aas
test
jae
push
dec
sahf
js
mov
inc
dec
pop
pushf
mov
dec
das
jnp
sub
mov
inc
repnz
add
adc
add
xor
push
inc
adc
mov
inc
outsb
or
or
or
lahf
nop
adc
in
outsb
sub
push
mov
add
push
fists
or
nop
iret
jg
or
inc
inc
jns
sahf
adc
xor
or
dec
sbbb
push
mov
add
add
pop
push
test
aaa
leave
test
xor
adc
xor
notl
gs
mov
lret
mov
int3
sub
into
ja
shlb
xchg
dec
mov
test
call
or
and
pop
sbb
pop
inc
mov
push
test
add
sub
inc
adcl
imul
sbb
sub
clc
adc
add
leave
enter
dec
rorb
inc
or
and
ss
xor
outsb
pop
sbb
inc
mov
outsb
dec
loope
xchg
xchg
sub
xchg
add
dec
adc
mov
inc
sbb
jmp
sbb
lods
je
xor
inc
fwait
add
pusha
xchg
rclb
loop
adc
or
and
and
push
add
mov
mov
sbb
pop
or
pop
add
pop
das
adc
pop
xchg
ret
stc
xor
mov
das
in
cmp
jle
or
or
js
lods
adc
insb
push
inc
ljmp
sbb
dec
imul
add
add
pop
aaa
iret
and
dec
adc
nop
test
add
mov
mov
push
fs
xchg
xchg
jecxz
hlt
inc
jo
mov
shll
adc
dec
cmpl
test
sub
rcll
or
xor
les
pop
sbb
jmp
movl
push
stc
lcall
or
lods
insl
dec
xchg
call
cmp
inc
ret
and
jl
xchg
adc
lods
xchg
lea
out
lea
mov
pusha
jo
ret
hlt
add
clc
xor
push
xor
dec
shll
mov
ss
lcall
inc
rcll
dec
push
pop
dec
dec
imul
mov
call
int
and
in
push
lds
sbb
in
and
int3
ret
and
pop
mov
out
cld
jo
xor
dec
xor
inc
inc
daa
mov
ret
xor
sub
jb
inc
cmc
mov
pop
mov
mov
mov
or
inc
add
and
mov
pop
pop
push
add
mov
sub
mov
or
js
in
mov
add
push
sbbl
add
jmp
cmpsb
stos
ret
enter
popa
dec
icebp
add
sub
and
pop
sub
mov
add
fs
push
fucomi
fs
dec
sbb
lock
lahf
rcll
out
insb
aas
mov
rcrb
push
push
jo
pop
or
sti
push
dec
int3
push
jns
fiaddl
imulb
xor
add
rcl
fsubrs
or
add
jle
pop
pop
and
inc
aam
lea
xchg
mov
adc
dec
les
cmp
push
push
js
push
shl
or
xchg
mov
inc
andl
pusha
inc
or
mov
sub
add
or
pop
xor
test
pusha
jl
pop
enter
push
cmp
or
repnz
push
mov
push
inc
sbb
mov
push
xor
lock
add
add
xchg
sub
daa
pop
xchg
ret
sbb
sbb
iret
imul
cmp
lahf
mov
cmp
repz
stc
out
lea
adc
aad
add
or
mov
outsl
inc
fnstenv
sbb
or
fbstp
ret
inc
jmp
add
mov
jnp
dec
insl
or
mov
adc
rcll
push
mov
jno
mov
jne
enter
imul
sbb
pop
mov
inc
inc
sbb
and
cmpsl
adc
pop
push
push
pop
inc
jae
cmpsl
clc
xchg
add
into
les
sub
and
inc
push
sub
ret
adc
mov
pop
sbb
dec
adc
enter
push
in
popf
cmp
pusha
xchg
inc
das
xchg
out
ds
and
push
orl
and
xchg
sub
add
bound
cmp
cli
push
jb
or
add
cltd
lods
sub
daa
push
pop
imul
or
sbb
int
adc
into
mov
dec
cmp
sbb
jmp
adc
cmpsb
fcomps
imul
xchg
push
jl
cmpsl
adc
jo
pop
lods
pop
sub
popa
outsl
mov
movsl
and
mov
xor
icebp
jl
xchg
xor
sbb
mov
dec
test
jg
mov
outsl
sub
adc
test
and
sub
lea
addb
ret
cmpsb
subl
adc
mov
adc
cmp
cmc
popa
insb
stos
subb
and
adc
pusha
or
outsb
push
aas
push
mov
je
push
cmpl
adc
pop
jl
or
fldt
add
jb
testl
sbb
and
lcall
je
sbb
fcompl
rcl
adc
scas
add
push
and
adc
adc
in
mov
mov
inc
in
pop
fdivs
inc
jo
ds
sbb
leave
adc
aad
jo
xor
or
and
rcrb
rcrl
enter
pop
rorb
adc
xor
add
pushf
mov
pop
mov
cwtl
mov
dec
and
sub
nop
add
inc
push
adc
mov
push
aam
sbb
ret
pop
dec
sbb
xchg
aaa
inc
jmp
andb
inc
jl
lock
push
adc
and
or
pop
setg
sub
sub
xchg
push
pop
fmull
sbb
and
in
xchg
or
jb
jge
or
int3
xor
sub
sbb
loopne
mov
push
push
inc
mov
lcall
dec
dec
sbb
enter
ffreep
das
shl
sbb
inc
mov
test
daa
adc
pop
daa
mov
or
push
imul
xor
rolb
leave
jmp
jle
sub
xchg
mov
inc
dec
fcmovbe
or
icebp
lods
sbb
cmp
orl
inc
mov
and
jecxz
leave
nop
ljmp
cwtl
add
xchg
jae
pop
push
imul
sbb
mov
test
xchg
pop
pop
je
js
xor
sti
pop
in
fisubrs
pusha
cld
push
js
inc
test
ss
jl
jg
clc
jg
jl
pusha
or
jb
xchg
arpl
lea
xor
insl
xchg
and
mov
fsubrl
sarl
xchg
cmp
sbb
test
imul
xor
add
in
xor
in
lret
clc
inc
lods
and
in
dec
and
push
lea
adc
add
loopne
jbe
jle
lea
not
mov
mov
subl
dec
or
or
lahf
adc
inc
jmp
jne
inc
outsb
push
push
push
push
adc
nop
nop
popa
push
mov
mov
cmp
and
sub
xor
dec
inc
push
sbb
addb
call
rol
sbb
scas
lret
adc
xchg
and
cmp
xchg
pop
sub
and
dec
adc
push
push
sahf
popf
mov
mov
mov
dec
mov
stos
mov
add
movsb
enter
push
or
lds
adc
enter
les
pop
cmp
in
jl
mov
pushf
inc
push
add
ret
loopne
mov
xor
int3
inc
loop
mov
jb
or
or
fisubl
dec
fs
ds
mov
or
arpl
mov
mov
rcrb
push
mov
addps
jle
sarb
incl
cmp
jle
ss
push
mov
mov
mov
ret
mov
and
adc
xor
jmp
decl
mov
sbb
subb
adc
pop
sub
in
xor
or
and
dec
clc
pop
cli
push
push
les
cld
jne
mov
stos
sub
adc
push
ror
add
add
pop
or
sti
imul
inc
idivb
shrb
sub
insb
iret
cmp
mov
nop
imul
in
cltd
adc
mov
push
cmp
adc
out
leave
pop
adc
sbb
out
adc
mov
daa
push
cmp
and
xor
inc
push
or
or
sbb
inc
dec
sub
add
mov
test
dec
xchg
or
in
add
daa
push
add
fists
add
into
xor
insl
test
daa
add
ja
and
lea
cs
add
xor
loop
jb
test
lods
lods
sahf
ret
xorl
mov
out
dec
and
xor
xchg
pop
leave
xchg
xor
leave
xchg
pop
leave
cs
pop
sub
sub
daa
leave
xchg
pop
leave
es
pop
and
and
mov
ljmp
scas
mov
addr16
push
scas
in
scas
sbb
fs
sbb
add
jmp
pop
pop
outsb
or
pop
mov
popf
xlat
mov
push
push
or
mov
dec
and
int3
fbld
dec
icebp
cmp
sbb
mov
pop
and
xchg
add
add
pop
xchg
xchg
xchg
dec
adc
inc
mov
rolb
xchg
adc
cs
dec
pop
adc
ds
adc
add
push
leave
leave
leave
dec
movsb
push
push
leave
sub
lock
in
in
in
or
decl
xchg
fstpt
or
pop
sub
shlb
fidivrs
les
sbbl
pop
jo
jb
dec
add
adc
fidivl
xlat
in
add
add
mov
call
dec
cli
xchg
mov
lock
mov
jb
push
mov
les
leave
or
out
adcb
mov
js
xchg
rol
es
int3
nop
xor
and
or
jl
adc
mov
push
or
js
adc
or
sbb
or
sub
fldenv
mov
cmp
addr16
xchg
dec
add
push
ret
sub
xchg
test
push
enter
and
inc
mov
or
adcb
cmp
add
insl
cmp
cmp
sbb
pusha
lods
inc
mov
dec
cltd
inc
cs
pop
lock
sarb
pop
dec
xorl
xor
fdivrs
cmp
jge
ss
in
je
push
or
test
je
pusha
inc
dec
fdivrs
mov
jmp
mov
sbb
insl
sub
ja
insb
adc
mov
adc
or
sbb
aad
jmp
pop
and
je
pushf
lds
sub
sti
aad
xor
ljmp
and
fnstcw
xchg
xchg
rcr
enter
and
scas
pop
cmp
sub
mov
pop
dec
in
mov
lcall
nop
adc
lret
negb
xor
ficoms
addr16
inc
pusha
js
xor
push
inc
fs
fs
cmp
jnp
pop
cli
push
sub
and
sub
xchg
dec
mov
std
mov
add
jmp
int
mov
sbbb
mov
out
test
lcall
out
shlb
cs
shrb
dec
insl
push
dec
sub
pop
push
inc
sbb
push
es
xor
inc
cmp
xchg
inc
inc
rorl
mov
sbb
adc
push
dec
mov
xor
mov
xor
int
cmp
mov
add
push
mov
mov
inc
add
mulb
stos
xor
sahf
adc
sbb
test
clc
cmpb
movsb
lock
mov
stc
fimuls
sbb
adc
fs
ffree
fwait
enter
lea
adc
in
cltd
popf
fisubl
mov
push
mov
js
dec
repz
call
jns
add
cmpl
lock
popa
pop
notl
idivb
push
mov
sbb
bound
or
and
clc
add
div
repz
sub
xor
jge
iret
ret
jne
push
xchg
adc
nop
shlb
jb
es
pop
inc
jl
jl
adc
inc
pop
rorl
loopne
dec
or
imul
roll
mov
or
in
outsb
push
imul
or
fmuls
pop
lea
mov
jmp
adc
das
cmp
or
jl
mov
jmp
pop
cmp
or
push
or
cmp
push
data16
inc
lods
test
sbb
test
mov
jb
jl
push
inc
jg
xor
push
add
addb
dec
mov
push
jne
xor
xchg
or
leave
dec
decl
jle
cmp
jl
cli
pop
jmp
jo
ret
call
stos
mov
cvtpi2ps
sbb
pop
mov
pop
les
sub
cli
add
mov
cmp
ss
mov
or
xchg
fs
inc
cmp
and
icebp
sbb
test
test
insb
ffree
push
sub
je
je
divl
add
pop
add
es
jmp
inc
inc
faddl
fcmovbe
push
rolb
inc
cmp
int3
sub
or
xchg
lods
adc
pop
inc
pop
mov
mov
cmp
jg
pop
add
push
and
add
fmuls
rcrl
lea
popa
push
xor
dec
loopne
or
fidivrs
adc
insb
xchg
mov
loope
push
pop
push
lock
lods
add
adc
js
or
mov
xor
test
cmc
dec
cmp
sbb
xor
mov
mov
adc
jo
divb
inc
adc
xor
sub
add
and
test
dec
rorb
fld
mov
loop
adcl
cs
mov
xor
iret
lock
cmp
mov
jl
cmp
jg
push
sbb
jae
outsl
jmp
xchg
rol
das
xchg
outsl
dec
call
xchg
fs
addl
and
xchg
push
je
sub
mov
insb
mov
inc
inc
cmp
jo
insb
adcb
daa
fst
push
and
jg
push
xchg
jp
call
mov
ret
cmp
movsb
ds
cmp
jecxz
je
dec
sbb
and
jge
pop
xchg
sbb
cmp
add
and
clc
loope
push
mov
out
mov
xchg
cli
lar
shlb
adc
shll
sbb
rol
inc
and
lcall
pop
stos
xchg
mov
fbstp
loop
mov
aaa
xchg
or
hlt
add
in
ret
std
in
jle
aaa
push
movsb
sbb
mov
test
jo
adc
jecxz
dec
or
push
into
dec
stos
pusha
sbb
cmp
push
pop
mov
fists
push
add
scas
lcall
adcb
dec
out
cmpsb
fnstenv
or
jmp
popa
adc
stos
mov
adc
fnsave
aam
imul
and
xor
cmp
adc
push
add
or
lret
push
mov
fs
add
push
das
ds
jl
cmp
or
ret
and
mov
ret
fnstenv
adc
jle
sub
jge
inc
and
cmp
jg
sbb
jnp
loopne
push
lock
add
mov
dec
or
inc
add
test
nop
sub
mov
mov
sbb
fiadds
inc
sub
sub
sbbb
pop
and
push
xor
lcall
sub
xor
cmpsb
imul
and
movl
mov
mov
dec
push
dec
inc
fwait
pop
add
data16
jbe
sub
cmpsb
imul
pop
pop
jnp
sub
fnstcw
jl
push
mov
add
add
sub
rol
imul
pop
mov
idivb
sub
add
or
xor
cmp
xchg
in
sbb
rcrl
inc
xor
mov
addb
jae
or
cmp
fbld
dec
pop
je
add
adc
shr
cmp
jnp
push
pop
pop
adc
mov
pop
orl
jne
inc
dec
pop
adc
mov
popa
inc
idivb
cs
sbb
das
loope
jle
fisttpl
pop
push
or
inc
and
pop
cmp
testl
test
xchg
mov
add
aad
fidivs
sbb
arpl
dec
sub
pusha
jns
not
outsb
xor
cmp
cmp
jne
xchg
or
and
pusha
add
subl
jp
add
pop
add
dec
dec
pushf
bound
push
ret
sbb
mov
sarl
or
inc
insb
roll
adc
jno
pusha
lret
sbb
sti
sub
sub
pop
xchg
add
outsb
xor
scas
or
ret
cltd
lea
push
lea
inc
adc
fwait
and
xchg
mov
test
loop
mov
loop
lock
insl
arpl
add
cmpsl
inc
adc
pop
jmp
aaa
adc
addr16
inc
and
popa
inc
es
sub
fiaddl
ja
dec
lea
out
test
iret
inc
rolb
or
add
ret
adc
in
lock
adc
push
push
pop
dec
xor
addr16
xor
mov
jo
sub
std
jle
sarb
cli
rclb
mov
xchg
aad
mov
mov
mov
lcall
sub
cmp
inc
or
inc
sub
pop
pop
inc
mov
aad
filds
cs
subl
xchg
in
imul
lret
out
mov
std
push
dec
inc
pop
lock
pop
jle
push
push
xor
test
and
cmp
mov
mov
xchg
ret
jno
cmp
rcll
push
add
notb
loopne
sub
push
dec
pop
adc
popa
xor
lahf
shll
xor
out
and
sub
out
and
mov
add
pusha
insl
adc
insb
push
dec
js
adc
shll
cmpsb
std
test
push
push
lods
jmp
pop
or
sbb
call
cmp
ret
je
xor
add
inc
xchg
jl
cmp
jg
jae
mov
sub
out
insl
jle
jl
cmc
push
push
xchg
push
int3
jne
push
cmp
pop
pop
cmp
push
push
jl
movsb
pop
mov
mov
js
cmp
insl
pusha
mov
and
jle
les
jnp
push
jbe
in
pop
fs
push
jl
rorb
jbe
push
cmp
or
das
push
mov
insb
pop
test
test
sub
les
testl
push
lcall
sub
pop
inc
inc
inc
push
jl
and
or
inc
push
sub
aas
js
dec
xor
mov
test
adc
jg
sbb
sbb
pop
push
and
nop
ret
mov
sahf
call
roll
test
xchg
sbb
sarb
cmp
mov
repnz
push
lret
and
adc
or
bound
leave
sarb
aas
dec
mov
jl
jl
sub
aaa
and
jnp
aas
add
add
mov
aaa
dec
mov
fcmove
push
and
shlb
nop
lcall
sub
xor
adc
lods
insl
mov
and
js
sbb
sbbl
mov
lock
gs
xlat
add
insb
or
inc
aaa
daa
sbb
or
or
jbe
ss
pop
in
jmp
push
faddl
mov
lret
push
pop
push
js
xor
ja
add
into
mov
pop
and
mov
pop
mov
loopne
xchg
adc
sub
cwtl
pop
inc
xor
inc
xor
jo
xchg
jle
sub
fsubs
mov
add
testb
sbb
je
lcall
push
push
sbb
jbe
scas
addl
sub
test
out
add
or
mov
mov
dec
adc
push
aam
dec
jecxz
jno
pop
std
jl
sub
repnz
and
mov
aas
or
repnz
hlt
js
sbb
xchg
pop
inc
inc
xchg
jb
pop
sbb
sub
iret
mov
outsl
sbb
pop
dec
jmp
sbb
andl
les
and
xchg
mov
mov
sbbb
loope
or
iret
add
inc
repnz
repnz
jl
sbb
push
leave
and
or
push
xor
adc
jl
enter
and
sbb
fcom
and
inc
aas
mov
je
dec
jge
filds
andl
mov
out
pop
mov
pop
cmp
orb
sbb
mov
fiadds
daa
cmpsl
mov
loopne
rol
rorb
sbb
cs
int3
inc
sbb
mov
add
add
mov
or
and
rep
popf
adc
xchg
mov
adcb
jnp
adc
add
test
jns
loope
testl
add
push
mov
cmp
loopne
fildll
xchg
adcb
or
sbb
push
push
es
idiv
data16
and
lcall
das
fwait
shlb
dec
mov
inc
in
mov
sarl
clc
add
ret
jle
jmp
stc
repnz
sub
ret
rcpps
dec
xchg
add
sub
sbb
jecxz
sbb
ret
jmp
xor
cli
or
mov
push
cmpl
sbb
push
or
fsubrs
mov
fs
pop
test
and
out
pop
dec
mov
loop
jno
adc
dec
bound
and
push
pop
insb
adc
pop
and
fistps
add
jg
lret
loope
cmp
dec
es
cmpsl
out
insl
push
cmp
push
pusha
mov
push
sbb
js
fsubs
rcrl
ret
sarl
adc
mov
dec
jns
bound
sbb
dec
xchg
pop
sbb
insb
push
adc
aaa
daa
push
loope
sbb
std
mov
adc
inc
data16
sbb
push
je
gs
sbb
je
fcompl
pop
pop
push
pop
xor
sbb
add
xor
adc
push
sub
push
push
lods
and
pop
lahf
dec
pusha
mov
repnz
pop
outsl
add
nop
rcrb
adc
mov
lods
je
or
mov
push
inc
xchg
add
test
ret
mov
add
les
or
cli
push
mov
nop
cmp
das
je
dec
push
test
rclb
ss
andb
pop
push
push
lods
push
adc
enter
xor
dec
js
sahf
fs
pop
push
cmp
ss
testl
or
call
outsb
mov
call
jns
jnp
jnp
xchg
jns
sub
dec
test
movsl
lods
imul
xlat
xor
mov
loopne
or
pop
inc
ja
lahf
or
enter
out
loopne
dec
mov
cmp
cmp
and
iret
and
pop
aas
xor
adc
and
mov
or
push
jnp
ss
dec
pop
mov
add
ror
dec
cmp
sbb
xchg
push
sub
mov
dec
xchg
push
aam
mov
and
mov
add
lods
sub
test
je
xchg
popa
push
pop
mov
sbb
add
mov
bound
fsub
jns
pop
adc
and
mov
enter
push
in
pop
xchg
push
and
dec
mov
push
aas
push
xchg
fcompl
psubq
insl
pop
fs
and
mov
xor
pop
sbb
test
cmp
sahf
sub
xor
lock
jge
mov
xor
sahf
divl
ss
pop
pop
push
int
call
ficoms
add
sbb
sbbl
mov
repz
inc
inc
pushf
xor
dec
and
rol
fstpl
add
mov
xchg
push
pusha
and
lret
xor
add
jecxz
pop
dec
aaa
fcomps
subb
lret
add
jo
adc
adc
sbb
test
sbb
ss
es
cmp
das
inc
fdivl
adc
call
push
sbb
js
insb
popa
cs
pop
gs
gs
xor
gs
cltd
add
shlb
ror
or
push
lea
push
orl
push
xor
in
push
stc
xor
jnp
pop
xor
lods
xlat
push
inc
xchg
cmp
cmpsb
outsl
mov
stos
arpl
bndstx
jno
ret
int
dec
jno
and
sbb
fnsave
push
lock
pop
mov
adc
cmpl
rolb
out
es
loop
pop
adc
add
xor
pop
jle
mov
sbb
push
dec
sub
and
mov
mov
xorb
inc
mov
je
inc
push
dec
sbb
mov
or
mov
xchg
and
aad
shlb
dec
cmp
dec
dec
xchg
inc
lcall
xchg
lock
enter
addr16
jmp
dec
lods
mov
filds
cmpsb
arpl
test
rcrb
pushf
push
push
dec
out
mov
ret
leave
pusha
push
cwtl
gs
loopne
pop
mov
stc
and
lea
shrl
loop
jne
and
sbb
inc
push
mov
adc
lcall
push
clc
mov
lret
ret
roll
push
fnsave
test
mov
out
add
aam
push
loope
push
loopne
fdivl
fsubs
xchg
sbb
addb
sbb
push
daa
je
pop
mov
loopne
cmpb
mov
es
cmpsl
ror
xchg
out
mov
push
ret
and
movsl
and
sbb
add
adc
lret
xchg
bound
pop
test
ds
push
mov
lret
aas
sbbl
inc
mov
adc
test
inc
add
pop
repz
cmpsl
addb
data16
into
fidivs
dec
or
outsl
sub
roll
cwtl
popa
cmp
sub
inc
sahf
cs
cmp
sbb
dec
cmp
xchg
push
loop
les
in
push
push
arpl
cmp
cmpsl
addr16
or
and
dec
inc
xchg
adc
push
sbb
arpl
add
sub
nop
leave
aad
roll
test
fs
dec
dec
xor
loope,pt
repz
add
or
aaa
sahf
push
lea
adc
push
push
push
sbb
cmp
xchg
or
push
inc
fbld
mov
stos
addl
mov
rcl
and
sub
pop
mov
sub
sbb
mov
and
and
ds
nop
lea
xchg
bound
fdivs
add
push
add
mov
aas
add
js
call
or
push
daa
and
popa
andb
aam
je
xchg
xchg
and
or
lds
test
pusha
mov
xor
push
shl
adc
mov
mov
imul
mov
jbe
adc
clc
movsl
jns
cmp
pop
xor
testb
roll
cs
js
xor
xlat
push
pop
sbb
shlb
dec
push
rorl
fmuls
testl
xchg
cs
mov
loopne
xchg
cltd
xchg
fs
loop
mov
das
jbe
rcrl
stos
sbb
jbe
xorl
std
or
or
pop
add
xlat
push
push
hlt
push
push
movsl
js
pop
jnp
test
sub
es
xchg
aam
ror
dec
sub
insb
add
inc
jl
pop
jge
and
sti
sub
add
xchg
mov
add
out
xchg
and
xchg
test
dec
push
sub
aam
fsts
or
lods
fcompl
pop
pop
sub
xchg
je
adc
pusha
push
imul
mov
xchg
sub
or
pop
sub
sbbb
pmulhw
clc
or
push
push
inc
test
and
push
aad
xor
shlb
incl
je
imul
popf
push
sub
sbb
xchg
add
insb
mov
ja
aam
and
jno
fsubr
call
sbb
push
enter
ror
mov
or
add
mov
sub
add
ret
ss
dec
mov
cmp
sub
pushf
adc
xor
sbb
cmp
jge
cs
inc
outsb
push
pop
nop
pusha
dec
jg
sti
jmp
adc
adc
nop
aas
loope
popf
cmpl
lcall
ret
mov
outsb
adc
mov
mov
mov
cmp
leave
xchg
mov
fsubs
stos
xor
cmp
push
push
push
xchg
movsb
lds
pop
ficoms
lret
stos
test
xchg
push
repnz
repz
lds
fisttpl
mov
es
int
ds
or
in
clc
mov
ja
sub
fdivrs
pushw
out
lea
outsl
cmp
mov
leave
cli
ds
decb
cmp
ljmp
jo
cmp
imul
loop
lret
sbb
arpl
jo
rclb
jae
nop
insb
test
mov
inc
hlt
ret
mov
and
or
fsts
dec
adc
push
add
inc
pop
add
ret
and
xor
add
mov
or
lahf
pop
and
jmp
aam
aas
movsl
leave
inc
push
ret
xor
call
jg
mov
push
nop
loope
pushf
mov
movsl
push
jp
test
fs
pop
daa
adc
ret
or
or
mov
and
add
push
push
aaa
or
cmp
jp
inc
xchg
push
xlat
ret
and
add
push
dec
cmp
cltd
jne
arpl
fdiv
ret
add
push
push
movsl
pop
push
adc
push
xchg
je
lahf
cmp
push
cltd
clc
cltd
mov
stos
inc
es
jns
jne
sub
les
push
jnp
pop
mov
sbb
subl
adc
sti
push
inc
out
dec
sarb
mov
push
icebp
sub
pop
push
xor
mov
pop
imul
push
ja
fidivrs
movsb
xchg
js
or
ret
push
xor
shll
jmp
and
imul
pop
mov
mov
adc
fs
or
xor
xchg
xchg
inc
es
lds
xor
xor
pop
je
out
add
sub
xor
in
pop
or
xchg
inc
dec
dec
sbb
sbb
inc
inc
sbb
and
lods
lea
jge
mov
sbb
inc
je
and
adcl
cmp
and
jns
fdivl
jae
add
nop
adc
js
in
or
cli
incl
add
or
scas
test
mov
xor
and
mov
je
push
movsb
les
sub
mov
or
pop
xor
push
push
std
inc
mov
cld
loop
pop
in
dec
xchg
or
sbb
push
xor
xor
js
call
or
mov
dec
pop
sbb
add
xchg
or
les
fistpl
sbbl
cltd
std
xor
lret
push
sub
sbb
sub
mov
inc
xlat
mov
dec
jmp
cmp
push
frstor
movsb
adc
ficoms
or
mov
das
dec
sub
xchg
scas
pusha
pop
stos
ja
or
test
test
jl
cmp
pusha
xchg
cmp
loopne
inc
adc
cld
pop
mov
adc
or
pop
cli
xor
in
pop
cmp
iret
dec
call
dec
int3
add
inc
dec
cmp
fistpl
inc
lods
fwait
adc
sub
mov
popa
xchg
or
sub
scas
rcrl
das
inc
add
cwtl
cmc
pop
sub
mov
repnz
push
jmp
inc
push
inc
inc
sbb
movsb
test
add
push
push
aas
bound
mov
sbb
ret
jmp
fildl
xchg
mov
mov
inc
adc
or
jne
and
cmp
mov
lods
inc
jno
andl
or
mov
adc
cmp
mov
lret
push
dec
mov
xlat
push
fwait
jp
adc
mov
inc
push
pop
sub
inc
clc
sbb
or
lods
movsl
cmp
jno
and
push
inc
dec
les
pop
rcr
add
push
jg
add
adc
je
mov
cmpsl
inc
adc
lea
loop
sahf
rclb
dec
push
push
and
xchg
mov
fwait
mov
lea
and
lea
das
imull
mov
testb
or
cmpsb
jnp
adc
js
sub
pop
shr
ret
or
mov
or
sbb
push
jmp
test
dec
dec
jo
inc
sbb
jb
dec
cmpsl
adc
add
mov
dec
sbb
stos
lea
push
ss
pop
sti
sbb
push
xor
dec
pop
jb
shlb
je
cmp
push
lock
xlat
and
cmp
adc
xor
or
adc
jne
or
sub
push
loopne,pt
sbb
pop
push
pop
or
sbb
ret
jl
test
out
pop
or
jg
cmp
fs
pop
movsl
shll
pop
adc
xchg
dec
xor
mov
sub
cmp
pop
and
test
sub
xor
dec
cmp
or
jg
jge
push
daa
stos
mov
cmp
sbb
cmp
jge
and
sti
add
rorl
rcrl
mov
cmpl
sbb
fwait
nop
push
push
mull
ss
lea
jo
mov
adc
rorl
jbe
mov
sbb
mov
pop
jne
cmp
outsb
push
xor
push
mov
js
adc
fcoml
scas
add
or
mull
lea
xor
test
roll
cmpsl
pop
data16
pop
repnz
shrb
jo
mov
adc
ret
mov
mov
je
lods
mov
clc
movsb
mov
pop
jns
mov
jg
add
lods
push
pop
add
xor
add
and
and
and
mov
les
sbb
sbb
movsl
mov
sbb
push
mov
je
mov
pop
inc
mov
fisubrl
rorl
enter
mov
ficoml
xor
dec
aad
lret
pusha
xor
loopne
xchg
add
push
push
arpl
adc
or
and
xchg
jmp
xchg
sub
fwait
cmpsl
xor
push
sbb
sub
dec
inc
adc
jno,pn
pop
inc
inc
sidtl
hlt
or
cmpsl
enter
lret
fdivs
cmp
ljmp
adc
push
adc
and
mov
lock
push
sbb
or
push
and
sbb
lcall
inc
jle
dec
dec
dec
jo
xchg
mov
lret
xlat
clc
and
dec
add
sbb
sub
into
loopne
sub
aas
inc
imul
mov
js
push
jmp
add
add
movsb
adc
pusha
push
addb
out
sub
push
fidivrl
dec
jl
sub
cmpsb
popa
iret
sti
adc
ret
jmp
push
add
pop
pusha
sub
xor
push
call
xor
sti
pop
dec
mov
push
sub
call
cs
mov
rolb
cmp
jns
push
cmp
in
outsb
idivl
push
bswap
dec
int3
out
enter
enter
outsb
adc
pop
cli
mov
ret
cmpl
lret
in
std
iret
pop
popa
push
mov
mov
jne
and
imul
or
pusha
je
les
loope
push
sbb
enter
xor
nop
push
or
movsl
mov
and
stos
cmp
je
popa
or
add
adc
add
or
movsb
jnp
and
xor
push
push
call
int
dec
sti
mov
dec
lods
xor
and
imul
mov
repz
loop
mov
jns
ret
add
es
dec
and
pop
roll
mov
jl
inc
sbb
es
push
orl
mov
sub
pop
mov
adc
nop
fsubrl
mov
xchg
or
mov
sbb
mov
mov
into
neg
push
push
ret
js
jecxz
fists
repz
sbb
mov
add
cmp
cmp
xor
inc
dec
aad
popf
dec
hlt
enter
dec
imull
clc
mov
std
cmp
test
adc
jl
popa
inc
cmp
adc
dec
mov
mov
xor
push
inc
jb
test
push
adc
xchg
push
xchg
xor
mov
xchg
movsl
mov
cli
jo
call
cld
mov
decb
call
adc
sub
mov
ret
mov
mov
fldpi
jge
cmp
dec
and
fldcw
xchg
lcall
test
je
xchg
mov
xchg
pusha
sub
sbb
addr16
aas
cmp
cmpsl
pop
or
push
jae
inc
xchg
adc
adc
dec
call
push
outsb
cmp
aad
clc
test
fnstenv
jge
popl
push
loopne
push
jge
xor
jnp
inc
mov
inc
jl
jmp
jle
push
and
movsb
das
xor
dec
xor
in
sbb
mov
mov
js
icebp
es
pop
mov
sub
add
pop
ret
fwait
inc
mov
mov
mov
push
or
pop
inc
mov
or
dec
push
adc
bound
inc
in
andb
ja
clc
jle
ret
ljmp
pop
jg
lods
popf
adc
xchg
pop
mov
lock
mov
and
pusha
and
aas
sbb
sub
xor
filds
mov
pop
pop
in
adc
lea
int
lcall
mov
dec
cmpsl
adc
and
add
dec
inc
pusha
add
xchg
repnz
dec
sbb
adc
inc
mov
fcompl
adc
adc
xchg
inc
add
daa
int3
push
jne
jns
pop
pop
mov
data16
dec
push
and
push
stos
dec
and
test
pop
movsb
sar
jae
ret
cli
dec
and
sbb
pop
sub
ret
sahf
das
sti
jge
outsl
outsb
push
mov
rclb
daa
xchg
fists
leave
mov
mov
jmp
mov
sbb
punpckhwd
add
jle
jne
enter
loope
push
enter
rcr
stos
xchg
shll
xchg
dec
lea
test
push
cwtl
test
push
mov
mov
lods
scas
mov
ret
push
jo
xlat
enter
fidivrs
pushf
ja
jmp
mov
mov
sbb
fimull
push
and
add
clc
sbb
xorl
or
out
sub
xor
mov
call
repz
push
loop
or
cmp
sub
mov
cmp
mov
dec
fcom
adc
int
fisubl
add
add
inc
adc
lea
cs
mulps
or
cmp
mov
pop
in
mov
or
stos
adc
xchg
and
inc
roll
pop
jmp
mov
test
and
inc
push
push
cmc
sub
push
or
dec
jns
rcrl
ret
test
rcrb
imul
test
inc
pop
xchg
sbb
mov
testb
sbb
repz
je
call
mov
dec
lea
outsl
push
sbb
jno
add
test
cmp
in
mov
imul
arpl
pop
dec
dec
mov
jp
decb
sbb
push
lahf
inc
or
out
cmp
push
jo
into
or
rcll
je
cs
popl
xor
add
add
out
pop
test
or
push
add
xchg
jmp
jl
push
jmp
notl
inc
ret
push
sbb
push
outsl
sti
arpl
or
imul
push
ret
add
lahf
mov
sub
or
lods
test
jbe
ret
xor
ss
sbb
add
sub
imull
bound
imul
adc
lock
mov
add
adc
xor
mov
mov
add
aam
or
push
add
push
decl
jne
mov
sbb
or
mov
push
sbb
adc
decb
push
pop
or
or
jmp
or
or
mov
mov
adc
dec
pushf
xor
nop
ret
lods
xlat
orb
adc
push
add
andl
jne
jo
mov
iret
dec
mov
fsubrl
bound
lret
mov
xlat
sahf
push
into
push
in
pop
jl
fcoms
cmp
rcrb
cmpsb
add
insb
subl
xor
mov
cmp
inc
mov
sarl
pop
jae
fwait
push
bound
cmp
push
dec
or
sub
mov
inc
pop
xor
adc
dec
pop
inc
and
movd
cmpb
jmp
sbb
cmp
int3
cmc
ret
pop
pop
pop
testb
mov
movsl
and
rolb
js
mov
dec
cmp
and
lock
sub
scas
mov
adc
jo
fnstcw
je
pop
add
mov
inc
mov
cmp
mov
dec
jns
fcoms
dec
sbb
inc
outsb
mov
setg
adc
lcall
mov
stos
xor
rcrb
add
and
rorb
test
add
scas
mov
hlt
jmp
or
push
xor
decb
movsb
push
imul
inc
test
into
jo
adc
pop
shll
and
pop
pop
mov
mov
dec
sub
hlt
adc
xor
outsl
push
je
fisttpl
adc
pusha
fnsave
fidivl
push
jo
inc
stos
cmp
sub
dec
pop
pop
push
jl
jne
into
outsl
inc
aaa
fcomp
xor
fsubrs
mov
mull
add
jl
push
xchg
cltd
mov
out
inc
mov
enter
lret
ds
adc
sbbl
dec
sub
lds
or
movsb
fdivs
andl
sub
sbb
aaa
pushf
add
fdiv
lods
inc
cltd
mov
add
mov
mov
fisubl
fstl
xorl
xchg
stos
xor
les
into
xchg
loope
mov
pushf
push
aas
dec
xor
or
and
inc
jo
and
inc
pusha
lea
mov
adc
fdiv
mov
xor
in
stos
in
adc
daa
or
jge
inc
sub
clc
int3
stos
jae
leave
or
aas
loopne
add
add
subl
mov
mov
add
stos
sub
sbb
addb
jle
mov
inc
cs
jne
and
add
xor
daa
fmull
mov
lahf
xor
orl
xchg
outsl
dec
mov
jl
xor
enter
add
imul
int3
push
bound
je
addb
mov
or
outsb
sahf
test
mov
xor
push
and
movsl
dec
mov
push
or
sbb
pop
les
mov
mov
or
mov
or
pop
arpl
test
mov
loopne
sbb
adc
dec
or
adc
sarb
fwait
sub
test
push
and
adc
je
divl
lahf
ret
mov
push
push
enter
and
in
and
sbb
in
cmpsb
sub
ret
adc
jb
xchg
dec
inc
cmp
push
enter
push
push
mov
adc
push
and
mov
fcoml
push
mov
add
cmpsl
dec
inc
sbb
sbb
push
adc
loop
add
cmp
jbe
cmp
mov
enter
nop
ljmp
and
mov
es
adc
jg
adc
sbbb
push
ja
mov
fwait
mov
in
lock
dec
ret
sbb
ljmp
mov
sub
dec
cmc
add
add
xor
lret
lret
roll
sbb
iret
pop
inc
or
push
mov
adc
aam
out
addl
or
rcrl
push
adc
mov
add
out
cmp
insl
add
or
loope
or
cmc
and
popf
fdivs
dec
dec
push
roll
fcomip
push
sahf
andl
xor
push
or
fsubr
or
adc
in
rorb
inc
rcrb
xchg
cmp
ja
pusha
inc
dec
push
sub
add
shl
popl
xor
mov
mov
push
shlb
push
int
nop
push
enter
ret
or
lods
test
cmpsl
add
andb
mov
sub
adc
and
push
pop
out
add
or
xor
pop
nop
test
js
sbb
mov
add
add
sub
repnz
jge
loopne
jecxz
in
in
mov
add
mov
push
mov
xchg
cmp
or
addb
mov
pop
cmp
loope
mov
or
mov
add
xor
ja
or
clc
jl
cmp
mov
jg
imul
divl
push
add
cmp
lods
push
sub
push
inc
and
outsl
pop
adc
addr16
add
sbb
ret
push
fwait
push
or
sti
pop
sbb
sbb
xchg
or
and
rcrl
iret
and
sbb
xor
ret
jl
cmp
add
cmp
jl
cmpsl
mov
in
jns
add
add
iret
lret
loopne
dec
rcr
int3
adcb
mov
add
fisttpll
fsubr
call
cld
clc
scas
jbe
loope
lahf
sbb
jmp
lods
pop
sbb
cmc
or
adc
addb
and
xor
inc
dec
sbb
and
adc
pushl
or
das
adc
shlb
ret
scas
mov
std
and
daa
je
or
je
sub
je
and
je
pushf
gs
and
jne
in
dec
sbb
xor
sbb
test
jae
scas
dec
scas
in
sahf
pop
inc
jnp
dec
sub
add
adc
xor
mov
add
adc
dec
fiaddl
dec
dec
xor
mov
and
or
insb
sbb
mov
jl
inc
sub
scas
out
or
push
sbb
adc
xor
in
movb
add
dec
loopne
fidivl
sub
adcb
insl
loop
cmp
push
add
adc
adc
or
xor
dec
inc
xor
arpl
xchg
or
test
into
insl
xchg
mov
sbb
enter
push
dec
arpl
jo
pusha
jb
lods
xchg
mov
push
mov
push
jmp
inc
cmp
inc
cmp
push
jmp
das
je
outsl
test
scas
push
shlb
dec
inc
test
je
and
or
popa
inc
dec
fcoms
or
mov
add
dec
scas
jne
icebp
dec
and
pop
jmp
push
push
cmp
mov
or
test
xchg
inc
xchg
mov
adc
push
mov
xor
push
pop
cmp
jnp
out
xor
movsl
or
push
cmp
repz
fiadds
add
mov
cwtl
push
pop
or
or
or
xor
popa
or
inc
sub
sbb
aas
dec
xchg
push
ds
push
inc
adc
sbb
sbb
sub
push
sbb
add
iret
pop
adc
inc
inc
pop
ficoms
add
or
fbstp
cmp
ret
mov
cltd
sbb
xor
and
sub
and
cltd
jmp
ret
fsubs
dec
lret
adc
push
mov
sub
xor
xor
dec
ret
jnp
cs
jmp
shrb
aam
cmp
js
cmp
jge
mov
push
add
and
sbb
jge
cmp
mov
jge
out
sub
add
sub
pop
xchg
add
mov
into
push
add
sbb
dec
xor
mov
popf
mov
clc
lock
push
sub
andb
lds
addb
adc
mov
or
scas
xor
mov
adcl
dec
lds
loope
orl
mov
test
notb
jle
inc
pop
and
jmp
out
cmpl
or
sub
arpl
add
ss
jno
out
adc
fidivrs
enter
pop
add
push
in
jl
out
cmp
pop
jmp
repz
pusha
xchg
and
jecxz
push
dec
test
push
push
pop
mov
and
cmp
inc
adc
xor
push
xorb
mov
mov
out
les
push
rolb
or
adc
cmpps
add
inc
or
add
sbb
aaa
adc
sub
add
pop
sahf
out
rolb
sub
mov
movsb
mov
xchg
dec
rcrl
mov
adc
imul
addb
mov
sub
lods
and
sarb
add
dec
push
xor
or
imul
je
pop
push
adc
xlat
jge
test
xlat
inc
sub
xorb
push
subb
or
mov
mov
ret
mov
adc
shl
dec
outsb
ret
or
pop
rcr
add
cmp
mov
jo
int
add
jnp
sub
sbb
jnp
sub
dec
push
je
xchg
js
stc
jbe
push
adc
iret
xor
aaa
aas
aaa
jnp
mov
stc
out
ficomps
jge
pop
or
push
neg
pop
imulb
dec
adc
insb
cmpsb
nop
or
scas
add
inc
lock
js
ljmp
and
pop
fsubrl
ss
in
and
scas
sbb
mov
mov
add
jecxz
adc
or
loope
push
and
push
dec
sbb
enter
fldl
push
fcoms
add
pop
pop
dec
sbb
sahf
call
cli
add
push
sbb
mov
xchg
pop
cs
cmpsb
jecxz
clc
push
or
imul
xor
lock
addr16
push
add
lret
data16
jp
add
jl
sbb
fwait
sbb
mov
jge
je
add
or
jns
cmp
movsb
sub
shll
push
pop
shlb
push
xor
sub
pop
test
xor
adc
xor
repnz
sub
add
outsb
cmp
or
or
gs
mov
imul
test
mov
ja
cltd
mov
fstl
cmp
dec
or
cmpsb
filds
xor
add
add
or
inc
adc
mov
mov
cmc
mov
fwait
jne
faddp
push
and
cmp
fsubrs
jo
fnsave
adc
pop
cli
and
test
in
mov
adc
push
lock
lret
test
fnstsw
pop
pop
das
xchg
ret
test
shlb
test
cmp
sbb
mov
out
pop
mov
jle
xchg
and
es
hlt
xor
rcr
test
adc
aad
rcl
add
xor
rol
cmp
cmp
mov
or
enter
cmp
pop
or
add
pop
push
pop
jg
cmp
jbe
jb
inc
jne
cmpsb
sub
cmpl
jge
lods
sbb
scas
nop
fs
pop
sbb
sub
cs
xor
and
addps
and
mov
out
and
cmpsl
xchg
cmp
cmp
and
in
inc
or
xor
mov
outsl
movsl
xchg
shlb
and
xchg
dec
push
inc
xor
add
test
adc
mov
pop
dec
add
or
repnz
adc
mov
lock
sub
xor
lea
or
mov
and
or
mov
movsb
push
xlat
mov
push
mov
cs
jmp
or
fs
add
sbb
ficompl
jne
insb
dec
sbb
add
push
jp
add
loop
nop
push
dec
roll
jp
mov
inc
les
pop
dec
dec
or
call
cmp
ss
jmp
aaa
das
or
cmp
add
aas
dec
pop
add
jmp
or
or
into
push
mov
mov
jo
pop
inc
cmpl
pusha
pop
movsb
xor
pusha
xchg
dec
push
test
sbb
mov
mov
add
jns
push
and
adc
ja
in
nop
mov
jbe
loop
dec
imul
je
xor
cs
or
ret
add
add
clc
test
fbld
xchg
or
fstl
rclb
or
push
js
jmp
jp
shrb
movsl
jmp
arpl
or
lock
xor
sbb
push
int3
mov
mov
in
push
push
push
xor
jbe
xor
and
pop
rcrl
and
or
and
and
or
push
insb
push
lds
test
ret
add
adc
cwtl
loopne
push
xchg
push
je
mov
dec
test
mov
iret
ficomps
insb
or
push
or
pop
or
adc
mov
or
push
insl
fwait
adc
dec
push
add
or
imul
inc
pop
dec
jl
dec
pusha
test
lea
mov
lret
cmp
lcall
movsl
xor
fldl
jne
push
sub
push
add
cmp
lcall
cmp
daa
sub
sub
cwtl
dec
sbb
sahf
imul
add
ret
lds
push
push
and
daa
inc
pop
mov
loop
fistpll
mov
mov
int
mov
push
or
stc
dec
fucomip
aaa
popa
jl
enter
sti
fwait
sbb
jne
in
call
push
push
xchg
push
sbb
pop
or
sbb
and
loopne
jne
cmpl
rolb
mov
or
adcl
push
pop
or
add
scas
je
mov
lods
mov
mov
adc
loop
adc
pop
push
ret
sti
and
or
adc
mov
sbb
lahf
cmp
dec
mov
xorl
sub
or
jecxz
pop
or
pop
xorl
in
or
jl
and
out
rorl
and
dec
adc
sbb
cmp
add
orb
xor
sbb
sbb
or
fwait
sbb
jg
or
jecxz
or
and
xor
add
imul
scas
xor
mov
jnp
pause
push
fisttpl
mov
mov
test
dec
sti
xor
inc
clc
push
fst
push
push
dec
ficoml
hlt
lret
je
mov
and
call
aaa
jle
mov
jns
sbb
lds
push
sbb
push
inc
push
xor
add
or
or
je
dec
imul
push
repnz
repnz
data16
std
add
enterw
dec
dec
push
push
lods
cmovo
outsb
mov
pop
adc
push
repnz
dec
mov
and
pop
sbb
lods
push
test
sub
and
popa
in
xor
push
mov
sub
loope
dec
xchg
push
je
lahf
mov
inc
pop
push
push
adc
jp
sbb
ficoms
push
adc
add
cmp
test
or
mov
inc
mov
adc
or
sahf
ss
dec
push
es
pop
pop
adc
xchg
pop
int3
or
add
dec
or
test
sbb
or
push
push
rcrl
cmp
xchg
repnz
add
ret
jp
or
fcmovu
or
and
outsl
mov
add
ret
xchg
cmp
cmpb
cmp
dec
jne
movsl
push
fidivrl
jno
fsubrl
mov
xchg
push
add
inc
gs
add
or
lret
inc
inc
test
lods
andl
lods
sub
fadds
ret
cs
pop
or
nop
int3
jo
add
jne
mov
mov
sbb
lahf
insb
sub
adc
sub
add
adc
fdivr
jge
jbe
push
das
mov
pop
push
rcll
jmp
mov
jo
in
insb
iret
adc
shr
pusha
inc
sbb
out
mov
inc
add
imul
cmpb
lret
and
push
cmp
mov
fbstp
add
xchg
mov
push
pop
mov
and
xchg
push
in
adc
mov
mov
mov
mov
ljmp
jnp
lods
in
sub
adcb
mov
out
mov
cmp
add
sahf
inc
jno
dec
pushf
sub
rorb
push
jge
rclb
pop
push
dec
add
adc
leave
aam
lods
mov
test
dec
push
fadds
sbb
add
xchg
hlt
xor
rolb
test
adc
adc
out
and
sub
out
sbbl
call
sbb
or
or
jecxz
test
push
adc
jne
data16
mov
rorl
iret
daa
faddl
cmpsb
incl
mov
jmp
ss
or
sti
sbb
ljmp
loopne
dec
adc
mov
jge
loopne
mov
pop
mov
repnz
xor
pusha
push
rep
cmp
sub
pushf
mov
test
rcl
dec
pop
and
adc
sub
adcb
jle
dec
push
push
imul
ret
movsb
je
add
or
cmp
je
add
push
fidivrl
pop
fsubrp
sub
les
jge
sub
and
or
jmp
cmp
or
js
mov
add
aam
add
mov
ficompl
add
addl
rcrb
inc
pop
dec
repnz
fndisi(8087
xor
sbb
sub
test
mov
andb
pop
mov
rcrb
mov
sahf
xchg
mov
inc
xchg
int3
iret
aam
xchg
push
and
lret
inc
and
dec
push
aas
sbb
lea
inc
dec
rcll
into
jge
lahf
pop
sub
les
jle
mov
mov
dec
mov
inc
pushf
add
dec
ds
xchg
cmc
mov
out
sub
lret
sub
push
push
push
add
push
addr16
nop
pop
adc
rclb
sbb
jbe
fdivs
neg
push
lea
idivb
sub
mov
push
mov
cltd
jp
call
dec
adc
test
insl
enter
inc
addl
add
inc
imul
jb
hlt
ret
aas
mov
into
push
cmpl
loop
and
loopne
mov
or
sbb
jo
xchg
test
cmp
out
jp
dec
lds
loope
jbe
repnz
jge
dec
add
add
cs
fstps
cs
shl
sar
aas
push
inc
pushf
and
fidivl
fildl
ret
repnz
decl
push
push
out
subb
adc
outsl
push
mov
sub
insb
and
xchg
sbb
mov
sbb
sub
lds
pop
pop
aad
daa
iret
ja
pop
int
inc
add
cwtl
shlb
int
xor
adc
xchg
in
cmp
mov
or
das
push
push
and
pop
pushf
mov
push
pop
cli
push
cmc
sbb
add
push
jo
adc
push
add
cmp
add
cld
jg
arpl
mov
test
jecxz
loope
cmpsl
pop
mov
aas
aad
cmp
mov
jl
pop
dec
pop
sbb
insb
cmp
push
pusha
test
push
das
mov
mov
cmp
enter
sub
movb
in
sub
mov
dec
fsubrs
into
and
sub
and
sbb
add
sbb
mov
or
pop
sbb
and
mov
jg
stos
dec
ret
sti
jg
testl
or
sahf
pusha
test
push
inc
inc
enter
push
nop
ret
mov
and
and
pcmpgtd
stos
sub
or
in
pop
sbb
cwtl
adc
inc
mov
inc
adc
out
test
inc
sub
add
cmp
je
imul
pop
adc
cmp
icebp
mov
dec
mov
int
ss
ljmp
dec
inc
pop
rcl
in
mov
in
mov
sub
adc
xchg
addr16
add
sbb
pop
clc
or
sahf
xchg
testl
addr16
or
or
pop
adc
or
rolb
dec
sahf
icebp
or
dec
jle
addr16
adc
sbb
popa
mov
or
inc
dec
bound
enter
inc
sub
add
inc
mov
adc
roll
popa
inc
adc
mov
cmpl
mov
arpl
les
into
xchg
ss
mov
jle
lea
inc
sbb
ret
fs
mov
sbb
jge
mov
or
jbe
aas
or
xor
es
xor
sub
dec
dec
test
and
dec
inc
sub
add
inc
and
movsl
pop
cmpsb
test
pop
idivb
sbb
inc
imul
shl
sbb
dec
call
rolb
xchg
pop
movsb
jnp
jg
inc
pop
xor
and
rcrb
mov
ror
dec
loope
and
vprotb
clc
dec
inc
lea
jp
and
push
pusha
stc
or
imul
and
popa
or
rolb
dec
inc
out
fadds
jle
cmpl
push
pop
sbb
enter
clc
jl
jmp
mov
jle
mov
lret
test
daa
jl
movl
or
add
jne
inc
mov
sub
ret
cli
jbe
dec
sbb
fdivrs
das
and
js
inc
add
pop
sub
sub
std
or
decl
add
push
add
lods
out
subb
fstl
shlb
das
jp
mov
sbb
gs
lds
mov
jnp
jb
sahf
sub
rclb
xchg
xchg
dec
jne
lds
mov
enter
or
jo
ret
mov
movsl
test
dec
sbb
or
sbb
or
sbb
adc
push
dec
lock
dec
jne
mov
xor
cli
adc
xor
je
push
ret
mov
mov
or
adc
insb
cmp
add
and
xchg
pop
adc
popa
cmp
out
mov
push
xchg
push
mov
lea
nop
push
stos
add
inc
fcomp
movl
or
jge
push
cld
jne
or
cmp
xor
cmp
ret
mov
sbb
sti
orl
push
scas
push
jbe
sti
cmp
call
add
aam
cld
inc
jne
inc
cmpsl
ret
lods
jne
and
out
push
push
ret
pop
loope
loope
jne
insb
loopne
scas
lret
pop
inc
sbb
lea
dec
sub
or
mov
ret
movb
aad
xchg
sbb
aam
cmpsb
push
mov
xchg
xchg
outsl
aad
fsub
test
aas
pop
mov
jo
inc
pusha
add
sbb
dec
mov
xor
push
or
push
push
faddl
std
outsb
mov
add
rclb
inc
or
add
fwait
and
sbb
jp
add
push
and
jl
popf
adc
xor
push
add
lods
sbbb
adc
adc
dec
rolb
sbb
pop
xor
or
repz
push
cmp
push
push
push
clc
mov
inc
call
sub
fidivrs
mov
jne
movsl
mov
lea
jl
mov
lds
pop
ds
push
push
shll
ret
and
jo
push
cmp
rcl
xchg
xor
pop
jns
dec
ss
in
pop
push
pop
pop
mov
cmp
sbb
mov
sub
movups
jecxz
dec
dec
and
out
mov
bound
push
push
imul
out
loopne
pushf
cmp
inc
add
mov
pop
add
call
jp
js
clc
mov
lods
std
hlt
push
adc
lea
push
rep
xor
xchg
cmp
mov
mov
insb
jge
jne
stos
mov
sub
xor
repnz
testb
fiadds
fwait
jge
shrb
sub
add
dec
add
push
out
mov
mov
lea
push
adc
je
xchg
sahf
je
lds
inc
loope
push
adc
or
push
jo
xchg
push
jo
or
rclb
sbb
popa
ja
push
or
int3
jno
jp
xorb
fildll
addb
jmp
mov
adc
lea
ret
sub
jb
inc
jne
inc
loope
inc
es
mov
mov
sbb
dec
pusha
add
xor
cmp
pushf
dec
inc
out
inc
imul
lods
das
xchg
adc
std
sbb
xorb
xor
nop
jo
add
push
test
mov
out
jecxz
add
fcompl
fisubrs
les
mov
mov
lret
movsb
xchg
out
lea
sub
mov
xor
icebp
cmp
in
ss
jno
ja
xchg
popf
add
inc
xchg
pusha
addl
xor
test
sbb
rcll
mov
rol
pop
mov
and
shl
dec
popl
jbe
cs
and
pop
lret
sbb
mov
fldl
addb
adc
sbb
adc
sub
push
je
xor
rcr
push
stos
fcmove
fiaddl
les
pop
movsb
sbb
jno
dec
ret
adcl
mov
je
push
push
cmp
and
mov
out
add
push
arpl
jno
xchg
in
jbe
mov
push
adc
xchg
mov
sub
inc
mov
cmp
rol
rorb
fdivp
insb
add
jmp
xor
sbb
int
push
push
pop
rorl
mov
fcoms
pusha
mov
pop
sbb
leave
lock
insb
or
inc
mov
dec
test
jge
push
shr
mov
add
shlb
mov
cwtl
rolb
in
fnstsw
call
push
ret
repnz
outsb
shll
mov
pop
push
aad
popa
add
loope
push
mov
add
add
adc
push
sub
sub
adc
outsb
xor
inc
loope
or
test
ret
add
jne
xchg
mov
cmpsb
pop
mov
push
xchg
lods
sbb
jge
inc
cmp
push
pop
sbb
and
adc
shrb
adc
push
cmp
jbe
mov
stos
and
les
dec
pop
cmpsl
inc
in
add
pushf
lods
push
mov
outsb
das
push
or
mov
cmp
cs
nop
push
into
cwtl
mov
in
shlb
mov
cmp
pop
pushf
das
sub
adc
mov
inc
mov
inc
std
mov
mov
movsb
insl
jae
add
lock
push
inc
dec
pop
out
xor
sub
mov
imul
adc
addr16
push
aaa
mov
add
cmpsb
jmp
and
xchg
mov
dec
imul
inc
add
inc
fcoms
ret
movsb
mov
mov
mov
and
xchg
cli
adc
push
xor
adc
es
dec
adc
lahf
call
push
les
les
mov
dec
pusha
sub
jecxz
adc
mov
rorb
mov
xchg
jbe
nop
pop
inc
sub
stos
fs
lock
mov
add
xchg
pusha
cmp
scas
pop
or
and
das
push
push
or
sahf
movsb
push
and
xor
pop
add
add
inc
mov
mov
std
or
pushf
jge
dec
icebp
lea
mov
js
xchg
xor
mov
cmpsl
les
cmp
rorl
xor
call
inc
gs
loopne
push
dec
seta
or
dec
push
jno
and
andb
scas
sbb
push
xchg
inc
or
push
sbb
ret
sarb
mov
dec
or
stos
dec
lods
inc
cltd
jo
mov
cmp
fwait
gs
test
cmpsl
test
add
enter
adc
adc
inc
or
inc
inc
fxch
adc
pop
inc
pop
add
push
dec
dec
or
jle
push
xor
lock
or
jp
nop
inc
pop
incl
pushf
cmp
cmp
icebp
data16
pushf
mov
pop
xchg
sbb
inc
dec
xchg
xor
inc
xor
lock
pop
push
inc
movb
cmc
fs
xchg
outsb
clc
add
sbb
cmp
mov
arpl
push
loopne
rcll
add
inc
xchg
xor
push
pop
pop
cmpb
sub
adc
or
inc
push
ljmp
dec
cmp
sub
out
and
push
les
xor
mov
dec
sub
xchg
xchg
push
push
sbb
sub
mov
aam
daa
pop
add
sub
inc
data16
mov
or
pop
pop
stc
ror
clc
rorb
or
inc
xchg
loope
fwait
rclb
in
dec
mov
jmp
gs
mov
pop
mov
inc
lock
mov
sub
pop
mov
add
aam
add
addb
add
cmp
popf
gs
sbb
jne
cltd
in
add
cmp
mov
or
sub
inc
xor
orb
shr
push
fidivs
push
adc
dec
add
pop
mov
popl
push
lock
mov
test
adc
xor
mov
aas
sub
dec
pushf
fists
popf
call
add
xchg
aaa
and
ja
sub
push
dec
mov
adc
or
or
cmpsb
xchg
inc
stos
adc
stos
cld
lcall
adc
xor
adc
in
sub
in
inc
cmpsb
pop
adc
cmp
jb
push
in
and
dec
or
cmp
lods
mov
xchg
aad
mov
inc
add
cs
aam
push
cmp
adc
adc
xchg
lea
mov
adc
mov
cmp
jmp
push
sbb
mov
or
negl
sub
clc
sub
into
sbb
loopne
les
mov
mov
add
fisubrs
pusha
popa
push
ljmp
mov
push
scas
imul
inc
call
push
ret
aad
jo
and
xor
adc
outsl
sub
adc
addl
out
lret
xchg
xor
push
cmpsl
je
inc
fadds
out
lea
nop
push
xor
and
pusha
call
jecxz
insl
mov
and
pop
adc
fabs
jle
add
ficoml
shlb
fiadds
and
test
bnd
xchg
dec
cmpsl
mov
test
jno
test
outsl
inc
call
mov
or
daa
sti
adc
or
adc
pop
sub
xchg
jmp
lods
loopne
das
add
aam
dec
fadd
push
jo
push
and
add
inc
mov
or
mov
leave
xor
cmp
cwtl
mov
dec
pop
mov
jle
test
sbb
imulb
jge
add
push
or
add
sbb
push
outsb
sbb
into
fcoml
mov
je
inc
push
push
xor
or
xchg
lret
fwait
push
pop
adc
pusha
aad
mov
and
adc
add
in
adc
xchg
sar
dec
jo
xor
dec
xlat
and
sbb
add
movsb
loopne
and
mov
mov
inc
rorb
enter
pop
sarl
push
adc
jo
mov
mov
cmp
and
mov
orb
mov
push
cmp
rol
addr16
insl
mov
jb
int3
fisubrs
cmp
cmp
orb
out
add
cmpsl
std
jmp
push
inc
sub
lret
mov
jl
mov
jg
sbb
cwtl
shrb
flds
fcomps
and
push
cs
xchg
fcoml
sbb
pop
std
mov
push
lea
add
sbb
aaa
push
not
jmp
jb
and
push
pop
add
pop
popa
xor
jle
or
push
imul
outsb
sti
xorb
or
iret
pushf
push
ja
jb
lods
inc
daa
cmp
sbb
dec
push
cld
lret
in
cmp
add
add
jno
sub
xor
xor
xor
lcall
xor
pop
lcall
xor
mov
shlb
stc
adc
outsl
bound
iret
repz
leave
repnz
sbb
imul
and
daa
add
lea
daa
adc
jne
testb
lds
adc
jb
adc
cmp
bound
mov
mov
cmp
jl
dec
or
enter
pop
xchg
mov
jae
daa
sub
jae
rorl
push
push
iret
add
rorl
fdivrs
add
xor
add
dec
test
jle
and
sub
inc
das
dec
test
sbb
sub
push
hlt
add
cmp
mov
inc
out
inc
dec
mov
cmpsl
pop
adc
test
xchg
sbb
test
je
cmp
mov
add
push
fmuls
push
js
fs
rcrl
decl
jb
cmp
jb
cmp
ja
add
jnp
xchg
aad
test
mov
add
xchg
out
xlat
add
idivb
shrl
das
pop
pop
push
fidivrl
loop
test
roll
inc
and
xor
jp
jle
fs
shl
sub
and
or
lods
sbb
cmpsl
pusha
data16
xor
pop
lcall
jae
out
xor
or
adc
js
xchg
cmc
push
rcrb
sbb
push
add
sar
push
mov
cld
sub
inc
cmp
in
mov
clc
mov
mov
add
mov
push
clc
mov
jb
or
sbb
int3
and
inc
cmp
pop
outsl
lock
push
setp
inc
mov
mov
mov
jecxz
mov
dec
dec
add
aad
adc
mov
mov
mov
jecxz
movsl
movsl
jno
mov
shrl
movsl
pop
in
pop
add
push
test
and
mov
adcl
dec
aas
add
dec
shlb
mov
pop
aas
mov
cmp
fildll
sbbb
or
mov
add
or
push
cmp
add
cmp
ds
add
popa
fsubl
mov
lahf
stos
adc
push
adc
push
lock
mov
lret
js
lds
pop
lock
xchg
pop
xor
pop
adc
jno
les
pop
and
test
xchg
dec
insl
adc
cli
adc
inc
les
cmp
iret
ret
pushf
or
outsl
notl
fs
push
imulb
and
add
add
ret
ror
inc
dec
mov
or
push
in
sahf
mov
sbb
sbb
stos
pop
xchg
xchg
adc
aad
dec
insl
scas
add
dec
cmp
sbb
adc
cmpl
sbb
pop
xor
inc
inc
xor
mov
mov
push
or
cmp
loope
adc
enter
rcrb
add
add
sbbb
mov
jne
or
inc
or
or
inc
sub
cs
adc
cmc
pusha
ja
dec
sbb
adc
push
and
xchg
in
inc
lods
or
xchg
in
clc
mov
jno
and
das
inc
je
inc
pop
psraw
jmp
rclb
push
aas
add
mov
cmpb
mov
push
xchg
jb
dec
mov
push
push
mov
pop
jo
pop
je
inc
lock
or
and
cwtl
xchg
data16
adc
xor
ret
pop
movsl
loopne
arpl
mov
rorb
ljmp
mov
call
sbb
lret
les
nop
sbb
jae
push
push
mov
pop
dec
not
clc
sub
adc
ret
jmp
push
or
jbe
push
andb
pop
push
inc
pop
and
or
jo
mov
sbb
out
xor
add
lods
dec
pop
jg
shlb
add
ljmp
cmp
mov
add
jle
inc
mov
xchg
dec
adc
dec
and
jno
and
sub
push
adc
dec
or
dec
push
and
minps
push
xchg
fiaddl
inc
lahf
push
add
test
int3
pop
push
dec
or
jmp
or
les
pop
out
add
loopne
cmp
mov
xor
xor
inc
push
dec
pop
pop
fistpl
sahf
inc
push
push
mov
pop
dec
insl
and
cmp
lea
ret
inc
lcall
push
sahf
and
and
mov
xchg
push
jns
mov
pushf
sub
and
push
jp
sahf
jp
or
push
clc
xchg
inc
mov
inc
pop
rcll
mov
out
aam
dec
fsubrs
fiadds
jmp
sbb
mov
addl
xor
fimull
sub
sbb
sbb
inc
add
mov
dec
push
add
sbb
add
or
or
sub
lahf
dec
jne
loope
pop
sub
mov
imul
das
loope
and
add
js
loopne,pn
ss
fmuls
adc
clc
push
add
loop
clc
push
scas
or
call
push
rorb
mov
testl
push
dec
xchg
dec
lea
sub
mov
push
push
jmp
pop
jmp
pusha
adc
inc
popa
add
jno
out
dec
push
pop
sub
fs
or
mov
inc
pop
xchg
mov
xchg
or
sub
push
lods
mov
add
mov
es
sub
adc
popf
pop
inc
pop
adc
add
and
xchg
bound
cmpb
insb
pop
or
mov
dec
inc
sbb
pop
add
mov
lcall
or
mov
sub
adcb
sub
mov
jno
je
push
or
loope
add
mov
test
lea
cmc
test
dec
popa
sub
js
sbb
int3
pop
cmp
jbe
adc
inc
enter
pushf
sub
add
pop
arpl
out
jno
pop
inc
inc
lcall
add
fidivl
call
mov
dec
sbb
mov
pop
mov
push
mov
adc
add
mov
fcmovu
fiadds
add
mov
add
adc
lret
movsb
adc
dec
popa
les
fadds
leave
ss
or
sbb
inc
mov
testl
jmp
in
mov
sbb
movb
sub
and
popa
jae
lahf
sbb
aad
ds
jb
push
xor
jae
or
loopne
mov
jns
add
mov
xor
insb
addr16
push
inc
je
data16
cld
jmp
inc
adc
stos
movsl
add
movsl
cmpsl
and
dec
push
adc
and
js
imul
popa
leave
ret
mov
jmp
cld
scas
arpl
inc
mov
jp
cmp
jge
and
push
dec
xchg
dec
mov
inc
loope
test
int3
adc
push
and
cmc
movb
pop
ljmp
sbb
xor
clc
call
push
adc
subb
imul
leave
je
lds
add
bound
mov
nop
addl
loope
movsb
or
dec
adc
cmp
mov
cmp
cmc
or
sub
mov
les
lea
xor
loop
out
imul
mov
jl
inc
inc
sub
sub
dec
xchg
add
out
mov
sub
sub
xor
lds
cmp
shrl
and
int
jmp
xor
stos
dec
mull
cmpsb
inc
push
inc
push
sbb
cs
mov
movl
inc
test
movsb
hlt
push
daa
movsl
daa
cmp
push
and
adc
push
mov
sbb
aas
ret
ss
js
out
inc
cmp
push
inc
loope
adc
push
movsb
fsubs
test
mov
clc
orl
mov
dec
ljmp
mov
push
in
in
mov
andb
add
push
jne
xor
imul
add
and
or
stc
push
std
pop
adc
mov
mov
mov
push
out
dec
mov
int3
loop
adc
mov
adc
les
mov
je
lds
xor
xchg
inc
xchg
jo
cmovs
push
pop
add
icebp
cmp
xchg
pop
loopne
jecxz
je
adc
aas
insl
cmp
in
dec
lea
nop
int3
stos
cmpsb
int
outsb
add
loope
add
adc
lock
cmp
sti
xchg
stos
push
jne
dec
js
decl
and
or
adc
negl
and
push
push
xor
in
ds
andb
cmp
sub
negb
sbb
push
pop
insb
insb
push
mov
sbb
shlb
push
mov
mov
rolb
push
es
arpl
movsb
inc
sbb
xchg
sti
lahf
mov
mov
fdivl
xchg
mov
fisubrs
inc
jge
and
pop
add
pop
and
and
fildll
mov
and
pop
push
sbb
lock
push
push
sbb
cwtl
dec
daa
jbe
dec
mov
inc
std
imul
push
cmc
jb
sbb
sbb
sub
dec
lcall
add
adc
lds
inc
scas
adc
jp
xchg
pop
lret
push
mov
frstor
add
jmp
rorb
mov
jp
pop
mov
in
cmp
cmp
mov
loopne
push
leave
ret
mov
sahf
or
outsb
stos
jno
lret
add
mov
repnz
std
fldcw
dec
sub
rclb
xchg
rcrl
mov
and
inc
das
enter
xor
sahf
inc
pop
jecxz
pop
aad
mov
sbb
add
mov
cmpsl
and
push
or
sbb
insb
imul
mov
xor
cmp
imul
push
inc
pop
arpl
xor
sub
inc
pop
dec
aam
xchg
jo
jbe
push
xor
lret
push
fimull
or
sub
or
fsubrs
xor
xchg
add
inc
mov
orl
push
jp
add
call
sub
dec
dec
xor
cmp
movsb
dec
push
inc
adc
mov
xor
jns
mov
push
icebp
and
pop
pop
sbb
das
es
xor
dec
pop
ret
sub
pop
cmp
cmp
or
cmp
add
or
dec
lods
pop
sub
push
rcrb
aam
insb
cmp
iret
rclb
ljmp
mov
cs
sub
xchg
inc
add
and
or
test
fsubrl
test
unpcklps
push
push
inc
addr16
jo
movsb
stos
mov
shl
pop
bnd
mov
insb
xchg
add
inc
add
mov
jne
rol
mov
adc
jns
test
or
adc
subb
add
sbb
xchg
call
add
xchg
push
clc
pop
addr16
je
std
lret
and
mov
lock
arpl
mov
push
pop
addr16
aas
cmp
fisubl
pop
ds
mov
xor
enter
dec
addr16
add
and
dec
ss
jmp
gs
add
pusha
call
dec
mov
pusha
inc
ror
repz
push
dec
push
lock
mov
sub
sub
mov
cmp
mov
and
arpl
push
ret
push
push
dec
xchg
mov
sub
dec
aas
xchg
mov
fsubl
push
inc
sub
adc
adc
xor
xchg
ss
cmp
pop
scas
call
sbbb
insl
dec
imul
mov
adc
and
xchg
push
pop
xchg
popa
test
add
inc
sub
sub
mov
jp
icebp
cs
lea
test
gs
mov
jns
sub
mov
mov
pusha
stos
outsb
sub
pop
adc
mov
sbb
xlat
add
cmp
sub
ret
push
shlb
mov
mov
lahf
mov
decl
pop
xor
mov
mov
and
add
sub
aaa
add
mov
jne
cmp
out
sub
xor
addb
cld
or
or
pop
push
cmp
pop
xchg
mov
rcrb
inc
or
rolb
pop
inc
and
mov
or
push
mov
cmp
clc
std
push
rol
xor
call
outsb
adc
movsb
in
lret
dec
bound
iret
hlt
mov
test
pop
jo
mov
arpl
bound
jo
jmp
push
dec
cmp
or
das
pop
and
inc
dec
cwtl
loop
mov
lods
jne
mov
inc
scas
sbb
je
adc
adc
xorl
sbb
and
pop
adc
fsubrs
sti
adc
sbb
push
sub
push
sbb
inc
aas
shlb
pop
adcb
cmp
cmpsb
xor
lahf
popl
fidivrs
mov
lock
aad
hlt
scas
dec
lahf
xchg
jge
fsubs
lods
pop
mov
xor
inc
clc
repz
dec
lret
das
out
xor
sub
mov
push
ds
ficoml
sbb
add
add
dec
sbbb
fwait
dec
insb
pusha
add
inc
jge
sahf
sbb
push
lock
div
rorl
pusha
inc
xor
pop
fbld
push
mov
and
sub
mov
sub
dec
jl
cld
add
test
mov
xchg
pop
or
pop
jmp
inc
add
popf
add
jo
mov
loope
mov
out
fistl
mov
xor
inc
or
mov
das
stos
inc
add
enter
mov
loopne
test
ret
rolb
lds
push
repz
and
cmp
sbb
mov
pop
dec
add
fstpt
je
mov
push
push
testb
mov
or
or
jle
push
lods
pop
cld
add
adc
movsb
test
mov
enter
mov
fiadds
fwait
imul
push
cli
xor
sub
je
pop
xor
jmp
mov
clc
inc
dec
pop
push
push
push
cmpsl
movsl
push
insb
imul
mov
ret
pop
or
xchg
cmp
add
shll
push
ret
xor
ljmp
fdivl
pop
lea
push
movsb
mov
mov
outsb
jmp
dec
lock
pop
push
popf
loop
inc
movsl
mov
jne
sbbb
sub
daa
push
mov
add
pop
shll
mov
sub
shll
xchg
jg
rclb
inc
jb
movsb
add
jmp
dec
dec
push
or
pushf
movsb
push
xchg
imul
push
and
mov
rorb
mov
adc
xor
inc
dec
adc
lcall
jle
and
cs
cmp
jno
ffree
clc
push
pop
or
xor
jbe
pop
mov
sub
aas
frstor
xchg
or
push
adc
inc
push
ds
xchg
xor
xchg
sti
dec
ljmp
add
push
and
xor
push
mov
add
pusha
cwtl
mov
push
leave
shlb
push
nop
push
sub
mov
call
nop
or
mov
and
inc
fisubrs
popf
adc
incl
pushf
arpl
sub
fs
or
add
or
jg
mov
mov
sbb
mov
enter
jge
ret
push
call
mov
push
std
sub
add
sarl
mov
insl
jge
sbb
jmp
cmp
addb
xchg
cmpsl
in
push
xchg
lods
push
mov
stos
pop
sbb
test
jmp
adcl
sbb
adc
push
adc
cwtl
lea
in
pop
fcmovu
push
ficoml
in
lcall
nop
adc
jmp
cmp
outsb
pop
outsl
xor
pop
lcall
push
cmpsl
mov
movsl
mov
push
push
or
enter
in
sub
inc
shlb
adc
pop
add
dec
mov
and
outsb
push
gs
ljmp
jg
shl
dec
push
push
cmp
push
mov
cmp
lods
pushf
lock
push
loop
or
fs
insl
add
mov
pop
movsl
inc
jmp
test
pop
sbb
pop
aad
jo
mov
push
push
movb
push
test
and
rolb
cli
jo
into
mov
pop
andb
pop
sub
push
mov
outsl
pop
adc
lds
test
push
les
in
sub
pop
scas
mov
add
or
xchg
mulb
cmp
cmp
add
cmpsl
sbb
push
inc
cmp
cmp
push
jbe
and
stos
inc
mov
add
sub
inc
adcb
mov
xchg
adc
xor
mov
inc
add
jbe
inc
cmp
mov
mov
jns
inc
add
shrb
jae
jge
mov
fistpl
inc
les
js
adc
out
sub
imul
adc
pop
or
mov
pop
jmp
or
insb
mov
jnp
pop
cmpb
or
push
push
movsl
cmp
addb
dec
sbb
mov
add
dec
cs
pop
add
add
test
push
push
xchg
imul
pop
ds
add
dec
pusha
jo
lret
sub
adc
jl
imul
imul
sub
adc
push
loope
dec
pop
movsb
add
inc
xchg
or
add
stos
xchg
xor
fisubrs
add
ret
loope
sbb
push
inc
pop
or
sbb
loopne
int3
sbb
mov
inc
inc
sbb
and
adc
or
call
push
dec
pop
dec
ror
jmp
xor
dec
out
imul
or
and
inc
or
adc
mull
push
xor
iret
sub
xor
pop
in
sub
pop
cmp
push
js
cmp
rorb
mov
or
dec
and
mov
or
push
sub
jle
out
aad
jmp
mov
push
sub
push
addl
push
xchg
jge
pop
xchg
rclb
mov
push
mov
jo
jmp
enter
outsl
jmp
fsubrp
pop
in
pop
or
fistpll
mov
fs
je
out
mov
adc
fidivrl
inc
je
sar
ret
mov
or
loope
lahf
ds
sbb
imul
cmp
jmp
sbb
push
xor
adc
dec
pop
xchg
imul
sbb
and
mov
mov
or
xchg
in
subb
in
jl
inc
sbb
out
mov
or
add
cmp
mov
pop
stos
fmull
les
dec
or
jl
or
jmp
ja
addr16
mov
fisubrs
jl
shlb
cwtl
repz
fs
xchg
xchg
dec
dec
dec
mov
push
fs
ret
jnp
ret
or
leave
mov
mov
add
push
push
push
mov
addl
hlt
insl
add
dec
add
ja
leave
dec
lahf
adc
pop
scas
or
add
rcll
cmp
js
movsb
sarb
and
push
ficoms
ljmp
jne
out
scas
push
adc
inc
push
or
mov
inc
mov
lahf
mov
and
dec
cs
mov
dec
fists
je
push
hlt
mov
insl
clc
sub
dec
test
xchg
adc
fbld
adc
mov
je
sub
sub
in
mov
xchg
push
push
mov
pop
sub
mov
out
sti
nop
mov
sub
out
lahf
jg
ds
ret
mov
sbb
adc
jmp
pop
bound
shll
lcall
pop
mov
outsb
ficompl
hlt
and
jbe
outsl
test
sub
inc
push
mov
dec
dec
mov
push
movsb
cwtl
adcb
cmp
xchg
jbe
or
lock
push
sbb
call
push
imul
pop
and
and
dec
pop
and
and
mov
jmp
push
aas
kmovb
sbb
mov
andl
push
pusha
pop
mov
sub
xchg
movsb
fcom
rcr
pusha
mov
sbb
mov
xchg
out
mov
nop
xor
in
jge
movsb
xor
rorb
enter
ror
ret
mov
je
sub
inc
bound
fs
mov
add
insl
test
add
or
push
sub
cli
js
inc
cltd
ljmp
and
fiaddl
push
adc
or
in
xor
xor
aaa
add
inc
inc
dec
fstl
pop
je
out
sbb
adc
out
mov
dec
dec
mov
push
cmp
mov
ret
dec
cmpsl
pushf
or
inc
xor
mov
aad
sahf
adc
rorl
enter
nop
push
lcall
mov
xchg
pop
inc
sub
packuswb
fildl
mov
std
push
xor
sbb
insb
bound
out
sub
push
lock
mov
add
mov
in
xor
lods
dec
pop
xor
stc
add
adc
adc
insb
xchg
jo
push
mov
xor
shll
adcl
pop
loopne
lock
pop
xor
pusha
mov
push
cmp
sub
arpl
adc
add
inc
mov
mov
xchg
mov
inc
int
push
enter
cmc
add
jne
sub
imul
je
pusha
and
icebp
push
mov
mov
push
push
mov
sbb
inc
sti
jle
das
and
xchg
scas
fists
inc
sbb
filds
xchg
xor
push
push
xor
ror
xor
adc
inc
pop
xchg
mov
jne
push
adc
aad
dec
xchg
add
loopne
subl
xchg
ror
loopne
pop
in
mov
jmp
or
xor
lock
aam
pop
push
dec
jge
insl
gs
dec
inc
lret
repz
imul
aam
lea
pop
leave
enter
jne
pop
pop
xor
jo
sub
loope
jmp
sub
sbb
cmp
pop
imul
sub
inc
xlat
xor
push
inc
or
daa
push
cmpl
push
loopne
or
inc
push
mov
mov
repnz
je
call
mov
leave
mov
ret
push
xor
dec
and
mov
lahf
mov
push
jle
adc
xlat
pop
lcall
sub
pop
add
subb
pop
js
push
ljmp
sub
pop
int
aam
push
cmovne
aad
shl
push
inc
nop
in
mov
pop
mov
mov
fstpl
adc
push
cmpsl
dec
cmc
inc
stos
enter
sub
paddusb
dec
cmpb
test
rorl
aas
js
cmp
inc
dec
or
dec
inc
mov
push
das
out
bound
or
in
nop
hlt
adc
bound
ret
cli
adc
jb
mov
add
dec
mov
push
xor
test
dec
mov
add
xor
mov
add
sbb
rolb
fildl
jp
xorl
add
push
out
dec
cs
dec
ss
mov
pop
dec
mov
push
add
fisubs
lea
and
mov
in
push
insb
or
dec
cmp
stc
loopne
push
pushf
cmp
adc
jb
xchg
fwait
adc
hlt
pop
add
movsl
addl
inc
push
daa
ret
orb
push
push
arpl
add
clc
mov
xor
inc
loopne
ja
push
cmp
push
sbb
cmpsb
jmp
sub
out
movsl
fsubp
xor
sbb
je
mov
mov
imul
dec
push
push
cmpsl
xor
pop
adc
jo
mov
ss
cmp
inc
mov
addl
add
mov
dec
ret
sets
jo
xchg
and
add
fsubs
push
and
sbb
and
push
mov
lret
add
movsb
adc
xor
xchg
addb
push
loopne
insl
ret
in
xor
mov
test
mov
sub
inc
les
sub
mov
cmc
sub
stos
xor
push
push
js
sbb
pop
stos
orb
movsb
or
shl
enter
jmp
xchg
pop
aaa
loopne
push
js
inc
in
sub
fldl
jbe
outsb
cmpsb
push
add
addr16
popf
stos
popa
jne
scas
test
adcl
and
cmp
jnp
xchg
mov
push
in
push
ljmp
pop
fldenv
push
mov
sbbl
pusha
mov
cmp
popf
xor
or
jae
adc
decb
jmp
jnp
lods
popf
ss
nop
pushf
mov
add
sarl
add
subl
add
aaa
je
cmp
sub
add
jbe
cmp
add
inc
push
sahf
adc
inc
sub
fdiv
bound
push
pop
jo,pt
dec
or
ja
loope
inc
shl
insl
fs
fs
fwait
pusha
add
test
rcr
jecxz
nop
lea
cmp
jg
mov
ja
imul
adc
lea
outsl
push
das
push
cmp
insb
inc
movsb
insb
test
sub
fnstcw
mov
repnz
push
mov
in
dec
je
and
jmp
mov
dec
pop
mov
sbb
pop
push
mov
pop
lret
jo
outsl
cwtl
xchg
movsb
mov
in
inc
sbb
out
xor
cwtl
inc
pop
jecxz
xchg
dec
cmp
pushf
subl
pop
jno
jae
mov
mov
movsl
xchg
push
pop
mov
mov
mov
mov
ret
lcall
and
lret
add
pop
mov
loopne
aam
mov
jo
mov
mov
mov
mov
xchg
addl
xchg
mov
rorb
inc
or
mov
mov
push
push
inc
dec
pop
cmp
mov
nop
inc
inc
pop
and
jnp
in
mov
xchg
mov
cmp
fsts
and
lcall
mov
pop
lret
mov
cmp
mov
dec
xchg
out
pop
xchg
mov
sbb
add
dec
lock
stos
xor
mov
out
cmp
shrb
cmp
mov
pop
imul
shll
movl
xor
jmp
rorb
jnp
andl
lds
mov
mov
sbb
aam
jg
jmp
pop
aas
jbe
movsl
in
std
adc
stc
adc
cmp
aas
mov
int3
movsb
lods
sbb
std
sti
xor
mov
aaa
mov
add
add
fiaddl
xor
add
mov
out
jns
jp
sahf
test
xor
in
inc
fsubrs
mov
sbb
gs
test
mov
mov
or
mov
outsb
push
pop
or
jne
push
or
cli
outsl
dec
mov
or
sub
lea
dec
xchg
mov
mov
insb
ds
pop
pop
enter
icebp
adc
sub
push
mov
mov
mov
xchg
xor
lea
dec
and
lea
out
xor
adcb
mov
scas
ljmp
add
cmp
push
repz
push
adc
mov
aam
nop
adc
add
movw
lcall
adc
sbb
and
pusha
cmp
and
dec
cmp
pop
cmp
jno
mov
pop
mov
movsl
cmp
insl
add
mov
andb
add
mov
xchg
jg,pn
sti
mov
jbe
lods
jns
mov
mov
sbb
push
mov
mov
enter
and
mov
or
out
cli
or
sbb
shufps
mov
mov
dec
mov
and
adc
and
add
sub
or
or
outsl
rclb
aam
inc
fadds
adc
std
or
adc
inc
inc
adc
or
or
mov
push
mov
es
add
aam
inc
push
dec
or
cmpl
add
xchg
lcall
inc
fs
std
bnd
mov
mov
rcrb
dec
xchg
adc
lret
xor
imulb
and
mov
shr
dec
mov
mov
mov
jbe
push
mov
push
xchg
je
ljmp
ljmp
push
xchg
lods
pop
push
push
lea
sub
sbb
jnp
dec
je
adc
iret
dec
or
inc
pop
fs
sbb
jne
dec
dec
es
sbb
nop
push
push
sub
jnp
movb
inc
sbbl
or
inc
push
mov
lret
movsl
jle
pop
mov
mov
shl
mov
out
mov
mov
adcb
or
fldt
pop
shl
lock
jb
cmc
leave
imull
lea
and
daa
fsubr
adc
lret
sahf
test
stos
dec
xchg
jmp
mov
adc
aas
add
sub
push
movsb
dec
or
fbstp
sub
mov
push
cmpsb
sub
cmp
or
mov
adcb
fiadds
insb
pop
ljmp
adc
inc
popl
and
add
xor
xor
cltd
lods
fcmovnu
sbb
adc
fsubl
outsl
outsb
add
cli
pop
cmp
pusha
xor
dec
mov
jmp
ds
jecxz
aas
or
mov
pop
out
lret
shrb
jg
sbb
inc
sbbl
inc
inc
pop
mov
fdivl
add
mov
lock
cmp
lret
sbb
in
push
aam
adc
loop
pusha
sbb
mov
pop
repnz
dec
dec
mov
mov
mov
pusha
adc
mov
mul
in
mov
enter
test
fwait
or
loopne
fmuls
jle
nop
push
jne
or
inc
fdivl
sarl
popa
in
add
icebp
cmp
push
push
test
fs
flds
or
add
out
add
add
xchg
mov
and
mov
stos
int3
sar
in
test
js
pop
rolb
add
cwtl
xor
mov
shlb
jl
jle
out
adc
bound
cmp
adcb
jecxz
adc
loop
test
rolb
stos
cltd
lock
dec
pop
push
xor
jmp
mov
bound
test
mov
inc
mov
stos
add
or
insb
popa
dec
bound
add
pusha
mov
add
or
enter
stc
or
xor
push
jle
jl
inc
lcall
cltd
dec
jle
xchg
iret
shll
xlat
or
decb
lret
and
dec
fidivrs
in
or
fdivs
lret
sub
hlt
mov
cmpl
enter
fistl
nop
inc
roll
xchg
enter
sub
mov
pop
xchg
xchg
lret
clc
inc
and
sub
call
pop
mov
or
or
popl
xchg
out
pop
or
add
jns
dec
sbb
sbb
xor
rolb
nopl
mov
and
rorb
mov
je
xchg
sub
mov
mov
mov
ds
and
in
sbb
dec
cmpsl
cmp
xlat
mov
outsb
xor
push
xorl
sbb
jg
add
jle
and
jmp
cmp
jl
pop
push
out
les
jmp
ja
leave
sub
adc
movsb
lret
loopne
or
cmp
mov
xchg
mov
cmp
aas
pop
push
data16
cmp
jne,pt
fs
shr
mov
dec
subb
shlb
outsb
sbb
dec
ss
lcall
and
loop
pop
rorl
je
or
pop
sar
fwait
adc
add
push
pop
inc
rorl
push
jno
lea
jge
xchg
test
adcb
sbb
xchg
xor
repz
dec
push
push
cmpl
mov
inc
cwtl
xor
push
loopne
out
adc
pop
lea
aaa
xor
jmp
xchg
inc
xor
adc
int
inc
mov
mov
inc
push
sub
cmp
sub
cmp
aas
leave
sahf
add
xor
test
add
mov
iret
mov
or
mov
ljmp
sbb
mov
or
jmp
andb
cmp
xor
xor
dec
repz
pop
mov
pushl
mov
mov
call
dec
sub
mov
and
das
loopne
scas
je
adc
int
jbe
test
xchg
popa
dec
adc
push
adc
add
cmpsb
inc
push
test
test
movsl
mov
pop
add
mov
bound
push
mov
inc
add
inc
sub
and
je
mov
xor
ret
or
ret
inc
pop
jbe
cmp
dec
dec
imul
cmp
xchg
and
inc
cmpsl
inc
mov
sbb
ds
test
jg
mov
jo
mov
or
or
pop
ret
inc
movsl
daa
test
aas
add
dec
push
imul
dec
inc
and
cmpb
adc
in
push
stos
or
mov
lahf
insl
jge
out
shl
inc
xchg
movsl
add
add
sbb
cld
add
jne
pop
mov
aam
sub
les
stos
in
ss
repz
pop
or
inc
in
jp
mov
insl
aas
lea
call
mov
lock
nop
pop
cwtl
or
push
add
mov
mov
adc
dec
dec
fcmovnb
int3
ss
ret
mov
lods
push
sbb
adc
cmp
cmp
add
or
sub
adc
lret
mov
std
mov
test
sar
icebp
mov
nop
pushf
popa
xchg
std
lea
test
mov
loopne
pusha
popa
inc
push
jne
popf
mov
ja
lcall
test
rcrl
or
mov
lods
mov
or
jl
jge
push
cs
or
mov
daa
and
and
lea
fists
mov
int
loopne
rcrb
adc
sub
scas
das
sub
rorb
jns
ret
insl
leave
sub
xor
mov
push
push
out
dec
mov
mov
mov
pop
inc
mov
push
clc
dec
bound
js
subb
add
xchg
movsl
iret
adc
jb
add
insb
jmp
add
push
jne
cli
adc
and
push
jmp
or
sub
addr16
adc
sti
mov
push
or
fs
mov
dec
imul
jl
sub
inc
xor
push
push
push
in
lcall
add
cmp
pop
test
mov
in
inc
sub
xchg
loope
imul
shll
jne
pushf
rclb
pusha
lret
or
jns
inc
dec
mov
stc
xor
cltd
and
push
mov
inc
and
cmc
fisubl
push
mov
cli
push
lock
push
icebp
adc
or
jmp
xchg
jbe
pop
jmp
sub
inc
jge
and
call
je
cltd
or
mov
mov
inc
cmp
jne
cltd
mov
pop
and
in
sub
pop
or
jo
leave
dec
aam
push
push
shl
jmp
lea
aas
mov
add
cld
fadds
push
test
mov
add
lea
gs
push
pop
lret
dec
cmp
push
popa
mov
sub
dec
inc
jl
mov
dec
insb
loop
dec
mov
jnp
scas
hlt
jmp
push
inc
cld
push
push
dec
xchg
push
cmpl
iret
cmp
xchg
nop
and
push
and
adc
mov
jge
shlb
mov
push
sub
jo
cmpsl
and
shll
out
add
ss
sub
jl
icebp
add
fidivrl
jle
push
add
aam
jge
inc
push
xchg
xchg
loopne
in
add
aam
decb
repnz
add
testb
adc
push
pop
hlt
ss
nop
and
cmp
or
or
jle
push
mov
cmp
test
imulb
add
nop
push
mov
jg
push
imul
xor
cmp
pop
jge
push
dec
mov
and
mov
jle
sub
je
add
mov
mov
jo
add
and
or
xchg
xorl
mov
or
lret
pushw
jnp
cmpsl
mov
mov
data16
cli
add
decb
in
adc
dec
push
adc
shl
sbb
inc
ds
push
inc
and
sub
add
and
dec
dec
push
les
push
sbb
je
aaa
test
shlb
ljmp
and
ret
cmp
je
inc
jmp
mov
add
mov
push
pop
xor
pop
call
push
mov
or
sub
js
pop
data16
and
jp
bound
xor
adc
add
add
fildl
push
or
push
or
shrb
sub
in
push
cmp
adc
jno
add
push
or
jbe
pop
rcrl
add
or
mov
xchg
lds
or
aas
inc
or
sub
cmpsb
dec
add
push
mov
js
leave
and
pop
inc
and
jmp
push
pop
call
cmp
inc
es
xor
mov
loop
add
or
jbe
or
bnd
enter
add
jle
dec
jne
fists
ret
xchg
adc
nop
push
push
mov
push
mov
lods
frndint
mov
pop
lahf
inc
mov
hlt
mov
shl
adc
int
lock
add
imul
adc
adc
movsb
xchg
dec
adc
movsb
dec
testl
scas
and
push
push
sbb
push
nop
push
xor
lea
shlb
loop
xchg
std
aaa
push
adc
es
or
movsl
sub
xorl
add
insb
sbb
adc
inc
pop
sbb
inc
cmp
scas
pop
add
movsb
lds
or
and
and
dec
int3
xchg
mov
mov
dec
repz
pop
sbb
adc
shlb
pop
push
aas
jnp
pop
ja
cmp
cltd
inc
test
sbb
clc
xor
lock
lea
fmull
stc
adc
ret
sbb
fimuls
inc
rorl
push
xorl
clc
sbbl
adc
cmpb
test
jge
push
and
inc
mov
dec
shrb
outsb
dec
cmpl
add
out
mov
aad
loopne
sbb
mov
or
mov
in
imul
pop
mov
or
xor
imulb
cwtl
inc
insl
pop
xor
cmp
mov
push
add
inc
and
and
pop
inc
push
push
xor
cmp
and
jbe
xor
lods
shrb
pop
inc
push
sub
pop
sbb
dec
nop
sti
cmpsl
mov
mov
push
mov
push
ss
sub
pop
nop
icebp
push
nop
push
faddl
sbb
xchg
test
dec
rclb
inc
fsubl
outsb
ljmp
push
add
fmul
dec
rolb
add
jle
js
add
fisubs
dec
lea
mov
jne
or
cmp
shll
call
outsb
movsl
inc
sub
mov
cmp
push
cmp
and
jecxz
ljmp
dec
stos
fistl
or
popa
and
movsb
loopne
or
adc
sub
mov
cmp
jne
add
sbb
add
inc
call
sbb
dec
mov
jbe
sub
test
sbb
je
add
lods
cmp
cmp
faddp
inc
dec
mov
sbb
sub
xorl
jne
xchg
call
pop
or
movsb
push
mov
or
mov
movsl
adc
xchg
push
orl
push
add
adc
fimuls
pushl
add
sbb
int
or
sub
inc
xlat
sbb
push
push
lods
lea
mov
xor
xor
xor
cmc
test
or
mov
incb
inc
add
stc
iret
push
fistpl
outsl
cmpsl
and
or
mov
pop
into
rcrb
jb
mov
cmp
sbbb
sub
inc
imul
adc
adc
ljmp
aam
es
and
jne
and
ret
adc
divl
lods
mov
lret
and
and
or
icebp
ljmp
js
push
fs
call
call
enter
shll
lret
or
xchg
or
call
clc
adc
loop
inc
out
rorl
xlat
push
decl
xchg
aad
stos
jmp
jo
and
cld
fistpl
sarl
shl
or
add
and
not
and
or
sub
fldl
into
mov
push
shr
sti
sbb
or
sti
add
mov
push
lcall
leave
cs
lods
jmp
mov
decb
jl
sbb
andl
sti
nop
and
xchg
nop
push
stc
shrl
push
xor
lds
adc
pusha
lret
dec
or
push
test
xor
pop
cwtl
push
mov
inc
xor
mov
and
mov
add
cmp
mov
xorl
xchg
aas
push
sarb
loopne
rol
mov
cmp
mov
sbb
xlat
add
faddl
cmp
or
inc
mov
lcall
ret
jp
out
push
test
mov
mov
or
adc
add
out
pushf
or
cmp
xor
lret
mov
pop
cmp
shr
iret
cmp
push
lahf
and
nop
imul
lret
bound
dec
fsts
inc
cmp
xchg
jno
std
adc
push
sub
or
pusha
and
repnz
add
cmp
cmpsb
adc
xchg
cmpsb
movups
clc
enter
pop
outsl
cmp
lea
mov
push
push
in
or
ljmp
fstpl
pusha
clc
sbb
push
idivb
loopne
add
fs
and
jmp
xchg
pop
test
inc
mov
rclb
cmp
popa
dec
add
je
and
repnz
push
pop
pop
and
cwtl
cmpsb
adc
jo
pop
or
stc
xchg
jns
nop
jmp
push
stos
mov
out
mov
test
mov
add
das
mov
and
ret
lock
or
push
ret
paddsw
mov
insl
add
cld
push
adc
add
loope
mov
or
das
mov
pop
movups
dec
popl
adc
aad
cld
cmpsl
inc
aad
sub
sahf
or
cmpsl
mov
xchg
call
ficoml
dec
pop
iret
aaa
fucomp
call
loope
out
dec
xor
orl
jnp
cli
imul
ret
mov
loopne
bnd
mov
push
lret
movsl
push
xchg
aad
jp
adc
int
jmp
in
pushf
sbb
adc
inc
mov
push
dec
and
int
ljmp
das
fldenv
jecxz
pusha
imul
mov
int
dec
mov
insb
shrl
lea
inc
stc
clc
mov
or
stc
xchg
shl
pop
sti
pop
cmp
dec
imul
addr16
adc
and
cmc
into
fnsave
dec
sub
jnp
adc
xor
xor
in
cmpsb
lret
inc
cmp
cmp
or
aam
fistpll
lock
xor
xor
mov
xor
mov
inc
adc
mov
pop
inc
shll
shlb
shl
cmp
pop
and
insl
sbb
push
push
adc
or
cmp
xlat
fs
and
adc
in
mov
sbb
mov
xchg
xor
fbstp
jl
dec
push
stc
inc
ljmp
lret
mov
iret
fimuls
je
nop
jno
lcall
jmp
int
lret
pop
punpcklbw
jbe
sub
xor
mul
fbld
xor
cld
dec
and
mov
outsb
jo
mov
repz
push
cs
xor
cli
xor
jle
sub
ret
and
sbb
ret
data16
sarb
daa
mov
in
jmp
push
cmp
mov
out
aam
fbstp
shll
call
add
mov
out
in
or
inc
out
sbb
jg
rcl
fldl2e
out
loopne
sbb
mov
lcall
pop
in
test
adc
iret
jl
pop
xchg
loopne
into
sub
pop
jge
jg
ret
push
inc
push
mov
and
push
lods
push
punpckhwd
enter
loopne
xor
sub
adc
sbb
xchg
or
stc
xchg
leave
loopne
iret
cmp
ljmp
inc
test
push
push
or
adc
or
xor
add
jb
fs
xor
fsubs
mov
cli
fwait
dec
mov
pop
pop
gs
add
lcall
and
lea
xchg
int3
or
push
pop
jb
cmp
jecxz
adc
cwtl
fimull
inc
push
jecxz
cmp
hlt
out
ljmp
adc
test
cltd
mov
jmp
subl
test
sbb
jb
inc
pop
in
cltd
pop
ss
jle
outsl
jmp
and
pop
fnstenv
xor
sub
inc
jmp
mov
repz
dec
adc
add
add
adcb
into
cld
mov
and
stc
shll
jle
mull
cs
jmp
jle
inc
cmp
mov
dec
sbb
sub
cltd
pop
pop
push
ss
sub
add
in
inc
ror
movsl
xor
ss
roll
loope
je
inc
pop
out
adc
dec
or
icebp
xor
fisubl
les
mov
popa
and
push
add
aam
mov
sbb
xchg
mov
cmp
add
inc
stos
cmp
adc
or
push
xor
loope
test
repnz
jo
or
ljmp
add
aaa
add
iret
shrl
shl
adc
and
add
pop
add
add
outsl
xorb
movl
inc
fistpll
dec
add
movl
or
mov
fdivrl
aaa
pop
jbe
xor
mov
sub
mov
sub
mov
outsl
mov
push
decl
adc
jmp
mov
sbb
dec
nop
clc
inc
mov
pop
pop
push
rclb
sbbb
add
xor
lea
lahf
xchg
mov
pop
add
cmc
or
add
add
jle
out
push
jnp
and
jl
adc
adc
pop
aam
xor
push
js
add
pop
clc
in
sbb
jle
jmp
cmp
ja
adc
push
xor
rol
pop
sbb
or
sbb
or
ljmp
rep
jl
xchg
stos
or
pop
and
push
inc
loop
lea
nop
loopne
int
leave
xor
into
cmp
push
mov
incl
jnp
sarl
sub
mov
inc
cli
cmp
mov
push
mov
ja
dec
add
xor
mov
ret
jne
clc
add
cmc
jae
add
mov
rcll
or
xor
xor
inc
pusha
sbb
xor
mov
insb
popa
mov
mov
test
cmp
lea
insb
ret
push
jge
cmc
sub
xor
lahf
and
push
faddp
outsb
movl
std
pop
rcrl
lea
or
outsb
or
dec
cmpsl
push
fwait
cmp
cmp
insb
xor
pop
imull
das
mov
add
sbb
xor
stos
sub
imul
cmc
xor
add
sbb
jecxz
mov
popa
imul
mov
sarl
ret
scas
and
sahf
shr
push
mov
mov
cmp
jae
xor
test
pusha
push
sbb
cld
ss
add
push
mov
mov
ficoml
rorl
pusha
pop
xor
pushf
movsb
sub
dec
inc
mov
xchg
push
xchg
pop
ret
and
frstor
or
shrl
mov
mov
mov
xor
pop
jle
cli
outsl
loop
jnp
aam
adc
mov
sar
inc
inc
mov
decb
fisubrl
add
int
pop
xor
ficomps
and
cmp
je
aam
add
or
xchg
lahf
sub
mov
rclb
mov
jae
mov
loop
lods
pop
addb
cmpsb
and
aas
push
dec
cmp
daa
xor
pusha
mov
daa
outsb
data16
insl
cltd
adc
jl
push
mov
in
in
ss
sbb
das
out
shll
out
xor
xchg
cmpb
jge
imul
rcrl
xor
push
cwtl
sub
mov
dec
lcall
lock
xor
call
sub
test
push
or
loopne
jnp
jno
cmp
out
inc
jecxz
rclb
out
ja
jb
rcll
xchg
in
pop
add
jne
jbe
stos
test
push
shrb
je
mov
add
add
push
insb
or
mov
loopne
cmpsl
loopne
add
xor
pop
jnp
add
inc
xchg
in
add
sub
pop
xchg
loopne
sbb
mov
sarl
add
aaa
rclb
push
sub
cmp
adc
pop
jae
adc
test
adc
xor
ss
sbb
test
adc
xor
or
lgdtl
cld
push
and
inc
adc
dec
data16
and
cmp
mov
push
roll
decl
data16
fsts
repz
addr16
insb
lock
icebp
mov
xchg
mov
mov
xor
int3
mov
test
mov
ss
enter
push
push
mov
mov
jp
sub
xor
push
sub
sbb
imul
insl
mov
aad
mov
pop
push
hlt
loopne
sbb
in
inc
mov
ret
int3
cwtl
test
int3
push
rolb
jmp
lret
call
mov
sarl
std
adc
dec
addl
add
outsb
dec
mulb
mov
jb
rcll
jae
xchg
imul
adc
dec
dec
adc
add
fdivrl
adc
inc
shl
lods
cmp
inc
push
aam
es
enter
lea
jle
clc
pusha
subl
fcomps
or
mov
sub
test
jne
js
dec
cld
push
cmp
mov
mov
aam
add
popl
popa
push
push
xor
pop
test
mov
stc
and
in
push
pop
sti
gs
jmp
rcrb
lods
jle
repnz
lea
mov
into
sub
shlb
in
incl
inc
mov
mov
mov
or
adc
mov
cltd
add
sub
inc
add
dec
jne
push
mov
xrelease
sbb
sub
inc
ret
je
pop
ret
sbb
aad
roll
jmp
es
shlb
adc
popa
js
loope
pusha
pop
popa
je
adc
dec
adc
jle
test
test
push
inc
out
fcomp
lret
push
add
ucomiss
sbb
mov
add
pop
sbb
pop
in
repnz
mov
dec
cmp
xor
fistpl
dec
ljmp
das
push
push
jb
aam
mov
adc
in
in
inc
add
push
mov
push
xchg
push
jbe
lret
das
pop
in
cmp
jb
mov
pop
js
mov
jbe
daa
or
das
or
and
sub
or
and
pop
jb
movsb
push
xchg
jb
loopne
sbb
aas
adc
cs
adc
cs
xchg
pop
adc
das
adc
fs
or
adc
jb
or
pop
test
push
add
rclb
pop
push
and
add
jg
add
rcrl
roll
push
sbb
mov
cmp
add
movsb
mov
int
push
push
and
ds
xchg
push
jnp
jnp
fisubrs
and
jb
push
les
and
scas
push
jb
jnp
mov
jb
in
lock
shll
idivl
ljmp
leave
jmp
pop
repnz
pop
inc
dec
xchg
mov
push
jb
in
ss
rorb
xchg
negl
push
adc
popl
movb
add
sub
add
pusha
repnz
rorb
xor
push
or
jl
push
or
fisttps
aam
inc
sub
mov
cmp
add
test
cmp
cmp
push
jp
sbb
dec
enter
pop
xchg
adc
and
mov
add
xor
iret
sbb
dec
xchg
push
cmp
dec
pop
push
push
sub
outsb
xchg
sahf
divb
pop
jp
or
jmp
sti
push
test
inc
inc
push
cld
push
out
in
mov
mov
insl
addr16
push
mov
sbb
or
inc
add
add
imul
dec
lea
push
add
outsl
xchg
jge
je
jmp
adc
icebp
aam
dec
adc
dec
mov
sub
dec
sub
jo
mov
dec
inc
mov
mov
call
ret
lds
or
mov
sub
xchg
jle
fmull
add
cs
mov
push
inc
jne
jp
push
aam
dec
adc
mov
jno
cmp
fimull
rolb
aam
andl
inc
ret
mov
pop
movsl
mov
mov
adc
sub
sbb
sbb
pop
sbb
and
cmp
mov
push
lea
stos
lods
or
mov
sbb
add
popf
dec
leave
cmp
mov
mov
inc
add
dec
inc
dec
adc
push
pusha
mov
adc
inc
negb
push
push
xchg
fcmovnbe
lahf
pop
dec
adc
cmp
lods
pusha
fistpl
inc
rolb
pop
adc
xor
mov
icebp
mov
daa
push
xor
jo
sub
mov
and
add
xor
repnz
add
les
pop
or
mov
push
aas
jmp
add
xchg
add
lods
add
dec
lds
jle
repnz
and
aaa
sub
mov
add
sbb
xchg
mov
push
add
inc
xlat
nop
xor
mov
aaa
movsl
jp
adc
jnp
pop
or
adc
mov
mov
jp
outsl
or
aas
sbb
jl
stos
test
aas
sbb
pusha
imul
sbb
test
inc
jmp
and
mov
mov
inc
clc
jl
mov
push
subl
push
iret
inc
fisttpll
lds
fisubrl
or
pop
insl
xchg
and
rol
dec
sarb
jb
ret
arpl
int3
fninit
adc
add
pop
add
or
fs
push
xor
inc
sub
mov
cmpb
sub
ret
mov
call
pop
xchg
imul
inc
enter
pop
and
sbbl
rolb
push
call
aam
sbb
adcb
sarl
sub
push
push
and
mov
add
test
xchg
cmp
adc
mov
sahf
jne
loopne
popf
mov
cmp
fadds
push
test
call
clc
js
in
fildll
mov
scas
fdivs
mov
xor
sub
jno
mov
adc
clc
mov
xor
addr16
ret
pushf
or
xor
rorb
and
push
jo
ljmp
dec
mov
cmpsb
push
cli
pop
popa
adc
shrl
push
jbe
cmp
inc
xchg
add
mov
dec
inc
rol
inc
jge
push
jno
mov
and
test
mov
loop
xchg
and
xor
mov
ret
xchg
orl
repz
daa
dec
sub
and
push
inc
popa
loop
adcl
mov
mov
sbb
ret
push
leave
arpl
lods
and
sbb
push
ds
sub
lock
sbb
inc
add
and
push
icebp
aas
popa
pusha
add
mov
add
loopne
adc
push
rol
outsl
pop
aam
cmp
xor
mov
bound
jge
and
ret
add
jo
push
and
add
ss
or
inc
cmp
je
dec
xor
and
xchg
std
xchg
jge
movb
inc
push
push
adc
sub
mov
pop
push
sub
jle
popf
xchg
pop
xchg
mov
adcl
fwait
js
subl
mov
inc
and
lods
jns
xor
jmp
sbb
popf
mov
imul
inc
and
pop
into
push
mov
add
enter
or
pop
push
int3
pop
mov
push
jecxz
stc
jbe
lcall
inc
pusha
add
sbb
repz
bound
mov
jbe
pop
push
and
ja
repnz
push
out
add
jp
adc
aaa
rol
xor
xlat
jo
fdivrs
mov
push
ds
mov
mov
mov
xchg
sbb
push
push
outsb
enter
jle
inc
inc
add
call
sub
jnp
xchg
mov
sbb
inc
or
in
inc
add
fmul
shll
add
mov
lods
fisttps
mov
adc
push
pop
sub
add
shlb
adc
movsb
fwait
push
adcb
inc
sub
xor
sbb
pop
push
sbb
in
into
subb
push
lret
push
xor
test
jo
pop
arpl
jae
sti
inc
mov
adc
aas
or
dec
rorl
int3
and
clc
sbb
add
add
insb
and
push
lea
xchg
and
ret
pop
popa
push
mov
cli
add
dec
mov
std
leave
ret
jnp
incl
aaa
xchg
cmp
test
and
mov
cwtl
nop
pop
popa
sub
mov
add
lahf
mov
add
jae
js
nop
dec
inc
fiaddl
xchg
int3
push
jo
ja
orw
addr16
out
push
sub
rolb
sbb
nop
mov
neg
jnp
das
data16
js
mov
xchg
mov
mov
fldl
ljmp
push
adc
cmp
das
aaa
jns
insl
push
pop
jge
jo
pop
jecxz
mov
aas
inc
add
insb
fwait
mov
adc
xlat
push
push
dec
adc
rcrl
outsb
sbb
xchg
jbe
sub
mov
adc
fdivl
repnz
sbb
jo
and
es
scas
sbb
xor
dec
push
and
add
cmp
je
and
push
xor
mov
jo
shll
cmp
push
xor
fsubl
sbb
xchg
fsubrp
dec
adc
jo
and
in
mov
inc
and
lcall
dec
test
inc
stos
dec
dec
mov
pop
inc
out
in
jmp
add
push
xchg
cmp
push
mov
cld
and
or
in
mov
xor
sub
outsb
and
add
inc
lret
or
xor
push
mov
std
cmp
xchg
sub
mov
jbe
pop
mov
ss
sbb
cmp
adc
adc
push
adc
hlt
shlb
or
or
ret
cmp
inc
dec
data16
bound
ret
test
dec
mov
or
sahf
adc
pop
dec
pop
pop
pop
cmpsb
movb
pop
aam
sbbl
xor
push
dec
sub
lcall
pop
mov
and
xchg
mov
xor
add
inc
xor
pop
inc
leave
and
or
fimuls
popf
inc
xor
or
and
xchg
xor
je
pop
dec
loopne
js
and
pop
dec
push
sbb
dec
inc
push
cmp
add
adc
jns
pusha
and
lea
pop
and
add
outsb
add
call
or
add
push
mov
pusha
sbb
mov
dec
fadds
ds
ficomps
mov
imull
sbb
inc
lods
pop
pop
add
aaa
sti
pop
lahf
pop
jb
adc
or
push
jg
mov
movl
sbb
insb
or
dec
aam
pop
rcrb
xor
pop
mov
nop
or
lcall
pop
leave
push
popa
add
movsb
fs
mov
outsl
icebp
xchg
dec
mov
pop
je
cmp
pop
in
fisubs
mov
cmp
xor
shrl
loopne
dec
push
add
mov
lahf
mov
mov
adc
and
add
jno
adc
or
in
int3
es
push
push
rorb
fwait
dec
mov
dec
xor
cmpsl
dec
jl
mov
cmc
in
roll
iret
out
push
cmovl
aas
mov
std
scas
test
popf
sub
ss
movsb
cmp
shll
les
fbld
scas
call
lds
xchg
rcr
mov
inc
push
cmp
aad
out
enter
inc
shrl
fistpll
xchg
lea
je
sub
dec
add
rcrb
iret
pushf
loope
test
insb
loope
or
dec
add
mov
dec
xor
cmp
dec
lcall
xor
add
fisttps
xor
inc
dec
lea
inc
insl
sti
pop
rorl
pop
pop
jo
jle
push
sbb
push
push
dec
rclb
adc
nop
dec
dec
inc
add
pop
push
je
pop
test
mov
mov
pop
insb
rorb
push
xchg
mov
pusha
pop
cmc
aaa
push
aam
addb
testb
insb
mov
lock
lret
or
cmpsb
movsb
add
sub
repnz
decl
shlb
movsb
and
lcall
inc
jno
pop
inc
add
fs
shll
loopne
push
add
jge
adc
test
add
mov
push
insl
mov
add
push
sbb
cwtl
ja
lret
xlat
das
push
sahf
adc
or
leave
and
cmc
mov
add
add
into
jns
or
das
sbb
movsb
jmp
xor
cmp
fists
add
cmp
mov
mov
or
xor
sti
add
push
pop
push
xchg
jp
push
mov
nop
clc
loope
pop
stos
pusha
pop
sub
in
push
pop
inc
fsubrp
fsub
add
cmp
and
dec
cltd
or
or
xchg
fdivs
test
inc
cwtl
add
insl
sub
cmp
insl
dec
add
dec
mov
movsl
or
pop
filds
inc
sub
xchg
sbb
mov
push
mov
sub
adc
inc
push
or
bnd
sub
dec
jmp
inc
popa
loope
and
movb
aaa
repz
inc
cmp
cltd
movsb
pop
repz
je
test
bound
dec
pop
jns
sub
push
lret
sbb
sahf
xchg
out
or
fs
fdivrs
add
and
add
jns
inc
flds
fsub
xchg
jo
xchg
out
into
mov
inc
cmovns
mov
add
adcb
shrl
inc
cmp
push
xor
push
gs
sbb
dec
nop
arpl
inc
and
rorb
inc
nop
adc
cmpsb
sahf
add
xor
sub
fbld
inc
sbb
dec
fstpl
push
sub
or
jae
jg
add
add
js
sti
ret
inc
sub
mov
sub
cmp
shl
mov
add
pushf
neg
push
push
mov
sbb
cwtl
fs
push
pop
ss
pop
je
movsb
add
sti
aam
ret
push
je
or
or
xor
shll
xor
enter
lods
mov
lods
xor
sub
mov
dec
jb
or
push
lods
lods
xor
cmp
insb
enter
add
movsb
xor
or
clc
cmp
add
or
push
loopne
pusha
and
sub
push
add
xor
sub
and
ds
xor
jecxz
les
fcomps
rcrb
xor
mov
sbb
movsb
stos
test
pop
push
imul
jns
dec
sbb
js
pusha
fbld
loope
add
call
or
mov
lcall
xchg
jo
add
dec
dec
test
sarb
imul
jo
outsb
pusha
inc
sarl
dec
stc
ret
sub
es
pop
jno
push
addl
push
outsb
or
cmp
fs
sub
or
rclb
push
or
pop
xor
sarl
fists
pop
insl
push
dec
aaa
sub
hlt
outsb
and
sbb
fsubrp
loop
mov
inc
mov
stos
inc
rorb
mov
cmp
xor
addb
or
notl
xchg
mov
dec
test
or
jbe
or
loope
out
push
loopne
pop
adc
lea
push
aas
fs
fadds
leave
mull
sbb
pusha
or
mov
xchg
mov
daa
ljmp
insl
dec
inc
inc
lea
xlat
out
push
adc
int3
adc
push
xlat
add
or
inc
imulw
les
loopne
push
cmp
in
sbb
loopne
xor
test
in
add
mov
aam
dec
and
mov
in
pop
fdivrl
push
xchg
popa
push
push
ret
pop
inc
inc
and
decl
in
or
ds
sub
sub
je
cmp
adc
xor
loope
mov
pop
lds
andnps
addl
jle
mov
icebp
rcll
xchg
mov
fstl
test
lds
add
es
mov
push
aad
negb
dec
add
or
sarb
mov
ret
loopne
push
mov
insl
or
push
push
pop
jg
adcl
push
arpl
and
leave
push
ret
inc
mov
pusha
push
adc
out
xchg
mov
add
aam
cmp
js
je
mov
push
js
xorl
sbbb
pop
les
pop
add
lret
aas
mov
and
gs
loope
push
push
adc
and
and
adc
movsl
subl
mov
jmp
out
mov
nop
les
fildl
mov
lret
fs
aas
push
cmp
adc
lea
jno
sbb
cmp
popf
jo
mov
pop
aam
insl
fcmovnu
push
aas
xor
in
sbb
stos
dec
mov
xchg
mov
repz
rorb
push
push
or
ret
dec
dec
and
cmp
les
cltd
shll
dec
add
pop
pop
lcall
inc
mov
rclb
add
push
inc
xor
movsl
or
mov
xor
or
push
dec
adc
xchg
or
add
add
pop
imul
mov
lds
push
popa
jmp
cmpsl
mov
add
jl
loop
inc
stos
mov
adc
or
cmp
lcall
lahf
inc
shlb
jg
push
mov
jae
gs
call
sub
add
inc
jmp
jo
inc
inc
and
dec
cmp
sub
pop
clc
sbb
test
icebp
mov
pusha
mov
je
fs
adc
mov
mov
inc
inc
cmp
jmp
cmp
cmp
adc
add
rorb
lcall
add
shlb
add
in
inc
jp
mov
das
pop
cmp
movsb
mov
add
enter
es
dec
imul
xchg
adc
cmpsl
aad
add
pop
adc
dec
jecxz
xor
addb
lret
sbb
hlt
lds
stos
aad
add
incl
cli
sets
inc
xchg
std
inc
sbb
icebp
pop
lret
outsl
test
cmc
rcll
mov
cmp
mov
xchg
xchg
int
or
jne
imul
jns
cmp
xor
and
int3
dec
dec
lahf
pop
or
adc
je
and
sbb
inc
lock
inc
mov
sbb
push
mov
cmpsl
mov
or
popf
fimuls
xor
add
mov
loop
adc
jp
imul
mov
adcb
shlb
jb
and
or
outsb
sbb
push
iret
inc
out
mov
or
popf
pop
adc
into
push
sbb
dec
jne
mov
adc
rclb
dec
mov
movsb
sub
push
or
adc
test
sarb
sbb
mov
int
sub
pop
ljmp
pop
es
adc
mov
xchg
adc
dec
cmpsb
nop
lea
jecxz
outsb
dec
jl
mov
pop
xor
movsl
popa
rcrb
dec
jle
dec
movb
mov
and
or
adc
mov
xor
jg
adc
lock
sub
mov
movsl
sub
push
je
and
jno
imul
popa
or
cmpsl
jo
jmp
pop
xorl
add
test
pop
out
pop
shrl
inc
test
popf
loope
xchg
ss
cmp
popf
push
push
pusha
pop
xor
popa
movsb
push
sbb
push
sbb
out
ror
add
adc
inc
dec
fildll
js
or
mov
sub
jns
arpl
xchg
pop
adc
xor
jo
add
mov
std
jmp
push
fs
lods
pop
ja
out
push
adc
hlt
dec
lock
jg
mov
aam
por
inc
lea
sbb
mov
lods
shlb
sbb
pop
xorb
nop
test
lods
ret
test
pop
jb
add
and
sub
movsl
and
xor
mov
scas
or
pop
push
add
out
sbb
mov
lret
mov
and
inc
nop
dec
sub
lret
aad
rcr
aam
sub
jle
add
add
xchg
popf
dec
sub
aas
sub
xor
inc
xchg
jmp
js
dec
inc
or
stos
xor
pop
movsb
jle
mov
push
cmc
dec
decl
cmp
lea
adc
leave
mov
push
sub
imul
or
sahf
aad
mov
push
sbb
push
test
sbb
shll
jae
inc
pop
pop
mov
dec
sbb
loopne
scas
mov
and
rorb
xchg
and
or
adc
lock
out
daa
mov
cmp
cmp
inc
cmc
add
mov
or
adc
inc
mov
movsl
or
fisubrs
pop
or
xchg
mov
shrb
mov
add
js
movsl
std
das
inc
push
mov
inc
add
xchg
jmp
sub
mov
inc
fadds
iret
mov
mov
pop
mov
dec
dec
jg
or
popf
out
inc
push
lea
push
lret
push
push
and
leave
push
popa
and
int
les
fcomps
xchg
sbb
jecxz
or
test
insb
add
fnstsw
adc
push
xchg
sub
mov
or
popa
lods
jo
or
lcall
push
movsl
sbb
lea
pop
mov
push
lahf
mov
lret
enter
push
lods
in
shrb
mov
push
je
or
test
ficoms
int
jbe
arpl
mov
sub
push
sbb
subb
inc
pop
inc
dec
and
cli
jne
sbbl
enter
inc
nop
push
mov
or
rcll
xchg
loope
push
adc
hlt
lea
les
je
loope
jae
cmc
rcrb
push
jae
loopne
imul
imul
mov
xlat
mov
push
push
je
xor
push
daa
orl
mov
adc
mov
sbb
xor
jno
jnp
add
scas
popa
ljmp
add
addr16
lret
adc
call
sub
cmp
imul
es
sahf
inc
add
xchg
orl
cmpl
cmpsb
ljmp
sbb
test
stos
ja
frstor
or
cmpsl
mov
and
ret
sbb
data16
and
xor
adc
jnp
mov
push
ret
ljmp
shlb
loope,pn
sahf
es
test
lods
insb
in
jg
mov
mov
mov
jle
adc
int
popa
jae
mov
ret
outsl
pop
movsb
ds
and
xchg
push
pushf
add
mov
orl
popf
loope
mov
pop
add
mov
cmp
add
rolb
insb
ret
xor
inc
cmp
push
ret
xor
in
push
sbb
push
sub
sbb
push
or
leave
sbb
mov
test
xchg
add
sub
dec
cmc
fldt
push
and
mov
xor
ffree
pop
inc
cld
adc
les
or
bound
dec
push
ds
pop
ret
inc
dec
call
or
cmp
adc
jbe
push
jge
jle
pop
dec
dec
push
adc
push
cltd
pop
into
adc
sub
mov
or
add
inc
and
rorl
popaw
loope
add
sti
sbb
push
jle
mov
daa
stos
adc
push
or
in
fisubrl
pop
cmp
movsb
daa
inc
dec
inc
insb
add
jl
out
scas
cwtl
sub
xchg
and
pop
fcmovb
stc
adc
clc
les
pop
sbb
push
xchg
fnstenv
imul
xchg
sub
movntq
dec
int3
xchg
andl
jb
pop
jge
xchg
mov
sbb
pop
adcl
into
jecxz
xchg
dec
aas
jmp
push
stos
sub
test
int
and
cmp
sarb
pusha
adc
and
pusha
xchg
push
add
add
rcl
push
or
sbb
ds
outsl
repnz
sub
inc
daa
or
push
add
sub
mov
outsl
or
push
sbb
es
xor
xchg
fisttpl
dec
and
push
sub
mov
push
nopl
fstp
sbbl
sbbb
cmc
pop
sbb
cmp
push
nop
adc
int
xchg
cmp
push
dec
mov
push
addr16
sbb
adc
xor
sbb
test
js
test
pop
aad
ja
in
push
fmull
adc
cmp
test
pop
jo
xor
inc
stos
cli
sbb
mov
lock
sbb
clc
daa
mov
cmp
jne
cmp
push
stos
push
adc
clc
out
cmpsb
mov
mov
cmp
aaa
loopne
inc
repz
xchg
inc
pushf
jns
mov
lea
imul
sti
add
outsb
or
es
lret
pop
xor
in
movsl
fdivrs
sbb
ss
aam
push
insl
lock
cmp
push
cmp
insb
xchg
orb
and
mov
shrl
test
daa
jne
push
and
es
es
jmp
xor
inc
push
inc
into
push
or
dec
sub
xchg
lock
xorb
mov
push
sbb
stc
and
mov
adc
mov
push
adc
jg
icebp
push
push
lock
push
jmp
add
dec
adc
inc
dec
adc
imul
das
mov
pop
icebp
orb
fwait
lock
testl
jge
ja
cld
xchg
cmp
xchg
add
adc
pusha
pop
sbb
jo
add
adc
mov
ret
in
mov
jo
add
test
stos
sub
dec
std
push
popf
loop
sbb
and
push
loop
push
sub
jl
inc
push
dec
xor
or
in
add
and
insl
pusha
jb
push
lods
arpl
push
les
popf
sbb
xchg
mov
ret
adc
mov
call
insb
push
scas
gs
pusha
push
or
loope
add
or
add
cmp
mov
push
std
xor
jl
sbb
cli
add
push
add
jl
cmp
jge
or
lds
popa
mov
loopne
pop
inc
mov
push
out
in
jbe
aas
cmpl
leave
js
in
clc
inc
mov
lea
loop
inc
leave
push
push
jo
sbb
rcll
into
mov
add
mov
lahf
sub
cli
lahf
add
xor
sub
js
icebp
lock
jbe
pop
cmp
cmp
std
pop
std
sbbb
xor
push
sti
add
inc
jge
inc
inc
pop
punpckhbw
cmp
dec
call
add
in
xchg
adc
pop
enter
pop
sub
das
fdivs
xchg
sbb
cld
movsb
or
inc
pop
int3
jns
push
xchg
orl
test
or
add
lahf
push
push
cmp
dec
xor
push
out
popa
mov
addb
adc
sub
scas
cmp
je
push
push
stos
and
int
xor
pop
sbb
mov
out
cltd
mov
es
mov
cmp
adcb
add
adc
in
mov
mov
test
out
inc
push
insl
sub
push
fimull
mov
adc
mov
fucomi
addb
jp
pop
jne
ljmp
jl
xor
jns
dec
aad
push
adc
stos
shrl
jae
mov
pop
and
enter
insb
test
pop
adc
roll
aas
icebp
inc
add
in
mov
sub
sti
xchg
sbb
lahf
pop
es
test
jge
xor
jne
movsl
popa
add
xchg
mov
std
rcll
lock
mov
sub
test
jmp
pop
pop
aaa
sbb
pop
dec
test
out
xor
jle
inc
push
ret
adc
mov
jo
xchg
adc
movb
data16
lea
or
xchg
add
daa
nop
inc
add
rolb
aas
mov
and
xchg
in
inc
inc
xchg
mov
mul
add
cmpb
add
push
add
inc
adc
pop
sbb
or
and
out
add
cltd
shl
test
add
dec
push
push
icebp
mov
sbb
jle
add
ret
shrd
outsl
dec
lock
cs
lea
jle
fidivl
flds
lret
sbb
push
mov
adc
sti
pop
ljmp
loopne
mov
cmp
popa
rcrb
dec
xchg
and
notb
push
or
xchg
mov
and
in
mov
inc
cmp
rorl
loopne
xchg
mov
and
fstpt
mov
in
add
ret
loopne
add
sbb
cmp
sbb
push
inc
sbb
pop
xlat
pop
js
shr
mov
std
cs
es
add
in
popf
jge
rcrl
fcoms
and
or
arpl
fldcw
jno
insl
test
and
or
add
or
push
mov
std
and
jns
xor
setne
je
add
push
jnp
rorl
dec
mov
adc
arpl
sbb
lock
xchg
js
pop
sub
cli
call
cmp
lcall
dec
scas
push
lods
mov
sub
inc
inc
out
mov
repnz
add
or
fimull
rclb
popa
mov
dec
push
sbb
fldt
jmp
push
sahf
push
rorl
fs
and
aaa
pop
shrl
cld
jne
sbb
int
inc
pop
xor
rol
mov
jno
pop
sub
sbb
ret
xchg
inc
or
fwait
adc
outsb
adc
xor
mov
sbb
cmpl
push
push
jo
pop
fstpt
adc
cmpsl
add
inc
fsubl
adc
out
cmp
addr16
gs
pop
xorl
jmp
xchg
push
xchg
inc
mov
pop
xrelease
sub
xchg
push
or
xor
inc
mov
aas
mov
sbb
and
aas
dec
ss
dec
dec
inc
push
push
pop
add
mov
and
and
adc
push
adc
jp
pop
pop
sbb
inc
xchg
jmp
mov
in
adc
push
pop
inc
cmp
jo
sarl
pop
movb
push
sub
sbb
shl
jo
aam
xor
sub
push
sbb
insb
push
outsl
test
push
outsl
add
jno
loope
dec
inc
psubsw
testb
xor
adc
xchg
mov
cmp
jmp
imull
fwait
add
inc
jnp
cmp
push
adc
push
bound
es
xchg
or
add
xchg
and
or
shr
adc
cmp
fsubs
fdivr
insb
inc
push
fwait
mov
pop
sub
insl
cs
addb
and
test
lock
rep
sub
sbb
scas
add
push
les
push
addb
into
mov
rolb
mov
mov
das
cmp
pop
push
mull
sahf
sbbb
or
clc
add
fistpl
dec
mov
push
mov
pop
movl
sub
gs
shl
sbb
inc
xchg
lock
insb
pop
test
push
shrl
or
pop
and
stos
adc
push
test
mov
add
inc
xchg
xor
test
lret
push
lds
loope
or
xchg
lret
dec
pop
test
sub
push
adc
xlat
push
mov
or
pop
push
movsl
inc
test
or
or
outsb
inc
mov
mov
dec
fisttpll
sub
xchg
addr16
or
scas
cmp
push
subl
push
mov
push
xchg
je
inc
jno
or
roll
cltd
ffree
jg
cmp
pop
push
popa
sbb
adc
adc
pop
dec
pop
or
int3
mov
dec
inc
adcl
pop
in
or
dec
cmpsl
push
push
or
dec
push
cmp
xchg
or
pop
mov
dec
js
mov
cmp
add
fs
loopne
shll
adc
pusha
sbb
icebp
cmpsb
mov
pop
jno
rol
add
or
lret
push
test
shll
dec
add
mov
jbe
les
je
call
or
dec
inc
inc
inc
test
and
inc
mov
dec
add
or
jo
push
lds
in
push
icebp
or
mov
imul
mov
in
mov
and
dec
mov
fs
sbb
dec
push
mov
jmp
loop
push
in
loopne
push
dec
or
pop
leave
or
fistps
sbb
push
dec
adc
enter
and
push
mov
rcrb
jmp
lahf
sbb
js
mov
mov
sbb
xchg
and
xor
push
pushl
lock
or
jp
push
adc
push
xor
dec
or
out
push
sbb
cs
data16
jmp
pop
jl
sbb
mov
or
pop
lock
call
cmc
push
jle
mov
pop
inc
mov
add
shrl
cld
in
sub
ret
call
pop
or
pop
inc
je
cmp
xor
dec
mov
je
mov
mov
addl
insb
push
or
push
add
xor
cwtl
pop
les
mov
cmpsb
cld
cmpsb
and
inc
or
mov
insb
push
hlt
adc
push
or
push
movsb
or
jae
xchg
and
xor
sub
js
adc
outsb
add
adc
mov
sub
sbb
mov
out
decb
add
pop
lds
mov
sti
push
and
rorb
fcomps
add
sub
js
add
mov
adc
or
pop
ljmp
and
mov
mov
jle
push
and
aaa
jno
push
cmp
and
sub
mov
dec
sub
pop
dec
lods
push
push
imul
or
mov
push
test
call
popf
adc
xlat
fisubs
cmc
push
sub
jo
and
sbb
inc
jne
sub
adc
scas
test
push
push
pusha
sub
xchg
rolb
add
and
lcall
pop
sti
add
lock
aad
dec
and
imul
sbb
or
pusha
aaa
push
xor
add
lock
sub
dec
add
cltd
push
cmp
sarb
sub
jmp
in
pop
aaa
jmp
shrb
lods
jnp
or
test
xchg
das
cmp
sahf
shlb
pop
and
hlt
ret
pop
je
into
clc
push
sbb
adc
cmpsb
jle
sbb
pop
fisttpl
push
jp
lahf
push
cld
sbb
mov
adc
jno
add
sbb
iret
xchg
aaa
cli
and
mov
push
inc
or
int
jecxz
mov
dec
push
xor
pop
cs
mov
lods
push
dec
loope
add
bnd
push
cs
xorb
add
test
pop
cmp
loop
inc
xchg
mov
add
mov
pop
add
dec
icebp
loop
mov
mov
orb
push
mov
push
faddl
es
outsl
pop
xchg
sbb
mov
in
dec
cmp
shll
mul
das
jmp
adc
inc
push
xchg
or
or
std
cmp
int
sti
push
loop
mov
xchg
cltd
jg
add
mov
nop
jnp
fidivrs
adc
xor
enter
cmpsb
mov
push
sbb
loope
fadds
sbb
sub
xor
fdivl
shrl
mov
pop
push
pop
add
inc
fcomps
inc
das
das
fwait
add
adc
adcb
cmp
xchg
dec
sbb
xchg
xchg
inc
or
jns
fisubrl
xchg
xor
and
xlat
ja
test
in
stc
pusha
dec
les
and
dec
pop
push
fsubrl
rdmsr
push
inc
cmp
add
add
mov
jbe
dec
lds
inc
sbb
add
adc
bound
aam
cld
movsb
mov
xchg
out
push
sarb
jle
push
sub
in
or
add
jg
fimull
insb
mov
mov
imul
ret
inc
inc
fisubrs
add
or
and
lcall
insb
adc
jo
enter
dec
jnp
add
jl
mov
mov
mov
sub
mov
test
and
add
lods
in
xor
decl
pusha
or
daa
movl
jno
daa
test
stc
pop
imulb
add
or
leave
add
loop
mov
rcl
cmpsl
lock
xchg
dec
jmp
dec
pop
cmpb
enter
add
mov
inc
push
sbb
or
add
mov
mov
mov
sarl
adc
test
fsubrl
jnp
and
pop
xchg
loop
inc
or
pop
push
mov
ja
mov
xor
mov
inc
dec
nop
inc
imul
aam
adc
je
xchg
lods
xor
sarb
inc
cld
lea
test
push
loopne
push
cmp
data16
andb
lret
inc
mov
push
push
pop
add
pop
aad
push
ss
pop
and
adc
insb
test
inc
inc
adc
div
mov
add
cmp
mov
or
xlat
mov
mov
stc
xchg
xchg
jbe
adcl
in
add
repz
mov
jbe
mov
lcall
sbb
add
push
stc
xor
push
jns
adc
mov
mov
add
mov
sbb
push
or
loopne
hlt
add
and
inc
xor
insb
add
jns
push
or
add
imul
inc
and
test
mov
mov
rorl
and
add
jnp
dec
dec
cmp
cmpsl
and
add
and
fadds
jne
loope
popa
xlat
cmpsb
push
dec
aaa
fwait
inc
mov
inc
add
jo
dec
mov
aad
inc
bound
call
push
out
xchg
add
push
lea
mov
imul
mov
sbb
add
cmp
or
or
jb
cld
lcall
mov
mov
sub
mov
mov
adc
cmp
jl
loopne
je
dec
pop
ret
push
insb
mov
inc
adc
dec
lea
ficompl
jg
bswap
push
pop
mov
dec
je
dec
jne
dec
pushf
xchg
sbb
dec
xor
rorb
push
sbbb
push
in
ret
ds
inc
inc
iret
mov
add
mov
jecxz
sbb
fidivs
int3
arpl
cmp
js
out
mov
jg
fsubl
inc
sbb
add
insb
sbb
sbbl
leave
cmpl
dec
sub
push
add
aam
xchg
xor
push
sbb
lea
pavgb
inc
cld
pushf
adc
jg
stos
lahf
mov
popl
mov
inc
adc
ss
sbb
xor
lods
test
jmp
cmp
or
leave
in
mov
sbb
in
sub
into
push
jp
pop
pusha
int
popf
ret
dec
enter
xor
push
scas
into
andl
xor
ss
test
and
add
inc
or
sbb
shll
xchg
or
or
shrl
ret
shrb
cwtl
lret
mov
or
pop
pop
cmp
pop
jl
fmull
add
out
out
pop
or
mov
add
pop
in
mov
rolb
cmp
test
inc
jo
pushf
xchg
dec
jl
cwtl
push
xor
mov
push
pop
sbb
push
jl
xlat
cwtl
xor
jg
lea
sahf
jno
test
xchg
jp
lea
rorb
push
ret
imul
add
pop
mov
mov
dec
loop
mov
sub
in
dec
je
add
cs
push
jb
adc
inc
das
lock
xchg
and
movl
or
sub
out
cmp
negb
lahf
mov
dec
inc
jnp
xchg
dec
adc
jo
test
imul
mov
mov
imul
gs
xor
and
cmp
std
mov
xor
mov
pop
roll
sarl
cli
shrb
mov
nop
dec
pop
add
mov
andb
ja
je
ss
inc
pop
ret
sahf
ret
mov
lcall
xor
arpl
add
cli
pop
dec
out
movsl
arpl
cmpsb
dec
mov
mov
js
inc
or
pop
sbb
jo
sbb
jns
insl
pop
shlb
cmpb
cld
xor
push
or
fsubrl
push
dec
dec
xor
mov
dec
int3
inc
dec
add
in
and
add
push
call
loope
aam
ss
daa
inc
cmp
orl
mov
cmovle
roll
add
daa
mov
lods
test
jae
jbe
fidivrl
pop
dec
mov
push
add
inc
inc
imul
lea
push
cmp
or
outsl
mov
adc
sbb
in
dec
imulb
jl
push
dec
adc
cmp
dec
sti
sub
sbb
pop
aam
and
daa
xchg
pop
test
sbb
jbe
or
arpl
add
sbb
or
sbb
int3
sbb
jp
mov
lods
ffree
sub
and
mov
sub
mov
push
movl
xor
mov
or
cld
add
dec
add
loopne
add
pop
cld
pop
and
mov
sarl
and
jmp
inc
popa
mov
xchg
jecxz
fnsave
xor
adc
sbb
hlt
push
pop
out
les
movsb
push
cmp
ss
mov
loop
nop
imul
mov
test
fsubl
pusha
mov
dec
push
push
cmp
adc
dec
sub
pop
jl
icebp
test
or
mov
jg
jle
adc
push
outsl
jne
pop
bound
sbb
sbb
add
cmc
xchg
fisubl
add
push
inc
jno
cmpsl
adc
fdivs
cmp
adc
ret
push
dec
jle
pusha
push
std
das
push
push
mov
add
nop
jg
stos
inc
push
test
ret
push
pop
and
fldt
lock
mov
inc
xor
cmp
mov
aas
xchg
sub
mov
push
mov
jns
dec
out
decb
push
mov
inc
inc
dec
pop
out
out
add
cmp
push
cs
push
cmp
jne
rorb
push
loopne
arpl
and
mov
cmp
push
and
cmp
fadds
jp
fcoml
pop
inc
cltd
mov
push
push
jmp
add
jo
dec
sti
mov
mov
aaa
mov
add
mov
or
std
cmp
xor
cld
add
insb
loopne
pop
aaa
and
daa
fists
nop
fadds
or
or
andb
adc
rolb
sub
push
das
xor
xor
bound
mov
xchg
movsb
sbb
cltd
push
mov
sub
fimull
out
fiaddl
push
jno
enter
sahf
je
lods
bound
out
push
in
jbe
push
sbb
mov
adc
add
or
push
cld
pop
outsl
nop
roll
add
or
or
mov
add
cmovnp
add
rolb
ret
sbb
and
push
je
pop
cmp
ja
or
jne
cmp
dec
sub
mov
mov
stos
mov
inc
lea
std
adc
loopne
xor
cld
orl
movw
adc
cmp
adcl
or
sbb
out
jmp
or
lock
mov
sbb
sub
test
xchg
dec
add
push
sbb
cltd
leave
pavgb
enter
adc
add
pop
jnp
sbb
sbb
int3
add
sarl
stos
mov
add
sbb
sub
add
pop
inc
inc
dec
sub
mov
push
pop
fcoml
and
imul
push
daa
sbb
cltd
cmpsl
insl
sbb
push
or
pop
ljmp
push
ja
mov
pop
pop
mov
add
rolb
stos
and
xchg
sbb
dec
sbb
movsl
in
jnp
jp
xchg
pop
and
push
into
ret
scas
test
scas
stos
add
pusha
outsl
mov
dec
xchg
add
mov
loop
xor
or
fdivs
inc
cmp
adc
dec
cs
mov
cmp
pop
xchg
push
bound
cmp
aam
and
adc
nop
adc
movsb
mov
jg
sbb
aaa
insb
data16
adc
jge,pt
mov
repnz
or
dec
inc
enter
inc
cmp
push
in
ds
call
cltd
pop
lret
dec
dec
shlb
push
and
cmpsl
and
cmp
lods
or
lret
iret
add
cmp
pop
insl
ret
mov
mov
inc
cltd
xchg
pop
cmpl
cwtl
sbb
in
sbb
das
es
sub
lahf
rolb
inc
std
jl
mull
cmp
je
inc
inc
lretw
js
and
xorl
les
es
lods
inc
sbb
push
add
scas
push
pop
lea
mov
lods
dec
jle
cltd
add
cmp
xor
outsb
xchg
adc
jns
nop
mov
nop
inc
cli
fadds
enter
orps
add
inc
mov
cmp
inc
inc
dec
cmpsb
lods
pop
fdivs
lea
mov
or
xorl
push
lea
inc
mov
scas
xor
sbb
push
mov
das
mov
inc
scas
adc
sbb
add
ret
add
inc
ljmp
mov
subl
xor
adc
pop
repnz
sbb
andl
jl
xorps
pop
jmp
or
daa
mov
sub
sti
add
xchg
lock
das
cmp
and
inc
sbb
sub
sbb
push
xor
fwait
sbb
push
lods
or
fisubrl
or
and
ss
xchg
jbe
pop
pop
mov
cmp
sub
orb
add
mov
xchg
cmp
sbb
aam
or
ds
lock
fnsave
sbb
fidivs
in
bound
inc
inc
cmp
mov
inc
inc
fidivl
ret
mov
jle
xchg
lods
or
in
push
lea
xchg
daa
cmp
mov
inc
add
ljmp
adc
add
or
out
ficoml
fimull
and
push
pop
dec
and
dec
hlt
adc
adc
push
jb
insb
or
test
lods
lock
jb
jle
nop
sbb
pop
les
or
call
xchg
cmp
sbb
into
sbb
pshufw
sub
test
mov
jbe
adc
pop
clc
js
mov
dec
jl
adc
add
cli
or
pop
daa
adc
lock
inc
xlat
cmpl
in
xor
pop
xchg
push
pop
insl
mov
scas
adc
jp
adc
inc
push
add
ret
and
dec
sbb
shll
push
push
push
jne
cmp
jl
adc
sub
mulb
mov
inc
cmp
adc
xor
cmp
xor
or
xchg
addr16
imul
pop
movsl
daa
ret
das
sbbb
mov
inc
sarl
es
xchg
jecxz
or
or
lods
cmpsl
sbb
adc
pusha
cwtl
movsb
sbb
inc
pop
push
xchg
sahf
aam
dec
repz
je
inc
ret
ror
pop
roll
sbb
jge
add
lret
adc
lcall
push
add
jmp
inc
mov
add
inc
add
in
jge
cmp
cmp
mov
jl
add
rolb
or
mov
inc
dec
jne
cmp
rolb
add
mov
rcrb
ljmp
loope
mov
xchg
push
and
test
push
mul
xchg
and
mov
inc
pop
mov
or
inc
test
mov
push
cmp
pop
cmp
ss
jge
test
push
mov
movsb
push
movsl
push
pop
mov
orb
sbb
adc
inc
add
inc
aad
loope
js
dec
inc
notl
or
pop
je
sbb
and
pop
lock
mov
movsl
sub
rolb
cld
push
arpl
notl
mov
add
ss
lea
movsb
sub
add
test
popf
lock
mov
pop
pop
push
insl
faddl
mov
dec
adc
push
push
adc
adcb
mov
pop
mov
jg
loope
dec
push
xor
pop
ret
cmp
cmp
aas
js
movsb
push
lods
jp
insb
push
mov
aam
imul
and
orb
icebp
andl
xchg
push
shlb
fdivrl
or
and
sub
adc
adc
sbb
lret
and
addr16
imul
mov
xchg
dec
cmpsb
pop
jno
ss
add
xor
or
pop
and
jl
mov
inc
add
xchg
in
pop
dec
fs
adcb
push
lock
js
sbb
cli
inc
sbb
inc
mov
push
sbb
aas
addl
pop
pop
int3
popf
pushf
inc
sub
mov
mov
inc
add
jmp
xchg
jbe
push
add
sub
xchg
lret
ficoms
dec
rcrb
sub
stc
mov
sbbb
and
dec
insb
or
jae
mov
inc
imul
adc
or
faddl
xor
rcl
jge
sbb
enter
sub
cmp
jbe
pop
cld
push
sbb
push
push
addr16
and
out
shlb
jae
add
ds
inc
je
aam
mov
sbb
dec
or
cltd
jb
rcrb
lds
or
fwait
rcrb
cmp
sbb
repz
mov
dec
and
ss
test
pop
mov
pop
popa
xor
sub
push
rcll
push
or
les
ret
dec
push
pop
inc
test
xchg
dec
add
push
and
les
inc
sbb
dec
lea
push
lcall
mov
out
or
adc
or
sub
push
arpl
cmp
bound
add
ljmp
and
ret
cmc
repz
in
mov
outsl
add
aam
lcall
cmp
jbe
psrad
fnstsw
into
gs
imul
pop
imul
fst
xchg
mov
lock
ret
dec
jne
cmp
jb
adc
jle
inc
add
shl
inc
push
sub
and
jbe
sbb
pop
push
push
dec
push
dec
cmp
cltd
and
pop
inc
jne
mov
ds
xor
arpl
popl
pop
push
and
sub
mov
or
and
sub
sub
sub
into
sbbb
mov
inc
inc
add
in
test
inc
xchg
stos
movsb
inc
rcrb
push
andl
dec
or
addr16
cmp
jne
dec
inc
and
sub
push
adc
cmovnp
adc
cli
push
push
xchg
fists
jl
mov
jmp
leave
add
repz
sbb
cltd
or
pop
sbb
les
inc
testb
or
pop
cmp
roll
cmpsb
jmp
loop
add
add
inc
aam
addr16
xchg
enter
addb
add
lea
push
into
in
jl
add
or
dec
dec
xchg
add
and
in
jmp
xchg
xchg
out
jo
fmull
test
cld
js
push
mov
out
dec
pusha
lea
movsb
mov
xchg
in
inc
sbb
adc
sbb
popa
dec
inc
push
push
nop
dec
push
jbe
fwait
inc
sub
insb
ja
cmp
call
add
pop
push
in
mov
lds
cmpl
jbe
fnstenv
push
sub
jbe
push
adc
jns
loop
test
sbb
mov
push
jbe
in
rorl
dec
push
push
mov
sti
jae
cli
xchg
sub
ret
enter
add
jmp
inc
scas
add
jmp
je
sbb
sub
outsb
adc
sub
mov
sar
add
jb
xchg
icebp
and
cmp
mov
push
enter
mov
call
inc
popa
dec
jnp
imul
push
movswl
je
loop
push
mov
xchg
add
mov
ja
popa
jns
ds
cwtl
add
mov
add
rorl
pop
sbb
mov
jecxz
push
ret
in
or
jmp
push
mov
out
cld
and
push
xor
push
jl
mov
xor
add
stos
pusha
mov
roll
lods
xchg
loop
add
xchg
mov
push
enter
lahf
sub
outsb
fdivrs
pop
sub
icebp
inc
jb
pop
lds
sbb
outsb
lahf
std
jae
push
sub
xchg
fldt
pop
jb
or
je
push
enter
std
pop
fistl
or
fcomps
test
pop
xor
mov
cwtl
sub
mov
push
fsubs
bound
nop
iretw
add
int3
lea
mov
mov
sbb
xchg
insb
in
js
leave
push
inc
adc
in
inc
xor
pop
sub
dec
xor
pop
push
cmp
jg
xor
inc
pop
inc
loop
push
mov
xor
mov
cmp
and
dec
mov
icebp
pop
or
insl
pop
adc
cmp
dec
icebp
mov
mov
push
jne
outsl
xor
cmp
xor
and
aas
pop
movb
or
cmpsl
int3
cmp
jns
clc
add
fdivrp
mov
push
xorb
add
mov
rcl
aas
fdivs
pusha
xchg
je
orb
add
orl
fs
insb
pop
add
loopne
pop
pop
dec
jb
imul
mov
pop
loopne
movsb
les
push
sub
pop
dec
imul
add
mov
inc
fidivrl
push
and
rolb
imul
pop
xchg
jmp
shll
pusha
cmpsl
push
push
push
push
lods
dec
sbb
mov
jo
int3
inc
je
scas
xchg
xchg
negb
jmp
bound
enter
pop
loopew
cmp
arpl
push
push
nop
dec
add
loope
push
sbb
sahf
push
jo
or
jl
sub
hlt
in
jle
ret
jb
enter
cmp
or
adc
es
outsl
mov
mov
or
shl
cmp
jg
dec
sbb
sub
in
sahf
clc
mov
pop
jl
mov
xlat
mov
push
cmp
out
lods
push
jae
sub
mov
scas
push
in
mov
sbb
jge
pop
or
jne
lds
push
mov
repnz
dec
pop
sahf
push
xchg
insl
adc
outsb
js
sbb
stos
adc
loop
mov
lds
icebp
dec
adc
js
loopne
repnz
push
je
inc
inc
scas
ret
pop
andl
lcall
shlb
subb
decl
imul
lcall
inc
and
cmpl
jne
adc
mov
mov
inc
mov
ss
clc
jne
cmp
neg
xor
jg
cmp
jne
and
pop
pop
pop
cld
inc
xchg
xor
cs
xor
or
xchg
cmp
pop
dec
pop
incb
icebp
push
jmpw
movl
mov
sti
xor
adc
pop
mov
sub
mov
mov
hlt
mov
dec
fs
jmp
jnp
add
push
out
mov
rcrl
int3
inc
jne
test
insb
and
push
pushf
cmpsb
divb
inc
imul
inc
dec
cmp
jmp
je
pusha
pop
out
jbe
adc
dec
sbb
sti
mov
lods
dec
enter
sub
jne
push
imul
pusha
add
mov
sub
cmp
sbb
xchg
ja
aas
push
fiadds
pop
adc
push
push
mov
adc
mov
lahf
out
imul
fdivrl
mov
or
cmp
out
mov
fisubs
lods
pop
jbe
lea
push
jecxz
jl
fsubrl
sbb
insl
push
sti
mov
outsb
inc
dec
iret
je
orl
jl
mov
movsl
jmp
cmp
adc
pop
or
lcall
clc
dec
and
out
test
cmp
mov
test
aas
xorb
mov
sbb
dec
shlb
ret
inc
dec
and
xchg
popa
sub
pop
test
mov
inc
cmpsl
popf
in
xchg
adc
dec
or
sahf
mov
sbb
lock
jbe
push
add
add
mov
inc
in
lods
jg
jbe
adcb
aas
sbb
imul
jo
pusha
cltd
movsb
adc
fisubs
add
inc
push
dec
sbb
cmp
pop
sbb
dec
sbb
adc
fs
dec
cmp
loopne
inc
imul
xchg
adc
shlb
lods
pop
scas
or
xor
pop
rcl
mov
or
mov
xchg
push
icebp
mov
jge
pushf
add
mov
and
sti
sahf
push
test
push
rclb
push
imul
movsl
sbb
mov
fmuls
mov
dec
fs
insl
cld
call
jp
or
adc
sbb
mov
or
mov
jl
mov
imul
andb
xor
pop
sub
rcrl
pop
movb
dec
push
aam
or
dec
js
push
imul
outsl
fimuls
cmp
mov
jmp
push
pop
adc
rep
jne
mov
push
or
xchg
push
adc
pop
aam
jg
adc
gs
out
fcos
mov
ret
pop
mov
test
in
xchg
inc
and
imul
mov
fadds
test
cltd
pusha
test
push
sub
cmp
pop
loope
cmpl
xchg
push
jle
sbb
lea
add
in
mov
fucomp
cmpsb
ret
sub
aam
test
addr16
popf
popa
add
sbb
clc
jmp
popf
test
or
add
xchg
push
in
dec
inc
pusha
out
ffree
ret
inc
lret
mov
sarb
xchg
push
mov
add
xchg
jb
outsl
arpl
push
inc
cmp
adc
inc
cmp
and
adc
cmpsb
push
push
aas
or
add
clc
scas
aam
imul
rcr
dec
cmpsb
repz
je
mov
xchg
inc
push
cmp
cld
xor
pop
push
push
and
inc
insb
add
aaa
clc
dec
add
scas
mov
xor
sub
lds
iret
je
xor
mov
ret
add
mov
nop
shlb
and
ja
dec
daa
pusha
pushf
gs
fnstenv
dec
xor
adc
mov
js
jbe
and
add
fldt
addr16
inc
sti
into
jecxz
pop
cmp
push
scas
jbe
lea
inc
lods
dec
daa
xchg
adcb
jmp
cmp
popaw
xor
inc
div
shll
xor
stos
adcl
test
pop
cmp
jb
test
inc
push
add
out
mov
xor
rcr
ss
pop
sub
je
fistl
or
cwtl
dec
das
add
insb
int
in
mov
mov
mov
mov
inc
push
lea
mov
xchg
mov
cmp
sub
and
lahf
push
sub
sub
mov
in
orl
add
jno
and
push
cmp
sub
mov
add
icebp
insl
mov
and
jmp
loopne
out
jl
js
gs
and
test
loop
ss
fcmovnbe
ret
xchg
pop
fadds
mov
mov
xor
dec
aaa
mov
add
inc
loopne
jg
lea
push
push
push
insb
push
mov
push
cmp
pop
jb
jb
pop
xlat
testl
add
es
add
dec
add
adcb
pop
sbb
push
dec
sbb
sub
and
je
dec
mov
repz
rorl
push
dec
jecxz
ss
inc
adc
mov
rcll
push
mov
jb
std
or
cmp
jae
or
rorl
nop
cmpsb
out
insl
add
push
jb
pushf
xor
adc
jb
xchg
and
push
dec
dec
arpl
aad
push
fdivrl
inc
outsb
add
push
adc
int3
shl
sub
mov
loopne
xchg
rol
and
and
mov
pop
xor
push
mov
push
and
shlb
mov
sbb
mov
sbb
pop
push
sbb
imul
dec
push
mov
xlat
pop
mov
xor
xchg
sbb
mov
rcl
enter
in
jb
push
cmp
sub
sub
add
xor
add
lods
cmp
or
mov
or
or
or
push
jae
xor
cwtl
inc
pusha
dec
pusha
and
pop
sbb
push
fs
cmp
push
pop
pop
scas
pop
loope
setle
sbb
or
shlb
push
mov
clc
mov
mov
push
js
mov
xchg
icebp
or
dec
jmp
adc
pop
nop
cmp
aam
fstpt
test
test
loopne
mov
jno
sub
sub
ss
mov
and
push
inc
loopne
push
adc
pop
adc
sbb
sbbb
daa
and
mov
clc
add
mov
add
imul
mov
sbb
out
mov
popa
int3
dec
pusha
xchg
adc
icebp
push
sbb
jle
je
pusha
mov
push
xchg
mov
sub
xchg
inc
test
lcall
or
ret
inc
daa
sbb
xchg
cli
add
popl
mov
test
lahf
dec
dec
push
add
add
push
sbb
adc
dec
push
pop
or
and
add
add
adc
jbe
mov
add
pop
push
les
adc
andl
and
icebp
mov
push
lea
dec
push
sub
in
sub
jae
mov
push
sbb
push
rol
xchg
add
push
dec
or
mov
out
dec
insl
and
je
push
cmp
enter
sub
mov
rolb
sub
bound
mov
inc
mov
addl
sub
dec
sarb
sbb
pushf
cmp
jg
mov
adc
lea
leave
add
jmp
adc
ja
dec
and
test
xchg
arpl
xchg
add
cmp
push
in
add
ret
stos
cmp
insl
aas
sbb
jecxz
call
cmp
push
sbb
wrmsr
pop
or
dec
cmp
add
insl
fsubrl
push
das
mov
inc
addb
fnstenv
push
dec
add
loop
faddl
and
adc
mov
mov
push
mov
push
enter
pop
dec
inc
js
sbb
cmp
add
icebp
jb
rolb
jg
cmp
jge
jmp
sbb
and
sbb
adc
push
incl
push
xor
ss
pop
nop
cli
xor
sub
pop
jge
pusha
outsl
jge
std
dec
jne
xor
dec
mov
lea
mov
jl
dec
cwtl
mov
push
and
mov
ss
sub
push
inc
test
bnd
sbb
push
in
sub
sbb
outsb
aas
and
sbb
jae
addr16
repnz
ret
jno
inc
mov
icebp
enter
pop
mov
inc
inc
mov
cmp
ljmp
mov
push
out
cmp
lods
mov
rcrb
call
xor
xchg
scas
cmp
pop
add
loopne
rcl
adc
dec
or
popf
cltd
dec
fstpl
fwait
and
pop
mov
loop
rep
lock
arpl
add
add
fisttps
cmp
cli
mov
xchg
jns
inc
add
push
pushf
mov
jne
or
mov
test
ds
loopne
xchg
rcll
mov
xchg
mov
mov
rcll
xor
mov
mov
mov
lods
bound
sub
cmp
addl
or
dec
das
sbb
add
or
sbb
or
mov
add
je
or
jbe
pop
sbb
incb
repz
in
push
mov
mov
mov
sbb
mov
adc
and
sarb
push
inc
int
test
or
pop
add
sbb
test
push
addr16
or
jns
sub
out
sbbb
scas
fs
add
xor
in
xchg
iret
inc
dec
xchg
push
dec
inc
lcall
push
ljmp
bound
xor
ss
imul
rcrl
adcl
jne
and
pushf
ja
or
add
cltd
jmp
add
xor
jmp
sbb
or
adc
dec
sub
int3
fs
pop
add
test
mov
or
mov
xchg
push
inc
cmp
dec
lock
jmp
lock
push
push
sbb
mov
movsb
adc
icebp
add
add
in
and
loop
push
push
fwait
jle
cmp
inc
mov
sahf
add
add
lods
jbe
jae
push
xor
xor
adc
out
mov
add
aad
mov
ret
adc
into
ret
cmpb
mov
jns
mov
lods
cmc
and
sub
ja
jl
mov
outsb
inc
xor
mov
aaa
or
lret
xor
jbe
dec
lods
jno
lods
mov
test
pop
jle
add
mov
ss
mov
xchg
sub
loope
jo
inc
xchg
add
xor
add
or
popa
movaps
add
adc
sbb
push
iret
test
dec
add
or
js
inc
jno
adc
test
popl
pop
fs
jl
pop
inc
adc
mov
sub
or
dec
dec
sub
or
adc
jns
pushf
movsl
cmp
inc
or
imul
jno
xor
adc
add
adc
push
iret
add
mov
pop
mov
or
dec
iret
or
loope
stos
add
subb
std
pop
call
das
mov
and
inc
mov
or
push
arpl
mov
jle
xchg
and
dec
jae
pusha
or
jo
inc
les
push
push
std
adc
pop
cmp
push
inc
rorb
jecxz
or
mov
mov
imul
adc
dec
dec
jae
shl
jp
jbe
add
jmp
dec
pusha
and
inc
jp
sahf
push
js
lcall
test
loope
shl
push
sub
loop
mov
add
mov
dec
inc
lea
adc
dec
loope
mov
call
or
or
pop
pop
or
fsts
lea
adc
pop
sbbb
into
cmp
dec
iret
in
mov
jl
je
outsl
add
adc
mov
mov
and
add
adc
in
mov
addb
imul
xor
add
push
fistpl
adc
cmp
or
mov
outsb
add
je
xchg
or
or
ret
jmp
xor
sub
sub
cmp
dec
andl
imul
ss
sbb
dec
inc
je
shrb
icebp
shlb
push
enter
std
test
and
inc
mov
imul
and
dec
popa
sbb
shlb
or
adc
fldenv
sbb
dec
inc
cmpsb
inc
add
scas
sahf
lcall
pop
push
insb
cmpsb
test
data16
jg
scas
cli
pushf
lds
add
cltd
shl
testl
xchg
je
cwtl
jl
inc
jmp
sub
les
fxch
sbb
lret
lock
or
test
jb
nopl
jnp
and
xchg
lret
dec
dec
or
mov
adc
je
add
movsb
loopne
sarb
ret
xor
jb
enter
je
add
fadd
imul
sub
cs
addb
ljmp
cmp
inc
cmp
stos
sarb
mov
outsb
mov
adc
or
pop
add
enter
dec
loopne
and
jo
inc
sub
ficoml
adc
dec
out
outsl
lods
jne
inc
sub
jbe
push
mov
jne
cmc
adc
xchg
shlb
mov
xchg
in
repnz
dec
mov
imul
lahf
cs
pop
lea
push
push
ds
or
andb
sub
sbbb
dec
clc
mov
pusha
xor
pop
test
adc
les
ret
inc
mov
cwtl
xchg
lds
push
mov
iret
mov
test
inc
dec
adc
or
loope
ss
nop
add
in
fistps
push
negl
pop
xor
push
adc
mov
mov
outsb
sbb
rolb
sar
dec
orl
lahf
and
push
xor
clc
jl
and
ret
inc
mov
ja
int
inc
hlt
add
mov
cli
adc
movb
andb
scas
sahf
sbb
mov
xchg
cs
sbb
push
test
lret
fildll
add
inc
cmp
je
mov
loope
pop
jne
xor
pushf
dec
cmpb
fdivrs
arpl
data16
and
sbb
jle
js
ss
ljmp
and
add
clc
int3
movl
sbb
imul
push
into
pop
aad
mov
test
xor
lds
dec
xchg
cmp
lea
xchg
sbb
shl
or
mov
aam
in
sbb
sahf
cli
sar
sub
inc
dec
jne
lods
sti
push
or
adc
mov
xor
mov
mov
roll
cmp
fiadds
mov
fcomip
adc
clc
mov
pop
add
lea
add
and
inc
mov
inc
add
pop
jns
je
mov
bound
push
daa
fmuls
je
pop
je
push
ss
jnp
add
mov
ficomps
mov
rclb
mov
dec
and
das
push
sub
sbb
cmp
ror
adc
enter
sbb
mov
mov
and
outsb
mov
sub
xchg
or
inc
cli
or
push
cmp
and
sub
jecxz
add
lret
add
inc
adc
push
fmull
ret
pop
popa
icebp
pop
in
decb
lods
mov
or
nop
rorb
in
mov
inc
push
pop
dec
push
fwait
je
mov
mov
jl
sar
jge
test
mov
inc
dec
jp
jg
leave
and
les
cmp
lods
addb
bound
inc
xchg
rorb
fists
jb
add
mov
xlat
cld
xor
inc
xor
andb
sbb
xchg
jg
lret
push
ret
andl
xchg
sub
push
sysexit
jl
test
adc
xor
and
add
outsb
movsb
push
mov
mov
xchg
xchg
pusha
push
lcall
gs
dec
adc
bound
lea
cs
popl
scas
js
pop
lea
adc
mov
pop
sti
scas
adc
mov
lea
popa
loope
out
jp
dec
adc
adc
jno
movsl
arpl
leave
inc
dec
lods
mov
mov
mov
and
or
or
mov
add
inc
sub
int
lahf
push
adc
jne
jb
sahf
pushf
ds
pusha
inc
and
pop
sti
xorl
je
xchg
icebp
mov
sub
cmp
push
popf
outsb
mov
xor
pop
jnp
dec
mov
push
or
jb
dec
sub
aas
and
out
xor
xor
nop
or
mov
mov
loop
fs
jge
popa
dec
pop
int
sahf
or
jno
and
cli
sti
lods
jg
sbb
lret
xorb
xchg
arpl
in
jge
test
mov
arpl
push
pushf
mov
lea
mov
sub
mov
sub
sub
mov
pop
ss
mov
sub
mov
icebp
jmp
or
enter
fbstp
mov
arpl
fimuls
mov
dec
push
add
push
add
mov
jg
or
jb,pn
fbstp
enter
or
out
call
lret
pop
add
sarl
rcrl
push
sbb
bnd
pop
loope
mov
xchg
pusha
scas
mov
imul
xchg
push
clc
xor
xor
jo
inc
fxch
pop
adc
repnz
add
and
std
cld
dec
dec
nop
mov
addr16
das
dec
push
xor
mov
xor
mov
xchg
cs
xor
jmp
cmovo
pshufw
inc
sbb
shr
nop
sbb
and
std
sar
adc
and
lock
cmp
or
sub
lea
jne
aas
add
inc
enter
sbb
into
jae
push
pop
repnz
shrb
dec
pushf
stos
push
inc
push
pop
sbb
sbbb
xlat
adcl
jb
push
inc
dec
stos
mov
and
test
push
hlt
pop
sub
and
dec
sbb
fistpll
sub
inc
or
sarb
dec
push
pop
test
mov
rcrb
lea
add
sbb
shrb
popf
fistl
bound
mov
movsb
xchg
add
insl
in
xchg
fdivrp
add
stos
jne
push
loopne
cwtl
xchg
adc
xchg
dec
adcb
lods
xor
sub
sbb
aam
popa
shlb
inc
shrb
mov
mov
outsl
loope
add
inc
lret
xor
test
test
or
scas
or
pop
orb
loopne
ret
push
sti
adc
adcb
jnp
sub
or
scas
loop
mov
pushf
pusha
jmp
mov
cli
inc
insl
lock
add
mov
mov
sub
xor
add
or
xor
inc
out
mov
jo
daa
add
add
sbb
mov
add
cmp
xlat
es
push
lret
movd
outsb
loop
fdivrs
lea
mov
sti
pusha
aad
adc
mov
push
cmc
inc
mov
insl
movsl
sbb
pmaxsw
jle
or
sub
sbb
jns
jae
les
push
xor
or
vmovups
cltd
pusha
mov
push
pushf
pop
adc
add
test
fcompl
mov
cltd
xor
rol
adc
mov
lcall
sub
sbbb
inc
je
xchg
outsl
test
push
inc
jne
pop
inc
hlt
ret
sub
or
pop
mov
push
in
xor
add
and
inc
dec
cmp
cmpsb
add
mov
mov
sbb
arpl
add
loop
cld
test
xor
mov
imull
push
icebp
fcompl
frstor
mov
sbb
push
mov
ret
inc
xchg
jno
test
adc
mov
loopne
push
or
or
mov
dec
movsb
lock
dec
mov
push
loope
lret
pop
pop
call
cmp
sbb
ret
sbb
cmp
cmp
xor
add
pop
xchg
stos
ret
push
push
inc
push
cmp
cmp
inc
sahf
or
pop
push
test
and
notl
dec
push
lcall
xlat
pop
and
xor
pop
sub
sbb
bound
sbb
imul
in
shl
add
pop
cmp
and
clc
lods
cld
lea
test
pop
push
jno
sbb
lea
addb
inc
in
mov
sub
sbb
sbb
xor
and
sbb
adc
lea
ret
rorb
nop
mov
imul
popa
xor
mov
xorb
adc
adc
or
dec
push
loope
inc
inc
mov
mov
sub
xor
lahf
movsb
sub
mov
sub
cmp
imul
scas
or
push
and
pop
clc
mov
jg
faddl
mov
cltd
inc
lcall
nop
sub
into
rorb
jg
jae
mov
jne
xor
insl
pop
add
jp
sub
ficoml
xchg
outsl
mov
roll
mov
sbb
mov
sti
mov
loope
test
pop
xor
test
push
cmp
loop
jmp
or
adc
or
push
xor
inc
bound
xchg
mov
loope
sub
dec
and
add
dec
pop
rcrb
cmp
ret
jnp
jne
mov
adc
test
xchg
push
dec
inc
testb
push
out
aaa
jb
lcall
pop
and
push
shll
loopne
adc
add
jb
pop
rcl
pop
stc
and
call
nop
shl
mov
mov
sub
push
daa
loope
push
lcall
inc
mov
jge
dec
lret
repz
daa
xorb
shll
shrb
jnp
es
or
int3
sahf
lods
push
or
inc
mov
fisubl
scas
xor
sbb
push
pop
inc
test
sbb
inc
subb
push
or
sbb
pop
out
pop
orb
mov
add
sub
fs
in
sub
jns
mov
push
add
mov
rolb
xor
xchg
add
pop
out
popf
and
cwtl
popa
add
test
or
out
test
mov
popf
push
cmc
sbb
fisttps
or
data16
sbb
pop
ds
addl
subl
push
xor
je
push
not
dec
das
push
scas
cli
andb
lea
ret
sar
and
enter
xchg
cmp
and
mov
sub
call
pusha
and
insl
jge
in
sub
cmp
pop
daa
rorb
popa
mov
inc
mov
sub
xchg
dec
mov
mov
je
xor
xchg
lods
xor
aaa
xor
pop
or
mov
inc
xor
xlat
lods
cmp
push
mov
mov
je
sub
icebp
add
sub
push
add
cwtl
jp
test
jne
sbb
lcall
inc
push
adc
add
adc
loope
pop
lret
rorb
or
mov
push
dec
xor
icebp
test
jno
sub
lret
test
xchg
arpl
cmpl
add
lds
mov
add
cmp
add
jo
pop
sbb
mov
jo
shl
mov
cmp
ja
dec
and
jnp
mov
shl
fsubrl
mov
mov
loope
xor
lahf
out
dec
mov
inc
inc
je
fstps
pop
add
call
mov
push
add
push
das
sub
outsb
decl
mov
pop
lock
push
pushl
int3
inc
xchg
pop
sub
dec
test
inc
xchg
daa
inc
add
loope
adc
cld
mov
outsl
pop
call
dec
inc
mov
or
cld
mov
int3
xchg
mov
imul
push
push
mov
aas
push
mov
and
add
jmp
push
push
cmp
mov
lea
lds
pop
loope
xchg
inc
clc
cmp
pusha
cld
inc
pop
enter
lds
inc
fadds
add
jb
pushl
push
and
mov
xlat
lret
pop
outsb
lds
sbb
pusha
push
and
not
sbb
add
mov
lss
xor
aaa
testb
nop
mov
lock
jae
adc
arpl
fwait
pushf
ljmp
lods
divb
dec
je
add
jmp
mov
dec
mov
sub
and
mov
mov
pop
movsl
pop
push
fdiv
dec
add
cmp
cmpl
xchg
es
cld
sbb
lds
imul
mulb
or
std
sub
or
fisubrl
inc
call
mov
roll
add
adc
loopne
cmpsb
or
adc
mov
fmull
push
or
clc
fmull
fstps
jl
pop
cmp
sub
rcrl
sub
pushw
mov
push
xor
lret
xchg
sbb
mov
je
add
pop
cld
cmp
cltd
mov
mov
mov
clc
das
jecxz
dec
imul
push
or
xor
dec
pop
int
pop
int
sbb
mov
mov
push
ret
push
pop
dec
shrb
sbb
push
sahf
imul
sub
push
lea
inc
roll
inc
adc
dec
je
movsb
push
add
push
js
les
rorb
dec
xchg
pop
les
movsl
rcr
inc
cwtl
cmp
imulb
filds
arpl
fiaddl
xchg
jno
sbb
mov
or
loopne
in
adc
fildl
jo
mov
xchg
jl
add
sub
shlb
xor
ds
xchg
fs
shll
mov
mov
nop
testl
push
mov
loop
dec
sahf
xlat
xchg
test
adc
dec
push
jo
or
xor
xchg
cmp
pushf
orb
adc
xor
pop
test
adc
or
jle
adc
mov
movsb
dec
js
or
je
lret
xchg
pushf
movsb
add
sbb
insb
inc
leave
push
sub
or
push
push
sbb
and
push
xor
call
fsubs
daa
mov
sub
push
xor
call
xchg
dec
or
cli
fldl
or
jb
clc
sub
sbb
jae
adc
andl
dec
xor
pop
push
insb
pop
inc
add
jle
ljmp
sbb
jbe
in
imul
sbb
ja
push
xchg
enter
mov
adc
adc
movnti
adc
pop
fnstsw
inc
rcrb
insb
pusha
pop
arpl
shr
mov
xlat
loopne
jl
add
hlt
push
xchg
add
inc
xchg
shr
or
test
inc
xchg
movsb
andb
jb
dec
cmp
je
mov
insb
ret
subl
push
cld
lret
push
mov
std
push
xor
inc
in
popa
lods
push
or
sbb
loop
scas
imul
scas
xor
pop
lock
push
lea
jne
sub
stos
inc
xchg
les
dec
cltd
insb
cmpsb
jns
jmp
lret
add
sub
pop
push
das
sbb
add
imul
lock
inc
adc
push
mov
les
inc
or
push
sbb
sbb
or
lods
push
mov
pop
cmp
dec
jmp
push
je
push
pop
and
xor
or
je
adc
push
and
aas
bound
xchg
repnz
cwtl
dec
les
xadd
jmp
inc
fists
cmc
pop
jle
add
push
mov
push
push
inc
and
dec
mov
cltd
les
das
cmp
push
sbb
aas
mov
nop
mov
pop
and
inc
pusha
ret
rcl
adc
test
dec
adc
and
inc
pop
mov
aad
add
popa
inc
inc
pop
jae
mov
push
pop
mov
repnz
mov
adc
mov
rclb
imul
lret
mov
and
push
pop
ljmp
xor
cmp
cmp
icebp
roll
jb
popf
scas
pop
je
xchg
jae
push
and
inc
mov
adc
pop
mov
jb
xchg
stos
xchg
aam
pop
jl
or
jmp
mov
sbb
mov
pop
cmp
das
sbb
lock
push
xchg
adcl
das
inc
push
sub
mov
les
xchg
scas
push
xor
xor
xor
sbb
push
and
push
mov
aad
mov
sub
addb
sbb
jbe
je
xor
popf
push
scas
cmp
inc
add
cmp
jge
imull
imull
insb
pop
dec
inc
test
jo
add
xor
add
mov
aam
sti
daa
add
ret
inc
push
sbb
pop
pop
or
and
inc
push
mov
push
sub
pop
aaa
mov
cmpl
stos
add
adc
shll
cmpsb
das
into
icebp
push
dec
inc
jae
mov
inc
mov
add
test
fcomps
jb
push
fdivl
and
ret
mov
xor
fs
push
enter
into
push
push
ret
ljmp
int
inc
cmp
ljmp
push
lods
dec
jns
adc
test
scas
and
rorl
in
mov
xlat
push
jl
sbb
add
inc
adcb
xchg
mov
add
fldt
mull
add
xor
scas
xor
adc
sbb
rol
adc
cmpsl
push
push
or
ljmp
ljmp
push
decb
fnstenv
xor
sub
gs
dec
jne
mov
movsl
mov
pusha
push
xchg
lea
sub
push
cmpsl
mov
filds
push
cmp
xor
sbb
pop
shl
sbb
dec
inc
testb
insl
inc
sbb
ja
mov
mov
mov
das
jecxz
icebp
push
and
call
mov
dec
cmp
or
mov
mov
add
add
pusha
sub
sbb
jge
add
jbe
repnz
inc
pop
mov
inc
andb
out
push
imul
mov
push
jo
push
push
push
pop
and
or
pop
sub
jmp
je
sbb
mov
mov
jnp
popf
xor
jbe
pop
adc
xor
jle
fcomps
inc
dec
jbe
insl
jne
mov
es
sbb
inc
push
adc
nop
test
add
clc
or
inc
add
inc
aam
xchg
stc
sub
adc
orb
xchg
cmpb
add
mov
pop
mov
cltd
sbb
push
push
xchg
les
xchg
dec
and
mov
popf
xchg
je
jle
sub
and
add
in
andl
add
adc
xchg
jmp
inc
jge
dec
cmp
adc
mov
and
mov
outsl
bound
sbb
dec
and
sub
sbb
dec
mov
fdivr
popa
sub
ss
je
out
mov
mov
sbb
imul
addl
jne
jo
fwait
mov
mov
ret
jo
mov
je
jmp
lods
and
out
jnp
xor
jle
mov
inc
inc
adc
and
cmp
xchg
js
out
or
jl
xchg
dec
mov
xor
pop
adc
jp
pop
push
filds
sub
sbb
inc
and
add
loopne
testb
push
pop
adc
jbe
insb
xor
adc
outsl
xor
mov
mov
mov
sar
fnstenv
fldt
add
mov
out
and
add
push
jmp
mov
loope
pop
mov
stc
outsb
add
sbb
aam
imul
cmpb
push
jo
fcomps
shr
les
xchg
inc
xchg
dec
test
lcall
inc
and
shll
ds
or
mov
or
daa
cmp
push
fnstcw
or
inc
inc
rolb
xchg
test
mov
sub
add
dec
sbb
ret
sub
pop
add
loopne
lock
xor
sar
mov
sbb
pop
shrl
or
jmp
std
out
add
stos
add
mov
mov
stos
call
mov
lock
ja
cmp
push
bound
add
test
push
jnp
dec
sub
repz
jne
or
adcl
repnz
mov
push
xchg
icebp
sbb
xchg
cmpsb
xchg
test
test
inc
inc
xchg
popa
pop
inc
jo
into
lods
sarb
mov
or
sub
fldl
xor
push
mov
inc
mov
hlt
add
bnd
push
loope
inc
pmovmskb
rcrl
mov
and
loope
dec
cmp
fists
lea
jo
push
loopne
pusha
adc
adc
xor
pop
fbld
cmp
rorl
sbb
in
sahf
out
cmp
push
hlt
and
xor
push
mov
fildll
loopne
test
add
sbb
push
or
pop
add
mov
xor
cld
cld
inc
cmc
in
inc
mov
cmp
sbb
sub
push
cmp
or
adc
add
add
add
adc
sub
mov
jmp
dec
ljmp
out
mov
or
repnz
fisubrl
pop
mov
stos
mov
shlb
js
pop
push
jmp
xor
pop
inc
add
jl
inc
adc
push
orl
scas
push
test
pop
push
xor
pop
lock
daa
push
and
add
lods
dec
jo
sub
mov
mov
mov
mov
mov
and
std
xchg
ds
movsl
pop
and
adc
push
or
cmp
test
enter
adc
sbb
leave
and
adc
inc
push
enter
push
inc
cmpsl
loopne
hlt
pusha
adcl
xchg
pop
ret
addl
out
push
push
addr16
xchg
and
in
test
andb
pop
pop
adc
push
lcall
pop
rcrb
jmp
sub
or
jae
jg
add
inc
cmpsb
sbb
push
das
and
sub
imulb
add
adc
aad
sub
cmp
loope
or
daa
or
push
or
sbb
push
cmpb
jnp
add
mov
pop
aaa
and
or
jne
incl
loope
adc
and
xchg
pop
cmp
push
mov
jge
sbb
mov
mov
sahf
inc
mov
outsb
xchg
fdiv
pop
inc
cmp
adc
data16
fs
lea
aad
ljmp
adc
test
xchg
mov
mov
xor
sbb
and
push
das
inc
push
jo
shr
add
lods
add
out
xor
mov
add
adc
add
pop
sub
fs
ljmp
jae
scas
add
mov
pop
pop
mov
arpl
add
neg
push
mov
pop
cli
lea
add
push
xchg
imul
sub
push
inc
dec
add
cmp
push
ljmp
in
or
dec
sub
cmp
jo
je
and
sarl
push
decl
shrl
adc
stos
sbb
or
push
loopne
push
sub
mov
or
adc
lret
adc
sbb
dec
jb
and
mov
mov
push
adc
push
and
stc
add
loope
rorb
mov
mov
sti
jbe
insl
jno
imul
xchg
push
xchg
push
jo
sbb
popl
jl
pop
icebp
shlb
add
inc
inc
lock
loopne
pop
pop
jo
dec
push
add
jl
loope
inc
sbb
cmp
sub
cmp
incl
stc
shrb
addr16
sub
push
fdivr
adc
sti
pop
add
push
nop
mov
mov
cmp
cmp
sbbl
dec
add
pop
push
or
rcrb
or
iret
loope
aam
sahf
les
push
ret
dec
pop
xor
cmp
mov
addr16
aaa
xchg
xor
push
sbb
pop
mov
cli
rclb
cmp
mov
sbb
lock
mov
mov
jge
add
dec
and
or
or
lret
sbb
xchg
ja
add
mov
ret
mov
sub
jo
or
into
push
out
add
and
add
push
xor
sbb
dec
cmp
inc
nop
rclb
outsb
mov
add
dec
lcall
push
sbb
jl
lcall
xor
mov
rol
inc
push
jge
push
cwtl
outsb
add
aaa
dec
xchg
push
add
inc
add
je
and
scas
add
mov
movsb
pushf
add
xor
sbb
add
fldenv
test
fsubrs
jmp
shrl
xchg
pop
lods
push
call
cli
pop
push
out
stc
push
add
adc
fstps
sbb
enter
xchg
lock
mov
clc
out
add
dec
dec
outsl
mov
inc
lea
mov
sub
fildl
mov
divl
shl
roll
lret
dec
jl
roll
fwait
inc
push
sbb
push
push
lea
sub
mov
in
repnz
pop
ljmp
xchg
je
cmp
inc
mov
aaa
jge
cmp
and
sbb
jnp
aas
xor
or
ror
movsb
push
pushf
lods
or
mov
ret
add
push
lds
rol
adc
jg
imul
mov
sbb
ret
test
shl
mov
or
pop
and
push
xor
insb
imul
cmc
add
sbb
stc
es
int3
ret
out
imul
xchg
ljmp
pop
pop
mov
aad
cmp
shrb
sbbl
or
cwtl
loopne
adc
fistpl
inc
add
ljmp
inc
notl
xor
pop
mov
push
mov
test
ja
dec
aam
and
pushf
add
dec
cli
xchg
sbb
jnp
mov
leave
cmp
pushl
and
lret
or
stos
add
outsb
push
jo
data16
out
lahf
outsl
push
sub
push
push
lods
sbb
hlt
pop
xor
jbe
cmp
insb
push
mov
jmp
push
and
aam
sbb
inc
orb
inc
push
stc
mov
push
out
sub
jnp
mov
sub
mov
push
mov
sbb
add
sub
int
lods
and
sti
hlt
sbb
add
jne
call
test
bound
inc
das
loopne
lods
cmp
pop
outsb
sub
lock
pusha
jp
sar
std
add
mov
movsl
decl
and
dec
pop
cwtl
or
fs
popf
ss
jnp
add
dec
push
inc
loop
add
sbb
je
test
mov
rcrl
mov
xor
sub
sub
adc
cs
dec
push
mov
jno
loope
in
into
sarl
test
adc
hlt
into
loopne
mov
insl
shl
mov
cld
insb
jge
inc
lret
mov
icebp
fadds
popf
sub
add
and
loopne
and
mov
cmp
or
jo
xor
inc
pop
jg
outsl
sbb
add
inc
aaa
inc
aaa
pop
xor
sbb
sar
mov
jl
adc
stos
adc
sar
sub
fldt
cmp
or
jmp
adc
add
jno
dec
mull
or
jo
ret
cli
inc
and
add
cld
cmpsl
add
data16
loop
scas
rolb
sbb
rcll
push
aad
push
shrb
pop
lods
add
cli
notl
ficomps
sbb
pop
inc
fimuls
int
pop
jp
xchg
push
push
or
jmp
jns
aaa
push
cld
jg
sub
jmp
cmp
jle
cmc
mull
sub
iret
arpl
cmp
mov
je
or
inc
xor
push
outsl
test
cmp
jg,pn
call
movsl
ss
pop
cli
sub
sbb
arpl
xor
add
add
lret
frstor
adc
dec
and
add
mov
cltd
sbb
add
or
push
and
mov
jg
cmp
mov
or
inc
inc
imul
lods
lret
and
out
cmp
sub
push
mov
push
mov
stos
cmp
loop
adc
loope
add
dec
enter
and
mov
mov
dec
mov
or
test
aam
mov
js
and
js
mov
inc
pushf
add
mov
push
fildll
add
or
lea
cmp
dec
or
clc
dec
mov
mov
sub
loope,pt
inc
dec
lret
and
pusha
jge
mov
call
mov
leave
jle
push
mov
jbe
outsb
and
cmpsl
lock
dec
jne
imul
and
daa
mov
xor
cmp
arpl
bound
dec
mov
jno
or
inc
pusha
mov
sub
loope
pop
cmp
push
arpl
test
mov
add
aaa
flds
cmp
cmp
sbb
jmp
sbb
or
mov
add
push
sbb
rol
sub
sub
sub
movlps
mov
les
je
je
adc
dec
jo
xor
mov
mov
dec
std
dec
push
ud0
iret
add
dec
add
inc
loop
or
and
or
sub
ret
push
push
xor
and
add
cs
sbb
mov
pop
dec
aaa
and
adc
inc
xor
push
pushf
push
xor
cs
and
add
add
sbb
movsb
imul
bound
adc
cmp
pop
cli
push
lock
mov
mov
inc
adc
cltd
incb
pop
sub
adc
mov
enter
xchg
enter
test
lcall
add
push
cmp
pop
dec
cmp
add
sbb
dec
mov
xchg
and
js
sub
mov
dec
sbb
add
stc
pushf
fnstenv
adc
add
clc
outsb
pop
push
jp
lock
push
mov
jb
xchg
xchg
lcall
sbb
sbb
dec
xlat
push
inc
les
pop
fs
jns
sub
daa
and
add
rolb
fcomps
and
je
dec
adc
xchg
stos
jo
xor
cmp
xor
push
mov
cmp
pop
sbb
mov
or
jbe
push
dec
daa
adc
or
pop
sahf
lret
sbb
add
pop
add
mov
std
adc
jg
test
push
daa
test
sbb
mov
mov
jo
int
adc
push
xor
test
outsl
es
sub
filds
push
pop
jbe
aas
adc
and
ss
fcoml
mov
and
and
jmp
adc
mov
sub
fnstsw
scas
mov
cmpb
fbld
imul
int3
js
inc
fisubl
push
adc
inc
add
pop
mov
cmp
jl
jno
mov
vprotb
sub
inc
push
inc
sbbb
dec
std
mov
inc
mov
xor
loope
adc
add
hlt
inc
sub
loop
mov
ret
jle
addl
or
adc
loope
push
pop
or
sub
jecxz
mov
jmp
sbb
pop
push
add
fldl
add
sbb
cmpsb
mov
pop
inc
push
push
mov
inc
add
sbb
pop
sub
and
mov
fstps
mov
or
or
clc
adc
dec
divl
jne
jg
inc
shr
push
add
shl
xchg
sbb
mov
aaa
rol
sub
dec
ffreep
aad
ret
adc
rcr
stc
add
inc
cmp
pop
cmp
xor
jp
adc
push
adc
jle
aam
loopne
jmp
or
es
or
inc
or
in
pop
add
div
or
orl
adc
mov
add
sbb
or
rorl
or
lds
jo
dec
sub
jg
xor
pop
pop
iret
shl
aam
subb
cli
jg
push
cmp
inc
push
repnz
push
imul
into
movsl
loope
or
movsl
js
inc
out
sub
xor
scas
cmp
inc
repz
jbe
add
testl
pushf
lods
stos
xor
loopne
mov
pop
pusha
icebp
in
dec
inc
jecxz
sub
adc
hlt
stc
dec
popa
cli
fcmovnbe
fldl
mov
out
sub
xor
adc
mov
ss
or
pmulhuw
add
lock
shll
in
in
sub
addb
or
loope
add
dec
jg
cmp
sbb
adc
lret
and
mov
sub
je
inc
mov
add
enter
fdivrs
sub
jmp
jg
aad
sub
in
jl
out
sbb
push
add
filds
inc
push
add
clc
mov
mov
pushf
and
lea
outsb
cmpb
adcl
insb
jmp
pushf
add
lods
or
fiadds
jnp
push
loopne
int3
push
sbb
mov
lret
adc
sub
cmp
add
js
push
jmp
sarb
clc
xor
or
std
add
lea
shl
add
lcall
add
jg
cmc
aaa
adc
dec
je
dec
jne
adc
add
or
inc
push
add
sub
in
xchg
sub
js
mov
push
imul
push
js
xchg
push
or
add
push
pop
add
popf
repnz
mov
movl
mov
add
pop
and
inc
or
adc
and
dec
add
pop
cld
mov
xchg
repnz
dec
pop
ja
sbb
sbb
call
xchg
and
test
inc
test
jecxz
rolb
sub
or
and
push
xchg
mov
std
enter
jmp
div
jae
add
fsubrp
enter
inc
mov
mov
fdiv
push
cmpsb
cmp
dec
sub
add
sub
add
sbb
mov
mov
push
dec
mov
lock
sbb
add
psubsw
cmp
inc
add
mov
or
imull
sub
and
add
pop
daa
pushf
and
dec
jne
jne
daa
jno
xchg
mov
mov
lock
sti
jne
jbe
aaa
imul
inc
pop
shlb
and
mov
mov
ds
jae
jp
or
les
das
add
cmp
cmc
adc
daa
into
popf
test
push
add
sbb
and
push
or
inc
mov
pop
inc
jno
and
pop
enter
add
rcl
les
rcll
and
jp
cli
addr16
jle
add
xchg
sbb
insb
dec
jge
nop
clc
or
ret
and
jb
outsl
and
push
insb
cmpsb
js
scas
adc
jg
xchg
or
jmp
cmpsl
roll
addr16
push
andl
mov
addr16
xor
cmp
jo
sbb
je
ret
jg
stos
ret
outsl
mov
sub
std
mov
call
xor
je
xor
inc
fcoml
mov
or
rorl
inc
movsb
es
lods
jge
pop
dec
dec
or
lcall
dec
adc
pop
sbb
out
shll
jo
push
push
addb
subl
mov
push
js
push
in
es
pop
sbb
add
outsb
lret
add
enter
fsubs
dec
mov
jb
lcall
fnsave
push
pusha
scas
xchg
subl
mov
mov
dec
inc
ret
dec
jne
in
sbb
add
add
jle
outsb
and
xchg
jecxz
mov
roll
andl
jne
int
cmpl
xor
and
dec
or
sub
ret
push
out
imul
pop
daa
and
sub
mov
imul
jae
jl
jmp
cmp
and
adc
adc
mov
or
fwait
pop
cli
repnz
aas
cmp
xor
sahf
enter
inc
xchg
or
or
int
sbb
or
loope
jo
adc
iret
dec
push
push
jmp
pop
dec
js
adc
push
sbb
sbb
rorl
xor
jmp
int3
test
adc
ret
cmp
orb
add
rorb
push
adc
and
je
push
outsl
ss
mov
sub
jmp
loopne
xchg
jmp
push
call
fwait
jle
int
lret
mov
fstpt
sub
push
mov
pop
out
jo
cmp
inc
or
add
xchg
mov
sbb
mov
adc
push
leave
mov
dec
lock
bound
out
push
lea
and
addr16
inc
push
lea
inc
or
lea
test
xor
out
addl
mov
inc
adc
sub
inc
push
dec
adc
movsl
lret
push
cwtl
aas
push
mov
inc
inc
sub
dec
sbb
mov
add
add
outsl
push
scas
add
add
js
pop
rclb
jno
push
mov
loopne
adc
xchg
inc
shlb
add
adc
inc
push
js
push
fsubl
jbe
test
jne
sbb
cld
ja
jnp
fwait
or
nop
aad
push
rcl
push
pop
add
cli
push
les
lea
xor
sbb
mov
sub
xchg
sbb
xor
out
test
push
jg
call
adc
out
pop
inc
lock
leave
pop
add
push
add
adc
shl
sarb
and
test
add
push
jl
add
mov
inc
or
dec
fs
xchg
stos
adc
or
mov
loopne
imul
enter
push
push
js
and
daa
mov
cmp
xorl
jne
adcl
sub
jecxz
rol
add
addb
lahf
and
dec
je
test
cmp
aas
sbb
or
or
add
ja
add
inc
cwtl
push
aas
addr16
pop
mov
inc
jae
push
ret
popf
movb
call
mov
dec
aad
mov
or
xchg
mov
sub
cmpl
test
inc
add
add
lock
mov
sub
sbb
inc
mov
push
mov
dec
cltd
test
inc
out
adc
pop
or
loopne
cmp
and
push
mov
mov
imul
dec
xor
mov
xchg
fwait
aas
push
sub
mov
or
imul
adc
enter
shll
inc
sub
push
in
mov
adc
or
mov
ja
add
js
mov
ret
xchg
mul
push
lea
repnz
cmp
xor
push
ret
jg
sub
lea
aas
mov
inc
sbb
cmpsb
jbe
lock
dec
xor
xchg
sbb
cli
push
pop
in
lsl
mov
mov
mov
ret
inc
inc
or
push
push
mov
iret
xorb
jl
push
pop
mov
insl
adc
sbb
push
cwtl
loope
arpl
les
dec
push
ja
xchg
pop
dec
jo
icebp
inc
push
inc
inc
sbb
mov
sub
outsb
xor
jo
mov
pop
repz
lods
daa
mov
sub
or
pop
stos
daa
mov
xor
std
mov
push
sbb
jb
shl
add
add
push
inc
inc
push
jmp
idiv
std
add
popf
sbb
cmp
xor
sbb
push
mov
lock
jae
pop
fisttpl
dec
lret
inc
xor
jo
loope
sbb
add
orl
pop
test
ret
mov
push
pop
or
cmp
bound
test
repnz
ret
sbb
adc
mov
add
js
int
inc
mov
test
or
mov
cwtl
enter
dec
sub
jecxz
push
imul
mov
cmp
add
rol
testb
jle
je,pn
inc
movsl
adc
cmpsb
je
adc
mov
daa
xor
xchg
adc
jmp
loopne
lock
iret
mov
or
fldl
mov
xchg
cmp
outsb
pop
je
or
pop
inc
lcall
cmp
or
jo
js
dec
cmp
inc
outsl
adc
and
imul
test
jle
rcrb
inc
pusha
xor
int3
add
pop
adc
add
or
add
mov
insl
dec
pop
and
ljmp
mov
mov
lret
mov
rcll
dec
sti
arpl
dec
imul
inc
mov
mov
cmp
lods
pop
in
test
sti
ljmp
fldenv
mov
sub
fistpll
sub
pop
lcall
push
xchg
pop
or
sbb
lret
adc
js
arpl
xor
subb
andl
mov
xchg
mov
pushf
outsb
adc
jnp
data16
inc
adc
sub
xor
and
inc
insb
stc
lods
jle
xor
incb
div
pushf
movsl
cmp
sbb
rolb
cmpb
add
ret
push
push
pop
dec
mov
inc
sub
jmp
xchg
mov
adc
loopne
jp
xor
or
jp
xor
xor
cld
stos
inc
sbb
addb
add
push
or
addb
lock
adc
lock
jg
push
lea
or
and
call
jbe
int
push
pusha
lea
dec
clc
or
sub
xchg
mov
leave
movsl
jbe
mov
lcall
scas
cmpsb
or
lea
fcmove
scas
xor
sub
push
fbstp
push
push
sbb
orb
and
fstps
sbb
jo
mov
pop
mov
call
gs
lea
xor
add
adc
or
adc
and
scas
and
ljmp
out
inc
push
sbb
shlb
jne,pt
xchg
leave
adc
test
movsb
or
or
test
lods
adc
add
jmp
call
shrb
adc
and
xchg
div
sbb
imul
add
cmpl
dec
cmp
imul
adc
clc
push
cmc
aaa
pop
ret
sub
add
fsts
pusha
xor
cwtl
les
inc
sti
cmp
fmuls
mov
add
mov
sar
sub
cmpsb
lea
sarb
pushf
cmp
vcvtsd2si
or
dec
mov
mov
mov
mov
stc
cltd
movb
decl
dec
jns
pop
fdivs
ss
push
test
pop
test
mov
xor
inc
dec
push
and
cmp
mov
push
clc
push
das
add
add
push
dec
inc
or
out
push
call
pop
xor
sub
inc
and
or
or
mov
inc
daa
mov
and
jns
add
sub
add
imull
push
pop
adc
iret
cmpsb
xor
ljmp
adc
adc
mov
sub
ljmp
inc
mov
rol
in
clc
cs
jmp
rorl
in
mov
sbb
movsb
xchg
fs
add
mov
mov
insb
sbb
cmp
call
aaa
add
sbb
or
push
and
xor
dec
pop
cmp
sbb
mov
fstpl
cmp
daa
out
data16
idivl
fdivs
inc
or
sbb
inc
movsl
arpl
test
push
jp
push
pop
or
lea
jmp
cmp
adc
adc
sbb
jecxz
mov
xchg
movsb
adc
fists
dec
pop
scas
push
pop
lea
out
jge
add
inc
and
push
bound
shr
jecxz
cmp
sarl
pop
add
add
outsl
sub
movb
cs
out
rorb
ret
xor
and
sub
lock
lret
scas
mov
mov
push
int
push
jb
and
pusha
xadd
mov
add
inc
mov
sbb
push
push
cmpsl
bnd
pop
sbb
sub
and
cmp
xor
xchg
sti
jge
out
mov
pop
pusha
adc
or
inc
rcrb
push
fisttpl
scas
cmp
out
and
add
aam
rorb
mov
adcb
jbe
pop
xorb
pop
and
testl
pop
movsb
sub
cltd
jns
add
sub
pusha
sbb
repz
xchg
push
sahf
push
shl
mov
lret
push
or
inc
push
sub
or
movsl
and
outsb
xor
out
push
or
or
mov
xorb
orb
adc
pusha
and
popf
call
lods
or
or
testb
add
sub
orb
imull
mov
sub
add
pop
adc
add
pop
jg
sub
subb
adc
fbstp
inc
setbe
out
rcrb
test
jae
or
jmp
mov
adc
cwtl
xor
scas
sub
clc
lret
jl
and
push
cwtl
rclb
push
push
push
mov
push
mov
sub
mov
cmp
jmp
dec
jb
out
add
test
stc
test
cmp
and
mov
es
lods
pop
or
leave
popa
xchg
push
sbb
dec
sbb
pop
push
mov
fwait
lcall
pop
push
adc
sbb
push
scas
sarb
ljmp
out
out
adc
leave
clc
sbb
adc
mov
add
shll
push
jo
cli
add
aad
mov
and
nop
rcrl
mov
jl
pop
sub
loope
stc
push
lret
and
jne
xor
cltd
xor
mov
int
sub
fmull
sbb
data16
add
lea
sahf
loop
test
xchg
cmp
add
xor
out
outsb
pop
mov
cli
sub
lahf
push
sub
jne
shl
std
dec
sbb
pop
xchg
mov
mul
andl
or
mov
ss
lcall
pop
jbe
data16
cmp
pop
inc
or
adc
dec
mov
pop
add
jg
add
repnz
fbstp
xchg
sub
sub
daa
sar
sub
in
mov
jl
dec
cmp
xor
shlb
and
lock
inc
and
fimull
mov
jmp
pop
inc
inc
inc
sub
cwtl
mov
pop
or
cmp
daa
iret
add
and
gs
push
js
and
inc
adc
shr
add
push
or
or
divl
xor
mov
or
adc
push
and
pusha
fsts
lcall
push
sti
mov
add
pop
imul
lcall
in
jno
adc
fsts
lcall
inc
jp
mov
xor
rcr
push
xor
loope
out
mov
fadds
fsubs
shrb
les
jge
cmpsl
xor
bound
daa
and
fadd
mov
pop
inc
inc
and
mov
clc
inc
pusha
add
sbb
adc
xchg
push
sbb
and
sub
sbb
add
out
sbb
push
push
or
stos
adc
pushf
in
push
loopne
dec
fwait
adc
shrl
test
adc
mov
movsb
fdivrl
mov
fnstcw
cmp
cmc
sbb
and
add
sbb
test
lds
in
add
mov
adc
sahf
pop
pusha
xlat
mov
dec
add
add
mov
inc
imul
jo
scas
or
or
inc
clc
or
fsubs
test
and
sub
adc
xchg
mov
imul
mov
popf
scas
add
data16
cld
jae
push
sbb
adc
sbb
shll
mov
bound
loope
jmp
stos
or
push
xchg
scas
stos
xchg
sbb
lds
or
pop
cmp
popa
xor
icebp
shll
fwait
cmpl
lds
xlat
and
lods
or
add
sbb
xor
jecxz
cmpsl
add
xor
inc
dec
repnz
mov
sub
subl
jno
adc
fs
xor
popa
test
ds
push
mov
loope
iret
ficompl
mov
fmul
or
inc
pop
pop
adc
ljmp
mov
xor
rclb
inc
pushf
cmpsl
adc
das
cmpsl
or
fsubrs
sbb
push
push
lock
sub
add
push
mov
mov
mov
shlb
icebp
adc
push
inc
repnz
mov
jle
idivb
add
lcall
shlb
inc
cmp
out
int
js
or
shl
lea
add
pop
outsl
push
sub
jo
mov
lea
inc
push
mov
sti
lret
and
adc
imul
rolb
sbb
int
mov
ljmp
push
lock
cmc
pop
add
jecxz
shll
add
dec
xor
pop
dec
and
in
add
arpl
rolb
add
jo
push
call
inc
insb
shlb
ss
add
rcrl
dec
push
push
push
push
or
aam
addl
test
inc
and
std
mov
out
lea
jb
cmp
cli
or
and
push
aam
adc
orb
and
pop
insl
outsl
jg
mov
mov
fwait
adc
pop
mov
mov
les
adc
xor
inc
cwtl
test
jmp
or
std
lret
and
ret
repz
sbb
push
add
adc
fdivl
and
subb
stos
add
or
fstp
mov
dec
sub
and
rorl
ret
or
das
push
pusha
sahf
test
add
or
add
dec
pop
out
aam
mov
sub
cli
cmp
inc
out
sub
mov
dec
and
push
and
ss
mov
fistl
dec
add
dec
pop
add
lods
sub
add
lds
inc
packsswb
jle
cli
ret
add
adc
xor
adc
sub
setp
stos
xor
cmp
jnp
xlat
push
sbb
cmpl
cli
loope
cmp
push
add
cld
xchg
lds
dec
push
and
push
dec
mov
dec
push
mov
add
push
mov
cmpsl
xor
pop
mov
orb
mov
adc
mov
lcall
add
or
out
outsl
push
adc
mov
or
or
loopne
push
inc
and
push
jle
out
or
sbb
mov
in
adc
lods
repnz
add
loopne
push
imul
jl
add
aad
rorb
in
test
mov
or
and
repnz
pop
aaa
imul
aad
mov
fisubl
mov
loopne
push
and
pop
add
push
adc
fstpl
sbb
test
or
push
shrb
or
lret
add
test
in
cs
pop
add
addr16
pop
lods
stos
icebp
add
jno
push
ret
lods
ss
or
add
or
adc
orb
jmp
sub
jne
pop
add
cmp
icebp
sbb
xor
cmp
sbb
scas
dec
lcall
movsb
cmp
repz
sbbb
fcmovu
cmp
jmp
clc
adc
mov
movsb
sbb
xor
imul
orl
aam
xchg
inc
ret
rol
mov
mov
bound
sahf
orb
mov
xchg
add
test
outsl
imul
add
loopne
jmp
jo
xchg
mov
sbb
or
mov
mov
je
sahf
adc
or
out
inc
sbb
cmpsb
jp
mov
push
movsl
pop
jbe
xor
and
push
pop
insl
add
into
arpl
lods
mov
lock
xor
adc
push
push
dec
adc
insl
pop
stc
dec
cwtl
add
pop
enter
push
ficoml
mov
dec
cmpb
mov
mov
dec
nop
mov
scas
bound
add
jecxz
pushl
mov
pusha
dec
xchg
dec
fsubl
cltd
js
mov
pushf
and
and
aas
loop
sub
sub
ficoml
inc
repnz
les
sub
push
cmp
out
or
add
or
mov
or
xor
lea
pop
add
adc
jo
xchg
minps
daa
inc
mov
xchg
test
mov
and
mov
js
mov
xchg
push
add
lods
push
dec
jmp
lret
dec
and
push
add
add
pop
das
push
push
aam
mov
pop
or
into
fcoml
pop
pop
dec
pop
enter
or
jmp
mov
cli
cmp
xchg
inc
xor
adc
negb
sbb
jbe
je
xor
or
aas
adc
adc
loop
mov
pop
nop
push
sub
loopne
sbb
sbb
nop
hlt
fstps
fbld
daa
lcall
insl
std
pcmpgtw
push
mov
repnz
fisubs
sbb
pushf
mov
lods
mov
stos
stos
mov
mov
add
pop
sub
or
pop
mov
pop
outsb
or
mov
jmp
jo
or
repnz
xchg
dec
push
in
mov
mov
dec
cmpsl
jl
nop
aad
sahf
jno
add
mov
or
push
out
sbb
inc
inc
outsb
add
add
sbb
jnp
sub
test
lea
add
mov
fsubrl
sbb
enter
pushf
pop
add
test
enter
jle
mov
incl
sbb
inc
or
cltd
mov
jl
repnz
pop
adc
insb
insl
adcb
mov
xchg
inc
stos
fnstsw
push
push
adc
mov
pop
and
lret
xlat
cmpsl
imul
out
sbb
outsl
inc
icebp
xchg
and
subb
xchg
ja
shl
mov
cmpsl
mov
or
dec
imul
pop
shrb
pop
mov
lahf
imul
adc
or
or
pop
icebp
lahf
rcll
or
adc
in
or
ja
int3
pop
movl
xchg
pop
cwtl
call
mov
ljmp
xor
mov
fistpl
nop
adc
pushf
inc
ss
add
or
pop
jg
xchg
adc
sub
or
pop
add
push
push
add
dec
add
jmp
xchg
mov
inc
rol
push
jle
jns
cltd
jp
std
inc
das
add
scas
push
sar
push
pop
hlt
mov
in
push
push
js
push
add
sahf
lret
adc
and
test
or
or
addl
sub
dec
fisttpll
mov
push
mov
sbb
clc
cmp
push
or
out
adc
mov
sub
js
adc
leave
loopne
adc
mov
inc
jne
inc
push
sbb
push
push
push
gs
sbb
aam
sub
mull
inc
xchg
test
cmp
xchg
movsb
mov
fsubrs
mov
mov
repnz
into
mov
inc
push
and
xchg
int
lock
or
test
nop
mov
xchg
or
fstl
mov
push
in
jno
jne
cli
add
mov
ljmp
pop
sti
add
or
sub
mov
inc
mov
mov
test
add
inc
or
clc
in
mov
inc
xor
push
push
cs
fdecstp
and
inc
sub
lcall
mov
xor
push
mov
and
addr16
jl
mov
push
lret
rorb
sbb
sbb
xchg
dec
or
push
mov
aas
sbb
add
std
add
adc
inc
dec
push
jg
cmp
sub
sbb
sbb
push
add
and
push
dec
or
inc
test
inc
or
push
test
xor
addr16
jmp
jp
dec
out
pop
stc
or
jns
std
dec
add
insb
loope
push
inc
fcoml
adc
sbb
and
cmp
leave
and
push
mov
pop
add
sahf
lods
or
mov
mov
pushf
hlt
dec
movsl
sub
sbb
add
mov
cs
xor
repz
mov
dec
lahf
jl
or
sahf
sti
pop
fists
dec
pop
xchg
sbb
xor
mov
into
ret
enter
sub
shll
jg
inc
adc
push
mov
stos
imul
roll
adc
adc
push
cmp
incl
std
nop
fiaddl
cs
push
adc
in
lods
mov
or
or
cmp
jl
roll
dec
arpl
adc
lret
adc
movb
mov
xchg
fadds
push
shll
adc
jmp
ss
sbb
jmp
xchg
sub
insb
insb
mov
mov
ds
sbb
jl
movsl
and
adc
jnp
pop
rcrb
push
mov
adc
add
dec
dec
fists
les
inc
and
nop
sbb
push
data16
mov
test
insb
sub
xchg
sub
xor
sub
rcrl
sub
pop
and
add
cmp
jmp
stos
cmp
dec
push
sub
dec
fcomps
call
push
mov
sbb
pop
jno
sarb
fsubrp
pop
sarb
sub
clc
push
xchg
jne
cli
push
lea
mov
mov
inc
shll
jl
adc
jl
pop
sub
push
es
add
stos
enter
push
and
sub
push
test
cmp
nop
jg
or
and
jge
or
cmp
push
rcl
sbb
or
inc
sbb
adc
pop
mov
popf
iret
pop
add
outsl
dec
andl
rcrl
icebp
jo
les
and
loop
lea
sub
in
decl
adc
sbb
mov
sbb
xor
jbe
push
xor
mov
loope
mov
fstl
xchg
inc
cmp
mov
enter
add
sbb
add
xchg
dec
inc
xor
pop
pop
and
adc
ret
rorb
pop
or
int
ds
clc
hlt
fcmovnb
pop
sbb
or
adc
mov
adcl
arpl
bound
push
dec
pusha
pop
pop
inc
arpl
xor
pop
jns
ret
pusha
mov
push
pop
and
adc
dec
stos
inc
fidivl
scas
dec
add
cmp
and
push
or
sub
in
or
inc
push
loopne
dec
mov
je
dec
je
cwtl
scas
sarl
sbb
inc
add
orb
xchg
mov
jl
cmp
rcrb
push
outsl
aad
xor
push
movsb
xor
add
inc
mov
jo
orl
sub
sbb
pusha
inc
and
cmp
and
dec
insl
push
orb
adc
mov
adcl
mov
add
ret
or
add
mov
in
dec
cli
mov
nop
adc
push
sarb
cmpb
add
incb
stos
or
sarb
sahf
in
test
pushl
ja
lea
sti
mov
je
mov
sub
sbb
push
cmpsl
mov
cmp
les
sub
push
ja
jo
lods
lcall
fstp
xor
shlb
sahf
xchg
mov
add
xchg
popl
or
inc
inc
repnz
mov
mov
icebp
inc
xor
xchg
xor
roll
and
sub
pushf
jae
lods
pop
shlb
pop
add
xchg
loopne
cld
push
push
mov
adc
push
sbb
movsl
sbb
pop
test
add
adc
xchg
adc
mov
bound
add
or
add
cmp
in
xchg
xchg
xchg
or
or
inc
orb
mov
or
gs
stc
xchg
rol
pop
shlb
cmp
xchg
push
icebp
inc
xchg
out
rolb
sub
push
cmp
mov
push
push
sbb
shlb
xchg
cmp
mov
add
adc
dec
mov
add
loopne
test
cmp
mov
push
loope
leave
jns
mov
aas
mov
cmp
fs
or
lods
leave
sub
roll
or
push
xor
imul
scas
psrld
pop
testb
inc
push
je
mov
pop
push
nopl
mov
daa
out
or
xor
leave
adc
xor
daa
sbbl
ror
and
jge
scas
sub
in
or
mov
cmpsl
nop
iret
lcall
test
in
lahf
clc
js
dec
test
add
dec
adc
jbe
xor
mov
fsubrp
adc
add
add
cmp
jmp
inc
push
int3
jp
inc
in
cmp
cmp
adc
mov
icebp
into
and
mov
lahf
push
mov
faddl
and
mov
dec
daa
dec
lods
mov
mov
fwait
in
dec
push
inc
loop
js
add
orb
test
push
or
addr16
in
pop
push
push
inc
mov
lock
sar
insl
insb
dec
or
mov
push
push
inc
aad
sub
push
adc
adc
data16
cmp
mov
faddl
lock
and
test
push
andl
movsb
sub
pusha
adc
fisttpll
rorl
jmp
cmp
jmp
mov
je
in
cmp
push
adc
jl
and
sbb
je
stc
or
aas
shrb
add
push
cmp
movb
jne
mov
sbb
aam
xchg
fsubrp
adc
or
push
pop
sbb
std
xchg
push
adc
sbb
pop
imul
std
mov
or
lock
lret
add
mov
or
mov
stos
adc
and
aaa
test
xchg
sbb
sub
je
mov
jp
xor
clc
xor
pop
adc
daa
dec
or
dec
popa
imul
cmp
cs
dec
add
inc
insl
mov
pop
sbb
inc
loop
dec
xchg
dec
icebp
fstps
pop
pop
mov
sbb
or
push
xchg
push
add
xchg
or
cld
or
fsubrs
clc
mov
cmpl
or
add
mov
arpl
imul
adc
inc
mov
push
xchg
or
test
arpl
push
loopne
push
sbb
xchg
mov
data16
mov
inc
movsl
sub
ss
ja
testb
int3
jno
repz
push
insl
insl
idivb
ret
jbe
lea
sahf
or
add
jae
jne
ret
inc
test
dec
bswap
adc
les
mov
dec
mov
sbb
push
dec
or
test
mov
push
andb
bound
jne
sti
fcmove
sbb
sub
dec
mov
es
xchg
pop
push
xor
imul
lds
fldpi
pop
xchg
pop
pop
xchg
subb
push
cli
addb
mov
inc
and
xchg
rcrb
loope
push
jnp,pn
hlt
test
bound
daa
mov
inc
mov
inc
adc
sbb
add
ja
dec
pop
lea
push
je
ljmp
int3
cmc
in
aad
sti
enter
push
fistps
repnz
jle
rorl
push
adc
notb
leave
jne
popf
and
jnp
inc
les
xchg
shrl
sahf
jp
sbb
ss
inc
xchg
pop
or
or
jne
pop
or
xchg
xchg
pop
pop
inc
arpl
mov
mov
imul
dec
jno
jb
pop
lea
xlat
inc
dec
sbb
inc
add
xchg
scas
jne
repz
dec
pop
sbb
sbb
add
fwait
dec
sub
dec
cmp
pop
sbb
cmp
add
mov
dec
fimull
or
jg
fcomps
and
mov
mov
loop
fstpt
push
dec
inc
jle
andb
cmp
mov
ret
sbb
sbb
inc
movsb
lret
js
aad
and
xor
add
xchg
cmp
insl
push
add
aas
push
sub
pop
enter
dec
sbb
and
adc
dec
mov
sub
pop
mov
sbb
ret
in
and
inc
lock
and
test
rcl
jbe
inc
push
outsb
clc
sub
lahf
popa
pusha
jg
insl
mov
dec
add
sarb
or
xor
inc
ds
ds
into
pop
vpblendd
pop
sub
pop
repz
or
shl
test
xor
cmp
popf
push
adc
inc
xor
sahf
adc
sub
icebp
in
sbb
sbb
jg
call
fs
subb
pop
add
rol
inc
repnz
enter
rcll
leave
adc
les
and
outsl
push
inc
scas
pop
sbb
cld
nop
stc
fildll
in
xchg
out
aaa
pop
dec
mov
dec
cmp
jb
test
add
sub
sbbb
lds
add
test
or
push
test
imul
cmp
dec
inc
mov
aad
test
icebp
dec
js
mov
pop
mov
jns
push
pop
pop
fadds
dec
sub
sbb
adc
adc
sbb
sbb
jno
jo
repnz
shlb
mov
sahf
push
scas
or
push
addr16
pop
inc
pop
jmp
stos
ret
lea
aam
loopne
add
in
shlb
ljmp
jg
shl
bound
mov
mov
push
lods
pop
push
adc
mov
and
adc
mov
movsb
mov
push
sub
dec
rcrb
jae
mov
iret
cmp
jmp
arpl
xchg
dec
jb
and
sub
mov
shrb
mov
enter
push
push
leave
xchg
sbb
lret
dec
mov
popa
jne
aas
add
lods
adc
out
bound
jne
or
adc
inc
mov
inc
in
out
sub
pop
dec
dec
lret
inc
jl
xchg
xchg
iret
out
addps
jecxz
lods
pop
add
push
mov
push
dec
aam
movsb
xor
sub
add
jne
push
xchg
insl
adc
iret
adc
gs
dec
lea
nop
inc
push
sbb
xor
pop
andl
inc
ret
mov
xchg
push
dec
imul
sub
dec
lret
movsl
cmpsl
jmp
pop
insl
mov
jbe
test
sub
mov
push
mov
adc
push
lods
adc
loopne
sub
fcom
add
fucomi
inc
imul
push
in
dec
insb
sub
inc
pop
sub
rolb
mov
mov
mov
and
lahf
pop
jno
adc
popa
scas
push
or
sub
push
add
mov
cmp
mov
and
aas
adc
insb
nop
fwait
add
pusha
add
incl
adc
mov
jmp
popa
push
and
stos
lea
into
adc
and
scas
test
xadd
or
out
addr16
popf
dec
pop
movl
sbb
dec
test
rolb
push
and
iret
inc
sbb
sub
xor
add
fsts
add
sub
push
mov
or
sbb
repnz
sub
jge
cmpsb
loopne
dec
out
push
push
jne
or
cltd
add
inc
sub
fs
stos
dec
jle
sahf
test
aaa
loopne
xchg
mov
push
lret
inc
or
or
or
dec
push
lea
testl
lea
leave
std
fs
sbb
inc
pop
dec
mov
xchg
jle
sarb
or
inc
adc
xorl
and
test
push
or
inc
xlat
push
cs
fcmovnb
xchg
or
adc
rcrb
sbb
or
and
or
insb
or
jbe
inc
xlat
mov
xchg
pop
nop
into
pusha
call
test
mov
mov
js
cwtl
add
dec
inc
orb
jmp
inc
dec
inc
xor
daa
test
sub
dec
pop
mov
lret
shll
or
mov
mov
movb
call
dec
daa
les
pop
xor
add
push
push
inc
popa
or
rcrb
or
pop
pusha
sbb
repnz
push
iret
inc
ds
jl
sub
xchg
push
rorl
and
push
mov
add
imul
inc
add
movb
es
add
ret
subl
je
orb
inc
sub
pop
push
mov
out
fsubr
test
rcrb
fistpl
nop
shlb
and
add
add
daa
out
add
inc
mov
clc
or
pop
jg
icebp
adc
dec
jl
sub
in
daa
or
cmp
mov
cmp
push
or
lea
cmp
fldl
pushl
sbb
pop
push
or
fiadds
popa
dec
dec
dec
add
addr16
lret
push
repnz
pop
into
out
mov
gs
pop
inc
xor
or
es
jb
adc
jae
pop
test
push
movb
sub
mov
sub
adc
pop
aad
int
dec
sub
cmp
and
inc
mov
add
inc
xchg
dec
or
xor
fdivl
pop
cmc
pop
push
addr16
lea
mov
pop
jl
inc
fs
mov
push
aaa
inc
loop
fstpl
and
cmp
or
or
dec
pop
fildl
dec
sbb
fsts
cmp
insl
fs
pusha
xchg
adc
pop
pop
mov
movsb
push
adc
mov
inc
sbb
push
jl
rorb
aad
inc
je
nop
and
adc
add
cmp
dec
xchg
jne
jno
loop
mov
lea
jne
ja
pop
imull
add
movsb
pushf
cmp
xchg
movsl
ret
mov
sbb
pusha
xchg
mov
lret
push
mov
rcr
cmpsb
mov
mov
roll
adc
dec
out
sahf
out
jae
xchg
test
roll
cmp
or
les
and
ja
or
insl
jne
or
xchg
sbb
stc
sub
jo
sbb
cmpsb
adcl
or
cmp
mull
ljmp
mov
adcl
in
movl
push
pop
inc
in
jo
pop
push
bsr
mov
push
xor
aam
mov
mov
ja
xchg
push
je
repz
icebp
ss
mov
inc
pop
push
insb
inc
lods
ret
push
cltd
rorb
lcall
xchg
jg
ficoml
int3
pop
mov
pop
mov
aam
and
push
aad
mov
jae
enter
dec
das
lds
cmp
push
or
or
pop
push
inc
xchg
xor
or
dec
cmp
mov
sub
lahf
and
mulb
sbb
insl
cmp
xchg
pop
or
loop
stc
xor
inc
pop
inc
movsl
orb
das
in
fs
add
sbb
push
sti
and
mov
mov
push
loop
push
adc
xor
pop
lret
dec
push
xchg
sbb
nop
aad
mov
cmp
sbb
shlb
sbb
dec
and
ret
pop
and
inc
push
data16
sbb
mov
dec
and
fsubs
dec
stos
mov
xchg
nop
rol
sbbb
adc
cmp
test
jle
pop
pop
mov
jbe
xor
mov
inc
inc
int
dec
imul
lahf
push
push
push
pusha
adc
cld
dec
jmp
stos
adc
sub
or
and
xor
or
add
sub
in
pop
and
sbb
add
and
mov
push
or
and
subb
inc
insb
xorb
mov
fs
inc
mov
ds
lods
cmp
mov
lea
dec
loop
inc
cmc
pop
je
cmp
dec
add
cwtl
outsl
sub
jge
dec
sbb
push
and
push
add
push
sbb
sub
push
push
ss
add
dec
cmc
push
push
inc
adc
xor
xor
das
xchg
dec
in
sbb
dec
arpl
dec
cmp
ds
mov
fidivl
mov
jmp
ds
addr16
nop
xchg
out
ds
nop
xlat
push
stc
and
inc
bound
mov
sub
inc
sub
aad
xor
xor
ret
clc
pcmpeqb
dec
je
or
inc
stos
pusha
adc
int3
test
insb
call
sub
rcrl
adc
pop
lahf
xor
or
inc
cmp
pop
add
fcoms
bound
sub
movl
test
dec
pop
mov
shlb
push
hlt
inc
faddl
movsl
mov
push
movsb
mov
add
idivl
push
sbb
jns
inc
push
sbb
jecxz
rclb
repz
pusha
inc
jmp
pop
mov
shll
aam
add
sub
dec
insb
cmpsl
pop
mov
or
sub
xor
cmc
mov
movsl
sub
and
mov
jp
pop
cld
loopne
aam
lock
clc
shll
loop
sbb
ret
jbe
cmp
push
mov
push
mov
inc
xorl
pusha
pop
xchg
sub
les
push
add
in
lcall
mov
cmc
frstor
jl
dec
loopne
and
add
and
adc
add
aaa
cltd
bound
or
dec
mov
xchg
mov
js
movsb
jle
adc
addl
fsubrl
sub
or
add
dec
imul
je
push
aaa
lret
inc
mov
in
clc
mov
xor
xlat
mov
sbb
pusha
sbb
jb
subb
and
pop
ss
or
sbb
add
movsl
jge
rclb
gs
ret
adc
pop
and
icebp
push
fisubs
loopne
sbb
inc
add
add
clc
clc
out
dec
jmp
add
shll
dec
daa
cmp
leave
movsb
push
sbb
cmpl
dec
stos
add
call
and
xor
ret
adc
mov
cmp
outsb
mov
adc
test
dec
mov
mov
lock
pop
jmp
xchg
inc
movsl
jbe
imul
xchg
add
int
cmp
nop
aas
add
stos
test
sub
movb
pusha
sbb
inc
adc
aas
push
pop
les
popa
filds
pop
cwtl
ds
mov
leave
stos
in
pop
or
add
gs
pop
cmp
xchg
call
push
cmp
or
xchg
xor
push
nop
push
adc
sub
arpl
lcall
insb
popa
dec
movsb
inc
jo
subb
sbbl
add
adc
cmp
sbb
dec
xchg
sbb
scas
push
ss
mov
dec
pop
addl
dec
inc
hlt
sti
push
mov
repnz
add
inc
dec
sahf
cmpsl
sbb
cs
push
add
xor
push
adc
pop
popf
outsb
dec
pop
mov
jb
mov
xchg
cmp
sub
jg
shlb
jmp
jge
dec
and
aaa
aad
cltd
gs
and
loopne
js
stos
mov
dec
ret
and
jmp
int3
mov
push
jge
icebp
pushf
jne
push
push
imul
push
js
inc
xchg
add
mov
sbb
nop
jmp
add
scas
xor
jne
pop
pop
add
or
add
sbb
and
pop
lahf
xchg
xchg
cmp
pusha
and
roll
xor
stos
je
inc
pushf
mov
xor
rcll
and
sub
push
sbb
sarb
cmp
push
scas
sub
addl
push
outsb
push
lcall
inc
aaa
mov
rclb
push
mov
fisubrl
pop
xor
dec
push
mov
add
push
out
lret
scas
push
outsb
sbb
movsl
xchg
das
add
push
pop
dec
pop
addl
shl
dec
mov
add
cmp
xchg
adc
mov
adc
ret
adc
and
dec
add
adc
push
cmp
ds
sbb
clc
js
aaa
xchg
add
xor
adc
mov
push
pop
xchg
sahf
les
xchg
gs
popl
test
roll
in
int
jecxz
daa
pushf
sub
lret
call
orb
pop
add
adc
sbb
adc
ret
pop
push
and
cmp
push
nop
mov
cmp
movb
push
push
or
add
test
and
test
or
xchg
or
movsl
insl
jl
leave
jge
xchg
lods
fstps
not
jmp
adc
addr16
es
adc
loop
insb
sbb
shrl
dec
sbb
cwtl
in
push
jge
pop
sub
dec
jne
ret
test
push
push
push
mov
movsb
enter
ds
sbb
lds
roll
push
dec
push
jno
shl
mov
cmpsb
je
xor
mov
mov
cmpb
inc
andl
push
xchg
xchg
xchg
shrb
sbb
pop
pop
dec
pop
shlb
mov
les
leave
ljmp
push
adc
push
movups
ret
mov
dec
xchg
je
pop
add
push
add
inc
aaa
divb
dec
inc
jbe
xchg
sbb
sbb
dec
test
call
pop
inc
pop
jne
outsb
sbb
add
push
push
xchg
cs
or
lds
ret
aas
add
sub
nop
pop
into
pop
xor
adc
test
cwtl
pop
test
add
insb
xor
jo
mov
add
or
rorb
jge
sbb
sbb
and
daa
mov
xor
arpl
push
add
jno
mov
daa
mov
or
jmp
sti
daa
and
shrb
fcomps
sbb
pop
addb
xchg
push
es
xor
sbb
and
or
popa
insb
popa
or
mov
loope
cmp
dec
sbb
aad
pop
pop
fldt
cmpsl
stc
sub
mov
dec
sar
sbb
xchg
das
mov
fisubs
xchg
pop
sub
push
dec
or
and
add
sbb
pop
jns
push
lret
add
add
gs
mov
pop
add
sbbl
and
jnp
mov
fsubl
mov
xchg
push
scas
lret
inc
scas
shlb
icebp
dec
and
js
jge
inc
sahf
test
sub
add
adc
or
enter
mov
adcl
mov
inc
or
pushl
adc
fidivl
push
sbb
movsl
xchg
test
push
xor
shlb
xchg
sbb
jbe
shlb
dec
shlb
dec
pop
bound
dec
les
mov
push
scas
mov
lahf
or
mov
dec
xchg
cltd
mov
pop
les
push
mov
xor
nop
add
dec
or
jne
push
add
dec
call
sub
xor
xchg
xor
pop
dec
pop
or
movsb
pop
arpl
jo
sbb
lds
mov
push
mov
imul
hlt
add
fbld
or
inc
mov
dec
add
or
adcl
xchg
add
mov
xor
dec
xchg
jle
or
lds
shlb
sti
icebp
scas
rcll
mov
pop
sub
mov
mov
jmp
leave
xchg
dec
push
fsubl
cmpsl
or
cltd
dec
sti
push
cmp
addl
mov
jae
xor
push
dec
dec
push
xchg
xchg
movsb
test
test
xor
lahf
call
and
mov
xchg
cs
adc
xchg
fisttpl
inc
cmpsl
andl
lock
insb
xor
push
out
xchg
xchg
addb
jl
mov
jo
xchg
sbb
outsb
add
cmp
and
subl
push
sub
cltd
sub
pop
or
xchg
mov
je
mov
adc
lock
adc
cwtl
clc
or
dec
shrl
jl
or
xchg
push
in
ja
ret
dec
inc
adc
or
mov
sar
and
or
add
arpl
xchg
insb
inc
fnstsw
xchg
lcall
push
and
jnp,pn
adc
sbb
xor
mov
jns
push
test
sub
push
dec
jb
sub
xor
mov
push
or
test
adc
inc
sub
xchg
les
or
dec
and
inc
outsb
dec
inc
mov
add
insb
adc
cmp
inc
ljmp
push
repz
das
push
pop
add
push
add
loopne
aas
mov
push
pop
jb
movsb
lcall
adc
jbe
or
test
jecxz
adc
dec
mov
push
cli
or
sub
pop
pop
sbb
xchg
pushl
cmpsb
push
or
add
dec
mov
xchg
loope
pop
push
dec
movsl
or
sbb
inc
xchg
inc
pop
jp
nop
sub
je
sub
lret
aam
inc
cmp
cmpsb
push
jo
sub
pop
cli
or
or
sbb
inc
xor
test
dec
arpl
xchg
mov
pop
pusha
aas
push
adc
cmp
pop
std
mov
xor
inc
and
or
es
sbb
rol
in
rcll
sbb
inc
push
inc
inc
inc
insl
push
adc
dec
out
dec
or
and
iret
add
or
lahf
adc
inc
jb
add
mov
push
stos
aaa
lods
fs
xor
cmp
out
cwtl
sbb
out
sahf
test
jmp
pop
push
je
orl
ds
adc
shrl
pminub
dec
fimuls
push
ret
inc
xchg
cmp
movsl
push
push
sbb
add
mov
mov
ljmp
xchg
into
lret
cmp
add
pop
and
adc
xchg
xor
xchg
sbb
test
cwtl
in
shr
push
test
add
les
push
add
sub
das
add
mov
js
cld
xchg
mov
adc
loope
jp
xor
push
pop
ret
mov
push
push
cmpsl
sub
mov
adc
add
pop
std
inc
insb
cmp
add
adc
sub
std
sub
cmp
imul
cmp
cld
dec
cwtl
mov
lock
loopne
dec
or
push
sahf
subb
je
push
js
sbb
inc
rcr
mov
and
push
out
test
add
dec
pop
pusha
mov
sbb
mov
push
sub
fstl
inc
adc
gs
jecxz
jo
addl
out
xlat
call
ret
sub
dec
pop
ret
sbb
popa
push
pop
adc
sub
ret
adc
test
xchg
sub
sub
aam
and
inc
incl
cmp
or
jecxz
lods
inc
and
and
add
sub
fiadds
stos
insl
test
xchg
jg
sbb
mov
lcall
push
iret
mov
mov
add
xchg
sbb
std
ss
sbb
push
jle
xor
pop
inc
sar
mov
cmp
jne
imul
pop
dec
cwtl
push
lcall
adc
xchg
nop
imul
push
push
sbb
push
movsb
adc
and
xor
movl
push
sbb
adc
sbb
jmp
adc
mov
add
inc
add
pop
fs
xlat
shrb
ret
mov
push
repz
inc
das
ss
lcall
fwait
inc
cmpsl
push
push
xor
push
cwtl
lcall
andb
dec
push
push
mov
popa
jae
xor
and
push
nop
push
testb
jp
int3
inc
roll
leave
sbb
cwtl
mov
and
jo
or
mov
mov
dec
shrl
cltd
addr16
pop
mov
or
fwait
dec
popa
movsb
or
sub
adc
sbb
inc
adc
mov
xchg
xor
mov
test
or
jmp
jns
dec
call
push
adc
xor
fisttps
nop
daa
test
push
inc
cmp
mov
incb
add
or
push
or
fistps
mov
mov
adc
shrb
shll
aad
or
xchg
sbb
sub
dec
dec
adc
add
sub
scas
faddl
push
outsb
ret
push
push
out
xchg
adc
push
dec
lock
pop
cmp
jns
stc
and
sub
inc
push
push
out
lds
pusha
or
jno
ret
sbb
scas
xchg
mov
mov
or
movsb
push
jmp
add
dec
pop
cmpsl
xor
in
adcb
mov
jno
and
ljmp
and
ret
lahf
adc
cmp
pop
and
stos
sbb
shll
mov
inc
lods
rcr
faddl
cmp
add
out
adc
and
sub
adc
movb
push
stos
outsb
ret
lahf
rolb
fiaddl
inc
or
adc
mov
dec
adc
or
push
adc
nop
gs
push
popf
adc
pop
cmp
clc
aam
sub
add
push
inc
mov
daa
xor
fs
sbb
xor
int3
leave
stos
sbb
movsl
adcb
dec
add
ljmp
adc
nop
jmp
decl
call
pop
or
enter
xor
pop
sub
jne
sbb
add
and
add
dec
movsl
cmc
into
lret
sub
jb
and
jg
adc
adc
add
mov
stos
and
jg
test
dec
sahf
jg
cwtl
dec
push
add
or
mov
les
rcr
and
add
cs
into
and
mov
dec
loop
adc
lahf
xor
push
test
and
test
push
sbb
add
popl
sbb
es
push
rorl
add
lods
aas
subb
add
scas
das
nop
add
cmp
and
ljmp
push
jg
jae
xchg
pop
add
dec
or
add
jns
ret
loopne
inc
or
xchg
nop
sub
inc
les
leave
cmp
or
insl
jns
cmp
mov
and
push
mov
dec
mov
ret
rolb
jle
dec
jle
push
fwait
mov
dec
or
fwait
pop
shrb
push
aad
aas
insl
push
mov
pop
leave
sbb
fdiv
pop
and
inc
dec
mov
fcompl
jne
adcb
ss
ficoms
dec
sub
inc
aam
or
push
dec
fwait
cli
sbb
loopne
pop
loope
bound
movsb
or
jg
sbb
push
add
int
icebp
jp
cmp
invd
sub
add
and
mov
xor
add
scas
push
andl
lds
xchg
xchg
or
adc
fs
pop
add
mov
subb
add
bound
dec
pop
lahf
push
xchg
inc
sub
lret
int3
add
xor
dec
pop
mov
loopne
or
sbb
add
or
add
jae
pop
movsb
push
xchg
xor
mov
mov
popf
cmpl
enter
cmp
add
cmp
lret
xchg
or
mov
adc
adc
movsl
imul
pop
gs
nop
adcl
lahf
loopne
mov
js
out
jo
lock
iret
ja
rcr
pop
xor
cwtl
adc
mov
mov
pop
ljmp
cmp
aas
jo
push
mov
ja
shrb
sarl
xchg
jl
pushw
test
fldt
jg
out
pop
les
cmpl
outsb
popf
jl
fldcw
lret
decb
or
mov
sti
pop
sub
and
iret
js
mov
add
xor
addl
lcall
pop
ret
pop
in
out
and
repz
jnp
inc
or
xchg
ret
add
sbb
add
cs
dec
adc
mov
pop
ds
aas
dec
mov
or
xor
insl
data16
js
push
repz
jl
insl
call
cld
les
bound
gs
addr16
xor
push
into
jp
call
and
add
test
sub
and
mov
inc
xchg
ret
xchg
dec
ljmp
loopne
xor
or
xor
dec
lea
into
push
or
test
jnp
or
add
inc
aaa
push
mov
push
insl
inc
cmpsb
sub
or
adcl
test
lods
in
sbb
mov
add
dec
cmpsb
pop
adc
aas
push
cmp
cmpsl
sub
dec
push
bnd
ret
push
dec
imul
insb
push
or
mov
push
icebp
cmp
jmp
xor
inc
es
ror
mov
test
and
shlb
or
test
push
dec
mov
cmp
pop
popf
push
push
xchg
inc
call
xchg
lods
add
or
inc
mov
xor
inc
jmp
hlt
outsl
and
mov
sub
add
fwait
adc
shlb
add
arpl
test
sbb
ret
sbb
dec
push
dec
out
adc
movsb
sub
or
adc
int3
or
push
pop
fadds
push
fwait
mov
add
add
xchg
push
or
imul
pop
dec
fs
mov
orb
ror
dec
mov
mov
push
push
cmp
and
test
ss
mov
popa
xor
orb
push
jg
xor
fbld
mov
ljmp
xor
mov
pop
test
jg
test
jecxz
cmpsl
mov
sbb
dec
xor
add
and
adc
in
aam
ret
mov
rcrb
sub
mov
or
test
inc
pusha
test
sbb
or
push
adc
pusha
mov
or
sub
and
sub
call
inc
sub
pop
cmp
ja
pop
pop
dec
cs
jmp
cmp
mov
out
push
sbb
pop
sbb
mov
mov
inc
add
push
push
add
and
movsb
push
and
push
sub
inc
mov
ret
enter
loopne
mov
push
and
jns
and
lcall
fstl
aas
test
xor
dec
inc
add
add
add
sub
repnz
fucomp
add
test
popa
aas
xchg
cmp
pop
rclb
jno
sbb
insl
inc
dec
das
mov
shr
mov
push
cmp
and
dec
and
mov
adc
dec
inc
add
xchg
insb
xlat
add
adc
or
mov
dec
mov
dec
fs
push
jp
or
cwtl
icebp
inc
cltd
inc
fiaddl
or
add
inc
mov
push
sub
mov
ror
lret
nop
mov
add
lock
add
lods
inc
lcall
cwtl
push
dec
add
push
enter
shlb
xor
popa
and
dec
pop
stos
add
push
dec
cltd
test
pop
jecxz
push
xor
fucomip
push
or
aam
add
in
dec
xor
inc
icebp
ror
negl
repnz
jne
lock
add
movsl
shll
cmpsl
sub
popf
xchg
mov
outsl
push
dec
push
fsubrp
mov
push
sahf
or
push
call
nop
and
lock
and
cmpb
xor
cmp
pop
mov
cmp
loope
jns
pop
outsl
adc
fiadds
pop
sbb
inc
inc
imul
mov
inc
add
and
add
dec
gs
pop
sub
pop
mov
sbb
outsb
dec
inc
outsb
addl
dec
inc
mov
jmp
mov
in
dec
xor
pop
mov
cmp
pop
jo
sbb
js
sub
adc
xchg
pushf
jp
adc
movsl
lret
xchg
enter
lds
dec
sbb
test
push
insb
and
mov
xor
hlt
adcl
push
sbb
movsl
stos
fistpl
lods
nop
push
bound
ficoms
sub
cltd
pusha
push
into
mov
pusha
bound
cmp
and
push
je
push
mov
add
push
jmp
push
mov
add
hlt
mov
or
jmp
aas
leave
dec
dec
repnz
insl
shrb
jb
leave
or
xor
jb
movsl
push
mov
in
movsb
loopne
in
in
cs
call
inc
in
lock
cs
hlt
aam
add
fmul
pop
lcall
aaa
sbb
inc
inc
mov
jb
cmp
dec
sub
mov
xor
iret
jno
out
and
sbb
and
adc
sbb
or
push
add
add
mov
call
and
and
fsubrl
add
mov
stc
andl
add
pop
pop
or
push
data16
or
push
push
jne
inc
push
push
or
out
call
add
fcoml
ljmp
add
je
sub
push
sahf
xchg
lock
lea
dec
xor
les
dec
or
js
les
adc
add
mov
jne
pop
sbb
jmp
or
or
jmp
data16
adc
test
pop
add
pusha
aaa
or
or
cmpb
or
adc
sub
adc
movb
push
xchg
cmc
jbe
mov
fimull
push
push
loope
inc
sbb
push
jp
lret
subb
xchg
push
xchg
faddl
js
orw
or
xchg
mov
lods
sub
push
pop
mov
mov
mov
loopne
testb
jne
movzwl
nop
push
cltd
pop
idiv
jae
pop
subb
stc
sub
inc
adc
adc
pushf
outsb
loopne
jmp
andl
test
xor
mov
add
ljmp
dec
lea
inc
mov
add
sahf
or
dec
jae
cmp
in
nop
adc
int3
cmp
sbb
ja
insb
mov
in
sti
neg
insl
mov
enter
insl
es
cltd
pop
idiv
js
movsb
iret
std
inc
inc
ja
add
mov
add
or
mov
inc
adc
sbb
cmp
sub
inc
mov
pop
mov
fildl
loopne
or
add
out
sbb
icebp
sub
rcr
pop
fnsave
mov
or
sbb
int3
adc
fldl
cmp
dec
and
xor
inc
inc
cmp
and
js
jnp
fs
push
clc
aam
inc
add
ds
fstps
push
pop
ret
add
add
std
pop
sbb
push
lret
jmp
fsubrl
and
rcrl
jo
pop
fs
movsb
jle
ljmp
mov
mov
ret
pop
adcl
pop
sarb
mov
hlt
sbb
mov
xor
mov
clc
adc
call
fcoms
mov
out
sbb
mov
rorl
mov
fdivl
mov
mov
push
xchg
push
push
call
lock
rclb
negb
hlt
push
mov
xor
mov
add
ficompl
xorl
jne
jle
lock
cmp
push
cmp
movl
inc
or
adc
in
int3
into
fisubl
adcb
cwtl
mov
inc
jbe
ret
xchg
loop
mov
inc
xchg
clc
add
xor
in
insl
int
outsl
jle
push
mov
out
or
es
cwtl
adc
jo
mov
or
add
jmp
fnstenv
push
xor
mov
fildll
sbb
lock
movsb
pop
sub
rcrb
leave
cmovne
adc
and
inc
fdivs
jbe
sub
mov
add
pusha
xchg
fadds
mov
adc
or
mov
push
pushf
sbb
mov
pop
sbb
sbb
jmp
xchg
lock
test
lea
popa
adc
fadds
pusha
xchg
mov
jno
push
fldl
mov
cltd
push
addr16
mov
adcl
fcomi
cmc
dec
nop
adc
clc
add
dec
push
jo
push
js
jnp
add
call
push
lahf
out
push
loopne
fmull
pusha
inc
dec
xchg
in
inc
add
add
fcoml
mov
xor
lock
ret
sahf
or
in
fs
call
in
shrb
xor
lds
mov
sti
ret
lods
and
or
movsw
shrb
or
sub
inc
adc
inc
add
push
iret
gs
lret
push
cmp
pop
or
cmp
rorl
add
imul
and
sbb
mov
mov
std
test
jne
pop
and
mov
inc
into
sbb
insl
sti
gs
popf
add
inc
cmpsb
loopne
adc
cmp
adc
xchg
ljmp
inc
clc
fcompl
mov
dec
mov
adc
clc
sub
shlw
xor
xor
pop
mov
test
mov
sbb
and
popf
subb
adc
bound
cli
xor
insl
cmpsl
xor
pop
sub
inc
inc
hlt
push
adc
cmpsl
push
xor
sti
adc
test
and
xor
inc
cmp
shlb
cli
or
or
lahf
ret
mov
jp
pushl
or
loope
insb
int
and
icebp
push
call
pop
das
lock
loope
sbb
xor
push
cmp
push
dec
sub
or
notb
adc
adc
hlt
sub
scas
cmp
or
stos
fiaddl
dec
dec
insl
lock
pop
enter
adc
add
mov
cwtl
loopne
xor
int
cltd
mov
test
add
mulb
add
pop
movsl
repnz
pusha
add
pop
aaa
dec
sbb
out
and
dec
out
inc
pop
push
sbb
and
mov
ss
xchg
lea
and
dec
ror
and
adc
push
pushf
pusha
icebp
js
fcomp
add
dec
cmpl
adc
xchg
push
mov
xchg
or
add
daa
push
cmc
lds
or
lock
cmp
or
je
ds
call
sub
out
leave
adcb
push
sti
jbe
rolb
mov
ds
les
mov
push
and
dec
push
sbb
cmp
push
xchg
in
sbb
call
sbb
mov
sbb
xchg
lret
in
in
add
rclb
or
jo
cli
xor
adc
movsb
stos
push
daa
cmpl
bnd
call
or
push
sbb
jle
inc
dec
cmp
jge
clc
push
inc
add
or
cmc
xchg
sbb
adc
gs
mov
daa
add
push
pop
scas
fmull
sbb
xchg
loop
pop
jmp
das
clc
push
pusha
add
cs
and
mov
sbb
add
daa
scas
fbld
sub
jb
push
mov
outsb
jle
add
xor
dec
pop
mov
sar
adc
pop
cmpl
jb
mov
sub
mov
ss
push
inc
add
cld
jae
pop
mov
mov
rcl
in
push
jb
adc
jne
movsl
add
movsl
pop
mov
jae
pop
jb
sub
mov
in
add
and
and
sbb
lcall
add
push
dec
add
dec
ret
push
cmpb
mov
inc
or
inc
and
dec
sbb
add
mov
dec
ljmp
cltd
loop
jecxz
leave
push
popf
cmp
xchg
lods
int3
stos
add
cmc
and
test
cli
inc
lods
xor
sbb
or
es
sbb
cmp
maskmovq
imull
pop
xor
sub
inc
mov
jbe
ja
pop
enter
or
push
mov
and
clc
add
push
jbe
xchg
lods
xchg
xchg
lcall
jl
negb
cld
test
mov
pop
rcll
and
or
mov
mov
push
shll
and
mov
and
sub
xchg
js
adc
push
in
imul
loope
clc
push
mov
mov
scas
and
sub
sbb
jmp
rclb
or
je
cld
and
push
js
clc
mov
je
fs
mov
sbb
xor
sub
pop
or
adc
loopne
mov
push
lods
and
cmpsb
dec
movb
xor
cmp
cmp
and
mov
pushf
xchg
clc
lahf
stc
add
pop
aaa
adc
adc
aas
test
je
adc
and
fsts
das
pushl
or
mov
xchg
imul
jmp
je
int3
inc
push
fadds
adc
cmc
add
mov
ret
mov
fdivr
rcrb
jbe
sbb
lock
inc
inc
push
subl
jg
cmc
jmp
dec
cmp
push
inc
inc
dec
dec
mov
mov
sbb
push
sub
dec
or
jne
fistps
lahf
xchg
or
in
lea
push
adc
incb
inc
lea
lock
pop
jl
iret
mov
xchg
je
fisttps
arpl
push
cmp
rcrl
cmp
popf
cld
and
pop
and
out
jne
test
sub
call
stos
imulb
jl
xor
fsubr
scas
nop
xorb
pop
push
pop
mov
cld
pop
inc
pop
stc
leave
xchg
pop
jb
imul
leave
and
and
pop
jmp
sub
mov
call
push
insl
je
out
push
jmp
lret
adc
xchg
push
adc
cmp
cmc
test
pop
xor
test
popa
sub
add
and
dec
and
sbb
dec
mov
push
push
or
push
add
mov
xor
sub
push
mov
xchg
inc
sub
and
je
lea
shll
jns
and
cld
sahf
rolb
xchg
pop
cmp
scas
out
jne
mov
mov
clc
jmp
xchg
es
or
or
xchg
mov
mov
in
stos
add
pop
pop
mov
adc
inc
or
lcall
and
jg
fistps
inc
push
jl
cmp
adc
hlt
cmp
ds
and
data16
dec
cmpsw
addl
sahf
adc
mov
sub
or
pop
nop
shrl
jmp
xor
mov
sbb
adcb
inc
loopne
inc
fs
and
adc
insb
cld
add
inc
notb
es
mov
es
add
and
cltd
mov
sub
sub
lods
addb
ljmp
hlt
insb
inc
test
add
movsl
and
push
jnp
adc
data16
push
test
mov
into
jo
je
arpl
js
cltd
lea
mov
rorl
dec
ss
out
mov
add
pop
dec
push
repz
sub
outsl
insl
inc
movsl
add
inc
mov
fnstcw
das
mov
idivl
pop
cs
jno
push
popa
dec
xchg
inc
mov
sbb
mov
adc
daa
cwtl
call
adc
cmp
xor
or
dec
cmp
adc
and
aam
pop
and
adc
fldcw
push
pop
pop
nop
jnp
dec
xor
test
popf
push
push
jo
cld
sub
mov
push
add
test
sarb
xchg
adcl
xacquire
mov
pop
dec
pop
push
mov
cmp
data16
and
les
inc
adc
push
mov
sub
mov
test
adc
mov
lret
and
nop
icebp
aam
sbb
shrb
mov
fistpl
dec
in
js
cld
imul
add
pop
rorb
andb
mov
sbb
dec
lods
pusha
dec
adc
shlb
pop
push
adc
fstps
add
es
imul
movsl
insb
push
add
decb
push
push
xchg
movsb
xchg
add
push
xchg
stos
push
mov
adcb
pop
cmp
xor
jb
dec
sub
mov
xchg
pop
stos
add
sub
cmovb
adc
jge
es
push
clc
or
mov
not
inc
push
xor
in
insb
dec
cmp
ljmp
add
add
push
jo
sub
mov
push
je
fs
jmp
dec
add
add
adc
pop
test
repz
nop
jle
jg
sbb
adc
mov
xchg
inc
iret
dec
fs
jmp
adc
jb
rorl
outsb
push
sub
cmpb
adc
pop
push
push
inc
pop
out
addl
les
inc
loope
clc
addl
ss
push
push
inc
and
pop
lea
xlat
cmp
in
dec
xor
mov
sbb
js
fcompl
inc
adc
adcl
sub
push
into
jnp
mov
out
dec
cmp
and
movsl
adcl
lret
xlat
mov
outsl
adc
push
push
xor
jne
add
add
sub
insb
jl
mov
cmp
jp
mov
nop
pop
inc
je
and
pop
xchg
push
push
cli
and
je
daa
in
add
pop
cltd
add
rorl
lds
or
stos
enter
cmp
adc
ficompl
loop
ja
mov
sti
sub
xchg
je
mov
nop
adc
pop
mov
adc
or
shll
inc
out
push
pusha
loope
add
push
mov
xchg
xchg
sbb
xor
ret
cmp
lock
push
adc
push
pop
lods
push
and
inc
sahf
in
or
call
or
adc
gs
inc
js
jge
jns
into
push
cmpsl
mov
test
jae
mov
scas
lds
and
lds
ja
jecxz
add
and
out
lahf
mov
push
add
decl
pop
add
adc
pop
rclb
fnstsw
add
add
adc
sbb
lock
and
mov
mov
adc
das
mov
fisttps
and
pop
xor
add
enter
imul
inc
lods
aaa
pop
lahf
orb
cmp
and
ss
movl
iret
orb
icebp
xor
sub
sub
add
jp
xor
adc
in
pop
mov
push
adc
xor
loope
mov
xor
adc
xor
clc
pop
push
sbb
bound
lcall
and
lcall
xorb
sbb
add
xor
mov
push
in
jmp
push
jge
dec
inc
or
sahf
fdivrs
rep
and
dec
shlb
pushf
mov
shr
push
cld
or
and
pop
inc
dec
loopnew
mov
clc
pusha
jl
mov
xchg
or
pusha
jl
sti
jbe
jae
jl
rorb
mov
pushf
in
aad
adc
in
gs
jmp
dec
xchg
inc
aad
icebp
dec
fistpll
dec
pop
dec
mov
mov
jl
std
inc
cli
push
call
inc
out
rorl
cld
pop
adc
cmpw
cmpb
inc
push
push
pop
call
adc
aam
xchg
mov
mov
popf
mov
mov
mov
cwtl
ljmp
sbb
lods
divb
lods
mov
insl
stos
push
xor
sub
and
adc
int
push
ret
or
in
data16
or
pop
jne
sbb
pop
inc
jge
mov
add
sub
loopne
loope
add
sbb
lret
sbb
pop
clc
insb
fsts
lea
enter
dec
xchg
sbb
jne
pop
in
and
imul
insl
push
nop
push
mov
cmpsb
dec
ret
push
jg
or
mov
inc
mov
mov
lret
or
adc
sub
adc
and
roll
shl
push
mov
bound
jne
push
sbb
adc
sub
push
inc
inc
popa
jmp
sub
rolb
lret
clc
adc
xor
cld
lea
inc
sbb
test
or
movsb
in
jle
pop
jne
rorl
mov
clc
data16
dec
pop
xor
inc
cmp
inc
dec
add
pop
adc
push
add
dec
jo
dec
jle
push
ret
shll
jle
adc
jo
xchg
dec
adc
or
mov
push
mov
repz
add
adc
call
nop
add
push
repz
flds
inc
cmp
icebp
inc
pop
dec
bound
sub
push
push
fdivs
add
mov
or
mov
pushl
hlt
jne
push
cmp
jo
pop
or
inc
pop
or
sbb
lea
or
je
mov
adc
xchg
into
push
push
mov
adc
nop
clc
cwtl
jb
mov
pop
rcrl
mov
adcb
or
js
or
sub
xor
push
call
in
add
aas
push
xchg
push
sbb
clc
shlb
clc
ss
sbb
scas
adc
nop
imul
loop
dec
orb
pop
or
pusha
push
mov
mov
add
cmp
lds
and
xor
lret
fstl
lods
pop
fidivl
push
je
imul
ja
jnp
ret
fdivl
sbb
xchg
inc
jl
test
js
lea
data16
movsb
cli
mov
pusha
enter
jmp
and
test
mov
or
ret
add
add
dec
outsb
cmp
push
pop
fidivrl
cmp
loope
push
cmp
and
or
mov
xor
sub
inc
clc
sahf
sub
ds
add
add
adc
mov
cmp
mov
push
pop
je
mov
jnp
shrb
inc
cld
imul
inc
movsl
mov
or
xor
dec
aam
dec
dec
xor
clc
xchg
add
adc
sti
outsb
fs
mov
mov
cmp
inc
pop
sbb
pop
rclb
jg
ss
push
mov
pushl
cmp
imul
add
movsb
add
imul
cmpb
pusha
xor
cmp
into
adc
adc
add
sahf
or
pusha
pop
and
adc
mov
xchg
out
xorb
punpcklbw
cmp
subb
adc
sub
xor
outsb
aam
imul
mov
cmp
jbe
movsb
push
jle
cmpsb
adc
pop
fldt
stos
inc
adc
sbb
sbb
lea
push
xor
mov
push
dec
mov
or
or
or
clc
into
pop
rol
push
push
enter
add
add
loop
and
adc
stos
adc
sbb
cmp
adc
lods
add
fldt
cmp
pop
and
adc
sbb
and
xor
in
fdivl
mov
push
mov
sbb
lcall
sbb
xchg
sub
ret
cmp
cmp
inc
pushf
add
insb
jbe
cmpb
push
loopne
push
jae
fmull
push
pop
enter
push
es
sub
add
sbb
inc
mov
jo
xor
add
fmuls
rclb
add
inc
adc
mov
test
incb
push
mov
addl
dec
add
push
insl
or
push
nop
add
sti
push
enter
sbb
test
and
push
add
enter
jno
add
data16
xor
lock
jp
cmpsl
cltd
clc
adcb
insb
out
adc
or
les
jge
clc
pop
or
pushl
push
mov
jb
xor
mov
nop
test
pop
adc
leave
xor
adc
jp
and
sub
xlat
push
les
mov
lea
dec
mov
iret
push
loopne
xchg
ljmp
jns
xchg
mov
mov
cmp
inc
filds
mov
pop
mov
pop
mov
mov
push
add
fmuls
arpl
push
inc
xchg
js
and
fwait
dec
or
push
in
andl
or
icebp
stos
lea
mov
arpl
int
testl
test
aad
in
sbb
pushf
cmp
arpl
inc
daa
test
iret
mov
fisttpl
pop
xchg
jle
xor
lock
sub
mov
js
cmovb
push
add
shll
or
xchg
fprem
and
sub
and
dec
pop
sbb
add
mov
rorb
add
rcrl
xchg
cmpsb
mov
mov
lock
dec
lds
mov
repnz
add
inc
mov
outsl
lods
or
shlb
add
pop
cmp
mov
lds
mov
in
push
add
jmp
xor
in
pusha
loopne
jns
testb
add
mov
loope
lret
push
lds
and
test
add
stos
cmp
inc
aaa
lock
addb
popa
add
mov
sub
imul
sub
or
inc
stos
and
in
addb
jmp
sub
or
sbb
jmp
and
or
iret
in
aaa
xchg
mov
pusha
adc
jns
les
or
jns
lahf
int3
in
add
fmuls
dec
nop
or
loope
ficoml
fcoms
push
push
ret
mov
loop
cmp
ret
add
mov
inc
dec
sbb
jecxz
lret
xchg
mov
scas
fcmovne
add
mov
addb
repz
pusha
push
ja
outsl
sbb
loopne
add
mov
and
int3
add
out
es
cmp
sbb
xor
mov
or
push
dec
xchg
lods
jnp
push
push
and
sbb
adc
dec
and
mov
mov
add
movsb
jbe
sahf
aaa
adc
adc
lock
pop
xchg
pop
push
fcompl
cmpsl
inc
daa
clc
pop
adc
test
mov
dec
xchg
cmp
adc
stos
loopne
out
xchg
sub
sub
add
sub
ret
sbb
inc
bound
in
cmp
mov
adc
push
mov
xor
out
frstor
add
fs
addr16
add
xchg
mov
cmp
or
enter
inc
pop
dec
jl
mov
and
mov
lcall
xchg
mov
xchg
jl
pop
cmp
dec
rorb
mov
cmp
ret
lods
shlb
add
shrb
out
sbb
lahf
sbb
adcb
mov
mov
or
jne
push
xor
xchg
or
inc
fwait
pop
add
les
xchg
enter
lea
lea
xor
aas
adc
inc
faddl
ret
shrb
mov
jl
ret
neg
fwait
and
ret
jge
movsw
mov
daa
imul
or
imul
call
in
fsin
outsb
pusha
movsl
hlt
jo
inc
fidivs
pop
push
add
mov
pop
add
add
pop
out
cmp
and
jmp
imulb
lea
int
sbb
pop
sub
sub
push
jns
mov
aam
addr16
xor
sub
rorl
shll
mov
rol
bound
inc
pop
adc
push
push
cwtl
push
push
sub
push
sahf
in
cmp
outsl
sub
jmp
cli
sub
push
and
cs
mov
aas
and
sub
pusha
jge
popa
femms
jo
stos
and
cmp
dec
mov
inc
or
inc
jmp
push
mov
add
xchg
aaa
pushl
inc
lret
pop
imul
int3
or
pushf
loop
mov
and
leave
fwait
mov
cmovns
lret
loope
mov
nop
sub
mov
xchg
int3
orb
or
fadds
cmp
sub
js
cmpsb
sbb
outsl
fwait
mov
xor
popf
adc
and
call
outsl
mov
cmp
push
adc
adc
int
pop
xchg
xchg
mov
adc
dec
pop
jl
in
sti
xor
insl
lock
cmp
gs
xor
add
and
int
sbb
push
ja
cld
or
mov
js
nop
sub
mov
lock
push
xor
xor
or
cmp
pop
push
cmpsb
jns
inc
push
dec
mov
mov
pop
xchg
int3
xchg
adc
inc
test
pop
mov
adc
dec
test
xor
xor
push
cli
js
cwtl
mov
pop
sbb
aas
iret
jl
sbb
sbb
mov
xchg
sub
inc
mov
cwtl
push
cmp
adc
push
into
push
push
jbe
mov
pushf
cmp
inc
sub
dec
inc
mov
jbe
mov
mov
inc
push
movsb
adc
fstps
or
jno
pop
jge
movsb
xor
call
push
push
test
les
scas
push
pusha
pusha
lahf
in
ss
mov
sbb
or
add
xor
fs
xchg
inc
outsb
pop
add
in
inc
movsb
vsqrtss
dec
inc
xchg
dec
test
and
mov
inc
sub
or
sub
jmp
loope
dec
pop
push
loopne
cs
xor
push
mov
insb
lcall
inc
jb
je
es
cmp
and
mov
arpl
loopne,pn
popf
jp
mov
pop
push
outsb
push
repnz
fldl
pop
cmp
int
push
cli
push
push
adc
call
cmp
xchg
jbe
cmpsl
jnp
adc
fists
stos
out
aaa
lock
shlb
ljmp
push
lock
adc
call
xchg
jb
cmp
push
fisttpl
nop
xor
xchg
repnz
insb
jmp
not
push
arpl
nop
jo
inc
ja
mov
fucom
xchg
in
loopne
inc
xchg
and
ficompl
xchg
push
push
enter
dec
rcr
sarb
shrl
cmp
xchg
sahf
push
add
movb
xorl
sbb
adc
or
and
rcl
andl
mov
add
sub
and
jno
outsb
add
je
les
sbb
add
or
call
inc
adc
fdivs
pop
inc
mov
testb
jl
sub
sub
adc
in
call
sbb
in
sub
pop
pop
jo
lcall
insl
pop
push
xor
inc
sub
sbb
push
inc
mov
mov
jge
pop
cmp
adc
sbb
pop
in
imull
je
cmpsl
pop
rolb
lea
and
inc
sub
cmp
pop
push
insb
dec
cmp
fcmovnbe
call
add
push
jp
es
cmp
push
loop
sbb
sub
jl
test
sbb
mov
jl
sbb
int3
and
cmpsl
rolb
out
and
inc
mov
or
push
or
enter
mov
dec
xchg
orb
in
pop
inc
in
dec
mov
adc
pop
jle
xor
scas
aaa
push
lahf
sbbl
out
cmpsl
jmp
push
test
inc
clc
xchg
inc
scas
xor
outsb
das
mov
adc
es
and
cld
adc
in
and
hlt
popf
inc
imul
test
popa
addr16
leave
rcl
xchg
xchg
sbb
ja
mov
daa
lods
inc
sub
shr
mov
push
aam
and
shlb
fstl
adc
out
cmpb
cltd
add
outsl
sti
add
lahf
negb
xor
mov
repz
loopne
testb
enter
or
jmp
cld
sub
ljmp
js
push
mov
mov
push
jae
xor
cmpsb
sbb
jnp
loopne
cmp
je
inc
movzwl
sahf
idivb
pop
push
loopne
clc
push
pop
and
jl
filds
pop
loopne
cmp
in
dec
stos
inc
lcall
daa
cmp
cs
jo
push
popa
jnp
inc
dec
dec
mov
sbb
xchg
test
fimull
mov
lock
cmpl
jg
imul
shlb
cld
mov
lret
mov
push
adc
push
test
ret
push
scas
lock
mov
jl
xchg
add
andl
jle
shll
int
clc
pop
and
mov
xor
add
xchg
mov
add
stos
cmp
pusha
inc
outsb
or
jmp
rorl
push
movzbl
and
cmp
xor
pop
jmp
in
mov
repnz
cmp
jl
jmp
jl
push
push
rorl
pop
dec
sub
dec
or
mov
jno
addb
sbb
xchg
fildl
jae
cmp
pop
ja
mov
and
push
push
imul
jns
call
orl
xor
or
lods
and
cli
lock
push
repz
jo
add
mov
mov
daa
mov
cmpl
xor
adcl
out
add
or
and
xchg
cli
and
sbb
pop
shlb
clc
enter
xchg
sbb
pushf
add
enter
ret
xor
xor
dec
cmp
inc
jns
add
jne
push
mov
cmpsb
jo
push
mov
xor
pushf
sbb
adc
sti
mov
adc
inc
stos
bound
decl
pop
and
push
pop
mov
and
jg
mov
stos
adcb
cmp
ret
mov
cld
xor
push
loop
cmp
stos
push
push
cmovle
sbb
inc
push
cmp
dec
xorl
pop
add
pop
push
pop
pop
ret
dec
test
jnp
in
add
adc
pusha
cmp
adc
adc
dec
push
pop
ret
push
mov
notl
jnp
xchg
cmpsb
push
add
ret
pop
sbb
xor
mov
mov
lea
loop
add
push
jecxz
lcall
test
push
and
mov
or
outsb
push
push
push
add
adc
movsl
mov
sahf
and
loop
pop
mov
fadds
cwtl
xchg
daa
sub
inc
scas
or
adc
jp
dec
ljmp
pop
and
js,pt
fs
orb
loopne
and
jae
xchg
outsl
scas
and
adc
out
jo
gs
lret
jo
sub
pop
add
add
dec
iret
in
add
out
add
in
ret
dec
jmp
add
cs
test
and
or
or
mov
fildl
cmp
xlat
fidivl
or
push
das
ret
or
jle
jbe
and
and
pusha
inc
cmpsl
fmull
and
add
inc
cmp
rolb
adc
xor
pop
push
sub
dec
test
and
out
stc
or
and
call
or
rolb
unpcklps
xor
jae
push
das
sti
nop
xchg
pop
and
add
out
fnstenv
mov
xchg
fcoml
int3
sub
sbb
es
fwait
add
mov
movsb
call
in
jo
aam
pop
pop
in
addb
jns
cs
call
icebp
and
xor
and
pop
dec
adcl
mov
in
xor
mov
or
and
iret
inc
sub
add
enter
dec
call
xor
subb
test
adc
mov
in
xor
cmp
clc
out
sbb
sti
inc
or
inc
add
inc
or
add
fsub
sub
in
addr16
push
push
push
test
mov
xlat
in
sbb
mov
mov
ds
enter
data16
add
adc
pop
ss
cs
or
xchg
cmp
adc
repnz
jb
cwtl
js
dec
cmp
inc
sub
inc
push
lret
add
xor
mov
jbe
xchg
pop
adcb
shll
add
fsts
add
mov
jbe
loope
add
loopne
add
scas
mov
pop
jg
test
add
pop
rcrb
scas
push
push
xchg
lea
adc
sub
lret
push
aam
inc
mov
cmovge
aad
ret
imul
cltd
xor
jp
push
mov
mov
push
sbb
add
pop
mov
lcall
loope
mov
adc
push
ss
sub
ret
push
loopne
sbb
xchg
loope
or
jecxz
sub
popl
sbb
imul
insb
push
rcr
xor
loop
stos
fiadds
jge
xchg
orl
cmpsl
add
mull
movsl
sub
das
ljmp
and
or
dec
xchg
sbb
cmp
aam
jp
scas
add
testl
outsl
shll
xlat
mov
ret
call
lret
and
dec
ds
ficoms
hlt
cmp
ljmp
sbb
shr
mov
or
lret
mov
push
add
in
cld
sbb
ficoms
mov
stos
das
sub
pop
jp
xchg
outsl
sub
or
add
jge
xchg
pop
lock
hlt
inc
clc
divb
iret
cltd
fcomp
je
lea
sub
push
inc
jle
icebp
inc
adc
or
ss
inc
mov
xchg
test
in
inc
jnp
xchg
jne
adc
adc
addb
pop
fsub
xor
jne
adc
mov
add
mov
mov
push
adc
loop
add
xor
mov
fs
nop
mov
push
inc
or
addl
imul
xlat
imul
dec
mov
aaa
jne,pt
and
subl
subl
and
shlb
shrl
xchg
mov
std
loopne
lea
or
pusha
cltd
mov
adc
mov
push
jmp
xor
jp
mov
jo
push
out
orb
jno
les
jo
add
ret
adc
insb
cmp
push
push
pop
push
rcr
js
sbb
ret
ret
pusha
xor
rcl
les
and
sbb
mov
xor
sbb
jo
cmp
sub
in
movsl
in
addb
jo
push
sbb
in
or
daa
inc
inc
insb
or
inc
inc
and
movsl
pusha
add
dec
repnz
pushl
or
inc
lods
push
ret
add
lret
adc
jo
or
je
mov
pop
cmp
or
cmpsb
and
adc
data16
jmp
cs
shrb
sub
push
mov
cmpsl
adc
fisttpl
cmp
fstps
sub
je
je
xchg
insb
and
fstps
pop
sub
loop
and
inc
mov
adc
xchg
lretw
adc
or
mov
pop
insb
pop
aam
lods
adc
xor
repnz
add
cld
push
sbb
ret
insb
and
test
adc
cmp
add
xchg
pusha
add
roll
xchg
dec
xchg
cmp
std
std
add
sub
leave
pop
outsb
mov
jecxz
sbb
xchg
je
sub
pop
insb
add
cwtl
mov
rcll
xor
dec
sub
cmp
mov
test
add
pop
add
sbb
jl
iret
lcall
int3
mov
add
fsubs
add
cmovo
rcrb
push
lock
lahf
xchg
xchg
movsb
rolb
mov
enter
and
jecxz
push
int3
push
push
iret
dec
mov
in
aam
fimull
fcoms
int3
push
js
loope
in
pop
push
test
ficompl
cmp
sbb
sbb
mov
sub
aam
fcom
loopne
mov
or
or
xchg
fstl
xchg
mov
mov
fcomps
jne
cmp
sbb
ds
add
adc
in
adcl
sub
jno
inc
pop
pop
out
inc
or
insb
leave
fwait
inc
xor
lea
mov
or
lods
xor
xchg
out
mov
pop
pop
adc
sbb
sahf
test
xchg
adc
bound
in
call
and
sub
enter
nop
nop
addb
mov
sahf
ud2
push
sub
sbb
cmpsb
mov
insb
mov
dec
inc
stos
imul
add
cmp
inc
and
add
movl
mov
push
sub
mov
lods
lods
scas
pushf
inc
aas
test
sub
pop
pop
dec
push
mov
scas
mov
movsl
mov
add
aaa
add
test
and
push
stos
dec
mov
pop
add
add
lahf
push
fisttpl
leave
push
mov
ud0
sahf
mov
mov
sub
jmp
mov
dec
mov
pop
inc
inc
fimuls
pop
hlt
push
sbb
add
xchg
aaa
pop
mov
rclb
cmp
jl
push
cmp
push
aaa
push
inc
inc
movsb
movsl
add
or
add
xchg
pusha
adc
pop
or
das
push
sbb
push
cld
and
inc
cmp
inc
bndldx
jbe
stos
cltd
in
shlb
cmp
push
sbb
call
xchg
in
mov
cmp
jl
neg
negl
call
xor
pop
push
sbb
push
fimuls
adc
xchg
mov
mov
sti
dec
lret
test
add
mov
push
or
adc
or
dec
cmp
xchg
push
in
mov
je
adc
mov
sti
loopne
add
pop
push
push
sbb
cli
mov
outsl
inc
mov
fisubrl
jl
fmull
push
jp
pushl
mov
inc
faddl
jmp
mov
or
pop
push
dec
pushf
sarb
adc
mov
sub
mov
jo
dec
mov
ss
push
or
pop
loope
lods
ret
and
andl
daa
pop
push
cltd
xchg
cwtl
adcb
sbb
push
lea
cwtl
shlb
out
ds
push
add
push
or
loop
mov
popa
rclb
add
adc
loopne
sbb
scas
out
add
jb
xor
cmp
mov
aaa
movsb
add
jno
mov
jl
aam
imul
mov
adc
int3
fcoms
inc
repnz
mov
sbb
push
int3
pop
jbe
nop
loopne
jp
and
sbb
and
daa
arpl
jo
xor
dec
pusha
stos
lret
lock
xchg
add
sbb
adcl
loopne
aad
add
pusha
in
pop
jne
pop
neg
lock
sub
je
mov
add
xor
xor
je
push
add
loop
or
fwait
adc
mov
and
scas
subb
mov
jne
sub
ss
popf
push
or
and
notb
or
repz
test
add
push
mov
pop
ror
add
xor
inc
push
add
sub
push
in
aaa
mov
and
inc
jp
mov
cld
mov
orb
pop
inc
add
cmp
insb
bound
jl
add
sub
or
jle
cmp
mov
and
cmc
mov
pusha
clc
push
test
cmp
ffreep
test
mov
lea
xor
dec
jnp
fcomip
ja
icebp
push
aad
fdivrs
je
lcall
mov
push
mov
jno
subb
movsb
mov
imul
imul
std
outsb
out
push
outsb
push
pushl
xchg
mov
sbb
addr16
out
mov
sub
in
nop
xchg
push
jl
or
adc
cwtl
jo
mov
cs
jmp
into
mov
jb
push
in
fcoms
xor
testl
push
in
movsb
xchg
jo
jo
adc
pushf
pop
sub
out
dec
dec
cld
mov
xchg
lods
mov
sbb
mov
cmp
dec
or
outsb
xchg
pusha
mov
andb
insl
xlat
cmc
dec
lods
lcall
popf
push
dec
movsb
sbb
fiaddl
and
xor
sub
jge
jb
ret
mov
enter
aam
push
adc
into
jl
add
lea
les
int3
jb
or
test
jmp
push
jnp
sub
rclb
loop
dec
pop
nop
adc
mov
mov
sbb
jge
jle
xor
ja
sub
orb
cmp
adc
add
adc
fisubs
jo
sub
inc
jnp
insb
iret
je
lods
je
jne
xchg
and
mov
or
rolb
lods
inc
adc
mov
ljmp
add
addb
jle
push
sub
dec
call
or
jne
cwtl
mov
pop
lret
in
std
and
jle
or
add
inc
pusha
inc
adc
es
mov
fadds
or
cmpsl
push
hlt
nop
adc
sub
lods
fistl
push
mov
mov
inc
or
imul
out
push
or
or
ss
adc
xchg
jp
dec
cmp
xchg
adc
test
xor
xchg
mov
or
stos
rcrb
stc
lock
ja
inc
pop
xchg
add
adc
add
xor
lcall
ss
pushl
mov
in
sbbb
adc
and
add
stos
loopne
dec
ret
movsl
lea
test
push
xor
xor
ss
test
adc
push
sub
call
stos
or
jge
popa
sbbb
inc
sarl
sbb
sbb
or
gs
outsb
test
dec
data16
xor
push
or
lcall
pusha
cmpsb
adc
mov
pop
adc
push
push
sub
dec
mov
jl
arpl
cwtl
mov
mov
jmp
movb
pop
enter
call
jne
lock
jmp
mov
das
lret
mov
push
xchg
aam
push
aaa
add
fildll
or
mov
or
std
inc
adc
lcall
add
or
ja
xchg
inc
pop
sub
inc
sahf
lret
pop
into
aam
lret
mov
cmpsl
fst
jmp
mov
aam
jne
ljmp
sub
js
add
cmp
inc
movsl
lds
xor
mov
movsb
fsts
adc
loop
push
or
mov
test
subb
in
js
iret
test
inc
push
mov
add
out
js
add
push
mov
or
cltd
fcoml
push
jae
hlt
mov
mov
and
fdivl
and
dec
add
xchg
mov
jne
push
in
dec
xor
cli
aad
pop
cmp
lds
test
push
xor
adc
loope
int3
sbb
push
ljmp
dec
push
inc
sub
enter
inc
ret
jnp
mov
lods
push
and
fisttps
fstps
jmp
stc
insl
addr16
adc
push
push
inc
xor
xlat
pop
mov
sub
mov
lock
incl
push
pop
and
mov
mov
rcr
add
pop
add
fst
push
je
xchg
add
xchg
pop
jge
dec
ret
add
or
or
push
adc
sub
call
ss
xor
pop
jne
jge
adc
inc
dec
push
adc
orb
push
data16
mov
jo
pop
sbb
mov
mov
push
xor
sbb
sbb
mov
push
sbb
or
and
push
xor
in
lods
imul
sbb
cmp
jo
outsb
push
or
dec
sbb
imul
inc
js
fstpt
orl
sbb
add
cmp
adc
popl
sbb
int
lcall
stc
shrb
lret
movb
cmp
xor
inc
pop
pop
fwait
push
inc
dec
add
sbb
inc
cmp
pop
out
test
cmp
push
mov
cmc
push
adc
sbb
or
jge
adc
test
cli
inc
sbb
or
push
mov
sbb
adc
inc
ret
add
xchg
ds
gs
inc
mov
ret
mov
repnz
neg
pop
sbb
lock
jp
sub
subb
jl
in
xor
aas
jmp
add
incl
das
sarb
popf
push
aaa
ret
pop
lock
jle
xor
loope
jmp
mov
sbb
hlt
shrl
push
jmp
cli
xchg
rcrb
dec
test
xor
jle
jbe
andl
cmp
fisttpl
pop
stos
fiaddl
or
sbb
lods
rorb
into
out
inc
jo
dec
dec
sub
sub
daa
aam
mov
jns
sbb
mov
out
push
inc
rorb
add
add
inc
adc
cmp
jb
xor
dec
dec
fdiv
mov
ds
je
sbb
jae
add
push
sub
push
loope
ret
add
das
or
rclb
or
and
xor
xchg
and
es
sbb
xor
pop
pop
mov
or
pop
adc
movb
jnp
outsb
outsl
out
adc
push
mov
inc
push
je
or
jle
push
dec
fisubrl
add
inc
xor
and
cmp
jbe
and
xchg
push
ds
push
adc
cmp
xor
add
dec
mov
loope
ret
and
or
mov
sub
inc
pusha
hlt
jle
inc
push
jl
mov
push
jno
inc
and
add
pop
xor
clc
add
mov
mov
inc
cmp
cs
xor
sti
andl
adc
cli
decl
and
rclb
sbb
cmp
mov
xor
inc
hlt
add
add
rorl
and
out
and
sbb
sub
scas
imul
inc
cmc
and
ret
adc
push
mov
adc
mov
das
sub
inc
xor
push
jle
nop
sarb
dec
adc
lcall
push
or
dec
push
xor
ret
ds
cmp
sub
call
push
es
lea
mov
push
push
cmp
call
lods
cmp
pop
mov
mov
inc
lock
adc
orb
les
ds
test
lock
sbb
cmp
les
and
cmpl
pop
pop
lods
cs
gs
rorb
xchg
xor
sbb
ljmp
dec
shl
lret
pop
mov
add
dec
dec
xchg
sbb
push
dec
dec
push
in
in
mov
loope
fs
lret
addl
xlat
fbstp
dec
inc
or
lock
push
pop
inc
lods
adc
adc
or
and
sbb
pop
add
popf
inc
clc
sbb
in
gs
sub
push
popf
xorb
add
mov
inc
lods
bound
leave
lods
push
sbb
es
or
mov
outsl
insb
xor
in
add
pop
sbbl
clc
inc
pushf
push
fstps
bound
pushf
jl
mov
adc
pcmpeqd
lods
xor
adc
mov
or
insb
scas
xor
lea
xchg
add
push
or
or
test
cmp
xor
mov
pop
fldcw
cmp
push
push
daa
dec
inc
jb
xchg
push
outsl
dec
add
rorb
leave
add
or
in
pop
or
decl
pop
adc
add
inc
sbb
pop
rorb
mov
in
add
shlb
sahf
dec
test
fldt
sbb
xor
cld
ljmp
lahf
insl
push
pop
xlat
stos
scas
loope
jge
sbb
lock
rolb
jge
fwait
int
rclb
jne
movswl
sub
push
mov
cmp
in
pusha
push
jns
repnz
sub
test
jo
sub
xchg
cmp
das
fldl
faddl
aaa
fldz
cmp
pop
int3
inc
add
andl
js
mov
or
imul
int3
cs
pop
daa
sub
fs
or
pop
and
jnp
sarb
clc
lds
mov
pop
mov
push
push
adc
scas
out
adc
je
inc
mov
pop
xchg
inc
push
in
xchg
xchg
mov
mov
aad
mov
xchg
add
sub
lret
mov
jg
ret
enter
leave
jbe
fld
or
mov
jmp
cmpb
and
loopne
in
pop
push
shl
test
jl
ud0
rorl
imul
mov
add
inc
dec
push
add
push
sbb
rcrl
sbb
mov
popa
cwtl
jno
adc
mov
jns
rorl
xchg
std
add
popa
fs
imul
mov
rcrb
ss
hlt
push
adc
lcall
insb
popf
or
clc
or
cmp
inc
enter
push
dec
arpl
adc
or
inc
xchg
jle
ret
inc
test
subl
and
jo
sub
and
add
ret
cwtl
pop
fadd
inc
sub
pop
jg
mov
iret
inc
push
xor
inc
push
push
enter
shrl
add
imul
jl
pop
mov
pushf
mov
inc
inc
inc
dec
xorl
insb
mov
and
jbe
enter
mov
xor
push
sbb
daa
xchg
cmpsb
mov
out
add
mov
nop
nop
xchg
xchg
or
call
and
or
lock
jno
sbb
inc
cmp
scas
mov
dec
into
in
inc
cmp
mov
repz
mov
pop
dec
dec
test
sub
mov
inc
sbbl
adc
add
sub
call
addb
fsubp
int
rolb
mov
sub
add
adc
loop
add
je
cmp
imul
call
push
jne
add
add
test
jl
shl
push
call
dec
xchg
dec
pop
movsb
or
insb
add
inc
push
pop
bound
insb
sub
movsb
ret
popf
inc
push
mov
fisubs
mov
data16
imul
dec
adc
cmp
sbb
rorl
popf
xchg
mov
or
or
in
pop
inc
stos
dec
adc
or
xchg
adc
adc
push
gs
ss
cmpsl
mov
cmpsl
jg
push
and
shll
adc
dec
ror
push
and
mov
xor
add
les
int3
push
cs
xchg
lea
xchg
addb
arpl
adc
lcall
cmp
shrb
mov
xchg
fldl
dec
fiaddl
mov
int
mov
push
shlb
repz
fadds
fcoml
enter
push
xorb
xchg
add
lret
adc
add
push
pop
sub
inc
subl
pop
frstor
sbb
adc
pop
mov
cmp
testb
lea
push
shll
scas
mov
sbb
adc
pop
in
mov
mov
lret
mov
xchg
and
or
jne
lea
mov
movsl
mov
cmp
dec
sub
test
scas
xlat
cmp
push
xor
mov
stos
fsubrs
cmp
stos
sub
add
inc
or
jbe
and
inc
jmp
inc
test
bound
js
mov
mov
repz
push
sbb
mov
cmp
repz
mov
mov
push
dec
jmp
ljmp
orl
test
popl
scas
cwtl
lea
lods
jne
sti
add
shlb
inc
push
or
jmp
icebp
test
outsl
ss
rclb
aam
xor
push
in
mov
xchg
insl
jg
inc
icebp
jle
lock
rolb
mov
jle
lock
mov
pop
subl
sub
inc
cmp
mov
call
orb
cmp
inc
inc
mov
or
inc
or
or
stos
test
push
aad
jl
loopne
addr16
jno
or
xchg
out
int3
and
mov
imul
cli
pop
les
aam
pop
fiadds
fisttpl
pop
ret
adc
call
sbb
push
mov
sbb
xor
push
mov
push
and
xor
dec
sub
push
sarl
sarb
add
inc
nop
cmp
dec
mov
jbe
pop
or
je
jmp
mov
cld
ljmp
or
xor
adc
test
aam
ss
lds
aam
sub
mov
in
adc
jne
xchg
shrl
xchg
sbb
test
mov
cmp
adc
or
pop
call
xor
xor
test
fsubrp
and
inc
repnz
or
or
jo
inc
add
pop
lods
int3
jl
cmp
and
sbb
mov
les
xor
push
push
xchg
dec
clc
push
adc
enter
push
push
sbb
sbb
push
add
xor
test
xchg
inc
push
les
decb
push
in
adcb
jb
into
mov
mov
or
jecxz
mov
out
mov
xor
mov
into
imul
fdivl
jns
jbe
push
xchg
test
ret
or
pop
jb
pop
push
add
sub
jo
xor
lret
mov
ret
push
addb
adc
xchg
or
and
pusha
test
push
add
pop
xchg
data16
in
inc
fwait
push
insb
inc
sbb
jae
pushl
push
fdivr
mov
js
decl
dec
pop
loope
sub
sbb
or
insl
ljmp
inc
test
je
sub
sbb
push
add
xor
adc
subb
out
jmp
cmp
or
sub
cmp
orb
andl
and
js
out
ret
lock
add
aaa
mov
sub
adc
jmp
outsb
into
es
adc
and
lahf
and
jmp
andl
mov
push
or
lea
pop
nop
sub
fistpll
add
mov
and
or
loopne
lock
cmp
and
dec
jbe
fisttps
dec
adc
inc
or
cs
iret
shlb
daa
nop
or
test
or
pop
lods
push
nop
cld
adc
and
sub
mov
push
movb
mov
sbb
or
fldt
clc
cmp
or
or
in
push
sbb
adc
imul
mov
aam
rcrb
sti
fsubs
pop
repz
sbb
xchg
mov
incl
xchg
shlb
adc
cmpsb
lods
add
ret
pop
sbb
sarl
or
enter
dec
pop
adc
jns
cmpsb
insl
sbb
xor
sub
popa
xor
in
xor
adc
imul
adc
pop
add
sbb
test
rol
call
iret
jnp
pop
push
outsl
or
ss
out
push
je
or
je
add
adc
inc
ljmp
mov
test
adc
mov
test
dec
mov
sbbl
push
add
adc
scas
inc
ds
xchg
pushf
mov
and
out
in
rolb
nop
sbb
push
lcall
or
scas
dec
lea
hlt
divb
jle
xchg
test
hlt
push
shl
and
sub
add
adc
sbb
cmp
sub
push
in
xchg
or
pop
ret
sub
int
mov
and
inc
xor
popf
inc
sub
pop
pushf
fwait
add
fwait
mov
push
cld
xor
cmpsl
imul
dec
pusha
or
pop
dec
ja
movzbl
dec
loope
loop
inc
and
inc
jae
jmp
popa
rorl
jmp
cmp
push
mov
dec
rolb
dec
subb
jle
pop
jno
mov
je
iret
dec
xor
idivl
bound
cmp
repz
dec
pop
inc
push
add
in
pop
cwtl
add
mov
adc
add
add
nop
and
fstl
ljmp
sbb
inc
mov
dec
je
add
rol
cmp
jo
out
aam
jne
ficoml
clc
push
xor
in
push
add
jmp
es
push
xchg
mov
fmull
sbb
aaa
es
add
add
es
and
sub
mov
je
pop
and
cwtl
dec
push
jo
adc
sub
and
inc
fisubl
push
out
sbb
nop
call
dec
out
mov
mov
das
xchg
mov
push
jle
ret
mov
sti
sbb
shll
dec
add
or
push
fldpi
or
lea
imulb
clc
das
cmp
xchg
mov
dec
cmpsb
mov
mov
mov
cmpsb
data16
jne
sti
xchg
cmp
jno
stos
pop
or
call
test
add
pop
loope
sub
add
rcrl
push
hlt
push
aaa
cmp
sub
movsl
orl
push
out
xor
mov
popa
jae
mov
push
sub
mov
add
xor
les
inc
outsb
or
sbbl
and
pop
or
xchg
call
clc
jns
lods
mov
inc
xlat
ret
mov
push
cmp
cmp
in
push
inc
mov
and
cmpsb
stos
xchg
mov
and
jg
orl
dec
push
sbb
cmpl
push
or
in
mov
mov
jle
mov
mov
push
fldt
xchg
rorb
ret
sbb
push
or
aas
cmp
jl
inc
das
push
sbb
test
lret
inc
add
push
aam
gs
dec
and
push
cmp
inc
cmp
mov
movsb
mov
mov
jbe
xorl
jp
pop
ja
jbe
movsl
cmp
xorb
and
add
add
inc
cmp
cmp
mov
popf
inc
xchg
push
xchg
lods
dec
xor
in
js
je
sbb
xchg
push
dec
pop
dec
shlb
dec
lods
inc
or
adc
or
test
lock
mov
cmpsl
pushf
pop
je
push
mov
mov
nop
pushl
pop
inc
shlb
pop
inc
adc
ret
or
orl
loopne
dec
mov
jp
jl
add
sarb
mov
enter
xor
xchg
push
test
xchg
loope
sbb
nop
ss
cmp
enter
fsubrl
mov
jge
popl
daa
add
cs
js
mov
int
bound
mov
lock
jbe
cmp
cmp
cmp
lsl
sarb
dec
mov
call
cmp
aaa
mov
jge
js
jne
cmp
xchg
aad
jge
in
shl
pop
and
push
cmpsl
adc
jbe
pop
jne
sbb
stos
pop
mov
sbb
dec
adc
pop
sti
test
out
and
or
xchg
jb
or
sub
pop
fcompl
test
sub
adc
dec
jbe
dec
inc
xor
xor
jo
test
aam
nop
mov
lock
xlat
adc
int3
cmp
sub
fbld
lods
inc
je
sub
fimuls
push
push
arpl
mov
jp
pop
or
or
dec
and
push
sbb
dec
movsb
je
test
sti
inc
imul
shlb
test
sub
jp
push
sub
jbe
je
add
and
push
andl
cmovno
je
add
mov
cmp
inc
mov
jl
or
insb
and
push
jmp
sub
inc
push
or
mov
or
stos
push
xchg
les
jae
sbb
je
and
mov
mov
dec
sub
cmpsb
repnz
fwait
lock
pop
fsubrs
sub
cld
xor
inc
cmp
cmp
add
mov
cmpsb
in
pushf
in
pushf
cltd
iret
mov
pop
push
add
ja
mul
jmp
or
arpl
rolb
and
les
cmc
push
addl
fdivrs
das
inc
mov
push
adc
push
nop
or
and
add
cli
mov
shlb
aas
push
inc
cld
cmpl
adc
in
je
jmp
adc
sbb
add
fcompl
fisubrs
test
sbb
out
loopne
mov
movsb
fildll
inc
and
rorb
inc
lds
lea
xor
addb
adc
xchg
xchg
icebp
inc
movsl
imul
cmc
int
lea
in
call
ret
fidivl
push
and
icebp
and
into
and
nop
xchg
xchg
or
lret
jo
mov
lahf
adc
arpl
sub
inc
cmp
jno
mov
testl
pop
cmp
loopne
inc
push
or
pop
jmp
sub
jo
ret
rcr
testl
pop
xchg
mov
add
adcl
xchg
add
inc
sarl
stos
push
jne
lock
sbb
hlt
loope
dec
nop
sub
stos
lock
mov
cwtl
lahf
xchg
push
and
test
push
stc
outsl
or
xchg
clc
arpl
jmp
sub
js
test
mov
mov
daa
loopne
pop
pop
dec
popa
shll
mov
add
inc
loopne
jae
mov
push
mov
add
adc
push
aam
adcb
xor
sub
stos
jo
stos
pop
xchg
jae
sbb
nop
aam
or
cmpsb
mov
sbb
aaa
cmp
loopne
pop
imul
gs
mov
push
hlt
sti
pop
mov
fistpll
test
jp
add
sub
sbb
and
xchg
shlb
fsubs
scas
jge
movsb
xor
push
mov
loope
popa
mov
push
pop
sub
jno
sbb
inc
add
sbb
and
push
mov
mov
and
fmull
lcall
adc
stos
pop
jb
mov
sbb
in
adcl
or
pop
sti
cmp
hlt
and
inc
lods
mov
xchg
cmpsl
xchg
adc
jb
je
sbb
xchg
jp
mov
push
or
insl
aaa
sub
add
jo
cmp
or
fidivs
push
imul
cmp
testb
sbb
adc
cmp
je
in
push
pop
cld
dec
pop
dec
fisubrs
sub
ret
jne
pop
loopne
adc
pop
and
wbinvd
call
js
ret
gs
addl
push
fs
sub
push
inc
or
test
test
mov
cmc
test
data16
pop
stc
or
mov
push
test
adc
cmp
sbb
fidivrs
jbe
xor
test
inc
push
lds
cmp
addb
pop
inc
shlb
popl
ja
or
adc
test
out
cwtl
add
sti
jb
sub
sub
xchg
scas
pusha
xchg
cmp
or
andb
sbb
pop
lcall
mov
popa
roll
fisttps
dec
adc
testl
loope
fisttpl
add
or
xchg
cmp
leave
pop
lea
inc
sarl
inc
pop
pop
inc
mov
adc
mov
dec
push
call
sub
cmp
and
add
lahf
sub
popf
outsl
sub
jbe
loopne
xorb
shll
lods
mov
or
jne
insl
gs
test
mov
push
xchg
push
imul
imul
pop
fcomp
call
push
pop
ja
mov
call
pop
cmp
in
or
xor
leave
js
imul
popf
shlb
adc
push
ja
push
mov
in
push
jae
shrb
movsl
sbb
fldl
and
add
or
sub
and
sub
adc
mov
or
dec
mov
cwtl
and
out
adc
in
xchg
jo
jne
cwtl
jge
inc
or
push
inc
mov
jae
and
lahf
adc
mov
mov
push
faddl
sbb
loope
out
xchg
push
mov
adc
sbb
js
sub
jge
pop
out
pop
and
and
adc
and
cmp
mov
jg
mov
cmp
aaa
outsb
or
mov
mov
aam
inc
movsb
push
push
inc
add
or
dec
testb
push
or
cmp
aam
or
or
inc
add
push
push
cmc
pop
cmp
je
and
and
and
push
dec
cwtl
push
push
dec
jnp
pusha
in
ret
mov
cmpl
ret
aas
dec
aaa
gs
out
subb
imul
dec
pop
or
mov
mov
nop
jle
and
fnclex
ret
fnsave
mov
xchg
lods
push
adc
frstor
xor
inc
adcb
loop
enter
leave
out
cmp
adc
mov
loope
and
fnstcw
addw
lahf
sub
add
rcll
lock
pop
movsb
jne
lock
jp
add
add
inc
inc
lea
xor
adc
cmp
or
adc
sbb
add
testb
out
bound
lea
jmp
inc
push
out
sbbl
or
push
or
inc
jmp
fsubp
std
add
rcll
push
je
test
lock
pop
mov
push
sarb
or
dec
pop
xor
cmp
fldl
pop
and
and
inc
jne
push
ret
pop
testb
pop
jbe
jb
fnsave
dec
dec
dec
pop
frstor
fldl
adc
inc
cmpsl
je
inc
dec
pushl
call
out
loope
xchg
test
loope
dec
lcall
aaa
cld
into
jmp
shr
imull
xchg
loop
lds
fldt
je
cmp
jbe
lods
xchg
fldz
and
mov
pop
xchg
xchg
pop
fld1
daa
xchg
mov
cltd
dec
or
leave
ljmp
lods
lock
mov
fcomp
negb
push
jne
fmull
sub
fldenv
add
outsb
mov
sbb
insb
cmpsl
push
lahf
add
inc
pop
push
or
dec
push
xor
repnz
mov
and
cmp
test
cmp
es
sbbb
cwtl
cmpsl
mov
clc
xchg
loop
dec
push
fs
cltd
les
out
xor
inc
outsb
psubsb
jbe
dec
out
lcall
add
xor
mov
in
jnp
sbb
or
je
jmp
xchg
push
xor
clc
imul
xorl
jmp
or
int3
adc
xchg
add
fstpl
sbb
sbb
imul
xchg
xor
aaa
fsubl
dec
inc
fsubs
test
mov
repnz
pop
adc
loopne
sub
add
clc
jmp
bound
lods
fwait
sahf
jp
fstp
and
mov
inc
fdivrp
jecxz
mov
sbb
mov
fstps
hlt
repz
mov
je
inc
pushl
lcall
rcrl
fldl
sbb
mov
test
sbb
pop
push
daa
push
sub
subl
test
jo
or
or
xchg
pop
jmp
mov
cmpsl
or
cmp
std
out
xchg
test
jne
pop
cmp
push
jge
and
add
push
addb
or
cmpb
pop
fucomi
adc
inc
jg
adc
enter
or
clc
mov
shll
jmp
je
cld
fs
mov
push
cli
add
stc
lcall
sbb
and
add
aas
sub
push
idivl
dec
or
rcrl
fldl
push
push
fbstp
call
loopne
out
andb
addb
ljmp
push
push
jne
sbb
imul
sbb
lret
add
jle
jo
xchg
xchg
roll
into
mov
xchg
jle
sub
adc
add
gs
dec
push
push
je
ficompl
cmp
lret
rcll
inc
cmp
movsl
ds
cmp
clc
lret
das
push
sbb
hlt
jbe
and
cmovg
cmp
jle
add
js
mov
adc
lret
add
add
aaa
jne
push
shrb
and
sub
loop
sbb
mov
cld
mov
mov
jo
loopne
pop
pop
xchg
sbb
cmpsl
pop
test
loop
adc
incb
jae
cmp
int3
das
and
inc
xor
std
enter
or
fs
pop
mov
in
add
cld
xchg
jae
sbb
lds
add
pop
andb
fs
mov
loopne
pushf
hlt
adc
sbb
dec
fnstenv
lock
cwtl
in
sbb
in
enter
jp
inc
push
mov
jb
mov
out
shl
mov
push
jo
rclb
push
pop
jo
add
push
cmp
fadds
cmc
movsl
rcrb
pushf
jge
sbb
mov
dec
and
push
hlt
clc
in
cmp
mov
cmp
mov
sbb
or
insl
clc
cmp
fadds
stc
mov
int3
aas
shrb
jno
push
es
mov
repz
es
int3
or
and
jnp
fsubrs
lods
and
fcomps
int3
iret
ret
mov
loopne
setne
xchg
push
pop
mov
pop
dec
or
jo
ret
gs
cld
or
adc
mov
js
stos
or
add
clc
adc
out
cmp
dec
adc
jmp
pushf
adc
pusha
add
inc
jmp
ja
pop
int3
push
sub
stos
ss
cmp
add
push
jbe
mov
dec
addl
add
add
fstpl
dec
push
dec
adc
mov
addb
add
add
adc
lods
int3
in
ret
dec
add
inc
add
add
imull
push
mov
dec
andb
push
call
inc
dec
dec
xchg
push
lock
add
pop
cld
pop
add
and
sub
or
mov
xchg
ss
dec
adc
pop
mov
clc
imulb
icebp
mov
ret
popl
pop
and
pop
cwtl
sarl
in
push
js
pop
push
or
push
xor
cmp
adc
mov
adc
dec
add
push
or
rclb
sub
scas
inc
add
movzbl
fistpl
mov
addr16
mov
aad
in
jo
jmp
cmp
scas
enter
fldl
xchg
dec
sbb
out
or
pop
ret
sbb
aaa
inc
sub
fisttpll
call
xor
xchg
dec
data16
add
orl
mov
fwait
lea
popa
jmp
cmp
mov
jne
loopne
xchg
sub
push
xchg
xor
mov
inc
jo
xor
in
xor
sub
cmpb
fisttpll
push
addb
lods
test
js
imul
insl
mov
mov
pop
push
jo
sahf
lret
push
ficoml
pop
jmp
adc
sbb
add
rorl
push
pop
sbb
or
orl
add
add
mul
push
push
iret
dec
cmp
sahf
add
loope
mov
loope
rcrl
adcb
add
push
add
je
or
mov
push
inc
sbb
cmp
out
pop
mov
xchg
roll
addb
insb
add
push
insb
ret
push
outsb
gs
dec
dec
jg
xor
inc
pushf
shlb
daa
xor
push
ret
inc
dec
push
hlt
ss
push
add
je
mov
mov
ljmp
mov
mov
mov
sub
aaa
imul
pop
add
shlb
inc
xchg
xchg
cld
negb
jnp
pop
loope
mov
insb
sbb
inc
or
xor
rclb
adc
addb
ficompl
aaa
mov
push
call
push
imul
sub
ret
leave
xorb
dec
inc
aam
push
sub
ds
sbb
ret
pop
or
cli
ficoml
or
jmp
nop
mov
mov
and
push
or
sub
mov
adc
push
enter
orl
ds
xchg
pop
jae
jne
push
add
loopne
lcall
jmp
cmpsl
mov
mov
aam
push
xchg
mov
jne
data16
jo
mov
sarb
fiaddl
ret
sbb
sub
sub
pusha
push
bound
js
or
mov
sbb
dec
xor
mov
out
sbb
fldt
jne
inc
jg
mov
add
push
test
inc
push
xor
shr
rcr
shr
rcr
or
sbb
lock
fildl
add
jb
cmp
loope
sti
ja
jb
cmp
add
mov
dec
dec
fcoms
mov
mov
mov
xorl
dec
and
or
mov
out
add
adc
jnp
sbb
or
push
or
jns
jmp
out
push
lahf
mov
xor
sbb
add
adc
push
jns
adcl
adc
push
or
push
in
adc
in
and
jno
jge
xchg
lods
daa
repnz
mov
mov
add
inc
loop
mull
das
outsb
cmp
sub
movsl
mov
pop
or
call
xchg
stos
mov
dec
andb
cs
out
push
fidivs
push
jl
or
pusha
dec
stos
ds
xchg
cs
sbb
add
dec
mov
int3
lea
dec
movsl
imul
jbe
inc
inc
inc
inc
jg
cmp
repz
or
push
les
rep
pushf
jg
mov
sbb
out
call
sahf
out
sahf
lock
hlt
clc
clc
cld
push
outsb
cltd
jp
ja
mov
or
loope
or
pop
mov
xchg
in
fildl
pop
repz
xor
push
inc
sbb
dec
outsb
mov
into
jl
cld
jmp
sub
or
orb
fsts
out
xchg
pop
stc
sub
jnp
mov
pop
nop
cwtl
push
mov
int
fiaddl
je
add
dec
lods
mov
mov
out
add
in
xchg
outsb
out
add
nop
dec
dec
popa
pusha
fisubrl
push
pop
add
dec
in
aad
pop
add
xor
cmp
inc
ds
repz
push
pop
fs
iret
repz
das
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
icebp
jns
xchg
nop
or
sub
push
add
inc
pusha
mov
pop
pop
daa
outsl
add
xchg
jb
inc
je
adc
sbb
sub
mov
adc
pop
nop
add
or
push
ret
push
inc
or
mov
inc
test
ja
andb
dec
adc
adc
dec
test
jb
cmp
inc
mov
jge
or
or
inc
cli
rcrb
test
mov
and
mov
mov
push
in
in
or
or
jae
popf
sti
mov
xchg
mov
and
or
inc
adc
push
sub
push
addr16
fucomip
push
push
sub
mov
dec
cli
cmp
sbb
add
xchg
sahf
fdivrp
es
mov
jbe
add
add
push
sti
dec
rorb
ja
jb
ja
andb
dec
fsubp
or
call
mov
dec
inc
call
adc
add
push
xor
adc
shrd
shr
ret
and
mov
and
shr
outsb
adc
sbb
push
lods
or
int3
pop
push
jle
sarb
lods
in
scas
cld
dec
cmp
pop
push
cmp
inc
scas
adc
sbb
sub
pop
imul
mov
sbb
xor
mov
pop
clc
ficoml
aaa
cmp
mov
push
cmpsl
imul
mov
mov
mov
mov
imull
inc
insb
cmp
daa
jne
mov
inc
daa
test
inc
pop
add
pushf
stos
mov
aaa
loopne
xchg
add
and
popf
push
ds
dec
xor
push
popf
push
movsb
jp
xchg
push
addr16
mov
push
mov
mov
jmp
clc
inc
test
mov
push
enter
aas
jne
pop
cmp
and
je
inc
cmp
dec
dec
andb
popa
adc
jnp
push
in
mov
fisttpll
insb
xor
aam
ss
pop
ret
mov
scas
leave
rcrb
cmp
push
cmp
fs
fiadds
sbb
push
push
push
cmp
jne
push
push
add
fidivs
sbb
push
add
xchg
sbbb
or
pop
lock
or
pusha
jne
inc
ret
adc
call
lcall
jns
aam
dec
cmp
pop
jmp
pop
or
js
pop
adc
in
push
stos
aas
call
and
jmp
arpl
lea
mov
xor
inc
inc
xchg
test
push
cmpsb
xor
xchg
jmp
fmull
sbb
dec
or
inc
mov
and
out
lea
or
adc
and
aas
test
add
cmp
cmp
or
daa
pop
mov
add
in
or
aaa
jo
and
or
int3
sbb
or
push
jnp
sub
jne
pusha
js
cmp
jmp
jno
loope
ja
inc
loopne
add
and
out
loope
es
mov
popa
add
sbbl
dec
clc
xor
cmpsl
jne
push
sub
lea
mov
out
inc
add
and
push
jae
push
or
loopne
inc
push
mov
xor
and
mov
in
xor
xchg
xchg
mov
rorl
xor
aaa
xor
sbb
xchg
push
jge
cs
jle
inc
ljmp
mov
sarb
mov
es
cmp
add
and
repnz
lea
add
pop
mov
or
jg
testl
mov
jl
pop
xchg
xor
pop
xchg
out
sahf
or
cmc
rclb
mov
pop
cmp
sub
xor
add
lods
pop
fld
or
cmp
jbe
in
jnp
push
mov
daa
and
out
or
arpl
imull
or
push
push
adc
std
jae
mov
bound
cmpsb
adc
ss
mov
ret
into
popa
sub
fstps
call
in
pop
das
cmp
popf
out
js
add
inc
pop
or
ljmp
popl
das
sub
jno
xor
adc
mov
jmp
aad
push
mulb
inc
clc
jp
push
sub
pushf
mov
pop
je
push
dec
push
lods
sbb
ret
cmp
and
out
mov
lret
adc
add
gs
test
pop
xchg
mov
add
pushf
sub
push
popa
pop
and
sbb
cmpl
clc
lea
fs
imul
add
lcall
sub
push
cmp
je
pop
pop
test
dec
imul
popa
adc
in
inc
dec
es
sbb
push
andb
mov
mov
xor
popf
int3
mov
sbb
mov
nop
push
add
sarb
enter
icebp
jl
mov
movsb
xchg
jle
jmp
addl
cmp
lods
push
add
jle
adc
ret
jno
cld
add
dec
mov
cmp
je
or
orl
or
inc
inc
mov
and
inc
push
mov
mov
test
je
xor
cmpb
jne
mov
push
clc
in
scas
jmp
and
mov
push
inc
jl
add
adc
loope
and
lret
push
cmp
into
rol
and
pop
imul
add
push
xchg
mov
pop
cmp
je
cmp
ja
push
pop
loopne
xchg
pusha
ds
xchg
mov
loopne
cmp
out
cmp
sbb
add
lcall
cmp
inc
pusha
add
divb
test
sbb
xchg
mov
dec
cmc
sub
sbb
sbb
or
fnstenv
push
jo
loop
and
push
push
jecxz
push
adc
add
and
icebp
jle
xor
and
jbe
popa
and
or
shll
les
cwtl
movhps
inc
cld
cmp
je
outsb
insb
fdivl
out
iret
adc
add
adc
cmp
arpl
outsb
or
dec
cmp
in
sub
neg
add
pop
ret
dec
mov
std
adc
es
clc
sub
cld
ret
mov
xor
arpl
xor
mov
xor
clc
testb
mov
je
es
xchg
push
pusha
inc
mov
cli
jno
jmp
adc
test
add
icebp
mov
jne
add
jecxz
cltd
test
sub
lret
adc
sub
jne
je
jp
movsl
push
inc
push
test
add
jg
loopne
pop
rep
test
mov
lret
fbstp
add
jecxz
inc
add
in
and
dec
push
imulb
push
xor
rorl
enter
loopne
xor
std
xchg
lcall
inc
adc
inc
push
fnstsw
shl
dec
shll
and
inc
xchg
sbb
pushf
jp
cmp
cltd
ret
insb
orb
lods
mov
icebp
hlt
movsb
dec
pop
sbb
enter
inc
iret
adc
and
cs
movsl
and
jb
shr
and
add
or
clc
int3
movsb
mov
dec
jne
pop
push
inc
cmpsl
nop
dec
jmp
cmp
fwait
xchg
xchg
je
mov
mov
dec
cld
push
and
jmp
sbb
adc
cmp
shll
enter
inc
mov
xor
mov
test
pop
test
add
call
inc
and
xor
or
mov
sbb
or
test
movb
mov
or
push
dec
icebp
cmp
push
or
sbb
and
adc
pop
mov
fidivrs
xchg
sarb
bound
mov
push
scas
sub
nop
push
sub
cmp
push
xchg
jo
dec
test
adc
sbb
lea
cmp
mov
cmc
xchg
sub
and
imul
and
mov
les
cmp
adc
pushf
sbb
rorb
xchg
jle
rcll
mov
mov
jmp
popf
fisubrl
dec
sub
pop
lahf
stos
inc
loopne
inc
push
adc
imul
sub
call
and
popf
jne
out
mov
inc
pop
cli
call
lock
add
and
loopne
cmpl
cmp
sub
adc
and
pop
push
inc
add
and
sbbl
aad
xor
cmp
jp
dec
mov
clc
pusha
fwait
jg
je
sub
cmp
sbb
and
add
fiadds
scas
rorb
rcr
mov
mov
cmpl
add
jmp
es
popa
je
xchg
push
mov
shl
nop
into
daa
pop
inc
or
xor
push
push
push
clc
jnp
adc
adc
cmp
je
mov
xor
sub
popf
jmp
ss
leave
sbb
sahf
dec
cmc
sub
repz
push
xor
loopne
out
mov
ljmp
sbb
cmpsl
repnz
sbb
out
and
repz
sahf
loop
adc
adc
mov
inc
lea
push
jecxz
add
adc
es
mov
jmp
push
dec
add
and
mov
or
push
push
cld
or
and
push
clc
div
test
movzwl
adc
xchg
fistpl
or
or
sub
je
adc
fbstp
or
pop
les
fs
enter
push
fists
xchg
pop
rol
push
stos
icebp
cmpsb
fcoml
inc
mov
aaa
fdivr
aaa
xchg
out
xor
adc
inc
mov
inc
or
outsb
in
push
jmp
cmp
cmp
pop
cmp
jb
es
data16
lret
sbb
movsl
mov
lods
push
out
clc
jne
ds
mov
dec
add
adc
scas
lods
and
mov
adc
ror
jae
or
and
stos
push
popa
mov
mov
fstpt
cmp
iret
mov
push
xchg
or
mov
insb
add
cmp
sti
xor
jbe
rcrl
mov
lcall
enter
mov
imul
call
cmp
bound
clc
push
jae
push
jmp
fs
cmpsb
and
push
mov
push
pop
inc
cmp
sub
push
insl
mov
add
sbb
inc
int3
cs
xor
push
pop
xchg
sbb
punpckhdq
mov
cltd
xchg
cmp
sub
movsb
sbb
into
lock
push
xorl
and
loopne
and
scas
mov
lds
arpl
push
jb
mov
jb
hlt
aas
push
repz
push
inc
xor
pop
inc
xor
aas
add
add
push
cld
fmuls
pop
or
or
gs
sub
inc
inc
jae
or
dec
mov
jl
add
inc
add
adc
push
push
pop
pop
add
ret
xor
dec
push
or
fildl
mov
inc
add
lds
stos
or
pop
or
fisttpll
pusha
xor
xor
jmp
mov
cmp
mov
or
or
pop
sub
push
inc
dec
sub
xor
inc
repnz
dec
dec
jmp
imul
pop
push
sub
xor
rep
mov
or
dec
loopne
or
sbb
lods
addl
add
test
inc
add
test
add
pop
inc
bts
jmp
fwait
mov
inc
mov
sub
mov
arpl
and
dec
and
ss
std
mov
std
xchg
jbe
dec
push
stos
add
xchg
mov
movb
pop
xchg
mov
pop
outsl
xor
push
adc
out
and
rcl
or
mov
add
adc
data16
or
enter
add
leave
cwtl
push
cltd
or
outsb
sub
jae
arpl
cltd
sub
nop
bound
adc
add
adc
movsl
popf
idivb
out
aas
in
jg
mov
mov
and
or
cltd
jle
push
mov
scas
or
pop
enter
mov
inc
mov
push
xchg
scas
nop
daa
lock
xchg
push
fistps
jge
xchg
pop
jo
push
orb
sub
and
mov
fisttps
pop
adcb
jg
or
out
sahf
out
xor
and
adc
add
shrl
jmp
jo
jl
pop
jns
pushf
fcomip
and
and
push
push
and
and
or
xchg
loop
mov
fists
push
jo
fists
dec
fbstp
jns
out
mov
int3
aam
add
ds
popf
aas
add
sub
sub
or
pop
cs
inc
mov
int3
inc
inc
xchg
imulb
rcl
dec
movsl
test
les
pop
add
dec
loope
cmp
test
lcall
pop
inc
and
push
scas
faddl
push
sub
push
xor
shl
movsb
mulb
in
je
jmp
and
lcall
in
push
or
add
inc
pop
jmp
sbb
subb
imul
and
mov
cli
mov
jecxz
in
cli
mov
adc
je
cmc
das
inc
sbb
cli
mov
sbb
lret
out
jg
je
rep
je
inc
dec
js,pn
jns
test
pusha
or
adc
add
xor
inc
sub
mov
add
adc
sbb
sub
lret
inc
mov
cmp
xchg
inc
mov
xor
add
cli
ret
adc
or
fs
push
mov
imul
inc
ds
loopne
pop
or
xlat
clc
test
leave
dec
xor
inc
inc
dec
dec
scas
pop
cmp
jne
mov
add
push
add
cmp
or
test
shlb
enter
imul
repnz
add
inc
mov
cmc
sub
cwtl
daa
xor
sbb
jge
or
cli
mov
decb
cmp
jne
sbb
out
jne
inc
movlhps
or
or
ja
int
mov
push
lds
push
cmp
jl
add
insb
xor
ficoml
dec
mov
je
mov
adc
sbb
add
popa
cmp
std
fchs
push
ficompl
sbb
fsub
push
pop
inc
pusha
sbb
adc
pop
xchg
sbb
mov
adc
or
movsl
sbbl
push
loop
icebp
testl
jp
push
loopne
mov
cmp
adc
cld
jg
push
sub
mov
sub
and
and
sahf
sub
or
loopne
das
enter
and
sub
insl
cmp
daa
mov
sub
test
mov
int3
add
test
cmp
pop
cltd
mov
mov
inc
add
or
dec
imul
push
shlb
cltd
sub
inc
add
adc
push
jmp
push
add
or
push
rcrb
cmpb
inc
xchg
sbb
or
pop
cs
cmp
stos
push
jle
mov
inc
xor
inc
sbb
sti
add
or
jge
inc
and
inc
insb
inc
lahf
es
fdivrl
loopne
or
adc
dec
inc
sbb
adc
xor
or
xchg
mov
cmpl
mov
fidivrl
jp
push
mov
sbb
movsb
sahf
mov
sub
mov
nop
dec
ret
adc
jne
sbb
fcom
rcl
mov
sbb
ja
adcl
loop
stos
and
inc
dec
rclb
jbe
pop
adc
out
add
decl
push
pop
cmc
popa
cld
xor
jmp
andl
xlat
and
fnstsw
sarl
jne
dec
xchg
pop
adc
subl
push
mov
inc
add
and
ja
fs
xor
jbe
imul
sbb
shll
repnz
sub
iret
add
add
test
loopne
sub
call
push
push
push
je
repnz
push
mov
cmp
mov
inc
iret
call
push
pop
imul
sbb
ret
or
outsb
loop
pop
sub
subl
pushf
ret
push
jl
fcmovnu
mov
and
cmp
push
pusha
push
std
pminub
fcoms
mov
je
add
xchg
add
arpl
es
js
or
push
mov
or
dec
repz
mov
mulb
push
nop
and
lods
js
icebp
add
jo
rorl
test
pop
out
add
mov
sbb
push
pop
jmp
aad
mov
sbb
into
jae
incb
cltd
pop
sbbb
clc
sbb
mov
inc
lods
push
fsts
xor
nop
insl
adc
scas
lods
out
icebp
popa
rorl
mov
jo
sub
sub
add
inc
add
push
push
add
ljmp
add
push
sbb
data16
rorb
cmpsl
or
movsb
call
cmp
xrelease
das
cli
add
pop
cmp
ljmp
dec
or
add
subl
mov
jo
dec
ret
movsl
sub
pop
push
xchg
dec
sub
pusha
add
out
dec
ljmp
ljmp
insb
rcrb
push
punpckhbw
lret
add
and
movsb
sti
jmp
sbb
in
inc
cmp
outsl
imul
stos
mov
cmp
sub
jg
insb
cwtl
push
mov
and
dec
pushf
and
enter
xchg
jbe
push
add
and
ret
mov
push
test
mov
enter
sarb
and
loope
mov
jne
or
xchg
xor
xor
cmp
pop
js
pushf
movsb
ss
sahf
or
aam
jbe
mov
pushf
rcrb
call
ss
jne
ljmp
sbbb
xor
inc
cmp
jge
popf
movsl
fldl
jbe
mov
lea
inc
xchg
popa
mov
iret
ret
fnsave
insb
pop
adc
inc
sbb
add
add
cmp
aam
frstor
dec
mov
unpcklps
xchg
mov
sarl
or
bound
lock
or
or
cmp
je
fmuls
mov
shll
je
or
adc
add
xchg
push
jne
out
ss
je
push
fiaddl
int
testb
adc
sub
sbb
inc
call
mov
lods
mov
or
inc
adc
dec
test
stos
pusha
pop
xchg
push
loop
pop
adc
inc
scas
and
adc
jne
pop
loopne
mulb
push
negb
cmp
js
sub
out
in
fwait
or
jmp
push
ret
pop
adc
push
mov
add
xor
rolb
add
pop
sbb
adc
mov
adc
daa
je
jge
cwtl
and
bound
rorl
notl
mov
rcl
loopne
and
xchg
or
ror
dec
adc
ret
xor
inc
popa
fs
cmc
and
push
push
pop
lcall
xchg
nop
and
dec
mov
pop
pushf
dec
lret
and
xor
xchg
lahf
sub
shll
dec
cmp
jbe
mov
lret
sbbb
cli
sbb
sahf
out
mov
inc
push
roll
stos
mov
bnd
jns
jl
xor
enter
mov
in
push
jmp
cmp
sbb
test
dec
and
rcr
add
dec
and
les
add
inc
jno
loopne
stos
sbb
scas
imul
mov
pop
inc
push
and
mov
jns
hlt
loopne
add
or
cmpsb
push
fisubl
and
and
dec
mov
push
or
cmp
add
xor
xor
pop
cmp
sar
fiadds
pusha
inc
mov
add
or
or
adc
sub
stos
cmp
fldenv
sbb
pop
push
xchg
push
je
and
aaa
cmp
add
ja
in
inc
frstor
push
movsl
adc
popa
cmp
add
mov
orb
loopne
mov
call
sbbl
stos
push
xchg
in
dec
mov
xchg
xchg
push
stos
add
push
jge
xchg
xorb
es
mov
mov
rclb
adc
mov
or
cld
inc
sub
or
cmpsl
in
ret
jne
andb
mov
add
xchg
push
aas
inc
and
add
mov
mov
jmp
sub
pop
loopne
inc
dec
jb
jo
or
xchg
sbb
pop
aas
cwtl
sbb
xor
inc
mov
imul
sbb
push
or
scas
repnz
loop
loopne
pop
daa
popa
push
and
push
sbb
dec
shlb
or
jbe
fdivr
adc
in
pop
pop
add
dec
mov
ret
cmc
push
nop
cld
mov
add
dec
or
movsl
xchg
push
ja
fcomp
andl
add
add
rolb
push
adc
sbb
dec
and
addr16
and
mov
mov
add
loop
add
dec
pop
popa
popa
sti
dec
and
xor
or
loop
outsb
js
or
mov
dec
test
nop
cmp
xor
jne
aas
add
pop
add
xchg
mov
fdivrl
call
mov
sub
jnp
inc
pusha
loopne
or
mov
cmp
and
push
dec
ret
pop
add
push
insb
push
ss
sbb
mov
or
jb
push
pop
dec
dec
in
cmp
jbe
mov
mov
icebp
outsl
jb
mov
mov
rorl
cmp
lcall
cld
add
dec
test
mov
lods
xchg
or
test
adc
dec
or
call
mov
mov
and
push
jecxz
rcr
mov
daa
or
lea
clc
mov
lock
push
mov
add
jbe
xor
mov
add
ja
je
mov
outsb
xchg
sahf
inc
xchg
decb
mov
xchg
cmp
std
imulb
or
cmp
icebp
cmp
jb
adc
push
stc
and
sbb
jo
add
sbb
fs
lock
dec
cmp
repnz
outsb
mov
or
push
dec
xor
push
cmp
aaa
or
enter
stos
cs
dec
cmp
inc
lods
leave
stos
mov
loopne
shrb
dec
inc
cmp
cmpsl
or
push
mov
dec
insb
push
push
mov
xchg
ficoml
sub
jge
mov
dec
adc
cmpsb
dec
cs
add
enter
in
cmp
mov
es
ja
leave
insl
cmp
inc
pop
pop
pusha
aam
add
pushf
sub
mov
popa
cld
lea
jl
jb
in
out
mov
xchg
cmp
sub
sbb
add
jb
inc
sbb
adc
jl
shlb
push
scas
add
or
xor
shl
mov
xor
in
imul
sub
in
cmp
add
push
in
stos
pushf
je
xchg
xor
test
dec
pop
test
push
mov
xchg
sarb
or
add
push
mov
ss
mov
adc
jg
jge
jge
subl
loope
shll
mov
inc
test
subb
push
pop
ljmp
ret
mov
rorb
call
les
xchg
cmpl
push
std
test
mov
and
add
inc
lret
pop
xchg
dec
std
pop
sarb
shrb
and
clc
add
cmpsb
adc
ss
xorb
sbb
sbb
lock
or
mov
dec
inc
pop
add
xchg
jno
pop
sbb
cltd
test
cmpb
cmpsl
or
ljmp
adc
xor
daa
fsubl
push
mov
cmp
jge
out
mov
and
push
adc
sub
mov
mov
in
test
cmp
push
or
cmp
sbb
mov
lock
pushl
rcr
xor
sub
adc
xchg
sub
addl
or
fneni(8087
xor
jmp
aaa
call
mov
mov
sbb
inc
cmp
sub
imul
adc
and
xorb
xchg
mov
add
loop
idiv
jmp
jl
mov
jge
add
lea
mov
test
xor
pop
jae
mov
incl
cmp
cmp
xchg
out
pusha
inc
popa
jbe
lods
lahf
sbb
sahf
orl
pop
mov
sub
or
dec
cli
cmp
mov
push
cld
mov
inc
pop
mov
cmc
inc
inc
pop
aam
scas
dec
pop
sbb
sub
shll
push
pop
sti
faddp
mov
lea
push
icebp
jmp
clc
movsl
movsl
pop
mov
jns
add
rcll
inc
or
pop
ss
push
jno
scas
stos
and
mov
add
push
adc
imul
nop
and
pop
dec
inc
mov
xadd
popa
test
js
insb
sbbb
xchg
jb
adc
test
push
ds
pop
cld
jne
imul
push
xor
mov
js
and
pop
aas
inc
dec
push
add
repnz
adc
adc
or
pop
mov
inc
push
jecxz
sbbl
movsl
lret
sahf
pop
lock
inc
aas
adc
dec
mov
pop
jnp
push
xchg
sub
or
call
add
insl
add
hlt
mov
movb
mov
aaa
push
push
repz
test
adcb
pop
sbb
call
xchg
cli
or
sbb
inc
inc
mov
call
xchg
and
lods
push
mov
pop
stc
inc
std
cmp
push
xchg
jl
xchg
push
mov
test
in
mov
mov
sbb
fcoms
pop
adc
nop
lret
xor
je
and
and
mov
jecxz
mov
sub
add
jb
xchg
xchg
enter
mov
jb
fcomp
mov
xchg
ja
popf
cmp
and
loopne
cmp
pop
xchg
mov
mov
sub
cltd
pop
clc
aas
lret
pop
jno
stc
fidivrs
or
pop
mov
jae
mov
popa
das
inc
add
push
mov
es
lcall
sub
andb
mov
test
dec
sbb
dec
je
adc
or
daa
xchg
adc
mov
idivb
mov
jmp
fs
ror
or
jo
cmp
sub
idivl
add
sbb
enter
sbb
xchg
je
lea
flds
sbb
ficoml
and
add
jge
or
sti
push
mov
lea
js
add
and
and
lods
or
jne
fcomps
and
pop
sub
inc
add
jmp
or
js
test
mov
pop
dec
orl
and
xor
add
subb
jbe
xchg
cmpl
fcomps
mov
adc
push
call
add
dec
cwtl
aaa
test
sub
and
and
xorb
es
push
ja
jp
leave
push
call
and
or
or
pop
ret
mov
lock
mov
movnti
adc
icebp
pop
daa
fbstp
negb
rorl
mov
fadds
jnp
scas
cmp
xorl
enter
jle
pop
pop
xor
test
push
pop
pop
inc
xor
push
mov
pop
mov
sbb
testb
outsb
sbb
push
xor
jne
or
cmp
mov
add
xchg
inc
cmp
sub
inc
lock
adc
iret
rol
mov
insl
push
and
test
jmp
add
negl
cltd
or
inc
clc
sbb
arpl
xor
cmp
mov
rcl
mov
adcl
adc
cmp
mov
mov
cmp
xchg
dec
push
push
xor
jo
adc
data16
movsl
inc
mov
sbb
inc
inc
jmp
and
les
push
xchg
or
sub
mov
pop
ror
data16
mov
rorb
insb
dec
lret
jmp
xchg
pop
pop
rorb
std
nop
or
adc
push
fnsave
sub
sub
imul
jb
sbb
orl
push
pop
and
inc
hlt
or
or
add
das
and
mov
adc
or
dec
add
mov
xor
loop
push
xchg
dec
push
cs
fs
inc
cmp
mov
aam
jl
xchg
and
or
sbb
into
fsubr
mov
enter
inc
cmp
cmp
xor
cmp
and
add
test
pop
mov
mov
call
aaa
scas
inc
xor
sub
loope
push
xor
enter
push
mov
cmp
or
insb
mov
ret
dec
add
rolb
add
xor
push
or
sbb
out
mov
rcrl
pop
xlat
and
sbbb
xor
push
mov
and
sbb
push
inc
adc
push
fs
out
ds
push
sub
or
jecxz
push
cs
ja
iret
add
jmp
repnz
mov
xchg
gs
and
push
inc
push
cmp
xchg
loope
test
inc
adc
cmp
xchg
icebp
add
cmpsl
mov
dec
jecxz
mov
cmpl
je
push
push
addr16
mov
call
xchg
and
cmp
test
pop
push
pushl
test
push
jne
pop
decl
ret
jl
or
movl
jnp
dec
pop
cmpsl
mov
sbb
inc
inc
push
andl
inc
push
mov
pop
es
xchg
push
cwtl
out
and
cmp
mov
push
or
mov
test
inc
repz
or
popa
scas
addr16
dec
xchg
push
dec
mov
cmp
loopne
pop
scas
add
add
xchg
and
and
js
or
cmpb
inc
xchg
test
dec
lcall
or
mov
push
addb
hlt
mov
into
sbb
mov
fistpl
cmp
inc
cmp
std
sub
xorl
mov
inc
lret
or
adc
jne
push
add
push
push
jle
callw
das
jge
mov
jmp
scas
add
das
mov
push
incl
jg
and
repz
add
inc
jmp
and
fs
or
or
mov
push
xchg
pop
into
pop
sbb
outsb
adc
add
sbb
lret
pop
adc
jnp
or
mov
push
pop
inc
bound
rolb
dec
push
jne
test
aas
je
fildll
inc
xchg
js
sbb
push
aas
aaa
scas
jbe
xor
addl
ds
popa
mov
andl
jne
sub
push
mov
xchg
or
dec
pop
and
js
shrb
or
out
sub
aam
testb
cmp
add
sbb
jg
add
cmp
xchg
fildl
jle
lahf
cmp
out
adc
aam
pop
or
sahf
or
sar
adc
popa
inc
sbb
add
push
pop
add
add
adc
cmp
out
push
xchg
or
inc
cmp
jmp
adc
addl
add
mov
ret
jmp
push
dec
dec
or
jp
arpl
mov
fisubl
inc
cmp
sti
or
sub
inc
aam
test
inc
test
sub
pusha
mov
adc
jno
pop
xorl
lods
dec
xchg
push
and
mov
ljmp
inc
jae
ss
ficoms
xorl
std
xor
or
aas
inc
outsb
stos
imul
lock
les
add
mov
push
adc
test
push
cmp
mov
out
pop
movsb
cmp
in
daa
fcoms
addl
lea
add
pusha
or
cmp
and
mov
aam
roll
adc
add
fwait
jl
add
and
inc
ja
jmp
add
add
xor
or
xchg
enter
cmp
sbb
stc
push
fwait
adcb
adc
enter
or
inc
inc
cli
pop
xor
inc
fildl
lock
test
sbb
xor
out
adc
negb
and
mov
pushf
add
cmc
push
js
shlb
loope
mov
ds
push
orb
dec
sbb
dec
jge
or
or
mov
xor
mov
add
xchg
in
dec
test
in
mov
sbb
xchg
push
out
or
fimuls
push
mov
outsl
cmp
mov
lods
int
cmpl
jne
pop
rorl
push
push
js
dec
sbb
xor
adc
aam
sbb
test
sbb
xchg
test
jg
or
fisubrl
es
data16
adc
and
dec
cmp
jmp
lods
add
mov
mov
mov
mov
aaa
add
xchg
sub
lea
push
loop
movaps
xor
andl
sbb
in
inc
in
dec
jb
cmpl
push
inc
mov
test
and
cmp
sti
lcall
bound
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
orl
jl
adc
into
cmpsb
decl
xor
dec
push
fs
adc
mov
lea
addr16
stos
xor
sub
xlat
and
ds
push
js
aaa
mov
cmpb
into
mov
jmp
shlb
repnz
lea
in
add
xchg
push
xor
mov
xchg
push
pop
fs
cmp
and
test
loop
and
dec
ret
add
or
xchg
je
arpl
jae
xchg
adc
mov
sbb
outsb
add
mov
push
add
add
scas
shr
stc
or
add
andb
popa
adc
ljmp
pop
sub
or
jmp
mov
dec
dec
jl
mov
cmp
fnstcw
or
icebp
cmp
xchg
sbb
pop
cwtl
mov
test
das
cwtl
adc
pop
or
add
mov
lahf
push
mov
jbe
xor
movsl
and
iret
sbb
add
push
fldenv
add
adc
mov
and
sub
nop
les
clc
sub
mov
cmpsb
sub
pushf
fcompl
dec
push
mov
lea
fbld
adc
xlat
xor
pop
add
jo
rcr
sbb
loopne
add
sub
sbb
add
inc
pusha
imul
mov
jne
adc
mov
or
sbb
add
int
stos
stos
push
lret
push
aad
int
dec
ss
int3
inc
out
adc
sub
push
jbe
inc
popf
dec
cmpsb
lret
push
or
dec
xor
mov
scas
mov
push
mov
mov
adc
popf
add
fdiv
push
mov
rdmsr
or
lret
jg
test
jecxz
and
stc
sbb
xor
inc
push
in
dec
cli
sub
cmp
je
cmp
enter
jl
add
mov
mov
adc
fldl
movsb
pop
rclb
jb
mov
or
je
push
les
push
jl
test
mov
pop
lcall
imul
sbb
adc
das
mov
add
sbb
test
int3
test
add
ds
add
sub
mov
setg
sbb
arpl
jne
std
dec
push
mov
and
test
shrb
xor
pop
roll
mov
push
jo
shlb
dec
cmpsb
jo
dec
sub
cwtl
push
mov
loope
pop
sub
int
rcll
data16
into
scas
cmp
lcall
mov
insl
xchg
outsb
cmp
lods
enter
inc
ficompl
mov
xchg
dec
jns
neg
add
cmp
jl
mov
jne
add
lds
sbb
in
or
in
add
xor
inc
inc
xchg
test
hlt
out
inc
add
xor
addb
mov
fstpt
adc
pushf
adc
mov
movb
sbbl
sti
add
jnp
pusha
test
or
insl
pop
xor
jmp
popa
fsubrs
inc
mov
jle
das
mov
pop
pop
pop
jbe
inc
clc
jge
adc
dec
jge
add
pop
push
sbb
dec
cmp
xor
cltd
shrb
push
push
popa
adc
mov
and
inc
ds
push
cwtl
and
sbb
mov
adc
ficoml
lods
xchg
dec
mov
pusha
adc
jl
jmp
and
or
add
sbb
inc
pop
cld
mov
and
or
mov
inc
in
or
jecxz
clc
lcall
adc
jo
adc
mov
push
add
inc
imul
and
inc
dec
out
inc
rcll
sbb
cli
push
add
test
pushf
adc
mov
or
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
jbe
fiaddl
ret
clc
fld1
faddp
testb
data16
ljmp
ficomps
cli
pop
in
test
xorb
imul
int3
mov
call
sub
sbb
mov
not
mov
xchg
or
or
cmp
adc
loope
ret
fldln2
inc
in
fstp
je
shll
es
inc
popa
lcall
ficoms
in
inc
gs
mov
inc
mov
mov
push
fldz
push
xchg
rclb
xchg
cmp
cmp
xor
jmp
xchg
mov
xor
add
adc
add
lea
cmp
loopne
add
adc
fcompp
mov
sub
fisttpl
xchg
inc
daa
jbe
lock
arpl
xchg
pop
mov
sbb
loopne
or
or
and
and
icebp
push
enter
fdiv
or
or
int
frstor
push
push
je
shl
sbbl
dec
inc
pop
cmpb
mov
sbb
mov
jmp
mov
xlat
mov
sub
jo
or
push
in
xchg
enter
pusha
xchg
loope
stc
shlb
hlt
add
shll
sub
loope
mov
das
jb
add
int3
mov
in
hlt
jmp
int
iret
out
insl
orb
and
rol
mov
sub
jl
loopne
shl
add
les
lret
add
call
out
cs
adc
imulb
sbb
ret
fstpt
or
mov
arpl
add
add
dec
push
pop
leave
pop
or
add
insl
pop
pushf
test
add
or
fnstenv
js
mov
dec
jg
loopne
or
pop
sti
sub
clc
xor
or
adc
adc
push
fcoms
cmp
ret
mov
mov
adc
movsl
xorb
mov
fisubl
loope
lret
dec
je
loopne
push
or
flds
hlt
nop
mov
insb
push
fldcw
adc
push
ret
mov
pop
and
mov
jnp
add
cmp
or
fldl
and
or
mov
jl
sbb
or
movsb
enter
or
and
sub
push
out
out
or
sub
scas
xchg
and
outsb
cmp
pop
mov
mov
sbb
cmp
popf
push
lcall
mov
fiadds
divl
push
cltd
or
and
les
jmp
daa
je
xlat
pop
mov
in
das
subl
je
mov
leave
pop
fldl
mov
fcompl
push
pop
adc
jae
dec
and
mov
push
xor
add
add
jae
fidivrl
imul
dec
jae
sarb
inc
adc
xor
push
adc
mov
in
ja
sbb
in
push
test
push
jo
fstpl
movsl
std
jp
jae
dec
jo
push
inc
paddq
mov
or
dec
xor
or
clc
pop
jmp
insl
cmp
loopne
gs
sarb
ss
inc
mov
test
mov
daa
lahf
movsb
popf
fwait
cmp
cmp
add
pop
adc
adc
sahf
cwtl
in
push
mov
pop
roll
in
pushf
pop
test
pop
jne
and
sbb
fstps
inc
sub
pop
fcomps
push
inc
add
data16
add
dec
xchg
mov
shll
movsl
test
or
and
and
push
rcll
fisubs
movsb
and
ffreep
sbb
add
imulb
pop
out
sbb
cli
divl
and
gs
push
pop
and
dec
adc
pop
dec
pop
dec
fcmovnb
xorb
fs
push
jp
add
fcoml
push
sub
lcall
sub
xchg
jbe
xorl
add
push
movsl
add
sub
dec
mov
mov
adc
sbb
jg
pop
rclb
or
test
nop
jns
and
pop
sbb
inc
add
int
mov
and
sbb
and
fwait
adc
push
or
add
loop
and
pop
insl
out
out
and
andl
shr
shrl
xor
mov
and
sahf
and
sub
scas
cmp
sub
lret
test
jle
lods
inc
push
testb
add
or
pop
xchg
movb
or
test
or
cli
pusha
ds
jp
adc
je
insl
cmp
sub
je
or
or
mov
mov
lods
ss
mov
iret
ficoml
movsl
jb
sbbb
or
mov
decb
and
and
jecxz
sbb
or
inc
in
add
or
jmp
inc
and
aad
mov
ret
sbbl
cmp
cmp
cmp
dec
and
jecxz
push
xchg
out
xchg
cmp
cmp
mov
mov
inc
and
pop
cmp
pop
inc
add
inc
stc
out
push
mov
mov
inc
or
sub
in
mov
sti
add
pop
lock
jns
out
test
fisttps
repz
insb
mov
loop
sbb
pop
dec
je
ljmp
fmuls
or
shll
push
and
or
or
test
or
push
push
push
imul
pusha
pop
push
stos
in
outsb
shrb
push
and
inc
dec
pop
sbb
pop
fldl
fstpl
cmp
jno
push
jb
pop
bound
or
jp
je
test
sbb
mov
cld
subl
inc
lret
or
pop
test
cmp
mov
orb
push
inc
mov
dec
pop
and
imul
stc
iret
pop
push
shrl
add
addb
xor
mov
adc
fcomi
fldl
outsb
aas
stos
or
pop
dec
mov
aas
jmp
dec
daa
notb
fstpl
mov
add
into
adc
aam
and
add
test
jmp
sbb
pop
loope
and
or
sub
or
lea
ds
xor
mov
into
sti
or
lret
jmp
test
jo
add
inc
add
mov
sub
cli
mov
pusha
add
sub
test
xor
inc
mov
hlt
sbb
bound
sbb
push
clc
push
or
xchg
lea
adc
push
pop
pop
je
imul
adc
cmpsb
adc
mov
and
mov
or
jns
push
cmp
inc
lret
sub
or
dec
pushf
sbb
and
rolb
lret
push
sub
and
mull
cmp
es
mov
mov
add
push
aaa
sub
push
pop
int
outsl
push
mov
pop
lret
sbb
and
mov
mov
add
pop
pop
pop
lods
jl
pop
add
and
adc
clc
add
push
sbb
jmp
test
push
xchg
dec
push
add
or
inc
nop
mov
shl
pop
test
sahf
add
cli
les
jo
dec
out
shrl
rcrl
je
in
pop
loope
or
inc
add
mov
clc
jg
enter
imul
stc
push
mov
push
adc
lds
push
ret
icebp
test
lretw
cmp
add
repnz
nop
mov
lock
mov
negb
shll
lock
push
mov
or
sbb
dec
jmp
js
inc
pop
adc
out
sbb
and
cmpsl
sub
daa
sub
ja
mov
ss
and
loope
jp
mov
cs
out
mov
fstsw
ss
nop
inc
ficoml
sbb
cld
ror
mov
dec
cld
or
out
das
adc
fldcw
inc
cld
cli
mov
cwtl
fwait
mov
jae
or
fwait
clc
adc
and
fwait
sbb
sub
scas
jmp
icebp
fstp
test
jbe
sbb
fldpi
xor
adc
xor
inc
or
adcb
fwait
out
std
pop
out
je
inc
repz
out
ss
test
js
xchg
jp
push
push
sub
inc
mov
lcall
mov
xchg
sbbl
push
cmpl
pop
nop
fsubrs
sbb
xchg
add
test
xor
xor
mov
aaa
jne
addr16
ja
fdivrp
sbb
je
cmp
je
push
xor
mov
inc
mov
mov
out
nop
outsl
cmp
movl
jp
lods
daa
ret
push
ss
or
dec
into
or
lcall
cmp
sbb
fwait
div
cltd
or
sub
sahf
pop
enter
adc
dec
popf
ret
lock
bsr
push
xchg
jne
cld
cli
mov
mov
jp
and
lods
mov
into
sbbb
mov
mov
cltd
push
push
orl
mov
loopne
or
jecxz
adc
lea
push
data16
push
fsubrs
jne
js
push
pop
jo
pusha
fs
movsb
fmuls
xchg
sarl
fldt
insb
or
test
fldt
cld
inc
iret
cli
push
add
add
jae
push
enter
je
fdivrp
ret
push
fcompl
fistps
pop
sbb
adc
addr16
push
jg
jmp
xor
jns
cmp
testb
push
xor
bswap
dec
mov
sub
push
popf
or
pusha
rcr
add
fimull
je
xor
int
xor
adc
icebp
shlb
into
rcl
jae
pop
xor
fwait
out
pop
add
das
and
aas
ja
hlt
xor
lock
int
xchg
test
fdivr
adc
fisubrs
outsb
out
and
and
and
sbb
or
adc
xchg
adc
scas
insl
push
lea
shll
pop
cltd
xchg
add
or
movsl
cwtl
sub
mov
dec
pop
out
xor
or
lret
push
jb
or
adc
and
jbe
mov
xor
add
lret
fcmovb
inc
cs
xchg
bound
cs
mov
out
xor
das
inc
int3
cmp
enter
push
int3
xchg
dec
or
mov
movsl
sub
xor
das
inc
int
add
mov
xchg
imul
jge
xor
das
inc
into
pusha
and
pop
xor
or
mov
jge
xor
fisubrs
movsl
das
push
cmp
aad
scas
sbb
fistpl
je
fnstsw
sbb
clc
out
dec
test
xor
sahf
mov
in
outsl
sub
lods
aam
mov
or
fdivrs
movsb
dec
and
sub
or
and
xchg
push
xor
or
xlat
push
addr16
fs
and
nop
add
jl
add
vhaddpd
inc
in
mov
ljmp
push
mov
push
dec
push
xor
lock
aas
inc
call
pop
clc
maskmovq
mull
xchg
dec
or
inc
ficompl
cs
in
xor
stos
test
ja
test
das
rclb
add
fdivs
xor
out
push
rorb
mov
sub
pusha
add
and
or
push
imul
add
fsubrl
ret
push
dec
inc
push
adc
inc
cmp
sub
mov
jle
shll
aaa
es
and
jb
xor
cmp
lret
and
aas
loopne
add
jbe
add
add
sub
or
fcoms
popa
add
add
xchg
call
out
das
sbb
and
fldt
lcall
mov
loopne
int
or
ror
sub
ficoml
jg
jl
notb
xor
sbb
clc
push
inc
scas
fnstenv
andl
or
fstps
sbb
pop
xor
xor
xor
jbe
test
mov
clc
dec
pusha
add
pop
ret
mov
xor
je
icebp
and
ret
cmp
lret
and
idivb
and
dec
insl
sti
mov
sbb
fsubrp
cwtl
pusha
leave
mov
jns
je
cmp
ficomps
adc
outsl
ret
xchg
pop
and
cmc
cmc
enter
inc
pop
add
mov
mov
adc
mov
shlb
repnz
xor
stc
xor
shl
movsb
push
aam
movsb
pop
or
cmpl
lahf
les
jne
adc
adc
cwtl
sahf
clc
pop
test
fwait
lea
out
add
insb
cwtl
and
ret
mov
jmp
fildll
stc
rcrl
ss
add
sbb
xlat
hlt
sahf
lea
stos
sub
xor
cmp
or
cmc
mov
gs
pop
inc
subb
and
test
and
xchg
dec
sarl
push
add
ja
scas
inc
push
adc
out
je
mov
cmp
cmpsb
ss
inc
adc
rolb
push
imul
pop
mov
jne
ret
ret
js
mov
ret
xchg
outsl
loop
std
or
cmp
mov
mov
clc
je
cmp
cmp
sub
mov
add
mov
mov
insl
push
xchg
xchg
adc
pop
gs
leave
push
mov
cmp
fwait
test
mov
je
mov
addr16
xor
xor
cli
mov
aaa
xchg
pusha
in
test
jl
fidivrs
subb
mov
cmp
push
sub
test
subl
daa
inc
dec
insb
lret
out
sub
adc
inc
adc
nop
pushf
add
jmp
scas
xchg
in
movsb
jp
fimuls
xor
js
dec
mov
xor
sub
mov
popa
arpl
mov
bound
es
dec
jge
cs
fwait
add
cs
sub
push
push
push
pusha
add
lret
or
pop
or
enter
xchg
add
popa
imul
cmp
pop
cmpsl
mov
xchg
push
push
jns
cmc
mov
mov
cmp
test
notb
mov
add
add
pop
mov
lahf
leave
add
push
mov
lea
ret
mov
cmp
hlt
fsubr
add
adc
out
aad
dec
mov
pop
mov
cmc
add
dec
push
mov
mov
nop
jmp
mov
mov
mov
mov
inc
dec
push
push
xor
negb
push
fwait
pop
shll
jns
or
std
jmp
imulb
add
or
sbb
or
pop
inc
es
loopne
jmp
daa
outsl
nop
cwtl
jl
add
leave
loope
daa
fnstenv
jo
or
std
adc
clc
jg
pop
mov
sub
push
inc
pop
hlt
mov
je,pt
sub
add
add
adc
cs
push
imul
outsb
adc
insl
popa
sub
pop
notb
test
cmp
insl
loopne
iret
xor
js
jbe
mov
or
movzbl
push
dec
push
jbe
sbb
jb
jmp
das
dec
or
xor
ret
and
int
leave
sbb
sbb
or
add
mov
loope
lcall
push
pop
test
cmp
jle
imulb
and
bound
jle
jne
adc
push
cmpsb
sbb
sarl
es
addr16
xor
cmovo
push
or
pop
scas
jo
add
mov
add
sub
fildl
test
stos
seto
xchg
mov
jno
adc
lods
daa
dec
xor
xor
ss
ja
cmp
cmp
jg
sub
or
fs
in
popf
or
add
and
jle
jmp
aaa
arpl
mov
pop
lahf
lahf
sbb
dec
clc
inc
cmp
loope
hlt
xor
and
mov
jg
jmp
andl
outsb
pop
and
in
or
loope
popa
icebp
adc
shlb
cs
arpl
jno
ret
sub
movsb
mov
insb
pop
mov
mov
mov
xchg
and
add
and
push
out
cmp
jae
sbb
nop
icebp
pop
push
lock
jae
cmp
jl
xchg
js
in
mov
ds
adc
or
jnp
arpl
bound
lock
jnp
lret
fnsave
rol
adc
test
mov
std
xchg
dec
cmpb
push
or
xor
xor
dec
lret
mov
xchg
testb
mov
adc
testb
aaa
adc
test
or
gs
mov
shll
inc
adc
xor
movsl
dec
add
jo
pop
je
or
cmp
mov
inc
add
add
fdivrs
sbb
sti
jb
ss
lea
push
cmp
in
lcall
add
pop
nop
test
sti
insb
xor
mov
cmpsb
mov
dec
push
stos
addr16
sub
leave
jne
repnz
rorl
divl
movnti
add
jge
rolb
add
add
ds
push
sub
cmp
dec
icebp
out
fstl
sub
pop
sub
leave
sbb
pusha
push
jbe
mov
jno
seto
in
adc
mov
or
test
push
sbb
shll
fmull
int3
fsubrs
ficoml
insb
adc
jo
pop
cmc
gs
mov
mov
push
dec
jo
add
fwait
cwtl
sub
push
dec
xchg
imul
ret
inc
out
pop
or
outsl
pop
mov
imul
stos
movsb
mov
add
sub
iret
test
jb
icebp
shlb
in
loopne
aas
sbb
pop
ja
sub
jg
arpl
pop
or
sub
leave
aam
push
lahf
mov
lcall
movsl
inc
push
jl
outsb
adc
js
sbb
lea
stc
dec
out
push
fs
jne
movsl
popf
out
adc
or
and
cmp
add
inc
mov
jbe
das
out
dec
pushf
out
pop
dec
xor
sti
js
or
push
sti
mov
enter
adc
dec
ret
outsb
jle
mov
es
je
push
push
cmp
add
add
mov
adc
push
and
mov
pop
inc
mov
das
imul
sbb
stos
mov
cmp
fsubs
sahf
std
cmp
jmp
jae
or
divb
dec
repz
ret
mov
mov
test
lea
ss
stos
pop
mov
xor
jmp
mov
scas
jl
and
add
sbb
rolb
xchg
push
or
jo
ret
jae
ja
cmp
inc
or
int
sbb
leave
mov
mov
ss
mov
pushf
and
xorl
dec
sbb
push
cmp
pop
outsb
arpl
push
es
insl
cld
pop
mov
rclb
mov
pop
es
jmp
sbb
jl
imul
pop
pop
popf
mov
dec
cmc
sub
aad
cmp
je
gs
dec
sti
pusha
ss
gs
adc
in
jb
int3
mov
xor
jo
sbb
cmpsl
not
jmp
stos
jae
xor
pop
xchg
add
jb
or
fdivrl
inc
xor
ret
cld
dec
popa
int
pop
cld
ds
inc
push
xchg
or
mov
pop
add
jne
push
test
dec
rclb
and
lock
sub
insb
mov
enter
sbb
dec
cmp
inc
push
adc
daa
mov
mov
enter
js
lret
nop
xlat
push
add
jg
incb
mov
xor
mov
sbb
or
and
imulb
cmpsb
inc
or
adc
sub
inc
sbb
sbb
imul
es
sbb
and
add
push
add
xor
push
xor
sbb
adc
dec
in
shlb
lock
jmp
aas
shlb
add
pop
mov
add
push
sub
xchg
cmpsl
cltd
fisttpll
inc
mov
add
mov
jge
jle
lea
jbe
inc
adc
cmp
xor
push
pop
inc
xchg
mov
gs
gs
rorl
test
lcall
clc
xchg
inc
leave
or
push
xchg
mov
es
jle
sbb
cmp
push
les
shll
loopne
and
sarb
lods
or
scas
xchg
lock
movsl
mov
adc
inc
or
rclb
sub
jno
stos
jg
mov
lahf
mov
test
fwait
push
xlat
gs
jp
push
fcoml
jo
adc
pop
xor
push
enter
fildl
data16
push
jmp
sbb
add
push
sarl
jl
xor
lret
and
inc
pop
fs
and
or
icebp
dec
sub
sbb
sub
shrl
lahf
jbe
xchg
mov
mov
and
push
adc
fcomps
rcr
test
leave
repz
adc
xor
jno
push
xor
rorl
pushf
mov
imul
push
fldl
iret
xchg
test
adc
imul
and
adc
and
faddl
iret
or
clc
adc
xchg
or
push
jmp
enter
addl
mov
push
mov
je
movsb
int3
das
mov
pusha
cmp
je
fidivrs
scas
mov
stos
and
cmp
add
push
fiaddl
dec
mov
adc
jmp
call
pushl
cs
mov
push
mov
iret
imul
test
ret
xorl
push
dec
xlat
popa
xchg
int3
int3
out
and
xor
mov
add
sub
mov
orb
decl
cli
aas
jbe
push
pop
sub
xor
mov
push
mov
or
add
pop
mov
icebp
pop
xchg
cld
or
sbb
and
loopne
jns
loop
cmp
push
sub
je
adc
insl
inc
jmp
rcpps
add
pop
add
jae
sbb
and
push
je
sar
inc
add
sub
push
pusha
adc
and
pop
sub
dec
pop
xlat
dec
or
cmp
jbe
mov
roll
jno
and
cmp
add
add
inc
cmp
push
sti
jp
mov
or
je
dec
add
push
mov
cmp
or
jae
xchg
or
int3
pop
add
or
cmp
sbb
or
pop
roll
in
or
es
bound
outsb
jo
or
sbb
pusha
mov
sub
dec
paddd
mov
jae
cmpb
or
test
adcb
or
dec
cmp
dec
ret
adc
dec
stos
push
mov
ljmp
xchg
inc
xchg
insb
movsb
xor
and
scas
lcall
mov
add
push
jmp
clc
xor
lsl
movsb
adcb
rcll
cld
imul
and
aas
gs
push
or
jae
movsb
mov
scas
cmp
dec
inc
adc
inc
cli
jne
jo
xor
and
dec
sub
dec
jo
mov
push
adc
jmp
adc
jp
or
push
dec
adc
push
adc
adc
mov
loop
mov
fwait
or
or
movsl
pop
cmp
mov
add
in
adc
pusha
jo
xorb
sbbb
jmp
and
inc
pop
pop
add
dec
and
test
or
mov
rcl
jmp
loopne
not
call
sbb
mov
mov
mov
sbb
and
sbb
ret
adc
jmp
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
sub
cmc
xchg
cmp
outsb
jmp
es
inc
or
xchg
mov
imulb
je
js
inc
pop
mov
mov
daa
sbb
rcrl
dec
sub
aaa
mov
adc
pop
mov
cwtl
cmp
aaa
mov
sbb
inc
or
sbb
rclb
or
cmp
pop
js
loop
and
or
push
loop
fs
cs
rcll
scas
into
cli
int
and
pop
sbb
pop
imul
push
stc
imul
icebp
pop
mov
add
push
sbb
repnz
jle
pop
rcl
sbb
rolb
inc
dec
sbb
push
jno
cmp
sub
iret
shrl
and
jmp
pop
mov
decb
jne
adc
and
sub
or
xchg
dec
sub
push
jo
sub
in
dec
mov
xor
arpl
rorl
rolb
and
xor
sbb
xchg
fistpl
jle
inc
mov
push
inc
lcall
fs
jbe
test
subb
mov
les
mov
cmpl
cmp
imull
pop
jmp
push
or
push
jnp
or
or
or
and
or
inc
dec
inc
xchg
lret
add
xlat
push
inc
jp
clc
mov
roll
sbb
bound
cld
mov
xor
add
or
fnstenv
xchg
cmp
sbb
push
fbstp
bound
add
push
fimull
push
xor
xor
je
mov
loope
xor
cmpsl
test
les
mov
sub
sub
data16
push
test
out
je
push
and
data16
xor
movsb
shrb
cwtl
xchg
aad
dec
inc
mov
mov
out
or
dec
inc
cmp
jns
and
shll
or
mov
loopne
ret
outsb
imul
inc
pop
lock
xor
loope
cmp
or
out
lahf
insb
mov
stos
mov
mov
dec
dec
cmpb
cli
ja
lea
cld
jge
stos
dec
in
mov
psubsb
inc
cld
lock
es
test
sahf
add
cmpsl
jmp
movl
pop
push
adc
sbb
add
pop
imul
lea
adc
inc
fs
inc
test
jmp
sbb
roll
add
inc
jecxz
loope
add
xor
not
and
or
ret
imul
jmp
sub
push
or
insb
or
dec
cld
dec
cmp
idivb
xchg
inc
pop
test
dec
xchg
cmpsl
add
clc
addl
loope
scas
loope
aas
sbb
pushf
pop
push
mov
mov
lcall
mov
mov
lret
nop
push
xor
repnz
inc
testl
or
es
mov
cmpl
mov
hlt
sar
dec
mov
cs
pop
mov
sbb
adcb
data16
push
dec
pop
dec
add
xor
pop
pop
pop
pop
add
adc
push
jae
int3
adc
iret
lret
and
in
ja
and
mov
sub
ljmp
xor
add
mov
sub
xorl
xorl
lea
mov
mov
insb
push
xor
push
xor
and
test
scas
pop
notb
mov
cld
aaa
xor
insb
ret
inc
inc
cmp
inc
push
xlat
or
ljmp
in
xor
xlat
dec
push
lcall
ja
xchg
adc
ja
pop
add
and
push
push
push
fstpt
aad
adc
sbb
cmc
pop
movsl
ret
movnti
pop
gs
xchg
xchg
or
ret
sbb
dec
jns
inc
daa
xor
sbb
xchg
test
jmp
cld
jmp
nop
push
jmp
and
mov
mov
inc
dec
sbb
mov
fs
sub
add
mov
xor
add
aam
dec
mov
dec
push
push
loop
out
pop
lcall
sbb
por
add
adc
xor
push
insl
cwtl
sub
dec
stos
adc
pusha
pop
xorb
clc
xchg
or
and
dec
inc
fnstcw
inc
xchg
es
sub
jecxz
xchg
or
andb
sbb
inc
add
insb
sbb
xor
mov
push
rorb
imul
sbb
cmp
and
or
add
adc
or
pop
clc
cltd
fsubl
xor
andb
test
jecxz
or
sub
add
push
mov
inc
cmp
or
in
test
test
pop
popa
mov
cmp
into
lock
lods
aas
jae
daa
sub
ret
cltd
add
xchg
loopne
mov
mov
decl
sbb
add
in
cs
or
out
and
mov
sahf
mov
xchg
es
mov
inc
and
or
mov
cli
out
punpcklbw
dec
pop
cld
enter
cmp
or
add
add
sar
andl
cmp
jbe
xchg
mov
adc
sub
pusha
loop
cmp
out
test
mov
mov
cwtl
and
and
or
push
gs
jo
ret
sbb
and
push
sar
or
mov
push
fstpt
dec
scas
stc
jg
into
mov
fimuls
mov
fwait
inc
pop
lock
andb
lock
jnp
shrl
hlt
lret
mov
adc
arpl
pop
jne
push
xor
addb
cmp
sub
mov
add
inc
das
ret
sub
stc
fidivs
mov
push
clc
or
lret
jl
cs
outsb
movsb
push
pop
push
add
mov
mov
jne
mov
outsl
adc
movl
or
mov
fcomps
sbb
lret
xor
sbb
imul
popf
es
xorl
movsb
cmp
jb
mov
cmp
adc
adc
mov
sub
push
push
sub
js
shll
and
icebp
fnstenv
adc
scas
aas
fisubl
dec
pop
setp
sub
sub
out
mov
rcrl
add
cld
adc
adc
add
cs
movsb
cmpl
stos
movsb
add
loopne
movsl
cli
mov
adc
dec
dec
jno
mov
jle
cmpsl
fisttpl
outsb
sbb
mov
leave
push
sbb
loope
sub
movl
cmp
lock
mov
enter
out
ss
inc
mov
andl
jle
or
add
mov
push
lret
test
xor
je
aas
jnp
insl
sbb
pop
xor
jmp
jmp
shl
jle
adc
sbb
insb
adc
xlat
sbb
adc
lea
mov
lds
hlt
scas
and
nop
add
jae
add
sub
and
sub
imul
dec
add
rorb
add
ret
add
dec
inc
mov
or
push
test
xor
add
cmp
add
pop
sahf
inc
inc
jmp
mov
add
inc
jmp
add
adc
cltd
sbb
jno
stos
aam
xorl
lea
divl
xlat
add
lods
hlt
push
data16
sub
subl
inc
inc
lea
bound
scas
pusha
or
push
sbb
mov
sbb
dec
ret
sub
jnp
mov
jb
fsubrp
scas
or
lock
outsb
push
add
dec
push
ret
mov
and
scas
add
imul
sbb
inc
inc
xor
or
pop
aad
cmpl
clc
or
adc
jl
sbb
xchg
notl
push
cld
enter
setle
jmp
jae
mov
add
movsb
adc
or
dec
rcl
mov
fisttpl
push
mov
sub
daa
mov
jae
xor
push
andl
mov
push
mov
into
ss
arpl
sub
rolb
cli
mov
inc
fisttpll
push
nop
out
mov
loop
pop
mov
insb
jbe
add
cli
mov
dec
stos
rorl
dec
insb
push
dec
or
cmpb
or
mov
mov
inc
mov
sub
or
push
cmp
and
pusha
cmpb
fcomps
sarb
mov
and
or
mov
shlb
and
add
test
int3
xchg
test
je
or
je
or
jmp
xor
lret
mov
inc
ficoms
add
and
push
add
sub
mov
mov
loope
pop
or
jge
out
pop
sbbb
sub
lret
xchg
add
dec
cwtl
inc
inc
shr
jmp
jg
clc
pop
in
xchg
faddl
jne
cmp
jae
xor
dec
jbe
push
adc
push
add
aas
sbb
adc
and
ss
cmpb
jne
inc
inc
add
push
or
les
or
pop
cmp
outsb
dec
sub
add
fidivrl
test
inc
push
sub
dec
jg
scas
clc
addr16
or
mov
inc
lret
das
call
addb
push
insb
mov
or
xor
or
addb
add
addl
outsb
loopne
inc
mov
or
hlt
mov
pop
add
je
clc
add
movsl
call
mov
dec
mov
lock
out
sahf
adc
inc
add
push
add
add
xchg
push
sub
lea
xchg
or
mov
pop
jae
xor
lods
pop
icebp
punpckhbw
cmp
outsl
sub
push
filds
into
push
sti
les
jl
outsl
in
mov
ds
cli
add
mov
pop
mov
cmpsl
adc
pop
inc
movq
add
loopne
fwait
outsb
je
ucomiss
call
mov
cmp
jnp
mov
mov
sub
and
mov
or
xlat
sub
and
add
cmp
in
shrb
jecxz
sbb
dec
cltd
lods
das
or
jne
outsb
andb
xchg
mov
inc
les
dec
fcomps
movsb
out
test
loopne
loop
adc
out
add
xchg
push
mov
push
dec
jl
adc
mov
sub
fcoms
sbb
pop
sub
nop
loopne
mov
shlb
or
je
xchg
out
mov
loopne
outsb
inc
mov
pop
lock
inc
imul
daa
mov
push
cmp
xor
inc
fs
xor
dec
nop
mov
fidivrl
insl
jo
jb
mov
mov
mov
mov
xor
and
jle
ret
jbe
jmp
inc
addr16
or
cmpsb
stos
rol
arpl
or
in
incb
or
add
cmp
jecxz
or
icebp
jbe
mov
je
jne
pop
jmp
jnp
and
inc
stos
inc
in
leave
or
hlt
cltd
jmp
sbb
fdiv
inc
nop
xchg
or
loopne
xor
xor
jg
jl
jae
lock
sarb
jmp
sbb
mov
adc
divl
mov
pop
inc
cmp
or
add
arpl
fnstsw
inc
dec
cli
cmp
insl
mul
or
push
faddl
call
imul
pop
add
aaa
je
push
cltd
mov
ret
adc
push
or
fildl
xor
int3
sti
or
mov
mov
jbe
sbb
mov
jmp
lods
sub
add
add
out
cmpb
call
rorb
push
movb
xor
shlb
mov
daa
fisubl
test
jge
and
inc
sub
mov
jmp
mov
and
faddl
or
xchg
popa
xor
mov
gs
repz
pop
adc
and
ljmp
and
rclb
bound
sub
xor
inc
sub
cmp
xchg
xlat
outsl
xchg
cmpb
inc
mov
add
jnp
js
das
mov
dec
mov
push
pusha
add
jmp
mov
or
dec
add
cwtl
mov
shlb
outsb
orb
adcl
or
clc
mov
or
lret
xor
fwait
inc
add
repz
push
push
mov
and
or
dec
add
push
mov
mov
or
or
incl
pop
jmp
push
lods
dec
inc
cs
push
lock
inc
add
jbe,pt
or
push
mov
jns
pusha
leave
and
subps
xor
pop
sti
pushf
es
jg
lret
or
ret
dec
jo
xor
add
sbb
inc
jl
inc
jns
dec
sarb
fisttpl
mov
sbb
or
push
inc
sbb
cld
cmp
dec
cmp
pusha
nop
stos
or
add
in
sbb
sub
or
test
push
insl
loope
ljmp
push
mov
adc
cmc
jl
adc
mov
xor
and
push
in
jmp
xchg
cmc
mov
mov
test
push
test
mov
test
mov
lea
jne
sbb
inc
loope
inc
bound
fs
push
pop
pop
test
push
pushf
adc
or
xchg
orl
adc
push
cmpb
cld
shl
mov
xchg
orb
inc
or
in
push
add
call
sub
rclb
xchg
pusha
jg
cmp
mov
movsl
pop
loop
xchg
fmull
or
sub
shrl
push
fwait
sbb
or
lods
add
movsb
xchg
sbb
add
push
mov
jne
mov
xchg
push
and
push
mov
mov
test
cmp
jne
outsl
inc
add
test
jne
push
pop
leave
rolb
mov
and
mov
aaa
lock
cmp
xchg
mov
mov
mov
pop
and
cmp
push
or
jbe
adc
inc
andl
dec
push
or
or
add
xor
adc
clc
push
dec
sbb
xchg
and
int3
addps
adc
add
or
sub
or
shll
imul
fdivl
add
mov
mov
mov
or
mov
je
idiv
pop
or
cld
jb
cmp
ja
add
cmp
adc
clc
lahf
fadd
cmp
jne
dec
jne
roll
sahf
data16
or
cmpsl
imull
arpl
ret
mov
lahf
and
add
lcall
pop
je
or
nop
out
push
xor
pop
int
movsb
lods
sub
aam
xor
loop
push
adc
lret
and
aad
push
dec
push
adc
add
xlat
dec
rclb
adc
pop
or
dec
cwtl
shrb
out
add
and
add
jnp
fadds
pop
test
or
loope
hlt
or
fistpl
sbb
rolb
mov
ss
loope
popf
mov
pop
cmovno
push
adc
pop
push
add
jns
push
mov
and
lcall
mov
repnz
ljmp
sti
add
ret
hlt
movb
rorb
adcb
mov
fidivrs
loopne
inc
rorb
cmp
add
cmp
jg
push
or
sti
inc
jne
sub
pop
lea
inc
jmp
ss
dec
mov
mov
inc
and
fucomp
dec
or
sub
jmp
inc
bnd
xor
lcall
ja
or
fildll
add
jmp
dec
push
dec
sti
cmpb
fisubl
adc
sbb
mov
mov
xlat
adc
push
shr
aam
jge
mov
push
cwtl
cmp
fdivs
orl
mov
imul
xchg
inc
in
jbe
je
push
arpl
jnp
inc
mov
or
mov
int3
dec
sbb
mov
roll
add
mov
fwait
adc
outsl
jg
fistl
push
mov
sub
fs
add
push
fsubr
out
mov
addr16
or
sbb
xor
test
movsl
shll
dec
xchg
adc
xor
je
stc
push
pop
in
push
shrl
sub
sbb
clc
mov
lea
jno
jnp
push
mov
and
loopne
mov
jne
test
dec
push
mov
sub
jb
add
jbe
sub
cltd
icebp
mov
sub
into
jle
and
aas
add
push
shll
and
pop
scas
ds
and
mov
in
scas
sbb
push
pop
inc
mov
xor
push
inc
fldt
mov
loop
cmp
lea
mov
cmp
pop
jbe
push
gs
pop
shll
inc
ss
fwait
dec
push
push
and
mov
sub
or
aas
es
loopne
push
daa
inc
fs
add
dec
adc
je
andb
addr16
test
sbb
inc
pusha
cmp
out
xchg
mov
xor
dec
loopne
jle
ljmp
or
mov
sub
xchg
or
andl
mov
sub
and
inc
xor
aas
imul
ret
xorl
push
rclb
inc
aas
pop
dec
dec
and
sarl
lret
call
fdivrs
xchg
les
hlt
imul
xor
iret
test
cmp
pop
je
in
lea
cmp
mov
pop
je
subl
cmp
lock
jmp
pop
shlb
add
pushf
push
and
lds
sti
cmp
aas
pop
jne
mov
inc
push
cmpsl
and
cmc
mov
mov
cmp
je
inc
movsb
xor
cmp
inc
mov
shrl
jmp
ret
add
shlb
xchg
add
or
adc
test
mov
push
ret
add
jge
and
sbb
xor
jmp
rcrb
gs
cmp
jmp
ljmp
lcall
push
jmp
leave
cmp
push
test
imul
addb
popa
pop
push
pop
call
or
adc
or
shll
fsubrl
popf
jne
or
add
pop
cmc
sub
mov
adc
arpl
gs
fnsave
ret
inc
pop
ret
push
xchg
shll
jbe
add
and
mov
addb
pop
sbb
xchg
fcomp
lcall
pusha
mov
les
push
push
ret
or
sbb
insb
cmp
add
sbb
inc
sbb
sub
into
out
add
jecxz
or
inc
clc
jp
dec
sub
and
pop
aas
or
xchg
sbb
addr16
cmpsl
stos
adc
mov
insb
push
sbb
cmp
ja
push
xlat
subb
pop
loopne
outsb
adc
push
lahf
add
movsb
or
inc
call
and
aad
test
adc
add
lea
arpl
out
hlt
movsb
pusha
inc
fsubr
add
sarl
roll
lods
neg
mov
mov
int3
sbb
jo
cmp
jbe
insb
shl
jmp
add
shl
jmp
fwait
xor
push
jno
lock
add
lea
mov
sahf
std
je
neg
push
inc
roll
sub
sub
mov
adc
repz
orl
inc
jmp
or
inc
loope
mov
nop
cmp
clc
int3
adc
jl
push
dec
daa
sbb
pop
xrelease
enter
ss
leave
in
push
jne
orb
addb
inc
mov
shrl
inc
mov
push
divb
lea
add
ljmp
das
dec
mov
add
push
prefetchw
dec
or
jmp
and
iret
mov
or
pop
xlat
or
je
pop
out
pop
jg
cmp
inc
decl
js
mov
inc
mov
ret
lods
xchg
inc
dec
cmp
pop
movsl
incl
or
sub
cmp
or
push
inc
clc
push
add
sbb
sbb
stos
std
or
or
subb
popw
out
pop
push
dec
inc
or
dec
or
addb
cmp
loop
mov
out
or
cmp
dec
cmpl
popa
mov
cmp
pop
filds
outsl
testw
jl
add
addr16
fbstp
mov
dec
insb
add
test
adc
shlb
stos
jno
outsb
sbb
adc
orb
iret
mov
scas
loope
popf
push
fimull
adc
push
pop
stos
xor
add
in
xor
out
lods
test
push
in
sub
cltd
and
enter
std
adc
cmp
xchg
and
push
cmp
mov
sbb
test
add
inc
cmpsb
movsl
iret
adc
and
mov
lods
cwtl
adc
stos
lods
pop
lock
mov
mov
les
enter
fldl
dec
sbb
or
addl
es
lea
loop
push
jl
and
test
push
jo
cltd
je
shll
test
cli
and
jae
or
jbe
mov
sbb
xchg
jecxz
adc
pop
dec
push
add
lods
mov
dec
into
xorb
pop
mov
into
inc
mov
ja
push
insl
addr16
orb
mov
sbb
daa
ret
test
or
enter
push
cmpsl
aam
mov
add
sbb
fisubl
xchg
push
xor
mov
mov
out
xlat
pop
sbb
add
push
jns
mov
mov
in
sbb
push
pop
xchg
sub
mov
and
adc
xchg
std
adc
inc
sub
lock
lea
pop
sub
mov
ret
frstor
cmp
mov
int3
add
inc
and
test
adc
or
or
idivl
je
dec
dec
and
fisttps
mov
mov
mov
inc
dec
sbb
aam
ret
fiadds
xchg
stos
jb
xchg
xchg
xor
or
pop
nop
push
fisubrs
movsl
test
add
aam
jge
or
sbb
imul
decl
mov
pop
dec
and
lcall
jle
les
cmp
or
cmp
shlb
or
sub
test
cmp
mov
unpckhps
pop
shrl
mov
sub
pop
sbb
push
add
jb
dec
iret
leave
dec
lods
jle
mov
jae
lret
or
add
push
push
push
mov
cmp
ret
or
jecxz
xchg
idivb
add
cmp
enter
and
inc
sbb
mov
or
jo
cwtl
test
add
and
xchg
xor
add
pop
sub
adc
jb
xchg
xor
bound
sub
dec
and
cmp
fs
cltd
popf
rorb
mov
sbb
call
mov
es
les
repnz
mov
inc
cs
inc
push
mov
add
jne
dec
or
and
or
ret
jl
mov
or
push
in
daa
shlb
dec
add
pop
fisubl
dec
and
add
sub
cmp
insb
fidivs
in
push
xor
adc
add
jmp
sbb
or
push
jbe
or
push
sub
es
out
ret
ret
test
adc
inc
and
push
mov
outsl
push
pop
mov
push
int3
pop
or
daa
dec
jns
sub
sbb
push
cli
clc
movsb
mov
sub
adc
pushl
shll
loopne
adc
push
fdecstp
inc
fldt
dec
push
mov
cld
and
shr
ret
and
movsb
jne
adc
je
mov
xchg
nop
fs
mov
inc
cmp
push
aas
push
inc
push
jmp
and
jecxz
add
dec
mov
push
in
pop
xchg
xchg
hlt
sbb
je
pop
sarb
add
fwait
cmp
jge
lret
jmp
fsubl
enter
ret
adc
jg
aaa
movsb
mov
lret
or
adc
or
ja
push
imul
push
movsl
loope
xor
sbbb
lods
rcrb
int
add
xor
push
mov
pushf
sbb
push
stos
or
pop
jmp
or
inc
rcr
imul
and
push
lods
or
pop
add
outsb
xchg
cmp
lcall
pop
cmp
jg
popa
aaa
adc
add
loop
jmp
sbb
xchg
fiadds
sbb
jne
inc
xchg
roll
enter
das
or
jle
sub
jmp
adc
test
and
aas
inc
in
inc
dec
and
sub
xchg
sahf
or
insb
xchg
inc
sbb
adc
mov
mov
mov
push
lret
jns
mov
es
or
inc
xchg
mov
mov
ja
add
rolb
jae
xchg
push
jbe
mov
je
ret
xchg
xor
sbb
or
mov
bound
mov
pop
mov
popa
outsl
rol
mov
aas
out
jge
fmuls
sbb
ret
cmp
dec
mov
mov
or
push
pushl
or
incb
mov
les
lea
aas
movb
cmpb
adc
scas
add
pushl
mov
push
cmp
je
in
adc
clc
mov
dec
cwtl
adc
pop
out
or
push
and
pop
insl
fsubrs
push
mov
or
out
in
test
scas
or
mov
ret
add
add
add
mov
scas
clc
mov
in
popl
popa
mov
cmp
data16
into
sbb
aas
cmp
je
push
mov
ret
sub
inc
inc
cmpb
or
add
pop
movb
inc
mov
jae
push
sub
jbe
adc
cmpsl
test
or
js
xchg
lods
adc
inc
cmp
cmp
mull
in
pop
cmp
mov
cmp
add
outsb
in
adc
sub
jmp
lcall
iret
pop
lock
loopne
xor
jle
jb
loop
mov
clc
out
test
enter
sub
ljmp
lods
filds
nop
in
dec
xor
lret
or
xor
rcll
mov
lret
add
push
and
or
fnsave
push
xchg
mov
add
jb
scas
add
pop
in
sub
outsb
cwtl
jns
inc
loope
push
sub
fldl
mov
stc
or
adc
inc
mov
sbb
push
sub
push
das
add
jl
popw
add
lcall
sub
xor
shll
cmp
push
jl
ss
push
es
sub
daa
sbb
pop
jns
bound
push
mov
les
pop
inc
sti
push
lea
dec
or
std
leave
mov
fcmovb
shl
mov
pop
pushf
sub
mov
or
cmp
inc
push
fwait
add
push
inc
stos
or
stos
sub
nop
sbb
jmp
dec
lock
sbb
and
sbb
adc
or
add
lock
push
rorb
adc
lret
push
cmp
mov
jne
ljmp
add
mov
lea
scas
cmp
rorb
jae
enter
xchg
imul
pop
int
push
shr
push
pop
and
push
pop
popw
sub
push
cmp
fisubrs
je
jno
add
xchg
ljmp
sub
nop
addl
and
inc
lds
dec
push
je
jp
add
jnp
aam
sub
inc
xchg
lods
sbb
inc
push
rcrl
inc
xor
push
pop
shrl
into
jb
or
mulb
mov
lcall
push
or
and
xchg
cmp
sbb
imul
data16
sti
inc
pop
mov
sub
das
aaa
add
push
jg
xchg
jae
icebp
movsb
adc
test
add
xchg
sbb
aam
sbb
jle
and
push
mov
test
xchg
popf
mov
inc
push
fdivl
mov
in
sub
or
push
je
outsl
mov
and
bt
sbb
dec
jb
fsubl
ja
sbb
and
dec
movsb
xor
test
xor
clc
icebp
cmc
xor
mov
xchg
fiadds
and
mov
sub
mov
sbb
xor
pop
test
lret
push
call
push
mov
xor
ret
sub
pop
bound
or
cmp
rcll
add
add
cmp
into
or
lret
hlt
push
lock
mov
add
pop
ja
out
scas
push
adc
not
jne
cli
mov
or
jmp
or
jmp
and
pop
cmp
jae
test
int
mov
int3
cwtl
insb
aaa
add
pop
pop
test
pop
mov
and
adcb
sub
das
sbb
xor
add
add
test
sbb
lret
mov
push
xchg
rcrb
je
add
xchg
ret
pop
clc
testb
or
sbb
lea
in
xor
dec
or
xor
ja
add
or
pop
sahf
add
loope
or
adc
ret
outsl
or
inc
sbb
mov
incb
ret
not
test
outsb
mov
jge
cwtl
mov
push
and
and
xchg
out
rclb
cltd
mov
mov
sub
pop
push
mov
dec
ds
cmp
mov
jne
jo
fidivs
inc
jge
ret
cmp
xchg
mov
rcl
push
mov
int3
js
lock
pop
cltd
addr16
jae
sbb
xchg
sar
ret
and
sub
pop
or
mov
loop
cmp
xchg
outsb
pop
jmp
adc
add
xlat
push
pop
mov
push
mov
pop
push
dec
and
mov
mov
cld
enter
sub
inc
pop
insb
or
adc
lcall
or
inc
and
jmp
add
dec
or
xchg
stc
dec
mov
push
push
hlt
pop
mov
adc
test
imul
push
or
dec
jo
mov
stos
enter
and
outsl
mov
call
lret
add
add
push
add
add
jne
xchg
hlt
sbb
sbb
divb
jb
repnz
pop
inc
xor
bound
aam
push
jns
popf
cmc
icebp
and
mov
pop
subb
and
dec
push
or
add
add
dec
sub
std
sub
and
loopne
xchg
add
mulb
ljmp
test
mov
push
pop
push
cmp
shrb
lock
and
add
mov
std
push
inc
pop
enter
dec
stos
xor
addr16
test
sub
mov
cmp
push
xchg
jle
mov
mov
or
inc
jle
mov
mov
cmp
jl
movsl
pusha
or
pusha
insb
inc
fs
sub
aaa
inc
cmc
jbe
xlat
push
jb
and
add
inc
fadds
adc
jg
mov
mov
mov
mov
or
incl
xor
dec
fsubrs
clc
mov
fmull
hlt
jne
and
pop
xlat
push
aaa
mov
sub
dec
outsl
jmp
insl
gs
bound
adc
dec
loopne
ja
pop
ret
enter
subl
add
push
push
sbb
push
mov
jle
xchg
fisttpl
je
or
inc
xor
mov
jne
insb
ss
jl
cmpb
jl
inc
pop
test
xor
cmc
inc
les
out
xor
incl
pusha
inc
xor
xor
push
imul
pop
cmpsb
push
xchg
mov
push
hlt
sub
push
je
adc
jnp
ljmp
mov
adc
out
mov
mov
lods
add
push
and
xor
fs
out
xor
dec
lret
mov
add
dec
rcl
iret
push
sahf
fnstenv
xchg
pop
xor
je
and
or
jne
pop
jmp
sub
or
jecxz
dec
cmpsl
mov
jbe
inc
or
data16
jmp
dec
add
ds
ss
adc
mov
inc
or
or
mov
and
push
xchg
add
scas
pop
or
adc
xchg
lods
pop
scas
push
jmp
adc
iret
adc
pop
scas
test
add
inc
pop
mov
addb
xchg
cli
push
imul
add
dec
pusha
add
push
fimull
outsb
push
jmp
or
cmp
xchg
jmp
push
outsb
ss
or
pop
mov
xchg
push
out
mov
dec
loop
inc
mov
or
je
sbb
push
xor
test
lds
movsl
inc
sbb
mov
xchg
ss
jecxz
pop
rolb
incb
lea
push
dec
add
xor
pusha
and
js
adc
scas
fisubs
or
mov
popf
xchg
ss
nop
adc
mov
lods
pop
pop
es
sbb
add
pop
jne
push
mov
pusha
shl
pop
orb
cmp
mov
mov
cld
movl
out
adc
mov
mov
sbb
xchg
fsubl
imul
jecxz
dec
mov
popf
inc
sub
outsl
mov
inc
bound
movsb
xor
shlb
pop
fs
sub
adc
jb
dec
loope
popa
scas
and
jmp
mov
add
cmp
cmp
pop
pop
jp
sahf
push
add
rcl
adc
cmp
jb
cmp
jbe
inc
leave
xlat
mov
xor
insb
cs
popf
xchg
sbb
jbe
add
cld
mov
pop
push
push
push
or
xorb
mov
push
ret
mov
add
mov
mov
sbb
inc
pop
out
mov
mov
xor
jg
loop
movsl
xchg
mov
repz
popa
mov
daa
adc
pop
aad
fsubs
mov
mov
loopne
sub
insl
xchg
xchg
sub
push
mov
fs
pop
aaa
and
scas
sbbb
aaa
movsb
nop
lock
das
mov
das
push
aam
adc
imul
stc
add
mov
pop
pop
sbb
mov
fcomp
add
rcrb
call
lock
loopne
sub
mov
mov
sbbb
es
jae
or
pusha
ss
aad
out
pop
sub
sbb
ja
data16
inc
jmp
inc
mov
jl
or
jge
pop
fdivrs
hlt
sarb
mov
push
sub
inc
daa
jecxz
push
movsl
aam
cld
add
mov
adc
cmpsl
add
call
sahf
pushf
inc
ret
push
or
jle
xchg
out
out
lret
mov
or
test
xor
cwtl
xchg
lock
imul
jnp
jg
jle
push
sti
dec
push
cmovnp
test
or
sbb
pop
push
dec
sbb
mov
ret
les
popf
cli
cmp
inc
or
inc
xor
jmp
dec
fsubs
loop
movb
and
bt
clc
push
jmp
adc
sbb
ret
and
adc
or
lea
dec
repz
or
gs
mov
lea
cmpsb
or
loope
daa
mov
lcall
icebp
push
lea
pop
hlt
pop
inc
dec
popa
jns
je
nop
sbb
loopne
add
add
movl
adc
inc
push
jmp
popa
push
or
pop
dec
adc
jmp
pop
scas
fisttpll
je
mov
mov
les
cmpl
jle
adc
pop
pop
dec
pop
add
test
out
xchg
and
xor
add
je
rolb
sti
sbbl
subb
xchg
outsl
rorb
sub
pop
repnz
js
std
mov
mov
sub
std
sub
je
add
add
mov
mov
adc
popa
mov
xchg
cmp
xor
cmp
cmp
mov
sub
pop
sub
add
dec
loopne
push
sbb
add
inc
sbb
cmpl
imul
jle
sub
movsl
pusha
mov
add
xlat
adc
rorb
scas
mov
dec
and
push
rol
imul
nop
ret
test
ret
add
xchg
jmp
adc
mov
cvtps2pi
rcl
xor
mov
push
roll
xlat
push
mov
mov
adc
mov
je
repz
add
push
pop
test
push
iret
dec
repz
mov
mov
shlb
lods
jecxz
jo
adc
mov
mov
inc
stc
cltd
lods
dec
push
inc
xor
or
dec
push
gs
mov
jbe
push
xchg
pop
sub
mov
xor
add
and
imul
scas
mov
mov
pop
adc
or
inc
sub
mov
add
jo
pushf
push
aam
lock
inc
cmp
sbbb
jp
xchg
insb
mov
and
gs
popf
inc
dec
pop
mov
add
insl
inc
and
push
inc
mov
jmp
sbb
loope
fs
int
add
mov
sbb
ret
les
sbb
pop
loop
lods
or
pusha
cmp
sbb
mov
push
lods
cwtl
arpl
jmp
loop
aam
in
xchg
push
cmp
push
xchg
leave
loope
les
lret
je
je
pusha
in
sbb
shll
jo
lds
jae
or
jne
push
jb
pop
jne
addr16
xchg
jge
add
push
cwtl
sbb
inc
jmp
jg
and
test
pop
lea
adc
push
mull
or
push
cmp
jl
test
jne
imul
add
add
push
or
andb
jo
mov
insl
adc
push
lea
and
jbe
mov
nop
incl
and
mov
push
or
cmc
inc
daa
add
add
pushf
fadds
mov
cli
cmp
sub
add
sub
jbe
sbb
adc
or
inc
sbb
test
add
push
xlat
jnp
and
pop
jmp
fdivs
cmp
popa
lods
xor
shlb
push
push
or
lods
push
and
je
mov
mov
mov
js
push
inc
das
call
push
lea
and
push
enter
and
dec
xchg
test
dec
push
jne
sbb
mov
addr16
cs
or
sbb
add
lock
cmp
push
push
and
enter
movsl
cmp
movsb
iret
jl
lcall
jmp
mov
jmp
pop
fucomip
adc
pushf
push
ss
testb
push
and
mov
xchg
dec
pop
push
scas
jb
test
and
cmp
hlt
or
mov
mov
adc
lret
cltd
jbe
cmp
js
into
mov
mov
cmp
push
push
mov
xchg
aaa
es
push
cmpsl
xchg
or
xor
xor
add
dec
or
xor
or
mov
adc
popf
into
add
aam
aas
andb
or
fcoml
ljmp
loope
pop
mov
mov
and
jle
cmp
or
mov
or
out
shr
or
push
ds
aam
jne
pop
es
mov
cmp
loopne
dec
inc
je
adc
rorb
push
pop
adc
aas
test
aaa
push
or
repnz
push
fstps
jmp
insb
inc
insl
movsl
inc
int3
fcmovbe
and
test
stos
jne
rolb
sub
cmp
enter
xor
pop
inc
out
adc
lret
mov
add
add
sarl
adc
pop
sub
mov
jmpw
xorb
inc
or
sbb
push
and
push
iret
repz
inc
in
push
in
out
jmp
ljmp
faddl
insl
out
aas
xlat
shlb
lcall
jmp
or
dec
inc
iret
fcompl
mov
add
push
and
xor
shrl
add
lret
inc
sub
mov
cmp
or
test
cmp
cmc
mov
jmp
jl
cmpl
call
xor
movsb
pusha
iret
fbld
and
cmp
loopne
imul
push
and
push
sub
movzwl
inc
jge
nop
sahf
sbb
adc
dec
loop
call
call
sahf
cli
imul
mov
lea
or
mov
je
dec
inc
xchg
neg
cmp
ja
mov
jge
aas
jb
dec
xchg
in
xor
in
in
testb
mov
orb
push
out
xchg
xor
in
enter
call
je
pop
ljmp
fs
cli
fwait
xor
cwtl
push
and
adc
adc
jne
sti
dec
cmpsb
outsb
int3
pop
neg
imul
push
gs
xor
dec
add
inc
data16
jne
pushf
movsl
adc
sti
mov
add
sti
mov
push
and
or
push
mov
mov
adc
ds
bound
push
push
fists
outsb
dec
jmp
movsb
inc
incw
incb
sub
sub
add
ret
add
add
jo
xchg
jge
add
cmp
pop
hlt
flds
add
andb
xor
shrl
cmp
fstpl
fistl
in
xor
push
movb
mov
cmovno
mov
and
adc
add
repnz
das
in
adc
add
lods
cli
std
cs
repnz
aas
ja
cmp
inc
and
xchg
add
jmp
push
push
dec
test
cmp
cmp
int3
out
ljmp
hlt
push
cmp
adc
add
pop
jge
dec
insl
mov
cmpsb
push
sbb
cld
push
or
addr16
sub
jmp
dec
jno
rcrb
setae
add
inc
inc
push
inc
inc
xchg
push
adc
sar
xor
push
pusha
push
mov
add
enter
imul
adc
pushf
cwtl
fdiv
enter
rolb
and
push
popf
and
lods
fbstp
sti
cmp
or
sub
push
push
cmp
insb
add
fdivrs
add
push
xchg
add
repz
dec
ljmp
ss
faddl
dec
inc
mov
mov
popf
xor
jb
movsb
inc
fiadds
adc
push
dec
je
sbb
push
or
adc
test
xor
jmp
loop
sub
push
jae
add
cmp
sbb
sub
or
push
sbb
jmp
or
ret
xor
or
push
insb
add
insl
leave
int3
jle
sub
dec
movsb
xchg
pusha
dec
xor
cmpsb
jmp
lcall
push
mov
or
add
jl
adc
inc
inc
xchg
push
sbb
pop
dec
add
jge
dec
bound
lea
cmp
rorb
and
dec
hlt
and
push
inc
inc
add
mov
jl
mov
insb
ret
and
mov
test
aam
dec
cltd
mov
sbbb
or
aaa
fcoms
mov
pop
xor
add
not
and
inc
into
cmp
mov
ljmp
rcr
add
clc
or
outsb
cli
mov
pop
push
push
xchg
dec
mov
inc
adc
push
inc
sbb
cmc
pop
add
push
divb
ret
mov
push
pop
orl
pusha
dec
dec
jp
xchg
gs
int3
fucomip
cmp
sub
sub
add
mov
or
xorl
mov
push
mov
jmp
mov
out
mov
xor
and
pop
orb
popa
loope
dec
adc
in
push
test
and
xor
data16
mov
movsl
pop
xchg
lds
push
movsb
mov
add
lret
movsl
mov
ret
aaa
fs
insb
inc
hlt
xchg
add
orb
xchg
cmp
pop
mov
cmp
add
mov
or
inc
popf
scas
or
xor
pop
push
sarb
movsb
mov
mov
loopne
mov
leave
aad
pop
flds
add
inc
mov
sbb
adc
push
lods
dec
data16
dec
mov
dec
fistps
sbb
shlb
loop
jmp
push
jecxz
inc
out
push
xlat
sahf
xor
cmpsb
adc
mov
cltd
mov
mov
sbb
clc
pop
xchg
aaa
cmp
push
jl
xchg
sbbl
mov
inc
fwait
rcrl
push
jp
mov
add
pop
xchg
test
in
jg
sbb
pop
mov
xchg
aam
add
add
push
clc
jl
push
fucom
mov
lods
ret
cmp
rorb
nop
cmp
add
sub
push
push
xor
xchg
and
adc
xlat
cmp
loope
cmpsb
push
adcb
jmp
sbb
adc
testl
aam
inc
idivl
pop
lcall
test
and
lods
sbb
xor
xor
jg
xor
roll
xchg
inc
js
push
subl
dec
mov
clc
lret
and
ficoms
add
test
add
ficoml
xorl
and
push
out
rcrb
pop
dec
loopne
ljmp
add
pop
pushf
add
mov
cld
jmp
cmp
je
mov
xor
lcall
or
xorb
or
sub
xor
xor
cmp
sbb
pop
inc
loope
lcall
and
add
or
jecxz
cld
push
fcomps
rclb
push
call
xor
and
bound
pop
jmp
fsub
int
adcb
call
mov
sarb
cwtl
sbb
sbb
in
add
mov
add
imul
mov
cmp
mov
ficompl
pop
sub
adc
aas
lea
setbe
sub
mov
jns
clc
imul
inc
mov
pop
sbb
shr
stc
nop
or
xor
repz
je
pusha
clc
je
or
or
test
lds
arpl
jo
sub
and
add
mov
mov
pop
pop
dec
les
outsb
ret
xor
mov
cmp
push
cmp
pop
out
and
jle
or
fistps
or
aaa
pop
in
ret
push
fldl
push
mov
cmpl
xchg
icebp
fmuls
sahf
sbb
dec
out
mov
ret
dec
push
stos
mov
sub
add
mov
test
bound
jmp
outsl
and
sbb
jl
lret
in
pop
inc
adc
add
out
jmp
aas
loope
pop
imul
inc
and
xchg
or
xchg
shlb
push
shlb
or
push
ret
jnp
lea
add
jne
mov
hlt
shl
mov
inc
inc
adc
push
and
movsb
xchg
push
mov
xchg
push
dec
sub
add
mov
es
inc
imul
outsb
mov
jae
pushf
cmpsl
mov
pop
or
pop
out
xor
fadd
pop
xor
lea
or
cmpsb
jne
jmp
adc
dec
sahf
lock
pusha
dec
mov
mov
pop
leave
push
lret
shrl
lods
adcl
dec
push
repz
mov
adc
mov
test
lock
dec
popa
jmp
add
cmc
add
roll
cmp
cmpsl
or
pop
subb
or
sahf
hlt
shll
dec
lret
sbb
adc
lea
adc
xor
insl
cmp
pop
xchg
mov
mov
das
and
mov
mov
and
jp
xor
ret
mov
stos
dec
imul
jae,pt
es
addb
sbb
loop
mov
shrb
test
or
adc
push
add
pop
mov
fisubs
sbb
inc
sub
pushf
xchg
push
jbe
addps
js
dec
lcall
js
subb
rolb
test
jmp
sbb
jp
in
addr16
insl
adc
push
jns
xchg
enter
pusha
push
add
fcoms
xchg
fdivl
push
jnp
cmpl
jne
lea
jmp
or
push
test
pop
xor
inc
aaa
lret
rcrl
fdivr
push
dec
testb
add
loope
pop
movsl
jno
and
je
add
adc
push
add
and
insl
xor
inc
jb
mov
sbb
das
dec
xchg
mov
cmp
addb
insb
cmp
sbb
dec
gs
or
mov
dec
cmpsl
push
clc
call
not
iret
mov
lea
xor
jo
push
fnsave
xchg
lods
ja
mov
jge
insl
push
mov
std
stc
imul
inc
gs
cmp
xchg
enter
lcall
pop
push
pop
sarb
ret
ret
inc
or
roll
mov
xor
fwait
xor
or
in
aas
cmp
je
cmp
jb
cmp
cmpsb
pop
cmp
cmp
xchg
xchg
lret
imul
push
xchg
imul
adc
mov
inc
cmc
dec
sbb
push
and
in
and
pop
divb
jmp
aam
pop
xor
add
movl
cmp
add
pop
mov
add
and
jae
and
scas
mov
dec
xchg
xor
out
or
je
push
or
push
pop
popa
mov
pop
outsl
pop
cmp
popa
loop
pop
movl
lahf
scas
push
insb
or
inc
mov
aaa
push
lock
dec
jo
push
sub
lcall
dec
or
mov
or
je
shlb
jmp
adc
jmp
les
lock
dec
add
cmpsb
mov
xor
pop
int
mov
pop
cmp
sub
xchg
dec
cwtl
test
or
sub
inc
add
xchg
popf
mov
sub
shl
or
scas
rcrb
cmp
add
mov
push
jmp
push
or
or
push
sbb
or
jmp
jo
cwtl
xchg
mov
les
sar
lahf
inc
das
loope
test
aas
mov
sar
adc
cmp
adc
xor
test
es
xchg
or
or
shrl
inc
addr16
mov
cwtl
movsb
jl
pushf
gs
dec
mov
loopne
in
xor
pushf
jno
push
shr
or
inc
lock
mov
or
mov
repnz
lcall
sbb
popf
push
sub
push
sbb
fisttps
mov
and
adc
clc
mov
std
push
adc
mov
pop
fmul
dec
movsb
test
movsb
mov
mov
loopne
pop
cwtl
adc
or
fiadds
cmp
push
rclb
ds
push
add
adc
orb
xchg
hlt
and
mov
dec
icebp
jne
sahf
mov
mov
ss
fisubl
movsb
and
ret
pusha
ret
xchg
popf
movsl
dec
repz
andl
nop
mov
adc
roll
sbb
adc
js
fsubrs
stos
mov
lret
mov
cld
xor
mov
pop
sbb
sub
and
jo
push
fcoml
rorl
or
jecxz
cmp
rcrb
adc
add
push
sarl
addr16
lea
lcall
push
jno
sub
or
incl
nop
aam
adc
mov
scas
push
addl
xchg
or
jmp
dec
mov
mov
divb
or
mov
mov
test
jmp
pop
scas
sub
push
orl
jmp
cmp
pop
pop
pusha
imul
adc
repz
mov
lahf
aaa
push
add
leave
loopne
fstl
add
movsl
pop
fstpl
fldenv
ds
mov
push
loope
sbb
pop
repz
cld
loopne
xor
jne
dec
shll
fildl
ret
lock
popa
pop
mov
fsub
loope
dec
and
outsl
addr16
adc
shrb
push
sub
mov
mov
sub
sbb
dec
or
jge
or
dec
jmp
mov
push
stos
and
in
fmuls
arpl
test
lock
aas
inc
into
inc
mov
ja
mov
lods
enter
cmp
cmpsb
movsl
pop
clc
add
add
int
fdivrp
rorb
xorl
mov
cwtl
add
adc
hlt
pop
push
nop
xchg
lock
clc
in
jb
leave
or
or
add
loop
mov
and
xor
data16
and
mov
pop
and
xor
or
add
sub
hlt
push
xchg
mov
scas
sub
adc
push
ds
and
fs
nop
or
das
cmp
jle
jbe
sub
mov
in
and
lret
enter
mov
xor
add
rcll
push
inc
xchg
mov
in
add
fistl
sbb
mov
mov
dec
mov
sbb
jle
push
push
cli
mov
adc
insl
cmc
iret
sub
mov
pop
in
mov
mov
imul
push
imul
or
inc
out
out
inc
push
sub
in
popa
sub
imul
cli
jecxz
pop
push
lods
in
stos
and
rcl
push
add
or
add
outsl
repz
rolb
lock
loopne
or
std
lods
stc
pusha
or
cli
xchg
sub
jbe
pop
shlb
mov
ljmp
pushf
aas
out
gs
test
adc
jae
or
or
or
enter
ret
clc
push
pop
xor
cmp
mov
dec
inc
orb
push
xor
add
adc
pop
ret
mov
mov
ds
xor
js
fwait
add
insl
gs
jmp
or
mov
mov
mov
adc
lea
pop
outsb
xor
cmp
clc
push
add
cli
mov
out
mov
out
movsl
cmp
das
push
sbb
push
ret
mov
or
push
sbb
fisubrl
push
sub
shrb
or
push
cmpsl
and
loopne
add
test
es
pushf
push
pop
cld
imul
and
dec
pop
das
lods
movsl
push
shl
sub
lahf
clc
sub
pop
lea
rep
push
hlt
jne
or
negb
bnd
adc
je
add
cmp
mov
cld
cs
sub
push
mov
mov
aaa
add
cmp
loop
popa
add
dec
aam
lret
pusha
push
pop
jmp
jecxz
add
xor
add
xor
test
and
in
sbb
push
or
std
xchg
add
push
ja
ret
pop
shl
clc
mov
jae
test
rclb
repz
inc
cmp
cld
movsl
pop
jnp
addr16
pop
or
fstpt
push
mov
mov
jl
in
jmp
jmp
imul
push
sbb
rorb
push
xchg
clc
outsl
clc
rcrb
lcall
adc
rolb
cmp
inc
sbbl
fsubl
xchg
push
and
out
adc
ret
loopne
sbb
orl
dec
scas
jmp
scas
fs
hlt
inc
repz
or
out
xor
mov
pop
mov
movsl
scas
xchg
mov
sub
mov
outsb
pop
mov
inc
adc
je
test
fstps
mov
mov
cmp
shlb
xorl
dec
subb
pop
adc
ret
aam
or
add
mov
cmp
xchg
enter
mov
jmp
iret
and
sbb
or
pusha
or
hlt
adc
dec
outsb
stos
prefetcht0
pop
sub
movsl
xchg
call
pop
nop
jae
jmp
nop
and
xor
jmp
arpl
cs
xlat
sbb
add
add
ror
sbb
sub
inc
popa
js
xor
ret
out
pop
mov
cwtl
and
pop
sbb
rcrb
sbb
add
pusha
pop
fistl
cwtl
and
push
adc
push
inc
cmpsb
mov
insb
xchg
jg
shrl
test
in
imul
cld
add
cmpsl
pop
inc
and
or
ds
and
or
mov
mov
push
add
mov
or
in
add
push
xor
push
cld
jl
mov
out
jnp
jo
fdivrs
jb
lret
push
testb
addl
xor
jmp
jecxz
mov
push
mov
icebp
dec
lock
in
rcl
and
mov
jmp
inc
insl
addr16
adc
and
mov
adc
pop
pop
or
orb
sub
subl
adc
pop
push
and
lds
jno
loop
push
xchg
dec
rol
push
pop
outsl
lds
insl
push
insl
test
or
outsl
mov
jno
push
push
jmp
jle
sub
push
and
dec
test
mov
and
xchg
lock
andl
sbb
mov
jge
ljmp
fcompl
enter
or
add
ja
inc
imul
test
fsubl
arpl
push
fwait
stos
pop
sbb
or
ret
push
jo
in
pop
addb
sub
sub
cmp
mov
punpcklbw
test
sub
add
cli
push
scas
cli
cwtl
adc
adcb
enter
inc
or
sbb
cwtl
sub
rol
and
aad
jmp
push
dec
or
lret
js
add
push
or
cmc
adc
inc
or
insb
push
jnp
adc
cmpb
rorb
add
lahf
push
jmp
mov
jne
dec
or
and
adc
inc
mov
mov
dec
add
cmp
stos
push
inc
ret
add
sbb
out
sbb
pop
andb
xchg
scas
sub
pop
inc
mov
xor
sbb
mov
in
sbbl
inc
pop
pop
insl
inc
jge
add
xchg
lock
dec
enter
clc
stos
push
inc
or
pop
xchg
lea
pop
loopne
adc
sub
xchg
dec
inc
jg
xlat
shl
add
sbb
sbb
add
add
push
pushf
shl
jg
shl
mov
in
mov
sbb
lea
push
adc
inc
mov
jns
cmp
repnz
xor
add
add
repz
mov
push
sbb
or
sbb
test
mov
and
imul
add
out
add
push
push
mov
dec
push
icebp
pop
enter
aas
inc
js
xor
sub
into
arpl
jge
adc
je
mov
pop
unpcklps
or
xchg
ficompl
daa
cmc
aad
adc
add
enter
lahf
stos
gs
push
inc
clc
inc
dec
adc
push
orb
dec
in
inc
sbb
sbb
and
jl
inc
jo
test
pop
test
pop
sub
sbb
adc
icebp
daa
inc
sbb
incl
cltd
mov
movsl
xchg
addr16
shlb
inc
ss
ja
test
jnp
cmp
jmp
cmp
roll
sub
jo
rolb
inc
xchg
bound
push
pop
sti
lods
popa
mov
ja
adc
cmpb
dec
mov
push
add
mov
and
jne
jbe
adc
es
pop
jo
fnstenv
insl
mov
lret
add
test
add
icebp
jb
inc
and
lret
add
inc
sbb
stos
push
inc
fsubs
sahf
or
cs
sbb
adc
push
sub
bound
clc
into
je
stos
add
movsb
sub
movsl
push
movsb
movl
mov
pop
movsl
mov
daa
add
cs
pop
shrb
sub
pop
leave
or
enter
cmpb
xchg
pop
sub
into
push
mov
pop
test
mov
fists
pop
inc
clc
push
divl
pusha
dec
xchg
cmp
jnp
or
xchg
lods
roll
jmp
add
fs
lods
inc
sbb
sub
add
jae
mov
hlt
cmp
lret
sbb
pop
mov
shl
push
rcrl
incb
imul
xchg
das
pop
movl
mov
repz
divb
or
inc
adc
add
test
mov
cltd
rolb
hlt
add
clc
xchg
sbb
js
push
out
xor
xor
stos
iret
sub
and
or
xor
adc
test
cmp
rolb
mov
ds
sub
ds
repz
sub
push
dec
rclb
movsl
sub
pop
inc
inc
inc
inc
dec
rcrl
cmp
xchg
mov
mov
in
add
lea
movl
je
inc
or
out
pop
xorl
pusha
in
int3
shrb
or
sbb
sar
adc
inc
xor
js
dec
cmp
cmp
dec
lea
mov
aas
jmp
inc
cmp
pop
iret
and
inc
insl
pop
cmpsb
or
xchg
sbb
push
or
xorb
jns
sar
fsubrs
add
jae
lock
xchg
add
insb
mov
jo
pop
mov
push
adc
or
aaa
rorb
adc
pop
push
push
xchg
shlb
pop
and
mov
push
add
out
add
adc
xor
insb
stos
push
nop
xor
sbb
adc
jmp
inc
cli
shlb
leave
jae
stc
mov
lea
dec
mov
dec
mov
rolb
push
leave
dec
aas
enter
dec
jnp
inc
pop
ja
dec
or
pushl
cmp
xchg
push
push
mov
dec
jmp
pop
aaa
ds
mov
xor
sub
loopne
inc
aas
sbb
xor
int3
jo
jb
or
sub
sbb
scas
adc
push
jmp
jne
dec
sub
negb
sbb
add
push
loopne
dec
pop
adc
adc
dec
jnp
sbb
das
cmp
or
inc
les
mov
jnp
push
mov
push
sub
jmp
push
test
cmp
lret
mov
add
enter
jo
xor
push
test
xchg
pop
dec
cmc
aam
rol
int
jmp
push
jp
add
mov
inc
sbb
adc
sbb
cli
loopne
pop
inc
jmp
xchg
jbe
cmpsb
repnz
jo
add
mov
push
or
push
sbb
andb
daa
add
cmpsb
push
xchg
sbb
inc
je
pop
xchg
into
ret
cmp
mov
jnp
bnd
iret
fdivrl
add
adc
int3
mov
gs
cmpsb
xorl
and
dec
jmp
pop
in
mov
cmp
push
push
cmp
mov
cmc
dec
mov
lds
std
mov
ret
call
push
push
add
ret
gs
push
push
ret
cltd
sti
or
movsb
imul
pop
aaa
xlat
in
cmp
sbb
add
inc
lock
ret
sti
jmp
xor
adc
mov
add
stc
les
or
cmp
sub
mov
mov
adc
and
or
add
sub
cld
insw
loope
hlt
pushf
or
inc
or
jmp
push
mov
adc
dec
cmp
push
push
mov
mov
mov
loope
xchg
lahf
mov
inc
cmp
push
xchg
add
lea
cwtl
xchg
int
les
aad
jmp
xchg
and
or
inc
push
push
scas
jns
push
rcll
push
aaa
xchg
jne
and
jecxz
clc
imul
add
insb
imul
aaa
ret
mov
mov
add
push
jnp
cltd
rolb
rclb
push
test
inc
nop
jno
popa
jno
cmp
lock
pop
inc
and
mov
icebp
push
push
sbb
sbb
shlb
jp
arpl
ret
push
out
cmc
lret
dec
add
dec
rorb
pop
jl
cld
loopne
ljmp
jl
leave
inc
and
movsl
pop
sub
pushf
cwtl
cmp
lcall
dec
mov
fdecstp
push
hlt
push
out
and
jb
or
push
add
mov
iret
jne
mov
push
test
dec
push
lea
jg
data16
cmp
push
hlt
push
cld
jg
enter
adc
inc
adc
inc
dec
lock
fdivr
shl
or
and
lods
lret
or
or
sub
or
dec
push
out
add
dec
xor
sub
movsb
popa
mov
in
push
or
imul
push
and
inc
sbb
and
xor
xor
shr
push
mov
or
lret
mov
movb
cwtl
test
mov
inc
adc
lock
xchg
clc
sbb
push
or
test
cmp
shlb
roll
sbb
js
and
rclb
push
sahf
xor
push
pop
cs
aaa
xchg
add
scas
pusha
cmpsb
and
jb
pop
sbb
push
sub
adc
push
add
jmp
jl
fidivrl
lea
cli
adc
mov
lea
adc
lods
cwtl
cld
lea
adc
addr16
inc
cmp
and
insb
jmp
cmp
xor
test
adcl
sbb
daa
and
es
inc
mov
inc
jbe
pop
dec
jno
aaa
or
mov
mov
pop
cmp
aas
call
adc
add
mov
add
repz
add
cs
faddl
mov
cmp
mov
or
lods
sub
and
cmpsl
lods
xorl
clc
lock
mov
add
add
sbb
fwait
movsl
pusha
mov
jae
or
jmp
or
inc
nop
adc
outsl
stc
push
mov
shll
or
and
movsb
pop
adc
fwait
xchg
or
adc
sub
and
sbb
jg
xchg
fdivl
xchg
insl
mov
adcl
leave
push
or
in
aaa
hlt
dec
jne
mov
inc
jmp
fs
and
jo
int
lods
data16
and
or
popa
pop
mov
imul
sahf
movb
loop
xor
andl
jl
movsb
adc
and
out
adc
cmp
dec
mov
inc
inc
mov
and
pusha
xor
mov
push
inc
sub
sbb
adc
xchg
lock
lret
movsl
js
or
pop
inc
xlat
inc
or
pop
sbbb
jbe
adcb
dec
push
arpl
or
jbe
ret
add
aaa
jne
inc
sahf
outsb
push
jno
jo
sbb
orb
push
aas
dec
push
sahf
adcb
jecxz
out
in
dec
movsl
lcall
pop
pop
add
push
push
push
ret
loop
inc
jne
lret
adc
add
adc
mov
jmp
enter
inc
push
xchg
push
push
pop
sub
jnp
insl
gs
rcrl
adc
nop
mov
or
sub
sub
xchg
push
adc
pop
pop
sub
scas
mov
fcoms
add
into
shrb
push
push
ljmp
movsb
rcrb
fs
push
test
push
inc
sbb
mov
icebp
xor
adc
cmp
jmp
or
movsl
out
push
xchg
inc
pop
pop
cmp
lock
lds
cmpsb
sbb
xchg
and
xor
and
add
add
jp
aad
sub
test
inc
pop
in
xchg
ss
and
test
in
mov
jne
subl
lock
and
dec
xor
add
pop
js
or
mov
stos
jo
inc
ret
lock
hlt
das
mov
stos
sbb
ror
xchg
cmp
dec
inc
inc
adc
in
cmp
or
out
pop
pop
test
and
or
xor
mov
or
testl
or
sbb
xor
adc
xchg
xchg
lret
pop
loop
xchg
iret
shlb
adc
cmpsl
daa
jne
push
fmuls
push
addl
cmc
sbb
cwtl
mov
pop
mov
push
popa
push
dec
loopne
add
and
pusha
rcll
ret
js
call
ret
and
ficompl
add
das
leave
insl
and
and
push
jne
ljmp
dec
les
mov
in
loope
jp
adc
iret
jae
xor
ss
xchg
add
aad
cmpsl
mov
xchg
ret
mov
out
sbb
add
cmp
dec
dec
nop
pop
sbb
jmp
push
stos
dec
cmpsb
push
roll
inc
or
adc
out
mov
jbe
ss
fmuls
repnz
es
loop
and
sub
pop
xchg
imul
test
dec
push
pop
fsts
push
push
fdivl
or
add
pop
mov
mov
add
es
test
rolb
fwait
aam
ret
xor
cmp
fiadds
mov
mov
loopne
xchg
cwtl
lock
mov
aaa
fsubrs
je
roll
loopne
cmp
cmpsb
xorl
mov
pop
nop
icebp
mov
xchg
push
push
scas
lods
fildll
jmp
sarb
bound
lods
and
adc
jne
mov
ror
push
adc
insb
jecxz
cmp
or
adc
sarl
sub
popf
orl
lock
or
pop
ret
or
xchg
and
outsl
pop
lods
mov
push
push
sub
inc
pop
cwtl
test
pushf
push
mov
xchg
call
jp
shll
add
lods
dec
dec
xchg
mov
push
mov
cltd
lods
sbb
push
sbb
call
inc
push
mov
test
movsb
pop
inc
jo
inc
adc
inc
and
call
in
andb
add
test
xchg
aam
inc
call
mov
pop
pop
lock
pop
pop
cmp
and
and
out
jge
cmc
add
je
mov
inc
lea
mov
or
test
inc
xchg
dec
cmp
push
ds
xor
frstor
hlt
rol
mov
das
pusha
pushf
mov
mov
mov
lret
mov
cs
pop
xor
xchg
pop
ret
add
pushf
pop
push
sbb
cltd
sbb
outsl
icebp
lret
add
jle
or
out
dec
inc
dec
pop
inc
pop
or
push
sbb
je
jge
push
mov
push
loopne
push
pop
mov
les
ja
inc
iret
fs
or
fdivrl
cmp
arpl
out
jp
dec
adc
movsb
lret
jmp
push
nop
enter
addr16
push
mov
push
inc
loope
out
call
gs
push
inc
xchg
and
pop
adc
in
les
stos
adc
ret
inc
mov
push
jmp
sbb
jne
popf
pop
in
cmp
add
sbbb
in
pusha
inc
pop
add
or
fldl
les
ja
sub
inc
or
xchg
js
imul
mov
gs
push
repz
ds
xor
mov
ret
test
adc
cmp
movsb
xor
insl
insb
dec
es
jmp
push
dec
inc
mov
add
cmp
shlb
xchg
push
call
dec
sub
mov
mov
mov
pop
and
inc
pop
or
inc
mov
sbb
pop
sub
roll
js
xchg
cmp
outsl
jecxz
inc
aaa
test
movsb
or
in
fadds
in
test
gs
add
pop
fidivrl
push
mov
adc
orl
sub
xchg
mov
add
xchg
cmp
adc
xchg
add
dec
cmp
and
cmpsl
popa
dec
cmp
outsl
inc
jne
jnp
add
or
adc
fmull
inc
testb
push
add
or
outsl
dec
arpl
cmpw
pop
movsb
push
mov
or
jbe
fstpt
mov
sbb
lods
cmc
add
jne
fcomps
or
add
sbb
mov
dec
rcl
xchg
je
sub
push
add
pop
add
outsl
jmp
mov
lret
mov
dec
and
adc
movsb
data16
shl
xor
fdivrs
adc
and
les
mov
add
orb
mov
jecxz
mov
and
mov
lahf
xlat
jnp
adc
and
inc
cs
and
dec
cmp
push
cmpsb
jnp
pop
push
mov
outsl
nop
and
or
sub
mov
jns
push
lods
add
pop
sub
icebp
adc
fs
inc
push
cmp
mov
rcr
sbb
or
sbb
push
dec
addr16
jo
insb
gs
dec
adc
or
add
lock
leave
dec
adc
push
push
ret
mov
mov
push
fst
jb
mov
scas
out
lock
xor
dec
or
dec
jp
sub
xchg
sbb
and
push
je
subb
out
add
jge
push
jne
push
ja
push
dec
lock
cmp
and
push
jns
xor
push
sarb
mov
mov
imul
lock
jno
dec
and
jecxz
jne
int
stos
lods
iret
add
inc
jne
jne
and
pop
movsl
sbb
push
pop
insl
cmp
outsb
mov
add
or
idiv
lods
gs
dec
dec
in
jmp
adc
cwtl
clc
test
dec
lods
pop
es
gs
jo
sbb
sub
cwtl
fwait
cmp
cmp
fwait
out
rcll
idivl
lcall
jge
add
or
incb
push
dec
fcomps
out
jp
lea
and
outsb
push
add
shl
mov
xor
adc
jnp
cmp
inc
cmp
jae
adc
cltd
aad
adc
xor
sbb
mov
into
push
pop
outsb
mov
aam
push
xchg
inc
mov
add
or
mov
iret
ficompl
insl
cmpsl
nop
ss
pop
cmp
inc
push
push
xchg
jmp
sbb
mov
mov
xor
loope
push
insb
pop
xor
jo
xchg
and
es
mov
xchg
xor
shlb
xor
pop
push
sub
ds
gs
inc
inc
sbb
loope
sub
or
dec
dec
sub
mov
push
xor
insl
adc
ficoml
xor
jo
add
les
pushf
or
xor
and
push
and
adc
add
jl
add
pop
aas
inc
jb
stos
in
mov
sub
and
lea
scas
inc
or
and
lahf
lea
lea
add
xor
out
adc
mov
xchg
or
cmp
cmp
mov
sbb
cmp
sbb
pusha
xor
add
push
shll
sbb
jge
mov
cmp
fisubrs
and
popf
adc
je
shlb
cmp
xorb
das
jbe
popa
sub
mov
hlt
push
adc
shl
xchg
sbb
or
adc
add
nop
cltd
call
push
pop
push
adc
das
dec
adcb
bound
mov
dec
shll
push
or
push
or
rcrl
xor
jae
dec
xchg
add
clc
or
cld
push
addl
out
sub
dec
adc
push
cwtl
sahf
jecxz
sti
jo
out
faddp
and
cli
inc
fnstsw
dec
jb
mov
xor
mov
xorb
sub
sbb
test
mov
mov
loop
sbb
addl
inc
sub
push
cli
dec
loope
cwtl
lock
pushl
test
cld
add
cmp
pushl
pushl
lret
into
insl
mov
add
mov
sti
nop
jmp
daa
push
sbb
xchg
in
lahf
nop
sub
cmpsl
loopne
inc
jnp
sub
mov
fcomps
adc
jo
and
mov
adc
mov
pop
and
mov
or
movsl
test
cli
adc
and
mov
lret
ret
ret
clc
test
adc
femms
and
ja
scas
add
sub
lock
into
push
push
add
mov
pop
pop
jecxz
int
testb
int
nop
push
shlb
push
or
popa
xchg
add
push
lods
cmp
cmpl
add
es
inc
adc
pushf
dec
lcall
xor
test
push
sbb
and
lock
pop
frstor
jp
clc
inc
xchg
test
mov
sub
mov
into
jno
fucomip
adc
mov
icebp
add
adcb
push
xor
pop
xor
popf
int
cli
sbb
dec
inc
lahf
xchg
push
inc
cmp
adc
mov
and
inc
jp
popf
hlt
jle
sub
cmpsb
mov
sub
mov
push
jecxz
je
fld
ljmp
add
loope
je
and
pop
mov
pop
cmp
sub
cmp
pop
and
lea
inc
pop
jle
jne
xchg
popl
loopne
shlb
jns
add
mov
mov
test
xchg
xor
test
cmpb
sbb
pusha
add
stos
pop
push
imul
mov
xor
xchg
dec
sub
call
jbe
sub
xor
pop
add
jae
inc
jmp
xor
sarb
pop
sbb
movsb
dec
repnz
repnz
push
popf
sub
mov
fdivrs
int3
lret
pop
mov
mov
clc
decl
ss
sub
xchg
pop
test
aam
cmpsb
adc
xor
and
sub
mov
lahf
add
cmp
xor
test
sbb
sub
xchg
lock
add
push
push
add
jb
xchg
lods
push
adc
adc
push
jecxz
stos
and
sbb
sub
adc
jmp
dec
mov
cmp
sub
sub
inc
pop
jno
xor
adc
add
aaa
hlt
clc
inc
das
ss
xor
jne
inc
cmp
jmp
negl
jne
adc
jbe
adc
inc
insl
push
xor
cmp
push
and
or
in
ljmp
xchg
inc
stos
outsl
int
popf
hlt
call
and
test
fs
scas
and
gs
cs
add
push
add
or
sahf
fildll
push
or
movsb
xor
pop
fdivs
and
adc
bound
data16
aam
mov
inc
or
aaa
or
or
mov
mov
xor
pusha
pop
jmp
jno
dec
mov
mov
adc
sbb
add
ds
shlb
add
mov
pop
int
jne
ret
add
jne
xor
or
pusha
scas
loopne
movsb
jmp
daa
push
fs
sbb
push
lea
mov
push
popf
mov
push
inc
dec
shr
pop
shrb
pop
xlat
mov
pop
dec
cmpsb
sub
mov
mov
add
scas
rol
arpl
add
dec
xchg
adcb
lds
mov
cmp
pushl
lea
arpl
cs
insb
int
mov
sub
jbe
movsb
mov
sub
push
add
push
mov
add
sti
xchg
jle
pop
push
xchg
xor
inc
stos
pop
pop
nop
mov
ret
and
jg
mov
lods
pusha
fmull
loopne
mov
das
push
push
inc
xchg
je,pn
fcomps
jo
or
adc
xor
fs
jae
js
sbb
adc
and
pusha
les
mov
mov
call
adc
outsb
jne
mov
jne
push
nop
dec
or
inc
xchg
mov
mov
and
adc
xchg
push
dec
pop
dec
cmp
jb
or
gs
dec
scas
rcr
push
mov
ds
and
push
jle
lods
xor
in
sbb
jne
sbb
adc
sahf
inc
stos
mov
or
lds
lock
sbb
sbb
inc
xor
iret
mov
mov
push
cli
push
jmp
test
xor
jo
jns,pt
xlat
jl
adc
pop
in
aam
inc
xlat
or
sbb
cmp
sub
mov
xchg
pop
mov
ret
adc
cwtl
cmp
add
xchg
ss
xor
xor
add
fldt
push
test
sub
push
dec
cmp
xor
test
or
add
push
push
mov
and
sti
mov
pop
cwtl
pusha
imul
xor
into
xor
fidivs
jge
mov
popa
inc
xchg
adc
pop
adc
cmp
out
or
adc
sub
or
push
aaa
jl
call
scas
ret
inc
lods
lcall
and
addb
int3
repz
test
sub
jo
js
jbe
incb
ficompl
push
hlt
jae
push
je
popa
mov
and
sub
aaa
or
push
dec
lds
jmp
in
sub
sub
xor
jp
push
fisttps
std
xchg
sbbb
or
add
leave
int
insb
cltd
mov
dec
ja
lods
jb
adc
subl
mov
rcll
mov
sub
mov
jae
repz
push
inc
sub
or
inc
in
mov
xchg
sbb
aaa
push
add
mov
push
sbb
movsb
sbbl
push
rol
rcll
pop
mov
ret
cltd
and
loopne
push
add
cmp
xchg
mov
cmp
fwait
add
ret
sbb
loop
pop
pusha
jb
dec
or
in
daa
gs
add
mov
movsb
adc
or
je
into
pop
negb
ret
es
shrb
push
sub
sbb
cld
mov
or
and
adc
sti
mov
pop
popa
js
xor
mov
dec
fs
mov
xlat
aas
pop
pop
cmpsb
pop
mov
inc
push
idivb
pop
test
add
loopne
pop
push
fisubrl
lret
and
mov
sbb
loop
sub
ret
sub
mov
sub
mov
ficoms
push
push
adc
enter
pop
xor
or
adc
jmp
add
cmp
add
ss
jne
cmp
mov
jmp
pop
sub
cmp
dec
jno
jecxz
test
mov
je
int3
pop
or
movsb
mov
push
in
lods
mov
jo
and
jmp
sbb
add
add
or
or
adc
dec
sbb
xor
push
jne
lret
xor
shrl
andl
sarb
push
sub
dec
movl
jns
lods
inc
jecxz
sbb
gs
sub
fldt
dec
cwtl
ja
pop
adc
test
loope
sub
sbb
fstpt
push
sub
jo
cmp
outsl
shlb
packsswb
aad
mov
cli
mov
jbe
pusha
push
add
cmpsb
push
sbb
andl
test
fs
mov
push
push
pop
call
push
shlb
andb
dec
pop
loopne
cs
add
and
jbe
movsl
add
jg
jo
popa
jo
jo
cmp
icebp
andb
jmp
sbb
add
xor
jbe
out
push
ja
inc
xor
mov
push
sub
push
and
or
pop
insb
sbb
pop
mov
outsb
dec
pop
cmp
in
jnp
hlt
jmp
xchg
fsubs
insb
xor
inc
jmp
lock
div
adc
out
into
stos
aas
mov
push
sub
jmp
pop
pop
mov
cmp
add
sub
stos
maxps
jmp
adc
mov
mov
jmp
sub
jne
or
cmp
lods
sub
jl
dec
mov
rcrl
ret
sub
dec
imul
pop
fcomps
jmp
mov
or
mov
jmp
mov
pop
mov
cmp
out
jno
pop
cmp
cmp
repz
jl
ljmp
pop
insl
iret
jne
pop
pop
xchg
mov
shl
out
jns
fistpll
in
testl
push
and
jge
cmp
push
ja
cmc
pop
dec
or
arpl
dec
mov
out
push
mov
mov
sub
or
adcb
lcall
xchg
rol
or
js
test
and
dec
data16
or
push
adc
push
mov
pop
or
mov
sub
loopne
ds
mov
or
aaa
and
adc
or
or
pop
imul
sub
clc
dec
or
mov
push
xlat
mov
sahf
inc
or
or
roll
mov
push
inc
push
pop
push
les
pop
jmp
mov
iret
jle
sbb
inc
inc
test
js
inc
push
and
nop
es
push
add
xor
sbb
jo
or
pop
add
outsl
push
jb
push
inc
dec
and
push
add
xor
adc
xchg
cmp
pop
pop
in
push
aam
movsb
push
sarl
inc
lock
repnz
add
sbb
or
push
sub
adc
xchg
add
cmp
enter
or
push
add
gs
mov
je
dec
jo
adc
pop
xchg
and
mov
nop
mov
aam
and
sbb
adcb
dec
mov
or
pop
cltd
mov
int3
pop
xor
inc
pop
add
arpl
mov
sub
imul
icebp
or
jno
and
dec
lcall
add
jo
jae
or
sbb
adc
dec
add
cmpl
jnp
push
push
into
push
pusha
cs
push
mov
loope
outsl
dec
fstps
dec
pop
mov
inc
fwait
add
pusha
sbb
or
inc
and
adc
pop
bound
frstor
sahf
and
mov
dec
xor
mov
sbb
dec
fs
adc
or
dec
imul
cmp
cmp
jmp
xor
outsl
xchg
aas
orl
sbb
and
cmp
jae
pop
mov
add
mov
sbbb
jle
imul
mulb
or
xor
push
leave
mov
jb
sub
mov
pop
das
dec
fmuls
push
jno
inc
lods
inc
push
imul
sbb
scas
je
xor
adc
les
and
jle
cmp
in
insb
mov
xchg
adc
sbb
push
jge
test
ja
jbe
jecxz
mov
sub
and
das
jbe
or
sbb
dec
jne
loop
inc
mov
push
movsb
pop
add
add
test
mov
add
mov
shlb
sub
xor
mov
jmp
into
pop
je
shr
push
pop
push
cmp
adc
cmpsl
movsb
xor
popf
adc
add
jl
push
jmp
cmp
sub
pop
add
add
arpl
push
loopne
outsb
add
mov
cmp
pop
jo
inc
add
or
sub
add
or
call
outsl
jne
pop
adc
xchg
sbb
test
inc
inc
icebp
cmpsl
adc
mov
add
fstpl
mov
sub
fdivrl
dec
sbb
test
and
test
hlt
inc
lock
adc
in
or
stos
rclb
cmpsb
pop
add
sub
adc
adc
enter
lea
andl
data16
xor
js
xor
sub
xor
aas
or
push
lret
pop
inc
jo
add
pop
pop
inc
dec
jmp
mov
das
cmp
dec
jl
push
add
push
sbb
mov
mov
xor
shl
xchg
in
pop
cmp
jne
inc
xchg
lds
lea
pop
pop
repnz
mov
cmp
xchg
mov
sub
pop
nop
sub
adc
mov
fsts
dec
xlat
add
push
sbb
sahf
jbe
aaa
push
jmp
mov
adc
fwait
add
shrl
popf
push
cmp
sub
sbb
imul
fcoml
mov
into
in
inc
rclb
mov
fistl
lds
xchg
arpl
je
add
adc
push
int3
push
xlat
js
jo
dec
push
ds
xor
insb
push
add
push
fstl
xor
adc
or
popa
leave
dec
or
test
add
push
mov
dec
dec
bound
and
and
call
popf
mov
sbb
out
enter
jge
cli
lea
jp
pop
or
leave
push
ds
aam
loop
iret
shr
mov
or
xchg
push
push
cwtl
movsb
lret
mov
or
jne
jae
mov
mov
and
pushf
mov
jno
jne
pusha
dec
add
pop
adc
lds
inc
incl
ret
xor
or
stos
adc
and
cmpsb
test
push
dec
jo
pop
xor
lea
cmpb
lock
add
xchg
add
or
add
xchg
js
xchg
jne
imul
or
and
xor
movsb
in
mov
lcall
jmp
and
nop
les
fcmovbe
imul
sub
jnp
and
or
xor
adc
xor
and
jmp
or
adc
sar
out
data16
add
and
and
sbb
sub
cmp
push
call
adcl
pop
daa
aas
inc
nop
cmp
jne
xor
mov
jmp
cmp
jle
js
inc
mov
in
xchg
push
adc
push
in
movl
ret
test
fwait
ret
adc
adc
sbb
mov
push
xchg
lret
push
xchg
add
add
ret
add
cmp
cwtl
xor
xlat
mov
sub
es
dec
inc
and
inc
inc
sbb
or
ficoml
cmp
xchg
add
scas
and
ret
cld
ja
lcall
das
sbb
aam
add
mov
adc
scas
add
adc
je
or
sbb
fiadds
dec
cmp
out
pop
lret
and
enter
dec
or
mov
cltd
lock
fiaddl
nop
inc
jb
pop
lds
psrad
and
and
aam
cmp
jbe
loope
adc
inc
push
add
adc
pusha
sub
mov
sbb
orl
push
scas
dec
jecxz
adc
scas
lds
cmp
je
push
and
mov
add
sub
adc
cmp
out
cmp
dec
call
push
clc
ss
push
jne
add
dec
xchg
not
sub
add
rorb
sbb
test
dec
push
ret
gs
and
push
je
sub
jne
daa
popa
adc
inc
cmp
push
mov
sbb
pop
cmp
jnp
and
aas
test
and
movsb
mov
cmp
add
sub
xchg
sub
mov
shrl
adc
push
and
xlat
xor
lock
popa
sub
xchg
mov
adc
je
sbb
dec
or
xor
je
sarb
std
sbb
push
repz
insb
js
cmp
add
stos
adcb
and
cli
std
dec
pop
push
push
idivb
ds
lea
pushf
and
add
jmp
imul
sbb
call
dec
pusha
iret
lods
sbbl
xor
dec
incl
inc
sbb
shlb
add
xchg
sbb
mov
outsl
sbbb
add
lods
mov
shlb
or
aam
bound
lods
sbbb
ret
push
mov
add
xchg
rorl
dec
pop
insb
cmp
pushf
fs
jbe
xor
dec
inc
sbb
jle
adc
inc
add
shr
cmp
or
dec
aad
mov
dec
add
and
jp
or
dec
ds
mov
test
loopne
dec
add
push
aaa
movsl
cmp
and
push
sbb
repz
inc
adc
xor
dec
and
inc
xchg
or
dec
iret
or
ja
aas
rolb
add
mov
xchg
out
in
sub
bnd
push
pop
push
mov
cmp
inc
dec
clc
xor
adc
and
flds
ss
cmp
add
inc
fcmovu
cmp
filds
push
jbe
adc
nop
and
clc
or
cmpb
cmpsl
cmp
push
sub
mov
rorl
jno
shlb
and
cmp
cmp
adc
add
adc
adc
jo
sub
inc
ljmp
or
mov
loopne
movsl
add
jge
iret
pop
dec
cmp
pop
and
sbb
jp
jge
jne
sbb
mov
test
lahf
push
aaa
mov
cmp
andl
and
ds
mov
adc
dec
xor
add
jnp
rolb
inc
cmp
sar
and
inc
dec
ret
push
xor
jno
push
adc
loopne
xchg
pop
sub
push
lret
push
sub
mov
gs
loope
inc
pushf
push
test
aaa
dec
sarl
xchg
lock
adc
xor
dec
xor
xor
test
jne
mov
nop
mov
add
sbb
or
cmp
sub
sub
or
lock
push
pop
pusha
ret
inc
bound
cmp
and
in
je
cmp
shlb
aas
jbe
fnstcw
dec
sub
dec
cmp
jo
sbb
jnp
gs
rcll
and
movsb
rolb
inc
adc
pop
test
mov
cltd
loopne
lahf
xor
rclb
jg
notl
sub
sbb
popa
cmp
jecxz
pop
jg
cmp
mov
and
cmpsl
or
mov
pushf
xor
sbb
or
ret
push
or
mov
fs
or
ret
adcb
mov
fcoml
xor
and
push
adc
jl
add
popf
mov
ljmp
mov
sub
dec
add
push
push
mov
xor
dec
cmpsl
test
stos
inc
pop
bound
adc
in
or
aaa
addr16
shll
fs
cmp
or
add
jl
jp
mov
and
sub
hlt
dec
sbb
arpl
ja
cwtl
add
int
push
and
xchg
fisubl
popf
add
or
inc
sub
and
add
cltd
sbb
cmpl
sub
sbb
mov
jecxz
pop
insb
push
dec
dec
les
or
mov
call
lea
xchg
sbb
ror
pop
xor
hlt
push
lret
shlb
pop
pop
sbb
xchg
cmp
push
inc
inc
xor
pop
dec
push
fistpll
mov
or
jg
push
andb
add
cwtl
test
mov
mov
les
mov
fiaddl
and
and
sbb
dec
dec
mov
movsl
add
pushf
inc
mov
dec
sbb
sbb
mov
jae
or
out
pop
aad
push
xchg
cmp
xchg
xlat
into
js
sub
pusha
hlt
les
push
aas
pop
push
insb
xchg
cli
aaa
aaa
sbb
dec
push
je
sub
je
xchg
cs
je
cmp
inc
movsl
mov
inc
mov
out
and
insb
push
sub
mov
push
push
adc
test
or
shlb
or
pop
std
ret
cmp
jae
jg
push
leave
enter
jle,pt
cmpsl
jp
cmp
inc
adc
xor
sub
push
xchg
loope
or
sbb
mov
sbb
xchg
movsb
and
sbb
add
mov
dec
push
mov
push
jp
mov
push
pop
aad
inc
rolb
mov
jo
dec
add
out
pop
je
jbe
arpl
or
ljmp
gs
adc
stos
shlb
push
adc
add
push
je
fistpll
pop
flds
popa
sbb
jo
fiadds
addb
stc
push
adc
ret
mov
popf
cmp
xor
je
push
push
dec
sub
js
aam
lods
and
mov
push
fsubrl
mov
ja
fmull
push
je
push
ds
into
lahf
or
imul
pop
negl
push
adc
xchg
or
jmp
mov
sub
les
je
ror
push
fisubs
add
lahf
das
dec
mov
inc
adc
sarb
sbb
fisubrl
mov
jmp
das
sbb
jbe
out
mov
sbb
int
pop
fdivrs
or
and
pop
jo
out
in
orb
adcl
dec
cwtl
mov
lret
or
add
push
call
out
adc
pop
rcl
and
in
and
push
arpl
cmp
mov
lds
xchg
and
push
and
xchg
pop
or
test
mov
lods
push
push
mov
mov
orl
fdivr
fisubl
or
sbb
mov
lret
push
adc
aas
test
push
movsb
inc
js
scas
jmp
jo
and
xchg
sub
mov
mov
sbb
adc
jle
mov
push
ret
sub
mov
movsl
repnz
or
inc
into
cmp
mov
cwtl
jne
andb
outsb
xchg
cwtl
movsl
or
pop
add
push
add
jbe
andb
add
sbb
nop
adc
int
add
or
hlt
add
and
mov
jp
push
dec
push
lock
test
xor
scas
dec
add
or
add
jnp
adc
and
xor
nop
cmp
aad
and
add
and
inc
dec
jg
sbb
test
test
fadd
adc
xlat
pop
add
add
adc
push
rcr
push
fdiv
das
popa
icebp
pusha
popa
jge
mov
jo
mov
jle
insl
loopne
adc
in
xor
cmp
popa
cwtl
shll
sbb
sbb
sbb
mov
inc
mov
mov
decl
jl
sbb
or
and
mov
jbe
mov
cmp
add
sbb
hlt
sbb
push
cmp
add
aad
imul
arpl
xorb
adc
pushf
sub
xchg
mov
push
inc
fs
lock
outsb
mov
sbb
imul
sbb
dec
pop
dec
insl
and
pop
cmp
add
in
sub
outsb
add
pop
ret
in
loopne
inc
call
jne
push
fidivrs
addl
jo
sbb
jmp
add
jmp
arpl
cmp
cmp
sbb
push
incb
iret
and
sbb
sub
or
js
jae
push
cmp
jne
cmp
sarb
fs
sub
mov
pop
jno
jno
mov
sti
jge
shlb
ret
push
mov
in
mov
sbb
arpl
and
scas
and
cs
jo
inc
push
aaa
sbb
and
dec
sahf
push
loop
jle
jnp
push
push
push
sbb
lods
add
xor
popa
ret
mov
push
pop
jg
cmp
je
je
cmp
mov
xor
mov
aam
xor
or
add
jo
popa
cmp
push
xchg
lret
and
adc
push
add
push
sahf
nop
or
xchg
out
adc
xchg
addb
add
cmp
and
sub
pop
pop
sub
mov
cmpl
test
popa
or
xor
js
adc
xor
das
je
mov
push
cld
sbb
cmp
inc
sub
jb
cmp
stos
mov
adc
mov
pop
push
rcll
mov
test
dec
inc
js
fisttpll
mov
idivb
sub
pushl
and
cmp
sub
xchg
adc
daa
insl
add
mov
adc
into
adc
add
xor
sub
xchg
jne
cmp
clc
sarl
jo
mov
test
xchg
jo
mov
cwtl
jo
and
cmc
cmp
inc
jge
push
cmp
jns
js
xor
clc
lret
aaa
xchg
jo
mov
cmp
inc
push
iret
fadd
pop
stos
mov
push
in
push
adc
push
fistl
add
jo
push
lock
add
clc
push
mov
test
or
inc
lcall
cs
ss
pop
aas
addr16
cmpsl
cmovg
gs
xchg
push
ds
pop
push
je
lret
and
pop
cmp
fs
and
stc
inc
push
pushf
gs
push
lods
xor
hlt
cmc
xlat
int
jge
cmp
jae
or
mov
dec
mov
jae
inc
jge
push
jmp
inc
jne
loopne
add
hlt
pop
and
in
add
pop
sbb
add
fadds
mov
test
jge
pop
movl
fisubrl
sbb
pop
loopne
mov
lahf
mov
scas
arpl
pop
pop
xchg
and
xor
loope
jp
lahf
or
nop
pusha
daa
sbb
es
ljmp
and
cmpl
jle
rol
push
cmp
rol
test
cs
pop
and
inc
clc
dec
cmp
iret
sbb
mov
push
cmpsl
fldl
stos
pusha
loopne
add
push
ret
or
xchg
sub
fs
xorl
mov
push
insl
pop
lods
ret
sbb
push
or
loopne
ljmp
xor
or
test
rcr
bound
xchg
push
add
ljmp
push
fidivs
imul
incb
add
inc
mov
jle
ds
imul
and
jne
sbb
pop
rcl
adc
push
rcll
sub
in
pop
sbbl
in
dec
rcrb
enter
cmp
jbe
pop
and
insb
popf
inc
pop
pop
jns
adc
cs
pusha
dec
imul
ljmp
es
push
mov
push
ds
add
adc
push
sub
mov
ljmp
push
or
pop
fisubrl
daa
ja
insb
frstor
ja
je
mov
cwtl
into
popa
leave
cs
push
jo
push
lea
imul
jle
or
jp
and
add
xchg
imull
ds
push
jmp
add
lock
push
data16
jmp
push
or
inc
imul
xchg
imul
jbe
cmp
xor
jnp
mov
pop
es
jge
mov
mov
push
add
mov
stos
lock
cs
or
inc
je
mov
aaa
dec
shll
in
je
popa
xchg
jg
popf
cmpsl
lcall
push
jmp
sbb
imul
outsl
or
popa
jge
rcl
add
stc
push
xor
lahf
mov
je
sub
jl
fisubl
das
je
jne
mov
push
pop
sub
out
fists
or
int3
jp
mov
and
push
outsb
sub
lock
pop
or
cmp
push
shlb
repz
stos
gs
pop
fs
shll
es
pop
repnz
pop
pop
fcmovnb
outsb
mov
sysret
aaa
mov
mov
xchg
jb
mov
push
imul
cmpsl
aam
xchg
fidivl
jecxz
push
arpl
enter
pop
loope
sub
imul
lock
adc
add
inc
or
jle
rorb
or
jmp
push
insl
stos
cwtl
mov
push
and
prefetchwt1
xor
cwtl
fiadds
xor
push
xchg
inc
push
dec
adc
icebp
jecxz
cmpsl
mov
lret
stos
push
xchg
dec
xor
leave
aam
fwait
in
imul
inc
movsb
mov
hlt
and
mov
xor
jl
xor
jbe
jnp
add
jp
movsl
or
roll
adc
pop
icebp
pop
inc
shrl
dec
push
cmp
ret
and
int3
xlat
adc
xorl
add
mov
xchg
and
sbb
and
shrb
sub
push
or
push
test
adc
scas
daa
daa
in
add
adc
outsl
sub
and
js
push
arpl
xor
popa
test
nop
cmp
into
and
sub
cmpl
mov
jg
loopne
repnz
pop
pushl
dec
inc
cmp
inc
stos
rclb
or
and
pushf
cmp
pmuludq
lcall
add
dec
jge
lock
jmp
and
dec
mov
fs
loopne
push
push
rcrb
adc
mulb
int
lcall
sub
imul
xchg
push
push
lods
fcoms
bound
push
adc
add
mov
pop
pop
loop
and
in
adc
ret
xchg
add
push
add
ret
cmp
jnp
dec
xor
outsb
or
mov
and
adc
cs
lcall
adc
dec
aas
sbb
xor
inc
cmpsl
or
test
add
push
inc
xchg
mov
xor
adc
or
sub
or
jmp
add
inc
push
sub
inc
dec
rcl
or
xor
cs
add
push
or
sub
mov
sbb
clc
and
xchg
pop
cwtl
add
push
and
pusha
icebp
push
rclb
iret
push
inc
shrl
push
inc
outsb
sbb
inc
push
ror
movsb
loop
icebp
push
ret
pop
and
xchg
insl
sub
sub
aaa
and
lods
stos
xor
les
or
mov
movsl
cmpb
test
sbb
add
inc
sbb
pop
dec
or
imul
ror
and
dec
rclb
dec
mov
jp
sub
pushl
dec
push
add
inc
add
lods
dec
sub
jnp
aam
or
pop
inc
roll
adc
inc
pop
pushf
push
lods
jb
push
or
inc
jmp
push
hlt
sbb
and
or
in
mov
mov
or
xor
loopne
push
xor
sbb
mov
inc
leave
push
leave
loop
adcb
ds
sbb
sbb
pop
stos
cmp
shlb
push
mov
rclb
mov
loop
xor
add
xchg
sub
mov
ss
add
loopne
and
pusha
mov
inc
shl
cmp
shlb
mov
pop
mov
je
inc
xor
push
scas
cmp
movsl
and
inc
cmp
push
cmp
inc
xor
cwtl
push
xor
push
movsb
testb
push
add
jo
mov
mov
pop
stos
pop
push
push
or
sbb
cli
add
pop
add
daa
fcoms
dec
push
hlt
rorb
push
mov
fistpl
dec
jne
jge
dec
add
add
or
in
lock
pop
pop
and
push
mov
sub
push
pcmpeqb
push
mov
gs
and
push
add
xchg
clc
cmp
lock
push
movb
xor
mov
test
sub
in
sbb
cmp
pop
insb
jmp
data16
push
mov
and
popa
jle
inc
fnstsw
sbb
inc
lcall
adc
adc
jnp
push
mov
mov
cmp
and
adc
mov
xor
cmc
or
xlat
pushf
push
mov
test
jmp
or
add
push
rcr
sub
pop
push
cli
push
loopne
or
cmp
or
lock
inc
mov
add
je
mov
add
and
ret
add
jno
xor
cmp
jmp
adc
dec
rorb
es
lcall
inc
and
push
mov
xchg
pop
xchg
int
enter
fdivl
cmp
pop
aaa
ss
pop
push
and
lods
adc
or
ljmp
cmp
xor
push
dec
adc
sbb
and
add
add
push
and
jbe
cmp
pop
je
push
pinsrw
rcll
or
add
adc
ret
xchg
and
rclb
xchg
imul
movl
cmp
dec
pop
xchg
lret
mov
push
pusha
or
je
push
ds
and
jbe
popa
mov
xchg
pop
xchg
adc
mov
mov
and
adc
fcomps
ret
mov
adc
jno
or
aaa
jbe
outsl
addr16
mov
enter
add
std
sub
mov
imul
pusha
cmpsl
xchg
pop
push
or
insb
rol
mov
jnp
xor
sbb
subb
or
or
and
test
cmp
loope
repz
or
sub
xchg
add
daa
mov
test
fsubrs
add
sub
and
adc
and
add
or
cmpb
adc
push
dec
rclb
stos
jmp
pop
pushf
xor
pop
or
push
paddw
and
push
adc
sbb
mov
add
lea
cwtl
xchg
push
xor
or
and
dec
roll
adc
xor
jmp
pop
adc
repz
out
xor
cmp
jbe
mov
jp
cmp
dec
dec
mov
jecxz
lcall
push
int
gs
loopne
or
pop
pop
or
jle
and
ja
xor
jns
std
add
and
dec
mov
xor
adc
cmpsb
mov
pushf
clc
mov
sti
fstpl
push
push
sarb
push
jp
sbb
cmp
cwtl
rcl
xchg
inc
hlt
adc
adc
or
inc
mov
lock
xchg
mov
ja
pop
les
pop
mov
push
test
add
mov
dec
mov
add
jge
add
and
jecxz
and
fists
popa
adc
test
enter
addr16
in
push
sbb
add
lock
insl
test
push
push
ret
push
insb
sbb
xor
add
push
dec
loope
cwtl
loop
clc
fists
jo
cltd
cmc
push
or
fldenv
pop
lahf
xor
inc
enter
jg
nop
dec
jb
and
add
dec
lea
sbb
pop
imul
scas
or
xor
jne
or
push
loopne
or
xchg
clc
xor
pusha
lds
lahf
div
inc
pop
and
sbb
jb
mov
nop
shr
or
sbb
pop
pop
aaa
and
clc
nop
lock
cmp
out
mov
jmp
sbb
jge
and
je
cmpsb
clc
inc
cmp
fdivr
xor
jg
xor
sbb
pop
or
push
je
testl
adc
dec
enter
jl
imul
mov
jmp
pop
adc
add
jp
js
mov
mov
add
add
in
and
loopne
faddl
sub
test
ljmp
adc
arpl
jae
aam
icebp
add
dec
or
mov
jmp
jp
push
inc
add
mov
push
push
rclb
les
add
and
and
mov
insl
popa
and
or
inc
add
cs
cmp
inc
sub
lcall
sbb
push
push
pop
je
or
sub
test
imul
aam
push
or
add
test
xchg
gs
and
push
xchg
or
sub
gs
mov
adc
dec
inc
punpckldq
jle
push
and
test
mov
xchg
push
or
mov
inc
cmp
enter
sub
xor
adc
daa
repnz
aam
xchg
in
push
push
or
xor
bound
jge
stos
aam
and
sub
adc
int
sub
cmp
adc
ficoms
test
add
ljmp
outsb
test
add
arpl
dec
subb
les
daa
or
ss
in
cmp
sbbl
push
inc
inc
jo
dec
inc
push
in
hlt
dec
xlat
pop
push
mov
jg
mov
jle
sub
sub
mov
aad
test
lcall
or
or
ret
int3
cs
adc
inc
sub
stos
sbb
inc
add
test
sub
xor
add
sub
jbe
jno
test
pop
clc
sbb
shll
sarb
ret
cmp
ja
fldln2
xchg
imul
xchg
clc
ss
push
in
or
jb
jge
loope
rorb
sbb
xor
fimuls
adcl
inc
mov
inc
xchg
vphadduwd
rclb
mov
fwait
xor
sbb
jne
push
or
inc
pop
ror
lahf
adc
push
push
push
cmp
fmuls
fstpt
mov
push
adc
dec
clc
or
add
daa
fwait
and
add
mov
push
sub
mov
or
idivl
push
sub
push
ss
sub
sub
testl
dec
sbb
ret
push
xor
call
jmp
adc
mov
push
mov
iret
adc
push
push
pop
daa
mov
js
cmp
pop
and
sbbl
push
mov
lea
stc
add
popf
cmpsb
ret
xor
xchg
jge
push
push
loope
subl
inc
or
add
mov
adc
adc
xchg
in
shll
shlb
lds
out
cld
jo
lcall
aad
neg
or
out
pop
aaa
sbb
es
or
cmp
pop
sub
mov
inc
test
lods
mov
jae
pop
mov
fiadds
test
sbb
cmp
inc
sbb
loop
fisubrs
fcompl
push
stos
jo
ds
and
jb
or
mov
jns
leave
or
and
inc
push
in
sub
jns
and
loopne
or
insb
popa
leave
or
or
ret
insl
adc
push
xchg
adc
lds
adc
add
dec
imul
incb
inc
mov
outsb
sbb
inc
test
in
and
push
inc
and
sti
sbb
push
push
adc
cwtl
filds
out
inc
push
cmp
and
adc
je
aaa
adc
shlb
lock
dec
mov
sbb
or
cld
dec
jmp
push
mov
orl
call
dec
adc
sub
sbb
jo
les
mov
push
sub
outsb
insl
sub
push
scas
and
addb
int
outsl
bound
mov
add
and
in
frstor
pop
xor
pop
push
sub
sbb
clc
cmp
clc
je
xor
ficoms
in
sub
adc
dec
or
jne
add
fisttpl
testb
mov
aas
repnz
cmp
cmp
inc
call
cmp
pusha
ja
orb
adc
sub
sub
mov
sub
and
sbb
pop
mov
test
lea
jo
adc
push
test
into
lods
mov
stc
dec
pop
jbe
ret
adc
xchg
adc
andb
lcall
sarb
lds
mov
mov
mov
testl
ret
test
sub
out
and
mov
sbb
push
adc
jo
cmp
push
push
xchg
iret
in
fwait
and
je
bound
test
fs
add
xchg
add
xlat
popa
sub
hlt
js
pop
mov
dec
test
pusha
push
xor
mov
fmull
out
repz
ret
or
pusha
dec
addr16
into
fisttpl
jbe
jmp
push
xor
fsts
add
clc
cli
add
sbb
push
mov
lock
sahf
push
mov
aaa
pop
movsl
jae
mov
xor
les
jbe
insb
dec
adc
jae
or
aaa
push
ret
sbb
push
test
xchg
or
mov
testb
addb
movsl
mov
rclb
movsl
inc
insb
push
or
jp
rcl
or
pop
add
xorl
or
inc
fsts
push
and
mov
lods
cmpsb
out
popf
js
dec
xor
nop
rol
pop
into
subl
push
xchg
sub
xchg
adc
lods
mov
sbb
add
mov
loop
or
mov
cmpsb
cmc
xor
test
test
mov
pusha
lds
and
and
dec
lret
pop
sub
mov
ud1
jecxz
add
insb
jmp
jns
loopne
or
in
fiadds
inc
pop
dec
jno
lods
adc
data16
lds
in
adc
mov
adc
mov
pop
xchg
jle
adc
shrl
add
sub
pop
pop
push
xor
call
add
inc
sbb
add
dec
sub
and
pop
push
shrl
push
adc
xchg
pushw
adc
push
dec
rol
ret
sbb
movb
push
dec
out
add
cmpsl
xchg
add
xor
imul
jbe
mov
sub
and
cld
push
lea
sbb
repz
push
adc
add
cmp
test
addl
push
les
xor
pop
pusha
ja
xor
lods
inc
pop
scas
stos
jg
jmp
imul
jnp
daa
lea
icebp
xor
hlt
or
cli
fs
mov
adc
orl
fisttpll
cltd
int
inc
adcl
adc
cmp
jns
sbbb
pusha
lock
inc
sbb
lea
and
push
aam
es
add
es
mov
movb
xchg
xor
ss
jne
outsb
sbb
loop
jnp
jle
adcl
adc
or
cwtl
subb
cmp
notl
pop
and
pushf
sub
mov
lods
inc
loope
popf
push
call
adcb
dec
cmp
xor
and
push
pop
iret
outsb
scas
stc
lahf
mov
loopne
sub
addr16
pop
sbb
les
sub
push
add
mov
xor
adc
and
decl
test
test
jo
add
int
add
fisttpl
cwtl
aam
push
dec
pop
shl
and
data16
test
add
push
gs
xor
pop
sub
sbb
popa
and
es
or
jmp
or
xchg
xor
ss
cmp
lea
adc
push
inc
jle
shrl
or
push
movsl
jecxz
ret
mov
adc
push
pop
jo
aas
cmpsb
mov
mov
adc
lock
rorb
into
jne
rcrb
aam
fdivr
mov
out
inc
ds
jne
cmp
add
insb
jbe
mov
and
inc
std
or
mov
sbb
popf
enter
jl
aas
stos
push
push
and
pop
lds
sub
cltd
mov
sub
adc
and
pop
jmp
jnp
and
adcb
adc
sbb
push
les
dec
lea
jno
dec
xchg
add
jge
and
jnp
popa
std
and
and
jl
enter
add
cmpb
add
pop
jg
push
jb
sub
jmp
pop
add
jg
xor
cmp
jge
testb
and
xor
movsl
add
adc
add
push
inc
adc
clc
subb
and
dec
nop
lret
xchg
call
data16
mov
fisttpll
inc
inc
cmp
jmp
and
cmp
pop
adc
inc
jmp
jmp
mov
mov
movsl
dec
add
fs
inc
inc
push
or
insl
sahf
or
lea
cmp
push
jae
mov
and
mov
inc
mov
and
mov
and
outsl
dec
ljmp
je
or
mov
pop
outsb
sbb
nop
mov
add
inc
and
jmp
cwtl
inc
push
lock
jl
ficoml
frstor
sti
or
jl
add
inc
push
rorl
and
inc
adc
shlb
aam
push
push
sbb
daa
pop
lds
xor
sbb
test
sbb
stc
push
adc
pop
push
mov
add
dec
loopne
mov
mov
dec
ret
or
sub
pop
xor
adc
or
nop
mov
hlt
inc
mov
test
add
sbb
push
jae
imul
pop
pop
push
out
and
or
test
fsts
xchg
sbb
sbb
adc
add
add
dec
jae
push
push
or
in
sub
xchg
sbb
out
fists
sbb
fsubs
xchg
loopne
lret
xor
dec
call
fbstp
xchg
pop
xchg
in
andb
adcb
fldl
push
enter
mov
icebp
sub
xchg
mov
js
add
mov
nop
bound
jbe
push
dec
cmp
roll
push
and
dec
or
sbbb
add
mov
jo
popf
divl
js
test
push
sbb
cs
push
mov
mov
and
vprotb
or
inc
pop
mov
cs
cli
push
push
or
adc
daa
add
cmp
jne
and
gs
xchg
pusha
cmp
and
pop
jnp
mov
enter
test
pusha
inc
add
bound
dec
pusha
movsb
pop
mov
loopne
jg
inc
and
loope
dec
mov
cmp
inc
xor
insb
mov
adc
mov
adc
testl
pusha
dec
lret
gs
negb
les
xchg
in
call
lret
push
sub
in
inc
stos
push
mov
clc
cmp
scas
popa
test
lea
mov
mov
sti
leave
add
add
fisttpl
mov
lahf
dec
loopne
mov
nop
movsl
sbb
fsubr
nop
cmpsl
lret
xlat
shlb
shlb
sbb
mov
lods
push
and
rolb
pop
test
clc
push
testb
imul
lods
pop
push
in
mov
loop
sarl
outsb
pop
notb
leave
cld
push
push
push
clc
mov
cltd
leave
dec
mov
mov
push
fstps
jne
xor
xchg
dec
jne
push
adc
adc
lock
sarl
shlb
mov
fcomps
push
mov
dec
sahf
idivb
clc
add
lea
sbb
lock
xor
xor
mov
test
mov
add
into
pop
mov
push
adc
pushf
cmpsb
push
xchg
pop
sbb
fsts
or
adc
movl
test
mov
sbb
ss
push
ret
jbe
or
pop
push
jmp
ret
out
sub
inc
mov
jne
push
and
sub
dec
rol
cmpsb
es
in
push
orl
sbbb
push
add
ja
sbb
sbb
xchg
push
add
add
bound
insb
push
add
je
mov
or
mov
cmp
clc
mov
outsb
xor
inc
sbb
cltd
sbb
sahf
nop
push
dec
push
insl
or
outsb
add
fldenv
cmp
pop
add
popf
and
inc
mov
adc
clc
or
pop
and
mov
add
sbb
popf
or
pop
fbld
or
or
sub
pop
cmp
js
cmp
lahf
adc
pop
mov
dec
sub
add
pop
mov
jns
aas
xchg
subl
les
mov
lock
jnp
pop
xchg
bound
xor
jno
xor
mov
je
rcrb
mov
std
es
ficoml
mov
nop
sbb
inc
mov
xchg
and
pop
leave
or
sbb
ficoml
or
xchg
dec
or
or
xchg
cltd
mov
orb
xchg
mov
mov
fimull
push
dec
enter
inc
ffreep
mov
test
rorl
jae
pop
jns
hlt
xlat
ljmp
sbb
sbb
inc
push
sub
mov
gs
push
dec
jecxz
repnz
push
mov
xor
dec
mov
inc
xchg
dec
dec
mov
loopne
or
jge
and
sbb
in
jae
jmp
and
lds
jecxz
fmulp
mov
js
and
outsb
jae
mov
adc
mov
or
pop
adc
adc
fstl
dec
sbb
jb
sahf
dec
sar
adc
cmp
or
pop
push
sbbl
bound
inc
les
sbb
mov
in
mov
sbbb
movsl
mull
popa
inc
loopne
outsb
jg
movsb
mov
loop
hlt
xor
sub
dec
push
out
ljmp
jl
xchg
ljmp
pop
sub
test
movsb
loope
adc
jmp
inc
mov
enter
dec
imul
push
packssdw
scas
xor
and
sub
insb
pop
ret
rorl
pop
push
aaa
inc
and
sbb
inc
mov
pop
shlb
int3
add
or
insl
js
scas
sub
add
xor
sub
pop
cmp
add
xorb
adc
mov
mov
dec
pop
push
imul
xlat
test
push
mov
gs
cmp
and
adc
and
int3
ret
xchg
sbb
shll
inc
or
xchg
lock
iret
push
aad
jbe
aam
mov
fstpt
and
mov
lock
mov
insl
stos
ret
push
dec
aaa
in
fcompl
sbb
add
and
ljmp
mov
and
sub
and
push
add
into
adc
mov
fucomp
in
push
cmp
shr
fstl
sub
mov
xchg
mov
and
xchg
or
xchg
xor
sub
jle
nop
outsb
mov
test
mov
pop
mov
or
or
dec
or
jb
jl
fmul
or
lret
and
sub
fwait
add
cmp
jecxz
insb
sahf
or
enter
imul
jmp
pop
shl
test
jbe
xor
mov
inc
inc
les
sbb
push
dec
and
addr16
fcmovnb
xchg
add
inc
mov
daa
pop
xchg
xchg
mov
mov
cmp
dec
sahf
lret
jg
inc
push
or
nop
jl
sbb
add
cmp
scas
mov
or
and
adc
test
mov
inc
jns
pop
or
lock
adc
sbb
out
pop
inc
add
xchg
pop
pushf
call
push
aas
adc
idivb
dec
sub
xchg
cmp
push
out
dec
pop
repnz
mov
xor
add
mov
push
jne
cmp
cmpsl
jge
aam
sbb
or
and
das
fsubr
mov
leave
cmpsb
lret
jp
movsb
push
adc
mov
dec
subl
orl
rorb
sbb
pop
xchg
jno
sbb
or
xchg
adc
in
dec
adc
inc
add
test
aaa
xor
add
mov
sub
add
fsts
dec
addl
xchg
repz
sbb
out
cmpb
inc
sub
and
mov
or
add
and
lods
mov
loopne
rorb
cmp
or
and
ss
mov
daa
pop
jmp
or
adc
jge
push
adc
in
push
cmp
data16
enter
and
jle
sub
ret
imul
shl
sbb
or
push
or
mov
inc
xchg
jo
add
xchg
cmp
repnz
mov
or
sub
mov
in
inc
mov
dec
pop
and
ret
loop
mov
orl
push
dec
sbb
pop
sbb
in
dec
and
ret
inc
pop
dec
testl
mov
jmp
jmp
pusha
leave
rcrb
ss
popf
dec
adc
cmpsl
sub
pop
pop
pop
out
decb
push
add
aad
ret
sbb
mov
push
ret
jne
xchg
popf
lods
movsl
inc
or
adc
inc
add
and
push
loopne
jno
or
mov
mov
or
xor
lods
mov
pop
mov
test
lds
rorl
mov
add
inc
cwtl
add
adc
shlb
xor
sbb
mov
add
mov
outsb
clc
test
add
cmp
cmp
sub
push
inc
dec
test
cmp
push
lcall
push
test
adc
inc
mov
mov
lock
push
test
popf
dec
push
mov
push
repz
adc
sbb
or
sub
adc
sbb
mov
jp
dec
popa
sbb
push
cltd
pop
add
sbb
pushf
xchg
and
inc
pop
or
test
in
mov
pop
dec
loopne
adc
inc
push
lods
and
mov
sbb
dec
outsb
and
xlat
xor
sahf
aad
and
jl
sbb
std
jge
xchg
testb
movsl
and
cmp
jle
ficoml
mov
test
dec
jl
sub
pop
xchg
inc
xor
aad
push
jo
loope
or
jge
sbb
lahf
outsl
jmp
pop
fcoms
mov
sarl
push
add
pushf
lods
jae
jmp
xchg
outsl
aam
aaa
ret
mov
int3
inc
sbb
pop
xchg
or
add
mov
add
add
push
cmp
loopne
outsb
shlb
add
or
movsb
pop
cmp
pop
and
xor
repnz
jge
mov
push
fsubrs
push
and
xchg
cltd
fs
fstl
addb
insl
and
inc
fdivrs
loop
ss
cld
inc
ret
mov
in
xchg
add
mov
or
xchg
or
jmp
lret
lret
incb
jno
xchg
pop
leave
andl
int3
add
test
adc
mov
lea
push
cmp
inc
imul
pop
addb
mov
aam
push
xchg
add
or
dec
pop
sbb
adc
mov
fdivs
mov
dec
dec
or
xchg
push
pop
adc
xchg
fwait
cmpsl
adc
mov
repnz
or
pop
movb
push
fwait
sbb
daa
stc
add
int3
xchg
je
mov
sbb
bnd
mov
adc
les
cmp
push
lea
push
or
scas
push
push
sbb
ret
movsb
add
or
xor
xchg
fucom
pop
sbb
xchg
sbb
cmpsb
cli
jmp
jmp
add
test
or
or
jno
in
jmp
push
repz
pop
sub
in
push
sbb
adc
mov
sbb
inc
orl
lcall
xorb
cltd
xor
aaa
pushl
add
or
cli
int
mov
sbb
movsl
out
add
andl
outsl
add
add
aas
ja
inc
adc
mov
dec
lods
cmp
icebp
cmp
fs
sub
sub
add
and
pusha
or
xchg
movsb
mov
adc
inc
js
push
cmpl
add
lds
cmp
inc
test
cvttps2pi
jmp
inc
pop
int
inc
add
xor
or
adc
push
or
faddl
rcll
bound
or
inc
imul
pop
and
nop
loopne
arpl
jecxz
add
jge
loop
jbe
int
cs
js
jle
or
loope
int
and
xor
shrl
cmpsl
and
adc
push
sub
sbb
sub
jle
xorb
leave
test
sbb
mov
inc
jo
stos
mov
lods
leave
or
mov
sub
and
push
movsl
and
int
lahf
pop
adc
add
or
or
adc
into
cwtl
xor
add
xor
and
dec
cwtl
aad
mov
mov
and
inc
aaa
xor
mov
mov
ret
adc
or
xor
test
sbb
dec
fwait
dec
or
ret
push
cwtl
lock
mov
inc
out
mov
mov
sub
fcomps
iret
sbb
rcrl
stc
or
hlt
adc
dec
js
pop
out
addr16
jo
mov
in
mov
jl
test
es
xor
and
sbb
mov
adc
movups
pop
push
or
jge
sub
sbb
add
add
add
jne
cmp
or
and
lock
sbb
pop
push
mov
jmp
push
xchg
sub
add
push
fimuls
sbb
xchg
mov
pusha
jl
inc
inc
mov
or
cmc
jae
hlt
push
jmp
or
inc
mov
fisubl
sub
shlb
pop
or
dec
push
xchg
jbe
or
xorl
dec
add
int3
adc
xchg
add
and
lea
iret
xor
add
cmpxchg
sbb
call
clc
sub
dec
in
jae
es
or
inc
pop
cmp
loopne
xor
xorb
inc
mov
jecxz
cltd
sbb
sub
pusha
lods
jbe
outsb
mov
and
clc
add
mov
add
jg
add
xor
push
mov
mov
add
fmul
cmp
inc
or
sub
or
gs
js
xor
push
sub
sti
mov
mov
mov
add
push
movsb
or
and
or
dec
imul
cwtl
xor
xor
pop
or
movsl
and
mov
pop
sbb
and
push
stos
in
pusha
nop
testl
cmp
cmp
clc
push
jecxz
cmpsb
push
push
movsb
lods
mov
mov
jb
inc
push
clc
sti
jb
lret
out
das
movsb
ds
dec
mov
testl
push
add
in
inc
mull
lock
push
sbbl
fadds
stc
das
or
cli
arpl
loop
repnz
xchg
mov
pop
push
sbb
fstpt
cltd
fs
insb
movsl
sbb
daa
jmp
push
adc
push
outsb
imul
enter
push
sti
fldt
pop
mov
bnd
fsubl
das
push
fwait
movsl
xchg
push
hlt
rcl
lcall
or
add
or
add
movsb
cmp
andb
repz
xor
loopne
jo
or
mov
pop
sub
testl
aad
adc
pop
or
mov
push
inc
mov
fisubl
hlt
dec
in
fwait
call
and
fsubr
push
jmp
mov
adc
cmp
mov
sahf
or
cmp
xor
pushf
ja
mov
sbb
icebp
pop
cld
or
loopne
mov
cs
xor
push
sub
test
fimull
pop
lods
adc
and
jbe
test
push
mov
sub
rorl
xchg
aam
and
push
xor
jns
je
sbb
mulb
aam
fldt
cmp
fidivrl
mov
jg
sbb
or
or
or
adc
xchg
mov
adc
and
cmpsb
push
fimuls
xor
clc
xchg
ds
jge
inc
fisubl
lea
xor
add
jg
stos
adc
mov
jne
and
test
lods
in
pop
out
sysenter
pop
mov
or
xor
mul
xchg
xor
aaa
inc
mov
in
dec
push
pop
mov
outsl
push
sub
scas
movsb
icebp
lret
es
adc
mov
loopne
outsb
add
nop
adc
sub
sbb
loope
push
dec
dec
andl
inc
addr16
add
mov
add
pop
xor
cli
sahf
lret
xor
cmp
adc
call
lods
jns
push
sti
push
pusha
or
pop
inc
dec
jae
js
cmp
or
push
or
ds
mov
cmp
pop
xchg
adc
lods
insl
mov
rolb
aad
add
pop
setne
movl
in
unpckhps
dec
mov
sbb
es
fs
aad
out
mov
test
or
ds
jo
and
jl
jne
fidivl
and
test
cmp
cltd
cld
sub
jmp
push
push
pop
notl
push
pop
pop
mov
int3
jge
inc
decl
xor
jge
xlat
mov
and
mov
fnsave
pusha
mov
jl
das
dec
cmpsl
call
arpl
addr16
push
out
xlat
test
mov
xor
mull
movsl
sti
jne
push
mov
shlb
pop
stos
roll
push
mov
mov
pop
adc
sbb
inc
arpl
sbb
mov
xchg
mov
mov
test
push
xchg
pop
adc
inc
push
hlt
add
clc
sbb
ret
inc
stos
cmp
push
pop
xchg
jae
jns
ret
sbb
xchg
cmp
inc
dec
sbb
enter
mov
shll
sub
xchg
and
ljmp
mov
cmp
inc
loopne
cli
mov
or
stos
mov
xor
and
mov
ja
cmc
xor
or
outsb
movsl
roll
mov
dec
dec
push
adc
cmp
clc
jle
call
lret
jbe
adc
push
and
and
add
pop
inc
loope
mov
jl
mov
call
mov
sub
imul
fsubrs
inc
mov
mov
adc
fs
pop
icebp
push
or
test
adc
adc
cmp
iret
or
add
cs
in
adc
sbb
sbb
and
bnd
or
or
xorl
lea
in
imul
jne
jmp
lcall
jge
push
lods
outsl
xchg
cmc
jne
inc
push
movl
je
into
mov
dec
pushf
inc
inc
inc
ret
jne
scas
sbb
fnstenv
das
pop
insl
dec
xsaveopt
xbegin
mov
xor
mov
mov
and
ds
jnp
out
sbb
xchg
test
pop
adc
mov
adc
pop
pcmpeqb
push
outsb
add
jp
ret
jmp
mov
inc
jne
mov
jbe
incl
cwtl
sub
dec
mov
add
mov
and
arpl
lods
inc
xchg
cwtl
cld
push
fsubp
xchg
nop
xchg
cs
out
lods
fcompl
cmp
and
les
nop
ud2
lret
add
push
and
aaa
aam
incb
lret
sbb
pusha
push
and
test
rclb
fisttpll
inc
cmp
ret
es
cmp
push
push
push
enter
es
adc
push
addr16
cld
push
mov
mov
enter
inc
mov
add
dec
rolb
testl
push
push
les
or
or
ret
sbb
lock
dec
adc
cli
mov
add
or
xchg
lock
push
sbbb
es
nop
imulb
ret
dec
add
add
add
or
adc
mov
xchg
test
jg
lds
flds
xor
dec
adc
cmp
lea
cmpb
and
dec
negl
xor
cmpsb
test
lods
or
dec
adc
inc
dec
cmp
jne
or
push
dec
adc
roll
insl
std
adc
jecxz
cmp
or
sub
pop
adc
sbb
sbb
lcall
nop
xchg
mov
js
shll
pop
add
int
test
les
inc
adc
inc
add
jb
mulb
push
or
lods
sub
xor
sbb
add
mov
xchg
adc
inc
mov
iret
mov
mov
add
fmul
mov
ss
adc
scas
lods
sub
jle
cmpl
mov
xor
cmp
pusha
lds
lods
cmc
repz
out
pop
push
hlt
mov
mov
in
adc
xchg
and
and
sti
int
push
jmp
mov
iret
mov
arpl
push
adc
stos
fldcw
pop
mov
dec
pop
jmp
fldl
adc
sbb
or
dec
scas
or
imul
ret
test
sub
push
lock
je
outsb
mov
fs
outsl
call
or
fdivl
add
jl
dec
loopne
movsl
mov
adc
mov
movsb
or
mov
lds
frstor
mov
repnz
pusha
inc
mov
and
sbb
inc
call
adc
ret
add
cmp
outsb
and
sbb
ja
push
push
mov
loope
lea
ljmp
cmpsb
jecxz
cli
rcrb
or
les
shlb
out
loopne
mov
and
test
mov
lods
sub
mov
jmp
test
dec
sub
jno
and
gs
popl
adc
inc
pop
pop
or
cld
inc
add
sub
lret
dec
xor
add
shll
push
jns
incl
mov
sbb
popa
hlt
sub
ret
dec
inc
xchg
adc
sub
andl
dec
sti
bswap
sub
mov
lar
mov
clc
jl
pop
test
sub
pop
mov
das
adc
movsb
popa
sub
sub
loope
add
int3
adc
adc
xchg
rorb
xor
adc
push
mov
pop
sbb
push
add
and
cmpsb
movsb
pusha
cmp
loop
enter
adc
xchg
sbb
mov
adc
or
push
push
inc
daa
pop
inc
fstl
xor
or
push
sbb
push
mov
jb
ljmp
mov
or
les
orb
mov
mov
in
cmp
or
push
int
fmull
nop
inc
or
repnz
outsb
dec
lock
inc
ja
fwait
bound
mov
xor
mov
js
cltd
mov
xchg
and
call
jmp
xor
sub
mov
mov
inc
leave
sbb
sbb
hlt
nop
xchg
jo
enter
dec
popa
adc
in
repnz
bound
addl
ljmp
push
test
add
imul
cmpsb
dec
push
push
inc
jp
gs
push
addl
stos
and
sbb
push
push
jb
sub
jp
add
mov
cs
pusha
data16
adc
dec
lock
je
mov
outsb
lock
ret
mov
adc
add
sub
in
push
sbb
nop
and
clc
dec
mov
and
mov
pop
nop
gs
outsl
push
lds
fistpl
dec
mov
pop
adc
xor
jne
pop
adc
cmp
adc
test
les
lea
and
or
fs
call
or
mov
mov
sub
adc
es
into
sti
add
es
add
adc
ljmp
rcrl
invd
jl
orb
les
mov
jbe
add
xchg
add
shlb
jl
push
movsb
pop
and
dec
aad
iret
dec
pop
lahf
push
cmp
xor
lods
sub
pop
pop
roll
push
fisubrl
push
add
outsb
sub
roll
pop
shrl
mov
movl
push
aas
add
cmp
outsb
add
rcrl
rol
js
andl
jmp
adc
rcrl
and
popa
push
mov
add
pop
imul
sbb
xchg
cmpsb
aad
inc
js
daa
popf
cmovb
pop
ret
xchg
xchg
and
aas
xor
or
cmp
insb
loope
push
je
push
movsl
pop
mov
pop
push
pop
cmp
or
or
push
rolb
adc
sbbl
in
fcompl
pop
sbb
jne
scas
and
adc
cmpb
or
push
andb
inc
sti
inc
sbb
push
or
pop
fs
add
pop
xor
jl
test
pop
stos
or
std
and
or
push
mov
or
cmp
sub
rorl
icebp
mov
into
fiaddl
jge
mov
add
mov
int
jge
sbb
xchg
sub
dec
xchg
into
les
fldl
fstps
and
fstpl
insl
imul
mov
out
fisubrl
mov
adc
add
gs
int3
dec
fmuls
mov
aaa
lock
and
outsl
addr16
cmp
pop
mov
loopne
inc
fmull
notb
mov
es
pop
sub
sub
fistl
inc
fcompl
iret
in
out
sbb
mov
add
xor
lods
lock
aaa
cld
int
fcomps
xor
mov
xorl
xchg
adc
lret
lods
adc
pusha
mov
rolb
push
ret
insl
lock
or
or
loope
add
lcall
mov
jno
mov
jne
ljmp
clc
fimull
call
xchg
push
mov
addb
scas
mov
or
mov
mov
mov
lea
je
sub
mov
push
stc
rcr
adc
inc
shl
jbe
adc
xchg
xchg
sbb
push
aaa
or
lea
adc
xor
mov
call
in
lods
je
ds
push
lods
dec
dec
addr16
dec
out
fs
dec
scas
rcr
jb
mov
push
pop
js
fisttpl
mov
cmp
adc
cmp
je
mov
pushf
or
dec
movsl
jb
mov
cmc
inc
add
movsb
push
enter
mov
ljmp
push
add
pop
jb
add
je
push
xchg
xchg
int3
dec
subl
sbb
ja
pushf
mov
jle
fistl
adcb
xchg
dec
adc
adc
int3
sbb
movsl
adc
or
test
in
nop
push
icebp
lcall
adc
out
pop
xchg
jnp
xor
mov
sub
sbb
push
lret
out
aas
int3
fnsave
scas
push
pop
push
sub
cmp
in
out
in
cmp
std
test
dec
int3
pop
test
push
pop
jbe
dec
fistpl
add
push
dec
or
das
cli
fcmove
mov
pop
test
adc
xor
outsb
xchg
bound
enter
or
enter
or
or
cmc
add
int3
fisttpll
jnp
insl
jmp
push
dec
cltd
adcb
shlb
test
pusha
sub
jp
fimull
cmp
sbb
mov
pusha
or
sarb
add
mov
pushf
daa
test
fistl
mov
pop
mov
add
push
push
jne
pop
in
or
ds
mov
sub
or
pop
mov
inc
or
adc
cmpsl
adc
add
cmp
cwtl
mov
lcall
mov
sbb
mov
mov
or
sub
outsb
daa
in
add
dec
mov
jne
sbb
lock
stc
or
sahf
push
punpckhdq
jbe
and
or
fcoms
push
out
or
push
outsb
sbb
inc
sbb
imul
mov
cltd
hlt
dec
jne
addb
add
add
and
ljmp
cmp
daa
and
cmp
adc
add
or
xchg
mov
loopne
repz
in
fadds
push
push
adc
jge
cmp
adc
rorl
or
ret
sbb
push
cmp
jo
test
sbb
ret
gs
dec
push
add
add
mov
and
fldl
xchg
popa
sbb
add
cmpsl
sbbb
xor
jg
jmp
mov
jmp
lods
rclb
fcompl
in
imul
and
hlt
mov
jle
push
shrb
xor
push
outsb
mov
test
mov
inc
fcoml
addb
add
rclb
inc
adc
pop
push
push
pop
pop
fists
les
movsl
enter
sub
gs
insl
and
pop
data16
and
in
js
push
pop
inc
sub
arpl
jp
mov
xor
cmp
inc
or
add
lea
aad
out
mov
pop
or
dec
mov
lret
pop
nop
orb
incl
add
andb
cs
cmp
inc
and
je
add
shl
mov
lods
imul
mov
sub
mov
lods
mov
adc
mov
les
and
inc
cwtl
add
iret
add
insb
push
das
jo
xor
mov
mov
sub
jge
jp
and
cmp
and
dec
dec
in
lock
inc
enter
adc
push
fdivl
jmp
cmp
and
sbb
in
jmp
sbb
xchg
mov
int3
mov
mov
sbb
fcoml
cmp
in
mov
ret
add
dec
inc
dec
adc
mov
dec
and
rcl
adc
lea
cmpsl
jnp
adc
or
loope
shrb
arpl
fs
cld
pop
sbb
push
fisttpll
cmp
out
scas
add
dec
inc
lea
mov
cmp
mov
ret
push
push
ror
por
dec
loope
pop
push
or
sahf
push
push
jo
push
inc
popf
mov
sbbb
subl
jo
push
adc
sub
mov
sbb
pop
xor
cmp
cmc
call
dec
out
es
adc
ja,pn
shlb
ret
rep
inc
test
aad
pop
xor
shll
jge
push
xchg
dec
xchg
push
movsl
pop
hlt
inc
inc
stos
push
and
nop
xor
cmp
add
inc
pop
xchg
pusha
adc
mov
jp
adc
mov
shll
fs
mov
or
test
cmp
pop
dec
je
pusha
clc
cmp
test
push
testl
or
cwtl
rolb
jge
jecxz
jbe
clc
and
and
dec
ret
jmp
aam
and
out
test
adc
or
xchg
sbb
xor
sbb
aam
pop
bound
sbb
jne
or
out
hlt
add
mov
les
sahf
jne
scas
mov
dec
test
scas
movsb
xorb
adc
andb
adc
or
shll
add
dec
push
push
and
add
fs
pop
ret
push
std
lea
push
jecxz
daa
sbb
addb
push
add
sub
sbb
testb
and
js
push
cmc
mov
add
rorb
mov
xor
lock
xorb
xor
test
out
sbb
and
sub
jg
orb
cmc
in
push
cmp
sbb
sbb
test
incl
pop
pop
add
xor
or
inc
loopne
mov
cmc
add
into
sbb
lods
loop
jge
mov
push
push
enter
pop
lahf
jp
ljmp
mov
ljmp
bnd
nop
or
mov
loop
test
lods
out
fisubl
and
pop
mov
cli
inc
sbb
xchg
mov
adc
out
mov
in
dec
call
dec
loope
jne
or
and
or
jbe
jo
xor
icebp
xor
push
sub
jecxz
mov
outsl
dec
xor
inc
sti
adc
add
cmp
jmp
adc
jl
jno
dec
and
lods
mov
std
movsb
testl
popa
std
test
and
or
jns
popf
rcr
sub
rcr
jl
lahf
sbb
iret
mov
mov
push
mov
inc
adcb
or
inc
push
or
test
inc
inc
enter
call
cltd
adcl
and
outsl
loopne
daa
dec
add
sahf
jl
xor
inc
dec
sti
cmp
push
cmp
cs
cmp
fistps
mov
sbb
lock
outsb
add
pop
sahf
sbb
add
push
shll
inc
cmc
mov
inc
cmp
lods
inc
adc
add
jmp
push
pop
xchg
ss
jo
mov
lahf
push
add
or
cmpb
sahf
push
adcl
add
mov
and
adc
or
sub
in
jmp
ds
loope
testl
fsubr
mov
sbb
cs
dec
or
sub
mov
and
aas
movsb
dec
or
mov
pop
xor
ficoml
in
nop
add
push
add
in
aas
loopne
pop
dec
inc
push
cmc
or
fcmove
shlb
dec
aas
in
inc
popa
and
cwtl
dec
mov
pop
inc
mov
in
mov
bound
cmp
jl
sub
pusha
cmp
mov
jg
not
push
loopne
mov
and
push
aas
mov
lock
ds
mov
test
dec
pusha
scas
popa
lods
push
dec
mov
cmp
mov
inc
jl
xchg
xchg
dec
inc
mov
dec
dec
cmp
in
test
aas
jmp
sti
adc
and
cmp
xchg
xchg
fnstenv
push
cmp
fs
out
arpl
push
dec
mov
daa
insl
ds
in
in
bound
pop
rcrb
inc
xchg
pop
and
jno
jbe
pop
mov
and
in
dec
ret
test
popf
push
lea
fisubrl
call
outsl
mov
cmp
pop
in
lret
mov
adc
dec
mov
in
inc
lahf
mov
sbb
cmp
fadds
mov
jp
or
pop
loopne
dec
out
sub
xchg
mov
outsl
mov
js
and
iret
inc
inc
insb
leave
in
in
jg
jmp
enter
jo
jge
test
rorb
nop
cltd
pop
pop
mov
lahf
jl
pusha
je
int3
fnstenv
imul
pop
xchg
pusha
cltd
mov
add
push
inc
pop
call
in
inc
inc
dec
cs
pop
leave
test
dec
and
inc
add
in
inc
pop
cmp
push
cs
or
mov
jne
push
repnz
sarl
mov
and
inc
jg
inc
pop
and
stos
add
jg
je
imul
mov
mov
nop
popa
or
inc
aas
pop
push
xor
test
pop
das
adc
dec
or
mov
pop
or
adc
ss
pusha
pop
outsl
adc
shlb
mov
xchg
int3
inc
sar
shlb
mov
jmp
jo
js
daa
sbb
dec
dec
addb
inc
jg
mov
sub
call
pop
adc
cmp
mov
and
loopne
inc
rcll
cmp
aas
rorb
jbe
leave
lock
das
dec
add
mov
pop
dec
in
rcrb
aam
cmpsb
push
into
jg
dec
sbb
cmp
imull
dec
pusha
ja
imul
and
jg
popl
jmp
inc
out
bound
sbb
movsl
movsl
out
sub
enter
movsl
les
adc
mov
pop
add
dec
andl
cwtl
dec
jg
imul
jg
cmp
aas
test
adc
xchg
sbb
int3
aas
fcompl
punpcklbw
cs
cmp
aas
pusha
jg
mov
sub
inc
fcoms
in
mov
add
scas
test
out
mov
daa
daa
cwtl
mov
out
pop
xchg
dec
jo
cwtl
pop
nop
psubusb
push
xor
daa
sub
add
dec
aas
mov
cmpb
enter
sbb
cld
clc
add
lods
cmc
or
insb
pusha
das
pusha
jne
jne
outsl
push
mov
mov
repz
imul
pop
and
adc
pop
sbb
pop
sub
rol
sub
add
ja
mov
xor
nop
add
dec
pop
jo
cmp
adc
add
push
push
ss
add
clc
outsl
enter
or
sbb
cmp
fadds
je
cmp
mov
adc
push
fs
jl
dec
nop
mov
push
mov
inc
push
les
push
push
sbb
dec
sub
dec
sbb
out
sbb
aas
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
enter
in
sbb
stos
bound
inc
sti
and
or
or
jns
enter
ror
xlat
lods
mov
scas
cmp
xchg
push
pop
lock
and
scas
fbstp
lahf
inc
int3
adc
into
lahf
call
pop
fsubrs
push
lds
push
pop
xchg
pop
and
ds
push
nop
loopne
mov
dec
sbb
arpl
cmp
pop
pop
cmp
scas
cwtl
addps
add
mov
adc
out
sub
mov
inc
mov
mov
call
xchg
dec
sbb
je
push
popf
test
dec
dec
cmp
pusha
push
mov
popf
mov
push
lods
add
cmpl
lock
xor
mov
mov
pop
sbb
rcrl
sbb
jmp
fiaddl
loopne
push
rol
cmp
call
int3
cli
mov
xchg
xor
out
and
adc
jle
sub
mov
mov
cmp
outsl
push
mov
outsl
jg
outsb
inc
push
add
xor
mov
adcb
add
mov
je
mov
shll
push
push
insl
fsubrl
push
jle
int3
mov
cmp
jb
mov
test
bound
das
loopne
int3
pop
flds
and
inc
rorl
sbb
push
inc
or
pop
jg
test
jle
lods
push
clc
or
jg
mov
mov
pop
incl
add
cmpsl
adc
add
mov
in
lret
das
sbb
mov
adc
cmp
xorb
adc
mov
dec
cmpsl
pop
xorb
rorb
repnz
mov
imul
and
nop
aas
inc
add
addb
and
pop
mov
cmp
aas
pop
pop
fisubl
cld
push
dec
push
and
clc
mov
push
push
pop
mov
nop
fsts
or
mov
pop
sbb
fsubl
cwtl
sub
pushf
lahf
out
mov
jmp
lcall
adc
add
mov
in
fcomps
sub
push
cmp
mov
and
adc
ret
sarb
push
rolb
inc
pop
addr16
inc
call
pop
xor
inc
xchg
lock
gs
mov
inc
cwtl
xchg
cld
xchg
pop
mov
jmp
pop
xor
loopne
test
popa
aas
xchg
dec
mov
sbb
insb
jl
pusha
out
adc
pop
mov
fdivr
push
xchg
mov
inc
sub
dec
push
bound
adc
daa
mov
mov
mov
mov
adc
adc
cmp
arpl
js
lods
pop
add
dec
aas
call
movsb
enter
fcmovne
sar
mov
cmp
dec
repz
pop
xchg
jle
add
sti
inc
dec
sti
xor
roll
sub
nop
xchg
cmp
je
mov
enter
in
sub
fs
fdivr
pop
sbb
leave
mov
scas
push
sub
fwait
xor
sub
dec
addb
cmp
push
cwtl
xor
fs
testb
sbb
idiv
aam
pop
sbb
add
add
add
lds
sbb
les
sub
aaa
cmp
js
pop
cmp
add
nop
add
push
roll
add
pop
add
in
push
ss
aaa
rcrb
or
sbb
pusha
pop
dec
add
les
pop
fmuls
fsubrp
pop
fsubr
leave
cmp
hlt
adc
or
push
pop
es
shlb
in
test
and
sub
mov
and
cmp
mov
and
mov
mov
xor
fsubs
add
inc
xor
aas
sub
pop
mov
push
js
mov
enter
adcl
sub
movsl
es
cmp
outsl
enter
in
xchg
loopne
rorb
mov
roll
jg
adc
or
xchg
mov
mov
ds
sub
xchg
jbe
sub
mov
adc
lock
xchg
jne
mov
in
enter
loope
pop
mov
inc
mov
cwtl
mov
mov
push
nop
pop
pop
sub
aas
out
push
mov
dec
aas
int3
add
adc
xor
call
fwait
lahf
movsb
out
sub
mov
fistps
rolb
sub
fstpt
pop
adc
sbb
jmp
imul
enter
adc
mov
fs
bound
xor
test
outsb
and
nop
aas
and
xor
mov
leave
sbbl
or
stos
jle
mov
sbb
push
nop
nop
insl
mov
scas
cwtl
xlat
inc
xchg
dec
pop
sbbb
mov
inc
pop
mov
cmc
popa
out
outsb
call
fmuls
hlt
sbb
aas
insb
std
xor
sbb
inc
addb
mov
test
bound
pop
xor
xchg
pop
shlb
mov
outsl
mov
fmuls
mov
dec
xchg
enter
aam
mov
inc
fdivrs
pop
imul
movsl
mov
das
shlb
bound
xor
scas
jb
ret
add
call
dec
in
adc
cmp
mov
mov
rclb
sbb
adc
nop
mov
loopne
jbe
loopne
or
je
arpl
add
lods
mov
xchg
nop
mov
add
pop
adc
mov
pop
dec
pop
push
pusha
sub
jne
dec
cmp
andb
pop
or
aas
sub
mov
in
por
test
fwait
push
mov
jbe
dec
mov
and
aas
lahf
prefetch
pop
in
push
push
cltd
aas
test
insl
rclb
rclb
pop
mov
dec
mov
movsb
imul
inc
dec
sub
adc
shlb
pop
adc
mov
cwtl
ret
ja
pop
xor
es
inc
adc
pushf
dec
sbb
push
popa
or
mov
dec
adc
xor
push
pop
sub
popa
shrb
mov
sub
cltd
mov
lahf
adc
pop
popa
jnp
sub
lahf
jo
test
jg
adcl
xchg
jnp
jo
mov
pop
pop
imul
or
push
sub
orb
movsb
lods
aad
in
pop
and
aas
movsb
dec
pushf
dec
or
test
inc
or
shlb
or
mov
loopne
lock
stos
mov
leave
mull
lock
inc
pop
pop
inc
jne
ret
cmp
pop
add
xor
xchg
sbb
pop
push
push
and
and
sarb
mov
sbbl
inc
push
mov
je
adcb
jge
cwtl
jge
shll
cmp
pop
mov
inc
jle
call
sbb
adc
lods
das
lods
pop
xor
mov
mov
stc
scas
add
ljmp
out
rcr
fbld
jg
inc
dec
cs
pop
inc
lds
mov
dec
in
mov
mov
insb
push
xchg
fdivs
add
push
sbb
xor
test
xchg
jl
roll
sbb
mov
xor
add
add
mov
jb
pop
dec
orb
test
sbbb
dec
jp
comiss
movsb
popf
fmull
lahf
in
in
dec
pop
fwait
jg
lahf
test
push
cmp
popf
push
xor
xor
adc
sbb
lcall
inc
adc
and
mov
and
cltd
out
mov
test
push
or
popf
or
cmp
xchg
cld
adc
in
sarb
test
adc
push
or
imul
mov
adc
movsb
and
jmp
and
mov
in
add
loopne
sbb
sub
mov
mov
cs
enter
insb
inc
xchg
arpl
es
fidivs
aas
adc
test
xor
test
sbb
js
sbb
add
js
inc
jae
xor
xchg
cmpsl
cwtl
ja
sub
push
roll
aaa
xor
add
mov
ret
inc
sbb
lcall
in
adc
inc
das
mov
mov
pusha
jg
or
jg
xchg
pop
aas
jl
rclb
enter
in
pop
adc
sahf
mov
pop
lock
pop
sbb
filds
pop
pusha
imul
iret
push
and
enter
jecxz
fisttps
push
push
int3
fistps
fcmovu
adc
sub
cmp
mov
orb
jb
lock
test
push
push
dec
int3
lahf
out
es
adc
aaa
xchg
mov
movsb
jge
int3
push
dec
lahf
call
mov
call
or
cmp
imul
subl
mov
xor
adc
iret
pop
mov
adc
mov
test
mov
xchg
addb
mov
mov
xor
jns
cmpsb
pop
in
mov
aas
dec
ficoms
xchg
in
in
sbb
cmp
or
push
cmp
and
pop
jb
sbb
aas
pop
lret
cwtl
xchg
loopne
adc
add
mov
aas
add
xchg
xchg
mov
xchg
sub
push
mov
mov
push
adc
lock
aas
in
je
mov
ja
inc
scas
lds
sub
push
inc
pop
fsubs
aas
rol
mov
int
mov
xchg
es
or
sbb
imul
jg
out
pop
imul
adc
jp
daa
fdivl
or
fmuls
xor
daa
xchg
enter
push
mov
xchg
and
mov
dec
pop
sub
repnz
cmpsb
cmpsl
pop
dec
pop
adcb
sar
and
dec
and
bound
xchg
add
out
call
test
addr16
insl
xchg
cmpsb
xchg
sub
add
jno
lret
inc
sub
ja
decl
daa
push
ds
sub
and
jne
test
daa
repnz
push
inc
adcb
cmpsb
adcb
xchg
lock
inc
iret
lret
add
daa
sub
add
sbb
pop
jg
lock
aad
in
mov
pop
cwtl
inc
jb
add
add
xchg
cltd
jecxz
sub
das
js
cmpsl
in
cmpsb
popf
mov
xchg
xor
or
insb
stos
test
lcall
mov
js
mov
test
test
daa
inc
sub
xchg
xchg
add
mov
adc
ret
in
ja
pushf
addr16
mov
lock
push
ja
out
push
popf
movsl
cltd
insl
inc
scas
fdivr
sub
scas
test
popf
in
dec
push
or
xchg
pop
adc
dec
ja
pop
dec
jb
leave
mov
jbe
sub
dec
xor
xchg
outsb
push
add
xor
das
ret
sbb
loopne
call
inc
call
mov
daa
imul
jns
daa
add
lock
mov
add
sbb
cmp
sbb
orb
adc
lods
inc
aaa
adc
push
sbb
aaa
mov
pushl
push
fidivrl
push
js
pop
pop
xchg
loop
dec
dec
movsb
add
adc
jne
inc
push
or
aaa
cmp
add
xchg
daa
mov
mov
ljmp
inc
cmp
outsl
in
add
aas
ja
and
es
or
push
daa
nop
xchg
ficoml
xor
mov
daa
mov
mov
adc
inc
test
and
and
imul
xchg
jge
pop
bound
js
cmp
stos
jg
in
stc
push
out
cmp
insl
adc
adc
pop
aas
pop
push
jbe
jg
stos
out
mov
cmp
push
stos
mov
pop
scas
out
sbb
cmp
lods
insb
pushf
adc
jb
inc
pop
sub
dec
rolb
jge
fs
notb
data16
pop
push
dec
es
rol
mov
inc
mov
test
outsb
xchg
pushf
aaa
mov
shl
fs
xchg
arpl
push
or
push
pusha
lods
decl
push
iret
mov
lods
xchg
dec
cmpsb
pop
scas
pop
mov
mov
lahf
nop
sub
mov
dec
pop
xchg
mov
sub
insl
fcoms
mov
add
adc
nop
lret
and
mov
cmp
repz
testb
jns
mov
add
push
loopne
cli
iret
repz
adc
adc
push
sub
cmp
iretw
imul
mov
push
sbb
or
add
fucom
jns
out
mov
jns
out
pop
inc
cmp
es
sarl
or
aam
lret
repz
repz
cli
or
ds
xor
mov
push
xchg
mov
ss
jle
cmp
jnp
mov
xchg
sahf
mov
cmpsl
stc
cmp
clc
add
or
out
sahf
sbb
ss
push
insb
jnp
out
jle
pushf
stos
bound
push
push
cmp
adc
aad
stc
cmp
cmp
fdiv
add
out
sahf
cmpsl
or
sub
sahf
out
sahf
pop
insb
jl
lcall
mov
aam
ret
xor
mov
mov
out
push
push
cmp
iret
push
push
sahf
out
sahf
cmpsb
cwtl
test
pop
jns
out
dec
inc
xor
repz
out
hlt
into
loop
mov
mov
mov
repz
inc
sub
or
cmpsl
stc
hlt
int
ljmp
ret
xchg
cmp
fs
inc
sub
cld
sahf
out
lcall
jns
out
cwtl
mov
out
sahf
out
xor
adc
iret
repz
out
mov
mov
nop
test
pop
repz
repz
ss
jns
imul
in
mov
les
out
jl
pop
dec
int
cmp
and
or
mov
cmp
enter
adc
push
mov
iret
repz
adc
xor
dec
pop
cmp
repz
sbbb
call
xor
jns
out
dec
push
jns
cwtl
test
fsubr
cld
neg
sarl
push
testl
jns
orb
push
adc
out
xchg
adc
sbb
jns
out
pop
push
mov
cmp
mov
mov
push
inc
cmp
dec
bnd
decb
out
sahf
ja
cs
fs
out
sahf
jbe
mov
out
aam
repnz
repz
repz
sub
dec
pusha
cmp
cmp
fadds
int3
shl
iret
repz
xchg
xchg
cmp
bound
cmp
sbb
out
cmp
add
ret
ja
out
mov
jle
repz
push
push
inc
push
sub
jns
out
aam
fmul
mov
cmpsb
xchg
jle
push
inc
negl
adc
jns
outsb
bound
inc
xor
lahf
out
sub
test
repz
repz
mov
cmp
nop
xorb
dec
ds
repz
sub
or
sarb
imul
fidivrs
out
subb
push
ja
out
lock
mov
jns
imul
cs
repz
pushf
push
mov
cmp
ds
jbe
and
dec
sahf
out
iret
pop
js
movsb
mov
repz
jl
rolb
push
xchg
repz
xchg
movsb
mov
into
in
sahf
cmpsl
stc
cmp
or
and
jns
out
push
out
sahf
out
enter
mov
mov
push
push
out
sahf
out
insb
jle
cmpsb
mov
adc
lret
div
jns
cli
mov
dec
xor
jne
jb
dec
pop
adc
movb
push
je
jns
dec
out
jl
jae
cmp
cmp
xlat
cmpsb
push
push
faddp
and
cmp
outsb
push
fidivrs
test
into
int3
ja
sahf
cmpsl
push
jp
lods
jle
or
sti
add
xchg
repnz
rorl
dec
test
push
push
or
es
repz
out
inc
es
push
hlt
aaa
jo
push
in
sahf
out
lcall
cmp
sarl
adc
sub
repz
repz
push
push
push
push
iret
repz
push
push
pop
pop
pop
pop
cmp
repz
pop
pop
pop
pusha
repz
repz
bound
gs
repz
addr16
imul
cmp
insl
outsb
outsl
jo
cmp
repz
jae
jne
repz
jbe
js
jp
cmp
repz
jge
jg
repz
repz
xchg
iret
repz
lea
iret
repz
xchg
xchg
xchg
xchg
iret
repz
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
mov
iret
repz
mov
add
cmp
sub
dec
pop
jns
out
insb
jp
cwtl
mov
jns
out
int
out
clc
iret
repz
or
pop
cmp
repz
je
cwtl
cmpsb
repz
repz
fldl2e
idivl
repz
push
incb
and
cmp
repz
addr16
or
cmp
mov
iret
repz
lret
in
sahf
out
repnz
adc
xor
jns
out
push
arpl
sahf
out
sahf
lahf
mov
fsubr
stc
cmp
sarl
sbb
iret
repz
push
pusha
outsl
test
repz
xchg
cmpsl
mov
fsubrp
ja
imul
add
gs
call
fs
jo
adc
fs
insb
sbb
xchg
push
ret
inc
jb
pop
mov
jmp
gs
outsl
outsl
insb
push
push
outsb
js
push
ja
push
jb
arpl
jae
inc
imul
outsl
dec
sub
test
xor
dec
jae
imul
outsl
ja
jb
jo
inc
arpl
pusha
gs
outsl
outsb
je
inc
fxch
out
gs
jp
pop
push
aam
mov
dec
daa
cmp
sbb
dec
imul
je
jns
inc
gs
push
popa
jb
test
jle
insl
and
fs
pop
mov
shll
ret
push
sbb
dec
popa
jns
gs
aam
bound
pop
jo
into
in
push
imul
arpl
push
mov
gs
je
popa
lcall
inc
inc
inc
jne
xchg
dec
pushf
bound
xor
fiadds
fs
jne
add
push
push
outsl
xor
loope
imul
sub
shl
idivl
addr16
gs
xchg
aas
shrl
dec
test
cs
mov
sub
push
and
push
jne
cmp
xchg
test
outsb
sub
sbb
jp
push
je
popa
or
in
outsl
xor
inc
ret
push
push
enter
outsl
or
fdivs
out
adc
push
mov
xor
xor
test
dec
or
xchg
mov
adc
gs
sub
push
outsb
insl
pusha
mov
sbbl
popa
jmp
sbb
fs
push
cmp
inc
insl
jo
jb
xchg
dec
sbb
ljmp
insb
fs
sub
mov
inc
je
dec
inc
cmp
insl
cmp
inc
inc
xchg
sti
push
rorb
jl
or
push
popa
imul
push
pop
es
bound
mov
sub
push
ret
fs
fisttpl
dec
rorl
jbe
and
pop
sbb
sub
mov
es
call
insb
pop
shlb
ret
add
dec
subb
xor
push
jo
test
mov
sub
mov
xchg
dec
lods
lcall
and
in
jb
mov
dec
xchg
fadds
push
imul
xor
sbb
adc
mov
inc
push
add
add
cmp
add
shlb
mov
dec
dec
aas
xor
jnp
inc
daa
xor
icebp
outsb
pop
inc
inc
dec
notl
sbb
inc
pop
nop
push
pop
adc
idivb
push
add
or
sbb
pop
mov
inc
shrb
add
pop
mull
or
negl
stos
mov
lret
add
xor
inc
fmull
std
movsb
sbb
add
decl
xor
data16
xor
cmp
cmp
cmp
ss
popa
data16
ljmp
aaa
test
mov
lret
rol
cmpsl
mov
mov
lcall
je
mov
adc
push
pop
negl
push
loopne
add
loopne
jnp
fnstcw
push
mov
pop
inc
push
dec
push
ja
jge
shlb
xor
fdivrl
fsubp
push
push
xor
xor
outsb
xor
rclb
out
fsubp
mov
cmp
lahf
inc
ja
jnp
jg
outsb
inc
mov
push
nop
inc
push
cs
jnp
mov
mov
jbe
push
data16
lahf
testl
push
loopne,pt
pusha
cmp
sahf
out
imul
das
scas
xor
fdivrp
fidivrs
push
xor
inc
aaa
inc
inc
jl
xor
inc
aaa
rcll
jp
inc
inc
xor
incl
mov
add
jo
inc
add
cmpsb
rol
mov
mov
mov
mov
pushl
aaa
arpl
aaa
lcall
push
push
mov
sbb
xor
xor
add
clc
imul
bound
fs
gs
gs
cmpsb
js
adc
and
ss
or
aad
mov
sarb
inc
cmp
xchg
mov
mov
add
mov
into
les
sarb
lret
lock
cmc
sarb
fidivl
add
cld
inc
push
roll
or
add
jl
lods
rcr
xchg
add
xor
mov
repz
and
roll
inc
outsl
jno
enter
or
pop
lock
mov
das
adc
push
xor
popf
jo
push
cs
inc
adc
lock
scas
negl
test
adc
add
jns
fwait
mov
inc
das
sbb
pop
nop
out
inc
adc
sub
push
inc
nop
mov
icebp
add
pusha
out
cmp
inc
shlb
cmp
aas
testl
inc
xchg
shll
and
add
mov
inc
inc
push
mov
arpl
cmp
inc
fildl
lcall
loope
mov
inc
push
inc
inc
cltd
dec
ss
das
cmp
dec
pushw
cmpb
repz
data16
mov
fiaddl
ja
movsb
rorb
add
mov
fs
daa
pop
sbbb
repz
mov
daa
out
sbb
icebp
ja
push
or
or
lcall
adc
repnz
orb
or
clc
aas
sbb
pusha
scas
jmp
push
xor
pop
cli
mov
mov
lods
imul
and
sbb
push
sbb
jae
daa
cld
and
test
gs
mov
or
and
daa
sbbl
adc
push
mov
aad
add
loope
jg
and
add
and
clc
jne
je
outsb
lahf
icebp
xor
add
cmc
or
repz
shlb
addb
push
mov
dec
cmc
fadds
add
add
adc
inc
or
pop
adc
cmc
cmp
adc
popa
jb
out
and
insb
add
jmp
mov
push
insb
ret
push
inc
jb
sub
jmp
or
imul
mov
shrl
dec
jns
dec
inc
inc
outsl
stos
imul
add
add
push
loope
xor
sub
or
loop
lret
roll
adc
jl
pop
inc
jmp
int
sub
push
jb
add
daa
stc
push
jb
enter
sub
inc
cmc
call
mov
sti
adc
pop
decl
mov
popa
outsb
jae
xchg
lds
cs
divb
adc
jmp
jge
les
clc
insl
insb
insb
push
out
pop
mov
add
push
out
jns
pop
adc
push
mov
cmp
lock
pusha
push
and
inc
subb
in
mov
arpl
jae
pop
mov
gs
inc
push
gs
push
outsl
jb
fs
add
outsl
outsl
imul
outsl
dec
imul
push
das
das
ja
arpl
push
hlt
jge
pop
jp
arpl
das
aas
ja
push
dec
push
dec
jae
dec
add
mov
pop
nop
add
outsb
popf
mov
mov
mov
test
mov
int
mov
imul
out
arpl
add
push
and
outsb
and
or
push
and
cs
cld
std
mov
mov
pop
inc
roll
push
sbb
cli
mov
clc
scas
stc
ds
jp,pt
sti
push
imul
lock
es
push
out
out
push
imul
or
mov
dec
add
loopne
in
rcll
and
add
or
adc
mov
das
lds
outsl
pop
add
add
mov
inc
pusha
sbb
push
add
outsl
js
insl
or
mov
or
jo
push
out
adc
and
push
sub
cs
push
orb
add
add
js
or
mov
mov
ljmp
dec
pop
movsl
mov
dec
and
xor
js
xchg
or
sahf
jae
arpl
xlat
inc
mov
or
mov
adc
jb
lahf
push
push
push
shrb
mov
inc
fnsave
cmp
decl
push
call
icebp
in
adc
or
mov
push
mov
je
add
fistpl
test
mov
rol
call
adc
scas
add
fiadds
push
loope
dec
movsb
fldcw
inc
out
out
insl
inc
jmp
fidivrl
dec
fdivrl
idiv
shll
subl
add
or
and
and
aaa
data16
icebp
and
push
and
and
rclb
sahf
or
cld
aas
and
popf
out
cmp
mov
xor
into
add
call
push
dec
jmp
call
movsl
ja
dec
jb
push
daa
aas
xchg
fs
add
mov
push
mov
sub
ljmp
mov
popf
adc
loope
mov
pop
in
or
sbb
sbb
pop
or
pop
inc
fnstsw
lcall
ficoms
adc
cmp
jl
sbb
push
gs
ficomps
shlb
inc
xchg
xor
cld
mov
pushf
and
pop
dec
ret
mov
mov
rol
out
imul
push
cmpl
add
in
or
test
subl
jmp
xchg
insb
xchg
sbb
sbb
rol
or
cmpsl
inc
insb
or
in
and
adc
cmpsl
mov
lahf
int3
int3
push
movsb
test
or
push
sub
inc
or
cmp
mov
cmp
mov
ret
ret
adc
movsl
or
popf
jbe
outsl
stc
push
out
or
insl
add
out
sbb
and
push
xor
mov
iret
repz
mov
adc
fstps
push
ds
sub
dec
mov
or
test
mov
orb
inc
ja
jle
rclb
pushl
adcl
adc
outsb
imul
add
insb
adcl
ret
add
fs
jae
imul
dec
pop
inc
jo
pop
arpl
imul
pop
add
and
arpl
pop
push
bound
lods
inc
push
aaa
xor
jge
daa
imul
outsb
dec
mov
sbb
inc
imul
aas
adcb
jae
dec
inc
push
dec
inc
dec
sldt
adc
add
add
add
mov
inc
popa
fidivrs
test
push
add
inc
sbb
push
enter
dec
das
fsubr
and
enter
inc
or
andb
ja
xlat
push
sub
pop
push
repz
pop
nop
inc
mov
shll
stos
add
pop
add
or
jb
out
lret
popa
add
imul
mov
and
add
cmp
and
filds
add
add
pop
jae
neg
neg
imul
ds
adc
out
lret
mov
imul
inc
pop
daa
into
movsb
jnp
mov
adc
insl
out
jnp
mov
jae
jne
arpl
and
xorl
jae
sti
fcmovb
imul
jl
shll
je
push
jecxz
mov
dec
je
out
pop
jb
jbe
subb
aaa
insl
lahf
jbe
push
pop
iret
jnp
sub
add
pop
sar
cmp
inc
sub
add
jbe
xchg
pop
data16
rep
dec
stos
or
xchg
sysret
adc
jae
jb
sbb
and
out
sbb
outsl
fimuls
subl
popa
xor
pop
push
sbb
pop
daa
out
mov
arpl
push
testb
xchg
rcrl
cld
sahf
adc
push
or
dec
push
divb
dec
mov
sahf
fimuls
jns
jle
jmp
cmpsl
sub
xor
sarl
and
inc
outsl
xorl
daa
mov
pop
scas
scas
and
sbb
pushw
imul
mov
xchg
pop
pop
call
scas
ret
pusha
or
ja
sub
jecxz
in
arpl
jnp
fisubrs
pop
hlt
loope
out
lret
popa
scas
arpl
cmp
mov
and
jnp
xchg
or
outsb
jns
jmp
pusha
jmp
insl
mov
dec
sub
mov
in
cmp
adc
iret
jnp
arpl
mov
imul
out
pop
stos
push
idivb
scas
les
sahf
push
arpl
subl
insl
jecxz
loopne
ret
push
jns
xchg
sub
dec
adc
cs
sbb
das
pop
or
daa
adc
fistpl
adc
jne
or
pop
jp
lods
sbb
mov
sbb
jo
sbb
push
es
rorl
adc
dec
pop
or
adc
sbb
and
add
xor
dec
xor
popa
xor
jno
pushl
jge
mov
xchg
xor
mov
shll
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
xor
sti
pop
repz
xor
inc
xor
push
xor
mov
test
lret
xlat
ror
loope
mov
xlat
mov
pop
lock
clc
cmp
int
cli
iret
sbb
into
mov
mov
pop
mov
negl
and
inc
or
fs
sbbb
enter
lret
mov
dec
dec
mov
into
repz
mov
mov
repnz
mov
arpl
mov
mov
ret
sub
shll
mov
inc
fldt
mov
into
iret
mov
mov
leave
or
outsl
add
sub
rcl
cs
pop
add
xor
rorb
mov
stos
mov
sub
mov
mov
pushl
fnsave
mov
xor
jae
xor
decl
fs
shrb
mov
fsubrl
mov
cs
je
mov
adc
pushf
popaw
xor
aaa
cmp
push
arpl
fcomi
mov
push
arpl
xor
xor
popa
fadds
rcl
shll
sti
adcb
lret
testl
mov
xor
mov
icebp
shl
lods
stos
mov
adc
test
fidivrs
pop
mov
pop
aad
popa
lds
ss
add
shrl
or
or
push
loop
sarl
outsl
cld
and
inc
dec
imul
data16
inc
sbb
in
and
jo
xor
sub
or
cs
mov
inc
inc
push
repnz
jo
cmp
pop
rorl
and
orb
add
push
jb
pushf
rol
push
cmc
pop
cs
imul
pusha
add
sbb
sbb
inc
xor
add
inc
push
add
push
insb
and
sbb
mov
push
add
xchg
sbb
pusha
push
pop
add
sbb
add
nop
or
push
leave
notb
pusha
mov
movq
std
mov
pop
leave
sub
xor
xor
iret
repz
xchg
sbb
in
sub
sahf
shlb
addr16
xor
ss
sub
xchg
stc
jne
or
mov
adc
call
aaa
daa
stc
mov
xor
xchg
adc
dec
loope
loopne,pn
push
shll
sbb
stc
push
mov
push
kmovb
das
clc
mov
xor
add
insb
cs
push
add
push
xor
imul
sarl
or
xchg
push
aaa
push
jg
movsb
fcomp
push
and
stc
rcll
psadbw
in
inc
or
and
sbb
mov
rcl
ret
push
mov
pusha
out
or
dec
stc
sub
add
adc
mov
mov
stos
inc
adc
sub
jmp
out
adc
test
repnz
test
test
inc
js
les
arpl
cmpsl
call
and
xchg
gs
movsb
mov
pop
jnp
cld
imul
mov
hlt
mov
add
sarb
push
aaa
ljmp
xchg
xor
int3
ret
movsl
push
cltd
cmp
add
call
mov
pop
test
imul
sbb
push
pop
jmp
js
cltd
sub
popf
insl
das
sahf
sbb
clc
fwait
inc
sarb
mov
add
or
dec
jae
sbb
lock
add
sbbb
ret
test
and
inc
add
and
or
mov
sub
aaa
and
mov
in
mov
in
nop
adc
hlt
mov
xchg
mov
mov
loope
out
stos
cld
xchg
addr16
pop
jne
or
cltd
in
sbb
xchg
dec
scas
or
or
dec
shlb
iret
cmp
stos
and
push
xchg
add
arpl
add
mov
inc
mov
popf
pop
and
sbb
aam
push
sub
or
cmp
and
out
mov
push
sti
jns
mov
xchg
add
dec
enter
add
js
cmp
in
call
jno
xchg
mov
les
sbb
pop
mov
or
and
sub
into
ljmp
loope
icebp
pop
movsb
add
scas
cli
and
loopne
stos
pop
ds
inc
ret
push
pop
imul
sbb
icebp
sub
int3
and
mov
out
xor
push
mov
arpl
mov
mov
or
dec
sbb
ret
xor
bound
clc
sahf
add
or
xor
xlat
add
icebp
pop
repnz
pop
fdivr
mov
cmpb
rcrl
pop
rcll
jmp
shlb
push
push
sub
and
or
dec
cmp
jo
dec
dec
pop
pop
daa
add
call
ret
sbb
imul
hlt
or
cmp
pop
pop
adc
pop
cmp
sbb
xchg
andl
or
xorb
rorb
and
popa
nop
inc
lock
or
or
push
imul
sahf
inc
adc
mov
inc
adc
call
push
and
add
test
and
in
cmpsl
jae
sub
xchg
loopne
dec
inc
xchg
or
add
inc
sbb
and
sub
and
dec
add
ljmp
andl
or
cmpl
test
jmp
mov
and
xor
jnp
ds
xor
or
popf
in
adc
rclb
rcll
sti
call
push
jo
sub
adc
push
jnp
mov
mov
cmp
cmpl
std
mov
xlat
out
xchg
in
mov
mov
mov
jge
mov
xor
rclb
jns
sbb
push
mov
lods
push
test
fimull
pusha
push
lret
push
cmp
fs
mov
pop
mov
and
xchg
push
add
pcmpgtb
out
push
push
jb
in
push
cs
jmp
pop
loopne
mov
cmp
jmp
hlt
pop
sub
mov
sub
fdivs
lret
push
js
rcl
aam
jmp
jns
mov
insb
ret
in
adc
xlat
push
dec
hlt
mov
cmp
mov
sub
sbb
test
pushf
call
lock
pop
dec
cmp
sub
push
mov
cmp
push
add
sub
jge
std
loope
inc
stc
cmp
popf
mov
and
xlat
push
into
adc
jns
push
sub
push
inc
xor
mov
addr16
pop
mov
inc
push
dec
or
inc
popf
xor
das
cmp
mov
sbb
and
and
into
cmp
daa
fcoml
or
leave
mov
es
mov
cltd
in
push
call
or
sbb
mov
inc
dec
mov
add
sbb
inc
and
int
and
push
xchg
add
out
stos
inc
and
insl
loope
test
dec
adc
imul
add
push
jne
add
add
push
nop
xchg
ret
movsl
out
inc
push
lea
das
add
adc
push
inc
mov
leave
cmp
test
popf
pop
lock
xchg
mov
aas
sbb
mov
or
xchg
adc
add
jnp
cltd
imul
xor
sti
dec
mov
out
loopne
add
dec
iret
cmp
xor
repnz
push
rorl
dec
mov
out
leave
add
inc
scas
sub
xlat
sbb
mov
fistps
inc
push
mov
subb
push
sti
dec
in
lahf
cmp
add
rorb
push
and
push
fs
mov
jnp
mov
in
pusha
jnp
dec
inc
xchg
and
mov
jno
clc
int3
orl
incl
or
xchg
lret
sbb
or
add
pop
mov
push
push
dec
or
dec
leave
sbb
sbb
cmpb
pop
jg
or
xchg
dec
mov
clc
add
cmp
in
orb
adc
pop
jnp
sbbb
aam
inc
sbb
add
push
mov
push
enter
xchg
data16
xchg
mov
cltd
mov
dec
fs
orl
ljmp
xchg
mov
pushf
in
in
scas
or
cmpsb
in
in
dec
in
adc
dec
addr16
pop
xchg
jle
jbe
in
push
cld
cld
mov
cld
push
rclb
sbb
mov
ret
add
push
pushf
mov
or
nop
inc
mov
ret
add
mov
out
xlat
mov
enter
jns
fs
and
push
ss
rolb
jns
ljmp
popa
mov
nop
sub
adc
rol
sbb
dec
sbb
enter
dec
fnsave
jb
sbb
and
dec
cmpsl
enter
mov
xchg
xor
and
jmp
fistpl
dec
xchg
pushf
inc
pop
iret
dec
mov
fistpl
dec
gs
or
popf
dec
hlt
mov
cmp
icebp
push
std
insb
dec
inc
mov
push
sahf
dec
cmpsb
mov
xor
add
in
sbb
add
mov
into
out
jmp
or
inc
stc
or
add
pop
lahf
add
movsb
sbb
mov
pop
inc
data16
adc
pop
and
movsl
inc
nop
inc
mov
dec
or
andb
and
xchg
and
les
cmpsl
bound
test
in
or
push
add
cmp
nop
sub
inc
push
mov
movsb
pop
lock
pop
clc
and
cld
add
mov
xor
xchg
cmp
pop
popf
or
lock
imul
movsl
add
and
and
pop
nop
xchg
add
jo
cmc
shll
movsb
jb
add
pop
mov
popa
andl
add
mov
cwtl
jae
lds
xchg
push
and
loope
adc
inc
add
jo
jbe
push
andl
push
inc
pop
xlat
and
add
in
jb
pop
scas
inc
cli
inc
nop
inc
repnz
inc
movsl
inc
sbb
aaa
mov
push
and
nop
pushf
add
and
jge
inc
and
mov
inc
pop
inc
pop
dec
xor
test
adc
inc
mov
add
nop
inc
sahf
inc
and
ret
aaa
call
ss
stc
sbb
call
pusha
or
in
sub
push
mov
inc
clc
test
mov
push
xor
movsl
rcpps
lock
mov
add
sbb
jmp
faddl
and
into
inc
mov
int
jl
jle
push
mov
push
loope
aam
repz
daa
adc
mov
jns
adc
xor
adc
push
sbb
in
push
mov
test
jns
xchg
inc
jl
repz
push
or
enter
mov
and
or
jmp
or
xor
mov
fldenv
cmp
push
nop
sbb
scas
jmp
dec
into
mov
dec
pusha
fcoms
loope
inc
hlt
mov
adc
inc
or
mov
lods
push
cs
cmp
sahf
aas
xchg
aas
ret
fildl
aas
pop
scas
inc
ds
jne
adc
test
out
nop
push
scas
jmp
stos
in
ret
xor
clc
mov
jl
lea
repnz
mov
add
lds
jecxz
xchg
data16
cmp
in
and
sbb
orl
xchg
sub
movsl
cld
aam
or
lods
fsubl
add
fdivl
cmp
xchg
sbb
testb
xchg
inc
out
cmp
stc
lock
test
sub
enter
cmp
loope
cmpl
aaa
in
push
inc
and
xchg
cmp
enter
call
jmp
adc
or
or
cmp
lods
xchg
outsl
push
mov
bound
jge
sbb
enter
into
aam
inc
imul
fsub
cmpb
pushf
push
shrl
and
dec
push
add
repz
cmp
stos
test
dec
and
inc
test
dec
shll
loopne
mov
dec
scas
nop
cmpsb
fsub
fmul
and
insb
cmp
sub
inc
jne
or
xchg
test
cmc
popa
insl
cmp
cmp
and
cmp
push
inc
cmp
test
mov
ja
jl
sbb
addl
pop
pop
sahf
or
mov
or
test
xchg
jb
cmp
roll
mov
leave
cmp
jo
call
push
xor
shlb
js
xor
pop
jb
aaa
inc
pusha
mov
dec
adc
add
cmp
rorl
xchg
dec
adc
adc
or
cmpsl
lret
add
dec
lcall
sub
aaa
and
insl
jg
and
iret
cltd
lods
mov
mov
in
add
aam
js
xchg
aaa
jge
dec
or
adc
or
mov
cs
imul
and
lods
pop
xor
rcrl
dec
sbb
mov
pop
mov
mov
sbb
mov
jbe
or
pop
pop
push
dec
sti
rol
orl
scas
mov
add
aaa
test
out
and
sub
mov
dec
pop
mov
and
cmp
sub
jg
jmp
shlb
cmp
xor
cld
add
add
jo
add
js
insb
inc
pushf
ja
dec
adc
adc
cmp
enter
xor
or
push
roll
orl
mov
mov
mov
lcall
mov
jmp
jmp
loop
dec
pop
and
and
pop
jecxz
jbe,pn
sarl
pop
data16
xchg
jmp
xor
notl
xor
mov
mov
adc
inc
jbe
aam
mov
sub
sbb
imul
sub
cmpl
test
pop
or
je
dec
adc
add
aas
mov
mov
loop
test
ror
sbb
inc
xchg
add
adc
mov
call
ds
or
popf
dec
inc
sub
inc
cmp
ja
loopne
sub
xchg
lock
sbb
dec
loop
inc
fsub
dec
dec
jo
and
mov
dec
lret
pop
dec
push
push
adc
push
inc
pop
mov
adc
aas
jb
pop
cmpl
dec
and
sub
std
adc
xor
xchg
add
negl
mov
outsb
ljmp
jno
and
dec
push
enter
xor
adcb
pop
pop
inc
xor
rolb
mov
pop
adc
les
jo
adc
add
dec
loop
roll
lds
xchg
xchg
dec
inc
test
mov
mov
dec
push
call
mov
pop
push
dec
int
shlb
add
test
sub
insb
sbb
dec
je
or
insb
leave
mov
sbb
das
mov
mov
sbb
xor
orl
pusha
js
dec
pop
push
mov
in
dec
dec
cmpsb
in
out
out
push
ds
mov
into
pusha
xchg
pop
adc
in
jo
cs
cs
into
iret
add
and
jne
leave
shlb
cs
or
cs
xor
xor
xchg
cmp
pop
cmp
daa
cs
daa
ss
adc
fdiv
test
ljmp
mov
lahf
sub
inc
enter
push
mov
mov
fisttpll
les
cltd
xor
xor
jp
nop
xchg
loopne
cmc
adc
xchg
sub
xchg
inc
repnz
sub
sub
sub
sbb
es
or
and
cmpsb
fnstsw
and
loop
xor
add
ret
fdivrl
lret
loopne
and
rolb
stc
test
mov
pop
and
mov
mov
adc
sub
inc
push
pop
and
cwtl
mov
add
ret
test
adc
cmpl
adc
cmp
xchg
add
mov
and
leave
sbbl
xor
ret
add
and
loope
lret
push
leave
jl
or
pushf
icebp
enter
add
mov
cmp
add
ret
or
or
pushf
fs
jecxz
dec
xchg
add
mov
or
mov
mov
pusha
test
movb
loopne
xchg
ret
fldenv
or
es
mov
xchg
adc
or
lds
or
xor
push
xchg
add
inc
es
and
js
xchg
or
cs
fadd
mov
mov
fwait
dec
and
add
mov
test
ret
mov
xor
and
sbb
inc
gs
dec
dec
into
mov
mov
rorl
ja
inc
andl
adcl
push
mov
push
push
mov
out
mov
push
mov
push
pop
ret
xchg
and
lret
push
orl
push
and
push
pop
ret
jmp
or
sbb
mov
mov
in
mov
add
stc
cmpsl
scas
cld
xchg
add
add
push
jo
jno
xchg
ret
ss
lea
push
or
sbb
je
cli
push
jmp
gs
or
dec
mov
mov
mov
mov
inc
push
push
mov
test
adc
mov
sbb
add
andps
mov
out
mov
add
sub
das
ja
pcmpgtb
fisubs
leave
and
mov
xchg
add
fadds
push
ret
cltd
mov
ret
add
inc
and
push
mov
enter
jg
pop
les
jmp
xor
xchg
sub
or
add
sub
add
cmp
xchg
xor
push
les
pop
xchg
add
add
orb
or
inc
ja
xor
daa
xor
orl
stos
cltd
cltd
sbb
mov
jbe
mov
mov
add
orl
xchg
add
lret
test
or
jno
ret
test
push
sbb
loop
inc
dec
sub
ret
scas
dec
enter
outsl
lcall
adcb
ja
cmpl
or
or
lock
add
cmc
add
pop
adc
push
loop
sub
ret
aam
call
rcrl
les
or
xchg
adc
add
adc
andl
inc
dec
enter
xor
inc
xchg
add
and
dec
mov
loopne
movsl
test
ret
xchg
orl
jl
xchg
addr16
test
sbb
and
jecxz
add
or
jge
lea
movsb
popa
push
cmpsb
sub
cld
fidivs
lret
jmp
jmp
leave
inc
push
and
clc
xchg
sbb
xchg
pushf
insb
jne
pop
inc
orl
or
shrl
clc
jmp
outsl
push
pop
and
push
inc
fdivl
ret
outsl
mov
add
sub
xchg
mov
lret
sti
and
push
xchg
adc
xorl
callw
or
aam
seto
cmp
rclb
orl
mov
and
or
in
push
push
lret
add
sbb
stos
icebp
add
add
push
nop
xchg
popf
push
adcb
mov
add
cmp
push
ret
fcoml
dec
pop
dec
stos
mov
sub
xlat
sbb
push
push
add
das
adc
call
insb
mov
das
pusha
sub
les
sub
lret
mov
push
pop
cmpsl
jno
push
enter
adc
sub
les
mov
fst
int3
push
xorl
cmp
adc
adc
in
and
pop
mov
push
push
mov
nop
add
push
pop
ret
mov
xor
pop
scas
and
sbb
mov
and
sub
outsl
mov
mov
inc
adc
movsl
and
mov
mov
push
pop
ret
lret
outsb
mov
jg
sub
pop
and
dec
mov
adc
mov
stos
mov
js
ret
push
push
mov
loop
add
jo
inc
and
push
adc
push
push
mov
fcoml
sbb
xor
pop
mov
or
testl
adc
and
jg
xlat
rolb
outsb
push
imul
push
pop
ret
cmp
mov
add
mov
push
sub
sub
ret
jb
or
add
inc
movaps
loopne
push
add
sub
inc
sub
sub
aaa
and
stos
ret
adc
sub
jp
xchg
dec
push
pop
ret
subl
les
adc
inc
adcb
or
push
enter
mov
fbstp
push
xor
nop
or
cmpl
gs
and
or
nop
pop
enter
or
xchg
inc
repnz
or
xchg
leave
push
clc
mov
jmp
sub
stos
fs
xor
sub
les
xor
pusha
scas
push
jmp
sbb
inc
rorb
adc
or
pusha
cmp
aaa
jge
add
cmpsb
cltd
scas
cmpl
seto
test
js
movsb
loopne
sub
ret
xlat
or
push
pop
and
sbb
test
adc
mov
mov
fnstenv
or
sub
xor
adc
insb
stos
ret
sbb
add
testb
xor
enter
hlt
or
xchg
add
test
adc
fwait
add
lods
push
or
dec
add
ret
sti
pop
rorl
dec
call
in
pushf
roll
pop
lea
enter
jb
into
repz
sbb
pop
and
cmp
and
push
push
mov
jmp
push
sbb
push
popa
inc
faddl
movsl
push
fists
mov
dec
mov
hlt
or
cltd
fsubrs
push
pusha
sub
es
and
inc
dec
and
add
mov
cmpsb
add
xor
jecxz
inc
outsl
add
int
inc
add
call
mov
faddl
inc
adc
popa
call
test
orl
add
ret
incb
and
sbb
xlat
test
or
lret
add
sub
jns
sti
cld
inc
insb
lds
sub
inc
addb
push
test
fistpll
pop
sub
daa
into
shr
imul
jmp
and
cmc
add
jb
adc
loopne
pop
push
pop
and
mov
leave
out
jmp
jne
add
in
or
push
fcoml
repnz
jmp
add
cld
cmc
aam
xchg
lahf
sbb
leave
dec
popa
cli
andb
jmp
clc
cs
dec
adc
mov
lods
push
mov
ret
cmp
dec
ds
or
addb
addr16
jbe
pop
fisttpl
das
stos
sub
inc
add
add
adc
mov
push
push
pop
and
filds
daa
mov
mov
lret
scas
add
push
add
icebp
sbb
mov
shrb
inc
insb
push
dec
fstl
shlb
ret
add
inc
sub
cmpl
cld
mov
add
fimull
imul
add
adc
jbe
and
ret
xor
and
ja
ret
jecxz
fcompl
push
pop
ret
lea
push
add
mov
xor
dec
push
ret
call
fcmove
call
and
shlb
push
jb
xchg
iret
pop
call
mov
or
cmp
cmp
cmp
in
mov
cmp
or
into
inc
xor
jae
cmp
sub
pushf
xlat
fnstsw
add
sbb
pop
test
gs
xor
adc
mov
pop
sbb
push
repnz
in
inc
xor
mov
inc
shll
test
xor
add
inc
cwtl
mov
cmp
or
add
test
test
mov
fistps
push
inc
je
lret
adc
xor
cwtl
add
roll
es
lcall
ret
jnp
xorb
movsb
or
or
add
test
scas
stos
push
or
pop
xchg
jbe
or
add
push
sub
dec
imul
dec
pusha
loope
adc
adc
jp
adcl
call
fadds
roll
rcrl
aam
dec
pop
mov
cltd
jmp
shlb
jae
cmp
pop
jae
add
adc
push
lods
shlb
aas
mov
cli
xchg
pop
sub
imul
inc
or
and
enter
cwtl
sbb
rolb
in
adc
sbb
dec
sbb
xor
test
inc
xor
push
adc
xor
push
add
pushf
jns
sbb
pop
ret
mov
test
clc
or
aas
ret
enter
orl
loopne
ljmp
aam
push
cmp
ret
push
mov
jno
mov
xlat
imul
sbb
imul
inc
dec
repz
ret
pushf
inc
or
call
sub
ret
jne
adc
jo
or
pop
iret
int3
ljmp
insl
or
repz
adc
jae
sub
adc
add
jae
fadds
cmp
jae
ret
fcmovu
push
jo
inc
xchg
mov
in
mov
shrl
mov
push
aad
ficoml
mov
adcb
or
xchg
xchg
shll
movsb
mov
add
xchg
cmpsb
mov
adc
mov
fisttps
shll
mov
xchg
mov
fwait
and
sbb
xor
add
xchg
movsl
and
sbb
xchg
or
loopne
sti
push
call
sbb
cmpsl
inc
mov
and
sub
leave
add
outsb
dec
nop
shlb
add
clc
sub
rcll
inc
cmp
cmp
mov
les
pusha
xchg
xor
xchg
xor
pop
dec
xchg
push
inc
push
or
lcall
mov
and
leave
lods
or
arpl
adc
enter
pop
fwait
xor
or
int
push
push
dec
jo
add
test
inc
das
cmp
push
divl
cmp
and
call
test
mov
or
fs
cmp
rcll
popf
dec
sysret
ss
lret
test
or
push
aas
fisttpl
je
movsl
sbb
mov
cmp
iret
jo
jecxz
add
and
jns
add
add
cmpsl
in
les
add
push
cmp
push
mov
sub
popf
arpl
fcomps
rclb
fmuls
inc
lods
inc
cwtl
outsb
pop
mov
push
push
clc
jg
or
push
and
pop
adc
push
xchg
mov
sub
and
push
dec
out
pop
dec
popa
rclb
xor
xor
push
and
inc
ljmp
push
adc
adc
aam
cwtl
bound
rcl
test
lahf
test
rolb
je
cmpsb
jnp
rclb
push
mov
xchg
shl
loop
call
daa
inc
mov
imul
adc
mov
mov
mov
mov
fmuls
sbb
and
mov
loopne
jle
aas
test
scas
andb
add
lds
mov
mov
mov
sub
test
jae
shlb
mov
inc
push
rclb
subb
rclb
push
scas
xchg
push
mov
push
inc
push
cmp
repz
add
add
push
inc
inc
push
mov
rclb
clc
mov
xor
push
imul
cwtl
inc
sub
add
sbb
icebp
push
inc
push
mov
into
push
test
mov
xchg
fwait
mov
daa
lcall
inc
movsb
rolb
mov
mov
push
inc
push
mov
cmpsb
pusha
ret
push
mov
pusha
sub
sub
les
mov
fs
fiadds
mov
push
push
mov
dec
cmpsb
mov
sbb
mov
inc
repnz
xor
mov
mov
adc
sub
cwtl
addb
andb
rclb
jle
or
push
mov
shrb
pop
int3
dec
ret
cltd
inc
cmpl
or
enter
xlat
scas
dec
push
int
xor
lret
sbb
mov
xor
mov
sub
inc
mov
xor
adc
ret
mov
and
and
add
jmp
or
pushf
not
mov
sub
jo
inc
push
mov
add
add
push
mov
dec
flds
xchg
mov
test
sbb
aaa
add
inc
sub
mov
push
mov
or
pusha
add
mov
sub
or
test
sub
push
push
mov
lcall
fnop
or
adc
inc
add
sub
sbb
mov
xchg
or
dec
mov
daa
sub
fcoms
popa
jb
scas
popf
or
mov
push
je
loope
sub
fs
push
xor
out
test
stos
push
out
dec
sbb
pop
popa
insb
sbb
xchg
and
and
push
mov
mov
xor
and
jae
pop
out
add
sub
add
scas
mov
pop
cmpsb
and
xchg
sub
mov
xor
or
call
xor
jp
lret
sbb
xor
movsb
addr16
xor
mov
adc
sbb
sbb
lret
xor
jae
pop
inc
sahf
cmp
jbe
jnp
pop
cmpsb
jo
pusha
jbe
popa
jne
xor
push
mov
int
scas
xor
lea
push
lock
cmp
push
adc
lahf
xchg
adc
addb
repnz
jp
nop
jne
sbbl
sub
leave
xor
adcb
sti
lahf
mov
lret
xor
shrb
inc
xchg
and
sub
les
pop
add
xchg
mov
js
sub
mov
les
xchg
shl
adc
ds
loope
pop
outsb
xchg
xchg
push
hlt
inc
dec
shrl
out
mov
xchg
and
push
mov
xchg
mov
pop
ret
push
mov
loope
xchg
adc
pop
rcr
add
xchg
cmpsb
and
mov
add
cmpsb
test
xchg
or
push
fdivl
add
dec
dec
cmpsl
pop
dec
push
sub
push
cwtl
pop
mov
test
jae
add
inc
fcoml
mov
xchg
pop
cmpsb
rolb
jbe
dec
inc
lods
mov
adc
xchg
push
push
sub
orb
add
push
sbb
xchg
call
sbb
aad
jg
popa
cmc
push
and
in
add
xchg
and
or
jno
xchg
leave
in
jne
adc
sbb
xchg
jo
adc
inc
add
dec
popa
pop
xchg
mov
loope
push
xchg
dec
shll
dec
popa
jo
xchg
jae
adc
inc
mov
mov
lret
xchg
push
into
sbb
dec
or
fsubs
sub
push
sbbb
dec
fnsave
test
mov
jo
mov
pop
sub
adc
les
inc
addr16
clc
cmp
inc
push
jno
adc
inc
sbbb
xchg
cltd
sbbb
inc
adc
sbb
sbb
mov
sub
sub
xchg
mov
mov
shr
or
out
sbbb
orl
sub
loopne
cld
cltd
addb
jmp
jne
outsb
xchg
lahf
mov
clc
xchg
fdivl
test
dec
rcrl
xchg
add
xlat
and
cld
test
fnsave
xchg
faddl
in
push
fdivl
xchg
stos
adc
lret
adc
cltd
or
pop
or
pusha
sbb
pop
fnsave
xchg
daa
mov
xchg
adc
or
mov
fstl
xchg
sub
mov
lahf
xchg
pop
shrl
push
call
jne
adc
negl
adc
loopne
outsl
mov
loope
mov
pop
mov
add
sub
fcomps
mov
sub
or
xchg
mov
cltd
ret
xchg
jno
cmpb
lret
jmp
or
pop
xchg
fnsave
test
cmpsb
jo
push
dec
xor
sbb
pop
xor
xchg
bound
addr16
sub
fnsave
test
adc
and
lret
xchg
outsb
cltd
cmpb
jmp
mov
ljmp
and
xor
inc
or
les
add
xchg
cmp
push
aas
jno
lret
xchg
and
call
push
loop
outsb
cltd
ret
das
xchg
sub
adc
xor
popf
jl
repz
out
sahf
out
lahf
and
sub
lods
repz
or
cmp
sbb
and
dec
mov
xchg
shrb
cmpsb
and
push
inc
cmpsb
pusha
cmpsl
adcb
sbbl
xchg
sub
ret
mov
test
rol
xor
ljmp
sbb
cmpl
jne
popa
cmp
cltd
aas
inc
or
shrl
mov
imul
jle
mov
loope
xchg
imul
out
mov
mov
dec
rcr
xchg
dec
jne
add
adc
sbb
mov
xchg
subb
push
mov
ja
xchg
pushf
addl
dec
jae
jle
loope
sub
ret
mov
lret
adc
dec
ret
xchg
and
les
adc
fiadds
in
aam
push
mov
lret
adc
outsl
and
pushf
inc
stc
adc
jne
jl
les
pop
cmpsb
jo
xchg
xchg
sub
rcr
loopne
loop
sbb
cli
mov
xchg
inc
imul
test
pusha
sbb
mov
test
jo
adc
xchg
inc
jo
xor
test
xchg
dec
popa
and
adc
xchg
mov
jnp
sub
fs
mov
adc
pop
cmpb
enter
xchg
shll
dec
arpl
mov
jecxz
enter
jns
add
pop
and
mov
jb
nop
xchg
sub
xchg
pop
mov
mov
push
cmp
or
push
shrl
js
dec
add
xchg
dec
jecxz
pushf
xorl
ljmp
lcall
je
sub
aaa
inc
mov
test
pushf
es
add
push
int3
popf
pop
adc
cli
push
xor
imul
xchg
ret
adc
xor
or
sbb
adc
ljmp
jo
mov
dec
xchg
push
enter
xor
push
call
push
jne
adc
je
push
cmpsl
dec
loope
cmpsl
push
sbbl
push
add
data16
jno
dec
cli
push
subb
dec
push
mov
enter
in
add
jo
pop
jle
je
adc
mov
sarl
movsb
adc
push
dec
clc
pop
stos
rcll
dec
mov
fs
push
adc
stc
pusha
adc
push
aam
push
js
adc
cmpsl
dec
push
lods
pop
mov
cmpb
push
add
hlt
mov
dec
xor
fsubrs
push
xchg
sub
imul
xor
mov
cmp
sbb
js
pusha
xchg
mov
push
jmp
sbb
fs
dec
xchg
or
mov
adc
add
outsb
insb
dec
jne
sub
sbb
loope
cmpsl
dec
loope
push
xor
or
aaa
pop
cmp
adc
loop
xchg
insl
imul
nop
and
repz
push
add
mov
lcall
adc
loope
cmpsl
dec
loope
mov
rclb
test
push
lods
push
push
pcmpeqb
cmp
push
push
and
dec
xchg
ret
loopne
sub
push
xor
pop
rolb
inc
dec
xchg
cmp
sbb
add
nop
stos
xor
pushf
es
cmp
inc
inc
push
dec
xchg
sbbb
test
push
sbb
or
adc
cmp
sub
add
mov
jo
movsl
test
xchg
adc
push
lea
es
adc
inc
push
shll
jo
push
popf
push
inc
cmp
out
pusha
push
lcall
and
jne
push
incb
lods
dec
out
lds
push
je
in
jo
adc
inc
push
cmp
xor
and
loope
add
pop
adc
inc
enter
rcll
pop
pushf
push
inc
push
rcl
popa
lock
xchg
cmp
inc
mov
dec
rorl
mov
rorl
nop
scas
ret
cli
add
push
dec
subb
pushf
mov
dec
push
add
or
ljmp
or
xchg
ret
jl
sbb
sub
or
and
das
jno
sbb
loope
cwtl
repz
adc
inc
mov
jg
inc
inc
push
jae
fiadds
sarb
adc
test
js
jae
adc
add
fcoml
nop
dec
or
mov
out
push
jbe
jae
mov
push
nop
adc
loopne
jae
and
jnp
jae
or
pop
push
or
lds
testl
dec
jae
mov
addl
mov
sbb
pop
dec
popa
cmc
mov
jmp
fisubl
inc
stos
andb
ja
jae
push
js
push
add
add
jae
movsb
jo
out
subb
mov
add
stos
and
mov
movsb
dec
popa
lock
sub
pop
push
xchg
orb
jae
fwait
std
or
ds
jmp
aaa
push
das
cmp
in
dec
and
call
push
jae
fnstcw
in
in
push
inc
push
jae
pop
sub
adc
test
inc
push
sbb
jae
adc
pop
enter
xor
push
inc
movsb
xor
add
mov
push
scas
mov
add
call
fldenv
xor
pop
pop
add
rcrb
nop
dec
adc
jae
mov
loope
in
adc
in
pop
loopne
dec
or
mov
inc
push
mov
mov
push
jae
vpmovsxwq
ret
and
pop
and
orl
and
cwtl
out
jae
nop
adc
es
xchg
clc
pop
lds
dec
pop
mov
mov
xchg
jae
adc
sbb
push
jae
sub
sub
popa
sub
popa
hlt
dec
icebp
addb
add
repnz
pop
clc
repnz
pop
and
popa
push
cmp
push
sbb
and
inc
and
sbb
jae
add
push
add
or
jae
sub
mov
and
or
push
sarl
adc
insl
mov
ret
outsb
test
adcb
and
rcrl
lahf
stc
movsb
pusha
es
mov
mov
add
adcb
mov
movsb
shrb
push
test
roll
adc
xor
jb
sahf
out
sahf
ja
xchg
push
js
mov
in
sbb
mov
lahf
mov
out
mov
adc
inc
and
into
or
sbbl
mov
or
loopne
pushf
movsl
cmpl
mov
push
adc
sar
sub
sahf
pushl
lcall
jae
sub
or
jmp
loop
jae
or
pop
push
adc
js
jl
jae
mov
add
ror
in
sbbb
jb
lret
rcrl
orps
rorl
jae
loopne
inc
push
jae
xor
jg
sub
mov
cmp
inc
push
mov
rorb
lds
movsb
movl
cvtps2pd
call
cmp
or
or
cmp
add
push
mov
cmp
in
ds
shlb
ja
jae
dec
test
inc
push
jae
adc
daa
hlt
sub
mov
fwait
or
out
and
ja
pop
mov
jae
xor
cmp
or
or
clc
ljmp
mov
jae
aad
push
js
jae
daa
es
xor
loop
sbb
jae
insb
repnz
xor
cmp
jno
rolb
jae
or
popa
mov
cmp
jg
inc
pop
inc
jae
adc
test
ret
cmpsb
cwtl
pop
xchg
sbbb
cltd
cmp
dec
push
dec
cwtl
xchg
mov
mov
pop
out
xchg
add
inc
xor
mov
roll
repnz
fsub
add
dec
inc
xchg
mov
fsubr
adc
adc
sbb
fs
out
inc
xor
test
in
or
jge
xchg
xchg
je
adc
mov
add
add
popa
mov
push
jmp
pop
xor
rolb
sub
adc
aaa
movsl
mov
sbb
cmpsb
sub
je
andl
sub
pushf
xchg
and
andl
inc
mov
cmp
andl
jo
sarl
stos
push
mov
test
roll
xor
out
jo
adc
push
out
dec
inc
inc
mov
cltd
or
shlb
mov
or
popf
aaa
fwait
or
sbb
cmp
or
add
andl
and
mov
push
mov
or
xor
xor
sbb
jne
adc
fbstp
cmp
or
dec
xor
faddl
jne
cmc
adc
out
fldl
xor
fsubrs
iret
dec
mov
mov
mov
cmpsl
mov
aas
aad
mov
xor
cmp
mov
std
add
arpl
bound
sub
repz
cmp
xchg
lahf
add
sbbl
inc
add
mov
sbb
test
pop
cmp
repz
loop
inc
push
push
adc
repz
push
pop
iret
shrl
sbb
inc
repz
push
adc
iret
adc
cs
andb
mov
loopne
repz
push
mov
mov
pop
inc
inc
repz
inc
inc
dec
repz
adc
cmp
jbe
adc
cmp
inc
jl
int3
aam
adc
mov
dec
push
push
adc
scas
add
repz
dec
jp
popa
aas
pop
xchg
and
cwtl
sbb
sbb
sub
adc
outsl
movsl
mov
sbb
or
test
rolb
or
ja
adc
cwtl
pop
push
mov
adc
call
inc
adc
ja
sldt
xchg
cwtl
stc
xor
hlt
adc
mov
or
push
inc
xor
sub
push
bound
daa
sbb
adc
adc
loopne
fistpll
lahf
cltd
jp
cmpsl
insb
loopne
adc
push
inc
adc
movsb
xor
sbb
ja
push
scas
test
xor
sub
sbb
mov
lret
jle
xchg
push
add
les
inc
out
ljmp
leave
out
mov
call
inc
xor
and
dec
lret
sbb
mov
cmp
fcoml
xor
mov
fldl
push
addb
pop
sahf
xor
sbb
adc
or
inc
popa
rolb
sbb
mov
or
sbb
sbb
and
adc
xor
sub
inc
adc
rclb
ljmp
aam
push
or
push
inc
adc
mov
xorb
stos
sbb
and
ja
inc
scas
xor
sbb
or
mov
push
inc
adc
or
fisubrs
push
xor
sbbl
jo
sbb
fmuls
sbb
xor
in
lds
push
xor
fnstsw
fistl
push
xor
mov
dec
xor
inc
xor
sub
and
pop
add
jae
inc
fistpl
cwtl
and
jae
inc
ljmp
and
repz
roll
adc
jae
mov
outsb
outsl
mov
cmp
jae
subb
enter
adc
movsl
sbb
cmp
dec
adc
in
ret
fldenv
dec
adc
bound
ljmp
xlat
nop
or
dec
adc
adcb
push
mov
lahf
mov
mov
lods
mov
and
pushf
xor
and
add
nop
xchg
lret
enter
nop
cmpsl
mov
jb
mov
fwait
and
or
jge
pop
imul
mov
xchg
inc
mov
add
xchg
pusha
ficomps
lock
xor
jae
or
adc
mov
cmp
pop
inc
loope
mov
and
mov
adc
add
daa
movsb
out
lock
xchg
adc
jg
movsb
dec
scas
mov
push
jb
xchg
push
inc
adc
lret
scas
pop
cmc
cmc
in
inc
adc
or
inc
xchg
movsb
rorb
pop
js
in
jo
sub
jo
cmp
adc
js
add
and
leave
leave
and
rorl
outsb
mov
imul
orb
adc
adc
test
mov
adc
sbbl
cs
sbb
leave
nop
dec
aam
add
or
push
adc
inc
loope
dec
cltd
mov
adcl
subb
sub
mov
and
adc
sbb
adc
test
xor
and
xor
jb
add
aad
les
test
jmp
jae
roll
pushf
fs
pop
mov
mov
and
mov
xchg
xchg
or
add
adc
ljmp
es
xchg
fcoml
shlb
cmp
xor
adc
shrl
sbb
dec
and
mov
push
sar
and
sub
dec
mov
lahf
dec
xchg
sub
arpl
push
add
pop
adc
pop
dec
lret
pop
test
pop
adc
cmpsl
inc
and
inc
addr16
jg
nop
cmp
and
push
add
or
int
pushf
dec
ret
pusha
push
push
leave
sub
push
xor
daa
push
dec
mov
push
shrl
mov
mov
sub
sub
push
cmp
movsb
fst
sbb
mov
leave
shlb
arpl
mov
push
mov
add
add
in
int
adcb
rorl
mov
aaa
inc
je,pt
lods
stos
cwtl
push
jbe
inc
push
sub
loope
push
int
pushf
inc
lds
push
clc
pop
push
repnz
test
mov
ret
add
cld
cmp
in
lahf
scas
lahf
inc
jb
cmp
jne
lahf
inc
enter
pop
sbb
and
sti
adc
lret
sbbl
in
dec
pop
sahf
adc
and
sahf
push
je
faddl
or
pop
repnz
pushf
imul
loopne
add
mov
and
insl
jle
mov
mov
jle
adc
insl
push
clc
mov
jl
push
adc
pop
movsl
bnd
push
and
mov
in
push
sub
pop
lock
movl
daa
cld
or
pop
push
add
cmp
or
cmp
adcl
adc
leave
enter
sub
xor
cmp
inc
in
test
push
test
negl
cmp
xor
insb
cmc
add
outsb
pop
imull
push
jo
je
js
or
sub
insl
mov
movsl
sti
jns
dec
mov
xchg
xchg
cwtl
cmpsb
adc
push
cmpsb
push
push
adc
or
jbe
inc
inc
add
popl
cmpsl
mov
fwait
push
and
cmp
popa
js
inc
or
push
js
test
push
mov
push
add
xor
pop
pushf
mov
lods
add
sub
mov
lock
mov
xchg
shlb
rcrl
sub
mov
adc
push
or
jo
mov
lods
in
add
mov
mov
push
pop
lret
push
xor
dec
rorb
shrl
mov
mov
push
divb
adc
xchg
mov
add
mov
add
push
mov
popf
mov
sub
sub
xchg
mov
dec
pop
popf
add
fdivl
mov
shlb
adc
mov
and
xchg
mov
xorb
sub
dec
mov
add
sub
ret
jns
je
adc
fdivs
push
cmp
in
push
mov
or
pop
sbb
jmp
sbb
mov
fdivl
jns
mov
shrb
push
mov
or
add
cmp
outsb
dec
mov
loopne
mov
adcb
add
rcr
repnz
in
inc
pushf
add
je
adc
add
mov
pushf
mov
sbb
and
shrl
pop
lahf
or
js
faddl
in
mov
es
mov
sub
mov
inc
ja
or
mov
or
xlat
pop
sbb
or
mov
movsb
mov
scas
dec
xorl
add
push
inc
push
or
adc
mov
in
adc
outsl
mov
push
mov
dec
push
outsb
push
scas
dec
add
adcb
xor
lea
adc
pop
dec
mov
xchg
movsb
inc
or
mov
push
or
push
cmp
push
mov
mov
call
mov
mov
std
mov
dec
addl
mov
movsb
mov
add
loope
and
adc
addl
cmp
mov
popf
xchg
cmp
mov
mov
or
push
or
or
jge
mov
mov
push
mov
adc
shrl
loope
jno
mov
xor
mov
test
shll
adc
mov
jo
cmpsl
inc
mov
int3
mov
push
and
jo
push
sub
mov
sbb
add
cltd
test
mov
mov
in
adc
jno
adc
push
mov
add
adc
dec
push
push
jecxz
push
mov
stc
std
adc
mov
sub
int
cmp
or
lock
cmp
jl
out
push
test
mov
jne
or
xchg
pop
cwtl
cmp
mov
aaa
mov
test
mov
sbb
cmp
and
fcmovu
adc
push
loopne
add
repnz
ret
in
outsb
dec
out
lock
xchg
dec
hlt
clc
cld
add
or
popa
rorb
outsl
adc
mov
outsl
movsl
or
outsl
dec
adc
xchg
push
dec
movntps
sbb
and
add
xchg
lret
mov
sub
xor
lea
mov
xchg
dec
movsl
inc
dec
dec
push
and
and
mov
lret
movsl
push
imul
pop
test
fs
dec
in
push
je
jl
push
and
xchg
in
push
test
sbb
lret
lods
mov
dec
movsl
push
stc
aaa
mov
sub
aam
movsl
push
mov
call
in
lock
clc
cld
fdivr
pop
push
add
or
or
pop
movsl
mov
or
adc
sbb
sbb
and
movsl
jb
sbb
xor
xchg
xchg
dec
cmp
inc
inc
jns
push
sub
push
cmp
sbb
or
adc
test
adc
mov
push
cmpsl
inc
shl
les
mov
add
push
mov
add
adc
addl
mov
hlt
or
or
add
loop
sub
add
jo
dec
push
mov
repnz
or
mov
jge
fisubrs
inc
sub
mov
cmpsl
inc
loope
mov
mov
adc
mov
push
adc
cwtl
mov
stc
into
inc
pushf
call
pushf
int
cmpsl
inc
rcrl
pusha
sub
inc
sub
mov
shlb
mov
cmp
or
add
xchg
test
adc
js
faddl
pushf
add
adc
pop
dec
adc
dec
shll
push
xorb
je
mov
add
xchg
lret
or
adc
test
dec
add
rcr
rclb
mov
ficomps
push
push
push
ljmp
cmp
sub
pushf
jecxz
loop
subl
pop
inc
lret
rcl
sub
or
push
pop
sbb
pop
addr16
js
adc
aas
inc
push
rolb
fwait
push
je
call
mov
push
inc
popa
sbb
mov
pushf
popa
push
mov
ljmp
dec
leave
and
add
sub
cwtl
aas
ja
xor
adc
adc
or
or
aas
xchg
lea
addl
add
ja
adc
movsb
mov
arpl
pop
pushf
add
pop
add
int
mov
cmpsl
mov
outsb
add
popa
stos
push
mov
mov
popf
add
mov
inc
rcrl
lods
repnz
shl
loopne
cmp
mov
cmp
xchg
dec
mov
add
push
cmp
daa
or
push
dec
xorl
adc
and
mov
cmpsl
sub
xor
jmp
loop
mov
dec
add
adc
faddl
jae
mov
es
clc
test
mov
outsl
add
aas
cmp
les
push
mov
test
cmp
add
sbb
or
lods
push
aaa
mov
test
movsb
xchg
outsb
mov
add
aam
dec
scas
das
nop
fnstcw
sub
and
call
inc
or
fistps
lahf
inc
inc
push
popf
pop
adc
dec
xorl
xorb
pushf
xor
loope
aad
enter
cmpsl
mov
arpl
mov
repz
jb
stc
sub
sub
push
dec
enter
sub
les
or
pop
int
mov
xchg
push
je
inc
movq
pop
mov
jo
adc
push
mov
adc
add
push
vcmpss
inc
push
and
mov
in
jne
pop
fnstsw
push
or
pushf
add
adc
lret
ret
scas
jle
loope
dec
mov
cld
jae
inc
cmpsl
mov
mov
sti
mov
pushf
add
xor
test
loop
sub
xor
xlat
sub
mov
mov
adcb
outsb
mov
cmp
aas
mov
lcall
aas
outsl
popf
cmp
dec
add
pop
clc
jecxz
enter
in
inc
shll
pop
shlb
xchg
mov
xchg
popa
loope
sbb
mov
roll
pop
cmpsl
inc
mov
mov
inc
or
movsb
dec
sbb
pop
jno
mov
nop
shrb
push
cmp
mov
pusha
sub
in
push
mov
out
mov
inc
or
adc
sbb
add
test
icebp
inc
pushf
jae
cmpsl
add
pushf
add
add
mov
adc
cmp
sbb
add
xchg
cmp
mov
xor
sub
xchg
sbb
inc
rorl
pop
jae
or
mov
pop
shrb
jae
shrb
mov
xchg
jae
or
xchg
addl
dec
xchg
adc
in
adc
ds
adc
adc
into
inc
sub
and
das
adc
fdivrl
push
mov
inc
shll
or
inc
ret
dec
movsb
jl
cmp
inc
adc
pop
sbb
or
inc
mov
push
jo
adc
mov
fcoml
shll
adc
sub
pop
sub
adc
or
and
push
pop
cmp
test
and
test
rcll
rol
inc
adc
jb
add
mov
pusha
add
cli
adc
fwait
or
push
push
shll
adc
push
mov
jo
stos
shll
rcrl
or
inc
sub
jae
shrl
push
pop
or
js
rcll
jns
adc
sbb
gs
push
sub
inc
push
push
data16
xor
add
push
icebp
or
inc
jg
cmp
rcll
adc
and
shll
jle
fmuls
mov
inc
or
push
ror
adc
and
ja
pop
sbb
rcll
adc
adc
pop
ret
pop
ret
cmpsl
das
adc
mov
mov
push
add
ret
sarl
inc
loope
rcr
add
cwtl
rcr
push
jp
nop
ret
aas
loope
mov
add
test
jge
bound
pop
pop
test
shll
sub
push
and
popa
sahf
or
push
rcll
pushf
push
push
rcll
push
mov
es
addb
push
mov
inc
add
mov
sbb
jb
js
sub
dec
not
xchg
push
in
inc
jl
jl
in
mov
adc
lods
aad
ret
shr
add
dec
inc
mov
rcl
push
push
sub
int3
rorl
add
roll
or
add
lock
mov
mov
sar
pop
or
sarl
or
or
pop
xor
mov
push
cmp
rcr
jp
push
cwtl
sub
shrl
adc
add
cltd
push
cmp
mov
sub
push
fimull
add
roll
sbbb
scas
xor
xor
adc
ror
jg
pop
inc
popa
ror
fwait
or
push
cmp
ja
sub
push
dec
nop
or
mov
push
mov
decl
add
adc
sub
xchg
jo
sub
push
cmp
mov
push
mov
sbbb
adc
cmp
test
js
cmpsl
push
pop
inc
test
shll
sub
push
mov
inc
loope
stos
shrl
shll
cmp
rolb
or
mov
push
add
das
inc
cmp
shll
shrl
add
enter
addl
sbb
aaa
test
psrad
inc
sub
insl
lock
stc
add
rcll
or
enter
add
mov
push
in
xchg
add
outsb
dec
or
popa
jle
mov
add
test
add
test
test
sbb
ja
add
or
inc
or
cmp
xchg
enter
test
scas
mov
adc
rcrl
imul
cwtl
xor
xchg
inc
add
add
mov
roll
and
fmull
or
and
push
js
and
dec
out
jns
or
xchg
xchg
mov
adc
add
adc
roll
xchg
inc
addb
jl
inc
test
sarl
sub
mov
jbe
mov
cmp
sub
or
or
lret
call
sub
loop
sub
popf
fsubs
lock
inc
rol
cs
jmp
lods
push
mov
mov
sbb
subl
push
or
add
or
jle
adc
insl
sbb
add
dec
cmp
add
push
and
inc
sbb
adc
xor
xchg
jo
addr16
and
lods
test
and
xor
addb
fadds
or
mov
xchg
jl
cltd
or
and
fcmove
and
dec
mov
and
ss
test
and
mov
push
and
data16
mov
jecxz
mov
adc
pop
dec
test
xchg
inc
nop
addl
rcll
xor
mov
or
adc
ret
in
or
mov
rcl
mov
les
arpl
xchg
les
xchg
out
xor
pushf
es
and
pushf
cmp
and
push
add
mov
or
mov
push
enter
mov
data16
or
fdivrs
and
mov
mov
shll
shl
mov
mov
adc
mov
decl
fadd
jmp
or
sbb
adc
adc
cltd
push
push
into
jecxz
sar
aaa
cli
add
adc
outsl
test
cmc
call
or
test
sarl
add
outsb
andl
push
jnp,pn
fbld
test
add
aaa
fsubl
pop
jb
cmp
in
jb
adc
leave
leave
in
and
outsb
adc
xchg
xchg
or
pop
jo
adc
shrl
inc
cmp
push
mov
sub
roll
adc
lods
mov
cld
arpl
dec
cs
daa
or
jo
pushf
pushf
pop
dec
mov
cmp
mov
in
jb
pop
js
push
or
inc
addl
hlt
jb
add
pusha
es
das
test
test
lds
adc
add
push
mov
sub
roll
jne
sub
xor
mov
adc
test
add
jmp
xor
inc
dec
mov
test
roll
inc
popa
aam
addl
rcrl
inc
rol
ljmp
aad
push
push
sbb
inc
push
sub
dec
roll
add
pop
xor
adc
sub
icebp
push
cs
push
cmp
xor
inc
add
out
adc
adc
xlat
sub
sbb
adc
fs
inc
loope
add
mov
push
or
add
add
add
test
shrb
push
adc
mov
sar
mov
push
adc
sub
xchg
mov
and
fiadds
adc
adcl
jns
and
jmp
loope
xchg
mov
das
mov
mov
faddl
push
rcrl
sub
add
or
stc
mov
dec
arpl
lock
adc
rorl
inc
cmp
in
sbb
mov
or
call
inc
inc
insb
rcll
adc
xor
cmp
or
shll
addr16
xor
ret
push
rcl
jae
inc
adc
test
test
jnp
testb
or
aaa
loopne
scas
or
mov
sub
mov
adc
stc
in
aam
inc
adc
shl
fsubs
or
mov
or
pusha
out
and
inc
sub
pop
cmp
adc
fcoml
push
shll
fs
addr16
or
loop
push
sbb
iret
frstor
pop
test
dec
in
adc
aam
sbb
or
and
sarl
rorl
fisubrs
add
ret
inc
sub
aaa
xor
or
jmp
mov
mov
or
pop
loope
addr16
mov
push
les
push
cmp
and
push
and
xor
shrl
xor
adc
test
and
shl
ret
les
ljmp
into
pop
mov
ficoml
push
mov
rcrl
push
pushf
cltd
inc
loope
and
ja
adc
adc
shrl
bound
fstl
or
sbb
dec
ss
cmp
xchg
cmpsl
sub
push
sub
jne
sub
push
cmp
push
mov
mov
push
mov
sbb
mov
adc
pop
stc
or
rcll
pusha
pop
sbb
mov
hlt
sbb
pushf
out
dec
imul
sbb
sub
roll
or
jbe
add
hlt
push
sbb
repnz
mov
test
shll
imul
adc
cltd
jg
rorl
adc
in
lea
jmp
adc
shrl
push
ja
or
dec
sbb
fisubs
loopne
adc
adc
pop
or
jns
xchg
shrl
sbbb
pop
jmp
cmovb
and
xor
adc
push
push
scas
or
push
xor
das
jnp
in
outsl
or
jmp
in
jbe
cltd
jb
cmp
and
push
mov
loope
mov
xchg
adc
inc
sarl
sub
add
push
and
mov
leave
into
or
jnp
add
and
data16
add
sub
adc
outsb
sub
mov
jo
or
test
mov
add
or
shl
fsub
add
pop
push
inc
loope
inc
roll
sub
add
cmp
fucomp
lea
push
mov
mov
fmuls
mov
test
test
test
test
or
roll
or
aad
and
aad
call
or
adc
inc
addl
or
sub
or
sub
cmp
or
adc
inc
mov
add
add
add
adc
sub
movsl
les
test
and
or
add
cmp
sahf
testb
and
push
sbb
imul
and
gs
out
xchg
cmpsl
call
insb
pop
ljmp
push
repz
cmp
repz
stos
mov
stc
pop
sub
imul
out
sub
out
test
or
push
imul
jnp
rorb
push
or
sahf
out
push
push
and
lahf
out
push
pop
push
and
xchg
add
cs
rcr
push
mov
cmp
aad
cmp
pop
mov
add
add
add
shll
adcb
sarl
xchg
inc
pop
lock
in
sar
mov
roll
jo
mov
or
add
sub
sarl
and
orb
adc
sti
aam
push
repz
pop
add
or
pusha
add
addb
mov
and
shll
inc
rcr
push
enter
into
mov
push
test
jo
or
arpl
rcrb
push
adc
cmpsl
inc
rcll
fadds
add
adc
push
push
push
test
inc
xchg
ret
push
shll
mov
shl
add
enter
inc
sarl
adc
push
shll
rcrb
sub
xchg
pop
movsb
push
jo
xor
cld
xor
mov
sar
xor
and
ror
mov
mov
adc
add
mov
outsb
roll
push
roll
push
xchg
roll
and
sarl
shll
mov
lcall
add
imul
pop
out
push
and
or
sub
sbbb
or
cwtl
xchg
outsl
shll
adc
adc
pushf
roll
xchg
popf
mov
push
push
test
rcll
ror
and
cmp
mov
movsb
lods
inc
and
rcll
mov
or
mov
xchg
xor
push
mov
mov
aad
or
roll
sbb
inc
sub
mov
ret
fcom
push
mov
es
sub
cmpsb
sarl
cmp
push
jo
sbb
jle
int
push
jo
sub
sub
mov
rorl
add
rcll
pusha
paddusw
add
push
jle
mov
ret
inc
sub
das
ss
or
add
or
dec
out
inc
addl
sub
dec
mov
rorl
sbb
andb
stos
push
mov
xor
int3
and
adc
sbb
roll
add
mov
xchg
lods
inc
rorl
adc
sub
mov
ror
cs
push
std
dec
xchg
push
pop
int
jecxz
push
sti
sbb
adc
ret
rcll
pusha
das
mov
mov
adc
mov
pop
js
sarl
or
mov
es
mov
inc
mov
rorl
add
shll
nop
or
push
mov
icebp
and
rorl
and
fcoms
adc
push
roll
movsb
nop
stos
pop
shl
pushf
jl
sbb
mov
push
sbb
dec
inc
addl
leave
mov
in
xor
adc
jne
or
jb
testb
rcl
dec
mov
or
mov
out
rorl
adc
mov
push
adc
orb
push
mov
mov
dec
flds
ret
push
sarl
test
rcll
mov
and
mov
inc
cmpsl
aas
mov
push
mov
xchg
xor
sub
mov
addl
mov
add
push
mov
adc
and
roll
sbb
sbbl
lahf
and
add
fmuls
jns
or
popa
andb
in
ljmp
sub
fsubr
push
roll
int3
jno
test
or
shrl
or
pop
inc
test
ds
push
sbb
loope
iret
dec
push
push
dec
jmp
push
jne
aaa
sbb
add
repnz
int3
dec
dec
inc
dec
add
jmp
lock
roll
rorl
inc
jae
adc
pushf
jle
adc
adc
and
cmp
jle
jno
add
push
sbb
sbb
test
xchg
mov
roll
test
xor
xchg
mov
push
test
add
mov
push
js
shl
jp
adc
push
and
dec
and
xlat
imul
pop
mov
adc
xchg
cmp
push
rcr
ljmp
or
test
rorl
add
push
sub
test
add
sub
push
fidivrl
ret
adc
arpl
test
iret
or
cld
ds
mov
test
xchg
loope
inc
sub
pop
fsubs
ret
push
js
inc
pop
decb
setnp
dec
sub
es
push
test
test
shl
push
jbe
sbb
jle
inc
shll
add
push
inc
test
lds
ror
pop
or
inc
rol
push
adc
or
push
adc
rcll
in
push
sub
or
in
adc
adc
cli
inc
sbb
pushf
lret
out
pop
cwtl
and
inc
xchg
adc
add
or
or
cwtl
or
or
add
pop
jno
xor
and
rcl
xchg
shll
push
clc
jne
jmp
rolb
mov
lock
aam
mov
pop
adc
adc
cmc
or
rorl
add
sbb
add
movsb
push
inc
das
or
xor
sub
inc
loope
roll
out
sub
test
shl
push
sub
xchg
xor
cmp
test
or
jo
mov
mov
push
fs
or
inc
inc
sub
rcrl
xlat
sub
rorl
roll
lcall
or
test
jnp
jns
adc
fcoml
rorl
add
or
cmp
and
or
mov
rdtsc
mov
inc
repz
sub
adc
sub
test
sub
push
adc
mov
or
sub
push
mov
call
push
push
adc
dec
or
push
or
loope
daa
mov
int3
and
pushf
pop
shrl
xchg
daa
xchg
mov
pop
mov
outsb
adc
adc
rcrl
cmp
pop
mov
lret
add
ret
shrl
push
js
cmp
in
push
shl
mov
or
push
ror
push
fisttpll
pop
add
outsl
sbb
test
or
jns
pusha
mov
bound
cmp
push
mov
add
adc
insb
mov
or
shll
dec
lea
ret
sub
adc
adc
repnz
adc
bound
cmp
adcl
or
xlat
imul
or
mov
pusha
xor
add
jge
mov
add
rcr
bound
cmp
push
push
dec
test
rcll
fcoml
cmpsb
rcll
mov
insl
stos
push
mov
adc
jae
icebp
pop
insb
push
mov
adc
dec
test
push
sub
call
sub
daa
enter
sarl
inc
sub
nop
jbe
add
cmpsb
lea
add
inc
rcll
ds
mov
xor
cwtl
test
shrl
cwtl
pop
in
add
sub
xor
cs
xor
nop
xchg
fwait
adc
rcrl
ret
imul
adc
mov
add
fs
push
test
sub
inc
shrl
push
mov
leave
push
rol
sub
and
add
cmp
sub
out
xor
ret
ds
xchg
dec
lcall
lods
call
sbb
outsl
cmp
and
xor
into
dec
cmp
mov
sub
push
rorl
sub
or
or
push
xor
outsb
xor
rolb
add
and
ror
or
inc
shll
rcl
xchg
cmp
adc
mov
push
adc
adc
mov
add
adc
adc
mov
stos
mov
andl
outsl
jmp
push
inc
cmc
and
roll
data16
dec
add
add
test
aaa
test
test
sub
or
push
adc
adc
test
test
pop
roll
inc
or
out
lcall
aas
mov
push
sbb
dec
test
test
orl
insb
jns
sub
inc
scas
sub
in
mov
es
or
sti
into
addl
add
mov
dec
shll
sub
sbbb
cwtl
stos
in
adc
add
jg
ret
or
push
aad
inc
add
sbb
dec
pushf
xchg
lret
add
fistps
out
push
cmp
sbb
sub
in
lret
mov
mov
aaa
push
sub
or
roll
repz
push
mov
push
or
rorl
ljmp
xchg
push
inc
loop
nop
mov
je
inc
loope
push
ror
xor
sub
mov
push
sbbl
sahf
loopne
enter
push
mov
sarl
push
mov
adc
adc
roll
sbb
enter
loope
cmp
inc
adc
xor
shlb
popa
movsb
push
rorl
inc
mov
jecxz
push
roll
adc
or
shlb
adc
pusha
test
add
adc
cmp
stos
sub
adc
mov
addl
adc
inc
add
mov
mov
pushf
inc
add
mov
repnz
mov
cmp
or
or
test
test
scas
sbb
push
mov
or
loop
push
leave
shrb
push
bound
sub
add
adc
mov
stos
pop
xor
sarl
pop
adc
lods
cmpsb
rcrl
cmpsb
and
lahf
rcr
mov
roll
loop
test
sbb
ja
roll
shll
mulb
adc
shll
or
or
ret
xor
imulb
inc
dec
push
shll
inc
adc
or
aam
ja
push
mov
adc
add
loopne
or
in
popa
jno
push
rcll
mov
sub
movsb
roll
sub
push
add
shll
and
ror
repz
push
jne
mov
sub
cmp
scas
sub
xor
sbb
push
sub
rcrb
adc
in
sbb
test
mov
or
add
ljmp
adc
movsb
loopne
addl
jnp
pop
fisubrl
and
push
shrl
rcrb
pop
sub
adc
cmp
inc
add
pop
xchg
and
call
push
or
pop
shll
nop
rcll
das
jmp
das
adc
rcll
or
bound
inc
shlb
movsl
addl
inc
rorl
xchg
sbb
mov
jbe,pt
cs
roll
cmpsb
or
mov
sahf
push
add
dec
sub
sub
roll
ret
adc
out
adc
adc
push
mov
dec
mov
pop
adcb
gs
cltd
addr16
ss
sub
ljmp
test
ret
sub
mov
inc
shll
mov
movsb
sbb
xor
gs
jae
or
pushf
je
xchg
int3
add
sub
mov
pop
or
add
shll
mov
jo
ret
adc
test
mov
loopne
roll
push
jnp
and
pop
sti
and
shl
cmp
call
das
aas
mov
cmp
mov
inc
sub
roll
out
into
roll
add
test
sarl
addl
or
rcll
pusha
daa
cld
and
push
sbb
or
push
sub
shufps
or
cmc
add
jl
les
fisubrl
inc
rol
xor
sub
pop
sub
clc
jmp
push
cmp
inc
xchg
adc
fcoml
jp
push
cmp
shll
daa
and
aam
sub
add
imul
jns
bound
inc
sarl
or
add
push
mov
push
or
sub
jno
pushf
adc
add
adc
roll
and
adc
or
loope
inc
das
mov
mov
mov
inc
sub
cmp
mov
sub
fdivrl
sub
and
pusha
and
dec
mov
shll
adc
sbb
or
sbbl
shll
out
jns
out
push
int
pcmpgtw
inc
sub
rcrb
and
cmp
jo
out
jns
fbld
push
add
jl
push
rol
inc
adc
inc
adc
or
pop
sub
sub
rorl
and
or
add
xchg
jecxz
outsb
mov
rcll
sub
popf
sub
inc
rcl
loope
and
scas
mov
cmpsb
mov
add
and
test
aad
loopne
stos
push
shll
adcb
and
push
rcll
xor
adc
roll
daa
fbld
push
imul
pop
lods
fldt
mov
pop
adc
cmp
ja
outsl
repz
je
nop
mov
jmp
inc
sub
push
adc
cmp
mulb
js
pop
sub
test
roll
sbbb
testl
adc
roll
ret
jo
mov
fdivrs
and
dec
sbb
or
jo
scas
push
adc
add
cs
mov
ficoml
inc
loope
shll
pushf
ror
rorb
inc
dec
pop
mov
adc
adc
test
sub
fwait
pusha
rcrl
add
adc
fldenv
xchg
sti
and
pushf
inc
shr
and
jecxz
inc
stos
push
mov
mov
rorl
rcll
pusha
psubw
mov
or
and
cmp
mov
push
sub
nop
sub
adc
cmp
sarl
shlb
lahf
sub
push
int
repz
adc
mov
popf
and
rcrl
inc
shl
mov
or
mov
outsl
stos
push
imul
in
ds
or
rcll
mov
inc
loope
ja
and
push
ss
adc
push
push
mov
or
add
jb
test
test
sub
fnstsw
je
shll
mov
or
pushf
lret
sub
jmp
push
cltd
pushf
test
push
sub
xchg
test
shll
jmp
pop
pop
mov
push
rorl
adc
push
cmpsl
inc
rorl
rorl
add
rol
jno
inc
adc
ret
jnp
rcll
inc
inc
or
popa
add
mov
popa
popf
inc
add
inc
addl
jmp
adc
add
roll
movsb
or
or
push
sbb
roll
aaa
aaa
stc
cmp
fmul
cli
sbb
push
push
pop
cmp
adc
adc
push
xchg
mov
or
adcb
leave
lea
or
jae
ss
rcrl
push
mov
cmp
pushf
adcb
jg
xor
sbb
test
add
roll
or
aaa
inc
mov
daa
or
inc
sub
push
rorl
add
roll
mov
push
pop
fmuls
dec
adc
push
mov
adc
roll
cmp
hlt
hlt
add
add
mov
adcb
pop
add
lds
jge
and
fsubrl
divl
mov
cmp
rcll
adc
jnp
mov
sbb
push
insl
rcrl
push
sbb
cld
sbb
mov
adc
push
lock
mov
push
into
fadd
push
sub
loop,pt
adc
adc
jno
or
add
lods
adc
adc
rcll
syscall
sarl
sbb
xor
add
or
mov
xchg
pusha
shrl
adc
fsubrl
pop
loopne
es
test
test
or
rorb
mov
or
jnp
add
push
or
adc
adc
adc
les
sti
add
mov
inc
loope
xchg
outsl
sbb
in
addl
shll
mov
jo
xchg
xor
cmc
mov
dec
inc
jo
nop
xchg
repnz
test
push
imul
shll
roll
ret
rcll
adc
sub
jb
test
or
or
add
sbb
fisubrl
cmp
pop
adc
psubw
push
and
mov
pop
enter
cmp
push
leave
push
shl
sbb
shll
mov
roll
into
sbb
sub
roll
push
mov
int
jbe
stos
shll
insl
or
mov
mov
adc
adc
push
jb
fnstcw
adc
jne
iret
repz
cmp
bound
sub
ja
xor
out
fwait
inc
mov
jns
test
test
cmp
shlb
jo
nop
int3
mov
push
rorl
int
add
adc
inc
ja
or
test
mov
push
and
sub
rorl
pop
adc
mov
das
shlb
pop
or
rcll
loopne
fdivrs
xchg
aad
aas
push
sub
adc
adc
pop
push
sbb
sbb
adc
and
mov
mov
pop
test
and
pop
push
xchg
test
pop
sub
jns
movsb
xor
and
out
or
push
pop
xor
andb
scas
jp
adc
in
rorb
andb
fidivrs
lret
sub
mov
mov
adcl
mov
xor
in
jo
push
xchg
add
movsl
mov
ficoms
int3
icebp
xor
add
dec
mov
cmpsb
cmp
xor
push
gs
xor
xor
mov
cmp
push
xor
mov
sbb
xor
jecxz
stos
sub
ja
gs
jo
xor
add
push
push
push
xchg
test
in
or
pop
inc
inc
lcall
pop
pop
xchg
and
and
mov
cmp
and
ret
lret
sbb
jg
push
test
sub
push
or
nop
mov
test
xor
mov
push
gs
push
repnz
push
jo
push
je
pop
scas
sbb
sub
mov
jns
dec
ret
jmp
stos
sbb
sbb
mov
or
dec
orb
test
and
jo
xor
mov
or
lret
cltd
lret
and
pop
or
lods
xor
in
mov
fs
push
jb
cmp
push
xor
push
or
loopne
cwtl
sub
cwtl
lcall
xchg
jo
mov
push
jg
push
sub
scas
add
or
push
mov
push
inc
xchg
and
pop
cmp
xchg
and
push
push
js
pop
inc
repnz
fs
push
mov
adc
push
rcrb
or
dec
push
xchg
nop
cmp
leave
push
orb
xchg
and
inc
dec
xchg
push
popa
call
inc
out
xchg
cmp
mov
push
dec
xchg
add
push
push
lahf
sub
outsb
pop
push
test
xorl
je
imul
es
push
dec
sub
fcompl
loope
push
xlat
leave
xchg
loopne
push
nop
push
lcall
dec
xchg
test
cmpsl
es
adcb
or
sbb
call
inc
adcb
pop
and
loop
dec
push
push
es
dec
adc
pop
fadd
xor
push
jo
xchg
test
xchg
and
inc
dec
loop
lret
dec
dec
add
std
xchg
jo
fs
test
push
cmp
leave
push
sbb
push
adc
cwtl
sub
push
hlt
sbb
push
mov
mov
in
cmpsl
mov
insl
xor
adc
call
mov
dec
lock
inc
add
pop
adc
or
xor
cwtl
cwtl
sub
pop
popa
xor
push
push
lcall
push
pusha
mov
cwtl
sub
into
sti
sbb
lock
dec
ret
loop
add
push
clc
xor
inc
mov
sbb
jb
push
inc
xchg
push
and
pop
push
out
or
mov
lock
cwtl
pusha
mov
push
fmuls
jmp
xchg
testl
dec
mov
aas
sarb
adc
and
push
adc
add
je
adc
test
adc
push
insb
and
inc
adc
push
and
jne
js
ljmp
and
add
dec
adc
dec
leave
xlat
push
repz
sbb
and
dec
xchg
test
adc
pop
adc
adc
pop
jne
fiaddl
xchg
addl
lods
das
adc
and
test
cwtl
bound
shll
call
jae
mov
fsubl
push
call
je
jecxz
aam
or
adc
dec
movsl
mov
or
mov
ret
xchg
lock
mov
daa
inc
mov
leave
call
out
loop
jae
cmp
aaa
jo
jae
int3
and
cmp
mov
fsubl
mov
xchg
ljmp
jae
or
loope
xchg
or
jae
push
dec
ret
xor
mov
or
jae
add
pop
push
aaa
push
call
xchg
test
cs
dec
ret
adc
xchg
loopne
push
xchg
add
xorb
dec
dec
sbb
jo
push
dec
ret
jae
xchg
cld
add
xchg
add
mov
mov
mov
loopne
pop
adc
lods
jae
loopne
dec
loop
sbb
aad
fisttpl
mov
ret
jae
cmp
dec
ret
in
ret
xchg
mov
jae
popa
dec
jo
jae
xchg
test
adc
cltd
scas
jae
and
pop
mov
mov
jae
sub
jo
dec
shll
je
push
dec
ret
cmp
mov
jl
shr
scas
clc
push
decb
xchg
pop
adc
sbb
dec
inc
add
test
cmp
sub
jmp
dec
jae
xor
xchg
movsl
ret
xchg
jae
jo
xchg
cmpsb
ret
xchg
jae
mov
sbb
test
or
aam
add
cmp
mov
jae
push
pop
ja
adc
xchg
dec
and
aad
or
push
jae
jg
or
adc
and
inc
shlb
cmp
inc
shll
jae
inc
or
test
lahf
call
and
cmpsl
jae
testl
adc
sub
sub
jnp
and
cmp
push
push
jae
inc
jmp
test
pop
lret
sbb
dec
sbb
add
mov
push
push
jae
cmpsb
xchg
sub
sub
jae
sub
mov
es
adc
jmp
jo
adc
js
cmpsb
cmp
mov
cmp
and
push
test
cmpsl
cmp
jae
out
add
or
lock
outsb
sbb
jae
roll
push
xchg
rolb
jae
xchg
inc
sbb
mov
jae
ss
and
jne
jae
push
loope
loopne
jae
xor
and
add
shlb
sub
ja
call
scas
sarl
mov
fcoml
dec
adc
cmpsb
loopne
lcall
dec
sbb
enter
mov
jae
sub
jae
and
or
adc
push
pop
loop
sub
cwtl
jg
mov
fmull
jae
test
adc
jl
fisttpll
fisttps
mov
inc
loopne
lock
or
fwait
cmp
aas
jo
test
popa
dec
jae
movsb
ljmp
test
add
mov
fsub
jae
jne
dec
ret
jae
pop
pop
add
jae
dec
mov
push
or
mov
and
push
cmp
xor
mov
popa
enter
testl
or
mov
lret
jae
les
adc
dec
shr
mov
jae
add
and
mov
iret
or
xchg
sub
jne
popa
dec
jae
sbb
jae
pop
push
push
clc
xor
pop
jae
push
aam
dec
jae
adc
xor
jae
pop
cmpsl
add
add
add
and
inc
or
push
sbb
dec
dec
inc
femms
dec
jae
push
adc
pop
adc
jae
test
je
aad
jo
pop
sbb
stos
push
jo
ret
xchg
jae
les
dec
xor
les
les
cmpsb
ret
xchg
jae
scas
jnp
xchg
dec
loope
iret
xor
arpl
jae
sub
cmpsl
push
xchg
jae
adc
je
adc
pop
adc
jne
out
inc
andb
jae
or
mov
and
xor
popa
jae
les
and
adc
jl
rcrl
jle
inc
add
inc
xchg
jo
sbb
jae
sbb
add
call
pop
mov
jbe
adc
fmuls
and
out
les
clc
adc
mov
pop
jae
xor
mov
xor
fst
popa
jae
cmp
sarb
jge
lods
arpl
outsb
cmp
lcall
dec
mov
push
dec
ret
and
and
movsl
pop
daa
push
xor
adc
or
cmp
jae
jo
das
rolb
mov
ret
jo
ret
jae
add
sub
mov
xchg
jo
sub
leave
sub
test
jae
mov
mov
push
xchg
rol
popa
jae
inc
les
jae
mov
jae
test
xor
lds
sbb
fdiv
test
sbb
and
dec
cmp
sbb
xchg
insb
and
fsubl
je
adc
add
and
stos
and
mov
rorl
push
dec
addb
jae
mov
xorb
push
dec
ret
xchg
ret
xchg
pusha
ss
adc
daa
test
ja
mov
sbb
pop
jae
cmp
shlb
jae
pop
xchg
loope
repnz
or
mov
jae
push
dec
sbbb
sub
jbe
popa
fildl
push
fcoms
and
push
jae
cwtl
pop
inc
or
jp
scas
loop
jae
ficoms
aaa
jo
adc
and
sbb
jae
ret
push
fcoms
sahf
mov
mov
dec
mov
shlb
mov
jae
cwtl
rorb
cmp
and
shlb
jae
sub
insl
jecxz
dec
ficomps
out
and
lods
jae
dec
mov
jnp
cmp
dec
cmp
add
jae
or
dec
or
cmpsb
jmp
popa
dec
jae
add
outsb
sbbb
repnz
into
push
mov
or
xchg
clc
mov
call
test
add
push
imul
iret
jnp
mulb
das
xor
mov
scas
mov
pop
mov
pop
fisubrs
in
push
in
ficomps
inc
inc
fnsave
clts
mov
ret
nop
xchg
mov
xchg
jae
scas
add
sub
pop
adc
daa
sbb
jmp
aas
je
or
and
shrb
jae
sbb
fisubs
btl
loopne
std
test
cmpsb
loopne
jae
jno
adc
jo
cs
ret
jae
xor
sub
aad
shlb
lahf
std
add
or
or
repnz
sub
or
adc
inc
shll
jae
scas
ret
and
xor
dec
jae
popf
xor
add
add
repz
or
jne
add
and
jae
dec
mov
xor
andb
add
jae
lock
cmp
out
sub
inc
loope
mov
sbb
jae
pop
les
xor
mov
imul
mov
jae
daa
and
test
neg
xchg
push
aas
push
call
fldln2
fcomp
ja
iret
cmp
and
test
daa
mov
xchg
ret
popa
dec
cwtl
sbb
pop
adc
aam
jnp
sub
ja
jae
xor
add
jae
push
test
aam
jae
dec
cltd
jp
xchg
jae
iret
ret
xchg
pusha
lock
jnp
jae
add
adc
xorl
add
or
jae
rorl
jae
dec
fisttpl
dec
inc
mov
aam
jae
add
mov
adc
sub
inc
push
mov
jae
pop
ljmp
sub
out
inc
xor
xchg
jo
jb
dec
arpl
add
push
xchg
jns
iret
xorl
xchg
adc
mov
jo
adc
mov
loopne
adc
push
xchg
test
jmp
jae
pop
movsl
aad
in
sub
adc
ret
sarb
and
cmp
jae
add
dec
xorb
mov
cmp
jo
clc
sbb
and
out
dec
sub
testl
jae
pop
les
clc
adc
adc
or
xchg
or
push
push
icebp
xor
or
cmp
lcall
movsl
pop
push
dec
ret
jae
addb
and
pop
push
jae
or
jo
adc
ret
xchg
nop
jbe
das
or
adc
insb
inc
xorb
mov
jno
test
decl
sbb
and
aam
jae
je
mov
pusha
and
shlb
call
ret
mov
push
jae
and
pop
hlt
jae
lahf
rorb
daa
dec
and
ret
call
sti
or
jae
test
mov
xchg
test
mov
jae
lret
mov
push
dec
jae
xchg
nop
bound
mov
mov
sub
mul
jae
sarb
ret
jae
sub
orl
jge
popa
jae
sbb
adc
cltd
sub
ljmp
inc
xchg
xchg
int3
push
cmp
jae
dec
sbb
pushf
les
jae
testb
jo
shll
or
inc
xor
dec
sbb
add
in
ss
xchg
lds
sbb
ljmp
ret
xchg
xor
ljmp
cmp
pusha
xchg
jae
ja
and
mov
hlt
or
and
cmp
loope
fmul
call
sub
sbb
ret
and
push
jae
add
mov
data16
inc
add
bound
jae
xchg
inc
xchg
in
ret
xchg
jae
jbe
adc
pop
jae
adc
xchg
cld
push
xchg
push
jo
sbb
pushf
int3
mov
jae
fmull
dec
and
shll
test
bound
je
adc
xchg
dec
bound
and
and
pop
adc
mov
ret
xchg
and
jae
sub
testb
jae
ret
movsb
or
bound
push
jae
fcomps
push
dec
jae
xor
popa
dec
sbb
testl
fs
popa
dec
mov
xchg
loopne
scas
cmp
adc
or
push
dec
jae
sbb
cmp
add
sbb
pop
dec
addb
adc
in
hlt
leave
rorb
sub
xchg
mov
xchg
jae
and
jae
pushf
out
dec
jae
sahf
xor
outsb
out
mov
lock
push
xchg
jns
pop
pop
dec
lds
sub
lcall
jae
pop
adc
jmp
and
xchg
test
scas
ror
jae
xchg
jo
jge
jnp
repnz
iret
pop
jnp
xchg
test
and
dec
cmp
data16
fistpll
jae
lds
push
xchg
jo
popa
jae
in
or
ret
jae
into
bound
rcll
pop
inc
adc
test
add
push
sarl
movsb
adc
lds
jae
out
add
lods
test
pop
sbb
jae
dec
push
or
dec
jae
dec
js
or
jle
rolb
jae
pusha
xor
mov
xchg
jp,pn
sbbl
dec
sbb
mov
and
aad
or
popa
call
mov
popa
and
mov
je
push
push
xor
fadds
aad
in
jo
mov
jns
in
roll
js
cmpb
lret
call
imul
fidivrl
push
dec
cmp
xorb
cs
mov
aaa
jmp
mov
lods
fidivs
xchg
pusha
adc
mov
push
or
popa
jae
sbbb
enter
sar
arpl
in
je
add
or
push
cmp
pop
xchg
sbbb
sub
and
roll
repnz
and
shrl
ret
and
sbb
testb
xchg
rcr
ljmp
push
test
and
pop
push
cltd
xor
and
inc
sar
push
inc
push
xor
xchg
hlt
dec
orb
movsb
jo
pushf
mov
leave
mov
mov
sub
dec
or
movsl
jb
jl
xor
cmp
fs
jno
lret
test
and
sub
out
cmp
shll
xchg
ret
xor
inc
and
cmp
ret
and
and
xor
push
dec
inc
rcl
lret
xlat
sub
push
and
nopl
rorl
aaa
shlb
fbstp
mov
xlat
nop
inc
and
roll
cmp
push
mov
aaa
and
push
cmp
add
enter
cmp
add
and
cmp
fs
nop
sub
cmpb
cmpsb
in
jl
orb
pop
insb
add
test
pop
in
sbb
lods
jo
nop
add
sar
inc
inc
push
js
sarl
mov
mov
lods
adc
push
xchg
adc
rcll
mov
pop
sbb
dec
or
dec
cmp
or
or
xchg
pop
scas
leave
add
dec
orb
inc
mov
test
xchg
cmpsl
in
inc
jg
repnz
jge
mov
cwtl
inc
lahf
mov
add
mov
add
push
pop
shll
push
movsb
jnp
pop
cmp
add
dec
movsl
repnz
mov
adc
nop
sbb
dec
mov
repz
add
xor
jb
dec
mov
sbb
sub
push
jno
xor
movsl
inc
shl
adc
shrb
sub
add
js
push
add
shlb
sbb
mov
repz
dec
mov
xchg
loope
sbb
adc
test
dec
fcoml
adc
popf
je
mov
mov
adc
mov
dec
cltd
inc
mov
repz
stos
sbbl
test
sub
pop
mov
sbbl
lret
repz
shlb
es
adc
mov
stc
xor
adc
mov
repz
adc
mov
repz
sbb
repz
loop
repnz
and
int3
mov
sub
and
test
std
loope
test
mov
repz
and
cli
mov
sbb
fbld
cmpb
adc
xor
push
ficoml
mov
push
jno
and
and
mov
inc
adc
add
add
bound
inc
addr16
cltd
mov
pop
adc
hlt
insb
push
push
push
outsb
and
inc
adc
lea
bound
xor
push
adc
sub
bound
add
adc
xchg
adc
loopne
lods
sbbb
pop
adc
int3
adc
or
test
loop
mov
enter
xorb
test
scas
fsubs
or
outsb
sbb
bound
cs
test
dec
fcoml
push
adc
push
pop
adc
pusha
push
add
dec
push
imul
adc
sbb
add
or
adc
test
mov
push
jb
faddl
and
sub
data16
sbb
inc
loope
adc
adc
test
add
mov
xchg
jnp
dec
or
sub
sub
adc
cmp
adc
and
jne
fcoml
pop
adc
mov
test
sbb
mov
adc
mov
bound
adc
mov
adc
fcoms
fnstsw
in
imul
push
push
adc
rcrl
or
adc
icebp
jo
inc
rcl
adc
loopne
adc
mov
push
mov
gs
mov
adc
mov
ret
inc
push
push
mov
add
push
insb
adc
test
inc
adc
daa
jmp
mov
popa
push
adc
adc
push
mov
sub
sbb
and
adc
push
stos
clc
and
or
mov
push
ret
sub
adc
push
insb
push
pop
adc
jle
add
sbb
imul
inc
adc
adc
insb
push
jo
pop
push
pop
dec
inc
adc
adc
insb
adc
or
adc
pop
adc
inc
sbb
in
mov
add
mov
lds
test
adc
ja
push
lds
add
sub
add
xor
adc
mov
push
adc
ret
and
xor
push
insb
adc
mov
mov
xor
xchg
or
jnp
sub
adc
xor
mov
loope
mov
loop
xor
enter
adc
fadds
adc
insb
push
mov
testl
es
rcrl
adc
cmp
adc
adc
ret
pop
adc
add
adc
sub
and
mov
pusha
ss
adc
jl
orl
adc
fsubrs
adc
test
or
mov
push
sbb
mov
and
add
stc
xchg
adc
in
mov
cmp
mov
push
mov
sub
test
inc
insb
adc
mov
pop
adc
mov
push
mov
insb
push
mov
adc
xchg
dec
rol
sbb
sub
insb
push
pop
loop
adc
mov
push
cmp
loopne
adc
lock
adc
movsb
sub
sub
sbbl
out
sub
sub
adc
or
cmp
mov
mov
and
sub
mov
adc
mov
push
mov
mov
jno
and
inc
insb
adc
adc
orl
adc
adc
pop
sub
lods
mov
aaa
shrl
sub
out
test
jle
mov
test
inc
insb
push
adc
mov
sbb
ret
adc
es
adc
pop
adc
int
pop
adc
adc
push
sbb
adc
pop
ror
fimuls
cmp
adc
popa
jecxz
sub
inc
loope
adc
insb
push
mov
sub
into
bound
cmp
js
sub
je
btc
insb
push
adc
mov
adc
adc
test
push
lds
sub
lods
ja
pop
adc
repnz
add
mov
inc
daa
leave
jnp
mov
rcll
sub
and
std
es
xchg
push
mov
adc
pop
pop
adc
push
lods
push
icebp
inc
insb
push
adc
mov
and
mov
faddl
fnstenv
pop
adc
sub
les
adc
push
adc
gs
adc
adc
out
and
mov
repz
ljmp
movsb
push
pop
les
test
inc
mov
addl
unpckhps
inc
popa
sub
inc
and
loop
inc
mov
adc
and
adc
adc
xchg
lds
add
pop
adc
push
mov
mov
mov
mov
mov
loope
add
lods
push
mov
adc
mov
mov
mov
popa
lock
dec
adc
lods
dec
rcll
mov
mov
mov
adc
dec
sbb
inc
rcrl
adc
and
js
mov
loop
push
test
lock
mov
fsubs
mov
pop
lds
test
sbb
bound
sbb
insb
mov
push
insb
adc
adc
adc
push
mov
mov
fcoms
push
inc
lods
fsubs
mov
setp
sbb
jbe
adc
in
out
adc
and
xchg
mov
dec
mov
jmp
bound
sub
fiadds
les
std
cmpsl
pop
cmc
psraw
pop
adc
jmp
add
loope
cmpsl
mov
mov
cmp
adc
push
push
sbb
jnp
inc
add
sub
imul
mov
jne
call
mov
push
call
hlt
mov
mov
inc
call
mov
pop
pushl
fbld
js
test
adc
xor
pop
adc
push
xchg
test
sbb
push
adc
jnp
insb
push
adc
inc
push
lds
add
cmp
add
setae
ret
sub
call
sbb
xorl
mov
sbb
sub
cmp
sub
fcoml
push
insb
adc
push
mov
sub
sbb
add
ficoms
jb
mov
pop
adc
mov
mov
mov
js
adc
adc
stos
fcoms
aaa
sbb
mov
sub
adc
add
push
xchg
cmp
push
test
add
adc
push
lds
sahf
xor
adc
pop
adc
and
orb
insb
push
push
loopne
add
mov
push
adc
mov
scas
inc
sub
xor
cmpsb
mov
pop
mov
inc
mov
pop
andl
mov
adc
pusha
adc
sub
and
mov
sbb
or
xor
enter
cld
adc
test
inc
jp
ret
pop
adc
bound
fmuls
outsl
es
mov
adc
inc
test
sub
test
or
dec
add
pop
adc
lds
rclb
dec
call
adc
loopne
inc
lds
adc
xchg
and
pop
adc
mov
loope
adc
adc
sbb
subb
mov
data16
push
jl
push
call
push
mov
adc
lds
add
popf
arpl
repz
inc
les
test
adc
adc
push
add
adc
push
push
adc
int3
test
xor
adc
f2xm1
add
mov
fdivl
adc
push
sbb
adc
push
cli
mov
add
fsubs
rcrl
addb
in
out
jbe
les
test
or
adc
mov
loope
adc
jmp
adc
loop
or
dec
stos
adc
mov
adc
pop
pop
adc
rcll
fmuls
and
fsubs
mov
repnz
push
and
adc
adc
insb
push
pop
adc
mov
imul
pushf
rcrl
ficomps
inc
cmpl
sub
adc
push
test
sbb
mov
popa
xor
aam
mov
fcoml
cmp
pop
test
adc
add
pop
adc
cmp
adc
mov
pop
or
addl
cmp
mov
push
adc
fcoms
js
pop
cmpsl
mov
push
sbb
mov
and
call
fcoms
push
add
in
push
lds
lock
push
clc
cmpsb
lret
es
sub
jmp
in
pop
sarb
ret
jo
jns
mov
push
push
lret
pushl
insb
push
mov
js
cmp
les
inc
call
adc
in
mov
xor
dec
sub
mov
roll
jo
or
push
adc
push
adc
jmp
mov
xchg
xor
jb
pop
add
add
sub
push
lds
adc
stc
add
sub
push
or
or
loope
mov
inc
mov
adc
sub
out
outsl
shlb
adc
adc
lret
sbb
push
adc
push
js
adc
inc
test
jo
adc
mov
sub
add
sub
sub
lock
aam
rcr
sahf
popa
repz
pop
div
clc
pop
mov
repz
rol
aas
pop
pop
inc
insb
push
cmp
adc
adc
sub
iret
mov
and
or
in
inc
push
add
and
bound
sub
pop
add
mov
rol
inc
insb
push
adc
adc
sbb
adc
cs
mov
mov
test
mov
dec
call
aam
dec
into
fildll
mov
adc
inc
insb
push
adc
push
or
or
push
add
inc
loopne
les
daa
mov
adc
sub
inc
insb
push
sbb
adc
adc
mov
inc
popa
test
adc
or
jo
and
jmp
iret
jecxz
sub
bound
dec
es
mov
out
sarb
mov
mov
jmp
stc
cmpsb
adc
andl
add
push
adc
sub
sub
movsl
addl
adc
mov
xchg
jb
bound
test
mov
popa
xchg
adc
sahf
andb
test
adc
ret
adc
sub
fsubs
bound
mov
pushf
popf
jne
mov
shll
add
test
lret
mov
or
sub
movsb
lahf
loop
sub
or
sub
test
ficoml
fsubs
hlt
mov
push
les
mov
or
adc
fcompl
aas
clc
adcb
fdivrl
or
adc
dec
jae
xchg
mov
cmp
imul
or
jae
loope
add
pusha
cmp
jae
lods
sub
and
pop
sbb
xchg
add
or
jae
jp
fcompl
imul
pusha
movsb
jae
xchg
xchg
pusha
or
dec
adc
sub
les
sbb
adc
imul
jae
rclb
outsb
ret
sbb
sub
xchg
xchg
jo
xchg
pop
cmp
stos
jae
inc
sub
mov
jae
mov
movsb
and
test
imul
lods
pushl
pop
ret
sub
ret
cmp
aaa
roll
push
push
or
imul
movsb
jbe
push
call
es
ss
je
out
lods
mov
adc
lea
loopne
mov
inc
lea
std
imul
jecxz
popa
mov
aam
xchg
xchg
loopne
cld
movsb
and
xchg
jo
push
inc
les
or
mov
imul
jae
cmp
push
cmp
sahf
or
mov
and
or
lea
loopne
jae
pop
addb
mov
lds
cmp
mov
bound
push
jae
jmp
ret
pusha
movsb
and
jae
and
js
and
cmp
les
jae
and
push
and
pop
adcb
jae
rclb
outsb
dec
cmpsb
jae
imul
mov
dec
dec
mov
or
es
loope
jae
imul
ret
or
inc
pop
jae
pop
ret
adc
xor
jae
loopne
sbb
adc
mov
pop
adc
sub
dec
js
jae
imul
into
rcr
jnp
and
jae
add
imul
add
sub
loope
test
push
aad
mov
mov
call
mov
adc
pop
dec
pop
jle
pop
sbb
shlb
or
adc
push
lods
ret
pop
ret
jg
ret
inc
jae
inc
rolb
jae
add
rclb
jae
sbbb
mov
jae
adc
sbb
jae
sub
movsb
and
adc
inc
jb
mov
and
xor
loope
mov
fwait
jae
xchg
addb
jae
mov
jl
dec
js
pop
enter
dec
jae
mov
mov
sarl
xor
jae
push
sub
jle
dec
xchg
lock
and
pop
jns
adc
xchg
jb
jl
rcrl
inc
jno
jno
and
xchg
and
mov
adc
mov
xor
jae
xchg
jo
pop
stos
dec
dec
mov
xchg
pusha
shlb
or
dec
push
out
sbb
adc
cmpsl
jo
rclb
jae
add
sub
sahf
stos
idivl
incb
push
mov
mov
lock
jmp
pop
call
inc
pop
jae
in
nop
fistps
add
insl
push
sbb
add
push
mov
add
adcb
pusha
adc
pshufw
aam
rorl
jae
sub
cmp
nop
bound
or
movsb
and
adc
shlb
jp
popa
aad
sbb
sbb
jae
add
xchg
ret
mov
sub
jae
xchg
cmpsl
sbb
jae
ja
xchg
xchg
pusha
scas
jae
scas
xchg
xchg
loopne
jae
and
xorl
dec
and
adc
xor
test
dec
mov
or
cmp
dec
jae
push
jo
and
and
pop
sbbb
adc
cmpsb
mov
ret
jae
inc
and
xchg
hlt
test
bound
mov
movsb
and
or
pop
pushf
rclb
push
jb
mov
clc
mov
movsl
iret
mov
out
adcb
xor
jae
adc
xor
add
push
jae
and
mov
cmp
popa
dec
xchg
jo
mov
ficoml
outsb
adcb
xor
jae
or
xor
adc
xor
lods
rorb
dec
jae
pop
ret
je
jae
dec
mov
cmovbe
jae
mov
imul
and
add
push
xor
add
add
jae
jne
add
mov
add
sub
or
xchg
pusha
daa
sbb
jl
adc
xchg
jae
je
push
xor
jae
jnp
rcl
dec
dec
jae
mov
dec
dec
sbb
add
inc
shlb
add
rclb
les
mov
and
push
movb
inc
and
pop
ret
out
push
add
or
dec
jae
inc
pop
addb
jae
sbbb
mov
sub
lea
test
add
mov
pop
pushf
adcb
or
xor
lock
jae
adc
movsl
adc
dec
fldt
adc
and
push
lea
loope
popa
inc
ljmp
movsl
xchg
xchg
loopne
jae
and
dec
pop
or
dec
lds
insb
adc
sub
cmp
push
xor
jae
pusha
movsb
and
or
mov
cwtl
sbb
mulb
dec
xor
jae
inc
and
mov
es
dec
outsl
faddl
ret
cmp
outsb
pusha
movsb
and
xor
adc
or
ret
lea
into
in
and
adc
cmp
xor
adc
popa
and
rclb
sbb
xor
adc
pop
cmc
mov
mov
or
push
jae
rclb
pop
fdivl
dec
push
push
mov
pop
xor
adc
sbb
inc
jle
xchg
mov
sub
jae
push
add
sub
or
sub
sub
add
popf
mov
jae
outsb
mov
and
pop
addb
testl
inc
push
shlb
outsb
sbb
jae
sbb
xor
adc
and
sub
jae
sti
out
inc
pop
sbb
jae
addb
test
jae
test
push
sbb
aad
jmp
es
popa
xor
les
mov
fwait
pop
mul
shlb
sbb
jmp
push
sbb
lock
iret
clc
in
sbb
jge
call
hlt
pop
shll
inc
call
xchg
sub
jo
ljmp
arpl
dec
sti
cmpb
dec
jg
and
mov
xchg
test
add
jae
push
pop
xor
adc
and
mov
pop
and
pop
ret
xor
inc
jae
xor
fadd
dec
jae
and
mov
xchg
rclb
scas
sbb
test
and
adc
jae
mov
jmp
in
es
call
and
pop
jnp
cmpsb
fs
adc
push
and
iret
leave
jnp
stos
push
mov
rcll
xor
adc
sbb
scas
ljmp
mov
or
mov
daa
imul
nop
imul
cmp
mov
sbb
push
sbb
dec
adc
xor
mov
fiadds
jae
ret
jp
test
jae
xchg
push
or
jae
sub
rclb
jae
dec
dec
cmp
mov
adc
imul
rclb
jae
mov
adcl
sbb
aaa
int3
sbb
movsb
and
loope
bound
outsb
shll
jae
xor
and
and
and
adc
inc
mov
jae
aaa
xor
dec
jbe
inc
pop
ret
sub
popa
je
or
ret
mulb
jae
icebp
adc
mov
add
sub
jae
sub
pushf
outsl
mov
call
and
pop
ret
xchg
xchg
loopne
xchg
sub
or
pop
inc
and
lret
xor
lock
imul
inc
pop
cmpb
adcb
mov
xchg
lea
mov
rorl
inc
pop
and
ja
jae
sub
inc
sub
jae
call
cld
mov
sub
inc
adc
and
adc
push
adc
cmp
or
rclb
mov
add
outsb
sbb
aad
jae
cmpsb
push
and
add
fs
ret
pop
xor
mov
int3
add
xchg
jae
lock
imul
insl
and
mov
lcall
sub
bound
cmpb
adc
jo
xor
std
stos
aad
pop
ret
cs
pop
ret
mov
outsb
sbb
and
ret
jae
dec
mov
cmp
jae
pusha
push
out
push
xchg
xchg
jo
gs
lock
lea
nop
and
pop
xor
movsb
mov
push
jge
inc
lahf
mov
inc
pop
inc
scas
aad
dec
adc
xor
adc
movsl
test
jae
xlat
add
mov
fdivs
xor
adc
ret
enter
cmp
and
jae
jl
cwtl
pusha
movsb
and
xchg
or
call
dec
dec
jae
xor
add
test
inc
lea
dec
xor
sbb
fldenv
pop
jae
jo
mov
rorl
and
inc
push
mov
test
inc
pop
ret
push
sub
pop
push
xorl
and
loop
sbb
cli
addl
or
in
orl
push
adc
jns
rorl
jae
adc
jecxz
push
adc
cmp
adc
or
sbb
imul
mov
loope
sbbb
mov
push
xchg
and
imul
mov
jae
sbbb
and
ja
inc
cmp
sbb
bound
sub
mov
xchg
pop
inc
and
jns
inc
cmpl
jae
rclb
fcoml
mov
clc
ds
inc
and
jg
cmp
shlb
jbe
xchg
xchg
and
cmp
sbb
aad
dec
jae
sbb
dec
pop
jae
in
out
scas
xor
cmp
shll
pop
dec
xor
pushf
bound
dec
pushf
jne
mov
cmc
out
out
mov
pop
xor
adc
aaa
sub
pushf
pop
imul
int3
stos
add
jmp
xchg
xchg
jle
pop
add
mov
enter
outsl
dec
xor
sbb
sub
xchg
jo
cmp
add
xchg
movsb
and
xor
sarl
xchg
xchg
add
adc
pop
jae
and
mov
jae
adc
aam
jae
and
xchg
jo
shlb
inc
xor
adc
orb
dec
jecxz
iret
mov
inc
jae
pop
mov
add
xchg
subl
cltd
and
jae
pop
add
push
mov
mov
sbbl
push
inc
pop
andb
xor
stos
mov
jae
mov
lea
inc
nop
jae
or
or
xchg
mov
ficoms
loop
rorl
jae
stos
dec
pop
jne
jmp
fidivl
xorb
xor
cmp
adc
sbb
sbb
jae
dec
xor
mov
loope
jae
fisubrs
lock
inc
sbb
adc
xor
lea
cmp
jae
lock
mov
jae
mov
rcl
dec
dec
jae
inc
pop
orb
mov
pop
ret
pop
jae
mov
or
cmp
repz
stos
test
test
jnp
mov
and
lea
punpckhwd
sub
dec
or
dec
jae
aas
sti
shll
xchg
or
jmp
inc
aaa
jge
add
fwait
inc
push
movsb
jae
idivb
xor
adc
hlt
jae
mov
jnp
das
sbb
xchg
and
insl
cmp
test
test
ss
or
shlb
out
mov
imul
jae
rclb
fisubs
mov
mov
push
cmp
fistpll
inc
pop
xorb
or
insb
clc
jae
xchg
xor
mov
cwtl
jo
jae
insb
lods
xor
lea
cmp
dec
cmp
sbb
jae
rclb
add
lret
mov
pusha
inc
xor
mov
mov
jae
adc
adc
mov
or
jae
push
push
and
sub
loopne
add
push
xchg
jae
outsb
pop
push
mov
xchg
jae
xor
out
add
and
and
inc
mov
or
jno
add
push
add
and
pop
data16
sub
adc
loope
aas
and
dec
xor
push
xor
dec
jae
gs
sbb
imul
jae
inc
cmpsb
sbb
jae
inc
and
mov
adc
adc
jae
inc
mov
push
cmpl
jae
cmp
ret
mov
out
jae
mov
add
data16
mov
add
jae
movsb
and
jae
mov
mov
adc
into
mov
mov
aam
dec
jae
ret
ljmp
mov
xor
jae
xchg
movsl
add
xchg
jae
pop
ret
jae
dec
mov
mov
mov
jae
xchg
cmp
and
xchg
xor
jae
ret
fidivrs
add
mov
and
pop
ret
clc
mov
jae
xor
adc
push
jae
imul
addb
and
mov
xor
jae
and
and
mov
sbb
mov
dec
dec
xor
jae
ret
mov
jae
add
adc
and
sbb
or
subb
dec
dec
mov
sub
push
arpl
mov
ret
lea
movsb
and
sub
in
pop
pop
sbb
and
push
rol
dec
jae
mov
popa
add
imul
pop
scas
sub
jae
pop
les
rclb
jae
stos
xchg
xchg
jo
jae
adc
cmpsl
push
push
ret
xor
gs
and
jb
adc
adc
jae
xor
adc
jae
add
xor
jl
movb
inc
sbb
or
adc
arpl
sbb
or
xchg
and
rclb
adc
jae
and
add
dec
inc
lea
or
jae
pop
ret
and
fdivl
inc
pop
jae
push
push
and
mov
pop
push
ds
rclb
lret
pop
sbbb
mov
fiaddl
pusha
movsb
and
inc
inc
test
fwait
add
jae
xchg
pop
mov
sbb
pop
mov
jae
pusha
fwait
add
jae
xchg
pop
ret
push
push
pop
outsb
rol
sub
add
push
push
pop
mov
xor
inc
pop
ret
adc
mov
popa
xor
rorl
adc
and
and
adc
xchg
mov
inc
dec
adc
orb
xchg
sub
clc
movsb
push
lahf
clc
orb
test
mov
pop
es
pushl
sub
adc
test
pop
sub
inc
dec
xchg
rcll
insb
dec
in
and
or
xchg
and
dec
add
mov
cmp
xchg
es
ret
xchg
mov
shrl
pop
cmp
aam
dec
xchg
or
dec
mov
adc
outsb
xchg
es
ret
ss
mov
and
push
cmp
xchg
cmpsb
test
lcall
dec
mov
push
add
xchg
adc
inc
dec
js
push
sub
sub
xchg
inc
dec
sbb
inc
sub
rclb
xor
adc
orb
add
pop
xchg
dec
sub
pop
ret
dec
js
sbb
adc
push
mov
mov
test
add
rcll
in
out
and
jo
into
pop
faddl
rcl
repz
mov
push
lahf
push
sub
lds
imul
and
ss
in
xor
adc
xor
adc
push
loopne
xchg
pusha
mov
lahf
clc
inc
add
shlb
and
or
mov
push
dec
mov
andb
aaa
xchg
jb
or
mov
xchg
xchg
roll
jge
xchg
xor
fists
iret
and
adcb
leave
cmpsl
es
xchg
mov
sub
or
stc
sub
nop
lret
cltd
add
push
and
sub
cwtl
push
mov
aaa
inc
adc
sbb
repz
dec
scas
push
fdivr
out
jns
out
insb
and
ret
es
dec
mov
jnp
xor
push
pop
jne
and
or
adc
bound
mov
push
and
mov
cmp
dec
xchg
and
and
sub
into
xchg
inc
push
adc
rcll
popa
pop
xchg
mov
es
ret
mov
add
xchg
xchg
xchg
dec
mov
pop
push
xchg
mov
xlat
adc
cs
xor
scas
pusha
mov
adc
ds
pop
sbbb
int3
pusha
cltd
mov
mov
mov
push
dec
mov
jl
inc
dec
cmp
xor
rcll
in
les
ret
xchg
xlat
dec
addl
leave
insb
sbb
xor
adc
clc
xchg
inc
mov
cmp
sbb
and
cmp
xchg
adc
xchg
in
roll
fcompl
es
xchg
mov
test
dec
mov
movsb
shll
les
inc
or
and
lods
mov
cmp
and
xchg
jo
mov
pop
ret
fidivs
mov
cmpsb
xchg
mov
mov
cltd
shrb
dec
cmp
fsub
js
rcll
add
jl
rcll
fdivl
cmpsl
aad
nop
add
mov
pop
push
mov
int3
sub
xchg
dec
and
push
adc
es
ret
mov
mov
sub
mov
or
add
fwait
cwtl
mov
adcb
push
dec
mov
js
push
xor
mov
mov
cwtl
push
ds
xchg
jo
stos
cmp
mov
mov
js
cs
push
xchg
mov
mov
cmp
cmpsl
rcll
int3
sub
cmpl
rcll
into
adc
push
xor
add
inc
mov
into
fsubrl
es
mov
movsl
loop,pt
mov
es
ret
dec
shll
negb
add
pop
ret
mov
add
aaa
jns
mov
pusha
pop
aam
dec
push
pop
xor
adc
cs
push
mov
or
test
sub
dec
mov
jae
imul
pop
mov
adc
inc
popf
jmp
push
repnz
lcall
mov
loope
add
mov
mov
and
pop
es
bound
test
es
mov
stos
es
cs
mov
mov
lds
orl
mov
mov
rcll
out
int3
es
push
mov
mov
mov
pop
ret
es
sub
mov
adc
pop
mov
xor
mov
pop
ret
mov
dec
sub
sbb
dec
mov
mov
and
inc
es
bound
ja
shll
dec
mov
inc
and
or
loop
jmp
pop
pop
mov
xchg
call
dec
or
addr16
bswap
xchg
call
lahf
mov
ds
sub
call
nop
jl
call
dec
dec
test
dec
ret
mov
cwtl
es
es
mov
es
adc
mov
fadd
inc
dec
mov
es
mov
es
ret
and
addr16
dec
ret
mov
clc
es
es
mov
mov
adc
push
dec
ds
sbb
mov
addr16
and
sbb
adc
mov
mov
and
and
push
adc
and
mov
inc
dec
jo
mov
adc
xlat
mov
pop
mov
push
push
inc
loop
adc
lcall
xor
dec
mov
mov
push
adc
mov
pop
push
push
mov
mov
mov
push
mov
rcll
out
es
mov
mov
mov
inc
dec
mov
scas
mov
pop
adc
mov
mov
push
jnp
mov
mov
scas
pop
or
movsb
adc
scas
adc
push
fcoml
adc
in
cltd
or
mov
mov
inc
jno
inc
jne
push
dec
pop
adc
inc
dec
mov
or
cmc
fcomps
js
or
ss
lcall
cld
cs
pop
adc
dec
cmp
or
cmovs
mov
and
mov
rcll
mov
andb
into
addr16
ret
cmp
push
inc
test
mov
loop
or
sbb
push
sub
stos
roll
adc
arpl
ss
mov
callw
xchg
cld
add
sub
add
lods
es
dec
mov
push
and
aaa
rcll
mov
sbb
cmpsb
mov
dec
adc
fcoml
sub
push
daa
pop
ret
dec
sub
js
ret
ficompl
js
inc
mov
and
dec
roll
mov
js
shll
add
fimull
jbe
mov
cwtl
cmp
inc
dec
adc
cltd
push
mov
jo
bnd
add
call
and
rolb
mov
pop
popf
stos
add
mov
and
dec
popa
or
dec
sarl
das
in
sbb
sbb
sbb
dec
leave
or
sub
mov
or
insb
and
dec
mov
mov
adc
nop
sbb
xor
dec
mov
cmp
push
xor
mov
mov
pop
adcb
sub
jle
or
out
ja
inc
dec
mov
inc
sub
dec
js
jle
mov
mov
sbb
push
push
lcall
sbb
sbb
xor
add
pop
mov
push
add
dec
adc
or
roll
pop
add
sub
mov
adc
inc
dec
pop
popa
mov
mov
shlb
xor
mov
push
cmp
push
and
es
ret
bound
inc
mov
dec
mov
or
aad
pop
dec
inc
mov
cwtl
mov
call
mov
mov
sub
sub
pop
mov
jne
inc
adcb
add
es
and
in
stc
mov
mov
mov
push
dec
mov
mov
add
sti
push
jecxz
rcll
out
lcall
xor
xchg
mov
lcall
sub
fsubr
add
push
inc
adc
mov
cmpsb
pop
xor
adc
jo
mov
dec
xor
fisubrl
push
xchg
rclb
adc
jle
dec
mov
cmp
pop
in
mov
mov
push
mov
pop
push
lock
inc
arpl
cmp
clc
rcll
jae
cmp
mov
jae
rcll
in
enter
lcall
inc
dec
jo
movsl
jl
pop
pop
lds
fisubrs
aam
jae
dec
mov
mov
mov
pop
mov
jae
out
adc
and
call
xor
jae
stos
lea
sub
jae
and
adc
call
jae
nop
clc
pop
xor
adc
test
xchg
jo
jae
mov
in
movsl
dec
jae
roll
aaa
adc
adc
fsubrs
mov
in
jb
mov
pop
es
ret
jae
xchg
pusha
cmpsl
sbb
mov
jecxz
and
sbb
xchg
dec
mov
inc
or
roll
inc
or
lcall
mov
adc
push
jae
and
rcll
outsb
push
push
test
xor
mov
or
or
es
cmpb
pop
fidivrl
or
jle
aaa
or
nop
leave
aas
xor
pop
dec
sub
dec
shll
or
inc
jae
dec
arpl
lcall
ret
cwtl
push
jae
pavgw
xor
adc
mov
adc
outsb
js
roll
push
xchg
push
pop
ret
jae
sub
jae
push
dec
add
inc
dec
sbb
mov
nop
shll
sbb
push
add
rolb
inc
jae
add
jo
ljmp
scas
test
dec
mov
sub
jae
lock
mov
mov
repz
adc
adc
in
add
adc
xor
stos
inc
mov
jno
int
adc
sbbb
adc
adcb
adc
pop
or
pusha
add
sub
mov
xchg
cmovge
xchg
andb
lods
imul
test
pop
sub
call
xlat
cs
ret
xlat
xchg
mov
aas
ret
and
sbb
cmpb
add
pop
xchg
mov
mov
test
xchg
cs
ret
outsb
xchg
cs
cmpb
sbb
push
xchg
dec
dec
add
add
and
adc
xchg
lods
jle
push
and
xlat
push
pop
enter
jle
jle
jg
xchg
mov
xor
jne
adc
add
fnstsw
xchg
pushf
or
add
xchg
xchg
jge
pop
cmpb
pusha
and
xchg
enter
adc
jno
adc
mov
xchg
xor
test
pop
xchg
cmc
jl
mov
xor
xchg
inc
jb
or
rclb
cmp
les
xchg
and
mov
add
xchg
call
ss
jne
adc
cli
xchg
cmp
xor
pop
jl
jl
sub
loope
jl
lds
test
mov
jl
repnz
pop
or
jl
and
inc
dec
mov
push
cmp
nop
comiss
adc
mov
cmp
push
pop
sub
mov
xchg
jno
adc
daa
xchg
mov
xor
lods
cmpsl
or
cmpsb
mov
mov
mov
test
and
add
test
mov
test
xchg
mov
aam
and
inc
add
shll
or
cmp
clc
inc
sub
loope
xchg
pop
mov
aaa
int3
push
xchg
outsl
rolb
jecxz
inc
add
fildl
adc
rclb
cmp
rclb
jne
adc
jno
adc
rcrb
dec
jno
xchg
sbb
or
roll
xor
jne
adc
xchg
mov
pop
xchg
test
mov
pop
adc
jns
push
pop
mov
lret
pop
sub
orl
and
inc
dec
mov
adc
fsubl
jmp
cmp
adc
call
mov
aad
add
sub
loop
and
sahf
jl
sub
loop
test
dec
pop
fidivs
adc
xchg
lret
dec
cmp
xor
rolb
push
or
stos
add
cmc
cwtl
mov
sub
and
mov
aas
js
adc
mov
enter
ds
add
pop
mov
or
mov
sbb
cmp
dec
pop
xchg
mov
mov
fdivr
inc
dec
mov
rcll
in
rclb
test
jne
jno
push
adc
pop
xchg
in
ret
jne
xchg
je
adc
ss
xchg
mov
mov
test
xchg
xor
sbb
js
mov
or
jno
xchg
and
shll
xchg
xorb
add
sub
sarl
xor
mov
pop
sub
xchg
add
add
cs
xchg
aas
and
pop
adcb
pusha
mov
xor
inc
xor
addb
sbb
fsubp
mov
in
jne
mov
inc
dec
mov
push
xchg
pop
adcb
add
xchg
aaa
lret
and
adc
xchg
pop
das
inc
call
rcll
rcll
xchg
cltd
sbb
mov
push
test
dec
pop
mov
insb
add
ret
push
scas
mov
mov
inc
mov
jo
push
xor
adc
xchg
aaa
xor
or
jne
and
jp
mov
jno
adc
xchg
rcll
push
pop
inc
push
xchg
pusha
shlb
call
xchg
add
cltd
pop
pop
sub
mov
sub
pop
sub
pop
xchg
out
lock
xchg
xchg
dec
jge
pop
sub
dec
popa
imul
add
addr16
iret
jb
jbe
cmpsb
mov
call
or
mov
adcb
outsl
add
pop
xchg
test
jmp
jns
xchg
and
xchg
pusha
out
lret
push
xchg
mov
and
sbb
xchg
jae
push
test
sub
xchg
ja
adc
mov
mov
jl
es
ret
sbb
data16
push
mov
sbb
sbb
js
cs
ret
mov
mov
dec
fwait
cmpsb
and
push
xchg
and
loopne
xchg
andb
jo
into
je
rolb
loope
and
js
in
push
ret
mov
xchg
pop
mov
cmpsl
scas
xchg
add
sbb
scas
jno
adc
xchg
xchg
mov
cmp
sub
and
push
push
push
inc
cltd
mov
xchg
xchg
jne
pop
roll
xchg
or
lcall
xchg
aad
mov
add
dec
notb
notl
push
or
push
or
pop
push
movsl
insl
pop
ret
int3
pop
jmp
subl
les
jns
xor
in
cmp
pusha
cmp
inc
xchg
inc
push
sbb
push
loopne
xchg
push
dec
cmp
push
cmp
and
dec
or
aad
xchg
xchg
cmc
mov
cmp
mov
or
lock
xchg
repnz
adc
sub
pop
sub
rcll
in
and
xor
lcall
xchg
push
insb
and
gs
or
mov
adc
mov
popa
sub
xchg
inc
dec
sbb
mov
cmp
xchg
nop
in
push
sbbl
cwtl
out
mov
or
lea
mov
mov
fistl
mov
mov
inc
insb
mov
sub
mov
xchg
insb
and
jne
rcrl
loop
xchg
in
mov
call
leave
call
inc
sbb
cmp
pop
xchg
sbb
in
add
out
loop
push
jno
adc
shll
xchg
sub
mov
sbbb
push
test
outsb
mov
in
pop
push
pop
mov
jge
cs
sub
pop
mov
sbb
cwtl
xchg
pop
mov
lds
jno
ficoms
cs
rolb
call
jo
mov
and
mov
loop
xchg
test
or
rcll
mov
pusha
das
cs
xchg
pop
stc
or
mov
mov
push
jns
dec
imulb
es
cmp
ds
inc
jg
sbb
rcll
push
mov
adc
fs
xor
xchg
xor
xchg
lods
xor
loope
cs
xchg
sub
orb
addr16
xchg
dec
xor
xchg
xor
xor
pop
xchg
inc
xchg
jns
xor
call
inc
xchg
pop
sub
pop
cmpb
xchg
pusha
sub
cs
ret
jle
or
or
or
mov
push
or
push
or
push
dec
cmp
sbb
out
test
sbb
scas
out
orb
push
and
pop
ret
je
aas
push
cmp
iret
lahf
sub
xchg
push
mov
push
mov
rcll
xchg
inc
dec
mov
lret
testb
mov
rcll
or
cltd
mov
jmp
add
pop
xchg
jne
adc
fcoms
xchg
rcll
xchg
in
push
sbb
mov
cs
adcb
pop
outsb
xchg
pop
mov
sbb
xchg
cs
ret
mov
cmp
sbb
sbb
aas
imul
cs
xchg
in
push
clc
fimuls
or
adc
mov
sbb
cs
push
out
loopne
fisubl
mov
cmp
sbb
and
rclb
xchg
jae
cmp
lret
xchg
mov
stos
mov
dec
ret
pop
xchg
xchg
cs
xchg
cwtl
mov
and
rcrl
adc
xchg
inc
pop
sub
test
jo
movb
pop
xchg
imul
test
sbbl
xchg
xlat
ljmp
dec
mov
or
xchg
cmp
cmp
orl
mov
jmp
xchg
pusha
out
xchg
lds
mov
repz
mov
fcoms
imul
mov
xchg
pop
mov
faddl
call
ret
test
pop
xchg
xchg
pusha
jno
clc
sub
mov
je
xchg
cmpb
xchg
pop
addb
xor
push
ret
and
sbb
dec
push
ret
push
or
jo
jae
mov
ret
inc
xchg
mov
xchg
es
xchg
jae
add
add
ret
dec
mov
inc
xchg
cs
ret
mov
pop
les
mov
call
inc
dec
fsubrs
sbb
mov
mov
xchg
lds
xchg
pop
jg
fdivp
mov
dec
push
imul
xchg
stc
and
mov
push
or
mov
pop
pop
xchg
pop
sub
xchg
test
mov
xchg
sarb
pop
sub
xchg
mov
cmp
scas
jl
ret
xchg
fsubl
jo
cs
imulb
roll
test
sub
movsb
push
dec
mov
pop
xchg
sbb
or
out
rolb
aad
sbb
rcll
rcrl
lods
cmp
fwait
and
adc
mov
xchg
loop
and
xchg
jo
imull
aad
push
lock
daa
mov
addl
cld
xchg
es
loopne
adc
sub
test
ret
js
sbb
sub
in
sbb
cs
xchg
mov
xchg
inc
dec
mov
sbb
rcll
jo
xchg
lock
cmp
adc
push
and
inc
js
lods
mov
sbb
int
and
ss
xchg
dec
loop
add
mov
mov
jnp
xchg
inc
jmp
and
lods
rolb
mov
xchg
int3
xchg
outsb
out
mov
xchg
rclb
out
rcll
repz
sub
add
rcll
mov
cs
ret
aad
dec
mov
movsb
cltd
stos
ljmp
pusha
scas
cs
xchg
push
ljmp
sub
and
or
ret
push
aas
lods
push
pop
sub
test
or
jg
mov
inc
pop
mov
push
rcll
push
add
sub
push
push
jo
xchg
push
dec
pop
ret
fadds
imulb
xchg
or
sbb
or
inc
dec
mov
xchg
jo
int
or
stc
lock
mov
xchg
adc
out
cmpsb
sbb
dec
jecxz
add
xchg
lret
sub
sub
mov
inc
pop
mov
je
cs
ret
cmp
adc
lret
hlt
pminsw
cmp
mov
push
je
adc
sub
push
xchg
inc
dec
mov
ret
xchg
fimuls
add
xchg
push
out
push
jo
mov
dec
jp
stos
push
mov
xor
xchg
sbb
and
cs
or
mov
ficoms
mov
mov
call
mov
mov
sub
out
jle
ret
scas
mov
xchg
pusha
xchg
rclb
cs
ret
movsl
pop
mov
xchg
sbb
mov
inc
dec
mov
cmp
cmpsl
test
cmp
xchg
mov
mov
xchg
pop
mov
test
xchg
xchg
xchg
and
xor
push
sub
sub
push
popa
add
xchg
adc
add
lcall
lcall
inc
add
xchg
jl
inc
dec
mov
xor
xchg
xchg
pop
sub
xchg
xchg
mov
inc
pop
inc
sti
bound
outsl
jne
adc
or
or
mov
mov
les
pop
ror
dec
lret
ret
sub
adc
out
xchg
pop
ret
push
inc
movsl
sub
xchg
cmpsl
ss
inc
pop
sub
dec
js
xchg
and
push
cmpsl
call
xor
jno
adc
mov
xchg
pop
mov
mov
xchg
pop
mov
jnp
dec
je
ret
add
dec
mov
cs
ret
mov
cmp
jo
loop
fwait
or
mov
push
pop
pop
sub
mov
dec
js
xchg
adc
pusha
xor
fs
pusha
mov
cmp
mov
aad
dec
xchg
in
inc
dec
sbb
mov
rcll
dec
sub
xchg
add
sub
mov
loope
loope
xchg
adc
mov
sub
mov
push
pusha
inc
dec
mov
xchg
dec
pop
adc
and
xchg
cmc
adc
jl
jb
mov
adc
jne
mov
push
xchg
movsb
sbb
test
cs
ret
push
pop
sub
roll
mov
inc
or
mov
or
adc
pop
adc
nop
cmpsl
rcll
in
das
xchg
outsl
pushf
mov
and
sbb
push
dec
or
popa
jne
adc
mov
mov
cmp
lds
push
xsavec
xchg
xchg
jo
add
mov
xchg
xchg
jno
adc
add
test
inc
cmc
mov
mov
and
idivb
scas
and
aad
pop
mov
in
adc
loope
ljmp
pop
xchg
ja
push
mov
dec
mov
mov
xchg
lgs
movsl
mov
xchg
sub
cmp
or
pop
xchg
icebp
push
sbb
jmp
pop
mov
addl
and
loopne
lcall
sub
inc
adc
xchg
rol
fsubrp
sub
pop
xchg
enter
ret
mov
mov
mov
jle
or
xchg
rcrb
xchg
mov
xchg
mov
push
sahf
dec
cmp
inc
jne
pop
mov
aad
xchg
es
insl
fwait
mov
sub
pop
mov
xchg
out
xchg
repz
mov
call
and
xchg
mov
popa
add
sbbb
inc
mov
enter
dec
cmp
xchg
xchg
and
xor
orl
mov
repz
or
faddp
dec
push
pop
xchg
das
dec
sub
mov
pop
xchg
cmp
dec
inc
dec
cwtl
cmp
dec
push
add
inc
fcmovne
in
xchg
or
cmpsb
ret
inc
dec
sbb
fstpl
push
jecxz
in
or
adc
xchg
in
push
and
mov
adc
movsl
sarl
dec
xchg
dec
push
mov
int3
xchg
out
cs
ret
lcall
push
jno
adc
cmp
add
jo
xchg
cmp
adc
add
and
mov
or
mov
and
mov
fsubl
loop
and
loope
add
mov
xchg
mov
xor
mov
lds
xchg
pop
mov
jae
mov
mov
icebp
imul
dec
cmp
ficoms
or
add
xchg
decb
jl
xor
jnp
popa
dec
call
ret
sub
sub
rcll
sub
and
pop
pop
xchg
fsub
add
pop
ret
lods
or
mov
bound
mov
mov
mov
pop
mov
add
add
into
push
mov
pop
mov
xor
arpl
push
jb
lahf
pop
arpl
insl
mov
push
lock
jne
add
jbe
mov
sahf
inc
es
pushf
orb
mov
call
jb
sti
fiadds
jp
push
fwait
push
rcr
push
aaa
add
push
imul
and
in
jo
jp
dec
pop
pop
sub
adc
add
mov
or
lock
inc
dec
xchg
fisttpll
daa
and
adc
and
mov
sub
jmp
loope
mov
adc
sub
cmpb
pop
mov
mov
and
aam
pusha
out
mov
mov
inc
jmp
cmp
fisubl
xchg
popf
and
sbb
mov
ret
xor
ss
pusha
mov
cs
test
mov
mov
ret
mov
loopne
cs
xchg
enter
enter
stos
sbb
rcll
inc
dec
xchg
adc
cmpb
pop
xchg
mov
xor
xchg
pop
and
pop
xchg
xchg
loopne
push
imul
xchg
andb
pop
mov
xchg
inc
dec
cmp
cwtl
xchg
adc
dec
cmpb
sbb
mov
mov
pop
sbbb
mov
xchg
mov
add
xchg
jae
loopne
cli
cmc
jns
fimull
add
xor
xchg
sbb
cmp
aad
dec
sbb
rorb
test
xchg
dec
inc
pop
pop
sub
sub
rolb
mov
mov
sub
inc
xchg
rcll
in
inc
int3
mov
adc
push
jo
lods
cs
jo
xchg
pop
into
roll
xchg
push
je
cmp
pop
pop
mov
inc
lcall
pop
orb
or
mov
xor
test
mov
lret
loopne
xor
xchg
jo
es
es
orb
cwtl
cmp
xor
rorl
xchg
and
xchg
add
inc
pop
xchg
in
jl
sub
xchg
out
mov
les
addl
xchg
xchg
mov
add
add
sbb
aas
mov
dec
mov
nop
xor
pop
sub
negb
adc
scas
jb
add
ret
adc
push
lret
cs
xchg
sub
sub
mov
ret
mov
and
popl
aam
sahf
xchg
cmp
xchg
cmp
int3
je
xchg
cmp
jo
adc
mov
push
pop
mov
xchg
ja
inc
dec
mov
or
out
sub
dec
cs
int3
mov
cmp
sub
xchg
movsl
pop
push
add
mov
pop
mov
push
inc
and
or
cs
cltd
test
mov
and
cmp
mov
ret
adc
cs
xchg
int
in
rorb
imul
adc
dec
scas
lahf
xor
sub
xchg
push
xchg
xchg
sub
adc
fsubl
fildll
fsubs
jno
ret
mov
daa
cs
xchg
jo
and
mov
adc
dec
shrl
sbb
xchg
cld
sbb
adc
ret
and
jne,pn
xchg
aaa
test
mov
addb
xchg
mov
xchg
dec
xor
fisttpl
in
add
jo
mov
xchg
and
cmp
pop
mov
xchg
adc
pop
sub
jno
adc
outsb
xchg
push
pop
daa
dec
adc
mulps
pop
dec
leave
and
mov
sti
or
dec
ret
mov
pop
jno
lock
mov
pop
xchg
stc
or
inc
xchg
mov
cmpsb
cmp
js
pop
ret
sbb
dec
dec
dec
arpl
aam
dec
xchg
imul
adc
mov
loope
jo
xchg
add
sub
jne
adc
movsb
sbb
lea
rol
xchg
sub
adc
pop
pop
jns
jmp
rcll
pop
sub
xchg
mov
pop
ret
xchg
fistl
push
cs
adc
pop
xchg
mov
pop
xchg
sub
xchg
xchg
and
xchg
test
hlt
lea
ret
test
call
cmp
ljmp
add
pusha
repz
sbb
test
and
sub
xchg
out
repnz
repz
mov
cmpsb
dec
dec
jo
adc
cs
dec
and
xchg
shll
push
test
xchg
jo
xorl
pop
js
mov
stos
mov
inc
orl
and
js
pop
dec
xchg
add
xchg
out
xchg
addr16
mov
adcb
pop
xchg
cmp
int3
jo
inc
dec
xchg
scas
add
and
dec
mov
mov
fidivrs
xchg
lock
inc
dec
xor
decb
sbb
xchg
test
xor
and
cs
xchg
push
xchg
jl
adc
xchg
cs
ret
aad
xchg
mov
jo
adcb
inc
xchg
mov
pusha
das
mov
mov
mov
mov
or
or
and
call
mov
pop
cs
xchg
dec
nop
std
incl
inc
outsb
cmpsb
test
pop
mov
jo
adc
ret
ss
pop
popa
call
and
pop
fisttps
xchg
pushf
xchg
mov
lock
mov
addl
mov
rcll
pop
mov
mov
jb
fldenv
cmpsl
or
ret
pop
dec
pop
jo
jg
adc
gs
imul
popa
xorl
mov
mov
add
mov
push
mov
test
xchg
sub
xor
xchg
jmp
and
add
sarl
jnp
ret
inc
pop
xchg
jecxz
fbstp
push
mov
cmp
add
pop
xchg
ja
xor
mov
xchg
adc
rcll
push
pop
or
or
xchg
and
adc
inc
dec
xchg
jbe
or
jle
xor
pop
fnsave
xchg
sahf
jp
mov
ffree
xchg
pop
ret
sub
ret
or
xchg
xchg
rclb
xchg
mov
pop
xchg
nop
push
sbb
aad
xchg
test
dec
xchg
sbb
xchg
add
jo
adc
xor
mov
mov
and
insb
mov
xchg
call
movsb
pop
and
daa
mov
mov
and
xchg
rcrb
mov
jbe
ret
mov
dec
call
pop
mov
push
adc
daa
mov
push
loop
and
adc
sub
mov
mov
push
and
loope
mov
xor
mov
lods
mov
pushf
roll
mov
adc
mov
sub
rcll
push
adc
cmp
or
mov
rorb
rolb
cs
mov
mov
cmp
scas
xor
pushf
dec
adc
jo
adc
jo
mov
mov
mov
sbb
add
inc
mov
int
or
push
addr16
jae
pop
je
adc
shlb
lahf
push
fwait
pop
pop
ljmp
jb
inc
dec
xor
adc
mov
sub
mov
inc
xor
adc
xlat
jno
test
sbb
add
mov
mov
sahf
pop
rorb
dec
add
insl
mov
mov
rolb
testl
mov
rcll
in
or
mov
cmp
mov
mov
sub
es
mov
pop
mov
fnstsw
mov
or
loope
xchg
test
loopne
subl
add
push
and
jg
mov
adc
rol
pop
mov
mov
jmp
dec
je
adc
in
mov
ljmp
pop
sub
aam
dec
ficompl
jl
sub
xchg
jo
mov
insb
lods
test
mov
movl
ja
and
inc
dec
rcll
repnz
stos
add
xor
sbb
mov
adc
lds
add
xchg
and
and
test
push
enter
loop
and
mov
fists
sub
mov
dec
sahf
mov
ja
and
xor
pop
rcr
or
test
test
mov
rorl
rcrl
jnp
lods
je
sub
dec
sbb
cmp
or
rcll
pop
call
xorl
rcll
push
push
mov
je
cmpsb
rcrb
or
sub
mov
pop
roll
sub
ds
loopne
and
mov
fwait
push
rcll
sub
pop
sub
adc
or
hlt
aaa
pop
lods
mov
mov
jb
dec
adc
or
rol
jo
ror
xor
rcr
js
inc
dec
roll
and
inc
pop
roll
rcll
shrl
out
pop
outsl
xchg
adc
cmpsb
mov
loop
and
xchg
pusha
adc
shll
add
xchg
mov
or
mov
mov
roll
pop
and
mov
sub
lock
jmp
inc
mov
sub
cmp
inc
dec
mov
push
shll
adc
gs
adc
orl
ror
call
shll
sub
pop
sub
push
shrl
aaa
adc
shlb
sub
lea
pop
sarl
rorl
jle
pop
ret
roll
adc
mov
int3
test
inc
rcll
jg
loope
pop
mov
or
push
push
pop
sub
jno
adc
pop
mov
shl
subl
lahf
push
iret
or
add
mov
rorl
jnp
adc
shl
ds
inc
jo
rcr
rolb
rcll
shll
dec
xor
pop
ret
sarl
jbe
bound
bound
aad
dec
jo
roll
sbb
or
cli
rolb
rol
mov
rorl
push
xorb
mov
jns
movsb
mov
push
pop
mov
fwait
xlat
add
stos
mov
add
loop
mov
stc
roll
mov
pop
sbb
shll
inc
rorl
lods
orl
stos
mov
or
push
fidivs
add
aad
dec
sarl
sar
sbb
adc
icebp
mov
cs
adc
pop
sub
movsl
loop
and
or
or
xchg
xor
mov
adc
mov
ljmp
shll
fidivrs
sahf
jno
adc
dec
pop
adc
or
pusha
aam
inc
shrl
xchg
shrl
mov
or
shrl
jbe
dec
push
pop
rcll
rcll
sub
sub
xchg
loopne
add
and
aad
inc
sbb
out
jne
mov
or
sbb
ror
je
and
jae
shll
xchg
xor
mov
pop
mov
shl
mov
rcl
adc
cwtl
enter
inc
jno
bound
shl
les
push
in
or
pop
ret
adc
cmp
mov
pop
or
and
aam
dec
rorl
jp
mov
or
adc
push
inc
pop
mov
roll
mov
sahf
rorl
outsl
jle
adc
shr
cmp
pop
je
inc
incb
sar
dec
pop
mov
fwait
jno
test
xchg
pusha
shrl
pop
sbbb
rcll
out
push
shrl
pop
ret
sbb
mov
push
xchg
lock
xchg
lock
cs
shll
imul
inc
dec
shll
mov
adc
pop
mov
cmp
sub
pop
ret
cmp
shll
loopne
shl
jle
mov
test
push
sbb
sbb
pop
mov
and
cmp
cld
leave
sbb
pop
mov
sbb
pop
jo
adc
fidivl
adc
rcll
mov
add
inc
jo
je
shrl
leave
orb
pop
add
jmp
push
popa
fucom
inc
sbb
pop
ret
push
rcrl
lea
das
shrl
inc
loopne
and
inc
mov
inc
sub
out
cs
ret
sbb
push
mov
mov
and
adc
shll
lcall
and
mov
inc
dec
sub
lods
xchg
test
call
shll
push
adc
adc
jle
inc
jno
shll
jo
adc
cs
and
push
rcl
dec
mov
or
shll
adc
loope
mov
xor
rcr
lret
pop
sub
das
sub
inc
dec
mov
or
rcll
loopne
and
jo
adc
push
inc
dec
xor
ljmp
sbb
roll
repz
cmpsl
stc
adc
inc
pop
sbb
push
pop
sub
mov
xchg
std
incl
out
jmp
pop
and
inc
xor
cmp
dec
xor
add
sub
and
pop
mov
icebp
insb
cs
inc
pop
sub
test
test
dec
mov
jmp
or
or
shll
pop
cmp
jbe
dec
and
pop
fs
insl
and
mov
xchg
cwtl
rorl
ds
push
push
rorl
roll
inc
shl
cmpsb
jo
pop
sub
and
test
add
into
xchg
lock
pop
sarl
ret
mov
or
subl
rcll
sub
pop
adcb
in
fstps
subl
sub
pop
adc
sub
shrl
pop
loope
add
rcll
adc
pop
pop
sub
orb
dec
lock
rcrl
add
adc
shll
mov
pop
jo
shll
mov
cs
rcr
xchg
mov
rcll
shrl
out
imul
adc
mov
or
xor
xchg
pop
shll
sub
lds
shll
xchg
jo
pop
rcrl
mov
pop
pusha
push
loope
mov
sbb
cmp
mov
mov
repz
or
pop
adcb
add
mov
rorl
jne
adc
movsl
je
adc
test
sub
pop
inc
ret
inc
pop
sarl
in
pop
inc
aas
sbb
xchg
sarl
in
int3
fcmove
ljmp
pop
les
rol
inc
pop
shll
shll
lock
pop
sub
stos
mov
dec
xchg
push
push
pusha
test
shll
dec
rcrl
inc
mov
fwait
mov
pop
lods
ret
pop
roll
cs
shl
inc
cmpsb
ljmp
add
stos
rcl
adc
pop
test
jne
xchg
shrl
test
pop
sub
mov
rorl
jp
add
mov
rcrl
and
daa
pop
adc
sub
inc
sbb
mov
inc
dec
cmp
push
pop
mov
xlat
fdivr
rcrl
loopne
jnp
jl
jo
sarl
lret
sbb
inc
sarl
sarl
inc
cmpsl
dec
testb
lock
rcll
sub
push
shll
push
ja
rcll
ret
mov
roll
pop
loop
jo
pop
rorl
pop
mov
push
jne
adc
push
jle
mov
cs
cmpb
dec
mov
and
aad
push
adcl
sub
loope
inc
jmp
and
fidivrl
in
out
lock
sub
mov
je
xor
cmp
sbb
loopne
and
scas
pop
hlt
roll
addr16
add
sbbb
add
pop
sub
mov
rcl
adc
and
jo
mov
insl
adc
fsubl
jne
sti
xchg
outsb
jmp
mov
inc
pop
mov
rcrl
test
jge
rcrl
or
sbb
outsb
and
shll
stos
mov
and
sub
mov
jo
add
mov
sub
addr16
inc
pop
sar
clc
test
pusha
rorl
cs
mov
mov
sbb
pop
mov
push
push
loop
test
sbbb
pop
rorl
and
mov
push
fneni(8087
cs
ret
mov
loop
sub
test
lds
push
or
andb
mov
loope
inc
jle
mov
cmp
ret
or
lea
rorl
or
fs
ds
sub
loope
rcrl
jmp
jl
loop
and
insl
es
sub
dec
and
sub
test
push
fcoml
adc
and
mov
mov
and
dec
push
mov
roll
fs
insb
sub
ret
pop
mov
mov
rcrl
add
pop
into
addl
pop
mov
shll
and
in
adc
pop
ret
shll
adc
mov
adc
push
das
ds
ret
roll
and
je
rorl
add
shr
mov
sarl
push
rcll
sub
rcll
xchg
add
jle
or
mov
add
pop
pop
jno
adc
pop
mov
rcl
inc
dec
mov
push
shrl
stos
adc
shll
pop
shl
inc
addl
pop
shll
cmpsl
mov
jmp
pushf
je
movsl
inc
addb
popa
xor
shl
cld
jo
pop
sub
stos
mov
adc
sub
inc
rorl
pop
shl
push
rol
in
ja
mov
rol
cmp
xor
and
cmpb
mov
rorl
cwtl
loop
and
adcb
mov
push
mov
ja
shrl
mov
roll
cs
pop
mov
mov
mov
and
pop
mov
rcll
sub
shll
mov
shl
xor
mov
pushf
ljmp
xchg
mov
or
pop
mov
jne
cs
addb
pusha
pop
roll
test
orb
pop
mov
or
jbe
mov
cmpb
or
fidivl
add
cmp
pop
pop
shrl
out
push
push
or
scas
es
mov
loop
pop
sub
mov
cmc
xchg
dec
test
aad
dec
rcrl
pop
ret
sarl
sbb
dec
inc
pop
sub
test
pop
pushf
rorl
add
pushf
fimull
movl
jne
adc
imul
test
roll
xchg
xor
jnp
cmpb
or
mov
shll
or
rcl
jae
pop
mov
adc
rcrl
test
or
push
xor
lcall
test
mov
in
inc
xor
adc
ret
hlt
aas
je
loope
ficompl
dec
pop
mov
roll
jno
or
je
rcrl
add
and
pop
mov
inc
roll
jmp
rcrl
stc
push
cs
ret
and
mov
mov
fcoml
sub
push
mov
cs
roll
add
mov
rcl
mov
roll
in
cwtl
adc
inc
dec
cmp
adc
and
leave
cmp
lds
jno
adc
roll
and
sbb
or
aad
dec
rcll
adc
sub
adc
xor
jmp
sbb
sarl
stos
push
inc
dec
rcll
sub
push
jbe
push
pop
mov
mov
je
roll
roll
sarl
sub
lods
cs
ret
xchg
movsb
push
xor
incb
leave
add
nop
data16
push
dec
mov
push
pop
mov
and
sbb
pop
cmp
mov
flds
jmp
dec
sub
shrl
shl
fldcw
lods
adc
roll
into
mov
imul
inc
dec
rcrl
rcll
shrl
dec
cmp
int
or
mov
adc
mov
inc
dec
mov
orb
mov
pop
outsl
rcl
adc
add
mov
or
jo
or
ret
push
sub
add
cs
rcl
fsubs
mov
int3
cs
sbbb
test
xor
pop
mov
add
add
jo
mov
adc
clc
cltd
mov
shll
roll
shl
js
mov
push
addr16
xchg
cmp
pop
push
pop
mov
xor
push
fisttpl
push
addr16
dec
jno
adc
pop
enter
push
pusha
xor
pop
dec
scas
mov
shrb
jb
movsl
mov
jmp
push
repnz
mov
mov
xor
or
cltd
mov
shrl
sbb
push
xor
subl
inc
pusha
movsl
imul
fwait
int3
jo
adc
push
sarb
push
imul
repz
xchg
push
inc
inc
adc
mov
sbb
sub
andl
shl
adc
pop
aad
dec
mov
leave
mov
decl
inc
dec
pop
repz
adc
je
add
cmp
sub
push
roll
call
mov
inc
jo
adc
test
pop
orb
repz
jo
lods
rep
mov
cmp
repz
stos
xchg
jo
xor
sbb
mov
mov
repz
xchg
repz
leave
rol
push
cmc
lret
iret
sbb
mov
pop
sbb
repz
jmp
add
xchg
rcrl
mov
aam
cs
ret
repz
xor
stos
adc
mov
and
repz
pop
sub
rcll
push
xor
rcll
push
adc
call
repz
popa
and
pop
repz
sub
insb
cmp
mov
subb
dec
je
adc
or
test
test
js
add
test
sbb
mov
push
rorb
repz
and
dec
scas
loopne
add
or
mov
sbb
repz
ret
push
add
push
sbb
pushf
int3
xchg
outsl
pop
dec
cs
ret
cs
adc
repz
or
imul
xlat
dec
jle
inc
dec
js
repz
aam
dec
mov
push
repz
and
or
mov
and
pop
xchg
push
mov
lds
add
pop
push
or
push
sub
cs
ret
push
pop
rolb
js
push
pop
mov
add
push
add
add
inc
pop
mov
jo
mov
rcll
push
pop
cmc
pusha
and
inc
dec
push
pop
sub
adc
add
fwait
les
inc
dec
push
rolb
cmp
push
hlt
adc
jo
adc
jl
xor
enter
daa
rclb
push
push
or
call
dec
or
loope
les
or
ja
push
aam
push
push
call
inc
dec
push
cmc
das
pop
ret
ja
loopne
and
adc
mov
sbb
in
push
jno
insl
jmp
inc
dec
push
adc
add
dec
cs
adcb
pop
ret
jge
ret
push
das
xchg
into
les
rcll
lods
and
jbe
and
jns
adc
stos
pop
adc
mov
jg
pop
fdivs
push
jmp
add
mov
mov
leave
pop
inc
outsb
push
cmpsl
sbb
mov
xchg
aam
int
rcrb
add
iret
in
shll
adc
cwtl
add
xchg
and
jg
jg
xchg
mov
xor
push
mov
test
sbb
rorl
pop
mov
push
xor
mov
fadd
inc
dec
push
shlb
ljmp
repnz
add
sub
dec
js
push
sub
push
or
pop
inc
push
mov
pop
sub
iret
adc
lods
enter
mov
jb
cs
pop
ret
jo
lods
adc
fs
mov
mov
add
orb
jecxz
and
jns
lcall
cs
push
dec
insb
push
jo
adc
mov
mov
push
rcll
or
stc
inc
je
inc
push
add
hlt
movsb
xchg
adc
xor
ret
rcll
test
inc
jo
pop
dec
xchg
add
pop
mov
adc
mov
sbb
xchg
add
adc
sub
add
jmp
enter
push
je
adc
push
xchg
mov
push
fcmovb
rorl
mov
fsubs
cs
push
xor
pop
mov
mov
sub
test
or
pop
mov
roll
cs
orb
pop
addb
pop
addb
xlat
inc
add
push
mov
arpl
sub
push
mov
and
inc
dec
jo
push
pop
rcll
out
rcll
inc
mov
pop
jno
gs
pop
pop
pop
mov
push
push
push
pop
sub
and
mov
mov
push
or
xor
mov
xchg
mov
push
and
fs
dec
jo
mov
aad
push
lds
fstpt
adc
dec
shll
push
shll
push
rolb
dec
push
inc
dec
xor
push
push
push
push
les
adc
inc
jo
dec
mov
inc
dec
mov
popa
inc
dec
lds
mov
push
inc
mov
push
pop
sub
push
inc
dec
xor
sbb
adc
push
inc
sub
pop
andb
inc
dec
mov
dec
mov
int3
dec
scas
or
rcll
dec
mov
or
aam
push
out
mov
mov
jae
pop
mov
push
pop
sub
push
inc
or
xchg
pusha
add
test
dec
cmp
push
push
roll
rcll
pop
pushf
push
sub
mov
add
push
pop
mov
mov
push
test
lds
ja
outsl
push
in
adc
pop
xchg
mov
adc
les
repnz
add
inc
and
pop
sub
addb
sarb
sbb
or
push
mov
push
pop
add
subb
sub
mov
inc
add
adc
jo
add
inc
push
fistpll
push
scas
sub
xchg
jo
pop
push
xchg
sub
mov
sub
adc
inc
push
je
adc
push
push
cs
ret
clc
push
and
fiadds
mov
mov
adc
outsb
arpl
push
lods
jl
lods
mov
dec
pushf
mov
push
inc
jo
push
mov
push
mov
mov
out
xchg
les
push
jl
jo
adc
imul
cs
push
add
add
add
mov
ret
fcoml
jo
pop
push
mov
adc
mov
roll
imul
push
pop
push
test
loope
push
mov
aam
xchg
sub
xchg
push
push
push
mov
and
xor
adc
pop
push
out
orb
jo
adc
lret
push
push
xor
test
and
sbb
mov
loopne
push
push
stos
xor
int
push
test
dec
or
push
fidivs
push
pop
jne
adc
inc
or
sarl
cmp
sub
dec
ret
pop
push
das
repnz
fisttpll
adc
push
inc
jno
adc
push
mov
xor
or
fwait
add
mov
clc
insb
and
in
scas
dec
pop
mov
push
lock
mov
fildl
sarb
push
pop
and
push
cmp
push
ss
mov
push
push
pop
xor
rcll
pop
ret
push
and
adc
mov
adc
push
fs
sub
mov
aaa
pop
push
fwait
push
and
mov
xor
addr16
mov
and
mov
mov
call
mov
add
or
cs
addb
scas
subl
sub
aaa
jo
push
insb
sub
nop
mov
push
xor
test
call
pop
psubsb
dec
push
aas
mov
dec
xorl
inc
jmp
jp
pusha
dec
sbb
push
push
push
mov
movsl
mov
pop
sub
inc
mov
push
ret
test
inc
xchg
or
pop
push
pop
cs
ret
push
pop
mov
cmp
push
cs
ret
and
adc
or
dec
clc
dec
je
rorl
inc
push
add
jo
inc
push
and
add
mov
and
sub
pop
sub
shrl
ret
sub
pop
ret
test
adc
lods
inc
mov
mov
inc
loope
shll
push
hlt
sub
int3
lock
and
pop
push
icebp
test
orl
sub
mov
mov
gs
mov
cli
fmull
push
clc
push
pop
dec
add
inc
and
rcll
push
or
pop
ret
or
dec
mov
dec
sbb
mov
in
mov
lods
mov
rcll
push
inc
push
sub
adc
adcb
xorb
and
add
sub
push
adc
and
xor
dec
pop
int
xor
dec
xor
xor
daa
xor
xor
stos
jno
xor
xchg
xor
dec
pop
ret
xchg
loopne
and
rclb
out
ss
xor
adc
mov
rclb
xor
pop
xor
inc
sub
sub
stos
xchg
adcl
adc
add
dec
dec
mov
xlat
xchg
pop
fisubrs
loopne
and
or
sahf
push
ret
fisubrs
push
sahf
mov
jbe
lcall
loopne
es
cmp
xchg
xor
cmp
xor
push
and
sbb
xor
dec
xor
xor
mov
fcoml
xor
dec
loope
loopne
xor
push
jo
daa
sub
mov
sub
jno
adc
pop
xor
movsb
and
adc
or
out
ja
xor
xor
cmp
jno
xor
jl
xor
xor
inc
push
pushf
mov
xor
xlat
and
ret
xor
dec
xor
lahf
sub
fidivrl
ja
into
int
out
adc
mov
add
pop
jne
xor
in
cmp
dec
xor
adc
dec
pop
xor
paddw
dec
pop
ret
int3
adc
cmpl
mov
mov
xor
sub
movsb
xor
pop
dec
pop
jno
or
dec
xor
je
mov
mov
outsl
jg
push
mov
mov
in
cmpsl
lahf
xor
dec
sbb
and
fidivs
push
push
sti
mov
xchg
jo
enter
xor
test
fcomps
xor
notb
pushf
mov
xor
xor
pop
adcb
inc
mov
repnz
xchg
jp
adc
imul
jo
xor
daa
sub
or
push
popf
mov
xor
xor
sbb
mov
test
or
aad
xor
imul
daa
sub
ljmp
popf
mov
xor
ret
stos
xor
mov
mov
aaa
aad
dec
xor
or
imul
movsb
and
xchg
xor
mov
adc
sub
adc
sub
out
cmp
xor
adc
push
mov
imul
xor
ret
cwtl
xor
or
push
xor
movsb
and
test
pop
push
push
les
xor
pusha
add
sub
orl
nop
mov
jne
adc
in
ret
rclb
xor
mov
xor
pop
pop
ret
cmp
mov
dec
fdivl
xor
pop
lds
xor
rorb
mov
xor
sub
xor
out
pushf
loop
inc
pop
jmp
imul
test
loopne
clc
test
dec
dec
xor
xchg
mov
sbb
cmp
popf
xor
stos
jecxz
push
or
cmpl
xor
adc
xor
mulb
pop
mov
loop
xor
xchg
mov
rclb
scas
mov
adc
jno
ds
adc
inc
sbb
dec
dec
mov
adc
std
dec
xor
and
outsb
or
aaa
pop
rcrl
shlb
mov
cmp
add
sub
adc
xor
cmp
sbb
rclb
imul
mov
pop
pusha
pop
rorb
xor
daa
sub
pop
nop
xor
movsb
and
pop
dec
dec
mov
mov
ja
xor
popf
xor
cmp
pop
daa
xor
rorl
push
lds
mov
cmpsb
xor
dec
notl
sbb
out
adc
jmp
and
xchg
xchg
jo
das
enter
xorl
sub
lods
push
rclb
mov
pop
popf
pop
cwtl
insl
jnp
xor
push
je
lods
loopne
and
and
adc
sub
mov
stos
lods
pop
push
cs
mov
rclb
xchg
mov
mov
xchg
mov
in
mov
xchg
mov
or
cmp
imul
in
test
push
ret
xchg
mov
stos
xchg
xchg
mov
cmp
xlat
scas
mov
pop
js
jp
cmp
xchg
mov
lock
or
mov
movsb
mov
das
push
or
xchg
iret
leave
and
mov
shrb
mov
mov
js
sub
xchg
pop
adc
shrb
adc
mov
das
jo
mov
mov
and
outsb
push
pop
test
push
inc
test
xchg
mov
cmpsl
mov
jl
pop
add
xchg
mov
mov
pusha
mov
adc
test
adc
aam
xchg
imul
and
and
jg
sub
insl
imul
pop
and
push
sub
lret
dec
mov
imul
sub
out
and
xchg
out
adc
dec
add
sub
out
xchg
pop
ret
mov
and
lret
and
pop
and
js
dec
mov
imul
dec
mov
imul
dec
mov
imul
imul
dec
pop
ret
mov
pop
ret
imul
and
sub
mov
mov
push
cwtl
cmp
rclb
pop
push
mov
push
mov
in
dec
pop
mov
adc
xchg
and
xchg
xchg
mov
xchg
call
mov
mov
mov
dec
dec
mov
jmp
xchg
ljmp
mov
push
mov
add
mov
push
mov
jnp
dec
adc
mov
push
scas
mov
ds
imul
dec
dec
pop
pop
mov
add
xor
mov
into
shll
insb
inc
ljmp
fstl
push
or
hlt
inc
mov
mov
push
mov
cmc
cmp
in
inc
dec
mov
mulb
add
push
shlb
or
mov
sbb
xor
push
xchg
mov
adc
push
dec
dec
mov
pushf
dec
sub
cmp
rclb
mov
add
inc
xor
and
mov
mov
mov
add
movsb
shlb
adc
pusha
push
movsb
mov
sbb
test
xchg
mov
dec
sbb
adc
sbb
mov
push
fisttpl
ret
push
mov
xchg
mov
outsl
adcb
mov
push
push
shlb
add
sub
lock
push
xor
or
std
cmp
add
sub
les
js
sbbl
or
adc
sub
adc
xchg
and
and
push
stos
push
fdivrs
mov
stos
mov
mov
pushf
sbb
mov
rclb
inc
mov
mov
push
xchg
mov
aaa
and
sub
movsl
adc
imul
mov
or
push
adcl
mov
sub
out
sub
inc
lds
pop
xchg
mov
cld
shll
mov
cmpsb
movsb
and
mov
adc
sub
rclb
fisubrs
xchg
inc
sahf
out
or
mov
rcll
adc
mov
mov
movsb
and
fs
aas
test
sub
mov
xchg
lret
dec
enter
pop
in
add
add
lret
lcall
add
and
sub
mov
test
mov
mov
nop
xchg
aaa
or
dec
xor
add
test
or
add
dec
mov
add
sub
mov
and
incl
mov
push
mov
add
jno
lcall
dec
fsubl
push
or
jno
test
xchg
sub
dec
cmp
xchg
repz
enter
movsb
cmp
mov
dec
lods
push
jmp
outsb
fs
call
and
sbb
stc
es
push
push
popf
add
ret
pop
inc
ret
icebp
sbb
jo
sub
add
sti
jp
xchg
add
ret
dec
mov
enter
cmp
dec
push
rclb
into
add
in
push
dec
dec
mov
fisubrs
push
xchg
mov
mov
addl
call
cmpsl
dec
pop
mov
sub
cmp
jl
mov
push
addl
sub
pop
mov
dec
scas
or
jnp
rclb
mov
sub
dec
and
mov
sub
pop
xchg
add
adc
mov
stos
lahf
aam
pop
xorb
ret
mov
dec
mov
sub
push
and
lret
adc
add
xor
cmp
push
mov
ja
lock
mov
sub
cs
and
jg
push
xchg
mov
shlb
mov
push
ret
or
dec
pop
ret
xor
mov
movsb
jae
cmpsb
sub
mov
xchg
xchg
and
test
stos
add
addl
add
pop
dec
pop
orb
push
mov
adc
add
push
sbb
arpl
xchg
xchg
xor
inc
cmpsb
and
les
mov
and
sbb
mov
imul
aad
dec
dec
push
enter
mov
mov
mov
repz
push
xchg
mov
in
and
add
and
mov
enter
ret
sbb
enter
add
fbstp
mov
lea
sub
mov
imul
mov
outsl
loopne
nop
add
test
ja
orw
addr16
out
mov
rolb
sbb
lods
lods
push
out
neg
jnp
pop
push
push
push
xchg
dec
sahf
ja
mov
rolb
add
cmp
das
outsb
repnz
fildl
insl
pusha
jp,pn
test
imul
or
mov
outsb
mov
add
fsts
dec
mov
inc
and
call
stos
movsb
mov
inc
in
pop
xchg
mov
mov
xchg
xchg
jo
inc
enter
mov
cltd
push
fisubrl
cld
movsl
sub
addr16
push
add
jnp
dec
dec
or
xor
cmp
pop
push
shlb
add
mov
or
out
push
in
inc
dec
dec
mov
pusha
and
push
rclb
mov
mov
adc
data16
std
inc
mov
or
and
out
push
mov
cmpb
pop
lret
or
pop
mov
repz
fwait
jno
cmp
cwtl
xor
aaa
add
pop
inc
dec
mov
adc
mov
cmp
jmp
pushl
adc
or
mov
ds
sbb
mov
cmp
xchg
inc
repnz
shr
enter
or
or
ret
push
mov
fwait
popa
add
cmp
pop
mov
idivl
xchg
addr16
mov
and
or
inc
inc
xchg
stos
sub
xor
jno
pop
xchg
mov
cmpsl
cmp
jno
dec
dec
mov
xchg
mov
mov
mov
mov
jnp
or
dec
cmp
push
mov
out
push
dec
mov
jp
cmp
push
shlb
loopne
pusha
add
sub
mov
mov
mov
inc
add
sub
ret
nop
jnp
or
movsb
dec
pop
mov
jo
loope
or
popa
adc
popf
push
and
movaps
mov
adc
sub
aas
ss
test
aas
add
xchg
mov
cmpsb
movsl
pop
ret
mov
mov
pop
mov
and
sub
push
dec
dec
mov
sbb
pop
sub
mov
pop
cmp
and
and
sub
xchg
loopne
mov
mov
int
pop
dec
dec
adc
dec
imul
enter
add
pop
and
dec
push
rclb
mov
out
add
test
fsubl
or
push
and
mov
mov
adc
mov
inc
push
rclb
mov
mov
or
sub
add
in
xchg
xchg
xor
push
and
xchg
push
cmp
xchg
dec
fistps
push
enter
loope
pop
ret
mov
and
test
xchg
add
xchg
mov
leave
or
lods
and
push
sahf
or
sahf
inc
mov
jb
pop
nopl
inc
ja
rclb
mov
sub
sub
mov
mov
add
scas
jb
inc
pop
inc
mov
fidivrs
push
lret
or
push
rclb
dec
repz
mov
push
mov
es
add
cmpsl
in
es
jnp
nop
iret
add
and
pushf
cmp
int3
rcl
mov
test
pop
daa
nop
adc
push
shlb
dec
dec
mov
cwtl
or
sbb
mov
and
mov
xorb
pop
ret
sub
stos
dec
mov
je
sub
mov
es
xchg
mov
mov
xor
xorl
xchg
mov
imul
fiaddl
insl
pop
mov
sub
std
inc
stos
add
rclb
adc
bnd
nopl
ss
mov
gs
push
and
mov
xchg
mov
mov
mov
test
je
fldl
add
mov
mov
rclb
inc
call
orb
xchg
pusha
and
shll
push
dec
mov
mov
adc
push
fidivs
jo
mov
add
scas
mov
xlat
add
sbb
sbbb
inc
mov
inc
fsubl
dec
pop
mov
cmp
mov
fnsave
sub
xor
mov
loopne
xor
stos
movsb
and
cmpsl
bound
cli
pop
sub
adcb
sub
orb
or
test
xchg
inc
xor
cmp
rcll
push
xor
adc
rclb
add
xchg
and
fs
dec
dec
mov
nop
subb
or
aad
pop
ret
int3
xchg
xchg
xchg
pusha
cmpsl
outsw
sub
inc
call
dec
das
dec
push
rclb
xchg
nop
xor
enter
dec
push
inc
dec
dec
xchg
xor
and
repnz
insb
pusha
pop
clc
ljmp
mov
xchg
arpl
add
dec
xchg
lds
imul
push
andb
push
add
jns
and
jg
adc
push
addb
jl
xor
xchg
cmp
shlb
push
xor
add
xchg
jo
xchg
out
popf
sub
shlb
jp
xchg
std
aas
push
rclb
dec
jo
rclb
dec
pop
push
mov
adcl
dec
dec
mov
addr16
push
xchg
and
inc
scas
movsb
and
push
adc
movsl
add
shlb
inc
dec
dec
xchg
mov
ret
dec
push
push
push
sub
push
rclb
xchg
stc
cs
dec
or
push
dec
add
dec
pop
ret
adc
inc
mov
add
push
xchg
jecxz
jp
or
or
inc
dec
dec
xchg
xchg
mov
xchg
cmpsb
je
inc
lea
lock
mov
add
dec
mov
cmpsl
inc
mov
and
rclb
xchg
shrl
insl
outsb
or
and
or
out
add
inc
cmpsb
push
pop
fistpll
cmp
pop
mov
sub
jns
mov
or
dec
ret
shll
adc
adc
push
subb
add
or
mov
xor
push
rclb
pushf
out
or
adc
js
pop
ret
pop
mov
jecxz
dec
roll
dec
lcall
das
dec
fsubrs
loope
mov
push
dec
roll
ds
aaa
lcall
in
lock
xchg
adc
adc
popa
movsb
xor
jae
imul
pop
pop
dec
addl
mov
stc
push
xchg
and
xor
loopne
movsb
and
pop
addb
dec
rorl
dec
sbb
mov
dec
shll
inc
dec
shll
mov
adc
inc
dec
shll
ret
and
push
rcl
insb
fbld
ror
add
adc
rclb
outsb
push
js
pop
ret
dec
sub
call
cmovp
jg
or
addl
or
nop
inc
pop
xor
outsb
sub
stos
dec
stos
out
pop
dec
dec
sbb
rolb
xor
test
popf
dec
pop
js
mov
and
aam
out
loop
push
shrl
adc
pop
ret
cmp
imul
or
lods
sub
inc
test
test
and
rclb
outsb
mov
cmp
jo
mov
shlb
xchg
rcrl
xchg
inc
inc
fs
push
mov
add
inc
sub
in
sub
pop
and
icebp
loopne
dec
shrl
xchg
mov
and
shrl
add
hlt
or
ret
adc
push
imul
dec
dec
rclb
sub
rclb
cs
and
shrl
push
sbb
xchg
mov
sub
aam
sbb
adcb
push
rclb
lods
pop
shll
and
les
mov
mov
ret
mov
dec
dec
xor
rcll
sub
dec
dec
fdivs
adcl
loope
push
rcl
push
rcrb
sbb
jne
sbb
imul
xor
dec
loope
imul
out
or
js
fs
rorb
inc
pop
ret
lret
stos
fbstp
pop
push
fucomp
inc
neg
xor
nop
push
js
ds
roll
pop
daa
push
imul
xlat
xor
and
xchg
mov
dec
mov
lret
or
cmp
add
mov
sbb
pop
adc
gs
xor
pop
or
jb
pop
jb
popa
adc
arpl
and
mov
pop
test
add
mov
pushf
add
stos
movsb
and
dec
lret
sub
xchg
mov
mov
push
dec
cmpl
mov
loope
inc
or
xchg
test
dec
pop
mov
int
jp
dec
pop
ret
imul
ret
add
dec
pop
mov
add
cmpsb
in
mov
in
shll
sub
xchg
pusha
ret
cmpsl
xor
cwtl
push
das
sub
mov
test
dec
or
xchg
xchg
nop
xchg
mov
dec
dec
mov
popa
mov
add
pushf
mov
inc
add
or
mov
pop
call
sub
sbb
push
sbb
sti
sbb
sbb
mov
push
shlb
lahf
and
mov
dec
repnz
inc
dec
dec
mov
push
sbb
xor
xchg
mov
mov
ficoml
shrl
mov
ljmp
and
inc
rolb
mov
dec
cmp
pop
sbb
inc
jle
dec
mov
addb
or
mov
outsb
sub
test
sbb
shlb
and
cmp
xor
and
and
iret
push
rclb
out
cmp
sbb
mov
xor
push
dec
mov
inc
or
mov
cmp
dec
mov
cmp
cmp
hlt
shll
dec
dec
cmp
or
mov
inc
mov
inc
scas
and
scas
sub
cltd
and
adc
or
or
and
arpl
fmull
mov
jo
cmp
wrmsr
call
adc
sub
lock
js
and
arpl
mov
push
or
push
push
xchg
imul
rclb
jae
pop
ret
or
sub
jae
adc
inc
add
add
xchg
xchg
xor
jno
rclb
push
and
sub
inc
dec
inc
and
ret
sbb
out
and
fwait
mov
jo
xchg
mov
push
ds
adcb
pop
ret
sub
push
in
jae
fiadds
test
mov
push
jne
mov
xor
outsb
sbb
add
jae
mov
movsb
and
test
rclb
outsb
xorb
test
push
push
jae
stos
ljmp
scas
dec
pop
cmpb
jbe
idivb
orb
and
test
push
rclb
push
push
jae
mov
test
stos
movsb
and
rorl
in
pop
ret
sub
mov
insb
je
and
mov
cmpsl
outsb
jae
fadd
push
rorl
xor
out
inc
and
dec
dec
push
mov
dec
fmull
popa
mov
je
dec
jae
cld
add
movsb
and
and
jae
pop
ret
push
jae
xor
adc
mov
jae
push
add
pop
push
rclb
jae
push
dec
dec
js
jae
test
add
jae
xchg
xchg
lock
jae
imul
jae
inc
mov
test
jae
lods
dec
pop
ret
movsb
and
jmp
ds
xchg
mov
xor
inc
bound
sbb
imul
movsb
and
mov
sbb
outsb
xchg
dec
pop
ret
xchg
dec
dec
mov
xchg
jo
xchg
lods
bound
js
xchg
xchg
cmp
stc
push
xchg
pop
push
mov
inc
dec
dec
xchg
push
rclb
sahf
jb
and
das
mov
andb
roll
dec
pop
xchg
lods
stos
xchg
xchg
jo
xchg
sub
push
iret
xchg
dec
dec
mov
imul
xchg
inc
inc
dec
dec
jo
xchg
inc
mov
in
adc
xchg
xchg
xchg
jo
or
mov
dec
cmp
xchg
test
in
add
mov
jl
movsb
and
sub
xchg
iret
adc
sub
push
inc
test
test
xchg
and
mov
add
dec
cmp
xchg
push
inc
dec
xchg
or
push
push
and
jo
rclb
xchg
movsb
or
int3
xchg
call
scas
mov
xchg
push
stos
xchg
xchg
xchg
and
mov
xchg
cmp
jns
add
push
push
aaa
loop
nop
sbb
pusha
adc
testl
ret
xchg
test
out
pop
push
mov
mov
imul
outsb
sar
adc
loope
dec
mov
mov
dec
xchg
adc
inc
call
aaa
sbb
call
and
mov
imul
add
xchg
cs
adc
dec
mov
xchg
xchg
push
xor
sbb
jo
orl
lods
mov
and
push
rclb
in
in
jmp
push
pop
pop
es
jnp
push
xchg
test
lahf
push
iret
and
xchg
popa
push
inc
and
loope
mov
mov
addb
xchg
xchg
sub
or
add
add
sub
and
out
adcb
push
xchg
loopne
je
mov
lock
mov
adc
dec
pop
xchg
pusha
mov
ret
inc
fdivs
dec
pop
xchg
lock
pop
inc
fisubrs
add
or
add
xchg
mov
pop
pop
add
xchg
push
push
xchg
shrl
imul
push
adc
cmp
xchg
test
jmp
aaa
and
fidivrs
pushf
in
les
lods
sbb
xchg
cmp
cmpl
xchg
xchg
jo
xchg
stos
movsb
and
xchg
dec
dec
cmpsl
jne
loope
rolb
and
dec
push
rclb
xchg
call
movsb
mov
ds
xchg
pusha
cmpsl
xchg
xchg
and
or
mov
pop
cmp
xchg
ljmp
iret
aad
roll
xchg
jle
add
xchg
mov
inc
enter
hlt
mov
cmp
shrb
push
xchg
mov
xchg
xor
cmp
scas
nop
popa
lock
xchg
push
and
adc
mov
inc
roll
xchg
cmp
test
add
xchg
lahf
dec
sbb
xor
xchg
mov
xchg
sub
ja
sub
xchg
mov
fwait
pop
sub
dec
dec
mov
push
inc
xchg
and
push
rclb
push
push
jg
inc
dec
dec
xchg
fs
pop
ret
mov
mov
push
add
loopne
sbb
xchg
mov
out
dec
pop
ret
push
xor
push
rclb
xchg
xor
xor
add
int
imul
call
or
pop
xadd
cwtl
dec
xchg
jge
arpl
dec
xchg
xlat
imul
push
mov
insl
imul
and
mov
dec
pop
ret
pop
mov
pop
or
and
vmwrite
cld
add
lret
and
or
or
or
mov
mov
ret
xchg
test
sbb
dec
xchg
xchg
jmp
std
xchg
sub
push
pop
jp
push
sub
jmp
and
incb
iret
repz
push
jns
push
pop
mov
mov
inc
addl
loopne
mov
and
add
dec
xchg
xchg
xchg
mov
call
xor
inc
dec
dec
xchg
or
mov
inc
push
xchg
mov
lret
imul
cmp
dec
pop
subb
push
stc
push
rclb
xchg
rorb
out
andl
stc
mov
in
pusha
adc
adc
mov
adc
push
scas
jl
sbb
add
mov
movsb
and
sbb
xchg
mov
add
cmp
push
shlb
rclb
in
xchg
xchg
roll
add
test
push
rclb
dec
pop
xchg
add
xchg
and
adc
xchg
mov
add
pop
sub
mov
pop
ret
xchg
andl
xchg
dec
dec
xor
out
mov
mov
test
lcall
and
subb
stos
movsb
and
xchg
adc
mov
xchg
xchg
xchg
imul
pop
adc
dec
add
sub
outsl
add
mov
xchg
push
dec
dec
xchg
xor
and
ret
push
adc
dec
xchg
mov
rclb
push
rclb
xchg
dec
pop
inc
dec
rol
dec
inc
dec
xchg
mov
sbb
dec
pop
xchg
inc
dec
pop
adcb
mov
cmpsb
mov
and
xchg
dec
jo
push
addr16
jo
dec
xchg
pop
nop
xchg
pusha
xchg
movsb
test
mov
xchg
push
dec
dec
mov
into
in
data16
mov
xor
add
loope
sbb
add
cmp
je
add
adc
and
or
sbb
scas
and
leave
cs
jbe
pop
inc
mov
hlt
push
dec
push
pop
mov
mov
adc
pop
ret
in
or
ss
rclb
pop
xchg
add
add
mov
mov
mov
cmp
xchg
jle
mov
push
call
cmp
dec
pop
ret
icebp
xor
xchg
xchg
pusha
mov
pop
xor
or
mov
call
call
add
cmpsb
lods
out
cltd
or
or
mov
xchg
in
xchg
xchg
and
rclb
add
scas
xchg
hlt
cli
stc
adc
xchg
loopne
add
xchg
xor
add
jno
mov
and
and
sub
adc
mov
dec
pop
xchg
dec
pop
ret
xchg
xchg
xchg
jo
add
mov
pusha
sub
adc
outsb
jbe
or
or
add
xchg
mov
xchg
jns
push
push
rclb
xchg
mov
sub
int3
fsts
xchg
nop
jge
sub
rclb
xchg
or
dec
pop
ret
pop
adcb
lock
xchg
mov
adc
push
rclb
adc
xchg
mov
rcll
add
inc
xchg
xchg
cs
dec
dec
adc
sub
adc
movsb
and
test
xchg
mov
mov
cmpsl
xor
les
ja
xchg
xchg
popf
lcall
cmp
addl
xchg
pop
xchg
mov
xchg
and
xchg
mov
xchg
and
popa
mov
and
ret
pop
adcb
es
dec
xchg
dec
add
add
xchg
dec
cwtl
or
lret
push
rclb
out
mov
xchg
adc
add
xchg
pop
ret
mov
xchg
xchg
mov
sarl
xchg
shlb
xchg
or
push
rclb
push
mov
add
mov
inc
xchg
mov
xchg
and
mov
or
adc
mov
cmp
inc
add
add
inc
lock
xor
sbb
and
dec
sbb
xor
pop
adc
and
pop
push
xchg
sar
sub
xchg
inc
dec
dec
mov
xor
xchg
xchg
xchg
mov
pop
test
xor
aaa
inc
xchg
xchg
mov
add
imul
sbb
xlat
or
pop
xchg
imul
adc
int3
xor
mov
jge
xchg
mov
pop
mov
pop
push
rclb
inc
dec
dec
xchg
pop
ret
adc
sbb
dec
xchg
mov
add
mov
rclb
aam
mov
xchg
cs
shlb
push
rclb
mov
push
adc
add
dec
dec
sbb
pop
dec
mov
inc
xchg
imul
inc
dec
xchg
xor
rolb
xchg
adcb
adcb
add
adc
xchg
mov
sub
cmp
sbb
and
dec
dec
xchg
es
dec
dec
sbb
xchg
mov
push
add
xchg
mov
shll
push
stos
movsb
and
and
pushf
pop
arpl
xchg
nop
xchg
dec
sub
jb
cmp
loopne
sbb
adcb
sub
enter
outsb
and
mov
dec
jo
xchg
xchg
and
xchg
dec
mov
stos
movsb
xchg
fnstenv
xchg
mov
sbbb
push
std
push
mov
pop
ret
imul
mov
aad
mov
push
xchg
xchg
xor
out
test
xchg
xchg
loopne
push
push
rclb
xchg
mov
add
sub
fwait
js
sbbb
mov
or
mov
push
ret
sbb
mov
sub
mov
xchg
adc
pop
xchg
sub
jbe
pop
push
xchg
push
rclb
outsb
inc
mov
rclb
mov
xchg
pop
and
ffreep
mov
xchg
xchg
mov
xor
adc
test
xchg
mov
xchg
cmp
or
popa
mov
call
inc
bound
in
mov
movsb
xchg
imul
mov
pusha
subb
loope
xchg
jge
xchg
mov
xchg
xchg
mov
rcll
xchg
dec
outsb
in
push
xor
cmp
inc
or
inc
add
sbb
rclb
and
push
adc
loopne
inc
push
xchg
add
out
mov
inc
and
or
addr16
sub
inc
push
ja
and
cmpsw
and
imul
or
mov
rclb
pop
orb
add
pusha
jge
dec
pop
orb
sbb
sub
and
xchg
in
add
aas
adc
and
mov
inc
pop
rclb
xchg
mov
ss
jb
push
push
xchg
pop
ret
fiaddl
lcall
mov
add
sub
push
adc
and
sahf
xchg
sub
sub
push
adc
xchg
mov
cmp
pop
adc
movntps
xchg
outsl
add
sub
js
xchg
xor
add
cmp
and
je
lods
fsubs
or
daa
stos
mov
cmpb
or
mov
xchg
push
pop
outsl
inc
add
jo
xchg
mov
mov
xor
xchg
dec
dec
sbb
imul
adc
bound
xchg
dec
cmp
aaa
inc
dec
xchg
jb
pop
or
imul
rclb
mov
xchg
sub
mov
and
sub
jbe
test
xchg
xchg
mov
divl
mov
lds
sbb
sarl
test
mov
or
sbb
ljmp
add
inc
xchg
xchg
mov
inc
xchg
mov
outsb
sub
mov
movl
add
mov
xchg
xchg
loopne
gs
cmp
mov
mov
adc
dec
push
xchg
pop
ret
mov
orb
xchg
dec
pop
ret
xchg
adc
push
push
rclb
ja
fsts
sbb
test
dec
and
lods
sub
and
xchg
or
xchg
mov
mov
imul
sub
xchg
imul
dec
adc
aaa
dec
cmp
xor
xchg
movsb
and
pop
ret
xchg
cli
sbb
dec
mov
cmp
ja
dec
xchg
shlb
push
sub
cmpsb
xor
push
and
push
mov
pop
dec
inc
push
xchg
cs
push
dec
dec
xchg
sub
movsl
inc
push
and
xor
jne
and
or
adc
cmp
adc
leave
sbb
daa
lea
call
sarl
adc
xor
dec
movsb
or
add
test
adc
mov
cmp
mov
cmp
stos
std
pop
or
mov
jmp
mov
mov
add
or
sbb
stos
addr16
or
dec
mov
call
nop
mov
jmp
push
popf
pop
pop
push
mov
sbb
pop
jle
mov
stos
je
mov
out
inc
jmp
lock
adc
mov
fcmovne
sub
mov
mov
inc
inc
push
pop
ss
sbb
int
fcoms
add
xchg
enter
or
mov
addr16
mov
mov
cmp
push
jo
xor
mov
aam
mov
xchg
jns
hlt
xor
adc
jnp
adc
xor
arpl
mov
add
rclb
cmp
mov
add
inc
add
mov
jge
mov
add
xor
mov
addl
mov
sbb
jecxz
mov
push
mov
and
add
or
sbb
and
mov
push
mov
and
sbb
push
jbe
inc
inc
mov
push
mov
add
mov
lds
les
or
jne
pop
xor
roll
aam
push
and
jns
movb
xor
aam
rclb
les
loopne
hlt
pusha
iret
push
adc
stos
pop
xchg
aam
add
or
dec
in
add
push
fs
dec
ret
cltd
pop
js
add
cmp
nop
enter
rolb
dec
and
mov
dec
fwait
jns
xchg
icebp
sub
or
test
fwait
pop
xchg
and
lret
adc
mov
rorl
fwait
in
xchg
dec
or
mov
lock
shrl
gs
hlt
xchg
pop
jne
andb
pop
xchg
adc
popf
cld
stos
fwait
clc
or
adc
push
aas
push
pop
ret
jle
push
ss
sbb
ja
or
push
push
push
xchg
and
push
mov
in
push
and
cmp
sub
hlt
sbb
imul
roll
xor
int
in
in
lock
add
sbb
xorl
js
dec
aam
or
pop
mov
shll
push
sub
aam
test
cwtl
dec
fwait
mov
rorl
xchg
and
call
xor
lea
pop
lock
stos
gs
add
sbb
mov
jge
arpl
or
out
adcb
xor
dec
popa
push
loop
call
cmp
xchg
cmp
lods
popf
jae
sbbb
sti
es
mov
pop
xor
lods
jbe
nop
inc
scas
add
je
cmp
andb
gs
xchg
and
and
and
or
shrl
or
nop
iret
mov
movsb
call
sub
add
add
iret
stos
mov
lret
xor
mov
lcall
adc
sbb
push
xchg
adc
add
or
sahf
insl
rol
ja
inc
nop
adc
mov
out
cs
xor
adc
cmp
xchg
adc
push
imul
std
es
sbb
or
pop
or
or
subl
lea
dec
imul
pop
call
xor
sbb
jg
adc
insl
imul
push
mov
mov
add
or
js
jle
popa
cmp
sbb
adc
out
mov
loopne
dec
xchg
or
mov
dec
addr16
pop
mov
add
mov
mov
lcall
test
lds
hlt
andb
mov
jge
out
es
or
xor
add
fstp
sbb
sbb
jmp
cmp
nop
add
jnp
fistl
loope
or
shr
xor
push
and
out
ds
adc
and
rorl
and
faddl
pop
es
addl
sub
pusha
add
cld
clc
cli
sahf
dec
call
call
jp
popf
dec
pop
jno
data16
adc
or
aaa
push
push
inc
ret
mov
testb
and
nop
je
mov
inc
sub
enter
je
mov
andl
mov
cwtl
sbb
rorl
mov
insb
mov
pop
jl
mov
lret
dec
jl
jno
add
pop
cld
add
ds
mov
fs
dec
leave
clc
adc
das
stc
sahf
dec
imul
xor
inc
jo
stc
je
xchg
cmpsb
jno
push
insb
sbb
lds
les
sbb
mov
shr
push
add
insl
shlb
sub
rol
mov
sbb
xor
and
fcompl
fildl
push
loop
pop
int3
adc
push
cmp
call
fildl
rcll
rcll
add
mov
rol
mov
shll
add
dec
pop
pusha
push
inc
dec
jo
lds
test
inc
jecxz
insl
add
neg
arpl
sarb
shlb
fnsave
in
dec
jmp
ss
leave
loopne
mov
cmp
insl
shll
push
adc
pop
sbb
shrl
add
fs
ss
repnz
sbb
sbb
mov
mov
jmp
jo
shll
in
mov
negl
lock
shrl
les
fdivs
jo
sbb
push
outsb
mov
sub
fyl2xp1
xor
shll
jmp
sbb
mov
rclb
gs
les
push
les
testb
cmp
mov
xor
or
jmp
mov
pusha
or
push
push
out
in
add
adc
loopne
mov
pop
loop
push
inc
mov
xor
sbb
insl
rcll
sbb
rol
mov
jnp
aaa
ljmp
sbb
mov
add
insl
insb
sbb
sbb
fildl
loopne
or
fdivl
mov
ror
sbb
push
push
or
insl
rcrb
shr
pop
ss
dec
mov
loopne
insl
loopne
shl
and
mov
adc
addb
add
ljmp
shll
adc
mov
sub
cmpsb
and
popw
push
outsb
adc
push
adc
rcrl
mov
shl
sub
add
dec
dec
lds
mov
shrl
mov
fcomp
jno
shll
mov
push
add
adc
ljmp
xor
lds
mov
xlat
push
inc
push
insl
loopne
vaddsubps
rolb
rol
inc
jmp
mov
rorl
testl
dec
xor
fildl
roll
push
in
lds
jb
adc
sbb
pop
rorb
insb
roll
adc
jns
adc
push
rcr
rclb
enter
shrl
add
add
or
xor
add
popa
mov
ss
shll
inc
mov
ror
pusha
and
mov
xlat
aad
push
inc
insb
sbb
jl
insl
loopne
adc
outsl
roll
ret
mov
call
mov
fildl
shrb
or
insl
loopne
sub
rcr
ss
push
es
push
add
jno
add
ss
pop
andb
adc
sbb
fs
adc
roll
sbb
sub
fildl
mov
mov
fildl
jb
add
fdivs
pusha
rol
mov
mov
shll
shl
sbbl
fbld
mov
add
xchg
sbb
adc
push
roll
add
mov
and
pop
or
clc
nop
push
add
mov
cmp
pusha
jo
mov
push
pop
stos
fdivs
rorl
and
out
outsl
fisttps
push
les
jns
pushf
push
pop
add
fcmovnb
jns
add
push
or
sbbb
sbb
fisubs
insb
rcll
inc
sbbb
out
jge
cwtl
push
mov
inc
insb
rcll
adc
fcmovnbe
push
sub
mov
shll
xor
cmp
inc
dec
push
pop
fildl
into
repz
xchg
sarl
nop
or
push
test
mov
add
add
adcl
pop
repnz
cmp
xchg
test
shrb
xor
jno
push
xchg
push
ljmp
in
test
mov
sbb
fnstsw
push
push
sub
aam
xchg
adc
imul
xchg
test
xchg
cli
out
or
mov
mov
je
dec
adc
xchg
jo
push
mov
xchg
shll
loopne
push
xor
add
or
pop
mov
add
cmp
fcmovnb
jg
jo
push
add
mov
pop
adc
aam
mov
jecxz
cwtl
hlt
shll
cmp
mov
xchg
and
xchg
ret
imul
dec
fcmovnb
pop
mov
sbb
loopne
adc
repnz
push
sub
fistl
dec
fistl
mov
out
rclb
adc
sbb
shll
jo
xchg
enter
fistpll
ficoms
js
push
inc
xchg
jae
push
ss
xchg
push
xchg
ss
xchg
mov
or
cs
xchg
popf
mov
xor
xchg
jo
aas
call
adc
push
fimull
jbe
dec
fildl
ss
mov
xchg
jae
mov
add
clc
jl
adcb
mov
les
aaa
call
mov
mov
mov
cmpb
es
pop
dec
fistl
jne
xchg
pusha
cmp
pushf
mov
jo
adc
shll
xchg
clc
test
cmp
jmp
sub
mov
or
js
fcmovb
and
push
out
fiadds
out
add
out
inc
mov
xor
adc
lret
xchg
fiadds
push
mov
mov
sbb
adc
or
push
mov
pop
xlat
mov
xchg
popa
sub
scas
mov
sbb
xchg
pop
loopne
pop
test
adc
insl
xchg
loop
or
pop
add
pop
pop
cmp
ficoml
xor
xchg
adc
mov
adc
sbb
add
inc
inc
loopne
int
push
xor
mov
jnp
cmp
popf
xchg
adc
loopne
push
fsubr
mov
ffreep
or
push
sub
insl
add
add
sub
mov
xchg
cmp
popf
xchg
xor
jo
push
xchg
ss
and
lret
rorb
rcll
fistl
shll
xchg
inc
or
cmpsl
insl
rclb
push
xchg
mov
or
mov
and
rclb
push
bound
push
xchg
les
cmp
xchg
dec
fcmovnb
pop
lahf
mov
bound
cmpsb
add
int3
add
insl
add
push
adc
cmp
je
xchg
fldcw
cmp
sbb
add
mov
pop
mov
mov
sbb
add
mov
or
mov
rcrl
rcrb
or
cmc
push
adc
mov
aas
dec
aas
out
out
xchg
jg
fsubrp
push
in
sbb
jns
aam
les
add
jmp
and
scas
mov
sub
sarb
mov
and
test
aam
jbe
nop
mov
sarl
mov
push
xchg
push
aas
push
out
mov
push
aas
mov
or
jns
out
push
fs
je
test
add
cmc
xchg
sarl
aas
mov
mov
push
enter
and
inc
sub
push
cmp
fs
and
or
dec
fcmovb
cmp
loopne
lods
je
dec
or
and
and
mov
dec
fidivl
test
and
and
adc
scas
add
or
mov
scas
aad
movsb
or
mov
adc
sub
insb
fstps
insl
add
pop
and
andl
xor
push
push
insl
push
bound
popf
sysexit
nop
stos
push
call
movsb
xchg
leave
les
js
jae
mov
push
shll
jl
sbb
shl
xchg
jmp
add
movsb
or
add
pushf
out
ss
sbb
mov
rorl
adc
cmpb
shl
lods
sub
push
in
dec
mov
jne
out
push
sbbl
mov
test
inc
pop
and
inc
imul
and
pop
xor
nop
xchg
or
sub
xor
hlt
sub
mov
daa
in
adc
sub
or
call
mov
cwtl
iret
push
jns
cs
and
xchg
ja
jns
adc
nop
pop
mov
add
daa
in
test
push
add
daa
out
adc
xchg
add
daa
sti
xchg
add
mov
xlat
dec
sbb
lahf
adc
push
into
popl
rclb
lahf
rcrb
or
mov
fcmovb
jge
aam
lahf
fiaddl
into
leave
cmp
fcomps
pop
fbstp
push
lahf
stos
pop
dec
imul
fldl
lahf
insl
fldcw
or
mov
loope
stos
lods
push
cmp
jmp
jmp
inc
cmp
and
or
shr
shll
out
lock
sub
and
out
and
add
out
pop
push
out
pop
add
gs
adc
or
xor
or
in
movsb
in
push
fisubs
and
add
out
int3
inc
add
js
add
mov
add
rcrl
add
int3
inc
lods
xor
push
xor
and
icebp
cmp
and
fwait
es
add
mov
out
dec
push
ret
insb
cmp
adc
out
xor
push
and
adc
adc
cmpsb
out
add
bound
ret
jl
xor
xchg
push
and
push
pop
out
inc
pop
inc
iret
mov
ss
out
xlat
pop
mov
sbb
pushf
pop
add
cwtl
or
je
movsb
sahf
fs
push
and
or
out
cmp
mov
pop
lds
test
jne
inc
sbb
mov
movsb
iret
xor
add
or
frstor
scas
mov
cwtl
xor
mov
mov
mov
push
push
movsb
sbb
test
mov
stc
adc
or
xor
imul
pop
loopne
fcmovb
add
cmpsl
add
pusha
adc
cmp
inc
sub
pop
cmp
fisttpll
push
cmp
ss
sbb
and
pop
inc
push
sbb
int3
das
rolb
insl
or
xor
pop
mov
pop
pop
inc
sbb
in
pop
inc
or
xor
iret
rcr
or
add
cmp
adc
adcl
jae
mov
loopne
jae
cmp
dec
xchg
or
inc
test
jae
dec
pop
leave
pop
inc
repz
or
shrb
jae
mov
and
fimuls
js
int3
jae
repnz
aam
jae
sub
cmp
adc
ds
jae
add
dec
jle
and
add
pusha
dec
dec
lods
mov
jo
dec
push
mov
pxor
or
roll
outsb
mov
fidivrs
stos
mov
mov
inc
mov
lahf
push
roll
sbb
dec
inc
sbb
roll
out
inc
dec
inc
pop
dec
test
push
dec
aad
aas
sub
inc
or
dec
push
mov
mov
pop
add
shlb
inc
inc
dec
sbb
cmpb
inc
push
cmp
jb
ss
push
dec
or
dec
ja
ja
or
mov
test
sub
or
sbb
fdivr
add
mov
xor
push
out
call
fiaddl
jmp
test
sbb
add
push
inc
push
jmp
xor
bound
add
jmp
ror
sbb
sbb
addb
adc
xchg
roll
jmp
mov
jmp
inc
jns
shrb
mov
fiaddl
add
fmuls
or
push
add
jmp
jae
dec
mov
adc
cmp
mov
test
jmp
add
pop
inc
sbb
daa
inc
or
aad
xor
cmpsb
fists
insl
jmp
ss
add
mov
mov
inc
sbb
mov
inc
sbb
cld
in
sub
rolb
jmp
test
mov
add
mov
jmp
jae
lahf
cwtl
push
fcmovb
jmp
xor
jmp
cmpsl
or
or
jmp
add
jge
mov
jbe
jo
mov
mov
jmp
xor
xchg
push
push
mov
and
sbb
outsb
je
jmp
or
js
call
sbb
mov
jmp
inc
jle
xchg
xorl
movsl
lfs
mov
jmp
std
sub
enter
call
aam
sbb
jl
mov
jecxz
cmpl
sbb
pusha
jmp
push
fucompp
push
fcmovb
mov
fstpt
jl
push
cmp
pop
sbb
cmp
inc
inc
fistpl
xchg
cld
push
shlb
xor
pop
pusha
popa
mov
add
xor
jmp
shr
xchg
push
fiadds
insl
jmp
shr
popf
ss
cltd
or
mov
loop
mov
clc
and
push
das
stc
push
push
ljmp
mov
jnp
arpl
test
push
dec
jae
dec
int3
adc
lahf
and
dec
pushf
mov
call
fstpl
add
rorb
fimuls
sbb
in
mov
popf
mov
add
ja
inc
leave
mov
sbb
adc
adc
es
or
ret
xchg
je
push
xor
shrb
and
negb
jne
push
fnstsw
add
shll
dec
mov
xlat
xor
enter
cmp
enter
push
cmp
frstor
mov
or
mov
pop
insb
rcrb
dec
flds
adc
test
roll
pusha
adc
mov
ja
mov
inc
dec
insb
loopne
push
inc
enter
adc
mov
roll
outsb
nop
or
insb
rorb
faddl
or
inc
int3
push
add
loopne
adc
addb
rol
mov
mov
inc
loope
push
enter
adc
sbb
push
testl
clc
jae
lea
cmpl
fmuls
add
call
inc
jb
pushl
call
pusha
pop
es
pop
mov
push
push
push
ss
das
adc
xchg
or
mov
adc
mov
rcrl
insl
inc
cmp
icebp
xor
ss
rcll
adc
pusha
or
add
pusha
jne
pop
push
cmp
notb
aad
sbb
and
je
int
pop
aam
jnp
sti
mov
adc
shl
sub
into
stos
add
mov
mov
insb
pusha
xor
shrl
pop
bound
push
mov
pop
imul
sub
mov
lret
push
rcl
mov
add
rcll
rolb
rol
nop
lods
push
shll
nop
mov
rcll
push
mov
stos
xchg
or
pop
adc
loop
pusha
xchg
fcmovbe
mov
rorb
ja
dec
rol
mov
fdivl
das
push
sarl
sub
pop
ss
test
fs
mov
insb
shl
rol
cmp
shll
mov
int3
xor
mov
out
mov
movsl
mov
push
jp
mov
mov
shrb
jecxz
inc
mov
add
mov
mov
and
mov
pop
es
mov
xor
mov
xlat
mov
and
mov
sarb
lret
inc
mov
cld
jle
roll
cwtl
sbb
pop
lea
out
test
add
xchg
bound
shlb
fisubrs
sbb
mov
andl
sub
xor
scas
push
jp
jne
scas
dec
push
and
les
mov
mov
or
xchg
or
mov
or
movsb
outsb
aaa
rcll
jle
sub
aad
adc
cmp
js
sbb
daa
and
or
xchg
sbb
sub
xchg
nop
rorl
test
in
ret
pop
adc
stos
push
lret
or
add
xor
shrb
or
dec
mov
aaa
dec
or
lahf
or
jmp
loope
shlb
or
cmpsl
or
test
inc
cmpsl
insb
rorb
mov
or
pop
and
mov
fdivs
sub
or
dec
and
xor
adc
mov
iret
and
mov
cmpsb
sub
mov
or
add
add
pop
mov
stos
rcr
mov
ss
or
mov
mov
jp
jo
sub
insb
loopne
adc
or
mov
je
mov
ljmp
ja
push
or
lret
cmp
push
into
into
or
aaa
dec
es
decb
mov
je
outsb
les
sbb
add
push
or
cmp
xor
dec
xor
add
ljmp
pushf
mov
or
push
or
jbe
add
mov
xchg
add
sahf
push
cmp
js
sub
add
movsl
es
sub
or
insb
shrb
js
add
aad
or
add
push
or
push
xor
fld
dec
test
addr16
xor
cmp
or
loopne
or
call
or
sub
or
rolb
in
sub
js
add
or
out
or
lock
adc
push
mov
xchg
or
cmpsl
insb
shrb
xchg
inc
pop
mov
push
cmpsl
insb
shlb
test
push
es
jmp
insb
pusha
dec
jp
add
adc
cmp
dec
in
mov
adc
push
pop
in
fld
cmpl
jo
dec
adc
loopne
sub
xlat
add
adc
loopne
xchg
or
add
dec
fld
cwtl
adc
shl
lock
or
cld
push
bound
adcb
adc
dec
fld
std
adc
loopne
hlt
dec
xchg
mov
dec
adc
pushf
mov
adc
cmpsb
mov
inc
pushf
adc
or
pusha
jmp
les
mov
adc
mov
add
push
adc
in
sbb
and
mov
dec
fld
adc
and
mov
adc
sub
cmp
loope
sbb
add
lods
insl
sub
adc
leave
mov
sub
jno
add
ds
mov
jmp
sub
pop
cmp
cmpl
test
pusha
ds
insb
lahf
pop
cmp
or
cmp
push
ss
mov
sub
push
xor
jne
push
faddl
adc
rcrb
adc
loopne
dec
fsts
test
add
adc
pop
test
jb
add
loopne
rorb
fimuls
ss
cmp
adc
scas
push
jmp
cmpsb
popa
icebp
sarl
add
pushf
mov
shr
dec
adc
xchg
or
cmp
xorl
orb
adc
fsts
cmp
adc
lret
push
pusha
je
jno
jnp
enter
adc
sub
cmp
gs
fldenv
sti
jmp
cmp
aas
inc
sbb
cmpsl
adc
in
push
or
sub
dec
inc
clc
nop
sub
xor
adc
mov
cmp
adc
xchg
or
pop
inc
inc
ret
shrb
test
lods
test
adc
sub
mov
pusha
dec
and
inc
ja
cmpsl
adc
insl
pop
push
gs
push
ss
jle
stos
adc
add
les
sbb
insb
adc
ficompl
lret
test
adc
jo
push
push
mov
cmpsl
insb
shlb
adc
add
push
adc
loopne
mov
push
adc
adc
push
cmpsl
insb
adc
adc
jo
loopne
add
cmpsb
mov
sbb
dec
fsts
sbb
popa
push
cmpsl
insb
adc
inc
jnp
je
call
jbe
adc
push
adcb
jns
ss
sbb
mov
lods
adc
mov
out
dec
fld
adc
push
adc
jno
inc
sarb
push
outsb
or
adc
adc
ja
jecxz
scas
imul
adc
sub
mov
sarl
push
mov
xor
adc
stos
movsl
popf
mov
adc
xchg
jecxz
pusha
scas
sbb
out
or
adc
xor
xor
adc
ss
or
ss
inc
sub
mov
push
pop
cmpsl
adc
test
ja
lret
dec
mov
pushf
cmpsb
aaa
shrl
adc
add
pop
xlat
sub
fdivrs
dec
scas
push
ss
jmp
fisubrl
fisttpl
leave
lahf
cmp
addr16
adc
mov
fwait
ljmp
and
mov
adc
das
test
inc
dec
fld
dec
push
adc
sbb
xor
aad
and
inc
jge
inc
fidivl
out
pop
clc
cld
movsl
sbb
push
das
loopne
sub
xor
cmpsl
cmp
push
popf
mov
orb
jge
out
fadd
sbb
push
movsl
das
cmp
or
inc
and
add
push
popf
mov
fdivr
dec
dec
jnp
push
inc
jge
das
out
fadd
xchg
das
cwtl
push
sbb
jle
add
lds
adc
cmpsb
cmp
cmp
inc
jge
out
fmuls
movsl
das
hlt
cli
push
sbb
fidivl
add
lds
adc
adc
inc
jge
out
pushf
mov
das
push
outsb
call
sub
mov
sub
sub
sub
push
adc
push
outsb
mov
jo
imul
mov
inc
xor
adc
pandn
iret
mov
sbb
sti
incb
scas
xor
sub
jo
adc
xchg
push
dec
in
mov
adcb
jle
ljmp
cmpsl
insb
loopne
adc
leave
stos
loopne
ljmp
push
and
std
dec
pusha
or
pop
mov
adc
imull
jo
sub
adc
or
jo
test
xchg
outsb
adcb
xor
inc
jo
adc
loopne
or
fnsave
and
fmull
or
fcompl
adc
outsl
push
ss
add
adc
push
shrb
adc
test
sbb
adc
jne
adc
fs
call
or
mov
adc
hlt
jb
rcrb
mov
inc
dec
add
mov
and
sub
fldt
and
les
mov
push
add
into
imul
or
psrlw
mov
xlat
aad
xchg
or
aad
pop
push
leave
jo
jmp
lcall
cmpsl
pushf
jnp
mov
jmp
xchg
mov
push
lret
push
or
jmp
pusha
or
jmp
test
push
cmpsl
insb
jmp
mov
scas
push
ss
daa
sbb
mov
lds
jmp
lret
push
out
js
or
shlb
sub
jmp
push
xor
and
jmp
or
ss
psrad
mov
stos
sbb
mov
sub
jmp
sbb
movsl
test
ficompl
aaa
add
sub
jmp
push
or
stos
adc
jmp
outsl
out
push
ss
insb
loopne
fidivs
xor
mov
outsb
cmpsl
jmp
add
ss
das
cmp
call
mov
popa
mov
gs
dec
push
stos
push
ss
lock
jmp
mov
or
cmpsl
dec
or
push
ss
inc
cmp
xchg
or
lock
push
pop
fmuls
sub
sub
jmp
mov
and
loopne
ja
insb
shrb
jo
xchg
and
cmpsl
jmp
mov
push
adc
cmpsl
jmp
mov
jmp
add
add
pusha
mov
add
es
sbb
jno
pushf
mov
or
repz
insb
pusha
xor
jo
adc
sbb
sbb
cmp
push
mov
xor
cmp
ja
sub
repz
cmpl
add
call
xchg
fdiv
fidivs
lret
fld
addb
or
imul
bound
xchg
pop
gs
jmp
cmpsl
insb
rorb
enter
push
out
adc
rorb
repz
repz
jle
dec
fld
loopne
test
and
ja
adc
add
insb
loopne
repz
ret
mov
ret
jo
das
cmp
and
sub
mov
add
lock
popf
cmp
bound
sub
add
lret
cmpsl
insb
loopne
repz
fdiv
sub
pop
rcrb
push
out
adc
loop
ss
xor
lahf
mov
xlat
repz
mov
fld
pusha
mov
cmpsl
insb
loopne
cmp
or
gs
loop
inc
xchg
sbb
popf
cmp
movsl
or
adc
jmp
sahf
cmpsl
insb
pusha
shr
icebp
push
repz
xor
cmpsl
insb
repz
adcb
repz
insb
pusha
mov
insl
pop
push
xchg
andl
xchg
repz
xlat
sub
xor
fsubs
repz
mov
ret
pop
xchg
sbb
out
fcoms
sbb
gs
cli
test
pop
lds
std
xchg
jmp
call
movsb
sbb
dec
xchg
or
sbb
mov
lea
push
pop
lea
jo
jb
add
testl
cmp
clc
insb
rcrb
ret
mov
shlb
add
sub
pop
xchg
cmp
ja
inc
repz
adc
or
sub
data16
push
dec
fpatan
push
and
jge
int3
fisubl
shll
mov
or
repz
dec
stos
dec
ljmp
in
test
mov
dec
xchg
and
or
sbb
ss
repz
repz
push
add
sub
repz
add
inc
lods
inc
add
rorb
fistpl
dec
fpatan
cmpsl
insb
sar
or
add
out
cmp
mov
lret
add
loop
repz
inc
push
ss
repz
pop
mov
nop
jno
push
cs
repz
call
repz
push
sbb
xchg
repz
push
repz
repz
push
adc
mov
sbb
push
data16
repz
dec
mov
dec
fld
nop
repz
or
fs
test
add
mov
mov
mov
in
push
loopne
inc
pop
out
clc
xlat
mov
adc
adc
cmp
mov
out
lods
popf
jmp
mov
dec
mov
or
enter
ja
popa
cwtl
add
dec
cmp
dec
lock
sub
popa
jmp
subl
xchg
or
adc
mov
xor
into
xorl
xor
xor
push
fsubl
mov
sbb
movsl
xor
xor
xor
or
rcrb
adc
ss
shr
mov
pop
xor
dec
or
xor
loopne
fwait
xor
add
xor
flds
cmp
nop
mov
xor
add
pusha
inc
int
xor
sub
mov
add
xor
sub
lcall
fnstenv
push
loopne,pt
inc
or
lock
lret
xor
cmp
xor
jne
and
je
xorl
loopne
xor
lea
out
pop
pop
int3
xor
lret
xor
jo
pop
ss
push
lds
xor
lret
push
or
xor
push
pop
push
mov
xor
insb
shlb
inc
rclb
adc
push
pop
inc
xor
jo
jle
xor
xor
xor
xor
xor
fadds
not
pop
mov
mov
mov
adc
adc
ja
lret
push
fdivl
xor
loopne
add
push
je
insb
and
popa
cmpb
xor
and
pusha
jae
test
lret
push
push
mov
xor
lret
push
sbb
xor
push
or
xor
or
shlb
lret
xor
xor
rcll
add
xor
mov
sbb
or
es
push
xor
inc
int
add
int3
mov
sarl
aaa
add
mov
jmp
push
push
xchg
sbb
xor
js
in
inc
xor
xor
dec
int3
mov
xor
mov
inc
and
insb
shlb
aaa
jno
mov
xor
dec
int3
mov
xor
xor
jo
xor
xor
int3
scas
mov
xchg
inc
jbe
enter
xchg
je
adc
jp
xchg
loopne
and
std
and
cmp
inc
fistl
dec
mov
add
nop
and
aad
call
stc
pop
sbb
push
lret
push
stc
mov
add
inc
lds
addr16
aad
popf
adc
xchg
lods
gs
add
mov
adcb
jmp
mov
mov
stc
push
sbb
stos
xchg
or
or
lret
push
outsb
test
push
adc
aaa
push
stc
add
addr16
test
loope
sti
adc
fcoms
and
mov
stc
fimull
mov
les
adc
mov
dec
stc
cmp
push
sbb
inc
sub
pop
ss
stc
sub
mov
stc
mov
push
stc
ja
sub
and
sbb
add
ja
or
pop
je
test
add
sbb
mov
cli
sahf
push
push
aad
stc
ljmp
fcomps
test
es
adc
sub
test
or
loopne
lods
rorb
insb
xor
outsb
mov
adc
lret
stc
inc
ror
push
push
shr
mov
mov
stc
int
xor
stc
push
lret
push
out
test
stc
mov
lds
je
push
add
stc
cmp
lret
stc
sbb
push
stc
cmc
bound
ja
insb
stc
jmp
gs
aam
jmp
call
rorb
push
test
cmpsb
jp
add
lret
stc
clc
in
pop
add
push
sub
mov
sub
pop
ss
clc
je
sub
or
lret
push
outsb
jmp
stc
push
rcrb
lock
test
lret
push
push
cmpsl
stc
xchg
cmp
ljmp
xlat
and
pop
push
arpl
push
stc
xchg
loopne
mov
aam
add
fcoml
jae
scas
stos
stc
shlb
stc
sbb
inc
and
xorl
stc
das
shll
fst
mov
cmpsb
out
inc
lret
push
int3
sub
add
stc
arpl
inc
add
in
sarb
dec
cmp
std
icebp
xchg
sub
mov
rorb
mov
stc
insb
and
sbb
jo
and
notb
stc
add
inc
sub
adc
pop
lret
push
clc
push
sub
push
lret
push
in
cld
sub
push
lret
push
mov
stc
mov
divl
mov
xlat
clc
jecxz
test
lret
push
fsubrl
mov
insb
loopne
stc
dec
fdivrp
or
cmpb
cs
addb
in
jbe
xor
jo
adc
push
cmp
js
nop
adc
or
and
sub
in
test
test
in
xor
in
mov
or
in
mov
adc
loopne
push
or
or
push
xchg
xor
subb
or
sub
add
ss
cmp
addr16
push
push
roll
or
rclb
push
fcmovb
adc
test
test
mov
enter
add
cmpb
sbb
pop
inc
aam
sbb
pop
inc
popa
pop
push
mov
sbb
push
fcmovb
cmp
add
push
pop
push
adc
addl
or
cmp
mov
push
mov
sub
in
and
push
dec
mov
fiaddl
push
cmp
push
xorl
insl
loopne
push
jbe
push
add
pop
adc
push
cmpl
mov
into
mov
jo
and
xlat
mov
arpl
rcll
mov
mov
dec
inc
mov
aaa
push
sub
jl
sbb
push
fiaddl
adc
push
push
sahf
push
movl
xchg
loopne
sbb
jb
bound
add
rcrb
enter
add
enter
ret
xchg
or
into
or
push
cwtl
pop
xor
push
push
fld
rcrb
sbb
rolb
rolb
xor
sbb
push
pop
add
sub
cwtl
cmp
mov
push
or
jo
rolb
push
rolb
insl
loopne
push
jge
push
push
ss
sub
push
outsb
mov
add
push
cmp
push
push
lret
jb
or
inc
sbb
mov
sbb
insl
add
stos
jo
jo
clc
insl
fisttpll
mov
ss
pusha
rolb
into
mov
adcl
push
cmp
sbb
push
not
aas
or
and
push
inc
dec
out
cmp
fwait
push
xlat
mov
add
stos
shlb
add
inc
in
rolb
frstor
add
rolb
push
ss
ret
arpl
jmp
sub
sbb
push
add
inc
xor
cmpb
add
push
sbb
daa
xchg
inc
sbb
xor
roll
push
pop
add
out
xchg
and
adc
dec
dec
or
outsl
cmpsb
test
sbb
mov
or
insl
loopne
push
jge
loopne
fcompl
adc
jae
addl
push
xor
mov
sbb
push
imull
pop
rclb
jo
inc
inc
add
repnz
push
ficoml
sbb
out
mov
inc
add
addb
sbb
dec
sbb
xchg
push
sbb
add
or
roll
mov
data16
pop
insl
loopne
inc
cmp
cmp
sbbb
sbb
add
rolb
in
add
push
inc
push
fcmovb
inc
cmp
insl
loopne
push
inc
cli
and
mov
pop
inc
scas
sbb
out
clc
inc
sbb
mov
les
mov
cmc
test
push
js
and
cltd
inc
sbb
in
push
xor
cmc
xchg
lods
and
sbb
sbb
inc
inc
cmc
outsb
mov
mov
andl
data16
push
or
cmc
push
inc
sbb
cmc
or
or
cmc
test
ss
dec
mov
lret
ror
adc
js
sub
push
or
add
pop
add
sub
mov
sub
pushf
inc
inc
fsubl
push
rcrl
adc
pusha
or
fwait
mov
inc
mov
adc
add
push
fdivs
into
outsl
add
gs
and
sub
imul
sbb
fcmovb
loope
mov
or
cmpsb
or
mov
mov
scas
inc
mov
push
addl
daa
nop
cmp
inc
xor
loope
insl
loopne
cmpsb
push
loopne
loope
add
push
cmc
add
push
fiaddl
loope
cmp
daa
inc
jb
sbb
add
repz
sbb
loopne
ss
pop
or
push
inc
loop
pusha
sbb
pop
fs
lfs
and
stos
push
cmp
adc
loope
jno
adc
sbb
pusha
sub
jb
and
imul
pop
add
fsub
xor
call
fcmovb
test
mov
aaa
mov
andl
mov
push
push
xchg
call
ja
xorl
ret
sbb
loope
and
fiaddl
mov
dec
add
pop
mov
push
mov
mov
insb
add
xor
loope
inc
mov
push
loope
call
insl
loopne
loope
ja
fiaddl
cwtl
mov
jle
lfs
addl
rol
jo
jno
cli
xor
insl
loope
shr
sbb
outsl
shlb
loope
cmp
add
jle
push
repnz
ja
mov
push
jp
mov
adc
jbe
or
shl
loope
push
sub
push
add
sahf
addr16
sbb
and
movsb
jae
in
jne
adc
jns
and
fiaddl
in
or
insl
jmp
cmp
fcmovb
loope
inc
sbb
mul
fistpll
pop
mov
or
sbb
jo
fdivl
push
loope
sbb
pusha
mov
mov
add
add
orb
roll
mov
push
orps
insl
loope
pop
or
add
std
loope
sbb
insl
inc
sbb
fsub
mov
outsl
add
icebp
jmp
push
jl
adc
or
ret
sub
xor
push
ficomps
loope
xchg
gs
movups
mov
push
adc
enter
xchg
insb
sub
cmp
fistpl
push
sub
mov
flds
sbb
and
and
push
ja
leave
push
adc
add
push
adc
stos
pop
or
inc
movsb
or
inc
les
ret
stos
and
adc
mov
stos
add
sub
adc
sbb
lret
xchg
mov
rol
lods
or
mov
inc
movsl
mov
movsl
shll
cmpsl
ja
mov
movsl
xor
mov
jnp
and
mov
mov
dec
pop
inc
mov
or
dec
sbb
or
dec
ss
mov
push
or
jmp
cmpsl
imul
mov
add
inc
mov
stos
mov
adc
scas
rorb
mov
sarb
sub
mov
jo
and
loopne
dec
mov
fld
dec
xchg
mov
insb
loopne
sub
push
xchg
mov
mov
andb
ret
push
lock
mov
inc
mov
and
pop
insb
loopne
jb
xchg
xor
outsb
push
test
push
cwtl
push
inc
push
mov
inc
and
leave
push
mov
push
adc
mov
in
or
xchg
xor
adc
mov
icebp
push
mov
cmpsl
into
mov
pop
mov
jnp
mov
popf
push
loopne
adcl
ds
push
mov
fwait
pop
mov
enter
rorb
mov
insb
dec
adcb
cmpsl
xchg
cmp
mov
sbb
mov
pusha
ret
xchg
or
sub
mov
fld
in
adc
cs
mov
mov
add
sub
mov
loopne
fs
pop
and
dec
mov
ss
push
stos
mov
addl
push
mov
mov
mov
mov
mov
mov
pop
push
cmpb
lahf
push
sub
inc
cmpsl
jl
xchg
insb
loopne
filds
rolb
fcoms
add
arpl
push
dec
lods
fs
rolb
push
and
add
dec
js
sbb
add
jmp
and
stos
dec
fists
fucomip
dec
ss
faddp
push
outsl
push
leave
push
fildll
fistps
sbb
push
cmp
fs
orb
fists
add
loopne
ret
adc
xor
mov
fisttps
nop
fst
in
mov
mov
inc
movsl
mov
push
mov
xchg
rcr
adc
pop
jno
fildll
sbb
sbb
dec
mov
add
les
fists
inc
filds
xchg
cmp
sub
sbbb
and
push
pusha
out
ds
mov
pop
je
faddl
divl
mov
push
dec
adc
fs
and
push
fildll
fists
sub
xor
xchg
hlt
mulb
mov
stos
add
mov
test
add
or
cmp
add
movsl
fmuls
adcl
aaa
adc
out
and
sbb
adc
adc
xlat
add
add
push
push
ret
xchg
sbb
frstor
and
xlat
cmp
push
jo
mov
push
push
or
xlat
mov
insb
or
add
fistpl
loopne
data16
out
sbb
pop
ret
xor
or
add
or
int
subl
xor
mov
call
imul
or
adc
pop
int
and
pop
popf
fisttpl
xor
adc
and
popa
xchg
stos
adc
and
add
data16
add
sbb
and
and
inc
add
popa
inc
mov
adc
push
inc
mov
or
add
insb
stos
bswap
insb
xchg
mulps
adc
adc
and
fstpl
pop
mov
inc
bswap
dec
push
and
add
ja
adc
test
fucomp
push
lds
imul
add
repnz
push
jo
push
adc
push
test
imul
imul
imul
add
test
imul
test
mov
or
push
lods
xorl
cmp
mov
sbbb
loopne
push
ficompl
inc
and
pop
roll
enter
sbb
push
mov
pop
rcrb
rolb
push
or
out
push
fcmovb
cmp
nop
push
cwtl
jo
sbb
pop
jg
aaa
rolb
pop
int3
add
sbb
jae
fcmovb
imul
jns
xlat
stos
addl
dec
or
lds
inc
mov
add
out
orb
xchg
push
test
xchg
xor
and
and
push
and
test
sub
bound
and
sbb
xchg
dec
fisttpl
jmp
sbb
xor
cmpsl
or
sub
sbb
push
fdivl
and
jno
fdivl
and
push
or
xorl
xchg
and
xor
push
cmp
adc
dec
ja
and
push
stos
cmp
and
mov
inc
sbb
inc
fiadds
push
fiaddl
insl
loopne
and
outsl
and
shr
cmp
lret
int3
loopne
push
fisubl
mov
bound
insl
and
out
or
and
mov
sti
callw
loope
ss
add
pop
fcmovb
imul
add
and
xchg
sbb
aam
sbb
mov
jo
sbb
sbb
mov
ss
inc
and
sub
add
testb
outsb
shrb
cmp
add
fcmovb
and
orb
mov
mov
call
and
ss
add
insl
and
mov
sbb
and
cmp
adc
and
jl
movsb
pop
loop
or
or
mov
add
push
outsb
test
and
rolb
shlb
rorb
fiaddl
es
or
cmpl
cmpb
add
rolb
inc
cmp
and
add
and
es
add
and
xchg
push
pop
insl
and
add
pop
cmp
stos
mov
loop
mov
mov
loope
and
out
or
mov
add
mov
add
and
les
pop
sub
mov
fmuls
inc
inc
inc
sub
mov
inc
data16
adc
das
ret
into
push
push
int3
das
adc
or
das
je
and
das
adc
sbb
pop
push
out
adc
and
or
adc
pop
nop
xor
subl
xchg
das
cmp
loope
das
mov
sub
mov
or
push
and
xor
ja
addb
or
test
int
dec
andl
lahf
jmp
xchg
ss
xchg
je
jl
push
mov
rolb
jae
sbb
inc
insb
mov
test
jae
xlat
nop
sbb
cmp
sbb
sbbl
mov
call
ja
insl
hlt
xor
push
sbb
test
rorl
inc
insl
fsubrs
cmp
push
insl
push
dec
dec
adc
and
into
and
xchg
call
fiaddl
add
rolb
pop
out
insl
insb
inc
imul
adcl
add
insl
shlb
xor
mov
sub
div
inc
outsb
inc
adc
insl
or
pop
push
mov
insl
lahf
and
ficomps
adc
inc
push
pop
jbe
adc
mov
insl
insl
ds
jo
add
add
inc
sbb
inc
insl
push
rolb
in
data16
insl
out
bound
sbb
mov
pushf
mov
out
cmpsb
and
mov
ja
push
insl
xor
push
xorl
lcall
movsb
inc
mov
jo
adc
cmpl
mov
adc
insl
adc
or
dec
mov
push
add
push
shrb
rolb
push
je
adc
add
xor
insl
xor
push
add
or
push
dec
aaa
insl
mov
rcll
dec
ljmp
jmp
pop
insl
leave
push
rolb
dec
call
faddl
incl
insl
mov
subb
sbbb
inc
sbb
insl
insl
sbb
or
andb
decb
ficoms
jbe
push
adc
js
in
int3
add
lock
nop
mov
inc
js
rolb
insl
repnz
test
in
add
insl
add
push
inc
sbb
adc
orb
ss
sub
dec
insw
adc
add
das
insl
mov
mov
push
mov
insl
inc
xchg
add
fcmovb
insl
inc
push
cmc
add
imul
or
sbb
push
inc
insl
xor
js
rolb
pop
rolb
sbb
and
loopne
push
insl
push
mov
mov
mov
ss
scas
insl
scas
imulb
testb
xor
aaa
fcmovb
adc
or
scas
dec
sbb
lock
neg
shlb
fldenv
or
xchg
rcrl
fcmovb
loopne
fdivr
push
and
xchg
or
push
adc
insl
movsb
movsl
aas
push
fwait
dec
lock
inc
sbb
insl
insl
or
subb
xor
mov
fcoml
mov
push
out
inc
sbb
rolb
in
push
insl
clc
xor
xorb
push
insl
adc
adc
insl
rolb
sbb
mov
adc
xor
sbb
sub
int3
subl
sbb
insl
fs
xlat
addr16
adc
add
fidivl
dec
xor
sub
push
lret
jae
shlb
cmpsl
dec
sub
sbb
cmp
push
cmp
scas
pop
nop
sbb
into
in
dec
or
mov
shlb
sub
sbb
pop
push
dec
adc
jae
sbb
or
addb
inc
jae
rolb
inc
pop
inc
pop
subb
push
jae
push
cmc
push
add
stos
dec
popa
sbb
adc
rolb
push
xlat
aaa
or
sub
jae
enter
inc
sbb
popa
pop
lock
enter
mov
lods
sbb
ret
call
test
mov
jne
cmp
or
or
xchg
or
xor
fnsave
pop
sbb
sti
imul
adc
or
mov
mov
inc
sub
xchg
fcoml
dec
mov
dec
test
or
inc
adc
xor
xchg
adc
loopne
mov
sbb
xchg
mov
mov
popf
pop
xchg
fwait
jb
xor
adc
aam
fisttpll
xchg
mov
fnsave
push
or
insb
shrb
fisttpll
push
mov
dec
mov
push
negb
mov
sar
or
add
mov
push
adc
add
mov
roll
fcmovb
sbb
inc
subl
aaa
mov
and
addl
or
sahf
pusha
xchg
xor
loop
xor
push
gs
pop
ss
sbb
mov
gs
add
add
mov
mov
gs
flds
or
or
mov
andl
xchg
or
inc
jb
or
mov
mov
or
inc
add
push
push
int3
mov
dec
daa
cmp
adc
xor
test
rol
xor
cld
xor
jo
add
insl
push
sub
cmp
and
mov
cmp
jecxz
aaa
add
cmpsl
lods
lock
les
insl
mov
xchg
jle
push
sub
mov
push
int3
testb
add
adc
pop
xor
cmpsl
mov
mov
sub
ret
fbstp
shrb
add
popa
orl
inc
les
adc
add
xchg
jne
add
bound
cmp
fcompl
nop
push
sbb
xchg
push
pop
dec
pop
lahf
mov
mov
sub
ficoml
sub
push
movsl
loope
daa
pop
sbb
movsl
and
dec
inc
pinsrw
add
and
lret
ljmp
lea
add
lret
cmpsl
add
orb
mov
test
dec
jge
in
push
push
or
mov
lea
push
lret
mov
mov
sbbb
inc
sub
lea
sbb
aad
sub
xor
sbb
insb
loopne
xchg
lea
lea
movsl
lea
lea
test
or
lock
lea
adc
lea
pusha
mov
loopne
addb
lea
cmpsl
dec
mov
mov
orb
leave
call
adc
or
add
xorb
stos
ja
insb
popf
xchg
dec
or
push
jb
mov
xchg
cmp
insb
mov
xor
movsb
dec
notl
and
sarb
push
stos
xchg
jb
add
xchg
mull
out
add
mov
sbb
rcrb
cmp
and
cwtl
rorb
not
mov
xchg
ss
and
testl
notl
mov
lcall
cs
loopne
mov
out
push
popa
add
adc
stc
cmp
add
bound
mov
negl
xchg
insb
loopne
testl
pusha
daa
xchg
sbb
flds
jg
add
or
aaa
inc
mov
xchg
inc
pop
xchg
ds
mov
pop
adc
lcall
pop
enter
push
xor
out
cwtl
js,pn
push
lret
xorl
lret
push
xchg
sub
filds
mov
xor
pop
push
enter
adc
mov
mov
loopne
push
cmp
or
or
orl
fistpl
xor
sbbl
orl
fadd
and
mov
mov
subl
sbb
inc
dec
sbb
add
and
xor
ret
push
insl
inc
dec
xchg
jmp
js
sub
std
sub
js
pop
filds
or
dec
jmp
sub
add
scas
insb
loopne
mov
jo
xchg
sub
or
lods
sub
sub
cmp
fwait
sbb
sbb
jnp
mov
and
insl
jnp
mov
lds
dec
js
clc
push
inc
sbb
arpl
adc
test
sbb
mov
adc
inc
xchg
or
pop
add
lret
nop
or
ret
push
les
xor
aas
fcmovne
aam
sbb
pop
push
sub
push
fld
pusha
addb
add
imul
jmp
sbb
inc
mov
aam
sbb
jo
push
xchg
xor
push
fld
jge
add
cmp
cld
push
stos
addb
test
push
stos
in
add
push
cs
or
push
pop
or
adc
adc
sbb
pop
cld
add
inc
ss
bound
sub
sub
mov
faddl
mov
inc
test
lret
sbb
and
sbb
movsl
jnp
pop
sbb
fwait
movsb
pop
subl
inc
pop
or
ret
nop
pop
sbb
cmpl
dec
or
xor
cmpsb
and
and
in
sbb
mov
scas
or
cmpsl
pop
out
leave
adc
sbb
fcomps
mov
pusha
dec
pop
sub
push
or
cld
and
dec
negl
add
mov
inc
ss
popf
mov
enter
xchg
ret
push
popf
lahf
fistl
sbb
sub
mov
xchg
push
pop
inc
sub
rorb
lret
push
cmc
adc
js
inc
sahf
xchg
mov
scas
sbb
iret
xchg
add
add
lods
jmp
sub
sbb
rcrl
insb
pop
enter
or
sbbl
pop
xor
pop
xchg
or
pusha
nop
or
xor
add
pop
ror
push
ficomps
pop
iret
es
ss
int
scas
inc
ss
pop
les
or
insb
pusha
add
js
nop
int3
cltd
pop
add
sti
sub
push
xor
push
fdivl
cltd
sub
lock
push
pop
jge
xchg
inc
cmp
pusha
xchg
pop
sbb
sbb
mov
outsb
push
inc
lock
jb
gs
ss
enter
rol
inc
pop
ret
sbbl
mov
mov
sbb
cs
bndldx
pop
mov
pavgb
push
push
enter
pop
sar
push
mov
cmpsl
movsb
ret
xor
adc
inc
ss
xor
push
lea
mov
pop
dec
xchg
and
ret
imul
nop
or
add
cmpb
ljmp
and
pop
rcll
add
sbb
enter
pop
ret
and
ret
mov
inc
push
ljmp
sbb
mov
add
repz
inc
bound
fs
leave
cmpsb
add
rclb
mov
xchg
in
lret
out
and
js
add
push
and
adc
dec
and
push
imul
add
mulb
nop
or
add
mov
ret
mov
xchg
je
push
shlb
add
faddp
subl
leave
inc
orl
imul
add
rcrb
ret
fld
loopne
pop
cli
push
adc
add
rcr
add
inc
add
mov
outsb
push
rol
fs
dec
andl
fld
jnp
test
fs
subl
rcll
xchg
or
add
and
loopne
outsb
ret
or
jne
sbbl
cmp
add
insb
loopne
ret
xor
loope
dec
push
sbb
inc
xchg
pop
scas
enter
xchg
fld
popa
or
rcr
or
out
dec
sub
or
mov
xchg
dec
fbstp
dec
push
xor
add
mov
testl
add
ret
test
push
dec
sar
pusha
ss
das
or
cmpsl
divb
pusha
dec
lea
dec
add
subl
ret
or
adc
ret
lods
pop
lret
pusha
dec
enter
push
ret
bound
add
hlt
mov
xor
add
testl
or
adc
push
call
and
mov
sbb
xor
dec
movsb
push
subl
ret
add
sarb
pusha
pop
inc
dec
and
dec
jo
sub
mov
inc
adc
sub
pop
add
ret
or
subl
ret
add
pop
ret
dec
outsb
xchg
mov
lds
or
adc
add
jle
and
pop
pop
lcall
push
ret
pushf
imul
cld
fstps
sub
sub
addb
adc
sbb
sub
fld
mov
adc
stc
shlb
cmp
fld
jp
jo
subl
ss
fsubrl
nop
or
ja
shl
pop
fcoml
fsubrs
nop
or
mov
mov
ret
jecxz
enter
ret
or
mov
nop
or
mov
sbb
ret
out
add
add
fstps
or
xchg
and
cwtl
sub
add
ret
push
iret
bound
push
add
ret
inc
ss
test
ret
mov
cwtl
test
dec
ljmp
rorb
mov
mov
es
or
ss
ret
push
xchg
xor
enter
mov
addr16
add
inc
or
mov
ret
mov
sub
jg
mov
ret
test
push
les
nop
or
addb
ret
out
popa
or
fucomip
flds
pushf
movsl
push
nop
or
cmp
ret
push
adc
mov
sbb
fisttpll
mov
jnp
and
and
mov
sbb
ret
not
jo
fs
in
adc
inc
ss
mov
rol
add
ret
and
js
cmc
jp
rcl
ret
movsb
out
jg
add
xchg
xchg
loopne
in
jo
dec
sbb
imul
adc
add
ret
add
dec
mov
adc
adc
ret
aas
mov
jo
ret
mov
adc
and
xor
ljmp
mov
movsl
and
mov
xchg
outsb
ret
or
lret
ljmp
mov
loopne
cmp
roll
ljmp
and
cmp
dec
inc
ret
cmpsb
sbb
fs
fldcw
loopne
loop
push
in
push
add
ret
ret
ret
adc
push
ret
push
imul
push
lods
push
fldl
mov
or
sbb
sub
cld
iret
aaa
imul
jne
pop
ret
add
push
sub
dec
addl
addb
cmp
push
ret
das
sbb
rcrl
inc
or
dec
or
add
add
dec
add
adc
nop
or
sbb
cmp
addr16
ret
ret
xor
call
enter
cs
andb
push
pop
and
cwtl
test
cmp
jbe
test
das
xchg
shll
mov
roll
dec
add
ret
fdivl
sbb
loope
ret
jo
rorb
movsl
es
ret
mov
add
rolb
inc
ss
dec
loope
rolb
cmp
shrl
subl
pop
loopne
or
mov
ret
xchg
sbb
or
shrl
and
push
and
stc
movsb
xchg
fs
repz
rcrl
adc
loop
rcrb
es
fld
sbb
sbb
rcl
add
clc
sarb
or
lods
add
rol
sub
subl
jecxz
mov
xchg
enter
mov
cmp
ja
inc
ss
addb
xlat
shll
ss
inc
loope
inc
shrl
rcrl
xor
xchg
mov
and
push
orb
lods
les
aas
cmp
jne
testb
cltd
adc
pop
or
xchg
pop
pop
sub
jnp
add
aaa
repnz
nop
dec
add
dec
jp
lahf
xchg
lret
mov
stc
add
aaa
enter
dec
jp
or
in
test
mov
mov
or
dec
jp
loopne
push
mov
mov
rcrl
mov
jg
jb
or
add
mov
jge
push
and
push
push
add
add
jo
shll
or
shr
inc
rcrl
call
loope
mov
faddl
lea
push
fisubs
nop
lea
pop
adc
lea
cmp
add
mov
add
enter
lea
xor
push
add
loopne
nop
lea
sbb
orl
or
insb
rol
sbb
jmp
fldl
add
and
add
pop
iret
les
loopne
inc
and
lea
dec
cld
inc
inc
or
popf
addb
lret
call
add
lea
jo
aam
clc
sbb
xor
push
mov
lea
jge
mov
orb
and
lea
push
add
ret
jl
or
dec
lea
jo
sub
addb
mov
nop
lret
addr16
sarb
adc
sbb
test
xor
add
shlb
add
push
outsb
or
adc
lea
sub
dec
push
in
xchg
in
nop
pusha
decl
adc
lea
pop
cmpl
push
mov
fcompl
cmpsb
inc
ss
lea
lea
enter
lods
add
rcl
xchg
push
or
inc
insb
pusha
jno
sbb
inc
icebp
orl
inc
jp
adc
cwtl
xchg
pop
xchg
sbb
and
sbb
xchg
sbb
add
pop
fimull
and
sbb
dec
cmp
dec
push
daa
inc
xor
push
and
gs
fs
hlt
mov
pop
subl
ss
mov
insl
or
xor
push
and
xor
outsb
mov
add
stc
add
mov
repz
lret
int3
lret
cmp
push
jb
add
enter
push
dec
rclb
ljmp
mov
imul
jmp
mov
cwtl
cmp
jmp
sbb
push
and
cmp
flds
nop
or
icebp
push
sub
call
xchg
pop
add
shrb
mov
xor
add
pop
pusha
lar
int3
or
loopne
inc
ss
dec
or
sub
or
push
and
sub
fucomip
adc
insb
pusha
int3
sbb
nop
or
dec
dec
and
or
cs
jo
mov
in
in
jmp
out
bound
jbe
insl
in
cs
fsts
inc
ss
dec
aaa
adc
push
sub
mov
add
jecxz
pop
cmpsl
test
ds
imul
add
loopne
jmp
dec
sbb
add
or
call
or
pop
mov
mov
addb
call
mov
xor
addb
je
insb
loopne
mov
pop
popl
inc
cmp
push
addr16
addl
xor
or
jmp
and
or
imul
pusha
adc
imul
ja
or
pushf
or
into
or
mov
and
inc
and
or
enter
adc
ljmp
jge
sbb
sub
bound
nop
or
push
or
push
and
mov
push
add
cmpsl
loope
push
or
push
mov
push
out
push
mov
xlat
and
adc
mov
jmp
dec
inc
and
adc
push
push
movsb
and
sbb
add
rolb
insb
pop
fmull
add
sbb
nop
or
loopne
adc
push
outsb
mov
popl
pop
mov
adc
jo
sbb
nop
popl
mov
nop
or
insb
loopne
mov
xchg
push
loopne
enter
sub
push
subl
lcall
or
or
cmpl
dec
xorl
add
nop
or
rcrl
or
nop
or
mov
je
rolb
add
insb
or
inc
push
cwtl
and
flds
cmp
xor
cmp
aaa
adc
mov
nop
outsb
sbb
int
jb
pop
xchg
jp
and
arpl
mov
int3
repz
loopne
cwtl
and
xor
or
fisubrl
add
push
dec
push
or
adc
popl
mov
fstl
les
andl
jo
sbbl
outsb
orb
sbb
adc
xlat
fiadds
ljmp
adc
add
or
ss
push
aaa
push
sub
or
enter
add
add
mov
js
cld
or
adc
push
inc
or
lods
xor
add
ss
lock
jmp
jo
sti
insb
adc
xchg
add
enter
loopne
movsb
push
inc
or
add
decb
or
popa
mov
pop
subl
or
add
call
subl
addb
sbb
rorl
add
insb
inc
subl
add
push
subl
sub
cmp
adc
xchg
subl
add
add
popa
xor
sbbb
push
sbb
add
popl
mov
rcll
fld
dec
add
out
add
adc
sbb
enter
aaa
inc
and
push
cmp
inc
ss
mov
call
jmp
add
push
mov
call
dec
dec
lahf
or
add
mov
jo
adc
push
in
sbb
cmp
or
ds
popl
flds
sbb
popa
add
or
and
nop
das
ss
sub
cmp
push
enter
cmp
stos
shrb
test
inc
subl
fwait
loope
add
push
sti
xor
add
fidivl
jmp
mov
out
adc
dec
orl
imul
ja
enter
push
in
add
mov
pop
adc
push
adc
lahf
jmp
jo
and
popl
fs
enter
sbb
or
rorb
sbb
xor
add
andb
jo
pop
push
test
iret
repz
adc
lods
and
sub
int
repnz
sbb
enter
cmp
cmp
cmp
pop
sahf
out
fstpl
jae
push
lahf
test
jns
aad
ljmp
adc
pop
xchg
mov
es
fbld
outsb
xchg
roll
push
push
ret
movsb
jge
inc
fimull
out
push
add
push
sbb
inc
sub
cmp
nop
or
sbb
inc
and
sbb
or
test
nop
popf
lods
adc
adc
pop
mov
push
cwtl
add
insb
inc
js
dec
and
aaa
xchg
pop
mov
mov
add
cmp
cmp
add
and
dec
and
add
enter
lcall
add
sbb
data16
inc
ss
lods
xchg
fld
dec
clc
enter
or
or
jo
mov
pop
xor
jbe
insb
addb
sahf
arpl
push
mov
xor
shrb
inc
subl
sbb
or
dec
cmp
nop
xchg
add
mov
xor
test
mov
sbb
faddl
movsb
bound
scas
and
or
pusha
xchg
xor
and
fld
imul
mov
js
pusha
mov
outsl
xor
inc
flds
push
and
adc
sbb
jnp
insb
rorb
fld
repz
repz
jle
pop
test
loopne
add
orl
add
adcb
insb
pusha
imul
pop
xor
push
add
aas
inc
and
subl
add
and
adc
or
sbbl
stos
xor
sbb
orb
pop
inc
and
add
movsl
xchg
dec
popa
cmpsb
insb
rolb
add
or
sbb
ljmp
mov
rorb
add
aas
fdivrl
adc
push
push
sbb
pcmpgtb
mull
call
sbb
pop
lods
gs
xor
ret
insb
popl
inc
add
dec
shl
lds
or
stos
stos
inc
adc
mov
sbb
loopne
mov
lahf
xchg
mov
stc
pslld
fs
or
call
inc
mov
mov
pop
xor
ss
cmp
pop
pop
inc
push
jo
push
xor
cmp
mov
inc
ss
mov
popl
in
js
mov
pop
ret
mov
mov
dec
ret
sub
leave
loop
lahf
loop
cli
xchg
adc
push
out
mov
cmp
fwait
or
cltd
dec
nop
or
insl
fld
pusha
and
addl
faddl
mov
sbb
nop
and
xor
subl
add
imul
pop
cmpsl
or
push
out
or
adc
push
and
and
pop
nop
or
add
sub
push
into
adc
add
jo,pn
xor
xor
push
adc
mov
and
arpl
add
adc
add
orb
mov
mov
adc
inc
cmp
nop
or
loopne
sub
lods
pusha
mov
adc
mov
lcall
data16
roll
add
add
pushf
imul
pop
call
loopne
stos
lcall
pop
push
adc
sbb
sbb
and
enter
lods
inc
ss
xchg
jo
ja
sbb
mov
and
pop
inc
test
subl
add
sbb
push
orl
add
das
add
cmp
add
cmp
add
loop
add
rolb
mov
or
xchg
or
movb
xchg
sbb
cmp
xchg
xchg
adc
push
xchg
mov
fld
xchg
lods
nop
jmp
flds
shl
les
scas
push
movsb
insb
loopne
inc
jge
fisubs
add
push
mov
jo
xor
adc
dec
ss
mov
testl
jo
jge
cmp
jo
cmpb
add
and
sbb
lods
push
in
inc
and
push
nop
and
adc
jge
nop
or
rolb
add
add
outsb
popa
and
add
jge
js
and
call
enter
subl
or
mov
add
xchg
dec
jge
mov
mov
flds
jge
push
mov
movsb
or
pop
sbbl
inc
loopne
add
jge
outsl
mov
jge
cmp
add
inc
add
cmpl
push
push
push
mov
rorb
mov
add
jge
cmp
andl
jge
xor
test
fld
or
sbb
and
jge
push
inc
and
jge
inc
and
mov
mov
ja
ss
or
dec
les
jge
mov
scas
pop
xchg
mov
adc
sar
push
fdivs
push
push
add
mov
shll
mov
adc
add
adc
and
adc
out
push
and
fdivs
adc
lock
out
dec
cs
or
or
ss
or
xorl
push
xchg
xchg
mov
push
xchg
mov
cmpsl
lods
push
ss
push
mov
arpl
loope
ss
xchg
ret
or
xor
xorl
inc
mov
insb
rolb
addr16
and
adc
in
push
or
inc
rclb
push
addr16
jle
mov
dec
push
enter
mov
lret
iret
jo
inc
add
addb
mov
mov
add
and
mov
addr16
cmp
std
jb
push
or
xor
sbb
lock
sbb
mov
jo
or
outsb
mov
xor
ret
addr16
sbb
addr16
ss
and
push
xor
fadds
je
pushf
inc
inc
imul
movsl
mov
adc
push
aam
nop
rclb
mov
or
and
test
adc
mov
orb
insb
loopne
sbb
loopne
stos
xchg
popa
add
sbb
mov
or
addr16
shlb
add
mov
popa
add
sbbb
xchg
xchg
mov
test
add
int
xor
inc
addr16
rcrb
addr16
cmpl
pop
cmp
and
fstpt
loopne
push
aam
andl
addr16
push
adc
mov
ss
xor
mov
and
push
add
jb
rclb
addr16
push
add
xor
clc
addb
data16
sub
xor
adcb
insb
inc
test
sbb
xor
fldl
addr16
xchg
push
pop
add
sub
push
das
add
insb
add
in
js
add
push
nop
adc
add
popa
add
and
loopne
shlb
push
imul
jns
mull
xor
test
jo
pop
ret
push
outsb
push
push
ss
push
jns
mov
jns
addb
les
push
pop
ret
push
fdivrl
js
xchg
cmpb
xchg
insb
loopne
jl
jns
add
push
aam
pop
adc
add
fwait
inc
inc
icebp
or
pop
lcall
jns
inc
sub
js
sbb
movb
call
sti
mov
inc
or
les
orb
jns
lahf
xorb
dec
enter
pop
out
jp
xor
int
mov
push
push
inc
or
call
sahf
fs
test
add
add
popa
insb
mov
sbb
sub
test
mov
xchg
lods
stos
movsb
sub
enter
add
aaa
mov
scas
std
add
or
ret
push
cltd
loopne
or
shl
rclb
shlb
cltd
insl
or
call
mov
imul
xchg
push
pop
je
push
cltd
lock
mov
fwait
lds
ja
ret
cltd
arpl
push
out
mov
add
ret
cltd
lods
xchg
sbb
mov
cltd
jmp
int
or
sbb
cltd
mov
hlt
cltd
aaa
insb
loopne
mov
xor
pop
push
adc
stos
lods
mov
shll
repnz
cltd
adc
int
ficoms
mov
cltd
fidivl
into
push
inc
aad
sbb
xchg
shl
cmp
mov
dec
mov
fadds
shlb
add
movb
cltd
adc
push
push
decl
call
add
jle
loopne
andb
fcompl
outsb
fcomps
or
dec
pop
push
jmp
mov
andl
pop
add
cltd
cmpsl
push
aad
sbb
lock
mov
and
rolb
mov
add
into
cltd
mov
cltd
jp
lock
or
push
pop
pop
gs
adc
xchg
cld
sar
repnz
loopne
pop
enter
aam
xchg
rclb
inc
movsb
fiaddl
sbb
test
mov
xlat
mov
xorb
mov
mov
cmp
dec
adc
sbb
lock
shl
add
push
cld
add
fmuls
test
adc
xchg
add
mov
loopne
or
fs
clc
in
sub
int3
jbe
xchg
sbb
fcoml
daa
xor
jae
ljmp
mov
dec
repnz
or
or
sbb
clc
roll
lods
out
mov
fs
call
sarb
adc
mov
mov
add
cltd
aaa
insb
loopne
jns
cltd
add
add
popa
cltd
jno
push
fidivrs
ja
xchg
adc
or
fs
or
pop
sbbl
ret
ja
or
add
inc
push
push
aad
arpl
and
mov
daa
jbe
pop
push
push
aaa
pop
pop
mov
push
outsl
push
pop
sahf
scas
insl
outsb
jb
aad
aaa
pop
fadds
outsb
sbb
pop
sbb
ret
leave
in
jb
adc
dec
dec
lret
insl
into
push
sbb
leave
scas
or
imul
mov
fsubrs
mull
sbb
inc
mov
imul
push
or
jo
leave
mov
aaa
pop
inc
leave
xchg
xchg
mov
sub
jp
xchg
push
xlat
push
fadds
scas
sbb
pusha
mov
addr16
xor
leave
push
in
outsl
add
call
add
ret
leave
mov
add
leave
les
mov
mov
aaa
sbb
leave
jo
cvttps2pi
int3
sbb
sbb
leave
fisttpl
aas
mov
and
ret
push
out
adc
call
fcoml
leave
addr16
mov
shrl
leave
sti
pop
inc
mov
fstl
and
xor
adc
ret
leave
push
sbb
lcall
and
add
inc
ss
stos
and
inc
xorb
subl
inc
xchg
cmp
fmuls
push
cmp
ljmp
nop
or
xchg
sti
mov
ret
aam
sti
fimull
sti
rolb
leave
shlb
xor
lods
xsave
mov
mov
push
cwtl
cmp
cmp
and
add
mov
les
cmpl
ficompl
mov
adc
les
or
fnsave
test
and
push
faddl
outsl
sub
shrb
popa
lea
rclb
inc
and
das
xchg
push
add
insb
shlb
push
inc
cli
ret
push
dec
push
mov
jbe
push
push
sbb
jo
or
xor
roll
add
and
fdivl
or
aaa
insb
pusha
jo
lcall
lds
rcrb
lea
addb
adc
std
mov
shrb
lea
add
ss
out
push
sbb
lea
rorb
lcall
test
dec
cmp
or
ror
sbb
outsb
fmuls
out
or
popa
add
lea
lea
lea
inc
fbstp
insb
shl
popa
lea
add
xor
adc
fcoms
jmp
or
fldenv
mov
call
repnz
sbb
pushf
shlb
sbb
call
xchg
bound
sbb
sbbl
test
mov
mov
push
inc
inc
aad
mov
sbbl
mov
shrl
sub
cld
mov
ret
popa
add
jge
xor
push
mov
add
mov
stos
popa
mov
pushaw
call
xor
mov
sbb
loopne
mov
popf
jo
aam
subl
push
mov
mov
xor
mov
dec
shr
or
insb
loopne
add
and
xor
in
in
adc
nop
int
nop
dec
push
inc
fs
adc
mov
xor
inc
scas
adcb
push
mov
push
fisttps
scas
add
ret
popa
add
inc
rorb
ljmp
mov
xor
stos
popa
add
cmp
sbb
push
mov
mov
lods
xchg
or
push
add
mov
jl
add
xor
adc
sbbb
insb
push
mov
xor
dec
dec
mov
jne
mov
sbb
jo
cmp
scas
mov
sbb
mov
inc
dec
loope
xlat
lds
lds
pop
mov
mov
shlb
dec
push
mov
adc
jmpw
sub
movmskps
push
inc
xor
fwait
xchg
xchg
xchg
and
push
ffreep
and
stos
inc
adc
mov
aam
mov
test
out
in
or
enter
mulb
cmp
repnz
fstl
push
mov
pop
sbb
popa
mov
xor
xor
in
in
cmc
add
and
mov
shl
mov
insb
mov
xchg
pop
pushf
xchg
jno
cmc
inc
cs
iret
jle
mov
and
bnd
adcb
jl
in
and
inc
xchg
and
push
repnz
in
sbb
mov
cmp
jo
pop
cmp
scas
lea
jecxz
cmp
mov
sbb
lcall
mov
cmp
movsb
nop
dec
pop
lcall
mov
cld
lahf
fs
inc
dec
test
sbbl
cmpsb
mov
out
or
mov
rcll
mov
or
xchg
xchg
and
sbb
pop
sub
inc
sbb
je
cli
js
xchg
popa
add
sbb
sbb
in
in
add
push
mov
mov
push
mov
push
ret
push
mov
add
out
pop
push
mov
cmp
mov
lods
cmp
mov
pop
or
sbb
jo
and
dec
adc
test
add
mov
cld
rcrb
mov
dec
mov
dec
mov
bound
aad
mov
aad
mov
ret
push
mov
push
push
mov
repnz
lods
fimuls
adc
mov
inc
cmpsb
mov
cmpsl
je
add
or
dec
mov
mov
push
xor
sbb
pop
pop
adc
inc
or
ret
push
scas
pop
adc
xchg
pop
mov
xchg
add
xorb
xchg
mov
or
in
mov
cs
xchg
and
mov
cmpsb
adc
in
xchg
mov
xchg
int
call
inc
mov
fwait
mov
sub
xchg
pusha
push
ret
push
mov
lods
push
pop
lea
loopne
lcall
mov
jbe
ss
dec
add
sbb
and
hlt
push
inc
aam
pop
inc
and
fcoms
pushf
add
push
mov
ret
push
sahf
test
aaa
mov
add
mov
aad
dec
mov
popa
add
lea
xchg
shlb
movsb
push
mov
add
pop
mov
xchg
push
ret
push
mov
popa
add
shlb
and
cltd
mov
or
ss
push
out
andl
or
je
dec
or
mov
xor
aad
add
lahf
mov
aad
push
mov
add
xchg
bound
inc
dec
in
mov
or
push
xchg
and
lock
lods
sbb
sub
sub
push
or
push
or
or
mov
aaa
dec
mov
xchg
sub
cmpb
push
out
and
push
sub
fcmovne
sbb
cmpl
insl
push
xor
aam
sub
sub
mov
mov
aad
sub
mov
xchg
stos
popa
add
ss
lods
dec
lea
xchg
jo
sub
push
dec
sarb
sub
push
xchg
out
or
cmp
mov
push
push
sarl
sti
les
aam
imul
sub
lods
ret
bound
push
mov
sub
scas
push
call
push
or
loopne
sub
ss
add
mov
daa
sbb
shrb
or
aam
add
subl
mov
cmpsl
call
sbb
dec
push
sarb
sub
xor
sub
or
pop
ret
push
sub
and
loopne
hlt
cmp
ss
sub
adc
mov
sub
sub
mov
sub
adcb
or
filds
inc
test
or
push
mov
cmp
sub
or
xchg
add
mov
mov
xor
sub
dec
add
rcrb
test
jo
cmpsb
push
sub
enter
or
mov
clc
jmp
mov
cmpsl
cld
xor
mov
add
jmp
xchg
push
mov
lea
cltd
inc
mov
dec
ja
push
leave
and
or
popa
add
add
xchg
loop
or
scas
pusha
and
sbbb
xor
push
pop
jl
test
repnz
lahf
inc
or
js
shlb
je
dec
adc
cs
ret
xor
jns
xchg
daa
test
ss
and
sbb
jl
mov
pusha
das
xchg
testb
movb
xor
push
xor
imul
pop
or
dec
ljmp
dec
sbb
or
push
mov
rolb
mov
xor
mov
xor
in
cmp
enter
sbb
loopne
xor
add
cld
negb
aaa
or
popa
add
mov
adc
jmp
or
faddp
cmp
xor
and
das
loopne
fcoml
xor
sub
sbb
in
mov
stos
push
xor
les
mov
xor
popf
fisubrl
loopne
loop
scas
ss
xor
sbb
insb
xor
push
xor
divl
in
mov
xor
sub
or
xor
and
xor
popa
add
mov
xor
or
xor
jns
push
sbb
xor
or
xor
jl
inc
call
mov
insb
xor
popf
lods
push
rorl
xor
ss
cmpsb
push
ret
push
out
xorb
adc
xlat
lret
imul
fdivs
add
sbb
jbe
push
sbb
mov
fdivs
push
xor
call
inc
xor
mov
adc
xor
dec
jo
add
pop
ret
push
xchg
xor
mov
fnstenv
out
or
push
dec
pop
std
mov
fadd
sub
fadd
pop
and
icebp
add
add
sbb
mov
mov
call
pop
sbb
out
mov
lods
lcall
or
mov
xor
jo
fadd
sbb
loopne
bound
add
add
insb
xor
add
xor
add
aam
and
ret
in
in
jb
fadd
pop
leave
scas
jb
shlb
nop
and
xor
imul
loop
push
or
xor
sarb
mov
sbbl
add
adc
inc
push
cmp
pop
mov
mov
fcmovnu
sub
and
sub
adc
std
pop
sbb
or
std
xchg
xor
jnp
aaa
pop
mov
icebp
imul
mov
jno
mov
loope
mov
nop
out
out
jns
fxtract
out
imul
in
out
sbb
outsl
and
in
fstl
jl
push
cmp
xor
xchg
cwtl
adc
adc
cmp
sub
cltd
fmul
and
lret
addr16
xchg
fsubrs
popa
cmp
xchg
jbe
out
pop
subb
xchg
dec
gs
cltd
mov
arpl
push
xchg
add
push
xchg
dec
mov
or
adc
fildll
pusha
popf
mov
add
rol
sbb
cmp
mov
sarb
mov
lret
in
sbb
lds
mov
js
add
sub
outsb
jecxz
rcrl
mov
sahf
sbb
push
inc
dec
mov
or
outsl
sub
push
dec
mov
jp
movsb
andl
push
ljmp
adcl
mov
addr16
push
rorb
repz
sbb
dec
mov
in
jo
subl
cmp
mov
add
out
jns
adc
sarb
aaa
rorl
jg
aaa
aas
ljmp
add
cmpb
mov
xchg
jno
jbe
data16
insl
mov
dec
mull
js
xchg
xchg
outsl
sbb
push
pop
xchg
jp
cmp
mov
insb
jge
test
xchg
and
xchg
jecxz
test
insl
daa
sub
mov
xchg
push
cmp
xchg
in
xchg
and
mov
ficoms
dec
jmp
lcall
add
hlt
or
movsb
test
int
cmp
mov
cli
jo
lret
adc
inc
icebp
js
jb
fcomip
das
cltd
pop
rorb
into
cwtl
addr16
sbb
inc
shl
lret
push
mov
fnstsw
adc
in
das
push
pop
lock
sbb
push
add
push
adc
add
mov
sbbb
xchg
fadds
sub
sub
shlb
add
or
dec
and
add
inc
mov
fadds
shlb
mov
ret
or
jno
std
add
inc
mov
shlb
mov
jmp
pusha
add
test
add
mov
loopne
clc
cli
lods
add
mov
jne
adc
nop
jmp
add
push
push
mov
scas
mov
jnp
lahf
xlat
mov
loopne
inc
xchg
mov
adc
push
ds
add
mov
dec
and
pushw
aad
pusha
add
jo
lea
outsl
or
push
mov
aam
pop
daa
outsl
jae
mov
ret
xor
pop
std
imul
xor
lods
pop
daa
push
push
add
les
adc
adc
mov
jnp
add
test
pusha
jbe
cmp
xchg
mov
cwtl
xor
ljmp
sbb
or
shrb
shr
cmpb
call
aam
clc
and
push
out
adc
add
sarl
push
sub
add
jmp
pop
fcoms
inc
add
sbb
mov
jnp
add
sbb
push
mov
ljmp
push
roll
scas
jnp
sbb
and
jnp
insb
loopne
sub
cs
aam
adc
orb
pusha
xor
fmuls
jnp
std
jns
mov
imul
jmp
jnp
test
add
jnp
add
cmpsb
nop
push
fadd
or
cmp
jnp
in
dec
or
sbb
imul
insb
loopne
xorb
jne
testb
loopne
fdiv
push
add
cmp
loope
xchg
orb
insb
std
gs
sub
jbe
mov
fadds
test
or
roll
xchg
stos
pusha
add
xlat
std
roll
mov
std
and
pusha
add
sub
repz
sbb
adc
sbb
pushf
push
adc
call
std
repnz
mov
rol
std
jno
jl
push
lock
rcr
loop
xor
fisubrs
scas
and
adcl
push
inc
lods
aas
addl
adc
cmpsb
adc
push
inc
cwtl
mov
aaa
jne
push
test
push
mov
shrb
inc
add
fcoms
fsubl
js
xchg
jne
push
push
push
sbbl
add
out
sbb
xchg
adc
xorb
push
arpl
andl
cmp
lahf
and
or
in
stc
rclb
dec
xchg
or
mov
nop
or
jo
jbe
add
scas
xchg
dec
test
add
xchg
xor
je
add
jmp
fs
or
inc
sub
loop
loopne
xchg
pop
xchg
pusha
adc
pusha
add
xor
ret
pop
mov
xchg
or
dec
dec
xchg
add
insb
shrb
shlb
aaa
pop
xchg
pop
loop
xor
mov
jmp
or
arpl
mov
scas
or
orb
push
xchg
pusha
add
add
mov
xchg
cmpsb
add
jl
data16
push
mov
nop
inc
or
lods
roll
call
push
sarb
fildll
stos
aam
shlb
stos
pop
mov
cmp
xor
push
xchg
shr
add
inc
cld
push
mov
les
stos
or
insl
addb
mov
pushf
inc
sub
mov
scas
pop
add
shrb
jmp
dec
ja
jl
and
jp
loopne,pn
jle
add
mov
pop
insb
insl
orb
fadds
sbbb
mov
mov
and
orb
push
mov
daa
cmpsl
nop
roll
sbb
dec
add
cmp
lea
cmpl
popa
enter
add
popa
lret
sahf
adc
mov
aaa
je
push
popa
mov
add
rcll
movsb
and
movl
push
sub
loopne
jl
ret
add
sti
pop
outsb
enter
push
sbb
adc
stc
lods
rcrl
fmul
pop
aam
in
mov
and
das
mov
das
cmpl
pop
pop
out
test
outsl
xorb
jp
out
and
push
xchg
movsb
cltd
pop
xchg
out
push
jnp
inc
xor
adc
aad
repz
repz
lock
jnp
push
sti
stos
lret
ja
inc
jo
inc
call
inc
dec
and
mov
dec
adc
jp
dec
adc
imul
xor
push
push
out
push
mov
sub
shrl
dec
inc
sub
pusha
das
sbb
das
xchg
inc
add
orb
jmp
das
mov
add
pusha
add
xorl
mov
das
inc
or
adc
sbb
insb
loopne
fsts
pusha
imul
push
xor
das
sarb
jne
andl
sub
addb
das
inc
lods
add
loope
adc
in
in
cmpl
sar
xor
push
mov
aaa
shrb
and
leave
cvtps2pd
or
mov
sub
ja
adc
js
push
push
lcall
xlat
mov
std
les
insb
rorb
dec
mov
push
pushf
sbb
mov
lcall
orb
mov
iret
cltd
pusha
mov
rcrl
pusha
add
pushl
ljmp
arpl
mov
and
pop
mov
fcomp
adc
insb
ja
insb
stos
ffree
sub
jle
loopne
or
ret
addl
sbb
sbbl
je
jmp
dec
xchg
inc
adc
out
xor
lret
clc
or
imul
jae
push
rclb
ret
xchg
out
in
out
out
insl
inc
adc
add
aam
mov
pop
dec
and
push
cwtl
inc
movsl
mov
inc
and
js
or
insl
test
fadds
or
fstpl
cmp
insb
insl
add
sbb
xchg
adc
popa
insl
arpl
inc
dec
add
test
add
and
push
aam
testb
sub
adc
mov
push
mov
mov
sbb
push
jo
pop
stos
sbb
inc
stos
push
inc
add
inc
inc
mov
mov
jnp
inc
rol
cli
out
int
mov
and
push
movsb
and
rorl
pusha
xchg
test
rorb
je,pt
xchg
inc
cmovbe
out
xchg
inc
rolb
out
loop
cs
xchg
mov
call
adc
or
aaa
sub
cltd
js
sbb
movsb
adc
cmp
inc
stos
cmp
stos
adc
insl
call
or
push
shrb
in
inc
or
cltd
pusha
mov
push
cld
pop
xor
dec
sbb
les
jmp
push
aad
enter
scas
dec
sahf
xchg
add
add
inc
cmp
outsl
dec
sub
clc
es
dec
adc
mov
aas
in
fcom
jmp
push
enter
pop
push
cs
stos
sbb
pop
ds
or
out
in
inc
mov
pop
ljmp
test
fstpt
lcall
mov
mov
mov
jecxz
pusha
sub
dec
and
push
xchg
inc
mov
jg
or
push
mov
mov
jb
dec
adc
cmpsl
inc
and
clc
daa
cs
shlb
pop
movsl
or
stos
lods
jmp
inc
add
xchg
sarb
lret
pop
add
cltd
daa
adc
sub
push
jmp
sub
adc
fadds
daa
test
adc
jns
pop
stos
repz
inc
inc
pusha
enter
xor
pop
mov
cld
mov
inc
movsl
cs
push
lahf
dec
nop
hlt
je
iret
mov
ficomps
lods
pop
pusha
adc
mov
dec
mov
es
es
mov
clc
cltd
mov
out
xchg
pop
mov
cwtl
das
and
jle
in
mov
ds
pop
jmp
sbb
pop
push
cmp
imul
add
jg
lret
jmp
jmp
xchg
in
mov
pop
sub
push
push
test
popa
leave
mov
or
lret
push
push
mov
sbb
insb
push
in
pop
aad
sub
pop
cmp
mov
ret
push
adcl
in
sbb
test
xor
je
push
aas
adcb
rorb
subb
cmp
out
push
aas
sbb
imul
pop
lret
ds
add
ds
scas
cmp
sub
pop
mov
int3
mov
ret
ds
pusha
push
pop
pop
and
repnz
ffreep
cmovs
shrb
xchg
movsb
mov
mov
scas
lds
add
sbb
jmp
subl
dec
pop
cwtl
repnz
cli
pop
loopne
fistpll
and
cmp
jg
push
mov
cmpsb
push
outsb
in
sub
jg
mov
and
fidivs
cld
cs
add
outsb
push
aas
fwait
dec
ds
sbb
xchg
cmp
mov
popf
adc
inc
imul
sub
xchg
add
pusha
notb
pusha
push
push
aas
or
lods
dec
push
cli
inc
nop
shll
xchg
pop
das
xor
shll
xchg
jge
jnp
add
jmp
dec
in
call
jnp
xchg
add
sbb
test
cwtl
aas
lock
and
pop
add
push
mov
xchg
inc
sub
xor
dec
push
nop
lret
pop
jo
movsb
xor
test
push
test
and
xchg
pop
or
imul
dec
xchg
frstor
xchg
fmul
clc
outsl
in
adc
xchg
inc
fimuls
sbb
and
pop
gs
lret
dec
mov
movsb
xor
pusha
cmpsb
je
scas
or
sbb
test
cld
dec
add
into
lahf
cld
jl
mov
nop
sbb
mov
and
mov
mov
mov
aas
into
jle
push
cmp
repz
adc
orl
js
test
mov
aas
in
lea
push
mov
jno
dec
push
push
fdivrl
lock
mov
cwtl
aas
xor
cli
sbb
adc
pop
dec
dec
gs
lret
cmp
sbb
cwtl
xor
add
pop
or
aas
fidivrs
sbb
xchg
fsubrl
nop
lret
aas
mov
xor
cmp
push
sbb
je
out
push
push
pushf
push
jl
dec
sub
in
scas
popf
in
and
outsb
sbb
sbb
mov
leave
je
mov
sahf
cmp
les
xchg
lret
mov
mov
jl
sub
out
mov
xchg
adcl
sbb
rclb
adc
fdivs
out
xor
iret
adc
es
mov
test
push
mov
mov
xor
push
sub
jmp
jmp
rcrb
insl
sub
jbe
adc
sahf
mov
out
lahf
ljmp
psubusb
rorl
cmp
aas
call
in
das
outsb
push
jg
aas
mov
dec
test
sbb
call
insb
xor
sbb
movsb
rcrb
out
dec
sbb
inc
into
dec
sub
add
dec
push
sarl
or
aad
mov
call
mov
push
js
mov
mov
xor
mov
scas
pop
mov
test
xchg
push
or
call
out
loopne
sahf
outsb
dec
dec
aam
dec
pushf
outsb
mov
cmp
sahf
aas
mov
push
fldl
and
sbb
mov
inc
dec
mov
mov
cmpsb
imul
clc
and
mov
sbb
nop
mov
popf
ja
inc
movsb
popf
punpckhwd
or
shrb
arpl
jg
in
movsl
or
adc
in
mov
test
xchg
les
outsl
enter
call
nop
aad
dec
add
cmp
fldt
or
fs
xor
push
sub
sbb
shll
push
stos
inc
pop
leave
out
jle
pop
dec
shll
ds
ds
std
push
add
leave
and
or
lcall
dec
mov
inc
or
mov
inc
insb
shlb
push
movsb
xor
bound
stos
jl
hlt
std
mov
inc
cld
adc
jecxz
pop
clc
sub
xlat
test
repnz
bound
ds
aas
enter
pop
cmp
xchg
fwait
mov
or
adc
enter
adc
dec
pop
fucomp
popf
iret
dec
inc
fmulp
out
lock
xor
inc
lods
enter
jle
gs
rolb
push
jns
or
adc
cmp
xor
dec
lahf
fldenv
int
mov
out
leave
xchg
stos
sbb
adcl
inc
fimuls
inc
inc
or
cmp
and
dec
or
inc
fcoms
ss
lret
test
dec
mov
inc
cmp
shrl
mov
push
fnstcw
aas
push
sahf
and
mov
hlt
cmp
pop
je
daa
test
addr16
sub
fwait
fs
cmp
inc
adc
test
sub
aaa
jmp
or
enter
decb
sub
and
jae
jl
test
outsb
add
add
xor
fildll
or
ja
pop
aaa
and
das
or
dec
jo
fisttps
incb
shlb
aas
jnp
loop,pt
ret
dec
dec
or
sarb
call
lds
call
sti
pushl
pop
push
pushf
in
inc
in
ucomiss
mov
adc
fldenv
dec
fsubr
sbb
das
test
pop
int
cmp
fsubr
sbb
or
push
test
push
scas
mov
rcrb
popf
out
sbb
or
fsubl
lods
rcrb
and
xchg
je
push
sub
aas
fsubs
or
cmp
test
pop
cld
adc
jno
outsb
push
xchg
loop
mov
movsl
es
inc
pop
pop
aas
push
mov
scas
aam
cmp
mov
div
in
jge
cld
push
clc
arpl
xor
jle
mov
jbe
out
shll
cs
aas
mov
push
cwtl
add
dec
xor
adcb
pop
xchg
fnsetpm(287
mov
adc
aad
pop
add
cli
in
out
in
dec
movsl
test
pop
incb
je
call
dec
test
xor
movsb
data16
fwait
mov
scas
jb
dec
sarb
or
loop
fsubr
inc
cmpsb
push
or
mov
sbb
ds
jb
push
sub
cmp
bound
xor
nop
dec
mov
or
jle
pop
push
xchg
out
nopl
fildll
out
or
call
jo,pt
xor
stc
xchg
or
je
sahf
movsl
cmp
cmpsb
jae
rcll
lret
mov
dec
gs
inc
or
outsb
mov
xchg
arpl
inc
xchg
cld
sub
jne
out
cld
jge
adc
cmp
xchg
dec
sub
and
std
push
dec
in
mov
mov
test
push
adc
outsb
sub
push
push
mov
mov
sbbb
sbb
dec
and
vmwrite
inc
sbb
xchg
and
mov
push
repnz
mov
and
jns
insl
mov
nop
xchg
adc
enter
lock
in
vmwrite
push
mov
xchg
mov
cmp
sti
inc
jg
mov
repnz
cwtl
jns
mov
sbb
add
dec
lret
mov
les
add
lods
sbb
loopne
ret
cmp
add
js
movsb
sbb
push
jns
push
fldcw
lret
push
mov
es
loopne
adcl
mov
xchg
xchg
inc
sub
sar
mov
or
ljmp
fldl
pop
add
in
mov
push
xchg
jae
sub
jmp
ror
repz
sub
test
xor
sahf
push
in
inc
pop
test
in
sub
dec
enter
pop
ret
movsl
sarb
lock
cmpsb
les
jae
inc
ljmp
adc
sbb
incb
cmp
sub
sbb
mov
jmp
andb
jg
pop
cld
ds
sub
dec
jle
rcrb
movsl
jb
mov
insl
pop
push
dec
mov
push
subb
pop
dec
movsl
xor
jo
jmp
adcb
mov
movsl
rcrb
push
stc
adc
movsl
repnz
sub
cli
adc
push
aam
pop
sahf
xchg
dec
loopne
shlb
xchg
xchg
outsb
in
enter
lods
or
mov
inc
mov
cmp
jmp
sub
sbbl
adcb
push
sub
and
mov
pop
or
sub
cltd
iret
or
les
icebp
mov
add
scas
or
or
out
or
cwtl
or
movsl
mov
ja
insb
push
sbb
addl
lods
call
xor
mov
fsubr
imul
sub
pop
xchg
addr16
jg
ja
stc
insb
ds
out
cmp
imul
dec
pusha
xlat
hlt
pop
popa
lahf
fstpt
into
nop
cmp
cmp
nop
push
imul
ror
and
shlb
mov
jnp
adc
fnstsw
or
xchg
cmp
or
mov
pop
insl
les
push
xor
inc
dec
cmp
test
sbb
dec
pushf
daa
sub
add
inc
fistps
mov
mov
lock
pop
jns
jo
cmp
cmp
xchg
inc
mov
cmp
jmp
les
enter
repnz
sub
pusha
or
movsl
mov
jg
aas
cmp
imul
push
loopne
cmp
orps
sub
push
outsb
pop
sbb
mov
push
and
cld
lahf
and
dec
dec
decl
das
sbb
jmp
mov
addps
clc
adc
adcb
insl
mov
sbb
inc
sub
jae
mov
and
sbb
sbbl
add
mov
push
dec
test
scas
sbb
cmp
je
movsb
push
sbb
xchg
test
or
fwait
inc
adc
fdivl
xor
shr
sbb
leave
inc
jle
ds
inc
stos
mov
xchg
dec
ja
outsl
inc
movsl
xchg
push
ficoml
mov
js
or
outsl
fcompl
outsb
cmp
enter
dec
dec
cmp
mov
call
mov
or
push
mov
jne
call
push
lods
or
adc
mov
rcrb
aas
subb
push
mov
xor
cmp
mov
xchg
push
mov
clc
add
add
fadds
stc
stc
dec
pop
leave
mov
nop
lock
push
push
pop
out
cmp
icebp
lods
push
push
nop
into
sub
scas
cmp
scas
xor
sbb
cmp
pop
cmp
add
jne
mov
push
mov
mov
cmp
nop
dec
aaa
jg
mov
jns
dec
orb
push
adc
mov
aas
pusha
cmp
aaa
cmp
aas
cmp
pop
pop
xchg
sub
xorl
pop
mov
repnz
jmp
push
jmp
dec
loopne
cld
push
push
fcomip
cs
and
cmp
loopne
push
mov
or
fcompl
adc
mov
pop
js
add
test
imul
mov
aas
enter
test
cmp
pusha
pop
mov
aas
mov
dec
sbb
iret
sbb
pop
pop
sub
aas
push
ds
fiaddl
push
pop
push
push
das
or
mov
ja
nop
jmp
stos
sahf
adc
sti
pop
out
test
stc
pop
jne
pop
imul
xor
pop
fadds
std
push
cmp
scas
xor
cmp
scas
aas
mov
ds
adc
enter
popw
sub
cmp
fs
push
scas
repnz
xchg
mov
popf
scas
jns
dec
pop
scas
mov
in
das
mov
scas
pop
repnz
xchg
cmp
das
jns
dec
adc
xchg
mov
push
repnz
lods
mov
sbb
jmp
or
cld
idiv
adc
cmp
or
jl
divl
sti
jbe
jl
and
lahf
pop
std
pusha
aad
xchg
dec
jo
lahf
jmp
mov
mov
xor
aas
jo
imul
jecxz
jmp
das
push
push
mov
adc
popa
and
int3
lds
adc
leave
sti
test
jo
lahf
movsl
cmp
fnstsw
xchg
inc
push
imul
add
jg
outsl
inc
sbb
std
sbb
sbb
stc
inc
mov
rcll
call
inc
fisubrs
dec
fnstsw
dec
ja
or
fidivrs
jmp
mov
xchg
mov
arpl
pop
aas
push
fsubs
rorb
sar
lahf
sub
xor
push
call
inc
fwait
in
cld
frstor
sub
adc
repnz
push
or
xchg
adc
xor
pop
ljmp
sbb
test
or
add
inc
cmpxchg
cmc
stos
mov
mov
icebp
push
fmulp
in
cmpsb
xchg
sbb
cs
mov
adc
mov
xchg
push
in
inc
adc
in
in
inc
in
xchg
push
lcall
psubusb
mov
cltd
cmp
adc
sbb
sahf
push
jns
nop
xor
xchg
ds
jle
pop
xor
push
subb
test
add
sbb
repnz
cs
sarb
mov
js
mov
mov
clc
cld
das
lock
mov
das
lret
dec
aas
popf
ss
pop
inc
inc
fidivs
cld
inc
mov
sub
pusha
push
dec
mov
sahf
daa
xlat
inc
ja
push
xor
sub
fwait
movsb
xor
and
lret
xchg
mov
cs
imul
movsb
pop
insb
inc
inc
sub
mov
sbb
push
out
sbb
test
ret
repz
cld
push
aam
mov
mulb
loopne
adc
iret
fsubl
mov
cmpsb
mov
sub
sub
jp
imulb
iret
or
pushw
or
sahf
les
push
in
fsubrp
dec
pop
cwtl
nop
jbe
xchg
lret
mov
daa
sub
test
mov
push
add
int
inc
jnp
add
ficompl
xchg
lret
sub
adc
pop
mov
cwtl
ja
aam
rclb
mov
or
es
out
inc
cld
ret
es
xorb
inc
cmp
inc
jbe
cmp
fucom
and
cs
cwtl
sub
mov
cmp
notb
push
iret
mov
and
jle
sub
out
sub
clc
add
and
daa
fcmovu
incb
dec
pop
inc
pop
push
sti
mov
cmpsb
cmp
xchg
lret
and
xchg
mov
cmp
stc
sub
ja
pop
push
mov
insb
dec
xor
lret
sub
pusha
into
add
sahf
inc
daa
int
sub
xor
push
push
movsl
js
xchg
rolb
sub
jl
push
push
pop
cli
paddsb
enter
movsb
inc
pop
decl
xchg
or
mov
pop
loopne
xchg
adcb
lods
aad
pop
stos
rcrl
sub
ja
and
jbe
sbb
test
add
nop
bound
dec
addr16
or
xchg
mov
inc
inc
cmp
stc
in
addr16
add
cs
xor
repnz
push
fldl
mov
outsl
inc
and
sub
push
jecxz
sbb
add
xchg
push
pop
pop
or
sub
pusha
sahf
int3
dec
daa
mov
pop
jp
mov
iret
lods
stos
mov
adcb
push
ror
cmp
inc
jle
cmp
out
and
rcrl
sub
sub
insb
sub
notb
fisttps
xchg
outsl
fstpt
sub
xor
xor
sub
lahf
adc
adc
sub
sub
mul
in
jmp
or
or
sub
loopne
mov
push
jbe
scas
ja
daa
inc
cmp
ds
call
and
or
inc
xor
daa
sbb
jb
push
sub
sub
pop
lret
cs
sub
cmc
jbe
xchg
dec
aaa
enter
daa
call
sbb
and
or
sub
in
push
rep
cmc
dec
shl
mov
mov
jmp
stc
inc
call
add
in
loope
sbb
mov
adc
std
sub
insb
sub
lds
jmp
data16
push
dec
jb
daa
add
sbb
adc
repz
fsubl
and
shlb
movsb
jnp
jmp
outsl
jmp
daa
mov
movsb
push
cmp
sahf
movsb
inc
loopne
fbstp
stos
inc
push
and
ja
repz
xor
adc
or
lods
or
and
jns
xlat
insb
push
pop
dec
cmp
iret
repz
sbb
and
loopne
mov
mov
pushf
mov
cmp
repz
sub
out
ds
push
add
and
rcrb
stos
lcall
jns
pop
dec
ds
xor
out
add
and
loop
repz
lret
mov
cmp
subb
sahf
out
cmp
test
out
mov
iret
repz
fcmove
shrb
xorb
cmp
cmp
add
mov
push
enter
ds
and
pop
mov
sub
sub
jns
ja
aam
movsb
xchg
jnp
jns
xorb
push
inc
push
es
out
ds
sbb
cld
sub
enter
sahf
mov
jl
pop
dec
jns
out
cmp
and
add
cmp
les
jns
mov
jle
repz
cmp
pop
inc
sub
out
lcall
sahf
out
sahf
mov
pop
jns
out
push
inc
xor
add
cmp
repz
sbb
fmulp
mov
mov
xchg
xchg
cmp
repz
dec
cmp
or
cmpsl
stc
cli
pop
repnz
repz
repz
sub
xor
adc
jns
iret
or
sub
sahf
out
sahf
les
jns
out
pop
dec
inc
sub
idivl
call
mov
outsb
mov
push
test
jns
outsb
push
ds
push
xor
mov
cmp
es
out
push
push
sub
xor
dec
loopne
bnd
mov
es
repz
push
lods
loop
mov
or
sbb
cmp
sahf
out
pop
push
adcb
scas
mov
jl
in
cld
or
cs
iret
repz
push
pusha
adc
incb
out
sahf
out
and
aam
mov
out
sahf
movsb
nop
andb
lahf
out
and
add
pop
in
cmp
repz
xchg
jp
repz
push
sbb
mov
push
fiadds
rol
iret
repz
mov
jbe
iret
repz
push
inc
xor
jns
out
add
sbb
xor
out
mov
sub
inc
push
sahf
out
sahf
dec
pop
push
mov
mov
fsubrp
jnp
int
adc
insb
sbb
pop
pop
sahf
out
sahf
push
jp
cwtl
scas
mov
lret
add
adc
jns
repz
es
pop
push
jo
iret
repz
cwtl
lods
mov
repz
add
and
fidivrs
out
pop
data16
sbb
sahf
out
je
push
dec
cmp
jns
out
and
repnz
repz
loop
mov
mov
add
repz
out
or
and
cmp
repz
ss
bound
mov
movsb
mov
add
sbb
data16
or
pop
mov
je
cmp
add
adc
into
out
int
out
xor
xlat
xchg
push
call
add
fcomp
pop
xchg
add
lret
push
mov
mov
pop
add
aam
es
movntq
dec
xchg
fcoms
out
out
sahf
call
in
jns
out
out
out
lock
repnz
sahf
out
cli
sti
cld
std
iret
repz
incb
cltd
or
or
cmp
repz
or
cmp
repz
adc
push
pop
sbb
sbb
cmp
repz
sbb
cmp
repz
and
es
sub
sub
cmp
repz
sub
cmp
repz
xor
iret
repz
pop
imul
repz
mov
sahf
cmpsl
stc
or
out
sahf
out
insl
jns
xchg
sahf
out
sahf
movsl
mov
aad
idivb
repz
adc
cmp
repz
gs
xchg
iret
repz
movsb
mov
int3
sahf
out
cmp
decl
pushf
adc
jns
out
and
sahf
out
pop
bound
lahf
out
sahf
adcl
loopne
insl
insl
sti
sti
adc
xlat
add
aas
mov
jbe
gs
sbb
je
insl
mov
gs
add
and
push
pop
fs
adcl
outsb
jne
faddl
xchg
or
jo
push
imul
testl
dec
popa
pop
es
push
inc
cmp
add
in
push
scas
std
ss
sbb
jb
inc
and
inc
push
mov
insl
lods
add
xor
push
shll
jb
jo
and
add
fs
or
inc
icebp
pop
scas
push
inc
xchg
fcomps
repz
push
jo
mov
sbb
pop
pop
xchg
push
xor
jae
and
or
addr16
or
es
hlt
jb
or
add
es
push
fisubl
push
jo
push
push
add
jnp
insb
push
rolb
loopne
data16
lock
push
lock
pop
push
adc
mov
rolb
int
jle
nop
loopne
add
sarl
shl
push
xor
pusha
pusha
xchg
or
mov
lret
divb
stos
mov
add
sbb
testl
inc
push
inc
insw
je
xchg
add
and
push
inc
push
and
into
cld
mov
std
push
push
push
add
lock
icebp
xlat
mov
pop
repz
out
ja
pop
jnp
icebp
push
out
sub
push
mov
cmc
push
cli
add
add
add
adc
add
cmp
or
xor
pop
add
add
in
add
and
add
test
inc
add
pushl
faddl
jae
push
cmp
or
pushl
and
int3
std
xor
push
add
add
add
clc
and
jmp
push
nop
push
fistpll
add
decl
scas
add
cld
lret
divl
or
std
addr16
mov
xchg
add
add
std
fwait
add
inc
add
and
xor
xor
dec
ljmp
cli
xor
push
std
jo
call
add
add
mov
push
add
movsl
stos
add
add
cltd
add
sbb
mov
pop
std
imul
cmp
std
dec
inc
ds
add
add
add
add
add
ljmp
sbbb
add
add
mov
sub
fadds
jmp
lret
add
cld
dec
clc
mov
pop
fstpt
add
pop
add
sbb
std
aam
jbe
pop
add
add
pushl
add
clc
and
fcomip
scas
cmc
stc
pop
pusha
add
add
pop
sub
call
std
pusha
clc
aam
cmp
roll
jo
lods
pop
lock
das
push
inc
add
pop
add
scas
std
mov
dec
add
aad
xchg
incl
jge
popa
std
adc
sub
xchg
mov
call
popf
xor
call
std
add
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
cmp
inc
mov
ficoml
push
in
xor
add
lcall
dec
mov
add
add
add
add
arpl
decl
mov
jge
push
mov
out
push
call
stc
jmp
clc
ljmp
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
daa
stc
sti
ss
movsb
cld
push
jg
push
mov
ljmp
xchg
add
add
xor
mov
mov
or
dec
pop
iret
push
les
dec
push
mov
add
add
decb
cld
jmp
shl
mov
out
fsubrp
sub
ljmp
divl
cmc
inc
cmc
jo
call
dec
add
add
adc
jmp
or
or
cld
decl
or
push
fimuls
lahf
pmaxub
adc
or
push
sbb
add
push
sbb
ljmp
test
push
in
aaa
call
xor
adc
sub
sbb
mov
pop
cmc
ljmp
hlt
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
clc
decl
jbe
dec
adc
adc
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
sete
push
mov
jnp
enter
psubq
sti
imul
negb
repz
in
fsubrl
dec
fstps
icebp
xor
in
push
incb
sti
and
xlat
cld
test
or
adc
add
mov
pop
popa
sbb
adc
adc
sbb
xchg
test
or
lcall
decl
test
hlt
cli
repnz
adc
ljmp
loop
aaa
sub
dec
into
shl
fcomp
loopne
repnz
jp
add
incl
add
xor
test
sbb
pop
sub
outsb
push
bound
sub
pop
or
ljmp
lock
push
or
pop
add
mov
repnz
out
fcomip
lahf
in
jae
je
jmp
in
ljmp
imul
fadds
jg
add
jle
add
or
pop
or
xor
sbb
cmp
sbb
push
push
sbbb
and
adc
or
add
add
add
incl
lahf
sti
fcomip
mov
jmp
out
shr
mov
adc
pop
fidivrl
test
fdivp
call
or
adc
adc
xor
repz
call
xchg
adc
sbbb
push
mov
movl
stc
jns
loope
mov
jg
cmc
clc
jbe
add
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
call
aam
daa
pop
sbb
fimuls
jecxz
into
adc
adc
ds
adc
adc
push
jg
daa
adc
adc
or
rolb
cld
enter
xchg
clc
imul
jne
jmp
cli
pop
cli
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
cld
js
jg
lds
push
test
adc
push
lahf
adc
imul
adc
aaa
std
lcall
add
clts
sub
cli
in
xor
cld
notl
loopne
add
repz
das
testl
fsubrp
xchg
out
insb
out
mov
or
push
jmp
frstor
in
icebp
add
adc
adc
adc
jg
jmp
adc
adc
scas
adc
lret
adc
adc
mov
jg
stos
std
mov
stc
or
stc
sbb
push
sbb
out
jb
cli
push
inc
repnz
stos
in
sub
jecxz
fcoml
rcr
stos
ljmp
call
adc
push
pop
pop
loop
popa
adc
xchg
adc
sbb
std
or
ljmp
adc
pop
femms
or
add
or
xor
inc
cmp
mov
call
sti
outsl
imulb
icebp
mov
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
outsb
aam
fdivrl
incl
movsb
add
ljmp
push
pop
sbb
adc
mov
aaa
fs
fbstp
push
adc
or
or
jle
std
mov
test
aam
movsl
std
cmpsb
sti
mov
repz
mov
shl
jmp
fldl
aad
ror
xlat
popf
in
repz
call
ds
or
adc
push
lock
xor
pop
sub
inc
sbb
push
xor
jl
push
rclb
and
pop
cmp
or
int3
pop
in
add
loopne
lcall
aam
jle
stos
std
fcomip
inc
hlt
mov
jecxz
fisubl
sub
mov
mov
call
and
or
stos
pop
aad
bound
lds
adc
adc
jno
inc
btr
cmp
pop
push
adc
orb
push
pusha
add
sbb
incl
push
dec
add
add
sbb
and
out
out
loopne
fstps
push
mov
mov
out
and
pop
ljmp
sbb
push
adc
adc
rorb
jg
stc
push
inc
adc
pop
mov
ret
or
or
or
lcall
add
lock
mov
xor
int
sti
insl
lds
jmp
or
adc
sbb
rcrl
rclb
adc
push
call
xlat
or
push
mov
and
scas
inc
call
xchg
or
test
xor
mov
lds
pop
or
add
stc
cmp
and
loope
cmp
test
lds
jb
and
add
or
or
adc
adc
push
sbb
hlt
adc
xchg
or
push
sub
mov
add
call
out
add
or
or
or
mov
or
add
decb
inc
in
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
pmulhuw
xchg
cmovge
stos
or
xchg
lcall
rorl
adc
iret
or
packssdw
lcall
mov
fildl
xchg
add
sbb
mov
and
or
or
add
fiaddl
scas
sti
ret
out
push
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
pop
call
add
mov
add
add
mov
pop
lcall
or
adc
pop
jbe
adc
adc
adc
cld
sub
loop
xor
fwait
jecxz
fsubl
les
aad
icebp
cmp
adc
push
pop
loopne
dec
adc
xchg
add
add
decl
movsl
add
std
pop
lcall
push
test
pop
adc
lcall
adc
cmp
clc
lods
in
in
jge
xchg
fsts
int3
mov
fcom
jb
pop
jmp
sbb
pop
push
and
jmp
cld
test
scas
cld
xor
sub
stos
dec
add
or
decl
lds
and
add
std
idiv
mov
or
or
inc
pushf
adc
das
or
stos
mov
jecxz
loopne
fsts
push
lock
and
sub
add
sti
jmp
in
inc
repz
call
or
fimull
xor
add
push
add
rorb
or
or
push
or
incb
imul
out
fmul
push
leave
pop
shlb
adc
stos
pushl
std
ljmp
pop
add
call
and
leave
add
pop
pop
popa
std
sar
inc
push
sub
sbb
add
dec
push
into
push
mov
cmp
and
adc
adc
add
add
fldenv
ret
cmc
push
xchg
neg
test
dec
sub
das
xchg
ss
clc
adc
sbb
inc
loop
lock
stc
loop
and
out
faddl
cmpsl
add
pushf
inc
push
ljmp
jmp
mov
out
dec
or
xchg
add
fst
inc
sar
cmp
inc
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
ljmp
outsl
dec
std
clc
aam
in
pop
loope
lock
cli
mov
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
and
or
sub
test
ror
ret
push
iret
repnz
sbb
daa
mov
ds
xor
loope
push
add
loope
fistl
fdivrl
imull
add
or
adc
imul
adc
adc
xor
mov
mov
cmp
decl
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
or
cmp
sub
call
fstpl
fcoms
pop
add
cmp
mov
les
cltd
adc
adc
push
clc
and
les
xchg
push
inc
ljmp
adc
push
shrb
leave
push
mov
dec
fimull
incl
clc
adc
cwtl
es
xor
cmp
in
inc
xor
cmp
lds
or
scas
fisttps
mov
out
cmc
fdivrs
in
icebp
or
or
clc
pop
daa
in
xchg
and
and
sbb
adc
or
jecxz
call
jno
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
cmp
call
out
inc
out
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
mov
nop
mov
mov
mov
loop
xor
test
inc
ret
mov
inc
cli
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
fistl
fnsave
fldcw
fldenv
and
sbb
mov
xor
ljmp
jo
pop
or
sti
stos
call
ror
ret
aaa
mov
lods
in
std
call
and
cli
pushl
or
xor
inc
aam
xor
pop
inc
call
push
fistl
lret
pop
iret
mov
fiadds
icebp
adc
jb
sub
xor
add
or
sub
push
imulb
insb
ljmp
out
ret
or
into
lock
cli
fildll
adc
cmp
inc
mov
out
subl
sbb
repnz
call
out
fldt
roll
mov
add
adc
sbb
pushl
inc
aaa
das
xor
es
ja
int3
sti
sub
and
mov
adc
mov
jne
sub
decl
sahf
sbb
and
pop
ds
xor
push
xor
fldl
inc
incl
jne
sbb
adc
rcr
aam
iret
push
shlb
xlat
loopne
das
add
xor
xor
cmp
pushl
inc
and
jne
insb
in
aad
enter
mov
mov
mov
daa
push
ljmp
cmpl
ret
or
cld
mov
ljmp
jo
dec
push
cld
call
mov
mov
pop
test
xor
aaa
lret
xor
decl
roll
mov
mov
addb
cs
ds
dec
push
lcall
xor
sub
shl
jmp
call
mov
sbb
add
outsl
mov
pushl
cld
jge
inc
pop
jg
lods
sub
xor
bnd
xor
in
jns
shl
jg
dec
stos
ret
ds
in
lcall
and
mov
pop
pop
adc
es
pop
insl
push
push
add
leave
out
push
call
in
shr
into
pop
iret
jg
call
jmp
xor
cmp
mov
clc
push
in
dec
push
mov
aam
out
sarb
sbb
lcall
sub
and
fsubrs
ja
xlat
push
mov
stc
xchg
cmc
shl
mov
xlat
cwtl
aam
call
ret
iret
adc
aaa
clc
push
adc
cmp
xlat
push
sti
or
cmc
es
ljmp
int
mov
int3
or
sub
pop
pop
sub
stos
aas
scas
cmp
aaa
xchg
sbb
cmp
stc
cmp
repnz
addr16
jmp
fiadds
loopne
fsubl
loope
stc
push
psllw
fsubrl
pop
aaa
fildll
leave
sbb
incl
dec
icebp
shl
sbb
scas
outsl
mov
shl
add
adc
aaa
std
inc
test
aad
xor
sub
sbb
or
cld
loop
ljmp
cmp
fildl
neg
lcall
ja
std
push
out
ljmp
ss
push
cmp
adc
pop
out
fstps
int3
mov
inc
mov
jg
arpl
in
movsl
cmp
inc
je
mov
js
sbb
jb
test
cmpsb
ljmp
test
mov
inc
into
xchg
rcll
out
add
sbb
sub
mov
inc
xchg
mov
icebp
adc
outsb
loopne
iret
xor
mov
ljmp
and
incb
xor
inc
or
dec
pusha
inc
xchg
jmp
pop
adc
add
jmp
out
jmp
filds
leave
test
fcmovne
insb
sarb
in
or
inc
push
cld
incl
xor
mov
iret
pop
mov
mov
imul
addl
mov
outsl
sub
cwtl
dec
mov
sub
mov
mov
cmpsl
jmp
jmp
adc
aam
aam
shll
adc
inc
aad
out
add
aaa
sub
xor
aaa
mov
sub
sbb
or
int3
adc
in
mov
mov
mov
cmp
add
xchg
sub
inc
fdivs
or
mov
daa
out
sub
repz
sub
popf
flds
call
sarl
pop
mul
push
xchg
push
lcall
xor
cmp
inc
adc
std
or
or
lret
xchg
mov
mov
decl
sub
xor
test
ss
push
mov
push
notb
fsubr
mov
rol
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
push
aas
dec
das
fcompl
repz
into
or
mov
test
mov
jnp
ljmp
jns
repz
mov
cs
in
aam
int3
push
repnz
inc
or
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
pop
and
roll
mov
cmpsl
les
ja
pusha
sbb
mov
pop
sbb
mov
decl
inc
and
mov
fstl
jo
sbb
fs
data16
js
fs
jg
and
jle
sahf
inc
addr16
jo
xor
adc
call
xlat
int3
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
lea
mov
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
or
stc
pushl
jo
sub
inc
mov
repnz
sbb
or
aad
into
in
mov
leave
mov
incl
jmp
pop
dec
sub
fldl
dec
sbb
sbb
rcll
mov
loop
mov
rcll
ljmp
out
xor
popa
aaa
test
add
rcrb
dec
pop
fidivrs
test
cs
push
sti
push
jp
les
lcall
cmp
cmp
dec
mov
js
aas
cld
loopne
sbb
popa
sub
ljmp
inc
cmp
daa
xor
mov
sub
loope
int
iret
outsb
leave
xchg
ret
test
aaa
insb
mov
mov
notb
outsb
inc
cmpsb
push
inc
pop
int3
push
add
lcall
icebp
inc
stos
sarb
mov
ss
mov
dec
ljmp
cli
pushl
dec
dec
dec
iret
dec
jl
lret
sbb
pop
lock
loop
shlb
shufps
lcall
mov
sti
fistps
dec
inc
fmull
stos
pop
aam
les
incl
pop
jmp
mov
stos
leave
ret
pop
loope
push
rcl
xor
inc
je
push
dec
xchg
inc
mov
scas
sub
adc
add
fldcw
scas
rcrb
imulb
jg
shlb
in
ret
popa
sti
mov
pop
dec
sbb
hlt
call
push
fs
lahf
ds
insl
add
jecxz
lret
int
mov
loop
lock
mov
pop
bound
mov
cmp
pushf
sub
sbb
and
arpl
add
popf
lcall
xor
mov
lds
sbb
xchg
or
and
arpl
ret
inc
cli
fisttps
fisttpl
push
sub
jae
pop
inc
pop
mov
mov
lcall
and
das
fidivs
mov
jp
rcrb
adc
rolb
icebp
sub
aam
pop
fdivrl
flds
lret
das
out
add
adc
cmp
dec
inc
xor
lcall
out
in
fimull
cmpb
leave
in
add
cmc
sub
cmp
repnz
pop
mov
xor
jg
repnz
sahf
jmp
xchg
ficompl
out
add
cli
fistl
lret
and
xor
roll
inc
es
and
adc
cmc
clc
fsqrt
movsb
mov
mov
mov
in
fmul
stc
leave
adc
es
sbb
ss
sbb
add
sti
adc
or
cmp
lcall
fdivl
aad
pop
ficoml
nop
clc
adc
je
or
or
lcall
adc
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
cli
das
sar
pusha
and
cmp
pop
ljmp
mov
rorl
cmp
ljmp
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
ljmp
clc
push
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
incl
inc
pop
rol
xlat
fs
aam
addr16
add
xor
sbb
enter
out
cmpsb
hlt
call
hlt
clc
lock
out
je
mov
dec
adc
aaa
dec
cli
and
ljmp
sti
sahf
adc
das
cs
add
xor
sbb
xchg
fcmovnu
lret
inc
cmp
ljmp
repnz
mov
inc
and
sbb
pop
inc
push
mov
decl
test
test
imul
adc
mov
mov
fadds
stc
mov
or
test
sub
mov
push
sbb
or
jg
lahf
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
sbb
inc
or
or
or
incl
fwait
or
mov
xchg
hlt
repnz
sahf
ficomps
inc
iret
loopne
call
aam
push
add
push
out
and
cs
add
das
jecxz
ljmp
ret
lock
mov
mov
sbb
sbb
and
xor
cmp
add
add
add
incl
adc
or
xchg
cmc
push
ds
fidivs
aad
rcl
int3
in
repz
popf
icebp
decl
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
jmp
repz
divl
sahf
mov
pop
mov
xor
add
jle
mov
or
adc
decl
nop
or
push
out
xchg
jecxz
fbld
xlat
fldl
ror
rcrb
incl
add
pushf
sbb
push
jbe
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
sbb
mov
xchg
loopne
mov
adc
pop
lods
add
decl
call
adc
or
mov
jp
imul
cmp
out
loopne
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
adc
shrl
and
mov
xchg
or
clc
repnz
out
in
ljmp
arpl
bswap
adc
push
sbb
aas
push
adc
mov
add
cli
shl
jmp
mov
fcmovu
hlt
decl
in
enter
enter
out
mov
push
insl
sub
adc
dec
test
stos
decl
cmp
add
repnz
loopne
aad
into
and
add
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
sbb
xlat
icebp
and
inc
aam
jg
insb
jbe
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
enter
test
std
ljmp
mov
inc
and
add
jmp
shr
ret
sbb
jmp
cmp
jmp
cld
add
sbb
and
out
imul
push
pop
cld
shr
fcomip
aam
leave
rol
cltd
mov
sbb
xor
popf
push
cltd
cmp
push
jno
jmp
je
js
jo
push
pop
xor
adc
out
imul
int3
fcomip
pop
or
es
ljmp
cmp
lret
or
lcall
rorl
pop
mov
mov
cmpsl
and
sub
mov
dec
or
decl
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
xlat
test
add
jmp
lods
sbb
ss
ss
xor
mov
in
decl
or
pusha
ljmp
stc
mov
push
mov
mov
mov
add
cltd
rolb
out
cmp
inc
cmp
popa
inc
addr16
call
imul
out
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
sbb
pop
push
xor
xor
cmp
xor
sub
and
adc
add
push
call
pop
in
and
rcr
sbb
mov
cmc
inc
or
sub
jbe
mov
xor
ss
add
lcall
jecxz
out
pop
iret
fwait
jo
les
cmp
addr16
cmp
imul
dec
sub
sub
pop
pusha
jmp
adc
inc
out
arpl
fnsave
int
insl
repz
sti
sub
adc
add
add
sbb
sbb
call
mov
sub
xor
mov
pop
ss
or
iret
cmp
xor
pop
mov
call
jp
mov
mov
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
sbb
js
incl
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
repnz
ljmp
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
mov
pushl
mov
sti
fimull
fs
sbb
cltd
and
popf
cmp
sub
lcall
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
ret
push
sar
decl
test
xchg
ret
push
mov
bound
jnp
ds
ret
call
ret
les
lret
lahf
sarb
add
sub
sar
cmp
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
mov
scas
imul
add
xor
idivl
std
and
jmp
add
push
dec
pop
add
dec
imull
mov
mov
mov
das
sahf
jno
ljmp
mov
sub
fists
bound
mov
dec
push
out
inc
cmp
pop
ds
fisttps
nop
mov
jae
mov
lret
std
adc
pop
insb
adc
incl
cli
inc
xchg
and
cs
cs
aas
jmp
out
lock
inc
leave
ljmp
lods
push
ret
add
and
sbb
mov
std
aas
loopne
decl
push
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
cwtl
cmc
mov
loopne
call
adcl
xor
ficomps
inc
clc
lcall
sub
aas
cmp
xchg
es
or
enter
rorb
hlt
dec
psubusw
in
add
shrb
xor
cmp
adc
pop
faddl
or
out
clc
out
jo
fwait
pusha
jecxz
sub
mov
out
xor
mov
inc
add
not
repz
jl
sar
test
mov
xchg
fdivrl
xor
incl
push
aaa
std
and
mov
xchg
rcrb
std
jmp
jmp
js
xchg
or
adcl
pop
jl
imul
sbb
ljmp
push
add
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
jge
xchg
aam
in
hlt
mov
push
cmp
push
pushl
mov
hlt
and
das
int
lds
rolb
clc
mov
and
xor
sub
xor
and
das
adc
shr
incl
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
mov
sti
rcll
xor
pushf
imul
insb
fldl
sbb
mov
stc
xchg
insl
popf
xor
inc
adc
es
or
cmp
aaa
adc
pushl
push
ss
das
enter
xor
loop
aad
enter
sarl
lcall
lcall
jmp
push
repz
mov
pop
xorb
insl
jg
jl
jo
incl
out
push
dec
jmp
push
xchg
mov
xchg
mov
or
and
inc
fisttpll
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
ljmp
lret
mov
fs
mov
jmp
repz
or
inc
insb
mov
pop
lahf
gs
sbb
jl
shll
test
rcl
jmp
and
sbbl
pop
inc
dec
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
shr
loop
ds
leave
and
into
push
fildll
out
clc
icebp
shl
ret
ljmp
cli
lods
mul
adc
and
imul
adc
and
lahf
nop
jg
hlt
inc
nop
xor
sbb
int3
out
sub
hlt
xlat
lcall
sub
jmp
daa
push
daa
pop
es
pop
cmp
mov
jbe
push
or
sbb
scas
pop
sbb
jmp
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
filds
cmc
or
and
sub
es
sub
cld
daa
call
jecxz
je
xchg
int3
test
inc
lds
dec
mov
sub
or
sub
sub
and
sbb
call
sti
fwait
lock
cmp
fcmovnb
rclb
mov
jg
fisubrs
or
adc
sbb
jns
aas
lcall
adc
mov
lcall
sub
incl
inc
in
dec
fcompl
int3
inc
lds
loopne
jmp
or
ljmp
ljmp
daa
xchg
and
pop
stos
int3
repnz
add
fcomip
aad
cmp
sbb
roll
leave
daa
aam
call
rclb
lcall
lret
and
adc
and
ds
jae
lods
repnz
cli
xor
call
das
jle
cltd
fcomip
pop
xchg
add
call
fsubl
dec
add
test
ljmp
add
add
add
pop
test
or
roll
mov
rcrb
call
cli
pop
pop
daa
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
ljmp
xor
dec
je
xor
into
add
into
sub
int3
xor
sub
call
cwtl
out
stc
pop
push
pop
pop
or
pop
fwait
add
or
or
sbb
mov
push
mov
std
jno
out
ffree
loope
ljmp
sbb
mov
mov
test
stos
andl
clc
mov
shrb
dec
adc
scas
cli
push
pop
lods
inc
aas
push
or
rol
ret
aad
sbb
xlat
lock
lea
pop
jg
out
adc
aad
loope
pushl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
lcall
popa
cmp
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
lcall
cli
adc
ss
and
es
sub
lret
adc
add
add
fs
std
repz
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
and
xor
pop
push
push
aam
shr
shrl
jg
inc
dec
mov
int3
lret
mov
addr16
iret
add
and
shlb
push
sbb
or
add
mov
loop
jb
lcall
std
cmp
jmp
stos
loopne
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
add
incl
out
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
jmp
sbb
rcrl
push
lret
bound
sbb
sub
ljmp
adc
adc
push
fdivl
enter
lret
into
rolb
js
push
out
in
jmp
sub
xor
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
mov
lret
jbe
testl
adc
push
add
pushl
cmp
push
cwtl
cmp
inc
and
and
or
call
or
mov
mov
mov
push
repnz
jmp
xchg
iret
in
mov
out
xor
fwait
pop
and
cmp
push
inc
pop
cmovb
and
or
ljmp
add
pushl
call
in
test
jb
jb
sahf
sti
jecxz
lods
sbb
mov
dec
lcall
sub
in
int
mov
mov
out
les
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
pushl
lds
fwait
xor
inc
inc
dec
mov
or
not
in
rolb
fdivs
xor
addr16
inc
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
ljmp
lock
sub
cmc
mov
adc
sbb
popa
std
add
cmp
insl
or
or
or
cmp
shl
dec
or
adc
ds
jg
xor
sub
dec
add
jmp
fldt
mov
mov
int
out
mov
adc
clc
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
lcall
push
and
jecxz
fnstsw
mov
cmc
mov
inc
add
push
lods
or
or
out
ljmp
jmp
sub
and
or
shl
mov
mov
shrb
cmp
bound
xchg
cmp
popf
inc
jge
fwait
sbb
pop
cld
in
inc
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
fdiv
movsb
std
stos
add
inc
call
cmc
mov
push
jecxz
jmp
clc
jb
or
xor
cmp
ja
scas
cli
ljmp
sbb
mov
scas
scas
mov
call
xor
xor
decl
or
add
out
aam
lret
cli
xlat
cld
orb
adc
insl
pop
mov
push
lcall
pop
adc
lcall
cmp
jbe
in
and
filds
push
adc
and
ds
and
adc
lock
add
mov
filds
icebp
add
incl
cld
mov
push
das
pushl
adc
jmp
in
js
out
incl
imul
test
movsl
adc
sar
lahf
repz
out
or
jge
lcall
addl
sub
or
sti
cli
mov
mov
in
push
mov
add
sbb
sub
cmp
dec
into
dec
mov
sbb
jmp
mov
ss
nop
loope
repz
jmp
push
or
jbe
test
test
cmp
stc
cmc
repnz
in
test
popa
sti
xor
iret
push
xor
and
mov
lcall
imul
adc
mov
cli
mov
shl
xor
sbb
outsl
in
lcall
and
loopne
cwtl
into
movsl
lret
pop
idivl
movsl
sbb
or
mov
mov
ljmp
sub
sub
test
sub
push
fisubl
in
push
adc
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
jmp
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
xor
and
loopne
dec
or
pop
out
fdivp
fbld
fidivl
jecxz
call
pop
idivl
call
or
or
mov
out
dec
and
sbb
jmp
sbb
clc
mov
loope
in
in
in
xor
ret
push
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
mov
pop
dec
arpl
aaa
jns
mov
add
mov
pop
enter
pop
lock
out
rolb
or
mov
sbb
mov
mov
mov
mov
add
sti
push
cmc
adc
pushl
ljmp
insb
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
and
fistpll
outsb
push
jbe
add
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
add
ljmp
jg
jle
lret
push
mov
adc
adc
adc
adc
clc
sbb
es
and
sbb
and
mov
test
jmp
push
fsubs
out
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
add
call
pop
dec
sub
jae
arpl
or
sub
add
cmpsl
leave
mov
mov
add
pop
fsubp
sbb
add
or
xor
sahf
and
and
daa
mov
pushl
pop
and
or
cli
jecxz
xlat
nop
into
mov
and
iret
push
icebp
loopne
jmp
incl
in
fcomps
incb
sbb
daa
cmp
call
outsb
sub
ljmp
dec
subb
push
ret
in
scas
sarb
test
dec
repnz
pop
nop
pop
cld
lcall
xor
and
sbb
jnp
adc
test
std
adc
fimuls
fdivs
xlat
xchg
aam
shrb
or
jo
jecxz
popa
jmp
out
and
push
pop
out
sub
lods
repz
push
repz
jp
dec
sub
cmp
inc
push
inc
xchg
cmp
and
jg
or
jle
and
pushf
mov
mov
mov
rolb
jno
imul
jmp
and
in
xchg
jecxz
in
adc
adc
cs
jbe
xchg
pxor
clc
ljmp
jmp
jecxz
loopne
fnstsw
xor
iret
fldcw
adc
lock
shl
out
out
icebp
add
or
pop
loopne
and
lcall
jae
out
and
daa
cmpsb
es
sub
das
clc
call
sar
jmp
flds
enter
shl
addr16
fcomip
incl
adc
sbb
and
hlt
jbe
out
adc
or
cmp
add
test
ja
sbb
hlt
sbb
loope
and
mov
cmpsb
loopne
ficomps
in
sub
mov
push
fimuls
inc
or
call
mov
or
add
int
jns
and
mov
pop
aad
clc
int3
ljmp
dec
in
in
icebp
ljmp
and
cmp
pop
adc
inc
imul
testl
adc
adcb
decl
lock
push
add
hlt
jecxz
push
fisttpll
shl
clc
rolb
jecxz
negb
mov
pop
and
js
xchg
and
push
jns
mov
in
loope
sbb
cmpsb
push
and
push
es
xchg
add
out
mov
lcall
dec
into
call
data16
in
roll
nop
adc
and
pop
and
aaa
cld
dec
sbb
cli
sub
shl
repnz
mov
jmp
sbb
das
cli
incl
ljmp
into
and
lahf
loope
out
xchg
add
adc
es
je
fadd
aad
aad
loope
cmp
adc
pushl
hlt
out
sub
push
stc
push
aas
aas
shrb
push
hlt
jp
add
outsl
push
int
lret
fmul
sbb
push
mov
and
push
jecxz
int
imul
call
ret
hlt
cwtl
add
or
decl
daa
push
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
lcall
add
ja
mov
cmpsb
mov
add
fldln2
push
add
mov
call
dec
test
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
stos
add
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
pushl
or
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
pushl
int
ljmp
ljmp
and
bound
cmp
sub
pushl
fcoml
mov
test
gs
call
jb
into
push
fiaddl
jbe
pop
jmp
add
stos
add
or
scas
call
sarb
rcrb
push
adc
and
loop
dec
cmc
scas
clc
push
push
out
xchg
out
pop
in
jnp
dec
out
dec
repnz
out
xor
dec
in
fcomip
ftst
xchg
clc
add
movhps
mov
lret
inc
dec
inc
inc
xor
sub
shrl
pusha
aam
int
pusha
frndint
sub
add
jg
adc
or
or
push
call
std
push
pop
sbb
decl
nop
sub
rcrb
mov
in
fcmovnu
xor
fcomip
call
cli
call
add
in
loop
sarl
stc
arpl
ljmp
pop
cmp
mov
sbb
add
lock
shrb
or
pop
iret
js
lahf
ljmp
or
sub
testl
lods
fidivrs
sar
mov
adc
inc
ss
dec
pop
push
repnz
cmp
mov
push
flds
lret
pusha
mov
std
loop
testb
push
push
lds
or
out
fisttpll
aad
fchs
repnz
or
and
mov
imul
mov
cld
mov
lret
inc
sbb
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
sub
or
lcall
lcall
jge
or
ds
cmp
push
pop
orl
adc
stos
jmp
ret
fldenv
mov
push
adc
adc
add
incl
in
jp
or
inc
repz
or
and
cs
inc
sbb
pop
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
fcoml
fcoms
pushl
sub
push
dec
or
add
ljmp
sti
mov
out
push
dec
cld
out
clc
adc
ret
cli
daa
cmpsl
cld
push
add
lcall
mov
testl
in
icebp
aas
loop
loope
lock
push
testb
pop
sub
pop
mov
add
imulb
mov
filds
dec
or
sbb
mov
adc
dec
clc
sbb
push
lock
push
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
in
out
lock
std
adc
sbbl
sbb
add
cld
push
repnz
iret
addr16
pop
pop
hlt
inc
daa
fcompl
add
adc
xor
sub
or
das
add
pushl
in
in
out
repnz
add
cmpsb
call
fdivp
test
push
in
in
jmp
add
push
std
or
pop
cmc
or
inc
and
rclb
and
xor
call
stc
lcall
or
bound
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
or
loope
clc
pop
ja
cmp
daa
sbb
push
sbb
jg
decl
add
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
mov
out
out
out
stos
mov
std
dec
or
sbb
incl
mov
addr16
push
cli
or
or
add
mov
std
jl
mulb
jo
out
lods
out
mov
pop
adc
into
out
mov
jmp
cmc
std
mov
inc
add
fs
cs
xor
das
in
sub
and
xchg
or
call
pop
icebp
out
fists
fcomi
out
repnz
or
mov
decl
sbb
or
adc
inc
sbb
sbb
pop
fcos
lcall
insl
adc
lcall
jmp
insb
stc
add
enter
inc
incl
inc
cli
pop
repnz
shl
inc
ror
leave
in
iret
or
sbb
inc
ret
incl
mov
cwtl
mov
stc
sarb
fcos
jg
stos
loopne
sti
testb
push
adc
or
cld
mov
std
jo
ss
pop
xchg
sbb
adc
or
std
xor
out
mov
idiv
lcall
icebp
xchg
hlt
xor
push
mov
repz
dec
out
sar
scas
jmp
jecxz
jmp
mulb
and
cs
xchg
sub
and
jp
loopne
sbb
sti
icebp
inc
ljmp
jecxz
push
add
pop
mov
add
mov
dec
std
sbb
mov
repnz
cli
adc
lahf
sbb
icebp
mov
sbb
xchg
mov
mov
xchg
std
in
dec
testl
jg
sub
add
ljmp
popa
out
sar
add
add
pop
lock
add
xchg
push
int3
or
adc
add
cli
imul
call
fwait
push
adc
sbb
inc
push
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
jg
incl
dec
or
sbb
sbb
adc
or
add
jg
mov
cmpsb
add
mov
adc
pop
out
pop
push
mov
add
fs
outsb
in
loop
ficoms
incl
mov
pop
outsb
push
adc
sbb
or
add
fnstsw
add
in
fstpt
in
stc
sar
pop
cmpsb
call
cmp
imul
cli
js
lock
call
insl
stc
inc
aad
loope
add
add
push
cwtl
adc
sahf
idiv
ljmp
out
push
out
dec
sbb
cld
xchg
add
or
push
mov
das
sbb
pop
cmp
jg
xchg
clc
and
mov
lahf
out
in
in
mov
sub
cmp
add
push
or
or
test
sbb
lcall
outsl
cmp
test
ja
mov
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
clc
mov
push
imul
daa
lcall
mov
divb
pop
cli
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
std
pushl
repnz
not
std
mov
fwait
or
and
or
mov
call
iret
loop
loopne
out
jmp
adc
leave
clc
daa
push
push
or
or
cld
call
add
sbb
push
pop
or
xor
out
clc
adc
out
jmp
out
or
mov
pop
add
clc
mov
movsb
in
add
lcall
jp
or
pop
out
add
jmp
sub
cmpsl
add
jg
icebp
add
mov
pop
outsl
or
cmp
decl
sub
out
add
clc
gs
ljmp
ds
cltd
clc
ja
clc
push
call
inc
fwait
add
add
cmp
int3
jecxz
in
incl
add
xchg
adc
inc
pop
xchg
sbb
adc
add
std
decl
xchg
out
fyl2x
pop
repnz
clc
mov
push
add
les
mov
jle
imul
and
cltd
std
cmp
cld
jno
rorb
sub
icebp
call
ret
sbb
sbb
adc
inc
adc
incb
push
cld
stc
outsl
cmc
mov
sub
out
aad
mov
int
xchg
cli
scas
stc
js
mov
sti
push
inc
icebp
or
out
push
cmc
lcall
mov
and
inc
and
or
add
notb
jmp
mov
jecxz
in
jmp
repz
clc
xchg
jnp
inc
add
add
or
jle
and
mov
mov
push
shl
add
popa
add
sbb
pop
sub
and
js
push
clc
jmp
in
loopne
loop
jecxz
in
ljmp
inc
decl
sbb
test
filds
xchg
fdiv
cmp
sarb
cmc
cmc
mov
pop
dec
or
fcomip
decl
repz
adc
adc
sbb
mov
rolb
test
inc
notb
std
fdivp
jl
hlt
out
imul
mov
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
fbld
add
in
push
sbb
xor
mov
sbb
sar
icebp
adc
jle
jnp
loope
adc
ret
out
mov
mov
out
fucomi
fucomp
test
ret
std
inc
add
cli
adc
incl
addr16
adc
or
ljmp
in
repz
mov
out
clc
scas
data16
pop
push
push
sbb
into
add
push
add
lock
in
loop
fimuls
mov
sbb
clc
in
add
aaa
xchg
adc
xchg
adc
movhlps
push
fnstcw
mov
mov
or
sub
aas
pop
loopne
iret
sahf
add
outsl
push
sbb
cs
repnz
lock
outsl
repnz
call
cld
inc
testb
add
pop
inc
push
test
adc
push
jo
std
or
incl
lods
add
cli
push
icebp
and
jne
mov
hlt
jge
mov
or
adc
loope
decl
fdivr
int3
mulb
in
dec
out
cli
mov
jns
or
or
es
bound
adc
ja
decl
push
add
sti
jl
lods
repz
lock
jnp
std
repnz
aam
fistpll
ficoml
orl
add
stc
idivl
clc
sar
stc
jmp
inc
ret
or
dec
push
mov
jg
sti
popa
stc
das
test
jmp
sub
aad
pop
push
add
or
adc
lcall
fistpl
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
decl
lock
cli
push
xor
xchg
dec
cmp
shr
inc
cmc
out
cli
add
pop
or
jbe
pop
adc
lds
nop
push
push
or
mov
mov
pop
incl
cmp
mov
call
imulb
jle
repz
add
scas
clc
scas
sbb
add
cli
lock
mov
outsl
push
mov
clc
or
pop
xor
jmp
cmp
or
sub
hlt
pop
repz
hlt
ljmp
sti
ljmp
incl
cld
icebp
cli
inc
divl
jp
insl
idivb
or
or
sbb
mov
shlb
pop
sbb
adc
out
shl
psllw
out
test
sbb
jg
icebp
inc
hlt
mov
jp
test
mov
jbe
sahf
cmp
int3
add
add
mov
lock
aaa
in
jnp
stos
in
out
aaa
std
das
xchg
testl
cmovae
fimuls
xchg
add
in
adc
pushl
std
pusha
hlt
sub
out
in
in
call
movl
rolb
movb
and
clc
negl
clc
jae
insl
cld
lcall
jge
out
sbb
and
sbb
inc
pmulhuw
insl
icebp
lock
incl
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
test
jne
add
testb
push
mov
add
mov
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
prefetcht1
cmp
jmp
loope
sbb
leave
pop
jp
dec
imull
jle
out
aam
jg
jmp
cmc
insl
sti
sub
adc
faddl
inc
cld
mov
out
sub
out
cli
repz
idivb
ds
or
sbb
ds
pop
mov
xchg
std
shl
lcall
repz
in
cli
psubq
cli
xchg
xchg
mull
out
inc
repnz
ljmp
jg
or
sub
add
cmp
test
repz
cli
xor
adc
adc
xchg
or
cld
dec
divb
repnz
add
cld
jmp
cli
inc
add
decl
pop
or
rclb
jnp
rorl
leave
add
add
sti
lahf
testl
xchg
add
fcomip
cmp
adc
adc
push
mov
cli
dec
repnz
or
sti
in
lods
or
dec
shl
int3
adc
negb
mov
jb
push
inc
cmc
iret
stc
push
cld
pop
es
ffreep
test
cmpsl
sbb
sbb
sbb
pop
das
stc
shr
filds
fsubrl
jmp
xchg
out
iret
or
push
adc
into
adc
push
dec
push
mov
jle
push
clc
sub
je
mov
push
out
sub
jg
pop
push
testl
loopne
jecxz
jmp
hlt
push
std
or
adc
ret
lcall
or
loopne
out
mov
roll
roll
push
imul
mov
xor
das
bnd
pop
imull
cli
dec
stc
push
stc
incb
or
ja
push
or
push
push
ja
dec
push
int
mov
push
repz
jmp
dec
out
clc
fisubl
out
lock
or
mov
pop
adc
mov
pop
or
sbb
dec
add
lods
push
cld
mov
or
add
jp
nop
push
in
mov
jecxz
in
jmp
add
pop
add
or
pop
sbb
loop
lea
lock
std
or
scas
repz
mov
cli
outsb
cli
call
jle
sbb
add
cwtl
cld
movsb
cli
cmp
mov
ljmp
sbb
dec
and
movhps
mov
push
cli
ljmp
arpl
loopne
fiaddl
in
out
fs
daa
push
sti
adc
push
or
pop
daa
fisubs
and
aaa
sub
adc
sbb
cmpb
shl
cli
addl
pop
add
add
repnz
jmp
movsb
loope
int
jmp
inc
cmp
dec
push
and
mov
xchg
lock
lcall
sbb
jno
xchg
setle
add
es
cmp
pop
add
add
add
add
decl
add
add
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
sar
add
call
enter
rcrb
adc
imul
in
fnstsw
jno
lods
fdivr
decl
clc
cmp
push
setno
rcrb
jo
push
adc
or
cmp
std
and
mov
sar
std
insb
add
ljmp
jo
std
dec
cli
shl
mov
in
or
inc
out
lcall
push
lret
stc
pop
nop
add
adc
fcomip
call
push
mov
or
sbb
sahf
divb
in
push
pop
mov
in
out
jo
enter
mov
cli
jno
pop
lcall
decl
les
or
or
jo
mov
in
ljmp
mov
hlt
inc
sti
mov
or
adc
mov
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
incl
stos
or
or
or
or
add
and
jo
loop
movsl
aad
aad
fldt
adc
ret
add
in
daa
pop
sub
push
pop
push
decb
idiv
ljmp
aam
add
sti
inc
std
jbe
loop
stc
pop
negl
and
and
dec
ljmp
sub
mov
adc
lcall
and
xchg
and
and
and
add
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
jmp
mul
add
adc
dec
pop
mov
clc
jg
add
pop
add
add
push
pop
or
jmp
std
lcall
loopne
ficoms
in
jmp
hlt
dec
add
sbb
sbb
outsl
mov
sbb
inc
adc
or
movb
add
incl
fadds
push
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
call
scas
sbb
pop
and
mov
sub
pop
fcoms
pop
push
pop
add
mov
jecxz
loopne
scas
and
loopne
loop
out
hlt
dec
cli
sar
xor
cld
sub
cmp
addr16
push
nop
mov
fistl
sbb
inc
adc
rorl
add
or
fsubrp
dec
jmp
filds
jmp
ljmp
icebp
lock
cld
lds
push
cld
sti
mov
ret
sub
nop
push
mov
push
adc
push
test
std
scas
mov
sbb
sbb
adc
cli
decl
and
jmp
out
add
repnz
test
hlt
out
pusha
dec
or
or
mov
insl
adc
ret
adc
fimull
filds
dec
ljmpw
loope,pn
fdivr
incl
filds
add
pop
pop
xchg
push
js
xchg
int
xchg
js
mov
fcomip
adc
or
mov
stc
inc
div
not
clc
in
lods
std
xchg
xor
pop
sub
jg
sti
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
sbb
mov
loop
push
jg
ds
push
cmc
decl
imul
hlt
clc
call
cmc
inc
testl
add
addr16
add
mov
pop
ljmp
or
or
or
orl
or
notl
repnz
jmp
jmp
sub
sbb
mov
hlt
daa
sti
in
js
out
test
and
xchg
or
add
cmp
pop
les
enter
or
pavgb
fwait
jle
incl
pop
add
decb
into
out
out
jmp
lcall
test
sti
or
or
xchg
or
outsl
fdivr
or
pop
or
or
push
cmp
aas
mov
inc
or
ss
cli
hlt
jae
sbb
icebp
sbb
decl
idivb
push
std
or
sub
popf
push
jns
sub
decb
add
push
dec
notl
repz
repnz
test
push
out
in
in
imul
jg
jmp
add
scas
sbb
aam
andl
and
ljmp
pop
and
std
push
div
repnz
lods
out
imul
ret
incl
in
mov
cmpsl
in
pop
in
mov
out
sbb
adc
stos
or
sbb
and
pop
icebp
sbb
sbb
rorl
lcall
stc
scas
cmc
mov
insb
bnd
lock
decl
fs
jno
mov
cmc
aad
data16
hlt
or
adc
sbb
push
add
and
lcall
dec
add
lcall
pop
inc
mov
shll
push
aad
fst
out
repz
decl
adc
cmp
inc
and
jbe
test
mov
adc
xchg
mov
add
filds
dec
add
outsl
cli
push
sub
in
ss
stc
fisttps
loop
in
lret
in
dec
repz
mov
scas
or
ret
and
and
test
xor
inc
sbb
adc
bound
ds
outsl
hlt
dec
out
and
pop
out
sbb
lret
incl
ljmp
xlat
clc
repnz
add
jg
pop
lcall
push
sbb
sbb
repz
add
mov
adc
frstor
pushl
mov
out
in
jne
fdivrp
cmp
pop
or
or
push
inc
jg
push
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
or
add
mov
jmp
mov
fnstenv
push
fcoms
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sar
lcall
push
sbb
sbb
push
sbb
adc
add
cltd
push
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
neg
and
lea
xor
or
sar
rdpmc
adc
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
cld
in
dec
sbb
pop
or
xchg
xchg
std
arpl
push
test
out
sbb
xor
hlt
xor
ljmp
pop
jmp
roll
or
in
outsb
pushf
push
ret
pushl
or
or
nop
scas
xchg
add
add
sar
stos
jp
pushl
std
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
aam
dec
std
ds
add
add
ss
or
or
pop
push
push
push
and
movl
lret
ja
sbb
repz
out
add
jp
push
jmp
out
sbb
ljmp
sti
cld
decl
rclb
stos
adc
adc
adc
ljmp
and
cs
sahf
or
or
lock
sti
jbe
call
sub
cmp
sub
out
ja
pop
notb
je
ljmp
icebp
add
adc
pop
lock
sbb
sbb
sbb
pop
cmp
push
push
add
xchg
out
in
repnz
push
hlt
mov
cmp
std
jecxz
loop
loop
in
std
mov
dec
or
idiv
int3
add
dec
sbb
cmp
xchg
and
in
and
test
aaa
push
mov
mov
imulb
ljmp
sbb
add
push
jecxz
loope
loopne
loopne
call
out
cmc
test
cmc
call
sbb
and
and
les
cmp
push
ljmp
inc
sbb
stc
out
jp
cwtl
ljmp
or
cmp
pushf
jmp
pop
call
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
mov
jge
dec
pop
pop
pop
repnz
dec
int3
in
das
ljmp
clc
or
loopne
loope
outsb
out
jmp
mov
das
fdiv
std
sub
insl
mov
mov
adc
pop
adc
and
mov
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
ljmp
fisubl
ficoms
in
jmp
jg
das
push
jnp
sbb
mov
call
push
sti
push
mull
fsubs
jl
sbb
sbb
adc
std
and
add
mov
jecxz
loop
jecxz
loop
loope
in
call
in
into
icebp
xor
cmp
or
adc
ljmp
adc
sbb
push
pop
xchg
sbb
sbb
add
push
jl
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
jg
push
sub
sahf
adc
adc
adc
adc
adc
clc
lcall
pmaxub
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
add
jecxz
out
jmp
out
pslld
cli
incl
add
cmpb
adc
mov
and
and
pop
leave
sbb
adc
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
mov
jmp
daa
ljmp
push
std
xchg
mov
add
call
or
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
xor
lcall
out
cmc
jmp
jmp
fcomip
xor
ljmp
sar
filds
or
or
or
or
or
inc
or
or
or
or
or
pop
add
cld
dec
pop
icebp
inc
in
repz
pop
jmp
incl
out
push
repz
pop
mov
stc
mov
mov
xchg
add
pop
cmp
add
adc
sbb
and
pop
adc
jg
mov
cld
sub
out
xor
inc
lock
mull
jne
dec
negl
dec
clc
in
decl
cmp
cmc
ss
out
hlt
xor
lret
sti
and
jmp
pushf
or
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
or
call
add
clc
js
mov
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
testb
mov
cmp
sbb
or
ret
adc
ljmp
sar
bound
pop
xchg
add
std
jb
imul
cmc
in
icebp
shl
gs
icebp
inc
and
in
mov
dec
in
fucomip
mov
out
icebp
es
jo
add
xor
adc
sbb
and
es
ja
and
sbb
shll
loop
xchg
clc
adc
out
out
in
out
jmp
and
cmpsb
call
xchg
out
inc
repnz
and
testl
pusha
lcall
pop
ret
les
add
add
cmp
es
adc
hlt
mov
arpl
in
cmc
mov
mov
jnp
lds
cs
call
repnz
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
ljmp
pop
stc
push
dec
push
nop
adc
les
mov
cmp
xchg
testl
icebp
pop
icebp
call
icebp
in
in
out
shr
mov
out
ljmp
insb
ds
sub
push
or
int
call
and
sub
and
jnp
das
clc
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
in
fdiv
stos
add
xor
sub
lock
mov
or
into
sbb
and
call
enter
repnz
xchg
adc
test
out
push
sub
jecxz
call
fmull
push
mov
pushl
cld
test
jle
or
adc
sbb
push
pop
hlt
jmp
sbb
xchg
in
mov
mov
fdivrp
ficoms
loopne
popf
out
jmp
insb
repz
cmpsb
mul
clc
popf
stc
dec
mov
jbe
inc
or
adc
pushl
fistpl
and
xchg
daa
sub
sbb
sbb
aam
lock
in
incl
cld
fildll
aam
cld
fstps
js
stc
and
icebp
incl
and
inc
adc
adc
adc
test
mov
push
adc
adc
adc
das
push
mov
cld
sti
cmc
ljmp
xor
bnd
loope
fnsave
insb
out
out
jmp
jg
sar
mov
push
in
popf
repnz
sbb
in
cmp
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
ljmp
ljmp
sub
mov
adc
push
add
push
popf
or
or
or
jmp
or
add
ss
inc
clc
sar
dec
div
stc
daa
add
add
add
mov
add
push
sti
fcomip
push
popa
lock
mov
clc
add
push
lock
or
mov
adc
adc
sbb
fucomip
testb
add
cli
in
hlt
sbb
fucomip
xor
jmp
out
push
push
cld
jmp
aas
pop
inc
or
adc
or
or
add
adc
inc
cld
aam
mov
add
and
or
push
add
jmp
jecxz
add
inc
repnz
cmc
inc
stc
push
sub
mov
clc
repnz
adc
cmp
adc
punpckhwd
cmp
decl
mov
sti
sar
xchg
negl
testl
cmc
enter
lahf
repnz
mov
cli
mov
xchg
sub
mov
idiv
jmp
sub
lock
or
in
sbb
and
and
and
and
and
decl
adc
sbb
hlt
int3
in
mov
pop
inc
out
jmp
dec
or
ret
mov
cld
pop
cld
adc
sahf
cli
mov
cs
mov
push
iret
or
adc
pusha
sbb
sbb
and
and
adc
add
lret
incl
adc
sbb
cmc
loop
jecxz
out
ljmp
cmp
mov
out
clc
decl
sub
or
pop
or
or
cmp
or
adc
mov
adc
or
stos
add
stc
adc
jmp
ljmp
loopne
loop
in
jmp
sbb
push
int
or
popa
std
inc
std
in
sti
cli
clc
push
neg
add
pop
test
ljmp
xchg
cli
or
push
or
push
push
adc
adc
and
mov
pop
jl
cmp
aad
adc
xchg
cmc
push
out
mov
push
push
jle
ds
das
sti
jb
loop
add
add
push
pop
aad
pop
mov
aas
icebp
call
mov
add
add
pop
inc
or
or
mov
fs
or
or
mov
pusha
push
jg
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
or
or
push
dec
adc
adc
incl
or
add
xchg
shll
sti
mov
add
add
mov
bound
add
inc
push
std
cmp
xchg
repnz
in
inc
in
fldz
sbb
adc
test
add
or
and
decl
adc
add
testb
ljmp
jne
test
into
notl
call
sub
adc
push
push
or
add
idiv
repnz
icebp
clc
mov
movsb
lcall
fsts
es
or
pop
jecxz
jg
sbb
ret
cli
jmp
jmp
gs
lock
push
cld
icebp
call
inc
js
pop
adcb
xor
push
jl
xchg
xor
stc
push
stc
outsb
in
mov
incl
pop
push
jae
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
scas
sar
out
pop
out
cmpsl
lock
repnz
cld
dec
add
add
filds
or
test
or
or
or
or
ljmp
clc
or
cli
sti
cmp
repz
inc
in
cli
call
filds
jo
xor
jb
ret
ljmp
std
jne
or
scas
jg
jg
sahf
sbb
sub
scas
and
push
scas
cli
or
pop
push
add
lock
cmp
in
or
decl
lock
scas
repnz
negl
cli
jmp
add
repnz
cmpsl
or
lds
lcall
sbb
call
add
pop
or
add
inc
imulb
jmp
in
inc
out
mov
imull
cld
add
pop
add
add
add
add
add
add
mov
sar
testl
mov
lods
fiaddl
repnz
adcl
sbb
adc
std
pushl
push
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
loopne
mov
pusha
sub
add
add
mov
cmp
push
lcall
repnz
lahf
negl
inc
push
xlat
push
cld
add
push
mov
ljmp
ret
mov
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
cli
push
cli
jno
pop
pusha
cld
mov
std
mov
out
and
std
dec
cld
sar
inc
std
leave
cld
adc
mov
add
std
add
pop
adc
pop
or
or
fimuls
mov
lahf
add
push
mov
test
inc
std
sar
mulb
pop
stc
sbb
cmp
dec
push
std
aas
stc
mov
and
inc
notl
clc
xor
sar
fs
sub
add
stos
cmpsl
pop
dec
push
or
incl
or
or
pop
xlat
add
ja
sub
xchg
call
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
imul
out
fdiv
ret
clc
mov
push
pop
jl
dec
add
icebp
or
rolb
push
add
add
inc
decb
push
data16
cmp
and
push
push
pop
add
xor
sbb
mov
mov
testb
jbe
dec
or
insb
add
sar
sub
sbb
pop
push
push
mov
jmp
add
mov
hlt
dec
sbb
add
add
std
push
cli
pop
cli
jg
lcall
cmc
mov
pop
cmc
imul
clc
add
dec
add
or
xchg
adc
mov
data16
incb
sti
xor
das
clc
mov
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
inc
ret
pop
cmp
orb
or
insb
or
jg
loopne
cs
add
add
xor
jbe
push
std
jecxz
fst
std
cmp
mov
add
scas
outsl
mov
sahf
add
add
add
dec
cli
jns
xor
dec
loope
pop
clc
ljmp
loope
dec
add
outsb
or
or
add
jb
stc
adc
ljmp
das
lock
out
cmc
out
or
out
aad
jmp
out
js
adc
sub
jmp
or
orb
or
or
or
or
or
mov
decl
dec
or
test
add
into
sti
dec
clc
mov
xor
xchg
jg
daa
lock
and
cmp
add
sbb
cmp
add
mov
pop
or
pop
ret
repnz
adc
fiaddl
cmp
pop
data16
incl
clc
xchg
inc
add
add
add
mov
pusha
std
pop
icebp
mov
das
std
dec
cld
stos
sti
pusha
sti
sar
xchg
or
lcall
mov
add
add
mov
add
sub
sub
addb
outsb
loope
fnsetpm(287
cld
dec
dec
cli
gs
adc
pop
ja
add
add
jmp
add
add
add
add
add
add
roll
add
mov
decl
cmpsb
mov
lcall
pop
clc
mov
pushl
test
hlt
or
jle
mov
je
mov
js
mov
bound
jp
mov
mov
jp
push
stos
or
out
loop
mov
add
fildll
dec
std
pop
sti
clc
inc
notl
cmc
xchg
addr16
inc
jg
fdivp
test
cmpsb
inc
test
cmc
stc
int
stc
outsl
cli
idiv
data16
sti
lods
cld
hlt
std
js
dec
add
push
sub
rorl
xlat
incl
jp
or
or
add
inc
cld
psubw
and
push
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
hlt
incb
mov
outsl
or
rolb
or
std
xchg
std
cwtl
std
ljmp
push
or
cmpsl
add
add
das
or
or
or
daa
pop
cmpsb
std
add
push
std
xor
push
jmp
cli
stc
insl
stc
add
mov
jmp
pushl
stos
add
add
cld
test
subl
stos
or
repnz
repz
xchg
test
es
push
add
add
add
out
xchg
leave
or
push
or
rorl
or
add
call
call
mov
mov
sbb
push
aad
ds
mov
decl
cmc
sti
repz
repnz
bnd
js
lock
sub
notb
add
push
add
clc
fnstenv
addr16
mov
pusha
or
pop
and
dec
push
dec
add
add
mulb
lock
clc
xor
not
divb
fidivrl
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
movb
movb
or
inc
inc
or
or
aad
mov
or
or
or
add
push
add
dec
std
sbb
cmp
mov
cli
or
cmpxchg
cmpsb
sti
mov
cld
inc
std
test
sar
fscale
inc
mov
ljmp
std
arpl
dec
std
inc
std
or
push
std
dec
bound
pushl
std
sbb
decb
cmp
sar
cmp
add
inc
add
add
add
jo
and
mov
add
mov
xchg
cld
cli
push
cli
sbb
jmp
clc
mov
shl
xor
divl
testb
pop
clc
mov
xchg
xchg
sti
xchg
scas
ljmp
xor
outsl
cli
fbstp
rorb
iret
or
or
or
or
push
mov
add
add
dec
out
ljmp
mov
push
mov
sti
aaa
sti
movsl
cli
adcb
cli
xchg
cli
out
mov
std
mov
pop
xor
inc
add
or
cwtl
or
aas
fs
sbb
or
or
add
jo
aad
add
cltd
add
sti
xor
gs
xorb
sub
pushf
std
add
xor
sub
xchg
orl
add
call
lcall
inc
add
add
call
jmp
sti
aad
xbegin
mull
clc
jmp
das
subl
std
lods
lcall
pushf
add
mov
and
mov
add
xchg
jmp
std
ret
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
push
aad
fstpt
incb
add
add
sti
add
mov
call
mov
xor
fiaddl
movsb
add
cs
cmc
sbb
lahf
add
dec
add
add
sbb
addl
sbb
fwait
push
sbb
and
outsl
cld
push
std
pop
pushl
lret
in
filds
rolb
add
add
dec
add
xchg
add
add
mov
xor
xchg
xchg
lock
adc
in
jle
xchg
std
popf
sub
add
add
add
mov
mov
pusha
fisttps
cmp
call
mov
add
outsb
clc
incl
test
add
add
add
add
inc
add
cld
mov
imul
sti
pop
sti
mov
sti
imul
fs
jle
std
fidivrs
fdivp
incl
std
jp
in
xchg
daa
sti
cli
push
or
dec
cli
es
cmp
gs
data16
add
sahf
mov
jmp
add
add
insl
cld
pop
jno
decb
push
add
mov
mov
add
setno
push
rolb
sti
sub
cmp
std
jge
mov
and
push
incb
rolb
int3
mov
popf
inc
pusha
push
sub
gs
add
ret
adc
pop
icebp
dec
push
int
pop
push
sub
in
sub
aas
mov
lret
sti
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
mov
add
pop
add
add
scas
incl
add
inc
add
das
add
add
push
adc
add
clc
or
pop
add
pop
sub
sub
and
add
dec
mov
add
stos
mov
fcmovbe
mov
sub
jns
cltd
sti
int
xlat
stc
idiv
push
clc
cwtl
testl
mulb
test
pop
lock
fincstp
mov
sti
sbb
stc
xchg
add
imul
push
jg
xor
or
mov
push
cmpsl
add
add
cmpsb
add
std
movsl
cld
idiv
push
sti
push
sti
cmp
jmp
ds
push
lret
pusha
std
or
incl
lcall
aaa
add
mov
clc
add
sub
add
loop
inc
add
pop
or
add
out
jnp
jmp
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
std
repnz
cmpsb
mov
cmp
add
add
std
mov
add
insl
add
scas
add
jno
add
add
jp
mov
mov
add
add
sbb
push
mov
ficompl
mov
cli
scas
mov
std
aam
jb
in
adc
pop
add
or
mov
cltd
cld
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
jg
decl
stc
test
mov
inc
cli
jo
mov
cld
std
pushl
cld
loope
inc
jmp
xchg
add
push
outsl
pop
mov
jge
stos
or
jg
mov
mov
sub
out
mov
adc
mov
and
ficomps
js
jb
lcall
sti
or
std
xor
sbb
push
xchg
add
inc
xchg
push
aad
jmp
and
dec
push
inc
push
out
add
jbe
mov
incl
ret
cld
add
push
sti
iret
cli
pop
cli
daa
push
insb
outsl
clc
dec
jae
pop
inc
sti
out
sub
std
enter
cmpsb
call
fadds
roll
add
add
push
push
add
faddl
es
add
or
push
outsl
add
pop
jnp
cmp
emms
pop
push
xor
pop
push
sub
mov
dec
scas
add
inc
testb
stc
decl
xor
dec
lods
std
xor
sar
cld
in
sti
jl
sbb
cmc
incl
mov
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
ja
xchg
dec
push
inc
mov
xchg
add
add
jg
shll
flds
fiadds
add
sar
xor
push
add
decl
ss
jns
idiv
jno
or
cmc
sti
pop
mov
cld
mov
movsl
std
or
outsb
fsin
and
cmp
lcall
add
add
sub
js
mov
add
add
xchg
add
add
add
subb
inc
add
lock
pop
stos
decl
stos
pusha
mov
jmp
paddd
arpl
mov
pop
jmp
pushf
add
add
add
pop
add
adc
add
faddl
add
add
cmp
inc
add
add
add
ret
pop
das
add
add
pop
data16
fdivr
pop
shll
ret
std
push
lret
push
mov
fiadds
add
add
lcall
cld
mov
pop
incb
mov
std
or
xchg
testb
add
push
cmp
cmp
lods
push
jnp
aaa
add
push
stos
sub
ljmp
not
pop
scas
pop
sahf
mull
ficomps
std
xor
add
sahf
add
jl
sbb
add
sub
jmp
add
sahf
leave
add
push
aaa
jb
push
sbb
mov
outsb
add
add
enter
jg
sti
add
ljmp
out
cmpsb
push
jl
stos
std
pop
fdivp
cmp
incl
mov
sbb
nop
mov
add
add
add
movsb
add
jbe
fisttps
xlat
pop
cs
lcall
outsb
and
fildl
and
add
add
jmp
daa
or
repnz
mov
sahf
push
call
jmp
call
cmp
test
sub
add
jmp
pop
add
add
add
add
add
push
adc
pop
cmpsb
mov
std
fdivr
stos
cld
xchg
cld
mov
cld
add
xor
mov
mov
ljmp
lock
out
sti
es
sub
mov
std
insb
std
sbb
sar
mov
idiv
xchg
decb
orb
loope
lcall
mov
xor
sbb
push
add
xor
cli
sbb
test
imul
inc
es
xchg
and
add
insl
add
addl
add
cld
sub
or
cmp
mull
daa
pushl
inc
mov
mov
add
add
loopne
lock
push
mov
mov
cmpsb
mov
cmp
testb
mov
sahf
ss
imul
xchg
mov
ljmp
scas
cmp
mov
adcb
add
mov
sbb
xchg
add
pop
pop
mov
in
mov
jg
pop
test
out
ret
ss
bound
out
mov
pop
loope
std
lahf
cs
int
sahf
cld
push
cld
inc
cld
arpl
lcall
sahf
mov
sub
stos
ret
lahf
nop
movsb
inc
rolb
mov
int
aad
lcall
mov
into
mov
ss
sbb
out
push
shr
or
cmp
loop
pop
jb
add
test
lret
add
cmp
add
and
add
add
sub
adc
orb
fimuls
in
std
mov
ja
and
incl
dec
or
add
sbb
add
cmpsb
sbb
faddl
test
push
and
loop
mov
jle
ljmp
ljmp
pushl
push
sub
inc
and
xor
sbb
sub
add
add
test
fbld
add
adc
push
mov
loopne
mov
add
add
adc
dec
or
or
mov
push
int3
cld
frndint
mov
sar
cmp
cld
idiv
sbb
pop
std
mov
decb
mov
add
pop
or
fiadds
push
fimull
mov
push
mov
decb
lret
std
shlb
or
mov
xchg
mov
sti
sti
std
sti
xchg
cld
sbb
loope
sahf
lcall
mov
stos
incl
hlt
add
shlb
add
loope
in
add
add
ret
lret
xchg
or
js
scas
xor
push
adcl
push
sar
in
call
cs
pop
mov
sar
pop
pop
es
mov
add
call
add
add
add
jecxz
xchg
cs
pop
add
jmp
shll
pop
mov
lock
push
add
xchg
icebp
jo
loopne
add
mov
xor
dec
add
loop
add
outsl
mov
push
decl
popa
cs
lods
decb
loop
add
bound
ret
jmp
leave
shrb
inc
shl
cmp
lcall
bound
or
jecxz
out
inc
mov
pop
or
hlt
addr16
sbb
leave
std
jle
mov
std
push
hlt
cld
enter
loop
xor
es
shlb
push
fisubl
jg
filds
outsl
pop
xor
push
lods
loopne
bound
and
into
xchg
add
clc
stos
mov
inc
call
add
jne
pop
aas
lods
pop
add
ret
decl
mov
repz
movsl
pop
push
add
mov
push
add
mov
jo
mov
ret
xchg
jne
and
or
and
inc
pop
std
cmp
ret
mov
jle
add
add
test
pop
push
outsb
nop
push
xlat
add
add
shlb
adc
fcoms
pop
ljmp
push
push
rcll
inc
xchg
fsin
cmpsl
decb
shrb
push
push
pop
rol
sub
inc
out
scas
xchg
mov
jecxz
cmp
bound
decl
imul
add
lods
ljmp
std
std
add
or
std
add
cld
adc
loopne
push
xor
jg
mov
mov
jp
push
pop
add
cmp
loopne
sbb
out
add
add
lcall
data16
fcmovbe
inc
fisubrl
mov
shl
sahf
aam
xor
repnz
mov
loope
sahf
xchg
stos
pop
or
pop
roll
jle
aam
out
inc
xor
add
out
push
mov
add
xlat
or
or
dec
add
ss
add
sub
shlb
sub
xor
mov
add
add
dec
ficoml
cmpsb
sbb
mov
mov
stos
xchg
mov
idivb
scas
rorb
ljmp
call
fwait
stos
push
test
lods
rclb
fdivr
add
xor
mov
out
sbb
outsb
lahf
add
push
fwait
mov
mov
shrb
lret
jb
outsl
lcall
iret
jp
push
scas
or
subb
pushl
cmc
sbb
test
mov
out
cmp
data16
mov
jle
add
mov
lret
pop
loop
js
add
xchg
inc
sub
dec
xchg
cmp
mov
add
aaa
xor
inc
mov
add
sbb
cmp
scas
ret
push
mov
xor
jae
rolb
cld
push
loopne
mov
ret
mov
cmp
sbb
pushf
adc
cmp
jo
pop
ss
push
loopne
mov
shrb
push
pusha
pop
cli
sbb
push
jne
jl
pushl
decl
or
lcall
popw
decl
push
fiadds
scas
cltd
decb
inc
jl
adc
std
ss
std
cmpsl
std
cmpsb
std
sub
xor
sbb
push
aas
test
jl
pop
test
lds
jp
ret
cmp
add
adc
jmp
adc
push
mov
xor
je
jo
and
cli
loop
pushl
in
ljmp
adc
mov
push
add
lgdtl
push
pop
inc
xor
es
call
mov
aam
cli
cmp
sahf
rcl
cli
mov
je
out
cmpsb
mov
mov
scas
sub
jecxz
dec
fimuls
out
cmp
push
mov
dec
fnstenv
lock
ret
lret
cmc
mov
sub
mov
cmp
mov
xchg
fucomip
call
or
sbb
jg
aaa
and
rcrb
inc
inc
bound
sbb
test
loope
sbb
clc
or
adc
mov
or
iret
inc
inc
test
dec
cli
mov
roll
loopne
mov
pop
outsb
xchg
mov
or
inc
repnz
push
push
fidivrs
imul
data16
xor
je
lock
aam
mov
scas
sub
mov
out
inc
pop
ss
cmpsb
outsb
ja
sbb
xor
push
test
cmpsl
and
iret
add
cmp
cmp
pop
scas
pusha
dec
jns
mov
xor
dec
mov
sahf
jns
jnp
js
insb
lret
cltd
lcall
lock
push
clc
add
js
dec
stos
mov
cmp
xor
notb
sbb
mov
pop
outsb
adc
scas
push
cmc
jp
std
sbb
bound
xchg
dec
cs
xor
mul
lret
test
push
inc
mov
aad
xchg
inc
sbb
pop
jle
mov
mov
rorl
mov
test
outsb
mov
outsb
push
pop
mov
int3
push
test
mov
dec
xlat
jo
dec
add
dec
push
xchg
imul
test
into
div
mov
mov
push
inc
movsb
xchg
xchg
push
push
cmp
jb
jge
lahf
es
cli
push
lods
outsl
lret
dec
lea
out
adc
aad
push
scas
ret
testl
repz
fcomi
inc
xchg
pop
fiaddl
out
fstps
inc
mov
push
adc
cli
and
inc
pop
cmp
mov
or
mov
xchg
repnz
cld
jmp
adc
push
push
cmp
ret
jmp
push
lret
fadd
adc
push
or
and
jge
iret
andl
and
pop
dec
add
sbb
sarb
cmp
push
push
jns
pop
pop
pop
xor
push
daa
faddp
dec
repnz
mov
xchg
push
ds
sahf
mov
out
xchg
mov
push
add
push
dec
shr
test
fimull
inc
jp
add
pusha
sahf
cli
add
mov
idivb
push
push
add
jp
mov
xchg
pop
out
jnp
pop
cld
sbb
popa
pop
xor
sbb
jne
outsb
lock
push
aam
in
sbbl
popl
mov
bnd
lret
mov
jmp
sbb
mov
fsubrl
sub
mov
dec
lea
inc
mov
out
mov
rorb
jg
loopne
movb
xor
inc
mov
jb
lret
jnp
xchg
movsl
fidivrl
loop
mov
dec
sub
pop
pop
pop
out
mov
and
jbe
ret
pop
dec
fsubrp
mov
push
sbb
loop
pop
push
ret
aad
test
xchg
mov
pop
dec
add
xchg
int
mov
or
sub
add
call
fadd
inc
in
lcall
aaa
xchg
cmp
and
imul
pop
dec
push
or
cmp
rcr
push
xchg
out
mov
xlat
test
jg
je
js
xor
dec
gs
pop
loope
or
push
lret
sbb
or
or
adc
lock
pop
test
js
stos
out
mov
adc
cs
sbb
xlat
scas
mov
lea
sbb
jbe
inc
and
push
and
mov
push
or
pop
in
mov
mov
into
push
cmpb
jno
outsl
pop
cmpsl
fstl
mov
push
imul
fisubrs
pop
add
jl
addb
shll
rolb
cmp
out
xlat
xor
cmp
xor
cmpb
adc
lds
div
cli
sbb
add
add
push
mov
cli
jp
cmp
sub
inc
or
loope
jns
mov
cwtl
out
jmp
repnz
loop
push
add
ficoms
into
mov
into
add
inc
jne
dec
test
jge
faddp
mov
push
sbb
push
scas
push
sub
jbe
imul
dec
out
lcall
ds
rol
cmp
push
mov
das
push
pop
pop
sbb
jp
ss
mov
sti
pop
movl
xchg
xor
sub
imull
cmp
xor
or
jnp
jnp
mov
sub
ss
inc
scas
inc
cs
mov
sbb
or
mov
rcll
out
scas
adc
sbb
add
repnz
dec
loopne
negl
dec
divl
inc
sub
sbb
fisubrl
fstpl
leave
daa
pop
pop
loopne
xchg
jbe
sub
cmp
test
add
testl
rcr
ss
and
pop
pop
pop
push
jle
dec
jmp
or
cmp
dec
xor
scas
ret
enter
jp
ljmp
scas
scas
mov
not
inc
xchg
fsubrs
jb
inc
push
or
mov
push
cs
add
lcall
fisubs
jp
add
lds
dec
aam
iret
inc
push
faddl
out
and
dec
and
loop
ljmp
add
push
out
ret
das
xlat
push
out
loop
jb,pn
lret
mov
mov
inc
add
sbb
mov
add
add
faddl
and
cmp
inc
sbb
movb
or
jp
mov
std
push
mov
push
fcmovb
jnp
in
aad
push
out
mov
mov
cld
and
mov
jmp
push
push
aad
xorl
hlt
inc
sti
repnz
push
mov
ss
out
loope
xor
lret
adc
adc
mov
inc
and
ss
in
out
cmp
add
mov
push
sbb
jnp
fiaddl
dec
out
imul
mov
lret
js
call
push
inc
sbb
pop
jnp
inc
aaa
inc
xchg
stc
push
or
out
mov
cli
data16
in
sub
clc
dec
sahf
push
pxor
add
adc
or
loopne
cmpsl
jecxz
mov
pop
mov
or
loope
addr16
lcall
lcall
sub
out
loopne
push
pop
hlt
jmp
cld
out
ds
movl
mov
js
add
add
or
out
sub
fisubs
sbb
add
inc
sbb
sbb
sbb
add
daa
add
cmp
ss
push
out
pop
imul
sahf
or
sbb
sub
out
popa
mov
push
clc
add
fidivrl
cld
out
not
cmc
jo
xchg
emms
inc
popl
mov
or
pop
jp
push
push
pop
sysret
ret
shrl
add
add
adc
fdivp
push
mov
add
scas
pop
loopne
lret
scas
dec
push
dec
adc
cmpsb
push
or
cmc
xlat
or
ds
pop
mov
pusha
lock
push
cmp
arpl
adc
add
add
into
loop
les
std
cmp
or
ja
cmp
fcomi
push
fimuls
mov
call
inc
xlat
insl
mov
add
sti
aas
mov
testl
in
sub
or
incl
sbb
loope
cld
pusha
loopne
sub
xchg
sub
xor
outsb
push
adc
jo
sub
in
inc
addb
and
jl
fstpt
mov
jnp
jns
jle
addb
fstpt
add
es
xorl
push
aaa
sbbl
jns
jp
stos
addl
pop
mov
cmp
sbbb
jle
jg
jp
js
dec
test
jnp
inc
cmpl
cmp
addl
jl
mov
mov
jle
jp
test
rolb
cmp
stos
ljmp
fisubs
test
add
jl
xor
ljmp
xchg
insl
sbb
xchg
mov
outsb
push
lcall
test
lea
cltd
mov
dec
aas
incl
cmp
stos
cmpsb
popf
mov
pop
pop
data16
mov
mov
pop
inc
cmp
cmp
push
andb
push
dec
inc
dec
pop
ja
movsl
mov
mov
mov
jbe
cmp
idiv
cmp
xor
xchg
lods
mov
pusha
dec
dec
dec
pop
jno
cmpsb
ds
mov
imul
fistl
ds
outsb
lea
jge
inc
push
bound
ds
mov
stos
sahf
xchg
xchg
xchg
lea
inc
ds
outsl
xchg
stos
mov
stos
cwtl
jns
push
push
push
ljmp
xchg
test
pushf
xchg
nop
mov
dec
dec
push
inc
dec
test
test
pop
popa
mov
popf
stos
cwtl
stos
notb
cmp
outsl
xchg
test
ljmp
jmp
push
pop
bound
cmpsb
mov
lods
mov
pop
dec
inc
dec
inc
dec
popa
sbbl
mov
pop
arpl
xchg
mov
xchg
xchg
xchg
jg
inc
aas
std
jne
decl
bound
xchg
subl
mov
mov
mov
xchg
jns
inc
dec
inc
dec
data16
push
pop
popa
jb
xchg
fstpt
mov
cltd
xchg
inc
cmp
jne
cmpsl
lods
movsb
sahf
mov
add
mov
divb
pushf
scas
mov
test
cmp
mov
pushf
stos
lods
mov
push
pop
addr16
movsb
mov
lods
mov
add
ljmp
cmp
dec
inc
push
jne
movsl
lods
cmpsl
popf
ja
jo
mov
stos
mov
lcall
mov
cld
fistps
imul
mov
cwtl
xchg
xchg
cmp
pop
jle
or
nop
cld
pushl
xchg
pop
pop
jae
lcall
dec
cmp
inc
push
je
mov
push
inc
xchg
jle
pop
cmpsb
insl
adcl
lcall
dec
push
pushf
test
test
lcall
subb
sahf
scas
mov
cmpsb
mov
inc
cmp
idiv
mov
movsl
lods
cmpsb
sahf
mov
pop
pop
gs
xchg
test
cltd
mov
cmp
loope
aaa
cld
dec
dec
pop
jp
mov
imul
aaa
fdivrs
nop
outsb
dec
ds
cmp
xchg
mov
clc
mov
in
jle
mov
mov
cmp
mov
outsb
mov
subl
jl
fwait
stos
or
clc
call
dec
dec
push
adcb
gs
lock
call
sahf
popf
xchg
mov
dec
dec
push
dec
pop
jne
popf
mov
ljmp
in
mov
stos
cmpsl
jbe
mov
push
dec
push
push
pop
insl
sub
add
xchg
pushf
sahf
fwait
xchg
test
arpl
jp
cltd
mov
jbe
jecxz
lcall
push
pop
push
pop
jne
xchg
lcall
imul
movsb
pushl
pop
ficoms
pop
push
pop
pop
pop
push
lea
imul
ja
cs
jp
xchg
lahf
movsl
mov
push
in
lcall
xchg
xchg
mov
jb
xchg
sahf
mov
decl
pop
pop
bound
jb
mov
insl
outsb
jo
xorb
mov
jnp
jbe
fs
pop
pop
lock
mov
js
dec
lcall
ljmp
imul
mov
jl
lea
aad
lea
jg
push
lods
add
cmp
scas
int
jge
lea
cmpb
std
stos
popa
outsl
insl
adc
mov
mov
mov
test
xorl
pop
lcall
push
orl
lea
jne
jb
imul
sbb
adc
xchg
jno
imul
push
mov
xchg
flds
das
decb
jo
add
add
jbe
test
lock
add
xchg
js
dec
mov
mov
mov
add
mov
movb
xchg
jle
imul
jne
mov
add
adc
jnp
or
fisttps
and
arpl
jbe
nop
cwtl
popf
fwait
xchg
lea
add
xor
adc
loope
jne
fidivl
jle
nop
xchg
xchg
mov
sbb
xor
jl
cli
mov
push
testb
je
mov
xchg
nop
mov
lods
sti
js
jnp
test
sbbb
js
jb
jle
outsb
pop
adc
mov
cmpl
int
inc
test
cmp
jae
fwait
outsb
jno
and
mov
lock
mov
jne
jp
xchg
stos
jb
jp
loope,pt
xlat
mov
mov
test
subl
fcmovb
shlb
jge
cmp
pusha
and
pop
cmp
cmpl
addb
pop
pop
out
mov
push
fnstsw
cmp
jnp
int3
mov
cmpb
cmpb
fnsave
insl
jge
jle
sbb
cmp
mov
add
pop
inc
repz
cmp
xchg
arpl
pop
sbb
cmp
and
pop
ret
mov
lods
repz
fnstenv
fstpl
js
sub
sbb
int
adcl
test
pop
or
adcl
mov
jb
mov
jnp
sbb
sbb
popf
push
loopne
jmp
xor
fstpt
lock
fwait
cltd
pop
xor
test
sub
mov
ret
fcmovu
or
insb
xor
addr16
xor
add
mov
push
aas
int
or
fidivl
cmp
mov
fsubs
aaa
mov
ja
add
aas
adc
jno
jae
sub
adc
push
outsl
mov
lds
pop
and
insl
cmpb
push
or
outsl
rolb
and
mov
mov
sbb
scas
sbbb
push
test
add
outsb
sub
adcl
sbbl
lahf
add
repz
xchg
mov
addl
addb
fistl
fcmovnbe
jno
outsl
adc
sub
jnp
push
cmp
addb
push
inc
or
inc
mov
pop
mov
imul
mov
push
push
adc
or
adc
mov
lret
xor
imul
mov
pop
fcmovnu
mov
cmp
xchg
pop
pop
fdivs
push
xchg
fwait
xor
mov
pusha
clc
mov
or
divb
adc
jge
pop
andb
iret
push
or
or
in
or
jno
adc
fwait
inc
jmp
xor
mov
adc
adc
sub
mov
sub
mov
inc
cmpsl
push
fidivs
mov
or
pop
mov
inc
pop
lahf
jge
adc
cmpsb
add
ljmp
adc
test
adc
js
je
je
jp
addl
test
not
xor
out
jg
insb
imul
jl
out
sub
mov
test
push
mov
fs
xchg
mov
fildll
jne
jne
jnp
xchg
lea
jbe
mov
orl
ja
je
jae
jp
mov
std
fcmovnu
mov
js
pop
inc
arpl
xchg
xchg
xchg
nop
mov
jae
jo
sti
mov
jle
mov
mov
gs
addr16
nop
and
cli
fisttpl
push
outsl
jbe
mov
xchg
pop
addb
mov
data16
pusha
jb
mov
jo
gs
jmp
jns
lea
xchg
mov
popa
pusha
push
nop
xchg
cltd
cltd
push
ljmp
imul
jno
test
inc
dec
mov
pop
pop
imul
decl
ret
outsl
push
pusha
push
pushf
jge
cwtl
mov
xchg
insb
clc
jg
mov
ja
xor
pop
imul
cmpsb
lahf
and
fists
xchg
pop
pop
push
imul
mov
cmpsb
xchg
mov
mov
incl
imul
pop
push
push
pop
popa
test
mov
fcomip
lods
mov
lcall
bound
test
dec
dec
mov
pop
pop
data16
mov
scas
movsl
lcall
dec
push
fcomip
mov
ds
jge
mov
shll
inc
dec
push
pop
inc
mov
pushl
cld
mov
stos
mov
xchg
inc
and
outsl
mov
stos
xchg
je
dec
scas
mov
dec
pop
fs
xchg
cmpsl
mov
mov
cwtl
xchg
aas
sbb
xor
xor
mov
mov
jne
dec
ds
push
pop
fs
xchg
lcall
fldt
xchg
dec
pop
sub
xor
mov
lahf
andb
aaa
inc
inc
push
pop
pushl
stos
mov
mov
fwait
cltd
cwtl
pushf
jne
adc
xor
jns
leave
fmul
mov
jae
sub
sbb
inc
sub
data16
mov
mov
mov
cmp
and
push
sub
ret
fst
lds
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
scas
movsb
sahf
mov
sbb
pop
push
xchg
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
pushl
mov
mov
or
and
sbb
mov
mov
imul
ds
xor
stos
ds
lods
lods
jge
or
sbb
jmp
pop
lcall
sbbl
and
xchg
scas
mov
sbb
lcall
dec
xchg
dec
unpcklps
lods
int3
fsubp
fcmovnb
cwtl
jae
aaa
daa
sbb
cmp
mov
or
stos
mov
mov
and
sbb
popf
mov
xlat
jecxz
shrb
sbb
xor
popf
mov
enter
scas
lods
test
or
adc
decl
cmovns
loopne
xchg
jo
xor
push
sub
push
outsb
scas
ret
ror
ret
mov
pushl
xchg
dec
adc
sbb
pop
xor
out
into
mov
push
and
dec
andb
iret
rcl
enter
mov
bound
adc
or
and
in
fnstenv
push
push
jg
outsl
ljmp
inc
popa
jge
mov
into
dec
lret
mov
push
push
pop
nop
mov
jecxz
jle
add
dec
xor
dec
inc
pop
jns
mov
sub
lret
mov
inc
mov
and
sbb
add
pop
mov
dec
dec
xor
pushl
and
inc
pop
jp
mov
fimuls
mov
and
sbb
mov
sbb
xor
jl
mov
into
rcl
int3
mov
push
and
sbb
jg
nop
mov
loopne
lods
mov
xor
xor
jl
mov
mov
fadd
mov
sub
add
das
arpl
scas
mov
sti
sbb
and
aaa
dec
pusha
jge
leave
into
ror
xchg
mov
sub
incl
or
push
fcmovne
test
sub
xchg
scas
rol
into
lret
mov
sti
xchg
dec
and
mov
test
insb
push
xor
das
inc
push
arpl
push
leave
int
mov
dec
sub
cmp
aad
enter
cld
decl
ss
push
data16
mov
sub
jle
decl
aaa
pusha
andb
sub
ss
inc
push
js
cmpsl
ljmp
inc
aam
enter
xchg
push
xor
and
xchg
jg
pushl
lcall
inc
pop
outsl
test
lds
call
and
jno
lods
ror
mov
mov
inc
cmp
push
push
fwait
scas
mov
push
js
shlb
or
ss
jno
stos
mov
stos
mulb
or
xchg
stos
mov
rcr
sti
pushl
daa
or
ss
insl
xchg
jns
dec
inc
inc
dec
fs
in
mov
xchg
test
mov
int
scas
mov
sub
sbb
push
insb
xchg
inc
mov
pop
push
inc
inc
inc
dec
arpl
cmpsb
mov
in
enter
pop
cld
stos
push
and
imul
cmpsl
cwtl
andb
inc
mov
dec
pusha
jne
movsb
dec
or
leave
mov
das
push
cld
decl
sbb
cwtl
lods
mov
pop
dec
inc
inc
dec
pop
outsl
xchg
ljmp
xchg
or
cmp
xor
jbe
movsb
jp
int
jg
lods
mov
inc
inc
dec
pop
insb
test
shlb
call
sbb
dec
pop
je
lahf
mov
mov
mov
dec
inc
inc
push
addr16
cmpsb
mov
mov
lods
test
sbb
inc
push
push
adc
test
push
lock
pop
dec
dec
sub
sahf
mov
out
iret
mov
mov
popa
inc
dec
cmp
and
imulb
push
dec
inc
dec
pop
xchg
je
adc
sbb
sarl
xor
sub
sub
popf
xchg
push
cmp
mov
je
lcall
cltd
addr16
add
inc
and
cltd
enter
idiv
stos
mov
push
dec
dec
push
fs
mov
leave
sarb
mov
sbb
pusha
jae
popf
scas
mov
loopne
js
cli
or
lcall
dec
dec
pop
push
xchg
mov
jle
dec
dec
xor
insl
clc
outsl
inc
inc
push
addr16
mov
xchg
dec
push
pop
outsb
fistl
faddl
fdivs
mov
jne
mov
roll
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
sar
fs
outsl
adcl
dec
sub
sti
pop
sarb
pop
insb
jle
movsb
xchg
test
xorl
arpl
xchg
mov
push
aam
push
push
dec
sub
push
xchg
mov
jmp
jae
pop
push
push
pop
gs
and
mov
push
dec
cld
jg
sub
mov
xchg
xorb
pop
pop
pop
data16
mov
add
mov
push
dec
xor
cmp
inc
mov
pushf
mov
test
gs
pop
pop
dec
sahf
lods
fadd
or
mov
sahf
jne
push
or
cmp
pop
push
stc
out
pop
cmpsb
lahf
xchg
xchg
pop
pop
dec
lea
lahf
jbe
pop
cld
call
sbb
cs
ja
cwtl
mov
mov
addr16
pop
pop
ret
adc
dec
scas
mov
lods
xchg
jno
push
dec
xor
add
outsl
das
push
cltd
lahf
lahf
mov
push
jb
push
lcall
mov
test
insl
pop
pop
dec
xor
imul
xchg
mov
std
mov
je
xchg
movsb
mov
rorl
test
inc
xor
incl
mov
cltd
fwait
sahf
mov
jo
pop
pop
arpl
xchg
test
or
clc
mov
call
stos
adcb
add
arpl
les
pushf
push
jg
sarb
push
dec
cmp
push
pop
push
test
xchg
mov
or
push
orl
test
inc
ss
mov
push
pop
insb
jp
xchg
loopne
lcall
jbe
insl
js
movsl
mov
xchg
add
ds
inc
dec
push
loopne
mov
outsl
addr16
loope
cwtl
test
mov
je
pop
dec
cmp
ret
pop
jl
addr16
xchg
js
lcall
cmp
jg
fwait
lods
mov
push
movsb
mov
pop
inc
cmp
push
or
push
lcall
imul
repnz
mov
sub
push
push
inc
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
jbe
bound
mov
mov
pop
push
mov
pop
push
inc
inc
jp
imul
dec
fwait
xchg
or
mov
xchg
mov
stos
decl
addr16
cmp
xchg
xchg
cltd
lcall
sarl
pushw
sub
mov
enter
add
xchg
ja
js
inc
push
pop
addr16
dec
add
inc
xchg
xchg
les
outsl
push
push
ja
jbe,pn
push
shl
mov
js
dec
clc
inc
xor
xchg
popl
jo
test
outsb
aas
cs
je
dec
cmp
xchg
cwtl
cwtl
or
dec
outsb
insb
imul
mov
mov
insl
push
lds
addr16
dec
cmp
dec
ds
dec
xchg
xchg
add
mov
push
jb
movsl
lods
mov
mov
movsl
mov
pop
dec
aaa
cmp
jae
xchg
xchg
xchg
cs
lea
insl
push
insl
je
xchg
mov
mov
add
inc
mov
dec
aas
dec
push
jl
test
fildll
clc
test
dec
push
jb
xchg
add
mov
pop
inc
aaa
inc
dec
push
dec
xchg
cs
mov
fistps
test
mov
fs
dec
lock
jae
adc
xchg
lea
mov
outsl
xchg
xchg
jp
mov
jno
mov
out
bound
inc
dec
push
pop
fdivrl
nop
adcl
nop
mov
jp
mov
and
js
push
ds
pop
pop
outsb
or
mov
mov
imul
lods
mov
mov
cltd
subb
xor
push
pop
push
test
cld
xchg
mov
push
ficompl
mov
popf
xchg
pop
dec
cmp
dec
xor
and
lahf
into
mov
push
inc
jo
mov
ret
fstpt
xchg
je
pusha
push
inc
inc
dec
in
outsl
jl
xor
cmp
shlb
insl
jbe
mov
lcall
push
in
pop
pusha
imul
xchg
ljmp
cli
sbb
dec
push
cmpsl
scas
mov
mov
popf
mov
mov
rclb
jbe
sti
xor
dec
push
mov
rorb
jnp
pop
inc
in
pusha
insb
jbe
mov
inc
xchg
in
xorl
xchg
mov
cwtl
mov
xchg
cltd
mov
pop
dec
ds
push
push
pop
in
push
pop
or
dec
js
imul
mov
cld
xchg
mov
mov
fwait
jp
inc
inc
push
popa
insl
jnp
xchg
popf
cwtl
nop
call
inc
loopne
jo
xchg
popf
movsb
cmp
pop
mov
pushf
mov
dec
aas
inc
dec
cwtl
cs
stos
outsb
rcrb
cwtl
jg
lock
dec
insl
jae
mov
mov
pop
dec
call
dec
push
push
pop
int3
xchg
xchg
or
fistps
adcl
mov
push
inc
inc
dec
push
nop
outsb
jl
orl
mov
sbb
test
mov
xchg
mov
sbbb
inc
add
push
pushf
arpl
outsb
jne
lea
shlb
sahf
xchg
xorb
inc
cmc
pop
mov
xchg
mov
out
pushl
adcl
mov
cwtl
ja
pop
pop
dec
inc
out
push
xor
cltd
xchg
mov
js
dec
mov
lcall
pusha
das
mov
dec
into
outsw
jle
out
stc
addl
test
repz
movsb
insb
bound
inc
inc
dec
xor
cli
xchg
mov
outsl
je
xchg
popf
push
mov
movsb
pusha
xor
fwait
test
addb
loop
sbbb
icebp
jg
icebp
jb
jl
push
mov
cwtl
jg
gs
dec
inc
dec
dec
jbe
mov
sahf
cli
xchg
test
lcall
nop
shrb
mov
pop
dec
inc
inc
dec
push
pop
pop
out
imul
icebp
dec
jns
push
mov
pushf
mov
arpl
shlb
inc
inc
dec
push
mov
xchg
je
fimuls
jae
push
jp
xchg
rcrb
inc
dec
dec
outsl
fidivl
push
scas
xchg
dec
cmp
push
addb
outsw
jne
pushf
sub
lahf
fdivrp
popf
jae
pop
push
inc
out
pop
gs
cwtl
popf
cmp
ljmp
jo
insl
jno
adcl
out
outsb
mov
mov
add
je
lock
insl
cmp
decl
mov
mov
push
inc
inc
inc
xor
into
push
or
or
push
mov
xchg
mov
test
jns
push
inc
dec
dec
sub
mov
jb
cmpb
cmpb
mov
add
fwait
xor
inc
inc
dec
into
and
cmp
lock
xchg
movsb
mov
cmpsb
cltd
subl
jo
push
ret
dec
inc
sbb
or
xchg
fwait
lahf
rclb
js
mov
mov
stos
pop
jno
dec
into
or
push
out
popa
insb
jp
int3
andb
fwait
xor
lea
int
jno
mov
js
inc
dec
dec
mov
mov
jo
popf
push
push
mov
jb
outsl
enter
outsl
adc
sbb
mov
dec
inc
xor
cmp
jle
pop
fs
mov
popf
mov
clc
jmp
mov
mov
test
mov
andb
inc
dec
dec
arpl
mov
aam
push
jns
outsl
xchg
insb
movsl
cmpb
cmpsl
lcall
dec
push
andb
sahf
fwait
xchg
popl
mov
scas
mov
subl
les
mov
fwait
dec
mov
cwtl
jno
std
jnp
loopne
movsb
scas
mov
dec
subb
inc
test
test
mov
mov
outsl
dec
xchg
cltd
cmpsb
mov
mov
movsl
xchg
jge
cmc
out
fimuls
push
push
aad
mov
push
jne
outsb
dec
jb
xchg
call
mov
lods
movsl
mov
push
inc
dec
push
pop
mov
aas
ret
insb
push
dec
xchg
mov
jo
sub
lock
pushf
movsl
lods
shrb
push
inc
inc
inc
dec
inc
jns
lahf
jbe
sahf
cwtl
xchg
stos
ja
jo
mov
fisttpl
jge
push
sub
call
dec
nop
jb
jno
xchg
cs
push
repnz
add
fdivr
ja
dec
inc
fwait
insl
jl
xchg
cwtl
xchg
xchg
inc
add
insl
rcrl
cltd
movsb
mov
mov
mov
sbb
inc
inc
inc
ss
ss
ja
cli
cmpsl
mov
cmpsb
lcall
dec
inc
mov
bound
movsb
xchg
mov
ret
jno
cmp
out
push
scas
movsb
cwtl
mov
pop
dec
inc
dec
inc
add
or
dec
jb
xorb
push
incb
scas
mov
dec
inc
scas
test
lcall
cwtl
lcall
pusha
dec
xchg
scas
adc
nop
xorb
xchg
dec
xchg
movsb
orl
js
cltd
adc
jp
jb
aas
dec
jle
stos
mov
cmpsl
sahf
lea
fs
dec
dec
jo
js
repnz
fwait
mov
scas
js
mov
cmpsb
fwait
clc
pop
dec
dec
jo
subl
out
lcall
sbb
shrl
push
dec
dec
dec
mov
mov
adcb
lock
ja
cld
jbe
je
orl
jbe
push
dec
dec
dec
es
push
xchg
xchg
out
dec
mov
jl
mov
sub
dec
cwtl
ret
jo
dec
push
ljmp
test
jne
push
mov
je
xchg
cli
lods
xchg
nop
mov
push
lret
jae
call
or
into
mov
jg
xchg
adcb
movsb
cltd
mov
dec
out
int3
inc
push
adc
mov
jg
xchg
jne
orl
nop
add
push
push
sub
pusha
cwtl
mov
cwtl
xchg
mov
push
ss
cwtl
js
sbb
out
sub
sub
push
push
dec
cwtl
pop
enter
xchg
xchg
xchg
sbb
outsb
adc
and
cmpsl
lods
stos
insb
icebp
add
push
dec
lahf
arpl
pop
xchg
scas
mov
xor
shll
fwait
mov
cwtl
inc
dec
push
pop
imul
jns
int3
xchg
add
xchg
mov
dec
add
or
jns
push
test
dec
cwtl
cwtl
jnp
jle
sub
pushf
nop
xchg
pop
mov
cmp
je
fs
test
and
xchg
lcall
jno
push
dec
cwtl
out
mov
add
mov
jle
subb
mov
push
dec
inc
insb
js
mov
clc
enter
cmpl
iret
push
mov
xchg
mov
pop
push
dec
or
cmp
bound
or
mov
orb
into
stos
movsl
fwait
xchg
test
pop
dec
inc
cmpsb
dec
pop
gs
adc
hlt
add
outsb
jbe
sub
addb
into
lcall
jg
sbb
inc
inc
dec
add
je
mov
jne
test
insb
xor
nop
std
jg
mov
pusha
push
dec
inc
inc
dec
mov
push
sbb
test
cmpsb
mov
insl
popa
rolb
in
lahf
lahf
mov
in
adc
and
xchg
popf
movsl
stos
dec
mov
pushf
jle
bound
loopne
jo
ret
pop
movsb
popf
mov
jg
pop
add
fwait
mov
cmpsb
jb
loope
sub
inc
inc
dec
or
mov
sub
pop
cmp
jnp
js
cwtl
mov
or
push
inc
inc
inc
push
pop
imul
incl
cmpsb
mov
data16
ud2
mov
mov
mov
pop
dec
inc
aas
aas
inc
mov
pop
push
sarb
clc
das
ss
insl
jno
cwtl
mov
cwtl
or
push
inc
or
ds
dec
push
gs
or
push
xor
pushf
xchg
lcall
push
dec
inc
inc
inc
dec
push
lret
pushf
lods
scas
lods
cmpsb
or
ret
jge
outsl
mov
mov
jne
add
mov
cs
or
inc
inc
dec
push
pop
insb
jnp
stos
jb
and
int
pushf
jp
outsb
insl
jo
fdivs
bound
dec
dec
scas
jg
push
test
cmpb
jo
ja
pop
inc
mov
movsb
sbb
adc
arpl
dec
dec
push
pop
fs
and
test
add
clc
test
mov
sub
mov
xchg
xchg
xchg
jb
arpl
pop
pop
arpl
jbe
add
loopne
push
or
add
adc
mov
pusha
pop
pop
pop
fs
jl
popa
mov
fs
jne
rolb
push
push
je
dec
pop
pushf
mov
leave
dec
jb
and
and
mov
jl
jle
mov
es
lods
imul
xchg
sub
push
xorl
dec
xor
xchg
cmpb
fiaddl
addr16
fs
xchg
xchg
add
ret
insb
xchg
scas
add
xor
xor
mov
mov
or
nop
nop
lahf
test
nop
jns
loop
cmp
jl
dec
fs
inc
mov
xchg
add
mov
mov
mov
out
push
push
mov
cmpb
adc
dec
subl
mov
add
xor
pop
leave
cmpsb
test
inc
inc
scas
sbb
js
test
add
mov
and
sub
push
inc
mov
mov
sub
xchg
jnp
sub
sub
das
sub
int3
inc
add
adc
add
jg
xchg
mov
or
scas
jnp
ficoml
pop
xchg
inc
inc
push
out
add
add
jg
enter
insb
push
inc
xor
add
movsl
cmp
leave
call
mov
mov
sarl
fstpt
push
mov
xor
cmp
xor
and
outsl
dec
cmc
mov
mov
xor
aaa
and
adc
lcall
mov
xlat
xlat
lret
aad
and
test
mov
call
and
into
and
jo,pn
xor
arpl
mov
iret
les
adc
out
ret
idivl
ret
or
inc
or
sub
dec
int
mov
and
ja
test
enter
sarb
and
lahf
ret
mov
ja
or
adc
push
sbbb
xlat
mov
cltd
pushl
sub
stos
ror
mov
mov
jmp
icebp
mov
mov
mov
add
mov
neg
test
ret
mov
cld
shr
sar
int3
lcall
and
outsw
jb
insl
imul
jo
jo
imul
icebp
fs
fdivs
decl
sub
jmp
enter
mov
ret
mov
mov
sub
and
popa
and
pop
test
ja
das
jbe
gs
clc
repz
test
aaa
xor
add
pusha
xor
scas
testl
dec
rcl
or
push
add
jg
mov
aaa
mov
mov
cmpb
mov
les
push
ret
push
xor
movsl
pop
mov
mov
add
xorl
pop
add
cmp
dec
push
jne
push
push
test
lods
add
adc
dec
inc
mov
dec
ds
fnstcw
dec
jmp
dec
in
and
out
insb
ja
icebp
xor
mov
out
out
push
push
push
push
mov
addr16
cmp
xor
adc
dec
jnp
fwait
push
aas
pop
fwait
pop
pop
push
mov
int
mov
pop
into
bound
pop
gs
push
push
les
fwait
insl
fisubrl
jo
mov
cld
call
dec
jo
jb
inc
inc
mov
mov
jae
mov
rol
sub
in
mov
push
out
push
jnp
iret
mov
rcl
sub
sbb
inc
mov
inc
pop
push
jns
jnp
jmp
xor
pop
inc
jb
jbe
and
arpl
push
jbe
pop
jae
arpl
sub
popa
fwait
cmp
and
jno
jns
jne
bound
push
add
sub
ret
scas
push
insb
pop
xor
adc
push
imul
das
push
adc
shr
cmp
push
outsb
addr16
addl
cmp
fdivp
das
xlat
test
je,pn
je
je
mov
push
rcll
cmpsl
mov
in
cli
jg
idivl
mov
int3
shlb
out
sub
cmp
stos
sbb
ljmp
mov
xlat
not
fbld
rcl
sbb
add
out
in
pop
in
fadd
in
cld
enter
addb
mov
add
mov
mov
mov
xor
js
sbb
hlt
mov
mov
sub
lret
mov
mov
shr
mov
pop
mov
not
xor
cltd
aam
js
not
aad
ror
repnz
into
mov
mov
mov
arpl
std
ror
rcr
addr16
mov
push
mov
push
inc
mov
ret
add
lret
testb
in
push
xlat
aam
mov
mov
jne
enter
push
addr16
dec
inc
rol
or
mov
test
jmp
shlb
shrb
pusha
push
lret
sub
pop
cwtl
push
into
in
sti
jl
xorl
adc
aad
mov
or
js
mov
add
stos
mov
adc
out
es
lock
cmp
sbb
mov
mov
add
mov
clc
adc
or
xchg
rcrb
ret
mov
inc
jb
rorb
xlat
stos
cmp
fisttps
sub
ds
addl
push
sti
outsb
sbb
enter
shll
repnz
stos
push
negl
xor
iret
in
mov
popa
out
in
iret
ljmp
mov
iret
mov
add
and
test
ret
xlat
ljmp
call
add
aam
iret
shrb
adc
inc
push
xorl
mov
mov
fmul
mov
clc
sub
or
dec
lahf
ds
cmp
ds
imulb
cmp
fs
xor
ja
clc
pop
ror
and
and
fs
push
push
mov
rcl
lds
xor
das
jno
mov
imul
cwtl
adc
insb
push
jns
lcall
and
mov
push
and
jp
xor
jne
in
adc
adc
fcompp
out
es
das
ds
or
mov
inc
jne
arpl
and
scas
imulb
shrb
sub
and
inc
and
push
mov
shrl
sbb
and
and
mov
and
pop
xor
jnp
adc
jae
popa
mov
cmp
and
cs
outsb
out
popa
loopne
jae
data16
dec
faddl
jbe
xor
sbb
or
cmp
inc
adc
inc
popa
js
mov
neg
and
aaa
add
cmp
or
ja
fs
out
andb
cmc
pop
inc
pusha
clc
insb
dec
sbb
outsb
or
ds
sub
push
push
inc
xchg
dec
xor
inc
in
inc
inc
inc
add
inc
cmp
inc
xor
aaa
xor
inc
xor
xor
inc
inc
xor
std
ja
scas
push
inc
dec
dec
add
xor
xor
ss
cmp
test
inc
inc
sbb
aas
test
inc
hlt
inc
push
ds
lds
leave
lcall
or
rorb
arpl
add
repnz
add
or
mov
adc
xor
test
jbe
stos
add
pop
add
inc
jecxz
add
inc
dec
scas
mov
ds
xor
add
adc
or
inc
stos
sub
sub
mov
mov
movsl
add
or
lcall
imul
inc
mov
loopne
jg
movsb
test
cmc
inc
sub
mov
mov
outsl
pop
sti
dec
xchg
add
daa
cmp
adcb
imul
sbb
lcall
push
pop
and
in
jnp
jne
mov
fwait
out
imul
js
das
das
ds
sarl
fwait
shll
mov
push
punpckhwd
fidivs
popf
outsb
inc
add
xchg
aaa
lahf
push
jae
popf
mov
loopne
add
mov
sti
pop
inc
or
popf
sbb
push
xor
and
jo
seto
lahf
jb
and
adc
pop
or
inc
add
dec
enter
add
or
fcomp
jns
or
pop
dec
pause
lcall
pop
dec
test
push
test
inc
cwtl
pop
adc
repnz
fs
outsl
addb
push
mov
cmpsl
das
fs
mov
push
movsl
sbb
and
shlb
xchg
and
ficoms
cmp
mov
iret
and
jbe
das
and
jae
iret
nop
sub
sbb
notb
add
jle
sbb
cs
pop
nop
push
pop
mov
and
rcr
adc
lock
cmpsb
cmove
inc
das
mov
or
inc
adc
enter
pop
adc
mov
pop
or
adc
pop
outsl
mov
rorl
mov
push
jno
adc
pop
pop
scas
dec
iret
xor
das
pop
addb
inc
jnp
sarb
repnz
mov
and
nop
out
jge
inc
add
mov
loope
dec
push
mov
add
mov
ficomps
sub
adc
sbb
mov
inc
dec
and
pop
bnd
push
aas
or
js
daa
adc
enter
inc
rolb
js
add
cs
pusha
pop
cltd
dec
adc
adc
mov
pusha
ret
aas
stc
hlt
add
or
les
scas
or
mov
shrb
add
adc
cmp
dec
incl
pushf
out
mov
fwait
and
pusha
lret
sahf
jb
loop
filds
pop
push
lds
loope
mov
das
and
and
enter
mov
lret
lock
outsb
adc
dec
cmpsl
cmp
xor
outsl
clc
es
add
nop
cs
xorl
ljmp
repz
insb
add
lahf
xor
add
and
cwtl
mov
add
in
add
dec
mov
jo
outsl
inc
xor
adc
adc
outsl
loopne
pop
sub
xor
aas
xor
aad
aad
add
rcr
inc
pusha
outsl
cmpl
fadds
jecxz
pop
in
sbb
pusha
movsl
in
push
pop
sub
mov
popl
cmp
fcmove
add
pusha
lock
flds
fcos
sarb
test
fisubrs
or
or
fstpl
pop
pusha
fldl
fsubp
add
subb
fidivs
loop
aad
rcr
mov
in
jb
jg
fiaddl
push
push
mov
rorb
add
mov
daa
nop
or
pusha
loope
lock
inc
dec
and
nop
loop
repnz
iret
pusha
fildll
loopne
fildll
add
adcl
cs
xor
pop
add
stos
add
add
mov
shlb
ljmp
and
jno
cs
mov
daa
cmp
sti
fbstp
fwait
push
insb
cmp
iret
call
lds
nop
outsl
and
nop
or
add
shlb
sahf
mov
lock
fists
inc
dec
xor
ljmp
xor
pop
call
rcrb
xorl
enter
jl
add
filds
lahf
cmp
sbb
add
pop
lods
add
or
shlb
out
subb
mov
stos
sbb
and
lahf
jne
roll
outsl
add
sub
jg
outsl
xorb
sbb
cmp
scas
or
jo
pop
nop
sbb
nop
adcl
fadds
mov
clc
iret
or
xchg
test
jno
lahf
push
shrb
out
and
jl
pop
inc
adc
ds
add
mov
mov
push
orb
jl
lods
or
roll
insl
cli
stc
out
sti
lea
inc
cmp
outsb
push
stos
push
repz
jnp
mov
out
push
pop
ds
cmp
fidivs
in
shlb
fwait
int
int
in
push
in
fcomp
fs
jns
imul
push
or
xlat
insb
mov
push
cmc
xlat
cmp
sub
mov
imul
loop
out
sbb
xchg
loopne
and
ds
push
adc
or
loopne
iret
cmp
dec
and
mov
push
jo
repnz
or
pop
dec
pusha
and
mov
add
sbb
inc
dec
insl
ss
sub
ss
mov
add
inc
popa
out
mov
mov
shlb
imul
scas
mov
sub
cmpsb
push
jle
push
xchg
adc
xor
mov
div
push
dec
push
wrmsr
adc
cmp
jl
push
pop
subb
cmpsb
setne
out
sbb
and
and
jg
out
imul
icebp
push
call
sbb
inc
scas
addb
mov
inc
cwtl
inc
pop
sub
fcomip
mov
push
rclb
pop
int
outsb
push
out
mov
dec
dec
outsb
lahf
shrb
out
das
adc
rorb
mov
inc
cltd
sub
mov
pop
popf
out
and
cltd
nop
fnstenv
add
sbb
ljmp
cvtpi2ps
enter
iret
lahf
adc
inc
jb
mov
outsl
outsl
rcrl
mov
outsb
adc
jbe
jbe
pop
iret
roll
add
pop
shrb
das
rolb
dec
rolb
pop
das
lock
mov
pop
aas
ret
enter
sarb
mov
enter
sub
in
lds
mov
ret
dec
test
mov
dec
fmul
or
in
push
out
sbb
test
cmpl
and
imul
ficoml
sarb
cs
add
sub
fnstsw
fldt
adc
pushf
ja
and
rolb
hlt
aad
mov
std
dec
clc
adcb
mov
add
add
out
xchg
push
mov
pop
loopne
mov
pop
mov
and
sub
add
es
and
ss
popa
cmpsb
int3
aas
nop
aas
or
in
into
rcl
pop
pop
out
icebp
mov
cmpsb
mull
ret
in
add
mov
or
scas
rorb
add
aas
inc
sub
int
jns
je
imul
pop
aas
jo
add
imul
inc
pusha
pop
jo
pop
mov
push
inc
pop
mov
adc
ss
js
or
inc
cmp
sub
cmp
leave
shlb
jns
pop
in
push
aas
add
ja
movsl
lea
push
scas
and
movb
out
inc
jg
adc
sub
jne
add
test
mov
and
out
and
cs
pop
dec
adc
loope
pusha
fucomi
aas
and
add
in
outsl
faddl
add
mov
jnp
jg
repz
stc
push
pop
shrb
or
sahf
dec
jl
xchg
popf
pop
xchg
incl
es
icebp
inc
sbb
test
ds
mov
out
push
or
mov
jo
push
pushf
stos
das
lock
pop
or
mov
sbb
fcompl
popa
or
ret
and
cmp
loopne,pn
and
add
jo
jmp
in
das
pusha
inc
jmp
loopne
insb
test
mov
add
dec
cmpl
add
lock
inc
outsb
lock
push
jg
inc
gs
inc
outsl
test
pop
movsl
sub
push
jg
add
push
roll
stos
pusha
push
push
push
outsb
add
outsb
andl
pop
out
popf
add
xchg
ja
iret
pop
pop
popa
pop
popa
dec
repnz
inc
inc
pusha
fwait
inc
cmp
repnz
inc
cs
and
repnz
pop
dec
dec
cs
out
sahf
sub
push
filds
push
inc
dec
jnp
mov
das
inc
repnz
jb
inc
mov
dec
popa
repnz
jb
dec
dec
xchg
xchg
addr16
xchg
xchg
out
pop
jo
xchg
out
xchg
push
mov
out
rcrb
xor
pusha
pusha
add
call
cltd
add
je
cmpsb
mov
das
repnz
push
add
lock
add
mov
add
add
aas
aas
stos
push
popl
dec
ret
push
fdiv
xor
jmp
cmpsl
call
mov
shl
aaa
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fcos
aas
cmpsl
push
lret
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
sar
mov
and
insb
lods
aas
jnp
scas
inc
loope
test
jge
das
cmp
mov
jo
repnz
shlb
pop
mov
aas
scas
dec
and
xor
push
jns
mov
mov
in
lahf
xorb
iret
bound
add
dec
sahf
dec
jbe
pusha
mov
pop
adc
inc
xchg
jo
jg
dec
xor
das
mov
inc
mov
adc
sarb
cmpb
scas
mov
sarb
adc
and
outsb
jnp
rcll
das
rol
pusha
mov
pop
cmp
xor
adc
add
pop
mov
rolb
adc
ret
cmp
push
lods
xchg
mov
or
add
push
andl
daa
mov
add
in
leave
sub
enter
xor
nop
or
pop
sbb
push
and
mov
dec
adc
mov
push
cmp
incb
das
out
shll
xor
push
test
aas
and
fists
rcl
aad
push
je
loopne
outsl
js
add
inc
roll
cmp
lock
xor
icebp
push
icebp
stc
pop
cmp
int3
mov
cmpl
jg
and
fs
or
sbb
mov
or
out
pop
xchg
add
sbb
and
out
sahf
xor
and
adc
cmp
jns
or
sbb
xor
cmp
mov
mov
sbb
iret
repz
push
push
and
cmp
repz
cmp
daa
cs
iret
repz
aaa
ds
in
sbb
add
mov
jns
pop
push
mov
push
jns
out
roll
iret
cld
clc
lock
addb
xor
std
testb
inc
lds
push
inc
dec
xchg
dec
xor
fldcw
sbb
jnp
jae
push
xor
sbb
push
bound
mov
inc
sub
sbb
push
and
mov
int3
adc
or
xor
mov
push
andb
sbb
or
push
sbb
xor
jnp
adc
outsb
push
ss
incl
push
popa
dec
mov
xor
aas
lret
xchg
scas
out
jg
push
aas
stos
adc
shl
aas
aas
cmp
jmp
jnp
push
lcall
stos
jb
push
test
shlb
or
cmp
add
xor
bswap
aas
incl
pushl
dec
mov
jae
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
call
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwtl
lcall
fs
push
stos
imul
add
xor
push
into
incb
shll
or
inc
mov
pushl
dec
mov
jno
dec
mov
shrb
out
push
fisubs
loope
shrl
bound
push
scas
outsb
sahf
pop
mov
insl
popf
pop
or
dec
pushl
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
call
sub
sbb
and
push
pop
cmpsb
xchg
push
test
gs
push
add
jmp
popl
aam
mov
jne
daa
inc
pop
sub
repz
aas
lock
or
mov
mov
or
nop
ret
mov
orl
mov
mov
add
idivb
sbb
xchg
fistps
pop
and
push
dec
ss
cmpb
scas
call
mov
cmpsl
dec
jg
mov
dec
outsl
je
test
aaa
call
gs
rcrl
mov
mov
popa
mov
rcrb
mov
enter
add
cmpsb
add
and
push
sub
in
adc
or
or
add
jbe
fistpl
push
inc
add
sub
add
push
xor
jl
inc
add
adc
push
cmp
and
mov
sub
mov
mov
enter
sub
mov
idivl
ja
das
sub
lcall
cwtl
push
aas
gs
cmp
mov
test
sub
cmpsl
out
addr16
pop
cli
nop
jle
mov
imul
rorb
push
pusha
lea
mov
mov
addb
push
addr16
xor
push
popa
call
je
cmovg
adc
cmovb
insl
popa
jo
js
inc
jmp
jle
jb
in
shrl
mov
arpl
fcom
push
pop
pop
sarb
mov
sbb
imul
nop
ja
dec
adc
adc
neg
push
push
dec
inc
insb
imul
js
adc
mov
inc
cwtl
out
push
or
rorb
inc
dec
sbb
lcall
pop
pop
adc
cmp
repz
jno
jnp
add
imul
rcll
add
stc
xor
out
adc
mov
pop
fiaddl
ljmp
sub
scas
mov
ror
dec
ds
sbb
mov
sahf
mov
dec
sbb
jns
and
mov
icebp
xor
clc
loopne
sbb
cmp
inc
in
mov
nop
es
lock
ds
loopne
loopne
repz
int3
cmpl
xor
inc
adcl
dec
mov
pop
mov
add
rclb
addr16
out
enter
les
out
cmp
dec
fists
out
sahf
mov
add
rorb
das
testb
ret
or
jo
push
scas
add
loopne
or
inc
leave
dec
mov
inc
and
inc
xorps
xor
or
push
jno
test
je
pop
dec
mov
mov
push
and
outsb
jae
jb
data16
fildll
push
insb
addr16
xchg
jbe
dec
cmp
cmp
push
seta
adc
call
ds
mov
dec
mov
xchg
lods
xor
xor
xorl
pop
aaa
cli
dec
fisubrl
sub
aam
mov
add
sbb
mov
out
sbb
and
sub
outsl
cs
lahf
or
cs
inc
sahf
out
push
sub
sahf
dec
popf
mov
into
add
iret
les
cs
out
and
jge
sbb
dec
in
out
nop
push
sub
into
jae
cli
lahf
popf
ljmp
pop
pop
jle
and
iret
test
push
push
out
out
inc
notb
xor
insb
fs
daa
xchg
pop
ljmp
jb
daa
dec
inc
dec
inc
jb
mov
push
sbb
pop
mov
imul
ss
and
mov
lcall
pop
or
dec
mov
and
imul
fldenv
pop
pop
mov
scas
lret
dec
adc
inc
push
pop
xorl
jb
pop
inc
inc
rcrl
addr16
add
or
cld
lods
sahf
mov
dec
and
add
xchg
lods
loop
in
pusha
cmp
cmp
and
mov
dec
mov
inc
push
test
jae
js
or
add
dec
les
shlb
mov
cmc
incl
aaa
push
rol
js
cmpl
mov
movl
lock
lahf
pushf
insb
mov
mov
mov
pop
push
call
or
fsubs
cmpsl
adc
add
xor
sub
mov
sub
xchg
mov
pusha
push
fs
mov
stos
ja
cmpl
scas
lock
xlat
movsl
in
sahf
xor
cltd
cs
ds
xchg
sub
inc
inc
stos
scas
hlt
add
xor
ds
xchg
ss
loopne
mov
mov
pop
pop
lahf
inc
pop
addb
xchg
addr16
ja
fists
pusha
cmp
loope
add
jns
mov
dec
cmp
loop
pop
add
out
push
mov
push
add
mov
lahf
fidivrs
popf
dec
repnz
push
into
add
fisttps
nop
data16
or
push
inc
xchg
xor
int3
mov
pop
mov
cs
pop
ucomiss
mull
xor
dec
mov
push
fisubrs
xor
add
push
rcrb
add
js
cmpb
int3
sbb
test
aaa
push
in
ljmp
scas
aaa
ds
jo
iret
pusha
inc
mull
mov
mov
and
das
sbb
push
sbb
fisubrs
into
sub
pop
daa
pop
push
add
or
push
jb
cli
sbbl
gs
cmp
pop
sarb
adc
xchg
pop
scas
bound
test
insl
faddl
xchg
scas
inc
add
ret
scas
lea
into
mov
mov
xchg
dec
insl
pop
rcrb
enter
pop
dec
mov
inc
das
xor
inc
test
mov
lock
mov
xor
enter
mov
mov
aad
cmp
push
mov
fcom
dec
cmc
cmp
jmp
addr16
push
clc
loopne
dec
push
aas
push
lods
add
arpl
jmp
xchg
inc
xchg
js
ds
gs
pusha
mov
stos
add
push
and
js
mov
aas
inc
insl
fs
test
push
popa
jb
into
push
lldt
movsl
jmp
rcl
add
rclb
ds
mov
or
inc
daa
sub
mov
cmpsb
mov
pop
in
lock
push
outsl
jo
push
addb
sub
nop
push
sub
mov
lock
jb
inc
push
leave
imul
outsb
cmpsl
xchg
push
lahf
loopne
push
mov
stos
sub
std
mov
mov
sub
stos
outsl
xor
dec
inc
inc
cmp
add
shlb
cld
cltd
sub
fiaddl
outsb
test
xor
pop
repz
cs
cmpsl
jmp
push
movsb
dec
outsb
jne
aad
mov
dec
aas
push
incl
sbb
jnp
ret
add
mov
push
das
arpl
sub
sbb
js
movsl
je
sub
jg,pn
call
push
movsl
aas
dec
popa
jo
pop
loopne
test
pop
out
adc
rcrb
pop
test
outsb
pop
das
clc
adcb
xchg
fisubrs
push
insb
iret
cmpsb
test
adc
or
sub
lahf
sahf
add
add
pop
push
sbb
inc
push
cli
adc
push
int
pop
mov
cmp
nop
popf
test
je
add
push
jo
pop
jmp
fisubrl
icebp
add
xor
cmp
jo
push
xor
lock
cmp
paddsw
ds
xchg
inc
cmpb
dec
xchg
cmp
xchg
mov
push
jg
xor
dec
dec
dec
filds
dec
dec
push
pop
pusha
aaa
push
push
bound
pop
clc
or
js
test
cli
cwtl
scas
jbe
and
push
fs
addr16
mov
daa
fmuls
leave
push
pop
cmp
pop
jne
shr
fs
and
push
neg
xchg
inc
xchg
cmp
test
xchg
test
sbb
aam
cmp
push
mov
pop
iret
test
dec
jge
pusha
repz
fs
inc
pop
shrb
rcrl
testl
or
dec
mov
in
push
cmp
push
pop
sub
and
and
fdivrl
add
dec
das
fs
or
mov
icebp
mov
push
inc
inc
adc
gs
mov
pop
dec
outsl
icebp
popa
add
mov
jne
mov
jne
orb
incl
sub
or
movb
and
bound
push
inc
pushf
jae
sahf
push
into
mov
into
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
mov
push
push
adc
sbb
jne
and
movntq
pop
dec
inc
aas
cmpsl
loope
add
mov
daa
cmp
imul
and
icebp
dec
and
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
inc
sbb
mov
inc
inc
push
inc
inc
ss
pop
pop
add
das
addr16
add
sahf
add
mov
or
jle
push
push
sbb
es
mov
jbe
dec
inc
shlb
xor
cmp
sub
icebp
and
push
jae
in
add
jp
repnz
aaa
in
je
aaa
cwtl
jp
in
and
popa
arpl
out
dec
cmp
push
ja
jno
outsl
ss
lods
arpl
mov
push
jbe
and
divb
cmpsl
arpl
insb
or
movsb
jnp
mov
add
mov
xor
lds
sahf
lret
jo
mov
sbb
fs
pop
insl
ret
pop
arpl
mov
mov
xor
lock
insl
jne
inc
push
arpl
das
push
and
mov
in
pop
add
inc
jb
add
je
mulb
popa
pop
xor
lahf
jae
in
pusha
and
mov
inc
mov
or
fucomp
push
jae
push
xor
pop
add
xlat
fdivr
add
jne
nop
xor
mov
cwtl
mov
call
sub
push
cmp
das
in
pop
pop
sub
cmp
cmp
or
cmpsb
cmp
pop
std
and
ja
pop
jle
push
mov
sbb
movsl
or
or
xor
gs
sbb
ja
add
imul
aas
sbb
ret
mov
inc
leave
mov
jg
sets
out
insl
fildl
aas
push
pop
jns
xor
sti
pop
insb
mov
jb
es
outsl
fs
push
xlat
inc
je
inc
bound
fs
loopne
jmp
cmp
aas
sub
addb
xorb
fldl
mov
add
imul
mov
popa
sub
sysret
insb
imul
pop
inc
cmovs
jbe
fnsave
cvttps2pi
les
xor
add
jo
add
ret
rcl
pop
and
ds
iret
jmp
pop
fs
aaa
leave
push
roll
dec
and
and
fwait
adcl
sub
sub
popa
testl
stos
scas
cmp
push
fistl
outsl
push
sub
inc
push
call
add
pop
movsl
xor
push
fiadds
add
xor
cmp
ja
inc
ljmp
push
and
add
lods
stc
or
pusha
add
add
inc
out
into
and
add
shlb
mov
jne
add
adcb
outsb
nop
insb
adc
pushf
xor
pop
test
pop
cmp
fadd
push
dec
pop
push
xchg
push
loopne
add
inc
push
bound
jle
add
mov
lcall
push
pusha
outsb
jl
adc
mov
adc
je
pop
iret
dec
out
je
mov
enter
jo
and
sbb
or
or
mov
xor
cld
push
pop
addr16
jns
inc
incl
xor
push
dec
inc
js
dec
dec
inc
add
push
das
andb
jg
dec
sbb
inc
dec
cld
subl
or
fadd
scas
mov
and
jb
or
ja
movsb
pop
js
aas
nop
cs
in
xchg
add
sub
mov
repz
pop
inc
add
pusha
mov
mov
das
xchg
mov
in
mov
cmp
xchg
adc
cmp
dec
add
das
and
mov
pusha
daa
xor
das
nop
aaa
inc
jo
mov
add
mov
mov
push
fadds
push
jo
lahf
lock
xchg
mov
push
sub
add
push
daa
cmpb
cmpsl
mov
sahf
nop
xchg
lahf
cwtl
enter
enter
lahf
mov
cmpsl
nop
pop
sbb
outsb
mov
inc
daa
enter
in
ror
push
nop
cwtl
xchg
pop
and
shr
and
daa
mov
pusha
leave
and
in
test
lahf
and
sub
scas
mov
adc
test
rcrb
shlb
cwtl
in
clc
mov
insl
leave
test
daa
cltd
dec
pop
mov
scas
push
mov
jo
jne
xchg
andb
in
or
mov
in
in
mov
jnp
fadd
push
test
cvttps2pi
sub
mov
popl
mov
addb
xor
dec
dec
in
sbb
add
cwtl
or
bound
xchg
dec
and
scas
cs
or
add
loopne
inc
inc
outsb
sub
insb
pop
das
xchg
rcrb
mov
sbb
xchg
mov
clc
scas
xchg
adc
scas
lock
push
mov
and
nop
test
fdivrl
and
add
in
sbb
cmp
mov
lahf
xchg
pusha
out
jb
add
nop
mov
test
xchg
inc
loopne,pn
mov
push
jne
mov
push
mov
mov
fnsave
push
out
push
outsl
xor
push
mov
cmpsl
andb
iret
push
fwait
inc
pop
test
rcrb
rcrb
xchg
push
adc
cltd
inc
dec
mov
lahf
dec
mov
or
aaa
inc
jo
cwtl
inc
add
mov
shlb
out
leave
sub
add
mov
fldt
adc
cwtl
bound
cmp
or
mov
sub
daa
fdivs
shl
jg
out
lock
xchg
cmp
ret
das
or
xchg
and
adc
pop
frstor
leave
dec
mov
nop
adc
daa
xor
outsl
mov
cmpsb
mov
push
push
cmp
add
cmpsl
mov
xchg
aas
scas
or
xchg
daa
nop
and
mov
outsl
mov
lahf
xchg
fistps
enter
mov
insb
daa
addr16
shrb
daa
shr
sub
sarl
mov
dec
dec
shrl
xchg
scas
nop
or
xor
cwtl
mov
outsb
fldl
rcrb
call
inc
icebp
jbe
daa
push
mov
sbb
add
xchg
or
aas
mov
mov
and
xchg
inc
mov
inc
jb
outsb
mov
xchg
or
outsl
jmp
xor
dec
ret
pusha
ret
xchg
loopne
outsl
mov
cwtl
mov
cmpsl
mov
enter
add
dec
and
jmp
ljmp
xchg
push
repnz
das
js
nop
or
frstor
ja
daa
pop
mov
out
push
inc
loopne
mov
leave
adc
fadds
adc
leave
adc
popf
addr16
adc
addb
dec
xor
or
punpckhwd
xchg
je
mov
sub
add
or
and
xor
inc
pop
and
in
out
jmp
add
dec
and
push
jo
jb
adc
adc
enter
leave
shl
lock
mov
pop
add
divl
scas
jo
dec
add
jae
cmp
orb
and
dec
dec
jo
iret
fadds
dec
popf
pop
mov
mov
sub
lret
fidivs
repnz
jmp
aaa
jnp
pop
dec
adc
pop
sbb
fisubrs
xor
call
jns
outsb
pop
pop
add
jo
or
nop
repz
mov
outsb
daa
iret
add
fisubrl
in
pop
pop
in
leave
xchg
sub
pop
dec
push
in
inc
add
inc
pusha
push
insl
xorb
scas
sbb
mov
js
lret
sub
push
push
mov
das
call
cmp
decb
pop
aas
adc
out
mov
xor
in
mov
pop
xor
inc
test
mov
jb
pop
jb
nop
lock
adc
aaa
mov
aas
pop
push
fmull
pop
mov
add
fs
sub
jo
pop
pushf
pop
and
or
cwtl
popf
mov
loop
push
pop
push
dec
outsb
aaa
and
mov
adc
fdivrs
enter
push
lock
clc
cmpsl
nop
rcrl
pop
adc
and
in
dec
cmpsb
xor
mov
add
sub
pusha
pusha
leave
in
mov
mov
mov
enter
out
mov
or
pavgb
sub
mov
and
outsl
in
adc
popa
es
add
repz
add
add
cmp
insb
pop
jp
repz
xrelease
xchg
or
mov
push
or
into
push
fmull
ljmp
adc
bound
out
sahf
out
adc
adc
sahf
out
sahf
adc
pop
jns
out
sbb
jbe
out
sahf
out
sbb
jns
sbb
fmull
cmp
lret
iret
dec
nop
out
and
pop
add
adc
and
and
lock
cmp
arpl
enter
arpl
jle
inc
mov
mov
arpl
enter
arpl
arpl
arpl
arpl
arpl
fs
jns
out
adc
adc
sahf
out
sahf
inc
adc
adc
out
insb
pop
jp
mov
jns
out
xchg
sbb
mov
rcrb
jns
pop
ljmp
add
das
add
mov
push
or
dec
push
mov
outsl
pusha
pop
or
popf
push
pop
int
or
add
js
sahf
mov
pop
into
fsubrl
mov
pop
fsubr
pushl
jo
leave
adc
nop
in
mov
fistpl
iret
xor
mov
test
pop
dec
fwait
adc
call
enter
cwtl
adc
pop
and
shlb
inc
pop
jb
push
adc
mov
cmp
pusha
mov
inc
cs
in
mov
xor
rcrl
addr16
adc
or
aam
mov
push
add
jne
jbe
das
imul
xchg
inc
cmp
addr16
mov
mov
daa
push
enter
mov
loopne
push
dec
dec
or
aad
push
pop
mov
cmp
xor
testl
xlat
sahf
dec
push
dec
add
in
in
pop
testb
iret
xor
dec
repnz
je
sahf
cltd
and
pop
pushl
leave
add
xchg
mov
sbb
lods
mov
mov
out
lahf
fnsave
jb
out
cld
aaa
dec
inc
cmpsb
mov
dec
jo
enter
imul
enter
imul
ret
xchg
sbb
btc
fisttpl
cmp
xlat
dec
add
xchg
adc
push
enter
pop
and
addb
or
pop
shl
mov
inc
cmpsl
dec
jo
fcom
aas
adcl
add
cmp
mov
push
sub
lahf
push
rorb
in
or
js
clc
daa
cmp
repnz
imul
imul
data16
or
inc
outsl
jns
leave
in
dec
imul
jns
jae
jge
test
out
nop
pop
in
sahf
out
or
enter
fnop
loopne
jo
outsb
psubsb
iret
sub
xor
in
xchg
insb
push
add
jecxz,pn
in
cmp
pop
insb
jb
lds
js
enter
insb
mov
jae
test
test
jae
inc
jg
jg
test
fsubrs
jns
pop
mov
insl
xor
inc
es
insl
mov
or
and
push
insl
aas
and
cmpsl
cmp
cmp
add
push
sahf
aaa
cmp
add
mov
push
mov
or
enter
hlt
jbe
push
decl
scas
call
pop
aas
psubb
xor
sub
xchg
push
adc
outsb
incl
xor
scas
nop
ja
push
add
pushf
fmull
jae
cmp
fcoml
fstpl
outsb
sub
setb
add
in
mov
pop
leave
leave
and
shl
add
jb
call
ja
out
aaa
add
fidivrs
fimuls
jns
adc
outsl
cmp
cmp
push
fsubrp
repnz
aas
or
adc
dec
test
popa
jb
push
out
rcr
test
fidivs
dec
dec
leave
add
mov
cmc
xchg
mov
pop
cmpsb
dec
scas
fcoms
lret
push
in
or
out
mov
push
lods
outsl
decl
jo
mov
daa
lcall
jo
xor
es
out
iret
jo
xor
cmpsb
nop
loopne
imul
pop
orb
nop
dec
scas
mov
nop
dec
fsub
xor
jg
push
pop
nop
push
jb
sub
dec
loope
jno
cmp
loope
jb
in
cmp
iret
nop
mov
enter
dec
enter
pop
sbb
jns
xor
clc
lahf
ficompl
jno
lret
lret
lret
lret
jbe
xorl
lret
lret
lret
mov
jno
jno
lret
lret
lret
into
jno
jno
jno
jno
lret
lret
lret
cli
jno
jb
jb
jb
lret
lret
lret
jb
jb
jb
jb
lret
lret
lret
push
jb
jb
jb
jb
repz
outsl
xchg
sbb
sbb
sbb
iret
repz
mov
cmp
repz
fisubs
jmp
and
and
out
lcall
jns
out
sub
sub
jns
out
dec
sub
jns
bound
insl
xor
xchg
rcll
mov
sbb
ret
dec
jae
jae
in
sub
jae
jae
jae
mov
fnsave
jae
jae
je
enter
je
je
je
sbb
jb
je
je
je
je
xchg
and
je
je
je
cmp
mov
je
je
sbb
fnstenv
aas
cwtl
in
xchg
push
add
add
jne
cmp
push
jne
jne
jne
jne
sub
dec
jne
sub
adc
jo
cmp
mov
aas
fwait
cmpsb
outsl
in
pop
imul
scas
loopne
pop
mov
test
dec
repnz
sub
sbb
adc
inc
leave
adc
xorb
jb
mov
adc
ret
leave
loopne
jle
out
ja
xor
out
push
add
push
jns
out
add
add
add
aaa
push
inc
pop
dec
sahf
out
sahf
or
arpl
outsb
jns
out
or
test
push
lcall
icebp
mov
mov
scas
roll
out
repnz
das
jl
es
js
adc
push
xor
call
lods
lcall
xchg
cmp
fisttpll
push
dec
xor
mov
cmp
fistl
add
mov
test
fdivrs
mov
iret
repnz
sbb
pop
or
jmp
and
iret
jae
jae
inc
add
mov
das
addr16
fistpll
lds
adc
mov
sub
lea
jg
dec
add
jbe
cmp
loopne
call
jns
ljmp
inc
es
and
cmp
inc
mov
jp
lds
lcall
in
xchg
push
js
jp
pop
sub
loop
leave
jo
jmp
pop
scas
fadd
in
pop
rclb
loopne
fsub
mov
sub
jnp
js
cmp
aaa
push
add
and
push
sub
decl
ss
dec
jnp
pusha
jnp
lds
cmpb
xchg
mov
sub
pusha
sarb
sarl
cwtl
outsl
lock
nop
sub
shr
jl
enter
in
jl
in
or
in
jl
orl
jg
in
lahf
call
in
pop
add
in
ss
repz
loopne,pn
movsl
call
jo
push
adc
inc
add
incl
stc
orb
adc
repz
aas
aas
or
inc
pop
xor
out
lods
inc
xor
out
outsl
xor
loop
xchg
xchg
popa
aaa
cli
push
fbld
mov
ret
daa
ds
adc
in
pop
adc
xchg
and
adc
xor
lock
imulb
cmp
dec
out
out
pop
sbb
js
and
pop
sbb
push
and
adc
adcb
fbstp
iret
mov
repnz
push
clc
out
sub
and
nop
inc
xor
jge
rcl
sbb
jmp
pop
sbb
dec
adc
jo
ds
das
sbb
fcompl
inc
pushl
push
jge
cmpsb
nop
xchg
pop
jo
icebp
nop
dec
scas
nop
dec
sub
push
rolb
js
mov
sti
scas
test
es
adc
enter
xor
jle
repnz
fsubs
jo
inc
scas
sub
cmp
cwtl
add
fcompl
pushf
xchg
mov
addr16
jg
leave
adc
lock
loop
clc
add
add
jge
xchg
sub
das
adc
inc
dec
pop
sub
ljmp
mov
orb
xlat
scas
nop
shlb
pop
sarb
hlt
repz
adc
nop/reserved
cmpb
inc
dec
cwtl
pusha
into
xor
or
outsl
cmc
or
sbb
jg
push
xor
nop
push
pop
das
xchg
fisttpl
pop
mov
bt
jg
or
dec
dec
addb
push
and
orb
lret
xor
cmc
lock
and
mov
in
pop
xchg
mov
add
cmc
adc
inc
leave
add
adc
pusha
cmp
les
shlb
mov
xchg
add
or
pop
sbb
das
lret
lret
fistpll
cmp
lret
lret
lret
lret
pop
subl
lret
lret
lret
lret
xchg
andl
lret
iret
sbb
cmpl
push
adc
cmp
repz
adc
adc
iret
push
imul
test
pusha
testl
movsl
into
leave
mov
inc
or
sub
push
pushf
adcb
clc
das
xlat
outsb
xchg
sub
sahf
out
pop
and
pop
add
xchg
fs
subw
test
cmp
in
mov
shlb
aaa
stc
jmp
lock
loopne
outsl
repz
das
or
push
and
addb
mov
push
adc
or
pushf
pushf
dec
and
pop
or
cmp
test
aad
test
loope
jg
sahf
adc
inc
sahf
add
cli
das
xor
test
inc
mov
test
jb
cmp
jo
jbe
jb
orl
loop
mov
sti
or
pusha
jb
dec
repnz
test
fcomps
jb
pusha
push
and
dec
into
dec
ja
orb
nop
hlt
jbe
xchg
iret
push
das
test
mov
cld
filds
dec
sbbb
fcmove
adc
pop
in
sub
fsubrs
xchg
xchg
test
jb
pop
cmp
jp
test
mov
xchg
iret
loop
pop
and
xchg
add
and
rorb
jg
jnp
scas
fcomps
add
jp
cmp
mov
in
fwait
or
inc
popl
repnz
pushf
mov
test
adc
rorb
and
call
xchg
push
enter
mov
sbb
sub
and
mov
push
enter
enter
sbb
xchg
mov
pop
and
xchg
pop
and
pop
int3
mov
xchg
loopne
or
or
nop
add
push
in
lahf
push
in
or
mov
sub
ja
mov
mov
imul
pop
aas
cmp
das
out
insb
xlat
pop
fdivrs
aam
fsts
sub
sbb
jnp
imul
xor
scas
xchg
dec
ds
add
mov
mov
nop
jo
enter
add
rorb
loopne
negb
jns
add
mov
lcall
test
and
and
add
adc
mov
dec
out
lock
into
mov
xor
push
incl
fcoml
inc
pop
inc
add
add
jmp
adc
pop
js
push
inc
cwtl
pop
mov
pop
and
push
pop
test
and
fcoms
mov
and
dec
adc
dec
leave
adc
pusha
jb
adc
xchg
push
adc
loopne
popf
sub
cmpsb
nop
cmp
sub
and
mov
pop
jb
bound
push
mov
or
mov
xlat
and
mov
xlat
cmpsb
push
dec
dec
fs
pop
scas
pushl
pop
addb
push
push
cwtl
pop
iret
rorb
pop
stos
decl
test
inc
dec
xlat
mov
pop
sub
dec
mov
lock
push
lock
dec
mov
mov
scas
shrb
in
adc
adc
xchg
pop
and
insb
jb
adc
mov
adc
in
mov
mov
jo
and
jne
pop
test
daa
add
sub
pop
ds
leave
adc
or
int3
aad
lds
rcr
outsl
hlt
dec
dec
repnz
enter
sbb
lahf
rorb
jb
in
or
or
std
add
pop
jb
cs
dec
push
push
fs
jb
pop
jb
mov
pop
loopne
fisttps
mov
cmpsb
nop
or
xor
enter
lea
rorb
leave
mov
pusha
ds
adc
in
add
leave
in
cmc
ljmp
nop
sub
mov
or
mov
dec
xor
and
scas
pusha
push
imul
enter
pop
pushf
or
sarl
loopne
and
movups
xchg
xchg
pushf
dec
xchg
lahf
inc
push
rcr
enter
pop
cmp
testb
cwtl
test
sub
mov
add
mov
xchg
sub
sbb
loopne
in
mov
sub
mov
sbb
dec
mov
fcoms
daa
sub
ss
fldcw
jo
cmpsb
and
nop
xor
xchg
insb
cmp
mulb
imul
mov
mov
int3
mov
jae
shlb
test
add
jo
lahf
and
sbb
xchg
ja
es
ja
pop
xor
add
jbe
xchg
subb
pusha
nop
aad
add
insl
add
or
arpl
imul
lret
mov
jo
sbb
push
and
jecxz
dec
jne
inc
xor
add
test
push
and
loopne
sbb
test
insb
clc
sub
push
movsb
jb
push
mov
pop
add
xlat
ret
pushf
jb
ss
cmp
outsl
jbe
add
ja
mov
inc
nop
add
xchg
add
pop
dec
fists
xor
insb
push
outsb
mov
outsl
fisttps
dec
sbb
xchg
mov
data16
mov
mov
outsl
add
inc
loope
push
stos
in
out
loopne
add
jbe
in
sub
inc
push
fcomps
cmp
scas
inc
js
or
jl
add
inc
outsb
ss
add
imul
add
mov
fisubrl
pusha
ret
cltd
add
jo
adc
mov
imul
lahf
sbb
mov
aaa
popf
xor
xor
divb
add
ret
mov
or
sahf
imul
sub
sub
orl
and
mov
xor
lret
sub
mov
shll
das
mov
pop
nop
mov
add
les
and
xchg
cli
arpl
je
dec
bound
pop
aad
pop
pusha
fcmovbe
mov
mov
pop
mov
mov
xchg
gs
add
mov
jmp
lret
fs
push
inc
iret
push
sbb
dec
das
rcrb
jo
sahf
imul
sbb
mov
in
push
push
sub
lea
test
or
das
add
mov
push
and
hlt
sahf
jne
push
jae
pusha
arpl
xchg
inc
outsl
inc
int3
rorb
add
dec
pop
add
cmp
ret
imul
or
repnz
pop
push
insl
sub
pop
into
add
sub
in
xor
dec
inc
and
scas
xor
inc
add
sub
dec
add
add
add
pop
scas
mov
or
ss
mov
and
xorl
and
xchg
out
outsb
mov
fiaddl
addb
inc
inc
add
xchg
outsl
jo
xor
add
jne
lock
mov
xchg
jbe
fs
sbb
add
xchg
add
pop
inc
xorl
inc
cmp
pop
xor
xchg
popf
and
adc
mov
mov
inc
jl
xlat
jo
and
adc
ret
in
mov
andb
es
mov
in
call
sub
int3
add
xchg
push
sbb
dec
add
add
das
push
inc
push
cmp
fs
jnp
sbb
mov
push
xchg
add
mov
rorl
lods
ds
pushf
sbb
mov
dec
pop
inc
adc
jns
negl
jl
repz
cmp
xor
fisttpl
inc
das
push
arpl
shlb
mov
and
cmpsb
outsb
je
in
sbb
adc
mov
push
pop
mov
jae
jmp
add
sbb
out
pop
jo
cwtl
rcrl
fisubl
xchg
xchg
stos
cmp
mov
add
sbb
arpl
outsb
sbb
movsb
adc
rcll
pop
cmpsl
test
pop
add
push
test
dec
or
pusha
out
ret
inc
shlb
push
xor
fnsave
push
mov
mov
shll
fdivr
imul
out
xchg
lahf
adc
xor
mov
cwtl
jge
dec
insl
pop
lds
cmp
cmp
mov
rol
cs
test
or
inc
jne
and
pop
push
lcall
inc
inc
dec
inc
rolb
mov
out
or
xchg
rcll
lret
ret
xchg
loopne
jne
jns
adc
shlb
dec
push
add
jnp
loope
mov
test
xchg
add
push
push
mov
push
xor
jbe
imul
insl
add
pop
push
pushf
add
xchg
sbbl
jp
sbb
push
aas
pop
push
pop
mov
cmpb
xor
xchg
loop
testb
add
mov
incl
sbb
addr16
xchg
cmp
arpl
sub
and
fistpl
add
hlt
jnp
jno
jns
movsl
pop
inc
bound
sub
push
insl
jmp
es
inc
push
fiaddl
xor
bound
jl
call
cmpsb
mov
outsl
das
xchg
add
mov
outsb
imul
mov
lods
xor
mov
idivb
push
add
or
ds
adc
mov
adcb
scas
add
das
call
inc
insb
push
ljmp
jo
push
fmuls
mov
add
jb
push
cld
pop
inc
sub
push
mov
sub
pop
cmp
aaa
ja
dec
loop
xor
divl
and
and
push
outsl
push
cmp
fcomps
icebp
xchg
inc
testl
jnp
test
adc
add
inc
ret
in
or
cltd
mov
ret
into
repnz
and
mov
sub
popa
mov
outsb
push
and
jns
shrb
mov
xchg
pop
cmpsb
add
add
loope
pop
push
dec
push
xor
das
sti
popf
add
sbb
mov
loopne
jg
jb
scas
jns
adc
roll
lcall
popa
sbb
scas
xorps
je
loop
mov
pushf
add
push
or
lds
and
adc
cld
clc
ds
pop
and
dec
loopne
mov
call
sbb
xor
mov
add
mov
cmc
ljmp
inc
jmp
loop
movl
push
mov
xchg
inc
xchg
addr16
fcmovnu
add
sbb
loop
sub
dec
add
cmpsb
loop
add
push
das
inc
or
mov
insl
imul
xchg
lret
dec
daa
push
in
cmc
sti
inc
pop
and
mov
push
fs
rorb
and
cwtl
ret
outsb
cmpsl
into
arpl
movsb
push
mov
add
cmp
bound
mov
add
es
pop
sub
mov
jg
outsb
jo
popa
fistps
insb
xor
sbb
xchg
or
xor
orb
jns
mov
jnp
pop
test
aas
rcrl
lods
adc
mov
adc
daa
push
dec
dec
dec
adc
movb
ret
and
or
cld
jg
addl
dec
inc
jg
push
dec
dec
dec
cs
push
push
ret
fs
lods
or
jb
pop
sbb
xchg
je
pop
cwtl
push
inc
and
insl
inc
imul
lds
inc
push
lds
push
jbe
orl
pop
pop
sub
dec
inc
dec
dec
push
xchg
jo
xor
pop
test
sbb
sbb
negl
add
and
fsubrs
pop
outsl
sbb
inc
inc
push
push
xchg
add
and
ret
jle
push
xor
mov
jae
sarl
gs
jae
loope
or
mov
rolb
subb
xor
adc
dec
mov
in
cmp
int3
push
dec
cmp
push
leave
mov
dec
gs
pop
pop
fisubrl
rorb
pop
xchg
pop
sbb
mov
or
and
xchg
mov
das
not
jno
ljmp
lock
xorl
inc
jne
data16
cltd
fisubrl
fsts
lcall
popa
stc
rcr
aas
mov
add
insl
jo
mov
addr16
fwait
adc
jo
daa
pop
sub
fmul
and
outsl
fs
xchg
xchg
and
pop
and
push
test
jae
pop
into
cld
cmp
ret
or
enter
jbe
pop
mov
push
xor
mov
sub
adc
mov
pop
add
add
movsb
cmp
adc
lcall
stc
idivl
push
sub
movb
and
inc
aas
sub
cmp
aaa
add
mov
xor
inc
dec
sbb
pop
push
je
push
sub
ja
add
push
popa
pop
sbb
push
or
mov
lret
sbb
xor
addl
cmp
mov
ss
mov
jae
insl
jnp
ret
daa
int3
lods
outsl
push
shll
out
or
pop
jns
push
cmp
and
pusha
clc
lahf
mov
add
jp
inc
notl
fwait
jnp
xor
movsb
out
xor
popa
mov
push
add
xor
aaa
push
pop
lahf
das
popf
scas
lret
fwait
sbb
shlb
sbb
add
daa
bound
mov
add
cli
mov
mov
dec
push
out
loope
sub
push
mov
xchg
sub
lods
imul
rclb
and
lods
adc
push
mov
shrb
ret
jae
add
insl
jo
aad
pop
push
gs
je
cs
add
dec
and
fldl
lock
mov
jle
add
jp
sbb
jae
xor
xchg
pop
jecxz
loopne
jb,pt
dec
fldenv
mov
jns
add
mov
mov
in
dec
dec
pop
arpl
sub
jge
fidivs
out
stos
mov
xor
sub
out
xchg
cli
popf
pop
pop
push
and
and
arpl
pop
xor
adc
stos
sbb
test
mov
imul
inc
add
mov
push
stos
xchg
jns
incl
rolb
jae
xchg
call
aas
jae
adc
inc
push
cmp
inc
jmp
mov
adc
movb
pop
pop
and
sub
je
pusha
inc
mov
pop
mov
mov
loopne
aas
dec
cmpsl
lods
add
pop
add
inc
ret
nop
dec
test
mov
stos
jns
mov
dec
inc
negb
push
popf
mov
add
or
jno
mov
cmpsb
sti
pop
jbe
leave
fisubrl
lret
and
and
or
sbb
push
daa
mov
pop
push
push
jns
imul
loopne
out
push
cli
pop
in
and
xor
xchg
inc
mov
aas
or
movl
arpl
add
dec
xchg
sbb
pop
xor
into
sub
jmp
add
inc
mov
cmpl
loop
fmuls
sbb
xor
jbe,pn
mov
orb
shll
sub
or
push
stc
and
jb
jae
daa
sbb
or
outsb
pop
stc
cwtl
add
addb
insb
jne
and
addr16
mov
test
push
arpl
imul
andb
inc
push
stos
cmp
daa
pop
sub
fdivl
mov
or
dec
and
sub
ja
das
out
mov
ret
je
push
or
push
or
adc
arpl
daa
jp
out
ret
mov
cmp
mov
pushf
dec
pop
jg
sub
xor
sub
sbb
gs
divl
sti
filds
test
lods
push
mov
cmp
push
add
xchg
sbb
mov
mov
add
int
jne
stos
push
fmull
scas
sarb
int
rcrl
push
aas
push
sti
enter
xchg
or
ds
fcompp
ds
mov
push
dec
ficoml
lock
jmp
cmc
lods
sub
xchg
and
xlat
mov
pop
push
jo
mov
roll
cmp
jae,pt
into
mov
movl
into
xlat
inc
add
push
sbb
adc
push
pop
ja
outsb
mov
inc
enter
push
add
and
add
and
test
or
stos
sbb
push
jp
jp
enter
cmp
jmp
push
dec
xor
add
sbb
aam
mov
cs
in
out
ss
mov
cmpsl
int
psrld
pop
shrl
inc
jecxz
mov
lret
into
in
stc
fbstp
data16
fcmovnb
jg
out
popf
stos
pcmpgtd
addr16
lahf
cmpsl
icebp
dec
ror
ret
loop
mov
mov
push
sar
sti
enter
lret
shl
mov
mov
cmpsl
insl
ss
fs
ljmp
fbld
mov
ret
jmp
mov
bound
cs
mov
or
inc
push
inc
inc
inc
add
mov
push
mov
adc
push
inc
cli
rol
iret
mov
adc
jae
leave
iret
jo
push
sahf
jge
out
jo
outsb
add
into
les
sub
xor
jl
sub
enter
jl
xchg
lock
jp
mov
mov
mov
mov
aam
out
movsl
sub
push
push
movsb
int
jns
test
in
jnp
push
mov
xchg
dec
xchg
in
add
jmp
lahf
imul
in
andb
pop
dec
and
xchg
idiv
daa
cmc
add
outsb
pop
jmp
jmp
loopne
pop
aas
dec
inc
dec
orl
xchg
add
dec
ja
daa
sub
nop
mov
or
push
mov
popl
mov
dec
push
inc
mov
cmp
les
mov
dec
stc
jg
sub
arpl
iret
jg
bound
push
push
data16
ljmp
pop
dec
mov
and
dec
add
adc
and
mov
mov
lret
outsl
dec
inc
test
push
inc
imul
fs
shl
testl
or
pop
pop
add
mov
sub
or
addr16
incl
xor
das
mov
add
inc
mov
dec
ljmp
outsb
push
add
add
add
addb
aaa
clc
mov
jmp
je
adc
cmp
sub
cmc
cmp
es
in
sbbb
in
daa
jbe
xlat
mov
push
in
daa
or
lods
dec
je
add
js
mov
mov
orb
pop
pop
mov
mov
mov
outsl
pop
add
loopne
push
jg
push
add
popa
adc
aas
out
test
sub
and
xorb
pop
and
add
add
addb
sub
daa
testl
add
stos
daa
es
dec
xor
and
sub
add
pop
jmp
iret
add
pop
mov
and
mov
add
sub
les
orb
jl
or
push
ja
push
ret
or
incl
sbb
add
nop
orb
pop
sbbb
inc
subb
bound
mov
dec
jl
orb
lahf
or
and
arpl
daa
mov
mov
dec
mov
inc
mov
and
push
lahf
cmpsl
xor
jl
sub
push
adc
shrb
push
add
add
add
repnz
out
add
incb
btc
cmp
mov
fdivrs
jns
andnps
or
sbbl
adc
mov
xchg
cvtpi2ps
lgdtl
or
idivb
sahf
out
mov
jo
jae
jbe
pcmpgtd
add
icebp
add
adc
jle
or
jecxz
mov
ds
add
push
mov
insb
fmuls
stos
add
pop
pusha
fldt
jbe
add
jae
xorb
fstl
xchg
imulb
pop
lock
clts
jg
notl
sti
sbb
movsl
outsb
inc
shl
mov
add
cmpsb
in
pop
mov
ud0
out
jnp
cmp
cld
cmp
idivl
addb
add
aad
fdivrs
jne
push
jge
loope
mov
cli
std
xchg
mov
push
xchg
fmull
ja
ja
repz
mov
inc
jbe
add
pop
xor
mov
cmp
ss
into
mov
add
jbe
mov
xor
pop
daa
mov
ja
mov
xchg
jmp
push
frstor
jecxz
and
orb
mov
inc
add
loopne
scas
add
sub
scas
loop
add
mov
or
roll
aas
lods
mov
test
lods
add
enter
push
leave
notb
dec
jl
dec
push
gs
xor
and
add
iret
rorl
jb
push
jne
jae
or
cmp
ja
popa
push
dec
or
inc
or
iret
and
adc
adc
push
mov
pop
jne
push
adc
clc
inc
or
in
decl
xchg
loope
dec
out
ret
dec
stc
pop
pop
adc
cmp
pusha
jb
dec
jge
stos
sub
push
cmp
sahf
xlat
add
adc
dec
jns
out
mov
sub
dec
dec
dec
jo
cmovno
imul
xor
dec
outsl
dec
rorb
pop
lret
stc
int3
loope
test
mov
mov
mov
mov
repz
int
mov
test
in
dec
fdivl
pop
xor
push
into
lods
sub
cltd
mov
repz
mov
fcmovb
jecxz
repnz
xor
mov
mov
and
xchg
mov
mov
iret
out
shll
not
outsb
jnp
mov
outsl
mov
mov
ror
mov
mov
into
aam
cld
dec
pop
mov
mov
mov
fcompl
pop
inc
paddw
aaa
out
aas
dec
xlat
rcl
out
mov
mov
mov
int
dec
aad
pop
scas
mov
sbbl
stc
mov
mov
rcrb
mov
mov
pushl
rcl
mov
fidivs
pop
xor
movsl
ss
leave
aam
mov
ret
pop
xchg
ja
jmp
ds
inc
push
outsl
subb
std
jbe
stos
xor
shlb
cmp
push
mov
push
lods
mov
outsb
jp
ret
rcrb
pusha
xchg
sub
sbb
or
arpl
dec
push
sahf
push
xor
cs
push
xor
jne
es
aaa
and
xor
shll
cltd
and
aas
or
dec
pop
arpl
pushf
jae
push
xor
sub
add
dec
lret
sub
cmp
push
les
dec
inc
pop
dec
shrl
mov
mov
push
or
dec
les
rcr
inc
and
cmpsl
aad
cmp
arpl
daa
pop
addb
test
adc
aam
enter
mov
into
fsubrp
push
xor
mov
mov
cmp
pop
shrl
mov
xor
leave
rcrb
fdivrl
or
hlt
mov
inc
lret
fmul
mov
xor
mov
shrb
push
and
sub
shl
mov
js
adc
push
and
popf
loopne
fsubs
xlat
mov
fbld
xor
sbb
jne
out
insl
push
outsb
add
push
daa
icebp
aam
rcl
es
and
test
sbb
jbe
xchg
sub
push
and
dec
adc
loope
inc
push
dec
push
pop
dec
inc
dec
dec
add
sti
xor
sar
mov
adc
mov
js
fmulp
int3
in
fidivs
lret
das
dec
xor
jle
cmp
fsubrl
mov
das
fcmovbe
stos
mov
mov
addb
rclb
addr16
push
out
push
mov
ss
dec
push
and
jnp
add
ds
nopl
jg
add
repz
repz
repz
addl
inc
cmp
pop
push
xor
sbb
and
adc
pop
pop
mov
pop
aad
push
mov
mov
int3
ret
enter
cmp
repz
add
iret
push
mov
cmp
repz
lods
or
rep
or
or
iret
push
cwtl
sete
nop
cmp
repz
mov
mov
repz
repz
adc
iret
push
js
je
jo
iret
repz
insb
sbb
repz
repz
sbb
iret
push
pop
pop
push
and
iret
repz
dec
and
repz
repz
and
and
iret
es
sub
and
iret
repz
and
sbb
repz
repz
sub
iret
cs
or
add
iret
repz
add
cld
ret
sahf
out
clc
xor
xor
out
in
aaa
call
loopne
mov
push
bound
sbb
sub
inc
add
push
dec
fidivl
push
add
or
lods
add
add
adc
popa
pusha
fs
in
push
outsl
outsl
push
jb
call
fsubs
sbb
pop
sbb
sbb
sub
and
cld
ljmp
push
sub
xor
sub
sub
and
ret
call
insb
imul
jp
outsl
sbb
sbb
sbb
push
pop
and
and
sahf
inc
jb
xor
sbb
sbb
cmpsb
push
sub
pop
add
cmpsl
sbb
or
add
sbb
jb
pop
imul
add
sbb
jb
orb
addb
sbb
sbbb
jnp
or
or
add
leave
inc
pop
sbb
repnz
cmp
or
jb
lods
cmp
sub
sub
enter
xor
and
lret
jo
or
sti
add
rolb
adc
adc
sbb
addb
fcmove
xor
sbb
es
sbb
and
and
orb
xchg
pop
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
in
mov
sbb
adc
add
lods
mov
inc
sbb
and
and
repnz
pop
add
and
fdivs
and
repnz
imul
aaa
add
add
mov
push
sub
and
push
and
sub
xor
mov
sbb
lret
test
xor
push
hlt
and
sub
in
mov
add
sub
add
or
sbb
xorl
add
jb
fcompl
xorb
sub
jbe
inc
xor
pop
sub
xor
cmp
add
push
daa
add
or
idivb
sub
cmpb
adc
insl
es
add
adc
cmp
jg
mov
add
sub
cmpb
inc
je
in
and
add
xor
pop
in
push
mov
and
inc
orb
inc
inc
push
nop
mov
in
mov
mov
aaa
inc
aaa
add
add
fcoms
add
pop
in
sbb
or
add
mov
dec
orb
rcrl
ret
add
dec
dec
subb
dec
push
in
pop
add
sub
nop
and
sbb
lret
mov
sbb
sub
imul
push
or
add
sub
push
xor
xor
push
and
sbb
push
pop
sbb
sbb
and
push
dec
jnp
jnp
push
push
pop
pop
daa
add
sbb
mov
add
sub
rcr
dec
sbb
mov
mov
pop
xor
xor
pop
adc
pop
fidivl
imul
or
add
add
sub
bound
fs
xor
add
ss
or
sub
addr16
jne
insl
add
add
push
imul
mov
adc
add
push
in
insb
orb
add
outsb
ss
sub
idivb
jno
jb
push
je
sub
das
jbe
sbb
ficoml
sub
xor
push
jp
daa
add
das
add
aaa
psrlq
jnp
jnp
pop
xor
fsubs
sub
xor
out
or
xor
jg
sbbb
add
fmuls
sbb
sbbl
ja
add
sbb
stc
add
test
fimuls
pop
add
xchg
sub
sbb
aaa
xor
pop
in
sahf
sub
je
mov
add
and
mov
adcb
add
in
scas
sbb
subb
cmpsl
push
nop
adcb
stc
stos
in
xchg
or
add
xor
sub
add
or
pop
xchg
adcb
xchg
sbb
pop
daa
jb,pn
rcr
xchg
mov
add
push
xchg
sbbb
inc
sahf
dec
push
sub
xor
out
ficomps
fwait
orb
addb
add
popf
cmp
add
sbb
sbb
mov
int3
dec
mov
add
mov
pop
sbb
faddl
movsl
push
cmpsb
adcb
test
popf
in
add
orb
add
jns
das
xor
out
jmp
and
push
pop
lds
sbb
aaa
add
and
out
scas
subb
or
add
inc
jle
sbb
sbb
and
add
or
or
in
pusha
insl
dec
mov
sub
and
rcr
mov
das
add
or
cs
outsb
stos
pushf
sub
add
or
push
leave
add
loop
add
add
sbb
in
pop
sbb
cmpb
mov
sbb
leave
in
fmuls
mov
sub
xor
mov
divl
add
add
sbb
jg
pop
ret
adcb
add
movb
inc
faddp
add
es
lret
xchg
outsb
sub
or
add
and
into
sbb
in
popf
ss
roll
out
push
rolb
aam
add
adc
aad
xor
daa
pop
jnp
iret
es
xorb
int
dec
push
sub
orb
fdivs
jb
mov
add
push
xor
adc
sbb
and
sbb
in
jle
adc
sbb
pop
sub
xor
mov
sbb
orb
add
sbb
sti
outsl
dec
and
and
addb
add
or
pop
repz
sbb
fbld
sbb
int
add
loopne
loope
sbb
loop
pop
enter
and
imulb
cmp
sbbb
add
and
pop
pop
out
push
in
ss
orb
sub
fdivs
ljmp
sbb
popw
repnz
in
sub
pop
xor
jns
sti
add
lock
sub
sub
xor
ds
add
pop
jnp
add
xor
sub
sti
push
leave
leave
sbb
sub
sub
xor
in
lar
and
adcb
sbb
clc
jle
popf
fdivs
add
sbbb
std
mov
sbb
ss
cs
nop
or
test
sub
aaa
sub
mov
xor
xor
jmp
sarl
and
sbb
xlat
fdiv
push
add
orl
inc
and
andl
ss
add
add
and
imul
push
ss
add
adc
and
ss
orl
in
xlat
jp
push
adc
or
xor
or
or
push
sub
push
push
add
mov
enter
adcl
in
lcall
pop
das
add
addl
sbb
sbbl
roll
aaa
push
pop
aaa
or
mov
popf
pop
add
and
add
sbb
add
mov
add
and
sbb
push
sbb
sbb
xchg
or
xchg
and
cmpsb
jbe
sbb
add
ss
dec
add
xchg
or
sub
xor
daa
mov
sub
adcl
rolb
add
pop
insb
add
xchg
add
and
outsl
sub
subl
lcall
jg
cs
adc
sbb
subl
mov
cmp
sbb
orl
jnp
sub
and
and
pop
adc
sub
insl
fcomps
and
xor
xor
sbb
cmp
jb
xor
sbb
sbb
xchg
and
xchg
and
leave
inc
jb
add
sbb
xor
fwait
pusha
inc
in
sub
aaa
inc
sub
cmpl
add
imul
add
cmp
das
xor
cmp
add
or
adc
aas
and
out
xor
inc
dec
insb
pusha
adc
pop
sub
out
popf
add
sbb
or
jae
faddl
sub
jecxz
inc
orl
loopne
xor
aaa
or
shlb
add
out
orl
incb
xor
out
add
adc
and
or
mov
sbb
xor
fwait
aam
adc
adcl
adc
sbb
xor
add
mov
cli
add
xor
xchg
push
push
rcrb
mov
daa
or
and
fimull
mov
bound
sub
jb
pop
lock
je
daa
or
sbb
push
aaa
adc
aad
pop
insb
or
adc
fisubl
andb
push
sbb
push
xor
push
mov
sbb
outsl
push
sbb
or
add
movntps
sub
jmp
inc
add
push
mov
mov
dec
addl
xor
or
ret
sub
sbb
adc
push
push
stos
or
xor
add
pop
push
cs
sub
sbb
xor
xchg
ret
fidivl
push
sub
jbe
pusha
push
mov
or
xchg
sahf
add
adc
xor
sbb
or
add
adcb
push
dec
push
xchg
dec
xor
adc
loopne
and
push
das
add
sbb
popa
int
andb
mov
mov
cld
push
outsb
push
orl
adc
pushw
ret
adc
push
xor
xchg
notb
xor
dec
adc
and
ljmp
xchg
incb
and
sbb
inc
inc
sub
bound
xor
ljmp
lcall
push
popa
pop
loope
adc
into
or
mov
sub
out
push
and
push
push
sbb
fiadds
sbb
rcrb
es
cs
inc
or
xor
push
ljmp
jp
pop
pop
pop
or
xchg
xor
xor
daa
out
into
push
sub
sbb
rcrb
push
sbb
adc
addl
adc
push
cs
and
add
bound
shrl
cmpl
push
mov
xchg
pop
or
sub
sub
inc
push
cmp
and
add
mov
cmp
das
pop
orl
add
xor
mov
inc
ficoml
jbe
sbb
pop
data16
add
or
or
or
xchg
cmpsb
sbb
ljmp
xor
jbe
sbb
xorb
adc
and
sbbl
push
ds
xor
into
adc
adc
rorl
out
dec
testb
xchg
inc
jp
add
cwtl
xor
adc
test
sub
and
mov
xor
rorl
popa
adcl
aaa
mov
xor
lods
into
add
xor
pop
ljmp
push
jbe
arpl
sahf
mov
and
ds
call
adc
push
mov
xchg
push
push
and
cs
gs
adc
mov
andw
inc
add
ret
jb
cmpsl
add
cmpsb
adc
add
dec
pop
push
push
mov
push
sbb
bound
push
push
xor
pop
xor
xor
inc
aaa
jb
mov
mov
es
loopne
add
mov
fsubrs
pop
cli
adc
rcrb
es
mov
add
add
inc
lds
sbb
or
or
xor
or
sub
repnz
add
out
subl
ds
rol
sub
add
add
cmp
xchg
gs
push
ficompl
imul
dec
cs
loopne,pn
mov
mov
insl
orl
push
push
pop
or
scas
sahf
mov
outsl
bound
xor
jmp
sub
sbb
or
push
add
stos
push
or
mov
add
test
mov
cmp
sub
pop
xor
add
addl
sbb
mov
jo
int3
sbb
adc
loop
push
imulb
jo
scas
add
adc
or
jno
xchg
add
cmpsb
add
adc
xorb
scas
and
adc
cmp
pop
je
and
push
shlb
jle
xor
daa
or
or
pop
sbb
adc
sbb
sbb
dec
pusha
xor
jbe
data16
ret
or
push
cs
dec
and
mov
mov
jp
fimull
sbb
cmp
adc
bound
roll
test
xor
sub
into
aaa
scas
add
shlb
popa
xor
es
jp
jle
cmp
popa
mov
out
or
jl
ss
fidivrs
sarl
lcall
ret
cs
ret
jge
xor
or
xchg
jle
lcall
bound
mov
and
adc
add
or
mov
jg
mov
xchg
inc
push
aaa
sarb
les
cmpb
and
test
out
mov
popa
push
loopne
lcall
sbb
add
bound
and
sub
add
movl
adc
or
xor
push
or
sbb
stos
jno
stos
lret
xchg
push
cmp
mov
rcrb
cwtl
mov
sbb
roll
sub
sbb
mov
xor
loop
dec
add
mov
jne
scas
mov
andl
sbb
xorb
les
stos
cs
push
sub
cmp
or
inc
test
pop
and
dec
add
outsb
out
or
add
mov
cmp
xchg
test
adc
movsb
and
loop
fisubl
add
lcall
push
jbe
mov
js
adc
cmpsb
ss
movsl
jb
xor
into
add
adcl
add
cmpb
repnz
push
cmp
sbb
mov
xor
sbbl
inc
ss
loopne
test
jle
mov
push
push
push
sbb
sarb
xchg
sbb
fimull
push
adc
dec
sbb
cmpsb
mov
cs
mov
mov
xor
pop
mov
pop
in
mov
sbb
pop
pop
pop
js
rcrl
outsb
rclb
inc
xor
outsb
push
roll
pop
or
cmp
fidivl
xchg
or
adc
scas
cmp
insb
out
push
push
or
jne
push
and
aaa
sub
lcall
dec
adc
subb
mov
add
adcl
out
fisubrl
jb
inc
loopne
push
iret
add
addl
mov
xchg
mov
xchg
sbb
and
push
test
sahf
mov
mov
sub
hlt
add
outsb
push
dec
repnz
pop
pusha
sbb
xchg
adc
sub
scas
xchg
adc
fimull
lods
inc
cli
cli
and
add
test
out
sbb
pusha
fs
out
stos
mov
add
adc
mov
stos
and
movl
pop
adc
int3
xchg
cwtl
negb
cmpsl
and
or
mov
sahf
xor
mov
cltd
xchg
xchg
add
add
into
mov
lcall
pop
stos
or
cmpsb
pop
sbb
lock
xchg
sub
stos
mov
scas
test
loop
dec
and
shll
and
inc
add
push
cmp
bound
cmp
push
mov
in
pop
andl
adc
adc
mov
or
jbe
jo
dec
xor
or
sbb
cmpl
push
aas
sbb
xor
add
ss
jbe
mov
bound
adc
and
mov
pop
jbe
add
int3
test
mov
jae
ficoms
jbe
or
sub
daa
scas
sar
into
xor
jecxz
bound
xchg
and
inc
ss
mov
rolb
dec
cmpsb
push
or
repnz
dec
mov
ljmp
push
xor
adc
push
adc
pop
orb
es
pop
push
xor
sahf
bound
xor
data16
jle
mov
mov
js
push
dec
popf
add
push
lods
push
ds
add
rolb
es
loope
loope
aaa
fisubs
xor
pop
xchg
rolb
sbb
dec
movsl
push
push
into
mov
pop
jae
scas
push
mov
jb
sub
ret
cmp
sar
xor
jbe
test
outsb
adc
sahf
mov
add
jle
mov
adc
sub
sbb
lods
or
push
sbb
or
pop
push
push
mov
mov
cli
add
or
ljmp
mov
xor
loope
sub
xchg
dec
mov
xchg
orl
push
push
xchg
mov
and
push
out
jecxz
dec
mov
push
lret
inc
adc
repnz
frstor
sbb
push
mov
adc
cmp
mov
sub
and
push
add
push
or
rcr
cwtl
add
sbb
test
pop
mov
movsl
addl
popa
cmp
lret
push
dec
sahf
ds
push
pop
sub
test
bound
sbb
sub
push
adc
mov
adc
into
pusha
ret
and
stos
scas
xor
andl
sbb
stos
and
rclb
sbb
or
inc
ret
fcom
shll
ss
daa
into
adc
sub
adc
push
push
shr
push
lods
adcl
push
shll
sbb
lcall
daa
pop
mov
adc
lea
into
dec
or
add
stos
push
xchg
mov
mov
adc
xor
push
or
push
add
ds
adc
bound
mov
xor
jp
loop
sahf
rorb
push
and
sub
xor
lcall
dec
es
fiaddl
sbb
sbb
or
data16
sbb
inc
push
xchg
inc
ret
adc
dec
mov
inc
movl
scas
or
and
mov
lods
sub
and
inc
sub
and
lcall
xor
sbb
sbb
repnz
shrb
xor
bound
push
enter
jle
aaa
and
ret
push
cmpb
mov
and
add
push
es
mov
and
push
roll
dec
add
sbb
adc
or
push
sub
sub
xor
ds
popa
xor
push
mov
xor
pusha
push
push
cmpsb
out
pop
push
push
in
jbe
pop
sbb
add
or
stos
sub
sub
mov
adc
jbe
sub
sub
dec
loopne
add
jp
or
add
mov
popf
adc
addl
incb
mov
cli
mov
xchg
sub
bound
add
or
mov
sub
mov
cmp
mov
popf
js
fstl
adc
fsub
aad
sub
sbb
xor
rcrl
loop
lret
sbb
lods
fmuls
xchg
push
sbb
xor
jo
shl
pop
jle
es
push
fiaddl
pop
mov
sub
insl
out
ss
or
test
inc
adcb
bswap
fisubrs
out
mov
divl
xchg
mov
ss
mov
or
xor
or
fidivs
mov
xchg
pop
repnz
xor
sub
adc
sbb
bound
bound
and
xor
adc
or
bound
add
push
sbbb
and
push
mov
and
pop
and
pop
xor
or
sbb
ret
in
les
sbb
push
sub
lret
dec
mov
and
xchg
bound
sbb
pop
inc
xor
shlb
adc
sbb
pop
push
fildl
sbb
adcl
cmp
push
cli
xor
push
es
into
or
push
xor
pop
cli
cmp
sbb
faddp
push
cs
je
pusha
xchg
and
pop
xor
push
or
cltd
dec
cs
sbb
push
adc
push
add
fs
push
test
push
add
add
and
jae
out
or
sbb
push
or
push
xor
or
xor
mov
in
sbb
add
lods
add
add
cli
daa
lcall
fisubs
inc
lds
jbe
ret
push
add
or
add
sub
pop
push
cmp
push
adc
xor
or
sub
or
push
xor
das
ret
inc
or
and
dec
addr16
add
out
ds
xor
mov
das
dec
fisubl
push
sub
mov
pop
rol
and
push
iret
push
sub
xchg
sub
bnd
adc
cmp
cmp
xchg
xorl
push
and
push
xor
xchg
push
add
subb
adc
inc
pop
cmp
pop
sbb
aad
push
adc
adc
jo
cmpsb
jle
xchg
push
adcl
xor
repnz
sub
jle
push
shrb
adc
or
and
leave
sbbl
int3
test
sbb
add
add
daa
xchg
push
sub
rorb
sub
cmp
dec
add
cmpsb
test
fiaddl
xchg
lret
lcall
das
xor
cmpb
or
add
lret
pop
pop
xchg
or
push
sbb
mov
aam
add
xor
xchg
sbb
mov
push
addb
rclb
and
adc
xchg
push
es
sbb
repnz
int
dec
aam
ds
adc
and
cmc
add
pop
push
lret
std
es
adc
sbb
mov
push
pop
jp
or
xchg
mov
and
mov
sahf
or
test
or
cmp
and
aad
daa
outsb
repnz
test
sbb
push
es
xorl
push
adc
pop
xor
lcall
lea
out
or
xchg
xchg
out
mov
das
adc
das
or
ljmp
jg
add
add
sub
pop
ljmp
mov
adc
into
or
adc
and
push
dec
test
into
pop
add
mov
gs
icebp
sbbb
cmpsb
out
test
int3
and
adcb
loop
dec
xor
fs
xchg
jb
sbb
int
sub
jp
and
lock
cli
add
pop
dec
push
push
and
and
push
push
cli
sub
jbe
sbb
dec
xor
loop
out
mov
cli
mov
add
jbe
sbb
fidivrl
adc
xlat
pop
adc
rcrb
sbb
sub
push
ljmp
je
stos
or
mov
lcall
sub
sub
mov
adc
bound
or
pop
mov
push
xchg
mov
std
adc
inc
push
push
pop
pop
push
rcrl
inc
xor
or
push
add
or
enter
cs
and
jbe
repz
addl
pushw
outsb
pop
lods
loopne
outsb
adc
adc
inc
adc
test
sbb
pushf
ret
cli
movb
adcb
xor
push
jb
cmpsb
mov
sub
aam
xchg
stos
add
push
data16
adc
add
arpl
xchg
into
sarb
aad
jo
sbb
add
je
in
ljmp
push
inc
cwtl
push
add
push
inc
xor
xchg
add
neg
adc
jb
das
fiaddl
mov
sti
lcall
mov
xchg
and
divb
fildl
xchg
dec
das
add
xor
mov
adc
bound
push
sbbb
push
loop
or
into
outsb
mov
sub
and
les
scas
mov
mov
frstor
les
or
out
loop
add
push
shrb
jge
add
dec
and
xor
xor
xor
mov
xchg
out
notb
inc
sbb
push
pop
outsb
jbe
and
mov
pusha
and
mov
divb
or
cmpsl
add
nop
mov
mov
lods
sbb
jbe
add
data16
mov
cli
push
xlat
test
push
xchg
mov
into
xor
sub
and
int3
add
and
jle
out
ret
sbbb
into
test
data16
subb
push
adc
and
es
scas
add
pop
mov
hlt
add
add
loop
push
adc
rorl
push
lods
dec
mov
lret
jle
sahf
inc
sub
sahf
out
fs
aaa
push
push
adc
push
pop
loopne
jb
xchg
ss
sub
jnp
xor
jp
push
add
sbb
xchg
rcll
jno
adc
add
out
sbb
push
mov
negb
loop
push
ja
test
ss
pop
fidivrl
or
mov
sbb
mov
dec
add
cs
jp
je
inc
sbb
push
and
or
push
push
pop
aaa
or
adc
xchg
mov
cmpsb
ss
add
dec
xchg
dec
push
sarb
shlb
cmp
push
ljmp
or
or
out
ds
imul
cmpsb
push
or
adc
shll
insb
pushf
and
out
dec
arpl
add
or
out
push
or
out
push
rcr
push
in
push
and
test
xor
jbe
or
sbb
add
movl
jnp
or
or
push
or
jnp
add
loop
push
or
pop
inc
cmp
and
push
lahf
leave
je
cs
or
cmp
adc
rorb
aaa
mov
stos
inc
fisubl
push
jle
jecxz
add
and
pushf
sbb
out
cs
and
or
pop
xchg
daa
aam
stos
fisubrl
or
add
push
into
sbb
inc
mov
cmp
or
or
push
xor
sbb
jno
inc
out
and
or
cmp
or
pop
or
sbb
daa
xor
cs
popf
bound
xchg
in
xor
xchg
popf
push
stc
mov
or
xlat
push
or
add
mov
into
rclb
or
xor
mov
or
sbb
xor
shrl
cmp
or
or
or
fnstenv
bound
push
or
push
fsubl
pop
or
lea
xchg
repnz
mov
loopne
xchg
or
push
or
adc
in
sbbl
push
adc
or
xor
shlb
or
jmp
mov
add
push
fsts
or
or
pop
push
push
or
or
or
xchg
push
mov
cs
and
and
imul
sbb
xor
outsb
push
jae
sub
and
dec
pushf
imul
jle
sbb
and
pop
and
xchg
cmpsl
popf
xchg
testb
add
xlat
push
jb
or
or
push
aaa
or
add
mov
or
push
jb
inc
je
daa
mov
add
aas
cmpsl
cltd
mov
or
push
or
and
pop
inc
dec
mov
push
or
insl
xor
adc
cmp
or
mov
xor
ds
add
ds
mov
push
sahf
aaa
call
outsb
icebp
or
mov
adc
cmp
test
add
mov
popf
or
or
mov
into
or
or
xlat
or
cmpsl
jbe
add
and
or
cmp
sbb
daa
add
xchg
jns,pn
pop
addr16
pop
adc
xchg
in
mov
or
aaa
add
sub
mov
push
ljmp
inc
push
adc
pop
push
ret
inc
xchg
test
or
mov
rol
sub
or
push
nop
repnz
add
mov
adc
or
pop
push
pop
mov
mov
or
addb
aaa
adc
inc
sub
cs
outsl
fisubs
popf
ds
push
pop
and
inc
and
pushf
or
or
or
adcl
push
push
das
xchg
inc
inc
or
pushf
inc
or
add
cmp
lds
imul
mov
fisttpll
pop
and
or
sub
or
or
mov
adc
and
fistpll
scas
push
mov
push
adc
and
or
ret
stos
cmpsl
nop
add
push
and
push
cmp
imul
add
into
and
sub
xorb
or
out
bound
add
fcmovnb
push
cmpsl
add
or
or
test
pushf
fisttpll
addr16
push
lcall
mov
adc
sub
mov
and
add
push
xchg
push
outsb
xchg
push
xlat
movsb
xchg
cs
inc
push
ret
mov
and
mov
or
imul
push
mov
push
out
xor
rol
pushf
pop
pop
ret
add
aad
mov
add
pop
sub
push
sub
adc
dec
ret
or
es
sbb
mov
xchg
lret
jle
pop
sbb
and
mov
adc
and
sbb
lods
jl
xor
cs
iret
push
ret
jp
repz
pop
adc
aaa
out
sbbb
ret
lea
push
inc
ret
mul
and
or
jl
dec
lock
rcll
or
ficoms
repz
jbe
add
ljmp
push
cmp
and
xor
fucomp
sub
and
ret
imul
push
in
aam
cli
mov
add
les
push
sub
adcb
sub
ret
mov
xor
test
dec
push
mov
lcall
sbb
push
xor
push
inc
cwtl
or
jg
jmp
out
pop
jmp
or
or
ret
add
popa
or
mov
adc
or
mov
push
push
pop
adc
cmpsl
xlat
cltd
ficoms
adc
inc
xchg
add
int3
cmpsl
adc
inc
dec
xor
xor
xchg
xor
addb
data16
xchg
divb
sub
jbe
cmp
arpl
or
mov
jbe
fs
add
xchg
pop
or
push
dec
xchg
xchg
ret
loope
dec
out
add
xlat
test
dec
shlb
push
xlat
push
je
mov
cmp
imul
jne
imul
push
popa
popa
push
outsb
outsb
mov
pop
jne
imul
out
dec
outsb
push
and
push
adc
aas
pcmpeqw
jae
inc
push
popa
pop
jle
outsb
es
jne
cmp
mov
es
pop
gs
repz
dec
jns
jae
jp
js
iret
repz
push
imul
repz
insb
push
outsb
je
xchg
aaa
xchg
push
mov
mov
out
negl
push
jp
push
or
fisubs
out
cmp
push
adc
or
rcl
mov
cmp
sub
aas
and
jbe
push
push
jle
out
pop
mov
add
sub
dec
jl
imul
pop
cmpxchg
mov
mov
or
sub
std
add
fidivrs
fbstp
mov
orb
pop
inc
aam
rol
shlb
pop
push
pop
push
add
sti
ja
mov
shl
aaa
jbe
push
adc
or
inc
inc
sbb
mov
jl
inc
aaa
jl
dec
sub
gs
scas
sbb
mov
out
inc
sub
fdivrl
push
or
pop
mov
nop
inc
or
addb
in
xchg
jo
and
pop
xor
leave
sub
iret
daa
add
addb
or
stos
xor
and
mov
inc
push
jne
push
jl
enter
aas
jg
fstpt
jnp
pop
pushl
pop
aas
and
cmp
outsb
aas
decl
sbb
aas
out
cmp
fwait
das
stos
push
adc
cmp
pusha
or
mov
cmpl
ss
inc
ja
mov
and
xor
or
sbb
arpl
fcmovne
mov
push
push
pop
push
or
adc
push
xor
jae
mov
add
int3
dec
xchg
push
pop
js
add
insl
mov
push
xor
inc
push
push
or
int
adc
push
test
pop
das
ret
add
int3
sub
xor
gs
bound
and
fildl
call
sbb
addr16
sub
mov
push
cli
jns
sub
pushf
shlb
or
fbld
hlt
push
xor
in
jge
xor
test
test
sbb
fiadds
ss
adc
cmp
and
faddp
cltd
cmp
or
dec
mov
push
fldcw
fwait
jb
push
inc
cmp
pop
cmp
ljmp
mov
loopne
mov
lods
inc
push
cmc
dec
mov
cwtl
pop
and
or
data16
inc
popa
and
sbb
bound
fcmovne
int3
push
scas
sub
pop
shll
imul
fistpl
cmp
int3
repz
or
add
pop
jno
test
or
outsl
push
mov
pop
cmp
loop
ret
xlat
push
gs
negb
dec
das
mov
fidivrs
ja
mov
das
pop
repz
outsb
mov
repz
jecxz
cmp
or
and
push
pop
push
int
pop
data16
add
pushf
cltd
cmp
or
in
pop
pushaw
and
inc
pop
push
jnp
jo
mov
xchg
and
scas
mov
jbe
outsl
xor
cmpsl
fadds
mov
push
xlat
es
xor
inc
lret
cmp
stos
pop
jp
mov
ds
push
outsb
jg
shll
out
mov
or
cld
shl
repz
repz
in
aam
iret
repz
les
iret
repz
mov
rep
fs
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
and
stc
cmp
repz
or
cld
iret
out
sahf
cmpsl
hlt
in
in
aam
out
sahf
enter
cwtl
mov
out
xorb
out
sahf
out
cmp
adc
repz
add
into
loopne
shlb
nop
xorb
sbb
repz
pop
cmpsl
or
inc
push
iret
repz
inc
inc
inc
inc
inc
inc
cmp
repz
dec
dec
dec
dec
repz
repz
dec
dec
push
push
iret
repz
push
push
push
push
push
push
jmp
pop
pop
sbb
adc
movsb
jno
jb
jbe
imul
iret
repz
or
or
or
cmp
repz
or
or
repz
or
add
add
iret
repz
add
add
repz
repz
or
or
repz
or
or
or
lret
cmp
or
add
mov
mov
add
pusha
and
aas
pop
sub
imul
pop
jb
cs
xor
add
jb
adc
aaa
and
jb
xor
jb
cmp
fcomp
or
push
jne
das
mov
cmp
mov
xchg
pop
jb
cmp
ss
xor
xor
loopne
in
aas
sbb
outsb
xchg
or
das
xor
dec
dec
dec
aaa
ss
dec
xor
xchg
add
mov
lods
mov
or
mov
pop
cmp
out
pop
mulps
cmp
cmp
push
push
cmp
cmp
push
push
push
push
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
inc
inc
inc
inc
mov
inc
inc
mov
test
stos
nop
out
repz
aad
dec
push
inc
cmp
inc
dec
push
inc
dec
inc
clc
cmp
push
int3
insl
jae
lds
pop
out
cmp
insl
sub
jbe
negb
jl
mov
adc
aas
ja
and
and
pop
loopne
cmpsb
sub
jg
jmp
cmpsb
stos
pop
push
lret
outsb
outsl
xchg
push
pop
dec
dec
add
add
fiadds
cmp
push
in
loopne
cmc
xor
xor
shrb
sbbl
mov
jp
pop
jg
data16
sahf
out
sahf
mov
sti
jns
out
mov
js
push
clc
push
testl
sub
adc
cld
fcomi
cmp
repz
repnz
int3
cmp
cmp
out
fisttps
out
xor
cmp
repz
and
or
out
sahf
out
loopne
lods
out
out
call
out
push
stc
sahf
out
in
push
in
jecxz
hlt
fxch
repz
loop
loope
loopne
cmp
repz
jl
pop
fst
cmp
sbb
jg
mov
push
fld
fmuls
push
xlat
pushf
jo
jns
out
push
aam
push
shll
shl
jns
out
rcll
sar
xlat
iret
repz
iret
in
int3
int
cmp
repz
movsb
lret
js
repz
repz
leave
inc
enter
cmp
sahf
add
sarl
aam
popl
ret
jns
enter
shrb
mov
out
out
pop
mov
cmp
ds
repz
mov
repz
push
mov
mov
mov
cmp
cmp
mov
push
mov
or
add
dec
xor
jmp
add
outsb
add
mov
cld
rol
inc
add
sub
mov
jbe
xor
pusha
ja
repnz
ror
lahf
adc
cli
mov
mov
repz
sub
movb
mov
shr
test
pop
ss
mov
int3
cmc
je
mov
lock
popf
add
mov
add
fmul
jecxz
mov
push
dec
pop
mov
cld
and
xor
mov
pushf
add
daa
cmpsb
mov
shlb
popf
aas
sar
mov
aad
rol
rorl
mov
mov
add
inc
dec
decb
loopne
scas
jp
loopne
enter
ret
pop
push
stos
add
aas
aaa
notl
shlb
cs
fildl
aas
push
sbb
add
test
ret
jecxz
adc
repz
inc
rcrl
dec
daa
enter
mov
pop
iret
std
adc
mov
xchg
data16
pop
aas
add
or
or
xorb
arpl
add
iret
out
rcl
sub
test
ret
sarb
dec
add
test
and
fnsave
push
adc
xchg
aas
cmpsb
gs
sbb
push
inc
cwtl
dec
push
xchg
and
push
mov
mov
mov
sub
jmp
xchg
and
lret
daa
pop
mov
ret
shll
daa
pop
sbb
rcr
scas
pop
outsl
mov
nop
dec
out
aad
in
pusha
jo
out
inc
dec
rcll
mov
and
inc
daa
push
into
stos
mov
mov
or
outsl
lahf
ja
push
addb
das
cmpsl
mov
cmpsl
int3
stos
mov
das
jg
daa
pop
out
mov
das
fwait
adc
pop
push
push
dec
lret
lock
cmp
aaa
mov
inc
jno
sbb
adc
in
shlb
out
shlb
scas
int
inc
xor
test
aas
pop
inc
mov
fstpt
adc
add
shrl
out
pop
clc
test
pop
sub
and
and
aaa
aam
bound
xor
test
cwtl
sti
pop
adc
mov
push
add
mov
mov
or
jmp
push
or
mov
pop
xchg
add
mov
pop
mov
adc
sarb
js
movb
jmp
std
mov
add
scas
mov
sbb
jecxz
lea
and
jnp
fdivrs
nop
mov
lahf
pop
loopne
outsl
int
pop
aas
or
fwait
mov
mov
pop
jae
xchg
add
aas
out
push
jo
add
adc
je
dec
add
xor
daa
jge
xor
cs
ret
mov
inc
sub
pop
dec
idivb
sti
pop
scas
pop
mov
cli
leave
cli
ret
add
mov
int
das
shll
iret
cs
cmovg
daa
mov
and
or
cmpsl
jle
adc
mov
mov
jg
mov
and
mov
aas
addr16
mov
sbb
rclb
faddl
and
xchg
jne
push
sbb
sub
pop
push
inc
loopne
lret
aad
stos
jle
sbb
fs
hlt
jo
sbb
or
or
sbb
mov
push
les
js
pop
out
mov
cmpsl
sbb
or
push
mov
and
daa
or
js
mov
loopne
or
jb
sar
daa
dec
mov
push
cmp
jne
inc
push
add
iret
mov
xlat
repz
std
addr16
mov
iret
ret
insb
jb
out
sub
mov
arpl
negb
out
sbb
in
pop
lret
lds
cmp
push
lock
pop
mov
icebp
mov
and
add
pop
repz
repz
pop
pop
pop
pusha
pop
or
iret
popa
bound
fmulp
repz
mov
les
cmp
cwtl
nop
mov
lret
xor
add
into
pop
enter
jl
ljmp
lds
out
ja
test
movntq
pop
pop
pop
nop
xor
std
pop
fdecstp
xor
fstl
inc
mov
adc
fcoml
sub
das
outsl
and
dec
test
pop
mov
jecxz
dec
in
xchg
mov
mov
jo
mov
push
leave
pop
push
shlb
lar
mov
pop
inc
mov
push
rolb
pop
mov
sub
add
pop
sbb
mov
push
pushl
adc
jge
mov
push
adc
loopne
push
call
pop
xor
loopne
loopne
fmuls
jge
sbb
pop
enter
jl
fcomp
mov
cmpsl
test
pop
mov
mov
pop
mov
ds
outsl
pop
popf
testb
mov
push
sbbb
js
mov
out
mov
in
bswap
aas
cmp
int3
shlb
loopne
mov
jne
insl
dec
ret
in
pop
xlat
iret
mov
cmp
xlat
and
mov
jg
jg,pt
fcomps
out
jp
pop
shufps
or
rcr
orb
pop
xchg
sbb
rol
mov
fiaddl
jg,pn
mov
jg
stos
pop
mov
add
inc
outsl
mov
pusha
sbb
ja
mov
scas
push
lret
jle
clc
xlat
cmpsl
pop
cltd
stos
add
cs
incl
and
inc
dec
inc
dec
add
scas
enter
push
xchg
xchg
pop
push
cmp
out
sahf
js
mov
repz
and
repz
dec
insl
jne
dec
push
mov
push
inc
das
push
mov
adc
add
aas
xchg
fdivrs
aas
scas
aas
inc
fwait
sub
aas
out
test
push
leave
aas
iret
sbb
and
mov
ss
pushl
rcr
mov
inc
inc
pop
pop
mov
fiadds
and
fidivl
mov
ja
flds
push
lret
xchg
fidivl
das
xor
dec
sub
mov
das
xlat
pop
sub
mov
pusha
rcr
outsb
add
xor
adc
xor
mov
das
adc
or
sub
sahf
push
dec
pop
jae
add
or
push
pop
sbb
fwait
gs
pop
inc
inc
pop
pop
mov
inc
pop
push
push
inc
push
inc
jg
movl
add
pop
test
mov
fiaddl
push
pusha
adc
comiss
add
dec
scas
dec
dec
xor
push
xor
mov
push
push
addr16
lcall
jg
or
cmp
push
dec
push
inc
inc
mov
aas
cmp
dec
inc
vmovsldup
aas
mov
inc
push
inc
fwait
push
cmpsl
sahf
or
testl
icebp
push
pop
out
andnps
adc
nop
jge
cmp
add
and
ss
out
mov
lods
adc
ret
lcall
mov
out
xlat
fimull
pop
sbb
daa
fbld
mov
aas
cmpsl
loope
mov
pop
dec
movsb
jmp
push
adc
pop
and
pop
cmp
push
das
or
insb
jnp
or
cmpsb
jno
dec
ja
xchg
outsb
pop
add
or
ja
aas
dec
dec
dec
push
add
add
or
std
or
dec
or
inc
cwtl
inc
insb
in
adc
jno
push
mov
adc
aas
into
aas
dec
lods
xchg
add
cmpsb
add
test
push
push
add
es
lcall
in
pop
pop
pop
sub
push
jbe
aas
aas
xor
adc
negb
add
or
inc
xchg
pop
jp
outsl
mov
add
xor
out
xchg
push
in
fsts
add
dec
call
add
xchg
inc
mov
pop
loopne
repz
sub
push
fcom
ror
iret
repz
enter
movsb
cwtl
jns
out
nop
pop
test
sahf
out
jo
push
sahf
pusha
pop
pop
push
dec
inc
cmp
in
cmp
sub
and
jns
iret
repz
clc
test
sahf
out
fmul
shrb
notb
add
add
repz
repz
outsb
daa
daa
iret
or
or
aaa
or
jne
scas
or
daa
cmp
es
adc
adc
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
jns
or
pop
xchg
sub
mov
and
pop
aas
into
aas
xlat
pop
sbb
add
add
stc
movsb
add
jns
and
addr16
movsl
sbbl
out
test
shll
decb
in
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
or
mov
ficompl
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
xor
inc
das
or
adc
aaa
lods
aaa
ja
lods
inc
xchg
push
or
jne
push
inc
sbb
adc
lods
adc
adc
sbb
cmp
mov
sarl
sbb
stos
sbb
js
iret
repz
jns
jp
jo
jge
in
inc
mull
outsb
add
add
jg
mov
loopne
fsubl
jno
or
pop
adc
ss
or
sbb
xchg
std
aas
mov
lret
adc
mov
add
or
icebp
std
add
lret
xor
cld
lahf
lcall
or
pop
pop
or
add
test
repz
sbb
cmp
repz
insb
adc
cmp
and
or
cmp
inc
adc
xor
xor
sub
repz
and
or
out
iret
repz
or
push
adc
scas
lock
sahf
out
push
call
out
sahf
fsubl
fsubs
in
pop
pop
out
iret
clc
cmp
push
lods
lods
movups
mov
sub
push
or
aas
mov
sbb
out
fistps
shrb
cmp
loope
test
jg
dec
adc
sahf
out
sahf
dec
push
pop
pusha
data16
jns
out
jb
xchg
test
out
push
adc
repz
and
cmp
repz
ret
out
sahf
cmpsl
stc
push
adc
xor
out
sahf
out
test
jl
ljmp
iret
repz
bound
scas
stc
cmp
repz
shl
push
adc
jns
cmpsl
push
xor
jno
hlt
jns
jbe
stos
ret
and
and
add
pop
in
bound
push
push
inc
negl
pop
or
outsb
cmc
or
mov
sbb
mov
sub
and
push
add
addl
sub
push
mov
ja
aaa
xchg
je
stos
add
xchg
cwtl
push
inc
jae
mov
icebp
pop
mov
adc
add
ss
jne
rol
sub
push
cmp
pop
pop
out
adc
or
cmp
mov
xorb
incb
push
push
mov
inc
jg
add
scas
ss
sbb
xchg
in
push
push
rorb
dec
dec
sahf
sbb
in
dec
dec
mov
mov
xchg
or
jno
dec
push
add
out
ret
cmp
xchg
mov
int
jns
repnz
das
dec
sub
inc
test
lret
xchg
xor
cmpl
add
inc
mov
es
or
pop
outsl
mov
scas
and
or
shll
jg
mov
cmp
mov
add
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
clc
lcall
lds
mov
cmpsb
lock
mov
popa
incl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fld
cmp
and
sbb
int
pushl
cltd
add
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
dec
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
pop
ficomps
frstor
pop
cmp
or
push
and
jb
jb
add
jne
roll
in
xchg
dec
adc
push
cwtl
dec
adc
ficompl
add
dec
add
fwait
dec
adc
scas
lods
mov
dec
adc
bound
pop
shrl
push
mov
jbe
push
adc
mov
mov
pusha
mov
mov
hlt
scas
aad
loop
xor
jns
add
mov
jp
cmp
pop
push
inc
loop
jge
add
push
sub
jg
add
mov
xor
in
push
lods
cltd
jl
push
cmpb
sub
aad
out
push
or
xchg
push
jno
loopne
push
push
jg
cmovno
adc
inc
data16
push
pusha
adc
sbb
adc
js
adc
add
mov
or
mov
or
es
mull
add
xor
cld
jb
adc
sbb
xchg
or
sbb
ficomps
stos
cmp
add
mov
push
pop
or
mov
pop
push
out
add
data16
and
fcmovnbe
cli
addb
push
stc
xchg
icebp
lret
and
add
and
sbb
add
daa
popa
pop
addr16
arpl
pusha
add
sub
pop
rcll
inc
jmp
cmpsl
mov
sub
push
imulb
push
and
sbb
xor
inc
push
sahf
pushf
and
outsb
scas
jle
outsl
xor
xor
dec
les
sub
pop
rcll
xor
add
sysenter
icebp
cmp
add
cmp
js
add
inc
push
xlat
mov
pop
cmp
push
mov
imul
jo
inc
clc
sub
add
mov
mov
inc
ret
mov
cmp
shlb
inc
aaa
pop
test
and
sbbl
lea
mov
mov
in
punpckhbw
push
xor
cld
insb
std
cltd
push
xor
mov
or
test
cmp
outsl
cli
xchg
mov
mov
loopne
loopne
loopne
push
incb
mov
dec
push
push
nop
add
sub
fidivrl
xchg
or
orb
pusha
sarb
push
push
add
dec
cmp
orb
add
repz
lock
add
sub
adcb
int
in
sahf
jb
push
scas
rolb
add
dec
or
or
mov
add
push
add
repz
pop
adc
push
push
xorb
iret
repz
mov
enter
iret
repz
clc
ja
add
jns
cmpsl
js
jns
addr16
lcall
mov
mov
jl,pn
jns
add
rolb
call
mov
pop
sbb
xor
loopne
out
mov
aas
or
pusha
cs
sarb
rclb
sahf
out
push
cmp
fsubrs
ss
out
jle
push
add
pop
adc
out
cmp
mov
sahf
out
dec
push
push
push
sahf
out
cwtl
adc
sahf
out
loopne
clc
sbb
repz
adc
sbb
sbb
mov
pop
or
jo
popl
add
cwtl
push
jg,pn
mov
lods
jbe
jmp
ljmp
jb
out
dec
pop
das
adc
pop
enter
add
push
pop
and
enter
enter
nop
mov
mov
pop
enter
loopne
cltd
inc
pop
and
or
nop
or
add
xor
mov
or
lods
in
add
jbe
cs
adcb
nop
or
mov
das
nop
lock
adc
add
sbbl
add
jb
pop
and
add
sbbl
lock
das
add
and
inc
pop
leave
xor
pop
add
pusha
mov
loopne
jo
cmp
pop
in
push
shlb
pop
repnz
fcoms
sub
pushf
nop
xchg
xor
pusha
ds
aas
out
in
test
inc
mov
movsb
cmp
dec
add
inc
inc
or
bound
rcrb
pop
mov
adc
dec
push
in
dec
sbb
dec
js
int
enter
lods
push
or
movl
rcl
jg
pop
ds
int
pop
sub
lods
lock
popa
or
lcall
or
push
test
push
in
pop
sarb
cwtl
les
jp
inc
insb
jnp,pt
jnp
cli
cmp
push
ljmp
fs
or
jbe
mov
les
push
int3
pop
js
or
push
loop
imul
lock
jl
ds
cmp
push
sub
js
xchg
xor
jg
jl
xor
push
sub
dec
lcall
jle
xchg
fs
cmp
fadds
pop
in
ja
and
push
adc
repnz
repnz
test
mov
in
pop
add
jle
notb
shrb
pop
or
inc
pop
div
sahf
mov
inc
add
push
fidivrl
cmp
sahf
fnsave
add
imul
and
popa
data16
and
loop
and
xor
daa
pushl
mov
dec
push
push
inc
push
pop
push
inc
push
dec
push
add
or
sti
andl
inc
dec
andl
rclb
inc
push
pop
inc
into
fstps
imul
cmp
sti
push
sbb
sub
jl
and
push
add
inc
push
inc
lcall
mov
add
inc
dec
inc
push
inc
inc
inc
and
fadds
lahf
and
jo
insl
popa
ja
cmp
jns
jo
sub
xor
cmp
ss
das
das
outsl
insb
clc
rcll
inc
insb
arpl
pop
push
add
andb
add
jg
push
dec
jo
mov
inc
mulb
cltd
movsl
arpl
jmp
push
mov
push
or
lds
add
idivb
xchg
movsl
add
popf
orb
das
aas
enter
mov
push
adc
inc
push
data16
ds
jbe
jg
ss
jl
repz
push
js
pusha
inc
data16
add
push
clc
lock
aas
addr16
ret
rol
mov
cld
ret
fcomi
mov
adc
sbb
jl
fst
jl
insb
and
cltd
pop
bswap
mov
add
add
add
fidivs
push
push
int3
add
addr16
scas
mov
inc
xor
pop
sub
out
pop
clts
or
cmp
std
add
notl
add
fs
add
outsb
sub
loope
push
clc
or
lock
mov
rolb
dec
pop
add
pop
jg
sbb
out
es
in
cmp
loopne
rclb
push
imul
shl
fs
adcb
sub
jle
outsl
fmulp
test
pop
cmp
push
push
fwait
lahf
out
push
dec
push
rcrb
pop
add
push
sarb
cmp
movsb
push
lock
push
add
scas
insl
lcall
cld
pop
ret
xchg
scas
push
stos
js
iret
dec
scas
aaa
adc
pop
cmpb
mov
clc
imul
push
leave
dec
test
mov
fs
rcrb
subl
int
test
mov
ja
out
pushw
pop
js
xchg
push
dec
ret
leave
movl
pop
add
mov
iret
sub
incl
aas
and
loopne
sar
pop
lret
orb
jnp
rolb
and
jmp
fldl
and
mov
ret
xor
in
cmp
mov
orb
add
pop
jae
fdivr
jnp
ds
add
mov
imul
fstpt
push
fdiv
pop
mov
lcall
test
fs
sbbb
cmpb
aaa
cltd
pop
orb
pop
cmp
in
or
jg
and
lea
xor
jg
adc
ud0
pop
pop
mov
divps
mov
ficomps
js
nop
lea
jle
in
cltd
in
into
movd
fldl
btc
pusha
xorl
mov
bt
in
jno
and
faddl
or
cwtl
fsubrp
cmp
orl
push
add
fstpl
xchg
adc
xor
cs
mov
clc
ja
js
gs
imul
mov
es
adc
aas
outsb
ja
add
jnp
daa
xchg
movb
daa
out
jmp
js
loopne
aas
daa
fsubl
xchg
xchg
inc
pop
pop
push
sub
pop
cmpb
loopne
ss
cmpb
mov
sbb
push
pop
adc
pop
bound
popl
and
aaa
scas
sub
call
pop
add
pop
scas
fwait
ds
add
pop
outsl
jnp
sqrtps
sbb
sbb
pop
js
xor
mov
pop
in
dec
jge
lods
pop
adc
mov
fistl
adc
add
scas
inc
mov
add
xchg
repz
mov
nop
dec
scas
and
ret
cltd
xor
mov
sub
dec
ret
sub
test
fmuls
ficoml
cs
sarl
adc
pop
push
nop
dec
insb
mov
andb
aas
inc
add
push
or
cmovbe
jl
scas
pop
adc
arpl
mov
mov
js
pop
mov
jp
inc
loop
loope
fimuls
sub
pop
dec
adc
pop
faddl
jnp
pop
mov
inc
lret
sbb
out
inc
xchg
or
maxps
mov
add
pop
rolb
or
mov
jle
js
or
jo
adc
ss
xchg
lock
sub
jg
push
pop
mov
jo
mov
popl
loopne
mov
pop
xchg
lret
popl
and
pop
aas
xchg
xchg
mov
add
jmp
sub
sbb
mov
mov
sbb
push
in
mov
adc
xor
pop
mov
xor
pop
xchg
push
mov
or
ja
js
xchg
xor
cmp
xorl
mov
cmp
jae
idiv
inc
jp
jp
dec
or
out
jnp
sbb
fisubrl
mov
push
push
ret
xlat
pop
data16
in
or
js
mov
or
jbe
push
scas
or
or
ja
xlat
pusha
mov
xchg
or
xor
or
or
fistps
or
push
pop
or
insl
roll
add
xor
cmp
inc
inc
adc
lahf
sub
ja
sbb
mov
mov
pop
push
outsb
inc
iret
xlat
into
mov
sbb
and
mov
movsb
cmp
jle
xchg
sub
push
loop
adc
add
xchg
dec
sbb
jo
push
imulb
or
stos
or
sub
mov
cld
clts
pop
seta
negb
sysret
pop
psrld
mov
iret
daa
or
add
fwait
inc
or
xchg
mov
addr16
daa
lock
add
sub
xchg
dec
dec
inc
xor
in
add
adc
mov
lahf
out
xchg
or
aas
popl
adc
lods
add
pop
mov
add
enter
xchg
lock
sahf
daa
add
loopne
cmpsb
es
or
mulb
sbbl
es
andl
lock
and
add
addb
orb
add
sbb
sbb
pop
sbb
jl
mov
cmp
rcrb
sub
add
mov
outsl
ja
jo
insl
pop
jnp
ja
cmp
mov
outsl
in
insb
or
add
or
ret
mov
jg,pt
popf
enter
hlt
mov
jl
pop
xchg
add
add
sbb
aaa
add
push
sbb
or
shr
push
xchg
pop
sub
push
xor
movsb
addb
addb
shlb
aas
lea
xchg
xor
sarb
repnz
psrad
or
fldcw
popl
ud0
or
cmp
pusha
dec
pusha
insl
sub
cmp
bound
mov
xchg
add
pop
cmovae
adc
pop
pop
dec
push
or
into
xor
mov
outsl
mulb
idiv
or
gs
and
add
ja
sbb
inc
add
or
scas
dec
and
ss
div
pop
data16
out
andb
or
inc
rolb
flds
clc
adc
mov
pop
mov
mov
xor
jo
fstpl
push
jg
sbb
cmp
xchg
clc
xchg
add
push
pop
ja
out
pop
add
add
lret
xchg
pop
jno
int3
mov
testb
pop
negl
inc
push
mov
lds
add
cmp
out
ja
ficomps
sbb
adc
xchg
std
add
test
sub
icebp
out
js
jbe
aas
push
jg
jns
or
addl
ja
mov
or
sub
jecxz
insl
ret
xchg
inc
aaa
in
sub
clc
mov
insl
fcmovnb
mov
mov
or
fidivs
pusha
add
ret
add
jg
fsub
ss
sbb
sbb
xchg
fsubrs
insl
xor
imul
lods
int
divl
subl
out
and
cmp
adc
in
mov
mov
das
aad
dec
cmp
add
das
jbe
mov
outsb
shr
popa
addr16
dec
mov
out
mov
jbe
popa
insb
fstpt
popa
das
repz
dec
mov
pushf
popa
add
fstp
das
nop
out
pop
imul
popa
outsl
popa
das
sub
popa
das
pop
arpl
mov
jg
out
cmpsb
sbb
fs
pop
cmp
dec
pop
movups
sub
lods
jg
cltd
mov
or
xor
add
pop
push
xchg
shll
push
and
jo
popf
or
push
sbb
add
notb
pop
jg
dec
xlat
loope
ret
jb
xor
negl
setne
mov
cmp
clc
pushf
jnp
cmpsb
and
xchg
inc
loope
js
test
cwtl
rclb
movsl
jbe
das
sub
cmp
mov
dec
mov
push
inc
das
out
jmp
das
mov
dec
mov
adc
insb
push
incl
add
push
jg
out
or
pop
pop
or
cltd
add
dec
je
or
mov
sub
popa
xchg
aaa
aaa
scas
sbb
add
push
push
dec
mov
inc
pushf
xchg
aas
iret
push
call
or
dec
and
and
dec
or
daa
out
jb
or
daa
add
addb
nopl
inc
outsl
pop
arpl
aaa
or
sub
pop
mov
push
faddp
pop
xchg
andb
dec
mov
mov
and
orb
aas
mov
or
or
add
je
push
xchg
xchg
push
bound
sbbb
cmpl
xchg
in
lock
daa
or
cs
adc
mov
nop
cmp
btr
sti
insl
mov
add
outsl
mov
fcoms
fs
mov
add
outsl
lahf
out
inc
dec
or
add
or
ja
fsubrl
cmp
pop
pusha
enter
xchg
pop
sub
or
addr16
adc
stos
jecxz
add
jnp
mov
dec
push
inc
scas
lods
movsb
cmc
xor
ss
xorb
gs
jne
andl
add
xorl
aaa
aam
ss
ss
in
loopne
cmc
aaa
dec
add
outsb
cmc
aaa
add
fisubrs
add
das
fists
sahf
in
and
out
sub
mov
cmpl
lock
adc
add
push
loop
imul
cmp
shr
adc
lods
sub
sub
jb
cltd
dec
pushf
pop
pop
push
bound
insb
inc
xchg
push
jmp
push
push
lret
dec
inc
in
xchg
and
add
pop
gs
pushf
pushf
sbb
dec
pop
add
jns
push
mov
insl
out
in
fisttpll
pop
rclb
cmpsl
inc
jle
sbb
push
mov
arpl
xchg
inc
push
inc
idiv
fisubs
clc
adc
pop
pop
add
push
xchg
shlb
out
mov
mov
mov
mov
sbb
xchg
add
mov
pop
adc
and
sar
int3
je
stc
add
mov
sbb
cmp
pop
loopne
sbb
jle
adc
outsb
js
mov
inc
sar
dec
movsl
dec
pushl
test
xlat
dec
shll
mov
adc
pop
lock
add
add
xchg
add
push
xchg
cmc
xor
loop
and
mov
fcoml
outsl
sub
mov
aaa
ljmp
dec
aaa
xlat
iret
xor
mov
adc
push
xlat
jmp
and
xor
push
mov
mov
stc
pop
fisttpll
or
outsb
adc
ss
pop
cmp
push
and
outsb
mov
aas
jp
and
testb
addr16
xchg
push
xchg
inc
dec
add
cmp
inc
dec
iret
xor
testb
xchg
push
gs
dec
fisubrl
xor
xor
ret
inc
add
pop
inc
int
xor
outsl
jne,pt
mov
push
push
dec
dec
lret
jae
adc
imul
or
xor
mov
scas
daa
add
xor
add
jae
or
mov
insb
push
pop
jo
sahf
mov
sub
imul
xlat
push
jb
dec
ljmp
leave
dec
pop
out
xchg
xchg
xchg
sub
add
dec
mov
jbe
dec
xchg
sub
imul
imul
xchg
shl
dec
aas
sub
vmwrite
jg
movhps
lcall
mov
aas
inc
mov
outsl
mov
pop
inc
pop
sbbb
sbb
push
dec
mov
pop
loop
popa
shll
sbbl
faddp
das
push
pop
out
jle
push
push
aam
push
push
inc
mov
and
repnz
cs
movsb
ret
jecxz
idiv
das
pusha
push
loopne
orb
xchg
mov
add
sub
add
jmp
xor
pop
jbe
dec
imul
mov
inc
call
inc
or
xor
mov
cltd
or
mov
cmp
sbb
adc
in
cmp
mov
inc
jl
xlat
fcmovb
xchg
scas
cmp
ja
lret
pop
mov
mov
andb
jnp
iret
push
repnz
movsl
sub
jle
addr16
nop
lret
add
push
int3
or
fbstp
xchg
rorb
ficoms
adc
xchg
or
add
sbb
cmpsb
idiv
dec
jo
pop
test
xor
shl
je
sti
mov
insl
inc
stos
add
fnstsw
scas
sarb
outsb
jg
lahf
jmp
sahf
push
jg
sbb
jg
cltd
sbbb
inc
ret
iret
xchg
xor
pop
xor
mov
pop
pop
sbb
aad
test
int
or
pop
inc
push
add
mov
push
sbb
xor
filds
lock
inc
add
push
jle
rol
mov
iret
imul
inc
mov
sub
xor
cld
and
lods
sub
fbstp
dec
push
pop
rcr
pop
xchg
pop
test
mov
ficomps
push
lock
add
pop
adc
test
fsts
dec
pop
shrl
cmpps
repz
add
or
pop
aas
adc
pop
dec
mov
jle
daa
lahf
add
xchg
inc
ds
adc
insb
add
pop
orb
and
mov
insl
ud2
icebp
outsl
icebp
arpl
push
das
or
testl
adc
add
sbb
mov
outsl
pop
inc
pop
pop
xchg
dec
orb
enter
call
jb
xor
xchg
addr16
insl
inc
jbe
push
sub
jmp
xchg
push
lds
push
mov
popa
rcl
aaa
adc
fimull
sbb
bound
insb
or
xchg
push
call
icebp
jle
addr16
mov
cli
and
push
ret
adcb
push
insb
es
fidivl
mov
jnp
ss
test
outsl
push
dec
mov
clc
jge
fs
sbbl
cmp
xchg
inc
aas
xchg
aas
sub
or
cs
test
sarl
or
hlt
mov
fisttpl
int3
and
mov
addl
pop
dec
sbb
push
loope
sub
daa
push
pop
pop
jnp
call
xchg
push
in
sti
test
jbe
jbe
inc
cmp
fisttpl
mov
xchg
mov
push
nop
dec
pop
dec
push
xchg
arpl
xor
inc
lock
push
cli
push
iret
jg
inc
add
mov
mov
add
outsb
icebp
add
mov
cmp
aaa
cmpsb
shll
in
pop
push
add
cmp
sub
pop
data16
inc
mov
push
loopne
pop
push
xchg
jge
ret
adc
nop
xchg
iret
test
add
decl
inc
adc
push
cli
push
sbb
add
or
test
or
jl
or
das
sahf
add
cmpsb
ss
sbb
int3
insb
rcll
jb
push
test
fcmovne
es
sahf
xchg
shll
jo
jae
ds
dec
cmpsb
out
mov
push
add
pop
sahf
dec
gs
adcb
not
outsb
pop
pop
sbb
xor
mov
sbb
std
push
ficompl
dec
pop
cmp
push
sub
jle
andl
pop
ficompl
jp
xor
jp
cmpsl
sub
pop
sub
sbb
lret
and
pop
das
push
cmpb
pop
stos
ds
cmp
ja
mov
nop
xchg
pop
jne
mov
shl
pop
and
pusha
andl
lret
and
inc
das
or
push
call
cwtl
push
stos
jb
sub
xchg
jbe
adc
clc
jbe
push
and
push
push
xor
incl
sbbb
or
mov
jmp
pop
dec
fildl
mov
repz
xchg
push
push
bound
add
insl
data16
nop
mov
xorl
xchg
das
jle
xor
ret
or
mov
xor
movsl
arpl
shll
ja
mov
xchg
fcmovbe
hlt
in
ss
pop
pop
cmp
push
out
cmpsb
subb
pop
inc
jl
mov
movsl
jbe
fsubrs
dec
ja
cs
mov
inc
je
mov
fildl
imul
out
push
imul
xchg
xchg
imul
dec
push
pop
dec
pcmpgtd
pop
xor
sbb
dec
lahf
scas
mov
js
or
and
nop
jmp
xchg
add
outsb
sub
xor
cli
xor
orl
fisttpl
pop
addr16
add
mulb
cmp
push
xchg
jge
jae
lea
pop
das
fnstenv
mov
outsb
cwtl
jp
xchg
mov
sbb
outsl
inc
mov
xchg
mov
push
jbe
mov
push
out
lea
push
cli
pshufw
outsb
js
and
js
jbe
lcall
fsubp
outsb
xchg
pop
stc
rorl
pop
cmpsb
pop
xor
mov
mov
std
mov
or
push
push
dec
mov
xor
pop
pop
cltd
push
loopne
xorl
sti
fiaddl
in
xor
add
aad
rcll
jne
pop
jecxz
mov
xlat
or
arpl
xchg
xchg
imul
lahf
push
data16
daa
mov
sbb
pop
mov
or
mov
nop
push
adc
das
xchg
arpl
pop
cmp
mov
cmp
cltd
push
cmpsb
and
dec
xor
jb
add
sub
scas
out
adc
ret
push
pop
subl
addr16
pop
das
push
sbbl
push
add
das
popa
and
push
cmpsb
add
outsb
out
cs
jae
add
aaa
cmp
mov
push
xor
fnstsw
add
add
or
les
dec
push
lcall
push
addb
lret
push
je
cmp
inc
into
orb
adc
adc
out
push
cli
pop
cmp
shl
push
mov
pusha
add
cmp
pop
insb
js
shl
adc
lret
mov
cmp
pop
movsl
bound
pop
jo
jno
stos
dec
fisttpll
pushf
inc
xor
xchg
cmp
cltd
jnp
out
jbe
inc
sub
xchg
out
jp
mov
hlt
push
stos
scas
sbb
and
or
push
xor
aad
adc
test
ds
pushl
sbb
ljmp
arpl
xor
jmp
cs
jbe
mov
data16
add
jge
mov
xchg
pop
outsl
push
inc
mov
nop
lret
nop
add
add
ljmp
add
mov
add
sub
and
call
jbe
xor
sbb
jne
loope
mov
js
jnp
daa
xchg
xchg
inc
add
push
xchg
adc
scas
pop
or
cmp
iret
pop
incl
add
out
push
add
mov
lidtl
cwtl
add
addr16
popf
jp
and
scas
popa
jns
fisubrl
jl
cmp
xor
mov
and
ret
jl
push
inc
int
xor
pop
incb
mov
inc
dec
arpl
jo
outsl
dec
jnp
dec
adc
mov
mov
data16
sbb
inc
mov
push
or
and
dec
mov
adc
mov
lods
xor
daa
inc
dec
dec
stos
fsubl
mov
mov
subl
push
orb
dec
js
inc
add
or
pop
int
jbe
jg
sub
jne
in
jne
imul
rolb
jae
cmp
loop
addr16
je
aaa
cs
dec
push
jg
sub
add
das
add
push
xlat
out
mov
jne
popa
jp
arpl
js
add
jb
stos
or
mov
jae
ds
xchg
adc
test
add
inc
or
mov
test
adc
or
adc
mov
xor
push
xor
xor
xor
popa
xor
xor
and
pushl
cmp
outsl
xorl
ss
cmp
cmpsb
push
push
imul
sub
xor
mov
xor
xor
xor
lods
ss
ss
and
xor
pop
cmp
mov
cmp
cmp
mov
xchg
cmp
cmp
cmp
pusha
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
sahf
cmp
loope
cmp
inc
ds
ds
test
mov
mov
ds
sbb
xor
cmp
dec
aas
and
clc
aas
fwait
aas
movsl
aas
aas
fidivrs
call
mov
xor
test
aaa
sarl
fdivrs
out
cmp
cmp
cmp
mov
inc
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
mov
ds
ds
xor
scas
aas
decl
pop
inc
cmpsl
or
lods
xor
xor
xor
xor
cli
pushl
pop
xor
xor
xor
xor
xor
xor
xor
xor
add
pop
or
sub
cmp
jge
int3
ss
cmp
xchg
insb
into
xor
xlat
xor
xor
jg
cmpsl
divb
popf
aaa
mov
mov
cmp
cmp
in
idivl
add
pop
fcomip
lcall
lcall
lods
cmp
cmp
cmp
jl
xchg
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmpb
pop
cmp
or
aas
mov
ds
in
aas
mull
xchg
xor
xor
xor
xor
push
xor
int3
xor
sub
pop
mov
push
mov
cmp
lcall
adc
xor
cmp
cmp
lock
cmp
idivl
inc
ds
ds
jae
jle
mov
aas
lods
std
ljmp
js
xor
xor
rcrb
pushl
in
xor
xor
sbb
xor
aas
xor
xchg
xor
xor
xor
mov
xor
push
mov
mov
and
xor
xor
and
cwtl
ss
pop
fbld
adc
push
cmp
mov
cmp
cmp
aas
lods
out
adcb
xor
pop
lock
xor
ljmp
xorb
adc
inc
mov
mov
ss
lock
sti
sbb
sbb
loopne
ljmp
out
cmp
nop
sahf
decl
scas
xor
xor
xor
xor
xor
lahf
xor
pop
cld
cmp
test
xchg
dec
cld
cmp
mov
mov
cmp
sbb
jae
xchg
jle
pop
aas
lea
fsubl
inc
mov
push
div
aas
hlt
push
mov
lock
xor
pop
xor
push
xor
push
xor
xor
xor
shll
adc
cmp
cmp
cmp
cmp
cmp
loope
std
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
sarb
test
sbb
xor
cmpb
and
pop
icebp
inc
pminsw
mov
xor
xor
jg
iret
xor
xor
cmp
ss
ss
inc
aaa
test
leave
aaa
add
inc
cmp
lcall
mov
loope
xchg
or
adc
adc
out
cmp
lahf
sahf
jge
insb
and
dec
or
cmp
cmp
and
sub
cmp
jg
adc
cmp
cld
cmp
or
or
adc
fistpll
mov
xchg
xor
xor
xor
mov
xor
mov
ret
ss
lcall
push
aaa
xor
mov
mov
cmp
cmp
cmp
mov
xchg
repnz
aas
inc
aas
push
aas
popa
aas
jno
jl
popf
aas
cmpsl
scas
dec
icebp
push
lcall
push
xor
clc
pushl
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
add
icebp
jg
dec
xor
xor
out
xor
xor
xor
test
aaa
ja
in
lea
cmp
cmp
sub
inc
cmpsl
ror
xchg
cli
jg
xchg
xor
xor
mov
clc
clc
pop
xor
xor
or
cmc
fbld
mov
cmp
cmp
cmp
cmp
lock
aas
cld
orb
adc
cmp
cmp
cmp
cmp
cmp
jg
bound
cmp
jb
jp
jg
test
mov
mov
xchg
cmp
mov
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
push
cmp
call
aad
cmp
cmp
cmp
xchg
cmp
inc
cmp
push
cmp
add
cmp
test
jmp
cmp
cmp
cs
mov
cmp
inc
ds
aas
lret
xchg
hlt
adc
ljmp
xor
add
call
scas
xor
xor
xor
jg
sar
aad
pushl
jecxz
dec
xor
xor
xor
xor
xor
in
jmp
bnd
sar
cld
xor
push
and
dec
cmp
inc
lcall
dec
ss
ss
ss
arpl
push
ss
xchg
mov
pop
aas
cld
ss
ss
ss
dec
test
shlb
ss
ss
or
fbstp
out
out
ss
ss
decl
or
sbb
pop
aaa
and
sub
xor
add
das
cli
aaa
inc
aaa
dec
aaa
loop
aaa
pusha
aaa
gs
push
outsl
aaa
jbe
jge
test
mov
xchg
aaa
or
aaa
mov
aaa
mov
aaa
enter
aad
ficompl
in
lods
clc
pushl
jmp
icebp
aaa
divb
sti
aaa
add
pop
cmp
adc
adc
and
mov
cmp
xchg
aas
cmp
dec
cmp
push
cmp
bound
pop
std
stos
xor
insl
cmp
ja
jle
mov
pop
test
scas
pop
lcall
cmp
inc
enter
rol
bound
loopne
out
cmp
subb
cmp
cmp
cmp
sbb
cmp
xor
cmp
mov
dec
sub
cmpsb
cmp
mov
cmp
dec
xchg
cmp
sub
cmp
cmp
cmp
mov
inc
mov
aas
dec
sbb
add
mov
xchg
xor
jnp
pop
xor
xor
xor
sbb
es
inc
aaa
inc
aaa
data16
imul
aaa
mov
out
add
fs
mov
scas
insb
xor
in
jle
xor
xor
or
ss
xor
mov
lock
clc
decl
imul
mov
jae
aaa
cli
popa
cmp
sbb
xor
cmp
cmp
mov
loopne
cmp
sub
cmp
cmp
cmp
cmp
xchg
cld
cmp
ret
cmp
or
ds
negl
sahf
sahf
test
push
fistpll
repnz
loope
lahf
mov
xor
in
or
push
xor
xor
clc
jmp
cld
xor
xor
xor
xor
xor
xor
jl
add
lods
xorb
or
jmp
push
fsubp
xor
ficomps
jo
sbb
inc
and
out
cltd
aas
lahf
iret
xor
xor
ljmp
xor
je
js
jl
xorb
xor
call
xor
test
lods
xor
xor
enter
pop
jg
aam
fdivs
fdivl
loopne
xor
xor
xor
xor
jg
dec
pop
xor
xor
xor
or
or
pop
fldl
rclb
sbb
sub
popa
hlt
incl
mov
xor
xor
xor
xor
clc
stos
insb
insl
push
mov
je
aad
cmp
cmp
cmp
push
lcall
pop
cmpsl
imul
xor
xor
and
xor
pop
loope
and
push
jbe
jle
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
add
adcb
xor
ss
ss
cli
cwtl
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
dec
cmp
mov
stc
cmp
inc
add
cmpsb
pushl
movsb
xor
xor
imul
lock
loope
mov
add
popf
xor
or
push
xor
xor
lcall
xor
xor
xor
stos
xor
xor
pop
adc
lea
inc
rcl
xchg
lret
bound
adc
jo,pt
mov
cmp
test
icebp
cmp
aas
insb
decb
push
cmp
insl
cmp
cmp
add
cmp
xchg
cmp
clc
push
dec
ds
xchg
or
adc
adc
sbb
sbb
and
and
sub
add
add
xor
xor
xor
xor
xor
subl
xor
dec
cwtl
xor
xor
dec
sbb
xor
cs
stos
sbb
cmp
cmp
adc
sbb
and
pop
pop
inc
cmp
push
cmp
cmp
xchg
cmp
clc
fbstp
and
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
fwait
lock
push
cmp
mov
cmp
cmp
repnz
pop
cmp
test
arpl
jae
cmpl
ds
aas
aas
mov
lcall
jge
xor
fs
mov
shlb
loopne
clc
ss
lcall
jl
inc
cmp
cmp
lcall
cmp
cmp
aaa
sub
clc
cmp
cmp
iret
inc
movsb
mov
add
sub
push
or
loopne
int
hlt
xor
xor
xor
xor
and
loope
aas
cmp
pop
push
xor
cli
xor
loope
inc
mov
push
jp
xor
aam
fdivl
or
xorb
data16
pop
mov
mov
cmp
cmp
repnz
jle
xchg
aaa
mov
cmp
cmp
cmp
xor
jno
test
movd
loope
lahf
cmpsb
nop
mov
xor
ja
xorb
push
and
push
xor
mov
arpl
lcall
faddl
xor
jp
les
scas
shlb
loop
push
ss
cltd
ss
in
aaa
aaa
bound
xchg
aaa
sub
adc
aaa
out
aaa
shlb
jae
in
inc
cld
or
cmp
mov
cmp
cmp
cmp
cmp
or
push
cmp
push
cmp
insl
xor
out
xor
xor
xor
imul
xorl
xor
xor
ret
push
xor
lods
fdivs
ljmp
sti
ss
out
cmp
pop
clc
fidivrl
scas
aas
mov
mov
push
loop
les
enter
sarb
aam
fcomps
fwait
inc
jp
mov
out
xor
xor
push
mov
sbb
sbb
es
sub
sub
add
incl
dec
dec
xor
xor
xor
xor
xor
xor
lret
xor
outsl
sar
bound
jl
lods
xor
inc
ss
ss
jno
outsb
xor
sbb
add
das
rorb
cmp
jbe
cmp
sbb
cmp
dec
cmp
cmp
cmp
mov
ja
cltd
sbb
push
or
mov
iret
aas
shlb
jle
xor
xor
xor
xor
push
xor
xchg
xor
stos
xor
lret
and
cld
jg
ret
push
lcall
cmp
mov
cmp
clc
out
fwait
cmp
call
and
cwtl
jb
xor
xor
push
orl
xor
dec
xor
in
in
xor
icebp
call
push
xchg
mov
xor
xor
xor
xor
push
xor
jae
sub
cli
pop
mov
ss
shll
ds
cmp
cmp
decl
dec
cmp
mov
mov
xor
inc
daa
insl
cmp
xchg
stos
aad
ds
mov
stos
aaa
inc
andl
pop
sar
xor
xor
outsl
add
xor
xor
fstpl
xlat
aaa
adc
push
dec
cmp
in
cmp
mov
push
push
testb
mov
jmp
cmp
fwait
cmp
cmp
cmp
or
jp
push
jl
loopne
add
and
aas
xor
push
aaa
mov
sahf
xor
mov
sbb
sti
scas
dec
std
shll
mov
cmp
inc
inc
cmp
xchg
clc
jmp
rclb
push
cmp
pop
cmp
ficoms
add
mov
cmp
xchg
sahf
push
cmp
cmp
mov
movsb
ds
ds
cmc
or
xor
call
js
add
ja
xor
xor
jl
mov
ret
xor
xor
aaa
xor
jae
jns
repz
stos
xor
jge
mov
push
sbbl
orb
cs
push
pop
and
sbb
or
cltd
xor
sahf
shlb
movsb
jle
xor
and
jno
add
bound
cmp
fidivrl
stos
hlt
cmp
cmp
cmp
stos
or
add
cwtl
mov
sub
lds
push
sub
sbbl
pushl
push
mov
mov
cmp
mov
or
dec
repnz
cmp
inc
cmp
jb
cmp
cmp
lock
das
cmp
pop
lahf
into
mov
sub
in
xor
mov
jg
mov
dec
xor
push
xor
push
push
test
xor
inc
in
or
mov
aad
call
pop
add
add
data16
imul
not
push
arpl
push
divl
cmp
push
cmp
add
xor
test
add
inc
xchg
clc
jne
lds
cmp
subl
icebp
ds
push
pop
jbe
pop
cli
aas
inc
dec
xor
lds
divb
xchg
xor
pop
xor
aaa
lea
xchg
cmp
cmp
inc
push
cmp
pop
cmp
adc
sub
mov
mov
sahf
pop
pop
push
xor
es
and
jl
arpl
cmp
cmp
mov
mov
push
dec
sub
ss
movsl
push
xchg
out
cmp
fdivp
cmp
cmp
dec
hlt
lcall
inc
cmp
cmp
cmp
cmp
cmp
push
push
fstl
incl
push
stc
xor
xor
fnstenv
mov
aaa
test
fwait
aaa
stos
push
nop
stos
pushl
jg
dec
cmp
cmp
cmp
arpl
mov
xchg
cmp
mov
push
push
cmp
test
iret
out
lcall
jecxz
jo
xlat
mov
xor
stos
xor
cmp
inc
and
xor
inc
call
bound
xor
call
and
cmp
push
xor
xor
cmp
push
cmp
pop
push
stos
inc
ret
cmp
cmp
aam
mov
lcall
xor
cmp
ss
cmp
les
lcall
xchg
cmp
push
mov
or
stos
sub
loop
ds
ds
add
out
add
xor
xor
xchg
mov
pop
xor
inc
jecxz
or
hlt
xor
xchg
ljmp
aaa
pushl
fnstcw
pop
cmp
jae,pn
scas
cmp
mov
cmp
ss
push
ds
ds
dec
aas
push
out
add
xor
xor
sbb
dec
cs
dec
aam
mov
loopne
adc
and
adc
ds
sbb
cmp
cmp
cmp
cmp
cmp
cmp
dec
ds
into
add
cli
aaa
jl
xor
xor
xor
xor
mov
xchg
cmp
cs
cmp
shl
ja
mov
lds
jb
ljmp
bound
xorb
repnz
xor
xorb
xor
je
lea
pop
cmp
sub
mov
movsb
jle
cmp
xchg
inc
and
cmp
or
cmp
addl
iret
lods
stos
mov
mov
inc
xor
xor
xor
xor
push
fdivs
sub
into
outsb
adc
imul
sahf
sub
add
cmp
inc
stos
inc
jo
mov
outsb
cmp
cmp
cmp
cmp
push
push
cmp
jg
fidivrs
bound
cmpsb
adc
push
loopne
lock
stc
xor
cmp
xor
nop
push
xor
xor
adc
cmpsl
mov
cmc
jg
xor
outsl
ss
mov
xchg
ss
ss
icebp
jmp
cmp
cmp
mov
xchg
cli
fdivrp
clc
and
push
cmp
cmp
or
push
jmp
mov
shll
mov
cmp
pop
and
adc
and
lock
jl
out
ss
cli
pop
clc
and
mov
xchg
cmp
cmp
add
cmp
xchg
fisubrl
xor
ljmp
insb
xor
xor
sbb
sub
cmp
mov
jle
inc
cmp
mov
push
ds
js
jl
sbb
and
lock
jo
push
mov
push
xor
pop
xor
xor
ja
sub
xor
xorb
clc
jmp
jns
push
xor
pop
repz
xor
fwait
ss
mov
call
cmp
cmp
push
inc
mov
daa
xor
push
pop
xor
xor
loope
pushl
arpl
cltd
xor
xor
or
test
add
push
add
xchg
out
into
fnstcw
clc
mov
leave
mov
loope
test
xor
xorl
xor
incb
je
and
ja
mov
mov
les
in
aaa
or
pop
aaa
xor
dec
out
shlb
adc
push
add
xor
lock
ss
in
fidivrl
xor
and
adcb
dec
faddl
popa
aaa
xchg
aaa
sahf
mov
cmp
jg
pop
pop
fstl
jle
cmp
cmp
cmp
cmp
dec
xchg
cmp
cmp
cmp
outsb
movsl
jg
cmp
sarl
or
fdivs
inc
xlat
scas
sarb
faddl
test
nop
cwtl
xlat
add
adc
push
sbb
or
cli
adc
xor
xor
xor
push
xchg
mov
shll
sarb
cmc
sbb
xchg
repnz
out
shlb
dec
dec
mov
mov
sub
loopne
push
cmp
cmp
sbb
scas
decb
push
cmp
cmp
cmp
cmp
mov
inc
jl
and
js
fdivrl
test
fwait
rcl
xchg
mov
and
cmp
jg
add
pop
cmp
add
movsl
lcall
xor
loopne
adc
pop
aas
and
push
push
sahf
mov
subl
js
xor
jb
sbb
mov
push
sbb
xor
cli
jmp
fbstp
jmp
xor
xor
jmp
cmp
xor
mov
xor
xor
mov
xor
push
xor
xor
scas
ljmp
xor
xor
mov
mov
mov
lds
lret
rclb
add
ja
xchg
ss
sub
sbb
arpl
jo
jp
mov
mov
fsubr
test
aad
cmc
addb
stos
push
or
xchg
mov
into
cmp
cmp
push
mov
pop
sub
mov
cld
cmpsb
fistpll
cmp
out
cmp
cmp
mov
cmp
inc
clc
and
jnp
xchg
test
repnz
cmp
push
mov
cmc
jg
mov
jmp
adc
dec
cwtl
test
push
add
repz
xor
xor
inc
cli
jb
ljmp
jbe
adc
aam
sbb
push
mov
mov
repnz
mov
out
outsb
repz
dec
ljmp
fstps
rcll
sahf
imul
jg
lock
cmp
cmp
cmp
cmp
pop
filds
lret
pop
cmp
clc
loopne,pn
je
xor
dec
ds
xor
fimull
es
cs
pusha
nop
add
orb
scas
add
xor
cs
add
xor
xor
push
mov
mov
or
mov
inc
and
push
push
fisttpl
mov
out
dec
lea
xchg
cmp
xor
or
cmp
dec
push
filds
cli
cmp
bound
cmp
mov
cmp
or
sbb
scas
mov
mov
mov
or
cwtl
ds
mov
ds
ret
dec
mov
les
enter
sarb
mov
loopne,pt
in
in
ds
arpl
repnz
std
call
push
xor
xorl
mov
ss
mov
aaa
push
aaa
cmpsl
inc
and
idivb
push
sbb
loopne
cmp
lcall
ss
inc
pop
cmp
jg
cmp
cmp
cmp
lcall
sbb
and
cmc
lahf
rolb
mov
jp
fmul
sub
aas
mov
push
xor
push
mov
scas
add
icebp
add
adc
mov
stc
ss
fcoms
fiaddl
jg
jecxz
adc
cmp
cmp
push
jp
lock
dec
push
cmp
mov
cmp
cmp
ss
cmp
pop
jg
stos
sbb
es
push
aas
pop
aas
insb
aas
jb
mov
int
inc
mov
or
xchg
mov
cmp
cli
ljmp
or
into
pop
loopne
je
xor
push
arpl
mov
mov
scas
mov
cs
and
add
cmp
cmp
pop
aam
push
pop
cmp
cli
ds
aas
add
js
nop
aas
cmpsb
test
mov
xor
mov
inc
std
lds
popf
xchg
xor
xor
xor
pop
loopne
push
mov
mov
cmpsl
scas
ss
push
and
pop
sarb
bound
movb
je
hlt
inc
cld
cmp
push
pop
lret
out
adc
test
rolb
mov
popa
xor
icebp
xor
xor
loopne
xor
fdivl
cmp
mov
loope
inc
add
add
aam
adc
mov
into
test
orb
sbb
outsb
push
ds
cmp
adc
shlb
test
pop
popf
rcrb
test
aas
mov
add
std
adc
incl
inc
xor
cmp
push
cmp
pop
xchg
dec
push
push
pop
jbe
cli
sahf
fnstcw
out
inc
add
sti
mov
into
ret
xor
xor
xor
outsb
ja
lret
sub
rorb
sbb
xor
repnz
ds
adc
loop
cmpsb
jle
cwtl
pop
es
aaa
loop
xor
mov
jnp
mov
movsl
jp
adc
pop
xchg
rol
repnz
mov
out
inc
pop
lock
mov
xchg
data16
sbb
jmp
mov
ds
je
js
cmpb
sbb
sbbl
xor
cmp
jge
add
sbb
add
add
cmpsl
cmp
clc
rcll
mov
xor
out
addl
xor
ss
mov
lcall
aas
pop
add
lods
adc
mov
push
pop
mov
xor
xor
xor
dec
lcall
xor
xor
xor
dec
daa
icebp
add
push
je
cltd
not
aaa
jecxz
jno
mov
cmpsl
jp
cmp
or
cli
scas
push
pop
fidivrl
cmp
push
out
cmp
jns
mov
cmp
add
sbb
ss
fdivrl
sti
cmp
lea
mov
cmp
cmp
inc
clc
loopne
pop
outsl
cmp
stos
jb
mov
add
push
pushf
outsb
rclb
outsb
scas
cmp
daa
fidivrl
pop
or
xor
cmp
lcall
add
aas
push
mov
stos
push
stos
mov
test
mov
cmpl
pop
xor
xor
mov
or
daa
pop
dec
xchg
mov
mov
sysexit
test
push
clc
orb
jb
ret
mov
add
cmp
cmp
cmp
cmp
push
adc
cmp
jmp
mov
std
cmp
fidivs
push
call
cmp
notl
rolb
pop
test
xor
rolb
mov
xor
xor
xor
jle
xor
cmp
pop
jbe
xor
fisttpl
cmp
xor
push
sub
adc
pop
jbe
xor
mov
rcl
and
xor
sub
loope
xorb
ja
mov
cmp
repnz
cmp
addl
frstor
popf
cmp
mov
or
daa
push
cmp
fnstsw
cmp
fsubrl
repnz
mov
cmp
cmp
push
lock
call
cmpb
cmp
cmp
cmp
pop
adc
xchg
cmp
cmp
dec
fists
push
clc
pop
xor
xor
xor
cmp
xchg
xor
cmp
lods
fidivl
test
or
adc
test
cmpsl
xchg
or
aam
sarl
sub
add
dec
adc
imul
stos
mov
inc
add
lret
aaa
in
aaa
cmp
sbb
mov
stos
inc
lds
shr
call
pop
xchg
cs
in
cmp
add
rol
stos
cmp
je
dec
cld
or
cmp
into
push
ds
stos
incb
or
ljmp
es
lea
xchg
xchg
aas
pushf
and
lock
call
cmpsb
inc
in
loopne
add
pop
xor
add
xchg
jmp
xor
push
dec
imul
push
pop
mov
xor
test
push
and
movsl
xor
pop
cmp
outsb
cmp
test
and
notb
mov
jle,pt
jo
push
mov
cmp
dec
stos
fstpt
out
cld
or
sub
add
mov
clc
push
inc
aaa
test
push
xor
inc
mov
mov
cmp
cmp
mov
or
and
inc
cmp
push
jbe
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cs
adc
cmp
je
or
cmp
push
add
test
scas
push
push
aas
pop
aas
push
jne
mov
clc
pop
push
dec
lock
xor
jnp
outsl
orl
xor
adc
sub
es
jae
shll
es
xor
xor
mov
fs
xor
xor
push
and
or
js
mov
scas
push
xor
xor
out
push
sbb
push
test
loopne
sub
push
ss
xchg
push
adc
jp
mov
inc
adc
filds
inc
mov
aaa
adc
sub
inc
or
pop
cmp
mov
sahf
cmp
aam
push
adc
xchg
loop
cmp
ljmp
out
bnd
pop
adc
xor
cmp
loop
xor
jbe
mov
andl
in
sahf
adc
adc
sbbb
cmpsb
sbb
xor
xchg
mov
xchg
adc
fwait
divb
out
cmp
cmp
clc
js
cs
cmp
faddp
into
jl
or
pop
bound
es
stos
lock
mov
int
sub
xor
inc
aaa
mov
cmc
cmp
test
inc
cmp
cmp
cmp
cmp
fwait
icebp
scas
push
push
mov
cmp
sub
cmp
test
mov
pop
cmp
push
add
sbb
das
outsb
les
lea
fwait
inc
mov
ds
shll
or
xchg
out
pop
or
xor
xor
xor
outsl
mov
push
and
xchg
into
adc
clc
sub
dec
cmp
cmp
cmp
xchg
cmp
add
out
fidivl
cmp
aas
jge
cmp
jle
adc
rcl
xorb
jg
sbb
xor
push
arpl
outsb
xor
movb
xor
fimull
stc
pop
rcr
loop
xor
into
cmp
dec
push
pop
and
dec
pushl
xor
ja
xchg
pop
movsl
xor
rol
inc
enter
mov
cmp
shll
out
push
test
mov
sub
and
inc
push
jp
aaa
into
aaa
outsb
mov
cmp
push
or
mulb
cmp
jbe
in
push
lahf
rol
mov
cld
int
call
cmp
int
dec
ds
add
inc
inc
mov
notb
pop
and
jp
xor
xor
ss
aaa
inc
aaa
push
divb
lcall
leave
sbb
cmp
mov
cmp
cld
inc
test
sbb
cmp
or
and
fs
cmc
push
add
clc
push
push
push
dec
jl
or
jle
shrb
xor
lcall
or
xor
xor
xor
dec
cmp
inc
adc
pushf
scas
mov
cmp
rorb
cli
push
jl
push
aas
mov
cmp
inc
add
and
inc
mov
cmp
push
movsb
mov
jo
mov
pop
xorb
xor
inc
dec
cld
xor
pop
xor
xchg
bound
push
pop
jb
xor
xor
and
outsb
rolb
add
xor
mov
inc
xor
xor
mov
xor
xor
xor
adc
or
lea
mov
cmpps
pop
je
xor
inc
push
xor
imul
cli
push
xchg
xchg
into
test
mov
push
or
lcall
push
mov
adc
add
xor
push
xor
cmpl
mov
cmc
mov
ds
cmp
test
ss
xchg
shrb
mov
movq
aaa
sub
arpl
jne
les
push
sbbb
inc
aas
adc
mov
aas
jbe
cmpl
lods
aas
loope
sbb
lock
jo
lods
adc
test
push
test
stos
mov
rorb
ja
jo
pop
xor
xor
xor
push
aaa
outsb
sub
ss
push
pop
add
test
add
aaa
sbb
sbb
aaa
daa
bound
pop
mov
mov
es
aaa
nop
out
add
fdivrl
and
stos
sbbb
cmp
push
clc
test
into
mov
negb
push
fiaddl
pusha
ds
mov
lcall
bound
xor
jmp
lahf
lcall
mov
jge
adc
xor
dec
dec
xor
sub
movsb
es
mov
add
test
push
cmc
cmp
push
and
xor
adc
jmp
stos
fwait
cmp
loope
pop
push
jbe
ficomps
cmp
pusha
inc
mov
pop
mov
push
out
cli
mov
xchg
loope
sti
xor
push
xor
dec
xor
adc
push
loop
cmp
xor
dec
ss
mov
jp
pop
pop
ss
pop
sbb
jg
adc
push
mov
jb
aaa
xlat
aaa
loope
clc
aaa
and
mov
cmp
mov
out
subb
inc
pop
jno
fsubrl
add
insl
ss
out
sahf
cmp
orb
imul
or
adc
or
cmp
and
sarb
stc
iret
ja
lret
outsb
inc
mov
ja
mov
push
jl
lds
loopne
sbb
cwtl
fsubp
ss
fnstsw
pop
cmp
or
pop
cmp
push
jl
dec
cmp
add
xor
int3
ds
ds
stos
xchg
pop
call
mov
xchg
inc
fbld
scas
xor
inc
aas
dec
push
lret
xor
jmp
xor
rorb
dec
cmpsl
fildl
xor
jl
xor
sbb
fidivs
adc
mov
sarb
xor
test
popf
ss
aaa
ret
sbb
inc
stos
test
xchg
mov
cmp
mov
dec
adc
inc
imul
dec
sarb
sub
push
xor
addr16
cmp
or
stos
push
pop
add
add
lea
sbb
ds
cmp
push
jnp
in
pop
xchg
outsb
inc
and
mov
aas
in
bound
push
loopne
xor
jbe
xor
stos
dec
test
inc
jle
repnz
or
mov
outsb
scas
xchg
push
pop
inc
cld
push
scas
outsb
mov
push
cmc
xor
sbb
xor
scas
sahf
scas
mov
ja
push
rorb
ss
pop
sbb
sahf
mov
fdivrs
lock
cmp
mov
std
and
jno
mov
xorl
inc
cmpsb
push
cmp
pop
cld
cmp
cmp
cmp
xchg
cmp
cmp
ljmp
sbb
pop
cmp
fildl
call
cmp
adc
and
es
push
imul
sbb
add
add
mov
push
inc
pop
push
push
int
push
jbe
mov
push
xor
mov
push
ds
test
arpl
xor
xor
push
and
mov
add
and
or
lcall
inc
js
xchg
mov
mov
out
pop
cmp
jmp
repz
sti
repnz
or
sbb
stos
push
outsb
and
push
xor
adc
inc
cmp
adc
or
push
ret
and
addr16
cmp
push
stos
mov
dec
mov
xchg
subb
fstpl
mov
inc
scas
btcl
mov
in
jbe
orb
pop
push
loopne
pushf
jmp
adc
out
mov
add
push
movsb
push
adc
adc
and
fldl
mov
jle
xor
push
out
or
fwait
loop
sub
pop
push
cli
movsb
xchg
shlb
aaa
loop
pop
call
sarl
jmp
mov
mov
inc
clc
add
cmp
pusha
cmp
push
xor
pop
mov
add
cmp
push
stos
xor
loop
bound
mov
mov
xchg
scas
add
add
mov
xchg
push
jo
shlb
ja
mov
cmpsl
add
xor
mov
fwait
xor
xor
cwtl
enterw
adc
fnstsw
shrb
faddl
shlb
cmp
lock
inc
xchg
mov
xchg
cmp
or
sbb
imul
cli
sti
jp
sub
dec
ds
popf
or
daa
cmp
dec
bound
cmp
mov
cli
xor
xor
jp
outsb
sbb
push
xor
std
xor
push
adc
out
push
aaa
xor
xor
push
stos
inc
mov
pop
ja
or
jp
aaa
xor
xor
aaa
inc
bound
pop
sub
jb
out
pop
out
aaa
test
gs
insl
aaa
jno
jne
jge
xorl
test
lea
ret
xchg
mov
or
rorb
push
lcall
leave
cmp
fildl
push
or
push
aas
sub
clc
inc
adc
lahf
fcmove
mov
xor
das
inc
adc
and
adc
test
les
xor
and
push
jle
mov
or
mov
cmpsb
jne
roll
or
arpl
mov
add
sahf
aaa
cmp
sbb
mov
bound
jno
mov
pop
or
cs
pop
mov
sub
ds
cmp
jb
cmp
push
lret
pop
dec
add
push
xlat
adc
mov
inc
cld
inc
and
lcall
adc
fidivs
sahf
adc
xor
into
imull
ret
shll
xchg
xor
xchg
and
mov
jae
pop
mov
cmp
pop
or
or
push
cmpl
out
out
lret
and
loop
cli
lds
cs
push
mov
xchg
enter
mov
and
xor
and
mov
mov
or
test
push
xchg
into
xor
add
mov
outsb
mov
mov
inc
push
push
cli
and
ss
push
stos
mov
sub
cmp
cmp
cmp
mov
dec
xor
push
adc
fwait
cmp
add
mov
inc
ljmp
xor
push
mov
insb
xchg
mov
push
push
mov
push
loopne
repz
loopne
pop
mov
mov
xor
inc
xchg
movsb
adc
mov
cmp
add
or
and
cmp
or
cmpsb
xchg
cmpb
adcb
aam
or
sub
xor
cmp
popf
xor
mov
or
es
inc
xchg
lock
xor
push
push
ret
sbb
das
xchg
loope
jmp
lock
xor
xor
xor
xor
xor
dec
xor
shl
xor
sbb
add
notb
mov
das
aaa
outsl
stos
mov
cli
jmp
mov
and
add
fs
mov
stos
cmp
mov
hlt
xor
ds
jbe
testl
daa
xchg
xchg
dec
push
sub
mov
aad
xchg
mov
push
jo
add
ljmp
push
fistpll
jl
mov
push
xchg
stos
bound
sbb
or
xor
or
cli
push
into
nop
xor
aas
sbb
and
xor
mov
std
int
rcl
sub
xor
lock
stos
ljmp
lret
push
and
add
adc
pop
movsb
or
pop
push
mov
xor
pop
stos
pop
jg
ds
xor
stos
arpl
outsb
xor
es
or
test
xchg
and
push
xor
adc
xor
scas
inc
orl
dec
or
xor
lret
mov
out
pop
adc
jmp
xchg
ss
push
mov
mov
xchg
cli
mov
loop
aaa
inc
jp
pop
stos
mov
aaa
sub
inc
sbb
sub
push
push
ss
cmp
mov
stc
cli
inc
jl
mov
jns
mov
sbb
push
sub
pop
and
sbb
cmp
push
push
test
ds
jns
cltd
clc
jecxz
mov
xchg
adc
push
imul
add
or
lcall
leave
jno
stos
pop
mov
pop
cltd
mov
lcall
test
adc
xchg
sahf
outsl
xchg
shrl
rcrb
or
pop
fstpt
xor
mov
cmp
cmp
mov
loope
sbb
dec
mov
add
daa
sub
daa
and
sub
mov
loop
cmp
das
xchg
jo
test
dec
adc
push
outsb
jae
stos
leave
lcall
push
mov
divb
pop
sub
icebp
mov
jmp
lds
imul
jmp
jl
mov
icebp
inc
xchg
leave
lcall
push
push
mov
jmp
sbb
cmp
push
pusha
je
cmp
mov
inc
inc
jns
inc
xchg
or
pop
inc
mov
mov
add
mov
mov
sahf
orb
add
imul
xchg
rolb
jmp
fisubrs
pop
int
add
mov
xor
jp
pop
adc
inc
jae
cmp
outsb
adc
inc
xchg
dec
lret
fisubrl
or
ret
loope
rcrb
lods
mov
jge
or
and
outsl
jbe
and
lea
lods
xchg
adc
pop
ja
sbb
cs
jge
aaa
loope
mov
adc
and
rolb
fisubs
data16
cmp
push
jne
add
mov
adc
add
scas
fidivl
cmp
xchg
or
clc
jp
push
push
adc
inc
xchg
jg
stos
jae
pop
sarl
ds
rorl
push
lods
jg
push
pop
ret
rclb
call
cmpsl
or
mov
push
sbb
sbb
and
cmp
test
sub
xor
mov
inc
repnz
aaa
dec
scas
xor
aam
push
mov
push
fs
push
push
jo
js
sbb
push
sbb
mov
push
popa
cmp
pushf
movsb
jbe
cmp
push
lods
push
mov
mov
pop
in
in
aaa
adc
loope
aaa
hlt
lcall
jg
cmp
cmp
xor
add
pop
add
jbe
cmp
je
test
push
mov
nop
pop
add
bsf
sarb
rorb
cmp
sahf
aam
sub
mov
xor
push
jp
andb
bound
mov
bound
sahf
aam
fdivrs
push
inc
das
loop
cmp
add
cmp
adc
ret
lret
or
push
push
pusha
xchg
sbb
addps
mov
aaa
loopne
arpl
xor
xor
xor
cmp
push
fmull
adc
fiadds
cld
pop
or
insb
xchg
sub
inc
xor
xchg
inc
cmpl
xor
add
cli
push
push
mov
movsb
je
jl
sub
outsb
add
cs
pop
pop
pop
jl
test
mov
in
jo
jno
jbe
dec
cmp
pop
inc
mov
ljmp
xor
or
call
rclb
test
pop
push
movsl
mov
mov
fcompl
push
cmp
push
jp
sbb
and
mov
xor
fs
stos
lods
cmp
adc
in
sbb
cmp
or
xorl
sbb
xor
mov
dec
mulb
pop
and
dec
cld
add
dec
mov
pushf
push
add
xchg
xchg
aam
in
dec
push
dec
cmp
mov
cmp
xchg
stos
outsb
push
lret
movsb
aam
xor
dec
aam
add
dec
loope
push
cmp
cmp
push
mov
push
bound
mov
xor
dec
push
jl
push
fs
lret
fmul
cwtl
popa
ret
add
aam
add
mov
in
xor
xor
pop
inc
dec
add
xor
fidivl
push
stos
mov
mov
hlt
jmp
je
movsb
iret
fdiv
hlt
aam
cmpsb
sub
pop
mov
test
adc
clc
adc
pop
pop
adc
insb
cmp
das
mov
cmp
push
sbb
mov
jo
cmp
adc
adc
adc
or
cmp
das
pusha
xor
mov
pop
and
cmp
mov
daa
call
cmp
xchg
fisttpl
cmp
cmp
or
out
and
mov
add
sbb
filds
inc
cmp
cmp
push
push
pop
cmp
or
sbb
cmp
cmp
les
mov
cmp
sub
data16
mov
shlb
shr
jecxz
rorl
fsubs
loopne
call
jbe
adc
pop
pop
mov
mov
sub
xor
cmp
jecxz
pop
mov
jle
out
popf
clc
clc
data16
pop
cmp
jo
std
stos
sarb
int3
outsl
adc
jne
out
and
inc
inc
mov
scas
cmpsb
je
mov
sbb
mov
dec
adc
outsb
mov
xchg
push
push
sub
xor
or
mov
das
add
movsb
mov
push
mov
push
call
cld
into
jo
fstl
inc
adcb
adc
sbb
daa
daa
xor
xor
inc
sbb
jp
stos
push
addr16
mov
cld
data16
or
mov
xor
adc
xor
cli
fs
fmulp
sahf
shr
cmp
jecxz
fdiv
loopne
in
in
add
adc
add
or
adc
shrb
mov
sub
jge
sahf
lcall
dec
xor
xor
aas
frstor
push
pop
jle
xor
arpl
test
je
data16
xor
mov
out
rclb
hlt
xchg
cmp
pop
xor
xchg
ds
mov
aam
pop
call
jl
xor
and
xchg
pop
add
xchg
stos
sbbb
xor
call
cmpsl
add
add
or
ss
and
sbb
stos
jno
dec
pop
pusha
push
push
jo
js
adcb
aad
test
nop
jecxz
daa
pop
ret
fadds
cmp
cmp
sbb
cmp
or
pop
sub
mov
cmp
jbe
xchg
dec
sub
mov
jo
push
xchg
jl
xorb
ljmp
int3
jb
addl
inc
je
dec
call
aam
dec
imul
popf
ds
hlt
cmp
cmpsl
push
adc
orb
jmp
addb
mov
xchg
inc
hlt
push
xor
je
xor
xor
ja
inc
mov
outsb
rcrb
fdivs
fdivl
push
pop
inc
lock
clc
xchg
add
jecxz
cmp
or
xor
cmp
inc
rorb
shrb
orb
pushf
mov
xchg
xor
stos
push
scas
pusha
jne
pop
dec
imulb
jo
js
inc
dec
pop
or
or
les
xor
jl,pt
popf
aad
sbbb
dec
nop
inc
push
and
cwtl
xchg
aaa
shrb
pop
mov
fdivl
dec
adc
hlt
push
mov
adc
mov
cmpsl
push
sarb
sbb
mov
aam
loopne
call
loope
cmp
dec
clc
mov
push
or
stos
lea
ret
arpl
rcll
sub
call
cmpsb
sub
push
je
add
xchg
mov
loopne
push
jle
call
orl
cli
cmp
mov
nop
lcall
unpcklps
inc
xorl
fisubrl
push
xor
xor
dec
cmp
dec
dec
bound
pop
pop
pusha
jbe
inc
loop
iret
and
mov
jp
sub
xor
pop
or
inc
inc
pop
push
aas
push
cmp
sub
adc
push
ret
mov
mov
fbstp
aas
movsb
aas
test
mov
lcall
add
push
test
lcall
sub
pop
scas
pusha
add
insb
xor
sbb
mov
or
or
push
dec
mov
test
pop
xor
test
pop
push
das
not
or
into
or
cmp
mov
test
outsb
pushf
push
int3
idiv
xor
mov
mov
dec
mov
out
ss
ret
fimull
mov
mov
enter
adc
pop
xor
movsb
rclb
adc
shrb
cmp
nop
add
rolb
sub
lock
jo
das
test
lods
cmp
inc
mov
int3
or
adc
into
aam
mov
ret
sbb
sbbb
xchg
sbb
sbb
push
mov
add
cmp
jl
cwtl
pusha
sarb
pusha
add
rolb
outsb
dec
push
je
movsb
add
mov
or
push
popf
rol
call
test
cmp
imul
sub
mov
idivb
add
mov
mov
push
fmuls
decl
add
not
aad
mov
sub
xor
insb
mov
daa
lock
pushf
xor
sbb
sbb
and
sub
xor
jecxz
mov
pusha
outsb
push
inc
jo
js
test
pcmpeqw
es
ss
adc
lock
movsl
mov
test
dec
dec
push
add
push
xor
sarl
cmp
add
nop
mov
jbe
adc
adc
push
out
call
jg
mov
jp
xchg
js
outsl
sub
pushf
lock
xor
in
pop
enter
push
xchg
mov
xor
inc
xor
mov
movsb
popa
sub
or
dec
je
xchg
xor
xchg
cmc
inc
insb
mov
sub
fdivrs
or
sub
sub
jecxz
sub
cwtl
lret
lods
xlat
enter
inc
mov
or
lds
mov
push
jno
ret
loop
adc
adc
sbb
cmp
and
pop
fwait
mov
test
add
iret
fdivl
clc
ss
mov
sbb
push
jecxz
inc
cmc
mov
test
fsubrs
adc
add
mov
inc
push
xchg
not
arpl
sbbl
je
nop
ret
mov
xchg
loopne
sbb
sbb
inc
mov
lahf
je
jno
adc
or
pop
call
out
and
inc
aam
push
outsl
je
nop
push
or
loopne
test
lcall
xor
inc
test
dec
lahf
xor
mov
or
xchg
loop
mov
mov
mov
sbb
cmp
call
dec
mov
mov
cmp
and
sub
dec
cltd
aad
inc
mov
xchg
mov
add
out
inc
jp
popf
push
sub
dec
inc
adc
ds
and
psubb
add
rclb
mov
jl
ss
push
push
ljmp
roll
mov
pop
insb
xchg
addr16
test
fcomps
aam
sbb
xor
sbb
aam
iret
xorb
mov
cmp
push
enter
sbb
push
movsl
push
xor
inc
jo
xchg
adcb
cmp
pop
push
loop
test
or
sbb
dec
add
sub
adc
adc
andb
rcr
add
loop
rcll
push
sub
cmp
call
push
or
test
cwtl
cs
in
hlt
pop
sbb
movsl
add
adc
sub
push
call
xchg
mov
jmp
sub
adc
icebp
jl
call
bnd
add
or
ljmp
test
mov
mov
xchg
in
int
test
hlt
ret
sub
jge
mov
mov
mov
mov
sub
push
sub
mov
test
xchg
push
in
sub
pop
or
sbb
inc
jl
test
sbb
scas
je
movsl
bound
test
ds
aam
mov
ss
ret
outsb
jl
adc
and
xor
aaa
stos
rorb
sbbb
test
jle
lret
cmpsl
mov
into
push
add
test
sub
cmp
mov
insb
fidivrs
xor
loop
negb
test
out
into
faddl
add
push
mov
cmpsb
sbb
test
sub
int3
cli
hlt
fiadds
inc
xor
inc
lret
and
je
ss
into
in
xchg
ds
fs
sub
inc
mov
lock
and
add
aam
ds
push
cmpsb
xchg
lret
stos
or
mov
cmpsl
cmp
outsb
sbb
xor
inc
add
popf
cmp
push
inc
mov
mov
pusha
andb
sbb
add
add
xor
je
aad
sub
mov
out
in
push
es
pop
lea
nop
aaa
cwtl
rcl
in
sub
add
lock
jl
xchg
shlb
int3
cmp
rorl
sbb
jo
xchg
ljmp
mov
rol
hlt
aad
aam
out
sahf
ljmp
dec
jmp
dec
mov
out
mov
rorb
jl
push
pop
pop
ret
pushf
data16
jmp
testl
pop
add
jo
cwtl
orb
out
and
jmp
pop
mov
mov
pavgb
jl
mov
jmp
ficoms
sarb
mov
xchg
push
jl
movsb
shl
mov
scas
loopne
loopne
test
clc
clc
jno
fwait
dec
mov
cwtl
xchg
add
clc
jbe
imul
jge
loop
dec
insb
jb
outsb
movsb
sbb
push
imul
rclb
push
xor
jno
stos
sub
adcl
sbb
test
xchg
mov
mov
les
inc
sbb
cmpsb
hlt
outsb
add
test
rol
adc
fidivs
movsl
push
lock
rcrb
test
mov
or
jecxz
sbb
xor
out
dec
cli
pop
addb
inc
je
pushf
cltd
inc
or
lods
stos
loop
ja,pn
sbb
add
sti
pop
mov
clc
sub
mov
xchg
les
push
push
ja
mov
xlat
lock
cli
sub
adc
fs
add
dec
test
xchg
iret
mov
mov
aaa
aam
in
inc
subb
loop
inc
iret
clc
push
fs
push
fdivr
or
sub
cmp
cmpb
mov
sti
mov
out
fucomi
inc
add
icebp
add
jo
mov
ficompl
call
inc
or
inc
adc
dec
inc
xchg
or
js
out
fisubrl
xchg
sar
adc
orl
push
js
mov
rcl
mov
and
shlb
add
mov
or
add
mov
inc
inc
push
out
xor
push
aaa
out
mov
les
call
or
jle
inc
mov
jo
cmp
mov
push
test
xchg
push
call
add
imull
fistpll
jle
jno
shr
sbb
ds
push
ja
jmp
clc
fisubs
jg
aad
sbb
push
fsub
jecxz
adc
add
or
sub
sub
xor
test
mov
and
cmp
dec
add
sub
scas
aam
loop
add
jnp
ss
jl
icebp
arpl
js
mov
fadds
push
orb
xchg
add
jo
mov
add
lock
cmp
cs
loop
dec
mov
mov
ljmp
or
push
inc
loop
es
inc
push
jae
dec
lods
int3
call
in
hlt
mov
jle
jp
stos
test
outsb
cmpsb
jo
cwtl
xchg
shl
call
adc
sbb
inc
daa
lock
xchg
pop
and
lods
ficoms
in
add
push
add
je
pushf
jo
xor
pop
fcompl
cmpl
push
push
push
imul
push
sbb
sub
pusha
pop
fadds
or
pop
adc
mov
js
pop
aad
inc
mov
int3
xchg
dec
mov
mov
push
in
mov
mov
inc
dec
sahf
andb
and
mov
ret
push
jb
lock
push
mov
into
sub
loopne
add
lcall
mov
push
lea
sbbb
push
in
stos
or
push
pop
or
xor
jp
sbb
or
out
cld
push
adc
and
mov
cmp
loopne
xor
subb
in
cs
sub
and
pop
es
les
test
loopne
mov
lock
inc
dec
ds
fstpt
je
or
and
jo
clc
sbb
and
es
movsl
sbb
push
xor
pusha
mov
scas
inc
xor
mov
push
jmp
push
add
xorb
test
mov
stos
add
or
js
adc
jnp
das
loopne
pop
push
addl
rcrb
push
mov
xor
and
clc
add
sub
pop
push
shrb
adc
add
fildl
jmp
jne
inc
or
mov
dec
inc
adc
imul
out
shr
rorl
or
jmp
sbb
mov
xchg
rolb
dec
jb
sub
test
arpl
sbb
cmpl
pop
push
cmp
cs
cmp
and
lea
or
sub
adc
or
popf
inc
dec
loope
insb
mov
sbbb
lcall
stos
stos
mov
lock
stos
mov
sbb
pop
rorb
jg
rolb
stos
mov
cmpsb
lcall
sbb
pop
add
pop
lret
push
sbbl
sub
repz
test
inc
outsl
push
mov
fwait
sbb
push
cmp
xchg
daa
rcr
hlt
scas
jo
pushf
test
sahf
and
adc
dec
cmp
outsb
bound
adc
dec
dec
ret
inc
aas
ss
js
das
daa
inc
cmp
daa
sbb
inc
mov
cmp
testb
movsb
dec
jp
add
rorb
testl
push
fbld
inc
sbb
mov
xor
mov
lea
sbb
pop
push
dec
xchg
and
xor
rorb
and
xchg
es
push
mov
push
stos
and
sub
rorb
cmpsb
add
pop
pop
scas
mov
popf
stos
ret
dec
ret
jp
ret
adc
imul
push
mov
add
imulb
sbb
pop
push
loopne
pop
add
fistps
pop
add
lret
sarb
pop
outsb
jp
pop
pop
sbb
push
shrd
push
sbb
mov
cmpsb
scas
push
mov
push
mov
jae
jp
add
sbbb
push
scas
mov
xchg
xorl
dec
push
or
adc
test
xor
imul
mov
pop
mov
mov
or
lods
mov
xchg
xchg
pop
imul
and
adc
add
push
pop
ljmp
pop
les
inc
jl
iret
data16
cmp
mov
cmpl
lcall
repnz
test
dec
notl
loop
xor
push
inc
das
loopne
lods
inc
notl
push
ret
bound
nop
adc
rclb
sub
add
jecxz
ret
fcmovnbe
daa
jo
pop
or
pop
adc
popa
and
cmp
add
xor
push
ret
bound
or
adcl
aas
fwait
pop
xor
cmp
repz
jo
cwtl
lods
or
mov
xor
test
pop
cmp
sahf
pop
pushl
subb
ljmp
add
bound
pop
scas
push
cmp
mov
dec
pop
cmp
aas
jne
nop
daa
test
mov
xchg
or
ljmp
jo
jl
dec
mov
add
shrb
lahf
xchg
jmp
push
fisttps
insl
add
or
adc
xchg
ffree
sbb
xor
lock
jo
lods
mov
aam
in
mov
add
das
pop
adc
mov
loopne
fs
pop
jae
outsl
pop
or
bound
sbb
and
adc
push
push
lods
add
jecxz
insl
sbb
sbb
sub
mov
jo
pop
pop
insb
sahf
pusha
lods
jae
jg
rorb
and
pop
cmp
adc
xchg
or
adc
dec
je
dec
ret
ret
test
lock
inc
push
daa
into
jp
pop
push
add
push
sbb
xor
ficoml
popa
ret
lcall
pop
cli
daa
loopne
cmp
out
loope
pushf
adc
adc
or
and
rcl
movsb
adc
or
sub
sahf
pop
jecxz
js
xor
lods
adc
add
loope
pop
imul
fimuls
iret
sahf
js
sub
mov
sub
les
lods
sub
jnp
sub
pop
inc
pop
div
mov
loop
out
rolb
and
xchg
sbb
fisttps
or
push
cwtl
or
js
xchg
pop
bound
fadds
shl
xor
imul
add
mov
add
inc
or
sub
cs
ret
and
or
xchg
mov
push
mov
xor
sub
lahf
adc
mov
sbb
ret
and
jl
lahf
daa
pop
adc
xor
push
adc
mov
daa
and
repnz
jecxz
mov
cli
mull
inc
mov
repnz
mov
xchg
push
mov
inc
mov
mov
xchg
mov
sbb
add
daa
adc
xchg
mov
pop
rclb
sub
xorl
adc
es
xlat
push
dec
mov
les
outsl
loop
lcall
ret
arpl
cmpb
mov
iret
xchg
rorb
xchg
add
lret
cmp
or
iret
and
repz
or
mov
add
inc
and
dec
hlt
cs
sub
dec
ss
lea
sbb
je
jnp
pop
inc
btcl
sbb
sbb
in
inc
daa
or
jge
push
lock
pop
jb
mov
sbb
lods
push
lahf
xchg
test
shlb
push
jmp
inc
xchg
jno
push
dec
cmp
push
sbb
xorl
sub
ds
ret
inc
xchg
jno
sysret
mov
das
or
adc
xor
pop
mov
push
ret
cmpsl
push
inc
add
inc
add
mov
pop
push
es
sbb
add
int3
xchg
fsubrl
mov
js
mov
fisubrl
sbb
fsubs
test
sbb
mov
adc
call
push
cmp
sahf
mul
pop
loop
sbb
mov
adc
dec
test
add
push
mov
lock
push
inc
mov
call
andb
sbbb
adc
dec
mov
xor
rclb
and
roll
push
pusha
sbb
jno
xlat
adc
fsubs
cmp
cmc
push
adc
scas
nop
xchg
daa
mov
push
sbb
push
push
fiaddl
push
daa
add
inc
test
push
mov
andb
adc
call
or
shl
iret
or
xchg
scas
rclb
stos
rolb
dec
adc
add
xchg
hlt
mov
xchg
mov
mov
pop
out
mov
push
push
add
xor
xor
add
push
daa
stos
sarb
stos
adc
bound
loop
out
ljmp
into
cli
mov
movsl
push
sub
or
adc
lds
or
sbb
and
xor
mov
ss
bound
or
fwait
movsb
fwait
lods
dec
cs
xor
shlb
cmp
push
jb
jp
leave
sub
add
call
sub
adc
mov
das
outsb
fists
gs
cmp
test
mov
inc
test
orb
push
add
cld
cmpb
loope
mov
mov
shlb
and
or
pop
or
clc
mov
add
shrb
mov
mov
mov
cmpsb
les
ret
nop
dec
adc
sbb
sbb
mov
push
ja
jl
add
imul
pop
mov
xor
repz
pop
cmc
sub
pop
out
lcall
pop
push
pop
xor
out
pop
push
mov
insb
sahf
in
repz
sbb
popa
inc
arpl
ds
fldenv
scas
imul
fwait
int
jo
jae
jne
js
jns
dec
mov
push
jnp
repnz
jge
xchg
in
shrl
xchg
dec
xchg
out
fsubl
fstps
scas
ds
imul
cli
xchg
ficompl
int3
test
dec
and
xor
lret
ss
xor
xor
imull
test
xor
push
or
xor
xor
test
sysenter
ss
test
push
insb
ss
push
movsb
push
fmull
jp
jo
pushl
jge
push
and
and
ret
mov
shll
add
loop
add
clc
jae
xchg
pop
adc
nop
popa
aas
pop
pop
add
mov
cmp
arpl
fs
mov
mov
je
inc
js
inc
xor
popa
or
jmp
inc
pop
popa
arpl
pop
push
push
arpl
dec
shlb
adc
fcoms
cwtl
xor
xorl
inc
inc
add
pop
or
jb
lock
and
sub
add
aas
push
cmp
add
and
push
push
dec
dec
dec
ret
in
das
and
dec
or
inc
and
jle
data16
xor
add
in
push
dec
int3
cmp
push
sub
in
jge
xor
pop
push
pop
push
inc
and
sbb
adc
add
or
dec
inc
dec
sub
addl
push
les
xor
cmp
fsubl
mov
das
xor
push
inc
subb
dec
push
nop
and
dec
cwtl
and
mov
aas
mov
fidivl
mov
adc
call
out
shrb
or
push
pop
inc
inc
pop
into
mov
fidivl
in
orl
addr16
pop
mov
fstpt
fisubl
je
mov
test
out
mov
out
xchg
aam
in
xchg
or
je
mov
pop
shrl
mov
ja
xor
sbb
push
leave
mov
push
push
mov
int
cltd
ds
mov
jae
or
or
cmp
addl
add
xor
sbb
mov
inc
jl
mov
mov
jne
push
add
cmp
leave
sub
iret
lds
fwait
xor
cltd
pop
in
lret
ja
sbb
add
insl
repz
add
fwait
cmc
xor
fwait
add
mov
push
sti
or
int
or
xchg
adc
sub
outsl
push
sbb
jl
push
mov
loop
addb
or
insl
push
sbb
aad
adc
cmp
inc
sbb
pop
lcall
dec
dec
dec
stos
push
dec
push
add
adc
xchg
bound
dec
dec
xor
das
add
fcmovnbe
inc
push
xchg
mov
adc
das
add
push
leave
les
or
or
and
les
and
push
inc
out
sbb
sub
add
or
nop
mov
push
push
inc
es
ljmp
pop
and
push
push
inc
push
jo
mov
nop
adc
ljmp
mov
jmp
or
add
inc
push
inc
ds
cmp
push
add
stc
push
lcall
aas
test
adc
xchg
and
jmp
testl
push
outsl
add
out
push
pop
dec
or
and
sahf
push
or
or
mov
add
pop
sbb
lods
pop
enter
mov
jns
or
faddl
ss
imul
xchg
pop
cmp
in
push
orl
pop
adc
test
add
push
icebp
sbb
add
mov
jo
add
xchg
test
fstl
incl
add
adc
mov
xor
and
add
adcb
add
in
mov
fxsave
sahf
xchg
sbb
inc
ds
add
pusha
jg
mov
les
stos
push
jo
adcb
js
mov
and
mov
or
lds
or
or
sub
aad
das
sbb
repz
push
scas
cwtl
add
xchg
aaa
add
jns
fsubrs
cmp
hlt
push
insl
dec
mov
mov
mov
jg
push
movsb
dec
mov
lock
adc
testw
jg
pop
mov
push
add
push
push
lcall
xorb
mov
xor
jg
outsl
add
xor
xor
cmp
xor
cmp
sub
add
pop
cmp
pop
cmp
ljmp
sub
xor
xor
cmp
xor
imul
mov
pop
insb
jae
jo
gs
pusha
cmp
xor
pusha
and
jle
jae
push
mov
fwait
sub
jne
jno
gs
jne
imul
out
lcall
jno
cmp
cmp
daa
dec
add
cmp
gs
ja
cs
out
iret
mov
outsb
push
add
arpl
cwtl
add
add
jmp
inc
jmp
js
dec
cmp
ds
fisubl
mov
mov
xor
bound
lea
ds
inc
inc
push
stc
push
push
inc
add
inc
mov
es
push
push
inc
les
je
pop
and
mov
in
or
pop
xor
mov
lea
enter
or
or
popf
aas
sti
rcr
jg
push
sbb
pusha
pop
and
clc
notl
rorl
mov
int3
sub
sub
adc
mov
cwtl
addr16
xor
inc
xor
cwtl
push
dec
add
cs
aas
xchg
fnstenv
push
imul
cmp
xor
scas
cmp
xor
out
lock
pop
xlat
imulb
sub
xor
push
data16
pop
fstpt
hlt
sub
jbe
cmp
jae
fs
jmp
in
in
insb
insl
jbe
insb
bound
sub
sub
insb
push
lcall
daa
je
cmp
insb
xor
jle
and
adc
lds
nop
add
xchg
subl
shlb
inc
add
cld
test
inc
xor
xor
data16
mov
and
out
mov
lock
or
and
stos
mov
xor
add
pop
jae
sub
rolb
and
sub
and
cmpsb
insb
jle
mov
cmp
sub
push
dec
push
and
push
bound
outsl
pop
jg
xor
lods
popa
or
xor
insl
gs
jbe
xor
stc
pushl
or
and
inc
insb
cs
pop
jo
bound
outsb
in
mov
bound
cs
addr16
cmp
movsl
int
push
mov
jb
das
jo
das
js
xor
mov
insl
push
ja
and
test
mov
add
ja
pop
mov
loope
cmc
in
sbb
fs
xor
or
imul
adc
inc
and
in
jmp
outsb
dec
xorl
dec
mov
sbb
roll
inc
xor
xchg
inc
iret
repz
push
push
adc
cmp
adc
xchg
inc
or
popf
out
or
les
lods
and
stos
mov
mov
cli
sbb
fwait
scas
or
push
xor
push
inc
push
enter
inc
mov
ljmp
cltd
inc
es
dec
xor
push
xchg
xchg
or
xor
add
mov
cmc
push
mov
pop
les
in
pop
dec
pop
pop
jmp
xor
leave
add
int
xor
dec
sbbb
inc
lock
add
push
xor
pop
sub
test
sbb
xor
xor
jp
cltd
pop
push
xor
push
mov
loopne
loopne
movsb
or
pop
or
or
cmp
popa
and
pop
add
incl
add
orl
or
sbb
outsl
xor
or
push
dec
movlps
cmp
inc
orl
jmp
and
mov
leave
xchg
nop
inc
sub
roll
sub
pop
adc
pushl
sti
fistps
dec
inc
mov
adc
and
inc
inc
push
push
data16
ljmp
push
push
dec
adc
or
xchg
xchg
enter
and
lret
lret
mov
lcall
daa
xchg
scas
pop
add
or
adc
adc
imul
jno
cmpsl
es
call
mov
leave
and
inc
cs
cmp
cmp
sbb
mov
sub
incl
sub
lret
adcl
inc
inc
or
lods
push
outsb
imul
fildl
outsl
inc
ds
pop
and
cmpsl
lea
push
push
cmp
cmp
cmp
inc
test
push
push
adc
and
sub
sbb
push
push
push
inc
dec
push
cmp
xor
push
adc
jge
mov
fbstp
xor
cmpsb
pop
push
daa
inc
pusha
addr16
decl
pushl
cmp
adc
mov
xchg
arpl
cltd
sahf
lahf
mov
pushl
pop
lgs
pop
imul
pop
push
cmp
inc
inc
adc
jae
adc
dec
sar
adc
sub
pop
pop
pop
les
incl
cld
xchg
imul
mov
rcrb
jge
ret
mov
stos
decl
mov
fldt
mov
mov
movsl
xchg
push
test
mov
sar
jnp
mov
outsb
insb
jo
adc
cmpsb
movsb
mov
sbb
test
xlat
aad
gs
inc
loopne
mov
cmpl
and
and
push
inc
jbe
clc
mov
insl
xchg
in
scas
push
fbld
cwtl
mov
mov
stos
dec
sub
add
mov
jno
call
jmp
stos
lods
lods
pop
push
lahf
pop
push
cs
stos
dec
js
sahf
jo
jns
adc
ljmp
xor
dec
test
ja
xchg
pop
jno
je
scas
mov
push
inc
inc
aas
cwtl
mov
incl
outsl
xchg
lret
and
cmp
mov
aam
lret
aad
movsl
mov
push
mov
jg
dec
lcall
fwait
xchg
mov
ret
sbb
jnp
bound
fildll
jg
or
inc
push
jo
je
je
adc
aaa
das
enter
jmp
mov
and
es
mov
mov
mov
jle
xchg
sbb
jmp
adc
mov
pop
js
mov
adc
aaa
sbb
xor
xorl
imul
call
cwtl
loope
mov
mov
mov
xchg
sub
xchg
xor
pop
mov
push
popf
jb
clc
decl
outsl
mov
or
sub
fbstp
add
sbb
pop
orl
sub
mov
dec
pushf
push
nop
lock
mov
cmpsb
fdivs
fcmovne
add
and
xchg
daa
inc
cmpsb
test
dec
sbb
shl
add
or
dec
jo
clc
sub
pushl
adc
sbb
fwait
add
imul
das
mov
xor
popa
adc
aas
ret
paddq
cwtl
test
ljmp
mov
out
es
jnp
outsl
xor
mov
ret
mov
decl
out
xor
iret
or
mov
lret
pop
sahf
or
xor
push
sbb
pushl
shll
mov
popa
ret
pop
int
mov
test
mov
mov
sarl
shl
in
cli
call
lahf
cmp
popf
mov
jns
fildll
jge
jae
fidivs
and
call
push
cmp
test
mov
jmp
mov
iret
mov
sub
movsl
push
ret
cltd
test
subb
les
cli
incl
dec
jne
inc
dec
cmp
std
cmpsl
adc
ja
das
aam
add
push
dec
in
push
popa
push
pop
push
add
sub
sub
cs
outsl
js
push
xor
hlt
pusha
xchg
mov
nop
push
xor
pop
outsb
push
xlat
es
out
jmp
in
addl
addl
sbb
cltd
or
inc
cltd
fcomip
addr16
jge
xchg
inc
push
cmpsb
out
test
nop
int
sbb
aad
sbb
mov
fcomip
cmc
mov
test
cmp
aaa
and
out
jno
and
fnsave
imul
push
sbb
push
cmpl
xchg
push
add
stos
jmp
mov
ja
nop
sub
ljmp
mov
stos
push
mov
les
mov
loopne
jae
mov
dec
or
in
inc
orl
push
dec
jge,pt
orb
mov
pop
push
sbb
jnp
mov
incl
pop
enter
push
loopne
sub
sub
push
push
aad
xchg
pop
jae
dec
out
push
pop
dec
nop
arpl
pop
xchg
jno
xchg
mov
xlat
pop
call
pop
pop
sub
fistl
fadd
jg
es
xchg
sbb
gs
cltd
leave
inc
xor
fxch
sahf
mov
ficompl
decl
fwait
popf
in
sub
push
test
insl
fdivs
mov
addr16
incl
fwait
ss
hlt
cmpsl
aam
sbb
loope
lcall
lods
mov
mov
ljmp
push
arpl
mov
fisttpl
rcl
sub
adc
loope
nop
mov
ja
in
neg
jg
or
into
mov
mov
ss
mov
decl
or
cmp
jbe
mov
sahf
mov
adc
push
fnsave
mov
adcl
incl
and
mov
in
and
or
dec
fsubl
insl
mov
mov
ds
cmp
sti
inc
mov
xchg
mov
dec
jae
leave
outsb
mov
cmc
ret
mov
or
and
out
xchg
mov
xor
push
rcrb
and
gs
xorb
jecxz
popa
pop
bound
icebp
add
addb
xchg
jg
cltd
push
pop
cwtl
pop
or
fs
push
lcall
rcrb
inc
mov
cmp
lds
ljmp
mov
ljmp
repz
loop
xor
mov
fs
outsb
inc
cmc
test
dec
cmp
lds
push
test
iret
lods
call
xor
and
mov
call
lods
lret
mov
ljmp
xor
adcl
and
and
ljmp
add
mov
sbb
xlat
lock
out
je
or
jmp
mov
inc
cmp
mov
or
dec
insb
inc
mov
sbb
outsl
push
std
loop
xchg
push
and
jae
fs
out
bound
test
mov
lret
mov
and
jnp
or
clc
dec
sub
add
mov
jmp
aad
dec
out
cmp
aam
movsl
les
adc
xor
pop
es
jmp
and
add
xor
pop
cmp
xor
mov
add
inc
pop
or
adc
pushf
mov
addl
test
mov
outsl
clc
jg
adc
pop
add
cmp
cmp
pop
pushl
lret
jae
call
jb
dec
lods
mov
xchg
jo
fildl
add
dec
fldenv
or
mov
incl
addr16
loopne
and
push
inc
mov
or
dec
inc
sbb
aaa
lds
dec
jno
sbb
ret
mov
mov
pop
add
or
nop
incl
push
nop
mov
sbb
out
mov
adc
mov
dec
dec
fisttps
stos
pop
inc
std
dec
push
jge
aad
jb
stos
push
add
scas
es
popa
decl
mov
shrb
xor
mov
loopne
push
mov
pop
xchg
rcl
mov
repnz
imul
hlt
sbb
sbbb
decl
add
lock
fs
dec
fdecstp
insl
ret
sbbl
pop
stos
dec
or
decl
xchg
xchg
dec
gs
pop
or
mov
stos
mov
leave
test
mov
xlat
call
fcomip
call
repnz
rorl
xor
inc
and
sub
imul
jmp
and
movsl
jbe
ret
jmp
lret
cmp
fwait
repz
mov
mov
call
mov
or
push
lds
rol
add
dec
in
mov
mov
jle
stos
repnz
pop
aaa
xchg
sub
mov
in
incl
fdivr
mov
sbb
loopne
xchg
jge
out
xchg
or
jne
decl
push
and
lahf
sbb
add
mov
test
push
and
xchg
add
sub
pop
fs
jp
jo
mov
sbb
cmp
inc
dec
jb
xchg
cld
test
stc
lods
mov
outsb
and
push
add
sbb
mov
and
lahf
dec
shlb
clc
jmp
add
jb
mov
adc
add
jmp
push
nop
mov
xchg
push
sbb
ljmp
adc
pop
or
sub
pop
dec
loopne
push
pop
xchg
or
cli
mov
push
lods
pushl
inc
fdivs
subb
orl
addl
std
incl
mov
xor
and
inc
mov
sbb
movsl
arpl
jbe
push
pop
add
in
mov
jp
push
xor
in
lret
cmpsl
cmp
dec
xor
mov
fwait
jae
jg
inc
inc
repz
aaa
xor
push
out
sub
push
cmpb
ljmp
movsl
mov
nop
push
mov
mov
lods
inc
test
mov
fstpl
fucomi
sbb
loope
mov
call
mov
dec
inc
insb
outsl
shrl
sbb
out
rcr
aaa
sahf
sar
lock
aas
push
jmp
lcall
pop
fisubl
and
cmpsb
insb
aam
ret
jo
sbb
loope
jmp
ds
clc
inc
fimull
cmpsb
cmp
inc
sbbb
dec
mov
add
push
mov
fadd
lea
cmc
adc
mov
pop
push
xchg
das
clc
call
popa
leave
or
int3
je
cmp
lahf
adc
es
add
push
adc
push
xor
xorl
movsb
and
lds
push
lock
lock
ljmp
cmp
and
sarl
cltd
imul
std
lcall
shll
mov
and
addl
cmp
loopne
push
lock
lahf
dec
mov
xor
cmpsl
jbe
shl
imul
jg
jns
mov
das
push
shlb
movsl
inc
add
scas
dec
inc
push
push
inc
jg
add
lcall
xchg
in
dec
push
and
shrb
mov
addr16
pop
inc
cld
decl
inc
aad
fmull
das
rolb
ljmp
outsb
addb
shlb
push
les
pop
mov
push
movsl
lcall
or
inc
lds
add
je
adc
pop
add
arpl
js
or
push
push
adc
inc
jno
mov
sub
push
sbb
jb
jecxz
aas
testb
jmp
cmp
jae
call
andl
add
xchg
mov
das
daa
add
push
add
or
icebp
incb
insb
mov
or
data16
add
mov
je
mulb
and
push
out
mov
cmp
cmp
enter
ja
jbe
dec
adcb
push
sbb
ljmp
dec
andb
data16
lock
xchg
add
add
cs
or
dec
jno
add
mov
rolb
cwtl
jne
sub
add
jbe
dec
or
rclb
pop
add
ja
and
lods
mov
addb
insb
rolb
imul
add
xchg
es
imul
adc
test
xor
push
dec
pusha
sbb
loope
mov
xor
dec
add
add
mov
sbb
jle
dec
mov
inc
inc
lret
addb
les
sub
ret
clc
sub
movsl
pop
call
push
aam
xor
addr16
fs
pop
inc
jg
cmc
push
test
push
dec
in
idivb
call
adc
mov
negb
out
cmp
aaa
std
call
inc
jae
pop
ret
fsub
popa
pusha
adc
jo
cmp
mov
xchg
dec
pusha
adc
inc
sbb
or
jb
inc
nop
push
jmp
push
inc
push
adc
cs
adcb
xchg
adc
outsl
andb
add
adcb
or
jmp
xor
int
adcl
pop
inc
xchg
pop
add
sbb
sub
push
sbb
pop
jno
push
daa
xor
stos
push
xor
push
test
dec
mov
mov
xlat
gs
dec
or
aam
jae
mov
js
fbstp
data16
pop
pop
dec
mov
inc
adc
movb
cmpsb
dec
adc
mov
xchg
movl
add
sub
pop
sbb
jo
lods
or
jbe
xor
mov
jne
adc
xchg
sub
mov
dec
movb
push
or
clc
jp
loopne
xchg
sbb
add
pushl
aaa
dec
push
sbb
push
or
adc
ss
lahf
add
jmp
mov
xor
fs
xor
hlt
es
es
daa
fwait
mov
daa
push
and
and
pop
lods
and
push
dec
and
cmpl
mov
lret
loope
and
fsubrp
incl
add
daa
push
add
jle
repz
cmc
push
mov
inc
pop
add
call
fdivp
mov
xchg
sub
nop
outsb
jecxz
cmc
inc
pop
dec
mov
sbb
adc
pop
lahf
adc
fcomip
pushl
call
stc
test
xor
sub
cmp
cmp
fldcw
adc
xchg
xor
mov
and
or
xchg
push
xchg
aaa
decl
adcl
xchg
push
rorb
jmp
inc
test
aaa
call
mov
or
add
and
xchg
inc
mov
aaa
cld
jmp
lcall
fdivl
or
cltd
or
lcall
lret
jbe
dec
xchg
movsl
push
add
xchg
mov
fs
mov
cmp
fdivl
xchg
cwtl
dec
and
cmp
jbe
add
call
adc
cmpsb
or
and
push
mov
jns
xor
sub
pushl
add
test
test
notl
mov
ljmp
add
test
aas
cltd
mov
inc
lcall
aas
and
sbb
pop
insb
outsl
clc
jmp
lcall
jmp
inc
adc
mov
mov
paddd
pushl
inc
int
sbb
test
jb
jecxz
insl
int3
loope
rcl
xor
or
bound
xor
mov
xor
jmp
jle
mov
loop
inc
mul
popf
inc
adc
push
movsl
cmp
sub
adc
jo
testb
mov
mov
adc
es
or
jmp
shrl
xchg
xchg
repnz
and
lret
push
inc
orl
sub
or
xor
lea
nop
push
sub
insl
sbb
incl
sbb
leave
and
mov
mov
je
es
sub
jnp
sti
andl
and
push
gs
fcomip
mov
sti
adc
dec
fs
lcall
addr16
mov
in
pop
push
hlt
pop
lret
push
jne
add
sbb
inc
add
test
andb
pop
xor
es
mov
or
push
mov
jmp
mov
inc
and
mov
addl
fs
mov
cmpsb
push
sbb
and
adc
stos
neg
in
and
mov
lods
stc
sbb
adc
out
mov
daa
jmp
dec
daa
movsb
jl
add
imul
pushf
loopne
pushf
pushf
mov
pop
sar
decl
and
test
dec
xor
call
outsb
mov
sub
notb
jecxz
fistps
inc
dec
push
cli
jmp
sahf
out
sbb
sbb
pop
jns
cmp
repz
fcomip
scas
xchg
add
sbb
add
scas
mov
mov
lret
ja
lcall
into
xor
push
xchg
mov
loope
and
sub
ficoml
mul
cmp
pushl
mov
mov
in
dec
xor
mov
aam
or
jmp
mov
mov
js
leave
rorb
pop
xor
mov
xchg
push
jge
filds
jbe
push
add
bound
clc
mov
push
and
cmp
mov
mov
leave
pusha
adc
cmp
and
pop
or
cmp
mov
mov
fs
decl
mov
aas
mov
test
bnd
shrl
test
imul
stc
aas
mov
mov
fwait
sub
scas
loope
mov
xor
insb
cld
fcom
sbb
sbb
mov
adc
fsubl
sub
popa
inc
rclb
push
js
repnz
pop
test
sbb
adc
test
push
mov
aaa
lahf
adc
pop
je
jb
and
mov
repnz
cmp
cmpsl
scas
out
cli
cmp
test
andb
cld
mov
xchg
mov
inc
adcl
lret
scas
inc
inc
push
cld
mov
xchg
lock
ljmp
and
rclb
data16
lret
dec
jo
xor
std
fwait
int3
fildll
and
pop
insl
cmp
sti
ss
sub
fdivrl
push
pop
sarb
jge
pop
enter
decl
xor
cmp
adc
xchg
and
mov
lret
jno
cmp
adc
icebp
add
add
popa
cmpsb
pop
adcl
ljmp
iret
sub
push
cmpsl
divb
in
ret
outsl
mov
fwait
inc
add
shll
and
xchg
test
mov
pusha
ret
push
mov
out
lret
aam
add
fcomps
xor
xor
cmp
ljmp
insl
ret
jns
ret
adc
mov
popa
insl
inc
ret
insl
add
out
push
pushf
cmp
mov
das
push
sub
aad
cmpsl
sbb
xchg
inc
bnd
inc
mov
dec
les
insb
arpl
cmpl
sbb
inc
xchg
push
subb
adcl
mov
andl
dec
cmp
sbb
jo
or
fwait
scas
fimuls
push
std
lcall
jns
sbb
jl
scas
xadd
and
or
orl
in
mov
jae
cwtl
loopne
add
xor
arpl
ret
movsl
lcall
call
test
mov
xchg
mov
mov
int
daa
imul
xor
out
clc
push
das
fwait
add
xchg
xchg
mov
sti
or
xlat
add
adc
pop
cmpsb
int
cld
add
fcomip
bound
das
add
shrb
push
incl
sbb
lods
das
ja
push
adc
mov
mov
mov
and
jae
ret
mov
sub
dec
popa
inc
and
push
ds
inc
pop
xchg
ret
or
dec
push
mov
inc
sbb
push
xchg
decl
mov
or
push
inc
mov
fists
call
stos
cmpsb
dec
enter
sbb
cmc
loopne
mov
mov
sub
aaa
lea
aam
or
xor
jg
lret
icebp
push
jmp
aad
push
aaa
clc
out
add
sti
test
lock
fwait
jecxz
out
leave
cli
mov
cmp
addl
jl
fistpl
xchg
push
push
popa
std
xchg
cmp
mov
ret
sar
jnp
test
adc
mov
pop
imul
adc
push
or
cld
pop
dec
orl
push
adc
ds
mov
xor
adc
push
xchg
push
sbb
and
add
inc
adc
call
push
aaa
lods
std
or
lock
insl
ja
lcall
gs
int
shlb
pop
loopne
cli
add
mov
mov
lods
mov
pushl
pop
into
in
mov
shlb
pusha
adc
cmp
pop
jl
pop
mov
les
and
push
test
or
add
aas
stos
daa
and
adc
fbstp
mov
je
aas
jle
aas
movsb
gs
sbb
dec
mov
imul
decl
fwait
mov
dec
ret
pop
mov
and
popf
sbb
loop
int
lcall
pop
loop
dec
push
add
push
clc
xlat
aam
dec
mov
push
out
inc
outsb
jmp
push
cmc
inc
lock
lahf
mov
andb
std
fnstcw
lcall
mov
or
jo
fsub
sbbl
jp
ret
sub
sbb
jl
imul
mov
push
push
xor
inc
push
decl
pop
push
adc
and
xchg
add
cmp
adc
mov
jg
add
aaa
js
and
out
mov
dec
out
hlt
sbb
hlt
jns
rclb
or
cmp
mov
add
repz
pop
add
push
push
mov
and
sbb
pop
mov
or
gs
cmp
call
sbb
or
and
add
ret
and
repnz
lods
adc
sbb
in
jg
jmp
fidivs
push
pop
mov
ret
push
mov
data16
icebp
dec
cltd
dec
xor
call
sub
je
inc
daa
mov
imul
push
cmp
stos
sarl
incl
loopne
test
adc
mov
test
cmp
sbb
out
cli
mov
data16
xor
jbe
jae
outsb
or
sahf
lods
imul
mov
das
and
lock
inc
push
into
decl
cmp
inc
pop
cmp
nop
fbld
xchg
jmp
push
and
mov
movups
push
sbb
popa
int3
inc
test
pop
push
and
push
loope
push
psubsb
mov
pusha
dec
and
dec
fidivs
adc
decl
adc
orb
dec
je
mov
dec
xchg
and
lcall
mov
xchg
sub
clc
rolb
cmp
inc
xchg
shll
lret
sar
jmp
mov
stos
adc
cmpsb
mov
xchg
mov
pop
bound
jbe
fcomip
pushl
xor
add
mov
sub
mov
stos
jg
jmp
lcall
andb
xor
and
or
mov
inc
data16
leave
xchg
cmp
push
and
dec
jno
leave
ljmp
popf
jp
ljmp
gs
cmpsb
jae
jbe
fcomi
in
fstpt
jecxz
lcall
lcall
fiadds
mov
xchg
into
fnstsw
jmp
mov
rol
lahf
pop
aas
push
mov
ret
xchg
icebp
pop
int3
ja
imul
inc
jg
add
stc
neg
iret
test
sbb
inc
push
ret
aam
pushl
int3
xor
fistps
or
adc
adc
xor
add
pop
nop
jo
mov
xor
jg
pushl
or
and
data16
sub
sbb
in
or
decl
jb
and
divb
mov
xchg
mov
leave
daa
pop
add
sub
test
and
and
arpl
test
inc
sbb
and
jl
int3
xor
mov
xchg
mov
xor
add
dec
test
xchg
push
ss
movsb
cmp
xchg
lret
or
jmp
jmp
mov
dec
movsl
xor
lea
dec
pop
fdiv
lcall
push
dec
mov
adc
or
xor
mov
lcall
scas
pusha
js
sub
ljmp
stos
cs
push
sub
add
jmp
andb
bound
sbb
xor
sub
mov
insb
and
sub
and
cmp
mov
into
push
lcall
jmp
and
outsl
cmp
ljmp
fdivrs
mov
jg
and
cmp
inc
out
pusha
call
jmp
fbld
dec
pushl
out
fsubrl
or
pop
and
xchg
cmp
rolb
xor
iret
mov
sar
ds
call
inc
lcall
fcoml
mov
add
lock
sub
ret
or
sub
adc
jae
movsb
ljmp
cmp
repz
test
jmp
sub
add
push
mov
xchg
pop
pop
push
sub
xchg
mov
rcll
mov
call
push
enter
xor
adcl
adc
insb
cmp
jns
sub
idiv
dec
pop
lock
dec
xchg
pusha
mov
int3
push
inc
test
or
test
call
lcall
push
xchg
sub
xchg
push
loopne
add
aad
xlat
xchg
clc
cmpl
jle
push
xchg
hlt
xchg
push
pop
insl
mov
scas
xchg
dec
fadds
outsl
cli
sti
xchg
jbe
loope
mov
inc
mov
or
shrl
mov
or
f2xm1
rorl
add
sub
clc
idivl
fmul
adc
or
cmpsl
mov
sub
inc
cmp
push
xchg
cmpsb
xor
jmp
jb
xchg
jg
pushf
loop
cmp
jecxz
pushf
aam
add
push
mov
lcall
cmp
mov
mov
mov
lds
sbb
pop
mov
pusha
insb
and
xor
or
sub
pusha
xor
sar
cltd
sbb
add
nop
test
mov
shll
dec
pop
rcrl
nop
add
movsb
inc
dec
pop
sti
sbb
jmp
jbe
mov
scas
jae
mov
mov
add
loopne
or
add
jge
xor
orl
jbe
movsb
ds
cmovae
adc
push
daa
out
mov
jae
pop
xlat
hlt
jmp
aaa
stos
mov
mov
lods
jge
jb
xchg
arpl
lret
lret
stc
sub
stos
lret
inc
call
std
cld
xor
or
push
xchg
sbbl
cmp
inc
or
add
mov
rolb
add
adc
lcall
outsb
rorl
pop
mov
rcrl
flds
mov
jns
lock
fwait
and
repz
add
push
mov
outsl
scas
push
sub
cmpsl
xor
test
movsb
scas
mov
dec
pop
enter
outsl
adc
je
add
sub
test
mov
cmp
pop
mov
jge
movb
orl
arpl
bound
xchg
fiadds
push
sub
dec
pop
mov
jg
incl
shlb
popf
jmp
lret
daa
xor
dec
insb
pop
and
adc
fstl
and
and
pop
adc
cmc
or
sub
clc
ljmp
xlat
loopne
pusha
pop
sub
push
in
xor
pop
inc
js
fcomps
imul
loopne
clc
mov
adc
imul
fs
incl
xor
lods
out
add
movd
mov
pop
fsts
lcall
adc
adc
std
decl
inc
inc
pop
pop
ljmp
adc
js
test
inc
xchg
and
dec
loopne
sbb
popa
addb
mov
es
decl
fcmovnb
add
and
push
into
or
xor
dec
xchg
sbb
es
jmp
lea
cmp
dec
xor
adc
xor
and
scas
jmp
xchg
adcb
pop
je
jb
das
jmp
mov
or
ljmp
rol
push
andb
mov
adc
mov
decl
shrl
or
push
adc
add
lcall
mov
clc
lock
or
aas
cmp
sbbl
or
test
test
jmp
inc
push
sbb
pusha
das
jns
sbb
test
incl
clc
dec
sub
push
scas
cwtl
rolb
push
roll
in
lcall
pop
pop
lret
push
jbe
test
mov
test
arpl
add
and
and
pushl
test
insb
xor
jecxz
cld
rcrb
iret
cmp
call
ljmp
add
stos
les
aad
dec
loopne
mov
pushl
jl
jle
sbb
call
adc
push
js
cmp
sahf
mov
jecxz
or
in
mov
sub
pusha
push
dec
mov
jb
iret
inc
dec
pushl
leave
cmp
mov
jp
xchg
xor
pushw
inc
and
out
sub
jns
pop
mov
xor
mov
xchg
xlat
jb
and
push
fistl
cmp
inc
push
adc
push
call
xchg
int3
out
push
pop
into
ljmp
cmp
jo
movsb
lcall
decl
fs
insb
jbe
sbb
mov
in
dec
pushl
or
je
dec
mov
std
adc
mov
push
ja
scas
insl
test
or
mov
pop
stc
pop
xchg
sub
call
adc
cld
add
das
shrl
pop
out
out
inc
adc
test
sbb
enter
mov
and
cld
out
enter
sahf
in
adc
pop
pop
mov
movsb
inc
pop
pop
push
push
je
xchg
cli
fiadds
lret
push
sbb
push
ret
jge
mov
ds
ljmp
jbe
imul
test
fcomip
arpl
pop
out
pop
fbstp
adc
jnp
inc
push
pop
push
loope
push
cmp
pop
push
jo
add
cld
add
stos
decb
popf
push
inc
xchg
xor
ret
pop
fdivp
sar
sarb
pop
out
dec
pushl
jne,pn
xor
out
sbb
jae
call
mov
sbb
pushl
mov
pusha
mov
arpl
mov
addr16
sbb
push
scas
sub
lcall
rolb
movb
dec
mov
incl
cld
stos
mov
lcall
scas
ja
mov
pop
sub
fs
and
mov
or
inc
cmp
aam
sbb
cmp
xor
pop
rolb
jp
scas
inc
js
pusha
xor
inc
cmp
or
dec
add
ret
addb
es
mov
xor
push
push
in
sub
mov
ljmp
test
movsb
sbb
inc
scas
repnz
jecxz
subb
dec
mov
mov
adc
adc
cmp
pop
mov
cmp
ret
test
ret
sub
xor
mov
arpl
in
enter
sub
inc
xor
ret
xor
ds
aaa
lcall
rolb
inc
cmp
test
inc
mov
xor
scas
mov
rolb
add
fildl
or
aaa
addb
cmp
rolb
mov
mov
adc
orl
incb
adc
ja
test
sbb
insb
pusha
lds
inc
insb
nop
xor
add
aad
cmc
pop
stos
lds
pusha
rolb
lds
lock
add
call
xor
push
test
sub
cmp
ljmp
cmp
mov
adc
sub
stos
push
jb
in
mov
sub
inc
call
mov
sbb
bndldx
div
xor
or
incl
sub
pusha
dec
adc
mov
xor
pusha
sbb
sub
dec
clc
sbb
mov
sahf
leave
mov
and
adc
dec
xor
jmp
add
pushl
addr16
sbb
leave
inc
push
adc
xorl
lret
orb
aas
push
dec
add
pusha
xchg
mov
sbb
fwait
adc
lcall
dec
andb
ja
mov
gs
loope
test
lret
cmp
inc
dec
sbb
lcall
and
icebp
mov
add
lret
mov
mov
ret
movsl
mov
mov
mov
jl
sub
jnp
ja
xor
shrb
pushf
test
push
dec
cmpb
mov
roll
push
jge
ja
shrl
outsl
jge
add
pusha
inc
push
sub
pop
enter
lret
mov
leave
faddl
mov
pushf
ret
add
ds
lea
loopne
scas
mov
push
mov
scas
sar
mov
lcall
pusha
mov
push
sub
jg
sub
inc
fs
pop
incl
and
mov
mov
popa
inc
add
in
lcall
test
add
and
pop
push
or
dec
pop
enter
xchg
jg
push
pop
mov
invd
push
enter
pop
dec
sbb
arpl
mov
push
lret
cmp
cmp
cwtl
lcall
mov
pushf
sbb
arpl
and
xchg
mov
inc
or
incl
and
and
xchg
xor
loop
jns
push
mov
push
or
xchg
rcrl
xor
repz
xor
mov
pop
adc
mov
and
lcall
sbb
pop
fisubrs
lcall
pushl
push
cmp
adc
mov
push
sbb
jns
daa
pop
add
dec
add
ljmp
sbb
mov
fs
add
rol
add
mov
lcall
aaa
lret
jae
fwait
sbb
push
or
pusha
mov
and
mov
add
mov
shrl
jno
aaa
jb
leave
rorl
dec
fcmovbe
push
cld
ljmp
scas
lods
pushf
xorb
xchg
sub
or
mov
idiv
decl
xor
dec
fcoms
push
adc
inc
arpl
test
xchg
xor
loope
lcall
xchg
jmp
add
pop
sub
pop
rolb
and
fldt
sbb
sbb
movb
sti
pop
sbb
arpl
test
andl
inc
test
xchg
add
fsubrs
sub
adc
sub
dec
pop
add
add
lcall
sub
and
sub
adc
add
pusha
add
enter
int
clc
cmp
lcall
pop
adcl
add
fadds
xorl
xor
mov
mov
dec
enter
popa
adcb
decb
add
stos
out
sbb
pop
test
pop
bound
incl
push
clc
pop
repnz
push
sbb
pop
xchg
mov
xchg
cmp
mov
pop
push
and
call
add
mov
push
xor
leave
pop
push
sbb
call
push
adc
movsb
xchg
xor
addl
idivl
and
repnz
push
jecxz
jnp
jle,pt
push
and
sbb
into
stc
adc
jl
or
push
and
cmp
loop
aas
mov
sub
jns
in
adc
insb
xchg
nop
in
or
pop
lea
and
js
es
ss
cmp
push
and
adc
lods
sarb
push
ss
pushf
rclb
cmpb
faddl
mov
xor
xor
sbb
mov
ljmp
shrb
and
adc
pop
lahf
and
loop
std
adc
or
imul
pop
xor
jg
into
pop
jo
out
add
pop
pop
lods
fdivp
les
add
mov
sub
insb
and
jmp
push
lcall
sbb
mov
lret
stc
cmc
orb
icebp
hlt
scas
sub
out
dec
dec
sub
xor
addl
outsl
xor
fcomip
dec
clc
mov
cs
or
stos
mov
es
xlat
jl
mov
mov
pop
adc
pusha
pop
cmp
rolb
mov
outsl
or
or
adc
mov
into
bound
push
mov
mov
out
add
jbe
pop
xchg
lods
popa
out
pop
mov
lea
mov
mov
cmp
shrb
sahf
movb
mov
decl
ljmp
add
push
or
call
pusha
mov
dec
cwtl
ljmp
push
dec
cmpl
xor
mov
mov
mov
ljmp
push
sbb
test
std
mov
mov
jp
jg
cmpl
push
fldenv
pop
push
jo
cmp
movsl
and
out
cli
pushl
fsts
test
pop
push
lea
enter
adc
mov
es
fwait
cmp
mov
cmp
ds
xchg
decl
nop
xorb
push
clc
add
call
sbb
xchg
push
cli
adc
lcall
jl
cmpsb
pushf
rorl
and
adc
or
scas
xchg
jnp
subb
arpl
outsl
cli
mov
add
pop
push
pop
xchg
test
pop
adc
ljmp
insb
fadds
inc
imul
pusha
js
movsl
mov
ljmp
push
repnz
incl
cld
add
adc
call
shl
adc
pop
push
add
std
in
push
pop
adc
sbb
push
rorb
dec
mov
mov
cmpsb
jg
add
xchg
sub
mov
clc
add
addb
or
incl
stos
add
xlat
dec
rolb
mov
fisttps
mov
push
pop
out
adcl
sbbl
sbb
add
repnz
pop
imulb
push
pushf
or
xchg
adcl
fildll
xor
imul
jbe
ret
pop
lds
mov
cltd
ret
in
shlb
or
fldenv
sub
jmp
cmp
arpl
push
sbb
mov
insl
scas
cmp
mov
xchg
dec
mov
lea
push
or
and
js
adc
lcall
cltd
mov
insl
jmp
or
or
mov
lods
in
decl
dec
cmpsb
xor
push
mov
aas
pop
cmp
dec
xor
add
fists
ljmp
sub
rcrb
out
pusha
dec
cwtl
decl
lock
mov
into
mov
fs
popf
and
cmp
shrb
fldcw
popl
mov
mov
int3
cltd
movsb
push
xchg
mov
mov
imul
lock
call
push
xlat
xchg
ret
fdivs
lret
add
pop
sbb
inc
movl
xor
or
icebp
hlt
int3
movl
cmpsb
fwait
mov
pop
sbb
orl
scas
clc
call
pop
cmc
inc
imul
pop
pop
sbb
andb
lock
mov
mov
add
push
sbb
mov
decl
xchg
addb
in
lcall
adc
mov
aam
bound
and
push
push
add
mov
ljmp
jno
outsb
pop
nopl
outsl
clc
adc
pop
enter
and
or
in
mov
add
dec
pop
in
test
or
mov
fcom
dec
inc
pop
lret
mov
decl
mov
cmovp
mov
fcmovbe
scas
mov
and
pop
in
mov
test
push
jle,pt
in
ds
xor
mov
arpl
sub
out
daa
or
int
lcall
fs
andb
push
rclb
test
sub
pusha
pop
adc
std
out
out
outsl
repz
loope
outsl
adc
sbb
mov
out
jp
cmp
ds
and
sbb
and
sub
add
xchg
push
pushl
push
lods
loopne
inc
mov
adc
mov
mov
mov
data16
adc
lods
enter
decl
mov
out
test
add
lret
adcb
mov
jno
dec
test
clc
mov
icebp
test
pop
xor
stc
adc
mov
movsl
jb
sarb
lcall
rsqrtps
imul
fsubs
fisttps
xchg
js
call
imul
mov
lods
add
xchg
cld
adc
pop
cmp
adc
psubsb
xorb
ljmp
cmp
test
adc
inc
sbb
scas
add
mov
dec
les
pusha
add
clc
scas
xor
rcl
sbb
lahf
mov
jmp
cld
dec
popa
jb
mov
ds
lds
outsb
jmp
pop
push
cli
outsl
cli
cmpsl
dec
mov
add
jl
gs
xchg
cmc
jmp
adc
fcomip
sarl
cld
jne
es
scas
mov
and
mov
push
pushl
and
arpl
rcl
mov
mov
cwtl
shlb
xor
lods
arpl
pop
in
sbb
sbb
mov
or
xchg
mov
aaa
std
std
incb
sbb
xchg
imulb
mov
and
jbe
lock
mov
inc
or
icebp
xor
and
adc
or
xor
adc
ljmp
into
shlb
or
or
and
xchg
add
pop
inc
cmpb
fistpl
cmp
sbb
mov
ja
cltd
stc
xor
lret
pushf
cmp
cld
cltd
fsts
push
aad
adc
int
inc
outsl
sbb
push
imul
fwait
and
hlt
sub
xor
imul
push
ds
ljmp
push
add
inc
test
add
push
mov
pop
out
js
stos
dec
or
pop
hlt
push
icebp
mov
sbb
stos
sbb
jnp
or
push
cmp
sti
shlb
and
dec
add
leave
pop
sub
jae
in
in
sbb
stos
mov
inc
ret
add
iret
mov
adc
imul
jg
rol
jl
inc
mov
ret
xchg
mov
in
incl
mov
js
jecxz
shl
stc
repz
pop
nop
lds
sbb
enter
decl
lods
lret
jl
lret
andl
dec
xor
bound
sub
lods
pop
pushf
cmp
incl
cmp
xchg
notb
lret
jl
addl
inc
sub
mov
adc
sbb
popa
prefetch
or
pushl
mov
mov
xorl
repz
cmp
cwtl
and
imulb
jecxz
cmp
cmp
push
mov
bound
mov
mov
inc
add
rolb
inc
xor
in
pop
dec
jns
sbb
cmp
fs
ljmp
adc
dec
xchg
pop
cmpsb
cwtl
bound
es
jns
fxam
cwtl
jge
test
cmp
cmc
fbld
jns
stc
out
addb
sub
mov
andl
xchg
push
sbb
imul
stos
push
xchg
out
mov
test
or
ljmp
test
adcl
xchg
lods
xor
je
dec
dec
jno
incl
faddl
sbb
xor
xchg
or
ret
lock
inc
push
sbb
incl
xor
popa
hlt
or
adc
xchg
push
inc
push
pop
in
pop
and
sbb
decl
dec
xor
lret
push
in
push
mov
push
hlt
push
test
scas
mov
test
push
push
stc
fwait
aad
push
int3
loope
cwtl
add
add
jle
mov
jo
aad
mov
or
xlat
add
jnp
pusha
xchg
pop
and
not
and
js
loopne
or
pop
jae
cmp
addl
dec
pop
imul
pushl
popl
rcll
and
test
je
mov
orl
push
lods
inc
rolb
and
jno
std
push
inc
add
adc
lcall
mov
inc
add
ljmp
test
pop
pusha
mov
adc
ljmp
xor
mov
xor
add
and
rcll
push
int3
aam
test
and
xlat
xchg
jle
pushl
imul
test
pop
xchg
xchg
les
adc
call
nop
sti
arpl
mov
cmp
xor
lea
sub
call
out
sub
pop
sbb
cld
fstps
or
imul
movsb
xchg
cmpb
decl
loop
addr16
jno
leave
fs
loop
ljmp
cli
jmp
mov
mov
and
mov
popf
loop
cmpsb
add
sub
dec
add
adc
cmp
add
cmpsb
ds
cmpsl
adc
push
pop
loopne
adc
jmp
lcall
mov
clc
les
popa
dec
or
add
jmp
mov
inc
adc
rcll
inc
sub
jmp
ljmp
sbb
mov
rolb
mov
xchg
pop
leave
or
mov
ret
fcomip
call
stos
jnp
insb
sub
adcl
mov
loop
es
movsb
xor
sub
mov
add
jl
decl
sbb
rorl
or
pusha
sbb
pop
mov
pushf
ja
dec
leave
stos
xor
test
inc
inc
cltd
dec
add
and
add
inc
pop
jmp
adc
lret
lcall
inc
imul
cmp
xor
lods
in
repz
addr16
jae
pop
mov
or
jmp
pop
pop
sub
loop
inc
or
sbb
in
mov
push
and
pusha
subb
stos
dec
fs
cmp
sbb
add
push
test
cmpsl
cmp
sub
call
mov
repz
insb
cld
mov
adc
call
xchg
sub
int
je
clc
fsubs
adc
outsl
stc
add
stos
incb
ret
sbb
rcrb
mov
mov
cli
incl
orb
icebp
sbb
inc
cmc
or
jmp
and
sbbb
dec
cmp
pop
xchg
test
cmpsb
das
gs
dec
in
roll
fisubl
xor
mov
push
cld
aam
std
lds
ljmp
cmp
repnz
lds
incl
push
xor
mov
push
dec
sub
adcb
daa
stos
cs
add
pushf
aam
dec
clc
lcall
ljmp
adc
push
jo
daa
xor
xchg
pop
cmpsl
bound
cwtl
or
fists
cld
push
ret
divps
inc
jl
jl
loop
xchg
mov
subb
and
sub
mov
movsb
add
sbb
jb
mov
dec
call
add
insl
cwtl
pusha
and
in
test
mov
xchg
xor
lcall
mov
sub
cli
mov
data16
in
jb
adc
int3
inc
add
pushl
ret
cs
stc
mov
scas
jno
decl
cmpsl
push
pop
sub
push
icebp
xchg
sub
push
lods
xorb
cltd
lods
jg
sub
push
sub
aam
add
pop
push
incl
pop
fwait
jmp
pop
mov
xor
pop
cwtl
inc
xlat
jl
xchg
inc
sbb
xchg
or
fdivr
ljmp
js
mov
ficoms
cmp
adcb
call
add
decl
sbb
incl
push
push
mov
and
add
out
and
int
lcall
ljmp
sar
aam
sar
cltd
and
enter
mov
inc
call
jl
fwait
pop
shlb
mov
out
dec
sub
mov
jmp
adc
inc
sbb
mov
xchg
cmpl
orl
cmp
mov
fwait
call
fbld
push
sub
lods
push
lcall
mov
jle
je
std
int
dec
jnp
lahf
inc
sbb
lea
pop
add
mov
inc
nop
call
and
mov
test
stos
dec
mov
push
mov
mov
mov
outsl
clc
jp
ret
outsl
jmp
and
mov
test
lock
and
fmuls
call
add
xchg
and
call
inc
imul
sbb
scas
cmp
mov
lods
ljmp
pop
pop
or
push
xchg
push
scas
call
mov
jnp
stos
mov
dec
inc
xchg
jmp
push
pusha
rolb
adc
add
shlb
or
xchg
notb
aam
ret
mov
sub
pop
mov
sbb
mov
mov
adc
loop
jg
rol
cmp
data16
test
sub
cltd
lret
inc
add
inc
cltd
ljmp
es
mov
test
clc
stos
push
push
push
pop
adc
inc
inc
cmp
inc
dec
jecxz
inc
adc
jg
mov
add
sub
add
aaa
mov
ret
adc
call
or
sub
addl
js
sbb
decl
xor
pushf
xor
daa
jnp
test
imul
movsl
sti
push
push
in
pushl
in
fadds
inc
scas
xchg
mov
adc
rorl
mov
adc
scas
call
cmp
dec
movsb
and
sbbl
cmc
push
mov
cmp
dec
jl
out
push
mov
out
shll
and
cli
call
aam
sbb
jge
push
je
into
add
pop
push
pop
push
sub
or
sbb
xor
sbbb
aam
mov
adc
dec
sub
sbbb
inc
pop
xchg
jg
sub
popa
lods
loop
xlat
sbb
lods
dec
add
jbe
cli
adc
inc
and
lock
lcall
and
mov
les
pushl
lret
inc
cmp
inc
xor
mov
inc
add
push
mov
xchg
scas
cwtl
sarl
cld
xchg
insl
int
sbb
xchg
in
shlb
mov
jno
addl
rcrl
inc
adc
pop
sbb
mov
incl
les
mov
push
shll
xor
xchg
rol
loopne
push
hlt
lds
call
loopne
insb
rcl
jp
inc
mov
sub
dec
roll
add
push
sub
xchg
call
or
xor
sub
lods
add
pop
rcll
adc
cmpl
and
rcr
pshufw
jmp
cmp
int
dec
inc
push
les
and
movsb
lea
push
add
pop
dec
dec
inc
mov
add
mov
pushf
jae
inc
push
popa
pop
mov
sub
or
inc
xchg
cmp
pushl
cltd
xchg
jmp
xchg
mov
gs
inc
inc
movb
mov
pop
out
cmp
incl
clc
into
out
je
push
fs
adc
push
push
nop
or
ljmp
cld
in
inc
setl
repz
cmc
cltd
dec
mov
xchg
int3
fsts
decl
cmp
lcall
cld
xor
popf
test
pushf
in
lock
dec
lahf
xor
lahf
push
adc
call
add
adc
pop
imull
pop
inc
rcrb
push
test
pop
push
sbbl
call
add
movsb
pushf
push
stos
aam
lods
loope
push
shl
or
movsb
adc
cwtl
cmpb
jmp
mov
add
hlt
inc
bound
inc
sbb
sub
mov
rclb
inc
pop
gs
pop
dec
pop
xorl
add
mov
push
call
push
ljmp
loopne
aad
mov
cmp
mov
movsl
sbb
roll
and
pop
lods
ret
mov
cmp
jmp
pop
aam
pop
fisubs
std
ret
in
sbb
or
lret
test
ficoms
incl
in
pop
addr16
popa
jecxz
inc
sub
out
inc
out
mov
out
ljmp
lea
decl
hlt
add
and
or
add
add
out
clc
ret
xorl
sbb
xchg
mov
add
sbb
push
mov
push
adc
add
fildl
sub
aaa
loope
cmp
outsl
push
push
add
pop
mov
jnp
loop
incl
pop
inc
push
mov
call
js
cmpb
shlb
data16
ja
ret
mov
es
rorb
popa
in
aam
dec
or
pop
call
jl
push
aam
lods
bound
ss
cmp
push
pop
in
push
jl
cltd
aam
dec
and
hlt
decl
leave
sbb
cmpsb
aam
lock
push
mov
loop
mov
jecxz
adc
and
lcall
fs
in
mov
pop
clc
pop
pop
movsl
sbb
cwtl
mov
mov
push
loop
stos
pop
hlt
mov
shlb
jb
mov
or
cmp
push
sbb
ljmp
inc
ljmp
adc
dec
adc
push
mov
push
inc
xchg
dec
or
jbe
imul
inc
mov
push
inc
mov
fcompl
insl
stc
ljmp
dec
aam
scas
rclb
outsb
movsl
dec
in
push
push
push
pop
icebp
ljmp
fsts
jp
push
pushf
orl
repnz
test
lcall
int3
adc
gs
inc
into
pop
and
leave
xchg
int3
leave
add
lret
int3
add
bound
pop
cs
ljmp
pop
out
loop
bound
in
add
int3
and
fisubrs
sbb
jg
filds
pushf
das
aam
ss
inc
mov
sub
inc
mov
roll
pop
std
clc
loope
mov
data16
adc
sbbb
add
ret
sbb
je
ss
sub
es
imul
xchg
call
pop
sar
subb
mov
lods
and
push
and
xchg
sbb
adc
adc
jmp
sar
in
into
in
sbb
test
pop
sbb
sbb
mov
jmp
loop
push
inc
dec
pop
or
jecxz
aam
rolb
insl
iret
in
lea
jmp
mov
cld
sbb
mov
sahf
or
mov
vpmacsdqh
icebp
popf
pop
mov
incl
push
jns
add
test
jo
push
xor
inc
dec
movsl
adc
cli
add
mov
stos
call
scas
dec
movsl
mov
imul
shlb
pop
adc
adc
push
push
rcll
lret
inc
push
or
mov
outsl
inc
pop
sbb
inc
cmp
mov
or
lret
adc
pushl
movsb
or
sbb
or
loopne
dec
into
fldt
push
out
sbb
xchg
mov
ljmp
dec
dec
int3
add
ljmp
les
rolb
and
push
scas
pop
pop
xor
mov
pop
push
dec
cmpsl
into
decl
or
xchg
add
ljmp
test
inc
cmpsl
adc
mov
out
add
call
das
inc
scas
push
dec
scas
hlt
mov
cmc
ss
hlt
push
subb
mov
orb
shl
adc
mov
addb
dec
ffree
sbb
movb
loop
xchg
shlb
xchg
cli
lcall
sub
dec
adc
push
add
jmp
fcompl
push
fstl
scas
in
add
test
mov
pusha
add
mov
add
std
push
dec
lock
arpl
xor
jb
ljmp
lret
mov
inc
aam
jl
add
mov
movsb
enter
xorb
xchg
push
add
dec
xchg
ljmp
pop
cmp
mov
jecxz
js
dec
ljmp
sahf
mov
out
mov
hlt
mov
mov
pop
adc
push
incl
inc
lcall
sbb
mov
and
push
push
sbb
mov
popf
pop
lods
mov
adc
popa
inc
loope
or
lcall
rcll
test
or
fidivrs
lcall
pop
mov
add
xchg
fbld
inc
push
loopne
addb
pusha
call
insl
rorb
sbb
lret
gs
sahf
pusha
push
fcoms
mov
mov
jecxz
out
jno
rcrb
ret
adc
orb
or
sub
stos
movsl
jbe
popa
stos
enter
add
out
jae,pn
adc
leave
push
and
pop
jecxz
rep
ljmp
outsl
shll
jg
push
mov
cmp
lock
mov
pop
idiv
shll
fadd
sbb
adc
mov
sbb
addb
mov
je
add
loope
cmpsb
or
dec
fdivs
inc
add
stos
mov
add
fwait
xor
pop
ljmp
xor
adc
dec
jg
push
adc
dec
enter
test
jp
cmp
or
arpl
les
mov
adc
xchg
js
call
mov
pop
pushf
insb
iret
xchg
fs
fwait
mov
inc
cli
pop
cmp
push
lret
and
mov
adc
repz
iret
push
lahf
movsl
xor
cmc
adc
decl
mov
cltd
fimull
pop
sti
dec
sbb
mov
test
pop
lods
shll
lcall
mov
lods
xor
push
loopne
and
call
jmp
pushf
lods
inc
or
call
ss
inc
sub
dec
movb
lods
loopne
and
or
pop
loopne
sbb
into
mov
or
add
popf
loop
pop
inc
outsb
mov
pusha
push
repnz
scas
out
out
push
into
fwait
sub
test
jmp
mov
shl
les
outsb
jp
repz
rclb
inc
jbe
mov
nop
push
jg
pushl
inc
popa
or
cmpb
mov
scas
xor
mov
popa
sar
das
cli
xor
ljmp
test
xchg
movsb
add
cmpsb
jno
sub
sti
or
sub
jno
hlt
jae
mov
pop
mov
incl
mov
and
addl
fistps
aas
fnstcw
xchg
xchg
roll
js
lock
adc
decl
mov
int
lret
xor
cs
xchg
inc
xchg
orl
idiv
jmp
sub
cld
mov
adc
adc
hlt
les
mov
idivl
jg
fimull
lock
sbb
push
cmp
in
ds
decl
pop
imul
mov
mov
call
nop
icebp
push
sbb
mov
mov
inc
incl
cld
jbe
sbb
movsl
pop
cmpsb
xchg
out
orb
xchg
ret
loopne
call
dec
jl
pusha
fldl
fcmovbe
lods
pop
sbb
jno
bound
les
fldt
mov
jo
inc
or
cld
or
add
ljmp
fwait
inc
sbb
mov
and
popf
jb
inc
outsb
push
fcomp
push
movsb
and
frstor
jno
cmp
movsb
fidivrs
fbld
or
les
push
mov
xor
addb
cltd
mov
cmp
lock
fwait
push
data16
dec
lea
adc
loop
sti
subb
in
and
call
sar
add
pop
das
dec
mov
push
mov
xlat
js
cmp
or
sub
mov
incl
mov
inc
add
ret
cmpb
cmpl
test
out
and
lcall
bound
clc
fdivrl
les
gs
mov
pop
out
in
jmp
jo
add
push
leave
pop
shll
scas
xor
xor
loop
into
call
jno
xchg
sub
dec
scas
addr16
imul
in
out
fsubl
addr16
adc
lcall
jns
bswap
lea
cmp
loopne
cltd
push
xor
fists
int
push
icebp
jecxz
lock
mov
lahf
aas
sahf
lahf
push
jne
aas
or
xchg
add
incl
shlb
test
nop
stc
cmp
mov
sti
gs
mov
mov
mov
sbb
mov
rcll
incl
sub
pop
fsubrs
inc
pushf
mov
inc
and
inc
stos
lcall
in
mov
inc
fmuls
shlb
scas
sbb
pop
mov
mov
lods
icebp
mov
add
jo
mov
aad
mov
outsb
cli
xlat
jmp
cmp
push
pop
xchg
test
fdivs
dec
xor
cmp
imul
dec
jl
add
decl
cmp
dec
adc
mov
adc
adc
std
jecxz
cld
pop
rolb
incl
js
sbb
jp
adc
add
arpl
sbb
push
je
jno
or
and
mov
cmpsb
mov
lds
mov
push
pop
scas
dec
xchg
fadds
or
movsb
dec
inc
jb
lret
xor
and
stc
leave
addr16
mov
mov
xor
xchg
and
jae
push
mov
mov
test
dec
adc
gs
es
cli
movups
sub
addb
or
mov
xchg
jmp
dec
add
imul
mov
and
pop
ds
pop
mov
rolb
xor
push
sahf
sbb
mov
int
daa
mov
adcl
push
mov
inc
pop
in
sbb
push
pop
push
mov
fdivrl
lcall
repz
gs
outsb
pop
mov
pop
lret
outsl
in
xchg
daa
jg
cmp
cmp
jmp
pop
xchg
or
les
jp
loope
lahf
orl
orb
jmp
mov
subl
jle
stc
out
push
sbb
xor
mov
adc
sbbl
seta
and
mov
jecxz
mov
xor
or
clc
sbb
arpl
loope
or
cli
push
mov
mov
or
pushl
jl
lret
push
scas
or
inc
push
insl
jl
sbb
shlb
and
cmp
fildl
andl
nop
add
cmpsl
or
dec
jg
and
sub
xchg
dec
xor
mov
and
dec
sub
ljmp
fiaddl
dec
sub
or
and
ds
es
and
fcoms
mov
add
loope
pop
incl
or
and
dec
and
xor
xchg
adc
ljmp
push
pop
inc
adcl
dec
and
bound
mov
jge
ljmp
pusha
movsl
in
test
xchg
sbb
lods
mov
sub
adc
and
jmp
popa
or
mov
cmp
fidivl
daa
jb
xchg
in
dec
movsl
outsb
push
jg
loop
dec
cmp
push
movsl
push
fdivrs
xlat
xorb
or
pop
ss
add
incl
pop
push
jmp
aaa
pop
jns
sub
stos
mov
push
or
sub
add
incl
lds
cmpsb
andl
mov
sub
xor
call
dec
int3
mov
pusha
into
sbb
out
insb
fisubrl
shll
sub
sbb
sahf
inc
lret
insl
fcomip
add
xchg
insb
in
sub
aaa
popf
mov
test
in
push
jl
in
mov
lods
mov
mov
mov
loope
lcall
ret
nop
ds
loopne
imul
stc
hlt
inc
add
xor
or
lcall
mov
int3
cmp
adc
push
lcall
inc
adc
pusha
xor
push
and
cwtl
sbb
daa
mov
lret
cmp
out
jl
ret
adc
in
jecxz
pusha
pop
mov
inc
sbb
dec
loopne
pop
pop
dec
pusha
sar
mov
or
inc
cltd
ret
cwtl
in
jb
xor
into
jb
loop
pop
cmc
or
jb
lret
and
pushl
mov
daa
std
sti
jg
mov
shll
add
cwtl
arpl
rolb
add
decl
sub
adc
gs
shll
movsl
push
mov
pop
call
push
scas
pop
jp
inc
or
pusha
dec
or
out
test
add
inc
decl
add
jge
add
jmp
aas
add
push
sbb
pop
push
inc
mov
mov
int3
sbb
test
add
ljmp
clc
decl
xchg
outsl
imul
lret
or
push
jmp
jbe
icebp
pop
jnp
adcl
xchg
cmpsb
loopne
push
fs
or
das
ss
orl
sbb
mov
leave
stos
arpl
pop
popa
xor
sbb
push
sbb
out
movsl
call
sub
inc
push
xor
call
dec
addr16
in
into
dec
push
xor
ljmp
int
mov
or
xchg
arpl
push
imul
inc
jmp
popf
pop
imul
roll
ljmp
and
out
in
push
loope
inc
sbb
xchg
daa
insb
push
pop
vmread
xchg
lods
ja
push
mov
jo,pt
iret
push
pop
lock
addb
xor
jle
inc
jns
pusha
ret
out
mov
mov
xor
xchg
sub
inc
xchg
ret
mov
mov
incl
cmp
lods
outsb
jbe
mov
mov
jl
aam
adc
scas
enter
push
xchg
xchg
shlb
imul
lcall
dec
inc
jecxz
inc
mov
andl
lcall
push
xor
push
or
lcall
ljmp
inc
call
xchg
add
adc
cmpsb
jmp
xchg
dec
mov
mov
or
rcrb
incb
dec
sub
pushl
and
lret
add
adc
or
pushl
sbb
and
inc
popa
pop
xor
push
mov
ret
imul
sub
pop
add
dec
cmpsb
mov
adc
incl
js
sbb
xor
sbb
add
call
rclb
ret
pop
xor
sub
jmp
or
enter
mov
xor
add
cmpsb
inc
cmp
push
call
mov
or
iret
pop
lods
mov
es
dec
data16
or
jmp
push
data16
cld
insb
xor
cmp
cmp
int
jno
mov
imulb
mov
outsb
xchg
inc
sbb
inc
cmpsl
mov
dec
pop
mov
mov
scas
jae
ss
pushl
iret
fcmovnb
sti
popf
pushf
ret
jne
paddusw
imul
decl
adc
jb
mov
and
insb
pop
adc
testl
cld
fildll
jmp
loope
inc
out
sbb
mov
fsubl
fadd
outsl
nop
mov
gs
idiv
mov
iret
dec
dec
jp
inc
dec
cmp
sub
cmp
cmc
adc
jmp
imul
lret
movsb
orb
pop
inc
lock
inc
add
orb
test
ljmp
push
push
cwtl
addb
xchg
add
je
xchg
xchg
imul
addl
dec
incl
lea
dec
std
push
or
pop
sub
sub
mov
push
cmp
fxch
movl
idiv
mov
inc
sub
xchg
add
cmp
xchg
sbb
das
mov
decl
mov
cli
rcl
enter
adc
in
and
xchg
orl
sub
dec
lea
xchg
shlb
incl
push
insb
out
cli
pushl
js
cmp
and
cmpl
push
sub
jmp
and
xchg
pop
rcr
xor
mov
mov
in
push
pushl
or
lods
xchg
jne,pn
pop
mov
int
movsl
jne
fstps
rclb
outsl
clc
lcall
mov
aaa
hlt
lods
int
mov
adc
and
inc
aaa
jle
jnp
mov
pushl
std
and
and
mov
aam
aam
or
mov
sub
mov
inc
and
call
mov
xor
popf
pop
mull
xor
push
cmp
jmp
add
ja
add
and
loop
aad
outsl
sub
xchg
cmpsl
bound
sub
pushl
lret
cmp
dec
push
lcall
pop
xor
xor
xchg
cmp
dec
imul
add
and
jle
aas
test
mov
into
jb
mov
stos
cmp
fsub
sbb
and
call
add
push
addb
push
add
xor
dec
test
out
scas
add
push
mov
lds
jnp
xchg
incl
pop
inc
adc
pop
movsb
lods
adc
stos
or
jbe
dec
pop
xor
adc
adc
pushl
cwtl
incb
cmpsb
aaa
adc
lock
sub
rcl
mov
ljmp
arpl
js
les
sbb
cmc
add
es
lea
call
shll
fstl
and
adc
mov
or
fsubl
dec
ljmp
mov
cmp
mov
add
inc
or
or
aam
cmp
and
jecxz
fiaddl
outsb
ljmp
inc
ds
int
fmull
jg
lods
lret
insb
pop
cmpl
xor
es
jg
test
fsubl
cmp
bound
sub
clc
and
outsb
les
cld
jg
cltd
jb
inc
pusha
shrl
int
ret
addb
ljmp
pop
clc
loop
mov
into
inc
lds
or
add
xchg
pop
movsl
adc
lods
adc
subl
or
sbb
dec
and
sbb
pop
lcall
cmpsl
push
mov
stos
cs
and
add
inc
xchg
shlb
or
decl
add
lret
push
mov
out
adc
jg
sub
movsl
add
and
stc
mov
decl
and
or
test
or
and
test
fistl
jo
pop
cmp
out
aam
and
stos
pop
jo
loopne
mov
int3
loopne
scas
movsl
pop
fadds
mov
outsl
divb
dec
rcrl
or
outsl
aam
sub
adc
dec
mov
stos
rcrb
inc
xor
inc
stc
lcall
repz
sbb
loopne
jle
clc
mov
loop
bound
arpl
loop
fwait
add
enter
xor
inc
xor
xorl
loop
decl
xchg
fcoml
push
add
or
mov
out
das
mov
je
lcall
mov
jl
mov
addl
ret
xchg
ret
sarb
shl
push
add
xchg
add
ds
les
cwtl
sub
mulb
add
dec
bnd
and
xor
stos
jmp
pop
adc
push
inc
jmp
popw
popf
jb
jne
adc
leave
leave
popf
jbe
jbe
lock
inc
sahf
xor
pcmpgtb
add
xchg
cmp
loopne
gs
mov
sub
mov
cmp
nop
loopne
mov
jp
sbb
fbld
dec
mov
add
pusha
or
scas
movsb
enter
mov
push
cld
out
out
in
push
dec
xorl
lcall
adc
and
icebp
icebp
mov
test
sub
shl
mov
pop
jl
jg
incl
icebp
lods
lods
movsl
and
outsl
or
lods
cmpb
cmc
inc
add
out
inc
push
cli
lcall
ss
xor
cmp
mov
decl
dec
mov
insl
movaps
sbb
sbb
mov
sub
inc
fsubrs
out
lcall
xrelease
jge
lea
fcomps
sti
or
mov
cli
test
and
outsl
clc
decl
jle
xor
cmp
dec
fcmovnb
fmul
hlt
mov
decl
mov
cmp
xchg
or
mov
cmp
es
test
or
sti
ljmp
enter
sub
dec
push
aas
xor
add
add
ljmp
add
scas
mov
mov
lret
incl
and
das
cli
push
dec
lcall
inc
xor
addb
in
xor
pop
inc
inc
decl
jmp
inc
and
inc
movsl
in
jbe
int3
push
xor
jl
lahf
push
push
dec
jg
ljmp
dec
popl
or
mov
daa
dec
push
js
jb
dec
sub
incl
or
inc
or
add
lcall
inc
das
sti
cmpsl
add
call
ljmp
enter
lods
das
and
lret
mov
mov
and
or
lcall
test
mov
or
inc
mov
and
mov
rcrb
sarb
mov
icebp
dec
call
and
sbb
imulb
pop
jnp
call
jmp
mov
testb
mov
pusha
xorl
bound
ljmp
pushl
sbb
xor
fs
push
dec
ret
xchg
andb
mov
fldt
ljmp
jmp
out
jno
not
and
bnd
cmp
scas
cmp
push
mov
lcall
loop
cmp
ror
add
andl
lcall
ja
inc
loope
jbe
insl
aad
lock
mov
adc
add
mov
pop
and
ljmp
add
cmp
lcall
scas
loopne
ror
in
jno
dec
in
and
mov
xor
out
pushf
jl
add
imul
outsb
call
stos
or
cmpsl
cwtl
lcall
or
in
mov
sub
loope,pt
nop
or
and
push
mov
and
push
gs
je
mov
mov
add
add
and
dec
xchg
ljmp
push
js
das
imul
std
lcall
in
das
or
sub
enter
loopne
or
jg
outsl
mov
lret
adc
push
les
repnz
shlb
add
jg
stos
mov
cmp
jae
ja
xlat
jb
mov
pop
cs
sub
pusha
sub
push
or
add
push
mov
mov
test
push
std
mov
aaa
add
mov
pusha
lret
bound
mov
mov
lea
arpl
push
pop
xchg
divl
in
mov
add
imul
nop
push
imul
mov
int
cli
mov
dec
fisttpl
pop
xlat
lea
dec
dec
in
aas
pop
jmp
pop
ljmp
cmp
aaa
movsb
dec
cmp
sbb
xchg
xchg
xor
pop
xor
fisubl
pusha
sub
push
and
aas
shlb
and
mov
inc
adc
and
inc
inc
jnp
fwait
push
in
inc
mov
jmp
inc
mov
pop
lock
sub
cmp
adc
inc
cli
mov
arpl
inc
pop
jbe
je
and
mov
push
leave
xor
push
jmp
xchg
push
dec
push
sub
pop
in
dec
lods
mov
aam
mov
add
xchg
lods
push
outsl
mov
mov
adcb
sbb
lods
sbb
dec
repz
inc
and
sbb
jg
incl
loop
push
pop
add
inc
xchg
xchg
outsb
cmc
pop
sub
xor
and
dec
push
enter
sub
nop
dec
out
clc
ljmp
adc
xchg
pop
jns
xchg
and
xchg
loope
push
push
and
or
push
xchg
test
test
push
mov
adcl
push
or
incl
and
rcrb
mov
insb
cltd
mov
mov
call
mov
pop
adc
mov
fucomip
cwtl
icebp
mov
mov
xchg
jno
lods
repz
xor
dec
push
cmp
sar
les
sub
add
int
dec
mov
outsl
mov
mov
fcmovnbe
icebp
mov
out
in
lea
in
adc
add
push
dec
and
hlt
fadd
ljmp
inc
test
movsb
rcr
fsub
arpl
fadd
filds
jmp
pcmpeqd
enter
pop
mov
adc
xchg
dec
and
cs
std
jmp
push
add
jmp
movsl
andb
inc
imul
pushl
in
push
in
nop
je
movl
leave
je
pushl
je
movsb
add
shrb
jbe
mov
pushl
cmc
test
call
out
ja
xchg
jns
in
or
add
mov
call
movlps
push
sahf
mov
sbb
bswap
mov
adc
add
mov
push
xchg
out
repnz
cmp
orb
fmuls
mov
push
enter
mov
or
mov
cmp
inc
call
or
cltd
push
xchg
loopne
jmp
lcall
fwait
rclb
push
fsts
scas
aaa
cmp
mov
or
fistpll
push
mov
dec
mov
lret
inc
mov
sti
mov
ljmp
mov
xor
mov
movsb
setnp
incl
ret
sbb
cmp
xor
or
inc
cmp
cmp
xchg
jge
lret
cmp
xchg
fnstcw
ftst
xor
jl
mov
aaa
mov
push
ds
push
jg
sub
add
or
scas
cli
sarb
add
cmp
lds
int3
imul
insl
je
pusha
out
ds
pushl
aam
sbbl
cmp
in
mov
or
and
loop
movsl
aaa
push
or
pusha
jne
mov
pop
repnz
or
lcall
movsb
mov
xor
push
push
out
lcall
mov
cli
push
addl
sub
or
ljmp
mov
add
movsb
mov
xchg
jp
loopne
xchg
adc
jmp
mov
dec
mov
outsl
mov
dec
pusha
or
pop
lret
add
inc
add
cli
stos
pop
cmpsb
push
add
incl
pop
or
xor
sub
test
dec
push
jmp
xchg
mov
es
add
push
lcall
mov
sbb
incl
pop
xorb
pop
int
mov
mov
and
and
rorl
pusha
mov
decl
lock
mov
pop
mov
and
pop
push
pop
pop
fwait
mov
decl
mov
or
xor
mov
inc
stos
scas
mov
or
mov
sti
mov
xchg
inc
pop
decl
mov
das
ret
pop
movsl
int
rcl
cli
pushl
lods
fstpt
dec
ficoml
pop
mov
out
decl
add
adc
or
inc
mov
cmp
jecxz
sub
ds
decl
adcb
and
ret
xchg
add
sbb
fimuls
cld
insl
push
je
cmpsl
push
loope
xor
lcall
inc
sbb
imul
test
sub
jecxz
sbb
xchg
js
inc
inc
push
data16
out
aaa
cld
dec
scas
inc
repnz
arpl
mov
je
jmp
addr16
jle
decl
xlat
loopne,pt
push
lcall
ret
imul
pop
cmp
push
icebp
enter
push
popa
push
pusha
or
lcall
or
jg
xchg
mov
dec
loope
test
into
ud0
lret
and
scas
loope
jecxz
pushl
push
xor
es
dec
mov
add
dec
lock
push
inc
mov
dec
sbb
das
xchg
or
mov
push
pusha
mov
dec
xor
dec
add
sar
pop
add
cmp
push
test
add
ljmp
pop
xor
or
xlat
icebp
or
or
mov
push
call
leave
xchg
lods
jmp
repz
pop
push
pusha
mov
fwait
mov
or
iret
or
int
subl
sub
add
jns
dec
jmp
push
imul
xor
lcall
sbb
fdivs
and
inc
das
xor
or
sbb
jno
jle
jmp
addr16
jge
in
pop
sub
mov
cmc
pop
inc
dec
inc
inc
leave
lahf
sti
das
mov
dec
xchg
lcall
decl
mov
or
rclb
rcrb
sbbb
inc
shrl
jecxz
outsb
add
push
add
xlat
sub
add
clc
dec
cmp
push
mov
cmp
sub
adcb
inc
jmp
scas
add
andb
scas
orb
add
mov
incl
push
stos
add
xor
adc
push
into
sbb
mov
xchg
test
stc
jmp
shll
test
jo
shll
pusha
push
sub
push
mov
xor
xor
xor
enter
xchg
push
mov
jmp
jb
or
insb
cmp
or
cli
cmp
sub
mov
xchg
pusha
push
bound
xor
push
sbb
jmp
pop
xchg
inc
ret
xchg
pop
aas
cld
js
call
jp
ljmp
rorb
pop
call
mov
add
lcall
push
adc
cmpl
and
call
xchg
sub
mov
add
adc
dec
sub
lock
cmp
icebp
sbb
xchg
das
mov
jmp
ret
jl
clc
lock
paddw
call
loopne
hlt
lock
pop
lar
out
jle
mov
or
pushl
xor
pop
add
push
insb
mov
arpl
inc
addr16
or
and
adc
clc
popa
xchg
call
cwtl
sbb
enter
mov
mov
bound
cmp
les
cld
incl
xchg
cmp
sbb
adc
mov
push
dec
pop
and
rcrl
movsl
xchg
dec
ljmp
dec
loop
incl
popf
je
dec
pop
es
push
pop
mov
pushl
stc
out
or
pusha
cmpsl
add
xor
popf
jo
cmp
cmpsl
popf
test
ljmp
mov
fwait
cli
mov
cltd
or
jo
movsl
cmp
movsl
jnp
mov
jmp
sbb
xchg
dec
mov
icebp
sub
mov
add
es
dec
add
adc
decl
cli
shll
insb
or
fs
inc
sbb
xor
inc
and
movsl
insl
lret
inc
in
dec
add
pushl
dec
xor
insl
rolb
xchg
push
inc
inc
xchg
test
imul
shlb
or
lcall
mov
adc
xchg
pop
add
cmp
mov
push
mov
lcall
mov
adc
xchg
pop
jbe
popa
into
pop
imul
repnz
adc
popa
mov
movsl
dec
jg
or
cltd
imul
mov
in
fcompl
jg
pusha
shrb
add
pop
xor
cmpsl
inc
aam
shlb
jne
fcomip
incl
je
and
cmpsl
test
sbb
popa
fimuls
filds
lcall
decl
sub
pop
jnp
out
xlat
dec
cld
stc
push
aaa
addl
push
inc
call
test
nop
adc
mov
into
out
adc
je
andl
and
decl
movsb
lea
clc
fdivl
sbb
daa
add
jae
inc
ja
cltd
jp
mov
shll
je
push
xlat
in
pop
add
xor
jge
adc
jg
jo
push
rcr
call
out
jge
loope
testl
cld
add
add
mov
sub
xchg
test
movsb
cld
decl
fwait
pop
dec
or
mov
jo
add
pop
lods
cmp
fwait
ljmp
xchg
xor
dec
and
idiv
call
addr16
add
dec
mov
loop
xchg
andl
push
mov
adc
decl
and
mov
adc
jmp
inc
sahf
cld
les
mov
das
sub
call
adc
jo
adcl
test
pusha
push
stc
mov
loopne
les
mov
lret
pop
sahf
sbb
push
mov
sbb
xor
pusha
or
jg
push
ds
add
dec
and
lcall
xor
cmp
add
jmp
mov
mov
outsb
and
imul
xchg
ljmp
pop
add
dec
inc
aam
repz
arpl
xchg
insl
pop
insb
fdivl
lcall
js
mov
push
mov
iret
sub
mov
imul
lea
xor
jg
xchg
std
in
rorl
pushl
adc
push
push
xchg
inc
mov
es
dec
in
xor
shlb
icebp
dec
imul
icebp
call
adc
push
xchg
into
or
call
andb
push
dec
shll
sbb
sarl
cwtl
xorb
lods
adc
cmpsl
repz
test
int
push
jbe
push
inc
loopne
xorb
filds
xor
jmp
je
shlb
scas
mov
push
dec
sti
imul
dec
incl
xchg
lods
push
inc
sub
and
jo
test
enter
nop
add
mov
decl
and
mov
jne
xchg
dec
pop
pop
dec
xchg
xchg
loopne
xchg
dec
mov
call
cld
push
aas
out
repnz
push
out
scas
std
call
push
jb
sub
dec
pop
dec
adc
call
mov
bound
sub
shll
xor
jb
or
ret
xchg
push
mov
decl
push
xor
test
add
out
cmpsb
mov
dec
rclb
sbb
data16
decl
repz
sub
dec
mov
outsl
jb
test
mov
mov
cmp
and
ljmp
push
ss
xchg
in
xchg
in
pand
mov
mov
rcr
push
and
in
adc
xor
mov
add
dec
rcrb
stos
in
data16
adc
jle
and
popa
xor
fstps
ror
xlat
jbe
decl
xchg
mov
jg
in
xor
xor
aam
adc
int
jns
in
xor
hlt
out
add
cmpsl
call
adcb
rorb
xor
jl
mov
lcall
mov
aam
stc
cmp
xchg
shld
lahf
test
add
jmp
lcall
nop
push
insl
movsl
ret
daa
xchg
roll
lcall
call
inc
or
xchg
and
xor
add
outsl
cmp
call
lods
ret
incl
pop
es
push
gs
adc
shrl
lcall
cli
imul
jmp
push
cs
loop
movsl
cmp
add
mov
xchg
fbld
push
pop
in
xor
rolb
lcall
loope
pop
repz
test
jle
xor
fldenv
ljmp
adc
sbb
sub
push
xor
jp
xor
mov
cli
test
into
mov
cmc
filds
loope
popa
lock
cmp
mov
mov
std
test
fbld
mov
mov
sbb
loop
lcall
mov
mov
adc
in
cmp
xor
pop
das
sub
sbb
daa
movsb
cs
cwtl
or
jmp
add
and
aad
jae
xchg
data16
cmp
sbb
cmpsl
mov
ret
pop
mov
fimull
jns
jp
lds
mov
adc
incl
call
orl
push
fsubl
movsb
mov
jp
sbb
mov
jne
jge
cli
call
clc
mov
xchg
test
rcrb
xchg
inc
inc
pusha
das
iret
jb
push
shll
add
jg
clc
stos
fcoml
push
cld
test
sbb
into
dec
xchg
pop
mov
mov
js
mov
xchg
dec
and
lds
cmp
mov
xchg
adc
push
dec
sbb
mov
push
xchg
mov
jae
dec
adc
cwtl
xor
insb
and
call
adc
inc
arpl
xor
je
in
clc
jno
imul
sbb
loopne
or
hlt
andb
shr
dec
nop
sahf
outsb
in
push
cwtl
leave
fsubrl
mov
adc
jmp
mov
pop
negb
mov
outsb
rol
adc
push
ss
adc
loop
mov
push
mov
pop
jae
inc
mov
jecxz
mov
add
push
adc
incl
je
jbe
sub
dec
add
out
mov
jb
es
aaa
cld
jmp
dec
stos
dec
adc
dec
daa
sbb
movsb
decl
ret
or
and
decl
jae
pop
cmp
pushaw
hlt
les
add
push
push
bound
mov
push
xchg
andl
lcall
jbe
sbb
jb
sbb
xchg
push
lahf
mov
es
xchg
jmp
bound
cmc
jae
subl
xor
rorl
sub
xor
mov
inc
imul
inc
or
ja
push
inc
inc
sub
loopne
xor
in
repnz
fs
mov
sub
inc
loope
hlt
push
ja
cmpsb
pop
inc
test
dec
adc
outsb
jbe
dec
mov
jb
push
or
adc
xchg
ja
push
pop
inc
push
xchg
push
addr16
xor
jmp
loop
inc
push
add
nop
push
xchg
inc
or
rclb
mov
lahf
adc
cmp
jp
movsl
sbb
cmp
cmc
inc
xor
xor
mov
imul
pop
sbb
mov
pop
ret
xor
insb
dec
sarb
dec
cmc
ss
call
es
negb
pop
add
pop
fdivl
cmc
aaa
andl
push
add
test
cmp
idivl
sub
stc
out
jnp
and
pop
and
repnz
aaa
and
mov
xor
jo
ljmp
in
aam
cld
inc
pusha
imul
ret
rclb
mov
and
mov
leave
lock
push
imul
bound
icebp
decl
inc
nop
adc
cmp
ret
jmp
xchg
sub
sub
push
lock
or
push
push
lock
and
jae
xor
lcall
xor
sub
ret
jae
inc
cmp
jbe
mov
add
mov
incl
inc
fcoms
jl
sub
bound
push
adc
xlat
cli
and
jmp
inc
jno
jge
adc
and
fs
xlat
push
inc
sar
je,pn
inc
gs
pop
leave
lcall
call
mov
pop
mov
gs
jb
je
push
mov
or
incl
xchg
xchg
dec
roll
nop
inc
sub
daa
pusha
or
add
or
call
cmp
dec
cwtl
sub
and
aaa
jecxz
mov
call
sbb
pop
sub
outsl
adc
shrl
pop
xor
mov
mov
and
pop
mov
pop
and
mov
stos
ljmp
mov
dec
jl
mov
push
and
rolb
mov
pop
in
and
fcomip
call
jnp
add
bound
jb
inc
jo
aas
sarb
xchg
sbb
cmp
mov
lret
mov
fsubp
mov
xor
les
xchg
cmp
call
and
pop
cmp
xchg
xor
mov
add
iret
arpl
popa
in
mov
movsl
and
rclb
mov
push
subb
popa
shlb
bound
test
in
ret
ljmp
xchg
bound
or
xor
ljmp
dec
inc
adc
decl
shrb
cmp
push
movsb
adc
fs
xchg
sub
jo
ds
xchg
sbb
dec
and
pop
mov
pop
lds
stos
cmp
xchg
icebp
bound
dec
cli
push
fs
or
pusha
inc
jbe
xchg
jne
xchg
outsl
jne
je
xchg
js
mov
or
jbe
inc
arpl
add
adc
inc
add
pusha
movd
mov
cmpsb
lock
outsb
movb
mov
mov
sarl
adc
pop
mov
inc
lock
call
sub
jnp
sbbl
mov
add
add
cmp
pop
stos
xchg
jnp
inc
lcall
jmp
jl
testb
xor
push
fwait
shl
mov
decl
inc
decl
insl
iret
mov
jl
pop
aam
mov
fdivrs
in
xlat
outsb
pop
out
mov
ret
xlat
in
out
pop
hlt
jmp
inc
jb
fdivl
ret
and
mov
or
jl
add
out
cli
aam
push
dec
jl
cli
xchg
insb
push
addl
sbb
mov
hlt
sub
mov
gs
ret
mov
cs
sbb
pushl
lcall
movsl
mov
lock
lds
mov
push
xor
sub
mov
push
mov
sbb
test
inc
xchg
inc
leave
sub
jmp
pop
jbe
es
mov
jmp
xchg
push
movsl
movsb
nop
push
in
bound
pop
or
bound
sbb
cs
cs
sti
rorl
rclb
movb
movsl
push
test
xor
xchg
xchg
or
or
jno
add
sbb
sbb
fcomip
jg
cmp
gs
pop
sbb
jo
stos
mov
das
adc
jmp
nop
jns
mov
pop
cltd
movsl
test
popa
xor
orl
lcall
mov
pop
mov
add
xor
popa
xor
xchg
cmp
rcrb
icebp
jmp
mov
jo
pop
int
stos
mov
jge
imulb
push
aaa
push
inc
dec
adc
dec
push
jle
nop
and
xchg
and
sub
jle
mov
repz
jg
cli
pop
call
fists
inc
dec
dec
jb
not
dec
push
out
adc
push
jg
pushl
inc
jno
jae
pusha
xchg
pusha
clc
and
adc
daa
xor
pop
repnz
popl
ds
sbbl
cmp
jae
push
repnz
loop
jno
inc
adc
bound
jb
mov
hlt
je
imul
pushl
movsb
mov
adc
push
sbb
fwait
adc
inc
xlat
test
adc
push
xchg
scas
ljmp
xchg
aam
dec
lret
test
cmp
add
shll
insb
pop
mov
daa
mov
sub
fiaddl
js
or
js
daa
mov
lcall
pop
xchg
pop
xor
movsb
add
xor
imul
cwtl
cmc
ljmp
sbb
jae
push
push
add
add
mov
test
xor
mov
jnp
lret
sbb
test
mov
imul
jl
xor
dec
mov
jmp
cmp
cmp
stc
lcall
shll
pop
bound
imul
loopne
aaa
jne
jge
test
add
pushf
fistpll
lock
ljmp
jecxz
cmp
subb
and
jb
in
inc
mov
mov
aam
jg
or
in
pop
mov
jmp
out
lods
in
push
sub
leave
or
scas
mov
lods
or
pushl
sub
cld
jns
addl
orl
popa
sub
xchg
or
xchg
stos
add
sbb
jnp
aas
out
push
sub
push
and
pushl
jecxz
push
cmp
arpl
cmpsb
add
lret
xchg
add
mov
inc
inc
dec
push
add
decl
mov
inc
fmull
adc
xchg
jbe
jbe
xor
mov
add
js
out
loop
sbb
pop
push
mov
pop
mov
cmpsb
icebp
decl
mov
ja
mov
add
lret
xchg
call
xor
ret
xor
add
arpl
fnstcw
insb
pop
jae
mov
mov
fcomip
call
and
leave
inc
sarl
gs
nop
mov
inc
sbb
pushf
jmp
pop
sub
adcl
jp
xchg
jo,pt
jnp
aad
dec
repz
push
insb
pop
arpl
clc
call
xor
stos
aam
mov
dec
int
xchg
outsl
dec
sar
sbb
inc
aad
insl
add
add
jo
jne
aam
pop
ljmp
insb
addb
pusha
fidivl
lea
gs
rcl
imul
mov
je
cmp
call
add
add
pop
xchg
adc
in
mov
fs
pushl
mov
sbb
fidivrl
out
repnz
out
je
jmp
and
jb
les
outsl
add
mov
dec
hlt
inc
jno
or
mov
push
mov
fisubrl
add
cld
xchg
cmpsb
and
shll
das
xchg
out
mov
sub
inc
pop
adc
push
or
inc
fcoms
push
decl
sub
icebp
test
sub
or
sbb
mov
xor
ljmp
decl
cmp
push
inc
adc
mov
inc
adc
imul
pop
pusha
add
mov
or
and
xchg
mov
add
insb
fsts
push
popa
adc
push
mov
push
pop
popa
xor
sbb
loope
rclb
pop
adc
add
pushf
sbb
les
xor
mov
loop
jmp
xor
xor
popa
jnp
test
push
std
call
test
pop
add
pop
pop
xor
ss
jb
mov
sbb
jo
push
out
in
cltd
cmp
jle
cmp
inc
jmp
rclb
sub
rsqrtps
sbb
xchg
arpl
cmp
mov
jg
incl
cs
add
mov
push
add
call
jmp
out
mov
ljmp
sbb
push
adc
adc
sti
dec
sbbb
cmp
mov
aaa
mov
pop
jae
mov
aas
mov
dec
daa
mov
sub
ja
mov
xlat
incl
push
stos
adc
mov
loope
adc
dec
fmulp
adc
add
ljmp
fs
popa
fisttps
mov
popa
adc
mov
or
iret
pop
mov
cmp
clc
dec
mov
out
add
movsl
sub
cmp
mov
push
add
jp
push
pop
pop
inc
pop
testl
jno
and
add
out
pop
xor
dec
mov
mov
cltd
xchg
mov
scas
add
or
sbb
jg
popf
add
mov
sbb
insb
pushf
les
mov
mov
jmp
repnz
lret
leave
icebp
inc
in
pop
sbb
lcall
test
pop
scas
pushf
mov
pushf
ja
or
in
and
outsb
decl
leave
xor
inc
jb
ja
lods
in
call
add
out
stc
add
pusha
pop
pop
lahf
loopne
jno
std
and
std
lcall
mov
fcmove
sbb
dec
daa
fcomi
mov
jmp
fistpl
sub
mov
mov
cmp
mov
push
push
out
mov
xchg
je
xchg
add
and
mov
jmp
mov
mov
sub
and
add
rolb
xchg
inc
dec
and
mov
ljmp
rcr
or
xor
outsb
out
aas
mov
divl
xchg
leave
mov
mov
xchg
xchg
lods
loope
js
sti
inc
mov
js
lods
xchg
mov
push
sar
push
add
out
roll
and
add
mov
nop
sbb
mov
insb
cltd
inc
nop
push
push
mov
jo
rcrl
lcall
loope
cmp
sbb
xchg
xor
imul
out
insl
pop
sahf
push
push
adc
rolb
rorb
cli
inc
inc
adc
incl
mov
sub
test
arpl
xor
pop
loope
mov
inc
pop
call
clc
pop
mov
orl
in
andb
jae
sbb
cmp
lcall
negl
mov
mov
pop
dec
loopne
jp
fsubl
scas
sub
xchg
mov
pop
ss
jg
mov
mov
inc
into
mov
rclb
jecxz
mov
in
or
cli
push
out
popa
les
out
in
pusha
ljmp
mov
jnp
push
repnz
scas
jmp
int3
movsb
outsl
jo
jg
decl
push
cmpsl
negb
jbe
add
hlt
inc
out
fidivl
incl
les
js
fidivrl
cld
lea
fdivr
mov
cmp
mov
inc
cld
clc
out
jecxz
lahf
lahf
sbb
test
lret
cmp
sub
push
popa
sbbl
and
mov
add
nop
and
sub
pop
push
shll
pop
lock
or
dec
jo
cmpsb
inc
mov
sub
in
rorl
jo
mov
push
or
mov
add
pusha
mov
push
or
incl
mov
pusha
xor
xchg
inc
push
push
mov
pop
push
orl
dec
movb
rorb
testb
lret
stos
mov
sub
mov
pushl
lret
stc
cmp
jecxz
sub
loopne
prefetcht2
and
sbb
cmp
incl
cmp
pusha
mov
adc
mov
mov
push
insl
inc
add
cmpsb
and
outsl
decl
xchg
push
popf
jecxz
sbb
xchg
incl
inc
xor
cmp
sub
ljmp
push
sbb
jecxz
decl
rolb
push
pop
movsl
mov
add
pop
test
call
lock
pop
jno
sbb
mov
mov
push
js
test
sub
mov
call
mov
lcall
outsl
push
and
jo
add
mov
clc
jecxz
ljmp
mov
mov
xor
vmaxsd
in
mov
xor
jecxz
lock
stos
adc
sub
sub
mov
lcall
mov
test
fcmove
cs
xchg
xchg
sub
pop
call
cmp
into
sbb
in
xor
jp
lods
mov
dec
jnp
mov
lea
add
or
or
mov
cmp
mov
sub
or
in
imul
fisttpl
in
sti
insl
add
ret
lcall
test
outsb
mov
mov
in
mov
mov
push
xchg
xor
mov
xor
inc
lds
push
push
mov
and
lock
and
xor
push
aaa
decl
adc
and
jge
sbb
adc
arpl
sbb
inc
adc
fdivs
jno
adc
xchg
leavew
inc
loopne
roll
rcl
cmc
int3
sub
es
lds
push
jns
imul
cmp
out
cmp
fildl
int
xor
into
add
jmp
call
cmp
xor
sbb
imul
call
and
inc
in
sbb
push
or
mov
mov
jmp
aam
out
mov
add
push
lcall
pop
xor
add
loopne
push
icebp
lret
loop
lret
push
adc
nop
call
addr16
lret
sbb
rcrl
call
pusha
mov
aad
fcmovb
lcall
dec
and
cli
call
xlat
mov
jmp
mov
fadd
sub
sbb
mov
pop
es
lds
dec
sub
rorl
call
incl
lds
fcomps
jb
lret
xor
dec
lret
cld
ret
out
xor
push
loop
fs
inc
cmp
fisubl
call
push
pop
mov
dec
imul
imul
mov
mov
jne
and
mov
xchg
aam
sahf
jmp
incl
outsb
shl
testb
cmp
adcl
lss
pushl
cld
xor
mov
dec
bound
cwtl
lea
andl
ds
call
pusha
test
leave
xchg
ret
xor
pop
and
and
adc
mov
loope
int
call
mov
inc
jne
or
sbb
pushf
loope
adc
and
jmp
sar
fs
dec
lret
fistl
xchg
test
lret
sub
dec
push
adc
adc
dec
sub
call
add
adc
dec
ret
rolb
sub
pop
lock
push
stc
jecxz
dec
icebp
imull
adc
dec
fcom
push
imul
adc
test
add
jg
and
js
mov
in
sti
push
decb
dec
pop
cwtl
ret
add
add
lods
stos
or
mov
out
jg
push
push
mov
or
hlt
test
ficoml
mov
icebp
jmp
cmp
scas
jl
sub
mov
and
imul
mov
jecxz
xor
fs
mov
xchg
sub
sarb
jae
cwtl
in
xor
jmp
push
xor
scas
adc
repnz
cmpsb
xor
fwait
jo
lcall
ficomps
xchg
xor
fisubrl
sub
dec
inc
xchg
cmp
pop
ja
popf
out
dec
xchg
mov
or
iret
push
sbb
adc
decl
test
mov
or
call
sbbl
pop
rolb
pop
cs
nop
fwait
sbb
clc
jecxz
jmp
inc
fwait
or
adc
pop
cmp
mov
xor
xchg
mov
dec
clc
das
clc
mov
je
mov
cmpsl
and
jle
push
jnp
ljmp
repnz
aad
or
inc
cmpsl
pop
push
sub
ret
sarl
incl
inc
lcall
sbbl
mov
mov
ljmp
inc
je
jbe
adc
mov
clc
int
pop
faddl
incl
test
mov
jp
push
sub
and
adc
into
popa
push
inc
popf
aad
je
aam
sub
test
ljmp
aad
push
lds
adc
dec
xor
lods
xchg
or
aaa
cld
mov
jmp
out
shl
mov
lock
jg
xchg
stos
addl
add
rol
movb
mov
xchg
es
mov
lds
lcall
push
rorl
mov
xchg
sbb
jge
lcall
push
lcall
imul
nop
test
xchg
aad
in
jmp
and
cmpsl
mov
scas
mov
jb
imul
xchg
hlt
movsb
outsb
pop
pushl
lea
iret
xchg
fcoml
outsb
js
mov
mov
push
pushl
aad
scas
lds
jae
test
enter
jl
inc
jnp
mov
mov
js
dec
je
dec
pop
shrl
in
nop
adc
pop
hlt
lcall
loope
mov
insb
and
cmc
test
adc
dec
aad
inc
push
mov
jb
jne
or
cmpsl
in
push
lahf
push
jecxz
jbe
jo
jg
jl
or
cwtl
ret
push
test
ret
bswap
stc
shrb
outsl
les
mov
es
xchg
enter
dec
popf
sub
jne
scas
push
ljmp
mov
xchg
mul
cmp
iret
mov
call
xor
push
fwait
in
push
mov
dec
push
inc
scas
pop
movsb
ljmp
insl
sub
les
sbb
shrl
sub
add
call
sub
in
or
cmp
adc
jmp
and
pop
xor
ret
xor
ljmp
cli
mov
into
push
cmpsb
xor
jl
and
jnp
cmpsb
ss
inc
sbb
imul
mov
lcall
xchg
push
cmp
imul
fxch
push
mov
cld
fisubs
push
aad
jbe
call
ss
sarl
ret
pop
out
neg
decl
fnsave
aam
out
cmp
add
ja
es
and
hlt
xchg
inc
add
jo
addr16
dec
jae
jg
rorl
or
cmpsl
cmpsl
fnstenv
call
test
cmp
xchg
or
int3
dec
jo
jg
and
cmpsl
inc
rolb
xor
cmp
cmpsl
xor
sub
jg
xchg
jmp
xor
faddl
iret
roll
rolb
stos
cmpl
add
fadds
pop
addl
xchg
push
push
cmp
popa
cmp
add
xchg
mov
mov
mov
push
jp
and
daa
pop
cltd
xor
mov
call
je
cs
stos
xor
xchg
je
add
cmpb
push
mov
pushl
inc
mov
cmp
mov
mov
stos
cmp
sbb
lods
sbb
decl
pushl
cs
call
mov
mov
les
cmp
inc
mov
js
jecxz
pop
xchg
mov
fwait
shll
int3
dec
sub
orl
adc
lcall
lods
lods
test
jecxz
and
stc
mov
mov
dec
jmp
push
insl
cmp
xchg
mov
rorb
ljmp
pushl
cld
mov
add
je
add
orl
jp
cld
ret
aas
incl
cmpb
nop
idivb
fs
sar
mov
lret
or
cmpsl
sbb
adc
std
xchg
adc
daa
xlat
jmp
jge
das
or
sub
or
call
jbe
mov
test
rorl
xor
sbb
mov
stos
incb
fmull
fiaddl
test
rolb
jg
or
sbb
jae
push
sbbl
xchg
mov
push
flds
es
test
adc
mov
adc
incl
xor
ud2
mov
mov
adc
mov
pop
int3
jg
dec
mov
xor
sti
or
shll
rcll
mov
stos
mov
xchg
inc
lcall
arpl
dec
jnp
mov
les
mov
mov
push
add
mov
sbb
mov
push
or
pushf
push
pushl
xchg
inc
pop
lods
lea
fwait
loopne
lds
fisttps
cmpsl
mov
push
ds
ljmp
imul
push
mov
inc
loop
fistps
pushl
or
add
mov
push
add
or
incl
hlt
sbb
or
add
inc
push
mov
movsb
xchg
add
adc
popf
xorb
daa
outsb
adc
adc
sbb
or
and
hlt
popf
mov
pop
lock
pop
xor
pushl
cmpsb
lcall
cmp
cmp
stc
sbb
mov
push
dec
sbbb
pushl
pop
adc
add
imul
add
lahf
dec
shrl
mov
lret
xchg
sahf
push
mov
mov
movsl
aam
push
shrb
mov
or
lds
dec
sbb
loopne
lcall
xor
shlb
jg
lcall
dec
cmp
stos
adcl
xchg
cmp
outsl
ljmp
les
jp
rcrl
cmp
mov
dec
inc
int3
xchg
mov
mov
sub
inc
lds
mov
pusha
int3
lcall
mov
int3
dec
fmull
and
mov
inc
int
pop
mov
insb
int
xor
incl
imul
in
jo
push
sbbb
fwait
inc
jb
push
mov
jae
into
ljmp
cs
rclb
dec
add
add
or
dec
jns
cmpsb
ja
adc
nop
add
add
ret
jmp
sbbb
jmp
add
inc
addl
mov
push
or
or
dec
cmp
xor
decl
push
pop
xchg
dec
mov
jmp
inc
nop
push
inc
mov
sahf
ja
rorl
call
mov
mov
push
pop
test
add
push
jo
add
pushf
and
or
dec
aas
call
and
add
and
movb
cmp
adc
cmp
mov
and
dec
jns
adc
sahf
out
stc
xchg
movsb
mov
arpl
add
pop
shlb
cmc
call
je
mov
mov
mov
and
xor
inc
jb
xor
daa
lods
das
cli
decl
mov
sbb
inc
inc
dec
or
dec
adc
sbb
jmp
xor
sub
test
add
call
mov
sbb
inc
int
lods
iret
mov
pop
sbb
int3
mov
push
jmp
add
repz
push
int
and
jo
aaa
pushl
cmc
test
cmc
add
sub
mov
cs
mov
push
call
clc
mov
loopne
arpl
or
stc
mov
icebp
xchg
add
pop
lea
or
jg
mov
enter
cld
inc
cld
dec
cmpsl
pop
iret
out
popf
loop
xchg
loope
sub
push
addb
inc
push
cmp
nop
cmp
xchg
xor
incl
ret
test
xlat
fstpt
mov
jp
vphaddubd
orb
pop
cmp
add
orb
pop
push
adcb
pop
aas
sbb
nop
call
cltd
xchg
subb
add
repz
lods
xchg
sub
fldenv
pop
sub
cmp
or
or
pop
or
add
xchg
adc
lahf
push
mov
or
stos
or
and
pop
fdivl
sti
pop
inc
xor
das
cli
incl
cmp
jns
test
mov
enter
in
xor
cli
cwtl
lcall
lret
les
mov
imul
sbb
sarb
in
call
cli
or
loopne
aad
push
movsl
fstps
push
shl
lcall
in
cltd
mov
fimull
pop
jl
arpl
call
fimull
pusha
cs
mov
sbb
mov
and
ffree
or
enter
jmp
and
test
pop
incl
lcall
xchg
test
in
push
repz
nop
clc
jecxz
fcomip
fnstsw
out
and
sbb
daa
fsubrs
pop
sub
jle
scas
and
sbb
jg
xchg
xchg
add
cmpsb
or
sub
push
je
add
xorb
jnp
mov
xchg
jg
push
ds
push
xorl
xor
cmp
add
add
sub
add
rolb
add
push
sbb
nop
mov
loopne
clc
or
pop
jae
xor
xor
lcall
xor
sbb
jle
xchg
push
scas
cmpl
jecxz
fwait
lods
xor
xchg
add
and
lret
je
mov
incl
xchg
push
loope
add
cmp
test
push
cld
lcall
and
lods
xchg
or
adc
mov
mov
jmp
mov
mov
sbb
push
stos
mov
lds
dec
mov
jg
mov
jl
mov
clc
and
xchg
mov
sbb
decl
pop
inc
movsb
out
adc
lods
sub
mov
push
lds
fcomip
push
mov
lret
repnz
movsl
fwait
mov
cs
mov
and
mov
incl
jge
xchg
orb
loopne
xor
xorl
enter
pushl
arpl
and
add
nop
add
or
push
roll
adc
mov
sbb
add
mov
subb
ljmp
xor
andb
sbb
dec
bound
lock
incl
into
xor
mov
ficoms
xor
and
xchg
outsl
sub
in
xorb
call
outsb
aas
mov
loop
mov
andb
and
sbbl
sub
addr16
jg
mov
pushl
mov
mov
std
adcl
out
fldcw
lret
stos
jg
fwait
mov
mov
xor
mov
xchg
pop
or
mov
mov
call
xchg
and
mov
stos
outsl
clc
and
mov
in
xchg
inc
or
bound
lods
fadds
mov
mov
js
xor
sahf
popf
or
stos
hlt
mov
iret
mov
mov
and
mov
dec
jecxz
shrl
dec
mov
lahf
or
pushl
sub
mov
pop
mov
rorb
jp
imul
mov
in
int
decl
and
in
bnd
lods
rclb
jns
ret
jg
pop
hlt
dec
push
nop
dec
sub
or
and
sub
clc
decl
pop
dec
es
adc
sub
xor
fadds
adc
call
xchg
sbb
inc
enter
pop
lods
popf
add
xor
pop
add
incl
shlb
pop
pop
xchg
scas
and
test
mov
mov
fstsw
sarb
in
ljmp
mov
mov
push
and
push
sbb
pop
or
pusha
shl
pusha
es
xchg
stc
mov
or
pop
sti
fsubr
xchg
cmc
or
lds
push
jne
jbe
arpl
sub
sub
inc
lock
movsb
push
mov
outsb
pop
stos
adc
clc
mov
dec
fs
pop
xor
dec
jmp
hlt
jg
mov
repz
jmp
mov
mov
sbb
mov
inc
pop
mov
decl
cltd
sub
lods
fdivs
and
das
and
sub
test
mov
loope
fldenv
fcmovbe
pop
insb
rcrl
ds
mov
stos
sub
arpl
insl
add
inc
lcall
push
outsl
adc
adc
out
int
pop
int
and
outsb
inc
into
incl
mov
add
adc
pop
cli
repz
pcmpeqb
inc
int3
neg
jp
je
loop
mov
negb
or
add
xchg
insl
jb
mov
arpl
mov
in
je
push
test
push
push
xor
mov
pop
cmpsl
and
hlt
scas
out
popl
cld
cld
jmp
xorl
loope
outsl
pop
loopne
call
addr16
loope
fcomip
outsl
adc
xchg
add
adc
jne
out
stc
out
xorb
pop
mov
jg
testl
add
mov
idivl
roll
iret
stos
add
mov
pushl
scas
jle
or
xor
call
push
icebp
lcall
and
pop
pop
mov
inc
lret
push
ja
add
insl
cmp
mov
mov
lods
test
inc
addr16
jmp
adc
mov
sbb
js
and
sbb
jno
lea
ljmp
sbb
movl
mov
sub
push
or
imul
outsl
dec
pop
xor
or
pop
pop
and
pop
mov
mov
std
call
test
mov
cltd
xor
scas
push
or
sbb
mov
stos
push
pushl
aad
push
sti
es
pop
movsl
push
mov
add
jbe
pop
mov
je
cmovl
je
daa
daa
fcomps
cs
dec
adc
pushf
fwait
add
sbb
cmpsb
dec
lahf
push
mov
scas
pop
dec
jmp
adc
mov
sahf
mov
mov
sub
inc
adcl
addb
scas
fdivr
incl
loope
mov
inc
sahf
jl
lock
mov
jle
inc
jbe
into
mov
xchg
and
pushf
dec
or
enter
call
push
addr16
roll
clc
loopne
push
inc
inc
test
sahf
mov
fistpll
adc
mov
mov
inc
sbb
call
and
sbb
ret
cmp
aam
inc
adc
and
ret
push
decb
sbb
add
adc
dec
xor
movsb
xor
pushl
sbb
lcall
inc
or
or
mov
incl
mov
mov
add
and
ljmp
xchg
add
shll
shr
idivl
xchg
flds
cmpb
andb
pushf
pushl
sub
pusha
or
fwait
insb
jb
es
call
or
dec
xor
ljmp
fisubrl
sbb
cli
test
inc
add
movsb
aad
arpl
sbb
xchg
andb
mov
aam
sahf
mov
popf
rcll
rclb
scas
push
inc
nop
inc
std
jg
or
jmp
insl
mov
dec
es
mov
lods
xchg
push
inc
sub
in
push
and
inc
stos
xchg
mov
leave
inc
enter
pushl
push
push
filds
lds
xchg
pusha
insl
or
pop
pop
pop
sar
in
in
pop
repz
push
mov
pop
outsl
xor
or
mov
mov
sub
mov
push
xor
fsubs
leave
dec
adc
and
lcall
adc
addr16
inc
cmp
push
test
pop
imul
pop
roll
cltd
mov
and
outsb
jo
mov
pop
iret
jns
pop
jo
andb
incl
xor
rorl
jno
je
ret
xor
dec
not
mov
dec
xor
stos
cmpsl
insb
mov
ret
sbb
roll
repnz
gs
adcw
out
cli
test
loop
inc
sub
push
pop
aas
inc
lods
sbbl
add
adc
and
dec
mov
add
jle
lock
incl
xor
lahf
and
push
pop
in
cs
fld
adc
call
pusha
gs
fs
jmp
outsb
push
cmp
ja
filds
pushl
adc
out
fldl
add
cmp
popf
lret
mov
repz
pop
mov
fistps
test
test
lret
data16
pushl
inc
sbb
test
mov
sub
pop
mov
mov
lcall
stos
mov
dec
and
call
xchg
mov
and
dec
mov
movsl
add
ret
add
mov
insb
inc
sub
mov
pusha
dec
push
adc
jmp
add
or
gs
arpl
mov
mov
hlt
inc
pop
bound
mov
icebp
and
pop
fidivl
inc
cli
pushl
dec
test
cmpl
dec
sbb
cmp
mov
lea
cltd
push
mov
int3
data16
pop
and
pop
inc
xor
pushf
or
sub
xor
push
xor
mov
aam
mov
test
pushl
std
push
mov
shrl
cmpsl
add
into
jno
jbe
call
leave
push
je
mov
jp
imul
jo
rolb
call
cld
jmp
inc
cmpsb
clc
mov
dec
jle
test
sub
lods
test
fisubrl
pop
fucomp
push
dec
cmp
adc
and
inc
into
sbb
out
pop
rorl
loopne
sarl
imul
sub
sub
push
in
mov
adc
insl
into
jae
sub
hlt
mov
jne
rcl
xchg
jl
movsl
push
sbb
fistpl
jbe
repnz
jle
mov
decl
sti
adc
test
das
js
sub
ret
aaa
sbb
std
dec
imul
out
daa
push
cmp
mov
ljmp
jmp
dec
push
out
push
xor
and
push
std
push
mov
sub
call
cld
mov
push
xchg
aad
push
and
or
xor
decl
jp
mov
add
xor
stos
dec
push
jns
inc
pushf
push
leave
dec
dec
mov
jmp
pop
xor
adc
mov
sub
xor
jns
icebp
xchg
inc
inc
pop
mov
cwtl
in
jg
mov
lahf
cwtl
xchg
mov
pop
or
rclb
mov
insb
sbb
incl
repnz
jmp
push
sbb
gs
mov
sbb
js
fadd
adc
dec
sbb
outsl
fdiv
dec
es
cmpb
xor
sbb
push
stc
pushf
in
pushl
xchg
shll
pop
xchg
xchg
pop
out
or
cmp
mov
in
imul
mov
les
inc
shl
iret
jl
int
inc
adc
outsl
leave
xorl
fwait
xchg
or
mov
nop
sub
ds
xchg
inc
and
adc
and
adc
outsl
pop
add
test
dec
jbe
cmovs
jg
nop
pop
mov
cmp
aaa
or
pop
bound
jl
mov
incl
dec
test
adc
je
fdivl
adc
out
daa
je
inc
mov
mov
push
pushl
mov
xchg
mov
incl
jnp
pop
dec
cmp
ljmp
and
push
and
fmuls
decl
mov
mov
stos
iret
and
sahf
push
cmpl
decl
scas
add
stos
push
mov
mov
xor
test
push
shlb
sub
out
cli
decl
pop
nop
push
call
idivl
mov
in
shlb
je
or
pop
loopne
inc
lock
or
jns
bound
sbb
dec
push
xor
mov
incl
add
pop
pop
or
add
jbe
fs
and
mov
or
loopne
ret
adc
fcmovbe
ret
sbb
dec
popa
or
add
sbb
mov
sub
xor
cmp
clc
mov
pushf
inc
and
stos
arpl
movsb
inc
lea
cli
push
add
jl
or
dec
and
call
push
xchg
scas
xchg
push
mov
adc
scas
int3
sub
rcrl
xor
or
aaa
testl
test
and
dec
pusha
or
lock
sbb
push
and
jg
clc
loopne
or
sbb
jnp
lcall
mov
fs
push
xchg
dec
js
jl
testb
or
dec
loopne
shlb
dec
mov
and
mov
jmp
adc
aad
inc
mov
mov
sbb
xor
cmp
mov
imul
dec
push
adc
lahf
xchg
cmpsl
sub
adc
iret
movsl
das
inc
xchg
stos
mov
xor
adc
sbb
push
inc
aam
dec
les
lcall
mov
push
jmp
add
or
adc
out
fcoms
int3
ja
int
incl
imul
sub
jmp
xlat
add
pop
push
mov
cltd
pop
push
outsb
call
pushl
std
pop
loopne
test
jg
fisubl
aam
push
cld
inc
pop
test
mov
or
out
mov
cli
rolb
jp
cltd
xor
xor
dec
pop
call
cli
add
shll
pop
ret
xchg
cmp
lret
and
jo
mov
fisubrl
popa
jp
pushl
ret
sbbb
js,pn
adc
lahf
jo
inc
ja
xchg
pusha
xor
dec
shrl
mov
jo
shlb
orl
inc
adc
shll
inc
and
mov
lcall
pushl
out
fwait
xchg
mov
popf
add
cmp
hlt
add
xorl
xor
fisubrs
mov
inc
addl
add
addl
pushf
and
sbbl
sbb
and
ljmp
int3
adc
push
cmpb
mov
nop
call
insb
mov
cmp
fdivr
call
popf
call
xchg
in
mov
sbb
fucomp
inc
popf
repnz
aad
leave
aad
cmp
pushf
jl
pop
sub
mov
add
loope
test
inc
std
add
dec
mov
pop
xor
popf
stc
fs
adc
fmuls
xchg
popf
dec
stos
inc
cltd
dec
in
stos
lock
incl
int3
lret
xchg
bound
mov
ljmp
sahf
push
jno
push
inc
push
dec
mov
add
dec
mov
add
leave
fsts
push
dec
jl
decl
inc
pushf
icebp
cltd
dec
clc
pop
push
cmp
fcoms
pop
mov
mov
lds
or
xchg
inc
pop
add
mov
push
adc
inc
shl
mov
lret
in
in
shl
rcll
sbb
sub
pop
cmp
add
xchg
sarl
call
pushf
add
fadds
pusha
xchg
adc
xchg
imul
cli
or
scas
push
repnz
push
adc
call
or
or
adc
sbbl
outsl
clc
outsl
mov
movsb
add
mov
mov
cli
decl
loopne
sbb
xchg
xchg
clc
pusha
adc
ljmp
pop
insb
inc
or
pop
push
pop
lods
add
fldl
adc
sbb
ret
std
mov
rclb
inc
addb
adc
add
clc
cmpl
add
jg
adc
xchg
cld
dec
fstps
pop
out
mov
jno
adc
cwtl
rclb
mov
clc
mov
bound
and
and
push
cmpl
test
adc
sbb
jns
clc
jl
testl
jmp
aam
dec
leave
dec
dec
ror
mov
add
mov
inc
or
scas
adc
cwtl
dec
mov
mov
shlb
push
mov
les
rorb
shr
sbbl
or
das
sar
sahf
rol
jge
push
call
or
in
mov
xor
pop
mov
cmc
dec
out
mov
in
add
push
mov
mov
or
pusha
lea
mov
inc
or
arpl
jmp
inc
or
ret
or
arpl
lods
insl
xchg
dec
adcb
lcall
inc
push
fwait
jb
push
inc
rclb
rorl
add
adc
inc
jne
in
ljmp
cmp
outsl
and
xlat
insl
inc
pop
jbe
xor
jbe
pop
sarl
jg
sbb
rorb
orb
test
rcrb
bound
leave
xchg
add
decl
dec
xchg
into
sub
push
xor
out
cwtl
or
nop
clc
inc
nop
and
jnp
rcr
push
xchg
lcall
sbb
shlb
call
mov
pop
nop
jmp
int
or
jno
out
mov
mov
and
and
cwtl
jg
data16
test
cmp
cmp
and
mov
call
sub
xchg
xlat
jge
and
loope
ss
inc
pop
mov
cmpsl
sbb
rol
lcall
mov
sbb
pop
fcompl
dec
sbb
iret
es
test
fisttps
les
jl
mov
loope
iret
cld
jo
sub
sahf
scas
push
sahf
sub
lret
jo
cmpsb
das
shlb
lcall
icebp
cs
aad
fidivrl
dec
sbb
call
add
mov
xor
lock
mov
pop
jns
arpl
ljmp
shlb
push
cmp
int3
mov
inc
xor
adc
js
cmp
sub
lods
arpl
orl
xor
negb
ljmp
sbb
call
or
pop
inc
ret
push
push
cmc
rol
incl
adc
sbb
inc
and
iret
js
jne
inc
jno
pop
jo
mov
push
cld
dec
add
or
inc
add
in
pushl
jge
xor
add
inc
sbb
add
shrb
inc
pop
and
aam
mov
vrcpps
mov
in
mov
mov
mov
mov
push
or
push
es
push
cs
imul
mov
scas
clc
incl
in
int
inc
movsl
or
or
jmp
or
sbb
test
call
cld
leave
sahf
cwtl
into
aaa
mov
es
ds
mov
fmuls
cmc
mov
mov
adc
loope
mov
out
out
rcrl
push
into
decl
dec
xchg
xchg
pop
mulb
dec
mov
nop
mov
movsl
mov
mov
scas
adc
sbb
sbb
xchg
adc
mov
lcall
adc
adc
nop
sub
push
mov
push
jecxz
fidivs
mov
add
lcall
fs
cmp
into
pop
mov
jecxz
push
test
sahf
pop
aam
mov
test
mov
cmpsl
pop
in
sub
arpl
push
adc
pop
mov
out
mov
xchg
push
and
push
pop
lds
xchg
lods
mov
and
xor
push
ret
push
add
dec
and
and
out
jp
inc
sbb
cmpl
xor
adc
movsb
lahf
aam
add
nop
lcall
aam
aam
movsl
adc
iret
add
aaa
xchg
cmc
lahf
add
int3
into
jb
into
or
and
jo
inc
xor
rcrl
add
mov
je
add
repnz
sbb
dec
aad
rcr
movsb
sub
pop
sub
push
xchg
xor
cld
push
pop
dec
pop
xchg
movsl
mov
dec
decl
ficompl
adc
sbb
add
sbb
leave
push
pushf
nop
in
sub
shlb
inc
popf
pop
add
cwtl
inc
pop
adc
fcomp
gs
xchg
ds
jecxz
mov
scas
clc
mov
jge
aam
inc
mov
and
ljmp
jb
lcall
push
loop
loope
pop
mov
es
out
in
xor
mov
inc
lret
int
nop
adc
mov
rcll
pushf
pop
push
outsb
imul
dec
jmp
add
sbb
aam
clc
dec
inc
shlb
sub
or
outsl
and
out
sbb
int
fldl
out
xor
dec
pop
aad
jle
pop
or
in
push
incl
adc
fidivl
inc
mov
lds
dec
jl
out
push
or
xor
cmpsb
lds
jae
add
jmp
xchg
jge
mov
sub
inc
and
inc
fbld
decl
dec
mov
int3
add
repz
std
lcall
jo
pusha
insb
xor
push
mov
xor
dec
xor
cld
lret
xchg
dec
push
rol
lods
or
jae
int
mov
enter
push
mov
push
rclb
mov
jg
sub
loope
sahf
pusha
or
xchg
or
pop
sub
sbb
sub
adc
xchg
leave
cli
ljmp
push
lcall
inc
mov
adc
xlat
loopne
push
sub
or
sbb
adc
add
scas
mov
add
movsb
inc
sbb
xchg
xor
sub
push
mov
adc
subl
ss
push
rorb
iret
mov
pushl
ret
jle
data16
inc
dec
out
or
push
test
sub
jmp
mov
or
lcall
popf
xchg
dec
fsts
call
xchg
and
cmp
fimuls
adc
stos
bound
inc
add
scas
and
mov
pop
jno
pop
dec
cmp
dec
or
aam
mov
testl
mov
pop
lock
cmp
dec
movsb
aad
lea
push
hlt
call
mov
adc
jmp
jp
ficoml
stc
nop
mov
arpl
call
icebp
pop
inc
inc
pop
arpl
jo
sub
push
lods
movl
imul
outsb
add
mov
inc
inc
in
or
xchg
push
sbb
pop
adc
loope
adc
mov
push
faddl
dec
pop
loop
inc
mov
ljmp
dec
jmp
lret
rclb
xor
dec
ljmp
mov
xor
jge
dec
xchg
sub
push
push
mov
inc
sub
iret
lcall
ja
add
insb
mov
mov
adc
call
jl
in
imul
pop
icebp
inc
cltd
and
add
ret
push
sub
cmp
clc
fucomi
ret
and
cmp
sbb
inc
loope
or
cmpsl
mov
jmp
xorb
popa
fadds
and
and
jbe
jle
jmp
ljmp
ret
sbb
bound
insl
add
movsb
ljmp
movsb
mov
xlat
ss
int3
lret
shrl
cli
inc
call
stos
loop
mov
test
loope
sbb
inc
push
inc
out
negb
push
mov
inc
mov
lcall
mov
fprem
subb
xor
lds
sahf
pop
mov
cmp
idivl
mov
idivl
pop
hlt
jmp
jne
lock
xor
push
add
lahf
pusha
xor
adc
sbb
shrb
inc
or
test
inc
lock
hlt
inc
ljmp
jl
fiaddl
shrl
mov
xor
in
fbstp
lods
and
lea
lea
add
dec
push
js
orl
push
sbb
ljmp
jne
stc
arpl
ss
hlt
call
cld
jge
cmc
mov
push
push
ljmp
stos
adc
in
xor
sbb
outsl
pusha
enter
shrb
mov
cmp
cli
pushl
xor
dec
hlt
rorb
mov
popf
aaa
jge
push
call
call
cmp
dec
cltd
ucomiss
notb
inc
xor
in
out
jp
xorb
and
add
jo
idiv
jg
test
cmpsl
mov
and
sbb
push
sub
inc
mull
outsb
mov
imul
icebp
es
int
repnz
dec
sbbl
imul
lods
push
mov
les
cmp
pushl
and
les
arpl
pushl
pushf
sub
lds
jns
push
push
mov
sti
sarb
mov
xor
or
mov
or
addr16
push
pop
shrb
pusha
js
jg
sti
pop
jl
add
xchg
jmp
jg
xor
sarl
pop
cmp
iret
xchg
je
rolb
xchg
push
dec
sar
ja
call
inc
dec
adc
nop
pusha
inc
sub
lret
unpckhps
test
call
sub
fadds
push
call
roll
sub
adc
or
decl
sbb
ds
add
push
adcb
je
shlb
cmpsl
pusha
imul
jmp
sub
fst
movsl
lret
sub
xchg
shrb
mov
lcall
les
or
loopne
les
imul
incl
test
mov
popa
movl
pop
shrl
pop
mov
or
dec
mov
dec
jno
ds
lock
mov
fadds
add
push
mov
push
fisttpl
sub
loope
mov
out
xorl
sbb
es
jle
adc
ret
decl
and
fldl
mov
pop
mov
fwait
shrb
xchg
movsb
in
fistps
jl
jnp
sbb
inc
daa
inc
mov
sub
call
pusha
mov
pushl
rcll
scas
aas
push
repz
cmovno
mov
test
ret
les
and
xchg
sbb
xor
sbb
cmp
adc
dec
push
cvtps2pi
nop
inc
mov
or
jg
lds
push
dec
icebp
add
sbb
rolb
sbbl
add
pop
lea
pushl
hlt
sbb
jno
test
bound
ljmp
cld
jmp
sbb
cs
arpl
scas
decl
sub
or
int
roll
lea
mov
or
adc
pushl
rcll
aam
xor
mov
push
xchg
iret
inc
in
jae
cmp
scas
rorl
nop
mov
add
sub
add
ret
aad
jmp
push
mov
andl
push
cmp
cmpsb
cltd
test
test
fwait
jle
call
xor
xorl
inc
mov
xchg
ljmp
fnsave
leave
sub
sahf
xchg
orb
jo
mov
pop
pop
fidivrs
incl
mov
pop
ret
mov
fisubrs
mov
aam
or
pop
jp
and
push
imul
mov
inc
lret
mov
mov
sub
sub
push
jnp
loop
dec
mov
js
cs
ret
xchg
sbb
and
mov
inc
lods
add
pop
xchg
cmp
decl
and
mov
in
mov
mov
xchg
cmp
sub
stos
jnp
push
ljmp
cli
mov
ljmp
mov
data16
iret
mov
in
dec
mov
mov
add
or
ljmp
hlt
mov
or
mov
cmp
ret
sbb
rorl
popl
rcl
push
sbb
xchg
repnz
mov
dec
xchg
dec
and
mov
lret
aam
dec
sbb
and
fists
sub
into
cmp
js
dec
cmp
rcl
mov
dec
repz
aam
dec
flds
in
mov
cmp
fstl
das
lds
repz
in
lahf
aam
dec
test
in
int3
dec
xor
jmp
mov
mov
sub
cmc
xchg
pop
arpl
dec
or
outsb
fprem
pop
xor
movsl
mulb
push
inc
or
or
decl
xchg
inc
sub
shlb
outsl
cli
ja
cwtl
and
mov
push
mov
jb
cld
in
daa
cmp
mov
arpl
lahf
cli
fmuls
imul
leave
push
lods
inc
das
test
or
and
push
jbe
and
loope
pop
xor
scas
in
sbb
mov
andb
loop
jg
addl
xor
jo
bound
push
mov
test
push
std
lcall
insb
xor
push
int3
lods
xor
xorb
mov
lock
xchg
inc
or
incl
jle
pusha
or
subb
sbb
int3
push
fdivs
jns
shll
popf
jmp
xchg
add
xorb
sbb
out
adc
repnz
nop
es
inc
add
jg
test
xor
jo
dec
test
fs
xchg
dec
pop
adc
mov
push
sub
lcall
push
cmp
pop
nop
jbe
add
bound
mov
les
arpl
fdivl
xlat
push
movsl
ss
lcall
loope
inc
fst
xor
dec
mov
mov
outsl
call
dec
dec
push
mov
dec
fdivrs
add
sahf
ret
js
test
add
mov
fcmovbe
into
dec
jbe
shlb
add
incl
jmp
adc
xchg
popa
push
in
test
push
cld
incl
lods
mov
add
adc
xchg
xchg
xchg
iret
and
decl
hlt
dec
and
mov
add
lods
add
enter
mov
addb
dec
lcall
or
dec
outsl
sub
inc
pop
repnz
pop
dec
mov
adc
jecxz
and
or
das
add
shlb
jl
adc
jb
mov
outsb
sbb
xchg
inc
out
addb
add
jle
ds
sub
pop
rcrl
push
in
pop
subb
mov
dec
pusha
rcl
movsl
decl
add
jnp
or
loopne
push
and
push
and
push
jmp
lods
addr16
mov
movsl
xor
pushf
aam
dec
xor
and
pop
cmc
jg
cwtl
icebp
sbb
and
insb
repz
iret
lcall
dec
stc
pop
add
shrl
pop
sub
or
test
mov
adc
outsl
andl
adc
std
xchg
inc
inc
sub
dec
lcall
xor
je
das
aaa
xchg
int3
rclb
jb
es
out
and
ja
paddd
incl
jnp
push
popf
mov
out
lret
jae
jmp
fnstcw
shll
pushf
out
mov
sub
sub
dec
call
inc
jno
mov
idiv
scas
sbb
inc
push
cmp
jo
sbb
mov
insb
ljmp
pushl
ds
add
es
clc
pop
xchg
jp
pop
sub
inc
mov
test
push
jmp
cmp
add
dec
and
imul
imul
loopne
pop
add
xchg
ljmp
mov
test
push
jmp
or
jbe
mov
xor
jo
jmp
lock
mov
les
xchg
sub
shlb
sub
ljmp
mov
outsb
mov
inc
add
lods
sbb
sbb
pushl
aam
aam
sbbb
dec
ja
add
pop
pop
loopne
cmp
ljmp
movsl
push
sub
mov
fwait
sub
lods
mov
imul
push
or
decl
mov
xor
adc
insl
or
adc
int
sub
les
push
cmp
and
xlat
adcl
outsb
inc
lcall
daa
xor
mov
pop
dec
lods
push
inc
xchg
mov
cmp
jbe
cltd
repnz
out
out
ljmp
jo
jmp
jmp
imul
xchg
out
andb
inc
lea
sahf
decl
or
shr
and
cmpsl
fwait
outsb
inc
popa
fnstsw
leave
jbe
and
add
jnp
mov
ss
loopne
es
push
xchg
jmp
jno
or
sbbl
orb
mov
and
cld
sbb
jg
cmc
decl
cli
pop
std
cli
inc
fs
mov
or
loopne
inc
jl
aas
cmp
dec
mov
dec
test
xor
into
ljmp
in
push
leave
int3
or
xor
or
jb
mov
jbe
mov
mov
jmp
bt
mov
adc
push
fadd
data16
pop
mov
dec
scas
call
sub
ljmp
mov
aam
inc
dec
jno
stos
mov
mov
mov
loopne
ljmp
jmp
cmp
out
les
mov
sbb
mov
lods
or
xchg
dec
roll
loopne
sti
pop
shrb
ljmp
xchg
mov
aad
xchg
pop
mov
jmp
cs
xchg
stos
fdivrl
ss
dec
xchg
pushf
xchg
mov
incl
cld
ljmp
ljmp
fildl
cld
jne
add
ljmp
ljmp
cmpsl
or
push
add
push
out
add
push
adc
ret
ja
dec
dec
aam
inc
jmp
movsb
ret
push
dec
mov
clc
call
mov
push
mov
pusha
push
loop
pop
into
movsb
pusha
vsubss
int3
and
fcomip
jmp
sub
jle
js
add
inc
and
ljmp
lds
and
cmp
repz
pop
pushf
or
or
sub
ljmp
dec
in
scas
mov
int3
inc
lods
add
ret
enter
inc
pop
in
xchg
sbb
inc
inc
adc
or
add
mov
bound
test
aam
pop
sub
xor
mov
repz
mov
ret
icebp
pop
dec
fcomip
dec
inc
push
xor
push
ret
aaa
xor
repnz
hlt
cmp
imul
cmp
adc
mov
nop
or
test
mov
imul
ljmp
inc
push
leave
xchg
xchg
clc
ret
adc
push
and
inc
mov
or
insb
leave
inc
sbb
inc
nop
inc
inc
mov
jb
out
push
dec
nop
adc
ljmp
dec
pop
movsb
std
or
dec
and
repnz
mov
cld
lret
pushf
mov
xchg
das
sarb
add
popf
out
sub
movsb
push
rorb
testl
add
test
shl
call
push
mov
inc
dec
push
pop
mov
repnz
loopne
jo
add
inc
lcall
enter
out
push
xor
stos
and
push
mov
mov
cmpb
inc
mov
test
test
enter
add
es
sub
rorb
lret
lods
int3
inc
dec
mov
ret
out
test
sbb
mov
adc
push
jp
mov
fisttpl
mov
test
lock
jl
hlt
or
loopne
mov
ljmp
mov
rcll
lock
adc
in
lcall
mov
adc
mov
add
int
mov
push
lock
ljmp
xor
and
cmp
call
add
aad
mov
in
adc
loopne
lods
out
jo
aaa
mov
push
jo
idivl
imul
incl
mov
inc
es
fsubs
decl
push
aaa
dec
push
push
mov
lods
and
cli
mov
xchg
clc
xchg
pop
fsubl
movsb
sbb
aaa
cld
in
incl
addr16
lret
jp
mov
mov
shl
sub
pushl
cld
dec
nop
insl
cld
iret
loopne
mov
icebp
scas
addr16
std
sub
xchg
mov
cld
push
push
repnz
loope
imul
cmp
mov
or
push
ret
ljmp
orb
add
inc
push
xchg
addl
jae
out
incl
and
aas
pop
loop
sub
or
xchg
cmpsb
add
call
rcrb
jle
decl
and
lods
sbbb
ljmp
cmp
hlt
incl
cwtl
mov
mov
in
movsb
xor
sub
ret
mov
lods
xchg
xor
pop
mov
push
loop
sbb
sbb
dec
cs
push
lret
jl
das
and
inc
cld
add
adc
rol
pminsw
int
hlt
or
sub
mov
out
jo
and
clc
sub
dec
xor
lds
pop
dec
nop
or
das
jp
ds
icebp
ljmp
mov
ficoms
lock
bound
mov
xlat
jbe
fsubs
add
and
pushl
push
mov
les
xchg
in
adc
inc
inc
insb
jno
hlt
lcall
mov
sbb
pop
mov
out
xchg
jp
xchg
dec
add
push
inc
into
int
jp
pop
cwtl
fs
fstl
dec
cwtl
and
in
insl
mov
nop
pushl
shlb
ja
cmpsl
ja
mov
and
addr16
decl
sbb
jns
or
fists
pushf
clc
push
out
xchg
pop
stc
xchg
ret
dec
xor
adc
jge
cmp
pusha
subb
add
xchg
and
test
or
push
aam
and
adc
movsb
ljmp
fimuls
push
call
and
ljmp
push
into
outsb
mov
sbb
push
mov
adc
call
push
call
cmp
inc
jg
lret
xchg
push
xchg
mov
push
aam
xchg
jo
scas
loop
scas
cli
pushl
and
adc
sahf
push
lods
inc
xchg
sub
pop
out
pop
mov
incl
inc
pop
or
jo
push
and
lcall
pusha
mov
mov
or
add
or
das
xor
xor
mov
mov
incl
dec
aas
or
sub
pmaddwd
decl
aad
test
sbb
xor
push
mulb
push
cmp
lods
xchg
add
xor
aas
push
jmp
incl
mov
mov
lea
push
ja
cmc
mov
call
scas
pusha
adc
outsl
pop
add
mov
push
jnp
inc
mov
aaa
imul
ds
lcall
std
ljmp
jb
jp
outsl
push
lock
fs
push
aam
sbb
push
sahf
xchg
sbb
adc
lcall
jbe
mulps
cmp
outsb
and
ds
cmp
in
xor
lret
xorl
enter
xor
lcall
xlat
pusha
push
push
push
mov
jmp
enter
sbb
and
mov
sbb
ljmp
add
or
call
shlb
into
inc
loope
bound
mov
scas
outsl
call
and
inc
push
cs
inc
stos
inc
inc
sbb
rorb
mov
sub
adc
nop
sub
add
int3
popa
or
movsl
int
rcrb
rcrl
rorb
pop
pusha
add
ds
mov
push
cmovg
xor
lock
mov
sub
pushl
ss
sbb
push
push
add
adc
adc
xor
es
call
nop
data16
push
xchg
je
divl
or
outsb
add
incl
pop
ficompl
add
xor
push
pop
and
test
jo
cmp
jmp
sub
mov
inc
jl
mov
scas
fcomip
int
adc
cmpsl
mov
inc
sarl
xlat
mov
lcall
test
in
repnz
jecxz
pop
sbb
pop
aas
push
jns
xchg
push
xchg
incl
dec
fsubrl
mov
pop
jne
pop
sti
icebp
pop
fwait
dec
mov
in
mov
inc
sbb
hlt
push
loope
les
div
jns
xor
jg
push
push
xor
sbb
pop
jmp
and
inc
subl
dec
mov
cmc
daa
and
inc
and
pop
push
pop
lret
ljmp
enter
sbb
aaa
sub
daa
rorl
and
lahf
add
rorb
fcomip
sub
incl
sub
add
mov
rclb
push
enter
jg
bound
or
std
mov
cld
inc
pop
push
jecxz
cs
adc
jg
or
pop
jo
cld
fisubrs
cmp
mov
call
inc
sysenter
out
mov
addr16
dec
test
push
xor
jae
inc
jmp
decl
cmp
xchg
mov
iret
push
mov
lods
inc
xchg
clc
push
mov
mov
ljmp
mov
fnstenv
clc
push
xchg
mov
call
setbe
push
inc
inc
inc
sbbb
les
outsb
je
cmc
pushl
in
and
mov
mov
out
jae
adc
scas
cmp
int
xchg
lcall
ja
test
cmc
jne
js
imul
lahf
ljmp
push
dec
mov
ret
jae
mov
sar
loop
jo
std
mov
cmp
cld
jg
pushl
roll
adcb
inc
scas
dec
push
jmp
les
test
pop
rcrb
inc
xor
fistl
call
arpl
and
stos
movsl
stos
xor
push
leave
mov
fwait
cs
loop
jg
xchg
bound
icebp
sub
jmp
rclb
fwait
test
add
push
movsb
adc
out
aam
sub
rolb
sub
loopne
aaa
cld
mov
negb
sub
xchg
sbb
and
and
jmp
jno
insl
rorb
fisttpl
cmpsb
sbb
movsl
mov
ljmp
rolb
push
xor
add
js
xchg
jle
sar
fcomip
sbb
xor
cmp
mov
mov
aas
icebp
sets
xchg
sub
imul
xchg
and
mov
push
lahf
dec
inc
fsub
mov
or
sub
cwtl
jp
inc
in
das
and
xor
jnp
xchg
inc
int3
insl
mov
sbb
inc
mov
dec
es
push
xchg
lods
aaa
inc
xchg
data16
rorl
aaa
cld
cmp
mov
movsl
dec
inc
mov
add
push
mov
jne
test
inc
std
incl
push
jmp
ret
cld
lods
jg
addr16
push
enter
movsl
xchg
add
pop
mov
cmp
jl
mov
push
or
xchg
lret
xor
xlat
cmc
mov
shr
ret
call
push
mov
pushf
into
pop
divb
cwtl
das
inc
cmpsl
inc
mov
adc
call
popa
lcall
les
fsubrs
bound
lea
incl
or
orl
arpl
int
add
sarb
dec
pushfw
pop
jmp
sub
rcrb
addb
adc
pusha
mov
inc
mov
pusha
or
dec
clc
inc
lods
int3
ret
lret
mov
lods
cmp
data16
push
lcall
xchg
jge
arpl
das
fsubl
dec
pop
pop
push
das
js
ds
xchg
push
fdivp
loopne
mov
popa
pusha
and
addr16
push
pop
mov
xchg
or
sub
mov
pushl
insl
sbb
data16
outsb
xor
push
or
add
insl
mov
mov
or
je
dec
push
fisubrs
cltd
pushf
cltd
aam
lods
shll
out
int3
push
ljmp
pop
js
cmp
fwait
adc
xchg
jno
mov
js
fbstp
mov
sub
mulb
lock
jmp
dec
ret
mov
pop
jl
add
mov
incl
and
mov
mov
insb
xor
lahf
add
or
cmovbe
sub
cld
push
daa
leave
andb
jne
imul
mov
leave
push
sar
decl
and
lea
xlat
jge
dec
addl
xchg
fildll
pop
je
pushf
adc
inc
inc
sub
int3
inc
or
decl
out
fcmove
dec
ret
stos
add
rorl
loopne
mov
mov
data16
mov
pop
push
hlt
incl
sub
andl
cli
shlb
data16
xor
scas
add
out
popf
rcll
xchg
cmp
mov
mov
loopne
cli
fbld
jl
rcll
fidivs
les
leave
dec
add
decl
lcall
mov
sbb
mov
push
cwtl
inc
sbb
icebp
dec
popa
lea
and
and
popa
pop
incl
sbb
and
cwtl
lret
sbb
pop
jl
in
push
pop
mov
mov
push
arpl
mov
das
lcall
outsl
pop
je
repz
incl
mov
cmpsl
xchg
add
loopne
call
push
lds
cmp
ljmp
incl
sub
sahf
cs
cs
push
push
sub
mov
cmp
inc
push
incl
loope
xchg
or
ret
andl
stos
movsb
das
xchg
inc
xchg
inc
xchg
inc
leave
movsb
clc
nop
push
xchg
arpl
int3
jns
or
xchg
aas
jg
incl
and
add
subb
shll
in
imul
add
cmpsb
popa
ja
data16
call
inc
sbb
pop
imul
fdivrl
sbb
or
mov
sbb
mov
clc
stos
xchg
cltd
mov
xchg
xor
loop
mov
dec
pop
push
aas
out
jnp
call
add
pop
daa
inc
push
movsb
jns
push
in
mov
shlb
xor
add
rclb
and
cmp
into
add
into
fldenv
sbb
push
fcomp
addl
jbe
mov
call
scas
mov
adc
add
scas
shl
sbbb
and
adc
sub
outsl
decl
and
push
sub
jp
inc
cmp
sbb
pop
adc
cwtl
cmp
jmp
adc
pushaw
imul
sub
pop
cwtl
popa
stc
pop
cltd
data16
xlat
sahf
ja
rcr
adc
lcall
es
cld
icebp
pop
mov
xor
xor
leave
inc
arpl
pushl
fisubl
or
rcll
icebp
sub
mov
dec
movsb
and
sbb
scas
cli
jmp
cmp
inc
jo
adc
add
pushl
and
scas
mov
or
psubsw
je
dec
sbb
lea
dec
sbb
insl
dec
adc
xor
dec
xor
cmp
ds
and
add
pushl
xor
lds
push
push
mov
mov
pop
repz
mov
inc
lock
add
mov
decl
adc
rcrl
mov
jo
mov
lea
sbb
call
insb
cmpsb
pop
sub
push
xchg
jbe
lret
mov
mov
test
cmp
add
cld
in
jae
sbb
ror
inc
adc
rolb
fmul
sarl
negl
and
jo
incl
sbbb
lahf
fsubr
lea
jge
in
pop
arpl
test
mov
mov
dec
cmp
mov
jle
scas
cmpl
push
xchg
adc
xorl
popa
adc
sti
addl
faddl
icebp
pop
add
cs
call
sub
imul
and
inc
pop
push
inc
scas
sahf
sahf
js
mov
xor
pop
call
cmc
cwtl
pushf
arpl
aam
jb
stc
out
jae
cmc
mov
jmp
insb
pop
mov
jb
mov
movsb
mov
negl
inc
sbb
lods
mov
scas
sahf
lcall
stos
jmp
leave
loopne
lcall
scas
lds
or
test
aad
and
lods
add
loop
mov
xor
into
shrb
lods
or
dec
mov
sub
sub
orb
mov
lock
jmp
push
xor
test
int3
sbb
pop
jbe
xchg
jl
jmp
popa
add
sbb
mov
jnp
dec
ret
call
call
adc
fsubl
sub
cmp
stc
pop
sbb
fs
mov
inc
inc
rorb
lcall
cmpsl
cmp
jmp
pushl
jae
cmpsb
add
fnstenv
xchg
leave
push
add
out
shrb
outsl
pushl
jo
incb
insb
bound
add
xor
in
push
sbb
push
les
or
decl
adc
jge
inc
jo
pop
popf
or
mov
mov
push
mov
mov
push
rcrb
clc
inc
inc
or
pop
mov
add
xor
decl
repz
xchg
lcall
push
xchg
xorb
and
nop
daa
ss
pushl
jp
adc
lret
mov
pause
push
js
push
adc
mov
outsl
jns
lcall
lcall
push
mov
mov
pop
stos
jl
fiaddl
call
dec
push
in
fildl
test
lds
pop
cmp
subb
push
pop
cltd
sub
loop
decl
ret
ljmp
sbb
xchg
mov
sbb
add
ret
jns
jg
jmp
lcall
dec
loopne
cmp
rcrl
jg
inc
in
test
sahf
mulb
mov
push
stos
sbb
rorl
mov
lock
dec
mov
out
cli
adc
or
hlt
lock
mov
add
jg
cwtl
or
jae,pt
xor
push
jno
jo
int3
pop
roll
mov
xor
sbbl
fdivp
jmp
jo
popa
xor
pop
xchg
sub
out
ljmp
sti
subb
adc
aaa
sti
jg
decl
int
pusha
mov
sbb
dec
es
xchg
push
push
aaa
lds
inc
lcall
std
jno
rcrb
add
dec
xchg
jo
dec
fxch
repnz
jmp
adc
add
sub
mov
jmp
inc
adc
inc
pop
shrb
decl
adc
jae
push
cltd
enter
lcall
loopne
push
sbb
fisubrl
es
imul
les
in
jmp
call
mov
notl
test
aam
adc
mov
xchg
lcall
pushl
in
mov
notb
xchg
out
jle
push
xchg
outsl
mov
incl
add
dec
adc
les
add
adc
orl
aad
xchg
les
push
inc
pop
stos
adc
pop
ret
mov
and
cmp
mov
popf
movsb
fs
fcomip
jns
dec
xchg
push
xor
and
cmp
jle
xchg
mov
gs
mov
cli
fwait
mov
insl
inc
clc
push
mov
in
ljmp
rolb
mov
inc
add
imul
lret
dec
loope
sub
jmp
gs
cltd
int
loopne
push
rolb
and
loop
mov
jmp
or
push
jno
pop
sahf
add
fcmove
xchg
cmpl
outsl
cmp
push
pop
call
sub
cli
pop
xchg
inc
lods
lret
out
fstl
fsincos
nop
sub
sahf
daa
mov
push
sti
daa
cmp
mov
push
lret
mov
orl
inc
adc
fisubl
push
xchg
daa
pop
sbb
adc
xorl
add
pop
out
jb
fistpl
fsubs
or
mov
mov
and
int3
xor
sub
and
xlat
movsb
add
sub
pushl
xchg
mov
fisttpll
xor
sti
ja
cli
popf
fwait
addb
or
mov
or
jmp
or
cmpsl
movsb
mov
aam
pushf
mov
stos
mov
inc
dec
mov
fdivl
mov
das
sbb
outsb
mov
xor
pushl
xchg
add
sbbb
enter
push
call
jne
mov
mov
cmp
ret
add
and
push
xlat
rclb
jmp
mov
xor
push
cmp
popa
repnz
dec
xor
data16
cmp
lahf
cltd
in
pop
fiadds
push
mov
adc
dec
mov
pushf
mull
std
sub
into
xchg
inc
xor
xchg
mov
clc
mov
fsubrl
mov
gs
fmuls
mov
call
add
imul
fwait
sahf
mov
decl
adc
pop
push
fs
mov
mov
fsubl
dec
adc
cli
adc
xor
popa
sbb
mov
fdivrl
push
pop
xchg
pop
pusha
and
out
add
jg
jg
pushl
jne
add
push
aad
ss
push
loopne
fidivrs
outsl
and
cmpl
push
xchg
dec
and
dec
filds
incl
out
cmc
cmp
aad
mov
es
cmp
repnz
out
add
insb
push
or
fistl
pusha
or
ds
in
ljmp
jmp
add
mov
lahf
adcb
jb
push
or
push
lods
add
repz
ja
aam
push
inc
add
push
pop
mov
xchg
aas
sub
ljmp
xchg
and
pop
adc
inc
adc
mov
sbb
inc
cmp
je
mov
je
adc
shll
jns
cmp
aad
rcl
mov
cmp
test
gs
cmp
jbe
in
outsl
or
cmp
jbe
fdivs
dec
cmp
pushl
insb
adc
pusha
add
addr16
xor
pusha
add
jo
push
sbb
push
popa
loope
loopne
xor
fisubrs
add
add
fidivrl
imul
enter
into
int
sbb
xchg
sbb
sbb
rolb
push
leave
mov
inc
imul
mov
mov
jnp
mov
enter
push
xor
int3
pop
dec
into
pop
pop
ffree
jl
mov
mov
and
push
and
dec
mov
jmp
sub
aad
scas
mov
adc
sbb
outsb
sub
add
push
inc
xor
aam
movsl
adc
add
pop
and
adc
jg
jo
andb
sbb
iret
add
shrl
xchg
es
jg
cmp
push
addps
adc
xchg
ret
scas
xor
test
xor
or
sub
bound
ds
jg
push
sub
popf
add
test
push
cmpl
inc
mov
or
call
dec
enter
push
es
je
add
sub
shll
adc
xor
incl
pop
nop
jne
adc
test
xchg
cmc
push
pop
test
pop
lock
dec
add
test
jg
fsts
xchg
shl
xchg
lret
mov
push
das
clc
jg
je
xchg
jno
cwtl
outsl
cwtl
add
mov
add
decl
test
mov
add
mov
sbb
xchg
add
call
cmpsl
shll
nop
jns
mov
pop
in
jecxz,pn
sub
sbb
loope
add
popa
pop
xor
push
mov
pop
iret
inc
ja
stos
insb
out
inc
push
loop
or
mov
pushl
rorl
pushf
xor
mov
jnp
popw
mulb
push
jg
ljmp
test
ja
push
jo
leave
addr16
aad
lea
sbb
inc
xchg
add
sbb
cmc
xor
mov
mov
xchg
and
cli
inc
test
out
add
sbb
inc
and
loopne
lcall
jmp
or
dec
or
scas
and
and
mov
and
push
cmp
adcb
pop
jmp
dec
or
es
fnsave
push
lock
adc
sub
daa
mov
call
or
daa
repnz
xor
mov
xchg
mov
incl
or
call
xor
push
push
xor
movups
mov
mov
cmp
and
shll
xchg
push
cltd
pushl
rclb
inc
adc
inc
push
hlt
inc
dec
test
jmp
xchg
or
mov
imul
or
xchg
in
cmpsl
dec
push
sbb
xchg
jo
push
jno
cmpsl
jp
adc
xchg
push
xchg
jne
cmpsl
pushl
xchg
test
jle
xchg
and
fisubrl
lock
xor
push
jb
loope
aad
cwtl
jp
push
enter
sbb
or
push
cld
mov
cmp
inc
ja
jns
and
push
xchg
loope
fwait
inc
mov
xor
add
movsl
xor
mov
jns
pop
subl
xor
cltd
xor
lcall
xchg
and
push
xor
sarb
in
enter
cmpl
in
cmp
fmuls
fisttpl
add
add
dec
dec
add
dec
bound
sbb
push
std
pop
std
push
rolb
in
sub
mov
inc
and
jp
push
and
ljmp
adc
jl
push
and
dec
push
xor
or
or
mov
int3
cmpsl
jl
out
and
mov
pop
and
adc
sbb
add
sti
pushl
jnp
mov
jp
or
ret
push
mov
aam
ljmp
xchg
and
loope
xchg
jecxz
dec
sub
jnp
sub
push
jecxz
or
push
in
sub
aas
and
adc
bound
cmp
movsb
add
into
repnz
adc
adc
and
inc
xchg
out
jmp
push
inc
xchg
sub
sti
mov
cli
mov
add
jne
add
stos
mov
incl
inc
stos
cmpsb
jb
cmpsb
outsl
ljmp
cmpsb
jae
aaa
push
cmpsl
cmp
ljmp
jo
xchg
test
test
cmp
outsl
sarb
mov
pop
jge
mov
dec
lock
jmp
cs
inc
jl
cwtl
jns
pop
sar
pop
je
inc
jo
pop
inc
loop
jg
imul
sub
or
cmp
sbb
imul
sub
jns
outsb
xor
pop
shll
cmpsl
aaa
lods
ret
rorl
lock
ljmp
inc
sbb
adc
mov
sbb
sbb
ret
decl
dec
data16
jecxz
mov
pop
push
xor
ss
loop
mov
mov
add
ds
cmpsb
fiaddl
inc
popa
stos
inc
jg
call
sahf
or
movsb
sbb
std
stos
add
mov
add
ljmp
sti
and
insb
pop
add
add
xchg
imul
aam
and
test
cmp
mov
push
cmp
pop
add
mov
jo
sub
ss
mov
push
sbb
insb
pop
add
scas
test
pusha
fdivs
lea
ds
les
divb
lock
add
icebp
xor
sub
sub
ljmp
adc
jb
add
adc
jmp
sub
dec
adc
add
adc
dec
aaa
cld
ljmp
pop
ljmp
arpl
adc
xor
adc
shll
pop
pop
and
ljmp
add
addb
jo
ljmp
enter
mov
insb
enter
mov
leave
xchg
sbb
xchg
sbb
xchg
insb
leave
cltd
mov
dec
and
cmp
mov
int3
pop
dec
jo
cmpsl
faddl
adc
add
addb
pushl
pop
lock
lret
mov
xchg
sti
enter
outsb
jno
test
movsb
lret
adc
adc
push
in
hlt
rorl
mov
push
fisubl
pushf
test
mov
mov
stos
jg
add
inc
jg
imul
push
mov
jo
movsl
clc
xor
pop
mov
sbb
arpl
mov
mov
cli
add
lods
call
imul
xchg
in
add
mov
std
cmp
jnp
test
aaa
mov
bound
fiaddl
nop
mov
push
push
lods
xchg
add
mov
pop
cld
mov
sti
jge
fdivrl
pushf
push
add
enter
and
in
ljmp
incl
mov
rorl
outsl
cmp
jmp
add
imul
jmp
pushl
sti
pop
or
daa
int
pop
ss
ret
and
aad
cmc
mov
inc
mov
insb
mov
push
dec
pop
lcall
cli
mov
add
xchg
mov
sub
ds
ljmp
pushl
jmp
xchg
mov
xchg
pop
jl
ret
rol
dec
mov
or
loope
push
and
incl
aas
out
fdivs
popf
and
adcl
mov
mov
lock
fisubl
in
mov
fisubrl
std
fnstenv
add
sti
out
inc
pop
lret
loopne
lret
mov
fcompl
mov
fidivl
incl
sbb
shrb
xchg
lret
test
std
xor
test
adc
ja
cmp
pop
ja
loop
push
aam
pusha
add
add
dec
fidivrs
rcrb
test
inc
xor
xchg
push
lods
inc
xor
enter
lcall
push
xor
movsb
fwait
inc
orl
xor
pushl
sarl
shlb
pop
stc
popa
push
push
adc
enter
push
js
sbb
push
xor
cmpb
jne
aam
ror
insb
subl
mov
orb
jg
std
fstpt
pop
mov
sub
cld
enter
and
xor
pushl
cld
mov
push
and
push
mov
divb
pop
lock
dec
or
push
push
cmp
repnz
mov
outsl
and
sub
push
dec
sbb
mov
mov
les
fwait
imul
mov
lcall
in
shl
adc
aas
enter
cmp
mov
sub
aam
into
ret
xor
or
pop
dec
sbb
push
je
dec
inc
je
add
popa
sbb
sub
jg
push
xor
or
mov
and
dec
ljmp
fldt
mov
imul
and
jmp
sbb
mov
inc
lods
jge
inc
into
fmul
int
into
lods
sbb
int3
fmul
dec
fst
pop
and
ficoms
push
adc
push
adc
rorl
pop
faddp
mov
jo
mov
fdivp
jge
scas
nop
stos
in
scas
int
inc
shlb
xchg
insb
sbb
stos
pop
sub
jnp
jne
fwait
xlat
loope
push
push
mov
fsubrl
or
fstpl
adc
xchg
hlt
pop
lea
int
adc
incb
hlt
jg
jecxz
arpl
push
and
outsb
pop
dec
repnz
mov
xor
mulb
adc
stc
scas
or
in
scas
jae
and
lcall
pushl
sub
jmp
adc
sbb
add
adc
jnp
mov
ret
pop
int
mov
cmp
es
bound
cmp
jp
xor
les
insb
data16
push
pop
ljmp
cmp
add
insl
push
or
imull
mov
jae
aas
sub
notb
push
fcmovnbe
dec
lcall
lret
push
and
or
xlat
mov
cmp
lcall
stc
aaa
xor
loope
push
jo
js
push
sbb
mov
cld
add
jg
add
mov
jmp
lcall
std
rcrb
mov
jmp
pusha
add
xor
rcrl
les
cld
aas
cld
lret
and
fistpll
cld
cld
and
cld
inc
pop
inc
std
ror
subps
loopne
clc
lock
pop
fcomip
call
rcrl
mov
and
das
cmpsl
cmp
sbb
out
loop
pop
icebp
fstpl
mov
leave
pusha
cltd
mov
out
or
adc
xchg
cmp
adc
mov
push
push
sub
fisubrs
add
jp
or
mov
inc
dec
sub
push
jp
mov
mov
dec
xchg
and
and
icebp
ljmp
pop
sub
shrb
or
add
inc
adc
add
and
push
sub
jmp
ljmp
sub
aad
dec
mov
sbb
mov
cmp
dec
pushf
cmp
hlt
out
in
add
cs
test
xlat
jo
or
mov
jg
test
xor
and
pop
and
ja
decl
andl
nop
rol
mov
cmp
loopne
jg
ljmp
outsl
push
faddl
pop
sub
cld
fsubl
sarl
jg
sub
pop
clc
jo
fwait
pop
ud2
popf
xorl
push
dec
ficomps
je
fldcw
add
int
fidivl
mov
jle
cltd
push
inc
pop
or
jmp
and
jg
adc
bnd
add
mov
adc
or
push
and
test
add
decl
jmp
daa
mov
mov
inc
or
add
or
ss
mov
pushl
add
add
dec
lds
outsb
pop
jecxz
cmp
fisubrs
and
mov
jno
pop
jl
xchg
incl
ja
add
xor
and
pop
popa
in
daa
popf
test
sub
popa
and
mov
jo
loop
sbb
rcl
or
inc
roll
dec
push
xchg
decl
jae
das
fldenv
repz
push
adc
lods
ljmp
clc
or
lods
enter
adc
inc
or
push
push
inc
jg
xchg
pop
sub
in
push
dec
stc
mov
xor
jl
addl
out
test
aad
push
push
sub
xor
fldl
sub
sub
ljmp
fiaddl
mov
jbe
ds
or
and
sbb
andb
mov
lock
adcl
pop
and
and
and
mov
jbe
xchg
pop
cli
pushl
and
pop
jae
nop
lds
movsl
test
addr16
jmp
add
movsb
js
push
scas
push
into
lret
adcb
sub
scas
mov
mov
repnz
mov
bound
lret
dec
stos
xchg
aad
and
int3
mov
mov
ljmp
add
insb
mov
or
mov
push
orl
cmpsl
test
in
sbb
pusha
xchg
test
lcall
pop
into
cmp
ret
mov
out
dec
cs
mov
mov
ret
mov
or
mov
lcall
mov
sbb
ljmp
and
shlb
dec
inc
jno
sbb
lods
inc
add
push
call
ljmp
push
push
movsb
inc
rolb
and
adc
repnz
adc
movsb
mov
and
pop
sub
outsl
clc
mov
sbb
pop
mov
dec
sub
call
inc
ljmp
push
lods
mov
aam
or
test
dec
cmp
push
xchg
dec
ss
pushl
adc
fistpll
lds
cmp
dec
add
inc
or
sbb
mov
jg
incl
dec
repz
pop
dec
aaa
in
dec
jne
push
mov
fbld
add
adc
push
mov
ja
incl
pop
imul
adc
cmp
rcll
cwtl
movsl
sub
xchg
sub
jg
xchg
push
pop
push
rclb
sbb
push
dec
push
cld
jg
jno
push
push
or
cltd
sub
jo
je
lock
lcall
loop
push
loop
pusha
mov
pop
insb
mov
xchg
adc
icebp
lcall
ret
adc
test
popa
pusha
adc
inc
sub
test
popl
mov
cmp
jnp
int3
enter
cltd
cmc
xchg
xor
mov
out
in
nop
inc
mov
cmp
mov
inc
add
or
pop
or
or
lret
scas
lcall
jmp
insl
insb
dec
into
fcmovb
out
mov
out
pop
jnp
mov
xchg
dec
mov
shrb
jns
xchg
lahf
mov
dec
cmp
shl
mov
push
outsb
aas
push
cmp
sbb
xchg
stos
jno
mov
rcrl
sahf
dec
addr16
jb
mov
jne,pn
inc
daa
push
adc
mov
xchg
add
jo
ljmp
ds
call
lcall
iret
mov
adc
push
and
push
ret
loopne
push
clc
mov
repnz
cmovle
jg
jmp
fwait
mov
cmp
rcll
cmc
mov
clc
cmp
mov
push
ds
sub
jle
mov
std
and
push
repz
add
sub
jg
int3
sbb
rcrl
in
push
xor
or
aad
xchg
cmp
jg
or
pop
or
scas
stos
repnz
mov
adc
sbb
mov
and
mov
shlb
aad
es
and
push
dec
pop
jle
mov
adc
mov
scas
and
and
add
bound
adc
jmp
decl
fcoms
mov
dec
sub
cwtl
ret
fdivrl
stos
cmpsb
push
mov
jmp
push
mov
xor
add
ret
adc
jmp
xor
sbb
jns
int
mov
push
es
sub
rclb
cmp
mov
dec
push
aaa
lahf
adc
mov
xchg
popf
scas
in
cmp
cmp
fistpl
push
mov
ljmp
mov
cli
add
pop
out
push
or
shll
ja
decl
orl
in
add
outsb
inc
add
xchg
adc
call
and
call
into
inc
add
xor
shl
add
sub
xchg
fcompp
leave
test
decl
or
cmp
andb
imul
nop
fimuls
lahf
dec
jp
es
clc
or
lods
mov
cmpsl
push
js
ja
adcb
arpl
out
loopne
inc
leave
xchg
mov
call
mov
push
daa
movsl
jb
and
dec
decl
dec
mov
lcall
popf
out
mov
pop
push
push
test
and
pop
or
mov
sub
fcomps
mov
jmp
dec
push
ror
cmp
lods
or
lods
imul
sub
xchg
les
lock
pushl
mov
orl
data16
fildll
dec
test
add
mov
insb
rcll
xchg
xchg
mov
xor
lods
pop
inc
adc
mov
jmp
cmc
insb
push
pop
test
inc
xchg
nop
aas
lock
movsb
cmc
sbb
xor
mov
lcall
mov
xchg
insb
in
das
sarb
inc
cli
aam
test
push
or
push
ja
idiv
lcall
sbb
insb
ficoml
movsl
xlat
sahf
stos
popf
ja
in
xchg
scas
in
lods
or
mov
jecxz,pn
scas
ljmp
les
pop
roll
out
push
pop
adc
cld
sti
int3
push
test
and
in
pop
jle
jne
lcall
shll
mov
adc
ret
rorl
cmp
in
mov
pushl
cld
aam
adc
dec
inc
ret
xor
test
loope
or
rorl
lcall
cld
jo
push
jle
add
xchg
dec
dec
push
bound
and
fcoms
push
out
push
cmpsl
fildll
dec
dec
mov
cli
inc
shrb
inc
pop
ds
aas
inc
dec
or
call
sub
stc
lret
mov
xor
add
sbb
pusha
mov
ds
ljmp
ret
jo
mov
stos
in
int
movsb
mov
or
nop
jo
or
call
shlb
pop
push
xlat
dec
xchg
dec
adc
sahf
lcall
imul
xlat
shrl
inc
sbb
push
jmp
sbb
inc
lret
xchg
lcall
aad
adc
aad
mov
xlat
cmp
arpl
mov
fs
mov
mov
sbb
mov
sbb
sbb
mov
cltd
lock
cs
fadd
xchg
pushl
call
orb
pop
insl
ljmp
jae
decl
in
ret
or
pushl
mov
pop
and
cmp
mov
push
repz
incl
stc
movsl
sti
rol
stos
xchg
es
pop
cmpsb
pop
popa
pushf
add
sbb
xchg
mov
jmp
xchg
mov
adc
punpcklwd
outsb
mov
test
xor
push
sbb
sbbl
push
xchg
fisubs
cmp
adc
cmp
push
rolb
mov
dec
pusha
add
xchg
xchg
pop
rolb
jae
movsl
and
cltd
sub
imul
and
mov
xchg
repnz
cmp
mov
jg
incl
add
test
xchg
cltd
cmpb
mov
shrl
incl
mov
popa
xchg
add
xor
push
mov
cmp
aaa
add
fcomip
push
movsb
adc
out
sarb
addl
inc
cmp
xchg
incb
dec
pop
or
xor
and
sub
call
cwtl
loopne
mov
call
js
mov
push
sbb
sbbl
mov
push
sub
inc
xorl
mov
bound
inc
ds
or
loopne
pop
mov
sbb
or
pushl
movsb
cmp
out
rcrl
ret
lods
xchg
or
push
xchg
repz
mov
lds
cmc
call
loop
pop
bound
rolb
movsb
jo
call
xchg
dec
pop
cmpb
mov
fisubrl
push
xchg
scas
mov
inc
jns
enter
mov
mov
sbb
add
pushl
lods
sbb
xor
test
clc
cmp
xor
adc
sti
push
lock
cld
cmp
pushf
xchg
sti
dec
add
call
dec
push
ret
outsl
xchg
xor
nop
xor
jae
mov
std
push
cld
jg
xchg
adc
cmp
xchg
push
pop
and
sbb
mov
pop
mov
and
adc
adc
and
add
test
ret
mov
rcrb
add
dec
das
in
das
inc
adc
xor
ret
xor
inc
push
test
pushl
inc
mov
mov
test
jmp
push
mov
aas
xor
sahf
sbb
xor
sub
xchg
pop
push
xor
add
and
xor
jg
cwtl
cmp
enter
mov
xchg
and
inc
mov
push
sbb
add
rolb
mov
andb
mov
jp
push
test
mov
clc
cmpb
call
stos
test
pop
pop
and
ljmp
inc
mov
inc
enter
or
push
pop
addl
push
imul
lcall
repz
mov
ds
fldl2e
inc
hlt
sbb
xchg
sbb
or
mov
js
jp
mov
lret
pop
add
pop
pop
movsl
cs
stos
jnp,pn
fwait
lods
mov
jp
inc
push
cmp
loope
and
jl
push
loope
enter
incl
push
sbb
mov
sub
cmp
adc
enter
adc
jg
xchg
or
mov
ror
and
inc
xchg
sbb
lret
pop
mov
jae
xor
adc
jge
jle
push
sub
jne
inc
movsb
jnp
incl
sub
xchg
pop
sti
ret
mov
les
leave
mov
xchg
shrb
add
lret
xchg
mov
push
cmp
inc
mov
mov
mov
sar
adc
clc
dec
pushf
lret
dec
adc
adc
call
call
subb
dec
cmp
movsb
les
leave
inc
mov
incl
xor
inc
lds
mov
inc
inc
mov
and
mov
adc
scas
jo
mov
stos
pushl
sub
mov
pushf
into
in
into
out
decl
cmpb
loopne
ret
push
inc
xchg
mov
dec
cli
mov
imul
mov
icebp
rol
clc
or
icebp
in
into
push
dec
push
mov
mov
jno
pushl
nop
jl
sbb
mov
jmp
cmp
clc
incl
push
mov
xlat
or
jg
scas
add
adc
out
dec
pop
lock
mov
dec
mov
xor
cld
ljmp
adc
lret
fistpl
popa
inc
lea
adc
enter
decl
leave
roll
fwait
adc
les
add
incl
jp
cmpsl
and
and
adc
sbb
cmp
hlt
ljmp
sahf
and
pop
dec
and
add
pop
xor
inc
xchg
dec
std
lcall
mov
fisubrl
lcall
cli
mov
sbb
aas
pop
fcomip
push
xchg
xchg
loope
or
mov
add
mov
inc
xchg
dec
push
mov
incb
data16
adc
inc
rcrb
mov
cli
ljmp
add
mov
push
push
push
and
xlat
jecxz
and
mov
sub
rolb
adc
pop
jne
in
aad
or
pusha
push
lods
bound
ds
in
stos
push
daa
or
or
incl
xor
fldl
sbb
ljmp
std
adc
clc
decl
dec
cltd
iret
inc
aas
push
pushl
mov
mov
sub
movl
lcall
out
loopne
call
ficoms
push
push
in
xor
mov
icebp
push
das
push
std
and
add
or
cmpsb
add
pushl
xchg
cmp
adc
jg
inc
pop
push
lret
cmp
test
fwait
insb
sbb
movsb
adc
jno
cmpsb
decl
popf
and
cmpsl
inc
dec
and
daa
mov
add
incl
andl
pop
ret
fldcw
add
xchg
xchg
in
icebp
sahf
stos
sub
jmp
and
subb
cmc
addl
js
icebp
dec
sub
pop
out
popa
and
add
es
in
int
out
int
push
loop
mov
xchg
daa
mov
xchg
mov
or
cmp
cmp
adc
test
into
inc
insl
pushl
ljmp
dec
orl
mov
and
mov
sub
loopne
clc
loop
mov
and
int
lds
mov
inc
aad
xchg
xchg
decl
mov
lods
cmp
test
lret
xchg
out
and
push
call
cwtl
scas
loop
mov
add
inc
fstpl
out
cli
ljmp
inc
mov
cld
mov
fildll
xchg
pop
mov
decl
mov
arpl
fildl
sub
add
xchg
mov
jp
in
push
ljmp
cmp
ja
scas
mov
mov
sbb
xor
mov
popf
push
cmc
add
mov
or
stc
icebp
bound
cli
inc
add
pop
xchg
pushf
push
pop
push
jecxz
rclb
rcr
lea
mov
mov
xor
in
movsb
pop
jne
and
xchg
cltd
dec
adc
rorb
mov
add
call
mov
ss
mov
loope
pop
imul
iret
xor
pop
icebp
out
repnz
sbb
cmp
xchg
ds
mov
decl
pop
add
fisubrl
dec
dec
mov
cmp
dec
ljmp
mov
or
enter
decl
mov
sahf
push
or
sbb
mov
sub
mov
sbb
sbb
adc
mov
mov
push
mov
ds
add
xor
fmull
sahf
mov
or
ret
cmp
repnz
or
fnsave
in
and
sub
lods
push
mov
lock
and
shll
adc
or
inc
insl
mov
lcall
imul
push
in
cli
mov
mov
test
xchg
fdivp
repz
mov
insb
mov
mov
xor
jg
add
push
aad
pop
adc
out
das
ret
clc
and
out
cli
mov
xchg
inc
rcrb
pusha
addr16
es
es
adc
loopne
decl
bswap
mov
in
add
es
loope
sbb
enter
ret
mov
aad
popf
or
and
arpl
or
or
and
push
rorl
loop
dec
sub
cwtl
lock
cs
in
decl
das
orl
jne
lock
out
push
xchg
adc
or
lock
or
cli
call
lahf
jo
push
adc
jno
xlat
sub
shl
mov
push
pop
ljmp
or
and
add
and
push
pop
pop
and
pop
mov
xor
push
jecxz
cmp
mov
stos
mov
cmp
xor
add
add
push
cmp
or
orb
ljmp
push
sub
add
call
xor
fiaddl
fwait
adc
xlat
or
fiadds
test
incl
pop
xchg
fdivl
push
fldt
cmp
scas
cwtl
or
insb
popa
mov
inc
cmp
rcl
mov
pushl
adc
out
xor
mov
xlat
out
fidivrl
mov
jg
add
xabort
sub
adc
or
mov
jb
pop
pusha
loopne
add
cs
sub
mov
add
dec
movsl
imul
xchg
sub
mov
in
mov
fcoml
push
mov
add
clc
rclb
sub
imul
adc
adc
push
adc
insl
inc
jl
jb
sbb
clc
decl
push
adc
rcll
mov
mov
jo
out
and
sub
jnp
lock
hlt
stos
ja
add
lds
aaa
in
mov
push
push
cmp
and
fnstsw
and
js
js
vmwrite
push
sub
pop
pusha
stc
lea
jns
inc
stc
xchg
out
jne
pusha
adc
loopne
lahf
mov
cli
lcall
cmp
xchg
repnz
shlb
pop
add
adc
ljmp
cmp
xchg
lods
cs
push
adc
cs
push
push
push
scas
ret
iret
mov
mov
inc
decl
int
test
and
out
dec
dec
push
xchg
and
es
in
je
jg
pop
test
arpl
out
jecxz
mov
jmp
xchg
enter
lcall
add
pusha
mov
jnp
push
cmc
fdivs
xlat
push
lods
pushl
push
add
ret
mov
mov
loop
add
push
cld
stos
push
jg
call
mov
fldt
pop
sarb
mov
sbb
das
icebp
std
cmpl
outsl
call
cld
adc
jo
dec
ja
push
hlt
mov
jnp
nop
jbe
nop
jno
nop
imul
jg
pop
icebp
cli
cmpsb
rol
xor
mov
mov
push
loopne
rcrl
ljmp
xor
mov
mov
mov
incl
es
jns
inc
cs
add
pop
cld
jg
add
jl
mov
sbb
and
dec
dec
movb
call
adc
inc
movsb
mov
sbb
xchg
shll
sub
pop
pop
xchg
push
dec
push
jecxz
xchg
cs
leave
adc
adc
addr16
adc
ficoml
and
call
inc
popf
sbb
cmp
popa
repz
add
push
movsl
inc
addb
jmp
mov
sub
into
xchg
test
xlat
lods
pop
sub
pop
mov
push
cmp
dec
push
loopne
mov
int3
dec
xchg
push
movsl
xchg
adc
cmp
push
jecxz
ljmp
aad
mov
pop
add
xor
xchg
jmp
mov
pop
das
pop
jl
out
mov
mov
mov
pushf
mov
mov
cmp
incl
add
dec
sub
outsb
cmp
repz
push
nop
mov
jb
in
arpl
sahf
cmp
cmp
mov
jmp
and
mov
adc
inc
sbbl
incl
mov
loopne
adc
or
mov
adc
and
outsl
in
sar
incl
fwait
jl
pop
fwait
enter
rcll
sbb
xchg
and
push
aas
push
mov
adc
decl
xchg
movsb
rolb
mov
imul
dec
sub
decl
jno
xchg
push
push
imul
cmpsb
xchg
sub
pop
fs
decl
testb
aaa
xchg
mov
test
or
subb
add
xchg
and
hlt
fistpl
jnp
sbb
cmp
aaa
cld
ljmp
cmpl
hlt
icebp
rolb
sub
movsb
orl
inc
mov
and
adc
push
add
pop
mov
inc
sbb
call
in
sbbl
lods
sar
in
lods
dec
add
mov
sar
ljmp
lods
mov
sub
in
inc
rorl
stc
je
push
inc
cmc
out
push
push
dec
mov
push
cmpsb
mov
push
mov
test
xchg
add
jg
jo
inc
movsl
and
jne
pop
jno
xchg
scas
pop
pop
in
adc
jno
test
insb
or
sub
push
add
aad
bound
dec
rol
inc
push
in
push
insb
mov
cmpsb
incl
jne
fistl
addl
push
mov
jmp
ret
je
sbb
cld
pushf
push
mov
lret
pop
dec
iret
sub
and
incl
int3
addr16
aad
lods
xlat
lds
sub
loop
out
clc
call
jne
cwtl
or
adc
fcompl
sub
xor
jmp
test
std
and
clc
loope
pop
ficomps
push
dec
jbe
sbb
cmpsl
popf
sbb
sarb
icebp
decl
push
insb
clc
pop
dec
push
aad
pop
dec
sub
stc
ljmp
in
sub
jno
xchg
pop
pop
jns
xchg
arpl
imul
cli
lcall
jmp
cwtl
jp
stc
cmpsb
fwait
jae
add
mov
xchg
push
stos
and
loop
ljmp
mov
repz
cmp
je
inc
sbb
adc
lds
fimuls
pop
dec
mov
cmp
dec
in
fsqrt
add
scas
out
jmp
icebp
mov
das
mov
jg
lock
inc
std
rorb
jo
xchg
lcall
mov
mov
scas
aam
orl
outsl
sub
inc
xor
xchg
mov
xchg
pusha
push
inc
sub
stos
pop
mov
mov
or
fcomip
movsl
add
inc
or
add
scas
js
sub
add
dec
inc
or
mov
xor
mov
adc
das
cli
pushl
enter
fadds
fmuls
lds
mov
call
adc
mov
cmp
mov
mov
inc
xchg
or
pop
nop
xor
cmc
ljmp
int3
inc
cmp
loope
stos
push
and
jbe
call
mov
mov
jno
xchg
sbb
lret
mov
inc
cmp
or
adc
test
push
mov
and
push
mov
cmp
jo
adc
mov
lcall
xor
lea
push
pop
xlat
cmp
xchg
xchg
jmp
aam
cmp
xchg
stos
fistl
jmp
pop
es
orb
xlat
push
dec
mov
sbb
in
sub
aam
and
incl
inc
stc
push
faddl
jo
out
cmp
clc
enter
lods
adc
ljmp
adc
mov
cltd
mov
push
adc
movsb
push
inc
rolb
icebp
pusha
add
lret
or
inc
and
mov
or
jne
and
adc
mov
adc
call
clc
rorl
mov
pop
add
stc
enter
popa
test
nop
pop
add
add
push
xor
cmp
cs
jle
ljmp
loop
sbb
mov
or
xchg
mov
mov
out
xor
jb
clc
sbbb
mov
mov
clc
shlb
int3
int3
loop
call
push
and
dec
sub
xchg
xchg
cwtl
lds
or
lret
adc
inc
xchg
mov
dec
sahf
mov
fwait
mov
loope
js
xor
dec
push
rorl
mov
sub
cmp
mov
icebp
add
aas
icebp
ficompl
js
aaa
dec
pop
nop
mov
add
sbb
adc
xor
decl
lock
sbb
dec
inc
ljmp
incl
jp
mov
push
xchg
shrl
sub
decl
jp
xchg
pop
mov
imul
xchg
cmp
cmp
into
dec
std
incl
push
popf
mov
rorl
jae
scas
adc
mov
rclb
adc
outsb
jg
icebp
aaa
ljmp
daa
dec
iret
push
adcb
jmp
jl
mov
xchg
mov
jg
shrb
lods
repz
in
pop
js
inc
inc
sbb
dec
pop
mov
ljmp
mov
popa
add
sub
add
jl
movsb
ss
scas
aaa
lods
loop
clc
xor
push
push
shlb
mov
xchg
mov
sub
xchg
add
fs
lcall
mov
rclb
shrb
and
pop
jmp
in
stos
xor
cwtl
mov
lcall
int3
xor
push
inc
cmc
call
and
int
nop
enter
jne
scas
and
mov
lods
repz
jo
push
add
sbb
inc
xchg
mov
sbb
ror
cltd
jbe
in
imul
sbb
jae
stos
movsl
cmpsl
ds
mov
sbb
into
mov
insl
data16
lcall
cltd
aaa
or
outsb
mov
test
sar
addl
mov
movsl
icebp
jmp
push
lret
mov
in
imul
inc
je
dec
add
inc
mov
pop
data16
lcall
mov
popf
mov
and
mov
loope
cmpsb
cmp
popf
jge
push
test
cmp
jmp
lock
ja
inc
stc
fwait
rcl
push
movsl
or
mov
sahf
clc
push
add
iret
ja
and
sbb
cmpsb
insl
js
test
orb
lcall
sub
mov
loop
lret
cmp
and
arpl
and
jp
jge
fs
test
jne
xchg
xchg
mov
iret
pusha
inc
call
push
sbb
out
loop
rolb
pop
adc
add
pop
pop
out
das
jl
loope
push
cmp
mov
subb
fnstenv
lcall
adc
mov
pushl
mov
data16
xor
pop
inc
hlt
jno
xchg
lods
js
pop
pop
popf
sbbb
data16
xor
jbe
xor
stc
jae
shr
hlt
rcl
repnz
mov
jmp
ficompl
add
jg
cmp
or
push
addr16
enter
cmp
lcall
dec
xchg
and
and
lea
pop
hlt
xchg
shrb
xor
insl
sbb
notb
dec
lcall
rorl
xchg
das
ret
xchg
cmp
fldl
hlt
incl
adc
dec
jl
mov
jmp
mov
sub
mov
push
jg
outsl
test
jae
mov
pushl
mov
cmp
cwtl
add
dec
rclb
test
insl
fadds
sbb
lea
decl
pushf
mov
leave
sbb
fmul
in
jnp
decl
dec
nop
pusha
mov
xchg
in
xchg
sub
lods
and
xor
mov
sbb
std
mov
mov
sbb
inc
push
stc
dec
fs
insl
std
call
test
jl
pop
push
or
jg
adcb
rcrb
lret
pop
adc
mov
leave
hlt
adc
in
sbb
adc
jo
or
icebp
xchg
shll
pop
sub
movsb
cmp
incl
jo
imul
addr16
push
sbb
rcrl
lea
test
clc
incl
adc
orb
fcompl
lret
insl
or
call
incl
jo
or
add
test
je
mov
ret
pop
jae
pop
ljmp
cwtl
inc
out
or
into
adc
sub
push
mov
mov
cwtl
adc
adc
clc
and
cli
popf
mov
dec
aaa
add
lahf
jmp
push
ss
rol
popa
or
iret
inc
mov
test
push
sbb
jmp
add
add
iret
sub
mov
ds
addb
and
mov
jge
ds
dec
add
nop
insl
pop
into
popf
pusha
dec
sbb
incl
xor
push
adc
mov
dec
cmp
daa
dec
xchg
sbb
into
cli
pushl
ret
add
add
int3
add
pop
call
adc
xchg
xchg
cltd
ljmp
add
pop
dec
adc
mov
add
lahf
test
imul
add
fcomip
adc
pop
xor
adc
scas
ljmp
pop
mov
loopne
jbe
int
hlt
push
xor
loop
pop
xlat
cwtl
fidivl
rorl
sbb
cmp
jb
xchg
imul
adc
adc
mov
call
insl
sub
sub
xchg
pop
popa
loopne
int
test
jo
xlat
jmp
push
xchg
and
mov
mov
dec
push
pop
sub
mov
cmp
ljmp
xchg
push
pop
out
dec
cs
out
ss
jg
call
jl
xchg
pushf
inc
out
fwait
test
xor
stc
mov
clc
pushf
fcoml
outsb
pop
mov
cmp
cld
add
ret
cmp
cmp
sbb
decl
xchg
jbe
dec
lds
and
dec
jno
outsl
sbb
cld
ds
addr16
mov
bound
mov
inc
fcmove
or
in
ss
test
cmp
inc
fisubrl
dec
sbb
xchg
mov
lock
jg
or
push
rolb
rorl
aad
faddp
adc
js
rorl
roll
and
sbb
xor
push
les
xor
xor
mov
es
lods
or
popf
mov
aam
jno
xbegin
orl
test
sbb
loope
mov
outsl
push
sbb
movsl
pop
xor
stos
out
cmp
inc
hlt
popa
in
iret
sbb
cmp
notb
shll
push
fcoms
call
lods
push
sbb
inc
dec
mov
pop
sbb
lcall
insl
icebp
push
popa
jbe
es
daa
sub
xchg
push
loop
pop
sub
mov
loopne
mov
xchg
in
xchg
jl
cs
push
imul
aaa
cld
pushl
rorb
aam
jmp
dec
xor
mov
mov
lahf
mov
sbb
movsb
insb
arpl
pop
jae
iret
jae
dec
test
outsb
mov
stos
mov
dec
nop
mov
sbb
add
daa
inc
xchg
fdivrs
repnz
jecxz
imul
lret
jmp
into
pop
in
fwait
mov
or
adc
sbb
shrl
loopne
or
adc
sub
xchg
adc
mov
sbb
inc
dec
cmpsb
in
sbb
cwtl
mov
scas
sbb
cld
sbb
decl
js
sbb
push
mov
rcrl
sub
push
pop
mov
ret
pop
mov
aaa
mov
push
adc
lods
call
lcall
push
adc
js
jo
int
xchg
and
xchg
push
addr16
inc
jo
movsl
pop
push
and
sub
pushl
add
je
pop
sub
push
xchg
xchg
fiaddl
pop
cmp
stos
jno
shlb
bound
inc
pushl
add
adc
vmovaps
out
icebp
sbb
xchg
es
insl
mov
adc
pop
xchg
outsb
leave
cmc
ja
lcall
sbb
sub
xorl
shl
inc
xchg
in
pusha
pop
sub
into
xchg
cld
and
dec
das
cli
jg
ljmp
fwait
movsb
rorb
jns
cmpsl
ret
pop
add
mov
mov
inc
or
mov
cwtl
add
sub
push
cmp
dec
movsb
jecxz
out
ja
incl
xchg
int
jcxz
mov
imul
lret
inc
call
loopne
mov
jge
mov
lcall
and
cmc
mov
int3
out
cmpb
adc
fisubs
dec
repnz
add
lar
lret
or
mov
pusha
inc
test
or
dec
loopne
inc
mov
ret
mov
js
or
test
mov
dec
cmp
adc
and
push
jbe
push
push
repnz
push
insl
enter
inc
loop
fcomip
incl
jle
in
xchg
push
scas
mov
popf
xchg
sbb
enter
or
lods
jns
sbb
movsl
int3
pop
or
push
imul
rorl
jo
push
out
push
lcall
and
sub
lcall
pop
dec
xlat
sub
sbb
call
xchg
cmpsb
mov
fistl
xlat
xchg
cmp
xor
out
fmull
mov
mov
or
jno
pop
and
mov
push
inc
cmpl
incl
xchg
dec
inc
fdivrl
ss
loope
out
fidivl
add
into
shl
sbbb
mov
mov
jne
inc
lcall
mov
out
push
inc
repnz
jnp
scas
inc
ljmp
sbb
inc
add
mov
test
or
sbb
call
subb
push
jmp
cmc
fiadds
rcrb
pop
cld
fildll
fdiv
sub
sar
push
scas
ret
push
cmp
mov
incl
lret
xor
pop
insb
in
mov
icebp
xchg
add
mov
les
int3
and
jge
int
cmpsb
and
mov
data16
popa
pop
jl
data16
mov
cmp
frstor
in
add
xor
lahf
push
xchg
lcall
insl
pop
out
outsl
lcall
adc
loope
shr
ljmp
cmpsb
mov
sbb
cmp
sub
jo
sub
sub
mov
enter
std
jo
add
inc
ja
decl
out
xchg
adc
dec
movsb
fsubrp
movsb
push
or
jno
js
mov
cli
lods
ljmp
sar
call
xor
mov
sysexit
sbb
cld
jne
in
sub
add
add
mov
cmp
aad
clc
inc
lods
sbb
adc
leave
call
xor
cs
in
mov
dec
test
rol
sbb
or
dec
in
ss
movsl
inc
mov
mov
fstl
mov
mov
sub
inc
pusha
stos
jb
gs
sub
sbb
sbb
rcll
pushl
mov
and
decl
bound
push
pop
shlb
and
sbb
adc
lret
inc
dec
sub
pop
hlt
lcall
lock
mov
adc
idivb
mov
rclb
incl
sbb
jo
stos
gs
sub
sahf
dec
or
jmp
and
cmpsb
inc
out
push
outsb
cmp
mov
push
fdivrp
in
orb
cmp
lea
loope
mov
cltd
add
icebp
sub
ds
clc
shlb
dec
xchg
fsub
clc
int
xor
pop
paddsb
xchg
mov
fcomip
lcall
xor
movsb
and
orl
mov
adc
stos
cmp
fadds
xchg
sbb
popa
test
xchg
mov
xchg
js
lods
ljmp
clc
mov
mov
dec
lods
push
push
shlb
insl
jmp
ja
popa
dec
add
add
decl
xchg
inc
insb
aaa
sbb
or
fadd
xor
adc
sub
push
fcmovbe
sub
jle
mov
fcomip
xor
jns
loop
rclb
dec
test
pop
repz
lcall
stos
data16
jo
ss
lcall
jo
mov
cmp
fsubl
or
gs
jne
mov
cmc
xor
jge
daa
arpl
lock
decb
iret
sahf
outsl
push
data16
fisubrs
scas
push
sub
pop
dec
clc
shl
dec
sub
jns
stos
repnz
in
mov
push
std
adc
gs
fistl
mov
jo
mov
pop
jle
sub
mov
push
out
sub
mov
sti
repz
addl
hlt
test
je
fcomps
jge
decl
call
outsb
push
aaa
xor
pop
fiaddl
cmpsl
push
inc
je
sub
sarb
imul
insb
imulb
push
fs
ss
mov
mov
dec
fmuls
out
cmc
test
stc
scas
int
nop
lock
stc
cwtl
out
adcb
sbb
mov
push
test
aaa
cmp
adc
jnp
leave
lock
jmp
push
pop
repnz
enter
decl
jl
sub
xchg
addb
fistps
fdivl
xchg
pop
xchg
arpl
fwait
push
jl
dec
into
mov
jns
decl
mov
pop
mov
push
movsl
gs
xor
push
jns
pushl
fst
or
push
test
mov
pop
xchg
jo
or
ja
or
cld
ffree
sub
cmovae
in
pop
push
shrl
xchg
enter
call
adc
and
mulb
and
in
rclb
fisttpl
fists
or
mov
orl
test
jne
imul
ds
lods
push
sbb
push
and
rcll
mov
dec
cld
scas
iret
int
lock
mov
out
addr16
sbb
sar
enter
call
and
in
cwtl
xor
cmpsl
mul
call
mov
pop
pop
lcall
add
jns
or
pop
mov
jae
scas
test
sbb
test
push
mov
out
decl
pop
rep
and
ss
push
adc
les
add
add
pushl
je
adc
add
sub
sub
addl
shll
mov
and
jg
inc
xchg
adc
jb
sbb
xchg
daa
add
jno
inc
mov
mov
add
xchg
add
cli
push
sub
aas
jo
xchg
push
push
fld
call
push
mov
push
ljmp
sub
push
mov
pushl
and
jp
or
pop
mov
ficompl
mov
push
insl
push
mov
pop
push
out
out
inc
add
xor
xchg
sub
xor
cmp
decl
adc
fwait
sub
dec
push
cmpsb
jae
mov
shlb
ds
jp
jmp
cltd
popf
pop
psrad
mov
fdivr
call
mov
jp
sti
repnz
push
jo
lret
pop
sbb
mov
stc
out
xchg
inc
scas
jle
lret
sbb
ljmp
add
ja
das
loope
push
hlt
add
jle
jns
in
pushl
fists
and
sbb
cmpl
scas
ds
shr
ret
notb
nop
shll
pushl
mov
rolb
pop
das
mov
mov
mov
std
divb
cmp
and
and
mov
sbb
icebp
push
jb
push
imul
lcall
adc
and
xchg
lods
or
cmpsb
lea
xor
mov
mov
lds
mov
dec
mov
cmp
sbb
inc
inc
xchg
ljmp
mov
add
aaa
adc
iret
ds
mov
ljmp
xor
lcall
jb
movsb
aaa
adc
pop
xor
scas
fdivr
fisttpl
cmp
add
mov
movsb
xchg
aam
xchg
push
pop
movsl
cmpsb
sub
decl
stos
mov
mov
loop
pop
mov
sub
lods
mov
gs
sbb
mov
ss
jbe
mov
xor
cmp
sub
call
sarl
arpl
xor
sbb
lock
pushl
lret
dec
mov
fs
sub
insl
xor
mov
jmp
xor
jle
fcmovu
sahf
adc
mov
mov
out
mov
out
mov
cmp
mov
sbb
cmp
add
loop
out
shll
inc
cmp
mov
les
cmp
push
ds
xchg
pop
das
inc
pop
inc
push
or
cmp
mov
mov
aas
add
mov
and
outsl
aas
xor
lods
mov
jmp
sbb
imulb
cmpsb
and
repz
stos
xchg
push
call
mov
sbb
and
roll
mov
pop
test
popa
out
mov
repnz
cmp
sub
push
dec
and
sahf
mov
cmpb
cs
cmp
push
mov
lcall
aaa
or
xchg
mov
pop
or
call
pop
lret
jne
stos
sub
fistps
sub
decl
lea
mov
hlt
dec
sub
insb
mov
pushf
adc
arpl
jg
daa
ss
iret
fisubrl
mov
dec
xchg
sub
jae
rorl
xlat
mov
sub
pop
notb
sbb
pushf
loope
sub
rcll
xchg
repz
call
cmp
pop
and
mov
lock
mov
in
aaa
std
decl
ds
mov
sbb
movq
add
imull
incl
push
or
xchg
loope
in
pop
mov
cmp
dec
and
mov
mov
push
sbb
add
pop
arpl
xchg
test
adc
xchg
inc
and
xchg
mov
scas
jmp
mov
adc
pushf
filds
cmp
popa
leave
mov
cmp
cmp
pop
inc
in
arpl
call
mov
je
lcall
mov
in
arpl
adc
pushl
icebp
icebp
outsl
or
aad
ja
inc
int
outsl
cmp
inc
out
je
pop
in
xchg
nop
jecxz
idiv
incl
xchg
lret
or
and
pop
stos
and
mov
adc
lcall
leave
dec
dec
cmc
xchg
add
dec
mov
xchg
push
gs
pop
pop
inc
adc
stos
lds
dec
out
mov
push
add
mov
pop
nop
push
mov
jg
int
push
xor
jl
seto
fisubs
ret
lods
testl
cli
ljmp
lcall
pop
pop
add
shl
cmpsb
jle
test
sbb
out
movb
xchg
xchg
xor
or
ret
sub
cmp
leave
pop
jb
push
decl
mov
dec
sub
xor
xchg
pop
pop
das
xchg
xchg
jnp
in
stos
sbb
and
jo
dec
push
pop
rcrl
leave
imul
inc
mov
push
pop
test
test
mov
lcall
cmc
sub
xchg
push
sub
mov
sbbb
pushl
jbe
and
or
push
sbb
ljmp
jl
aaa
or
inc
ss
in
rorb
jecxz
out
leave
sub
lods
or
pop
pop
divb
mov
sbb
shr
jne
arpl
cwtl
mov
lds
outsb
stos
mov
call
jns
or
ds
dec
call
mov
lcall
repnz
rclb
and
dec
pop
movsl
add
dec
test
lcall
pop
mov
sub
sbb
call
pop
dec
push
sub
inc
dec
das
push
cltd
add
rorl
pushl
sub
sar
test
in
fimull
fsubrl
lahf
icebp
stos
outsl
mov
ljmp
jp
maxps
cld
pop
jno
pushf
sbb
adc
add
xchg
orb
out
cli
ss
adc
les
and
push
push
test
les
dec
icebp
push
bound
lahf
sbb
inc
sub
inc
mov
add
xor
movd
cmp
jno
mov
add
scas
js
div
jmp
popf
mov
jg
inc
adc
lret
fcmovb
lahf
push
sub
in
int3
jmp
popa
pop
push
jmp
xchg
cmp
and
mov
xor
aaa
clc
rolb
decl
mov
aaa
imul
ret
jl
cs
push
in
inc
adc
lds
jecxz
pop
in
inc
sbb
mov
andb
cmp
push
rol
mov
inc
pop
adc
dec
xor
hlt
and
jg
fsubs
popa
les
sub
mov
push
mov
inc
pushl
jno
imul
or
xor
mov
ficoms
inc
dec
faddp
incl
cld
lret
or
stos
jp
mov
imulb
inc
xor
fdiv
push
clc
sub
lods
jb
rcrl
in
cmp
xlat
lods
sti
out
push
scas
pop
pop
imul
lcall
add
outsb
pushl
inc
test
out
ret
add
mov
add
mov
and
vmulps
mov
je
pushl
adc
cltd
push
test
lds
jbe
mov
arpl
jg
cmp
fs
mov
mov
and
or
cs
rorl
mov
test
cmp
inc
add
gs
fcomip
insb
push
or
ret
andb
inc
pop
jno
repz
sub
int
cmp
decl
loope
mov
aaa
rolb
ja
lar
pop
icebp
mov
cmp
sar
js
push
clc
cli
cmp
mov
push
sbb
popf
push
jnp
jecxz
adc
ljmp
rcr
cwtl
call
int
mov
dec
and
sbb
ljmp
mov
jb
dec
cmp
push
sub
test
subb
mov
call
lret
test
cs
mov
arpl
div
int3
int
stos
into
mov
cld
cwtl
inc
mov
jg
add
insb
arpl
mov
movsl
sbb
pop
or
pop
xchg
adc
fldt
lods
xchg
scas
mov
xchg
or
clc
dec
push
mov
and
inc
lcall
decb
scas
loope
cmpsl
cmp
or
add
sarb
and
call
andl
ret
cmp
inc
test
or
es
and
push
shlb
in
push
out
lds
in
push
out
cs
and
jle
out
dec
enter
ds
mov
adc
cmp
mov
xchg
xchg
pushf
mov
xchg
adc
cmpsb
out
jle
into
sahf
pusha
cmp
fiadds
jo
or
test
mov
pop
out
in
fmull
or
mov
jmp
sbbl
and
scas
add
bound
lcall
sub
or
rorb
add
out
scas
add
mov
or
mov
jg
call
push
sub
add
nop
outsb
out
shrl
rcl
and
sub
and
decl
push
cs
roll
movsb
addr16
and
xchg
ljmp
movsl
pop
dec
js
push
add
push
adc
adc
ljmp
push
push
inc
inc
mov
mov
jg
xchg
mov
cwtl
sub
decl
lds
sbb
mov
fimull
out
xor
mov
jnp
and
int3
rcrb
fdivrl
add
fcomip
popf
int3
pushf
call
enter
addr16
outsl
jge
cmc
fisttps
cli
out
cld
or
cmp
push
sbb
das
mov
cmpl
mov
adc
lcall
call
lret
out
mov
xor
add
inc
or
and
cld
mov
dec
dec
push
and
in
sub
push
rol
decl
mov
mov
pop
jo
mov
insb
rolb
mov
mov
add
pushl
sub
mov
ljmp
movsb
test
sbb
jl
orb
pusha
fdiv
das
nop
sub
mov
xor
pop
sub
adc
lcall
or
jo
mulb
pushf
xor
pusha
loopne
out
out
mov
or
adc
sub
or
call
rcrb
iret
mov
or
cmpsl
rcrl
dec
mov
xchg
out
inc
nopl
xchg
dec
dec
icebp
and
aad
movsb
jb
inc
inc
push
mov
pop
mov
adc
sbb
lcall
xor
push
outsl
imul
bound
jae
push
mov
lcall
mov
push
mov
cs
repz
fstpt
adc
xor
and
call
iret
xor
ud0
jmp
shl
bound
movb
xchg
jmp
scas
jle
lods
jg
ret
lahf
pushf
rcrl
sarb
stos
inc
cmp
mov
sbb
sbb
and
nop
loop
nop
jecxz
or
and
mov
call
inc
inc
repnz
mov
cs
and
mov
or
ljmp
push
lock
push
sub
outsl
into
and
and
xchg
loop
and
sub
cli
das
clc
and
jp
test
jmp
pusha
hlt
jg
dec
push
push
fisubs
nop
or
mov
mov
lahf
repnz
nop
int3
mov
add
inc
filds
pushf
cld
inc
decl
loop
es
xor
xor
xchg
dec
jno
call
or
sub
mov
sub
sub
or
mov
dec
inc
ret
cwtl
aam
lcall
and
orb
aam
cmp
add
dec
inc
sar
and
ret
movsb
jae
fstl
xor
inc
inc
xor
mov
push
xlat
xchg
add
call
xor
xor
mov
pop
in
xchg
test
insb
add
clc
inc
sbb
incl
pop
shll
imul
sub
mov
pop
test
pop
into
mov
adcb
push
pusha
xor
faddl
out
sahf
enter
out
lock
pop
clc
or
fisubs
or
cmp
int
or
arpl
xor
and
jg
jl
and
inc
and
loop
and
jg
ret
aam
test
ljmp
out
lock
mov
mov
cmp
insb
push
xor
cmpsl
add
add
call
cld
xchg
inc
fs
mov
push
add
jns
rcrl
pop
fists
outsl
push
lock
or
shlb
mov
sub
test
or
incl
jo
or
aaa
mov
add
cmp
add
inc
and
pop
sbbb
mov
call
pop
in
or
mov
jg
sub
inc
push
fcomi
sar
dec
wbinvd
or
es
push
psllw
push
sbb
int
out
dec
call
incl
out
xor
je
test
je
es
shlb
mov
jmp
dec
jae
jbe
shl
mov
mov
mov
decl
lea
cli
movsb
ljmp
repz
decl
add
xor
jmp
les
out
sub
mov
push
mov
outsl
cli
mov
pop
les
adc
xlat
adc
loopne
ret
sub
lcall
mov
jno
pop
ljmp
add
cmp
jae
dec
cmp
pop
mov
inc
incl
ret
ds
pop
dec
dec
aas
sub
or
aad
insl
in
aas
push
nop
jmp
push
aam
pop
xor
xor
fcomip
aas
fdiv
push
jg
aas
mov
out
andb
ljmp
je
pop
push
nop
nop
xchg
mov
push
inc
inc
lahf
pusha
mov
cs
stos
mov
mov
enter
movsb
mov
add
addb
imul
xchg
lods
sub
push
icebp
push
add
adc
pushl
push
push
addr16
orl
jg
dec
mov
cmpsb
jno
sub
pop
js
out
dec
and
mov
dec
icebp
je
hlt
adc
xor
mov
fcomip
ljmp
cwtl
ret
mov
movsb
mov
sbb
jl
xchg
xor
xor
xor
int
push
push
ret
push
push
push
movsb
pushl
fistpll
jbe
pop
icebp
sbb
xor
ljmp
pusha
mov
add
cmp
data16
jecxz
idiv
cmp
xchg
mov
les
test
mov
jne
aaa
jbe
pop
add
xchg
pop
jo
imul
push
inc
pop
or
subb
or
push
jmp
xchg
add
fsub
pop
jle
dec
loop
scas
out
jno
mov
cli
mov
push
in
stc
push
mov
popa
add
lcall
decl
sub
test
pop
push
mov
ss
push
jg
sub
mov
clc
or
iret
mov
loop
cwtl
lret
arpl
mov
pusha
lock
call
dec
imul
fwait
jbe
or
and
icebp
xor
divb
mov
loop
call
aam
iret
cltd
fcoms
aas
mov
push
mov
sbb
push
mov
lcall
or
xchg
sbb
mov
dec
jo
push
in
sub
incl
pop
adc
hlt
add
or
mov
push
mov
mov
js
push
lods
pop
jecxz
fidivl
xor
popa
enter
adc
loopne
out
sbb
testl
pop
cmp
or
inc
mov
arpl
mov
mov
adc
call
out
pop
xchg
pop
xchg
iret
xchg
lret
ds
pushl
jle
scas
adc
subb
lcall
cmpsl
xchg
lret
dec
fcos
push
repnz
mov
xor
in
and
dec
cltd
push
pop
mov
and
lcall
mov
shll
sbb
mov
xor
imul
xchg
rcrb
and
and
xor
adc
sub
adc
test
hlt
pushf
mov
push
ret
mov
push
push
inc
es
push
mov
dec
push
add
mov
pop
loopne
mov
ljmp
pop
ret
sbb
in
fmulp
fsubrl
jge
idivb
push
decb
mov
pop
ss
sub
hlt
aaa
push
push
stos
lods
push
mov
or
stc
jno
cmp
sub
jbe
mov
dec
xlat
addr16
inc
or
jne
cmpsb
gs
popa
xlat
pop
mov
mov
pusha
cs
out
popl
cmp
stos
pop
inc
out
inc
push
stc
mov
incl
int
jo
lcall
cltd
sbb
aaa
lcall
mov
cmpsb
pop
and
xchg
test
pop
xchg
fwait
data16
mov
jmp
arpl
xchg
popa
pop
cmp
add
movsb
pop
imul
dec
mov
cmp
mov
je
addr16
incl
xchg
stos
pop
cwtl
adc
mov
inc
stos
dec
adc
add
adc
outsl
cmp
fcomip
xchg
addb
cmp
divb
jg
js
mov
lock
cmpsb
decl
dec
sahf
mov
sti
incb
mov
ss
leave
pushf
ss
mov
sub
mov
mov
mov
cmp
xchg
fcomip
fimull
jnp
adc
xor
das
ficoml
fadds
addr16
decl
cmp
call
jg
test
push
mov
pusha
std
add
lcall
aas
rcl
sbb
insl
dec
cmpsl
js
xlat
add
inc
mov
and
js
and
lcall
dec
sbb
push
push
gs
jns
fcmovb
call
cli
leave
aaa
shl
outsb
into
xchg
and
jl
cmp
or
pushl
push
lods
mov
ror
mov
movl
lcall
test
xor
push
dec
inc
jb
test
sbb
dec
fs
icebp
mov
lods
sub
fs
lcall
adc
bound
sub
lcall
dec
loopne
ss
pop
fs
mov
push
mov
dec
outsl
jmp
xor
mov
mov
pushf
lods
sub
sub
test
lcall
out
addb
jp
icebp
mov
not
cld
xchg
lock
incl
pop
jl
or
push
push
std
repnz
in
test
testb
scas
jg
mov
sarl
xor
mov
mov
and
arpl
inc
addr16
inc
xor
test
out
jecxz
inc
mov
sahf
xlat
orl
nop
cmpl
ficompl
dec
cli
jmp
pushf
aad
cwtl
test
std
sarb
cmp
fldenv
lods
mov
fcomip
incl
mov
add
fisttps
ret
cmp
inc
pop
test
pop
xchg
data16
lods
inc
lods
scas
add
out
push
mov
nop
out
mov
inc
adcl
popf
xchg
ret
outsb
lea
cwtl
sub
inc
out
push
ret
mov
adc
inc
stos
xor
decl
fdivl
arpl
and
movsl
jle,pn
lods
call
sahf
divb
lods
pushf
jecxz
jg
dec
gs
jmp
or
test
or
cwtl
cmpsb
add
mov
sbb
sbb
stc
jp
dec
xor
mov
shrb
je
out
pop
jle
fisttps
loopne
jge
cmp
mov
orb
or
arpl
inc
inc
orb
sub
or
mov
shl
lcall
inc
sub
mov
sbb
scas
shll
xor
xchg
and
mov
and
addb
bound
pop
cmp
ljmp
loop,pn
mov
inc
xchg
pushf
cmp
mov
cmp
test
mov
dec
pop
mov
ret
mov
imul
gs
mov
hlt
push
sub
pop
add
call
lds
sbb
or
fildll
add
xor
rcrb
stc
jb
ret
test
mov
cli
lcall
sub
cmpsl
or
lret
cwtl
sub
sub
in
fnstenv
test
fwait
dec
std
data16
in
xlat
jo
ret
adc
mov
add
ja
and
in
mov
cmp
add
mov
icebp
loop
cli
aad
insl
cltd
xor
mov
push
imul
icebp
cmpsb
addr16
hlt
addr16
or
je
loop
cld
stc
sub
imul
aad
pushf
mov
neg
pop
std
pop
and
push
add
sub
jne
mov
sub
mov
dec
test
push
jl
mov
loope
decl
pusha
sbb
mov
push
sub
jo
push
les
arpl
mov
lea
jecxz
cmp
pop
mov
pushf
repnz
cmc
add
add
jg
pop
lea
aad
call
xchg
je
jno
sbb
push
sub
or
hlt
ljmp
and
out
add
popa
es
je
test
jns
fwait
rolb
fldcw
xchg
inc
adc
call
cli
dec
punpckhbw
inc
mov
dec
sub
pop
adc
lods
and
dec
and
xchg
xchg
or
incl
or
push
cmp
es
stos
dec
stc
les
jnp
test
inc
dec
inc
lcall
cmpsb
stos
sub
lods
js
aad
push
mov
mov
pop
mov
mov
stos
mov
pop
pop
inc
loop
add
cwtl
arpl
push
sub
sbb
or
in
sbb
mov
icebp
addb
mov
mov
rcll
mov
mov
lcall
imul
fidivl
aam
fidivrl
xchg
sbb
inc
push
aas
and
pop
pushl
cwtl
pop
cmp
movsl
lahf
test
mov
jb
movb
mov
cmp
orl
jo
stc
fcompl
adc
jle
jle
outsb
ja
addl
mov
mov
mov
jne
sbb
lea
lea
cli
or
push
inc
sahf
mov
decl
xor
jl
movsb
xchg
rcr
int
sbb
dec
repnz
outsb
ret
jo
cmp
scas
cli
lcall
gs
jmp
and
fwait
ss
nop
inc
pop
cs
mov
or
fnsave
adc
sbb
addl
out
jns
mov
sub
roll
stos
hlt
cli
movsl
and
dec
jmp
test
in
sub
add
adc
lods
push
sbb
scas
ljmp
jnp
add
cmc
sbb
sub
or
pop
enter
mov
sub
cmc
inc
out
jp
hlt
ret
pop
das
xchg
pop
jp
adc
popa
sahf
popf
jmp
das
mov
dec
xchg
jno
sarl
test
or
cltd
add
inc
data16
or
jmp
push
adc
jle
mov
push
pushf
ljmp
jb
test
adc
cmp
into
mov
loop
test
push
rolb
xchg
test
mov
push
cmpsl
mov
dec
add
and
fwait
add
pop
mov
and
incl
sbb
add
into
int
push
mov
push
cwtl
sbb
rclb
xchg
decl
sbb
mov
jb
sbb
enter
leave
dec
inc
mov
movsb
es
decl
outsl
arpl
push
xchg
nop
and
test
inc
or
xchg
in
jno
mov
jecxz
pushl
adc
dec
outsb
jb
and
xor
add
xor
xchg
incl
sbb
dec
lods
ljmp
cmpsb
pop
sub
sbb
and
or
cmpsl
inc
cld
pushl
push
cmpsb
adc
icebp
jle
sub
ror
daa
les
push
push
lret
out
scas
add
xchg
jmp
xchg
sub
sub
push
nop
jp
or
fcomip
pushl
lret
jge
jno
into
jecxz,pn
cmpsb
popf
push
pop
mov
pop
gs
xchg
push
lcall
decl
push
iret
sti
movsl
lods
xor
jg
scas
leave
dec
inc
pusha
inc
leave
cwtl
push
lds
xchg
push
adc
xchg
mov
addr16
shl
xchg
adc
jecxz
adc
lods
shlb
stos
jg
imul
xlat
mov
sub
incl
lahf
pusha
loop
mov
data16
incl
mov
or
sbb
jno
rcrl
adc
jnp
xor
ret
incl
aad
in
and
and
xlat
ret
xor
je
fcmovne
inc
add
aad
jge
pop
mov
cmp
sub
push
xchg
pop
lea
jmp
ljmp
lret
lods
or
jecxz
pushf
call
dec
inc
js
in
xlat
cmpsl
lret
std
sbb
dec
into
inc
xchg
push
pop
pop
sub
dec
in
fs
sbb
mov
es
popf
addl
mov
xchg
xor
iret
dec
push
pop
mov
push
movsl
pop
mov
decl
mov
push
mov
pop
jns
popa
fcmovb
cwtl
ret
inc
icebp
xor
fcoml
call
mov
mov
lret
arpl
add
mov
or
hlt
movsl
mov
dec
jmp
xchg
jns,pt
xor
adc
jne
pop
pushf
cmp
daa
pusha
fs
push
mov
and
sub
std
imul
pop
push
test
jle
fistps
xor
cli
imul
daa
cmp
test
jmp
xor
rcrl
adc
jg
call
and
lods
mov
cwtl
pop
or
adc
inc
pop
je
and
push
call
mov
clc
add
in
out
sub
lea
insb
enter
icebp
test
adc
mov
xchg
sbb
dec
dec
jmp
mov
cmpsl
lret
or
inc
lods
inc
cmpsw
rorb
push
mov
orb
sub
add
call
sub
adc
lea
xor
popf
pop
stc
xchg
sbb
fistpll
or
ret
push
mov
xor
imul
or
decl
rcrb
stos
hlt
movsb
loope
rorl
sub
lahf
fstps
sarb
fisttpll
lock
cli
sub
popf
or
mov
add
jmp
sub
pop
shlb
fldcw
or
mov
xchg
mov
ljmp
pop
pop
mov
inc
jmp
or
sub
stos
stc
lcall
xchg
push
lea
push
mov
faddl
mov
mov
pushf
repnz
mov
push
sub
call
sub
push
cmp
add
xor
scas
test
cs
cmp
inc
jecxz
lds
inc
jmp
sbb
mov
icebp
dec
dec
jo
ret
dec
cmp
xor
pop
pop
push
mov
dec
sbbb
pop
int3
jno
push
add
mov
nop
repz
call
jno
xchg
xchg
cmp
cmp
mov
or
mov
call
test
lds
fists
mov
push
jnp
fmull
sub
les
mov
push
in
incl
mov
and
pop
cld
xchg
lock
add
jae
inc
push
incb
stos
fildll
iret
add
mov
mov
jg
cmp
mov
xchg
mov
or
incl
test
ljmp
push
stos
sbb
cwtl
push
add
mov
push
addb
mov
pop
mov
jmp
int3
addr16
sbb
pushf
mov
mov
nop
xchg
loopne
xor
push
hlt
push
xchg
lea
jl
mov
addr16
sub
mov
inc
push
stos
sub
xor
push
jg
add
mov
jnp
mov
outsl
fsubl
in
outsl
xchg
loopne
call
and
inc
adc
mov
mov
and
movsb
fs
sbb
xchg
daa
jnp
cmp
dec
cmp
addr16
lods
mov
test
adc
pop
mov
je
cmpsl
adc
and
adc
jmp
xor
test
dec
test
dec
mov
sub
dec
rol
jbe
pop
subl
xor
decl
sub
test
sbb
gs
xchg
dec
or
movsb
push
les
add
loope
pushl
sbb
jae
or
push
in
push
cmp
mov
pop
sub
mov
cmp
mov
mull
sub
cli
cmc
call
adc
xchg
jp
add
push
mov
mov
pop
cmp
cs
fs
icebp
test
xor
add
decl
ret
pop
and
mov
or
popa
icebp
inc
jmp
ja
sbb
lret
bound
add
ss
mov
lahf
js
gs
add
jmp
pop
xor
insb
xchg
mov
out
adc
gs
xlat
jg
and
pushw
push
and
lds
inc
adc
sti
xchg
add
mov
mov
jg
push
jg
dec
sub
pop
test
cwtl
xor
ja
jae
adc
mov
pop
cmp
pop
icebp
ljmp
xchg
lds
ficompl
mov
outsb
push
pop
sub
adc
sarb
inc
and
in
sti
jmp
jmp
add
aaa
bound
stc
test
jbe
mov
imul
incb
and
sbb
xorl
lcall
aam
push
test
jns
cwtl
adc
adc
test
push
pop
call
fistps
push
jmp
pop
dec
xchg
shll
in
jb
mov
insb
aad
xor
sub
jmp
inc
cmc
and
ss
sbb
add
adc
xor
insl
add
lcall
imul
jp
push
sbb
orl
ds
push
repz
jmp
jl
popa
and
outsl
int
pop
pusha
cltd
ds
ret
and
shlb
jb
pop
xchg
inc
cs
fadd
and
push
mov
pushl
test
jle
shlb
mov
ljmp
jmp
ja
sbb
and
inc
jno
arpl
es
daa
addr16
jmp
mov
and
es
push
pop
mov
cmp
pop
popf
roll
or
pop
adcb
pop
add
sbb
sub
xor
inc
xchg
ljmp
and
dec
cmp
movsl
add
adc
inc
adc
jno
stos
mov
xchg
into
xor
stos
sti
fcomps
cld
pop
nop
hlt
mov
js
cwtl
popf
jne
icebp
test
push
les
in
sub
adc
and
jmp
dec
loope
cmp
cs
addr16
push
ss
add
push
inc
inc
xchg
cli
lahf
mov
or
jg
cli
xchg
mov
sbb
lds
xchg
sbb
xchg
les
insl
int
fildl
push
dec
loope
fists
jnp
popa
xchg
adc
dec
adcl
cmpb
iret
cmc
inc
cmp
jmp
push
outsl
bound
pop
imul
mov
xchg
jae
xor
cmpsl
cwtl
and
xchg
das
push
jo
inc
inc
js
mov
xlat
jge
out
cmp
and
bound
adc
dec
cli
incl
movsb
jno
jb
pop
xchg
test
adcl
das
mov
dec
jo
std
aaa
cltd
dec
mov
xorb
std
ja
mov
andb
daa
adc
in
inc
xlat
dec
inc
cmc
inc
pop
ja
je
adc
jecxz
push
fsubl
or
cmp
push
test
lds
popf
hlt
dec
xorl
mov
fstps
cmpsl
jns
xor
mov
cmp
lcall
adc
sbb
add
test
lahf
xor
lahf
push
clc
das
sub
out
popa
mov
push
decl
sbb
xchg
fiaddl
test
stos
ficoml
js
xlat
sbb
mov
mov
xlat
flds
call
test
js
sub
add
pop
lret
decl
mov
nop
add
stos
adc
jl
cltd
jl
call
add
adc
mov
and
enter
and
jge
xlat
and
inc
movsl
or
inc
dec
mov
scas
jb
mov
jno
rcll
sbb
push
cmpsl
bound
lcall
add
sbb
movsl
adc
mov
or
popa
sub
cmp
mov
mov
cmp
dec
mov
mov
fwait
pop
loopne
das
add
pushl
sub
rorb
sbb
sbb
cmp
dec
cmpl
jbe
icebp
pop
cmp
mov
call
test
push
sahf
into
daa
sbb
hlt
sbb
in
call
xchg
scas
xor
sti
lahf
or
xchg
and
incl
xchg
sub
inc
out
cs
adc
idiv
out
jp
int3
lods
mov
and
loopne
sub
fisubrl
mov
push
adc
cmpsb
add
push
mov
jp
addb
hlt
mov
mov
mov
xor
repz
xor
int
ljmp
jl
inc
xchg
mov
mov
mov
je,pt
cltd
sbb
lret
lcall
filds
adc
push
lcall
and
dec
bound
mov
fdiv
pop
dec
add
nop
test
jno
jb
mov
push
pushl
xchg
lahf
inc
lea
andb
movsb
sub
fwait
pushl
dec
jecxz
jp
movsl
add
inc
jmp
mov
sub
stc
test
or
pushl
std
nop
bound
and
jno
stos
ja
adc
mov
call
inc
cmp
mov
mov
mov
sbb
cmp
call
cmp
xchg
mov
mov
sbb
leave
lahf
lock
movsl
xchg
mov
pushl
lret
or
add
pop
dec
movsl
cmc
lods
int3
add
pop
test
pop
dec
dec
jmp
inc
enter
mov
pop
dec
mov
cmp
push
or
incl
mov
inc
dec
mov
fdivrl
pop
mov
mov
call
add
pop
xor
add
inc
mov
sti
or
sub
mov
sub
mov
bound
ss
jmp
cmp
test
xchg
outsb
in
mov
xorb
cmpsl
aaa
rcll
mov
or
cmp
add
cltd
dec
mov
jg
push
lret
outsl
shlb
mov
sub
daa
jg
jmp
or
cmp
divb
rcrb
repnz
loop
cld
or
sub
rorb
ljmp
or
fistpll
mov
and
lods
into
sub
xchg
stos
sub
mov
inc
mov
leave
fwait
mov
rcll
pusha
push
outsl
inc
adc
movsb
push
adc
cld
mov
in
xor
push
xchg
push
dec
or
fnstenv
ss
xchg
call
dec
add
jmp
adc
mov
mov
xchg
in
cmp
inc
xor
stc
das
sti
inc
or
push
inc
cwtl
xor
and
mov
cmp
xor
imul
sbb
jle
sub
push
jmp
push
push
movsb
sbb
inc
sub
inc
sbb
repnz
push
lret
out
sahf
adc
jge
pop
jmp
jb
jmp
and
add
adc
jl
ret
cmp
lret
sub
gs
jb
cmpsl
cs
pop
cli
pop
fadds
int3
movsb
xchg
jae
sub
push
rol
pop
mov
adc
sbb
add
shlb
decl
or
mov
mov
cmc
sub
add
inc
adc
sub
sar
decl
inc
stos
out
in
fisubl
sbb
xor
sub
sbbb
jo
cmpsb
jbe
mov
in
jnp
jae
pushl
adc
ret
add
push
sub
and
mov
xor
insb
jg
add
cmc
movsb
add
xchg
sub
mov
ss
xchg
hlt
pushl
lcall
xor
shrb
and
sub
adc
pop
or
out
outsl
clc
mov
movsb
inc
mov
clc
mov
jbe
sarl
push
movsb
ja
mov
cld
rolb
or
popa
inc
ffreep
push
pop
inc
fistpll
inc
cli
decl
lret
movsb
adc
aam
pop
ret
mov
sub
xor
pop
ljmp
scas
push
stos
xchg
sub
and
imul
aaa
inc
notb
pusha
push
inc
and
jmp
lret
popa
jmp
sub
mov
je
loope
call
dec
xchg
adc
mov
cmpsl
mov
decl
mov
or
jbe
mov
test
mov
lea
sub
xchg
mov
hlt
jg
xor
jne
sub
test
ljmp
push
icebp
shll
mov
ret
out
lods
mov
sub
cmp
lcall
ret
cmpsl
mov
inc
adc
hlt
push
cmp
pop
cmc
mov
push
mov
jns
pop
cmp
mov
add
insl
lds
inc
sbb
and
fisubl
jg
shlb
pop
daa
fs
dec
adc
jp
pop
dec
adc
lock
inc
dec
rcrb
xchg
mov
int
cmp
lcall
mov
jl
jl
dec
test
cmpsl
mov
add
add
movsb
incl
push
ja
cmp
push
aam
add
shl
daa
push
movsb
ljmp
out
clc
int
mov
ljmp
inc
push
push
out
and
loop
and
lcall
push
movsl
out
add
xchg
and
adc
out
mov
jg
mov
sub
sub
cmp
pop
subb
cmp
jno
xchg
adc
add
fstpl
jne
lahf
hlt
fs
dec
mov
dec
nop
jb
mov
sub
adc
pop
dec
adc
mov
dec
div
decl
orl
out
pop
out
cld
mov
pop
add
decl
xor
addb
fstl
inc
outsl
sub
push
inc
call
push
mov
bound
nop
xor
mov
mov
pop
out
inc
xchg
lcall
or
fstl
jmp
jmp
faddl
fstl
insl
decl
xor
cmc
mov
add
push
xor
add
cld
inc
sub
sbb
jp
popa
cpuid
and
jg
dec
lods
jmp
dec
enter
repnz
xchg
add
xor
incl
gs
outsl
push
out
sub
loopne
mov
les
inc
les
call
decl
std
cmpsb
mov
repnz
mov
ds
stos
inc
aaa
call
hlt
mov
ja
lret
xor
and
push
or
and
dec
push
push
fcomip
mov
in
dec
pop
gs
xor
icebp
jne
int3
sub
mov
cmp
mov
push
push
inc
adc
sbb
fxam
jbe
pushl
mov
mov
xor
stos
xorb
xor
inc
andl
or
mov
call
pop
cld
lock
inc
test
xor
lcall
mov
adc
inc
ret
shlb
add
mov
pop
dec
sbb
incl
xor
cld
add
repz
rcrw
outsl
dec
push
cmp
incl
imul
fs
push
stos
mov
or
mov
pop
add
or
add
mov
les
xor
fisubs
cld
jge
and
push
ret
jbe
icebp
xor
ret
out
js
jns
fsubl
shl
fisttps
ret
push
xchg
mov
or
int
aaa
mov
push
push
pop
sahf
jnp
in
out
popf
aas
insl
mul
sbb
cltd
imul
ret
pop
add
xchg
xchg
test
loop
daa
ljmp
lcall
mov
jbe
loopne
sub
scas
orb
into
cmp
icebp
jg
inc
in
xlat
push
insb
clc
icebp
or
mov
push
outsb
ret
sahf
addl
aas
xchg
push
push
jmp
clc
out
push
fsubs
and
es
shrb
data16
mov
cmp
cmp
push
ljmp
pop
pop
movsb
ret
mov
inc
jl
les
sbb
mov
adc
pop
andl
and
dec
sbb
sub
rolb
or
add
cs
rorb
sti
pushl
dec
xor
xor
pop
pusha
int3
cmp
xchg
pusha
dec
mov
jg
mov
ds
pop
into
mov
mov
cmp
push
test
outsb
jg
orl
dec
daa
xchg
xor
dec
inc
mov
push
and
lds
roll
push
mov
es
xchg
es
push
scas
test
dec
sbb
stos
mov
jmp
in
movsl
mov
orb
pushf
scas
xchg
sub
fidivl
cmp
movsl
stos
test
aaa
cld
sbb
lret
cmp
and
movsl
mov
das
jae
and
ret
ljmp
dec
cs
jno
lea
or
fmulp
stos
cmpsb
mov
push
mov
xor
sahf
xor
in
and
popa
and
incl
pop
js
pusha
lds
mov
inc
add
xlat
mov
mov
push
out
rolb
or
movsb
jo
pop
std
lcall
in
movsl
adc
js
daa
sbb
insl
mov
jb
lahf
jecxz
mov
mov
mov
cmp
ss
add
jo
std
insb
jbe
lcall
test
cmpsb
inc
xor
in
loope
cld
decl
cmp
sbb
sbb
lds
iret
dec
loope
lea
inc
mov
fisttps
jecxz
rol
pop
xchg
push
inc
and
outsl
dec
xor
and
clc
push
mov
mov
ss
sbb
rorl
aad
dec
xor
push
jmp
push
int
jmp
bound
add
xchg
add
adc
xor
fst
orl
frstor
adcb
je
push
xor
jg
ja
std
push
fildl
and
sub
aaa
sub
shll
gs
lea
jmp
or
scas
shrb
test
test
mov
lcall
dec
stos
push
mov
sub
or
jbe
lods
mov
xchg
jge
xor
dec
jmp
adc
add
das
fs
adc
pusha
cmpl
test
dec
lret
cli
incl
jl
hlt
mov
movsl
lods
out
call
mov
xchg
mov
sub
daa
mov
ret
adc
clc
mov
ret
sub
xchg
sbb
xor
adc
call
sub
es
mov
push
ret
cmp
nop
clc
dec
sbb
mov
mov
aaa
jp
sbb
push
mov
icebp
mov
inc
movsb
jae
enter
adc
xchg
movsb
xor
cmp
ds
incb
pop
mov
adc
in
gs
into
cwtl
fs
das
rclb
adc
fsubrs
xor
dec
inc
or
xchg
push
in
push
js
inc
dec
sbb
inc
popf
push
xchg
mov
cmp
adcb
mov
jmp
jmp
mov
jno
dec
dec
adc
pop
xchg
dec
sub
sub
lock
dec
lods
jno
ret
out
test
adc
xchg
jg
call
mov
imul
sbb
or
mov
adc
test
int3
push
pop
call
mov
jnp
addl
mov
out
xor
les
filds
inc
int
jns
ret
or
jae
stos
shlb
adc
jmp
dec
mov
lds
mov
lahf
mov
loop
gs
movsb
cmp
dec
push
or
lahf
icebp
sbb
imul
mov
pop
pop
xor
fcomps
cmp
and
decl
fmull
inc
and
xchg
sbb
cmpsb
mov
mov
and
jmp
sub
pushl
mov
sub
push
into
push
mov
xchg
dec
mov
lcall
xchg
dec
add
ss
loope
dec
xor
cmp
pop
jne
sarl
mov
push
lea
lret
xchg
xchg
push
gs
mulb
fcomip
push
mov
lods
data16
hlt
aaa
mov
sub
cmp
dec
test
enter
pop
rcrl
mov
test
and
incl
xchg
xchg
out
xor
or
xor
rorl
insl
repnz
adc
push
inc
lock
incl
push
mov
xor
arpl
mov
lret
mov
aaa
pop
loopne
popa
fs
out
push
fisttpl
cmpsb
mov
lcall
mov
inc
leave
dec
js
ffree
mov
jmp
adcb
hlt
or
data16
rcrl
aaa
cld
jg
jl
cwtl
les
icebp
xor
shrl
aad
inc
push
insl
or
lcall
shlb
fsubs
xor
jecxz
stos
mov
popf
int
sub
lea
jg
sbb
aad
jbe
fcmovnu
enter
hlt
icebp
lods
test
add
scas
popa
mov
clc
sbb
lcall
jo
lds
rolb
inc
dec
mov
inc
repz
lcall
popf
sbb
cmp
pop
fdivp
xchg
and
rorb
push
push
xor
cs
dec
push
xchg
movsl
dec
push
pop
xor
ljmp
xchg
pop
pop
rolb
fcoml
lahf
mov
lea
adc
xor
xchg
ljmp
jmp
pop
lock
dec
rol
pushf
cwtl
pusha
or
dec
clc
lcall
imul
lock
jne
jecxz
inc
incl
mov
sub
jmp
hlt
pop
dec
xchg
call
call
push
bound
loope
or
scas
or
xchg
push
outsl
lcall
dec
or
mov
imul
jo
jp
sbb
mov
cmp
stos
fcmovbe
scas
mov
dec
xor
xchg
bound
push
dec
jecxz
jae
aad
fisubrs
cmp
rcll
mov
jg
incl
xor
xchg
xor
movsb
inc
sbb
pop
in
mov
xchg
pop
inc
stc
xchg
or
push
dec
dec
cmpsb
sub
mov
popa
out
gs
lahf
or
or
rclb
sahf
sbb
call
jl
xchg
xorb
std
out
xlat
mov
movsl
sbb
fdivrp
js
or
into
mov
adcb
popf
jmp
or
outsl
jle
cmp
cli
negb
call
mov
repnz
ret
push
fnstcw
pop
xor
sarb
push
mov
mov
das
adc
test
mov
sahf
cmp
jmp
out
jo
addr16
sbb
mov
rorb
iret
je
iret
or
pop
xor
sbb
test
es
test
addr16
loop
adc
sub
mov
sti
call
inc
pop
and
out
test
or
addb
lock
adc
ljmp
pop
add
sub
and
repz
or
loop
cmp
ljmp
test
xchg
push
add
test
dec
orl
fiaddl
bound
jge
inc
adc
push
scas
push
and
leave
clc
lods
mov
lea
xchg
adc
repz
inc
pushl
mov
ljmp
and
and
add
stc
cmp
dec
movsb
mov
xchg
fsts
inc
jb
jmp
lods
jo
lods
arpl
lret
cwtl
sbb
add
lock
mov
pop
or
adc
or
adc
je
pop
or
mov
push
add
push
pushf
add
rol
sbb
add
pushl
and
in
add
and
xchg
adc
pushl
add
int3
add
ret
ret
xchg
and
ret
in
in
sub
push
sub
inc
inc
mov
int3
cmpb
xorl
xor
cmc
cmp
addb
pushf
sbbb
rorb
xor
xor
mov
lahf
out
cmp
popa
cwtl
cwtl
mov
mov
or
fildll
std
loopne
and
es
nop
cmp
or
pop
lret
dec
cld
pushl
mov
and
in
call
stos
add
addb
cmp
and
jno
leave
lock
cltd
push
test
xor
decl
mov
test
dec
cmp
enter
inc
jmp
loope
decl
insl
jmp
loop
xchg
loop
mov
js
xchg
inc
das
sbb
out
test
mov
lcall
mov
movsb
fnstenv
or
test
call
incl
mov
sub
imul
adc
test
mov
mov
mov
lcall
mov
xor
test
test
fwait
and
and
pushl
rclb
mov
mov
loopne
pushf
lea
call
cmp
mov
dec
shlb
pop
mov
mov
pop
cmp
mov
aaa
dec
cli
xchg
xchg
mov
mov
push
incb
enter
dec
ja
and
jecxz
jecxz
movsl
lods
or
arpl
sub
std
popa
sahf
xchg
out
cltd
jmp
stos
push
push
push
sub
xor
mov
stos
clc
or
add
mov
jmp
xchg
xor
cwtl
mov
or
mov
inc
lds
pop
pop
push
ret
mov
inc
add
nop
add
pushl
push
pop
sub
xorl
xor
or
mov
mov
pushl
push
fcomps
mov
inc
cwtl
lods
cmp
lock
cwtl
loope
xchg
add
mov
mov
mov
dec
push
jmp
test
xchg
lcall
scas
push
jmp
jecxz
add
mov
insl
enter
outsl
je
and
lcall
and
adc
ret
sub
mov
or
icebp
addb
nop
sub
aaa
movsl
lret
lcall
pusha
mov
cmp
fstpt
mov
sbb
pop
mov
fwait
and
incl
push
fcoms
stc
and
ret
cmp
aam
lret
enter
xchg
incl
sub
xchg
ret
and
sbb
iret
loope
mov
jp
sub
pushl
cld
jmp
dec
mov
inc
adc
or
loop
ljmp
push
arpl
add
xor
test
push
arpl
sub
or
sbb
dec
push
cmp
sbb
call
rcrl
dec
scas
orl
mov
test
nop
xchg
shrl
ljmp
jnp
mov
sbb
xchg
pop
dec
mov
dec
loop
xchg
hlt
cmp
jecxz
lcall
pop
mov
xor
cmpsb
ret
pop
ret
mov
and
xor
sbb
sub
bound
mov
fs
scas
div
mov
mov
mov
cltd
cltd
dec
xchg
adc
xchg
js
out
add
in
movsb
dec
mov
adc
add
sub
add
ljmp
push
or
xor
popf
sub
inc
dec
cmpsl
adc
js
xchg
aas
mov
ljmp
adc
and
cmp
jle
cmp
xor
and
and
xor
xor
and
pushl
push
adc
fidivrl
loope,pn
mov
fwait
shlb
mov
mov
in
pushf
push
or
adc
call
and
lcall
mov
clc
ljmp
add
push
cwtl
xchg
push
test
add
fists
das
sub
mov
mov
xchg
movsb
stos
lret
jmp
cmp
subl
pop
prefetchnta
ja
sbb
add
xchg
xor
inc
lods
cwtl
cmp
fldcw
arpl
popf
call
fs
sub
or
int3
cs
inc
shl
adc
jmp
jg
cmp
jnp
and
aam
repz
or
mov
mov
mov
or
sub
and
lods
ljmp
and
popa
lods
es
and
and
outsl
cli
call
mov
cmp
mov
xchg
inc
loop
and
or
mov
xor
jmp
insb
mov
cmp
pushf
lret
inc
sbb
movaps
or
lcall
adc
xor
and
xor
cmp
repnz
stos
jg
xchg
mov
stos
rol
rol
sub
and
fdivrp
movsb
xchg
pop
or
imul
or
adc
sub
cwtl
pop
xchg
cmp
fidivs
test
loope
fsubrp
les
lods
push
cli
push
je
addl
pusha
add
and
sbb
test
inc
sbb
pop
fwait
mov
stc
popf
xchg
push
xor
adc
inc
clc
lods
push
pop
and
mov
call
sbb
leave
imul
movsl
adc
decl
add
cmc
test
adc
xor
std
movsl
lret
icebp
shll
call
push
sbb
int3
push
or
xchg
jmp
mov
sbbl
call
cli
lahf
insb
orb
stos
fisubl
lahf
mov
or
ljmp
addl
or
mov
xorb
xchg
jne
fistpl
mov
decl
xchg
orl
int
and
add
inc
lods
lahf
nop
call
mov
mov
mov
aaa
mov
lret
jno
pop
dec
xchg
test
push
dec
and
pop
jne
repz
jmp
test
ljmp
fisubl
sub
test
jg
xchg
mov
std
jae
and
scas
pop
dec
and
xorl
and
imul
incl
push
xor
fdivrp
das
test
sub
int
out
andl
dec
ret
jbe
rolb
jg
lcall
jb
pushf
dec
jp
insb
popa
icebp
gs
mov
scas
jne
paddusw
pushl
cld
sbb
mov
sti
in
std
cmp
stc
int
sbb
loopne
out
push
decl
addr16
filds
xchg
addl
adc
push
pop
into
andb
pop
xor
mov
lods
arpl
cwtl
fimull
gs
sbb
inc
fwait
sahf
mov
xor
mov
loope
inc
les
jo
mov
cmp
incl
dec
es
ret
pop
les
popa
bound
bound
jmp
sbb
push
sbbl
repnz
call
pop
imulb
pushf
int
test
xlat
jo
sti
mov
incl
sbb
cmp
call
mov
sub
dec
pushl
push
jecxz
sbb
enter
inc
sub
sbb
pop
clc
decl
in
js
movsl
icebp
test
cmp
clc
test
adc
cmp
or
add
mov
jns
mov
in
fcomip
push
dec
mov
mov
dec
xor
inc
cld
sub
incb
mov
mov
xchg
repz
sub
jne
xlat
dec
cmp
in
xchg
or
adc
mov
ljmp
rorb
pop
bound
sbb
pop
xchg
jecxz
adc
sub
lock
incl
push
sbb
fmuls
jp
icebp
mov
push
push
addb
arpl
fnstsw
mov
call
mov
inc
ljmp
jl
sub
popa
shl
test
sahf
adc
lret
ds
lds
rclb
movsb
sar
pushf
aaa
and
shlb
mov
xor
shlb
jmp
int3
and
xchg
and
scas
mov
cmc
cmp
add
jo
inc
mov
cmp
aaa
xchg
lcall
fwait
loopne
xorb
js
cltd
pop
dec
fldt
jo
or
icebp
cmp
adc
pushl
fwait
int
movsl
fsubl
mov
fs
jge
movsl
popa
insb
int
xor
nop
mov
or
jmp
iret
mov
lcall
sbb
sar
mov
in
fldl
jg
mov
in
mov
iret
fstl
pushl
inc
rorb
test
pop
cmp
and
inc
mov
insb
add
jp
push
jmp
sahf
xchg
add
push
nop
shlb
es
or
xchg
fisttps
mov
push
add
pop
jp
jbe
push
or
into
test
out
addr16
xor
jg
call
subb
movsl
test
ja
imul
std
fimuls
call
call
scas
pop
inc
cwtl
jmp
push
inc
imul
fs
sub
or
mov
mov
pushf
testb
or
mov
mov
pushl
daa
fs
mov
sbb
stos
mov
mov
or
scas
xchg
xor
cmpsl
fisttpl
xchg
sub
pushl
xchg
lods
or
xchg
mov
arpl
cmp
lcall
ficoml
clc
mov
je
xchg
cmp
std
mov
mov
mov
cli
fsubr
arpl
stos
test
pop
jo
mov
loopne
decl
testb
stos
lret
into
nop
adc
nop
das
ljmp
lcall
pop
mov
sti
mov
or
fldl
dec
add
gs
mov
and
xchg
xor
mov
stos
outsb
sub
and
aaa
shrl
jo
out
clc
movsb
fucom
movsb
add
imul
dec
shlb
sub
shll
out
add
rcrl
jno
adc
leave
js
push
sbb
bound
ss
addr16
loopne
fisubrs
push
mov
je
test
std
mov
in
push
decl
inc
cld
xor
out
mov
cmpsl
dec
and
lcall
decl
cmpb
jl
pop
mov
and
imul
lds
lret
shr
leave
jl
mov
mov
xlat
fidivl
dec
addr16
rcl
bound
fwait
cs
out
jo
inc
lcall
push
in
jne
rol
pop
or
xlat
loop
sbb
push
mov
bound
add
dec
jp
pushl
add
or
and
mov
adc
cs
xor
enter
call
stos
add
daa
dec
xchg
movsl
xchg
mov
test
popa
aad
push
scas
pop
mov
leave
ljmp
addl
push
cmp
jl
into
int3
dec
dec
ss
push
test
mov
out
cmpsb
push
hlt
mov
or
push
stos
xchg
orb
jnp
in
jno
mov
mov
addr16
pushf
fxch
cwtl
sbb
pop
lods
sbb
call
mov
jl
out
fdivl
arpl
cmp
call
jae
cmp
repnz
mov
ljmp
jnp
jmp
filds
popa
cmp
fwait
test
lret
xchg
pop
mov
adc
adc
jl
cs
ja
pop
sbb
icebp
jge
clc
cli
ljmp
ret
sub
ljmp
add
sub
mov
fwait
push
js
push
mov
stos
xor
ljmp
xchg
leave
sub
xchg
sub
mov
call
jl
or
xlat
lock
or
mov
dec
adc
mov
mov
sbb
movsl
das
stos
cld
jb
test
divb
lock
adc
dec
pushl
or
pop
and
inc
add
leave
lcallw
inc
push
push
addr16
je
call
cmpsl
lahf
jg
aam
xchg
in
push
ret
jmp
sub
sbb
icebp
xchg
add
mov
add
cmp
mov
test
test
scas
movsb
lods
pushl
mov
xchg
inc
addr16
jno
sbb
test
lcall
jg
jmp
xor
inc
adc
popl
inc
jo
adc
rclb
jg
sub
dec
jno
xchg
dec
pop
lea
xchg
or
stc
jg
xchg
push
in
mov
sbb
push
repz
or
sti
mov
inc
incl
xor
test
jmp
sub
lcall
inc
or
sub
ret
and
popa
data16
mov
lock
lahf
mov
xor
add
call
ss
lods
leave
sbb
jecxz
rep
cmp
mov
push
pop
ljmp
sub
jae
dec
push
popf
jb
cmp
mov
dec
xor
popf
pop
js
pop
mov
decl
pop
jnp
rcll
pusha
xor
pop
mov
mov
addb
fsubrs
pop
bound
lock
call
mov
mov
mov
dec
mov
ljmp
xor
adc
mov
jecxz
push
mov
decb
jmp
xor
sub
pop
sbb
mov
xor
ror
xor
lcall
jl
aam
xchg
pop
outsb
sbb
push
adc
shrb
ret
jg
popf
mov
rcr
cmp
test
xchg
xchg
dec
mov
mov
incl
add
xchg
imul
test
push
xchg
cltd
pop
mov
aas
roll
in
decl
jbe
push
inc
js
sub
lods
in
test
stc
adc
nop
sbb
and
repnz
ret
mov
inc
add
push
or
mov
push
ret
sub
xor
xchg
cmpsl
in
popa
xor
hlt
ds
in
mov
push
pop
lods
add
and
sbb
adc
push
popf
jg
sub
in
cwtl
cs
xor
lds
incl
shrb
adc
dec
cwtl
aaa
mov
sbb
dec
enter
mov
pushf
shll
jo
dec
inc
rcrl
adc
push
fs
lcall
cmp
fcompl
cmp
into
outsl
jo
sbb
cmpsl
incl
ret
jae
mov
jmp
or
jns
push
push
pop
popa
dec
push
dec
vmwrite
cmp
mov
ljmp
fxtract
and
add
dec
xorl
inc
js
pop
xchg
xchg
mov
fdivr
sbb
push
in
add
rolb
cmp
inc
mov
mov
cmc
js
cld
mov
fcoml
enter
inc
sub
jg
xchg
and
test
and
lods
cmpsb
xchg
dec
and
rolb
cli
incl
xchg
scas
movsl
sub
add
nop
incl
bound
sahf
icebp
cmp
cmp
icebp
dec
dec
ja
fsubrp
lcall
mov
adc
sbb
xchg
into
pop
cmp
add
out
insb
cld
sbb
xchg
push
cli
xor
test
dec
sahf
ljmp
xchg
add
cmpsl
xchg
test
xchg
cli
push
rorb
mov
sbb
jmp
xor
push
or
sub
fs
test
lret
mov
and
in
mov
sub
sbb
or
or
jno
repnz
test
and
push
stc
mov
add
fcmovnb
add
pop
inc
pop
call
adcb
mov
mov
mov
inc
add
jg
lds
sub
lea
adc
pop
xor
int3
pusha
cmp
sub
xchg
stc
mov
sbb
in
aaa
std
incl
popl
xor
mov
gs
mov
popa
test
je
jg
clc
inc
insb
push
push
mov
repz
loope
inc
cmp
into
jb
adc
jg
loope
dec
mov
cltd
xor
fdivr
in
fcmovnbe
xor
pushl
lret
fmull
mov
jb
incl
adc
push
ljmp
lods
add
pop
in
lret
sbb
sub
lret
pushf
and
jno
xchg
sbb
jmp
mov
cltd
stos
and
loope
fidivrs
push
inc
xor
es
jg
leave
ret
add
xchg
xor
sub
sbb
rcrl
sub
decl
pop
icebp
xchg
sahf
js
call
test
scas
cmp
cld
mov
incl
jae
xchg
mov
push
cmp
dec
jo
jns
shlb
or
push
mov
iret
and
ret
xchg
outsl
cmp
xorl
mov
fildll
call
lahf
pusha
scas
and
pop
rorl
adc
lcall
rol
fistpll
push
rorb
mov
jle
les
call
or
repnz
mov
push
cs
jp
xorl
outsl
cwtl
loopne
mov
mov
sub
incl
stc
xchg
push
sbb
mov
ds
jo
sbb
and
lcall
mov
sub
rcll
xchg
addr16
outsb
fdivr
stos
mov
xchg
sub
pop
push
ret
inc
sbb
dec
xchg
fnstenv
inc
jp
sub
push
xorb
hlt
icebp
ljmp
addb
mov
jle
mov
push
insl
out
ljmp
rol
mov
fisttpll
imul
and
sbb
ds
jmp
and
push
fcomip
push
shl
in
push
jge
push
aaa
neg
outsb
jne
rolb
sti
in
push
data16
je
negl
pop
or
sbb
sub
fcompl
sub
sbb
jmp
cmpl
mov
jmp
sub
mov
push
rolb
icebp
jmp
clc
lret
cmpsl
sahf
es
jnp
outsl
js
loop
iret
test
cmp
sub
jbe
nop
dec
sub
call
cmp
addr16
ljmp
mov
pop
sub
pop
xchg
lock
sbb
jmp
mov
movsb
jmp
pop
xor
aam
pop
jp
in
cmp
outsb
inc
fdivrp
dec
jge
sbbl
lret
xor
xor
push
cwtl
or
ja
add
aad
cmc
je
and
pop
subb
rolb
scas
ss
lret
xchg
dec
pop
adc
cwtl
cmc
jnp
cmpsb
out
cli
dec
pop
push
ret
and
fs
jmp
mov
das
dec
call
loope
insl
nop
jb
jne
adc
mov
ficoml
das
popa
pop
lds
mov
mov
jecxz
je
sbb
test
mov
arpl
es
jae
pop
dec
addr16
mov
or
addb
call
int3
mov
mov
in
fdiv
and
inc
dec
lcall
inc
xchg
mov
mov
test
lcall
sub
jno
xchg
xchg
xlat
pop
fimull
enter
aad
mov
mov
xchg
cmp
enter
cmpl
pusha
or
decl
mov
mov
insb
push
cmp
xbegin
or
loopne
fchs
xorl
inc
inc
push
inc
lods
mov
mov
lcall
xor
iret
mov
adc
pop
or
mov
incl
adc
into
movsl
subb
jno
xchg
mov
ljmp
fbld
mov
push
cli
sbb
iret
inc
call
sti
xor
or
mov
cmp
dec
push
in
add
inc
add
jno
dec
mov
cli
decl
cltd
fidivrs
mov
leave
add
nop
out
mov
xor
mov
or
ljmp
inc
push
orb
aad
push
aas
pop
sahf
std
adc
outsl
mov
enter
movsb
xadd
mov
je
call
adc
in
inc
out
inc
pop
cmc
dec
push
dec
addps
adc
lcall
pop
dec
and
lods
inc
cmp
pushf
and
int3
sub
inc
popa
xchg
cmp
sbb
cmp
jo
or
push
arpl
int
rcll
imul
sbb
push
sbb
shrl
inc
push
xchg
jo
lcall
and
jb
in
fcomps
jne
push
rcll
mov
jp
xchg
ja
dec
mov
xchg
fld
fistl
jle
and
idiv
jge
dec
jne
pop
jbe
mov
adc
hlt
inc
cmpsb
mov
testb
mov
std
mov
dec
rolb
test
push
fsubl
mov
nop
ljmp
dec
loop
dec
repnz
dec
call
int3
in
movsb
push
idiv
add
push
shlb
movsl
push
dec
in
hlt
roll
pop
loop
sar
movsb
lock
scas
test
cmp
jg
pop
adc
faddl
int
xchg
mov
inc
cmp
shl
adc
inc
nop
dec
std
pop
and
dec
movsb
insb
loopne
cmp
mov
setae
call
sbb
rclb
pushl
adc
mov
cli
mov
sbb
mov
test
insb
nop
fsubrl
outsl
and
shrl
dec
lcall
movb
stos
enter
adc
lcall
push
imul
fstpl
stos
push
adc
fiaddl
cmp
push
test
ss
ljmp
orl
adcb
lcall
add
sahf
mov
sahf
push
loopne
pop
cmp
cmpsl
inc
fisttps
loopne
sub
mov
add
add
cwtl
lcall
sbb
repnz
aaa
and
lcall
int
sbb
ret
cmp
int3
gs
sbb
pop
insl
movb
into
lods
push
clc
xchg
xor
sti
cmc
push
insb
add
and
jae
jg
push
jbe
push
mov
and
movsb
xlat
mov
mov
inc
andb
ljmp
pop
movsb
jb
pop
es
in
mov
push
andb
dec
inc
std
int
nop
les
lcall
test
repnz
mov
je
jmp
lods
pushf
mov
jmp
fdivrl
push
int3
fdivrl
lock
incl
mull
cwtl
dec
out
ds
rorl
movsb
addb
or
dec
jmp
loope
jno
sbb
add
or
fsubs
lea
sbb
add
mov
xchg
mov
mov
es
clc
mov
pop
pop
andl
mov
inc
push
incl
dec
lods
xorb
loopne
push
int3
rol
cmc
push
lods
push
addl
or
test
xchg
roll
dec
in
lret
sbb
pop
outsl
jg
std
stos
sahf
andl
push
in
jbe
inc
push
mov
jmp
movsb
jge
ljmp
jl
cmp
cmpsl
in
lds
fiaddl
js
sub
fwait
jg
adcb
gs
and
sub
rolb
cmp
xor
insl
push
sbb
mov
ss
incl
rcrb
adcl
pop
sbb
jno
test
hlt
jg
inc
or
inc
push
pop
jns
and
mov
subl
xchg
aad
out
andl
mov
push
les
add
fcoml
sub
adc
gs
stos
mov
inc
rclb
in
sub
enter
scas
test
dec
imul
dec
jl
inc
sub
mov
inc
out
cli
push
sub
into
jmp
int3
leave
into
xor
pop
xchg
test
jmp
in
push
or
aam
imull
push
loopne
movsb
call
aam
push
inc
enter
fdivrs
lods
cmpsb
ljmp
and
outsb
fadds
rclb
inc
sbb
inc
add
in
xchg
aam
push
cmpsb
cmc
incl
or
mov
pop
mov
test
lea
sbb
add
cmp
jne
cmpsb
dec
jl
mov
add
popa
fcomip
ja
scas
inc
in
stos
xor
dec
push
stos
out
add
pop
push
mov
je
add
xchg
or
push
mov
push
mov
push
or
das
mov
aad
iret
pop
in
hlt
into
push
cmpsb
jge
out
fldcw
jmp
xchg
rol
pop
push
int3
add
adc
push
adc
push
pop
aam
stos
push
sbb
xor
cmp
addr16
andb
push
sbb
lock
ljmp
push
mov
into
mov
jl
push
sbb
lcall
lret
sbb
pop
call
dec
xchg
cmp
insl
sub
je
xchg
call
cwtl
fisttpl
sub
in
mov
xlat
push
and
xchg
int
mov
mov
or
and
adc
dec
sub
mov
flds
inc
ljmp
jb
adc
in
out
call
outsb
lds
mov
enter
jmp
sbb
dec
fs
add
enter
mov
mov
aam
xchg
mov
sub
add
add
les
xchg
xchg
adc
sbb
imul
int
es
jne
inc
xor
in
jmp
dec
push
push
push
and
dec
adc
sub
or
cmp
adc
icebp
jg
call
incl
xor
jne
stos
scas
and
outsb
out
adc
push
cmc
lcall
rcrl
pop
jl
in
push
inc
cs
cmp
fidivl
and
push
pop
adc
or
and
fcompl
pop
hlt
das
cli
test
insb
sub
clc
adc
aad
in
sti
mov
mov
sbb
and
or
ljmp
rcrl
leave
sbb
pop
int3
add
xor
insb
or
mov
lret
rolb
cmp
stc
icebp
add
or
dec
jo
in
adc
dec
pop
outsb
push
fildl
pop
dec
int
in
xchg
or
jg
incl
xchg
xchg
adc
jo
in
mov
pop
sub
adc
std
incl
movsb
adc
jo
ret
xchg
fcoms
dec
fsubrl
jmp
mov
adc
in
push
xor
pop
mov
rorl
repnz
jmp
dec
orb
inc
sbb
ret
inc
mov
incl
sbb
inc
cmp
imul
jb
add
jno
das
xchg
lods
call
fdivrl
xor
sti
loope
mov
fnstenv
push
mov
mov
jno
sub
fdiv
icebp
addb
into
mov
and
mov
xor
mov
sub
int3
cli
stos
repnz
cwtl
or
jno
xchg
incl
inc
pushl
mov
sub
push
inc
jbe
aad
mov
fists
jmp
jb
or
sub
jecxz
andl
push
repz
call
inc
add
cmp
mov
pop
mov
les
test
lds
flds
sub
add
add
imul
adc
sbb
call
loopne
cmp
sbbb
push
jge
adcb
mov
cli
fcomip
fwait
sub
add
add
adc
ljmp
test
push
andl
outsl
mov
mov
push
sub
js
jg
test
mov
mov
mov
fwait
jb
lea
shlb
dec
or
jmp
lcall
decl
cmc
xchg
dec
xor
xchg
enter
pop
pop
inc
les
mov
push
hlt
and
mov
adc
mov
inc
jne
pop
dec
and
ljmp
iret
mov
push
dec
mov
mov
stos
and
xor
adc
adc
cmc
jg
rorl
lods
xchg
daa
das
in
mov
std
out
js
cmp
xlat
mov
jg
pop
mov
pop
loop
in
sbb
out
popa
jns
call
or
adc
mov
or
dec
push
mov
xchg
out
bound
jecxz
subb
cld
call
std
or
negl
or
xchg
inc
inc
fdivrp
decl
xchg
and
cs
call
incl
loopne
push
leave
cltd
add
hlt
jg
nop
lret
or
sbb
insb
mov
es
pop
cld
adc
test
test
jnp
lods
loope
cwtl
mov
cmp
mov
mov
sbbb
pushl
loope
sbb
sbbb
mov
cmp
mov
sub
js
add
dec
pop
sbb
int
jo
and
or
outsb
lods
jg
lods
aad
mov
add
and
pop
es
mov
cmp
sahf
lock
call
lods
inc
xor
xchg
xor
ja
adc
xchg
in
test
lcall
push
cmp
cwtl
push
cmpsb
adc
pushf
push
or
jnp
cltd
adc
adc
inc
mov
imul
out
lcall
scas
or
jl
mov
dec
pop
pop
lret
push
stos
and
in
fwait
mov
pop
inc
push
jno
je
pusha
movsb
cld
hlt
mov
pop
push
decl
xchg
sarb
mov
fbstp
mov
add
out
and
xlat
jo
xchg
mov
fistpl
mov
inc
and
inc
lods
cltd
or
inc
fldenv
inc
fistpll
dec
push
loop
scas
dec
push
or
test
idiv
lcall
dec
std
jns
mov
push
rclb
sbb
xlat
dec
stos
inc
cmpsl
out
lret
decl
dec
jb
int3
mov
cmp
push
cmpsl
out
les
sarb
mov
jnp
xchg
adc
int3
sbb
inc
inc
xchg
cmp
loop
add
lcall
jo
xor
sbb
rorb
mov
repz
sub
dec
loopne
subps
jg
mov
cmp
push
call
mov
and
and
clc
call
std
xchg
aam
push
jns
xor
test
mov
xlat
xorb
pop
push
addr16
jg
ljmp
nop
and
callw
sti
iret
mov
sti
and
adc
call
and
inc
fildll
push
pop
rolb
sbb
lds
in
mov
jmp
mov
ret
test
and
xchg
mov
xchg
fs
xchg
das
inc
ret
add
mov
xchg
mov
push
mov
adc
xor
adc
es
mov
incl
inc
stos
push
mov
sub
test
data16
mov
or
lock
decl
push
mov
or
shlb
pop
clc
sub
mov
or
movsb
mov
mov
mov
mov
xchg
or
decl
addr16
add
enter
push
add
cmp
and
inc
and
sub
aad
or
jae
add
mov
les
push
inc
pop
push
inc
cmc
mov
dec
movl
orb
push
or
mov
ret
ljmp
cmp
fistps
dec
lods
loop
mov
mov
mov
jnp
ds
add
cmp
add
dec
xor
out
inc
adc
cmp
jo
xchg
xchg
push
or
lcall
sbb
mov
lods
cmp
or
dec
test
lcall
pusha
inc
adc
ja
fdivr
fisttps
lret
mov
cmp
orl
lcall
xor
xor
loop
daa
dec
stos
or
mov
cmp
xchg
lret
xor
xchg
outsl
out
cmp
mov
pop
inc
mov
pop
rol
int
cmp
je
dec
cmp
dec
aas
std
cmp
xchg
mov
push
inc
sub
rolb
jmp
xor
loopne
inc
sbb
pop
add
mov
or
aam
dec
sbb
aam
mov
pop
dec
mov
scas
xchg
sub
mov
stos
jne
test
dec
leave
movsl
lcall
bnd
cmp
cmpsl
fidivrl
mov
stos
scas
sub
or
movsl
inc
adc
outsl
ljmp
repnz
test
fsubrs
pop
jne
insb
or
test
mov
xor
mov
mov
bound
das
push
pop
arpl
mov
jne
ret
mov
insb
pop
jp
dec
enter
jecxz
cmpsb
cmp
inc
subl
rol
pushl
cld
incl
xchg
add
inc
add
add
pushf
sub
dec
test
and
ja
jp
aam
dec
into
cmp
les
pusha
xor
mov
jg
test
inc
mov
mov
nop
ljmp
lea
lods
sub
or
mov
mov
add
jns
pop
mov
mov
jg
ljmp
in
mov
xchg
sbb
cmp
lea
mov
ljmp
inc
daa
sub
or
jecxz
sub
je
pcmpeqd
add
idiv
jb
adc
add
xchg
push
inc
sbb
add
mov
movsb
fdivl
cmc
das
int
ror
adc
push
and
push
xor
daa
insb
cmp
mov
aaa
jb
ja
dec
aaa
out
mov
idivl
or
and
xor
push
xchg
decl
or
cli
inc
sub
hlt
push
test
pop
jg
inc
jne
xchg
push
arpl
and
cli
call
jge
cmp
mov
push
dec
loop
ljmp
mov
xchg
cld
dec
and
insl
adc
xor
xchg
add
bound
sbb
leave
sbb
add
mov
leave
push
xor
sub
jbe
cmpl
leave
lret
mov
xchg
lret
jns
lods
scas
xor
incl
or
pop
jns
inc
pop
fdivrl
sub
pop
int3
out
mull
enter
dec
fxch
decl
sbb
push
cmp
add
mov
sub
loopne
cli
lcall
and
mov
mov
xor
sbb
pop
and
inc
add
xor
add
add
dec
jae
pushw
adc
add
mov
test
daa
mov
and
jg
loopne
aas
ret
orl
in
inc
xor
cltd
jne
mov
pushf
in
pusha
inc
lods
push
adc
fdivr
jg
icebp
lea
push
sbb
nop
mov
inc
dec
add
movb
pushl
adc
es
and
popf
mov
mov
loope
aas
jb
jne
pusha
movsb
pop
pusha
call
pop
xor
jge,pn
dec
inc
rcrb
jmp
xchg
pushf
clc
les
incl
xchg
repnz
movsb
pop
jns
add
mov
sub
dec
sub
lret
aam
sub
test
fnstenv
mov
jb
stos
stos
and
sub
in
mov
sti
pop
adcb
xor
loopne
mov
and
jp
pushl
popa
jns
and
mov
mov
add
sub
enter
pop
adc
xchg
inc
shlb
bound
sub
xchg
ljmp
les
cmp
pop
shll
cli
push
or
jg
mov
and
bound
cmp
mov
dec
push
jbe
xchg
mov
jmp
cwtl
ret
das
xchg
das
add
ret
adcb
or
push
xorb
and
jg
sub
sbb
jns
add
jl
push
into
or
add
and
mov
inc
mov
outsb
lcall
popf
insb
inc
pushl
in
rol
imul
cmpsb
adc
xchg
inc
xchg
sbb
ljmp
push
mov
xor
sbb
addr16
mov
aam
xchg
xor
cmp
out
clc
je
rolb
mov
mov
xchg
mov
mov
adc
shrb
pop
mov
inc
ljmp
pop
int
or
jp
push
jg
mov
daa
subb
lret
jns
xor
mov
mov
ljmp
shr
mov
out
into
cltd
into
pop
push
adc
cmp
xchg
dec
cmc
push
jl
pushl
clc
leave
dec
adc
stos
sub
enter
sub
adc
test
and
pusha
es
icebp
inc
cld
mov
mov
inc
popa
pop
inc
dec
add
dec
push
mov
loop
or
add
lret
mov
dec
fildl
js
movsl
xor
mov
pushl
int3
mov
fwait
test
mulb
xlat
ljmp
cltd
and
cmp
mov
inc
test
imul
pop
lret
decb
dec
hlt
xor
mov
push
mov
decl
and
xchg
mov
dec
add
mov
imul
movsb
hlt
jp
mov
and
pop
pop
pushl
mov
addb
xchg
jmp
je
sbb
add
fnstenv
cmp
dec
push
nop
jmp
cmp
mov
mov
cwtl
push
sbb
jno
push
arpl
mov
in
test
dec
jecxz
je
mov
pusha
repnz
mov
std
jg
int3
inc
sbb
xlat
outsl
faddp
nop
xchg
push
cmc
fisubl
xor
add
sub
test
loop
and
and
popa
mov
sub
pushf
dec
xchg
mov
cli
add
and
shl
ljmp
mov
pop
popf
jnp
inc
pushf
push
push
dec
or
cld
jo
call
imul
lcall
sbb
adc
push
stos
push
cmp
cmp
inc
bound
sbb
ficomps
mov
xchg
adc
cmp
call
mov
cmp
and
inc
pop
mov
je
movsb
dec
xchg
mov
and
lds
popf
and
cmpl
test
sub
decl
lret
adc
lods
sub
push
mov
sbb
clc
ljmp
ja
rorb
sbb
lcall
jmp
jmp
repz
fists
pushf
aaa
cmp
iret
sbb
pop
cmp
push
mov
pop
mov
cmpb
push
dec
pop
add
pop
in
mov
mov
dec
inc
mov
popa
jnp
fwait
mov
or
add
repnz
or
sahf
imul
mov
mov
mov
decl
ret
fdivrl
mov
and
lret
sahf
ljmp
mov
cwtl
stc
icebp
cmp
inc
pop
add
js
xchg
xchg
mov
data16
or
and
fisubl
call
sbb
add
sbb
je
incl
push
cs
bound
jae
inc
in
loop
outsb
ljmp
test
pop
pushf
sub
mov
outsb
inc
or
das
cli
orb
test
pop
out
in
push
in
or
imul
das
mov
fs
ret
inc
outsb
or
outsb
in
into
xor
js
inc
les
decl
sbb
push
or
jnp
dec
jnp
mov
addr16
push
sub
rolb
fsubs
jle
inc
mov
and
das
test
addb
gs
orb
lcall
lods
cs
scas
jbe
jge
sub
int
dec
push
stos
or
xchg
inc
dec
cli
ljmp
decl
iret
inc
dec
imul
sub
pushl
icebp
lods
fadds
loopne
scas
dec
inc
scas
hlt
lret
push
repnz
test
orb
inc
das
sub
add
ss
out
push
cmp
repz
faddp
repz
push
jg
inc
push
cmp
dec
das
repz
dec
aam
out
rcrb
dec
repnz
mov
xor
dec
nop
inc
push
xor
sub
xorl
mov
push
cld
jnp
andb
add
or
loopne
mov
or
mov
cmpsb
iret
nop
sbb
cmp
mov
and
cmp
dec
cmp
call
jbe
add
cmpsl
cmpl
insb
clc
mov
jne
mov
fs
pusha
adcb
mov
int
pop
xorb
sbb
and
subb
ds
fdivr
jg
pop
loop
addb
loope
insb
in
add
lret
cltd
jl
loop
mov
ljmp
shrb
mov
dec
fs
dec
mov
ja
daa
js
jmp
loopne
ja
insb
ja
sarb
mov
pop
push
insb
outsb
out
test
push
xchg
ljmp
int3
or
cmpsl
dec
je
push
scas
mov
int3
stos
inc
bound
test
pushl
test
pop
adc
jmp
jge
inc
jmp
mov
mov
movsl
lret
and
ljmp
lods
push
stos
daa
inc
lret
adc
int3
adc
xorl
push
inc
push
mov
ljmp
adc
push
cmp
adc
out
dec
out
cmc
pop
xchg
repz
pushl
sub
inc
push
rolb
add
dec
orb
add
cli
jmp
push
cmp
mov
pusha
or
popa
cmp
in
mov
mov
pusha
inc
test
mov
dec
imul
adc
sti
call
or
js
or
cli
cmp
addb
lcall
fadds
in
mov
jle
daa
stos
orl
xchg
mov
sub
mov
cmp
std
mov
xchg
sub
movsb
or
mov
stos
shrb
lock
movsb
dec
mov
lods
pop
xor
mov
aam
inc
into
rolb
mov
add
pop
dec
mov
mov
loopne
test
mov
shl
and
add
ja
push
jmp
loop
xor
push
xchg
clc
mov
inc
fs
xor
jmp
out
icebp
mov
and
xor
testl
or
push
or
decl
mov
inc
and
xor
mov
adc
out
ljmp
pop
aam
push
jl
jge
scas
and
inc
dec
pcmpgtd
or
adc
adc
decl
int3
into
in
call
mov
add
xor
stos
ss
push
ss
call
cmp
outsl
clc
incl
subb
das
xor
or
inc
das
clc
loop
es
dec
lret
enter
push
and
icebp
dec
xorl
xor
es
xor
ss
push
adc
adc
adc
shrw
sub
cmpsb
pop
xor
aaa
sub
lcall
sub
test
add
bound
xor
movsl
bound
pop
mov
out
mov
cmp
and
jl
mov
call
dec
add
int3
sbb
cmp
xchg
jle
inc
jmp
mov
data16
inc
and
je
sar
das
orb
lock
or
aad
lret
sub
call
icebp
mov
in
ret
es
out
lods
data16
out
mov
ljmp
add
lret
nop
and
mov
jbe
push
push
and
ljmp
ret
push
mov
testw
sahf
test
inc
incl
dec
out
shlb
push
daa
daa
dec
jecxz
push
loopne
stos
movsb
push
pop
inc
jbe
into
shll
sub
in
or
jmp
mulb
jg
cmp
mov
jns
add
mov
stos
mov
and
decl
lock
mov
in
lret
int3
push
subb
test
repz
decl
push
cmpsb
xor
sub
dec
jmp
ss
jne
push
xor
xchg
popa
xchg
add
mov
outsb
add
jle
das
sbb
dec
mov
xorb
aam
push
test
dec
ja
dec
xlat
dec
xor
adc
pop
in
or
jg
out
pop
jno
pop
in
xor
push
sub
ret
ja
imul
clc
inc
imulb
fcoms
rorl
push
dec
mov
pop
mov
stc
mov
pusha
int
fbstp
call
mov
push
ret
aam
xor
sbb
ret
ljmp
add
fnstsw
and
out
sbb
and
mov
shrb
inc
fidivs
dec
arpl
dec
sub
pop
xchg
ljmp
adcb
xor
sbb
add
loopne
jo
jo
mov
loopne
pop
decl
fs
jae
push
faddl
daa
gs
adc
ljmp
movsb
pop
mov
js
hlt
dec
aas
int3
xchg
dec
jnp
sub
dec
jecxz
decl
insl
aaa
test
ljmp
ljmp
or
adc
data16
push
outsl
xchg
xchg
call
mov
xor
in
push
lock
lret
push
dec
cmp
mov
or
lds
xchg
cmp
mov
out
jle
inc
mov
push
jmp
es
push
in
ljmp
pushl
push
dec
push
mov
sub
sub
or
hlt
fmuls
mov
lds
movb
add
call
jbe
push
mov
aaa
aas
adc
sub
adc
push
aam
lcall
fs
cmp
in
out
xchg
es
xchg
cmpsl
push
cmc
in
loopne
int3
jp
inc
repz
test
or
mov
mov
xor
jne
clc
mov
das
xor
mov
add
add
sub
pop
or
bound
inc
ds
fs
adcl
rorb
add
mov
or
fcomps
jle
jae
rorb
or
loopne
cmp
fdivr
incl
dec
mov
out
or
test
and
lcall
leave
dec
jne
inc
jbe
leave
dec
jb
ret
dec
into
fs
jmp
mov
out
lods
lcall
incb
inc
add
clc
test
push
push
and
rcrl
ja
push
or
movsl
mov
insb
mov
outsl
in
insb
lock
sub
and
dec
cltd
mov
push
xchg
jo
scas
sbb
filds
sub
fdivs
std
lcall
jb
sbb
cmp
movsl
daa
repz
and
ja
aaa
outsb
add
pop
enter
lods
inc
ljmp
es
adc
out
test
xchg
repnz
add
incl
push
pop
repz
dec
push
mov
mov
arpl
xor
pop
pop
cltd
add
lcall
or
fwait
call
ja
push
and
stos
mov
cmp
dec
in
mov
ja
std
incl
push
test
cmp
andl
jne
lcall
or
fiadds
cmp
dec
xchg
and
sub
outsl
mov
and
or
dec
data16
call
std
and
push
inc
xor
add
sbb
adc
inc
dec
xchg
push
or
shl
mov
dec
mov
jbe
dec
xchg
repnz
mov
imul
push
push
sub
xlat
mov
jmp
mov
lret
push
neg
mov
movsl
push
aam
and
cmpsl
push
mov
jmp
in
and
jl
inc
mov
aas
mov
push
bound
mov
scas
enter
daa
and
add
dec
test
fildll
jg
sar
lods
lds
push
or
negl
sti
xchg
or
dec
jne
cli
sub
xor
inc
adc
fs
les
dec
push
ss
aad
fiadds
rcll
inc
pop
jl
insb
mov
jns
xchg
or
pop
iret
jl
jo
add
cmp
fs
sub
sbb
pop
mov
lods
mov
call
lahf
inc
iret
jmp
pushf
cmpl
stc
scas
xor
icebp
out
fiadds
push
shll
sbb
mov
jmp
or
mov
incl
mov
jl
mov
mov
mov
int
xchg
lret
jmp
or
xchg
dec
jl
dec
xchg
or
sub
mov
sbb
cmp
xor
mov
jecxz
ljmp
stos
stos
jge
add
mov
xor
jmp
out
clc
mov
repnz
and
dec
dec
shrb
in
cld
fidivrl
out
pop
and
pop
adcl
out
popa
enter
leave
mov
or
lcall
adc
dec
sub
dec
xor
pop
aas
sub
pusha
pop
push
hlt
dec
stc
loop
mov
dec
iret
lret
cmp
mov
cltd
xlat
popf
mov
popa
decl
or
add
or
shll
jnp
je
sbbb
loope
push
incl
rcrb
call
addl
lds
fidivrl
jae
sub
sbb
icebp
int
lret
or
cmp
or
jmp
mov
xor
nop
and
mov
mov
aad
sbb
lcall
les
addr16
xlat
loope
les
jns
into
out
or
jbe
xchg
or
pushf
fsubs
pop
dec
mov
pop
lret
and
loop
sub
inc
jbe
out
jg
decl
sbb
mov
inc
cld
hlt
rcr
and
fldl
pop
mov
bound
fsub
mov
xor
lret
add
aad
push
sub
ljmp
jmp
gs
sbb
pop
popa
call
inc
mov
mov
shlb
cmp
push
cli
pop
jae
xor
pop
dec
scas
repnz
cmc
push
scas
decl
xchg
xor
push
cld
mov
sub
dec
and
jl
sub
push
into
popa
dec
cli
decl
addl
cmpsl
lods
push
cmp
ret
int3
adc
rolb
inc
mov
inc
jbe
inc
cwtl
add
cmp
out
mov
adc
arpl
mov
lcall
js
or
jg
leave
xchg
sub
inc
es
cltd
sub
dec
jb
lahf
dec
shll
cmp
or
mov
int3
push
incl
mov
jbe
aad
jnp
push
popf
lods
sub
jmp
push
lods
arpl
sub
shlb
ret
fisttps
mov
scas
fidivrs
jae
lock
mov
mov
filds
pop
cmp
sbb
mov
fwait
add
inc
cld
dec
imul
mov
pop
dec
sbb
xchg
mov
out
clc
pop
mov
mov
adc
add
jno
sbb
mov
jmp
lods
mov
outsb
insl
pop
clc
add
fistpll
pop
cli
jnp
repz
ja
cs
loopne
dec
mov
std
dec
cmp
out
cli
int3
jg
pop
ds
jg
jmp
add
and
andb
fs
and
loopne
push
xchg
sahf
jnp
in
ja
jg
test
sbb
adc
lcall
loop
stc
adc
mov
mov
arpl
push
mov
bound
mov
mov
ljmp
mov
imul
ret
cmp
call
mov
dec
ss
bound
xorb
sub
mov
pushl
mov
push
sbb
jb
sub
fdivs
inc
sbb
xchg
rcrl
sbb
push
inc
cs
mov
std
jmp
imul
testb
lret
in
shrb
and
or
dec
cltd
outsl
mov
es
adc
pop
jmp
adc
or
push
xor
fcoml
jno
mov
pusha
leave
in
mov
lods
xchg
xchg
pop
mov
fcomps
and
gs
pop
aam
xchg
xchg
lcall
cld
movsl
xchg
fldcw
fldenv
and
pop
arpl
popf
dec
mov
cmpsb
fldenv
call
std
mov
push
push
insb
stos
dec
adc
sarl
lcall
push
push
cmpsl
sbb
out
push
pop
int
xlat
adc
rorl
daa
sbb
mov
fcomip
fsubl
aaa
mov
mov
fiadds
lock
cmpsl
jge
xchg
fidivs
cld
outsl
lcall
push
push
dec
or
dec
repnz
add
xor
xchg
call
lcall
xchg
pop
inc
popf
popf
aam
repnz
mov
cmp
mov
push
insb
ljmp
mov
mov
leave
and
fwait
insl
lret
and
push
cmp
pop
outsl
push
jne
sub
jge
fcomps
fdivs
pop
data16
scas
nop
and
ljmp
add
stos
call
pop
movsl
push
mov
cli
inc
jae
lcall
mov
sbb
iret
sbb
fbld
pop
sahf
jg
ljmp
pop
rorl
popf
jp
dec
ret
push
push
aad
gs
je
lret
push
push
jne
ljmp
or
push
mov
imul
pop
jbe
xor
sub
xchg
pop
nop/reserved
push
fstl
fsubs
push
es
lcall
daa
cmp
sbb
idivb
cwtl
outsl
jle
and
daa
cmp
lret
int
clc
push
sbb
or
dec
jbe
jmp
arpl
lcall
xor
inc
jecxz
dec
ret
push
push
sbb
xor
test
ret
inc
movsb
int
dec
xor
incl
pop
pushf
jmp
iret
mov
nop
les
push
sub
rolb
dec
lea
pop
fs
std
or
mov
adc
aam
mov
or
dec
inc
adcb
test
and
lock
sub
jle
mov
shrb
mov
push
cmpsb
mov
or
inc
sbb
in
add
or
or
enter
fisttpl
inc
pop
push
nop
idiv
jg
call
leave
je
or
mov
adc
ljmp
adc
test
mov
pop
lods
fcmovb
stos
mov
stos
mov
inc
inc
scas
sahf
or
cli
push
adc
or
cld
decl
mov
sub
jno
mull
out
imul
add
inc
fidivs
nop
push
int3
sti
sbb
xchg
cmpsb
xor
mov
push
sub
adc
cli
push
decl
ds
dec
into
add
jl
lahf
clc
xchg
int
sbb
dec
fisubl
decl
mov
or
mov
mov
in
or
mov
daa
cltd
mov
fdivrs
mov
pop
cmc
out
cld
icebp
pushf
inc
xchg
mov
adc
add
mov
or
lds
jno
jg
stos
mov
sbb
mov
inc
lcall
pop
stc
xchg
mov
dec
push
test
cmpsb
lcall
push
and
or
ljmp
adc
ret
packsswb
lcall
add
add
movsb
dec
cltd
rcl
jp
mov
stc
xor
and
dec
jl
and
add
sbb
jl
mov
xor
incl
lcall
in
lahf
loop
test
pop
push
and
shlb
mov
adc
mov
sbb
mov
arpl
outsl
cli
decl
sub
mov
xor
inc
lods
in
push
out
dec
ss
nop
ds
mov
mov
sub
xor
ret
sub
sbb
lods
adc
sbb
je
add
fcmovbe
call
add
jmp
xor
call
jns
fwait
fwait
mov
xchg
aaa
adc
stc
aam
in
aad
jno
pop
rorl
xchg
shlb
test
and
pop
mov
aas
xchg
les
decl
jne
mov
test
and
jnp
cmpsl
fldenv
xor
mov
pop
cmc
adc
incl
cltd
sub
sbb
xchg
stos
jle
ljmp
aad
decl
stos
push
clc
call
nop
inc
rolb
sbbb
push
cwtl
arpl
push
rorb
out
mov
jne
sti
ljmp
add
sub
add
adc
aam
add
dec
dec
andb
test
decl
nop
popf
adcb
fimull
repnz
add
subb
dec
daa
test
cld
fstpt
adc
mov
out
mov
mov
mov
cs
sub
movsb
loop
pop
pop
and
xor
repz
jg
jmp
adc
aam
pop
aad
pop
pop
sub
outsb
add
xchg
bound
cwtl
jbe
popfw
jecxz
int3
cmp
push
popf
divb
gs
pushl
data16
popf
repnz
int
pop
xor
fnstenv
or
insb
push
js
repz
and
pusha
push
xor
mov
inc
ret
insb
xchg
inc
int
sub
pusha
add
or
sbb
lret
test
test
movl
aad
cli
incl
pop
pop
push
xchg
mov
repnz
or
mov
lods
incl
popf
pop
lods
arpl
lds
adc
dec
jb
mov
es
mov
push
scas
mov
stos
xor
sub
sbb
mov
mov
out
xor
xor
mov
call
push
mov
xor
test
lcall
push
sbb
push
dec
jg
in
nop
lret
divb
lahf
sub
aad
daa
or
sar
and
add
sti
dec
adc
and
xchg
fists
sub
in
adcl
mov
inc
lret
or
mov
pop
xchg
test
in
roll
pop
cwtl
push
ljmp
movsb
movsb
mov
mov
cli
sub
outsl
push
data16
fiaddl
sub
jle
mov
aas
ror
push
xor
jl
outsb
aam
shll
out
push
jl
movaps
jg
mov
pop
mov
call
test
jno
xor
or
scas
pushl
test
testl
dec
lods
fcos
decl
xchg
fdivs
pushf
push
fcmovbe
sahf
test
lahf
and
cmp
rcrl
or
jmp
rcrl
lds
pop
mov
enter
mov
and
jno
ret
arpl
fcomip
inc
pop
in
adc
add
and
inc
jb
jg
add
jo
mov
or
decl
pop
mov
push
divb
aaa
or
dec
pop
ljmp
adc
sub
push
addr16
cmp
addr16
xchg
cwtd
inc
adc
push
test
mov
add
call
test
addr16
xor
jbe
push
cmp
xchg
cmp
adc
pushl
call
xchg
xchg
inc
pop
mov
push
adc
pop
pushl
cmp
nop
sub
les
xchg
xchg
adc
pop
subl
add
decl
ss
pop
js
pop
seto
icebp
pop
out
adc
sbb
pop
jmp
add
mov
insb
jmp
insb
and
adc
mov
jecxz
outsl
clc
lcall
bt
and
movsb
sbb
xor
ja
in
or
hlt
pop
and
aam
add
inc
add
jg
cli
outsl
or
inc
sbb
cli
mov
sbb
shlb
xchg
jo
bound
jle
xorb
cmp
jo
inc
jg
push
inc
sub
and
fcoms
push
and
mov
aaa
andb
fs
enter
and
or
xchg
and
call
push
enter
push
aas
lcall
call
add
sbb
inc
cmp
adc
addr16
repnz
call
cmp
xchg
cmp
adc
pop
dec
call
pop
pop
test
jle
sub
pop
cltd
push
cmp
ljmp
jge
dec
mov
inc
adc
adc
push
add
jo
rclb
mov
adcb
imul
jno
push
out
imul
pushl
sbb
pusha
sub
mov
xor
mov
sub
adc
fs
adc
xor
flds
xchg
outsb
mov
sbb
std
ljmp
pop
pop
xchg
nop
pop
inc
mov
pop
xor
pop
sbb
sbb
jg
imul
mov
aaa
xor
test
inc
push
inc
and
loopne
push
loope
sbb
or
call
addb
orb
inc
dec
xor
jbe
enter
push
add
inc
out
push
in
pop
jno
inc
jo
daa
jg
ret
ss
pop
add
mulb
sbb
js
fs
lea
stos
lcall
test
and
fs
pushf
jae
and
pop
push
and
push
and
test
and
andb
jg
ds
adcl
inc
cmp
sub
dec
adc
outsl
cmp
add
jmp
adc
inc
nop
mov
xchg
sub
cmp
fldenv
mov
mov
test
mov
xchg
push
or
inc
adc
arpl
out
int3
movsb
dec
ret
ret
adc
dec
mov
outsl
loope
iret
add
pop
sbb
and
loope
jns,pn
sbb
imul
fcomip
subb
sbb
std
les
insb
xchg
sbb
jb
cmp
mov
gs
bound
shl
dec
lret
pop
xor
adc
daa
jl
inc
inc
jmp
loope
mov
outsb
out
pop
sub
es
and
testl
adc
mov
cwtl
push
cmpsb
test
cltd
in
mov
in
dec
dec
mov
pop
jg
push
cmp
inc
and
xor
ds
movsl
jg
dec
fwait
clc
jmp
xlat
and
icebp
lea
mov
fwait
mov
sbb
jb
test
add
ljmp
js
dec
loop
push
jo
fisubrl
jne
test
test
rolb
cmp
stc
nop
mov
repnz
out
daa
lcall
stos
mov
outsl
push
rclb
sbb
test
std
das
mov
popa
push
test
rcll
adc
rcl
pushl
ds
inc
pop
lods
adc
cwtl
ja
add
mov
cwtl
jbe
pop
add
call
pop
inc
add
adc
mov
push
xchg
jo
dec
push
test
fnstenv
icebp
in
call
push
repz
popf
loope
xchg
xor
das
repnz
jecxz
and
aam
lock
movsb
icebp
call
add
outsb
flds
sbb
insl
mov
inc
cmpsl
popa
xchg
sahf
mov
adc
adc
pop
dec
dec
push
sti
movsl
lcall
dec
push
inc
hlt
xor
fwait
push
sub
push
xor
xor
push
sub
and
sbbb
jbe
add
addl
outsl
mov
int
mov
xor
adc
ljmp
sub
arpl
add
test
cli
fwait
mov
daa
pop
pushf
dec
or
ljmp
cwtl
test
jnp
adc
lock
add
xor
push
ss
aas
idivl
push
ljmp
jo
pusha
push
push
push
stos
jb
adc
xor
sahf
and
mov
adcl
andl
sub
add
add
sbb
xor
xchg
adc
push
loope
dec
and
sbb
xchg
mov
adc
dec
out
xor
dec
jno
pop
icebp
add
xchg
add
pop
data16
incl
ds
lods
fldenv
ja
jmp
add
mov
mov
rolb
ja
adc
das
cmp
mov
mov
rcl
aas
xchg
or
xor
in
cmp
mov
jp
inc
sub
cli
mov
pushl
les
push
push
out
mov
pop
mov
aam
lcall
push
jne
shll
xor
and
dec
mov
jmp
cmp
inc
lret
sub
jle
add
js
cmpsl
pop
mov
dec
mov
fidivrl
ja
call
adcb
adcb
cmp
push
or
mov
out
test
mov
push
pushl
aaa
and
imul
inc
add
test
sub
sub
out
bound
inc
aaa
xor
enter
dec
xchg
inc
pop
cmpsl
xor
and
pop
ss
cmpb
cmp
jle
mov
push
popf
xchg
sub
ljmp
sub
lahf
sbb
lcall
cmpsb
xchg
jne
push
xor
mov
add
insb
or
mov
lock
stos
push
pop
xchg
push
call
sbb
sub
xor
arpl
push
dec
mov
xchg
ret
mov
sbb
sub
xchg
call
mov
and
hlt
pop
fldenv
add
xor
fs
sub
imul
push
incl
dec
push
ret
dec
hlt
add
push
mov
xorb
xlat
rcrl
out
jg
xchg
cwtl
push
fwait
mov
pop
xor
mov
repz
push
and
cltd
imul
lcall
mov
test
sbb
cltd
mov
jmp
stos
mov
dec
inc
test
cs
mov
sbb
pushf
jmp
cmpsl
cmp
xor
or
lcall
mov
fdivs
jb
dec
pushf
imul
xor
in
lcall
pop
mov
adc
jbe
xchg
jl
test
push
sub
mov
pushl
pop
cmpsl
adc
inc
add
inc
add
and
xchg
movsl
mov
push
ljmp
mov
imul
add
test
add
jg
add
adc
loop
adc
ret
xchg
push
imul
mov
fdivrp
call
sbb
jnp
pop
ret
and
test
mov
ret
cmp
subl
out
movsb
sbb
push
dec
sub
inc
xlat
sbb
aaa
out
xor
nop
pop
outsb
and
fldt
call
and
inc
sub
jl
or
addl
mov
dec
mov
pusha
fdivrp
cwtl
in
mov
sub
ret
and
mov
jo
cli
mov
les
mov
mov
sub
int
aad
push
lcall
inc
pop
and
mov
mov
dec
roll
push
or
xchg
ljmp
add
push
pop
repz
testb
insb
push
pop
imul
sub
mov
add
xorb
dec
clc
nop
add
push
dec
popa
test
movhps
decl
mov
xor
mov
jl
cmpsl
ret
popa
adc
and
fnstsw
scas
jp
test
xchg
gs
push
icebp
adc
dec
test
xchg
push
dec
loopne
cmp
fadd
inc
lock
aam
cmp
loop
sub
lret
push
imul
sbb
lcall
xchg
lock
mov
cwtl
call
insl
push
rep
mov
mov
and
jmp
test
sbb
mov
call
pop
xor
push
jl
pop
inc
sbbb
cmpsl
xlat
fsubl
inc
mov
jg
pop
or
andl
fwait
mov
es
pushl
mov
inc
daa
mov
cmp
and
es
enter
mov
jl
jp
add
or
jno
fildl
push
aaa
push
sub
add
in
and
push
or
pop
aaa
add
incl
sub
mov
dec
fwait
push
add
popf
testb
push
sti
int3
sub
das
xchg
hlt
push
mov
jge
test
dec
pop
cmp
nop
or
test
decl
xchg
adc
or
scas
cmpsb
adc
cmpsl
add
xchg
jmp
fcomip
call
xchg
stos
ret
outsl
sub
adc
sarl
add
loopne
cmp
stos
xchg
sub
xchg
outsl
int3
push
test
lods
cmp
cltd
xchg
xchg
dec
ss
pop
mov
lods
enter
push
scas
mov
mov
scas
pop
insb
loope
insb
enter
jmp
and
loop
mov
into
cmpsb
das
mov
pop
out
dec
or
int
jnp
mov
lcall
xor
fsubrs
xchg
push
outsl
fisttpll
inc
mov
xor
jbe
mov
jle
cmp
push
fsts
inc
outsl
cli
and
cmp
gs
bound
pop
inc
push
cmpsl
sbb
stos
lea
mov
lea
jg
mov
cli
lea
xlat
pop
or
lcall
and
rolb
adc
adc
push
sbb
sahf
mov
pop
inc
int3
adc
mov
test
sahf
nop
jne
mov
fsubrs
ljmp
mov
orb
loopne
clc
mov
sbb
in
dec
in
popf
fdivrp
dec
test
cmp
jno
and
jmp
nop
push
popa
push
fwait
xor
lret
xlat
pop
mov
call
insl
popa
sub
xor
jbe
pop
inc
popf
imul
dec
andb
outsl
incl
in
aad
mov
ss
sub
cmpsb
inc
xor
mov
jecxz
and
add
jmp
mov
pusha
les
mov
jg
xlat
loopne
jecxz
scas
jbe
insb
int3
pop
lock
in
push
lock
clc
inc
mov
outsb
mov
xchg
push
sub
inc
pop
out
jo
call
inc
test
bound
shrb
push
inc
int
ficoml
mov
ret
fdivrl
das
and
ljmp
aas
cmpsb
test
push
jb
fbld
rep
sbb
cwtl
mov
cmpsb
aam
ljmp
xor
push
sbb
adc
mov
pop
sub
loopne
add
inc
addl
mov
adc
pop
das
decl
inc
sbb
enter
dec
movsb
cwtl
jb
cmp
pop
xor
shll
lret
shll
inc
nop
inc
mov
call
leave
adc
ljmp
cs
test
int3
inc
inc
push
int
xor
jns
xchg
sahf
cmp
jg
cwtl
cmp
es
call
jno
jmp
xchg
mov
stc
and
dec
clc
mov
popa
outsl
sbb
clc
lea
pop
hlt
cmp
sub
lret
lcall
ljmp
cmc
lods
icebp
sbb
je
xor
insl
mov
inc
mov
xorb
incl
inc
lret
sbb
adc
out
sahf
or
jl
pushl
jl,pn
cmpsl
push
pushf
ja
in
scas
mov
ja
cmp
mov
leave
repz
xchg
fcmovnbe
sar
mov
jnp
aad
push
out
dec
lahf
cmp
out
ja
mov
or
cmp
sti
jmp
rolb
dec
scas
and
out
pop
and
and
sbb
popl
pop
loop
or
dec
aam
les
dec
push
xor
adc
out
cli
pushl
push
adc
icebp
sbb
or
push
push
jmp
andl
andl
adc
enter
repnz
and
call
sar
in
incl
scas
mov
lret
or
dec
pop
ret
sub
inc
xor
je
dec
and
xchg
xchg
push
or
pushl
cmp
andl
sahf
add
lcall
repnz
movsl
xchg
xor
inc
push
sbb
jmp
ret
mov
xchg
mov
fcmovu
cmc
pushl
ret
hlt
dec
aam
push
jo
imul
test
movsb
mov
push
dec
xchg
mov
ficoml
stos
push
movsl
push
adc
sub
ljmp
cmp
rolb
sub
scas
mov
mov
mov
mov
mov
dec
int3
or
sbb
xor
push
cwtl
mov
mov
arpl
in
mov
sub
xor
fsin
movsl
in
ss
lods
lret
sub
das
mov
arpl
mov
cmp
stos
jecxz
ljmp
decl
fdivp
or
test
cmp
out
cmp
scas
mov
das
jp
ds
jmp
sbb
cld
fcompl
dec
push
ret
push
or
out
xchg
xchg
into
inc
add
cmp
adc
xchg
lds
mov
rol
and
and
roll
enter
enter
mov
cmp
in
xchg
jb
xor
lcall
insb
xchg
dec
sub
mov
xor
cmc
dec
adc
stos
mov
add
das
xor
das
xor
adc
incl
add
jne
push
xchg
xor
xchg
push
cltd
xchg
fidivs
xlat
aad
popf
push
and
decl
gs
aas
jb
sarb
loop
and
jbe
pusha
sbb
jbe
pusha
fwait
jg
and
stos
mov
lods
mov
cmpsb
sbb
ret
mov
push
lret
das
mov
add
fsubrl
lock
xor
mov
inc
xor
cmp
xchg
sbb
incl
clc
in
xchg
mov
dec
popf
cli
addr16
lcall
push
or
cmp
cmp
shll
mov
lock
orps
call
mov
adc
into
mov
jno
arpl
add
leave
push
divb
xchg
cmp
decl
cmpsl
adc
out
hlt
int3
cmp
jae
lahf
dec
add
shlb
mov
sbb
call
mov
int
imul
add
adc
adc
jo
and
subl
pop
mov
dec
ficoml
sbb
dec
sbb
adcb
fsubl
fnsave
pushl
xchg
xchg
mov
test
pop
leave
adc
sub
inc
jp
fnclex
movb
or
fcmove
sbb
repnz
and
mov
and
je
pop
ret
loop
adc
js
leave
and
inc
inc
fcomip
in
push
into
fisubl
test
test
sub
mov
shlb
mov
jmp
mov
mov
das
fcmovnbe
out
mov
dec
cwtl
add
jmp
or
test
sub
jae
daa
pop
mov
pop
testl
std
ljmp
cltd
sbb
incl
es
jle
mov
fs
lcall
lahf
mov
and
push
sbb
add
ss
or
adc
mov
icebp
jno
adc
int
sub
gs
mov
jg
mov
dec
lret
enter
mov
into
sbb
pop
cwtl
ljmp
cld
add
adc
ljmp
data16
mov
bound
dec
mov
adcl
call
mov
mov
mov
pop
jmp
sub
fwait
fs
cmp
inc
push
and
mov
push
rcrl
jno
rolb
out
adc
scas
mov
mov
xor
mov
add
mov
mov
sub
pushl
adc
xor
or
test
mov
push
jmp
mov
pop
cmp
and
sbbb
mov
add
cmp
std
ja
mov
push
xor
adc
inc
mov
sub
cmp
dec
pop
ret
cld
adc
pop
das
sub
mov
inc
xchg
jl
shlb
fsub
cmp
loopne
cmp
mov
scas
outsl
pushf
jmp
xor
into
rcrl
and
shlb
pop
add
shl
sub
dec
dec
add
sbb
pushl
sbb
add
dec
lcall
xor
mov
loopne
jl
mov
int
push
sti
ret
xchg
incl
mov
filds
add
lock
cmp
inc
adc
cmpsl
inc
inc
xor
adc
mov
rcll
adc
adc
sub
or
jb
xchg
rcrb
push
ljmp
shl
push
mov
inc
fisubrs
mov
lea
mov
inc
lcall
push
push
jp
xlat
mov
push
into
xchg
pop
jp
stc
in
mov
sti
add
decl
cmp
pop
in
push
jb
cmpsl
sbb
inc
add
loope
jmp
xlat
inc
inc
pop
add
dec
push
test
aas
nop
shll
cltd
or
and
push
xchg
hlt
push
ja
test
add
sbb
push
push
mov
mov
lds
rclb
inc
gs
out
scas
pop
fidivl
jne
xchg
push
mov
jno
sbb
pusha
mov
cld
jmp
xor
out
and
mov
dec
js
jmp
mov
jl
sbb
push
loope
lret
rcrl
mulb
add
dec
cld
sti
loopne
jb
rcr
add
popa
push
push
pushf
shll
xor
and
dec
mov
push
pop
dec
lods
push
dec
adc
xchg
aam
loope
mov
ljmp
orb
nop
call
pop
jecxz
arpl
idivb
int
pop
push
jg
decl
xor
repnz
cli
sub
or
mov
xchg
mov
fstpl
inc
or
jbe
test
add
mov
cmp
jmp
adc
call
icebp
jae
ss
mov
sbb
in
adc
add
shll
inc
pop
fcmovbe
repnz
rcrb
pop
ljmp
imul
xor
ljmp
jbe
es
push
mov
das
das
lock
fbld
cmpsb
int3
mov
lcall
lret
cli
mov
cltd
neg
xlat
flds
loopne
or
inc
or
add
mov
incl
sbb
push
push
dec
jns
pop
or
sub
out
ss
inc
cmp
and
sub
pushl
ljmp
cmp
pop
stos
sbb
out
js
or
pushl
mov
aaa
or
xchg
std
ds
push
sub
hlt
add
shrl
decl
push
std
xchg
fs
int3
xor
cmp
dec
adc
mov
cmp
add
pop
jo
add
lock
movsb
jecxz
movsl
jmp
sbb
and
add
sub
mov
xor
call
sub
repnz
or
or
xor
push
inc
xor
fstpt
jnp
push
sub
xor
incl
fcoms
ss
sub
pop
sbb
and
push
daa
je
dec
mov
mov
ss
loop
mov
xchg
rorl
rorl
orl
push
sbb
call
rolb
fbld
mov
xor
xor
push
pop
dec
sub
orb
mov
sbb
xor
arpl
repz
or
jge
and
mov
adc
adc
nop
sahf
or
sar
lahf
add
fwait
adc
mov
sbb
and
sub
mov
xchg
mov
dec
cmp
jbe
jl
popf
shll
dec
push
dec
les
mov
aam
jmp
cwtl
les
mov
mov
aaa
and
and
test
inc
pushl
push
loop
or
add
inc
icebp
xor
fcos
neg
incl
sbb
aam
mov
imul
add
sub
mov
fdivp
call
loope
daa
loop
pop
stc
movsl
mov
mov
pop
mov
rclb
inc
mov
insb
cld
mov
push
jl
movsb
dec
inc
jg
push
mov
or
stc
sahf
daa
aam
je
xor
add
ss
cld
cmp
mov
xchg
pop
and
xchg
stc
cmp
clc
bound
jmp
ljmp
scas
rcrb
inc
fcoml
xchg
paddd
je
mov
push
or
mov
fnstsw
in
sub
popa
xchg
daa
or
outsb
inc
add
xchg
push
lahf
das
clc
jg
cmp
inc
xor
ds
or
popf
push
fstpt
pushl
aas
call
mov
repz
lret
inc
pop
je
xchg
ret
push
scas
orb
inc
shlb
mov
mov
inc
mov
imul
pushl
xor
push
and
mov
inc
mov
subl
sbb
mov
movsb
rorb
test
pushf
adc
or
ljmp
jb
mov
arpl
stos
shll
call
nop
and
mov
add
pop
xor
mov
ja
or
inc
lods
mov
repz
popa
ret
cmpsb
ja
mov
decl
mov
mov
aam
and
scas
add
scas
cld
sbb
ljmp
mov
jmp
xchg
adc
mov
fildl
push
mov
repnz
cltd
in
cmp
jg
fildll
sbb
sahf
loopne
out
mov
dec
pushf
les
lret
cmp
sar
mov
mov
lret
test
in
addl
sub
dec
mov
sub
sub
mov
dec
add
and
adc
or
int3
sub
ljmp
push
inc
insb
sub
cmp
pop
les
add
mov
or
loop
mov
dec
test
sub
dec
push
addl
xor
mov
jp
decl
mov
hlt
xor
xor
inc
imul
adcb
inc
mov
sub
push
hlt
sarb
sbb
xor
xchg
mov
push
icebp
call
mov
cmpl
scas
in
mov
xor
and
xchg
mov
inc
mov
mov
mov
lcall
bnd
push
ret
imul
lret
mov
fdivr
fbstp
add
popf
mov
cwtl
xor
mov
sub
adc
ja
xor
mov
cmc
push
mov
mov
fwait
rcrb
fcmove
push
sbb
mov
push
dec
pop
dec
and
push
and
aam
push
ljmp
pop
push
mov
and
sbb
jbe,pt
test
jnp
add
decl
test
dec
movsb
lret
jl
lret
adc
int3
shlb
sub
inc
aad
seto
xchg
push
dec
inc
xor
dec
roll
lcall
inc
cwtl
mov
sbb
popf
nop
fisttpll
and
nop
inc
mov
aam
sbb
decl
lock
lea
js
mov
sti
push
movsl
andl
mov
mov
rorl
dec
jg
inc
outsb
sbb
jb
push
idivl
scas
je
mov
rol
sub
ret
ljmp
js
xor
or
pop
inc
roll
popf
in
ljmp
stos
push
mov
lret
cmp
cmp
call
rcll
cli
push
cmp
mov
cwtl
inc
shrb
lret
mov
jbe
fldl
mov
lds
dec
xchg
inc
das
out
xchg
or
ljmp
add
inc
mov
lahf
sub
faddl
ficoms
xchg
inc
fwait
mov
mov
dec
xor
xor
mov
ds
adc
xchg
mov
int
sbbl
filds
dec
sub
sbb
jge
test
incl
push
adcb
lret
mov
or
xchg
pop
cmp
add
inc
mov
lea
cli
nop
dec
add
shr
cli
lcall
mov
fimull
push
push
sarl
or
mov
sarb
aad
cmp
xchg
jbe
pop
in
xchg
aad
pop
mov
jo
call
mov
mov
sbb
xchg
push
scas
iret
repz
add
lea
into
fcomip
jg
add
fildl
inc
dec
loopne
inc
hlt
xor
loopne
movsb
mov
ljmp
leave
mov
hlt
decl
add
inc
add
sub
aam
shr
inc
push
ljmp
pop
xor
mov
sbb
add
dec
jecxz
bound
sub
test
das
push
lea
pop
pop
push
xor
mov
and
mov
mov
data16
mov
mov
out
xchg
cmp
andl
adc
ret
inc
dec
pop
in
test
movsl
jnp
fildl
push
add
loope
sbb
inc
xchg
adcl
adc
xchg
enter
pushl
pop
into
mov
jno
aas
mov
push
mov
sub
push
in
cmpsb
pushl
or
cwtl
fs
iret
rcrb
xchg
mov
pusha
fwait
push
mov
ja
cmpsl
jns
push
cld
add
mov
push
xor
cld
or
ret
loope
lea
mov
cli
and
movb
jne
add
loop
incl
push
test
and
cltd
mov
mov
jae
ss
sarb
lcall
shll
mov
xor
xchg
mov
push
dec
sub
cmp
dec
pushl
sbb
xchg
and
sub
aad
mov
push
pusha
std
incl
or
mov
mov
mov
xchg
insb
mov
xchg
enter
pop
pop
into
jb
cmp
cmpsb
jmp
sub
bound
adc
loop
adc
fisttpl
lods
inc
jge
je
mov
and
lock
arpl
xor
push
call
add
dec
xchg
cwtl
add
pmaxsw
xchg
shrl
cmp
ljmp
inc
pop
xor
insb
cli
sahf
and
or
fucomip
push
lods
loopne
sbb
leave
mov
sub
lock
enter
jge
mov
rorb
sbbb
cltd
popa
stc
ficoml
sahf
scas
insb
cmp
lcall
cmp
mov
int3
xadd
call
rolb
push
das
add
lcall
pop
loopne,pt
cmp
mov
push
jge
adc
mov
call
sub
jecxz
loop,pn
lcall
sbb
xor
cmp
sub
jmp
push
mov
sub
lcall
cmp
or
xchg
mov
push
lock
and
fbstp
sub
addb
sub
in
decl
mov
pop
push
xchg
rclb
dec
or
int
mov
incl
movsb
movsl
dec
sbb
add
fbstp
sub
mov
adc
add
inc
jg
sbbb
or
mov
test
cmp
shrb
daa
adc
mov
les
xor
mov
xor
cmp
std
repnz
mov
dec
xchg
scas
in
xchg
ret
inc
cwtl
out
cmp
mov
cmpl
jg
sbb
stc
pop
fistpll
loope
cwtl
ljmp
loop
xchg
xor
dec
lahf
jecxz
or
lods
dec
adc
sbb
fs
cs
push
lea
inc
call
xchg
gs
adc
xchg
dec
testb
incl
js
add
mov
jbe
adc
or
testb
and
fwait
mov
imul
data16
popa
and
pushl
mov
and
sub
lahf
adc
xchg
xor
fiadds
lcall
mov
adc
and
or
sub
jg
and
pop
lock
mov
dec
push
and
imul
jbe
add
sbb
add
neg
jb
push
dec
add
jmp
pop
dec
rcrl
fisttps
or
xchg
js
lock
es
cmp
js
pop
scas
imul
jmp
out
jne
mov
and
popw
imul
decl
mov
cmp
addb
jg
aaa
loopne
mov
or
repz
inc
xchg
pop
enter
cs
pop
insl
pop
repnz
mov
xor
cmp
out
shrb
jae
or
xor
fisubs
insb
add
pushl
shlb
les
addr16
lods
mov
pop
add
xchg
outsb
test
mov
movsb
cmc
push
mov
mov
scas
xor
adc
pop
pop
fbstp
in
es
popa
xchg
outsl
cmpsl
jmp
lea
icebp
iret
xchg
out
stos
inc
mov
out
pop
sub
scas
je
es
lock
xor
stos
mov
fwait
aam
imul
inc
lcall
sub
pop
js
adc
imul
cltd
lcall
add
imul
stos
adc
cmp
ljmp
pusha
pop
fdivrs
int
cwtl
jns
pop
add
push
jmp
push
lock
jmp
popl
and
andb
cmp
xor
orl
aad
aam
xor
or
sub
shll
push
mov
adc
je
in
nop
and
ret
and
incl
inc
push
pusha
adc
add
xchg
rcrl
push
movsl
xor
je
int3
aaa
cld
incl
add
repnz
dec
dec
mov
xor
pop
or
popa
iret
inc
jnp
shl
call
repz
lcall
sub
inc
cwtl
jb
push
push
mov
fdivr
jg
jp
lea
push
in
fstps
jp
lods
shll
lods
fnstcw
jmp
jge
imull
push
mov
test
xor
mov
lock
mov
fcompl
mov
jmp
lds
jecxz
call
xor
cmp
pop
cmp
mov
jg
mov
jae
push
int
jo
loopne
xor
in
lret
xchg
ljmp
sbb
repz
cmp
mov
mov
ret
sub
jl
pushl
pop
sub
xchg
mov
pop
out
fidivrs
cld
les
pop
cmc
jg
jle
incl
mov
test
push
jp
mov
add
cmpl
ljmp
loope
or
mov
sbb
das
shlb
xchg
je
inc
push
and
sbb
cmc
out
clc
fisttpll
fisttps
push
mov
in
jae
ljmp
lods
and
push
inc
mov
xchg
push
push
or
lcall
cs
mov
mov
rcrb
or
popf
movsl
and
incl
inc
add
or
cmp
sbb
sub
ljmp
jle
and
adc
inc
or
mov
pop
or
lods
mov
push
call
aam
inc
sbb
test
xor
xor
inc
mov
lcall
incl
add
movb
jno
prefetchnta
add
out
and
shll
aad
mov
pushf
arpl
add
adc
push
loopne
adc
scas
pop
adc
lcall
test
cmc
arpl
jmp
mov
or
inc
and
sbb
movsl
xchg
pop
mov
insb
stos
add
inc
or
outsl
cltd
xchg
popa
sub
les
lret
xchg
mov
xchg
sbb
pop
and
jb
test
ja
and
sbb
ret
sbb
mov
xor
out
jae
fcos
ljmp
mov
add
mov
lods
hlt
cmpsb
push
mov
push
iret
jl
insl
and
or
mov
mov
lcall
decb
sbb
test
loope
jecxz
aaa
ficoml
add
add
mov
fiadds
cmp
int
mov
cwtl
mov
xorl
pop
cmp
and
movsl
add
shlb
ljmp
add
adc
push
hlt
or
lcall
test
icebp
incl
and
xchg
add
push
andl
push
xchg
mov
jns
cmp
fisttps
mov
dec
adc
inc
inc
or
sub
sbb
adc
push
mov
lcall
add
int
fisttpll
fidivs
popa
es
inc
adc
movd
mov
scas
inc
scas
clc
sub
xchg
push
push
test
jmp
add
pop
pop
mov
xchg
sbb
push
pop
sbb
jb
jg
or
or
mov
stos
xor
rclb
xor
das
mov
xor
push
inc
lds
pusha
add
int3
add
xor
shrb
test
int3
imul
and
and
jmp
add
sbb
loopne
enter
jle
sarb
lods
lahf
jae
xchg
mov
and
sbb
add
pop
fsubl
lcall
mov
jno
pop
push
into
jl
arpl
cmp
pop
jns
arpl
fxch
outsb
dec
je
ficompl
lds
xlat
inc
pushl
mov
inc
push
fsubrl
or
out
clc
lcall
imul
dec
inc
mov
outsb
xor
test
mov
and
dec
dec
inc
sbb
push
sarb
and
adc
adc
nop
daa
ret
dec
sbb
jmp
test
test
inc
rol
outsb
mov
inc
or
mov
sar
dec
clc
mov
rclb
sbb
das
rolb
xchg
clc
jb
sub
or
jbe
dec
test
les
lock
pushf
adc
shrl
and
mov
insl
and
or
dec
mov
call
sub
mov
test
sbb
lock
lods
inc
dec
jmp
pop
lret
and
popa
push
mov
outsb
add
pop
pop
decl
xchg
mov
lcall
sub
mov
push
stos
in
xor
std
jg
rolb
test
xchg
sbb
subb
fwait
add
fstpl
int3
cmp
or
sbb
push
xchg
xchg
dec
stos
sub
sub
mov
or
pop
xor
hlt
sub
out
test
ljmp
xchg
mov
and
jmp
sbb
xlat
out
lock
cmp
push
decl
nop
ret
test
mov
rorb
or
incl
ret
inc
xchg
mov
mov
movsb
test
adc
repz
or
call
xchg
ljmp
je
in
and
sbb
das
clc
mov
and
mov
lahf
aaa
pop
sbbl
sbb
sub
adcb
pop
pop
xorb
push
inc
ljmp
jo
or
sub
or
scas
pop
cmpsl
ja
mov
out
ret
out
dec
push
sbb
push
pop
push
pusha
add
dec
call
xacquire
push
or
lea
or
test
loopne
or
fisubs
or
mull
addr16
js
mov
ljmp
cmc
inc
pop
sbb
cld
mov
push
or
mov
push
rcrb
push
fcomip
pushl
test
out
sub
data16
scas
mov
jmp
and
push
xchg
fisttps
aam
ror
inc
xchg
popa
adc
adcl
incl
rcrl
mov
adc
push
addps
push
xor
call
int
jne
cmc
pushl
mov
mov
jo
xchg
pop
xor
in
mov
in
ja
mov
cmp
ljmp
push
mov
pop
in
jne
lods
gs
inc
mov
or
call
inc
mov
enter
insb
out
mov
sbbb
sbb
movsb
aas
ljmp
mov
pop
rolb
mov
scas
jle
cltd
dec
hlt
adc
imul
sub
and
cltd
adc
test
cmp
inc
add
pushf
fsubrl
mov
mov
xor
ljmp
cld
jne
push
jmp
push
adc
pop
aaa
in
subb
subb
loop
jg
xchg
cmpsb
movl
int3
aam
lods
mov
mov
dec
sub
pop
mov
clc
popa
xchg
sub
add
xor
enter
lcall
add
in
add
call
add
clc
clc
orl
adc
stos
lcall
test
mov
nop
addl
movsb
push
dec
or
xor
sbb
int
xchg
das
xor
mov
sub
lret
ljmp
jge
pop
pop
dec
push
jmp
cmpsb
leave
xor
test
cltd
cmp
pop
xchg
push
pushl
pushl
and
iret
mov
mov
lods
mov
dec
orl
mov
xlat
mov
push
out
dec
pop
jmp
jo
mov
xchg
mulb
pop
hlt
inc
push
dec
mov
bound
jp
fisubl
push
pop
nop
push
cli
in
jmp
mov
pop
sub
and
add
xor
pop
aas
mov
ljmp
scas
scas
sub
cmp
inc
sub
repz
push
xorb
outsb
lcall
add
and
mov
sbb
ljmp
ds
add
cs
subl
into
push
loop
test
push
scas
dec
fldl
lea
push
out
rcll
or
or
cmpb
iret
mov
cld
call
adc
mov
jge
or
dec
jno
push
jns
push
inc
popf
xorl
push
and
mov
test
lret
fcompl
jo
lret
ljmp
push
dec
test
rol
add
ffree
iret
popf
lds
cwtl
mov
jmp
sarl
jge
arpl
adc
popa
clc
sbb
ffree
add
je
lcall
sbb
mov
xchg
mov
mov
mov
xchg
leave
xchg
pop
ss
call
loopne
popa
push
je
cmc
dec
cmpsb
sub
paddw
mulps
xchg
push
lcall
xor
ror
cltd
jne
cltd
push
inc
pop
sub
insb
dec
jnp
das
cli
call
shll
lds
mov
imul
test
enter
lock
lea
fcmovbe
xor
and
out
mov
jmp
roll
xor
sbbb
mov
pop
cmc
sbb
dec
push
stos
es
cmc
in
xor
pop
jbe
xlat
cmc
jno
ljmp
fsts
adc
add
adcl
jle
mov
sub
call
lock
decl
outsb
cli
adc
imul
push
sbbl
pop
jl
add
ret
sbb
push
cwtl
call
mov
inc
pop
cmp
les
mov
push
push
pop
lods
ret
cmp
stc
cmp
movb
sub
scas
loopne
or
push
cld
mov
push
add
and
clc
push
dec
xor
call
decl
popa
cmp
inc
pop
xchg
pop
add
decl
or
aam
push
pop
popa
adc
sbb
inc
sbb
nop
decl
movsl
and
push
jae
or
or
or
jg
imul
cld
xor
xchg
popa
sbb
push
pop
pop
xchg
les
adc
pop
fs
push
adc
push
dec
inc
fcompl
pop
push
dec
decl
fstps
ffree
push
pop
pop
data16
inc
popf
sub
push
sbb
decl
test
push
fidivrl
sub
inc
in
mov
push
fcomi
mov
out
mov
and
or
xlat
jl
pushl
xchg
lcall
xor
inc
stos
icebp
pop
lods
cmp
jo
sahf
cmpsl
adc
stos
test
fisubrl
lcall
xor
xchg
std
roll
push
pop
mov
pop
ss
lcall
pop
test
lock
xor
jge
add
rcrl
arpl
jecxz
pop
or
decl
cmp
sarl
addl
fistl
or
add
and
push
inc
fs
push
or
pop
mov
add
rcll
mov
jnp
inc
inc
or
incl
cmp
push
pop
add
mov
inc
mov
mov
dec
cmp
add
sbb
aaa
mov
dec
mov
push
std
incl
loope
push
push
push
scas
push
add
nop
push
inc
call
lret
push
hlt
pusha
mov
loope
mov
add
adc
mov
rolb
pop
popa
adc
adc
xchg
and
ljmp
jl
or
outsl
cmc
push
mov
sbb
sbb
fstps
cli
dec
dec
cmp
jo
popf
lcall
movsb
mov
push
stc
gs
mov
lcall
dec
bound
cmpsb
ljmp
pop
dec
cmp
fnstsw
loop
loope
loopne
dec
mov
fidivrl
es
incl
xchg
fs
inc
xchg
jge
movsb
imul
pop
loop
pop
daa
hlt
or
repz
pop
push
sub
pop
push
xor
arpl
and
outsl
mov
sbb
stos
imul
push
jb
and
ljmp
mov
out
sahf
scas
or
and
mov
ljmp
push
add
lds
sbb
push
xlat
inc
pop
sub
ljmp
hlt
lea
movsb
push
jnp
out
je
xor
adc
fdivp
adcb
sar
mov
mov
cmp
xchg
dec
or
les
sbb
divl
dec
mov
inc
rcrl
dec
mov
pushf
lock
add
sbb
and
add
imul
lcall
fs
inc
sahf
inc
mov
mov
cmc
out
push
jp
sub
les
mov
mov
incl
lds
popa
push
rolb
cmp
test
mov
push
in
outsb
and
rorb
fwait
dec
push
cltd
lds
jne
push
pop
adc
pop
std
call
sarb
xchg
fldt
ljmp
cli
int3
mov
cmp
dec
dec
jns
inc
pop
mov
adc
lcall
stos
in
cmp
jge
add
and
imul
jbe
jg
ljmp
mov
movsb
push
imul
insl
loop
call
incl
and
jo
lcall
jno
adc
cmpsb
mov
xchg
cmc
push
decl
sub
push
cmp
mov
jecxz
popf
int
sub
jns
std
or
rcrb
sbb
sbb
mov
adcl
xchg
pop
jno
sub
pop
out
nop
ljmp
fstpt
clc
orb
rcrb
and
inc
add
mov
add
dec
inc
les
mov
in
test
cli
incl
adc
lock
jge
inc
andb
js
mov
incl
ret
pop
inc
ret
inc
lods
jg
inc
push
je
dec
xchg
sbb
sub
dec
fcomp
add
loop
or
in
sbb
inc
ljmp
fcoml
lods
into
cmp
jge
mov
in
incl
repnz
enter
aam
push
dec
dec
and
es
fldenv
mov
decl
jge
adc
shll
push
test
cmp
mov
or
imul
ljmp
cmc
mov
or
mov
sbb
pushf
add
mov
stos
repnz
sbb
cmp
faddl
out
and
gs
lcall
loopne
imul
lods
and
jg
push
jne
arpl
adc
mov
push
mov
sbb
cs
fcmovu
insl
push
int
cmp
insl
cmp
stos
fs
in
adc
xchg
sub
inc
mov
dec
repnz
mov
in
lea
add
test
clc
ljmp
lea
out
sarl
subl
les
loopne
add
ljmp
mov
push
in
add
cli
enter
xchg
subb
dec
pop
adc
add
jg
call
call
jno
addb
push
pop
shrb
out
roll
lock
xchg
ret
inc
clc
clc
push
int
add
addb
aam
dec
sbb
adc
jg
call
hlt
or
lds
or
rorb
inc
in
into
icebp
pushf
adc
sbb
pop
dec
test
mov
nop
sarl
or
ja
decl
cwtl
mov
adc
pop
dec
ret
sarb
imul
ds
rolb
pop
adc
out
push
pop
mov
jns
ljmp
mov
xchg
int
fnsave
and
pushf
leave
pop
push
loope
inc
jo
fsubr
decl
outsl
dec
pop
pop
dec
fidivs
sbbb
lcall
add
jmp
test
out
and
out
daa
scas
mov
gs
imul
push
incl
daa
dec
sub
sbb
fsts
cmp
test
addr16
dec
out
adc
and
lcall
out
or
mov
scas
cmpsb
clc
frstor
dec
cmpsl
cmp
jp
ficompl
mov
ret
dec
jbe
pop
ja
into
add
outsb
xor
popf
incl
insb
pop
loope
sub
out
mov
lahf
mov
test
cmc
inc
add
pushl
mov
int3
inc
push
cmp
jae
xor
inc
in
ficompl
jmp
in
adcb
or
shl
mov
sbb
mov
rorl
cmp
faddl
cmp
das
cli
incl
aaa
cwtl
sbb
aam
rorl
femms
ljmp
insl
cli
or
sub
pushf
decl
test
xchg
push
jmp
icebp
jo
cmpsl
test
je
into
dec
in
hlt
xchg
push
pop
mov
xchg
ljmp
rcrl
dec
aam
jmp
fdivr
mov
addr16
jg
mov
fidivl
push
das
fstps
sub
in
and
sbb
popa
sbb
mov
jmp
mov
cmpsb
mov
pop
jg
mov
inc
pop
jnp
pop
sbbl
jno
and
push
scas
xchg
arpl
sti
mov
jle
push
xor
mov
jmp
jne
xchg
lcall
ljmp
scas
ss
push
loope
out
or
pop
jmp
adc
popf
push
imul
jbe
pop
pop
pop
cld
jl
insl
xchg
xor
jns
inc
mov
daa
xor
push
jns
aaa
cmp
js
push
jp
xchg
xor
out
inc
sbb
mov
jmp
adc
sbbl
orl
sbbb
dec
std
fildll
adc
mull
or
movsl
insb
call
pop
mov
mov
adc
dec
stc
push
inc
push
inc
movsb
cmp
add
dec
out
xchg
or
sar
inc
adc
ret
add
in
shll
fistps
adc
xchg
and
pop
imul
jle
push
mov
rolb
xchg
aam
xor
movsl
dec
in
adc
mov
sti
pop
xchg
pop
xor
mov
mov
movsl
mov
dec
mov
cmp
adc
xchg
xlat
loope
sbb
dec
gs
ja
sbb
shll
sbb
xor
pop
or
bnd
cmpsb
jg
call
add
mov
imul
ljmp
lahf
pushf
adc
jne
in
pop
fidivl
arpl
sarl
sub
jb
ljmp
xchg
inc
lods
stc
sahf
scas
sub
mov
cmpsl
outsb
mov
movsl
push
sub
xchg
jno
pop
out
push
stos
subb
insl
add
lahf
aad
xchg
hlt
dec
jbe
xchg
or
mov
pushl
out
pop
stc
scas
pop
xchg
mov
push
xlat
or
or
clc
dec
rcrl
pop
jl
jg
cmpl
mov
dec
push
outsb
mov
pop
add
sbb
jbe
and
inc
or
incl
sub
mov
cmpb
add
dec
cld
ljmp
dec
adc
aaa
add
sub
mov
fcomip
inc
sub
scas
int3
push
in
add
int
les
adc
incl
inc
scas
pop
inc
in
into
rcrb
cli
decl
adc
adc
add
aam
mov
ret
clc
ljmp
repnz
push
xchg
mov
pop
mov
xchg
lcall
lds
out
mov
ret
add
inc
clc
mov
cwtl
cs
inc
dec
xchg
out
pushf
cmp
add
fcmove
sbb
mov
push
jg
aam
into
lcall
gs
cmpsl
pop
xchg
push
add
mov
shll
pushl
sub
sub
sbbb
push
inc
cmpl
addl
mov
rol
mov
call
shrb
adc
bound
ljmp
mov
jb
into
dec
popf
jb
lods
and
gs
inc
pop
mul
int
mov
cmp
pushl
mov
mov
cmpl
out
in
sarl
jecxz
pop
sub
lock
pushf
adc
sahf
clc
mov
mov
mov
ret
cwtl
xor
add
dec
mov
mov
xlat
jnp,pt
aam
mov
jecxz
push
rolb
pop
loop
pop
mov
pop
push
call
movsb
test
jo
or
mov
syscall
pop
mov
dec
mov
je
call
call
bound
incl
nop
lahf
and
inc
or
add
popa
add
call
mov
dec
adc
ret
or
push
dec
dec
or
xchg
pause
mov
lods
or
cmpl
pop
inc
push
sub
push
loope
mov
mov
scas
and
insb
into
sbb
dec
dec
call
mov
mov
neg
sub
and
xchg
pop
ds
mov
xchg
sahf
dec
xor
aaa
fs
pop
cmp
incl
loopne
and
and
push
mov
xor
hlt
call
and
sbb
mov
sbb
add
test
fisttps
inc
jo
mov
sub
jb
movsl
incl
adcb
ljmp
mov
xchg
dec
push
jmp
enter
sbb
pop
call
and
movsb
inc
dec
xor
mov
lods
cmp
sub
std
mov
pushl
mov
sbb
pusha
adc
or
sahf
lods
mov
pop
jmp
lods
and
loope
mov
ljmp
in
inc
xor
mov
mov
dec
xor
in
pusha
push
cmp
push
call
sub
sub
fwait
sarl
xor
add
stos
and
pop
fsubl
lret
scas
or
push
jg
outsb
xor
sbbb
data16
sahf
adc
lcall
in
sti
out
jmp
mov
jmp
push
iret
push
or
imul
not
or
mov
loop
or
idiv
lcall
mov
jo
add
mov
dec
cmp
push
shrl
cmp
jmp
into
xor
adc
ss
fcoms
pop
or
or
dec
bound
or
or
pushl
loop
sub
das
push
dec
mov
fldt
bnd
ficoms
mov
ret
or
fadds
jmp
add
ds
or
mov
adc
cmp
scas
sub
cmp
dec
loope
and
rolb
aas
mov
pushf
push
mov
aam
popa
aad
adcl
sbb
incl
pop
inc
cli
cmpsl
adc
jmp
and
mov
loop
mov
push
mov
call
pop
jo
and
jns
mov
sbb
in
bound
dec
cwtl
xchg
cwtl
pop
test
pop
dec
mov
lcall
je
and
mov
pop
jp
and
test
adc
movsl
movsb
dec
sub
adc
loope
lock
jg
mov
jo,pn
das
mov
shll
mov
or
jmp
sbbl
es
sar
inc
sbb
push
dec
fisubrl
mov
xor
adc
pushl
out
dec
mov
pop
jp
xor
fmul
mov
pop
mov
arpl
je
jae
icebp
incl
xchg
xchg
mov
bound
fs
jnp
push
jmp
adc
xor
rcr
jp
ss
cld
fadds
jp
sbb
push
add
cld
pop
outsb
repz
str
mov
jg
adc
adcl
rorb
dec
or
jg
movsb
push
int3
testl
add
testb
fsubrl
mov
decl
inc
xchg
mov
add
pop
or
or
cmpsb
mov
sub
leave
test
shlb
pop
ljmp
dec
pop
orl
mov
popa
clc
sbbl
xchg
mov
jnp
add
mov
ss
loope
arpl
decb
rolb
and
ja
data16
loopne
adc
cld
ljmp
jbe
xchg
movsb
mov
push
cmp
aad
cmp
clc
decl
mov
jp
dec
push
mov
cltd
imul
incl
mov
mov
pop
cmp
mov
inc
adc
jmp
popa
fisubs
scas
scas
xor
push
add
pop
pop
jns
push
nop
bound
mov
sub
sub
mov
adc
scas
inc
push
xchg
les
and
pusha
cmp
loop
scas
rclb
loopne
pop
enter
push
xor
xor
jo
mov
loopne
and
sub
arpl
pop
fcos
mov
or
adc
lret
mov
loope
subb
popa
rol
aam
push
jmp
push
test
push
sbb
add
cld
lcall
xchg
fisubrl
mov
sbb
sbb
jg
mov
movsb
adc
mov
stos
aaa
sub
enter
and
jmp
mov
push
movb
mov
or
scas
add
mov
lock
call
loope
shl
sbb
add
add
repnz
dec
enter
sub
xchg
xlat
int3
aaa
dec
inc
adc
jmp
dec
push
fwait
rorb
clflush
inc
or
ja
sar
add
js
adc
cmp
or
insb
cmp
andb
jnp
ljmp
xor
push
sbb
clc
mov
pop
test
push
stos
push
mov
aad
or
adc
call
inc
push
inc
adc
and
pop
xchg
mov
jb
xor
mov
cmp
nop
and
and
jmp
mov
mov
xor
or
in
cmpsb
js
xorb
xlat
push
jnp
scas
sbb
lret
jmp
test
push
cmp
mov
mov
fwait
pop
xlat
mov
mov
in
pop
into
call
std
ljmp
mov
in
int
xor
push
daa
dec
prefetchwt1
popa
lea
sbb
cmp
loop
lcall
andb
in
cmp
ljmp
add
addr16
mov
stos
data16
call
mov
fdivrl
push
fisubrl
sub
dec
jb
inc
cld
call
mov
pushf
shll
xlat
xchg
dec
js
andb
push
ljmp
pop
mov
shrb
pop
mov
jp
fists
movsb
sahf
and
clc
ja
js
xor
fwait
test
add
cwtl
mov
push
inc
add
addb
pop
add
xchg
adc
inc
movsb
add
scas
or
dec
pushf
aas
hlt
in
ficoml
ljmp
mov
ss
dec
push
xor
cmp
hlt
jbe
fmull
outsb
loopne
mov
std
or
loop
mov
sub
or
dec
sub
fsubrl
dec
and
rclb
int
jle
mov
aas
push
cltd
dec
and
aad
incl
jb
out
pop
or
add
rclb
mov
stos
js
enter
push
outsb
movsl
lock
push
in
mov
loop
jg
ljmp
pop
xor
xchg
mov
cmpsb
orl
cld
sub
mov
xor
sub
out
das
xchg
iret
jecxz
scas
cmp
aam
pop
repz
mov
jmp
pop
in
data16
imul
idiv
incl
fsts
sbb
mov
arpl
sub
and
fcomip
out
cmp
sub
andl
xor
out
mov
ss
dec
jo
fadd
push
mov
cld
movsb
jno
xchg
insl
cwtl
mov
dec
sarl
mov
mov
out
fistpl
clc
xchg
cli
add
imul
adc
decl
sbb
mov
inc
hlt
pop
hlt
dec
dec
out
lock
or
mov
incl
sbb
outsb
cltd
sub
inc
sub
inc
cmp
sub
test
pushf
ret
xchg
stos
add
sar
imul
jo
mov
dec
or
mov
lods
sbb
add
or
decl
jp
ljmp
or
and
sbb
test
out
cmpb
fsub
add
call
push
push
pushw
jl
push
pusha
xchg
sbb
ret
scas
aaa
or
and
dec
jmp
mov
pop
cmp
test
call
sbb
pushf
bound
dec
enter
pop
rolb
decl
dec
and
in
bnd
sub
ljmp
push
cvttps2pi
lcall
iret
into
imulb
mov
sub
sarl
testl
out
mov
ret
or
bound
or
push
sub
sbb
sbb
mov
insl
add
cmpsl
push
push
add
adc
mov
xor
clc
outsl
jg
lock
cmpl
in
xchg
cmpsb
sti
cmpsb
andl
into
push
ljmp
nop
outsl
cmp
mov
dec
xchg
xchg
scas
clc
pop
xor
pop
fisubl
mov
mov
sub
sub
ljmp
test
jbe
dec
int3
inc
aas
call
inc
cmp
scas
xchg
lock
cmp
fistl
insb
add
outsl
insl
pusha
cli
cmpsb
cwtl
sub
jne
pushl
pop
add
jmp
lods
inc
add
xchg
jg
add
jbe
push
sub
inc
jo
cs
shrb
sub
in
decl
xor
xchg
and
mov
outsl
mov
test
stos
cld
and
mov
adc
mov
insb
cli
call
or
dec
movsb
cmp
push
lcall
bound
pop
jne
inc
insb
in
clc
xchg
pop
push
mov
sub
pop
add
imulb
lret
pop
std
scas
clc
int3
seta
lods
test
lds
lock
pop
cld
pop
pushf
stos
mov
incl
pop
enter
and
enter
lret
insl
outsl
push
scas
add
dec
push
shlb
lods
sub
mov
adc
std
mov
call
xchg
movsl
scas
dec
aam
imul
scas
mov
xor
sbb
push
insl
addb
jg
icebp
mov
popl
cmp
sbb
cmp
call
insb
das
xor
test
push
imul
pushw
test
inc
mov
test
mov
lcall
jne
xchg
bound
lret
and
lea
test
incl
push
push
ss
outsb
mov
fisubs
mov
in
mov
inc
xchg
push
test
ljmp
hlt
arpl
cwtl
repnz
out
orb
call
ljmp
std
add
test
dec
add
or
bound
aam
out
or
lcall
call
loopne
in
push
inc
stc
int
inc
dec
inc
push
xchg
inc
and
xchg
dec
cmp
ljmp
inc
jns
pusha
jns
repnz
push
mov
rcll
pop
andb
jl
dec
enter
fs
lock
and
int3
into
push
add
pushl
push
and
bound
jmp
pop
xor
out
pop
mov
add
movsb
out
pop
mov
icebp
mov
sub
sub
inc
pushf
cld
xor
sbb
push
dec
mov
dec
cld
ret
inc
or
stos
add
shll
cmc
fmull
mov
and
outsl
cli
ljmp
pop
xchg
adc
mov
aas
jne
outsb
dec
cmp
pop
insl
shrd
pushl
add
jno
inc
test
test
xchg
xchg
jle
adc
xor
inc
push
mov
call
mov
xor
mov
or
and
aas
gs
lcall
insb
into
ja
push
mov
sub
bound
arpl
or
insl
pop
xlat
inc
test
dec
pop
call
and
cmc
or
cli
dec
xchg
xor
in
loope
icebp
sbb
call
xchg
cs
sbb
std
es
repnz
or
clc
dec
adc
leave
and
roll
cld
decl
loopne
mov
xlat
mov
jbe
add
lcall
pop
or
cmpsl
inc
andb
in
out
daa
mov
mov
xchg
repnz
pushl
xchg
dec
aad
cmp
out
rcl
push
and
mov
cmp
fadds
inc
stos
call
jo
lcall
in
push
mov
xchg
inc
push
mov
or
gs
lcall
icebp
gs
or
in
sahf
inc
pop
adc
xor
out
ljmp
fidivrl
dec
adc
xor
pop
xor
pop
lret
std
decl
push
pop
cld
mov
addb
jno
fiaddl
popa
push
mov
repnz
push
xor
dec
test
sarb
into
hlt
lods
push
jae
rorl
les
sub
xor
adc
cmp
mov
jno
imul
and
mov
lcall
addl
mov
lcall
adc
cld
xchg
orl
sti
adc
adc
jb
push
push
aaa
stos
jecxz
mulb
incl
ss
push
les
insb
hlt
out
loopne
jge
es
lds
add
mov
decl
out
cmp
inc
inc
jg
inc
adc
cmp
inc
dec
movsb
js
insl
inc
mov
mov
dec
xor
push
push
roll
pusha
add
push
cmpsb
mov
jl
pushl
insb
cld
addr16
pop
xor
mov
pop
aam
sub
xchg
ljmpw
dec
imul
dec
aaa
and
loopne
mov
sub
pusha
or
lods
movl
or
and
inc
idivb
enter
inc
add
ljmp
push
movsl
push
enter
or
adc
xchg
inc
xor
out
push
es
andl
ljmp
out
sub
xchg
dec
sub
push
pop
xchg
xor
movsl
adc
fcomip
shlb
cli
gs
scas
inc
jne
pop
cltd
daa
push
or
pop
nop
push
push
push
hlt
push
pop
fs
cmp
xor
jnp
scas
mov
mov
push
or
add
jno
and
pushl
add
jp
ret
ja
sub
aas
in
jge
idivl
mov
rclb
mov
iret
imul
mov
xlat
pop
lcall
adc
mov
test
mov
mov
and
add
or
inc
or
jg
inc
and
add
sar
mov
in
addr16
fsubs
mov
adc
xchg
jbe
or
mov
or
or
bswap
inc
add
imul
ljmp
repnz
and
push
sub
das
movsb
and
icebp
sarl
adc
fistl
or
mov
incb
adc
lret
xchg
scas
mov
jmp
in
mov
cld
lcall
jle
inc
in
jb
jg
jo
pop
in
jp
lcall
and
sti
sbb
pop
and
and
xchg
test
add
lock
ljmp
mov
jae
int
icebp
in
int3
movsb
mov
pop
adc
inc
xor
div
push
aad
lock
call
outsl
push
jne
adc
or
icebp
push
in
xor
xor
inc
in
cmp
add
dec
xchg
frstor
jmp
xchg
add
cmp
loopne
xchg
jbe
cwtl
sbb
movsb
lcall
inc
clc
insl
jl
pop
cltd
or
adc
pushf
cmpsb
data16
nop
insl
bound
in
aad
insl
and
inc
scas
dec
loop
mov
sbb
mov
lods
mov
test
imul
loope
lcall
dec
mov
aas
hlt
xlat
cmp
leave
fwait
xor
adc
pushl
cli
or
movsb
inc
mov
rcr
pop
aam
push
mov
out
or
xor
add
inc
xchg
pop
fs
shl
repz
pop
sahf
push
mov
mov
sbb
push
inc
popl
mov
movsl
dec
aas
push
jae
shl
paddd
std
inc
mov
dec
xchg
mov
jb
cmp
dec
push
or
aam
test
jge
jo
stos
clc
lret
jg
in
jg
and
mov
popa
mov
lds
add
negb
jno
pushf
push
mov
lea
outsl
mov
dec
ficompl
mov
sub
test
xchg
rorl
xchg
push
fsub
cli
pop
mov
popa
icebp
jb
and
mov
dec
mov
imul
aas
mov
ljmp
adc
jmp
mov
cmp
divl
cmp
sub
pop
sub
mov
pop
jl
dec
daa
mov
lcall
push
cltd
sub
push
into
cmp
mov
fldcw
mov
jle
call
xchg
fs
sub
pop
js
stos
mov
int
xchg
xor
mov
mov
bound
and
xchg
add
cmp
enter
lcall
cld
imul
fiadds
stos
out
add
jmp
push
daa
mov
repnz
and
mov
xor
popa
pop
repnz
mov
mov
mov
decl
cmp
movsb
iret
out
sub
icebp
movsb
insb
inc
in
jmp
dec
cmc
jb
fnsave
outsl
clc
jmp
or
add
subl
xor
sub
roll
mov
mov
lds
int3
enter
push
lock
push
mov
push
pop
mov
icebp
xchg
sbb
and
adc
hlt
loop
scas
fcmovu
lods
jecxz
pop
dec
mov
arpl
jne
mov
lcall
jmp
cmp
gs
and
faddl
inc
cld
jg
mov
xchg
sbb
push
rcrl
rcrb
mov
jp
jl
into
int
lcall
jp
mov
movsl
lcall
xchg
xchg
mov
pop
ror
dec
mov
sbb
adc
lods
cmp
into
imul
subl
mov
inc
lods
es
and
add
inc
add
js
aad
hlt
cmpsb
jmp
test
jg
sub
mov
fs
push
push
cwtl
popf
jmp
out
sub
add
mov
mov
in
push
add
ret
int
pop
pusha
movsbl
fcomps
mov
or
pusha
imul
fstl
push
cli
movsb
jnp
mov
in
inc
and
pusha
test
mov
jg
and
and
and
in
outsl
mov
scas
filds
dec
lock
outsl
xor
iret
pop
push
mov
pushl
lret
mov
cmp
leave
cmp
aad
inc
jle
add
mov
cld
lcall
fsubs
adc
mov
ljmp
adc
shl
arpl
and
mov
cs
mov
jl
jb
dec
pop
sub
pop
imul
sbbb
dec
andl
push
or
push
pop
and
inc
in
fdivs
adc
out
cli
call
jp
js
adc
adc
xor
mov
iret
mov
mov
dec
mov
ja
and
jnp
jge
les
mov
ljmp
and
call
pop
ret
sbb
shrb
enter
sbb
pusha
imul
cmpsl
push
popf
ret
hlt
sub
test
test
movsl
in
test
rcll
fs
cwtl
test
mov
popf
int3
add
call
mov
fs
mov
idivl
or
pop
xor
aas
cmc
ljmp
mov
ds
lahf
int
pushl
xor
hlt
jmp
mov
adc
jl
les
mov
dec
inc
test
shlb
test
push
and
xchg
jl
sbb
outsb
clc
shl
sti
lcall
pop
pushf
test
xchg
jno
ja
push
mov
mov
sub
orl
adc
push
cmp
and
cmp
mov
call
pop
cld
cli
cmp
movsb
mov
loope
xchg
jle
and
xor
push
or
fcomip
in
cs
movsb
xchg
data16
cmp
pusha
pop
jmp
cmp
ret
pushf
ljmp
dec
cld
adc
sub
andb
jmp
inc
jge
or
mov
inc
sbb
mov
movsl
out
and
dec
ret
fdivr
std
movsl
xchg
dec
and
pushl
pusha
outsb
push
ss
ljmp
incb
data16
sub
inc
movsb
fwait
jo
mov
jp
cmp
sahf
push
sbb
push
and
adc
xchg
pop
sub
jne
pop
shl
adc
outsb
push
sub
pushl
stos
aam
dec
pop
insl
into
jne
pop
pop
or
xchg
xchg
push
mov
hlt
movsl
sar
call
jno
jo
or
sbb
test
ja
pop
mov
mov
sbb
jae
jbe
ret
scas
sub
fldenv
popf
call
or
xchg
mov
test
jmp
push
dec
cltd
mov
push
mov
call
pop
lahf
addl
rcrl
adc
mov
icebp
xor
mov
dec
push
incl
movb
pusha
push
mov
fisttpll
jg
jmp
daa
out
lock
xchg
in
push
fsts
cwtl
jecxz
push
decl
in
push
mov
and
cmp
je
cltd
pop
out
and
sub
movsb
cltd
jle
dec
lods
sahf
movsb
daa
dec
jnp
add
in
jb
test
daa
inc
xlat
call
loop
and
sub
lods
iret
leave
push
inc
icebp
pop
je
movsl
sbb
jmp
jg
mov
cli
sub
mov
insl
push
xchg
out
in
pop
push
push
popf
cmp
lret
jbe
mov
mov
mov
fisttps
fidivrl
push
inc
adc
rolb
push
xchg
cli
ficomps
lret
lcall
dec
pop
fwait
arpl
cs
sub
gs
sub
das
into
add
inc
mov
xchg
xorb
mov
lcall
call
adc
add
push
mov
test
loope
lcall
outsl
test
inc
pop
mov
stc
lret
popa
sar
adc
mov
and
aaa
sbb
ds
adc
js
ljmp
and
sbb
push
sbb
or
shlb
xchg
orb
icebp
inc
sbb
rorl
outsb
pusha
mov
mov
inc
adc
push
and
jg
fidivl
in
dec
cmp
push
fidivl
mov
push
dec
jnp
arpl
ljmp
inc
ficoml
loopne
les
push
adc
lds
je
fbld
mov
je
and
jle
inc
je
mov
mov
pop
dec
negl
aad
or
jb
lea
cmp
xchg
scas
pop
mov
stos
cli
cmpsl
sub
jmp
pop
inc
cmp
adc
jg
imul
cwtl
insb
sub
add
hlt
add
stos
les
push
xchg
sahf
xchg
push
xchg
sbb
push
cmpsb
push
cmpsb
cltd
ret
pop
xchg
add
jae
or
dec
sar
decl
movsb
push
add
and
mov
subl
and
push
in
mov
add
lds
imull
imul
xor
adc
leave
data16
inc
loope
dec
shll
mov
sbb
cwtl
or
mov
dec
je
clc
cmp
aas
in
or
and
mov
movsl
xor
jg
mov
loop
addr16
jmp
fnstcw
rcrl
or
xchg
lock
mov
push
sbb
dec
inc
pushl
std
inc
pop
stos
mov
mov
inc
or
sbb
incl
arpl
jmp
and
or
mov
push
inc
xchg
lcall
mov
sti
hlt
int3
mov
fstp
pushf
sahf
sbb
pop
bound
ljmp
xor
daa
dec
popw
and
mov
jnp
pop
sub
bound
mov
sbb
cmpsb
ss
test
or
jg
data16
hlt
decl
push
cld
pop
sbb
or
nop
lods
insb
imul
mulb
mov
sub
cli
fistpll
mov
ret
push
lcall
stc
push
xor
out
aad
call
or
adc
jmp
fidivrs
repz
inc
decl
or
push
fcmovnu
scas
lock
sub
cmp
xor
xor
lahf
stc
faddl
aas
xor
xchg
mov
and
loop
scas
or
xchg
outsb
cmp
mov
cmpsl
addr16
xlat
jo
mov
in
mov
xchg
adc
xor
xchg
out
pusha
mov
add
cmp
std
lcall
xor
add
sbb
repnz
ds
addb
add
fs
call
mov
sub
call
test
adc
push
frstor
leave
push
jne
mov
data16
mov
sbb
dec
lret
xor
mov
dec
dec
push
jecxz
pop
fst
push
lcall
lcall
jno
lock
call
dec
jp
mov
push
and
bound
mov
leave
fildll
inc
insb
adc
inc
ficompl
inc
sub
jbe
dec
and
incl
pop
fcomps
in
mov
and
fldl
pop
or
dec
outsl
ljmp
jp
push
sub
push
into
loope
movsb
push
in
mov
cmp
int3
jo
int3
addl
jl
pop
pop
jge
or
das
push
mov
mov
int
mov
das
sub
jge
mov
or
add
jmp
and
rcl
test
adc
mov
enter
insl
adc
test
into
ret
or
push
pop
ds
adc
push
fistps
enter
icebp
nop
addr16
xchg
sahf
xchg
scas
je
sub
add
sbbb
ljmp
adc
in
cmp
js
out
adc
push
addr16
inc
xchg
decl
adc
push
jb
sbb
xlat
out
mov
mov
ljmp
adc
mov
mov
cmp
xor
mov
ljmp
mov
fs
mov
notb
mov
imul
lcall
pop
bound
jns
lret
sub
ljmp
lcall
in
nop
mov
or
jmp
push
sub
jbe
push
std
pop
mov
sar
jns
cmp
cmc
int3
jae
xchg
cs
fcmovnb
cmp
int
mov
decl
hlt
xchg
mov
push
jecxz
mov
test
loopne
in
lds
xchg
sub
cmp
add
or
clc
mov
shrb
sub
cltd
jmp
push
jmp
inc
ja
js
mov
dec
divl
out
adc
popf
mov
clc
insl
or
adc
imul
call
loop
stos
filds
inc
inc
lods
pop
dec
or
nop
push
std
dec
jl
adc
cli
inc
inc
inc
push
jb
popa
jb
das
and
aaa
jl
out
xor
jb
mull
adc
fs
pop
pushl
pop
hlt
push
popa
hlt
and
jae
adc
ret
inc
dec
pusha
in
dec
cmpsl
aaa
outsl
xorb
inc
mov
data16
adc
dec
push
and
jecxz
inc
adc
imul
adc
xchg
bound
pop
jae
imul
push
pop
xchg
sub
push
xor
stos
and
adc
lods
les
push
mov
jmp
adc
xchg
jl
ret
pop
aas
and
loopne
adc
sbb
push
and
incl
jecxz
lock
pop
rcll
xorb
cs
fsub
add
pop
adc
jmp
sbb
add
mov
push
jne
xchg
pop
sbb
pop
outsb
and
inc
mov
mov
sbb
sbb
mov
iret
push
jp
incl
mov
outsl
xlat
push
inc
mov
sbb
push
cs
outsb
mov
mov
arpl
repz
adc
jns
jae
xor
and
addr16
cmp
ljmp
push
xor
inc
inc
push
and
xchg
xor
inc
lock
and
mov
jmp
and
jb
jb
adc
pusha
add
or
incl
sub
push
push
and
and
jae
rolb
clc
push
popa
rclb
outsb
je
push
jae
aas
bound
and
jne
fadds
data16
inc
pop
adc
cmp
mov
clc
inc
test
enter
push
xchg
test
jg
or
psraw
or
pop
cltd
mov
sbb
inc
out
imul
lcall
jle
jno
in
dec
lahf
out
loope
mov
push
cs
xchg
fstl
inc
pop
jecxz,pn
sar
decl
sbb
shll
ljmp
adc
out
hlt
inc
inc
xor
and
test
mov
xchg
lcall
ljmp
cmpsl
inc
pop
enter
add
xor
lock
adc
stc
bound
mov
outsb
push
push
jl
out
lahf
xor
in
mov
adc
insb
push
inc
adc
imul
incl
enter
sbb
ret
xchg
mov
pop
sbb
push
cmpsl
outsl
push
aad
movsl
inc
mov
movsl
cmp
jg
fwait
ljmp
dec
bound
push
push
dec
mov
pop
xchg
jno
nop
incl
repz
add
daa
out
dec
test
push
dec
xor
xor
mov
call
and
and
fcomps
daa
gs
dec
incl
je
xchg
push
in
dec
dec
jb
les
and
inc
dec
xor
and
push
mov
jo
cmp
stos
jae
aaa
mov
lcall
daa
dec
cwtl
sbb
in
sub
loope
pushl
xchg
gs
test
sub
dec
push
ret
pop
push
enter
adc
in
incl
aaa
push
mov
push
pop
out
xchg
dec
sbb
mov
push
inc
scas
dec
adc
mov
pop
mov
outsb
or
sbb
movsb
movsb
out
clc
incl
mov
add
cltd
cli
int
mov
push
dec
adc
mov
sbb
fs
push
pusha
inc
or
sbb
call
sbb
xor
xchg
mov
xchg
cltd
outsl
les
ja
pusha
mov
adc
mov
push
push
xor
xchg
sbb
cmpl
rcll
sub
adcl
inc
mov
loopne
xchg
and
pop
fimull
lea
incl
cld
xor
cmc
push
inc
andb
mov
pushf
push
add
sbb
and
add
stos
push
js
push
push
xor
lcall
push
lds
cld
pop
je
arpl
bound
leave
jne
sub
push
dec
mov
pop
mov
xchg
and
adc
jnp
movsl
mov
jle
gs
pushl
dec
stc
cmp
adc
pop
into
dec
mov
sub
cmpsb
dec
sbb
jae
push
or
sbb
jns
lods
add
jl
shl
ljmp
mov
pop
imul
pop
clc
fisttps
sub
and
mov
cmp
out
xchg
ljmp
gs
outsb
fsts
call
movsb
test
jle
xor
sub
adc
sbb
add
ljmp
rclb
jecxz
and
add
aam
mov
adc
cmpsb
sbb
ljmp
pusha
and
cltd
adc
pop
fdiv
movsb
xlat
daa
sbb
cmpsl
outsl
pop
adc
mov
imul
sbb
stos
jns
push
adc
xchg
and
inc
adc
inc
inc
pop
mov
jo
dec
arpl
jae
sub
xor
incl
inc
and
xorl
add
ljmp
adc
pop
xor
inc
movsl
dec
stos
xlat
leave
push
inc
sahf
daa
cmp
fistpll
xchg
mov
mov
pop
sahf
jp
mov
pop
adc
or
push
adcb
fldenv
mov
push
adc
dec
shl
test
repz
cmp
pop
lea
pop
xchg
dec
cmp
adc
add
or
incl
push
out
or
mov
push
mov
mov
adc
lcall
scas
movsl
xchg
enter
leave
mov
js
pop
addr16
sub
mov
pop
cli
mov
ljmp
mov
mov
mov
in
rorb
push
outsb
and
insl
jmp
insl
std
pushl
mov
xor
je
cmp
inc
and
ljmp
add
push
mov
inc
mov
or
movsl
movsb
pop
jae
mov
dec
sub
cs
cmpsl
test
cmpsl
mov
cmpsl
ja
add
mov
in
adc
and
mov
push
insb
mov
test
xchg
jg
fstps
arpl
orb
and
out
cmp
fwait
sub
mov
rolb
and
call
and
mov
xlat
jae
ljmp
xor
push
ss
addr16
push
out
je
arpl
pushl
xchg
xchg
mov
andb
mov
mov
cmpl
popl
sub
mov
and
mov
test
ja
sub
dec
or
pop
cmpsl
or
sbb
jmp
insb
add
push
movsl
sbb
shll
fsubrl
ljmp
mov
sbbb
jg
mov
push
imul
jns
aad
xchg
jmp
hlt
adc
push
xchg
imul
icebp
xchg
insl
sbb
xchg
mov
or
adc
xchg
and
mov
inc
sbb
jmp
xor
sub
mov
cmp
jg
sahf
mov
pop
xchg
jmp
daa
adc
push
adc
leave
mov
hlt
xchg
push
push
testl
inc
inc
ret
inc
mov
and
xchg
push
push
jnp
dec
and
push
mov
std
lcall
sti
xor
sbb
cmpsl
and
push
and
out
push
cmp
jg
or
arpl
loop
popf
xorl
jne
jge
and
outsb
jbe
jnp
xchg
jecxz
insl
sub
jmp
jne
mov
pop
adc
add
inc
decl
cmp
cmp
cmp
xchg
xchg
and
mov
es
mov
mov
push
ja
sbb
mov
xor
sbbb
pop
xor
incl
pop
xor
mov
xchg
aam
icebp
mov
pop
out
sub
arpl
mov
jnp
scas
mov
sbb
fsubp
sub
mov
add
mov
push
ljmp
test
roll
push
dec
push
mov
xor
xor
mov
les
pushf
cmp
repz
xchg
std
cltd
orl
aaa
int
sub
mov
push
mov
insb
adc
inc
mov
and
fildl
ret
xchg
test
pop
jg
inc
out
arpl
loope
mov
push
wrmsr
push
dec
inc
inc
inc
incl
movsb
jae
push
imul
cmp
stos
pop
rcl
pop
aam
aam
and
adc
inc
xor
xlat
lea
ficompl
jmp
jne
jg
mov
push
shrb
mov
stos
fwait
mov
bound
pop
ds
addr16
lcall
lods
lods
jecxz
fs
cmpsb
xchg
sub
stc
dec
xlat
pop
aam
xchg
jns
adc
loope
xchg
mov
sbb
cld
andb
mov
xchg
pusha
mov
fdivrl
fbstp
aad
popf
push
in
aad
rorl
adc
imul
jmp
lods
xchg
ss
stos
xchg
je
incl
push
sbb
inc
pusha
fs
mov
jmp
inc
ficoms
and
xchg
xchg
sbb
add
mov
adc
adc
incl
cld
sub
and
sub
stos
call
or
scas
mov
cmpb
cltd
in
repz
out
adc
dec
push
mov
scas
sbb
mov
xor
cmp
imul
sub
js
into
stos
int
aaa
mov
add
and
and
jae
mov
xor
cmp
or
fcmovnb
sbb
and
mov
clc
inc
lret
in
ret
pop
sbb
cmp
mov
pop
shrl
mov
mov
and
loop
lea
sahf
jbe
and
sahf
push
insb
addr16
fstl
imul
push
mov
ja
dec
or
add
jbe
rcll
dec
sub
iret
cs
sar
lcall
daa
pushf
jne
sahf
imul
mov
loop
rcll
incl
push
inc
pop
sbb
loop
push
leave
pop
fstpl
outsb
mov
adcl
cmpb
loop
pop
lcall
add
add
shll
push
push
in
icebp
mov
loop
xchg
insb
xchg
cmpsb
sub
repnz
cmp
mov
jl
mov
loope
cwtl
push
mov
adc
pusha
jo
inc
or
mov
cli
pushl
outsb
sbb
dec
jle
mov
xchg
or
mov
aaa
ds
cs
ret
call
lahf
xor
lcall
sub
fsubl
push
and
and
cmp
inc
in
sbb
fcompl
inc
sbb
cmc
jmp
popf
push
insb
stos
jnp
je
mov
xor
xchg
lds
fidivrs
decl
cmp
je
jne
adc
stos
lahf
pop
xchg
pop
gs
ds
bound
cmp
jnp
aad
cmp
push
dec
dec
ja
in
xchg
inc
dec
sbb
dec
ret
adc
lock
aas
xor
or
xchg
adcb
aad
rclb
iret
out
pop
mov
mov
adc
mov
lea
mov
clc
cli
ss
repnz
push
dec
xchg
pop
mov
scas
in
lret
mov
add
dec
mov
jae
xor
xchg
stos
push
js
sub
jns
pop
and
lcall
add
sbb
sbb
mov
les
incl
jmp
je
lock
mov
cmpsb
mov
mov
mov
addl
sub
pop
rcl
jo
ret
sbb
push
imul
mov
fsts
sbb
cmpsb
push
mov
and
cmp
adcl
scas
push
rolb
mov
or
jge
ds
pop
inc
outsl
sbb
mov
sub
stos
test
call
scas
inc
test
loope
fisubrs
mov
or
push
inc
mov
pop
mov
sbbb
cs
mov
mov
adc
sbb
cld
nop
jo
jmp
roll
sub
dec
es
mov
mov
sbbl
mov
pushl
jbe
aad
inc
xor
mov
call
cmpsb
std
fdivr
in
pushl
outsl
ss
aaa
addb
pop
dec
sbb
ret
dec
xor
int3
xlat
dec
lahf
fdivrp
enter
dec
je
icebp
stc
xor
mov
lcall
and
push
bound
std
ljmp
and
xchg
fcomps
cli
pop
xor
rolb
pushl
sub
aam
out
cmp
hlt
and
mov
in
mov
or
sub
ret
adc
or
dec
roll
mov
loop
or
and
adc
lds
push
sub
inc
lret
add
jo
adc
jge
dec
aas
incl
in
sbb
mov
cwtl
inc
inc
adc
mov
aam
nop
inc
sahf
sbb
sub
mov
add
shlb
mov
dec
repnz
inc
outsl
mov
and
fcmovne
add
push
and
call
ljmp
cmp
xchg
inc
jb
inc
dec
add
sbbl
xor
push
idivb
push
dec
push
fisubrl
and
pop
xchg
dec
bound
mov
loop
push
cwtl
cmp
loop
nop
push
test
lcall
movsl
hlt
inc
dec
xor
shlb
mov
cwtl
sbb
scas
sarb
stos
sbb
gs
das
lretw
in
ljmp
and
pop
jo
scas
mov
jp
pop
ror
push
mov
dec
shrl
insb
mov
stos
imul
ds
lods
mov
ss
fsub
int3
xor
xor
inc
pop
lcall
pushl
xor
fadds
sbb
sahf
out
shll
out
loop
in
hlt
cmp
mov
shl
into
dec
mov
sub
jnp
ds
push
in
lcall
das
sar
pop
mov
nop
inc
dec
sbb
pushl
mov
andl
sbb
icebp
cli
mov
cmp
mov
push
jne
push
call
add
xor
out
inc
xchg
repnz
sbb
mov
xor
and
push
mov
das
lcall
adc
fsubl
mov
ret
lcall
ret
dec
cmp
iret
mov
mov
sbb
cmp
inc
push
fiaddl
sar
int
daa
dec
pop
ret
or
je
push
or
jo
fdivrl
sub
push
xchg
movb
dec
cmp
pop
mov
ljmp
or
pop
jmp
je
leave
cmpsl
mov
pop
jnp
xor
mov
stos
mov
incl
sub
xchg
aad
lods
cmpsb
mov
loopne
dec
das
fs
push
stos
scas
insl
push
call
imul
out
mov
mov
cwtl
mov
pop
cmp
nop
cld
xor
cs
dec
pusha
call
dec
das
fucom
call
jl
push
xor
imul
add
add
dec
imul
xor
push
lea
dec
add
jno
call
jl
enter
aad
sbb
cwtl
xor
cmp
jmp
jecxz
int3
xchg
jno
dec
aam
lahf
cli
mov
mov
mov
add
cmpsl
sbb
pop
addb
jg
pop
add
pop
mov
adc
push
and
or
call
enter
sarl
cmpsb
mov
ljmp
and
sub
scas
insb
dec
adc
jl
aaa
enter
xor
cmp
aaa
sub
dec
pop
adcb
push
es
mov
inc
push
insl
mov
mov
push
daa
jnp
lret
pushl
iret
hlt
jmp
jecxz
clc
cmp
adc
cmp
xchg
lock
push
or
push
imul
test
inc
adc
mov
testb
adc
xchg
into
or
xchg
sub
clc
dec
pop
add
pop
and
loop
lahf
fisttps
stc
mov
mov
mov
lcall
fcompl
clc
mov
jle
sub
ret
xchg
sbb
lock
inc
ret
sarb
stos
pop
mov
dec
mov
mov
mov
push
test
js
sahf
andb
cmp
jnp
lds
cld
jmp
mov
xor
bound
mov
clc
push
fmul
mov
lds
dec
pushl
gs
pop
jno
inc
andb
add
out
cli
and
mov
dec
push
sbb
sub
test
cmp
cmp
hlt
das
clc
ljmp
push
pop
pop
xchg
push
mov
push
insb
push
push
loopne
add
ds
jge
add
movsb
xchg
and
sub
outsl
jbe
mov
mov
cltd
xchg
ffreep
add
and
push
mov
xor
sub
call
adc
scas
sub
xchg
xchg
insb
sub
aam
mov
call
mov
outsb
rol
aaa
mov
adc
in
mov
inc
xchg
mov
push
and
inc
out
pushl
xchg
out
and
xor
hlt
ljmp
mov
inc
adc
jl
sub
xchg
mov
pushl
xchg
lds
inc
sub
mov
cwtl
pop
push
push
repz
add
arpl
outsb
cs
clc
jmp
lret
popa
aam
sbb
cmpsb
inc
dec
pop
cli
cltd
cwtl
test
call
stos
test
fmuls
mov
rolb
and
pop
call
xchg
mov
movsl
cmp
aad
lods
mov
ljmp
inc
ljmp
xor
jg
xor
shlb
jmp
loopne
mov
dec
sub
mov
inc
mov
enter
xor
lods
inc
jbe
xchg
ja
dec
mov
ljmp
fnstcw
test
or
jae
shl
dec
ja
dec
adc
cld
jmp
pop
lcall
push
popf
sbb
lret
jns
addr16
gs
ljmp
or
adcb
adc
xchg
mov
jmp
inc
inc
movsl
cs
or
pusha
jle
and
rclb
adc
push
test
pop
mov
pushf
sub
aam
dec
mov
sub
mull
ljmp
sub
pop
push
adcl
shll
mov
adc
pop
arpl
out
add
aas
movl
lcall
sub
test
push
sbb
lret
fdivl
and
or
icebp
fadd
subb
ret
mov
cmpsb
jmp
popf
or
xor
mov
dec
test
mov
push
jp
sub
cwtl
shrl
cmp
aam
ljmp
or
jmp
dec
pop
test
test
and
mov
pop
lods
mov
mov
jg
inc
cltd
adcb
cmp
fsts
adc
inc
dec
ljmp
mov
out
xchg
cmp
arpl
pop
mov
dec
mov
pop
jo
xchg
dec
scas
and
lcall
aam
btc
xor
xor
pop
mov
popl
mov
push
lcall
inc
in
sti
decl
dec
insl
dec
test
jp
push
mov
leave
dec
pop
xor
pop
push
lods
sahf
sbb
mov
aad
push
adc
pushf
cvtpi2ps
imul
scas
xchg
dec
mov
mov
sub
cld
jmp
and
call
xchg
jb
add
cmp
xor
jmp
popa
loopne
jp
push
flds
inc
adc
mov
decl
mov
shlb
push
mov
out
jo
adc
jae
mov
jmp
pusha
lods
cmp
lock
xor
loopne
cmp
outsb
xor
fbld
jbe
lods
xor
xor
std
sti
push
fildl
dec
fwait
push
fs
ljmp
or
jmp
sbb
call
cwtl
stos
and
mov
xchg
mov
inc
loop
inc
mov
pop
xchg
push
call
jno
cld
imul
pushl
sub
sbb
repnz
jl
adc
lret
cmp
mov
pop
sbb
xchg
sbb
dec
xor
and
mov
cmp
shrl
and
pushl
jae
out
mov
dec
lret
sbb
fnstenv
inc
or
adc
and
ljmp
push
fwait
mov
push
pushl
lock
imul
and
icebp
mov
pop
test
xchg
or
push
icebp
xchg
mov
bound
mov
sarb
decl
mov
cltd
mov
adc
xlat
orl
inc
mov
js
cmp
xchg
xchg
mov
sti
das
mov
in
xchg
lds
mov
mov
cli
or
jmp
push
or
in
jae
nop
sarl
inc
jmp
xchg
dec
sahf
xor
sbbb
jo
cmp
or
cmp
adc
inc
sub
sbb
lods
xor
jg
sahf
push
leave
xor
fwait
repz
lret
sub
and
lcall
mov
mov
inc
sbb
xchg
add
or
xor
push
jg
decl
mov
cltd
ss
shl
adc
addb
lret
mov
dec
cli
fwait
and
adc
mov
mov
mov
sarl
and
orl
or
xor
mov
add
push
shll
sbb
or
mov
imul
cmpsb
pop
mov
out
mov
inc
mov
int
lock
mov
xchg
cwtl
xchg
jmp
mov
jg
and
pushf
mov
add
mov
jmp
inc
adc
ja
mov
xchg
pushl
shll
sbb
mov
ljmp
mov
cltd
sub
ss
in
mov
repz
push
ret
fsubrl
jl
push
ljmp
or
and
incl
aas
cmp
mov
sbb
fimull
lods
lret
loop
adc
lods
imul
jmp
sbb
or
scas
mov
adc
sti
stos
xchg
repz
xchg
jo
xor
fistl
adc
cmpsb
ljmp
cltd
lcall
int3
in
or
mov
sbb
movsb
sbb
orl
fwait
adc
sbb
rorb
mov
shrl
jnp
cwtl
aaa
loop
movlps
lods
test
nop
sbb
mov
lcall
in
mov
mov
xchg
or
mov
and
sbb
or
sub
mov
sub
das
mov
nop
sub
mov
data16
ljmp
dec
in
cmpsb
call
sahf
movsb
dec
inc
mov
mov
hlt
cmpsb
enter
push
or
dec
xchg
jl
inc
mov
ret
sbb
pop
xor
push
and
cld
mov
mov
push
sub
test
jecxz
das
mov
int3
call
mov
repz
fcoml
and
aaa
daa
adc
mov
int3
push
enter
xor
incl
ret
stos
sub
int3
int3
pushl
mov
mov
jns
sarl
xor
inc
pushf
ss
repnz
inc
aad
dec
stos
adc
scas
jb
lods
adc
js
inc
and
cltd
lret
adc
dec
sbb
jg
lods
lds
pop
adc
pop
xchg
das
mov
xchg
pop
rol
roll
sub
sub
push
and
mov
sub
adc
add
add
sub
enter
flds
push
or
test
clc
decl
and
xchg
cmp
jb
mulb
repnz
cvtps2pd
fcoms
std
mov
xchg
adc
mov
jp
mov
xchg
dec
push
imul
imul
dec
sahf
test
rclb
decl
xor
jnp
lock
cmpsl
clc
cmpsb
scas
cmp
test
shll
xor
ljmp
cmp
lahf
sbb
iret
dec
decl
push
test
shll
sbb
and
xor
mov
pop
mov
sub
push
fnstsw
add
jnp
js,pt
mov
add
lret
dec
jl
sub
sub
call
cwtl
sbb
and
mov
lret
sub
fwait
jecxz
int3
rcrl
ljmp
ja
and
in
cmp
sarl
vmwrite
movsl
fwait
rcll
sub
outsb
movsb
mov
mov
pop
das
or
mov
sar
mov
sbb
cmc
mov
stc
jmp
mov
aad
xor
sub
sbb
fs
movsb
ljmp
sbbl
jo
dec
cli
push
sub
cmp
ds
aad
add
lcall
adc
inc
lret
push
orb
or
incl
xor
mov
sbbb
in
iret
imul
inc
pop
jl
mov
enter
pop
dec
jg
jg
ret
cld
and
clc
cmpl
xlat
jmp
out
mov
cld
dec
popf
orb
cs
push
repnz
cmp
mov
mov
mov
mov
arpl
xchg
decl
mov
xchg
fmuls
leave
mov
aad
test
test
in
lcall
sar
pop
jl
rorb
lds
fsts
xor
xchg
mov
decl
rcrl
inc
pusha
jge
fcmovbe
inc
ficoml
cmp
xor
xor
lret
roll
lret
cld
inc
lcall
incl
in
sahf
jno
scas
inc
push
test
nop
inc
rclb
in
cmovno
loopne
push
mov
incl
sub
loopne
repnz
dec
rcrl
and
cmp
jne
std
jg
add
add
popf
iret
repz
push
add
rcr
and
idivb
xchg
sbb
shll
pop
faddl
push
lock
mov
push
aam
pop
cli
incl
loopne
lock
into
cs
mov
or
and
xorb
add
in
incb
push
insb
in
and
dec
mov
push
xchg
mov
cli
fists
test
insl
dec
xchg
xor
lcall
jo
aaa
shlb
and
into
or
sub
sub
data16
leave
or
popf
ss
leave
inc
scas
lret
jg
jb
push
push
ss
cltd
xchg
imull
sbb
ljmp
ret
sub
mov
repnz
fmuls
ss
push
sub
cmc
cmpsl
push
mov
popf
pop
add
int
dec
mov
sbb
std
pop
xchg
mov
dec
mov
cltd
push
or
in
sarb
dec
push
fldenv
decl
sbb
mov
inc
mov
mov
pop
je
mov
sub
cmp
lods
add
cmp
nop
cmp
and
dec
sub
inc
dec
xchg
sbb
adc
stos
in
mov
lcall
jne
cmc
insb
lods
mov
cmp
sti
pusha
xchg
inc
cli
adc
cmpl
arpl
cmp
add
sbb
sti
mov
pop
add
adc
mov
inc
hlt
cwtl
arpl
clc
test
sub
sub
mov
ficompl
dec
mov
mov
jmp
mov
add
call
xchg
xchg
cmc
orb
or
andl
je
leave
xchg
sub
jmp
dec
inc
pop
hlt
les
push
add
xlat
incl
add
pop
cmp
mov
jmp
lods
cwtl
xor
fidivl
es
push
ds
out
repnz
shrb
cs
jmp
ret
icebp
dec
pop
inc
xchg
das
js
dec
adc
movsb
mov
jecxz
les
mov
mov
cmc
outsl
clc
mov
pushl
add
jbe
xchg
lds
popa
mov
add
pusha
ljmp
lods
aaa
rclb
hlt
dec
adc
dec
adc
pop
or
pushl
out
mov
movsb
stos
mov
adc
out
sti
or
pop
jl
les
pop
loopne
xor
out
and
mov
into
shll
sbb
pushl
fdivrs
inc
fs
not
shlb
out
cmp
inc
jae
xor
push
cmp
js
sub
das
mov
lds
hlt
mov
std
aad
or
push
pop
cwtl
ss
xchg
pushf
stc
cmp
lret
mov
xor
sub
gs
cmp
sub
shlb
xchg
pusha
mov
in
out
clc
add
and
pop
cli
pop
repnz
fiaddl
sbb
mov
adc
in
lcall
js
or
frstor
ficoms
sub
add
or
in
popa
mov
push
scas
insl
jb
sub
xor
mov
dec
cmpsb
dec
jae
das
arpl
mov
pusha
and
fidivs
mov
xchg
add
inc
in
in
clc
push
xchg
xor
out
cmp
mov
mov
cmc
call
int3
inc
lahf
insl
mov
mov
mov
popa
pusha
cwtl
lcall
sbb
xchg
sub
hlt
es
jns
mov
ljmp
sar
hlt
lods
mov
lea
in
pop
stos
xchg
lret
push
mov
push
scas
addr16
ja
aad
inc
push
addb
str
sar
loop
pop
add
sub
xchg
and
add
xchg
pop
or
loope
js
adc
mov
enter
mov
and
int
ljmp
xchg
ret
loopne
roll
cmp
pop
add
jo
push
dec
sub
sti
add
mov
rolb
jo
and
xorl
outsb
and
mov
pop
cwtl
add
sar
pop
or
xchg
incl
sbb
fldl
in
push
add
xchg
in
inc
xchg
pop
mov
movsb
mov
lahf
mov
cmp
push
sbb
aad
jge
xchg
mov
shlb
or
inc
hlt
dec
mov
jge
fdivs
dec
xor
and
or
adc
addb
fsubs
aaa
cld
lcall
inc
inc
aaa
stc
fsubrs
xchg
lea
pop
mov
add
xorl
ret
add
push
sbb
jp
fsubr
stos
call
outsb
mov
je
sar
pushl
int3
pop
out
cli
ret
jno
push
aas
lods
in
inc
and
sbb
rcr
xchg
out
decl
sti
sbbl
lods
sti
jmp
pusha
xor
add
sub
call
jl
int
cmpsl
and
mov
pop
div
je
jl
hlt
inc
pop
push
dec
mov
mov
fisubl
dec
subb
push
fcos
decl
inc
dec
sbbl
daa
ss
mov
fdivrp
ljmp
push
addb
out
addl
or
scas
in
and
in
mov
dec
je
pop
in
cmp
or
sbb
je
add
mov
pop
inc
es
adc
sarb
dec
cli
call
ret
jmp
adc
push
in
xchg
not
sub
daa
popa
repz
bnd
subb
movsb
iret
arpl
sub
push
ss
dec
mov
inc
dec
decl
call
fdivrs
mov
test
rol
fadds
mov
fisttps
decl
adc
icebp
popa
les
xor
pop
add
outsb
aam
ljmp
cmp
inc
mov
ja
rcll
push
dec
setp
hlt
sarb
jmp
sbb
and
jo
shll
je
movsb
dec
pop
xchg
stos
test
incl
cmpsb
pop
xchg
pop
inc
sub
scas
call
in
xorb
push
lcall
fnstenv
jnp
outsb
fsts
push
cmp
dec
ljmp
jmp
das
add
pushl
out
inc
sub
push
mov
inc
mov
and
xchg
test
mov
jne
out
ret
shrb
dec
popf
pop
mov
dec
mov
jp
in
add
or
incl
rolb
icebp
pop
loope
ret
adc
pop
inc
inc
roll
sbb
mov
orb
and
les
outsb
mov
xor
jmp
xor
adc
pop
roll
mov
add
bound
inc
into
mov
inc
cmpsb
je
icebp
fistps
pop
loop
pusha
or
enter
adc
mov
ljmp
nop
add
xchg
jbe
pushf
adc
inc
mov
les
push
aaa
fdivr
jmp
or
sbb
shrl
mov
sbb
add
pop
sub
movsb
push
decl
dec
popa
cmp
mov
push
adc
push
bound
sub
xchg
pop
mov
jmp
out
das
imul
test
cmpsb
dec
lods
shrl
in
aaa
mov
nop
inc
or
aam
popf
fs
sbb
je
lcall
test
inc
ja
inc
push
inc
sub
call
insb
xor
xchg
cmpsb
cmp
cmp
dec
or
bound
adc
lcall
push
xor
xchg
push
pop
or
pop
inc
fldl
inc
push
pushf
jne
lahf
jge
mov
add
jne
push
add
imul
mov
movsl
push
or
data16
jg
xorb
xchg
xor
scas
jo
push
cmpsb
or
fdiv
cwtl
push
out
push
mov
fdivrl
je
sbb
inc
mov
push
lret
dec
sub
pop
lret
xchg
add
inc
sbb
mov
and
sbb
movsb
mov
pop
inc
fnstsw
and
fists
mov
fs
lret
adc
cld
cmp
pop
cs
pop
xchg
mov
or
jle
xorb
and
addl
mov
int3
xchg
popa
or
incl
js
and
outsb
sub
sbb
loop
xor
lock
sub
nop
inc
lret
fstpt
loop
aaa
xchg
ja
mov
nop
fs
dec
pop
pop
out
add
dec
xchg
sbb
movsl
xchg
data16
xchg
fcomip
incl
test
cmp
xchg
mov
lahf
rorl
jns
lahf
aas
sar
ficoml
or
in
push
xchg
cltd
push
lea
repnz
jg
dec
fs
inc
ljmp
push
ret
subl
xchg
test
stos
mov
gs
sahf
lods
pop
int
cmpsl
mulb
inc
push
sub
sbb
xchg
shl
aad
pop
lret
nop
ljmp
push
mov
push
sub
push
jbe
mov
sahf
or
popa
mov
lods
mov
jp
sbb
add
lds
pop
inc
iret
mov
call
or
and
pop
shll
sarl
stos
mov
inc
sbb
ds
xchg
aaa
jo
cmp
sbb
inc
pushf
in
leave
cmp
xorl
inc
out
or
lea
cwtl
jg
lods
addr16
cmpsb
cmp
and
movsb
add
in
sbbl
adc
add
lock
mov
sbb
push
dec
or
mov
sbb
call
inc
sbb
shlb
adc
pop
orl
or
add
dec
push
xchg
shr
dec
outsb
imul
aam
sub
insl
jb
mov
cmpb
or
jg
cwtl
adc
and
jae
dec
adc
mov
sub
and
jge
inc
dec
icebp
push
push
mov
popf
incl
xchg
aas
popf
or
mov
aam
pop
adc
shlb
in
push
adc
scas
nop
movsb
and
adc
adc
cli
mov
sti
subl
mov
ljmp
inc
sub
lods
test
das
rclb
ds
and
scas
mov
sub
incl
pop
dec
lock
xorb
jmp
call
sub
mov
dec
or
decl
adc
aas
lock
add
int3
mov
add
hlt
xchg
inc
dec
jns
sahf
add
mov
inc
cmp
push
add
mov
adc
mov
std
inc
sub
adc
iret
xchg
cs
rcl
add
adc
pop
jmp
cmp
mov
sbb
jmp
fdivr
sub
inc
pop
cmp
push
mov
in
decl
inc
dec
add
and
pushl
xchg
loopne
cmp
decl
test
add
mov
icebp
inc
jmp
loopne
aaa
js
mov
mov
adc
jp
aaa
mov
jnp
pop
xchg
adc
adc
mov
add
repz
fnstenv
mov
sub
pop
fs
adc
pop
decl
lret
rcrl
push
mov
enter
xchg
out
sub
ljmp
fisubrs
adc
pop
fisubrl
lret
mov
sub
cmpsb
fnsave
lock
bound
add
pop
inc
mov
push
ljmp
inc
mov
dec
sub
push
push
cmp
add
into
jg
mov
addb
movsl
bnd
cmp
add
sub
out
clc
incl
imul
arpl
pop
dec
mov
push
or
mov
inc
xchg
pushf
push
or
pop
into
jg
add
inc
lret
lock
or
dec
nop
mov
and
subb
in
or
test
and
xchg
call
dec
or
ret
jo
lods
es
adcl
call
cmp
push
push
add
lea
sbb
push
pop
or
icebp
and
outsb
jp
sub
hlt
aaa
pop
add
filds
enter
ret
testb
dec
mov
jae
pushf
fwait
in
dec
xor
dec
and
fistps
test
movsl
clc
mov
aam
sub
mov
and
fstl
sbb
push
cs
inc
repnz
xor
incl
mov
jns
ss
jmp
hlt
inc
popf
into
in
enter
mov
dec
out
mov
in
imul
push
mov
insl
xchg
mov
and
outsl
push
aam
mov
je
fs
sbb
repnz
mov
rolb
lcall
sbb
ss
add
fisttps
cltd
pop
jo
and
cmpsl
add
dec
cmp
push
loopne
jnp
add
add
fiaddl
inc
jge
push
fs
pop
or
insb
jo
add
lea
dec
cmp
jg
xor
adc
sub
clc
add
adc
pop
shll
push
shll
mov
xchg
imul
orl
std
or
fbstp
jmp
sub
sbb
add
leave
xchg
xchg
dec
test
movsb
scas
fidivl
xor
mov
mov
xchg
add
aad
jg
aam
jp
mov
add
sub
test
aam
ljmp
lcall
jg
dec
das
or
pop
nop
push
fwait
cs
mov
adc
call
pop
test
pop
jo
imul
cs
out
nop
push
shrl
xlat
rcll
dec
add
dec
dec
jg
pop
cs
xchg
ljmp
int
xchg
or
fcoml
cltd
std
push
xor
in
lcall
cld
push
xor
pop
cmp
add
data16
sub
jg
add
cmp
clc
cmp
or
cmp
popf
adc
ja,pn
lock
clc
inc
jg
xlat
rcrb
add
lods
xorb
mov
jo
add
xchg
pushf
push
push
cmp
jmp
and
push
cmp
int3
cmp
sbb
or
inc
insl
mov
addl
add
rcr
sarb
ljmp
outsb
enter
aad
mov
mov
push
xchg
int3
mov
call
xchg
adc
xchg
xor
xlat
pop
or
push
xchg
incl
fcoml
push
sbb
mov
mov
lahf
dec
dec
xchg
adc
in
frstor
mov
inc
fsub
sbb
decl
movsb
movsb
push
cmpsb
dec
mov
fsts
pop
and
sbb
dec
inc
dec
mov
mov
mov
outsl
icebp
xchg
push
push
fcoml
scas
add
or
add
lcall
push
add
loope
push
push
bound
repnz
mov
out
add
mov
mov
adc
inc
add
push
jno
add
bound
jp
inc
call
decl
je
push
movsb
test
dec
pop
cmp
xchg
je
vpaddsb
arpl
stos
loopne
leave
or
fs
jmp
sub
mov
popf
dec
hlt
sbb
mov
push
rorb
inc
leave
adc
stos
mov
jecxz
movsb
rorb
sub
fldenv
push
mov
rorb
adc
shll
cmp
push
aaa
sarb
rcl
js
push
push
or
inc
sarb
movsb
clc
pop
pop
pushf
dec
or
xor
ja
call
sbb
push
stc
arpl
dec
dec
or
or
adc
adcb
dec
add
inc
adc
fxch
add
mov
mov
push
mov
lock
fnsave
pop
xchg
int3
pop
nop
int3
cltd
fistps
adc
cmp
stc
dec
loopne
orb
dec
push
inc
sub
pushf
xchg
dec
adc
push
test
push
pop
jo
filds
adc
sub
sub
insb
inc
test
ljmp
rcll
or
mov
dec
mov
popl
mov
ljmp
adc
stc
test
subb
mov
inc
xor
inc
add
pop
ss
mov
push
or
pusha
add
sub
adc
jmp
incl
lcall
decw
clc
arpl
sub
ret
decl
dec
or
fisubl
clc
lods
pop
jns
int3
jb
fisubrs
sbb
loope
pusha
fdivr
jg
inc
pcmpgtb
adc
cmp
cwtl
mov
cmpl
push
sub
xchg
fiadds
or
adc
movsb
nop
loopne
js
inc
decl
xchg
pop
cmc
jmp
ret
lods
es
mov
sbb
adc
ljmp
inc
outsl
jle
push
or
pushf
push
mov
sbbl
adc
std
mov
push
es
decl
pop
dec
adc
or
and
pop
xor
rcrl
pop
loop
jmp
inc
incb
call
and
xchg
fstps
push
mov
rorl
add
cld
rcrl
popf
ficomps
test
dec
xchg
or
xchg
loope
fsubp
xchg
cmp
pop
mov
ljmp
cli
mov
pushf
mov
dec
and
mov
or
sbb
sbb
incl
movsl
cwtl
xchg
push
push
mov
mov
loop
push
jne
test
mov
lea
rcl
decl
push
rcrl
enter
xor
sub
ficoms
dec
inc
enter
inc
daa
incl
and
andb
sub
pop
sahf
jmp
push
cmpsb
cmpb
fs
fs
out
fsubrp
cli
jmp
es
fldcw
scas
fmul
pop
mov
cwtl
pop
dec
addr16
cmp
and
dec
xchg
sub
out
cmpsb
cmp
mov
add
cmp
add
jnp
inc
sbb
mov
sbb
sqrtps
inc
inc
inc
xchg
out
xchg
movsl
push
fcomp
outsb
mov
dec
ljmp
push
icebp
push
dec
mov
je
jmp
ret
xchg
inc
lods
stos
les
loop
out
idiv
ljmp
stos
cmp
dec
inc
cmp
mov
roll
loopne
pop
lods
adc
dec
test
out
cli
and
inc
inc
test
cmp
and
xor
or
ds
ljmp
mov
inc
sub
xchg
nop
enter
push
pop
in
xchg
mov
jmp
std
decl
icebp
push
rorb
sbb
adc
data16
flds
mov
ljmp
insb
pushf
loopne
popa
xchg
cmp
popa
insl
into
ret
ds
frstor
cld
loop
into
fstl
call
xchg
mov
iret
sub
jmp
movsl
dec
lret
in
ljmp
xchg
sbb
mov
ljmp
fst
lea
fs
cmpsb
mov
mov
pop
cmp
lcall
xchg
adc
cld
in
mov
gs
out
push
cwtd
push
aam
fdivr
mov
push
pop
subl
or
negb
shrl
xlat
decl
inc
cld
mov
or
pop
pusha
inc
repz
add
jg
push
movsl
bound
push
or
inc
xor
or
pop
sbb
cmp
push
std
decl
pshufw
add
mov
mov
std
dec
incl
xor
test
outsb
aam
add
idivb
mov
push
test
mov
int
jns
or
or
ret
ljmp
fs
cmpsl
adc
out
pushf
imul
mov
jmp
xorb
inc
mov
aam
jmp
mov
xor
mov
mov
dec
and
push
loope
push
push
sub
cmp
mov
jl
addr16
les
mov
dec
popa
mov
iret
lds
lahf
imul
inc
dec
int3
leave
sbb
pop
std
ficoms
test
pop
mov
adc
mov
icebp
decl
mov
shlb
addr16
mov
lret
push
cwtl
out
push
loop
cmc
and
lock
sub
movsb
xchg
lcall
lret
fsubrs
mov
mov
adc
gs
push
fwait
inc
cli
dec
mov
pop
in
and
mov
fcomip
mov
mov
movsb
adc
push
push
pop
push
rol
push
incl
cld
incl
and
call
orb
add
lret
or
and
fisubrs
rolb
stos
in
test
sbb
out
das
jl
add
jl
pop
rolb
call
add
pop
jns
jmp
sub
or
jne
mov
test
inc
std
and
cs
inc
jg
insb
add
les
ljmp
pop
xchg
add
mov
push
adc
push
pushf
mov
ljmp
jmp
test
test
int
or
rcrl
mov
sbb
push
lcall
adc
adc
sub
sbb
cwtl
xor
in
out
fnsave
in
pushl
aad
incl
dec
mov
pop
inc
dec
gs
insl
sbbl
jg
dec
xchg
xchg
sbb
pushf
or
pop
add
popf
add
push
je
pushf
xchg
cmp
popf
jl
push
jmp
pusha
add
jae
daa
add
call
std
bound
push
pop
mov
inc
xchg
sub
loop
pop
mov
jg
lcall
sbb
mov
cwtl
test
fisttpll
in
dec
xchg
push
fdivs
test
jg
mov
loop
rcrl
fisttpl
xor
mov
bound
shrb
dec
jo
incl
push
ret
sbb
and
inc
and
cmp
int3
outsb
jl
jo
and
incl
movsl
cmp
stos
mov
pusha
insb
cmp
push
leave
daa
sbb
xchg
movsl
adcb
ret
incl
adc
subl
pop
clc
sub
jp
adcb
rol
xchg
dec
jg
jg
cmp
mov
idivl
test
push
fucom
push
mov
push
frstor
xchg
icebp
dec
fldenv
mov
das
ljmp
pop
mov
movsl
lcall
push
stos
call
cmp
lcall
push
dec
lods
sub
inc
or
pop
xor
enter
sub
jmp
inc
daa
ja
daa
fisubrs
push
je
dec
jmp
cmpsb
call
xor
push
jle
or
imul
push
test
imul
push
jno
inc
out
sbb
adc
push
sub
lcall
lahf
adc
dec
roll
xor
cmp
scas
adcl
or
fs
test
lcall
rcrl
xor
or
jp
cmp
jnp
mov
into
lds
or
andl
hlt
nop
inc
rolb
jp
pop
push
dec
enter
jae
fiaddl
mov
lcall
cmp
inc
shll
xchg
lods
mov
push
aad
xor
mov
add
ds
sbb
jb
out
sbb
sbb
xchg
imul
mov
rcl
mul
or
lcall
sar
or
fucom
mov
call
ljmp
jmp
in
lcall
adc
xor
cmp
mov
add
mov
or
mov
and
cmp
add
in
in
xor
sbb
in
mov
or
ljmp
je
add
push
push
ljmp
in
shll
and
stos
pop
icebp
scas
dec
leave
mov
mov
jp
out
js
imul
cmpsb
inc
mov
hlt
jb
push
push
cmpsb
or
pop
jl
mov
int
xchg
xor
pushf
or
call
ja
xchg
push
test
push
test
test
mov
inc
outsl
out
add
popa
add
sar
xchg
inc
aam
xchg
fwait
ljmp
mov
pop
push
jg
iret
imul
lcall
ret
in
daa
jl
sub
jnp
incl
mov
xchg
dec
cli
leave
hlt
mov
mov
pop
outsl
sahf
xor
pop
adc
dec
insb
dec
scas
cli
decl
sbb
sub
pop
dec
mov
jnp
sbb
lcall
mov
add
or
mov
call
aad
loop
xor
or
and
mov
fimull
test
test
cmp
push
insb
sti
jns
cs
mov
fucom
out
and
insb
xchg
into
repz
ljmp
sbb
xor
mov
jmp
mov
nop
sbb
cmp
call
or
dec
dec
cwtl
mov
ret
fidivl
and
out
subl
ljmp
jbe
fs
sbb
mov
jmp
jge
test
xor
sti
test
lcall
stc
fmuls
clc
or
fwait
sbb
inc
pop
hlt
mov
int
mov
push
cs
inc
mov
dec
push
rolb
mov
out
scas
jns
ja
xchg
mov
jae,pt
or
dec
pop
mov
mov
cltd
cmpsl
add
fdivrl
add
pop
and
pop
mov
enter
pushl
shrl
cli
mov
push
dec
addb
in
andl
call
xor
cwtl
in
mov
cltd
pop
xor
cld
pop
mov
ljmp
insb
arpl
fisttps
std
fwait
inc
adc
or
ljmp
rolb
inc
mov
jbe
dec
mov
mov
clc
push
inc
xchg
add
outsl
pop
xchg
or
movsb
push
incl
mov
cmp
add
sbb
mov
xchg
int3
dec
jno
fcomip
jmp
iret
mov
call
test
sbb
ljmp
das
mov
cmp
push
and
addr16
dec
fwait
xchg
lods
fnstenv
adc
xchg
cs
jecxz
xchg
mov
incl
lods
lock
pop
ret
fisubrl
mov
pushf
and
jns
fnstenv
sub
cmpsl
out
fwait
jae
movsl
mov
hlt
mov
out
fcoml
mov
dec
mov
lcall
and
je
push
ret
add
push
jns
mov
sti
add
flds
mov
push
add
lock
lcall
add
and
push
lahf
sbb
cmc
mov
std
cs
inc
data16
sbb
decl
dec
js
fs
jg
add
sub
mov
call
add
hlt
jg
ljmp
fsubs
ljmp
jo
ss
push
pop
cli
stos
insb
aaa
fsubl
mov
mulb
or
sbb
lcall
nop
rol
sbb
aam
add
stos
sbbb
and
jg
call
mov
xchg
sub
pop
nop
add
mov
mov
call
cs
sub
call
xchg
pushl
xor
dec
test
sub
int
jp
imul
insl
movsb
add
dec
or
jg
test
aam
rcll
daa
mov
inc
add
ljmp
push
fdivl
sarl
cmc
inc
dec
lods
cwtl
push
inc
inc
mov
mov
ret
ret
notb
mov
lcall
or
sbb
insb
pop
pop
shl
mov
lds
push
mov
mov
xor
push
gs
lcall
inc
xor
test
dec
mov
mov
jb
test
dec
sbb
mov
mov
cmpl
aaa
movsb
push
fsubrp
mov
xchg
push
lock
pushl
shl
cmp
mov
xchg
push
pop
push
inc
or
adc
fisttpl
inc
pop
rclb
and
nop
inc
ss
sub
ljmp
xchg
rclb
les
in
pop
loopne
or
or
adcb
and
inc
fwait
addr16
inc
xor
lods
jle
xor
and
mov
xchg
scas
pop
lret
jl
fstpt
fidivl
fcomps
test
repz
ljmp
bound
dec
sub
mov
jp
clc
cli
mov
push
hlt
mov
lods
xchg
sub
mov
aas
mov
and
sti
push
mov
push
sub
out
inc
fwait
and
add
and
lret
and
sub
adc
inc
in
mov
adc
ret
jo
inc
mov
shrb
repz
popl
mov
into
xchg
mov
jb
lret
jge
lcall
mov
fdiv
fiadds
daa
addr16
xor
inc
add
jmp
lret
out
arpl
lcall
push
dec
dec
mov
pushf
inc
add
or
mov
cmpb
adc
pop
jge,pt
lcall
fmul
push
xchg
shll
test
pop
pushf
imul
jae
repz
xchg
test
cmp
xor
test
cs
les
pop
mov
inc
mov
call
pop
jbe
lcall
mov
sbb
ret
pushl
movsb
pop
std
nop
je
inc
sbb
sub
mov
rclb
cmpsl
push
lds
inc
mov
ja
rclb
fs
ss
call
lea
adc
cltd
and
ss
loopne
xor
mov
test
fsubs
outsl
fcompl
xchg
cmp
call
xchg
mov
jp
and
adc
jecxz
stc
test
call
dec
add
sbb
pop
sub
js,pn
in
bound
mov
mov
clc
call
dec
or
mov
ss
test
push
add
ljmp
and
test
in
jle
int3
syscall
adc
ficomps
rolb
dec
xadd
jno
cmp
or
cmpsb
jmp
outsl
xor
fwait
cwtl
mov
xchg
sub
lcall
mov
stos
add
fs
js
loopne
icebp
jl
jmp
cmp
sbb
push
cmc
addb
inc
cld
imul
xchg
push
scas
and
decl
push
jo
xor
rcl
inc
and
push
sbb
dec
mov
popf
mov
scas
jg
repnz
xchg
je
push
loope
movsb
add
es
sbb
call
cmp
data16
ljmp
loope
push
xor
inc
stos
sbb
mov
push
shlb
push
decl
nop
es
mov
pop
jae
inc
movsb
jp
cs
dec
or
ljmp
mov
or
aam
ss
mov
int3
ret
ljmp
jmp
loopne
and
aaa
mov
sub
mov
pop
mov
cli
decl
lods
repz
in
subb
out
mov
in
rcpps
aam
nop
hlt
ljmp
sub
test
jno
inc
fldl
decl
cs
enter
sub
mov
popf
insl
jae
xchg
lcall
inc
jo
cld
dec
mov
cltd
sub
xchg
cwtl
sub
jno
in
dec
cltd
movsb
lea
sub
push
xlat
testb
jo
in
insl
fistpl
dec
jno
xchg
call
pop
nop
call
repnz
lcall
sub
sbb
pop
push
inc
in
je
cld
pushl
mov
jle
adc
cmp
movsb
mov
mov
call
imul
leave
stos
gs
mov
lods
cmpsb
xor
shll
repnz
popfw
icebp
lahf
call
movsl
and
lcall
pushl
insl
aam
adc
cmp
in
andb
mov
out
or
iret
adc
dec
and
call
fnstcw
mov
adc
cmc
int
or
add
in
pop
lcall
call
xchg
bound
sub
imul
mov
aas
mov
aam
or
pop
lock
cmp
mov
cmp
sbb
call
fnsave
jne
pop
pop
sub
iret
push
jo
add
mov
dec
xor
in
mov
and
out
push
call
movsl
xor
int3
cmp
lcall
loop
vmwrite
mov
xor
test
aad
rcll
mov
cmpsb
inc
xor
pushf
adc
orb
sub
jmp
enter
lea
jne
xchg
pop
dec
cmc
pop
scas
ds
fwait
stos
insl
mov
movsb
loopne
lods
cmp
lcall
mov
mov
enter
mov
mov
jb
repz
fisttps
dec
add
jge
xor
out
push
xchg
adc
clc
cmp
mov
int3
jg
lahf
cwtl
out
sbb
add
mov
popa
sub
pop
mov
xchg
stc
sahf
adc
jnp
in
ret
inc
lods
jae
push
shll
sysenter
js
sahf
je
push
ljmp
or
pushf
ret
inc
mov
clc
xor
pop
repz
test
mov
daa
pushl
or
pop
xchg
insl
filds
add
mov
sub
imul
push
mov
xchg
rcll
popl
mov
lcall
mov
add
fbstp
xor
add
cltd
enter
aaa
xor
jnp
outsl
lock
negl
dec
scas
aam
dec
mov
push
hlt
dec
lcall
mov
out
lcall
and
jge
push
in
sub
sub
fdivl
pushl
loope
fsts
ret
in
popf
xor
aad
add
fisttpl
out
sbb
decl
lods
test
jge
sub
pop
fwait
lea
xchg
insl
aas
cmp
scas
pusha
lahf
cltd
lahf
jle
add
rcl
fisttps
cmpsb
pop
cmp
std
cld
pop
shl
std
std
jns
xchg
aam
and
dec
aas
add
stos
jmp
inc
ljmp
push
in
push
or
popa
fsubrs
mov
es
mov
mov
jmp
xchg
les
das
test
pusha
ja
test
scas
fcmovb
fsubl
push
lods
shrb
rolb
stos
icebp
in
or
fmuls
jle
mov
fbstp
xchg
lret
leave
add
or
cmc
push
scas
mov
out
add
jmp
adc
mov
in
gs
mov
mov
fisubrs
cmp
xor
out
movsl
pop
sahf
pop
xchg
lcall
add
pop
lods
scas
out
or
or
mov
mov
fisubrl
repnz
mov
jmp
dec
lcall
ds
arpl
in
scas
movsl
push
inc
and
fisubrs
sbb
adc
inc
shr
xor
mov
incl
les
sub
ret
enter
add
call
adc
fsubr
cmpsl
jb
lahf
mov
mov
je
ljmp
mov
add
dec
movsb
xchg
stos
add
jo
dec
in
mov
push
mov
dec
and
add
test
and
or
adc
and
insb
lds
lock
mov
xor
out
or
out
inc
mov
mov
lret
loope
adcl
mov
out
or
je
push
adc
or
rcrb
je
adc
or
bound
jnp
cld
pop
sub
adc
dec
mov
sbb
pop
or
adc
pop
out
mov
arpl
adc
mov
decl
add
shr
ds
jo
cmp
inc
jecxz
cltd
gs
sub
mov
xchg
ds
in
insb
inc
cmp
mov
or
pushf
sub
call
lock
inc
aam
inc
pusha
insl
mov
push
jo
ljmp
out
sbb
imul
mov
ljmp
lods
add
iret
sbb
lods
or
or
mov
dec
call
sbb
scas
enter
rorb
or
in
outsb
pushf
insb
and
loopne
imul
std
incl
mov
ljmp
movsl
stc
xorb
lods
out
jg
add
das
shlb
enter
xor
lock
incl
push
cmpsl
sub
xchg
and
fwait
iret
daa
loope
cli
loop
push
pop
loop
sbb
xor
clc
pop
insl
add
mov
and
and
pushl
lret
push
repnz
add
sub
mov
xchg
and
or
fsts
pushl
in
call
dec
and
pushf
iret
adc
jmp
push
inc
cli
and
in
xor
out
jbe
mov
xchg
push
ljmp
inc
dec
cmpsb
adc
and
and
add
ljmp
incl
sub
push
add
xor
mov
mov
adc
dec
jbe
aas
mov
fmull
mov
dec
xor
idivb
lods
aam
sbb
adc
pushl
xchg
mov
lods
mov
dec
cmp
mov
adc
dec
adc
pushf
inc
xor
dec
cmp
roll
arpl
mov
das
push
es
xchg
pop
push
cs
jg
push
testl
xchg
push
and
adc
into
adc
push
pop
int3
mov
jg
enter
pushl
iret
rcr
mov
test
mov
or
jl
fs
ljmp
aaa
daa
push
xorb
test
outsl
xchg
aam
ss
xor
xor
jmp
dec
mov
sub
adc
mov
hlt
cmp
xchg
mov
fs
sbb
dec
test
jbe
xchg
sub
mulb
rorb
call
cmpsb
decl
mov
xchg
adc
inc
test
adc
pop
cmp
sub
les
lock
ss
dec
inc
adc
mov
add
pushl
jo
cmpsb
sbb
or
subb
mov
sbb
das
test
hlt
lock
incl
cmc
sub
sub
mov
xor
out
mov
inc
shlb
jno
out
dec
and
push
push
sub
test
jecxz
mov
pop
dec
xor
adc
mov
fimuls
pop
xchg
decl
jb
inc
push
jg
movaps
xor
push
xor
push
mov
fadds
xchg
mov
lretw
out
dec
jg
imul
int
pushf
dec
push
notl
decl
jle
std
add
sbb
pop
pop
int
dec
and
xchg
cmpsl
mov
mov
test
add
movsb
xor
les
inc
mov
orb
mov
dec
aas
pop
inc
cmp
xor
call
xor
dec
mov
sub
iret
js
add
imul
push
mov
push
sbbb
loop
sub
call
jne
jl
push
nop
lods
dec
jbe
dec
jb
dec
xchg
insb
outsl
xchg
adc
dec
lahf
lock
incl
sti
or
push
push
daa
add
dec
rcrl
je
iret
xor
xorl
popf
add
lea
subb
lcall
xor
iret
dec
sbb
push
sub
arpl
mov
js
mov
clc
jae
jns
dec
inc
mov
mov
cmpsb
ja
test
out
jmp
gs
and
ja
divb
pop
mov
xchg
repnz
sub
call
mov
icebp
ljmp
shl
jge
ja
in
sub
outsb
inc
pop
cs
inc
mov
stos
mov
pop
hlt
ljmp
dec
push
stos
sub
lahf
hlt
iret
jge
sub
in
inc
ljmp
inc
xor
xlat
jp
in
jo
inc
push
push
bswap
xchg
add
push
ret
inc
lea
decb
ljmp
into
sbb
mov
mov
stos
mov
dec
push
insb
push
pop
xchg
das
outsl
adc
xchg
and
mov
scas
clc
jmp
test
mov
adc
js
es
ja
div
cmc
sub
sbb
dec
cmc
adc
outsl
and
out
xchg
gs
out
aad
orb
sub
inc
xchg
push
xchg
jne
fdivs
cmp
or
or
sub
mov
addr16
and
xchg
aaa
jns
dec
insb
or
dec
or
sbb
outsl
push
inc
clc
js
xchg
repz
jmp
cmp
fadd
mov
add
mov
or
jg
or
test
xchg
or
out
nop
inc
cmp
jmp
xchg
xchg
notl
mov
in
data16
notl
idivl
ja
lods
push
push
mov
scas
adc
lret
les
inc
dec
inc
je
mov
ljmp
mov
mov
push
sbb
sbbb
test
mov
mov
repnz
icebp
inc
repz
lods
leave
adc
and
lods
jb
das
lea
sti
dec
jae
incl
in
adc
es
out
mov
xor
call
in
dec
mov
lods
in
cmp
es
gs
mov
jbe
and
repnz
in
ss
push
mov
rcl
cmpb
sub
or
incl
js
incb
xchg
scas
mov
stc
adcl
pop
pop
dec
cmp
sti
cmp
xchg
lahf
mull
mov
movb
loopne
jge
xchg
or
test
jg
mov
xchg
fisubrl
notl
pop
xchg
push
adc
cmpsl
sbb
mov
ja
addr16
adc
push
stos
repnz
sbb
mov
imul
js
push
pop
dec
sbb
in
incl
sub
xchg
ret
add
mov
push
in
ja
sub
fiaddl
movsb
mov
and
ret
dec
or
push
clc
fistps
mov
xchg
pop
jg
stos
loopne
mov
clc
dec
dec
adc
es
rcrl
out
push
jns
or
cmp
xor
sbb
call
mov
outsl
gs
pop
push
dec
adc
pusha
add
xor
add
inc
xchg
sbb
jp
inc
cltd
xchg
fisubl
stos
mov
psubw
mov
fidivl
mov
sub
xchg
cmp
js
add
movsl
cmpsb
mov
lea
lcall
gs
stos
lods
cmp
mov
mov
xchg
test
cmp
jg
push
xchg
push
into
gs
mov
int3
adc
nop
jns
clc
decl
jae
mov
ret
inc
cltd
es
repnz
lods
ljmp
fildl
mov
add
mov
test
adc
cltd
add
hlt
inc
rdpmc
or
push
aad
testb
ljmp
popf
sub
cmp
lea
xchg
or
jp
mov
outsl
mov
loopne
test
or
mov
mov
jae
xor
ljmp
sbb
xchg
pop
cmp
sbb
fcmove
movsl
inc
pushf
stos
jge
jl
adcl
gs
inc
add
pop
test
sbb
cld
pop
push
inc
js
jnp
lcall
ds
push
in
fcomip
jnp
out
xchg
cmc
fldt
lea
jne
imul
or
lcall
cmpsl
cmpsb
xchg
sub
mov
stos
inc
in
stos
mov
inc
pop
out
nop
xchg
fiaddl
outsl
das
ljmp
lods
mov
mov
inc
cmc
out
mov
jmp
sub
adc
add
outsl
repz
push
or
mov
mov
jns
repnz
lret
scas
add
ljmp
xchg
jl
and
adc
lods
xchg
repz
mov
adc
mov
push
jo
xor
ljmp
push
imul
subb
iret
sti
cmp
mov
mov
add
lods
jl
inc
in
cli
aaa
xchg
sbb
fwait
sbb
sbb
daa
mov
cltd
sti
sbbl
or
mov
xchg
mov
add
cmp
push
punpckhbw
imul
jbe
cmpb
out
repz
inc
mov
mov
dec
pop
test
cld
sub
in
std
scas
cmpsl
jle
aam
push
xor
in
ret
fmull
loop
dec
insb
stos
adc
decl
push
jg
sbb
sub
adc
mov
push
test
fisubs
jb
xchg
mov
out
jo
es
sub
sub
and
insb
cli
aad
clc
pusha
daa
mov
andb
sub
jp
mov
adc
push
jb
fistpll
sbb
adc
push
and
push
jp
cs
xor
mov
xchg
or
mov
xor
fistl
mov
jg
dec
mov
cmpb
sbb
xor
sub
or
xchg
jnp
iret
cltd
jp
call
lock
lahf
clc
adc
xchg
adc
cmpsl
push
inc
and
and
ret
int3
or
lcall
repz
clc
dec
rcrb
pop
inc
fs
add
sub
sub
ljmp
inc
add
and
enter
out
push
pop
stos
jne
aad
outsl
mov
and
incl
jbe
flds
mov
mov
inc
xchg
sbb
in
adc
incl
sbb
and
orl
jp
fsubs
push
adc
arpl
sbb
pushl
cmpsb
int
xor
rclb
ss
ljmp
xchg
dec
imulb
sub
cltd
dec
mov
adc
pushl
imul
ret
mov
adc
push
shlb
cmpsl
add
xchg
sbb
inc
or
scas
fnstsw
or
jnp
cmp
add
pop
mov
add
clc
sub
mov
aad
cwtl
cmp
jg
fnstenv
imul
aad
scas
popf
mov
xor
iret
pop
mov
shl
incl
incb
or
xor
jo
pop
cmp
ffreep
orl
lods
pusha
mov
ljmp
ljmp
cmc
mov
xchg
rolb
push
sub
mov
jge
int3
dec
or
scas
cmp
ds
ljmp
jbe
imul
js
orb
inc
sbbl
loope
adc
loope
outsl
push
mov
xchg
clc
call
and
adc
mov
ds
adc
jle
rorl
push
or
xchg
inc
aaa
fcmove
push
push
push
xchg
xchg
push
push
xor
adcb
ljmp
xor
push
push
dec
inc
cmp
inc
inc
adc
in
dec
in
adc
jg
dec
dec
inc
xor
sbb
mov
arpl
pop
nop
imul
pop
sahf
jp
jne
xor
and
repz
out
mov
data16
mov
mov
xchg
cli
xchg
push
cs
or
pushl
adc
jge
cmp
call
jmp
insl
ret
lcall
stos
je
pop
mov
mov
adc
lahf
push
outsl
sar
lcall
les
test
into
push
lcall
lahf
jge
and
std
dec
loopne
in
and
mov
mov
ljmp
push
out
push
adc
jmp
add
fldcw
pop
scas
mov
in
xchg
and
sbb
mov
clc
rorb
into
or
inc
adc
loope
xchg
les
or
jno
push
and
incl
and
jne
xchg
dec
dec
cmpsb
xchg
repnz
sub
mov
aas
jmp
adc
pop
mov
leave
lcall
lahf
jno
jmp
push
popf
jl
mov
rcr
xchg
pop
cmp
add
shrl
mov
decl
test
push
popf
popf
call
push
mov
fstpl
pusha
ljmp
push
hlt
push
inc
enter
iret
lods
or
xlat
lods
mov
or
decl
jge
lock
cmp
shll
sub
jle
lcall
inc
push
sbb
call
jnp
jns
inc
mov
addr16
or
call
ljmp
xor
outsl
xchg
loope
rclb
int
xor
lcall
cmc
aam
dec
insl
stc
jecxz
inc
and
push
pop
loope
decl
fs
xchg
aad
movsb
mov
push
mov
sub
cld
jecxz,pt
jb
pop
mov
pop
rolb
rcl
ljmp
add
add
cwtl
jbe
mov
dec
xchg
add
inc
test
xchg
jae
cmc
mov
lock
insl
pop
fidivrl
jg
aad
mov
pop
cmc
sub
mov
mov
outsl
mov
ljmp
push
mov
call
inc
lods
cmc
cwtl
inc
lcall
cltd
ret
mov
cmp
jae
xchg
iret
pop
fiadds
sbb
jmp
pushf
or
lcall
pop
add
mov
mov
shl
je
cmp
sbb
lcall
and
inc
add
xchg
xchg
mov
inc
or
enter
in
pop
xchg
sbb
xor
jns
and
jo
out
xchg
shlb
mov
fcoms
dec
call
lcall
call
test
pop
push
and
add
js
sub
lret
xchg
mov
mov
mov
adc
and
pop
dec
and
inc
pop
add
jg
sub
pop
sbb
insb
js
mov
mov
or
sbb
cli
sbb
outsb
sub
xchg
add
cmp
mov
ret
pop
pop
insl
fwait
adc
in
ret
imul
push
sbb
loopne
mov
pop
hlt
mov
push
sub
shlb
insb
je
cltd
lret
ljmp
jbe
lcall
add
inc
out
ljmp
nop
aas
pop
mov
jns
lret
inc
add
push
inc
and
and
push
mov
loop
jp
icebp
inc
ljmp
pop
pop
xchg
sbb
es
add
push
or
inc
insb
hlt
mov
adc
leave
dec
lret
jmp
out
in
pop
xchg
das
dec
adc
leave
xchg
and
fwait
xchg
insb
daa
and
mov
fcos
ljmp
jg
fs
or
ret
ficoml
data16
add
xor
jl
sub
mov
and
pop
dec
xor
mov
push
mov
ljmp
jmp
sbb
cmp
jg
shrb
mov
or
xor
sub
mov
sub
mov
fistl
pause
push
dec
push
sbb
cmp
cmp
cmp
cmp
inc
imul
xor
add
mulb
or
jg
rep
enter
std
cmp
or
imul
call
fsts
inc
test
sub
and
mov
or
decl
and
popf
pop
sti
push
and
jmp
push
xchg
adc
ljmp
dec
xchg
pop
push
mov
pushf
stos
inc
and
fwait
lods
push
dec
xor
inc
ljmp
xchg
and
cmp
movsl
pop
cmc
in
add
push
cld
sbb
je
add
insb
and
pusha
or
lods
dec
pop
mov
cmpps
pushl
mov
lea
nop
adc
mov
mov
test
arpl
movsl
icebp
pushl
and
jp
mov
fcoms
pop
movsb
lods
lock
inc
js
mov
mov
add
aaa
call
lcall
call
aaa
nop
scas
push
jns
xlat
add
loopne
or
pop
fnstsw
inc
inc
jmp
inc
inc
ja
in
in
out
pushf
fcmovu
stc
stc
inc
jb
das
call
jge
mov
ljmp
xchg
xchg
dec
xchg
ljmp
cld
notb
sub
lock
jg
lcall
test
mov
gs
add
xchg
dec
icebp
push
cltd
out
daa
xor
jge
jmp
adc
int3
lods
sbb
xchg
cli
xlat
adc
xchg
mov
dec
pop
and
fdiv
xor
in
xchg
test
gs
dec
xchg
push
imul
xchg
cmc
jecxz
incl
fstps
or
mov
mov
fists
mov
xlat
sbb
mov
lock
adc
push
jge
sub
jecxz
jmp
or
mov
sub
lcall
mov
mov
hlt
inc
in
cwtl
xchg
bound
jp,pn
decl
push
mov
dec
jbe
and
push
dec
mov
xchg
or
and
lcall
mov
sarb
pop
mov
xlat
jnp
iret
jnp
pusha
sbb
pushl
mov
mov
sub
xchg
lea
stos
lret
mov
popa
mov
cltd
and
sub
and
ljmp
into
jge
adc
dec
or
imul
lds
loop
jg
adc
les
in
popl
push
add
loopne
mov
nop
cltd
add
pop
loopne
pop
adcl
fiadds
inc
dec
pop
mov
jecxz
and
incl
xchg
mov
inc
lcall
inc
push
push
pop
push
nop
int3
rcl
int3
adc
loopne
jmp
push
lret
js
pop
xchg
mov
in
repz
jbe
ds
ljmp
out
in
repnz
arpl
xchg
lret
outsb
xor
mov
sub
ds
ljmp
push
jns
popa
test
popa
scas
xchg
xor
pushl
xchg
gs
imul
decl
dec
xchg
lock
pop
jg
push
icebp
arpl
pop
pop
push
aaa
xchg
in
outsb
mov
add
xchg
call
push
outsb
sahf
and
mov
jmp
and
es
ss
xor
ret
cmc
jg
js
rolb
out
pop
lds
inc
jns
push
adc
adc
cmc
adc
incl
add
or
adc
inc
outsb
xchg
push
dec
std
mov
push
jb
xor
aam
int3
xor
cli
fwait
inc
lret
and
xchg
out
cli
cs
pop
fdivl
mov
adc
jae
xchg
sub
decl
adc
xor
inc
dec
popa
sbb
test
adc
in
jle
sub
data16
pop
push
lret
push
pushl
push
xor
inc
aaa
and
pop
xchg
inc
repnz
cmp
insl
shll
mov
jg
test
pop
dec
shll
shrl
ljmp
add
jg
loopne
push
insl
ss
sub
popa
cmp
rol
xor
ja
sbb
adc
mov
sub
loop
cld
add
pop
arpl
arpl
mov
fcomip
ljmp
cmc
jb
jne
cltd
inc
and
jo
inc
add
xchg
inc
add
push
repnz
incl
and
push
inc
jl
push
mov
jno
ret
das
adc
jnp
cmpsl
mov
xor
push
jno
aad
adc
adc
imul
xor
popf
test
cmpsl
push
lcall
push
test
and
inc
xor
jecxz
dec
mov
inc
xchg
and
sub
xchg
aad
xchg
sbb
test
aaa
sub
mov
fsubrs
insl
leave
es
pop
xchg
test
incl
mov
mov
insb
cmp
lcall
mov
sub
mulb
call
arpl
insl
lcall
loop
sbb
xchg
incl
and
pop
mov
jae
or
add
mov
push
dec
in
ja
adc
je
lea
cmpb
push
dec
and
decl
add
rcl
xchg
adc
test
xor
call
push
fcoms
lret
adc
jmp
xor
nop
out
rorl
jb
push
or
adc
pop
or
out
cli
jmp
repz
ds
in
cmp
pop
fsubrs
inc
push
pop
cmp
add
arpl
adcb
dec
ljmp
test
lcall
addr16
xchg
xorl
leave
push
xchg
fnstenv
jns
push
jae
xchg
ja
outsb
dec
movb
xchg
dec
out
pop
inc
push
lret
add
xor
xor
popa
inc
xor
add
push
jg
cmp
inc
adc
aaa
mov
mov
jno
push
pop
or
test
jmp
mov
inc
or
mov
xor
cmc
xor
repz
dec
cmp
adc
and
jb
xor
data16
dec
ret
xchg
push
movsl
push
notb
ljmp
cltd
adc
ds
sub
inc
jle
test
mov
ljmp
mov
dec
mov
inc
sub
mulb
and
jo
jbe
jmp
outsb
push
test
push
mov
xchg
jg
adc
mov
xchg
xchg
icebp
push
xchg
xor
aad
push
cwtl
pop
out
fs
dec
xlat
jns
out
fs
orb
aas
push
xor
fwait
sbb
aaa
mov
in
jmp
cmp
add
jns
aaa
dec
push
jns
call
fimull
out
clc
jmp
push
sub
addr16
jp
repnz
jae
push
repz
outsl
testb
decb
pop
pop
shll
xor
rcll
call
mov
add
stc
adc
xor
pushl
sbb
jbe
aaa
roll
xchg
loopne
dec
jbe
fwait
shll
inc
or
ja
pusha
mull
jmp
lods
dec
sub
stos
sub
movsl
xorb
jns
addl
inc
dec
push
jg
jo
add
and
or
sub
dec
outsb
mov
xchg
das
btc
pushf
test
or
loopne
inc
icebp
je
or
add
ljmp
cmp
dec
mov
xor
inc
and
inc
cmpl
jmp
adc
enter
and
inc
add
xchg
inc
mov
adc
test
stc
push
pushl
pop
nop
leave
lcall
cwtl
lcall
test
pop
cmp
inc
call
cmpsl
cwtl
jge
cmp
rorb
mov
xchg
and
add
out
cmc
adc
cmp
pop
mov
add
cwtl
ljmp
ljmp
addl
inc
mov
scas
xor
xchg
shlb
xorl
pop
cmc
lcall
arpl
insb
pop
cmpsb
lods
notl
outsb
imul
dec
dec
imul
inc
mov
mov
or
fcomip
and
push
cmpsl
xor
sub
fsts
mov
ret
adc
or
addr16
aas
nop
scas
insb
or
call
andl
push
inc
sarb
mov
sbbl
xchg
mov
pushl
sarl
pop
es
pop
in
mov
push
pop
pusha
data16
cmp
clc
lahf
add
aam
and
push
mov
push
aad
lock
and
test
adc
pop
pop
icebp
lcall
sub
inc
stos
cltd
aam
imul
loop
lcall
pushl
push
and
xlat
ds
cmp
push
test
xchg
sbb
stos
jne
call
fcmovb
es
popf
xchg
mov
pop
movsb
inc
mov
push
and
mov
sub
mov
pop
mov
pushf
mov
pop
stos
call
mov
and
cmp
push
ja
roll
mov
add
ss
push
cld
jp
jmp
pop
lock
push
sbb
std
ljmp
add
jne
ja
daa
xchg
inc
orb
sub
mov
push
addb
adc
arpl
rcrl
ljmp
test
push
loope
test
jb
push
int3
mov
popa
sbb
mov
pushl
popl
mov
sbb
je
clc
mov
daa
lcall
jnp
xor
cltd
pusha
enter
cltd
stos
in
inc
jae
xlat
mov
cmp
and
pop
bound
mov
add
mov
lods
pusha
dec
shlb
dec
sbb
xchg
popf
lods
int3
mov
dec
fwait
gs
ljmp
sub
bound
mov
cmp
mov
xchg
cmpb
lahf
sbb
dec
pusha
vcvttsd2si
insl
lret
lret
sbb
enter
shrl
es
mov
push
dec
in
mov
mov
inc
push
lds
pop
add
adc
imul
aas
and
aam
pop
mov
cld
adc
adc
and
test
popf
adcb
adc
addr16
mov
add
or
pop
fcmovnu
scas
mov
in
mov
imul
pusha
inc
xchg
incl
data16
mov
jmp
insb
cmp
adc
add
stc
pop
je
pop
jo
imul
inc
push
aam
or
sahf
sub
lds
push
push
pop
mov
clc
jg
stos
bound
push
add
dec
pop
nop
ds
cmp
lret
dec
cmpsb
imul
pop
jmp
fsubl
xlat
ret
sub
hlt
sub
cltd
pop
lea
push
incl
inc
pusha
popa
fs
mov
sbb
lods
js
jle
fwait
sub
jne
jmp
dec
fcomip
cld
push
fstpl
pop
fst
xlat
dec
stos
int
push
add
fwait
mov
add
pop
add
sbb
js
ret
dec
dec
pop
dec
sub
xlat
dec
mov
sbb
addr16
out
mov
mov
jg
out
push
jo
insl
bnd
mov
retw
add
mov
sbb
add
dec
inc
lcall
pop
sar
hlt
adc
movsb
ret
dec
xchg
sub
sbb
mov
add
mov
fcoms
int
mov
fldl
test
movsl
jp
jl
jmp
cmp
cli
jl
push
jno
push
mov
sub
cmpsb
hlt
imul
dec
stos
movsb
jmp
hlt
mov
and
dec
inc
pusha
lret
add
and
out
mov
mov
decb
shlb
es
jmp
aaa
inc
mov
sbb
incl
push
sub
adc
cmpsb
insb
and
or
decl
lods
jb
sbb
cmp
xor
aas
jbe
lock
sbb
incl
popa
jp
cs
mov
jecxz
jnp
sti
jno
push
add
popf
mov
xor
inc
xor
testb
and
mov
mov
inc
inc
mov
jo
cld
or
aas
jb
movsb
mov
push
cmp
inc
jg
sbb
add
mov
fdivrs
add
mov
pop
adc
ret
xlat
cmp
add
mov
fmul
push
jns
lods
sub
mov
sub
aaa
rcrb
pop
hlt
call
mov
cmp
fldcw
sahf
push
mov
jb
xorl
jns
push
rorl
hlt
push
stc
xor
push
sahf
cltd
mov
ja
pop
mov
dec
mov
xor
fwait
decb
nop
out
push
lcall
rorb
inc
stos
pushl
loope
mov
sub
cmp
cmp
insl
push
inc
pop
cmp
cmp
clc
mov
stos
mov
inc
ds
fsts
dec
pop
icebp
add
rcrl
dec
pop
cmpb
and
jecxz
scas
lcall
add
movsb
ret
call
sbb
dec
sbb
les
cltd
cli
add
mov
jecxz
shlb
push
push
xchg
cmc
add
decl
rolb
out
mov
ljmp
push
adc
mov
js
ljmp
out
js
mov
fistpl
dec
mov
pop
into
in
faddl
nop
ret
push
mov
push
scas
enter
xor
add
ljmp
ljmp
push
cmpb
int3
adc
nop
ljmp
out
cltd
call
cli
pop
or
mov
xchg
imul
je
jg
lea
into
pusha
sub
test
imul
mov
dec
into
fcmovbe
scas
fsubrl
mov
mov
imull
lret
pushf
inc
stos
xchg
jne
jmp
adc
fisubrl
es
fnstcw
pushf
ss
jbe
push
inc
jmp
sbb
pop
add
out
pushf
xchg
pop
inc
fiaddl
pushl
mov
in
mov
pop
pusha
out
pop
adc
roll
call
push
nop
jge
mov
sahf
jp
push
dec
dec
int
and
add
imul
jge
stos
add
add
out
popf
fdiv
push
repnz
pop
add
into
and
adc
fbld
std
sidtl
shrb
pushf
cli
pushl
add
cmp
je
inc
jnp
out
data16
add
inc
cltd
in
aad
sub
adc
cmpsb
mov
mov
cmp
inc
sbb
fsubs
inc
xchg
or
and
addl
xchg
popa
in
sbb
mov
jg
xchg
pop
dec
fimull
or
mov
inc
pop
shlb
and
pop
and
lock
call
daa
cli
jl
mov
inc
cmp
sbb
xchg
push
shll
aad
push
lods
call
loopne
call
sbb
aad
adc
aad
fisttpll
ljmp
mov
pop
mov
mov
and
imul
add
and
mov
test
inc
cmp
mov
decl
pop
mov
push
in
adc
or
add
mov
insb
mov
add
sarl
mov
out
cmpsl
push
stos
pop
enter
lcall
push
xchg
mov
jae
pop
ljmp
call
lcall
in
push
mov
mov
ljmp
or
mov
shlb
fs
idiv
ljmp
bound
sahf
shrl
mov
cld
xor
cmpb
and
mov
test
mov
lock
incl
test
mov
inc
clc
in
aas
adc
icebp
and
sbb
call
mov
pop
pop
pop
jno
pop
pusha
fs
mov
pop
enter
pop
jl
sbb
sbb
xor
test
js
jmp
sub
mov
testl
dec
daa
aam
dec
sub
dec
in
cmpsl
mov
and
cmp
in
cs
add
imul
sbb
in
decl
iret
mov
scas
or
xor
or
inc
std
xchg
hlt
sub
ljmp
fucomip
inc
out
stos
and
sarl
or
sub
mov
incl
add
xor
cmp
push
enter
test
xor
pop
pop
dec
insb
incl
jbe
cmpsl
mov
loop
movsl
mov
lcall
call
cmp
shl
jp
ret
adc
sbb
in
or
divl
add
xor
scas
arpl
jg
or
lods
add
sub
dec
xor
mov
xor
sarb
push
mov
rcrb
loopne
fdivr
push
cli
add
mov
loop
sub
nop
adc
push
aam
lcall
push
imul
sbb
daa
mov
lea
xchg
test
cltd
fs
pushl
movsl
push
fldenv
dec
mov
mov
pop
int3
sbb
mov
mov
pop
xchg
call
enter
mov
mov
cmp
pushf
adc
mov
dec
insl
mov
dec
sbb
pushl
rorl
mov
movsl
mov
push
pop
jg
adc
lret
add
or
adc
daa
inc
call
ljmp
add
cs
in
fists
lea
mov
add
and
or
jge
xor
and
fildl
call
cmp
cld
call
ret
jb
pop
add
clc
jnp
sbb
pop
aam
ja
mov
pushl
cs
jmp
mov
lcall
mov
outsl
sbb
jno
sbb
dec
inc
adc
fbstp
mov
imul
sbb
incl
sub
push
je
inc
pushf
mov
fsts
add
dec
fcomip
jp
cmpsb
pop
nop
dec
sub
or
sub
mov
aaa
mov
cmp
loope
bound
lods
popa
arpl
sub
xor
mov
fcompl
hlt
incl
and
lahf
and
pop
adcl
add
popa
push
test
out
sbbb
dec
add
fistl
inc
lock
pushl
daa
js
and
xchg
bound
jno
outsb
xorb
or
xchg
ret
mov
or
fbstp
push
mov
push
jne
jo
xor
xchg
xchg
jnp
add
add
ljmp
add
xchg
into
mov
aaa
dec
bound
xchg
xor
cwtl
add
inc
mov
push
daa
addl
sub
sub
incl
lock
sbb
mov
mov
les
rorb
rorl
cltd
in
andb
jp
lds
lock
xor
sbb
and
mov
lcall
jmp
mov
pop
dec
data16
in
imul
dec
cmp
decl
nop
jo
mov
push
mov
xchg
push
jmpw
cli
jbe
mov
cmp
aaa
mov
fistpll
dec
push
shll
mov
mov
and
mov
sub
jg
aad
fcom
test
xchg
popa
sub
test
jg
sub
je
push
adc
or
in
or
ljmp
adc
push
sub
stc
dec
push
call
and
adc
mov
xchg
pop
jne
rcll
lcall
sub
call
mov
pop
in
cld
mov
xchg
mov
push
and
push
into
daa
and
stc
and
popa
repnz
sahf
call
fmull
aaa
xchg
clc
dec
scas
sbb
inc
add
call
adc
push
mov
and
or
cli
dec
arpl
int3
inc
sbb
xor
ds
sar
or
and
mov
xor
test
sub
fwait
jg
out
insb
adc
and
movsb
sbb
leave
test
cltd
loopne
mov
imul
fildl
xchg
adc
nop
mov
mov
movsb
xchg
shlb
add
xor
outsl
call
xchg
lret
bound
ja,pn
adc
push
repz
xor
sub
daa
pop
push
rorl
decl
mov
inc
xchg
sbb
add
or
and
dec
popa
jae
add
mov
incl
test
int3
dec
in
shl
sbb
sub
pop
and
cltd
inc
push
ret
out
push
jmp
jle,pt
pop
out
inc
call
mov
pop
mov
adc
sbb
mov
adc
leave
add
sar
incl
adc
inc
stos
cwtl
pop
pop
push
sub
or
shr
negl
addl
and
mov
inc
pop
sarb
xchg
xchg
cli
aaa
cwtl
setae
jno
cmp
nopl
sbb
push
push
and
cli
jg
sub
push
jae
dec
fwait
movsb
add
roll
incl
adc
les
push
loope
and
mov
mov
je
jae
decl
xor
mov
cmpsb
xchg
into
loopne
hlt
ds
rcrb
leave
push
mov
decl
aad
inc
test
js
sub
loop
push
mov
dec
xchg
mov
notl
sbb
and
xor
int3
rcl
jg
jp
add
sbb
xor
daa
dec
sarl
or
push
inc
clc
das
pop
push
fstl
mov
mov
adc
cltd
out
push
les
push
inc
arpl
scas
xchg
stos
ret
mov
lcall
mov
inc
inc
and
mov
inc
repnz
and
icebp
jns
pop
orl
cwtl
loope
dec
bnd
sub
int3
shll
lcall
in
decl
repz
sbb
cs
xor
inc
jno
jmp
mov
out
jbe
xor
sahf
xchg
adc
sub
and
and
push
in
cmpsl
fistl
lcall
call
leave
jmp
sub
jmp
popf
inc
rcrl
cmp
gs
jmp
aaa
mov
lods
dec
jp
cmp
sub
call
sub
adcl
lcall
es
xor
incl
addr16
or
inc
xchg
add
sti
dec
dec
cmp
add
sbb
or
xchg
aam
loop
clc
pop
jmp
into
push
cmp
ljmp
scas
pop
lock
pusha
test
pop
cli
fwait
pop
lret
mov
ljmp
popl
fs
adc
lods
rolb
testl
xchg
call
out
add
fsubs
call
xchg
dec
rcr
cs
jle
inc
add
sbb
aam
mov
rcrl
and
nop
insb
push
dec
mov
mov
sub
leave
insl
pop
std
movsl
inc
out
clc
aam
sub
es
arpl
fsubs
cmpb
jmp
cmpsl
mov
shrb
mov
inc
scas
sti
fwait
mov
test
jno
mov
and
clc
or
mov
roll
leave
rolb
dec
sub
or
jmp
loop
cmpl
add
or
mov
cmp
mov
cmp
sub
jmp
int3
or
mov
or
add
or
push
mov
js
shrb
jle
mov
adc
hlt
mov
mov
js
popa
stos
adc
ja
movsb
loopne,pn
incl
shlb
add
movsb
int
mov
sub
sbb
and
filds
inc
cmp
fcomps
lea
shlb
xor
mov
call
cld
call
and
imul
sub
and
xor
mov
dec
mov
mov
xchg
xor
aas
pusha
mov
add
cwtl
daa
decl
lock
sbb
cmpl
ret
cmp
mov
lcall
pushl
mov
or
test
sub
cli
sbb
movsb
mov
js
adc
mov
fisubl
or
inc
aaa
lock
roll
aam
push
stos
mov
mov
fstpt
cmp
cmpsb
jp
leave
enter
incl
adc
mov
mov
or
inc
inc
ret
xor
lods
and
pushl
xchg
adc
jo
in
dec
lcall
std
decl
jo
jmp
mov
jmp
into
xor
popa
dec
mov
sub
jb
loopne
or
pop
call
cmp
inc
adc
mov
mov
mov
call
pusha
sbb
jbe
les
mov
jecxz
fsubs
jl
cmp
pop
xchg
pop
std
fnsave
pushf
lret
vpshufd
mov
cmp
xor
inc
jae
mov
mov
addb
jg
mov
jge
mov
mov
dec
sti
lds
push
mov
imul
xchg
mov
xchg
inc
push
ror
cmpsb
xor
aam
cmp
and
mov
xor
or
or
xchg
outsb
dec
adc
adc
mov
loope
jmp
mov
push
mov
push
jle
inc
and
fbstp
stos
pusha
mov
pop
xor
rol
mov
adc
cmp
insb
xor
ljmp
mov
add
sti
and
addb
js
jnp
nop
xchg
popa
dec
lahf
cmp
mov
loop
and
xchg
hlt
xchg
leave
sbb
pop
and
mov
icebp
mov
sub
dec
decl
mov
repnz
adc
sub
loop
and
lret
cltd
add
dec
cmp
lret
aad
sbb
and
loope
push
int3
cmp
pop
push
jl
notl
pop
scas
xchg
icebp
ljmp
repz
jnp
cmp
sbb
inc
cli
push
gs
mov
lea
imul
ljmp
decb
in
rorb
movsb
dec
adc
xchg
xlat
mov
lock
inc
add
out
cmp
fmull
hlt
sahf
or
insl
xor
fcomip
add
add
push
sub
repz
es
jno
fldl
fwait
or
mov
rolb
decl
mov
loopne
sub
arpl
sub
sbb
or
jl
orl
dec
mov
xchg
fcomip
call
mov
mov
mov
xorl
dec
inc
mov
jg
incl
or
add
adc
jmp
out
in
cmp
decl
xor
ds
mov
xor
sub
add
mov
and
xchg
adc
jmp
push
and
cli
jnp
hlt
mov
mov
mov
jg
enter
fs
sub
mov
aad
or
shll
loop
xor
insb
ss
push
cmpl
fst
sarb
jne
cmp
mov
cmpsb
mov
cmp
mov
fisttps
or
test
dec
sub
cs
call
adc
inc
test
and
jno
and
cld
push
ljmp
push
jo,pn
shll
rorb
sbb
jg
mov
aam
mov
nop
mov
or
out
push
jg
mov
js
jge,pt
push
in
scas
add
pushl
in
add
dec
adc
jns
ss
xlat
add
adcb
in
das
sub
mov
pop
ljmp
test
jmp
xor
pop
std
je
push
inc
mov
cli
or
mov
sbb
in
jecxz
ja
pop
sbb
cmpsl
stos
pop
inc
fstpt
xor
add
add
aas
pop
and
push
scas
cmpsl
mov
ds
decl
adc
inc
sub
ret
add
pop
rol
adcl
dec
shll
pop
inc
pop
fsubrl
sub
test
or
pop
add
lret
push
sbb
mov
add
stos
jg
push
add
jp
dec
mov
pop
sbb
or
adc
es
test
je
dec
popf
mov
cmp
inc
call
mov
scas
mov
test
sbb
mov
fsubr
lock
push
fwait
lret
lods
mov
decl
fldl
lcall
rclb
cmp
jp
add
add
sub
lea
push
adc
incl
and
xor
decl
rolb
nop
xlat
mov
ljmp
and
adc
sbb
dec
push
mov
jae
push
insb
dec
inc
push
inc
movsl
inc
pop
sbb
and
call
mov
loopne
fisubrl
fnstenv
call
movsl
aam
inc
add
rolb
popf
fcmovnb
dec
popa
sbb
ret
pushl
xchg
lea
adc
loope
aad
outsb
test
push
jne
xchg
mov
adc
jg
clc
push
pop
out
cmp
push
adc
rorb
add
push
pop
test
lcall
push
dec
scas
jb
add
add
push
sub
sbb
adc
decl
jecxz
lea
int
mov
imul
fucomi
shr
push
mov
fdivr
jmp
push
ficoml
mov
xchg
sub
sbb
xlat
ret
add
ds
roll
cwtl
fcoml
sti
adc
jg
or
pop
lahf
pop
fdivrl
icebp
pop
les
mov
add
lods
mov
fiaddl
sbb
dec
pop
jne
mov
xchg
push
inc
inc
fnclex
loopne
mov
cmpsl
jmp
jnp
lret
mov
dec
shll
add
or
pop
gs
jle
pop
xchg
mov
incl
sbb
push
das
mov
imul
insl
in
and
add
ds
jmp
orl
je
push
je
addr16
pop
cmp
dec
lds
xor
and
mulb
pushf
mov
out
shl
cmc
add
lcall
xorb
js
out
popf
push
js
xor
sub
or
push
push
in
sub
mov
mov
int
xor
dec
cmp
nop
cld
sahf
push
nop
cli
incl
leave
xlat
inc
mov
repnz
xchg
aaa
push
imul
cmp
mov
cmc
fbld
push
pusha
xor
fbld
push
sub
or
mov
adc
xchg
imul
jno
aad
stos
xchg
nop
xchg
push
loop
xor
ljmp
clc
lods
sti
pop
dec
loopne
cmpsb
or
push
repnz
pop
cmp
mov
call
cld
lcall
es
insl
out
ds
jne
push
push
data16
out
adc
ljmp
mov
imul
mov
arpl
daa
mov
jb
jbe
cli
dec
mov
dec
and
pusha
arpl
dec
out
mov
ret
scas
in
lods
stos
rorb
adc
sub
ds
xchg
fldcw
jae
jmp
into
call
test
loop
mov
mov
nop
or
pop
sarl
insl
hlt
ljmp
outsb
nop
test
divb
aad
into
dec
sbb
inc
push
movsl
push
test
add
sub
add
mov
incl
sbb
or
push
sub
rolb
in
mov
jge
lods
test
dec
pushl
cmp
mov
push
stos
cld
iret
movhps
cmpsl
out
dec
loopne
sub
pushf
mov
loopne
xchg
jmp
ss
lret
cmpsb
or
aas
icebp
mov
sbb
push
mov
lcall
call
clc
mov
fdivrs
out
jecxz
in
mov
insb
adc
jno
divb
loopne
cmp
adc
stos
mov
repnz
repnz
insb
aad
push
aas
jno
mov
jne
push
xor
mov
pop
out
and
out
fdivs
jno
pop
sbb
xchg
repnz
loop
stos
lods
or
push
outsl
hlt
inc
imul
inc
sub
adc
icebp
fildll
jno
shlb
das
jae
das
sbb
cs
pop
ret
cmp
and
filds
sbb
hlt
sbb
xchg
sub
adc
mov
or
call
or
sbb
cmpsb
cmpsb
and
pop
mov
or
lcall
dec
cld
adc
sub
pop
popf
cwtl
add
pop
inc
xchg
nop
sub
jp
daa
push
es
mov
popa
cs
lcall
jb
xchg
sub
adc
jb
adcl
sub
jl
lahf
icebp
sub
insb
imul
sbb
jno
xchg
repnz
scas
jbe
pop
icebp
decl
and
jno
xchg
xchg
ljmp
bnd
repnz
icebp
xor
notl
jg
cmpsl
jbe
fcomip
jecxz
call
push
and
in
cs
xor
js
addr16
adc
inc
pop
shr
cli
call
fiadds
sub
xchg
cld
push
dec
mov
sbb
xchg
mov
decl
incb
daa
pusha
add
fs
out
inc
mov
or
or
cmc
rolb
or
jmp
lods
fmul
inc
dec
adc
lahf
dec
inc
inc
and
xchg
lock
loopne
inc
test
cmpsb
scas
lds
jbe
jb
sub
or
addr16
lods
mov
push
fwait
mov
clc
loopne
jnp
xchg
mov
sbb
jbe
pop
jae
icebp
jnp
fcomip
sbb
negl
pop
jl
call
std
ljmp
clc
test
in
jo
insl
clc
ja
outsl
push
pop
sti
jle
jg
ljmp
mov
sti
mov
mov
jnp
pop
jge
jl
iret
divl
divb
aas
rep
jge
outsl
sti
int
std
xchg
jle
insl
ss
jge
bnd
mul
lods
sub
mov
jmp
mov
test
ret
test
xor
imull
fsubrp
ljmp
push
adc
enter
ljmp
mov
iret
aaa
out
push
popf
je
cwtl
jbe
ja
ds
call
mov
xchg
xchg
int3
addr16
leave
nop
adc
jp
push
lods
testb
add
jmp
or
pop
inc
aas
xchg
js
incb
mov
cs
loopne
test
pop
out
sbb
nop
decl
int3
adc
sub
inc
outsb
insb
xor
dec
test
incl
and
in
jecxz
leave
sbb
je
sbb
or
xchg
sbb
pop
sar
pushl
aad
ljmp
sub
fldcw
shlb
mov
and
mov
sub
mov
roll
xlat
xchg
aaa
popf
mov
jns
sub
push
and
fs
insl
push
test
mov
pop
icebp
ljmp
mov
jmp
out
pop
mov
adc
les
pop
sti
jmp
cwtl
aaa
into
xor
int3
lcall
sar
or
add
xor
mov
iret
sub
jp
or
jae
pop
or
pop
fsubrp
andb
testl
fisubrs
push
in
pop
jbe
ljmp
nop
or
push
lods
lock
loop
ja
add
add
push
stc
add
mov
pop
out
pop
add
sbb
call
add
push
loopne
and
decl
push
adc
or
jg
shll
fisttps
jno
outsl
or
rolb
leave
daa
mov
rolb
push
enter
roll
cmp
incl
sub
and
pop
push
sbb
cmp
mov
mov
popf
js
push
xor
decl
push
cmpsb
mov
inc
stc
test
push
inc
jmp
adc
hlt
arpl
push
mov
mov
in
inc
bound
aam
call
sbb
xor
push
push
fidivs
movsl
in
jp
icebp
inc
ja
popa
test
sbb
decl
stc
es
inc
and
in
sbb
cltd
mov
mov
xchg
cmp
fildll
mov
popa
enter
push
or
sar
jmp
cmpsl
popf
lcall
sbb
jns
add
mov
inc
movsl
cwtl
dec
sub
ljmp
cmc
inc
sbb
xor
nop
pop
fmull
adc
xchg
inc
ja
mov
fistpll
repnz
inc
sbb
hlt
and
push
bound
jg
incl
divb
mov
push
hlt
pop
mov
adc
cmp
mov
ja
call
orb
pop
inc
sbb
enter
ds
push
xor
inc
push
cli
test
xchg
inc
incb
icebp
xchg
pop
push
jl
lds
ftst
xchg
push
cmp
cwtl
gs
dec
cmc
and
dec
xor
dec
insl
in
xchg
push
jno
lods
test
pushf
xor
cmc
repnz
ljmp
xlat
pop
dec
stos
in
jae
ds
mov
popf
cmp
aaa
std
lcall
add
clc
shll
sub
push
sbb
xchg
pop
fiaddl
add
test
mov
mov
dec
ja
fstpt
push
lret
cmp
shlb
mov
shl
fidivs
push
push
mov
jns
xchg
aaa
movl
filds
mov
in
sbbl
clc
cmp
jmp
xchg
push
inc
test
add
lcall
pop
dec
dec
icebp
out
adc
jmp
lds
xor
cmp
shlb
mov
cmp
shl
decl
pop
test
cmc
mov
cmp
mov
fbld
push
incl
aaa
rcrl
jmp
jl
cld
jmp
ljmp
fbstp
mov
out
add
add
pop
jle
xor
sub
bound
adc
xor
mov
pop
xchg
mov
sub
orb
add
or
mov
mov
xchg
or
mov
cmc
pop
sahf
outsb
push
sbb
and
pop
leave
into
decl
dec
arpl
pop
std
daa
cmp
mov
xchg
in
sbb
cmp
js
jp
mov
cmp
fcos
inc
xchg
int
jp
sub
mov
addr16
jnp
scas
cmp
ljmp
add
fdivl
xlat
aaa
sub
lea
and
mov
or
xchg
or
outsl
jp
arpl
jle
mov
test
and
lcall
in
scas
jns
rorl
in
jg
stos
pop
and
xchg
inc
fisubrs
lock
icebp
clc
decl
scas
jg
fwait
pop
repnz
xchg
ds
cmpsb
adc
fisubl
decl
dec
mov
sub
xor
mov
jge
hlt
gs
scas
and
call
shrb
pusha
push
daa
xchg
test
call
fwait
dec
cmp
add
lods
xor
movsl
inc
aaa
ret
int
movsb
lods
jmp
and
cs
cmpsl
imul
lcall
scas
daa
xchg
enter
xor
and
in
pop
mov
sbb
rorb
call
mov
and
or
lds
mov
pushf
adc
pushf
in
push
fisttpl
cmc
nop
xlat
mov
inc
fwait
pop
mov
gs
push
xchg
lahf
std
xchg
idivl
ljmp
clc
enter
sbb
std
xor
in
cmp
xchg
inc
pop
push
subl
test
adc
sub
cmp
arpl
call
clc
test
mov
outsl
lods
addr16
dec
mov
shrl
mov
aas
push
data16
popa
jne
scas
lret
push
xor
inc
pop
data16
outsb
pop
fwait
cmp
mov
jecxz
adc
dec
enter
push
cmp
loope
enter
mov
xchg
ljmp
sbb
insb
pusha
arpl
pushf
in
mov
inc
mov
push
lcall
and
xchg
lcall
rol
pop
in
gs
mov
add
incl
pop
je
push
fldl
dec
push
rcr
fmull
dec
sarl
loop
cld
mov
cs
push
cmpsb
mov
xchg
push
insl
pop
push
or
cmpsb
cli
ljmp
loope
pop
sti
scas
cmc
mov
xor
cld
outsl
mov
fbstp
or
fstpt
jecxz
and
lret
cld
jg
dec
sub
jno
sbb
icebp
jne
sub
adc
mov
fwait
pop
inc
pop
lock
xchg
mov
jg
inc
iret
jl
and
ud0
fadd
rclb
jecxz
push
sub
es
test
orb
incl
fbstp
or
movl
popf
jne
adc
rorb
scas
stos
inc
test
mov
adc
sbb
sar
push
outsl
pushf
pop
inc
mov
lret
dec
mov
dec
inc
jmp
mov
fst
cmpsb
add
lahf
and
xchg
rorl
jbe
repz
decb
rorl
jmp
mov
jl
xchg
bound
iret
ret
jmp
ds
jge
leave
imul
pop
dec
xlat
pop
es
mov
jno
mov
cmp
push
sub
xor
ss
aam
insl
cmp
ljmp
scas
cli
test
js
mov
and
or
cld
sbb
inc
loope
jns
cmp
xorb
and
pop
mov
decl
in
adc
pushl
call
inc
push
xlat
inc
mov
call
in
fidivrs
pop
loope
fcomip
lret
lds
lods
adc
xor
call
mov
cs
lea
mov
aaa
push
jb
arpl
addr16
and
fcmovbe
in
cwtl
cmp
incl
mov
mov
out
out
out
int
push
mov
xchg
in
fwait
decl
shll
shlb
or
out
push
call
mov
jg
das
clc
out
movsb
cmc
cmp
fiaddl
sub
mov
mov
call
lea
cmp
dec
mov
dec
jecxz
mov
mov
daa
pop
jle
mov
push
std
jmp
jne
adc
dec
stos
jbe
jnp
mov
xor
push
enter
jle
dec
pop
jl
and
jno
dec
push
adc
cmp
mov
mov
scas
repnz
lahf
mov
pushl
push
cli
mov
out
lds
jle
aad
std
mov
bound
jge
mov
ljmp
mov
pop
push
dec
pop
sti
push
lret
jbe
inc
subb
call
mov
jp
jmp
lahf
stos
filds
in
shrb
add
jb
push
mov
ljmp
dec
adc
fnstsw
xchg
xchg
lret
xchg
jnp
ljmp
xchg
inc
rorl
pop
pushf
sub
mov
subl
loopne
dec
jne
cmp
aam
push
or
push
or
jae
dec
dec
int
inc
clc
lcall
ss
movsl
jo
pop
imul
incl
ss
dec
dec
rcrl
inc
imul
or
call
pop
ljmp
call
push
cmp
xchg
xchg
outsb
push
adc
test
decl
jo
xchg
in
pop
ljmp
push
push
loope,pt
addb
cmp
out
insb
add
dec
pushf
pop
sub
mov
jb
sbbl
adc
fistl
fidivs
mov
adc
outsb
add
jmp
push
mov
fisubl
jg
stc
pusha
int
push
pop
movsl
pop
pop
arpl
fdivrl
and
lcall
lds
pushf
adc
dec
pushaw
jbe
loope
les
cltd
inc
inc
mov
inc
fadd
imul
movsl
pop
scas
or
loopne
jbe
dec
add
outsl
roll
push
lcall
or
mov
jp
sbb
es
decl
or
dec
mov
sahf
test
sub
xchg
aaa
push
adc
loope
cmpsb
fs
mov
pop
out
in
in
lahf
cmp
adc
jmp
jno
xchg
mov
popa
cmp
arpl
add
push
bound
cmp
inc
cmp
lcall
or
xchg
and
mov
out
sbb
xlat
mov
jmp
in
pop
pop
sbb
mov
sub
lahf
out
loope
jg
adc
fmuls
adc
popa
sbb
adc
inc
dec
adc
push
hlt
cmp
incl
aam
cmp
inc
fs
clc
and
int
out
jl
scas
fimull
lahf
mov
xchg
sbb
clc
push
mov
ja
lcall
icebp
xchg
lret
add
stc
pop
cmp
into
mov
sarb
push
inc
pop
jbe
inc
call
test
nop
or
adc
inc
clc
test
sub
mov
call
loope
xchg
and
cmp
dec
pusha
mov
push
bnd
jl
mov
dec
cltd
loopne
aam
jno
aaa
ljmp
fimuls
or
and
jle
call
ljmp
mov
out
inc
arpl
repnz
pop
das
push
in
jmp
adc
pop
push
jne
movsb
inc
jp
inc
dec
or
mov
and
es
push
std
or
es
icebp
scas
jecxz
cmpsl
cmp
out
jo
ljmp
cs
cmp
and
lds
add
cmp
pop
aam
incl
mov
dec
bound
xchg
in
add
mov
and
dec
xchg
dec
mov
decl
push
sbb
cmc
inc
loop
icebp
daa
push
pop
ror
test
fcompp
sbb
pop
mov
push
lea
mov
and
loope
cld
gs
sahf
push
fdivl
in
aas
dec
add
roll
test
fcoms
pop
lret
mulb
mov
or
test
pop
faddp
outsl
mov
popf
fisttpl
pop
sbb
sbb
insl
rorb
push
inc
and
push
lgs
fcomip
jg
adc
xchg
in
fmuls
and
cmp
jmp
inc
mulb
xchg
mov
insl
pop
imul
decl
lret
add
jg
inc
es
ret
sub
jb
popa
jne
and
cmpsb
in
fdivr
inc
jg
movsb
insl
fisubl
into
jecxz
add
jo
daa
mov
das
push
addr16
cmpsb
out
js
imul
jbe
jae
sbb
jbe
out
push
gs
cmpsb
and
incl
pop
adc
jecxz
arpl
mov
jb
sbb
sahf
sbb
popa
test
jmp
adc
mov
or
cmp
or
sbb
ja
movsb
push
sbb
fcompl
pop
sub
das
xor
andb
xchg
incl
aam
mov
jmp
pushf
je
mov
test
pop
add
pop
cltd
xor
add
stos
pop
sub
mov
out
pushl
xchg
cltd
dec
out
push
rorl
or
jo
push
imul
xlat
pushl
mov
imul
mov
push
jmp
inc
sbb
cmp
decb
push
in
loop,pt
shlb
addr16
adc
ja
es
shrb
sub
ss
xchg
push
jbe
pop
data16
ljmp
pushl
std
ljmp
push
jmp
push
fs
lcall
inc
inc
scas
aam
andb
or
call
fwait
xlat
sbb
jmp
lds
sub
int
jg
cmc
mov
andb
push
sub
lret
fdivl
lcall
decl
inc
test
aad
lret
je
sahf
jl
push
std
push
repz
pop
icebp
push
lret
hlt
push
out
push
insb
icebp
push
scas
lcall
or
mov
fcoms
ja
imul
int
push
lcall
imul
in
jecxz
add
pop
mov
stos
enter
xchg
jmp
mov
cmp
lock
incl
and
into
imul
lcall
jb
fcomip
outsb
cmp
ljmp
shlb
inc
scas
movsb
jl
cs
data16
ja
scas
popf
cli
sub
jmp
inc
push
out
cwtl
sub
in
sahf
mov
mov
movsb
jmp
add
es
adc
mov
jg
je
dec
lods
pop
xchg
mov
outsl
cmp
jns
in
enter
lret
bound
ds
xchg
cmpsb
lea
and
aam
rcll
movsl
fcos
lcall
movsb
sbb
adc
repnz
movsl
mov
pop
cmpsb
pop
jp
lret
imul
mov
lock
incl
pop
xchg
sbb
in
roll
fs
outsb
imul
call
jmp
push
push
mov
ret
xchg
mov
outsl
push
insl
repnz
insb
mov
jle
push
scas
repz
jo
int3
out
mov
adc
mov
sahf
scas
leave
outsb
sub
push
scas
out
imul
adc
sub
adc
scas
rcrb
outsb
push
jp
into
shlb
inc
pop
and
ljmp
add
sbb
pop
sbb
stc
push
lods
mov
sarl
pushl
arpl
insl
adcb
fs
mov
or
sbb
mov
pop
add
inc
leave
ljmp
out
and
mov
or
ljmp
fstpt
pop
incl
jge
into
push
mov
add
xor
fisubrs
mov
insl
imul
xor
cmc
incl
lods
adc
loop
xchg
arpl
push
and
inc
jl
xchg
decl
mov
ror
lock
xchg
rorl
cli
pop
sbbl
mov
es
sti
lcall
adc
outsl
es
lret
movzwl
movb
imulb
push
in
scas
jg
xlat
out
sar
mov
mov
xchg
test
or
fs
es
sub
ljmp
lds
out
xor
ljmp
insb
ficomps
and
es
loope
out
test
mov
cld
or
mov
decl
loop
add
lods
add
push
sbb
dec
push
mov
movsl
jno
repnz
add
mov
ljmp
mov
pop
mov
xchg
fucomi
int
mov
mov
xor
jg
loopne
dec
pop
or
xchg
popf
mov
jecxz
xor
cmp
fstpl
out
sahf
cmp
push
ret
mov
xor
sbb
mov
call
out
jg
cmp
je
mov
xchg
push
xchg
mov
aas
mov
xor
scas
repz
jmp
mov
lahf
imul
mov
ret
or
ljmp
mov
xor
lahf
incl
jmp
out
lock
adc
mov
push
sub
jns
sub
fnsave
out
adc
xchg
sbb
or
sar
jmp
scas
jo
add
into
in
xor
sub
and
insl
insl
js
cmp
jg
jmp
inc
mov
aas
push
xor
and
mov
sub
mov
or
mov
jmp
mov
call
pop
sbb
in
xor
mov
push
cmp
decl
inc
xor
jp
xchg
sbb
push
xlat
loop
sbb
adc
mov
or
outsl
ds
mov
mov
pop
or
popf
mov
jl
xor
sbb
jne
stos
ficomps
push
outsl
pusha
cmpsb
call
mov
xor
leave
pop
jno
xchg
mov
jae
pop
out
mov
bound
repnz
inc
movb
jmp
js
stos
outsl
xchg
mov
mov
or
out
xchg
test
mov
shrb
int3
inc
mov
out
lcall
fdiv
mov
xor
mov
sub
jb
data16
clc
push
pop
mov
add
push
mov
sbb
pop
cltd
stc
lret
mov
xchg
mov
push
decl
jne
mov
arpl
jns
fwait
arpl
scas
ja
scas
mov
jecxz
cmpsb
lock
pushl
mov
and
fwait
subps
mov
outsb
pusha
jae
jecxz
lock
pushl
call
or
cmc
mov
cmpsl
cs
inc
adc
test
xor
cmpb
xchg
fwait
jg
aam
stos
ss
pop
decl
repnz
jne
mov
add
pop
jecxz
rol
pop
push
neg
lea
xchg
addr16
scas
and
xchg
xor
and
mov
lcall
mov
inc
inc
sub
ss
push
add
pop
mov
and
xchg
xor
rcrb
icebp
adc
pusha
jmp
mov
xchg
mov
xchg
dec
sbb
repnz
mov
xchg
jns
shlb
fsubs
adc
jecxz
xor
push
ds
mov
mov
dec
and
mov
and
inc
insl
in
and
push
popa
xchg
push
insb
dec
pusha
aaa
clc
ljmp
xchg
xchg
pop
out
or
mov
jmp
and
jae
jg
jl
loopne
out
fdivs
stos
pop
fwait
jae
mov
xor
bound
push
lods
test
push
out
and
fsubl
incl
pop
add
cs
xchg
bound
fldcw
ret
jp
icebp
mov
scas
mov
or
mov
jmp
jp
or
mov
insl
lret
adc
push
mov
dec
xchg
jb
dec
or
int3
mov
decl
lret
dec
ja
mov
das
pushf
mov
outsl
shrl
stos
stos
clc
int
push
out
stos
inc
sub
adc
xor
out
mov
jo
and
pop
repnz
jle
ret
dec
push
xchg
cmp
or
push
out
cli
in
xor
jl
xlat
mov
jae
jp
cmpsl
ljmp
out
sub
jp
jno
fldcw
inc
dec
mov
push
popf
ret
ljmp
sub
lea
jbe
loop
ret
fs
incl
fsubs
xchg
jle
pop
adc
aas
mov
push
das
cmp
aas
adc
test
mov
aad
aas
xlat
sahf
xchg
mov
pop
mov
mov
in
dec
cs
jl
xchg
stos
mov
incb
inc
pop
fildll
jbe
xor
mov
inc
addl
mov
inc
sbb
decl
daa
dec
pushf
js
and
add
rolb
jp
test
dec
xchg
sub
test
fwait
je
andl
and
sub
mov
xchg
sub
jns
movsb
int3
sahf
cs
cli
xchg
leave
adc
decl
mov
je
je
push
lods
pop
popa
ss
cli
repz
popa
mov
insl
mov
dec
jp
mov
inc
xchg
ljmp
mov
pop
mov
sti
pop
jo
sar
mov
sbb
cmpb
pop
ret
and
ja
inc
ljmp
popa
sbb
fisubrs
cld
inc
mov
shlb
xlat
mov
lds
clc
out
pop
mov
jmp
scas
mov
mov
pop
lock
adc
cld
jg
jge
push
in
mov
adc
pop
jp
fdivrl
fstp
and
lcall
add
stc
aaa
inc
xchg
pop
xchg
push
lret
mov
sar
clc
call
sti
movsb
repnz
sub
sbbb
mov
jp
das
xor
mov
mov
aaa
cld
or
add
jmp
xchg
or
stos
or
mov
inc
cs
inc
decl
xchg
jno
pushf
push
mov
cmp
mov
stos
push
test
xchg
jno
cld
movsb
bound
inc
popf
repnz
incl
in
mov
xor
scas
into
ret
push
jae
mov
sar
dec
push
push
lods
jmp
mov
mov
and
or
and
jb
jmp
add
mov
mov
sub
cs
mov
int3
add
aam
incl
sub
out
jl
mov
pop
jo
das
xor
les
xchg
adc
repz
mov
mov
or
sub
jbe
adc
rcr
les
ljmp
test
sub
jmp
mov
out
mov
cmc
dec
jno
push
arpl
cmp
mov
mov
mov
inc
pop
lock
clc
sub
sub
rcrl
ror
nop
je
shrl
ljmp
adc
mov
and
xlat
pop
loope
nop
aad
daa
push
ljmp
mov
jo
or
mov
fdivr
fs
mov
clc
lock
jle
in
inc
adc
xchg
lret
imul
ljmp
test
aam
mov
loope
ljmp
incl
dec
rolb
pop
aaa
pop
xchg
fldt
into
sbb
rolb
into
mov
mov
inc
outsl
dec
or
adc
dec
leave
sarb
ficomps
dec
call
stos
jecxz
decl
push
pop
jns
cmp
sub
mov
adc
or
call
mov
test
popa
cmova
dec
cmovs
std
push
popa
addr16
cmc
outsb
out
arpl
push
mov
decb
aad
fidivrl
or
and
cmp
adc
jnp
inc
je
outsl
out
icebp
mov
inc
insb
leave
pop
sbb
mov
andb
stos
sbb
or
push
lret
aad
jae
or
mov
or
and
movsl
jns
aam
and
sbb
mov
and
mov
jg
clc
dec
jbe
fiaddl
int3
pop
pop
adcb
imull
mov
adc
jmp
fldt
decl
lock
lea
in
sar
jg
movsl
dec
xchg
jae
out
out
in
jmp
in
cmp
lock
push
dec
jg
mov
ds
stc
pop
mov
sub
mov
scas
xchg
aad
outsl
jbe
es
lock
jmp
imulb
dec
dec
repnz
push
push
ret
mov
jp
inc
dec
rclb
xor
lock
push
inc
add
outsb
ds
jmp
or
push
cmp
in
jae
cmpb
ljmp
dec
xchg
or
js
sub
jbe
jno
loopne
cmp
push
and
or
fldcw
popa
or
cmc
mov
sahf
in
ljmp
and
push
xchg
fstpt
sbb
pop
cmp
nop
pushl
sbb
xor
sub
jl
jns
push
test
xor
mov
stos
cld
es
call
xchg
insl
add
add
and
xchg
cli
ljmp
add
push
mov
cmp
fbstp
mov
ljmp
push
jno
cmp
aad
and
mov
js
in
nop
or
mov
dec
jmp
ja
cmc
lods
out
and
add
xor
rcr
test
pop
mov
scas
in
fildll
decl
push
and
popf
mov
arpl
call
xor
xor
dec
cld
mov
lahf
mov
das
mov
cmc
mov
dec
imul
mov
dec
xor
xchg
addr16
xchg
xchg
sbb
shl
xchg
mov
dec
xchg
cmp
push
je
call
cli
add
xor
decl
call
sbb
xchg
and
dec
mov
repnz
mov
and
mov
call
test
mov
mov
and
add
push
mov
rcll
mov
int
jb,pn
imul
lcall
mov
iret
mov
cmp
inc
sub
andl
andl
aad
cmp
inc
in
adc
cmp
dec
cmpsb
xchg
jns
dec
nop
cmp
aam
mov
test
lock
icebp
cmpsl
pusha
dec
cmpb
dec
xlat
mov
cmp
mov
sub
les
cwtl
cmpsb
mov
aam
xor
xor
push
ss
jle
mov
push
outsb
loopne
repnz
mov
mov
nop
insb
or
pop
mov
or
pop
inc
sbb
cmp
mov
xor
popa
aad
jb
jo
pop
outsb
cmp
pop
scas
or
push
icebp
xor
xor
fdivrs
xchg
xchg
out
call
xacquire
jo
mov
cmp
test
inc
mov
xor
xor
fstpl
mov
lcall
loope
mov
pop
mov
mov
sarl
inc
add
mov
fisubl
mov
jmp
dec
pop
push
xor
mov
test
cmp
pop
into
arpl
stos
js
cmpsb
mov
dec
arpl
mov
sub
dec
lcall
call
mov
xchg
and
mov
mov
sub
dec
iret
sahf
testl
mov
mov
and
loop
mov
sti
inc
shl
nop
mov
mov
mov
lods
jmp
pop
ficompl
iret
inc
adc
xor
jo
scas
jnp
outsl
sbb
or
decl
inc
adc
jmp
test
into
mov
nop
pusha
add
add
in
inc
push
icebp
decl
and
in
lcall
push
inc
mov
and
sbb
xor
fbstp
mov
mov
mov
int
or
xchg
lahf
lds
loopne
inc
inc
stos
pop
fdivrs
adc
ljmp
jmp
out
push
cs
pop
xchg
bndldx
mov
mov
ss
or
jae
call
dec
sti
xlat
imul
rcrb
jo
cmp
push
jns
adcl
or
or
xor
cmp
lods
loopne
movsl
in
xor
cld
incl
rcll
xchg
cmpb
and
mov
lcall
sahf
pop
cmpsb
lods
nop
adc
add
inc
cltd
push
addl
roll
ret
sub
and
jmp
cmpsl
adc
jmp
push
xlat
pop
inc
adc
fdivrl
outsl
cs
push
imul
popf
sbb
lds
cli
jg
jmp
or
jmp
adc
lods
or
loop
lods
sbb
pushl
movsb
push
mov
or
and
lods
testl
ljmp
push
pop
push
movsb
inc
dec
test
xor
xchg
jl
aad
jle
push
psubusb
push
sahf
pushf
rclb
jg
mov
pop
dec
jb
pop
test
in
test
into
movsb
fcompl
ret
dec
ljmp
stos
sarb
pushf
xchg
cmpsl
fs
or
fildll
xchg
push
dec
cmp
scas
rorl
mov
adc
ret
xor
and
mov
dec
pop
dec
enter
pop
les
hlt
jl
cld
dec
je
xor
outsb
lock
arpl
dec
roll
dec
pop
icebp
jb
add
sarb
sti
test
pop
icebp
jmp
jp
add
xorb
and
and
xchg
or
call
ret
not
lret
jmp
and
and
and
mov
or
ljmp
fsubp
push
nop
lods
cmp
scas
lahf
fmull
inc
lds
sub
cli
out
push
inc
in
add
adcb
cmp
add
xor
and
or
frstor
mov
jecxz
mov
mov
lret
js
add
mov
leave
xchg
cld
ljmp
ds
mov
sub
inc
das
test
int3
jl
or
repz
int3
loope
ljmp
add
lods
mov
xor
xchg
call
orb
mov
sti
mov
push
lods
or
sti
xchg
iret
sti
cld
dec
in
jg
add
and
jne
and
adc
push
insl
out
outsb
add
dec
push
jbe
in
iret
or
ret
and
ror
dec
and
or
iret
dec
cmp
add
mov
cld
decl
add
aam
jmp
add
cmp
pop
pusha
jnp
out
aad
xor
jecxz
mov
xchg
or
scas
cmp
jo
loop
push
add
in
mov
imul
in
push
lcall
xor
mov
adc
lock
cs
icebp
sub
fidivl
mov
sub
mov
mov
cmc
sahf
jo
call
mov
dec
loope
jno
pop
cld
stc
dec
or
sbb
mov
mov
and
inc
loop
mov
mov
dec
push
jo
iret
incl
mov
inc
inc
or
dec
not
push
and
pop
addr16
and
or
imul
decl
adc
push
inc
adc
call
movsl
or
lods
adc
les
jno
pop
and
sub
enter
pusha
lahf
lcall
mov
and
sbb
inc
mov
bound
out
mov
add
lods
arpl
xor
pushl
xor
into
test
call
push
dec
and
xor
dec
jecxz
pop
inc
inc
lea
push
fucomip
sahf
ficoml
mov
movzwl
push
push
ljmp
add
or
push
imul
fdivp
enter
insb
or
mov
sub
int
adc
jge
pop
and
mov
lock
cmc
cld
mov
es
inc
clc
icebp
and
nop
xlat
lds
mov
fcoml
sbbb
inc
xor
call
jl
in
incb
pusha
or
dec
mov
sub
and
imul
xchg
lock
or
pop
xor
add
push
inc
or
decl
jo
insl
inc
inc
dec
sub
pop
adc
shll
mov
xlat
mov
mov
push
dec
xor
out
push
lock
lret
ljmp
out
das
dec
jecxz
pushf
cmpsb
xor
sub
mov
icebp
fcoml
xor
imul
sub
push
lock
pushl
add
push
push
insl
cmp
mov
hlt
push
shrl
lret
insb
in
add
pop
dec
in
mov
mov
shrb
test
testb
or
ljmp
inc
cmp
fmull
inc
push
leave
lret
jp
loop
sub
in
or
and
and
shr
xor
loope
or
xor
dec
mov
or
sub
roll
push
push
dec
xor
daa
mov
call
xchg
icebp
push
xor
lock
xor
mov
sub
das
rcl
push
adc
mov
call
shll
shlb
shrb
or
mov
sbb
pushf
movb
clc
adc
jp
inc
sub
adc
and
dec
adc
jle
das
mov
cmp
shll
icebp
push
pop
int
dec
adc
rclb
xor
movsb
adc
das
add
push
mov
mov
scas
push
push
jo
decl
adc
ret
xchg
or
test
and
cmp
mov
xor
sub
call
sub
push
sbb
decl
mov
rolb
into
das
lds
dec
jl
mov
lret
dec
xor
decl
jmp
sbb
ljmp
or
jno
and
or
adc
aad
or
cld
fcomip
pushl
add
mov
and
or
push
cmp
clc
das
jbe
hlt
es
xor
xor
mov
push
daa
aaa
mov
mov
call
lret
add
dec
push
push
pusha
mov
ss
mov
rorl
and
into
loopne
sub
fdiv
adc
insl
pop
jp
or
popa
inc
shll
aam
add
xor
push
adc
nop
xor
repz
inc
xor
fldenv
out
push
movsb
add
xor
ret
imul
adc
test
push
xor
xchg
testl
or
imulb
cmp
mov
lcall
fsts
inc
sub
push
int
mov
dec
adcb
repnz
inc
jbe
jmp
push
into
push
dec
rclb
jecxz
jmp
and
mov
jmp
outsl
jge
cmpsl
xor
dec
cld
fdiv
inc
shll
lret
inc
popa
xor
insb
push
pop
sub
loopne
ljmp
jno
adc
fidivl
mov
pop
jp
dec
and
sub
decl
xor
dec
imul
mov
jecxz
pop
mov
and
std
aam
or
sub
push
aaa
or
adc
sbb
mov
push
pushl
xor
adc
push
ret
mov
movsl
in
add
in
dec
xor
lock
push
and
dec
adc
xchg
out
inc
xchg
lcall
cs
shrb
inc
xor
or
push
in
jbe
fnstenv
push
bound
jl
movsl
push
dec
es
das
jns
insb
ljmp
and
dec
lcall
or
movb
cli
push
test
testb
incl
testl
mov
cld
push
push
cs
add
push
test
aad
dec
inc
xlat
ret
call
sar
xorb
mov
je
adc
out
aad
mov
incl
jo
inc
push
and
jno
xor
pop
sub
decl
aad
lret
ljmp
aaa
or
jnp
pop
xchg
push
adc
pop
mov
rcrl
shr
or
adc
and
jmp
decl
dec
dec
xor
roll
nop
or
add
push
fldenv
in
loop
inc
inc
pop
jb
or
mov
iret
in
cmp
outsb
jg
xor
push
dec
xor
and
std
bound
adc
xchg
insb
dec
dec
es
insb
cmp
das
cmc
dec
insl
sub
jae
lret
push
mov
cltd
iret
xor
cld
cmp
aad
sti
negb
rcrb
pop
or
addl
das
push
fwait
jns
test
cld
pushl
lods
aaa
mov
outsl
dec
std
mov
shlb
ret
jg
or
repnz
es
adc
push
jnp
repz
adc
or
ljmp
push
mov
lock
push
imul
push
bound
or
xorb
or
mov
xor
repnz
dec
xor
in
shrl
pushl
std
sar
movsb
js
sub
and
mov
enter
mov
scas
outsb
dec
mov
pop
jl
mov
std
ret
testb
xor
mov
mov
out
xchg
out
xchg
imul
pop
xorl
add
add
mov
jmp
ljmp
imul
cwtl
bswap
cs
sahf
enter
sbbl
lcall
cmp
pop
testb
scas
xchg
nop
xchg
mov
iret
adc
out
pop
ljmp
adc
mov
sub
scas
mov
rorl
sar
xor
fidivs
out
mov
adc
or
ret
shlb
cmp
sub
push
sbb
ja
scas
mov
std
adc
inc
dec
pop
rcl
dec
adc
mov
pusha
pop
mov
jp
dec
sbb
mov
adc
cs
loope
and
xor
call
cmp
movsb
outsl
or
cld
decl
jnp
movsl
xor
inc
and
xor
int3
aaa
insb
cli
jg
xchg
pop
shll
arpl
jbe
pop
adc
decl
dec
int3
mov
add
arpl
jecxz
in
fs
fisubrl
cwtl
lret
push
pop
mov
incl
push
and
and
int3
addr16
or
xchg
mov
sbb
sbb
insl
test
ljmp
fld
inc
fcoml
cltd
pop
lret
lods
cmpsl
cltd
test
jp
loope
and
push
scas
popf
adc
jmp
jmp
scas
ret
xchg
test
xor
fwait
ljmp
xor
mov
xchg
jnp
and
out
aad
in
and
out
adc
mov
mov
xorb
clc
cmp
cli
jae
xchg
sahf
add
mov
mov
sti
dec
mov
in
in
or
lcall
shl
xchg
icebp
imul
ja
and
lods
into
mov
enter
sahf
jg
jg
xlat
movsb
and
cld
dec
int3
daa
stc
xor
and
mov
xchg
addr16
cmp
std
ljmp
incl
cs
cmp
dec
sub
pop
loopne
push
mov
push
or
pushl
insl
mov
cmp
lahf
mov
sub
lcall
in
sub
xchg
push
jecxz
or
mov
jns
and
in
incl
push
pushf
enter
dec
clc
ret
adc
inc
jl
fildll
decl
fxch
push
or
lcall
aas
mov
lds
xor
outsb
mov
dec
incl
jno
out
push
dec
sbb
dec
aas
cli
call
scas
in
mov
cs
fists
outsl
adc
out
mov
fistl
fadds
ljmp
or
dec
in
mov
lods
bound
sub
push
leave
add
in
mov
ds
adc
xor
pop
dec
ja
hlt
nop
jae
lds
out
repz
mov
push
jb
add
xor
test
adc
jmp
and
jns
js
sbb
add
cmp
xchg
pusha
adcl
and
xchg
in
inc
mov
call
xchg
pop
stos
roll
es
sub
push
ror
sub
inc
sbb
dec
inc
repnz
jmp
add
jle
xchg
xorb
jb
xchg
push
fcmovu
xor
jns
lcall
pop
ret
loope
pop
push
faddl
arpl
mov
jle
adc
outsl
cmc
pop
outsl
sbb
mov
setp
jmp
lock
sar
decl
add
sbb
mov
mov
mov
jnp
aad
shlb
mulps
out
xor
inc
ljmp
lret
jp
bnd
mov
pop
loope
cmp
pushl
sbb
aaa
shll
and
iret
mov
mov
add
decl
addr16
mov
add
stc
mov
or
xor
les
std
decl
sbb
xchg
divb
leave
cld
xchg
mov
cld
xchg
imul
jg
sbbb
sub
cwtl
js
cmp
and
or
add
lret
subb
pop
adc
xor
inc
test
push
dec
pop
adc
sbb
mov
inc
mov
add
ljmp
les
enter
xchg
sub
mov
mulb
xchg
daa
aas
outsb
sbb
shlb
fwait
ss
call
add
cli
sub
imul
mov
add
push
push
or
test
mov
and
fimuls
shll
add
and
add
add
decl
sti
adc
mov
sub
test
mov
jle
hlt
jg
popa
pop
cwtl
jmp
mov
push
inc
sbb
lods
pop
mov
fimuls
mov
decl
test
cmp
or
inc
mov
push
sub
mov
pop
add
hlt
iret
mov
dec
adc
push
jae
sbb
push
filds
jno
call
cmp
jg
fists
enter
fs
push
pushf
popa
fistpl
rcrb
out
iret
pop
shll
outsl
jbe
mov
out
inc
lret
sbb
inc
fidivrl
add
sub
adc
pop
aam
rcrb
add
xchg
xor
pusha
loope
int
rol
sbb
push
aaa
movl
adc
dec
and
adc
inc
mov
xor
xchg
mov
ds
add
call
adc
dec
and
sub
adc
xor
jg
call
push
test
inc
gs
xor
xchg
and
push
pop
sub
addr16
jbe
adc
lcall
dec
pop
gs
cltd
in
and
movsb
movsl
fwait
insl
sbb
push
xchg
pop
es
ljmp
vmovq
mov
and
push
mov
jno
adc
lcall
outsl
movsb
gs
inc
pop
test
rorl
pop
notb
push
sbbl
aaa
sub
inc
jl
inc
jo
cld
mov
pop
jnp
incl
stos
mov
push
fwait
push
lods
pop
lock
pop
mov
push
jnp
inc
pop
jp
lea
push
call
filds
sbb
call
sbbl
pop
cld
mov
scas
sarl
or
mov
or
jmp
fnstsw
scas
sbb
mov
lcall
or
lcall
test
and
shlb
testb
xor
std
and
mov
xor
inc
mov
push
dec
push
ljmp
call
daa
lds
cmp
xor
xchg
ja
gs
push
das
or
data16
popa
cmc
cmpsl
ljmp
leave
rorb
in
push
jo
cltd
fcomps
xchg
mov
push
outsl
nop
xchg
movsl
inc
xor
xchg
pop
pop
cmc
pushl
aad
imul
add
int
or
add
push
sbb
incl
adc
dec
hlt
stos
push
or
mov
out
mov
sbb
sub
mov
mov
icebp
push
js
popf
add
sub
push
rol
divl
std
sbb
and
pop
push
add
sub
or
cld
lret
add
fnsave
mov
mov
jmp
test
test
jg
add
pop
test
jae
push
pop
lods
sub
popa
jl
mov
sub
stos
cmc
cltd
js
mov
das
fs
jnp
orb
das
sub
out
cltd
mov
loopne
push
jb
pop
fldlg2
dec
add
adc
mov
imul
push
jb
adc
std
push
lods
dec
xchg
mov
jl
cmp
add
fstps
dec
dec
push
rcl
cmp
es
call
sub
in
dec
push
sbb
add
pop
in
mov
mov
adc
push
add
decl
sub
pushf
push
mov
leave
stos
jle
sub
add
xor
popf
outsb
add
push
es
push
mov
inc
push
mov
and
decb
lea
cmp
inc
pop
jecxz
stos
incl
cs
sub
xchg
call
je
cmp
inc
int
mov
test
stos
jmp
sub
cmp
addr16
ljmp
add
fld
add
add
loop
outsl
aas
pop
movsl
jle
cmp
loopne
xchg
sti
or
mov
fistps
cltd
repz
data16
sbbb
or
shlb
or
mov
incl
inc
adc
jbe
int
mov
loopne
mov
imul
fs
push
rorl
or
adc
les
enter
das
adc
inc
dec
cmp
fimull
xlat
add
dec
pushf
sbb
leave
pop
or
outsl
cli
pop
cwtl
adc
sbb
in
mov
enter
mov
jmp
and
mov
mov
jp
decl
and
arpl
je,pn
push
daa
pushl
cmp
push
je
adc
ljmp
ljmp
outsb
add
sbb
xor
pop
ljmp
incl
mov
pop
dec
in
pop
mov
loope
into
pop
push
pusha
dec
add
call
rolb
fstl
imulb
push
into
rclb
add
outsl
jne
pusha
decl
cmp
xor
push
inc
cmpsb
testl
add
mov
dec
repz
ljmp
lcall
adc
xor
je
adc
or
popa
or
push
jg
pop
jg
jbe
fs
mov
adc
popa
inc
incl
push
scas
add
imul
mov
mov
xchg
test
inc
mov
and
jge
push
cmp
push
fadd
dec
rcll
aam
stos
sub
cmc
xchg
dec
inc
pop
xchg
dec
pop
fiadds
cmpsl
dec
sar
inc
leave
and
and
push
out
mov
jne
enter
call
mov
xor
cmovg
mov
cmc
sub
xchg
insb
test
push
scas
mov
pop
lock
incl
inc
scas
repnz
push
cmp
mov
stos
jle
out
packssdw
decl
sub
mov
adc
mov
lea
cmp
cltd
or
rolb
or
add
out
xchg
int
icebp
movsb
adc
sbb
in
ud0
cmp
and
jae
movsl
mov
jle
adc
mov
xchg
sbb
cmp
fldt
f2xm1
leave
es
xchg
pop
cmp
push
jae
adc
mov
adc
loope
movsb
mov
loopne
inc
mov
push
xorb
jmp
dec
adc
sbb
xchg
push
mov
je
dec
insb
hlt
xchg
cmp
push
mov
push
push
mov
and
sbb
lcall
push
push
mov
xchg
jl
inc
jmp
add
inc
les
scas
sub
jmp
in
ja
fmull
adc
addl
xchg
lods
movsl
xchg
clc
decl
add
sahf
or
jecxz
jmp
inc
ret
decl
mov
mov
mov
and
and
inc
hlt
imul
arpl
fmull
inc
jmp
mov
xor
call
mov
dec
leave
notb
push
dec
and
push
lcall
decl
out
out
test
xor
decb
push
dec
in
dec
mov
hlt
inc
dec
xchg
mov
mov
stos
pushl
outsl
jbe
daa
gs
xchg
xchg
popa
loop
adc
push
mov
call
push
mov
or
adc
outsl
sarl
decl
lods
lret
outsb
cs
sbb
mov
ficompl
test
jno
cs
mov
shll
or
clc
lods
cmp
xlat
mov
cmp
mov
cmp
xor
jg
nop
mov
icebp
mov
idiv
int3
jmp
jo
iret
add
stos
mov
or
fadds
pop
mov
sahf
inc
cmpsb
ljmp
mov
add
sub
lea
dec
pop
mov
inc
test
inc
push
push
and
aad
outsl
xchg
jo
dec
movsl
add
dec
lret
popa
inc
cmp
jge
arpl
sbb
lahf
out
xor
push
pop
mov
cmpsb
sub
jg
std
add
push
dec
fs
lret
sub
adc
xor
decl
daa
adc
sbb
add
movsl
xchg
jbe
clc
pop
lock
lock
lcall
mov
cli
inc
push
mov
lods
btrl
xor
test
fwait
cli
and
jge
dec
mov
add
repz
mov
jno
push
cs
pop
jp
jmp
test
mov
push
shll
insl
call
mov
sbb
add
mov
iret
push
outsb
sbb
in
xor
lcall
and
jns
inc
outsb
hlt
ret
cmp
push
inc
pop
jae
mov
dec
mov
jle
sar
incl
inc
bound
sti
mov
imul
push
inc
push
mov
or
push
jb
dec
mov
xor
call
mov
sub
dec
mov
push
push
test
decl
jnp
sbbl
mov
adc
adc
je
ret
repnz
addr16
addr16
js
mov
orl
repnz
add
call
dec
add
jg
lock
mov
or
jmp
or
clc
add
mov
loopne
push
push
ds
jp
roll
mov
or
add
rcr
es
bound
data16
sub
push
and
repnz
sbb
xor
repz
dec
adc
test
dec
jmp
out
adc
push
cs
in
incl
pop
pop
or
cmp
scas
xchg
mov
inc
ret
xor
testl
fs
push
dec
push
lea
ret
aas
test
mov
add
ja
inc
js
in
pushl
inc
dec
andl
shll
push
push
or
adc
xlat
bound
fdivr
ja
call
out
push
test
bound
cmp
cmp
nop
and
jns
and
inc
sub
jle
add
ja
sub
mull
mov
push
hlt
decl
dec
push
dec
dec
insl
xchg
cmpl
inc
loope
decl
pop
inc
ds
js
punpcklbw
in
aas
and
mov
rcll
cwtl
xor
xor
jmp
cmp
outsl
push
sarl
dec
inc
xlat
xor
push
gs
inc
mov
cmc
gs
gs
pop
inc
push
es
lcall
dec
and
pop
pop
mov
xor
test
xlat
pop
jb
ret
inc
adc
lds
pushl
xchg
jnp
cltd
push
adc
xchg
mov
test
mov
sub
incb
inc
mov
push
loopne
push
push
push
lock
out
push
add
push
jnp
add
and
das
jns
push
incl
scas
add
jns
xchg
imul
add
mov
dec
xchg
fs
ljmp
adc
js
daa
mov
xchg
arpl
mov
out
jo
call
mov
push
mov
mov
loop
xchg
cmpsl
icebp
js
inc
repnz
xchg
pop
cmp
push
or
sbb
xorl
pop
xor
adc
test
cwtl
sbb
mov
insb
pop
inc
xchg
fidivrl
idiv
decl
test
add
fildll
jl
xchg
fiaddl
mov
sub
xchg
arpl
pop
mov
and
incl
pop
jg
dec
pop
push
mov
clc
fwait
jmp
push
inc
lcall
mov
pop
pop
and
das
push
das
bound
fcoml
das
cltd
cmpsl
fwait
cli
fwait
add
mov
ds
mull
and
push
and
pop
and
stos
les
xor
addl
jns
dec
jne
adcb
xlat
inc
xchg
push
outsl
mov
mov
cmpsl
push
pop
or
push
pop
addr16
xchg
out
test
cmc
jns
jp
cmpsb
mov
pushl
popa
dec
xor
leave
mov
lahf
push
clc
lea
pop
pop
popf
andl
mov
lcall
call
push
mov
cmovae
push
test
es
mov
add
pushl
sub
aad
xchg
mov
data16
mov
jg
cmp
mov
mov
sub
pop
stc
jb
in
decl
lcall
xchg
inc
dec
ss
sbbb
dec
test
test
mov
divl
iret
adcl
aaa
std
repnz
cmp
push
push
fucomp
popf
pop
mov
aam
cld
push
cwtl
hlt
jmp
dec
pop
pop
xor
call
inc
call
mov
xor
loop
out
mov
sbb
xor
fstpl
mov
out
cli
enter
jae
cltd
xchg
fcmovnb
mov
hlt
lods
mov
imul
lret
or
leave
mov
cmp
lret
mov
cld
ljmp
bound
and
insl
hlt
mov
pop
xor
xor
cli
icebp
push
iret
mov
lcall
jns
mov
push
aam
jle
mov
addr16
mov
inc
orb
xlat
xchg
lds
iret
sbb
jno
inc
cmc
sbb
push
xchg
dec
testl
jp
hlt
enter
pop
es
gs
and
shr
hlt
jp
adc
adc
fs
sahf
sub
mov
pushl
push
mov
mov
cmpsl
arpl
test
aaa
mov
aam
xchg
cmp
stos
outsl
fcoms
insl
or
cwtl
stc
cmp
add
add
mov
push
faddl
push
incb
rclb
inc
insb
xchg
or
cmp
test
sar
pushl
and
cmp
and
xor
aaa
or
or
leave
cmp
clc
jg
out
dec
push
ljmp
movsl
sarb
cmp
add
mov
loop
adc
jbe
mov
mov
pop
xor
sahf
jecxz
jl
arpl
lcall
push
jo
pop
mov
fldenv
fidivl
pop
mov
sub
call
cli
xchg
insl
sub
or
jnp
ljmp
jp
call
cmp
adcb
mov
nop
cmp
mov
or
insl
call
insb
notb
loopne
icebp
subb
and
sub
fwait
mov
and
mov
inc
jmp
and
jle
stc
sub
and
sbb
mov
mov
dec
addl
mov
mov
pop
xor
xor
cmp
mov
cltd
rcrb
ja
cmpsb
inc
arpl
clc
ljmp
hlt
adc
lcall
mov
xchg
scas
lret
jmp
aaa
mov
aam
pop
pop
jl
in
out
sbb
mov
imul
lcall
mov
loope
je
xlat
push
jle
pushf
sbb
scas
sub
decl
pusha
stos
jnp
mov
mov
sub
xor
shll
inc
fwait
mov
jg
jmp
xor
adcb
sbb
inc
mov
sub
xchg
xchg
and
add
mov
or
lods
mov
insb
rcll
adc
rep
cmpsl
inc
js
in
mov
call
inc
add
or
ljmp
cmpsl
mov
test
jns
mov
xchg
add
enter
js
inc
inc
repz
dec
jl
call
pop
lret
into
push
gs
mov
bound
mov
and
pop
jl
inc
xchg
push
add
and
xchg
xor
jmp
push
pushw
mov
mov
addb
mov
push
scas
cli
mov
fildl
test
ror
cmpsb
stos
mov
mov
pop
mov
aaa
dec
sarb
pop
add
lret
sbb
popf
enter
inc
or
lods
and
incl
or
and
mov
xchg
cmp
jmp
sbbl
cwtl
sbb
mov
cmc
xchg
fs
daa
stc
fldenv
push
lcall
cli
and
pop
or
pop
add
call
jo
iret
jns
mov
cld
mov
cld
data16
aad
cld
mov
pushf
mov
mov
mov
cld
adcb
jg
lea
int3
cli
lcall
lods
pop
or
decl
popa
add
fistpl
mov
lret
dec
dec
mov
push
sarl
lcall
imul
pop
movsb
inc
jmp
cltd
sbb
cmp
xchg
std
sub
aas
fxtract
int3
add
sbb
jmp
adc
fsubrs
iret
push
cwtl
pushl
jl
or
out
mov
jmp
jmp
repz
call
into
insb
cltd
popl
mov
inc
push
mov
lods
adc
int
in
fnsave
pop
shlb
test
incl
rclb
cmp
int
bound
les
fstps
shl
adc
mov
mov
ss
insl
push
aad
mov
add
push
mov
cmp
mov
mov
faddl
aas
and
int3
inc
jnp
or
pushl
inc
cmp
rol
adc
inc
fdiv
repz
icebp
cmpl
fadds
call
dec
call
data16
push
dec
js
pop
dec
mov
jmp
cmc
fwait
call
call
or
push
pop
enter
fisubrs
in
ja
mov
test
cmpsl
test
in
mov
out
clc
dec
out
jb
pusha
ss
int3
xchg
in
push
adc
or
hlt
push
dec
shlb
pusha
lcall
mov
sbb
add
out
mov
das
iret
push
mov
incl
sahf
cli
xchg
ret
insb
aad
aam
mov
jbe
fdiv
adc
pushl
sbb
pushf
xchg
rorb
sub
mov
dec
mov
and
in
jle
idiv
ffreep
mov
jle
sbb
add
xor
mov
lcall
test
xchg
or
adc
incl
js
sahf
push
jle
in
mov
and
incl
insl
out
lea
xor
repz
pop
clc
sahf
stc
fs
fdivrs
pop
lcall
or
call
dec
sbb
mov
push
loopne
adc
out
mov
jle
ljmp
ja
out
shlb
repz
das
or
ret
and
mov
std
adc
push
dec
mov
lcall
and
stos
and
movsb
pop
cltd
mov
jge
mov
and
test
and
dec
sar
call
scas
imul
cmp
fidivs
mov
cmp
les
arpl
scas
xchg
stos
sub
out
push
or
xchg
pop
arpl
pop
dec
cmc
pop
decl
sbbl
mov
imul
outsl
xchg
ljmp
sti
push
push
addb
xchg
lcall
lret
mov
cmp
int3
sbb
jb
fwait
and
andb
add
cmp
push
dec
testb
aas
pop
pushf
inc
fsubrl
and
aas
std
rcll
movsb
lods
push
jns
test
adc
and
arpl
call
dec
jmp
inc
lea
and
test
ja
pop
cmpsb
mov
insb
cmc
inc
fcomps
dec
hlt
std
dec
push
repnz
repnz
insb
sbb
mov
scas
cmpsl
xchg
hlt
in
into
pop
cmp
fdiv
fldenv
lahf
cmc
push
dec
fists
jne
jno
and
push
loopne,pt
pop
divl
adc
cmp
jns
mov
push
sbb
in
mov
mov
and
xchg
sbb
lfs
cmp
sbb
faddl
fcomip
jmp
mov
adc
lock
dec
cwtl
or
sub
jg
insb
cld
sub
movsb
test
mov
fidivs
or
mov
lds
cmp
pusha
je
ficoml
decl
cmpsl
xor
loop
shll
and
push
scas
arpl
jbe
stc
aam
mov
dec
pop
cmp
incl
xchg
insl
insl
cmp
pop
fwait
insb
mov
push
mov
outsl
clc
lcall
add
pop
mov
xlat
repnz
mov
jbe
pop
lret
fisttpll
in
out
xchg
jge
sbb
fnsave
sti
pop
icebp
pop
lret
mov
jmp
push
into
mov
jbe
adc
mov
faddp
jecxz
bound
inc
lret
sbb
pop
jecxz
lret
jp
outsb
xchg
div
enter
ljmp
out
fnstsw
popa
js
pcmpeqd
fbstp
dec
cld
push
mov
add
test
in
mov
and
inc
and
ljmp
push
mov
and
in
xchg
enter
jb
mov
or
ljmp
inc
xchg
call
daa
int3
pop
orb
pushf
push
stos
lods
push
shll
mov
jmp
stos
mov
aaa
shrb
adc
ret
add
fbld
cmp
enter
lea
push
stos
leave
xor
jae
imul
or
pop
jg
add
inc
jecxz
aaa
scas
push
add
jmp
push
xor
stos
push
outsb
lods
mov
mov
repz
js
imul
cmp
in
sub
dec
cmp
fidivrs
insb
hlt
mov
push
dec
das
std
push
orb
ss
ret
inc
add
bound
fisttps
adc
shlb
test
jecxz
mov
add
mov
and
add
in
rcll
jp
mov
fdivr
test
add
iret
nop
xor
les
movsb
ret
mov
stos
and
sbb
push
aam
repnz
push
jmp
push
adc
aas
in
hlt
rorb
scas
cli
cmp
mov
xchg
lods
dec
aam
rcl
mov
into
xchg
rcrb
jle
fisubs
or
pop
insl
pop
and
out
pop
jne
mov
pop
add
push
xor
lret
mov
mov
dec
repz
testb
shlb
mov
aad
push
lock
dec
mov
xchg
dec
mov
fstpl
es
lcall
gs
add
pusha
data16
ljmp
cli
push
movsl
and
push
lock
add
mov
lcall
or
enter
cmp
ficomps
shrl
stc
sub
cs
lcall
leave
sarb
and
test
movsl
mov
incl
stos
push
sbb
daa
fstps
imul
lcall
loopne
push
jmp
lret
mov
jle
loope
cwtl
test
int3
jmp
shll
jg
xchg
fptan
fnstcw
inc
mov
hlt
mov
ljmp
fldenv
insl
adc
fimuls
or
jp
fwait
mov
inc
test
ja
decb
mov
push
fisubrs
mov
ljmp
fstps
mov
cmc
fadd
and
mov
and
hlt
adc
sarb
nop
adcb
loopne
ljmp
xor
mov
mov
sahf
les
shrl
xor
cmpb
dec
and
ret
int
jno
arpl
mov
xchg
jno
cld
lcall
stos
sbb
and
popa
hlt
repnz
shl
adc
sbb
pushl
or
or
jnp
insl
add
sub
xchg
out
xchg
push
jmp
xor
adc
push
rep
nop
jno
dec
push
ss
inc
mov
xchg
lds
inc
sub
pushl
add
hlt
push
in
stos
nop
iret
mov
sbb
inc
enter
sub
adc
push
lods
sub
push
dec
xchg
inc
dec
push
mov
add
decl
and
pop
and
pop
push
add
js
fs
in
jne
inc
test
adc
call
push
and
cld
and
cmpsb
cmpb
lock
mov
shll
jb
jl
xchg
push
ja
xchg
push
xchg
xchg
xor
cmp
inc
jp,pn
dec
push
jb
mov
insb
dec
ljmp
push
xor
outsb
into
in
jo
movsl
lcall
sbb
mov
xor
xchg
mov
addr16
cmp
cmp
cwtl
hlt
dec
iret
cmp
cli
and
lcall
pop
aas
cltd
ret
mov
ja
sub
andb
sub
js
sbb
pop
nop
aas
mov
add
fcoms
sub
push
nop
dec
mov
and
mov
daa
iret
push
jg
add
mov
popf
sub
dec
mov
pusha
mov
dec
mov
sub
je
cmp
out
sub
hlt
mov
stos
jmp
popf
out
dec
int
jmp
xor
int
dec
icebp
pushf
movsb
mov
push
cmpsb
es
xor
add
xchg
push
jp
cmp
test
cmp
cltd
daa
lret
mov
addr16
add
jg
dec
jne
or
and
jne
sbb
roll
inc
inc
and
mov
adc
inc
mov
dec
xor
sub
or
add
lea
lret
test
add
lcall
fiaddl
adc
mov
mov
imul
pop
sbb
lcall
lods
cmp
mov
call
sub
ficoml
or
enter
adc
mov
lcall
mov
hlt
push
aad
es
out
loop
jns
sbb
cwtl
mov
cltd
inc
aaa
daa
call
push
mov
cs
ja
adc
jp
ret
cmp
xor
in
fs
or
cli
dec
mov
test
adc
lcall
int
mov
insl
cld
cmp
ljmp
or
mov
pop
pusha
push
mov
sub
or
cmp
pop
dec
es
push
shlb
popf
or
cmp
and
mov
push
clc
ljmp
ljmp
mov
aas
fs
push
mov
test
loop
adc
iret
jb
jne
add
add
test
outsl
popa
cltd
ljmp
les
out
popa
fcomip
pushl
fcomps
jmp
dec
jae
stos
adc
lock
pop
add
scas
pushw
pop
movsl
sub
rcll
mov
push
sub
rcrl
arpl
or
insb
pusha
cmp
mov
add
cmp
in
push
enter
es
mov
adc
add
mov
adc
fwait
sti
inc
or
mov
ljmp
push
fucomip
or
xchg
aas
xchg
fistl
mov
push
mov
sub
fcoml
in
xchg
mov
push
mov
lahf
or
int
mov
test
cmpsb
out
jge
dec
mov
xlat
dec
das
rorb
pop
jmp
movsl
jns
mov
aad
ljmp
push
ja
inc
jbe
xor
push
xchg
imul
add
repz
xchg
sub
mulb
dec
push
push
xor
lcall
out
sbb
jb
ds
int3
mov
cmp
pop
call
int
adc
shlb
pop
aas
out
mov
inc
js
cld
lcall
lret
in
les
adc
xchg
in
sbb
dec
inc
cltd
push
cld
inc
push
jbe
pop
push
xchg
les
icebp
sbb
sub
fwait
or
insl
bound
inc
insb
cmp
int
mov
push
in
repz
fildl
loope
inc
xchg
xchg
cli
cmc
scas
xor
pop
dec
jecxz
sub
daa
xchg
jge
mov
xchg
jg
stc
adc
pop
cmpsl
inc
adc
and
jmp
sub
mov
jg
stc
test
cli
cmpl
in
inc
int
dec
jne
mov
jmp
and
mov
push
jge
or
jnp
imul
movsl
xchg
fs
and
call
hlt
xor
repnz
and
lcall
cltd
sub
iret
cmp
lods
mov
xorb
scas
cli
pushl
fs
mov
xor
inc
mov
sbb
sub
gs
shl
and
add
popf
mov
xor
and
fildll
lcall
dec
fwait
or
imul
pushl
rol
cmpsb
add
adc
xor
shll
sbb
xor
sahf
mov
aad
xor
xor
cli
or
cmpsl
rolb
in
rcrb
xor
lcall
push
sarb
daa
sub
mov
nop
pop
jno
add
out
lods
mull
sbb
decl
sbb
pop
and
mov
push
addb
and
inc
popl
jb
mov
mov
call
push
xchg
mov
loope
std
mov
jne
inc
test
mov
xchg
call
mov
cmpl
ss
pop
xor
jg
xor
mov
pop
jl
sar
jmp
mov
mov
inc
stos
mov
adc
cmp
adc
pushl
inc
pusha
mov
pop
mov
pop
push
daa
pop
xchg
out
sarb
test
cmp
in
adc
cwtl
xor
or
inc
mov
fdivrs
sti
add
pop
cld
add
add
and
push
lcall
decl
pop
adc
sbb
cmp
and
inc
scas
mov
pop
in
mov
ret
sysret
std
das
xor
adc
movsl
lcall
sub
sub
mov
lds
ret
jmp
sub
mov
ret
or
or
scas
rcrb
or
aam
inc
fisttpl
lcall
inc
shlb
mov
and
pop
insb
leave
test
jb
sub
cwtl
les
xchg
bound
out
inc
xor
mov
jecxz
dec
xchg
mov
pop
mov
jmp
and
fwait
aaa
pop
dec
sbb
fisttpl
push
cld
lcall
xchg
mov
mov
icebp
xor
xorl
movsl
lret
inc
add
inc
dec
mov
sbb
lcall
sub
jg
sub
pop
adc
xchg
ss
xchg
adc
movsb
imul
xor
arpl
mov
add
cltd
sar
inc
cwtl
loop
movsl
rcrb
push
repnz
and
mov
insb
mov
mov
inc
fs
lock
outsl
jo
add
jb
fs
and
xor
ss
call
adc
mov
lret
mov
mov
imul
and
mov
inc
jnp
or
push
push
jmp
sbb
pushf
push
lret
push
push
imul
movsl
xor
push
mov
out
icebp
adc
mov
rorl
pop
int3
mov
xchg
cmp
jmp
ret
cmc
in
pop
or
pushl
add
dec
fcomip
mov
test
add
test
xor
mov
or
adc
lret
xchg
pop
xchg
sub
aam
mov
jl,pt
cmp
incl
adc
xchg
sub
jae
or
fs
lret
pushf
lods
inc
push
in
icebp
jmp
call
mov
rorl
nop
cld
aaa
nop
fwait
pushl
lret
or
cltd
xchg
fnstsw
loopne
inc
jbe
jg
lcall
add
cmp
inc
cwtl
sub
mov
aam
fiadds
lock
incl
cmp
lret
lret
cmp
adc
sbb
cmp
mov
sub
incl
js
adc
inc
cmp
sub
clc
inc
or
mov
lret
roll
rorl
enter
pop
and
mov
push
cltd
xor
mov
dec
dec
dec
popf
aas
cld
inc
sub
int3
mov
in
iret
fs
loopne
and
adc
aam
mov
dec
and
dec
int3
rorl
cmp
dec
jg
cmpsl
mov
dec
fidivs
mov
mov
stc
mov
ljmp
cli
les
and
imul
call
pop
cli
movsl
jae
test
mov
or
rcll
mov
incl
pop
icebp
roll
sbb
mov
leave
add
aam
lret
and
xchg
adc
mov
pop
push
cli
jmp
dec
shlb
lret
fdivrl
lcall
loopne
mov
or
and
xchg
adc
sbb
sub
incl
int3
pop
stos
pop
popf
push
in
mov
xchg
enter
cmpl
pushl
sbb
and
insl
leave
cmp
xor
stos
jae
push
cmp
mov
call
sub
lods
jp
je
push
or
or
and
clc
or
xlat
in
xor
push
pop
sbb
aad
xor
rolb
rcrb
lcall
shll
mov
cmp
sub
ds
cmp
mov
jmp
rolb
rolb
mov
mov
pop
sti
dec
mov
shll
ret
mov
cmp
pop
cmp
stos
dec
jge
loope
mov
cmp
leave
and
pop
lods
pop
out
arpl
xchg
push
fsts
nop
pushl
fld
or
mov
or
add
mov
sub
shlb
add
js
icebp
jg
add
mov
xor
dec
sub
xor
decl
push
sub
shrb
aam
xchg
ss
add
pop
adc
out
add
adc
fiaddl
mov
decl
popf
xor
jecxz
idiv
mov
scas
push
into
enter
push
xlat
das
insl
inc
cmpsl
xorb
mov
andb
fcos
add
adcl
mov
sbb
pop
leave
mov
inc
dec
pop
call
dec
adcl
adc
xchg
pop
xor
dec
push
maskmovq
negl
fadds
pushl
lret
jne
fcompl
jmp
in
fdivr
fs
mov
scas
orl
and
push
or
jbe
mov
jmp
add
stc
sub
push
stos
fcomp
stc
mov
in
int3
cltd
mov
je,pn
sub
push
mov
das
pop
sub
sbb
pop
dec
dec
es
movb
push
arpl
pop
push
lea
mov
ljmp
test
pop
add
inc
int3
fwait
or
add
mov
test
incl
or
xchg
sbb
adc
es
mov
cmpsl
hlt
movsl
fdivrl
in
add
in
cmp
cmp
sbb
clc
xchg
xchg
loopne
fbld
call
adc
push
repnz
push
add
shlb
in
inc
dec
and
andl
or
xchg
outsb
cmp
push
sub
sub
add
test
decl
cmpb
cmp
xor
cmp
stos
adcb
add
xchg
lcall
or
scas
cmp
es
sub
aas
adc
shll
mov
cmp
loopne
arpl
jmp
cmp
mov
lods
cmp
int3
add
mov
dec
add
subl
jg
jecxz
or
push
lds
stos
push
mov
add
mov
adc
lcall
sbb
pusha
pop
adc
inc
in
add
ljmp
or
add
and
fsubrl
xor
jle
out
cld
mov
pop
mov
rclb
pop
icebp
scas
pop
push
jle
pop
scas
loopne
pop
bound
xchg
pop
js
int
push
flds
or
mov
or
stos
add
orb
out
out
cmpsl
mov
push
rsm
pop
inc
test
mov
shll
pushl
cmp
mov
jns
pop
dec
mov
ror
lods
mov
adcb
lret
xor
sbb
jl
out
push
decl
ljmp
lds
inc
adc
call
mov
and
dec
cmp
popf
fcompl
push
dec
cli
cli
cwtl
dec
je
ljmp
imul
sbb
lds
add
pushl
cli
in
jle
into
add
imul
xchg
jo
negl
out
mov
lea
xchg
mov
adc
lods
incl
and
fnstsw
xchg
outsl
int
dec
xchg
xchg
icebp
adc
pop
out
lds
lock
sarl
sub
jle
ss
out
push
andb
sub
cmp
iret
inc
add
xchg
ljmp
push
ficompl
inc
mov
dec
sahf
push
das
jnp
push
out
jnp
pop
sub
jl
or
lods
fstps
faddp
pushl
fldenv
shrb
shl
into
lret
int
rcrb
jb
jg
in
cmp
data16
add
or
in
xchg
pusha
inc
sahf
in
xorb
imul
cmp
mov
sbbb
sahf
cwtl
aaa
clc
jg
dec
sub
xor
in
jbe
lds
inc
in
xchg
xor
inc
lock
push
inc
xorl
aaa
sbb
or
jne
dec
jmp
dec
cmp
repz
incl
push
and
dec
jo
push
xchg
or
or
sub
subl
shr
inc
xor
out
sub
cmp
mov
cmp
or
jne
or
inc
scas
fsubr
mov
and
enter
sub
inc
fnstcw
pop
shr
jl
fxch
pop
pushl
lret
cmp
cvtps2pd
sbb
out
test
xchg
rorb
addr16
jmp
pusha
xor
inc
cmp
mov
sub
dec
rcrl
mov
in
pop
add
mov
scas
in
ja
lcall
jno
push
push
and
cs
pusha
repnz
test
cmp
clc
out
mov
lock
mov
sub
ss
mov
add
addl
js
jbe
div
pop
jbe
push
iret
sbb
push
decl
pusha
xor
xchg
repnz
and
xor
enter
imul
lahf
stc
dec
pop
pop
sbb
inc
int
or
xor
bound
and
clc
or
fadd
sub
rcrl
aad
loopne
lahf
stos
out
in
fsubl
cmp
std
lcall
addb
xor
jbe
sahf
inc
fiadds
cltd
ffree
fiaddl
int3
mov
call
outsb
pop
ret
insl
sub
xor
push
in
add
sub
or
mov
inc
sbb
ds
add
mov
test
mov
fwait
mov
lods
or
fucomip
inc
mov
mov
cs
dec
pop
cmc
mov
test
out
shrl
loopne
movsb
dec
lahf
imul
hlt
fadd
popf
subl
mov
pop
jle
push
popa
idivb
sub
decl
and
clc
inc
aam
mov
push
pop
rolb
ret
incl
int3
mov
and
pop
out
lret
movl
xchg
inc
les
incl
adc
jg
icebp
add
sbb
add
cmpps
mov
adc
mov
ret
jno
mov
jbe
lcall
imul
jb
jns
and
mov
pop
lcall
inc
mov
dec
lock
jg
push
dec
dec
xchg
sub
add
xor
dec
mov
mov
pop
mov
lret
mov
adc
pushl
es
ret
push
xchg
stc
adc
mov
and
push
or
incl
pop
lock
xor
sub
stos
inc
sti
scas
push
sbb
fstpt
js
decl
or
xor
push
mov
pusha
popa
in
fcoms
or
inc
jg
inc
cld
mov
xor
dec
daa
sub
mov
add
add
xchg
sahf
push
and
mov
jecxz
popf
pop
inc
call
les
jl
jno
shll
decl
push
fwait
dec
shrl
enter
lahf
movsb
mov
movb
jg
std
fldenv
fwait
adc
mov
mov
out
add
loopne
sbb
jg
jae
loopne
add
hlt
xchg
rorl
cmp
stc
in
call
pop
add
add
in
sbb
cmpsl
ficompl
add
mov
or
test
jl
arpl
cs
rcll
movsb
dec
inc
adc
adc
rcll
dec
in
adc
call
dec
push
xchg
nop
or
xchg
pusha
dec
scas
adc
push
rorb
push
test
add
pop
push
add
inc
push
add
pop
inc
nop
cmc
xchg
push
ds
incl
lcall
add
mov
mov
or
out
jno
cmpsl
mov
fwait
decl
sub
xchg
pop
dec
mov
sbb
pushf
push
xor
mov
sub
sbb
mov
ss
outsl
jl
pop
addb
xchg
stos
pop
les
call
stos
mov
xor
xchg
pushf
adc
rcrb
enter
add
push
rclb
call
lods
ja
in
popa
push
jns
cld
shr
pop
rcrl
fnsave
call
incl
fmulp
out
addb
add
adc
popa
jle
ja
outsl
bound
push
push
or
andb
mov
int3
mov
insl
jmp
mov
arpl
sub
inc
cmp
ds
push
dec
inc
cli
les
gs
push
mov
ficoml
adc
ret
xchg
cmp
data16
fnstenv
jg
test
dec
dec
jb
add
int3
dec
cmpsl
add
xchg
cmp
and
scas
push
outsb
scas
rcrb
and
stos
mov
stos
xchg
adc
push
pushl
fsubrs
lds
push
es
lcall
js
loop
jg
push
inc
test
lods
or
sahf
fs
jp
outsb
outsb
into
in
sbb
xchg
mov
cmpsl
in
jnp
shrb
adc
jo
out
adc
out
mov
sub
mov
fcmovu
cmp
xor
insb
cwtl
xlat
outsb
xor
repnz
lods
xor
cld
cmc
sti
pop
pop
mov
cld
rorb
jbe
lahf
or
data16
sbb
fistpll
dec
push
repnz
sahf
call
dec
dec
adc
sbb
andl
pushl
sbb
add
int
xchg
xchg
push
xchg
imul
inc
and
inc
adc
adc
pushf
and
mov
cltd
scas
outsl
nop
hlt
call
mov
ja
mov
sub
jmp
fcmovbe
xchg
pop
cmp
mov
mov
adc
imul
cmp
js
pop
lret
and
cs
xorl
sub
xor
or
jno
into
pop
into
mov
aas
mov
inc
cmpsl
mov
aam
push
adcb
fdivrl
and
mov
mov
push
loopne
sti
incl
lcall
lret
mov
push
adc
jmp
adc
sbb
iret
mov
mov
or
jp
sbb
pusha
xchg
outsl
adc
mov
lcall
mov
or
repz
jg
idivl
or
aas
sti
cltd
inc
adc
sub
or
lcall
jle
movsl
mov
pop
rorb
lea
pop
mov
subb
jo
fcomip
mov
ss
xchg
xchg
jne
pushf
das
sbb
fimull
daa
push
or
pushl
adc
loope
mov
inc
nop
add
push
dec
cmpsl
or
cltd
es
mov
sar
sbb
shlb
lahf
and
cmpsl
rol
mov
jg
xchg
popf
jnp
adc
xor
mov
inc
pop
cmp
or
lret
enter
mov
xchg
lahf
jne
mov
add
cwtl
rcr
inc
mov
imul
xchg
out
dec
sub
jno
dec
fmul
aaa
cld
call
jbe
add
stos
les
enter
popa
dec
adc
adc
aaa
enter
sbb
sbb
mov
inc
xorb
test
repnz
add
ljmp
dec
js
arpl
xor
orb
call
les
cmp
fisubs
inc
les
mov
jmp
incl
enter
push
imul
pop
mov
fistpll
insb
int3
sub
lods
jmp
lcall
add
xor
or
jmp
int3
fsubs
movsl
adc
subl
and
lods
inc
imul
fldcw
jmp
sbb
jmp
movsl
andb
sbb
cmp
mov
add
mov
xor
cmp
icebp
jno
test
addb
sar
or
mov
repz
adc
push
test
mov
push
jmp
lcall
inc
dec
gs
cli
jg
dec
imul
dec
std
mov
call
rcrl
ljmp
sub
adc
mov
inc
fisubs
cmpsl
xor
ret
push
fdiv
rcrb
ficompl
xlat
rorb
jbe
xchg
nop
pop
push
mov
in
and
nop
dec
push
mov
jnp
or
pop
xlat
subb
fsts
push
and
loopne
jge
bound
ficoms
fisubrs
cmp
int3
popa
cli
and
jmp
inc
lock
dec
push
mov
lcall
and
sbb
int3
bound
sbb
mov
loopne
in
mov
jo
jmp
pop
cltd
enter
sbbb
add
pop
xchg
xor
push
mov
xchg
fs
ret
mov
sahf
push
outsb
ror
cmp
in
aaa
test
ror
pusha
es
loope
push
adc
push
and
repnz
or
xor
add
push
xchg
dec
call
arpl
pop
xchg
mov
adc
dec
and
shlb
mov
sbb
pop
pop
mov
dec
adc
lahf
cmp
add
cli
outsl
mov
xchg
jecxz
push
and
jl
in
mov
xchg
add
dec
cmp
fisttpl
jmp
add
push
mov
add
cmp
xor
sahf
or
imul
ljmp
ss
mov
call
mov
and
cwtl
incl
sbb
push
int
ljmp
repz
add
enter
lock
cmp
mov
pop
dec
jmp
jns
and
xor
jl
mov
lcall
or
lods
push
sbb
popf
xchg
hlt
mov
incl
mov
sti
jmp
out
stos
sub
shlb
push
ret
lret
lcall
push
cmpl
push
scas
in
push
mov
call
sbb
xor
xchg
aaa
cmc
dec
push
cwtl
fcoms
cld
test
fdivs
and
jg
leave
insl
out
lret
sti
cmp
sahf
dec
and
mov
xor
push
stos
ljmp
push
mov
js
pushf
xor
cwtl
push
xchg
mov
pushl
in
xchg
lret
xchg
in
sbb
icebp
push
cmpsb
test
fldl
stos
nop
add
popa
add
fcmovu
adc
idivb
call
mov
dec
push
sbb
out
int
xchg
subb
mov
jmp
add
push
in
clc
fucomi
repnz
pop
test
fcmovne
call
inc
repz
cld
lcall
cmp
push
jg
rorb
shll
or
push
les
jmp
flds
imul
push
cmp
pop
loopne
or
lods
rcrb
in
enter
call
sbb
test
inc
xorb
sub
push
mov
rol
lcall
and
jo
or
mov
inc
call
aad
test
int3
or
adc
out
mov
jo
call
inc
ljmp
fs
fidivrs
faddp
mov
repnz
push
adc
clc
test
sbb
and
xor
xor
xchg
fisttpll
jg
je
or
in
mov
mov
push
jl
cwtl
jns
push
incl
pusha
enter
mov
arpl
cmpsl
mov
movsb
and
adc
pop
cmc
lcall
dec
stos
lds
adc
movsb
mov
lcall
pop
sub
stc
cltd
bound
mov
pop
sub
pop
adc
inc
adc
inc
lcall
add
xlat
push
inc
pop
pop
adcb
cld
lcall
sarl
lahf
mov
ljmp
popa
dec
lret
pop
dec
mov
jbe
and
lea
pop
jmp
outsb
push
movsb
add
or
roll
adc
xchg
shlb
pop
cwtl
inc
add
cmp
push
adc
mov
fmuls
ss
jg
jmp
xchg
popa
jae
shll
push
loop
push
xor
pop
vunpckhps
icebp
call
repnz
insl
inc
xor
subl
fsubp
movsl
popa
shll
popa
xchg
ljmp
and
mov
mov
jno
scas
push
push
pusha
std
test
jmp
shll
push
leave
and
mov
lcall
fsts
jg
pop
lret
stc
pop
je
or
pop
nop
or
pop
mov
sbb
xchg
loop
insl
xlat
dec
lock
loope
xor
ss
jmp
push
ficoml
es
inc
mov
cmp
inc
stos
push
aam
dec
pop
jle
vcvtps2dq
idiv
lock
add
jno
inc
fadds
add
mov
pushl
fcmovu
lods
mov
es
icebp
mov
decl
cmp
adc
fnstsw
inc
mov
and
lcall
fisttps
push
and
or
cli
mov
int
pop
cmp
push
bound
jmp
movsb
adc
ja
inc
jb
push
ud0
test
test
fmuls
and
jae
in
sar
in
push
or
or
iret
xor
sbb
pop
je
and
push
call
dec
sbb
xchg
inc
and
and
nop
push
mov
push
sahf
mov
test
push
pop
shrl
data16
pop
or
xchg
xchg
aam
insl
pop
leave
rcrb
and
into
adc
dec
outsb
fstpl
sub
inc
hlt
lds
inc
pop
je
dec
loopne
test
shlb
scas
and
dec
lcall
adcl
push
sub
lcall
inc
in
xchg
lds
sub
hlt
aam
les
aaa
mov
dec
sbb
filds
cmpsb
lcall
cmp
fstpl
ss
fistpl
mov
rolb
popf
in
lret
popa
xchg
pop
and
push
jg
ljmp
addb
and
push
out
jge
push
inc
movsbl
adc
test
imul
pusha
xchg
test
and
and
mov
pop
mov
cltd
pop
icebp
pop
fldenv
cmp
cmpsb
or
stos
push
mov
inc
mov
inc
mov
adc
call
stos
push
push
add
bound
pop
mov
mov
rcrl
pop
xchg
xchg
push
jmp
mov
mov
mov
cmp
push
cli
cltd
pusha
xor
mov
nop
mov
pushl
jne
pop
inc
add
scas
push
mov
mov
cmp
xchg
adc
mov
pop
cwtl
add
mov
dec
aad
xchg
xchg
pushf
imul
sbb
roll
dec
loope
sbb
aaa
ljmp
add
incl
lcall
push
push
nop
arpl
mov
adc
and
rcll
sub
fcompl
pop
lock
sbb
adc
adc
mov
inc
sbb
dec
call
decl
add
sbb
insb
ret
or
cli
sub
sarb
scas
push
mov
dec
loope
xchg
and
or
enter
decl
lock
sahf
and
cld
mov
adc
frstor
xchg
cmpsl
loop,pt
aaa
adc
jmp
and
and
stos
xchg
sub
popa
nop
daa
fisubs
aad
es
icebp
pop
cmc
fst
sub
add
fcomps
sahf
shrl
ss
std
dec
cmp
mov
xor
sbb
fcomip
call
in
push
fwait
dec
in
or
mov
test
and
movsl
dec
or
aam
or
mov
add
imul
mov
popl
imul
mov
fadds
nop
test
jle
fcmovnb
data16
jns
dec
pop
js
sub
xchg
add
add
sub
fwait
je
das
fsubrs
adc
lret
add
ljmp
addl
ljmp
in
es
jmp
rorb
pop
push
xor
data16
lods
xchg
jne
test
rcrb
shlb
sub
jmp
out
cmp
mov
scas
jmp
pop
movsl
ljmp
test
cmp
sub
shlb
aad
push
cmp
jno
xlat
cmpsl
xor
mov
pop
jge
mov
adc
cmpb
cli
fimull
push
push
dec
lock
incl
rorl
negb
outsb
ss
or
sbb
cmc
filds
adcb
insl
test
jo
ljmp
push
or
pop
cld
and
frstor
mov
inc
sbb
fisttpl
stos
arpl
and
cmpsl
jo
fwait
adc
mov
mov
scas
test
call
jmp
loopne
lcall
sbb
inc
jo
dec
push
lret
jecxz
leave
in
ss
sahf
pop
or
mov
fsubl
xchg
sahf
push
push
ljmp
clc
sub
hlt
push
add
dec
push
lods
pop
sbb
fstpt
xchg
call
sahf
or
push
xchg
ljmp
bnd
pop
xor
les
clc
fcomip
call
sub
push
and
leave
test
xchg
cmc
outsl
push
add
shll
and
lcall
add
push
addb
rorb
or
xchg
sub
lock
pop
jg
call
movsl
shlb
pop
mov
add
push
push
mov
push
or
mov
out
popf
xlat
xor
ljmp
push
out
mov
xchg
ljmp
push
je
imul
push
es
dec
sub
lods
sub
mov
adc
pop
cmp
jno
mov
fsub
lret
push
cmp
hlt
ja
jo
icebp
adc
mov
pop
scas
jg
icebp
xchg
adc
adc
popl
mov
cmpb
cmpsb
daa
das
dec
mov
mov
test
stc
jmp
jmp
cmpsb
jne
push
mov
and
scas
jo
enter
inc
xchg
add
bound
pop
push
ljmp
shld
adc
xchg
lods
lret
fldl
jmp
jle
mov
fistpl
push
pop
xor
sbb
jle
mov
sub
pop
pop
or
mov
hlt
and
cwtl
pop
cmp
call
and
push
mov
rorl
and
xchg
or
mov
mov
inc
hlt
cmp
mov
jmp
out
addr16
pop
xchg
imul
and
mov
jp
jmp
mov
add
pop
mov
out
adc
les
out
or
push
jl
dec
repz
or
cmc
incl
faddl
jp
lret
dec
sbb
pushf
xchg
xchg
lock
fisttps
shr
cmp
xchg
or
sahf
ret
mov
mov
bound
jbe,pt
xor
decl
ss
mov
mov
fsubrp
das
ret
jb
mov
add
jo
add
lcall
aaa
mov
es
mov
aad
pop
jmp
jbe
pop
pop
iret
mov
pop
mov
cmpsb
outsl
js
ss
test
iret
cmp
pusha
outsb
dec
pushf
or
push
dec
out
xchg
testl
pushl
and
or
sub
mov
fildl
sbb
inc
mov
call
movsb
xchg
jb
addr16
dec
mov
fimuls
mov
rcrl
sbb
decl
test
mov
xor
xchg
insl
pop
icebp
sub
sahf
jg
sbb
lea
jns
pop
and
sub
or
lock
push
mov
es
in
adc
imul
call
xor
sub
jne
mov
lahf
pop
cmp
jbe
mov
dec
jge
jge
sub
out
push
int
testl
aad
mov
sar
ljmp
ficompl
mov
pop
and
inc
call
mov
mov
jnp
lcall
add
imulb
jecxz
add
pmuludq
divl
popf
dec
cltd
jecxz
decl
decl
lods
in
outsb
inc
je
loope
es
xor
mov
pminsw
decl
pop
mov
insb
push
xchg
fsubrp
or
je
insb
dec
inc
cli
testl
hlt
ret
in
xchg
fldl
push
push
sbb
js
cwtl
inc
xorl
mov
mov
dec
push
mov
cmpsl
sub
pop
add
xor
push
sarb
and
out
out
sbb
add
ljmp
inc
push
pop
cmpsb
lahf
enter
rcll
ljmp
clc
aam
fisubl
mov
or
push
mov
mov
add
inc
ss
lret
js
cmpsb
ss
push
cwtl
xor
mov
outsb
sbb
mov
jnp
cwtl
roll
cs
incl
hlt
push
push
test
mull
push
ljmp
lods
cmpsb
ljmp
mov
nop
gs
cs
push
push
push
xchg
push
xbegin
cmovnp
inc
out
cli
std
sbb
jnp
adc
mov
std
push
cmp
jp
push
decl
pusha
repnz
inc
jl
or
in
inc
push
mov
xor
xor
and
jg
sub
lods
cmp
aad
jle
jp
test
fnsave
jns
xor
fdivl
lcall
lret
lret
mov
push
add
adc
fisubrs
negb
in
or
jno
jmp
inc
clc
mov
bound
push
add
orb
mov
test
cs
call
ret
pop
xor
or
xchg
adc
add
inc
dec
cmc
mov
push
dec
jo
push
cmpsb
addb
mov
mov
in
xchg
imul
add
mov
sbb
test
xchg
call
les
js
arpl
mov
add
cmp
xchg
cs
jmp
lret
popa
je
xor
imul
into
cwtl
cmp
stc
and
mov
and
adcb
test
or
repz
dec
sbb
or
sub
call
pop
mov
add
sbb
addb
clc
jg
fistpl
fidivl
jns
mov
call
cli
or
mov
jnp
xor
call
mov
xchg
pop
pop
push
mov
mov
test
lcall
lock
decl
enter
bound
sbb
call
sub
jo
pushf
gs
add
mov
out
mov
fsub
movb
push
orb
pop
mov
jg
mov
jo
cld
sbb
or
cmp
and
inc
or
fimuls
dec
mov
cmp
inc
mov
popa
cvtpi2ps
xor
subl
add
mov
jmp
div
or
mov
ret
mov
sbb
or
sbb
icebp
and
mov
add
outsb
and
dec
mov
or
sar
ljmp
add
sub
sbb
xchg
inc
stos
test
push
sub
cmpsb
lcall
cld
mov
bound
cs
test
add
in
cmp
hlt
push
dec
sarb
jmp
sbb
dec
inc
mov
aam
dec
push
lds
sbb
leave
inc
rcrl
mov
xor
jl
or
mov
xchg
push
lock
xchg
bound
rclb
jb
and
add
jle
jg
sub
out
xchg
into
pop
jno
mov
lock
pusha
ret
lds
lock
frstor
incl
inc
cmp
cli
orb
pop
fs
jge
add
add
cmp
jo
add
dec
cmpb
rolb
cwtl
cmc
outsb
pop
addr16
sub
call
xchg
es
inc
mov
inc
adc
lea
push
popa
test
push
dec
xor
bound
enter
rcrb
push
inc
lret
sahf
xor
sub
mov
sub
push
xchg
or
mov
and
decl
stos
dec
les
mov
nop
push
jmp
inc
jg
cltd
dec
dec
xor
leave
movsb
sbb
mov
ss
jmp
lret
mov
je
jnp
int
push
xchg
mov
or
push
decb
mov
push
hlt
call
jae
es
add
xor
enter
push
inc
jg
mov
cmp
push
lock
mov
and
cld
sahf
ffree
or
mov
push
mov
mov
fdivrl
jae
stc
jecxz
repnz
out
cmp
ljmp
lret
jo
or
fldl
idivb
jbe
and
sbb
out
push
xchg
push
inc
test
out
mov
mov
mov
sub
imul
push
test
loope
xchg
push
incl
outsb
and
repz
iret
xchg
ljmp
mov
ss
test
ss
into
je
push
mov
xor
fsubrl
mov
aam
jp
and
movsb
xor
pop
lret
fcomip
add
imul
int3
orb
icebp
dec
or
push
lds
aaa
les
test
pop
xchg
stos
enter
and
pusha
cwtl
ljmp
sub
inc
or
jo
cmp
rolb
xorb
add
lcall
addl
nop
pop
dec
lret
cmp
mov
out
inc
cmp
pop
pop
cmp
lcall
pop
fadd
inc
insb
adcb
jmp
push
add
icebp
outsb
ja
or
test
in
mov
jg
xor
mov
ss
mov
mov
pop
sub
aad
sub
inc
push
lcall
fsts
inc
pushl
pop
sub
dec
mov
stos
test
push
push
cmp
aas
scas
in
addr16
dec
xchg
add
es
clc
ret
xchg
cmp
test
adc
stos
decl
mov
push
aad
es
push
mov
sbb
incl
jo
pop
adc
imul
in
data16
stos
int3
fsubrp
repnz
insl
outsb
les
mov
repnz
das
mov
aaa
fwait
mov
pop
aaa
jl
push
enter
loopne
or
add
decl
or
rclb
pop
stc
mov
sti
and
xchg
test
lea
or
incl
pop
mov
icebp
jb
adc
push
mov
inc
adc
mov
xchg
xorb
lock
cli
jno
jle
inc
push
xchg
call
fnstenv
dec
sbb
add
or
sahf
insl
bound
add
inc
or
add
andl
stos
jb
and
pushl
in
lods
jge
pop
cltd
sub
push
xor
test
mov
stos
add
or
pop
stos
mov
leave
mov
nop
mov
dec
imul
xor
call
loopne
imul
mov
ja
enter
mov
popa
ljmp
jae
mov
popa
adc
outsb
dec
jbe
loopne
lods
cmp
mov
add
movsb
add
push
mov
jo
jp
sbb
test
pop
cmp
cmp
dec
shll
jl
inc
loopne
cmp
scas
hlt
sub
mov
jmp
subb
pop
jmp
push
inc
xor
or
jae
ljmp
ror
loope
loop
sub
lock
popf
dec
lcall
lret
or
cld
icebp
les
cwtl
rclb
filds
ljmp
addl
loop
xor
nop
ljmp
xchg
cli
lret
iret
cmp
nop
addr16
push
dec
call
lock
xchg
push
xchg
xchg
pop
psrlq
inc
lea
add
cmp
add
push
xor
pop
imul
sbb
das
das
sub
cld
stos
scas
mov
shll
jl
mov
ljmp
sub
popf
test
mov
pop
and
xchg
jmp
mov
les
js
sbb
pop
sbb
and
xchg
vmread
mov
mov
incl
or
and
push
add
sbb
pushl
ljmp
decb
adc
popf
in
cmp
call
inc
push
ret
call
jge
xlat
add
lock
pop
mov
insb
xor
jg
cld
push
and
lret
jmp
sub
add
xor
jg
ss
das
mov
xchg
push
lcall
mov
sbb
out
sti
xchg
cmpsb
rcrb
lcall
orb
fwait
and
xchg
push
int3
aad
xchg
mov
adc
lret
sbb
daa
pusha
fwait
rcrl
pop
fidivs
mov
incl
jno
jb
je
adc
repnz
outsl
inc
ss
or
sub
jno
push
adc
ret
adc
call
pop
cmp
je
mov
sbb
out
add
pop
pusha
push
icebp
mov
movsb
or
rol
mov
push
iret
aad
pushl
inc
mov
lods
inc
mov
popf
push
and
out
sahf
xor
das
adc
pushl
pusha
push
push
xor
inc
sbb
mov
insl
mov
out
xchg
int
mov
loop
rclb
or
out
mov
or
jno
lcall
das
aad
push
xlat
mov
bound
mov
out
dec
sub
lahf
or
sub
sbb
jg
int3
or
mov
imul
insb
and
push
mov
vrcpss
adc
lock
scas
call
fisubrs
movsb
xchg
test
mov
add
lods
aaa
mov
lcall
aas
ret
into
push
fstpl
dec
sbb
cmp
popa
mov
sarl
stos
cmp
jmp
lock
xlat
out
mov
cmp
movsb
and
adc
lds
inc
adc
aaa
fcomi
ror
mov
icebp
pushf
out
pop
out
adc
sarb
and
mov
or
push
mov
aam
xchg
dec
imul
je
imul
pushl
or
xorb
add
push
xor
nop
test
pusha
test
fcmove
ljmp
pop
orb
lods
movsl
loopne
ret
in
or
lock
test
push
outsb
mov
sub
sub
xchg
in
xchg
or
inc
ret
dec
es
pop
sub
outsb
mov
dec
add
push
and
dec
int
mov
mov
sub
fidivrs
mov
jb
repnz
pop
cld
push
inc
push
cs
xchg
mov
add
dec
cwtl
out
jae
pcmpeqd
les
int3
pusha
mov
pushl
and
sbb
mov
pusha
inc
mov
jbe
sub
scas
divl
jo
cmpsl
inc
pushf
jmp
mov
or
jmp
sub
sub
stc
push
or
mov
aam
int
icebp
mov
inc
out
and
in
sub
andb
dec
cmpsb
cmp
adc
add
hlt
pushl
test
test
inc
jmp
sub
orb
ljmp
dec
sbb
mov
xlat
sub
mov
in
outsb
and
inc
outsl
push
test
incl
push
and
add
and
adc
add
orb
pushl
push
ljmp
pop
sub
out
ljmp
mov
cmc
xchg
rorb
loopne
mov
hlt
or
mov
lahf
and
mov
mov
mov
mov
dec
push
cs
stc
sbb
test
call
movl
decl
loopne
and
in
and
sub
or
ljmp
mov
jo
pop
xchg
addb
aam
dec
xchg
out
incl
inc
adc
xor
test
sub
pushl
cmp
push
in
lret
fldenv
in
cmp
shrl
bound
idiv
add
add
inc
jmp
lds
add
dec
push
fdivrp
pop
icebp
or
mov
fmull
and
aam
add
pop
inc
incl
add
jecxz
push
and
mov
mov
in
fcmovb
sbb
aas
push
stc
decl
add
pop
fmul
pop
into
gs
mov
pop
xchg
inc
js
inc
mov
xor
mov
in
fcoms
sub
or
xor
cli
lcall
dec
cmpsb
imul
adc
sub
mov
sub
pop
popa
or
test
incl
and
out
or
loop,pn
jmp
and
dec
xchg
adc
incb
jg
jo
out
sqrtps
rcr
mov
aaa
loope
xor
or
ds
scas
push
cs
hlt
stos
dec
push
push
int3
add
incl
lods
adc
push
fnsetpm(287
cmpsb
clc
jg
pop
ret
scas
mov
inc
sub
repnz
iret
jb
out
fistl
or
bound
mov
inc
nop
jmp
lahf
add
sub
les
xchg
sbb
or
inc
push
jnp
mov
scas
andb
pop
add
sub
movsb
mov
ljmp
add
jae
inc
mov
cmp
addr16
test
insb
repz
add
jp
mov
jmp
pop
mov
and
pop
pop
inc
add
adc
dec
int3
test
push
lea
arpl
and
or
jmp
aam
adc
xchg
and
and
call
cmp
call
push
in
jl
aaa
andl
incl
jo,pn
xchg
xchg
cmp
add
xchg
dec
cmp
in
cmp
adc
jg
add
mov
add
jecxz
xchg
inc
cmp
repnz
decl
jae
test
or
js
jmp
mov
pop
inc
inc
inc
jmp
cmpsl
inc
mov
cmc
cmpsb
mov
jg
adc
mov
inc
jb
mov
lret
sub
inc
popf
ds
into
cld
ljmp
stc
xor
xchg
jg
pusha
sbb
push
and
lock
dec
test
add
pop
dec
and
lcall
hlt
and
stos
dec
stos
mov
pop
adc
aaa
gs
xor
ret
call
mov
push
repz
pop
cmp
addr16
adc
repz
cli
push
cwtl
stc
lret
ss
dec
in
add
jmp
aaa
xchg
adc
rolb
cmp
mov
ret
cli
sti
adc
lods
dec
shlb
cmp
and
xor
sbb
and
or
dec
ret
dec
inc
or
push
je
add
fistpll
int3
nop
lock
shrb
and
adc
mov
pop
inc
das
add
enter
inc
inc
adc
dec
hlt
in
out
jmp
inc
clc
mov
pop
cs
sub
adcl
call
out
out
sub
xchg
pusha
cmpsl
call
and
rcrl
and
xor
add
xchg
push
imul
outsb
insl
sub
jo
mov
and
stos
xor
inc
cmc
sub
outsl
dec
sub
cltd
ds
scas
adc
aaa
mov
ret
mov
icebp
and
cmp
mov
xor
and
pop
push
incl
mov
movsb
jbe,pt
pushf
cwtl
test
or
push
cmc
adc
sub
call
mov
roll
and
mov
cmp
aaa
lahf
inc
in
xor
sub
loopne
mov
adc
jae
shr
xchg
ss
fcomps
repnz
inc
adc
xlat
adc
sarb
decl
xchg
lods
sbb
sarl
daa
and
mov
adc
jg
cmpl
incl
push
ret
dec
popf
dec
dec
inc
test
xchg
ljmp
in
inc
insl
xlat
or
movsb
push
mov
call
xor
hlt
xor
dec
cmp
sub
jns
lock
lcall
or
and
mov
insl
jno
jg
mov
test
je
mull
lcall
sub
dec
into
or
jae
pop
into
mov
push
pop
ret
xchg
cwtl
mov
hlt
decb
dec
xchg
lock
popa
loope
out
jne
cmp
jecxz
mov
mov
xor
jmp
and
iret
daa
mov
rolb
dec
shll
loop
jle
mov
or
adc
and
mov
cld
ja
cmp
pop
jns
popa
sub
xlat
orb
sub
sbb
xchg
sub
test
ljmp
mov
pop
out
roll
ljmp
cwtl
push
aam
shll
xchg
insb
xor
cli
decl
xor
push
lcall
mov
jmp
pushl
les
xchg
jle
sbb
or
incl
bound
add
ss
fwait
mov
js
iret
or
mov
je
sub
aas
push
mov
int3
stos
ljmp
cli
jp
push
or
and
aaa
add
pop
lret
add
imul
repnz
push
sub
mov
and
dec
ljmp
decl
sbb
mov
pop
add
andl
lcall
ljmp
clc
orb
xchg
mov
sub
mov
cli
xor
shrl
cltd
call
pop
cmp
std
adc
arpl
movsb
scas
and
inc
dec
push
cmp
hlt
sub
stos
dec
jb
test
jae
mov
mov
test
leave
adc
mov
push
push
cltd
in
stc
fsub
sbb
jl
pusha
incl
stos
push
cltd
xchg
sbb
and
lea
dec
add
fbstp
pinsrw
or
imul
mov
call
jne
fwait
cmp
mov
out
mov
push
pushf
and
daa
es
inc
jp
rolb
mov
test
jmp
adc
cmp
mov
sub
pusha
jmp
call
aaa
cmp
jle
xchg
daa
sub
fcom
pop
pushl
je
pop
dec
loop
pushl
pop
test
je
scas
pusha
add
outsl
cmp
add
cmp
daa
je
xor
xlat
cwtl
cmp
ljmp
add
mov
mov
les
shr
in
push
cmpsb
fisubrl
bound
cli
mov
push
mov
lcall
enter
imull
gs
mov
inc
fsubrl
movsb
inc
es
mov
loopne
in
mov
or
xchg
mov
test
jae
push
imulb
pop
push
dec
and
icebp
fstpt
jle
shrb
dec
sub
pop
mov
dec
rorb
ret
mov
icebp
ljmp
adc
sbb
adc
in
aaa
mulps
test
jl
sbb
inc
sbb
clc
lcall
jg
xorl
cli
psraw
in
add
ljmp
insb
or
jmp
pop
inc
inc
addr16
idivl
aaa
popa
dec
outsl
fbld
or
or
mov
jge
addr16
mov
or
ror
cmp
jbe
pusha
or
call
inc
and
inc
jns
movsb
or
test
cmpsb
lcall
add
sub
push
lock
jno
jnp
mov
mov
loop
jae
decl
repz
inc
sub
jne
dec
test
cmp
aas
inc
nop
jg
iret
push
out
or
je
xchg
jle
jne
or
mov
call
inc
dec
sbb
rcrl
rep
and
ret
lcall
icebp
mov
mov
jnp
mov
std
jl
adcl
mov
sub
and
jge
add
aam
mov
pop
mov
mov
fisubrs
jmp
fdivrp
loopne
idivb
lcall
add
inc
loopne
and
or
loope
or
incl
mov
aas
or
repnz
pop
sub
data16
fsubp
pop
repnz
loop
das
fiadds
call
sub
aad
jl
ret
push
jecxz
out
popa
pusha
or
and
ljmp
push
out
fcomps
fstpt
in
mov
clc
sub
idiv
mov
push
cltd
aam
enter
inc
jb
xchg
jnp
mov
addb
or
or
xchg
stos
push
or
frstor
ret
into
sub
addr16
cmp
decl
xchg
loopne
mov
fstps
xor
or
pusha
hlt
imul
sub
sub
hlt
int3
jle
or
nop
lcall
push
mov
insb
in
pop
fdivl
bound
mov
arpl
jle
adc
incl
sbb
jl
add
and
movsb
sub
fndisi(8087
sbb
add
movsb
ljmp
mov
cmpsb
lock
pushl
stc
push
ds
push
mov
xor
mov
test
dec
jl
movsb
ret
sti
mov
fs
jg
je
cmp
or
aas
push
rcrb
arpl
out
test
jg
cmpsb
mov
movsl
add
repz
adc
and
es
or
negb
and
sbb
lock
or
pushl
add
adc
xor
xor
out
cli
pushl
sbb
movsb
dec
popl
pushl
fsubl
rcrl
cmp
mov
jnp
jg
subl
jb
rcr
add
mov
loope
outsl
sbbb
lret
subb
mov
pop
fimuls
cmp
pushl
jp
fdivrl
sarb
jecxz
or
fstpl
xor
add
aaa
out
push
mov
mov
cltd
add
ret
add
dec
sti
out
xchg
pop
insl
pop
shlb
sbb
fsubs
mov
scas
int
popa
mov
mov
jmp
jl
and
adc
fs
sbb
gs
mov
pop
out
adc
incl
push
fisubrl
aaa
test
dec
dec
mov
jae
xlat
jmp
lock
jns
and
xchg
pop
adc
andl
lods
dec
or
push
sub
jnp
das
or
jg
dec
jne
add
leave
and
inc
filds
int
xchg
adc
rcrb
addl
ret
outsb
call
push
orb
ret
inc
sub
pushl
xor
xchg
ja
movsb
adcl
cmp
lock
sbb
xchg
dec
push
xchg
daa
arpl
jge
adc
dec
sbb
pushl
lret
xchg
and
xor
popa
and
push
les
add
arpl
add
popf
pop
arpl
jb
ret
xor
call
test
test
je
pop
sub
imul
call
and
lods
rcl
push
xchg
and
aam
push
jns
out
or
aad
mov
lret
xchg
push
cwtl
clc
ljmp
jp
mov
stos
pcmpgtb
in
incl
adc
cmc
shrb
xchg
cmp
pushf
andnps
add
imul
lcall
xchg
ss
or
cmp
mov
cwtl
push
lods
pop
xor
sub
mov
call
das
sar
mov
fadds
test
xchg
mov
inc
filds
lcall
cmc
fldt
sbb
dec
sbb
lcall
dec
insl
and
dec
mov
inc
mov
jl
in
daa
dec
adc
inc
and
out
js
jl
fs
jnp
in
pop
or
adc
mov
ds
lcall
icebp
incl
push
mov
iret
and
and
mov
hlt
jmp
push
je
pop
dec
xchg
add
mov
addl
lock
pushl
arpl
fsubs
adc
bound
insl
in
and
xor
decl
mov
xor
lret
fisubrs
jge
call
rol
rolb
mov
lret
popf
cmp
mov
fiadds
fsubl
fadd
test
push
cs
fidivrl
pushl
rclb
dec
or
mov
cmpl
ret
adcb
push
lock
call
lods
mov
movsl
dec
cmp
jb
mov
mov
sub
lcall
push
filds
lea
outsl
mov
out
xchg
inc
pop
jbe
out
mov
in
pushl
add
sbb
mov
or
std
push
sbb
push
decl
imul
or
sahf
pusha
sbb
faddl
xor
lret
dec
xor
sub
cmp
jmp
ljmp
xchg
pusha
add
cli
test
loopne
scas
jle
loopne
ficompl
das
fwait
add
ljmp
cvtpi2ps
dec
mov
adc
mov
shll
cmp
push
mov
mov
pop
orl
fs
andb
inc
and
incl
mov
xor
mov
rolb
xor
sub
pusha
aam
cmp
mov
jp
or
sbb
fistps
xor
popa
lahf
ret
xlat
aam
ds
dec
and
loopne
push
hlt
add
filds
or
pop
repz
enter
xchg
push
xor
dec
lret
fildll
mov
add
lock
mov
insb
je
xlat
nop
test
mov
outsl
mov
dec
adc
adc
ljmp
es
adc
sub
xchg
jge
mov
jns
stos
mov
adc
data16
sub
test
xor
stc
movsb
dec
shlb
cmpsb
inc
xor
call
jp
push
mov
add
ljmp
jge
outsb
clc
mov
pop
cmc
call
or
jo
daa
out
ficoml
pop
xor
iret
and
ljmp
addl
fnstsw
inc
imul
pop
jge
pop
mov
add
sbb
outsl
mov
cwtl
mov
loope
pop
xor
pop
pusha
sbb
hlt
filds
inc
lret
or
mov
add
push
mov
ss
cltd
push
or
insl
lcall
push
js
push
jmp
dec
mov
add
adc
shlb
sbb
dec
test
mov
cmp
jg
imul
ss
adc
cmp
int
pushf
sbb
mov
jle
aad
stc
add
push
add
pop
and
add
pushf
mov
and
sbb
mov
pusha
add
mov
xor
inc
cmp
pop
ret
mov
mov
and
dec
sbb
inc
dec
pop
cmpb
xor
rolb
int
mov
decl
inc
dec
pop
sti
inc
xor
pusha
in
pop
xor
mov
subb
xor
shr
add
ljmp
cltd
xlat
add
xor
sbb
das
out
mov
dec
pushl
cmp
sub
mov
dec
xchg
xor
mov
mov
xchg
sub
scas
adc
les
sbb
ds
cmp
decl
sti
ret
or
cwtl
out
mov
sub
mov
xor
shlb
decl
dec
mov
sbb
dec
inc
xor
test
xor
call
lock
pop
or
mov
cmp
jno
movsl
mov
iret
xor
test
call
cmp
or
xchg
sbb
incl
int3
popa
xor
loopne
push
pusha
test
int3
outsl
mov
xor
mov
out
addr16
shlb
test
pushaw
ljmp
sbb
aam
mov
repnz
xchg
test
sahf
roll
or
nop
lods
xchg
adc
int3
push
das
pop
ret
adc
stos
add
or
cld
repz
adc
dec
arpl
filds
pop
in
repz
dec
fdivl
ret
pop
loope
pop
jp
scas
sbb
rclb
ljmp
fmuls
xor
add
loop
lea
decl
shlb
cmp
ljmp
clc
mov
or
inc
inc
sub
jmp
addr16
out
icebp
mov
cmpsb
adc
ljmp
xchg
mov
movsb
filds
mov
sub
cmp
imul
and
ljmp
sbb
shlb
scas
jl
sub
inc
dec
pop
mov
rolb
adc
push
mov
aaa
cld
incl
or
push
bound
xor
push
pop
enter
stos
mov
jecxz
iret
lods
enter
add
call
inc
mov
xchg
mov
cmp
xchg
inc
lcall
dec
jecxz
addb
out
sbb
decl
dec
cli
shll
mov
call
sahf
push
sbb
jae
les
xor
lock
cmc
cwtl
out
dec
push
pop
aad
mov
call
pop
jnp
push
push
lods
mov
lcall
push
data16
and
inc
int
mov
cltd
mov
jp
sti
sub
xor
mov
pushl
add
loopne
andl
dec
adc
xorb
flds
push
dec
test
fisttpll
iret
aad
add
add
add
fadds
and
jg
ss
pop
cli
orl
jae
stos
lret
je
incl
aaa
rcll
dec
or
mov
mov
lods
cwtl
add
lcall
mov
pop
aas
dec
mov
imul
dec
pop
push
mov
add
sar
and
and
adc
or
inc
fcomip
push
fiadds
push
rcr
jl
in
loop
jno
sub
adc
xor
cmp
xor
adc
sub
xor
jbe
xchg
add
mov
mov
lahf
lods
jp
sbb
imul
pop
push
popa
dec
pop
adc
shrl
mov
cmp
add
or
jno
xchg
cmp
and
out
jbe
decl
pop
mov
ljmp
jl
adc
pop
daa
push
loopne
xor
outsl
pop
push
push
pop
push
sar
jmp
add
or
loopne
push
pop
cwtl
adc
nop
or
test
decl
clc
test
test
arpl
test
xchg
test
pop
ret
fisubs
outsb
enter
ret
push
xchg
or
cwtl
xchg
xchg
xchg
test
dec
mov
add
arpl
and
popa
jmp
popa
and
bound
daa
push
jae
xchg
and
dec
cld
ljmp
mov
pop
ds
pop
jb
pop
mov
push
jne
sub
cmp
popa
push
sbb
in
ds
loop
inc
clc
call
rcll
les
cwtl
jno
hlt
xor
lods
rclb
add
ficoml
lret
inc
add
add
lock
add
cmp
push
bnd
or
xchg
sbb
sub
xor
dec
movsl
fimull
jp
push
imul
out
pop
rorb
shrb
pop
lods
rcl
jp
sti
jne
adcb
shrb
das
cld
push
or
or
ljmp
jge
jne
repnz
das
arpl
nop
or
ljmp
jle
repnz
rolb
int
dec
adc
jle
nop
add
sbb
call
insl
xlat
jg
lock
mov
push
sbb
decb
inc
sbb
xorl
mov
add
and
pop
xchg
push
add
mov
or
adcb
add
add
and
push
jb
imul
adc
dec
cmp
sbb
lcall
dec
adc
cmp
sub
pushl
push
and
addr16
addb
and
jge
fsubs
pop
jp
or
lds
jmp
jp
xor
cwtl
test
jmp
outsl
mov
decl
cwtl
xchg
or
sbb
mov
xchg
dec
cltd
bound
cwtl
lcall
dec
cwtl
cmpsb
xchg
cmp
mov
lcall
jge
cmp
push
cmpsb
aad
ret
push
fwait
push
pop
call
adc
mov
sub
add
mov
jecxz
decl
xorl
sub
pop
jo
ja
push
sbb
sub
lock
push
sbb
sbb
xor
push
hlt
and
out
dec
add
xchg
xchg
data16
loopne
rcll
inc
lret
pop
or
add
mov
and
pop
xchg
mov
rolb
and
std
nop
add
data16
clc
push
push
add
sbb
fdivrs
mov
pop
outsl
call
jne
xchg
add
nop
add
pusha
inc
mov
clc
jne
repnz
ret
addr16
fs
and
aas
xor
inc
adc
cmpsb
push
or
nop
incl
call
das
jnp
nop
add
or
push
cmp
mov
mov
cld
pop
cld
adc
add
cltd
push
add
push
adc
cmp
inc
decl
jle
mov
sbb
arpl
sub
jle
pop
ljmp
xor
xchg
cmpb
sub
in
pop
mov
or
add
pop
subl
pop
jo
leave
rcrl
cmp
add
push
push
aad
dec
sub
pop
ja
cld
dec
dec
jg
xchg
call
and
je
sbb
push
jg
test
jmp
add
push
addb
adcl
or
inc
mov
stos
gs
stos
pop
icebp
mov
test
gs
mov
es
lcall
jmp
mov
lods
lret
lret
ror
sbb
dec
sub
stos
sub
lret
push
xor
or
stos
pushl
aaa
xor
lods
and
insl
adc
arpl
cmp
push
clc
loop
cmp
scas
dec
pop
push
or
sub
and
sub
sbb
xor
lock
mov
pop
mov
sbb
or
ss
sub
inc
pop
sbb
pop
dec
add
decl
les
xchg
subl
in
or
or
lahf
sahf
cmp
inc
popf
add
std
cmp
decl
fldt
popf
shrb
lds
pop
das
pop
insl
xor
lret
repz
mov
sub
pop
cmpsl
dec
pop
clc
jmp
clc
and
cmp
and
sub
rorl
pop
mov
mov
pop
fstl
inc
ljmp
lods
adc
dec
xor
or
adc
add
lods
jl
mov
xor
mov
xor
adc
scas
cli
jg
and
sub
push
mov
outsl
clc
scas
sub
and
pop
or
out
pop
dec
aam
mov
jl
cmp
adcb
xchg
aam
dec
repnz
rorb
cmpl
push
mov
lock
inc
lcall
cmp
lods
dec
push
dec
inc
subb
jae
adc
and
pop
jo
push
push
dec
fcomi
es
cmp
fisttpl
sub
push
mov
pop
mov
aaa
add
add
addr16
sbb
decl
xchg
lret
mov
in
lret
mov
nop
or
mov
cmp
ljmp
fiaddl
fwait
inc
rol
and
cmpsb
cmp
mov
dec
sbb
ss
inc
jb
ret
pop
je
ja
loope
sar
inc
or
pop
push
loopne
dec
lock
in
inc
push
mov
incl
aas
mov
popf
xchg
mov
jbe
shrb
mov
lock
sub
stos
sub
or
nop
or
or
popa
push
pop
jl
out
es
jl
mov
shll
xor
add
inc
addl
aam
pop
sbb
inc
popf
inc
inc
mov
pop
push
xor
pop
add
insb
fadd
cmp
jg
sbb
mov
jns
aam
or
and
inc
je
cld
and
ss
jbe
nop
repz
jg
or
add
ja
fldz
lahf
or
ljmp
push
or
fcompl
add
loope
and
inc
jno
xchg
push
mov
mov
adc
cmpsl
pop
lcall
arpl
mov
push
push
lret
mov
cmpb
add
jno
lcall
dec
push
cmp
cmp
inc
sub
or
sbb
fsubl
into
mov
data16
sbb
test
mov
fwait
lcall
pop
clc
adc
int3
push
xor
sbb
jno
jne
cld
xor
xor
cmp
addb
ret
jne
lock
iret
in
iret
dec
mov
pop
cmp
mov
and
shrb
shll
add
or
sarl
jecxz
adc
push
bound
sub
lock
in
or
mov
sub
aas
add
lods
and
popa
cmp
call
loope
mov
mov
dec
data16
ljmp
hlt
loopne
jns
subb
nop
addr16
inc
push
or
adc
ret
sub
push
pop
sbbl
sub
mov
sbb
mov
add
xor
push
fldl
and
aad
pop
rcr
mov
mov
jo
push
cli
adc
push
out
xor
jne
leave
pop
fbstp
lahf
int3
inc
jns
stos
jle
xlat
mov
or
add
testl
decl
ret
movsl
and
mov
lods
add
push
adcb
mov
call
mov
rorb
mov
push
nop
in
sbb
out
decl
lods
mov
sbb
xchg
pop
fadd
insb
inc
xchg
cmpsl
decl
dec
cmpsb
test
pop
mov
sbb
movsb
sar
hlt
or
adc
pusha
dec
lock
mov
mov
or
xor
loopne
outsl
clc
ret
dec
pop
mov
xchg
pop
mulb
inc
rclb
and
cld
mov
loopne
stc
movsb
push
ja
xor
insl
rclb
dec
cltd
xor
lcall
push
ficomps
jmp
mov
jl
pop
aad
and
out
xchg
decl
pop
ficomps
rorb
loope
push
loope
mov
and
push
xlat
sbb
jb
std
loope
arpl
jne
jo
xchg
enter
imul
add
jecxz
daa
adc
push
loopne
mov
cmp
xor
add
and
popf
adc
adc
jg
push
fsubs
jle
addr16
jno
adc
push
int3
adc
push
cs
mov
mov
lcall
jmp
sbb
cwtl
stos
je
lcall
mov
add
jno
sbb
push
shrl
ljmp
negl
movsl
xchg
sub
add
xchg
out
and
and
sub
sbb
jle
push
adc
pop
pop
dec
pop
cld
js
cwtl
or
or
mov
push
test
mov
or
adc
and
pop
ljmp
dec
jmp
lods
push
xor
lret
xchg
lods
pushf
cmpsl
cs
lds
add
pop
mov
mov
pop
dec
les
test
pop
add
inc
add
subl
call
jno
stos
sbb
mov
aad
add
les
stos
fwait
cmpsb
jmp
mov
pop
arpl
sub
dec
jmp
adc
jo
jbe
das
mov
cli
ficomps
loopne
loopne
cmp
and
sbb
cmpb
lock
lcall
loopne
add
rcr
in
sub
filds
mov
call
jp
add
and
loopne
pop
js
adc
jb
mov
mov
call
dec
xor
jecxz
bound
mov
pop
pop
int
xchg
call
push
xor
xchg
cmpsb
pop
sbb
adcl
mov
add
inc
pop
lret
pop
mov
aam
test
rcr
out
clc
sbb
mov
cmpsl
fisubs
add
out
clc
call
repnz
je
push
and
and
daa
cltd
hlt
cwtl
sub
fs
inc
inc
pop
sub
sbb
je
jb
decl
sbb
jl
inc
jl
repnz
or
pop
jmp
or
lock
jmp
push
pop
into
call
das
push
rclb
lcall
inc
cmp
jae
xor
cli
and
inc
mov
mov
jns
and
xchg
mov
push
push
in
outsb
cwtl
cli
or
mov
insl
rcr
adc
addr16
int3
lods
mov
add
xchg
add
jo
pop
and
xorb
push
add
add
cmp
sbb
stos
popa
in
xchg
scas
push
and
adc
jbe
push
add
cs
out
jmp
std
int3
and
and
cmp
and
mov
pop
roll
call
cld
or
adc
jne
andl
push
mov
inc
andb
loop
pop
decl
push
fcomps
sbb
call
add
push
pop
rcrl
jae
int
pop
and
ljmp
xor
or
int3
push
movsb
inc
popa
sub
mov
inc
mov
inc
or
or
jg
dec
mov
sub
sub
sub
test
pop
rcrl
fisubrs
and
xlat
dec
lds
out
sbb
arpl
lret
adc
or
jg
cwtl
aad
jo
inc
call
fnstenv
pop
jecxz
mov
repnz
sarl
jp
je
and
xchg
fldcw
xlat
scas
addr16
sahf
pop
loop
int3
mov
incl
cld
jp
cwtl
mov
fwait
sbb
roll
mov
push
dec
aam
in
inc
incl
inc
andb
roll
pop
adc
sub
sbb
adc
mov
push
pop
push
enter
mov
fbstp
clc
out
dec
lcall
enter
stos
mov
mov
mov
mov
icebp
ret
or
mov
xor
add
test
sub
addl
cmp
sbb
test
icebp
fcomip
mov
ret
and
idivb
sub
test
lock
incl
sbbb
lret
ds
adc
sub
add
mov
sub
pusha
pushf
mov
loopne
sub
aam
cmpb
add
xor
shl
and
inc
cld
sub
adc
dec
add
adc
mov
mov
andb
cli
mov
xchg
or
movsb
push
mov
mov
rcll
adc
and
xchg
adc
push
mov
xchg
dec
stos
test
push
inc
jo
jg
jmp
pop
jnp
lock
lret
mov
pushf
xchg
dec
movsl
adc
jmp
shlb
stos
popa
pop
add
mov
test
mov
pop
mov
ljmp
sbb
subb
pop
pusha
sbb
outsl
repz
aam
das
add
mov
add
adc
addl
xchg
mov
dec
mov
call
xor
andl
jecxz
iret
inc
xor
loop
cwtd
aad
jmp
fldenv
lods
cltd
xchg
sbb
lcall
fwait
roll
cmp
ss
inc
mov
jg
decl
out
xchg
or
stc
add
add
mov
inc
fwait
popa
mov
sub
ja
les
sbb
mov
xchg
jg
push
stos
mov
dec
and
lds
dec
pop
sbb
push
jp
scas
xchg
pop
dec
mov
sbb
lds
adc
sub
lds
out
jo
ud2
pop
xor
call
sbb
adc
daa
mov
mov
data16
out
rolb
push
incl
nop
push
xchg
in
bound
or
and
decl
and
das
fisubl
test
mov
ljmp
push
mov
xor
addb
bound
jae
imul
jg
lods
mov
das
sub
mov
fistpll
and
mov
es
add
xchg
les
mov
shl
jmp
repnz
dec
movsl
mov
adc
jecxz
cmp
push
or
xchg
lock
cmc
lcall
dec
and
inc
aam
or
sub
dec
ror
cwtl
xor
dec
adc
test
add
pop
jg
std
push
or
ret
jne
sub
fadd
xchg
push
gs
data16
repnz
add
inc
pop
cmp
or
mov
roll
das
cmp
outsl
pop
dec
arpl
pop
lret
add
add
cli
pop
scas
mov
sbb
adc
push
clc
bound
push
and
aaa
xchg
enter
das
xchg
incl
jae
or
xor
das
nop
call
jne
mov
cmp
adc
xbegin
fwait
jnp
push
mov
inc
insb
out
add
inc
aaa
es
outsb
hlt
ret
js
aad
ret
lcall
in
insl
ret
cld
sub
ds
icebp
mov
sub
ja
pop
push
scas
and
inc
loop
inc
sub
or
ret
add
mov
or
js
lcall
rolb
mov
inc
adc
mov
push
ljmp
cli
das
data16
popa
xor
xchg
js
idivb
mov
clc
dec
decl
je
mov
in
pop
sub
in
and
push
mov
test
stos
add
jle
call
adc
mov
cld
incl
aas
mov
inc
in
aam
mov
test
jge
jg
fdiv
xor
push
rcl
test
stos
sbb
dec
fcompl
pop
fisubl
rcrb
cmp
xchg
mov
ljmp
xor
shlb
mov
stos
fildll
sub
loope
ret
in
loopne
in
xchg
dec
push
mov
ljmp
inc
subl
xchg
and
movsl
push
xor
int3
adc
rcrb
inc
or
push
add
call
test
pop
dec
test
mov
adc
adc
xor
and
addb
add
push
test
mov
adc
push
lock
add
adc
mov
mov
lcall
movsb
imul
movsb
lods
inc
fs
lods
push
call
mov
daa
decl
aas
ffree
inc
sub
leave
jbe
sbb
das
cs
mov
mov
inc
fstps
icebp
lcall
dec
fidivs
lods
rol
cli
fsubl
push
test
mulb
mov
cli
xchg
cmp
sbb
mov
insb
leave
and
push
sub
out
pushf
inc
fisttps
and
lea
cmpsl
cmp
adc
test
mov
mov
lcall
xor
js
or
add
jbe
or
lcall
out
dec
loopne
add
adc
aad
orb
cmp
and
xchg
inc
dec
enter
sbb
dec
sub
mov
mov
jno
xchg
test
push
test
xchg
pushl
push
imul
jno
inc
jbe
push
pop
in
test
hlt
jmp
scas
mov
loope
fnsave
negb
cwtl
in
push
sub
push
pusha
cli
subl
push
xchg
mov
aam
shlb
jno
lret
push
cmc
mov
ud0
cltd
in
adc
test
sub
test
sbb
pushl
fisttpl
and
xor
rcrl
ret
arpl
pusha
test
and
cmp
das
push
icebp
or
call
rol
and
stos
gs
mov
push
rclb
xor
xchg
add
add
sbb
mov
mov
add
and
mov
push
adc
call
ljmp
jg
sub
dec
js
mov
push
movntps
jmp
cmp
orb
cmc
mov
push
and
ljmp
test
and
mov
push
test
insl
adc
mov
ljmp
call
daa
xchg
icebp
or
icebp
inc
add
mov
or
rclb
cmpsb
cwtl
scas
orb
incl
add
xchg
dec
add
cmp
ja
push
pop
push
ds
psadbw
mov
repnz
lret
in
mov
addr16
add
add
xchg
jg
dec
push
mov
cld
push
ret
call
push
test
sbb
dec
pop
and
pop
dec
adcl
jecxz
in
adc
jno
test
icebp
ljmp
lds
and
fbstp
mov
call
je
ja
jne
dec
mov
in
inc
and
adc
lock
incl
and
add
cmp
jo,pn
rcrl
ljmp
xor
xor
gs
cmp
cwtl
int3
popa
pop
jge
pop
jg
jecxz
into
and
or
mov
jns
in
popa
or
inc
inc
xor
mov
pop
cli
faddl
sbb
add
stos
popa
push
xor
adcb
push
mov
lcall
lcall
hlt
inc
mov
int
ss
dec
xchg
pusha
add
js
and
shll
decl
aas
aad
popa
add
test
mov
dec
aaa
into
push
cltd
scas
mov
add
in
adcl
std
pushl
sbbb
mov
out
outsl
cmp
fcomip
aas
orl
inc
dec
daa
add
scas
sar
adc
lock
call
inc
mov
pushf
add
sbb
sub
orb
stos
fadds
add
sahf
bound
filds
sub
and
sub
sbb
call
mov
test
jg
push
sbb
das
adc
jmp
sbb
xchg
jnp
push
push
push
sub
mov
jmp
in
aaa
mov
jecxz
popf
mov
xchg
out
add
das
clc
scas
push
and
ljmp
xor
jo
adc
call
loop
popf
mov
cmp
push
clc
das
aaa
pop
sahf
add
dec
cmp
jno
or
incl
inc
push
push
test
push
mov
bound
push
popa
add
lods
ret
nop
call
clc
lcall
les
add
les
adc
ja
inc
mov
xor
inc
add
das
push
cmp
xor
jg
add
sub
mov
cmpsl
mov
mov
mov
loope
mov
stos
add
mov
add
sbb
jnp
cmp
cmp
call
mov
adc
ret
outsl
jns
sbb
sbb
cmp
stos
jmp
cmpl
pusha
sub
cmp
rcl
outsl
outsl
mov
add
mov
lock
xchg
add
movsb
pusha
test
mov
or
mov
loopne
sbb
push
lret
stos
sub
mov
js
cld
dec
mov
addb
mov
ret
add
loop
test
test
fwait
scas
cmp
outsl
sbb
pop
dec
jp
out
ret
cmp
ret
fwait
dec
adc
mov
jg
cmp
xchg
mov
cltd
ds
hlt
sub
mov
xor
mov
js
ret
xchg
inc
jns
pusha
cmp
mov
mov
mov
stos
mov
pop
xchg
pop
xchg
aaa
addl
cs
clc
ljmp
xchg
add
inc
icebp
lock
inc
outsb
mov
jmp
push
stos
cld
xchg
xor
andb
dec
xor
lret
pushf
inc
adc
sbb
clc
call
dec
add
roll
ret
ret
clc
sbbl
decl
mov
mov
mov
push
add
push
ljmp
mov
adc
ret
adc
jo
inc
leave
push
call
or
or
or
clc
xchg
mov
jg
mov
mov
xchg
lods
mov
rorl
jb
mov
mov
and
mov
sarb
sub
clc
and
push
inc
and
jo
cmp
xor
jmp
call
mov
xor
outsb
dec
add
jno
xchg
aaa
lret
dec
loopne
or
mov
jp
incl
rcrb
sbb
nop
add
adc
jge
add
pop
into
push
filds
mov
ds
fmuls
shlb
ljmp
push
in
dec
subb
aas
push
mov
and
pop
ja
ljmp
sub
push
setne
add
sbb
fwait
jmp
inc
xchg
je
sub
add
dec
andb
sbb
decl
shll
mov
orb
shrl
cmpb
andb
jge
cli
fcomip
ret
and
stos
mov
jo,pt
leave
sub
jp
test
pushl
aas
sub
lret
leave
mov
inc
inc
pushf
mov
cltd
mov
ds
add
and
mov
sbb
jmp
subl
add
decl
mov
inc
jg
fisttpl
mov
mov
add
inc
lock
call
loop
jecxz
arpl
ffreep
and
scas
sub
lods
adc
cltd
xor
lcall
roll
addb
pop
dec
incl
add
push
enter
pop
std
call
add
inc
jae
adcb
xchg
push
adc
nop
add
mov
and
mov
mov
into
daa
js
cmp
or
popa
std
clc
subl
imul
inc
subl
rorl
sub
fs
bound
or
pushl
xchg
inc
cmpsb
add
nop
add
dec
movsb
sti
lods
sub
fisttps
das
sbb
inc
or
jg
hlt
mov
mov
dec
dec
fsts
adc
xchg
fisttpll
mov
mov
pushl
mov
nop
or
jp
adc
lock
fmull
ljmp
fldt
push
mov
xor
jmp
aad
popf
push
mov
inc
dec
addb
fwait
xchg
push
jne
mov
testb
mov
push
push
cmp
mov
push
andb
lods
and
es
mov
setno
mov
xchg
jmp
adc
aaa
cld
inc
add
push
sbb
add
mov
mov
adc
clc
jmp
push
call
shll
sar
sbb
push
xor
push
sub
jg
and
sbb
and
push
push
pushf
mov
or
lret
sub
pop
or
jmp
or
aam
pop
pop
mov
jg
jmp
lods
jl
and
adc
and
clc
sub
inc
sbb
outsl
decl
lock
fildl
sub
inc
add
mov
and
sbb
dec
ljmp
loope
adc
adc
sub
or
fstpl
ljmp
jg
mov
add
or
addr16
test
test
lock
add
cmp
lcall
fneni(8087
sub
fmuls
arpl
popf
scas
rcll
loop
push
fstps
gs
cltd
popa
mov
mov
inc
lret
add
jg
sub
xor
sbb
ds
pop
stos
cmp
pop
movsl
jo
call
cltd
add
xor
int3
cltd
adc
loope
fildll
cmp
call
scas
add
push
insl
sub
fdiv
cltd
arpl
loope
les
enter
pop
test
loopne
mov
fsubl
and
xchg
imul
call
cmp
or
or
fidivrs
xorl
adc
cld
pop
lock
and
gs
mov
or
mov
rorb
or
and
jg
or
data16
mov
cmp
adc
popa
out
sbb
adc
roll
cld
mov
jmp
xchg
in
test
cmp
out
dec
mov
js
add
cmc
xchg
or
and
or
stc
and
pushl
mov
mov
nop
add
dec
mov
xchg
popf
frstor
inc
dec
std
jmp
mov
adc
cmp
sub
pop
fwait
loopne
nop
sub
ljmp
movsb
icebp
lret
jmp
inc
mov
repz
ret
and
push
xor
bound
pop
push
cmp
loope
mov
loopne
adc
lock
add
mov
mov
clc
xchg
jg
or
rorl
orl
mov
pop
cli
jg
and
inc
xor
mov
in
inc
jecxz
xchg
clc
ljmp
orb
call
mov
ljmp
out
scas
push
cmp
rcll
or
call
lea
sbb
ljmp
xchg
loope
cmpsb
popa
loope
fstpl
movsl
or
push
mov
push
or
inc
ret
push
add
pop
fbstp
call
add
or
cltd
cltd
or
call
mov
or
xchg
or
in
jle
pop
pop
add
push
pop
outsb
cmp
jg
or
adc
pop
push
in
mov
pop
out
inc
nop
in
cmc
sub
inc
mov
inc
lret
imul
jp
and
mov
mov
mov
pop
xchg
dec
jne
clc
das
inc
gs
test
push
bound
loopne
push
test
test
das
orb
push
mov
les
lock
ljmp
xorb
mov
push
cmc
out
sbb
mov
mov
sbbb
ffreep
push
loopne
or
jmp
or
je
add
cld
call
cmpsb
scas
aam
incl
inc
mov
or
jg
rclb
xchg
ljmp
or
pop
nop
pop
sub
mov
gs
es
pop
shll
mov
adc
cmp
add
cmpsb
jg
out
fcoms
out
and
jno
iret
or
jg
inc
jno
fdivs
mov
nop
or
das
pop
test
push
sub
out
loope
push
incl
mov
lcall
xchg
mov
insl
sbb
repnz
js
loope
xchg
mov
adc
adc
push
xor
mov
cmpsl
fildl
mov
stos
lock
mov
ljmp
lock
and
push
js
sbb
fwait
mov
nop
nop
cwtl
mov
ret
dec
sub
rcrl
add
scas
mov
or
out
xor
dec
daa
mov
mov
shll
and
lods
xchg
push
ja
int
pusha
sbb
clc
mov
js
mov
pushf
add
push
test
xchg
inc
std
dec
add
ret
jp
push
enter
ljmp
pop
jge
out
pop
pop
mov
outsl
scas
sbb
mov
mov
test
repz
mull
inc
ret
push
push
pop
lea
pop
inc
sar
mov
out
sbb
inc
pop
xor
aaa
std
dec
mov
in
lock
jecxz
adc
into
movsl
mov
or
ja
jg
stc
and
sub
lock
xchg
nop
add
int3
ror
sahf
mov
pop
pushl
clc
js
xchg
ja
mov
sub
test
jo
dec
push
stc
adc
or
cmp
cmp
lcall
pop
xchg
fdivr
lods
call
daa
xlat
cltd
adc
rcrb
aam
cmpsb
adc
push
fdivrs
or
mov
fs
scas
or
sti
into
xchg
mov
inc
iret
jl
pushf
or
popf
call
sarb
aaa
fidivrs
add
test
subl
ficoml
movsl
shlb
jg
hlt
cmovo
xlat
rclb
test
jge
test
mov
ljmp
cmp
negl
inc
push
clc
add
add
push
jne
pop
out
idivl
and
ljmp
pop
loope
mov
add
xor
adc
inc
jmp
push
add
pushl
inc
int3
mov
mov
xchg
fadds
or
mov
and
je
adcl
mov
push
ja
ret
push
lods
mov
adc
or
xchg
lock
jp
mov
push
push
and
pop
cmp
popf
add
jmp
add
add
mov
movsl
sub
mov
stos
add
pop
adc
stos
mov
mov
push
ret
xchg
xor
out
js
pop
add
xor
fdivrl
xor
dec
adc
loop
mov
mov
cmpsb
jmp
xchg
and
lock
xchg
mov
push
nop
lcall
test
lret
cwtl
mov
gs
add
xor
clc
pop
es
pop
ret
popa
push
cltd
into
add
lds
cmpsb
dec
xchg
add
ljmp
in
mov
mov
fnstsw
xor
xor
sbb
loope
sub
and
sbb
jmp
notl
or
decl
mov
jno
ficompl
das
loopne
mov
jmp
sub
mov
loope
in
loopne
xchg
sub
add
push
out
ret
ljmp
sti
icebp
fstpl
subb
aas
std
sti
jne
ljmp
leave
push
out
pop
subb
int
clc
xchg
xor
mov
jae
adc
cld
adc
cmpl
fs
insl
jne
inc
xor
lods
pop
xchg
ss
xchg
mov
add
adc
or
mov
std
mov
jbe
sub
notb
mov
leave
enter
xchg
push
arpl
cmp
mov
xchg
popf
add
cmp
mov
xchg
xor
or
inc
pop
xchg
dec
rcrl
inc
mov
incl
mov
sbb
aaa
call
xchg
add
cmc
add
and
or
xchg
shl
adc
adc
fxch
mov
dec
mov
lcall
daa
mov
adc
int3
add
mov
mov
inc
sbb
call
push
pop
xor
dec
aaa
add
xchg
inc
add
js
and
xchg
add
stos
cmpb
call
mov
pop
dec
ror
test
sub
imul
xor
incl
sbb
sbb
dec
cs
int
dec
cmp
aam
pushl
push
loope
hlt
lcall
add
movl
sub
add
dec
sbb
push
mov
adc
shlb
js
ret
mov
in
sbb
xor
mov
push
adc
cltd
pop
inc
out
aam
dec
inc
shll
add
adc
mov
fistps
out
lret
sbb
dec
jno
pushl
mov
test
in
xor
ret
xor
cmp
aas
aaa
xlat
fdivl
dec
ljmp
sar
add
sbb
and
ret
add
sti
cmp
jle
ljmp
mull
dec
pop
inc
push
dec
add
subb
sbbb
push
cmp
popf
adc
mov
mov
jb
add
xor
pop
adc
clc
jo
daa
and
mov
jl
or
or
call
bound
adc
idiv
call
scas
adc
mov
into
adc
dec
mov
sbb
adc
push
rolb
ljmp
dec
sub
ficoms
inc
xor
leave
lret
out
xor
dec
outsl
xor
adcb
cmp
inc
lock
pop
dec
ret
pop
xchg
insb
push
push
lea
push
jo
aaa
cmp
inc
push
outsl
adc
mov
lds
pop
lods
push
and
hlt
inc
sbb
in
pop
cwtl
out
lahf
ljmp
sub
aam
push
or
adc
push
pushl
push
stos
push
xchg
sub
cwtl
add
jp
or
xchg
lret
adc
mov
cmp
xor
sbb
rorb
cwtl
test
add
cmp
mov
push
call
push
ljmp
mov
sub
add
nop
xor
jno
push
out
xchg
decl
add
cmpb
pop
dec
gs
xor
sub
popa
mov
and
pusha
push
out
jg
ljmp
sbb
dec
pop
push
sahf
cmpl
pop
mov
sbb
jg
jbe
popa
rclb
les
sti
jno
jae
push
and
cli
push
lret
inc
xor
ss
hlt
in
mov
scas
clc
and
dec
mov
xorl
cmpsl
xchg
cld
jno
iret
adc
enter
incl
mov
and
jns
inc
inc
out
je
add
fisttps
mov
inc
aas
nop
in
add
mov
nop
pop
pop
add
div
mov
pusha
je
mov
xchg
xor
andl
ja
ret
adc
addb
and
lcall
mov
es
pop
add
pushl
lds
out
fisttpl
xchg
or
mov
xor
cmp
mov
ret
test
shlb
loope
dec
cmp
loopne
loop
inc
pop
xor
inc
mov
mov
xchg
in
add
mov
pop
sahf
sarl
sub
push
imul
sub
ljmp
ret
sbb
mov
dec
and
loop
push
popa
and
pusha
cmp
mov
adc
rorl
mov
add
test
fildl
or
popa
mov
cli
data16
xchg
xchg
dec
xorb
cmp
pushf
incl
cmp
inc
repnz
stos
dec
rol
mov
xor
cwtl
insb
sbb
sbb
pop
pop
jbe
or
mov
fsts
and
mov
rolb
jno
or
cmp
test
adc
aaa
pop
clc
mov
xor
fxch
mov
mov
mov
and
jb
sbb
roll
mov
fldt
mov
mov
mov
jg
ljmp
sbb
or
xchg
nop
xor
loopne
add
divb
adc
test
lcall
in
mov
adc
jb
mov
jbe
call
bound
loop
invd
into
cmpsb
lcall
in
clc
or
test
cltd
push
xchg
int3
aad
dec
pushl
loopne
or
cmp
add
loopne
add
stos
jmp
xor
pusha
xchg
jae
enter
inc
lahf
clc
cwtl
xor
or
out
dec
xchg
xchg
pop
icebp
adcl
adc
dec
mov
jmp
dec
roll
push
sbb
xor
adc
ficoms
push
lock
call
jmp
jmp
mov
or
pop
adc
and
mov
rcrl
imul
push
pop
jmp
movsb
je
sub
jno
add
cmp
pop
jo
push
add
decl
seto
test
xor
add
xchg
fbld
add
mov
pusha
mov
sbb
xchg
and
out
jns
out
lcall
cwtl
mov
xchg
shr
sub
inc
sbb
inc
addb
ret
pop
mov
jmp
out
add
cmp
or
ret
add
sbbb
jne
out
mov
sub
inc
xor
or
pop
rolb
mov
jg
jbe
jle
jne
lea
jne
jne
xchg
mov
mov
loope
push
out
pop
cmp
inc
and
scas
mov
ljmp
out
add
sub
outsl
adc
add
sarb
pusha
push
test
bound
mov
out
outsb
mov
mov
fdivrl
pop
out
jle
cld
mov
inc
xor
mov
in
loop
call
fiadds
imul
cmpsl
inc
pusha
insl
jmp
imul
lock
jp
movsl
aad
add
orl
xchg
add
fsub
or
sbbb
sub
and
lcall
mov
pushl
sub
addr16
mov
or
subb
call
adc
cmp
daa
sbb
mov
sub
push
xor
icebp
hlt
mov
push
ljmp
je
cmp
mov
decl
rcl
nop
push
xor
in
mov
mov
jg
push
scas
aam
out
or
in
aad
inc
xor
call
fdiv
cmpsl
fs
test
shrl
xchg
xor
mov
ss
mov
inc
idivb
mov
adc
mov
mov
addr16
arpl
scas
lret
lds
sti
mov
add
stc
dec
or
sti
rcrb
data16
fcoms
call
pop
sarb
pushl
insl
and
popa
in
fists
aad
mov
out
andl
and
fists
cld
in
int3
clc
rorl
repz
xor
sub
ljmp
xor
int
hlt
stos
cld
call
xor
mov
aas
scas
push
in
add
and
std
lea
cltd
nop
stos
lahf
add
sbb
cli
adc
pop
or
xchg
mov
add
loopne
and
ficompl
sbb
dec
call
pushf
rclb
jno
pop
xor
pop
and
les
mov
push
adc
or
incl
or
xchg
sbbl
ds
inc
test
ror
mov
cli
in
inc
mov
jmp
or
adc
jmp
or
fs
call
mov
in
xchg
dec
xchg
out
push
das
and
add
adc
cmpsb
lcall
xor
cwtl
push
cmc
call
jl
xchg
push
inc
negl
dec
shll
dec
mov
xor
or
add
mov
cmc
frstor
call
xchg
add
incl
jle
test
andb
lcall
cmpsl
lods
mov
adc
nop
test
popf
xchg
pop
add
test
jnp
or
sub
fldt
and
in
cmp
mov
inc
in
sbb
ljmp
imul
call
inc
adc
add
adc
jg
jmp
test
popa
push
push
sbb
fs
shlb
sahf
arpl
dec
inc
sbb
lcall
imul
push
stos
in
and
arpl
push
fs
pop
shll
push
ljmp
add
and
out
or
movsb
decb
mov
cmp
neg
xor
out
insl
outsb
in
and
inc
data16
dec
inc
pop
mov
call
push
clc
inc
pop
lods
in
xchg
cld
ret
movsb
dec
pop
add
dec
lcall
inc
pop
or
inc
adc
inc
stc
stc
mov
fcomip
std
pop
jmp
jne
dec
jo
insb
je
test
loop
mov
fcmovne
ja
jg
dec
mov
ror
pop
jg
and
mov
lods
shr
adc
mov
cmc
call
out
inc
add
aam
add
cwtl
sbb
sbb
pop
or
iret
lea
sbb
pop
sub
lock
aas
cmc
popa
out
rolb
lcall
mov
sahf
sbb
inc
sets
sti
fcomps
les
cmp
fiaddl
jmp
and
push
push
jns
mov
shlb
push
cmpsb
test
ret
fcos
das
sar
xor
sub
aam
lcall
out
mov
mov
das
mulb
in
dec
les
in
test
push
cmp
xchg
or
dec
fwait
rclb
clc
inc
pop
mov
add
mov
add
pop
jmp
jns
pop
lret
jae
add
add
insb
push
in
mov
adc
in
call
jp
lret
pop
or
adc
shll
pop
adc
sahf
add
stos
or
lret
jecxz
xchg
xor
mov
adc
inc
push
mov
das
push
addb
es
push
sub
dec
rorl
mov
sti
mov
mov
adc
inc
or
mov
jle
faddl
dec
mov
mov
fldt
pop
incl
pop
shll
movsl
add
adc
jns
xchg
out
test
or
push
imul
push
pop
dec
pop
hlt
pushf
or
inc
std
les
outsl
cli
in
or
mov
fcoml
pop
stos
gs
fidivs
enter
xchg
movsb
popa
pushl
std
filds
pop
mov
std
shrl
clc
fcomps
inc
fwait
ljmp
nop
or
fstpl
xchg
xchg
add
adcb
jmp
iret
mov
flds
insl
fsts
iret
push
lret
cltd
stos
stos
ljmp
or
fcmovnb
dec
mov
and
aad
inc
inc
lods
inc
nop
inc
dec
add
mov
xchg
jne
mov
dec
pushf
sahf
mov
rorb
dec
incl
adc
ficomps
daa
cmp
daa
xor
rorb
shrl
add
xor
pop
lods
jbe
pop
lcall
mov
push
mov
mov
sub
push
sbb
push
clc
xchg
mov
daa
cmp
out
add
or
clc
orb
sarb
sub
add
lods
ret
jbe
test
jp
das
xor
sub
data16
mov
mov
or
or
imul
push
in
test
out
call
jmp
sbb
rclb
in
int3
stos
sub
into
in
mov
in
lret
clc
and
mov
clc
out
ljmp
add
pop
stc
int
add
mov
imul
mov
dec
pop
cmc
ficoml
test
call
rol
xchg
mov
cmp
rcl
push
mov
cmp
pop
movsb
cmc
shll
leave
hlt
cmp
int3
fdiv
adc
jmp
xor
sub
push
sbb
loop
cmpsb
incl
rolb
fwait
adc
int
and
inc
xor
nop
loop
shld
cld
mov
lret
addr16
fnstenv
mov
stos
add
pushl
mov
mov
cmpsb
sbb
dec
loop
add
inc
std
mov
cmpsb
fisubrs
pusha
sbb
inc
sub
lret
scas
jmp
test
push
scas
add
mov
sub
cmp
fimull
mov
push
out
mov
dec
out
lcall
out
lret
sbb
inc
or
pop
jl
cmpsl
mov
sub
mov
or
lcall
cwtl
in
rcr
push
cmpsl
jb
push
mov
add
lcall
call
fdivp
scas
and
pop
scas
bound
inc
sbb
xor
movsb
dec
dec
xor
lock
arpl
jo
add
out
lds
scas
les
jmp
xlat
adc
inc
imul
test
xlat
sub
adc
into
mov
insl
dec
adc
dec
loope
or
loope
cwtl
mov
cmc
add
popa
aam
adcl
leave
loope
xchg
adc
add
ljmp
faddl
sbb
push
xchg
push
xchg
in
mov
jg
je
pop
or
mov
xchg
pop
stos
pop
mov
scas
inc
push
pop
mov
popf
xchg
sub
jg
jge
cmpsl
into
nop
xchg
push
or
xchg
mov
out
xchg
bound
dec
sahf
lods
ret
fcom
dec
clc
stos
hlt
call
in
or
int3
lret
mov
sub
ljmp
mov
sbb
leave
adc
ja
adc
fidivrs
lock
inc
das
inc
nop
ljmp
fcomip
cmpsb
push
mov
push
mov
sbb
repnz
je
dec
or
pop
sub
fcomip
incl
notl
idiv
test
subl
cmc
int
mov
fbld
push
mov
adc
aaa
imul
inc
ljmp
aam
xlat
sbb
outsb
sbb
jbe
shrb
jle
inc
push
sbb
lock
ljmp
jno
xor
jb
jmp
adc
std
mov
decl
xor
out
mov
mov
scas
aas
push
iret
fmuls
icebp
or
push
ljmp
sbb
inc
add
pop
xor
xor
fimuls
movsl
inc
cltd
inc
aam
out
fimuls
pop
or
popa
fsubrp
mov
loope
adc
mov
decl
ljmp
sub
movsb
scas
push
inc
or
xchg
fsubrl
hlt
add
popa
and
jmp
daa
addr16
sub
bound
push
pushl
arpl
and
lret
int
push
sub
mov
mov
std
jae,pt
fdivs
call
stos
cmp
jge
pop
xor
imul
jne
inc
dec
push
hlt
cltd
and
lret
pop
lods
decl
mov
je
inc
int3
sub
cmp
sahf
dec
ja
addr16
lret
jne
decl
fnstsw
pop
int
xchg
outsb
fcoms
pusha
push
push
imul
ljmp
fptan
pop
std
outsb
dec
lret
xchg
cmpsb
push
repz
cld
sub
nop
gs
enter
ljmp
xor
and
push
add
mov
inc
fistps
push
add
jmp
es
testb
xor
jb
fmull
add
ds
cli
pop
mov
aad
xchg
xor
data16
mov
xchg
loop
filds
nop
lods
js
sub
inc
enter
pushl
outsl
inc
push
lea
adc
adc
sbb
sub
stos
mov
pop
loopne
jmp
jg
aas
xchg
push
sti
mov
mov
jmp
jb
mov
cmp
xor
inc
xor
fidivl
scas
sti
and
out
jb
add
jg
pusha
jb
out
clc
pop
sub
mov
ljmp
xchg
test
shlb
dec
jecxz
xchg
out
pop
push
pop
lock
call
pop
jns
or
sub
xchg
jmp
xchg
addr16
inc
daa
repz
sub
pop
dec
inc
and
repz
or
int
push
xchg
mov
sbb
xor
js
inc
mov
mov
loop
out
pop
out
jb
xchg
mov
pop
mov
clc
fists
push
dec
inc
sbb
jns
push
pop
push
ret
or
cmp
movsb
dec
add
inc
mov
ret
sbb
pusha
movsb
rcl
leave
inc
mov
faddl
scas
incl
rorb
add
pop
enter
push
xchg
and
dec
mov
mov
call
mov
rol
lret
stos
in
adc
or
jo
jo
aaa
cld
call
sbb
add
push
aaa
lods
xor
push
das
mov
daa
push
sub
ja
jmp
repz
add
orl
cmpsl
push
and
push
cmp
jo
mov
cs
jnp
clc
fistpll
cmp
or
clc
inc
adc
daa
cmp
pop
mov
sub
dec
jnp
jae
les
mov
inc
xchg
mulb
cmp
mov
pop
pop
fnsave
iret
jl
mov
add
pushl
out
xor
mov
mov
fnstcw
mov
loopne
bound
std
stc
adc
popf
into
imul
int
adc
fidivl
mov
repz
das
or
mov
cmp
hlt
inc
out
enter
mov
test
imul
aam
xchg
mov
pop
or
and
push
fsubr
fadds
inc
popa
cli
add
and
mov
mov
jge
jbe
xor
in
hlt
mov
xchg
mov
scas
xor
add
cltd
jns
sub
and
xor
xorl
mov
mov
add
add
adcl
jmp
sub
jecxz
out
mov
icebp
add
test
dec
add
push
add
ljmp
insb
inc
add
outsb
sub
rcrl
adc
ja
int3
cmp
dec
xchg
cmp
jmp
scas
mov
push
lcall
cltd
xor
out
mov
cld
ret
aas
lret
sub
mov
jge
cmp
add
sbb
pusha
je
push
or
sub
cmp
popa
inc
xchg
add
xchg
pop
and
xor
xchg
fs
add
push
mov
push
lcall
imul
add
and
subb
inc
add
inc
test
insl
add
or
xchg
sub
ljmp
and
pop
aas
js
jnp
stos
push
mov
cmc
hlt
shl
jbe
push
mov
notb
jnp
mov
push
jo
aaa
jbe,pn
fcomps
lcall
push
loopne
sbb
sub
mov
push
cmp
inc
pop
filds
dec
call
sbb
sub
dec
in
mov
call
mov
adc
scas
mov
in
fdivrl
repz
mov
mov
fidivs
add
push
jbe
fildl
push
sbb
ljmp
inc
sbb
rorb
lods
aam
jg,pt
call
je
fdivl
addr16
std
jnp
pop
mov
and
in
cmp
xchg
mov
shr
jmp
ret
mov
xor
adc
mov
cli
call
out
and
push
in
mov
and
insl
inc
adc
lcall
daa
in
inc
jmp
pushf
mov
sbb
pushl
sbb
je
cmp
ss
xor
add
test
and
decl
pslld
mov
push
and
cmpsb
cmp
mov
pushf
jb
sub
add
add
add
loope
mov
mov
pushl
aaa
std
add
inc
xor
lcall
jge
xchg
and
int3
mov
cmc
mov
add
dec
mov
orb
mov
cmp
mov
mov
sub
xor
fadds
xchg
pusha
mov
cld
and
je
roll
lds
xchg
push
popa
fs
cmpsb
pushf
stos
xor
jmp
leave
sub
xchg
cmpl
add
in
call
imul
xor
sbb
inc
sbb
in
sarl
adc
or
inc
pushl
adc
or
and
push
pop
mov
cwtl
ret
sub
decl
imul
aaa
cmpsb
js
outsl
adc
inc
xchg
xor
andb
jmp
out
xor
gs
adc
and
sub
stos
xor
sbb
dec
nop
jmp
loop
shlb
cmp
sbb
and
dec
mov
and
fmuls
insl
lea
cs
ljmp
or
incl
pop
cwtl
sub
cmp
inc
cmc
adc
or
mov
push
push
icebp
rcrb
mov
sub
ret
and
mov
add
bswap
sbb
les
add
shrl
pop
mov
es
jo
addr16
ret
adc
pop
ja
jnp
add
clc
call
mov
shl
fsubr
cmp
out
sbb
test
adc
adc
sub
jns
mov
incl
pop
xor
lds
or
js
aad
dec
popf
jl
call
fldt
repnz
insl
jle
neg
lahf
fsubr
jg
lret
mov
mov
and
orl
sbb
imul
movsl
inc
or
into
fcoml
or
imul
mov
cwtl
push
cmp
lcall
jmp
dec
add
aam
pushf
add
incl
fidivs
test
stos
jno
jns
fs
cld
mov
push
lods
ret
int
insb
dec
sbb
shlb
push
lods
cmp
jg
sub
mov
ret
adc
insb
sub
lcall
imul
sub
jp
mov
cmp
outsb
mov
cltd
jle
xchg
cmp
rol
xchg
incl
repz
test
mov
jbe
xchg
sbb
sbb
mov
mov
cmp
dec
push
push
fwait
sahf
xor
aas
mov
punpcklwd
mov
stc
cmp
inc
xchg
test
dec
inc
lret
imul
fisubl
xchg
mov
and
pushl
jns
clc
stc
push
test
and
ljmp
push
xor
sar
cmp
loopne
adc
movsl
xchg
and
or
pop
push
subl
pushl
clc
out
or
sub
jno
hlt
xchg
cvtdq2ps
sbb
inc
pop
dec
test
dec
xchg
jmp
movsl
cwtl
mov
insb
pop
clc
xchg
cltd
adc
pop
test
call
cld
cwtl
xchg
insl
stos
jb
cli
mov
mov
pushf
adc
push
stos
adc
add
movsb
incl
test
mov
jp
stos
fdivrl
xor
shll
fcmovb
fcoms
incb
lcall
xchg
leave
jp
fmull
adc
jbe
in
mov
ja
pop
decl
mov
add
pop
lret
lcall
icebp
test
scas
xchg
add
xorb
and
std
or
scas
dec
out
xchg
fcompl
ljmp
scas
xchg
jb
lods
shrl
repz
mov
test
sbb
add
movsl
and
sub
or
mov
incb
push
das
repz
push
adc
lcall
or
sub
or
outsl
dec
push
xchg
pusha
jmp
xor
sub
lcall
subb
pusha
xchg
fnstcw
and
mov
mov
adc
enter
xchg
shrl
lret
das
cmp
ret
imul
add
aam
push
xchg
loope
dec
lret
scas
call
xor
mov
pop
dec
pop
cltd
sub
jo
add
decl
and
xchg
xchg
xchg
pop
clc
xor
pop
lret
push
inc
les
std
daa
or
xor
mov
outsl
lods
mov
cmp
pop
or
adc
sar
cli
inc
cmc
movsb
lret
inc
jl
int3
daa
dec
push
stos
adc
shll
sub
leave
mov
call
rcr
jb
jae
adc
out
adc
inc
daa
pop
jo
fstps
mov
jo
jmp
or
pop
and
ret
mov
jge
add
cmc
pusha
inc
lock
sahf
out
addl
in
shlb
lcall
dec
in
push
shlb
push
int
fs
nop
call
push
cs
clc
mov
xchg
popf
mov
mov
jae
leave
imul
add
jl
mov
in
jmp
sbb
fiadds
inc
push
and
test
mov
fcomip
cmc
mov
iret
jb
mov
loope
dec
or
jnp
pop
push
pop
push
adc
decl
pop
jecxz
fwait
ds
bound
cld
inc
or
lea
push
test
aam
sar
call
rorl
in
cmp
or
jp
lcall
stos
mov
cmp
mov
mov
shrl
push
or
push
dec
push
lea
jmp
fnstenv
ds
sub
mov
fisttps
divb
push
mov
add
fists
stos
or
loop
xor
xchg
add
sub
fwait
pushl
loop
mov
adc
push
jno
pop
sbb
sbb
clc
mov
loopne
mov
cld
incl
xchg
mov
push
cwtl
arpl
pop
cmp
bound
lcall
xchg
fwait
push
xor
pop
lea
lcall
rcrl
std
or
roll
pushl
adc
ljmp
lahf
mov
and
not
dec
sub
inc
jmp
decl
mov
daa
add
outsb
mov
loop
mov
pushf
in
call
enter
std
and
mov
pop
jmp
or
xchg
loop
inc
test
xchg
cltd
lcall
cmp
mov
xor
negb
inc
jns
fwait
pushl
jmp
mov
popf
into
push
clc
jmp
push
xchg
flds
orb
aam
mov
mov
lods
xor
sub
jae
out
xchg
test
jne
incl
mov
fucomip
dec
xchg
loope
enter
nop
mov
pop
iret
fcomip
fcmovnbe
loopne
xor
cli
push
dec
sbb
sub
and
ret
mov
adc
sbb
repz
xor
outsb
mov
lods
cmp
jg
pop
movsl
test
cmp
and
in
dec
pop
and
xor
call
mov
insl
imul
sbb
push
jb
pop
push
and
decl
and
shrb
mov
das
int3
sbb
adc
outsl
sub
ljmp
mov
inc
int
int3
lcall
test
ret
bound
push
lds
or
cwtl
dec
push
rcll
push
inc
testl
out
decl
dec
sub
lea
lock
or
mov
lock
lods
pushl
stos
inc
push
mov
insb
xchg
je
jmp
mov
sti
nop
fs
lds
loopne
dec
call
lods
mov
ljmp
mov
fucomi
iret
les
daa
or
push
inc
jmp
outsb
pushf
inc
add
ljmp
leave
pop
addb
push
decl
add
inc
lds
and
add
lahf
or
mov
pop
cld
pushl
adc
lret
mov
sub
mov
mov
hlt
inc
lret
sub
repz
mov
xor
loope
mov
fnsave
lock
mov
insb
es
in
jmp
test
mov
sbb
incl
or
out
popa
mov
adc
mov
or
icebp
inc
scas
dec
sub
xchg
cmp
pop
je
arpl
mov
or
divl
fcomip
lods
adc
ds
xor
jmp
jp
lcall
cwtl
cmp
lea
adc
mov
mov
out
iret
inc
data16
fisubs
push
push
fs
leave
dec
inc
and
or
push
sar
jmp
cmp
aaa
cmp
hlt
add
jb
lock
add
insb
leave
pushf
sub
call
mov
fiadds
and
mov
dec
mov
ret
mov
jno
fcomip
pushl
jo
and
test
test
inc
hlt
add
adc
incl
stos
into
movsb
test
imul
dec
xchg
or
sbb
xchg
aam
stos
rcl
movsl
out
pusha
ds
pop
or
mov
or
xchg
push
jmp
or
push
clc
enter
lock
or
jmp
jp
call
scas
aad
nop
sbb
ret
mov
jle
adc
cmp
lcall
iret
or
ret
imul
xchg
push
hlt
push
icebp
incl
outsb
sub
xchg
jmp
fcmove
int
lock
test
sbb
out
je
add
out
adc
leave
sub
mov
sar
pushf
jb
outsb
mov
int3
dec
das
sub
xchg
add
pushl
sbb
xchg
icebp
add
ljmp
repnz
pusha
cmpsb
xchg
cwtl
or
pop
icebp
lcall
lods
or
cmpsb
sub
lods
sarb
neg
xor
pop
das
divb
cmc
dec
mov
rcrb
or
jb
xchg
pop
test
xor
cmpsb
pop
int
notl
mov
aam
xchg
pushl
and
xor
and
jb
xchg
inc
xchg
ss
cmp
ror
roll
pushl
dec
stos
and
test
loopne
dec
mov
adcl
jle
ss
adc
insb
jo
jmp
add
add
imul
push
mov
ljmp
lock
jno
push
and
push
hlt
jmp
jl,pn
sbb
cmp
pop
stos
push
xchg
jmp
mov
push
fstpl
xchg
or
out
add
shll
test
movb
xor
xchg
xor
inc
and
jmp
sbb
lea
or
sbb
sub
add
decl
mov
or
cs
cmp
xchg
push
dec
inc
and
mov
clc
push
pop
addr16
ljmp
mov
lea
test
sahf
jo
inc
xor
add
fwait
test
cmpsl
test
call
xor
xchg
or
cs
xchg
jg
sbb
test
mov
and
push
jno
adc
pop
pushl
insb
inc
cmp
imul
and
sub
adc
cmpsb
movsl
out
inc
sar
dec
test
sub
and
lods
push
cli
cmp
sub
cmp
cmp
loopne
add
dec
dec
dec
je
jg
sar
decl
cmp
es
subb
rolb
mov
xorb
jae
decl
and
mov
into
loop
push
dec
cwtl
cmp
sbb
jne
jae
push
jle
inc
pusha
mov
cmp
push
push
push
pop
inc
sub
cmp
decl
mov
mov
aaa
and
out
aad
add
mov
imul
ljmp
das
je
dec
das
xor
push
enter
pop
cmp
xchg
hlt
incl
pusha
sub
xchg
or
imul
cli
popf
mov
sub
mov
mov
mov
or
pop
pop
inc
dec
pop
imul
daa
sbb
decl
lods
shlb
mov
xlat
mov
jo
mov
mov
mov
ljmp
cmpsl
inc
sahf
popa
mov
mov
shlb
dec
inc
sub
fcmovne
mov
iret
cwtl
mov
mov
jbe
in
mov
ljmp
fsub
dec
bound
call
mov
data16
scas
sub
lods
jns
cmpsb
mov
dec
mov
xchg
inc
clc
jg
int3
mov
inc
jbe
call
fstl
pop
mov
sahf
stos
or
cmpsb
das
pushf
daa
dec
insl
aam
xor
cwtl
mov
jnp
jnp
rcrl
lret
or
fnstcw
jne,pt
cwtl
fcmovb
mov
lcall
mov
lret
movsl
js
adc
add
pop
xchg
jmp
mov
pop
inc
mov
sahf
popf
jo
and
mov
inc
ds
mov
mov
inc
decl
xchg
das
or
mov
pushl
sub
pop
mov
test
lea
aas
pop
jns
dec
push
test
pop
jno
lcall
adc
pop
mov
xchg
aam
fld
in
ljmp
mov
push
jb
ljmp
popf
sub
lea
popa
imul
mov
pop
xor
nop
scas
lret
nop
dec
push
jecxz
jg
pop
cwtl
adc
mov
test
push
addr16
cwtl
int
in
push
adc
xchg
cmp
add
mov
inc
xchg
ljmp
loopne
adcl
jecxz
mov
adc
and
daa
and
loop
adc
xchg
pop
jp
clc
mov
int3
fwait
cmp
jle
pop
test
fs
or
mov
sar
ljmp
and
sub
cmpsl
dec
sahf
imul
call
lret
popa
mul
inc
stos
pop
or
daa
push
xchg
pop
insl
push
sbb
mov
dec
mov
mov
pop
mov
and
das
inc
mov
dec
mov
rol
call
and
sbb
xor
dec
xchg
mov
lret
xchg
xor
mov
fbld
push
jae
mov
das
mov
adc
sbb
ja
in
lods
cmp
incl
dec
pop
mov
in
cmp
and
sbb
sbb
mov
mov
push
iret
js
jge
ja
fadd
cmp
dec
push
mov
jnp
jge
stc
hlt
lock
in
into
test
adc
and
mov
pop
lock
rol
xchg
rcr
hlt
nop
dec
mov
xor
xchg
add
dec
cli
push
sub
daa
xchg
push
or
adc
filds
mov
inc
call
sbb
lock
movsb
adc
les
jle
pushl
sub
cwtl
push
push
dec
push
cltd
push
xchg
arpl
ss
gs
and
mov
cld
jmp
dec
mov
and
sub
pop
jbe
xlat
mov
jle
xchg
cwtl
push
scas
test
insb
sbb
cld
fists
cmc
fsts
sbb
push
add
sbb
mov
stc
jmp
mov
ljmp
test
mov
add
aaa
imul
cmpsb
xchg
push
sub
or
pushf
jo
xchg
ficompl
and
sbb
sbb
xchg
fldl
fdivs
ljmp
cli
out
js
mov
stos
neg
jns
mov
adc
inc
add
decl
sti
in
xlat
pusha
pusha
adc
push
pusha
lcall
mov
push
pusha
iret
lret
nop
fildl
movsb
dec
push
repnz
cs
mov
jmp
popa
mov
cmpsb
hlt
popa
mov
imul
repnz
xchg
pop
mov
insb
lock
mov
mov
inc
add
enter
sahf
xor
sbb
outsl
std
mov
xchg
insb
insl
adc
xchg
cli
jle
xchg
mov
decl
push
push
jle
cmc
mov
push
jl
enter
jne
call
pop
into
cmp
enter
out
imul
dec
aam
sub
in
rorl
int3
lock
mov
shlb
mov
fstl
mov
cmpsl
addr16
lcall
or
fistl
mov
ljmp
je
scas
incl
scas
mov
jle
pop
insb
mov
iret
rolb
jl
push
cmp
pushl
jle
popf
and
inc
jg
movsb
adc
and
mov
aad
scas
call
and
insl
pop
mov
mov
push
das
mov
pop
sti
inc
mov
call
xor
push
adc
lret
cmp
cmp
jmp
inc
xor
cld
adc
mov
inc
call
mov
inc
adc
jnp
or
outsb
repnz
scas
lds
loope
pop
lret
dec
movsl
icebp
xor
cmp
iret
or
cltd
push
push
add
jmp
movsl
and
pop
fs
test
cmp
rolb
ljmp
stos
bound
pop
add
stos
cmpl
ss
mov
pop
outsb
pusha
jecxz
out
ljmp
lock
in
in
push
jl
into
jnp
xor
inc
cmc
dec
pop
xchg
pushf
mov
mov
lock
mov
push
mov
push
pop
pop
xchg
lods
mov
dec
xchg
lods
adc
movsb
cmc
pop
cld
pusha
xchg
mov
stos
push
in
outsl
psllw
or
and
or
ljmp
sub
faddp
insb
movsb
pop
stos
and
orl
mov
push
xor
in
push
pop
movb
adc
incl
aas
push
cltd
lods
lds
pop
jo
dec
fistpll
mov
jmp
movsl
jg
or
test
and
fcom
xor
pop
dec
call
dec
xor
insl
inc
dec
or
push
call
sub
shrb
in
xchg
sub
pop
and
or
adc
decl
push
adc
in
insb
rclb
lcall
xchg
xchg
cmp
pop
loopne
fbstp
daa
popf
enter
mov
inc
mov
sub
pop
pop
stc
xchg
xor
inc
shlb
int3
mov
push
imul
repnz
pop
movsb
and
and
ljmp
pop
push
dec
out
jecxz
cmp
cmp
jns
sub
leave
in
xor
shl
push
sub
mulb
sahf
cli
hlt
cmpsl
inc
or
pop
insl
loopne
push
daa
or
lea
cmpsb
cmp
lcall
push
jge
adc
cmpsl
jge
inc
push
sbb
inc
stos
pusha
int
mov
ljmp
rolb
lret
xor
mov
adc
lret
push
in
es
inc
push
pop
ljmp
ret
int3
sahf
push
test
ret
xor
pop
orb
sub
aad
test
xor
xchg
mov
cli
sbb
push
sbb
movsb
mov
and
pop
fwait
data16
sub
test
or
adc
stos
dec
jge
lcall
mov
jecxz,pt
sub
stc
push
cmp
sbb
loop
mov
lahf
enter
sub
ljmp
mov
movsb
inc
adc
movsb
inc
mov
jne
inc
xor
dec
adc
call
push
push
pop
scas
jbe
push
push
xor
fcmovnbe
pop
loopne
scas
adc
pop
std
decl
repz
std
and
movsl
negl
adc
rcll
mov
sub
call
jnp
pusha
mov
in
imul
adc
add
add
lahf
rcl
aaa
dec
les
add
or
cld
ljmp
xchg
shrl
add
pop
movsb
add
inc
cmp
mov
pusha
adc
add
and
xor
fcomip
xchg
xchg
push
je
js
addr16
xchg
xchg
sbb
adc
stc
lods
sub
repnz
xchg
or
xor
or
jns
xor
out
pop
adc
mov
xor
decl
movsl
and
mov
pop
dec
lret
adc
lret
xor
fidivl
sbb
fsubl
pop
sub
subl
sbb
adc
fs
sbb
dec
sub
push
outsl
sub
jmp
mov
repz
mov
stos
mov
mov
pushl
adcl
inc
mov
dec
out
in
jbe
xlat
jae
loope
test
inc
cmp
pop
sar
cmp
imul
out
fsts
movsb
in
xlat
clc
js
cmpsb
loopne
out
js
bound
out
out
jge
sti
xlat
jmp
fwait
jmp
xor
inc
cmp
sbb
incl
ret
or
shl
add
iret
fwait
push
mov
rclb
incl
push
icebp
sbb
push
adc
sbb
imul
adc
fidivrs
sbb
nop
push
gs
int3
pop
dec
std
push
std
lock
rorb
roll
lahf
inc
sbb
sub
push
outsb
xchg
aad
sarb
xchg
xlat
loopne
cwtl
pop
int3
inc
ret
enter
out
dec
or
popa
mov
mov
imul
xor
shrl
pop
push
gs
mov
inc
mov
shll
cmp
rcll
pop
mov
sbb
fisttpl
outsl
sbb
rcr
aam
movsb
push
jnp
stos
sub
icebp
xor
cmp
sbb
jg
negb
pop
dec
cmp
je
lret
shll
push
leave
push
mov
in
adc
mov
inc
loop
sub
lahf
jmp
in
inc
loope
call
clc
jbe
cs
repnz
pop
fwait
or
icebp
cwtl
xor
repnz
pop
or
cmpsl
push
ret
decl
add
and
jno
cmp
push
dec
jno
mov
movsb
loope
imul
sbb
icebp
cmpsl
pop
or
movsb
test
pop
shlb
rorb
aaa
outsl
repnz
dec
jle
imul
mov
ljmp
mov
xadd
or
mov
dec
or
xor
addb
fdivr
incl
mov
imul
test
test
jle
adc
mov
pop
xchg
cmp
pop
pushl
lds
adc
sub
jge
xor
mov
popf
push
sbb
and
filds
fs
cmpsb
and
cmpsl
subb
lcall
repnz
sub
dec
mov
aaa
testb
inc
hlt
adc
mov
decl
and
call
inc
ds
movl
andb
idivl
or
adc
insb
sbb
jp
aad
mov
js
or
push
fisubl
sub
jnp
push
out
cli
incl
inc
ljmp
and
mov
shlb
divl
incl
outsb
pop
cmpsl
xor
cmp
and
hlt
xor
add
jbe
hlt
decl
mov
popa
sti
mov
lock
jg
decl
pop
test
call
jae
cmp
mov
arpl
xor
xlat
bound
or
inc
add
testl
add
pop
sar
mov
cwtl
mov
mov
pop
add
pop
bound
punpcklbw
xorl
mov
pop
mov
cmpb
imul
cltd
addb
dec
inc
sbbl
adcb
jbe
daa
je
mov
ljmp
push
pop
xchg
mov
jb
sbb
cltd
cmc
push
mov
pop
or
rolb
stos
rol
lahf
les
ljmp
stos
push
pop
in
dec
xlat
jno
sti
les
push
pop
mov
push
incl
lods
movb
in
dec
jmp
jae
js
cmp
leave
pop
lcall
shrb
mov
imul
dec
aam
scas
pop
mov
mov
jp
daa
jnp
rclb
adc
out
or
jl
popa
inc
into
push
mov
inc
cmp
mov
pushf
cwtl
inc
in
pop
cwtl
mov
call
mov
jl
push
xor
repz
lods
test
nop
xor
push
sub
cwtl
push
adc
mov
cmp
pop
or
call
cmp
add
orl
out
cli
lcall
imul
lret
dec
inc
nop
and
decl
adc
adc
push
jnp
push
xchg
clc
mov
add
pop
shlb
jae
inc
cmp
cltd
inc
out
xor
and
nop
mov
mov
push
push
iret
and
pop
sub
nop
or
cmp
loopne
sub
or
add
test
cld
ja
rorb
dec
xor
jne
inc
xchg
jg
add
mov
pop
sbb
or
dec
jg
xchg
divb
mov
leave
shll
jp
push
sub
mov
xchg
jbe
incl
cld
call
les
rcrl
xchg
cmp
in
inc
sub
hlt
inc
aad
jns
cmp
inc
inc
xchg
xchg
test
incl
pop
mov
dec
and
loopne
dec
mov
xor
mov
jne
lea
incl
fsubs
push
repz
icebp
push
sub
cmpsl
push
mov
movsl
jmp
insl
sub
inc
es
call
xchg
and
add
cmpsb
sbb
xorb
aaa
sub
andl
incl
mov
ror
mov
cmpsl
jne
mov
clc
cltd
xchg
idivb
push
mov
push
push
fwait
push
bound
push
cmovs
pop
dec
loope
imul
lock
jle
push
pushf
push
mov
rol
jmp
adc
ljmp
pusha
sahf
jo
jg
mov
xlat
pop
add
lcall
dec
inc
sahf
fildll
mov
sahf
std
sar
orb
dec
jno
pop
and
cmp
test
mov
inc
cmp
xchg
dec
pop
mov
int3
popf
push
icebp
jg
ret
mov
in
add
jmp
xchg
ja
test
push
dec
popa
push
cmpsb
hlt
decl
inc
popf
xchg
aaa
ds
out
aam
inc
clc
ljmp
pop
dec
xor
fstl
push
xchg
aaa
pop
ret
xchg
xchg
dec
add
aaa
or
loopne
pop
mulb
inc
mov
push
xchg
pop
mov
and
xchg
push
dec
cmp
xchg
movsb
pusha
sub
loop
adc
xchg
pop
sbb
lret
mov
xor
out
daa
push
lock
es
mov
dec
and
je
cld
jmp
fistpll
inc
mov
dec
dec
jp
mov
pop
cmpsl
js
bound
cmpb
cwtl
mov
test
bound
call
add
pushf
jnp
dec
mov
jno
sbb
mov
sti
divb
nop
test
stos
add
jmp
pop
out
cli
incl
pusha
rorb
lock
leave
jo
mov
push
push
dec
mov
dec
sti
sub
ljmp
lret
xor
addr16
xchg
out
xchg
mov
lahf
das
test
xor
pop
xorb
pop
and
sub
leave
sbb
scas
mov
incl
lds
push
push
xor
sbb
mov
jmp
sub
jns
mov
es
xchg
flds
xchg
xor
dec
call
add
cmc
mov
xor
add
ss
adc
push
pop
cmp
adc
incl
shll
lds
xchg
push
icebp
mov
jnp
in
lret
inc
sqrtps
jmp
inc
pop
repz
clc
test
push
add
mov
mov
inc
cmp
inc
cwtl
dec
and
push
inc
out
sarl
dec
mov
stos
es
testb
inc
push
or
inc
mov
inc
jg
inc
test
fwait
in
inc
pusha
popl
pop
jb
pusha
or
xor
shrl
sahf
andb
loopne
sub
xchg
mov
das
jp
and
xor
mov
pop
xor
stc
sub
ljmp
lahf
inc
xor
sub
xchg
jne
jge
fbld
into
pop
sbb
pop
fistpll
sbb
out
sbb
sub
xchg
xchg
inc
and
dec
sub
test
jg
dec
pop
mov
sbb
push
mov
dec
rcll
xchg
mov
decl
nop
scas
jns
pop
ret
add
imul
push
mov
lcall
add
movsb
sbb
inc
jge
pop
inc
and
decl
movsb
cld
pop
jb
jo
adc
loop
mov
push
ret
mov
and
push
xchg
push
xchg
push
xchg
push
sub
sub
aam
cmp
adc
jl
inc
dec
stc
imul
jmp
cmpsb
add
dec
mov
cmp
rorb
enter
or
and
scas
in
mov
pop
adc
add
test
mull
dec
lock
xchg
mov
fwait
jnp
iret
out
jne
ret
mov
nop
pushf
jp
fildll
inc
data16
sub
ljmp
testl
out
lods
mov
push
or
mov
aam
ljmp
cli
lcall
inc
pop
sbb
or
adc
test
dec
add
jl
test
push
dec
adc
xchg
add
mov
movsb
inc
pop
inc
decl
in
test
sub
movsb
movsl
movsl
inc
pop
push
jp
pop
jl
inc
mov
mov
jmp
xchg
and
aam
mov
fsubrs
test
cmp
mov
rorl
sbb
arpl
dec
clc
add
pushf
jmp
dec
xor
mov
push
xor
int
or
sub
pop
inc
or
push
xor
lcall
lcall
dec
nop
test
cmp
xor
pop
jmp
sbb
push
cmp
int3
or
and
ret
dec
test
push
call
or
aam
xchg
cmpsl
mov
inc
lock
mov
fimull
mov
clc
fcomi
cmp
xor
or
add
ffree
aaa
cmp
mov
jg
sbb
xor
xchg
or
and
js
lea
push
jo
or
mov
pushl
call
xor
dec
add
and
fildll
pop
inc
xchg
imul
adc
jno
cmp
ret
lret
in
or
mov
jmp
mov
xor
adc
je
ljmp
clc
xchg
lods
or
xor
jno
jp
mov
ficoml
mov
or
ljmp
in
push
std
mov
mov
incl
insb
clc
mov
in
dec
aam
sub
out
mov
aam
cwtl
pop
je
lcall
cmp
insl
xchg
xor
sbb
jnp
icebp
pop
pop
nop
mov
leave
das
test
jo
or
inc
cld
push
lods
add
mov
loope
xchg
fdivs
fs
call
inc
xor
xchg
repz
data16
mov
ljmp
inc
sub
pop
sbb
cmp
jl
sub
imul
in
lds
jmp
jo
push
xchg
adc
and
bound
movsl
pusha
and
ds
inc
repz
mov
pop
in
add
cmpb
or
idiv
push
sub
mov
iret
pop
addb
xor
leave
add
or
rorb
es
rcl
push
stos
stos
icebp
mov
nop
mov
xor
inc
add
movsb
imul
call
les
mov
ret
hlt
mov
rcl
out
xor
jg
mov
lds
in
pop
mov
movnti
mov
push
sub
fstpl
je
inc
setle
inc
or
test
jbe
fsubrl
inc
adc
cmp
pop
sbb
lcall
push
pop
sub
cli
mov
xchg
leave
dec
or
xor
dec
popa
leave
jl
cmpsb
mov
jecxz
or
cmp
inc
adc
pushf
in
mov
ret
and
jg
cld
pushl
jo
mov
aad
mov
mov
arpl
mov
add
lcall
call
rcr
jl
mov
pushl
je
jge
mov
cmpsl
push
cli
repz
sbb
xchg
inc
ljmp
clc
int3
lds
into
cmpsb
lods
call
jnp
adc
push
jmp
xor
test
sbb
mov
jne
sub
dec
pushf
idivb
pop
lods
mov
pop
loopne
add
lret
les
mov
les
pop
push
push
mov
incl
vmulpd
decl
push
adc
in
mov
decl
sbb
pop
dec
sub
dec
sub
mov
dec
int
out
xor
test
ffreep
pop
xor
jg
scas
ljmp
clc
mov
mov
pop
sub
pop
jo
inc
gs
sub
cmp
jmp
push
xchg
lods
retw
movsl
les
and
mov
cld
sbb
cld
fcomip
outsl
push
add
push
scas
sbb
iret
mov
lahf
cmp
adc
sar
fistpl
fsubs
inc
ds
cmp
aad
int3
mov
dec
sub
repz
fistpll
cmpsb
addr16
loopne
push
lahf
adc
mov
xor
lcall
xor
and
lds
arpl
inc
cld
mov
dec
lods
jge
and
xchg
nop
push
mov
jg
pop
adc
xchg
out
and
enter
das
jo
insb
mov
xor
incl
adc
test
sbb
stos
pop
xchg
ds
aad
push
das
pop
adc
inc
dec
mov
popf
idiv
es
cmp
mov
in
jmp
in
fs
orb
fdivrl
mov
fbstp
pop
pushf
mov
and
cmpsb
sub
sub
lcall
push
jae
or
ljmp
pop
mov
or
ljmp
inc
fcomi
fisttpl
jo
out
shlb
aas
loop
jmp
mov
push
or
int3
fdiv
sbb
add
adc
mov
out
jbe
enter
fcmovnb
xor
mov
adc
insb
push
mov
dec
push
cmp
stos
pushf
das
cmpl
xor
push
dec
shrb
inc
add
popf
xabort
sar
ljmp
push
jo
add
adc
xorl
or
jb
and
mov
imul
mov
call
inc
or
les
lods
cmp
adc
mov
adc
pop
icebp
aas
sbb
jnp
inc
adc
adc
push
rcrl
and
subb
and
inc
push
push
inc
lea
lods
add
ljmp
shll
shrb
sub
or
cmpsl
xor
dec
stos
mov
mov
xor
stos
call
stos
add
xchg
mov
dec
xor
push
and
sub
push
push
and
je
inc
mov
dec
daa
popf
jbe
ljmp
repnz
sub
es
incl
std
push
shrl
dec
lea
ficoml
shlb
test
gs
es
mov
push
dec
jmp
mov
hlt
out
fimull
jbe
ds
and
mov
test
ljmp
mov
sbb
xchg
xor
jmp
mov
ret
xor
scas
add
test
pop
jae
fwait
push
mov
mov
mov
call
or
loopne
in
js
dec
mov
ss
repz
faddl
sahf
sbb
decl
cmp
enter
repnz
pop
jmp
das
inc
cli
loope
lcall
or
adc
dec
xchg
add
fwait
rcl
jns
pushf
jnp
rcr
filds
xchg
mov
call
xor
push
mov
jmp
inc
xchg
xchg
icebp
lcall
xchg
pop
pop
dec
sub
sbb
sub
out
lret
inc
xchg
push
mov
int
stos
dec
lods
clc
inc
iret
mov
push
jecxz
sti
outsl
mov
decl
sbb
rorl
cmp
ret
or
js
push
fcomip
xchg
cmp
lret
jb
in
pop
jb
and
sbb
adc
nopl
fsubrl
mov
jne
js
popf
jne
push
inc
enter
call
push
mov
lock
bound
rcrl
push
je
in
popa
stc
in
push
je,pt
fwait
mov
add
sub
mov
adc
decl
pop
mov
aaa
pop
jl
rcl
mov
in
addl
and
dec
xor
sub
incb
shll
ja
push
pop
imul
fisubl
push
xchg
mov
xchg
leave
call
insb
cwtl
test
decl
stos
sub
lcall
xor
and
cmp
pusha
cmpsb
mov
fdivrs
popa
iret
jmp
mov
call
loope
mov
loope
lods
cmp
stc
loope
add
add
and
and
inc
out
test
out
lret
jmp
lret
xrelease
loopne
add
ret
cmp
add
enter
cltd
orl
fs
loopne
add
imul
sub
mov
and
sub
xor
xchg
xor
mov
or
fstl
mov
lret
mov
test
imul
pop
sarl
push
clc
decl
dec
xchg
rclb
cltd
lea
ja
jp
sbb
bound
or
dec
test
xor
pop
test
add
and
or
xchg
rorb
ret
jno
pop
pop
jo
adc
or
leave
lcall
incl
adc
int3
adc
lret
in
xorb
flds
int
xor
jg
or
or
fsubs
cli
rolb
loopne
daa
add
pushl
cld
mov
add
dec
aad
outsb
jne
test
dec
push
aad
popf
mov
popf
cmpsl
cmp
ret
cmp
and
fists
or
mov
pmaxub
movsl
xor
and
outsb
subb
jmp
mov
sub
add
add
dec
push
mov
movsb
mov
cs
fdivr
incl
cmpsb
jbe
imul
cmpsl
shl
add
daa
xor
clc
decl
call
or
xchg
std
mov
mov
inc
popa
jns
lds
mov
pop
mov
imul
loopne
jl
int
shlb
mov
ljmp
in
ss
dec
or
inc
loopne
push
pusha
jb
into
mov
dec
lods
cmp
mov
push
sbb
and
ret
inc
shlb
mov
in
mov
jmp
in
adcl
cld
nop
sub
xchg
sub
pop
inc
in
push
data16
jo
xor
and
rol
pushf
dec
jl
and
and
jg
inc
call
or
mov
and
mov
push
xorl
inc
adc
daa
adc
push
inc
jmp
fldenv
lea
inc
das
mov
fsubs
mov
and
imul
adc
stos
pop
repnz
leave
jg
push
push
mov
stos
push
lret
cmp
add
decl
cmp
pminsw
push
enter
sti
pop
xchg
sahf
nop
add
add
decl
jl
aaa
clc
rorl
int3
pusha
jl
and
adc
push
or
ret
sbb
xor
subl
mov
ret
das
out
in
enter
sub
shlb
xor
ret
ret
fsubrs
adc
adc
add
fxch
test
push
add
or
pop
fimull
push
cld
jg
jmp
sbb
rolb
push
in
dec
cmp
jg
or
bts
and
bound
xor
lcall
xor
mov
ret
inc
ret
pop
or
pop
sti
ljmp
jp
repz
negl
pop
jmp
mov
ficoml
mov
sbb
popa
loop
push
add
dec
xor
cli
mov
inc
push
fcoml
ret
shrb
mov
adc
xor
shl
mov
cmpsb
daa
push
push
adc
decl
insb
mov
lcall
mov
pop
pop
cmp
loop
arpl
test
pushl
pop
and
and
stos
sub
mov
hlt
inc
pop
push
subl
mov
inc
inc
push
push
enter
inc
xor
movaps
push
xchg
scas
sub
push
into
mov
decl
loopne
lods
inc
push
pop
pop
mov
sbb
fidivrl
outsb
pop
aas
push
aaa
xchg
adc
pushl
ds
adc
movsb
mov
inc
mov
dec
push
pop
sahf
or
sub
xchg
push
cmpsb
fcoml
pushf
out
cli
jmp
cwtl
sti
add
jo
movsl
cs
into
dec
bound
jae
jle
adc
lock
cmp
mov
add
lea
lahf
pop
fucomp
adc
cltd
push
mov
inc
mov
cmp
jmp
or
enter
testl
lock
sbb
pop
out
clc
call
xchg
in
sbb
jle
jo
mov
incl
push
mov
add
sbb
filds
cmp
lea
add
addr16
mov
mov
in
shl
lret
pop
mov
ljmp
insb
insl
imul
fcmovbe
movsl
jo
jge
insl
jp
cltd
repnz
scas
jp
xchg
ret
ljmp
pop
loopne
xchg
mov
sub
sbb
addr16
xchg
push
mov
movsl
pop
ret
push
cmp
mov
mov
mov
pop
mov
ja
push
fnstenv
decl
dec
jge
jno
inc
cmp
mov
xchg
xor
int
jp
das
lock
lret
fdivrs
out
cli
les
xchg
mov
jns
lcall
imul
cmpb
sub
xor
ljmp
inc
push
sbb
orl
xor
cmp
mov
nop
pop
or
adcb
jnp
sub
xchg
cmpsb
adc
fldt
pushl
push
lret
sub
scas
mov
cmp
xchg
lods
mov
popl
jl
xchg
test
adc
leave
movsb
daa
cltd
movsb
in
inc
fwait
mov
scas
daa
test
mov
jg
adc
mov
mov
repnz
xchg
ret
adc
pop
sub
clc
xchg
das
push
add
adc
inc
xor
mov
cmp
push
das
xor
sub
sbb
aaa
js
insl
adc
ret
pop
jo
dec
cmp
incl
cmp
xchg
mov
sahf
cmp
inc
dec
sbb
dec
mov
test
mov
jae
std
mov
mov
xchg
xchg
ret
orl
adc
dec
pushf
push
js
je
adcl
xor
incl
cmp
jne
add
or
and
test
addb
mov
mov
xor
inc
add
lcall
cmp
xor
add
pop
dec
sub
ljmp
fadds
inc
imul
sbb
pop
lock
sub
inc
jno
mov
decl
enter
mov
cmp
jg
mov
push
pop
add
rolb
ret
mov
nop
mov
pushl
mov
xchg
mov
push
or
inc
mov
das
push
cmc
xchg
or
or
sub
adc
pop
test
ljmp
fdivrs
mov
push
jle
stos
jmp
xchg
pop
sbb
out
sbb
fs
jmp
leave
adc
cli
ljmp
orb
js
repz
add
cltd
insl
mov
das
call
shlb
dec
push
cmp
leave
cwtl
test
sbb
mov
xor
mov
cli
fsubl
gs
dec
adc
pop
insl
push
sub
cs
ljmp
fadds
sbb
xchg
cs
jns
call
inc
adc
and
ja
dec
mov
and
fldcw
sub
out
inc
loop
sbb
and
pop
rclb
shrl
pop
icebp
xchg
mov
mov
fs
jnp
add
test
jmp
pusha
xor
jbe
inc
cld
pop
cmpsb
adc
cmp
rolb
push
mov
adc
mov
mov
pusha
push
imul
pop
adc
push
insb
sub
jnp
xchg
mov
sbb
loope
test
enter
test
or
sub
loop
cmp
xor
xor
outsl
fdivrs
mov
lock
push
dec
lds
xor
mov
loop
adcl
sbbl
sbbb
fbstp
or
es
add
xorb
add
pop
cmp
jecxz
inc
jge
adc
mov
push
mov
imul
pop
outsl
add
in
or
cmpb
shlb
call
aaa
mov
mov
jo
rorb
sbb
mov
loop
lock
sub
std
ja
clc
xor
xchg
popa
cltd
mov
and
and
lret
loop
jnp,pt
or
test
push
mov
test
dec
or
ljmp
std
xor
xor
mov
sub
leave
out
cmp
lcall
push
ss
push
pushf
fcompl
sbb
pop
sub
xorb
and
cmp
dec
mov
sub
mov
insb
push
xchg
adc
sbb
lcall
add
aaa
adc
xchg
and
lret
imul
or
sub
ljmp
cli
push
or
pop
into
ds
mov
sbb
push
inc
orb
cmp
cld
and
ret
or
out
mov
cwtl
decl
mov
mov
and
fmull
subl
or
ja
ja
xchg
mov
lcall
loope
rcrb
or
movb
push
add
stos
insb
in
punpckhbw
or
fxch
push
adc
push
fisubrs
xchg
push
nop
les
call
pop
or
cmpl
fs
mov
adc
mov
call
das
negb
jmp
insb
cwtl
movsb
icebp
mov
inc
lds
xor
cltd
or
lcall
js
mov
and
pop
and
rolb
or
sbb
xchg
inc
add
in
sub
cmp
out
push
mov
ja
xchg
clc
mov
fisubl
xor
or
pop
mov
and
add
outsl
shlb
add
cmc
add
xchg
cmp
xor
out
add
enter
dec
adc
pop
jns
aam
mov
mov
jb
sub
js
cs
clc
mov
jns
pushl
and
xor
sbb
or
push
out
sti
xor
cmp
mov
cmp
pop
bnd
icebp
xor
sbb
in
cmp
sarl
imul
xchg
clc
sbb
and
cltd
add
or
xlat
jns
or
pop
adc
mov
push
mov
push
fsubrl
mov
lret
push
insl
es
jg
mov
fisubs
shlb
mov
inc
add
pop
and
movsb
sub
cmp
stc
inc
ret
sbb
mov
mov
out
push
int3
mov
mov
int3
movsl
loop
lods
mov
lds
loop
jns
inc
xchg
or
xor
cmp
add
adc
mov
in
mov
enter
cmp
cld
push
mov
jo
clc
sbb
jg
aam
push
sub
adc
jo
loope
testb
les
sub
ljmp
imul
xlat
lcall
jo
cmp
add
test
sub
orb
add
test
pop
mov
mov
jg
fldt
mov
push
xchg
xchg
xchg
lds
rcrb
jo
xor
push
mov
add
cmpsb
dec
xor
add
mov
fidivl
shl
test
pushl
cmp
inc
xchg
or
je
cmp
outsb
lds
lret
test
aam
xor
add
pusha
add
jl
jnp
xchg
imul
fldt
sar
ljmp
cld
mov
fadd
mov
fwait
enter
lret
push
and
and
out
dec
xchg
lock
xor
iret
movsl
push
test
fdivrl
clc
mov
mov
mov
jp
fnstenv
and
add
inc
jo
out
mov
and
imul
adc
aad
mov
xchg
lock
call
inc
dec
fcmovnb
sub
lret
and
xchg
adc
inc
imul
lcall
mov
add
adc
lods
lcall
mov
mov
sbb
aad
mov
sub
mov
dec
ret
ljmp
sub
stos
fidivs
loopne
push
scas
push
push
addb
xor
jne
outsb
pushf
sar
pushl
xorb
xlat
add
push
dec
enter
add
sarb
arpl
data16
jo
xorl
mov
test
and
and
test
add
xor
and
sub
and
test
or
or
add
pop
mov
adc
movsl
sub
add
movsl
jmp
cmc
test
or
inc
bound
mov
fildll
mov
js
pop
and
hlt
int
jne
or
clc
pushl
xchg
add
imul
outsb
push
clc
xor
das
cmp
xor
and
js
inc
jnp
mov
sub
fdivrl
or
sub
incl
test
push
ljmp
cmp
andb
fadd
adc
xchg
enter
adc
mov
jp
dec
stos
cmpl
jo
sbb
mov
mov
fcos
decl
sbb
cmp
inc
mov
addr16
out
ret
imul
out
nop
mov
push
push
andb
sub
or
add
addb
mov
ja
movsb
out
lds
ds
in
jne
outsl
push
hlt
fidivrs
inc
add
nop
xchg
pop
sub
push
aad
sbb
inc
call
icebp
aad
jae
mov
es
and
sbb
fprem
pop
dec
loopne
nop
inc
add
add
int3
mov
xchg
int
adc
push
subb
das
dec
sub
cwtl
ljmpw
test
push
cwtl
loope
cld
fsts
int
sbb
cmp
incl
sahf
inc
ljmp
dec
stos
in
jg
test
test
cmpsl
outsl
mov
into
jp
icebp
pushl
pop
mov
xchg
xchg
mov
ret
add
leave
daa
lahf
push
cmc
dec
xorl
pop
ds
rolb
adc
enter
dec
pop
shlb
pushl
dec
mov
stos
in
add
dec
xchg
jecxz
sub
xor
xchg
int
scas
xchg
stos
mov
cmp
ds
push
pop
mov
pop
xor
dec
add
sbbl
mov
xor
stos
mov
sub
pop
fildll
and
push
cli
mov
fbld
aaa
jbe
sbb
or
or
mov
imul
das
aad
addl
lods
rorl
jnp
push
loop
bound
scas
mov
lea
lcall
jmp
pusha
xchg
jbe
fnstcw
jg
dec
sbbl
push
shrb
pop
inc
aam
outsl
and
out
mov
pushl
adc
incl
push
ret
clc
jp
sbbb
or
and
adc
jg
inc
out
and
push
popa
sbbb
nop
or
scas
repz
fistps
jno
mov
xchg
adcl
outsb
push
cli
movsl
fcomip
push
out
call
mov
pop
and
ja
decl
or
and
cmp
lock
push
fimuls
clc
ljmp
add
bound
xchg
fisubs
das
cmpl
jge
push
sbb
mov
into
xorb
mov
pop
push
add
xchg
inc
ja
cmp
sub
push
push
add
xchg
pusha
test
mov
pushl
sub
jl
enter
addr16
js
push
push
fcomip
fs
shrb
ret
insb
xor
sti
cmp
decl
js
roll
std
or
mov
mov
mov
shrl
cmp
in
jp
pop
cmp
jge
pusha
fisttpl
jge
add
int
idivb
scas
test
dec
inc
mov
jmp
sarb
mov
lock
popa
cmp
scas
jle
mov
xchg
cld
call
mov
ficoms
les
int
ss
inc
push
in
outsl
adc
call
iret
aad
in
lea
sbb
test
xor
xor
mov
mov
add
mov
mov
inc
es
xor
dec
adc
fdivr
pushl
xchg
inc
jb
dec
xchg
xor
mov
cwtl
ret
sub
ret
sbb
jmp
adc
inc
mov
daa
push
and
push
inc
cli
xor
lahf
inc
subl
jmp
shlb
shl
std
xor
adc
mov
in
nop
das
inc
shrb
mov
jo
lcall
sub
das
loopne
push
add
insb
dec
scas
popa
ret
test
mov
in
dec
and
mov
cltd
out
shl
fpatan
lcall
or
decl
or
xchg
sub
test
pop
sar
jg
mov
insl
push
cmp
in
fwait
mov
adc
js
jmp
lret
pop
dec
fbld
ljmp
int3
outsl
jae
fisubrs
xchg
jmp
int3
or
cmp
decl
sub
or
les
fmul
mov
pushf
rorb
cwtl
pushf
xchg
and
decl
syscall
push
pop
pcmpgtb
jle
mov
and
lahf
add
mov
adcl
test
xchg
inc
inc
mov
dec
sbb
xchg
fcomps
daa
incl
jmp
push
xor
mov
or
sbb
in
xor
aam
nop
popa
clc
call
sbb
add
js
mov
sahf
push
lea
push
dec
mov
mov
movswl
adc
ds
or
sbb
insb
jg
incl
xchg
sbb
pop
add
cmpsb
pop
sbb
icebp
fcomps
fs
pushl
xchg
xchg
imul
cmovne
jp
sahf
cmpl
mov
hlt
in
inc
jmp
sahf
sbb
popa
ljmp
pop
sbbb
subl
test
inc
stos
psubq
jg
sbb
lcall
sahf
push
scas
or
out
dec
adc
adc
fstpt
adc
inc
leave
xor
inc
or
mov
push
je
or
lea
outsb
icebp
jmp
xor
enter
call
dec
push
rcll
ds
aad
ljmp
or
subb
push
gs
lcall
mov
pop
imul
pop
data16
test
pop
je
xchg
push
pop
in
jne
pop
and
jmp
mov
xlat
pop
jge
pop
cwtl
xor
push
lret
inc
cwtl
jle
call
repnz
jecxz
lock
imul
lds
jnp
add
jmp
inc
jmp
lods
xchg
xchg
ss
out
xchg
mov
roll
inc
adc
mov
or
rol
sub
fcomip
fnstenv
push
push
jns
mov
je
andb
loope
cwtl
arpl
scas
decl
ja
loope
roll
outsb
les
js
daa
inc
lock
nop
push
mov
sbb
lock
iret
add
js
xor
add
or
call
pop
mov
xor
add
loope
jmp
mov
lds
and
inc
push
int3
push
ja
mov
ret
mov
ljmp
mov
orl
in
clc
repnz
lods
adc
inc
ret
ret
cmc
fwait
or
decl
lock
ret
jg
movsb
adc
sar
add
js
push
mov
jns
add
xchg
orb
call
fs
outsb
lret
adc
pop
fstps
std
mov
inc
rcrl
out
in
pop
inc
push
inc
add
push
add
push
xchg
ret
sbb
sub
mov
ljmp
adc
inc
push
xor
incl
xorl
push
dec
inc
and
inc
inc
mov
dec
push
test
dec
cmp
enter
test
sbb
add
jbe
pushl
add
mov
stos
or
pop
arpl
mov
popa
pop
push
mov
push
nop
repnz
mov
cmp
or
lcall
adc
mov
inc
lret
bound
pop
call
jo
push
pushf
in
xor
je
mov
xchg
sbb
xlat
lcall
push
push
cwtl
mov
xchg
dec
dec
and
or
outsl
loope
pop
add
jg
out
jo
test
mov
fadds
add
fs
aad
adc
jecxz
loope
daa
outsl
mov
decl
add
sub
mov
sbb
pop
push
mov
incl
jmp
xchg
rclb
arpl
sub
adc
pop
mov
icebp
push
add
inc
orb
add
pop
decl
sarb
cld
sub
or
mov
sbb
add
addl
incl
mov
inc
sbb
shll
hlt
rorl
and
es
cld
lcall
mov
sub
pusha
push
adc
inc
imul
mov
xchg
mov
xchg
ljmp
sbb
lods
shl
stos
test
jmp
add
sbb
pop
rorl
repnz
add
xchg
pop
je
mov
jo
jbe
dec
cmp
mov
and
xchg
inc
mov
mov
add
push
push
or
or
push
jmp
cmp
or
sbb
loope
je
stos
ljmp
mov
xlat
pop
xor
mov
dec
xchg
mov
jns
push
popa
dec
xchg
mov
lcall
or
test
inc
shlb
or
enter
enter
or
incl
imul
mov
jge
lods
sub
and
sbb
sub
outsb
cltd
and
mov
pushf
cmp
mov
jmp
arpl
pop
out
out
dec
mov
pop
dec
and
dec
adc
pop
or
push
inc
test
xchg
dec
aad
sub
adc
rorl
inc
adc
icebp
fisttps
sub
lds
in
fwait
xchg
pop
dec
dec
or
xchg
lcall
orl
cmp
and
cmp
dec
repz
test
test
pop
push
mov
movsl
lock
push
xchg
mov
pushf
pop
rolb
movsb
cmp
mov
pop
call
icebp
or
decl
rcrb
inc
out
inc
mov
popa
add
push
xchg
adc
scas
and
fadds
inc
ds
sbb
cwtl
push
adc
lcall
nop
or
sbbb
push
fs
mov
pop
dec
fidivs
les
inc
fsubrs
pop
mov
bound
inc
daa
into
roll
enter
mov
subb
ljmp
add
add
pop
mov
out
pop
push
xchg
push
push
adc
cld
inc
push
sub
ljmp
popf
jp
pop
inc
insl
sbb
test
jno
mov
scas
pop
stos
lods
lcall
fbld
stos
rcrl
pop
orl
push
sbb
aad
mov
adc
mov
js
xchg
adc
push
mov
adc
stos
lcall
dec
cld
decl
jno
xchg
jno
xchg
adcl
pop
add
mov
adcb
aad
fucomi
push
pop
jg
gs
sbb
dec
mov
fidivl
mov
or
dec
xchg
fldl
pushf
dec
ficomps
pop
mov
lret
dec
scas
fmuls
cmp
arpl
cmp
ljmp
mov
mov
imul
int3
xchg
fldt
pop
inc
xor
ljmp
inc
clc
popf
push
gs
push
pop
repz
pushl
popf
or
sbb
xorb
pushf
fisttpl
enter
mov
fs
mov
ds
push
dec
nop
or
imul
pop
inc
xor
sbb
addb
mov
sub
outsl
xor
push
cld
js
mov
and
lock
cmp
ret
xchg
int3
mov
cmp
popa
or
add
rolb
outsb
sbb
fwait
cmp
cmpsl
push
jns
xchg
mov
mov
sbb
icebp
ljmp
cmpsl
gs
pop
rcl
sbb
dec
fwait
ss
imul
xlat
movsl
xchg
mov
dec
push
add
fucomip
push
out
imul
js
mov
ret
pop
popa
adc
daa
movsb
decb
cmpsb
decl
jecxz
rorl
and
add
mov
add
outsl
sarl
push
cmpl
or
repnz
cmc
add
mov
adc
lock
bound
xlat
mov
pop
stc
shlb
or
mov
test
pop
inc
nop
inc
adc
mov
sbb
add
cmpb
incl
mov
scas
std
fcmovnb
mov
or
dec
lods
sar
in
push
hlt
sbb
add
in
xor
rcrl
sarb
data16
mov
add
pop
dec
decl
inc
and
pop
pop
inc
xlat
and
inc
adc
xor
test
cwtl
dec
add
bound
movsl
push
scas
imul
pushf
pop
sub
jnp
dec
xchg
cmp
or
cmpb
lcall
scas
mov
jge
je
jmp
add
rcrb
rcrb
ljmp
jge
xor
and
add
aaa
cld
and
or
add
rolb
xor
test
push
inc
rorl
add
sbb
add
call
rolb
enter
orb
fadd
or
fwait
in
incl
push
inc
xor
pop
sbb
loop
inc
pop
mov
add
fimuls
mov
mov
stos
aaa
cld
jg
xchg
je
cli
xor
and
into
inc
lahf
test
lahf
hlt
test
fcomip
cmovs
movups
dec
leave
imulb
and
push
addb
mov
sbb
inc
push
mov
inc
icebp
and
add
push
ficoml
lahf
gs
pop
hlt
loope
push
sub
cmp
lcall
cmpsb
sbbb
testl
sbb
cli
lds
add
pop
lds
std
mov
dec
or
pop
incl
mov
cmc
pop
mov
xchg
mov
sbb
cmp
lcall
bound
add
sub
jl
adc
inc
dec
xchg
add
out
es
push
inc
js
adc
inc
adc
inc
adc
xor
loope
sbb
sbb
imul
push
dec
sar
das
cli
and
mov
mov
inc
adc
dec
pop
adc
jg
xchg
pop
sub
pop
data16
adc
and
or
fs
test
push
sarb
movsl
cs
call
push
shrb
xchg
inc
sbb
insb
xor
call
xchg
in
call
jo
pushf
jo
sarb
iret
std
pushf
cmp
andl
jmp
gs
sub
incl
js
cmp
push
gs
frstor
es
sar
cwtl
inc
aam
add
inc
adcb
jo
jle
xor
pop
cmp
out
incl
jb
ret
outsl
cs
jle
push
sub
into
ds
inc
sbb
add
mov
lcall
pop
adc
push
sbb
add
ljmp
incl
push
es
fcoml
ja
cmp
in
leave
outsb
int
dec
mov
stc
ds
fcomip
jmp
popa
fisubs
dec
gs
mov
pop
push
in
leave
adc
inc
sub
pop
subb
clc
push
pop
push
pop
pop
sbb
into
lcall
filds
aad
call
addr16
or
xchg
sti
push
or
dec
mov
push
cmc
or
movsb
adc
lahf
bound
lea
add
adc
ljmp
mov
fs
dec
dec
adc
mov
add
adc
or
in
lds
cs
mov
call
outsb
lret
shll
mov
mov
jbe
jg
addr16
inc
xor
inc
pop
hlt
and
movsl
movsl
mov
mov
cmp
add
stos
or
hlt
imul
mov
add
xchg
pushf
repz
pushl
sbb
dec
sbb
int
popf
push
rorb
dec
xor
iret
aam
ljmp
sbb
roll
mov
fadds
pushf
ljmp
fstpt
cwtl
stos
stos
mov
test
lods
ret
outsb
inc
add
mov
mov
and
fwait
nop
orl
data16
out
adc
or
subl
dec
jmp
adcb
mov
add
andl
or
arpl
add
mov
stos
in
cwtl
stos
xor
bound
adc
jmp
mov
sbb
cmc
hlt
sbb
dec
xchg
adc
xchg
mov
push
push
les
shrd
je
add
and
adc
dec
or
sbb
aad
add
mov
xchg
leave
mov
push
xor
inc
cmp
call
mov
sub
add
decl
mov
mov
dec
mov
mov
lcall
mov
adc
in
fcoms
jmp
enter
adc
mov
sbb
adc
loopne
inc
loopne
mov
lods
lcall
inc
and
adc
push
sar
or
lcall
mov
push
in
insl
push
clc
sub
mov
and
lock
mov
out
cmp
cmovb
nop
icebp
popf
inc
push
adc
pop
pop
adc
test
ljmp
pop
jb
aad
arpl
jl
mov
add
sbb
jg
and
sub
imul
xchg
pushf
aam
add
fcomip
jmp
adc
popf
xorb
jo
sbbl
out
or
fucomp
ljmp
loopne
insl
test
push
scas
icebp
push
das
outsb
pop
adcl
pop
sbb
inc
in
in
hlt
mov
sbb
cld
push
mov
sbb
repnz
mov
or
outsb
std
jg
loope
push
out
jbe
lods
pop
sti
mov
cld
sahf
xchg
cld
scas
in
fisubrs
loop
adc
sub
cmpsl
incl
jecxz
loopne
lret
dec
mov
subb
cmpsb
mov
pop
fisttps
push
ss
pop
sbb
call
call
push
stc
mov
xor
dec
push
movsl
sbb
ljmp
loopne
addr16
enter
test
cltd
dec
sarb
incl
fxch
stos
sbb
or
mov
lret
pop
pop
icebp
lcall
adc
adc
lret
pop
shr
jmp
insl
roll
xchg
add
test
add
mov
fistl
dec
nop
inc
insl
xchg
xchg
pop
add
movsb
dec
ret
test
fs
into
pusha
nop
push
mov
test
in
xchg
pusha
xchg
ficoml
adc
inc
sbb
xchg
fidivrs
push
decl
adc
fcomps
mov
out
addr16
lds
adc
xor
fsubl
popa
jae
and
cld
ljmp
jnp
adc
mov
and
sbb
call
sbb
fnstcw
adc
add
xlat
mov
lcall
mov
pop
xor
btr
xchg
scas
push
mov
mov
mov
adcl
ljmp
roll
mov
addl
sub
pushl
jg
aaa
popl
jp
cs
repz
cmp
bound
add
sbb
repz
dec
in
je
lahf
dec
insb
lahf
inc
mov
rcrb
clc
mov
inc
add
xchg
les
mov
hlt
decl
jle
inc
lahf
leave
mov
push
cmp
xchg
jo
lock
fists
or
cmpsl
or
lahf
movsb
insb
adc
shll
or
or
mov
sub
pop
int
inc
mov
mov
lret
mov
dec
dec
ficoms
shll
mov
stc
mov
pop
insl
cld
mov
fwait
or
push
lret
adc
or
decl
adc
aad
and
jp
xlat
xchg
fwait
les
arpl
jmp
popf
inc
push
mov
mov
add
pop
and
roll
lcall
or
addr16
enter
inc
push
sbb
enter
test
fucomip
adc
add
hlt
gs
mov
jmp
in
aas
cmpsb
xchg
sub
rol
repnz
inc
sub
imul
testb
ljmp
int
into
shrl
jbe
jecxz
or
loop
inc
outsl
sti
test
inc
sti
stos
call
cld
xchg
push
xorb
dec
cmp
mov
pop
ret
push
cld
incl
stos
or
shlb
scas
outsb
out
pop
enter
aaa
sti
ljmp
je
int3
lret
cs
out
test
jl
mov
mov
in
int
popa
loop
ljmp
stos
inc
ret
xchg
mov
dec
fwait
mov
mov
decl
push
cwtl
stos
outsb
lcall
pop
adc
incl
mov
xchg
in
inc
dec
lret
js
test
lcall
js
daa
int
aam
adc
push
mov
aad
aad
aad
sti
and
std
icebp
adc
mov
and
dec
mov
cld
scas
js
leave
shlb
sub
push
inc
int3
add
ret
sbb
pushl
int3
jle
out
jno
dec
push
sbb
jns
mov
dec
rcrb
test
mov
jmp
fcoml
das
inc
push
mov
xchg
pusha
cltd
subl
push
push
sbb
incl
sbb
mov
mov
and
loop
aaa
fs
mulb
mov
hlt
mov
gs
cs
outsb
fs
xchg
iret
aam
sbb
sub
lods
andl
jl
xchg
ret
pop
les
jp
fbstp
lret
subl
mov
and
shll
pop
cmpsl
scas
out
scas
mov
mov
sti
and
jnp
mov
inc
repz
mov
cmp
mov
jbe
scas
adc
mov
test
mov
bnd
popf
xor
inc
outsb
mov
xchg
jnp
xchg
jnp
push
pop
mov
test
xlat
in
out
mov
mov
pop
inc
or
pop
cld
call
jnp
xlat
mov
push
add
push
pop
add
pop
mov
sbb
jb
sub
pop
gs
lds
or
out
clc
jmp
call
jg
pushf
dec
cmp
mov
lret
stc
sub
sub
add
scas
rorb
push
jl
sub
sub
ljmp
jo
out
lods
push
or
arpl
movsb
inc
pop
pushl
and
jp
test
mov
adc
xor
incl
aam
test
jae
cmp
dec
aaa
stos
pop
js
fildl
sbb
ljmp
sbb
sub
ss
fmull
ljmp
add
mov
push
test
and
ret
movsl
inc
and
lds
and
data16
cmp
inc
sti
mov
mov
and
bound
mov
mov
push
icebp
incl
xchg
xor
in
cmpsl
mov
mov
out
add
add
add
dec
cli
sbb
pushf
push
sub
mov
movsb
testl
lock
mov
in
fistpll
aaa
scas
adc
repz
jb
inc
pop
loop
adc
call
xchg
dec
mov
xor
xchg
les
adc
sbb
lods
add
dec
in
mov
or
inc
cld
call
cmp
cmpsl
dec
cltd
dec
cli
fwait
lahf
shlb
inc
add
mov
and
call
sub
movsb
or
mov
sbb
adc
inc
mov
decl
push
movsb
dec
sbb
inc
or
lock
sahf
nop
sub
push
jmp
sahf
inc
iret
mov
inc
in
and
hlt
in
ljmp
orb
int
add
adc
pushl
ljmp
or
test
sbb
adcl
push
mov
cmp
int3
jb
scas
pop
inc
addr16
in
mov
les
insb
and
mov
clc
rol
mov
call
mov
cmc
js
mov
or
movsb
adc
ret
out
inc
cmp
clc
mov
lcall
mov
xor
shrb
inc
repz
movsb
movsl
loopne
repnz
mov
ficoms
loopne
mov
sbb
sub
roll
lds
fwait
rcl
test
cli
jne
andl
rclb
imul
cmp
aad
aaa
or
leave
stc
sti
stc
lods
push
setg
in
or
adc
jg
lds
adc
mov
inc
mov
push
sbb
inc
dec
pushl
sbb
ret
aam
mov
scas
clc
fbstp
mov
inc
and
out
jae
cmp
adc
arpl
jg
jmp
push
lret
inc
out
loop
or
test
add
enter
mov
arpl
mov
lcall
push
nop
mov
imul
jmp
mov
mov
sub
xor
or
ljmp
dec
mov
decl
add
stos
call
test
das
dec
push
jg
mov
or
xchg
jo
dec
cmpsb
lcall
cli
leave
test
daa
sahf
lcall
loop
sub
inc
push
insl
mov
scas
push
int
push
mov
cmp
add
sub
scas
mov
popa
cmpsl
mov
push
iret
jp
cmpl
add
inc
rorl
xor
pop
sub
jg
fs
lock
mov
inc
shr
xor
je
aaa
mov
rcrb
and
xor
into
ds
mov
inc
cmp
loop
and
outsl
jns
mov
lock
pop
push
add
fisttps
sbb
xor
mov
cmp
cmp
ds
imul
punpckldq
sti
jecxz
pop
push
mov
and
rclb
push
cwtl
cmp
jge
call
cmp
adc
cltd
outsl
fidivs
popf
iret
mov
push
mulb
mov
loopne
adc
adcl
xchg
cld
repz
mov
cmp
cltd
adc
dec
das
jp
push
mov
insb
xor
mov
hlt
mov
mov
mov
add
adc
push
lea
sbb
inc
les
pop
jb
cwtl
adc
jmp
xor
dec
xchg
repnz
mov
cmpsl
imul
adc
pop
xchg
cmp
jmp
rclb
pop
mov
aaa
dec
push
sub
ljmp
cs
push
pop
lcall
call
fsubs
cli
pop
std
pop
push
xor
movntps
and
sbb
lcall
mov
xchg
orl
pop
lock
jmp
xor
or
pop
sub
repnz
insb
andb
xor
sti
in
call
fistps
jbe
xor
cwtl
js
xchg
sahf
mov
arpl
hlt
repz
pop
adc
add
cmp
leave
and
mov
mov
jmp
sbb
mov
nop
test
fadd
int3
add
divb
jge
addl
shll
pushl
mov
jge
mov
bound
mov
out
dec
and
pushl
cmp
xchg
leave
movsb
add
incl
sbb
repnz
cltd
rcr
int3
mov
scas
call
mov
sbbb
lea
repnz
aam
mov
pop
jo
lret
or
in
dec
sbbl
ret
lret
filds
js
decl
xor
je
incl
loop
cmpsl
and
push
mov
xchg
and
test
fistl
add
mov
lods
push
sbb
mov
jmp
push
js
sub
filds
repz
xchg
or
addb
push
adcb
cmpb
cld
pop
lret
imulb
and
dec
out
ffree
inc
ss
int
rol
jl
imul
out
addb
pusha
pop
shr
push
mov
and
ja
into
call
out
popf
jmp
xor
lea
sub
lock
sub
adc
xor
repz
pop
sbb
decl
xchg
cmp
mov
sbb
xchg
movsl
out
cli
jg
and
andb
mov
push
loope
push
cmc
call
adc
cmpsl
inc
das
test
jmp
cmp
loope
mov
mov
dec
sbb
lcall
mov
neg
dec
pushl
inc
inc
mov
call
mov
jg
shl
call
fs
xchg
dec
xchg
push
out
mov
enter
xor
xor
push
inc
sar
jmp
sub
pushf
push
pop
and
mov
ret
ret
test
xchg
stos
ja
call
mov
xchg
push
fidivs
lods
scas
ljmp
pushl
inc
and
inc
mov
jecxz
pusha
jmp
lret
add
out
in
jg
lcall
cmpsl
scas
ja
adc
out
pop
das
fcomi
inc
mov
and
popa
xchg
cld
incl
ljmp
je
jecxz
mull
pop
cmp
inc
stos
cwtl
lds
mov
ljmp
jo
loop
movsl
push
sbb
inc
mov
decl
shll
cmpsb
push
clc
push
and
inc
mov
xor
es
out
and
popa
or
inc
aam
and
fistl
xorb
je
sbb
repnz
jo
ljmp
pop
outsb
mov
cmpsb
mov
stos
arpl
data16
psubd
call
cmpsb
dec
inc
fldenv
push
dec
in
in
pushf
or
push
rclb
call
leave
push
loope
jbe
hlt
mov
in
into
jbe
arpl
sbb
cs
xor
dec
and
ret
sbb
inc
ds
inc
decl
sbb
push
out
arpl
sub
inc
adc
pop
fcom
inc
xor
filds
ja
aam
int
outsl
xor
push
mov
shlb
pushl
mov
pop
cmpsb
sbb
mov
push
incl
dec
data16
mov
add
mov
pop
popf
xchg
mov
jg
sub
aas
mov
mov
pushl
cmpsb
jmp
cltd
popf
mov
mov
bound
sahf
insl
pop
mov
out
popf
inc
sub
decl
mov
and
negl
xor
sarb
xor
test
call
cmp
push
test
mov
jno
out
movsl
adc
sub
and
inc
xchg
decb
lcall
xor
dec
pop
lods
shl
push
xchg
mov
ljmp
jne
mov
out
push
sub
or
mov
push
bnd
mov
sbb
sub
or
sub
cmpsb
std
inc
or
ljmp
ds
xor
jb
lods
sbb
sub
ret
lcall
pop
loop
hlt
xor
pop
pop
pop
push
aas
mov
sti
out
push
or
mov
scas
je
popf
pusha
push
sti
addr16
mov
rcll
addb
out
jne
int3
pusha
sub
enter
pusha
inc
sub
fisttps
lock
push
repz
fisttps
sub
sbb
shl
icebp
sbb
xor
ljmp
sbbb
adc
mov
pushl
or
in
push
pushf
mov
outsb
jnp
lods
insb
jne
adc
aam
out
out
jg
fisubs
jge
loop
or
stos
aam
out
gs
xor
push
dec
mov
mov
test
lahf
stos
lret
clc
xchg
jb
fimull
cmp
repnz
sarl
popa
aad
mov
xchg
fcmove
cmp
jae
jae
insl
dec
lods
mov
sbb
incl
inc
call
test
andb
push
dec
mov
inc
cltd
shlb
das
sar
test
add
and
mov
fwait
and
dec
outsb
mov
sub
cli
addr16
movsl
mov
jecxz
push
sub
out
adc
out
scas
in
mov
decl
fadd
out
push
and
outsb
sub
aad
lret
and
xchg
mov
or
es
movsb
test
pushl
cmp
imul
push
inc
push
and
insb
push
jno
jo
mov
incl
or
pusha
or
adc
lock
or
orl
decb
or
sti
orb
mov
lods
fldcw
add
sbb
rcll
paddw
idiv
jecxz
hlt
rolb
mov
add
push
adc
and
mov
outsl
fistpll
adc
xchg
adc
dec
push
mov
insl
ss
add
cmp
div
or
add
ret
loopne
in
or
fildll
and
add
and
and
push
popl
leave
xor
sbb
or
dec
inc
incl
and
loope
mov
je
in
ljmp
imul
mov
call
add
push
sub
subb
sub
stos
scas
cli
outsl
adc
jmp
pop
jmp
addb
loop
ds
ret
mov
in
aad
incl
sbb
clc
lds
and
xor
jl
inc
cmp
inc
lock
lds
lods
add
mov
dec
add
lods
into
ss
cmpsl
in
mov
out
cmpsb
push
add
push
xor
pusha
push
dec
pusha
adc
addl
in
mov
mov
adc
and
lahf
push
inc
adc
out
mov
cmpsl
sub
cmp
out
call
lcall
jecxz
push
or
mov
jo,pt
add
popa
xchg
xchg
fmull
inc
jg
jecxz
inc
data16
dec
xor
les
scas
cli
cmpsb
outsl
add
fisttps
shl
test
sub
in
test
push
add
push
adc
hlt
push
mov
out
out
add
shlb
xchg
es
subl
outsl
outsb
dec
adc
lods
dec
push
xchg
and
or
cmpsb
cmpsb
fnstsw
push
mov
enter
bound
fmuls
push
pop
negb
ljmp
ljmp
and
dec
movzbl
and
outsl
cld
mov
decl
sbb
out
push
push
out
js
push
push
push
inc
sub
call
xchg
adc
jbe
sub
dec
sub
sub
or
or
idiv
outsl
xor
adc
xchg
addr16
add
push
mov
dec
movb
hlt
inc
push
and
mov
push
rcl
adc
add
pusha
ret
jle
sbbl
xor
into
les
and
xchg
stos
pop
mov
shlb
popf
cli
call
shrl
jo
or
aam
in
fadds
xor
pop
lret
adc
cmp
pop
inc
imul
mov
push
outsl
xchg
mov
lcall
andb
mov
loopne
inc
sub
inc
xor
out
sub
inc
sub
daa
ljmp
xor
mov
in
push
add
notl
fists
loope
xor
xor
ljmp
xchg
push
int3
mov
das
push
mov
test
cmpsb
sub
sbb
adc
xor
jmp
inc
mov
shl
lds
cmpsl
mov
insl
jmp
mov
outsl
jno
enter
sub
pusha
add
aaa
cld
sub
mov
and
inc
mov
loop
repz
fucomp
loop
add
je
loop
aaa
aad
push
imul
jp
push
fs
add
jns
lds
int3
sub
lcall
subb
push
scas
push
int
dec
inc
subb
clc
int3
pop
loope
cmpxchg
sbb
lcall
inc
sar
push
dec
and
popf
xchg
sub
lret
into
xchg
repnz
incl
pop
cs
push
in
and
jne
std
gs
inc
loop
pusha
mov
dec
inc
das
je
in
dec
inc
cmp
fcmovbe
andl
popa
add
incl
fsubs
cmp
aad
test
in
jmp
jge
push
inc
sbbl
dec
lret
pop
icebp
dec
or
cmp
adc
dec
push
loop
out
push
cmp
movsb
cmpsb
icebp
cli
js
vmread
dec
fldenv
sti
pop
hlt
fildll
cltd
jl
pop
push
data16
cltd
jo
data16
add
mov
pop
add
push
push
mov
push
subb
daa
nop
imul
scas
or
mov
and
movsl
mov
mov
fs
mov
dec
inc
repz
xlat
scas
fcomip
cmpsb
and
adc
cmpsl
pop
jne
dec
xorb
dec
and
insl
loop
xchg
insb
cld
call
push
jae
and
sub
xor
adc
loopne
jecxz
loop
ds
push
out
inc
push
mov
shll
lock
push
cld
outsl
movsl
ja
cvtpi2ps
movsl
cmp
adc
adc
add
inc
mov
push
or
mov
mov
jmp
cmpsb
mov
add
cmc
in
outsb
xchg
rolb
add
test
in
rcl
out
xor
in
push
mov
push
sarb
out
lock
pusha
xchg
add
rolb
sbb
sub
fs
jmp
cmp
nop
pop
pop
stos
imul
ljmp
lcall
test
hlt
inc
test
or
inc
icebp
scas
mov
ret
decl
mov
int3
or
mov
fs
gs
sti
incl
add
jno
add
clc
jmp
adc
cmp
cmp
cmp
addr16
jg
pushl
mov
sbb
jbe
out
fimuls
cld
push
xor
add
cmpsb
dec
ljmp
xchg
in
insb
jmp
mov
fs
call
add
jbe
inc
negb
add
setae
add
mov
inc
sub
jbe
xor
lods
scas
cmp
aaa
mov
js
ret
lds
xor
xchg
lock
movsl
push
push
inc
sbb
stos
out
outsb
jo
pushl
out
out
loop
notb
aas
loopne
inc
testl
and
out
pusha
pop
mov
sbb
call
or
pop
out
and
jbe
or
mov
and
out
or
pop
dec
ret
mov
pop
xorl
cmp
xor
pop
pusha
or
loopne
movsb
push
lcall
jmp
hlt
popa
out
ja
insb
push
mov
adc
in
mov
enter
push
dec
hlt
inc
stos
or
lcall
add
inc
sbb
mov
mov
jo
xchg
xchg
inc
in
bound
adcl
insb
and
xchg
gs
dec
cltd
push
cs
andb
cmp
adc
loope
incl
flds
adcb
outsl
jo
cmp
jl
xchg
imul
ljmp
jb
idivl
dec
in
insl
incl
cmc
mov
cmc
inc
xchg
insb
push
inc
ss
aaa
lds
aaa
movsl
mov
pop
rcll
adc
sub
cmp
pop
sahf
mov
push
lcall
cmp
add
bound
push
ja
cli
sub
lret
jecxz
push
dec
jne
decl
push
xor
mov
push
push
adc
es
add
jne
inc
push
decl
inc
in
xchg
sbb
rcrb
aam
cs
lods
adc
cmp
add
pop
and
pop
lds
js
scas
xor
dec
push
and
add
ljmp
mov
sahf
addl
pop
or
jne
daa
jae
jnp
push
mov
call
cltd
inc
or
cmp
sbb
cmc
mov
stos
or
mov
dec
aam
jae
pop
pushl
adc
outsl
dec
xchg
inc
fs
push
or
dec
loopne
mov
add
repnz
loopne
addr16
mov
adc
fcomp
mov
lcall
xor
imul
mov
loope
or
ljmp
test
jmp
xchg
movsb
lds
insb
cld
je
imul
stc
fs
loopne
js
push
jmp
sbb
and
cltd
sub
pop
movsb
mov
xchg
jbe
or
mov
sti
inc
push
ljmp
inc
test
lock
push
addr16
ljmp
addr16
cmpsl
mov
cmpsl
pop
jl
sub
int3
les
cs
cmp
or
mov
clc
jmp
movsb
loope
lcall
ds
sbb
fstps
dec
cmp
daa
in
int3
lds
call
out
pop
addb
rorb
pushf
aad
aad
rorb
scas
sbb
pop
stc
pop
mov
add
data16
jnp
daa
data16
or
mov
ret
xorl
imul
push
cmp
mov
pop
lods
popa
pop
and
int3
ljmp
pop
outsl
filds
cli
divb
sbb
sub
xchg
adc
pop
mov
or
mov
fildll
add
in
out
cmp
pop
mov
es
movsl
inc
mov
insl
dec
xchg
cmc
incl
dec
imul
sub
idivb
in
mov
call
outsl
out
xchg
and
sbb
fwait
sbb
push
push
aaa
cmp
das
inc
add
push
scas
mov
mov
mov
int3
mov
jl
sub
int
mov
pushl
cmp
out
das
mov
ret
inc
jo
mov
push
bound
add
lcall
push
and
cld
js
cs
or
in
jmp
ret
fwait
cmc
ja
mov
aam
jecxz
lcall
pop
test
ffree
gs
enter
lcall
push
mov
insl
fstps
mov
cmp
inc
hlt
aas
into
xlat
sub
ljmp
mov
adc
adc
fists
sbb
pop
imul
push
xchg
ret
subb
mov
andl
shrb
pop
loopne
call
call
nop
test
stc
sahf
mov
jnp
std
fldenv
inc
jmp
lea
incl
add
out
add
movsb
dec
push
mov
movntq
inc
push
test
sbb
cmp
jmp
icebp
push
sbb
jne
dec
inc
xor
and
pushl
scas
std
mov
mov
mov
call
out
mov
mov
pop
out
cwtl
push
jbe
mov
icebp
sub
mov
in
jg
cwtl
pop
sub
imul
dec
nop
mov
test
adc
lcall
aad
lds
xchg
mov
jl
out
mov
mov
jl
pop
mov
mov
iret
push
push
and
sbb
fbld
add
push
and
bound
lock
loop
xor
pop
ss
pop
jbe
dec
or
insl
rorb
jecxz
test
int3
dec
or
or
in
inc
std
clc
incl
add
push
add
push
sbb
jb
pushl
mov
dec
and
incl
ds
sbb
lock
test
adc
loopne
push
mov
push
jl
icebp
ljmp
mov
jo
clc
mov
xchg
xchg
cmp
in
lret
xchg
fdivr
fcomip
pushl
and
int3
es
push
rclb
sub
mov
xchg
es
hlt
das
sar
loopne
xor
xor
les
call
sub
int3
dec
mov
inc
push
shll
sub
scas
clc
lock
xchg
das
push
mov
and
or
insb
ljmp
mov
pusha
sarb
stc
cmp
cmp
lock
enter
jle
sbb
decl
pushf
pop
outsl
fmulp
mov
test
cmp
jns
add
enter
out
int3
sbb
sarw
add
mov
xchg
repnz
insl
sub
xchg
or
decl
xchg
mov
ret
push
mov
cmp
shr
jno
sub
pusha
adc
xchg
add
or
lcall
jle
repnz
scas
maxps
pop
inc
jl
int3
inc
fistpll
cmp
popf
js
cmp
push
inc
and
pop
cmp
orl
lcall
xor
pop
inc
pop
xor
mov
and
mov
mov
mov
dec
clc
push
fsubr
and
fadds
xchg
adc
decl
sub
or
in
mov
movsb
xchg
dec
push
jns
nop
int3
sub
mov
in
and
pop
add
ret
cwtl
test
cltd
pop
js
ja
ret
cli
clc
inc
fwait
dec
jl
fcoml
dec
sub
pop
hlt
call
push
fnsave
push
pop
movsl
xor
adc
push
push
nopl
loope
or
ljmp
xchg
and
call
lret
cmp
xchg
inc
lcall
cmp
roll
test
push
test
stos
mov
in
jp
mov
adc
lcall
dec
dec
dec
daa
pop
je
pop
adc
push
cmp
cli
push
xlat
dec
mov
lods
push
ja
pop
call
xchg
push
push
fstl
push
dec
int
incl
sub
push
pop
push
add
call
mov
cld
xor
pop
lret
lcall
push
push
or
leave
lret
xchg
arpl
cltd
mov
jmp
outsl
cmpsb
fwait
pop
scas
jns
fwait
ret
jo
xchg
and
fcompl
enter
mov
sbb
cmpsb
xchg
lret
inc
dec
lcall
popa
or
in
fs
jp
jae
sbb
sahf
sbb
addb
or
ljmp
add
pop
rolb
fstpl
add
loope
xchg
and
ljmp
shlb
lea
ss
push
and
push
cmp
mov
shl
ja
dec
push
decl
mov
fnstenv
in
push
int3
and
call
jae
pop
cbtw
mov
in
test
cmp
pop
dec
enter
push
cld
call
jns
mov
jge
add
sub
inc
mov
mov
movsl
xchg
ds
pop
inc
pop
add
test
fists
test
or
sub
cmpsl
pop
sub
mov
imul
mov
call
or
sub
mov
filds
in
dec
inc
xchg
test
push
sub
popa
movsl
call
mov
or
push
xor
in
dec
frstor
mov
movsl
push
pop
insl
mov
pop
xchg
pushf
imul
decl
in
adc
pop
jnp
add
pop
out
push
scas
add
ror
dec
repz
inc
xor
and
call
gs
out
adc
bound
push
fsubrs
xchg
add
ljmp
pop
xor
nop
fwait
test
into
enter
incl
into
mov
cli
push
xor
cmp
icebp
cmpl
add
out
cld
push
arpl
outsb
mov
clc
dec
int
cmp
imul
addr16
test
adc
sub
movsb
dec
lods
in
decl
mov
sbb
adc
sbb
mov
incl
je
add
mov
jge
insl
aaa
shlb
in
mov
test
sbb
cld
call
hlt
inc
mov
dec
inc
movsb
and
xchg
mov
cmp
pop
clc
decl
sub
movsl
or
add
xchg
add
push
cli
decl
pushf
ljmp
mov
push
sahf
repnz
ds
push
ljmp
call
inc
sbb
xchg
jg
lcall
sub
lret
call
loope
or
lret
inc
cmp
mov
and
add
xor
stos
mov
push
xchg
adcb
and
data16
fists
js
jnp
mov
adc
lds
lret
sti
lcall
add
jg
stc
rorb
sub
push
icebp
ret
push
scas
jp
or
adc
jg
xchg
ret
mov
dec
push
das
stc
repnz
or
inc
test
int3
add
and
lcall
sbb
loopne
sbbb
int
jg
decb
inc
mov
jmp
cmp
je
dec
arpl
mov
inc
add
mov
rcrl
fisttpl
ret
push
xor
call
xchg
mov
xor
sub
mov
cmp
mov
adc
adc
ljmp
jge
stos
and
push
adc
mov
loop
mov
and
fs
adc
insl
inc
xchg
xchg
loopne
xor
decl
outsl
rcrl
sbb
enter
insb
stos
adc
lret
je
enter
pop
push
and
cmpsl
jmp
test
fistpll
loope
iret
popf
in
pop
xchg
imul
jbe
mov
nop
in
int
icebp
dec
xor
inc
jne
iret
adc
stos
xchg
data16
lds
icebp
jae
aaa
fldlg2
std
jg
test
repz
stc
into
xchg
dec
jp
lds
fldcw
ljmp
sub
addr16
jg
sub
dec
sub
pop
sarl
xlat
lods
decl
push
pop
aad
leave
push
mov
xor
cli
call
mov
pop
lcall
sbb
jne
pop
cld
dec
subl
jl
test
fcomip
jmp
dec
dec
cmp
sub
jb
movsl
lds
addb
nop
cmc
pop
cmp
test
push
push
mov
add
and
int
xorl
int
pop
mov
pushl
cmpsl
cmp
push
jecxz
sbb
rcrl
fiaddl
jl
lret
repz
mov
adc
jl
and
or
das
sbb
fwait
sar
fldenv
cmp
mov
dec
mov
mov
and
xor
pop
test
fs
cmp
sub
lods
or
adc
call
sub
pushl
in
cs
xchg
sbbb
or
data16
cld
mov
insl
mov
jbe
adc
in
adc
in
fs
sub
cmc
call
xor
and
cmp
dec
pop
pop
mulb
movsl
mov
mov
sbb
lcall
repnz
lods
call
add
data16
jmp
ret
dec
loop
xchg
push
sbb
adc
mov
sarl
and
incl
mov
movsl
or
mov
push
shlb
xor
adc
mov
dec
fadd
push
jb
shll
ljmp
aas
mov
xlat
mov
shlb
add
mov
cmp
jb
xor
hlt
lcall
cmc
imul
imul
pop
sub
dec
lcall
ss
sahf
scas
sub
int
sbb
sbb
loope
hlt
dec
dec
mov
outsb
jecxz
cli
and
movsb
ds
ljmp
dec
push
mov
inc
lret
popa
adc
in
mov
std
scas
je
repz
icebp
or
ret
pop
and
dec
arpl
je
ss
sarb
cmp
incl
jp
push
sub
add
mov
inc
in
push
out
stos
jne
jl
test
rolb
sbb
adc
sbb
mov
das
push
mov
cmp
add
cmpl
loop
pop
jo
aad
jmp
jmp
rcl
testl
shr
mov
sti
incl
outsl
shll
dec
movsl
pop
sbbl
pop
push
pop
fwait
incl
xchg
add
mov
test
in
fdivrp
mov
jmp
cld
call
sbb
sti
add
or
push
and
push
decl
mov
es
jp
adc
inc
dec
jecxz
mov
push
pop
push
rcpps
inc
push
lock
incl
xor
pop
clc
pop
dec
arpl
lock
mov
popa
inc
pop
movsl
push
cmp
pop
dec
sbb
pop
cmp
fs
incb
jg
jae
hlt
inc
jl
mov
dec
repnz
pop
ja
outsb
in
test
cmc
incl
gs
push
and
inc
data16
loopne
incl
roll
add
xchg
aam
or
das
mov
push
xlat
cmp
call
push
jbe
aaa
jbe
addr16
lds
cmp
or
push
xchg
daa
cmpsb
xchg
adc
aas
filds
sub
adc
mov
sub
ja
repz
adc
rcll
jmp
imul
mov
jo
loopne
add
js
push
jns
xchg
test
insl
fsubs
pop
adc
insb
mov
adc
xor
push
mov
xor
pushl
enter
adc
insl
add
ss
testl
outsl
mov
mov
and
sbb
call
ljmp
pop
adc
inc
mov
add
das
jb
mov
push
xchg
xorl
xor
ljmp
cmpsb
pusha
fisubl
and
mov
cmpsb
xor
push
jo
inc
pop
ss
add
lea
pop
xor
sbb
loop
fs
jg
push
mov
ret
add
jb
mov
outsl
clc
shll
push
inc
and
cld
inc
inc
xchg
icebp
fistpl
adc
jge
add
push
mov
pop
adc
inc
lret
and
popa
sbb
fmuls
shlb
inc
sbb
fdivs
fdivrs
jbe
incl
push
cmpl
outsb
ss
test
push
jne
out
mov
ss
rorb
jbe
shlb
ss
imul
stos
inc
and
xchg
daa
mov
sbb
jmp
ja
pushw
addb
imul
fucomip
adc
sub
dec
nop
adc
cmp
ljmp
les
cs
push
pop
popa
shrl
adcl
mov
adc
mov
aas
sub
mov
sub
addr16
pop
lcall
add
jo
jnp
xor
shrl
popa
push
mov
inc
sbb
mov
sub
mov
sbb
jl
test
inc
ljmp
imul
or
loopne
xor
mov
jmp
xchg
popa
pop
adc
roll
lea
add
call
arpl
icebp
outsl
and
inc
loope
mov
mov
in
xor
push
adc
sub
arpl
cmp
xor
icebp
jb
inc
push
fadds
jb
movsbl
pusha
test
add
gs
inc
xor
inc
xchg
jbe
mov
imul
cwtl
xchg
and
leave
and
pop
pop
mov
pop
addr16
xor
lcall
bound
adc
popa
push
cmp
cmp
cmp
add
sub
int
push
test
mov
xchg
sbb
cli
xchg
adc
cmp
sub
add
lock
jge
sub
ja
arpl
push
dec
push
jmp
cmp
xchg
sub
and
arpl
ss
lret
ficoms
bound
int3
gs
bound
push
mov
ss
mov
loope,pn
mulb
std
in
frstor
adc
push
into
jb
add
mov
add
mov
clc
mov
cli
add
cmpsb
push
jl
push
or
popa
pushf
cwtl
mov
stos
dec
loopne
jle
inc
stc
jl
inc
lcall
lcall
xchg
shrb
lea
add
test
jg
aaa
into
and
jno
cmc
fwait
das
inc
xor
xchg
jmp
add
adc
dec
and
mov
dec
xor
mov
add
sbb
jg
pushl
pop
add
pusha
stos
push
sbb
rolb
inc
mov
push
cmpsl
and
xchg
push
or
data16
data16
nop
add
inc
pusha
jne
and
jecxz
sub
ret
gs
push
mov
jmp
and
xchg
push
push
sbb
or
outsl
test
imul
out
or
test
or
testl
imul
cld
jo
cld
push
sti
mov
add
daa
loopne
add
pop
add
add
jg
fildl
adc
mov
adc
sbb
mov
and
jnp
stc
popa
mov
jmp
pop
stos
and
mov
adc
stos
mov
lcall
mov
mov
cmp
popa
pushf
loope
imul
or
jmp
aas
cmp
imul
sahf
notl
lcall
shl
jne
dec
icebp
and
out
movsl
sub
adc
push
jnp
decl
or
cmpsb
pop
mov
cmpsb
repz
jl
test
popf
ljmp
adc
stc
xor
xchg
popa
sbb
inc
pop
rorl
fs
pop
xlat
inc
popa
lret
mov
out
clc
inc
les
test
pusha
lcall
push
xor
xor
ret
decl
cmp
imull
bound
cwtl
xor
jp
fisttpl
out
std
jmp
bound
repnz
pop
push
jo
inc
addl
push
loopne
cmp
pop
std
ja
push
mov
jg
fs
ss
xor
mov
cmp
aaa
ja
sub
aaa
jns
and
xlat
je
jb
push
bound
out
lods
cli
sbb
in
pop
mov
add
scas
jne
mov
ret
arpl
ljmp
jmp
and
or
dec
hlt
inc
test
leave
aad
ret
dec
mov
shlb
push
mov
add
cld
ljmp
incl
outsl
xor
sbb
mov
mov
rorb
imul
cmp
push
xor
dec
jg
xchg
add
rcll
call
sbb
out
xor
add
xor
adc
cmp
xchg
hlt
les
dec
xchg
sub
dec
mov
arpl
fsubs
add
adc
sbb
sbb
ljmp
sti
adc
or
push
pop
push
and
sti
insl
adc
inc
loopne
sbb
movsl
sbb
aaa
cld
inc
jo
push
sbb
mov
inc
mov
push
pusha
lock
mov
sub
push
add
jo
or
pop
hlt
in
pop
mov
xchg
inc
xor
xor
mov
and
xor
dec
mov
mov
sub
sbb
add
mov
shlb
adc
adc
pop
inc
jae
aad
dec
clc
jmp
inc
add
jae
pop
mov
pop
jns
sbb
out
xor
xor
sahf
ja
and
enter
sahf
pushf
lret
call
cld
or
test
mov
mov
je
fildll
movsl
adc
xchg
jecxz
pushf
decl
dec
sti
cmp
rorl
int3
push
jle
call
xchg
pop
cmpsl
aad
or
rorl
and
jne
enter
adc
shl
inc
sbb
jg
ds
push
pop
cmp
int
mov
ljmp
insl
xchg
mov
cs
pop
fcmovnb
jns
lods
sub
test
test
adc
incl
cwtl
lret
cld
ret
inc
mov
or
outsb
mul
pusha
mov
shll
or
sbb
outsl
stos
rcll
cmc
xor
sbb
scas
clc
call
cmpsl
test
int3
popa
ret
push
add
lock
jbe
fwait
fwait
jp
cmp
pushl
xor
xchg
jp
mov
bound
push
adc
std
das
cli
incl
pop
xor
arpl
pop
pop
repnz
or
cmp
sbb
sbb
pop
lock
lock
fnstenv
fnstenv
mov
pop
clc
jnp
and
std
call
mov
pop
pop
scas
jge
and
or
dec
lds
mov
or
mov
insb
orb
hlt
test
push
aas
into
xchg
shr
dec
insb
data16
cld
cmp
and
ss
in
into
pop
jl
movsb
lods
aaa
inc
xchg
mov
cmp
mov
mov
pushf
cmp
aas
movsl
or
lahf
aaa
daa
jb
xchg
sub
adc
cmp
fsub
push
xchg
xor
or
xor
repnz
paddw
iret
pop
xor
and
clc
icebp
aad
test
jl
mov
cmpsl
xchg
jmp
clc
es
dec
inc
mov
adc
push
inc
jge
shlb
in
cmp
test
sbb
sbb
and
cwtl
bound
cmpsl
sbb
jle
ljmp
popf
mov
push
cmp
mov
inc
lds
or
dec
push
out
add
inc
inc
push
scas
stos
xor
nop
inc
and
nop
pusha
jecxz
adc
add
jmp
rcrb
sbb
jbe
mov
or
dec
lahf
xor
das
pop
dec
cmp
ds
cmpb
fildll
scas
xchg
push
pop
mov
in
fwait
add
pushl
push
inc
fldcw
and
sbb
scas
dec
imul
int
mov
xor
and
dec
inc
clc
ds
adc
sbb
jp
push
fiaddl
sbb
jmp
shll
faddl
sub
int
fidivl
les
je
mov
das
sar
jmp
ret
ds
mov
inc
das
cld
xor
xor
sbb
adcb
adc
cmc
jg
shlb
pushl
orb
incl
xlat
lds
and
xor
leave
jno
aas
bound
orb
inc
push
aaa
out
call
mov
jg
fwait
xor
and
aaa
inc
test
decl
push
fs
adc
scas
lret
pop
and
add
leave
scas
hlt
mov
push
cs
mov
add
imul
hlt
add
shll
loopne
stos
jg
lcall
sub
jae
and
sub
inc
dec
jno
and
mov
rcrb
pop
icebp
ljmp
in
adc
or
push
fsubs
pushf
jecxz
sahf
add
pop
das
cs
enter
jle
and
lods
pop
scas
fldcw
jne
aaa
sarl
mov
loopne
adc
fcoml
push
ds
scas
out
imul
ror
in
jl
daa
loopne
sub
lfs
cmp
lods
xchg
test
call
cs
inc
sub
dec
dec
call
ret
jp
orl
mov
add
cmp
btr
leave
mov
xor
jg
inc
pop
xor
popf
xor
push
ljmp
les
lcall
test
rcrb
in
sub
pop
add
sbb
adc
inc
mov
push
decl
push
rcrl
test
push
in
dec
jne
gs
out
pushf
sbb
jbe
in
inc
lcall
jmp
loop
mov
inc
mov
in
sbb
cli
jge
jno
decl
ret
lcall
cs
inc
dec
data16
push
xlat
jge
mov
cmp
push
inc
out
dec
xchg
shrl
cmp
in
fs
mov
ljmp
subl
add
popf
adc
cmp
subb
movsb
frstor
ret
pushf
adc
dec
jg
lcall
cld
cltd
dec
push
fs
or
mov
loop
out
pop
daa
add
gs
xchg
andl
mov
adc
and
hlt
mov
or
aaa
pop
shrb
xor
js
push
in
add
sbb
js
push
xchg
shr
pop
sub
pop
int3
push
aaa
cld
decl
sub
int3
mov
test
xchg
sub
in
pushf
dec
push
ljmp
pusha
push
push
and
stos
mov
xchg
addr16
stos
push
shll
decl
dec
call
cltd
dec
lods
jle
cwtl
pop
scas
adc
jne
push
std
ljmp
jle
adc
outsl
pop
mov
xor
pop
pusha
ret
sbb
inc
mov
mov
lods
sahf
fs
xchg
in
lock
iret
mov
enter
fisubrs
hlt
fimull
jg
xchg
cmp
add
insb
flds
lock
test
inc
inc
clc
pop
loope
inc
adc
aas
mov
sub
inc
pop
cmp
out
mov
out
xorb
mov
adc
mov
xchg
aaa
pushf
and
cli
decl
shrl
in
adc
scas
outsl
lods
decl
push
or
imul
scas
xor
fmuls
mov
ds
lock
scas
cmp
mov
clc
push
mov
pop
sbb
sbb
xor
incl
xor
cli
int
lock
xor
mov
ljmp
and
adc
rorl
xchg
xchg
dec
xabort
sub
rcrb
incl
or
mov
scas
clc
pusha
xchg
mov
pop
arpl
cmc
mov
cmp
jecxz
call
sbb
repnz
add
mov
lods
jb
les
cwtl
repnz
sub
ja
repz
sbb
bound
push
sub
or
pop
int3
xchg
mov
mov
and
and
xor
aaa
jmp
cmp
icebp
mov
adc
xchg
fisubl
mov
inc
sub
popf
int3
mov
ja
jp
es
pop
pop
lcall
lcall
sub
lods
mov
stos
bound
mov
lcall
scas
scas
fdivrs
cmp
ljmp
scas
in
mov
cmpsw
in
pop
inc
or
and
adc
xor
pop
mov
nop
test
jmp
or
xor
js
mov
push
jl
lods
mov
ret
and
scas
mov
shll
lret
dec
or
mov
adc
mov
xchg
add
in
mov
addl
into
loopne
sti
loopne
mov
incl
push
fsubs
dec
cwtl
scas
mov
xor
orl
push
xor
cmp
mov
dec
xor
mov
iret
mov
add
and
inc
pop
adc
outsl
mov
cmp
pop
mov
cld
imul
bound
sub
jb
push
nop
clc
jmp
or
ja
jae
mov
incl
inc
sbb
int
mov
adc
popa
jl
mov
mov
sub
mov
mov
leave
ljmp
push
pop
push
sub
xchg
and
mov
or
add
mov
repnz
jmp
xor
xchg
adcb
es
cmp
dec
ret
cmp
pop
fsubrs
ljmp
sbb
popf
scas
in
jmp
hlt
xchg
mov
jle
lret
push
das
movsb
pop
fsubrs
xchg
mov
incl
subb
mov
lcall
push
mov
sub
or
push
cmp
in
fst
cmp
int3
cmp
scas
js
inc
pop
add
subl
clc
or
mov
arpl
xchg
cmpsb
mov
incl
cmp
inc
sbb
sub
cmp
mov
out
add
mov
loopne
mov
mov
cltd
stc
inc
or
xchg
ret
pushl
dec
mov
push
inc
ljmp
les
pop
rolb
cmp
imul
fdivr
jmp
inc
cmp
mov
je
xchg
xchg
fwait
xchg
cli
aas
clc
inc
pop
inc
sub
ret
movsb
adc
push
mov
push
and
sar
ljmp
in
popa
mov
inc
sub
dec
lea
inc
cmp
dec
xor
push
lea
jne
adc
pop
ret
movsb
lahf
and
hlt
ljmp
mov
cmp
cwtl
aam
push
imul
jp
or
xor
popf
lock
sub
aad
pop
mov
cltd
hlt
into
es
lret
dec
test
jmp
cwtl
lds
pop
movsl
dec
movsl
sbb
adc
sub
sub
adc
cmpsb
loop
call
das
sub
lret
mov
adc
imul
cmp
or
mov
clc
test
cld
add
jmp
lret
add
cltd
or
out
jmp
lahf
add
pop
xor
aad
jns
pop
mov
xchg
xchg
lock
in
ret
lods
sub
fists
out
push
sbb
call
scas
push
ds
call
xor
aam
sbb
jns
xor
scas
clc
xchg
imul
mov
cmp
subb
pop
ss
xchg
dec
sbb
lcall
sub
ljmp
lea
xor
mov
mov
gs
xchg
mov
adc
jge
xor
movsl
enter
ljmp
dec
cs
mov
int
sbb
or
and
enter
pushl
mov
mov
les
push
imul
dec
data16
xor
outsb
or
call
and
push
sarb
push
sbb
call
sub
xchg
add
ret
lret
mov
mov
gs
out
daa
aaa
pop
loop
call
push
xchg
push
sub
add
or
push
adc
xchg
dec
clc
stos
and
insb
jle
aad
push
pop
lret
jbe
lds
or
pop
out
mov
sahf
dec
sbb
cmp
scas
mov
stc
aam
mov
cmpsb
mov
cmc
test
add
mov
cmp
adc
or
andl
xor
sub
scas
sbb
call
pop
fsubr
adc
movsb
mov
fcmovb
leave
je
pop
jg
orl
push
adc
xor
popf
inc
mov
cs
mov
out
xchg
fninit
and
jb
lea
aaa
xchg
call
mov
mov
mov
mov
mov
jne
pop
dec
stos
xchg
dec
mov
das
dec
arpl
ljmp
imulb
insb
test
sbb
sub
jo
jmp
or
jmp
hlt
adc
inc
and
xchg
add
test
mov
xchg
add
dec
es
or
lods
ljmp
jbe
cmp
and
outsl
arpl
xchg
mov
pop
adc
pop
mov
out
mov
lcall
adc
jns
jge
pop
cwtl
sbb
mov
pushf
sarb
call
jmp
arpl
xchg
lea
inc
int3
sbb
inc
xor
push
mov
dec
or
shll
add
shlb
insl
dec
pop
cli
mov
mov
in
jmp
lret
or
pusha
hlt
ret
sbb
mov
or
ljmp
cli
shlb
jb
lods
arpl
bound
lods
aaa
cmp
mov
movsb
rcrl
testl
jno
aam
neg
pop
icebp
incl
scas
jno
xchg
push
test
imul
mov
int
arpl
scas
and
imul
adc
lret
and
cmc
decl
push
inc
push
sub
lret
dec
push
stos
repnz
adc
gs
jo
das
mov
call
je
test
sbb
dec
movsb
inc
inc
mov
je
xchg
lods
adc
sub
xor
sbb
push
cld
decl
sbb
andb
sub
mov
in
in
aam
inc
stos
sub
mov
push
xchg
xchg
movsb
push
lds
mov
stos
sub
xor
xlat
daa
lods
imulb
pop
sti
loopne
mov
repnz
cli
sti
cmp
inc
pop
add
andb
ljmp
xor
in
das
add
xor
out
jo,pn
inc
or
add
dec
imul
cmp
jmp
jg
aas
mov
mov
adc
push
shrb
jno
inc
iret
rolb
and
sahf
loope
loope
sbb
out
push
xchg
push
ljmp
mov
push
jnp
mov
or
lcall
or
decl
int
insb
dec
mov
xchg
pop
nop
pop
dec
decl
jmp
and
sub
ljmp
cmp
mov
push
dec
pushl
mov
pop
adc
adc
aas
inc
mov
and
xchg
xchg
imul
mov
loope
mov
stos
enter
and
rolb
aad
sbb
loope
push
add
xchg
dec
inc
mov
bound
in
or
mov
mov
and
decl
dec
ret
or
es
stos
and
cwtl
sahf
dec
adc
mov
or
sub
mov
xor
pushl
mov
jns
shll
sub
push
cmp
popa
xor
sbb
or
js
scas
add
mov
cld
mov
xchg
adcb
push
add
add
pop
xor
sub
cwtl
jp
mov
lock
lcall
repz
jecxz
jbe
das
push
add
mov
fdivs
cld
mov
mov
std
push
cltd
lcall
push
or
pop
xchg
nop
lahf
and
push
stos
std
mov
test
inc
xor
mov
and
mov
pushl
cld
lcall
mov
rorl
sbb
mov
xchg
arpl
xor
sub
cltd
shrb
shlb
inc
inc
adc
xor
mov
in
fildll
ja
push
cltd
mov
and
pushl
imul
lods
dec
rcrb
shl
or
pop
cmpsb
loope
leave
rorb
mov
mov
hlt
and
inc
das
js
mov
push
jp
rcrl
pushl
fsubrs
lds
mov
push
xor
adc
dec
sbb
lcall
dec
add
repnz
rcrb
mov
mov
push
add
pusha
bound
fcomip
incl
inc
push
mov
cmpl
test
jbe
aaa
fsub
cmp
stos
pusha
mov
add
add
pop
add
movsb
or
call
adc
mov
scas
cli
filds
clc
adcb
and
imul
inc
ljmp
xor
sbb
lods
stos
fisttps
pusha
dec
sub
shll
fwait
add
sub
add
mov
adc
nop
data16
aas
icebp
dec
mov
xchg
movsb
adc
xchg
inc
and
sub
sub
call
cli
imul
les
repnz
pushf
xchg
lret
and
je
ds
mov
jo
sbbb
adc
push
pushf
incl
pop
inc
test
or
repnz
xchg
enter
xchg
inc
mov
fcomps
sbbl
mov
or
in
mov
xchg
es
inc
mov
fadd
decl
ljmp
sbb
orb
hlt
jmp
xchg
xor
mov
pushl
imul
mov
pop
sub
daa
data16
lahf
pushl
movsb
adc
mov
add
pop
dec
cmpsb
sub
inc
mov
ljmp
test
mov
loop
or
mov
jp
inc
inc
jg
or
lret
in
mov
mov
loopne
dec
in
mov
mov
inc
int
lcall
les
lds
pop
jecxz
ljmp
xor
cmpsb
aam
adc
ljmp
nop
repnz
sbb
shrl
lret
stos
and
pop
popa
cli
mov
clc
mov
cmpl
sub
jbe
mov
cltd
mov
adc
mov
mov
cmp
insb
stos
xor
stos
scas
sbb
call
and
sbb
sub
push
or
cmp
dec
lods
or
inc
sti
xor
js
and
mov
inc
hlt
in
mov
mov
mov
pop
pop
ret
mov
cs
jnp
scas
ror
imul
ret
arpl
decl
adc
call
cmp
mov
jmp
ret
xchg
cltd
add
mov
incl
xor
mov
xorl
stos
shlb
inc
int3
mov
rorb
push
cmpsb
adc
adc
fldl
cmp
add
lea
xor
cmp
or
or
pushl
and
clc
push
mov
push
test
mov
arpl
test
scas
jmp
clc
mov
loop
in
push
or
add
adcl
add
or
push
push
ljmp
and
add
subb
pop
cmp
add
pop
les
xor
ret
cwtl
adcb
jg
cltd
adc
lcall
or
into
sbb
repz
aas
inc
int
fsubrl
cmp
cmpsb
in
or
stc
imul
aam
lds
add
js
ds
cmp
clc
ljmp
cmp
loope
bound
cmp
lret
ja
rcr
add
out
inc
fnstenv
mov
ljmp
sbb
add
or
movsl
fcmovb
lods
push
jns
pusha
fcos
call
icebp
popf
and
mov
mov
or
arpl
fs
in
sbb
call
pop
mov
pop
xor
in
jmp
push
dec
imul
aad
js
comiss
cmc
adc
add
pushf
addb
out
scas
or
jns
das
push
cmp
jg
outsb
dec
sbb
cmp
cmpsb
pop
add
or
xchg
ret
mov
add
clc
outsl
pop
decl
sbb
add
sti
add
cmp
push
push
mov
cwtl
lea
mov
cld
les
mov
jmp
cmp
adc
push
adc
movsb
push
pop
add
mov
stos
nop
pusha
jg
loope
cmpsb
mov
jp
xor
jge
and
cmp
adc
shlb
dec
or
or
pop
jnp
adc
or
xchg
fimull
xchg
sub
xorb
jg
fdivrs
pop
xchg
lds
mov
push
mov
push
lret
ljmp
inc
loope
mov
push
and
sbb
pusha
sub
xchg
dec
add
mov
jl
outsl
cli
incl
dec
test
sub
push
adc
or
nop
ror
xchg
pop
pop
add
rolb
pop
push
test
pop
xor
addr16
mov
xchg
insb
lods
lcall
stos
sbbb
inc
pop
dec
sub
adc
fdivrp
in
call
leave
add
imul
cwtl
xor
popa
enter
jl
hlt
rorb
testl
faddp
sub
cwtl
mov
add
subl
cli
jg
fidivrs
sbb
mov
add
jmp
sarl
in
mov
mov
sub
lcall
and
ret
pop
mov
xchg
insl
mov
mov
mov
cmpl
ljmp
clc
mov
inc
pop
js
ret
clc
shlb
add
jge
ss
sub
sub
in
loope
push
adc
inc
sub
cld
dec
add
ss
sub
push
ret
xor
add
add
pop
cmp
int3
es
ficompl
mov
aaa
sub
xchg
aad
sbb
lcall
pop
sar
pop
sub
call
push
pushf
mov
cmp
and
inc
sete
sahf
out
cld
ljmp
adc
cld
and
push
aaa
pop
xchg
shll
in
cld
mov
xor
inc
pushl
push
cmp
dec
jecxz
aas
es
int3
and
xchg
test
xchg
shll
call
lcall
push
inc
outsb
push
arpl
push
xchg
mov
imul
push
imul
pusha
decl
add
xchg
fs
fwait
inc
lcall
sahf
pushf
xchg
jp
add
adc
into
and
push
pop
ret
jl
ror
jle
push
stos
dec
xor
fadd
movsb
fadd
int
call
shrb
fcompl
cmp
addb
loopne
mov
sbb
xlat
push
andl
sbb
jp
xor
mov
adc
cld
inc
cmp
xchg
cmc
js
push
dec
mov
xchg
inc
pop
loop
push
incl
lock
mov
ud2
pushaw
js
addr16
xchg
adc
or
xor
sarl
inc
or
mov
pop
xchg
rcrb
or
or
cmp
or
sbb
xchg
dec
subb
xor
mov
cmpsb
sbb
in
or
xor
xor
inc
mov
pushf
jmp
lea
push
xlat
pop
dec
push
add
enter
and
enter
adcb
dec
cmpb
pop
push
cwtl
jg
loopne,pt
xchg
pusha
and
aas
stc
adc
mov
loop
mov
sbb
cmp
sbb
movsb
adc
rolb
decl
rcll
jmp
mov
cmp
cld
fsubl
es
push
pop
decl
cwtl
xor
and
lods
pop
push
scas
fwait
xor
call
in
xor
mov
mov
push
push
addb
in
jge
faddl
mov
xchg
pop
xchg
lock
lcall
or
cs
pop
sub
xor
inc
add
xchg
fbld
push
mov
mov
inc
test
clc
call
mov
mov
fldl
hlt
or
fstps
push
insl
testl
sub
dec
sbb
mov
xor
scas
cli
or
outsb
mov
sti
pop
prefetch
sti
push
sbb
cmovle
sub
or
ret
jg
call
mov
mov
outsl
jg
aaa
repnz
loope
aam
pop
xlat
add
and
cli
int
dec
mov
cld
rclb
adc
bswap
add
sbb
sub
inc
outsb
je
add
stos
or
inc
data16
cmpsb
xorl
dec
outsl
aad
movq
cwtl
xchg
mov
mov
fcoms
xor
and
jae
mov
mov
sbb
aad
imul
int
sarl
jb
jecxz
lods
cmpsb
xorb
jmp
or
or
int3
call
repnz
aad
mov
imul
or
push
mov
jne
push
sbb
cmp
cmpsl
push
out
sub
pop
mov
cmp
fldenv
sar
xchg
test
shrb
cmp
fcmovnbe
ret
mov
or
jg
inc
je
aas
je
dec
hlt
mov
or
in
add
addb
push
andb
cmp
mov
xchg
add
das
sbb
dec
inc
and
push
sub
out
add
call
pop
pop
fcmovnb
outsl
nop
jno
add
add
fisttpl
out
push
rolb
adc
or
pop
pop
jne
xchg
dec
cmc
decl
lcall
insb
out
pop
pop
xchg
add
cld
pop
out
outsb
int3
xor
loopne
xor
jg
stos
fidivrl
fcomps
pop
popl
fisubl
clc
pusha
jno
mov
or
jg
movsb
lea
mov
xor
add
lret
out
out
push
inc
nop
icebp
jg
gs
or
ja
cmovbe
lcall
xor
adc
inc
div
pushf
test
push
sar
jmp
int3
dec
push
cmp
or
xlat
mov
and
loop
sbbb
mov
ficomps
inc
lret
ret
push
push
jns
test
inc
cmp
arpl
inc
inc
jp
clc
andb
pushl
bound
adc
test
and
and
lcall
es
cltd
andb
incl
dec
push
sub
hlt
or
sbb
cwtl
inc
add
push
push
lcall
push
cmpsb
push
fwait
sub
lods
pop
jbe
cli
gs
mov
lods
xor
add
decl
aam
arpl
cmp
in
lods
ljmp
xor
pop
shlb
imul
cmp
shlb
orl
pop
repz
dec
push
lock
lcall
jns
inc
test
scas
scas
rorb
out
fidivs
ljmp
cmp
dec
mov
cmp
out
mov
push
out
les
mov
scas
jge
sti
xchg
shlb
cmp
push
xchg
jge
jns
push
mov
push
test
jl
call
jge
and
bound
xchg
pop
ret
pop
or
add
inc
jl
inc
adc
loopne
jbe
mov
cmp
lcall
pop
test
call
xor
push
pop
push
testl
out
test
sbb
inc
xor
fsubrs
ljmp
les
fists
adc
xchg
daa
mov
fidivrs
adc
cwtl
movl
decl
and
and
mov
pop
sub
ja
adc
pop
or
mov
pop
incl
push
mov
fwait
or
test
push
sub
sahf
dec
mov
cmpsl
or
pop
cmc
lahf
or
jp
mov
stc
out
or
and
mov
movsl
xchg
pop
sub
call
sbb
cmp
nop
lcall
dec
xor
and
popa
push
push
dec
cs
xor
stos
adc
cli
subb
pop
inc
adc
pop
movsb
adc
lock
rorb
or
push
shll
inc
int
jg
fs
adc
push
push
push
push
dec
in
push
pusha
jl
push
mov
jge
push
mov
cltd
gs
pop
fs
aad
xchg
sbb
pop
xor
scas
sub
cmpsl
inc
sbb
sbbl
sbb
sbb
pop
sete
pop
gs
adc
movl
mov
or
sbb
cmp
cmpsb
sbb
fnsave
outsl
mov
mov
pushf
fsubl
jne
pushf
leave
push
rclb
pop
sbb
jecxz
add
lcall
cltd
fimull
inc
cmpl
cmp
out
inc
mov
icebp
cltd
cmpsl
add
rolb
fisttps
jmp
jae
cld
lea
adc
push
push
inc
sbb
adc
shl
addl
incl
or
js
push
addl
mov
decl
lock
icebp
push
jmp
loope
outsb
or
icebp
ljmp
fnstenv
dec
dec
arpl
cmp
sub
jbe
push
sbb
xchg
or
in
adc
cmpl
roll
mov
xchg
xor
sub
inc
pushl
push
xchg
dec
cwtd
insl
inc
xchg
ja
in
add
scas
call
sub
jnp
or
sbb
mov
jle
ficoml
mov
adc
dec
sbb
sbb
movsl
add
cmp
mov
cmp
add
sbb
loopne
fdivr
fnstcw
mov
aam
adc
movsb
lahf
ss
fisubrl
adc
fisttps
or
jle
imul
mov
add
cmp
jmp
pop
movsb
aad
push
mov
setl
xor
test
add
jmp
push
push
mov
adc
push
pop
std
decl
and
dec
xchg
pop
dec
inc
adc
add
andb
sbb
jmp
xchg
scas
movsb
icebp
mov
sbb
jns
push
test
mov
sbb
fs
icebp
add
xchg
fwait
sub
sub
incl
sbb
sbb
push
ljmp
xor
cmp
push
pop
data16
jbe
sti
cmpsb
dec
sub
movsb
mov
or
pop
lret
sub
adc
add
icebp
mov
xchg
or
bound
repz
cwtl
mov
hlt
push
insl
or
add
xor
in
les
cs
xor
push
hlt
call
or
or
repz
xorl
decl
push
into
test
jp
adc
es
push
data16
inc
cmpsb
call
push
leave
jne
jp
mov
es
ror
or
xchg
in
mov
and
aam
adc
jmp
mov
jge
addr16
daa
dec
dec
sub
mov
push
in
dec
dec
push
cwtl
incl
daa
jg
or
stos
dec
mov
sbb
and
mov
jne
ds
or
dec
dec
inc
mov
and
xor
ret
movsb
fdivr
push
xorl
cli
pushl
adc
push
or
je
imul
clc
lcall
pop
add
mov
test
int3
xchg
bound
or
or
or
xor
gs
adc
shr
dec
lret
jg
fisubs
cmp
xchg
mov
mov
nop
xchg
pushl
enter
out
mov
mov
fisttpl
adc
pushl
xorl
shll
jecxz
pop
mov
fdivrs
cltd
lea
pop
or
std
jmp
fstps
jmp
add
loopne
or
in
hlt
jg
insb
push
pop
shlb
xor
push
out
lcall
push
mov
scas
and
inc
rolb
imul
xor
incl
xchg
adc
mov
adc
push
dec
and
dec
push
and
decl
mov
mov
stos
sarl
sbb
push
push
es
add
xor
dec
lods
xchg
data16
xchg
popf
and
ljmp
adc
fdivrp
mov
movsb
shrb
in
scas
popf
jo
xchg
cmp
imul
mov
sub
xchg
xchg
push
sub
adcb
fwait
mov
leave
inc
pop
cmp
fldcw
inc
in
imull
les
jle
push
std
stc
add
lret
mov
jmp
xlat
cmp
add
push
jg
ljmp
xor
pushf
mov
and
call
mov
cmp
inc
or
add
xchg
das
movsb
cli
and
outsl
jp
ljmp
shll
jo
decl
push
push
push
mov
or
cs
mov
lock
je
hlt
ljmp
inc
mov
imul
push
adc
int3
xor
sbb
add
mov
and
pop
inc
out
cli
clc
hlt
jge
adc
xor
in
into
loope
xor
loope
xchg
fs
lcall
sub
jp
add
test
pop
mov
cwtl
and
inc
ds
inc
ljmp
xchg
fdivr
jo
cmp
roll
jl
mov
xchg
ret
push
sbb
cs
bound
cwtl
in
cmp
xor
xor
mov
and
mov
test
or
mov
pop
mov
lcall
push
jg
fwait
iret
adcl
inc
xchg
cmp
nop
add
sub
xchg
adcb
mov
jle
ljmp
xchg
ss
mov
mov
sub
push
pusha
leave
sub
sub
lret
incl
xchg
jo
jle
adc
arpl
nop
sub
mov
dec
popf
test
jno
xor
scas
insl
ret
pop
lock
jmp
rorb
lcall
clc
imul
sbb
add
cmp
imul
push
xor
xchg
ret
inc
add
jg
inc
or
test
sbb
hlt
lods
jns
int
lret
mov
sub
hlt
hlt
aaa
add
pop
out
jl
mov
fnstsw
push
lahf
in
adc
jbe
sbb
in
mov
loopne
pop
call
mov
je
movsb
fsts
movsb
or
icebp
sub
ja
decl
and
jns
inc
mov
push
movsb
and
decl
aam
idivb
mov
mov
mov
sbb
jmp
call
int3
cltd
daa
pop
jp
xchg
adc
fdivrl
ret
and
jbe
xor
in
call
popf
add
fucom
jne
mov
mov
decl
out
dec
pop
mov
fnstcw
ds
ret
ljmp
inc
iret
notl
push
xchg
test
pop
xchg
lret
inc
mov
enter
sbbb
sahf
add
incl
test
ror
test
mov
int
adc
inc
push
push
push
push
mov
jmp
pushf
lret
mov
push
mov
pusha
pop
addb
popa
js
test
inc
xor
inc
pop
in
lcall
sub
xchg
adc
rcll
xchg
cmp
xchg
fldl
jno
xchg
jmp
push
rcll
pop
jge
lds
fwait
lds
pop
aad
pop
xchg
mov
pop
int
hlt
add
push
cwtl
sbb
inc
or
lcall
mov
sbb
in
dec
jbe
pop
mov
xchg
scas
cmpsb
mov
push
dec
or
push
xor
call
mov
ljmp
lcall
push
mov
pop
aam
rcrl
dec
inc
push
xchg
mov
dec
imul
or
lcall
rcll
mov
hlt
loop
adc
jo
mov
sarb
ror
mov
call
xchg
int3
push
xchg
cwtl
inc
mov
addr16
adc
pop
mov
fprem
cli
adc
mov
lahf
ss
std
int
test
cmp
pop
inc
or
push
mov
insl
mov
lock
mov
jns
hlt
or
pop
cmp
inc
dec
cwtl
add
ljmp
mov
or
inc
in
mov
cmovnp
add
or
inc
add
lret
test
add
test
xchg
or
pushf
mov
mov
jmp
insl
mov
push
sbb
call
jbe
sbb
or
dec
fldenv
pushl
sahf
in
aam
popa
aad
and
xchg
insb
pop
loope
add
incl
addb
inc
adc
push
add
int
insl
mov
mov
push
push
in
lret
dec
or
loope
in
aad
and
pop
leave
dec
mov
adc
incl
pop
loope
pop
pop
pop
movsl
dec
push
loop
sbb
push
or
sbb
incl
xlat
les
add
xchg
and
xchg
ror
adc
cld
mov
mov
mov
cmp
loop
add
pop
cwtl
pushf
jns
int
cld
mov
repnz
push
into
sbb
ja
shlb
test
in
rcr
pusha
inc
sbb
jge
sahf
push
insb
popa
jecxz
cwtl
xchg
dec
xor
mov
jns
sar
dec
mov
jl
mov
jmp
jnp
push
pushf
call
ret
adc
sbbl
and
lcall
clc
lcall
inc
adc
stos
test
std
mov
pop
fdivr
adc
data16
sahf
les
pop
shl
inc
mov
mov
add
or
clc
ljmp
xor
cmpsb
cwtl
add
popl
adc
push
into
aad
or
fs
mov
dec
lea
push
setbe
test
dec
jle
imul
rorl
aam
push
mov
mov
cmp
dec
sahf
pop
and
add
pop
push
lea
adc
call
sahf
fldl
insl
lock
sbb
push
push
push
pop
jp
incl
scas
shl
mov
lret
xor
jbe
test
inc
insb
pop
sub
sbb
ficomps
push
jnp
mov
call
pop
cmpsb
ljmp
in
lcall
or
out
or
lods
ret
xchg
rorb
and
inc
xor
repz
rcrb
or
clc
mov
and
pop
mov
cbtw
mov
cmp
fidivl
push
lea
inc
mov
or
push
sbb
add
pop
sar
cmc
std
fwait
mov
dec
or
jnp
push
outsl
sbbb
cwtl
inc
xchg
out
and
add
rcll
add
dec
cmp
in
lahf
aaa
cmc
mov
or
jg
or
orl
jp
ds
lret
aam
dec
fdivrs
mov
inc
lods
iret
inc
lods
daa
mov
inc
dec
inc
cwtl
inc
clc
ljmp
cli
int
jmp
or
movsb
test
lea
or
dec
jns
inc
push
ret
jp
filds
dec
jmp
mov
rorb
sub
push
push
call
pop
mov
cltd
sbb
hlt
hlt
or
dec
out
arpl
fstpt
call
ret
sbb
xchg
cwtl
addl
in
mov
mov
sbb
rcrb
adc
push
cli
pop
mov
sbb
je
decl
sub
cli
lods
ficompl
jmp
mov
xchg
add
cli
adc
in
in
inc
sbb
pop
push
popa
pop
decl
in
pop
push
add
loopne
adc
mov
subb
call
pop
stos
mov
lock
mov
cmp
pop
mov
jecxz
cld
stos
dec
jecxz
sub
and
cltd
inc
insb
jg
or
movsb
push
pop
vunpcklpd
push
and
lea
outsl
clc
jmp
push
sub
pusha
cltd
inc
xor
jo
mov
push
insb
push
addr16
call
lock
sti
and
scas
pop
mov
pusha
mov
mov
cs
clc
xchg
pushl
daa
inc
dec
mov
insl
inc
ljmp
jl
adc
out
test
sbb
lock
mov
xor
mov
fmul
dec
lret
dec
stc
imul
test
inc
ret
mulb
addl
lcall
pop
or
xor
add
sbb
push
add
scas
add
leave
pop
loope
mov
fnsave
aad
mov
gs
sar
cwtl
adc
popf
lds
mov
enter
dec
fsubrs
rcll
cmp
and
pop
cli
sub
pushl
cld
into
inc
test
gs
xchg
mov
decl
call
xchg
pop
push
pop
mov
aad
ficoml
and
inc
pop
in
sub
sub
addl
std
sub
lahf
loop
test
inc
fidivs
test
loop
add
ret
fnstsw
rclb
xor
fldt
sub
int3
mov
dec
or
fisubrl
or
cmp
inc
incl
scas
sbb
sti
jns
jl
stos
jno
xchg
cmp
ljmp
test
fcomip
es
dec
cli
shr
loopne
popf
mov
cli
cld
out
sti
mov
mov
push
jns
cwtl
dec
lcall
mov
mov
loop
jg
out
call
cmc
stos
or
dec
sub
mov
call
mov
insl
adc
sbb
adc
ljmp
inc
lods
popa
fadd
push
repnz
jbe
add
lcall
or
adc
and
sbb
xchg
add
mov
jmp
or
pop
stc
xchg
sub
or
test
dec
mov
and
sbb
inc
pusha
adc
add
lcall
mov
or
cmp
rol
dec
xchg
sub
ficoms
lcall
pusha
cmpsb
stos
sub
jns
insl
adc
or
adc
pop
push
push
movsb
incl
enter
sbb
fldcw
fisttps
stos
lods
inc
adc
lods
mov
and
cld
call
cmp
mov
sahf
xor
adc
in
insb
ss
push
xchg
sbb
lods
sbb
fmuls
fsubs
ja
imul
cmp
in
adc
ljmp
jb
mov
xchg
jb
adc
cmp
push
ss
hlt
fs
mov
ljmp
mov
test
add
stos
mov
jb
fs
inc
test
jnp
aam
iret
incl
cld
fsubrl
add
cmp
mov
enter
add
daa
call
adc
pop
pushf
or
das
xlat
mov
sub
pop
nop
dec
ss
or
fisttps
in
pushl
pop
push
es
inc
sbb
or
lret
cmp
xchg
inc
ficoml
adc
push
test
pusha
dec
addl
mov
or
outsb
mov
mov
imul
lcall
out
mov
pop
test
jno
je
imul
dec
jnp
cmp
stc
push
aad
inc
dec
inc
inc
ljmp
push
adc
pop
movb
dec
xchg
lcall
mov
jl
xor
inc
sahf
shrl
lea
cmp
icebp
inc
lcall
pushf
dec
fwait
loopne
lock
push
hlt
rcrb
adc
adc
add
sub
jns
and
push
imul
cmpl
imul
sbb
and
sub
cmp
push
popf
call
jbe
mov
idiv
mov
adc
add
lds
xchg
lock
dec
push
test
inc
mov
test
ljmp
pushf
fwait
sbb
xchg
mov
xchg
mov
mov
nop
push
aam
cld
inc
mov
adc
sub
or
sbb
xor
imul
dec
ljmp
push
rcll
mov
fmuls
or
or
popa
pop
cli
lcall
lds
icebp
outsl
std
xchg
fstps
adc
sub
sub
or
mov
jle
adc
mov
jno
scas
mov
fcmovu
mov
fcomi
sbb
jmp
jle
or
jmp
mov
in
fdivs
adc
sar
jg
jmp
sbb
mov
pop
inc
xor
lea
loope
loop
fsubrs
sar
jo
incl
je
or
bound
faddl
xchg
add
jb
shl
rolb
hlt
sbb
push
rol
fistps
addl
add
pop
mov
mov
pop
not
and
fidivrs
pop
lea
call
addl
pop
faddl
adc
sbb
adc
out
push
out
cld
sub
or
adc
outsl
clc
incl
mov
add
jns
dec
pusha
pushf
cmpsl
out
push
or
es
clc
out
into
daa
inc
out
test
scas
mov
ja
call
inc
push
xchg
testb
aad
and
lret
scas
mov
rclb
dec
ljmp
shlb
repz
mov
sbb
inc
pop
xor
push
pushl
cli
decl
push
or
movsl
fcmovb
pop
orb
inc
cmp
adc
cmp
add
mov
xor
enter
cmp
pusha
or
xor
mov
xor
pop
std
call
or
mov
insl
jg
xor
or
jnp
inc
fistl
and
js
rorb
fs
cld
aad
dec
and
out
mov
xchg
lea
rorl
push
movsb
push
sbb
les
mov
adc
cld
dec
dec
paddsb
pop
imul
jl
push
mov
xchg
pop
sbb
xchg
fs
xor
sub
leave
xchg
es
adc
sbb
push
xchg
sub
mov
ljmp
into
sbb
in
mov
cmp
mov
rorl
push
fdivp
dec
scas
add
adc
into
cwtl
pop
sahf
lods
mov
decl
je
sbb
popf
sbb
push
out
and
jo
jo
inc
aam
mov
popa
movb
xchg
push
in
pop
inc
xadd
xlat
mov
add
call
jecxz
popf
jp
imul
jmp
xchg
mov
call
outsb
jecxz
xchg
pop
pop
jb
lret
xchg
jns
mov
fdivs
iret
lahf
getsec
loopne
pop
lret
push
aam
dec
dec
sbb
mov
loop
incl
popf
mov
adc
sub
push
inc
cwtl
cmp
cmc
mov
sahf
cmp
mov
dec
ds
or
stos
push
mov
pop
inc
add
cld
or
xchg
push
lock
cmp
pop
mov
cli
inc
movsb
hlt
jno
jge
cmc
fxam
jae
mov
cmp
cmp
aaa
std
call
stc
loop
mov
das
dec
mov
push
int3
dec
ret
mov
dec
and
inc
add
inc
or
inc
stos
clc
pushl
add
inc
loopne
mov
add
and
icebp
or
das
ret
or
add
icebp
ljmp
xor
sub
vmovsd
popf
push
lcall
ficoms
xor
daa
shll
orl
ret
aaa
aaa
mov
dec
addl
sub
jmp
xor
and
bound
inc
and
aas
arpl
lock
dec
imul
or
decl
dec
mov
jb
mov
adc
ljmp
fisttps
cmp
movsl
and
push
cwtl
push
jbe
lret
add
push
lcall
daa
movsb
push
sbb
stos
scas
mov
mov
sub
mov
das
mov
mov
sub
inc
lock
stos
cli
fiaddl
stos
arpl
mov
mov
int3
scas
mov
lcall
call
pop
shrl
insb
mov
inc
shll
jns
imul
lock
arpl
sub
ss
jb
loope
and
test
adc
mov
dec
clc
addl
cmp
incl
cmp
xchg
addb
fnstcw
out
mov
push
cmp
cmp
in
xchg
outsl
ds
pop
test
idivb
pop
mov
lcall
push
addl
dec
shlb
pop
xor
or
or
inc
ss
shrl
add
clc
decl
jnp
xorl
insb
sbb
fcomip
fcomip
dec
pop
bound
fcmovnb
es
insb
ss
sub
incl
add
imul
or
cmp
jl
shlb
xchg
pop
test
stos
dec
loop
and
add
and
adc
and
lret
and
loope
incl
arpl
mov
lods
mov
xor
or
push
adc
jb
mov
xor
cltd
pop
cmc
mov
fsubp
jmp
push
pushf
push
mov
jl
leave
jnp
imul
ljmp
fdivl
cmc
mov
mov
stos
aas
ljmp
sti
out
pop
iret
sarb
sbb
push
pop
pop
scas
les
call
add
lcall
or
les
xor
ds
add
mov
insl
mov
xorl
sbb
inc
sbb
add
mov
mov
ret
decl
pop
sbb
xchg
fadds
or
or
mov
orb
or
mov
adc
out
xchg
testb
adc
movsb
pushl
nop
dec
cld
popa
inc
jae
fcoml
sub
adc
sbb
movsb
ss
xor
cmp
sub
xchg
movsb
adcl
mov
mov
xchg
ljmp
mov
mov
icebp
cmp
and
mov
repnz
dec
nop
test
and
jno
decl
mov
dec
mov
sub
dec
mov
jo
sbb
daa
dec
dec
adc
and
push
subb
pop
cmp
aad
sahf
dec
insb
xchg
stos
testb
fisttps
inc
xchg
bnd
daa
rol
jmp
push
push
stos
jb
jb
mov
fwait
or
mov
jg
mov
sbb
mov
cmpsb
pop
push
xchg
lret
lcall
incl
or
pop
or
mov
lret
sbb
decl
lea
ss
insb
fadd
shlb
push
mov
mov
decl
push
jb
nop
inc
xchg
push
out
lcall
lcall
incl
and
push
adc
dec
pop
sub
lods
push
mov
shlb
nop
dec
rolb
xchg
mov
xchg
rclb
pop
mov
stos
push
push
push
xlat
sub
xor
sbb
mov
inc
xor
outsl
push
loop
icebp
stos
test
add
dec
insl
sub
in
aam
fcom
pop
xchg
scas
and
orl
push
sub
mov
push
repnz
push
mov
mov
mov
cmp
lret
cmp
push
add
pop
lods
nop
stc
mov
inc
add
mov
sub
mov
add
dec
mov
mov
std
pushl
push
stc
push
pop
out
add
add
lods
sub
xor
call
in
or
mov
aas
jae
jle
xor
aam
and
nop
push
outsb
stos
nop
repnz
int3
fdivrl
dec
dec
xchg
mov
lcall
into
pop
mov
movsl
outsl
jne
adc
cmp
pop
dec
xchg
test
popf
or
imul
pushl
push
in
add
cld
rorb
xor
test
stos
mov
sbb
call
lcall
pop
movsb
adc
decl
and
in
cmp
cmp
mov
rcr
mov
repnz
sbb
xchg
sar
jg
ljmp
mov
mov
push
popl
cmp
call
movsb
jmp
test
das
jmp
sub
pushl
lret
mov
dec
or
mov
popf
sbb
push
sti
mov
fnstenv
add
lahf
leave
imul
mov
andb
jg
cmp
mov
jmp
popf
add
shll
cli
mov
decl
sbb
mov
ljmp
xchg
lods
std
mov
or
fsubrl
jns
mov
mov
js
cmp
xchg
mov
loope
cmpb
add
push
dec
incl
mov
jmp
pushf
add
adc
add
and
push
gs
mov
push
push
scas
inc
adc
lcall
sub
xor
dec
xor
iret
test
pop
ret
imul
aaa
incl
xchg
filds
mov
imul
adc
iret
mov
mov
lcall
enter
les
pop
lret
dec
cmp
repz
ret
popf
and
ljmp
inc
leave
leave
lods
mov
jmp
iret
repnz
movsl
lods
mov
ljmp
xchg
je
test
data16
cld
or
pop
stos
lods
jae
leave
jge
arpl
mov
jmp
adc
xlat
mov
pushf
dec
roll
sbb
mov
add
pushl
mov
scas
outsb
ret
movb
jbe
popa
scas
mov
call
fcmovb
inc
mov
sbb
cmp
jg
mov
pushl
cmp
push
jmp
incl
shrb
xor
cld
inc
out
pop
mov
test
pushl
sahf
clc
xchg
fisttps
mov
aad
mov
popf
insb
adcb
pop
jmp
icebp
loop
mov
out
loopne
dec
push
jp
loop
ds
sub
add
dec
fisttps
pop
fs
sbb
ret
push
push
pushl
ds
mov
gs
push
or
mov
jl
adc
xchg
jmp
outsb
in
push
cli
xchg
imul
hlt
daa
pushf
int3
dec
roll
shll
movsl
mov
mov
stos
cld
jg
mov
add
pop
add
add
rorl
cli
add
imul
mov
icebp
jg
mov
outsb
in
push
jo
push
cmpsb
mov
and
mov
rclb
bound
adc
jmp
arpl
out
add
push
pusha
or
adc
decl
sahf
mov
test
repnz
repz
rcll
icebp
sub
sbb
push
mov
sub
pop
adc
lods
jo
cwtl
dec
cli
clc
or
es
ljmp
sub
int3
cmc
fimuls
lock
dec
scas
hlt
in
dec
lret
push
lock
lods
test
dec
hlt
inc
in
cwtl
out
cli
xchg
dec
stc
outsb
cmp
enter
ljmp
inc
xor
psrad
mov
jbe
or
inc
cmp
mov
jl
adc
adcb
cwtl
fsubrl
jbe
cltd
outsb
sub
unpckhps
jmp
loop
push
imul
loop
out
int3
into
pusha
imul
mov
ret
or
ljmp
mov
sbb
or
setle
xchg
rcrl
cwtl
push
incl
mov
sbb
mov
sbb
icebp
gs
data16
leave
adc
xchg
insl
jnp
andl
jno
icebp
sub
jno
xchg
mov
and
orb
mov
scas
pminsw
pusha
call
jl
xlat
orb
sbb
ret
add
inc
cmp
dec
mov
and
arpl
mov
incl
xor
jl
fsqrt
loopne
cmp
cmp
insb
fdivp
push
cli
sub
es
mov
and
sub
insb
data16
or
rdmsr
icebp
pop
hlt
call
lods
mov
test
jecxz
dec
or
pusha
jo
loope
scas
cli
mov
and
ret
mov
shlb
xor
inc
sub
sti
inc
gs
out
adc
pusha
cld
int3
dec
adc
outsb
push
dec
jno
aam
int3
inc
stos
jp
imul
and
pop
jg
rolb
shlb
push
sarl
sbb
adc
cld
jmp
xor
xor
xchg
xor
xor
daa
push
xor
repz
mov
dec
push
xor
dec
adc
jmp
xor
icebp
ss
add
fisubrl
bound
xor
or
xchg
incl
jne
aas
test
ds
add
andb
fimull
les
outsl
ds
call
call
js
test
push
ds
or
es
movsb
mov
mov
stos
mov
iret
or
inc
xor
in
pushl
add
test
cmpsl
or
ret
or
fdivrl
fildll
xor
incl
inc
leave
push
add
and
gs
insb
lea
xchg
mov
sub
popa
ljmp
sub
xchg
push
push
cld
ljmp
inc
dec
mov
addb
pop
rcll
cmpsl
and
fwait
mulb
call
adc
add
in
lea
dec
lock
dec
and
mov
inc
jae
sub
push
adc
rorl
xor
ret
push
xor
decl
xor
xchg
dec
fistl
hlt
dec
push
loope
dec
sub
adc
jb
jecxz
jmp
push
mov
sbb
xchg
cmp
decl
mov
fiadds
in
and
lahf
add
or
rcrb
lcall
pop
dec
mov
fsub
test
pop
addr16
filds
adc
shl
movsb
lss
rorb
mov
cli
ret
sub
sub
inc
lret
ljmp
ret
fisubrs
mov
adc
incl
mov
add
pop
jmp
scas
das
inc
and
fisubl
jb
inc
scas
inc
sti
ljmp
out
inc
iret
lods
cs
adc
adc
loop
test
jmp
add
push
sub
and
xor
xor
fbld
sbb
aam
cmp
pusha
mov
dec
mov
ljmp
dec
xor
fists
xchg
xor
xchg
ljmp
ss
xor
push
pop
jp
bound
and
fcmovne
mov
push
rol
sbb
xor
incl
sub
js
push
movsl
andb
sbb
ret
and
and
xor
ljmp
jmp
and
dec
test
loopne
jp
push
hlt
pop
call
in
hlt
test
aam
decl
mov
insl
adc
aad
stos
pop
scas
fst
or
call
xchg
push
fbld
inc
xchg
push
cld
pushl
mov
xchg
insb
xchg
dec
and
xchg
loopne
mov
mov
hlt
add
fwait
dec
ljmp
mov
jne
xchg
out
push
adc
mov
int3
shrb
mov
push
out
daa
pusha
out
push
mov
fwait
mov
popf
cld
ljmp
mov
dec
sti
mov
cli
aad
inc
adc
add
push
jae
imul
pop
push
add
add
ja
outsl
pop
jbe
divl
divl
lea
add
mull
mov
inc
or
xchg
or
ss
fisubl
xchg
rclb
add
sub
mov
push
and
sub
mov
pop
cmpsb
addr16
cmpsl
mov
or
and
insb
outsb
aam
sub
push
fsub
pop
imul
ds
enter
push
mov
stos
daa
repz
dec
mov
sub
lods
fimull
into
or
imul
outsb
mov
aad
sbb
cmc
cld
das
sar
add
push
jg
lret
es
adc
push
cs
aaa
cmp
adcb
mov
int3
and
repnz
hlt
and
adc
and
call
pop
fnstenv
dec
or
jp
pop
loope
out
sbbb
jg
or
pop
call
pop
mov
cli
xor
ret
and
jb
or
rorb
ljmp
mov
mov
adc
inc
mov
jo
mov
mov
ret
notb
add
xor
cwtl
mov
js
cmpsl
adc
cmp
cwtl
mov
mov
clc
mov
pop
xor
js
das
xchg
jbe
arpl
decl
dec
jmp
add
inc
xchg
dec
inc
jbe
sbb
mov
mov
lea
std
cmpsb
push
decl
aad
fwait
xor
xor
call
idivb
add
shlb
mov
scas
or
popa
push
outsb
mov
fcomip
decl
scas
and
pop
inc
test
pop
jmp
jg
and
xchg
mov
clc
xlat
std
ljmp
mov
sbb
sub
sub
insb
mov
sub
aaa
enter
adc
pop
xchg
cwtl
dec
sub
outsl
cmp
imul
decl
jns
pushl
inc
dec
loop
cli
lret
ret
jb
mov
jb
cmp
mov
push
mov
ret
aam
shl
jge
test
mov
fiadds
xchg
rclb
push
xlat
dec
andb
mov
mov
add
sar
or
jg
in
aaa
xchg
sbb
sbb
arpl
mov
mov
lcall
aas
sbb
cmp
clc
ss
jmp
fimull
scas
call
xor
add
bound
push
fs
imul
movb
rorl
mov
jmp
hlt
out
xlat
testb
arpl
rolb
and
rcll
mov
fs
loop
scas
in
add
or
push
mov
cmp
mov
pushl
mov
dec
xor
add
es
jle
cltd
int
cli
add
add
rorl
fdivrl
sub
xchg
btc
into
xor
cmp
mov
ljmp
sbb
mov
popf
aas
mov
add
adc
dec
pop
xor
dec
fsubrs
shrb
js
push
xlat
push
fisubrs
call
sbb
or
dec
in
fwait
push
int
subb
aad
mov
incl
aad
push
les
or
sti
mov
jnp
fdivrp
mov
mov
pop
mov
adc
pop
imul
add
dec
push
cld
sti
mov
mov
popf
and
pushf
loopne
testb
and
or
pusha
or
ret
add
or
adc
ret
push
or
pop
ja
mov
xor
jbe
mov
into
test
cmpsb
cmp
scas
out
push
gs
cmc
call
mov
repz
nop
bnd
fnstcw
and
imulb
leave
cltd
pushf
leave
cpuid
push
leave
jg
bound
jge
loope
shl
pop
mov
je
outsl
imul
loopne
fistl
mov
bound
fs
test
or
popf
fldcw
incl
ljmp
lcall
mov
jo
dec
fwait
loope
mov
xor
cmp
shl
inc
call
xchg
scas
xor
add
adc
leave
mov
out
cmp
pop
lahf
std
cltd
ljmp
or
scas
addr16
push
mov
mov
mov
mov
xlat
sub
call
mov
mov
inc
or
xchg
lock
pusha
or
add
popf
xlat
mov
std
xor
cld
or
fisttpll
mov
std
outsl
outsl
xchg
xchg
sbb
mov
fst
jnp
push
test
fisubrl
push
scas
or
adc
loopne
aaa
fadd
jns
ret
aaa
pushf
pop
enter
pusha
cld
fsubl
push
fst
or
lcall
loope
mov
inc
sbb
mov
decl
rorl
cli
aad
jecxz
xor
test
jb
repz
mov
xchg
hlt
orb
cmpsb
lock
loopne
mov
enter
jnp
fists
inc
sahf
mov
cmp
push
mov
es
sub
lock
movsl
pop
sbb
and
cld
decl
imull
in
push
dec
adc
fbstp
push
ss
sbb
int3
ja
dec
es
xchg
add
fldt
out
pushf
add
insl
nop
mov
xchg
stos
sbb
xchg
jns
pop
mov
decl
mov
cmc
and
int
lret
mov
xchg
out
and
mov
call
or
loope
xor
fst
jge
or
lcall
aas
sbb
mov
mov
out
sub
insb
aam
dec
add
andb
add
mov
mov
popa
add
pop
sbb
orl
incl
cmp
push
jg
lahf
sbb
popf
nop
filds
fdiv
cmp
int
idivl
div
jecxz
outsl
mov
pop
cmp
jo
xchg
clc
xchg
aas
stc
jge
mov
icebp
test
cmp
adc
and
fsts
jmp
test
inc
jg
push
or
cmp
or
lods
in
mov
inc
lods
movsl
pushf
sarb
dec
jns
incb
test
in
mov
push
cmp
incl
and
nopl
shr
sub
mov
nop
scas
decl
xchg
mov
cmp
mov
mov
mov
xchg
orl
xchg
jae
xor
mov
xchg
cld
jg
cwtl
xor
sub
mov
xchg
and
cmp
xchg
jmp
sahf
fs
xchg
decl
cmc
movsl
inc
lods
sbb
test
shl
int3
xchg
cmp
int
xchg
and
ljmp
dec
rcrl
push
mov
fldt
jecxz
movsl
xor
inc
sub
in
in
jecxz
lea
dec
push
dec
cmp
xor
das
lods
stc
or
lds
addr16
cmp
and
das
clc
xor
cmp
mov
stos
pop
cmpsl
incl
inc
mov
ret
outsl
push
xor
test
add
jle
mov
jns
faddp
xchg
xor
fcoml
add
dec
inc
cltd
notl
incl
sbb
xor
bound
inc
hlt
lret
xor
mov
sub
mov
mov
rcrb
cli
loope
pop
sbb
mov
push
and
or
push
mov
sbb
and
xor
inc
mov
fadds
sub
inc
ds
ljmp
lea
das
xchg
push
mov
out
clc
orb
test
ficoms
incl
popf
test
xchg
push
sbb
cld
cmpl
adc
sbb
pop
xor
cld
xor
je
pushl
push
inc
bound
inc
es
outsb
mov
lret
add
push
mov
mov
sbb
call
sub
mov
rolb
leave
xchg
and
push
mov
push
pusha
dec
jne
adc
push
dec
push
sbb
pushl
jmp
in
fs
sub
ljmp
xchg
lods
dec
jne
adc
xchg
push
sbb
ret
pop
jne
lcall
leavew
les
cs
xchg
xchg
adc
ss
jmp
ds
mov
inc
movsl
adc
jbe
test
mov
arpl
xchg
pop
fldenv
mov
ja
push
sbb
lods
lock
pop
insl
push
push
fwait
outsb
aaa
std
in
mov
cld
mov
jb
sub
sbb
incb
popf
outsl
pop
hlt
fimull
lods
rolb
test
sub
inc
add
or
cltd
fmuls
add
decl
lock
sbb
jle
scas
mov
roll
cld
mov
int3
test
lea
sbb
bound
mov
pop
push
dec
in
loop
xlat
les
pop
mov
and
ljmp
ret
nop
insl
ret
dec
adcb
push
imul
mov
rorb
or
cmp
push
out
arpl
push
rcrb
fwait
ret
add
jecxz
ds
push
mov
sahf
aad
ljmp
rcrl
hlt
roll
ljmp
and
sbb
sahf
mov
mov
inc
test
dec
jmp
push
xor
ljmp
add
xor
jmp
std
jmp
mov
push
fs
sub
pop
lods
add
pop
sub
ret
std
mov
ljmp
aad
sbb
pop
das
mov
das
mov
scas
pop
jmp
mov
ljmp
loop
push
lods
inc
xor
or
push
add
jle
nop
jg
pusha
push
add
mov
jg
mov
cmp
dec
dec
movsb
push
xor
xor
popa
sbb
adc
add
sub
cli
outsl
dec
in
iret
sbb
lock
mov
lret
pushl
sub
pop
cmpsl
test
add
insl
mov
adc
inc
les
sub
sti
jmp
sub
add
xor
sub
das
cli
call
push
mov
xchg
adc
or
add
pop
addb
cltd
pushl
imul
rcl
mov
int
lret
popl
int
push
mov
adc
lcall
fiadds
xor
icebp
push
cmp
rorb
decl
jmp
shll
addr16
or
xor
jecxz
loopne
cs
mov
lea
icebp
mov
mov
icebp
xchg
jb
ljmp
xchg
in
adcl
cs
xorb
dec
stc
mov
and
jo
pop
out
xchg
ljmp
outsb
cmp
pop
cmp
cltd
ljmp
subb
cmp
push
mov
ds
xchg
xchg
decl
mov
test
push
pop
mov
jne
insl
int
cltd
adc
push
enter
fdivr
add
cmc
in
pop
add
sub
jns
pop
cld
insb
int
rcrl
pop
imul
aaa
fldt
add
adcl
cwtl
orb
ljmp
ret
and
insl
in
dec
or
ret
aaa
dec
jbe
repnz
sbb
ljmp
orl
inc
pop
cmp
mov
enter
popa
adc
push
mov
adc
call
lret
pop
push
mov
pop
mov
loop
mov
mov
pop
inc
inc
or
decb
incl
jecxz
arpl
sbb
js
mov
ret
sbb
or
sbb
and
pop
test
decl
arpl
mov
mov
lret
imul
push
sbb
call
data16
push
test
dec
push
movsb
jno
xchg
add
sub
add
incl
xor
push
scas
and
and
test
mov
sahf
sub
ljmp
jb
push
push
xchg
mov
mov
insl
pop
aad
movsb
cmp
jns
cmc
out
push
lret
cmpsl
push
xchg
data16
fucom
inc
into
bound
arpl
mov
cld
ljmp
mov
push
jbe
es
out
repnz
mov
dec
in
cmpsb
lock
fcmovnu
fs
cmp
ja
xor
ret
sbb
xor
pushl
or
call
popa
adc
pusha
shrl
mov
pop
rorl
ss
dec
inc
inc
or
mov
sbb
aam
mov
push
cmp
decl
xchg
sbb
xor
and
jp
mov
lcall
aas
or
push
rcrb
xor
inc
push
imul
mov
lock
ljmp
jns
pusha
in
or
pusha
and
inc
sbb
adc
mov
add
incl
adc
jmp
rolb
daa
fldl
movsl
add
fsubrs
fcoml
sub
dec
mov
adc
mov
test
and
fwait
cmpsb
pop
lods
pusha
leave
je
sub
pop
or
add
pusha
add
inc
pop
cmp
mov
pop
call
sub
mov
hlt
idivb
and
dec
mov
lcall
inc
jge
cwtl
add
and
dec
testl
lcall
xchg
xor
mov
pop
aad
adc
mov
clc
les
enter
dec
pop
jmp
push
cmp
repnz
sbb
inc
les
andb
fwait
add
loopne
sub
orl
jbe
jl
push
pushl
js
js
loop
into
or
data16
movsl
pop
sbb
inc
jns
jo
push
sbb
clc
cmpsl
cwtl
test
fadds
das
mov
sbb
ljmp
incl
int
call
inc
pop
cltd
add
roll
cs
push
outsl
add
fistpl
xchg
nop
lods
data16
and
add
xchg
icebp
push
jg
shlb
mov
sub
or
push
cltd
xchg
cmp
inc
sar
cmpsb
and
jle
fsubl
xchg
outsb
dec
shl
mov
adc
pop
or
bound
test
mov
push
mov
cld
pushl
pop
cmpb
adc
je
mov
movsl
mov
icebp
ljmp
adc
cs
ss
fisubrl
dec
mov
push
jne
out
add
xchg
hlt
sti
sub
mov
aad
xor
outsl
xor
mov
addr16
pop
cs
and
cld
push
mov
add
jl
daa
movsb
or
sub
idivb
scas
cmp
mov
ljmp
sub
or
or
sbb
push
data16
das
inc
pop
jecxz
jecxz
fisttps
sbb
dec
arpl
js
test
int3
mov
cli
inc
ljmp
fiaddl
dec
mov
xchg
mov
call
jo
sub
push
hlt
mov
cmp
loope
sub
inc
xchg
loop,pt
ffreep
loop
pop
sbb
xor
pop
inc
mov
aas
inc
arpl
incl
xchg
shll
push
and
and
and
xchg
push
xor
hlt
push
cld
cmpsb
fs
ljmp
and
xor
bound
ss
fistpll
lock
mov
ret
jae
xor
add
and
xchg
jg
push
push
lock
pop
push
es
pop
test
cmp
or
repnz
fildll
rclb
cmp
adc
and
hlt
xorl
bound
or
cmpsl
mov
nop
mov
add
outsl
subb
fsubp
ja
sbb
push
dec
inc
cmp
loop
shl
ss
js
push
adc
mov
lret
ja
jns
and
outsb
push
jns
jne
mov
test
sub
cmp
pop
jnp
push
sub
jmp
int3
xchg
push
jnp
addb
pop
mov
cs
xor
out
push
inc
jecxz
pop
pop
xor
cmc
inc
pop
mov
fisttps
int
push
cli
xchg
sbb
rcrl
in
pushl
mov
and
push
cld
cmpsb
inc
call
sbb
lcall
mov
add
or
inc
xor
addb
adc
mov
inc
inc
gs
loop
std
aaa
cld
stos
and
daa
testb
cmp
and
imul
inc
push
and
rolb
fs
adc
sbb
push
pop
ret
push
xlat
inc
add
jae
cmp
cmp
call
adc
push
sbb
subb
je
es
inc
xchg
repnz
or
out
js
rcll
add
adc
nop
jne
and
inc
add
xor
jbe
test
xchg
movsb
test
lea
sbb
cmp
movsl
push
cmp
ljmp
es
aas
nop
xchg
mov
insb
mov
lds
pop
sub
decl
adc
js
dec
push
inc
pop
mov
add
mov
decl
dec
cmp
cmp
scas
push
pop
mov
lcall
fwait
clc
jg
mov
popa
push
sub
icebp
jp
loope
inc
sub
lcall
mov
adc
inc
insl
jmp
cs
jnp
jge
decl
enter
lds
and
cli
xchg
xchg
sub
or
xor
fcoms
fwait
or
mov
lcall
loope
shlb
loope
lea
ss
push
push
ljmp
rolb
add
loop
int3
mov
xor
popf
cmp
mov
or
mov
jb
cs
push
add
dec
clc
repz
nop
out
rclb
popa
jecxz
jmp
fs
jae
push
subb
out
mov
sbb
dec
cmp
adc
xchg
ja
loopne
popa
xor
and
mov
aas
aam
jne
test
add
adc
and
outsl
subb
mov
jle
call
and
jns
add
daa
pop
and
mov
and
lea
cmpsl
xor
outsb
sub
jno
cld
sbb
adc
xchg
adc
cmpl
jg
fs
dec
xchg
imul
adc
jnp
add
mov
mov
sub
les
pop
and
dec
into
push
adc
out
lods
or
xchg
and
pop
jl
ret
int3
mov
sbbb
jno
adc
arpl
decl
adc
pop
jmp
insl
repnz
mov
out
loop
cli
rcrl
movsl
stc
mulb
jmp
or
xor
cmpb
lcall
mov
inc
or
inc
orb
xor
aad
sti
xor
ljmp
or
or
sub
and
mov
push
push
and
inc
mov
ja
xor
and
adc
clc
pushl
into
cli
popf
adc
adcl
xor
xchg
popa
movsl
add
push
sub
scas
bound
stc
leave
xchg
outsl
in
mov
pusha
lock
out
subb
adc
mov
bound
je
add
test
add
sub
fbstp
mov
push
lock
mov
test
mov
shlb
jp
adc
incl
pushl
cli
xchg
je
bound
imul
xor
fcomip
andb
sub
jns
movsb
jge
xchg
movsl
imul
pop
call
xchg
mov
nop
add
jnp,pt
pop
stos
movsl
aas
push
sub
jnp
shll
jg
hlt
adc
out
adc
jbe
xchg
aaa
cwtl
pop
pop
call
push
cmpsl
loop
pop
ja
js
leave
cmpsl
mov
mov
loop
sbb
lret
call
lcall
sbb
lds
cli
cmpsl
decl
inc
mov
stos
inc
leave
push
xor
outsl
cld
pop
inc
and
or
cmpsl
cmp
stos
mov
loopne
inc
add
dec
jg
pushl
ffreep
pushf
lcall
and
pop
and
mov
call
test
mov
ds
pop
ds
mov
pop
mov
mov
dec
mov
fisubrs
fstpt
inc
add
dec
mov
in
loop
mov
cltd
lahf
pop
jbe
pop
sbb
inc
ljmp
mov
in
cmpl
mov
cmp
dec
dec
jbe
or
ds
or
pop
cmp
cmp
mov
inc
or
js
fmuls
stc
decl
sbbb
imul
cltd
xchg
enter
cmp
aam
vcvtsi2ssl
ljmp
mov
dec
nop
jo
xchg
dec
cwtl
push
dec
mov
mov
int3
roll
mov
dec
inc
jnp
mov
mov
je
xchg
adc
mov
xchg
adc
push
jns
mov
call
sbb
and
cmpsl
fadds
mov
mov
mov
out
mov
jmp
nop
pop
pop
out
inc
pop
rcrb
mov
loope
sbb
xchg
gs
push
fwait
std
cmpsb
mov
push
dec
adc
dec
push
push
inc
sub
mov
mov
popf
jmp
sar
repz
insb
addb
ljmp
popf
mov
mov
mov
add
loop
pusha
leave
mov
sti
pop
into
leave
pushf
lods
leave
cmp
push
stos
mov
mov
dec
loopne
sub
addr16
subb
mov
mov
xor
gs
mov
xor
pop
pusha
add
roll
inc
rolb
arpl
or
mov
in
scas
or
add
divb
pushl
cmp
push
pop
jb
inc
pop
inc
rorb
add
incl
mov
jbe
mov
movsb
ja
cmp
mov
mov
mov
testb
sbb
push
xor
movsl
mov
movsb
sarl
lods
bound
incl
add
mov
or
das
sbb
xor
push
push
sarb
ljmp
ret
lods
cmpsl
lcall
fldcw
inc
int3
dec
inc
int3
sbb
sbbb
in
test
divl
leave
pop
mov
decl
mov
dec
mov
xor
inc
xor
xchg
sbb
jl
shr
pop
mov
mov
jecxz
mov
add
push
and
push
jb
add
push
mov
adc
arpl
adc
pop
fbld
dec
outsl
in
incl
xlat
insl
or
push
arpl
gs
icebp
add
sbbb
les
fiaddl
push
adc
std
fmuls
loopne
push
imul
int
jo
jmp
int3
adc
pusha
pop
lret
lods
cmpsb
insl
fimull
ror
lods
or
stos
std
and
mov
cmp
add
data16
mov
cwtl
mov
pop
cmc
mov
orb
and
push
addb
lret
xchg
push
jg
pop
or
pusha
addr16
call
sub
int
cmp
and
jecxz
add
push
ret
inc
pop
aad
call
dec
sub
iret
jae
xchg
xor
pop
sbb
push
repnz
mov
add
sub
movsl
or
aas
in
mov
decl
stc
xor
jns
clc
mov
push
push
jmp
rcrb
fisubs
data16
pop
jg
lcall
repnz
arpl
mov
xchg
ljmp
mov
in
gs
cli
aad
fwait
orl
lcall
fst
mov
push
add
jno
je
outsl
lods
xor
jbe
sbb
pop
add
dec
cs
daa
lods
push
add
mov
push
pop
inc
jg
mov
push
out
push
in
shl
jle
pop
sbb
cs
mov
add
jbe
lret
pushf
and
divps
idiv
ja
or
out
jle
jnp
out
out
mov
in
lret
bound
cli
loope
std
out
push
arpl
dec
out
xchg
call
nop
outsl
add
je
jp
mov
je
out
ja
xor
pusha
shlb
mov
and
out
xchg
pop
or
int
lods
mov
std
xor
lock
imulb
push
sbb
sub
mov
rcl
cmp
sub
and
jecxz
push
hlt
ljmp
mov
rorl
orl
insb
xchg
ds
mov
jnp
mov
mov
mov
jns
lret
adc
outsb
lcall
fs
popa
sbb
dec
sub
popa
in
sub
loop
add
xchg
ret
push
loope
add
xor
mov
insl
stos
and
test
icebp
loop
icebp
jg
in
inc
dec
xor
daa
aam
sti
lcall
mov
aam
clc
or
fwait
dec
aad
incl
push
push
mov
mov
xor
push
ss
outsb
ljmp
fdivrp
lret
lret
out
sub
scas
lods
out
iret
repz
dec
lahf
hlt
cmpb
lcall
lret
aaa
das
call
mov
ret
sbb
cmc
cmc
or
xor
mov
sbb
cmc
test
pushl
pop
mov
dec
aaa
xchg
lds
adcb
cmp
jp
push
leave
lock
call
sbb
dec
add
lret
sarb
and
in
cmpb
nop
js
fmull
mov
fnstsw
inc
js
xor
mov
dec
sbb
cmp
sahf
sub
jmp
js
repz
inc
adc
adc
cmp
loop
mov
loope
or
inc
or
out
or
mov
pop
loopne
pushf
fstpt
add
mov
insb
scas
jecxz
jle
adc
das
xchg
xchg
aaa
mov
mov
cmpsl
es
in
test
rcl
incl
or
and
sbb
jne
mov
sbb
test
or
sbb
pushl
subl
mov
cmp
in
std
xor
stos
flds
adc
cmp
inc
push
incl
or
loope
xchg
and
mov
int3
js
jecxz
sbb
mov
push
inc
sbb
stc
mov
pop
sahf
mov
mov
out
leave
ret
daa
unpckhps
add
aas
addl
cmp
push
push
xor
ljmp
push
ljmp
inc
cmp
scas
pusha
pop
push
hlt
lret
rol
call
add
lods
dec
lods
leave
movsl
cmp
lcall
pop
rcrl
enter
add
and
push
and
decl
xchg
sub
test
out
dec
lahf
ds
sub
adc
mov
hlt
pop
or
xor
sub
inc
lds
xor
jle
dec
pop
das
ja
sbb
insb
pop
mov
daa
dec
scas
cmp
ss
jmp
clc
jne
fstps
mov
mov
cmp
lcall
jg
or
rclb
jge
fmuls
sbb
decl
incl
cld
movlps
jecxz
rolb
cmp
inc
mov
or
or
in
mov
mov
mov
push
sbb
ds
mov
cmp
xor
mov
mov
mov
push
sbb
push
push
test
arpl
les
scas
mov
fwait
inc
push
jg
into
inc
and
cmpb
repnz
in
lret
orb
loopne
pusha
jb
popf
hlt
loop
mov
cwtl
loope
fcmovne
sbb
and
pop
adc
lods
xchg
mov
mov
dec
cmp
and
jg
test
and
inc
sbb
mov
aaa
std
ljmp
dec
inc
pop
nop
inc
and
xchg
lret
lcall
call
push
cmpsl
push
flds
adc
pop
addr16
push
pop
outsl
aad
push
pop
jns
adc
lcall
addb
sub
push
cld
sub
xchg
adc
push
add
mov
or
stc
mov
mov
rcrl
mov
dec
cmp
xor
call
or
loope
cmp
mov
sub
pop
jle
fwait
aaa
mov
ljmp
ret
shrb
inc
mov
in
lret
adc
cmp
cmpsb
mov
out
mov
pop
xchg
cmp
out
mov
out
lret
icebp
mov
adc
push
outsb
das
mov
ljmp
call
repnz
xchg
fwait
adc
sbb
cmp
jns
add
scas
sar
lcall
das
adc
test
dec
movsb
fdivs
xchg
fnstcw
outsb
vpunpcklqdq
adc
mov
xor
loope
xor
scas
xchg
in
or
leave
sbb
sub
ss
lcall
dec
xor
sbb
int3
sub
sub
je
xchg
dec
fadds
jae
mov
aaa
mov
fisttps
inc
adc
sbb
rolb
sub
sub
add
dec
lock
mov
fidivl
cmc
cmc
pop
dec
xor
adc
jo
and
fnsave
in
pop
and
js
inc
sub
or
test
call
xchg
cmpsb
subl
jle
jb
push
cmp
adc
in
mov
mov
roll
mov
dec
cmp
sub
dec
xor
add
push
psubsb
adcb
jnp
sub
icebp
pushl
clc
aas
cmp
pusha
inc
nop
ret
orb
xor
lcall
pop
push
popf
mov
bound
nop
fiaddl
cmc
xchg
xor
in
xor
mov
incl
jl
inc
and
std
and
mov
test
bound
adc
push
aas
decl
pushl
addb
stc
in
inc
inc
xor
add
dec
xchg
jns
clc
pop
adc
das
imul
loope
pushf
es
scas
aad
decl
movsb
dec
adc
mov
gs
imul
mov
dec
mov
addb
xchg
movsb
aaa
ds
push
int3
mov
lcall
push
lock
dec
imul
fdivs
stos
decl
sar
push
lock
jb
fs
out
and
adc
cmpsl
inc
jno
pop
xchg
div
cmp
mov
ja
fcomip
and
inc
dec
jae
mov
dec
shll
lock
cmpsb
mov
lds
xchg
mov
and
fildll
ret
and
xor
outsl
js
sub
mov
add
cmp
dec
sbb
xor
gs
fsubp
adc
cmpsl
or
mov
sbb
cli
sbb
add
jl
adc
xchg
dec
mov
push
xor
mov
push
jp
cmpsb
test
and
and
and
inc
ror
cli
add
scas
jmp
fwait
jg
xchg
add
jo
je
orb
call
pusha
sbb
lahf
test
ret
mov
ljmp
repz
test
adc
jecxz
jmp
cltd
push
ret
xor
cmp
pop
add
push
data16
mov
inc
sahf
cmp
add
add
adc
xchg
aam
adc
inc
jecxz
sarl
inc
adc
push
cmpsb
mov
fldenv
jge
hlt
sub
mov
jmp
imul
sbb
cmp
ljmp
sahf
xor
mov
daa
outsl
mov
inc
or
orb
push
xchg
cmpsb
cmp
jo
and
loopne
daa
ss
in
fwait
add
mov
dec
adc
push
push
adc
add
jmp
jae
dec
and
sbb
je
xor
push
jmp
sbb
mov
ljmp
es
je
int3
gs
cltd
sarl
sahf
xlat
add
inc
iret
lcall
or
lahf
test
decl
or
xor
pop
insb
popa
lahf
std
stos
inc
cwtl
js
xor
dec
sbb
mov
call
or
sbb
mov
movhps
cmp
fimuls
pop
adc
push
xchg
stos
jns
push
neg
add
dec
pop
mov
adc
cld
and
and
test
add
mov
and
mov
push
lds
in
adc
fs
add
mov
mov
mov
pop
fadds
add
add
or
int
in
aam
cli
mov
out
nop
xchg
shlb
adc
mov
pop
mov
aaa
and
jl
mov
mov
mov
and
sbbb
and
add
aas
ficompl
cltd
xchg
xchg
cmp
add
pop
hlt
jne
xchg
cwtl
push
xchg
outsl
adc
pop
lods
add
jg
insb
mov
repz
sbb
mov
push
cli
gs
pusha
leave
dec
data16
or
mov
dec
leave
inc
mov
movsb
cld
fs
ja
aaa
fcmovb
or
push
repnz
and
jg
clc
add
adc
cmp
adc
xchg
cld
dec
stos
pop
std
xchg
pop
icebp
push
ret
in
outsl
lcall
jecxz
sarl
xor
je
mov
movsb
imul
mov
rcrb
xchg
mov
orl
sub
in
sbb
lods
cld
aaa
mov
flds
mov
xchg
jmp
incl
xor
jmp
loopne
cmp
adc
shrl
jl
cmp
inc
add
stos
lret
push
fcom
adc
mov
adc
push
adcb
loopne
jge
mov
inc
pusha
cmp
mov
adc
pop
sbbb
cli
les
movsl
jl
and
inc
iret
ret
mov
inc
repnz
shrb
pushf
mov
xor
sbb
adcb
mov
mov
mov
mov
mov
sub
fistpl
out
test
jmp
daa
sub
cmp
pop
stc
push
mov
mov
scas
test
mov
jg
lcall
leave
pop
sbb
and
xchg
mov
lcall
mov
dec
dec
in
movsb
and
decl
stos
jbe
mov
and
push
jecxz
mov
out
and
pop
mov
out
mov
mov
js
mov
fsts
jbe
jge
xchg
jo
jae
leave
push
push
lahf
fcomip
inc
test
in
mov
pop
enterw
test
out
or
mov
and
push
pop
cmp
sbb
loopne
sbb
pusha
mov
outsl
fwait
push
scas
clc
xchg
sbbl
neg
inc
mov
push
mov
add
push
cmpsl
and
jle
lock
sbb
mov
sub
aas
xor
out
xor
decl
incl
pushf
mov
fwait
sub
and
add
sbb
in
sbb
adc
shlb
add
mov
mov
dec
or
loopne
mov
add
jg
in
stc
xchg
cmp
inc
stos
or
sub
call
mov
and
jns
mov
mov
mov
and
lcall
xchg
mov
and
loope
and
add
mov
push
popa
and
xor
cmp
decl
adc
mov
mov
sbb
mov
or
cmp
sub
cmp
cmp
push
xchg
decl
and
add
fidivl
sbb
cmp
sub
and
pop
sbb
jnp
pushl
mov
pop
fildl
push
rclb
sahf
loop
es
xor
out
cli
mov
sub
mov
xor
gs
or
xor
outsl
push
lcall
add
inc
hlt
repnz
cmpl
and
cli
jg
fmuls
test
dec
xorl
xchg
add
mov
push
cs
push
sbb
or
and
xor
xchg
popf
lods
xor
data16
adc
loopne
cld
lahf
lret
mov
jge
sbbl
ljmp
cwtl
push
add
xchg
cmp
jmp
add
fisttpl
or
nop
sub
lahf
mov
pop
cmc
add
mov
cmp
sbb
call
pop
dec
addb
mov
mov
sbb
sub
add
xor
xchg
ljmp
sub
push
and
and
mov
jge
pop
mov
insl
add
push
add
mov
mov
mov
xor
loop
sahf
inc
dec
adc
xor
subl
mov
adc
or
cmp
mov
inc
xchg
or
nop
adc
xchg
xchg
dec
aam
fimull
imul
lcall
int3
cmp
fadds
cmpsb
dec
mov
mov
mov
push
cmp
ljmp
pop
inc
mov
adc
ret
jg
fs
xor
pushf
mov
or
fadd
adc
jbe
push
jl
xchg
aas
lret
jg
popa
shlb
or
nop
xchg
jl
je,pt
add
enter
int
sar
int
decb
lea
jge
into
ss
incl
adc
je
mov
mov
insb
andb
jecxz
scas
cli
mov
into
xor
and
or
inc
sub
fsin
jg
xor
pop
xor
adc
stos
mov
inc
stos
add
mov
mov
insb
inc
add
cmpsb
sbb
adc
ret
cwtl
xor
orl
sbb
or
das
sub
dec
sub
xor
adc
xor
jg
xorb
cmp
addb
sub
mov
dec
jg
mov
adc
and
lret
xchg
aas
or
jg
cmp
mov
dec
mov
sub
inc
xchg
movsb
mov
and
orl
mov
movsl
lret
shrb
lcall
in
dec
pop
add
pop
addb
pop
jb
dec
jl
ret
lds
fwait
popf
mov
es
into
or
and
imul
jae
adc
adc
loop
in
cmp
dec
imul
jmp
jp
cmpsl
sbb
sbb
lds
and
jno
fbstp
dec
push
pop
sbbl
add
incl
cmp
scas
add
into
in
test
enter
xorb
and
mov
inc
or
mov
out
mov
dec
bound
or
das
lock
fcomip
daa
jnp
nop
push
mov
add
add
sub
xchg
push
xchg
rolb
sbb
int
mov
cmp
hlt
push
cltd
or
cld
push
gs
xchg
dec
sahf
sub
and
lock
adc
add
add
jecxz
add
mov
and
in
and
sub
cmp
clc
sbb
add
jge
cmp
or
cli
std
sbb
and
and
loop
mov
xor
xor
stos
mov
dec
and
sarb
jmp
daa
mov
lret
xchg
xchg
lods
xchg
xor
xor
xor
decl
sub
enter
fistl
ret
sub
aas
adc
sub
adc
lock
call
and
add
push
cmp
xchg
mov
decl
mov
mov
push
fistpl
mov
popf
enter
cli
lcall
adc
pop
sbb
mov
push
hlt
int3
inc
mov
orb
xor
or
push
out
add
ss
lods
fcompl
mov
fiaddl
mov
xor
xchg
push
insl
ljmp
and
enter
sbb
push
jns
push
jo
mov
fdiv
shll
xchg
mov
pushl
das
jnp
stc
cmp
push
cmp
adc
iret
jns
or
push
or
sbbl
xor
pop
fsts
cli
sbb
pushl
pop
pop
pop
xchg
and
loop
movsl
sbb
push
fmuls
xchg
inc
mov
xor
rolb
adc
dec
cli
pushl
std
or
mov
xor
clc
push
fadd
mov
sbb
sbb
jmp
xchg
jmp
push
sbb
aad
and
inc
rclb
aaa
repz
adc
ret
cs
movsb
nop
cli
dec
hlt
mov
ret
test
jns
mov
xchg
mov
or
sub
add
xchg
cmpsb
adc
inc
hlt
shlb
dec
loope
mov
mov
inc
mov
jae
lret
mov
dec
sub
add
fidivrs
cmp
inc
mov
mov
pusha
mov
xchg
fwait
cwtl
lods
sub
je
lds
insb
fsubrl
stos
cld
push
xchg
rcrb
repnz
cwtl
popf
test
pushl
sbb
jbe
add
or
into
fisubl
incl
roll
jle
cmpl
mov
adc
fnsave
and
add
mov
fs
dec
xchg
out
cli
jmp
imul
adc
mov
incl
lcall
and
jmp
sti
fbld
xor
pop
nop
jae
pushf
cmp
call
xchg
aam
jle
xlat
fsubs
cli
lar
ds
add
cltd
lcall
in
fistpl
cmp
lods
mov
mov
cmp
sbb
jmp
or
add
pusha
mov
xchg
fdivs
ss
mov
mov
or
push
sub
jg
inc
mov
fsubl
add
fldcw
mov
fwait
ret
mov
inc
inc
add
das
outsl
xchg
mov
add
pop
popa
incl
cld
incl
fcmove
mov
sub
roll
lods
add
int3
dec
mov
mov
dec
mov
ret
sbb
in
cs
cmp
es
fldcw
ss
dec
add
push
add
push
ljmp
pop
inc
mov
ljmp
clc
call
outsb
push
jbe
cmpsl
and
in
nop
push
clc
or
fistpl
decl
lds
in
push
inc
or
dec
push
setnp
jecxz
xchg
cwtl
jge
and
call
pop
test
pop
mov
pop
and
mov
and
or
mov
sbb
insb
je
xor
fcomip
call
loope
clc
icebp
cmp
cmp
gs
lcall
cmp
mov
pusha
jg
icebp
jge
add
neg
mov
mov
and
mov
add
lcall
jge
mov
aad
cmc
lods
adc
inc
idivb
add
xor
xlat
jmp
mov
fwait
stos
rolb
sbb
lock
mulb
jne
es
inc
shrb
pop
sub
xchg
adc
and
das
fisubrl
pushf
add
mov
xchg
and
lcall
lea
xor
inc
pop
and
inc
and
inc
push
xchg
fimull
push
loopne
xchg
mov
push
ss
pop
dec
test
push
inc
mov
int3
mov
dec
and
incl
or
pushf
pop
lahf
or
nop
mov
push
and
outsl
decb
xorb
push
out
jg
ljmp
lret
movsl
pushf
mov
mov
cmpsl
dec
push
shrl
push
mov
pushl
sbb
push
fmul
mov
lahf
sarb
jge
jmp
aad
mov
aam
out
arpl
adc
call
incl
inc
pop
rcrb
pushf
dec
sub
das
pop
inc
push
sbb
popa
xor
jne
fmul
dec
jbe
sbb
mov
lret
or
inc
push
jmp
jl
fsub
lds
jno
mov
js
jle
cmp
rolb
mov
push
rcll
adc
and
jmp
sbb
pop
sbb
inc
rsm
add
dec
add
add
clc
or
pop
aam
xchg
and
movsb
leave
sub
loopne
cmp
jp
syscall
outsl
mov
ljmp
stc
push
adc
xchg
dec
inc
je
pop
orb
outsl
cmp
adc
imul
popf
je
loope
decl
sbb
nop
sub
adcb
push
call
add
femms
loope
dec
loope
lcall
push
and
push
popa
jno
push
push
aaa
leave
mov
bnd
decl
lods
xor
and
and
hlt
lock
jno
outsb
add
outsl
sbbb
or
jno
pop
adc
dec
cmc
pushl
mov
mov
popa
sbb
js
addr16
dec
cmc
inc
cmp
fists
outsl
adc
sbb
and
mov
pushl
jo
sub
fs
test
xor
pop
mov
call
loop
movlps
insb
test
decl
addr16
push
movsb
addr16
add
push
pop
pop
adc
add
incl
in
fistl
inc
adc
out
pushl
cli
add
push
subb
testl
scas
loop
lock
iret
jmp
fwait
mov
fstpt
jbe
das
cli
das
insb
cmp
punpckhbw
sti
add
and
mov
pop
lock
fldcw
loop
and
das
pushf
mulb
std
mov
lock
call
push
ficompl
outsb
pushf
aas
mov
xlat
xlat
inc
cs
ret
mov
dec
jle
lock
cmp
inc
in
add
outsl
jmp
movsl
les
out
mov
mov
rcll
outsl
xchg
mov
loop
test
fsts
incl
push
leave
jle
and
lret
push
popa
mov
arpl
fdivrl
scas
test
shll
push
stc
cld
out
push
jbe
test
inc
mov
ud0
adc
sbb
jmp
imul
cld
and
adc
ljmp
xor
inc
adc
ret
es
insb
adc
inc
mov
or
sbb
lcall
adc
cmpsb
dec
add
inc
or
mov
xor
incl
vmovlps
shlb
arpl
push
cwtl
adc
sbb
push
mov
movsl
nop
cmp
loopne
adc
popa
or
xchg
movsb
cltd
jg
jne
in
jmp
add
ljmp
lret
pop
xchg
sbb
data16
pusha
cmp
ljmp
adc
pop
mov
adc
ja
sub
lods
in
mov
xor
fnstenv
push
or
bound
mov
mov
dec
into
jl
push
repz
inc
in
arpl
jecxz
pushl
sbb
cli
mov
xor
mov
imul
icebp
mov
icebp
in
mov
cmp
rorb
mov
fdivr
pop
pusha
xlat
jle
sti
push
in
dec
je
shl
fs
sbb
aad
push
iret
add
cli
imul
pop
mov
jp
sub
jae
outsl
sahf
mov
dec
jle
sbb
andl
mov
jno
inc
xorb
mov
mov
push
fcomip
lcall
push
and
sbb
mov
and
jnp
js
mov
data16
ljmp
jecxz
addr16
push
jp
fisubrs
mov
ret
mov
imul
cltd
arpl
lcall
jns
ljmp
out
roll
sbbl
mov
jmp
inc
pop
push
inc
adc
adc
jg
cmp
sub
imul
or
pop
jmp
imul
jo
dec
daa
mov
inc
adc
fs
mov
inc
mov
loopne
xchg
stos
adc
popa
adc
incl
fs
dec
roll
fwait
insb
js
lcall
lock
test
jmp
movsl
adc
inc
xor
pop
pop
gs
cmp
arpl
mov
pop
call
adc
out
dec
push
sbb
out
dec
ljmp
adc
xor
ss
add
gs
xchg
xchg
ret
xor
xchg
cmc
ljmp
lcall
push
test
orl
jg
mov
clc
ja
jno
and
jb
das
mov
ror
cmp
jno
cltd
out
imul
fists
ficoms
loope
sub
jecxz
jl
xchg
shll
leave
repnz
xlat
push
jg
cmpsb
xchg
incl
jl
leave
push
pusha
cmp
js
into
or
push
icebp
sbb
xor
daa
in
mov
clc
add
jp
mov
cmc
mov
test
nop
push
xchg
cmpsl
add
inc
js
xchg
stos
rorb
jbe
insl
xchg
add
aas
dec
rcrb
fs
setl
stos
pop
mov
in
xchg
xchg
cwtl
xchg
rcl
cmpsl
dec
jmp
mov
mov
cmp
jecxz
push
adcb
movsb
call
enter
push
sub
inc
cmp
xchg
fs
cs
out
add
js
push
pop
cmpsl
pushl
insb
jl
push
fwait
loop
mov
add
lods
repz
push
xor
rorb
cmc
inc
loope
inc
dec
xor
hlt
pop
leave
inc
repnz
jl
gs
mov
fdiv
pop
add
cltd
inc
push
adc
in
outsb
pop
hlt
adc
mov
fldt
jp
push
and
sbb
mov
loope
push
adc
pushl
icebp
or
iret
jnp
xor
pusha
cld
ljmp
add
and
mov
test
sbb
mov
xchg
xchg
scas
test
ret
or
dec
ljmp
rcrl
jle
ss
out
cli
mov
enter
sbb
cmpsl
aas
mov
lds
popa
dec
jp
dec
lahf
std
mov
mov
les
data16
dec
shlb
add
or
in
add
incl
fiaddl
mov
lcall
insl
imul
adcl
incl
or
and
xchg
xchg
mov
sbb
pop
add
movsb
and
and
push
outsb
pop
jae
mov
enter
add
adc
dec
jae
xchg
out
idivl
ret
jmp
out
add
lret
xchg
mov
fcmovu
cwtl
ss
push
lret
cmpsl
dec
or
adc
xor
aaa
adc
imul
push
adc
push
int3
jbe
and
mov
es
decl
push
cmp
or
lock
xor
loope
aad
adc
adc
jecxz
ljmp
jmp
aad
and
adc
orb
xchg
popf
cld
fs
push
addb
inc
push
pop
cwtl
lret
cmpsb
dec
fadds
hlt
outsl
xor
sub
jmp
jl
incl
int3
lds
imul
inc
cwtl
inc
push
popa
xchg
nop
pop
mov
imul
hlt
incl
hlt
xor
mov
stos
bound
push
test
and
ljmp
cmp
push
mov
sub
xchg
jl
push
nop
inc
and
push
bound
sbb
cmp
out
xchg
icebp
sahf
sbb
lret
push
clc
mov
gs
pop
and
call
mov
mov
pop
in
dec
xchg
xor
loope
inc
gs
fcomip
fwait
stos
pusha
sahf
movsb
in
or
push
sbbl
or
jmp
and
dec
adc
mov
add
test
add
movsl
lods
gs
dec
fxch
pop
pushl
inc
sub
adc
xorl
fimull
adc
in
imul
inc
jg
dec
push
mov
push
in
loop
mov
mov
adc
or
fs
xchg
incl
sub
cmp
outsl
pushf
xchg
mov
outsb
clc
jmp
in
inc
mov
mov
bound
ljmp
or
sub
sub
movsb
jmp
mov
or
mov
or
dec
jmp
add
add
into
ja
ljmp
ret
loope
cmp
ret
dec
dec
aas
sub
mov
cltd
mov
rolb
fildll
adc
ss
cmp
popa
pop
jb
adc
rcrb
in
das
mov
pusha
adc
ljmp
sbb
imul
cmpsl
ret
imul
cmc
ljmp
shlb
fmuls
pop
sbb
ljmp
xchg
test
lcall
sbb
sbb
subb
cmp
jg
cmp
cmp
leave
in
mov
stos
xor
ljmp
iret
into
or
repz
adc
sbb
fbld
out
push
push
addr16
sub
lcall
mov
inc
hlt
call
nop
xchg
popa
adc
xchg
mov
xor
cmp
fcmove
push
adc
jne,pn
push
mov
cmpsb
xchg
cmp
jg
xor
shlb
or
outsl
or
out
pop
push
and
push
sbb
mov
pop
loop
jnp
into
xchg
sti
scas
js
jg
into
cmp
cmp
scas
cwtl
fidivrl
cmp
xchg
jg
ficoms
inc
sbb
mov
fdivp
xchg
loope
mov
xchg
mov
add
adc
push
push
mov
repnz
int3
xor
pushf
adc
outsb
fldenv
and
es
loopne
rcr
js
mov
add
sar
ljmp
and
lcall
inc
or
orl
pop
or
inc
mov
xchg
nop
add
sbb
nop
inc
push
xchg
push
outsb
lcall
insb
decl
sbbl
loop
adc
xor
shrl
mov
es
call
insb
adc
aaa
cld
mov
sub
pop
data16
loopne
mov
cltd
fdivrl
call
jbe
sub
and
cmp
mov
and
mov
or
int
pop
xor
sti
mov
insb
sbb
js
mov
add
jns
jnp
mov
hlt
dec
imul
sti
pop
subl
hlt
mov
sub
ljmp
mov
cmpl
subb
fildll
mov
xor
mov
aam
shll
decl
and
lea
xor
mov
inc
push
add
call
fidivrs
xor
out
push
sbbl
js
pushl
or
cmp
jmp
fistpll
cwtl
mov
das
nop
rcll
daa
and
adcl
push
xchg
pop
std
ljmp
insb
test
test
xlat
xchg
mov
ret
jg
ljmp
leave
dec
inc
inc
in
inc
add
cltd
clc
or
add
mov
clc
sbb
mov
incl
mov
shrb
nop
les
mov
lods
rorl
sbb
les
pusha
fisttpll
filds
adc
xchg
xchg
xlat
insl
out
clc
xchg
pop
fistpl
or
leave
ljmp
push
sahf
popa
pop
cltd
dec
add
fidivrs
sar
int3
into
fs
adc
dec
dec
arpl
sbb
mov
mov
sbbw
mov
push
push
and
stos
fisubs
aad
jmp
add
pop
jmp
loop
sahf
fdivrp
push
jno
pop
ss
adc
pushl
mov
pop
pushf
lods
lahf
in
loop
sub
repz
push
and
dec
fbstp
dec
xor
jp
xlat
icebp
dec
fildl
xchg
test
pop
push
ljmp
jle
add
mov
push
sbb
xchg
rcrb
sbb
hlt
xchg
test
pop
clc
jg
decl
or
clc
movsb
lds
test
pushf
push
xor
lahf
aam
push
int3
in
lcall
mov
xchg
rcrb
inc
dec
jmp
arpl
dec
sarl
sbb
pop
rolb
push
inc
push
xchg
das
cli
mov
hlt
sub
jo
xchg
add
outsl
sbb
rclb
lds
cmpsb
adc
adc
clc
decl
xchg
mov
push
and
and
fs
xchg
incl
ret
aad
stc
mov
mov
andl
aam
adc
jmp
sbb
push
mov
push
cli
mov
xor
inc
fidivrs
lea
dec
pop
push
mov
push
add
js
test
pop
aas
push
incl
imul
jno
and
rcrb
or
movsl
loopne
movsl
xor
sbb
stc
int
or
movsb
pop
mov
in
adc
adc
popf
lock
mov
dec
jnp
and
pushl
out
dec
dec
xor
xchg
dec
lahf
js
rorl
mov
xor
push
mov
call
test
or
inc
mov
lret
loopne
insb
add
or
cmp
pop
add
adc
push
incl
inc
ret
mov
fdivl
test
pop
movsb
dec
or
cmpsb
push
fdivrl
out
mov
lcall
mov
jo
pushf
sbb
mov
pushf
dec
sub
nop
insl
test
aas
negb
addb
jbe
dec
inc
push
aas
push
add
add
insl
inc
or
dec
inc
jo
fnstcw
cli
xchg
fstl
inc
push
mov
inc
xchg
pushl
rclb
dec
pop
lret
mov
jl
sbb
push
popa
jp
push
aaa
cld
lcall
int
dec
cli
sbb
popa
pop
jns
fists
sbb
sbb
push
mov
and
cmpsb
popa
loop
dec
aad
push
jle
and
loope
pop
and
pop
insl
lcall
adcb
add
pop
xor
int
pop
into
jg
call
mov
add
fildll
push
roll
in
imul
out
mov
decl
out
and
es
sahf
sub
arpl
push
cmc
js
pop
stos
mov
fldenv
push
shrl
jg
add
rorl
or
lret
or
inc
js
xor
pushf
nop
mov
or
lahf
xor
lds
lahf
jmp
negb
inc
call
add
pushf
lds
jecxz
mov
mov
out
add
push
mov
pop
loopne
pop
loopne
data16
mov
int
inc
sarb
and
incl
push
or
jmp
and
addr16
insl
or
inc
add
clc
sbb
ss
adc
jge
addr16
jmp
cmp
push
mov
pop
jno
push
orl
pushf
xchg
dec
or
inc
fwait
dec
push
pop
pop
insl
mov
push
popf
dec
inc
enter
mov
mov
loope
sub
mov
add
dec
xchg
clc
mov
mov
int
sub
push
sahf
mov
mov
add
jle
push
lcall
xchg
xchg
gs
sub
push
xchg
sub
push
xchg
cmp
test
decb
clc
scas
add
pushl
loop
and
idiv
jne
in
sbb
push
out
adc
sahf
jb
into
ficompl
out
xor
sbb
lcall
dec
cmp
call
sahf
pop
inc
shrb
test
lret
and
sbb
cltd
in
push
loopne
mov
std
inc
sbb
adc
xor
fstl
test
pop
ret
stos
pop
and
mov
outsb
and
and
jbe,pn
sbb
sarl
pop
mov
sbb
mov
inc
jne
jo
shrl
inc
hlt
call
ljmp
pop
xor
sbb
ljmp
push
test
rorb
mov
bound
rclb
sbb
or
pop
pop
insb
movsb
jg
in
sbb
mov
enter
ss
mov
mov
lcall
lods
imul
test
jmp
mov
pop
into
push
sub
pop
jnp
sbb
mov
and
mov
sbb
call
flds
insb
cmp
jbe
test
jmp
push
sub
scas
pop
mov
aad
and
in
jle
pop
xchg
mov
pusha
leave
sub
mov
dec
jmp
leave
push
popa
mov
ljmp
sbb
lcall
ss
add
inc
dec
pop
mov
xchg
xchg
adc
mov
inc
insb
data16
loop
cld
decl
popa
mov
das
movb
mov
xor
js
pusha
repnz
test
lcall
sub
jmp
xor
add
jl
notl
jg
lcall
movsl
je
add
cmp
outsb
jne
and
inc
lods
outsb
cs
mov
int
inc
jmp
std
xchg
aad
repz
dec
sbb
imul
incl
popf
jae
add
in
push
inc
xchg
xchg
xor
dec
sub
popa
fdiv
out
js
adc
stos
pushf
test
dec
cmpsb
mov
pop
push
dec
ficomps
dec
jle
scas
fbstp
frstor
pop
enter
movsb
pop
sbb
fimull
outsl
divb
sbb
or
loope
cli
call
push
insb
imul
push
aas
mov
imul
nop
jb
insl
adc
jmp
cmpsb
lods
fists
and
and
pop
mov
xlat
xor
ljmp
mov
mov
fsubrp
and
pushf
mov
pop
mov
and
jp
jge
sub
loopne
dec
stos
sahf
cmc
idiv
pushl
nop
add
test
cli
sbb
mov
aaa
stos
test
sub
pop
add
lcall
xor
mov
jne
mov
hlt
insl
dec
mov
std
mov
ret
mov
jnp
jno
dec
out
int
adc
sarb
pop
int3
loopne
shrb
aas
xchg
incl
xchg
add
pop
and
and
hlt
push
gs
pop
shll
add
jno
cwtl
add
incl
adc
xchg
scas
dec
int3
mov
adc
mov
adc
incl
out
xchg
cmc
data16
mov
push
mov
fcmovnb
int
into
pushl
fwait
cli
lea
ret
push
jb
pop
xchg
ficompl
xchg
push
pop
push
cmp
push
mov
fcom
sub
adc
mov
imul
call
xlat
xchg
push
dec
cwtl
insb
xor
mov
mov
or
sbb
inc
or
test
lret
xchg
incl
mov
hlt
mov
or
bound
ss
adc
divb
adc
cmp
inc
je
stc
sbb
and
dec
jecxz
inc
call
ljmp
shl
mov
pop
js
pop
mov
push
dec
cld
mov
int3
mov
lret
push
notrack
or
mov
dec
cmp
xor
xchg
or
and
cmpsl
jno
stc
or
mov
pushl
shrb
dec
adc
fldl
or
gs
jmp
in
addl
mov
inc
mov
adc
dec
lock
adcl
inc
sub
or
popa
fildll
jmp
mov
das
mov
mov
or
xchg
jle
sahf
xadd
scas
mov
clc
lods
mov
jge
lea
mov
cmp
lcall
leave
ret
das
and
lahf
adc
xchg
jmp
mov
data16
pushl
xchg
pop
les
mov
test
dec
out
arpl
mov
or
cwtl
jb
lcall
dec
add
inc
repz
jo
je
aaa
cs
mov
ss
fisttpl
incb
outsl
inc
lahf
ja
inc
jbe
sub
add
inc
xchg
inc
outsb
ja
je
mov
lods
push
pop
ds
jp
repz
rsm
mov
xor
icebp
adc
hlt
adc
inc
jle
xchg
jmp
scas
mov
mov
sarl
mov
decb
mov
cmp
hlt
adc
xchg
mov
stos
lcall
pushl
test
aas
or
xor
clc
call
mov
lret
lcall
mov
scas
xor
outsl
add
insl
and
jbe
jg
jmp
lcall
fcomip
push
fisubs
in
arpl
call
hlt
and
cld
add
filds
cld
adc
movsb
negb
fildl
leave
pop
nop
dec
lcall
jmp
sub
mov
inc
sub
adc
mov
incl
pop
push
lds
jnp
js
jge
mov
xchg
jno
push
jno
int3
pop
ljmp
mov
dec
jge
jno
into
aam
jl
in
aad
mov
adc
fnstcw
int3
or
and
repnz
lret
movsb
int
popa
test
decl
call
aad
push
jb
incl
inc
ljmp
dec
shll
fnstcw
mov
insb
inc
sbb
decl
loopne
sti
mov
loopne
cmp
pop
cmp
cmp
fmull
out
mov
imul
jl
imul
push
push
stc
rcll
sbb
loopne
xor
fldcw
push
repnz
xchg
movsb
jbe
loopne
adc
call
jb
sub
filds
xchg
cmp
lahf
sbb
dec
aad
mov
sti
decl
or
aaa
and
pop
cwtl
lret
cmp
lock
daa
data16
mov
cwtl
mov
fsubl
aad
cltd
ja
jge
mov
sti
jg
sti
imul
outsl
clc
cli
rol
idivl
mov
pop
popf
roll
xchg
xor
test
sbb
out
inc
test
xlat
or
xor
cwtl
and
mov
out
xchg
pushf
movb
clc
add
lea
cmp
add
scas
jmp
sbb
adc
mov
pushf
cmp
adc
xor
push
mov
sub
cltd
inc
jns
std
or
sub
dec
cwtl
xor
enter
inc
aas
movsl
push
sbb
push
pushl
mov
in
lret
mov
sahf
xor
xchg
stos
fnstenv
cmp
sbb
sub
lods
fdivl
sti
pop
lods
pop
mov
push
push
idiv
adc
iret
pop
sti
mov
es
adc
cli
mov
fs
ja
test
mov
cmp
ss
stos
cmp
arpl
mov
push
sarb
push
jb
js
shlb
lcall
fcompl
mov
cmp
sti
inc
lcall
lods
dec
js
jmp
ss
pop
out
cld
sti
hlt
icebp
sarl
clc
ja
jge
jne
jmp
add
out
cmpsb
and
xchg
pop
or
nop
rolb
and
mov
incl
adc
sbb
mov
mov
xor
insb
cmp
inc
add
aaa
jl
jmp
sbb
ret
cmovno
or
mov
das
push
cld
add
pop
mov
insl
mov
fs
das
jp
xor
adcl
inc
icebp
inc
adc
call
push
and
mov
jo
stos
inc
dec
mov
and
movsb
pop
inc
adc
int3
adc
cmpsb
sbb
pushf
mov
adc
mov
enter
xorb
and
ljmp
push
stos
sbb
gs
imul
incl
in
ljmp
xchg
rorb
lods
mov
shl
cs
mov
pushl
mov
es
xchg
push
scas
and
dec
aam
int3
mov
sub
xor
in
mov
shlw
ret
pop
addr16
mov
push
ret
sahf
aad
std
call
in
mov
into
shr
mov
cmpsb
adc
pop
mov
xchg
sub
in
sub
ljmp
lret
fisttpll
pop
mov
or
mov
outsl
mov
sbb
call
pop
js
push
into
cld
cmc
xlat
rolb
or
decl
roll
fucomi
mov
cmp
ds
push
icebp
ljmp
repnz
fiaddl
xor
inc
sbb
cmp
sbb
pushf
mov
xchg
push
outsb
fxch
andb
push
mov
jmp
test
fisubl
lea
add
sub
xor
decl
pop
shrb
xor
and
decl
push
cwtl
mov
cmp
jp
or
adc
jg
out
test
cmpsl
add
adc
push
xchg
out
mov
pushl
nop
xchg
cs
into
lock
stos
pop
pop
stos
jmp
mov
dec
or
pushl
push
leave
sub
adc
xchg
jmp
loop
hlt
adcl
mov
push
fmuls
mov
xor
mov
push
repz
hlt
ljmp
mov
jg
or
pop
stc
mov
shll
add
mov
clc
neg
jnp
mov
icebp
ljmp
push
clc
mov
jmp
int3
ds
or
in
pop
mov
inc
testl
xchg
inc
mov
sar
das
je
flds
push
flds
es
jo
dec
and
inc
sahf
push
adc
adc
sbb
sub
inc
push
pushl
push
call
cltd
pusha
loop
xchg
or
popa
lret
iret
aam
cmp
lret
xchg
dec
push
add
or
jmp
inc
inc
jl
sub
mov
add
sub
adc
jno
decl
pushf
pop
data16
ret
sub
xchg
movsl
test
stos
push
push
icebp
push
xchg
adc
jb
lcall
aad
outsl
nop
or
mov
xchg
or
fstpt
insl
hlt
subb
sub
mov
and
push
mov
cmp
inc
push
sbb
jmp
cltd
psllq
and
xchg
in
ljmp
push
inc
cli
call
and
popf
outsl
add
or
icebp
call
jno
jl
adcl
enter
cltd
outsl
jge
mov
push
pop
hlt
jmp
imul
push
rcll
sub
sti
arpl
jbe
lods
int
inc
aas
push
out
clc
mov
mov
addr16
and
push
int
adc
int
ljmp
adc
push
adc
imul
xor
rcl
xchg
adc
mov
cmp
xchg
sbb
dec
dec
pop
inc
fstpt
sahf
ret
lds
cmp
and
adc
incl
xor
aaa
mov
test
xor
pop
rorl
mov
inc
cmp
dec
ss
pop
sbb
or
mov
lods
ret
lret
push
lcall
cmp
jb
outsl
sub
insb
aam
test
lcall
xor
jmp
mov
rcll
pop
mov
push
and
add
jno
decl
pop
shlb
iret
movsl
inc
leave
out
out
sub
mov
ljmp
dec
or
or
sbb
fadd
dec
push
decb
xchg
call
es
jg
mov
add
ljmp
cs
in
lods
rorl
pop
decl
add
or
mov
sbb
adc
lahf
test
addr16
pop
scas
test
decl
les
pushf
arpl
dec
pusha
cmp
lock
insl
jmp
daa
and
dec
scas
xchg
sbbl
jmp
ljmp
sub
mov
lcall
test
pop
xlat
aad
jbe
mov
push
lcall
push
icebp
inc
mov
in
scas
jg
shufps
or
sub
fsubl
testb
mov
aaa
mov
inc
popf
out
je
mov
cli
sbb
ljmp
mov
sbb
pop
in
ljmp
bound
call
lods
pop
sti
xlat
pop
inc
mov
xchg
insb
sbb
call
pop
cmc
ret
push
div
aad
dec
and
ljmp
mov
dec
cmpsb
xchg
xor
dec
and
mov
mov
fs
push
mov
es
or
ret
sub
jp
jg
mov
add
ficompl
dec
mov
mov
jbe
sub
dec
sar
call
adc
pop
movsl
daa
imul
aas
mov
push
jle
push
lahf
fdivrl
lock
push
xchg
aam
pop
ficoml
jno
or
and
pop
mov
aad
ja
mov
rcr
aad
sub
jp
cltd
scas
loopne
push
ljmp
xchg
shrb
mov
nop
mov
xchg
ss
and
movl
fwait
jecxz
xchg
jmp
test
imulb
jge
mov
push
jbe
test
int3
nop
ja
fsubr
ljmp
jl
pop
sbb
jns
call
dec
imul
pushf
dec
inc
sbb
pop
and
sub
fidivrl
rorl
pushl
or
mov
int3
fcomps
leave
mov
fadd
push
stc
mov
push
pop
std
adc
nop
sub
or
xchg
mov
pushl
icebp
pop
push
xchg
and
loopne
sbb
jecxz
insb
into
movsb
clc
das
cli
jmp
dec
dec
int3
aam
bound
jmp
xor
sbb
inc
lret
popa
pushf
mov
rep
shlb
push
adc
pop
cmpb
mov
scas
jae
fistpl
inc
hlt
mov
mov
add
xlat
cmc
mov
jmp
xor
xor
mov
add
add
add
js
dec
sbb
inc
roll
xor
cmp
out
stos
fdivrp
pop
stos
ret
pop
sahf
ss
mov
arpl
imul
xor
in
dec
jl
ret
pop
imul
and
and
add
cmp
loop
mov
push
cmp
call
scas
xchg
cmp
shr
stc
pop
mov
push
mov
jle
mov
fld1
movl
xchg
test
decl
dec
scas
mov
sbbl
cltd
jne
cltd
and
shr
cmp
aaa
sub
into
push
rcrb
xchg
jp
or
cmp
sar
pushf
and
popf
dec
push
xchg
cmp
dec
ja
mov
das
mov
decb
and
aam
rcr
call
sub
repnz
sub
add
dec
xor
pop
insl
mov
nop
push
and
jo
or
xor
sarl
rolb
int
mov
pop
xor
pusha
push
es
incl
xor
jae
in
pop
jecxz
dec
and
test
out
insb
dec
cmp
sar
mov
dec
cmpsl
stos
sub
cwtl
lods
mov
rcr
dec
and
xor
xchg
pop
addb
xchg
imul
sub
jmp
xchg
fsubrl
in
in
fisubrs
cli
out
shl
ljmp
inc
push
xchg
call
dec
mov
and
mov
fs
outsb
inc
inc
inc
inc
pushf
pcmpgtw
out
gs
clc
pushl
lret
gs
es
xchg
inc
jmp
sub
fwait
dec
stos
inc
push
scas
dec
pop
loop
ljmp
or
mov
xor
faddl
and
js
push
mov
cld
sahf
cld
in
test
fisubrs
les
cli
pushl
mov
dec
sbb
addr16
ret
push
sub
pushl
pop
add
mov
lret
adc
nop
add
aad
decl
ljmp
imul
in
cmp
je
sbb
arpl
add
dec
or
fcomip
repnz
lods
mov
and
cmp
stos
aam
pop
jbe
sbb
loopne
cmp
or
pop
push
iret
stos
mov
pop
mov
ljmp
adcb
lods
incb
out
sub
rolb
jnp
lods
out
xchg
or
or
mov
icebp
push
jg
lock
decl
adc
lcall
data16
or
adc
adcl
push
call
cmp
add
mov
in
int3
push
jmp
stos
dec
pop
add
mov
aam
popf
rolb
dec
push
imul
mov
stos
add
cs
jb
mov
clc
imul
lahf
push
out
xchg
cwtl
mov
cmp
push
push
in
add
call
sbb
sub
dec
nop
sbb
mov
mov
rcpps
add
imul
push
mov
icebp
ljmp
xor
or
push
js
mov
das
jne
arpl
adc
stos
mov
scas
xor
scas
jne
xor
or
sarb
sbb
in
jg
fs
xchg
jle
lods
dec
sub
pushl
jo
dec
call
ljmp
and
int
call
xlat
xor
sub
call
mov
and
xchg
loope
jmp
dec
repnz
pusha
les
xchg
insb
adc
enter
lret
or
inc
dec
divb
push
inc
sti
jl
mov
adc
and
enter
xchg
dec
icebp
jg
dec
scas
test
std
push
push
rorl
es
sub
es
scas
inc
add
pop
out
sub
jno
pop
clc
mov
add
mov
mov
or
fcomip
das
sub
ror
xor
das
mov
add
adc
or
mov
push
daa
xchg
xor
shlb
outsb
inc
aad
and
lock
and
sub
mov
adc
fnstenv
pop
pop
jae
mov
loop
ljmp
subb
arpl
je
mov
xchg
push
lcall
sbb
dec
mov
ret
cmp
pop
or
and
jecxz
lea
adc
xchg
and
aaa
add
jecxz
call
mov
lods
cli
mov
jle
out
cli
ljmp
imul
fs
hlt
cmp
orb
movsb
add
gs
cli
inc
lret
adc
loopne
xor
scas
sub
xor
pop
pusha
jmp
lret
mov
clc
dec
cmp
ds
repz
decl
xchg
dec
loopne
mov
push
sub
cmovle
ret
push
nop
rcrb
shl
into
pop
xchg
cs
call
ret
and
push
outsb
ljmp
lcall
test
dec
int
inc
aam
dec
in
sbb
or
add
mov
inc
push
mov
lock
and
cmpsb
adc
xor
jno
mov
adcl
xchg
pop
jae,pt
mov
pop
inc
mov
sahf
lock
in
icebp
lock
ljmp
dec
and
dec
mov
ljmp
xchg
fs
pop
mov
cmp
pop
rol
pop
jp
cmc
jp
ret
pushl
cmp
xor
ss
or
nop
xor
inc
cmp
loopne
pop
inc
push
push
jg
cmp
testl
movsb
push
lahf
jmp
mov
and
incl
push
sti
dec
sub
sub
iret
jle
popa
jp
pushf
push
xor
bound
into
in
cmpsb
adc
inc
adc
ret
add
or
frstor
test
rol
xor
sar
xchg
addb
add
incl
mov
arpl
mov
mov
or
mov
pop
fldt
pop
push
pusha
clc
imul
push
out
test
add
jb
push
mov
bound
mov
xor
add
push
adc
jg
xor
jl
test
push
aas
push
or
add
dec
arpl
jg
lcall
mov
adc
lds
or
jg
xor
lods
mov
call
jne
or
ficoms
add
pusha
clc
sub
xchg
mov
mov
jmp
dec
daa
push
inc
loop
mov
adcb
xor
adcb
popa
cmpsb
dec
dec
es
mov
decl
mov
mov
insb
or
inc
incb
push
mov
inc
xchg
adcl
out
bound
inc
adc
jmp
movsb
call
test
cmp
ds
decl
push
lea
cs
in
xchg
xorl
pop
in
ret
clc
mov
outsl
call
inc
mov
cmpsb
adc
cmpsl
jno
xchg
add
pop
pop
xor
add
pushl
addr16
sub
jno
cmc
pop
or
pop
mov
cmp
mov
ljmp
ljmp
xlat
xor
daa
test
lock
popa
sbb
jno
lahf
push
fsts
cld
decl
push
push
mov
inc
stos
rclb
or
lcall
mov
sarl
xor
jg
cli
cmp
lock
call
cmp
jnp
push
cmp
jp
add
icebp
jecxz
mov
pushl
lcall
test
xchg
and
ljmp
test
addr16
push
call
stos
dec
addr16
xorb
aaa
cld
out
push
cld
lcall
lret
loopne
push
push
in
in
push
in
adc
add
push
xchg
mov
push
mov
je
scas
data16
dec
xchg
adcb
imul
shlb
repz
hlt
xor
imul
outsl
xchg
jns
dec
js
sahf
cmp
xor
add
pop
rcll
lods
adc
xchg
and
js
xchg
jae
test
xor
cli
jg
imul
jge
shr
test
inc
jne
test
clc
xor
inc
icebp
stos
movsl
fdivrs
icebp
call
dec
push
lcall
test
dec
or
dec
fnsave
ljmp
fstl
ljmp
xchg
iret
jecxz
inc
hlt
in
cmp
jns
and
cwtl
jp
aaa
jp
xlat
dec
push
ret
xlat
dec
aas
fs
or
inc
inc
movsb
pavgw
mov
test
push
jmp
das
flds
ljmp
pop
inc
or
loop
dec
xchg
xor
adc
cmp
lcall
add
cmp
cli
xchg
push
inc
andb
decl
les
les
dec
push
lods
and
adcb
stos
test
cld
ljmp
jbe
bound
adc
int
aad
xor
fwait
dec
pop
mov
xchg
xorl
test
push
jb
sbb
adc
xchg
lcall
aam
sbb
pushf
sti
mov
pop
cs
push
mov
add
pop
popa
jecxz
clc
mov
sbb
mov
mov
jg
jecxz
push
or
pop
stc
inc
fs
int3
mov
pop
jmp
js
int
dec
iret
mov
cmp
dec
mov
test
incl
push
fcmovnu
stos
jnp
mov
cwtd
cmpsb
add
out
fwait
dec
cwtl
pop
fs
cmp
inc
lret
sub
adc
arpl
jmp
sub
push
cmpsb
and
sub
sub
xchg
ja
and
xchg
icebp
adc
jmp
cmc
leave
test
mov
arpl
lea
jne
aas
pop
adc
or
cs
or
sbb
subl
xor
xchg
add
inc
mov
pop
popf
pop
das
fs
ljmp
mov
push
or
xor
xchg
movl
pusha
test
jnp
popf
mov
sub
jmp
movsl
stos
add
mov
pusha
cld
call
mov
xor
incb
pushl
aaa
sbb
inc
clc
stc
inc
mov
mov
and
sbb
out
xor
fs
in
fiadds
dec
mov
rol
jle
nop
jmp
mov
add
das
clc
or
xchg
xchg
daa
xchg
cli
jmp
push
xchg
icebp
sbb
mov
xchg
add
dec
into
dec
sbbl
mov
fwait
adc
incl
imul
or
jno
sub
lcall
fimuls
xchg
shrb
push
cmp
sub
inc
sub
fcmovb
lahf
cmc
das
ljmp
outsb
inc
clc
les
mov
js
or
mov
xchg
sub
test
ljmp
adc
cltd
mov
cltd
xchg
jl
inc
sbb
push
jbe
or
push
std
pushl
sbb
mov
cmp
loopne
pop
pushf
fisttpll
std
push
jg
add
inc
sbb
popa
insb
das
mov
in
mov
jp
paddd
repnz
fisubrs
out
mov
jecxz
jecxz
xor
push
cmp
je
rol
jnp
addb
in
imul
in
add
stc
cmpsb
mov
mov
adc
lock
pushl
jno
jge
mov
push
sub
push
jo
subps
adc
adc
dec
mov
fsubs
sti
dec
sub
or
lcall
daa
mov
add
mov
in
lods
pop
pop
xor
fucomp
fnstcw
mov
out
jmp
sub
cld
mov
arpl
push
lcall
fs
jns
lret
into
repz
lods
sbb
jnp
imul
add
incl
cmp
xor
fiadds
mov
jnp
cmp
out
xor
repz
cld
decl
jecxz
xor
in
lcall
pop
and
cmp
add
inc
ds
rcrb
call
and
popf
jnp
sahf
cmpsb
sti
rorb
daa
cmp
mov
sub
daa
mov
ljmp
cltd
loop
jns
adc
in
data16
mov
jmp
rol
or
adc
out
pop
mov
push
icebp
push
movsb
xchg
and
xchg
and
add
adc
xor
pop
inc
push
and
ds
cmp
dec
cmpb
sub
gs
ljmp
mov
popa
lds
or
les
mov
fisttps
shll
mov
inc
pop
mov
shll
xor
hlt
loope
orl
lcall
mov
movsb
dec
xchg
jle
popa
je
adc
lods
pop
xorl
test
fiaddl
call
cmpsb
dec
xchg
ss
rolb
mov
stos
xchg
lea
mov
fwait
push
lods
fldenv
add
or
shrl
scas
cli
decl
cmp
leave
xorb
aam
arpl
jp
imul
sbb
pushl
push
popf
xlat
sub
dec
jle
or
inc
mov
jnp
in
fnstsw
out
push
shrl
stos
leave
jle
stc
cmp
arpl
decl
lret
pop
mov
xlat
pushl
repnz
mov
jle
dec
jmp
sub
in
aam
mov
jmp
lret
outsl
pop
jp
mov
lds
xchg
add
cmpsl
mov
les
inc
sbb
les
dec
hlt
xchg
dec
clc
mov
fs
loope
and
rolb
and
and
sbb
ja
mov
mov
ds
xor
push
mov
or
and
in
cmp
js
sub
arpl
adc
cli
ljmp
and
xchg
cmp
inc
adc
dec
pop
outsb
mov
sbb
inc
mov
movsb
sahf
mov
inc
or
cld
incl
add
push
out
into
imul
daa
push
jae
inc
xchg
lcall
loope
push
pop
sahf
adc
test
push
mov
pusha
nop
test
sbb
push
lock
lock
jp
push
je
push
fwait
incw
cld
or
sub
imul
enter
ss
imul
pop
xor
fldt
in
mov
imul
negl
leave
inc
pop
popf
mov
leave
cmp
loope
cmpsl
popf
and
lea
out
jg
or
cltd
pop
mov
dec
jg
lret
xor
cmp
popf
push
fisubl
enter
in
es
pop
pop
add
jb
sarb
cmp
and
pop
jo
aaa
jmp
int3
mov
and
adc
cmp
inc
push
stc
das
pop
inc
in
or
xchg
xor
ljmp
xchg
push
push
mov
inc
xchg
imul
rcr
add
add
cmp
pushl
insb
push
adc
push
dec
ror
mov
out
aad
jge
jmp
mov
pop
cmpl
push
pop
outsl
jns
test
imul
push
stos
pop
jg
push
pop
popa
xchg
into
pop
xor
aaa
aaa
cld
insb
ret
mull
popf
pop
stos
ja
inc
sbb
scas
loop
sub
pop
aaa
jmp
xchg
scas
addl
sub
ret
sub
loop
pop
repz
sub
pop
decl
fcoml
insb
lret
popf
mov
xchg
jmp
dec
pop
xlat
test
or
mov
adc
pop
lahf
mov
mov
or
mov
add
and
sub
inc
inc
outsl
mov
loop
icebp
ja
pop
fsubl
test
xor
out
cmp
mov
pop
adc
dec
pop
lods
repnz
or
aas
adc
or
test
movups
aaa
dec
decl
inc
add
test
add
js
outsl
mov
adc
das
xor
lods
mov
rolb
push
pushl
inc
add
enter
or
loope
sbb
jo
ljmp
clc
pushl
lods
mov
or
xchg
hlt
sub
add
ficompl
call
cmpsl
loopne
push
pusha
xor
daa
ljmp
adc
test
insl
arpl
outsb
cltd
clc
fidivs
lods
push
sbb
gs
jg
incl
xchg
jmp
sbb
pop
xor
xor
and
sub
mov
fnsave
stos
int3
in
in
push
jnp
adc
push
test
mov
push
mov
leave
mov
add
scas
inc
cmp
sub
pop
xchg
fs
js
jo
test
ja
cli
fnsave
mov
pushl
out
or
ret
sahf
cmpsl
cmp
dec
pop
mov
mov
arpl
xor
mov
xchg
mov
mov
adc
xchg
clc
lret
push
xlat
and
frstor
cmp
ja
gs
jge
sbb
enter
xchg
add
call
in
and
sbb
addr16
sar
xchg
lahf
sbb
inc
add
sbb
mov
xor
inc
lahf
cld
ljmp
xchg
clc
insb
cmpb
cltd
mov
sbb
sbb
pushl
out
pusha
call
jbe
insb
mov
sbb
mov
xchg
pushl
daa
pusha
clc
add
pop
inc
scas
icebp
xchg
or
mov
mov
popa
loope
and
inc
lods
sub
call
fdiv
push
ss
dec
insb
outsb
and
mov
dec
dec
sbb
cmpsl
cld
cmp
mov
outsb
jl
lahf
mov
xchg
mov
mov
stos
rol
xchg
pop
int
lcall
inc
jg
inc
jl
sub
notb
incl
dec
dec
mov
jne
mov
dec
mov
or
jne
xor
shlb
lods
xor
hlt
incl
adc
out
xchg
orl
imul
xlat
mov
adc
addr16
xchg
call
xor
int3
inc
or
sarl
cmpsl
mov
rcrb
imul
dec
daa
inc
std
outsl
cli
cli
sbb
outsl
mov
loop
xor
decl
fidivrs
add
xchg
stos
and
cmpsb
imul
stos
pop
or
incl
xchg
pushf
aad
pop
jae
ret
xor
jnp
pop
test
mov
lcall
xchg
mov
hlt
push
outsl
jl
stos
rorl
xor
xor
and
ret
xchg
fildll
je
push
mov
dec
pop
pop
sbb
cmp
cli
mov
notl
loope
pushf
sub
push
cltd
mov
shrl
ljmp
test
adc
jne
xchg
mov
xor
pusha
aad
mov
mov
mov
cmpsl
sub
decl
fsubl
push
gs
xchg
inc
repnz
dec
pop
stos
in
jmp
jg
mov
movsb
inc
mov
movsl
jg
mov
pop
mov
icebp
decl
jbe
cmp
xchg
pop
xchg
lds
sbb
incl
mov
pop
ret
cltd
fidivrl
leave
jp
dec
mov
push
ds
popa
mov
push
stc
adc
xchg
test
xchg
or
mov
sub
es
lret
inc
enter
xchg
inc
cld
pop
movsl
push
outsl
mov
shl
mov
lcall
sub
xchg
and
or
popa
or
inc
sbb
rolb
incl
adc
orb
outsb
negb
out
or
ret
mov
inc
ljmp
sbb
or
mov
dec
nop
inc
fsubr
ljmp
inc
xchg
ss
xchg
divb
jbe
loope
push
cmp
sbb
js
inc
jmp
decl
movsb
sbb
push
outsb
dec
aad
pusha
sbb
pop
aad
cmp
ja
shl
mov
cmpsl
ds
sub
incl
mov
es
aad
push
mulb
ljmp
mov
dec
jp
mov
gs
pop
int3
pusha
out
xchg
leave
adc
out
jp
mov
lcall
sarb
test
xchg
int
cmpsb
das
repz
fiaddl
lock
es
mov
mov
lcall
inc
cmc
ret
pop
push
dec
and
stos
hlt
mov
cltd
dec
dec
pop
test
cmp
cli
popf
jns
je
lcall
sub
inc
in
nop
pop
pop
fs
and
mov
lods
ljmp
dec
inc
xlat
mov
mov
jmp
arpl
rorl
insl
mov
xchg
cmovne
pop
pushl
or
sub
fiaddl
xorl
sbb
ds
imul
hlt
or
push
jnp
addl
test
pusha
js
sbb
cmp
lret
loopne
jle
mov
push
dec
inc
ljmp
pop
jns
nop
test
jg
fnstsw
loop
xchg
call
mov
push
pop
lods
cmp
jle
pop
dec
jecxz
xor
popf
and
iret
inc
push
ljmp
dec
mov
hlt
jb
inc
sbb
jae
pop
dec
push
rcrl
pop
and
pop
loopne
clc
add
dec
xor
repnz
call
xor
dec
test
xchg
iretw
ret
push
insb
mov
cmp
mov
out
mov
sbb
jne
and
xchg
and
test
push
push
es
call
cs
out
sub
jbe
cli
daa
ja
push
ja
pushl
add
push
clc
pop
xorl
sub
xor
ds
jl
daa
imul
pushl
adc
push
or
sub
insb
mov
call
cmpsb
pop
or
jns
or
or
pop
rclb
imul
mov
jp
mov
jo
cwtl
nop
loopne
pop
out
lock
pusha
push
push
mov
mov
sub
cmpsb
adc
outsl
roll
outsl
cmpsl
mov
push
push
sub
push
insb
and
xchg
jge
daa
mov
pushl
mov
stc
daa
aaa
mov
aaa
dec
test
xor
in
aaa
jno
hlt
jle
ret
jmp
inc
inc
adc
lds
add
adc
adc
es
mov
icebp
sub
add
mov
rolb
xchg
pop
push
fnsave
xor
add
cmp
jnp
jb
mov
mull
and
sbb
stc
or
ljmp
dec
nop
add
pop
or
push
adc
sbb
shrb
push
js
jne
ret
lock
lcall
addb
adc
and
inc
test
ljmp
fiaddl
jbe
jb
mov
sub
xor
adc
and
adc
hlt
test
test
pop
inc
sbb
cli
rolb
push
imul
shrb
jp
or
loope
mov
mov
jb
or
xchg
cwtl
xor
testb
outsl
call
jns
mov
cwtl
pusha
or
rorb
mov
mov
pop
and
imul
add
mov
cmpsb
dec
mov
lds
test
sub
xchg
push
les
inc
pusha
bound
mov
lock
inc
xchg
jg
inc
aaa
jnp
lock
andl
lcall
or
pusha
push
dec
push
aaa
jo
aaa
imul
and
roll
push
push
sbb
addb
jg
mov
fcmovnb
lea
push
repnz
lea
gs
sbb
xor
and
pop
roll
adc
pop
insb
int3
sbb
lcall
decl
nop
mov
mov
mov
add
mov
aad
xor
sub
mov
xor
adc
mov
adcb
imul
dec
nop
cmpsb
xor
sbbl
pop
es
into
outsl
cli
jmp
xchg
xchg
sti
mov
ss
mov
xor
xchg
ja
push
xchg
mov
lcall
ja
rolb
inc
adc
and
imul
pop
mov
faddl
idivl
sahf
push
cld
outsl
call
xor
adc
push
shlb
add
outsl
clc
pushl
insl
cwtl
xchg
sbb
or
pop
std
add
imul
mov
inc
clc
xchg
push
in
adc
jg
and
outsl
fincstp
xor
cmp
xchg
cwtl
xchg
sarl
cmpsb
xchg
cmp
jns
jo
and
aaa
push
sbb
sbb
inc
jae
ljmp
push
lds
adc
mov
daa
xchg
inc
jo
call
pushl
push
sbb
mov
test
shlb
add
sub
dec
data16
pushl
test
leave
push
ret
sub
push
jb
fildll
sti
lock
fs
mov
xchg
gs
add
mov
lock
enter
sbb
mov
or
lock
stos
lods
inc
std
incl
mov
and
mov
jno
push
cmp
xor
shl
add
xchg
decl
and
bound
fmuls
and
arpl
decl
ds
cmp
jo
arpl
inc
xor
rolb
clc
outsl
ficoml
das
xchg
clc
xlat
imul
sbb
inc
jmp
mov
xchg
punpcklbw
inc
fldcw
imul
mov
decl
pop
jmp
mov
push
ret
nop
push
dec
add
incl
or
mov
push
cmpb
xchg
inc
adc
lods
test
dec
les
xor
mov
cmp
inc
push
pop
lcall
xchg
jo
add
sub
jge
xchg
mov
mov
test
xlat
or
jmp
popa
pop
jno
dec
and
add
or
sub
dec
ljmp
or
mov
arpl
cmpsl
mov
jg
xchg
mov
lods
stos
sbb
jmp
sahf
hlt
mov
incl
in
jb
fisubrl
lea
push
pushf
mov
fnsave
sbb
jg
jg
fwait
add
stos
mov
nop
sbb
fcompl
sub
loopne
or
dec
sbb
mov
lret
or
mov
mov
and
in
or
xor
shlb
scas
sbb
dec
ret
incl
dec
sub
and
add
jb
push
loop
cld
or
xor
inc
jg
mov
lret
dec
cmpsb
push
notb
flds
es
dec
inc
jecxz
enter
ljmp
fdivl
xchg
cltd
xchg
xchg
cmp
cltd
rcl
or
mulb
cmpsl
pop
std
mov
imul
stc
xchg
xor
or
mov
rorb
mov
dec
add
sbb
pop
cmpsl
push
push
js
xor
push
popa
jg
xor
cmc
movsl
cmpsl
or
test
jge
pop
mov
sbb
jae
add
xor
mov
out
xchg
cltd
adc
xchg
dec
add
cmc
pop
out
bound
xor
scas
cmp
outsb
lret
jg
add
loopne
add
jle
sbb
fwait
mov
mov
add
mov
mov
mov
inc
ret
jae
sahf
push
and
gs
data16
sbb
je
add
mov
fs
sub
xchg
dec
mov
int
jmp
pop
or
sbb
xchg
push
push
push
pop
mov
add
pop
cmpsl
cs
cmp
cmp
ja
push
movsb
cmpsb
cs
push
push
movsl
mov
incl
sbb
inc
push
scas
push
repnz
imul
cld
call
push
pop
filds
dec
jecxz
and
pop
out
ljmp
cmp
fcomip
sti
sub
je
mov
andb
sub
cmp
sti
test
jg
dec
push
into
or
and
mov
xchg
jmp
cmp
push
mov
xchg
sub
mov
mov
cmc
mov
roll
jno
xor
xchg
movsl
je
es
nop
dec
rcrb
ss
pushl
mov
pop
lcall
inc
cmp
sub
outsl
jb
add
andb
ljmp
sub
cmp
sub
jge
add
sbb
fwait
pop
pop
popa
jae
mov
daa
lcall
ret
mov
mov
adc
inc
popa
ljmp
cli
add
vorps
loopne
outsb
jno
aaa
add
adcl
incb
jns
cmc
testl
sbb
inc
jmp
cmp
push
cld
mov
inc
or
dec
jo
pushf
sbb
dec
fwait
popl
pop
jg
jmp
and
mov
pushf
arpl
filds
popf
enter
push
incl
pushf
jp
ja
pop
mov
lock
insl
cld
mov
ficoms
rcrb
fwait
lahf
push
adc
pop
fs
sub
jg
repnz
bound
sub
fistps
or
scas
sarl
cmp
xor
xchg
cmp
mov
jmp
sbb
xchg
cmp
push
cmp
les
cmp
ljmp
and
or
test
or
jmp
lock
xchg
fadd
outsb
push
add
dec
movsb
das
mov
bound
add
pusha
push
stos
rorb
cld
jge
mov
pop
out
loopne
add
xor
pop
ud0
add
loope
push
lret
jae
jge
sti
outsb
lods
rcl
xchg
inc
jmp
cwtl
inc
mov
push
mov
mov
mov
push
imul
pop
jnp
jo
loop
mov
pop
std
lret
imul
cmpsb
jne
les
push
push
mov
insl
insl
push
jl
xor
sbb
test
shrb
adc
sahf
cli
sbb
imul
cld
mov
cmp
adc
pop
das
ss
stos
clc
test
daa
insb
push
push
ljmp
lea
pop
xor
jnp
stos
mov
fwait
mov
test
call
test
stos
add
jg
sbb
fs
das
dec
fsubrp
xchg
push
jno
subb
divb
mov
xchg
sbb
mov
lret
les
sbb
icebp
pushl
and
lahf
cltd
ds
mov
or
addr16
xchg
mov
push
int3
sub
mov
ret
in
int3
rcll
fs
cltd
int
mov
loope
into
sub
int
lcall
fldl
and
imul
in
iret
jle
fmul
adc
popf
add
shrb
decl
mov
ffree
xchg
pop
enter
add
jmp
punpcklwd
in
into
and
aad
in
scas
or
int3
xor
std
push
cmp
push
jl
mov
jl
cmpsl
pop
adc
jno
mov
jns
sub
mov
jae
mov
sub
dec
test
mov
push
lcall
test
test
ret
sbb
jl
popf
jl
mov
lock
inc
aaa
cmp
bound
in
mov
pushl
sbb
movsb
mov
pusha
xlat
push
push
sbb
mov
cld
test
sar
call
add
loopne
push
sub
fldcw
clc
stos
pop
pusha
sbbl
insl
push
jb
jmp
mov
mov
in
inc
push
and
lods
and
cmp
push
insb
divl
push
cmp
loop
pop
and
lds
add
cmp
pushf
pushf
dec
int3
fisttps
pusha
inc
dec
add
mov
xor
mov
inc
inc
dec
mov
sbb
cmc
lret
mov
ljmp
adc
jb
xor
mov
push
clc
imul
mov
int3
mov
and
and
sub
je
cli
dec
rclb
std
xchg
add
pop
repz
jo
mov
subl
jg
pop
pop
decl
xchg
sbb
inc
out
pop
adc
mov
cmpsb
outsl
clc
icebp
cmp
add
jg
ss
jge
sbb
inc
pushf
push
xorb
repnz
ds
sbb
std
repnz
inc
je
call
push
or
dec
pop
inc
push
imul
mov
ljmp
xor
imul
push
xchg
xor
bound
out
cmp
fsub
pop
add
dec
inc
sub
sub
mov
adc
dec
adc
enter
xor
add
lds
roll
seto
lcall
fldenv
dec
pushf
push
mov
mov
das
xor
jl
jmp
in
xor
sbb
dec
xchg
mov
leave
int
dec
jb
pop
xchg
jno
and
mov
dec
mov
test
pushf
jge
mov
test
bound
xchg
pop
add
cltd
and
mov
shl
fs
jg
cmc
push
sbb
push
dec
sbb
cmp
add
mov
and
fildll
sbb
mov
lret
mov
inc
sbb
mov
inc
notb
and
stc
mov
out
pop
or
mov
pop
std
fisubs
xor
fnstsw
gs
and
faddp
jnp
jge
jg
out
in
mov
jge
hlt
fildl
leave
inc
inc
aas
add
std
xchg
rcr
inc
xchg
add
and
incl
add
popf
jbe
pusha
nop
roll
adc
inc
or
es
and
decl
dec
pusha
repnz
adc
inc
add
lcall
out
ds
and
test
aam
sbb
ljmp
or
mov
andb
pop
mov
sbb
fmuls
leave
and
sub
scas
cmp
sar
add
sbb
lds
das
inc
push
int
int3
adc
dec
xor
sub
lret
sub
out
adc
lcall
sbbb
sbb
add
movsb
mov
and
sar
pushl
mov
inc
add
xor
inc
or
mov
adc
mov
clc
ljmp
dec
dec
sbb
and
sub
and
fs
out
mov
mov
test
and
lods
cltd
sub
lods
ljmp
xor
cmpsb
rolb
cmpsb
fmuls
stos
sub
add
ljmp
and
xchg
je
mov
mov
add
sub
call
sub
or
imul
and
jl
loop
lea
clc
push
call
incl
sbbl
hlt
cmc
sub
mov
pushl
mov
cwtl
and
cmp
int
leave
xchg
mov
lods
mov
sub
adc
std
das
aam
inc
cmp
aam
jecxz
mov
jg
out
orl
js
mov
mulb
xchg
hlt
jg
mov
mov
lcall
mull
js
ljmp
imul
repz
dec
mov
or
mov
pop
jmp
neg
outsl
pop
popa
xchg
mov
add
jg
mov
aas
neg
sbb
aas
add
fmull
mov
ret
pop
ljmp
push
xorl
out
icebp
ret
and
pop
aas
lock
pop
sub
mov
jl
lret
inc
jno
decl
mov
outsl
mulb
popa
add
shrb
add
jg
or
push
fnstsw
je
test
testl
push
into
cmp
and
lcall
mov
out
movsb
rorl
rep
inc
dec
cmp
aad
mov
sbbb
inc
jno
xor
push
pop
sub
dec
lret
mov
mov
push
pop
push
push
sub
enter
js
aad
push
push
ss
call
imul
push
inc
adc
pop
clc
scas
out
enter
xchg
cwtl
popa
daa
pop
cmp
inc
int3
nop
or
push
mul
pop
orb
push
aam
and
xor
les
push
cltd
aad
decl
pop
push
mov
xor
enter
xchg
scas
shl
and
or
clc
jb
ljmp
jb
push
enter
rolb
pop
add
cmpb
repnz
xor
stc
mov
add
or
mov
mov
sub
mov
adc
add
cmpsl
xor
pop
add
sahf
push
push
call
xor
add
call
cltd
cltd
rol
xor
jmp
sbb
xor
movsl
inc
cld
mov
int
xor
mov
dec
push
lret
repz
cmp
jae
mov
jge
push
lret
nop
mov
out
sub
cmpl
add
hlt
xchg
movsl
ja
rclb
es
push
push
rcrl
shll
sbb
dec
ss
mov
push
js
inc
push
out
lods
and
rcll
mov
in
into
fwait
jg
mov
cld
jb
aas
jp
inc
ss
daa
cmp
or
jmp
xchg
pushf
sahf
xchg
movsl
xor
int
dec
sar
rclb
dec
dec
rcr
pop
clc
movsb
loope
js,pn
call
nop
aam
shl
and
push
dec
and
ret
mov
push
or
filds
sbbl
sbb
cmp
pop
decl
ljmp
lods
shlb
or
ret
insl
xchg
stos
sbb
push
loop
dec
gs
incl
mov
or
and
bound
stos
add
cmpsb
and
jmp
rolb
dec
cld
mov
pop
xadd
sbb
mov
pop
loopne
sbb
clc
pop
cmp
mov
in
and
or
add
sti
pop
adc
sub
leave
mov
push
hlt
adc
lods
add
into
lock
sub
xor
sbb
or
pushl
stos
popa
dec
push
mov
gs
xchg
fldcw
xorl
sbb
outsl
movsb
lods
xor
jb
cld
jg
push
dec
mov
sub
jns
mov
call
mov
mov
iret
jns
sub
dec
stos
daa
xchg
pop
stos
pop
jg
jmp
push
hlt
inc
adc
push
mov
cmp
test
push
xor
fsubr
adc
pushl
xchg
dec
mov
and
inc
test
aam
cmp
xchg
ja
ljmp
pop
cmc
cs
ficompl
ud0
jo
mov
mov
addr16
call
xchg
push
mov
jmp
xchg
push
jno
outsl
pushf
call
sbb
add
rolb
aam
add
dec
ret
push
adc
ret
nop
rclb
ds
pop
cwtl
mov
push
popa
loope
ds
sbb
stc
push
add
cmpsl
add
lcall
and
es
adc
mov
test
lcall
pop
adc
sbb
call
nop
stos
push
dec
test
xor
or
inc
pop
hlt
lcall
shlb
xchg
push
mov
add
cmp
clc
sbb
xchg
fimuls
push
pop
ret
pop
ret
mov
repnz
push
inc
pushf
cmp
add
ljmp
in
sbbl
mov
arpl
pop
fldlg2
shll
jnp
push
pop
add
mov
negb
les
fidivl
cmp
lcall
pushl
pop
cld
mov
mov
popf
jne
mov
adc
dec
fwait
lods
repz
push
push
fldt
faddl
ret
cmp
fisttps
mov
das
dec
dec
lods
lds
xor
in
imul
add
mov
mov
jge
xchg
mov
mov
out
pop
sbb
insl
sbb
mov
scas
xchg
mov
mov
adc
adc
lea
and
lock
mov
dec
lret
lcall
outsl
icebp
cli
mov
shlb
xchg
mov
dec
sub
loop
pop
mov
cld
jg
xor
cmp
loop
fists
or
or
push
mov
mov
fadds
add
dec
jo
aad
js
push
inc
test
xchg
enter
call
sub
add
repnz
wrmsr
mov
ljmp
clc
call
push
xchg
insl
xchg
inc
mov
mov
jmp
out
push
inc
sub
lea
adc
int
aaa
imul
xorb
add
pop
mov
lods
dec
adcb
dec
xchg
lcall
shl
sbb
arpl
cmpsl
inc
lahf
sbb
xor
xchg
arpl
add
decl
stos
por
push
mov
movsb
sub
fwait
push
cmp
mov
inc
cs
fwait
call
dec
or
outsb
cmpsl
mov
fdivrs
out
or
icebp
aaa
ss
lahf
push
jl
or
pop
fs
fstpt
push
out
je
lea
jmp
sbb
out
out
dec
divl
inc
pop
mov
add
mov
sbb
pop
hlt
addb
mov
ljmp
ljmp
cli
pop
push
std
ret
loop
loop
lretw
push
lea
add
aaa
xchg
push
jmp
aas
sbb
adc
and
add
push
xor
xor
jae
popf
sbb
stos
nop
xchg
xchg
test
or
mov
mov
lcall
adc
dec
mov
add
mov
subb
xchg
cmc
decl
ret
xor
cmp
sub
mov
mov
mov
pop
dec
adc
or
inc
mov
xchg
xor
sbb
cld
mov
xchg
push
or
or
dec
xchg
decb
mov
cmp
xchg
cltd
cli
lcall
inc
imul
orl
lret
jecxz
sub
or
loopne
aam
and
cmp
or
xchg
test
rorb
shrb
filds
lock
rcrb
inc
bound
loopne
inc
dec
lods
push
and
push
cmp
fmul
scas
dec
ret
pop
mov
dec
lcall
ljmp
sbb
sbb
nop
cmpsb
jmp
std
decl
fwait
pushl
mov
js
sti
add
mov
outsb
insl
repz
ds
mov
sbb
add
cld
pusha
popf
in
push
mov
jg
jns
or
inc
cli
repz
jae
mov
loope
inc
inc
test
and
sbb
out
sub
or
inc
test
inc
jecxz
mov
sahf
jle
sub
and
cmp
lock
sarl
sub
outsl
clc
fisttps
cs
andb
xor
ja
incl
mov
rorb
popf
lret
stos
rorb
mov
xorl
sbb
test
cmp
test
stos
cwtl
mov
ret
inc
inc
mov
mov
add
sub
out
cli
mov
and
mov
add
and
xor
adc
jo
inc
adc
mov
sar
cmp
incl
or
call
out
mov
sbb
in
sub
dec
sub
cli
or
inc
sub
xor
nop
int3
add
stos
clc
xchg
add
add
push
leave
mov
and
or
repnz
rcrl
cmp
mov
jmp
add
dec
add
dec
mov
lods
out
ds
jmp
hlt
sbb
mov
sub
sbb
fldpi
lds
loope
fstpt
rolb
scas
js
fcompl
pandn
mov
std
mov
adcl
out
xor
jno
ud0
lcall
dec
imul
pop
aas
in
ds
lret
sbb
pop
inc
insb
jb
jb
adc
add
lcall
jecxz
add
cmp
in
cmpsl
das
jmp
mov
add
mov
in
or
jno
push
adc
aaa
cld
jg
adc
cmp
xchg
sbb
mov
shrl
test
call
mov
xor
cltd
and
jno
sbb
stos
xor
or
std
ret
call
fwait
mov
or
mov
mov
or
test
add
mov
jle
mov
ljmp
cmp
mov
push
fs
jg
jg
xor
hlt
stos
lods
dec
lret
jmp
mov
xor
lret
decl
xchg
shll
subb
inc
fiaddl
enter
pushf
sub
fs
decl
dec
aas
cli
cwtl
enter
lcall
mov
xchg
push
inc
xor
mov
cmpsl
jns
push
in
dec
loopne
fstpl
sti
mov
test
pop
rcll
jo
mov
dec
and
pushl
jl
add
mov
push
sub
sub
aam
loop
mov
in
out
mov
lock
pop
mov
fildl
mov
ja
sbb
mov
mov
push
stc
push
adc
xchg
inc
mov
in
fs
clc
mov
push
mov
ljmp
and
call
int3
iret
jge
dec
je
mov
mov
xor
pop
adc
loope
push
sub
incl
call
pop
xchg
mov
adc
mov
ffreep
sbb
and
mov
shrl
sub
and
rorb
push
jnp
mov
out
xchg
sbb
bound
mov
pushl
mov
fcoms
daa
sbb
xchg
and
mov
bound
mov
inc
pop
push
mov
sub
mov
or
mov
loop
mov
repnz
xor
inc
or
leave
nop
mov
aaa
in
sub
dec
mov
cwtl
pop
or
pop
lea
add
push
fadd
inc
inc
ss
rcll
dec
iret
adc
int
dec
jg
add
andb
pop
or
add
fldenv
scas
and
pushl
fisttpl
xor
ret
int
fnsave
ljmp
and
cltd
pop
xor
insb
add
out
mov
pop
test
enter
or
pushl
lret
cli
insl
dec
into
icebp
mov
xor
loope
mov
icebp
fnstcw
push
notb
jnp
push
jl
dec
outsb
cmpsl
inc
mov
call
sar
push
mov
dec
mov
ja
adc
fmuls
repz
cmp
ja
mov
sar
mov
nop
dec
dec
mov
cld
sbb
stos
fdivrp
pop
xchg
adc
ds
orb
xor
enter
call
test
or
rcrl
xor
ljmp
xor
mov
push
mov
cwtl
lcall
xor
sbb
fsubs
sub
push
jle
dec
sbb
mov
xchg
test
xorb
and
adc
incl
add
mov
sbb
pop
xor
add
es
lea
nop
lret
lock
jmp
sti
aas
xchg
adcb
mov
test
mov
sub
add
int3
xlat
jmp
lret
and
dec
ret
lds
or
lea
pop
inc
sub
cmp
in
call
scas
rcll
or
xor
inc
pop
hlt
mov
aam
xor
lcall
pop
out
add
es
push
dec
sbb
dec
pop
lods
ss
fcomip
mov
inc
bound
push
inc
pusha
fucom
jno
call
push
repnz
sbb
adc
aas
jle
mov
xchg
fstp
std
sub
aad
cmp
hlt
jns
test
scas
cmc
aam
fbstp
cli
xchg
rolb
stc
push
fidivs
push
loope
lcall
pop
test
in
adc
addb
xchg
imul
xor
add
mov
cli
xchg
out
jo
or
insb
or
mov
mov
mov
mov
add
mov
xchg
cmp
adc
cmpsb
in
cmp
mov
push
mov
xchg
pop
xchg
dec
dec
xor
jg
sbb
add
push
add
nop
lods
push
and
shl
inc
xor
jbe
add
xchg
cli
xor
mov
jmp
incl
sbb
dec
jecxz
es
lods
and
jg
fistl
dec
mov
push
mov
bound
mov
push
push
jg
dec
fnstsw
ss
movsl
ret
fldl
dec
cmpsb
out
call
dec
ficompl
jg
fs
pusha
iret
popf
pop
lret
sbb
pop
popf
cmpsb
push
fnstsw
push
pop
mulb
pushl
dec
es
dec
jbe
cmpsl
xchg
and
jge
clc
mov
fdivrp
lcall
incb
loop
dec
xor
jne
iret
pop
push
mov
hlt
adc
push
lcall
sbb
xor
and
loopne
pop
pop
std
cmp
xchg
mov
nop
addr16
jb
jle
sbb
sbbl
mov
call
xorb
pop
data16
fisubs
insb
out
rorb
mov
sbb
jne
cwtl
lret
sahf
mov
add
shlb
mov
ljmp
mov
ret
or
gs
sub
ret
jns
pop
add
mov
loopne
dec
fsts
push
subb
das
add
sub
sub
dec
add
jo
xorb
or
jl
sahf
adc
add
pop
lcall
pushw
and
xor
shlb
cmp
fcmovnb
call
cltd
inc
xor
pushw
pop
lcall
inc
push
xor
pop
cmc
call
mov
pusha
dec
int
push
dec
insb
lcall
test
clc
decl
int3
cs
cmp
or
push
cmp
pop
push
incl
sbb
push
pop
cmc
ds
icebp
pop
lds
fiadds
movsb
pop
incl
push
jno
pop
shl
in
imul
fnsave
data16
call
mov
add
scas
sbb
ljmp
imul
shl
iret
mov
jb
in
adc
aas
jnp
popf
cli
filds
jecxz
cmpsl
stos
adc
or
mov
adc
adc
jae
call
enter
addr16
sub
sahf
mov
push
push
std
jg
stos
fwait
js
xor
dec
mov
fdiv
xchg
mov
enter
sbb
outsl
andl
scas
sub
lods
andl
and
xchg
shl
lcall
sub
add
or
sbb
add
lcall
add
nop
enter
lods
into
pop
pop
cmp
outsl
call
jo
dec
cld
decl
and
cmp
inc
lock
fldt
jmp
hlt
or
stos
mov
or
push
sbb
cmp
mov
movntq
push
test
cmp
cmp
imul
mov
out
push
aas
pusha
adc
rorb
cmp
push
fsubs
fsubs
cmp
xor
std
es
pop
jns
push
dec
aad
mov
or
imul
in
adc
pushl
cmpsl
sub
fdivrp
sbb
je
repnz
repnz
xchg
inc
mov
shrb
or
mov
pop
xchg
sbb
not
rclb
add
call
insl
sbbl
movsb
or
xor
jb
ret
hlt
mov
lret
pop
xor
xchg
stos
aaa
xor
call
xchg
rolb
lea
add
xchg
ret
sbb
and
add
jne
and
dec
mov
aaa
mov
out
rolb
sarl
jmp
rcrl
roll
dec
aas
in
leave
cwtl
mov
call
rcrb
lock
inc
sub
mov
dec
gs
imul
dec
clc
jmp
bnd
lea
das
mov
mov
push
or
in
ja
std
insl
sbb
fdivp
std
shl
ja
pop
addps
pop
pop
add
xor
mov
dec
ja
gs
or
lock
jmp
mov
push
mov
cli
incb
sar
fcomip
fistpll
pop
jg
arpl
cmpsb
outsb
subw
pop
js
jo
xchg
mov
popf
clc
inc
jg
xchg
adc
mov
or
xchg
es
sbb
movsb
leave
sbb
clc
gs
inc
adc
aas
push
mov
incw
jl
pop
and
nop
popa
lock
rol
incl
jecxz
mov
mov
rolb
jne
xor
mov
xor
dec
mov
dec
lcall
mov
push
sub
lret
add
adc
std
jp
xchg
xor
mov
orb
mov
mov
into
or
and
mov
jbe
cwtl
cmpsl
mov
scas
adc
adc
rcr
mov
cwtl
sbb
out
incl
addb
fs
xchg
and
push
scas
xchg
aas
addl
and
shlb
ljmp
cli
xchg
sbb
pop
xor
in
jp
push
scas
aas
enter
imul
pop
jl
icebp
decl
lods
mov
into
mov
ja
mov
sbb
push
dec
lcall
ret
cli
dec
jno
inc
into
shll
rcrl
and
cwtl
xchg
inc
mov
iret
push
jle
loopne
iret
xchg
ljmp
jg
push
pushf
outsl
or
xor
or
pop
push
orb
loopne
inc
ljmp
cmp
xchg
sub
mov
mov
inc
mov
jo
loopne
mov
test
dec
cmp
sbb
insb
mov
fildll
lcall
enter
fmull
leave
mov
and
mov
mov
or
loop
adc
pop
addb
inc
pop
jle
out
pop
test
inc
cwtl
add
xor
add
inc
fwait
push
jno
jle
pushl
inc
imul
je
or
jno
xor
roll
dec
or
mov
mov
push
mov
inc
es
pop
sar
cmp
aam
arpl
inc
adc
dec
sar
pushl
fs
popf
je
push
inc
lea
stos
pop
adc
mov
pop
insl
inc
sbb
mov
jno
inc
dec
lds
test
adc
mov
pop
movl
xor
add
clc
mov
inc
jmp
gs
xor
add
imul
pop
push
imul
push
pop
lods
mov
mov
pop
outsb
cmc
jbe
mov
mov
mov
jo
adc
loopne
testb
push
add
loopne
ret
ja
nop
add
pushl
vmovq
sbb
and
mov
icebp
leave
xlat
sahf
leave
push
notl
pusha
roll
enter
jbe
push
cmp
dec
dec
int3
mov
sarb
mov
push
popf
mov
pusha
int
es
movsl
nop
cmp
jg
cmp
push
sbb
xchg
pop
ss
call
cmp
lea
std
inc
test
popf
ss
pop
sub
stc
in
add
ja
sub
push
ret
aaa
jne
dec
xor
leave
mov
jo
dec
addr16
push
inc
insl
loopne
push
roll
nop
mov
adc
sub
or
push
xchg
mov
decl
call
stos
xchg
fwait
lcall
cmpsl
cmp
xor
call
sbb
push
jle
cmp
push
inc
cmp
pop
popa
mov
xor
push
test
lcall
mov
sbb
inc
fstpt
jnp
into
jmp
mov
pop
push
jge
fwait
movsl
gs
mov
lcall
cs
lret
test
pushl
iret
inc
pop
mov
jno
sbb
mov
cli
loope
sbb
test
das
xor
add
push
sbb
mov
subl
mov
add
arpl
sub
xchg
ljmp
not
iret
push
pop
fadd
int3
cmp
fxch
or
push
and
mov
cltd
test
mov
jne
add
inc
je
popf
dec
test
mov
adc
push
xor
call
lcall
imul
aam
scas
cmc
mov
sub
mov
dec
mov
mov
out
jmp
push
add
or
loop
jmp
insl
add
lret
mov
leave
pop
xor
mov
test
mov
test
jmp
lret
push
add
dec
shll
push
test
dec
test
test
pushl
xchg
and
and
mov
leave
mov
pop
mov
push
leave
hlt
out
add
lcall
or
repnz
fcmovnbe
xchg
jg
hlt
repz
mov
jl
xor
pop
and
stos
out
loop
jbe
push
cltd
call
or
pushl
xchg
mov
mov
sub
dec
add
push
or
popa
int
mov
scas
add
fisubrl
cmp
fwait
hlt
xchg
cld
jmp
push
cmp
xchg
out
dec
push
cmp
jg
stc
pop
ret
out
sbb
or
inc
push
fisubrl
jno
mov
adc
adc
jg
sub
sub
or
sub
enter
pop
shrl
xchg
and
xor
and
outsl
adc
cmpsl
inc
leave
ljmp
jae
sbbb
inc
dec
add
mov
mov
cmp
sbb
xchg
addl
jns
mov
mov
jae
lcall
jno
imul
inc
bound
mov
ret
jge
mov
pop
cmc
jmp
mov
mov
mov
xchg
les
mov
push
xchg
mov
lcall
add
push
mov
mov
iret
xchg
xor
or
cli
push
ror
fisubl
push
or
mov
push
int3
ljmp
test
lret
inc
sub
enter
dec
cmpsb
cwtl
cld
mov
xchg
ds
dec
maxps
lods
mov
hlt
loope
aas
cmp
pop
out
int3
popa
in
dec
arpl
inc
xor
je
cmp
pop
mov
jl
mov
sti
push
mov
mov
and
pushf
pinsrw
fsubs
add
incb
adc
ss
adc
push
adc
clc
jg
sbb
es
aam
mov
test
xor
test
fdivp
icebp
inc
add
cmpsb
lcall
incl
inc
inc
cmpsl
insl
adc
and
dec
js
pop
sbb
test
cmp
mov
jne
xor
test
pusha
jne
call
adc
and
sbb
or
jbe
adc
pop
jmp
push
aaa
dec
push
lea
pushl
jecxz
mov
sbb
pop
jbe
mov
outsb
pop
add
incb
adc
in
test
pop
hlt
cli
mov
pop
push
dec
xchg
into
jb
mov
aaa
adc
imul
push
mov
xor
add
decl
scas
fnop
arpl
xchg
and
mov
out
xor
jb
mov
add
jg
push
incl
pop
cmp
shlb
jns
pop
cld
or
mov
decl
mov
js
adc
test
xor
sbb
stos
xor
lock
ljmp
lods
lcall
mov
xchg
xlat
cmpb
stc
push
loope
stc
sub
pusha
xchg
movsb
lcall
mov
push
nop
jle
cmp
xchg
mov
insb
insl
mov
decl
sbb
lea
push
fs
sub
mov
out
xchg
in
cmp
fwait
dec
sub
in
xchg
loop
mov
mov
push
xchg
fwait
adc
ljmp
push
xor
rolb
call
test
hlt
js
ds
adc
lcall
cmp
jmp
pmaxsw
popf
addr16
sbb
or
out
outsb
in
xor
inc
lods
mov
push
cld
dec
rcrb
pop
push
fnsave
cwtl
push
add
xchg
cmp
and
stc
sub
int
shll
jge
imul
mov
mov
rep
cmc
cld
out
stc
or
xchg
dec
sub
fstpl
into
sbb
fdivl
cmpsb
or
mov
jmp
inc
pop
test
das
clc
cmp
ljmp
and
and
push
gs
mov
mov
insl
pushf
jnp
pop
inc
rolb
std
aam
push
mov
das
and
out
dec
add
pop
hlt
mov
mov
sub
pop
push
or
mov
lods
stos
mov
ss
addl
xchg
arpl
decl
mov
and
add
add
insb
cld
or
lock
inc
adc
and
push
xor
test
push
call
sti
mov
cmpsb
in
call
fidivrs
test
in
cmp
pop
out
sbb
jp
loope
pusha
imul
decl
or
inc
push
sti
xor
sub
nop
test
cltd
push
popf
jns
call
in
mov
push
cmp
add
add
and
push
xchg
cmp
incl
push
jno
xchg
or
jg
pop
inc
lods
sbb
movsl
and
lcall
aam
add
cltd
or
int
dec
popf
int
test
inc
gs
aad
test
test
in
clc
pop
inc
sbb
mov
adc
adc
aad
inc
sub
dec
push
inc
xor
mov
inc
mov
pushl
mov
out
pop
loope
sahf
jmp
sbb
mov
push
scas
dec
mov
pop
push
fstps
lock
and
add
add
adc
inc
testb
incl
dec
rorl
clc
pop
and
xchg
pop
fcmovbe
mov
popa
pop
incl
decl
test
es
daa
cli
into
or
inc
add
lods
inc
ds
add
aaa
adc
sbb
mov
or
sar
push
or
push
dec
lods
in
incl
push
rorl
pop
into
add
cld
or
roll
add
ja
push
insl
adc
sbb
jl
outsl
cmp
insb
inc
and
aam
mov
and
cmp
hlt
call
jns
sarb
jl
adc
outsl
cmp
jb
adc
incl
and
push
sub
or
ja
xchg
jg
push
dec
add
adc
int3
inc
mov
jmp
fistps
rcl
popf
inc
imul
xlat
jge
popa
jecxz
or
popa
inc
push
mov
adc
or
into
test
and
fstps
and
push
mov
jg
add
mov
mov
or
mov
xchg
popa
mov
dec
and
std
call
mov
mov
or
inc
and
test
call
pop
xor
jmp
fldenv
orl
xchg
pop
test
mov
add
jmp
es
add
std
ret
cmp
call
xchg
inc
dec
testb
sti
mov
fisubs
sub
adc
inc
ds
pop
ret
bound
and
test
dec
add
outsb
dec
sarl
arpl
in
insb
inc
and
inc
pusha
test
mov
adc
loopne
sub
pop
call
movsl
icebp
cltd
call
mov
sahf
loopne
add
sbb
inc
insb
fisubs
inc
mov
insl
cmpsb
mov
jg
loopne
mov
sbb
or
incl
mov
xor
rorb
jge
in
inc
mov
call
add
out
push
jle
in
sub
dec
or
xchg
jmp
add
in
in
xor
pop
sbb
mov
inc
push
dec
shl
call
lods
or
decl
or
movsb
and
sbb
dec
and
inc
mov
cmp
enter
add
cld
pop
and
jnp
sarl
add
lcall
push
xchg
popa
push
xchg
jge
pusha
in
shrb
inc
mov
gs
cli
aaa
xor
dec
mov
pop
pop
loop
lock
scas
add
sbb
cmp
dec
rcrb
sbb
jg
jp
xor
push
iret
xor
push
fmul
add
or
js
sahf
out
ficoml
ljmp
pop
arpl
push
ret
jo
sbb
jo
mov
jb
cmp
jmp
addr16
push
ds
mov
or
sub
pushl
fnstenv
inc
push
or
pusha
xchg
jno
daa
inc
mov
jnp
call
sbb
mov
pop
and
xchg
int
push
inc
adc
ljmp
pop
sahf
jl
decl
jp
and
pusha
or
addr16
in
jl
mov
fs
decl
push
pushf
fs
into
mov
mov
frstor
add
and
ret
mov
cwtl
bound
inc
mov
pop
and
or
lds
mov
pop
xchg
pop
jle
sub
xchg
sub
outsl
in
push
popa
mov
hlt
mov
pop
pop
mov
xchg
mov
mov
imul
and
es
faddl
or
mov
adc
popf
mov
mov
lahf
sbb
fiaddl
lods
push
mov
nop
fisubl
cs
clc
pop
lock
decl
jbe
shr
insl
nop
xor
push
xchg
jnp
fidivrl
ljmp
fidivrl
ljmp
mov
loopne
mov
fwait
mov
std
frstor
push
inc
lods
inc
jg
or
sbb
adc
in
cmpsl
jle
test
sar
jmp
int3
test
pop
xchg
shlb
jl
lods
lods
mov
mov
add
shrb
inc
mov
add
adc
inc
mov
sub
add
cmp
call
sbb
jns
pop
fisttpll
lds
cltd
arpl
push
mov
pop
testb
adc
xor
xorl
mov
stos
mov
mov
jg
sub
jmp
mov
rep
dec
sub
lock
ljmp
arpl
insl
fmull
repnz
jmp
into
repnz
sub
inc
loopne
xchg
sub
push
xchg
mov
jmp
mov
jb
in
or
test
insb
fistpl
leave
mov
lods
xor
dec
mov
in
ja
lcall
xchg
shlb
out
dec
sahf
or
aam
out
ss
push
pop
pop
mov
ljmp
jo
outsl
inc
and
mov
pushf
sub
mov
mov
lods
fmull
outsb
pop
in
push
add
shll
jge
mov
cmp
add
inc
adc
rclb
stc
dec
addl
pop
bound
dec
add
fs
xchg
fsub
out
call
call
mov
xchg
add
gs
gs
outsb
nop
fisubrs
sub
adc
outsb
pushf
cmp
xchg
iret
xor
jb
repnz
push
mov
push
lods
jb
ljmp
clc
xchg
adc
pop
clc
add
rcl
addr16
jg
inc
cld
hlt
mov
repnz
cmp
jno
mov
insl
shrb
imul
or
sar
lret
out
xor
cld
mov
rcrl
icebp
incl
daa
mov
scas
call
lds
jp
test
fistps
add
mov
inc
loope
pop
add
inc
insb
inc
stos
push
lods
mov
mov
rcl
fwait
dec
lcall
push
sbb
hlt
incl
mov
in
imul
mov
sbb
decl
inc
icebp
mov
loop
push
sub
test
add
jno
gs
xchg
icebp
aad
jmp
ljmp
outsb
sub
pop
mov
in
bnd
in
imulb
cld
sub
ja
shlb
jno
daa
dec
pop
add
cwtl
lcall
mov
bound
lods
xchg
jle
sbb
rcll
fmuls
jns
shlb
pop
leave
out
and
push
pusha
sbb
push
imul
pushl
and
jnp
xor
rcrb
pop
or
fldl
or
test
ja
push
sub
leave
or
adc
jb
cs
ficompl
dec
insl
adc
push
sub
decl
test
push
mov
das
mov
xchg
xor
push
out
call
loopne
or
or
lods
mov
mov
mov
add
push
inc
sub
pop
mov
ljmp
inc
decl
mov
push
and
lock
push
xchg
pop
cli
pushf
jmp
test
cmp
and
incl
adc
test
stc
in
bound
mov
jae
aas
std
jmp
hlt
cmpsb
xor
jno
sbb
inc
mov
inc
rclb
fs
add
mov
sbb
lods
scas
pop
sbb
call
pusha
outsl
aaa
loop
dec
jnp
add
cmp
jno
lret
lcall
cmp
dec
repz
fcmove
mov
ljmp
or
scas
xchg
test
mov
sarb
jle
mov
andl
push
push
push
addr16
push
add
pushl
addr16
iret
sbb
push
mov
stmxcsr
or
jns
push
roll
decl
fiadds
xor
fs
adc
and
jmp
xor
sbb
aaa
add
in
inc
sub
into
call
cmp
insb
push
add
out
aad
popa
pop
mov
dec
mov
call
aas
cmpsl
jbe
push
inc
mov
mov
or
push
mov
ja
pushf
xor
pushl
std
add
outsl
cwtl
arpl
push
pop
mov
std
pusha
test
lods
mov
xor
pushl
cmp
lret
mov
inc
arpl
stos
jecxz
add
push
mov
mov
dec
sti
imul
xchg
jne
sti
stc
test
jl
iret
mov
pop
shll
push
mov
aaa
into
fisttps
loop
cli
push
lea
subl
roll
lcall
xor
shll
pop
cmp
int
xor
jo
in
dec
jb
push
in
jmp
or
daa
push
mov
mov
mov
insb
jae
out
out
pop
or
filds
incl
scas
inc
push
push
sub
cmp
dec
hlt
push
mov
push
nop
sti
and
mov
jmp
shll
jbe
xchg
mov
mov
out
xchg
jecxz
insb
jg
mov
jmp
or
ficomps
outsl
iret
dec
cmp
int3
xor
test
add
xor
lcall
addb
int3
mov
cld
out
mov
mov
in
pop
hlt
pop
lock
in
dec
neg
adc
jp
jecxz
pop
pop
adc
sub
decl
or
hlt
rcrb
xchg
js
scas
cmpsl
jp
aam
xchg
add
push
call
or
shl
pusha
ror
aaa
jle
les
dec
lock
pop
mov
out
xor
pop
pop
test
push
test
aad
push
pop
test
gs
mov
out
fdivs
cwtl
in
or
inc
push
lock
insb
out
dec
test
inc
arpl
pop
inc
push
mov
mov
imull
pop
cmp
aam
mov
pop
lcall
call
sub
sti
out
mov
icebp
imul
sbb
jecxz
iret
icebp
outsl
sbb
lea
xchg
jle
stc
test
jle
cmc
inc
imull
cmpl
test
das
lds
mov
sub
out
inc
add
iret
lcall
sbb
incl
filds
pushf
in
rclb
xchg
dec
shrb
out
decl
or
jnp
jp
and
inc
ret
xchg
xchg
cmp
incl
clc
shl
ljmp
cmpsl
jnp
testl
jl
addb
and
ja
mov
movsb
sbb
mov
nop
and
das
pop
pop
lcall
cwtl
mov
dec
mov
adc
cwtl
adc
inc
orl
push
std
insb
pop
mov
mov
stc
inc
cmpsl
inc
xchg
ds
jle
and
addr16
lea
dec
call
inc
or
xchg
sbb
or
mov
mov
add
jo
in
adc
xor
add
mov
roll
mov
das
cli
pop
notb
push
loopne
sti
pusha
jbe
popa
mov
imul
lea
jmp
test
xchg
mov
xchg
xor
mov
push
aam
adc
inc
pusha
dec
jae
jnp
loope
cmp
jo
sbb
pop
cmp
add
mov
jg
loope
xchg
mov
aaa
outsb
cld
ret
xlat
in
ja
pop
mov
cli
push
add
lods
add
jg
icebp
mov
pop
add
jne
insb
fmul
lahf
inc
out
pop
cmp
lock
ljmp
jae
pop
mov
std
jle
clc
mov
mov
lods
mov
rorl
or
ss
push
incl
bound
mov
ret
int3
lock
or
push
mov
fisttps
xchg
lds
dec
bound
das
pop
mov
and
mov
sbb
sbb
push
test
pushl
test
dec
push
xorb
sbb
addb
mov
adc
push
loop
adc
sbb
call
lds
xchg
loopne
movsb
xchg
sbb
jmp
movsl
test
jmp
ljmp
xchg
mov
bound
int3
js
lock
lcall
test
imul
dec
and
mov
into
add
ss
or
mov
jno
sub
adc
dec
mov
mov
mov
mov
push
in
mov
sbb
test
rcl
jp
pop
xchg
bound
cmp
fsubs
pop
xchg
pop
movsb
jmp
add
push
fcmovnu
movsb
popf
lea
aaa
loopne
sbb
jg
rcr
sbb
mov
cmp
fsubs
shr
cmp
mov
adc
jmp
fcomp
test
ljmp
fwait
dec
mov
test
ret
out
mov
loop
push
rolb
adc
add
in
clc
insb
rcll
es
scas
nop
sub
sub
incl
or
xchg
pop
cltd
les
mov
adc
es
push
cld
ja
clc
mov
sbb
pop
mov
icebp
call
push
mov
dec
sbb
movsb
cmp
inc
push
push
push
call
lret
push
push
jp
dec
ss
cld
push
and
add
call
call
xchg
lcall
imul
cmp
cmp
lds
adc
push
pushf
je
mov
sar
clc
push
mov
rcrb
jb
nop
stos
scas
push
inc
adc
push
mov
push
mov
push
std
sub
mov
sbb
mov
mov
decl
addb
clc
jecxz
push
orb
dec
insl
jns
mov
pop
mov
jge
fdivs
or
dec
mov
fldt
lret
push
mov
mov
mov
jmp
in
mov
add
jmp
fsubrs
iret
jg
sub
mov
in
andb
dec
addb
and
inc
jo
lret
iret
mov
inc
jmp
ret
fstps
shrl
lret
push
lret
mov
inc
daa
cli
fsts
sub
dec
sbb
call
sbb
and
add
aad
inc
sub
cld
dec
pushf
movsb
xor
pusha
jl
pushl
jge
inc
mov
popf
test
sbb
int3
push
inc
hlt
or
pop
pusha
pop
inc
adc
xchg
and
jmp
push
push
jnp
push
fdivp
jbe
movsl
add
jno
orb
in
jmp
jecxz
push
mov
inc
addl
push
call
lcall
sbb
in
pop
jp
xchg
imul
and
pop
push
cmc
lods
shrl
pushl
pop
in
lret
fsubrl
mov
jle
pusha
or
in
xchg
insl
xchg
lods
lcall
mov
xor
mov
mov
xorb
rol
fisubrs
dec
fistpll
ds
ljmp
in
pop
repz
dec
dec
sti
mov
subl
or
mov
or
ret
mov
inc
inc
popa
pusha
cmp
adc
out
sbb
lcall
lcall
scas
sbb
mov
pop
sbbb
mov
decl
dec
xchg
sub
lcall
les
cmp
dec
adc
aam
imul
mov
inc
fcomip
mov
mov
rolb
xchg
adc
incl
sub
push
and
fisubl
xchg
je
and
and
push
xor
ljmp
push
lock
sub
jmp
int3
pushl
gs
test
cmp
dec
icebp
jecxz
jecxz
or
dec
or
add
movsb
scas
xchg
fstps
test
mov
loope
daa
jns
cltd
dec
imul
push
rcll
lock
test
push
jmp
add
xchg
inc
es
test
sub
inc
dec
xor
fnstenv
testb
push
insl
jg
or
and
push
pusha
test
scas
xchg
cmp
stos
cmp
dec
in
shlb
ljmp
lods
sbb
fwait
in
addr16
mov
scas
pop
call
out
push
ret
lcall
cmp
daa
jno
test
push
sub
nop
xor
call
push
cwtl
ret
inc
fwait
xchg
jo
pop
add
std
call
and
push
xor
mov
and
push
mov
xchg
inc
sub
jg
shr
ljmp
mov
call
cmpsb
push
lcall
mov
and
add
lret
out
or
jb
inc
ljmp
leave
lcall
ds
sbb
xor
ret
les
dec
sbb
call
dec
ljmp
dec
loop
adc
xchg
mov
adcb
test
dec
xchg
mov
stos
and
sarb
sbb
cwtl
out
nop
mov
rorb
pop
icebp
pop
cmp
repnz
lret
and
sub
add
push
enter
repz
mov
pushl
mov
jmp
je
mov
mov
insb
lret
int3
dec
ss
mov
int
ficoml
iret
jmp
sbb
cmp
pushf
not
dec
mov
rcl
adc
mov
jge
fmull
imull
mov
cld
jl
jne
jge
in
int3
arpl
rorl
jg
mov
lcall
dec
loop
sub
adc
push
sub
inc
mov
or
hlt
movsb
cli
pop
insl
mov
popf
mulb
ret
adc
loop
test
out
es
cmpsb
mov
incl
movsb
shlb
jmp
mov
je
sbbl
or
es
cwtl
ret
xor
lcall
decb
cmp
test
addr16
jns
stos
fiadds
aaa
push
ret
or
or
in
push
pushl
jge
push
incl
rorl
xor
push
cwtl
stos
fsubl
jo
add
clc
pushl
sbbb
xchg
mov
cmpsb
ss
shl
pop
icebp
mov
mov
repz
cltd
jg
mov
sbb
pop
stc
and
loop
or
call
mov
insb
in
gs
out
into
mov
lea
popa
add
fmulp
loopne
mov
jnp
je
mov
cli
movsl
mov
and
pop
or
inc
insl
mov
push
or
lret
add
jno
jo
popa
dec
shlb
jmp
ret
inc
addr16
incl
aas
pop
lahf
add
push
xor
push
insl
ljmp
sbb
decl
add
mov
push
mov
fmuls
lcall
pop
mov
jmp
mov
cmp
xchg
ret
test
rcll
adc
int
cld
fisttps
shrb
sahf
add
pusha
rcll
adc
jg
add
rorl
fcmovbe
adc
dec
sub
mov
loop
imul
arpl
les
jmp
loopne
lea
jno
in
sbb
aad
adcb
xchg
cmp
adc
jg
push
std
mov
or
add
fidivrs
inc
sbb
xchg
jae
cmp
xor
push
hlt
mov
xor
inc
cmp
aaa
movsl
aaa
mov
mov
cltd
cmp
cmpsb
inc
add
pop
xor
jmp
stos
ja
sub
mov
addr16
sbb
fs
out
es
jmp
sahf
inc
add
jg
incl
into
popf
cmp
cmp
mov
inc
xor
enter
jmp
inc
rep
jbe
inc
dec
push
roll
fcoms
push
sub
imul
mov
dec
or
outsb
adcb
loop
push
ud2
mov
and
int3
mov
in
pushl
fst
lea
insb
cmpsl
cs
mov
fmulp
push
xchg
sub
cmp
mov
dec
and
pushf
testb
push
out
int3
stos
sub
adc
insb
insb
in
inc
jns
sub
or
js
sti
cmpb
inc
scas
jl
xchg
sub
pop
xor
shrb
add
mov
std
ljmp
or
push
aam
or
jns
incb
lret
cmpsb
in
jnp
scas
call
mov
das
sbb
mov
jmp
incl
testb
xor
xchg
pusha
pop
jb
add
in
jg
inc
sbb
or
ljmp
cmpsb
pushf
sbb
bound
mov
jmp
test
incl
leave
mov
test
dec
mov
subl
xchg
sarb
out
xchg
xchg
xchg
sub
scas
adc
mov
repnz
fwait
pusha
test
or
outsl
mov
jg
pushl
jno
fcoml
sbb
push
mov
nop
call
cmp
inc
in
enter
and
pand
pop
mov
add
jb
loop
sbb
les
mov
subb
add
test
sub
lock
adc
jb
movsb
pop
enter
lcall
popl
sbb
cmp
js
adc
and
or
std
mov
ja
xor
in
cmp
popa
adc
mov
jns
adc
hlt
rclb
imul
stos
mov
imul
movsl
cwtl
loop
mov
in
mov
imul
mov
arpl
test
add
jle
cmp
or
cmp
insl
fwait
lock
rolb
ss
sbb
fsubrs
fwait
add
or
ljmp
jmp
je
xor
fisttpll
movsb
and
lcall
jg
lret
aaa
adc
fsts
test
cmp
inc
push
mov
scas
and
decl
mov
dec
nop
data16
test
mov
dec
inc
dec
hlt
mov
cmp
shrl
sub
and
mov
in
lock
cmp
mov
clc
push
jno
daa
push
and
adcb
aas
pushl
mov
add
adc
lods
lret
jl
push
pusha
das
push
lret
shrb
cld
pushl
add
test
int3
cli
scas
loop
mov
jbe
enter
arpl
inc
call
incl
ret
les
repnz
and
out
ljmp
sar
push
mov
xor
or
decl
pop
pop
arpl
out
dec
incl
imul
inc
inc
adc
gs
xchg
mov
cwtl
jo
popa
cs
add
filds
rcl
mov
xor
sub
ja
adc
dec
mov
push
aas
adc
dec
movl
stos
decl
sbbl
hlt
jp
xor
lahf
sbbl
jg
mov
lock
movsb
and
dec
enter
nop
xlat
mov
pushl
sbb
incl
inc
push
dec
xchg
es
and
xchg
scas
js
out
fcoml
movb
dec
sub
or
mov
xchg
xor
and
dec
fisubrl
addb
nop
fidivs
in
cmpsl
in
call
stc
or
sub
push
ljmp
xor
mov
loopne
insb
or
push
pop
cmpb
xchg
xorb
incl
mov
xchg
sbb
movsb
xchg
sbb
or
cs
jg
incl
in
push
std
into
jb
push
or
movups
or
and
sub
pushl
pop
jg
int3
xchg
pop
add
call
lds
dec
sbb
pop
mov
sbb
cmp
mov
ljmp
inc
adc
in
inc
jl
cmp
mov
or
xchg
outsb
mov
sub
xlat
or
fidivl
out
inc
push
gs
sbb
mov
mov
insl
sub
jmp
data16
fists
test
je
and
jl
test
mov
dec
movsl
test
jne
xchg
in
cmp
test
mov
cmp
call
ds
push
rcll
sahf
jbe
lds
cmp
loopne
pusha
dec
rorl
jp
fstl
testb
push
jb
push
mov
loop
clc
push
lds
adc
inc
sqrtps
shll
mov
in
cs
adc
pop
scas
add
and
push
sbb
add
inc
mov
fsubrs
arpl
sub
add
sub
cld
jmp
loop
popf
cmpsl
xchg
push
and
out
sub
pop
pop
jmp
xor
call
adc
mov
das
sub
hlt
call
mov
xor
inc
cltd
mov
lcall
adc
lcall
add
mov
inc
lock
shll
mov
subl
sar
pop
adc
loop
shl
ljmp
ljmp
xchg
push
data16
lea
adc
mov
cmp
outsb
push
push
mov
mov
inc
outsb
dec
cmp
in
dec
loopne
adc
and
scas
jmp
add
cmpsb
push
data16
push
popa
push
bound
ret
div
clc
adc
push
pop
es
call
xchg
outsl
push
test
stc
cld
xor
inc
push
fmuls
mov
cltd
jb
adc
nop
mov
inc
loop
insb
inc
sbb
mov
test
call
xchg
xchg
fmuls
sub
loopne
pop
pusha
pop
inc
mov
sahf
test
decl
ficompl
mov
push
inc
xchg
xor
gs
das
in
jp
push
jbe
adc
ja
pop
sbb
adcl
dec
movsl
push
ds
lcall
sbb
into
cwtl
shlb
push
jmp
fcomi
add
dec
mov
call
xchg
iret
lcall
mov
out
xlat
xor
or
inc
xor
mov
pop
incl
or
dec
hlt
inc
mov
push
dec
fdivl
adc
jmp
jns
xlat
xlat
cmp
mov
xchg
test
out
idivl
cmc
div
adc
and
xlat
cmpb
movsb
es
pushf
push
clc
filds
mov
es
inc
imul
xchg
mov
push
push
insb
sub
dec
testb
inc
ret
mov
mov
cmc
push
fwait
or
outsl
add
xchg
shrb
pusha
outsb
lds
cmp
in
or
int3
pusha
js
inc
mov
xchg
mov
out
add
inc
pop
xchg
sub
push
mov
lahf
stc
pop
adc
rcrl
clc
lcall
aaa
cmp
adc
test
mov
dec
jnp
fwait
mov
pop
loopne
cltd
in
add
out
lods
hlt
dec
imul
mov
pushl
jnp
fnstcw
cmp
popa
call
ret
dec
vphadduwq
cmpb
adc
xchg
fisubs
out
add
dec
xor
sub
arpl
gs
push
adc
mov
fcomip
ljmp
mov
xchg
jnp
xorb
jns
push
lret
out
mov
rclb
mov
push
push
sub
notb
das
add
repnz
jg
rorb
rorb
sarl
mov
daa
adc
push
incb
ficomps
test
pushl
cmpl
imul
mov
loopne
add
cmc
xor
lcall
xchg
jmp
aaa
pop
cld
sub
pop
std
inc
leave
outsl
lea
incb
push
movsb
mov
lods
int3
ret
cli
je
stos
jne
aaa
std
incl
aam
xor
iret
roll
lret
test
shl
test
sub
adc
jge
imul
mov
jmp
int3
addb
inc
bound
cmp
data16
dec
aam
jg
movsl
fisubrs
aas
lcall
enter
cmpsl
lret
ret
sar
inc
pop
in
bound
mov
mov
mov
pop
test
ja
ja
mov
ficoml
ja
mov
and
mov
ja
dec
mov
movsb
lods
int
and
sbb
push
cmp
les
imul
in
test
loop
repz
jmp
mov
sbb
push
mov
mov
icebp
xchg
scas
dec
lock
outsl
and
mov
shll
dec
js
fwait
mov
pop
aad
out
or
addr16
add
fisubrl
hlt
sub
shlb
xchg
rolb
ret
mov
cwtl
daa
jp
jg
adc
pop
and
scas
test
in
jnp
insl
jnp
adc
aaa
pop
cld
clc
int
jecxz
mov
add
js
sbb
ja
and
jge
dec
movsl
push
test
in
sar
sti
jmp
mov
add
andb
aas
cmpb
or
mov
fwait
cli
test
popf
shrl
test
stos
pop
cmp
repz
pop
clc
mov
mov
cmp
or
jp
lods
and
nop
push
mov
outsl
sub
insb
add
inc
ret
aas
sbb
add
aaa
pop
and
dec
cltd
lret
out
std
test
incl
pop
fwait
mov
mov
sbb
lock
decl
and
mov
or
xlat
std
adc
mov
pushl
aad
aaa
pop
lret
push
hlt
in
pop
dec
xchg
lods
pop
jne
and
ret
xchg
add
mov
jl
mov
sbbb
jg
int3
lods
cmpsl
jle
mov
rol
mov
fdivr
pop
mov
and
xor
stos
ds
sar
cmp
jecxz
imul
cltd
aas
xchg
jmp
stc
arpl
sbb
call
push
int
aad
fwait
shlb
popf
mov
cld
mov
mov
ss
mov
sub
test
cld
jecxz
inc
push
push
inc
out
jle
mov
jg
jl
mov
testb
cmp
pop
fldenv
inc
xor
mov
pushl
add
jecxz
fsubs
push
jecxz
idiv
nop
mov
jo
in
insl
inc
fsts
jno
push
daa
mov
sub
in
push
pop
lods
mov
insb
pop
out
xlat
jecxz
push
mov
mov
les
adc
lods
mov
scas
ja
mov
inc
sbb
sbb
xchg
pop
dec
xchg
lods
sbb
jae
dec
lret
sub
cmp
pop
jns
xor
pop
inc
loope
jle
pushl
sbb
xor
jl
stos
mov
adc
jp
arpl
clc
std
cmp
lcall
ret
pop
jmp
testl
shlb
orl
cld
shll
jnp
add
add
les
pminsw
in
cmp
lcall
cmp
aaa
mov
dec
inc
add
and
shlb
out
jle
fadds
xchg
call
leave
mov
shll
xor
xchg
jg
fwait
pusha
sbbb
repnz
dec
stos
pop
leave
mov
jmp
dec
xchg
sub
adc
call
cmp
out
cmp
jno
xchg
xchg
sub
fwait
loope
jmp
inc
leave
xor
dec
xchg
and
dec
push
or
sub
js
push
nop
jl
scas
aad
mov
pop
mov
mov
or
cltd
negb
iret
jg
xor
mov
xor
repnz
add
call
std
pop
int3
mov
and
cld
js
add
cld
stos
push
icebp
cmp
lcall
out
incl
push
add
out
adc
adc
pop
push
inc
or
scas
pop
lea
mov
lock
xor
cmp
ret
in
inc
stc
lahf
add
dec
add
data16
pushl
and
addl
ret
ja
in
mov
outsl
cmpsb
movsb
cli
imul
aas
call
cltd
inc
fidivrs
push
hlt
fmull
fcomps
pop
jmp
cs
jle
inc
push
add
add
test
lcall
data16
jo
or
dec
xor
pushl
lahf
subb
test
andl
pop
inc
mov
mov
js
jg
mov
sahf
xorl
mov
mov
xorl
addl
fildll
nop
or
jno
sbb
nop
or
lret
decl
and
jb
in
pop
inc
mov
cwtl
fs
mov
xchg
imul
lcall
jge
add
imul
cmpsl
adc
xor
rol
incl
in
inc
or
sbb
mov
inc
sbb
rcrb
in
push
mov
push
incl
in
pop
inc
adc
or
lds
or
ret
test
push
dec
jne
mov
sub
pop
pop
and
xchg
out
xor
inc
ret
xchg
movsb
aad
insb
daa
clc
ja
cli
stos
insb
sbb
insl
push
fs
dec
cmp
jmp
lcall
loopne
daa
out
mov
fcompl
adc
insb
out
push
push
add
fimuls
loope
fsubrl
push
sbb
push
outsb
push
sbb
call
pop
outsb
mov
rclb
xchg
cmp
lock
sti
push
rorl
ja
test
sub
mov
out
enter
pusha
jp
jmp
stos
xchg
repnz
jecxz
mull
fdivl
stos
out
cmpl
push
add
rcrb
jb
sbb
sbb
ljmp
ret
jg
mov
stc
call
cld
mov
push
out
mov
jg
je
sbb
dec
mov
call
jle
lods
neg
push
andl
cltd
je
in
es
add
mov
sahf
cmp
xor
and
fildll
roll
xchg
out
pop
aad
popf
pop
outsb
rcrl
mov
add
inc
test
cmp
mov
test
movsb
mov
sub
lods
sub
ret
push
push
push
popa
inc
adc
adc
adc
mov
mov
cs
lds
pop
out
scas
push
xlat
dec
and
aas
cld
adc
mov
xchg
pop
mov
bound
dec
nop
cs
shlb
mov
and
inc
dec
ljmp
jle
cld
test
ffree
add
sbb
xor
orb
rorb
or
jne
arpl
fidivrl
ljmp
stos
add
pop
xor
fsubrs
out
stc
je
cmp
xchg
add
cmp
clc
jmp
clc
ret
or
test
inc
mov
adc
mov
mov
xchg
lcall
sub
ficoml
decl
stos
loope
adc
pop
xchg
mov
mov
jmp
subl
test
dec
outsb
xor
pushf
fisubl
sub
sub
xor
dec
pop
ljmp
in
je
adc
push
mov
out
mov
xchg
repz
xor
inc
int
pop
rcrb
cmpsb
push
loop
xchg
adc
mov
cmpsb
sbb
mov
loop
xchg
mov
add
jmp
ja
fdivs
sbb
push
out
dec
pop
jno
lret
mov
cmc
cmp
and
fnsave
hlt
call
pop
enter
cmp
jns
mov
out
xchg
lock
sbb
push
pop
sbb
mov
out
cmp
cltd
mov
lahf
clc
pushl
cld
add
inc
add
cmp
or
sbb
ror
pusha
fmull
pop
mov
or
into
shlb
test
lock
loopne
ljmp
divl
xchg
xlat
mov
mov
shrl
cmpsb
push
nop
sbb
xor
pop
jge
mov
bound
test
iret
inc
or
and
aad
ds
and
cmpb
dec
fbld
and
sarl
test
lods
pusha
adc
out
je
push
mov
cmp
decl
int3
push
adc
lods
fwait
push
xor
fcoms
mov
push
mov
clc
inc
aaa
push
or
dec
jl
arpl
scas
sub
sbb
add
add
loope
sbb
dec
idivb
nop
ret
push
daa
leave
nop
push
or
mov
int3
leave
and
je
adc
push
lds
cmp
mov
call
into
sub
adc
jns
in
and
push
adc
icebp
push
sub
mov
jle
mov
mov
enter
pop
into
push
popa
or
or
sub
push
int3
dec
int3
jg
sub
aas
lcall
xchg
sbb
cmp
mov
es
fidivs
xor
cld
push
or
or
inc
sar
mov
outsb
pop
iret
out
or
loopne
std
add
add
iret
jns
push
adc
inc
cmp
pop
inc
leave
mov
add
pop
inc
xchg
pop
imull
pop
sub
fwait
movsb
xchg
movsl
push
and
movsl
lcall
add
adc
jge
xchg
test
rclb
fs
ljmp
pusha
pop
xor
inc
ret
lret
push
fmull
stos
jg
push
aaa
cld
movsb
add
sbb
adc
inc
push
call
std
test
movb
cli
or
ja
stos
dec
decl
xchg
nop
call
add
shrl
stos
cmpsb
and
xchg
das
hlt
ljmp
ror
test
stos
push
frstor
leave
stos
dec
inc
xchg
push
mov
and
inc
lret
outsb
sub
cld
cmp
sbb
dec
ds
cmp
adc
push
pushl
shl
and
pop
fsts
insb
pop
jmp
inc
xchg
or
sahf
and
fdiv
lahf
sti
jo
mov
shll
mov
lcall
ret
fdivrl
cmpsl
or
or
pop
inc
adc
addr16
mov
decl
clc
mov
pop
ficomps
sub
add
xor
lds
inc
or
mov
mov
sub
out
push
movsb
std
int
adc
mov
mov
add
lods
cmp
call
lock
popa
and
in
fmull
pop
or
cmp
enter
adc
mov
inc
ret
fstpl
or
mov
incl
jae
sub
sbb
nop
adc
leave
bound
mov
xchg
and
call
and
fwait
push
sub
and
mov
xchg
mov
aad
test
jmp
fildll
shlb
pusha
leave
push
lods
pop
xchg
gs
stc
js
xchg
mov
out
jns
js
out
icebp
fildll
push
jo
cli
call
cs
lcall
into
andb
push
push
sbb
push
pop
dec
mov
imul
adc
xor
push
add
icebp
cmp
sub
cmpb
sbb
mov
mov
jg
jmp
sub
mov
fwait
xorl
mov
scas
clc
push
jge
loope
and
or
fstps
lcall
dec
mov
mov
test
dec
rcll
movsl
ljmp
ret
and
sub
lret
scas
xor
scas
incl
call
outsl
sub
pop
stos
std
lcall
mov
jmp
inc
out
lock
loope
mov
pop
adc
push
jg
and
and
ret
and
jmp
bnd
mov
leave
push
stc
in
andb
xchg
push
cmp
push
xchg
lds
pop
and
pop
and
pop
xchg
clc
lahf
or
rorb
je
push
incl
dec
movsl
adc
dec
mov
mov
sbb
jmp
sbb
mov
imul
xchg
push
imul
sahf
sbb
add
mov
psrlq
push
jbe
adc
and
pop
jecxz
fistl
sub
pop
pushl
or
imul
js
in
out
lcall
push
push
pusha
push
gs
pextrw
push
dec
enter
inc
popl
jns
and
jmp
sub
cmp
and
sub
outsb
xchg
and
xor
cmp
test
outsb
mov
out
pushl
pusha
sbb
repz
push
jno
or
xor
jne
jo
jae
adcb
cltd
fdiv
pop
in
js
pop
push
or
mov
decl
xor
shll
xchg
lcall
daa
mov
jbe
jno
addb
push
add
adc
jb
bound
sub
scas
cli
dec
push
cmp
sub
mov
mov
outsb
cmp
jmp
lock
dec
xlat
rolb
in
or
jo
lcall
pop
lret
les
xor
pushf
mov
mov
pop
lods
inc
jne
add
mov
sbb
dec
decl
lea
pop
pop
inc
sbb
movsl
imul
xchg
xor
push
pop
loope
mov
cmp
add
cmp
stc
add
incl
inc
sbb
sbb
adc
ljmp
sub
cmc
jne
out
xchg
lods
sub
lds
daa
incl
test
sbb
pushl
aam
add
outsb
xchg
mov
sbb
inc
inc
or
lds
loop
lcall
push
fs
mov
lds
mov
xlat
data16
es
push
stos
insb
stos
add
es
jg
ljmp
mull
repz
je
push
test
xchg
pop
add
out
stos
inc
sub
mov
mov
adc
mov
sbb
ljmp
jle
pop
sbb
xchg
push
sub
jne
xchg
mov
xchg
loope
test
sub
data16
adc
sub
sar
pushl
enter
mov
lret
popf
inc
xor
ljmp
nop
das
mov
imul
mov
adc
incl
push
inc
dec
adc
push
push
xchg
push
repz
sbbb
push
add
nop
cmpsl
out
imul
mov
pop
xor
pop
adc
aas
movsb
xor
add
pushl
inc
dec
push
dec
mov
push
pop
xor
and
adc
loop
xor
jmp
push
aaa
inc
add
add
jbe
sbb
push
inc
in
ljmp
push
xchg
jb
and
push
pop
bound
cmp
mov
outsl
pop
bound
add
incl
and
movsl
pop
arpl
cmp
out
add
cmp
xchg
adc
sbb
repnz
cmp
add
push
xchg
sti
xchg
inc
push
insl
xor
rclb
pushf
mov
jbe
lahf
adc
lods
and
jecxz
xor
test
nop
jbe
xchg
out
add
out
test
cmp
lds
movsl
jne
inc
out
cmpb
fsubl
push
or
add
dec
adc
pop
pop
mov
jne
jmp
iret
shrl
call
and
leave
stc
dec
rol
mov
dec
push
aam
cmpsb
imul
inc
cld
inc
decl
lcall
arpl
and
cmp
test
in
out
adc
add
dec
js
xchg
xor
pop
xor
xchg
pusha
test
ljmp
push
fnstcw
jmp
fldcw
and
inc
cmpsl
xchg
test
pop
add
xchg
sub
call
cmp
ss
mov
push
stos
push
jne
lcall
adc
jmp
pop
jno
ja
lahf
aas
mov
inc
add
xor
jecxz
dec
jns
repnz
lret
jo
inc
adc
test
xor
test
inc
sub
test
in
jo
cld
pop
lock
push
adc
sub
push
sub
ret
inc
adc
aaa
jb
adc
xor
fs
cmc
jmp
xchg
jno
cld
nop
pshufw
shrb
sbb
lcall
sbb
jmp
icebp
xchg
inc
rcl
movsb
xchg
shrl
mov
xor
xchg
sbb
or
sbb
jnp
imul
pop
stos
sbb
mov
add
pop
ja
test
mov
hlt
shll
jmp
sub
push
scas
sbb
mov
loopne
mov
jns
xor
and
cwtl
pusha
leave
push
pop
jg
jb
jno
insb
shrl
bound
subl
push
jecxz
frstor
popf
addr16
subl
inc
dec
inc
and
cmpsl
ss
dec
cld
pushl
pop
pop
data16
popa
adc
jbe
push
in
cltd
outsl
loop
repnz
adc
mov
jp
incl
outsl
mov
sbb
stos
xchg
and
ret
add
and
test
enter
lcall
xchg
mov
lods
sub
sbb
mov
mov
sub
adc
and
cmp
pusha
cli
add
and
stos
or
fwait
inc
aaa
jp
cmp
ljmp
flds
js
push
mov
mov
xor
aaa
insb
sub
sbb
call
jle
add
jg
push
dec
adc
fwait
out
push
in
add
incl
call
out
mov
fistpl
notb
dec
aam
inc
insb
mov
inc
or
lret
xor
pushf
jle
sar
incl
shrl
push
je
and
cmc
jns
adc
xchg
and
inc
pushf
cmpsl
insb
inc
lds
mulb
xor
ljmp
cwtl
add
decl
jnp
ss
mov
xchg
jl
inc
mulb
cli
push
fs
mov
je
push
out
incl
mov
nop
cmp
add
imul
daa
push
push
in
jo
stos
pop
pushl
std
data16
jo
jo
pop
xchg
cwtl
xchg
mov
pushf
mov
and
push
je
jmp
push
mov
fwait
mov
ret
sbb
jg
add
lcall
jo
and
or
icebp
push
cmp
incl
sbbl
and
repz
dec
lock
imul
inc
loope
add
jnp
jmp
mov
mov
push
jae
pop
or
and
movsl
out
inc
sar
add
fwait
enter
shlb
sub
lcall
inc
imul
cs
jmp
fwait
adc
jmp
cmp
cmpsb
ljmp
xor
pushf
cwtl
xchg
and
imulb
js
inc
mov
push
push
cmp
and
in
add
dec
mov
dec
cmp
mov
inc
and
shlb
sbb
in
and
aaa
push
mov
lods
dec
adc
cmp
jo
ja
cmp
xor
pusha
push
aaa
inc
xchg
mov
fistl
cmc
mov
inc
dec
call
cmp
insb
push
pop
mov
loope
lods
cmp
mov
adc
xlat
mov
xchg
outsl
cli
fcomip
cmp
add
test
les
mov
cld
mov
mov
lds
rclb
nop
lcall
mov
mov
mov
push
call
in
mov
xchg
pop
call
cld
inc
movsl
test
js
adc
sbb
mov
or
lods
enter
data16
clc
mov
cwtl
imul
push
cmpsb
add
adc
sti
rcrb
mov
sbb
jmp
xchg
xor
xor
inc
aam
sbb
outsb
hlt
sbb
inc
rolb
int3
push
pop
add
pop
add
push
mov
mov
and
mov
mov
cltd
and
sub
call
lods
and
lret
imul
xchg
ret
jmp
cmp
push
pop
popa
push
mov
mov
cli
push
hlt
mov
movsl
xor
ljmp
lods
jbe
xchg
inc
ss
data16
adc
lcall
adc
and
pop
sbb
push
es
fdiv
mov
adc
adc
jge
pop
xor
jp
cmpsb
arpl
fwait
jle
add
xchg
psubd
and
cmp
lea
pop
orb
lcall
data16
mov
cmp
sub
mov
xor
dec
cmp
lods
cmp
pop
sub
sub
movsl
test
xchg
enter
pop
rcl
das
ds
pop
sbb
pop
js
push
mov
add
outsb
scas
or
add
xor
xor
or
xchg
mov
cmp
xor
jmp
push
xchg
push
fisttpl
jns
mov
mov
insl
jp
lods
xchg
fdivrl
insl
les
dec
lahf
jge
es
jmp
jecxz
adc
mov
test
add
jl
pop
daa
mov
jmp
xchg
push
pushl
xchg
mov
xor
cld
push
lods
ret
mov
lods
ret
push
adc
fbld
push
jae
sub
pop
sbb
push
push
icebp
sub
pop
add
cli
push
mov
int
das
js
xor
cmp
xchg
call
loop
jge
jp
adc
std
lret
cmp
cmpsb
cs
ja
scas
mov
or
std
aas
pushl
inc
fidivl
pop
sbb
push
orb
sbb
shll
ds
fcomip
repnz
cmp
mov
shl
mov
add
push
sub
pushl
js
movsl
xor
mov
inc
xor
cmp
push
insl
sbb
popf
pop
mov
lret
leave
mov
loop
cmp
adc
loopne
and
pop
and
into
xchg
push
xchg
mov
mov
pop
xchg
int3
jnp
out
xor
and
jge
sar
call
call
nop
lods
jle
stos
adc
push
pop
and
call
xor
pop
push
ret
ja
cmp
fildll
xor
arpl
push
adc
imul
pop
mov
add
inc
pusha
push
je
sbb
cmp
rcll
dec
mov
adc
xchg
jg
inc
xor
jge
inc
mov
and
mov
fstl
aas
mov
mov
inc
pop
jmp
cld
mov
stc
imul
aaa
xchg
stc
push
add
mov
ljmp
out
dec
loop
sub
sti
scas
addb
push
add
mov
mov
mov
pushl
xchg
mov
dec
neg
dec
imul
push
ret
inc
or
clc
xor
les
cmp
ret
jbe
mov
cmpsb
pushl
sbb
jbe
pop
arpl
mov
mov
jg
mov
xrelease
daa
out
cmp
push
and
xor
jns
fsubrs
jg
xchg
adc
fdivrp
int
mov
shr
cli
or
mov
jmp
push
ds
repnz
adc
icebp
push
popa
rcr
cmp
cmp
sub
fisubl
fsubrs
mov
sbb
cmp
jl
push
sti
jg
in
mov
out
roll
fadd
sub
ss
jg
push
or
mov
pop
push
xor
cwtl
push
adc
push
aad
movb
pop
push
xor
inc
ret
add
cltd
or
or
mov
dec
add
cli
xor
mov
add
push
movsl
lds
dec
movsb
or
nop
int
push
jno
in
mov
iret
push
in
inc
stc
pop
xchg
jecxz
jle
aam
clc
sar
jg
inc
lock
dec
mov
or
mov
call
mov
dec
mov
lret
xchg
rcl
in
xchg
jmp
insb
pop
mov
sbb
adc
loop
dec
xchg
push
xchg
es
filds
mov
sbb
in
pop
ret
pop
mov
sub
incl
mov
fildll
dec
push
repz
jg
add
xchg
movsb
push
jl
in
fdivs
pop
mov
aaa
into
in
fnstenv
inc
mov
mov
or
dec
mov
sar
pushl
inc
and
jge,pt
jae
roll
dec
mov
mov
movswl
jno
adc
mov
sbb
in
adc
sti
or
ljmp
icebp
in
stc
add
and
cld
rep
add
les
cs
xor
out
xchg
jo
inc
push
out
nop
decl
rorb
shl
push
outsl
mov
icebp
sub
adc
jecxz
mov
decb
negb
nop
lds
inc
xchg
icebp
ret
add
pushf
xchg
cmp
or
lcall
and
adc
sbbb
mov
inc
lea
xor
sub
test
jb
inc
or
adcl
rcl
push
test
das
shlb
dec
xor
mov
xchg
es
mov
jo
iret
xchg
ljmp
test
and
xchg
push
adc
ljmp
and
sub
jne
sub
or
fidivrs
inc
cmp
je
xchg
pop
shrb
mov
jmp
cli
or
pop
rorb
jg
int3
xchg
pushf
cmp
sub
stos
test
test
mov
push
pop
dec
sub
pop
mov
pop
pop
js
mov
lock
add
xor
decl
sub
push
or
lret
sbb
lcall
jb
jb
cs
fisttpl
cmp
sbb
outsb
or
cwtl
dec
test
ljmp
cmp
xchg
mov
imul
ss
xchg
clc
inc
push
cltd
sbb
mov
cmp
pushl
dec
cmp
repz
jecxz
clc
into
jae
in
push
xchg
inc
std
push
int3
out
vandpd
lcall
adc
pop
and
cli
out
clc
cltd
ret
test
ret
loope
and
mov
sbb
ficomps
in
inc
sbb
or
stos
mov
int3
xorb
adc
test
bound
mov
inc
fdivrs
mov
addl
fdivrl
fsubp
fwait
outsl
cmp
das
fmull
lret
pop
mov
xor
ds
adc
and
divl
adcb
dec
leave
or
or
pushl
aam
mov
leave
movsb
and
loopne
pop
inc
push
cli
xor
lcall
pop
cmc
lcall
jb
push
lea
pop
fmull
xchg
lret
stos
jbe
sub
pop
jno
rcrb
icebp
jmp
inc
mov
nop
cmp
lcall
sti
mov
sbb
in
xchg
fcomi
fbstp
and
xor
jae
lods
stos
pop
fsubp
xor
lcall
fistps
imul
insb
push
xor
mov
icebp
int
sbb
out
dec
inc
stos
mov
loopne
xchg
jae
icebp
mov
leave
pusha
js
out
enter
dec
cltd
lret
sahf
adc
mov
pop
pop
loope
mov
and
call
jp
inc
ret
in
call
xchg
int3
push
ret
mov
dec
imul
or
add
jmp
sub
hlt
imull
or
test
lcall
movsb
mov
dec
mov
xchg
rolb
lcall
cld
ljmp
jg
push
loope
push
sahf
in
add
and
dec
call
test
inc
push
adcb
adc
dec
test
in
daa
cmp
outsb
push
jg
fsubl
call
lock
fwait
loop
in
cmp
jbe
and
in
dec
and
call
mov
push
ret
push
mov
dec
mov
or
out
mov
add
clc
stos
pop
mov
out
scas
or
sub
mov
push
cs
ljmp
mov
mov
subl
sub
addr16
out
repz
dec
mov
mov
push
or
jne
ds
push
insb
hlt
inc
shrb
fsubrs
jecxz
xchg
or
into
lds
incl
mov
jne
cmp
sbb
lcall
ret
mov
lret
rclb
mov
xor
and
arpl
inc
sub
push
inc
call
hlt
mov
jle
or
sub
test
and
shlb
sbb
xchg
mov
inc
test
sbb
shlb
js
decb
or
mov
das
sub
mov
cmp
jo
adc
push
mov
cmp
dec
push
mov
incl
push
push
cmp
push
mov
jbe
and
movsl
push
sub
add
lcall
add
gs
shlb
lahf
dec
inc
xor
bound
out
jbe
xchg
jb
ret
xchg
addl
lcall
dec
cs
mov
enter
stos
gs
mov
dec
in
pop
pop
sub
push
repz
lcall
loope
sti
mov
mov
int
or
mov
stos
mov
cmp
push
dec
lcall
jae
icebp
movsb
cmpsl
insb
or
and
pop
or
sub
push
in
add
mov
call
mov
jns
mov
adc
ljmp
xchg
sbb
lock
mov
pop
cld
ret
sbb
lcall
xchg
mov
imul
loopne
inc
pop
subb
mov
sbb
std
cmp
mov
push
sahf
sarl
cmc
movsl
mov
pop
xchg
push
mov
es
jle
popf
sbb
mov
je
mov
inc
add
lret
or
int3
sub
dec
testb
pushf
pusha
or
inc
xlat
aas
test
inc
lods
sub
xor
incl
sbb
pop
pop
sub
add
jb
cwtl
in
add
or
and
pop
xchg
xchg
pop
pushl
jno
jnp
add
bound
das
mov
or
adc
clc
loope
xor
call
fs
addr16
push
sub
std
idivl
mov
sub
pop
xchg
cmpsl
ret
filds
jbe
mov
push
btr
mov
out
clc
ja
es
mov
push
jecxz
inc
or
mov
lcall
loopne
cmp
mov
icebp
in
or
adc
ret
cli
push
jnp
lcall
sub
dec
and
popa
mov
inc
xor
jmp
cwtl
enter
or
ret
and
inc
add
or
mov
cmp
jmp
mov
push
or
inc
int3
movsl
adc
jno
int
push
nop
mov
sarb
xor
add
push
inc
out
sbb
xchg
imul
sub
into
int3
lcall
movsl
lcall
mov
xor
xchg
test
dec
cmp
loope
fsts
mov
xchg
jae
cltd
mov
inc
dec
nop
xchg
xchg
mov
push
ficomps
scas
add
or
aad
fbstp
dec
sub
data16
ja
test
imul
push
add
push
test
xchg
xchg
add
fs
bound
jmp
shll
subl
pop
sub
or
dec
lfence
negl
outsl
cmpsb
mov
sbb
xchg
sarl
mov
add
inc
rcrl
inc
lret
sar
xor
pop
lret
dec
inc
testb
inc
push
loope
test
mov
or
hlt
sbb
push
inc
inc
call
mov
jnp
add
mov
jmp
add
cmpsb
shr
cmp
jb
mov
bound
inc
or
push
les
sub
push
fdivl
xor
test
ljmp
jbe
stos
cltd
sbbl
test
pop
add
mov
jns
incl
scas
push
push
push
xchg
jnp
dec
pop
jae
adc
xchg
lret
mov
xchg
inc
sbb
jmp
fwait
add
loope
pushf
mov
pop
dec
push
loopne
mov
in
stc
lods
js
and
cmp
and
cmp
or
imul
fadds
push
pop
je
mov
cmpsl
dec
fwait
mov
jae
jp
call
loopne
inc
sub
xor
mov
push
fdivl
insb
and
outsl
nop
lcall
jbe
dec
mov
scas
jg
mov
push
in
mov
xor
mov
dec
sbb
sub
sub
xchg
test
idiv
xchg
cmp
add
sbb
adc
movsl
pop
rorb
pop
cli
lea
add
adc
add
push
decl
inc
adc
cmovo
lsl
lock
add
or
xchg
dec
cmp
pop
mov
or
incl
cld
inc
mov
bound
inc
clc
sbb
jge
movsb
xor
add
mov
lret
dec
stos
jmp
mov
jg
int3
adc
lock
push
jl
and
rorl
bound
xchg
nop
sbb
adc
adc
lcall
mov
mov
adc
loope
adc
call
push
stos
nop
mov
adc
icebp
icebp
sub
call
ljmp
push
mov
mov
jg
lock
outsl
push
rcrl
lahf
fistpll
xchg
or
hlt
lods
cltd
test
sub
adc
rcll
movsb
jmp
mov
lods
lret
insl
shlb
out
je
cs
call
sub
sbb
xor
leave
mov
into
cmp
pop
cld
add
arpl
sub
sbb
cmp
or
sahf
pushf
ss
cmp
pop
and
mov
lahf
fs
or
subb
cmp
xchg
ljmp
lods
loop
xor
jne
sbb
mov
mov
push
stos
mov
inc
leave
mov
sub
stos
lods
push
push
inc
lret
push
arpl
inc
loop
inc
sbb
das
rclb
rorl
or
sub
call
xlat
sub
dec
cmpsb
push
sub
sti
or
and
clc
in
cli
cmp
ljmp
lcall
cmp
push
sub
inc
mov
cmp
mov
mov
adcl
pop
enter
repnz
daa
in
mov
hlt
mov
insb
xor
cmp
cli
test
fistpll
aad
js
adc
loope
daa
mov
cs
lcall
adc
leave
fwait
icebp
ret
cmp
fwait
scas
xor
dec
int3
jae
gs
cmp
fcomip
sti
mov
and
add
dec
xchg
mov
jl
stc
dec
dec
cld
inc
add
fcomip
inc
xor
inc
add
jae
adc
jbe
jo
cmpsl
cmp
dec
dec
xchg
or
inc
les
hlt
add
push
adc
fisttps
sbb
mov
dec
std
xor
push
dec
shll
push
cmp
call
loopne
mov
sub
lds
mov
or
or
xorb
ljmp
xor
and
xor
push
sahf
fidivrs
mov
loop
incl
pop
mov
outsb
mov
ja
xchg
into
clc
or
jmp
or
mov
push
fsubrs
mov
lahf
jl
dec
outsb
sub
ficoms
decl
rclb
jl
lahf
cmp
xor
adc
mov
scas
jns
dec
mov
fbld
mov
into
ret
ljmp
clc
incl
dec
sbb
je
cmp
adc
dec
inc
ret
xchg
insb
dec
mull
jmp
sbb
mov
cwtl
mov
in
xchg
sbb
decl
inc
push
xchg
loop
cmpsl
xchg
add
xor
sbb
es
push
or
sub
add
popf
push
jmp
mov
test
in
push
mov
inc
xor
adc
adc
add
jge
and
push
mov
je
in
xor
jecxz
inc
subb
sub
add
xchg
loop
push
fstpt
int3
flds
popf
ret
xchg
dec
int3
and
mov
adc
inc
rorl
or
mov
lahf
mov
mov
incl
in
pinsrw
es
sti
or
jns
xor
movsl
mov
jb
xchg
loopne
into
mov
sub
mov
test
lods
call
aaa
dec
sar
inc
mov
loope
negb
adc
scas
and
decl
push
comiss
lret
push
int
mov
jl
sti
cli
jg
in
iret
addr16
cmp
sub
adc
cmp
cmpsl
sub
outsl
jo
std
dec
stc
jo
xor
add
enter
jg
sbbb
scas
xor
adc
test
or
fs
sub
dec
cmp
ljmp
sbb
mov
imul
adc
push
lret
jae
fldl
mov
pop
hlt
pushf
mov
mov
cmp
jmp
xor
aas
sbb
or
pop
and
push
or
sahf
inc
xchg
sbbb
mov
es
jl
and
inc
mov
enter
mov
xor
or
lcall
pop
or
cmp
aaa
sub
sbb
adc
sbb
in
fnstcw
jnp,pn
pop
testb
mov
call
in
test
inc
test
inc
out
ret
fwait
sbb
mov
cmc
and
insb
iret
push
lds
jle
aaa
dec
cmp
sti
scas
fs
ss
mov
cmp
test
push
outsb
das
lcall
xor
call
xor
mov
mov
inc
mov
js
add
ror
mov
call
scas
or
jmp
jno
xor
shl
mov
xlat
mov
daa
adc
lcall
lds
mov
lcall
pushf
ljmp
adc
test
mov
jl
fistl
push
mov
lahf
shll
push
mov
imul
mov
sub
mov
cmp
bound
es
ljmp
xor
sbb
or
jns
sahf
cli
mov
mov
push
fistpll
fists
fisubl
and
fstpt
jne
ret
or
jge
mov
jns
cmp
inc
popf
dec
cwtl
insl
push
pop
sti
imul
out
add
mov
add
in
cmc
incl
sbb
movsb
rcll
ficoml
pop
add
inc
cmpsb
shll
adc
pusha
stos
int
in
dec
insl
push
scas
cmp
inc
pop
mov
outsb
imul
inc
mov
add
add
or
sbbb
add
push
subb
jle
pop
call
push
ljmp
mov
in
rorb
loope
mov
lcall
mov
dec
lea
popf
pop
xor
xchg
lock
repz
or
leave
sbb
decl
mov
adc
arpl
sub
out
cmp
xor
decl
mov
sbb
or
dec
xchg
mov
imul
cltd
addb
fimuls
in
cmp
sahf
shlb
jmp
ds
fs
xor
push
adc
jo
fisubrs
test
lret
fcomps
sbb
je
test
xor
stos
fstps
aam
decl
or
jmp
jmp
mov
outsb
xor
pop
sub
mov
call
clc
hlt
rdpmc
les
adc
lods
jne
stos
dec
loop
imul
ficompl
stos
mov
ljmp
add
jb
push
mov
pushl
lcall
nop
subl
sub
add
orb
and
lahf
mov
leave
call
mov
bound
adc
mov
mov
xchg
add
adc
push
inc
das
clc
push
mov
ret
lret
jmp
xchg
push
xlat
and
mov
cld
xor
mov
pop
pop
mov
dec
push
sbb
and
in
cs
sub
sub
sub
aam
fdivp
adc
dec
jecxz
negl
push
push
lahf
out
mov
fdivrl
mov
cmp
xorl
ljmp
and
loop
inc
movsl
scas
push
mov
adc
mov
mov
pop
ljmp
and
mov
mov
cmpsb
in
scas
aam
gs
andl
mov
imul
scas
mov
fistpll
arpl
sbb
push
jno
sbb
aad
jnp
ficomps
incl
and
sbb
adcl
in
jo
pushf
add
pop
and
or
push
movsb
xchg
adcl
decl
jnp
dec
xor
pop
adc
add
out
dec
push
inc
aam
cwtl
xchg
add
decl
cmp
pushf
std
fsts
into
int
test
pop
xchg
sbb
inc
or
inc
pop
pop
fdivr
mov
ljmp
ret
ljmp
mov
xchg
push
call
js
int3
add
sub
cmp
pop
jno
xor
in
out
shll
sbbw
inc
and
cli
inc
in
lahf
xchg
or
xor
addr16
push
fucom
mov
popf
cmp
lea
mov
sti
jmp
mov
sbb
cs
sbb
fwait
test
add
frstor
lret
gs
mov
int3
test
jbe
jle
mov
and
pop
insl
or
mov
stos
adc
inc
mov
adc
push
and
xor
lcall
rcrb
xor
jecxz
inc
jg
or
push
and
sbb
fninit
jmp
dec
adc
pop
adc
adc
lret
fldenv
loop
xor
push
inc
sar
sub
repz
mov
sub
mov
int3
xor
outsb
sub
call
aaa
rclb
mov
inc
aas
rcr
adc
loope
cwtl
push
stos
nop
inc
jl
ljmp
leavew
jmp
inc
cmpsb
jnp
mov
sar
push
dec
pusha
xchg
inc
sbb
jmp
ljmp
lock
sub
movsb
or
jne
mov
xor
mov
push
out
push
movswl
sbb
std
lock
stc
push
cmc
dec
icebp
pop
push
pop
into
jbe
jmp
popf
div
aam
jl
lcall
dec
cmp
adc
adc
push
ljmp
fcoms
ds
les
add
loope
inc
xor
ljmp
fcoms
push
pushf
test
std
push
cmp
push
test
xor
insl
stos
push
fsubrl
push
cmp
pushl
daa
mov
das
out
rcrb
aam
aas
push
in
inc
lcall
lds
clc
incl
cmpsl
push
sub
lcall
push
and
addr16
push
movsl
cmpsl
mov
leave
cld
dec
jp
stos
insl
sub
stc
dec
sahf
hlt
inc
sti
xchg
cmpsb
out
xor
dec
cld
decl
add
popa
add
xor
loope
and
pusha
leave
xchg
adc
clc
and
test
clc
mov
xchg
hlt
adc
movsbl
mov
enter
xchg
adcb
jmp
and
sahf
and
shlb
dec
orb
jmp
mov
nop
lea
mov
cmc
stos
xlat
scas
cmp
pop
dec
dec
cmpsb
pop
push
in
fdivl
ja
cmp
jge
push
das
pop
mov
jmp
insb
mov
pop
xlat
mov
mov
fidivrs
sbb
ffree
cwtl
aaa
inc
jle
stc
scas
gs
inc
xchg
loope
jb
xor
xor
sarl
in
fsubrs
int3
mov
pop
incl
adc
mov
dec
loop
shll
out
cld
mov
or
into
ret
jp
cmp
pop
fs
pop
lock
loopne
cli
scas
daa
cmp
repz
and
shr
hlt
jle
sti
mulb
pushf
decl
and
adc
sbb
unpcklps
lcall
add
jge
jno
shlb
add
jge
push
or
rorb
sbb
or
into
cmpl
jb
xchg
mov
lret
call
cld
decl
cmp
push
js
cmp
xlat
rolb
push
loop
daa
mov
rol
pop
or
pusha
inc
or
add
movsl
adc
icebp
xchg
xchg
pusha
scas
add
mov
decl
xchg
inc
add
insb
jbe
rorb
adc
shlb
xchg
inc
sub
adc
daa
xchg
hlt
aam
dec
test
test
push
jl
loop
adc
std
and
mov
xchg
xchg
xchg
or
cs
inc
mov
mov
push
sbbb
test
cmp
xor
mov
inc
movsl
xor
jg
cmp
stos
pop
mov
dec
outsb
cmp
rcrb
sub
mov
inc
xor
pop
pop
shll
jmp
sub
negb
mov
and
fisttps
lcall
add
adc
ret
or
mov
fbstp
scas
mov
loope
inc
pop
js
jmp
mov
pushl
mov
jnp
jmp
call
clc
fldl
or
dec
mov
lcall
iret
pusha
add
push
nop
js
cmp
sbb
adc
lret
shlb
mov
pop
add
push
and
mov
push
push
dec
sub
jmp
shll
pop
je
dec
ret
enter
ss
adc
bound
test
cmp
int3
popl
xlat
add
lret
inc
pop
idivb
push
testb
ljmp
mov
popf
jns
inc
pop
into
ja
loope
mov
sbb
std
pop
xchg
dec
jmp
xchg
clc
or
int
inc
sahf
movsb
in
inc
push
push
adc
gs
lcall
jns
pop
xchg
push
dec
jg
push
test
aam
pushl
lds
cmp
push
data16
mov
mov
add
rorl
pop
mov
popa
adc
int3
outsl
mov
scas
call
shlb
mov
pop
mov
outsb
pop
jmp
and
loopne
mov
push
test
xchg
test
ror
psllw
adc
sti
jmp
and
je
out
stos
mov
ja
mov
fidivs
pusha
push
xchg
popa
not
inc
les
adc
call
inc
or
xor
mov
dec
dec
sub
insb
mov
cli
sbb
push
clc
incl
in
adc
and
push
dec
push
add
repnz
pop
daa
push
andl
addr16
inc
and
rcll
out
fisttps
adc
inc
or
or
jno
repnz
and
inc
clc
rclb
add
sub
decl
decb
adc
loop
xchg
cmp
add
jno
mov
lods
rorb
scas
cli
jg
leave
inc
lret
dec
les
leave
dec
out
out
push
and
xor
incl
adc
sub
inc
pushf
sbb
call
insl
les
call
sub
and
jo
aam
stos
push
scas
mov
incl
jno
scas
push
insb
leave
sbb
aad
pop
in
mov
stc
lcall
cmp
and
pop
lea
hlt
cli
push
sbb
jmp
jne
xor
pusha
push
and
xor
sbb
mov
sub
mov
in
mov
jecxz
sbb
lock
icebp
jecxz
mov
jo
fwait
divb
or
push
cmp
cmp
push
ret
rolb
mov
and
sbb
jbe
dec
jo
xor
xchg
or
adc
lods
inc
push
jl
std
inc
rcrb
roll
stc
mov
push
add
pushf
push
call
js
dec
inc
or
aad
aam
jl
mov
nop
addb
xchg
push
xchg
and
adc
inc
dec
push
insb
sub
fsubrl
mov
add
sbb
mov
and
cmp
inc
jp
test
cmp
cmp
test
jae
enter
pop
mov
push
rorl
xchg
out
and
lahf
inc
ljmp
and
and
push
pop
pushl
push
sahf
pushf
mov
in
ljmp
mov
xchg
jbe
xchg
push
je
int3
outsb
aad
xchg
cmpsb
int3
movsl
scas
sbb
hlt
jg
mov
pop
cmp
cltd
jge
add
int3
or
ret
xchg
jae
je
clc
ljmp
clc
call
outsl
fwait
pop
rcl
add
fmuls
call
outsb
or
add
mov
incl
fldt
dec
stc
pop
loopne
sbb
lahf
clc
xchg
inc
jecxz,pn
dec
into
mov
dec
sar
push
cmp
ljmp
lcall
mov
or
mov
sbb
and
jp
sbb
push
push
inc
adc
pop
push
repnz
inc
add
ljmp
push
or
dec
insb
xlat
cmpsb
mov
icebp
lret
insl
sub
mov
ljmp
dec
adc
jns
rcrl
ja
inc
cmp
xor
sub
mov
les
and
pop
cmp
movsl
push
ss
push
cwtl
push
dec
sbb
lret
lcall
nop
test
jl
sbb
mov
repnz
test
sub
mov
stc
or
mov
movsl
adc
ret
add
fildll
or
xchg
jmp
fxch
out
cwtl
mov
subl
ss
sbb
fwait
jmp
das
xor
inc
cld
mov
adc
popf
push
nop
xchg
jmp
repnz
cmp
xor
out
lahf
or
daa
sahf
push
push
scas
cmp
sbb
cmpb
inc
rolb
mov
ret
out
ds
adc
or
cltd
or
adc
call
mov
fs
sbb
inc
adc
sbb
cmpsl
mov
lods
jecxz
mov
xchg
lods
pop
lahf
dec
jp
adcb
lds
jae
loope
lcall
movsb
push
cmp
fwait
test
aam
stc
std
push
and
fcomp
xor
mov
push
adc
pushl
and
jno
dec
inc
addr16
dec
xchg
or
lods
test
popf
imul
call
rcr
cmp
xchg
pop
mov
cld
out
clc
int3
nop
sbb
lock
mov
aaa
cmp
loope
jns
popa
pushl
push
lods
mov
int
sub
xchg
int3
fsubrs
test
jnp
mov
mov
inc
xchg
clc
or
fldenv
push
call
sti
jae
ja
rcr
repnz
adc
out
cmp
lods
jne
cli
popa
jmp
pop
fcoml
sbb
andl
inc
aaa
mov
clc
leave
testb
cmc
sbb
cmp
or
pusha
push
call
enter
jnp
ffreep
push
push
cmp
lcall
div
xchg
daa
xchg
adc
jno
push
xchg
rcll
movsl
pop
dec
ljmp
cmp
rcrl
cmpsb
pop
sar
aas
mov
cltd
pop
outsl
dec
aaa
test
call
testb
mov
loopne
adc
scas
dec
lock
push
ljmp
fchs
and
scas
mov
mov
pop
shl
mov
incl
mov
out
sbb
pop
out
mov
popa
or
mov
xchg
repz
scas
xchg
mov
pop
movsl
std
cmp
adcb
fstpl
jg
out
fs
cmc
in
jmp
inc
insb
js
sbb
adcl
add
inc
mov
jno
xor
mov
js
inc
ret
call
jo
push
jns
fidivrl
lcall
cmp
jg
call
or
jno
inc
fiaddl
test
adc
jne
iret
leave
mov
fst
fimull
adcl
lea
cmp
shl
xchg
iret
test
jp
pop
jb
push
nop
adc
loop
mov
fisubrs
fwait
decl
lock
fsts
js
cld
push
mov
stc
xor
adc
xlat
call
lcall
fimuls
ljmp
fwait
mov
mov
call
inc
int3
fildl
lock
ljmp
mov
inc
push
sub
rorl
mov
outsl
push
pop
xchg
dec
test
dec
sbb
popa
xchg
lcall
repnz
mov
popa
pusha
fldenv
sub
xchg
test
decl
mov
jmp
mov
inc
pop
xchg
xchg
sahf
in
gs
lret
mov
add
fildll
push
sarb
sbb
add
and
mov
or
jo
pop
mov
sarl
cmc
xchg
jmp
lret
sub
dec
sbb
pop
ja
push
aad
pop
adc
std
fidivrs
stc
or
xchg
jl
xlat
enter
xor
push
outsl
mov
pushl
dec
inc
add
int
push
dec
push
adc
xchg
or
inc
rcll
push
jmp
pop
cli
sub
adc
jmp
inc
pop
add
popa
sbb
and
jg
insb
shll
popa
test
mov
push
push
into
lret
mov
cmc
incl
inc
hlt
int
mov
mov
adc
sahf
nop
sahf
es
push
daa
cli
cli
pop
call
bound
xchg
and
repz
pop
jno
xor
call
xchg
popa
mov
xchg
fstpl
mov
cli
mov
sub
pop
scas
cld
ljmp
push
jbe
ljmp
popf
fstps
sar
cltd
push
pop
adc
lret
cmc
lds
dec
inc
pop
ret
push
sub
jmp
das
add
insb
cmp
jo
mov
lcall
ss
aaa
mov
mov
aaa
adc
push
or
shlb
push
adc
push
outsb
lea
aam
mov
movsl
cmpsb
mov
dec
inc
inc
frstor
fsubl
shlb
aam
fdivr
decl
js
mov
cmp
inc
and
mov
inc
es
and
inc
push
push
fs
fwait
mov
pop
add
jle
fcmovne
pusha
cmp
out
xlat
sbbb
lcall
hlt
sbb
sbb
sbb
mov
fs
dec
enter
xchg
arpl
xchg
dec
xor
movsl
and
jg
dec
shlb
jne
and
and
mov
icebp
stc
xchg
mov
movsl
call
loope
cmpsl
out
clc
incl
sbbl
cmp
and
and
mov
mov
and
fcomps
push
mov
in
fcompl
or
inc
cmpsb
icebp
mov
xchg
pop
pusha
cld
int3
mov
in
call
jb
out
xor
roll
xchg
mov
clc
lret
jg
call
addl
jp
push
out
movb
lock
jecxz
inc
pop
dec
cmp
pusha
jbe
push
dec
ret
sahf
leave
push
sbb
je
mov
rol
dec
and
inc
push
cld
jmp
sbb
dec
movsb
dec
adc
inc
mov
and
inc
mov
or
aaa
cld
adc
mov
dec
mov
dec
push
xchg
call
adc
xchg
push
add
and
jno
out
rolb
inc
cld
lcall
inc
lea
nop
lret
shl
push
dec
movsb
push
bound
movsl
push
xchg
loopne
jg
and
jbe
call
push
insb
lcall
gs
in
sub
mov
enter
ljmp
testb
call
jle
divl
pusha
fcompl
mov
call
sbb
les
in
adc
scas
xor
insb
faddl
xchg
add
scas
pop
and
ficoml
orb
mov
or
push
insb
out
dec
sbb
nop
inc
push
sbb
push
fistpl
in
pushf
jmp
aad
cmp
addb
cmpsl
or
add
mov
cs
test
xor
cld
mov
pushf
cs
add
jne
dec
push
adc
mov
mov
in
mov
cwtl
movsl
xchg
and
shll
pushl
ficompl
jb
dec
push
fadds
pop
dec
lret
cld
and
xchg
inc
mov
and
scas
mov
lcall
dec
je
mov
scas
xor
cmp
adc
repz
push
or
dec
test
inc
or
and
gs
imull
fwait
fwait
hlt
xchg
movsl
pop
mov
fists
mov
scas
nop
mov
and
stos
xchg
sbb
xor
push
sub
jmp
lods
shr
sbb
fwait
xor
jne
xchg
inc
imulb
dec
stc
and
ret
adcb
pop
lock
in
popf
pushw
out
jmp
push
inc
xchg
outsb
outsl
cmc
push
sbb
rorb
ror
cli
decl
mov
fsubl
cmpb
shl
cmp
imul
std
mov
xor
jbe
or
movsb
add
inc
or
cmpl
xor
in
stos
cs
iret
or
pop
mov
in
scas
adc
adc
dec
cmpsb
xchg
adc
loopne
mov
les
push
fcoml
adc
dec
lock
inc
or
jmp
es
sub
call
sub
loop
adc
sbb
mov
sub
daa
jmp
int3
adc
inc
push
or
cmpsb
push
loopne
dec
pmaxub
pushl
jecxz
outsb
jecxz
test
stos
jecxz
xor
xchg
mov
sbb
nop
jb
cs
lcall
fisttps
outsb
sub
cltd
mov
add
fisubrs
rolb
add
mov
incl
sbb
gs
insb
jmp
lods
shll
mov
decl
cld
push
aaa
xchg
and
inc
lods
pop
push
outsl
xor
inc
cmp
sbb
leave
rclb
mov
pushl
xchg
int
outsl
stos
nop
test
lods
jg
mov
incl
je
test
loop
int
aam
jno
iret
xor
inc
push
mov
cmpsl
inc
outsl
sarb
fisttpl
popa
jmp
out
and
test
cmp
push
decl
daa
fstps
inc
ljmp
jecxz
mov
in
roll
in
ljmp
adcl
xor
scas
outsb
repnz
and
jb
push
adc
mov
push
cmpsl
and
dec
sbb
clc
mov
imul
aam
xchg
mov
inc
enter
pop
loope
and
scas
xchg
pop
aad
in
xor
jmp
shrl
gs
lret
cmc
sbb
cmp
lret
fldenv
or
mov
mov
push
sbb
enter
clc
jns
std
cwtl
loopne
in
movsl
and
lock
sar
xlat
dec
fcmovb
enter
nop
loop
pop
push
addl
outsb
call
movsb
enter
lcall
out
xor
push
dec
add
xchg
add
mov
mov
cmp
fisubrl
push
xchg
sub
pushl
shl
xchg
sub
pop
loop
das
inc
dec
adc
fimuls
push
shll
jmp
leave
decl
inc
mov
call
movsb
sbb
jmp
push
add
cmc
mov
test
inc
add
or
sbb
mov
add
hlt
jb
xchg
in
lock
push
rclb
decl
mov
pushf
arpl
sbb
mov
inc
push
fst
and
inc
or
inc
dec
mov
outsb
data16
mov
jno
ds
mov
xchg
sub
and
add
jae
mov
push
mov
xchg
sub
pushl
stos
out
dec
mov
lret
dec
nop
pusha
int
lahf
dec
mov
test
sar
fwait
decb
int3
cmp
jne
jns
push
adc
add
in
sub
jns
incl
dec
arpl
jb
xor
inc
xchg
and
outsb
adc
fmull
jns
loope
fstps
data16
call
or
jg
rorb
push
cli
mov
mov
call
adcl
aam
lea
mov
xlat
les
cmpsb
xchg
or
push
pusha
fdivs
add
es
sbb
lods
push
cmp
and
inc
add
jmp
cmpl
int
mov
mov
dec
xorb
push
xchg
push
gs
pop
and
cmpsl
jl
cmpsb
test
inc
fdiv
push
push
add
gs
ret
jg
int3
jmp
mov
xlat
and
mov
iret
mov
lret
insb
cmp
out
incl
lcall
inc
xor
scas
insb
add
fildl
dec
decl
sbbl
test
jb
dec
jae
aam
adc
push
push
ret
decl
add
push
adcl
jg
stos
add
test
mov
test
aam
push
mov
add
orl
incl
mov
and
push
or
jge
xchg
mov
cmp
push
cmp
into
push
mov
mov
sbb
pop
aaa
mov
push
xorl
fcomp
jb
mov
inc
shr
pop
adc
jmp
xchg
inc
in
or
lcall
lods
stos
ljmp
out
movb
and
push
add
add
and
push
lret
adc
add
out
xlat
dec
jns
or
lahf
pop
in
adc
out
xchg
imul
lcall
sub
dec
cmp
xor
xor
inc
insl
daa
xchg
xor
jo
decl
lea
loope
adcl
bound
xchg
shlb
sar
lcall
sbb
divl
loopne
jge
sbb
je
dec
pushl
dec
xchg
xor
jl
jo
jno
popf
or
movsl
inc
pop
movsb
std
call
jle
jno
jge
shl
test
nop
dec
fdivl
adc
outsl
movl
icebp
ja
push
adcl
and
sbb
call
or
cld
or
cmp
rcr
pop
movsb
push
cmp
sbb
mov
xchg
popa
mov
je
mov
ljmp
mov
aad
mov
sbb
or
xlat
js
call
pop
mov
or
lcall
bound
repnz
ss
gs
push
cmp
jne
jno
test
dec
xchg
jg
stos
mov
insb
dec
jmp
lret
ljmp
stos
inc
mov
mov
aaa
cs
imul
sbb
xsaveopt
pushf
incl
lret
mov
imul
bnd
das
scas
xchg
mov
dec
pop
lcall
jmp
mov
imul
mov
out
pushl
xor
cwtl
lods
mov
jl
dec
test
les
dec
push
pusha
pop
fs
inc
sbb
int3
cwtl
mov
lods
push
push
mov
mov
std
pushl
into
sbb
mov
sub
sbb
call
mov
inc
add
pop
xchg
out
jle
mov
decb
pop
push
daa
and
push
inc
jmp
lcall
out
cli
fsubr
adc
inc
pop
cmp
push
push
pop
add
lret
pop
popa
les
loopne
inc
sbb
pop
stos
cltd
clc
xor
inc
sub
aam
jl
lock
imul
dec
aas
aam
mov
dec
jmp
cmc
mov
lods
xor
mov
adcl
xchg
sub
jl
repz
fisttps
mov
or
mov
push
test
xor
loope
mov
dec
mov
jmp
mov
clc
ret
xlat
lods
ljmp
mov
sbb
in
fbstp
ja
add
je
rep
pop
adc
mov
in
cmp
jmp
mov
cmp
dec
jecxz
xchg
pop
cmovns
in
je
in
call
out
fisttps
ds
jge
sarb
cmp
push
bound
sti
loop
call
rol
cmp
loopne
jo
jmp
mov
cld
mov
add
test
pushf
and
xchg
adc
test
sbbb
cmp
call
push
stos
pushf
cmp
roll
dec
es
mov
jge
jno
add
hlt
mov
inc
enter
icebp
inc
sbb
sub
cmpb
decl
and
imul
pop
pop
mov
fidivrl
add
adc
psrad
dec
xor
mov
add
out
and
enter
xor
test
mov
adc
sub
cli
insb
mov
fisttps
test
jb
mov
add
icebp
dec
add
push
mov
pop
cmp
mov
mov
test
mov
pop
or
dec
push
mov
mov
push
dec
ret
aam
cld
cmp
push
sbbb
dec
std
rclb
mov
fdivrp
ficoml
aaa
ficomps
dec
push
mov
int3
xchg
pop
hlt
lcall
mov
sub
inc
adc
es
dec
sub
aam
or
loopne
pushl
push
fildll
push
mov
and
in
negb
idivl
dec
jecxz
xchg
push
push
add
mov
mov
mov
cmp
lcall
push
psraw
xor
mov
or
or
out
adc
cmp
xchg
stc
mov
xchg
divl
add
fmull
int
dec
sbb
or
mov
call
dec
sbb
add
pop
and
dec
cmp
cmpsl
mov
out
cwtl
pop
jb
and
repnz
insb
dec
xchg
les
lds
stos
dec
leave
es
ljmp
insb
bound
sbb
mov
rorb
ss
pop
mov
dec
les
mov
pop
jmp
mov
shll
aas
int
cmp
mov
mov
or
push
xlat
and
push
cmpsl
rcrb
dec
jnp
add
cmp
xlat
popf
dec
push
test
gs
call
test
push
iret
dec
jecxz
dec
mov
fdivs
cs
mov
fcomip
jbe
jge
addb
mov
jne
popf
subl
xchg
mov
lret
out
fwait
mov
push
outsb
fsubs
and
dec
std
lock
mov
push
and
inc
add
gs
lahf
ret
and
mov
mov
push
or
dec
jno
pop
int3
outsb
adc
xor
aam
push
mov
ret
js
xchg
pushf
mov
inc
and
xchg
jbe
mov
jmp
loope
sbb
jg
sbb
adc
lea
dec
push
jmp
jmp
push
test
jo
or
clc
int3
lock
xor
cmp
mov
fdivs
ds
sbb
mov
imul
call
stos
mov
mov
mov
gs
jl
stos
adc
sub
dec
pop
jmp
pop
movsb
call
cmp
add
xor
jp
insl
push
ja
leave
in
out
clc
mov
xchg
adc
lea
cmpsb
push
out
rcrb
jne
cmpsb
je
fs
sbb
cmp
ljmp
pop
xchg
lret
jg
sbb
pop
outsb
sub
popf
mov
int3
cmp
adc
mov
lcall
pop
cli
in
addr16
add
clc
and
test
xchg
js
push
int3
sti
clc
out
call
mov
sbb
mov
cltd
je
cld
mov
aas
dec
fcom
add
mov
pushf
sbb
pop
data16
jg
push
fldenv
pop
lock
mov
ljmp
xor
inc
repz
dec
inc
pop
ds
dec
push
xor
daa
lods
gs
push
push
xlat
inc
xchg
ss
cwtl
aas
insb
adc
jg
sbb
mov
inc
add
imul
lcall
pop
adc
jns
ds
xor
push
sub
lods
push
sbb
stos
sub
jmp
inc
or
fwait
and
add
call
test
stc
mov
jb
outsb
pop
leave
jg
jnp
and
dec
dec
cmp
mov
je
add
shrl
xchg
pusha
std
or
pushl
stos
movsl
push
in
rcrb
into
xchg
dec
sbb
mov
popa
insb
roll
and
lahf
cmpb
jne
mov
jg
xchg
dec
cltd
or
push
dec
stc
popa
xchg
xchg
fstps
pop
push
aaa
scas
pop
adc
jmp
pop
add
and
xor
incl
mov
mov
cmp
movsl
jle
add
scas
add
enter
add
outsb
adc
inc
cmp
add
lcall
xor
movsb
out
dec
dec
xchg
push
push
jnp
inc
sub
inc
movsb
inc
sbb
mov
fdivrp
push
xchg
enter
out
adc
xchg
sub
and
aas
dec
add
ja
or
out
xor
adc
sbb
push
and
sbb
push
xchg
mov
cmp
mov
cmp
cwtl
shr
jg
stos
outsl
mov
pop
pop
les
dec
popa
int3
hlt
insb
loope
jmp
pop
mov
fs
ret
sub
xchg
mov
xchg
push
outsl
cmc
decl
or
in
pop
stc
cmp
xor
fs
ud0
push
cwtl
les
insb
sub
nop
push
pop
out
popa
sbb
aad
push
rcr
mov
mov
jmp
sahf
jle
xchg
bound
int3
mov
pop
mov
fwait
aas
cmp
pushl
jl
int
pop
repz
dec
pop
sub
xchg
push
arpl
adc
sub
cmp
je
jecxz
mov
or
sub
decb
sbbb
pop
dec
aam
cmp
cmp
ljmp
bnd
test
clc
jp
push
into
lcall
insb
sub
or
push
je
sub
and
and
inc
faddl
dec
lcall
pop
ljmp
add
movsb
std
adc
add
lret
mov
dec
pusha
in
ljmp
or
push
sub
jae
add
mov
ljmp
mov
add
ss
pop
pop
add
or
jmp
daa
sar
cwtl
fldt
jae
popa
mov
clc
pop
sbb
sbb
sub
outsl
cli
inc
push
fadd
dec
mov
jmp
fsubrs
xchg
out
sub
ret
sub
shrb
inc
add
pop
popf
inc
enter
cmp
inc
lcall
cmp
pushl
xor
outsl
insl
insb
popf
jns
add
xchg
jno
mov
pop
or
pushf
cmpb
rorb
pop
cmp
jmp
subl
inc
cmp
jb
pop
push
inc
aaa
imul
push
pop
ljmp
imul
and
loop
loop
mov
xor
loopne
or
call
and
and
push
push
movsl
mov
and
xchg
mov
ret
sbb
xor
sahf
lcall
push
mov
in
js
mov
mov
incl
fwait
push
out
cmpsb
lret
ss
int3
arpl
ja
xchg
mov
inc
loope
imul
adc
mov
decl
out
enter
xchg
aas
cltd
mov
out
mov
pop
mov
push
xor
mov
xor
dec
sub
mov
incl
stos
pop
adc
push
inc
mov
ficoml
cmp
push
mov
pusha
bnd
pusha
in
out
inc
decl
add
and
mov
lret
inc
add
movsl
ljmp
or
mov
in
inc
or
in
xor
mov
icebp
jbe
ret
lock
stos
ret
call
add
ds
mov
and
in
xor
nop
or
jg
inc
dec
enter
xor
les
mov
add
in
les
hlt
cmpsb
mov
stos
or
incl
inc
inc
add
add
mov
lcall
mov
enter
adc
adcb
xchg
mov
sub
mov
int
mov
loop
add
add
dec
xchg
xor
incl
xchg
ljmp
adc
das
xor
setbe
mov
pop
scas
and
jp
cli
loopne
xchg
test
int3
je
je
sarb
xor
and
pop
iret
fldt
sub
imul
dec
in
out
ljmp
in
dec
inc
xchg
or
pop
cmc
dec
cmp
int3
incb
mov
incb
push
popf
fsubrs
xchg
outsb
rcrb
popf
or
inc
or
mov
adc
repz
je
add
rolb
shlb
leave
rclb
and
in
dec
enter
xchg
or
add
outsb
pushl
shlb
ror
dec
clc
rcr
and
decl
movsb
inc
lret
or
xchg
or
push
add
inc
add
xchg
sub
sbb
lret
inc
add
fcmovu
stos
push
push
fs
movsl
lods
sub
push
sbb
aaa
cld
ljmp
fsubr
jb
ret
adc
xor
je
movsl
add
push
pop
add
mov
aam
repnz
xchg
dec
cmp
xchg
sub
mov
std
aaa
cld
scas
outsb
ret
clc
and
dec
out
jbe
dec
xchg
movsl
or
add
adc
mov
ja
outsl
js
push
subb
push
or
xchg
cld
cmpsb
cmpsl
stos
decl
jmp
sub
sahf
add
mov
add
inc
dec
scas
mov
leave
incb
shlb
cmp
sahf
adc
out
out
push
int
int3
jbe
add
pushl
iret
xchg
rcrl
test
fs
dec
add
xor
out
jmp
in
sub
loop
mov
adc
aaa
or
rol
jp
xor
mov
push
ds
pop
enter
enter
or
xchg
dec
not
cmp
out
clc
jmp
jl
xchg
sbb
lock
and
in
lret
and
stos
sub
ljmp
push
mov
push
fsubrs
fsubrs
pop
dec
push
daa
sbb
adc
mov
jo
mov
call
dec
fcmovne
dec
out
rcrl
clc
in
daa
or
sub
jg
decb
mov
pop
fldcw
pop
movsb
sarb
out
lock
or
cmp
sub
hlt
lods
stc
nop
inc
xor
inc
dec
cmp
sub
aaa
dec
push
cmp
xlat
lds
dec
decl
shll
arpl
in
das
xchg
adc
push
ja
sar
sub
loopne
xor
adc
hlt
jmp
push
fcomip
jmp
orb
jmp
rcrl
xor
roll
out
inc
aas
and
call
inc
xchg
mov
inc
xchg
xor
or
call
xor
jb
shr
les
popf
ja
xor
push
int3
dec
jp
cmp
adc
mov
clc
xchg
dec
cmp
cmp
ja
test
shll
adc
xor
add
dec
mov
mov
in
mov
push
sub
push
push
inc
fsub
push
decl
xor
adc
mov
decl
outsb
es
jg
jmp
iret
sub
push
cmp
sub
pop
fmull
push
pop
rorb
sub
push
sbb
shrb
mov
xchg
ret
leave
inc
mov
lods
es
or
clc
sub
mov
pop
dec
xor
aaa
mov
xchg
jg
or
imul
loop
dec
pop
sub
adc
clc
incl
pop
lods
cld
lods
insb
lret
jle
cmc
mov
cld
clc
jo
movsl
pop
add
in
mov
bound
test
add
or
mov
xor
in
mov
repnz
xor
push
jl
push
mov
xor
sbb
jge
jae
cli
and
jmp
lret
pop
push
sub
and
sbb
push
pop
lea
push
enter
icebp
out
in
push
int3
loopne
or
cmp
lock
call
les
movsl
add
decl
cmp
decl
push
aas
xchg
dec
sub
aam
and
mov
sub
and
call
stos
cmp
push
insl
pop
xor
lea
dec
push
in
adc
arpl
mov
mov
inc
xchg
xor
and
orb
cmp
jmp
divl
mov
loop
xchg
repnz
je
xor
in
clc
jmp
jp
or
and
imul
dec
loope
push
out
or
incl
fs
mov
pop
dec
xchg
call
lea
xor
call
xor
jbe
repz
jmp
xchg
je
sbb
int
das
out
mov
jmp
pop
imul
jecxz
fs
lcall
xor
dec
lea
and
gs
lcall
arpl
or
and
arpl
cld
mov
shll
pushf
fs
jo
popf
dec
dec
jg
push
xor
add
dec
inc
sub
lea
and
xlat
decl
icebp
inc
mov
incl
mov
push
imul
mov
fs
dec
add
mov
pop
loop
sub
cmp
negb
mov
fsts
mov
jg
inc
inc
hlt
mov
inc
fcomi
aas
mov
outsb
out
rolb
shrl
call
xchg
bound
test
xchg
push
test
loope
pop
movsl
adc
iret
outsb
jmp
lea
push
inc
jmp
pop
mov
stc
test
mov
sub
shr
ljmp
mov
xchg
cmp
inc
pusha
pop
ret
out
sub
lcall
popa
adc
es
popa
push
jnp
addr16
fsubs
scas
aas
mov
or
fildl
cld
daa
call
divb
push
cmp
mov
movsl
idivl
inc
call
add
lea
fadds
popa
adc
jp
inc
daa
xor
inc
and
test
pop
jne
ret
test
inc
int3
ja
jnp
or
xor
xchg
aad
cli
das
xor
inc
dec
les
out
sbb
add
out
sub
es
mov
insl
hlt
scas
add
fisubl
movsb
or
cli
adc
push
dec
inc
pop
decl
jle
push
repnz
xchg
cmp
mov
incl
or
in
jle
jmp
insl
xor
mov
int3
iret
test
sub
pop
lock
test
pushf
icebp
mov
es
cmc
mov
adc
mov
adc
jg
ljmp
add
loope
es
and
adc
or
add
int3
inc
add
loopne
cs
mov
jmp
push
jns
sub
sbb
pop
arpl
or
popf
scas
bound
loop
jp
mov
mov
pop
or
outsl
imul
cld
xchg
mov
lcall
mov
cli
and
sbb
xor
inc
repz
aaa
mov
into
cmpsb
mov
aaa
dec
fs
call
and
ljmp
in
movsl
cmc
dec
lds
aad
lret
ja
decl
cwtl
loopne
push
ss
mov
cli
dec
fidivs
push
fists
test
and
cmc
pop
fdivr
pop
lock
jg
push
lret
and
test
pop
jne
push
sbb
jmp
loope
jo
bound
fxtract
add
stos
adc
add
or
into
call
adc
push
clc
inc
xchg
jg
notl
clc
xor
xchg
in
xchg
xor
ljmp
fdivl
jecxz
cmp
sbb
ret
or
leave
das
mov
pop
push
ljmp
cmp
pop
mov
fdivs
sub
jmp
xchg
inc
mov
jb
push
xor
jnp
mov
leave
mov
adc
cli
jmp
clc
or
jbe
jecxz
push
jmp
subb
cmp
dec
inc
aam
bound
mov
mov
testb
mov
mov
jmp
imul
or
stos
pushl
dec
in
mov
rcrl
cwtl
xor
inc
add
xchg
pop
fists
sbb
fs
inc
les
and
jg
xor
push
ljmp
scas
sub
push
rorl
movsb
cli
movsb
xor
ljmp
push
imul
or
add
ret
sub
inc
cmp
mov
aam
lea
pusha
aaa
cmp
call
in
inc
inc
out
imul
nop
jecxz
ret
add
pop
mov
or
testb
jecxz
xchg
mov
inc
adc
mov
adc
call
jp
mov
rorl
gs
pop
xlat
enter
incb
insb
push
xchg
lock
lret
jg
mov
orl
dec
xchg
arpl
mov
mov
lcall
sbb
cmpsb
mov
xor
bound
nop
std
push
lcall
xorb
xchg
sbb
out
adc
stos
aaa
pushf
jl
sbb
mov
cli
call
add
call
xchg
test
lods
dec
ret
lods
jns
lret
cld
and
ret
inc
push
add
outsl
jg
dec
xchg
aam
or
arpl
sbb
cmp
scas
inc
mov
adcb
pop
jae
adc
hlt
xchg
test
outsb
lahf
mov
xchg
sarl
nop
add
gs
lret
out
xchg
add
mov
mov
sbb
jmp
inc
lcall
stc
mov
mov
add
shlb
inc
lods
call
scas
mov
sbb
cli
cmp
incl
jle
mov
out
sub
inc
mov
mov
mov
in
movsl
jne
in
pop
push
dec
sub
fwait
mov
dec
jge
mov
xchg
fs
jbe
jg
add
ljmp
es
mov
lret
jns
adc
xor
jmp
loope
incl
repnz
jl
insl
lretw
xchg
imul
inc
call
cld
add
xchg
std
inc
ds
fadds
lcallw
addb
mov
and
adc
or
addb
mov
sbb
xchg
call
push
js
xchg
scas
sbb
test
adc
inc
dec
sbb
cld
outsb
sti
sahf
push
mov
pop
out
push
push
cmp
cld
fisttpll
mov
dec
mov
call
mov
aam
and
xor
mov
cmp
ja
jg
fs
pop
push
mov
mov
pop
movsb
cltd
sti
pop
imul
push
dec
jmp
loop
pop
jnp
jne
mov
mov
bound
xor
int
jmp
outsl
stos
adc
dec
mov
iret
ret
nop
jg
dec
cld
rolb
ret
mov
xor
and
pushl
cwtl
xor
lods
clc
add
or
lcall
xchg
and
jle
mov
in
xchg
sub
mov
test
ljmp
imul
test
jne
shl
adc
mov
pop
jecxz
shlb
dec
xchg
scas
jecxz
jecxz
push
lahf
cmp
cltd
shrl
jbe
repnz
xlat
and
decl
push
add
loope
or
imul
cmp
test
mov
cmpsl
mov
dec
mov
ja
inc
out
loop
sbb
js
mov
lds
add
js
inc
xchg
mov
inc
movsl
add
or
pop
sub
pop
push
cltd
test
push
add
jb
into
clc
enter
incl
push
and
cltd
testb
imul
std
mov
test
popf
shlb
decl
add
shlb
cs
dec
ljmp
roll
mov
mov
xor
or
sub
pop
icebp
mov
jl
sub
add
imul
dec
mov
jg
or
dec
add
lgs
hlt
pusha
sbb
xor
ja
call
xchg
sarb
stos
add
test
pop
sbb
loopne
sbb
imull
cmpsl
jmp
fildl
sbb
inc
push
jns
into
call
and
rolb
xor
inc
mov
push
dec
and
shlb
dec
push
cmp
add
cmp
ljmp
xor
dec
push
jns
dec
je
xchg
xchg
je
test
es
sbb
sbb
inc
push
dec
imul
cli
lcall
cltd
push
cmp
shlb
jl
sbb
inc
std
outsb
or
mov
dec
in
mov
jecxz
in
inc
pop
push
push
push
movsl
aas
roll
repz
clc
sbb
inc
push
adc
cmp
pop
jmp
or
les
inc
cltd
rorl
pop
or
int
push
popa
sbbl
pop
scas
setl
adc
push
jmp
rorb
mov
fxch
push
sbb
mov
and
pop
xorb
adc
sarl
movsb
incl
push
inc
subl
popf
lret
inc
imul
and
fisttpl
test
mov
fidivs
adc
cmp
push
out
jo
ljmp
outsl
mov
add
inc
xchg
sub
adc
and
sbb
aas
push
adc
mov
decl
scas
xchg
call
pop
xchg
mov
pop
mov
daa
mov
sti
cmc
ja
or
and
jg
mov
xor
and
and
push
mov
fidivrl
inc
cmp
mov
xacquire
mov
add
movb
mov
lcall
inc
pop
inc
push
out
adc
pop
leave
movsb
xchg
add
or
lcall
or
xchg
adc
pop
add
mov
imul
out
push
test
js
adc
inc
lcall
fsubl
mov
scas
inc
jns
cs
xchg
test
imul
pop
adc
dec
push
xchg
sub
adc
mov
loope
dec
jp
lea
pop
dec
je
push
lods
bound
push
pop
mov
pop
add
pop
mov
stos
push
xor
popa
mov
out
arpl
insl
in
bound
lcall
mov
jnp
mov
inc
cmp
mov
mov
mov
push
pop
lock
js
fistpl
in
rorl
lret
popf
dec
pusha
sub
sbbb
and
in
sbb
sbb
adc
pop
iret
inc
aaa
add
inc
mov
daa
out
adc
or
push
pushl
cld
inc
and
or
nop
dec
fs
mov
sti
pop
incl
pop
pushl
sbb
sub
lea
xchg
fimull
hlt
cmpsl
imull
inc
jp
mov
icebp
movsb
sub
push
lcall
outsb
dec
inc
fwait
xchg
mov
pop
hlt
call
sbb
frstor
mov
jo
dec
jecxz
lods
fsubs
jp
lock
jmp
sarb
pop
ficoml
mov
or
adc
inc
and
incl
inc
daa
inc
pop
rorl
rorb
xchg
movsb
push
loopne
adc
cs
decl
je
rolb
imul
in
dec
add
pushf
mov
push
in
lcall
add
dec
jnp
insl
mov
test
jo
dec
add
mov
add
or
inc
xor
sub
xchg
mov
lcall
push
jl
sbb
sbb
cmp
fcomip
lods
mov
inc
int3
sar
push
test
xor
jb
mov
xchg
icebp
mov
jns
clc
insb
mov
lcall
je
ficoml
sbb
pop
push
xor
adcb
adcb
jg
and
xchg
dec
or
fadd
cwtl
xchg
cld
call
incl
loope
xchg
mov
dec
xchg
xchg
sbb
mov
popf
call
ret
movsb
xor
insl
dec
jo
rcrl
aad
cmp
inc
lds
ja
inc
mov
arpl
xchg
sbb
xor
and
stc
jg
add
data16
sub
mov
xchg
jecxz
sub
xchg
cli
jmp
in
mov
sub
ret
jmp
jl
xchg
xchg
sub
outsb
pop
and
rorl
cld
mov
mov
dec
icebp
orl
dec
ror
and
pushl
out
into
in
ljmp
sub
cmpsl
ljmp
or
loop
xor
js
or
inc
dec
mov
pushl
leave
push
adc
xchg
mov
ljmp
pop
dec
iret
push
and
data16
inc
and
mov
jns
jns
push
inc
leave
add
jo
and
adc
add
lcall
and
lods
int3
push
sbb
les
xchg
and
adc
gs
clc
wbinvd
pop
stos
fwait
sbb
inc
subl
jg
or
jbe
imul
adc
cmp
sbb
pushl
inc
sub
mov
adc
adc
add
lock
loopne
dec
loop
out
mov
loope
sbbb
mov
adc
pop
mov
mov
js
rcrl
mov
fwait
or
jmp
mov
xor
cwtl
lods
xchg
jbe
adc
pop
jbe
xor
jb
mov
daa
mov
pop
cmpl
mov
and
xchg
push
shl
mov
jmp
gs
jmp
add
test
insb
aas
mov
or
and
imul
jmp
arpl
xchg
sub
ljmp
add
mov
xchg
leave
inc
pusha
mov
ljmp
cmp
test
sti
cwtl
push
lock
sbb
mov
jg
push
mov
lea
cmp
lods
in
test
or
inc
or
cmp
lret
fisubs
push
xchg
cld
adc
and
pop
dec
dec
ljmp
jmp
sti
add
and
fcoms
xchg
aad
sar
fucomi
pop
repz
aas
dec
mov
test
push
push
mov
pushf
addb
dec
rol
sub
icebp
dec
or
test
xchg
mov
decl
aaa
mov
push
push
mov
fisttpl
test
cli
jbe
lcall
cmp
jne
fstpl
scas
pop
leave
push
jmp
nop
dec
push
pushl
call
call
nop
xor
inc
cmp
scas
jl
test
pusha
aad
fidivrs
xchg
mov
lock
xchg
decl
cmp
cmc
ljmp
jl
xor
jl
sbb
jmp
fs
jnp
jl
mov
aaa
dec
fildl
int3
jno
xchg
xor
hlt
adc
fnstcw
cmp
aaa
movsl
roll
std
out
pusha
or
push
push
decl
cmp
push
xor
icebp
inc
imul
stc
divb
pop
ret
repz
ds
xchg
inc
sub
ror
cld
dec
jmp
xchg
dec
cwtl
ss
mov
scas
pop
les
or
pop
cmc
mov
jae
dec
out
scas
xchg
fisubrs
loop
jb
test
ficoml
fldl
fisubs
jmp
and
clc
adc
push
in
das
jecxz
xor
clc
mov
test
mov
lock
mov
ja
jle
ljmp
push
cmp
stc
push
push
mov
lcall
jg
sub
in
push
jge
jb
je
cmp
push
out
mov
jmp
add
lcall
sub
test
pop
cmpxchg
mov
add
aam
cld
adc
mov
decl
pop
fildl
cmp
pop
inc
aas
popa
and
notb
mov
sbb
pop
cmpsb
xchg
xor
fs
add
popa
std
ljmp
jb
in
inc
sbb
pop
jle
push
inc
sbbl
ss
daa
inc
popf
ss
pop
push
push
shll
and
daa
je
jns
cmp
adc
push
or
movsl
xlat
jns
movsl
inc
add
sbb
dec
dec
and
add
mov
mov
stos
xchg
jne
push
pop
outsl
jns
adc
aas
push
inc
sti
mov
mov
sti
notb
and
xchg
jl
xchg
aaa
cli
arpl
jp
call
add
int3
ret
cmpb
test
xor
jmp
jno
in
and
or
adc
outsl
add
mov
mov
adc
cmpb
add
dec
pop
mov
outsb
sbb
dec
imul
cmp
sub
sub
xchg
incl
jb
movsb
cmp
xchg
addr16
adc
push
daa
sbb
mov
sbb
scas
gs
jne
mov
aam
daa
out
jb
sub
push
dec
in
repz
test
pop
push
mov
and
cmc
aas
or
addl
lcall
xchg
push
sbb
pop
adc
ja
aad
call
ljmp
gs
push
pop
nop
pop
pop
add
push
pop
xor
pop
pop
cmp
arpl
incl
shl
ja
enter
pusha
push
imul
push
incl
aad
mov
xchg
and
ljmp
test
push
iret
xchg
sbb
clc
push
push
xchg
testl
jmp
imul
jp
mov
push
dec
aad
add
jp
daa
xchg
mov
jmp
imul
and
xchg
jle
and
sbb
adc
push
dec
adc
incl
fists
mov
jns
add
pop
mov
data16
jg
repnz
rcrb
aaa
out
dec
lcall
loopne
pop
orb
mov
jne
leave
orl
incl
push
sbb
push
sbb
cwtl
dec
adc
xchg
mov
sub
mov
fincstp
push
and
pop
xchg
enter
imul
sbb
xor
pushl
outsl
xor
enter
xor
and
jne
rolb
pushw
xor
pushl
dec
fmuls
and
adc
adc
mov
xor
sar
xchg
cmp
pop
lcall
jmp
push
movsb
ja
sub
and
rclb
stc
insl
int
xchg
pop
in
decl
shlb
sub
sbb
xchg
inc
and
ret
decl
mov
inc
jmp
enter
push
push
shlb
subl
ds
ss
or
jns
dec
cmp
adc
imul
xchg
test
lock
jle
inc
mov
enter
std
jns
mov
push
fwait
mov
pop
xchg
sarb
sub
add
xor
sar
clc
fstpt
scas
add
and
xchg
jae
insb
sub
icebp
data16
xor
lcall
stos
lcall
or
mov
es
shlb
jne
in
and
inc
mov
ljmp
clc
sbb
pushl
inc
lock
mulb
xor
xor
insb
pop
fwait
stos
cmpsb
and
xor
filds
add
and
push
or
cwtl
xchg
xchg
and
mov
sbb
xor
inc
int3
mov
inc
inc
cmp
subb
and
lds
ss
ljmp
add
popf
fldenv
inc
sub
push
rcrl
xchg
sahf
cltd
cwtl
sbb
adc
pop
mov
add
lock
test
inc
movsl
add
jmp
std
sub
idivl
lcall
or
or
inc
pusha
xchg
movsb
xchg
ffree
test
jmp
push
movsb
cmp
sub
and
cmpsl
adc
push
dec
fwait
sbbb
adc
ljmp
add
sbb
push
int
mov
ljmp
sub
cwtl
call
lret
add
inc
sbb
push
cmp
mov
lcall
ljmp
and
lea
data16
jp
and
adc
imul
lret
roll
jne
mov
push
pushl
add
fwait
loop
pop
fs
popa
pushf
and
aaa
cld
pushl
pop
mov
or
aaa
push
add
adc
dec
jecxz
fst
cmpsl
sbb
mull
fcomip
incl
inc
push
outsl
sbb
pop
adc
or
push
pusha
test
and
xchg
dec
movsl
and
test
out
jno
stos
out
ljmp
stos
stos
iret
inc
ss
aam
adc
jge
icebp
stos
lcall
mov
xchg
add
jno
mov
idivl
pop
sub
std
outsl
ljmp
das
push
add
or
jae
push
sub
jg
push
xor
jb
mov
pop
lret
scas
lock
jg
xor
movsb
sub
mov
mov
xorl
es
add
decl
lock
push
ds
adc
jl,pt
jne
imul
jmp
xor
inc
pop
orl
xor
aaa
jp
adc
and
lret
ljmp
jmp
stos
pusha
test
or
xlat
popf
jecxz
dec
ret
aaa
push
sub
in
ljmp
clc
repnz
mov
xchg
sarb
pop
cmc
sti
and
loopne
xchg
jp
add
cmpsl
xor
lods
sbb
sub
in
dec
dec
sti
fwait
sahf
testb
jp
or
stc
jnp
addr16
sub
int
mov
push
clc
das
pop
fimull
jl
hlt
xor
jmp
push
adc
rcr
lock
cmp
xorl
mov
push
jbe
subb
xchg
push
xor
add
push
mov
clc
outsl
and
mov
aaa
push
scas
mov
ret
jo
fbld
jmp
cmp
stc
mov
cltd
dec
inc
jo
test
call
inc
shrb
jne
lea
jbe
fadd
pushl
mov
or
sbb
jmp
jne,pn
adc
pushf
pop
inc
ja
lcall
fwait
or
lods
testb
movsl
dec
mov
insb
sbb
or
xchg
fbld
or
or
xorb
pop
imul
pop
repnz
aad
icebp
xor
lret
test
stos
jbe
mov
and
mov
xor
jp
popa
lret
pop
xor
xor
inc
sbb
push
cmp
push
push
cltd
jl
cld
es
mov
test
cld
aaa
std
cli
add
pop
cld
sub
insb
stos
mov
inc
cld
jl
mov
mov
das
nop
mov
jg
fs
xchg
lret
mov
cmpsl
js
scas
and
push
adc
xchg
fs
jmp
lods
std
incl
xchg
ja
sbb
call
mov
push
int3
push
cmp
out
jbe
xchg
in
test
and
cwtl
xchg
je
roll
inc
lcall
sar
inc
xor
xor
or
cmpl
ljmp
das
cli
jg
inc
aas
jge
and
add
push
cmpsb
sbb
mov
decl
bound
mov
adc
lret
and
adc
adc
test
mov
xchg
add
rcrb
ljmp
and
xor
inc
inc
dec
popf
mov
xchg
xchg
and
decl
mov
mov
adc
pop
and
pop
cmp
cwtl
mov
lcall
push
adc
lods
jnp
outsl
dec
movsl
push
iret
mov
push
int
loope
mov
scas
xchg
ror
ror
or
jno
pop
cmpsb
dec
int3
push
cltd
sbb
jnp
fldenv
dec
mov
jno
gs
inc
mov
ljmp
mov
rcll
dec
scas
into
inc
lea
sub
pop
mov
push
adc
push
lds
pop
mov
nop
push
mov
test
mov
ljmp
nop
gs
shll
lds
fs
pop
sub
pushl
std
les
or
inc
ja
dec
inc
aad
dec
push
xor
or
xchg
incl
sbb
insb
cmp
adc
xor
add
in
dec
lret
orb
lcall
xchg
imul
mov
lods
sbb
xor
dec
shrl
xor
dec
roll
push
sbb
and
jno
std
jbe
adc
movl
push
data16
jo
decl
jbe
sbb
or
adc
dec
mov
pop
into
out
push
jl
ret
mov
mov
xchg
fcom
jle
iret
hlt
mov
mov
incl
ljmp
iret
fs
cwtl
inc
mov
push
dec
lods
mov
sbb
sbb
fwait
or
sub
jo
and
hlt
repnz
adc
incl
fnop
das
mov
cld
jg
adcl
jne
jae
and
or
add
mov
lcall
jle
push
cmp
pop
sbb
mov
cmpsb
dec
in
mov
adc
js
aad
lods
aad
jne
test
cmp
test
ss
xchg
push
adc
shll
sub
lret
sbb
jg
cmp
movsb
and
cmpsb
pop
popa
mov
in
sub
push
sub
jge
inc
adc
pop
mov
rcrl
into
daa
cmp
jl
loopne
ffree
mov
popf
mov
movsl
xchg
fprem1
pop
mov
je
mov
jle
sub
or
iret
mov
jae
push
scas
or
int
mov
sbb
sub
sbb
decl
scas
les
jg
popa
or
jge
shrl
and
adc
sbb
cld
mov
sub
add
add
or
movsl
scas
sbbb
jg
movsl
sub
test
ss
pop
mov
or
push
jae
mov
cmc
add
mov
std
inc
xor
movsb
sub
lods
nop
and
les
clc
mov
inc
lcall
je
adc
adc
mov
mov
xchg
sbb
pop
data16
shlb
stos
in
push
insl
notb
xor
xor
dec
movsb
and
mov
mov
imul
jmp
push
andb
xchg
sbb
dec
inc
test
pop
xchg
es
pslld
stos
mov
fisttpll
ljmp
outsb
adc
in
mov
mov
xchg
xor
mov
frstpm(287
mov
fisubs
pop
out
mov
aaa
data16
scas
pusha
dec
adc
iret
insb
jno
pop
lock
popaw
push
ja
in
movsb
mov
addr16
nop
nopl
dec
incl
incl
and
cmpsl
inc
xor
das
inc
add
xor
ret
in
mov
mov
cmp
adc
jmp
mov
mov
jp
aas
lds
adc
push
cwtl
rcll
lcall
mov
adc
cwtl
push
and
jne
mov
cwtl
adc
push
xorb
cmp
push
popl
dec
pop
rorb
xchg
sarb
xor
dec
cltd
pusha
cmp
add
jg
and
popf
cmp
loop
bndstx
push
ds
jg
in
jl
cmpsb
jp
and
mov
lcall
cmp
shrb
in
cwtl
es
int3
xchg
or
pop
mov
jg
fdivr
add
or
push
jl
jo
test
lret
mov
add
push
mov
and
jmp
and
push
jmp
aas
or
or
jecxz
fwait
lods
jg
push
ret
cmp
fisttpl
sbb
xchg
inc
jnp
js
inc
mov
jns
fcmove
imul
repnz
popf
aas
out
pop
divb
jno
imul
call
add
addr16
sahf
lahf
popa
nop
jmp
pop
jmp
jnp
icebp
dec
ret
push
add
decl
std
jmp
jae
mov
inc
dec
in
mov
pop
or
sub
or
call
das
inc
xchg
andl
mov
mov
mov
sub
cli
inc
test
leave
inc
lea
xchg
mov
dec
and
dec
jmp
inc
push
dec
jnp
rcl
lcall
jmp
xor
lock
and
sbb
mov
sub
in
add
out
sbb
add
mov
inc
adc
mov
repnz
jmp
call
call
push
push
dec
movsl
pop
sahf
and
mov
mov
xor
ljmp
lods
xchg
ret
mov
mov
lods
xchg
jg
add
test
push
inc
sub
push
lcall
movsl
xchg
or
mov
mov
out
inc
scas
mov
pop
and
adc
mov
mov
jl
out
mov
and
sub
call
icebp
aam
pushf
shr
mov
hlt
enter
les
pop
mov
cs
ja
rcr
push
cld
cmpsb
push
outsb
cmp
push
out
pop
cmp
stos
xlat
or
and
xor
and
dec
dec
outsl
movsb
pop
mov
sahf
add
mov
add
lcall
mov
add
push
shlb
pop
push
push
jno
or
and
mov
xchg
test
inc
pushf
jns
push
or
test
icebp
jmp
mov
cs
add
hlt
bound
incl
stos
mov
xchg
sbb
and
push
ret
push
test
rsm
add
dec
loopne
pushl
sub
and
int3
fwait
or
lret
and
push
push
call
mov
sbb
push
cmp
mov
mov
push
add
call
cmp
movsb
xor
mov
sub
mov
dec
leave
xor
incb
sbb
jo
mov
mov
rcll
ljmp
negl
ret
pop
ja
or
xor
imul
jmp
cmpsb
adc
jecxz
and
inc
cmp
and
out
ljmp
pop
jne
mov
ror
and
and
mov
call
dec
cmp
mov
and
repnz
push
dec
and
inc
pusha
xchg
repz
incl
inc
or
loopne
cmp
fs
adc
rolb
xor
orl
sbb
or
ljmp
stc
xchg
cwtl
xchg
scas
loopne
mov
sbb
xchg
sbb
sbb
adc
jge
enter
mov
call
fcmovu
xchg
push
xchg
je
xor
sbb
mov
add
ljmp
mov
mov
pop
in
loop
add
inc
aad
dec
add
popa
fidivs
aam
out
cli
decl
adc
adc
push
sbb
clc
test
cmp
lcall
add
push
es
test
xchg
stos
fistpll
ljmp
pop
mov
dec
es
inc
inc
lret
mov
in
push
mov
lcall
jl
stos
pop
fldl
mov
dec
loope
xchg
jns
orl
pop
dec
test
jl
sbb
sbb
decl
mov
hlt
es
into
je
jo
and
mov
ljmp
jl
out
cmp
stc
leave
out
aad
ljmp
sbb
mov
add
inc
ljmp
incl
arpl
push
sub
adc
add
lock
incl
clc
addr16
xor
push
test
adc
ljmp
sub
or
or
lock
ficoml
mov
les
mov
sbb
or
pushl
stos
fsubrs
test
shlb
popf
out
sub
movsb
push
cli
pop
xchg
scas
push
movsl
sub
ret
mov
cltd
push
roll
inc
popf
or
mov
xchg
jbe
call
xor
inc
nop
xchg
fs
adc
mov
push
test
add
pop
and
decl
movsb
adc
mov
jge
in
mov
dec
mov
mov
cmpsl
and
idiv
enter
fnstcw
out
sub
rcrl
pop
in
xchg
ret
stos
gs
xor
mov
fcos
decl
fs
es
hlt
mov
mov
lcall
ljmp
fcmovne
jnp
jl
cmp
mov
inc
pop
add
push
pop
cld
mov
sbb
or
pushl
cmp
int
lods
arpl
mov
mov
das
clc
and
sbbb
pop
or
orb
icebp
shll
cmovns
decl
call
andb
pusha
dec
pop
jbe
dec
mov
stos
mov
cwtl
sub
fstl
je
test
sub
call
rol
sbb
int3
out
xorl
push
dec
pop
lcall
add
loope
mov
or
fdivrs
dec
gs
jb
cmpsb
stos
imul
lcall
push
cmp
inc
leave
push
add
bound
cmp
or
cmc
enter
dec
dec
dec
imul
mov
stos
sbb
sub
mov
and
mov
scas
xor
pushl
sub
adc
xor
les
insb
xchg
dec
into
inc
das
mov
aad
lcall
jmp
mov
xor
mov
dec
jae
push
aam
insb
mov
ljmp
in
into
xor
dec
hlt
std
push
cmp
xor
jecxz
jmp
aam
ljmp
push
jp
xchg
iret
cmc
mov
cmpsl
es
rclb
in
lahf
push
push
aaa
sub
clc
jns
mov
push
sarb
cli
aas
sub
fdivs
mov
sbb
adc
nop
das
jge
out
mov
sarb
inc
ficompl
sbb
repz
mov
sub
xchg
arpl
mov
adc
movsl
mov
mov
and
mov
sbb
les
jmp
pop
jbe
xchg
fistl
and
mov
adc
xchg
inc
sub
pop
shrb
xor
test
dec
call
call
jge
adc
in
loopne
mov
jno
mov
rclb
cmp
ja
dec
pushl
fisubrs
mov
sbb
stos
lret
ret
bound
out
mov
in
repz
arpl
out
dec
add
mov
xchg
xor
pop
jmp
movsb
dec
loope
out
fmuls
mov
fistps
push
mov
loopne
sar
jle
ss
clc
push
push
add
xchg
dec
ss
fisubrs
fcmovnu
fsubrp
cmpl
clc
shll
int
fcmovnb
xor
pop
mov
cmp
lcall
jmp
mov
std
cmp
in
push
adc
mov
mov
incl
xor
mov
push
gs
mov
or
mov
stos
lods
xchg
dec
and
je
lock
cwtl
sbb
aaa
pop
fcos
fisubl
lcall
mov
push
jns
dec
pop
push
idivl
xchg
adc
and
stc
icebp
adc
popf
sbb
out
ljmp
push
mov
add
pop
aad
dec
fs
adc
decl
inc
ficomps
mov
iret
jae
ffree
fstps
dec
pop
sbb
fwait
jb
inc
clc
call
test
push
pop
fwait
dec
lret
cltd
xchg
pop
xchg
incl
data16
jnp
out
movsl
mov
mov
rcll
or
incl
scas
or
sahf
rcrb
pop
insl
jb
push
lahf
ja
cld
mov
inc
stos
push
mov
jb
mov
xor
mov
add
aaa
inc
addl
aam
loop
jp
and
mov
add
mov
decl
mov
lcall
sub
sti
xor
xchg
scas
loopne
sti
ret
cltd
sar
inc
ret
nop
xor
xchg
pushl
mov
inc
push
pushl
ror
sahf
xchg
cmp
xlat
ret
sahf
xchg
rcrb
jg
sbb
loop
add
and
scas
adc
jl
cltd
and
add
mov
add
adc
decb
cmp
sbb
call
out
mov
pop
xchg
mov
ds
xchg
adc
repz
ret
ds
cmp
mov
pushl
xchg
jnp
shlb
mov
mov
ret
add
xor
xor
cmp
pushl
push
cmp
orb
loopne
or
sub
inc
cmp
pushl
pop
jae
rcr
xchg
cmpsb
cmp
aas
fwait
inc
loop
mov
adc
cmp
stos
andb
jecxz
scas
xor
fmuls
clc
call
mov
xorb
or
sarl
test
adc
pop
cli
scas
pop
pushf
mov
mov
adc
and
add
jg
mov
adc
inc
adc
ss
scas
shll
sbb
and
lcall
sub
and
xchg
xchg
insb
mov
push
cmpsl
sub
sarl
cmp
mov
xor
fs
or
xorl
test
ret
add
jle
sub
mov
sbb
lcall
aam
inc
call
sub
lds
inc
dec
ret
mov
sbb
add
mov
aaa
lods
sbb
jecxz
jo
ljmp
es
mov
subl
pushf
or
sarb
mov
lcall
or
cmpsb
and
aaa
rol
xor
cmp
mov
adc
sub
inc
pop
lret
pop
pop
negl
xor
decb
in
mov
dec
xor
lcall
mov
mov
jo
test
inc
xor
sar
fwait
inc
jmp
cmpsl
push
roll
adc
addb
lcall
add
lock
jmp
mov
jl
les
or
push
cs
cwtl
add
cli
pushl
mov
lods
adc
xchg
std
call
mov
and
xchg
lret
repz
ds
sbb
push
inc
xor
cwtl
testb
inc
sbb
mov
sbb
mov
les
pushf
in
xor
and
dec
sbb
xor
jg,pt
and
cmp
mov
orl
mov
xchg
push
ds
and
push
mov
xor
sar
inc
loop
adc
mov
sub
test
jg
cmp
ret
mov
ret
mov
sub
andl
lcall
in
shrb
in
cmp
and
mov
inc
sbb
incl
sub
jo
int
je
movb
mov
sbb
movsb
mov
mov
icebp
inc
lods
dec
xor
cmp
sub
pop
and
push
fwait
sbb
cmp
push
sub
mov
mov
loopne
and
push
add
mov
ja
jmp
bound
loopne
cmp
loope
and
sahf
sub
xchg
xchg
clc
pop
cmp
mov
jp
cmp
mov
xorb
add
sub
ret
pop
jmp
mov
or
movsb
aad
and
movsb
jns
loop
cmp
decl
fistl
roll
sub
scas
lock
pusha
pushf
add
hlt
or
add
lret
mov
adc
ret
ljmp
test
cmp
inc
cwtl
jl
repz
or
test
scas
mov
adc
pop
test
addb
sub
dec
cld
inc
or
movsb
aas
mov
call
cld
sarb
pushl
inc
sub
pusha
pusha
jb
adc
add
int
fimull
jl
push
push
rolb
mov
loope
pop
cs
xlat
or
je
outsb
cmp
dec
sub
aad
cmp
lcall
sbb
addl
xor
mov
mov
sub
jl
add
ljmp
add
push
cmpb
ret
push
sub
sub
pop
cmp
rorb
lret
lock
mov
mov
sti
adc
mov
scas
jle
outsb
xor
xchg
jns
xor
cmp
push
add
inc
dec
test
mov
and
dec
in
loope
lods
rcll
inc
cmp
sti
or
mov
add
std
adc
inc
jl
mov
lock
jg
add
test
push
fmull
adc
lcall
sub
sub
sub
fisttpll
xor
mov
cmp
cli
mov
dec
stos
mov
add
or
call
pop
ret
clc
dec
loopne
mov
mov
fildll
pop
mov
fdivs
nop
sbb
xor
leave
cld
jg
insl
cld
dec
mov
test
into
lods
insl
cld
shrb
test
call
lods
lea
fs
aad
adc
insl
add
das
push
mov
lds
mov
inc
jns
and
adc
push
sub
fidivrl
inc
fisubl
cld
int
pop
or
mov
pop
mov
aam
leave
notb
fmuls
sbb
incl
push
push
daa
bound
aad
sbb
push
mov
incl
jg
push
rclb
sbb
sarl
mov
je
cld
sbb
pop
cmp
call
lds
mov
out
xor
mov
test
cmp
add
jmp
test
mov
add
xor
arpl
push
dec
pushf
decl
cmp
cmp
scas
mov
and
scas
aam
jbe
mov
mov
sbb
pushl
jl
xlat
cwtl
rorl
lds
sbb
mov
sbb
ret
xor
bound
sub
sarb
scas
repnz
shrb
movsl
jae
call
add
sub
iret
mov
inc
adcl
test
call
adc
mov
xchg
push
xor
pcmpgtd
shlb
jp
orps
mov
push
xor
push
inc
add
push
xor
dec
pop
pop
jecxz
call
call
pop
shlb
loopne
push
enter
out
aam
aam
push
loopne
add
lds
xchg
cmc
inc
mulb
mov
jle
sub
mov
ss
mov
push
push
loop
ljmp
xor
call
xchg
fcomps
jbe
sub
addr16
jmp
sbbb
jno
stos
push
mov
call
incl
mov
inc
lods
mov
jecxz
push
movsb
push
mov
xor
or
nop
aaa
mov
fwait
xchg
pop
aas
lea
mov
xor
add
movsl
mov
imul
adc
outsl
clc
xchg
pop
dec
fcomps
inc
dec
sahf
push
scas
mov
cmp
adc
ljmp
adc
dec
insl
xchg
cmp
mov
hlt
cmp
insl
push
cmpsl
push
in
jmp
mov
xchg
out
je
cmp
jl
adc
pmovmskb
scas
mov
cltd
push
cltd
daa
jnp
jg
sbb
and
ljmp
or
mov
aam
icebp
mov
xor
call
cmp
rcrl
pop
loop
into
das
stos
stc
test
in
enter
mov
inc
xchg
cwtl
dec
or
ljmp
out
repz
and
loope
add
adc
std
mov
pop
jbe
sub
lea
sub
ljmp
xor
dec
and
aaa
pop
lods
or
scas
ljmp
sbb
clc
pushl
mov
out
push
stos
dec
xchg
dec
popa
mov
arpl
call
cmp
shlb
fisttpll
mov
insl
sahf
gs
push
test
addb
ljmp
push
lods
in
and
ficoml
pop
inc
out
movsb
mov
or
xor
js
sub
ljmp
pop
mov
in
push
gs
int3
inc
cld
rolb
xchg
incl
int
shr
sahf
lea
dec
stos
mov
push
cs
into
sbb
inc
jecxz
and
addr16
sbb
add
gs
ss
mov
add
ds
loop
nop
xor
xchg
adc
orb
jno
loopne
sbb
push
lock
dec
in
or
sbb
push
mov
cmc
decl
movsl
insl
jge
and
outsl
hlt
in
and
pop
ljmp
arpl
and
jbe
enter
mov
pop
stos
mov
int
add
sbb
ljmp
xor
das
mov
push
sbb
push
xor
pop
icebp
push
rcll
fiadds
dec
scas
call
mov
mov
push
dec
add
and
js
mov
jo
mov
out
cli
mov
adc
pop
mov
pusha
sub
jo
cmc
leave
sbb
call
sbb
shrb
mov
mov
insl
sub
repz
jmp
inc
jbe
lahf
lods
mov
dec
mov
inc
push
cwtl
or
out
sub
scas
jecxz
mov
cmp
add
enter
push
sbb
cs
clts
ljmp
cs
mov
ljmp
jb
repnz
sub
popa
sub
ljmp
ljmp
sbb
jb
popa
loope
or
bnd
enter
stos
lcall
repz
jb
sub
fcoml
std
in
ret
mov
mov
repnz
jmp
incl
add
jbe
out
or
cwtl
pop
add
in
add
adc
dec
test
std
loop
mov
push
test
lds
jbe
pop
pop
hlt
mov
out
fldenv
xchg
or
sbb
and
cmp
push
std
rcll
sbb
and
mov
fs
lods
xchg
fmull
cmp
lock
inc
aad
sti
inc
insb
fcomip
call
jbe
jmp
or
getsec
pop
insl
jl
mov
sub
jecxz,pt
sub
rcrl
pop
mov
jg
mov
mov
inc
data16
bound
cmpsb
sub
mov
fs
dec
push
out
ja
sub
fucomi
jnp
std
cli
daa
das
mov
xchg
xchg
fmuls
loope
cmpsb
ljmp
bound
dec
push
sbb
push
fists
call
push
jae
addr16
enter
adc
icebp
pop
jecxz
call
push
mov
ja
add
int
jo
dec
stc
and
insb
incl
outsl
and
jae
dec
fimull
lods
hlt
outsb
mov
je
imul
lds
jmp
and
lock
or
and
or
jl
mov
mov
add
xchg
sbb
mov
call
in
xchg
xchg
dec
xchg
mov
xor
push
jle
pop
xor
and
mov
mov
sbb
sbb
bound
mov
jg
xor
addb
inc
es
or
or
stos
cmc
ljmp
dec
cli
test
pop
divb
sub
mov
dec
mov
aad
jo
add
cmpl
mov
mov
scas
cmpb
in
cmp
push
fidivs
push
out
xchg
iret
pushf
cs
ljmp
cmpsb
dec
xchg
push
nop
iret
or
into
sbbb
cmc
mov
add
inc
popa
mov
lcall
fimuls
in
dec
mov
xor
fidivrs
not
out
jge
xlat
mov
std
or
out
sbb
sub
push
orl
jle
test
fwait
sahf
icebp
mov
ljmp
sbb
gs
cmp
jp
test
inc
aam
add
mov
xchg
pop
dec
inc
dec
inc
cmc
add
add
inc
add
cld
ljmp
mov
mov
and
mov
clc
aam
or
adc
incl
adc
ja
mov
adc
nop
arpl
inc
or
les
nop
adcb
jbe
scas
push
dec
or
hlt
or
xadd
aas
test
push
cmpb
jmp
test
or
and
pusha
orl
push
mov
gs
mov
cltd
or
jmp
test
mov
jb
in
jns
pop
out
jge
stc
ret
mov
cmp
and
jmp
sub
popa
xchg
push
dec
sub
xor
aam
dec
dec
cmp
dec
loop
xor
adc
sbb
ds
enter
push
insl
adc
gs
pop
movsl
ljmp
cli
xchg
pop
push
rcrb
rcrl
cmc
adc
cwtl
mov
in
test
leave
es
in
pop
xor
and
les
mov
ljmp
movsb
mov
ja
sar
add
sub
out
data16
rorl
inc
mov
sbb
ret
or
mov
sbb
mov
rolb
fcompl
push
scas
sbb
jns
cld
push
xchg
scas
ret
xor
sbb
movsl
push
icebp
jp
mov
pushf
fidivs
fcomip
add
xchg
rcl
mul
xchg
insl
pop
pusha
enter
push
push
inc
cmp
pushl
int3
mov
loope
sub
loop
aam
divl
mov
or
and
sbb
outsb
mov
mov
and
sbb
xchg
push
arpl
test
out
push
push
jns
inc
ljmp
lcall
push
data16
in
jns
pushf
pop
lret
lods
pusha
fbstp
jns
xchg
test
or
ljmp
call
in
addr16
in
dec
lcall
inc
lcall
mov
push
jo
decl
cmpsl
ss
lods
mov
pop
pop
scas
push
push
lods
ret
imul
mov
mov
push
xlat
mov
aas
imul
mov
in
iret
mov
je
enter
mov
mov
fstps
cmp
push
sbb
fsts
insl
subb
mov
lcall
push
sbb
and
xchg
pushf
std
add
add
push
jbe
mov
pop
decl
les
adc
fwait
add
ds
stc
pop
cmp
jg
mov
mov
mov
lret
mov
movsb
and
push
test
cmp
fxch
cli
aaa
adc
movsb
loop
push
rolb
push
or
push
jo
js
mov
les
mov
les
ret
sbb
push
inc
adc
jo
adc
call
push
insl
jns
daa
mov
mov
mov
sub
add
nop
cmp
decl
or
les
xor
fsub
cmp
test
aaa
add
incl
shrb
inc
imul
call
into
imul
push
inc
in
aam
or
lods
xchg
fwait
mov
pusha
lds
loope
decl
mov
and
out
pop
leave
cmp
stos
lret
pusha
outsb
daa
ljmp
jns
pop
cs
mov
outsb
sub
push
cltd
outsb
sub
cld
mov
inc
add
and
inc
mov
jle
add
xor
pushl
xchg
xchg
scas
jge
jo
clc
mov
rorb
mov
ud0
fwait
pop
mov
lock
pop
mov
add
fcomps
lds
subb
dec
dec
inc
aas
lcall
js,pt
and
pusha
es
lcall
rolb
sbb
cmp
jge
ret
xor
rcll
push
adc
lock
jnp
test
cmp
fisubrl
xchg
decl
incb
mov
cli
pop
push
iret
xor
sbb
movsb
movsl
add
inc
bound
arpl
lcall
in
pop
pushf
sbb
aad
inc
mov
mov
mov
push
in
cmp
call
lahf
cwtl
sbb
cmp
les
adc
mov
jl
dec
popa
jge
and
jne
leave
popf
jne
call
enter
mov
push
xchg
mov
pop
mov
sub
adc
mov
scas
aam
xchg
and
jp
pop
test
dec
mov
movsl
sub
xchg
mov
call
add
pusha
in
lods
bound
imul
xor
fwait
imulb
jp
xchg
lods
mov
cmpsb
pop
push
insl
cwtl
cltd
cmp
jmp
cmpb
clc
xlat
fwait
add
lret
push
into
jp
cmpsl
pop
std
push
ffree
clc
sub
mov
dec
out
adc
into
inc
jl
xor
ja
pusha
pop
aas
adc
fstpt
das
cli
lcall
mov
nop
add
flds
scas
sarb
dec
into
jnp
sbb
add
push
movsl
mov
or
ljmp
popf
push
hlt
lcall
inc
or
mov
sub
insb
pop
hlt
ljmp
out
jecxz
in
and
mov
add
cmpsl
movsb
and
insl
or
lret
mov
and
add
push
inc
add
bound
stos
shll
mov
push
adc
incl
or
or
enter
pop
jo
popf
push
or
in
adc
ljmp
push
int3
pop
arpl
movsl
adcl
cmp
out
lods
xchg
cli
pop
and
mov
fcomip
lds
rcrl
ljmp
or
xchg
fisubrl
stos
jl
cli
jmp
pop
leave
mov
sub
lea
jns
cmp
push
xchg
idivl
inc
push
sbb
push
cmp
scas
ss
fcomps
or
les
popa
mov
mov
mov
scas
rcrl
call
inc
inc
fiadds
mov
inc
aam
andl
mov
xor
mov
fdivs
iret
stos
out
fidivs
and
xor
cmpsb
jle
push
test
xchg
pop
add
hlt
enter
lcall
sub
and
fwait
inc
aam
fldenv
iret
push
ret
xchg
fiaddl
decl
insb
sbb
mov
shll
and
lcall
add
jo
dec
push
cmp
mov
orl
inc
push
or
xor
cmp
xchg
bound
filds
lcall
loope
shrl
sbbl
aam
shlb
cmp
call
inc
push
lret
push
xorb
scas
lcall
mov
sub
fs
lods
inc
and
sub
test
pop
icebp
mov
icebp
aaa
cld
xchg
dec
notl
sbb
jae
mov
int
fisubl
pop
stos
jg
sub
sahf
mov
jns
add
ja
out
dec
outsb
sbb
mov
mov
mov
jg
dec
push
push
int3
jnp
int
into
push
push
out
jmp
dec
sbb
out
insl
std
jg
push
xchg
in
decl
pop
inc
test
sbb
push
jmp
nop
gs
lods
mov
das
and
jns
sub
stos
test
call
ja
inc
mov
and
dec
inc
out
dec
sbb
xchg
cmp
inc
xor
adc
jmp
std
test
xchg
clc
push
jae
inc
shl
js
cmp
lret
sbb
jno
jnp
xchg
dec
jb
neg
push
hlt
dec
movsl
mov
stos
mov
fnsave
ja
jbe
jnp
cld
ljmp
dec
sbb
dec
pusha
sbb
pop
mov
adc
and
sar
jg
orb
int3
xor
xchg
push
cmp
rcrl
lcall
enter
cltd
sub
pop
arpl
pop
bound
popf
aam
fsts
or
add
imul
lcall
sub
or
fildll
fmuls
xor
adc
push
push
cmc
sbb
mov
mov
call
in
fdivrp
std
fisttpll
mov
mov
and
test
xchg
ljmp
adc
dec
jl
popf
enter
xchg
fistl
int
loopne
xchg
add
dec
jg
adc
mov
les
sbb
insb
pushf
mov
add
cmp
cmpsb
jne
aam
int
incl
icebp
pop
or
mov
int
lock
in
inc
and
dec
sbb
andl
rcl
fadd
dec
or
movsl
lea
push
in
inc
sbb
aad
ljmp
inc
or
sbb
pop
xor
mov
rcl
mov
add
inc
out
shlb
es
das
mov
push
adc
push
repnz
add
dec
sub
into
shr
add
pop
push
add
sahf
mov
mov
inc
imul
rorb
mov
mov
je
xor
fnsave
call
sbb
push
xchg
fsub
adc
insb
loopne
cmpsl
mov
stc
in
mov
int3
call
adc
lret
fildll
loopne
popa
jne
rolb
mov
lcall
inc
add
xchg
lock
dec
dec
dec
cmp
adc
movsb
or
sbb
mov
push
xchg
jb
test
sbb
lea
rcrb
mov
xchg
test
mov
sbb
les
or
cmp
xchg
sub
decl
lea
rol
dec
stc
or
orb
add
idivb
mov
adc
and
decb
mov
stos
or
xor
mov
pop
bound
cmp
lea
adc
enter
lcall
inc
lret
mov
xor
pop
cli
pop
cs
mov
push
shrl
sub
and
data16
xchg
add
cmp
push
push
pusha
pop
and
stos
mov
mov
cs
and
and
pusha
mov
loope
push
shl
sub
call
pop
fstpl
dec
sbbb
push
mov
pop
cmp
pushf
les
cmp
jle
mov
std
pslld
aad
call
xchg
xchg
add
sbb
add
inc
scas
int
subps
lds
jle
mov
lds
rolb
fldenv
mov
push
push
vcmppd
inc
xchg
subl
in
cmpb
inc
inc
mov
loope
sub
push
lods
enter
shr
decl
loope
lea
gs
aad
inc
xchg
negb
xor
sarb
add
push
and
movb
sbb
and
push
inc
jmp
mov
cltd
and
roll
xchg
mov
fistl
and
jne
fmull
fs
cld
nop
cli
mov
xchg
jns
sub
add
ljmp
push
jp
xchg
mov
push
fstl
rcr
cmp
sbb
out
push
out
enter
pop
sub
add
adc
dec
mov
sbb
fcoml
pushf
fstps
jg
jg
dec
fimull
pop
iret
mov
cltd
ds
insb
dec
rolb
mov
jmp
in
test
pop
lret
lock
out
std
sbb
adc
sbb
mov
fdivrs
push
leave
sar
mov
rorl
push
jne
add
ds
add
adc
jbe
out
lds
andb
test
mov
xchg
pop
mov
add
pop
or
pop
ljmp
decl
out
out
push
cs
mov
dec
dec
bnd
add
and
jp
mov
pop
push
adc
ljmp
or
push
and
pop
dec
pop
pushf
jl
call
lea
cmc
xchg
lahf
xchg
movsb
jge
push
fadds
loopne
xor
call
test
add
jg
rolb
inc
mov
out
inc
call
push
xchg
int
and
push
hlt
ljmp
addl
icebp
push
pusha
pop
xor
aam
push
mov
jmp
sub
add
jmp
insl
test
fs
hlt
sbb
xor
or
arpl
xchg
aad
fisubl
insl
shlb
in
push
cmp
jno
xchg
es
call
arpl
jecxz
xor
push
mov
dec
or
lcall
mov
push
cmp
inc
xchg
and
insl
fs
push
popf
xlat
dec
xor
or
mov
mov
push
dec
fimull
sbb
dec
lods
cs
jmp
jl
sahf
push
je
add
push
subl
jg
add
inc
jp
fistpl
inc
scas
js
idiv
mov
daa
ficoml
nop
stos
stc
mov
test
jg
dec
mov
cmc
shrl
push
les
shl
jle
and
cmpsb
push
adc
loop
pop
mov
fistpll
sarl
mov
xchg
mov
cmpsb
shll
bound
xor
hlt
into
jb
in
pushf
dec
jmp
loope
xchg
push
lcall
mov
pop
aad
js
std
inc
mov
mov
jns
imul
xchg
das
addr16
adc
dec
imul
popf
std
and
jo
inc
inc
aas
mov
jg
test
or
xchg
fsubs
pop
pusha
adc
jge
inc
adc
cltd
fstl
jo
adc
daa
inc
xor
jecxz
inc
pushf
jg
mov
mov
mov
inc
add
mov
mov
stos
push
rcll
jmp
int
and
push
rolb
push
rol
outsl
jmp
or
fsubrs
inc
in
mov
out
call
movsl
rol
jb
mov
and
sahf
xchg
pushf
pop
push
inc
and
lea
incl
fistpl
adc
mulb
pop
mov
lret
imul
dec
test
into
and
jg
out
les
test
lods
or
dec
lock
dec
pusha
and
out
sbb
out
xor
xor
xor
push
and
sbb
jns
cmp
and
or
es
cmc
cwtl
or
inc
push
rol
xor
std
outsl
adc
dec
push
push
insb
ret
cmp
mov
popf
fimuls
mov
adc
sbb
js
jbe
pusha
lods
cmpsl
ss
mov
fbld
pop
lock
add
add
and
pop
lds
push
scas
mov
push
jnp
xchg
xchg
dec
pop
cmc
or
inc
in
stos
lret
mov
call
add
push
insb
cmp
jl
fcomip
ja
cmp
pop
or
insb
in
loope
sbb
icebp
adc
add
js
dec
inc
xchg
fisttpl
dec
xor
out
push
mov
xchg
fbld
jp
les
test
test
mov
sbb
out
cli
jmp
xchg
or
jle
sbb
popf
stos
outsb
push
hlt
pop
scas
dec
ljmp
je
and
sbb
and
ljmp
or
fs
inc
and
hlt
sbb
mov
adc
xor
inc
xor
pop
iret
jno
push
push
aam
arpl
push
les
push
addr16
clc
jbe
mov
pop
cltd
cmp
dec
inc
xor
sbbl
pop
test
pop
insb
sbb
cld
or
ficoml
sahf
push
cmpsl
jb
fldt
or
mov
incl
push
incl
and
notb
es
xchg
inc
lahf
xchg
jp
fdivrl
adcb
push
adc
xchg
nop
or
push
aaa
lret
cmpsl
stos
jbe
jg
mov
fidivrs
push
js
pop
or
in
push
mov
push
ds
pop
negl
out
pop
fidivs
nop
mov
fdivr
incl
inc
pop
inc
dec
pusha
add
test
adc
cs
stos
inc
lahf
testl
push
jmp
pop
xor
and
mov
mov
jmp
outsb
icebp
pop
aad
movsb
pop
cltd
mov
ljmp
mov
dec
mov
lcall
rorl
push
dec
lods
add
je
adc
and
pop
lods
rcrl
incl
sti
mull
adc
add
lea
enter
mov
aas
inc
aaa
push
es
jle
call
and
clc
jp
ss
test
pusha
push
jmp
mov
notl
mov
jne
jno
inc
xor
repnz
jb
repnz
mov
cmpsb
divb
pop
clc
ljmp
xor
jbe
inc
and
push
jae
pop
xor
push
aas
imul
call
or
dec
jp
cmp
xchg
jae
test
mov
inc
inc
mov
loope
out
ss
fstp
or
inc
or
push
cmc
loope
adc
fistps
sbb
xor
adc
shrl
jnp
mov
mov
outsb
std
cwtl
enter
pushl
mov
scas
loope
push
dec
and
fstps
stos
adc
pushl
jns
lods
pop
jecxz
jp
outsb
bound
push
add
frstor
xor
imul
push
mov
push
filds
fs
mov
incl
lret
xor
mov
push
dec
or
fdivrs
push
xchg
mov
mov
sub
fcoml
ret
shrl
pop
cmp
mov
mov
sub
loopne
pop
incl
xchg
outsl
loopne
int3
cld
cmp
jmp
or
sbb
mov
enter
dec
dec
add
rol
xchg
and
or
rcll
sbb
mov
mov
outsb
nop
pop
jae
pop
or
hlt
mov
and
sti
mov
ffree
jmp
call
mov
imulb
loope
push
stos
addb
loopne
rorb
or
leave
and
jecxz
lret
adc
adc
ja
pushl
aad
popa
push
les
clc
inc
vandnps
add
cwtl
pusha
jno
mov
loop
inc
sub
cmpb
jno
mov
ja
cmp
sarb
add
clc
push
cmp
xchg
add
mov
sub
mov
jg
xchg
stos
sbb
mov
les
fstpl
pop
push
inc
sbb
pop
cmpsl
inc
std
pushl
push
cmp
jg
sbb
mov
mov
cmp
int3
scas
mov
mov
cmp
ljmp
clc
adc
mov
out
mov
cmp
push
inc
mov
mov
jbe
and
sbb
dec
sbb
dec
jnp
in
push
frstpm(287
push
nop
imul
cli
addr16
es
adc
es
shll
push
daa
mov
fs
lcall
add
test
imul
leave
test
frstor
push
adc
adc
loop
idiv
decl
int3
push
sbb
sbb
sbb
sbb
inc
sbb
cli
or
inc
sbb
or
jmp
lcall
stc
scas
lahf
inc
inc
cmp
jmp
mov
inc
inc
hlt
mov
clc
rolb
adc
adc
inc
xor
mov
lcall
popa
inc
leave
xchg
xchg
dec
xorb
push
xchg
pop
mov
dec
fwait
pop
es
jmp
ja
add
imul
jbe
add
mov
xor
je
dec
cltd
xchg
scas
into
lods
cmp
in
xchg
das
mov
fs
push
jmp
cmp
inc
cvttps2pi
jge
jecxz
pop
push
pminsw
mov
mov
stc
into
cmpb
sar
jo
mov
jo
push
and
pushl
sbb
adc
int3
dec
test
sbb
bound
shlw
mov
lock
pushl
mov
adc
ficompl
inc
shlb
fstl
out
cmp
jmp
scas
add
lret
subl
jne
sbb
jo
fisttps
pop
mov
mov
and
repnz
jno
lcall
push
cld
mov
mov
add
cld
div
out
pop
aam
or
incl
add
or
into
fs
push
cmp
xor
aam
scas
pusha
inc
insl
or
add
cmp
cmc
fisubrs
daa
lahf
es
sub
loop
orb
jbe
mov
inc
adc
add
mov
lods
lea
pushl
inc
js
push
enter
sub
movl
in
ljmp
mov
ljmp
leave
nop
add
decl
mov
cltd
cld
insb
dec
and
mov
mov
cmc
jo
mov
push
mov
in
movsb
sbb
xorb
pop
jecxz
xor
pusha
mov
mov
push
dec
xor
dec
xchg
mov
push
lods
call
mov
lcall
lcall
mov
push
push
mov
xchg
jmp
and
xor
lcall
scas
mov
nop
mov
mov
cli
adc
insl
push
and
cmpsl
or
incl
mov
rcll
int
insl
pop
lret
push
xor
cmp
sar
call
inc
in
cmp
cmp
xchg
or
cmp
pop
in
arpl
cmp
nop
sbb
out
adc
dec
pop
sarl
fildll
sub
fdivl
sub
cmp
in
scas
cmp
add
add
xchg
movsl
incl
xor
mov
cmpl
ljmp
jmp
jb
loope
pop
and
ret
sbb
adc
and
icebp
inc
mov
inc
or
adc
pop
xchg
out
movsb
or
mov
and
dec
dec
dec
xchg
stos
fcomip
pop
cmp
cmc
mov
push
bound
rcll
cmc
sub
lret
in
pop
sub
xlat
pop
inc
and
sbbb
das
ficomps
inc
loope
jmp
es
outsb
std
int3
or
mov
ljmp
cmpsb
push
dec
std
test
dec
push
enter
push
mov
cmp
fcoms
or
or
sub
mov
push
pop
xorl
int3
sub
xor
mov
pop
fs
jmp
adc
xchg
popa
addr16
jl
insb
mov
cmp
lods
iret
outsl
dec
cmp
sti
push
mov
sti
fsubl
sub
or
sub
pushl
sbb
sub
fs
ljmp
fmull
rol
hlt
cltd
fadds
and
mov
xchg
cmp
dec
lock
or
dec
xchg
xchg
hlt
pop
lock
cwtl
inc
add
or
or
out
shlb
shr
inc
ja
ret
inc
jl
or
lock
xor
fcmovbe
xchg
jecxz
js
lea
or
and
dec
into
shll
mov
ljmp
enter
inc
sub
push
sbb
add
inc
add
ss
fs
xchg
push
jbe
or
ss
and
add
mov
xor
ja
mov
push
dec
lods
inc
cmp
mov
mov
jmp
out
aaa
cmp
insl
stos
sub
or
xchg
enter
sub
add
and
jg
ljmp
pop
mov
inc
jno
dec
cld
pop
addr16
mov
mov
pop
add
lcall
pusha
fldl
lods
imul
pop
icebp
test
push
addb
and
mov
jmp
cmp
lds
out
lea
cmp
ror
outsl
mov
adc
cmp
leave
and
out
clc
fdiv
mov
xchg
shlb
adc
gs
ljmp
push
imul
add
add
lock
mov
out
jg
fcmovu
jle
ret
mov
add
adc
fcoms
pop
and
data16
cli
add
mov
loopne
push
mov
mov
cmpsb
dec
mov
loope
sub
and
das
stos
jmp
and
dec
ficompl
xchg
lds
inc
and
fisubl
test
and
ljmp
adc
sub
dec
mov
test
sub
fwait
call
push
and
and
jmp
jo
or
pop
pushf
call
and
inc
xchg
dec
and
sub
inc
sbb
loopne
rclb
ror
ds
shlb
nop
mov
test
std
inc
sub
and
pop
fucom
outsb
xchg
mov
test
xchg
mov
jecxz
bound
push
sahf
sbb
pop
or
movsl
add
sub
inc
or
fidivl
mov
decl
pop
jg
pop
mov
dec
daa
pop
arpl
lcall
es
adc
or
fistpll
test
inc
lcall
inc
mov
mov
not
pop
in
jl
or
test
das
jmp
inc
loop
jmp
mov
fxch
push
out
mov
add
mov
dec
arpl
hlt
dec
test
out
jp
cmp
xchg
pop
ds
add
dec
decl
dec
or
cli
mov
push
sbb
es
ljmp
sbb
inc
mov
cmc
lods
mov
rcrl
xchg
pushl
nop
adc
mov
lret
lock
dec
out
scas
jo
jno
jmp
mov
cltd
arpl
aad
jae
lods
or
insl
mov
nop
xchg
xchg
pop
mov
imul
das
shrb
push
stos
les
push
jl
out
push
cmp
lea
outsb
sbb
mov
push
xchg
jg
sub
sbb
mov
fcoms
mov
aad
push
adc
xor
pop
mov
pushl
mov
xorl
inc
fnstcw
xchg
repnz
fwait
aam
dec
jg
sub
push
and
out
shrb
mov
lcall
add
xor
add
rcrl
cs
mov
add
pop
mov
out
inc
xor
fwait
pop
jg
push
pop
jle
inc
add
mov
push
stc
mov
loope
loope
roll
adc
add
and
mov
dec
decl
imul
ret
xchg
icebp
xor
push
add
dec
mov
jle
xchg
shlb
lcall
or
xchg
add
movsl
sbb
xchg
dec
je
sarl
test
cmpsl
insl
rorb
fisubs
push
mov
or
jmp
orl
fmul
jg
ja
push
xchg
dec
sbb
cmp
cmp
lock
xlat
dec
jp
loopne
pop
imul
jmp
lret
jne
repnz
or
cs
fsubrl
push
adc
xchg
pop
jmp
fiadds
xlat
mov
sub
pop
dec
jnp
mov
sahf
inc
andl
les
cli
mov
cli
mov
insl
insb
inc
incl
cld
sub
adc
ljmp
xor
lret
loop
xor
ljmp
andb
cmpsb
mov
das
clc
cmc
das
or
xchg
pusha
or
push
daa
mov
or
jg
stos
jo
adc
inc
lds
push
shl
loop
add
pop
test
or
xor
sub
lcall
imul
sub
add
ljmp
pushl
mov
and
xchg
mov
and
sub
jae
and
popf
push
popf
mov
and
ret
mov
scas
rcrb
call
fildl
and
adc
lods
in
data16
dec
jmp
sar
push
add
inc
inc
idivl
pop
adc
in
out
and
dec
stos
aas
cmp
incl
jmp
loopne
aad
lahf
stc
pop
les
add
popa
in
push
xchg
orb
mov
mov
mov
popf
mov
pushl
arpl
and
enter
movsl
jge
or
ret
movsb
jmp
fdivr
xchg
sub
subb
pushf
out
incl
out
ds
cld
into
mov
lock
dec
cmp
and
call
stos
cmpsb
sub
jp
les
rcl
dec
or
std
push
jecxz
addr16
inc
push
rolb
mov
call
jg
sub
rcrb
int3
jmp
stos
movsb
test
and
shll
mov
mov
out
xor
xadd
pop
dec
shrb
mov
or
sub
loopne
inc
fmul
fs
aaa
cld
jmp
insl
mov
out
dec
or
or
push
outsl
dec
or
sub
mov
fs
decl
mov
scas
ret
inc
xchg
inc
into
stos
mov
cmp
je
call
xor
es
std
fmull
leave
jb
in
or
push
jo
mov
inc
imul
in
or
aaa
adc
pusha
push
ja
inc
out
jo
adc
xchg
add
inc
mov
inc
add
jmp
cmp
cli
sub
ljmp
dec
dec
lock
dec
xor
pop
add
cltd
and
dec
jmp
jg
stos
fdivl
clc
gs
jo
les
cmp
jp
in
test
pop
shlb
out
pop
inc
dec
out
fisubs
and
inc
sub
pop
or
test
hlt
xchg
call
adc
jg
test
fs
dec
add
andb
pop
pusha
sbb
test
inc
pushf
push
loop
cmp
or
dec
movsb
hlt
dec
dec
fwait
xchg
add
sub
div
and
and
pusha
mov
push
or
jno
xor
fildll
push
clc
and
in
mov
mov
cwtl
das
stos
inc
add
into
jmp
call
loopne
or
push
push
std
push
mov
pop
push
ret
mov
fs
in
sti
pushl
ss
cli
push
repz
insl
inc
sub
leave
rorb
add
ljmp
sub
lret
sbb
out
int3
xor
and
out
mov
test
jg
lds
cmpsb
scas
das
jo
scas
xor
mov
or
inc
inc
jg
sub
or
dec
repz
shll
insb
add
addl
push
pop
pushf
push
fs
pushl
lret
jb
push
cld
ljmp
xchg
call
rolb
pushf
js
cmp
sub
out
add
or
sbb
dec
lahf
je
xor
add
jmp
sub
dec
adc
dec
in
sub
int3
lret
xor
aad
inc
fs
outsl
and
mov
ret
lods
cmpsb
push
or
and
bound
rolb
test
xchg
testl
push
xor
xor
ljmp
push
rol
sub
dec
and
push
adc
sbb
mov
mov
jmp
mov
mov
add
push
out
inc
and
aad
scas
mov
adc
scas
xor
sub
sub
xor
xor
mov
xor
push
mov
mov
and
ret
pusha
js,pn
in
push
pushl
outsb
pop
xor
jno
sbb
adc
push
xor
call
icebp
jg
and
sbb
mov
xchg
xor
lcall
inc
lcall
test
jne
icebp
fwait
inc
loop
mov
in
hlt
xchg
shl
ljmp
adc
call
cmp
out
cmp
add
xchg
inc
movsb
repnz
aam
gs
sbb
sar
rolb
xor
shll
inc
xchg
xor
or
mov
mov
mov
mov
fisttps
xchg
mov
push
mov
call
popa
test
bound
pop
and
sarb
es
decl
adc
clc
icebp
xor
or
test
je,pt
mov
inc
xchg
inc
leave
mov
inc
pop
inc
daa
inc
je
incb
sub
lods
inc
pop
stc
mov
loope
xchg
cli
mov
je
shll
push
xor
nop
pushl
sbb
repz
lcall
add
or
lds
out
pop
adc
loopne
sub
adc
dec
dec
push
call
leave
inc
ljmp
insl
and
add
inc
mov
shlb
stos
add
jg
and
daa
lods
imul
xchg
lahf
jbe
cwtl
push
push
aam
outsb
mov
arpl
lods
or
push
arpl
imul
mov
je
xor
arpl
test
add
fcoms
push
jae
mov
xacquire
add
lea
dec
adc
jno
fwait
push
call
loop
and
icebp
adc
in
fmul
xor
call
scas
enter
idivl
les
add
fisubs
lods
mov
dec
and
divps
call
sti
loop
pop
pop
xor
aad
in
loopne
out
jno
scas
pop
xor
inc
aaa
mov
jo
les
push
imul
dec
arpl
rcr
inc
xor
bound
jg
pushl
mulb
mov
add
sub
sahf
cwtl
mov
inc
les
lret
ljmp
call
data16
inc
push
fs
cmpsl
jmp
arpl
or
add
icebp
pop
test
jbe
xlat
aaa
comiss
cli
call
cmp
push
test
ror
arpl
in
ret
out
call
jmp
enter
add
stos
dec
loopne
or
inc
or
jb
pop
call
nop
ret
clc
or
repnz
push
fnstenv
pop
and
sbb
cld
push
cmp
sub
lock
test
inc
cmpl
dec
fcmovnbe
pop
or
stos
mov
test
and
jg
or
sub
jns
test
call
sbb
push
loop
sbb
or
lea
call
or
dec
inc
daa
je
cmp
mov
jecxz
scas
cli
je
xchg
jb
jmp
lock
pop
aaa
pop
std
mov
jmp
repnz
add
sbb
testb
scas
or
jmp
dec
push
dec
pusha
xchg
adc
call
mov
add
xor
les
and
aam
xor
mov
xlat
arpl
mov
cmp
dec
dec
sbbl
add
jmp
icebp
push
cmpsb
lods
jmp
call
cmpsl
arpl
or
cld
adc
test
in
decl
xchg
add
sub
bound
inc
test
and
push
lret
imul
jbe
incl
dec
mov
add
push
cmp
and
mov
test
pop
lea
adc
cwtl
cmc
shr
cld
xor
lea
orb
and
fs
jne
clc
insb
out
cmp
insl
push
js
decl
cmp
adcb
aad
pop
dec
jnp
inc
add
les
into
loopne
data16
jg
mov
das
push
push
jl
nop
dec
xor
mov
adc
jne
jns
sti
sbb
mov
test
call
les
xchg
cmp
gs
xor
or
movsl
scas
mov
cld
dec
mov
jmp
outsb
push
push
ja
cmc
dec
jg
jg
call
ds
rcl
fwait
jmp
std
mov
movsb
testl
inc
cltd
js
das
cli
jns
lock
scas
notl
xor
hlt
es
push
pusha
out
daa
jl
into
jbe
in
or
mov
pushl
repnz
sbb
sbbb
jle
jo
xor
cmp
mov
repz
lcall
and
sarl
imul
imul
fprem
pop
lock
es
push
cmp
cwtl
mov
dec
xchg
ljmp
jo
sub
mov
fwait
inc
cwtl
imul
dec
and
movsb
lcall
int3
mov
mov
rcl
push
mov
jb
push
inc
es
mov
push
inc
aas
jmp
mov
and
jno
cs
cmp
addr16
fwait
sbb
mov
movsb
decl
test
inc
jmp
lcall
ja
js
xchg
icebp
xchg
rcrb
popa
xorb
stos
das
clc
jmp
add
cmp
es
inc
jb
inc
int3
adc
mov
clc
mov
clc
incl
pop
xorb
push
add
int3
cmp
sub
cld
cmpsb
mov
xchg
cmp
shll
xchg
jecxz
lcall
push
inc
fdivl
shrb
and
mov
dec
testb
lret
lods
sarl
xor
cmp
mov
push
xor
push
hlt
sbb
cmp
xchg
shlb
ja
sbb
imul
call
push
sbb
ffree
test
call
mov
cmpsb
cmpsb
subb
mov
lock
call
popa
enter
into
jo
and
aad
inc
or
push
push
pop
adc
mov
repnz
dec
sti
xchg
dec
xchg
mov
fstps
xor
jns
inc
pop
jnp
push
fistpl
or
sub
sti
adc
ret
mov
xor
ja
dec
ljmp
imul
aas
stos
ss
in
add
mov
jmp
pop
decl
pop
ret
mov
mov
arpl
call
push
cmpsl
daa
sti
hlt
lret
mov
movsb
test
lods
and
pop
mov
mov
addr16
call
push
push
inc
stc
jge
jne
pop
in
pusha
xchg
rcrl
mov
mov
sub
pop
ret
inc
or
iret
repz
call
pop
decl
daa
in
inc
xchg
filds
push
xchg
les
mov
cmc
xlat
push
enter
jne
out
cmpsl
jb
decl
scas
stos
sub
push
push
outsl
mov
pop
inc
sub
out
add
pop
and
push
fdivr
call
pop
das
xchg
cwtl
dec
scas
adc
push
jae
pop
pop
xchg
lods
fists
pop
mov
out
xchg
int3
std
iret
mov
jne
mov
leave
mov
fwait
loop
mov
mov
push
push
cli
js
addr16
imul
bound
rolb
fbld
mov
mov
cmp
xchg
incl
fs
stos
sbb
push
out
cmpsl
inc
iret
out
fstl
xchg
adc
xchg
xchg
jl
call
sbb
andl
icebp
mov
lock
cmp
mov
orl
push
insb
movsl
ljmp
xchg
sbb
or
cmp
addl
pop
dec
and
add
or
jmp
pushf
les
repnz
std
insb
xor
dec
cwtl
rorl
fbstp
dec
out
data16
fisubl
repz
or
fst
add
lret
lods
sub
cmp
mov
pop
scas
pushf
pop
lds
mov
filds
aas
inc
aam
dec
mov
sbb
sub
lock
loopne
mov
push
or
pop
mov
cwtl
lret
mov
xchg
data16
outsl
and
fidivrs
jle
std
cmp
decl
mov
nop
vrcpps
pushf
gs
sbb
aaa
sub
mov
mov
clc
incl
cltd
call
xchg
xchg
movb
jb
pusha
mov
sub
popf
jmp
inc
clc
and
xchg
push
pop
or
pop
xchg
lock
stc
ret
pop
xor
movsb
push
and
in
lock
mov
rclb
adc
lcall
into
add
pusha
es
popf
das
sub
test
jb
leave
xchg
and
sbbb
jmp
xchg
sub
jno
jl
loope
xchg
cmp
jmp
jns
push
cmp
sub
jg
mov
dec
mov
int
and
adc
leave
pop
jmp
cmp
and
inc
sbb
testb
jecxz
jge
inc
pop
scas
inc
pop
cs
mov
out
and
xchg
mov
cs
mov
hlt
and
mov
jmp
cmp
mov
lret
xorb
ss
lock
orl
sub
mov
incl
mov
xchg
or
xor
xor
mov
mov
or
enter
rcr
mov
clc
out
loopne
aas
loopne
add
or
pushl
cmpsb
xchg
pushf
mov
test
imul
fistps
push
mov
xor
dec
add
mov
decl
pop
sub
inc
icebp
xlat
pop
shll
std
packuswb
mov
add
pop
outsb
stc
ja
orb
out
outsl
adc
mov
pop
adc
pushl
mov
rorb
imul
xchg
push
cmp
dec
lcall
sbb
int
sarl
xor
hlt
lcall
add
lock
cmp
loope
sbb
push
pop
nop
dec
movsb
jg
dec
fnstsw
cld
mov
movsb
push
pop
jmp
fs
ret
add
add
cmp
and
push
xchg
add
pop
cmc
aad
mov
lcall
cmp
les
cmp
fwait
popf
inc
mov
jg
ja
push
adc
and
mov
push
outsl
ret
push
cmp
mov
fisubrl
pop
popf
adc
dec
adc
push
sbb
xchg
decl
sub
inc
pop
imul
or
pushl
scas
lds
popa
mov
jmp
subl
or
pop
stos
jp
inc
lcall
mov
fsubrs
push
fwait
fwait
inc
jb
fisubrs
lock
fstp
gs
jne
jp
sbb
iret
add
insl
neg
cmpsb
call
stos
and
ja
adc
in
in
popa
xor
cltd
bswap
cmpsl
fistps
adc
fstps
mov
pop
jle
cli
pop
push
jle
lcall
pop
adc
add
decl
xchg
aad
push
ja
andl
jno
aam
adc
lea
adc
ljmp
add
xor
or
roll
jno
jg
daa
sub
outsb
dec
adc
scas
inc
sub
jg
call
aas
pop
out
pop
sarb
adc
inc
push
decl
pop
add
rolb
ljmp
push
sub
aam
push
outsb
xor
push
push
and
or
cmc
push
mov
pushf
xor
fs
pop
jg
icebp
and
and
jp
jmp
and
jg
push
lock
jne
inc
clc
dec
movsl
xchg
sub
xchg
dec
pop
in
icebp
stos
pop
lods
sub
jmp
loop
sti
lods
mov
add
fidivl
bound
stos
sbb
sar
sbb
stc
push
mov
fistpl
xlat
mov
sbb
pushl
lahf
repz
mov
jb
fnsave
scas
push
jae
jmp
jns
into
pusha
test
stc
jbe
movsl
add
imul
pop
sub
jg
add
aaa
pusha
jge
sahf
add
into
or
call
sbb
or
ffreep
je,pn
cli
push
leave
data16
call
loop
pop
push
movsb
mov
cs
in
mov
inc
inc
incl
jo
mov
push
cmpb
sbb
xor
call
loope
jmp
pop
inc
sub
and
or
lock
xchg
adc
push
mov
xchg
ja
pushf
shrb
and
mov
jae
sarb
adcb
pop
pop
lods
or
cmpsb
xor
mov
push
sbb
test
pop
shl
mov
insb
int3
sub
push
mov
inc
dec
mov
int
ljmp
lds
cwtl
xor
imul
gs
mov
cmpsl
sub
cltd
lcall
ljmp
addb
aam
push
xor
or
mov
fsubr
into
push
je
rcr
pushl
aam
pop
fcmovnb
sbb
jne
cmp
xchg
jl
in
out
xchg
xor
lcall
jae
push
add
and
pop
mov
mov
iret
and
add
dec
jg
jmp
add
cmp
loope
jmp
cli
repz
mov
test
pop
hlt
aam
mov
xor
push
leave
pushf
cmp
mov
test
sbb
incl
out
rolb
mov
xor
aas
repnz
push
push
loop
insl
inc
pop
jnp
call
mov
fsubs
xchg
cmpsb
sti
jge
sti
aaa
adc
fcoms
call
scas
daa
int
les
xchg
xor
call
ljmp
xchg
out
or
popa
and
movsb
xor
xchg
sub
shll
mov
adc
dec
jne
or
outsb
test
mov
mov
jle
gs
push
pop
push
jmp
lahf
inc
dec
lods
mov
cmpsb
jne
or
call
cmp
fisttps
imul
ljmp
sub
mov
mov
cwtl
push
mov
jno
cmc
xchg
mov
mov
cmp
repz
imul
mov
xchg
gs
jb
add
ret
mov
add
int
cmp
mov
push
mov
test
mov
sub
push
insl
and
std
cmpsl
cmpb
add
mov
jo
mov
and
hlt
loop
xchg
pushl
mov
sub
loop
mov
pop
rcr
and
pop
test
data16
dec
xchg
mov
call
cwtl
inc
dec
ds
aas
sahf
jmp
mov
test
inc
mov
movsb
cmpsb
cmpl
sbb
mov
ljmp
jle
and
sbb
outsb
lea
aad
decl
cmp
or
inc
mov
ret
and
inc
pop
or
push
les
inc
daa
xor
pushf
mov
daa
lods
push
fisttpl
stos
inc
cmpsb
je
mov
and
xchg
push
and
test
mov
decl
jo
mov
push
sub
push
sub
push
push
jl
dec
xlat
pop
stos
sub
mov
pop
scas
xchg
loopne
push
jne
clc
call
pushf
xlat
push
pop
add
pop
cmp
add
call
mov
ret
adc
mov
in
pop
push
mov
xor
popf
cvtps2pi
test
push
out
outsl
cli
popf
adc
mov
mov
clc
ljmp
enter
insb
leave
gs
jl
and
insl
rcll
fistl
stos
and
call
mov
jno
arpl
subb
and
and
shrb
and
dec
add
add
add
lods
mov
sar
inc
rcl
test
int
push
shll
loop
mov
sub
pop
mov
push
mov
in
sub
sub
ja
test
aam
push
divl
aam
stc
xchg
pushf
mov
lods
cmpsb
cmp
xlat
jmp
mov
testl
sub
pand
jg
imul
inc
add
in
dec
idivl
loope
jb
dec
cs
xchg
stos
cmp
fcomip
sbb
out
dec
pop
repz
adc
xorl
or
orb
sbb
sahf
decl
add
push
popa
mov
clc
pop
out
fimull
inc
push
push
cmpl
test
decl
sub
mov
cmp
mov
fstpl
dec
or
inc
dec
or
enter
gs
mov
and
outsb
mov
push
cld
or
lcall
cmp
insl
mov
pusha
arpl
int
cmpsb
mov
sub
dec
incl
push
xchg
inc
or
push
test
mov
call
incl
mov
mov
sub
hlt
inc
incl
sub
xlat
jbe
out
aam
push
xchg
leave
and
idivb
or
je
mov
sti
dec
pop
or
loope
lret
adc
and
aas
test
ficomps
pop
ds
jne
lcall
xchg
xchg
test
outsb
lret
mov
jae
xchg
mov
mov
cs
push
int3
loope
jae
mov
pop
int3
jp
mov
lret
sbb
int
jecxz
pop
arpl
mov
push
and
std
inc
ss
xor
loopne
push
ja
fisubs
inc
dec
push
divb
push
mov
xor
inc
inc
cld
repz
ret
call
xchg
xchg
imul
sub
push
sbb
addr16
fdivs
call
sbb
xor
mov
sub
adc
inc
pop
cmp
push
cmp
dec
jns
incl
add
es
pop
addr16
pmuludq
push
jb
cmp
or
xorl
adc
call
aad
mov
inc
jp
inc
pushf
mov
aas
adc
sbb
cltd
mov
sbb
insl
xorl
data16
jg
movsl
xchg
mov
push
addl
xchg
mov
cmp
call
test
push
clc
mov
adcb
mov
mov
sbb
dec
xor
jl
push
lret
push
loope
mov
lcall
sbb
and
cmp
inc
cmp
jecxz
ljmp
call
jns
sub
push
mov
add
cmpsl
gs
cmp
xchg
xor
pushl
idivl
add
xor
arpl
add
inc
outsl
idivb
bound
push
and
and
addr16
mov
xor
jmp
sub
push
push
jns
push
adc
xchg
imul
push
orb
mov
lcall
push
pop
daa
in
lock
jne
adc
testl
xor
repnz
jns
or
ret
push
adc
decl
js
cmc
adc
push
pop
xchg
insl
jge
inc
notb
dec
fadd
xor
inc
inc
sbb
jne
je
call
cltd
pop
xor
xor
in
push
jb
xorl
adc
movsb
test
fs
xlat
inc
scas
ret
sbb
xchg
jnp
or
test
dec
bound
cmp
dec
sahf
xor
add
sahf
adc
mov
cmp
incl
cmp
sub
dec
in
dec
cmp
loop
pop
ja
sahf
jno
cmpsb
fcomip
pushl
jo
test
cmp
adc
xchg
gs
jae
mov
cwtl
push
dec
mov
das
xchg
push
jae
and
pop
jnp
and
pop
cwtl
outsb
mov
decl
pop
push
hlt
sub
bound
enter
adcl
jb
ljmp
push
push
mov
xchg
inc
sub
jns
es
xlat
gs
push
pop
fnsave
fbstp
popf
xchg
pop
and
incl
dec
imul
inc
and
jg
push
and
xchg
nop
adc
movsl
imul
xor
and
orl
decl
pop
cmp
and
ret
inc
jnp
jb
aaa
or
pop
cmp
cmpsb
and
sbb
xchg
out
xchg
jo
xchg
adcb
mov
xlat
dec
in
dec
dec
arpl
pop
fsubl
incl
sub
mov
mov
repz
adc
sbb
mov
mov
pop
scas
cwtl
sbb
rcrl
jb
cmp
mov
das
shll
cli
out
je
loopne
push
jg
clc
mov
xchg
jbe
push
fwait
jns
inc
jge
xchg
repnz
adc
repnz
inc
test
xor
xor
sti
add
adc
inc
jl
xor
aaa
mov
inc
sbb
decl
arpl
dec
cltd
sbb
arpl
xchg
je
xor
gs
das
addl
ja
ret
adc
call
mov
hlt
cmpl
jns
stos
sub
ja
dec
es
cmp
pop
lret
jg
cmc
fadd
fsubrs
dec
cmp
fs
or
ljmp
jbe
push
pushw
out
imul
mov
xchg
jle
xchg
adc
mov
cmpsl
enter
repnz
lret
andl
sub
cltd
test
call
call
xchg
fs
fs
mov
inc
popa
jp
or
sbb
ret
lcall
cmp
add
push
dec
mov
pop
sub
and
pop
std
jg
mov
daa
pop
pop
js
lea
pop
test
ret
shr
addr16
push
jne
cwtl
xlat
pop
adc
insl
push
jns
aas
xor
sti
push
rolb
mov
cmp
incl
dec
xor
arpl
jb
mov
inc
cmc
cwtl
xor
fists
jns
and
lods
jp
jns
test
and
pop
js
ljmp
jg
jmp
dec
loope
push
leave
in
adc
leave
test
mov
mov
cmp
dec
jne
jmp
ss
cwtl
mov
loopne
jp
adc
lcall
js
stos
cmp
icebp
push
fs
in
sub
cmp
fisttps
add
cmp
pop
inc
or
pop
sub
jnp
and
jnp
jns
cli
cmp
incl
jl
popa
mov
jp
lods
sbb
rorb
mov
mov
xchg
jne
pushl
push
add
sbb
rolb
sbb
push
call
aas
inc
in
stos
shr
dec
and
or
imul
movsl
lcall
dec
or
jne
cmpsb
pop
adc
and
xor
bound
and
out
cli
lcall
popl
scas
cli
inc
movsl
in
xor
cmp
xor
imul
aaa
cli
ljmp
decl
adcb
pop
fwait
imul
fwait
mov
popa
lahf
cmp
pushl
movsl
mov
mov
cmpsb
movsl
sar
insl
inc
sti
popf
jle
sub
mov
incl
or
cmp
scas
adc
cmp
lds
mov
xchg
adc
push
incl
fdivrl
test
cmp
sbb
add
mov
adc
dec
push
rcll
jbe
imul
std
lcall
mov
cmpsb
mov
mov
adc
push
aam
push
xor
lcall
movsb
dec
mov
mov
ljmp
out
clc
aaa
lret
adc
xor
and
lret
cli
dec
ss
cmp
mov
pushl
pop
lret
xchg
adc
mov
sub
insb
dec
add
add
adc
mov
xor
mov
insl
into
xor
in
jbe
imulb
out
dec
test
pop
jmp
push
outsl
inc
sub
mov
pop
mov
shlb
sub
sub
mov
lret
sahf
xor
jg
call
je
dec
lcall
mov
inc
push
sub
jns
mov
add
decl
sub
cltd
sbb
cmpsl
push
mov
sub
or
pushl
xchg
cmp
mov
inc
sbb
fcompl
xchg
jg
stc
ret
call
je
adc
vmcall
push
add
pop
pop
popa
clc
lret
insl
sti
ret
ret
outsl
mov
jb
lcall
add
lcall
mov
jne
dec
xor
popa
inc
xor
mov
dec
mov
addr16
pop
cmp
ja
and
mov
add
push
jmp
adc
nop
movsl
imul
pop
mov
lcall
fucomip
fwait
or
mov
fldt
xchg
xchg
jne
dec
inc
xlat
test
add
sbb
xchg
repnz
or
into
sub
inc
mov
and
loop
cmpsb
pop
cmpl
cmpsl
push
or
js
mov
jg
mov
loope
les
sbb
sbbb
cmpsb
popa
test
push
mov
jno
mov
frstor
jg
fsubrs
cld
xor
push
and
mov
mov
or
aaa
push
jmp
test
cmp
ljmp
mov
jae
push
incb
lret
sub
ss
xchg
es
and
insb
ret
jmp
inc
sub
inc
dec
sub
dec
and
jl
inc
xor
jno
sbb
mov
inc
int
cmp
pusha
lret
les
cmc
and
enter
mov
sbb
push
add
mov
mov
mov
xor
mov
push
inc
adc
jg
mov
movsb
add
arpl
sub
rcrb
xchg
idiv
cmp
adc
imul
jnp
adc
js
mov
js
stos
mov
pop
xor
lcall
fnsave
and
lods
repnz
sbb
loope
push
dec
or
mov
ret
stos
loope
dec
popf
pushf
xor
mov
cwtl
mov
mov
jg
incl
jg
lods
dec
pop
lea
fdivs
int
sub
cmp
pop
lods
add
call
mov
adc
cmp
jge
jl
and
cmp
cwtl
lcall
idiv
insb
pop
shrl
popa
pop
pop
insb
fwait
xchg
push
jns
add
jecxz
fisttpll
pusha
inc
add
jmp
repz
xor
nop
xor
cmp
xchg
mov
jmp
mulb
xchg
std
ss
or
mov
int
or
imul
lcall
push
cmpsl
es
imul
xor
cmp
js
xchg
xchg
aam
sbb
mov
incl
popa
cmp
bound
fnstsw
mov
dec
mov
je
add
cmp
shll
pop
jmp
mov
shrl
addr16
cmc
dec
adc
in
stos
cld
decl
sub
aam
cmp
jg
mov
addr16
jae
jns
jecxz
call
mov
fbld
mov
inc
mov
and
jbe
or
ljmp
dec
cmc
ret
aam
or
jae
adc
jae
cmp
dec
loope
lcall
aam
popf
inc
hlt
push
add
ss
xchg
imul
call
add
cmp
fcomps
iret
outsb
or
ljmp
sub
push
add
decl
lock
dec
test
xor
add
xor
push
mov
dec
mov
call
bnd
sti
mov
pushl
in
jp
mov
dec
push
cmp
jp
sbb
jl
sub
adc
or
mov
jle
cmp
sub
jle
icebp
leave
out
xor
cmp
rcrl
dec
scas
mov
push
inc
xor
mov
mov
mov
cmp
mov
xchg
jmp
int3
inc
push
xchg
ljmp
mov
adc
rclb
aam
fisttps
sub
imul
decl
jbe
xor
shll
int
cli
mov
adc
ret
mov
pop
mov
call
dec
jmp
mov
jle
loope
sub
call
imul
lcall
test
pop
insb
adc
scas
scas
je
cmpsb
pop
popa
vhaddpd
jmp
filds
push
mov
popa
icebp
xchg
insl
in
adc
jl
pop
sbb
cmp
mov
data16
call
xchg
xor
sub
sar
sub
jbe
xchg
jo
imul
jecxz
rcl
mov
nop
int3
jb
addr16
decl
outsb
aaa
fstl
aas
ret
mov
jns
push
add
sbb
incl
cld
mov
sti
orb
push
adc
lods
ja
cmp
inc
cmpl
pushl
and
push
adc
cld
fbld
push
inc
inc
outsl
int3
out
jecxz
cltd
jb
int3
ret
lds
sbb
daa
push
jbe
mov
pop
dec
aad
scas
mov
fbstp
pushl
pop
shlb
lods
sti
xlat
rclb
hlt
dec
orb
sbb
rol
addl
adc
ret
ficompl
add
inc
fs
adc
pop
sub
cmp
andl
call
out
xchg
xor
push
dec
aam
shll
fnstenv
and
out
pop
ljmp
rclb
pop
xchg
pop
cmc
in
sub
push
mov
insb
push
mov
pushl
in
or
stos
cmpsl
enter
adc
ret
popf
mov
rcl
pop
and
pushl
loope
xchg
add
pushf
xor
inc
adc
stos
decl
outsb
fstl
xor
scas
pop
shlb
lcall
pusha
add
lcall
data16
inc
jnp
xchg
and
jb
scas
or
push
insb
push
sub
lret
clc
or
adcb
pushl
adcb
jge
jb
dec
pushl
inc
xorl
clc
repz
jne
jmp
loope
mov
push
dec
negb
add
mov
incl
jecxz
mov
pop
cmp
cld
push
mov
ljmp
cltd
insb
mov
inc
aam
sti
scas
and
dec
xor
out
inc
cmpsb
add
lock
mov
ret
mov
addb
inc
sbb
xchg
rolb
jns
jo
inc
lcall
ret
mov
xor
push
icebp
aaa
rcl
xchg
or
rolb
and
jg
clc
loopne
and
mov
es
cmp
dec
cmp
xchg
sbb
incl
push
es
dec
add
lret
jbe
fisttps
into
fldl
mov
stos
mov
dec
xchg
lods
cli
insb
pop
mov
ret
sbb
stos
add
cmp
or
ljmp
stos
inc
repz
lods
inc
mov
aam
lock
mov
sbb
int3
scas
push
divl
jne
push
sbb
ljmp
lcall
jmp
repnz
push
decb
mov
mul
mov
mov
jae
pop
pop
xchg
inc
into
xchg
mov
cmp
mov
ret
movsl
dec
mov
xor
ljmp
fwait
jb
icebp
rcrb
sub
inc
lcall
mov
fs
xor
shll
movsb
mov
xchg
sbb
sub
sbb
or
xchg
mov
and
iret
cmp
cmpsl
fs
dec
imul
fistpll
cmp
xchg
xor
nop
jnp
xchg
and
add
jmp
push
stos
imul
lret
cwtl
add
jbe,pt
mov
jl
test
or
add
mov
xchg
decl
inc
jns
shld
je
pushf
imul
ja
nop
enter
mov
push
jnp
jmp
sub
sar
dec
shrb
xor
cld
push
rolb
out
js
es
mov
aad
dec
or
inc
cmc
jg
or
cmp
movl
xor
pop
xor
xor
imul
mov
xor
cmp
ljmp
loopne
adcl
jb
mov
xor
loop
xchg
lcall
divl
sub
mov
mov
pop
and
scas
lret
dec
push
incl
insl
adc
std
fwait
out
pusha
push
dec
xchg
repz
arpl
roll
add
sub
cmp
aas
sub
ficoms
dec
je
or
leave
push
jb
push
sub
ljmp
ficompl
jmp
std
call
lcall
iret
cmp
push
test
subl
nop
xchg
mov
add
mov
inc
out
add
jl
sbb
jg
dec
rcrl
cmp
outsl
xchg
test
add
loopne
xchg
xor
mov
andb
inc
in
cmpl
cmc
movsb
push
cmp
or
xor
and
shr
rcll
fcompl
inc
push
jno
pop
int3
loop
mov
lods
push
xchg
rorl
call
jmp
aas
ljmp
ljmp
mov
add
jle
aaa
add
or
decl
push
pop
int
xlat
into
movsl
sub
mov
xlat
mov
jno
pop
call
sbb
push
sahf
les
lea
adc
add
jne
jecxz
nop
push
xor
cmp
incl
sub
sbbb
mov
gs
mov
jg
fsubl
mov
arpl
sub
pushf
push
push
xor
fdivrl
add
in
lods
jo
xor
push
mov
mov
xorl
sbb
and
addr16
mov
call
and
rcll
xor
rcll
and
xor
add
jmp
and
adc
mov
es
cmp
push
or
push
push
repz
push
xchg
cmp
and
xchg
pop
aaa
sub
pushl
jo
adc
daa
adc
movsl
inc
dec
adc
popa
lea
js
push
inc
sti
incl
xchg
xchg
mov
in
jae
ret
push
jne
push
jae
ror
push
jg
or
pop
mov
daa
mov
push
push
jge
fwait
mov
and
pop
sub
das
cli
call
pop
xchg
cs
scas
cmp
call
dec
jbe
ja
pop
jg
add
mov
xchg
inc
sub
hlt
push
testl
lahf
xor
fisubl
add
pop
mov
adc
fcomip
sbb
push
push
leave
dec
pusha
dec
pop
cli
mov
inc
sti
dec
repz
jmp
cmp
fwait
ljmp
sub
xor
outsl
push
test
xchg
jge
in
mov
jmp
jne
popf
dec
xchg
movsl
lcall
test
and
or
mov
mov
pop
lock
push
lahf
lods
in
mov
sub
sub
jecxz
dec
sbb
pushl
adc
dec
mov
push
xor
xor
cmp
mov
push
add
xor
and
adc
push
std
lds
pushl
xor
sbb
push
pushf
stos
xchg
ret
push
movsb
mov
lcall
lds
lahf
leave
or
lock
aad
add
xor
pop
in
pushf
aad
fcom
dec
ss
jno
and
dec
sbb
cmp
insb
stos
mov
and
mov
mov
adc
and
jnp
fsubs
mov
dec
push
fstps
push
outsb
imul
push
push
or
sbb
dec
push
fdivs
iret
ja
addb
lcall
call
or
imul
or
test
xchg
pop
pop
sti
out
ds
in
xchg
sti
call
and
cmp
aam
fisttpl
out
or
push
psrld
fsts
jg
movsb
add
jle
sbb
int3
cmp
pop
mov
lock
decl
test
push
adc
adc
out
inc
imul
sbb
decl
mov
xor
xchg
cmpsb
cli
add
out
or
jge
pushl
jp
ret
mov
inc
loopne
das
cmpsb
cmpsb
jns
sbb
insb
lcall
and
push
inc
xchg
cmp
ret
or
or
xlat
arpl
iret
mov
push
jbe
jmp
sbb
lds
jmp
pop
dec
jne
int3
and
add
xor
je
lret
dec
add
decl
lock
and
mov
dec
dec
sub
neg
repz
adc
jp
xchg
ljmp
hlt
out
cmp
out
daa
cmp
imul
fildl
decl
je
mov
gs
pop
stos
imul
push
add
cli
jmp
mov
ds
dec
daa
cs
cmp
dec
cmp
sub
fbld
loop
or
ror
push
notl
aad
mov
shlb
ja
dec
dec
fwait
int3
cmpsb
ljmp
sub
lcall
dec
ret
fcompl
xchg
sub
pusha
xor
mov
push
xchg
ret
sub
mov
lock
sub
call
lret
or
cli
xchg
cmc
sbb
fnstcw
shrb
jmp
cmp
dec
mov
jl
cmpl
testl
mov
in
movl
fimuls
mov
outsl
cld
cmpsb
jmp
bound
cltd
xchg
outsl
dec
jne
add
jmp
ljmp
ss
test
mov
cmp
adc
roll
adc
lcall
dec
jmp
ret
adc
push
mov
repnz
mov
lods
mov
fnstenv
push
les
mov
cmpsb
mov
mov
mov
jmp
xchg
nop
mov
scas
sub
lods
mov
stos
push
pop
xchg
and
test
mov
xchg
mov
cli
lcall
jns
aad
mov
mov
pop
orl
ss
pop
xchg
xchg
ret
mov
lcall
xbegin
pusha
jmp
jg
stos
mov
popf
push
shll
fs
std
ficoml
mov
loopne
fcom
mov
fsubl
inc
repnz
rcrb
or
outsb
xor
das
test
movsb
push
inc
jp
or
and
cmp
cmp
lods
add
jo
inc
cmp
jg
cmp
or
jecxz,pt
test
cmpsl
pop
fidivrl
cs
jle
mov
and
xchg
adc
push
jmp
ljmp
mov
xor
cltd
xchg
xor
jb
mov
fsubr
test
mov
outsl
stos
mov
lock
mov
adc
pop
hlt
mov
cmpsl
jbe
nop
call
mov
nop
mov
rolb
pusha
mov
rclb
push
fstpt
sarb
ds
stc
mov
mov
cld
xor
cs
cmp
mov
enter
inc
cmp
or
xor
ret
repz
inc
outsb
sbb
jmp
mov
outsb
mov
mov
jmp
lods
or
mov
insb
lret
mov
cld
repnz
mov
mov
mov
movsb
fsubrp
sbb
movsb
mov
mov
fcomps
dec
fisubl
aaa
add
test
jle
imul
pop
pop
scas
xchg
insb
sbb
xchg
mov
pushf
dec
or
outsl
outsb
pop
xorb
sbb
cmp
pushl
sbb
cld
xchg
mov
push
movsl
cmp
add
repnz
movsl
icebp
call
mov
imul
shrl
aam
xor
test
push
adc
push
les
sub
mov
imul
xor
aas
repnz
cmp
ljmp
or
mov
mov
movsb
imul
pop
pop
imul
hlt
cltd
pop
loopne
lcall
sub
loopne
mov
aas
cmpsb
dec
mov
and
scas
pushf
lea
inc
lea
hlt
adc
jo
lock
scas
ljmp
mov
call
cld
inc
pushf
lahf
xchg
adc
sbb
xor
pushl
bound
enter
or
sbb
add
or
fcmovne
sub
jg
ljmp
mov
mov
mov
loop
nop
xlat
js
xlat
call
mov
rcll
push
jmp
pop
add
sbb
xchg
xchg
add
test
loopne
push
pop
cmc
pop
dec
imulb
inc
clc
dec
add
inc
hlt
sub
leave
jl
test
mov
lds
sbb
enter
mov
mov
out
jnp
adc
add
dec
int3
aas
cltd
xor
cli
dec
dec
jno
fcmovb
xorb
xchg
cmpsb
fs
outsb
mov
dec
add
cmp
lcall
mov
lock
or
pusha
adc
or
cwtl
xor
push
and
sbb
call
jmp
push
ljmp
mov
adc
hlt
decl
inc
sub
test
mov
fmuls
popa
mov
inc
shrb
mov
or
lret
outsb
adc
sbb
jo
or
shll
mov
jae
sti
fildll
ficompl
add
mov
push
cmp
sbb
or
sar
call
sbb
mov
sub
and
mov
xchg
in
ds
jg
sbb
or
adc
sbb
add
adc
sub
adc
push
fdivrp
jmp
push
dec
mov
cmc
lcall
jmp
mov
roll
sub
jnp
out
xchg
jbe
adc
mov
mov
push
cmpl
mov
inc
lret
xor
andb
mov
pusha
aam
fwait
out
fstpt
sub
cmpsb
mov
jns
push
scas
nop
adc
loop
ds
ljmp
jns
mov
mov
pushf
pop
adcl
cmp
xlat
inc
and
xchg
sub
aaa
xor
call
popf
cmp
das
shrb
xor
and
push
lea
call
icebp
mov
xchg
js
je
popf
pop
imul
jg
sti
enter
aad
cmp
sbb
dec
mov
sbb
dec
cmp
push
jg
push
xor
sub
pop
dec
outsb
or
xchg
xorl
decl
out
sbb
std
and
mov
sub
cmp
mov
and
xor
jmp
fistps
test
dec
mov
cmp
dec
in
xchg
mov
mov
xor
dec
mov
mov
mov
jns,pt
pop
inc
fwait
cmp
and
inc
call
xor
bound
push
adc
cs
decl
mov
or
aaa
pop
xchg
push
or
scas
inc
icebp
or
push
and
inc
mov
push
dec
pop
cwtl
enter
pushl
shrl
sbb
xlat
sahf
push
mov
sbb
xor
inc
fisttpll
ret
jno
ljmp
pushf
pop
or
out
cli
fcomip
and
rclb
orb
pop
movsb
insl
fisttps
ja
popf
jl
fmuls
cltd
lret
subl
bound
stos
mov
cltd
js
pop
jmp
clc
lcall
lret
push
pop
and
pop
sbb
pusha
adc
sbb
mov
jge
mov
icebp
iret
add
pusha
sub
mov
nop
lods
mov
cmp
call
stos
xor
cmpsl
lret
pop
adc
lret
aas
or
cmc
xor
ret
int3
mov
jecxz
pushf
cmp
adc
and
and
subl
mov
movsl
sbb
mov
fucomp
pushf
enter
fnstenv
ret
insl
mov
adc
or
sub
ja
cmp
test
jno
fsub
sub
loope
loope
sub
pushl
pushf
insl
fcomps
and
lret
lock
addb
push
mov
pop
inc
pop
in
xchg
dec
cmpsb
lods
cmp
adcb
les
mov
popf
cmp
out
mov
xor
mov
xchg
pop
sub
add
push
fdivrl
testb
call
ds
sub
popf
xor
dec
mov
mov
sub
pop
adc
daa
lds
clc
sti
or
das
inc
dec
xchg
or
inc
fnstsw
loope
add
lods
xchg
sub
icebp
fildl
add
bound
std
call
mov
fwait
inc
fidivl
rcrl
xchg
cli
jg
aam
mov
sbb
push
push
push
scas
mov
test
jmp
sbb
ljmp
or
xor
xchg
in
push
in
add
mov
lock
in
fdivs
inc
out
outsl
adc
lcall
jl
mov
pop
cmc
mov
stc
mov
fbstp
add
dec
push
sbbb
int3
push
inc
and
sbb
mov
or
xor
dec
push
pushl
mov
jnp
jge
gs
xchg
dec
xor
sahf
sbb
sahf
das
xchg
movsb
decl
mov
mov
jmp
pop
sti
inc
sub
and
push
inc
mov
push
add
aam
data16
stc
xor
stos
out
popf
cmp
sar
punpcklwd
sbb
les
pop
sub
lret
jb
insb
mov
mov
sbb
repz
push
and
xchg
xor
sub
xchg
sbb
aam
mov
les
call
rolb
sahf
inc
inc
sbb
dec
aaa
xor
jg
icebp
idivb
psrld
in
outsb
dec
push
lods
pop
xor
or
popf
mov
movsl
jp
cmp
cmp
adcl
cmp
icebp
sbb
lcall
mov
mov
sahf
sbb
loop
pop
and
push
cmp
outsb
jle
inc
xchg
fsubs
fdivrl
xchg
loopne
pushl
jge
pop
arpl
add
dec
mov
cs
cs
scas
push
int3
mov
decl
clc
sti
popa
pop
movsb
inc
and
pop
enter
jg
or
fnsave
insl
lock
mov
adc
xlat
jmp
inc
in
mov
loop
xchg
xor
fcmovbe
loop
sbb
inc
aad
jg
inc
std
imul
mov
jle
mov
sahf
movsl
sbb
pushl
mov
aam
mov
xchg
in
fstps
mov
loop
ljmp
daa
pushf
inc
pusha
add
out
or
cwtl
mov
fcoms
sbb
iret
cmp
sub
pop
or
mov
sti
cld
ljmp
mov
nop
or
adc
popa
cmp
cmp
outsl
inc
shl
xchg
mov
fwait
mov
pop
call
in
jp
mov
pop
mov
inc
mov
ljmp
insl
push
pop
sarb
jno,pt
xor
xor
imul
jmp
adc
mov
pushl
ret
es
fimuls
mov
mov
in
out
push
mov
ror
mov
push
jo
adc
popf
push
ret
clc
push
sarl
in
inc
call
push
hlt
add
inc
ss
sahf
and
ret
in
inc
ljmp
push
ret
aas
and
out
push
dec
cmp
push
cmpsl
xor
push
notl
adc
lcall
xchg
aaa
neg
adc
push
add
mov
jg
jo
push
add
adc
pop
add
sbb
sbb
lods
jmp
add
incl
out
sub
and
pop
mov
jmp
aam
popf
sbb
adc
push
push
add
das
loopne
mov
decl
adc
add
mov
xor
mov
jmp
cmp
mov
lods
cmp
loopne
xor
call
decb
testl
cmc
xor
movsb
fbld
pop
sbb
decl
push
add
push
cmc
movsb
insl
cli
and
mov
dec
xchg
nop
movsl
or
pusha
scas
mov
push
mov
in
imul
push
sbb
clc
jmp
pop
mov
push
push
ja
inc
mov
mov
adc
shlb
outsl
sub
jae
inc
cmpsl
lods
xchg
mov
es
test
adc
xor
cld
test
mov
hlt
arpl
mov
sti
out
ja
clc
push
lret
sbb
out
pop
out
mov
mov
mov
dec
mov
inc
dec
jmp
adc
mov
push
fwait
cmp
jno
lcall
fildll
xchg
insb
dec
aam
mov
pushf
pop
fistps
pop
or
jmp
pop
mov
idiv
icebp
jmp
inc
dec
dec
and
dec
add
push
lcall
or
lcall
icebp
mov
test
mov
push
or
adc
pop
dec
mov
mov
cs
push
mov
repz
icebp
cmp
jo
lock
in
in
xchg
inc
aas
add
mov
adc
subl
or
pop
cwtl
ud2
and
clc
or
mov
inc
xchg
ss
icebp
jmp
cwtl
mov
xor
sub
call
sub
shlb
in
in
jns
out
add
ja
in
repz
push
std
stc
mov
int3
and
dec
inc
mov
ljmp
loope
sub
and
in
mov
sub
and
fs
add
ljmp
jne
int
in
in
pop
mov
or
lock
adc
pop
sub
out
xchg
and
push
aaa
scas
in
mov
or
lcall
incl
sahf
incl
lcall
or
nop
mov
mov
shrl
mov
scas
insl
push
mov
sar
ja
jl
test
fwait
inc
mov
cmpb
insb
adc
cwtl
call
fbld
data16
jne
shlb
adc
mov
movzbl
hlt
pop
mov
mov
fdivrl
and
clc
pushl
jg
imul
inc
loopne
shll
fadds
and
and
dec
in
or
push
push
dec
adc
and
and
pop
dec
sar
sub
cli
jb
add
jns
xor
incl
lods
nop
push
inc
add
fmul
sarb
xchg
cmc
jecxz
ds
pop
push
dec
cs
xchg
rorb
sub
call
and
inc
push
dec
xor
test
inc
push
ds
je
dec
dec
in
in
pushl
xchg
dec
gs
add
mov
les
in
add
in
add
add
inc
push
xchg
sbb
mov
pop
pop
jl
push
pop
jns
out
ljmp
stos
push
cwtl
orl
cmpsb
add
shlb
fs
push
bound
incl
adc
pop
push
add
adc
push
sub
inc
push
and
lret
lods
mov
popl
or
mov
mov
ficoms
cld
lock
inc
adc
mov
xchg
loopne
aad
push
in
pop
xlat
jbe
ficoms
xchg
xchg
mov
out
lcall
js
popa
mov
jle
shl
out
adc
push
arpl
sbb
adc
lcall
jecxz
mov
cmpsb
pushf
jne
xor
addr16
sub
shrl
incb
sbb
enter
arpl
adc
inc
clc
lock
mov
jno
push
dec
jle
fsts
mov
jmp
cld
arpl
dec
adc
fbstp
inc
jo
inc
adc
cmp
pop
push
pusha
lcall
adc
xor
mov
xchg
lcall
push
jge
sahf
insb
lods
or
xchg
jle
mov
jg
mov
push
pop
andl
fsubs
mov
cmc
xchg
xchg
pop
popf
stos
test
cmpsl
cmovp
es
cli
xchg
mov
stos
add
jo
adc
push
lea
popf
dec
xor
stc
ss
inc
inc
cmp
and
add
fidivl
sub
cld
or
or
es
fadd
shrb
daa
sub
popf
mov
jno
sub
sahf
mov
jnp
mov
fnstsw
and
fistpll
dec
mov
pop
mov
xor
and
loop
decl
sbb
out
add
and
in
fcoml
movsb
jae
sbb
in
rcll
insl
test
addr16
aad
sbb
add
and
xchg
sbb
mov
jmp
mov
xchg
mov
cwtl
mov
ljmp
ficompl
mov
mov
jno
mov
ret
mov
cltd
mov
adc
sub
xchg
cli
ljmp
or
sbb
cwtl
mov
lret
pop
pop
test
sub
mov
fbld
sbbl
roll
lcall
push
in
sti
add
cmp
cmpb
and
push
fucomp
push
mov
xlat
leave
scas
mov
int
jle
cmp
orl
cmp
out
hlt
xchg
cs
or
push
mov
sub
jae
iret
sub
cli
lcall
scas
addb
mov
mov
pushl
mov
xchg
sub
mov
xor
popa
pusha
jg
jb
lds
aaa
or
add
gs
aas
decb
cmp
jmp
cwtl
hlt
cs
xchg
mov
nop
cmp
mov
cld
sbb
xor
call
jg
xor
pop
push
sbb
sarl
and
in
incl
inc
pop
adcb
fcoms
and
out
or
xchg
or
add
call
xchg
fwait
test
inc
jns
xor
dec
sbb
pushl
hlt
subb
adc
push
testb
icebp
dec
pop
in
hlt
mov
jp
dec
bound
mov
loop
scas
call
mov
mov
scas
call
adc
lcall
push
cmp
popf
pushf
addl
mov
je
stos
xorb
ss
xor
mov
scas
inc
ficoml
xor
shrl
cmp
idiv
lcall
loop
popa
fiadds
push
jge
dec
movsl
ljmp
int3
xchg
push
pushl
cld
call
xchg
xor
jne
ljmp
add
or
bound
std
dec
outsl
test
sahf
adc
leave
incl
dec
cmp
ljmp
cmp
loop
xchg
decl
into
and
adc
push
orl
and
sub
push
cld
ljmp
subl
push
mov
sahf
add
ficompl
adc
test
sti
mov
mov
aam
jg
or
or
ret
mov
mov
add
dec
mov
or
jne
jp
lret
push
pop
fildll
data16
mov
rorl
pop
decl
mov
push
in
xchg
mov
mov
sub
lcall
mov
push
mov
xchg
mov
test
sahf
dec
ds
inc
jg
call
jp
mov
dec
adcb
scas
out
shr
cs
adc
incl
or
jl
loop
test
cwtl
inc
sub
jb
flds
mov
xchg
cwtl
push
mov
mov
mov
push
xor
into
xchg
adc
enter
push
test
xchg
mov
push
mov
sub
and
int3
pop
sub
dec
leave
insl
xchg
cmpsl
in
pop
jnp
cld
jmp
lds
pop
inc
cwtl
add
mov
fadd
and
cwtl
int
adc
icebp
xor
jbe
movsb
xchg
imul
js
or
mov
xor
incl
cmpsb
jae
push
xchg
jbe
movsl
cmp
or
sbb
dec
rep
pop
mov
xchg
xchg
dec
mov
sub
cwtl
outsb
es
push
fwait
sub
jmp
mov
add
add
adcl
cmp
sub
daa
stc
adc
fwait
cmp
jb
repz
mov
inc
xor
pop
sub
xchg
mov
pushl
scas
xor
scas
mov
xchg
cmp
sub
js
loopne
fiaddl
int3
adc
or
or
adc
and
hlt
call
sti
cmc
pop
and
adc
incl
and
inc
xchg
daa
push
xchg
les
push
scas
shll
push
mov
mov
jecxz
ret
mov
pop
xor
or
ret
ja
out
aad
mov
sub
mov
pusha
call
fwait
mov
fcoml
and
fneni(8087
xor
les
inc
mov
pop
inc
add
cmp
data16
sub
pop
insb
movsl
jnp
das
cli
aaa
pop
cmc
inc
stos
ljmp
loope
cli
lcall
loopne
mov
mov
add
fcoml
aaa
pop
notl
ss
mov
add
sbb
pop
cmp
inc
and
leave
and
or
jnp
aad
jae
sahf
push
jle
fucom
mov
jg
imul
in
aaa
imul
dec
outsb
xchg
decl
incb
sub
pop
jge
insb
pop
push
lods
nop
sub
mov
pop
iret
cmp
movsb
adc
das
push
cmpsb
subb
xchg
jne
xchg
lcall
cmp
test
popf
out
mov
imulb
lods
xor
cmp
das
mov
loope
lods
rorb
add
outsl
push
pop
fs
inc
idivb
push
repnz
pushl
fstpt
inc
mov
mov
test
call
adc
scas
and
jns
mov
xor
mov
clc
fimull
movsb
push
jmp
call
fnsave
lods
and
xor
into
add
add
mov
into
push
mov
xchg
pop
pop
shlb
hlt
jp
rolb
pop
lds
mov
out
outsb
in
ljmp
pop
stc
into
out
inc
out
sarb
lcall
pop
outsb
push
mov
dec
nop
lods
add
pop
mov
sarl
mov
and
imul
add
dec
je
push
pop
or
jl
mov
adc
inc
sbb
pop
or
iret
sbb
repnz
decl
aad
int
pop
inc
jns
insl
in
enter
loopne
sbb
test
adc
pop
pop
movsl
pop
les
bound
pop
jne
or
mov
lds
incl
adc
push
insb
xor
dec
jne
int3
mov
mov
dec
imul
add
inc
sub
fsts
mov
and
cwtl
call
add
push
mov
add
gs
cmp
orl
push
iret
std
int3
repz
psubw
jp
add
mov
in
dec
lcall
mov
ret
and
mov
iret
data16
cwtl
cld
loopne
nop
add
xor
sbb
test
leave
out
out
inc
or
enter
mov
outsb
dec
clc
mov
ds
rolb
pop
dec
or
lcall
rcrb
mov
and
pop
lret
pop
or
hlt
sub
or
in
fcompl
mov
aad
inc
mov
adc
pop
and
push
mov
mov
push
mov
pop
cld
int
and
popf
mov
add
stos
pop
cmpsl
cmp
or
sbb
repnz
aad
add
sub
dec
pop
add
dec
pop
mov
das
cli
call
push
scas
add
mov
lods
push
in
mov
sbb
inc
ret
int3
fstpt
lret
or
jmp
add
in
inc
lcall
pop
insb
cmp
or
ja
mov
xlat
ss
inc
in
or
cmp
inc
fs
mov
and
je
data16
inc
in
rorb
push
or
xchg
std
fistl
xchg
add
fidivrs
in
push
inc
jl
in
stc
lcall
ja
decl
push
fcmovne
hlt
push
lds
inc
out
int3
nop
pusha
and
jmp
inc
pop
movsb
inc
ljmp
or
insl
int
pusha
loop
pop
jb
dec
mov
pop
and
mov
bound
mov
fwait
jo
ja
push
adc
push
mov
lret
pop
sub
sbb
mov
mov
jmp
xchg
pop
sub
pop
push
cmpsb
data16
outsb
xchg
pop
mov
in
push
mov
inc
loopne
mov
mov
lods
gs
loopne
and
cmp
or
mov
call
das
inc
xchg
mov
jnp
mov
popa
and
push
neg
inc
mov
add
incl
gs
pushf
aad
xchg
aam
cmp
or
lcall
sub
outsb
in
data16
jg
js
shrl
arpl
mov
inc
pushf
outsb
push
in
inc
imul
aad
out
clc
inc
dec
lret
mov
cltd
rorl
push
add
jmp
or
push
push
movsb
sub
push
pop
push
jo
dec
fs
cmpsb
pop
cmc
jg
mov
jb
pop
xlat
aam
inc
sbb
jbe
inc
xor
aam
cmp
call
adc
adc
mov
out
test
test
jp
iret
fdivrp
call
lcall
pop
mov
xchg
enter
popa
push
loop
cltd
outsb
imul
hlt
jle
rcrl
sub
sub
loopne
incl
dec
out
inc
xor
xchg
jb
jecxz
jle
lret
cmc
pop
movaps
mov
jg
lea
cli
adc
mov
fistps
fisubrs
mov
jl
push
or
lock
les
imul
fisttpl
fwait
aaa
popf
ljmp
nop
cltd
push
enter
gs
add
iret
add
leave
ret
cmc
cmpsb
and
cmp
inc
dec
adc
inc
es
push
std
pop
repnz
inc
add
or
ljmp
inc
into
and
jbe
leave
popf
dec
in
fxtract
inc
mov
lea
ficoml
mov
inc
pop
sbb
pop
xchg
testl
jge
push
lods
mov
cmp
sbb
int
adc
adc
pop
inc
pop
jg
lcall
aam
push
add
adc
sub
ljmp
movsb
decl
adc
nop
and
je
push
or
xor
ljmp
cmp
loopne
sbbl
mov
pop
leave
xchg
cmp
inc
pop
stos
test
ljmp
stos
push
pop
clc
sub
pop
and
mov
sbb
incl
or
test
pop
xchg
cmp
loopne
outsl
lcall
jg
or
or
loope
enter
dec
popf
lea
leave
sar
dec
sar
lcall
push
js
in
push
push
push
insb
pop
std
and
repz
jne
lahf
mov
inc
loope
ja
lahf
dec
adc
pushl
std
and
into
push
adc
mov
test
xorl
cwtl
dec
dec
dec
fcmovnbe
xchg
or
add
sbb
dec
or
int3
or
or
fistl
jecxz
dec
or
fwait
push
lods
in
stos
lcall
pop
mov
scas
xchg
lods
fstps
xor
fdivrl
pushl
sbb
pop
ror
jge
popa
xchg
icebp
in
loope
cmpsb
loopne
push
addr16
cmp
insb
push
jmp
push
out
pop
cmp
mov
dec
scas
mov
push
push
sbb
push
jns
popa
adc
call
lcall
adc
loopne
mov
dec
rolb
movsl
dec
ficomps
push
or
loopne
xchg
mov
ss
dec
cmpsb
xchg
sub
add
dec
xor
mov
dec
mov
gs
lret
stc
cmp
sar
jp
movsl
movsb
lods
xor
arpl
mov
sar
push
in
icebp
cmpsl
jg
sub
nop
xor
sarl
imul
mov
popf
sti
or
cmc
lcall
mov
lods
ficompl
andb
adc
sub
das
cli
mov
fdivl
jge
lds
mov
mov
inc
pop
lock
add
cli
dec
inc
out
cs
imul
clc
ljmp
push
xchg
outsb
xchg
and
out
notl
call
fiadds
mov
outsb
ss
xor
ficompl
cs
xchg
inc
push
jmp
push
cmp
lcall
pushl
mov
cmp
cltd
fstps
roll
pop
jae
pushf
int
cmpsl
loop
jg
inc
std
or
movsb
jae
mov
lea
cmc
mov
lds
pop
jp
fst
dec
mov
add
pop
mov
ljmp
cmpsl
mov
shr
xor
mov
stos
add
xor
sbb
sub
push
sub
ljmp
xchg
test
xchg
sbb
xor
dec
mov
push
jb
cwtl
shrl
xlat
out
aaa
mov
ljmp
inc
sbb
sub
xchg
orl
jl
in
adc
adc
add
lcall
repnz
into
add
xchg
inc
inc
jmp
fsubrs
adcb
xor
xchg
push
scas
xchg
mov
jg
xor
mov
mov
ss
mov
or
leave
pop
imul
aaa
mov
sub
rcrl
int
call
push
clc
jmp
push
sahf
popf
dec
daa
pop
sub
lahf
nop
in
and
leave
rep
insb
push
shll
xlat
mov
icebp
pop
inc
fiaddl
push
cmp
jecxz
mov
movsl
pop
sbb
mov
jp
data16
mov
xor
or
mov
mov
icebp
ljmp
add
lods
or
sbb
sbb
fwait
hlt
xor
mov
xlat
lret
ljmp
lcall
sbb
push
mov
jo
mov
call
mov
mov
adc
dec
mov
jb
sub
mov
fwait
shrl
jecxz
cmp
incl
movsb
push
push
iret
sbb
xchg
mov
push
subb
cmp
in
push
adc
pushl
rcl
icebp
jo
outsb
mov
mov
imul
loopne
add
pop
cltd
idivb
call
lret
push
cmpsl
movsl
bound
repz
scas
mov
push
fistpl
ljmp
adc
pop
pop
cmp
test
inc
out
dec
pop
fnstsw
daa
rol
pop
add
xchg
bound
mov
std
push
adc
pop
mov
adc
aam
inc
cmp
cltd
jmp
xor
push
sbb
rorb
jno
hlt
std
fisubrl
jb
aam
cld
jg
fldl
push
adc
enter
out
pushl
cmpsb
mov
push
jae
adc
loope
mov
out
jo
or
add
mov
jb
cmp
pop
lcall
cmc
adc
decb
cmp
push
push
lcall
mov
aam
out
subl
cltd
cmp
push
cmc
inc
sub
hlt
in
call
push
test
push
fsubr
mov
js
adc
push
pop
mov
dec
mov
incl
in
int
loopne
jp
dec
mov
js
inc
inc
add
mov
scas
xor
addr16
iret
pop
call
xorb
xor
jle
xchg
cs
pop
in
insl
xlat
jno
push
lcall
push
add
das
adc
xchg
hlt
xchg
out
mov
loop
stos
dec
incl
or
call
stc
fwait
daa
jl
iret
sarb
pusha
js
mov
filds
xchg
aaa
lahf
ljmp
test
xchg
sbb
inc
sbb
jge
stos
ljmp
mov
jl
jb
mov
movsl
or
das
xor
xor
pop
lock
std
scas
call
in
pop
hlt
and
inc
add
fs
repz
push
jmp
jo
ror
inc
cmpb
imul
mov
jmp
incl
ja
mov
aas
and
icebp
js
xchg
fcomip
cld
pop
movsl
repnz
pop
jns
lea
lock
rol
xchg
nop
xchg
xchg
push
inc
mov
push
out
jae
addr16
outsl
mov
mov
mov
cmpsb
add
cwtl
jne
add
cwtl
mov
test
or
mov
dec
in
test
or
stc
cwtl
or
test
mov
dec
negl
inc
jmp
data16
cli
inc
pushl
outsb
dec
xor
push
iret
and
mov
aad
cmpb
cmc
lcall
mov
mov
xchg
js
xchg
jmp
fsubp
insl
ror
mov
mov
sub
lcall
call
testb
pop
pop
sbb
fcmovnbe
sub
arpl
arpl
add
push
ftst
push
xchg
cmpsl
inc
incl
push
cli
jne
pop
int
fsubrs
lea
insl
add
clc
xchg
and
mov
mov
jg
addb
mov
lcall
push
cs
lock
ret
xchg
push
jl
mov
pusha
xor
add
shll
mov
cmp
sbb
in
adc
ss
xor
mov
jb
and
loop
and
push
xor
stos
cld
jmp
andl
cltd
ss
adc
push
test
sbb
fistpll
push
lock
or
cltd
shrb
lock
inc
fisubrl
jmp
ljmp
sbb
mov
pop
outsl
pop
mov
mov
inc
sub
addb
pop
cmp
sub
jecxz
sbb
into
enter
leave
push
xor
fcomps
jae
fwait
pushl
bound
lret
stos
xchg
call
sub
icebp
enter
push
pop
call
cmp
ret
loopne
lcall
mov
popf
xor
not
cld
jns
mov
scas
cld
dec
jbe
lret
jge
mov
inc
inc
sbb
cmpsl
test
psubb
nop
fxch
scas
jl
rcll
adc
adc
jle
aam
gs
fildll
mov
fsubs
enter
shlb
inc
nop
sbbl
sub
add
daa
or
inc
push
and
jb
and
incl
push
loopne
shlb
rorb
inc
sahf
fs
mov
stos
cs
xor
das
mov
sbb
sar
decl
pop
shlb
jecxz
es
pop
mov
orb
sbb
loop
and
decl
or
lock
test
mov
out
movsb
lods
lcall
lods
add
lret
pop
movsb
sub
rorb
add
dec
pushf
push
sbb
xchg
roll
int
sbb
call
inc
add
stos
int3
out
xchg
xor
and
xor
push
mov
dec
pop
shll
jle
rcl
pop
incl
xchg
cli
push
add
aad
cmp
push
and
xor
call
fwait
lods
mov
loop
push
cmp
jp
mov
out
jae
mov
cwtl
mov
mov
incl
mov
mov
cmp
bound
xor
sub
ret
lock
mov
arpl
dec
in
xor
int3
add
pop
lock
push
in
std
jo
das
push
mov
add
cmp
leave
inc
xchg
popa
adc
pop
push
pop
sahf
jb
or
and
stos
movl
mov
jbe
push
sbb
fsubrl
repnz
push
ljmp
test
loop
rcl
jbe
xchg
fbstp
push
lods
xlat
shll
mov
or
in
mov
fimuls
add
dec
or
ret
mov
jmp
or
push
fwait
in
mov
ds
mov
inc
sti
mov
inc
cmp
and
dec
xchg
fbstp
mov
mov
scas
pop
or
int
ret
int
jne
int
mov
or
mov
cmp
xchg
dec
inc
in
dec
clc
adc
es
pushf
fisubrl
fwait
dec
scas
nop
into
stos
out
in
mov
inc
sar
jmp
sarb
gs
aas
jno
mov
xor
decl
pop
cmp
roll
push
jo
push
xor
ret
ljmp
pushl
pop
inc
call
int
mov
hlt
imul
in
cld
push
arpl
std
shlb
sub
or
std
fstpl
mov
xor
adc
hlt
push
mov
mov
shlb
movsl
pushf
mov
inc
sub
lcall
bound
xor
and
ret
or
jp
adc
pusha
cld
int
stc
loopne
adc
popf
mov
push
mov
mov
mov
inc
jmp
sbb
push
jns
jne
or
adc
mov
adc
cmp
xchg
in
xchg
xchg
xchg
lods
add
call
cwtl
dec
les
cmp
loopne
jecxz
std
popa
in
adc
pop
scas
sub
xor
xchg
sbb
jmp
fmuls
jb
xor
cld
xchg
or
push
cmpsb
jmp
pushl
inc
cwtl
fdivs
add
inc
enter
jbe
mov
sahf
lods
pop
andb
sbb
jnp
jecxz
sti
in
push
cmp
mov
incl
js
iret
jmpw
inc
adc
and
pop
outsb
push
test
ljmp
dec
jno
jp
jecxz
test
and
adc
xor
lock
mov
mov
cwtl
xchg
pusha
cli
xor
lock
xor
movsb
decl
and
and
pushf
pushf
jmp
mov
jl
push
adc
jnp
dec
push
movsl
mov
bound
pop
int3
inc
lret
add
dec
fsts
in
adcl
ds
fcomip
hlt
adc
xchg
lret
ss
rorl
popa
inc
call
test
ljmp
xchg
push
mov
imul
jg
sbb
mov
and
and
jmp
mov
scas
xchg
fcompl
xor
push
mov
orb
lret
add
sbb
fs
jecxz
push
cltd
and
out
inc
lret
cmp
jecxz
in
adc
sbb
decl
and
mov
es
pop
lock
mov
push
cmp
outsl
and
add
xor
bnd
pusha
xlat
xor
push
push
mov
xchg
and
xor
adc
repnz
decl
mov
sbb
les
add
pushf
lds
lcall
dec
mov
movsl
add
lods
loopne
pop
jl
jmp
sub
dec
cmp
inc
into
push
bound
ja
jmp
or
inc
lret
lds
out
adc
pusha
pop
rorl
es
loope
add
jb
adc
sub
xchg
cmpsb
test
jmp
pop
mov
xchg
sbb
and
cmp
inc
shl
es
sub
ja
mov
sub
mov
outsl
in
fnsave
fcmovnb
jp
jb
sub
inc
xor
in
mov
dec
fstpl
hlt
jne
out
and
stos
dec
push
pop
and
jmp
mov
dec
out
sub
ffreep
in
xchg
ret
push
cmp
shlb
hlt
cmpsb
out
or
sbb
ret
addr16
repnz
enter
call
and
jne
lds
fcmovnu
add
stos
mov
push
xor
out
adc
lcall
sar
add
pop
cwtl
ret
mov
fsubrs
movsb
xchg
sbbl
or
cltd
and
push
xor
call
mov
or
jbe
fs
inc
push
xchg
incl
incl
cmp
adc
push
ds
insl
movsb
lcall
inc
rorb
out
jae
aaa
or
and
lock
imul
xchg
push
xor
jg
cmp
int3
xor
push
test
cmpsl
cmp
add
js
xchg
adc
pushl
xor
cmpsl
push
push
jae
pop
pushf
in
adcb
cmpsl
xchg
xor
fiadds
stc
call
jmp
jl
push
xor
or
adc
sub
xlat
insb
idivl
into
cmpb
jb
xor
xor
rol
mov
or
dec
enter
dec
push
pop
adc
in
out
test
jae
pop
loop
jno
cli
pushl
outsl
lret
or
leave
mov
outsb
sub
cli
jmp
call
and
mov
jge
push
test
popa
mov
dec
insl
sbb
call
hlt
fimull
xor
stos
push
arpl
int
sbb
in
pop
mov
mov
lcall
insb
jne
adc
sub
sbb
push
mov
in
stos
repz
pop
push
cli
cmp
fldcw
jno
stos
mov
decl
add
push
div
call
sub
dec
decl
xchg
jecxz
nop
stos
fwait
lea
or
fsubrs
ret
xchg
jmp
push
push
pop
pop
das
call
decl
dec
jl
sbb
fistl
and
arpl
gs
mov
incl
jbe
bound
push
mov
cmp
dec
and
or
into
cmp
test
push
xor
pop
dec
pop
lock
cwtl
lea
imul
repz
sbb
cs
xor
jecxz
addb
stc
repnz
pop
jb
push
and
cmp
jl
shrl
dec
leave
shlb
dec
iret
roll
fnstsw
inc
cld
and
jmp
jl
dec
rcrb
dec
fists
adc
xor
push
push
mov
shrl
ret
lahf
sahf
fbstp
ds
scas
cli
mov
stos
lret
jmp
icebp
inc
fmul
dec
adc
aaa
mov
add
cmp
lods
and
icebp
fists
mov
cmpsl
scas
xor
inc
push
fs
mov
jnp
inc
dec
cld
decl
xchg
mov
xchg
adc
adc
add
js
outsb
sbbl
incl
cld
data16
xchg
xchg
clc
sub
scas
mov
iret
pop
call
cmp
push
inc
out
notb
mov
cmp
jo
add
int3
popf
fs
addr16
cmpsb
ret
cmpsl
and
and
pop
cwtl
aam
mov
xchg
hlt
test
jg
test
lcall
loopne
enter
outsl
dec
cld
add
dec
out
sub
decl
inc
mov
int
mov
cld
fmuls
subb
scas
push
dec
pop
or
ljmp
fs
shll
shll
or
in
or
xchg
rol
rol
ds
rol
sub
stos
stos
dec
cmpl
lods
lods
ljmp
in
mov
mov
mov
out
gs
xor
add
gs
xor
inc
pop
dec
xchg
add
sbb
cmpsb
rcll
call
outsb
push
pop
popl
jmp
insb
test
pop
iret
push
aaa
cwtl
orb
ds
pop
ljmp
push
mov
adcb
jg
sahf
les
sbb
push
inc
pop
call
mov
jmp
testb
shlb
xorb
jle
xor
jmp
and
mov
enter
scas
or
add
add
mov
push
xlat
sbb
imul
into
or
jae
xor
scas
cmpsb
cli
and
jmp
daa
and
lret
and
push
push
adc
mov
xchg
sbb
ljmp
add
cmp
rclb
arpl
rol
daa
fldenv
addb
out
dec
jge
fbstp
in
or
into
xor
jg
adc
bound
jnp
sub
test
pop
test
add
cld
cs
lods
cmpsl
push
call
sub
test
adc
mov
cld
aad
sbb
das
and
fisttps
push
push
jecxz
lcall
cmc
aaa
and
and
or
dec
fs
data16
daa
adc
cmc
or
or
lcall
ret
dec
cmpsl
out
dec
loopne
mov
push
xor
push
add
cmp
lahf
mov
mov
dec
and
ljmp
test
mov
jmp
adc
adc
and
imul
leave
lcall
cld
test
push
push
lds
inc
packuswb
adc
jmp
inc
lret
jae,pn
movsl
call
pop
mov
jle
adc
jecxz
outsb
pop
adc
out
jb
lods
addb
iret
and
jae
cmp
shrl
shl
jg
scas
sub
in
mov
js
aas
rcll
push
mov
mov
inc
sbb
cmp
das
mov
fwait
xor
xchg
int3
mov
repnz
filds
adc
pushf
add
sbb
jno
pusha
and
popa
and
out
push
jmp
data16
js
fisttpll
and
js
outsb
push
push
pop
call
mov
push
sbb
pop
subb
mov
movb
shll
lahf
aam
sahf
das
cmp
mov
bnd
mov
or
stos
lea
jl
sbb
out
adc
and
dec
shlb
out
es
pop
sub
ret
cmp
in
sub
add
cli
jg
mov
and
in
inc
add
jae
jl
pop
mov
pushl
in
shrb
fcmovnb
fadds
nop
cmp
add
adc
sbb
and
out
movsb
sub
cwtl
xchg
adc
adc
popl
jl
sbb
mov
bound
imul
cs
xchg
push
aam
lods
jmp
add
scas
shrb
or
jno
xchg
dec
loope
push
clc
lcall
mov
popa
ds
inc
adc
jg
and
dec
xor
stos
loop
out
pop
mov
pusha
scas
fdivr
pop
fstl
mov
out
mov
fisubl
mov
mov
or
mov
lcall
and
add
jmp
mov
jae
mov
or
adc
and
pop
jbe
lea
jg
fcompl
scas
mov
xchg
shrl
xor
cmp
shrl
or
push
stos
fisubl
andl
push
mov
dec
push
jbe
icebp
fwait
push
xchg
mov
mov
pusha
push
inc
xchg
push
or
add
cld
ljmp
roll
movsb
push
and
mov
scas
push
pop
ljmp
add
push
cmp
lods
jbe
fs
jo
xor
fimull
fisubrs
or
mov
mov
inc
xlat
mov
or
jmp
sub
call
hlt
sub
into
mov
shl
lret
fidivs
pop
lahf
adc
lret
jmp
or
call
sub
jo
mov
imul
call
jae
jae
andb
gs
iret
aas
push
jb
clc
data16
lods
xor
popf
push
negl
xchg
loopne
push
jne
xor
sub
stos
xlat
jle
sub
inc
fdiv
ds
aam
incl
pop
and
mov
jns
inc
bound
dec
aad
lret
lcall
jns
push
imul
bound
xchg
xchg
imul
add
gs
or
sbb
or
nop
int
adc
xchg
lods
jg
pop
vandnps
sbb
push
sub
ljmp
push
push
fs
dec
pop
adc
call
outsl
jg
std
push
nop
add
ja
jmp
or
js
mov
mov
mov
int3
scas
cmp
aaa
cld
ljmp
in
lea
data16
test
popaw
fsubrs
jp
mov
dec
ljmp
aaa
sbb
jbe
adc
in
xchg
adc
jne
xorl
clc
xchg
cmp
mov
push
mov
adc
pop
jo
lcall
xor
adc
or
jp
inc
jl
jp
add
fcoml
stos
scas
xchg
lock
jno
sar
xor
bound
or
jge
outsl
imul
lds
xchg
sti
mov
incl
sbb
arpl
adc
out
mov
xlat
mov
imul
jecxz
test
push
lock
addr16
push
ds
cmp
ds
flds
cmpsb
and
pop
inc
pop
or
adc
or
loopne
iret
xor
xchg
add
pop
mov
stc
lods
xchg
mov
outsb
and
jb
xchg
jno
loopne
cltd
iret
xchg
pop
cwtl
outsl
mov
dec
push
xor
scas
mov
lret
dec
jmp
insb
daa
scas
xchg
je
incl
cli
pop
insl
push
test
mov
outsb
orl
inc
ljmp
push
shl
in
mov
std
mov
jae
fs
lock
call
insb
add
xor
dec
inc
lods
xor
cmp
sbb
inc
pop
add
mov
and
ss
xchg
decl
pop
mov
sbb
cwtl
mov
enter
adc
xor
leave
clc
pop
hlt
mov
stc
mov
pop
imul
xor
decl
sbb
pusha
insb
jmp
xor
cli
fs
xchg
dec
mov
sarl
fcoms
pop
xchg
pop
sub
cmp
incl
rolb
pop
xor
mov
or
lods
ret
add
jg
pop
lods
dec
ljmp
xor
aas
out
imul
jns
push
jb
mov
inc
inc
xor
mov
lcall
shr
outsl
incb
mov
and
inc
shr
push
adc
jne
xchg
int
cli
dec
into
inc
ljmp
adc
adc
dec
in
stos
inc
fldenv
mov
push
mov
movsl
daa
pop
test
pop
in
inc
out
sub
add
outsl
push
inc
lret
jg
pop
mov
or
out
jb
cmp
fstp
cwtl
movsb
mov
or
dec
xchg
std
ja
cli
cmp
movsl
mov
lock
push
inc
or
call
hlt
inc
std
pushl
pushf
lcall
mov
ficoms
push
repz
cmpsl
jg
inc
jbe
sub
or
ret
popa
mov
scas
sbbb
xor
ljmp
call
xor
inc
rol
mov
or
ret
xchg
fadd
and
arpl
add
lods
test
sbbb
add
jae
xlat
aam
inc
ja
and
in
pop
leave
aam
fisttps
or
out
push
pop
adc
sbb
xchg
and
dec
gs
mov
cmp
fisttpl
sbb
xchg
lcall
mov
in
xchg
fcoms
xchg
fwait
jp
pop
lcall
call
and
xorl
lcall
jnp
adc
push
mov
push
xchg
loope
push
loope
jnp
and
and
ljmp
sar
call
gs
cmpsl
hlt
push
cwtl
xor
jae
and
mov
sti
repnz
dec
cmp
rol
mov
js
shrb
out
mov
mov
xor
sub
jbe
dec
pop
and
lahf
repnz
imul
xchg
mov
movsb
das
mov
daa
dec
das
cmc
cmp
xor
sub
test
inc
dec
inc
inc
jge
push
sub
nop
sub
lcall
divb
daa
and
pop
mov
iret
test
jb
lock
jmp
xchg
mov
jg
pop
pop
xchg
sbbl
xor
ret
ljmp
ljmp
jmp
into
arpl
repz
out
sub
sub
adc
pop
ljmp
faddl
loope
aas
jmp
pop
add
xchg
inc
js
inc
jg
mov
incl
dec
daa
xchg
mov
fidivrl
add
add
cmp
cmp
dec
xchg
inc
incl
mov
ja
mov
pop
xor
movsl
outsl
sub
jg
or
popa
adc
jp
mov
jbe
pop
push
ret
push
mov
aad
jmp
jmp
leave
ljmp
ljmp
aam
jl
lret
leave
scas
movsb
test
in
lret
loop
sti
ss
lcall
xchg
xor
es
cmp
pop
xchg
ljmp
call
in
lock
jnp
add
mov
fmuls
push
or
faddl
outsb
aad
cmp
inc
push
xor
xchg
loop
mov
lcall
add
jg
sbb
loope
xor
mov
mov
pushl
xchg
enter
mov
push
cli
mov
push
lods
das
shrl
or
pop
jmp
pop
testb
inc
jns
mov
mov
jecxz
sbb
negb
inc
cld
mov
shll
adc
sbb
lcall
js
or
xorb
fidivrl
inc
gs
adc
aad
loopne
das
cli
filds
ds
out
jno
mov
push
mov
jg
daa
add
je
mov
cmp
das
test
cmp
in
imulb
lock
shlb
cmp
pushf
sbb
adc
hlt
and
jg
push
mov
sub
fbstp
addl
mov
mov
call
stc
adc
mov
mov
xor
pushf
cmp
pop
cld
pop
adc
mov
cmp
xchg
add
dec
addr16
subb
and
sub
ret
ljmp
ljmp
adc
xor
mov
mov
popf
mov
jg
mov
dec
pop
inc
loopne
jg
mov
pop
mov
mov
lods
clc
adcl
fcos
pushl
push
fimuls
repz
or
inc
je
push
mov
mov
cli
jae
out
stos
sub
jnp
ret
add
sbb
cmp
loope
mov
sbb
rol
lods
and
lock
insl
fcmovnu
cmp
repnz
fnstsw
xor
fwait
sub
sarb
in
mov
dec
fwait
ret
adc
dec
mov
push
inc
xchg
or
cmp
stc
addb
pusha
cmp
call
mov
decl
pusha
sub
xchg
stc
adc
pop
adc
mov
sub
xchg
cld
lcall
fldl
call
nop
sbbb
sbb
and
sbb
inc
push
ljmp
jle
into
add
or
mov
int3
movsb
adc
incl
cld
jmp
aad
push
dec
inc
dec
jmp
in
jp
test
jbe
lcall
inc
pop
je
cmp
popf
push
out
dec
lods
leave
adc
dec
sub
pushf
pop
addl
pop
ss
xchg
mov
push
out
mov
adc
add
inc
pop
jg
jmp
stc
aad
mov
push
adcl
push
pop
gs
call
dec
adc
imul
leave
push
jne
outsl
cmpsl
xor
push
test
push
push
cmc
ljmp
xchg
push
mov
inc
push
sub
jae
aam
pop
or
inc
movsl
sbb
dec
and
jae
in
mov
jbe
xlat
mov
sahf
mov
leave
pop
outsl
add
jg
rcll
test
pop
mov
popa
ljmp
add
adc
xchg
sub
mov
adc
mov
cmp
in
mov
aaa
in
mov
ds
ret
or
clc
and
out
xchg
sbb
mov
xchg
adc
adc
outsb
pop
popa
add
inc
mov
mov
incl
jge
sbb
adcb
mov
pushl
jge
in
pop
adc
rcll
xchg
test
push
imul
pushl
test
jne
inc
jle
int
pop
jb
push
popf
jbe
sub
mov
lcall
iret
aaa
xor
jecxz
pop
xchg
dec
ds
sbb
stos
mov
pop
leave
ljmp
sbb
andl
mov
mov
jp
and
call
and
movsl
mov
push
dec
enter
dec
inc
adc
cmp
adc
data16
pop
out
leave
push
outsl
fistl
sub
incl
add
sub
lea
cwtl
mov
mov
aad
incl
xor
call
xchg
int3
fildl
jge
imul
ljmp
stos
and
lahf
jg
imul
clc
das
xor
and
cld
jmp
xchg
xchg
cwtl
add
pop
decl
ret
pop
lcall
pop
pop
mov
cmpsb
xor
lock
cld
lcall
addps
ret
jo
or
ret
mov
inc
xchg
lea
and
cmp
movsl
ss
add
pushl
call
loopne
ljmp
jbe
mov
dec
stos
xor
cmp
insl
cld
les
xor
mov
mov
rcl
push
in
ret
popa
xchg
dec
cwtl
jb
lds
scas
test
into
push
mov
fdivp
dec
inc
insb
inc
sahf
lock
cltd
and
icebp
jne
stc
sar
or
cmp
xchg
rclb
sbb
repnz
fs
jnp
jmp
jnp
icebp
xlat
mov
mov
jae
sub
test
mov
pop
call
call
decl
cmp
cmp
clc
test
mov
xor
push
es
adc
mov
push
xor
loop
lcall
dec
aas
inc
xchg
dec
test
and
pop
pop
rclb
test
push
inc
push
call
sbb
pop
lods
lea
dec
sub
clc
pushl
sbb
pop
lock
jae
and
jl
cmp
add
lods
popa
push
scas
cmp
ljmp
loop
inc
mov
movsb
stc
loope
ss
dec
or
xchg
insl
add
push
adc
arpl
inc
mov
lret
sub
mov
test
scas
movsb
mov
mov
push
movsb
mov
aas
rcr
daa
into
sub
dec
rcll
cmp
jg
decl
lahf
and
into
test
sahf
jge
push
jns
sbb
cmp
jne
mov
xchg
leave
adc
jo,pt
jmp
jge
ret
mov
sub
mov
jg
cmc
and
cltd
out
adc
popf
sub
mov
and
push
leave
mov
lock
push
xor
and
popf
stc
push
ljmp
shl
rcrb
sti
jp
push
js
dec
mov
xchg
xchg
mov
shrl
push
loopne
call
fldenv
fcoms
subb
flds
insl
lret
mov
and
test
leave
jecxz
pusha
push
jp
loope
out
add
loopne
sbb
test
aad
sbb
dec
ss
incl
mov
stos
push
add
mov
add
mov
push
fsubrl
andb
rorb
inc
mov
mov
mov
repnz
jg
inc
loop
out
hlt
pop
mov
cld
jmp
cwtl
lahf
and
or
addb
aad
jne
add
xor
das
mov
adc
or
xlat
mov
enter
lcall
ficompl
inc
sbb
or
xor
mov
add
fcmovu
and
decl
xor
sub
test
mov
lods
xor
dec
mov
pop
std
cltd
xchg
es
imul
das
sub
xor
mov
mov
dec
cli
call
dec
jmp
sub
loopne
call
fmuls
mov
xor
sbb
sub
outsb
mov
add
and
mov
jo
call
push
xchg
push
test
lcall
incl
js
mov
sbb
into
add
push
pop
in
test
sbb
lcall
dec
das
sbb
stos
imulb
sbb
pop
fs
cmp
xchg
sbbl
sub
push
and
sbb
push
leave
movsb
mov
sub
repnz
fisttps
push
mov
les
xor
pop
ss
loope
popf
mov
inc
mov
mov
cwtl
pop
xchg
sbb
cmpsb
pusha
adcl
fcmovnb
xor
jne
clc
call
xchg
adc
inc
add
jns
test
mov
rclb
cmp
lods
xchg
xor
pushl
repnz
std
xchg
iret
xchg
loope
aam
mov
push
xor
pop
cli
enter
jg
inc
cld
lahf
or
out
cmpsb
mov
arpl
push
mov
mov
jg
cmp
mov
mov
jns
adc
fcmovnb
xor
pop
sti
jl
fildll
call
rorb
jmp
test
jg
dec
mov
xor
push
add
sub
jb
movl
sub
pushf
fld
call
push
es
cmp
dec
mov
nop
lods
mov
decl
cmp
fistl
pop
or
pushl
dec
stos
mov
flds
lcall
lret
sub
dec
jmp
hlt
add
mov
fsubl
push
arpl
lods
or
mov
pushf
sbb
shll
stc
mov
xor
call
mov
and
sub
push
test
and
in
cmp
mov
or
je
mov
repz
cmc
das
or
repz
mov
cld
adc
into
jge
mov
push
dec
cmp
movsl
lock
mov
pop
lret
inc
jno
imul
stos
filds
addr16
push
insl
addr16
jge
sti
fdivr
mov
xchg
lahf
aam
xor
mov
loopne
test
cwtl
inc
jle
dec
mov
call
cli
sub
mov
daa
shlb
call
jp
xor
and
popa
aas
int
and
jb
testb
xchg
call
push
arpl
cmpsb
and
repnz
rolb
out
mov
jns
addl
je
dec
inc
jns
xchg
fldenv
push
mov
inc
js
popa
sub
xor
lods
aaa
cmp
lds
ljmp
clc
pushl
dec
test
repz
pop
inc
push
insl
rclb
out
repz
mov
pop
adc
test
mov
lcall
jecxz
cwtl
adc
fadds
rorl
pop
mov
sbb
inc
test
and
sti
incl
addb
inc
adc
add
adc
in
mov
in
lds
inc
pop
add
and
jg
repz
mov
jmp
push
decl
bnd
push
adc
bnd
push
xor
imul
dec
or
push
adc
pushl
cmp
sbb
xor
and
shrl
xor
xchg
jbe
mov
or
mov
les
xorb
subl
lcall
xchg
daa
push
cmp
cmc
xor
adc
inc
pop
adc
pushl
outsl
jbe
sub
mov
add
or
mov
mov
push
inc
inc
clc
ss
pushl
jae
lds
add
xchg
push
pop
dec
sbb
push
test
ljmp
aam
sbb
insb
aam
test
dec
mov
aaa
cli
and
mov
mov
ljmp
inc
test
cmp
pushl
xorb
mov
lods
sub
in
hlt
pop
xchg
call
pop
aaa
orb
inc
pop
lock
cmp
call
lock
inc
cmp
cld
push
fcomps
adc
mov
xchg
subb
cmp
xchg
test
sbb
dec
fists
and
andb
sbb
aam
repz
bound
xchg
sbb
xchg
mov
call
rclb
int
imul
sbb
mov
jl
adc
popa
adc
dec
loop
pop
mov
bound
xlat
or
jmp
jns
repz
pop
pop
jno
cmp
imul
lea
mov
cmp
cltd
fisubs
mov
jmp
aaa
aaa
fidivl
dec
mov
cmp
incl
adc
test
bound
inc
jl
test
aad
icebp
push
cltd
pop
jae
mov
xchg
jle
dec
ss
inc
pop
outsl
xchg
mov
pop
push
add
lock
das
jmp
push
aaa
mov
popf
inc
test
or
lcall
mov
and
dec
loope
imul
cld
xor
adc
jge
mov
add
jo
jp
adc
leave
and
xor
dec
inc
pusha
mov
push
lret
pop
test
jns
mov
incl
inc
push
pusha
loope
cmp
adc
stos
pop
orl
mov
cmpsb
xchg
dec
ret
adc
jmp
sbb
jb
pop
sbb
sub
je
adc
sbb
daa
sub
xor
mov
adc
adc
ja
push
jnp
jae
in
inc
shr
and
push
pushl
cld
decl
xor
cmc
nop
pusha
shrb
shlb
push
jne
out
ljmp
push
cmp
addr16
inc
sbb
add
rolb
stos
pusha
inc
mov
pop
lcall
lods
loope
push
in
jae
mov
push
cltd
jg
push
or
jmp
dec
and
ds
xor
lcall
mov
jl
cmp
ret
xor
inc
shll
daa
and
test
mov
cld
cmp
push
adc
bound
xor
push
cmp
decl
and
xchg
inc
xor
inc
popf
mov
jb
and
xchg
call
cmpsb
lock
sub
push
shll
jo
repnz
mov
adc
jns
mov
pop
mov
mov
xchg
fwait
sbb
mov
incl
das
sbb
lcall
adc
sub
inc
pusha
cltd
test
cmpl
sbb
inc
and
dec
addl
cmpsb
fildll
addb
fmuls
cmpl
cmpsl
fmull
lcall
xchg
sbbb
pushl
jo
xor
test
ljmp
jno
imul
adc
test
pop
inc
inc
cli
jmp
adc
sub
pop
adc
ljmp
imul
push
adc
leave
add
xchg
xchg
daa
sbb
add
jmp
mov
xchg
mov
sbb
push
arpl
test
test
adc
jg
mov
addr16
mov
jmp
imul
stc
cmp
mov
mov
push
or
cmp
ficompl
inc
ljmp
lret
inc
mov
push
or
cmp
shrl
add
ljmp
rcrl
fmuls
cmp
or
ljmp
and
mov
xchg
push
cmp
fbstp
imul
push
cmpsl
jb
push
sbb
sub
add
movsl
mov
enter
outsb
mov
jbe
sub
lcall
loope
pop
arpl
or
lcall
test
dec
ss
sahf
test
cmp
ljmp
mov
lcall
mov
inc
add
dec
sub
lods
and
ja
sbb
mov
cwtl
jns
and
mov
push
jg
cmp
or
sub
xchg
movb
lods
push
imul
cmp
sarl
mov
jbe
mov
adc
sub
mov
dec
in
loop
popf
in
add
lods
call
and
insb
out
mov
xor
cmp
and
lcall
jge
mov
push
dec
outsl
sbb
xchg
subb
dec
xchg
xchg
addl
cli
cmp
orl
sub
addl
or
sbb
pop
sub
adcl
sahf
cltd
push
cwtl
and
xorl
decl
add
mov
cltd
mov
mov
mov
ret
call
test
mov
jae
test
pusha
cmpsb
lds
add
pop
push
insb
call
jmp
cwtl
mov
scas
xchg
imul
popf
inc
inc
adc
jns
out
clc
pushl
call
ja
inc
pushl
jns
mov
andl
push
jns
incl
add
sub
and
int3
int3
pop
adc
bound
gs
loopne
dec
shlb
clc
arpl
inc
imul
das
add
xor
test
jge
stos
xor
mov
inc
das
mov
cs
dec
out
or
stc
sbb
xchg
loope
xchg
jnp
mov
in
imul
dec
pop
sub
pushf
jl
ret
rorb
jns
nop
int
cmp
cmpsb
mov
mov
jbe
add
cmp
adc
sub
push
xchg
jno
daa
lea
adc
lcall
inc
ret
pop
sub
rolb
and
dec
and
xor
incl
cli
movsl
xchg
js
iret
push
and
xchg
sub
adc
dec
scas
dec
sbb
inc
popa
mov
cmc
mov
arpl
and
pushl
mov
call
outsb
or
imul
pusha
push
xor
jno
sbb
push
sub
mov
fistl
sub
jns
mov
pop
iret
testb
push
xor
pushl
push
cli
dec
mov
lods
dec
inc
lcall
adc
jg
bound
lods
gs
out
fisubrs
mov
leave
cmp
ja
jl
sbb
mov
clc
inc
shlb
jg
add
ret
cltd
stos
sub
mov
lods
movsb
cmp
lcall
lret
jo
pop
sti
pushl
fisubrl
mov
scas
arpl
aas
repnz
sub
adc
int
movsl
jne
sub
jg
and
jg
xorb
int3
aaa
lret
xchg
cmp
mov
sub
imul
adc
add
add
cmc
stos
es
clc
mov
pusha
mov
stos
dec
fstpt
ljmp
push
jo
sub
stc
pushf
inc
cmp
xlat
pop
shlb
ljmp
vpsravd
cmc
jp
gs
insl
push
fnstenv
xchg
jmp
fdivr
lcall
lods
jb
aaa
not
aam
and
sbb
nop
push
imul
sub
jae
lods
dec
pop
ljmp
cmp
cmp
xchg
mov
popf
clc
sar
incl
movsl
fistpl
pop
aas
mov
adc
shrb
jg
xchg
arpl
sub
aad
scas
int3
jl
aam
inc
pushf
mov
push
xlat
add
push
shll
stos
mov
dec
push
in
fs
push
popf
daa
jp
inc
fbld
sub
mov
dec
xlat
mov
jmp
in
cmp
jl
stc
mov
js
sbbl
lds
push
decl
xchg
dec
stos
xchg
mov
push
pop
dec
inc
sub
fadds
xor
fcmovb
pop
sbb
mov
xor
cmc
fiaddl
pop
pop
lock
cs
mov
xor
adc
decl
dec
sbb
mov
cs
in
adc
ja
clc
pushl
cmp
push
cmpl
lcall
icebp
repnz
iret
pushf
sub
mov
int
dec
jae
fsts
in
xor
pushl
lea
mov
pop
pop
inc
push
dec
icebp
stos
pop
mov
xchg
inc
std
pop
or
imulb
das
mov
fbstp
and
pop
jns
push
jg
mov
dec
inc
out
inc
cmp
and
or
decl
lods
insb
mov
hlt
jmp
xchg
popa
xchg
push
test
nop
add
jo
int
sub
mov
and
lcall
add
and
lcall
filds
sub
adcb
mov
mov
dec
js
cmp
call
out
and
gs
xor
call
push
or
stos
cltd
test
adc
ret
jg
dec
call
xchg
adc
adc
push
rclb
jg
stc
leave
jmp
addr16
incl
mov
push
out
xchg
cwtl
in
js
daa
negl
mov
sub
clc
sbb
in
fbld
cmp
out
aad
fmuls
push
aam
sbb
call
fcomps
jno
sub
movsb
movsb
mov
or
cmp
stc
mov
mov
pop
in
sti
les
jg
xchg
ficoms
xor
out
test
imul
dec
int3
cmc
addr16
jne
sahf
mov
cmc
es
inc
in
sub
repz
jg
call
shlb
add
outsl
xchg
cs
cmp
pop
sbb
jns
mov
leave
mov
ret
les
xchg
pop
inc
pop
std
xchg
out
lds
fistl
mov
hlt
out
xor
outsl
icebp
lahf
xor
inc
outsl
dec
stos
jg
pop
dec
cwtl
or
lar
sbb
test
pop
inc
pop
pop
rolb
cwtl
push
jecxz
mov
cmp
ss
pop
dec
jle
xchg
adc
mov
js
repz
cmp
call
or
and
sbb
js
jmp
es
or
xor
pop
movsb
inc
push
push
pop
imul
clc
lock
dec
mov
adc
jmp
jns
fisubrl
or
scas
les
insb
test
stc
hlt
imul
jmp
sahf
pop
jns
scas
sub
jbe
dec
pushf
shll
xchg
mov
jb
dec
shrb
xchg
fmul
stc
pop
inc
sbb
pushl
xchg
sub
jge
lds
aam
lock
xchg
mov
xor
clc
int3
xchg
jle
or
fisttpll
test
push
sbb
sub
mov
test
push
or
aaa
outsl
loopne
jge
jl
push
movsb
es
decl
sahf
xchg
dec
lock
xchg
dec
jb
jl
cli
decl
clc
incl
push
jl
sti
in
push
and
adc
add
jg
ljmp
int3
mov
inc
mov
xchg
mov
and
push
ficoml
dec
inc
mov
das
and
cmpsb
jae
cs
mov
decl
xor
sbb
cwtl
jle
int
movsb
sahf
sub
and
test
inc
cmp
and
fcomip
or
mov
hlt
push
adc
ljmp
hlt
push
jp
cmp
ljmp
int
cs
adc
stos
ljmp
int
cmp
leave
es
popf
push
xchg
and
lock
cmpsb
outsb
bound
sub
jmp
call
ljmp
in
or
xor
fs
mov
sbb
push
out
mov
dec
cmpsb
and
xor
push
xchg
jp
sub
mov
pop
jnp
push
mov
insb
insl
or
pushl
and
lock
xchg
fmuls
cld
sbb
and
dec
adc
inc
js
pop
add
ljmp
xor
ja
cmp
incl
dec
adc
or
push
jge
and
inc
sbb
not
jae
sbb
bnd
cmp
xchg
cs
out
mov
lret
shr
mov
or
call
xchg
lret
lock
out
fs
xor
int
jo
rcl
jg
or
cmp
sub
lods
xor
xor
mov
cmpsb
lret
sub
sub
inc
and
dec
fildll
sbb
es
xorb
mov
sbb
repz
dec
ja
adc
fldenv
sub
xchg
fcmovnbe
push
lret
decl
movsb
in
cs
push
mov
pop
decl
lahf
bound
xchg
rcrb
dec
stc
ret
push
pop
add
dec
and
jbe
insb
mov
cmp
dec
add
in
sbb
mov
out
xchg
cmp
jnp
test
sbbb
enter
pushl
mov
faddl
js
rcll
mov
dec
adc
ljmp
ret
jp
lcall
or
je
fld
insb
xor
sbb
jecxz
out
mov
lods
jl
mov
les
cli
cmp
xor
pop
pusha
push
pushf
ja
push
gs
dec
xor
popa
or
out
repnz
cwtl
cmp
dec
hlt
mov
enter
pause
xchg
out
and
mov
inc
mov
or
mov
xchg
pusha
test
roll
cmp
sub
jecxz,pt
xchg
out
ret
mov
ljmp
clc
ret
xor
cmp
inc
scas
adc
jmp
pop
push
pop
xchg
sahf
inc
scas
or
pop
adc
fildll
or
or
and
fwait
add
lock
mov
ds
dec
jmp
shr
sub
push
sub
fisttps
fwait
add
dec
aad
jmp
mov
ret
lret
pusha
add
xchg
pop
cmc
and
push
adc
cwtl
sahf
cmc
mov
leave
pop
mov
push
xor
dec
icebp
jne
push
mov
pop
push
ljmp
decl
mov
pop
dec
or
xor
xlat
cmpsl
shll
shl
mov
ljmp
decl
sbb
cmpsl
cmpl
sahf
shlb
sbb
fildll
xchg
pop
xchg
push
gs
adc
jo
cs
and
sbb
shll
loopne
nop
sar
mov
mov
xchg
inc
jo
dec
mov
pop
mov
enter
jmp
outsb
inc
es
pop
sahf
and
push
orb
rol
cmp
adc
call
or
push
mov
mov
dec
cmp
call
jnp
push
fsubrs
ljmp
daa
fisttpll
ret
sub
pop
pop
xlat
and
push
push
es
shll
sar
mov
mov
xor
sbb
in
pop
lds
mov
das
and
movsl
ret
push
movsl
add
or
jmp
jg
rcl
cwtl
insl
and
out
sbb
fisttpll
cmp
ljmp
xchg
xor
test
jb
sbbb
in
inc
xor
sbb
xor
adc
jg
push
pop
jo
nop
lods
ljmp
cmp
cmpsl
mov
jmp
das
cli
add
and
pop
dec
ljmp
mov
push
je
push
xchg
ds
xchg
lock
in
cltd
mov
decl
sbb
or
dec
mov
push
mov
push
ficoml
jmp
and
loopne
sarb
push
stos
jns
ja
decl
dec
shr
and
int3
in
pop
lcall
lods
leave
mov
pop
pop
add
push
mov
push
sbb
lcall
sbb
cmp
dec
mov
ficompl
xchg
xor
fdivr
adcb
nop
or
leave
jecxz
inc
movsb
jbe
jg
xchg
lea
sub
cld
stc
mov
sub
mov
xchg
lret
dec
or
addr16
or
adc
mov
decl
fucom
aaa
sarl
sbb
loop
adc
and
cmp
icebp
cmp
decl
js
js
in
inc
inc
in
out
rorb
jg
rorl
std
and
mov
adc
sbb
loopne
sub
mov
or
sahf
push
inc
inc
mov
in
sub
mov
pop
add
add
lock
adc
pushl
ret
ljmp
jl
mulb
clc
mov
cmp
push
mul
movsl
mov
imull
gs
mov
cmc
cmp
mov
icebp
mov
decl
adc
scas
push
jmp
dec
adc
and
icebp
arpl
xor
dec
hlt
imul
ljmp
sub
popa
mov
cmp
popa
stc
and
add
push
inc
js
dec
sbb
sub
mov
and
mov
fsts
int
jp
pusha
shlb
and
daa
jg
sub
call
outsl
leave
fldenv
push
inc
ljmp
mov
lods
stos
and
mov
cmp
xchg
inc
xor
jecxz
call
and
mov
lcall
into
jge
je
cmp
negl
nop
pop
in
sahf
jb
adc
es
mov
frstor
cmpsb
inc
out
imulb
xor
add
xor
andb
cli
call
cmp
jmp
cmc
xor
enter
aaa
lret
sbb
push
inc
add
add
fisttps
cmpsb
push
mov
inc
pop
movsb
and
mov
lock
shr
decb
jecxz
add
pop
ja
mov
popa
mov
movsl
pusha
std
sub
enter
in
push
je
clc
or
mov
fistpl
jg
mov
fsubs
mov
jns
mov
ljmp
ds
out
mov
dec
dec
cmp
push
aaa
sti
or
arpl
mov
mov
push
int3
js,pt
jecxz
imul
and
lds
xor
ja
sahf
and
in
dec
addr16
xor
test
aam
or
jmp
test
bound
sti
mov
xchg
shlb
scas
cli
jp
adc
test
xlat
outsl
andl
sub
add
ljmp
push
jle
adc
lock
pop
incl
les
jb
jge
in
inc
int3
xchg
mov
lods
and
fldenv
cwtl
mov
cltd
cmp
decl
jmp
sub
xor
pop
mov
cmp
repz
mov
xor
xor
call
or
mov
and
adc
shll
bound
mov
sub
adc
mov
xchg
xchg
stos
cs
inc
add
call
rcrl
subl
inc
cmp
scas
rorb
xchg
xor
pop
or
xchg
pusha
xchg
lahf
push
and
sbb
adc
sub
loope
pop
bound
sbb
icebp
rorl
inc
mov
shlb
inc
mov
sahf
sbb
aas
inc
mov
xchg
orl
and
mov
or
pushf
dec
hlt
pushf
push
das
clc
inc
or
pushf
insb
jne
lods
shll
jp
mov
mov
lcall
and
cmpsb
and
mov
je
cld
ljmp
inc
fwait
mov
xchg
scas
sub
sub
icebp
fidivrl
mov
loope
out
nop
fbstp
aam
sub
ljmp
cmp
mov
and
popf
cmp
aam
movsl
pop
fimull
mov
test
rcrb
ljmp
lret
xchg
mov
add
jns
add
inc
jnp
or
jp
inc
or
pushl
cld
mov
in
and
push
xor
add
cmp
cmpsl
js
mov
sti
sbb
mov
scas
stc
mov
dec
fs
outsl
pop
pop
sti
dec
or
bound
inc
pop
stos
cmpsb
xor
mov
cli
outsl
pop
nop
sbb
mov
clc
push
stc
bound
scas
mov
xchg
jne
and
pop
enter
mov
jle
decl
lret
add
shrb
call
jnp
repz
pop
mov
loopne
out
loop
push
jns
pop
sbb
sub
jl
lods
repnz
and
mov
hlt
cmp
mov
mov
mov
add
clc
xchg
sbb
ret
dec
das
sar
push
movsb
andl
adc
cmp
and
or
decl
roll
xchg
dec
enter
faddl
cld
ljmp
cmp
mov
ljmp
adc
loopne
xor
xor
aas
add
mov
or
incl
pop
or
fs
rorb
push
xchg
mov
fwait
mov
loop
mov
call
inc
mov
std
lret
pushf
arpl
mov
cmp
dec
xchg
lret
inc
pop
inc
jns
and
test
pop
jb
mov
stos
sbb
xor
test
mov
lock
push
and
adc
or
hlt
shrb
loopne
incl
dec
pop
ret
test
xor
jns
fdivrl
mov
sbb
repnz
int
mov
incl
cmp
cmpsl
sbb
out
sbb
cli
adc
cmp
adc
cmp
mov
loopne
sarl
jmp
dec
loope
imul
jp
add
jl
decl
cs
mov
mov
loopne
mov
cmp
and
shll
in
sti
movsl
aaa
les
pop
adc
jmp
adc
ret
xor
xor
or
and
pop
ret
xor
rclb
adc
add
decl
xchg
and
add
mov
hlt
mov
mov
add
les
stos
mov
push
lods
adc
subb
lods
sbb
add
clc
mov
sub
cmp
cmpsb
mov
mov
lcall
sbb
std
push
mov
test
stos
dec
mov
adc
pushf
xor
addb
cmp
pop
dec
xor
scas
push
mov
sarb
xor
in
mov
loopne
mov
call
jge
push
popf
or
test
adc
add
adc
cli
add
call
mov
dec
stos
aam
jp
fimull
pushf
shlb
pop
dec
cmpsb
cmp
call
pop
cs
lock
sub
test
mov
outsb
or
adc
test
ljmp
cmp
rep
xchg
aam
sbb
sarb
adc
jo
lahf
decl
leave
mov
shlb
dec
dec
shlb
dec
jb
add
sbb
fstl
lea
sbb
cli
fwait
sub
js
mov
jb
mov
cli
sbb
cmp
cmp
popf
enter
mov
mov
daa
dec
jge
rcrb
mov
xor
decl
and
adc
lret
lahf
dec
lcall
sahf
mov
and
scas
pushl
clc
fsubs
mov
fwait
adc
push
adc
fldl
or
pusha
sbb
cmp
or
popa
mov
sub
jg
call
adc
std
adc
cmp
or
xlat
mov
test
repnz
data16
add
subl
jns
mov
dec
add
cmp
ljmp
mov
lret
aas
jne
inc
pushf
int3
leave
mov
lcall
and
adc
gs
adc
pop
mov
sub
das
cli
loopne
mov
jg
mov
xor
pop
mov
dec
sbb
push
pushl
or
lret
or
xchg
sub
cmp
sbb
in
pushl
test
mov
adc
inc
push
out
test
out
add
add
sbb
scas
nop
aad
cwtl
push
or
pushl
in
sbb
fisubl
mov
incl
pop
push
or
fists
stos
push
mov
fcmovb
xor
xchg
sahf
cli
mov
inc
xchg
fildl
cld
pop
pop
fildl
cmpsb
jno
adc
pop
push
cmp
dec
rorb
and
orb
outsb
pop
add
push
inc
push
and
xchg
mov
lcall
pushf
mov
into
pop
lock
loope
and
or
cmp
pushl
sbb
jmp
loope
xchg
push
hlt
in
mov
les
jmp
mov
pushl
pop
pop
mov
pop
aam
adc
cmp
or
jle
dec
xchg
adc
sar
cmp
xor
mov
xorb
xor
rcr
cmp
push
jge
fstps
adc
lret
pusha
fcmovbe
and
or
incl
mov
mov
mov
sarb
jge
jge
gs
sbb
lods
decl
dec
incl
data16
inc
popa
aam
je
ret
lods
pop
leave
sbb
cli
cmp
and
imul
scas
cli
pop
sbb
into
loopne
rolb
sbb
add
ljmp
adc
mov
sbb
popaw
mov
xchg
enter
mov
jmp
icebp
mov
icebp
cli
test
push
push
sub
frstor
lods
or
lcall
lea
stc
jg
pop
mov
outsl
cmp
mov
fnsave
popf
cltd
xor
std
das
call
fsubrl
imul
icebp
push
mov
jae
inc
adcb
cmp
cmpsb
aad
pushl
mov
push
jae
fwait
sbbb
jnp
insl
sahf
mov
cld
push
rorl
mov
insl
mov
and
rorb
cmpb
xor
adc
pop
daa
adc
adc
jg
xor
fldt
mov
repz
push
cld
ljmp
jmp
push
dec
mov
mov
popa
gs
push
sub
add
test
push
mov
push
pushl
adc
xchg
xchg
mov
sti
inc
xchg
sub
shll
sar
push
push
sti
lret
fdivs
mov
pop
push
in
pop
sub
in
push
je
push
lret
dec
int3
dec
sbb
js
decl
dec
mov
add
cltd
jmp
mov
shll
mov
hlt
call
mov
in
sbb
mov
jmp
inc
adc
cmp
ds
mov
decl
rclb
int3
in
xchg
dec
test
mov
sub
mov
pushl
loopne
rcrl
pop
mov
pop
jbe
sbb
cmpsb
pusha
inc
call
inc
call
sar
incl
stos
out
lahf
jo
clc
jmp
ljmp
dec
inc
mov
data16
push
les
decl
fdivp
adc
int
out
js
ret
mov
sahf
lahf
mov
dec
pop
adc
loopne
psubb
aad
inc
mov
aam
sub
mov
lahf
stos
lcall
dec
jbe
push
fmull
sub
incl
jecxz
jns
jo
mov
test
add
shlb
inc
lea
dec
mov
pushl
sbbl
test
add
xchg
pop
or
call
fstp
adc
in
xchg
decl
mov
lods
push
add
or
or
pop
in
xchg
fwait
das
sbb
mov
out
shll
push
and
shll
movsb
inc
push
pop
push
fs
hlt
inc
call
lock
pop
cs
inc
xor
outsl
cmp
xor
cmp
jmp
lcall
clc
mov
arpl
roll
dec
mov
decb
jle
dec
push
test
test
es
test
sub
pop
mov
call
test
xchg
push
xchg
enter
mov
sbb
gs
loop
mov
sub
pusha
les
cmp
push
dec
out
dec
sti
push
loope
sub
push
incl
in
ret
inc
or
shr
xchg
sbb
mov
andl
fcomps
push
outsl
jb
jo
loopne
and
jmp
mov
aaa
push
inc
testb
dec
addb
push
jne
push
popa
out
outsl
add
decl
mov
roll
adc
js
incl
inc
xchg
or
sbb
data16
pop
test
pusha
dec
mov
add
mov
mov
incl
jns
int
adc
sub
inc
mov
or
data16
or
pushl
lock
xchg
mov
jecxz
push
faddl
mov
inc
lcall
inc
sub
stc
scas
or
cmp
pop
inc
fsubrl
lcall
cmc
jne
bound
jbe
data16
push
pop
push
cli
sbb
icebp
imul
pop
ret
xorl
ret
out
mov
pop
stos
jb
arpl
mov
cs
fs
decl
mov
push
arpl
add
sahf
mov
cld
pop
inc
push
lahf
pop
jp
jp
stos
and
ljmp
and
mov
inc
mov
test
jo
push
dec
add
jg
cmpsb
inc
loop
out
rolb
add
sub
lods
push
out
push
xor
lea
mov
or
adc
ret
and
loope
mov
push
sub
mov
sbb
inc
loope
dec
mov
push
lahf
psubd
inc
cmp
xchg
push
mov
lcall
pop
jb
xchg
dec
das
jge
ja
rclb
inc
mov
inc
add
hlt
jmp
jmp
add
cmp
mov
lock
cmp
movsl
adc
sbbb
mov
pushl
sub
push
push
mov
inc
mov
jno
lds
js
and
or
pop
fcomi
pushf
fprem
xor
or
sbb
add
lcall
add
btc
aam
addr16
int3
aam
repz
pushf
xor
adc
jg
cld
imul
fmuls
dec
lret
ljmp
sbb
add
adc
cvtps2pd
add
jmp
xor
gs
xchg
mov
adc
mov
and
pop
inc
dec
push
in
jecxz
push
sbb
mov
std
call
sub
data16
pop
mov
in
subl
dec
add
push
and
pop
js
and
dec
addl
ljmp
aam
inc
stos
push
mov
mov
xor
and
out
ss
jle
or
cmp
ljmp
jmp
and
xchg
out
ds
hlt
daa
lret
add
jg
mov
push
cld
aam
pop
roll
add
lcall
out
xchg
aad
ja
addr16
cmpsb
pop
cmp
mov
out
lahf
pop
adc
cmc
cmp
add
xor
dec
lcall
dec
xchg
pop
adc
mov
pop
dec
sub
sub
mov
or
sbb
flds
in
adcb
xchg
pop
jp
xor
inc
push
sub
out
xchg
lock
jae
or
push
and
mov
cwtl
int
loope
xor
push
push
pop
mov
cmp
jbe
cmp
loopne
fisttps
cmc
mul
outsb
data16
stc
adc
movsl
leave
xchg
fwait
xchg
js
jbe
pop
push
test
cmp
fdivrs
push
and
std
bound
and
andb
inc
mov
inc
xchg
jge
pop
push
adc
jmp
cli
sbb
mov
mov
lds
fwait
push
imul
push
mov
scas
in
cli
mov
pop
scas
leave
xor
pop
jbe
mov
adcb
sbb
push
arpl
xor
add
enter
cwtl
mov
mov
dec
push
fidivrs
repnz
rcl
mov
imul
andb
lahf
dec
jno
call
xor
stc
ja
orl
hlt
sub
insl
clc
pusha
jnp
pop
jg
mov
sbb
sbb
adc
jl
jo
xchg
add
ljmp
cmp
sbb
adc
scas
int3
ljmp
js
lret
mov
dec
sbb
fnstsw
in
dec
push
shlb
fildl
pop
outsb
pop
and
xchg
push
rolb
rclb
jne
rorl
ljmp
or
test
adc
insl
movsb
mov
addb
add
icebp
xor
loop
bound
repnz
jg
negb
sub
lahf
subl
sbb
mov
fldcw
push
incl
test
insl
loopne
cmc
lea
cmp
icebp
lea
lods
dec
repz
lret
lahf
dec
les
cmc
mov
js
test
push
pushf
mov
dec
xchg
pop
je
scas
je
ljmp
lcall
push
mov
xchg
in
cli
mov
sahf
lcall
xchg
out
jl
fwait
cmpsl
push
subb
das
push
clc
pop
loopne
cmpsb
sbb
int
xchg
cmp
xor
inc
fists
imul
push
mov
andb
lcall
mov
sbb
pushl
js
je
pop
loopne
pop
es
xor
dec
add
leave
mov
insl
in
inc
aaa
xchg
fisttps
xchg
call
fwait
or
mov
cmp
pop
mov
rep
lahf
lcall
pusha
inc
adc
cmpsl
sbb
lret
call
sub
lods
xchg
push
rorl
cmpb
cli
call
jecxz
mov
sub
insl
jl
inc
aaa
nop
and
lret
mov
push
sbb
or
adc
inc
cmpsl
and
fwait
lds
lods
push
cmpl
mov
adc
pusha
js
add
mov
arpl
rolb
and
mov
inc
mov
pop
sbb
add
loope
push
add
push
mov
scas
adc
es
pop
pop
call
add
sub
mov
leave
adcl
test
jg
jg
add
lods
into
sbb
push
fcmovb
xchg
int
ja
sbb
ljmp
adc
sbb
jo
insb
call
fcomps
lcall
out
test
mov
cmp
pop
push
mov
xchg
xchg
mov
dec
lcall
rorl
aad
addr16
cltd
dec
jge
inc
pop
jbe
inc
xchg
pushf
test
and
ljmp
sti
xchg
int3
adc
ljmp
loope
pop
push
add
fsubl
mov
ljmp
jecxz
pop
rorb
ret
jge
jmp
pushl
xchg
sahf
jge
dec
aas
repz
xor
pusha
cmp
inc
or
out
xchg
imul
mov
ja
std
jmp
jl
mov
nop
shrl
ret
add
testb
lcall
rolb
jns
cli
pushl
mov
cmp
lods
sbb
ds
lcall
das
insb
push
stos
or
mov
mov
insl
popf
sub
xlat
mov
mov
pop
hlt
cmpsb
lods
jmp
lret
fadds
push
inc
adc
in
bound
push
inc
int
inc
sub
movups
xchg
push
inc
adc
sbb
mov
adc
lods
mov
pop
pop
adc
pop
fistpl
cld
add
call
mov
into
xor
lret
or
popa
add
sub
push
mov
push
scas
sbb
iret
jno
arpl
xor
divb
stos
jp
or
dec
scas
aaa
cltd
movsl
inc
cwtl
ret
dec
mov
dec
insl
sub
adc
rclb
sar
lret
push
bound
sub
addl
call
jb
pop
ret
add
ja
adcb
orb
sub
nop
mov
inc
or
mov
dec
orb
dec
pushf
and
stc
movsb
pop
sub
mov
movsl
xor
push
push
xchg
push
adc
mov
push
mov
push
fildl
addr16
cld
ljmp
sub
mov
lods
sahf
inc
sub
push
sahf
push
push
mov
sbb
add
ja
call
push
test
pop
rcll
inc
xchg
adc
jmp
enter
adc
push
insl
lret
repnz
xchg
popf
adc
iret
jmp
ret
das
cli
mov
jne
jbe
pop
lret
dec
push
mov
sub
mov
adc
rcr
loopne
or
jmp
andl
push
cmpsb
push
ljmp
cmp
add
cmpsb
incb
outsl
rolb
bound
mov
cmp
mov
incl
jmp
mov
xlat
lcall
clc
andl
push
jnp
push
repz
scas
cld
int
jns
mov
mov
ljmp
js
mov
add
nop
push
or
fwait
test
ss
call
jl
bound
fwait
cwtl
mov
mov
out
mov
int3
inc
bound
and
incl
xchg
int3
inc
data16
and
mov
loopne
sbb
fistpll
pop
push
cmc
xor
sub
jmp
jae
lods
daa
jno
addr16
or
add
mov
jmp
bound
or
aam
scas
add
jo
dec
mov
scas
movsl
push
loop
pop
inc
and
pop
test
sbb
sub
mov
aad
std
ljmp
mov
or
sub
lods
sub
cmp
dec
es
std
jg
mov
add
inc
add
cmc
jmp
cli
ljmp
mov
imul
pop
repz
jmp
xchg
xor
mov
sbb
jnp
andb
adc
jg
call
idivl
jns
cmove
test
fbstp
int
adcb
mov
daa
push
cmp
call
das
test
in
mov
pop
add
mov
mov
call
mov
mull
jne
xor
adc
jmp
dec
roll
cmp
jns
ljmp
xor
lods
test
insl
call
js
scas
lds
lcall
imul
or
dec
call
cld
lret
cmpsb
push
fcompl
ja
dec
ljmp
fistl
pop
fisttps
fdivs
cmpsb
ret
or
popf
pop
xchg
hlt
push
nop
addb
pop
jl
cmp
vpsubsb
ds
lcall
xchg
imull
dec
cmp
std
sbb
xor
mov
or
add
inc
or
mov
mov
xor
popf
mov
adc
cld
inc
dec
inc
mov
xchg
pop
lods
loopne
lods
cmpb
leave
aam
cmpsb
fsubr
sbb
sarb
int
add
add
cmpb
add
les
imulb
add
rorb
loope
mov
xorl
ficoms
loope
adc
and
push
jg
dec
pop
pop
pop
dec
enter
pop
test
jge
push
fstps
xor
sbb
sbb
int3
out
add
roll
ds
mov
daa
jge
in
sub
xchg
sub
subl
pop
jg
sub
fiaddl
add
jae
inc
es
call
test
or
shll
shl
mov
call
aaa
aaa
mov
inc
scas
inc
push
jl
fldt
repnz
clflush
pop
ss
pop
or
lea
neg
int3
fs
loopne
int3
loop
xchg
xchg
pop
ljmp
cld
xchg
and
shlb
xor
cmp
aaa
cs
cmp
scas
adc
pop
mov
and
push
call
add
xor
cmp
arpl
loopne
inc
decl
mov
insb
add
mov
dec
cmp
mov
push
inc
outsb
dec
and
int
pop
xchg
or
push
out
mov
cltd
inc
ja
sar
jl
into
dec
adc
push
jmp
sub
mov
pushf
int
or
mov
mov
fcmovnbe
mov
call
xchg
in
add
cmpl
ret
add
or
jae
pop
adc
idiv
ret
add
add
cld
addb
repz
pop
dec
mov
adc
mov
fdivrl
aaa
repnz
pop
jmp
fsts
icebp
mov
mov
jmp
int3
popa
fcmovne
inc
push
jle
push
push
sbb
adcb
fisubs
shr
jl
push
inc
ret
ljmp
out
lods
adc
stc
inc
ljmp
call
fs
nop
fs
or
filds
test
mov
mov
sbb
dec
push
test
adc
mov
pop
ret
or
aam
es
insb
idiv
jg
cli
shlb
mov
imul
sahf
inc
enter
jl
aam
mov
insb
or
jo
inc
sbb
jbe
int3
or
ss
fisttpl
std
rcrl
adc
and
add
testb
fidivs
inc
and
adc
and
js
add
loop
adc
mov
test
inc
push
push
push
lds
loope
pushl
cmpl
adcb
sbb
push
add
fadds
in
pushl
fsubrs
dec
rol
loop
dec
push
inc
int3
add
sub
incl
or
popa
cmp
and
or
nop
add
ret
cmp
out
adc
les
pop
add
inc
sbb
add
or
in
sub
inc
movsl
pop
inc
out
cld
adc
cmp
adcb
pop
popf
loopne
imul
inc
adc
dec
cwtl
sahf
movsl
mov
mov
jns
movsb
mov
fbld
leave
ret
or
daa
test
cmc
gs
rol
decl
cld
cltd
adc
add
call
cmp
movsl
push
pop
and
xchg
movsb
inc
out
loop
int3
push
jmp
cli
lcall
sahf
sbb
jge
out
pushf
test
rolb
pop
test
aam
ljmp
dec
mov
push
sahf
sub
pushf
ljmp
mov
stos
bound
xchg
sbb
push
pop
stos
mov
scas
andb
sti
mov
ds
add
stos
mov
stos
mov
jmp
outsb
mov
push
adc
scas
outsl
jg
imul
push
adc
add
aad
push
out
pop
daa
and
ljmp
jbe
adc
mov
cmp
push
cmp
inc
sbb
insb
add
push
xchg
push
lock
cmp
add
lret
pop
sbb
sbb
jmp
pop
and
jmp
in
ret
repnz
lcall
pop
pop
mov
outsb
mov
cwtl
jnp
insb
test
in
mov
mov
push
into
popf
sub
add
add
sub
pop
fs
inc
cmp
pop
in
test
jg
mov
int3
cld
mov
pop
inc
adc
into
popf
mov
das
push
sbb
sbb
xor
add
xchg
or
jg
aad
idivb
pop
popf
lahf
pop
cmp
sbb
arpl
xlat
jg
dec
mov
jo
rolb
jmp
cld
lcall
movsl
xchg
fisttps
push
dec
shll
ljmp
scas
xor
push
lods
aad
sub
stos
xchg
adcl
push
stos
decb
cwtl
dec
data16
outsb
in
rorl
sub
pop
aad
fists
je
xor
cmpsb
test
mov
fucomip
add
mov
sbbb
cs
fldt
cli
jg
mov
add
ret
out
fs
in
into
cs
cs
fucomi
sahf
or
cs
sbb
ljmp
mov
pop
push
incl
sahf
inc
cmc
mov
cmc
cli
push
out
cmc
sahf
ret
mul
outsb
mulb
push
dec
sbb
pop
scas
stc
dec
scas
clc
xchg
outsl
cs
add
in
jge
inc
dec
mov
ss
jb
cmc
jmp
sbb
mov
jle
add
ljmp
and
jg
xchg
inc
jmp
mov
sub
add
adc
jp
int
pop
call
fxch
inc
xchg
mov
sub
xorb
fwait
inc
mov
or
pop
fcoms
scas
nop
adc
outsl
lea
addb
bnd
add
incl
clc
dec
xchg
add
movsb
cmpl
mov
inc
xchg
pushl
aam
dec
push
sub
lock
decl
inc
sub
mov
add
addl
pop
cmc
decl
mov
push
into
cmp
dec
popf
ljmp
in
pop
adc
or
lahf
stc
xchg
arpl
enter
pop
adc
pushf
incl
or
jno
jb
adc
push
adc
andb
lcall
subb
jle
sub
adcl
ljmp
mov
and
repnz
mov
jb
cmpsb
push
scas
adc
sbbb
pop
insb
pop
inc
inc
orl
rcll
jae
pushl
adc
inc
jae
cmp
loop
inc
repz
add
arpl
ljmp
push
mov
dec
jae
inc
repz
inc
mov
orl
cmp
cmp
fdivp
pushl
cmp
xor
adc
mov
std
jle
and
aaa
cmp
aaa
push
push
cmp
das
sar
js
sbb
add
adc
hlt
mov
lcall
mov
inc
jo
pop
fstpt
test
adc
inc
xor
je
mov
call
add
add
xor
xlat
inc
jle
push
mov
adc
xchg
xor
fistpll
mov
dec
out
dec
addr16
sbb
sarl
xor
push
add
xchg
mov
ljmp
jp
pop
sub
shlb
jg
xchg
enter
in
add
sub
push
and
jmp
mov
into
in
inc
cmpsb
adc
lcall
push
push
inc
xor
cmp
icebp
add
iret
sbb
sub
ljmp
xchg
ds
icebp
jp
jg
out
xor
mov
in
xchg
lcall
loope
push
dec
jmp
mov
movsb
dec
lcall
pop
mov
inc
in
sbbb
je
icebp
ljmp
in
imul
xor
mov
cmp
incl
inc
mov
sub
mov
fisubrl
rcll
inc
in
ljmp
cld
rclb
push
inc
pop
lock
dec
outsb
and
out
pop
cld
inc
rclb
jne
cmpsb
sub
push
xorb
bound
mov
or
cmp
jg
dec
push
pop
ja
jne
jp
fidivl
mov
jge
jnp
clc
pushl
cmpsb
and
jne
push
js
ja
jnp
adc
jmp
jge
mov
sbb
ja
es
in
jl
cld
push
mov
push
and
push
add
push
jge
fisubrl
adc
add
xor
adc
xor
lods
fisttps
pushl
xchg
xchg
add
orl
stos
subb
jmp
ret
mov
or
or
mov
aam
or
sbbb
inc
mov
shr
mov
sbbl
scas
xchg
sbb
xor
sub
adcb
or
mov
add
add
inc
fstps
mov
call
or
call
jae
inc
call
sbb
xlat
jge
adc
mov
mov
push
pop
adc
push
out
cltd
adc
mov
nop
lock
add
lods
mov
decl
dec
fcoms
lods
mov
sahf
int
add
sahf
inc
inc
inc
jg
shrb
sahf
push
add
jbe
dec
xchg
push
cmpsb
push
rorl
ljmp
das
pop
inc
adc
pop
out
sub
adc
lods
ljmp
jle
or
enter
fimull
mov
inc
sbb
addr16
add
add
push
stc
popf
and
or
rcll
mov
gs
imul
dec
imul
push
sub
sub
das
ljmp
pop
sarb
pushl
mov
scas
mov
mov
fnstcw
call
std
loopne
mov
les
stos
xor
fldl
pop
jmp
dec
daa
and
ljmp
push
xchg
jl
in
lret
popa
mov
pop
rcll
dec
fsubrl
mov
and
dec
and
push
push
js
push
or
pop
orl
mov
mov
sub
nop
lods
add
xchg
cmp
push
add
dec
mov
adc
sbb
decl
add
cmp
add
fnsave
nop
insb
stos
push
cmp
or
ret
leave
repnz
pop
dec
andb
push
lods
in
pop
inc
xchg
add
lcall
jne
int3
addb
sbb
sbb
add
sahf
pushf
add
call
jno
cld
and
push
sbb
pop
mov
sbb
lcall
ljmp
das
notb
aad
subb
frstor
ja
decb
sub
aas
test
xor
aam
fimull
es
push
rolb
inc
movsb
sahf
fstpt
repz
and
inc
or
sub
jnp
in
lret
inc
rorb
ljmp
das
jnp
in
xor
data16
pop
push
out
les
cltd
jno
mov
push
ljmp
lahf
sti
in
rorb
adc
mov
cmp
jg
or
inc
cwtl
repnz
pop
inc
cmp
mov
inc
inc
push
sub
in
addr16
jbe
stc
mov
adcb
ss
cmp
test
test
pop
test
out
xchg
or
xchg
int
xor
xchg
jns
cmpsl
dec
cmp
fcmovb
adc
rcrb
ret
add
or
mov
clc
sub
test
ljmp
jle
mov
inc
loop
and
inc
lret
sub
movsb
movsl
mov
jg
incl
pushf
pop
loop
dec
and
lock
mov
jle
add
std
fsubr
pusha
mov
cwtl
mov
imul
lret
mov
inc
lcall
lods
and
lret
fwait
aaa
scas
inc
or
jmp
jne
pop
xlat
test
or
add
inc
stos
nop
lods
ret
aam
push
jg
sub
stos
sahf
dec
inc
imul
lret
push
inc
cld
mov
outsl
out
nop
test
xchg
shl
je
pusha
sbb
xchg
decl
out
push
xchg
xchg
pop
xor
pop
adc
scas
sub
jnp
dec
ljmp
fistl
pop
xchg
jge
sti
xchg
cld
mov
push
or
add
rcrl
mov
imulb
shrb
inc
or
mov
xchg
in
adc
and
add
inc
mov
pushf
inc
add
decl
mov
inc
inc
push
icebp
inc
sbb
ss
push
icebp
xor
or
mov
lods
sub
or
adc
stos
ljmp
inc
xchg
mov
sarl
or
adc
push
mov
incl
xor
mov
in
mov
mov
movsb
adc
std
mov
mov
adc
ss
mov
inc
pop
dec
incl
or
jbe
lret
test
and
jmp
or
and
xchg
rorl
and
and
hlt
mov
rorb
outsl
push
pop
push
dec
push
aad
insl
dec
adc
pop
loopne
rcrl
or
mov
mov
test
addb
pop
mov
xchg
hlt
mov
and
bound
fs
stos
mov
and
dec
push
fnsave
adc
mov
mov
loop
icebp
xor
jge
ljmp
inc
cmp
or
or
inc
sbb
pushl
addb
daa
jecxz
xor
pop
jecxz
dec
sub
test
loope
push
inc
mov
inc
cld
adc
in
stos
inc
add
add
push
mov
mov
into
xor
lock
scas
call
sar
lret
ljmp
inc
adc
mov
in
lcall
les
es
push
xchg
sub
add
mov
xchg
lock
shrb
ret
fwait
inc
or
decl
adc
pop
push
fistpl
pop
cmpsl
inc
add
lds
aaa
std
sub
sub
push
push
xor
mov
call
pop
jbe
mov
inc
or
in
enter
lret
push
loopne
jmp
mov
sub
mov
push
mov
in
sbb
mov
and
out
stc
sbb
jae
lods
and
and
fildll
sahf
push
adc
pop
lcall
out
das
jp
mov
xor
pop
or
lcall
mov
std
movsl
mov
xchg
jmp
sub
and
sbb
xchg
mov
outsb
stos
mov
or
push
test
xchg
shrb
mov
xor
pop
fisttpll
incl
clc
adc
and
pop
in
lret
inc
xchg
and
and
jge
rorb
ret
fucompp
nop
sub
cli
incl
test
lcall
add
inc
jg
add
pop
test
sbb
ret
cmp
lcall
add
test
fstps
mov
inc
dec
das
cli
bound
movsb
xor
filds
jne
pop
jno
push
aaa
fnstenv
push
lret
jne
incl
pop
sahf
std
in
cmp
mov
adc
fisttps
xchg
add
in
adc
fs
decl
mov
in
mov
dec
sub
mov
shlb
pop
push
shrb
lret
jmp
sahf
call
mov
xchg
and
test
inc
mov
test
inc
sub
out
push
mov
fwait
lea
mull
cld
adc
add
lds
rorb
in
or
fildll
in
dec
sub
inc
test
xor
decl
push
pop
push
jns
pop
add
movsb
mov
hlt
mov
add
hlt
pop
fadds
or
pushl
movsb
and
lock
ret
mov
mov
ds
int3
into
sahf
adcl
add
pop
jns
stos
ja
and
push
pushf
mov
call
out
into
mov
dec
lret
and
lds
cmpsb
xor
adc
dec
lds
fwait
ret
lds
enter
add
push
movsl
push
into
cmpsb
xor
mov
stos
shlb
loopne
add
cmpsl
aas
std
jmp
pop
out
call
inc
sub
inc
incl
stos
cmp
push
mov
add
sub
adc
cmc
lcall
call
ret
xlat
adc
lret
and
por
inc
add
xor
sbb
bound
imul
xchg
shl
sbb
or
sub
lret
aad
out
lods
push
mov
push
pushf
jns
loope
adc
lcall
add
push
mov
shrb
call
lahf
add
or
jp
pop
popw
cmpsb
mov
adc
sbb
stc
mov
adc
ljmp
aad
movsb
add
add
je
cmp
or
popa
add
fcomip
mov
jnp
imul
adc
mov
push
sbbl
sbb
ljmp
xorb
cwtl
mov
xor
shll
mov
xor
fsubl
mov
loopne
add
into
mov
call
dec
add
sbb
jg
and
ljmp
lcall
clc
pusha
scas
jle
cmpb
pusha
add
mov
test
pushf
rcrb
mov
xchg
js
dec
sub
popf
xchg
xor
dec
jge
sub
add
xchg
test
cmp
fbstp
dec
int
std
ljmp
orb
or
dec
ret
pop
rorl
loop
sub
loopne
movsl
sahf
and
sbb
lods
mov
add
les
push
pop
incl
cld
mov
xchg
sahf
dec
rcrb
insb
xor
mov
les
push
insb
push
add
pushl
loopne
rorl
jecxz
xor
push
adc
ret
loopne
icebp
outsb
pop
and
lcall
sub
mov
add
mov
rol
mov
ljmp
pop
cwtl
cmp
movsb
xchg
and
imul
lea
push
jbe
sbb
imul
add
outsb
add
into
jns
mov
out
push
cmp
xor
inc
jge
inc
add
cmpsb
add
loope
xor
loope
pop
jns
das
add
xchg
pusha
rolb
jnp
or
call
shlb
mov
sti
loopne
push
push
mov
fimull
lcall
xadd
pusha
push
xchg
adc
jb
mov
cwtl
jmp
ljmp
cmp
add
movsl
jbe
fstl
and
repz
cmp
jae
fisttps
scas
lret
aad
fldcw
aaa
fwait
cmpsb
inc
sub
stos
mov
push
out
repnz
pushf
dec
gs
lahf
loope
incl
adc
aad
aam
cltd
xlat
fidivs
call
sub
jae
xchg
fnsave
xor
lcall
loopne
xchg
dec
fiadds
icebp
rolb
insb
loope
mov
decl
rol
sub
pushf
hlt
push
cld
cltd
and
incl
icebp
jg
xchg
adc
int3
int3
mov
cmp
loopne
mov
mull
push
cld
jns
arpl
mov
sarl
xor
cs
stc
int
call
add
cmpsb
je
repz
nop
rorb
add
sbb
mov
dec
jmp
sub
mov
decl
adcb
jle
lods
ret
mov
cli
jmp
mov
mov
lock
decl
sub
mov
mov
into
mov
or
xadd
insb
push
std
imul
je
cmp
inc
push
add
jb
out
sbb
or
sbb
mov
push
mov
cmpsb
mov
in
xor
outsb
inc
jns
sub
lcall
add
aad
sbb
sbb
stos
das
sbb
push
sub
sbb
in
jbe
mov
lahf
or
pop
or
movsb
mov
loop
shlb
repz
jb
ud0
out
push
aam
adc
int3
jmp
pusha
movsl
ret
or
add
dec
test
mov
popf
ljmp
cmpsl
adc
loopne
sahf
daa
or
scas
orb
jp
pusha
push
add
or
push
add
shll
lods
fimull
or
lea
push
push
loop
xor
sub
sar
ljmp
sub
add
push
inc
scas
mov
inc
jns
out
adc
data16
lcall
pop
popa
lods
into
xacquire
ljmp
cmp
movsb
sub
idiv
lcall
insb
inc
sbb
inc
psrad
jbe
sbb
sbb
sbb
insl
sbb
ret
cmp
and
mov
cmc
inc
sti
pusha
inc
sbb
sbb
and
nop
roll
dec
cmp
add
add
fcompl
fucomi
xchg
adc
mov
in
inc
adc
arpl
ljmp
in
push
jg
adc
push
into
dec
cmp
add
jmp
lock
mov
repz
ljmp
xor
jns
les
in
loopne
outsb
int
dec
inc
dec
cli
inc
push
xor
cmp
add
and
add
bound
outsb
lods
sbb
pusha
mov
das
push
push
jmp
lock
add
push
inc
lock
pusha
nop
push
stos
dec
or
shlb
ret
repnz
or
ljmp
jle
pop
add
dec
lods
inc
sub
inc
or
push
rorb
inc
pusha
or
and
insl
ficoml
aaa
std
push
and
adc
inc
cli
adc
f2xm1
int3
fmuls
ljmp
inc
cmpsl
aam
out
mov
std
inc
mov
or
jb
ret
int
cs
scas
int3
dec
subl
mov
inc
adc
push
jle
add
push
call
pop
js
icebp
and
add
ret
subb
adc
ljmp
jp
mov
mov
add
mov
pusha
jno
jns
and
incl
push
scas
cmp
add
mov
push
ss
sarb
add
outsb
out
jp
div
pushl
nop
cltd
repz
popa
sub
cmpsl
push
sbb
out
clc
pop
stos
cmp
add
add
and
cmp
jne
sub
sti
and
sar
or
xor
in
mov
aas
sbb
jmp
xchg
dec
leave
lds
loopne
sub
mull
add
out
sbb
or
jg
cli
dec
fidivs
inc
adc
mov
incw
data16
dec
inc
pop
add
mov
js
ret
push
sub
fdivr
push
sub
fs
incl
jnp
add
mov
or
xchg
add
push
push
aaa
cld
inc
or
mov
outsb
xor
or
mov
call
les
leave
leave
or
or
movsb
sarb
pushl
mov
xchg
push
xor
pop
dec
popf
inc
nop
or
or
inc
add
mov
sub
pusha
lret
sub
into
sub
rorb
cli
lcall
cwtl
lret
adc
shrb
lock
iret
mov
int3
cwtl
mov
stos
push
xchg
ljmp
adc
out
decl
in
repnz
jae
sbb
sub
sub
lods
xor
std
enter
or
ljmp
ds
xchg
ss
xor
aas
loopne
nop
mov
mov
cmc
pop
cltd
mov
push
and
or
pop
popa
adc
sti
mov
mov
popa
and
lcall
ret
test
inc
or
xor
stos
int
pusha
add
call
ljmp
scas
sbb
cld
mov
fisttps
dec
pop
fisttpll
fsubs
loop
adc
xchg
fmulp
jmp
test
test
icebp
push
inc
inc
push
or
adc
call
sbb
push
in
adc
jno
dec
mov
ljmp
xor
rcll
mov
jbe
push
adc
mov
push
ss
dec
int3
add
jo
cmp
mov
push
imulb
mov
add
es
sub
mov
jbe
or
inc
or
scas
and
aaa
js
pop
lock
ret
dec
sub
dec
add
std
and
cs
jmp
loope
push
and
and
mov
pushf
shrb
repz
inc
in
in
lahf
test
lcall
repz
jmp
xor
cmp
or
push
sub
stos
push
add
xor
ud0
mov
das
imul
fisttpl
into
sub
loope
inc
cmpb
mov
inc
inc
pop
mov
paddd
or
pop
push
push
adc
inc
clc
loopne
xor
lcall
ljmp
inc
cli
aad
add
pop
fmulp
das
xchg
dec
rcrl
pop
xchg
mov
xor
das
mov
ljmp
decl
mov
jl
js
jne
addr16
adc
pop
ja
cli
stos
arpl
je
push
loopne
pushl
or
adc
pop
mov
fnstcw
leave
mov
decl
ret
xchg
imul
std
ljmp
mov
fcoml
inc
aad
aas
adc
sbb
inc
adc
mov
push
popa
pop
fcmove
decb
dec
in
dec
inc
adc
and
sti
jbe
sbb
cmp
pop
mov
mov
lock
lock
out
or
cmpsb
ja
js
stos
sub
or
mov
or
and
aam
hlt
push
push
xorb
nop
mov
int
add
sub
sbbb
jg
xchg
mov
add
xor
mov
xchg
les
decl
insb
dec
xchg
push
lcall
sbb
push
je
dec
cs
call
push
sti
xchg
int3
push
add
add
sub
scas
push
add
lea
mov
sub
lret
clc
adc
push
test
test
xor
lret
mov
sub
inc
ret
call
and
push
addr16
sbb
push
fdivs
dec
les
dec
ja
hlt
mov
decl
sub
mov
stc
inc
xorl
loop
lea
and
orb
addl
push
and
cmp
xor
cmp
nop
insb
pop
jnp
lret
dec
test
nop
mov
mov
sti
jle
sti
pushaw
jge
pusha
stc
mov
cwtl
cmp
rcrl
jg
or
adc
sub
inc
xchg
inc
pop
std
decl
push
lods
out
test
popa
sbb
popa
leave
mov
mov
xor
mov
into
push
arpl
sub
pusha
jbe
mov
enter
fs
push
mulb
or
ljmp
jl
inc
ja
lret
and
ljmp
mov
jl
leave
in
add
loopne
mov
ret
test
dec
inc
movsl
mov
inc
in
add
loopne
fcomip
jmp
fwait
xchg
lock
cs
lcall
sub
pusha
push
stos
or
sub
jp
jb
test
inc
push
enter
in
insl
mov
or
pop
and
std
je
test
nop
lret
decb
jo
push
push
lret
adc
dec
cmc
cwtl
rorb
jmp
int
xlat
adc
dec
xor
or
addb
add
xor
in
pushl
daa
popl
xchg
fs
push
xor
cmp
mov
cmpb
xchg
sub
ret
call
orl
addr16
sbb
mov
popa
jo
xchg
hlt
jg
mov
mov
sub
decl
push
pop
mov
in
divb
mov
ds
sbb
sbb
ljmp
sbb
push
popa
stc
pop
loope
sub
imul
xchg
mov
inc
jmp
mov
iret
push
and
jmp
inc
dec
inc
and
out
sub
fcomip
pushl
loope
push
cmpsb
push
pop
push
mov
movsb
mov
mov
pop
mov
ds
incl
inc
sub
pop
adc
sti
mov
xorb
pop
jge
xor
and
pop
popf
outsb
in
sub
pop
icebp
decl
fldcw
inc
sub
fisubrl
incl
lods
movsb
jge
dec
fsubs
push
adc
rorb
add
lcall
stos
sub
adc
push
fs
xchg
push
fwait
dec
stos
loop
pushl
invd
or
and
mov
or
jne
into
mov
sbb
mov
adc
dec
je
decl
xchg
daa
icebp
lods
imul
push
les
inc
repz
adc
repz
inc
push
inc
mov
adc
mov
adc
push
sbb
add
lret
push
lock
mov
jnp,pt
stos
mov
cmp
and
jno
push
cmpsb
pop
jo
cmpsl
out
lock
imul
adc
outsl
xor
add
nop
mov
andb
mulb
in
arpl
cmp
out
fsubp
jecxz
pop
and
jb
data16
and
add
add
mov
xchg
push
jae
mov
mov
cmpsb
pushl
dec
or
movsl
shrb
jmp
mov
cmp
mov
das
cmp
and
cmpsl
mov
or
ljmp
xor
adc
ja
xor
sbb
ret
or
subb
inc
icebp
decl
xor
jo
outsl
and
push
inc
sbb
ljmp
insb
cmp
pop
test
cmpsl
or
jbe
lret
inc
mov
dec
cld
mov
add
incl
sbb
jae
pop
inc
orb
mov
fldcw
addr16
push
je
in
pop
push
cmp
lock
xor
and
sti
mov
ljmp
call
mov
xchg
lret
lret
push
push
pop
mov
sub
cmp
fisubs
es
daa
add
jg
clc
mov
int
test
lcall
out
nop
xor
lret
inc
jno
or
fsts
sti
std
pop
insl
sti
jg
sub
lods
cltd
pop
mov
pusha
mov
mov
xlat
pop
jmp
add
and
cwtl
xor
dec
inc
mov
mov
das
xchg
inc
sbb
popa
les
loopne
add
data16
jno
out
xchg
push
sbb
dec
aad
dec
xor
or
popa
sub
and
and
xor
icebp
lcall
pop
je
jecxz
mov
inc
lock
cli
add
cwtl
fucompp
fbstp
add
jecxz
xor
movl
lret
jbe
adc
inc
inc
ja
je
sub
inc
test
mov
aam
pop
push
pop
xchg
or
push
and
jle
test
fwait
ljmp
push
pop
cmp
push
enter
xor
adc
push
pusha
mov
or
ds
andb
scas
inc
xor
sub
xchg
cmp
loope
loopne
stc
iret
or
jp
ret
xchg
mov
jecxz
ja
roll
xchg
and
mov
add
jge
or
idiv
fbld
outsb
in
pop
sarb
push
cltd
pushf
xchg
dec
bound
and
pusha
push
fwait
std
lcall
in
adc
adc
or
adc
push
add
fwait
xor
dec
cltd
iret
add
pop
lock
mov
push
gs
mov
ljmp
int
push
mov
cmpsl
mov
ret
scas
pop
pop
xchg
mov
fadds
mov
mov
incb
test
out
mov
and
enter
scas
or
add
xor
out
orl
add
add
cmpsb
xor
call
add
or
adc
arpl
lock
pop
sub
popa
loope
lret
inc
jecxz
xor
and
adc
mov
mov
xchg
sub
add
pop
xor
push
mov
sub
leave
jae
lcall
in
rolb
mov
xor
les
iret
fisubrl
pop
pop
add
test
sub
movsl
mov
xchg
cmp
fs
sub
ficomps
aas
call
icebp
nop
and
cmp
mov
cwtl
cwtl
test
mov
loope
sub
test
ds
mov
ds
mov
lcall
or
or
test
andl
arpl
dec
pop
mov
mov
and
das
adc
int3
call
incl
push
sub
add
dec
inc
add
in
push
cmp
fs
mov
sub
cmovnp
lcall
neg
jb
sub
pushf
jno
dec
out
jae
mov
add
hlt
mov
ljmp
sub
ds
roll
adc
nop
inc
push
adc
or
sar
xchg
lock
lock
sbb
test
lcall
mov
xor
adc
cwtl
dec
inc
push
mov
adc
imul
adc
cmp
add
mov
and
mov
add
sub
decl
faddl
sub
fdivr
mov
xchg
scas
ljmp
nop
ret
sbb
in
pop
jle
fcmovnb
push
xchg
out
gs
cmp
dec
sbb
cmp
mov
loope
incl
sbb
rcrb
and
ds
call
adc
loop
jb
popf
and
das
cmpsb
test
sub
adc
outsl
mov
icebp
inc
pop
dec
inc
pop
das
inc
cli
rolb
jno
out
and
push
push
hlt
sbb
and
inc
mov
fldl
insl
jmp
roll
pop
cmpsb
jg
stos
repnz
jb
xor
ret
pop
and
test
fiadds
pop
add
and
or
sub
out
mov
std
and
sub
mov
add
rcr
or
shlb
mov
js
gs
or
sub
enter
sub
mov
bound
test
add
adc
add
push
stc
in
cli
jmp
adc
je
movsb
sbb
xchg
stos
cmp
addb
adc
loop
mov
fwait
fwait
loope
ljmp
mov
jb
outsb
insb
pop
lock
jge
sbb
test
mov
mov
std
jg
stos
dec
and
inc
int
pop
std
inc
sub
dec
int
aas
ljmp
or
and
aad
adc
inc
and
push
add
sbb
push
mov
cld
outsl
subb
or
sub
add
xchg
std
rorb
clc
add
loop
incl
and
xchg
add
dec
and
xchg
xor
movsl
sub
das
in
ljmp
pop
sbb
add
sbb
js
mov
push
add
or
aam
or
pushl
jno
mov
xor
stos
ljmp
test
sbbb
adc
decl
dec
cmp
xchg
jnp
into
jl
call
xor
flds
xchg
jge
add
fcmovb
repnz
mov
jg
and
sbb
inc
shll
arpl
lods
push
addr16
lock
incl
lea
jb
repz
or
dec
dec
and
outsl
sbbl
xchg
xor
push
repnz
push
mov
aaa
inc
xchg
repnz
arpl
in
push
ja
mov
cmp
push
adc
stc
cmp
mov
xchg
push
loopne
lea
decl
daa
cmpsb
mov
lret
and
mov
xchg
addb
xchg
adc
in
stos
decl
int3
data16
int
sbb
dec
jp
adc
sarb
rcll
dec
cmp
outsb
inc
cli
les
jmp
sbb
dec
test
push
das
shlb
je
ljmp
or
add
mov
jmp
test
stos
sub
xor
sti
stos
pushl
sbb
mov
ficoml
scas
es
dec
xor
dec
adc
lret
imul
jmp
lds
add
inc
out
mov
or
das
cmp
sub
clc
mov
aaa
xor
jno
mov
jmp
mov
ret
xor
xor
test
jl
test
mov
stc
and
call
dec
or
add
sub
xchg
int
js
ja
adc
pusha
lock
call
addr16
inc
leave
or
push
repnz
mov
ljmp
pushf
mov
test
aaa
mov
and
mov
insb
jle
and
aaa
lds
xchg
pop
aad
push
dec
mov
leave
or
mov
mov
and
pop
fidivrl
test
in
loopne
sbb
cmp
xchg
nop
aam
mov
mov
aad
sub
ljmp
push
inc
popf
cmp
cwtl
sbb
adc
sbb
cmp
fcompl
jbe
jg
insb
data16
lds
xchg
xor
lcall
cmp
fisubl
movsb
sub
dec
in
or
aam
aas
nop
nop
ud0
push
cmp
je
push
inc
jno
push
cli
outsb
dec
cli
push
sub
pop
sub
fisttps
out
mov
enter
pusha
subl
fcoms
push
or
and
sub
jg
dec
inc
icebp
push
dec
or
adc
jmp
cmpsl
lret
pop
std
or
jbe
jecxz
lcall
jo
mov
and
xchg
and
stos
testb
cwtl
pop
xchg
fbstp
and
add
clc
incl
and
cmp
ret
jecxz
fstl
addr16
inc
jns
mov
nop
sbb
dec
pop
sub
mov
push
cmp
hlt
jp
cld
data16
lock
movsb
xchg
cmp
rorb
std
call
fmuls
xchg
shrb
pop
pop
dec
jg
outsb
outsb
and
and
pop
ficoms
lahf
aad
movsl
sbb
scas
xchg
ljmp
lds
out
sbb
jbe
cli
pop
das
out
out
iret
add
incl
mov
push
jp
jmp
pop
cli
dec
js
scas
sbbb
cmp
mov
adc
fcmovnu
mov
cmp
pop
iret
test
dec
dec
mov
out
mov
sub
ljmp
cmpsb
mov
fistps
pop
aad
std
jmp
ja
sbbl
mov
or
xchg
add
sub
les
mov
adc
pushl
xchg
adc
mov
sub
or
fists
imul
andb
push
stos
lcall
dec
or
or
sub
dec
add
call
mov
sbb
addb
mov
call
scas
divb
xor
cmp
xor
outsb
mov
rcll
loopne
scas
loop
push
hlt
jmp
test
notb
pop
dec
xor
rcll
aam
lcall
xor
jo
add
pop
scas
dec
and
leave
into
pushl
cmp
out
jne
rcr
and
loopne
or
cwtl
sbb
ljmp
xor
fbld
dec
pop
cmp
inc
xchg
inc
cmovs
movl
cltd
mov
frstor
fidivrl
mov
lahf
jmp
and
mov
divl
and
fstpt
in
popa
and
mov
rorb
xor
xchg
pop
out
gs
loop
adc
ret
jb
fwait
fwait
mov
mov
in
xor
cmpsb
out
test
cli
std
nop
pop
jle
dec
pop
std
out
jae
out
inc
xchg
imul
lret
call
mov
lods
xor
adc
out
push
adc
jno
out
xchg
popa
clc
xchg
jb
mov
fnsave
inc
xchg
cmc
filds
mov
mov
lock
out
push
mov
push
adc
or
pushl
fsubl
das
pop
push
sbb
inc
cs
call
sbb
inc
xorb
je
xorl
icebp
cmp
cmp
xchg
or
sbb
nop
sbb
cli
addl
pusha
xlat
fs
inc
outsb
shll
not
es
add
sbb
cwtl
xor
and
or
adc
push
add
dec
nop
ja
call
jmp
add
jae
add
fcomps
pop
dec
cmp
push
outsl
pushl
std
push
push
sbb
or
xor
add
std
decl
adc
pop
mov
mov
mov
mov
daa
add
mov
mov
daa
mov
cmp
shlb
imul
es
sbb
add
mov
mov
push
and
lcall
add
out
mov
sbb
and
outsl
mov
cmp
es
dec
add
and
inc
ja
cmc
sbb
add
call
mov
ret
and
notb
or
incl
out
les
out
and
testb
jg
push
adc
inc
adc
movsb
mov
test
xor
incb
mov
xor
adc
or
push
stc
pusha
and
pusha
or
outsl
cli
adc
mov
xchg
adc
nop
add
ret
in
sbb
punpcklwd
incl
lock
xchg
inc
xor
cmp
cmp
aas
inc
inc
notb
fs
test
xor
cmp
jbe
jb
push
mov
adc
push
adc
cmp
jno
orl
adc
imul
xchg
lock
andb
xchg
push
nop
adc
xchg
mov
ja
jo
push
xchg
jne
inc
shlb
rorb
push
sbb
decl
or
and
ret
push
inc
or
jmp
add
mov
mov
xchg
decl
cwtl
lods
sub
rolb
adc
jl
pop
inc
add
xchg
es
incl
xorb
jge
push
adc
and
je
dec
in
jg
inc
cld
fwait
cwtl
add
pop
in
jo
xchg
dec
into
and
lcall
or
icebp
addr16
dec
popf
inc
jg
inc
jo
repnz
mul
adc
cmpl
inc
jo
mov
lods
jb
lods
inc
addb
loop
sahf
jecxz
add
mov
add
cltd
adc
mov
adc
pop
and
push
aas
xchg
cmc
sub
dec
push
mov
inc
sbb
mov
test
push
fs
stos
mov
sbb
les
pop
outsb
push
fbld
ds
push
mov
inc
dec
lds
pop
or
xor
mov
sbb
cltd
data16
adc
addr16
mov
jmp
xor
push
pusha
push
mov
sbb
xchg
pop
andb
xorb
jge
movsb
pop
xlat
pop
cltd
mov
adc
xchg
cmpsb
sbb
push
mov
mov
sub
movsb
movsl
cmpsb
rorb
or
and
lcall
in
das
cmpsb
mov
movsl
pop
mov
outsl
aaa
in
sub
fiaddl
dec
punpcklbw
movsl
push
mov
int
mov
jl
bnd
test
inc
ret
clc
mov
xchg
cwtl
jns
inc
insb
test
mov
mov
imul
test
cmp
mov
out
cli
pushf
fists
sti
pushl
movsb
sbbb
sub
fs
or
dec
jecxz
popf
xchg
bound
cmp
adc
adc
ljmp
xor
pop
adc
stc
push
scas
add
or
in
int
add
sbb
dec
adc
push
cmp
mov
sub
ljmp
adc
jmp
add
push
inc
je
and
gs
adc
or
push
stos
inc
jp
push
pop
das
mov
pop
mov
test
loope
xchg
push
sub
rorb
das
sbb
jg,pt
hlt
call
aam
or
mov
mov
inc
inc
xor
incl
inc
pop
mov
loopne
es
mov
push
mov
mov
fisubl
mov
pop
sar
jmp
xorps
mov
mov
jnp
shlb
call
pop
mov
mov
outsb
mov
stos
fs
sbb
adc
lcall
cltd
fsubs
orb
mov
and
mov
mov
cmp
jmp
add
inc
pop
outsl
cmp
icebp
test
lcall
pushl
adc
cmp
jns
lock
dec
loope
daa
lcall
std
call
fldcw
xchg
sub
push
dec
mov
test
in
pushl
rol
xchg
mov
sub
mov
movl
sbb
or
inc
pop
mov
xor
hlt
call
sbb
push
or
mov
and
jp
add
stos
cmp
xchg
fidivs
mov
sbb
out
xchg
ljmp
lret
push
xor
mov
js
mov
or
call
std
push
adc
aas
dec
mov
test
mov
mov
in
addr16
lock
out
mov
push
mov
push
sbb
and
jo
add
insl
subb
add
repnz
shrb
mov
rorb
insb
mov
rcr
push
push
jecxz
push
das
cltd
add
sbb
pusha
shll
pop
add
sbb
repnz
jg
add
int3
ret
or
ljmp
clc
pop
cmp
xor
push
outsl
incl
mov
ret
jecxz
lea
cmp
or
pushl
dec
lods
and
inc
adc
xchg
cmp
xor
mov
mov
mov
dec
mov
push
adc
adc
es
ljmp
inc
mulb
sbb
push
lret
stc
lock
lcall
sbb
pop
adc
sub
cmpb
sbb
add
loope
and
pop
pop
enter
xchg
loop
pushl
adc
sbb
iret
repnz
aaa
sbbb
enter
inc
or
leave
cli
jmp
push
xchg
cmpl
push
in
cs
pushl
je
fs
adc
pop
jle
xor
aam
lret
cmp
out
cli
xchg
outsl
rclb
in
lret
hlt
stos
js
fwait
mov
dec
mov
insb
ja
jns
adc
and
call
or
push
xchg
sbb
fldt
ljmp
inc
andb
add
rorl
jg
jl
clc
loopne
pushf
sbb
out
in
into
ljmp
sbb
stos
orl
fmul
jmp
decl
sub
decl
pop
iret
or
clc
pop
xchg
sub
jmp
sub
lcall
aad
and
pushl
push
mov
add
sub
jno
pop
mov
mov
xchg
mov
mov
ficoml
pop
movsb
mov
testl
mov
mov
clc
out
mov
mov
pop
sub
adc
sbbl
mov
sbb
cmp
and
lret
ljmp
unpckhps
aad
es
cli
jmp
add
jo
push
push
insb
mov
jge
fstl
scas
dec
mov
cmpsl
cmp
mov
jecxz
outsb
shlb
mov
cmp
loopne
adc
or
xchg
icebp
mov
jnp
out
mov
cmp
int
sbb
and
pop
in
jg
and
negb
xchg
sub
xlat
aaa
mov
cmp
lcall
cmp
cmp
dec
inc
inc
xchg
sarl
jecxz
inc
test
fcmovb
repz
or
ja
cmp
mov
xlat
pop
mov
sbb
clc
jae
in
add
ret
push
insl
jg
or
inc
push
sbb
ja
mov
jge
mov
jg,pt
ljmp
sub
adc
shll
mov
or
std
js
jge
cmp
xacquire
pop
sub
xor
add
movsl
fistl
call
or
inc
sub
fstl
test
aad
adc
sbb
pop
add
pushl
or
adc
stos
rclb
and
sbb
add
call
pop
je
mov
sbb
xlat
push
outsl
mov
das
into
incl
fcmovnb
jecxz
mov
mov
mov
jecxz
std
sbb
in
jecxz
and
pushf
out
jg
mov
adcb
cmp
inc
sahf
in
sar
out
jo
xchg
inc
pusha
adc
push
pop
cs
loope
and
mov
add
ljmp
and
adc
out
sahf
in
mov
add
aam
in
out
fbld
in
jno
loop
jmp
jo
out
sahf
out
mov
outsl
scas
js
sub
inc
xorb
jns
jae
dec
add
cmp
and
lea
test
fmuls
or
jne
addb
addr16
decl
push
les
fildll
loopne
sar
inc
or
pushl
add
cmp
repz
mov
and
adc
jle
rcll
movsl
cmp
pop
hlt
std
cmp
sub
nop
add
testb
imul
sub
lods
movsb
mov
jne
lret
cmpb
adc
call
or
arpl
mov
pcmpeqb
test
jl
popf
andb
mov
jae
jecxz
push
std
add
pop
int3
jecxz
out
mov
pop
sbb
lock
push
inc
jg
sub
jle
daa
mov
popf
sbb
incl
mov
pushf
in
mov
sbb
dec
add
mov
ljmp
pop
lock
push
fcomip
das
popa
adc
push
test
pop
push
outsb
in
sbb
mov
mov
lods
dec
repz
xor
inc
adc
pop
mov
aad
pop
inc
outsl
pop
jmp
and
popa
jl
sub
loop
fstpl
fidivrs
jge
addr16
fcomip
xchg
pop
ljmp
cmpsl
dec
sub
shrl
shll
subb
stc
mov
test
or
dec
mov
add
rolb
adc
mov
leave
leave
scas
or
xor
movups
pop
jmp
pop
sub
jg
or
in
jle
xlat
fdivrp
jae
adc
inc
popa
dec
ja
pop
xor
scas
fcomi
lret
adc
out
fldenv
jg
test
or
lcall
scas
mov
sub
jmp
fists
pop
jecxz
jmp
rolb
cltd
inc
rcrb
lcall
dec
pop
cwtl
test
sti
ja
add
cld
jg
pusha
jo
xchg
sub
iret
cld
jg
inc
outsl
cld
dec
cld
mov
cli
cmpsl
sbb
and
jecxz
out
fists
out
test
mov
pop
sub
outsl
lock
fidivl
std
pop
pandn
mov
js
out
adc
sar
jmp
adc
decl
popa
je
fs
mov
cmp
mov
push
lds
sub
mov
push
cld
jg
and
add
xor
mov
scas
add
mov
adc
jae
mov
mov
and
cmp
xor
dec
test
aas
jo
clc
pusha
adc
cwtl
orb
pop
in
jne
xchg
sub
inc
scas
push
lret
and
add
push
pusha
out
cmpsl
movsb
outsb
jmp
xchg
movsb
dec
cwtl
xor
jmp
ret
mov
movsb
sub
popa
xchg
imul
mov
and
add
jbe
cmp
or
and
push
cmp
or
and
pop
mov
call
fmuls
icebp
xchg
in
jae
rol
lods
push
in
push
inc
jae
dec
xor
decb
incb
inc
sar
mov
jb
pop
dec
lret
push
dec
pop
orb
cmp
fisubs
lock
mov
fldcw
iret
inc
sbb
or
stos
push
scas
sub
dec
fsubr
cwtl
mov
cmp
rcr
shll
jmp
dec
cmp
add
adc
cmpsl
movsl
adc
imul
xchg
stos
ljmp
ret
enter
push
push
xor
inc
std
inc
mov
cmp
lock
adc
aam
lods
scas
ljmp
clc
push
mov
fisttpll
dec
inc
sbb
orb
scas
push
dec
test
and
mov
push
sub
lds
push
xor
test
movsb
stos
ljmp
sub
test
pop
ret
mov
shrb
pushf
rcl
sub
add
pushl
mov
jecxz
cmpsb
cwtl
inc
cs
xor
out
andb
sub
xor
cmp
je
xchg
dec
ret
mov
mov
and
jg
insb
push
push
stos
lods
lods
or
add
sub
je
push
dec
sbb
aad
or
jmp
sub
nop
mov
int
fcmovnb
ds
adcb
and
inc
adc
inc
push
xor
add
ss
push
cmpsb
sbb
in
adc
push
scas
jp
or
fildll
insl
enter
inc
xchg
ficompl
or
ficoms
in
push
cmp
call
lods
inc
jecxz
xchg
rolb
jp
push
xor
pop
or
jno
adc
adc
or
mov
leave
stos
xor
push
mov
loopne
mov
xchg
inc
mov
or
push
or
int3
and
lods
push
popf
fs
cmpsb
pop
es
xchg
stos
sub
sub
mov
shrl
das
loop
inc
mov
mov
testb
xchg
mov
adc
jle
dec
or
fcomip
pop
push
out
cli
push
movsl
cli
cmc
mov
sbb
pop
sub
mov
repnz
push
pushl
inc
arpl
pop
pop
lods
mov
and
dec
in
pop
and
orl
mov
and
adc
pop
ret
sub
and
pop
mov
les
inc
mov
test
mov
cmc
call
push
add
or
dec
jno
stos
fistpl
and
mov
pop
lock
xor
add
dec
xchg
and
ds
push
mov
jne
adc
add
xchg
dec
insb
xchg
mov
push
or
scas
js
pushf
mov
ss
dec
andl
mov
mov
mov
bnd
and
mov
mov
pop
adc
ljmp
imul
fbstp
lahf
xchg
lcall
mov
fs
and
cmp
pop
push
sbb
and
pop
nop
sub
pop
test
push
loope
push
mov
jmp
xchg
cwtl
mov
mov
lea
jno
ret
mov
cltd
loope
fwait
rclb
cmpsl
pop
push
pop
imul
dec
inc
incl
movsb
test
xlat
inc
outsl
dec
adc
loop
jb
lahf
add
mov
loope
xlat
jle
movsl
jmp
roll
xchg
xchg
hlt
pop
mov
cmpsl
adc
ljmp
enter
push
repz
jmp
cmp
push
nop
dec
cmp
push
pop
push
inc
inc
cltd
mov
rorl
shlb
jge
xchg
outsl
stos
or
in
xor
movsl
jo
dec
cmp
xchg
push
cmc
cmp
fsts
insl
imul
mov
mov
ljmp
adc
sahf
push
sbb
shll
cwtl
pushl
insb
pop
sbb
mulb
cmc
int
mov
divb
inc
fcomps
push
inc
push
dec
mov
rorl
adc
arpl
ss
or
xor
stos
mov
dec
xchg
cmc
jmp
dec
lret
dec
add
sbb
sti
xlat
mov
lods
dec
mov
or
outsl
sub
jl
repz
lock
mov
decl
shlb
xor
clc
add
adc
lds
lret
insb
inc
xor
mov
lcall
aam
adc
movsb
cmpsb
fdivrs
test
sub
outsl
pop
mov
xor
outsl
arpl
rcrb
test
in
pusha
xor
test
sti
decl
xchg
call
mov
js
and
fwait
dec
adc
inc
push
add
push
sub
cltd
add
mov
not
fdivr
call
adc
mov
push
pop
adc
xchg
lret
jg
and
stc
pop
mov
loop
lds
dec
push
lds
scas
xor
jle
dec
inc
mov
sbb
adc
les
movsb
mov
dec
jmp
shll
cmp
jp
inc
xchg
push
inc
mov
sub
fnsave
adc
incl
xchg
or
dec
sub
push
adc
xchg
pop
sub
jb
movsb
test
jg
jg
rolb
push
add
cmc
push
pop
adc
call
fsubs
pop
mov
pushl
es
adc
push
cmp
dec
dec
pop
call
push
push
test
fmul
inc
push
sub
mov
mov
int3
jbe
stos
lcall
or
mov
in
sbb
mov
mov
or
fisttpl
push
in
nop
test
mov
pop
outsb
movsl
int
fsts
rcll
jecxz
or
jmp
outsb
dec
and
push
call
arpl
sub
roll
pop
add
jp
lods
das
jnp
pop
ljmp
inc
or
ja
fucomp
inc
push
jne
sub
inc
xor
ljmp
sub
rorb
jne
in
adc
mov
mov
hlt
jge
add
jle
fisubrs
loopw
scas
dec
push
sub
dec
fimull
adc
mov
mov
mov
icebp
ljmp
roll
call
insb
inc
cmovne
inc
lcall
mov
xor
adc
into
into
data16
lret
ljmp
and
inc
sub
sahf
int3
push
stos
scas
add
int
lret
inc
imul
pop
sbbb
outsl
sahf
imul
call
xor
mov
mov
jmp
repz
cli
dec
jg
aad
and
adc
push
mov
mov
fcmovnb
mov
push
lods
mov
fnsave
cmc
lcall
sahf
lret
popf
sub
imul
jp
insl
in
stos
lods
repz
and
push
dec
pop
and
add
or
ljmp
decl
cld
je
pop
cmp
xor
lret
aam
ljmp
and
test
xchg
movsb
xchg
stos
rcrb
xchg
cli
add
sbb
push
test
pushl
xor
jmp
cmovnp
dec
mov
ss
mov
loope
mov
sub
or
jmp
lret
pop
jb
mov
xchg
cwtl
pop
xor
mov
add
out
and
ljmp
into
prefetcht0
dec
rolb
repnz
inc
cltd
dec
inc
adc
adc
jns
cld
incl
mov
dec
test
movsb
pusha
and
nop
sub
inc
in
cld
jg
dec
addb
mov
mov
popa
cmp
dec
jns
sub
pop
jbe
fldcw
nop
ret
mov
lcall
fiaddl
push
fwait
dec
gs
mov
pushf
test
jae
or
cmp
add
lock
fisubrs
fstl
pop
fsubs
and
jns
jns
pop
xlat
and
jg
cld
push
push
in
xor
lret
push
rorl
ja
decl
cmp
lret
scas
mov
dec
or
int
lret
mov
xchg
push
in
mov
inc
mov
or
and
xchg
xchg
test
int3
dec
sub
mov
mov
shrb
cwtl
aam
lcall
fldl
push
mov
out
xchg
mov
push
mov
mov
fdivl
loop
and
imul
cs
call
mov
in
jp
mov
mov
jnp
adc
xchg
jmp
add
cwtl
cmp
add
stos
sub
jo
pop
jp
adc
mov
mov
jnp
inc
and
repz
sub
mov
hlt
sbb
in
lahf
lcall
push
movsl
movsl
mov
xor
lcall
and
xchg
sub
ficompl
lods
jae
hlt
mov
xchg
xor
ljmp
cmp
xchg
mov
loope
add
dec
outsb
push
jmp
ljmp
loop
sub
sti
mov
fidivrl
mov
and
mov
push
mov
and
cmpb
mov
lret
cmp
in
cmp
cmp
cmp
or
and
inc
icebp
rolb
pop
and
add
mov
cltd
pop
and
xor
inc
or
mov
cwtl
inc
dec
lods
fwait
push
adc
adc
add
push
lcall
push
or
xorl
or
or
out
clc
sti
pop
cmp
out
loop
adc
imul
movsl
incl
mov
mov
fstpl
test
lods
sbb
mov
cmp
aas
ret
mov
stos
jmp
je
cs
lcall
mov
mov
mov
sub
fdivr
mov
pushf
jae
stos
jecxz
mov
popa
cmp
lods
decl
lcall
mov
mov
lcall
fs
mov
inc
cmp
lcall
inc
fimuls
and
xchg
or
cltd
pop
cmp
lods
mov
ret
or
decl
pop
xor
cltd
mov
cltd
std
imul
mov
icebp
cmp
inc
lds
mov
cli
add
and
and
sub
ret
cld
mov
push
ret
call
pop
and
mov
ss
dec
call
ljmp
shlb
cs
xchg
sub
and
mov
enter
push
xchg
cmp
test
mov
sub
mov
lcall
int3
pop
pusha
xor
adc
out
xor
lea
and
ret
js
mov
cld
mov
or
jg
ljmp
nop
xor
daa
lret
nop
dec
cmove
adc
push
xor
mov
push
pop
fcmovnbe
pushl
mov
js
adc
or
ja,pn
or
test
push
mov
decb
sbb
mov
fidivrs
test
mov
and
test
repnz
sarb
mov
dec
cli
pop
sub
cld
cmp
loopne
ds
dec
lret
or
pop
push
adc
pushl
dec
cwtl
xchg
orl
es
or
popa
stos
cwtl
rcrl
cmp
xor
movsb
icebp
decl
adc
mov
jg
mov
in
inc
push
inc
inc
push
mov
stos
cmp
mov
call
push
mov
scas
mov
sbb
push
dec
ja
lds
cmp
fwait
pop
mov
inc
lret
aas
shll
sub
add
cltd
adc
imul
shll
xchg
adc
jae
dec
push
aaa
dec
cld
nop
xchg
pop
test
or
insb
enter
cmp
lock
and
add
jle
xor
and
jo
filds
mov
addb
sub
lea
inc
xor
test
push
inc
ds
xchg
nop
and
sbb
or
pop
pop
sbb
or
sub
push
mov
insl
inc
inc
lea
fisttps
divb
sbb
fwait
and
call
int3
lret
arpl
push
imul
lea
sub
xor
lcall
sbb
inc
dec
xor
xchg
or
outsl
inc
xor
cmp
sbb
sub
cmpsb
and
inc
cmp
lret
cmp
jne
inc
and
jg
and
es
pop
pop
adc
xchg
incl
ds
imul
popa
pop
xor
cmp
call
in
and
mov
sbb
cmpsb
pop
adc
pop
dec
dec
lock
aas
inc
dec
dec
cwtl
push
or
mov
mov
fs
xchg
outsb
mov
test
and
in
loopne
sub
mov
icebp
ljmp
mov
into
int
pop
push
jbe
cmova
sub
push
xor
jmp
push
xchg
push
outsb
pop
push
fst
cltd
sub
sub
and
mov
aas
mov
setns
xchg
cmp
dec
ss
lcall
pusha
dec
xor
sbb
adc
sub
mov
mov
inc
ja
push
inc
dec
pop
outsb
push
aas
push
push
push
xchg
lcall
outsb
lcall
jb
int
mov
sbb
mov
mov
mov
push
scas
jns
mov
shl
fisubrl
gs
lcall
cwtl
add
cmpsl
pusha
mov
dec
mov
jmp
lock
out
ljmp
inc
ja
out
cmpb
xor
test
mov
incb
mov
ja
out
sarl
in
mov
dec
dec
bound
push
dec
pop
outsb
mov
test
stos
rclb
shll
incl
lods
movsb
rcl
xchg
lret
ja
xchg
xchg
repnz
pop
xchg
mov
mov
dec
lcall
incl
je
arpl
test
loope
pop
push
inc
ja
lock
into
xlat
in
fwait
popa
pop
cli
fcoml
ja
cwtl
es
insb
or
hlt
lcall
pop
inc
jbe
insl
mov
cmp
out
cmpsb
xor
into
mov
xchg
sub
popf
dec
jb,pt
mov
sbb
mov
popf
js
ds
jae
mov
ljmp
pop
cmp
std
mov
push
mov
jecxz
fsubrs
dec
mov
sti
jns
sub
movsl
sahf
xchg
jnp
cltd
mov
shl
loope
pop
or
test
ret
xchg
pop
pusha
gs
bound
pop
pop
mov
scas
push
movsb
incl
scas
jb
mov
add
xor
mov
insb
pop
inc
mov
js
sub
pushf
lcall
rol
mov
jne
adc
jo
inc
addl
sub
mov
cmp
cwtl
shlb
pop
hlt
adc
inc
mov
fs
push
sub
fsubl
jmp
mov
int
cmp
fsubrl
leave
push
add
out
daa
iret
sub
ljmp
lds
test
inc
dec
sub
lret
mov
test
mov
adc
dec
push
push
mov
jg
aad
mov
test
dec
push
lds
ss
lret
jns
je
push
jmp
call
mov
push
xor
movsl
aas
xchg
cmpsb
add
mov
insl
lret
mov
leave
xchg
outsl
inc
xchg
lcall
iret
mov
mov
push
mov
dec
enter
test
mov
fdiv
enter
xchg
mov
out
cmp
pushl
or
popf
sbb
icebp
mov
repnz
or
pop
sbb
sahf
mov
decl
and
sbb
mov
int3
mov
mov
dec
xchg
mov
hlt
in
mov
lahf
ljmp
cmp
push
inc
sahf
js
test
add
fists
in
test
jge
xchg
fs
incl
mov
dec
out
aad
fldl
jnp
sub
jns
pop
pop
or
xchg
int3
push
das
xor
jmp
xchg
fcoms
sub
jbe
mov
sar
mov
fimuls
arpl
ret
push
imul
mov
jb
sbb
inc
dec
push
rolb
jge
or
adc
incl
pop
cmp
ret
rorl
mov
insl
cmpsb
in
sub
pop
loope
cmp
pop
lcall
cs
mov
stc
jecxz
inc
sbb
loopne
add
sbb
loopne
cmpl
xorl
cmpsl
pop
pop
cmp
or
push
jmp
movsb
mov
or
and
xchg
jbe
pop
rorl
xor
push
jo
adc
mov
adc
push
lret
mov
inc
adc
fs
les
mov
incl
lods
mov
cmp
and
mov
ljmp
pushf
popf
inc
imul
fsubrl
test
lock
cwtl
mov
bound
negl
jo
or
adc
out
movsb
sahf
ja
xchg
repz
dec
add
pop
popf
sar
mov
dec
mov
adc
and
sbb
test
stos
sahf
cmpsb
decl
adc
pop
push
outsl
shll
shll
popf
jg
test
pushf
xchg
ja
daa
mov
push
jecxz
mov
enter
push
or
gs
movsl
cltd
pop
stos
stos
dec
jecxz
xchg
addr16
add
and
sub
add
jo
cli
xor
in
cmp
mov
mov
mov
sbb
lcall
push
lods
mov
add
xchg
fnstcw
out
lcall
xor
dec
xchg
and
orl
mov
xchg
int3
dec
decl
popa
rclb
jno
jns
or
adc
or
jecxz
incl
inc
dec
cmp
icebp
cli
dec
daa
paddsb
test
add
sbb
out
mov
pop
sbb
pushl
inc
insb
jmp
test
gs
das
push
call
lret
lret
adc
inc
cmc
rcr
idiv
lret
sti
sbb
pop
inc
mov
xchg
lea
cmp
mov
adc
ret
das
mov
pop
shrb
repnz
mov
xchg
fwait
dec
arpl
clc
popf
xchg
daa
mov
lods
ret
scas
sub
push
jle
xchg
mov
daa
mov
cmp
lcall
pushf
mov
xchg
sub
dec
push
shlb
scas
mov
mov
iret
mov
mov
jo
pop
faddl
pop
fdivrs
mov
xlat
mov
hlt
mov
ds
cmovno
dec
lcall
stos
pop
and
outsb
jl
ljmp
cmp
ficomps
add
int
push
mov
sbb
call
inc
loope
push
mov
iret
lock
adc
sbb
push
add
mov
dec
pushl
inc
in
out
mov
jbe
mov
mov
fucom
and
dec
and
cltd
rolb
call
adc
mov
movsb
es
enter
xchg
fwait
cmp
dec
dec
lcall
jmp
add
or
add
dec
cmp
rol
sub
or
fistps
ljmp
sub
mov
and
decl
cmp
pop
pop
mov
movb
pop
js
push
into
stos
insl
and
xchg
pusha
loop
dec
push
aaa
sarl
nop
adc
xor
mov
fwait
mov
insl
imul
call
nop
xorb
pop
jae
xlat
test
inc
xor
sub
inc
scas
mov
decl
popf
inc
loopne
cmp
cs
scas
pop
dec
adc
arpl
out
jne
cltd
pop
and
push
inc
sti
jl
cmp
mov
push
mov
pop
cmpsb
into
jecxz
mov
and
loopne
movsb
das
incl
cld
add
daa
jmp
fiadds
mov
lahf
xchg
or
push
jb
dec
mov
movsb
push
xor
mov
push
pushl
orb
shrb
xchg
rorb
cmp
stos
xchg
enter
popa
or
shrb
mov
or
push
or
xchg
jb
dec
dec
into
inc
setns
cmp
inc
ljmp
pop
in
inc
shll
pop
cmp
lcall
sbb
fxch
lcall
sub
xor
or
adc
js
sbb
mov
or
inc
xchg
sbb
cmp
jne
dec
or
cmp
lock
lahf
jne
ret
or
or
cmovb
jb
movsl
mov
sub
lcall
loopne
mov
or
mov
int
inc
jmp
sbb
xor
xlat
outsl
call
call
mov
mov
xchg
push
inc
xor
mov
bound
ret
mov
mov
mov
xchg
lret
and
dec
rcrb
cmp
adc
ficoml
icebp
stc
insl
ja
mov
xchg
or
addb
or
adc
pop
into
pop
call
les
dec
icebp
add
pushf
bound
jmp
mov
and
jle
pop
pushf
scas
int3
and
call
jmp
lret
pop
loop
loope
test
idivb
loop
mov
add
mov
xchg
clc
add
inc
test
adc
loop
sub
lods
push
or
sbb
cmp
pop
enter
push
dec
call
loopne
sbb
mov
pop
cmp
adc
ljmp
lods
inc
lahf
mov
sub
fistl
push
or
sti
dec
add
or
jo
mov
jl
imul
cld
sub
push
outsl
dec
cwtl
clc
ja
pop
or
iret
insb
ljmp
xor
aaa
mov
adc
dec
and
fbld
data16
int3
mov
jp
repnz
iret
push
fisttpll
daa
mov
repz
jg
decl
sahf
inc
mov
mov
mov
mov
and
jmp
cmp
lcall
divb
ss
data16
sub
js
lods
sub
mov
pop
jg
or
fsub
jg,pn
pop
dec
jno
aas
jl
fwait
adc
mov
xchg
add
xchg
icebp
pushl
inc
push
cltd
jo
and
add
and
xchg
lret
pop
and
clc
push
jl
sub
add
mov
sub
repnz
inc
add
cmp
mov
push
add
cmpl
mov
jecxz
inc
xor
js
adc
lahf
mov
lds
shlb
mov
ja
and
push
pop
sub
imul
decl
lock
mov
jmp
push
push
dec
sahf
lret
xchg
and
call
cld
incl
xchg
push
xor
dec
cld
or
jmp
cmpsl
pop
mov
cld
lods
jmp
imul
pop
adc
jbe
jg
test
cmp
leave
mov
ljmp
mov
jle
rcr
adc
mov
loope
outsl
rcr
scas
adc
lock
pushl
mov
nop
add
out
dec
mov
sub
ds
call
mov
imull
inc
jg
fwait
ds
mov
loop
dec
cmp
push
aas
subb
call
out
jle
jmp
call
ds
or
mov
cli
call
test
addr16
inc
cwtl
mov
les
std
loop
or
cmpsl
jge
ja
sub
add
es
in
cmp
dec
data16
repnz
loope
add
pop
pop
add
add
add
es
in
jo
xchg
jle
daa
jg
cmp
pop
inc
jle
icebp
jmp
sub
sub
push
test
push
jae
or
xchg
jbe
jo
lcall
push
cmp
mov
in
ja
push
pop
cmp
ds
xchg
xchg
dec
test
jg
sub
shll
inc
jle
test
call
mov
sbb
xchg
daa
jns
inc
pop
or
imul
lcall
mov
das
adc
leave
jbe
cmp
adc
das
in
xchg
es
sbbb
jnp
inc
jnp
push
ja
shrl
add
inc
push
push
sarb
loop
xor
out
sub
stos
movsb
outsb
andb
push
mov
popa
aad
pop
pop
xchg
cmp
popa
sub
cmp
adc
clc
adc
xchg
mov
sub
jle
cwtl
clc
scas
jge
nop
push
xor
pop
push
nop
jno
adc
sub
rorb
clc
pop
clc
mov
xchg
addb
jmp
mov
fadds
call
xchg
std
jae
pusha
add
add
add
push
inc
mov
sub
andl
cld
decl
push
repz
add
push
adc
and
aaa
movsb
xlat
dec
jo
inc
aas
jae
nop
xor
inc
inc
xor
jmp
dec
daa
adc
and
clc
sub
idivl
adc
cs
cmpsl
push
push
mov
or
pusha
hlt
jns
xchg
xchg
imul
mov
jns
fbld
es
ret
push
jg
test
jae
cmp
sub
xor
xor
mov
inc
shl
mov
sbb
das
mov
adc
jnp
xchg
inc
cmp
and
mov
in
xchg
mov
cmp
xor
sub
and
fbld
jmp
inc
jnp
mov
rorl
loop
and
adc
repnz
scas
clc
mov
xchg
jl
lea
jb
gs
xchg
arpl
add
mov
cmp
int
gs
ror
cmp
add
jg
js
xchg
js
mov
add
xchg
adc
xchg
xchg
jl
xchg
add
jb
xchg
pop
xor
insl
mov
add
mov
push
mov
loop,pn
add
push
mov
cli
pop
adc
cmp
xor
decl
test
lahf
aaa
leave
mov
sbb
test
xor
bound
mov
sar
jmp
popf
pop
jmp
roll
dec
into
add
hlt
xchg
fwait
inc
jecxz
cli
scas
sbb
les
mov
inc
js
xchg
push
jb
xchg
sub
xor
xchg
inc
xor
sbb
push
cld
push
adc
xchg
push
das
pop
jno
pop
repnz
add
or
out
icebp
jbe
rolb
cld
pop
jl
sbb
daa
in
push
jb
pushl
std
mov
and
ljmp
or
cmp
xor
push
rcrl
xchg
and
mov
mov
add
lcall
ret
cwtl
push
push
xor
ss
mov
mov
and
xchg
test
aaa
fsubrl
jbe
dec
fs
add
loopne
push
pusha
cmp
add
cltd
push
addb
decl
lock
movsb
neg
fwait
in
and
dec
mov
sbb
fwait
sar
decl
dec
ret
xor
incl
daa
sbb
clc
sub
cmpsl
and
adc
inc
ljmp
push
inc
sub
shll
xchg
test
pop
xchg
stos
jne
pop
sub
mov
call
inc
hlt
movsb
pop
adc
inc
sub
js
mov
push
xchg
pop
outsl
orb
xchg
ds
decl
or
fwait
aaa
and
rcrb
aaa
stc
push
filds
aam
mov
jb
push
push
in
pushl
dec
xchg
fsub
push
add
mov
mov
jae
xor
lods
jb
inc
popa
outsb
out
push
dec
add
sbb
xor
mov
inc
mov
ret
pop
dec
fsts
call
and
pop
movsb
mov
movsb
dec
inc
inc
xor
jg
decl
jg
dec
cltd
mov
sub
jb
nop
pop
xchg
lock
mov
push
inc
lcall
and
test
scas
andb
insl
push
jae
xchg
xchg
jmp
mov
add
cli
mov
cmpsb
mov
aas
sbbl
jg
outsl
xchg
testl
es
sub
ja
lock
fwait
stos
pop
cmp
test
and
inc
icebp
fs
nop
popf
mov
ljmp
test
loop
push
push
mov
pop
cs
xchg
mov
mov
push
rcrl
or
jp
fcoms
dec
jecxz
mov
adc
pop
leave
mov
mov
mov
icebp
cmp
xor
pop
push
xchg
inc
sub
mov
xchg
decl
pop
adc
pop
clc
stos
adc
inc
xor
push
imul
jl
fisubrl
xchg
jle
inc
sub
aaa
mov
fdiv
mov
sub
mov
mov
and
ret
clc
scas
xor
pop
mov
dec
jg
incb
mov
xor
movsb
or
add
lcall
add
lock
movsl
pop
lret
mov
cltd
fwait
mov
jmp
scas
inc
sub
inc
loop
arpl
test
loop,pt
or
stos
push
pop
loop
or
adc
lcall
push
nop
mov
push
mov
hlt
jecxz
dec
adc
pop
and
mov
sbb
dec
shll
sbb
sbb
jg
sub
lods
jp
imul
ja
mov
add
adc
mov
jmp
push
idiv
sbb
adc
mov
cltd
inc
lods
adc
and
jg
rclb
mov
and
mov
cmp
push
mov
xchg
lods
and
and
rep
mov
cld
jmp
adc
mov
fcoms
pop
lock
cmpsb
push
mov
je
sbb
or
mov
dec
adc
cld
mov
pusha
mov
fs
movsb
loop
mov
incl
jae
mov
jmp
xchg
cltd
mov
icebp
imul
rcrb
testb
in
sbb
push
add
and
mov
dec
ja
or
jecxz
out
mov
cltd
sbb
mov
les
xor
lret
adc
inc
sbb
add
aam
push
jnp
hlt
and
ret
jmp
jl
jbe
mov
fcmove
aaa
pop
jmp
add
cmpsl
es
imul
xchg
cmp
push
cld
lcall
sti
xchg
fistl
cmp
add
adc
cmp
lcall
mov
mov
lret
out
xchg
in
inc
iret
cmp
call
loop
sub
adcb
xchg
push
pushf
enter
inc
add
lret
in
and
shr
mov
inc
sub
xchg
lea
and
pop
mov
out
clc
scas
mov
clc
std
mov
ja
push
or
pusha
cmpsb
mov
sub
mov
inc
jle
push
clc
jo
icebp
inc
cltd
jmp
rcrl
xchg
loopne
lcall
ljmp
mov
es
xor
mov
lcall
sub
shll
or
mov
mov
cmp
cmp
jl
lcall
cmc
pop
mov
ljmp
hlt
push
pop
rolb
stos
aaa
rolb
cld
test
fcomip
pushl
imul
jns
mov
cs
int
fsubrl
pushf
fadds
lret
dec
rolb
mov
jae
push
lods
and
int
cmc
ja
lds
push
or
dec
subl
rolb
cmp
cmp
data16
lock
pusha
mov
hlt
decl
jle
xor
in
outsl
insl
mov
adc
and
decl
mov
fdivrl
cwtl
inc
cmp
loop
mov
popf
rcrl
sar
ljmp
addl
add
int
cmpsl
push
add
icebp
ljmp
push
and
adc
sar
and
pushf
mov
xchg
cmpsb
bound
xor
inc
and
enter
imul
int3
insb
adc
ljmp
movsb
sub
mov
mov
ret
sub
stos
cmp
into
mov
pushl
dec
cmp
out
mov
adc
add
cmp
xchg
push
into
dec
adc
lods
sbb
lods
pushf
arpl
in
sbb
mov
ljmp
fidivs
cmp
fs
loopne
in
push
xor
xor
call
add
cmp
push
rcrl
push
xor
insl
fadd
mov
iret
mov
std
faddl
jmp
in
sbb
insb
xchg
je
out
jle
ja
xchg
jne
out
ljmp
jle
fbstp
out
sbb
pop
aas
js
push
mov
push
test
out
mov
sbb
and
fmull
movsb
ret
cmp
xchg
hlt
pushl
fadd
stos
fstl
sub
jp
mov
loopne
push
cli
cmp
outsl
sbb
sarb
xor
pop
sbb
mov
lods
stos
cld
call
inc
scas
pop
sbb
pop
imul
jle
mov
icebp
loop
sahf
in
ret
add
push
lds
jbe
mov
dec
sub
std
jb
push
ret
xchg
dec
std
ljmp
jp
add
shl
pop
loopne
push
add
mov
or
add
or
add
dec
or
aad
pop
int3
mov
decl
test
rcrl
mov
mov
rcrb
push
pusha
sub
push
jns
shl
call
mov
scas
jno
mov
lahf
icebp
ljmp
cmp
fistps
mov
sub
repnz
pop
mov
sub
add
ljmp
cs
xchg
fidivs
xrelease
sub
decl
or
push
jp
push
stos
repnz
loopne
mov
pop
cwtl
mov
jle
and
push
inc
mov
hlt
xchg
ds
mov
imul
xor
shll
mov
jp
push
lret
jmp
sub
push
xor
pop
xlat
jg
adc
jne
aaa
push
dec
fmul
out
imul
fisttps
lcall
mov
int
push
clc
mov
xor
add
movsl
in
ljmp
pushf
xchg
movsb
out
enter
add
push
decl
add
stc
movsb
das
cli
movsb
syscall
mov
or
push
push
jle
hlt
call
cmp
cmp
xchg
ficoml
int
pop
pop
xor
sarb
sub
cmc
ljmp
and
data16
vxorps
icebp
cmp
dec
jae
testb
mov
jae
gs
pop
jg
addb
dec
ljmp
aaa
loopne
lods
jg
std
mov
push
out
call
sub
add
dec
ret
insl
mov
cmc
lcall
jecxz
call
pop
clc
fcomip
decb
adc
inc
lock
ret
or
lock
ret
adcb
roll
inc
sbb
lock
sub
ljmp
adc
lea
push
cmpsb
inc
jecxz
nop
xor
movsb
call
push
jb
jg
and
loopne
rorl
aas
fsubrs
aas
dec
movsl
jmp
and
cmpsl
push
mov
adc
mov
les
or
das
adc
jle
cli
in
fbstp
arpl
sub
xchg
cmp
mov
leave
into
add
mov
and
sarb
inc
ret
icebp
arpl
xchg
sbb
xor
xchg
sbb
xor
push
sub
lcall
inc
mov
push
mov
mov
imulb
scas
imul
add
mov
fbstp
ljmp
enter
icebp
jp
xchg
sub
sbb
push
mov
add
adc
decl
mov
pop
mov
aam
decl
jl
xchg
add
mov
stos
fadds
inc
and
pushl
js
stos
inc
xor
lds
xor
test
jl
mov
xchg
jns
jg
or
adcb
scas
inc
mov
mov
mov
sti
or
push
orl
roll
sub
loop
sbb
xor
stos
inc
xor
add
jb
xor
or
negb
adc
and
popa
add
cmp
mov
lret
ljmp
mov
xor
loopne
or
lcall
sbb
or
mov
movb
loop
cmpsb
icebp
mov
adcl
adc
cwtl
aam
call
cmp
movsb
mov
push
movsl
mov
into
in
lret
and
fdivs
hlt
or
dec
dec
sbb
fimuls
sub
mov
and
add
or
mov
push
cmp
pop
cmc
enter
fmul
jne
mov
adc
sub
xor
dec
scas
mov
lcall
jp
ret
adc
jnp
sub
mov
stos
jbe
mov
mov
mov
ljmp
jno
or
cmc
xchg
xor
pop
filds
arpl
jl
lea
xor
dec
cmp
clc
pop
jle
imul
mov
pop
outsb
test
cld
mov
jp
js
xchg
js
repnz
mov
mov
adc
xor
dec
sar
nop
test
cld
jecxz
adc
scas
mov
fwait
out
sub
roll
and
pop
scas
or
pop
add
insb
cli
aas
ljmp
mov
ret
ljmp
fstl
mov
ror
adc
insb
jno
pop
popa
les
fwait
test
add
outsb
sar
mov
call
rolb
xchg
push
lcall
dec
jl
push
es
jmp
add
repnz
call
push
clc
cld
je
inc
push
and
cmp
and
sbb
mov
jg
sub
adc
mov
test
mov
clc
cmp
jl
xchg
mov
cmp
das
pusha
test
jb
data16
add
mov
jg
subb
push
xchg
mov
jg
sbb
pop
loop
test
jge
jmp
pop
icebp
and
mov
pop
cmc
mov
icebp
or
and
loopne
or
mov
xchg
xchg
lods
adc
and
jg
adcl
mov
or
cld
ret
jl
xor
or
imul
push
mov
imul
push
sbb
jecxz,pt
push
fidivl
ret
xor
rolb
ljmp
ss
aam
push
dec
mov
xchg
inc
add
shll
mov
incl
adc
into
sbb
ficoms
add
es
push
data16
rorb
xchg
push
cmp
bound
mov
mov
adc
movsb
pop
call
or
mov
movsb
pop
push
inc
inc
xchg
mov
jg
add
outsb
mov
stc
enter
js
adc
aaa
adcl
push
ljmp
pop
stc
lcall
dec
orb
aad
dec
movsl
movsb
and
loopne
adc
dec
pop
sbb
incl
inc
cwtl
shr
das
sbb
cwtl
lret
add
add
incl
cmp
inc
sub
rolb
mov
dec
fisubrl
pop
cld
loopne
pushl
add
xor
les
sbb
add
sbb
lret
mov
idiv
decl
arpl
out
mov
jne
jae
jmp
lds
xorb
and
push
lock
dec
sbb
dec
pop
inc
shll
mov
popa
push
push
lret
push
cmc
scas
call
lret
and
dec
pshufw
push
mov
jp
cwtl
pop
lds
dec
pop
es
and
ljmp
push
test
repnz
pop
inc
sub
sub
xchg
push
pop
push
nop
sub
imul
push
sub
sbb
and
sahf
add
test
push
jnp
adc
cs
sbb
inc
xor
ja
push
addb
lods
push
adc
add
adc
adc
decl
clc
xlat
cmp
orl
test
nop
and
rolb
clc
jno
xor
cmpsb
mov
test
fwait
adc
sysexit
enter
and
push
mov
cmc
inc
push
mov
stos
orl
inc
lock
sub
inc
fcmovu
mulb
push
mov
pop
fucom
fstpt
fadds
add
fdivrl
fs
lock
in
out
mulb
je
xor
add
adc
or
lret
push
test
lock
inc
add
ja
mov
push
or
sbb
mov
pop
pop
mov
xchg
shrl
xor
addr16
xchg
and
js
xor
and
mov
ret
dec
outsb
xor
add
push
fwait
add
jg
pushf
add
rorb
lock
jmp
sbb
inc
mov
xlat
and
cli
or
les
mov
incl
aaa
and
or
dec
add
pop
cwtl
xor
lcall
sbb
mov
push
mov
inc
sub
es
cltd
cmpb
jo
inc
sbb
mov
jg
call
mov
nop
pop
mov
or
or
je
lea
sub
dec
sbb
mov
scas
fs
ljmp
mov
test
or
cmp
xor
lcall
fidivl
imul
dec
testl
cwtl
mov
push
cld
cmp
inc
nop
test
push
push
mov
jl
pop
fucomp
ret
aam
jno
fimuls
mov
xchg
lcall
sbb
adc
roll
xchg
aas
xchg
mov
int3
out
ss
incl
into
push
pop
imul
loope
jbe
inc
pop
adc
pop
fwait
push
cmpsb
push
dec
push
pop
aas
jp
call
nop
jo
xchg
add
push
mov
or
mov
aaa
fprem
lea
jnp
and
inc
lods
pop
movsl
sub
scas
dec
cmp
xor
fs
push
cmp
adc
pop
sbb
cli
jg
inc
add
nop
add
les
push
dec
or
cwtl
lds
fisubs
jle
movsb
test
popa
mov
dec
in
incl
cwtl
popf
cmp
inc
jo
inc
test
mov
sub
cmp
nop
cmp
outsb
out
push
call
data16
hlt
addb
inc
push
daa
outsb
jno
cmp
mov
mov
fxch
or
cld
pop
mov
je
or
fisubs
xchg
and
add
cli
jle
mov
aaa
std
jg
and
ds
xor
ljmp
outsb
jge
gs
push
add
or
fisubrl
xor
push
stos
rcr
cmp
imul
ljmp
out
lods
jns
push
sbb
xchg
sub
call
jle
jmp
pop
xor
mov
ss
bound
ljmp
lds
mov
rclb
stos
inc
inc
test
aad
ljmp
jmp
ficomps
sbb
icebp
or
or
into
jne
ffree
addb
or
fwait
mov
aam
sub
lcall
dec
mov
imul
cmp
das
cwtl
mov
cmp
mov
sub
test
fbstp
cmp
and
dec
addb
inc
sbb
dec
mov
mov
lods
and
and
mov
sbb
pop
mov
call
mov
jg
push
sbb
push
enter
aam
add
roll
js
ljmp
or
lock
and
arpl
xchg
or
add
fiaddl
test
enter
fcomip
adc
cmpsl
das
loopne
and
cs
orb
call
std
call
sbbl
mov
mov
mov
cwtl
add
insb
cmp
add
inc
fadds
ljmp
js
or
push
adc
inc
mov
test
xor
inc
mov
lahf
daa
repz
lcall
cmp
and
push
push
add
push
cmpb
fs
mov
jg
test
sti
push
mov
and
sarl
int
and
mov
push
adc
mov
jmp
fwait
ret
ljmp
or
mov
xchg
cmp
jecxz
int
push
dec
sbb
sub
loopne
cwtl
lea
dec
mov
or
in
sahf
xor
ja
xchg
xor
xor
arpl
xor
es
rcrl
rcr
subl
mov
addb
adc
sti
and
fwait
lret
sub
adc
mov
shlb
or
sub
insb
testl
incb
movsb
dec
jb
je
mov
rcrb
lds
mov
mov
cli
sbb
mov
push
pop
repnz
xchg
incl
cmp
scas
jg
jmp
mov
cmp
inc
mov
add
dec
push
and
sbb
test
adc
ret
mov
sub
mov
mov
xchg
push
arpl
xchg
add
and
mov
jo
push
cwtl
xor
ljmp
popf
jge
xchg
sub
jg
push
rolb
daa
clc
add
add
and
test
int3
stos
arpl
cmp
scas
mov
insb
add
js
adc
mov
sbb
xor
test
or
push
add
popf
hlt
cmp
mov
rorl
frstor
add
cmp
adc
sbb
hlt
mov
inc
inc
pop
mov
jmp
or
movsb
jbe
inc
js
mov
jmp
faddl
dec
stos
sbbb
sub
cmp
or
clc
mov
pop
call
or
inc
test
mov
lea
pushl
mov
cmp
push
add
out
pusha
inc
ss
js
je
js
dec
pop
mov
jmp
jae
inc
out
xor
inc
and
test
mov
dec
subl
addb
stos
jno
aad
dec
mov
adc
std
inc
sub
lock
adc
xchg
mov
sbb
mov
add
mov
jo
cld
add
inc
test
cs
addb
icebp
add
xor
mov
fwait
test
jmp
xorb
jno
sbb
xorb
rcrl
mov
stos
jmp
popf
jo
add
clc
orb
xchg
push
mov
cs
loop
and
cmpsb
cmp
adc
test
enter
cmp
js
add
pop
rcll
js
sub
mov
or
decl
sub
ret
mov
shrl
lcall
cmp
stos
ret
sub
rcrl
inc
inc
add
fildll
inc
and
push
pushf
mov
sbb
inc
xlat
cmp
sub
cmp
cmp
call
cwtl
rcrb
mov
sbb
mov
cmpsl
jp
lret
test
inc
in
test
ss
fisttps
mov
rcrl
cmp
or
mov
jg
rorl
sbb
inc
adc
fcmovnu
dec
xbegin
mov
fildll
imulb
jmp
rolb
push
ja
adc
xor
add
out
jecxz
xor
xor
jbe
addps
mov
enter
nop
or
xchg
and
incl
cld
cmc
addb
or
aas
test
add
in
mov
pop
outsb
mov
vunpckhps
mov
sub
adcl
dec
cmp
xchg
shl
ds
pop
movaps
sbb
push
adc
and
stos
lods
jns
xor
fs
aaa
inc
sbb
adc
int3
mov
push
push
pop
jg
nop
or
mov
in
cli
incl
push
lock
dec
cmp
test
add
cli
add
push
inc
add
clc
subb
cmp
sub
cli
fs
lcall
mov
outsb
cli
add
mov
sub
xor
push
xor
sbb
jl
xor
cmp
cmp
adc
ror
scas
hlt
ljmp
adc
lock
sbb
mov
xor
sti
cmp
fcomip
decl
pop
rcll
pop
and
mov
ljmp
add
addr16
insl
jge
outsl
sub
lret
dec
xor
cmp
pop
clc
jmp
fsubp
in
rclb
test
mov
aam
shrl
xlat
jae
addl
lret
sbb
inc
shrb
jge
insb
xchg
jl
add
ja
or
aad
add
inc
xor
sbb
cmp
push
das
or
xchg
add
ljmp
push
mov
mov
add
push
test
add
jmp
sbbl
lea
lods
in
xchg
or
sub
mov
std
sub
fimull
sub
call
push
xor
fadds
repnz
rclb
pop
cld
popa
ret
iret
adc
or
pop
enter
cmpsb
mov
sbb
cmp
push
bound
sub
pop
adc
add
add
dec
andb
mov
pusha
daa
inc
in
pusha
add
lcall
popa
sub
push
call
aaa
adc
loopne
push
adc
add
js
fadds
and
adc
std
decl
cmpsb
jmp
aam
inc
fldt
cld
fiaddl
and
rcrl
jecxz
jg
mov
aam
cmp
int3
inc
sub
call
mov
movsb
call
mov
mov
into
sub
mov
pop
fisubrs
loopne
ficomps
das
sar
adc
adc
adc
sub
and
dec
das
cli
scas
mov
rcll
iret
pusha
push
ja
dec
pop
lock
inc
sub
cli
out
inc
or
dec
iret
dec
xchg
imulb
lea
pushf
mov
push
in
sbb
std
in
iret
xchg
popl
loopne
shrb
mov
pop
pusha
pop
dec
pusha
add
add
mov
add
lret
xchg
push
lock
add
test
dec
pop
inc
dec
call
sub
xchg
ljmp
and
loope
adc
sti
adc
std
or
call
pop
loope
push
std
add
inc
aaa
sahf
cmp
rcl
pop
and
push
pop
or
mov
jb
shlb
sbb
js
and
test
orl
dec
in
push
test
adc
xor
stos
enter
adc
fcomip
dec
add
subb
cmpl
mov
cld
lcall
les
orl
nop
cmp
test
rol
cli
pop
aaa
mov
ljmp
push
xor
adc
xchg
add
pop
push
int3
enter
cli
pop
incl
dec
int
xor
add
into
xorb
fcmovb
shll
xor
pop
es
fistpll
xor
int
fstl
pop
ror
cmpl
cmp
fcoml
ljmp
mov
in
mov
sbb
inc
loope
push
lcall
mov
pushl
bound
lds
mov
xor
imul
push
rcrl
out
hlt
fisubs
inc
negb
mov
out
jmp
idivb
mov
pop
cld
gs
ret
adc
jl
pop
ss
add
mov
jg
incl
pop
mov
jge
mov
call
js
push
test
inc
cwtl
add
call
add
or
adc
lcall
pop
jbe
dec
dec
push
or
imul
jge
add
fsts
xchg
xchg
mov
sbb
sbb
call
inc
int3
loope
test
repz
pop
movsl
or
bound
or
pop
inc
pop
clc
test
cmp
rorb
adc
add
sar
in
inc
sahf
xor
pop
add
sub
call
mov
scas
push
jecxz
arpl
inc
mov
cmp
es
sbb
or
or
push
inc
cmp
xor
xchg
daa
incl
fadds
mov
aam
popf
out
orl
test
call
repz
cld
dec
iret
or
add
adc
add
and
aaa
aaa
jmp
mov
mov
sub
clc
xchg
add
mov
decl
or
pop
fidivrs
add
into
jo
fbld
fisttpl
push
insl
test
dec
fcomip
ljmp
mov
sbb
scas
dec
out
mov
lods
dec
lea
call
sub
pushl
stos
jmp
xor
dec
dec
filds
mov
stos
in
cmpb
sub
dec
adcb
jg
hlt
mov
jo
jae
ja
mov
xorb
or
add
xchg
addb
mov
dec
lcall
mov
adc
fwait
push
mov
stos
shl
test
cmp
psubsw
aaa
add
cmp
cli
pushl
dec
iret
pop
and
lea
call
and
and
and
add
or
or
lods
lods
ret
dec
in
jg
mov
call
and
filds
scas
test
lcall
pop
enter
push
push
jo
push
xor
rolb
jno
popa
adc
mov
xchg
jae
clc
cmpl
pop
pop
ficompl
dec
pop
cwtl
dec
mov
lret
mov
push
add
mov
push
shll
ds
decl
enter
insb
push
fsubrs
or
or
cld
enter
mov
lcall
shl
jle
mov
xchg
mov
js
and
ljmp
pop
mov
adc
xlat
sbb
decl
outsb
sbb
xchg
pop
out
cmp
mov
mov
cmp
lcall
or
pop
xlat
scas
cli
jge
dec
jbe
push
lea
lea
push
dec
pop
sub
jmp
jmp
pushl
sub
outsl
ja
idiv
add
cmc
lods
adc
fcoml
cmp
fwait
daa
mov
or
ja
xor
mov
fsubrp
std
inc
ljmp
push
mov
nop
cmpb
cld
push
sub
incl
mov
mov
es
mov
xor
inc
xchg
sbb
add
enter
add
enter
aad
pop
decl
dec
push
sbb
shll
dec
cwtl
data16
inc
lds
push
loope
shll
adc
cmp
push
push
inc
xchg
add
mov
stc
ljmp
lds
mov
mov
or
xchg
lea
arpl
push
enter
push
push
mov
cmpsb
xchg
aam
mov
mov
inc
lret
xor
fwait
decl
loop
loop
sub
outsb
and
sbb
incl
cmp
sub
daa
lods
cli
icebp
inc
rorb
pop
cmp
inc
pop
mov
fsub
ja
adc
push
pop
clc
and
adc
pop
push
mov
mov
lock
cld
fldenv
xchg
popf
mov
movsl
dec
jmp
mov
mov
mov
push
mov
or
aaa
out
sbb
in
test
pop
jmp
xor
ret
les
adc
push
clc
in
push
dec
sbb
or
pusha
orl
pushl
dec
pop
enter
test
fsubs
add
mov
bound
inc
push
test
jmp
mov
movsl
enter
test
adc
mov
jmp
icebp
call
or
jg
insb
sub
fs
ds
and
or
jne
xchg
push
ds
xchg
push
inc
mov
jmp
rolb
xchg
push
pop
dec
out
push
ljmp
jno
or
add
push
cmp
mov
xchg
xor
popf
test
or
orb
jl
add
adc
loope
inc
loopne
cmp
pop
jp
movsl
dec
pusha
lcall
cmp
xlat
outsl
adc
mov
pop
adc
jo
sub
or
push
inc
and
fwait
test
pushl
jg
pusha
into
pop
xchg
jae
dec
push
adc
int
jg
dec
std
mov
sbb
pop
xchg
mov
fisubrs
adcb
nop
jecxz
mov
cmpb
xor
mov
dec
cmp
hlt
scas
dec
sbb
cmp
adc
push
or
cmp
incl
das
rclb
adc
rorb
int3
inc
adc
rolb
insb
mov
lcall
fsubrl
iret
ret
adc
xchg
or
adc
loope
sub
hlt
loope
fisttps
ret
or
sar
and
or
in
jl
adc
cmp
xchg
and
inc
xor
fs
adc
xchg
lods
jb
push
in
out
int3
sar
push
bound
xor
jle
ljmp
adc
stos
mov
push
ds
das
jge
inc
fistpll
or
mov
aaa
sub
add
xor
pushf
add
jl
push
ret
clc
mov
enter
cmp
icebp
cmpsb
lcall
mov
sbb
push
mov
pop
adc
je
or
fucomip
pop
lock
pop
and
inc
bound
aam
mov
cmp
arpl
bound
das
je
icebp
or
adc
push
cltd
movsl
cltd
dec
lcall
cltd
push
cld
pushl
iret
inc
fwait
aam
flds
fdivrs
std
neg
mov
mov
decl
cli
jbe
call
cwtl
jmp
in
cmp
and
ljmp
push
les
add
sbb
into
jno
sbb
movsb
mov
loop
stos
dec
xchg
xchg
lret
or
pushl
sub
add
in
xchg
lods
sub
test
cmp
sub
nop
test
imul
inc
nop
xchg
and
imul
sbb
sub
xlat
cmp
inc
xchg
and
je
adc
pusha
fwait
loopne
out
xchg
lods
add
or
dec
adc
in
cmpb
subl
adc
xor
das
jg
lods
ljmp
inc
incl
inc
cmc
xchg
and
pushl
cmc
shr
mov
and
adc
pop
or
pusha
fsubl
adc
rorl
push
faddl
or
sub
sub
jl
and
in
ret
dec
push
int3
in
imul
dec
call
add
gs
ljmp
push
in
hlt
rcr
pop
lcall
cli
loopne
sar
outsl
dec
das
icebp
adc
popa
ljmp
data16
xchg
sbbb
inc
add
pushf
sbbl
mov
cmp
ret
sbb
xor
or
adcl
and
cmp
xchg
pop
addb
dec
add
bound
pop
rolb
decl
push
mov
icebp
enter
adc
sub
push
cmp
pop
bound
adc
pop
push
enter
movsl
sub
sahf
repz
adc
xor
pop
mov
ficomps
mov
rcll
pusha
jb
movsb
jge
pop
sahf
in
adc
cmpsb
pop
pusha
ljmp
fdivl
sub
call
inc
adc
add
popl
mov
sub
and
jl
std
sbb
jae
nop
or
repz
stos
adc
push
fs
dec
pop
movsl
cmp
ja
mov
subb
lock
faddl
pushl
shlb
xchg
push
in
jp
outsl
xchg
mov
leave
cmp
and
and
pop
xchg
clc
inc
adc
mov
add
jl
sub
mov
imul
shlb
cwtl
ret
or
cmp
inc
adc
and
xorl
or
pop
les
mov
jne
insl
insl
or
pop
inc
insb
sub
add
pop
xchg
push
dec
cmpl
mov
aaa
mov
mov
mov
aaa
in
movsb
or
mov
in
cwtl
dec
pop
inc
movsb
sar
ja
nop
mov
gs
insb
mov
sbb
mov
shll
mov
decl
sbb
mov
xchg
addl
mov
and
mov
mov
xor
mov
out
out
or
adc
adc
popa
mov
push
adc
in
push
inc
add
repnz
fsubl
and
pushl
nop
sbb
adc
adc
jge
inc
xor
mov
out
mov
insb
leave
aad
mov
pop
dec
cmpsb
repnz
cmpsb
test
test
jle
pusha
sbb
cmpsl
lds
pop
lcall
int3
adc
mov
push
sbb
sub
push
sub
ljmp
icebp
fsubrl
dec
mov
stos
mov
add
or
addl
jmp
sub
fs
jmp
sub
ret
push
pop
push
mov
sub
ret
shll
imul
cli
jle
adc
dec
hlt
mov
push
adc
xchg
sub
add
lods
out
mov
lcall
push
xor
mov
mov
mov
sbbl
mov
pop
xlat
mov
sbb
int3
cmp
xchg
scas
adc
xor
loopne
and
mov
jbe
inc
adc
jg
sub
dec
ret
sbb
push
mov
dec
and
call
add
out
xor
add
or
loopne
mov
or
mov
into
loopne
adc
inc
icebp
data16
push
jecxz
push
sbb
xchg
cmpsl
and
adc
lock
incl
into
jge
inc
xchg
lds
or
and
and
popf
cmp
cmp
sub
sbb
or
mov
shlb
movsl
xor
push
ljmp
clc
cmpsb
je
pop
xchg
movsb
mov
push
xchg
add
inc
or
rclb
adc
dec
out
xor
ljmp
sub
dec
mov
adc
call
xchg
push
jns
daa
lock
stos
cmp
xor
sbb
cmp
nop
inc
add
pushl
ret
addr16
test
fistps
mov
pushl
sub
inc
cld
mov
and
in
dec
aam
scas
mov
jg
lock
decl
lock
imul
sbb
ss
decl
pop
pop
mov
cmp
cmpsl
scas
std
lret
jo
add
and
add
sbb
push
shlb
xchg
add
clc
int
add
in
xchg
imul
pop
sti
mov
std
mov
or
int
js
sbb
inc
push
cmpb
mov
add
or
mov
fadds
push
mov
xlat
jecxz
inc
and
ret
jg
in
pop
mov
in
inc
pusha
dec
or
in
add
mov
les
pop
dec
xchg
ret
dec
enter
sahf
xor
adc
mov
mov
loope
fdivr
ljmp
into
sbb
outsb
cmpl
push
mov
shrb
inc
pop
adc
push
mov
xchg
gs
cwtl
pusha
pop
xchg
popa
xchg
xlat
jno
testl
hlt
pop
fwait
mov
fldenv
cmpsl
cs
hlt
or
les
shll
loopne
add
add
pushf
lds
sarb
jb
rcrb
fstps
fistl
in
out
fsts
xor
inc
sbb
mov
call
mov
call
dec
les
push
inc
push
shr
sbb
das
je
push
jmp
pop
ljmp
inc
push
into
sbb
dec
aam
test
lret
push
fisttps
stos
out
fsts
pop
lahf
jle
adc
hlt
pop
hlt
aam
add
sub
and
pop
push
jecxz
dec
sar
scas
push
pop
mov
mov
cli
test
or
xchg
add
push
or
inc
dec
enter
mov
call
cmp
jmp
mov
dec
in
pop
sbb
faddl
les
sub
mov
fcomps
sbb
inc
push
faddl
cmc
mov
sbb
inc
movsb
imul
fbld
gs
imul
shll
roll
jg
movsb
cmp
shlb
mov
lret
leave
and
jns
dec
add
lcall
add
sahf
lret
inc
lods
mov
dec
mov
cwtl
mov
mov
jecxz
mov
inc
pushf
inc
sbb
test
jne
repnz
mov
sbb
loope
jne
push
stos
xchg
pop
es
mov
or
insl
dec
pushf
dec
pop
sbb
test
iret
sti
les
fildll
inc
inc
mov
push
add
inc
sbb
rcrb
and
rorb
mov
rolb
push
popf
insl
push
pop
in
mov
xor
lods
dec
rorl
push
daa
adc
lcall
incl
dec
push
loope
adc
lea
pushf
ljmp
mov
xor
mov
nop
pop
rorl
or
mov
movsl
pusha
aad
lcall
sub
sbbl
loop
mov
pop
insb
dec
decl
add
je
jno
lahf
cltd
cli
lcall
icebp
xor
sub
fisubrl
pop
or
inc
cli
dec
int3
pop
xor
popa
out
adc
cmpsl
push
andb
lcall
fisubs
cmp
in
cmp
dec
outsl
clc
fnsave
push
jns
pop
outsb
aam
aam
lock
das
sbb
mov
sbb
inc
aam
add
and
lock
in
test
mov
flds
or
jecxz
into
out
adc
and
dec
lcall
dec
std
jg
outsl
push
aam
call
out
addr16
into
cmpsb
nop
mov
dec
and
jg
or
lods
loop
rcrb
inc
stc
mov
jg
sbbl
jle
or
jb
loope
dec
fstl
push
push
lcall
in
cmp
xchg
sahf
popa
cmc
xor
pop
mov
dec
icebp
add
movsb
insb
sbb
fnstcw
inc
mov
sarb
pushf
inc
loop
aam
and
fcomip
bound
adc
lock
push
pop
cli
adc
push
xor
sarb
and
push
pop
enter
inc
inc
cmp
pop
fs
fidivs
xor
pop
icebp
push
mov
pop
aas
popf
cmpsl
pop
mov
out
aam
imul
loopne
jp
mov
in
lea
mov
cmp
adc
andb
sbb
roll
push
call
mov
xchg
sbbl
es
std
pop
hlt
divb
mov
sub
dec
stos
mov
sub
mov
pop
imul
pusha
sub
arpl
aad
in
shl
or
ljmp
sbb
mov
icebp
pop
push
fdivr
inc
test
inc
cmp
imul
push
mov
mov
mov
insb
mov
sub
lods
mov
cmpl
ds
sub
push
in
les
ret
dec
push
sbb
push
stos
pop
mov
sbb
addl
cmp
leave
dec
in
into
or
adc
push
imul
mov
push
mov
gs
mov
decl
mov
push
push
test
outsb
popa
hlt
insb
in
ds
push
pop
jmp
xchg
loope
jmp
push
push
leave
mov
cmp
sub
dec
pop
test
mov
sbbl
jmp
out
loop
sahf
xchg
sbb
adc
add
pop
lret
test
pop
inc
andb
or
inc
add
jg
shll
dec
and
out
lcall
sub
test
ljmp
test
pushf
adc
stos
mov
jmp
xchg
lcall
call
fmull
mov
cmp
in
out
in
cmpsb
add
fsubrl
clc
outsb
add
push
das
add
push
out
bound
subb
stos
repz
ds
hlt
scas
inc
jge
pop
xchg
xchg
and
dec
dec
mov
xchg
inc
notl
cmp
std
clc
xchg
scas
stc
mov
jp
stos
scas
cli
push
inc
cmp
cld
lret
xchg
jmp
leave
scas
dec
test
mov
std
shrb
ljmp
cld
push
jo
xchg
add
out
call
in
insb
call
decl
in
push
mov
sub
icebp
lcall
cmovne
nop
xor
pop
movb
jg
cmc
pop
xor
cmp
cltd
pushf
jo
mov
std
outsl
xchg
lods
mov
adc
xchg
sub
inc
xor
xchg
std
sbbb
inc
rcr
adc
lcall
mov
decl
loop
sbb
gs
imul
mov
jp
mov
add
or
cs
adc
ljmp
push
fcom
mov
movsl
mov
fsubp
push
mov
loopne
mov
push
inc
pop
scas
jbe
decl
subb
jmp
pushf
dec
mulb
jb
cltd
imul
mov
jnp
stos
scas
or
push
in
stos
cs
dec
xor
inc
inc
xor
lods
sbb
cs
stos
nop
hlt
pusha
test
sub
pop
icebp
decl
cmc
jo
cmp
leave
mov
out
inc
js
sub
out
cmp
mov
into
stos
bound
pushl
mov
lock
enter
sub
dec
xchg
inc
lods
mov
filds
jno
mov
mov
push
cmpsb
xor
mov
sub
sub
cli
sub
scas
push
dec
add
push
mov
and
jne
xchg
inc
fnstsw
dec
aam
cmp
call
mov
xchg
mov
sahf
test
pop
mov
dec
adc
cmpsb
xchg
pusha
and
mov
je
add
out
addb
push
lcall
sbb
add
dec
je
mov
loop
data16
inc
jnp
jp
decl
sbb
push
sub
pop
add
adc
mov
sbb
dec
sub
sub
movsl
sahf
out
cmc
call
bound
scas
out
xor
lret
lret
cmpsl
and
mov
push
repnz
icebp
out
and
mov
es
or
loopne
and
cmc
and
fbld
add
imul
movsl
fcomp
ret
mov
pushf
pop
gs
and
cwtl
inc
mov
fisttpl
pushl
mov
pop
lret
mov
xor
pop
iret
mov
add
iret
sub
icebp
inc
or
inc
std
jbe
inc
mov
aas
lds
mov
sbb
pushf
add
insb
push
push
lcall
ljmp
les
les
lock
fstl
push
sub
jbe
cmp
call
cmpsb
jbe
dec
jmp
mov
adc
mov
dec
adc
jmp
sbb
push
pushf
outsb
or
push
dec
inc
les
negl
push
or
xchg
sub
push
cmpsl
call
fs
stos
and
dec
stos
adc
cld
lcall
repz
sub
dec
fisttps
shrb
mov
or
ffreep
lcall
jle
xchg
xor
and
jg
jge
jge
ja
out
mov
inc
das
jle
ljmp
cmp
dec
push
repnz
push
jg
das
mov
insl
xchg
imul
js
lcall
dec
imul
or
iret
xor
divb
inc
les
mov
jnp
xor
push
incl
iret
mov
mov
sub
fidivrs
bound
sar
pushl
movsb
and
sbb
shlb
xchg
mov
sarl
call
lods
jge
or
leave
shll
pop
mov
adc
incl
mov
add
fldenv
sahf
mulb
enter
mov
mov
popf
adc
cld
jmp
add
gs
pusha
daa
inc
sbbl
shl
pop
pop
xorl
loop
fnsave
ja
xchg
mov
repz
sbb
fyl2x
pop
mov
dec
and
cmpsl
out
mov
test
mov
cmp
ja
lcall
xor
add
mov
lcall
cmp
cmp
xchg
mov
cmp
gs
mov
data16
adc
js
jbe
mov
mov
push
cmp
jle
mov
loope
pop
aad
out
adcb
pop
xchg
mov
jae
inc
mov
nop
sbb
or
lcall
decl
xchg
push
inc
inc
ja
rcr
mov
or
mov
push
push
lret
fildll
frstor
popf
icebp
sub
ja
inc
xor
add
movsl
call
add
sub
outsb
aas
leave
hlt
pop
leave
xor
stos
or
ljmp
inc
mov
scas
fwait
ljmp
ja
push
jne
sbb
xorb
push
and
push
mov
iret
jmp
jle
mov
inc
sbb
and
sub
addl
aaa
out
js
inc
xchg
adc
jnp
pusha
stos
mov
mov
out
sbb
stos
not
ret
jmp
mov
mov
les
cmp
mov
iret
out
sbb
movsl
mov
jp
or
pop
pop
test
sar
jmp
ds
sti
mov
jnp
insl
and
decl
inc
leave
sbb
jns
mov
xchg
jmp
add
adc
aad
mov
add
jl
sbb
sub
mov
jg
jo
jns
push
mov
inc
rcrb
inc
cmpsb
lods
mov
or
or
jmp
cli
pushl
rolb
sbb
lea
mov
xor
or
mov
cli
dec
les
fstpt
fcomip
jg
nop
add
xchg
jl
popw
stc
adc
das
sbb
rcl
cld
daa
sbb
or
incl
mov
clc
cmc
pop
push
or
push
scas
push
add
lcall
jo
push
xor
adc
roll
test
jmp
xchg
aad
cwtl
or
mov
dec
in
roll
mov
in
lock
push
in
xor
cmp
mov
call
es
xchg
cmp
movsb
dec
adc
rcrb
cli
adc
mov
incl
clc
cwtl
dec
dec
ds
mov
fwait
sub
test
adc
ljmp
jnp
inc
pop
scas
aam
dec
lret
xchg
pop
pop
mov
and
push
mov
pushl
shrb
test
imull
call
jecxz
in
pop
nop
decl
or
lock
cltd
aas
jg
mov
in
lds
mov
pop
and
pop
imul
pop
mov
outsb
fnsave
pop
adc
xlat
rolb
movl
pop
test
mov
out
push
js
inc
ja
mov
fnsave
pop
pop
lcall
xor
adc
hlt
call
lcall
pop
stc
mov
xor
pop
movsl
mov
add
mov
nop
rorb
clc
incl
sbb
roll
pushf
xor
or
mov
lcall
test
rorb
ret
sub
cmp
lds
rcll
lea
pop
popa
test
sub
imul
sti
sub
inc
repnz
adc
sbb
mov
xchg
pop
and
cld
mov
jae
mov
inc
xchg
repnz
pushf
in
jmp
sub
mov
mov
loop
mov
mov
mov
lret
ljmp
jno
xor
aas
ret
add
outsb
dec
insb
scas
mov
add
mov
mov
daa
inc
cld
push
mov
mov
xor
int
aad
add
mov
jo
push
sti
incl
sbb
pop
jecxz
cmp
pusha
rorl
push
mov
andb
push
ss
mov
jmp
fldenv
popa
add
in
scas
adc
add
popa
gs
or
push
dec
cld
fisubl
mov
ds
ret
and
sbb
xchg
aam
lds
pop
mov
adc
mov
sub
sbb
sbb
loope
inc
fadds
bound
xchg
mov
dec
pop
mov
push
lock
or
jg
jmp
push
or
xchg
dec
dec
adc
outsb
add
out
lcall
jo
sbb
aaa
lcall
cli
push
jmp
jmp
xchg
lea
mov
bound
cmp
aas
mov
ret
push
add
cmc
push
cmpb
neg
or
insl
cmc
cs
jmp
xchg
rcll
fdivl
fstl
outsl
nop
xchg
dec
popa
xchg
inc
cld
je
aad
dec
rcll
cld
lcall
or
call
dec
mov
push
scas
jns
movsb
inc
ljmp
mov
inc
jg
xor
sbb
outsl
fsubs
sub
dec
xchg
push
leave
pop
clc
ljmp
xchg
mov
gs
shll
aad
and
popf
or
adc
loop
std
lcall
outsb
xlat
jmp
fdivs
mov
lea
jg
je
mov
xchg
mov
pushl
push
mov
inc
or
mov
movd
xchg
jne
push
pop
jg
pop
incl
cld
jg
mov
push
add
call
or
or
mov
jnp
lcall
sub
sub
add
push
loopne
push
test
cmp
inc
pushl
or
test
push
add
add
xchg
loope
imul
add
lock
popa
push
jae
repnz
cmp
clc
aas
sbb
test
jl
inc
cmp
int
ljmp
xor
cmp
pop
in
imul
aam
test
pop
or
mov
paddd
fimuls
cld
mov
mov
testb
xor
fcompl
sbb
mov
pop
jno
pop
sbb
sub
ret
ljmp
je
popa
fcomip
cmpsb
sbb
xor
dec
and
inc
cltd
dec
insl
push
xchg
mov
mov
movsl
subl
mov
call
out
cmp
sahf
lock
or
enter
push
xchg
pop
mov
adc
lcall
ss
cmp
cltd
mov
mov
inc
cmp
jns
or
clc
pushl
inc
rorl
fcomp
dec
loop
aas
outsl
cmpsb
int
icebp
inc
bndstx
addr16
mov
ljmp
addr16
sarb
or
pop
aad
aad
loop
xchg
je
xchg
incl
insb
cld
pop
loop
mov
cmc
repnz
adc
inc
push
xchg
and
inc
or
ds
call
and
sbb
push
xchg
call
loopne
jg
pop
inc
push
inc
inc
rcrb
adc
lods
fcom
sub
dec
pop
call
cld
jl
dec
loop
add
xor
cltd
rclb
popa
jecxz
or
mov
lahf
shlb
fsub
sbb
fmuls
pop
mov
int3
or
cmc
lret
incl
shll
out
mov
das
xchg
stos
xor
jmp
lds
mov
or
cmp
int
stos
cmp
and
mov
sbb
cmp
int3
cmp
cmp
ljmp
cmp
lods
rcrl
lcall
xchg
cmpb
mov
out
dec
incl
jg
add
mov
fwait
lock
sub
xchg
icebp
mov
repz
fs
ljmp
xchg
repnz
ret
ss
lods
xor
aas
gs
into
and
dec
jae
adc
cmp
ds
mov
mov
mov
mov
or
out
xor
pop
mov
ret
mov
inc
or
dec
dec
xlat
sub
ljmp
mov
movsl
pop
pop
sbb
ja,pn
push
and
push
lcall
xor
push
lret
filds
dec
lahf
mov
dec
mov
jmp
sbb
push
push
pusha
js
hlt
pusha
nop
pusha
and
sbb
cmp
xchg
or
js
pop
mov
ljmp
pop
outsb
jns
sub
mov
lret
mov
jno
test
movb
xchg
push
sbb
xor
mov
cli
jg
push
cmp
lea
inc
mov
mov
sub
leave
cmpsl
cmp
fimull
adc
add
inc
ror
and
sbb
adc
sub
jmp
xor
cltd
pop
testl
pop
mov
adc
cmp
dec
xchg
ljmp
loopne
call
inc
imul
fwait
leave
jae
out
mov
aas
sub
das
insl
mov
jbe
pushl
mov
and
mov
inc
inc
sbb
mov
push
int
push
jg
mov
xchg
mov
add
push
stos
mov
aad
lods
imul
fcmovbe
mov
mov
add
push
push
adc
fmul
push
add
pushf
hlt
mov
in
shrl
ljmp
rcrb
jnp
sarl
pop
push
enter
jns
mov
push
push
adc
adc
outsl
jp
xor
arpl
lods
lods
dec
stos
and
in
or
ljmp
test
mov
data16
cmp
incl
sahf
test
push
or
call
lea
pusha
xor
pop
mov
hlt
or
in
cmp
stos
xor
dec
incl
lret
sub
movsb
ret
dec
imul
jo
jno
pushf
idivb
sbb
fldl
cmc
xchg
cmp
test
mov
xchg
jmp
nop
clc
dec
cmp
fimuls
inc
add
push
inc
mov
addb
or
fwait
push
adc
bound
xchg
cs
adc
sbb
rcr
lods
bound
das
sbbb
inc
aam
adc
jp
iret
cs
call
ja
rorl
mul
test
push
repnz
pop
cld
aad
jbe
stos
loope
rolb
mov
mov
jl
mov
hlt
lcall
shl
and
aad
ds
movsl
jecxz
data16
xchg
fldcw
out
and
call
mov
in
cld
roll
xor
ljmp
push
stos
xchg
push
daa
jle
aad
dec
inc
sahf
cmp
test
xor
mov
push
loope
sti
mov
mov
jg
aaa
addl
jo
pop
ret
rolb
adc
cmp
jmp
or
mov
imul
xor
imul
and
jmp
xchg
cmpsl
mov
addl
mov
mov
insl
jb
pop
fimuls
ljmp
sbb
ljmp
jg
loope
cld
dec
xchg
loop
push
mov
pushl
push
shlb
fsubs
dec
add
xor
fistpll
or
add
xor
pop
out
mov
add
pop
into
dec
add
pushl
sbb
xor
dec
pop
sbb
out
out
pop
movsb
sub
or
repnz
xor
sti
pop
icebp
mov
inc
cli
pusha
je
sarl
insl
mov
xchg
ja
int
loopne
fsubs
fsubrs
mov
push
adc
sub
or
lock
sub
sub
sub
xor
or
loop
inc
das
outsl
pop
inc
push
jg
pop
scas
fsub
movsb
fdivrl
adc
mov
call
icebp
or
pop
std
ljmp
stc
push
inc
das
scas
das
loope
addr16
outsl
je
filds
mov
add
jb
xchg
loopne
loope
jecxz
mov
movsl
incl
adc
outsb
sub
add
push
jbe
push
testb
jg
daa
js
dec
lcall
push
pushl
jns
mov
scas
js
add
fisttpl
and
cmp
sbb
fimull
mov
cmp
int3
mov
lret
idivb
call
xchg
mov
jmp
inc
loop
je
aaa
std
or
add
mov
addl
mov
je
cltd
addb
xchg
add
aam
in
lret
mov
xor
pop
sbb
pop
mov
mov
pop
mov
lods
mov
adcl
repz
inc
xor
incl
stos
inc
sbb
xchg
aam
mov
xor
test
test
es
mov
repnz
xor
bnd
scas
es
ljmp
xchg
test
mov
arpl
sbb
popf
dec
bound
xchg
dec
cli
es
ljmp
test
adc
mov
fsubrs
nop
lret
inc
mov
adc
xchg
cmp
cmpsb
scas
hlt
out
pop
test
bound
sar
push
lock
mov
push
fistps
adcb
clc
mov
xor
push
push
sbb
adc
inc
or
fisubrl
push
push
test
lds
clc
push
ficoml
imul
cwtl
push
repz
mov
sbb
inc
vmread
pop
mov
mov
mov
adc
mov
in
shr
ljmp
fs
jmp
popf
repnz
cmpsb
mov
inc
jb
loope
sub
shr
mov
mov
add
and
lret
call
enter
cmp
dec
je
push
loopne
xor
sub
pop
adc
dec
pop
and
add
aaa
lcall
adc
pop
cwtl
push
pop
push
lock
cld
dec
into
or
mov
out
dec
in
aam
scas
mov
dec
fadds
add
lods
xor
shl
shrb
lcall
ljmp
mov
cmpsb
mov
pop
mov
cmpsb
enter
jno
outsb
sub
hlt
dec
fiaddl
js
adc
fdivr
jno
dec
iret
inc
iret
or
incl
outsl
es
mov
and
mov
fsubrs
into
lret
or
ljmp
dec
call
cmp
jne
or
call
push
lods
lods
xchg
pop
aaa
add
mov
sbb
ljmp
jmp
imulb
fisubl
inc
mov
and
mov
mov
loope
pop
movsl
mov
icebp
xor
or
mov
cltd
movsb
or
lret
cmp
shll
and
decb
arpl
mov
jle
insl
mov
iret
pop
enter
jb
test
hlt
dec
call
or
loopne
mov
add
xor
out
clc
pop
cmc
adc
ds
nop
push
xor
xor
xor
cli
mov
insl
adc
push
daa
out
out
js
lret
scas
lret
pop
ja
inc
adc
test
ficoms
hlt
incl
mov
mov
mov
mov
loopne
call
pop
stos
es
pop
outsl
or
int
jo
mov
insb
ljmp
mov
sub
in
or
jle
mov
aam
into
in
pop
out
fadd
in
adc
test
cli
adc
adc
adc
add
sarb
mov
xor
and
adc
stos
adc
arpl
sti
inc
dec
adc
sub
insb
insb
xor
pusha
or
data16
push
xor
mov
ficoms
push
jbe
leave
push
or
dec
xchg
jno
mov
cmpsb
mov
insl
lds
pop
xor
xchg
jo
out
push
mov
push
sub
dec
mov
call
and
mov
call
out
int3
leave
es
pmaddwd
incl
push
inc
rol
addb
inc
add
sub
or
inc
rcr
lock
pop
cmp
push
jno
jg
sarb
roll
inc
push
pmulhuw
jmp
je
jo
aaa
jb
fs
incl
xor
adc
jmp
cli
cwtl
sub
lcall
inc
inc
je
mov
lock
push
inc
and
jo
call
scas
cmp
push
push
and
cmp
pop
mov
inc
aam
fistl
xchg
xor
repz
inc
outsb
iret
in
add
call
js
bnd
cmpsb
sub
adc
out
pop
stc
sub
push
jp
mov
xchg
clc
incl
or
xor
jne,pn
das
xor
adc
outsb
int3
push
mov
or
ljmp
testb
xchg
hlt
pop
sbb
and
xor
decl
repz
leave
mov
faddl
stos
mov
subb
imul
outsl
clc
leave
sbb
jecxz
mov
xchg
out
es
paddq
out
adc
fsubl
insb
test
hlt
fbld
jo
adc
dec
test
jb
notl
push
out
mov
scas
roll
sbb
std
ja
adc
inc
rolb
clc
movsl
dec
xchg
push
aaa
push
cld
decl
stc
in
or
jmp
das
mov
jl
repnz
or
ret
pop
call
sub
mov
or
jmp
nopl
ja
add
dec
repnz
movsl
stos
xor
mov
xchg
jae
aaa
jo
pop
das
inc
std
mov
or
mov
cmpsl
xchg
stos
adc
dec
ljmp
dec
out
sub
adc
push
and
in
mov
adc
std
ljmp
xor
push
ret
adc
mov
push
bound
push
pop
mov
insb
dec
inc
cs
fsub
xor
push
scas
fisttps
call
lret
js
jecxz
pusha
dec
add
hlt
mov
cmc
loopne
jg
pushl
js
adc
and
orb
je
mov
loopne
in
xchg
push
push
lahf
mov
daa
cld
xchg
add
xchg
inc
imul
inc
pop
xchg
ljmp
hlt
inc
pop
mov
cmp
jp
cmp
andl
out
jno
ljmp
xor
pop
sub
aaa
inc
in
das
sbb
fdivrs
pop
sbb
mov
mov
sub
pop
lret
push
pop
jbe
das
sar
push
cmc
xlat
rcrb
inc
hlt
push
testl
lcall
or
ss
mov
xchg
jae
mov
imul
dec
jno
insb
jp
or
ljmp
mov
jbe
add
and
push
xlat
push
iret
mov
incl
outsb
jb
idivb
mov
ds
jge
stos
pop
inc
add
add
ficompl
pop
inc
ljmp
xor
dec
js
lods
sti
ja
pushf
add
call
jns
sbb
inc
adc
dec
adcl
enter
mov
lods
lds
stc
add
rcll
and
jmp
outsb
repnz
enter
outsl
mov
add
jge
cmc
insb
sub
mov
pushl
in
sub
outsb
das
xchg
das
adc
mov
pop
mov
hlt
and
cwtl
pop
subb
das
lock
test
fs
cmp
push
or
push
incl
or
xlat
sbb
mov
jp
mov
sbb
pop
xlat
packsswb
aaa
xlat
jbe
xchg
fisubrl
test
scas
shrb
adc
lods
push
cli
mov
sti
lea
sub
push
sub
mov
cmpsb
dec
jg
xchg
jmp
lods
dec
or
mov
popf
clc
call
push
cs
push
mov
pop
rcrl
cmp
sub
je
incl
add
inc
pusha
jle
loopne
mov
push
jmp
fiadds
add
xor
call
xchg
fisubrs
pushl
sbb
ss
add
std
mov
rcl
or
adcb
int3
mov
add
ret
mov
mov
shlb
or
jmp
dec
int3
ss
pushf
cmp
adc
es
out
cli
sbb
mov
jnp
dec
mov
xor
shl
add
and
dec
xchg
je
mov
nop
lock
jp
into
cli
arpl
mov
dec
mov
push
or
adc
shll
xor
fistpl
js
fists
js
data16
inc
push
vmwrite
mov
sub
push
shlb
pop
shrb
call
leave
inc
cli
xchg
push
sbb
sub
cli
nop
notb
clc
lea
jecxz
dec
mov
or
mov
add
add
incl
ret
xchg
rol
inc
repz
movsl
shll
out
incl
cmpl
jl
pop
or
lea
push
mov
push
loop
adc
pushl
mov
or
sbb
hlt
lock
xor
push
out
jb
xchg
pop
mov
je
int3
cltd
shl
insb
xchg
mov
pop
stos
mov
or
mov
stos
jne
data16
pop
lcall
ja
mov
push
stos
push
mov
scas
mov
aam
je
jecxz
in
xlat
mov
iret
test
inc
mov
cmp
inc
adc
test
les
mov
jmp
xor
out
lret
or
ds
aad
enter
les
cli
clc
add
jmp
or
xor
dec
cmpsl
cmp
xchg
jl
xor
in
addb
xor
js
jecxz
sub
ljmp
sub
aaa
dec
xor
cmp
pushf
insb
push
incl
push
jg
push
imull
testl
std
scas
inc
dec
mov
pop
xor
sbb
popa
jb
xchg
aas
and
mov
cli
pop
mov
lcall
inc
adc
decl
aam
and
sbb
dec
xchg
cwtl
pop
pushl
js
js
lret
sahf
adc
popf
jne
mov
or
adc
cmp
fnstenv
imul
scas
inc
dec
imul
or
mov
arpl
mov
inc
adc
aas
inc
fmul
or
jmp
inc
inc
mov
movsb
pop
into
mov
pusha
fidivrs
insl
push
outsl
and
pop
sub
call
adc
sbb
repz
rcll
orb
add
or
add
cmp
cmc
inc
test
dec
mov
adc
mov
cmp
fs
test
call
cmp
xchg
pop
dec
xchg
add
les
cmpsb
inc
sbb
cmc
jle
inc
into
pushf
ss
adc
adc
xor
xorl
add
imul
loopne
stos
push
test
jg
inc
call
mov
fidivs
sti
les
insb
fisttpl
fdivrl
out
fimuls
pop
push
sti
xlat
out
cmp
jg
shl
and
pop
dec
mov
lods
or
sbb
cltd
xor
mov
pushf
shlb
lcall
pop
add
mov
pushf
fidivl
sahf
cmp
lock
pop
inc
xchg
loop
lds
push
pop
push
sbb
jo
aam
pop
mov
mov
je
push
lret
xor
add
call
inc
sbb
jo
add
icebp
add
jg
jle
or
test
push
daa
sbb
xchg
jmp
clc
lcall
sarb
loopne
dec
xchg
mov
icebp
xchg
pop
mov
dec
enter
mov
cltd
mov
sub
mov
js
lea
sub
clc
int
mov
insb
clc
mov
sbb
cli
test
inc
cmp
push
shlb
fbld
out
mov
lds
xchg
dec
cmp
lcall
sahf
cltd
pusha
cs
sbb
loope
sub
jns
mov
adc
lcall
dec
xor
sub
stc
push
adc
mov
in
add
inc
inc
sbb
mov
add
test
cmp
movsb
jno
loope
mov
pushf
inc
inc
test
xor
pop
xor
jb
in
adc
lcall
push
add
or
adc
and
fdivrs
mov
or
ret
lock
sbb
out
pop
push
push
ljmp
jg
test
mov
sahf
js
lods
popa
cmp
outsl
push
push
je
je
or
sbb
test
push
dec
pop
add
ja
ret
arpl
sub
in
add
xchg
in
sbb
scas
cli
ja
add
call
lds
test
add
sbb
outsl
pusha
std
ljmp
push
in
pusha
jne
leave
cmp
mov
xchg
cwtl
decl
cmpsl
xor
lods
data16
arpl
ss
arpl
cmp
decl
lock
aas
cli
in
add
mov
dec
inc
sub
in
call
leave
jbe
aad
popf
mov
ja
nop
push
xchg
out
inc
cmpsb
inc
psubusw
jg
icebp
or
or
rolb
add
xchg
addr16
dec
loope
lcall
jne
ljmp
pextrw
mov
mov
loop
insb
std
dec
es
test
xchg
lcall
loopne
ljmp
push
pushf
pusha
test
jno
lret
push
pop
insl
leave
and
xor
ficomps
push
inc
adc
add
call
or
pop
pop
mov
push
push
arpl
adc
push
mov
push
mov
cwtl
aad
mov
mov
mov
mov
pop
stos
push
mov
flds
insl
mov
or
outsb
cld
sbb
imul
sub
stos
sarl
je
stc
mov
jbe
jbe
and
out
sbb
out
les
lcall
lods
adc
push
fistpl
mov
push
add
les
incl
data16
outsl
loopne
sbb
add
ss
or
sbb
pop
dec
cld
incl
hlt
adc
pop
or
adc
clc
in
js
push
inc
cmpl
add
adc
and
push
mov
add
aam
ljmp
xchg
popl
bound
rorl
out
xchg
adc
mov
inc
lock
lcall
pop
repz
aaa
lret
and
loope
pop
dec
ret
xor
decl
push
rolb
dec
jb
xchg
xchg
xor
pushl
pop
into
inc
push
and
mov
das
andb
and
cwtl
push
lcall
dec
aam
sub
fcmovu
divb
lcall
hlt
xor
sahf
loopne
es
or
mov
add
mov
pushf
shlb
inc
push
mov
cwtl
ret
lock
cld
call
jmp
adc
jbe
aam
stos
jae
aaa
sbb
jg
sub
cmpsl
mov
lcall
add
sar
add
jp
ljmp
out
test
lea
jp
xor
lods
jae
xor
cs
cli
mov
ljmp
mov
jmp
pusha
add
add
pop
jmp
jb
cmp
jp
scas
jle
rcrl
inc
cli
movsl
aas
or
in
cwtl
out
mov
arpl
mov
add
jne
sbbb
fcomip
cmp
xor
or
mov
dec
or
lcall
incl
pop
inc
nop
sub
mov
and
xor
movq
cmp
mov
jl
pop
lahf
clc
aam
lret
cmpsb
cmp
jp
or
push
idiv
push
adc
xchg
xor
adc
int3
xchg
pop
int
xor
push
pushl
cld
insl
dec
push
in
cltd
rcll
push
mov
mov
cld
push
bound
dec
jmp
je
xor
xchg
and
mov
js
cmpsb
dec
inc
shrb
inc
push
mov
xchg
or
cmp
dec
add
inc
and
daa
jno
add
dec
and
add
mov
sub
inc
xchg
out
jp
ror
sub
test
push
in
imul
pop
or
leave
mov
add
and
add
pop
sub
psrlw
loopne
mov
int3
cmpsb
fs
cmc
or
fsub
pop
das
lret
xchg
jae
mov
imul
incl
xor
mov
xchg
adc
loope
rol
ret
je
imul
and
test
cmp
jmp
je
cs
fisubrl
in
xchg
and
adc
sub
decl
or
sarl
roll
adc
push
and
sub
push
dec
or
mov
fcomp
add
cmp
fs
xchg
scas
lret
enter
ljmp
cld
or
movsb
and
les
pop
xlat
lods
icebp
pop
andl
pop
adc
sbb
push
adc
pop
push
ljmp
sar
mov
mov
add
dec
sahf
pusha
in
ret
dec
push
rcrl
decl
stc
shrl
out
out
mov
adc
adc
jns
aas
stc
inc
xor
adc
ljmp
pop
lret
xor
add
push
cmp
xchg
stos
jecxz
ljmp
or
xchg
xchg
lret
mov
push
sbb
ud0
fbld
pop
in
mov
fdiv
dec
xor
and
loopne
sub
push
inc
incl
jl
sbb
dec
stos
mov
xchg
dec
jmp
sbb
pop
fdivrl
push
dec
mov
fimuls
sti
mov
out
js
push
add
inc
adc
mov
mov
loop
dec
std
bound
jmp
push
rcrb
sbb
xor
pop
adc
xchg
push
pop
jmp
incb
mov
adc
lar
mov
and
enter
and
cmp
cmp
mov
scas
call
addr16
lods
ljmp
jne
push
rcl
mov
hlt
lcall
jecxz
loop
jno
ljmp
inc
mov
in
mov
lret
jns
into
hlt
ds
jmp
test
push
mov
mov
pop
adc
call
mov
mov
inc
ljmp
pushf
lds
xor
mov
cmp
pop
mov
jno
mov
inc
orb
cmp
ljmp
mov
cmp
ja
mov
mov
xchg
incl
lret
push
adcb
xor
aaa
aam
xor
mov
sbb
cs
rorl
fiadds
push
mov
test
and
mov
add
cmp
xor
out
pop
addb
pop
sub
adc
sub
mov
push
out
sbb
inc
adc
sbbl
out
push
std
rcl
adc
popf
dec
dec
sbb
cltd
jo
jl
adcb
pushl
lock
insl
dec
inc
fldt
push
add
pop
xlat
sbb
pop
std
jno
xchg
inc
adc
lods
xchg
push
mov
mov
inc
dec
or
push
mov
cmp
in
mov
repnz
gs
es
adc
jb
xchg
cli
jmp
adc
ret
inc
aaa
mov
daa
cmp
sub
mov
je
sub
push
cmp
daa
adc
push
addr16
xchg
and
add
sub
in
cltd
jecxz
movsb
jne
and
and
ss
pop
mov
shlb
loope
jg
and
ja
mov
jnp
add
loopne
fdivl
add
mov
fadds
xor
fisubl
dec
lds
lods
inc
sbb
inc
sub
cld
jmp
jmp
inc
xor
cmpl
xor
xor
jne
jo
mov
pushf
testl
aas
movsb
cmpsl
xor
mov
xor
push
mov
popa
jg
mov
sub
xor
bound
jb
lcall
and
mov
adc
sbbl
cmpsl
imul
pushl
cli
hlt
jge
movsb
inc
push
sbb
pop
and
mov
cmpsl
pushl
pop
jb
jecxz
adc
scas
pop
icebp
sub
cld
mov
cmc
mov
add
movl
jae
adc
inc
ljmp
push
push
out
push
dec
and
in
and
xorl
add
data16
lret
and
jg
dec
rolb
call
mov
add
fst
stos
pop
add
sub
or
or
and
cli
call
out
inc
shrb
xchg
xorb
mov
pushf
xor
push
xor
fisubl
add
dec
bnd
sbb
addb
jmp
or
jo
shll
in
mov
sub
mov
test
test
xchg
pop
subb
call
adc
ss
loopne
inc
popa
xor
push
fidivs
pushf
xchg
push
mov
bound
add
pusha
xor
insl
add
xchg
fcmovnbe
sub
incl
push
add
add
pop
rcrb
lock
mov
xor
sbb
rclb
js
cmp
and
mov
and
enter
jo
sub
ljmp
pop
pop
and
or
cmp
icebp
mov
gs
and
bound
add
jmp
jg
fs
pushl
xorb
es
pop
push
das
mov
shll
aaa
dec
add
data16
lcall
daa
jg
jae
rorl
adc
loopne
mov
adc
repz
imulb
stos
stc
sub
push
xorb
addb
sbb
pop
pop
cmp
shrb
icebp
adc
inc
pushf
jno
jmp
cmp
push
jns
fs
cmp
sub
jo
pop
inc
xchg
fildll
cmpsl
xor
ljmp
xchg
pop
iret
xor
add
mov
or
mov
das
cmpsb
cmc
jl,pn
sub
push
nop
fsubs
rol
es
jno
shlb
incl
das
insb
pop
fiaddl
and
jg
jno
adc
insl
scas
addr16
sub
jmp
jnp
inc
sbb
xor
inc
popa
push
mov
sub
inc
xor
xchg
shlb
daa
inc
xchg
or
scas
clc
jmp
or
out
push
inc
jne
push
sbb
mov
in
xchg
xor
cmpb
inc
inc
jp
xchg
pusha
inc
jge
mov
xchg
inc
xchg
in
sbbl
pushl
ret
loop
jle
loope
dec
lret
mov
mov
jg
sarl
clc
dec
andb
clc
roll
call
insl
sbbl
rorl
outsb
mov
mov
and
in
mov
aaa
jno
inc
lock
dec
jb
jno
adc
mov
mov
pop
mov
pop
popa
je
adc
orl
pop
orl
dec
scas
rcll
xchg
push
lcall
fmuls
in
fwait
xor
rorb
xor
jp
adc
add
jmp
sub
jb
dec
lods
cmp
pop
cmp
inc
and
addr16
loop
cmpsb
mov
pop
and
dec
and
pop
div
ljmp
andb
leave
idivb
cs
xchg
sbb
lock
jl
rolb
mov
std
subl
insb
sahf
pop
jnp
cwtl
push
cmp
pop
mov
inc
xchg
jns
mov
inc
pop
cli
inc
pop
adc
outsl
mov
xor
dec
sar
mov
add
popa
xchg
in
xchg
sbb
sar
ja
rcrl
and
test
pop
aad
or
inc
call
subb
cli
test
sub
xor
stos
aad
jl
fimull
push
cs
lea
adc
xlat
mov
push
cmpsb
and
stos
jg
fwait
insl
cltd
cmp
jno
sub
pop
sbb
out
xor
call
xor
push
add
mov
lock
push
rcll
xchg
cmp
xor
and
test
lcall
testb
test
test
inc
push
inc
pushl
shlb
lret
push
stc
les
sbb
dec
fcomps
sahf
fdivrs
xchg
mov
stc
js
mov
mov
enter
scas
add
mov
lock
int3
dec
outsl
add
pusha
add
outsl
push
clc
push
jmp
push
lods
out
pop
inc
sub
mov
inc
popa
ljmp
jecxz
mov
arpl
inc
pop
icebp
sub
ds
out
rcrl
adc
data16
jg
ja
pop
xor
adc
icebp
je
or
mov
dec
lcall
xor
fdivrs
jl
test
gs
push
push
call
cli
stos
dec
jmp
jno
adc
adc
bound
ja
push
loope
jmp
inc
outsb
mov
push
cmp
add
js
sbb
fwait
arpl
push
inc
pushl
cmp
rolb
and
dec
and
incl
adc
rorb
add
lret
dec
jo
clc
lcall
pop
sub
mov
xchg
ss
shrb
js
dec
sub
lods
pushl
inc
js
or
sahf
jmp
add
lahf
ret
lret
xor
test
lcall
push
adc
lods
dec
cltd
push
orb
jne
inc
leave
add
push
xor
mov
scas
clc
scas
cli
daa
nop
pop
jg
mov
xchg
mov
ss
sbb
decl
push
pop
lock
push
iret
icebp
pop
and
inc
insb
sbb
ret
or
jmp
mov
push
enter
lret
sub
sub
addr16
call
add
mov
lret
mov
movsl
lods
jbe
mov
arpl
mov
sbb
lds
jnp
jmp
pushl
sub
insb
ss
lock
pusha
push
negb
add
addr16
mov
mov
pusha
aaa
or
or
fwait
in
js
adc
rcrb
mov
cld
ljmp
or
addr16
pop
outsl
jo
xchg
jecxz
pop
sti
inc
push
popf
mov
adc
fs
fadds
js
jo
mov
jg
out
mov
sbb
cmp
ss
in
sbb
inc
ss
dec
push
adc
lods
pop
ret
ret
scas
es
mov
ficompl
jg
mov
mov
push
dec
insb
mov
rcrb
mov
movsb
pop
dec
and
std
dec
push
out
sbb
enter
movb
ljmp
jo
and
inc
in
outsl
mov
repz
iret
dec
pop
lahf
pop
mov
fcmovnb
and
enter
or
lret
mov
ja
aas
and
push
and
fwait
mov
sbb
in
jb
int
mov
pop
js
jg
adc
push
push
out
sub
aaa
and
std
fisttps
inc
insl
xchg
jns
ror
cwtl
sub
jmp
insb
push
cmpsl
mov
mov
pop
int3
imul
inc
int3
cmp
mov
enter
sahf
mov
push
jbe
sub
push
scas
inc
imul
int
inc
add
cmp
cmpsl
inc
flds
sub
lret
sub
jnp
pop
add
test
js
rol
int3
imul
vxorps
aas
cld
xchg
pop
add
add
jp
icebp
xchg
les
add
push
je
fstps
jg
lds
xchg
adc
mov
ljmp
les
test
jnp
jg
fcomip
mov
mov
mov
sub
and
ret
pushl
xlat
mov
mov
dec
enter
sub
inc
push
insl
arpl
pop
aas
xchg
jmp
movsb
in
decl
mov
mov
dec
lcall
push
aam
jmp
fs
fistpl
insb
daa
sbb
fldt
bound
ljmp
vmovlpd
xchg
icebp
adc
adc
cld
incl
scas
test
and
pushf
mov
adc
rclb
xchg
repnz
xchg
sar
jg
decl
sbb
mov
pop
or
ja
nop
push
int
pop
ljmp
xchg
sub
sub
cmp
mov
sub
xchg
mov
sbb
fsubp
cld
fstps
push
stc
pop
cs
pop
pop
push
mov
lods
mov
lods
out
jne
cld
std
insb
std
mov
incb
clc
call
testb
push
xor
fmull
push
ljmp
rorb
loopne
es
cmpsb
in
data16
sbb
cld
jae
pop
ret
or
imulb
lcall
orb
lock
adc
and
sub
aad
xchg
enter
leave
push
stos
incl
fisttps
loopne
cmp
ja
mov
push
cltd
pop
rcll
cwtl
xchg
sarl
fstpt
sbb
adc
clc
out
lods
std
mov
pop
cmpsb
push
mov
pop
sbbl
incl
mov
add
cmp
pop
xor
sub
pop
popa
movl
push
xlat
add
cs
or
adc
in
add
jo
pushf
pushf
jae
add
xchg
sbbb
pop
lcall
dec
loopne
out
inc
inc
xchg
push
cmp
sub
icebp
jg
add
push
xchg
mov
fsts
dec
lds
cli
cmp
loop
sub
cmp
mov
lahf
and
push
push
jb
push
adc
xchg
inc
jb
and
mov
jmp
dec
sub
adc
pop
jecxz
mov
movlps
in
cmpsb
add
pusha
call
add
mov
cltd
xchg
subl
and
mov
outsl
xchg
test
mov
inc
sbb
cmp
scas
clc
ljmp
push
arpl
and
jge
mov
lods
fdivrs
and
ljmp
sub
insl
mov
lret
in
rorb
in
mov
adc
shll
inc
subb
dec
push
insb
cmp
aaa
sub
aaa
adc
mov
jbe
add
outsl
sbb
push
lock
bound
xor
sbbb
addr16
pop
mov
mov
inc
test
dec
push
xor
adc
clc
pop
cmp
cwtl
call
xor
ss
push
lds
out
jl
cmpsb
or
ljmp
out
cs
in
add
ret
jg
pop
push
or
addl
mov
in
subl
lcall
adc
add
roll
loopne
xorl
sbb
addl
cmp
pop
lods
mov
arpl
mov
cmp
clc
popa
xor
or
sbb
sub
incl
and
mov
fadd
fld
bound
mov
pop
bnd
sbb
pop
call
stos
push
out
movsb
insl
ret
ret
sub
cmpsl
dec
arpl
fstpl
sub
lods
enter
leave
int3
es
xorb
fidivl
mov
insb
mov
popf
imul
pop
mov
stos
aaa
lock
test
ljmp
mov
ficoml
mov
ljmp
sbb
cwtl
mov
repnz
cmp
movsb
cmp
and
jge
jb
pop
sbb
scas
test
xchg
stos
mov
ljmp
es
mov
sti
incb
jo
ljmp
and
fisubrs
pop
pop
sub
scas
pop
mov
clc
adc
decl
incb
pop
mov
lcall
add
adc
faddl
inc
xchg
jnp
faddp
jae
xchg
mov
mov
popa
mov
or
nop
filds
sbb
add
cmp
cmpb
aas
dec
nop
nop
decl
and
cmpsb
out
or
orl
and
sub
loopne
outsb
and
dec
pop
ja
mov
aaa
mov
outsl
mov
lcall
inc
fs
or
int3
ljmp
mov
xchg
lods
or
sub
sbb
test
mov
mov
lods
sub
popf
xor
daa
xor
fwait
and
add
fwait
lods
xor
mov
mov
mov
mov
cltd
outsb
nop
or
je
push
dec
xor
call
cmp
test
pushf
outsb
mov
stos
shll
sub
pushl
cwtl
mov
xor
pop
ret
dec
ss
push
inc
lret
dec
shr
or
scas
mov
add
repz
mov
or
xchg
addb
mov
ljmp
mov
imul
xchg
xor
push
push
je
decl
pushf
xchg
and
xor
enter
aam
push
popf
mov
in
push
stos
xor
cwtl
loop
cmp
je
mov
push
or
out
and
outsl
clc
push
fmulp
mov
repz
ffree
iret
mov
ret
imul
mov
sub
fistpl
pop
adc
sub
pop
jns
mov
lcall
hlt
prefetch
or
fwait
bound
xchg
and
inc
adc
cmp
cmpb
fisttps
sahf
add
adc
and
mov
sbb
dec
and
loop
push
adc
es
int3
jp
sbb
incl
int
jmp
je
stos
jb
dec
sub
inc
pushf
push
push
dec
insb
lods
push
sbb
adc
and
arpl
je
lret
mov
ljmp
ret
cmp
sub
and
mov
mov
icebp
push
ljmp
mov
pop
sti
dec
int
lahf
jns
pushl
push
dec
dec
dec
data16
imul
mov
add
jbe
push
ret
lods
out
push
mov
dec
imul
and
mov
jmp
fldt
sub
dec
xchg
push
mov
stos
cmp
out
leave
loope
incl
shll
outsl
js
cmp
cld
cmp
daa
xchg
pop
movsl
jbe
pop
xor
test
pop
neg
xchg
cs
aas
scas
clc
pusha
out
pusha
add
pop
and
fmuls
mov
out
add
cwtl
clc
incl
sbb
or
shl
ret
mov
push
inc
jmp
pop
adc
inc
clc
flds
xchg
call
or
inc
incl
nop
adc
outsb
je
fdiv
mov
xchg
movsb
lods
sub
inc
pop
jmp
fimull
mov
or
jne
fstps
xor
jp
rorl
cwtl
clc
mov
sqrtps
jg
cmc
jb
sub
xchg
dec
lock
pop
lea
xor
stos
leave
bound
mov
ss
mov
popf
sub
mov
dec
test
jmp
rolb
mov
movsb
stos
mov
jb
pop
or
pop
int
sub
movsl
stos
mov
scas
xchg
mov
pop
mov
in
pushf
sub
enter
cmp
lock
arpl
lret
dec
lods
jbe
dec
insl
jl
mov
adc
nop
jno
pushf
cmpsb
clc
call
push
cmp
pop
std
xor
adc
sbb
mov
mov
incl
add
cmp
pcmpgtb
jnp
out
lods
movb
ljmp
clc
lock
inc
push
cmpb
inc
jecxz
aaa
insl
out
push
popa
rorl
and
mov
popf
jno
cmpsb
sarl
dec
test
int3
loopne
sar
outsl
xor
bound
inc
jne
or
in
push
pop
mov
and
ret
jmp
out
mov
adc
movsl
jb
sar
filds
adc
xor
js
adc
sbb
jmp
nop
fiadds
inc
sub
jno
jmp
dec
push
xchg
into
inc
pop
adc
adc
cs
fsubl
lcall
inc
mov
enter
or
das
dec
daa
out
pop
cmp
aad
das
xchg
imul
and
mov
dec
push
inc
push
cmc
movsl
push
xchg
test
aam
aam
inc
push
aad
dec
test
cli
call
test
adcb
xor
mov
jmp
pushf
jo
dec
mov
shlb
and
push
sbb
inc
loope
dec
jl
sub
mov
fmuls
int
decl
xchg
popf
in
push
cltd
incb
pushl
andl
ficompl
sbb
stc
push
out
decb
test
mov
adc
lods
push
xor
movsb
and
adc
sbb
out
incl
dec
xchg
and
dec
mov
repz
adc
enter
xor
mov
and
and
adc
aad
test
push
push
jle
push
and
jge
mov
xor
pop
repz
mov
adc
ljmp
mov
and
jmp
or
xchg
movsl
mov
sub
adcb
pop
leave
add
adcl
sbb
pop
cmpsl
mov
icebp
inc
loopne
inc
push
jg
dec
push
push
cwtl
rclb
loope
pop
inc
jo
loopne
call
scas
mov
mov
js
stos
inc
push
mov
call
mov
jmp
fadd
and
rorl
sub
ds
cwtl
les
call
clc
cmp
xchg
xor
adcl
adc
jmp
mov
sub
in
das
cltd
cli
inc
hlt
xlat
or
add
sbb
fwait
or
addb
sbb
insb
xchg
ljmp
rol
sarb
js
or
mov
incl
fsubrs
push
lea
test
lods
adcb
jmp
jmp
arpl
and
je
jp
cmp
adcb
sbb
xchg
jo
xchg
and
xchg
cmp
aad
and
adc
shlb
pop
push
jg
sub
mov
imul
mov
cwtl
ret
mov
les
cmp
or
or
xor
fldcw
mov
ljmp
clc
cmp
outsb
push
enter
pop
fs
jne
fildll
mov
sbb
enter
dec
ds
stos
int3
scas
add
mov
movsl
or
sub
incl
sbb
mov
push
jb
call
pop
mov
push
cmp
je
dec
call
sar
popf
xchg
lods
cs
mov
sahf
jecxz
jnp
roll
addb
mov
fs
out
jae
les
hlt
std
into
push
addr16
dec
out
test
adc
out
test
sub
jnp
cli
mov
mov
roll
lea
into
dec
scas
icebp
or
dec
repz
test
decl
pushf
je
add
fistl
sub
or
incl
loop
inc
loope
jno
cmpb
sbb
repz
push
pop
mov
ret
push
lret
mov
rolb
cmp
rolb
imul
test
xchg
mov
in
xchg
rcl
outsl
fcoml
cmpsb
jmp
mov
fisubrs
pop
js
dec
dec
clc
mov
xor
jne
scas
mov
lods
cwtl
dec
test
decl
out
inc
mov
fcompl
fucomp
inc
mov
outsl
mov
jnp
xchg
out
xlat
jmp
fimull
popf
aad
mov
jb
or
jmp
xchg
clc
inc
and
scas
xlat
mov
aas
mov
bound
adc
jnp
cmp
jp
cmpsb
jnp
lods
arpl
sbb
cmp
jmp
jp
test
push
std
div
add
fwait
sub
popa
and
and
das
scas
cltd
xor
push
incl
adc
xchg
push
add
aas
stos
cmp
cmpl
mov
sub
sub
dec
call
ljmp
mov
push
enter
call
frstor
or
sub
es
int
stos
pusha
cli
imul
test
mov
pop
hlt
mov
rclb
add
push
mov
lds
loope
sub
cmp
movsb
cld
ljmp
mov
sub
in
mov
jns
adc
push
and
jg
add
pop
push
mov
sbb
push
lods
and
fcomps
mov
ficoml
adc
mov
out
add
mov
clc
jmp
push
sub
add
and
lock
ljmp
cli
test
mov
stc
sbb
inc
push
push
cs
fcmovnb
fistps
andb
add
mov
mov
pop
stos
sub
adc
jg
pop
mov
mov
and
push
dec
stc
stos
push
test
movsb
mov
rolb
cmp
enter
mov
mov
data16
mov
rolb
push
addb
mov
clc
pop
inc
sbb
mov
sbb
ret
xor
lcall
adc
scas
mov
xchg
sti
mov
rorb
rclb
lcall
sub
lret
sbb
out
xor
imul
decl
loope
inc
lcall
mov
fstl
inc
and
or
push
xor
cmp
hlt
lret
movsl
push
mov
cmp
out
cmpb
xchg
jp
xlat
in
decl
bound
test
inc
add
xor
sbb
mov
in
mov
cld
incl
pusha
inc
adc
and
xchg
call
jp
mov
inc
xchg
pop
mov
shrl
pop
dec
inc
lcall
adc
pop
add
cltd
adc
sti
and
subl
mov
int3
mov
fwait
pop
lock
decl
in
mov
mov
sbb
mov
repnz
xor
lock
sub
or
mov
fcomps
mov
subb
adc
inc
add
popa
dec
ljmp
xchg
xor
dec
dec
loop
mov
mov
sbb
sub
jmp
mov
and
inc
push
cltd
mov
or
out
sub
adc
repnz
decl
push
aas
push
sub
mov
xchg
cmpsl
lods
adc
mov
or
rorb
mov
mov
in
mov
adc
add
add
inc
cmp
daa
push
mov
or
loopne
adc
push
lock
jg
divl
xchg
xchg
adc
adc
mov
push
cmp
fidivrl
aam
mov
mov
rcr
int3
outsl
clc
call
aaa
mov
lret
xor
jecxz
push
jle
push
shrb
xor
rolb
cmp
adc
dec
xor
sbb
cld
mov
loop
xor
mov
mov
test
mov
mov
cmp
dec
cmp
popf
inc
xchg
dec
xlat
call
pushl
lret
and
lods
xchg
out
push
mov
in
add
movsl
jecxz
sub
and
xor
and
in
push
cmp
sbb
insl
cmp
adc
cmpsb
ret
jno
ljmp
data16
cli
iret
adcl
ja
mov
push
and
inc
movsl
cmpl
xor
dec
jecxz
adc
rolb
ljmp
orb
add
fstps
dec
adc
jmp
stos
sbb
mov
popa
rcr
dec
ss
repz
test
dec
dec
jno
ljmp
sub
xchg
aas
clc
cmp
add
mov
mov
loop
adcl
or
imul
dec
pop
mov
inc
repnz
add
pop
xor
or
mov
sbb
dec
mov
gs
pop
jae
dec
mov
pop
mov
aaa
pop
fadd
cmp
lock
lahf
in
in
ljmp
sub
test
jp
popf
jo
mov
sub
call
xor
and
sbb
lods
or
dec
push
dec
xchg
fcmovnbe
pushf
gs
push
es
incl
pop
push
or
mov
lret
adc
or
aam
ljmp
push
push
pop
fisubrl
add
fidivl
cltd
push
mov
call
popa
les
or
bound
add
push
add
xor
sbb
call
test
mov
outsl
dec
push
imul
aam
repnz
jg
decl
sbb
je
sub
rcrb
jns
dec
cmpsb
dec
add
incl
ret
mov
pop
mov
int3
adc
dec
cmpsl
jecxz
iret
loope
cmpsb
xor
fcom
movsb
xchg
fs
popf
xor
movsb
xchg
out
clc
decl
add
jmp
mov
mov
dec
in
and
rolb
mov
sahf
mov
and
jns
inc
xor
lret
fistps
call
push
rclb
in
mov
mov
cltd
push
and
pushf
jns
fs
pop
pop
aad
cmp
add
pushl
stos
lods
mov
dec
inc
mov
inc
mov
pop
and
scas
sbb
popa
insl
fildl
add
movsb
sbb
xchg
xchg
and
push
shrl
fdivr
jg
or
cmpsb
icebp
fistpl
inc
lock
mov
xchg
dec
or
lcall
ficomps
sbb
aaa
stc
dec
or
xor
mov
repnz
push
or
call
loopne
add
test
cmp
stc
push
jb
pushl
fdivrl
mov
mov
sbb
or
cmpsl
insb
dec
sub
mov
adc
jg
test
aam
jecxz
push
inc
cmp
jb
rcrb
call
lcall
lcall
pop
xchg
pop
and
imul
aad
leave
xor
add
jmp
movsl
pop
hlt
sub
insl
arpl
pop
pop
stc
mov
and
lcall
andb
lret
pop
xchg
aad
int3
cmp
inc
decl
int
push
mov
jg
addb
mov
repz
cs
sbb
push
dec
xchg
aaa
pop
sub
ljmp
or
mov
xchg
pop
push
push
mov
cmp
and
inc
pop
pushf
xchg
mov
add
lds
test
add
mov
lods
rorb
mov
xlat
cmp
mov
sbb
sbb
fmuls
xchg
mov
jmp
jne
or
pusha
adcb
mov
aas
jmp
ret
xchg
lds
push
ljmp
adc
repz
push
dec
inc
jp
mov
stos
shll
cwtl
stos
pop
cwtl
inc
insl
sbb
out
cwtl
sub
and
js
popa
into
mov
or
push
xor
jle
xor
sub
push
addr16
xor
cmp
push
push
xchg
lret
pop
pop
decl
idivl
pop
sbb
sub
jmp
add
inc
test
pusha
add
daa
add
mov
sbb
xchg
dec
jle
cltd
sahf
cmp
sahf
mov
cmp
pop
rolb
in
push
pushl
push
push
xorl
rcr
leave
loopne
in
cld
adc
imul
push
sar
mov
cmp
cmp
sbb
sbb
mov
pushl
clc
adcl
push
stos
xor
inc
mov
scas
add
andl
nop
or
and
or
jg
fisubl
inc
movsl
sub
lret
jns
lods
adc
inc
cltd
push
push
rclb
jmp
fsub
cmp
mov
mov
mov
sbb
inc
xor
sub
decl
aad
in
stc
in
mov
xlat
aam
movsl
jmp
outsb
das
in
mull
notl
movb
cwtl
jae
loope
or
mov
test
pop
in
imul
and
call
adc
xor
sti
mov
out
add
mov
pop
in
repz
mov
dec
std
ljmp
iret
arpl
dec
mov
insl
push
or
rcll
mov
imul
xor
sbb
out
inc
cmp
or
xchg
and
aaa
xchg
clc
push
ret
fs
pop
mov
test
cwtl
xor
dec
cltd
decl
imul
cmp
lods
leave
int3
in
lret
leave
int
ret
fisttps
cli
adc
test
push
fdivrl
sbb
push
pop
and
adc
ljmp
dec
test
pop
outsl
xchg
inc
mov
enter
fwait
pop
jbe
lret
int
adc
mull
decl
pop
lock
fidivl
xor
sahf
and
lret
and
jmp
imul
decl
cmp
aas
xlat
jp
ja
add
nop
mov
test
ljmp
cmp
dec
adc
dec
inc
scas
xchg
push
flds
fildll
stos
jle
adc
lcall
adc
mov
or
and
mov
repnz
inc
or
mov
testl
gs
mov
mov
jae
add
cmp
mov
push
mov
jbe
push
mov
fdivrs
aaa
mov
shll
mov
insb
mov
je
inc
arpl
lea
popf
pop
mov
mov
decl
pop
and
xchg
mov
repnz
lcall
les
cmc
mov
dec
cmp
fsubs
and
in
adcb
les
jae
mov
cmp
sub
cmp
sub
out
das
inc
pop
mov
xlat
loop
decl
push
add
push
xchg
sbb
jmp
call
inc
dec
or
movsb
dec
push
cmpsl
sti
daa
push
push
or
ljmp
gs
mov
shl
push
mov
xor
out
cld
incl
arpl
stos
lret
popf
stos
cmp
cmp
sbb
icebp
out
movsb
test
stos
sbb
and
nop
cmp
fwait
incb
mov
dec
inc
jl
mov
outsl
xlat
mov
jae
dec
clc
inc
and
cmc
jmp
lcall
ljmp
sbb
lcall
pop
xor
fxch
mov
js
push
fsubs
jns
push
lret
fstpt
jae
xlat
in
jmp
mov
lods
nop
sub
lcall
dec
std
aam
clc
push
mov
xchg
push
stc
xchg
fsubrp
rorb
jle
push
ljmp
sahf
pop
pushf
mov
cmp
div
dec
inc
xchg
jb
outsl
push
data16
dec
jp
add
mov
stos
daa
or
call
cmp
ljmp
push
pop
adc
and
and
cli
roll
or
jmp
adc
push
pop
push
and
inc
or
dec
incl
out
test
jns
sbb
mov
push
push
jno
dec
shrl
add
mov
aas
add
xchg
ret
sbb
cmp
xor
popf
orb
push
push
push
cmp
in
push
das
sar
enter
ss
mov
pop
repnz
adc
in
nop
in
xchg
and
ljmp
addl
dec
jb
or
je
shll
cmp
rclb
lcall
dec
xchg
mov
xor
call
ljmp
mov
push
add
mov
cs
nop
insb
inc
sub
call
stos
sti
xchg
outsb
pop
mov
or
xchg
fisubrl
lea
jb
decl
dec
push
xor
fsub
int3
xor
mov
fmul
sub
imul
jmp
mov
aaa
jg
mov
cmp
mov
aas
scas
andl
push
lret
xchg
lahf
adc
adc
sahf
sbb
pop
fdivrl
shll
mov
icebp
lcall
cmp
daa
mov
sti
push
lock
adc
out
and
andb
stc
pop
addl
push
pop
add
adc
add
fildll
js
mov
or
xchg
pop
bound
push
gs
pop
outsb
mov
clc
push
pop
jns
adc
dec
push
test
dec
lea
adc
xchg
xchg
decl
pop
adc
pop
sbb
mov
jg
push
popa
push
movsl
jbe
dec
xchg
push
movb
popa
xchg
movsl
push
cwtl
xchg
pop
cmp
popa
ljmp
mov
cmpsl
push
cmp
int
push
mov
cltd
fsin
jg
bound
inc
push
pop
or
mov
or
popa
adc
jmp
shll
jne
pop
inc
test
lcall
xchg
mov
push
push
sub
popf
cmpsb
cltd
pop
pop
es
cwtl
push
test
push
add
orb
lcall
scas
sbb
daa
pop
gs
xchg
imul
inc
adc
in
jo
push
pushf
or
stos
pushf
jae
inc
push
or
rorb
andb
in
ja
fadd
jo
jp
mov
cld
pop
push
or
and
pusha
jbe
fstpl
adc
mov
push
mov
push
sub
mov
add
xchg
fadd
popa
sbb
cmp
mov
pop
pushf
icebp
lds
sub
ja
push
fstps
popl
mov
cmpsl
lret
jge
das
adc
cltd
fs
or
mov
rol
or
shl
ret
stos
dec
jno
test
outsl
or
push
test
and
dec
fs
dec
sbb
scas
test
mov
cltd
lret
mov
decl
mov
inc
ss
adcl
xchg
testb
bound
cld
mov
cmpsl
or
dec
cltd
lea
ljmp
stos
addr16
sub
lds
shl
mov
mov
imul
call
xchg
fwait
test
insb
sbb
pusha
cmp
ljmp
sub
movsb
mov
clc
mov
fistpll
into
mov
cmp
outsb
jns
pop
sti
jl
nop
inc
add
mov
mov
js
adc
enter
aaa
cld
add
popa
jo
pop
into
add
and
dec
pop
inc
mov
and
cld
lcall
cmp
movsb
jns
push
imul
sub
inc
sub
decl
enter
adc
dec
jne
add
out
jmp
movsl
jecxz
jmp
add
push
or
out
or
test
adc
inc
and
shlb
lret
js
clc
ljmp
push
fdivr
int3
and
fcomi
rol
pop
mov
pop
or
mov
les
outsl
pop
into
jmp
xlat
lock
lods
inc
jecxz
leave
pop
mov
je
lcall
loop
scas
cwtl
xor
push
mov
jl
ss
push
call
in
cmp
mov
inc
cmp
lcall
jno
into
cmp
inc
enter
pop
test
movsb
ja
xor
neg
pop
jbe
xor
cmc
jg
cmp
stos
add
or
nop
rcll
jl
popa
pop
ret
ss
adc
push
xchg
or
sti
cwtl
mov
ds
mov
xor
cmp
lahf
jp
xchg
popf
lock
mov
xor
movsl
test
inc
sbb
jo
xor
and
jmp
xchg
imul
sub
pop
pusha
push
push
lock
push
icebp
xor
sbb
stos
and
fs
scas
ret
sub
int
push
mov
and
add
sub
inc
insb
std
push
lds
push
adc
cmpsb
add
adc
or
mov
enter
dec
xor
add
cltd
cmpsb
jae
shlb
sar
push
jmp
xchg
rorl
jmp
and
aaa
std
scas
mov
mov
dec
xchg
leave
xchg
and
rcrl
lcall
add
xor
test
pop
xchg
fsubl
scas
js
ljmp
and
in
je
add
jne
push
mov
pushf
xor
outsl
push
cmc
xchg
faddl
sub
add
dec
fildll
pop
adc
sub
arpl
adc
ljmp
or
and
sbb
cli
xchg
lods
lds
push
hlt
pushl
sahf
cmp
movsl
sub
xchg
and
and
pop
sbb
or
pushf
mov
lret
lcall
movb
dec
or
sahf
lock
push
push
rol
shrl
jg
je
cmp
outsl
jnp
inc
and
xchg
mov
aam
add
lcall
sbb
jle
push
imul
and
es
pop
mov
adc
sub
pop
sbb
push
pop
pop
mov
addb
mov
xchg
inc
addl
xchg
lcall
jl
inc
pop
add
lds
dec
inc
xchg
in
jno
shrb
push
add
xor
dec
mov
fisubrs
out
mov
aad
push
sar
call
data16
jnp
cmp
mov
sahf
mov
cmc
addr16
mov
or
cli
call
cmp
sub
and
mov
xchg
scas
incl
subb
push
mov
enter
in
mov
inc
xchg
and
inc
inc
sub
outsb
repz
pushl
add
and
mov
sub
xor
inc
pop
push
outsl
cmp
roll
call
addl
ss
imul
addb
imul
fistpll
xchg
nop
pop
push
push
dec
rcl
jge
lea
lcall
test
mov
call
pop
cltd
aaa
xor
xchg
jbe
mov
leave
incl
cli
fwait
bound
dec
lock
test
das
add
lret
loop
jmp
or
pop
daa
mov
cmpsl
stos
popf
fadd
jg
mov
mov
icebp
inc
movsb
and
stos
mov
xor
cld
xorb
add
adc
sub
test
or
push
imul
mov
sbb
dec
movsb
sub
ja
lcall
dec
insl
xor
sub
xchg
out
or
out
and
push
fcmovb
gs
adc
jns
inc
je
mov
dec
adc
pusha
sbbb
inc
and
pushl
or
adc
or
jo
decl
pop
cltd
push
push
outsb
adc
cmp
mov
sub
add
aaa
add
clc
ja
lcall
push
pop
lea
jne
sahf
jmp
mov
call
pop
adc
mov
fwait
dec
push
push
push
push
mov
push
pop
das
aad
pop
cmp
decl
pop
add
xor
imul
fisttpl
and
sub
inc
add
test
jg
xor
and
cmp
jg
mov
decl
xchg
lret
and
sahf
fcoml
scas
push
scas
fstpl
push
test
or
sub
test
xchg
dec
rorb
cmc
dec
adc
inc
pop
mov
lock
or
into
inc
inc
xlat
sbb
adc
aas
xchg
in
pushl
sbb
xor
call
dec
insb
xor
pop
jae
inc
mov
sbbl
cmp
iret
cmp
jmp
or
out
cmpsl
push
adc
sbb
lcall
adc
in
add
fmuls
in
inc
andl
pop
fiaddl
xor
loope
movsl
mov
jne
push
aas
out
fmulp
rcl
lods
jg
call
pop
cmp
jae
or
sub
ret
in
fnsave
sbb
imul
incl
rcrl
sbb
xlat
push
out
mov
lods
push
or
push
adc
mov
movsl
adc
cld
leave
cmpsl
or
jno
push
jo
xchg
jg
xchg
mov
fimull
push
inc
fs
push
js
inc
jnp
nop
jmp
js
sahf
mov
fwait
mov
xchg
jecxz
movq
aam
in
pop
sbb
addl
mov
js
dec
jne
xchg
adc
adc
inc
mulb
jg
pop
sub
sbb
jmp
pop
shll
mov
lea
pop
hlt
call
lea
xorb
cmp
fdivrl
lahf
push
loopne
xchg
test
mov
dec
or
rcll
and
xchg
push
add
mov
push
pushf
fnsetpm(287
push
mov
add
fcompl
jbe
sar
lret
or
lea
inc
fidivs
xchg
adc
pop
xchg
mov
add
xor
in
add
inc
outsb
add
xor
pop
push
pushf
movsb
jno
dec
insb
arpl
push
dec
push
outsl
fst
inc
or
or
in
pop
mov
jae
or
rcl
cmp
jmp
pop
push
pop
cwtl
dec
pop
xor
add
movsl
movsl
mov
movsb
pushf
test
into
dec
sbb
call
xchg
adc
sbbl
inc
jp
jle
xor
jno
fldcw
fmul
sbb
or
add
fdivr
call
cs
rcrb
adc
stc
dec
and
mov
in
insb
shl
pushf
add
pusha
fwait
mov
add
popa
sahf
fimull
xor
test
xchg
iret
push
icebp
push
pop
icebp
add
jmp
add
cld
xchg
push
dec
inc
pop
jne
push
xchg
les
dec
mov
xchg
adc
jb
add
incb
push
push
push
rclb
sbb
sbb
adc
push
or
push
mov
push
and
or
fcoml
scas
clc
push
add
fbstp
sbbb
into
aaa
ret
pop
dec
adcb
clc
subl
in
outsl
jmp
push
lock
inc
sbb
mov
and
scas
lods
xchg
add
ficoml
sahf
andnps
in
lcall
cmp
punpckhbw
xlat
jl
add
popf
gs
sbb
insl
loop
outsb
scas
inc
outsb
ljmp
out
mov
add
addr16
aad
ss
push
addr16
sar
pop
addl
outsl
dec
out
or
push
jae
cmpsl
xor
inc
mov
xchg
xor
sbb
outsb
into
inc
mov
or
jmp
sub
inc
push
fiadds
sahf
mov
dec
addl
scas
test
sub
adc
popa
loop
sbb
add
ljmp
nop
shrb
rorl
testl
mov
jecxz
xchg
enter
sbb
xchg
jb
lret
adc
loopne
ljmp
insl
inc
mov
inc
push
and
dec
or
lds
decl
or
dec
add
outsl
clc
mov
shrl
jae
inc
or
out
clc
inc
or
sarl
jl
xchg
mov
insl
add
xor
into
adc
mov
push
imul
add
adc
sar
incl
sbb
pop
adc
into
jge
gs
sar
sbbl
pusha
lcall
shlb
sbb
scas
xlat
push
pop
sbb
loop
and
and
ljmp
sub
xor
cmp
mov
mov
stos
movsl
sub
movsb
adc
das
and
ljmp
cmpsl
bound
ljmp
xchg
inc
rclb
out
in
ljmp
xor
adc
add
xchg
jl
mov
test
push
dec
sbb
adc
movsl
and
mov
cmp
inc
dec
and
hlt
mov
mov
sub
sbb
fiadds
mov
mov
or
mov
loopne
mov
test
sbb
mov
jne
jecxz
scas
push
shlb
sar
test
push
nop
std
decl
insb
xor
pop
cmp
xchg
stos
loop
sub
test
add
cmp
daa
add
rclb
add
mov
add
sub
xor
insl
test
add
rcrl
mov
imul
sbbl
jno
xchg
add
arpl
out
pop
adc
xchg
test
rorb
sarl
ds
dec
stos
roll
jmp
stos
aad
sub
push
inc
sub
push
push
orl
sbb
test
call
jl
push
inc
pop
xor
sub
jl
add
and
jmp
adc
decl
adc
pop
fdivrs
movsb
pop
adc
pop
jmp
mov
push
jbe
pop
adc
adcl
cld
pushl
dec
adc
xorb
jg
xor
sub
gs
sbbb
int
xchg
mov
xchg
jmp
stos
sbb
lcall
lret
jle
mov
test
mov
lods
xlat
cmpsl
hlt
iret
or
mov
add
or
inc
addr16
inc
pop
fwait
aam
xor
int
bound
loopne
pshufw
std
pop
pusha
dec
sahf
xchg
mov
pop
test
rcrb
imul
and
negl
jnp
and
inc
mov
out
std
loop
std
jb
fsub
out
rcll
fadds
movsb
mov
insl
or
call
cmpsb
lock
mov
jmp
clc
inc
add
in
pop
dec
adc
fidivrl
cs
mov
lret
mov
sub
and
jle
ja
dec
sbb
imul
jmp
cmp
xorl
sbbl
sahf
sbb
aam
test
cld
ja
or
call
push
roll
icebp
add
sub
inc
leave
scas
cmp
movsb
lea
nop
xchg
aas
pop
fcomi
add
flds
mov
shr
mov
testl
in
aaa
rcl
incl
out
sahf
mov
lcall
sar
push
in
in
sbb
sub
arpl
lcall
mov
sub
mov
xchg
popf
inc
pop
lock
adcb
jb
dec
repnz
ljmp
mov
lcall
cmp
jno
inc
mov
add
fadds
inc
push
decl
stos
inc
cmp
sub
sbb
add
gs
push
xor
sahf
and
orl
lret
pushl
push
mov
dec
mov
scas
mov
cs
mov
push
cli
mov
lods
lcall
and
dec
adc
jno
inc
dec
ljmp
push
lock
lods
pop
cmp
sar
bound
pop
jge
in
stos
fs
pushl
ss
icebp
shrl
mov
fdivrl
jg
xor
and
decl
pushf
scas
push
mov
and
and
mov
add
call
mov
sub
sbb
xor
sbb
fwait
jo
dec
xchg
xor
jl
dec
incl
dec
xor
inc
ja
dec
pop
leave
inc
test
push
outsl
xor
hlt
dec
pop
jb
mov
push
out
aaa
bnd
push
mov
or
js
jb
mov
jbe
jno
ficoml
adc
cwtl
scas
mov
sub
sbb
call
add
lock
sub
cwtl
pop
inc
push
and
or
add
call
adc
cmp
cltd
mov
inc
divl
nop
jbe
data16
xor
enter
xchg
test
nop
jmp
mov
movsl
pop
hlt
or
outsb
cmp
lods
loope
call
js
popf
pushf
jbe
xchg
mov
pop
mov
aaa
cld
add
jno
fstpl
jno
lret
ljmp
arpl
push
sbb
jae
call
fidivl
decl
jb
movsl
inc
push
jo
in
aam
outsb
xor
xor
pop
and
inc
ja
inc
testl
ljmp
jne
je
jnp
ja
push
sbb
or
pusha
gs
sub
mov
push
icebp
mov
sarb
insl
fnstenv
movsb
mov
or
mov
add
or
icebp
call
and
or
push
pop
inc
pop
xchg
jnp
out
push
lods
fs
cwtl
addb
cmp
test
xchg
les
lock
int3
pop
enter
scas
fdiv
call
divb
xchg
or
mov
mov
subl
int3
xchg
xlat
inc
aaa
jbe
iret
outsb
fldenv
pop
push
dec
pushf
dec
cmp
imul
roll
test
repz
mov
lea
mov
lcall
xor
jmp
cmp
lcall
sub
js
xor
neg
dec
sbb
add
dec
test
sub
rorl
mov
stos
dec
rcrb
lret
jns
adc
cmp
mov
pushf
or
fistpll
popf
sbb
add
out
filds
adcl
movsb
mov
add
mov
xchg
call
mov
add
pushf
movl
inc
stos
stos
cli
or
add
aaa
mov
outsb
sarb
ljmp
lea
aaa
add
sbb
jg
or
test
pop
arpl
xor
jno
mov
adc
cmp
icebp
incl
fs
push
push
mov
mov
cmp
push
inc
dec
pop
mov
test
mov
in
fbstp
mov
cwtl
js
push
jbe
push
pop
arpl
loop
push
stos
movsl
mov
call
pop
call
jle
ss
adc
into
repz
sbb
dec
sar
mov
lret
dec
xchg
xchg
inc
pop
push
push
jno
inc
adc
pop
pusha
add
dec
clc
inc
lret
xchg
lret
insl
dec
in
div
xchg
push
std
jmp
jns
or
pop
mov
mov
cmp
inc
into
jmp
into
pop
addb
iret
add
or
rolb
std
iret
out
cld
shl
mov
imul
aas
jge
pushl
int3
add
pop
jge
and
mov
xlat
mov
lods
lahf
add
adcb
aad
add
stos
jge
sahf
mov
mov
push
mov
rorl
jp
jne
and
daa
popa
inc
mov
mov
mov
or
es
inc
icebp
dec
cmp
xorb
mov
cmp
sahf
push
mov
out
xchg
popa
movb
sub
adc
movsl
inc
pop
lcall
cmp
pop
es
xor
ljmp
or
call
pop
loopne
cmpsb
adc
xchg
lret
ljmp
int
cmpsl
jbe
xchg
inc
arpl
mov
jmp
xor
lcall
gs
orb
mov
lock
mov
pop
std
neg
add
inc
es
add
movsb
add
std
rcll
jge
inc
mov
sar
cmp
jmp
inc
int3
dec
xor
rcll
or
add
add
fcoms
mov
push
xchg
lods
jo
mov
sbb
aam
decl
and
rclb
data16
push
insb
fidivrl
dec
iret
cmp
jle
lods
mov
lcall
sbb
bound
movsl
inc
lea
aad
in
cmp
push
pop
adc
stos
xchg
ror
pop
roll
incb
sub
mov
mov
inc
push
sub
fwait
and
pop
and
decl
inc
or
pop
lods
pop
fildll
lret
icebp
mov
xor
aaa
std
decl
dec
jae
jb
or
cltd
mov
cmpsl
pop
pop
test
cmpb
inc
int3
cltd
dec
imul
decl
pusha
mov
ss
add
int3
and
in
jno
jno
jecxz
xchg
sbb
int
icebp
mov
sbb
outsl
fcompl
clc
aam
jl
sbb
xchg
out
out
xorb
jecxz
popf
push
ja
mov
fildl
jg
cli
and
loopne
xchg
fwait
ljmp
repz
dec
mov
push
lea
icebp
test
push
mov
add
lret
add
pushf
cmp
cmp
lock
adc
push
fs
stc
xchg
xchg
out
pushl
movb
and
or
mov
imul
inc
addl
cltd
insb
ror
mov
cltd
xor
insb
mov
or
lret
ljmp
or
mov
leave
and
or
mov
scas
clc
mov
pushl
test
jmp
in
test
and
cmpsb
fwait
push
sub
ret
adc
sbb
js
ljmp
inc
xchg
cli
mov
sbb
scas
mov
jns
lods
shrl
jmp
mov
fstl
mov
or
inc
std
je
mov
mov
cmp
inc
mov
add
sbb
xor
mov
adc
jg
arpl
sbbl
clc
push
or
dec
xor
aas
loopne
fsubrs
aas
insb
jne
pinsrw
push
dec
mov
ret
in
mov
pop
sbb
insb
mov
lea
xor
cmp
or
call
ja
sti
dec
fcoml
loope
rol
ja
dec
mov
add
mov
pcmpeqw
mov
pop
shrl
mov
loopne
cltd
sarl
jno
lret
fs
mov
out
fisttpl
enter
mov
jg
fldenv
sahf
dec
push
dec
sub
dec
loop
call
inc
dec
cs
mov
lret
cmp
or
cmp
mov
movsb
mov
push
in
lods
inc
pop
add
pop
fneni(8087
mov
int3
or
cmpsl
mov
shll
inc
cmpsl
inc
sbb
jg
movsb
sbb
lcall
adc
mov
dec
stos
sub
repnz
fisubs
jno
negb
pop
xor
cmp
mov
adcb
dec
mov
xchg
int
mov
push
roll
mov
shrl
lea
loopne
sub
pusha
add
xlat
fildl
jge
call
mov
in
xchg
mov
out
jns
mull
add
loope
sbb
icebp
jl
jns
pop
pop
testl
fcomi
sbb
ja
pop
enter
pop
cmp
test
add
push
mov
mov
outsl
lcall
lea
in
and
sub
push
lock
incl
or
push
xor
and
pop
cli
jg
pop
adc
enter
nop
adc
popa
push
cmp
decl
ret
xor
ret
clc
test
xor
pushl
mov
nop
push
cmp
dec
outsl
push
cmpsl
cltd
mov
dec
lods
jp
test
pop
jmp
and
jl
push
sbb
lea
icebp
call
mov
mov
dec
lret
stos
mov
push
cwtl
ret
xchg
and
pusha
dec
jno
scas
and
decl
mov
mov
mov
mov
sbb
out
pushl
ja
imul
sub
in
iret
cmp
js
mov
lahf
loope
sbb
ljmp
pop
int3
decl
testb
nop
shrl
outsb
andl
cld
inc
mov
lock
hlt
adc
insb
push
lcall
enter
arpl
jmp
ret
sub
mov
out
push
sti
pop
fildll
jg
rorb
or
ljmp
or
iret
leave
mov
addr16
cmp
int3
and
inc
lret
cmpsb
xchg
xchg
pmulhw
ficoml
adc
orb
xor
pop
inc
test
inc
lahf
les
mov
nop
sbb
adc
dec
shll
rorl
icebp
call
ret
aam
scas
or
add
std
call
mov
jmp
pop
xchg
xchg
sbb
cmpb
pop
fidivrs
mov
mov
sub
adc
add
mov
inc
xchg
cmp
cltd
pushf
push
les
xor
and
testb
movb
test
sbb
pop
std
int
outsb
imul
ljmp
sar
mov
mov
xchg
cltd
inc
mov
lock
fadds
xchg
lock
outsb
jle
xor
dec
cltd
repz
dec
xchg
xor
fs
and
adc
jg
cli
mov
out
xchg
cmp
jb
jnp
pop
xor
outsl
pushf
fistl
bound
cli
jmp
popf
fmull
mov
push
cmp
test
add
xor
ss
pop
jp
sar
jmp
fs
loope
int
xchg
cmp
mov
fs
inc
ret
inc
inc
sub
add
mov
add
and
pushf
xchg
inc
mov
ja
and
pop
stc
xchg
xchg
dec
lods
outsl
xlat
xchg
mov
mov
push
add
decl
pop
mov
nop
lock
jecxz
jmp
mov
sub
ss
add
add
pop
icebp
sub
call
aaa
push
icebp
jno
xchg
pop
nop
jg
or
and
adc
push
sbb
addb
decl
inc
cmp
outsl
add
mov
fbstp
mov
jg
lea
jbe
cmp
xor
and
decl
mov
iret
repz
int
dec
sbb
cbtw
shrl
popa
sub
mov
mov
push
add
xor
jmp
mov
les
xchg
gs
scas
adc
sub
add
sub
inc
stc
mov
insl
xor
das
mov
in
es
mov
sbb
push
fcomps
enter
or
loopne
or
addb
xor
jmp
test
sbb
mov
int
xchg
xchg
inc
nop
sub
adc
aam
or
xchg
imul
adc
ss
mov
mov
ljmp
call
jmp
fldenv
std
xchg
loopne
nop
loope
jns
dec
push
mov
flds
fcomp
sub
add
adc
lock
pop
sub
xorl
aad
ret
out
in
shlb
xchg
gs
aas
xor
loop
pop
pushl
dec
lods
scas
dec
lea
push
fsts
jne
pop
and
mov
call
cwtl
inc
leave
mov
cmc
fs
xchg
cmc
aaa
repnz
aas
push
or
mov
mov
out
inc
fidivs
sti
popf
dec
inc
lods
sub
lcall
dec
add
inc
pop
add
cmp
push
test
lret
mov
aaa
push
shlb
shll
in
fucomp
inc
pusha
mov
ljmp
mov
sbb
add
add
sub
ljmp
hlt
nop
popa
or
mov
push
jb
pop
es
mov
xor
and
aad
push
popa
mov
and
sti
fsubs
inc
mov
jmp
pushl
dec
aam
adc
mov
decl
jge
movsb
push
rcll
imul
dec
clc
push
jmp
mov
subb
call
mov
cmp
ret
lods
adc
or
ret
cmpb
sub
iret
mov
mov
lahf
ljmp
or
and
data16
push
rcl
cmp
outsb
pop
leave
mov
jb
xor
jb
div
pop
fs
push
jae
arpl
hlt
push
cli
es
xchg
lcall
jmp
xchg
std
subb
std
fcomip
decl
stos
cs
pushf
out
jg
cmpsb
adc
jge
push
out
sub
call
insb
pusha
iret
and
cmpsb
add
test
pop
clc
add
je
add
outsl
jnp
or
das
mov
add
shll
mov
or
push
insb
sahf
or
movsb
add
lock
les
or
inc
dec
cli
outsb
mov
inc
loope
dec
or
dec
xlat
adc
icebp
sub
xor
je
mov
sbb
mov
outsl
imul
sub
mov
out
add
mov
outsb
ljmp
mov
gs
fstpl
dec
fnsave
fisttpll
divl
and
pushl
das
mov
clc
ds
mov
jb
gs
lock
ds
push
mov
pop
rclb
pushl
loope
mov
cmp
xor
cmp
subl
jbe
out
pop
mov
sbb
jmp
pusha
mov
mul
mov
add
fistpll
loopne
xchg
mov
cmp
dec
adc
sub
imul
stos
and
jge
sahf
lcall
lock
pop
out
add
jle
insb
popa
in
int3
lret
jle
push
pop
ljmp
test
test
imul
or
lcall
das
add
cmp
out
sub
es
filds
rclb
sub
sub
mov
add
decl
dec
and
inc
jb
dec
fs
or
mov
inc
repz
dec
or
movsl
call
rcl
movsb
push
add
inc
cmc
call
or
daa
fdivrp
cmp
cli
inc
push
cwtl
ret
xor
mov
or
fbld
stos
and
jg
sub
outsb
jb
cmpsl
iret
stos
jle
lds
and
incl
adc
icebp
daa
jle
adc
adc
push
push
sar
das
xor
sub
xor
out
xor
cmp
bound
push
jge
pop
or
mov
mov
xor
pop
call
sub
stos
dec
into
fdivp
out
xor
lret
sbb
or
lcall
loope
lcall
scas
arpl
or
sbb
clc
jg
divl
cs
lods
decl
xor
xor
adcb
cld
mov
adc
push
dec
mov
adc
cmp
mov
dec
and
das
or
les
pop
hlt
lret
mov
add
jno
sub
lret
and
lock
call
mov
sub
lods
test
test
popa
scas
popa
push
lret
or
jae
add
sub
push
or
adc
rorl
lds
and
and
push
push
fcomip
mov
sub
cld
subb
inc
push
adc
xchg
jmp
filds
push
repnz
les
adc
xor
imul
xlat
incl
sbb
and
sbb
hlt
adc
dec
das
cld
cld
jg
and
mov
dec
sbb
xchg
popa
inc
xchg
jg
and
adc
jno
fildl
enter
jg
xor
xchg
jg
ret
add
dec
movsb
inc
or
and
in
add
cmc
incl
mov
mov
imul
push
bound
pusha
inc
dec
pop
call
and
int3
hlt
dec
rcll
mov
loopne
lods
rorb
dec
or
incb
out
aam
cmp
fdivl
aam
add
lret
aad
sbb
push
push
and
push
add
or
adc
fisttps
incl
mov
jp
pop
cmp
pop
mov
out
test
faddl
addr16
cs
rcrb
dec
push
sbb
dec
incl
into
aas
inc
xor
insb
sub
xchg
mov
xor
mov
cmp
jmp
sbb
jne
call
jmp
sub
jmp
lock
lcall
incl
into
cmp
ds
adc
les
mov
xchg
lods
lods
call
call
outsb
xchg
pop
mov
outsl
adc
sbb
enter
sub
daa
mov
mov
inc
inc
mov
adc
push
and
inc
dec
popf
push
dec
cmpsl
inc
mov
das
clc
pushl
dec
push
push
push
mov
xlat
jmp
in
outsl
sub
push
dec
pop
fcoml
das
cmpsb
hlt
incl
fcomip
dec
fstl
xor
push
cmp
and
adc
decl
xchg
dec
lods
add
mov
mov
inc
imul
and
repz
dec
push
cmpsb
mov
pop
and
clc
push
add
clc
mov
clc
ljmp
and
mov
adc
ljmp
xor
arpl
dec
icebp
mov
ljmp
inc
lds
call
pop
arpl
sbb
out
pushl
xlat
fs
and
jmp
dec
sub
push
pop
repnz
push
mov
jmp
imul
lds
adc
incl
inc
icebp
call
or
xlat
mov
xor
push
leave
pop
pop
xchg
in
cmp
jae
imul
movl
jbe,pn
divl
mov
ljmp
jbe
add
pusha
mov
jne
jbe
negl
mov
mov
fldl
push
xlat
or
pop
jp
xlat
jns
mov
in
es
mov
add
or
loopne
mov
push
sar
pushl
add
jge
bound
and
gs
testb
cmpsb
call
call
rolb
or
xorb
inc
test
ljmp
add
loope
scas
loop
out
or
add
sub
iret
lds
fdivr
mov
daa
sub
xor
and
push
mov
pushl
mov
pop
inc
insb
push
subl
jg
ljmp
jmp
mov
les
loop
push
outsl
and
fwait
sub
mov
sbb
push
inc
inc
and
inc
aaa
pop
lock
mov
iret
cli
ss
sub
sub
fcomps
imul
ljmp
test
xor
cwtl
ret
jae
inc
sub
out
inc
pop
jg
xor
push
outsl
clc
aaa
inc
clc
push
movsb
paddd
mov
push
ljmp
out
adc
mov
sbb
repnz
cmp
cmpsb
xor
out
clc
pop
out
jne
clc
bound
in
jg
adc
mov
add
add
ljmp
scas
xchg
and
pop
mov
cmp
inc
mov
mov
movsl
fadds
and
xchg
imul
mov
jp
push
sub
nop
inc
pop
push
mov
stos
mov
cmp
or
mov
mov
sar
or
mov
cmpsb
imul
mov
enter
mov
scas
ror
adc
decl
inc
scas
in
test
mov
jl
or
daa
pushl
cwtl
push
gs
jbe
lcall
in
add
jnp
int3
cmp
gs
cmc
xchg
movsb
icebp
pop
lcall
decl
cltd
adc
arpl
push
ljmp
cmp
cmpsl
mov
stos
adc
pop
cmc
jmp
pop
jmp
or
inc
dec
fcmovb
cmp
mov
jmp
inc
push
ljmp
pop
clc
pop
das
xchg
pop
jns
adc
adc
fcomip
fnstsw
cmpsb
sbbl
loop
mull
inc
adc
call
ret
jno
xchg
inc
repz
and
lds
mov
out
lock
sbb
sub
in
jo
mov
jmp
push
push
mov
push
fisttps
arpl
loopne
jb
lea
movq
lcall
jecxz
and
sub
jecxz
sbb
sub
lcall
xchg
pop
sbbl
call
jmp
scas
add
dec
pop
pop
mov
or
incl
mov
shrb
mov
cmp
cwtl
js
lcall
xchg
mov
mov
call
jmp
mov
push
cld
cs
ds
sub
jp
adcb
lcall
rorl
inc
jl
sub
in
push
cwtl
mov
imul
js
movsl
push
std
fcomip
jmp
sarb
cmp
sti
mov
lcall
lods
inc
or
arpl
mov
inc
push
dec
xchg
or
xchg
pop
jns
decl
add
mov
xchg
icebp
mov
jns
or
cmp
cmp
sarb
mov
jno
jne
cli
mov
cli
lcall
out
add
imul
adc
jns
fcomip
or
sbb
lods
lods
out
decl
repz
mov
dec
cwtl
sti
xchg
fwait
xchg
outsl
sub
sahf
lds
fisubrs
inc
xor
out
lods
lahf
mov
push
jl
iret
mov
inc
mov
das
xchg
mov
mov
dec
add
sbb
test
mov
xor
iret
add
inc
add
fldenv
xchg
aad
cmpsb
popa
je
lahf
sbb
jnp
cltd
repz
in
das
xor
and
shll
jge
and
sub
inc
inc
and
mov
pushl
rolb
xor
movb
mov
xor
mov
jg
ja
sbb
adc
and
stos
cld
jo
out
fimuls
decl
clc
pop
loop
loopne
into
lds
xor
dec
sbb
cmp
paddq
sub
lcall
xchg
dec
pop
rolb
push
fwait
cwtl
mov
mov
decl
aad
outsl
jne
xchg
sub
push
mov
sti
mov
mov
jbe
into
xchg
cld
out
jmp
decl
cmp
pushl
fistps
pop
stos
mov
pop
cs
jmp
scas
sbb
js
loope
ret
mov
lods
pop
and
xor
loope
call
sub
adc
cmc
int3
data16
and
add
test
test
decl
sub
shlb
pusha
pop
cld
mov
lock
pop
sbbb
call
pop
adc
lcall
push
icebp
cmpsb
push
rorb
test
mov
pushf
cmp
mov
inc
pushf
sub
shlb
xchg
shlb
ret
aad
lods
cmp
inc
push
out
add
call
ret
jo
mov
ret
mov
add
out
add
mov
xchg
sbb
push
inc
rcl
and
adc
incl
pushl
inc
stos
sbb
jge
ja
out
mov
scas
fmull
xor
sbb
jmp
add
xchg
outsb
xor
popa
test
arpl
jae
push
cmp
call
mov
addb
and
lcall
add
pop
sbb
flds
stos
popf
adc
popa
jle
test
pop
out
nop
out
push
mov
push
and
call
loop
mov
mov
shlb
pop
jo
jecxz
mov
and
pop
pop
ret
ljmp
je
push
clc
pop
inc
imul
pusha
decl
and
push
mov
bound
stos
bound
mov
inc
movsl
mov
jg
jne
ljmp
sub
pop
mov
sbb
jo
cmpsb
sbb
decl
sbb
sub
push
cmp
pushf
jns
cmpsb
push
fimuls
jmp
mov
mov
roll
fwait
cmp
push
inc
test
sarl
push
pop
es
jne
inc
lods
mov
aaa
stos
push
jnp
mov
call
push
in
xor
scas
in
push
ljmp
dec
imull
cmpsb
dec
packssdw
fwait
call
pusha
rcll
outsb
mov
dec
and
lret
out
sbb
jp
cmp
outsb
imul
outsl
faddp
nop
pop
ja
dec
xchg
and
xchg
jne
lock
lods
aad
aas
push
test
movsb
lock
addr16
aad
inc
jns
xchg
jbe
sub
jae
xor
adc
xor
daa
outsb
jle
jnp
jmp
lods
xor
out
push
ficompl
push
pop
iret
mov
fsubrl
adc
div
jmp
jb
leave
pop
out
mov
stos
mov
inc
or
fadds
or
mov
adcb
cltd
xlat
sbb
enter
gs
test
push
and
sahf
push
mov
loop
and
or
push
int3
pop
mov
cld
incl
cmp
and
clc
cmp
dec
sub
incl
adcl
rcr
push
cmp
inc
popa
xor
ljmp
movsb
gs
dec
jb
test
adc
out
mov
call
das
and
test
push
daa
push
pop
pusha
mov
mov
sahf
jno
adc
fsts
mov
jno
mov
movsl
outsb
mov
push
and
push
pop
fwait
xchg
aad
call
test
push
mov
pop
lcall
pop
sbb
cltd
mov
insb
inc
lea
pop
mov
out
insb
pop
sub
xor
out
dec
int3
loop
pop
sbb
out
add
jmp
sub
cwtl
pop
ja
mov
mov
insl
adc
mov
jge
inc
ficoms
test
xchg
aaa
pop
jne
pop
push
loope
or
fidivs
aad
daa
fistpll
dec
std
mov
std
pop
and
add
pop
test
subb
jle
xor
sbb
add
lock
and
mov
outsl
orb
orl
call
lods
and
push
popl
pop
rclb
nop
inc
cmp
in
add
adc
and
adc
hlt
xchg
incl
mov
imul
jnp
sub
jmp
xchg
push
in
cs
mov
orb
popf
sub
jle
xchg
mov
lcall
mov
mov
aaa
fstpt
lcall
ficompl
mov
into
imul
lcall
ss
fldcw
dec
loop
xchg
lret
cmp
vmovq
in
imul
mov
rorb
lods
push
lret
insl
fsubr
movsl
dec
lea
add
lcall
pusha
xchg
out
es
outsb
movsb
cmp
mov
jp
and
add
in
out
jl
ljmp
fistpll
add
xor
adcl
or
adcl
sbb
mov
cld
addr16
sbb
addb
into
sub
decl
inc
inc
xchg
dec
sbb
nop
cmp
enter
jg
mov
sbb
pop
roll
dec
dec
mov
mov
pop
mov
mov
cmp
add
pushl
es
in
es
dec
or
mov
inc
insl
rolb
or
decl
push
out
sub
shlb
incb
jbe
lods
dec
mov
enter
decl
je
xchg
fldcw
rorl
inc
adcb
sub
push
adc
pop
into
cmc
cmp
jno
dec
mov
sub
lret
dec
mov
xor
insb
and
lods
pushl
call
lcall
and
shl
mov
js
mov
pop
and
decl
add
repz
out
cli
sbb
sub
cld
jb
hlt
faddl
lahf
sbb
pusha
lahf
xor
idiv
jmp
lahf
test
push
cmpb
out
into
out
adc
pop
mov
jmp
sti
mov
inc
cs
adc
dec
je
or
dec
lcall
popa
dec
mov
pusha
incb
pushl
cli
and
adc
and
xor
rol
decl
jmp
loope
mov
pop
movsb
cmp
rcl
cmpl
mov
push
mov
xchg
inc
pushf
lods
jo
sub
cmpsl
sbb
hlt
xchg
jg
mov
adc
push
add
mov
push
xor
sbb
outsl
insb
adcl
incl
iret
int3
or
cmpsl
es
inc
cld
aad
jb
inc
inc
or
pop
xchg
stos
inc
es
pop
mov
cmp
inc
adc
ljmp
call
in
pushf
andb
push
psubsw
add
push
sub
lahf
incl
adc
fucomp
pop
mov
cmp
int3
aad
testb
clc
dec
pop
xchg
add
lcall
sbb
sahf
push
in
jp
push
and
pop
clc
cltd
pop
jle
push
lret
dec
popa
push
lcall
lcall
dec
pop
andl
hlt
lds
or
add
ljmp
outsl
mov
icebp
jb
bnd
lahf
mov
test
add
sbb
and
icebp
or
ja
movb
push
nop
adc
or
xor
adc
add
fucomip
ss
add
imul
push
movsb
loop
das
ret
cmc
xchg
cmp
dec
dec
fcoms
pmaxsw
dec
push
stos
xchg
adc
subl
sbb
out
mov
outsb
test
sub
sub
pushl
push
jno
test
xor
xor
scas
clc
mov
push
cli
inc
ljmp
mov
jmp
call
jmp
cmpsb
xor
pop
in
mov
lods
cltd
dec
je
and
fdivr
decl
mov
pop
pop
jbe
sub
dec
int3
adc
mov
sub
dec
dec
push
push
enter
xchg
test
cmp
scas
shr
movsb
lcall
aad
cmp
aas
adc
iret
pop
clc
xor
jecxz
fxch
jmp
neg
lret
mov
stos
cld
sbb
or
xchg
push
mov
sbb
sub
lcall
inc
insb
das
in
mov
das
cmp
or
pusha
push
inc
sub
dec
and
adcb
push
cli
add
rcl
sbb
aaa
inc
loopne
jg
clc
jmp
addb
cmp
inc
mov
xor
jg
adc
dec
or
add
xor
movsb
test
mov
inc
sbb
lds
lcall
clc
sub
or
or
dec
mov
jnp
jns
fisttps
sahf
sbb
and
bound
pop
lock
cmpsl
loop
rorl
clc
out
cli
lcall
loop
mov
out
or
or
outsb
sub
sbb
push
push
cltd
sar
mov
mov
jnp
xor
subl
xchg
shrl
int3
outsb
scas
ror
jmp
fidivrl
jne
iret
pop
mov
movsb
jne
dec
jecxz
push
arpl
fs
arpl
sbb
sarb
repnz
insl
cmc
movsb
daa
push
push
xor
cld
xchg
cmpsl
inc
les
sub
fistpll
ds
mov
adc
outsl
clc
test
pop
sahf
pop
std
ljmp
lcall
insb
xor
inc
lea
lea
outsl
push
addr16
pusha
mov
inc
aad
cmc
dec
add
mov
mov
jb
add
aas
add
inc
push
cmpb
and
sarb
addb
out
xchg
or
test
xor
xor
xchg
sub
add
fcoms
cmp
pop
lods
pushf
incl
push
in
out
imul
xor
or
pop
stos
test
outsl
mov
lcall
rorb
lods
pop
inc
adc
fwait
fistps
pop
outsb
sbb
or
xor
jbe
push
inc
repnz
mov
fnsave
fdivrl
into
test
sub
sahf
clc
sbb
jnp
frstor
filds
mov
inc
lea
ret
movsb
jb
push
sub
into
out
jo
loop
loop
stc
xor
scas
in
loopne
and
lcall
incb
ja
mov
jecxz
outsl
enter
ret
repnz
dec
out
pop
or
adc
enter
dec
idivb
xor
mov
cmp
sub
pushl
ret
out
cltd
jns
and
xor
incl
loop
jae
adc
adc
xorb
dec
push
push
inc
add
cmp
test
mov
jl
adc
cltd
and
fwait
adc
fwait
xchg
es
jmp
sub
mov
sbb
adc
mov
lock
test
sub
xchg
sub
shrl
and
jmp
pop
addr16
arpl
ficoml
dec
cli
pushl
inc
mov
insb
pop
pop
imul
cmpsb
pop
incl
mov
es
pop
shrb
sbb
push
adcl
sar
outsb
imul
scas
xor
mov
pop
imul
jns
inc
adc
cmpsb
cmp
nop
popa
sbb
pusha
in
xchg
cmc
push
mov
insb
aam
shll
xchg
and
es
call
decl
mov
lods
mov
adc
jae
push
pop
inc
push
adc
inc
add
in
incl
stos
test
cmp
mov
jle
ss
mov
jno
jg
je
mov
ljmp
inc
daa
add
xor
jb
lock
xor
push
decl
push
pop
insb
les
adc
test
incl
in
xlat
add
mov
adc
add
ljmp
in
inc
sbb
int3
sbb
adc
xchg
es
std
test
xor
xor
sbb
movsb
mov
mov
out
cli
jno
xchg
repnz
dec
adc
xchg
insb
mov
stos
sub
sub
xor
decl
jp
sbb
add
mov
xchg
add
mov
ss
ss
ljmp
das
bound
js
insl
xchg
ja
fsubrs
push
mov
sbb
xchg
sbb
ljmp
xor
insl
mov
jns
ret
push
pcmpgtw
jb
push
cmp
sub
bound
push
adc
mov
mov
arpl
cli
mov
inc
dec
mov
and
dec
outsl
mov
xchg
pop
test
repnz
hlt
lods
jne
push
jle
xchg
gs
mov
lock
ljmp
out
inc
xchg
out
jae
pushl
pop
and
cmp
aas
jg
incl
and
das
bound
pusha
mov
dec
xor
adc
adc
inc
pop
mov
or
jo
xchg
xchg
inc
repnz
nop
fidivrl
dec
call
pop
lcall
decl
push
pop
xchg
jno
imul
cmp
out
clc
incl
inc
pushf
push
push
xchg
inc
push
xchg
icebp
fwait
adc
out
shll
sbb
adc
fwait
jnp
jp
cwtl
jne
mov
jo
push
mov
fldcw
addl
pop
inc
inc
xchg
pop
js
pop
inc
test
out
sub
xchg
aas
cmp
push
xchg
jmp
jmp
jnp
les
sahf
jnp
ss
pop
ljmp
add
adc
push
add
pop
add
lds
in
push
mov
sub
lds
mov
popa
jecxz
movsb
push
mov
ljmp
clc
push
push
mov
mov
inc
jmp
mov
xor
sub
xchg
lods
ljmp
aas
mov
pop
das
lret
leave
call
leave
ret
test
mov
mov
rcll
loopne
mov
dec
xchg
daa
mov
cwtl
ret
sub
pop
dec
in
testl
cmp
inc
pop
popa
cmp
arpl
inc
test
orb
xchg
incl
mov
and
jae
mov
call
popa
bound
call
jo
dec
sahf
jbe
mov
xor
sbb
add
test
dec
rcr
add
dec
nop
jae
shlb
sbb
incl
pop
in
je
inc
clc
ja
cmc
lea
or
cmc
sbb
insb
ss
test
pusha
lcall
rol
pop
fldenv
test
loop
iret
jbe
addr16
popa
add
adc
xchg
cmp
adc
mov
push
sahf
in
fldcw
cmp
dec
push
push
xlat
lds
sbb
mov
fldcw
popf
and
mov
xlat
hlt
call
mov
mov
dec
dec
sub
inc
add
cmpsb
jb
xchg
addr16
mov
mov
fwait
jecxz
in
loop
les
pop
dec
push
pop
cmp
push
inc
out
clc
push
cs
lret
mov
adc
cli
jb
sub
lcall
inc
add
adc
xchg
pushf
and
daa
mov
mov
in
mov
add
push
xor
lcall
cltd
xchg
insl
cmpsl
incl
dec
icebp
adc
adc
mov
inc
test
xchg
xchg
cmp
and
fs
mov
pop
push
insb
dec
in
xchg
cmp
xchg
xor
xchg
mov
xchg
push
push
js
sbb
mov
insb
lahf
dec
pop
aas
je
test
jno
decl
dec
cmpsb
cmp
test
jecxz
mov
adc
sub
ljmp
test
xchg
push
insb
xchg
sbb
mov
push
ret
fcomip
leave
insl
inc
fs
sarl
pusha
xor
xlat
cli
jl
xor
mov
iret
pop
and
pushl
pop
xchg
jne
jmp
shl
jg
mov
cmp
bound
xchg
jge
gs
add
adc
sub
movsb
dec
dec
mov
mov
sbbb
mov
inc
mov
jg
cmpsb
outsb
mov
cmp
mov
fcomip
sub
push
inc
mov
imul
add
in
pop
pop
inc
adc
hlt
xchg
push
fwait
test
xchg
imul
fadd
roll
lods
pop
hlt
push
test
mov
imul
xchg
mov
loopne
sbb
cmpsl
fs
lods
in
lcall
mov
lret
fsubr
mov
pop
stos
add
sarl
in
leave
xchg
lcall
xchg
scas
push
push
jecxz
jns
mov
jmp
mov
stc
test
cs
dec
lcall
add
push
movb
addr16
mov
lods
and
sbb
inc
std
call
ret
lods
shlb
push
push
sbbb
mov
push
sbb
pop
xchg
mov
lret
mov
fbld
push
push
sub
and
dec
movsl
ss
movsl
call
fwait
cmp
and
sbb
xor
mov
mov
dec
std
jmp
cmpb
lcall
pushl
xor
add
shr
aas
aas
inc
add
adc
call
fs
movb
sub
dec
or
stos
mov
out
cltd
sbb
mov
inc
xchg
movsb
clc
cld
test
aad
in
fs
ljmp
jmp
adc
shlb
mov
mov
lret
adc
xchg
jge
test
cmp
fsubs
rclb
or
cmp
sbb
xor
dec
pop
aaa
outsl
pop
push
sbb
jmp
mov
lcall
sub
loope
jb
xchg
jae
fwait
push
push
push
adc
jg
mov
cmp
mov
xor
mov
cwtl
adc
push
mov
lahf
pop
jo
enter
gs
cltd
gs
xchg
daa
rcrl
mov
sub
jb
add
lcall
rolb
cmp
das
or
out
inc
xor
in
push
iret
test
mov
xchg
decl
jne
cs
push
std
jb
xor
les
dec
push
jo
aaa
xchg
xchg
cwtl
mov
rolb
sbb
lcall
pop
and
inc
xchg
andl
stc
jp
aaa
int3
sbb
stos
jbe
test
or
adc
not
push
add
cli
jnp
and
sahf
dec
xchg
test
mov
push
popf
lret
stos
icebp
enter
mov
aad
xor
pushl
push
addr16
dec
test
cmp
cmp
lret
call
lahf
inc
inc
lret
out
nop
hlt
call
xchg
mov
mov
sub
mov
pop
mov
mov
in
cmp
xchg
mov
fsubs
or
jb
pop
and
cmpsl
and
add
clc
dec
mov
jl
sahf
or
jg
add
scas
out
scas
xor
lds
sbb
inc
jp
test
icebp
ret
rorl
and
cmp
push
das
insl
push
and
adc
cs
or
ljmp
addr16
clc
dec
push
pop
cmp
cmp
ljmp
mov
push
js
dec
test
fidivs
dec
xchg
repz
aaa
jnp
jbe
xlat
xlat
in
enter
jl
rcrl
pop
lock
test
push
loopne
sub
test
mov
cmp
push
lea
mov
imulb
outsb
push
ljmp
xlat
jle
stos
outsb
mov
add
dec
ljmp
sbb
arpl
out
insl
mov
pop
mov
jge
jge
jae
cltd
mov
jmp
mov
iret
cltd
pop
fimull
cmp
mov
dec
or
ljmp
pop
lods
pop
sar
movsb
pop
test
mov
jb
and
stos
adc
lcall
jle
jmp
adc
or
int3
dec
ret
xchg
ficomps
aad
jge
xchg
out
iret
jno
mov
mov
mov
jmp
mov
sahf
sub
andl
cmc
jp
std
mov
int
in
sar
cmp
call
jecxz
roll
pop
mov
inc
jne
shrl
enter
ljmp
mov
jge
and
call
and
mov
loope
jmp
sub
loope
shl
jle
std
fmuls
and
push
stos
in
call
sbb
and
inc
sbb
ljmp
lahf
hlt
push
ficoms
sahf
int
pop
dec
or
xor
in
jle
add
ljmp
cli
or
scas
pop
int3
in
dec
jmp
jg
sbbl
out
repnz
push
inc
dec
lcall
push
in
or
jb
pop
adc
adc
mov
mov
pusha
rolb
jge
jl
lods
pusha
and
lods
fsubrl
movb
insl
jmp
dec
inc
inc
push
xchg
aad
pop
les
jg
sub
or
out
cmp
out
lock
lea
outsl
mov
mov
stos
orl
dec
jp
popf
pop
loope
lcall
fiadds
enter
ja
lea
mov
add
insb
cmp
xchg
sub
fists
aas
jmp
into
sub
sahf
pop
leave
stos
push
xchg
shl
mov
pop
fwait
sbb
in
cwtl
in
arpl
decl
out
xlat
incb
pop
and
adc
in
into
idiv
lcall
jb
cs
cwtl
sbb
pop
mov
fimuls
das
push
scas
and
sbb
lock
jg
jb
lds
call
cld
fnsave
les
jno
add
rclb
out
and
pop
push
cmp
jmp
and
xchg
inc
hlt
sub
call
xlat
jg
stos
cli
std
shll
and
xchg
sbb
push
std
repz
int3
out
outsl
xor
mov
xchg
in
lods
mov
pop
sar
lcall
adc
das
cld
push
ss
mov
mov
mov
ret
or
in
movl
imul
push
sbb
adc
dec
adc
sbb
daa
xchg
add
push
enter
cmp
or
jne
sbb
call
sbb
and
fdivs
loopne
decl
add
inc
repnz
dec
cwtl
pop
pop
mov
addb
test
xor
adc
icebp
test
pop
cli
decl
push
inc
mov
sbb
lods
pop
mov
sub
mov
jg
outsl
xchg
nop
jp
sub
loopne
aad
test
push
jge
in
pop
xchg
mov
mov
sti
inc
test
adc
dec
pop
sbb
mov
xchg
es
fildl
gs
call
into
push
cld
mov
stc
push
es
xor
test
pop
data16
mov
and
lcall
sbb
jmp
or
jge
fidivrs
ss
push
incl
xor
sub
arpl
jl
in
insl
cwtl
jae
pop
sbb
addb
ljmp
mov
repz
pop
icebp
cmc
rclb
pop
lock
pushf
or
cmpl
lcall
push
shlb
or
or
add
mov
inc
or
mov
add
test
inc
inc
mov
les
inc
sarb
pop
cmp
lds
jmp
pop
cli
mov
and
mov
inc
dec
mov
sub
ss
lcall
add
je
shl
xor
mov
movsb
sar
int
mov
loop
or
stos
xor
and
sub
jmp
clc
xor
sub
stos
stos
test
incl
cmp
adc
das
cmp
pop
orl
mov
mov
xor
aad
inc
insl
jmp
cmp
rcrl
and
mov
shll
pushl
mov
cmp
int3
mov
push
int
mov
push
rclb
incl
mov
push
out
sub
adc
bound
push
push
call
jmp
sbb
into
xor
inc
fwait
insl
mov
xchg
pop
outsb
inc
sbb
aam
lcall
js
pop
je
movsb
adc
sub
ret
mov
adc
jge
add
stos
call
rolb
inc
subl
or
dec
repnz
sbb
xchg
loope
je
ret
sbb
movsl
das
es
dec
enter
repnz
pop
cli
pushl
mov
dec
sbb
movsb
adc
rorb
cmp
cs
inc
out
fldenv
adc
ljmp
sub
lods
ds
adc
aas
movsl
sbb
jne
imul
fwait
adc
lret
mov
cmc
push
stos
adc
mov
in
fstpt
push
stos
mov
push
incl
sar
aas
mov
mov
xor
push
fisubl
insl
mov
std
aad
mov
jne
lock
dec
fldt
insb
aad
sbb
sub
loop
fbstp
std
scas
testb
test
ljmp
and
sbb
int3
push
xlat
hlt
test
adc
mull
fimuls
filds
inc
addl
or
pop
rolb
ss
and
call
out
lret
aam
popa
sbb
adc
mov
xchg
enter
jmp
or
sub
dec
repnz
and
mov
dec
xlat
cmp
sbb
ljmp
lods
popf
mov
movl
in
imul
pop
out
les
mov
pop
jno
and
and
or
call
fisubl
mov
pop
out
jecxz
mov
incl
fiaddl
pusha
xor
dec
xchg
fsubrs
inc
add
jno
stc
pop
add
jae
cmpsl
dec
xchg
es
pop
jnp
or
or
out
jg
lcall
push
lcall
iret
lret
or
das
push
or
filds
mov
loop
sbb
add
cmc
pushl
aam
mov
mov
adc
adc
and
sbb
xchg
mov
xchg
inc
dec
sarb
mov
aaa
and
insb
lods
add
cmp
and
inc
or
jb
xchg
icebp
pushl
lcall
xor
in
ljmp
mov
sbb
mov
mov
in
mov
mov
fisttpl
sar
incl
cld
cld
xor
out
pop
adc
mov
ss
pushl
adcl
sub
scas
je
sbb
inc
xor
in
sub
pop
dec
enter
cmp
dec
es
icebp
inc
sub
out
mov
cmp
cmpsb
or
and
mov
bound
test
enter
xchg
sbb
or
mov
fistpl
inc
mov
insl
hlt
mov
mov
inc
xor
sbb
jo
xor
pushl
or
data16
sbb
pop
add
mov
dec
push
push
inc
push
mov
push
xor
pushl
cmpsb
test
jecxz
daa
in
xchg
xchg
fwait
mov
test
jp
mov
add
pop
jns
xor
leave
jnp
pop
pusha
add
je
mov
or
fcoms
in
fdivrl
inc
fwait
shr
mov
mov
mov
stos
incl
sub
test
xlat
mov
orb
out
ret
jne
jb
jbe
incl
sbb
push
dec
dec
sub
pusha
pop
inc
mov
mov
add
pop
jge
lcall
mov
ljmp
enter
addr16
pushl
mov
in
sbb
aad
lret
sub
dec
popf
ljmp
mov
sub
insl
sbb
jb
jp
push
mov
jno
inc
adc
xchg
sub
inc
lea
inc
mov
popf
sti
pop
pushl
clc
call
je
mov
ds
dec
daa
dec
adc
in
fisttpll
xor
lds
test
daa
push
aaa
mov
jmp
xchg
pop
in
push
cmp
scas
push
pop
in
add
decl
mov
and
test
jmp
bound
insl
jg
pop
faddl
cmp
adc
aad
add
sahf
or
les
cmc
pushl
push
dec
push
lods
rdtsc
dec
mov
dec
sbb
sbb
xchg
mov
out
sbb
jp
jno
hlt
frstor
fstpl
incl
les
cmp
dec
pop
jo
scas
push
and
cmp
cs
call
push
rcrl
pop
in
push
addr16
enter
add
adc
fcoml
cld
lcall
xor
stc
aaa
xor
clc
pushf
and
dec
dec
sub
loop
sub
sub
dec
aad
xchg
dec
mov
movsl
sub
ljmp
mov
pop
mov
push
stos
xchg
dec
cmp
movsl
jnp
out
stos
call
push
dec
mov
leave
mov
ljmp
mov
ljmp
push
icebp
jae
insl
mov
sbb
mov
mov
movswl
mov
push
mov
ror
mov
gs
jbe
inc
adc
pushl
fcmove
subb
cld
insb
pop
ja
lcall
inc
pushf
loope
pop
mov
mov
mov
fldenv
ss
fistpll
and
fcomip
push
pop
mov
lock
mov
lds
sbb
repnz
pop
test
hlt
movsl
ljmp
jg
loop
add
aas
mov
stos
inc
daa
inc
arpl
dec
rorb
mov
dec
dec
or
push
mov
mov
ljmp
or
dec
clc
outsb
mov
out
add
out
cli
inc
add
cld
sbb
or
rolb
pushl
insb
jl
aad
jns
imul
xchg
fstps
cs
ja
dec
pop
jmp
xor
sti
jnp
ljmp
fwait
inc
in
cmp
sti
jbe
arpl
mov
in
popa
sti
in
outsb
jo
sbb
in
ja
mov
nop
lea
jb
mov
into
sub
sti
ljmp
test
mov
in
outsl
addr16
repnz
push
xchg
jg
mov
incl
lahf
iret
sub
aaa
lods
bound
pusha
stos
cmp
ds
lock
mov
pop
ja
sub
les
cli
inc
adc
rorl
fwait
dec
cld
lcall
pop
int3
pop
rorl
mov
in
mov
ljmp
movsl
push
fildll
jle
hlt
cmpsl
jmp
jmp
call
inc
std
std
out
testb
sub
mov
xor
call
pop
push
sbb
mov
dec
stos
cld
repnz
lahf
shrl
mov
call
sti
mov
mov
adc
cmp
nop
xor
shl
and
or
cmp
pop
mov
loop
add
cmp
call
jnp
add
call
lea
mov
push
shll
aad
cmp
pop
dec
pop
mov
test
and
mov
call
mov
inc
inc
jne
inc
daa
sbb
sub
rol
movsb
mov
ljmp
add
xor
aam
mov
jb
cmpb
xchg
fnstsw
in
test
pop
pushl
andb
ds
lcall
adc
lcall
mov
sbb
inc
cmc
pop
aas
pop
stos
xor
or
pop
repnz
lahf
fidivrl
jb
cmp
add
incl
add
sti
lret
mov
mov
cmp
mov
int
push
push
xor
lods
mov
and
outsl
cli
stos
ret
dec
cmp
and
mov
ss
mov
fdivs
jg
insl
cld
sbb
xor
mov
pop
cmc
incl
mov
popf
jne
int3
pop
mov
cmp
jb
mov
push
mov
cmp
int
ret
shrl
imul
cmp
cld
stos
aaa
jl
pop
dec
cmp
dec
adc
push
int3
mov
stos
daa
xor
mov
adc
mov
sbb
incl
pop
xchg
ret
lods
loop
sub
imul
aam
ljmp
jmp
cmp
add
ljmp
mov
mov
test
sbb
clc
or
addb
aas
sbb
dec
push
xchg
in
adc
or
loope
lock
push
les
pop
sbb
mov
sbb
pushf
xchg
sbb
ljmp
lods
xchg
jb
pop
dec
sbb
ljmp
bound
sbb
and
sub
dec
add
mov
cmp
pushl
push
mov
or
mov
cmp
nop
dec
mov
adc
pushl
add
add
pop
dec
les
ret
mov
dec
mov
fdivrl
push
mov
mov
int3
dec
sahf
arpl
data16
clc
or
mov
sub
jo
pop
cmp
int
push
pop
cmpl
imul
sbbb
mov
sub
fldt
adcl
fmul
enter
lea
mov
cwtl
int3
enter
icebp
cld
mov
mov
fwait
mov
push
aas
in
add
push
fwait
cli
repz
stc
movsb
sub
sub
loope
sbb
aas
std
sar
or
lret
lcall
in
mov
lds
dec
scas
ret
das
scas
xor
insb
pushl
dec
or
scas
pop
mov
loopne
mov
or
loop
mov
mov
aaa
cld
call
pop
fistl
inc
push
xor
adc
cmp
cmp
lock
ret
fisttpll
jne
mov
sbb
call
sub
ljmp
lcall
mov
jo
imul
arpl
fmul
sbb
add
cltd
insb
dec
test
call
and
xor
sub
xor
xchg
mov
sub
lods
lods
sbb
dec
or
cmc
js
push
mov
dec
mov
push
int
shrl
sub
ljmp
mov
fisubl
sub
mov
mov
xor
mov
mov
cmp
pop
xor
mov
ljmp
mov
sub
cs
jg
add
push
aad
and
push
cmp
inc
sbb
rolb
pop
int
daa
push
add
enter
dec
shlb
in
or
sub
lahf
hlt
leave
xchg
ret
inc
pop
sbb
push
mov
mov
mov
pushf
push
jmp
mov
mov
lret
push
sahf
stos
scas
mov
add
dec
or
cli
jg
movsl
lds
pop
jecxz
push
int
adcl
and
call
xchg
adc
rcrl
pop
push
jle
rcll
call
orb
clc
xor
jp
mov
rcrb
movsl
push
mov
push
adc
das
sar
mov
push
xchg
or
jb
or
sub
fcomi
xor
pop
nop
call
xor
dec
lods
scas
sub
sarb
mov
cwtl
popf
push
sub
pop
ret
xchg
add
incl
test
push
pop
mov
inc
xor
sub
pushl
sbb
fcomip
lcall
ficompl
or
sbb
sub
xchg
or
cmp
subb
in
cs
mov
push
fwait
and
mov
jmp
mov
fcompl
xchg
dec
push
dec
inc
or
movsl
clc
cmp
adc
mov
and
push
pop
cmp
stos
cli
dec
cmp
cltd
lahf
rcl
stc
xchg
mov
xchg
mov
push
xor
and
jbe
mov
dec
cmpl
add
int
ffree
pop
sbb
call
nop
or
inc
icebp
adc
cmp
ficoms
dec
pop
mov
movsl
cmpsb
ljmp
push
ret
inc
and
lock
std
push
push
mov
mov
nop
scas
mov
sti
push
int3
hlt
addb
ss
ss
sub
in
pop
pop
lods
sub
in
cmc
cmp
sbb
shll
jg
push
es
mov
pop
rcrb
das
jno
shlb
lods
add
incl
test
cmp
lods
cmp
pop
test
scas
outsl
cmp
push
and
jmp
ljmp
in
pop
mov
xchg
cmp
or
lahf
lahf
fcomps
andb
addl
jg
sbb
xor
dec
sub
inc
cs
mov
pushf
cmp
cld
ljmp
jl
aad
xor
and
xor
push
cli
bound
or
mov
lcall
xor
scas
stos
sbb
pop
cmp
shrb
mov
sbb
mov
aad
add
add
mov
pushl
inc
ss
popf
pop
call
loopne
fwait
push
xchg
mov
xchg
incl
inc
adc
enter
aad
fsubp
mov
push
outsb
xchg
xchg
push
call
xchg
call
mov
inc
pop
push
mov
pop
mov
lods
gs
pop
loope
mov
push
hlt
push
mov
pusha
dec
or
lds
es
ljmp
ss
add
lods
mov
call
pop
sti
pop
sbb
push
enter
int
das
les
xor
in
in
mov
push
xchg
lret
dec
cmp
enter
mov
pop
inc
loope
sbb
daa
inc
shrb
rcrl
jmp
rorl
andl
xchg
pop
mov
flds
test
scas
add
or
push
fsubl
inc
mov
lahf
incl
outsb
mov
mov
movsb
dec
xchg
mov
es
decl
add
lahf
test
xchg
jbe
push
stos
inc
pop
int
mov
cli
mov
sar
orl
pop
aas
rorl
rcrl
in
xlat
mov
lcall
decl
dec
push
data16
push
jmp
faddp
dec
push
sub
push
int
jp
stos
sub
in
adc
xor
mov
mov
sahf
lods
mov
in
fcmovnu
pop
fcompl
add
loopne
sub
and
pop
dec
jb
jmp
in
push
ret
stos
ds
fldt
xorb
outsl
jg
incl
andl
fs
pop
popf
loop
jg
aam
imul
enter
cmp
aam
pop
sahf
xchg
lods
xchg
test
dec
dec
incb
mov
inc
mov
out
lcall
rcrb
sub
mov
retw
cmp
inc
mov
inc
sbb
out
movsb
popa
sbb
ljmp
ds
xchg
mov
aas
inc
push
cmc
iret
movsb
or
jg
xchg
dec
stos
popf
arpl
and
inc
imul
xor
dec
aaa
es
add
jge
insb
push
fst
movsl
inc
add
mov
and
lds
push
and
aam
push
cmp
mov
decb
out
or
ljmp
push
lock
xlat
sbb
lock
test
out
xchg
lock
adc
ljmp
mov
mov
out
arpl
lock
mov
and
jmp
imul
out
inc
std
das
push
and
jle
add
jmp
pushf
cmp
add
xchg
mov
mov
fstpl
pop
mov
mov
nop
clc
adc
ljmp
in
mov
and
lods
or
push
outsl
data16
out
testb
fisttpll
dec
add
jnp
ret
mov
or
mov
mov
test
or
aad
fsubrp
ljmp
subb
je,pn
xchg
adc
aas
sti
aam
fwait
lret
mov
lcall
sarb
or
in
inc
push
xchg
jbe
pushl
cmp
or
arpl
lret
xchg
decl
xchg
mul
aas
data16
cmp
nop
add
pop
cli
fiadds
rorl
jo
mov
or
outsl
add
cmc
push
outsl
pusha
pcmpeqd
lock
fcomip
jmp
out
adc
mov
xchg
push
pusha
cmp
mov
fsubrs
icebp
sub
nop
or
loop
rorb
push
incl
dec
fs
jmp
ljmp
sarb
push
pop
lock
xlat
fcos
mov
or
pop
fsubrs
pop
js
icebp
pusha
adc
mov
loopne
push
imul
jns
into
xchg
test
add
adc
jg
add
xorb
int
adc
stos
add
cmp
inc
dec
xor
jae
cmp
lcall
mov
out
stos
in
es
popl
add
popa
loopne
decl
pusha
jmp
and
mov
cmpsl
call
push
dec
lds
cli
mov
mov
out
enter
lock
xchg
inc
popf
es
xchg
mov
dec
jg
or
daa
jmp
into
shlb
shrb
pop
icebp
sti
mov
jne
sub
push
jnp
mov
pop
mov
and
popa
testl
ret
ret
add
adc
jo
aas
ljmp
push
pushf
lock
cld
pusha
fcomip
ret
cmp
push
jge
mov
insl
dec
incl
ja
and
stc
jne
ljmp
mov
call
mov
stos
outsl
mov
cmpsl
scas
lock
lahf
roll
cmp
das
pusha
test
cmp
out
nop
jno
jb
inc
xor
test
js
inc
jns
data16
xlat
aam
jge
mov
or
decl
jo
cmp
inc
xchg
movsb
pop
in
xchg
inc
or
js
jae
mov
clc
lcall
lahf
cmp
repz
decl
movsb
ds
or
inc
pusha
call
shr
cmp
push
or
sub
mov
adc
sub
jmp
inc
sbb
push
sbb
jp
in
or
mov
ja
inc
fimuls
cltd
cmp
enter
dec
sub
push
test
insb
xchg
jmp
or
xor
push
cmpsb
push
cltd
push
inc
cmpsb
mov
pop
cli
lods
stos
inc
ljmp
mov
ljmp
insl
push
movsb
cmp
hlt
call
push
jmp
xchg
sub
ljmp
cmp
xor
mov
pop
es
xchg
insb
jns
sahf
cmp
jmp
cltd
shlb
or
mov
ret
pop
push
in
cli
sbb
popf
pop
xor
rcrb
sub
shl
loop
stos
fildll
lods
add
adc
xor
push
out
loopne
jae
jg
lcall
movsl
xlat
jno
mov
mov
iret
jle
cmp
xlat
out
and
stc
jmp
jmp
add
repnz
xor
mov
push
stos
push
sub
push
mov
ljmp
roll
outsl
mov
inc
rolb
stos
icebp
inc
sbb
jge
xlat
test
xor
lahf
jl
incl
dec
xlat
loope
aad
xlat
push
cs
out
jp
movsl
mov
ja
test
lcall
xor
xor
cmp
popf
adc
jp
push
decl
mov
or
xor
movsb
xchg
dec
dec
jns
jb
inc
stc
pushf
xchg
pop
sahf
ja
jnp
loope
push
nop
push
sbb
stos
call
adc
cmp
shr
or
mov
add
dec
stos
movsb
fisttps
fwait
inc
push
aam
dec
pop
cwtl
and
mov
lcall
dec
xor
and
pop
xchg
cli
fs
pop
inc
add
popa
gs
push
push
xchg
aam
push
ja
pop
cld
xchg
pop
adc
xchg
push
popa
loope
push
stos
xchg
lret
addr16
adc
sub
lds
or
push
test
imul
pop
fwait
sub
cltd
mov
into
add
mov
lods
mov
out
mov
imul
mov
jp
pop
pop
andl
shll
outsb
push
out
mov
cli
adc
arpl
cltd
xchg
fnstsw
loop
jp
sahf
dec
popf
mov
je
in
mov
jbe
arpl
divb
inc
mov
mov
cmp
fiaddl
jno
adc
inc
or
xchg
jnp
mov
pushf
and
sub
add
pushl
cmc
ficoms
mov
into
pop
loope
lret
sub
pop
jbe
loop
jg
lret
inc
sub
gs
and
fs
cmp
mov
in
data16
test
incl
je
inc
imul
inc
add
add
dec
adc
lock
incl
pop
jno
add
inc
es
adc
jno
dec
dec
jmp
sar
filds
stos
cmc
stos
push
jns
dec
cmp
push
mov
jne
push
pushf
mov
sbb
int
jmp
arpl
aam
in
addr16
mov
inc
movsb
pop
push
jb
cli
test
xchg
add
fisubrs
sbb
gs
add
mov
fadd
icebp
imul
push
and
fisubl
insl
push
fsubrs
call
xchg
push
adcb
dec
lods
jo
lcall
outsb
enter
popa
daa
fnstsw
pop
sahf
xchg
mov
mov
push
ljmp
jg
xchg
and
ret
dec
pop
sub
push
and
and
cs
aaa
mov
inc
mov
mov
test
jecxz
inc
pop
das
adc
push
mov
mov
in
movsb
popa
pop
dec
lret
push
dec
mov
cmc
lret
add
loop
jl
test
xchg
add
scas
add
rol
jno
xchg
mov
add
in
decl
inc
mov
xchg
xchg
push
xor
out
pop
xchg
sahf
hlt
inc
and
in
cmp
push
sbb
xchg
mov
ljmp
push
adc
in
dec
push
and
fildll
nop
mov
std
decl
insl
je
inc
add
mov
mov
push
ljmpw
and
call
cmp
iret
dec
push
xchg
xchg
mov
out
mov
call
incl
mov
push
cmp
out
sub
pop
test
inc
adc
inc
push
incl
xchg
lcall
push
pop
xchg
filds
or
pop
mov
icebp
pop
add
mov
xchg
mov
fwait
test
incl
scas
loope
mov
aad
or
xor
lods
sub
pop
ds
jmp
pop
into
or
div
mov
inc
testl
jg
and
cmpb
or
xchg
pushl
cli
push
test
ds
xor
das
pop
mov
mov
cmp
pop
mov
pop
imull
pop
mov
adc
cmp
loope
js
pushf
lea
adc
fstp
test
sbbl
in
mov
call
cwtl
mov
movsl
sub
mov
aad
test
repz
pop
lret
bound
dec
sbb
xor
js
xor
sbb
cld
push
mov
fs
sub
pop
ret
adc
clc
arpl
add
and
or
mov
decl
movsl
dec
push
ljmp
xor
xchg
cmpsl
mov
push
jb
pop
and
push
movsl
jmp
add
je
cmp
pop
pusha
push
out
ret
pop
hlt
mov
pusha
ja
push
mov
out
dec
roll
jmp
push
int
or
dec
aas
int3
cli
mov
loopne
insl
inc
mov
int3
add
jg
insb
mov
movb
pop
xor
lcall
inc
add
sbb
dec
ret
push
subb
in
or
jns
arpl
in
rcrl
mov
andl
jae
push
sub
test
decl
jl
clc
jp
fst
dec
jmp
aam
xchg
push
xor
ljmp
dec
negl
daa
inc
int
inc
stc
push
push
sahf
aaa
inc
pop
jae
inc
mov
imul
mov
or
js
bound
test
sbb
adc
sbbl
push
sub
sar
incl
dec
pop
lcall
adc
xchg
loop
mov
outsb
jp
call
inc
ljmp
sbbb
add
daa
ds
dec
jp
or
pop
add
adc
xor
mov
rcrb
and
movsb
xchg
lea
adc
test
jns
pushf
in
lds
mov
mov
fcoml
ror
je
mov
xchg
and
mov
movsl
and
call
out
mov
daa
adc
aas
jge
lods
daa
pusha
mov
push
addr16
in
inc
in
sbb
dec
jle
int3
inc
insl
mov
js
lret
into
and
ror
mov
adc
jg
add
mov
out
lahf
jb
cmp
jge
aam
cltd
lahf
or
mov
xchg
jle
shrb
out
or
xchg
loop
pop
sbb
jg
inc
imul
mov
pop
mov
stc
push
in
inc
in
lcall
out
push
add
adc
test
test
int
ljmp
fs
mov
or
xchg
sub
inc
pop
mov
lcall
sbb
rcrl
sub
pushl
rcll
rolb
add
xor
repz
xor
cmp
mov
add
push
push
jo
add
dec
jne
push
fistpll
xchg
sbb
jno
es
xor
mov
inc
scas
out
scas
mov
pop
pop
xchg
stos
mov
scas
mov
gs
pop
cltd
out
jnp
sub
aam
cmc
filds
cmp
and
push
pushl
jne
mov
sub
push
pop
shll
loopne
mov
lcall
aam
sub
fldl
mov
sub
inc
or
xor
arpl
aas
and
ljmp
shr
mov
lods
sub
jno
push
mov
sub
je
daa
fisttps
lret
jbe
nop
jle
and
push
test
adc
xor
cmpsb
aad
loop
xor
lret
mov
sbb
pop
jne
scas
xor
dec
pop
jmp
stos
mov
mov
int3
mov
xor
fstpt
sbb
pushl
jge
and
mov
sbbb
fstpl
mov
pusha
lcall
inc
imul
xchg
dec
pop
cmc
jecxz
mov
pushf
incb
jg
cmp
xor
mov
sti
test
jle
pop
push
adc
mov
xchg
dec
incl
add
cmp
mov
mov
ljmp
ja
xchg
leave
inc
xchg
or
sbb
jmp
fsts
les
cmp
outsl
mov
cwtl
in
test
mov
call
popf
cld
pop
inc
mov
ljmp
movsb
loopne
incl
and
inc
popf
mov
mov
adc
incl
or
fmuls
and
fs
sbb
test
aad
call
xor
push
idiv
or
mov
loop
xchg
stos
add
rclb
test
ja
decl
cmp
stos
lods
enter
jne
sahf
push
pop
sbb
push
mov
mov
add
mov
decl
xchg
xlat
jge
imul
xor
xor
push
xchg
nop
cmpsl
fisttpl
call
jmp
xlat
int
push
in
sub
in
dec
loopne
sub
rclb
and
sbb
ljmp
cmpsb
add
adc
test
repz
test
rorb
insl
mov
cld
xchg
pop
mov
mov
sbb
lock
pushf
xlat
mov
fwait
cld
push
sub
clc
pop
test
dec
jl
sbb
enter
je
dec
or
adc
pop
sub
cmc
jg
pop
lea
sbb
scas
sbb
jl
adc
test
mov
cmp
lods
fstps
in
xchg
scas
mov
movsl
cmp
dec
cld
lcall
xchg
sarb
cwtl
stc
push
mov
push
pushf
adc
cltd
pop
adc
adc
mov
jmp
jge
mov
popa
movsl
sbb
inc
mov
add
and
addr16
std
jg
dec
in
lcall
lcall
cld
add
lcall
add
cmp
nop
std
pop
test
loope
and
pushl
shll
cmp
icebp
pop
data16
xchg
jg
cli
jns
or
xlat
and
lret
mov
loop
xor
or
pop
jne
sar
call
in
out
inc
psraw
leave
jl
push
stos
pop
cmp
push
lret
pop
and
sbb
pop
dec
inc
pop
icebp
cltd
and
dec
jno
test
xchg
lret
jle
dec
test
int
jl
mov
mov
test
call
aam
mov
adc
pop
and
push
clc
popa
nop
sbb
rcll
arpl
es
pop
cmpsb
xor
lahf
pop
andb
pop
cmc
in
push
cmp
add
jecxz
cmp
dec
pop
mov
popa
lds
xor
leave
lret
loopne
dec
dec
push
enter
xor
fcomip
faddl
mov
mov
fdivl
outsb
and
sbb
ud0
decl
das
hlt
inc
and
cmpsb
popf
std
adc
mov
clc
pop
inc
incl
xchg
inc
je
test
arpl
iret
loop
jp
stc
lret
mov
push
or
pop
add
push
ds
xchg
and
into
sarl
enter
subl
inc
inc
xchg
je
push
inc
in
mov
loop
pop
stos
mov
adc
inc
into
ljmp
enter
mov
push
dec
jno
test
mov
adc
adc
roll
push
pushl
mov
cwtl
mov
es
sbb
pop
inc
cltd
fsubrs
orb
call
loop
or
lea
pop
out
pop
fisubs
pop
add
dec
movsl
adc
cmp
xchg
out
mov
gs
lret
imul
jo
add
push
mov
out
push
insb
push
jo
frstor
inc
dec
push
add
push
pop
dec
push
decl
or
enter
data16
mov
call
idiv
insb
push
push
out
movb
sbb
outsl
cmp
pop
popf
xor
or
das
mov
fcmovb
push
loop
jbe
mov
push
dec
popa
jg
hlt
add
add
sbb
js
sub
fwait
fs
rcll
outsb
imul
cwtl
sbbl
jmp
repnz
gs
mov
xchg
inc
mov
mov
test
sbb
jl
mov
incl
sbb
and
mov
or
in
pop
or
test
mov
imul
or
call
push
pop
mov
mov
call
lock
test
fisubrl
out
decl
add
and
push
imul
insb
shlb
push
into
lahf
cmc
inc
imul
cmp
out
mov
test
stc
mov
mov
fwait
sahf
jmp
cwtl
test
add
xchg
xchg
add
sbb
ljmp
cmp
adc
push
push
out
push
movb
adc
and
daa
movsl
or
lock
and
negb
mov
sti
mov
test
sbb
mov
stos
pushl
dec
outsb
push
andb
push
dec
mov
jecxz
ficoms
das
clc
pop
std
rcl
inc
test
outsl
adc
ljmp
ret
fiaddl
pop
and
xchg
cmp
mov
cld
shll
dec
jne
fsubrs
lcall
movsb
adc
in
mov
add
add
inc
in
mov
testb
ret
mov
out
ljmp
rclb
cmpb
inc
lock
push
out
lock
fadds
fiadds
loop
adc
sub
jmp
push
adc
add
cmp
inc
push
testb
mov
sti
lcall
cmpsb
das
stc
das
add
or
pushf
xchg
pop
cmp
test
sahf
call
mov
xchg
ljmp
data16
add
pop
retw
aad
add
lods
movsl
push
out
clc
pusha
testb
shll
in
jecxz
sub
jl
sahf
jb
jae
iret
ja
incb
ljmp
out
inc
cltd
xchg
inc
pop
iret
lods
mov
add
or
xor
mov
outsl
inc
lret
lds
hlt
xchg
dec
xchg
mov
xchg
adcb
sub
enter
mov
cmpb
push
sar
mov
xlat
jns
gs
push
das
in
loop
push
pop
enterw
lret
mov
pop
jle
ljmp
les
cmp
mov
jge
xchg
jmp
cmpsl
mov
push
mov
or
push
xchg
pop
jnp
lods
stos
sub
popa
stos
jmp
lea
jae
lahf
xchg
add
clc
fisubrs
test
in
mov
test
js
fcomi
mov
mov
fs
pop
push
mov
sub
orl
subl
xor
lods
les
jmp
push
and
pop
add
push
push
mov
addb
xchg
fsubrl
imull
decl
subb
add
add
and
pushf
roll
into
fsubrp
in
adc
mov
or
cmp
insb
shrl
sbb
adcb
pop
or
and
jnp
mov
adc
pop
push
lock
push
sbb
lahf
jl
jecxz
pushf
pop
dec
push
xchg
or
inc
xchg
push
xchg
or
decl
bound
push
es
out
sbb
xor
inc
scas
adc
jo
test
ljmp
inc
pop
mov
imul
inc
fwait
xor
scas
sbb
pop
jmp
cld
xlat
test
jge
lods
test
mov
jge
mov
xchg
or
xor
push
out
add
xor
adc
pop
inc
jmp
ljmp
inc
push
das
aam
dec
or
call
and
rcl
and
xorl
sbb
pushf
push
ret
fildll
inc
pop
das
add
mov
sbbl
pop
lahf
add
jne
fwait
rcrb
aas
insb
lds
sbb
fst
in
inc
je
in
pusha
shll
cmp
and
sbb
xor
leave
inc
and
nop
xchg
dec
mov
push
gs
lret
pop
mov
dec
mov
or
pusha
xorl
cltd
cmp
popf
cmc
add
lret
push
xor
or
cmp
decb
pop
xchg
mov
push
icebp
jmp
mov
rcll
push
add
ja
mov
or
ljmp
das
das
mov
daa
xor
pop
imul
addr16
ljmp
inc
pop
pop
inc
scas
push
sbb
jbe
into
insl
jo
sbb
push
sbb
cmp
adc
addr16
mov
aas
jecxz
aas
push
inc
ja
lcall
jl
mov
ss
dec
repnz
test
inc
daa
inc
ret
add
das
adc
cmp
jl
adc
fcomip
cmp
sub
add
orl
mov
mov
dec
xor
add
jg
stos
sar
push
rolb
inc
daa
pusha
shrb
inc
bound
mov
inc
mov
inc
mov
add
test
in
push
xor
push
mov
fwait
in
lcall
pusha
lcall
popa
in
fbld
xchg
ss
test
ds
pop
andb
out
pop
jae
ljmp
out
xchg
xor
negb
ja
cmpsl
in
xor
mov
clc
aaa
sbb
xchg
aaa
sub
aas
testb
imul
mov
cmp
pushl
dec
negb
in
enter
sub
jo
mov
sbb
fildll
pop
inc
inc
scas
adc
ljmp
stos
cmp
jae
xor
xchg
es
cmp
mov
sti
ss
sbb
or
xor
je
xchg
pusha
clc
shlb
xor
xchg
inc
std
jl
xchg
aaa
sbb
js
pusha
jae
pop
cmpsb
push
dec
ret
xchg
cs
sti
jg
mov
clc
sub
daa
fadd
pusha
movl
mov
jecxz
mov
lock
sub
das
pop
js
pushf
aaa
cld
sub
mov
push
mov
idiv
aaa
fcmovnb
mov
outsb
cwtl
pshufw
divl
cmp
add
sub
pop
push
shr
rcrb
cltd
cmp
mov
mov
mov
push
int3
iret
jl
mov
movb
xchg
aaa
fs
xor
ds
repz
pushl
pop
cmp
or
cmp
scas
sub
xchg
stc
leave
push
jb
ss
jnp
dec
je
jmp
mov
neg
mov
mov
dec
xor
push
cmp
addr16
cmp
sbb
clc
mov
mov
js
inc
mov
clc
daa
nop
sbb
dec
or
mov
inc
xchg
cmp
xorb
clc
mov
fdivrl
xchg
sub
mov
loopne
sti
pop
ud0
jg
inc
pop
and
inc
pop
xor
mov
mov
rolb
jg
mov
lods
xor
lret
jmp
int
je
mov
decl
ret
xchg
mov
imul
aaa
mov
ljmp
push
dec
jg
cmpsb
aas
incl
xor
inc
mov
out
jp
pop
jbe
pusha
addr16
stc
fsubs
clc
lahf
outsb
lahf
push
mov
iret
mov
xchg
aas
xor
cld
mov
xchg
aas
xor
incl
mov
xlat
mov
loope
mov
dec
lahf
adc
inc
mov
shrb
adc
jmp
shll
mov
or
jg
cmp
call
and
sbb
fs
adc
cmp
mov
fcmovnu
lcall
jno
mov
jne
loop
stc
push
clc
sub
scas
push
movsb
leave
cli
pushl
loopne
stos
adc
push
test
xchg
dec
xchg
push
pop
jmp
xlat
mov
lret
fidivl
lcall
cmp
aad
inc
lods
sbb
push
lret
aaa
scas
push
mov
decl
out
lds
fsubrs
sub
in
sbb
enter
sub
int3
cltd
xor
lcall
popf
shlb
sbb
into
mov
int
ljmp
jge
ja
cld
call
movsb
inc
cmpsl
fidivrs
jns
push
ds
push
jecxz
sbbl
lahf
insl
incl
and
test
aaa
xchg
aad
das
in
in
hlt
xor
mov
rol
cltd
add
dec
sbb
mov
cld
hlt
lea
dec
mov
aas
dec
es
or
dec
pop
mov
frstor
out
outsb
pusha
lcall
mov
stos
test
mov
xchg
les
mov
push
jmp
cs
or
jmp
sbb
orl
enter
jmp
loop
xor
fcmove
xor
add
adc
add
mov
dec
mov
sub
lret
shrb
lret
xor
lret
mov
aaa
out
outsb
add
mov
cli
cmp
cmpsb
jno
aaa
roll
int
loop
push
jmp
xchg
scas
mov
jl
in
mov
rorb
inc
inc
jae
movsb
rcll
lahf
jnp
call
adc
iret
dec
out
iret
sub
inc
push
out
mov
ds
and
sar
sbb
incl
add
and
movsb
rcll
outsb
shll
test
mov
lcall
andb
mov
cmp
adc
adc
xorl
sbb
adc
sbb
mov
lds
and
sbb
pushl
mov
aad
or
mov
repnz
cld
sbb
movb
jb
xor
and
xor
pushl
jmp
into
xor
and
sub
stos
cmp
mov
sub
cmp
pop
mov
in
xor
js
jbe
lods
sbb
fwait
popa
mov
inc
push
incl
sbb
aaa
push
iret
lret
test
and
lock
fcomip
jp
dec
and
std
or
mov
sbb
mov
xchg
nop
bound
pop
and
dec
fs
incl
cmp
adc
ret
outsb
inc
insb
and
mov
sbb
adc
fadds
jne
ljmp
shrb
dec
sbb
fmul
mov
hlt
jg
and
daa
inc
mov
aam
int3
xor
clc
inc
lcall
lcall
mov
mov
xchg
fnstsw
imul
push
scas
jp
jg
dec
std
push
divb
inc
cmpsb
mov
cltd
cltd
push
push
mov
clc
fidivl
cmp
cmp
ret
testl
pushf
ljmp
ljmp
push
ljmp
out
add
lods
das
stos
and
ds
insb
mov
dec
hlt
inc
or
inc
mov
mov
xchg
add
push
orb
mov
movsl
pushl
pop
subb
int3
lds
mov
pop
lock
js
pop
sbb
aam
mov
cltd
jo
and
cmp
pop
lahf
addl
jbe
xchg
mov
sti
dec
cwtl
into
movsb
xor
in
scas
movsb
mov
lret
dec
repnz
mov
pop
lcall
in
into
xchg
mov
cmpsb
mov
inc
jae
dec
arpl
rorl
inc
sub
imul
cmp
out
jne
sub
clc
movsb
repz
rcrl
sbb
mov
cmp
xchg
mov
ljmp
cmp
pop
dec
dec
xchg
adc
loope
cwtl
rolb
pushl
loopne
add
or
test
mov
lahf
and
popa
sbb
rolb
mov
cmpl
jbe
mov
push
xchg
adc
filds
ljmp
shll
sbbl
mov
cmp
repz
add
nop
cmp
sbb
and
jle
popa
jg
inc
mov
ret
push
rclb
movsl
inc
jne
dec
popa
mov
loope
mov
dec
xor
and
inc
mov
ljmp
inc
xchg
bound
das
popl
sbb
shrb
jns
imul
js
xor
sbbl
out
or
fcomps
decl
daa
jge
push
mov
adc
and
loop
inc
inc
sbb
sub
nop
add
decl
push
rcrl
enter
test
jecxz
iret
mov
imul
mov
mov
punpckhbw
push
scas
jg
push
data16
test
popa
pop
push
sub
ljmp
cld
lret
imul
push
in
iret
pop
xchg
xor
fbstp
jmp
add
cmp
ljmp
dec
mov
daa
lds
sbb
add
sub
je
dec
scas
cmp
mov
bswap
cltd
mov
inc
mov
insl
push
xor
pushf
shlb
inc
cmpsl
jmp
mov
insb
xchg
movb
mov
jno
lcall
notb
mov
mov
pushl
fcoml
dec
mov
popa
cmpl
inc
add
lret
mov
sbb
rol
xor
jbe
xor
outsl
xorl
xchg
xor
test
ret
xor
sub
push
pop
or
mov
add
mov
inc
insl
pop
imul
call
testb
push
push
lods
es
xlat
pop
test
adc
pop
dec
sbb
call
push
les
pop
stos
addb
mov
fisttps
xchg
push
sbb
jmp
sub
lods
add
pop
sub
pushf
hlt
js
insb
sub
mov
sub
mov
cmp
xor
push
mov
xchg
pop
sub
push
and
sbb
dec
sbb
incl
jno
push
rclb
push
push
test
pop
outsb
test
scas
jne
cltd
mov
sti
in
cwtl
ret
add
rolb
add
or
lcall
mov
pushl
jl
dec
push
inc
add
sbb
test
pusha
insl
pop
dec
dec
xlat
push
mov
pop
test
pop
mov
ja
dec
aad
pop
aas
mov
lahf
adc
mov
mov
insb
int
pop
ret
sub
push
push
ret
loope
pusha
jmp
adc
pop
xor
xchg
lahf
ja
das
mov
or
dec
mov
iret
sub
cmp
push
out
lods
mov
aas
fldcw
dec
sahf
jg
xor
and
cmp
fcompl
mov
int
mov
inc
test
aad
or
ss
iret
sbb
jns
fwait
nop
jmp
mov
rcl
push
xor
call
jae
cltd
inc
add
push
inc
pop
cmp
mov
add
movups
add
lret
orb
jg
sub
jns
jae
iret
jb
fbld
sbbl
test
inc
out
adc
fidivs
fucomp
cmp
cmp
ja
decl
cwtl
and
insb
xor
fiadds
xchg
pop
scas
arpl
repz
pushl
popa
shrl
pop
in
popa
pop
inc
pop
lods
sub
ret
push
jb
fcoms
mov
decb
ss
je
ret
fcmove
mov
pop
pop
arpl
lcall
cmp
lods
mov
mov
lcall
ljmp
dec
gs
xchg
xlat
std
int
jg
imul
pop
fs
xor
int3
xchg
notl
lcall
lahf
iret
sahf
add
xor
push
xor
insb
push
out
addr16
shll
inc
leave
add
jl
pop
sub
inc
jp
cld
xor
mov
cmpsb
cmpb
loopne
and
repnz
mov
jecxz
mov
cmpsb
nop
daa
add
mov
mov
inc
or
loop
clc
lret
mov
jb
dec
in
mov
ss
ljmp
pop
outsl
mov
jmp
sbb
add
add
into
sub
xchg
dec
or
push
xchg
cld
int3
aas
nop
add
fcomip
inc
push
lock
push
out
sti
scas
enter
jmp
push
int3
fsubr
ret
dec
jmp
mov
pop
dec
or
pop
jns
xor
mov
sub
decl
insl
or
mov
jbe
in
scas
loop
or
cld
pushl
inc
or
dec
push
jo
and
jp
add
and
je
push
mov
arpl
outsb
out
dec
insb
out
fcmovbe
cmc
scas
push
cs
or
or
or
loop
sti
decl
pushf
push
fmull
pop
ficoml
inc
mov
push
push
sub
mov
or
xchg
stos
in
scas
in
or
dec
sub
decl
push
pop
sub
sbb
add
loop
push
insb
mov
xor
decb
add
adc
icebp
add
pop
pop
adc
call
pop
push
push
or
pop
jno
aad
or
jmp
ret
push
jecxz
test
call
or
mov
sub
hlt
dec
jecxz
fs
dec
loop
dec
negb
das
or
lds
pop
push
pop
xor
std
jg
test
fmuls
rorl
mov
sbb
loop
dec
jmp
jmp
mov
add
das
lret
adc
mov
mov
repnz
roll
test
outsl
out
nop
mov
mov
sub
push
or
xchg
hlt
and
idiv
incl
icebp
add
dec
sub
xor
shrb
xor
fxch
icebp
and
jmp
inc
push
push
je
sbb
jno
dec
add
push
push
rcll
lock
jo
outsb
shrb
daa
roll
pusha
repnz
mov
jg
or
adc
or
dec
add
call
lods
adc
lock
add
cs
sub
jno
ss
je
xchg
lods
test
outsl
mov
mov
dec
shrb
imul
rcr
inc
cli
jno
sub
pop
out
dec
in
push
dec
in
lcall
or
sbb
out
fwait
adc
loope
scas
dec
sub
xchg
xchg
fwait
std
pop
or
xor
into
sbb
push
xor
add
icebp
in
lock
sub
pop
push
scas
jp
or
adc
xor
sbb
add
sbb
das
and
lock
jno
repz
aas
push
mov
mov
je
jmp
lods
mov
decl
dec
ja
out
stos
test
lcall
mov
mov
mov
sub
pushl
in
add
lret
mov
inc
sbb
push
in
mov
in
movsl
jns
dec
gs
pop
jmp
mov
sub
push
popa
jo
jae
xlat
repz
xchg
adc
cmp
lret
mov
iret
icebp
sbb
rclb
sbb
push
or
dec
scas
dec
js
scas
andb
inc
mov
dec
loop
adc
js
xchg
jne
push
and
call
inc
iret
xchg
sub
lods
out
push
add
ret
ljmp
cli
cmpsb
mov
push
or
rolb
popf
cmpsl
or
jae
mov
stos
repnz
ret
mov
push
movsb
in
jp
in
inc
ficompl
outsl
dec
imul
lds
or
cmp
dec
xor
add
mov
xchg
sub
or
push
add
pusha
repz
or
clc
push
pop
cmp
cmp
popl
ljmp
jle
pop
aam
inc
nop
cmp
dec
fptan
push
mov
fisubrl
adc
mov
rorb
repz
lea
inc
jne
pop
adc
add
incl
xchg
sbbl
push
test
aam
psrlw
jl
es
xchg
sbb
xor
inc
push
mov
push
jne
lret
or
mov
jecxz
into
sbb
aas
lahf
sarb
inc
add
clc
inc
adc
inc
cmp
inc
std
xor
mov
popa
fimull
cmpsl
xchg
icebp
jmp
jp
and
cmp
cmpsl
loop
out
out
mov
in
mov
xor
mov
inc
andb
sub
xchg
cmpsb
sub
call
dec
loop
jmp
lock
push
lock
rolb
jo
scas
jb
xchg
adc
ret
mov
pop
lock
repz
xor
lock
lods
pushf
push
decl
add
insb
or
cwtl
add
lcall
pop
inc
jo
xchg
aad
cs
fmuls
leave
outsl
cli
fisttps
sub
xor
adc
incl
adc
sbb
scas
sbb
addr16
push
pop
sub
pushl
icebp
out
and
call
daa
mov
lcall
adcb
std
lcall
xchg
and
repz
mov
sbb
shll
and
add
add
push
hlt
push
pop
fcomip
into
cmp
push
in
push
jne
pushf
mov
xlat
sbb
or
push
leave
out
add
ljmp
int
jo
jecxz
fcomi
cmpsb
mov
mov
loopne
incl
cmp
lret
testb
ljmp
pop
xor
and
test
push
sub
xchg
cmp
jg
decl
mov
insl
sub
inc
pop
mov
hlt
mov
sbb
inc
inc
outsl
clc
ljmp
pop
shll
mov
push
insb
dec
push
push
or
notb
popa
imul
push
jg
adc
sub
mov
call
loop
in
mov
bound
jno
std
outsb
popa
jge
add
jne
xor
mov
dec
stc
push
cmp
adc
xchg
fldcw
sub
cmp
xor
mov
aaa
lods
out
repnz
cmp
in
pop
dec
sbb
sub
push
jge
mov
bound
cmpsb
jmp
sub
dec
xor
add
movd
pop
dec
popf
in
outsl
test
outsl
std
push
dec
fisubrl
mov
jno
xor
push
cltd
add
in
push
mov
push
pop
test
lcall
outsl
and
sbb
pop
xchg
scas
xchg
in
call
or
inc
push
add
dec
clc
pop
inc
xor
mov
pop
mov
popf
sub
pop
in
adc
adcb
lock
mov
add
in
dec
pop
dec
cli
lcall
jne
mov
cmp
aam
sub
push
xor
clc
cmp
pop
decl
and
ja
jp
into
push
dec
push
mov
aaa
insl
test
adc
and
ljmp
mov
ljmp
ss
xchg
pusha
div
pop
mull
xchg
xchg
fmul
icebp
dec
inc
jne
icebp
into
push
test
jl
data16
pop
and
mov
loopne
decl
jg
pushf
movsb
push
insb
in
push
xor
inc
pop
sub
outsb
cmp
cmp
xchg
mov
hlt
jg
call
ror
add
cmp
pop
sub
aam
pop
cmpsl
xchg
mov
lret
shr
test
sub
pop
cwtl
mov
cmp
push
sub
pop
fldcw
stc
push
loope
shld
test
jae
xlat
fsubrl
out
mov
sbb
xchg
inc
cmpl
stos
jg
cmc
mov
xlat
sbb
addr16
mov
mov
pop
jbe
insl
or
std
mov
sub
je
lods
xor
add
call
sub
inc
lret
adc
push
scas
dec
cmp
and
mov
icebp
daa
sub
dec
mov
jg
sub
mov
popfw
xchg
mov
push
adc
arpl
lcall
das
mov
mov
dec
bound
pusha
popf
or
push
loopne
mov
stos
or
fisttpl
push
or
lods
mov
push
or
repz
push
pop
mov
call
sub
out
test
xor
push
mov
sub
cwtl
cmp
cltd
add
std
xchg
pushl
add
xor
clc
mov
mov
mov
mov
or
mov
pop
repz
mov
cltd
fdivl
sbb
int3
mov
decl
in
mov
in
fildll
repz
rorb
push
call
lcall
imul
lea
cmp
xor
or
mov
decb
mov
pop
push
mov
push
jle
dec
int3
enter
jg
push
mov
pop
xor
jo
push
sets
cmp
lods
loope
jg
ljmp
xlat
icebp
lods
rclb
fidivl
mov
mov
loopne
clc
ljmp
stc
and
jae
adc
sbb
jae
popa
shlb
push
mov
decl
cltd
inc
mov
or
mov
es
lcall
or
dec
pushf
jo
cmc
jg
and
mov
sub
fstl
aam
pop
sti
popf
dec
cmp
jmp
mov
adc
pop
decl
lea
xchg
mov
sbb
dec
addr16
xlat
jb
sti
xchg
mov
sbb
sbb
lret
and
cmp
idivb
inc
sar
cmp
aas
stos
jb
lods
cmp
xchg
jbe
faddl
decl
fdivp
mov
sbb
daa
sbb
fldt
push
clc
jp
xchg
mov
adcb
fwait
cmpsb
dec
lods
add
pop
lods
and
daa
mov
gs
sarl
fstpl
pop
inc
out
cli
inc
push
outsl
add
adc
loopne
mov
popa
ss
ret
mov
in
jmp
aam
lock
mov
mov
cmpsl
and
or
arpl
aaa
xchg
sub
test
jae
repz
add
arpl
jbe
mov
cmc
inc
cltd
cmpsb
popa
test
pop
and
int
cwtl
sub
dec
push
cmp
mov
mov
loop
lahf
mov
add
test
jnp
fcomi
mov
lock
or
or
cli
and
add
ds
cld
lcall
jmp
les
xchg
sbb
pop
ficomps
popf
xor
test
rcl
sti
sti
fwait
mov
pop
sarb
sub
dec
sbb
sub
call
jp
or
dec
jns,pn
and
les
xor
sub
pushl
pop
sbb
addr16
dec
add
push
ficomps
mov
push
xor
shlb
add
js
out
clc
jg
xor
add
leave
mov
xor
cli
int3
mov
std
fiaddl
je
ljmp
cmpsb
mov
and
mov
ds
pushf
mov
add
push
adc
popf
jle
pop
jle
sarb
cmp
aam
pushf
inc
repz
lret
imul
xchg
mov
filds
mov
sub
or
data16
leave
call
ficomps
cmp
rcrl
push
and
mov
mov
inc
push
jno
mov
mov
fisubrl
jg
or
call
xchg
shl
mov
sub
das
pop
mov
push
cmpsl
insl
jecxz
sbb
mov
adc
pop
pop
int3
addr16
lds
or
push
test
jge
sbb
call
adc
mov
jne
iret
stc
mov
cmp
pop
cli
inc
loopne
fsubrp
xchg
stos
fisubs
ljmp
push
clc
xchg
scas
inc
mov
adc
sbb
mov
push
or
in
add
jo
or
sub
pop
icebp
rclb
ficoml
pusha
sbb
push
sbb
fs
add
decl
shl
inc
into
inc
nop
sbb
xor
pop
ljmp
call
repz
imul
pushl
aas
cmpsb
add
mov
dec
cwtl
sbb
test
mov
jo
jmp
loop
ljmp
xor
sarb
clc
les
test
jmp
xor
ljmp
jmp
sub
scas
jne
push
loope
scas
cmp
sbb
cmc
stos
shlb
stos
adc
push
mov
and
movsb
mov
jno
std
in
aaa
je
addb
lcall
add
cmc
cmpl
jecxz
mov
loopne
popf
pop
lahf
rclb
fnstsw
mov
pusha
mov
scas
fwait
out
jmp
repz
jne
mov
inc
pop
cwtl
out
mov
inc
jne
sub
addr16
std
cwtl
sti
arpl
fs
fistpl
mov
fwait
sbb
out
je
cld
ret
sti
pop
sub
daa
sbb
or
jb
adc
xor
xchg
mov
and
inc
adc
adc
out
inc
mov
mov
push
cs
nop
inc
adc
xor
pop
mov
rorl
jp
sbb
and
ljmp
decl
mov
push
push
test
dec
pop
cmp
or
dec
sub
ljmp
and
cwtl
popa
mov
sub
xchg
cwtl
cmp
in
pushw
pop
mov
and
pop
pop
cmc
cmp
jb
push
push
lahf
outsl
jmp
cmp
pushf
sbb
popa
js
inc
jbe
lds
andl
call
sbb
je
sbb
cwtl
xchg
imul
push
push
xchg
lds
pop
decl
inc
cli
popa
lea
mov
fdivl
roll
jno
pop
jmp
fldt
mov
xchg
cmpsl
sbb
adc
jae
cmp
icebp
cmpsl
sbb
sbb
pop
ja
cwtl
repnz
ljmp
xchg
jg
insb
cld
sub
fildll
addr16
loope
sbb
subb
enter
xchg
or
lcall
call
fiaddl
xchg
mov
movsb
mov
or
mov
push
lock
dec
push
pushl
xor
cwtl
jo
aas
sbb
ret
dec
movsb
push
pop
lcall
dec
aas
cmp
push
cs
call
sahf
dec
mov
pop
xchg
pop
and
xchg
adc
adc
push
cli
sbb
jae
dec
fcomip
addr16
inc
jo
jns
ljmp
lahf
cmp
jne
mov
mov
push
bswap
cltd
movsb
pop
add
adcb
lcall
pop
xchg
cltd
push
cmpb
es
mov
mov
mov
lods
mov
mov
xorb
pop
fnstsw
push
cmpsb
lods
ret
pop
jle
xchg
mov
mov
jmp
lea
lds
jae
mov
push
add
dec
test
test
test
incl
push
mov
pop
jmp
sti
adc
add
xchg
outsb
clc
fnstcw
mov
ljmp
js
jmp
mov
and
les
out
jecxz
adc
fst
sub
divl
dec
mov
pop
fsts
movsb
repnz
cs
pop
pop
jne
mov
aam
ljmp
lods
cmp
xor
movsb
icebp
movq
lret
pop
clc
cmpsl
adc
inc
cld
pop
sbb
pusha
inc
sbb
mov
pop
dec
xor
xor
lcall
sbbb
pop
cmp
or
jecxz
aaa
pop
andb
les
cmpsl
push
shlb
repnz
test
movb
and
inc
lds
cld
je
sub
push
xchg
push
xchg
add
imul
aam
fbld
push
repnz
cmp
cmp
sbb
sarb
out
popa
int
or
scas
push
push
or
out
mov
and
mov
mov
xchg
fcomip
inc
sub
fldcw
addr16
mov
add
pop
mov
call
orl
cmp
and
in
mov
call
dec
das
ja
mov
cli
inc
es
and
scas
push
xchg
inc
imul
pop
lret
sar
cwtl
addr16
xchg
add
test
mov
push
lcall
sti
sbb
addr16
add
ss
data16
rclb
xchg
mov
ljmp
push
movsl
movl
xchg
aaa
and
dec
cmp
mov
ss
dec
lods
test
xor
add
sti
data16
call
pop
sarl
dec
jb
push
xchg
sub
add
movb
fisttps
pop
enter
mov
cmp
add
lcall
leave
test
loop
sbb
push
or
ret
rcll
sahf
pushl
lret
dec
insb
inc
or
dec
stos
xlat
dec
mov
adc
add
rorl
pushl
cmpsb
and
push
adc
es
xor
lods
and
add
cmpsl
les
loopne
cld
call
dec
push
push
pop
ret
inc
jecxz
pop
out
setne
or
adc
jg
inc
xor
test
dec
pop
movsl
add
xor
ljmp
push
lea
xchg
stos
loop
dec
orl
mov
cmp
pop
sti
inc
sar
fsubrl
inc
test
add
push
cmp
mov
and
sbb
bound
sbb
add
add
subl
mov
mov
and
call
rcrl
call
loop
in
ret
mov
add
lods
outsl
xlat
cmp
popa
push
xchg
fdivrs
push
std
xchg
test
lahf
ljmp
adc
cmp
incl
xchg
aam
or
sahf
pop
mov
xlat
sbb
sbb
xor
insl
aaa
inc
aaa
ljmp
mov
mov
and
lock
cwtl
xchg
fsts
xchg
push
jns
xchg
mov
ljmp
jmp
adc
sub
bound
add
xchg
cmpb
scas
ljmp
push
pop
les
lds
popf
scas
fs
call
or
jns
xor
dec
push
pushf
shll
lods
jl
aaa
shlb
ret
mov
sbb
adc
pop
cmp
bound
cmpsl
jle
loope
push
and
stc
pop
in
ret
orb
imul
subl
call
pop
adc
ja
ljmp
fidivrs
xor
aaa
jbe
add
lock
js
jecxz
lcall
mov
and
pop
insb
arpl
in
dec
fidivl
pop
in
mov
sub
rolb
pop
not
pop
mov
pop
sbb
hlt
testb
push
std
jle
test
xchg
dec
xchg
cmp
inc
mov
clc
scas
pop
jo
inc
xchg
clc
dec
jge
add
data16
fisubrl
cwtl
mov
adc
pusha
cmp
mov
fdivrl
sub
mov
jl
nop
mov
mov
clc
lcall
sbb
xchg
scas
sbb
cmc
jecxz
ret
xor
aas
lahf
mov
xor
xorb
imul
xchg
push
sbbb
mov
call
inc
jne
arpl
pushf
or
jmp
inc
loop
das
cs
repnz
or
jl
xchg
mov
popa
inc
push
mov
es
in
icebp
fistps
enter
and
push
pop
mov
bound
inc
das
and
insl
cmp
mov
fsubl
ficoms
pop
jns
fdivp
jmp
push
cmpsl
subb
int3
xor
jg
xchg
sahf
mov
ljmp
cmp
lods
daa
imul
enter
push
or
dec
leave
cmp
scas
or
jg
xor
movl
mov
insb
sbb
mov
imul
push
adc
pop
incl
mov
mull
mov
leave
insl
out
mov
adc
mov
lret
dec
or
pop
lcall
sub
inc
cmp
fnstenv
int3
aam
inc
inc
jns
dec
add
adc
dec
xor
mov
push
adc
sbb
cmp
jns
repz
xchg
ret
enter
ret
aaa
fisubl
call
add
in
pop
dec
std
inc
scas
mov
fsubp
popa
cmpsl
xchg
mov
mov
inc
sbb
test
dec
push
shlb
nop
je
mov
imul
cmc
ja
cmp
pushl
pop
imul
mov
pop
inc
or
push
add
jge
jge
xorl
sbb
add
pop
add
loop
cld
stc
repz
jp
push
pop
scas
inc
inc
fsubp
js
gs
mov
fs
push
aas
xor
aaa
jge
dec
mov
xor
mov
push
adc
inc
add
loop
pusha
push
sub
je
cmc
hlt
or
nop
inc
popf
pop
pop
cmp
rcll
dec
inc
decl
sub
or
incl
jne
jo
push
ss
dec
sar
ss
jle
and
sub
inc
push
out
adc
push
dec
cli
inc
jne
lret
xorl
test
call
pop
js
push
aaa
gs
adc
mov
imul
orb
xor
pop
ret
jg
jg
jbe
or
lods
cmpsb
push
cld
adc
push
jo
incl
notb
pusha
push
push
adcb
popa
adc
das
insb
inc
mov
das
sbb
pop
push
pop
sti
add
ret
mov
inc
movb
cs
outsb
lret
push
decl
andl
enter
dec
test
and
mov
cmp
test
incl
cli
rorl
xor
cmp
push
int
cmp
sub
jmp
mov
sahf
cmpsb
sub
adc
inc
push
test
pushl
pop
andl
mov
divl
jg
push
rolb
aam
aas
sub
push
hlt
incl
jb
push
call
and
inc
cmp
cmp
push
inc
mov
popa
jbe
aam
mov
inc
notl
incl
ja
mov
daa
push
xchg
mov
outsl
and
mov
hlt
incl
jae
or
scas
cmpsl
jbe
jb
mov
or
insl
add
ljmp
roll
addl
stos
icebp
subb
not
cmp
inc
inc
ret
mov
ret
xor
inc
push
cmp
inc
cld
rorl
icebp
ret
add
clc
push
stos
mov
mov
add
das
cmpsb
and
adc
repnz
sbb
decl
jl
pop
cmp
inc
mov
push
xlat
mov
enter
xor
call
rcl
aam
out
sub
ret
loop
loope
nop
lret
fs
incl
cwtl
push
aaa
stc
inc
pusha
das
push
mov
adc
add
mov
daa
mov
xchg
mov
add
leave
mov
jg
gs
popa
add
pushl
cld
out
es
xor
add
hlt
push
leave
xchg
push
cmp
cmc
pop
nop
aaa
inc
sbb
test
inc
pop
jmp
mov
xchg
in
sub
call
pop
je
ja
sbbb
dec
xlat
push
lea
push
xchg
pusha
gs
orb
xor
xor
and
out
cli
add
push
adc
mov
insb
jl
fwait
cld
out
inc
stc
je
mov
mov
outsl
addr16
adc
jmp
sub
add
xor
xor
and
inc
cmp
fcomip
jp
push
or
loope
loopne
adc
add
adc
out
cli
stc
fwait
int3
mov
inc
inc
stos
pushl
cmp
push
inc
jg
sbb
popa
lcall
pushl
pusha
cli
mov
lds
mov
mov
jl
shll
dec
sbb
cmp
sbb
movsl
xchg
jmp
pop
dec
inc
jecxz
lcall
sbb
mov
sbb
sahf
iret
inc
xchg
pop
push
aam
decl
sub
dec
sahf
ret
cmpsl
push
lahf
jnp
mov
std
push
or
pop
dec
dec
lds
jg
pop
in
inc
push
xchg
test
test
test
mov
nop
mov
push
daa
fs
add
mov
cld
cmp
pop
pop
mov
and
fnstcw
push
lcall
sub
xor
mov
sar
mov
push
orl
aad
inc
repz
add
fcomip
jg
cli
mov
inc
dec
inc
cli
pusha
dec
push
ljmp
sub
and
orb
and
lret
jmp
movsb
jg
mov
jl
es
daa
mov
pop
add
popf
out
cmp
aad
sbb
pop
out
mov
ljmp
jae
adcl
jecxz
inc
dec
je
push
dec
xor
pop
push
cltd
dec
xor
sub
pop
pop
int
test
jmp
adc
mov
mov
aaa
mov
jg
sub
inc
adc
xchg
push
push
push
ss
sub
stos
inc
loop
cmp
lcall
subps
mov
inc
inc
andl
adc
lock
fisttps
inc
pop
mov
or
cmp
js
mov
movsb
pop
cmp
daa
lcall
cmp
push
mul
add
adc
mov
push
add
es
dec
mov
pushl
inc
mov
sub
cmpsl
cmpsl
idivb
xor
xchg
jns
cmpsl
pop
dec
or
lcall
xorb
mov
divb
clc
data16
mov
call
add
xchg
pop
loop
insl
iret
add
cmp
jnp
xchg
jb
xchg
ror
fwait
and
xor
popa
js
mov
or
jg
push
test
jns
js
xchg
daa
cmp
scas
jne
pop
clc
das
mov
mov
inc
and
cmp
ret
pushl
push
jo
lcall
lds
lock
in
mov
sub
add
sub
xchg
cmp
sbb
cwtl
dec
mov
inc
mov
incl
mov
add
pop
lods
sbb
mov
jno
incl
sub
and
cmp
adc
xor
sbb
mov
adc
sub
popf
idivb
pushl
xorb
xchg
lahf
loopne
adc
sbb
jmp
pop
cld
lcall
add
arpl
push
lods
jnp
adc
cmp
out
pusha
sbb
mov
push
ja
inc
insl
mov
xchg
mov
and
mov
cmp
mov
or
or
pushf
das
fisubl
inc
cld
decl
stos
jae
loop
xor
xchg
adc
stos
ja
ljmp
jle
add
push
mov
push
mov
and
pop
push
jne
and
call
ja
mov
dec
adc
fidivrl
divb
rorb
imul
ljmp
xchg
cltd
xchg
sub
ljmp
and
movsb
push
adc
lcall
lods
adc
xchg
cmp
shll
sub
icebp
adc
mov
pop
dec
sahf
jo
sbb
cmpsb
mov
frstor
xchg
sub
dec
and
fcoml
aaa
xchg
sar
xor
mov
mov
pminub
ljmp
int
jl
xor
adc
fmul
cmc
mov
add
jmp
nop
add
decl
dec
and
jae
insb
sub
subb
fs
aam
push
and
xor
test
ror
fs
mov
jg
mov
scas
into
cmpl
mov
xor
mov
stos
sbb
cs
imul
test
ret
and
cld
and
adc
push
adc
push
enter
cld
dec
push
dec
cmc
push
shlb
xor
dec
cmp
enter
bound
aam
pop
cmp
stos
pop
ljmp
add
jl
lcall
add
pop
cld
sub
push
call
cld
adc
icebp
add
mov
add
lcall
decl
cmpsb
rolb
cld
add
mov
mov
cmp
std
aaa
cld
stc
sub
clc
mov
cmp
enter
push
add
mov
leave
outsb
xchg
xlat
ret
push
sbb
adc
rolb
negb
push
int
sti
or
bound
xchg
inc
and
in
add
pushf
sarl
jg
dec
pop
es
xor
stos
push
xchg
ffree
or
adc
pop
sbb
xor
sub
clc
call
aad
scas
pop
loopne
jl
iret
inc
pop
shrb
mov
jbe
mov
cmpsl
jne
mov
call
lret
adc
push
xchg
mov
pop
movsb
test
push
mov
jb
jb
pushl
inc
cmp
and
das
into
je
xchg
push
push
push
cmpsl
addr16
jne
pop
push
gs
jge
incl
mov
loope
xchg
push
cmpb
rcl
mov
int
rcrb
call
push
popf
pop
adc
cmp
adc
mov
adc
cmc
ljmp
sub
sbb
ret
ja
cld
sbb
lods
cmpsb
test
movsb
int
leave
lock
sar
outsl
clc
xlat
pop
mov
sub
xor
xor
jo
jg
lock
into
sbb
mov
leave
add
lret
pslld
xchg
sbb
dec
mov
cmp
call
xor
add
and
pop
loopne
mov
std
jg
or
int
jle
dec
push
fadds
add
mov
and
add
push
mov
hlt
call
dec
adc
enter
pusha
add
jp
ror
idiv
xchg
lcall
bound
xchg
stos
mov
rorb
pop
adc
push
sbb
add
repz
push
inc
add
mov
cmp
iret
cmpsl
push
mov
cmp
push
outsl
dec
mov
fisttps
mov
popf
mov
pop
or
cmp
fisttps
adc
xchg
pop
jb
cmp
movsb
push
xchg
out
jl
aam
jecxz
fnsave
cmp
cmp
jge
pop
adc
pop
xor
pop
loope
and
mov
pushf
in
into
enter
ljmp
dec
or
out
inc
and
inc
ret
mov
in
mov
xchg
dec
test
inc
fiaddl
les
decl
js
stos
adc
add
imul
adc
cmp
dec
inc
cli
sbb
xorb
scas
sbb
les
sahf
in
lods
pop
addr16
push
cld
outsl
les
mov
adc
push
int
insb
enter
adc
in
lock
xor
jae
movb
rcrl
pop
shrb
int3
dec
add
pop
sbb
jle
jne
pushl
xchg
and
clc
in
hlt
out
inc
lods
cs
out
jl
call
mov
out
add
push
ljmp
dec
pushl
mov
cmpsl
adc
jo
lods
notl
je
sbb
loop
adcb
jg
xor
imul
add
loop
and
push
ds
int
cmp
std
rcrl
pop
lock
sbb
clc
sqrtps
insl
sub
inc
pop
adc
or
and
out
cli
arpl
xor
mov
mulb
jne
shl
add
int3
roll
lret
dec
popf
rcll
pusha
das
test
test
loopne
mov
popl
jg
in
pop
scas
adc
and
lret
sbb
pop
daa
dec
loop
fnstenv
mov
cmp
pop
pop
popf
sbbb
cwtl
push
xchg
push
jmp
fstps
adc
sti
or
inc
dec
fstp
leave
das
add
inc
add
xor
imul
in
mov
popf
mov
mov
pop
pop
xor
mov
daa
pop
inc
mov
mov
ret
test
push
pusha
test
sbbb
pop
test
pushl
xchg
and
mov
sub
mov
pusha
dec
idivb
in
incl
cmpsb
dec
pop
mov
call
push
adc
or
cmc
movsb
add
gs
clc
dec
sahf
inc
fwait
mov
push
mov
imul
orl
test
cmp
pop
addl
imul
loope
or
jmp
cmp
fs
sub
lods
pop
jns
jecxz
or
dec
push
sbb
pop
insb
add
mov
xor
xor
lock
lcall
decb
popa
lcall
jnp
inc
ret
ja
mov
decl
into
popf
cwtl
adc
mov
xor
jle
negl
adc
das
rcrb
mov
mov
ret
sbb
xchg
cld
call
insb
sbb
lea
sbb
inc
fsubrs
cld
out
enter
cmp
add
xor
dec
adc
icebp
mov
es
and
incl
test
nop
xchg
cmp
pop
or
cmp
ret
test
push
dec
mov
fnsave
into
adc
jl
mov
shlb
push
push
mov
or
mov
into
inc
incb
outsl
mov
push
inc
ret
pop
inc
fcoms
and
ljmp
mov
or
out
sub
push
packssdw
jo
lcall
inc
js
call
ret
daa
dec
add
and
pop
ljmp
adc
mov
ljmp
and
mov
jmp
daa
adc
mov
mov
mov
cmpsl
lcall
pop
cli
repz
inc
in
rolb
stos
dec
mov
add
repz
shll
insb
aaa
ret
mov
in
mov
test
inc
or
dec
xlat
shlb
mov
sub
scas
cmp
into
sbb
inc
ljmp
clc
pushl
std
or
sub
xor
mov
in
push
imul
fucomp
fadds
and
decl
clc
adc
fdivr
cld
ds
mov
sbb
mov
pop
rol
and
aas
jle
imul
incl
mov
add
dec
mov
int3
or
xchg
fidivl
mov
jo
and
in
lahf
jp
pushl
in
pop
inc
dec
and
clc
inc
sbb
sbb
arpl
out
add
or
sar
jg
test
les
xorb
adc
int
push
call
mov
pop
rcll
or
push
mov
std
aad
fimull
sub
dec
test
loop
into
in
mov
add
ret
ljmp
clc
dec
xchg
and
xchg
scas
test
les
push
mov
jmp
mov
clc
ret
mov
push
sub
sarb
ljmp
push
pop
movsl
push
adc
outsl
cmp
movsb
pop
test
call
loopne
or
gs
sub
fcoms
notb
sub
loop
sahf
push
xor
xor
aam
sub
cmp
sub
jg
push
fcomps
xchg
adc
outsb
mov
jg
call
ljmp
jae
rcl
dec
push
cmp
mov
or
inc
jecxz
add
or
or
push
mov
pop
ss
js
sub
and
mov
or
dec
ret
sbb
dec
push
add
inc
mov
or
and
addr16
and
pop
clc
cmp
pop
jmp
das
cmc
fsub
ds
add
cltd
mov
mov
lcall
das
push
sti
and
inc
imul
jg
mov
cmovg
sbb
pushl
ljmp
data16
sbb
dec
xorb
pop
outsb
and
sti
pop
icebp
sbb
mov
jbe
int
and
adc
add
pusha
inc
jmp
outsl
enter
mov
or
push
inc
int3
addb
fwait
add
dec
dec
or
sbb
daa
lea
pop
and
sub
ljmp
cmp
push
mov
je,pn
fmull
in
test
sbb
sub
add
xchg
cmp
cld
mov
and
jno
ljmp
mov
add
in
out
xor
xchg
cltd
out
insb
jns
xor
loopne
push
mov
es
xor
cmpsb
mov
jmp
xor
fsubrs
cmc
js
mov
adc
fwait
add
mov
jg
mov
push
pop
sbb
scas
adc
adc
cmpl
call
and
push
int3
cwtl
mov
xchg
add
or
adc
shrb
or
fmull
movsl
test
xchg
jo
das
adc
fisubl
fsts
or
lock
test
add
xchg
adc
decl
rclb
or
cmpsl
adc
pop
insb
mov
xchg
es
shlb
movsb
loopne
push
adc
adc
pop
and
xor
inc
rcrb
insl
sub
rcr
mov
sbb
mov
js
inc
fimuls
push
push
decl
mov
inc
lock
int3
out
pop
jl
or
and
dec
dec
and
popa
inc
and
ljmp
xchg
pop
sbb
lahf
lock
mov
push
fnstcw
cmpsl
lds
outsb
jno
dec
push
pop
shrb
das
mov
push
ret
cltd
lods
icebp
fldcw
jnp
and
repnz
arpl
cli
lcall
sub
mov
roll
xchg
mov
cltd
adc
out
xchg
ljmp
sbb
js
inc
test
popf
push
lcall
ljmp
test
ds
jl
dec
adc
shlb
add
insl
out
imul
test
xchg
aam
frstor
fdivrs
pop
jmp
stos
mov
mov
incl
add
addr16
std
int3
vmwrite
inc
fnstcw
imul
push
and
outsl
jecxz
add
sbb
out
xchg
mov
or
jnp
lods
rcrb
jne
bndstx
mov
push
inc
movsb
push
pushl
enter
loopne,pn
aaa
rcrl
fstpl
xchg
cli
pushl
movsb
mov
repz
adc
sub
jge
dec
inc
cmp
pushf
push
lcall
inc
xor
push
sbb
fisttps
xor
in
push
xor
mov
add
push
mov
push
cltd
jge
pop
incb
pushf
adc
mov
gs
cmp
daa
hlt
mov
les
mov
data16
cmp
pop
xor
clc
cmpsb
adc
mov
or
jno
call
jg
lods
fisubrl
push
pop
xchg
xor
xchg
scas
sub
jae
jg
mov
add
into
and
loope
mov
cld
inc
inc
push
and
dec
inc
and
stos
int
hlt
mov
in
out
mov
outsb
or
fiaddl
and
decl
mov
aaa
mov
mov
ljmp
in
push
nop
push
and
incl
mov
stc
pop
adc
jns
xor
sbb
addb
lcall
xchg
out
add
cmpsb
inc
lds
call
push
ljmp
bswap
popa
jmp
scas
mov
sub
lea
mov
and
push
mov
xchg
popa
cmpsb
sbb
imul
orb
xchg
mov
call
push
pop
push
sarl
jo
push
nop
fsts
lret
insb
xchg
cmp
add
cmpsl
add
fcmovb
mov
stc
pop
mov
push
mov
jg
pushl
mov
xor
in
lret
push
fildl
mov
ds
mov
dec
cmp
jmp
pushl
dec
xorb
pop
lahf
loope
call
aam
insl
or
pop
or
decl
popa
je
push
loope
mov
xor
lock
mov
test
out
inc
mov
or
addr16
in
das
cli
decl
pop
pop
push
cmc
xchg
fsubl
insl
hlt
test
sbb
incl
cld
ljmp
jno
xchg
sbb
mov
ss
aas
cmp
int3
fsubl
cs
jo
stc
sbb
add
hlt
and
mov
inc
outsb
leave
mov
or
inc
rclb
loope
add
fbstp
mov
rolb
inc
and
jecxz
mov
subl
cmp
push
imull
jne
sub
dec
imul
mov
add
call
add
mov
add
push
inc
mov
xor
jecxz
pop
add
shrl
cmp
and
pop
or
rcrb
adc
mov
xor
mov
mov
adc
pop
sub
ljmp
aaa
inc
ror
xor
jae
and
repz
rorb
stc
and
mov
add
mov
aaa
lock
psrld
mov
add
pop
ret
add
cmp
or
mov
push
mov
and
sub
hlt
jmp
movsb
cmpsl
adc
cmp
fadd
stos
and
stos
inc
call
fcos
mov
mov
or
cltd
and
inc
or
xchg
sarb
sahf
mov
rcll
inc
nop
sbb
xor
int3
mov
mov
jl
or
fidivl
lea
incl
mov
mov
sbb
sbb
sub
mov
mov
push
cli
or
add
daa
jo
push
addl
rcrl
ret
or
nop
mov
cmp
mov
mov
jmp
jae
add
clc
inc
or
mov
push
mov
cltd
or
mov
add
call
mov
and
or
out
or
stos
push
dec
ljmp
ret
pop
cmpsb
mov
mov
or
out
ss
add
subb
push
ljmp
mov
cmpb
push
scas
xchg
xor
es
jne
mov
mov
xchg
cli
mov
xor
mov
popf
add
jns
mov
mov
incl
xorl
add
das
lods
rdtsc
xor
insb
mov
mov
inc
fisttpll
cwtl
decb
pop
imul
mov
inc
pop
dec
jmp
sbb
mov
dec
add
decl
dec
cmp
cwtl
daa
jnp
add
lahf
stos
cs
incl
std
mov
pop
andl
nop
mov
adc
lock
cmp
fcomip
jl
sbb
fcmovne
push
pusha
mov
psrlw
rorl
enter
sbb
in
cmpb
mov
pop
inc
outsb
movsl
pop
sbb
jmp
jp
mov
mov
dec
cmp
dec
fmuls
sahf
cmp
movsl
push
rolb
or
add
sbb
pushf
jbe
adc
push
ror
jnp
sbb
les
dec
mov
add
pushl
in
mov
sbb
enter
fcomps
and
xor
jg
sbb
push
test
sahf
fnstcw
dec
sub
cmpsb
in
mov
js
stos
sbb
cmc
push
mov
cltd
int3
sbb
dec
xor
mov
xor
mov
mov
addb
insb
push
add
xor
nop
mov
inc
mov
push
scas
dec
and
ljmp
rorb
mov
scas
sub
sbb
sbb
cld
in
test
lret
loop
cmp
inc
cmp
aaa
out
mov
pushl
lods
add
in
lea
mov
daa
jge
jl
incl
mov
test
or
std
mov
mov
add
das
clc
incl
test
movl
pushf
cld
lret
sub
adc
shr
lahf
cmp
movsb
sbb
sub
in
mov
inc
js
je
mov
clc
mov
dec
imul
ljmp
out
cmp
push
call
dec
pop
es
inc
and
jg
decl
rcl
cmp
dec
push
pop
adc
roll
rcl
inc
inc
ja
sbb
mov
loope
pop
mov
xor
jg
stos
in
mov
clc
incl
adc
or
mov
pop
xor
add
out
stos
xchg
ljmp
stos
into
or
adc
or
shrl
xor
aaa
jne
inc
dec
push
or
sbb
sub
out
lds
cwtl
mov
jp
dec
cmp
mov
subb
fistpll
dec
or
mov
loopne
pop
mov
add
add
lahf
cmp
ja
out
mov
cmpsb
or
ret
adc
ret
hlt
iret
adcb
or
outsl
or
jle
add
sub
iret
les
ss
jmp
push
pop
in
mov
enter
or
rorb
cli
popa
int
decl
mov
and
push
stos
mov
inc
loop
inc
or
add
incl
mov
and
xor
lret
movsl
jl
dec
adc
rcl
mov
sbb
data16
mov
clc
inc
out
int3
push
pop
jb
cmpsb
icebp
mov
pushf
leave
lret
imul
incl
mov
dec
enter
push
mov
in
lds
xchg
cmp
lds
rcll
pop
inc
xchg
fdiv
push
mov
sub
jl
mov
aad
aaa
bnd
into
sub
cmp
cmp
cld
xor
repnz
incl
xlat
jbe
lea
jl
fcmove
xor
and
orl
mov
mov
fnsave
in
jge
xchg
cltd
sub
mov
cmp
nop
clc
or
cld
rcll
sub
sub
shlb
mov
repnz
add
mov
lods
jg
insb
in
add
xor
das
add
push
sub
xor
cwtl
mov
clc
jg
sarb
pusha
test
jo
fidivs
ja
pop
ret
decb
leave
cli
pop
mov
adc
mov
or
fsts
inc
imul
pop
or
popa
cld
pop
cmpsb
aad
adc
xorb
jg
add
sbb
xchg
xor
aad
aas
cmp
add
pop
xor
dec
cmp
lcall
stos
mov
cmp
leave
push
sub
jg
sub
ficoml
sub
or
ret
cli
insl
lds
cs
and
mov
inc
add
add
mov
sbb
mov
cltd
mov
decl
fadds
lds
pop
add
das
or
inc
cmp
test
adc
push
ret
and
in
xchg
cmc
xchg
ljmp
shlb
cmp
mov
sub
in
push
and
ret
stos
add
call
jb
dec
out
adc
dec
jp
mov
call
das
enter
lcall
into
inc
nop
sub
pushl
mov
and
and
mov
fstpt
jo
and
shll
add
dec
fimuls
mov
push
lcall
jge
scas
xchg
inc
inc
jp
pop
leave
push
pop
loope
jp
pop
ljmp
sahf
mov
mov
test
lds
and
sbb
popa
push
and
add
ret
mov
push
pushf
push
mov
mov
std
push
or
jg
imul
in
or
cmc
adc
mov
mov
lea
std
ljmp
mov
aaa
adc
ds
jle
arpl
inc
ja
sarb
pop
sub
dec
xchg
adc
in
xor
mov
or
jecxz
mov
lret
adc
sbb
push
xchg
xchg
xchg
mov
jbe
add
clc
pop
je
call
shlb
in
mov
dec
xor
jo
sbb
or
adc
xorl
add
stos
add
jg
enter
adc
movsl
int
xor
cmp
call
test
les
nop
jnp
test
push
pop
xor
and
jmp
addl
xor
or
sahf
clc
or
jg
mov
add
cmpl
cmp
push
movsl
push
inc
push
mov
arpl
lods
loope
or
shlb
jmp
sub
jo
idiv
jg
or
push
insl
jno
fstpt
mov
in
into
ror
fiadds
jg
loope
xor
push
push
dec
out
mov
dec
call
sbb
mov
sub
cmpsb
lea
jne
insl
or
call
pop
add
fadds
adc
pop
call
cmp
pop
sbb
adc
mov
loopne
movsb
rcrl
jne
mov
adc
stc
dec
push
dec
mov
push
mov
cmc
cli
xchg
popl
pop
push
lcall
pop
mov
sbb
flds
inc
fstl
out
mov
push
pop
push
sub
mov
pop
mov
jl
insb
jb
sbb
ljmp
and
inc
out
sbb
shl
lock
mov
jo
fdivrl
sbb
gs
inc
test
ljmp
sbbl
and
flds
jle
push
daa
clc
fistps
or
adc
rclb
cmp
xchg
xlat
sub
dec
movb
clc
mov
lods
fucom
or
add
sbb
fadds
xchg
pushl
pop
out
out
mov
push
cs
stc
cmp
pusha
ljmp
mov
insb
shll
pop
pop
hlt
jbe
push
hlt
push
push
lret
push
jnp
movsb
mov
inc
jb
push
incl
jo
enter
ljmp
outsl
imul
xor
xor
icebp
cmpsb
sub
orl
loopne
sub
inc
ss
mov
pop
filds
jg
and
cltd
push
mov
or
rcll
inc
mov
cmpsb
and
popa
dec
inc
jg
repz
and
add
test
mov
adc
xchg
inc
sti
adc
popf
lahf
mov
pop
std
out
rclb
and
adcb
incl
mov
jne
mov
mov
incl
pusha
in
fbstp
imul
or
xchg
stos
cmc
rcrl
insl
push
fcomip
lcall
loope
add
xchg
outsb
dec
ja
push
xchg
fildl
fstpt
test
cmp
xor
cli
mov
fdivr
pop
icebp
jg
je
mov
shr
xchg
push
aam
lds
push
movsb
lret
mov
jmp
push
lahf
mov
pop
and
out
push
loope
ss
mov
fildll
jecxz
sahf
mov
or
mov
fstl
hlt
ljmp
sbb
insl
fs
pop
xor
xchg
call
mov
fisubrl
jle
jg
mov
lret
inc
outsb
or
mov
mov
enter
ljmp
pop
stc
sbb
inc
xchg
push
pop
jge
push
test
cmp
ret
pop
clc
decl
or
mov
outsb
dec
aas
sahf
bound
sbb
or
lret
and
out
call
inc
sub
sbb
xor
add
js
push
out
inc
outsl
jnp
sarl
cli
out
int
cwtl
add
cmp
cs
sti
jmp
cmpsl
lea
inc
cmpsb
inc
insl
add
movb
jne
adc
cwtl
inc
mov
cs
jo
mov
cwtl
call
loop
mov
es
sub
adc
mov
repnz
mov
push
lcall
jg
sub
and
xchg
sbb
xor
xchg
shlb
test
dec
imul
push
and
test
pop
mov
and
dec
out
mov
xor
cmp
les
lcall
fdivp
jo
push
out
inc
pop
and
enter
imul
mov
cmpb
decl
fwait
push
insl
loop
sub
and
mov
jns
cmp
inc
pop
pushf
imul
call
ss
ficoml
arpl
cmpb
inc
mov
movsb
inc
fwait
push
sar
lcall
loope
jbe
fimull
add
loop
pushf
jb
adc
lock
pop
xchg
jmp
ja
dec
or
mov
cmp
call
mov
fadd
mov
js
imul
imul
roll
sbb
and
cmpsl
inc
sbb
and
js
dec
icebp
test
adc
lcall
push
pop
mov
filds
outsl
lcall
or
icebp
push
cmp
in
mov
pop
shl
incl
std
je
jae
sub
pop
cmp
mov
mov
xchg
inc
shrl
outsb
inc
fs
and
inc
push
lds
sbbl
and
aam
mov
push
xchg
pop
sub
and
push
pop
stc
push
sbb
pusha
fstpt
push
clc
jg
cltd
xchg
xchg
inc
jbe
fisubs
lds
popf
lds
cwtl
imul
popf
inc
jns
sbb
incl
dec
jne
fsts
fstps
pop
imul
mov
or
add
dec
jl
fisttps
inc
xchg
lret
inc
adc
out
stos
scas
stos
pop
call
fidivl
push
aad
jle
icebp
jecxz
ds
sub
inc
sub
cmpsb
dec
cmpsb
out
add
jae
pop
out
adc
sub
or
clc
stc
out
sbb
fsts
mov
push
pusha
orb
test
and
fsubrs
call
adc
cmpsb
subl
pop
xchg
xorl
mov
mov
xchg
stos
or
mov
jb
loopne
ds
addr16
lcall
lea
push
push
cbtw
push
pop
lcall
cwtl
jg
mov
pop
xchg
sub
sbb
dec
sahf
hlt
fisttpl
test
shlb
mov
test
nop
ss
and
dec
rcl
call
jbe
ror
or
pop
cmpsb
jl
push
inc
jp
cmp
stos
xor
xlat
push
out
xchg
test
popf
lods
aam
fcoms
jmp
jge
pop
sahf
or
adc
pop
cmpsl
je
sub
sarb
xchg
pop
imul
pop
sar
fdecstp
mov
aad
jle
sbb
outsb
jmp
repz
sbb
loope
ljmp
movsb
outsl
xchg
stos
cwtl
jbe
and
int3
out
pop
sub
mov
jb
jmp
lock
push
mov
mov
push
inc
push
addr16
ds
cld
sub
call
inc
cltd
jae
xor
lods
xchg
neg
loope
xor
decl
int
jmp
out
mov
sbb
xchg
xchg
mov
call
sbb
mov
lds
dec
cmc
jecxz
dec
cmp
cmp
sahf
xchg
popf
test
test
clc
cmpsb
bound
in
in
and
jmp
jns
out
push
repnz
aam
jp
cwtl
sti
in
add
lcall
mov
mov
or
ljmp
lods
test
es
les
lea
push
mov
jae
inc
cmp
jbe
adc
xor
mov
pusha
mulb
inc
mov
fstpt
divb
std
inc
filds
aam
jmp
pop
or
jg
les
fildl
jns
orl
jnp
cmp
lods
and
ja
mov
movsb
jnp
les
jg
mov
fnsave
inc
ss
movl
jg
incl
orb
mov
dec
adc
or
push
jmp
clc
test
ficomps
test
jl
dec
or
jmp
or
mov
sbb
adc
mov
pushf
jg
push
jle
mov
add
inc
add
xchg
jecxz
lcall
sbb
movsl
jb
push
or
sbb
into
jns
adc
js
push
mov
dec
inc
clc
jge
call
sbb
roll
repz
dec
xchg
push
sbb
punpckldq
mov
xlat
inc
stos
jl
sub
ljmp
or
shlb
mov
sbb
push
scas
mov
mov
imul
outsl
jl
rcll
push
imul
fisttps
les
str
dec
pop
shrl
inc
lret
in
movsb
mov
adc
incl
lcall
in
outsb
sbb
adc
ja
jg
and
dec
add
or
inc
pop
inc
add
repnz
sub
ss
decl
cmp
and
ss
lods
sbb
cmpsb
dec
pop
aad
lods
jbe
xchg
adc
mov
and
outsb
aas
icebp
repnz
cmp
xchg
int3
cs
mov
pushl
sahf
std
popa
int
adc
sub
adc
scas
xchg
decl
push
cmp
push
xchg
jo
jecxz
pop
sbb
dec
or
adc
xchg
or
cmp
and
jmp
mov
and
in
lcall
pop
xchg
pop
in
stc
dec
mov
push
loop
fsubrs
faddl
scas
in
jg
aas
arpl
out
scas
mov
cmp
lods
cmpsb
mov
xchg
aad
add
out
xor
xchg
ds
lret
call
push
adc
or
scas
cld
jge
icebp
mov
imul
imul
and
cmc
stos
aas
pushl
pop
or
xor
mov
sbb
add
jmp
or
test
sarb
add
fwait
incl
fisttpll
loop
adc
out
and
jne
mul
push
dec
pop
mov
daa
cmp
aaa
rol
pop
sub
fdivl
sbb
rcrl
incl
sub
pop
inc
div
cmpsb
or
pop
sub
mov
inc
push
mov
lcall
test
or
inc
imul
dec
add
dec
test
adc
xchg
test
shlb
or
movsb
fisubs
pop
outsb
call
and
jp
xor
orl
jle
xchg
cmp
add
jb
mov
dec
mov
popf
jne
fwait
lcall
mov
cld
out
xchg
adc
jno
cwtl
push
mov
in
lcall
pushw
dec
add
cli
sub
fcmovnbe
push
mov
fs
test
decl
mov
sti
cmpsl
push
inc
icebp
dec
push
lods
mov
gs
and
fisttps
scas
jno
dec
insl
sti
movsl
in
mov
cmp
stos
stc
stc
addr16
fsubp
shlb
or
mov
ljmp
jno
ja
xchg
and
add
mov
fucom
vpshuflw
out
xchg
cmp
cmc
or
clc
iret
mov
lea
lcall
mov
icebp
push
test
cld
ljmp
cmp
sbb
mov
pop
inc
xor
lret
jg
bound
insb
dec
cmp
leave
and
pushl
ljmp
sbb
jecxz
xchg
mov
sbb
repnz
xchg
lret
mov
mov
ljmp
in
cmp
jno
dec
divb
aas
out
mov
hlt
sub
ret
std
cmp
push
pop
ror
jmp
cmp
cltd
ja
pop
rorl
and
sub
rclb
pop
fcoml
icebp
pop
add
scas
push
xchg
mov
mov
test
xor
shr
mov
sbb
push
jle
stc
js
mov
cld
outsl
movsb
int3
iret
push
jns
lret
daa
cmpb
aad
push
ja
fildl
mov
jns
lret
cmp
cmp
xchg
jns
jle
aaa
ljmp
push
xchg
arpl
jecxz
and
pushl
jo
inc
dec
fdiv
sbb
cmp
ror
inc
xchg
cmpl
lahf
lahf
int3
xchg
pop
xor
daa
call
jmp
or
sbb
mov
std
adc
nop
mov
jg
push
xchg
pop
push
cltd
rcrl
fucom
in
and
add
lcall
out
dec
mov
pop
insl
loope
push
xchg
xchg
add
sub
lods
mov
ds
dec
leave
aam
xor
clc
aam
adc
xor
aam
mov
int
push
mov
dec
and
push
shlb
push
xor
pop
loopne
loopne
cwtl
and
adc
dec
sub
and
pop
add
xchg
pop
xchg
dec
add
sub
fsts
lret
or
push
jne
fisubrs
mov
push
jns
mov
scas
add
xor
mov
mov
inc
pop
and
jle
dec
lcall
enter
mov
or
mov
adc
test
mov
decl
cmpsb
jge
jmp
adc
movsb
lcall
loope
cmp
leave
sbb
testb
inc
mov
add
fmul
fmuls
fcompl
sbb
pushl
pop
in
adc
inc
insl
mov
lret
mov
mov
call
jle
fnstsw
xchg
push
in
mov
pusha
xchg
mov
sbb
xlat
dec
jno
add
incl
pop
jp
adc
xchg
mov
dec
insl
mov
mov
call
hlt
aas
sahf
xlat
mov
sbb
cmpsb
or
jmp
imul
js
sbb
leave
arpl
rorb
inc
dec
loopne
push
mov
call
loopne
adc
mov
add
data16
sbb
rcrb
mov
mov
clc
enter
and
mov
lret
rcrb
in
ljmp
sub
fiaddl
fldenv
push
sbb
lds
fstps
sub
adc
fmulp
imul
scas
mov
hlt
pop
adc
mov
adc
fsubl
lea
loopne
idiv
popa
stc
dec
pop
sbb
mov
pushf
out
mov
arpl
adc
mov
inc
cmp
and
ds
jae
inc
pop
sbb
lock
shl
sahf
mov
mov
inc
clc
inc
inc
push
ret
sbb
pop
ret
movsl
adc
push
mov
inc
push
rcrl
or
out
clc
jmp
test
in
xlat
push
aad
push
nop
pop
in
jl
pop
or
mov
jmp
dec
fmull
fisttpl
add
lahf
int
arpl
pushl
jl
mov
into
cmpsb
mov
pop
xor
xchg
cwtl
xchg
or
nop
xchg
mov
jp
inc
xchg
mov
and
xor
inc
pop
lahf
add
mov
pop
cmp
lcall
cltd
adc
adc
adc
je
push
loope
movsl
cmpsl
test
add
xor
push
scas
incl
sub
les
jae
aad
xor
cmp
jmp
loop
lods
mov
sub
push
inc
test
rorb
dec
and
lcall
aam
mov
inc
or
inc
cmpb
pop
add
jo
popa
mov
push
popf
lock
sbb
inc
sub
incl
pop
sub
mov
xlat
sbb
lods
and
shrb
hlt
jmp
inc
stc
pusha
xor
mov
sbb
imul
pop
cmpsl
cmc
loopne
mov
jb
dec
jne
loopne
fst
mov
xchg
gs
cmpsb
fcomip
jmp
sub
and
and
adc
or
out
mov
cmp
sahf
dec
mov
pop
jmp
loop
mov
loop
mov
mov
jg
incl
test
xchg
lcall
int
sub
les
test
mov
dec
inc
jbe
xlat
jne
push
popf
pop
jmp
pop
push
int
enter
shrb
cli
shlb
push
sub
pop
cld
std
shll
sbb
int
into
and
inc
jl
gs
jb
mov
pushl
fwait
hlt
xor
push
xchg
int3
insb
jmp
adc
sti
jge
mov
xchg
loopne
incl
icebp
lea
sub
sbb
dec
lea
add
mov
mov
rcrl
sbb
inc
push
stos
hlt
out
pop
sub
pop
push
lods
add
xor
or
sbb
push
or
push
pop
std
push
stos
mov
pop
add
inc
push
arpl
pop
inc
mov
push
cli
or
pop
fisubl
out
test
sahf
movsb
push
lds
adc
mov
jmp
test
pop
dec
xchg
clc
pop
clc
insb
xchg
inc
orb
popa
stos
lcall
lcall
xchg
scas
sub
push
gs
fbld
cmpsl
daa
mov
or
cli
xchg
stos
popf
mov
cmpsb
jmp
scas
inc
call
and
mov
sub
sbb
frstor
loop
adc
adcl
mov
lock
jbe
adc
enter
loop
pop
movsl
adcb
insb
in
mov
ror
dec
inc
stos
push
sub
dec
lods
xchg
lcall
out
pop
rolb
mov
adc
and
inc
pop
addr16
dec
inc
xchg
movsb
es
lcall
sbb
popa
pop
dec
scas
out
mov
ficompl
dec
mov
icebp
mulb
inc
vmovsd
dec
into
int
sar
movsb
mov
cmp
insb
sub
inc
popf
and
mov
cli
pop
test
inc
dec
cmp
out
push
pop
mov
xchg
add
push
lahf
aad
ljmp
call
lods
out
mov
mov
imul
inc
inc
dec
je
popa
or
ljmp
add
and
sbb
push
cmp
or
pop
mov
mov
in
dec
addl
call
sub
mov
int
jp
out
cs
stc
dec
movsl
push
rcll
mov
sbb
in
decl
jo
in
add
mov
dec
jle
inc
mov
adc
icebp
adc
jno
cmp
add
jg
clc
mov
adc
lcall
mov
pushl
ja
adc
je
lret
bswap
shlb
sbb
sbb
xchg
dec
and
or
jp
mov
pop
adc
mov
cmp
pop
out
repnz
ljmp
jmp
scas
sub
in
mov
jb
fldenv
lcall
out
rcrl
mov
hlt
jmp
or
dec
push
xlat
sub
sbb
pop
adc
inc
insl
push
mov
into
cmp
xchg
mov
push
and
icebp
lods
pushf
jno
xchg
mov
lahf
jno
or
sahf
add
imull
sub
add
fstl
push
adc
das
mov
lahf
xorb
push
or
call
xor
adc
pop
mov
xor
mov
mov
push
jno
clc
xor
outsl
mov
xchg
xor
repz
adc
add
out
cmp
das
ficoml
repz
divl
rolb
cs
or
inc
iret
lea
mov
lds
stos
stc
hlt
cmp
cmp
pushl
stc
mov
add
sbb
ret
xor
ja
in
push
jns
xchg
sub
sarb
imul
stc
lcall
dec
dec
ret
loopne
cmpsl
push
or
je
add
pop
out
cmp
jg
inc
jae
xor
jle
repz
mov
iret
hlt
adc
mov
xchg
repz
aaa
mov
sub
xor
repz
clc
sub
xor
push
addr16
sbb
xor
aaa
cmc
push
inc
cmp
mov
ljmp
xor
add
xor
jae
repz
pushl
jmp
test
pop
xlat
xor
pop
scas
xchg
adc
pop
add
xchg
cli
incl
jge
jge
jmp
mov
sbb
jmp
outsl
mov
add
mov
push
add
imull
ss
xlat
xchg
mov
fbld
xchg
jp
stos
popa
and
jg
lahf
cmp
imul
mov
hlt
imul
insb
sti
mov
cld
mov
inc
pop
outsb
pop
icebp
outsb
repz
neg
lock
ljmp
xor
outsb
adc
xor
cmc
mov
repz
pcmpeqw
aaa
aaa
push
adc
repz
jne
dec
mov
add
jae
adc
jne
icebp
ds
cmp
adc
rcrl
pop
scas
mov
arpl
pop
lods
pop
aaa
sbb
xlat
cmc
push
pop
movsb
cmc
das
testb
repz
ljmp
clc
hlt
pop
cmpsb
push
sbb
in
pop
inc
inc
mov
lock
popa
ja
sub
dec
lods
cmc
ficompl
jp
xchg
push
xchg
loopne
call
xor
hlt
jns
mov
pop
mov
and
mov
xchg
mov
inc
mov
pop
inc
pushf
pop
sub
jge
js
or
pop
sti
cmpsb
lret
jbe
imul
adc
pushl
add
repz
insl
sar
push
xor
idivl
aas
fwait
mov
adc
xor
cmc
call
rcrb
or
pop
jno
and
xchg
push
call
cmp
xchg
mov
hlt
sbb
mov
xor
icebp
mov
mov
adc
jg
cmp
sbb
adc
addl
sub
popf
xchg
int
push
mov
or
in
ljmp
xchg
mov
jecxz
sbb
sbb
decl
push
dec
jae
cmp
rorb
mov
push
mov
insb
dec
mov
pop
mov
loope
call
mov
dec
push
stos
js
dec
scas
out
xor
cmp
adc
or
jecxz
xchg
fstpt
push
xchg
incl
adc
mov
lahf
add
aaa
js
jns
aas
cmp
mov
dec
mov
sub
pushf
add
mov
outsb
call
sub
mov
stos
pop
sti
stc
jecxz
adcb
mov
mov
push
int3
adc
jle,pn
test
sbb
mov
add
cmpsb
inc
mov
pop
jbe
mov
xchg
mov
cmpsl
stos
cli
cmp
push
adcl
mov
iret
ficompl
decl
popf
mov
cmp
pop
lods
dec
hlt
mov
cltd
clc
xorb
cld
arpl
jp
rolb
jmp
cmp
out
mov
pop
stc
mov
aaa
pop
mov
ja
pushl
adc
idivl
cmp
jg
lcall
mov
decl
adc
aas
adc
jp
cmp
jns
jg
mov
bound
mov
lods
and
or
leave
and
in
mov
ret
and
pop
adc
popl
push
outsb
lods
pop
sbb
and
adc
call
pop
dec
movsl
stc
sub
stos
and
cld
push
test
scas
mov
add
mov
adc
mov
stc
int3
adc
mov
lcall
mov
cwtl
das
cmp
mov
pop
aas
sar
std
mov
sti
xchg
lret
cmp
mov
xlat
cmp
jns
dec
mov
mov
stos
cmp
out
sbb
pop
ss
mov
std
cmp
popf
lret
aas
lretw
jns
xlat
mov
cmp
xchg
add
inc
cmp
jmp
and
mov
pop
xor
adc
ss
cwtl
xchg
and
adc
jle
cmp
dec
xchg
and
in
repnz
cs
mov
dec
fwait
aaa
imul
xor
decl
xor
test
out
mov
sbb
inc
sub
mov
ja
decl
inc
imul
xchg
pop
sbb
movl
sub
test
mov
jg
gs
ja
sbb
mulb
xchg
out
stos
push
in
pusha
ret
xchg
dec
xchg
lods
incl
push
and
mov
pushf
cwtl
imul
pop
ss
jg
test
sub
bound
cmp
xor
xor
xor
dec
push
addl
std
fidivl
in
into
mov
jecxz
std
jp
call
push
push
fildl
and
sub
mov
call
cwtl
pop
cmp
decl
xor
mov
pop
insl
add
repz
add
cltd
xor
lock
mov
fmul
jno
scas
push
fdivl
insl
sarb
or
cmp
call
sub
add
lcall
and
fwait
push
mov
jle
push
inc
or
jmp
sub
test
cmpsb
sbb
ret
fcomip
inc
stos
nop
push
jno
mov
xchg
mov
pushl
mov
xorl
xor
mov
mov
jg
and
sar
dec
xor
leave
repnz
dec
and
fs
inc
outsb
jp
and
ss
dec
cld
jg
lock
mov
test
dec
mov
jo
mov
cmp
and
jg
mov
push
std
push
push
dec
std
jecxz
rcr
or
scas
mov
mov
jg
call
out
jo
iret
aam
push
das
push
sarb
xor
clc
fs
sar
push
adc
aaa
call
cmp
aaa
mov
pop
bound
lock
cmpsb
pop
push
cmp
inc
xchg
mov
es
mov
inc
push
sub
push
jno
movsb
cwtl
pop
jbe
mov
test
je
mov
dec
push
or
mov
xchg
je
jl
adc
mov
nop
leave
mov
push
outsb
jle
lcall
xor
and
mov
lcall
mov
insb
push
mov
ss
rcrl
in
xchg
xlat
dec
insl
fsts
js
std
lcall
iret
dec
inc
std
xchg
xor
rcl
cmp
into
xchg
es
mov
jbe
xchg
daa
push
rolb
mov
out
jl
cltd
cmp
mov
aas
dec
xchg
fisttpl
dec
popa
lret
sbb
jbe
pop
das
test
mov
ret
mov
sub
addl
les
sar
filds
xchg
inc
sbb
add
push
sbb
fnstcw
xchg
pop
inc
mov
orl
fidivs
mov
mov
addr16
and
bound
call
ror
mov
rcrl
repnz
jl
pop
jb
shl
fimull
in
lcall
jnp
scas
cmp
pop
lea
fisttps
mov
pop
mov
loopne
pop
out
dec
in
ficoml
je
mov
decl
rolb
pmaddwd
arpl
push
fcmovbe
stos
fbld
out
mov
dec
mov
mov
pop
push
in
push
adc
add
jge
pushl
sub
pop
mov
xor
loopne
adc
mov
test
mov
adc
incl
mov
ja
enter
int
adc
add
or
jmp
mov
add
aad
add
add
jmp
and
mov
cmp
decl
or
mov
add
mov
into
pop
mov
call
mov
data16
in
or
mov
dec
dec
mov
xor
inc
xchg
mov
jle
incl
mov
ficoml
mov
cmp
fistps
lahf
mov
push
gs
ja
out
pushf
push
jmp
and
lods
daa
lahf
cmc
or
arpl
push
xor
mov
dec
push
push
cli
push
fxch
mov
or
insl
pop
sbbb
mov
insl
inc
andb
sub
or
cmp
sbb
sub
cld
loop
mov
fdivr
jg
jmp
cmpsb
nop
imul
xor
mov
push
push
ljmp
lret
jnp
fcomps
movsb
movsl
add
pop
mov
adc
dec
ret
cli
pushl
fists
ljmp
jae
or
je
ja
pushl
pop
addl
inc
scas
or
xchg
or
add
test
or
add
adc
push
daa
pop
pop
rcrb
daa
mov
imul
lcall
loopne
mov
out
push
xor
dec
pusha
dec
and
mov
es
sub
lret
loop
push
push
xchg
xor
mov
repnz
cmp
dec
shlb
xor
movsl
push
dec
and
mov
repz
ror
scas
les
and
xor
decl
jns
jp
push
jns
aam
push
sub
mov
loope
dec
push
aaa
sub
lea
or
xor
jecxz
push
ss
int3
pop
aam
mov
scas
push
shl
stc
imul
mov
add
jno
pop
and
rcl
mov
push
ror
mov
sbb
mov
imul
lcall
lcall
lahf
push
lret
mov
decb
lds
and
ror
mov
or
outsl
xchg
push
and
filds
cmc
hlt
daa
mov
out
jne
lcall
rorl
mov
mov
repnz
outsb
pusha
cltd
push
pop
mov
lret
std
sbbl
mov
jg,pn
ljmp
movsb
and
or
mov
mov
dec
repz
mov
aaa
sub
cmc
arpl
fs
sbbb
pushl
scas
xchg
cmpsb
insb
iret
mov
stos
aad
idivb
ss
popa
sub
es
mov
std
jmp
push
popf
adc
adc
sbb
int3
jg
sub
aam
mov
mov
inc
adc
out
mov
jge
push
push
jge
aam
and
testl
jmp
inc
push
fcoml
jmp
mov
test
push
movsl
push
insb
fldenv
fwait
add
mov
pop
mov
cmpsl
outsb
pop
int3
inc
jmp
outsb
cltd
jns
mov
mov
imul
or
int
xchg
jnp
xor
inc
xchg
sub
test
lret
out
ja
ljmp
clc
mov
in
cmpsl
fstpl
rcrb
add
jecxz
jns
jg
lods
mov
sbb
pop
add
dec
cmpsb
mov
xor
cli
stc
push
addl
repz
jecxz
cmpsl
pop
ss
decl
imul
stos
fildl
push
push
jo
sahf
mov
repnz
inc
lcall
test
shlb
pop
test
mov
ds
inc
sbb
mov
adc
sub
das
test
fadds
mov
xor
shl
scas
push
imul
popf
push
inc
mov
fsubs
popa
adcb
nop
aad
test
add
ds
add
xor
lret
jg
shrl
jmp
andl
incl
test
subb
jmp
pop
sub
stc
ljmp
cwtl
mov
rorb
mov
leave
or
push
out
mov
popa
push
movsl
shl
scas
push
fucomi
adc
cwtl
out
inc
push
adc
mov
pushf
push
pop
mul
scas
adc
jg
xchg
fildll
fldcw
jmp
test
xchg
fs
add
cli
outsb
push
cmpsb
xchg
test
push
mov
inc
loopne
add
push
pop
xor
cmp
test
cmpsb
out
mov
or
fadds
xchg
aaa
pop
cli
cmpsl
mov
pusha
or
sub
sbb
jmp
or
pop
mov
into
add
mov
lcall
add
mov
push
bound
test
pusha
jmp
and
inc
sub
mov
mov
sub
pop
neg
jnp
cmpsl
inc
lahf
int
loope
mov
pop
xchg
test
fwait
lret
inc
pop
je
std
stos
pop
ret
hlt
cli
incl
push
js
insl
clc
xor
loopne
cli
ljmp
icebp
adcb
and
shll
scas
cli
imul
sarl
xchg
jo
popa
lret
mov
add
dec
sbb
dec
mov
xchg
stos
dec
push
lret
or
js
add
xchg
inc
add
out
lret
inc
call
ja
xchg
je
sub
icebp
shrb
and
incl
ss
icebp
imulb
push
aaa
out
or
mov
scas
xchg
insl
fwait
into
dec
std
outsl
fcomip
or
bound
and
xchg
inc
mov
std
mov
faddl
movsl
mov
aaa
or
add
lcall
add
test
arpl
test
add
or
nop
jns
pushl
and
lods
cmpb
rolb
push
call
cld
add
incl
mov
pop
scas
cmpsl
ljmp
ljmp
out
in
or
dec
std
je
add
outsb
add
out
inc
jmp
push
mov
cmpsb
pusha
mov
addb
add
inc
imul
dec
insl
ss
out
push
add
mov
lea
lret
dec
xchg
enter
mov
outsl
jb
addr16
push
faddl
test
pushf
mov
add
out
in
add
out
mov
mov
add
xchg
mov
pushf
subb
push
imul
popl
shlb
and
lret
or
xor
clc
loopne
shr
sbb
rorb
or
nop
pusha
repz
adc
ljmp
dec
test
cmc
push
dec
sub
arpl
mov
iret
test
sub
decl
add
ss
xor
enter
imul
call
es
mov
lock
cmc
jmp
lock
pop
movsb
imul
stc
jo
daa
fsubs
pop
pop
inc
fildll
xchg
pop
sti
pop
and
and
push
push
loopne
mov
sbb
incl
adc
xor
sub
test
ljmp
ljmp
add
in
xchg
pushf
out
push
cs
add
push
jmp
lds
adc
movsb
cld
out
cld
dec
stc
outsl
std
add
xchg
out
movsb
sub
add
add
inc
xchg
test
icebp
jmp
xchg
movsb
insl
sbb
sbb
shll
call
stos
in
aam
inc
pusha
sub
shll
aaa
movaps
xchg
push
vpshaq
testb
ja
gs
jo
mov
push
inc
mov
and
call
add
and
nop
inc
and
or
push
pushf
and
out
sbb
cmpl
insl
cmp
sbb
inc
dec
repz
dec
das
mov
test
lods
iret
or
adc
insl
dec
stos
movsl
add
or
lcall
mov
sub
out
mov
call
add
sarb
clc
push
push
out
pop
jg
or
hlt
cmp
pop
mov
cli
xchg
sub
loope
jle
clc
cmp
mov
cli
or
gs
or
movsb
sahf
mov
or
lcall
push
mov
xchg
push
xor
lea
add
dec
loope
std
xor
std
xchg
shrl
cmpsb
and
outsl
test
stos
push
decb
subl
mov
xor
and
add
fsubrl
and
mov
mov
out
jb
jg
in
lcall
add
fisubrs
sub
mov
lock
add
cmove
aaa
mov
push
shll
leave
dec
push
add
push
clc
scas
cmc
test
xor
add
test
inc
out
add
movsb
mov
repnz
sar
orb
or
xor
div
mov
pushl
into
and
loope
imul
out
xor
xor
shrb
mov
pop
or
or
in
dec
mov
or
cli
data16
and
outsl
jl
sbb
cwtl
cmc
scas
scas
inc
push
lods
mov
mov
xor
lcall
ss
push
test
inc
aaa
jae
fdivs
icebp
decl
ss
inc
testl
scas
cmp
push
or
cmc
cmp
int
jb
repz
sbb
mov
daa
pusha
mov
pushl
das
out
ljmp
push
hlt
sub
sahf
sub
out
mov
mov
xchg
mov
imul
loope
adc
adc
mov
ljmp
mov
in
js
scas
sub
lcall
and
push
push
test
fdivrl
dec
xor
rcrb
rol
add
lcall
mov
mov
inc
xlat
pusha
push
scas
repz
pushl
cmp
jae
add
push
mov
loope
and
iret
jae
pop
outsl
addb
jecxz
lcall
dec
cmpl
popa
sub
or
popa
mov
mov
dec
inc
push
jmp
sub
xor
push
push
push
cld
incl
arpl
xorb
push
xchg
inc
adc
pop
xchg
jb
adc
pushl
adc
stos
inc
je
adc
scas
das
and
inc
push
cmp
sar
outsl
mov
push
out
aad
lds
aaa
pop
or
xchg
mov
call
add
ret
je
dec
pop
scas
dec
insb
test
mov
add
dec
ljmp
mov
loop
inc
bound
dec
enter
pop
sub
addl
ljmp
dec
mov
dec
adc
daa
mov
jno
pop
bound
pusha
and
clc
xor
push
cwtl
push
imul
jo
sar
ljmp
ret
lds
out
jo
cmc
mov
xor
testb
xchg
decl
inc
sub
rolb
adc
sbbl
xchg
outsw
lret
xchg
sahf
or
incl
sbb
mov
sbbl
xchg
cmpsl
pop
rclb
sub
mov
pop
xor
mulb
mov
and
jbe
pop
adc
or
sar
push
scas
call
outsl
maskmovq
notl
cmc
mov
push
push
lea
pop
js
rolb
mov
cli
ljmp
rorl
xchg
xor
xor
xlat
pop
xchg
je
mov
clc
pop
push
xchg
je
ret
fcomip
repz
scas
inc
lea
pop
sub
xor
mov
ljmp
clc
call
mov
cmpsb
rorb
pop
adc
push
pop
mov
add
inc
out
test
cmovnp
sub
mov
mov
sbb
movsb
push
leave
mov
addr16
clc
pushl
imul
or
les
mov
xor
dec
pop
imul
js
xchg
int
ja
cs
incl
sahf
and
rolb
push
dec
mov
clc
fbld
orb
jne
out
jo
add
in
and
push
mov
outsl
call
inc
mov
lods
dec
inc
push
out
shrb
mov
rclb
fs
dec
lcall
ss
push
push
and
out
add
pushf
pop
xor
xor
int3
dec
cwtl
stos
and
push
jl
sahf
inc
stc
push
in
outsl
mov
cmc
jbe
pusha
and
sub
test
out
mov
pushl
sti
ljmp
xchg
adc
popf
inc
cli
fdivrs
test
mov
mov
add
jne
push
jg
add
dec
inc
mov
out
bound
idivl
cli
inc
arpl
decl
push
mov
push
adcb
xchg
mov
adc
dec
popa
mov
ljmp
or
jp
jmp
or
pop
ret
cmpsl
cli
pushl
jnp
dec
sbbl
lret
cwtl
lock
ror
out
jnp
addr16
xor
gs
aaa
ret
jns
mov
lock
sbbb
sub
jmp
stc
rorb
jbe
ljmp
call
pop
xor
and
jmp
stc
scas
or
or
in
icebp
pop
les
cmp
pop
mov
and
sti
subb
push
cmc
fidivl
in
cmp
shr
and
mov
repnz
mov
sbb
incl
sbb
fsubs
sub
fcomps
xchg
sbbb
cmp
push
jmp
mov
push
cld
mov
in
mov
pop
sbb
cmp
inc
dec
cmp
fdivp
mov
mov
push
push
or
mov
js
testl
cld
and
add
or
cwtl
inc
or
add
push
cmp
jp
jmp
mov
pop
lret
mov
pop
mov
mov
fld
pop
scas
std
sub
test
ret
je
cmp
jno
std
incl
orb
clc
addr16
bound
rcl
rolb
mov
mov
cmp
dec
jno
pop
cld
add
das
add
lcall
push
add
inc
xchg
sub
jb
mov
popf
out
mov
bndldx
push
inc
adc
popa
mov
sarb
mov
xchg
inc
dec
cmp
adc
fnstsw
add
ljmp
ret
xchg
lods
inc
cmp
xor
out
xor
mov
push
mov
lcall
mov
rcr
pop
notb
sub
or
mov
or
dec
ss
ret
xor
dec
mov
or
cmc
mov
inc
mov
or
fistps
addb
add
sbb
scas
pop
jno
inc
lahf
mov
dec
pusha
rorl
inc
mov
ljmp
rclb
insb
insl
adc
add
shll
repz
incl
test
pop
mov
hlt
shlb
divb
fisttps
and
xor
jns
xchg
mov
sbb
adc
test
sub
push
sbb
mov
bound
nop
mov
icebp
xchg
pop
lret
push
fldl
sbb
jecxz
or
incl
lret
xchg
sub
push
out
movsb
xchg
cltd
add
pop
cli
adc
ret
xor
or
mov
sub
jmp
idivb
mov
and
push
mov
call
mov
fchs
stos
adc
mov
mov
lods
scas
mov
ss
ljmp
lcall
xchg
movsl
xchg
inc
sbb
jecxz
cmp
adc
mov
movsb
std
in
fwait
sbb
std
xor
aad
inc
jge
adc
cmc
xchg
push
mov
mov
fcompl
xchg
pop
in
inc
add
nop
icebp
clc
mov
pop
sbb
fsts
ja
xor
add
aaa
mov
push
fstpt
out
mov
fisubs
mov
jnp
popa
cmp
inc
jns
notb
arpl
fidivrl
call
dec
test
jno
test
lcall
mov
sbb
ss
mov
jo
lcall
insl
push
lcall
call
jno
pop
inc
cwtl
popf
mov
shrb
into
adc
sbb
fisttpll
cmp
xor
call
jnp
cmp
dec
mov
dec
add
jo
and
add
sbb
cmp
mov
xchg
sbb
mov
add
mov
arpl
sbb
cld
jmp
dec
enter
test
cs
repnz
xorl
lret
jae
sbb
imul
inc
jg
fwait
add
lcall
cmp
inc
inc
lcall
mov
and
dec
dec
adc
in
push
sub
xlat
push
mov
or
daa
ret
stos
add
lds
xchg
xchg
stos
jmp
pushf
adc
cmp
insb
xchg
fwait
pop
call
das
add
cmc
jnp
inc
fadd
jl
fcomps
das
pop
dec
test
jnp
leave
mov
jne
lcall
or
mov
or
adc
mov
xor
lds
lcall
incl
rolb
addb
adcl
adc
dec
out
add
push
xlat
sti
loop
decl
cli
adc
sahf
mov
es
sub
sub
sahf
jecxz
mov
cmpsl
call
in
sarl
mov
adc
mov
pop
loopne
or
enter
adc
mov
jg
add
adc
adc
xchg
add
add
mov
aad
pusha
test
ljmp
xchg
dec
adc
enter
out
cmpsl
adc
loop
push
inc
inc
mov
jge
or
push
xchg
pop
add
or
and
dec
sub
aam
and
sbb
dec
adc
test
add
fstl
pop
dec
or
push
dec
and
test
lds
sbbl
dec
dec
je
mov
aam
dec
or
add
dec
jg
xchg
push
dec
inc
rorl
cmp
sbb
incl
push
lds
add
idiv
sbb
push
jp
test
pop
out
adc
cmc
xchg
cmp
popa
push
and
call
sbb
test
sub
mov
roll
movsb
popf
jo
add
test
inc
sbb
decl
or
xchg
aas
pop
aam
stos
cmpsb
inc
popf
sbb
mov
ljmp
dec
pop
aas
aad
jnp
adc
push
loope
sbb
add
push
ret
lds
nop
rcr
jo
stos
or
loopne
popf
pop
jnp
sbb
test
incl
pop
add
xlat
popf
xchg
add
cmpsl
test
push
dec
sub
arpl
decl
test
es
mov
cmpsl
mov
jg
loope
mov
and
enter
cmp
or
pop
pop
mov
adc
pop
jge
xorb
add
incl
jae
popf
or
lret
inc
mov
fs
lahf
test
outsl
clc
mov
icebp
or
insb
aam
or
cmp
mov
decl
fimull
push
xchg
or
addl
cltd
add
add
mov
and
jmp
adc
mov
sbb
mov
jg
mov
xchg
mov
fcoml
sti
mov
lock
movsb
add
inc
insb
arpl
dec
sahf
test
sub
fsts
mov
popa
pop
rcr
sbb
pop
aaa
adc
xorl
mov
bound
fistps
sti
sbb
aaa
push
lcall
imul
dec
ljmp
ret
aad
inc
cmp
add
sbb
xchg
rcr
or
decl
aaa
mov
fisubl
mov
cmp
test
ljmp
dec
adc
sbb
and
stc
adc
xchg
push
sub
ret
into
ljmp
inc
lods
adcl
xchg
mov
and
jecxz
cwtl
fsubl
gs
jp
pop
insb
adc
mov
mov
xor
pop
dec
clc
push
dec
test
inc
jle
add
push
dec
add
call
xchg
cltd
hlt
adc
stos
sbb
in
jae
fwait
push
insb
add
adc
xlat
adc
flds
sbb
arpl
nop
daa
adcb
push
pop
pop
mov
das
scas
insl
and
inc
push
ret
xchg
pop
sub
mov
adc
lds
mov
in
test
mov
cmp
loope
inc
cmc
call
mov
pop
es
cltd
movsb
lock
adc
test
cmp
in
mov
mov
cs
clc
and
es
jg
sub
mov
movsb
incl
je
pop
xchg
cmp
adc
call
push
add
jge
shrb
mov
lcall
inc
filds
push
adc
sar
out
mov
shrb
roll
cli
call
jmp
int
mov
push
decb
std
jo
cmp
cmp
into
add
mov
shlb
mov
out
pop
ja
bound
push
inc
int3
popa
and
es
jnp
push
arpl
lock
push
jge
or
jmp
lcall
mov
ret
lcall
int
cmc
ljmp
mov
mov
jb
push
and
cli
xor
add
or
mov
out
inc
cmp
inc
add
mov
loopne
sbb
dec
aam
sar
dec
pop
dec
test
loop
mov
sub
or
adcl
les
or
dec
adc
adc
nop
inc
dec
jb
pop
mov
adc
inc
rorb
icebp
aam
gs
inc
or
decl
sbb
punpcklbw
ljmp
lods
pop
lock
adc
dec
push
xchg
ret
je
ja
inc
sahf
jp
enter
iret
mov
and
jmp
push
push
adc
sub
xchg
movsb
pushl
repz
or
push
pusha
imul
jle
jg
pushl
mov
sbbb
stos
mov
addl
dec
imul
outsl
das
push
cwtl
add
xor
jecxz
sub
push
jns
sbb
daa
sub
call
adc
mov
fxam
cmpsl
push
es
lcall
mov
lret
and
test
shrl
faddl
sbb
int3
dec
xor
xor
inc
cmp
mov
fimuls
insl
stos
and
inc
mov
mov
leave
inc
add
decl
mov
add
mov
mov
add
es
cmpsl
sar
mov
or
and
orb
gs
mov
popa
lret
idiv
lcall
rcll
ss
movsl
mov
xchg
faddp
xor
fmuls
push
mov
cmp
cmp
rorb
inc
sbb
mov
cs
xchg
push
add
dec
movsl
or
sbb
pop
dec
shrb
aam
roll
pop
test
out
mov
fiaddl
jae
push
mov
mov
pop
andl
out
fcomip
incl
xor
mov
in
test
popf
je
outsb
iret
cmpsb
jb
clc
test
decl
inc
std
jb
fwait
imul
cld
xor
mov
mov
pop
mov
hlt
insw
mov
cmpb
lcall
add
cmp
outsl
pop
aam
lcall
mov
loop
mov
setbe
unpcklps
lods
fcmovbe
out
jnp
popl
mov
and
mov
adc
push
or
add
cs
lds
cld
xchg
inc
push
sahf
ret
sbb
lods
ds
imul
mov
add
inc
cltd
mov
jl
lock
jns
imul
add
mov
negb
incl
sbb
test
pop
mov
adc
mov
mov
sbb
jmp
xchg
idivb
popa
jg
outsb
mov
ret
pop
mov
inc
inc
mov
push
shrb
push
fdivrs
mov
hlt
and
xor
mov
lods
subl
jb
mov
iret
mov
jg
jns
fsubrl
xchg
movsb
dec
pop
mov
in
cmpsb
cmp
addr16
inc
cmpb
pop
daa
mov
fwait
les
adc
xor
call
aaa
adcl
lods
sub
pusha
inc
out
and
jnp
mov
lcall
push
or
loope
jle
xor
jae
loopne
ljmp
or
addb
lea
daa
repz
dec
cmpsl
xor
xchg
xor
dec
mov
sub
rolb
cwtl
ror
je
fcomip
js
pop
sbb
or
mov
mov
leave
push
dec
adc
mov
arpl
aad
mov
adc
and
cmp
add
ja
pop
addb
inc
cmp
add
cmpsb
sub
jmp
nop
inc
push
ss
xorb
adc
mov
push
pop
nop
adc
gs
mov
es
inc
and
jne
inc
pop
addr16
jo
call
add
mov
jo
mov
lcall
rorb
xchg
adc
and
jbe
rorb
adc
adc
and
dec
aaa
addr16
dec
in
push
cld
incl
inc
jmp
pop
add
nop
push
lret
push
decl
pop
ljmp
dec
xchg
push
push
addl
xchg
mov
adc
imul
psubusw
mov
pop
adcl
xchg
ret
push
jp
push
sbb
pop
mov
cli
cmp
add
jae
rorl
sbb
jnp
clc
je
incl
adc
pusha
jl
roll
mov
push
shl
sbb
inc
jp
loopne
ficoml
or
pusha
mov
xor
inc
daa
jne
flds
add
outsl
pushl
adc
add
in
dec
mov
sbb
cmp
mov
cmc
shll
cld
aaa
dec
incl
mov
pop
test
cmc
inc
and
xor
adc
push
and
rcll
cmc
or
jmp
dec
nop
pop
imul
xorb
adc
jno
pop
xor
jg
inc
jb
xorb
mov
adc
gs
loope
dec
or
xchg
test
mov
adc
inc
jae
adc
call
adc
inc
adc
sub
fs
adc
sbb
lcall
adc
adc
add
rorb
adc
cltd
and
lcall
fiadds
add
cmpsb
and
adcb
js
pop
sub
in
jg
clc
adc
push
js
mov
sub
sbbl
sbb
sbb
jmp
cmp
mov
imul
push
sbb
fsts
lock
add
call
cmpsb
add
popa
dec
popa
mov
ss
sub
pop
fcoml
lcall
pop
cmp
adc
das
add
xlat
das
sbb
inc
xchg
mov
inc
and
mov
icebp
inc
nop
rcl
jle
adc
mov
sbb
test
cli
inc
pop
xor
inc
xchg
aam
loop
inc
cli
and
cwtl
fs
jle
add
gs
inc
aam
cmp
lcall
jle
gs
dec
push
mov
sub
fsubrs
mov
sar
dec
sbbb
inc
push
push
push
push
pop
pop
pop
pusha
andl
jmp
jne
and
lds
data16
inc
test
pop
jae
sbb
incl
loope
and
push
add
sub
jg
dec
nop
loopne
pop
nop
jae
notb
push
xchg
xchg
ret
aaa
push
dec
push
je
pop
or
and
icebp
adc
mov
xchg
xor
jg
sbb
mov
sbb
cmp
xchg
adc
jg
adc
cltd
push
mov
inc
push
loope
mov
push
cmp
hlt
adc
sub
movsb
pusha
pop
xchg
jmp
dec
adcb
loop
adc
ss
cli
inc
adc
inc
dec
inc
xor
mov
out
add
mov
loope
frstor
mov
add
loope
imul
sbb
hlt
adc
push
mov
rclb
xchg
mov
mov
and
pop
sbb
sbb
add
jmp
pop
js
pushl
into
daa
outsl
in
sbb
pop
push
popf
test
adc
sub
cltd
jmp
call
mov
bound
mov
inc
xor
inc
jmp
lcall
cmp
cmp
sbb
push
enter
jle
hlt
pop
add
sar
lcall
enter
sbb
push
rorl
dec
pop
hlt
mov
mov
adc
sbb
push
xchg
mov
pushl
inc
jb
test
shll
sbb
push
and
inc
push
sub
jg
mov
mov
adc
push
test
push
lods
jae
cltd
andb
outsl
scas
clc
mov
pop
inc
sbb
inc
fstps
cmpsl
out
je
cmp
ljmp
and
pop
xchg
pop
inc
mov
mov
fwait
sub
pushl
movb
mov
mov
pop
cwtl
mov
repz
dec
dec
adc
loope
mov
popa
mov
dec
ljmp
cli
adc
xorps
inc
add
inc
cmp
dec
inc
and
call
incl
daa
push
xchg
and
xor
push
loop
adc
test
popa
mov
mov
fbstp
and
pop
lea
call
lcall
int3
sub
mov
xor
das
dec
add
arpl
push
nop
test
incl
push
sbb
and
popa
dec
aas
popa
popf
inc
pop
out
ficoml
into
je
addr16
or
xchg
lcall
push
xchg
dec
bswap
xor
adc
clc
pop
xchg
mov
test
lock
jg
mov
lcall
push
mov
test
mov
dec
popa
push
repz
imul
or
aad
jne
sub
sub
sar
push
pop
pop
push
addl
ljmp
test
sbbb
mov
lcall
fisubl
mov
mov
mov
jnp
pop
dec
mov
and
cmpsb
lock
inc
fistpl
cmpsl
adc
in
jmp
hlt
hlt
xchg
aad
sbb
sbb
mov
jnp
mov
inc
sub
mov
out
int
mov
xchg
ljmp
inc
push
lods
stc
xor
stos
test
shll
pop
xchg
stos
sbb
inc
cmp
call
xor
cmp
mov
rorl
pop
dec
sti
lock
addl
adc
rol
and
add
jo
pop
xchg
rolb
add
cmp
andb
sbb
mov
aaa
dec
sbb
mov
lcall
pop
and
sub
pop
jo
data16
ss
adc
inc
sbb
add
mov
jns
and
cwtl
enter
ja
cs
jp
iret
push
mov
incl
mov
mov
adc
andb
inc
out
clc
fistpl
xor
idivl
lret
ret
cld
xorl
inc
xor
ljmp
lcall
popa
xchg
mov
mov
push
data16
mov
jmp
test
xor
mov
int
ret
jno
cltd
inc
in
adc
jmp
es
mov
push
sbb
negb
sarl
jbe
mov
nop
push
adc
dec
shll
xchg
mov
push
lea
jo
ljmp
loop
fbstp
pop
xchg
js
mov
push
add
push
test
inc
mov
push
xchg
dec
incb
mov
cmp
adc
sub
fldenv
loop
call
and
and
adc
or
mov
lcall
push
jge
xchg
icebp
mov
loopne
sbb
lret
lret
cltd
dec
test
jle
lcall
outsl
shll
popa
test
jge
addr16
mov
and
mov
insb
jo
inc
mov
les
lods
mov
lcall
bound
and
and
xor
inc
add
and
popf
cli
inc
aad
push
push
mov
sbb
cmp
mov
and
je
or
test
icebp
cmp
pop
jns
dec
or
xchg
hlt
jl
popf
lret
aaa
sti
insb
fsub
ret
mov
add
xchg
adc
add
xchg
lea
or
adc
inc
xchg
jmp
push
lahf
test
adc
adc
pop
loop
enter
sub
sub
sbb
fidivs
incl
mov
mov
pushf
mov
cmp
fadd
mov
xchg
jge
cmp
mov
jg
insl
std
stos
sub
ret
or
dec
pushf
mov
andb
pop
dec
xor
sbb
mov
cld
lcall
fidivrs
jle
les
imul
ljmp
mov
jg
sbb
adc
les
fdivr
dec
lds
mov
xchg
arpl
iret
in
rorb
mov
into
cld
pop
fldcw
mov
test
mov
sbb
inc
sbb
push
xchg
enter
jg
pop
add
jp
loope
leave
cmc
fimull
jecxz
icebp
xor
leave
mov
aad
jb
jge
cmc
sarb
clc
mov
dec
mov
test
sub
adc
jle
sbb
jmp
fidivrs
push
std
push
clc
pushl
lcall
lcall
imul
ror
xor
decl
rolb
jge
int
in
jbe
cld
jge
ja
jmp
add
iret
fcmove
add
into
pop
dec
insb
lret
aam
dec
mov
cmp
xchg
ljmp
push
in
dec
sub
out
stos
or
ljmp
cmp
mov
cltd
repz
mov
dec
jnp
aam
inc
daa
pop
shlb
and
pop
mov
jecxz
sub
lods
sahf
loop
push
lock
js
in
dec
loopne
or
cmc
mov
clc
mov
dec
ljmp
cmpsb
and
sar
jg
adc
mov
mov
outsl
into
or
mov
dec
ds
jae
push
jle
das
inc
int
int3
fisubrs
in
in
divb
stos
ss
xor
pop
fsubrs
sbb
decl
shlb
adc
add
sbb
adc
lods
std
std
nop
cltd
push
lahf
add
jl
out
iret
lcall
dec
and
push
adc
lock
mov
idivl
out
cmp
aas
lods
xor
das
mov
inc
jnp
rol
cmp
fbstp
dec
xchg
std
lret
fisubrl
push
shr
jecxz
outsl
sbb
inc
jnp
mov
mov
jmp
add
jo
enter
mov
cltd
mov
imul
outsl
test
outsl
pop
loop
loopne
jbe
in
daa
mov
push
dec
out
arpl
pop
enter
lcall
call
pop
cmc
lret
push
call
jmp
xor
inc
or
push
sbb
jns
fadd
cs
sub
lcall
out
xlat
pop
fmul
or
into
jbe
xlat
pop
out
out
pop
clc
fs
cmp
icebp
call
das
fisttpll
adc
sahf
fwait
xor
das
dec
sub
mov
push
and
andb
js
jno
or
xor
sub
cli
incl
lret
jecxz
mov
mov
fcompl
add
sar
int3
pop
mov
enter
loope
sbb
fidivrs
pushf
lods
cmp
pop
cmovae
ljmp
int3
mov
adc
pop
dec
out
or
ss
fwait
push
dec
mov
ret
mov
push
fsubrp
das
or
push
clc
call
mov
push
xchg
cmp
out
ret
outsb
test
sub
push
add
cli
jmp
adc
roll
mov
and
sbb
mov
xor
xor
shll
inc
sbb
mov
pop
jg
fsubrl
jno
in
xchg
das
popa
scas
insb
jmp
mov
ret
lcall
cmpsb
rorb
outsl
or
ljmp
hlt
jns
pusha
shll
shr
aam
pop
lods
pusha
popf
pop
adc
mov
cmp
xchg
cmp
mov
int
popf
lcall
xlat
in
pop
sub
in
ja
fidivrs
adc
sbb
push
add
incl
pop
mov
mov
jmp
imul
jge
xchg
lods
shll
cmc
je
orl
jmp
inc
ljmp
sbb
mov
mov
sbbl
pushf
mov
dec
pop
mov
push
dec
call
push
mov
popf
dec
xchg
cmp
cmc
in
incl
arpl
call
jns
test
xchg
jbe
lock
sbbl
es
nop
ds
add
mov
daa
xchg
dec
mov
repnz
add
add
insb
jp
ljmp
xchg
or
and
inc
adc
test
push
es
dec
je
add
inc
adc
push
sub
stos
sbb
call
sub
ljmp
rolb
mov
and
int3
cs
xchg
das
lcall
xor
or
ret
insb
xor
daa
pop
or
xor
fildll
inc
sti
repnz
dec
stos
scas
xchg
fsubrl
jl
mov
call
mov
or
fnstsw
repnz
adc
scas
jg
iret
mov
mov
shl
mov
into
cmp
push
sub
stos
into
shr
cmpb
decl
adc
mov
dec
shr
arpl
lock
dec
rcrl
sarl
test
enter
in
push
cli
movsb
mov
bound
xchg
stos
mov
mov
mov
push
aaa
nop
insb
add
inc
stc
insb
insb
xor
cltd
mov
lcall
or
mov
fnsave
or
xchg
out
dec
fsubs
out
es
jl
stos
fnsave
loop
adc
fadd
repnz
ljmp
lret
mov
jp
scas
sub
out
lcall
je
imul
pop
jmp
adc
lea
call
shl
xchg
pop
jle
sub
pop
dec
or
push
popa
pushf
sub
mov
lcall
jp
hlt
addr16
xor
inc
mov
out
cmp
stos
sub
mov
push
das
clc
jg
mov
push
add
jne
or
bound
dec
cmp
pop
pushl
fcmovbe
mov
aam
sbb
xchg
and
pop
pop
push
fimull
lcall
jp
movsl
imul
inc
dec
les
les
dec
dec
pop
push
inc
cmp
inc
sbb
decl
inc
loope
pop
xchg
xchg
ja
cmp
xor
and
mov
int3
jl
movsb
or
cld
cmp
fimull
jle
lea
in
mov
mov
push
dec
xor
dec
out
xor
jmp
int3
mov
outsb
lea
in
lcall
or
stos
mov
jp
stos
scas
ret
rclb
jnp
shl
jp
je
out
cmp
cmp
leave
inc
sbb
jnp
dec
pop
lods
xchg
jmp
out
rorl
adc
add
jbe
je
lods
add
mov
aas
mov
add
cmpsl
mov
dec
subl
mov
mov
inc
fdivrp
sub
inc
aad
inc
adc
call
sub
loop
dec
jle
mov
xchg
out
or
sub
call
cmp
dec
inc
mov
and
call
shrb
pop
icebp
xchg
aaa
sbb
or
decl
adc
mov
sub
es
popf
jecxz
rcrl
pop
push
push
loop
mov
sub
sar
call
fdivp
xchg
mov
fldenv
leave
gs
fistpl
pop
outsl
jnp
ret
fstps
pushl
fsts
dec
xchg
aad
mov
xor
or
in
imul
pushl
fiaddl
mov
xchg
xchg
mov
cmpsl
sbb
subl
js
xlat
mov
mov
inc
insb
testb
mov
ret
ror
xor
repz
leave
adc
push
dec
andb
or
lods
pop
and
ss
mov
iret
and
adc
addr16
pop
or
or
adc
or
inc
push
mov
leave
cmpsb
imul
movsl
mov
jns
xchg
js
incl
push
into
hlt
or
jo
movsb
sbbb
push
mov
fmul
aam
rcl
fucomp
sbb
loopne
xchg
rcll
call
pushl
cld
pushf
fldenv
in
bound
xchg
jle
sub
call
addr16
xorb
adc
push
adc
and
mov
add
incl
addr16
jno
pop
cmp
daa
add
xchg
sub
lret
mov
dec
mov
pop
pop
push
xor
sbb
adc
sahf
test
and
mov
jg
movsl
adc
jl
bound
imul
ds
push
pusha
xchg
xor
sbb
pop
shlb
and
jmp
cmp
popf
popa
mov
push
xchg
and
mov
clc
pushl
lds
sbb
cmpsb
jl
jmp
pop
test
pop
add
xor
ljmp
mov
sub
test
in
mov
loope
aad
cltd
ljmp
hlt
sub
or
out
dec
and
jnp
push
jmp
lods
addr16
fistpll
iret
je
enter
aaa
mov
or
push
and
mov
imul
lret
mov
or
in
push
pop
les
popa
jns
lcall
push
push
lods
in
leave
sbb
inc
popf
movsb
dec
loope
cmp
adc
scas
mov
or
sub
xchg
xor
adc
shlb
sub
call
push
shlb
pushl
daa
in
adc
inc
je
divb
inc
pop
sar
mov
push
add
mov
leave
mov
jge
popf
lods
add
or
mov
push
mov
push
leave
stos
pop
dec
cli
lea
test
cld
cmp
sub
jns
mov
push
xchg
dec
outsb
add
repnz
xor
jb
ret
sbb
and
fisubrl
call
mov
inc
and
inc
push
push
and
lcall
aas
jo
out
outsb
mov
mov
sbb
inc
mov
add
lcall
lock
ljmp
lcall
sbb
stos
mov
push
scas
mov
jo
lcall
std
imul
dec
cmp
inc
or
mov
sahf
dec
pushl
push
pop
fadds
insb
mov
inc
movsb
je
jmp
imul
add
aaa
std
pop
xor
in
push
or
mov
aad
mov
pop
jp
jmp
jmp
lcall
push
dec
push
fsts
in
bound
call
mov
les
stos
out
xchg
pop
in
jecxz
xor
rolb
mov
lahf
mov
jg
stc
add
lea
cwtl
pop
mov
test
out
and
jmp
nop
mov
lea
inc
pop
dec
into
lret
pop
int
ljmp
pop
cli
test
in
pop
fiadds
mov
movsl
pushl
push
mov
adc
ret
or
lahf
push
add
inc
pop
jp
and
das
add
mov
push
xorl
xchg
or
inc
push
inc
inc
fcompl
jp
or
pop
lock
into
xor
je
lock
cmp
test
out
jl
pop
incl
adc
sub
mov
fcmove
and
aas
mov
jmp
pop
mov
int3
cmpsl
outsl
cmpsb
add
cmpsb
sub
and
ja
xchg
jmp
fnstcw
xchg
mov
lcall
movsl
xchg
adc
repnz
add
mov
and
popa
add
in
fstpl
fisttps
push
cmpsb
test
hlt
xor
adc
lods
ljmp
cltd
xchg
or
decl
iret
stc
lock
dec
mov
sub
aas
test
ljmp
jns
mov
daa
xor
mov
loopne
je
lahf
cs
push
fdivrs
icebp
pop
jecxz
add
cmp
pop
push
int3
lods
or
clc
icebp
xor
or
sub
gs
sub
lcall
sbb
xchg
mov
mov
add
cltd
rorl
outsb
and
pushl
in
enter
push
mov
ret
aaa
fidivl
out
sbb
cld
call
ucomiss
sti
popa
movaps
inc
cmp
test
test
dec
cld
incl
xchg
ljmp
cmp
nop
test
push
movsl
shll
repnz
subb
mov
call
and
stos
dec
repz
jg
and
mov
aas
icebp
or
orb
imul
mov
mov
and
in
fstpt
add
pop
mov
inc
pop
mov
cmpsb
stos
sbb
es
cld
pop
mov
sub
mov
sbbl
or
pop
and
xorl
imul
ss
ljmp
xchg
cld
or
xchg
sahf
or
adc
ret
lea
dec
shrb
sbb
or
rorl
sub
lcall
pushl
aaa
xlat
ret
cli
push
loop
aaa
pop
rcrl
sbb
mov
adc
push
cmp
xchg
repnz
dec
test
bound
mov
test
inc
sub
push
adc
addl
lcall
xor
cmp
andb
cmpb
or
test
jecxz
hlt
mov
mov
cmpsb
repnz
nop
mov
imul
or
inc
pushf
xor
fstpt
or
cmp
sub
incl
add
sub
cli
lcall
xorl
lds
xchg
jno
lods
and
mov
out
pop
aam
aaa
inc
mov
in
inc
stos
xchg
adc
adc
sub
lods
inc
imul
sub
jae
inc
dec
mov
outsb
sbb
loopne
mov
ret
sti
inc
pop
sbb
xor
pop
movsl
pop
jns
cmc
call
push
dec
mov
mov
mov
movsl
fmul
nop
incl
pusha
ret
xor
hlt
inc
sbb
inc
sbb
mov
sub
call
stos
mov
imul
dec
push
repz
ror
or
in
or
insb
mov
or
jg
popa
std
and
mov
mov
cmpsl
mov
jecxz
xlat
cmp
pop
lret
xchg
xchg
inc
xor
xchg
das
cwtl
ss
xor
sub
pop
adc
cs
xor
lea
shll
and
clc
pushl
cwtl
xchg
mov
cltd
mov
test
lock
call
dec
lea
jae
adc
push
jg
decl
xorl
out
mov
int
and
mov
mov
incl
jmp
pop
repnz
test
movsb
jb
mov
inc
xchg
stos
sub
sub
ret
jmp
jnp
pop
cmp
icebp
mov
gs
lret
mov
xor
inc
out
jo
jmp
xor
add
mov
and
cmc
or
ljmp
pop
stos
sub
adc
fcompl
add
pop
inc
test
sbb
mov
lcall
adc
pop
icebp
mov
addr16
mov
popa
loopne
ret
ljmp
ret
cltd
in
or
pop
hlt
adc
sub
in
test
lods
cmp
mov
jg
dec
call
push
and
push
adc
mov
pop
shll
incl
test
mov
decl
inc
iret
leave
ljmp
sub
add
push
mov
cmpl
loope
or
or
ljmp
cmp
sahf
lods
mov
fadd
and
or
stos
aad
mov
fistpll
xchg
rorb
aad
hlt
pop
std
dec
stos
push
or
gs
xor
int3
xor
cld
mov
cmp
push
cs
stos
and
pushl
mov
lods
pop
jo
out
clc
ljmp
movsl
shrb
mov
ljmp
dec
and
adc
and
push
dec
movsl
mov
jecxz
adc
test
in
mov
ljmp
in
adc
les
xchg
outsb
adc
mov
call
mov
dec
inc
hlt
test
inc
mov
js
jg
sbbl
mov
ret
pushf
adc
xchg
lods
push
inc
lock
les
xchg
fimuls
push
xlat
jge
ret
xor
es
aam
mov
mov
add
sbb
jnp
int3
sub
sbb
jp
loopne
mov
add
dec
sub
xchg
or
push
fwait
hlt
push
jnp
push
hlt
insb
rolb
dec
movsb
shrb
sub
ljmp
push
xchg
xchg
cld
emms
or
or
mov
call
ficompl
sub
pop
fsubrl
inc
jecxz
push
jle
dec
jmp
dec
jns
lret
pop
push
test
loope
sub
push
decl
jb
push
je
pop
repnz
pop
cltd
xchg
jo
sbb
sub
inc
mov
dec
mov
dec
std
mov
xchg
inc
mov
cmp
mov
sti
push
aaa
sbb
xchg
xor
test
xor
sbb
cmp
clc
cmp
lods
sbb
out
cmp
ds
addr16
push
pop
in
xchg
aam
decl
or
dec
daa
in
mov
arpl
adc
sub
add
lea
lret
lret
bound
mov
add
xchg
aad
fsubrs
sub
lcall
xor
leave
scas
adc
dec
sbb
sub
stos
lahf
pop
add
mov
xchg
aam
loopne
sbb
dec
adc
fs
mov
leave
pushf
sbb
decl
decb
fldcw
loope
add
mov
adc
xchg
mov
call
int
cli
adc
sub
fcompl
rolb
lcall
call
mov
lods
sub
test
inc
enter
movsl
add
scas
mov
mov
lahf
arpl
je
scas
dec
xor
xor
mov
jae
hlt
decl
dec
jo
shlb
dec
xor
inc
lcall
add
sub
insb
adc
fisttpll
ljmp
decl
and
test
in
es
ljmp
adc
adc
xlat
jnp
sarl
loopne
mov
sbb
es
push
push
ds
jbe
jg
popa
inc
cltd
mov
cltd
hlt
jne
scas
je
fildll
mov
pop
popa
loope
or
dec
push
int
popa
xchg
jne
add
or
incl
dec
adc
or
and
outsl
andb
push
int3
or
insb
das
push
push
and
pop
cmp
mov
in
mov
ret
loop
fcomip
pop
arpl
int
arpl
incl
mov
mov
pop
lea
inc
mov
fisubl
add
xchg
les
fnsetpm(287
stos
and
std
mov
mov
mov
in
sub
mov
jne
add
mov
rclb
mov
outsb
stos
jp
xor
cmp
pusha
lahf
dec
pop
lcall
rorb
lds
in
push
repnz
mov
adc
repnz
fcomps
decl
loopne
mov
adc
hlt
lcall
or
add
int3
jb
xchg
ljmp
push
cs
mov
fiaddl
cltd
add
gs
mov
jmp
xchg
adc
arpl
addr16
ror
xor
out
mov
test
out
dec
incl
sbb
pop
cmp
xor
andl
cmp
out
inc
adc
ret
lahf
fcmovnu
je
es
outsl
in
cld
popf
mov
push
xor
sub
ljmp
fs
in
shl
xor
push
lods
sbb
dec
mov
mov
fwait
imul
xchg
and
or
or
bound
ljmp
pushl
mov
icebp
mov
cltd
sub
lcall
cmp
data16
shll
out
stc
fwait
xchg
push
in
test
ljmp
pushf
and
adc
cmp
mov
ja
mov
int
jmp
add
lcall
add
mov
enter
stos
cld
ljmp
cmp
lock
in
lahf
push
insb
into
int3
out
add
mov
jecxz
loop
add
push
and
cmp
sbb
pop
sbb
rclb
aam
mov
mov
pushl
or
xchg
mov
rolb
push
out
call
cld
incl
fldt
cs
xchg
roll
pusha
faddl
cmpsl
inc
out
dec
mov
std
in
and
jmp
iret
leave
lret
pop
data16
pop
mov
repnz
out
dec
adc
jg
mov
jne
leave
fdivs
ljmp
mov
mov
aad
sbb
loop
std
decl
xchg
lock
enter
push
lock
jg
push
rclb
icebp
insb
fidivrl
dec
in
dec
jecxz
mov
pop
fs
pushl
fcoml
xor
add
cli
lcall
mov
loope
mov
pop
je
jmp
call
pop
pusha
aaa
mov
cwtl
jns
pop
adc
adc
test
mov
sbb
out
inc
jb
push
jb
mov
jno
loop
pop
add
cmc
push
pusha
fcoms
push
mov
je
jbe
ljmp
adc
push
bound
icebp
mov
incw
scas
orb
push
or
imul
repnz
mov
xor
lock
fildll
push
and
loopne
outsb
pop
cld
hlt
or
xor
dec
in
add
jle
xor
push
mov
cld
aas
in
pop
fistpll
cmp
loope
in
cmp
push
push
jg
pop
cmc
outsl
sbb
xchg
shlb
adc
sbb
sahf
or
icebp
enter
mov
add
jne
adc
loop
add
gs
hlt
cmp
mov
or
jb
adcb
inc
icebp
or
fsubrl
in
shlb
cwtl
cli
mov
pop
sub
or
sar
pop
dec
call
nop
int3
inc
sbb
inc
mov
cltd
add
mov
sub
out
pop
out
adc
pushl
shl
push
sub
outsb
push
cmc
mov
adcb
xchg
jl
movsb
scas
stos
faddp
shr
shrb
mov
js
or
ret
cmp
stc
movsb
std
stos
test
arpl
mov
jle
jecxz
xchg
dec
roll
jbe
mov
mov
fldenv
popf
insl
fstl
sbb
adc
mov
sbb
sar
ja
mov
xorb
into
sbb
sarb
sbb
jmp
push
jbe
push
es
jg
dec
ljmp
cmp
roll
push
mov
call
scas
mov
jg
cmp
jmp
dec
ret
addl
and
mov
incl
dec
cmp
sbb
rol
mov
xor
repnz
xchg
cmp
insb
stc
loopne
lcall
decl
cwtl
pop
ja
mov
lahf
inc
xor
out
add
decl
dec
cltd
dec
push
inc
cltd
push
movsl
push
xchg
and
lods
cmp
decl
and
cmp
fcomi
es
mov
mov
es
ljmp
clc
test
aas
push
sbb
cmp
enter
inc
or
jg
mov
inc
movsl
mov
xchg
and
push
mov
nop
clc
lcall
sbb
dec
mov
lret
xchg
adc
out
insb
mov
inc
xchg
lea
outsl
nop
cmpsl
dec
mov
jl
pusha
pusha
subb
shlb
mov
sbb
in
in
cmp
dec
ja
aad
pop
imul
push
fadd
mov
xor
call
scas
jl
out
daa
pop
mov
add
std
cmp
ljmp
sbb
sarl
fidivrs
push
jg
insl
mov
cli
cmp
jmp
cltd
adc
inc
inc
or
and
adcl
cwtl
inc
mov
orb
push
adc
pop
push
mov
subb
xchg
add
leave
ds
inc
and
jb
lcall
push
xchg
clc
nop
dec
dec
jne
xchg
add
or
jg
xor
mov
dec
sub
adc
call
pop
push
jmp
and
cltd
xchg
push
jb
lds
push
push
cmp
aad
push
imulb
inc
sub
scas
mov
adc
enter
cmp
dec
push
gs
jmp
xchg
movsl
rcrb
pop
dec
loope
xchg
push
test
jne
dec
jp
mov
nop
addb
xor
inc
push
ret
call
hlt
dec
xor
xchg
sbb
and
test
pop
test
ljmp
xchg
mov
push
stos
sbb
test
sub
cmpps
lcall
cmp
cmc
mov
mov
or
cmp
je
pop
xchg
jno
popf
xor
fucomi
out
enter
mov
test
jmp
push
fidivrs
mov
push
mov
mov
and
movsl
xchg
sbb
sbb
jb
mov
jmp
sub
repnz
sub
mov
rolb
scas
pushf
cs
or
fs
jmp
popa
les
test
mov
mov
xchg
push
jg
lods
xchg
jp
jmp
and
xchg
lods
mov
mov
add
dec
aam
call
xchg
hlt
push
mov
sbb
adc
fidivrs
cli
push
les
cs
jg
add
sbb
iret
lret
pop
and
xor
addr16
inc
mov
cmp
imulb
cltd
movb
clc
arpl
cmp
dec
pusha
dec
adc
dec
in
insb
dec
lcall
jecxz
push
fwait
jne
andl
fisttps
sbb
xor
mov
imul
fiaddl
ss
sbb
sub
pop
bound
push
roll
loopne
mov
decl
mov
jecxz
and
inc
jb
in
jnp
fnstsw
inc
das
mov
push
fisttpl
mov
loop
pushf
xchg
sar
cs
loopne,pn
mov
mov
mov
ret
mov
mov
and
inc
mov
stc
inc
inc
fs
jae
mov
or
dec
jl
ret
popa
mov
jg
mov
sub
decl
push
sub
pop
jae
inc
adc
and
stos
and
push
pop
inc
adc
pop
jb
inc
cmp
aam
pop
lock
clc
inc
inc
out
sarb
orb
inc
fsts
inc
imulb
sub
jecxz
or
dec
andb
dec
mov
incl
cmp
xchg
adc
mov
mov
sbb
inc
daa
ss
dec
arpl
loopne
mov
int3
push
pop
jmp
add
xor
es
add
adc
and
in
and
lds
fwait
insl
cld
incl
add
rcrl
test
mov
push
fadds
jne
xor
mov
xchg
adc
call
sub
outsb
xchg
mov
cmp
push
movsb
test
mov
incl
mov
dec
jl
xchg
cmp
int
push
repnz
cmpl
popa
or
pop
cmpsl
insl
xor
call
jg
daa
rorb
icebp
xchg
mov
es
dec
stos
pop
stc
dec
fstps
decl
icebp
adc
ds
in
push
jge
jecxz
sahf
hlt
inc
pushl
pop
push
andl
mov
rcrb
gs
daa
add
cmpsb
add
cmp
bound
repnz
sbb
xor
daa
fsubrl
inc
sub
mov
push
cmpsl
inc
daa
dec
addb
sbb
mov
es
dec
push
sbbb
int3
adc
in
dec
mov
call
cmp
aam
adc
pop
nop
stos
mov
sub
roll
fadds
stc
mov
stos
push
sbb
inc
jns
decl
cli
dec
add
sbb
bound
pop
mov
mov
xor
push
or
push
xor
xchg
rorb
or
pop
sbb
xor
sub
sub
ret
mov
xchg
push
pop
cld
call
pshufw
aas
cld
icebp
xor
push
je
inc
xchg
cmp
mov
sahf
sar
ljmp
imul
push
or
scas
mov
pop
mov
fwait
add
mov
ljmp
or
addr16
int3
mov
jns
adc
decl
cwtl
insl
cmp
ja
daa
test
cmp
sbb
xorl
jecxz
cmpsb
xor
lret
fsubrp
in
aaa
subl
add
fxch
ret
ret
fstp
enter
pushl
inc
aaa
inc
xchg
outsl
push
push
xor
nop
push
pop
push
push
mov
fidivrl
cmpsl
adc
fwait
jmp
sub
mov
call
orb
inc
js
dec
jo
inc
and
mov
and
add
decl
inc
push
std
rcll
xlat
mov
and
inc
mov
ficoml
call
ss
adc
and
sar
mov
push
mov
inc
aad
jo
inc
sbb
mov
in
add
dec
cmp
mov
or
stos
jmp
lds
les
pop
cwtl
sbb
sbb
pushl
gs
push
jne
dec
pusha
or
mov
adc
push
test
pusha
or
jne
jo
pop
cmp
stos
xor
mov
mov
fstps
imul
jns
and
rorl
jae
cltd
cmp
pop
jp
sti
fwait
sub
jae
shrl
jbe
imul
lods
insl
mov
out
mov
ljmp
clc
sbb
cwtl
jge
pushf
adc
scas
test
into
or
fs
arpl
enter
inc
xor
test
ljmp
bound
xchg
and
or
mov
mov
cmp
xchg
test
nop
and
pushl
adcb
aaa
xchg
icebp
fistps
xchg
sahf
or
mov
push
sub
xor
lahf
enter
aad
idiv
call
xchg
adc
push
fisubrs
in
cmpsb
scas
xchg
cwtl
es
mov
dec
dec
mov
dec
xor
call
lret
popf
gs
repnz
cmp
ss
in
sbb
loope
jmp
cmp
or
xchg
sub
test
popa
sub
popa
mov
jg
es
es
jne
movsb
xchg
test
cmpsb
popa
adcb
lcall
inc
fsubs
in
mov
mov
lods
scas
pop
sub
aad
mov
call
sub
jge
jae
loope
cmp
sahf
jg
scas
pop
mov
fidivrs
pop
call
call
xor
scas
call
adc
mov
push
inc
insb
lcall
cmp
mov
out
mov
pop
and
add
jns
mov
mov
test
and
cwtl
mov
mov
aaa
xlat
mov
gs
or
jl
or
cmp
add
int
fdivrl
fld
mov
xchg
adc
sahf
shr
aad
shlb
push
fisubrl
daa
clc
mov
outsb
imul
popf
std
mov
aaa
lock
xchg
push
mov
or
shll
fildl
push
mov
dec
in
imul
add
lock
or
add
mov
outsb
add
jbe
push
mul
jge
mov
test
sbb
add
pop
fwait
out
sub
xchg
push
push
jg
add
inc
hlt
pop
rcrl
push
dec
in
jo
ljmp
lret
sub
into
test
fadds
std
pop
add
push
xchg
inc
loopne
mov
or
incl
inc
mov
xchg
imul
rcl
push
mov
push
jg
mov
mov
and
repz
cltd
jge
and
sub
lret
mov
nop
fs
and
fwait
xchg
mov
mov
mov
sub
rol
mov
icebp
fstpl
popa
jmp
popf
and
inc
pusha
dec
mov
iret
xor
loopne
cmp
push
cmp
stos
int3
add
adc
mov
negb
icebp
mov
inc
fisttpll
lret
pop
sbb
lcall
push
sbb
aas
les
in
mov
jg
or
pop
pusha
push
idiv
add
insb
add
nop
dec
icebp
pushl
pop
aam
or
fmull
mov
add
fadd
cli
lcall
adc
adc
dec
cltd
mov
mov
movsb
push
adc
fcoms
inc
data16
fs
int3
fcoml
sbb
ljmp
jge
jmp
push
pop
xchg
pop
sbb
cmp
roll
clc
push
cld
rcll
dec
pop
add
pusha
les
xor
loopne
sbb
cmpsl
cmc
lcall
test
xchg
pop
push
xchg
test
inc
dec
aas
rcl
sub
inc
test
lcall
mov
jg
mov
sub
sbb
adc
fwait
sub
mov
incl
push
test
pop
call
mov
jmp
push
push
jg
test
jp
andl
cmc
pop
adc
pop
loope
les
call
leave
pushf
push
stos
jge
mov
cmp
sbb
in
push
aad
mov
cmp
mov
cmp
add
and
cli
ror
js
fldz
shlb
ret
push
in
inc
push
outsb
or
movb
loope
inc
out
lock
lods
jns
stc
cmp
rorl
in
loope
les
inc
sub
mov
sub
clc
cmp
je
pusha
add
jmp
cmp
fcoml
xlat
sbb
inc
in
adc
adcb
cld
or
cmc
mov
adc
pushf
std
aad
popa
in
pushf
jmp
ljmp
inc
sub
call
cld
clc
add
pop
xchg
mov
mov
xchg
lods
xchg
popa
jbe
les
test
and
jg
call
and
push
popa
js
inc
add
mov
push
mov
outsl
cmpsb
lods
jmp
out
orb
cmpsl
pushf
mov
mov
loop
call
popf
push
pusha
fldl
push
mov
or
and
pop
add
dec
adc
and
mov
scas
and
loope
ror
or
dec
pop
sub
push
in
mov
and
cmp
cld
nop
std
and
and
xchg
lds
xor
int
push
add
dec
jo
bound
xchg
sbb
fs
fs
add
jns
popa
sbb
int3
call
push
adc
incl
adc
lret
enter
xchg
ljmp
jno
loop
jge
push
dec
pop
xchg
inc
adc
ljmp
mov
adc
mov
mov
lcall
loop
movsb
fsubs
sahf
push
jmp
jmp
cmp
pop
push
pop
dec
and
insl
pop
sbb
mov
xchg
push
inc
jmp
pushf
xor
cmp
in
int3
mov
adc
test
lahf
push
adc
mov
mov
pop
or
add
clc
push
imul
dec
mov
rolb
fldcw
dec
fs
sub
outsb
cmp
or
add
xchg
out
call
mov
movsl
cltd
ljmp
leave
rorl
paddd
je
dec
cli
enter
out
and
cmp
mov
test
fcmovu
or
add
icebp
pop
sbbb
pop
mov
ljmp
call
in
or
mov
ds
sub
enter
imul
inc
decl
push
aam
dec
pop
mov
dec
adc
movsl
fsub
push
cwtl
cmp
movsb
adc
aaa
cld
inc
mov
inc
outsl
or
in
xchg
rorb
push
hlt
ljmp
jl
push
push
sahf
xlat
mov
inc
sub
in
adc
outsl
xchg
jp
dec
test
lds
test
aam
xchg
ljmp
or
clc
or
sar
push
insl
fcoms
push
jp
lds
add
push
mov
pop
inc
pusha
nop
jne
adc
in
addr16
mov
outsb
fiaddl
cli
inc
cmpsl
sub
pop
cltd
ljmp
pop
lret
mov
ljmp
xchg
xchg
leave
push
mov
sub
xchg
push
scas
and
insl
dec
call
or
arpl
fstpl
push
jbe
stos
mov
mov
nop
daa
sahf
daa
insl
std
jmp
mov
sbb
inc
movl
push
sub
mov
loop
mov
adc
scas
ljmp
sub
and
cmp
pop
pop
push
clc
call
scas
test
jno
jne
outsb
inc
call
rcrl
sbbb
es
mov
xchg
jl
mov
repz
add
dec
sbb
push
jl
insb
adc
inc
push
and
jg
pusha
in
jp
dec
icebp
or
mov
cld
fisttpl
ds
lods
pop
mov
jbe
inc
lods
inc
ja
lods
push
pop
push
pop
xchg
int
sar
ja
add
imulb
int3
aam
roll
mov
jmp
js
xor
mov
fcmovb
bound
jecxz
mov
inc
sub
mov
jmp
xchg
push
push
inc
xor
mov
xchg
mov
mov
mov
enter
cmp
xchg
aad
push
inc
pushl
popa
push
leave
stc
pop
clc
filds
fnstsw
push
fs
xchg
fsubl
lret
shl
xor
gs
xlat
incl
or
test
or
sbb
push
push
out
mov
xor
mov
out
dec
cwtl
into
push
imul
mov
push
cmp
decl
add
inc
mov
xchg
mov
pop
dec
inc
test
adc
lock
inc
mov
test
ljmp
cmc
lock
mov
fwait
cmpsb
rcrl
ljmp
fwait
ret
adcb
xchg
adc
lea
push
aad
push
and
decl
lcall
sub
lods
sbb
mov
mov
in
cwtl
loopne
or
sub
dec
sbb
pop
inc
idivl
loope
pop
std
jg
test
or
fsts
xor
cmp
incl
or
inc
arpl
xchg
push
aas
jnp
inc
dec
fidivl
inc
fisttpl
pop
inc
stos
or
mov
and
inc
jnp
pop
push
cltd
xchg
leave
aad
loope
into
test
sub
xchg
addr16
loope
das
out
testb
or
mov
pushf
loopne
fisubl
fadd
sbb
and
outsl
sbb
dec
mov
loope
dec
inc
call
dec
arpl
pop
fstps
dec
pop
sbb
bound
fnsave
ljmp
push
push
dec
lcall
scas
jb
aam
and
cli
pop
es
jmp
loope
out
in
shlb
xor
pop
pusha
xchg
inc
push
call
push
xchg
loop
jnp
dec
int
mov
mov
mov
les
inc
fstpt
rcr
mov
mov
mov
hlt
inc
enter
xor
mov
pop
int
dec
mov
in
dec
cli
test
inc
dec
push
dec
sbb
shlb
and
shrb
sbb
mov
pop
dec
push
fsub
testb
push
xor
ljmp
pusha
cld
pushf
add
decl
rorl
loop
push
adc
in
lea
ret
insl
jae
sbb
icebp
incl
or
mov
imul
hlt
lds
jg
or
int3
inc
test
andb
mov
pop
sub
mov
sub
lret
jne
or
adc
inc
out
sbb
adc
ss
mov
sub
pop
lock
daa
inc
add
nop
push
xor
outsb
cltd
outsb
inc
dec
cmp
xor
jmp
jmp
pop
mov
xlat
scas
or
xchg
mov
clc
inc
cwtl
clc
aad
out
push
pop
inc
xor
cmp
ljmp
cli
outsl
pop
xor
xchg
pop
fistl
cmpsb
cmpsl
sahf
mov
and
loop
mov
xchg
js
in
cmp
cmp
jo
inc
adc
pop
fcoml
pop
mov
imul
loop
pop
add
mov
pop
insb
sbb
call
xlat
clc
in
mov
mov
cltd
idiv
pop
jecxz
jge
pop
dec
jb
fs
add
sbb
neg
call
mov
add
add
jle
outsb
pop
je
pop
cltd
jo
add
scas
fsubr
or
lret
call
in
jo
cmp
push
or
xor
xor
je
sar
ja
aam
push
jbe
xor
js
je
stos
stos
scas
adc
pushl
lcall
sub
imul
pop
mov
rorl
mov
subb
fcos
imul
insb
jmp
pop
mov
arpl
dec
aam
dec
imul
mov
mov
sub
out
cmp
call
adc
pop
repnz
nop
sar
sbb
leave
mov
sbb
cmpsl
loope
mov
sbb
mov
cwtl
and
lcall
mov
call
mov
lret
fistps
jnp
pop
adc
js
inc
mov
pop
sbb
cs
test
pop
cld
call
sarl
cmp
add
xchg
add
cli
mov
test
out
jg
insb
dec
mov
sarl
inc
push
pop
out
add
adc
lcall
rcrb
inc
cmpsb
xor
hlt
cmp
fs
dec
mov
cld
jmp
push
imul
sub
ret
or
cmpsl
data16
jmp
lods
imul
jbe
es
stos
shrb
adc
pushf
lock
xor
movsb
mov
gs
adc
adc
loop
ds
call
fs
cmp
cmpsl
rorl
push
lcall
loopne
fldl2t
push
or
decl
jne
dec
cmp
dec
pop
cmp
sti
jno
mov
mov
dec
sbb
or
add
rorb
outsl
cmp
imul
push
aam
dec
inc
mov
dec
sbb
mov
cmp
add
dec
clc
loop
aaa
xchg
ret
jb
jbe
mov
add
mov
push
xchg
insb
inc
push
ljmp
sbbb
push
and
fidivs
enter
mov
xlat
xor
ds
mov
lcall
pop
lea
rcll
cmp
and
pop
sbb
add
add
dec
in
decl
push
test
fmuls
pop
pop
mov
or
adc
nop
dec
inc
sub
fcoms
mov
and
xchg
sbb
fimuls
pop
test
mov
clc
inc
dec
dec
xor
cmp
jecxz
sub
cli
call
andl
xchg
add
cmpsb
lcall
call
cs
mov
fsts
mov
pushf
inc
push
mov
lds
adc
fdivs
pop
or
outsb
fprem
lcall
aaa
outsb
fnstsw
pop
xor
insb
sbb
call
mov
mov
stos
aaa
xor
mov
jmp
int
add
cwtl
cld
sbb
insl
inc
add
sub
decl
fdivs
iret
xchg
insb
js
popa
xlat
xchg
bswap
popf
popf
data16
fld
adcl
push
jmp
add
faddl
push
and
mov
test
pushl
stos
pusha
test
loope
addr16
cmp
dec
cld
jle
and
jecxz
addl
fnstsw
clc
icebp
ffreep
push
pop
lahf
mov
inc
jl
cmp
lcall
dec
rorb
or
pushf
jle
add
shlb
jo
sahf
xor
enter
mov
add
loopne
add
or
cmp
in
pusha
add
mov
test
add
lea
xor
nop
lcall
add
or
xchg
jecxz
inc
or
int3
adc
test
push
push
sub
xor
and
and
inc
pop
mov
lock
mov
lock
loopne
es
push
enter
pop
dec
and
mov
sub
ljmp
es
test
andb
ror
jmp
lea
loopne
test
test
es
int
sub
cli
je
es
jmp
inc
jne
mov
jb
lods
lds
lods
xor
in
push
mov
push
imul
ret
daa
icebp
mov
pop
jae
xchg
scas
adc
movsl
jg
test
rorl
xor
dec
cmp
jg
ljmp
jb
dec
cmp
pusha
cmp
fldz
ret
fdivp
mov
adc
std
lods
inc
lds
xor
into
stos
adc
lods
cmp
std
out
sti
cs
sar
mov
popa
sbbl
into
sti
pop
inc
pop
shl
icebp
enter
pop
mov
call
push
jp
or
and
mov
xchg
lcall
adc
repnz
loopne
cmp
mov
in
loopne
incl
mov
aaa
shr
test
sbb
orl
call
cmp
out
lods
nop
fadd
mov
gs
lock
sbb
rcrb
pushf
xchg
mov
loope
scas
lcall
adc
mov
dec
cwtl
adc
call
call
jecxz
clc
jae
mov
sub
decl
sbb
loop
test
ret
sahf
push
adc
xchg
scas
cmpsb
add
push
test
cmpsl
xchg
lcall
add
cltd
sub
popa
add
pushl
bswap
xchg
jb
mov
push
jg
nop
push
and
ret
cmc
in
pop
jae
push
adc
fidivs
fdivl
ss
mov
fsubrs
mov
mov
xor
mov
mov
adc
sti
ret
add
pushl
into
xorl
je
cmpl
xlat
jmp
sbb
sub
sahf
xchg
lods
cmp
push
xlat
repz
or
popa
adc
dec
ret
xor
enter
xor
mov
push
mov
cltd
sbb
adc
cmp
loopne
pop
stos
or
jl
mov
mov
dec
jo
sub
push
mov
or
mov
jmp
or
inc
mov
or
nop
ret
adc
lock
leave
roll
pusha
and
add
lcall
and
addl
jbe
lds
int3
cwtl
psrlw
push
dec
add
test
and
insb
mov
inc
or
mov
or
or
pushf
inc
aaa
mov
rol
ret
add
mov
test
inc
add
sbbl
scas
lcall
sbb
mov
test
pop
movsb
dec
sbb
adcb
decl
adc
xchg
lds
add
pop
aaa
cmp
or
push
cltd
sbb
lcall
imul
test
mov
sbb
or
cmc
loop
aas
in
decl
mov
aaa
mov
repz
js
sbb
sbb
mov
or
mov
jae
data16
dec
or
mov
aas
fcoml
xchg
mov
loopne
nop
xchg
shl
ss
sbb
cld
push
loopne
sbb
ljmp
adc
sub
push
je
push
daa
pushl
hlt
jo
mov
les
and
adc
sbb
mov
sbb
je
pop
cmc
xchg
mov
or
lret
rolb
jl
inc
inc
xchg
cmc
pop
cmpsb
mov
inc
hlt
arpl
aam
mov
cs
or
and
jnp
arpl
lock
call
pusha
test
fsts
cli
cmpsl
sbbl
dec
sbb
push
test
fbstp
push
cmpsb
cmp
subl
test
stos
xchg
test
xchg
push
fs
xor
dec
call
xchg
xchg
imul
inc
or
add
leave
popa
or
test
aam
jg
das
and
aas
jp
dec
jnp
mov
lock
xor
sub
pushl
pop
mov
out
inc
xchg
lret
les
mov
imul
outsl
sbb
and
xor
std
xchg
xchg
cmp
push
dec
mov
clc
inc
jae
movsl
push
stos
and
incl
push
sub
lock
jle
shrb
scas
xor
cmpsb
out
repz
mov
lods
inc
ljmp
xchg
call
mov
setge
int
stos
pop
mov
pushl
mov
push
mov
or
pushf
adc
rorb
test
hlt
movsl
push
xchg
aaa
std
jmp
cmpsl
addl
iret
ret
cmp
rorl
xchg
jl
repz
push
lea
pop
fs
hlt
test
add
repz
decl
cmpsb
dec
xor
push
test
dec
stos
dec
pop
push
cs
xor
mov
fwait
mov
mov
push
mulb
mov
mov
dec
and
fwait
int3
dec
mov
mov
pop
pushl
ja
pop
ret
rcrl
jg
xor
cmp
imul
sbb
decl
push
inc
in
roll
lcall
data16
mov
cld
cmp
push
andl
mov
in
inc
ret
adc
and
xchg
mov
stos
adc
sub
dec
push
cmpl
mov
jno
xor
mov
call
jp
mov
stos
scas
movsl
imul
lcall
and
decb
in
das
cmp
call
inc
lods
testb
jle
int3
mov
cmpsb
aas
lret
pop
loopne
dec
insl
mov
clc
addr16
inc
sub
call
add
rolb
fdivp
pop
mov
cld
fs
pop
mov
jg
cmp
lea
lock
pop
pop
aas
rorb
dec
int3
jg
sbb
sub
scas
das
notl
xchg
or
out
push
sub
loope
std
ljmp
mov
mov
cmp
cwtl
sbb
add
popa
call
out
addr16
mov
paddusw
jg
cmp
nop
mov
flds
mov
arpl
incl
movsl
xor
movsb
dec
je
sbb
pop
jb
dec
jno
dec
mov
daa
sub
push
or
call
mov
js
or
xchg
pop
addl
filds
dec
dec
dec
movsl
push
mov
dec
mov
mov
and
in
cmp
jmp
jg
scas
mov
mov
and
and
mov
xchg
lds
out
lea
jg
gs
fldt
ja
mov
leave
in
loope
je
pushl
fucom
filds
lahf
es
add
add
fucomip
sbb
and
ja
mov
decl
inc
and
mov
lret
xchg
fisttps
xor
arpl
inc
sub
jb
movsb
cwtl
adc
lds
call
ljmp
cmc
pop
mov
ljmp
sti
sbb
mov
ljmp
jg
in
xor
adc
push
cmpsb
in
scas
jp
scas
ret
adc
fcomip
jg
int3
imulb
ljmp
outsb
int3
or
dec
jmp
decl
and
inc
cltd
ret
outsb
mov
lds
pusha
sub
test
pop
inc
and
dec
and
add
jmp
repnz
sahf
leave
add
test
into
test
jge
jns
mov
lret
mov
pop
xchg
ljmp
and
inc
pcmpeqb
or
mov
xor
jle
mov
pushl
jp
lret
jle
outsb
sbbb
ret
aas
add
push
clc
jmp
sub
inc
sub
sbb
test
inc
fists
psllw
cs
ljmp
ret
ljmp
cmp
ljmp
lret
jmp
inc
call
mov
addb
addr16
and
fmull
adcb
jmp
jecxz
adc
lea
push
aam
and
jmp
fsubp
xor
lcall
adc
or
testl
adc
outsl
cli
ljmp
push
les
ss
sbb
jmp
add
es
and
mov
ret
rcrb
xchg
hlt
out
jae
call
repnz
xor
inc
mov
jmp
inc
scas
fdiv
or
mov
das
test
cld
sbb
loop
sbb
jg
xor
xor
xor
sar
test
mov
mov
fs
sahf
bound
imulb
and
stos
bound
push
pop
mov
cltd
inc
pop
pushf
jecxz
orb
add
jmp
shrb
xchg
lock
movsb
into
mov
lcall
adc
jno
nop
inc
les
movsb
cli
pop
push
and
and
out
fwait
ds
mov
decl
es
dec
and
sub
or
and
out
or
adc
dec
pop
xchg
out
repnz
sub
xchg
jmp
movsb
das
dec
cld
out
test
shll
hlt
mov
sahf
adc
pop
and
cwtl
dec
andb
xlat
pop
ret
sbb
out
movb
pop
push
jns
mov
mov
movsl
call
hlt
or
xchg
push
mov
insb
and
repnz
incl
into
popa
pop
xor
pop
in
xor
shll
cmpsb
movsl
pop
mov
fcoml
jg
into
and
sarl
mov
popf
dec
rolb
lods
les
cli
pop
pop
out
push
mov
jmp
xor
pusha
cmp
xor
xchg
mov
mov
jo
inc
dec
loopne
pop
and
hlt
adc
ljmp
icebp
xor
push
mov
jno
add
movsl
mov
and
mov
adc
movsl
mov
jmp
and
or
movsl
loop
cld
dec
inc
mov
out
jg
data16
sub
int3
lcall
movsl
call
cwtl
add
decl
pop
repnz
shlb
xchg
or
mov
sbb
es
inc
ljmp
outsl
add
mov
sub
xchg
aas
das
addr16
xorb
lret
gs
lret
imul
lock
xor
mov
lcall
je
pop
in
and
mov
enter
pop
testb
inc
mov
cs
cmp
fnstsw
xor
adc
sbb
pop
je
ficomps
jmp
jecxz
push
gs
out
int
pop
repz
push
outsb
push
inc
dec
je
arpl
in
outsl
lods
enter
sarb
and
mov
adc
loope
out
imul
pshufw
pop
ljmp
sub
jae
stc
push
sub
les
subb
jg
icebp
sub
xchg
lods
jecxz
scas
xor
leave
push
or
mov
sub
cmp
sbb
jg
jecxz
leave
test
push
rcr
mov
incb
jge
addb
daa
or
repz
popf
xor
fidivl
out
inc
cmpsb
lcall
push
xchg
push
mov
xor
pop
mov
push
mov
inc
adc
jnp
or
and
or
test
inc
inc
test
scas
push
xor
xchg
push
xor
clc
cmp
sar
incl
cs
cmp
aaa
mov
pop
ret
dec
lea
dec
sub
dec
decl
xor
mov
and
xchg
pop
fnstenv
and
pusha
push
aam
in
aam
lret
xor
es
xchg
cmp
ss
pushf
dec
push
jmp
ds
xchg
push
pop
insb
cmp
jmp
mov
cmp
daa
pusha
mov
pop
jo
push
sub
dec
push
sbb
ret
ljmp
cmp
mov
jno
mov
mov
xor
push
mov
fcmovu
shrb
push
pop
das
je
lds
scas
andb
cmp
pop
mov
decl
jle
mov
pop
push
dec
or
sar
decl
xchg
cltd
and
ss
das
xlat
jecxz
xchg
scas
sub
cmpsb
loope
arpl
mov
sbb
movsl
js
lret
jl
dec
cmp
dec
idiv
jmp
hlt
cmp
fnsave
loope
stos
movsl
push
test
sbb
mov
loop
cmp
call
into
in
jns
pusha
in
call
jb
out
mulb
loop
inc
inc
in
lcall
sbb
aas
add
sbb
adc
aas
repz
and
arpl
push
xlat
xchg
dec
cmp
mov
stc
scas
sub
aam
mov
les
bound
and
loop
lcall
pushl
ret
xor
sti
push
push
jmp
fcomip
inc
jmp
inc
xchg
movsb
mov
ss
adc
cmp
push
es
pushl
fistpll
clc
push
adc
pop
cmpsl
call
rcll
leave
xchg
in
xor
cld
xchg
or
rcll
cmp
adc
scas
clc
fwait
movsb
sbb
push
dec
xor
jno
pop
push
dec
test
sbb
outsl
shll
or
adc
mov
sub
lea
mov
push
lcall
test
sarl
data16
inc
lods
jmp
push
sbb
notl
and
hlt
add
loopne
pop
mov
adc
xor
or
out
subb
pop
mov
pop
pushf
jbe
idiv
dec
insl
cmp
into
pop
aaa
repz
mov
ret
mov
cwtl
or
test
incl
ret
fidivs
in
sarb
xchg
daa
daa
ret
nop
inc
adc
adc
or
jmp
nop
and
cli
push
mov
repz
pop
addl
adc
iret
int3
xchg
outsl
sub
push
in
orl
fldcw
insb
mov
insl
add
sbb
jmp
clc
xchg
clc
and
add
out
inc
test
inc
icebp
jb
adc
jae
push
or
incl
adc
mov
test
ret
je
sbb
jmp
push
imul
xchg
push
paddq
jns
gs
or
stos
mov
xchg
imul
ljmp
andl
outsb
xchg
ret
cmc
pop
sub
arpl
cwtl
pop
cwtl
out
push
adc
jns
cmp
mov
sar
pushl
jnp
and
inc
arpl
test
xchg
mov
outsl
mov
jg
xchg
cld
cs
pop
mov
movsl
shr
ss
cwtl
cmp
dec
or
incl
xchg
dec
mov
repnz
xor
cmp
sub
decl
loopne
sbb
adcb
sbb
push
leave
bound
aad
out
jne
fadds
add
xchg
sti
fildll
adc
mov
jl
rcrb
shl
mov
jp
xchg
jg
imul
fisubl
stos
mov
or
cwtl
pop
fiadds
jnp
or
and
xlat
and
stos
pop
push
mov
dec
push
call
xor
mov
dec
pop
incl
xchg
pop
jo
xchg
cmp
aad
decl
xchg
mov
jnp
je
xchg
xor
ja
in
mov
cmpl
call
xor
pusha
popa
icebp
xchg
das
clc
xchg
sub
pop
lds
dec
repnz
jp
lahf
xchg
xchg
inc
negb
stc
movsl
cmp
pop
cmp
repz
lock
pop
xchg
sub
sub
cld
incl
scas
stc
jp
mov
cmpsb
pop
fwait
lret
xor
fmuls
repz
out
clc
pushl
gs
xor
push
jnp
call
dec
xor
cmp
popf
decl
xlat
jne
inc
sub
xchg
cmp
xchg
push
lock
test
insl
jmp
insb
xlat
nop
outsl
xor
xchg
loope
scas
daa
jno
mov
jnp
test
pop
adc
jno
mov
stos
ja
pop
call
inc
lcall
xchg
mov
stc
addb
rcl
dec
add
xor
pushf
add
inc
mov
push
mov
mov
cmpsl
fwait
sbb
xor
incl
cmp
dec
xchg
mov
arpl
mov
rcrl
push
ss
mov
jnp
out
fxch
mov
lock
cmp
jge
imul
mov
enter
in
mov
xchg
and
scas
jmp
idivb
push
clc
jns
mov
or
inc
scas
ja
incl
pop
or
fiaddl
rclb
push
call
fmull
xor
or
xor
mov
inc
loope
or
je
scas
in
repz
lcall
dec
test
dec
fdivl
cmpsl
stc
mov
pop
fcoml
add
rcll
lret
jo
cmp
clc
add
ljmp
pop
fidivs
cmpsb
jne
aas
ja
leave
and
mov
pop
cmp
mov
push
xchg
push
roll
mov
rcrb
adc
and
cs
addps
dec
dec
pushl
imul
push
lret
xor
add
jne
xorb
mov
inc
fstps
or
daa
mov
scas
es
push
mov
mov
jmp
cs
ljmp
clc
push
add
xor
cmp
push
fiadds
dec
xchg
ss
adc
xor
imul
inc
cld
and
inc
sbb
inc
jmp
xlat
push
out
movsb
pushf
adc
aas
idiv
aad
sub
push
cmp
call
mov
pop
fwait
ljmp
xchg
xchg
ljmp
fsubrs
xchg
cmp
cltd
cmp
xchg
icebp
aad
push
xchg
push
add
dec
xchg
in
test
jbe
fdivrs
xor
jge
icebp
jg
lods
in
push
xorl
cmpsl
daa
mov
aam
mov
imul
xor
cmpsl
fdivs
and
mov
fidivrs
popf
iret
adc
xor
test
outsl
hlt
xchg
pcmpgtb
sti
mov
scas
and
and
pop
mov
cmp
sar
incl
rcr
ret
push
jmp
ret
fcoms
cli
fldt
pop
xchg
and
call
leave
push
mov
xor
imul
jl
les
cmp
inc
fisubl
push
pop
and
test
scas
clc
mov
xchg
mov
clc
ljmp
ljmp
jo
mov
scas
enter
sbbb
jnp
mov
mov
fcmovnu
mov
jo
cmp
and
popf
filds
stos
or
decl
and
mov
or
and
or
je,pn
mov
lds
xchg
test
jo
cmp
call
loope
add
out
lret
cwtl
xor
pop
mov
mov
pop
inc
les
xchg
and
mov
pop
cwtl
push
inc
inc
sbb
jp
add
dec
cmp
aad
pop
mov
and
fsubr
inc
mov
sbb
ficoml
add
mov
and
inc
loop
das
pusha
shlb
cmp
ffreep
xor
scas
arpl
dec
decl
xchg
in
mov
sbb
addr16
aam
mov
les
inc
arpl
mov
lret
xchg
mov
int3
jl
xchg
sbb
dec
call
push
sbb
or
sti
cmc
jmp
pop
outsl
lahf
push
sahf
jne
xor
call
daa
dec
sbb
mov
addl
hlt
scas
dec
lahf
lods
jle
sub
sti
ljmp
add
sub
call
pop
std
frstor
jle
push
mulb
or
cld
inc
js
or
inc
sbb
roll
pusha
and
sbb
ljmp
insb
push
icebp
xor
or
dec
xor
hlt
adc
jge
rorl
outsb
dec
std
sbb
popf
call
xchg
dec
jmp
and
push
mulb
xchg
std
jmp
sbb
sbb
sahf
vmulpd
jl
push
pop
sub
fst
inc
lcall
xlat
bound
sub
sbb
in
movsb
shrb
cmp
imul
lock
dec
add
cmp
jbe
data16
call
incl
imul
push
xchg
xchg
cwtl
popa
out
sahf
enter
push
imul
incl
jno
fnstsw
mov
je
test
incl
dec
push
fistpll
dec
fcoms
pminsw
loopne
push
clc
movsl
pop
add
xlat
lcall
add
dec
insl
mov
pop
fwait
and
pusha
adc
lcall
inc
inc
fs
es
nop
inc
inc
pop
loop
lcall
push
dec
in
rorl
popf
rolb
mov
add
arpl
dec
sbb
adc
cltd
cwtl
push
inc
mov
push
or
loop
stos
test
lret
dec
adc
decl
lcall
push
mov
cwtl
jno
pop
push
lcall
ljmp
xor
mov
bound
jbe
push
push
dec
out
push
jno
sahf
inc
cmp
pushl
push
test
mov
test
rcrl
sbb
xchg
lcall
pop
dec
jne
outsb
popf
push
mov
daa
stos
push
xchg
sbb
ret
fldt
xchg
lcall
fistpll
jle
popf
jne
xchg
mov
mov
mov
xor
and
cmp
orl
daa
mov
imul
fcomp
pop
call
add
xchg
inc
inc
sub
cmp
mov
ds
stos
test
lahf
sbb
jae
push
sti
bound
data16
add
mov
jmp
cmp
adc
out
cmc
popa
sbb
cltd
push
pop
push
inc
je
sbb
xor
dec
pop
jbe
pop
add
xor
cmpsl
data16
ja
adc
fistps
int
push
or
call
mov
mov
cmovge
arpl
pop
imul
ljmp
xchg
mov
push
insb
jle
test
mov
mov
std
add
pop
iret
dec
decl
outsb
outsb
sbb
stos
into
and
test
call
and
dec
into
jae
xor
ret
sub
js
mov
push
mov
rcrb
and
jp
mov
inc
and
mov
jmp
enter
xchg
daa
cmp
or
mov
inc
fdiv
or
cwtl
jg
jo
sbb
mov
mov
xlat
mov
or
dec
jno
lcall
les
xor
dec
lods
xor
popa
push
iret
andb
std
nop
dec
fucomp
adc
mov
das
gs
pop
mov
imul
pop
mov
xchg
jg
xchg
push
add
jmp
mov
mov
arpl
lcall
dec
dec
movsb
jmp
adc
loop
xor
dec
jnp
pop
lock
jg
inc
imul
push
and
loope
cmc
mov
mov
mov
mov
jae
mov
mov
cmp
insl
inc
fmull
hlt
decl
inc
out
out
mov
jg
dec
inc
rclb
popf
or
loopne
add
enter
xlat
add
and
inc
adc
pop
mov
mov
mov
ja
jle
xlat
adc
in
xchg
shll
add
in
push
mov
adc
ljmp
nop
mov
push
loop
sbb
pop
cmp
mov
mov
ljmp
xchg
jnp
cmp
aaa
xchg
and
nop
mov
pop
cld
ljmp
jg
call
leave
int3
pop
in
lret
in
xor
cmp
xchg
sub
call
xchg
mov
pop
push
mov
jmp
adc
ljmp
mov
test
and
loopne
push
popf
xchg
jo
scas
mov
lods
xchg
cmpsl
jmp
ljmp
scas
mov
jae
imul
int
push
loop
clc
sub
add
inc
in
aam
or
out
movsl
pushl
popf
les
cmp
xchg
adc
adc
fildll
add
jno
sbb
lds
call
sub
lret
enter
push
inc
inc
mov
roll
jmp
shrl
pop
jne
movsl
sbb
sub
add
fs
ret
repnz
sbb
or
fs
pop
mov
jp
inc
mov
push
xchg
sub
pushl
jne
aam
test
xchg
pop
inc
adc
mov
jg
test
dec
sub
xchg
xchg
sub
sbb
inc
lcall
jl
stos
dec
mov
jae
out
or
push
adc
jns
dec
int3
jmp
pop
out
jmp
sub
out
xchg
and
lahf
add
hlt
ret
and
cmp
fwait
mov
fisttpll
cmp
call
xchg
sub
scas
mov
aad
inc
js
mov
mov
sub
mov
dec
push
xor
sub
cmp
inc
adc
ja
shll
xchg
push
pop
cmp
jg
inc
scas
sub
clc
cwtl
and
cli
and
jb
fldenv
fcmovb
push
push
test
pushl
ret
mov
cmpsl
xchg
enter
mov
decl
aad
nop
insb
cmp
pop
fistl
push
jns
push
loop
ret
push
sti
push
adc
jns
dec
fwait
mov
fstl
scas
or
ss
xor
lods
sub
adc
push
mov
xor
jmp
int3
sub
mov
scas
loope
insb
cmp
and
dec
ret
vmovntps
push
ss
popa
jmp
lea
sbb
jns
pop
std
jne
jbe
neg
push
jns
push
push
xor
xor
dec
inc
imul
ljmp
or
sub
outsb
inc
push
pop
push
lods
mov
aad
jg
or
repz
mov
movsl
sub
leave
dec
jge
xchg
and
shr
mov
mov
xor
mov
rcrb
pop
push
sub
pusha
mov
repnz
outsb
call
sar
out
loope
lcall
push
mov
cmp
lcall
sbb
pop
cli
push
inc
inc
fcmovbe
loop
dec
pop
mov
test
mov
clc
cmp
sbb
stc
into
stos
mov
or
xchg
xchg
push
cmpsb
cmp
mov
outsl
pushf
dec
aas
cli
mov
scas
mov
mov
sbb
dec
inc
lcall
and
and
mov
loop
push
and
rolb
xchg
jg
cld
mov
jbe
dec
daa
out
sbb
lret
stos
or
xchg
sub
jmp
repnz
pop
pop
sahf
inc
xchg
imul
fs
sub
cmpsb
aaa
push
icebp
jmp
mov
xchg
sbb
xchg
movsl
push
gs
xlat
xchg
xor
stos
dec
push
lcall
and
cmp
mov
daa
pop
in
or
in
pop
cli
addl
icebp
lcall
mull
fcmovne
adc
lods
cmp
jmp
lcall
rol
dec
out
data16
sbb
rcll
aas
mov
xor
shlb
out
cmp
add
ficomps
mov
out
xor
es
push
inc
stos
xchg
push
jno
push
ret
push
pop
lock
call
pop
hlt
push
mov
pop
inc
rcll
divb
out
push
es
pop
adcl
jg
jmp
sbbl
xchg
fidivs
data16
divb
xchg
daa
outsl
push
inc
cmp
sub
aaa
std
jmp
mov
inc
rcrl
ret
mov
cmp
orb
fs
movsl
inc
mov
ljmp
xor
mov
jnp
jnp
jno
jge
js
adc
lcall
jl
popa
sbb
mov
sbb
mov
pusha
shlb
xchg
add
pushl
xor
inc
out
dec
aaa
sub
cmpsb
push
push
pop
jne
mov
jo
xchg
and
xor
cmp
pushl
ja
aas
call
cmp
repnz
cmp
jg
test
cwtl
insb
add
sar
cmp
or
in
inc
jnp
and
call
dec
and
ret
pop
pop
out
cli
and
lea
sbbb
jmp
jle
jb
xorl
and
out
dec
mov
mov
dec
mov
mov
decl
inc
push
mov
pop
adc
mov
adc
adc
mov
ljmp
xchg
pop
jl
loope
incl
sub
xchg
aam
addr16
push
adc
sub
test
push
dec
out
call
cli
test
fsubrs
mov
bound
sub
jne
mov
fs
cmp
frstor
arpl
pop
mov
dec
in
pop
jmp
loope
in
out
xor
rcrb
outsb
pop
mov
arpl
inc
incl
inc
movsl
push
dec
cmpsb
outsb
lahf
dec
mov
add
incl
jb
jb
cmp
cmpsb
and
push
sbb
ret
push
and
lret
pop
loopne
push
mov
pop
mov
aas
adcb
in
ss
jp
xchg
cmp
add
and
data16
jb
inc
xchg
xchg
jp
cwtl
push
popa
inc
gs
and
cwtl
rolb
xchg
pushl
fsubs
mov
push
and
ljmp
jle
daa
xor
test
das
lds
fcoms
and
ljmp
ja
pop
xchg
mov
pop
mov
pop
cli
mov
ja
mov
jecxz
je
decl
adc
jg
adc
adc
xchg
add
mov
jg
test
mov
stos
push
jbe
add
push
fisubl
pop
je
gs
cmp
ret
mov
adc
push
cli
mov
and
aas
mov
jp
rcll
imul
decl
pushf
pop
xchg
mov
ds
jns
fstps
es
inc
push
sbb
add
push
and
js
pop
adcl
mov
bnd
mov
ljmp
imul
ss
adc
pop
imul
xchg
movsl
inc
call
xor
ret
jae
ret
sub
adc
mov
jge
pop
sbb
ljmp
push
out
xor
inc
test
cmp
decl
in
mov
pop
add
test
sahf
stc
push
sahf
test
and
jmp
adc
adc
lds
mov
ja
sbbb
xchg
scas
fldenv
xlat
ja
cli
xchg
push
sbb
jnp
jmp
or
xchg
push
loop
movb
stc
mov
pop
repnz
jo
pop
and
pop
aad
mov
xchg
sbb
mov
add
xor
aam
fcomp
daa
fwait
xchg
inc
in
decl
cs
push
sbb
inc
cmp
cwtl
test
pop
xor
mov
add
sbb
ret
push
popa
xor
xchg
pop
loope
jmp
daa
dec
notl
cmpsl
mov
jmp
imul
ret
xlat
push
frstor
pop
or
mov
popf
mov
jmp
lods
sub
mov
mov
dec
popa
xor
dec
subl
lcall
mov
jmp
ja
mov
xchg
les
mov
add
mov
lcall
xchg
cmp
or
pop
xor
mov
out
add
push
jmp
lea
aam
pop
roll
jge
stos
mov
mov
jne
mov
lods
les
mov
sbb
push
xorb
jae
popa
jl
clc
mov
out
xchg
das
clc
push
xchg
out
and
ja
cli
push
push
sub
push
lcall
lods
xor
push
pop
lcall
das
decl
jo
pop
nop
stos
outsb
dec
and
xor
dec
inc
inc
mov
int3
scas
ja
lcall
push
mov
dec
xchg
addr16
sbb
icebp
adc
orb
andl
out
leave
cltd
pusha
imul
mov
test
sbb
jns
popa
mov
pushl
lods
inc
pop
pop
mov
sahf
ds
xchg
mov
mov
dec
in
cmpsb
lock
sub
add
xchg
lret
das
shufps
icebp
cwtl
mov
xchg
test
pop
sbb
incl
cmp
mov
mov
push
dec
repnz
push
repnz
lds
pop
or
pop
mov
cmp
dec
and
mov
cmp
sbb
adc
push
ja
add
test
cmpsl
push
clc
fldenv
mov
inc
and
ja
jmp
in
jb
pop
cmp
es
lods
xchg
pop
pop
ret
lods
pop
outsl
pslld
mov
into
imul
inc
imul
pushl
cld
push
sbb
es
mov
stos
lcall
mov
aam
aas
decl
sbb
inc
mov
mov
sbb
and
divl
sub
mov
shll
xchg
mov
cwtl
adcl
imulb
test
loopne
out
push
mov
sub
sbb
fwait
imul
xchg
jg
mov
std
and
decl
mov
and
out
outsb
mov
lret
jmp
inc
jmp
aaa
sub
decl
or
sub
fwait
sub
int3
cmp
outsb
icebp
pop
cwtl
and
out
inc
hlt
xchg
and
cli
pushl
std
subl
imul
and
mov
hlt
mov
mov
mov
sahf
lea
jnp
jnp
test
fidivrl
mov
lahf
cs
mov
sub
inc
ds
lock
incl
out
aam
xchg
arpl
enterw
je
xchg
mov
scas
jmp
imul
xacquire
call
fldt
sbb
je
lds
push
js
fs
aaa
add
sub
subl
sbb
lcall
lret
mov
leave
stos
and
xchg
popf
cmp
adcb
sub
cmp
and
jg
xchg
push
xchg
dec
sbb
adc
les
inc
inc
in
mov
pop
sub
insb
std
add
pop
mov
test
xor
mov
fildll
repz
mov
mov
mov
aam
cltd
testb
jmp
mov
scas
xchg
popa
sar
ljmp
pop
sub
popa
mov
test
xchg
jle
ret
cwtl
adc
mov
call
sub
stos
pop
jp
jg
inc
cld
xchg
pop
rolb
pop
and
jmp
jg
decl
mov
push
adc
mov
xor
stos
pop
fnstenv
mov
jmp
xchg
dec
mov
pop
divb
xor
jnp
cli
dec
xor
mov
lea
cmpl
xor
pop
mov
push
into
out
int3
roll
aas
push
js
les
fstpl
push
fisubrl
mov
aad
cmp
push
mov
iret
sub
aad
adc
xor
lods
fmull
push
cmp
jb
or
pushl
fdivrs
push
sub
adc
mov
inc
push
int
scas
lods
xor
mov
adc
bnd
mov
movsb
lcall
dec
push
rcr
mov
or
cltd
ljmp
and
xchg
stos
aas
mov
jnp
stos
cltd
add
cmp
ss
dec
dec
movsb
jle
pop
mov
movsb
int
dec
sub
aaa
cmpsb
ret
pop
sub
mov
mov
push
dec
fsubs
dec
arpl
xor
adc
popa
lea
test
mov
decb
xchg
ret
mov
cmpsb
ss
fistpll
jae
orl
xor
aad
je
mov
jmp
xor
mov
mov
add
cmp
mov
dec
das
rcrb
cmpsb
cmp
cmp
and
fistps
jbe
insl
add
ljmp
loopne
mov
mov
lret
pop
xchg
pop
jo
xchg
push
push
adc
adc
incl
xchg
cmp
sbb
fsubl
popf
rorl
outsl
mov
fdiv
movsl
pushl
xchg
pop
int
movsb
pop
mov
jge
pop
or
jmp
sbb
stos
pop
leave
inc
mov
pop
popa
sbbl
mov
call
inc
mov
fcmovnb
add
xchg
xchg
adc
push
int
mov
mov
std
shlb
xchg
bound
faddp
incl
pop
pop
ljmp
push
jb
mov
add
push
jmp
add
fucomip
fcoms
outsb
xorl
inc
sbb
out
jp
fistpl
mov
fwait
sahf
adc
test
push
pushl
inc
cli
push
mov
jmp
and
adc
iret
fwait
xor
jmp
and
dec
mov
pop
icebp
lcall
sbb
in
int
les
shrb
ss
ja
fistl
cld
mov
aad
cs
pop
sbb
nop
aam
jg
jmp
jp
decl
cmpsb
or
lahf
mov
fcomps
out
or
out
jl
push
std
ljmp
mov
jmp
cmp
jbe
popa
xor
movsl
dec
std
push
push
xor
incl
adc
out
push
pop
pop
mov
adc
repz
dec
cli
decl
jns
dec
mov
xchg
jnp
jecxz
jecxz
les
fldt
push
dec
ljmp
and
pop
push
scas
imul
pop
insl
mov
decl
mov
add
sub
sbb
test
int
movsb
stos
pushf
stos
cli
inc
mov
hlt
cmc
sub
aam
lcall
xchg
loope
push
jmp
jae
cmp
mov
fisubrs
pop
out
add
jge
pushf
out
push
cli
test
adc
or
jle
and
jp
dec
cld
lds
ror
and
and
ljmp
mov
ja
xorb
insb
jecxz
push
lods
dec
dec
int
lret
dec
adc
cs
lcall
jbe
jns
fwait
mov
pop
push
test
push
sub
xor
shll
cli
add
mov
dec
leave
lods
test
cld
sub
pop
push
pop
test
cs
push
fldl
jno
push
mov
fistpll
aam
cwtl
jb
push
sub
lcall
mov
test
rcrb
add
sahf
ret
ljmp
clc
push
in
ds
fisubs
mov
jbe
outsl
fisttpll
xchg
hlt
push
jle
sbbb
push
jns
inc
dec
mov
xor
pop
sbb
mov
subb
inc
cwtl
incb
add
push
mov
push
and
pushf
cwtl
push
mov
cmpsb
add
xor
ljmp
jmp
sub
lcall
imul
mov
jg
repnz
and
rcrb
fistpll
sbb
test
push
stos
nop
adc
mov
mov
pop
aam
shlb
pop
mov
push
mov
pushl
in
bound
bound
jecxz
rcl
push
mov
mov
movsl
pop
rol
push
icebp
int3
push
ret
cmp
movsb
mov
push
ret
xchg
or
shl
or
out
dec
or
je
decl
and
incl
lods
or
hlt
ljmp
ret
sbb
adc
icebp
pop
cmp
fists
aas
inc
in
jb
pop
test
outsb
jl
hlt
out
xchg
pushl
pop
pop
cli
mul
mov
pop
paddb
loop
movl
mov
dec
loop
jmp
adc
cltd
mov
call
pop
push
add
iret
mov
and
and
dec
and
or
pop
lods
xlat
ljmp
xchg
xor
dec
and
xor
ret
jl
mov
repnz
mov
sahf
cmp
cli
pushl
ficoml
adc
test
stos
cmpsl
out
or
cmpsb
pushf
sbb
ljmp
clc
in
stos
lret
or
movsb
mov
call
cmpb
lcall
inc
jo
mov
cmpsb
std
test
ret
mov
fwait
mov
mov
insb
sub
xchg
shlb
xor
pop
dec
int3
sub
inc
mov
or
int3
insb
adc
test
jno
int
dec
cld
fbld
arpl
rorl
lcall
decl
jle
sub
ljmp
dec
xchg
xor
mov
mov
mov
cmp
pop
sub
fwait
into
shl
shrb
mov
loope
lcall
jb
push
mov
xor
ss
fnstenv
add
mov
ret
rclb
mov
bound
incl
push
cld
mov
sub
push
test
movsl
pop
daa
roll
aaa
lret
out
xchg
xor
sbb
mov
or
lret
fs
inc
add
bnd
jmp
shlb
int3
mov
ret
pop
dec
ret
sbb
call
repz
cs
inc
jg
ljmp
xor
adcb
fidivrl
sti
or
or
pop
sar
push
pop
out
xor
sarb
or
decb
aam
dec
inc
xor
dec
scas
xlat
mov
push
xchg
ljmp
popf
fidivrl
loop
sub
aas
add
cmc
jp
and
jns
cmp
pop
aad
stos
mov
mov
fwait
std
call
cmp
sbb
scas
jbe
leave
rcrb
dec
pop
push
popa
fdivrl
mov
mov
pop
or
jl
cwtl
ret
mov
xor
push
stos
lods
test
adc
subl
int3
mov
decl
ss
les
mov
xchg
adc
test
dec
aaa
stc
mov
dec
mov
inc
jae
fisubs
stos
mov
ret
push
notb
fsubs
jbe
sub
add
mov
je
dec
push
inc
popf
push
push
jle
shr
test
lods
into
enter
cmc
ljmp
ret
jecxz
imul
fimull
shll
pop
push
sbb
vcvtss2si
loope
aas
add
add
leave
fmul
add
sar
sahf
fcompl
add
ret
insl
cmovs
jbe
adc
leave
cmp
inc
add
out
orl
inc
xchg
call
in
xchg
repnz
jge
rcr
cmp
jae
stc
xchg
push
fwait
push
and
mov
mov
cmc
jmp
xchg
adc
push
jecxz
jecxz
rclb
stos
and
clc
int
pusha
mov
lret
push
push
and
cs
sbb
cmpsb
cwtl
pop
ds
cwtl
lea
xor
fldcw
test
ret
inc
sub
sub
sub
es
repnz
dec
xlat
push
adc
jle
imul
int
mov
mov
cltd
movsb
inc
and
dec
mov
pop
ret
lods
or
inc
sub
call
mov
add
push
test
mov
and
push
mov
mov
pop
leave
gs
dec
or
ljmp
fiadds
pop
daa
sbb
enter
pop
sub
dec
mov
stc
nop
jae
fwait
js
movsb
rolb
dec
dec
jg
sub
inc
mov
rorl
cwtl
test
jbe
gs
sub
shlb
mov
push
sbb
push
lahf
lret
mov
rcll
sub
mov
ret
adc
rol
jp
sub
adc
cmp
push
out
adc
call
sub
je
test
mov
xor
cmc
mov
mov
mov
xchg
dec
jmp
jl
jns
dec
mov
dec
add
jns
lods
bound
or
dec
inc
xchg
cmp
call
mov
sub
fbstp
push
mov
push
aad
add
cs
hlt
and
and
int
adc
data16
cmp
push
movsb
imul
mov
mov
dec
movsb
jg
jg
add
adc
insb
sbb
pop
dec
cmpsl
out
hlt
ljmp
sub
clc
mov
pop
je
mov
and
or
decl
pop
cwtl
mov
xchg
lds
outsl
add
enter
incl
jb
adc
lcall
inc
imul
data16
pop
xor
call
mov
mov
js
int
in
ja
add
orl
mov
cmp
pusha
sbb
xchg
fisttpll
dec
push
cmp
mov
pop
xchg
fidivl
sub
cmpsb
in
mov
pushl
or
lea
pushw
pop
xchg
lock
lods
pop
pop
imul
push
fwait
xchg
mov
xchg
lods
in
pop
es
dec
ficomps
outsl
clc
sbb
push
mov
jp
fs
xchg
pop
shll
inc
inc
call
ror
repnz
fcmovnb
adcb
jne
mov
decl
hlt
divl
sub
in
imul
sub
ljmp
lret
clc
decl
incb
imul
rcrl
xor
movsb
insb
sbb
nop
inc
xchg
push
pop
mov
pop
jmp
enter
shlb
fisttpl
adc
arpl
js
outsl
xchg
push
or
xchg
fsubrl
clc
call
popa
inc
popa
je
pop
and
sbb
pop
clc
rcrl
ja
jae
adc
cmp
pop
inc
sar
xchg
fdivrs
pusha
add
js
jg
dec
pop
loopne
cmp
dec
pop
subl
inc
sub
or
ljmp
or
pop
call
add
mov
push
cltd
pop
pop
fwait
loop
mov
test
or
in
int
push
dec
pop
pop
in
mov
jno
adc
ljmp
rol
push
shll
xchg
mov
aad
cmp
fistps
or
lcall
add
dec
loopne
outsb
sahf
cmpl
jnp
cmc
inc
or
add
dec
ss
xor
pop
xchg
jg
xor
ljmp
add
and
mov
les
outsb
jl
adc
stc
cli
mov
jmp
sub
mov
push
leave
pop
call
jno
aad
mov
aaa
rol
mov
in
xor
cmc
aam
adc
push
xchg
es
aas
sub
ror
imul
or
insb
inc
push
or
stc
push
add
je
xor
int
lea
cltd
push
aad
sub
sti
sbb
mov
loop
ljmp
imul
adc
popa
mov
adcl
jl
icebp
fldl
mov
out
dec
add
and
hlt
mov
mov
inc
and
lods
rorl
xor
jl
cmp
adc
incl
pop
inc
sub
add
sbb
ljmp
out
ljmp
adc
jb
xor
inc
pop
push
push
and
cmpsb
cmp
popa
xchg
xchg
cli
mov
out
pop
in
adc
test
mov
add
mov
mov
lcall
or
pop
lea
mov
arpl
mov
aaa
test
mov
mov
xchg
or
xor
inc
mov
mov
movsl
adcb
lcall
jp
and
xchg
mov
daa
in
jae
out
push
sub
or
arpl
enter
pusha
mov
rorl
test
add
sti
sub
bound
pushl
test
mov
lret
xor
lock
fnstcw
cmp
mov
push
daa
mov
lods
mov
adc
xchg
xchg
adc
jmp
mov
cwtl
aaa
ficompl
xchg
rcl
or
jg
and
out
dec
xchg
out
lret
sub
add
xor
ljmp
dec
mov
xchg
dec
mov
imul
mov
loope
cmp
cmp
test
mov
dec
mov
leave
xchg
out
ja
cli
jmp
jp
ss
scas
mov
inc
mov
xor
jmp
adc
cli
ret
test
jb
les
or
sbb
xchg
scas
lds
or
cmp
jge
mov
and
push
and
and
popf
pop
or
sbb
add
loop
sbb
inc
add
cmc
jg
aam
push
or
sarb
push
sahf
outsb
push
jg
jp
cs
or
push
pop
or
pop
sbb
in
sahf
popf
pusha
mov
pop
hlt
pushl
sub
mov
lret
or
mov
pop
mov
clc
pushl
call
inc
xchg
bound
arpl
mov
sbb
jmp
dec
das
inc
test
inc
lods
xor
mov
fistpl
dec
dec
fwait
add
add
mov
sub
pop
std
call
cmpsb
inc
jecxz
icebp
inc
cli
xchg
mov
stos
mov
dec
mov
jg
mov
or
mov
cltd
loope
sbb
sbb
adc
push
push
pop
mov
add
pop
in
mov
xchg
inc
and
int3
sub
mov
xchg
lcall
mov
enter
aam
mov
pop
xor
mov
sub
shll
aas
push
sbb
lret
imul
stos
dec
xchg
xchg
mov
ret
ss
mov
cmp
mov
adc
lcall
sbb
sbb
enter
mov
mov
insl
adc
and
dec
sbb
add
jg
int3
sub
mov
cwtl
inc
mov
xchg
dec
sub
mov
sbb
fldenv
sti
adc
sub
pushl
push
lcall
push
sbb
mov
int3
adc
sub
incl
adc
mov
movsl
cmp
xor
in
mov
mov
out
sar
decl
inc
lods
dec
cli
shlb
test
iret
enter
cli
lret
popa
mov
jge
ljmp
mov
jns
mov
imull
mov
loop
aam
lcall
aas
cmp
daa
arpl
add
shll
mov
mov
ljmp
xor
mov
mov
inc
pop
jb
xchg
test
adc
daa
xor
sti
rolb
cmp
sti
push
adc
mov
or
test
mov
and
pop
cmp
decl
dec
ja
ds
cltd
fcom
pop
or
xor
mov
mov
xchg
xchg
lcall
fisttpl
push
lock
int
mov
dec
enter
pop
incl
xor
gs
push
ss
fwait
pop
movsb
xchg
dec
or
push
and
dec
fldl
xchg
add
aad
ret
cmp
mov
cmp
push
inc
popf
movsb
cmp
mov
aas
sti
push
adc
dec
inc
out
dec
mov
dec
sbbb
adc
xor
push
xor
in
mov
xchg
sbb
stos
movsl
int3
movsb
mov
fnsave
incb
lds
decl
mov
cmpsb
cmc
jns
sbb
stc
insb
leave
int
leave
sbb
aad
add
decb
mov
in
xchg
loope
lcall
adc
xor
adc
xor
leave
call
es
cmpsl
and
stos
test
cli
dec
lcall
cmp
ret
lods
icebp
lods
jmp
ror
sti
mov
je
mov
ljmp
mov
sub
and
cmpb
mov
xchg
pop
cld
jl
and
mov
pop
scas
sub
aam
incl
pushl
ds
mov
adc
xor
inc
ficomps
aam
test
mov
sub
push
inc
outsl
cmp
xchg
adc
mul
aaa
rcr
sbb
cmpsb
ljmp
test
inc
pop
sub
pop
jle
cmp
je
stos
sbb
jmp
and
icebp
decl
rol
mov
xchg
shll
xor
lcall
out
test
rorl
cmp
sub
sbb
stos
inc
xor
lea
cmp
dec
rcl
mov
pushf
mov
xor
ret
ret
sbb
sbb
dec
xor
loopne
lods
mov
ljmp
fimull
iret
lret
mov
jg
jo
inc
push
sub
cwtl
adc
lock
or
mov
cmpsb
jecxz
sahf
shlb
decl
cltd
rcrl
mov
mov
xor
sbb
lcall
ljmp
aad
xor
or
popf
je
mov
popf
mov
pop
cmp
inc
and
stc
cmp
nop
int3
push
push
shlb
filds
loopne
sbb
aam
push
imul
ror
jbe
or
and
jg
push
je
dec
pop
xchg
lea
ret
ss
push
and
ret
sub
seto
cld
lcall
insl
arpl
jns
rclb
pop
dec
icebp
test
rcll
aaa
movsb
push
sbbl
adc
in
or
and
add
mov
inc
pop
dec
jne
dec
gs
test
mov
ja
cmp
nop
pop
add
pop
push
cmp
int
call
pop
cmc
bound
xchg
es
dec
mov
lret
pop
sub
pusha
popf
or
jecxz
pushl
cmp
mov
rorl
sub
daa
in
xchg
jnp
adc
movsb
inc
aaa
sub
loope
lcall
and
sbb
sub
pop
ret
rclb
dec
xor
test
jle
mov
adc
pop
add
pop
lods
adc
sar
incl
scas
std
cmp
add
sbb
fsubrs
btc
call
or
fs
cmc
xlat
add
push
adc
push
inc
mov
js
cmpsb
push
std
rorb
push
or
mov
xor
pop
mov
push
mov
adc
popa
test
mov
hlt
movsl
or
pop
lret
insb
aad
repnz
add
lcall
lea
aaa
mov
mov
or
gs
sub
cmp
loop
fbld
lea
fiaddl
sbb
pop
cli
mov
aad
sub
pop
sub
sub
xor
scas
fcomps
inc
jb
iret
repnz
ljmp
hlt
sbb
ficoml
xor
jb
jge
out
stos
fstpt
xlat
lock
lcall
adc
cld
call
dec
cmp
xchg
inc
ds
sbb
pop
je
push
fcmovu
int3
inc
push
push
fisubs
decl
mov
push
xchg
inc
es
enter
cltd
sbb
gs
xor
popa
sbb
int
lds
pop
std
es
fistl
loopne
xchg
lret
cwtl
mov
imul
fstps
loop
mov
mov
push
fcompl
adc
aad
loop
dec
fucomp
jbe
mov
mov
outsl
aad
push
or
push
cld
jbe
xlat
xchg
mov
xlat
xchg
cmpsb
dec
scas
clc
jmp
fnstcw
xchg
push
cmp
iret
and
pop
sbb
mov
xchg
cmp
fldl
or
aaa
std
jmp
leave
ficoml
sahf
adc
lret
mov
cmp
scas
mov
mov
adc
loopne
mov
lret
cmp
mov
jecxz
sub
adc
mov
inc
rcrl
rcrl
shrb
insb
xchg
or
in
adc
scas
loope
shl
lcall
sbbl
sarl
mov
ss
xor
daa
and
mov
or
sub
in
sbb
mov
icebp
sbb
mov
mov
ljmp
hlt
push
nop
jne
jmp
adc
lock
jmp
lods
sub
ret
test
in
pop
stc
or
inc
pushl
adc
cmpsb
test
mov
mov
stc
insl
sub
push
in
dec
mov
cmp
ljmp
xor
loopne
lods
or
ss
cs
jmp
outsb
cmp
mov
cmp
popa
mov
lds
adc
dec
in
cmp
ret
sub
dec
mov
scas
ss
xchg
jl
jg
testb
ffree
and
mov
popa
clc
popa
jmp
insb
or
jmp
out
ret
cmpsb
pop
inc
or
lock
ljmp
pushl
std
lcall
out
repz
xor
sahf
mov
clc
jle
popa
mov
push
ror
pop
sbb
imul
mov
mov
icebp
cwtl
inc
stos
pop
push
push
ds
xor
nop
ja
pop
inc
xlat
or
lcall
adc
inc
shl
mov
sbb
or
ss
lcall
push
push
ss
bnd
dec
pop
stos
outsl
cltd
mov
and
aad
hlt
outsl
fs
fistpll
mov
fisubl
shll
lcall
jg
out
std
mov
mov
leave
push
jmp
into
loopne
ja
into
pop
cmc
mov
out
jg
lcall
jae
mov
sub
and
dec
loopne
push
push
adcl
shrl
call
or
adc
jb
push
scas
inc
sbb
push
jmp
int
les
push
lcall
test
adc
rol
sar
jmp
ja
mov
dec
jne
adc
enter
sub
inc
into
inc
push
jno
pop
mov
lcall
in
sbb
add
jno
xor
sbb
popf
pushf
stos
loop
mov
leave
or
and
shll
movsl
pop
daa
lds
lret
push
sbb
imul
mov
call
mov
and
pop
loop
lret
xor
sbb
pop
push
andl
lods
repz
lcall
cmp
addl
lret
sub
insl
mov
scas
in
mov
sbb
push
push
push
xor
mov
lock
inc
jmp
dec
dec
or
mov
lods
sar
outsb
pop
popfw
lcall
clc
add
mov
mov
jne
test
sbb
in
xor
sbb
icebp
xchg
jecxz
decl
lea
or
cmpsl
mov
mov
hlt
in
movsl
dec
daa
push
mov
ljmp
cmpsl
outsl
add
cli
hlt
hlt
push
mov
aas
or
in
dec
sar
jmp
hlt
mov
out
inc
cmp
add
cwtl
mov
dec
adc
ret
xchg
rorb
cld
ljmp
cmc
ja
dec
mov
or
aaa
dec
jbe
xor
jg
jp
scas
jl
lea
inc
orb
loopne
push
or
lret
aam
push
les
mov
rolb
jg
push
punpckldq
inc
bound
push
andb
dec
mov
dec
xchg
pop
xadd
cmp
inc
cmpsb
dec
cltd
inc
inc
loop
sub
sahf
cmp
xchg
mov
or
out
clc
movsb
daa
xorb
or
push
mov
push
lds
inc
and
inc
decl
shlb
xchg
pop
push
in
pop
mov
lods
cwtl
xor
mov
sub
cli
clc
sti
pop
insl
pusha
dec
and
js
jecxz
mov
aaa
outsb
push
xor
xchg
pop
pop
sahf
int3
push
mov
pushl
mov
xor
fimuls
and
xchg
xor
in
and
std
pushl
insb
push
push
pop
add
mov
mov
ret
cld
mov
jns
loope
cmp
les
lods
inc
xor
hlt
lods
fmull
dec
test
cmp
icebp
cmp
pop
push
adc
pop
sbb
shrb
aas
mov
sub
jmp
add
or
xchg
pop
dec
adc
cmpb
push
dec
ss
fdivr
ljmp
adc
je
imul
movsb
popf
xchg
aad
dec
jg
mov
push
and
test
jmp
pushl
jb
popa
push
dec
push
cmc
xchg
pop
fidivrs
int
arpl
std
je
add
movsl
dec
push
int
decl
jnp
icebp
test
pusha
test
call
xchg
push
dec
stc
fdivrl
in
movsl
inc
lcall
xor
lds
and
inc
rcrl
decl
aaa
fwait
imul
lds
lcall
push
dec
pop
push
mov
jbe
adcb
fisttpll
cs
jecxz
add
ljmp
push
movsl
movsl
xchg
ss
push
pusha
inc
decb
aam
lcall
loopne
adc
leave
nop
pop
stos
mov
inc
scas
bound
pop
or
cli
lcall
sub
imul
cmpsb
mov
lcall
dec
decl
mov
cmp
insb
mov
pop
and
inc
cmc
dec
adc
or
cmpsl
mov
in
decl
lods
gs
push
sbb
xlat
nop
imul
push
test
ljmp
test
lcall
xor
pop
cld
pop
sbb
jo
lret
dec
sbb
stc
daa
jno
cs
sbb
mov
dec
data16
jg
mov
cld
lcall
addr16
push
dec
call
call
cmpb
jg
mov
mov
ja
fistpl
cmpsl
std
pop
sub
sub
jl
aaa
mov
mov
popf
leave
push
nop
adc
inc
pop
add
les
mov
mov
jb
sub
pop
cmp
mov
inc
decl
test
lret
movsb
adc
movsl
rclb
call
sub
xchg
push
nop
jb
ljmp
mov
in
sbb
inc
cmpb
sub
arpl
mov
lock
dec
xor
test
ss
outsb
cmpsb
jbe
push
jmp
dec
xor
push
cli
lahf
adc
and
sbb
mov
fadds
call
xor
lret
adc
aas
cmpsb
popf
ja
cli
adc
inc
popf
pop
xor
xchg
mov
cmpb
fs
pop
inc
ds
pushf
sbb
adcb
mov
addr16
call
es
mov
aam
mov
adc
iret
insl
in
bound
mov
push
push
call
push
mov
xor
inc
sti
lret
roll
xlat
movsl
mov
cmp
rcrb
lcall
roll
or
test
cmp
jge,pn
inc
or
sub
push
jg
cwtl
and
cmp
jp
imul
adc
xlat
add
pop
es
movl
out
or
and
mov
adc
leave
mov
mov
jecxz
mov
call
xor
cli
jo
push
into
push
pop
bound
adc
inc
imul
lcall
mov
add
pop
push
shll
mov
enter
mov
lea
sbb
inc
aad
xor
mov
inc
test
cmp
loopne
inc
add
push
mov
jo
or
pop
jg
pop
xchg
push
lds
mov
push
cmp
lcall
mov
xor
cmpsb
push
sbb
nop
fmuls
add
jp
xor
mov
push
mov
and
pushl
cmc
call
dec
repz
stc
lret
pop
push
jne
movsl
mov
and
jno
dec
or
sub
pop
sub
push
popf
push
jmp
push
add
cmp
lds
mov
fisubs
mov
dec
or
add
add
pop
mov
lret
xor
pushl
mov
push
shl
dec
cltd
dec
adc
daa
imul
mov
cmpsb
or
pop
gs
xchg
les
jo
and
andb
pushl
sbb
and
leave
cld
lea
cmp
push
mov
movsl
push
push
mov
mov
cmp
fisubrl
pushf
loopne
xchg
add
ja
mov
call
repnz
lcall
movsl
adc
les
jae
and
cmpl
add
aad
mov
mov
call
fisttpll
dec
xchg
sub
jnp
dec
rol
xchg
mov
sbb
pop
sti
cli
and
clc
and
lods
das
push
psubb
sbb
insl
fidivrl
xlat
xor
ss
xor
je
lcall
test
por
cmpsb
loop
mov
fists
cmc
mov
into
mov
and
jmp
mov
push
mov
ja
or
in
inc
xchg
mov
inc
decl
and
adc
test
pop
into
lret
inc
nop
pop
or
jle
add
jmp
ret
sbb
cmpsb
cmpsb
push
mov
pop
dec
aam
imul
sbb
mov
pop
or
stos
sar
ja
or
into
sub
rorb
sub
loop
pop
jl
cwtl
mov
cmp
and
ret
mov
mov
and
adc
in
scas
jo
pushl
cld
push
fdivrp
xor
cmc
lret
cmpsl
int3
ja
cld
cltd
jae
sbb
add
lods
mov
rorl
aaa
mov
mov
aas
sbb
sbb
mov
scas
jno
jmp
mov
lahf
mov
fisubrl
ljmp
cli
fstp
push
adc
mov
add
jae
sbb
jmp
xor
or
add
ds
lods
nop
call
xchg
dec
jae
inc
loopne
jmp
ljmp
jl
sbb
push
dec
lds
mov
call
outsb
sbb
leave
mov
sti
push
cmpsb
out
jmp
xor
rol
jmp
call
push
sahf
mov
imul
cmp
cli
xchg
xor
incl
jp
push
add
dec
std
scas
scas
push
fstpt
sar
incl
pop
stos
mov
push
data16
xchg
jmp
pop
inc
ret
data16
clc
cmc
scas
out
popa
std
jg
outsl
push
out
xchg
fdivr
movsl
mov
jl
dec
in
jg
sub
pop
ficoml
push
xchg
das
xor
pop
push
or
jecxz
sub
mov
aaa
lea
jg
scas
ljmp
add
dec
out
mov
dec
out
or
notb
jo
push
ja
int3
mov
sbb
decl
ja
lret
lret
pop
xor
mov
test
sbb
push
lcall
xor
aaa
mov
or
pop
shrl
cmp
loope
mov
lcall
pop
andb
sbb
out
outsb
jae
ret
and
scas
pause
xchg
cli
cmp
decl
dec
shl
or
loopne
sub
cmp
xor
flds
push
inc
xchg
jmp
call
mov
andl
rorl
lea
mov
popf
cwtl
cmpsl
sbb
decl
bound
rcll
sbb
out
pop
jmp
push
lods
sti
scas
hlt
sti
fstps
dec
in
mov
jmp
ffreep
decl
pop
leave
or
mov
outsl
lods
push
aaa
dec
mov
fwait
add
fidivrl
inc
dec
push
out
sub
outsb
sbb
sbb
dec
xchg
decl
mov
add
mov
ret
mov
mov
out
mov
idivl
roll
sub
fisubl
loopne
mov
push
push
xor
mov
add
ficoms
pop
mov
sbb
xchg
mov
idivl
mov
lods
fsubrp
inc
sub
rolb
cli
jns
sub
test
dec
clc
aam
cwtl
fcoml
cmc
push
out
sub
push
decl
lahf
jmp
jmp
push
inc
sbb
inc
sub
jns
lods
push
or
jns
repz
and
pushl
incl
je
mov
loopne
jge
push
push
fcmovu
push
fldt
push
dec
leave
or
iret
aad
pushf
pop
cmp
int
rcl
popf
ret
std
stc
fcos
call
pop
mov
dec
inc
jne
mov
inc
fldt
int3
xor
inc
jge
xlat
jno
and
mov
inc
jmp
inc
nop
movsb
adc
push
adc
xchg
idivb
pop
js
lcall
loop
mov
mov
stos
lea
int
ja
sahf
mov
test
and
std
push
fwait
add
or
mov
loopne
sarl
xchg
and
dec
into
lcall
push
repnz
inc
dec
dec
adc
inc
adc
insl
mov
popa
adc
nop
aam
iret
xchg
shlb
rcll
inc
std
jg
int
mov
sti
cmp
cwtl
dec
addr16
aam
sub
in
pop
shl
sbb
lock
mov
call
jmp
popa
jo
and
cld
les
add
lcall
inc
and
test
movsb
xor
mov
push
fcomip
jg
xchg
mov
lds
sbb
lds
jge
pop
xchg
lahf
sbb
out
and
push
mov
sub
mov
push
sbb
or
bound
pop
std
mov
nop
repnz
cmc
sbb
jecxz
cmp
lret
jno
lret
sub
scas
adc
xchg
int
mov
iret
adc
lret
repz
xchg
cmp
sub
adc
sbb
hlt
popf
and
mov
orb
movsb
dec
js
or
sbb
push
jmp
jno
orb
mov
fisubl
cmp
and
push
rolb
mov
addl
jg
movsb
lcall
push
jns
ja
and
inc
jg
inc
std
sbb
gs
mov
pusha
dec
sti
jl
cmpsl
aad
pop
incl
rorl
aad
pusha
mov
or
sbb
inc
insl
xor
call
int3
sub
sti
shl
shll
pop
or
pop
jno
lahf
xchg
or
call
jmp
std
in
sbb
add
jge
vmread
cwtl
std
test
pushf
mov
push
pop
sbb
mov
inc
adc
mov
movsl
push
je
push
std
pushl
fdivrs
dec
cmp
xchg
cmc
mov
movsl
mov
shll
lock
fists
pop
pusha
or
pop
fs
mov
mov
push
add
push
xor
push
cmp
loopne
enter
addr16
inc
call
fcmovnbe
dec
in
xchg
shlb
push
pop
mov
inc
movsb
pop
mov
jns
or
push
sahf
outsb
mov
sub
push
and
fisubl
dec
in
hlt
cli
mov
jmp
pop
scas
or
cmp
rcr
mov
pushl
or
sbb
xlat
sbb
or
popa
arpl
data16
popf
pop
aaa
jns
mov
jmp
mov
mov
jns
iret
cwtl
xchg
jmp
cmp
or
pushf
push
dec
xchg
mov
out
and
and
shlb
fimuls
mov
push
mov
mov
decl
add
shlb
cmpsl
dec
ficomps
ljmp
push
or
xor
imul
movsl
xchg
idivb
pop
test
pop
sub
gs
movsl
xor
mov
xor
mov
add
sahf
popa
incl
add
pushf
stc
lcall
ficomps
jg
jmp
and
mov
js
mov
fnstenv
js
pop
sbb
int
bound
push
fabs
out
pop
xor
mov
leave
pop
rorb
decl
out
and
push
es
mov
or
mov
ficoms
mov
push
mov
push
cmpsl
movb
push
fdivrs
pusha
adc
mov
sbb
dec
mov
rcrl
out
jmp
outsl
or
mov
ljmp
mov
add
rol
rcrb
cmpsl
xchg
adc
mov
std
decl
popa
adc
xchg
popf
cli
xchg
push
push
mov
adc
js
call
icebp
imul
lea
fcom
aad
loope
jle
bound
pop
adcl
mov
hlt
gs
shrl
adc
fwait
popa
jecxz
aas
push
or
mov
stos
mov
pop
hlt
sar
fimull
xor
xchg
mov
les
test
decl
call
loop
jb
mov
and
mov
mull
incl
adc
mov
mov
push
aad
insl
mov
sbb
sbb
push
rcrb
sub
inc
sub
mov
pop
fwait
hlt
movsl
popf
xor
push
fstpl
dec
xlat
lret
xchg
push
das
add
cmpsb
test
sub
cmc
add
ds
aam
pop
lcall
stos
dec
imul
jg
sub
mov
cld
fbstp
mov
out
push
out
pop
loop
xor
in
ret
inc
cmp
outsl
mov
ja
cs
or
mov
mov
fnstcw
test
xchg
pop
xor
imul
mov
push
and
pop
pop
out
push
shll
mov
ljmp
or
mov
or
scas
insl
ljmp
cmpsb
lahf
dec
std
ljmp
pop
icebp
cmp
or
adc
jno
fisubs
repnz
adc
push
outsb
mov
jo
test
sbb
jmp
lds
xchg
stos
and
decl
mov
lret
fisubl
idiv
ljmp
cmp
outsb
ret
ljmp
fwait
loopne
stos
loope
inc
pusha
xor
xor
cmp
ds
cmpsl
or
fcomps
cmp
and
inc
mov
lds
aad
xchg
stos
data16
pushf
mov
test
xor
enter
idivl
shrb
sub
mov
int3
add
xor
mov
fs
mov
push
in
cmp
adc
mov
das
aas
das
mov
ss
jecxz
out
stos
aas
xor
sahf
fdivrp
push
sti
mov
clc
decl
ljmp
inc
sub
popf
jp
or
sbb
ljmp
inc
enter
pop
orb
add
call
adc
adc
decl
div
pusha
push
insb
rcll
push
sub
sbb
and
pop
inc
incl
mov
pusha
sub
push
jbe
and
mov
push
jmp
mov
leave
xchg
push
inc
jae
jecxz
leave
sbb
inc
es
xor
xchg
outsb
xchg
add
ljmp
insb
pop
repnz
std
lods
cmp
int3
dec
jg
das
daa
mov
sbb
sub
out
aam
mov
mov
decl
mov
fstpt
movsb
cmc
cltd
je
shll
mov
mov
xchg
mov
call
sub
iret
cmp
pop
inc
dec
or
adc
popf
sub
add
pop
xlat
mov
icebp
add
nop
add
loope
call
mov
push
daa
dec
lret
mov
pop
test
call
call
pushl
in
in
lret
movsl
and
or
jbe
fdivrl
cmc
fsubrs
dec
cmpsl
xor
shll
sub
out
pmaxub
push
imul
lock
inc
jno
pop
jae
or
and
xor
ljmp
jg
outsl
add
data16
mov
push
insb
imul
sahf
mov
push
ss
stos
jmp
arpl
mov
inc
nop
jb
jge
mov
and
mov
pop
xchg
or
or
cld
xchg
test
fidivl
add
repnz
sub
and
divl
icebp
cmp
add
roll
dec
add
in
ljmp
mov
lods
out
xchg
addl
xor
stos
push
inc
ljmp
popa
jecxz
push
push
lock
gs
xlat
mov
mov
in
scas
cli
imul
shlb
dec
nop
pop
das
mov
or
ret
clc
jmp
pop
pop
arpl
mov
cli
xor
stos
js
pushl
xor
jo
out
call
shlb
pop
scas
fnstcw
cmp
nop
push
push
xchg
sbb
mov
push
pop
mov
lahf
sub
add
push
das
xchg
insb
pusha
lcall
sbb
mov
dec
stos
lsl
outsb
jmp
mov
es
or
inc
jmp
sub
dec
add
inc
in
pop
out
mov
incl
sub
and
xchg
cli
dec
aad
pop
cld
incl
arpl
inc
push
dec
jmp
push
jg
enter
call
icebp
cld
frstor
repnz
ja
mov
add
div
lret
pop
sub
jecxz
popa
push
sbb
jno
stc
std
lcall
mov
jbe
sti
popf
push
push
jg
mov
les
jmp
inc
test
loope
xchg
icebp
mov
fcmovb
sahf
and
mov
call
call
pop
or
test
ljmp
pop
xor
fwait
and
mov
add
and
dec
inc
pop
add
sub
or
mov
mov
push
les
push
cmpsb
cltd
ljmp
mov
or
jmp
mov
cmpsl
push
fiaddl
jg
sahf
pop
mov
push
mov
or
adc
jl
sub
int3
and
scas
cs
cmp
fstps
test
pop
pop
jmp
int
decl
in
lock
aaa
sahf
scas
sbb
xchg
jbe
push
sbb
adcl
aaa
enter
divl
mov
fdivrp
fucomp
sbb
lret
adc
lcall
jle
or
pop
shll
icebp
mov
loope
mov
add
pushl
mov
pop
int3
or
dec
mov
adc
push
pop
xchg
inc
outsl
lcall
adc
scas
dec
xlat
je
std
mov
vcvtsi2sdl
sub
test
lods
test
aaa
adc
stos
add
fcomi
mov
stos
mov
push
add
pushl
dec
cmp
xor
mov
repz
cmp
lret
and
fwait
mov
int
addr16
jp
dec
lcall
dec
xor
dec
test
fsubrp
push
stos
sahf
into
pop
pop
pop
mov
jg
dec
pop
decb
push
fistps
add
and
adc
push
mov
loopne
jg
out
out
adcb
lock
xor
inc
stc
or
popa
adc
out
push
inc
adc
adc
rolb
xorb
dec
push
lcall
add
sub
mov
add
mov
incl
push
jns
or
inc
fs
xchg
and
inc
test
jne
dec
add
and
into
pop
dec
ret
mov
sub
cmp
inc
shlb
ljmp
adc
shlb
cmp
je
pop
xor
mov
cmp
cmpsl
dec
mov
leave
jle
cli
aad
movsb
inc
jge
lcall
push
or
into
cmp
dec
mov
push
cwtl
jle
dec
inc
sub
inc
test
loope
arpl
cmpsb
incl
pop
mov
inc
mov
jae
popa
pop
or
push
cmp
cmpsl
arpl
mov
jle
dec
rol
push
xchg
mov
or
mov
mov
jg
outsl
stos
notb
or
xchg
scas
sbb
jmp
shrb
popa
addr16
push
mov
mov
divb
fdivrp
cli
loope
call
mov
icebp
ja
jl
mov
dec
mov
incl
or
sbb
dec
mov
scas
iret
jo
dec
ret
hlt
call
jmp
jmp
xchg
jb
nop
movsl
lcall
adc
mov
call
lret
mov
push
test
stos
andb
mov
jl
mov
scas
mov
or
mov
cmpsl
test
mov
loopne
scas
pop
push
pop
out
ret
loop
xlat
push
inc
int3
xor
pop
hlt
decl
or
ret
or
xor
iret
and
mov
int3
sub
push
xor
dec
inc
lods
movsb
aaa
xor
repz
cwtl
xchg
pop
scas
push
stos
inc
mov
sbb
pop
dec
mov
pop
test
mov
dec
lds
jl
mov
jbe
fdivs
incl
shlb
ret
adc
std
and
aas
add
jg
imul
cmp
xor
xor
sbb
push
fld
fcmovbe
rcrl
fisttps
adc
inc
maskmovq
negl
leave
movsl
shlb
xor
call
sub
aaa
inc
jno
lret
sahf
xorb
inc
xchg
or
jbe
insb
stos
pop
aas
popf
xchg
call
fnsetpm(287
mov
mov
xchg
lods
les
int
ret
cmp
xchg
dec
mov
dec
xor
clc
ja
sub
insl
dec
lcall
xchg
loop
sar
decl
out
aaa
fisttpll
aaa
jno
test
mov
xchg
xchg
mov
mov
into
test
rolb
ja
sub
cs
pop
aad
clc
jg
call
sti
mov
iret
aam
sbb
push
gs
in
xchg
clc
mov
xchg
lds
inc
ljmp
sahf
inc
mov
add
push
ret
or
adc
stos
negb
xor
lods
mov
inc
loopne
pushf
push
pop
pextrw
es
mov
decl
inc
mov
dec
jp
bound
ja
es
fcompl
pushl
and
add
mov
rol
fcoml
mov
cmp
push
insl
loopne
decl
mov
ss
stos
fsubs
xor
decl
insb
insb
push
fistpl
pop
pop
xchg
jnp
xor
ljmp
inc
pop
movsb
icebp
inc
inc
xor
pop
cmpb
shr
int
out
push
addb
pop
or
aaa
mov
push
and
cmp
cld
sti
insb
in
cmc
push
pop
test
lahf
orl
test
xchg
jg
mov
test
cmp
out
and
push
fcmovnb
movsb
push
repnz
xor
mov
push
xchg
pop
mov
pop
rolb
pop
loop
xlat
push
js
xchg
lds
fdiv
mov
mov
cld
jmp
dec
jle
sub
out
outsb
jns
inc
inc
pop
fwait
sub
adc
rcpps
xor
sti
cwtl
jmp
jecxz
loop
incl
mov
push
adc
jle
pop
lds
dec
popa
push
les
lcall
in
xchg
repnz
scas
mov
jae
sbb
dec
pop
fwait
add
lcall
js
pop
push
idivb
aam
xchg
lcall
jno
negb
push
jg
jb
lods
or
divl
cmp
loopne
pushl
mov
loopne
mov
sub
cltd
test
loopne
test
and
adc
out
outsl
pop
in
mov
shl
inc
or
jnp
fistps
push
and
jmp
mov
cmp
cmp
fwait
xor
push
andl
pop
mov
popa
jle
and
sbb
arpl
movsl
add
sub
and
fistpl
lea
fs
call
inc
push
in
push
mov
mov
ljmp
push
push
ret
push
sti
pop
cmpsl
lret
pusha
xchg
sub
cmp
mov
jmp
aas
add
imul
adc
push
insw
in
cli
add
notl
aam
scas
js
push
xchg
enter
cmp
pushl
adc
inc
inc
aaa
cmp
xchg
sbb
dec
xor
vandnps
dec
bound
jo
xor
decl
cltd
repnz
adc
or
fcoms
popf
cmp
decl
jb
mov
and
ret
into
adc
xor
cmc
sub
into
push
sbb
jmp
inc
mov
hlt
pop
or
popf
or
lcall
jae
sub
call
or
cld
sahf
cmp
sbb
jg
xchg
pop
fiadds
test
mov
sti
sbb
rclb
movl
mov
loop
dec
push
loopne
sbb
decl
fdivrs
mov
gs
or
shl
aad
jo
arpl
jae
call
pop
push
aam
mov
jb
imul
fs
fwait
call
mov
test
push
xchg
es
or
pop
pop
jmp
cmpsb
shll
xchg
sarb
or
mov
lods
inc
aad
adc
aaa
xchg
fisubrl
mov
xchg
lcall
or
mov
lahf
int3
inc
push
scas
sub
jmp
cmpsb
or
xor
mov
ficoml
xor
loop
rolb
lcall
inc
movntps
in
xchg
dec
jns
cmp
cmc
push
rorl
jo
jg
imul
stc
pop
flds
inc
mov
jge
and
lods
sahf
cmpsb
xchg
leave
xchg
add
ljmp
lret
sbb
sbb
cmpsl
loopne
test
jg
push
lret
sbb
cmp
pusha
or
test
mov
jb
sbb
pop
sub
addr16
and
xor
sbb
jg
xor
adc
push
clc
loop
lcall
nop
lret
pop
les
sub
inc
js
xor
es
add
ljmp
inc
jmp
sbb
mov
push
lea
clc
adc
shr
cmp
hlt
test
lcall
mov
pop
or
mov
fadds
xor
pop
xchg
aam
mov
hlt
in
mov
sub
and
incl
or
stos
shrb
icebp
jp
out
aad
int
mov
in
jmp
jg
out
popa
mov
and
sbb
add
popa
ffree
stos
cmp
stos
jnp
in
mov
cmp
xor
pop
mov
cli
dec
mov
sbbb
pusha
cmp
jmp
mov
inc
sub
inc
and
ret
movsb
sub
push
xor
int
push
repz
mov
add
test
nop
loop
jg
xor
pop
cmpsl
xchg
mov
dec
xchg
sub
and
and
mov
rorl
xchg
bnd
lcall
fistps
mov
scas
xchg
fucomip
lret
fstps
ljmp
jg
in
push
or
cmp
mov
mov
sub
fcomip
pop
mov
jge
imul
fdivrs
sbb
stos
lds
popa
mov
push
pop
rcll
rcl
push
cld
jmp
lock
jge
inc
icebp
hlt
pop
icebp
ljmp
fs
inc
jge
push
andl
lea
movsl
pop
out
and
stc
jno
push
fmull
call
fimull
into
sbb
idivl
dec
ret
cmpsb
pop
xlat
fs
jnp
mov
stos
dec
fcmovu
dec
movsl
sub
xchg
stos
mov
cmp
mov
mov
xchg
cmc
incl
or
mov
mov
sub
jb
decl
and
mov
mov
je
fstsw
jmp
fwait
jg
mov
mov
movsl
lods
pop
dec
pop
imulb
xchg
mov
pusha
cmp
lret
lcall
out
lock
hlt
rolb
jmp
sub
cld
jecxz
test
ss
incl
fisttpl
call
dec
loop
lret
icebp
cmp
ss
and
or
clc
mov
das
pop
jbe
mov
dec
pop
pushw
jp
xchg
decl
adc
sub
mov
sub
test
addl
fs
jnp
cli
inc
clc
fisttps
jo
bound
mov
pushl
scas
fdivrl
fisubrs
rorb
bound
pop
nop
shlb
ror
out
jg
out
pushf
mov
out
jle
fdivrp
inc
scas
sbb
ret
dec
dec
sub
out
scas
jbe
rolb
loope
outsb
lret
mov
adc
jmp
loopne
push
pop
movsl
jnp
ret
in
dec
ds
loop
dec
lahf
ds
push
inc
push
inc
push
mov
xchg
push
cld
incl
push
test
lods
imul
call
adc
jg
fs
incl
cmpsl
test
iret
rol
inc
test
or
ljmp
or
decl
pop
push
out
shlb
jae
xorb
add
int3
shrb
mov
cmp
hlt
decl
aas
stos
insl
jmp
mov
aad
iret
cmpb
inc
mov
int
or
shll
mov
lret
pushf
dec
mov
jl
jo
xchg
mov
lahf
scas
mov
ror
cli
dec
shll
out
cli
call
mov
in
jecxz
dec
inc
ret
sub
pop
and
testl
inc
cs
cmp
insb
dec
out
imul
sub
mov
mov
inc
pop
push
jp
sbb
mov
lahf
test
dec
orb
inc
test
int
call
mov
cwtl
mov
jnp
js
dec
outsb
lret
inc
sbb
insl
cmp
jg
inc
into
fmuls
fmull
xchg
and
sub
sbb
add
jno
pushl
dec
sbb
lea
xchg
sbb
sar
loopne
fsubp
stos
cli
push
pop
ljmp
cmpsb
clc
xchg
xor
and
das
pop
jo
sub
clc
decl
mov
push
out
sub
add
push
xor
mov
sub
icebp
and
jmp
pop
xchg
and
das
shrb
jmp
gs
imul
jmp
outsl
lcall
test
jp
pop
add
or
xchg
js
hlt
xor
inc
sbb
xchg
sbb
filds
push
imul
jb
sub
out
and
sub
jg
std
sub
addr16
fstl
in
push
mov
dec
mov
dec
mov
add
xor
xor
ljmp
pushl
rcl
sub
mov
lea
adc
shll
pop
adc
jecxz
repnz
shl
in
in
ljmp
mov
and
dec
lods
dec
push
dec
aam
out
sub
inc
mov
jg
sbb
mov
push
cmpsl
int
jb
xchg
pusha
ljmp
xorl
lcall
jb
js
test
leave
xchg
out
das
cld
add
jmp
push
pop
imulb
mov
out
fs
into
jno
into
roll
inc
std
shlb
pusha
sar
call
insl
push
jecxz
pop
jge
sub
daa
jmp
repnz
jo
ds
pop
jns
and
or
mov
sub
jg
or
adc
mov
push
sub
jmp
pop
hlt
sbb
adc
movsl
push
xor
pushl
lret
xor
push
movsb
fisubrs
enter
push
jo
mov
mov
mov
mov
or
ljmp
mov
mov
xchg
xchg
std
ljmp
mov
xor
and
cld
jg
sbb
dec
cmp
test
pop
jno
popf
scas
push
cmp
jmp
or
mov
or
mov
cld
mov
jmp
and
push
xchg
add
xor
test
adc
mov
and
add
push
and
sti
js
add
xorb
sub
push
rclb
push
and
cmp
pop
jae
jg
inc
mov
fs
sub
pushf
testb
mov
stos
and
test
mov
adc
jg
pop
lret
push
sbb
pop
insl
subb
lock
sub
and
jb
sub
in
rcl
mov
dec
xchg
lods
leave
loop
test
test
lock
sbb
es
inc
in
add
lods
jg
decl
aas
adc
pop
dec
call
or
xchg
adc
scas
mov
stos
aam
cmc
ja
push
mov
push
sub
mov
inc
je
xchg
mov
push
int
sub
out
jmp
mov
xchg
pop
aam
add
jg
call
pop
push
dec
in
sub
and
sub
leave
xchg
xor
insl
shll
xor
decl
mov
mov
fidivl
xor
jge
or
pop
mov
add
push
icebp
sbbb
dec
jg
jg
adc
ljmp
filds
cli
jmp
shrl
cld
inc
ret
add
aas
in
idivb
xor
ret
xor
das
cli
das
ret
or
outsb
and
icebp
sub
pusha
sub
and
jg
xor
je
jmp
sbb
xchg
cs
insl
xchg
xchg
xchg
xchg
jns
stos
decl
jae
push
ljmp
addr16
test
loopne
out
lcall
lcall
mov
bound
movsb
sub
push
imul
hlt
cmp
outsl
lret
in
fcomip
jne
jne
push
das
cs
xchg
inc
sbb
dec
dec
sub
jg
inc
loop
int
xor
loopne
adc
and
imul
lcall
xor
jge
insl
int
push
mov
iret
mull
cmp
xchg
dec
adc
jbe
sbb
sar
pushl
aam
mov
jle
xchg
mov
clc
bound
cld
loop
jne
adc
xchg
or
xchg
sub
pusha
xchg
cmp
pop
std
call
inc
fnstenv
jns
sub
pop
dec
in
in
push
imul
jmp
jbe
mov
jae
cmp
fidivs
scas
xchg
xchg
pop
inc
outsb
jbe
dec
fwait
jae
aaa
fsubrs
imul
out
xor
cmp
xchg
xchg
pop
jb
adcl
ds
andl
incl
adc
je
xlat
or
sub
mov
mov
mov
and
mov
shrl
mov
push
jle
add
decl
push
push
and
sbb
adc
pop
mov
js
or
in
fcoms
clc
incl
pop
lods
push
inc
xchg
jmp
xor
ss
imul
into
sub
incb
adc
dec
cmp
stc
and
mov
xchg
int
mov
push
xchg
xchg
out
pop
cmp
jg
or
fbstp
xlat
pop
pushf
ljmp
push
iret
call
cmp
mov
jnp
mov
mov
jmp
lock
ljmp
add
daa
xchg
sbb
mov
lea
or
jg
clc
mov
xchg
jle
jmp
sub
sub
inc
pop
add
cmpsb
scas
xchg
mov
mov
xor
iret
cltd
leave
int3
movsb
das
ss
hlt
data16
outsb
lods
pop
std
call
lcall
sbb
adc
mov
cmp
lock
lcall
jne
inc
xor
ss
xchg
cli
stos
lret
jb
mov
pop
sub
push
in
decl
leave
nop
or
add
into
jnp
push
push
sub
fildl
sub
lea
loop
rorl
push
insb
xchg
push
andb
hlt
incl
jp
leave
xchg
insl
andb
leave
mov
es
pushl
jne
push
cmpsb
enter
call
add
or
sbb
inc
std
ljmp
fdivr
jbe
pushf
xchg
pushf
mov
or
ja
dec
xchg
cmp
inc
sbb
std
js
or
test
sbb
cmp
and
sbb
mov
adc
icebp
nop
orl
jns
aaa
std
mov
mov
inc
pop
dec
cmovo
sub
popa
lcall
mov
out
add
or
xchg
outsb
incl
ss
inc
outsl
mov
bound
jo
imul
xchg
xchg
mov
pop
mov
sub
je
cmp
call
lods
cmp
dec
push
cmpsb
movsb
lock
xchg
aaa
push
mov
cli
cmp
and
loopne
sbb
sbb
outsl
pop
pop
fdivs
push
cli
mov
outsl
jnp
mov
lea
test
jb
test
cs
decl
mov
dec
pop
push
call
aam
jbe
and
pop
xor
enter
cld
pushl
xchg
jl
mov
and
cltd
mov
mov
push
sbb
movsb
jb
mov
lcall
ljmp
mov
sbb
jg
stos
cld
test
inc
daa
gs
sbb
adc
mov
xchg
mov
leave
shll
xchg
pop
xchg
cmc
pop
lods
xchg
sub
mov
test
add
scas
mov
incb
mov
pop
jns
jg
add
mov
testl
sub
pop
lcall
mov
lods
push
pop
sbb
jp
mov
adc
xor
fnsave
mov
pushf
cltd
inc
and
decl
cmpsl
sbb
mov
ljmp
aad
inc
xchg
repnz
lcall
popf
out
gs
shl
push
nop
repz
xor
fisubl
ljmp
mov
es
lods
xor
lret
jno
lea
mov
cmc
pop
mov
enter
fwait
out
pop
lods
out
push
push
xorl
into
cmc
mov
dec
out
repnz
int3
pop
roll
jmp
movsb
ret
loope
movsl
and
ss
loopne
cmp
xor
clc
add
aaa
push
sar
incl
mov
sub
sub
sahf
adc
rcrl
ljmp
and
xor
cmc
popa
xlat
out
pop
inc
out
pop
fcomip
mov
imul
mov
js
cmpsb
and
ljmp
mov
aam
jle
pop
aam
nop
mov
fwait
jecxz
ljmp
adc
sub
stc
in
xchg
mov
js
xchg
jp
cmp
outsl
dec
jno
dec
or
cli
out
or
gs
ljmp
nop
imul
fidivl
adc
mov
mov
and
pop
test
push
aas
scas
push
imul
shrb
rcll
inc
int3
mov
mov
fisttpl
clc
incl
lea
or
nop
sub
xorb
fs
sub
jg
mov
adc
xchg
xchg
xorb
push
lret
lods
or
sbb
mov
jg
addb
lock
push
and
and
jl
mov
ja
loopne
call
mov
push
lods
or
adc
jle
leave
repnz
xchg
adc
cmp
das
xchg
lea
aaa
xor
cmpsl
xchg
sub
call
and
jp
test
pop
sbb
stos
aad
pop
scas
loop
sub
decl
fs
pop
mov
stos
push
sbb
rcll
pop
lods
outsl
int
aad
cmc
imul
and
mov
outsb
pop
aad
test
mov
outsl
pop
mov
aad
jbe
xchg
mov
inc
out
inc
daa
push
dec
testb
and
pop
sbbb
sti
aaa
xor
and
dec
cmp
sbb
insl
dec
mov
ljmp
cmp
int3
lcall
es
mov
fistps
push
mov
mov
shll
lcall
out
mov
test
cmp
xor
cmc
sahf
lret
das
clc
jg
pop
stos
icebp
lock
rcll
xor
jno
das
jmp
repz
dec
movsb
pushl
incl
push
sub
inc
cmovne
mov
inc
sbb
shll
and
test
push
mov
xchg
xchg
cli
ljmp
sbb
ficomps
and
ja
frstor
in
pop
mov
pop
in
fstps
cld
fcoms
push
add
push
lea
dec
xlat
pop
stos
inc
jmp
fs
pop
jno
and
ret
ljmp
shrb
adc
es
insb
icebp
enter
in
jg
sub
pop
add
mov
dec
mov
out
imul
out
mov
jbe
dec
mov
cmp
ss
jb
testb
mov
je
sarl
jg
jmp
and
or
insl
sbb
test
mov
jmp
jle
in
aaa
push
lods
adc
mov
push
out
jp
xchg
sbb
mov
imul
and
call
push
jge
std
dec
adc
adc
push
push
sbb
into
popa
jp
jae
fxam
adcb
jmp
jno
jmp
push
cltd
mov
mov
lds
mov
fistps
inc
mov
sub
out
lock
jmp
out
fsubs
movsl
cltd
jmp
add
xchg
sbb
fs
addr16
sub
pushl
test
ja
dec
sbb
rorb
cmpsb
mov
dec
loope
pushf
int
ret
push
cmp
clc
aas
test
cmpsb
xchg
mov
and
mov
push
inc
xor
mov
sbb
sbb
and
inc
movsb
and
push
push
fistl
mov
outsb
sbb
jb
push
arpl
push
outsl
pop
adc
mov
neg
movsl
add
fcomip
sub
pop
call
decl
jle
xlat
loope
sub
push
jmp
mov
ret
aam
out
push
jle
lds
jnp
xchg
pushf
cmp
ljmp
pop
cwtl
dec
push
sbb
push
or
callw
das
cli
sub
insl
jl
xchg
insb
and
lahf
movsb
mov
mov
mov
in
aam
into
cmp
push
cmp
adc
dec
popa
out
test
pop
adc
fidivs
xlat
mov
stc
mov
jl
loope
adc
decl
pop
fstl
clc
xlat
fisubs
xchg
mov
jns
pop
je
inc
aam
mov
leave
lea
imul
xchg
jb
push
xor
jno
sub
mov
mov
jmp
xchg
mov
mov
pop
test
pop
lcall
ljmp
mov
push
ret
push
sub
add
in
and
lcall
js
push
jo
mov
int
dec
mov
xchg
cmp
cmc
dec
outsb
daa
incl
inc
pushl
pushf
sahf
or
push
in
pop
jbe
out
dec
sub
mov
test
fisttps
pop
mov
adc
sub
repnz
lds
inc
adc
jle
mov
mov
fsubrl
mov
stos
xor
cmpl
and
xor
push
cld
decl
enter
jno
pop
ret
mov
cmp
or
movsl
outsb
or
jmp
in
iret
leave
test
imul
sub
clc
imul
sbb
lcall
fisubrs
fsub
xchg
dec
cmp
jecxz
test
mov
and
or
out
dec
or
mov
sub
js,pn
fsub
imul
dec
lcall
sarl
or
ja
mov
jl
arpl
test
jecxz
inc
xchg
jne
pop
push
shlb
sahf
push
push
stos
jge
sbb
fnstcw
xchg
sub
jg
rorb
mov
or
dec
add
lea
movb
ljmp
or
ss
loop
repnz
fcmovnu
dec
or
sbb
or
pop
mov
leave
push
std
call
pop
dec
int
sbb
test
jl
fisubl
fmul
je
loope
add
adc
cltd
test
adc
decl
mov
dec
test
adc
inc
daa
outsb
mov
cmp
add
sub
test
jnp
iret
enter
xor
nop
adc
xchg
ss
call
jo
out
cmp
sbb
rolb
test
dec
aam
adc
sub
mov
sar
mov
push
xor
in
lahf
xorl
jmp
pop
sti
pop
test
jg
enter
mov
xor
rcl
dec
cs
iret
push
in
lahf
push
mov
rol
nop
push
ljmp
mov
sub
shl
fildl
leave
stos
xor
xchg
mov
lcall
cltd
sbb
imul
jecxz
mov
mov
jo
add
lods
cmp
rorl
sti
mov
scas
dec
shl
hlt
imul
out
mov
jl
mov
lret
mov
jle
sahf
push
data16
mov
fisubs
sub
jg
test
mov
ljmp
pop
addr16
aaa
adc
xor
push
or
mov
jb
or
call
lods
pop
jne
arpl
test
pop
into
in
mov
into
mov
fs
lea
inc
scas
scas
cmpsb
or
push
mov
jno
xchg
cs
mov
sarl
negl
out
push
mov
sbb
lods
inc
push
pushl
dec
or
lock
mov
lods
out
add
cmpsl
jb
xor
insb
ljmp
sub
test
sahf
jmp
push
addr16
inc
cld
decl
xor
inc
mov
popf
jno
jge
mov
cmp
mov
jge
and
clc
mov
mov
cmpsl
jg
sub
ficoml
pop
popa
cli
inc
fisubs
ss
clc
ljmp
xchg
into
push
dec
rcrb
push
sub
vdivpd
cwtl
sub
incl
xchg
lods
scas
jle
idivl
lods
push
mov
xchg
and
das
clc
xchg
bound
repnz
divl
xor
out
inc
icebp
mov
lret
aad
push
cld
jmp
sub
cmp
das
mov
out
addr16
mov
movsb
fdiv
dec
mov
dec
sti
cmpsl
js
out
adc
mov
pop
and
jg
insl
dec
inc
out
ret
xchg
aam
xor
lcall
pop
push
mov
xor
mov
test
mov
sarb
in
repz
mov
push
adc
loop
cli
xchg
jo
xor
lds
ljmp
ljmp
arpl
popa
mov
jne
loope
xor
cltd
enter
mov
scas
mov
cmp
imul
dec
subl
jl
ss
push
cli
dec
mov
pop
inc
push
fxch
addb
sub
fnsave
je
arpl
int3
test
incb
adc
into
pop
popf
push
sbb
cmp
mov
jl
xchg
sbb
incl
mov
fwait
cmpl
push
sti
xorl
dec
mov
dec
movsb
insb
sub
stc
insl
mov
sbb
dec
mov
shlb
test
decl
inc
out
cmpsl
sub
cli
or
push
lret
push
xor
ret
mov
jmp
push
and
dec
arpl
jne
inc
aad
pop
mov
xor
fwait
stos
mov
ja
rorb
mov
pop
push
jnp
and
pushl
leave
mov
in
lcall
cmp
dec
shll
ljmp
out
sbb
out
adc
out
push
mov
dec
pop
testl
xor
mov
pushl
jmp
daa
imul
and
inc
sub
push
scas
bound
pop
aaa
xor
push
mov
add
xchg
aam
or
pop
fdivrs
push
push
push
insl
std
incl
inc
cmp
mov
mov
inc
xor
jnp
ja
xor
in
jg
addb
dec
in
lahf
shrl
mov
int
pop
shlb
fisttpl
jae
xor
divb
cmp
andb
in
lcall
out
xor
ja
xor
cmp
nop
cmpb
sub
adc
push
adc
add
or
loope
adcb
mov
sub
jnp
cmc
aaa
rcl
cmpsl
push
xor
cmc
js
and
pop
add
xchg
xchg
add
and
das
mov
jle
dec
sbb
adc
sbbl
pop
cld
lcall
sbb
mov
das
push
aaa
cmpsl
lds
aad
test
dec
xchg
and
call
mov
cmp
pop
inc
xor
xor
dec
pop
jno
jl
orb
sub
shll
or
rcrl
sbb
cmp
xrelease
incl
ret
dec
out
xor
or
mov
lret
roll
incl
sbb
cmp
cwtl
xchg
adc
sub
popa
cmp
adc
mov
pop
adc
xchg
jp
in
mov
sbb
inc
pushl
xchg
sbb
cwtl
nop
adc
ss
cmpsb
jns
mov
push
addl
imul
and
xchg
xor
mov
xchg
icebp
cmp
pop
das
cmp
inc
push
and
xor
out
std
scas
clc
jg
insl
mov
sbb
das
popa
jb
pop
push
push
jmp
inc
inc
sub
push
test
jg
dec
fmuls
dec
cmp
repnz
cmp
dec
jmp
pop
and
shlb
addr16
jne
push
jecxz
xchg
mov
cmp
xchg
xor
test
outsl
fdiv
jg
test
jl
jns
ja
daa
movb
jns
popa
pop
out
stos
add
push
xchg
arpl
pushl
mov
xchg
jo
test
cmpsl
sbbl
bound
call
and
pop
pop
cmp
adc
test
push
cs
ss
inc
mov
mov
mov
pop
mov
cmp
je
add
cld
jmp
pop
pop
dec
xchg
push
xchg
adc
pop
cli
mov
mov
inc
sbb
push
incl
jge
aaa
jge
mov
into
adc
mov
mov
inc
ja
mov
or
mov
outsl
aad
jo
and
fsubr
xchg
jecxz
jbe
jg
decl
call
xor
cmpsl
testl
sbb
testb
andb
push
inc
dec
cli
mov
mov
das
jo
xchg
mov
popa
mov
js
jg
push
jb
ljmp
pop
repnz
sub
subb
sub
push
mov
and
xor
lret
movsb
jl
add
enter
cmpsb
jmp
fs
push
dec
inc
cmp
je
je
rorb
mov
xchg
filds
cmp
gs
pop
pop
ret
in
xchg
dec
sahf
adc
fisttpll
loope
jmp
roll
push
adc
and
imul
repnz
divl
icebp
call
fsubrs
je
pop
jb
push
ja
mov
jp
jnp
incl
imul
push
add
ds
xor
arpl
addr16
adc
adc
nop
or
cwtl
xchg
cmp
jg
adc
pop
cwtl
xchg
xchg
pop
pushl
decl
movsb
js
sbb
xchg
mov
inc
adcl
mov
in
scas
js
pop
inc
xchg
mov
les
cmpsl
es
inc
bound
leave
sub
lea
adcb
ret
jmp
xchg
pop
xlat
and
pop
aaa
pop
pusha
popf
pop
push
js
outsb
imul
sbbl
add
add
pop
add
divl
push
ljmp
ljmp
ja
ret
adc
sub
sti
mov
sti
add
jg
ljmp
clc
sub
sbb
adc
push
cltd
xchg
mov
xchg
dec
sbb
decl
sarl
andb
jp
cmp
lcall
in
xchg
daa
mov
test
lcall
cmp
and
lods
mov
je
rorb
mov
sbb
pushl
inc
add
shll
and
ret
mov
mov
and
cmp
ja
pop
cmp
xor
pop
push
push
test
inc
je
ja
ljmp
add
in
or
test
outsb
js
orb
sbbb
dec
xor
xchg
arpl
and
orl
call
test
mov
xchg
cmp
dec
cltd
mov
xchg
sbb
mov
mov
push
mov
inc
lcall
sub
adc
lcall
xor
lcall
out
stos
fnstenv
cmp
mov
cld
scas
scas
lret
lods
pusha
or
jg
jg
pop
pop
pusha
mov
add
inc
notb
inc
mov
push
xor
pop
int
dec
push
push
pop
inc
les
xorl
xchg
cmp
pop
push
mov
pushf
dec
dec
pop
fs
dec
out
dec
push
cmp
call
sub
loope
orl
xchg
and
pushl
call
outsb
sub
inc
pop
incl
scas
jle
push
mov
mov
pushl
fwait
push
sub
addr16
imul
and
pop
stos
movsb
fldt
lock
jg
pushf
push
stos
mov
lcall
jecxz
and
das
inc
push
test
imul
shll
int3
lret
mov
cmp
movsl
dec
lock
push
call
push
movsl
adc
movsb
lea
jmp
push
push
insl
pusha
ret
inc
lea
inc
dec
test
pop
mov
xchg
jbe
lcall
incb
adc
into
mov
jae
sbb
stos
and
xchg
add
ljmp
jg
cmp
pop
xor
add
push
xchg
xor
adc
jge
jmp
sti
mov
fdivs
leave
mov
xor
mov
data16
jg
jmp
andl
outsb
adc
dec
push
adc
lock
cmp
pop
dec
pusha
push
lret
fisubrs
push
ljmp
sar
rolb
cld
push
into
add
sbb
aad
enter
jg
je
ret
mov
ja
loopne
movsl
push
es
jl
inc
hlt
push
imul
pop
sbb
inc
jecxz
jle
cmp
xorb
stos
ja
lret
inc
mov
lahf
jge
inc
in
and
jmp
ret
mov
sbbl
ljmp
fwait
mov
jmp
cltd
dec
adc
insb
sub
cltd
and
lods
decl
sub
stos
andl
sub
mov
adc
xor
mov
and
mov
dec
repz
dec
dec
fadds
repnz
enter
adc
mov
cmpsb
dec
int
int
or
and
cmp
repnz
stos
mov
and
xchg
mov
or
mov
xchg
ljmp
mov
sbb
sub
dec
cld
jnp
lea
cmp
dec
rcl
mov
out
addr16
popf
sub
jno
js
mov
pop
or
movsl
insb
dec
mov
shrl
shll
aas
jno
push
cmpsl
jl
cmpsl
cld
mov
pop
lock
lock
ret
xchg
ret
ficompl
mov
xchg
fcomip
data16
cmpsb
inc
xor
test
incl
int
popa
mov
inc
pop
dec
mov
add
mov
nop
add
int3
lret
push
pushf
jl
pop
pop
ret
xchg
mov
movsb
lret
pusha
push
mov
pop
adc
sbb
pushf
dec
cmp
aad
scas
outsl
mov
sbb
push
aaa
dec
sar
cmp
pop
sbb
mov
xchg
and
ljmp
cmp
clc
jge
orb
jg
sub
lret
fbld
roll
xchg
mov
sub
cli
xor
fsubl
or
dec
xchg
aaa
ficoml
enter
jno
mov
or
jmp
mov
aaa
insb
inc
std
ljmp
pop
xor
mov
jle
andl
insl
icebp
add
jg
dec
jle
lock
bound
mov
jmp
int3
or
xchg
dec
cltd
mov
or
pop
jmp
dec
std
fwait
or
or
pushf
in
fbstp
lea
test
sub
and
fstps
sbb
push
jb
cmp
cli
jmp
rorb
test
std
out
test
icebp
cmp
loop
push
stos
mov
adc
shrl
fs
jmp
mov
cltd
sbb
andl
and
movsb
push
jmp
ljmp
test
sub
add
fiadds
ljmp
lds
in
out
shl
imul
dec
insb
add
xor
stos
and
add
xchg
imul
dec
lds
cmp
daa
inc
fimuls
jg
out
cmp
pop
aaa
insl
pop
add
inc
aaa
cmp
mov
insb
push
addr16
inc
mov
cmp
arpl
daa
ds
push
pop
and
cmc
adc
rcll
ror
jae
clc
out
push
lods
mov
jl
dec
mov
test
xchg
sarl
sbb
sbb
cltd
and
cli
and
sha1msg2
cld
xchg
lcall
ret
stos
pushf
adcl
sub
ljmp
and
sbb
stos
mov
testl
sbb
dec
movsb
icebp
outsl
mov
cs
insb
aam
xor
dec
cmp
fnsave
or
adcb
mov
add
mov
jg
out
sbb
out
pop
les
xchg
out
dec
mov
movsl
mov
out
outsb
repnz
push
mov
and
cwtl
jns
xchg
add
ljmp
orb
icebp
sahf
inc
icebp
out
std
std
dec
sub
dec
cli
xchg
test
std
jg
js
mov
ss
sbb
adc
jg
dec
pop
jbe
add
pushf
sahf
aas
and
in
ljmp
call
jp
scas
repnz
es
mov
stos
shrb
fimull
pop
sub
adc
rcll
stos
aad
and
or
std
jmp
enter
dec
std
inc
sbb
cwtl
adc
pop
fsqrt
jmp
fcompl
clc
xor
sti
test
in
xchg
icebp
test
push
pushl
out
mov
push
ljmp
pop
push
leave
shll
out
jle
adc
insl
add
and
or
cmp
pusha
inc
add
call
dec
lds
push
xor
cvtpi2ps
mov
lock
imul
rol
xchg
pop
xor
dec
cltd
aaa
jne
dec
ret
cld
push
es
popf
imul
xchg
gs
mov
push
push
add
andb
pop
cli
mov
insl
dec
xchg
sbb
clc
jns
ljmp
in
pop
mov
jns
popf
imul
mov
fwait
mov
pop
add
cli
sbb
mov
pushf
icebp
push
and
pop
mov
call
dec
xor
aad
aam
data16
ret
sbbl
add
sbb
imul
fs
jns
mov
pop
out
fstpl
mov
sub
jno
int
dec
rolb
cli
decl
nop
add
pop
mov
or
stc
fwait
jnp
ljmp
or
out
cmpsb
jne
fisttpl
adc
jnp
inc
jae
scas
jae
jne
push
mov
ljmp
divb
inc
sbb
dec
jmp
out
dec
xor
sbb
shrl
inc
and
pushl
into
aam
cmpsb
or
dec
or
mov
repnz
add
decl
push
call
movsb
lea
dec
adc
les
and
xor
sub
sub
shlb
test
cs
loop
leave
dec
xor
sub
lahf
jb
lods
scas
mov
repnz
mov
xchg
dec
lods
mov
add
lret
sub
inc
mov
mov
push
in
sub
mov
ret
or
imul
add
dec
sub
adc
outsl
mov
and
inc
inc
mov
aas
fldt
mov
dec
mov
dec
mov
ss
jge
sub
mov
xor
jo
cmp
xchg
aad
loop
mov
decl
add
ret
dec
mov
cmp
lods
sti
scas
inc
fcmovnbe
dec
sub
repz
add
pushl
jge
inc
pop
repz
xor
iret
cmp
pop
push
sub
mul
mov
aad
dec
or
call
push
inc
or
xchg
les
lcall
or
ret
xchg
enter
subb
or
je
lds
jb
adc
out
clc
mov
movsb
push
lock
sub
cltd
mov
xor
fcomip
fistl
xchg
int
and
scas
mov
adc
stos
les
dec
scas
int3
jb
outsl
stc
sub
ret
in
popf
dec
jae
mov
rorl
out
adc
shl
int3
iret
mov
cli
ljmp
nop
inc
sahf
mov
lret
mov
cmpsl
adc
sub
std
decl
cmc
jo
push
jmp
or
jg
jg
sarb
pushl
add
add
mov
jnp
fiadds
jmp
dec
stc
inc
das
fcom
cli
lods
jne
sti
out
movsbl
jge
iret
ljmp
mov
push
fcmovne
sbb
mov
into
pop
out
repz
mov
jge
rorl
rcr
or
jge
or
pushl
loope
negl
xlat
pop
test
in
push
sub
lcall
pop
ficoms
icebp
inc
jns
scas
ja
rolb
pop
insb
push
imul
js
cmpsb
lock
sar
test
or
test
repnz
xor
add
fidivrs
sub
cli
cld
gs
mov
or
mov
jns
sub
mov
jmp
and
jmp
loop
xor
inc
imul
mov
cmp
or
xor
jo
cmp
jmp
jmp
add
push
jno
mov
add
or
incl
inc
lcall
jg
xchg
out
mov
in
sub
decl
mov
popa
jae
andl
scas
adc
cmp
in
xchg
fwait
mov
aaa
cmp
mov
dec
jbe
and
and
movsb
jecxz
pop
adc
mov
pop
stos
and
pop
mov
aad
out
and
sbbb
xchg
adc
lcall
xchg
and
xor
stos
sarl
add
jb
fiadds
add
incl
mov
cmp
insl
jp
pop
xchg
test
outsb
loope
sbb
call
popa
jno
cld
inc
addr16
movsl
arpl
push
clc
sub
stos
shlb
cltd
mov
cmpsb
jp
add
ret
xor
imul
out
add
orb
sbb
in
push
jmp
cmpsb
mov
icebp
outsb
popf
lcall
rolb
add
mov
xor
mov
sbb
add
fcoml
dec
leave
std
ljmp
mov
push
mov
movd
cmp
sub
mov
push
inc
cli
pop
sbb
hlt
inc
aaa
aas
add
in
sub
in
lcall
xchg
and
pop
inc
jmp
sub
xchg
sbb
add
scas
test
mov
and
dec
sub
repz
xchg
mov
sub
out
call
mov
nop
cmp
arpl
or
and
popa
push
and
or
lds
movsb
mov
pop
xchg
sbbl
call
sub
pop
cwtl
or
lods
in
test
push
push
fbld
mov
sar
lcall
mov
xchg
test
push
fs
movsb
xor
adc
decl
call
sahf
adc
or
popa
mov
cli
push
call
aaa
std
pop
cmc
add
fs
inc
adc
test
outsl
jns
lods
fdivr
ja
cmp
fs
fildl
leave
sub
sbb
dec
pop
and
insl
cmc
pop
imul
shlb
sbb
loopne
iret
jge
jge
inc
xor
decl
aam
scas
arpl
mov
or
mov
movsl
xchg
push
adc
hlt
sub
incl
mov
and
rcrb
leave
cs
lret
jecxz
sbb
and
xor
incl
lcall
lods
jnp
jns
xchg
mov
ljmp
cltd
push
push
xor
outsb
jne
mov
inc
inc
fsubrs
push
lcall
out
xchg
or
ljmp
jns
out
and
cmp
fisubrl
lahf
cmpsl
add
and
lret
adcb
push
lods
orb
ljmp
sub
popa
add
test
cld
fsubrs
mov
test
jbe
imul
imulb
repz
ljmp
adc
stos
pop
add
xchg
cmp
jecxz
mov
jb
or
subb
xchg
and
inc
fldl
and
ljmp
or
sub
add
dec
push
ds
jecxz
jecxz
and
mov
xchg
dec
ret
in
dec
cli
push
pop
sbb
mov
cmp
adc
mov
adc
pop
or
ds
inc
mov
cltd
je
fdivr
jmp
lret
mov
add
jge
mov
inc
and
out
int3
nop
or
test
adc
dec
aam
mov
insb
jg
lea
nop
and
xor
xchg
sbb
adc
add
or
ret
decl
add
inc
cmp
pop
bound
mov
incl
imul
ss
mov
push
js
jg
out
popf
sti
test
fcmovnu
loopne
mov
call
push
in
or
pop
jmp
adc
bound
sbbl
in
or
sub
lods
inc
mov
call
decb
fstpl
cltd
mov
loope
jmp
lahf
xchg
nop
das
push
mov
jne
sarl
xchg
call
mov
shl
jge
out
push
outsb
mov
std
jg
xchg
dec
sahf
clc
dec
push
gs
inc
inc
dec
xor
add
repz
sub
or
mov
mov
lods
jp
cwtl
and
push
adc
mov
mov
mov
lret
movsb
sarb
mov
cmpsl
leave
movsl
cwtl
push
inc
pushw
mov
jb
inc
xchg
sarl
fs
ret
testb
pop
cmp
cmp
jg
inc
mov
add
fstpt
push
pop
pop
or
lods
mov
repnz
cmp
mov
mov
xchg
in
cmp
cmc
mov
mov
add
cltd
mov
xchg
test
add
stc
mov
sub
jae
ljmp
cmp
mov
jne
xor
sbb
mov
loope
cld
shl
clc
out
incl
inc
mov
fisttpll
cli
cmc
bound
cltd
aas
xchg
test
or
dec
inc
xchg
adc
jmp
cmp
cmp
cltd
stos
repz
dec
jb
in
mov
dec
sub
mov
mov
and
test
xor
hlt
mov
xchg
adc
test
jns
mov
mov
cli
call
aaa
or
jns
test
lret
stc
sar
aaa
mov
sbb
inc
lods
sbbl
insb
cmp
and
mov
mov
adc
ds
xchg
into
push
mov
fidivrl
inc
mov
dec
test
mov
insb
clc
nop
fstps
call
js
mov
pop
inc
xchg
pusha
and
mov
sub
out
adc
fwait
and
loopne
lcall
mov
push
cmpsb
push
sub
mov
mov
ljmp
inc
or
cmp
mov
dec
mov
pop
cmp
sub
inc
mov
movsl
mov
mov
pop
fldcw
mov
jae
pop
mov
rcrb
jo
arpl
stos
rorl
stos
mov
or
xor
push
push
clc
cmp
sti
aaa
pop
add
and
jo
jns
test
or
pop
jp
dec
xor
ss
inc
or
xchg
or
lcall
inc
sarb
orb
arpl
sbb
adc
or
or
mov
sbb
push
mov
xor
push
repnz
mov
sub
aas
clc
add
nop
and
xor
mov
out
xchg
test
ja
add
nop
add
cmp
incl
adc
cmp
sbb
sbb
add
or
adc
cwtl
push
mov
mov
mov
incb
ret
jnp
mov
cmc
jmp
mov
pop
test
fdivrl
add
shl
xor
insl
cld
pushl
sbb
nop
orps
clc
fwait
jle
dec
jb
adc
sahf
fiaddl
cli
cmp
es
bound
insb
mov
enter
std
jb
pusha
test
out
fwait
aaa
mov
incl
jnp
mov
push
add
adc
hlt
enter
sub
inc
xchg
and
pop
test
fidivrl
xor
dec
scas
imul
sti
lcall
enter
test
sbbb
adc
cmp
in
cwtl
sbb
cmp
enter
pop
xor
popf
xchg
fwait
dec
in
sbb
lcall
nop
sbb
repz
mov
stc
sbb
mov
push
popa
ljmp
cwtl
xchg
or
jmp
mov
xchg
scas
in
leave
and
xor
adc
mov
xchg
sbb
imul
sub
pop
pusha
dec
xor
incl
rcrl
lahf
push
out
sub
sahf
jo
jae
das
sti
outsl
mov
mov
or
mov
xchg
pop
ret
je
lret
test
mov
loopne
jg
add
and
xchg
pushf
aam
jbe
rol
hlt
dec
jbe
ljmp
aad
iret
or
inc
nop
add
negb
pop
adc
enter
pmaxsw
orb
jge
and
cli
incl
daa
cmc
cmpb
rolb
ljmp
subl
xor
push
jg
sub
push
and
xorl
rolb
xor
out
jg
ret
sbb
sbb
push
ss
add
addb
sbb
jmp
or
add
aam
lret
lock
imul
aas
gs
sub
inc
lea
jo
sbb
add
neg
inc
jo
int
lock
sbb
or
mov
mov
cmc
cld
push
and
add
mov
pusha
call
incl
cld
mov
cmp
jmp
dec
pop
movsb
mov
cmp
dec
mov
mov
sbb
dec
adc
pushf
jb
adc
dec
fadds
jmp
das
shlb
outsl
clc
xor
xor
lods
fisubl
mov
mov
sbb
hlt
sub
loope
pop
inc
test
cmp
dec
mov
mov
repnz
aaa
inc
lcall
movsl
imul
dec
ljmp
jbe
cmp
xchg
xchg
mov
inc
shrl
dec
add
xlat
lret
or
fcomip
pushl
xchg
dec
lret
jmp
add
cmc
adcl
sar
mov
cld
jmp
xchg
aaa
sbb
mov
ret
xorb
mov
les
loopne
loope
sarl
jle
lcall
cmp
std
fadds
jae
and
xchg
stos
sbb
sbb
pop
ja
lcall
adc
add
addb
inc
mov
mov
pop
adc
pop
mov
ss
mov
pop
lods
mov
sbbb
iret
repnz
lock
shrb
xchg
enter
mov
xchg
dec
or
nop
aad
add
sub
ja
dec
cmp
xchg
nop
xor
sbb
xlat
subl
insl
into
jo
les
and
jecxz
test
dec
out
adc
scas
imul
lret
out
pop
je
mov
loopne
int3
inc
dec
add
dec
cmp
call
lahf
xor
mov
push
jg
ljmp
punpcklwd
add
inc
popa
mov
mov
push
mov
ljmp
dec
cli
stos
push
ja
lods
mov
mov
nop
mov
or
hlt
add
insb
les
push
push
dec
or
jns
outsl
test
mov
incl
pop
sub
ret
imul
adc
loopne
sbb
sbb
in
jg
inc
cli
add
pusha
enter
add
add
xchg
mov
add
loopne
push
mov
adc
aaa
cld
mov
or
and
sbb
cmp
adcl
add
xchg
or
in
outsl
fcomp
pop
pop
iret
stos
or
daa
add
push
xor
mov
xor
dec
xor
add
scas
inc
jmp
lret
shrl
nop
cld
xor
stc
mov
or
call
fs
jp
aam
or
subl
cmpsb
mov
call
cmp
jecxz
fadd
jmp
jg
sub
int
stos
fstpl
std
cld
or
in
or
in
lods
jge
iret
stos
adc
mov
imulb
xor
movsl
inc
push
xchg
push
adc
jg
cmc
incl
mov
arpl
test
mov
add
push
int3
mov
sbb
int3
stos
xchg
fdivl
jg
mov
pop
or
xlat
ljmp
adc
jecxz
adc
in
mov
imul
mov
cmpb
sahf
mov
fdivrl
sbb
test
bound
mov
mov
ja
orl
jns
xor
aad
pop
push
popa
jle
or
pop
aad
cmp
add
push
lret
call
add
mul
add
mov
adc
pushl
and
push
mov
stos
pop
loope
pusha
test
push
test
call
ljmp
adcb
sub
sbb
imul
add
xchg
mov
pop
mov
or
jb
mov
aas
popf
inc
into
xor
icebp
push
ljmp
adc
and
sahf
jle
cmpsl
mov
fidivl
push
ret
loop
lret
mov
out
dec
popa
insb
or
incl
mov
xor
mov
mov
and
fidivl
and
jg
or
mov
add
mov
inc
inc
icebp
mov
popa
dec
jmp
mov
loope
fwait
ret
adc
cmp
ret
in
nop
lods
mov
xchg
inc
push
pop
sahf
pop
sbb
outsl
push
gs
ss
subb
xor
lcall
sub
jno
sbb
add
insl
jno
ret
jmp
sub
add
pop
add
add
add
pop
add
pusha
call
sbb
jle
invd
sahf
out
ljmp
pop
push
sar
pop
outsb
add
xchg
xchg
popa
sbb
int
mov
add
sbb
jle
pop
sbb
popf
mov
push
mov
and
mov
mov
fdiv
sbbb
call
pusha
rorl
mov
aaa
or
or
out
mov
mov
xchg
rclb
imul
fs
cmc
mov
call
lcall
je
xchg
dec
mov
mov
and
sbb
scas
mov
push
or
pop
sbb
xor
xor
mov
addr16
xchg
dec
call
data16
push
orl
popf
fnstsw
jmp
cmc
leave
frstor
fimuls
sbb
mov
lret
imul
xlat
push
xor
mov
call
ljmp
mov
add
cmpb
icebp
mov
mov
jno
fists
add
and
sub
jbe
add
sub
int
xorb
call
sub
mov
iret
jns
scas
lock
cmp
cmp
pop
lock
pop
sbb
mov
ss
pop
inc
cmp
and
test
add
pop
jmp
movsl
pushl
outsb
outsb
fdivp
push
idivb
jne
xchg
pusha
jno
or
xor
es
pop
popa
mov
orb
scas
jae
loope
lahf
insb
pop
xchg
pop
add
xor
cs
lcall
or
mov
loopne
sub
push
jo
cmp
mov
test
and
nop
out
xchg
ror
xor
push
add
test
xorb
xchg
aam
mov
dec
js
out
jmp
ljmp
push
clc
inc
cmp
aaa
sti
sahf
shll
xchg
js
int
cmc
jmp
xor
adcb
decl
mov
scas
ds
xchg
das
and
inc
rcrb
inc
inc
hlt
mov
ja
xor
cmp
mov
mov
cmovg
xchg
lods
add
lahf
push
addr16
das
js
daa
jge
test
cli
test
shrb
pop
outsl
add
cmp
lcall
lret
fdivs
dec
shlw
test
pop
dec
or
insb
and
mulb
ja
cmp
push
movsl
clc
rolb
add
andb
mov
mov
mov
mov
jp
ljmp
cli
inc
xlat
xorb
push
inc
jo
push
jmp
inc
xchg
nop
out
scas
out
jo
jmp
out
popaw
pop
divb
lret
sub
rcrl
loope
xchg
pop
adc
in
std
ja
std
xchg
mov
sahf
or
xchg
add
popa
and
pop
push
and
sub
pushf
push
jle
ja
incl
rolb
jle
aaa
push
push
mov
loopne
jl
mov
test
cmp
decl
scas
add
fimuls
mov
movsl
dec
inc
call
mov
jg
xor
xchg
or
lahf
shrl
pop
mov
addr16
clc
pop
or
add
cmp
orl
es
aam
inc
mov
adc
sbb
movsb
inc
push
jbe
js
and
nop
pop
mov
mov
ljmp
cmc
sbb
inc
lcall
dec
pushf
cmp
je
or
xchg
and
sub
loop
and
sub
stos
or
sbb
test
and
pop
insl
bound
push
lods
add
fildll
fsubrs
add
scas
pop
ret
mov
mov
push
lcall
add
daa
cmpsb
fnstsw
out
fistps
shlb
inc
js
xchg
xor
enter
scas
mov
adc
jnp
out
xor
or
and
dec
les
push
ss
pushl
mov
loopne
out
pusha
popl
add
cs
pop
aaa
mov
adc
cmovbe
mov
add
fwait
nop
std
add
movzbl
push
lods
jecxz
pop
add
gs
gs
push
jbe
dec
cmp
mov
sti
jge
ja
sahf
pop
dec
mov
pop
jge
push
js
outsl
add
inc
adc
js
subl
ljmp
xchg
pop
push
leave
aad
adc
incl
add
pop
push
bound
push
push
cmpsb
lds
inc
pop
mov
decl
les
add
lea
add
insb
aad
pop
or
sbb
out
xor
push
js
mov
aam
test
dec
js
pop
pushl
call
xor
fs
adc
adc
mov
pop
data16
mov
sti
pushl
add
emms
rcrb
mov
sub
and
cmp
jg
test
sbb
and
push
push
imul
call
hlt
cmpsl
mov
cmpsl
add
or
stos
movsb
lret
mov
sahf
pop
das
lds
sbb
aam
dec
sbb
inc
les
adc
ja
daa
sub
mov
xchg
inc
push
in
mov
fsubs
mov
mov
outsb
test
popf
jne
xlat
pop
xor
movsb
pop
dec
add
clc
pop
repnz
add
enter
call
jecxz
adc
loopne
inc
adc
mov
decl
enter
jl
inc
loope
and
mov
xchg
inc
mov
xchg
mov
sbb
jg
or
fisubrl
xchg
xchg
pop
jnp
and
push
mov
lcall
loope
iret
cmp
add
fdivrl
mov
ret
and
push
xor
adc
push
pop
cmc
xchg
clc
je
jb
fwait
dec
outsl
push
xor
insb
lock
ljmp
movsl
loope
or
int3
pop
orl
les
dec
add
inc
add
orb
cli
mov
xchg
push
sbb
fiaddl
out
xor
clc
mov
cltd
and
test
and
sub
mov
bound
imul
ret
or
call
xchg
xchg
sbb
inc
lea
xchg
dec
push
xor
add
inc
lock
jecxz
jle
adc
and
or
decl
add
nop
dec
pop
ficoms
push
cmp
push
shlb
add
fs
fcomip
call
adcb
int3
add
push
scas
mov
xchg
dec
sub
sar
mov
iret
mov
hlt
fldcw
cmp
mov
neg
decl
mov
std
clc
adc
mov
mov
dec
and
icebp
ljmp
xchg
push
inc
adc
adc
jbe
cmpsl
add
sub
sub
lret
incl
push
rorb
inc
mov
push
push
push
add
jg
add
push
cmc
lcall
les
sub
negb
cmc
cli
inc
push
or
xchg
in
addl
fistps
sbb
push
xchg
inc
vpsubsb
lods
rcrb
les
xchg
mov
jecxz
dec
jl
adc
fsubs
call
add
nop
inc
adc
in
pop
sub
lretw
xchg
mov
xor
stos
fisubrs
popa
pushf
add
xor
rorl
sub
movsb
xor
sbb
shll
dec
adc
pop
shlb
mov
add
mov
out
decl
fwait
rcrb
stos
pop
fs
loopne
sarb
and
push
push
adc
incl
lods
or
xor
adc
push
mov
push
pop
rorl
xchg
fidivrs
adc
incl
and
cmp
les
push
push
bound
sbb
inc
xchg
rclb
lock
inc
xchg
movsb
push
stc
xor
xor
add
add
inc
lret
sub
and
sub
or
fwait
or
sarb
jecxz
sub
clc
pushf
adc
pop
sub
decl
imul
sub
lcall
adc
mov
push
int3
shl
sbb
mov
adc
cmpb
aad
cmp
rorb
xor
mov
out
mov
mov
shll
cmp
mov
mov
dec
dec
adc
pop
add
and
lcall
jl
rcrl
push
adc
inc
and
and
push
push
mov
jae
add
sub
enter
dec
inc
pop
cltd
dec
inc
xchg
lods
dec
dec
loope
scas
pusha
add
jae
cmc
adc
ljmp
dec
push
adc
push
and
xor
add
call
dec
sub
addb
pop
sti
sbb
stos
or
xor
mov
push
mov
mov
incl
cmp
repz
inc
add
lea
mov
sbb
jmp
push
mov
mov
fsts
or
mov
and
lock
push
outsb
movsl
jg
insb
push
test
or
mov
and
xchg
loopne
outsl
adc
and
test
or
test
jo
xchg
decl
mov
inc
add
inc
adc
ljmp
mov
add
adc
incl
mov
sahf
xchg
push
and
mov
or
lock
mov
or
pop
lcall
inc
mov
shlb
xor
inc
fcompl
call
xchg
loop
aam
es
xchg
push
sbb
add
adc
xchg
mov
out
mov
add
inc
leave
inc
xchg
mov
adc
push
pop
loopne
push
data16
jecxz
out
add
xor
test
push
xor
add
test
mov
arpl
xor
sbb
pop
inc
jns
xor
outsl
jmp
and
adc
fldenv
and
andl
adc
mov
insl
jbe
pop
adc
roll
jp
xchg
ret
push
cli
mov
inc
dec
out
aam
jg
or
xor
or
or
orb
add
lcall
ficomps
ss
jo
incl
xchg
sub
sahf
or
and
mov
or
pusha
xchg
aad
shrl
test
mov
repz
sti
or
ljmp
cs
jno
fsubs
inc
and
andl
popa
decl
jg
inc
add
push
mov
inc
fsubrl
rcll
imul
or
decl
dec
lcall
hlt
add
ljmp
fwait
nop
sub
xor
dec
loope
adc
jo
insl
and
xchg
add
icebp
mov
fs
dec
mov
add
adc
sbb
loop
mov
xlat
lea
lret
in
scas
cmp
enter
ljmp
andl
in
lret
popf
pop
stos
adc
mov
add
std
or
add
or
and
or
mov
ret
jmp
cli
decl
push
mov
add
mov
pop
push
inc
push
or
cmp
push
divb
mov
add
cmp
pushl
pop
sbb
xchg
das
and
or
mov
sahf
js
xor
enter
call
js
sbb
mov
pop
insl
jg
jo
in
iret
add
sub
repnz
call
lods
cmp
jns
push
out
xchg
add
pushl
repnz
iret
cmp
pop
enter
sub
cmp
imul
and
add
push
sarb
jle
rclb
in
mov
mov
jg
ljmp
sub
jns
cmp
decl
inc
add
inc
xchg
sti
jnp
add
pushl
add
jne
fldl
inc
cld
stc
cmp
hlt
jge
fmul
lds
into
fisttps
jg
jb
pop
nop
sar
push
mov
mov
pop
lock
incl
cmp
cmp
popa
icebp
aad
sbb
adc
outsb
and
hlt
mov
pop
popa
sub
and
xchg
mov
mov
dec
cld
jl
xchg
inc
xchg
xchg
outsl
fdivr
fistpl
add
int3
mov
addr16
add
add
inc
adc
sub
rclb
lods
cmp
adc
xchg
push
adc
jnp
movsb
sarl
sbb
or
cld
lcall
or
add
or
inc
inc
push
cli
decl
mov
pop
mov
mov
sbb
pop
cmp
mov
sub
xor
fs
mov
mov
aam
nopl
inc
sbb
inc
sbb
incl
jge
push
push
mov
pop
adc
sbb
xchg
int3
jmp
inc
bound
jmp
mov
ja
add
ljmp
testb
mov
loop
inc
call
or
push
lods
ficomps
lahf
push
adc
push
mov
push
and
xor
ss
jmp
das
push
jecxz
mov
test
add
test
mov
sahf
test
rcrl
enter
xor
mov
jecxz
jno
cmp
cmp
xor
mov
mov
sbb
cmp
popa
sbb
xor
test
decl
sub
es
aad
in
in
les
test
mov
and
sbb
adc
inc
ret
inc
cli
inc
jmp
fcmovbe
push
pop
dec
scas
cmp
cmpsl
je
call
lahf
cld
mov
xor
filds
xchg
lcall
pop
addb
fidivrl
adc
rclb
xor
add
push
xor
sbb
fs
push
cmp
mov
cmpl
notb
dec
sbb
inc
clc
mov
cmpl
mov
pop
loopne
aad
enter
sbb
fadds
cmp
inc
cmp
ljmp
cmp
push
dec
adc
or
subl
cmp
add
sbbl
pop
mov
scas
xchg
push
push
ret
jge
dec
mov
fs
mov
xor
or
decl
sarl
sbb
leave
push
push
inc
cmp
sahf
push
les
leave
xlat
or
orl
ljmp
or
call
inc
adc
bound
sbb
pop
les
lret
incl
insl
inc
or
fidivl
loop
mov
sbb
rorb
pop
insb
sub
notb
incl
test
adc
sub
or
add
dec
adc
push
xor
outsl
pop
dec
cmpsl
cltd
cwtl
cmpsl
jp
or
loop
inc
subl
adc
pop
sub
pushl
mov
xor
jl
out
sbb
or
jl
inc
subl
fs
addb
andb
jge
pop
aaa
mov
mov
and
xchg
jl
mov
sbb
inc
pop
adc
into
popf
ljmp
mov
test
in
mov
int
mov
jmp
int
push
pop
call
loopne
push
inc
addr16
add
mov
mov
xor
mov
xchg
xchg
and
test
pusha
dec
fwait
xchg
filds
hlt
decl
and
adc
adc
push
dec
pop
add
sbb
decl
movb
or
and
dec
lret
sbb
and
in
add
rol
jg
jmp
xor
pop
out
fwait
and
or
sub
mov
dec
inc
cs
std
call
dec
fwait
mov
popw
jp
bound
sbb
mov
test
es
add
adc
adc
inc
inc
ss
lds
rcrl
cmc
jg
add
adc
sar
add
imul
inc
pop
mov
mov
adc
pop
push
adc
aaa
xchg
dec
sbb
add
popf
xchg
aaa
std
stos
mov
test
cs
push
call
adc
in
pusha
int3
push
ds
dec
mov
shl
test
loop
mov
loop
imul
xorb
and
xor
push
cwtl
xchg
fisubrs
mov
xor
xchg
icebp
sub
lret
lods
xor
add
mov
lds
mov
jnp
daa
ret
mov
adc
dec
int
pushf
xor
inc
scas
call
push
nop
test
push
mov
or
aad
add
and
jbe
dec
outsl
mov
lods
cmpsl
sbb
lds
add
mov
sub
mov
adc
sub
test
cmp
push
inc
std
ljmp
add
xchg
cmp
ret
pop
mov
and
es
xchg
mov
in
push
cld
stos
sbb
sbb
shrl
dec
push
out
sar
in
inc
adc
sbb
add
sahf
mov
cmp
gs
subb
sub
call
push
mov
popa
and
mov
xchg
jg
and
arpl
nop/reserved
fs
test
in
dec
pop
gs
pop
or
adcl
add
mov
aas
and
push
pushf
subl
dec
pop
insl
pushw
gs
mov
add
xchg
les
mov
jmp
pusha
adc
clc
das
cmp
add
adc
push
cwtl
shlb
or
pop
cli
sub
cmp
dec
or
ljmp
stos
sbb
call
push
xor
mov
dec
jg
jmp
insb
mov
ret
cli
daa
ret
push
inc
movsb
pop
or
test
lock
mov
test
xor
or
enter
and
pop
insl
cmpsb
jne
cltd
mov
loope
add
ficompl
sbb
popf
inc
push
divl
xor
lcall
add
lock
adc
mov
in
sub
lcall
test
pop
je
decl
jns
adc
cltd
inc
cmp
push
ret
jbe
jmp
pop
sbb
or
dec
push
xchg
add
je
popa
sub
sbb
add
movsb
incl
jo
or
ficomps
cli
xchg
push
and
outsb
inc
xchg
push
rcrb
jecxz
inc
jo
add
inc
arpl
loopne
adc
es
imul
mov
xchg
sub
push
incl
lret
cmpsl
bound
mov
popa
or
sub
push
imul
sbb
and
add
or
call
jb
mov
add
hlt
add
inc
ss
add
pop
shrl
mov
clc
add
push
sbb
into
das
jns
ficompl
scas
ljmp
add
sbb
mov
or
lock
int
sub
add
pop
inc
or
add
jo
shll
sub
pop
dec
pop
sbb
fwait
push
cmp
mov
mov
pop
arpl
cld
jle
lock
das
je
sti
sub
jnp
subb
inc
dec
dec
jp
add
dec
decb
inc
sbb
cwtl
insb
movsl
sbb
jnp
les
or
sub
out
in
cmp
es
das
xchg
adc
inc
push
in
mov
push
push
or
jecxz
xchg
sub
mov
add
lcall
and
sub
stos
test
jno
fstl
test
scas
cli
cmp
jp
movsb
inc
cmp
add
hlt
rclb
cld
call
xor
sub
fwait
xor
test
cmc
pop
sbb
adc
push
adc
jg
pop
repz
cmp
add
cwtl
pop
adc
mov
dec
outsb
mov
add
es
inc
xor
pushl
orl
adcb
push
mov
sbb
jb
sub
mov
fiaddl
incl
into
insb
fldcw
enter
lds
sbb
les
fcmovu
lcall
adc
inc
aas
mov
sbb
xlat
sbb
mov
fiaddl
dec
inc
adc
pusha
cmpsl
incl
stos
jbe
mov
cmpsb
xor
cmpsb
pop
dec
push
adc
aaa
jns
fdivrp
fisttpll
pop
std
inc
mov
dec
test
jb
push
nop
popf
adc
iret
pop
inc
test
add
push
cli
incl
addr16
imul
ljmp
inc
sbb
std
sbb
push
sahf
xor
jmp
cmp
psubb
adcb
inc
xchg
add
je
push
adc
mov
pop
mov
jo
mov
sub
xor
cmp
add
adc
pushl
loop
rclb
xor
adc
sbb
les
jno
loopne
mov
stos
clc
lcall
jno
mull
mov
push
daa
jne
pop
mov
inc
adc
dec
movb
inc
push
loope
push
fs
iret
dec
mov
mov
inc
loopne
cmp
test
loopne
hlt
dec
fiadds
push
sbb
jne
jns
push
cwtl
ljmp
inc
popf
jae
pushf
outsb
int3
pop
mov
fcmovnbe
sub
out
movsb
ret
ret
aaa
or
fs
jecxz
mov
adc
jg
loopne
add
pusha
loope
xchg
imul
jbe
aam
xchg
mov
call
and
pusha
push
and
fistpl
adc
test
sub
out
clc
add
xchg
pop
and
jnp
aaa
push
or
inc
mov
jb
dec
adc
adc
fmull
add
aaa
cli
and
dec
or
adc
adcl
ret
jb
lea
cwtl
or
mov
es
lds
sub
xor
add
outsl
add
xlat
shll
inc
stos
jmp
data16
mov
dec
adc
sbb
mov
mov
add
pop
icebp
mov
ljmp
je
xlat
jb
jo
sbb
jns,pn
mov
xor
jb
addl
xor
arpl
daa
sub
js
clc
scas
clc
lock
lock
pop
push
stos
fdivrs
fisttpl
cmc
aad
stc
filds
fnstsw
call
xchg
testl
inc
sarb
out
fnstcw
fcoml
aad
jnp
cs
xchg
sub
icebp
rcrl
dec
jmp
xlat
cld
add
stos
leave
mov
pop
cmp
lcall
inc
test
outsl
xchg
arpl
pop
int3
popf
xor
incl
sub
pop
pusha
sub
push
or
fwait
push
mov
aam
fwait
adc
pop
leave
push
sbb
pop
xchg
movsl
je
mov
hlt
inc
cmpsl
jecxz
push
inc
mov
cmpsl
and
test
imul
xchg
sbb
insb
call
loope
push
push
lret
popf
scas
fldenv
mov
idiv
aad
scas
shrb
jno
ljmp
cli
jmp
push
xor
pop
aas
mov
aam
imul
cmpsb
movsb
dec
rorl
dec
adc
rclb
fwait
hlt
sbb
shll
mov
jnp
inc
sbb
mov
mov
test
add
mov
das
mov
cli
lahf
add
mov
ret
cmp
loopne
aad
std
incl
popl
push
cmpb
push
push
jg
inc
or
nop
push
add
dec
mov
movb
push
jecxz
mov
outsl
cwtl
movaps
dec
push
lret
rolb
fs
jo
pop
cmpb
call
jg
sbb
nopl
xor
add
dec
pop
imul
mov
idiv
ss
add
inc
aam
adc
inc
test
ret
imul
ljmp
push
cmpsl
mov
xor
push
loopne
int
cmp
fucomi
cmc
sti
mov
pusha
add
sbb
loope
test
out
xchg
add
push
aas
cmpsb
lcall
negb
push
cs
sbb
rcrl
mov
enter
jge
dec
ljmp
movsl
cmpl
xor
and
insl
fldl
out
decl
pop
sub
sbb
pop
mov
aaa
ja
scas
cli
dec
adc
rcr
cmp
jnp
in
jg
sbb
mov
fsubrs
xor
imul
mov
push
inc
push
xor
fimull
or
jmp
mov
out
adc
ja
sti
filds
out
add
inc
lock
lock
nop
jle
dec
push
dec
pushf
mov
ret
cmovns
push
fistps
sub
and
fstpt
lods
jo
sub
or
push
add
nop
lods
ljmp
jo
add
push
push
andb
push
scas
inc
es
andb
jp
adc
or
inc
nop
mov
mov
and
sub
ljmp
enter
xor
inc
mov
es
and
dec
nop
clc
mov
sub
push
lcall
clc
and
sub
add
mov
push
cmp
test
test
mov
adc
adc
sub
xor
adc
cmp
xchg
xor
loop
mov
xchg
mov
add
or
daa
xchg
jb
mov
push
xchg
cmp
and
andb
sub
or
ja
jg
add
std
mov
outsl
sub
and
or
ret
mov
test
push
mov
es
in
push
mov
inc
nop
sbb
adc
ret
add
mov
orl
jmp
ficoms
cmpsb
mov
decl
lods
inc
das
fldt
cmp
mov
sbb
or
push
orl
sbb
das
mov
mov
jmp
pusha
jmp
std
cld
stos
lret
aaa
decb
jle
fdivrs
push
add
incl
aas
mov
lcall
mov
pop
push
pushf
add
aas
pop
xor
mov
jmp
cmp
pop
clc
add
mov
scas
scas
lcall
mov
sbb
mov
aas
xchg
aad
or
mov
orl
out
cmp
in
mov
xor
mov
sbbl
mov
cli
add
add
pop
lods
mov
ret
jle
and
stos
call
fsubrl
addr16
mov
fdivp
rorb
bound
add
inc
jo
xor
pop
loopne
decl
dec
mov
sub
push
fmul
rclb
je
push
rorl
fimuls
sub
test
idivb
xor
xorl
pop
sbb
pop
xchg
inc
cmc
and
add
jg
mov
adc
pop
push
sbb
and
xchg
int
mov
pop
cld
mov
pop
cld
aad
push
mov
adcl
mov
in
sahf
push
loop
xchg
cmc
push
xchg
xchg
rcl
fmuls
mov
dec
es
xchg
test
dec
jne
mov
ljmp
cmp
or
mov
fstpl
addr16
ret
push
int3
les
daa
test
ljmp
or
testb
into
mov
sbb
cltd
fdivr
mov
fwait
dec
push
or
nop
int3
xor
or
data16
or
push
sub
sbb
mov
clc
and
cwtl
out
icebp
push
mov
aad
ret
dec
std
decl
cmp
imul
insl
insl
sub
push
subb
xchg
or
and
test
add
mov
push
sbb
inc
mov
les
stos
mov
inc
ljmp
ficoml
mov
pop
push
xchg
sub
sbbl
push
test
jg
jg
xor
xchg
sub
push
lret
xchg
loopne
or
or
xor
lds
std
xor
push
and
xchg
ficoms
lods
jg
sub
cwtl
lcall
dec
or
call
daa
dec
sub
or
cmp
add
adc
xor
cmp
movsb
test
push
pusha
jb
add
shlb
sub
enter
cmp
mov
fwait
movsb
or
xchg
cmp
sub
rolb
inc
pop
rclb
sub
mov
push
inc
xchg
lds
push
in
mov
adc
push
clc
push
mov
call
inc
ljmp
mov
push
pop
cs
lods
adc
or
adc
ljmp
sbb
push
jno
cmp
lcall
call
popa
adc
xor
fistpl
inc
mov
mov
lods
arpl
ljmp
les
xlat
push
dec
adc
pusha
adc
adc
decl
mov
cmpsb
cmp
pop
mov
out
subb
and
cmp
push
repz
decl
or
mov
cwtl
inc
data16
pushl
aam
adc
xor
xlat
inc
pop
call
mov
mov
sbb
in
clc
mov
gs
fcmovnu
out
xchg
imul
inc
or
jns
adc
loop
adcb
ret
jb
adc
jb
call
mov
or
dec
mov
dec
pop
ret
push
mov
push
add
stos
add
or
js
ljmp
call
out
js
sub
shlb
lods
pushf
orb
ret
adc
mov
sarb
test
test
inc
xor
loopne
xor
sub
test
clc
imul
sbb
decl
out
ja
orb
mov
add
mov
cmpsb
push
or
inc
add
loopne
xchg
mov
cli
loop
push
dec
push
push
outsb
jg
test
mov
pop
xor
or
dec
stos
mov
push
outsl
mov
hlt
cmpsb
xchg
popa
adc
mov
xor
cmc
lds
sub
fsts
fidivl
mov
cmc
mov
fmull
data16
mov
int3
fmull
mov
push
jbe
fsubr
sbb
fbld
jnp
pop
adc
shll
rcrb
or
cmp
cmc
pushf
xchg
adc
pop
and
pop
mov
sub
js
aas
insb
xor
ds
cmp
push
adc
inc
test
lret
movsb
icebp
fcmovne
push
pop
lods
add
pushf
dec
cli
incl
jb
mov
cmp
lock
xor
sbb
call
es
add
lcall
xor
xor
test
imul
loopne
cmp
call
test
mov
movsb
fisubl
cs
pop
and
lret
sbb
test
dec
iret
daa
adc
lret
movsl
add
ljmp
ljmp
sbb
lods
push
mov
mov
fdivs
aas
sti
and
xor
incb
inc
push
xor
xchg
adcb
or
adc
andb
mov
arpl
push
fadds
sub
add
adc
lock
jg
sub
push
xor
pop
out
movsb
scas
outsb
cmpsl
push
and
inc
mov
flds
and
icebp
mov
jg
fs
je
mov
gs
and
lds
rolb
push
lret
dec
xor
jnp
scas
insl
movsl
lea
imulb
loop
test
inc
pop
inc
xchg
adc
inc
jecxz
mov
sbb
dec
cli
sub
jmp
outsl
xchg
repnz
lahf
outsb
out
pop
call
fbstp
lea
lods
jb
lods
cmpsb
in
lods
imul
lcall
arpl
aaa
and
cmpl
add
cmp
sub
fwait
stos
push
adc
mov
xor
jg
dec
pusha
sbb
rorl
add
cltd
pop
add
add
xchg
sbb
pop
mov
das
jge
pop
jg
stos
dec
stos
rcrb
movsl
fmuls
ljmp
push
test
out
ja
jb
sub
lcall
outsb
gs
mov
dec
pop
pop
loopne
sub
xor
inc
jle
jecxz,pn
lret
or
xor
inc
outsb
lds
pusha
and
xchg
jp
inc
xchg
test
pop
xchg
mov
mov
pop
test
ljmp
pop
into
orb
lods
mov
pop
aaa
fimull
pop
pop
nop
mov
mov
push
sub
subl
jmp
mov
lcall
cmp
mov
outsb
movsb
lock
lods
fiadds
ss
arpl
mov
aas
movsb
mov
jb
iret
cmpsb
call
mov
cmp
mov
or
loope
pushl
xor
adcl
adcb
and
dec
inc
imul
cmp
mov
jmp
into
sahf
mov
and
lcall
adc
mov
pop
cmc
in
hlt
dec
hlt
inc
xchg
cs
dec
mov
enter
fimull
add
aad
arpl
mov
dec
cltd
and
and
pop
mov
ss
incl
sub
data16
imul
icebp
fidivl
cli
and
add
arpl
cs
lcall
mov
sbb
sti
add
pop
push
mov
xor
ljmp
cli
jmp
js
out
rdmsr
in
cmpsb
xor
adc
pop
out
mov
push
push
inc
sub
jo
pop
cld
stos
push
xchg
rorb
outsb
mov
sti
xor
out
add
fidivs
clc
pushl
push
loope
sub
sub
push
add
pop
adc
and
rolb
sub
sub
push
or
sub
mov
jb
sub
roll
dec
dec
pop
push
push
pop
enter
mov
cmc
mov
sub
insl
sub
sub
idiv
jmp
pop
push
add
je
sub
stos
jl
xor
mov
addr16
arpl
dec
jmp
xchg
or
mov
push
or
push
int
inc
aam
or
pop
inc
cmp
pcmpeqb
aas
or
xor
call
je
scas
sub
fstpt
push
sbb
adc
mov
or
shrl
mov
xor
sti
jg
and
push
push
arpl
inc
adc
cli
adc
add
cmp
imul
xor
push
nop
subl
push
push
scas
cmpsb
xchg
inc
clc
rep
or
inc
inc
js
mov
adc
hlt
imul
or
xor
loopne
cld
in
xchg
add
add
add
movsb
lock
loop
mov
add
adcl
adc
lods
shlb
decl
xchg
loopne
push
loope
mov
cli
lock
push
sti
mov
stos
loope
inc
inc
cmp
aaa
jne
mov
in
pop
jle
scas
mov
mov
sbb
add
shlb
dec
xchg
icebp
mov
push
add
xchg
and
lcall
sbb
repnz
fists
and
decb
nop
add
jb
pop
rolb
or
addb
add
lock
sbb
sbb
add
rcr
ss
add
push
xor
inc
xor
pop
mov
sbb
pop
incl
xor
pop
leave
sar
in
repnz
insb
movsb
sub
mov
out
movsl
sub
dec
outsb
push
out
test
cmp
sub
mov
stc
stos
lods
out
subb
arpl
mov
scas
test
sbbl
test
int3
mov
and
test
cmp
ljmp
sub
dec
leave
cmp
jp
out
shlb
in
push
lock
jmp
addl
mov
icebp
rolb
sbb
push
incl
sbb
data16
setns
xor
das
add
dec
cli
xor
add
or
sbb
fs
mov
mov
and
pop
pushf
sub
pop
rcll
cmc
pop
xor
and
sub
add
popf
mov
pusha
pusha
mov
xor
adc
cli
lods
pop
mov
pop
mov
push
add
inc
add
dec
add
and
cmp
sti
xchg
mov
jl
testb
lods
and
mov
hlt
lcall
and
sub
pop
and
lods
adc
xor
xor
fbld
mov
cmp
and
jbe
sub
je
sub
roll
sti
mov
push
inc
and
rclb
aas
je
hlt
mov
std
pushl
xor
rcr
ss
inc
sub
gs
sti
idiv
push
and
inc
stc
jno
or
inc
xlat
xor
cmp
lcall
test
jb
pusha
popa
movsl
xchg
push
push
inc
mov
jge
cs
or
xorb
push
inc
decl
lock
add
bound
push
pusha
in
sub
outsl
mov
das
xor
xor
push
imul
test
outsl
sub
hlt
or
xor
xor
call
stos
cmpl
int
incl
or
nop
and
adc
xor
sarl
ss
std
mov
inc
imul
ret
push
sbb
mov
clc
repnz
aad
mov
adc
inc
push
and
xor
repz
sub
sarl
xchg
test
data16
ljmp
pop
add
pop
jmp
lds
addb
pop
mov
decl
mov
jae
rorb
ljmp
jp
xor
arpl
lret
xchg
dec
mov
ljmp
jle
jl
push
pushf
clc
cmc
jbe,pn
adc
fldl
sub
adc
pusha
push
cmp
xor
and
cmpl
and
cmp
in
decl
sbb
andb
and
inc
aas
fcomps
adc
cmp
bound
popa
adc
ljmp
push
pop
cwtl
popa
pop
mov
and
clc
pop
jp
dec
stos
ss
aad
shl
pusha
rolb
out
sahf
push
incl
bound
or
fisubrl
aam
pop
mov
fimuls
mov
cli
jmp
cltd
jb
pop
das
insl
mov
mov
decl
leave
fcmovbe
int3
mov
jo
mov
lods
cli
add
ficoms
dec
or
mov
cmp
pop
mov
call
les
mov
dec
inc
lea
decl
cmp
xor
cmp
push
sbb
push
rclb
sbb
call
std
in
aas
inc
inc
sub
loopne
repz
push
xor
dec
xchg
inc
mov
gs
dec
aas
jns
adc
arpl
adc
test
push
loop
cpuid
add
mov
xchg
adc
sub
pop
sti
and
jne
lcall
jg
aad
popf
test
inc
pusha
ds
pop
shll
movsl
ja
or
pushl
movsl
js
dec
sub
sti
or
pop
cld
sub
mov
sub
dec
dec
xor
pop
sub
xorl
add
sahf
dec
mov
dec
lcall
mov
stc
mov
lcall
mov
or
inc
ret
lahf
bndldx
clc
pop
mov
fcomip
test
dec
rclb
push
and
insb
test
mov
jb
imul
movsl
pop
les
sub
mov
arpl
subb
cmp
pop
push
jno
xchg
mov
repnz
mov
lock
int3
movsb
or
hlt
push
mov
xchg
or
push
mov
push
mov
cmpsb
sub
decl
arpl
mov
shrb
mov
cs
xchg
mov
scas
xchg
cmp
ljmp
cmp
add
lret
adc
jb
or
mov
mov
jae
dec
repz
jmp
cli
call
ljmp
adc
mov
pop
dec
outsl
incl
and
bound
test
lods
std
test
fcmove
xchg
cmp
add
add
aaa
sub
cmpb
push
ret
jle
out
test
je
adc
minps
xor
lret
scas
pop
mov
xchg
movsl
cld
pushl
cwtl
orb
ljmp
ja
jecxz
sbb
or
ja
push
xor
aaa
loop
cs
sub
mov
mov
cltd
mov
loop
into
mov
fistl
fistps
mov
and
idivb
sbb
cmc
sbb
pop
or
cmp
decl
rorb
cmp
movsb
bound
inc
hlt
add
and
imul
mov
out
arpl
pushf
aam
push
nop
out
test
cwtl
in
cmpsl
ja
mov
mov
jnp
mov
lds
mov
jp,pn
test
mov
add
cmp
or
lods
or
incl
outsb
js
scas
out
into
fdiv
xchg
jmp
scas
jmp
enter
lret
pop
lret
mov
sbbl
scas
xor
pushf
ds
inc
adc
and
jecxz
add
sbb
mov
hlt
loope
mov
cmp
pusha
push
push
lods
add
cld
and
stos
pop
cmpb
push
sub
sub
test
in
incl
andb
and
nop
sbbb
ret
lret
or
mov
add
ficomps
jp
add
cmp
lods
sub
ljmp
pushf
jns
stc
and
mov
jle
std
cltd
out
mov
out
pusha
push
mov
popa
lret
and
xchg
ljmp
jecxz
xchg
and
inc
fistps
fstps
xchg
ss
sbb
adc
xor
mov
lcall
incl
incl
jle
mov
pusha
dec
mov
sub
rclb
lcall
pushl
test
outsl
lcall
cmp
ljmp
xor
cmpsl
cmpl
lods
ljmp
xchg
cmp
out
mov
mov
sub
inc
es
mov
or
mov
push
push
or
nop
push
mov
jno
lods
mov
out
mov
dec
jae
adc
imul
popa
push
cmp
mov
cmpl
int3
das
lods
cmp
adcl
ja
and
in
mov
push
fs
mov
and
add
cli
add
iret
aad
outsl
mov
jmp
lcall
dec
js
sbb
xchg
jne
jne
mov
mov
test
add
add
test
add
or
lret
inc
pusha
mov
aad
cld
mov
adcl
test
xchg
inc
in
test
adc
sub
sahf
jno
cs
sbb
test
xor
repz
push
insb
insl
jecxz
lock
repz
push
sbb
int3
cld
push
sbb
xor
pop
repz
pop
xchg
incb
insb
icebp
xchg
pop
lahf
repz
fdivrp
jae
fcoms
cmc
xchg
pop
cmp
repnz
cmp
lahf
divl
fdivrs
dec
xor
jge
or
pop
and
test
sbb
cld
xor
loop
sub
jmp
les
inc
enter
pop
pop
aam
sub
insl
mov
push
mov
pushf
stos
rcl
stos
stos
mov
insb
mov
mov
add
or
pusha
lcall
jo
ret
cmovle
mov
push
std
inc
shlb
inc
xchg
shl
divb
popf
xchg
adc
shl
and
xor
mov
cmp
cli
in
jg
add
cmp
sub
arpl
addb
fadds
dec
sub
movsl
gs
ljmp
pop
repz
sbb
lods
cwtl
cmp
mov
call
js
loopne
sbb
in
mov
mov
push
iret
sarb
add
pop
pushl
add
sbb
pop
mov
insl
repnz
jne
jg
incl
push
adc
fidivrs
mov
pusha
dec
insb
pop
inc
ret
out
add
pop
fcomps
std
mov
ficoms
sub
sub
mov
hlt
lock
mov
icebp
into
decl
imul
scas
cmp
mov
mov
jmp
mov
std
cmp
dec
pop
mov
mov
jg
cld
inc
jnp
or
loopne
fiadds
push
clc
inc
addb
loop
lds
mov
inc
sbb
adc
mov
jmp
mov
popa
mov
loope
pusha
lds
out
add
movsl
insl
sub
fdivs
fcoms
jg
dec
nop
adc
adc
fmuls
adc
es
push
faddl
aaa
jmp
xor
leave
sub
ds
adc
jg
xchg
inc
movb
mov
gs
stos
dec
dec
rclb
xor
cmp
jg
or
mov
vpaddusb
or
stos
and
adc
jge
rorl
movsl
gs
aaa
sub
int3
push
adc
inc
mov
jg
decl
cmpsb
lcall
inc
sbb
and
leave
es
push
pop
lods
call
add
push
movsl
aad
cmc
fdivs
pusha
xchg
cltd
add
in
adc
mov
ljmp
pop
test
ret
xor
adc
pop
jp
fsubs
out
push
cld
jg
mov
xchg
insl
xchg
sub
pop
mov
js
addr16
pushl
xor
xchg
cwtl
jns
out
xchg
fidivl
mov
pop
sbb
push
scas
ljmp
xor
jno
std
pushf
lcall
call
bnd
sbb
dec
jmp
out
mov
push
dec
mov
push
dec
in
into
adc
jno
mov
sbb
push
leave
push
dec
mov
jecxz
push
imul
lret
dec
or
outsl
insb
repz
pop
or
out
mov
inc
cld
adc
inc
inc
stos
and
incl
fimull
dec
mov
imul
fwait
dec
jbe
xor
shlb
in
mov
jae
imulb
add
lods
jbe
and
fcmovnu
pusha
dec
cmp
faddl
dec
mov
mov
popf
sbb
adc
loope
jge
cmp
lcall
decl
decl
sub
xchg
lcall
into
rorb
sub
cld
xchg
jmp
cli
push
fwait
and
or
movsb
mov
jle
and
stos
push
pushl
lret
dec
mov
xchg
scas
xchg
scas
mov
test
lock
mov
mov
push
test
mov
mov
dec
test
ljmp
mulb
and
imul
lahf
in
ret
jmp
imul
inc
pop
push
mov
imul
or
ficoml
mov
lcall
sbb
orb
in
mov
ljmp
movsb
jbe
and
aas
sub
push
mov
or
add
mov
adc
das
and
xchg
lret
ret
call
or
clc
popa
adc
loope
dec
push
inc
adc
adc
and
clc
inc
ljmp
or
rolb
mov
test
jl
fimull
out
xchg
jecxz
pushf
and
rcrl
cld
adc
and
test
pushl
hlt
fwait
xchg
cmp
cli
arpl
movsb
mov
imul
mov
incl
or
lcall
imul
pop
idiv
mov
sub
outsb
ret
pop
sbb
dec
nop
ret
dec
pop
adc
cmp
popa
test
adc
sbb
pusha
add
mov
dec
jbe
mov
mov
add
or
je
xchg
jno
or
push
pop
dec
jmp
lds
shll
mov
sahf
pop
add
sub
sub
pop
cmp
jbe
sub
pushf
add
imul
outsl
sub
or
in
incl
gs
test
mov
xchg
dec
addl
pusha
pushf
gs
pusha
pop
pop
pusha
add
das
sahf
loop
add
xrelease
test
xchg
jecxz
ret
nop
jp
add
pushl
or
movsb
adc
sub
test
cwtl
lret
and
cmp
rcrb
pushl
sub
push
xchg
test
and
imul
add
mov
or
daa
and
add
test
in
pop
ss
add
movsb
cld
decl
inc
pop
arpl
enter
movsb
mov
mov
je
push
cmp
jbe
aam
decl
in
test
cmp
sbb
popf
dec
andb
insl
xor
push
inc
xor
leave
xor
xor
inc
imul
mov
je
cld
and
mov
pop
std
aaa
cld
incl
mov
imul
and
mov
js
insl
add
and
insb
jg
and
movsb
fsubrs
stos
cmp
call
and
out
imul
test
stc
sub
jns
dec
adc
cmp
enter
inc
popf
hlt
imul
add
lcall
or
int
cwtl
cmp
dec
lahf
cmp
cmp
subl
xchg
cwtl
lret
mov
dec
loope
arpl
cmc
call
mov
sbb
lea
mov
sbb
inc
adc
lret
fstpt
jo
stos
push
aad
adc
jns
cmc
add
jmp
sbb
lods
mov
add
pop
in
xchg
pop
cli
dec
das
stos
xlat
sub
scas
movsb
cltd
jbe
ljmp
add
fisttps
mov
dec
rorl
aam
add
test
ret
cmp
jns
push
xorb
imul
nop
ret
inc
pop
cmovns
mov
mov
jbe
xchg
into
sbbl
call
enter
mov
sub
push
mov
loopne
jbe
inc
in
shlb
xchg
mov
mov
mov
sahf
scas
mov
imul
pusha
mov
add
insl
push
jg,pt
xchg
outsb
in
sar
jmp
mov
mov
ljmp
jo
fcomps
inc
call
lds
outsb
je
ljmp
push
pushl
insl
int
je
sub
add
pusha
add
mov
mov
pusha
in
fs
daa
push
or
push
outsl
mov
pop
insl
add
in
cmp
mov
cmp
insl
push
pop
stos
or
push
mov
fcoml
add
adc
jmp
inc
push
sub
push
sbb
sub
out
mov
mov
imul
jae
jg
fs
mov
fsubl
shll
jle
mov
into
xor
inc
cli
leave
and
lcall
ljmp
rcll
es
cmpsl
inc
stos
jl
lea
out
xchg
shll
dec
mov
mov
arpl
xchg
mov
xor
addr16
cmovno
sbb
loopne
incl
sbb
lock
pop
add
push
mov
mov
jl
xor
clc
fidivrl
clc
decl
pushf
out
ret
ja
aaa
aad
inc
out
xchg
push
cld
xchg
shlb
adc
mov
jb
fbstp
and
add
test
pusha
icebp
sub
rorl
and
clc
daa
jle
lock
ljmp
rclb
mov
in
scas
add
dec
repnz
ss
stc
lret
hlt
cmpsl
daa
std
add
clc
shrb
dec
jg
push
pusha
sti
outsb
fistl
fimull
pop
dec
hlt
pusha
jg
roll
sarl
lcall
fucomip
mov
insl
filds
dec
pusha
clc
pop
loope
imul
pop
push
push
and
pop
push
repnz
lds
and
jg
xchg
xor
mov
in
sbb
mov
ss
popl
sub
nop
hlt
es
pushl
loopne
jae
loop
pop
call
ja
dec
test
jg
lcall
repnz
enter
out
out
cmp
add
rclb
pop
or
or
addr16
data16
xchg
jecxz
cmp
xchg
push
inc
pop
inc
mov
jmp
jg
arpl
cmpsb
jge
and
shrl
push
fadds
inc
sub
inc
js
stos
test
test
test
fstpt
xor
test
rcrb
push
add
push
push
cs
filds
dec
add
adc
dec
push
xchg
jb
jne
sbb
testb
fadds
ljmp
or
enter
xchg
and
add
and
cltd
std
call
sub
seta
mov
jp
dec
mov
xchg
clc
jns
cwtl
mov
aam
jp
xlat
js
adc
loopne
shlb
add
aam
insb
lods
mov
ret
dec
sti
xor
out
data16
andl
and
jo
mov
ljmp
cmpsb
popa
pop
movsl
add
ss
adc
gs
clc
ss
mov
ljmp
jl
sbb
sbb
cwtl
mov
out
out
arpl
xlat
pop
push
jo
inc
cmp
sar
mov
or
loopne
xor
arpl
cmp
xchg
push
btr
dec
mov
aaa
sub
sbb
test
je
mov
adc
pusha
inc
je
subb
call
cld
dec
orl
xor
add
loopne
push
xchg
xchg
sbb
add
ss
in
xor
aas
add
push
dec
lock
xchg
bound
dec
add
jg
and
xor
mov
mov
fbstp
xor
fadds
ds
push
test
inc
mov
jmp
insl
cmp
je
jnp
and
jb
js
mov
adc
adc
jbe
pop
pop
aaa
mov
dec
jg
pop
dec
js
push
pop
fnstenv
cltd
addr16
sbb
pop
loopne
pop
nop
js
cltd
lret
call
xchg
js
sub
inc
jp
sub
fsqrt
pop
mov
aaa
mov
nop
mov
pop
insl
fadd
cwtl
cmp
jbe
push
jp
bound
mov
xchg
incl
cli
out
push
xor
push
xchg
or
lcall
lcall
cmp
addr16
and
aaa
jge
dec
orb
pop
adc
jb
mov
mov
jbe
sub
sbbb
out
dec
icebp
adc
add
gs
shufps
mov
push
adc
stos
ljmp
add
or
push
add
or
push
pop
push
mov
ljmp
sbb
jnp
addb
xchg
mov
cltd
int
cltd
out
cltd
jge
das
add
xlat
lret
andl
loopne
xchg
incl
outsb
clc
subb
add
imul
lcall
arpl
ss
cltd
mov
cs
ja
jo
lahf
add
stos
ja
cld
mov
jns
jmp
lcall
lret
test
jno
jns
leave
jp
or
cwtl
lahf
call
decl
inc
ljmp
mov
data16
rolb
xchg
stc
jns
add
and
jmp
xor
ja
das
pop
inc
mov
push
push
jmp
mov
push
sbb
in
movsb
mov
jg
lcall
dec
movsb
adc
movsl
adc
popf
jecxz
adc
adc
jecxz
ljmp
adc
inc
cmpsb
out
jae
mov
mov
adc
or
ljmp
scas
jecxz
sahf
arpl
jp
or
repz
or
push
push
mov
pop
cmp
mulb
cmp
fiaddl
incl
lahf
mov
test
jmp
jno
mov
adc
mov
pop
mov
jmp
xchg
aaa
pop
mov
notl
jecxz
movsl
adc
or
pop
pusha
xchg
daa
jns
fimull
xchg
stos
ret
mov
mov
out
mov
ret
aam
stos
mov
adc
rclb
fldt
mov
test
cmpsl
mov
mov
test
xchg
jge
icebp
scas
cmp
loopne
xor
movsb
jle
bound
inc
inc
lods
pop
scas
addb
add
lcall
dec
adcb
sahf
push
mov
pop
cmp
test
sub
clc
jae
jmp
add
ss
pushl
cld
ret
adc
fnstsw
stos
jecxz
jle
mov
jmp
shl
dec
lods
loop
pop
push
mov
call
shll
lea
imul
ljmp
or
mov
loop
inc
jne
repz
jns
mov
jo
mov
sbb
pushl
mov
stos
push
repnz
ficomps
scas
xor
push
mov
pop
mov
decl
jp
daa
jnp
clc
mov
decl
ja
xor
mov
mov
sbb
loop
xchg
or
mov
mov
jbe
or
cltd
out
cli
sbb
cmp
sbb
mov
gs
dec
inc
xchg
jb
adc
adc
nop
jg
dec
std
sti
xor
sub
fwait
jg
pop
dec
call
clc
mov
adc
sahf
aad
dec
loope
push
popa
cmp
mov
sub
jecxz
dec
nop
nop
ja
decl
ret
test
ss
pop
divl
cmp
pop
pop
popf
dec
mov
incl
inc
fistpl
mov
mov
out
dec
sub
test
das
flds
inc
or
cmp
cmp
decl
jns
push
lods
popf
mov
dec
cwtl
fwait
pop
cwtl
cs
mov
sti
lahf
fdivr
jmp
fwait
ret
cmp
jo
jb
xchg
xchg
inc
add
mov
adc
push
pushl
fstps
fistl
test
xlat
mov
pop
fwait
and
addb
ljmp
add
jg
jno
pop
adc
ljmp
add
test
mov
dec
mov
push
mov
sub
or
mov
popf
enter
lcall
mov
lods
inc
sti
jmp
jmp
cmp
push
imul
ljmp
in
mov
xchg
inc
mov
xchg
cmp
mov
push
adc
push
jbe
jne
shr
xchg
pop
lock
xchg
test
mov
jmp
pop
iret
lret
fsubl
or
mov
sbb
jg
pusha
jecxz
push
mov
or
add
incl
cmp
into
sub
in
cmp
pop
cld
jg
jl
xchg
mov
mov
movsl
jne
pop
or
cmp
mov
ret
mov
jl
lock
add
mov
xchg
jecxz
fwait
mov
call
call
sub
enter
shrl
int3
inc
mov
cmp
sub
pop
mov
mov
fwait
sbb
ss
fcompl
push
iret
imul
pushl
inc
sahf
jno
mov
or
push
scas
push
mov
insb
jne
add
jae
push
std
mov
mov
sub
je
gs
pushl
push
add
lcall
mov
leave
mov
jmp
xchg
out
pop
push
pop
mov
aaa
int
aad
test
stos
in
test
cld
mov
sbb
sbb
inc
cmpsb
jp
mov
enter
cmpsb
ds
shl
call
xchg
mov
in
pop
add
mov
imul
mov
arpl
xchg
or
cltd
cmc
fwait
in
cmp
dec
stos
xchg
call
and
scas
out
sbb
repnz
ss
jbe
insb
or
cmc
add
fdivrs
ljmp
das
js
and
fcmovnbe
stos
xorb
jae
push
ljmp
rcrl
scas
addr16
lret
mov
xchg
dec
rclb
lds
out
adc
rcrl
decl
xchg
mov
inc
pop
push
xchg
sub
into
aad
xlat
pusha
fmul
inc
mov
fiadds
lcall
enter
push
push
fnsave
add
add
pop
test
call
and
aaa
pop
std
adc
ret
movb
leave
cmp
in
adc
sahf
call
jle
sahf
dec
mov
cmp
icebp
test
insl
jge
cltd
clc
lcall
and
stos
lahf
rcrl
pop
fstpl
pop
ljmp
cli
imull
pushl
call
ss
push
jl
mov
stos
outsb
mov
stos
cmpl
stc
sub
xchg
in
mov
xchg
mov
or
jmp
dec
jae
cmp
pop
std
jmp
icebp
inc
rcll
sub
into
pop
cmp
jmp
ret
aas
sar
clc
cltd
fdivr
fidivs
and
data16
xchg
fwait
jle
sbb
add
jno
push
inc
push
cmp
hlt
ljmp
or
mov
dec
arpl
repz
jg
fisttps
and
lcall
out
icebp
fistps
lret
fdivl
jmp
dec
into
mov
xchg
jno
mov
js
test
test
insl
mov
inc
test
les
push
push
ss
imul
mov
cld
ss
mov
movsb
dec
pushl
lea
in
mov
insl
fldt
cltd
negl
jmp
js
push
test
popa
inc
dec
jge
jmp
fstpl
push
mov
fisubl
fdivr
jne
push
addr16
push
cmp
jnp
pop
stos
jmp
inc
dec
and
cmpsb
les
sarl
ret
add
mov
adcb
outsl
lcall
and
add
push
sub
add
call
adc
adc
movsb
ljmp
in
mov
loopne
outsl
push
call
dec
mov
scas
pop
add
adc
xchg
dec
cmc
leave
stos
stos
mov
mov
xor
xorb
pop
inc
adc
push
scas
shl
sbb
out
insl
and
jg
push
or
sub
and
scas
sarb
ret
jecxz
repz
lea
lret
outsb
xchg
scas
xchg
or
ljmp
sub
sbb
fdivl
xchg
jp
mov
pop
aad
test
loop
cmc
mov
dec
ficomps
jmp
int
inc
cmpsb
lods
clc
das
sbb
xchg
adc
jne
add
adc
pushl
cmpsb
push
out
insl
push
mov
sahf
fbstp
xor
sub
mov
mov
lret
push
aas
stos
call
xchg
lea
pop
xchg
cs
adc
cmp
mov
xchg
popf
shlb
pop
lcall
lahf
lahf
xchg
das
dec
fisubl
fidivl
pop
jecxz
popf
repz
lock
outsb
fcmovnu
or
xchg
inc
shr
push
ja
or
xchg
cltd
xchg
hlt
push
in
pop
xlat
sub
iret
xchg
fisttps
call
fistps
shlb
inc
std
xor
xchg
jg
lahf
mov
ja
and
mov
add
cmp
cmpsb
mov
adc
pop
popf
jae
loopne
std
pushl
adc
pop
subl
add
mov
faddl
mov
inc
data16
dec
cld
cmp
sbb
ret
adcl
jmp
sub
push
insb
ljmp
lcall
jle
sbb
jecxz
cmp
sahf
inc
cltd
mov
insb
ret
xchg
in
cmc
fwait
inc
xchg
xor
sbbb
cmpsb
mov
sbb
scas
add
sbb
dec
push
in
xchg
and
lea
mov
push
lcall
call
bnd
xchg
mov
cltd
xchg
sbb
jge
push
test
fistl
loop
dec
mov
div
call
fbld
cmpsl
xor
mov
sub
pop
sub
sub
mov
sbb
incl
mov
adc
ret
jnp
lods
fdivs
cmp
lock
mov
xchg
push
sbb
jne
sbb
out
ja
faddl
fdivl
fildll
bound
jns
out
xor
mov
ljmp
jg
scas
idivl
in
loopne
out
pop
cmpsl
mov
orl
jnp
hlt
out
jo
hlt
jno
outsb
into
lret
mov
in
xlat
into
aas
lock
add
dec
add
rorb
sub
mov
or
insb
test
or
lods
fs
fisttps
movsl
data16
aad
insb
insl
inc
xchg
mov
sub
cmpsl
inc
clc
filds
jmp
sub
std
jmp
sbb
push
lcall
cli
fs
dec
mov
mov
sub
or
mov
sbb
lods
dec
lret
jmp
test
jmp
jmp
xor
sbb
or
inc
cld
inc
mov
pushf
dec
xor
xor
push
lock
loope
pop
cs
cmp
mov
shlb
test
lock
jecxz
mov
ss
and
mov
add
jmp
in
or
cmp
pop
dec
lock
loopne
jb
and
push
fistpl
loopne
pusha
adc
clc
add
or
jo
or
decl
and
push
inc
pop
push
or
mov
mov
test
pop
es
decl
push
and
adc
xchg
popf
lcall
pop
pusha
fs
pushw
sbb
inc
inc
jg
pushl
and
mov
outsb
xchg
popf
jo
inc
stos
dec
sub
insl
cltd
sub
sbb
and
ljmp
mov
leave
imul
jmp
sbb
inc
xchg
int3
daa
sbb
push
jl
aas
jno
pop
into
into
xor
dec
xor
mov
call
inc
lods
xchg
nop
mov
sub
push
sbb
jg
sbb
sub
push
outsl
pop
pushf
nop
jge
jp
sti
add
mov
mov
mov
xchg
out
shlb
jl
in
lcall
scas
cmp
xor
push
sbb
adc
xor
imul
adc
sub
jae
insb
dec
daa
mov
cmp
imul
incl
data16
and
sub
fbstp
xor
and
add
push
push
push
outsl
les
lahf
sbb
sub
and
push
dec
push
inc
and
and
mov
decl
adc
push
js
jne
pop
dec
xchg
call
mov
jns
aaa
pusha
push
inc
and
cmp
clc
jg
ja
push
dec
inc
inc
cmp
flds
jne
addl
mov
fists
adc
rol
int3
mov
mov
mov
int3
faddl
lcall
sti
bound
mov
mov
mov
sarb
jg
test
add
leave
mov
mov
lock
cmp
cmpsb
addr16
out
mov
insb
jg
loop
ja
xchg
pop
ret
std
sahf
sbb
xchg
in
scas
sub
cmpsl
or
mov
jnp
jp
div
int3
cmp
popa
imul
mov
mov
lcall
dec
popa
test
andb
xchg
lods
scas
ss
add
xchg
mov
lea
pop
lods
cmpsl
out
mov
xchg
mov
scas
mov
test
fnstsw
rcr
fmuls
fstps
pop
xchg
das
arpl
xchg
insb
inc
fbld
movsb
movsb
ret
lahf
and
adc
icebp
fwait
scas
jnp
ficomps
adc
xor
inc
push
aas
jbe
ja
adc
push
xchg
pop
sar
push
in
push
insl
mov
and
pusha
fwait
lcall
call
inc
sub
cmp
js
mov
or
push
shl
shrb
xor
test
jo
insb
cmp
loop
xchg
cltd
lock
jg
cmp
stos
jns
adc
add
jecxz
lea
xchg
out
clc
pop
incb
jmp
fstl
call
pop
cmp
pop
pop
push
aas
inc
pusha
adc
rorl
sbb
inc
lcall
add
sub
flds
adc
inc
sub
inc
mov
dec
sub
cli
lcall
scas
mov
or
adc
icebp
bound
and
xor
xor
insb
mov
and
ss
mov
sbb
add
jg
call
mov
mov
aam
cmpsl
pusha
sahf
push
push
ljmp
push
adc
cwtl
cmp
fisubrs
lcall
ror
fsubs
mov
cltd
mov
fs
jp
push
movsl
lods
xchg
mov
repnz
in
dec
push
push
popa
sbb
es
jl
xor
or
mov
sub
mov
cli
decl
sbb
mov
lcall
sahf
cwtl
jno
xchg
adc
sbbl
call
xor
nop
mov
inc
xchg
push
mov
mov
xchg
sub
mov
or
xchg
or
decl
mov
or
sahf
jl
je
loopne
mov
pop
cmp
sub
stc
repz
mov
lahf
outsl
inc
incl
push
inc
push
lea
imul
or
lods
int
push
inc
and
outsl
jmp
and
jg
int
push
orl
sub
sbb
xchg
incl
push
sub
push
and
mov
adc
and
es
ljmp
jne
push
pop
popa
movsl
bound
pop
lea
sbb
or
adcl
pop
insb
sub
adcl
dec
js
xchg
dec
into
movsl
adc
inc
or
scas
cli
cmp
fsts
pop
cmp
mov
mov
pop
loop
push
mov
cmp
ljmp
cwtl
imul
negb
push
fsub
jbe
pushf
mov
mov
aas
fisttpll
and
ja
in
dec
push
jge
sbb
in
mov
adc
sbb
ss
decl
pushf
jo
adc
movsl
fsubl
pushf
ja
imul
pop
test
xchg
push
test
pushl
xchg
add
dec
mov
jg
add
repnz
out
mov
jmp
arpl
bswap
xchg
mov
loopne
or
sbb
sub
ss
push
xchg
incl
cltd
js
push
xor
fmuls
push
sbb
push
push
movsb
pop
xchg
xchg
imul
xlat
mov
xchg
movsb
mov
xchg
imul
subb
mov
hlt
adc
xchg
stos
std
ljmp
lods
pop
jo
inc
push
xchg
cmpsl
mov
mov
mov
fwait
sbb
inc
push
sub
and
decl
pop
adc
iret
adc
dec
push
add
pushf
rol
inc
popa
pop
rorb
pop
or
sti
je
aam
out
dec
cmp
mov
mov
xlat
lcall
out
shlb
insl
neg
mov
neg
imul
push
stos
push
xchg
jmp
ja
in
lcall
insl
sahf
cmpsb
sbb
dec
push
sbb
mov
loope
add
inc
cmpsb
outsl
aaa
mov
sbb
jl
loopne
jbe
lods
sahf
or
adc
adc
dec
add
imul
sub
dec
call
lods
mov
sub
xor
or
push
out
push
jl
mov
lea
fiaddl
call
push
and
inc
mov
lcall
in
loopne
cld
jg
enter
repz
sub
push
pop
call
mov
fidivl
popa
pushf
mov
or
clc
out
dec
add
jl
lcall
adc
mov
xchg
or
int
xor
adc
sub
loop
fdivs
or
add
push
inc
movsl
pushf
push
and
or
test
and
inc
fisttpl
jmp
mov
orl
jecxz
into
fdivrp
mov
cld
lcall
cwtl
push
test
push
jno
mov
out
bound
arpl
mov
push
push
push
ret
or
daa
pop
xchg
into
je
ror
pop
gs
clc
call
mov
sub
into
frstor
arpl
ja
sbbb
imul
pop
mov
test
push
pop
dec
dec
add
and
and
push
decl
movsl
cmpb
mov
inc
sub
and
icebp
mov
xor
std
fcomip
popf
mov
push
dec
jg
je
pop
dec
rcrb
and
push
clc
sub
inc
int
adc
nop
cs
incb
push
pop
jno,pn
push
or
add
test
or
incl
push
stos
lods
cmp
and
pop
cwtl
test
pop
jmp
mov
addr16
jne
vmwrite
ret
testb
nop
inc
popf
shufps
cmc
ljmp
dec
inc
aam
inc
sub
add
shll
dec
sbb
pop
fbld
mov
adcl
mov
pop
pop
or
cld
ret
or
or
push
dec
mov
sub
push
call
lock
and
sub
dec
mov
xor
mov
ljmp
jge
push
pop
jle
xchg
call
fcomip
push
sbb
mov
jl
push
adc
add
pop
sahf
ret
mov
mov
push
int
push
mov
aad
cld
shrb
adc
in
int
ljmp
pop
pop
pusha
or
sbb
push
push
mov
ljmp
lret
cli
aad
data16
push
ja
ret
fcmovbe
rcr
lods
pop
or
push
adc
pop
stos
adc
ja
aam
add
push
xor
pop
push
imulb
add
cld
pop
imul
push
sub
inc
push
dec
add
decl
mov
aaa
fdivs
sub
decl
cmpsl
call
adc
mov
negb
adc
cmp
lds
xchg
mov
shll
lahf
and
xchg
jmp
outsb
ljmp
cltd
dec
mov
mov
cmpsl
add
movsb
jecxz
mov
decl
out
mov
repz
in
mov
sbb
aad
inc
testb
mov
push
nop
shrb
pop
pushf
fistl
lret
jne
mov
sub
dec
mov
jno
cmp
lcall
scas
pop
pop
inc
hlt
sub
pop
cmp
ja
mov
cld
jno
xor
xchg
je
sbb
nop
hlt
aam
daa
sub
call
mov
lret
idivb
sar
mov
lret
inc
test
or
jnp
and
add
inc
bound
sub
lods
mov
stos
or
rcll
cmpsb
scas
mov
xchg
and
push
fsubr
sbb
cld
loopne
mov
lcall
add
cmpsl
and
cwtl
jge
or
aam
hlt
lcall
je
add
cld
cmp
ret
sbb
lods
cmp
pop
add
popf
icebp
pop
add
inc
add
sub
mov
jp
jns
hlt
cwtl
imul
push
jp
xchg
push
outsl
cli
incl
aaa
pop
call
mov
mov
test
les
push
sbb
icebp
push
imul
cmp
jbe
mov
mov
popf
and
xchg
jo
lock
clc
mov
cwtl
aam
movsl
out
je
fstpl
fidivrs
ljmp
mov
in
fbld
dec
loopne
mov
add
movsl
inc
cld
decl
jbe
pop
push
in
addr16
cmpsl
test
adc
jg
daa
jmp
push
in
sub
push
pop
dec
jecxz
mov
movsb
in
call
call
mov
daa
in
dec
adc
lock
push
inc
push
push
pop
push
nop
cmp
cmp
pushl
cld
jl
leave
mov
xlat
repnz
ret
adc
push
adc
jno
or
mov
enter
lret
adc
jb
loopew
dec
mov
xchg
mov
cmp
or
sbb
sahf
cld
pop
mov
aam
and
into
or
lods
dec
dec
sbb
je
adc
cwtl
in
xchg
xor
outsl
dec
and
push
dec
mov
jmp
sbb
inc
jb
fdivrl
cmp
lods
xor
cmp
lea
add
and
sbb
mov
add
lcall
das
orl
dec
xchg
adc
or
mov
jbe
mov
jns
xor
sub
call
lods
addr16
mov
faddl
push
es
lcall
lcall
jg
and
cmpsl
mov
sbb
sahf
ficoms
call
dec
aam
iret
add
mov
cmp
push
fisttps
lcall
ja,pn
xor
mov
jbe
inc
sub
lahf
nop
aam
inc
jge
inc
push
inc
jp
jp
cmp
clc
xchg
mov
lock
test
ljmp
dec
lea
push
adc
mov
lock
ds
push
add
push
arpl
add
pop
int
stos
xor
pop
cmpl
out
lcall
incl
sbb
pop
sbb
jb
cmp
xchg
adc
cmp
cli
dec
data16
testb
incl
pop
jbe
or
jae
push
lock
dec
rolb
and
push
cmc
jg
push
lea
mov
and
jne
inc
mov
incl
inc
jbe
pop
test
addr16
nop
add
add
or
mov
sbb
andb
add
std
xlat
ja
movb
mov
js
or
ds
ljmp
push
mov
bound
jno
add
loopne
pop
pushl
mov
sbb
inc
xchg
daa
sub
xor
movsl
decl
add
inc
bound
dec
test
jp
popa
inc
xor
pushl
loope
inc
jmp
push
jno
dec
mov
inc
cwtl
push
push
push
ret
decl
dec
mulb
cmp
jge
add
repnz
loopne
and
popa
adc
stos
mov
call
leave
loop
jge
aam
or
sbb
hlt
pushl
adc
xchg
pop
inc
push
push
xor
adc
popa
lea
in
hlt
addr16
repz
and
jg
fisttps
pop
adc
loop
and
jae
jo
and
rorl
add
pushl
jmp
push
ficoms
jb
icebp
and
xchg
xor
push
push
push
mov
popa
add
and
decl
and
subb
sub
pusha
fdivs
nop
pop
add
dec
push
or
dec
ljmp
mov
push
into
or
inc
or
jae
arpl
test
nop
nop
dec
cmp
mov
dec
decl
mov
jbe
adc
add
orb
call
ja
inc
or
sbb
lock
xor
pop
pushl
pusha
testl
imul
push
ds
sbb
notb
push
stc
pop
fdivrp
aaa
cld
pushl
inc
dec
fwait
cmpsl
sub
je
mov
jnp
push
sbb
ss
fwait
cs
aad
jnp
imul
mov
cli
mov
and
test
mov
test
or
fdivl
mov
jl
xchg
pop
xor
pop
fcoms
out
fldl
sbb
data16
xor
loope
das
adc
lret
inc
cli
lcall
jo
enter
adc
fsubrs
sub
shll
mov
push
mov
sti
aaa
mov
cld
ljmp
dec
ret
test
rcll
repnz
shrb
fninit
cmp
aaa
loop
adc
cmp
sbb
push
xchg
out
pusha
mov
decl
mov
xor
popf
adc
jecxz
cmpsb
add
push
push
xchg
dec
push
data16
ja
out
mov
adc
fmuls
cmp
test
and
ret
add
jo
pusha
andb
sahf
loopne
push
xchg
int
rcrb
and
and
xchg
dec
shrb
mov
ljmp
xchg
jl
add
push
and
mov
add
mov
sbb
negb
cmc
xchg
jno
movb
jnp
mov
jg
ljmp
xchg
sub
mov
sbb
les
xor
push
loope
jp
jne
fcoms
push
and
push
inc
in
mov
xor
test
fidivl
lods
adc
push
inc
pop
adc
mov
addr16
aaa
mov
cmpsl
or
jg
inc
std
pusha
sub
test
out
inc
ljmp
jno
outsb
lret
pop
adc
mov
mov
adc
jno
cmp
push
in
xchg
push
and
adc
pusha
jecxz
adc
les
jecxz
add
decl
loop
hlt
mov
cmp
mov
push
dec
bound
dec
rolb
cmp
mov
or
popl
iret
repz
pop
icebp
popa
fcompl
cmpsl
cld
xchg
sbb
dec
mov
gs
add
xchg
and
lcall
xor
add
and
test
push
mov
or
mov
lret
push
or
push
std
leave
adc
mov
clc
add
gs
fistpll
adc
dec
imul
jp
in
lret
or
xchg
ficoml
jbe
mov
ret
fildll
and
xchg
popa
sub
enter
pop
sbb
scas
jmp
pop
lahf
daa
push
mov
push
xor
push
cmpsb
movsl
ffree
xchg
into
testb
call
mov
stos
mov
xchg
and
outsb
mov
cmp
inc
inc
or
push
xchg
sub
ret
incl
loop
cmp
repnz
lock
push
in
adc
adc
lcall
sub
and
icebp
repz
dec
lods
pop
decl
add
push
jno
sbb
loopne,pn
mov
jecxz
int3
andl
loope
test
xorb
jmp
out
push
jmp
and
stc
and
push
and
and
es
call
cld
es
repnz
cltd
add
pop
push
mov
ja
dec
sub
scas
dec
mov
or
ds
push
add
or
push
adc
sub
push
ja,pn
xchg
cld
pop
std
stos
push
adcb
pusha
inc
mov
add
stos
jnp
das
adc
pushl
fisubrl
add
adc
jno
out
xor
xor
lcall
jmp
push
and
add
scas
stc
adc
mov
mov
pop
movsb
fnstenv
ljmp
push
cmp
insl
fs
and
mov
push
jmp
pop
movsb
movsb
decl
movsl
out
push
inc
ret
jne
aaa
inc
mov
lds
mov
jl
add
xlat
push
add
add
outsl
hlt
mov
lods
decl
add
push
mov
jp
cmpsb
ret
std
xchg
push
in
fs
pop
mov
jnp
pop
or
push
adc
cmp
push
jg
ret
or
jmp
xor
pop
ret
ret
and
push
or
jg
jnp
push
and
in
mov
and
xor
cmp
fwait
add
negl
dec
ja
jno
push
out
adc
das
cli
lea
push
dec
push
dec
gs
loop
or
jo
cli
mov
inc
nop
hlt
in
pop
sbb
and
shlb
pop
push
push
xchg
lods
add
xchg
adc
dec
mov
adc
jg
mov
das
rorb
sub
nop
xabort
add
ds
push
mov
or
add
sbb
push
jnp
nop
andb
inc
mov
jns
decl
pop
lret
stos
pop
shr
inc
out
adc
dec
sbb
xchg
cwtl
lcall
dec
xchg
xchg
jns
xchg
dec
sub
xor
push
aaa
xor
into
cmpsb
jp
mov
aad
enter
mov
xlat
aam
add
jg
cmpsl
mov
stos
shlb
int
icebp
outsl
and
push
adc
ficompl
insb
mov
jge
enter
movsbl
mov
sub
jle
push
test
loope
aaa
mov
ja
push
adc
jmp
out
jo
xor
xchg
bound
mov
mov
add
xchg
ret
fwait
lock
jg
inc
std
xor
arpl
and
sub
mov
adc
xor
es
mov
adc
dec
push
mov
or
ss
push
aas
mov
sub
aaa
je
fadd
push
dec
jl
addl
ljmp
lret
pop
add
icebp
adc
xor
and
sbb
aam
add
mov
dec
jno
xor
inc
insl
fildll
add
mov
adc
jg
lods
jle
sbbb
icebp
add
ljmp
inc
xor
mov
imul
sbb
jmp
pop
movsl
mov
stos
mov
imul
icebp
lret
push
inc
test
ljmp
lcall
dec
mov
sub
jmp
stos
sbb
jbe
sub
cmpsl
aaa
and
jmp
sub
xor
sub
push
and
pop
cmp
insb
pop
xchg
jns
mov
sub
push
jecxz
mov
outsb
imul
jmp
into
inc
adc
sbb
mov
mov
cmpsl
or
pop
repnz
call
sub
mov
cmp
fcoml
inc
lds
xchg
mov
add
aaa
cld
jg
loope
and
mov
add
inc
mov
add
insb
mov
stc
mov
inc
aad
ret
dec
xor
insb
xor
add
rolb
dec
mov
jg
bswap
jb
push
daa
inc
popa
pop
nop
inc
add
adc
adc
xchg
incb
incl
or
mov
sbb
cmp
ret
pop
cmp
lret
mov
cmp
int3
jnp
xor
mov
cmp
xlat
pop
fcom
xchg
test
insl
leave
cmc
pop
inc
adc
fsubl
jge
sub
lcall
sub
ss
sbb
ret
xchg
mov
sub
cs
lret
adc
cmp
or
mov
mov
jge
loope
lret
scas
popa
pop
out
and
mov
hlt
decl
rolb
es
push
fcoms
inc
jle
je
jecxz
lock
adc
aaa
fstpt
inc
loopne
out
in
ja
call
pop
arpl
je
mov
iret
gs
fcoms
lret
aam
ds
pop
xor
rcr
hlt
ret
jnp
inc
call
imul
inc
and
rorb
dec
jbe
and
fisttps
xchg
loopne
repz
jle
jmp
or
cmp
push
jb
push
mov
jg
cmc
ljmp
or
push
mov
mov
jmp
dec
fldl
ret
and
cmpsb
jno
test
insl
jg
mov
and
jp
movsb
mov
cwtl
push
pusha
cld
call
add
mov
in
popa
pop
cwtl
mov
xchg
test
inc
and
es
pop
xchg
mov
aad
insb
xor
mov
fwait
incl
icebp
push
pop
fimull
and
mov
lcall
adc
enter
out
mov
shll
jb
in
xlat
jl
cmp
movsb
and
inc
shl
adc
mov
enter
imul
mov
shrl
xchg
adc
aaa
cld
inc
shll
shll
jg
call
mov
das
lahf
push
iret
mov
lea
lock
aas
inc
cmp
jb
jo
bound
pushl
pop
adc
xchg
inc
mov
and
adc
sub
mov
mov
jle
icebp
dec
sbb
adc
cld
ljmp
add
adc
or
or
adc
hlt
xor
loope
incl
adc
leave
loope
cmp
idivl
movsb
in
in
jns
pop
push
jp
mov
imul
ljmp
subb
xchg
addr16
lret
lret
pop
repnz
and
cwtl
cwtl
and
filds
js
push
inc
ja
out
jp
inc
xchg
or
mov
mov
icebp
pop
pop
mov
and
call
mov
es
dec
sbb
stos
outsl
js
loop
ljmp
and
adcb
cmpsl
mov
push
dec
adc
in
inc
mov
mov
pushl
decl
icebp
push
adc
push
iret
in
call
loope
cmp
mov
mov
jno
inc
ret
mov
jno
cmp
mov
inc
repnz
xor
xor
push
sbb
clc
jb
push
add
xor
roll
inc
popf
xchg
dec
mov
sbb
add
pusha
sub
lods
mov
pop
inc
jb
out
xchg
xor
lods
inc
jmp
jl
lock
fsts
dec
fwait
cmp
in
out
lret
pop
ds
roll
out
mov
outsl
lods
pusha
es
xor
cmp
aam
dec
lcall
or
mov
loopne
bound
rclb
inc
or
push
popa
lret
scas
mov
pop
mov
fnsave
pop
and
or
push
sahf
xor
xchg
add
adc
mov
mov
sub
xor
icebp
loop
cltd
xor
es
pop
repnz
fildll
mov
xor
jbe
int
or
lcall
add
jecxz
clc
jno
leave
xchg
das
scas
dec
data16
fdivs
hlt
fcmovnbe
test
incl
pop
adc
icebp
shrb
shl
in
sarl
add
dec
shrl
mov
or
dec
jle
push
sar
aas
call
and
pop
pusha
xor
jle
jmp
jmp
cmp
rcrb
xchg
in
pop
shlb
pop
stos
mov
lcall
ret
daa
pop
dec
roll
call
dec
ret
lcall
sbb
xchg
push
push
test
push
xchg
xchg
popa
mov
push
add
ljmp
dec
sbb
nop
inc
subb
cli
adc
and
rclb
xorl
mov
sub
pusha
mov
jmp
sub
mov
mov
or
adc
sub
je
sbb
push
cmpsb
cld
fistpll
lahf
rolb
sub
pushf
push
shlb
jae
out
rorb
add
inc
add
wbinvd
bound
mov
lea
pop
sar
fwait
sub
imul
mov
push
outsb
mov
and
fisttpl
imul
xor
daa
jmp
cmp
jb
lods
xor
arpl
xor
cmp
jmp
cs
sbb
dec
fcmovnu
cs
sub
mov
cmp
loopne
lcall
xor
mov
mov
sbb
in
mov
ljmp
mov
xchg
lock
idivl
je
lds
aas
adc
clc
xor
sub
in
push
lods
pushl
xchg
pop
xchg
and
add
adc
add
testb
hlt
fs
push
dec
jbe
push
mov
out
and
dec
jl
imul
call
xchg
mov
test
loopne
add
outsl
movsb
outsl
insb
adc
pop
mov
mov
mov
jmp
or
hlt
ds
ds
push
pusha
out
inc
notl
mov
mov
cmc
call
out
and
sbb
mov
and
sar
frstor
pushf
mov
xor
cld
repz
inc
pop
pop
je
jle
adc
lcall
jge
adc
inc
lock
arpl
mov
dec
aam
pop
sbb
lcall
ror
notl
pop
add
adc
lret
pushl
sub
stos
psrad
in
dec
cwtl
addb
sub
sub
ljmp
pop
inc
and
jle
out
aad
pop
jge
cli
jmp
loope
cld
sub
xorb
push
mov
adc
decl
inc
fidivl
xorl
adc
ret
mov
mov
sbbl
rorl
cltd
insl
test
cmp
sar
lcall
in
jmp
add
or
xchg
mov
fiadds
xchg
inc
mov
push
decl
xchg
mov
push
mov
push
iret
dec
xchg
mov
mov
adc
add
pop
add
filds
or
add
data16
filds
scas
dec
rcll
outsb
adc
inc
decl
call
inc
mov
add
stc
sbb
cmp
int3
push
and
test
addb
or
pushl
mov
push
and
dec
fcmovnu
cmpsb
adc
ljmp
movsl
sub
rcl
cld
decl
cmpsb
pop
movsl
push
xchg
adc
add
pop
sbb
mov
lock
lret
pop
xor
incl
mov
pusha
cli
inc
cwtl
ds
bound
repz
sub
add
xchg
push
xor
sbb
jge
movlps
pop
xor
mov
decl
enter
out
xor
mov
test
sbb
ficoms
int3
cmp
xor
mov
xchg
inc
push
scas
pushf
sti
fadds
and
arpl
clc
mov
cmp
int3
dec
cmpsb
cmc
jg
pusha
mov
orb
subb
mov
call
call
pop
push
aam
adc
movsl
add
mov
push
and
add
lock
aas
and
incl
xor
pop
ds
movsl
xor
push
lcall
mov
mov
inc
shlb
and
or
mov
pop
cmp
push
mov
add
outsb
dec
cmp
xor
sbb
pusha
inc
in
mov
ljmp
addr16
adc
ret
push
push
inc
pop
inc
movsb
jnp
adc
inc
outsb
clc
inc
and
decl
push
in
shlb
xor
inc
fdivp
add
push
mov
jbe
mov
inc
or
loop
loopne
jmp
add
pop
xor
dec
ficompl
pop
adc
ds
sbb
out
ljmp
mov
js
jb
rcll
and
mov
inc
leave
jecxz
xor
sub
mov
incl
sub
pop
mov
and
in
nop
mov
cld
push
popf
push
leave
mov
dec
push
pop
add
stos
dec
jmp
rorb
sti
fstpl
gs
adc
jl
xchg
test
cwtl
loopne
jg
scas
or
aad
adc
mov
dec
fsubrs
jns
or
lock
rol
xor
sti
popf
subb
bound
inc
add
xchg
testb
fadds
cmp
ljmp
dec
inc
lea
cmp
pop
clc
or
mov
and
pushl
sub
add
add
int3
arpl
roll
ja
ljmp
inc
jb
adc
shlb
addl
lea
pop
cli
jge
and
incl
ljmp
stc
leave
xor
clc
mov
lret
mov
mov
ljmp
adc
add
and
loope
inc
testb
call
push
mov
inc
pop
sti
adc
inc
push
pop
sbb
stos
lcall
push
mov
push
push
lcall
sbb
push
out
or
fisttps
repz
fs
adc
ljmp
push
push
iret
jbe
adc
iret
lock
inc
sub
dec
scas
sbb
sbb
inc
pop
shrb
and
ljmp
ss
cwtl
mov
hlt
xorl
mov
fldl
ja
xchg
lcall
cmp
sbb
nop
and
push
dec
inc
and
adc
mov
inc
shrl
jbe
fndisi(8087
xor
jp
pop
mov
test
insl
mov
inc
incl
cld
and
mov
mov
sbb
cwtl
pusha
adc
xchg
ljmp
lcall
arpl
rolb
add
xchg
aam
das
mov
mov
sbb
push
shrb
loopne
and
jb
shl
sub
lret
jb
dec
sub
add
xchg
mov
ret
and
incl
inc
js
mov
add
lock
jecxz
outsl
sbb
std
aaa
std
fidivrs
xorl
inc
jmp
enter
xor
inc
jmp
and
leave
out
add
xor
ljmp
add
push
sub
pop
or
lea
push
cs
mov
decl
mov
test
dec
loopne
dec
cltd
gs
lods
add
decl
sbb
mov
sbb
nop
ss
push
idivl
xchg
pop
and
shl
test
mov
imull
adc
inc
cmp
jg
inc
jge
daa
push
adc
xor
push
sub
gs
pushl
and
fs
imul
into
fs
aad
dec
test
std
add
mov
in
sbb
inc
push
or
push
gs
out
mov
std
jbe
lds
leave
ss
and
pop
and
shrb
and
shrl
call
push
xchg
cli
loopne
loope
dec
mov
add
xchg
cmpsl
call
pop
leave
add
xchg
add
mov
call
mov
xor
add
cmp
scas
lock
scas
icebp
xor
rolb
pop
lock
fadds
test
adc
pop
mov
and
add
and
pop
cmp
push
std
mov
sbb
adc
dec
inc
inc
pop
push
pop
xor
sub
arpl
jmp
or
sbb
add
cmp
push
mov
lods
add
or
jge
add
dec
pop
decl
lret
xchg
orl
lea
add
cmp
or
add
jg
inc
sbb
test
mov
push
xor
inc
push
add
mov
sti
push
pusha
xchg
adc
bound
mov
cmp
adc
pop
pusha
sbbb
les
inc
fbld
pop
push
cmc
cli
les
mov
sub
and
mov
mov
mov
call
mov
pop
mov
arpl
xor
jnp
pusha
xchg
sbb
mov
jmp
xchg
inc
stos
push
in
js
rcrl
test
std
or
or
dec
mov
inc
ret
mov
xchg
ljmp
stos
fnsave
lea
mov
call
pop
dec
xchg
pusha
sbb
insb
mov
enter
cld
jmp
mov
hlt
lret
sbb
push
add
or
jae
jmp
mov
jmp
xorb
test
dec
nop
cmp
mov
sti
mov
sbb
ljmp
mov
negb
adc
or
rorl
sub
sbb
loop
sbb
decl
in
xor
push
repz
mov
fcoml
mov
jnp
add
sub
pop
icebp
fsts
in
movsb
push
add
mov
loopne
push
pop
and
aaa
dec
stos
xchg
dec
inc
push
cmp
xchg
loope
mov
xchg
mov
mov
cld
mov
xor
push
mov
adc
add
xor
bound
dec
les
adc
call
or
adc
push
data16
scas
clc
pushl
push
subb
dec
lock
cwtl
int3
or
sub
loopne
test
adc
pop
movsl
push
add
incl
js
inc
jl
or
push
or
cmpl
jp
add
mov
pop
jl
jecxz
xor
add
inc
inc
add
adc
inc
shl
dec
dec
data16
call
inc
movsb
test
lret
inc
data16
inc
pop
loopne
enter
jb
xchg
cmp
and
xchg
bound
repnz
ljmp
and
sbb
mov
arpl
test
decl
clc
fisubrl
sub
xor
fidivl
loopne
fisubrs
decl
test
lret
mov
pop
adcl
sbb
adc
mov
or
mov
xor
je
lret
decl
lock
fcoms
pop
ljmp
adc
stc
sbb
sbb
sub
pusha
test
mov
or
orl
enter
loope
lcall
lods
mov
fadds
dec
add
or
xor
xor
shll
mov
pop
push
and
ljmp
mov
cmp
sbb
add
xchg
and
mov
lcall
dec
xchg
mov
sub
mov
mov
ljmp
inc
sub
push
add
xchg
or
inc
test
out
mov
dec
add
test
adc
inc
fldl
pop
js
fs
in
xchg
fisubs
xchg
cwtl
dec
mov
stos
ret
in
in
add
adc
pusha
dec
cli
ja
movb
into
mov
dec
add
adc
js
dec
loopne
pop
mov
push
mov
dec
sub
jmp
pop
add
test
xor
les
test
pop
in
decl
cmc
jge
cltd
or
test
xchg
lock
addb
push
xor
xchg
dec
into
in
test
add
mov
add
jbe
cmc
cmpsb
ljmp
push
test
sub
decl
into
sub
xor
outsl
inc
lcall
rol
cltd
xor
sbbl
mov
test
push
sbb
add
sbb
cwtl
or
jg
xor
cmp
out
dec
xchg
cmp
dec
adc
xchg
rclb
repnz
lods
movb
sbb
push
sti
mov
push
cmc
sub
inc
call
or
mov
call
add
xor
and
stos
mov
sub
ds
arpl
push
add
stos
cmp
add
sbbl
daa
add
dec
incl
or
sahf
insl
add
dec
and
ret
mov
call
bound
sbb
jg
dec
and
and
dec
lret
mov
and
dec
or
pop
enter
decl
push
mov
jecxz
cmp
and
test
pop
dec
inc
test
or
decl
inc
into
pop
push
xlat
pop
push
push
push
mov
adc
mov
lods
outsb
dec
movsl
pop
dec
arpl
dec
popf
add
call
inc
push
cmpsb
adc
subl
cwtl
push
mov
push
inc
rolb
sahf
xchg
push
sbb
or
sbbb
cld
jg
mov
and
and
pop
jle
push
dec
rolb
sub
sbb
jns
out
loope
int3
mov
sbb
push
inc
or
in
fnsave
dec
rcll
add
or
xchg
cmc
inc
add
std
dec
js
incl
or
xchg
adc
orb
mov
lock
movsl
aam
pop
mov
test
ljmp
mov
and
sub
sub
mov
dec
xchg
mov
add
and
pop
cltd
popf
pop
fsts
lahf
adc
jl
mov
std
mov
mov
mov
cli
push
stos
cwtl
mov
adc
sbb
lods
xchg
cmp
add
cltd
call
mov
ds
inc
dec
ljmp
in
pop
adc
push
or
cmp
sub
es
add
dec
icebp
mov
jno
mov
cmp
aam
mov
das
and
xchg
icebp
sub
loopne
lods
mov
fwait
cmpsb
incl
je
test
jns
dec
movsl
mov
mov
mov
rcll
jbe
cld
das
adc
into
inc
test
mov
dec
call
lock
test
adc
pop
push
fadds
pop
dec
or
insb
xchg
mov
loope
fisttpll
inc
fisubrl
push
push
cmp
js
sbb
add
popa
jl
mov
sbb
inc
cmp
adc
decl
push
add
xchg
and
push
in
aad
mov
dec
adc
js
jle
xchg
cltd
push
rclb
lcall
cmpb
arpl
and
add
or
mov
test
push
add
pop
jg
decl
mov
sub
push
pop
js
loopne
pushf
inc
pop
xchg
incl
dec
iret
cmc
jl
sets
xor
adc
iret
stc
inc
mov
fmul
rcr
fs
push
cmp
mov
jecxz
filds
dec
stos
sti
xor
fcom
sub
adc
dec
fwait
mov
cs
ljmp
sbbb
inc
fs
loopne
cld
push
pushl
leave
mov
shlb
push
inc
loopne
mov
and
fisubl
jg
push
std
mov
sahf
ds
mov
fbld
cmp
orl
dec
ret
subl
push
and
lcall
push
jmp
xor
push
push
lcall
incl
lret
push
sub
jne
mov
add
enter
lret
xor
and
push
xchg
cli
aaa
lcall
pop
sahf
gs
ret
and
call
pop
inc
cmp
adc
sub
add
xlat
cld
dec
shlb
add
gs
loop
pusha
addr16
inc
pop
xchg
jg
pop
adc
pushw
out
fsubr
jb
pusha
rorb
push
pushl
add
js
insb
fimull
insb
lcall
pop
shll
sub
sub
inc
lds
jns
pop
and
test
lock
imul
sub
rcr
or
int3
jno
decl
data16
dec
fsubrl
outsb
add
inc
adc
fcomip
test
loopne
adc
push
mov
test
jb
fisttpll
scas
mov
add
or
add
add
cmp
or
and
nop
lcall
cli
or
and
or
sarl
jg
cmpsb
ljmp
stos
mov
jmp
cmp
xor
jg
pop
jns
ss
or
sbb
mov
sbb
test
push
adc
push
int
mov
sbbl
aad
and
out
jecxz
inc
cmp
in
andl
sub
lcall
and
aaa
xchg
movsb
adc
mov
add
mov
jmp
fs
and
dec
and
mov
sarl
push
mov
in
bswap
xchg
push
and
mov
loopne
mov
lock
gs
loopne
outsb
incl
pushw
arpl
cmp
test
inc
shrb
push
insl
sbb
mov
mov
and
jg
dec
xchg
pop
sub
adc
add
mov
test
adc
push
fisttps
das
shrb
jb
pushf
cmp
bound
jns
pusha
clc
lcall
sbb
inc
pop
pop
nop
push
insb
gs
jmp
pusha
dec
pop
out
sub
push
mov
test
out
inc
pop
jb
pushl
daa
ret
loopne
out
xor
pop
insb
imul
out
loopne
xchg
lock
decl
jg
or
int
scas
cs
sub
fbld
xor
and
cmp
pushf
xor
cmp
ud0
cmp
adc
cmp
int3
cli
jb
cli
sbb
push
push
push
mov
lcall
inc
jbe
mov
popa
sbb
add
rclb
add
jp
shr
aas
daa
je
jge
data16
mov
shlb
mov
add
ljmp
int3
cmp
push
cmp
xor
idivl
decl
in
lidtl
and
adc
or
adc
sub
sbb
sbb
hlt
aad
icebp
mov
cmp
sub
and
lcall
push
gs
push
nop
mov
decl
test
xor
clc
jg
dec
and
arpl
out
out
cld
movsl
cmp
out
push
push
inc
xlat
in
jo
push
int3
fildll
out
pushl
push
dec
pop
pop
insl
mov
loop
push
push
lahf
pop
mov
add
dec
cwtl
outsl
jbe
test
incl
cmpsl
or
push
test
jae
cli
in
incl
push
xchg
jne
adcl
orb
mov
sub
fs
call
mov
cltd
inc
gs
cwtl
inc
push
test
mov
mov
jbe
fisubs
inc
mov
xor
les
push
or
icebp
rolb
daa
dec
hlt
clc
sub
jmp
inc
add
push
rcrb
js
lea
je
mov
dec
or
aam
lock
test
adc
mov
decl
lock
pusha
mov
sub
push
push
inc
push
or
mov
sbb
insl
pop
mov
jnp
das
fbstp
mov
in
loopne
push
and
nop
icebp
fistpll
mov
pushl
and
xor
int3
stc
xor
xchg
ret
fistps
aam
icebp
mov
jmp
mov
jp
out
lcall
push
testl
icebp
add
std
call
inc
inc
xchg
aas
mov
and
ds
sbb
sti
inc
cmp
ds
add
jl
paddsb
cld
jns
inc
fidivl
jge
cli
push
out
inc
inc
inc
dec
mov
enter
lret
fldt
xor
fyl2x
inc
pop
decl
lret
fwait
insl
pslld
and
jns
fwait
xchg
push
and
jg
call
mov
sbb
arpl
adc
inc
sbb
pop
add
jbe
and
clc
call
jo
adc
push
inc
cmp
inc
push
xor
xchg
fst
xchg
adc
popa
and
inc
or
or
loope
inc
add
cltd
loopne
add
mov
lcall
xor
test
push
shlb
aad
dec
lcall
jne
adc
and
test
mov
test
dec
loopne
movsbl
mov
or
adc
xorb
scas
mov
ds
aas
cld
dec
repz
cli
pushl
or
add
adc
push
add
mov
or
lock
pop
repnz
loop
inc
xchg
xchg
inc
lcall
dec
dec
add
adc
call
jne
adc
test
rorb
dec
hlt
push
push
mov
mov
xlat
cmpsb
xor
mov
sar
btrl
and
call
push
inc
cmp
dec
and
shll
icebp
mov
dec
incl
ret
and
mov
or
pop
pop
adc
incl
pop
insb
cmc
push
inc
pop
xchg
pop
es
pop
xchg
jno
pop
mov
push
pop
pop
pop
mov
fldenv
lret
sbb
lret
ss
lcall
pop
imul
xchg
adc
jl
int
sbb
xlat
bound
mov
mov
push
jg
pop
xchg
arpl
lods
mov
jp
xorb
jbe
je
inc
push
sbb
jmp
jg
fcoml
mov
popf
cmp
rcrb
adc
mov
sub
std
adc
pop
or
ficoms
mov
sbb
lcall
mov
sub
adcl
inc
mov
sub
cwtl
and
fisubl
mov
add
inc
xchg
in
dec
fimull
movsl
xchg
push
ljmp
sbbl
add
inc
sub
xor
icebp
mov
pop
cmc
je
jmp
push
je
push
lods
or
dec
stos
in
sub
pushl
push
inc
out
je
adc
push
daa
cld
and
add
in
push
movl
test
pop
incl
adc
cmp
andl
addb
and
ljmp
or
mov
repnz
inc
lock
mov
inc
cmp
mov
test
add
mov
pushf
orb
fs
jmp
inc
xor
repnz
add
push
cmp
call
cmp
dec
les
mov
xchg
pop
xchg
shlb
ret
mov
sub
cld
clc
lret
lret
and
mov
int
xor
sbb
cmp
mov
add
lahf
sbb
jg
dec
and
push
lret
test
int3
mov
xor
stos
fsubrs
fstl
lock
movsb
mov
xchg
call
lea
fisttpl
push
loopne
push
mov
loop
stc
mov
add
xor
sbb
add
pop
test
fcmovnbe
arpl
pop
loopne
outsb
push
fstpt
mov
call
sbb
lods
mov
jnp
mov
sub
hlt
dec
ret
lahf
adc
inc
cmovns
mov
test
mov
push
test
int
ljmp
inc
xchg
ret
dec
jecxz
movsb
dec
pop
xchg
je
jno
jno
pop
dec
ds
lods
fwait
rorb
push
loope
ljmp
inc
adc
fs
sub
dec
mov
xchg
fs
jmp
loope
inc
or
or
divb
and
sbb
scas
lcall
adc
hlt
xchg
mov
ljmp
adc
push
adc
pusha
sub
pop
popf
sub
add
call
adc
ljmp
lods
enter
bound
out
xchg
movsb
lds
scas
push
mov
orl
sub
or
adc
sub
cmp
and
push
cltd
sar
and
andps
pop
push
or
fists
fadds
xchg
pop
nop
int3
test
push
inc
inc
pop
call
mov
ret
adc
loop
mov
shrl
mov
adc
pusha
sub
mov
or
clc
pop
sub
movsl
fcom
push
and
ret
xor
nop
ret
mov
inc
scas
addb
jmp
lock
call
lock
cmp
adc
mov
push
sub
and
xor
push
xor
insb
push
lcall
xchg
xor
sbb
pop
ss
cmp
mov
pop
dec
dec
rclb
enter
loopne
out
mov
in
sbb
lea
hlt
sbb
jle
inc
inc
lcall
mov
xorl
into
push
fsubs
mov
in
and
push
test
mov
daa
outsb
loope
subl
incl
pop
pusha
fiadds
pop
jl
or
popf
add
lcall
mov
loopne
push
xchg
mov
rclb
fwait
out
rorb
decl
fidivl
call
inc
fisubrs
lods
arpl
push
sar
insl
rorb
inc
adc
dec
test
pop
add
leave
outsl
adc
fwait
int3
test
xchg
popf
adc
ja
sub
loopne
out
out
adc
mov
decl
mov
fcoms
test
inc
sub
dec
or
mov
adc
loope
int3
fstps
jge
and
jge
mov
dec
push
add
dec
push
sbb
mov
sti
nop
push
cld
mov
or
shrb
sub
sub
andl
cmp
sbb
or
or
mov
dec
push
inc
xchg
or
and
cmp
or
nop
sbb
js
sbb
lcall
arpl
push
popf
adc
ja
hlt
daa
adc
add
mov
daa
fisubs
scas
lret
cli
or
mov
ljmp
mov
jecxz
in
dec
mov
outsb
mov
or
in
pushl
dec
cmp
fcoms
insb
je
xchg
xlat
ds
mov
movsb
or
xchg
imul
inc
mulb
adc
test
std
ljmp
es
repnz
sar
sbb
test
mov
xor
sbb
jl
cmp
call
scas
jl
pushw
clc
xchg
mov
rolb
enter
fimuls
loopne
repz
das
pop
push
sbb
pusha
pop
pop
cwtl
inc
fldenv
scas
call
sub
inc
outsb
xchg
test
pop
mov
xor
dec
lea
and
and
out
adc
mov
rcr
pop
cmp
cmp
inc
es
fcomip
call
mov
je
lds
xchg
inc
mov
cmp
int3
xlat
adc
loope
testb
push
jne
lcall
adc
add
cld
rorb
ret
adc
orb
pushl
adc
sub
mov
add
inc
pop
andb
popa
or
fadd
adc
push
push
sbb
sub
mov
int
fidivrs
es
lcall
dec
lock
out
iret
pop
dec
nop
xchg
pushf
ret
xor
add
and
fidivl
stc
icebp
movsl
jle
in
std
clc
xor
cld
xchg
bound
mov
loopne
imul
adc
push
pop
lock
add
add
pop
mov
movsl
inc
imul
icebp
push
push
sub
pop
sbb
fstl
sub
and
pop
add
or
cmpsb
movb
dec
xchg
arpl
fcomip
jg
cs
leave
push
xchg
xor
int3
cld
outsb
cld
push
lds
mov
cwtl
xlat
xlat
push
hlt
int3
inc
sub
push
dec
ljmp
adc
int
enter
sbb
adc
repz
inc
aaa
ret
ds
add
dec
call
and
or
adc
or
lcall
dec
dec
push
or
xchg
xchg
test
in
xchg
cmp
jg
inc
in
test
cmp
out
mov
sbb
xchg
rorb
jge
in
xor
mov
add
mov
mov
mov
or
scas
outsb
push
flds
add
mov
rolb
pop
add
fldenv
or
mov
mov
cmp
rolb
jmp
mov
mov
ret
dec
inc
adc
neg
repnz
or
jecxz
adc
decl
scas
inc
jecxz
and
push
and
jecxz
addb
outsb
mov
push
leave
cmpb
add
loopne
add
cmpsb
mov
dec
lcall
dec
and
or
addb
arpl
fisttpl
ja
jg
inc
mov
push
clc
rcll
add
test
cmc
mov
test
jg
decl
inc
push
fs
pop
test
mov
movsl
sbb
xchg
pop
sarb
push
mov
push
inc
push
pusha
sbb
push
iret
add
push
or
jo
inc
pop
pop
decl
pusha
lock
loopne
lret
lods
xchg
mov
ret
dec
push
jno
mov
cmp
cmp
sbb
psubsb
popa
pop
pushl
push
add
in
leave
fsts
fcoms
lret
rorl
incl
sub
add
sub
int
xchg
cmp
inc
or
fmuls
mov
mov
add
clc
rcrb
pushf
sub
popf
ror
and
push
rcrl
push
outsl
xor
popa
dec
pop
inc
loope
jno
xchg
xchg
sbb
in
popa
fisttpll
shl
je
xlat
stc
dec
cmp
dec
arpl
ljmp
xchg
loop
in
fmull
pop
or
lock
ds
xchg
push
data16
mov
data16
mov
fbstp
cltd
movsb
mov
idiv
xchg
mov
imul
pusha
shrl
push
mov
sub
sub
ret
rolb
add
adc
jmp
inc
push
xor
ljmp
in
xorl
mov
inc
sub
mov
cmp
out
decl
inc
adc
add
subl
std
add
scas
cmpsl
mov
call
cmpsl
jge
dec
jl
or
xchg
pop
fstps
daa
add
mov
lahf
add
push
std
pushl
inc
mov
push
arpl
fstpl
add
sar
fwait
arpl
push
jo
pop
push
inc
dec
push
imul
push
test
call
push
xchg
push
adc
test
push
int3
adc
mov
test
shlb
pop
sbb
push
xchg
and
or
in
adc
push
push
sub
mov
lret
sub
sbb
lock
fcmovnu
rolb
int
cltd
adc
add
iret
scas
andb
popf
inc
inc
mov
inc
add
sbb
pop
fstpl
ficomps
lock
call
xor
xor
test
lods
mov
cmp
lods
sbb
into
adcl
and
dec
push
mov
sbb
jl
scas
subl
push
das
mov
ficomps
dec
icebp
stos
aaa
cld
pusha
sbb
lods
into
stos
fnstenv
sub
filds
push
jb
dec
sbbb
sahf
scas
and
push
inc
adc
faddl
loope
sbb
fiadds
lock
aam
lret
fadd
add
fidivs
fidivs
nop
daa
cmp
mov
mov
xchg
inc
int3
xlat
sub
rolb
stos
punpckhbw
pop
in
xchg
fldl
jecxz
cli
sub
sub
popf
fists
lds
and
fs
ficomps
std
mov
push
dec
sub
inc
movsb
pusha
jl
adc
cmp
dec
mov
sbbb
lea
fldt
imul
imul
or
sar
or
mov
cld
dec
nop
xchg
mov
inc
push
and
cmp
add
jp
js
push
fsubr
add
mov
push
mov
push
push
rcr
mov
pop
fwait
mov
fwait
cli
jg
mov
loope
test
cmp
outsb
test
jecxz
sub
aam
sub
bound
out
lcall
rcrl
sarl
cmp
mov
bound
dec
and
dec
lock
jmp
cmpsb
cmp
enter
out
push
mov
or
jg
jbe
mov
pop
rcr
shl
xchg
pushf
lcall
dec
xchg
pushf
outsb
stos
cmpsb
cs
adc
dec
sar
in
mov
movsb
cmp
jecxz
lods
dec
loopne
pushl
mov
mov
outsb
shr
sub
cs
mov
jmp
dec
scas
push
int3
inc
jmp
shr
mov
outsb
scas
ljmp
adc
loopne
xchg
lea
xor
les
dec
inc
sbb
call
and
ret
pop
cmp
xor
js
mov
push
push
mov
mov
xor
xchg
call
inc
adc
addl
xor
int3
xor
mov
loope
mov
fcoml
pop
and
shlb
ljmp
int3
inc
shl
mov
xor
movsb
adc
xchg
js
insl
jl
or
mov
das
clc
push
push
scas
adc
incb
adc
stos
sub
lods
lret
fisubrs
lock
adc
adc
les
jg
add
jbe
sbb
mov
add
sbb
pop
mulb
decl
and
mulb
aad
sbb
lods
call
cli
push
mov
enter
cwtl
movsb
and
out
jg
decl
push
mov
in
lcall
es
inc
pop
sbb
lcall
sbb
inc
jb
cmpsb
push
pop
xor
addr16
movsl
inc
je
std
mov
adc
ret
fcomip
lcall
enter
jno
or
xchg
sbbl
sbb
mov
inc
outsl
cmp
push
dec
and
rolb
push
add
outsb
add
adc
mov
jb
and
add
outsl
adc
scas
ss
or
sub
push
insl
mov
fimuls
ja
mov
iret
fwait
sbb
arpl
fs
lcall
lret
jne
and
pop
ror
sub
iret
aam
add
into
dec
movb
xchg
pop
call
call
insb
pop
outsb
push
pop
adc
orb
jo
push
pop
nop
in
sub
jp
in
ljmp
xchg
ret
sub
mov
into
in
add
subb
pushf
sub
loope
add
lcall
enter
pop
das
icebp
pop
orb
xor
ljmp
cli
dec
fcomps
and
jno
aad
push
or
lcall
add
lret
or
sbb
inc
add
push
inc
rclb
pop
add
call
pop
daa
add
pop
popa
cmp
mov
flds
jno
cld
les
pop
lahf
inc
fs
xchg
pop
out
fcomip
mov
ffreep
sbb
mov
mov
mov
rclb
jno
inc
mov
pop
inc
ljmp
out
pushl
mov
outsl
outsl
push
or
adc
adc
cmp
call
and
add
or
scas
ss
neg
movsb
mov
mov
add
jbe
jmp
cmp
sbb
shrb
scas
test
pop
xchg
daa
jb
jecxz
sub
adc
cmp
pop
dec
cwtl
xchg
fildll
out
dec
mov
xor
xchg
push
push
mov
incl
add
mov
xorl
xlat
xorb
adc
hlt
ljmp
mov
add
mov
jg
inc
xchg
es
arpl
rclb
clc
and
fdivl
xor
int3
pop
adc
jge
sbb
inc
and
xchg
adcb
imul
pop
dec
inc
push
clc
add
shlb
ja
gs
imul
push
jmp
mov
inc
pushf
xor
inc
test
fistpll
pop
js
sbb
or
cmpl
call
add
cmpsb
mov
dec
or
mov
fldenv
lock
leave
xchg
dec
dec
incl
mov
popf
add
xchg
mov
adc
inc
adc
loopne
call
in
lock
fwait
mov
pushf
mov
mov
loop
jmp
out
popa
cmpsl
rorl
inc
sbb
add
sub
mov
sar
adc
insb
enter
and
aas
outsl
cli
cli
inc
adc
add
cmpsb
sti
xchg
sub
idiv
adc
inc
mov
inc
push
movsl
jp
push
aaa
or
or
mov
aad
decl
lods
cmpsl
cmp
cwtl
stos
outsl
test
fwait
outsl
sbb
js
mov
pushl
add
stc
push
int3
dec
sarb
and
mov
xchg
test
pop
mov
mov
ja
xchg
pop
push
jg
add
push
cs
dec
mov
jmp
test
outsl
and
lcall
into
pop
and
incl
popf
cltd
loop
cmp
mov
movsl
push
shll
jle
mov
mov
hlt
cld
mov
and
xchg
dec
bound
cmp
mov
jns
mov
xchg
enter
cmp
push
jne
push
leave
in
sub
fidivrl
xchg
hlt
push
xchg
jmp
xchg
test
push
cwtl
stc
sbb
outsl
push
ds
cmp
mov
jne
mov
pop
and
mov
sbb
xlat
decl
cmp
cli
loop
jb
das
dec
xchg
xor
scas
std
mov
and
sar
pushl
add
mov
adc
mov
jp
inc
inc
stos
sub
sahf
pop
icebp
decl
mov
pop
add
jo
loopne
fwait
lds
push
sbb
mov
jle
xlat
mov
sbb
in
aaa
jecxz
inc
imul
lcall
jg
push
jg
ds
sub
jbe
mov
push
pop
fdivrs
jp
mov
mov
push
cmpl
repnz
rcl
mov
sub
call
cmovnp
dec
mov
xor
dec
add
xor
push
sub
dec
std
or
sbb
mov
pop
cwtl
push
data16
adc
adcb
xor
push
scas
dec
arpl
out
out
clc
jmp
xor
jge
jecxz
lret
push
flds
add
adcl
mov
mov
ja
push
push
loopne
inc
inc
sbb
es
movsb
test
bound
repz
push
and
xchg
and
outsl
xchg
lods
call
mov
and
sbb
pop
add
inc
fdivl
push
dec
pop
mov
sbb
sub
push
mov
push
movsl
dec
jno
jae
aam
add
inc
aaa
push
clc
call
je
push
mov
fprem1
or
adc
dec
ret
and
mov
movsb
xchg
jmp
repnz
inc
mov
and
push
icebp
fildl
dec
pop
roll
dec
xchg
cld
sbb
decl
leave
xchg
and
cmp
jb
add
cmp
decl
fimull
cmpsl
pop
mov
std
sbb
rolb
mov
ljmp
mov
movl
addb
fisttps
nop
xchg
sub
fldenv
js
js
push
aad
ja
out
and
fdivs
sub
inc
mov
iret
sahf
sbb
mov
icebp
pop
inc
cmp
or
add
orl
or
popl
fsub
std
in
das
cli
roll
stos
inc
es
inc
xchg
push
pop
cmp
pop
xor
orb
sub
add
jne
ret
ljmp
fs
movsb
jp
test
gs
pop
adc
loop
daa
int3
jae
cmpsl
push
mov
cmp
decl
jl
and
stos
xchg
jmp
pushl
xor
add
stos
test
sub
call
clc
call
mov
cmpsb
fnsave
or
adc
inc
pushl
aas
fcoms
xchg
dec
adc
das
xchg
push
push
test
jmp
add
dec
mov
dec
lret
mov
jge
push
cmpsl
stos
stos
lret
ljmp
xor
adc
es
lcall
stos
decb
loopne
enter
push
or
popa
addl
adc
fldenv
push
in
xor
sub
or
add
or
lods
fcmovnu
push
dec
mov
int3
loopne
ljmp
sub
iret
js
int3
pop
loop
xor
jno
push
ja
lds
add
test
dec
mov
ss
cmp
lods
push
lret
add
push
lods
and
test
mov
sbb
stos
and
or
dec
bound
cld
dec
inc
ljmp
mov
dec
out
or
aaa
in
xchg
adc
fdivs
incl
xorl
push
xchg
inc
and
sbb
das
aam
incl
jecxz
xchg
xchg
adc
push
stos
dec
xor
mov
lret
push
lahf
lcall
adc
mov
cmpsl
dec
lahf
jo
sub
leave
add
sarb
pop
in
mov
mov
jmp
sub
mov
mov
add
ljmp
sub
ss
hlt
and
andb
stos
or
loope
dec
xchg
sub
push
mov
mov
adc
mov
mov
out
pop
mov
mov
push
orl
sub
pop
nop
push
pop
pushl
mov
mov
or
mov
jg
in
testl
lods
loopne
push
adc
fcmovnbe
lret
cld
repnz
xor
pusha
or
in
xlat
lods
std
loop
xor
mov
aam
push
pop
stc
scas
decl
fdivrs
int3
std
adc
and
push
mov
sbb
cld
inc
cmp
xchg
xor
xor
jle
loopne
xchg
cmp
incl
call
mov
inc
lock
and
fnstsw
ss
sbb
enter
cltd
jo
orb
call
add
add
jecxz
jbe
dec
add
xor
jmp
xchg
lods
in
mov
jno
push
sbb
mov
leave
mov
fwait
fdivl
aaa
add
pushl
cmp
fiadds
sub
out
sub
ljmp
mov
fs
sub
jo
cmp
dec
mov
mov
movsb
test
sbb
push
jmp
inc
cmp
insl
ljmp
inc
xchg
shrb
ret
cmpsl
xchg
inc
faddp
jo
je
scas
jp
cmp
cld
jmp
pop
adcb
das
jns
mov
push
push
jp
jmp
dec
in
cmp
or
gs
adc
xor
mov
ja
adc
mov
cmp
mov
lcall
test
sbb
add
adc
incl
adc
out
negb
or
mov
adc
call
sbb
jl
push
or
sub
cmp
mov
xchg
inc
or
cmp
adc
call
mov
rclb
mov
push
mov
adc
decl
and
mov
movsl
daa
xor
cmpsb
inc
sub
push
sub
xor
xchg
cltd
xorb
rorb
jo
fistpl
aad
cmp
out
addb
dec
mov
mov
pusha
cwtl
fcompl
mov
or
jmp
imul
inc
aad
mov
jg
or
cmpb
ret
or
sar
stos
and
ljmp
lock
es
or
rol
bound
shlb
sub
xchg
aaa
dec
jmp
ret
clc
jmp
cmp
dec
addr16
mov
cmpsb
mov
pop
sbb
in
push
fsubs
mov
sub
jge
in
cmp
repnz
outsb
addl
dec
mov
jne
pop
es
incb
or
inc
add
dec
lock
lds
mov
mov
cmp
call
pop
xchg
mov
mov
pop
fs
dec
gs
pop
call
shll
or
xchg
andl
aam
lcall
cmp
in
and
lret
adc
imul
mov
incl
ss
outsb
push
xchg
jnp
sub
sub
xchg
cmpsb
cmpsb
sahf
mov
push
std
pushl
cwtl
cmpsl
adc
xchg
xchg
mov
mov
push
lods
and
mov
and
mov
and
decl
push
sub
scas
pop
test
pop
dec
stc
mov
inc
ljmp
pop
sbb
push
inc
xor
sub
lret
ds
pop
sarb
lea
jmp
push
rclb
mov
inc
int3
mulb
repz
out
xor
clc
jns,pt
cmp
mov
inc
cmp
lret
or
inc
scas
push
mov
mov
aad
loopne
mov
insl
push
enter
push
cmp
inc
push
ss
pushl
lock
cmp
in
or
cld
shl
jge
or
add
lcall
push
mov
adc
ret
scas
jnp
sub
nop
add
pusha
push
jge
jnp
push
lea
test
push
je
inc
ljmp
jno
cmp
xchg
pop
adc
lock
jbe
aad
xchg
std
xor
or
mov
movsl
push
adc
jmp
movsl
dec
mov
mov
adc
cmpsb
icebp
pop
jmp
icebp
dec
mov
aaa
shrb
lds
ret
mov
mov
xchg
adc
in
and
dec
clc
push
fiaddl
xchg
orb
push
or
cmp
and
dec
fsubl
sbb
rorb
and
sub
inc
push
mov
call
add
cld
in
nop
test
push
sahf
xor
mov
cmp
sahf
sub
int
ret
jns
out
repnz
pushf
add
nop
pop
cli
jmp
inc
mov
push
inc
loop
or
sub
or
push
xor
lret
data16
call
stos
xchg
mov
lds
or
mov
mov
pop
jecxz,pt
mov
sub
call
fildl
cmp
stos
xlat
mov
fistps
ss
sbb
mov
sbb
lock
inc
mov
sub
pusha
mov
inc
xor
decl
jne
cmp
xchg
repnz
lods
push
inc
xchg
mov
std
scas
xchg
ficoms
gs
mov
sub
lock
call
lock
xchg
add
cmpsb
xchg
add
ss
jne
mov
test
call
xchg
enter
arpl
fs
scas
xlat
cmpsb
aam
mov
inc
jo
dec
int3
scas
fcomip
jg
aam
inc
xor
cmpsl
pop
shrb
add
bound
mov
push
ss
xor
dec
xchg
inc
xor
sub
add
out
xchg
sbb
sahf
test
add
lret
cs
dec
pop
in
mov
popa
mov
fcmovnu
or
pushl
sub
add
dec
es
das
jae
inc
push
inc
int3
ljmp
cs
lock
test
stos
shlb
add
or
js
decl
mov
adc
xchg
xchg
pop
sub
in
into
out
out
scas
and
decl
and
xor
orl
stos
rcrb
pusha
or
or
lcall
cmpsb
mov
rcll
inc
sub
in
or
inc
push
faddp
imul
repnz
jg
hlt
add
gs
test
inc
pop
insl
test
or
mov
push
fmuls
mov
je
out
dec
push
jp
inc
dec
inc
fadds
mov
lret
test
add
rorb
sub
jmp
dec
mov
ret
push
or
mov
incl
sub
dec
nop
lret
sub
and
call
sub
and
ljmp
sub
xchg
dec
and
mov
mov
decb
pop
fildl
mov
test
adc
js
xor
pop
imul
and
and
push
jg
inc
std
cmp
and
and
and
push
push
xchg
data16
dec
and
cld
jg
ljmp
jmp
xchg
daa
mov
inc
push
pop
rcrb
jmp
lret
into
add
pusha
jbe
das
add
jl
jmp
pop
sub
call
jl
shlb
and
mov
jle
scas
pushf
js
or
sbb
in
int3
incl
jo
jo
mov
sub
sbb
orl
sbb
mov
sbb
lock
push
lods
cmpsb
inc
add
cmove
call
hlt
popa
inc
inc
insb
bt
adc
lret
pop
dec
push
adc
push
out
inc
sub
adc
pop
inc
mov
cld
hlt
rcrb
out
inc
xchg
test
pushl
dec
xor
cli
loopne
shll
mov
dec
pop
call
nop
in
mov
int3
push
ret
mov
jbe
out
js
pushl
rol
std
cld
data16
jl
or
test
sbb
and
outsl
push
add
clc
das
push
add
ss
icebp
addb
or
call
add
add
add
incl
cld
icebp
cs
cmp
loop
outsb
and
inc
add
xor
jno
sub
decl
push
or
dec
outsb
lock
test
leavew
xchg
jle
into
lock
ljmp
adc
inc
adc
add
cwtl
or
cli
decl
out
mov
cltd
pop
repnz
decl
shr
ss
mov
shr
or
mov
js
jg
jecxz
mov
jmp
jle
adc
add
or
add
sub
push
stos
sub
imul
cmpsb
pop
in
push
adc
add
dec
adc
mov
sub
add
mov
jg
add
loopne
xchg
int
fsubs
lods
hlt
lcall
mov
repnz
adc
insl
mov
push
push
imul
xor
lcall
adc
psrlq
xor
popf
xchg
int
enter
dec
dec
shr
lret
push
aam
sbb
in
add
cli
xchg
andb
andb
bound
push
sbb
jmp
int3
mov
and
sbb
and
mov
or
and
adc
sub
clc
call
call
sub
push
das
sti
mov
jg
call
push
addl
inc
arpl
rolb
sarl
add
push
imul
js
add
decl
add
sub
jo
js
ret
or
and
ljmp
jae
mov
mov
pop
loopne
sbb
and
push
aas
gs
es
ljmp
arpl
into
xor
lret
in
stos
jecxz
iret
in
test
lcall
push
stos
hlt
stc
add
mov
out
in
cmpsb
repnz
jg
es
pop
jno
mov
mov
mov
pusha
int
or
pushl
aaa
xchg
insb
dec
adc
repnz
mov
in
out
repnz
incl
int
xor
rolb
lcall
mov
das
test
stos
dec
xchg
push
jmp
cmp
xchg
inc
out
insb
call
push
ljmp
std
ljmp
imul
sub
js
int3
decl
popa
xchg
icebp
inc
and
push
and
icebp
ljmp
aaa
adc
push
xorl
jmp
dec
sbb
and
xchg
nop
push
push
inc
jo
xor
push
mov
addb
hlt
cmp
xchg
push
aas
mov
fnsave
pop
ja
xchg
ret
dec
mov
ljmp
add
sbb
pop
in
xchg
stos
mov
loope
jae
xchg
decl
or
aam
mov
adc
mov
aas
lods
imul
mov
in
add
call
sbb
mov
jecxz
outsl
xor
call
and
punpckldq
push
insl
pshufw
sbb
pushl
dec
adc
insb
lods
sub
cvtpd2ps
sub
stos
sbb
clc
rolb
es
xchg
inc
and
adc
test
mulb
movlps
outsb
mov
adc
bound
out
mov
or
adc
push
add
fldt
mov
xor
fwait
imulb
cmp
add
dec
lods
cwtl
fcmovnb
dec
fmulp
dec
fdivr
pop
in
fbld
fimull
dec
and
push
repz
call
cld
ja
imul
mov
in
add
adc
xor
inc
mov
cmp
push
mov
insb
shll
pop
das
mov
inc
mov
push
cwtl
insb
notl
jmp
icebp
sbb
and
cmp
adc
and
adc
incl
jo
push
mov
cwtl
xchg
pop
and
rcr
out
mov
jmp
fildl
repnz
sbb
mov
pushl
popf
enter
dec
sahf
xchg
sub
fiadds
add
scas
push
and
sub
inc
cmp
ds
je
and
iret
jmp
push
inc
mov
or
inc
mov
mov
je
lcall
inc
pushf
push
nop
stos
dec
jne
or
repz
ljmp
ret
shlb
jmp
fisubrl
xchg
fisttpl
daa
cli
mov
test
or
xchg
lcall
enter
lea
and
insl
pushf
mov
push
cld
inc
in
lds
xor
and
and
sbb
xor
icebp
mov
jge
aaa
mov
pop
add
lock
out
bound
cmpl
incl
mov
fcoms
dec
xor
mov
jmp
adc
xor
mov
push
xchg
jmp
mov
cwtl
push
icebp
mov
rep
xor
mov
mov
lret
daa
scas
ret
inc
out
mov
or
add
mov
jmp
ret
mov
subb
sub
icebp
incl
inc
addr16
cmc
mov
add
add
lea
cmpsb
mov
in
pop
dec
mov
add
incl
popa
fsts
ja
mov
mulb
mov
pop
test
or
cmp
and
jmp
xchg
lahf
xor
dec
xchg
xchg
jl
ret
test
les
mov
mov
rcl
xlat
inc
sbb
dec
push
jns
daa
popa
ljmp
sbb
and
jno
ljmp
sub
adc
dec
sbb
adc
lods
incl
jp
jns
cmp
lcall
lahf
cltd
insb
add
loope
test
fcomip
clc
push
inc
pop
insl
fldcw
outsl
lock
xor
dec
mov
lret
mov
cmp
pop
adc
jg
lods
jo
mov
jle
or
aaa
ss
popa
faddl
mov
pop
mov
incl
xor
mov
inc
dec
sbb
mov
popa
aas
mov
xor
mov
cmpsb
push
clc
mov
xor
push
test
inc
data16
adc
clc
notb
add
xor
aaa
mov
popa
aam
dec
lcall
jp
fbld
dec
cmp
sub
or
xor
fistl
sub
leave
mov
mov
xchg
imul
jns
push
bound
ljmp
mov
sbb
adc
push
sbb
jle
push
cmpl
add
jo
push
aad
ja
ret
pop
fcompl
mov
scas
mov
jmp
xchg
data16
jmp
push
and
adc
cmpb
pop
and
cmp
mov
pushl
push
mov
sbb
sahf
in
jle
das
addb
out
pop
shrb
call
mov
pop
out
out
pop
cld
cmpsl
xchg
xchg
jmp
test
mov
roll
adc
arpl
arpl
xor
nop
mov
in
test
adc
xchg
repnz
pop
idiv
fldt
jb
clc
mov
push
hlt
pusha
mov
lods
jb
or
incb
xor
sub
mov
xor
push
mov
push
xchg
shrb
mov
stos
cmc
or
insl
insb
hlt
jmp
push
push
sar
dec
sbb
js
ficoml
mov
call
push
xor
mov
push
cmp
aaa
fcoms
jl
das
mov
decl
fisttpl
xorl
push
mov
mov
push
movl
jle
add
nop
lock
sub
fmul
lcall
sub
testb
mov
add
in
out
cltd
pop
lret
jg
sub
pop
js
jp
mov
xorb
adc
incl
sbb
flds
mov
xor
mov
int
hlt
xor
and
sar
sbb
dec
inc
dec
inc
fsubrs
or
pushl
test
out
inc
nop
sbb
inc
jne
adc
out
ljmp
push
data16
xchg
bnd
imul
and
cld
mov
lods
ret
rolb
insb
push
pushl
hlt
ret
jl
es
pop
jmp
stos
add
sub
ret
lds
cmp
jns
ret
andl
imulb
xor
add
lds
lds
fwait
mov
mov
push
outsb
adc
add
push
jne
nop
clc
sbb
add
gs
cmp
femms
jg
call
jbe
mov
int
mov
xor
out
fisubrs
fcomip
mov
add
mov
rclb
inc
mov
cmp
out
in
or
mov
popa
arpl
ret
daa
adc
sub
or
cmp
pop
lea
ljmp
aad
add
mov
rclb
add
lea
push
lcall
out
outsb
mov
ret
add
add
dec
sub
cld
pushl
sti
add
rolb
lock
inc
mov
inc
adcl
jg
gs
sub
pop
fs
data16
push
lcall
popa
incl
jbe
lods
pop
mov
push
sbb
jmp
clc
cld
test
xor
dec
and
insl
incl
pusha
pop
add
sbb
or
push
test
jae
xlat
scas
push
jl
adc
sub
jmp
and
in
xchg
pop
dec
and
bound
mov
shll
adc
fnsave
loopne
addl
pop
jo
lds
inc
lcall
mov
out
or
shrl
cmp
lds
decl
jge,pn
jne
aad
pop
mov
insl
fidivl
ljmp
insl
loopne
jae
das
push
cmp
jo
rorb
mov
rcl
cmpsl
out
inc
cs
ja
ljmp
add
add
pushf
cmc
jns
mov
pop
jl
std
jnp
hlt
int
lahf
mov
pop
dec
adc
lds
mov
pusha
xchg
adc
inc
clc
incl
cmp
pusha
xor
xor
rdmsr
sbb
enter
test
nop
jp
mov
mov
push
or
push
and
jp
popa
bound
lea
and
add
pushf
inc
shl
push
cmp
mov
inc
xchg
dec
cs
fs
dec
and
and
mov
repnz
push
pusha
inc
test
decl
lret
lods
add
and
cwtl
pop
jb
adc
adc
decl
movsb
mov
push
adc
cltd
sbb
data16
inc
add
push
xor
shr
mov
or
sub
push
adc
and
sbb
cmpsb
aas
dec
push
scas
xchg
hlt
call
push
dec
lds
adcl
pop
pushl
add
push
push
fs
xchg
push
pop
lods
mov
ljmp
rcll
fstps
and
insb
scas
sub
pushl
mov
pop
cwtl
push
fsubs
lret
mov
incb
push
std
decl
mov
sub
aad
add
out
jo
lods
pop
pop
outsl
repz
gs
int
out
jb
push
test
fistpl
scas
jno
pop
daa
insb
add
jnp
jmp
xlat
sbb
pop
sar
sar
in
cmp
mov
xlat
out
inc
or
inc
sahf
push
add
fdivp
call
xor
in
mov
xchg
out
andl
mov
xor
xor
in
inc
mov
in
cwtl
inc
jge
stos
mov
and
arpl
or
aam
adcb
jecxz
daa
jl
dec
daa
inc
jmp
bound
movsb
sub
int3
inc
or
sbb
sarl
pop
inc
jmp
add
es
pushf
adc
in
xor
jns
rcrb
enter
adc
lcall
inc
jg
jge
dec
jno
xor
jecxz
lds
mov
cmc
fs
aas
add
ljmp
clc
push
jmp
push
jmp
stos
pop
test
inc
sub
dec
jg
xor
and
pop
pop
jp
imul
popa
int
cmp
fdivr
sbb
arpl
dec
cld
into
aas
sub
xchg
pusha
rcr
jg
jb
mov
sbb
loopne
pop
inc
idivl
push
iret
jno
adc
or
xchg
popf
je
fnstcw
mov
cld
mov
or
insl
shll
ja
dec
inc
mov
fmull
call
push
mov
gs
pop
xor
lds
pushl
adc
jae
or
push
cmp
test
jge
repnz
jns
adcl
jmp
inc
adc
mov
call
adc
inc
aam
lcall
mov
out
test
mov
pop
lock
call
xor
push
inc
imul
xchg
cwtl
stos
lods
jno
mov
add
incl
mov
or
push
daa
ret
insl
imul
inc
out
adc
cltd
int
push
push
adc
fidivrs
mov
sub
lahf
loop
ss
lret
cmp
sbb
and
decl
inc
adcl
mov
push
dec
pop
or
fcomip
dec
in
fidivl
add
push
xchg
mov
loop
pop
int
xor
repnz
fcomip
dec
mov
inc
dec
sbb
bound
cmp
cmp
pop
subb
mov
push
dec
jmp
dec
movsl
mov
mov
add
inc
push
sbb
add
fsubl
scas
jp
xchg
into
popa
cwtl
in
into
sahf
out
aaa
std
mov
aas
clc
in
mov
leave
mov
cld
jb
dec
cmpsb
sbb
shlb
pop
fstpl
hlt
sub
mov
and
aam
sbb
mov
add
ljmp
nop
test
pusha
mov
movsb
adc
xor
in
popa
mov
adc
pop
xor
jmp
pop
ror
or
xchg
movsb
out
xchg
test
dec
mov
inc
dec
dec
test
ljmp
aad
ret
arpl
jecxz
and
adc
mov
xchg
pop
mov
je
xchg
mov
dec
adc
inc
adc
dec
add
pop
cmpsl
xchg
stos
lods
movsb
and
movsb
push
mov
sti
leave
push
jle
xchg
into
stc
les
or
add
std
call
fs
popa
lods
inc
xchg
les
push
insl
rcl
scas
jbe
or
cld
fists
and
bound
xchg
mov
call
xor
mov
jne
mov
xchg
shrl
call
shr
mov
push
push
mov
xor
xchg
dec
pop
ljmp
rolb
push
push
jge
dec
aaa
out
xchg
filds
pushl
call
mov
mov
xchg
sub
hlt
out
daa
call
jmp
push
cmpsb
or
ja
lods
cmp
out
addb
rorb
mov
jbe
jne
or
jg
decl
add
inc
push
pusha
add
popa
sbb
cmp
andb
pushl
pop
dec
inc
das
jge
mov
xchg
and
adc
les
loop
dec
mov
push
sbb
ret
cmp
push
call
icebp
stos
pop
ret
dec
or
xchg
adc
mov
ljmp
xchg
and
dec
sbb
add
xchg
pop
insl
pushf
inc
push
not
cwtl
lods
movsb
xchg
pusha
mov
push
mov
jne
lret
test
loop
call
xchg
je
cltd
mov
fdivp
pop
stos
enter
pop
pusha
pop
sbb
int
dec
inc
iret
jp
insb
das
cli
jmp
gs
lret
mov
imul
fstpt
outsl
sub
subb
incl
or
mull
mov
jg
add
push
addr16
ficompl
jae
iret
pop
shll
out
pop
dec
ficompl
inc
push
xchg
gs
decl
cli
adc
xchg
popa
lock
jg
fs
enter
fldt
add
fcomip
std
test
arpl
push
inc
jecxz
imul
mov
adc
push
ljmpw
dec
cmp
inc
mov
inc
cwtl
sub
push
mov
loope
dec
jg
mov
fs
inc
push
mov
movsb
rcll
xor
loop
cmp
xchg
in
and
pop
add
ficoml
xchg
sbb
incl
and
jb
sahf
pop
into
xchg
xchg
ficoms
dec
mov
fildl
push
mov
jmp
push
mov
iret
mov
std
addr16
aaa
mov
mov
xor
lcall
sub
jb
mov
fs
xor
xchg
push
cltd
mov
arpl
call
arpl
jl
orl
jnp
pusha
add
cmpsl
mov
ljmp
jno
cmpsl
or
mov
or
test
imul
cli
fcmovbe
stc
and
mov
sahf
fsubrs
enter
pop
ljmp
mov
pushl
xor
ds
pop
mov
imul
dec
push
mov
mov
xor
inc
or
test
mov
fbstp
or
sbb
out
adc
and
movl
inc
add
incl
add
jo
sub
test
cmpsb
out
and
les
dec
loopne
repnz
mov
jg
mov
cmp
divb
insl
cmp
adc
dec
addr16
pushl
and
push
dec
mov
xor
cmp
mov
dec
xor
add
pop
ja
dec
xchg
pop
pop
pop
pop
adc
push
or
andb
pop
and
int3
pop
outsb
mov
mov
lcall
movsl
add
push
sbb
ds
jp
add
add
cmp
pushl
and
clc
andl
addl
cmp
orl
aaa
enter
fdiv
aaa
aaa
je
pop
push
xor
mov
or
sub
fcomps
pop
dec
or
dec
loope
decl
xchg
jae
loopne
dec
pop
push
cmp
popa
add
inc
das
jg
incl
movsl
jp
movsl
cs
mov
iret
xor
mov
pop
js
daa
mov
jo
mov
xor
sbb
push
out
dec
xchg
pop
sahf
test
icebp
adc
fcoms
inc
in
hlt
jp
call
call
push
icebp
pop
incl
cmc
and
add
inc
sub
add
xchg
pusha
xor
loope
pushl
shl
jecxz
jnp
push
pusha
xor
mov
shlb
sub
mov
inc
xor
jb
xor
push
push
fists
aad
bound
decl
cli
jo
xor
mov
add
ss
jo
lcall
or
cmp
jno
jae
icebp
push
imul
shll
roll
adc
jb
mov
and
icebp
test
mov
arpl
outsb
fcomip
jg
loope
cmp
gs
push
sub
adc
xchg
pusha
cmp
push
and
addr16
push
mov
aad
or
pop
jg
sub
loop
or
add
mov
mov
or
or
or
jo
cmp
ljmp
xchg
dec
lds
test
inc
dec
xchg
xchg
xor
xor
add
jb
add
jg
in
push
sub
pop
cwtl
inc
mov
ds
mov
ljmp
jae
roll
dec
add
push
js
xor
mov
pop
pop
sbb
decl
xchg
nop
xlat
xchg
mov
cwtl
inc
ds
cmc
dec
dec
call
decl
mov
push
xchg
mov
test
cmc
test
aad
shlb
jne
push
jbe
fists
push
cmp
cmp
lcall
xor
and
mov
pusha
aaa
inc
and
decl
inc
test
inc
xor
mov
jge
loop
or
add
push
pop
jo
es
fdiv
jge
push
lea
bound
ja
fisubrl
or
push
repz
repnz
dec
lcall
aas
out
addl
decl
push
jg
jle
mov
xchg
icebp
lcall
std
clc
inc
xor
gs
mov
xchg
ret
subb
adc
pop
xchg
clc
sub
loope
cmp
sub
incl
adc
cmp
mov
fdivl
and
mov
dec
dec
flds
push
mov
xlat
push
shr
push
lcall
sbb
or
lods
aaa
cld
mov
push
or
xchg
xchg
cmp
xchg
nop
xchg
xchg
cmp
call
xchg
pop
scas
xchg
cs
mov
roll
jae
mov
in
call
stos
icebp
cmp
or
loope
push
mov
js
and
and
ds
xor
cmp
ljmp
add
sbbb
mov
push
ss
pop
cmp
incb
xor
sbb
jnp
or
push
or
lcall
mov
push
cmp
xchg
or
rclb
mov
pushl
shlb
mov
es
icebp
mulb
add
call
add
inc
mov
and
pushf
faddp
inc
inc
inc
pushf
dec
loop
or
jo
xor
jmp
or
popf
push
es
xchg
ss
repnz
add
push
cmp
call
stos
insb
repz
data16
mov
inc
adc
push
lods
pop
xor
or
lods
push
js
sti
jns
cmpsb
mov
jg
fadds
mov
or
jbe
out
aas
popa
xchg
jl
xchg
gs
stos
scas
incl
clc
mov
push
xchg
mov
nop
hlt
nop
and
mov
push
xchg
cmp
sub
cmp
cmpl
xchg
mov
out
mov
mov
imul
inc
clc
mov
pop
push
lret
pop
nop
xchg
js
mov
inc
pop
sbb
jb
jns
ljmp
call
add
movsl
fidivrl
xchg
adc
orb
adc
lret
add
adc
and
sbb
movsb
cmpsl
mov
and
testl
lcall
sub
or
out
mov
xor
mov
push
lds
addb
test
les
rolb
sbb
test
test
enter
push
mov
mov
stos
mov
and
loopne
dec
ret
add
call
or
push
sar
ss
incl
jbe
push
adc
es
movsl
and
inc
stos
leave
or
push
sub
and
ljmp
mov
or
testl
cli
gs
xchg
adc
add
push
adc
cwtl
jecxz
aas
rcll
cmc
sub
pop
fbld
mov
lcall
sub
sub
call
jp
sub
cltd
sbb
xor
stos
imul
movsb
sbb
xor
out
movsb
push
jg
pushl
cli
sbb
pop
in
imul
pop
sbb
fbstp
mov
fucomip
xor
inc
fwait
pop
fs
jae
sbb
inc
fwait
dec
shlb
lahf
incl
pop
call
divl
mov
inc
ss
push
push
mov
loope
add
decl
push
xor
xor
test
adc
push
loop
push
pop
lds
popa
jnp
sub
outsb
and
inc
daa
incl
test
outsb
sti
popa
sub
push
cmpsl
push
add
jbe
xor
jne
pusha
sahf
decl
lock
add
inc
loope
fiadds
lret
mov
movsw
lods
mov
ljmp
inc
push
jb
adcl
aaa
popa
sar
jns
pop
jae
dec
and
mov
adc
push
lcall
std
mov
and
sub
adc
push
xchg
jb
sti
jmp
in
adc
mov
mov
jmp
loop
scas
xchg
fdivrl
mov
repnz
push
ljmp
sbb
gs
lret
mov
or
ljmp
outsl
insb
or
scas
xor
or
adc
es
lods
cs
xchg
cmp
cmp
and
and
aam
clc
ret
lcall
enter
jne
mov
pop
pop
push
dec
int
jb
sub
mov
pop
dec
cld
inc
lods
repnz
addr16
and
jg
cmp
lret
mov
and
pop
cltd
push
and
shl
inc
fsubl
das
mov
cmpb
dec
shlb
les
shlb
das
push
and
inc
loop
rorb
mov
shlb
xor
inc
push
sahf
ds
inc
xor
aad
decl
and
lea
add
les
add
popf
or
mov
popf
adc
popf
jno
ljmp
data16
mov
dec
jg
repz
push
sarl
in
aaa
xor
mov
aaa
adc
cmp
int3
mov
iret
xchg
addb
xchg
stos
or
add
xchg
xchg
jmp
mov
sub
mov
jno
fcoms
pushf
sub
testl
push
cli
mov
sub
or
dec
ljmp
mov
sub
push
mov
jp
dec
mov
adc
out
clc
jns
xor
push
insl
xchg
sub
sti
std
sbb
mov
mov
jecxz
imul
xor
js
rcr
xchg
les
add
adc
stc
jmp
jno
rorl
pop
jmp
ret
nop
pushf
sub
push
or
lods
lods
rcr
out
add
decl
cmpsb
imul
xor
dec
push
mov
iret
shrl
aad
andl
fld
ss
test
mov
mov
xor
add
adc
out
xchg
mov
lcall
jb
adc
adcb
mov
xor
shlb
test
loopne
nop
add
jns
es
lcall
add
or
sub
jno
sub
hlt
and
push
and
and
adc
pop
or
sti
shrb
fildll
cli
lcall
dec
std
lods
add
sub
nop
add
sub
cmp
incl
cmpl
adc
scas
xchg
mov
fs
lcall
aam
insl
fstl
sbb
test
call
loopne
adc
sbb
cmp
test
mov
adc
dec
icebp
mov
and
sub
or
hlt
add
lods
popa
add
test
loope
sbb
aas
lcall
sti
and
mov
call
pop
roll
mov
mov
mov
into
test
fmull
call
mov
adc
and
cmp
mov
fmull
jo
cltd
cltd
lret
sar
mov
movsb
mov
roll
out
inc
push
push
add
fldl
aad
sbb
jge
fcomip
push
mov
nop
inc
push
std
inc
lcall
js
push
sub
insb
lock
ljmp
aam
jbe
aaa
out
adc
push
sarb
mov
and
cmpb
or
xorl
push
in
out
adc
sbb
sub
cmp
decl
mov
jne
jbe
add
jecxz
sub
xchg
sbb
out
mov
mov
adc
cmc
ljmp
sbbb
jecxz
fbld
or
jp
mov
pop
push
mov
xlat
lret
fsubp
fdivs
push
movsb
fnstenv
lcall
fcmovnu
jecxz
xor
mov
jno
pushf
ss
pop
out
mov
sarl
int
sbbb
cmp
jns
out
cmp
fadds
pop
icebp
adc
xor
jle
cmpsb
mov
inc
out
hlt
mov
incl
pusha
decl
lods
sti
or
cld
and
mov
pop
loopne
xchg
cmp
iret
or
cmc
decl
mov
andb
and
mov
and
push
insb
jmp
lret
ljmp
mov
sbb
int
out
in
mov
jle
cli
mov
lock
add
or
pop
adc
pop
loope
cmp
decl
rorb
ja
lods
jp
aad
loope
fs
aam
dec
sar
dec
loope
addr16
push
sbb
adc
pushl
nop
xor
daa
loop
clc
mov
pushf
and
mov
inc
pop
add
or
cld
sbb
decl
subb
int
jge
sbb
add
adc
jb
repnz
mov
int
add
aad
imul
mov
filds
push
fildl
repz
cmpsb
fldt
lods
cmp
dec
or
xchg
jl
cmp
push
xchg
mov
ret
das
xchg
mov
sbb
inc
xor
pop
sar
call
or
insb
call
xor
jl
sub
cmp
fs
test
push
out
cwtl
push
push
cltd
dec
xor
icebp
jmp
testb
loopne
mov
inc
rcrb
enter
mov
push
mov
lea
test
mov
fs
jmp
dec
test
insb
dec
mov
lods
mov
jmp
mov
adc
incb
ret
ljmp
lret
sbbb
xchg
pop
jnp
jmp
fwait
xchg
sub
mov
pushf
xchg
aaa
push
inc
mov
outsb
cmpsl
out
nop
sub
jb
daa
jbe
xorb
or
jg
test
pop
xor
and
inc
mov
ljmp
mov
in
dec
sub
jmp
out
sbb
cwtl
or
out
jl
maxps
or
clc
cs
add
dec
repz
nop
test
inc
xchg
xor
cltd
pop
dec
adc
outsl
and
push
jae
cmp
dec
inc
add
fwait
lret
xchg
push
jno
xor
lret
sbb
jno
bound
pop
mov
mov
pop
sub
cwtl
mov
add
mov
pop
lcall
xchg
push
ljmp
and
xchg
lret
inc
and
sbb
jg
sbb
pop
cmp
mov
pop
push
fidivl
enter
lcall
stos
mov
movsb
and
or
push
dec
pop
int3
roll
and
decl
add
orb
rorl
call
mov
add
loop
call
andl
and
incl
push
nop
push
lcall
fisubrl
mov
jmp
test
movsb
mov
xor
inc
lock
lcall
push
adc
outsb
jp
insb
add
jle
stos
xor
fists
xor
stos
mov
mov
adc
shlb
push
cmp
xor
jle
dec
sbb
sti
in
ficompl
loop
mov
hlt
lcall
mov
push
ja
add
adc
lock
sbb
incl
sbb
mov
in
fwait
out
pop
jmp
repnz
or
leave
cmp
dec
ficomps
xchg
ljmp
mov
and
mov
mov
sbb
sub
mov
xchg
out
test
push
adc
shlb
decl
dec
icebp
inc
test
js
faddl
in
aam
adc
and
dec
xchg
aaa
fcmovnb
stos
in
leave
xchg
scas
dec
dec
mov
lock
incl
mov
mov
mov
dec
or
push
stos
ss
sbb
fnsave
cld
movsl
add
adc
fcoml
outsl
cmp
aam
int
mov
sbb
aam
iret
mov
cmp
jecxz
int3
mov
call
decl
add
lock
push
int
cmpsl
mov
xchg
sub
movsl
push
stos
xchg
lret
fadds
aad
mov
outsl
cld
dec
ja
neg
popa
aas
jge
test
decl
jo
push
jl
add
test
addl
inc
lods
mov
xchg
ss
adc
push
out
addr16
outsl
and
jl
dec
push
xchg
sbb
fcmovne
inc
mov
outsl
mov
negb
call
mov
shr
inc
repz
xlat
cmp
rcll
mov
aam
dec
lret
xor
orb
jno
mov
adc
pushf
mov
pop
shrb
push
pop
mov
mov
sbb
lock
test
inc
incl
adc
std
sub
sbb
daa
push
lods
sbbl
das
cli
and
mov
pushf
add
sbb
adc
lcall
and
fcmovbe
cmpsb
je
cmp
and
lods
test
sub
leave
insl
daa
movsl
ljmp
rclb
jle
xor
push
ficoml
xchg
loop
insb
jg
or
adc
xchg
mov
and
and
or
cmpsl
lcall
sbb
shll
loope
jecxz
adc
pushf
or
and
pop
and
leave
mov
mov
adc
sub
inc
mov
in
stos
push
pop
out
inc
jns
xchg
repnz
push
cmp
out
push
into
sub
and
and
iret
pop
incl
rcll
sub
insl
sbbl
cmp
pop
pop
lock
mov
push
mov
xchg
sbb
cmpsb
cmp
icebp
pushf
stc
nop
mov
ljmp
out
sarb
loop
lods
fidivrl
fstpl
imul
pushf
jns
pop
fnsetpm(287
pop
mov
mov
sub
je
inc
minps
cmp
dec
iret
jle
xor
mov
jg
movsb
call
xchg
xor
fadds
mov
pushf
lea
lock
out
lods
inc
mov
int3
mov
add
push
ret
and
inc
mov
lods
sub
rcll
mov
orb
xchg
sbb
test
mov
xchg
lods
xchg
sbb
sub
cld
imul
andb
fs
xchg
dec
jb
pop
adc
adc
mov
clc
das
clc
lcall
cmc
adc
scas
lret
pop
mov
cmp
dec
or
xor
add
cmp
imul
loopne
ljmp
inc
mov
add
lds
jg
pusha
std
xlat
cmp
test
les
ljmp
mov
movsl
push
jb
add
mov
push
arpl
and
sub
es
call
shrb
jo
pop
incl
sbb
or
dec
es
lock
decl
movsb
imul
dec
lcall
dec
imul
mov
adc
addr16
jecxz
icebp
cmpsb
mov
xlat
das
enter
add
mov
mov
jbe
dec
inc
xor
push
decl
dec
add
in
pusha
or
dec
push
test
or
sar
sbb
push
shll
pop
dec
sar
incl
jb
movsl
and
mov
add
jne
cmp
push
int
inc
sub
xchg
test
jle
push
aam
call
stos
adcb
aam
fldenv
lds
xor
dec
push
ret
lods
insb
sub
add
add
xchg
stos
mov
les
pusha
mov
pushl
lret
std
stos
lea
and
mov
popf
data16
and
pushl
lods
pop
add
btr
push
rolb
or
add
fwait
sbb
and
fcomip
xchg
mov
mov
adc
shll
add
rcll
jecxz
lret
xor
mov
inc
adc
mov
fadds
aam
into
loope
or
inc
push
cmp
ljmp
in
and
ss
mov
pop
mov
decl
rcrb
push
js
es
hlt
in
mov
dec
mov
mov
decl
jnp
inc
adc
shl
rcl
js
mov
inc
cmp
je
mov
test
jg
ljmp
adc
dec
push
int3
arpl
mov
pop
dec
aam
int
stos
dec
in
xchg
fsubs
inc
jg
fwait
nop
in
cmp
jmp
call
std
jmp
fisubl
push
lods
xchg
pop
sarl
gs
call
fildl
leave
in
mov
push
or
stc
movsb
sti
adc
sbb
inc
jmp
test
mov
sub
lret
mov
pop
imul
mov
cmp
jo
lcallw
and
xchg
inc
pop
ss
add
push
sbb
mov
aaa
std
fbld
jp
stos
pop
aam
dec
and
inc
adc
ja
fstl
loop
jge
xlat
cmpsb
push
adc
pushl
mov
enter
xchg
mov
cwtl
mov
sti
cmp
add
dec
movsb
add
jg
es
lock
fadds
inc
and
mov
sbb
pusha
cld
inc
sbb
jge
movsb
mov
call
add
lods
loope
mov
lcall
or
fldt
lcall
pop
hlt
pop
rcl
push
jno
aad
mov
mov
loopne
nop
in
jg
stos
and
pop
clc
sub
test
das
movsb
mov
jae
adc
shrb
adc
adc
inc
and
incl
in
dec
mov
cmp
test
fadds
outsl
jmp
mov
mov
test
popf
mov
sahf
xor
pop
mov
cmp
cmpsl
and
cmp
and
aad
sarl
ja
xchg
call
pusha
lds
in
inc
mov
mov
add
mov
add
mov
fldt
ret
repz
daa
outsl
dec
xchg
lcall
mull
jle
mov
mov
cld
rcrl
orb
lds
and
orl
sub
pusha
adc
jnp
or
mov
push
jg
psrld
add
mov
sbb
mov
pop
jl
xor
mov
fstps
mov
and
mov
call
test
sti
sub
stos
jg
in
sbb
xchg
inc
stos
jle
and
test
push
adcl
push
adc
jae
xor
popf
add
fisttps
cmc
pop
pushf
sub
jmp
inc
cli
cmp
and
arpl
mov
cmp
decl
xchg
jmp
bound
dec
mov
add
add
lock
or
adc
cmp
xchg
or
bound
xchg
hlt
pop
lock
rolb
and
hlt
decl
pop
clc
inc
pop
and
aam
fbstp
test
push
sbb
add
jo
pusha
test
mov
jmp
xchg
sub
sub
imul
or
loopne
lcall
insb
ljmp
mov
xchg
pop
inc
push
call
and
pop
push
adc
or
cmc
sar
lcall
cwtl
jb
les
lret
inc
xor
clc
xchg
add
aad
test
fwait
adc
decl
or
sbb
je
adc
nop
push
xor
dec
mov
out
mov
ljmp
dec
mov
imul
mov
adc
outsb
loopne
and
out
push
mov
sbb
dec
mov
jae
mov
movsb
loop
movsb
es
jmp
mov
ljmp
inc
sbb
and
shl
or
pusha
icebp
incl
jb
movb
sbb
and
scas
and
lods
mov
addb
or
popf
add
cmpl
psubusb
fbstp
jmp
mov
push
lods
in
inc
jp
push
jb
sub
jg
lcall
into
cmp
es
inc
jl
sbb
test
movsb
dec
in
sar
shrl
ja
inc
insl
ljmp
mov
or
jo
test
out
incl
pop
lds
cwtl
adc
sub
cltd
mov
xchg
leave
xor
xor
cmp
add
sahf
cmp
add
test
cmp
mov
pop
nop
dec
xor
and
xor
push
xchg
add
or
test
mov
jecxz
jle
cmp
jmp
ret
inc
dec
push
sbb
or
or
rclb
xchg
out
and
mov
xor
incl
pop
nop
lret
cmp
mov
inc
stos
cmp
xchg
mov
and
inc
push
mov
fcmovbe
cmp
xchg
mov
or
adc
mov
jnp
cs
movb
lahf
iret
sub
loopne
adc
xor
xchg
jmp
mov
mov
xchg
adc
xor
or
fdivs
lods
adc
insb
pop
fisubrl
es
or
addr16
js
or
dec
jg
adc
sbb
rolb
add
push
inc
cmp
xchg
or
mov
loopne
cs
out
clc
ficoml
ret
movsb
iret
test
ret
aad
xor
enter
decl
sahf
dec
test
or
rorb
mov
cld
push
xchg
add
repnz
mov
xor
and
add
cmp
inc
xchg
fadds
push
inc
adc
and
outsl
mov
loop
push
repnz
xchg
rcr
sti
add
dec
sub
pop
ljmp
mov
jns
dec
xor
aaa
mov
and
cmp
push
pushl
or
xchg
xor
movsb
mov
or
xchg
xor
adc
std
imul
sbb
adc
lcall
fistpll
les
fdivs
push
add
je
incl
mov
or
jmp
push
push
or
or
gs
ljmp
or
inc
pop
imul
or
sar
dec
mov
andl
cmp
mov
sub
xorb
add
loopne
gs
or
mov
jb
pop
ljmp
lock
mov
in
shlb
dec
pop
mov
jo
nop
push
ror
push
jecxz
pop
jne
ss
inc
mov
adc
pop
jb
sbb
xor
decl
cmp
dec
push
das
out
push
cmp
adc
mov
repz
sbb
fwait
lret
shlb
leave
pop
cli
subb
outsb
js
sbb
call
lret
mov
movsl
cmp
lock
push
mov
lock
and
rolb
mov
push
testb
add
jae
inc
dec
and
mov
pushl
sub
call
testb
mov
xor
push
pushl
adc
lock
rorl
dec
and
mov
dec
sub
xchg
pop
sub
or
sub
mov
lods
mov
rcl
mov
es
fidivrl
jmp
xchg
mov
push
fcomip
pop
popa
jno
test
cmpsb
fisttpll
adc
pop
aam
sbb
out
mov
aam
insb
roll
mov
enter
sub
call
out
add
and
jmp
das
sbb
jg
andl
mov
aad
xor
insb
jno
call
inc
testb
outsl
cli
pushl
or
ret
xlat
sub
clc
mov
loop
xor
pushf
rorl
test
dec
lcall
lea
insl
dec
pop
add
mov
insl
test
sub
add
xchg
mov
cmp
sbb
sub
inc
loope
lea
sbb
inc
fisubl
jp
in
incl
jmp
mov
clc
sti
sub
mov
fwait
ret
jno
aas
mov
mov
mov
xchg
jmp
add
push
push
dec
int3
pop
add
in
int
add
or
repnz
subl
adc
pop
pop
cmc
enter
cmp
adc
enter
mov
testl
incl
sbbl
sub
inc
xchg
lahf
jecxz
or
repnz
push
or
push
pop
call
mov
or
sub
jge
js
fisubrl
add
ficomps
sbb
dec
fwait
sahf
push
cld
mov
mov
clc
xorl
jne
sub
lahf
sub
incl
or
fisubrs
sub
notb
mov
loop
lcall
mov
in
clc
cmc
daa
adc
xchg
bound
lods
sbb
call
jae
mov
rcrl
lret
in
add
xor
or
jbe
mov
adc
pop
in
cmp
adc
mov
sahf
mov
addb
adc
les
push
adc
mov
ds
mov
cmp
inc
xor
lret
repnz
jg
jl
pop
jl
dec
ss
movsb
arpl
cs
lock
inc
or
ljmp
lret
pop
cs
in
call
pushf
shlb
dec
popa
push
out
or
clc
orl
lds
popf
cmp
test
andl
pusha
xorb
test
movsl
fildll
xchg
jo
jnp
inc
and
push
adc
pop
loopne
inc
ret
and
call
or
enter
call
dec
lret
xor
lret
std
jno
mov
dec
pop
dec
pop
loope
inc
mov
call
fcomps
sbbl
rcrl
mov
mov
pop
movb
inc
jmp
mov
push
pop
sbbb
clc
mov
std
jmp
add
mov
add
rclb
adc
rol
mov
sbb
jmp
ljmp
xchg
push
fsts
scas
mov
mov
ljmp
mov
xchg
mov
or
cmp
cmp
mov
sbb
sub
xchg
sbb
mov
jno
mov
sub
mov
in
mov
jg
jmp
jno
cmp
xchg
mov
mov
stc
ret
jmp
mov
jl
inc
jl
cmpb
ljmp
adc
add
xor
jg
fidivrl
fcmovnbe
stos
cmp
push
adc
inc
push
repz
cld
cmp
stos
jne
add
jl
adc
add
sub
fld
out
adc
xor
repnz
scas
sub
daa
rolb
ret
dec
push
frstor
hlt
and
or
enter
addl
or
inc
insb
cli
call
iret
sbb
or
jo
adc
jg
mov
nopl
push
aaa
inc
shll
add
jg
int3
cwtl
imull
pop
test
adc
outsb
pop
cmp
inc
cmp
hlt
outsb
rcrb
sarb
loope
outsl
ret
xchg
test
decl
leave
loopne
sub
in
arpl
mov
cli
out
in
cmp
xor
ljmp
fcomi
push
aas
inc
fistps
sub
scas
cmp
pushf
mov
call
sub
sti
xchg
leave
insl
hlt
popf
fcompl
or
movsl
sbb
in
cmc
aad
xchg
in
cmpb
ljmp
gs
or
adc
adc
sbb
push
scas
xchg
test
rorl
nop
xorb
wrmsr
repz
icebp
mov
clc
fnstsw
fadds
inc
out
mov
fnsave
pushf
add
jns
adc
call
mov
mov
decb
pop
out
push
fildll
pop
andl
dec
aas
pop
add
sbb
imul
mov
sbb
add
xchg
push
lea
sbb
lahf
int3
loope
add
lods
jmp
in
cmp
adc
mov
cmp
or
ret
cld
fs
andb
cmp
xchg
sti
fsubrs
sarl
adc
mov
cmp
inc
fs
dec
xlat
mov
and
pop
pushl
or
add
add
lahf
shll
cmp
pusha
adc
and
push
or
dec
jg
stos
sub
pop
loope
mov
test
sub
push
repnz
xor
lods
sahf
xchg
dec
jbe
push
xchg
ret
loope
cmp
mov
int3
sbb
sbb
adc
adc
mov
mov
in
scas
and
jmp
mov
push
sub
and
jo
roll
inc
pop
ret
ljmp
sbb
push
lds
mov
cmp
es
sbb
jne
jmp
sbb
insb
fadd
mov
sbb
fwait
in
xchg
jne
cwtl
xor
sarb
jnp
adc
mov
lea
cli
pop
sub
outsl
sbb
jae
int
push
cmp
call
dec
add
push
push
adcb
scas
std
loope
dec
adc
xor
jge
dec
adc
sub
dec
jl
icebp
mov
and
push
scas
nop
sub
in
rcl
push
sti
lock
mov
sub
out
adc
jnp
push
ss
insl
push
mov
adc
jg
je
ret
xor
iret
and
mov
fisttpl
mov
ljmp
or
repnz
mov
cmp
decl
hlt
sub
sub
mov
or
mov
xchg
cmp
lret
test
pop
xchg
and
scas
xchg
clc
jmp
daa
mov
mov
jle
shll
int
mov
ljmp
mov
or
add
cmp
xor
jae
cmp
jbe
enter
std
repz
ret
dec
in
inc
pop
push
lods
sub
pop
and
loop
fdivs
jne
dec
mov
clc
lea
int3
jl
push
and
add
bound
es
inc
stc
inc
lds
pop
xchg
and
push
bound
in
clc
stos
lods
jg
mov
aaa
dec
stos
and
push
sbb
outsb
jle
jns
mov
cltd
movsb
xchg
push
dec
mov
mov
loop
cmpsl
or
mov
sbb
pop
push
jo
lret
adc
jnp
add
cmp
mov
nop
imul
nop
mov
sarb
ficompl
add
push
add
cmpsb
adc
adcb
or
mov
inc
enter
dec
mov
sbb
rol
dec
ds
incl
or
push
in
dec
fsubrs
movsb
mov
leave
or
mov
sbb
fcompl
inc
xchg
stos
or
xchg
nop
cmp
inc
ss
arpl
sub
incl
mov
pop
fistl
and
sub
pop
shll
cwtl
adc
mov
sbb
mov
xor
fcompl
xchg
xor
pushf
movsl
pop
decl
lcall
mov
imul
sbb
dec
lods
dec
sbb
inc
pop
cmc
or
mov
mov
mov
fwait
sub
mov
movsl
jecxz
filds
sbb
fdivl
popf
jp
jmp
push
lea
or
inc
ljmp
jmp
pop
mov
rcr
test
mov
jbe
andb
dec
cli
aaa
lcall
inc
cmp
mov
addb
scas
js
pop
cmp
incl
lea
enter
cmp
cli
fsubs
and
cltd
push
cs
mov
call
or
xchg
push
lret
call
arpl
lcall
repnz
daa
cltd
pop
ljmp
jge
jmp
xchg
enter
jmp
mov
push
mov
adc
movsl
lcall
mov
movsl
ficomps
stos
or
ljmp
rclb
das
push
xor
fs
push
xchg
insb
inc
and
leave
aad
adc
stos
or
aam
incl
les
lcall
jmp
addl
dec
pusha
pop
jl
inc
or
aaa
orb
sub
dec
and
mov
inc
jl
cmpsb
or
sbb
ljmp
ret
sbb
push
pop
xor
push
mov
jg
inc
xor
lcall
pop
stos
aam
incl
xor
mov
popa
sub
aam
xchg
push
xchg
pushl
jmp
push
xchg
mov
or
cmpsb
push
xor
cmpsl
popa
mov
test
incl
inc
mov
xchg
shrb
and
xor
mov
int3
inc
not
xchg
je
push
das
mov
sbb
test
cmpb
rcl
incl
lcall
sbb
ja
push
aaa
add
sbb
testb
arpl
push
cli
lcall
fists
xchg
test
cmp
inc
jl
loop
jb
mov
repnz
cmp
faddl
xor
das
pop
fmuls
out
mov
inc
adc
mov
cmpsl
ljmp
pushl
adc
int
ja
rcr
out
jb
and
imul
xchg
sbb
add
ljmp
out
dec
leave
shl
repnz
bound
es
test
mov
jg
sti
fdiv
daa
pop
push
stos
cmp
push
ljmp
ljmp
mov
and
mov
in
stos
cmc
pushf
push
shrb
and
sbb
add
decl
nop
rolb
sbb
mov
pusha
and
add
xchg
test
fisubl
pusha
incl
adc
adcb
cmp
outsb
mov
test
xor
or
ret
jo
in
and
ljmp
xor
sub
subl
mov
sbb
push
mov
xchg
cs
popf
lea
rorb
adc
mov
push
stos
das
jns
mov
jge
jmp
sub
mov
pushf
mov
pop
stos
jmp
cld
pop
outsb
mov
lcall
je
call
mov
lea
inc
xchg
inc
lcall
in
add
rolb
int
jmp
xor
push
sti
call
or
jno
dec
lret
inc
push
ja
xor
pop
and
xchg
inc
add
test
insb
xor
or
xchg
ljmp
adc
push
arpl
cmpl
pop
pop
test
decl
or
pop
iret
test
nop
xor
sahf
bound
or
xchg
adc
cltd
mov
cmp
cmp
dec
sarl
out
call
loope
push
mov
push
xchg
add
jbe
push
inc
icebp
mov
mov
ret
enter
jmp
adc
js
lret
sahf
push
dec
cmp
jmp
pop
cmpsb
mov
sub
cmpsb
cmc
stos
aaa
lret
test
inc
sahf
repnz
mov
ret
fsubl
adc
push
dec
jecxz
pop
adc
insl
pop
xchg
clc
les
loope
scas
pop
push
push
clc
decl
and
mov
sub
dec
fisubrl
mov
out
stos
pop
les
adc
mov
push
mov
xchg
mov
mov
or
mov
call
mov
sub
inc
or
sub
cmp
jb
mov
ret
decl
cmp
mov
in
out
fsubl
fcomi
and
xchg
bound
adc
lcall
mov
jno
iret
sbb
ljmp
jg
js
lea
mov
push
fwait
adcl
push
call
cld
roll
pop
dec
adc
xor
test
cmp
mov
lods
jg
pushl
cmpsb
frstor
or
add
fidivrl
mov
ja
inc
or
pusha
push
mov
or
arpl
test
mov
imull
jbe
les
jno
rol
adc
sbb
lock
push
mov
call
into
incl
mov
inc
jge
push
jb
push
iret
aam
jae
inc
adc
sub
test
cli
in
xchg
cmpsl
inc
and
daa
xchg
hlt
push
pushl
jns
pop
xchg
pop
adc
mov
test
clc
test
cmpsb
setb
loop
inc
add
out
xchg
xchg
popa
cmp
jge
lret
push
ret
fwait
jbe
lds
das
iret
push
push
sub
dec
pop
jbe
xor
add
add
xor
popa
std
lcall
cltd
xor
in
shrl
pusha
ret
mov
push
fbstp
mov
xchg
test
pop
mov
decl
pop
push
lcall
fiaddl
cmp
add
mov
call
or
arpl
out
cmp
or
lods
adc
out
bound
pop
push
mov
and
push
xor
roll
mov
dec
in
inc
mov
pop
add
ss
filds
sbb
xorb
jmp
enter
or
add
xlat
int
mov
mov
aam
push
loope
add
sbb
mov
imul
jl
xchg
dec
lret
lea
out
test
push
movsb
push
mov
add
xchg
and
pop
cld
int3
add
into
test
cwtl
in
or
push
adc
flds
scas
clc
ljmp
adc
inc
loope
movsl
or
daa
imul
cmp
cmp
adc
out
or
add
mov
in
xor
incl
sbb
in
mov
mov
inc
rorl
aam
inc
pop
fisttpll
lcall
popa
fsqrt
int3
iret
call
std
je
jae
or
jns
inc
aad
cmpsl
mov
dec
or
dec
seto
movsl
inc
mov
pop
mov
je
xor
add
sbb
inc
pop
xchg
inc
je
mov
or
add
cmc
inc
xor
insb
les
aam
and
dec
inc
sbb
inc
pop
adc
inc
pop
test
adc
cwtl
aad
popf
pop
mov
andb
cmpsb
xchg
mov
cld
adc
push
inc
mov
push
jmp
clc
movsb
or
fcmovb
ss
subl
add
sbb
shlb
shl
imul
test
sub
inc
cld
and
lret
cwtl
pop
inc
lods
inc
int3
stc
lods
push
mov
mov
imulb
push
add
inc
xor
je
fs
add
lcall
mov
mov
adc
popf
fcompl
and
adc
rorl
add
fwait
decl
mov
fidivrl
aaa
in
subb
inc
ret
call
dec
dec
or
sbb
mov
jmp
and
push
push
cmp
outsl
xchg
inc
lcall
fadd
jae
adc
mov
inc
cs
add
add
fdivp
pop
sbb
out
int3
daa
xor
shlb
mov
jg
xchg
popa
in
pop
pop
and
cmp
daa
test
rorb
popa
pop
iret
icebp
faddl
pushl
mov
dec
sahf
pop
pop
in
dec
fwait
inc
and
lock
adc
dec
inc
xor
xchg
dec
add
jg
nop
insl
cmp
hlt
pop
iret
cmc
nop
and
cmp
sbb
pop
mov
stc
int3
pop
cmpsl
add
std
cmp
bound
pop
out
pop
dec
cltd
push
jp
dec
loope
cwtl
in
or
sti
fmul
push
std
movsb
pop
mov
and
inc
stos
add
dec
adc
test
or
add
pop
jg
loopne
dec
mov
scas
hlt
rcrb
and
loop
or
jp
lcall
inc
or
push
enter
push
dec
ljmp
stc
test
aad
and
popf
pushl
int3
cltd
sbb
fstps
xor
mov
adc
dec
shll
pop
or
lds
je
int
push
test
dec
pop
loopne
mov
nop
mov
adc
call
data16
lods
xor
pop
in
shlb
pop
push
mov
or
flds
pop
dec
push
add
icebp
xor
insl
loopne
sbb
pop
aam
inc
ret
roll
mov
cmp
aam
jmp
or
push
xor
je
jns
adc
je
test
call
mov
sbb
and
mov
inc
xchg
xor
incl
or
test
shll
or
adc
cmp
aad
inc
inc
inc
add
push
out
les
pop
jg
movsb
cmp
and
or
in
cwtl
call
xchg
in
inc
jg
jmp
lret
cmp
movsl
repnz
mov
dec
iret
popf
pusha
out
rcr
dec
pushf
int3
or
dec
sbb
fsubrs
cmpsb
cmp
es
xchg
jmp
cli
paddusb
leave
fdivl
inc
pop
lahf
inc
fldt
inc
imul
jmp
vpmaddwd
insl
sarl
lret
imul
loopne
dec
clc
out
aam
popf
jno
add
inc
in
sbb
ljmp
inc
mov
decl
sbb
movsb
and
push
mov
movsb
adc
pop
adc
or
push
cmp
dec
data16
std
das
cli
call
push
call
fs
and
aaa
mov
cltd
mov
jg
dec
mov
push
lea
into
fs
decl
hlt
leave
dec
push
jle
gs
mov
pop
faddl
push
fwait
inc
incl
cld
test
int3
adc
addr16
sub
pop
shlb
add
jge
pop
aaa
adc
inc
dec
cmpb
jo
dec
sub
pop
loopne
call
mov
xchg
pop
push
sbb
aaa
subb
lcall
jp
mov
push
ds
and
aam
lock
hlt
std
pop
loopne
lea
shlb
test
faddl
adc
push
cld
or
push
enter
or
adc
push
out
or
fs
out
xor
test
sbb
out
nop
movsl
pop
sub
loopne
call
mov
out
shrb
in
inc
push
jns
mov
cmc
pushl
std
loopne
inc
popa
lahf
ss
pusha
stos
hlt
test
cmp
fxtract
insb
xchg
cltd
adc
je
dec
inc
sar
leave
loop
cmovne
leave
lahf
rorb
pop
sub
popa
out
push
cmc
call
mov
fcmovu
push
adc
or
add
mov
dec
adc
enter
stos
inc
pop
mov
mov
or
ret
filds
push
xor
mov
add
lock
mov
in
mov
and
nop
inc
xchg
or
imul
xchg
inc
int3
sbb
lock
lcall
mov
shlb
roll
pusha
call
pushf
cltd
and
orb
or
lds
inc
fwait
gs
cld
lcall
xchg
int3
je
scas
push
cmp
pop
mov
lret
imul
ds
mov
xchg
pop
or
or
jae
adc
sarb
clc
xor
push
or
js
jbe
mov
lock
inc
sub
movsb
fnstcw
insb
and
movsb
cmc
jg
sub
call
adc
add
int
repnz
int
dec
in
xor
adcl
sbb
ljmp
and
adcl
add
lods
adc
inc
push
sti
inc
jb
mov
inc
sub
pop
push
jmp
jo
mov
mov
pusha
scas
lahf
data16
dec
sbb
jg
mov
sbb
mov
or
xchg
fsubs
jecxz
loopne
adc
scas
stos
lcall
add
pop
and
ljmp
lcall
jne
sub
fsub
lcall
sub
jno
mov
mov
outsb
sbb
sub
xchg
pop
loopne
pop
sti
addl
fistps
rolb
aad
aaa
bound
dec
daa
jbe
repnz
sbb
push
push
push
dec
cli
call
sbb
sbb
adc
push
cs
and
push
lcall
ss
pop
je
xor
stos
in
xchg
sbbl
decl
mov
adc
inc
aaa
ret
dec
push
push
pop
or
jmp
jb
xchg
adc
xor
dec
cmp
scas
mov
jge
push
mov
lcall
decl
enter
xchg
xchg
out
xor
pop
insb
roll
mov
cli
incl
ret
call
fs
dec
pop
in
je
jp
movsb
jbe
jmp
inc
sbb
into
adc
add
dec
dec
lock
or
push
pop
sub
incl
sub
aaa
sbb
sbb
icebp
inc
push
mov
jp
mov
xchg
push
shrl
jbe
fsubl
out
xor
xchg
rcl
adc
loope
hlt
ljmp
insb
jno
icebp
jmp
lds
sub
hlt
sbb
push
jmp
mov
sbb
mov
and
mov
sahf
dec
popf
sbb
adc
cli
in
add
xchg
sbb
xchg
int
fucomp
dec
fbld
add
outsl
fstps
aam
mov
ljmp
rorl
mov
imul
add
mov
xor
and
imulb
out
mov
cltd
lods
out
mov
add
sub
movsl
leave
ret
adc
loope
test
dec
pop
or
repz
sbb
out
xor
call
xor
mov
int3
scas
xchg
ljmp
sub
in
mov
add
lahf
push
movsb
icebp
call
icebp
push
stos
enter
and
int
idiv
cmp
enter
aaa
int3
dec
add
mov
xchg
push
idivl
push
rcl
pop
fmull
sbb
in
cmp
sbb
incl
call
shr
dec
or
lock
call
push
decl
aas
clc
lds
lea
addl
aas
push
xchg
aam
cwtl
mov
add
inc
push
stc
fiaddl
sbb
lock
shll
popa
aaa
lret
jmp
popa
js
sbb
jne
adc
mov
call
inc
out
inc
jae
inc
add
test
cmp
lcall
sub
enter
movsl
ljmp
xor
mov
sar
sbb
push
pop
outsl
dec
fwait
mov
or
mov
rorl
sub
push
aam
cmpsb
inc
fldcw
in
in
mov
imul
pushl
movsb
fsub
fstpt
addr16
mov
sti
pushf
sub
push
popf
pop
xchg
enter
repz
out
clc
sub
cli
loope
cs
test
add
incl
jl
in
test
mov
and
addl
in
inc
sub
push
xor
divl
inc
repnz
out
pop
in
add
and
pop
scas
fprem1
ljmp
lds
bound
push
lret
adc
pop
and
mov
add
mov
jnp
or
inc
inc
fdivr
jne
pop
pop
pushl
std
leave
aam
mov
mov
sbb
jne
xchg
pop
jo
mov
add
and
div
adc
mov
incb
call
popa
fs
xchg
push
in
xchg
push
int
popa
push
inc
jmp
jl
shlb
dec
add
add
adc
in
sbb
or
adcb
filds
dec
shl
pop
push
xchg
sbbl
call
adc
loopne
push
enter
adc
xor
fsubrs
addb
xchg
enter
pop
decl
test
fcomp
lcall
ljmp
in
cwtl
cwtl
xchg
mov
pop
lock
call
mov
outsb
mov
push
mov
fwait
mov
adc
adc
push
out
dec
push
cmc
pushl
xchg
addr16
enter
out
clc
cwtl
adc
xchg
ljmp
out
and
xchg
int
sbb
xchg
andb
repnz
inc
call
inc
call
lods
xor
jmp
out
mov
jmp
arpl
in
pushl
fisubl
add
push
dec
xorb
or
cli
mov
test
xor
sbb
mov
sub
aas
bound
cmp
call
repz
sbb
jge
xchg
lahf
into
inc
das
iret
sub
jg
mov
mov
and
mov
sahf
mov
inc
test
enter
insb
nop
and
test
inc
lret
inc
stos
jg
dec
push
xchg
xlat
insl
jge
or
inc
sub
clc
add
adc
lods
mov
xchg
pop
out
xor
mov
push
movb
orb
or
sub
push
inc
decl
push
xchg
fs
nop
add
fs
test
add
pushl
lahf
sub
test
mov
lcall
shrl
mov
xchg
sbb
in
cmp
pusha
cmpsl
inc
aam
push
sub
xchg
daa
sub
ljmp
mov
jl
ret
daa
xchg
sar
aad
mov
icebp
cli
mov
pop
outsl
pop
mov
mov
xchg
sbb
jmp
push
roll
adc
ret
xchg
out
clc
pushl
out
inc
repz
adc
mov
cli
repz
jae
lea
mov
ror
data16
test
xchg
icebp
fcmovnu
sbb
mov
push
dec
mov
xor
icebp
pop
hlt
add
sbb
push
push
adc
xchg
cmp
fs
incl
jmp
dec
sbb
mov
mov
pop
sub
inc
enter
pop
mov
movsl
add
aaa
push
add
jns
push
sub
lahf
inc
ret
rolb
push
movsl
push
pop
mov
test
ljmp
and
loope
cmp
or
lock
setnp
xchg
or
incl
push
push
and
inc
sbb
xchg
sub
sbb
xchg
lds
sbb
lcall
sbbb
push
adc
mov
scas
rcrb
aam
repnz
js
add
xor
inc
arpl
mov
cli
adc
inc
dec
add
call
or
add
push
movsb
test
call
test
push
xor
cmpsb
addr16
sub
out
loopne
fwait
cs
imul
jae
insb
lcall
fbld
cld
decl
fsts
popl
sub
and
sbb
decl
sub
or
sahf
jl
int3
adc
stos
mov
xor
add
push
inc
test
mov
out
xchg
mov
add
arpl
ret
and
xor
cmpsl
dec
sub
adc
adc
shlb
inc
mov
and
ljmp
mov
xchg
mov
mov
mov
ljmp
cmpsb
test
icebp
daa
pop
out
xchg
lods
sub
ret
mov
ret
movsb
ljmp
je
dec
scas
or
fbstp
mov
mov
leave
decl
xor
pop
lret
mov
scas
mov
sbb
pop
out
call
inc
jns
std
inc
xchg
mov
lea
cmp
and
push
xchg
cli
call
mov
dec
push
mov
mov
mov
sahf
mov
xchg
dec
sub
add
push
mov
or
adc
or
mov
or
or
mov
aam
dec
loopne
mov
sbb
in
mov
pop
dec
and
add
aaa
ja
lds
adcb
and
fildll
pop
mov
in
adc
mov
jae
inc
adc
loopne
pop
lock
jne
pushf
cmp
decl
adc
dec
sub
jl
sub
add
jmp
repz
jp
dec
dec
add
inc
jmp
xor
dec
fs
ret
jp
push
pop
shlb
popf
adc
call
cs
aam
ljmp
and
popf
sbb
call
mov
adc
test
rclb
cmp
repnz
push
add
xchg
inc
add
mov
enter
adc
decl
sub
sbb
or
adcb
push
xchg
dec
in
dec
adc
adc
inc
movsl
and
addb
fmuls
jge
jmp
mov
xor
cltd
mov
cmp
pop
cltd
ds
xchg
adc
pusha
jecxz
xor
xor
sbb
push
subb
ljmp
jle
inc
add
jbe
mov
cmp
notl
daa
stos
int
pop
adc
mov
shrl
sbb
decl
pop
push
sbb
or
sbb
roll
loopne
push
jecxz
out
sub
pusha
cld
lcall
cmpsl
cmp
and
mov
pop
push
jo
nop
and
ss
cltd
push
xchg
outsb
hlt
sbb
incl
ss
addr16
incl
adc
mov
into
push
or
xor
int3
in
repnz
adc
jmp
or
pushf
cvtps2pd
sub
sub
sub
ss
and
lcall
jp
and
inc
lret
jl
call
in
call
push
in
push
and
orl
sub
xchg
icebp
jmp
adc
decl
xchg
mov
shrl
or
hlt
inc
mov
in
nop
pop
add
ficoms
sbb
lea
or
xchg
cwtl
inc
test
repz
xchg
jno
xor
orps
cs
ljmp
sub
add
jecxz
ret
ds
adc
or
push
sbb
inc
pop
adcb
xchg
outsl
mov
xchg
mov
pop
std
fcomip
xchg
push
call
and
mov
add
push
clc
inc
and
js
notb
and
push
stc
mov
or
cli
push
pop
imul
jg
sub
fs
insl
add
or
dec
arpl
cs
insb
mov
cmp
ss
mov
jg
mov
adc
int
mov
test
sahf
fldcw
popa
fldenv
ss
ds
fcomip
incl
mov
and
out
cli
cmp
and
sub
jg
mov
imul
jmp
roll
loope
jb
addr16
pop
and
xor
cmp
stos
sub
jg
mov
cmp
nop
jne
sahf
push
test
fldl
sbb
adc
jo
or
cmp
decl
popa
call
xchg
xor
pop
mov
pop
cmp
daa
mov
mov
out
mov
arpl
inc
rcr
scas
fsubs
scas
mov
adc
xor
mov
xor
dec
pushl
cld
dec
mov
movsb
mov
leave
jnp
sbbb
fmull
lahf
sbb
adc
call
push
call
subl
push
push
lret
inc
mov
mov
aad
inc
call
xchg
cmc
push
stos
movsb
mov
cmp
mov
aam
lret
jbe
jecxz
push
adc
xchg
sub
or
push
filds
lcall
ret
jb
movsl
jo
xorl
nop
test
adcb
adc
sub
sbb
xor
and
push
hlt
cmpsb
stos
es
pop
xor
and
sub
push
std
mov
leave
adc
push
add
fildll
push
push
add
orl
aad
lcall
and
add
and
push
ja
pushl
mov
and
iret
test
mov
es
les
fadds
repz
data16
xchg
lods
sbb
or
ljmp
cld
decl
aaa
jg
in
mov
cmpsb
cltd
cmp
es
push
xorl
pushf
xchg
xchg
inc
adcb
dec
sub
daa
aaa
leave
and
pop
fwait
push
movsb
and
xchg
pop
dec
jo
pop
shll
xchg
sbb
lock
test
incl
mov
adc
les
aaa
push
or
add
pop
pusha
pop
lods
mov
jnp
sbb
ja
sarb
mov
jns
ljmp
fdivl
in
aas
push
ljmp
mov
push
rolb
or
incl
sti
hlt
push
notrack
loopne
fnstsw
sbb
fiadds
dec
cld
andb
in
stos
pop
shll
cwtl
outsl
or
sahf
nop
inc
dec
sbb
xchg
dec
jae
in
xor
mov
mov
movsl
mov
ficomps
or
sub
inc
rcll
or
pushl
clc
sbb
or
push
nop
adc
mov
mov
or
inc
mov
lods
add
loop
adc
out
mov
call
fadds
enter
js
sbb
pusha
lods
scas
jp
inc
push
pop
sarb
jmp
outsl
mov
test
dec
test
cmpsl
repnz
adc
xor
inc
inc
movsb
and
xchg
add
add
cmpb
out
add
decl
xor
xor
iret
mov
leave
xor
jg
int
data16
cltd
sar
pop
jg
iret
pop
push
fwait
aas
cld
jmp
ljmp
movsb
out
lahf
std
lahf
rclb
out
std
add
push
jo
test
or
loopne
dec
mov
pop
jo
pop
or
jg
jo
jp
mov
add
cmp
add
or
fisttps
inc
and
cmpb
add
fists
inc
sbb
or
shlb
inc
jl
inc
addb
pop
test
fadd
in
orb
and
jl
rorb
loop
dec
adc
imul
shlb
sbb
mov
sub
jmp
lods
dec
jl
xchg
fs
test
push
cli
mov
pop
cmpsl
cmpsl
push
or
or
pop
gs
incl
push
jne
dec
sbb
sbb
mov
ja
mov
xchg
inc
pextrw
pop
adc
mov
js
xchg
ret
and
or
jnp
adc
and
add
or
daa
ret
or
rol
pop
in
adc
pushl
bound
xor
or
or
js
loop
subb
adc
lds
test
sub
mov
incl
mov
mov
push
add
inc
push
in
fs
jo
incl
cmpsl
js
out
or
sbb
sbb
insl
and
mov
add
in
pop
incl
and
xchg
orb
loop
lcall
loopne
cmp
ret
cli
into
outsl
xlat
lret
filds
fmul
call
js
xor
mov
or
addl
and
xor
ja
and
jg
fistpl
repnz
sub
sub
xor
and
xor
and
loopne
dec
shlb
inc
push
ljmp
and
shlb
mov
aaa
push
and
loopne
adc
pop
jp
fsub
arpl
ret
dec
outsb
ficoms
hlt
in
sbb
fs
mov
cld
movb
inc
mov
mov
sbbl
outsb
popa
xchg
test
jl
pop
xor
inc
lcall
push
pop
and
jmp
mov
lcall
jle
dec
mov
or
icebp
aaa
std
mov
dec
xchg
mov
stos
jne
add
cli
pop
call
in
fimull
and
jne
add
push
adc
sbb
jnp
pushl
ret
push
xchg
dec
sbb
divb
inc
sbb
push
fs
and
sbb
ljmp
dec
dec
or
gs
or
das
add
movsl
and
mov
dec
mov
and
push
inc
movhps
or
in
mov
loopne
hlt
xor
inc
sub
sub
shr
pushl
pop
shrb
mov
push
mov
movsb
sub
xchg
lods
sub
jno
mov
stos
sub
mov
je
ljmp
sub
repnz
or
add
mov
xor
inc
stos
sarb
mov
pop
push
push
inc
mov
and
repnz
inc
xchg
add
inc
dec
aam
push
push
inc
push
mov
push
jg
fildll
rol
addr16
arpl
inc
outsl
pop
mov
and
clc
xor
and
xor
and
mov
dec
hlt
inc
cmp
cltd
hlt
add
adc
add
icebp
ljmp
mov
cmpsb
outsl
and
incl
sub
or
out
imul
mov
inc
outsb
setp
sub
call
mov
addb
add
pusha
js
lcall
xchg
loopne
jle
dec
push
xchg
sub
ljmp
lret
dec
call
lahf
push
adc
inc
decl
mov
mov
dec
mov
in
inc
mov
icebp
jmp
ror
pop
ljmp
daa
outsb
xor
lods
adc
outsb
das
pop
clc
fwait
pop
adc
loop
mov
movsb
js
adc
push
hlt
outsl
cli
outsl
enter
ret
sub
pop
pusha
add
add
jg
jb
in
test
rcrl
pop
inc
or
add
sub
pop
sar
jmp
outsb
scas
pop
sbb
fcmovnb
cmpsl
xchg
cmpl
je
lock
push
je
pop
ret
mov
inc
notl
jg
ret
add
add
push
xchg
paddb
bound
add
loopne
decl
and
or
xor
shll
call
adc
or
jle
data16
cmp
mov
or
mov
fwait
aam
imul
adc
xchg
sub
mov
add
inc
dec
hlt
add
push
adc
mov
out
or
imul
xor
aaa
adc
ljmp
shlb
dec
mov
add
inc
fldl
insb
sahf
dec
add
mov
pop
cmp
dec
imul
mov
xchg
pusha
sub
pop
inc
fs
sub
add
call
dec
pushl
dec
push
push
ss
in
mov
sub
pop
mov
incl
out
xor
fs
call
mov
jbe
test
or
push
dec
call
push
call
cli
loopne
xor
mov
dec
mov
sbb
call
xor
cs
or
es
addr16
ds
fsubr
xor
add
inc
repz
scas
cli
sub
dec
movsl
out
push
jns
pop
movsb
dec
js
pop
add
outsl
pop
ljmp
icebp
movsl
mov
shll
xor
mov
or
and
xor
cmp
int3
sub
ljmp
mov
imulb
mov
or
or
pusha
sub
xor
mov
dec
cld
xor
push
dec
and
jae
push
dec
jns
push
mov
dec
jno
das
je
and
inc
push
and
inc
data16
arpl
lea
mov
inc
xor
stos
jmp
cli
ds
cmpsb
ss
gs
dec
mov
inc
xor
ret
cmp
call
inc
data16
push
mov
jge
ss
fmuls
push
or
xchg
nop
xchg
mov
imul
lahf
jbe
fsubrs
push
ljmp
fadds
and
addr16
push
sub
adc
cmc
adc
jmp
jl
sub
in
and
loop
pusha
mov
mov
ljmp
push
jo
ljmp
int3
pop
sbb
or
aam
pop
pusha
sub
push
in
sbb
out
pop
jae
bound
or
xor
mov
shl
dec
or
cmpsb
dec
or
cld
mov
movsb
or
inc
dec
jg
jo
dec
cli
mov
pop
push
xor
or
js
int3
movsl
data16
test
push
testl
sbbb
mov
xchg
inc
cld
and
hlt
test
lods
icebp
fwait
dec
loopne
out
and
hlt
or
lods
dec
bound
call
sub
inc
pop
into
add
jmp
sbb
lcall
jae
testb
push
push
in
cmp
outsl
ljmp
sbb
pop
lods
jno
jl
adc
inc
and
mov
mov
bound
jo
fidivs
loop
mov
fs
fwait
clc
inc
add
xor
out
gs
sbb
mov
sub
push
js
xchg
movsl
push
mov
add
cmpsb
xchg
movsl
addr16
cmpsb
pop
cmp
movsl
imul
xor
adc
incl
lcall
test
popa
inc
shrl
cltd
jp
mov
mov
inc
adc
xchg
call
imul
fildl
pop
hlt
cmp
pop
aas
or
call
push
loopne
in
shl
shll
pop
pop
jno
sar
push
mov
push
jecxz
dec
loopne
les
sbb
jp
push
repnz
aaa
inc
clc
pop
or
mov
pushf
movsb
dec
paddd
xchg
pop
mov
xchg
push
and
decl
mov
in
lea
in
cmp
mov
inc
push
mov
xchg
xor
xor
xchg
push
bound
movsb
mov
dec
jae
fs
pop
ljmp
xchg
jns
mov
or
orb
push
ljmp
cwtl
mov
call
pop
ret
mov
pusha
rclb
pushf
jae
pushl
cld
mov
cmpsb
and
add
shrb
lods
add
inc
sbb
pop
adc
sbb
and
jns
push
ljmp
js
mov
bound
push
call
sub
addl
mov
lea
cli
and
jb
jg
incl
mov
dec
sbb
mov
mov
cmp
cmp
push
idivb
mov
cld
test
pop
test
adc
test
mov
cmpsb
lcall
push
push
ss
popa
xchg
inc
addr16
mov
mov
incl
clc
fstpt
scas
imul
lods
outsl
mov
std
decl
test
xchg
fmull
dec
addr16
add
rcrb
dec
into
das
cli
mov
aaa
mov
imul
and
nop
pushf
mov
add
or
js
jb
fidivl
aad
push
loope
ja
aad
icebp
call
in
je
ret
sub
push
out
xchg
icebp
inc
sar
cmpsl
jg
push
das
insl
pop
push
xlat
cs
clc
xchg
cmc
dec
mov
jp
xlat
push
cwtl
jns
inc
ffreep
mov
mov
out
in
pinsrw
sub
inc
fcomip
pop
mov
lods
test
adc
mov
int3
jge
cmp
decl
and
pop
mov
xchg
aad
mov
loopne
in
sub
or
dec
rcrl
testl
and
mov
dec
push
insl
and
push
arpl
sti
in
or
incl
pop
lret
rorl
out
in
mov
xor
sbb
loope
test
add
filds
push
loopne
fstp
add
or
loopne
loopne
jle
sti
std
fistps
loope
pop
in
hlt
add
inc
inc
mov
or
jecxz
push
in
mov
pushl
jecxz
pusha
add
sub
pop
adc
pop
and
in
inc
add
lcall
insb
insl
sbb
mov
dec
adc
rcrl
push
xor
arpl
jle
inc
clc
incl
jne
lahf
cmp
mov
mov
lcall
fs
cli
scas
cmpsb
dec
push
out
loopne
int
add
mov
push
fcomip
fists
leave
add
push
inc
mov
fsubrp
adc
pushl
gs
lods
lods
and
pop
std
das
mov
dec
jb
push
movsl
dec
pop
stos
sarl
incl
aad
lds
sbb
xor
call
rorl
mov
cmpl
sub
aad
in
adc
mov
jmp
int
aas
pop
scas
add
aaa
mov
cmp
xor
xor
cmp
push
mov
test
mov
daa
fdiv
imul
jae
adc
adc
iret
mov
jg
andb
sti
dec
xor
popf
mov
fimuls
shlb
xlat
outsl
negb
imul
inc
cmp
add
add
std
fnstcw
aaa
incl
add
in
lahf
icebp
aas
aaa
adcb
mov
cli
std
pop
and
or
test
jge
movsb
and
popa
inc
or
and
mov
sub
test
push
inc
mov
jecxz
ss
inc
pop
inc
pop
cmp
test
push
xchg
dec
push
add
lcall
jns
xor
add
xchg
mov
rcrl
and
sbb
jp
sbb
lcall
push
jmp
nop
dec
lods
mov
xchg
mov
scas
add
jo
lret
fnstcw
adc
mov
jmp
fdivs
xchg
lret
xchg
mov
add
adc
inc
sbb
hlt
int3
sub
push
lret
push
popf
lods
xor
movsb
lcall
popf
lcall
jg
ljmp
mov
into
test
fisubrs
jbe
sarl
sbb
ljmp
inc
rcr
cs
pop
cmp
loop
fwait
arpl
or
bnd
mov
fnstsw
mov
mov
jl
cltd
push
cmp
mov
jge
xor
or
xor
mov
add
push
add
popa
loopne
icebp
xor
lahf
adc
hlt
xlat
aam
dec
mov
pop
inc
call
add
push
int3
inc
and
or
add
call
loop
jbe
lock
out
leave
negl
icebp
lds
or
mov
xchg
adc
fbld
lock
push
or
je
test
sbb
jmp
dec
push
nop
and
into
and
xchg
es
mov
inc
push
dec
and
xchg
nop
pop
pop
jns
nop
inc
jp
ljmp
xchg
lds
push
inc
and
int
inc
push
mov
add
inc
je
pushl
rcl
jl
mov
jle
sub
mov
aas
pop
and
mov
dec
or
jbe
pop
cmpb
aam
sbb
test
jg
mov
adc
popa
cmp
test
xchg
ljmp
sbb
bound
aas
ljmp
push
or
test
lcall
ljmp
push
pop
and
push
pop
loope
adc
call
rolb
pop
push
pop
dec
cld
and
sub
add
lea
xor
sbb
jmp
mov
lret
adc
inc
inc
adc
xor
lds
aam
sub
roll
scas
xchg
call
pop
data16
cmpsb
outsl
insb
cmpsl
outsb
dec
icebp
mov
push
or
out
sarl
in
dec
flds
mov
negb
pop
jae
jns
sbb
sbb
xor
jno
push
outsl
inc
sbb
stos
jns
dec
cwtl
and
call
pop
mov
sub
jae
pusha
hlt
sbb
cwtl
clc
incl
lds
cmp
in
lahf
or
inc
orb
add
ljmp
repz
push
call
sbb
les
or
xchg
cmp
icebp
aaa
xlat
popf
and
fidivl
ja
mov
fldpi
ljmp
data16
add
push
test
in
dec
jle
in
pop
outsb
mov
add
xchg
push
outsb
dec
cbtw
xchg
jg
in
jb
int3
out
insb
out
mov
enter
icebp
popl
call
mov
lcall
ljmp
std
imulb
repnz
notl
out
mov
jg
repnz
dec
repnz
inc
das
lock
push
cld
inc
cmc
push
lock
subb
ret
loopne
xchg
lahf
ds
pop
cmp
inc
jmp
xor
aad
arpl
adc
insb
jne
std
into
roll
cli
incl
and
xor
mov
ljmp
jp
add
in
loope
mov
sbb
addb
adc
adc
mov
push
sbb
arpl
and
lret
iret
hlt
test
add
cmp
xor
cmp
jle
popa
pusha
pop
inc
ret
popf
push
ljmp
xchg
mov
rorl
jno
jno
out
mov
and
cmp
fnstenv
adc
and
gs
arpl
mov
inc
and
mov
repnz
mov
shll
jecxz
inc
testb
push
aam
cmp
or
ljmp
adc
movl
adc
call
imul
pushf
lds
into
in
adc
fidivs
insl
xor
mov
repz
cmp
fwait
mov
loopne
xor
movsl
outsb
clc
push
addb
fmull
mov
into
jno
jl
lcall
shll
mov
mov
pusha
cwtl
call
aam
and
pusha
cmp
cmp
mov
mov
enter
jbe
int
icebp
outsb
js
in
es
mov
sub
xchg
lret
xor
mov
std
popf
lock
les
pop
shlb
and
sbb
ret
adc
push
jg
nop
mov
addr16
xor
mov
xchg
rclb
add
popa
pop
aam
push
adc
or
sub
pop
cld
rolb
push
add
mov
add
add
call
adc
sbbl
push
dec
shrb
push
daa
cmp
es
lcall
sub
aam
pop
mov
sub
hlt
das
mov
sbb
sub
sub
bound
sub
pushl
out
push
xchg
imul
pop
cmp
jbe
out
mov
aad
sbb
pop
add
xor
fidivrl
push
xor
int3
pop
inc
jbe
cmc
sbb
movl
inc
andl
cmpsb
dec
hlt
xor
dec
and
test
jno
or
lcall
xchg
or
pop
mov
jp
and
pop
lods
and
icebp
orl
push
dec
hlt
leave
and
xchg
xchg
pop
jp
fisttpll
lret
push
insb
ljmp
das
cmp
xchg
rolb
loope
popa
xor
adc
ud0
cmc
sbb
adcl
add
adcb
icebp
jmp
inc
push
jb
aad
repz
jne
in
push
mov
and
push
lcall
jne
fwait
in
sahf
adc
pusha
js
dec
fisttps
stos
xchg
js
pop
stos
fcmovb
in
and
test
add
fwait
pushf
aas
pop
sub
gs
decl
or
and
sbbb
pop
push
or
into
pop
icebp
jg
ret
push
dec
loopne
outsb
dec
pusha
add
lret
loop
add
mov
nop
rorb
xor
mov
cmp
decl
xchg
mov
jae
sub
push
or
clc
add
pop
add
fucomip
xchg
xor
xrelease
add
push
pop
imulb
js
aaa
incl
imul
xchg
popa
push
ja
fwait
movsb
cmp
jne
mov
jmp
aam
lret
out
test
fildl
xchg
daa
and
pushf
cmp
cmp
push
iret
adc
pushl
mov
jbe
dec
insb
inc
stos
popf
mov
adc
aas
inc
inc
pop
arpl
mov
push
imul
mov
inc
add
ljmp
adc
sub
decl
fidivrl
fnstsw
and
ret
stc
and
sbb
push
or
fsubr
xchg
push
mov
pop
adcb
ret
clc
shl
sbb
incl
sub
test
jne
pop
or
sub
cmp
and
fbstp
ret
adc
xor
add
mov
dec
test
incl
or
repnz
mov
adc
dec
in
sbb
out
dec
lock
jmp
jp
in
adc
vcvtdq2ps
insl
rol
xchg
and
test
mov
cmp
ljmp
lock
sbb
jecxz
and
xor
inc
xchg
in
xor
mov
js
sub
mov
mov
test
orl
sub
call
pop
movsl
adc
or
icebp
cmp
int3
pop
add
cmp
in
movsb
shrl
std
fadd
xor
call
inc
pop
or
das
pause
stos
ret
pushf
xlat
ds
jmp
xchg
in
in
pop
adc
push
shlb
rcrl
divb
dec
sbb
jge
push
or
inc
repnz
xchg
cltd
scas
insl
push
jmp
add
mov
lcall
bswap
pop
inc
ljmp
mov
rcr
insb
xchg
pushf
test
jmp
js
inc
xchg
ss
jnp
lods
dec
xlat
enter
out
cmc
insb
mov
push
mov
gs
sub
loopne
hlt
cmpl
or
inc
jb
sub
jno
ret
lock
mov
jne
add
sti
and
sub
jl
jg
and
add
mov
imulb
movsl
pop
int3
push
push
mov
orl
arpl
pushl
leave
add
and
push
push
xchg
andb
stc
mov
fidivs
add
and
and
js
xlat
popa
jae
gs
popa
sbb
mov
push
mov
inc
pop
mov
insl
adcb
push
inc
ja
pop
sub
dec
dec
je
pop
jo
cmp
std
jmp
sub
dec
clc
push
adc
icebp
incl
inc
cwtl
xchg
push
add
ds
adc
inc
add
testb
imul
jmp
jg
addr16
xor
lds
daa
push
jp
inc
push
add
test
push
cwtl
push
push
test
push
xor
das
imul
call
imul
adc
in
xor
and
mov
adc
xor
jp
ret
xor
pusha
xchg
mov
sbb
inc
pusha
xchg
push
addl
pop
popf
test
push
and
notl
and
dec
orl
mov
mov
mov
add
rclb
cmpsb
movsb
and
mov
and
jge
test
js
aaa
xchg
cld
test
pop
fiaddl
mov
or
adc
in
pushl
inc
or
mov
out
mov
inc
pusha
or
psubq
sub
jg
in
gs
bound
inc
or
jo
add
mov
and
push
jo
fcmovu
cmp
decl
lock
xor
adc
or
add
mov
xchg
xor
imul
aas
inc
sub
sbb
add
inc
fcomip
add
add
repnz
inc
call
push
xorl
jge
icebp
push
inc
aaa
and
push
inc
inc
pop
dec
and
nop
fs
cwtl
push
push
or
in
jg
or
add
push
jno
imul
cld
stos
and
push
pop
xlat
sbb
in
mov
cltd
push
jp
xor
push
mov
jg
pushl
hlt
push
cmp
xchg
inc
jp
push
jne
push
pop
mov
inc
push
dec
push
push
incl
js
jmp
push
dec
fs
cwtl
int
push
pop
data16
aam
test
push
xor
xchg
inc
call
dec
xchg
sbb
dec
cmpsb
mov
xorb
mov
inc
pop
cli
jmp
jnp
mov
popa
xor
mov
xor
sbb
pop
icebp
ja
mov
gs
mov
jp
and
dec
rcll
add
pop
decl
cli
es
lea
or
push
inc
lea
popa
adc
call
movsl
inc
lea
and
ret
and
mov
out
aaa
xor
pop
clc
mov
push
and
mov
or
inc
xchg
push
cld
mov
lods
jo
je
sub
sbb
or
in
test
push
mov
mov
xlat
movsb
pop
repz
pop
mov
xchg
addps
aaa
pusha
call
clc
andl
ljmp
inc
cmpsb
repnz
loopne
daa
ljmp
popa
sub
fldenv
rclb
push
cmpsb
push
andl
add
jmp
sti
mov
inc
jmp
imul
fst
call
push
aas
jnp
sub
push
stc
push
arpl
add
push
dec
sbb
add
push
jg
add
dec
loopne
jne
sbb
data16
xor
inc
xchg
iret
inc
jbe
cmpsl
push
mov
adc
xchg
jb
add
mov
jg
scas
xor
or
push
cmpb
movb
and
inc
inc
mov
lret
pop
mov
cwtl
mov
mov
addl
out
xchg
mov
ret
sbb
lcall
inc
lcall
arpl
clc
mov
push
or
push
and
xchg
out
cmpsb
popa
cld
lcall
lcall
mov
xchg
push
pop
push
bound
xchg
jg
dec
push
insl
inc
push
popf
xlat
ljmp
aaa
mov
jg
test
and
gs
cli
cmp
inc
xor
pop
or
repz
jg
jg
adc
jmp
or
nop
cmp
xchg
ljmp
or
or
aad
or
jmp
adc
int3
adc
xchg
xor
sbb
pop
adc
sbb
xor
divb
adc
inc
pushl
hlt
mov
inc
popa
sub
popa
sub
popa
es
xchg
out
jp
mov
jg
fsubl
xchg
jo
sbb
lock
cs
add
notl
dec
mov
cwtl
push
and
imul
ljmp
add
push
push
insb
mov
push
inc
dec
movsl
add
fucomip
clc
jo
gs
push
inc
add
inc
stc
mov
jg
xor
bound
call
pop
ja
xor
jbe
ljmp
jbe
sbb
fs
pop
std
lret
cwtl
imul
js
xor
decl
adc
out
sbb
mov
in
mov
mov
xor
xchg
pushf
xchg
push
pushf
scas
jno
insl
adc
stos
mov
lock
xchg
xor
inc
dec
mov
sbb
pop
cli
mov
push
pushf
nop
es
jb
test
fsubrs
adc
subb
bound
fmull
roll
popf
fucomip
pop
xlat
cmp
test
out
mov
lods
xchg
mov
xor
iret
mov
iret
cmc
pop
push
aam
jo
loope
sub
addb
pop
xchg
clc
jg
pop
orb
cmp
leave
pop
divl
push
add
lcall
jns
adc
pusha
mov
orl
pop
mov
pop
add
jp
pop
pusha
addb
xchg
sub
fidivs
fcompl
lcall
jne
push
push
push
cmp
cltd
and
push
data16
pop
hlt
jmp
push
roll
sub
mov
or
push
push
mov
cs
mov
pop
sarb
xorb
adc
mov
push
sub
pop
pop
stc
add
shlb
mov
ja
cli
aaa
jge
hlt
in
mov
add
inc
inc
jmp
rorl
cwtl
xor
test
jg
xchg
pop
lret
insl
adc
test
jp
test
mov
call
mov
cmp
js
jb
mov
or
fcmovnbe
pushl
gs
sub
xchg
xor
and
mov
jp
out
pushf
je
mov
xor
mov
xor
push
mov
test
clc
decl
jae
lahf
xor
or
lea
ljmp
and
dec
gs
push
pusha
andb
daa
add
mov
cld
ljmp
jle
subl
sub
jmp
movsb
cmp
incl
loope
dec
sub
add
decb
jg
adc
mov
pop
fimull
push
cmp
out
cli
test
test
cmp
pop
mov
push
xor
dec
sbb
xchg
out
cli
decl
mov
dec
popa
dec
nop
inc
jns
popa
testb
out
push
xor
cmpsb
scas
cmp
xor
shl
lock
mov
xor
aas
sub
int3
mov
stc
mov
cmp
les
mov
daa
rolb
push
je
test
push
pop
cmp
adc
add
movl
shlb
adc
inc
cli
inc
mov
add
mov
mov
xor
and
xchg
push
rcrl
mov
jbe
xchg
mov
fcompl
mov
pushl
fiaddl
cmp
out
sbb
sbb
test
jecxz
aaa
sbb
sbb
les
mov
sub
cmp
movsl
push
add
xor
lcall
decl
lcall
cwtl
inc
pop
sub
fmuls
push
jmp
dec
nop
pop
aad
mov
cmpb
push
cmp
and
fcomp
stc
mov
fsubs
pushf
dec
into
mov
into
sbb
cli
pushl
mov
enter
hlt
add
lock
addb
nop
add
gs
lods
call
int
in
outsl
or
adc
outsb
lret
mov
inc
lea
fst
fstl
pop
ljmp
loop
fnstcw
mov
ret
movsb
pop
xor
fsubp
cmp
imul
iret
idiv
fisubs
ljmp
cmp
or
xchg
adc
leave
inc
xor
inc
imul
pop
push
cld
or
push
enter
xchg
xlat
pop
mov
rcll
pop
ds
adc
clc
jg
movsl
sub
mov
jg
add
outsb
sub
push
shl
push
dec
cs
xor
add
in
addl
ja
mov
pop
out
cmp
jl
aam
je
shll
sub
insl
xchg
xor
xchg
inc
push
mov
cwtl
xchg
lcall
pop
jge
popl
xchg
jno
lods
ja
inc
push
test
xor
and
aaa
cld
jmp
mov
pop
mov
incl
decl
inc
stos
sub
icebp
in
inc
dec
popa
pop
movsl
test
mov
mov
popf
test
mov
imul
inc
add
cmp
cld
ljmp
mov
mov
lret
mov
aaa
jmp
fstpt
movsb
int
ficomps
imul
scas
fcmovne
outsl
jmp
and
xchg
xchg
and
aam
xchg
sbb
dec
and
std
mov
xchg
lock
jecxz
xlat
dec
adc
int
lds
pop
rcr
lcall
clc
adc
mov
adc
or
jmp
rcrb
add
jne
ljmp
fsubrp
insl
fsubp
lods
fisubs
sarl
insl
mov
ret
leave
add
add
cmp
call
test
cmp
xchg
and
or
adcb
adc
fcomip
incl
add
pop
adc
adc
add
jb
sbb
les
call
mov
inc
pop
cs
cmovae
in
mov
adc
js
push
std
ja
incl
push
lcall
push
int3
mov
push
sbb
loopne
cwtl
jmp
decw
pusha
xchg
add
subl
clc
xor
incl
jl
ja
mov
gs
loope
xchg
out
and
cltd
xor
mov
inc
cmpl
xchg
push
leave
hlt
icebp
out
fnstsw
negl
push
mov
dec
sub
push
or
out
fcmovbe
push
stos
or
or
mov
cmpsb
and
dec
jle
fcmovu
insl
xor
xlat
or
fdivrs
popf
rorl
es
and
into
movsl
test
mov
cmp
ja
fwait
or
ret
inc
cmpsl
mov
inc
ret
lock
pushl
je
pop
std
jg
xchg
add
iret
stc
or
stc
aas
mov
and
or
lahf
pop
cli
fbld
test
cli
aas
mov
repnz
mov
incl
aas
pusha
sti
lcall
sar
sti
xchg
add
loope
mov
cld
ret
jg
mov
mov
into
scas
add
cld
sbb
sub
mov
js
idiv
in
mov
rclb
loopne
pop
es
jecxz
repz
pushf
xchg
movsl
popa
push
inc
mov
jg
add
jb
cmp
hlt
push
aas
sub
adc
xorl
adc
add
cmp
inc
or
in
mov
jnp
dec
movsb
sub
incl
pop
sub
xor
mov
outsl
xor
dec
dec
push
mov
sbb
xchg
test
mov
xchg
dec
cli
dec
fldenv
mov
incl
lret
dec
mov
sbb
lock
repz
shrb
ljmp
mov
cltd
adc
scas
sub
flds
pop
mov
dec
push
in
dec
mov
mov
pop
gs
push
xchg
das
aad
dec
pushl
outsl
xorb
add
imul
sbb
lret
sarb
int3
popf
sub
fisttps
xor
mov
rcll
in
sbb
lea
lcall
aaa
imul
xor
fdiv
in
gs
pop
cs
repz
lock
mov
aaa
xchg
loope
repnz
repnz
cmp
add
xchg
arpl
das
and
repz
call
cmp
xor
adc
jle
ds
jmp
adc
push
ljmp
incl
dec
sarb
sar
sti
iret
cmp
jmp
mov
mov
andl
sbb
orl
clc
nop
fwait
popa
dec
sbb
les
and
xchg
inc
adc
add
adc
add
adc
aas
push
arpl
ds
mov
das
mov
ds
sub
cmp
sub
nop
mov
lods
pop
jg
and
push
repz
xor
xor
mov
test
sbb
adc
shlb
xor
xchg
push
mov
stos
mov
push
pop
daa
test
inc
mov
insb
std
ljmp
cmp
cwtl
pop
pop
popa
loope
xor
fdivs
std
inc
lret
js
insl
xor
dec
mov
inc
sbb
or
call
xor
xor
dec
mov
lcall
and
jg
cmp
mov
xor
dec
sub
xor
orb
ljmp
sub
sub
mov
stos
das
lcall
xchg
cmc
mov
call
stos
cmp
movsl
mov
cmp
in
into
jo
ret
shrb
jmp
ljmp
imul
test
out
xor
sbb
mov
mov
cmp
out
mov
inc
add
aad
inc
xor
add
lcall
add
repz
lods
mov
mov
or
sbb
cwtl
cmp
hlt
mov
add
stos
dec
call
mov
out
sub
mov
pop
sbb
add
test
mov
fisttps
adc
and
or
nop
test
ret
dec
sub
xchg
lret
incl
and
pop
sbb
sti
fldl
xorb
jnp
adc
fdivrp
out
popa
adc
jg
jo
mov
jl
mov
adc
xchg
sbb
andb
cld
dec
dec
sbb
ljmp
mov
pop
jnp
sbb
xor
insb
push
jne
fs
pusha
addr16
lcall
and
sbb
or
jb,pn
jb
cmpsb
mov
loop
stos
or
out
dec
js
xchg
dec
adc
inc
lods
jecxz
mov
inc
mov
daa
adc
loopne
lcall
push
push
dec
pop
jge
cmp
pop
pop
xchg
daa
push
sbb
push
dec
loopne
or
addr16
sub
lods
mov
in
adcb
fwait
add
cmpsb
daa
lret
enter
fadd
ja
hlt
pop
ljmp
and
mov
decl
and
bnd
pop
fucom
test
bound
js
cs
mov
lock
and
incl
dec
cld
cmc
inc
mov
mov
ja
or
xor
xor
mov
jbe
and
push
dec
sub
incl
xor
shlb
arpl
mov
lret
jmp
lret
add
in
ds
add
xchg
mov
inc
jecxz
aam
arpl
mov
aas
adc
push
and
xor
cld
ja
rcrb
or
adc
mov
sub
mov
cmp
jecxz
ss
pushl
pop
xchg
call
lea
fwait
loop
cltd
bound
dec
ret
sub
mov
ficoms
xchg
mov
sub
cmp
cmp
xchg
inc
xor
mov
inc
decl
aam
xorb
inc
aam
mov
data16
jbe
mov
push
decb
cs
mov
or
jb
push
aas
push
pop
mov
inc
cmc
rclb
inc
push
lcall
clc
jns
sbb
lahf
add
cmpsb
and
add
and
cmp
ficoml
xchg
push
test
jp
aaa
push
xchg
and
scas
mov
repnz
dec
mov
cmp
mov
sbb
aas
xchg
cmpb
mov
out
je
add
dec
cmc
ljmp
pop
out
pop
fimuls
add
adc
xor
adc
out
cli
fists
pop
ljmp
sub
pop
mov
inc
cmp
out
clc
shlb
push
lret
xchg
inc
lods
rorl
int3
bound
jmp
pop
inc
xor
out
int3
out
mov
es
mov
push
ljmp
add
mov
add
andl
cmpb
sbb
lock
pop
and
sbb
loopne
out
test
jmp
sar
xor
mov
movl
inc
stc
sbb
mov
mov
pop
cs
outsb
insl
fadd
es
cmp
add
mov
sub
addl
lods
gs
ds
xchg
rcrl
adc
data16
int
cs
xor
lcall
fsubl
in
fsubs
stos
pop
push
shrd
jl
and
rcll
jp
sbb
cmp
and
add
test
xchg
mov
add
lret
loop
cmpsl
dec
rorb
mov
and
imul
sub
sbb
ljmp
rclb
scas
pop
movsl
ss
lret
and
ret
in
daa
imull
xlat
dec
mov
cwtl
adc
int3
push
pusha
bound
incl
mov
rclb
xor
out
loop
push
mov
xchg
push
or
jb
mov
call
pop
ret
std
xorb
lods
xor
lcall
mov
xor
mov
mov
fsts
xchg
gs
mov
push
cmp
sbb
daa
fs
decl
mov
rorl
and
jae
imul
sub
ljmp
cmc
ljmp
push
pop
push
inc
test
roll
cmp
popa
shrb
sbb
mov
ds
movsl
push
dec
mov
insl
inc
fstpt
negl
lea
jmp
pushl
mov
mov
xor
hlt
pcmpgtb
mov
add
cmp
adc
popa
insl
imul
xchg
push
mov
adcb
clc
jg
mov
mov
pop
nop
dec
ja
push
sbb
dec
out
xor
hlt
add
icebp
add
push
mov
aam
lods
xchg
dec
jno
sbb
jo
cmpl
out
and
loopne
addr16
push
add
test
arpl
add
call
push
inc
je
push
jns
sbb
lock
test
add
jo
imul
dec
dec
lds
shrl
dec
lods
mov
mov
outsl
daa
xor
pop
shrb
sub
adc
nop
push
push
ss
sti
xchg
sbb
jg
or
mov
jmp
cmpsl
pop
pop
js
pop
ljmp
fs
mov
lret
in
jg
cmc
xchg
push
and
cmp
jmp
xor
out
insb
xchg
js
xor
imul
out
sbb
leave
pop
adc
cmc
mov
or
jb
xor
decl
pop
cs
ds
mov
push
inc
xor
pop
popl
jle
lea
shr
ljmp
sbb
imul
fdivl
push
outsb
ja
fwait
sub
jg
inc
cld
cmpsb
ss
mov
xor
insb
loop
outsb
decl
dec
jbe
lods
jg
ljmp
idivl
rcrb
das
ja
int
pcmpeqw
test
incl
jmp
idivl
mov
pop
xrelease
fistl
pop
jns
out
xor
cmpsb
mov
add
or
mov
jmp
addr16
cmp
cmp
sbb
dec
sbb
sbb
xor
xor
push
xor
clc
mov
not
add
push
adc
add
sbb
cmp
pop
orl
adc
movsb
jmp
dec
cld
lcall
cltd
pushf
add
sub
cld
or
push
cmp
mov
mov
xor
lcall
sub
loopne
xor
movsl
decl
adc
sub
adc
ret
cmp
call
stc
pop
mov
mov
fsubl
dec
mov
mov
fldenv
jle
xor
push
decl
cwtl
push
adc
inc
fnstenv
scas
call
cmp
mov
ljmp
adc
lahf
mov
aam
lods
call
dec
inc
nop
push
adc
mov
sbb
mov
pop
nop
cmc
push
pushl
incl
mov
push
or
sbb
mov
jl
incl
mov
ret
ds
addr16
addr16
insb
lret
ss
addl
push
loop
hlt
inc
mov
cwtl
popf
hlt
dec
scas
stc
imul
adc
outsl
cli
orb
aas
xor
mov
jg
shll
add
sbb
mov
sahf
or
pusha
cmp
aad
mov
rcll
or
inc
xchg
add
cltd
xchg
call
push
mov
call
fadds
popa
inc
bound
mov
or
and
jmp
ds
add
pop
pop
cmp
xor
mov
inc
mov
pusha
fstps
jb
sbb
daa
mov
fwait
mov
or
pushl
mov
mov
stos
stos
sub
pusha
call
ljmp
lods
sub
ret
cwtl
sub
subl
mov
inc
stos
or
cmp
outsl
lcall
lcall
enter
sbb
pusha
mov
inc
sbbb
adc
jp
sti
stos
sahf
push
jmp
adc
and
nop
fisubrs
loop
mov
sub
jno
dec
mov
sti
mov
add
lds
sbb
loopne
pop
aam
pushl
and
pop
mov
cmp
push
lret
pop
sbb
andb
in
or
sbb
or
push
into
imul
mov
inc
jg
xchg
es
push
cwtl
aas
sub
mov
hlt
loope
ja
push
adc
adc
push
jb
xor
jg
test
imulb
mov
or
xchg
decl
js
adc
dec
jns
xchg
mov
add
lea
xchg
dec
xor
pop
pusha
adcl
inc
pop
and
sti
das
clc
dec
mov
mov
or
leave
test
push
gs
xor
pop
pop
dec
loope
dec
unpckhps
sub
and
std
rorl
jge
inc
ret
mov
jle
lret
mov
lret
ret
mov
ljmp
fs
mov
cmp
and
xor
enter
stos
inc
std
incl
adc
stos
mov
sub
stos
decl
and
and
xchg
enter
sub
xchg
xor
nop
cmp
les
lcall
enter
adc
and
mov
or
inc
pop
lods
inc
and
mov
and
ljmp
lods
and
lcall
cmp
inc
pop
shll
xchg
and
ljmp
sbbl
int
push
aad
es
je
pusha
std
sub
mov
in
jmp
mov
mov
push
mov
jp
push
aas
fsubs
cli
mov
jl
sbb
and
sbb
hlt
add
aaa
fldl
cmp
push
xchg
fmul
incl
dec
or
test
jg
daa
or
clc
pop
loopne
xor
dec
or
test
inc
je
std
adcl
gs
pushl
rcrb
xor
push
popf
dec
mov
movsb
jmp
arpl
inc
cld
sbb
pushl
jb
mov
jecxz
add
sub
lods
mov
stos
scas
cli
ljmp
jmp
lret
shll
and
xor
and
inc
cld
lea
sub
loop
cltd
insl
xor
sub
mov
adc
cmc
push
xchg
mov
cmpb
subb
incl
mov
sub
cwtl
adc
test
ds
mov
movsb
inc
mov
enter
aas
mov
cmpsl
pop
lcall
jmp
pop
pop
pop
std
lcall
sarl
fadd
mov
push
sub
push
adc
lret
dec
mov
lods
push
popa
adcb
loopne
ss
mov
mov
hlt
ds
inc
imul
push
outsl
fs
cmc
sbb
ss
cli
outsl
and
fildl
fstpl
incl
incl
pusha
inc
inc
mov
xchg
inc
fsubrs
bound
inc
dec
add
mov
dec
inc
rcl
sti
in
fdivr
decl
andl
mov
inc
add
cltd
mov
or
outsl
mov
push
cmp
jg
push
lcall
mov
test
jne
mov
ljmp
cmpl
fisttpll
stc
pop
stos
xor
iret
xchg
fadds
mov
ljmp
jp
or
ror
stos
or
nop
inc
lods
pop
jno
scas
test
mov
sti
or
in
cmp
pop
push
iret
rcrb
sub
repnz
mov
sub
pop
xor
mov
shl
and
fisubrl
les
cwtl
and
incl
and
adc
or
testb
dec
and
xor
or
stos
mov
adc
cli
add
stc
clc
pushl
mov
fucomi
fwait
sub
fwait
mov
push
dec
aad
push
mov
gs
sub
pop
mov
xor
and
cmp
fnsave
js
enter
lcall
cmpsb
pop
xchg
aas
jl
arpl
test
mov
push
call
xchg
icebp
fists
cmp
shlb
sahf
or
pop
cmc
lds
out
and
adc
fidivrl
fldenv
ret
pusha
clc
stc
cmp
pushl
add
sbb
adc
cltd
push
xchg
popa
or
xchg
add
pop
xchg
add
scas
xchg
movsl
xchg
je
jmp
sbb
adc
mov
xchg
adc
push
repz
xchg
push
dec
pop
adc
push
cld
add
ljmp
mov
dec
jae
pop
movsb
lcall
push
sub
fdiv
pop
mov
cld
pop
cmpsb
jns
sub
cwtl
and
mov
sbb
sbb
popf
sbb
mov
int3
push
mov
and
ljmp
ljmp
push
nop
mov
testb
add
movsl
cmp
sub
jmp
cltd
nop
cmp
add
rcrl
decl
nop
fmuls
popf
mov
icebp
adc
lock
dec
repnz
lret
xor
mov
dec
dec
cmc
mov
xor
sub
jmp
bound
imul
loop
mov
sub
aad
inc
pop
aad
xor
adc
decl
imul
inc
xchg
sbb
scas
stos
rcrl
dec
gs
stos
and
fcomip
jmp
pop
cwtl
ljmp
mov
inc
mov
push
adc
add
mov
or
addb
cs
xchg
loop
test
js
mov
push
gs
call
xlat
mov
mov
inc
pop
repnz
or
mov
adcb
mov
jmp
les
es
pop
cmpsb
data16
mov
ret
mov
xchg
sub
and
cli
fisubrs
mov
frstor
push
jb
push
push
mov
pop
inc
ret
insb
icebp
mov
cmp
mov
imul
push
cmp
xor
or
pop
in
aas
cwtl
hlt
sub
lds
push
xor
insb
and
rorb
jmp
rolb
jl
sub
call
fcomi
repz
nopl
ljmp
pop
jecxz
repnz
pop
cmp
int
outsl
loop
dec
call
sbb
inc
ljmp
sub
mov
add
ds
shll
cltd
faddp
in
pop
lds
call
jl
mov
sub
jecxz
mov
into
pop
fwait
mov
xchg
cwtl
scas
pop
xchg
pop
pop
cmp
sbb
mov
jo
fstl
clc
sbbl
cmpsb
xor
adc
mov
xlat
jp
jmp
jge
and
adc
jp
dec
icebp
cld
xor
jecxz
leave
pushl
push
mov
aad
movsb
cwtl
dec
bound
arpl
popf
fmuls
push
pushf
mov
jns
push
mov
xchg
cwtl
clc
and
test
pop
jns
xor
jo
gs
xor
mov
fdivrp
pop
mov
push
push
add
rcl
push
cli
call
or
and
sub
or
or
mov
inc
push
call
iret
and
lods
mov
mov
and
mov
mov
jl
mov
cltd
repnz
cmpl
cmp
rcll
nop
inc
xchg
call
mov
jmp
pop
sub
xchg
mov
rcrb
jne,pt
mov
enter
mov
sbb
lcall
arpl
and
jno
mov
sub
loop
push
std
out
out
out
xor
jo
mov
push
loop
mov
xchg
dec
clc
repnz
imul
arpl
in
aad
sbb
pushl
push
rolb
dec
xchg
push
adc
or
cmpsl
push
xchg
pop
test
js
movsb
inc
cmpsl
push
cld
pushl
or
arpl
add
js
cltd
clc
mov
pop
pop
xchg
cld
pushl
cmpsb
sub
mov
jno
rclb
rcrb
hlt
mov
lds
jecxz
add
jg
sub
and
rorb
dec
pop
and
or
cld
mov
cwtl
push
jg
or
sbbb
pop
subl
pop
cld
sbb
lahf
lret
cli
push
gs
stos
mov
cmp
cmp
push
dec
cs
mov
add
or
xchg
xchg
jle
or
aaa
lret
sbbl
cmp
push
imul
mov
mov
cmp
lcall
stos
jmp
sarb
push
add
outsb
cmp
outsb
ljmp
pop
jp
out
mov
testb
scas
icebp
fists
fcmovne
adc
mov
rorb
xlat
pop
mov
mov
add
push
ljmp
out
shrb
cmp
andl
sbb
aaa
out
lret
jecxz
cmpsl
sbb
adc
cwtl
add
inc
cmp
into
fnstenv
jnp
xchg
loop
add
push
orb
lds
out
sar
mov
test
and
lods
dec
xorb
adc
xchg
aaa
jo
aas
add
ljmp
xchg
inc
push
inc
xor
xor
mov
ds
mov
or
mov
xor
jg
cmp
int
nop
sbb
mov
lret
xchg
xor
mov
aam
lods
clc
stos
sub
xor
sbb
pop
dec
jno
pop
popf
sub
stos
and
xor
and
addr16
cmpsb
dec
cmp
mov
jmp
popf
das
pop
stos
xchg
pop
mov
pop
pushf
popa
mov
cmc
mov
mov
cmp
insb
lret
add
cli
mov
xchg
sarl
pusha
mov
in
or
out
iret
mov
mov
fldt
xor
push
iret
cmpsb
mov
adc
pop
fs
insb
xchg
dec
xchg
xor
rcl
add
jns
and
fwait
mov
loope
inc
int
sbb
pushf
sbb
gs
jg
sti
push
lods
mov
adc
test
popa
add
jbe
dec
lahf
test
cmp
test
call
lock
call
inc
adcb
push
inc
mov
adc
xchg
mov
or
stos
fldcw
andl
div
fistps
jle
fcoms
lahf
jg
add
ja
lcall
jge
sbb
in
shl
jo
popa
fistpl
add
mov
aaa
cmp
jmp
sbb
test
insl
mov
popa
mov
push
test
mov
lock
add
rcrb
xor
fisttps
fdivrs
pop
cmp
inc
call
cli
xchg
cmp
jmp
rolb
push
push
xchg
jo
mov
incl
cmp
sbb
test
fadd
xchg
pmaxsw
jbe
jno
or
dec
pop
and
test
cmp
adc
dec
jnp
cmc
les
jne
inc
test
jns
movsl
ljmp
gs
sqrtps
and
scas
jg
mov
adc
je
sbb
add
cmpsb
adc
push
sahf
lahf
sub
ljmp
mov
lods
mov
test
cmp
dec
stos
sub
lcall
jecxz
push
cmp
inc
incl
lcall
dec
pop
leave
les
xchg
cmp
pushl
push
adc
pop
int3
add
enter
pop
fcoml
in
lock
xchg
cltd
bound
cmc
movsb
das
sar
into
scas
loop
cmpsb
or
inc
lods
inc
adc
lds
push
cmp
mov
inc
add
or
push
pop
xchg
andl
fwait
push
ljmp
test
cmpsl
test
iret
enter
pop
test
fsubl
pop
outsb
shrb
sbb
jae
insb
mov
jns
dec
push
sahf
adc
lds
and
lcall
jl
add
pop
pop
ljmp
pusha
pop
jns
jg
lcall
rcl
mov
fdivr
mov
aaa
cld
sbb
enter
pop
ret
neg
sub
popa
fsubrl
or
call
loopne
mov
mov
loope
adc
mov
sbb
ds
imul
bound
cmp
lret
ja
xchg
cmp
test
cli
xchg
pop
stos
jg
lock
es
addr16
xor
sar
lcall
mov
jp
cmc
inc
scas
sub
jmp
pushl
dec
or
add
movsb
fcomps
sbb
insl
adc
jno
incl
call
ss
sub
mov
in
arpl
xchg
ret
mov
decl
sub
push
pop
scas
pop
xchg
aam
jns
fcoms
idivb
add
ret
bound
cwtl
xchg
pushl
ljmp
mov
mov
mov
xchg
push
adc
mov
cwtl
pop
sub
sub
xchg
addl
cmp
js
inc
popa
dec
loopne
push
popf
mov
and
add
dec
adc
ret
xor
adc
pushl
sbb
xor
pushf
or
inc
ret
call
push
nop
sahf
addl
dec
inc
sbb
pop
or
adc
jg
pop
movb
jp
rorl
dec
and
adc
mov
add
incl
xor
jl
xchg
or
pop
aas
jl
fists
les
mov
mov
gs
aaa
and
or
jns
insl
insb
jecxz
mov
mov
jg
gs
test
fildl
xchg
adc
incl
jno
fisttpl
xchg
sub
ljmp
jmp
add
adc
addb
incl
in
mov
lcall
or
sti
aam
adc
xchg
xchg
jo
dec
adc
aam
cli
mov
mov
adc
aam
iret
pop
and
lahf
cmpsb
mov
adc
and
sub
and
cmpsb
cmp
push
shl
sbb
dec
call
jb
dec
xor
es
cmp
jns
mov
cmc
stos
cmp
sbb
push
lock
pushl
sub
popf
enter
scas
adc
ror
and
mov
ja
nop
lret
mov
xchg
adc
ljmp
fdivs
xchg
and
ss
gs
sub
jo
mov
test
push
mov
pop
adc
mov
and
push
mov
adc
cmp
scas
incl
pusha
xor
and
test
xchg
fs
call
out
rcrl
xor
adc
and
dec
mov
subb
xchg
push
and
or
dec
movsb
sub
sbb
xchg
adc
incl
or
mov
sub
shll
shrb
dec
fdivr
push
adc
es
xchg
jmp
mov
adc
bound
pop
mov
push
in
lea
pop
adc
mov
iret
ljmp
xchg
mov
mov
mov
mov
or
push
push
or
mov
add
incl
and
or
pusha
jb
in
aad
mov
bnd
fildll
sbb
mov
lds
insb
jnp
inc
pop
mov
decl
jo
sub
dec
cmc
pop
push
and
or
xchg
movsb
mov
xor
icebp
xchg
icebp
nop
mov
mov
inc
jmp
mov
cld
xchg
cmp
dec
lcall
add
adc
movsl
pushf
daa
inc
inc
push
lahf
icebp
adc
ret
mov
fidivl
ret
jo
and
mov
add
mov
shrb
call
nop
addl
sbb
push
divb
imul
adc
xchg
call
mov
in
movl
push
inc
cwtl
mov
lahf
in
cmp
rcrb
and
imul
jbe
call
sbb
mov
mov
jmp
push
cmpb
xor
pushf
inc
mov
iret
sub
popa
test
jg
or
roll
sub
mov
cmp
dec
clc
push
imul
ret
les
cltd
insb
pop
mov
in
decl
arpl
mov
xchg
test
cmp
jmp
xchg
and
sti
test
mov
push
jne
addr16
bound
jne
sti
inc
xor
stos
fwait
mov
and
fdivrl
mov
jnp
cmpsl
movsb
and
add
xor
iret
notl
stos
dec
repnz
decl
gs
das
sarl
dec
inc
lret
xchg
aad
stos
imul
int
adc
clc
xor
adc
fcomip
loope
mov
xor
cmp
sbb
xlat
xchg
xor
pop
pop
xchg
cli
aas
lahf
rcrb
cs
arpl
jo
rorl
insb
popf
adc
pop
pushf
mov
insl
pusha
xor
pop
add
inc
xchg
xchg
into
jne
out
sbb
inc
jne
add
sarb
add
mov
push
mov
sub
ljmp
test
xor
lahf
cmp
or
fwait
sahf
sbb
loope
pop
call
cmc
call
ret
mov
add
sub
pop
mov
aam
or
or
aam
pop
sub
mov
push
or
hlt
js
decl
ja
stos
and
or
lock
jg
push
pusha
or
nop
adc
scas
and
movsb
lods
adc
loopne
loopne
push
out
clc
jecxz
aam
mov
xor
ret
rcr
nop
pop
mov
inc
imul
jb
inc
mov
imul
fldt
cltd
and
repnz
inc
jp
xchg
jle
stc
decl
hlt
das
cmp
fnstsw
movsl
push
test
lcall
pop
shlb
push
jbe
pop
add
add
rorl
js
ljmp
cld
or
add
or
xchg
jnp
shll
mov
and
fcoml
cmc
or
call
or
movsl
test
xchg
pusha
int
aam
andb
pop
and
bound
loope
inc
loopne
lods
sub
lcall
int3
gs
xchg
imul
sbb
jns
mov
or
sub
loop
sar
orl
dec
leave
or
inc
dec
insb
ret
push
xor
pushl
rcl
or
mov
icebp
mov
lret
push
fstpl
call
aam
roll
lds
rorb
sbb
push
push
nop
xor
sbb
add
negb
pusha
jmp
loopne
sbb
mov
insl
mov
push
mov
mov
cli
push
adcl
pop
mov
movsl
push
fmulp
cwtl
ficompl
leave
addb
inc
push
rorl
insb
rclb
scas
pusha
les
les
and
leave
sub
int
pop
test
adcl
add
icebp
out
test
jns
sub
mov
or
mov
inc
adc
jg
incl
push
into
addl
stos
jle
int
jo
xor
mov
pop
dec
push
dec
int
or
pushf
pop
mov
movsl
fisttps
movsb
inc
push
and
push
in
push
inc
inc
push
addb
inc
pop
cmp
out
and
pop
xorb
inc
bound
jmp
fcoms
push
xor
sbbb
mov
or
dec
jp
pop
cwtl
jo
or
inc
sti
dec
rcrl
mov
lret
pushl
aad
rorl
and
dec
sub
hlt
fs
les
lds
lea
adc
jmp
sbb
fwait
cmp
pop
cmp
mov
mov
mov
int3
and
mov
mov
imul
inc
push
inc
loope
pop
aam
sub
cmpxchg
fisttps
and
sbb
rorl
adc
aam
mov
jmp
add
cwtl
pop
call
rcrl
and
sub
jmp
dec
push
aad
push
mov
inc
dec
popf
push
mov
dec
loope
decl
push
dec
sbb
xor
inc
cltd
lods
xchg
cmp
cmpsb
hlt
mov
fiaddl
or
addl
mov
mov
ret
imul
add
xchg
sbb
jecxz
dec
ljmp
sahf
inc
sbb
mov
sub
mov
ret
jae
mov
xorb
mov
pop
incl
test
scas
clc
aam
rclb
sub
inc
jle
int
pushf
and
test
jnp
xlat
call
jl
sarb
lcall
add
xorl
incl
and
insb
add
fsubl
cmp
aaa
add
ds
and
mov
jno
in
decl
xlat
aas
sbb
fs
inc
ss
dec
fs
out
push
inc
jle
inc
push
mov
test
cmc
cli
cmp
cli
rclb
mov
stos
sub
loop
nop
pop
rorb
or
enter
mov
inc
inc
test
mov
movsb
rcrb
pusha
lret
mov
dec
sub
jg
ljmp
in
mov
pushf
cmp
push
adc
and
adc
inc
dec
mov
jge
cmc
fiadds
dec
jmp
pushl
sbb
mov
dec
and
adc
add
pop
and
les
popf
aam
push
push
in
inc
inc
inc
fsts
jmp
xchg
int3
insl
inc
push
test
sbb
inc
popf
xchg
aam
je
dec
in
pop
push
mov
mov
pop
pop
rorb
out
or
fisubs
lcall
inc
push
sbb
sbb
mov
inc
inc
fsubs
sub
cmp
movsl
or
add
mov
nop
js
outsl
xchg
or
nop
aad
je
inc
push
incl
test
scas
and
or
call
loopne
mov
aam
fs
jb
loope
incl
pop
popa
sbb
sub
sbb
xchg
ja
or
cld
xorl
mov
jns
mov
jp
inc
fmull
enter
push
sbb
sahf
lea
or
pop
stc
lods
pop
shrl
test
mov
add
mov
sbb
jb
mov
out
cli
dec
test
pop
call
cmp
ljmp
or
bound
outsb
sub
push
inc
pop
mov
or
sub
cmpb
mov
add
outsl
or
mov
lock
cmpsl
in
inc
inc
dec
pop
pushf
inc
pop
call
xchg
cli
jl
push
xchg
add
insb
shr
inc
add
fldl
or
fcoms
addl
pushf
pop
adc
sbb
movsl
out
mov
psubd
cmp
sarl
es
fmuls
cmc
inc
movb
dec
inc
and
xchg
adc
and
roll
push
loope
add
adc
and
bound
lret
dec
or
popf
xchg
cs
aaa
fcmovb
cmp
data16
mov
jmp
cli
mov
push
inc
cwtl
popl
cmp
outsb
adc
add
xchg
jecxz
loopne
add
xchg
ret
scas
inc
or
dec
cli
jmp
stos
mov
push
jo
popa
mov
push
lods
orl
push
imul
xor
and
push
and
sbb
outsb
lock
std
lcall
popa
xor
das
cmp
jmp
lds
in
repnz
pushl
movb
stos
add
xor
jg
dec
sbb
inc
dec
mov
pushl
push
ret
mulb
popa
pop
decl
into
pop
lods
add
inc
ss
movsb
in
jp
xchg
fcomip
incl
sub
in
pop
loopne
adc
jmp
xor
xchg
mov
add
cmp
mov
jno
dec
cmpsl
jmp
jo
cli
and
and
cmpsb
mov
in
push
cmpsb
cwtl
xchg
adc
stos
decb
dec
inc
sub
pop
pop
dec
push
and
push
and
test
mov
pop
dec
add
mov
pop
mov
add
aam
in
or
pushl
push
into
pop
out
insb
bound
add
pop
fadds
add
pop
pusha
or
cs
dec
ljmp
outsb
pop
xor
sar
aad
sbb
sbb
add
and
cmp
ljmp
pop
inc
push
pop
or
and
lods
inc
dec
fwait
mov
shlb
pop
test
mov
scas
hlt
adcl
jb
dec
int3
pop
add
push
mov
ficoml
push
add
cs
adc
hlt
or
int
mov
mov
imul
sbb
daa
lock
mov
add
inc
dec
into
test
loopne
js
out
jp
ljmp
inc
xchg
cli
ret
in
sti
jbe
ja
outsl
jns
subb
loope
cmp
mov
xor
decl
mov
int3
scas
addl
sub
jecxz
sub
add
movsb
icebp
std
decl
xchg
xorb
xchg
add
je
mov
push
xchg
push
mul
mov
hlt
jae
xchg
push
add
jns
xchg
in
movsb
lock
mov
xchg
loopne
jle
add
andl
or
dec
and
mov
aad
dec
sub
lcall
push
xor
in
dec
pushf
ret
sub
cmp
xlat
iret
dec
push
adc
ds
xchg
inc
fistps
call
test
mov
xchg
or
incl
fsts
fstpl
fcmove
xor
mov
mov
sbb
pusha
sub
data16
mov
jp
repnz
lcall
mov
xor
lods
adc
shl
jb
pop
inc
stos
jg
mov
pusha
cmp
fs
fs
shlb
xor
popf
adc
decl
adc
mov
pop
movsb
mov
or
rclb
jp
or
push
or
repnz
stos
xor
or
fmulp
and
aad
test
ljmp
or
call
mov
add
add
add
add
jle
sar
jmp
sahf
cld
ljmp
ss
cmp
cmp
lods
mov
cmp
decl
jns
xchg
add
ret
cld
aaa
aas
das
sub
lret
jbe
add
xor
mov
inc
dec
push
jp
inc
mov
inc
mov
shrl
jg
inc
addr16
sti
cmpl
pop
jns
mov
js
test
xor
int3
ret
stc
orb
pushf
jo
inc
xor
int3
call
jg
scas
repz
xor
cmp
popf
lock
out
aad
mov
vpunpckhbw
sub
lock
dec
call
jno
mov
xlat
and
pop
push
adc
push
jae
sbb
push
in
sbb
jmp
out
mov
rcll
movsl
pop
out
adc
mov
gs
mov
add
call
add
cmp
fidivrl
and
bound
in
popf
push
lock
std
pusha
stmxcsr
outsl
loope
mov
add
jmp
lcall
dec
add
ret
push
jmp
mov
adc
popa
dec
insl
sbb
decl
push
inc
sbb
jno
add
cltd
out
call
sbb
cmpsl
mov
pushl
sbb
dec
add
pop
imul
into
xor
mov
pop
call
movsb
xchg
cmp
shrl
adc
repnz
repz
ja
dec
jnp
cltd
adc
mov
cli
decl
cmp
test
jae
lock
mov
dec
nop
test
out
mov
incl
mov
js
push
inc
inc
sub
lods
mov
or
lcall
pop
je
pop
inc
call
pushl
fildll
mov
lock
lods
dec
fwait
enter
xorb
mov
icebp
push
mov
jae
xor
loopne
push
les
and
fs
fcomip
or
shll
sar
mov
jg
cmp
or
mov
test
ret
sub
cmpsb
dec
loopne
push
lcall
push
add
stos
add
test
lods
test
sbb
rorb
enter
jmp
andps
mov
in
pop
dec
xchg
mov
test
push
call
sbb
dec
ficoml
repnz
pop
fidivrs
xor
push
hlt
les
inc
cltd
leave
inc
aad
adc
nop
adc
loopne
rorl
mov
cmp
push
inc
jo
pop
pop
lret
scas
divb
sub
ljmp
cmp
je
pop
pushf
mov
adc
lods
les
scas
clc
test
int3
jae
repnz
xchg
dec
pop
dec
mov
mov
add
rcll
inc
jns
pop
cmc
std
call
shrb
sub
mov
mov
mov
jae
jg
and
movsb
aaa
fisubrs
orb
test
sub
mov
ret
out
repz
xor
mov
lock
add
sti
test
xor
js
ret
pop
fs
fwait
xchg
xor
mov
pushl
fisubrs
dec
cwtl
add
or
adc
ret
pusha
dec
ret
sahf
xor
pusha
into
xchg
mov
sub
aaa
sbb
ss
lcall
enter
daa
mov
out
loop
add
pusha
repnz
leave
add
and
gs
cwtl
filds
dec
ljmp
mov
cmpsb
ret
mov
cmp
decl
xchg
inc
test
dec
dec
push
cmp
daa
and
imul
dec
sub
pushl
push
cmpsl
cmp
push
push
aad
je
pop
and
or
inc
push
pop
call
push
pop
inc
cs
cmpsb
cmp
pop
mov
xchg
push
into
lcall
or
ljmp
or
insl
ljmp
lds
test
mov
outsl
xchg
mov
jnp
ficomps
mov
mov
addr16
addr16
jmp
frstor
mov
idivb
int3
aad
jnp
test
cld
or
or
sub
add
adc
lret
mov
pop
outsb
or
or
sub
mov
imul
sbb
clc
mov
jnp
mov
ss
add
adc
push
loope
fcmovb
decl
mov
cli
call
and
inc
or
sbb
xchg
mov
ret
adc
clc
jg
mov
inc
or
adc
clc
jg
push
mov
loopne
add
hlt
inc
rorb
les
adc
sub
stos
orb
push
decl
push
adc
incl
les
and
cmp
cmp
popa
adc
cmp
inc
adc
sbb
popf
push
push
imul
call
imul
add
push
sub
sub
aam
jp
pusha
aad
jp
mov
incl
cmpb
sub
into
cmp
mov
jg
mov
sub
cmpsb
sbb
pushl
push
mov
cmp
push
jmp
popf
push
push
and
push
cld
ja
sub
pop
imul
lcall
xor
push
jp
test
fmuls
addr16
aaa
call
loopne
mov
sub
lods
sbb
ljmp
pop
orl
in
ja
lea
mov
rorb
pop
cmp
xor
mov
sub
rcll
sbb
mov
ljmp
gs
jmp
push
out
sub
mov
sti
clc
movsb
xchg
daa
fildl
pop
sub
scas
xor
loop
gs
mov
decl
mov
push
addr16
push
inc
sbb
bound
xchg
setnp
decl
add
cli
fwait
outsl
mov
out
clc
decb
and
mov
sub
push
mov
push
mov
mov
jmp
stc
and
mov
mov
ljmp
sbb
ljmp
dec
pop
jge
inc
lea
cmp
jbe
outsl
clc
sar
adc
ds
mov
rolb
xor
push
bnd
or
add
xor
test
jmp
int
decl
and
in
fs
in
in
iret
ljmp
mov
rolb
dec
mov
inc
jb
sub
incl
xor
adc
push
aas
std
xchg
aam
dec
cmp
call
andnps
sbb
cmp
and
or
xor
pop
and
imulb
jmp
rorl
xchg
sub
lcall
push
repz
push
or
mov
rcl
xchg
dec
and
adc
xor
jmp
outsb
enter
int3
dec
sub
sub
mov
add
push
fld
jmp
xlat
mov
mov
cmp
call
test
cmp
in
push
mov
adc
mov
xor
sbb
inc
sbb
lret
xchg
cwtl
cwtl
pop
xchg
push
xchg
cmp
dec
mov
pop
cmpsl
leave
rcll
xchg
sti
pop
addr16
pusha
cwtl
lret
les
sbb
sbb
lcall
rorb
out
dec
or
sub
cmpb
orl
lcall
pop
ljmp
mov
outsb
mov
cmp
rcrl
dec
in
xor
lods
ficompl
mov
pop
xlat
dec
mov
or
add
mov
pop
incl
mov
fwait
or
mov
push
je
iret
orb
xor
call
xchg
dec
loopne
inc
pop
rolb
adc
sbbb
sahf
push
adc
pushl
and
fisubrs
mov
mov
pop
mov
inc
xchg
shr
push
jecxz
decl
inc
daa
cwtl
je
into
fdivrl
xchg
sahf
test
out
or
xchg
adc
ljmp
cmc
pushf
ja
jmp
in
mov
mov
xchg
mov
fistl
mov
push
xchg
stos
xor
sub
hlt
mov
enter
aas
cli
aas
orl
loopne
dec
nop
sbb
call
or
mov
xor
mov
leave
mov
or
jo
decl
rorl
cmpsl
cmc
inc
xor
movsl
xorl
pop
mov
add
icebp
shlb
dec
bound
cmp
movsl
shrl
dec
push
and
sub
xchg
sub
dec
nop
dec
push
mov
sbb
ret
fbld
xor
pop
pop
jno
pusha
popf
adc
jmp
mov
pop
add
sar
lock
jae
jne
shl
xorb
mov
call
and
mov
cltd
stos
fmull
cwtl
inc
lret
or
xor
loopne
xor
das
mov
jno
popf
push
inc
cmp
push
stc
inc
jecxz
cli
jmp
ss
ret
add
inc
mov
sub
and
les
mov
ljmp
fld
jl
lretw
mov
movsl
rsqrtps
sbb
add
cmovb
xor
adc
incl
lret
nop
mov
jae
pop
sbb
lcall
adc
and
push
push
push
clc
cmp
cli
jg
and
cmp
jnp
repz
in
mov
cs
popa
mov
xor
ds
out
jp
fwait
sahf
inc
dec
cmp
jne
dec
decl
repz
and
decl
push
adc
call
and
iret
stos
mov
jno
outsl
lods
sub
in
inc
outsb
add
jmp
add
lret
faddl
call
test
scas
fmull
scas
pop
push
push
and
or
in
add
inc
movsb
lds
ljmp
inc
bound
lds
lcall
sub
jne
or
mov
ret
mov
pop
and
sub
fstpt
arpl
jno
fsubp
pusha
inc
std
sub
sarl
decl
push
sub
xor
mov
aad
loop
cmpsl
loopne
fdiv
fstp
data16
push
jb
loop
addr16
cmp
and
or
out
inc
cli
jmp
pop
ds
push
sbb
or
cwtl
insl
cmp
mov
mov
in
adc
loopne
dec
and
inc
sbb
fnstsw
dec
adc
cmpsb
incl
cs
and
sbb
out
adc
add
inc
or
aam
enter
jmp
add
and
push
ret
sub
mov
notb
fdiv
mov
scas
rcrl
xchg
jb
pop
js
jae
mov
inc
es
ljmp
icebp
sahf
pop
out
iret
adc
jmp
mov
xor
cld
out
add
mov
adc
call
pop
lds
cs
mov
adc
pop
lret
pop
xchg
jecxz
mov
enter
test
xchg
sub
pop
sbb
pusha
adcb
fs
imul
les
pop
xchg
jmp
push
xchg
xchg
mov
scas
push
test
dec
mov
stos
fsubrl
push
popa
sahf
jge
lret
sub
mov
push
mov
pop
pop
mov
imul
push
mov
cltd
shlb
sbb
decl
lret
sbb
mov
stc
xor
jae
add
push
jl
pop
dec
push
xor
sti
cltd
cmpsb
fisttpll
pop
and
test
cld
push
clc
mov
clc
insb
xor
dec
dec
mov
or
pop
pop
fisubrs
popa
jnp
dec
pop
mov
fildll
dec
push
dec
jb
outsb
orl
hlt
mov
int3
xchg
and
add
add
mov
push
int3
lcall
sbb
push
addb
ja
movsb
cmp
leave
filds
lcall
out
mov
add
dec
inc
jae
and
xchg
and
pusha
loop
dec
je
dec
jmp
test
hlt
dec
jecxz
mov
outsb
out
dec
outsb
shll
pop
shlb
daa
ret
or
mov
incl
or
into
ret
add
js
sub
cli
mov
out
mov
jo
dec
jb
and
add
lahf
testb
decl
dec
test
rorb
and
sbb
in
inc
push
or
dec
enter
enter
incl
loop
adc
push
sbb
pop
call
cmp
lcall
enter
test
sub
mov
inc
arpl
or
ljmp
movsl
sub
lods
es
adc
and
xchg
test
sub
call
decl
push
add
loop
je
lods
ss
fsubl
cmp
mov
ljmp
mov
add
imul
xchg
and
leave
mov
es
clc
test
mov
call
enter
fldt
aad
hlt
mov
mov
int
mov
sbb
out
inc
lcall
push
inc
ss
rcrl
dec
mov
sti
call
xchg
subl
js
imul
ljmp
call
sarl
fsubrs
les
decl
mov
cmpsb
inc
mov
pusha
mov
push
mov
rolb
leave
mov
add
add
fwait
hlt
mov
jg
loop
inc
xor
loopw
and
mov
or
cmp
dec
sbb
ret
rcr
or
or
pusha
jb
mov
mov
nop
int3
lahf
sbb
jp
inc
jnp
push
push
mov
ds
shrl
cmp
ja
les
pop
add
mov
pop
mulb
inc
scas
adc
movsl
jle
sub
or
clc
daa
ljmp
fiaddl
decl
or
add
dec
xor
test
xchg
dec
test
jecxz
sub
jle
xor
add
pop
cmp
test
mov
subb
jo
inc
jmp
and
cli
loopne
sbb
aam
or
jmp
cmp
addb
or
push
xchg
jmp
and
and
fnstenv
or
in
pop
inc
adc
sbb
mov
outsb
stos
inc
cmp
mov
decl
testb
mov
xor
mov
and
sub
or
mov
loop
imul
movsl
inc
std
sti
scas
bound
dec
test
cs
outsl
inc
sub
mov
incl
xor
cmpb
mov
ds
sub
mov
clc
mov
or
mov
add
jmp
outsb
mulb
aaa
inc
scas
xchg
mov
fsubl
movsb
add
sbb
sbb
jmp
rorl
je
inc
inc
sbb
inc
or
add
loop
push
sub
call
jle
ja
into
popf
fs
es
jp
daa
rolb
xor
jl
sub
add
mov
outsb
ret
cli
jmp
mov
dec
das
sub
jbe
xchg
mov
pushf
rorb
or
mov
movsl
repnz
or
jb
sbb
or
push
mov
or
call
jg
decl
clc
cmpsl
lods
hlt
and
dec
xor
dec
out
lods
mov
or
dec
sub
or
ljmp
call
and
adc
bound
repnz
stos
sub
dec
in
add
xchg
inc
cmp
gs
mov
inc
xchg
lcall
adc
scas
mov
cmpsb
sub
in
inc
addr16
adc
inc
push
mov
scas
clc
jg
xor
sbb
out
sbb
mov
jecxz
inc
xchg
aaa
or
mov
ljmp
fldenv
aad
js
das
mov
lea
push
fwait
rcll
leave
mov
mov
mov
imul
or
dec
sbb
inc
clc
mov
ss
push
inc
test
xchg
stos
add
mov
mov
clc
test
cld
stos
jge
adc
mov
mov
inc
inc
add
inc
aam
add
dec
cmpsl
or
mov
ss
and
aam
fcoms
dec
mov
xchg
cmpb
push
inc
inc
inc
ljmp
xor
fadds
ds
inc
push
fs
pushl
sub
jns
imul
inc
outsb
dec
xchg
adc
mov
push
inc
mov
mov
pop
lds
jno
jmp
adc
or
mov
or
dec
or
orb
scas
mov
rolb
jle
dec
paddq
loopne
pop
ljmp
ja
and
je
cmc
adc
subl
mov
and
xor
loop
push
push
pop
dec
push
sub
sub
xchg
jbe
xorb
and
add
dec
lds
xchg
shrl
fidivs
mov
and
sub
test
punpckldq
sbb
movsb
or
hlt
or
sub
mov
cmpsb
adc
mov
pop
mov
push
ja
cmp
pop
movsl
xor
es
push
mov
mov
cld
hlt
lds
mov
decl
dec
data16
mov
outsl
sbb
mov
data16
int3
mov
mov
push
fisubl
daa
ljmp
cli
scas
dec
inc
pushw
in
pop
xor
jo
cli
aad
repnz
pop
mov
dec
out
push
add
or
dec
repnz
into
aaa
push
add
or
ds
bound
cwtl
cmp
inc
loop
adc
inc
xchg
shrb
and
addr16
ja
aam
jmp
push
or
inc
imul
arpl
xchg
nop
inc
das
clc
movsw
rorb
mov
paddb
mov
mov
add
mov
call
or
clc
lcall
cs
loopne
mov
xchg
or
outsb
or
ljmp
mov
inc
enter
sbb
out
lock
out
lock
pushl
aam
sbb
cmpsl
test
adc
push
call
dec
das
sar
in
mov
cld
xchg
xor
int
push
fidivs
jo
push
xchg
icebp
ljmp
sahf
clc
pop
dec
add
ja
bnd
mov
cmpsl
inc
loop
scas
fimuls
or
add
lcall
sbb
enter
popa
sbb
adc
nop
push
jge
incl
stc
xchg
inc
aad
push
xor
sbb
inc
add
sub
outsl
das
ljmp
add
mov
into
or
jns
mov
test
and
arpl
sub
inc
jge
dec
adc
and
mov
dec
cwtl
jg
mov
aaa
and
lcall
cld
lea
lcall
fcmovnbe
jg
sub
add
inc
or
in
test
xor
daa
mov
pushl
cmp
popf
imul
out
jle
out
rcrb
xchg
sub
out
and
sbb
mov
sbb
mov
jb
xchg
or
mov
push
ret
dec
xchg
sub
fdiv
mov
orb
mov
movsl
mov
ret
das
fcomip
jmp
push
iret
scas
lods
test
out
add
adc
out
lret
imull
insl
ja
jmp
ljmp
push
inc
pop
sbb
outsl
call
add
shll
js
lods
shrb
sbb
pop
add
push
push
push
pop
push
fistl
cltd
pusha
sub
xor
add
and
lods
pop
dec
xor
jmp
decl
jmp
nop
rolb
cli
insb
dec
sbb
loop
ljmp
push
dec
fsubrp
insb
call
mov
pop
and
dec
and
jmp
frstor
mov
ret
in
stos
cwtl
and
and
adc
xchg
jge
mov
dec
fwait
inc
lock
mov
and
jb
rclb
stos
dec
std
decl
es
push
inc
aad
ja
dec
dec
jp
daa
jo
push
incl
bnd
pop
or
xor
mov
dec
int3
mov
data16
lret
jp
or
or
popa
std
clc
mov
insb
xchg
jle
psadbw
mov
ja
adc
jnp
mov
gs
hlt
loopne
in
adc
pop
std
ljmp
sahf
inc
lret
shrb
test
subb
dec
lock
fistl
ljmp
mov
mov
dec
mov
aam
aam
test
pop
push
in
cmp
out
test
sub
mov
mov
nop
sub
and
push
jae
ljmp
out
jb
aad
sbb
int3
mov
add
jg
inc
lods
dec
mov
stc
dec
xor
ficomps
push
mov
xchg
and
cmpsb
dec
cmpsl
sbb
fcomps
sub
jp
cltd
jns
jnp
inc
dec
or
jnp
cmpsl
sbb
mov
mov
mov
lock
mov
mov
jns
dec
mov
repz
orb
mov
or
or
stos
pusha
jnp
aaa
push
popf
jno
jg
inc
fnstsw
sahf
loope
cmpl
mov
dec
jnp
sub
mov
cli
mov
inc
nop
sbb
inc
mov
cli
lods
pop
movb
cmpsl
dec
mov
xor
or
or
cmp
push
cli
sahf
insb
pop
and
dec
cmp
pushl
ror
hlt
shll
repnz
xlat
and
jg
sub
repnz
outsl
mov
sbb
dec
and
ljmp
lret
aam
out
lock
lea
ja
into
fs
mov
call
pop
pop
inc
mov
dec
into
sahf
add
xor
rorl
in
sub
add
xor
pop
push
or
icebp
cmp
xchg
enter
cmp
adc
filds
or
jl
mov
jecxz
inc
jmp
aas
mov
pushf
sub
mov
lret
add
out
mov
scas
mov
adc
fsts
loope
dec
push
fdivrs
sti
pushf
insl
call
jns
into
jge
inc
xchg
in
dec
out
xor
jnp
fs
pusha
dec
lret
movsb
dec
outsl
mov
pop
sub
incl
data16
mov
popf
mov
insb
mov
lcall
lret
mov
mov
and
insb
fs
leave
pop
lret
push
mov
pop
mov
enter
jg
aaa
pop
sbb
incl
mov
pop
js
xlat
dec
and
jge
xlat
sti
push
mov
rcll
sbb
xlat
int
inc
into
sub
filds
mov
decl
jb
adc
int
xor
aad
jo
mov
inc
lods
repnz
jne
mov
jl
cmp
mov
fs
testl
mov
or
call
sbb
icebp
cli
and
out
in
inc
inc
mov
or
inc
mov
mov
sub
dec
ds
xchg
add
mov
dec
mov
push
mov
or
subb
pop
mov
incl
outsl
sar
pop
incb
mov
xchg
in
sub
lahf
add
ret
xchg
movsb
lock
add
adc
nop
dec
mov
dec
and
xchg
xor
cwtl
adc
hlt
call
push
adc
mov
cmpsb
inc
lret
call
arpl
xchg
push
xor
mov
popf
or
int3
fdivl
jae
xchg
mov
inc
rcll
mov
pop
lock
lcall
jne
mov
add
dec
push
xor
jp
mov
rcrb
das
sbb
fldenv
in
daa
stos
dec
loopne
fs
out
aam
jb
push
cmp
add
ljmp
roll
jmp
es
mov
sbb
inc
mov
lcall
push
mov
lret
shrb
sahf
lahf
mov
fcoml
dec
and
add
mov
inc
fnstsw
rcrb
inc
pushf
cmp
repnz
mov
xlat
jns
in
lahf
dec
pop
cmp
je
jg
ret
jge
hlt
mov
ljmp
add
xchg
in
mov
jl
xor
das
aas
jg
clc
loope
outsl
clc
add
jle
mov
pusha
jge
or
lahf
jge
ljmp
addb
cmp
sbbb
daa
add
add
pop
add
mov
test
xchg
js
and
ljmp
movsb
test
mov
xor
loopne
jmp
mov
pusha
xor
rcrb
inc
push
add
nop
incl
sub
push
test
push
gs
xchg
inc
push
pop
stc
adc
jb
inc
dec
pop
pop
aam
dec
sub
inc
adc
loope
ret
sbb
mov
adc
dec
or
pusha
shll
push
push
stos
andl
add
jmp
movsl
mov
push
fnstenv
call
push
push
outsb
jg
push
sahf
pop
lds
push
xchg
jns
adc
mov
test
lcall
xchg
push
mov
pop
cltd
inc
pop
pop
fwait
jbe
push
pop
jg
out
imul
inc
cmp
addr16
data16
int
push
lods
call
jbe
inc
in
pop
lret
push
sbb
fimull
xchg
add
sbb
dec
ss
jns
mov
aaa
cmpl
xchg
popa
cmp
out
and
jle
inc
push
enter
incl
jle
xor
lock
out
lret
sahf
push
daa
stos
pop
and
loope
and
ljmp
out
popa
mov
js
lea
loopne
inc
inc
xor
inc
dec
xor
xchg
jae
dec
test
push
xchg
pop
inc
inc
rcll
popa
cs
pop
inc
mov
cmc
fwait
insl
les
out
jo
loopne
dec
push
cld
or
sbb
les
mov
ljmp
clc
mov
outsl
jmp
cmpsb
jbe
xor
mov
mov
adc
lds
scas
movsb
lods
loope,pt
mov
fisubl
rcrb
lcall
jge
push
xchg
push
outsb
pop
gs
icebp
dec
adc
pop
mov
jle
fisttpl
ja
fcomip
sub
xchg
stos
push
fstps
jle
call
loopne
loop
push
lret
imul
scas
lods
jne
cli
cmp
xchg
cld
out
cmp
stc
sub
scas
push
icebp
call
mov
out
pop
loope
sbb
and
xchg
sti
out
mov
pop
push
lcall
mov
shl
lahf
aaa
dec
aam
test
repnz
add
mov
push
and
mov
loopne
adc
adc
push
fsts
push
or
call
cmp
and
shrb
dec
adc
mov
in
pop
gs
lock
and
fsubs
xchg
pop
fs
dec
loopne
dec
js
ret
sbb
add
sahf
cli
test
incl
add
sub
pop
fisttps
imul
ret
repnz
stos
xchg
jne
mov
mov
jg
sti
push
jp
pop
inc
fs
ljmp
inc
cltd
rolb
jne
xchg
int3
push
sub
fdivrp
pushl
insl
mov
rolb
fmul
in
jge
fiadds
mov
call
cmc
xchg
add
leave
pop
in
lret
test
jle
dec
jo
push
dec
in
ljmp
add
test
add
pop
adc
fcomip
ffreep
xor
mov
and
mov
inc
add
push
lahf
test
decl
add
fdivl
test
bnd
fmul
insb
add
sbb
fldt
mov
inc
adc
subl
xor
ds
adc
adc
addr16
inc
ret
xchg
test
roll
mov
xchg
fiadds
sbb
and
add
lock
sbb
loopne
and
jno
cmp
add
pusha
xchg
mov
add
clc
and
leave
lcall
call
insl
jb
mov
loopne
mov
adc
fldl
jnp
jmp
and
lds
leave
mov
mov
xor
mov
cld
jmp
int3
fisubrs
movsl
lea
divl
mov
sahf
adc
repz
mov
pop
cmp
mov
incl
jne
xchg
fimull
or
les
into
pop
add
cmc
sbb
jbe
aaa
bound
add
scas
xchg
add
add
hlt
cmp
cmc
adc
mov
iret
jg
in
push
stc
cwtl
cmp
test
mov
add
cwtl
xor
shrb
fdivr
cwtl
xchg
decl
movsb
rcrl
mov
jne
insb
inc
cmp
pop
ud0
mov
mulb
in
xchg
jp
pop
push
bound
mov
mov
push
jg
cmp
fs
outsb
or
xchg
and
lods
sub
popa
add
jmp
out
sbb
and
inc
lret
movsb
and
add
sub
xchg
movsb
cli
cmpsb
aaa
inc
mov
call
mov
push
adc
xchg
or
cltd
sbb
test
mov
pop
inc
aam
scas
scas
out
jp
imul
dec
push
push
in
mov
decl
jg
mov
ficoml
je
pushf
mov
aam
daa
mov
jb
decl
decb
mov
fsubrs
xor
shlb
xor
or
jmp
cmp
js
ss
int
stos
and
mov
jge
dec
mov
inc
data16
fcomip
sti
loopne
pop
adc
inc
fwait
dec
adc
inc
fists
cmp
push
lcall
lahf
je
xchg
pop
jno
inc
loop
mov
and
fwait
decl
push
xchg
jmp
xorl
mov
call
xchg
fdivrs
scas
cmp
and
pop
jbe
aam
aad
rolb
ljmp
push
mov
test
repnz
jmp
sub
mull
mov
subl
add
and
push
test
test
jo
rorl
pushf
inc
lock
in
stos
incl
rcll
mov
and
repz
mov
int3
pop
and
jp
pop
fisttpl
mov
scas
mov
cmp
outsl
mov
out
sahf
cmc
mov
decb
push
pop
sub
dec
and
decl
adc
push
push
mov
orl
lret
or
xor
ja
notl
dec
shl
in
incl
pop
cld
lret
rol
dec
xchg
xchg
testb
push
pop
mov
and
in
pushf
mov
lods
mov
mov
mov
popf
xor
insl
cmp
adc
jl
cmp
in
clc
pop
xchg
into
idivl
mov
decl
push
adc
adc
rorb
or
in
mov
add
jbe
shlb
adc
push
stos
and
outsl
xchg
test
mov
mov
and
fcomps
push
or
mov
adcb
dec
pop
aam
bound
jle
xchg
inc
push
push
ret
cltd
cmpsb
mov
test
decl
ss
ljmp
out
clc
push
out
push
loop
jp
int3
imul
inc
push
fcompl
push
scas
int
and
push
faddl
scas
inc
lcall
mov
lods
cs
imul
call
cmp
das
lods
or
and
xor
push
xchg
pmaxsw
repnz
jns
pop
xchg
lods
decl
push
push
jbe
stos
and
pop
lcall
or
insb
add
movl
popf
sub
sub
or
in
add
sti
mov
xchg
movsb
and
subb
cmp
push
or
xchg
xor
and
js
xor
inc
jle
mov
sbb
push
jns
movsb
xor
rcll
xor
xor
inc
call
adc
lods
adc
cs
sbb
inc
jmp
incl
cmp
mulb
ret
sbb
jne
in
out
jo
inc
adc
sbb
mov
inc
mov
js
fwait
inc
cld
xchg
sbb
cmp
sbb
aad
ljmp
nop
mov
jb
arpl
out
outsl
movsb
ss
sub
decl
test
push
push
stos
sbb
cmp
cmpsl
push
xorl
inc
cmp
cmp
push
arpl
sub
decl
inc
push
out
jnp
mov
adc
nop
in
sub
jl
daa
and
inc
and
xor
pop
pusha
add
inc
pop
sbb
jl
push
and
out
pop
cmp
cld
jmp
loop,pt
and
add
add
or
scas
xchg
dec
adc
xchg
xor
xor
dec
pushl
mov
mov
pop
aaa
mov
ds
cli
pushl
dec
bound
je
inc
shrl
and
adc
xchg
add
add
lea
ret
pop
ror
decl
jo
xor
adc
xor
jne
mov
mov
xchg
sbb
jns
mov
andb
cmp
push
jp
subb
in
js
cli
jmp
es
jae
cmp
or
push
popa
push
pusha
mov
test
cmpsb
sub
and
and
scas
fbld
and
mov
cmp
push
cmc
dec
sbb
in
jg
xchg
imul
push
ret
push
les
shl
mov
xchg
js
popl
lret
es
sub
mov
andl
inc
add
lods
les
sub
mov
and
xorb
jl
pop
mov
gs
dec
xchg
cmp
xlat
and
add
xchg
add
dec
mov
dec
or
or
cli
inc
jb
and
sahf
insl
xchg
jle
xor
pop
sub
inc
and
test
std
push
daa
outsb
inc
test
aaa
daa
dec
and
jbe
stc
fs
cmpsb
jg
adc
xor
icebp
inc
add
insl
rolb
push
test
rorb
push
inc
mov
push
mov
adc
imul
inc
pop
xor
sar
pushl
std
sbb
sub
mov
ret
mov
xchg
and
and
popa
out
push
add
jg
push
xchg
pop
insb
repz
mov
dec
mov
pop
mov
jg
popa
lods
negb
test
cmp
imul
nop
jno
adc
fadd
sbb
xor
scas
mov
push
jno
sbb
adc
and
decl
add
jo
repz
inc
mov
icebp
mov
sti
mov
mov
loope
xor
mov
bound
xchg
xor
pop
cmp
and
sub
jg
pop
push
out
fcoml
push
jle
mov
cmc
jle
hlt
xchg
outsl
cmp
adc
dec
adc
inc
test
mov
pop
inc
ljmp
jg
stc
adc
cwtl
sbb
scas
xchg
enter
stc
cmp
mov
fs
incl
pop
mov
aaa
xor
adc
adc
adc
xadd
inc
push
mov
test
lea
dec
mov
clc
push
movsb
call
enter
xchg
out
fisubrl
cld
push
adc
mov
decl
dec
sub
xor
testl
aaa
sub
pop
xchg
jmp
adc
mov
sub
pop
mov
jno
mov
ficompl
stos
mov
push
out
xchg
and
gs
stos
imul
out
jno
notl
xchg
dec
adc
adc
mov
fimull
mov
mov
mov
sbb
or
adc
test
or
sub
dec
repz
xor
scas
lds
jmp
loop
xor
cwtl
pop
popa
movsb
inc
pop
cwtl
hlt
stos
xchg
imulb
inc
add
ja
std
jmp
scas
push
or
push
bound
cltd
push
cmpsb
mov
and
mov
push
add
aaa
or
cmp
lcall
lds
pop
jns
inc
inc
stos
xorl
es
mov
mov
or
cmp
loop
jg
js
aam
lcall
cmc
sbb
pop
xchg
mov
inc
and
insl
gs
xor
movb
nop
pusha
push
pop
sbbl
xchg
ja
incl
adc
cmp
data16
aam
add
incl
xchg
add
loop
imul
mov
stos
pop
pop
pop
xchg
pop
pop
jg
lods
or
push
cmpb
pop
adc
jno
orl
xor
and
clc
jecxz
dec
jmp
push
push
push
pop
xor
js
mov
ret
out
cli
mov
movsl
and
jmp
pop
cmp
addr16
je
out
dec
cmp
sbb
mov
repnz
scas
mov
je
pushl
scas
adc
add
fisubrs
js
mov
mov
jo
fwait
movsb
pop
jo
push
xor
xchg
mov
fbstp
clc
mov
add
sub
mov
decl
insb
mov
fdivrl
ja
lcall
adc
xor
dec
add
popa
aaa
cmp
pop
in
cli
xchg
bound
lcall
clc
mov
stos
insb
jg
sbb
popw
or
mov
cmp
insb
shlb
ss
enter
movsl
call
dec
sbbb
into
xchg
stos
xor
push
jo
mov
cld
sbb
dec
ds
push
cld
jecxz
leave
inc
aas
or
and
pop
pop
push
xchg
sbb
call
mov
add
xor
pushl
in
add
jmp
pop
and
incl
or
test
add
vmovdqu
call
xor
sub
lds
lds
lds
lds
daa
mov
popa
sub
adc
mov
popa
insb
imul
lock
cmp
jae
sti
ljmp
add
add
addb
or
jp
in
inc
jmp
or
cmp
cs
pushl
movl
adc
ljmp
insl
pusha
cmpsb
inc
or
shll
mov
push
xchg
aam
cmp
jp
adc
inc
shlb
cmp
fadds
xchg
ljmp
daa
mov
xchg
mov
rolb
pusha
xchg
inc
scas
mov
in
sbb
ds
incl
push
test
arpl
mov
loope
pop
int3
lods
sbb
call
fcmove
hlt
sub
xchg
inc
dec
sti
call
xchg
cmp
sub
sub
mov
add
pop
or
ds
int3
inc
push
sahf
push
lcall
inc
cwtl
pop
pop
aaa
dec
and
fdivrl
push
adc
add
sbb
push
mov
cmp
sub
pushl
lcall
scas
das
subl
mov
xor
mov
idivb
jl
inc
dec
xor
movsb
cmpb
stos
mov
add
add
and
inc
lea
aam
lret
dec
and
or
add
add
orb
lcall
enter
addb
mov
repz
imul
jmp
push
inc
sbb
sub
and
push
lods
nop
and
lcall
push
jb
sbb
in
jae
arpl
rcll
adc
adcb
sbb
push
add
xchg
incl
xchg
insl
add
cmpsb
cmpsl
mov
test
sbb
data16
jmp
or
into
jb
bound
cmp
int
or
movsb
aaa
mov
xor
sahf
and
push
dec
cli
adc
outsb
movsb
mov
inc
stc
shrl
mov
inc
xchg
and
inc
mov
in
xlat
xchg
dec
aad
mov
rcl
mov
aam
and
xchg
push
or
mov
cmc
push
sub
fists
cltd
mov
pop
mov
scas
cwtl
pop
pop
popf
push
jle
pop
insb
mov
and
inc
dec
push
data16
sub
hlt
inc
insl
adc
pop
lock
push
jmp
loopne
inc
mov
fidivl
je
clc
fisttpl
aad
or
add
jbe
add
shrb
mov
mov
cmp
cmc
mov
inc
repz
dec
insl
stos
xchg
addb
stc
lret
dec
fdiv
sbb
or
out
clc
ffreep
mov
pop
dec
ja
andb
cmp
sub
pushl
push
sub
push
rcrb
subb
cwtl
lcall
mov
inc
loopne
hlt
mov
mov
sti
push
ss
test
xchg
fsubs
inc
or
ret
xchg
mov
fdivr
dec
xor
roll
popa
shll
clc
add
scas
icebp
sbb
xchg
sar
decl
pusha
jns
add
enter
movsb
dec
out
fnstsw
das
rorl
inc
dec
mov
adc
adc
push
push
cs
sbb
pop
sar
or
lcall
adc
mov
mov
js
stos
mov
es
pop
and
sbb
cs
clc
mov
sti
or
jo
lahf
add
jle
popa
push
outsl
sbb
in
pop
pusha
or
insb
mov
in
enter
decl
in
rorl
mov
mov
adc
xchg
loopne
xor
aad
cmpsb
lock
or
pop
push
jmp
or
scas
fbstp
mov
sar
cmp
cld
cmpsl
andb
mov
cmp
pop
fldenv
hlt
or
notb
test
jnp
sbb
pop
aaa
sub
int3
popf
sub
inc
pop
clc
aaa
fcoml
cltd
jecxz
call
mov
cs
shll
or
loopne
pop
jmp
jmp
push
push
movsb
sub
push
int3
add
mov
lcall
mov
fdivs
mov
mov
add
sub
lcall
xchg
sbb
push
lret
sarl
inc
lods
and
jl
add
fbld
and
fisttpll
stos
call
xchg
push
and
aam
or
daa
ljmp
jmp
ficoms
scas
out
incl
sbb
stos
jb
aam
jl
xchg
dec
bnd
add
jecxz
in
ret
jle
sahf
xor
sahf
fbld
std
js
lahf
push
push
lret
mov
mov
out
xchg
pop
pop
shlb
decb
in
and
lock
jg
jg
in
in
ficoml
aad
mov
adc
leave
inc
mov
decl
int3
imul
mov
xchg
inc
and
imul
mov
mov
pop
aam
sbb
or
ds
cmp
std
test
test
dec
push
xorl
cld
cmc
imul
fbstp
imul
lcall
push
in
ljmp
mov
jecxz
rcl
add
xchg
sbb
jl
mov
add
inc
loopne
clc
and
stos
sbb
in
and
in
sub
mov
and
mov
xor
cmp
leave
pushl
aas
push
pushf
js
in
andl
outsb
xor
push
sbb
mov
mov
dec
incl
jl
in
inc
dec
or
inc
stc
shlb
shlb
mov
adc
incl
push
inc
adc
test
movsl
cmp
ljmp
ljmp
in
xchg
sub
mov
fistpl
pop
mov
xor
ret
scas
jmp
or
pop
test
xor
cld
dec
stc
mov
push
push
or
out
xorb
sbb
push
mov
shlb
mov
add
repnz
fwait
and
pushf
mov
pop
out
push
xor
loopne
fistl
sti
adc
cmp
cli
in
push
cld
aas
loopne
test
mov
and
lods
pop
pop
jne
add
sbb
sti
sbb
daa
mov
out
jge
dec
mov
xlat
xchg
mov
mov
fcom
ret
mov
fdivrs
mov
add
add
fmuls
inc
lcall
push
rcr
imul
add
jg
mov
mov
xchg
or
add
pushf
add
sub
add
test
cmpsb
mov
nop
cmpsb
or
inc
mov
add
test
sbb
xchg
movb
jmp
or
ror
xchg
inc
add
and
add
cmpl
les
inc
or
add
mov
mov
pushl
adc
or
mov
sub
mov
lret
nop
cmp
ror
cltd
fcomps
or
jmp
repz
pop
adc
test
sub
scas
and
ljmp
movsl
mov
decl
jmp
xchg
loop
push
test
sbb
dec
mov
add
cs
aad
xor
or
scas
pop
std
ret
rcl
and
call
push
xor
dec
or
or
lds
jnp
xor
sub
dec
cmp
mov
je
loope
lea
pop
mov
xchg
loop
sub
scas
cmp
out
inc
in
jnp
ljmp
loope
inc
and
xchg
inc
adc
xchg
jmp
fistpll
pop
into
mov
outsl
xor
jmp
jo,pn
cmp
mov
inc
mov
pushf
jo
xchg
inc
pusha
vunpcklps
mov
cmp
fadds
fisttps
fwait
mov
mov
sbb
xor
or
test
mov
subl
lcall
and
xchg
dec
scas
xor
inc
push
adc
cli
mov
add
ljmp
add
nop
in
lret
add
mov
sub
dec
mov
sub
xor
cmp
dec
dec
loop
ljmp
lea
test
lods
pop
cmp
popf
pushf
cs
jg
test
and
cmc
rorb
jecxz
icebp
and
inc
xchg
pop
inc
xchg
sbb
cli
movsb
inc
mov
adc
adc
or
lret
out
mov
lea
mov
cmpsl
inc
lds
dec
mov
stos
stos
push
ljmp
popa
in
xor
cmc
mov
mov
stos
mov
adc
clc
lret
push
das
data16
inc
xlat
lcall
into
das
insl
fcmovb
inc
arpl
jge
cmp
ficoml
pop
mov
inc
pop
js
xchg
fnsave
mov
inc
pop
scas
mov
push
fadds
movsl
int3
or
and
out
adc
adc
and
cmp
repnz
jecxz
das
xchg
lock
cmp
jbe
mov
lcall
in
fsubs
cmp
sahf
dec
lods
andb
leave
push
xchg
push
call
add
pushl
cmp
jge
dec
xor
bound
push
cmpsl
mov
and
pop
xchg
mov
or
mov
decl
cmpsl
xor
xchg
push
jecxz
movsl
add
push
push
addr16
incl
jg
mov
add
lcall
xor
aaa
inc
lods
outsb
or
mov
mov
mov
hlt
ja
and
adcl
pushf
pop
jne
sbb
fwait
arpl
fcmovne
dec
outsl
xchg
add
rcll
jbe
mov
push
adc
sbb
pop
or
sbb
ret
jg
or
cmp
dec
push
sub
pushl
bound
gs
in
loopne
mov
shrl
icebp
fsubs
test
ljmp
imul
dec
scas
ss
int
mov
jnp
stos
ret
xchg
lods
rclb
pop
cmc
incl
xchg
xchg
into
pusha
stos
pop
aad
cmp
sbb
inc
pop
push
loope
xlat
movsl
dec
std
loope
ljmp
in
loop
adc
daa
sarb
pop
dec
inc
sub
in
inc
push
ss
test
dec
fadds
push
dec
cmp
and
mov
dec
popa
lds
or
jl
test
dec
iret
dec
push
adc
negb
into
ds
lret
call
int3
cltd
sub
and
sbb
add
dec
pushf
pop
add
call
push
inc
mov
pop
sbb
cmp
ljmp
loopne
sarl
lods
inc
mov
xchg
test
scas
sti
lcall
popa
mov
aam
push
inc
and
inc
inc
xor
inc
shll
lds
sahf
cmp
fildll
xor
add
mov
pop
and
nop
int3
dec
jbe
aad
aad
or
pop
stos
fimull
cmp
cs
fmull
shlb
and
pusha
sbb
jae
test
sbb
and
aaa
rcll
cmpsl
icebp
and
pop
fldenv
aad
sub
sbb
test
aaa
mov
call
or
lret
push
call
in
test
orb
and
xor
xor
test
es
shrl
inc
xor
and
orl
incl
aas
divl
pop
adcb
sbb
insb
cmpb
push
divb
scas
pop
sub
inc
sbb
lcall
lds
into
call
inc
in
nop
pop
add
neg
loop
daa
pop
add
inc
cmp
or
and
into
cmp
rcrb
cmp
bswap
shl
adc
test
sub
sahf
dec
hlt
clc
ljmp
sarl
insl
jmp
popa
pop
xor
inc
inc
test
cmp
fimuls
sbb
imul
sbb
decl
nop
mov
icebp
insl
mov
gs
mov
and
dec
aad
and
inc
xor
cmp
adc
add
rclb
or
movsb
lods
ret
dec
movsl
cld
jg
cmp
cltd
inc
imul
push
test
cltd
sbb
aaa
cld
and
dec
adc
popa
aad
jmp
or
xor
jae
imul
push
add
mov
in
sbb
or
in
cs
mov
fcmovbe
scas
jp
cmpsl
xchg
or
sub
in
push
cmp
xchg
int
icebp
sahf
jmp
fcoml
mov
movsb
hlt
decl
fimull
clc
cmpsl
add
stos
aas
jne
mov
mov
aaa
inc
mov
push
jge
pop
pop
jl
addr16
mov
adc
adc
push
mov
fisttps
jo
pop
sub
mov
aam
fwait
adc
lods
rorb
dec
cli
shl
jg
call
movsl
sub
lret
push
push
pop
call
ljmp
rcrb
dec
mov
fdivl
pop
dec
repz
fucomip
mov
dec
out
sub
cmp
repnz
jb
inc
jg
and
rclb
jmp
pop
fstpl
inc
pop
cmp
ja
test
inc
sub
mov
lods
add
inc
hlt
movsl
test
arpl
push
mov
movsb
hlt
mov
sub
mov
xchg
cmc
call
mov
das
add
xchg
fs
je
jmp
dec
icebp
je
cmpsb
adc
pop
and
mov
sub
fnstcw
lock
and
mov
mov
sbb
mov
xchg
mov
imul
std
loop
lds
flds
mov
mov
sbb
in
repz
add
cmp
fsub
xchg
icebp
jg
dec
cmp
aaa
lahf
enter
or
or
test
sbb
test
aaa
lds
and
test
push
push
add
addr16
in
push
aad
push
push
sbb
pop
fidivrl
xchg
clc
fists
xchg
shll
adc
sbb
or
jmp
pop
pop
movsl
mov
adc
pop
test
mov
dec
xchg
inc
repz
lcall
fwait
mov
adc
stos
out
dec
and
inc
jecxz
lahf
adc
add
pop
imul
outsl
mov
pushf
mov
mov
mov
xor
pushl
stos
push
sbb
or
mov
mov
inc
fsubl
sbb
push
adc
mov
push
push
ret
sti
cmp
inc
sarb
mov
mov
repz
dec
icebp
incl
sahf
in
jmp
fstps
ret
lret
xchg
lods
pop
adc
jmp
cmpsb
leave
sub
or
sub
clc
popa
adc
loopne
ds
in
call
or
ret
call
sahf
push
cmp
mov
mov
or
and
in
inc
push
cmp
push
mov
loopne
push
xchg
incb
mov
mov
dec
xor
out
mov
int
push
push
rolb
and
xchg
mov
loopne
jae
add
js
push
inc
xchg
push
mov
lock
mov
adc
popl
out
xor
cmp
inc
adc
or
imul
adc
in
sub
incl
mov
es
pop
pop
lods
mov
sbb
test
cltd
call
call
filds
mov
sub
mov
sbb
sbb
pop
fwait
mov
inc
push
xor
jg
pop
sub
mov
dec
ret
cmp
sub
jecxz
jno
mov
cltd
and
add
sbb
adc
mov
imul
push
scas
mov
mov
pop
or
xchg
lcall
cmp
sub
ds
mov
push
movsb
leave
popa
sbb
pop
stc
mov
outsl
andb
in
mov
xchg
and
insb
mov
dec
sub
ljmp
imul
shll
push
sub
jecxz
inc
mov
mov
sbb
sbb
xchg
push
push
pop
subb
or
push
add
outsl
add
enter
pop
imulb
pop
movsb
push
mov
jno
add
mov
dec
clc
subl
loope
and
sub
jle
mov
pushl
fcoms
or
and
fwait
xor
adc
inc
mov
cmp
arpl
loop
sbb
int3
test
stos
and
xchg
or
dec
sub
push
decl
imul
dec
dec
test
mov
pushf
movsl
out
nop
movsb
xchg
into
stos
popf
sbb
pop
ret
inc
sar
fcomip
jmp
cmpb
lods
push
fcompl
mov
push
fisttps
mov
sbb
push
jnp
inc
out
or
push
insb
lcall
or
pop
and
in
mov
cmpsb
in
mov
cmpsl
je
pushf
inc
ljmp
mov
clc
mov
addb
add
or
mov
jmp
mov
hlt
cmp
roll
sub
push
mov
push
insb
das
call
mov
xchg
pop
mov
pop
push
sbb
cwtl
mov
cwtl
add
mov
ljmp
or
in
rorb
stc
add
pop
cltd
into
fdivrl
ljmp
cs
int
pop
xor
cmp
mov
or
mov
notb
cmp
repnz
cmp
clc
pop
cmp
cmpsb
jno
push
fwait
dec
xchg
arpl
sbb
add
ljmp
mov
mov
adc
sbb
mov
adc
jmp
mov
loop
lea
pop
inc
aad
xchg
cmp
outsl
pop
cmpsb
in
mov
and
adc
sbb
mov
add
std
aam
sbb
mov
jg
and
inc
mov
mov
imul
mov
mov
lock
into
push
add
adc
repz
stos
loopne
enter
jecxz
push
sbb
ljmp
xor
repz
in
mov
addl
cs
xor
incl
xchg
mov
jmp
pop
jo
pop
sbb
data16
test
jge
dec
and
push
jo
add
rolb
or
fstpt
cmp
pop
test
cli
jecxz
andb
aad
push
add
pop
cwtl
add
cmp
pop
xchg
xor
xchg
or
xchg
dec
flds
sbb
nop
pop
cltd
in
mov
mov
je
mov
mov
push
aam
ret
jge
mov
movsl
pop
fistpll
cmp
aam
inc
dec
or
sub
and
adc
cltd
xchg
cmp
mov
lcall
pop
inc
jg
stos
or
or
mov
ss
lods
or
cltd
nop
and
movsl
stos
inc
test
cmpsb
mov
jne
adcb
adc
mov
jne
cmpl
sbb
mov
adc
mov
ficoml
mov
sbb
sub
jb
popf
or
mov
cmp
pop
mov
push
and
xor
out
add
fsubs
push
dec
sbb
xchg
dec
imul
inc
call
mov
lds
jge
call
mov
mov
jmp
mov
adc
xor
jp
inc
mov
mov
cmp
ljmp
jg
and
add
ret
dec
cmc
sbbb
aas
testl
mov
cmp
rcl
mov
add
lock
pop
jg
mov
seto
pop
fsubs
push
or
add
mov
fbstp
call
or
mov
mov
pop
inc
jmp
sub
and
mov
push
sbb
call
rorl
jp
mov
mov
mov
dec
push
dec
push
test
inc
mov
lcall
jnp
jecxz
mov
leave
add
out
fcomip
call
sbb
fwait
out
int3
add
mov
fadds
jo
aad
and
dec
push
jg
fnstsw
lock
lds
sbb
sub
fbstp
ret
movsb
ret
xor
add
sub
std
fdivrl
jnp
aam
adc
outsl
xchg
enter
jecxz
cmc
cmp
xchg
imul
fadds
add
sbbb
and
pop
jg
cmp
inc
int
mov
pusha
sub
fisttpl
ds
arpl
aaa
fcompl
ljmp
cli
fistps
cmp
pusha
lret
push
mov
or
mov
out
sub
ljmp
inc
loope
pop
jne
jnp
xlat
push
pushf
lret
jle
icebp
std
xlat
in
gs
bound
push
or
ljmp
jbe
gs
adc
xor
add
add
and
sub
sub
fildll
cs
add
pushl
jle
nop
loopne
std
and
xchg
imul
nop
pop
push
jmp
mov
pop
hlt
lods
fnstenv
cwtl
mov
in
inc
cmp
sbb
aad
lcall
mov
stos
xor
mov
movsb
cmc
mov
and
incl
pop
aam
cmp
jge
inc
xor
stos
popf
or
adc
dec
mov
push
xorl
sbb
fwait
aam
int3
in
and
lcall
or
test
rclb
xchg
fcompl
pop
inc
sub
mov
add
and
subl
mov
jmp
loop
test
fiaddl
shlb
test
nop
xor
movsb
or
outsl
sub
sbbb
insb
arpl
mov
adc
push
xor
cli
pop
add
movsb
cs
adc
mov
push
adc
xchg
fsubrl
fimuls
ja
imul
fstpl
push
std
cmp
sub
cmpsb
dec
in
jne
enter
aaa
leave
shrb
push
stos
lock
adc
adc
mov
inc
xchg
mov
inc
loop
jp
in
push
data16
out
push
aaa
gs
data16
fucomp
insl
pop
int
hlt
adc
fisttps
push
jl
out
mov
add
mov
rcrb
rcl
lock
fistps
sub
or
fnstsw
je
fs
xchg
and
lock
data16
pop
mov
stc
popf
fists
fs
out
popl
jg
cmp
mov
cmp
xor
int
fidivl
sbb
movl
sub
mov
add
leave
sub
and
adc
lock
sub
lock
jmp
test
outsb
add
rclb
mov
adc
leave
loop
or
adc
jecxz
call
in
nop
xchg
out
add
aam
mov
das
cli
pushl
cmpsb
ss
bound
dec
jno
push
jg
lea
or
out
add
lcall
call
sbb
pop
sub
mov
pop
add
mov
stos
sub
add
add
and
shll
mov
insl
mov
cmpsb
les
mov
pushl
or
rclb
or
cmp
push
ret
mov
in
jmp
pop
ret
xor
shr
or
lcall
incb
insl
mulb
getsec
push
push
mov
push
out
std
pusha
mov
ss
jnp
cltd
ja
vpshaw
incl
add
or
call
in
orl
in
das
call
jmp
pushl
dec
outsl
pop
jbe
call
jge
add
add
dec
push
sbb
mov
incl
nop
addl
inc
mov
xchg
es
ret
aam
cmp
das
or
movsb
push
lds
mov
das
mov
pop
xorl
int3
mov
mov
pop
lock
ja
loopne
scas
popf
shl
xchg
cld
cltd
call
std
or
pop
pop
pop
jne
push
setge
mov
incl
mov
mov
cmp
fcomip
testb
dec
push
jbe
push
xchg
inc
and
and
lcall
push
jl
or
adc
xor
mov
lcall
repnz
mov
or
lcall
xor
jae
mov
cmpsl
cmp
xor
insb
mov
cmp
movsl
ljmp
ljmp
jle
xchg
jae
shll
hlt
pop
mov
inc
push
cmp
mov
pushl
rcrl
ret
jbe
hlt
pop
cmpsb
hlt
or
mov
fsubp
xchg
insl
dec
fs
jnp
and
jmp
std
cmp
ss
es
decl
sahf
inc
icebp
movb
mov
in
psadbw
pop
lock
mov
cli
jnp
loopne
xchg
mov
outsl
inc
aam
and
decl
sub
cmp
inc
outsb
aas
cmp
jbe
xlat
scas
sub
sub
inc
jg
or
inc
xor
cmpsb
cli
loope
enter
pop
pusha
xlat
xchg
lret
je
sbb
add
xor
call
and
jle
in
notl
ljmp
add
pop
mov
andb
add
jecxz
or
cmpsb
repnz
sbb
lods
pop
xor
cmpsb
xchg
pop
dec
fdivl
bound
out
inc
in
sub
inc
repz
and
daa
push
lcall
mov
push
or
xchg
lods
xor
or
xor
loope
xor
sbb
sub
jle
call
inc
orl
add
add
ds
sahf
insb
mov
sbb
mov
movsl
adc
ds
or
sbb
sbbl
bound
rcrb
pusha
adc
lods
cmc
lcall
jb
and
aam
mov
mov
fnstenv
and
fbld
in
out
aad
fs
stos
lods
sub
insl
fisubrs
decl
sub
inc
loopne
dec
rclb
or
push
cmpb
int
mov
cmp
pushl
xorl
jp
push
cmpsl
push
jg
lock
outsb
out
add
sub
pop
push
adc
mov
loopne
subl
jg
das
outsb
fdivrl
repnz
mov
repz
ret
inc
sbb
mov
fidivrs
int3
ficompl
xor
sbb
pushl
xor
iret
cli
ja,pt
shl
dec
jle
jl
add
aaa
loopne
hlt
out
clc
incl
fs
dec
push
aam
pusha
addb
push
xor
mov
dec
add
inc
loope
xor
aam
dec
test
decl
sbb
adc
pop
movsb
adc
in
cld
jg
sub
fidivl
fincstp
pusha
test
xchg
push
inc
xor
pop
or
xchg
mov
push
or
rorl
nop
inc
std
xor
cmp
or
cmp
roll
in
jg
jmp
inc
loop
movl
iret
hlt
mov
ljmp
cmp
popf
sbb
flds
sub
popf
xor
adc
lcall
incl
mov
les
dec
dec
inc
pushw
cmp
xchg
dec
mov
inc
dec
aaa
inc
aam
and
xor
incl
stos
add
sub
pop
jg
xor
in
pop
cmp
dec
test
pop
fxam
sub
scas
pop
stc
pushl
rclb
arpl
push
pop
pop
out
sbb
push
aad
mov
inc
adc
imul
lods
cmp
pop
int
icebp
imul
filds
lock
inc
sbb
mov
pop
adc
aaa
in
and
push
inc
repnz
pusha
ficomps
mov
in
push
dec
cli
call
jne
loope
inc
jno
adc
pop
cmc
fcmovnb
sbb
insb
pop
je
inc
dec
aam
sbb
mov
pop
inc
adc
jmp
ljmp
lahf
jbe
scas
clc
jg
ljmp
cmp
std
pop
and
push
test
xchg
jp
fcos
pushl
std
sub
mov
xchg
and
popf
mov
dec
pop
cwtl
and
push
das
mov
mov
fnstsw
cli
inc
sbb
inc
mov
add
sbbb
sbb
sub
decl
inc
mov
sbb
and
or
push
hlt
mov
in
jg
rolw
fildll
xor
lea
ret
xchg
std
sbb
decl
aad
in
push
jae
sub
sahf
scas
rol
mov
cli
hlt
movsl
push
xor
pushl
in
and
nopl
and
lods
ss
mov
lock
jg
dec
inc
pop
addr16
test
fdivrl
sbb
test
fildll
clc
outsl
mov
loope
in
push
xor
jg
add
loopne
pusha
mov
mov
fisttpl
push
call
cld
sub
js
rolb
repnz
pop
nop
pop
scas
cltd
or
push
fisttpll
pushl
jne
mov
rorl
fmuls
dec
enter
or
or
call
and
adc
leave
lcall
sbb
inc
add
insb
pop
popa
in
push
adc
xchg
call
or
iret
pusha
test
or
cwtl
cmp
nop
jecxz
jmp
addb
daa
sti
xor
push
xor
adc
insb
lcall
add
je
lcall
xchg
icebp
ds
jl
addl
cmp
xchg
adc
test
mov
jo
sar
fisttpl
imul
cltd
in
test
fxch
jle
push
nop
pushf
add
xchg
lea
lahf
jecxz
jecxz
nopl
push
je
cld
out
test
les
popa
jmp
xchg
repnz
movsl
xor
lcall
xor
sub
jbe
rcrb
or
nop
ds
push
and
out
movsb
mov
and
sub
cltd
push
imul
incl
add
and
jge
arpl
add
adc
sar
jmp
shrb
push
inc
nop
jg
inc
pop
outsb
call
loopne
cmpsl
aas
or
popa
mov
cmp
popa
orl
ljmp
stc
fwait
lahf
push
mov
sub
js
add
push
test
cmp
or
lock
pop
adc
jb
sti
dec
mov
mov
fsub
inc
mov
loopne
add
xchg
mov
or
push
and
add
xor
add
pop
cmp
sbb
mov
decl
mov
insl
pop
pushf
jg
jo
fiaddl
jg
pusha
cld
in
les
loopne
adc
mov
mov
outsb
add
sbb
sub
jno
push
mov
sahf
adc
mov
sbbb
sub
dec
cmpsb
cmp
jecxz
insb
mov
ljmp
data16
decl
mov
mov
mov
loope
adc
ror
shll
in
and
sbb
repnz
xchg
clc
outsl
cmpsb
js
cmpsb
sub
fcmovb
inc
jb
jmp
mov
mov
push
ficoml
aad
push
sub
popa
mov
outsb
push
xor
or
jmp
rorl
xlat
movsl
add
inc
adcl
decl
or
lds
dec
fildl
jo
rcrl
push
add
xchg
xchg
outsl
pop
add
jmp
xor
sbb
xchg
push
clc
in
push
add
inc
xor
xor
mov
das
js
xchg
inc
xrelease
js
ljmp
out
inc
lcall
mov
stos
enter
push
lcall
adc
mov
aaa
rcrl
scas
rorb
cltd
cmp
dec
dec
jecxz
mov
orl
sub
mov
fiadds
push
arpl
fs
popa
adcb
xchg
mov
sbb
add
dec
push
dec
ljmp
cmpsb
fisubrl
sub
adc
jp
test
ljmp
fisttpl
sub
adc
into
jne
push
mov
jmp
lcall
xchg
std
rclb
xor
sti
add
cmp
bnd
outsb
jne
xor
mov
ljmp
test
movsl
adc
aas
jle
xchg
arpl
cli
push
lret
lea
sbb
test
mov
loop
xchg
sbb
fimuls
adc
ret
es
and
cmc
fmull
stos
jmp
outsb
into
in
inc
ficoml
inc
fstp
jle
mov
mov
or
int3
les
xor
dec
mov
cwtl
int3
push
imul
cmc
adc
sbb
sbb
lock
push
lock
insl
push
fcompl
outsl
mov
addr16
call
ret
dec
sbb
xchg
adc
xor
ds
add
add
xor
ljmp
andb
pusha
pop
repnz
dec
mov
push
jl
jns
pop
pop
cli
dec
pop
test
mov
pushl
sub
lods
fsubrs
mov
mov
mov
fsts
lret
mov
push
xorb
sar
mov
ret
xor
mov
jge
or
cld
shlb
clc
cmp
inc
outsl
scas
mov
ljmp
pop
incl
sbb
sbb
mov
movsb
ds
adc
test
scas
subb
loope
stos
roll
pushl
js
xor
into
mov
ljmp
fadd
out
xchg
rorb
add
mov
xor
cmp
je
mov
addr16
inc
rorb
pop
mov
jae
lock
dec
imul
mov
ds
sbb
ret
jmp
sub
leave
xor
sub
pop
daa
imulb
inc
adc
sbb
hlt
fcmove
scas
incl
xchg
scas
into
leave
inc
add
dec
std
mov
sbb
dec
adc
mov
ljmp
or
and
in
insl
sub
ficomps
xor
ss
xor
add
loop
mov
roll
sub
adc
cli
incl
dec
sbb
sbb
sub
lcall
loopne
cmp
test
pop
jl
mov
add
push
xor
pop
enter
push
call
mov
cmp
mov
push
or
xor
mov
cltd
int3
insl
inc
int
adc
lea
mov
mov
mov
pop
or
movsl
and
fnsave
dec
jne
rorb
inc
pop
leave
inc
je
pop
jbe
adc
cmc
jns
or
cmp
ftst
pop
jb
sbb
dec
jno
popa
call
sbb
push
sbb
mov
push
ljmp
sbb
mov
jne
xchg
pushf
sbb
rcr
xchg
loopne
leave
dec
push
adcl
adc
inc
push
jle
cmp
xchg
into
add
loopne
mov
push
dec
clc
test
call
dec
inc
lahf
fisubrl
mov
mov
cmc
pop
sbb
pop
push
push
enter
pop
jne
jb
push
mov
stos
clc
rclb
sub
mov
test
mov
shll
jl
lret
scas
mov
adc
mov
popf
pop
or
push
jb
ss
or
xor
int
xchg
inc
add
fldt
xor
push
mov
add
dec
test
mov
lcall
sbbb
mov
lahf
adc
mov
hlt
loopne
ret
aaa
add
push
add
or
iret
adcb
scas
addps
mov
out
vpunpcklqdq
sub
jg
mov
lret
jo
or
mov
lods
inc
adc
pop
ljmp
adc
and
mov
cmp
mov
mov
inc
repnz
push
out
rorb
mov
sbb
adc
and
les
or
ja
push
fistpl
fwait
jmp
jb
and
incl
adc
sbb
in
pop
aad
hlt
call
mov
and
sahf
jmp
push
test
pop
icebp
pop
sbbb
dec
adc
int3
jo
sub
aaa
xor
or
fidivrl
outsl
mov
enter
rcrl
fstps
enter
mov
leave
ret
lock
lret
push
jge
mov
mov
mov
mov
inc
call
inc
pushl
in
leave
sbb
inc
mov
sbb
add
dec
xchg
jle
and
cltd
dec
in
mov
mov
and
lcall
dec
dec
add
mov
lcall
push
js
test
add
js
rol
inc
cs
dec
lods
add
add
idivb
lods
inc
jg
push
pop
push
push
popa
inc
jo
dec
jo
push
cmp
lcall
sbb
push
ja
or
or
inc
jp
sti
xor
sub
inc
mov
add
xor
incl
xchg
push
lock
pop
add
aad
movsb
sbb
sbb
lret
push
insl
adc
scas
cli
jg
pop
dec
mov
pop
dec
loopne
call
call
rorb
movsl
jne
push
lods
fstl
mov
jb
xlat
cmp
pushl
push
in
rcr
cwtl
xchg
adc
sarb
lcall
adc
and
mov
popa
mov
decl
mov
adc
inc
in
and
pop
in
push
push
sbb
lock
jnp
dec
pop
fisubs
jns
out
fiaddl
cmpsb
jl
inc
adc
mov
adc
add
loope
int
sbb
pop
test
xor
incl
cmpb
call
sbb
lahf
sbb
data16
lds
cmp
dec
pop
cmc
jg
fbstp
sub
sbb
iret
dec
incl
or
lock
sbb
call
test
dec
jle
add
jl
mov
ret
les
test
push
jge
test
mov
or
push
pusha
adcb
dec
add
inc
pop
call
dec
aaa
push
jbe
cmp
mov
ds
popa
pusha
addb
mulb
xchg
add
push
push
pop
test
gs
rcrl
jl
xchg
dec
fcmovbe
mov
inc
dec
dec
call
inc
or
stc
sub
std
jmp
mov
mov
int3
add
inc
lds
jno
pop
decl
bnd
xchg
push
push
popf
pop
lea
ret
enter
nop
mov
lcall
test
or
mov
ficoms
adc
sbb
mov
pusha
lahf
ljmp
sahf
fiaddl
jmp
xorb
mov
gs
aam
jp
xor
scas
cltd
push
cmp
es
or
cmpsl
outsb
mov
mov
rcl
lret
inc
inc
pop
push
lcall
imul
test
add
mov
mov
nop
mov
xchg
in
js
dec
pop
je
and
movsl
and
lcall
dec
xchg
lods
adc
lock
lcall
cmp
pop
sub
data16
fisubs
enter
addr16
sub
inc
add
sbb
add
inc
roll
mov
jmp
jmp
lss
pop
ss
mov
mov
repnz
and
and
decl
adc
mov
cli
jmp
xchg
loopne
js
insb
dec
add
insb
push
loope
lcall
stc
cs
das
mov
jmp
out
inc
insb
aam
xlat
stc
dec
adc
enter
pop
int3
xchg
loope
jb
and
cltd
mov
and
pushl
xchg
cmc
push
pop
and
fbld
fcomip
jg
and
lret
lock
fs
dec
sahf
jle
xchg
jo
hlt
jg
call
leave
fucom
inc
fcmovne
pop
push
insb
loope
push
out
and
mov
inc
jo
ja
std
incl
jo
ljmp
and
loopne
mov
flds
and
loop
sub
cmp
jecxz
fcomip
mov
out
jl
inc
lods
xchg
lcall
xlat
sub
pop
cwtl
push
imul
mov
inc
adc
sbb
mov
loopne
lcall
sub
xchg
pop
dec
inc
test
loope
test
add
fisttpll
dec
icebp
pushf
test
push
out
jno
xchg
pusha
mov
int
xchg
enter
cwtl
mov
sbb
xor
cltd
mov
fwait
cmp
mov
test
repnz
mov
test
or
jg
cli
test
scas
rolb
scas
push
dec
sbb
ror
addl
mov
mov
push
scas
mov
lcall
mov
pop
fs
add
call
mov
push
movsl
push
dec
rolb
lret
fcmovb
mov
addr16
fmull
jle
ret
push
repz
cmpsb
ljmp
lcall
or
inc
add
aad
lock
inc
push
or
inc
jns
and
pusha
call
sbb
clc
fdivrp
stc
and
fldenv
sub
xchg
push
loope
int
xchg
hlt
scas
jg
dec
fmulp
gs
inc
sbb
aam
loope
or
call
std
popf
adc
repnz
push
shll
add
jmp
sub
mov
sub
jg
call
cmpsl
pop
out
movsb
les
adc
lea
xor
rcll
das
cli
inc
pop
dec
jo
xor
shll
xchg
xor
add
xchg
mov
call
or
addb
jmp
add
or
xor
sbb
rcr
lahf
and
decl
cmpsb
addb
xor
jns
xlat
cmp
mov
mov
inc
xor
ljmp
flds
ret
sub
inc
push
fcoml
inc
in
outsb
mov
push
sub
inc
xor
adc
cmp
xor
xor
adc
cmp
lcall
push
scas
test
adc
ss
call
mov
pop
std
xor
mov
push
jmp
rcrb
or
add
sbb
jmp
fstl
and
iret
and
jmp
xchg
push
xor
or
or
or
cld
pop
pop
pop
push
dec
inc
and
push
mov
fsubrs
push
test
add
loope
icebp
out
or
sahf
sbb
pop
ror
enter
adc
inc
sarl
int
add
lret
shl
pushl
dec
dec
loop
test
dec
sub
sub
pop
ljmp
adc
movsb
mov
pop
or
jle
add
jmp
cwtl
cmp
pusha
pop
jp
or
push
pop
mov
icebp
lods
sbb
clc
lods
cmpsb
aaa
fdivr
and
or
clc
and
cmpsb
add
and
or
mov
decl
pop
or
xor
xor
loope
mov
inc
fisttps
xchg
mov
movsb
mov
stos
sbb
inc
adc
test
push
lret
sub
das
add
inc
lods
or
in
pop
push
inc
xchg
loop
push
repz
scas
jmp
mov
ss
lret
mov
test
movsb
dec
mov
push
jp
test
outsl
lods
mov
je
test
dec
ljmp
mov
lcall
pop
test
fsubs
cld
sbb
xchg
lcall
jmp
cli
or
and
jecxz
ret
ljmp
cmc
pop
inc
insb
jge
ret
sub
push
or
inc
or
or
ljmp
sub
add
aad
inc
inc
dec
mov
xchg
xchg
fst
or
xor
mov
pop
adc
mov
sbb
pop
cmc
aaa
cld
jge
inc
sbb
into
inc
sbb
mov
imul
fidivrl
lock
and
dec
fs
pusha
ljmp
les
mov
jns
or
push
sahf
mov
imul
push
inc
ja
or
adcl
test
adc
and
add
pop
cmp
jmp
lcall
mov
in
fbstp
sub
das
clc
sbb
loopne
sub
data16
shlb
fcomip
call
cmp
sbb
sahf
shrl
xchg
jge
mov
jl
leave
addb
ljmp
pop
add
jecxz
dec
or
mov
call
cmp
icebp
icebp
mov
jbe
add
jg
pop
cmp
jbe
movl
ja
jp
lds
addr16
xor
rorl
cmp
xchg
mov
mov
push
in
cmp
pushl
loop
je
sti
push
mov
fisubrl
add
sahf
lret
adc
push
jge
jmp
decl
jno
inc
sub
add
cmp
cmpb
mov
jge
fisttps
inc
xchg
or
fs
and
and
add
lcall
adc
add
pop
adc
cmp
mov
cmp
ret
ljmp
decl
mov
and
mov
push
das
xchg
imul
sbb
push
inc
inc
dec
mov
sbb
pusha
adc
int3
and
add
and
or
sub
arpl
adc
outsl
push
movsb
inc
adc
jge
push
jl
out
push
test
js
dec
shrb
mov
sahf
xor
push
or
shl
pop
cs
sbb
test
cmp
fs
imul
pop
jg
mov
inc
inc
jne
aaa
sbb
push
pop
popf
ljmp
pop
es
pushf
pop
cmp
mov
adc
int3
adc
cmp
call
lret
or
std
mov
sbb
inc
xchg
arpl
xor
and
add
xchg
cmpsl
pop
add
adc
xor
popf
pushl
nop
aam
aaa
addb
jno
jl
add
scas
and
xor
lea
xchg
dec
popf
pop
xchg
add
bound
aas
test
loop
test
jg
addl
jge
repz
mov
cld
ja
scas
aas
cli
in
outsl
cld
stos
out
cli
inc
pop
dec
push
lods
xlat
push
and
es
adc
int3
push
aas
add
sub
sub
xchg
mov
pushl
dec
sub
les
dec
lock
jno
pop
inc
test
cld
add
mov
sarl
jnp
gs
es
inc
or
lcall
call
orl
adc
test
push
xchg
mov
loope
sub
stos
xchg
decl
sub
jb
mov
loop
int
test
mov
xor
scas
pushf
dec
dec
jg
fbstp
mov
push
data16
xor
cwtl
mov
sarl
xchg
cli
or
lret
gs
mov
mov
jp
and
ljmp
mov
mov
jp
or
pop
lcall
pop
add
in
cltd
adc
jns
xor
mov
stos
bound
pop
dec
xor
fisttps
xchg
mov
sub
cmpsb
gs
mov
js
aaa
addb
xchg
pop
cmpsb
inc
stos
and
jg
jmp
sub
pop
or
sbb
pop
mov
mov
enter
mov
jbe
rcr
cmp
dec
mov
addb
scas
xchg
sub
mov
adc
scas
faddl
adc
mov
mov
sub
xchg
and
xor
xor
ljmp
insb
sub
nop
cmpsb
xor
push
stos
into
mov
outsb
mov
add
or
push
fadd
nop
sbb
into
test
into
mov
aaa
sahf
call
or
clc
mov
out
insb
lods
xor
mov
outsb
cs
mul
rcr
or
add
jecxz
rolb
mov
movsb
outsl
lea
fiadds
push
mov
pop
mov
in
mov
adc
mov
cld
and
scas
or
cli
idiv
jb
push
fwait
dec
pushf
inc
and
xor
mov
push
leave
sub
ljmp
add
cltd
bound
xchg
mov
sub
imul
fstl
and
add
inc
adc
dec
imul
les
fcompp
push
jmp
inc
in
test
test
scas
lods
call
push
rolb
loop
loopne
mov
jmp
test
cwtl
xor
mov
std
adc
mov
and
dec
shl
adc
incl
sti
cmp
push
jg
scas
add
sub
push
call
rolb
scas
imul
add
incl
adc
and
cmp
or
and
adc
add
inc
cld
lcall
and
andb
cmp
pop
adcb
stos
hlt
and
jg
dec
stos
xor
mov
jp
int3
inc
sub
sbb
and
adc
adc
ret
mov
mov
inc
leave
loope
enter
add
fsubl
mov
xor
jb
inc
inc
fsubp
dec
add
jmp
pop
push
dec
cmp
pop
push
mov
fistpll
jbe
es
loopne
or
orb
and
cmpb
push
ret
or
xchg
xchg
iret
fxch
in
sbb
xchg
movsb
cli
outsl
mov
bound
xchg
stc
mov
scas
nop
xchg
repz
shll
dec
mov
nop
xorb
lea
insb
push
cs
and
test
fdivl
aas
adc
int
sub
repnz
aaa
sbb
adc
std
fildll
popf
jmp
jge
push
filds
cwtl
mov
cltd
sub
pop
sub
ljmp
or
cmpsb
sub
dec
in
and
push
int3
pop
mov
stos
sub
inc
push
sub
daa
push
lods
out
push
ljmp
test
pop
dec
jge
mov
mov
mov
and
jbe
lock
jle
sbb
jnp
add
fnstsw
dec
jmp
adc
inc
jg
add
pop
inc
push
out
mov
cmpsb
xor
sub
aam
jle
pop
pushl
shll
mov
jbe
add
es
pop
inc
mov
adc
gs
test
pop
out
xchg
lods
cltd
mov
push
or
pushl
mov
and
les
stc
or
lret
push
shll
or
mov
push
jmp
mov
sarb
ret
xorl
mov
sbb
je
sbb
jmp
add
in
push
jnp
pop
sar
out
aam
mov
sbb
popl
jecxz
xchg
arpl
jecxz
jnp
jae
imul
popl
enter
loope
mov
pop
decl
test
fdiv
adc
decl
loop
test
fs
sub
inc
xor
sbb
nop
cmp
push
mov
push
add
xor
pop
aaa
mov
je
adc
subb
movsl
popa
mov
and
adc
xchg
je
jns
stos
fnstsw
mov
scas
dec
fsubrl
push
popf
pop
pop
xchg
jb
fs
xchg
dec
adc
aaa
sbb
push
ljmp
adc
lds
push
cltd
adc
cmpb
je
imul
ret
add
movsl
xor
pop
sub
incl
loope
scas
mov
push
dec
inc
and
clc
xchg
shrb
push
push
xor
add
dec
std
aaa
loopne
leave
push
insl
aad
mov
jg
xor
push
sub
mov
push
les
test
push
sub
adcl
scas
jo
mov
lcall
push
fwait
or
or
sub
aad
xor
dec
int3
bound
dec
mov
aad
decl
mov
add
out
inc
sbb
adc
inc
lea
sbb
pop
push
stos
jns
cmp
jmp
fwait
out
push
rcl
mov
cmpsb
add
leave
sub
decl
cmpsb
scas
mov
cmp
cmp
inc
in
js
xchg
jb
imul
fstl
push
mov
jne
out
es
sarb
push
sub
call
mov
mov
stos
sarb
mov
xor
jnp
jns
insb
imul
xchg
mov
sbb
pop
inc
mov
mov
ja
mov
aam
test
fisttpl
cs
lds
movsl
push
add
and
mov
into
push
sahf
jle
into
inc
aad
xchg
lcall
cmp
adc
xor
and
mov
mov
movsb
mov
push
xchg
pop
sbb
xor
xor
cwtl
cmp
es
jbe
mov
dec
push
call
push
add
daa
mov
push
in
xor
pusha
pop
sbb
mov
xchg
inc
and
adc
repz
sub
or
xchg
jae
leave
rcrb
pop
pop
xchg
inc
mov
cmc
cmpsb
decl
xchg
push
push
loop
mov
movsl
and
add
rorb
adc
scas
or
andl
dec
loop
iret
or
push
je
pop
xchg
out
insb
sar
cmp
xchg
mov
pushf
dec
das
decb
xchg
data16
lcall
jmp
sbb
cwtl
dec
js
inc
xor
cli
mov
inc
mov
push
dec
shrb
xchg
xchg
insb
pop
bound
jo
add
jecxz
call
or
fdivrs
pop
xlat
arpl
stos
mov
loop
nop
outsb
shlb
mov
sub
rorb
data16
pushl
in
add
cmp
sbb
movsb
and
cmp
jmp
daa
fisubl
fadds
aad
pushl
fstl
cmp
loope
imul
add
inc
jnp
inc
int
or
into
ss
jns
daa
bound
push
and
ret
lret
xor
jnp
sub
xchg
lods
and
cmp
jmp
lock
add
xor
aad
test
test
iret
inc
inc
in
adc
jmp
inc
sub
and
xor
or
bound
loopne
xor
add
and
jg
push
lret
cmovbe
push
adc
cmp
dec
rorb
std
jmp
in
or
lock
push
out
jb
jecxz
in
fs
add
add
adc
enter
imul
icebp
pop
sub
dec
and
test
adc
nop
adc
rcrl
push
lcall
jg
cs
mov
jmp
ret
jo
mov
xor
inc
dec
hlt
sbb
call
pushl
movsb
adc
cmp
rcll
cld
inc
adc
inc
jo
ljmp
inc
orb
nop
or
ljmp
dec
insb
push
test
scas
int
dec
addr16
lods
mov
in
stc
sub
clc
pusha
or
add
imul
addb
je
mov
inc
pushl
les
out
cld
clc
dec
sahf
test
call
ja
or
fcmove
in
cli
push
cld
inc
jbe
dec
mov
sub
out
lods
jp
outsb
pop
push
add
adc
or
lret
js
lds
add
insb
clc
inc
lcall
in
int
lock
and
mov
jge
cmpb
ljmp
bound
sbb
pop
dec
mov
or
dec
dec
mov
sub
cld
dec
jnp
gs
mov
ljmp
push
into
stos
push
xchg
inc
jb
mov
scas
dec
clc
dec
jo
xor
cli
into
daa
sub
das
inc
outsb
pop
shlb
ljmp
xorb
add
mov
ss
lea
cmp
test
mov
imul
out
cli
repnz
ljmp
or
mov
test
cmp
cli
rcrb
add
mov
ja
xchg
push
xchg
insb
faddl
mov
jbe
mov
or
inc
fisubl
and
sub
xor
mov
aas
mov
test
lret
adc
or
xchg
in
loopne
cli
cwtl
sub
push
cld
pop
pop
mov
sub
adc
jmp
sbb
xor
scas
sbb
xor
dec
lods
in
std
add
mov
mov
pop
xchg
pop
int
stos
xor
psrad
inc
push
roll
dec
add
or
loop
dec
js
fdivr
fildll
and
inc
mov
pop
or
xchg
xchg
push
mov
in
ljmp
push
repnz
inc
and
or
push
add
repnz
rcrl
and
rorb
leave
in
adc
push
in
and
push
js
ds
fcomip
jmp
ret
lods
call
pushf
cmp
out
rclb
jmp
jbe
gs
inc
aaa
inc
or
jle
pushf
cmpsb
or
outsl
icebp
ficoms
repnz
ss
nop
inc
or
lods
jb
popf
fcoms
or
mov
lods
hlt
lcall
ljmp
cmp
fbstp
xor
cs
outsl
jl
inc
jne
adc
xchg
into
xchg
dec
je
test
sbb
dec
xor
and
xor
lcall
icebp
xor
jecxz
sbb
dec
xchg
bsr
imul
mov
push
xor
xor
inc
in
dec
sbb
push
push
out
test
les
iret
call
lock
lock
adc
xor
push
out
sahf
pop
push
stos
decl
push
mov
lret
add
cmc
xchg
dec
roll
sbb
add
roll
jb
ret
jg
mov
into
sbb
outsb
push
adc
push
and
add
or
push
int3
mov
outsl
push
call
pop
lds
jp
cmpsb
je
push
jmp
xor
mov
push
out
and
mov
inc
mov
fcmove
add
and
inc
sbb
pushf
adc
sub
adc
inc
mov
ja
cmp
xchg
out
mov
rcrb
push
xor
push
mov
inc
shll
das
mov
lods
inc
sub
cli
sub
inc
mov
mov
mov
and
lcall
cmp
hlt
mov
ljmp
shll
ja
fadds
adc
clc
bnd
insl
shll
roll
mov
in
adc
dec
inc
jb
push
add
push
push
add
ljmp
or
inc
dec
movsb
das
ret
scas
inc
call
jb
out
andb
or
mov
stos
mov
je
hlt
lods
lds
jo
shll
adc
scas
and
out
jecxz
scas
and
jmp
xor
ljmp
loope
dec
push
arpl
subb
cmp
cmpsb
hlt
push
add
and
xor
or
sub
pop
das
pop
iret
mov
addr16
loope
sub
std
ret
cmp
push
ja
jmp
ret
decl
dec
out
jo,pn
icebp
lods
out
insb
fnstenv
add
jg
xor
xchg
dec
mov
fs
fistps
out
jl
shl
sub
sub
clc
mov
jne
sub
in
ret
pop
insl
pop
clc
gs
xor
lods
xor
adc
mov
inc
xchg
cmp
push
rcl
xor
shlb
inc
sub
add
mov
idivb
clc
adc
cmc
sbb
pusha
dec
mov
cmpsb
insl
call
cmp
les
iret
pop
xchg
push
fnsave
push
cld
les
xchg
inc
xchg
cltd
js
add
std
or
dec
xchg
loope
lcall
fisttps
call
add
dec
add
push
sub
jmp
or
out
pop
or
mov
repnz
mov
std
fidivl
mov
push
jo
out
push
add
call
xchg
push
lret
test
xorl
push
test
nop
aad
push
test
push
sbb
xchg
push
xchg
sub
das
add
sbb
xchg
sub
push
and
in
sub
call
cli
mov
stc
je
stos
inc
lds
loope
test
das
ss
cmp
cmpsl
pop
jmp
pop
push
cld
jg
or
lret
fdivp
add
ret
mov
and
out
xor
jb
sub
mov
inc
push
xchg
orb
fidivrl
lretw
cmp
pop
iret
adc
mov
and
dec
pop
pushl
inc
arpl
outsl
xor
sbb
mov
jecxz
aaa
xchg
inc
add
cmp
call
mov
sbb
push
sbb
imul
ffreep
imul
jno
mov
outsl
xchg
mov
pusha
jae
mov
outsl
sub
cmp
div
pushl
cld
dec
adc
mov
je
hlt
inc
sub
cld
fadds
inc
push
and
ljmp
and
fsts
dec
notb
lods
dec
fstl
jg
in
gs
movsb
mov
ret
hlt
scas
xchg
push
lcall
jnp
pop
in
push
adc
scas
mov
scas
inc
jmp
or
pop
stos
lock
mov
or
outsb
pop
call
fucomip
cmovl
stos
lods
incl
push
adc
test
and
or
std
call
mov
mov
test
pop
sbb
iret
out
or
xlat
jecxz
jmp
mov
xchg
mov
loope
ret
sbb
xor
inc
mov
stos
sub
insb
stc
mov
cwtl
shll
js
and
shlb
icebp
jb
and
lods
xor
js
aam
frstor
hlt
push
cmp
push
jmp
sub
lcall
sbb
xor
and
adc
stos
and
stos
jg
and
pop
cmp
es
jl
imul
sub
sbb
push
pusha
popa
dec
inc
stos
divl
adc
jp
mov
add
inc
fisubl
mov
inc
inc
push
inc
sub
push
testb
stos
sub
or
dec
in
or
add
ja
ljmp
add
pusha
or
jae
pop
inc
jl
jg
mov
cli
mov
outsl
dec
mov
push
mov
add
popa
fwait
mov
xchg
push
int3
push
cmp
push
in
pop
hlt
pushl
adc
inc
cmp
test
xor
xor
xchg
in
mov
jmp
dec
push
pop
adc
insb
cmpsl
pushf
mov
dec
mov
sbb
aad
push
add
in
stos
sbb
jg
mov
sub
inc
mov
lret
sub
sub
lods
dec
scas
dec
in
rolb
pop
sbb
adc
ret
ss
jbe
and
stos
jmp
in
in
sub
stos
loop
into
bound
cmp
addr16
decl
sbb
fs
clc
add
pop
aam
mov
push
sub
jnp
aam
mov
pop
out
call
xchg
sub
jne
push
pushf
stos
imul
jg
stc
lock
and
cmp
or
add
cs
mov
call
pusha
jge
inc
cmpsb
xlat
scas
and
ret
or
cmp
cltd
pop
cmc
in
adc
jp
cmp
cmp
jg
add
push
mov
jnp
jl
xchg
fmuls
in
psllw
pop
sbbb
es
push
sub
cwtl
lds
out
inc
andb
mov
test
mov
pop
mov
xor
rolb
cmp
mov
sti
pushl
cmp
pop
lods
cmp
or
shl
sub
xor
in
mov
dec
xor
inc
repz
dec
adc
stos
lock
ljmp
add
fcomps
rorl
and
inc
pushf
xor
mov
aad
sub
pushl
scas
loop
mov
xchg
inc
push
push
sub
mov
push
sbb
orb
jo
jmp
lods
adc
add
fsubl
pusha
mov
dec
sbb
sub
xor
inc
fstpl
cmp
sbb
outsl
and
xor
int3
push
mov
hlt
daa
shll
push
shll
inc
or
adc
mov
lds
add
xchg
stos
jne
lods
ja
lock
pushl
insb
add
scas
xor
inc
mov
jns
arpl
js
and
popa
adc
in
clc
cmpsb
pop
and
insb
out
jmp
mov
das
ret
inc
insb
int3
lret
aaa
inc
cld
cmp
pop
cmc
sub
popf
sub
mov
inc
or
fs
inc
jb
fwait
cs
loop
ja
adc
push
cmpsb
ror
mov
fcomip
cmp
les
sub
dec
and
fmuls
mov
jmp
sbb
inc
push
mov
pop
sar
pop
push
add
in
inc
dec
rclb
fst
arpl
or
dec
data16
addr16
or
dec
popf
jae
mov
push
pop
fstpl
int
ret
clc
jp
rcl
mov
stos
mov
aam
repnz
mov
dec
push
mov
xchg
mov
sbb
lods
and
sbb
call
jmp
lds
jne
sub
into
outsb
test
and
lea
decl
icebp
xor
jnp
inc
in
dec
dec
jecxz
jae
lahf
xor
ficompl
decl
or
test
test
into
push
inc
fsub
cmp
ds
add
out
add
ret
les
dec
mov
push
pop
and
inc
loope
jns
mov
vpcmov
mov
xchg
clc
pop
push
or
mov
adcl
lcall
sbb
je
andb
sbb
data16
mov
or
jecxz
call
enter
inc
mov
ds
sub
sbbl
cmp
xchg
and
decl
push
mov
and
lcall
push
gs
incl
xor
jne
test
sub
or
dec
cld
push
cld
and
addr16
aam
loopne
add
add
adc
lcall
rclb
das
push
aad
insl
add
pusha
xor
lret
enter
mov
and
lods
clc
lock
push
daa
es
cltd
repz
call
xchg
adc
pop
insb
addr16
shll
bound
xor
gs
cmp
mov
or
jg
mov
inc
pop
push
outsl
fldt
mov
enter
mov
jmp
dec
pop
jnp
cmp
mov
fdivr
fstpt
mov
in
lcall
in
mov
clc
add
jne
push
xor
cmpsl
sbb
mov
inc
jl
inc
mov
add
imul
jg
icebp
pushl
js
test
outsl
sbb
int3
mov
cmpsb
cwtl
decl
cli
pop
rcrl
mov
loopne
rcr
add
pusha
pop
lcall
sbbl
and
call
ja
cmpsl
movsb
add
xor
push
dec
push
test
call
adc
and
gs
sbb
lcall
xchg
push
jbe
dec
cmp
push
adc
aas
push
stc
setp
fldenv
jg
push
mov
jmp
mov
mov
mov
cltd
mov
adc
mov
adc
or
cbtw
pminub
test
stos
fildll
xchg
add
adc
pop
dec
jo
pushl
sbb
and
mov
lds
imul
mov
movsb
adc
sub
stc
aam
call
enter
inc
sub
sub
push
mov
cld
incl
push
scas
rcrl
xor
roll
ret
jg
insl
mov
loope
push
push
pusha
pop
jne
push
or
mov
add
push
arpl
mov
cld
sbb
push
pop
add
in
mov
ja
mov
push
cmp
adc
lcall
bound
gs
mov
lock
mov
push
fs
add
mov
ljmp
shlb
addr16
addb
sbb
lea
int
jg
lods
fdivrl
dec
call
js
mov
std
stc
incl
xor
mov
add
cmp
xlat
pop
imul
push
mov
and
mov
and
fstps
lock
je
fiadds
scas
xor
clc
or
out
dec
sub
jmp
lock
insl
movsl
rcrl
push
outsb
ds
jbe
sbb
sub
ljmp
jge
xchg
lods
and
inc
xor
jg
in
pop
out
mov
in
bound
int3
xchg
push
jp
adc
stos
scas
mov
sbb
in
mov
adc
fldt
in
pop
shrb
add
out
dec
jg
and
pushf
jns
or
and
lcall
test
xchg
push
outsb
orl
mov
pop
push
adc
cmp
xchg
sar
jmp
xchg
scas
ljmp
mov
lock
stos
icebp
pop
icebp
pop
lock
in
dec
leave
cmp
xor
aam
inc
and
incl
and
or
and
cmpsb
xor
jp
nop
lret
call
andl
mov
push
jl
shrl
mov
repnz
stos
das
or
sarl
mov
decl
dec
popf
shrb
inc
xor
icebp
dec
ret
decl
sbbl
jmp
sbb
adc
mov
dec
or
ja
or
shll
sbb
stos
jns
lcall
adc
flds
mov
pop
addr16
pop
fcompl
or
fwait
hlt
mov
jecxz
or
nop
jae
je
loop
lods
mov
jns
fimull
pop
mov
jmp
mov
cmpsb
push
jbe
ret
mov
and
or
mov
push
jo
adc
ljmp
loopne
outsl
jns
cmpl
mov
or
push
inc
ja
les
lods
xchg
sbb
call
xlat
loope
dec
dec
push
cmp
pop
dec
dec
dec
loop
out
dec
jg
enter
mov
aas
inc
adc
cltd
pop
push
vmread
inc
xor
cwtl
in
je
daa
arpl
mov
stos
pop
xchg
and
dec
mov
movsb
loopne
mov
cmp
scas
jg
xchg
and
insl
stos
push
fwait
cli
adc
stos
inc
sub
stc
pop
pusha
sub
xchg
adcb
adcb
in
shl
movsb
pop
inc
add
dec
pop
xor
les
dec
jl
stos
xchg
je
sub
dec
adc
xor
pop
add
jmp
jns
mov
xor
scas
sbb
test
jp
push
cmpsb
mov
scas
or
jg
pushl
xor
sbb
popa
dec
repz
iret
inc
push
xor
shlb
lock
das
outsb
and
inc
jecxz
scas
pop
cmpsb
or
jge
pushf
or
inc
mov
hlt
incl
lods
mov
mov
adc
or
popf
popf
jge
aaa
xchg
xchg
incb
pop
divb
push
rorb
ljmp
and
mov
mov
arpl
nop
mov
scas
les
into
jle
imul
jbe
add
add
push
cmpsl
sbb
cli
adc
push
imul
push
fs
ljmp
jecxz
sti
cmp
aas
xor
jns
jae
jns
add
stos
mov
push
or
decl
rorl
sti
test
push
leave
cmp
jno
adc
nop
stos
push
fmul
cs
test
es
call
cmp
pop
cmp
shlb
push
nop
push
aas
pushf
test
mov
inc
outsl
jle
add
cs
mov
xchg
adc
add
sti
inc
sar
dec
je
out
push
jmp
movsb
push
test
out
dec
or
enter
sar
call
push
cmpsl
cli
sub
pop
adc
and
lea
or
test
fcomip
sub
sbb
xchg
adc
sub
dec
inc
sub
sub
mov
fbld
sbb
ljmp
dec
dec
dec
xchg
andb
add
pop
push
sbb
pop
shl
lods
js
leave
test
add
dec
inc
test
or
add
cwtl
mov
inc
or
sarb
pop
jp
xor
shrl
mov
cmp
sub
jns
mov
inc
int3
stos
push
jecxz
push
cltd
inc
decl
pop
movl
mov
cld
and
sbb
ss
xor
lods
and
cmp
std
decl
cld
fxch
aam
sahf
fisttpl
jp
imul
test
call
imul
inc
dec
jg
sub
cmp
sub
into
jecxz
lcall
lds
roll
ret
out
sbb
in
xchg
adc
fldl
cmp
push
pop
in
and
ss
lods
scas
sbb
and
decl
pushf
mov
jnp
stos
dec
lcall
cmp
and
ret
mov
fistpll
neg
jecxz
test
push
lahf
lock
push
add
outsl
add
cmp
pop
loopne
sub
ljmp
jle
aam
xchg
pop
mov
sbb
js
jne
dec
inc
fadds
sub
xchg
adc
dec
test
test
cltd
lds
inc
mov
fcomip
mov
jl
adc
sub
stos
mov
shl
add
inc
ret
cli
dec
inc
push
mov
popa
fcoml
jecxz
and
mov
fbld
cld
aaa
or
je
lret
sub
add
movsl
cs
pushl
shr
mov
cwtl
fstpl
outsl
jne
repz
stc
repz
and
incl
xchg
int3
adc
int
pushf
sbb
mov
jge
push
sbb
js
es
cmp
lret
pop
ja
ljmp
sbb
aad
xor
fmulp
mov
scas
lcall
dec
inc
in
out
mov
fildll
test
nop
pop
lods
fadd
push
cmp
cld
jmp
xchg
mov
shlb
fnstenv
aaa
aam
in
mov
in
xchg
subl
hlt
jl
outsb
ja
inc
push
scas
jne
jnp
adc
mov
inc
cmp
shrl
pushf
xor
lods
dec
push
pop
hlt
ljmp
xor
insl
outsb
cmp
sti
pop
mov
dec
imul
dec
icebp
mov
fnstsw
scas
daa
sub
sub
inc
clc
mov
and
jns
cmp
incl
imul
push
das
loop
sbb
add
push
adc
and
push
push
les
call
aam
or
ds
daa
inc
adc
add
test
pushl
jae
add
sub
sub
and
sub
adc
cmp
dec
push
das
adc
pop
pop
loope
push
shll
dec
es
pop
adc
adc
shll
aaa
and
mov
addr16
aad
push
mov
aad
adc
inc
dec
push
ja
cli
pushl
add
lcall
lea
inc
jns
sbb
push
add
jnp
sub
lcall
xchg
push
xchg
sbb
push
iret
test
ljmp
je
loop
sbb
sbb
push
inc
mov
imul
dec
pushl
mov
add
insb
hlt
icebp
jl
cmpsl
sbb
imul
dec
lss
mov
lcall
jl
xchg
insl
mov
cmp
sbbl
inc
shlb
inc
push
fbld
sbb
shlb
or
cmp
std
push
and
out
loope
outsb
jno
dec
lds
lock
daa
hlt
ljmp
mov
hlt
inc
outsl
pop
mov
or
or
add
movsb
pusha
or
pushl
mov
repz
cld
popa
dec
cltd
ret
js
mov
jno
add
scas
es
call
adc
bound
xchg
sub
adc
movsl
jb
mov
call
adc
cmpb
and
arpl
add
push
sbb
jg
mov
adcb
xchg
inc
xor
test
das
and
dec
xchg
pop
mov
adc
adc
les
inc
push
add
inc
lods
and
push
xchg
and
mov
imul
adcl
pop
stos
call
icebp
add
mov
jno
push
cs
cltd
and
xchg
popa
dec
mov
xor
xor
mov
addr16
add
push
nop
sbb
incl
add
mov
xor
xor
xor
mov
vhaddpd
pop
loop
xor
jbe
xor
adc
jns
repnz
jecxz
inc
mov
mov
dec
addr16
sub
pop
push
jae
mov
dec
popa
rcrl
mov
or
and
decl
mov
or
lock
lcall
lea
pop
adc
mov
pop
xor
pop
in
jmp
xchg
xchg
movb
adc
ss
cmp
ja
cmp
push
jmp
pop
mov
pop
nop
std
test
clc
call
loopne
daa
in
std
xchg
and
inc
sub
inc
cmp
xchg
sub
movsb
mov
push
repnz
fcmovnbe
out
xchg
jno
push
jno
loope
cmpb
add
popa
sub
and
sbb
sub
push
inc
movb
or
cmp
addb
call
adc
js
fdivl
sbb
data16
ds
aas
aas
jno
cs
sbbl
jle
inc
push
shll
fcoml
pop
mov
push
mov
jo
xchg
adc
push
push
dec
push
push
or
mov
call
xchg
adc
and
sub
mov
jp
xor
pusha
push
call
js
fs
test
push
add
ja
dec
add
in
lcall
cmp
push
ljmp
addr16
enter
xor
push
movsb
cmp
mov
pop
dec
sbb
and
testb
push
test
adc
nop
test
mov
dec
lods
out
pop
mov
sti
inc
ss
push
add
pop
lea
push
fwait
addr16
idiv
inc
popa
mov
cmp
xlat
and
scas
pop
push
pushf
dec
mov
ljmp
cli
stmxcsr
mov
jo
push
in
popa
inc
sub
mov
lcall
adcb
cmp
cmp
and
xor
dec
ror
outsb
rcrl
shlb
inc
cli
pushl
sub
sub
xlat
lods
loop
dec
int3
cmp
incl
inc
sahf
mov
dec
out
cmp
adc
cmpsb
test
push
add
sub
sub
jns
imul
pop
push
test
bound
sub
das
clc
scas
and
inc
push
mov
aas
xor
jae
ret
lock
mov
or
jb
rcll
and
or
jae
mov
adc
xor
rclb
test
loop
mov
sbb
dec
mov
pusha
push
test
hlt
dec
push
jl
and
call
inc
cmpsb
mov
fldenv
ja
or
and
push
add
jbe
xchg
cli
incl
andl
addr16
sub
jno
test
cmpsb
inc
decl
cmp
mov
xor
addl
push
cld
pop
sub
add
sti
add
and
dec
adc
pop
dec
push
jbe
stos
and
mov
and
call
adc
rcrl
lcall
nop
add
cmpb
or
push
and
data16
pop
arpl
push
test
decl
cltd
add
mov
shrl
push
lods
lds
cld
mov
mov
ljmp
cmpsb
pop
notb
xlat
push
cmp
xchg
pusha
jbe
dec
out
pusha
mov
popl
cmp
xchg
pushl
adc
cmp
push
das
mov
fadds
fistpll
out
inc
loope
and
mov
call
cmp
scas
push
cltd
bound
hlt
outsl
cli
mov
adcb
sub
add
ds
inc
inc
ret
ja
and
inc
jne
add
or
and
test
sbb
adc
aas
fwait
xchg
mov
push
mov
stos
sbb
or
les
je
sbbl
mov
adc
aam
adc
sbb
ret
xor
cmp
popa
xor
mov
mov
cmp
push
jmp
lcall
rcll
mov
ss
cmc
jp
xchg
inc
sbb
push
dec
incl
out
jmp
xor
xor
xchg
stos
adc
push
dec
push
jp
cmpsl
stos
je
mov
enter
inc
mov
repnz
fwait
xchg
insl
jp
cmp
sbb
and
xor
shrl
xchg
inc
cmpsb
mov
or
ljmp
dec
mov
pop
call
daa
lods
imul
mov
add
js
pop
sub
cmp
jmp
aad
sub
fwait
out
ljmp
sub
stc
sub
sbb
push
mov
push
inc
sub
mov
sbb
jmp
adc
bound
push
sub
das
sub
pop
insl
lock
test
adcb
js
jmp
call
xchg
mov
sub
cmp
adc
mov
inc
data16
lcall
fs
lcall
add
loop
aas
pop
ret
addb
mov
cmc
test
mov
xor
andb
sbb
lahf
shll
ja
out
nop
mov
or
inc
insb
push
mov
inc
fldt
sbb
push
das
stos
xor
int3
xor
dec
pop
imul
inc
push
push
cld
and
mov
add
add
lds
sbb
imul
xor
add
sub
pop
pusha
xor
mov
sbb
sbb
cmpsl
add
adc
repnz
and
es
jns
jle
test
inc
cmpb
cmpsl
daa
sbb
ljmp
psrld
dec
mov
pop
fcomps
clc
inc
mov
jne
xchg
lods
shr
dec
or
mov
mov
dec
out
cli
pop
popa
xchg
divb
test
lcall
dec
cmp
push
jb
push
mov
mov
call
xor
ret
mov
xchg
scas
push
cmp
xor
adc
or
loope
jmp
pop
stos
bound
and
mov
push
cmp
push
sbb
nop
test
inc
sub
xchg
or
loopne
mov
xchg
sub
sar
call
incb
sbb
inc
fidivrl
inc
or
outsb
inc
sar
fstpt
or
sbb
jae
push
jp
pop
pop
inc
fs
lods
push
push
pop
jg
decl
popf
push
dec
jo
inc
adc
dec
js
sub
pop
fnsave
bound
pop
fnsave
push
xchg
insl
js
data16
and
mov
sbb
dec
incl
cld
lcall
push
xor
inc
dec
xor
cmp
adc
jae
jmp
pop
jl
mov
stos
icebp
and
out
jp
and
pop
and
sbb
jno
push
jo
lret
jmp
pop
aas
jle
mov
mov
jg
lea
aad
dec
xchg
shlb
ljmp
leave
in
pusha
xor
jle
aad
cmc
pushl
cmp
push
cmp
and
pushf
push
pushl
cmp
dec
popa
loopne
mov
imul
xchg
sbb
sub
dec
adc
lcall
and
fisubl
cmp
inc
subl
xchg
push
mov
scas
adc
fildl
out
xchg
cmp
xor
adc
icebp
mov
ljmp
cld
das
fistpll
push
xor
popf
fimuls
add
cwtl
cs
fisttpll
iret
pop
arpl
int
les
pop
icebp
jg
xchg
jb
push
jns
push
pop
cmp
mov
push
adc
in
dec
xor
int
clc
cmp
lds
mov
lret
fdivr
pushl
js
or
adc
or
inc
test
call
pop
test
stos
xchg
jecxz
xchg
sbb
adc
push
mov
ss
push
add
or
mov
cli
push
lcall
and
aad
cmp
xor
mov
sbb
mov
sub
add
jecxz
int3
add
xchg
lds
lods
decl
mov
out
cmpsb
add
push
leave
repz
pop
xchg
lods
popf
repnz
mov
adc
aad
ljmp
cmp
sub
adc
lods
cmpsl
or
xchg
cmp
dec
adc
mov
and
push
out
push
push
push
adc
xchg
fisubrl
and
sbb
std
fnstcw
sub
ja
adc
jae
dec
mov
push
push
and
and
fcoml
into
sub
adc
pushw
xor
pop
add
inc
fstpl
jb
aas
inc
mov
hlt
xchg
or
hlt
iret
cmp
mov
enter
dec
pop
stos
iret
push
vdivsd
sbb
movsl
mov
mov
sub
sbb
mov
ficomps
jl
dec
sbb
dec
push
mov
dec
ss
loopne
xlat
mov
ret
rcr
add
pop
pop
lods
sbb
cld
cmp
jge
add
xchg
inc
shl
sahf
std
and
adc
sbb
lret
and
fcomip
fistpl
addr16
jecxz
fmuls
dec
jge
add
pop
insb
fistl
pop
fstpl
and
out
cmc
outsb
sub
cmove
repnz
stos
loope
bnd
adc
ja
test
xor
inc
test
adcb
jmp
sbb
sub
aaa
xchg
loop
mov
inc
pop
sbb
push
inc
cmp
jp
fnstenv
inc
xor
popa
mov
dec
dec
mov
mov
dec
dec
lahf
jbe
xor
sub
rcrl
lock
incl
lods
push
test
adcl
mov
sub
cmpsl
arpl
dec
movsl
cli
add
or
lods
call
cwtl
cli
mov
sbb
call
lea
push
ljmp
scas
scas
fdivs
sahf
sbb
data16
ljmp
mov
mov
in
imul
add
insl
cmp
push
insb
fnstenv
pushl
dec
idivb
outsb
mov
les
sbb
mov
push
test
rcr
jmp
out
int3
xchg
hlt
mov
test
xchg
cs
cmpsb
inc
into
cmc
call
cmpb
mov
lahf
dec
pop
jge,pn
repnz
fdivr
fistpll
jg
mov
lahf
pop
das
jecxz
jns
clc
icebp
popf
cmpsl
mov
push
movb
ds
jle,pt
ljmp
iret
aas
ljmp
mov
mov
shl
rorl
jg
incb
lret
inc
cmp
scas
xor
add
and
rcrb
dec
loope
mov
xchg
or
mov
roll
mov
add
add
mov
imul
inc
mov
mov
jg
test
leave
sub
rorb
mov
add
enter
inc
push
adc
mov
test
fsubs
and
mov
sarb
into
cmp
cmp
adc
mov
pushl
aam
lds
pushf
adc
jecxz
jecxz
add
jmp
or
xor
add
rclb
in
adc
fwait
cmp
cld
jmp
dec
addr16
or
jle
js
dec
push
pop
push
mov
jle
xchg
or
or
inc
pusha
aaa
or
lea
aaa
xchg
shrb
pop
mov
xchg
orb
call
popf
jb
jmp
loopne
insb
lea
stos
inc
movsb
shrb
es
ljmp
call
lods
ss
or
scas
lock
sub
mov
mov
lret
cmc
ljmp
lods
mov
or
pop
arpl
enter
mov
or
fldl
sahf
ret
dec
mov
push
or
outsb
add
cmc
cmp
xchg
lea
mov
jl
mov
insb
xor
xchg
cli
mov
in
jo
cltd
mov
rorb
push
mov
pop
adc
dec
lcall
idiv
lcall
push
rclb
add
inc
pushl
cmp
subb
pushl
stc
ret
inc
and
inc
pushf
jno
sbb
push
sti
repz
mov
and
das
aas
add
lret
mov
mov
mov
xchg
cld
and
decl
cmp
mov
and
xorb
adc
je
test
lcall
xchg
sub
push
in
arpl
dec
push
cwtl
push
add
lods
mov
lret
pop
and
cmp
mov
daa
jns
pop
xchg
aad
inc
pop
bound
in
js
push
xor
sbb
test
cld
outsl
sub
push
cmpsl
popf
cmp
inc
test
push
js
push
mov
hlt
test
decl
ljmp
mov
jge
loopne
test
pop
mov
test
dec
ja
jge
jmp
into
in
lret
or
xor
jg
inc
add
or
and
jbe
lret
inc
inc
insb
dec
mov
lods
jmp
mov
pop
lods
xchg
xchg
mov
mov
shll
sub
mov
mov
ret
pop
ret
call
cmp
test
mov
xor
imul
call
mov
and
mov
or
iret
call
add
dec
jbe
xchg
mov
aad
or
and
xchg
icebp
das
inc
rolb
mov
sbb
xor
decl
hlt
pushl
dec
imul
aas
push
bound
xor
fmuls
iret
aam
fdivs
cmp
dec
mov
xor
and
push
sbb
jns
in
cmc
js
inc
dec
stos
mov
mov
pop
lret
icebp
dec
adc
incl
insl
jns
sbb
fmul
lods
lods
mov
mov
add
loope
incl
and
inc
popf
xchg
jo
cmp
inc
add
rcll
push
aaa
lret
inc
clc
lcall
cwtl
cmpsb
jmp
xchg
push
jo
sbb
popa
ljmp
add
inc
mov
dec
inc
ja
adcb
arpl
ljmp
xchg
outsb
cmp
hlt
pop
fdivrl
and
jns
inc
jnp
repz
idivl
in
nop
testb
rclb
les
jle
lcall
lods
or
inc
cmc
pop
xchg
sbb
mov
jne
incl
cli
jmp
into
bound
add
sub
mov
mov
imul
ret
mov
mov
jmp
loop
sbb
xor
aam
or
pop
mov
ficoml
cmpb
mov
xchg
or
mov
sbb
adc
imul
xchg
pushl
into
cmpsb
ret
fisttps
and
sbb
and
xchg
xor
clc
cltd
es
lea
or
scas
popf
mov
sahf
fs
mov
cld
incl
test
dec
add
movsb
pop
stos
pop
daa
cwtl
jb
add
pushl
sub
and
jl
rcl
mov
je
mov
icebp
and
popf
filds
lcall
loopne
mov
lds
imul
mov
fcomip
out
cmp
xchg
jbe
dec
lret
xchg
ret
mov
pop
and
decl
jbe
adc
loopne
sub
add
fsubs
and
decl
xchg
xchg
dec
mov
movups
mov
pop
enter
xchg
cld
divl
lock
in
jnp
mov
sub
call
rolb
cmc
rorl
pop
inc
aad
xchg
das
lcall
and
mov
in
inc
push
or
adc
adc
mov
sub
adc
or
fs
fidivl
loopne
xor
push
jo
and
aad
jns
mov
and
lcall
sbb
popa
xor
ljmp
xchg
mov
test
xchg
sbb
sub
add
lret
xor
stc
or
nop
addl
lods
imul
mov
test
pop
insl
jl
aam
lds
icebp
lcall
clc
aaa
imul
les
test
pusha
pop
sbb
fsubs
mov
arpl
xchg
inc
and
mov
push
test
xor
xchg
in
and
movsl
movsl
inc
inc
cmpsb
inc
sub
pop
jge
xor
ds
push
gs
jmp
mov
sarb
adc
cli
lods
inc
sbbb
pop
jmp
fcoml
xor
mov
mov
ljmp
in
test
add
in
sar
call
dec
sub
push
test
lahf
out
add
popf
adcl
mov
jg
cmp
push
cmpsl
jo
loopne
orl
andl
or
inc
mov
nop
aas
xchg
call
and
or
adc
and
xchg
les
loop
adc
dec
bound
jnp
add
push
push
dec
push
in
roll
das
xor
repnz
fcomi
jecxz
pusha
movsl
pop
dec
dec
push
pushf
fs
pushl
xchg
dec
test
mov
arpl
xchg
mov
stos
arpl
repnz
lcall
xchg
or
daa
inc
std
xor
push
pop
nop
adc
cmp
andb
insl
je
xlat
sbb
bound
jnp
rcll
sahf
push
ss
xor
incl
pushf
lret
out
xchg
ss
aam
jecxz
xlat
inc
call
and
daa
mov
dec
loope
push
hlt
dec
add
lcall
xchg
call
nop
les
jb
lcall
aam
add
add
push
mov
outsb
cmc
cmp
loopne
push
add
mulb
loop
dec
and
inc
add
aam
add
aaa
int3
jmp
xor
push
outsb
cmp
cs
push
inc
push
dec
mov
aas
mov
push
cli
pop
xor
in
cmp
test
daa
sahf
add
sbb
scas
mov
rorl
or
stc
mov
pop
inc
and
stos
add
pop
sbb
lcall
push
xchg
inc
pop
adc
adc
mov
call
xchg
call
sbbb
or
mov
nop
add
mov
test
pop
hlt
lcall
xor
mov
mov
fcomip
fsubrs
cwtl
xor
sbb
jmp
mov
pusha
imul
gs
add
jo
mov
dec
or
incl
inc
cltd
cmp
add
mov
inc
inc
roll
mov
add
xor
stos
nop
dec
sub
jae
int
nop
stos
jmp
in
mov
dec
jnp
hlt
into
mov
and
fisttps
inc
sarb
mov
xorl
push
sub
scas
add
cld
sbb
sub
lcall
push
add
mov
jb
mov
movsl
ret
mov
adc
outsl
and
fmul
or
xchg
loope
add
push
xchg
dec
adc
pushf
leave
inc
dec
pop
and
add
ljmp
sbb
sbb
mov
xor
pusha
dec
decl
push
popf
fldl2t
ss
xchg
jno,pn
vmwrite
imul
jl
pop
push
push
xorl
pushl
clc
and
adc
xchg
test
or
pop
sub
cwtl
add
or
xchg
cwtl
mov
mov
lcall
in
xchg
and
test
sub
inc
pop
cmp
inc
mov
dec
popf
nop
or
in
adc
xor
xchg
les
popf
rcll
mov
or
adc
shlb
loope
loope
fwait
test
cmp
and
mov
inc
lea
push
inc
sub
lcall
or
xchg
ret
inc
cwtl
jg
inc
ret
lea
sbb
jo
ljmp
pop
inc
fadd
lcall
dec
or
shll
sbb
ret
cmp
and
mov
lock
and
adc
adc
adc
mov
xor
sarl
push
or
ljmp
cmpsb
mov
and
push
in
les
cld
jg
shll
push
adc
xchg
sbb
ss
cmpb
bound
or
or
cmpb
rcrb
adc
push
adc
dec
ja
or
adc
cli
pushl
out
xchg
frstor
or
in
push
icebp
inc
jge
xchg
pushl
shl
pop
nop
cmc
push
mov
lret
ja
adc
jo
mov
les
xor
ret
mov
sahf
hlt
hlt
xchg
push
and
mov
adc
cmp
sti
ljmp
inc
or
xchg
stos
jo
adc
mov
ror
mov
add
mov
nop
fisubs
das
push
jb
and
mov
xchg
inc
movsb
mov
cwtl
or
cwtl
dec
mov
xor
jmp
and
mov
sub
cmp
push
fld
lea
dec
cmp
bound
test
lcall
leave
movsb
shlb
dec
cld
lods
pop
sti
xor
fcomip
ljmp
stos
push
lret
lods
ds
push
mov
rolb
inc
adc
add
scas
incl
jl
jmp
les
es
add
sbb
sbb
test
mov
pop
repnz
push
or
cld
outsl
mov
lret
adc
pushf
mov
pop
fisubl
sarl
cli
cmovae
addr16
aam
jp
ljmp
les
mov
adc
daa
jb
inc
xchg
adc
sbb
incl
insb
pushf
mov
and
aaa
lock
inc
or
ljmp
push
mov
jmp
in
in
xchg
pop
pop
cmp
cld
jg
mov
stc
mov
dec
aad
jno
test
adc
pop
out
cli
call
mov
mov
mov
adc
or
mov
mov
mov
lods
call
xor
and
decl
push
test
dec
cmp
fistl
mov
test
js
add
sbb
enter
loopne
mov
mov
jg
cs
lea
es
xor
test
fildll
mov
adc
mov
and
or
or
pop
inc
sub
cmp
and
jmp
mov
sub
fnstcw
push
ret
jecxz
mov
lods
jg
in
nop
bound
imul
stc
mov
add
pop
dec
sbb
lcall
lret
movsl
add
lret
out
mov
adc
popf
pop
push
icebp
fcomip
xchg
lods
ret
aam
pop
dec
popf
mov
or
or
lcall
mov
cmp
sbb
push
sub
bound
cli
aas
dec
add
jl
xchg
dec
in
sub
xor
lea
std
adc
push
dec
fdivr
sub
mov
leave
inc
mov
xchg
popa
call
cld
sbb
inc
inc
dec
enter
fistps
rcll
mov
or
mov
mov
xchg
add
loope
fsts
add
rcr
enter
and
adc
mov
stos
pop
lcall
dec
loopne
xor
push
or
jg
mov
xchg
scas
cli
call
adc
cmp
sbb
js
sub
jmp
into
cmpb
jecxz
test
mov
and
ret
dec
movsb
hlt
jo
add
das
sub
and
sub
sub
fdivr
jg
out
loopne
or
and
sub
xchg
pop
add
sub
or
sar
ljmp
push
and
and
or
cmp
movsl
or
xchg
sub
mov
add
cmc
sbb
xchg
mov
jns
adc
push
mov
loope
adc
jmp
dec
cmc
xchg
insb
inc
into
adc
pop
out
fcomip
mov
xchg
inc
push
add
and
mov
jecxz
and
in
sbb
add
add
lock
ljmp
mov
dec
add
test
cmp
fwait
nop
xor
rclb
insb
and
sbb
cwtl
rclb
pushl
dec
inc
push
leave
add
push
fucomp
sahf
in
cltd
mov
push
and
stos
or
decl
shrl
xchg
leave
push
mov
xor
ss
mov
pop
xchg
pushl
push
mov
add
jp
mov
mov
sbb
filds
es
les
dec
xchg
incl
adc
call
pop
xor
loop
pushl
push
add
and
sbb
out
shll
lcall
lcall
and
mov
inc
add
pushl
aam
movups
lds
pop
hlt
shll
add
imulb
adcb
dec
mov
scas
and
add
call
inc
push
xor
mov
call
cmpl
push
xchg
int
push
insl
cld
pop
jp
dec
and
cltd
dec
jmp
std
pop
sbbl
dec
jne
xor
in
repz
aaa
pop
int
ret
lods
aad
cli
ja
lcall
popa
push
orl
xchg
mov
enter
imul
call
jg
push
mov
or
daa
jno
pop
and
arpl
mov
stos
loopne
ljmp
jno
dec
add
mov
adc
fcoml
ljmp
xor
push
stos
loop
jnp
stos
and
mov
incb
push
in
lods
dec
mov
stos
lock
adc
mov
lea
nop
sar
mov
sbb
fsubrs
repnz
or
dec
nop
pushl
sub
xor
pop
mov
cs
sub
stos
push
rolb
fsts
ljmp
and
or
dec
cmp
xchg
push
enter
pushl
repnz
xchg
sub
pop
mov
mov
and
movsb
mov
or
pushf
and
adc
xor
std
fcomip
stos
call
icebp
push
ds
lret
clc
add
call
pop
shlb
jge
adc
dec
mov
insl
enter
das
xor
popa
inc
fprem
incl
inc
ds
push
xchg
push
mov
shrb
add
xor
dec
xchg
push
dec
incl
or
ljmp
fsubl
arpl
imul
xor
mov
and
sbb
or
ja
ljmp
dec
icebp
mov
push
fimuls
rcrl
icebp
jp
xchg
jg
jnp
aam
pop
test
adc
dec
push
mov
leave
jp
ss
inc
insb
test
and
cwtl
jno
cmp
push
xchg
orl
shrl
scas
inc
sbb
jmp
rcll
mov
outsb
adc
sbb
sub
ja
mov
adc
lea
ljmp
aad
jno
xor
jnp
hlt
fcomps
sub
int3
imul
adc
sbb
and
jae
adc
in
sub
loop
jecxz
and
pop
xchg
imul
popa
add
call
jmp
jmp
xchg
or
cmp
aaa
test
sahf
push
outsl
hlt
add
push
mov
cmp
push
notl
orl
call
mov
xchg
aaa
cltd
mov
jl
jmp
sub
and
mov
pop
push
pop
jo
sub
incl
enter
imul
mov
dec
je
bound
mov
loop
incl
push
jg
js
cwtl
mov
pop
test
and
adc
ljmp
sarb
mov
mov
icebp
adc
and
pop
or
repnz
data16
shrb
ret
mov
jmp
and
sub
jb
cmp
loop
in
push
add
scas
xchg
in
pop
jbe
mov
cmc
mov
aad
in
or
push
pop
jnp
sbb
cmp
cmpsb
in
pushf
cmp
pop
sub
and
popf
aas
packuswb
push
mov
stos
enter
mov
call
fnstenv
adc
mov
lods
shrb
pop
fldz
scas
and
pop
inc
adc
je
div
ret
lods
xchg
int
sub
adc
ret
jl
cmp
xchg
lock
jg
xchg
or
push
add
sbb
push
and
xor
xchg
or
ljmp
xchg
or
fldt
cmc
or
jle
add
jl
test
jo
xchg
pop
sub
stos
cmp
outsb
lock
sbb
sub
sub
movsb
xchg
ljmp
mov
jno
test
scas
or
sub
ja
pop
ljmp
mov
xchg
dec
leave
rcl
adc
shll
jg
js
daa
and
adc
ljmp
in
js
enter
leave
and
or
fmul
adc
sub
add
mov
fnsave
or
decl
lea
pop
cli
scas
cmp
fstps
add
subb
sbb
mov
push
cmpsb
mov
xchg
imul
sbb
sbb
and
push
or
adc
in
pop
icebp
loope
repnz
xor
cmp
call
enter
mov
insl
mov
inc
jo
dec
mov
mov
arpl
xor
addr16
lcall
out
cwtl
cmp
push
test
into
shrl
xor
cld
lcall
movsl
dec
mov
lret
xor
aad
mov
fdivs
pusha
ret
xchg
xor
js
imull
loopne
addb
jle
mov
ficoml
stos
or
imulb
cmp
mov
xor
pop
sub
push
xor
iret
mov
adc
js
lahf
cmp
xchg
in
cmp
ret
mov
inc
jbe
fdivrl
jnp
outsb
fbstp
or
lcall
mov
ljmp
push
mov
incl
mov
mov
jge
adc
or
popl
mov
inc
xchg
incl
push
cmp
cmp
es
ss
fildll
push
repnz
jg
mov
push
jge
popa
pusha
sbb
loopne
push
sbb
subl
xchg
mov
or
je
mov
or
rorb
stos
mov
mov
add
mov
ss
mov
mov
dec
std
hlt
stc
or
inc
sbb
add
decl
fld
push
cmp
jno
nop
pop
lock
xchg
push
pop
inc
gs
add
push
pop
pop
sarb
cltd
inc
out
rolb
inc
or
incb
jo
inc
xor
dec
dec
incl
sbb
xor
lret
pop
cs
test
inc
push
mov
out
push
cld
lcall
dec
mov
mov
inc
xchg
leave
push
pop
add
xor
pop
add
sbb
cmp
or
pop
sub
lcall
movsl
push
dec
push
push
and
dec
push
push
mov
add
shr
test
add
lcall
and
mov
dec
add
fcmovnbe
push
outsb
insl
push
lds
repnz
cmpsl
imul
or
fsubl
bound
fdivs
aas
pop
or
xchg
jbe
pop
inc
lcall
incl
fnsave
loope
sbb
or
outsb
cld
repnz
je
daa
xchg
pop
cmp
add
ljmp
xor
adcl
mov
loope
inc
cltd
jne
movsl
daa
pop
jp
lea
call
pop
jmp
daa
lahf
add
frndint
inc
sbb
incb
adc
jle
loopne
adc
mov
incl
int
adcl
int
roll
mov
xor
hlt
mov
bound
xor
mov
push
adcb
dec
mov
movsb
fwait
insl
out
push
nop
cmp
pop
mov
mov
xor
int3
pop
jb
fldenv
jmp
dec
fistps
inc
sub
adc
cmp
out
and
mov
shlb
test
cmp
pop
xor
push
lds
jmp
mov
inc
in
sub
mov
mov
dec
jns
out
dec
cld
jmp
fldl
outsl
push
adc
push
shll
clc
jmp
insl
pop
lods
mov
loope
shr
sarb
pop
xor
dec
lods
inc
scas
mov
pushl
cmp
loope
cld
pop
les
fldenv
fistpl
ret
rorb
jle
loop
cmp
imulb
loope
aaa
push
or
loopne
ljmp
push
push
dec
sbb
and
into
imul
add
cltd
lcall
decl
ljmp
ds
mov
popf
xchg
xchg
iret
jns
jecxz
das
add
stc
mov
add
xor
insb
scas
fwait
into
aas
jae
sar
mov
incl
icebp
xor
push
orl
xor
add
sub
inc
pop
xchg
xchg
mov
test
sbb
ds
jns
xor
je
and
xchg
fsub
and
mov
cli
jg
fistl
pop
jmp
sbb
mov
and
sbb
decl
jb
xchg
aas
jb
inc
test
test
insl
dec
sub
mov
pushl
sahf
out
mov
cmp
shl
popf
add
push
icebp
and
cmp
mov
ds
jbe
adc
lret
push
lret
inc
adc
dec
cmc
and
das
cltd
movsl
out
ja
hlt
pop
icebp
lcall
ljmp
repnz
in
and
loop
push
jecxz
fbld
push
pushf
idivl
lock
scas
outsl
add
ljmp
sub
jo
cmp
or
lods
adc
cmp
sub
mov
aas
dec
pop
psrld
in
or
mov
xchg
aam
lcall
into
insl
cmp
sbb
jp
int3
cli
inc
cld
jp
inc
lea
inc
and
or
mov
sub
or
cwtl
jbe
push
adc
icebp
adc
js
call
and
lret
daa
orl
mov
insl
push
into
pop
add
in
inc
push
cmp
ljmp
movsl
inc
roll
bound
icebp
xchg
lds
inc
xchg
test
stos
dec
incl
push
aaa
bound
sbb
push
inc
mov
mov
xchg
flds
jg
ss
pop
enter
push
mov
fildll
fnsave
rorb
int3
push
inc
rorl
incl
cmp
sbb
sub
movsb
cli
lods
push
clc
and
xor
inc
xchg
ret
call
pushf
and
and
mov
stos
bound
xchg
mov
push
mov
adc
sbb
test
mov
fbstp
dec
cli
call
aad
movsl
lods
fs
mov
data16
lods
lret
pop
inc
test
ljmp
adc
pop
dec
mov
adc
in
movsb
mov
adc
mov
dec
cwtl
xchg
repnz
sahf
dec
nop
cmp
ret
lcall
sbb
out
add
cmpsl
inc
out
add
je
adc
jmp
inc
aas
jecxz
fidivrl
push
adc
dec
xorb
or
sar
jmp
int3
andb
mov
sbb
fsub
push
or
enter
ret
imul
inc
stos
int3
addr16
testb
test
pop
jmp
cmpsl
test
rclb
sbb
decl
pop
mov
xor
pop
lret
sub
mov
push
repnz
mov
cmp
jmp
fnstcw
sbb
cltd
cwtl
inc
cmpsb
lds
ljmp
sar
add
mov
sar
pop
ret
fcompl
ret
mov
clc
incl
cltd
mov
int
dec
lret
mov
int
jmp
lds
ds
jge
inc
jl
xchg
mov
ljmp
fildll
insl
loope
test
mov
push
test
cltd
je
das
xor
adc
in
adc
pushf
sub
test
fdivp
xchg
push
xchg
int
test
add
and
jae
cmp
adc
test
mov
dec
imul
cmpsl
cmp
cmp
outsb
jle
addr16
enter
pop
sbb
aad
pusha
add
sub
push
loopne
sub
nop
mov
jmp
cs
rclb
outsl
fsubs
jnp
outsb
dec
fcomps
mov
push
push
mov
pusha
in
movsl
sub
mov
add
xlat
aam
cmp
cmpsb
mov
enter
int
mov
leave
pushl
ja
xchg
fwait
enter
mov
dec
jecxz
adc
push
gs
cmp
mov
mov
xchg
ljmp
ss
mov
fldt
mov
and
test
out
mov
out
xchg
dec
lcall
push
cli
jo
stos
stos
xchg
sar
lcall
add
and
jg
jo
cwtl
sbb
paddusw
sbb
jp
cmp
ljmp
cli
sbb
inc
pushf
sbb
and
inc
and
mov
fs
fxch
push
sahf
inc
cld
lcall
arpl
int
dec
cwtl
dec
stc
mov
aas
dec
xchg
ficomps
jg
mov
stos
iret
jp
cwtl
aaa
adc
outsl
pop
dec
mov
sbb
decl
stos
lcall
nop
dec
add
movsl
pop
ds
nop
mov
or
test
pop
sub
fwait
sub
repnz
add
ljmp
cmpb
or
lcall
inc
push
push
shl
add
and
scas
or
ffreep
sbb
je
stos
rorl
sbb
adc
call
into
push
test
imul
mov
fdivs
enter
inc
fcoms
sbb
cwtl
mov
mov
jle
adc
adc
xchg
and
push
int
fstps
and
sub
int3
js
sbb
test
sbb
and
jmp
sub
movzbl
push
adc
fcmovu
push
xlat
loope
mov
push
pop
jns
fistpll
fmull
and
fstps
dec
pop
popf
push
push
ror
xor
jo
sti
inc
xchg
decb
xchg
sub
fidivrs
add
add
jg
movsb
loope
mov
or
adc
test
ret
sbb
xchg
mov
cmp
lods
jo
lods
cmp
push
push
es
and
lret
stos
sub
push
xlat
in
hlt
or
into
in
adc
or
or
add
pop
mov
sub
daa
fcmovnbe
mov
push
or
pushl
pop
xor
push
in
jbe
dec
stc
insb
xchg
dec
cmp
clc
out
fcoms
test
pop
pop
sti
cwtl
sbb
inc
dec
inc
sub
pop
or
stos
add
mov
sbb
fists
lods
fdivrs
xchg
cmp
fdivr
cmp
ret
add
std
jno
inc
inc
push
fsubrl
mov
scas
cli
incl
or
mov
mov
fstl
jns
or
mov
dec
jmp
mov
lds
roll
push
cmp
and
loope
fwait
insb
std
fcompl
mov
xchg
sar
mov
lea
sarl
jge
sarl
fs
pushf
lea
lea
les
lcall
dec
or
cmpsl
mov
outsl
fcoml
loop
cltd
xchg
loopne
flds
stos
das
adc
mov
dec
fwait
mov
incl
cld
cltd
and
lds
mov
or
push
fstpl
dec
clc
push
xchg
cmp
add
call
push
data16
push
jp
pop
inc
pop
xchg
pushf
adc
aam
sub
pop
ret
xchg
pop
decl
or
icebp
fnstsw
shll
loope
pop
sub
mov
je
cmpsb
jmp
mov
pop
stos
xor
loopne
jmp
fidivl
stos
add
movsb
fsubrp
inc
iret
aaa
flds
mov
or
mov
clc
push
data16
inc
rclb
ljmp
xor
mov
leave
ret
test
mov
mov
ja
pop
push
dec
rcl
inc
add
in
mov
fistpl
or
add
sbb
or
xchg
jecxz
pop
mov
out
test
or
dec
mov
cmp
inc
jl
and
dec
ljmp
loopne
les
or
int
rorl
pop
mov
aaa
cld
mov
int
or
aad
cwtl
outsb
mov
push
jp
sub
push
inc
pushf
aam
movsb
or
dec
dec
inc
fildll
dec
adc
xchg
and
xchg
sbb
push
dec
lods
fbld
ljmp
test
les
mov
addb
xorl
jb
jbe
and
test
aaa
js
mov
aam
sub
cmp
out
nop
mov
out
hlt
out
sub
gs
cmpsb
mov
decl
mov
cld
cmp
popa
xchg
adc
add
clc
sahf
movsl
leave
and
loope
arpl
pushl
scas
mov
repz
or
ja
decl
popf
in
push
dec
mov
stos
stc
rcrb
sub
or
pop
aam
mov
jg
lods
or
or
push
or
or
adc
cmc
lds
js
add
incl
nop
xchg
mov
test
mov
data16
inc
jo
cwtl
sbb
scas
cli
call
aam
inc
push
dec
data16
orb
cmp
add
push
jbe
ljmp
inc
loopne
call
pop
mov
dec
popa
mov
daa
cmpb
pop
pushl
incl
inc
or
mov
mov
pop
fld
inc
rolb
in
jno
or
stos
ds
sub
add
mov
out
movsb
icebp
filds
mov
sbb
or
add
sbb
xchg
out
sahf
or
and
xor
scas
push
mov
lcall
mov
sub
jb
jno
movsl
dec
insl
sbb
inc
arpl
pop
xchg
inc
xor
cmpsl
xchg
dec
push
pop
cs
movb
mov
pusha
cld
int
ffree
jne
xchg
bound
add
dec
outsb
fcmovu
pop
push
jo
cwtl
pop
lcall
cld
insl
mov
std
popf
add
ror
sbb
push
sub
dec
movsl
int
xchg
or
add
inc
xchg
shlb
js
jmp
mov
push
movsb
sahf
mov
or
mov
pusha
hlt
rcrl
gs
movswl
imul
sub
clc
inc
push
andb
add
push
or
push
mov
jmp
mov
inc
dec
inc
xor
outsl
sub
stos
je
pop
shlb
mov
jmp
xchg
or
out
dec
lea
pushf
jle
adc
stos
push
and
pop
cmc
das
rolb
lods
sbbl
mov
sar
pop
aam
cmpsl
jge
in
pop
fs
out
xor
inc
push
and
mov
int
xor
into
adc
mov
rcrb
or
jns
fisubl
addl
lcall
mov
hlt
es
test
pop
jecxz
mov
in
incl
pop
dec
cld
test
dec
xchg
in
les
clc
sub
decb
push
incl
lods
imul
inc
adc
dec
pushf
cmp
pusha
je
decl
add
test
fs
push
bound
pushw
pop
mov
sbb
fcomip
jg
mov
fldcw
in
jle
push
in
ror
gs
fsubp
in
sub
test
adcl
call
stos
test
push
mov
add
push
call
std
sarb
aas
mov
dec
movsl
cmpsb
lcall
call
fsubrp
cmpsb
rorb
xchg
pop
add
cmpsl
lcall
clc
incl
jle
sti
xchg
faddl
xchg
fmull
fdivs
decl
xchg
fmull
shrb
out
and
test
cmp
jmp
mov
cmpsl
aam
scas
in
fnstsw
imul
and
sub
mov
aad
stos
dec
push
leave
xchg
clc
jge,pn
shlb
dec
psubb
xchg
sub
mov
xor
and
push
fwait
xor
and
jg
push
nop
and
ss
addr16
sbb
out
push
movl
out
push
push
fcmovnb
xchg
xor
lcall
fsubrs
pushf
cmpsb
dec
pop
test
lods
decl
jo
push
jb
xor
push
incl
rorb
push
pop
push
mov
add
faddl
push
mov
inc
jno
pop
fsts
add
sbb
popf
push
aam
cli
sub
pop
cwtl
xchg
ss
clc
incl
mov
jo
cmp
or
pop
or
rolb
lahf
xor
push
pop
mov
and
inc
call
xchg
xor
bound
adc
call
cmp
xor
push
fcoml
and
in
insl
inc
mov
mov
lcall
outsb
shlb
adc
shl
mov
ds
sti
and
pop
xlat
icebp
scas
adc
and
pop
aas
lock
ljmp
aad
fs
mov
and
hlt
lea
addr16
pop
and
aad
cmp
lcall
out
pop
push
sub
dec
adc
fbstp
das
xchg
xor
xchg
test
daa
pop
jb
ret
call
and
mov
call
scas
outsb
add
sub
inc
pop
daa
lods
jno
and
fldl
xchg
outsl
or
std
cmp
mov
ja
xor
in
pop
nop
lea
std
fbstp
cs
in
or
add
outsb
jp
cld
shll
nop
insl
pop
add
popf
or
push
jle
or
call
stos
push
adc
push
stos
insb
movsb
movb
js
push
and
or
mov
fnsave
pushl
ds
jo
gs
std
add
stos
add
xor
inc
imul
pushl
pushf
dec
addl
inc
pop
sub
adc
aam
addr16
decl
push
icebp
vshufpd
call
out
and
jg
decl
pop
lods
mov
cli
inc
scas
or
sbb
jmp
icebp
mov
sbb
lcall
lcall
int
loopne
aas
xchg
or
insb
in
insb
aad
popa
inc
add
jmp
cs
mov
and
and
mov
jne
decl
hlt
push
repnz
sbbb
mov
pop
outsl
xchg
fcoml
and
mov
decl
dec
cli
and
daa
or
jo
jg
pusha
jecxz
sar
cmp
pop
pop
xchg
inc
pop
mov
decl
push
pop
jae,pn
push
cltd
pop
iret
adcb
pusha
scas
and
xor
std
xor
mov
pop
cmp
xchg
pop
or
shlb
aaa
dec
inc
nop
pop
jbe
aas
adc
subb
mov
ljmp
enter
outsl
jp
xor
mov
and
jmp
loope
aam
xor
pop
cmpsb
jns
jo
inc
lahf
jbe
scas
insw
incb
clc
pop
imul
clc
call
mov
mov
je
sarl
divl
shrl
sub
mov
pop
mov
scas
call
cmp
ljmp
fistps
stos
fdivr
mov
js
adc
rolb
cmp
mov
mov
std
leave
shl
enter
mov
mov
out
xor
add
pop
mov
adc
sbb
pusha
mov
test
in
jp
mov
sahf
inc
jne
mov
and
or
and
jg
ficompl
mov
rorl
or
mov
sbbb
pop
add
xchg
dec
filds
jns
pop
mov
add
nop
cmp
sbb
call
jecxz
mov
movb
inc
jns
add
lcall
popa
sti
jmp
scas
loope
cmp
adc
stc
pop
add
mov
ljmp
adc
lds
pusha
ljmp
or
incl
inc
adc
and
psubw
mov
fwait
sar
decl
xchg
stos
push
insb
cmp
pushl
add
mov
jno
sbb
sbb
dec
test
mov
mov
je
stc
rorb
push
incl
mov
push
lods
push
adc
shl
inc
outsb
dec
xlat
jmp
jg
int
mov
mov
mov
jns
inc
into
mov
jge
addb
jg
xlat
incl
rcrb
cmp
daa
in
arpl
lea
repnz
pusha
mov
sti
mov
enter
lcall
fisttpll
and
stos
pop
das
cmp
lock
arpl
sbb
inc
ret
clc
mov
push
pop
mov
fistps
lret
addb
decl
push
xchg
xchg
aas
leave
ret
loope
inc
cmp
iret
cmp
pop
cld
divl
or
lcall
ljmp
outsl
ror
mov
xchg
add
add
les
sbb
orl
js
xchg
test
or
mov
je
jmp
add
insl
jecxz
add
enter
andl
fildll
pop
xchg
xchg
movsb
dec
orl
and
pushf
std
sbb
jmp
aam
mov
dec
nop
push
cmp
aam
fiadds
xor
decl
aaa
insb
or
popa
lock
adc
xchg
jmp
sub
jb
sub
pop
mov
stc
dec
mov
lods
inc
test
xchg
clc
xchg
scas
and
mov
es
adc
xor
lcall
mov
mov
cmp
jl
xor
and
decl
inc
iret
xchg
mov
xor
sub
jo
jne
or
pushl
outsb
xor
movsb
mov
loopne
clc
xchg
enter
out
cmc
inc
decl
lock
ss
or
test
or
push
loope
cld
pop
push
cmp
mov
bsf
movl
or
mov
call
mov
shlb
test
push
dec
inc
cli
mov
xchg
fisubrl
sub
test
cmp
ljmp
fcoml
add
nop
adc
sub
loope
sbb
adc
nop
and
sbb
xchg
add
lcall
sbb
inc
or
rol
orl
fisttps
jp
addr16
push
inc
or
pushl
test
mov
mov
les
mov
push
jg
jae
pop
mov
xchg
inc
lret
in
adc
jl
inc
sub
outsb
pop
add
pushl
and
inc
popa
nop
mov
cmpsb
add
sbb
add
inc
xchg
push
rorl
lcall
push
mov
xor
mov
xchg
sub
insb
mov
lods
mov
jg
sub
inc
cmp
popa
xchg
shl
aad
in
mov
mov
popf
stos
bound
dec
in
hlt
mov
ljmp
sbb
scas
inc
xchg
push
test
xor
sahf
mov
dec
or
ljmp
sbb
dec
dec
cmp
js
stos
mov
dec
xor
rcrb
mov
push
bound
xlat
pusha
mov
faddl
push
mov
cmpsb
add
imul
jecxz
pop
mov
out
fdivrs
mov
cmp
lds
bsr
popf
jae
or
cmp
sub
push
cltd
aas
add
lcall
push
nop
rorb
call
and
ret
adc
adc
push
arpl
test
decl
or
pop
or
fwait
je
cmp
jg
push
or
jl
sub
rorl
int3
roll
mov
imul
mov
int3
add
xor
es
dec
fwait
mov
pop
imul
lds
inc
ds
jg
in
push
int
cmp
jmp
test
dec
and
push
dec
scas
add
ljmp
mov
jbe
cmp
jo
xor
fcomp
fwait
ljmp
stos
loop
das
sar
stos
xlat
and
ljmp
hlt
loop
inc
sbb
rolb
xor
out
lds
mov
jl,pt
leave
syscall
push
out
cli
cld
out
aad
mov
cmp
adc
stos
and
ret
pop
insb
adc
jle
xor
ret
mov
push
insb
sbb
or
fsub
pop
add
sbb
stos
sbbb
lock
or
loop
mov
wrmsr
sub
iret
leave
push
xor
mov
push
sub
or
push
inc
jg
incl
mov
test
inc
jns
xor
std
cmpsl
cmp
jae
pushf
cmc
lods
sub
sti
enter
add
int3
mov
inc
ret
mov
mov
call
add
mov
mov
sar
addb
mov
clc
shlb
or
aam
xchg
aad
or
and
mov
add
in
push
ret
shlb
sbb
in
insl
and
loope
mov
out
dec
sub
fiaddl
daa
cmpsb
mov
fadd
pop
in
and
and
cltd
xchg
in
xchg
sbb
jmp
inc
loopne
mov
and
inc
ja
shrb
dec
xchg
xchg
pop
xlat
andb
fldenv
call
and
xchg
xchg
cs
xchg
test
dec
jne
sbb
push
stos
push
jo
sahf
stos
mov
xchg
cli
decl
into
dec
fidivs
and
mov
sbbb
push
ljmp
cmp
cmpsb
xor
mov
mov
lock
pop
aam
push
test
jns
jb
gs
lock
test
sbb
mov
idiv
adc
icebp
jae
addr16
daa
sbb
outsl
jo
jns
pop
cld
test
fidivl
lock
push
pop
lcall
or
dec
cmp
fstps
push
repz
mov
adc
cs
push
jbe
push
movsb
sub
cmp
inc
not
xor
fwait
push
sbbb
mov
jmp
add
fcoms
adc
cmp
idiv
sbb
mov
mov
aam
fs
or
xor
sbbl
hlt
dec
push
adc
inc
adc
ret
dec
js
xchg
nop
pop
mov
inc
adc
or
sub
clc
dec
imul
inc
sub
ljmp
or
in
lea
int
fs
vpmacssww
decl
clc
xchg
insb
jo
and
inc
aaa
add
cmc
lcall
mov
mov
xchg
es
dec
outsl
adc
fwait
rcr
sbb
dec
test
mov
cmp
jns
push
mov
lcall
dec
dec
sbb
sbb
lcall
and
sub
imul
or
pop
subb
sub
mov
ds
lods
mov
or
jg
icebp
or
xchg
int3
pop
lods
test
in
fstpl
jns
arpl
add
xchg
xorb
mov
aas
fcoms
cld
decl
mov
xchg
cmp
pop
xorl
push
popa
movsb
repz
clc
shll
insb
call
sarb
ss
xchg
call
out
ret
push
sub
jmp
inc
sub
push
jno
outsb
xchg
iret
mov
cmpsb
cmp
test
lcall
dec
rcll
mov
jnp
lds
inc
rolb
dec
add
or
incl
push
pushf
sbbl
lock
pop
or
xchg
pop
lea
and
dec
add
cmp
xchg
sub
inc
dec
pushl
repnz
mov
jmp
mov
std
jecxz
outsb
repz
dec
fimull
test
es
lret
jbe
stos
sbb
jb
jle
lea
pushl
mov
decl
dec
fwait
sub
xchg
pop
and
adc
ss
mov
jnp
shll
dec
lods
gs
xchg
push
arpl
sbb
or
fcmovbe
mov
pop
fcmovne
pusha
mov
add
xor
xor
push
mov
ss
call
icebp
sub
push
sub
loop
xlat
shrl
mov
fistpl
ss
ja
mov
repz
mov
in
fistl
insl
movb
sub
scas
add
jg
inc
jmp
adc
rcl
bound
ret
nop
add
xchg
adc
repz
mov
clc
les
inc
sti
fisubs
sti
enter
push
and
push
std
das
push
dec
cwtl
or
popl
adc
jo
push
out
clc
lea
ss
or
push
mov
dec
mov
mov
jp,pt
stos
ljmp
jbe
adc
inc
sbb
mov
inc
popa
mov
pushl
ja
fcompl
call
incl
fadds
pop
mov
push
jns
sbb
sbb
inc
push
daa
rorl
lods
sub
pop
icebp
adc
and
sar
sub
insb
arpl
mov
ja
mov
mov
lcall
and
jo
adc
test
fnstcw
inc
rcl
xor
incl
push
sub
ficomps
lret
xchg
lds
cmpsl
jno
in
fs
hlt
scas
incl
pop
outsb
or
mov
push
pop
pusha
sub
add
scas
ret
xchg
scas
pop
ficomps
cmp
push
pop
ret
sub
sarl
shlb
cs
fstl
popa
lods
cmp
in
cld
xchg
push
mov
mov
and
push
call
repz
call
mov
into
sub
and
push
inc
and
cwtl
ret
or
es
push
std
subl
push
rcrb
fidivrl
jmp
cmp
sub
mov
nop
jmp
movsb
movsb
jmp
pusha
xchg
test
loop
mov
or
test
dec
in
sbb
cli
push
std
xchg
aam
lods
jb
pop
into
nop
es
jo
cld
xchg
dec
fldt
out
enter
xchg
jbe
iret
cwtl
push
out
call
lret
in
dec
cld
es
cmpsb
inc
push
inc
lods
inc
mov
scas
insb
add
cld
rol
ljmp
jb
mov
stos
and
imul
mov
and
js
dec
cs
je
mov
inc
dec
push
call
or
add
add
loop
jle
and
inc
or
pop
or
into
repz
mov
push
aas
dec
sub
cmp
pop
mov
pop
mov
adc
pop
and
es
aaa
in
gs
or
test
sbb
mov
jecxz
mov
icebp
decl
les
fs
cli
data16
in
ss
loope
xchg
mov
test
movb
fcmovb
incl
pop
inc
std
sub
test
inc
ljmp
test
ds
jbe
in
push
push
or
sbb
mov
jo
std
or
sbb
out
adc
rorl
xchg
sarl
push
shrb
lcall
mov
sbb
leave
jmp
mov
push
adc
or
mov
or
leave
in
sub
jmp
pusha
push
inc
jle
push
and
sub
ljmp
in
clc
insb
push
add
dec
les
in
fwait
mov
push
inc
addr16
aad
into
subb
lods
xchg
pop
sub
push
or
loope
mov
inc
hlt
clc
add
nop
rcrb
mov
jmp
jle
lahf
movsb
loope
test
daa
jnp
hlt
stos
adc
sbbl
pop
add
cmc
inc
inc
addb
and
testb
div
in
sub
jg
incl
ds
test
dec
aas
ds
fsubp
sub
sar
jmp
inc
adc
push
jb
xchg
ljmp
lea
fs
mov
ds
and
outsb
push
or
iret
hlt
ljmp
or
dec
movsb
in
imul
pop
rorb
and
popa
lock
lcall
shl
push
xchg
out
aam
scas
fildll
ret
dec
sarb
sbb
icebp
add
inc
add
pushl
fiaddl
into
cmp
add
in
fmul
jg
jg
jo
in
pushf
outsb
ret
dec
xchg
outsb
iret
inc
out
lock
lcall
mov
movsb
and
dec
dec
mov
mov
test
call
jb
cli
push
cli
mov
adc
cmp
mov
addr16
pushl
sbbl
jne
adc
lods
pusha
and
add
cmpsb
ljmp
mov
sub
lahf
jbe
icebp
mov
cs
cli
inc
out
sub
add
decl
xchg
push
inc
rorl
notb
mov
or
jl
pushl
cld
mov
mov
mov
cmp
roll
add
icebp
in
call
lds
dec
jno
loop
inc
imul
scas
cli
push
scas
adc
in
mov
rorb
inc
or
pusha
push
cmpsb
out
and
push
addb
mov
lds
pop
inc
inc
mov
lahf
sbb
enter
mov
in
int
push
in
mov
add
call
jp
mov
mov
lock
ljmp
dec
pop
push
rolb
sbb
outsb
int
repz
ds
dec
jnp
or
jbe
add
inc
enter
daa
mov
decl
test
ds
push
in
ljmp
xor
pop
adc
fcomip
incl
dec
dec
clc
loopne
push
incl
dec
bound
addb
mov
jbe
cs
add
sub
loopne
sbb
call
cltd
addb
cmpl
in
or
sub
cwtl
mov
ljmp
push
adc
in
mov
or
mulb
iret
ss
xor
sub
and
divb
pusha
je
fwait
add
mov
call
mov
adc
adc
xchg
test
push
push
push
repnz
iret
mov
aaa
dec
shlb
call
mov
add
pop
jno
clc
repnz
insb
push
mov
pop
lcall
les
add
inc
test
movsb
push
xor
adc
jmp
cld
notb
adc
cs
xor
dec
xor
jo
aam
push
hlt
adc
jae
pop
push
int3
push
xor
fidivs
or
or
mov
xor
inc
jmp
mov
push
push
aaa
push
call
push
xchg
mov
mov
fs
mov
sbb
push
shrl
mov
dec
scas
adc
decl
xchg
inc
mov
sub
arpl
push
sarl
insl
jne
dec
mov
rclb
bound
sar
or
pop
xchg
repnz
shl
mov
push
or
mov
stos
fisttps
and
cwtl
aad
nop
xor
add
popa
aas
xor
xor
pop
std
xchg
inc
pop
push
dec
xor
pop
sub
pop
jne
pusha
enter
outsl
mov
incl
arpl
push
cmpsb
xorl
loope
jne
xchg
clc
lcall
loopne
icebp
xchg
xchg
inc
arpl
out
xor
mov
pusha
fwait
dec
push
push
in
add
xor
add
inc
das
nop
enter
pushf
mov
sub
adc
lock
incl
dec
stos
ror
jp
jno
xchg
jmp
jbe
and
add
sub
lret
push
adc
xchg
jmp
mov
or
dec
jmp
cmp
ljmp
pop
jno
scas
jp
jmp
jle,pn
sub
pop
daa
push
outsb
cli
call
roll
and
inc
into
call
insl
inc
or
movsb
push
aam
imul
test
pop
loopne
adc
and
jb
push
and
icebp
popf
es
outsl
and
cmp
mov
or
sub
pop
in
dec
add
je
adcl
cmp
aas
stc
mov
mov
or
repnz
xchg
cmc
js
test
das
pushf
xchg
mov
ljmp
ret
int3
addb
cld
vmovshdup
mov
addr16
incl
mov
mov
and
cmp
mov
clc
fbld
aad
and
xchg
andl
pusha
scas
ds
xor
ret
data16
ljmp
cli
pusha
enter
jl
inc
into
test
andl
loop
push
mov
call
mull
pop
add
sbb
adcb
repnz
adc
mov
sbb
push
test
inc
loopne
cmc
rcl
repz
mov
cld
or
ljmp
pop
test
jge
testb
sbb
scas
out
sbb
cmp
ss
jg
dec
mov
jne
or
xchg
and
xchg
and
mov
imul
or
rolb
push
or
mov
aam
mov
call
mov
pop
or
popa
jo
pop
inc
or
and
sbb
and
push
pushl
arpl
jmp
clc
out
cld
xor
add
enter
or
hlt
push
pop
fmul
pop
out
andb
jo
iret
pop
jae
pop
shlb
add
clc
inc
incl
push
sbb
cmovl
inc
sub
jg
pushl
or
ds
xchg
adc
loopne
inc
push
pop
or
dec
int3
adc
mov
and
xchg
arpl
cmpsl
rclb
add
inc
push
xchg
xchg
mov
inc
jp
cli
js
test
push
sbb
inc
jns
shlb
inc
mov
punpckhdq
scas
nop
test
in
je
idiv
sbb
stos
fs
enter
dec
jmp
xor
call
pop
mov
stc
xor
dec
lods
xor
aaa
mov
subl
mov
dec
dec
arpl
mov
dec
fwait
mov
ja
jmp
negb
xchg
adc
cmp
incl
mov
dec
dec
add
dec
xchg
cs
mov
pushf
cmpsl
push
and
aad
test
mov
jmp
inc
int
lds
lock
lret
aad
out
mov
dec
ret
push
adcb
mov
push
rol
add
push
call
cli
mov
dec
arpl
mov
sub
aas
stos
test
cmp
enter
scas
add
mov
lcall
bound
pop
mov
push
xchg
aam
mov
loopne
lcall
sbbl
mov
cmp
mov
addr16
pop
fs
lods
test
lret
roll
movl
xor
cmp
dec
insb
fdivp
jg
sti
out
clts
cli
jl
loope
aam
ljmp
inc
cld
jg
fistps
scas
lods
push
cltd
xchg
jae
jp
pusha
push
dec
add
rolb
lock
or
lcall
adc
test
mov
pop
bound
lcall
inc
push
push
jb
sbb
push
rolb
popf
outsb
andb
data16
pushl
add
xor
adc
adc
ficoml
pop
push
jmp
or
in
sbb
es
cmpsl
and
mov
adc
pop
js
and
inc
in
push
pop
inc
pushf
push
fcomip
out
adc
inc
mov
jmp
fwait
repz
popf
xchg
jl
insl
arpl
mov
ljmp
rclb
push
clc
loope
loopne
push
sub
sbb
and
data16
lcall
aaa
cli
xor
sbb
inc
or
or
cli
lea
test
imul
mov
dec
and
mov
test
add
int3
test
or
mov
mov
sub
jmp
mov
cmpsb
pop
adc
das
xor
inc
sahf
push
pusha
lahf
mov
int3
sbb
decl
mov
dec
inc
nop
loope
push
mov
and
into
push
adc
ret
dec
add
leave
mov
fstpt
popf
cmpsb
dec
and
insb
jns
mov
nop
aam
int
adc
xchg
in
cmp
lcall
or
jmp
or
out
and
cs
ljmp
hlt
push
cmp
xchg
mov
fucom
int
repz
sysret
rep
fcomip
dec
sub
ret
cltd
cmp
clc
sbb
mov
dec
out
mov
ret
loopne
roll
dec
mov
dec
pushl
std
lcall
aad
cwtl
adc
fidivs
cmp
push
add
mov
movsb
push
std
pushl
xlat
test
mov
mov
mov
lret
lahf
xchg
fsubs
inc
in
fst
aam
pop
sbb
cwtl
lea
pop
xlat
mov
outsl
outsl
fstl
shrl
sbb
sub
and
subl
jg
jae
lods
movsl
scas
fidivrs
cs
push
lods
xchg
pop
loop
jns
push
in
clc
jg
pushf
pop
xchg
sbb
pusha
jp
pop
cmp
pop
push
or
sub
push
paddb
inc
xor
ds
leave
inc
add
pushl
inc
inc
mov
sbb
pushf
data16
daa
adc
cltd
push
cs
mov
out
jg,pn
jbe
xor
call
sarl
icebp
sbb
sbb
lcall
ror
push
mov
add
add
mov
lods
dec
xchg
loop
test
cmp
mov
sti
incl
inc
or
xchg
pop
out
push
xor
mov
mov
mov
fcmove
sub
inc
stos
les
inc
sub
std
sub
incl
popf
sub
int
push
dec
mov
cltd
push
orb
cltd
lret
jg
lods
adc
xor
push
pop
scas
jae
jo
xchg
js
sub
add
xor
jo
adc
call
cmp
sbb
mov
decb
shll
cltd
out
pushf
aaa
xchg
push
outsb
sbb
ret
pop
and
aam
or
add
fs
mov
inc
fwait
pop
outsb
fstpt
jnp
decb
pop
jbe
pop
jae
add
ljmp
mov
mov
ljmp
test
xchg
xlat
and
subb
mov
mov
or
sub
fdivrs
cld
xchg
push
loope
push
inc
or
imul
das
cmpsb
ss
push
insl
jl
rolb
icebp
xlat
inc
subb
dec
bound
std
fwait
jle
call
jb
adc
pusha
adc
ja
adc
and
bound
add
add
mov
cmp
shll
sbb
scas
cli
decl
loope
sbbl
dec
inc
bound
arpl
xchg
cmp
fmuls
incl
ret
mov
pop
flds
mov
les
dec
sub
xchg
jmp
cmc
pop
pusha
fs
sbb
imul
and
add
decl
frstor
push
jo
cli
es
or
mov
jno
les
add
ja
lcall
add
lahf
sbb
movsl
mov
jmp
push
push
add
lret
aaa
xchg
dec
dec
sbb
xchg
lahf
push
lods
decl
dec
adc
mov
adc
mov
and
lods
fsubp
xchg
push
loop
cmpsb
fbld
std
push
xchg
push
pop
lods
sub
jne
push
lcall
ljmp
push
loopne
inc
leave
mov
pop
jl
xchg
push
mov
arpl
std
sbb
fldpi
or
pop
and
pop
pop
jno
mov
xchg
sbb
push
pop
incl
push
push
inc
subl
sbb
cli
fistpll
shufps
jl
sbb
mov
outsb
shl
pop
iret
test
inc
mov
enter
xchg
add
push
jns
xchg
sahf
ja
mov
mov
popa
icebp
sub
inc
mov
call
orl
sub
jne
pop
push
frstor
xchg
std
cmc
aad
stos
dec
ja
pushl
gs
insl
test
popf
jbe
arpl
fsub
mov
int3
cmp
mov
ja
pop
arpl
xor
dec
movsb
sbb
jl
ja
dec
idivb
inc
enter
lcall
add
pop
out
sbb
mov
lcall
movsb
inc
mov
into
push
shlb
dec
inc
xor
movsb
xchg
inc
rol
decl
rclb
sbbl
nop
fwait
fwait
push
xchg
cmpsb
ja
pop
add
push
cmp
xchg
lret
dec
enter
dec
arpl
mov
cmp
inc
jle
adc
add
lods
and
cmpsl
mov
lods
sahf
data16
cmpsl
hlt
incl
xchg
sub
push
lods
xlat
sahf
and
dec
xchg
cmpsl
dec
inc
or
icebp
call
mov
add
pop
hlt
loop
jbe
jmp
mov
pusha
int
or
sbb
sbb
pop
dec
int3
mov
insb
pusha
pushf
roll
sahf
incl
mov
fmull
sbbl
mov
inc
or
arpl
cs
decl
in
ret
and
shrb
xchg
or
aas
and
add
push
and
shll
sub
in
inc
int3
popa
xor
or
adc
push
cmpsb
test
add
mov
cmp
orl
add
push
or
lcall
push
aam
addb
dec
adc
mov
and
or
dec
movsb
mov
shrl
jno
and
push
aam
inc
sarb
fwait
and
xor
dec
pop
nop
xor
inc
jge
jb
bound
jecxz
inc
movsl
sub
and
fiaddl
sbb
or
push
idivl
mov
sub
jbe
ds
rorl
mov
mov
and
dec
or
and
xchg
cli
popf
mov
call
adc
xchg
lods
xchg
fsts
and
sub
sub
lock
pop
or
call
dec
cmp
add
ja
je
add
incl
pusha
pop
dec
and
or
es
and
mov
sub
decl
push
xchg
adcb
mov
mov
loopne
inc
mov
fidivl
fcomip
call
out
aaa
test
and
int
dec
pop
ret
jecxz
adc
and
pop
dec
inc
outsb
imul
push
pop
pop
dec
ret
lcall
mov
jb
push
packuswb
xorl
mov
inc
loopne
sub
into
clc
loopne
mov
mov
cmp
mov
sbbl
sub
push
aam
das
and
and
pop
lret
imul
pop
sub
loopne
daa
xchg
movsb
and
cmp
inc
mov
inc
out
add
ja
mov
add
adc
loopne
and
xor
push
xchg
xchg
aam
jmp
xor
push
in
inc
ljmp
cld
or
inc
and
sbb
pusha
or
and
call
sti
ljmp
adc
jne
mov
pop
cmp
adc
cmpsl
ljmp
int3
repz
pop
test
push
in
cmp
insl
call
sahf
fs
xchg
adc
xchg
std
test
dec
mov
stos
out
inc
xchg
repnz
push
pop
adc
call
movaps
aam
lods
add
or
stos
incl
shrb
jp
pusha
add
notl
cmp
out
jg
or
jb
push
add
pop
lea
je
sub
inc
in
push
cmpsl
add
clc
pop
dec
lahf
mov
rcrl
sub
incl
int3
rorb
cld
or
andb
mov
ljmp
mov
mov
pop
pop
cmp
dec
jge
adc
sahf
test
lods
call
or
push
sbb
stos
or
add
jle
and
testl
xchg
cld
ljmp
jbe
insb
scas
sub
mov
arpl
test
xor
push
jg
push
decl
cltd
les
and
push
sbb
pop
movsl
fcomip
adc
insl
loopne
mov
dec
int
mov
dec
aad
in
fs
dec
popf
mov
xlat
xchg
daa
inc
push
dec
cmpsb
inc
cmp
xchg
test
insl
in
enter
fnstenv
loope
es
lods
cmp
jmp
jbe
mov
xchg
fs
push
or
adc
mov
daa
cli
movsb
shll
subb
push
inc
stos
mov
jle
ror
add
jmp
je
loopne
mov
aam
xchg
inc
decl
mov
mov
loopne
ljmp
xchg
dec
push
cmc
or
sbb
cmpsl
dec
jmp
sub
test
pop
cwtl
enter
and
iret
call
std
jmp
sub
pop
dec
pop
imul
or
dec
inc
add
lcall
jmp
data16
adc
loope
test
jne
fs
jg
or
stos
add
ljmp
enter
iret
lcall
mov
mov
scas
add
cvtps2pd
and
rolb
or
jb
lcall
or
shlb
call
mov
xchg
jnp
test
sbb
sti
data16
jl
nop
clc
sbb
jbe
mov
inc
lea
ljmp
pop
push
adc
in
js
jp
cmp
fcmovb
mov
push
xchg
push
jnp
push
xor
pushl
add
fld
and
dec
repnz
out
mov
dec
cmc
inc
adc
cmpsb
fdivrl
jmp
cli
mov
inc
out
outsl
jne
sub
jg
mov
sub
cmpsb
jp
lock
sub
imul
fbstp
jo
sub
rolb
xlat
pop
and
adc
or
incl
ret
shlb
lret
xor
out
pop
leave
rclb
mov
das
sub
arpl
mov
add
ljmp
jb
cmp
xor
sbb
fcos
pop
push
sbb
es
pop
divb
repnz
xor
add
decl
push
add
mov
rolb
pop
pop
adc
jmp
xor
xlat
and
mov
cld
pop
addl
mov
xlat
jne
aam
cwtl
cmpsb
mov
xchg
pop
enter
xchg
bound
push
add
outsl
mov
outsb
adc
push
and
cmp
sar
addb
xchg
test
xchg
push
call
push
sub
jne
stos
mov
push
adc
sbb
adc
dec
mov
ja
sahf
jo
dec
aaa
adc
mov
leave
push
adc
pop
mov
adc
mov
insb
loop
sbb
bound
mov
mov
and
push
jns
mov
notb
pop
aad
adc
mov
adc
jb
out
xchg
outsl
or
sub
mov
in
inc
mov
xor
loop
sub
xchg
add
push
pusha
rcll
inc
aam
jge
jo
outsl
clc
aaa
sbb
sbb
das
pop
ja
xor
push
push
add
ljmp
mulb
inc
xor
mov
xor
pop
mov
cmpl
nop
dec
sar
jg
inc
adc
xor
add
and
clc
aaa
push
in
arpl
gs
loopne
xchg
loope
cli
mov
movsl
inc
push
pop
dec
aaa
push
push
ljmp
addl
jge
test
test
pop
addr16
xchg
xchg
test
sar
js
xchg
pop
mov
mov
jmp
jmp
xchg
push
add
add
add
xorb
inc
and
and
cmp
mov
insb
int
mov
repz
push
daa
mov
fwait
repnz
adc
push
dec
mov
xchg
mov
pop
int
adc
jmp
adc
adc
daa
shll
xchg
pop
mov
pop
inc
subl
icebp
daa
add
jmp
rcl
mov
subb
sbb
cld
lds
cmpl
jo
push
push
out
and
rolb
lcall
adc
jg
fsts
idivb
adc
pop
fimull
popa
std
js
bound
stc
xlat
cs
loopne
and
ljmp
sbb
and
das
and
inc
mov
sbb
xor
sbb
pusha
addl
mov
imul
pushf
incl
mov
lds
fldcw
inc
ss
sub
and
sbb
adc
pushl
pusha
xchg
sbb
push
fs
loope
pop
pop
push
xor
push
xor
arpl
insl
push
incl
insb
into
or
xor
ss
push
lcall
test
sub
loopne
add
ret
and
pop
add
inc
fstpt
pop
cmp
xchg
js
ja
adc
lcall
add
xor
ret
imul
loop,pt
cltd
cmpsb
ja
mov
lcall
js
and
pop
out
adc
or
insb
inc
popa
adc
adc
imul
pop
pop
mov
sub
sub
mov
push
mov
xor
xchg
adc
ljmp
mov
stc
jne
mov
adc
xor
ret
shrl
incl
cld
mov
aam
xchg
jo
test
xlat
mov
jns
mov
ljmp
adc
mov
add
pusha
or
push
push
movsl
adc
loope
xor
jmp
popa
xchg
mov
dec
mov
stc
imulb
xchg
adc
jns
fwait
hlt
decl
xchg
sbb
jns
sub
rcrl
xor
andb
mov
iret
pusha
inc
push
or
xchg
sub
inc
int3
shrl
shlb
mov
and
loope
incl
arpl
mov
xor
inc
xchg
inc
mulps
addr16
xor
icebp
mov
or
test
dec
adc
adc
cmp
decl
sub
xor
sub
mov
jp
imul
xchg
scas
insb
adc
add
rolb
lret
add
or
dec
jmp
out
adc
xor
es
rclb
lea
and
or
incl
cld
jne
mov
jbe
sub
imul
call
sub
decl
cwtl
cmp
aam
mov
cmp
dec
mov
pop
mov
dec
xchg
ret
inc
inc
ljmp
mov
push
loop
lea
repnz
ljmp
scas
ret
mov
add
mov
push
shrl
pop
push
aas
fbld
test
repnz
mov
incl
xlat
test
cltd
jmp
or
loop
xchg
pop
rorl
lods
sbb
std
call
imul
push
mov
jno
lds
mov
dec
ret
stos
lcall
call
stos
loope
mov
arpl
xor
std
call
or
add
add
push
pop
jbe
adc
repnz
xor
decl
adc
and
jne
inc
cmp
and
pop
jae
jle
das
adcb
cli
mov
arpl
cmp
pop
mov
test
ja
scas
lcall
lret
adc
add
mov
mov
or
mov
mov
and
sbb
ds
stos
imul
and
incl
or
cwtl
mulb
test
imul
cli
jg
push
cmpsb
mov
movsb
mov
pop
dec
cmp
jno
mov
ljmp
xchg
pop
jp
lods
inc
mov
enter
xchg
fs
or
pop
mov
jnp
adc
andb
sar
or
test
mov
adc
inc
clc
call
jbe
out
test
gs
pop
mov
ret
cmpsl
dec
popa
pop
les
push
add
lcall
adc
jnp
loopne
mov
jnp
inc
inc
in
adc
mov
xor
cld
pop
push
xor
push
leave
test
xor
test
sbb
insb
jo
test
sbb
decl
nop
mov
sub
push
push
imul
push
jmp
xor
mov
inc
incl
xorl
and
rcrl
lret
xchg
push
adc
or
jns
outsl
xor
dec
lcall
and
fisttps
repnz
cmp
and
mov
ljmp
cli
fwait
add
lret
push
pop
mov
mov
sbb
mov
cmp
jg
decl
or
movsb
aad
jmp
js
jl
jb
sbb
mov
push
jle
xchg
rcrl
or
mov
sub
sub
lds
es
insb
stc
cmp
pop
jp
pop
dec
loop
call
add
mov
inc
es
lcall
in
mov
cmp
xchg
pop
aam
pop
mov
pusha
dec
xor
add
test
pushl
mov
cmpsb
pop
inc
lods
mov
mov
mov
mov
xor
call
jle
cwtl
popf
dec
gs
popa
adc
dec
mov
and
fdivr
fbstp
dec
sbb
dec
test
aam
das
sub
incl
push
das
mov
jno
shlb
xchg
nop
pop
xor
fs
arpl
rcr
cltd
cld
mov
mov
push
xor
cmp
sub
fstpl
jg
gs
lahf
inc
xchg
lods
insl
inc
data16
mov
ja
xchg
mov
sub
xor
mov
jmp
ss
push
and
adc
cmc
jne
xlat
jne
add
adc
or
stos
dec
addb
test
dec
mov
mov
push
push
daa
xor
mov
scas
or
es
call
and
inc
js
andb
lcall
int3
lock
insl
rorb
and
clc
mov
aad
cmp
pushf
movsl
fldcw
pop
dec
jbe
cmp
hlt
andb
test
or
inc
pop
cmc
sarl
dec
loopne
jmp
add
adc
hlt
or
outsb
or
jmp
int3
jp
rorl
and
test
xchg
rclb
lcall
subb
adc
and
fwait
ljmp
pusha
sar
fs
out
pop
jnp
and
fwait
cmp
push
aam
int
cli
call
fs
rcr
adc
leave
sbb
push
inc
add
or
clc
pushl
xchg
out
add
shll
mov
cmpsl
arpl
cmp
inc
ret
push
lcall
popa
push
data16
pop
lea
icebp
popa
pop
sbb
pop
data16
xchg
movsl
xchg
test
call
and
and
sbb
dec
in
test
cmp
pop
decl
xlat
js
lret
mov
lret
mov
jo
mov
mov
mov
insl
repz
or
or
push
add
cli
jmp
xchg
sbb
dec
cmpsl
lds
cmp
sub
lea
sub
call
cmp
sbb
pop
imul
sarl
and
jo
and
pop
pop
std
incl
popa
cmp
jmp
mov
adc
call
xor
add
jbe
iret
or
push
mov
data16
jmp
sti
adc
mov
jge
cld
mov
mov
add
rcl
sar
lods
mov
decl
in
pop
popa
mov
xorb
jno
stos
and
inc
inc
movsl
mov
lods
shlb
mov
into
loopne
pop
fsts
in
mov
adc
sahf
and
fdivs
and
jae
jo
add
push
push
out
sbb
lock
mov
mov
stc
fstps
xor
and
loop
call
in
push
pusha
repz
xchg
jl
or
inc
push
and
lock
jo
adc
jg
clc
decl
pop
mov
cmp
aad
lret
lret
fcomp
mov
push
sub
push
cs
lods
in
fdiv
call
movsb
or
adc
in
fwait
imul
in
lods
jmp
jge
leave
rep
inc
jp
pop
stos
cmp
cld
jns
andb
cmp
mov
mov
gs
mov
pop
dec
mov
jb
and
mov
sub
xor
inc
add
loop
push
ljmp
adc
jmp
xor
clc
jge
mov
adc
xor
pop
lods
rol
outsb
mov
ret
pop
add
mov
pop
adc
incl
or
cmp
inc
fwait
incl
jmp
cld
adc
pop
push
xor
or
fistpl
cld
outsl
push
inc
push
and
dec
dec
inc
outsb
int3
push
push
mov
clc
xor
pop
loop
jmp
bnd
inc
adc
sbb
add
and
mov
ljmp
adc
inc
test
dec
add
insl
std
aam
dec
dec
dec
jecxz
sti
and
cmpsb
pop
push
fwait
icebp
pop
call
lret
notrack
fstpt
repnz
mov
scas
lret
outsb
arpl
pushl
pop
mov
mov
sbb
add
pop
les
gs
add
pusha
adc
push
sub
adc
sbb
mov
mov
incl
les
push
sbb
test
sub
out
js
sub
lret
xor
inc
cwtl
enter
mov
shrl
mov
dec
outsb
test
sarl
ljmp
sbb
sub
xor
lds
push
push
mov
out
mov
add
lods
xchg
mov
cmp
roll
cmpsb
jmp
push
jge
mov
pusha
stos
xor
cli
xor
xchg
xor
dec
incl
or
push
int
stc
loopne
xchg
xchg
lcall
dec
fwait
push
andl
adc
sbb
and
mov
pop
fdivrp
decl
push
push
jecxz
lods
out
in
leave
fwait
xor
pop
pushf
ds
pushf
aas
xchg
test
rorb
pop
into
loope
hlt
ljmp
ret
mov
or
sti
ja
ret
ds
sbb
xor
decl
jp
cmc
or
aas
insb
cwtl
mov
stos
clc
pop
dec
addb
mov
adc
xchg
incl
mov
ret
dec
test
adc
fwait
incb
xlat
push
mov
push
fwait
inc
xor
push
insb
cld
lea
sbb
adc
sbb
roll
movsl
incl
ficoms
sbb
pushf
icebp
pop
ja
call
pop
fcom
orl
dec
std
add
lret
test
call
std
outsl
nop
xchg
lea
mulb
xchg
adc
outsb
xor
cmc
pusha
mov
clc
call
ja
adc
cmp
jnp
popa
xchg
ds
mov
jmp
mov
inc
jge
xchg
rorb
or
and
sbb
jmp
lcall
jle
popf
mov
mov
sub
movsb
mov
dec
jmp
ret
xchg
xor
test
push
jle
scas
inc
pop
push
test
scas
stos
push
mov
incl
popa
test
loop
fadds
scas
fsubr
int
hlt
cmp
scas
test
gs
mov
adc
mov
sbb
lcall
lods
jno
and
pop
mov
sbb
inc
lods
mov
movsl
jmp
into
movsb
loopne
xor
mov
add
lcall
dec
mov
xchg
insl
sbb
test
in
mov
cmp
sbb
fidivrl
mov
cmp
loop,pt
and
mov
mov
cs
repnz
and
call
pop
cmp
push
ret
sub
test
push
clc
jg
add
incl
pop
add
call
call
or
push
adcb
xor
wrmsr
rcr
and
dec
loope
call
sbb
es
insb
push
ja
mov
mov
mov
enter
jnp
cmp
call
mov
push
clc
sbb
lret
mov
popa
pop
rorl
cmpb
ljmp
aaa
jecxz
push
dec
add
jae
cmc
insb
orl
insb
mov
cld
decl
inc
xor
inc
pop
xor
mov
sub
test
sub
dec
stos
outsl
jb
call
sub
and
mov
xchg
inc
mov
inc
adc
cmp
cmp
adc
cmp
or
cmpsl
adc
or
inc
lcall
xor
and
orb
and
jbe
adcl
pop
xor
or
mov
mov
scas
xor
cld
outsl
pop
mov
cld
mov
jl
pusha
repnz
insb
dec
data16
jg
pusha
push
add
arpl
jo
or
inc
repz
pop
sbb
insb
xchg
pop
or
call
mov
bound
lcall
mov
mov
fadds
cmp
xor
lods
fs
pop
pop
data16
inc
lcall
or
ss
cli
mov
fs
repnz
push
push
pushf
mov
ret
incl
movsb
cmp
or
xor
cltd
mulb
pusha
pop
test
add
add
das
ss
int3
enter
inc
mov
pop
jl
inc
pop
pop
ret
fcmovne
mov
mov
sbb
outsb
jg
rcrb
rcll
nop
inc
repnz
and
dec
inc
cmovl
cmpsb
xor
and
ja
sar
hlt
mov
dec
cmpsb
jmp
cmpsl
sbb
cld
scas
jae
lret
cmpsl
rolb
push
or
ljmp
inc
and
adc
gs
int3
inc
inc
adc
and
mov
test
jbe
adc
fidivl
xchg
or
ror
addr16
jae
jmp
mov
fs
jl
hlt
xchg
mov
and
mov
jp
and
sub
pop
or
bnd
scas
mov
push
cmp
add
push
xchg
imul
pop
decl
insl
cs
stc
pop
inc
jnp
cmpsb
jg
dec
cltd
lret
sbb
incl
push
add
imul
mov
inc
or
rclb
cmpsb
icebp
aaa
ret
fcompl
pushf
popa
jmp
and
mov
xchg
idivb
sbb
jge
adc
fbld
jmp
dec
or
loopne
jp
daa
ljmp
inc
add
int3
xchg
and
mov
or
inc
pop
cld
bound
fwait
inc
pop
roll
fwait
adc
les
fwait
inc
loope
mov
jl
cmp
inc
and
cwtl
mov
inc
sbb
insb
jmp
fdiv
js
mov
test
and
decl
inc
adc
jp
pushf
lcall
and
hlt
cmp
pop
into
dec
jnp
adc
cmpsl
pop
sub
int
decb
sbb
sub
gs
jg
lcall
push
mov
lods
je
shrb
add
movsl
out
xchg
loopne
enter
push
cmpsl
xchg
push
cld
outsl
mov
mov
pop
xchg
xchg
sub
mov
adc
mov
ja
adc
and
add
movsl
loop
dec
mov
add
mov
xor
sub
loopne
adc
and
dec
mov
adc
mov
add
call
out
xor
fs
sar
orl
jmp
jb
jns
push
xor
in
test
sbb
pusha
je
sbb
fidivl
neg
lcall
adc
dec
sub
popa
js
es
lods
sbb
lock
decl
ret
adc
js
and
clc
loope
cwtl
cmp
jp
cld
das
cli
pushl
int3
and
push
xchg
fcoms
cmp
in
push
mov
xchg
into
inc
add
movb
cmc
stos
popa
test
jg
adc
xchg
mov
jo
mov
repnz
dec
xchg
stc
mov
adc
or
sbbl
int
or
sub
cs
mov
pop
jb
push
mov
es
nop
call
aaa
pop
outsb
pshufw
push
xchg
inc
dec
sub
pop
repnz
xchg
stos
sar
pop
call
lods
push
mov
lret
test
ret
cmp
outsl
clc
mov
cmp
xchg
test
fdivrl
xchg
leave
sub
pushl
outsb
xchg
inc
dec
pusha
scas
lds
mov
sub
ljmp
xchg
lods
les
cld
outsl
cmp
clc
fxch
sarl
jg
nop
ja
dec
mov
in
push
cld
call
hlt
mov
sub
mov
or
loop
cmp
mov
mov
sub
pop
mov
lcall
addr16
imul
negb
enter
xchg
ljmp
and
sub
daa
movsb
or
dec
int
jns
jg
test
pusha
xchg
xor
dec
test
add
mov
fstl
icebp
pushl
rcll
push
dec
arpl
dec
pushl
lds
shlb
rolb
inc
sbb
das
jge
arpl
arpl
ret
rcll
std
and
popf
mov
jne
add
inc
add
push
push
bound
ds
dec
sbb
jnp
insb
xchg
inc
pop
cmp
popf
loopne
xchg
mov
test
pushl
test
adc
lcall
push
xchg
pop
push
stos
and
scas
cld
and
ljmp
and
repnz
loop
out
and
dec
leave
push
inc
mov
sahf
push
inc
sub
stc
sahf
lods
js
sar
ljmp
mov
jp
pop
xchg
popa
and
movsb
cmpsl
xor
gs
fdivrs
and
icebp
adc
push
cli
call
insl
arpl
add
sub
adc
add
or
cmp
push
or
xchg
and
aaa
stc
inc
arpl
ret
sub
or
aaa
das
test
mov
stos
dec
fiadds
clc
fs
xor
mov
incl
or
xorb
sbb
or
jg
jle
mov
add
add
stos
or
hlt
mov
test
push
lock
cmp
mov
xor
sbb
inc
mov
adc
das
mov
movsb
mov
sbb
inc
subl
push
jp
mov
movsb
daa
cmpsb
sub
xor
loopne
mov
leave
xor
imul
mov
dec
and
xor
stos
sub
inc
dec
mov
xor
lcall
mov
fsubrs
mov
xchg
cmpsl
call
test
fmull
test
mov
or
lock
or
or
xchg
int
sub
jb
xchg
push
jns
rorl
mov
pop
sbb
test
xor
fldcw
cmp
fisttpl
mov
mov
dec
mov
xor
jle
xchg
cmp
add
or
mov
shlb
ret
rcll
leave
nop
cmp
mov
imul
aas
pop
std
ficoml
and
stc
pop
sub
shlb
and
mov
add
rorb
arpl
out
pusha
ror
pop
jmp
mov
popa
cltd
mov
lock
fwait
mov
ljmp
sub
mov
sbbl
call
dec
lahf
adc
cmp
xor
ret
xchg
cmp
adc
adc
push
mov
in
in
mov
nop
mov
adc
subl
xorl
fcomip
sub
add
das
add
mov
mov
je
add
pop
hlt
in
push
rcrl
adc
mov
mov
scas
and
movsl
mov
cwtl
popf
ret
imul
ret
lcall
sbb
add
xchg
push
mov
or
xorl
or
movsl
loope
pushl
add
xchg
pop
xchg
lods
pop
lret
mov
jo
es
mov
dec
call
ja
in
lahf
jae
mov
sub
scas
mov
pop
or
add
push
push
inc
adc
imul
mov
sub
out
sbbl
mov
rorb
jg
cmp
inc
push
mov
fchs
mov
mov
filds
mov
and
inc
mov
or
test
mov
mov
xor
pop
sbb
pop
call
lock
test
sub
cld
jle
inc
xor
pushl
xor
nop
or
mov
mov
or
mov
cmp
dec
add
mov
pop
xchg
adc
pushl
fdivrl
cli
mov
or
mov
adc
xor
add
rcrb
and
das
stc
xchg
das
call
and
daa
imul
push
inc
sub
sbb
cmp
inc
int
cmp
cltd
inc
inc
inc
dec
movsl
mov
mov
dec
out
or
push
popa
or
popf
jmp
imul
adc
imul
repz
test
and
pushl
dec
test
loopne
cmp
nop
xchg
test
mov
sti
sub
es
jmp
roll
add
insl
cltd
push
xor
jae
pop
test
decl
xor
mov
pusha
mov
int3
pop
frstor
fidivl
dec
or
jg
sbbb
enter
mov
clc
int
mov
push
stos
dec
and
shl
mov
mov
inc
int3
and
and
xchg
rclb
cmpsl
and
add
test
xor
mov
inc
movsl
icebp
cvttps2pi
pop
and
sub
jl
mov
ret
ljmp
es
cmpsl
stos
stos
mov
enter
xchg
xor
enter
or
mov
push
add
lds
test
pop
jmp
adc
mov
daa
movsb
movsl
lret
mov
call
lret
movsl
insb
add
mov
add
jne
lods
mov
pushf
sbb
dec
aad
jmp
mov
loope
ds
lods
dec
cld
sahf
lret
inc
or
cmc
popf
pop
push
lret
out
xchg
cmp
dec
mov
pusha
mov
fs
cmp
incl
daa
jmp
inc
cs
scas
xlat
sub
add
mov
sbbl
insl
push
std
rol
sub
in
push
popf
mov
push
pushf
rorb
call
mov
xlat
insb
jae
cli
jecxz
or
test
or
in
mov
adc
inc
jnp
sub
cmp
scas
cmc
cmp
sarl
test
pop
adc
xlat
inc
sub
cmc
push
add
lea
repz
lods
ljmp
mov
or
push
or
add
test
inc
pop
icebp
adc
enter
clc
push
xchg
insb
push
sbb
call
adcl
cmp
subb
dec
call
lret
ret
jno
pop
ljmp
pusha
sbb
sub
dec
xchg
push
cli
sarb
js
sbb
incl
sub
push
ljmp
push
in
xor
mov
pop
dec
test
adc
or
shl
fnsave
cs
lock
add
pop
jne
mov
mov
jl
mov
push
lods
ljmp
cmpsl
rorb
dec
fdivs
fwait
and
je
sbb
jp
subb
mov
incl
cs
lods
jg
or
mov
shlb
or
decl
imul
sub
and
nop
bound
cmp
lea
mov
int3
or
jge
negl
push
pop
fs
push
adcb
mov
std
aaa
sbb
inc
sbb
sub
lret
nop
sub
stos
sti
xor
inc
popa
icebp
push
mov
mov
pop
and
lcall
loop
cwtl
xor
xor
daa
fisubs
nop
cwtl
pushl
jle
mov
cmp
sbb
or
mull
push
cmp
xor
addl
push
into
stos
sub
fmull
jle
push
test
push
outsl
inc
add
lcall
test
push
mov
push
push
sub
lea
fdivp
fstl
lcall
and
rcr
mov
push
adc
mov
insl
jecxz
daa
mov
mov
inc
jb
mov
cmp
cmp
push
push
arpl
nop
and
ljmp
in
mov
fdivs
or
pop
ret
mov
mov
ret
in
or
jle
mov
lahf
xor
adc
jo
jmp
jge
lahf
out
data16
dec
add
loop
mov
js
lea
loopne
sahf
and
jns
inc
push
mov
or
mov
pushf
push
lea
rclb
sbb
decl
jle
out
test
mov
lcall
test
inc
or
pop
outsb
adc
aas
fchs
loop
decl
mov
mov
je
paddd
scas
lret
mov
je
mov
fdivl
or
mov
decl
xor
fdivrl
nop
sbb
jmp
jmp
aaa
nop
lahf
outsb
dec
cmp
push
push
dec
cmp
add
addl
leave
cmp
push
test
adc
fnstcw
or
es
ljmp
mov
loope
dec
jbe
jns
push
jg
js
push
fbstp
add
cli
test
fst
pop
mov
scas
mov
or
pop
mov
scas
push
stc
adc
clc
xchg
in
add
dec
and
mov
add
stos
pop
cmc
sbb
decl
out
lds
mov
xchg
out
cmpsb
dec
cmpsl
ret
jl
jns
lds
push
incl
cwtl
das
pop
fs
adcl
cwtl
lds
jecxz
pop
push
cmp
cwtl
push
hlt
push
cmp
inc
mov
shll
aaa
xchg
and
inc
cmp
mov
sarl
mov
and
dec
nop
loopne
filds
mov
or
add
adc
pop
incl
add
in
xor
pop
lock
popf
aad
incl
lcall
push
sbb
cmp
sarl
lock
cmp
test
dec
lock
lods
shr
cmc
imul
inc
cmp
push
orl
push
aam
mov
call
loopne
fsubl
out
adc
mov
addl
in
inc
xchg
call
and
sbb
fidivs
inc
test
sbb
sub
or
arpl
scas
clc
incl
ss
insb
cmp
sub
mov
mov
and
test
ljmp
pushl
cmp
cmp
lods
dec
dec
movsb
mov
lcall
filds
es
int3
add
pop
je
xlat
cs
shl
call
add
push
or
stc
jmp
or
push
fs
mov
jle
incl
sbb
xor
je
xchg
jg
je
popa
js
jg
test
bound
inc
call
andl
jo
jae
xor
and
call
jecxz
sub
sbb
jg
test
nop
push
pop
mov
sub
push
sbb
incl
lret
stos
imul
daa
sbb
pop
hlt
dec
jmp
out
add
arpl
in
jbe
into
in
imul
lods
in
ficomps
inc
push
fcomip
mov
nop
rclb
sub
fwait
rcr
push
xor
pushl
jmp
mov
jnp
jno
or
cmp
jb
ret
xchg
fcomip
sbb
repnz
lahf
icebp
sbb
dec
jns
mov
adc
in
insb
repnz
mov
or
sbbb
daa
jno
jmp
aad
out
lret
sbb
js
mov
ss
xorb
scas
dec
jbe
sub
rcrl
insl
leave
enter
pop
sub
rclb
cmp
inc
fcmovbe
call
jmp
aam
push
je
dec
in
push
sbbb
js
orl
lcall
push
push
and
and
fadds
pusha
call
dec
push
push
out
or
test
lock
into
pop
movsb
jne
enter
add
add
ljmp
xchg
div
cmc
aam
data16
add
incl
aaa
lock
jo
fldcw
cmp
or
mov
pop
ljmp
pop
shlb
mov
in
popa
sbbb
pushl
xor
sbb
lods
push
fcmovbe
ja
sbb
dec
fsubp
xchg
adc
mov
daa
and
jae
dec
mov
cmp
imul
mov
jmp
outsb
stos
mov
imul
mov
add
push
shll
jg
dec
pop
mov
insb
ret
jns
pop
repz
call
cmp
andl
outsl
or
insl
rcrl
pop
mov
or
decl
je
or
cmp
shlb
or
mov
in
incl
outsb
sbb
lods
mov
mov
mov
add
jg
mov
ret
lds
cmc
fistpll
shlb
dec
lcall
mov
jmp
sbb
push
aas
sub
ljmp
mov
sbb
loope
push
xchg
mov
sub
pusha
add
lods
dec
inc
xor
or
mov
mov
adc
xchg
popa
lock
add
lcall
lock
subb
mov
cwtl
add
push
orb
dec
andl
mov
xchg
fwait
cmp
fsubs
mov
pop
into
in
sbb
scas
imul
lcall
test
roll
sbb
adc
sbb
psadbw
inc
pcmpgtb
and
into
lahf
and
scas
pop
fnstsw
decl
cmp
mov
jmp
repnz
jne
mov
frstor
inc
cld
dec
mov
mov
aaa
clc
pop
mov
xor
pusha
adc
add
add
add
xor
clc
faddl
movb
fisubs
addb
jno
cs
cld
jmp
mov
sbb
push
or
xor
rolb
ljmp
dec
adc
dec
cwtl
pop
adc
out
mov
incl
cmp
pop
aam
inc
decl
xchg
add
cmp
adc
call
test
inc
add
add
leave
gs
or
mov
inc
sbbw
lret
dec
or
call
std
int
rcrl
adc
pop
in
inc
sbb
sar
call
enter
xchg
dec
gs
rcrb
mov
inc
repnz
jne
adc
push
dec
push
pop
dec
mov
lock
inc
xor
push
xchg
sahf
aaa
lds
push
dec
push
xchg
out
push
and
int
loope
adc
in
push
jg
call
outsb
shll
mov
dec
sub
sbb
sbb
push
cwtl
jl
pop
add
in
adc
mov
sahf
mov
addr16
fnsave
sbb
mov
gs
outsb
mov
clc
mov
lds
lea
jae
in
sbb
ret
mov
decl
or
jno
adc
jnp
mov
jb
call
lcall
pop
lret
adcb
dec
mov
movsb
xchg
add
sar
push
push
or
adc
cwtl
test
mov
add
jg
adc
and
xchg
adc
pop
sub
and
mov
mov
or
movsl
test
decl
push
cli
test
dec
mov
adc
xor
lock
lods
test
pusha
xchg
pop
notl
push
jns
jp
dec
cmp
or
test
rorb
push
mov
pop
mov
loop
push
push
sub
jp
pop
sbb
xchg
xor
dec
and
jg
add
jle
jmp
outsb
adc
push
add
push
les
stos
dec
lds
or
jae
sbb
or
fs
inc
jmp
dec
ljmp
inc
sub
adc
mulb
pop
fcomip
test
mov
jp
pop
fsubs
int
pusha
gs
xchg
int
dec
cmp
addr16
sbb
sti
stos
pop
mov
mov
adc
data16
outsl
lcall
sbb
mov
out
rorl
sub
nop
fiadds
sbb
incl
cli
rorl
iret
js
mov
push
xchg
and
lods
loopne
ds
jmp
mov
pop
add
stos
adc
pushl
mov
loopne
pusha
sbb
push
bound
add
sub
dec
sub
rclb
call
xor
outsb
in
sub
inc
ds
dec
or
xchg
sub
mov
incl
mov
fcmovne
xor
ret
adc
push
inc
pop
lcall
inc
mov
orb
xchg
outsb
mov
cwtl
push
ja
aam
jns
jmp
rolb
arpl
push
and
adc
ss
inc
pop
mov
jns
jmp
cmc
jne
mov
jmp
scas
clc
es
adc
les
add
lds
mov
decl
push
pushf
add
popa
or
add
cmp
cmp
daa
nop
dec
in
xor
sub
fbld
and
fcom
ficoms
repnz
pop
out
in
and
js
dec
mov
cmpsl
xchg
rcrl
fnsave
cmp
xor
sbb
call
mov
lock
pop
cmp
cwtl
cs
xor
push
jecxz
jnp
nop
cmpl
push
push
pop
cmpb
movsb
and
dec
clc
cltd
push
add
nop
inc
ljmp
arpl
movsb
and
push
clc
jl
sub
sti
add
call
xor
decl
nop
add
xchg
inc
cmp
outsl
dec
ror
jbe
and
and
jle
and
test
push
xchg
int3
cmpsb
movsb
lock
call
xchg
push
xchg
push
xor
insl
pop
xchg
push
ljmp
aaa
mov
mov
and
adc
dec
pop
jp
fstpl
mov
mov
fnsave
dec
movl
pop
sbb
mov
add
pop
stc
jg
xchg
js
cmp
and
push
xchg
pop
dec
out
xchg
aam
in
fisubl
lahf
sbb
add
loopne
pop
lcall
inc
or
and
sub
or
sbb
movsl
gs
jns
push
in
cmp
shll
lcall
in
int3
cli
sbbb
out
push
addb
sar
faddl
mov
in
fmull
clc
lds
aam
popf
repz
arpl
aas
jp
dec
xor
ret
aas
jne
sbb
push
das
add
jno
inc
sub
jbe
jmp
cmp
xor
int
sbb
imul
xor
jb
lret
xor
incl
insb
add
sbb
jmp
sar
scas
jle
insb
dec
mov
jmp
mov
repnz
insl
push
and
xchg
jbe
movsb
sub
icebp
imul
push
lea
xor
pop
and
addb
movsl
mov
add
sbb
cmp
ljmp
mov
loop
mov
push
stc
out
add
jb
mov
fdivrs
loopne
pushl
mov
in
pop
outsb
xchg
sub
xchg
xchg
add
and
sub
in
call
push
stos
pop
dec
pop
ss
ret
sbb
inc
and
nop
jo
inc
sbb
in
push
mov
call
cs
mov
cmp
rcll
push
data16
mov
dec
int3
xchg
gs
add
cmpsl
mov
addb
mov
lods
lret
cli
push
mov
mov
pop
cmc
stc
lcall
dec
clc
incl
pusha
pcmpgtw
mov
sbb
or
out
out
ljmp
jge
push
lahf
cli
aaa
movsb
das
clc
lret
dec
sbb
stos
testb
adc
data16
sbb
jg
jb
cmp
mov
add
insb
jo
sbb
sbb
mov
cltd
dec
jmp
push
cmp
cmp
out
clc
jmp
test
fs
dec
inc
fcompl
sbb
cmp
test
cmp
enter
xorb
les
and
hlt
decl
jne
and
subl
ljmp
mov
xor
xchg
and
scas
push
dec
sbbl
xor
and
aad
push
mov
scas
mov
dec
xchg
scas
or
inc
adcb
insb
cs
mov
dec
add
out
addb
push
aaa
pop
sub
jns
rorl
push
mov
in
fistl
icebp
pop
inc
loope
int
das
cli
jmp
sub
nop
jl
xor
data16
push
pop
sub
dec
dec
iret
sub
push
decl
in
add
push
dec
push
movhps
decl
cmpsl
clc
adc
sbb
outsb
inc
or
cli
daa
cmp
leave
mov
mov
xor
lods
leave
rcr
mov
cwtl
push
addr16
sub
lahf
insl
pop
into
jmp
or
jo
fildll
std
xor
and
dec
fisttps
inc
jne
mov
mov
lock
notb
pop
cmp
es
ret
movsl
mov
decl
and
push
leave
inc
aam
adc
rcll
rorb
or
das
push
jg
aam
add
nop
cld
dec
int
mov
in
pop
cltd
jo
test
cltd
clc
fwait
test
int3
fwait
add
decl
lods
rcrl
int
rclb
pop
into
fsts
lds
les
mov
jmp
in
pop
les
mov
inc
scas
test
out
lret
inc
mov
movsb
xchg
sbb
add
call
pop
or
lahf
cld
add
inc
add
and
adc
push
xor
jmp
imul
sbb
insb
add
dec
lcall
or
and
pop
dec
shll
loop
xchg
pusha
cwtl
pop
sbb
test
xchg
stos
push
hlt
pushl
sti
adc
out
mov
in
dec
cwtl
test
scas
lock
ljmp
push
out
loope
or
mov
sbb
push
add
jbe
push
insb
test
cld
ljmp
int3
sbb
sbb
jl
subb
rolb
test
int3
repnz
out
jbe
cwtl
clc
cmc
add
decl
sbb
in
inc
stc
sbb
xchg
ljmp
leave
fwait
je
xchg
in
mov
pop
xchg
cwtl
dec
push
sub
mov
outsl
mov
cmpl
fadd
call
push
add
in
push
ficompl
mov
xor
cmpsb
pop
xchg
pushl
xchg
add
jg
rcr
mov
hlt
pop
pop
mov
add
adc
mov
xor
pop
dec
ljmp
xchg
push
or
lret
xor
jmp
dec
or
or
dec
movsl
jmp
and
sbb
std
pusha
lahf
in
push
or
mov
mov
or
cmpsb
loopne
xor
sbb
enter
popf
scas
jg
aad
jmp
adc
mov
dec
outsb
push
add
cltd
lcall
shrl
xor
lds
in
mov
loopne
out
xchg
or
incl
inc
push
xchg
inc
dec
lret
loop
adc
call
mov
loope
mov
push
pop
loop
cltd
and
adc
nop
or
pushl
js
aaa
insb
fwait
adc
xchg
push
vmovntps
fdivrp
cmc
rol
pop
pusha
ficomps
in
rol
incl
test
andl
lcall
mov
xor
adc
sbb
xor
ret
bound
mov
enter
mov
sbb
sbb
and
std
pop
adc
adc
or
mov
push
outsb
cmpsb
dec
and
and
push
and
sbb
mov
xchg
add
adc
adc
test
or
je
jg
mov
into
push
call
movsl
pop
mov
pop
mov
bound
lcall
out
adc
pop
lds
dec
mov
sbb
les
decl
and
loope
add
adc
inc
xchg
aas
into
les
push
cmp
push
lcall
dec
loope
mov
and
lcall
pushl
push
push
push
inc
pop
xor
cmp
movsl
xchg
mov
daa
ds
mov
test
popf
inc
sub
clc
push
sub
popa
push
jbe
and
sbb
orb
xchg
pushl
pop
pop
loop
incl
rorb
scas
nop
test
inc
jne
shl
sbb
inc
inc
test
pop
std
dec
add
push
mov
inc
jns
pop
pusha
push
data16
fisttps
sub
das
xchg
nop
arpl
dec
mov
mov
js
sbb
pop
sbb
xor
pop
inc
xor
mov
xchg
adc
andb
mov
incl
or
mov
js
fidivrl
popa
pop
shr
cltd
ss
jmp
out
and
cwtl
cld
cmp
nop
movsl
fldl
adc
ljmp
mov
pop
insl
mov
in
aad
popa
push
je
add
jg
pop
cltd
jns
mov
xchg
inc
mov
or
frstor
cwtl
lock
cld
ljmp
inc
lock
lea
je
fucomi
push
pop
nop
loope
jecxz
add
lcall
andb
cltd
addr16
dec
shrb
lcall
push
push
loope
insb
mov
cli
je
xor
or
pushl
call
icebp
sbb
bound
into
inc
pop
out
and
inc
adc
lock
fcompl
fsubrs
push
dec
cmc
xchg
daa
scas
or
pusha
jbe
ret
jne
inc
out
in
and
mov
add
or
test
mov
sbb
ljmp
pop
push
cld
xchg
ficomps
jl
jmp
roll
loop
inc
call
mov
enter
insl
sbb
adc
xchg
or
sbb
enter
mov
mov
or
mov
std
loop
ficoms
roll
push
or
jle
jb
rcr
lock
mov
sub
push
ljmp
push
and
mov
mov
cld
test
add
mov
mov
dec
movsl
fxtract
push
movsb
push
out
and
test
cmpsb
sub
cld
call
icebp
and
xchg
adc
hlt
push
jle
xor
cli
clc
ljmp
adc
movsb
inc
push
les
sbb
faddl
push
lret
ss
jo
mov
test
mov
push
outsb
test
cmp
fstpl
cltd
jge
decl
icebp
scas
lods
lcall
stos
inc
out
jmp
cmp
adc
repz
push
repz
ljmp
or
sarb
leave
inc
lds
inc
repnz
in
xor
leave
and
add
pusha
sub
icebp
ljmp
and
push
sbbl
sub
sub
es
sub
fiaddl
sbb
sbb
pop
incb
test
sbb
cmp
add
test
sbb
cwtl
xchg
and
xchg
clc
dec
fisttps
pop
ljmp
sub
fs
and
or
jns
loop
jg
fimuls
jmp
add
imul
out
inc
inc
fwait
pop
mov
ficomps
out
hlt
sub
scas
jecxz
dec
icebp
in
pop
pop
scas
jl
sbb
mov
fistps
cmpsl
inc
mov
push
out
fstl
rdpmc
sub
inc
add
outsb
mov
push
mov
pop
pop
inc
mov
jle
jmp
scas
jmp
mov
scas
jbe
lcall
je
or
push
fldcw
test
push
adcl
lock
inc
test
insb
cmc
fildll
and
scas
mov
pop
repnz
cmp
or
ljmp
addb
xchg
jp
xchg
lret
pop
xchg
sbb
ud0
sub
mov
xchg
mov
int3
push
push
or
pop
lahf
dec
adc
dec
lcall
sti
stos
insb
sub
mov
jg
pop
dec
xor
dec
sbb
add
std
xor
fmuls
jecxz
incl
in
mov
sbb
sub
stos
or
mov
scas
fstp
cmp
xlat
dec
pusha
mov
dec
mov
xlat
inc
aad
decl
sbb
into
loopne
or
cwtd
cmpsb
test
rclb
fbld
loop
jno
into
icebp
mov
add
mov
push
fsubrs
addb
call
scas
divb
inc
and
xchg
int3
addr16
fistpl
or
fbld
sub
pop
movsb
loopne
lret
xor
adc
pop
cld
pusha
inc
cmpsb
or
cld
out
inc
rolb
mov
pop
adc
bound
mov
sbb
mov
jmp
jno
sub
inc
xchg
push
pop
mov
sub
push
insb
push
inc
repz
and
mov
sarb
shr
call
push
outsl
pop
repnz
lods
push
and
pop
je
ljmp
call
mov
push
inc
imul
mov
adc
decl
fdivs
sbb
push
mov
fdivr
mov
insb
data16
adc
data16
sbb
jmp
cltd
mov
ljmpw
dec
mov
xchg
push
pushf
xchg
je
call
and
fisubrs
lcall
aam
icebp
mov
jae
int
push
add
lea
pushl
arpl
or
nop
icebp
adc
pop
dec
add
push
mov
test
cmp
or
inc
out
push
mov
loopne
arpl
and
clc
mov
test
inc
xchg
inc
adc
pop
push
outsb
inc
push
cmpb
jecxz
popa
lcall
or
add
fs
dec
inc
mov
xor
sahf
sub
scas
fimull
insb
icebp
call
mov
push
inc
xor
stos
outsl
lea
in
mov
outsb
push
je
filds
inc
in
jb
adc
incl
jl
push
aas
mov
mov
and
ljmp
fisubl
sbb
bound
mov
outsl
fsubrs
push
add
inc
scas
push
pop
mov
insb
push
je
pushf
int3
decl
je
and
cmpsl
push
add
jl
incl
xor
and
mov
cmp
mov
push
hlt
clc
add
rolb
pop
push
subl
mov
sti
scas
insb
cwtl
add
or
enter
lret
sbb
mov
insl
enter
roll
dec
adc
or
cld
nop
addr16
sbb
fmull
xchg
xor
call
std
decl
ficompl
lahf
pop
pop
negb
sub
arpl
orb
lods
or
jecxz
mov
dec
dec
in
cmp
cmpsb
fwait
adc
lahf
push
cmp
lock
ss
adcl
add
in
call
test
inc
dec
scas
xchg
sub
sub
push
negb
lock
xorb
lahf
push
push
adc
inc
push
jmp
fwait
cmp
inc
adc
cli
push
ljmp
in
ljmp
xor
sbb
mov
cmp
adc
cmp
cltd
mov
mov
lcall
or
data16
imulb
call
xchg
fldenv
mov
and
inc
push
mov
add
sarl
gs
or
adc
cli
fwait
push
enter
inc
shll
inc
adc
pushf
adc
pushf
subb
ret
dec
orb
sub
mov
add
pushf
jne
and
pusha
xchg
stos
xchg
xor
fstpt
sub
js
dec
xchg
sbb
ljmp
mov
mov
std
loope
int
leave
dec
in
int3
xchg
mov
adc
popa
std
incl
gs
mov
decl
sarl
or
jle
cmp
or
incl
dec
add
inc
les
mov
fldt
imul
ljmp
nop
mov
dec
pop
add
dec
cmpsl
pop
clc
cltd
jg
fs
adc
fs
or
stos
mov
mov
ds
adc
decl
lock
push
in
push
clc
lcall
push
addr16
xchg
sti
jge
rolb
pushl
sbb
gs
call
fld
sbb
mov
enter
adcb
mov
cmpsb
aam
xor
xchg
xchg
inc
inc
push
out
lret
je
sub
mov
lea
filds
addr16
mov
jnp
xchg
push
or
xchg
aam
lock
ret
sub
mulb
push
adc
add
add
cmp
mov
and
xorb
call
nop
adc
push
pop
jae
cli
out
xchg
repz
xchg
adc
jg
sahf
and
add
xor
sbb
nop
mov
call
or
pusha
lds
cwtl
mov
ret
sub
pop
lret
xchg
fs
mov
push
cmpsb
xor
fisttps
xchg
stc
jb
dec
fwait
or
lcall
lcall
add
dec
xchg
add
test
jg
mov
enter
mov
inc
lods
pop
push
bound
lods
jl
pushl
or
outsb
gs
sahf
cmp
mov
sbb
nop
or
sub
or
aad
cltd
mov
ljmp
outsb
and
add
jp
ljmp
pop
xor
std
jmp
cwtl
mov
lret
xor
lahf
inc
jg
xor
rorb
cmpsl
mov
jg
test
dec
add
add
jne
fldcw
mov
mov
fcoml
and
jo
mov
inc
xchg
push
lods
push
sbb
push
out
stos
pop
rorl
movsl
xchg
or
movsb
push
sbb
pop
inc
outsb
or
inc
sar
incl
les
pop
push
stos
cwtl
sub
mov
aas
clc
or
sub
mov
cmpsb
mov
pop
enter
rclb
or
enterw
add
lret
nop
call
and
orl
xchg
fisubrl
xchg
mov
pop
imul
pop
jl
insl
jmp
bound
sub
jns
bnd
or
and
lock
xchg
test
ljmp
lea
insl
xchg
push
dec
push
sbb
repnz
ss
dec
es
sub
sub
popf
sbb
sbb
dec
aaa
xlat
dec
sbb
push
jp
and
mov
xchg
jle
xor
lcall
mov
call
fs
xchg
sub
push
movsl
mov
push
aam
ss
add
mov
inc
decl
pop
jmp
push
iret
pop
mov
decl
daa
push
mov
mov
and
lds
fidivl
and
add
mov
lcall
fcmove
mov
ja
decl
in
mov
mov
xor
cli
push
add
and
jmp
sarb
lret
lea
ss
ljmp
les
andl
outsb
mov
cmp
scas
stos
dec
loop
stos
lock
or
push
bound
in
mov
aas
jns
aad
mulb
rep
sbb
loop
ljmp
rol
jb
inc
fwait
add
loope
sub
or
jo
shlb
or
inc
decl
incl
or
popf
imul
cmp
pop
call
insb
and
pop
icebp
addl
xorb
inc
ficompl
and
fldz
push
scas
test
cs
cmp
xor
mov
jg
lds
int
adc
pushf
jno
or
mov
or
mov
call
dec
rcll
sub
pushl
mov
mov
inc
stos
mov
nop
incl
cmp
ja
lret
les
test
mov
adc
stos
movsb
sbb
xchg
push
cs
in
mov
bt
mov
jp
mov
in
cs
pop
es
data16
or
in
aas
ret
push
jns
arpl
cmpsb
jl
incl
cli
loopne
jle
clc
inc
pop
jbe
aad
fstp
insb
or
jg
pop
in
dec
stos
xchg
aaa
jl
jmp
mov
repz
loop
fisttps
xchg
lahf
sti
sahf
add
aad
fadd
and
mov
cmp
movmskps
add
adc
cs
popl
shl
sub
pop
leave
cmp
inc
xchg
pop
repnz
add
adc
mov
mov
add
inc
sbb
jg
inc
and
xchg
push
adc
loopne
jne
lcall
lea
or
cmp
add
inc
push
sbb
xor
lods
ds
mov
xchg
mov
aaa
repnz
dec
push
ljmp
jg
cs
jo
lcall
mov
mov
sbb
nop
xchg
stos
xchg
inc
inc
dec
adc
inc
movl
shl
mov
adc
rcl
jg
fbld
cmp
mov
jle
xchg
inc
or
xchg
mov
test
adc
adc
lcall
pop
adcl
xor
sub
mov
xor
xor
sbb
or
and
out
in
xchg
in
jno
lcall
fsts
rcl
push
jno
mov
push
ljmp
js
test
jmp
cmc
fldenv
cmpsb
xchg
int
fisubrs
pop
or
push
inc
add
cmp
popa
int
pop
lcall
incl
cmp
sub
in
dec
ja
jecxz
xor
xchg
and
adc
mov
flds
dec
imul
fwait
mov
imul
jle
ret
test
incl
mov
xor
lahf
insl
or
loop
lcall
mov
cmp
mov
sbb
shufps
jmp
lods
adc
xor
xchg
ss
dec
sub
push
call
jo
adc
ljmp
shrb
mov
and
lret
inc
dec
xchg
ljmp
pushf
loop
daa
dec
xchg
mov
movsl
dec
adc
cmp
and
lcall
out
mov
push
test
sub
xchg
and
ret
and
jmp
cmp
jns
cmpsb
and
sub
or
test
lcall
call
mov
stos
movb
cmp
ret
mov
cltd
jle
cmpsl
fwait
lock
stc
xchg
inc
xor
adcl
lea
or
jg
lea
mov
jmp
push
xchg
lret
jg
daa
mov
jne
fcoml
mov
pushl
fstpt
sbb
nop
inc
addr16
stc
cltd
push
or
scas
es
incl
mov
dec
aas
pop
xor
aaa
mov
inc
cwtl
sbb
cmp
cmpsl
pusha
movb
mov
in
sub
cwtl
ret
ret
in
inc
out
push
xchg
nop
or
mov
cmp
cli
ljmp
jecxz,pt
dec
rcll
cmp
cmp
enter
sub
fidivrl
and
incl
adc
orl
pushf
rcrl
sub
push
mov
and
sbb
add
dec
mov
inc
into
cltd
xchg
lods
sub
cmp
dec
xchg
ss
add
das
pop
nop
test
add
sbb
push
popf
pop
mov
or
ljmp
orb
scas
mov
cmp
push
subb
outsl
enterw
test
sub
into
adc
fists
es
mov
ficoml
sbb
mov
push
popf
bound
jle
incl
jbe
pop
sahf
out
fcoml
test
jle
dec
test
inc
into
mov
ficoms
decl
add
ret
or
imul
or
fnstenv
mov
add
lods
xor
cmpsb
ljmp
mov
imul
in
mov
test
push
push
or
add
push
jp
jg
and
cltd
add
push
roll
cld
jle
and
push
aaa
mov
xor
mov
mov
mov
loope
rcll
lods
xchg
adcb
idivl
fs
or
jae
or
hlt
lcall
pop
pop
mov
mov
orl
inc
fwait
nop
sbb
loopne
adc
loope
inc
push
repnz
ficoml
stos
int
push
and
pusha
cli
jle
repnz
inc
add
lcall
rcr
les
and
popa
sbb
out
repnz
or
pop
mov
rcr
or
lcall
add
daa
fstl
stos
test
mov
mov
cltd
push
and
pusha
pop
ljmp
mov
cmc
cmp
aad
std
dec
xchg
inc
popf
mov
push
loop
add
test
cwtl
or
cmp
std
out
mov
js
push
pop
add
mov
dec
xor
add
jno
add
paddusb
jle
incl
les
lahf
xchg
int
sub
push
gs
nop
xchg
test
shl
ljmp
gs
mov
insl
aas
inc
jg
mov
cmp
jmp
sbb
repnz
and
or
out
sbb
out
xor
xchg
into
or
inc
shll
push
mov
fs
ljmp
mov
lds
adc
lock
xlat
inc
fucom
adc
out
clc
call
adc
loop
or
add
js
sub
fisttps
cwtl
test
dec
out
add
imul
std
pop
and
push
leave
fisubl
mov
outsb
out
lea
adc
add
add
add
pusha
mov
mov
call
es
inc
jo
aam
stos
lcall
shrb
into
repnz
ja
jmp
mov
and
jmp
mov
and
loop
jbe
and
cld
call
mov
clc
into
jno
dec
iret
lret
out
xchg
cs
fisubrl
inc
or
dec
sbb
xchg
and
inc
dec
popl
dec
mov
add
xchg
ret
into
daa
je
jbe
call
std
decl
jle
xchg
pop
dec
or
out
cs
loopne
dec
decb
xlat
pusha
inc
les
mov
jmp
pop
sub
xchg
out
sub
jl
and
add
dec
enter
fwait
or
inc
mov
iret
xor
mov
mov
sahf
mov
outsb
dec
jecxz
repnz
pushf
sub
fisubrl
sub
xchg
inc
add
in
cmp
lea
sbb
rcrl
cli
in
mov
incl
dec
dec
les
ret
outsb
call
dec
negb
movsb
movsb
and
sub
fidivl
decl
add
cs
mov
or
loopne
inc
inc
fs
jmp
pop
pop
into
xbegin
mov
inc
push
mov
mov
pop
jo
mov
adc
insb
bound
push
daa
addb
cmc
dec
dec
add
jmp
push
pop
ret
sub
jp
bound
lea
cmpsl
and
dec
adc
dec
shlb
mov
or
and
adc
add
int3
or
in
sub
clc
sub
call
out
sub
lret
adcb
pushf
daa
and
daa
rolb
int
pop
das
clc
ja
mov
xchg
into
and
add
xchg
pop
pop
dec
test
ljmp
push
or
dec
es
jns
gs
jo
scas
xor
dec
cwtl
xchg
in
jmp
icebp
adc
push
sbb
daa
xor
icebp
daa
sub
fwait
out
jp
mov
out
test
adc
pushl
jle
outsl
xor
pusha
adc
xchg
les
ret
fs
or
ljmp
sti
adc
sarb
and
cld
nop
xor
call
mov
addl
loop
pcmpgtw
and
sar
call
cli
and
mov
jmp
inc
faddl
cs
cmpsl
lcall
push
repnz
and
add
and
and
test
inc
ds
jg
dec
enter
and
xchg
pop
lock
sarb
push
or
insb
mov
lods
insb
and
jecxz
call
in
lods
lcall
lds
aas
push
and
push
mov
mov
fildl
xchg
sub
sub
test
out
cmpsb
cmpsl
dec
adc
add
or
mov
out
incl
push
mov
icebp
inc
je
jp
mov
inc
in
xchg
ret
xchg
or
jmp
push
inc
push
xor
push
hlt
push
inc
lds
daa
aam
fsubrp
jb
clc
add
call
cld
aaa
jge
hlt
jle
dec
mov
in
ret
pop
out
xchg
or
inc
jge
out
fmuls
jb
mov
add
push
jmp
fisttpl
loopne
clc
jmp
fldt
enter
jecxz
jno
cmp
sarl
jl
pop
lods
jecxz
adc
fsubp
dec
xor
cmpsb
jmp
dec
int3
scas
cld
mov
repz
insl
cwtl
mov
jbe
ss
fs
or
sbb
imul
inc
or
push
std
stos
mov
inc
mov
xchg
lcall
add
jmp
push
cmp
outsl
add
add
cmp
xchg
and
push
fbstp
or
adc
or
push
and
mov
cmp
out
mov
lret
or
daa
inc
std
dec
hlt
xchg
stc
int3
and
testb
das
cli
ljmp
out
lods
push
push
lea
or
cli
and
and
out
inc
or
ja
lcall
cmp
mov
adc
dec
push
scas
dec
jmp
imul
popa
loop
push
sar
jmp
adc
inc
sub
dec
and
rcll
daa
das
clc
lcall
xor
loop
and
mov
inc
or
inc
and
xchg
xor
subb
outsb
push
or
js
sbb
lcall
cld
cmc
pop
incb
lahf
outsl
mov
xor
xor
incb
loop
adc
das
sar
rorl
dec
push
add
xor
movsl
stc
and
dec
jnp
fisubs
sub
mov
dec
lds
cmp
ret
cld
cld
or
mov
mov
dec
push
packsswb
std
push
std
decl
sbbl
repnz
pcmpgtb
into
dec
insb
movsl
mov
andb
or
push
adc
scas
xor
sar
xchg
cmpsb
fdivrs
cltd
mov
enter
push
aas
rolb
rolb
jmp
add
adc
or
add
addb
jecxz
call
xor
in
call
dec
fisubs
int3
jae
clc
incl
out
inc
mull
adc
adc
add
push
or
and
pop
inc
cmpsl
into
ss
dec
push
or
into
pop
inc
inc
out
dec
push
incl
inc
dec
inc
jge
inc
adc
inc
dec
into
pop
or
pop
and
outsb
xchg
fwait
ret
jg
lods
stos
jp
aad
inc
or
iret
add
cs
jg
jp
sbb
imul
pop
xlat
int
stc
shrb
dec
xor
stos
dec
mov
sub
add
dec
test
xor
xorb
dec
inc
and
ljmp
add
cmp
or
subl
lcall
ud0
pop
mov
mov
xlat
sub
scas
xchg
fwait
cmp
sub
aas
jle
add
push
add
lcall
lcall
adc
jmp
push
mov
xchg
add
rcrl
add
jno
rclb
jl
add
push
pop
xor
mov
fs
rorb
pop
mov
dec
pushl
je
push
aaa
and
xchg
jmp
add
or
imul
dec
hlt
mov
add
lret
inc
je
and
daa
js
mov
mov
pushl
xchg
lock
mov
jb
aaa
push
lea
dec
psllw
insb
ljmp
sub
add
repz
idiv
decl
mov
sbb
das
pop
xchg
xchg
out
dec
testb
ss
mov
fsts
inc
cmpsl
loop
adc
mov
mov
xor
pop
cld
mov
xchg
add
ret
xor
xor
repz
call
cmc
or
idivb
lret
mov
add
int
mov
xchg
or
inc
outsb
xor
in
pop
xor
gs
or
incl
repz
insl
jmp
lock
ljmp
jb
add
adcb
in
out
mov
data16
call
in
mov
mov
cmp
xchg
dec
adc
nop
mov
loopne
lock
jmp
jmp
ja
icebp
ljmp
sub
bound
ja
stos
mov
lret
mov
movsl
jo
incl
nop
mov
sarb
ja
dec
out
ror
sbb
nop
pushf
shrb
test
mov
inc
pop
stos
scas
or
loope
dec
rclb
dec
jp
lock
xlat
jbe
adc
repz
movsb
ret
out
pop
mov
call
cld
jle
ret
xchg
adc
cmp
jle
cs
jnp
hlt
adc
cld
mov
pop
cmp
data16
cmp
sub
ljmp
sub
fmuls
dec
sub
lcall
pusha
pusha
push
pushl
or
lret
daa
xor
jg
call
adcb
cmp
xor
ljmp
fisubs
mov
movsb
lods
mov
fldcw
lods
fnstcw
cli
jo
sbb
push
out
cmpsb
imul
loopne
pop
sbb
imul
push
lods
inc
pmullw
push
mov
ret
or
les
test
mov
jg
or
je
mov
cmpsb
cli
xchg
and
out
cmp
lea
push
cs
or
cmpsb
movsb
jmp
push
and
add
cmp
scas
jb
jae
aaa
and
jbe
mov
xchg
push
scas
call
mov
into
nop
fcom
test
sbb
lods
shlb
jns
add
sub
cs
ljmp
test
jp
ja
and
bound
jno
xor
inc
xchg
xchg
pop
arpl
out
xchg
sbb
lcall
enter
jno
dec
push
push
push
out
ja
test
int3
mov
in
in
pushl
lret
inc
jns
mov
dec
adc
dec
jmp
popa
inc
adc
into
dec
mov
cmp
shl
in
fimull
out
lock
js
jb
inc
sub
pop
xchg
add
loope
es
jb
out
cmp
and
or
pop
pop
lock
incl
out
addb
imul
inc
xor
orb
fildl
lret
aam
mov
push
xchg
pop
insb
mov
add
clc
decl
in
pmuludq
shr
ss
mov
jg
mov
in
out
inc
movsb
mov
xchg
push
jmp
xor
ss
scas
or
pop
jmp
and
inc
jp
cmovge
loop
inc
arpl
sarb
daa
ljmp
or
daa
and
imul
adc
xchg
icebp
pop
mov
aaa
push
loope
subb
loopne
push
mov
decl
inc
mov
sub
push
out
add
daa
push
xchg
lea
push
testb
inc
add
lcall
xchg
lods
dec
or
repnz
dec
icebp
adc
pop
dec
lret
int
aaa
sub
cmp
call
dec
lea
and
notl
test
lret
hlt
inc
cmp
push
and
out
adc
movsl
repnz
dec
sbb
sbb
std
fisubl
call
pop
fcompl
loop
cld
dec
out
shlb
iret
gs
lret
in
push
mov
cli
icebp
add
lcall
sub
out
pusha
pop
add
xorl
mov
int3
xor
ljmp
or
cmp
push
cmp
and
lods
scas
enter
sarl
in
test
and
xchg
lea
sti
inc
or
jne
mov
addr16
mov
in
push
jg
dec
fidivrl
cmpsl
lea
out
movsl
adc
inc
push
sub
out
push
subb
jo
jmp
xchg
xchg
addr16
dec
or
cmpsl
mov
jne
sub
sarl
jmp
mov
scas
bound
call
and
mov
fwait
fwait
out
ret
fs
xor
adc
push
loopne
incl
mov
loopne
mov
scas
out
fsts
pusha
ljmp
xchg
cwtl
lret
ficoms
std
incl
pushf
ss
adc
clc
push
cmp
mov
cli
repnz
xchg
push
cmpsb
dec
ud0
pushl
push
inc
mov
fidivrl
call
add
inc
inc
add
adc
nop
cmp
aas
test
decl
sbb
sub
mul
mov
out
xchg
imul
ret
lcall
jmp
or
pushf
mov
xor
add
pop
adc
mov
test
movsb
xchg
and
lahf
aas
or
add
push
mov
mov
cwtl
add
mov
sub
adc
jb
adc
mov
lds
adc
pop
rolb
loop
or
sahf
mov
pop
add
fiaddl
xor
int3
xchg
insb
out
lods
mov
ljmp
lcall
sbb
sbb
dec
jg
mov
fyl2x
arpl
push
sbb
sbb
add
pushl
mov
fbld
fnsave
and
mov
jne
pop
cmp
adc
repz
bound
adc
insl
ljmp
mov
shlb
aad
mov
hlt
fcomip
mov
jae
inc
popf
dec
not
xchg
das
mov
jp
xor
cmp
loope
fbstp
cmpsl
pushf
jl
in
inc
push
iret
rcll
in
push
out
es
push
popa
jnp
test
dec
sbb
cmp
loope
and
mov
push
daa
bound
enter
jo
inc
sub
pop
dec
fisubl
fsubrl
xor
jbe
inc
dec
imul
and
and
inc
jp
in
in
inc
cld
stos
dec
mov
ja
js
gs
loopne
pop
pushl
std
call
push
ficompl
outsb
sahf
movsl
mov
pushf
or
lods
jmp
rolb
mov
xchg
pushf
fsts
mov
movsb
push
inc
ja
and
roll
add
adc
adc
inc
sub
addl
cmp
clc
push
ret
push
lock
enter
xor
jg
lock
push
dec
sub
lcall
mov
inc
aad
sub
mov
and
xchg
mov
into
call
sbb
bound
lcall
nop
fstps
adc
add
pop
loopne
lcall
and
xchg
mov
ficoms
mov
decl
fdivs
mov
xchg
push
mov
xor
mov
pop
mov
adc
pslld
jb
mov
pusha
jp
mov
push
jp
jno
sbb
addr16
mov
mov
sbb
pusha
les
adc
sahf
sbbb
sbb
in
xlat
mov
push
mov
or
shrl
or
sbb
loop
iret
mov
mov
lock
jg
mov
or
inc
cmp
test
cmp
lea
cltd
and
inc
push
jns
fiaddl
stc
in
pop
adc
adcl
inc
and
aaa
jns
and
lds
sub
mov
xor
in
xchg
clc
rorl
add
xor
test
les
sahf
jp
cli
push
inc
mov
out
sbb
lcall
inc
inc
int3
pop
sub
mov
add
xor
sar
std
or
test
stos
ljmp
aam
mov
call
mov
sub
sub
push
push
mov
mov
add
call
pop
mov
inc
popa
insl
gs
cmpsb
sub
mov
in
addr16
jbe
test
push
jg
out
scas
es
jmp
imul
insb
popa
fistps
pop
add
add
push
push
mov
sub
rol
mov
pop
push
test
add
aaa
imul
clc
pushl
inc
inc
fdivs
mov
pop
or
in
fdivrs
ljmp
scas
out
enter
dec
dec
lret
popf
sti
sbb
aas
xor
sbb
sbb
je
les
jno
dec
cli
mov
bound
popl
jp
add
cwtl
cmpsb
test
sbb
add
push
in
es
and
mov
mov
lret
adc
in
fisttpll
jo
xchg
xchg
sub
dec
xchg
xchg
lcall
je
dec
jbe
xchg
inc
mov
repnz
and
ret
xchg
push
call
cmp
fistl
clc
xchg
es
push
add
mov
outsb
loopne
adc
inc
mov
add
mov
lcall
ret
push
subb
xor
cltd
orb
mov
push
pushf
subb
rorl
push
test
bswap
push
xchg
sub
out
out
bound
pop
inc
or
lods
mov
sbb
incl
xor
jae
pop
into
mov
cld
mov
insb
aam
cwtl
add
mulps
pop
push
pop
and
aaa
cld
lods
jne
dec
push
lret
mov
fistpll
mov
cmp
sbb
out
xor
xchg
xor
sbb
mov
pop
push
add
aaa
mov
lcall
and
push
popa
shl
int
inc
and
daa
or
or
sahf
inc
mov
inc
push
incl
adc
mov
cmp
jg
jp
xchg
fcmove
cmp
push
sbb
sahf
sub
ljmp
and
inc
arpl
ret
ljmp
xchg
stos
mov
lods
inc
sub
push
scas
mov
and
cmc
pushl
or
adc
xor
flds
mov
xchg
outsb
call
push
mov
std
and
mov
push
nop
jl
cmpb
jl
xlat
mov
cltd
sbb
test
jbe
add
popf
dec
out
imul
cli
in
inc
test
ljmp
call
cmp
push
mov
leave
in
cmc
xchg
aas
push
popa
xchg
cmp
js
jg
add
and
and
inc
inc
lret
adcb
xchg
in
adc
jmp
push
int3
pushf
sub
mov
pop
jae
or
dec
xchg
sarb
es
add
sub
jmp
pop
jle
nop
sahf
out
mov
fldl
insb
shll
in
adcb
sub
jge
jnp
movsl
add
mov
adc
fs
add
ja
leave
dec
pop
imul
xor
mov
jnp
pushf
clc
mov
out
xchg
insb
mov
rcrl
std
into
xchg
out
cmpsb
inc
shrb
sbb
das
clc
adc
bound
lahf
adc
inc
xor
mov
fildll
mov
arpl
and
enter
sbb
jae
jg
inc
test
call
pop
cmp
mov
push
inc
cmp
stos
add
inc
mov
cmc
lods
jo
push
add
enter
xchg
push
adcb
push
aaa
xchg
pop
inc
pop
push
or
cmc
stos
ljmp
repz
aaa
or
or
sbb
sbb
push
or
rolb
dec
nop
js
aas
cwtl
xchg
adc
outsl
add
sub
inc
dec
fs
and
sub
incl
xor
sub
mov
mov
sbb
and
or
scas
clc
call
test
leave
imul
pop
sbb
cli
jmp
push
pop
jno
mov
push
xchg
sahf
mov
outsl
mov
out
leave
cwtl
rclb
fdivl
mov
xor
jno
adc
cmp
into
fstps
add
decl
cwtl
dec
jno
rclb
and
adcl
addb
cwtl
or
add
dec
movsl
sbb
jmp
enter
aas
xor
test
xchg
stc
incl
popl
dec
pop
mov
fimull
fsubs
xchg
pop
das
add
and
xor
inc
das
lret
ret
inc
arpl
sub
mov
and
add
or
push
cmp
decl
data16
sbb
xor
shr
inc
decl
scas
lock
fisubrs
mov
add
pop
and
dec
aaa
js
or
add
ja
cli
daa
sbb
loope
sahf
inc
or
add
add
incl
sbb
dec
dec
pop
inc
daa
adc
popf
stos
cmp
pushl
cwtl
or
and
cmp
mov
push
imul
pop
dec
iret
sub
xchg
sarl
push
sbb
dec
mov
sbb
leave
inc
mov
mov
pushl
shr
int3
push
out
inc
cmp
push
mov
push
sub
and
jg
mov
sbb
dec
mov
int
pushf
stc
aad
insb
lock
sub
cmp
lock
xor
sbb
mov
das
int
push
xor
jmp
mov
inc
push
mov
in
jo
cmp
aad
ret
xor
decl
xor
adc
imul
dec
dec
cmp
loope
push
jb
incl
inc
jg
and
xlat
pop
jno
add
push
add
arpl
push
outsb
cli
push
xor
adcb
push
add
xchg
call
std
mov
sbb
xorb
lcall
pushl
cmpl
and
enter
orl
cmp
lret
jns
add
test
or
repz
lcall
out
out
test
add
cmpsb
ja
mov
or
pop
popa
xlat
addr16
adc
jp
dec
loopne,pt
arpl
push
and
je
scas
aam
imul
mov
enter
and
roll
vandps
dec
mov
add
cli
call
sbb
sbb
pop
xchg
or
orl
push
incl
adc
jmp
sbb
xor
sub
xchg
jmp
add
aad
insl
jne
cmp
adc
mov
sbb
or
stos
popa
xor
jae
mov
sbb
out
mov
pusha
add
xor
adc
lock
outsl
push
sbb
xorb
push
mov
push
inc
and
xor
inc
xor
inc
adc
jg
cmp
adc
push
xlat
jno
mov
out
sbb
nop
push
mull
or
adc
sarl
ret
repz
xlat
add
cmpsl
jae
test
pop
andb
and
data16
inc
cmpsl
nop
data16
das
fmuls
call
pop
jle
js
dec
pop
jo
inc
push
ss
or
push
andb
or
inc
add
add
add
aad
mov
movsb
test
cli
cmpsb
mov
or
test
jno
test
xchg
cmp
cmc
adc
inc
cld
xchg
add
xchg
mov
scas
xor
fisttps
sub
add
mov
js
call
into
insb
mov
decl
pop
xchg
xchg
add
push
cmp
inc
pop
jo
das
mov
sbb
xchg
mov
fcoml
lret
ret
dec
popa
jno
xlat
test
push
loopne
decl
notb
shrl
orl
aas
rcll
push
movsl
jl
addb
push
pusha
push
jae
push
xchg
jge
cmpsb
jge
cltd
mov
push
inc
les
into
xor
mov
pop
and
push
and
stos
jmp
add
shrb
jo
add
adc
push
cmp
pop
clc
inc
std
inc
bound
es
jno
jmp
inc
jo
inc
mov
lcall
clc
popa
incl
pop
dec
test
and
dec
je
ret
push
inc
lock
xchg
pop
xor
dec
mov
and
and
das
mov
or
gs
push
add
ja
inc
ja
add
das
sar
es
cmpsb
sbb
add
das
push
test
inc
push
inc
pop
std
incl
ljmp
push
jns
pop
sub
add
pop
and
add
adc
jg
add
pop
xchg
cmc
jle
push
nopl
popa
inc
pop
fstl
mov
std
lcall
or
xchg
jo
jbe
mov
loopne
add
jno
mov
xchg
inc
lret
js
dec
sbb
mov
mov
push
cmpsb
icebp
add
mov
aaa
je
jbe
pop
sub
adc
jmp
enter
pop
stc
push
push
mov
jp
push
sbb
mov
cltd
cmpl
incb
fsubl
orb
lock
ljmp
out
mov
jns
andl
inc
shld
sub
mov
xor
pop
ret
sbb
xchg
sti
ljmp
aam
jecxz
imul
xchg
add
pop
and
cmc
jg
push
stc
xchg
lea
jb
sub
mov
sbb
call
pushf
notb
lret
sub
inc
add
push
subb
or
arpl
flds
cmp
mov
xor
sub
stos
leave
add
gs
inc
ret
jae
add
hlt
incl
xchg
addb
mov
fiadds
outsb
movsl
popa
adc
jg
mov
jecxz
call
icebp
adc
mov
mov
cld
xor
test
jne
jle
or
jg
call
jb
and
stc
or
or
ficoml
push
roll
mov
add
cmp
jnp
xchg
sub
push
jb
ret
jne
add
mov
mov
push
jp
enter
add
xchg
loopne
fistpll
cwtl
jae
pop
jne
insl
shll
call
mov
repnz
aam
cld
hlt
dec
xchg
and
and
jmp
add
add
jg
loop
jecxz
outsb
mov
lea
add
ret
mov
inc
push
jg
mov
fiadds
cmp
popf
sar
aaa
cld
push
rcrl
jo
mov
aaa
xor
mov
stos
lcall
xor
test
in
testl
test
outsl
add
xchg
cmp
dec
popa
hlt
ja
dec
add
sbb
popf
cmc
or
test
xchg
sub
xor
push
jl
push
je
ss
fbld
mov
adc
jno
lahf
pop
or
cli
scas
cmpb
std
repz
mov
push
stc
ljmp
or
dec
add
sbb
clc
ljmp
add
rolb
adc
mov
sub
sahf
incl
push
add
js
inc
mov
daa
rclb
and
or
cmp
call
cli
cmpsb
add
adcl
pop
pop
adc
jnp
fwait
sub
adc
mov
mov
cli
aaa
cld
cmpsb
das
cs
repnz
jno
cmc
movsl
push
jno
out
add
lock
lcall
aad
pop
pop
das
jmp
mov
in
mov
in
je
aam
scas
and
decl
pushf
ret
imul
mov
test
inc
adc
push
fiaddl
or
jns
mov
pusha
lahf
dec
mov
ss
inc
repz
sti
sub
call
push
jmp
xor
test
xor
fdivrs
jns
lea
inc
ret
pop
and
mov
stos
sub
sar
incl
mov
dec
cmc
push
test
inc
mov
lods
pop
xorl
and
sbb
out
out
inc
push
lahf
or
adc
jmp
jae
popa
jge
mov
or
push
std
incl
lret
jne
clc
adc
fwait
mov
jnp
inc
clc
dec
sub
add
mov
or
cli
adcb
das
les
or
int3
push
fstpt
mov
imul
shlb
imul
mov
movsb
orb
mov
int3
adc
xchg
decl
pop
loopne
pop
cmpsb
adc
xor
and
mov
mov
mov
icebp
mov
loopne
push
out
in
ret
fcompl
xorl
sar
ds
arpl
fldt
cs
or
filds
ret
push
push
jecxz,pn
aas
sbb
xchg
hlt
ljmp
push
jnp
add
bound
sar
cmp
cld
lcall
inc
pushf
imul
adc
sub
push
push
xor
jg
mov
and
out
jge
mov
and
loope
and
mov
jmp
xor
in
adc
jg
mov
jmp
jge
addr16
add
cmp
daa
arpl
push
pop
sub
cmp
sbb
decl
lret
in
ja
rcll
insb
dec
xor
daa
orb
mov
push
sbb
push
lahf
mov
push
sarb
sbb
xchg
xchg
push
cmp
push
aaa
int3
mov
out
push
repz
push
jne
mov
push
xchg
mov
pop
out
fdivrs
rcr
push
mov
inc
add
stos
int3
lret
mov
mov
loopne
sbb
lods
sbb
jne
mov
add
mov
jmp
jae
dec
rcll
sub
ds
cli
incl
xor
rcrl
repz
shrb
push
in
dec
imul
ffreep
fildll
push
jmp
add
in
pop
sti
push
sbb
movsl
cmp
dec
inc
fdiv
pop
xlat
pushl
pop
mov
insl
pushl
mov
cmp
in
int
lahf
jmp
outsb
dec
add
mov
int
enter
and
pushl
inc
inc
push
mov
pop
movsl
test
cmp
rcll
push
shll
jno
popa
dec
jg
inc
mov
mov
test
cmp
and
es
mov
lods
vpsllw
loop
xor
daa
add
mov
mov
mov
rorl
and
decl
sub
add
jae
push
lahf
popf
pop
sbb
call
scas
and
jl
data16
mov
and
bound
sub
xchg
and
lcall
push
add
or
loope
lret
sub
lret
inc
clc
lcall
mov
push
bswap
pop
pop
mov
add
inc
cmp
jmp
pop
inc
add
lcall
inc
xor
push
adc
sarb
xchg
decl
mov
mov
ljmp
ficomps
sbb
mov
jg
iret
mov
mov
push
test
inc
sbb
mov
imul
pop
in
cwtl
push
or
es
test
loopne
lds
mov
mov
add
jmp
rcrb
cmp
mov
sub
pushl
loopne
add
xor
jbe
adc
inc
pop
jge
and
dec
xchg
mov
fwait
subb
cwtl
pop
scas
mov
clc
stos
sub
xor
in
pop
xor
lret
out
loope
cli
bound
xchg
aad
jmp
icebp
add
andb
add
cld
add
lods
sub
in
int3
mov
incb
jecxz
or
push
fcmovnb
dec
sahf
sbb
sub
adcl
lcall
sbb
push
jne
pushl
pop
daa
xchg
addr16
jne
inc
mov
pop
add
out
std
jne
or
lock
incl
in
mov
lret
outsl
mov
notb
call
and
adc
aam
pushl
je
arpl
addb
movsl
fdivrl
push
xchg
ja
into
mov
les
mov
mov
lock
sahf
pop
jmp
popa
ret
pop
lret
movsl
repz
mov
iret
popa
ljmp
pop
mov
pop
call
idiv
inc
dec
das
cmpsl
imul
test
fldcw
mov
adc
xor
jmp
xchg
sarl
in
lds
jo
mov
pop
ret
bts
xor
js
stos
xor
lods
int
mov
jp
and
stos
xchg
and
lcall
xor
and
leave
xchg
cmpb
icebp
xchg
pusha
add
jmp
push
icebp
and
adc
sub
orb
push
adc
or
mov
call
push
xor
mov
inc
mov
cmp
push
xchg
dec
lds
sbb
out
mov
push
inc
jmp
mov
leave
mov
dec
ds
xor
cmp
xor
call
cld
or
test
test
movsb
outsb
cld
push
xor
movsl
lret
adc
test
jp
inc
push
cmp
sub
scas
push
les
and
leave
cs
adc
pop
mov
pushl
push
push
or
icebp
xor
sbbl
mov
cmp
adc
sub
jo
mov
es
sub
jb
lret
xchg
xor
add
inc
sub
pop
mov
cmp
mov
xor
cmpsb
mov
mov
loopne
clc
sub
jp
push
lea
jg
ja
cmp
ljmp
es
jo
pop
xor
ljmp
pushf
jns
and
pop
push
xor
pushf
adc
cwtl
adc
jnp
jae
mov
lcall
out
mov
sbb
dec
or
mov
sbb
lcall
jo
add
shlb
sbb
shlb
xor
adc
push
clc
decl
xor
mov
roll
adc
push
incl
lret
adc
cmp
xchg
pop
ret
add
dec
push
and
or
and
fdivl
sub
leave
mov
shrb
add
sub
cld
mov
inc
js
sbb
xor
pushf
lods
mov
xor
cmp
call
cmp
mov
push
add
mov
cmp
push
adcl
clc
sub
mov
fisttps
jmp
and
orl
mov
and
decl
loop
dec
scas
mov
mov
mov
add
mov
adc
jle
dec
adc
pop
mov
add
or
lcall
or
test
loope
data16
inc
xchg
shufps
mov
lds
dec
fldt
inc
mov
fsubrl
mov
mov
cmp
ret
sub
sub
out
ss
inc
dec
mov
call
pop
xor
nop
fwait
dec
mov
mov
mov
inc
jecxz
cmp
stos
add
out
imul
jl
xchg
in
dec
sub
hlt
sbb
das
shl
pushf
add
testb
lcall
clc
fimull
shlb
push
cmp
push
repnz
rol
mov
ret
lods
push
ret
enter
pusha
dec
jmp
inc
sbb
inc
mov
adc
jl
ret
push
push
stos
mov
fnsave
xchg
push
push
add
add
ljmp
push
xchg
push
decl
add
sbb
rorb
sub
call
jmp
es
orb
jg
xorl
es
pop
sar
sub
lock
enter
in
cmp
add
call
fld
or
jmp
or
and
outsb
push
jne
xchg
sub
inc
lret
or
pop
shll
add
add
pop
mov
adc
or
incl
lds
mov
mov
leave
cmp
fnstcw
gs
or
fisubrl
test
data16
dec
mov
inc
push
clc
rcll
pop
aaa
xor
push
decl
sub
push
xor
mov
sbb
fs
xor
mov
mov
inc
lods
decl
pushl
mov
mov
pusha
mov
adc
call
imul
jne
mov
xor
pushf
out
pop
je
pop
jnp
or
pushl
xor
aad
jne
mov
jbe
lock
xchg
add
sarb
jo
push
nop
adcl
mov
xor
xchg
xchg
scas
pushf
incl
dec
inc
xor
test
mov
push
lock
sbb
rorl
mov
mov
mov
mov
mov
mov
xchg
dec
mov
andb
push
cmp
sub
std
or
pop
rolb
adc
out
mov
or
je
aam
push
in
push
call
pushl
xor
shl
fimull
xchg
dec
inc
sbb
cwtl
je
ss
sub
hlt
jmp
xchg
xchg
fwait
cld
adc
test
mov
ret
jg
sub
sarb
inc
sarl
mov
int3
push
push
mov
out
mov
sub
repnz
mov
push
lods
push
jnp
add
testb
shlb
pop
or
add
leave
or
push
cmp
ja
lcall
mov
jo
xor
aaa
xchg
lea
call
or
fadds
das
mov
cmp
xor
add
xor
cmp
push
jne
call
mov
push
inc
cmp
xchg
int
ljmp
imul
rolb
xchg
adc
sub
bound
jecxz
jmp
pop
jle
adc
popf
lods
cmp
sbb
inc
pop
lods
roll
nop
es
cmpsl
cmp
call
xchg
jmp
xchg
or
xlat
mov
int
adc
and
xor
cli
out
cli
outsb
inc
loop
loopne
mov
jno
rcrb
out
mov
decl
push
jle
add
jge
push
and
add
cli
pushl
xor
dec
pop
fs
daa
dec
push
movsb
and
cli
call
gs
xor
in
mov
jne
scas
imul
aaa
sub
sub
pop
das
mov
cmp
xor
add
fstps
mov
mov
imul
test
outsb
orb
sbbb
pop
fsubs
xor
cli
push
jmp
and
sqrtps
push
cmp
sbb
pop
fs
push
ljmp
sbb
jg
incl
cmp
loopne
add
test
mov
sbb
pushf
scas
or
decl
add
xchg
inc
push
out
inc
mov
ljmp
pop
test
clc
out
testl
mov
or
ret
mov
pusha
ret
cwtl
mov
hlt
lcall
ror
add
or
nop
sbbl
sub
rorb
mov
stos
adc
cmpsl
and
test
xchg
stos
adc
mov
test
popa
cmp
mov
mulb
sbb
mov
loop
mov
out
mov
call
sbb
lcall
mov
shlb
pop
inc
add
cmp
call
loopne
cmp
add
enter
push
mov
and
pusha
pop
inc
out
push
or
and
sbb
push
sub
xchg
call
push
rorb
sub
mov
mov
out
xchg
ds
pop
dec
xchg
add
cmpl
dec
pop
hlt
stos
or
inc
pop
into
stc
push
add
or
icebp
inc
mov
jns
or
outsl
sbb
jle
pushf
and
pop
add
mov
addr16
adc
fnsave
jmp
push
out
or
test
movsl
adc
aas
inc
dec
rorb
mulb
divl
jo
cmp
rcr
pushf
mov
mov
inc
sub
push
rclb
movswl
fwait
sbb
arpl
and
push
dec
int
cmp
fistps
pop
int3
test
outsl
xchg
adc
aaa
dec
adc
add
mov
jge
lcall
jbe
dec
jge
dec
je
in
fsts
cmpsb
imul
mov
cmpsl
pop
mov
decl
inc
inc
sub
sub
dec
cld
lcall
ret
outsl
insb
jmp
inc
movsb
xchg
mov
cwtl
in
jg
gs
leave
mov
xor
xor
jg
insb
aam
shrl
cmp
jg
add
push
sbb
sub
dec
ss
ljmp
inc
sub
mov
and
cmc
shr
loopne
mov
adc
dec
rcrb
adc
push
movsl
push
lds
mov
add
jg
or
cmp
inc
add
sti
cmp
test
jo
sub
fbld
sbb
into
cmp
sub
pop
clc
xor
sbb
call
pop
stos
mov
subb
add
jbe
popa
cli
or
push
test
outsb
cmp
jne
gs
sub
test
inc
push
push
cmpsb
lcall
imul
add
popf
jp
cmp
mov
xchg
mov
adc
dec
pop
jns
rolb
mov
dec
xchg
sub
aam
cmp
inc
jno
les
ret
ljmp
sar
or
lcall
testb
push
dec
xchg
in
sahf
xchg
xor
enter
lcall
mov
andnps
jecxz
push
sbb
sbb
push
dec
mov
adc
push
xor
mov
xor
mov
std
fwait
sub
stos
arpl
and
hlt
pushl
movsl
mov
push
rcl
and
mov
clc
pop
add
push
fbld
shl
movsl
cmp
cmpsl
jnp
sti
xorl
jg
rorl
lods
or
stos
xchg
mov
add
sbb
dec
dec
xchg
pop
push
shl
fbstp
and
cwtl
cmp
fisubl
sub
add
ljmp
pop
xor
jp
inc
mov
cmp
arpl
hlt
pop
fs
dec
xor
jb
call
imul
inc
lahf
pushl
in
shrb
pusha
pop
cmp
inc
pop
cmp
jb
cmp
mov
cmp
push
fimuls
mov
shl
test
push
and
sub
add
or
jne
inc
push
adc
push
fs
incl
cli
test
je
inc
inc
jle
inc
pushl
mov
xor
mov
mov
lcall
xchg
jae
cmp
push
adc
call
sub
movsl
lcall
adc
icebp
cmp
jmp
scas
orl
or
push
or
jne
mov
xchg
es
pop
loopne
incl
sub
lods
pop
xor
and
nop
sbb
sub
fcomip
or
xor
enter
lds
int
xor
mov
sub
dec
cmovle
mov
mov
mov
or
incl
inc
xchg
sbb
or
jo
sub
sbb
inc
push
lcall
sbb
in
adc
orl
loope
mov
ss
lret
pop
push
fldt
and
enter
mov
xor
mov
fwait
cmp
mov
adc
add
shrl
add
xor
dec
fs
out
sti
lcall
cmp
jns
or
jmp
jne
cwtl
push
xchg
subl
frstor
imul
ja
lea
js,pt
aaa
jnp
das
cmc
shl
ljmp
jae
or
ret
mov
lcall
pop
lcall
fistps
mov
mov
mov
movsb
leave
adc
push
adc
fadd
mov
xchg
lcall
mov
push
lds
das
dec
and
push
ljmp
pop
cmpl
out
or
sbb
sub
mov
adc
adc
and
xor
dec
xchg
leave
call
sbb
inc
loope
xlat
xchg
and
dec
inc
lea
mov
adc
dec
pop
inc
xchg
adc
movsb
add
jno
popf
or
incl
add
lcall
nop
add
roll
and
mov
addb
test
sub
and
lcall
ret
dec
inc
adc
adcl
push
and
lcall
imul
jb
mov
dec
jne
ss
add
test
cwtl
or
jecxz
mov
sbb
push
jg
push
mov
fidivs
test
or
jae
jmp
das
push
xor
pop
push
mov
stos
das
loope
cmp
cwtl
or
pop
dec
dec
in
cmp
stos
decl
cltd
add
dec
and
sti
lock
cmp
add
decl
xchg
movsb
sti
imul
insb
mov
in
or
mov
je
ficoms
filds
inc
call
sub
cwtl
ret
adc
fsts
adc
incl
xchg
adc
xchg
mov
andl
das
jae
test
mov
pop
into
and
sbb
push
in
push
xor
cmp
xor
cmpb
shlb
daa
mov
ljmp
movsb
ss
iret
push
jns
aas
lret
imul
lock
push
cmp
add
call
push
dec
push
xchg
cs
lcall
cs
sbb
add
push
ds
xor
pop
mov
xor
mov
add
outsl
adc
rol
loopne
fsubs
pusha
ja
dec
cmpsb
sbb
test
add
sub
aam
int3
dec
adc
dec
dec
mov
sbb
add
jne
mov
dec
mov
cmp
mov
insb
push
sti
shrl
stos
pushf
repnz
sbb
pop
nop
mov
mov
leave
and
adc
mov
pop
cmpb
mov
push
push
add
dec
or
pop
stos
fisubs
and
das
call
and
dec
test
sub
in
pop
pop
int3
push
orl
inc
mov
ljmp
sti
dec
sub
pop
rol
dec
fldl
add
or
int
cmp
ds
pop
dec
jne
scas
icebp
fcomip
popa
inc
add
scas
lret
shlb
xor
pop
adc
xor
aaa
add
nop
ffreep
adc
loope
add
cmp
push
pop
mov
sbb
push
jns
cld
int3
negl
mov
dec
loop
mov
dec
xor
enter
add
jmp
pusha
nop
or
cmc
ljmp
push
pop
sbb
fisttpll
fiadds
cmp
mov
adcb
test
sysexit
pop
jl
ljmp
std
xlat
jle
js
pop
call
popf
xchg
or
stos
jg
loope
fadds
call
jne
lea
outsb
xor
adc
ljmp
out
ret
ss
rcrb
adcb
pushl
xor
mov
pop
cmp
mov
mov
dec
ljmp
jl
mov
pop
std
das
clc
pushl
fidivl
xor
fiadds
jle
pusha
mov
loopne
in
daa
jbe
call
sbb
stos
mov
test
add
sub
aaa
in
inc
add
insb
fisttpl
add
pop
and
cmp
sbb
inc
lcall
add
adc
fmull
cmp
lcall
xor
mov
xor
push
call
sub
movsl
mov
psraw
sti
rcrb
jg
jno
arpl
push
testl
or
call
jne
inc
inc
icebp
pop
pop
push
xchg
std
incl
xlat
sbb
mov
add
pop
push
test
and
adc
loope
inc
sub
out
or
sbb
cmp
jle
add
ljmp
adc
movsb
dec
push
push
data16
lea
imul
incl
arpl
fstp
rep
cmp
aad
lea
mov
cmp
push
inc
xor
jo
pop
js
call
fidivl
dec
out
mov
xchg
push
ljmp
xchg
fstps
dec
or
push
orb
lock
push
xlat
add
jle
das
test
popa
mov
pop
out
xchg
test
dec
out
loope
adc
dec
xor
mov
stos
or
sbb
mov
inc
test
pushl
add
adc
jecxz
and
pop
jno
stos
pop
adc
mov
mov
subl
test
call
sub
inc
push
std
das
rcl
into
jno
add
jecxz
movsl
jecxz
jns
loopne
adc
cli
pushl
clc
in
sub
cmp
dec
mov
dec
sbb
lock
and
fmul
imul
nop
push
gs
cs
add
sahf
in
push
xor
mov
pop
jge
pop
dec
fisubs
adc
mov
xlat
xor
mov
cmp
mov
incl
cli
sbbb
pop
out
pop
call
fisttps
cmp
inc
in
push
adcl
fistps
push
ret
jbe
hlt
xchg
add
std
lcall
or
push
rol
mov
cmp
sub
out
pop
addb
aaa
sbb
jp
pushf
std
scas
push
aam
inc
or
ljmp
adc
adc
jmp
cmpl
pop
add
lahf
xchg
rcr
adc
ljmp
push
cltd
rclb
divl
push
inc
in
lods
mov
movsb
bswap
sbb
inc
pushf
test
mov
pop
jmp
fiadds
xchg
or
inc
pop
idivb
jmp
jo
js
lods
xor
xor
xchg
sarb
xchg
lcall
out
int3
xchg
jle
and
adc
mov
cwtl
xchg
arpl
ljmp
aas
cld
cmp
arpl
and
sub
test
decl
notl
outsl
std
xchg
add
addb
lock
jo
inc
xchg
lcall
pop
mov
and
call
sbb
mov
xchg
js
jg
cmp
xchg
lret
inc
lods
pushf
mov
ret
or
mov
repnz
push
sub
cmpl
sub
insl
sbb
inc
adc
rorl
jl
test
mov
aad
insb
in
dec
aaa
insb
ss
test
out
jae
mov
decl
stos
insb
jge
xchg
dec
decl
sti
mov
sub
push
dec
in
lcall
xchg
std
arpl
nop
adc
outsb
sti
nop
cmp
sub
andb
jmp
scas
sub
shlb
adc
adc
xchg
cmp
mov
call
xor
mov
jmp
mov
enter
lcall
call
mov
lock
into
sbb
or
imul
jg
adc
pop
sub
push
jbe
push
sub
fbstp
push
psllw
enter
sbb
jmp
sub
test
and
jge
testb
lds
insl
add
sbb
pop
jmp
das
sar
fidivrl
insb
mov
sub
mov
push
fs
or
daa
pop
test
jae
mov
xor
jge
out
mov
out
adc
jmp
pop
jns
push
jne
orl
sbbl
cmp
stc
cbtw
sbb
inc
push
jbe
jge
fidivrl
gs
fwait
sbbl
setle
sbb
sahf
stc
adcb
ffreep
lods
adc
in
loope
repz
fidivrs
mov
sub
push
xor
call
stc
cmp
outsl
adc
xor
mov
enter
sub
inc
stc
out
and
test
ljmp
jmp
xor
outsl
inc
jge
bound
dec
mov
or
ljmp
fmull
mov
popf
add
mov
or
or
mov
idivl
ds
fwait
adc
shrb
js
lcall
jno
test
ret
arpl
int
rcr
add
mov
ret
jnp
pushl
es
cltd
gs
adc
inc
jle
push
test
push
fcmovnbe
mov
add
lcall
cmpsl
or
loopne
push
jns
data16
stc
sbb
subb
mov
lret
aam
push
push
loope
clc
inc
cld
cmp
scas
inc
mov
inc
outsb
jnp
les
mov
pop
loope
inc
dec
stos
pop
sub
ljmp
sbb
pop
push
pusha
mov
jg
call
rol
add
roll
xor
test
ds
aaa
mov
ljmp
push
jl
imul
clc
dec
jmp
adc
les
xor
mov
cmp
adc
ret
movsb
push
adc
adc
adc
mov
cmc
sub
icebp
mov
stc
les
shll
pop
sahf
xor
lods
sbb
insb
fnstcw
xchg
outsb
pop
lods
imul
decl
fnstsw
mov
das
loop
adc
sub
rcr
icebp
arpl
add
push
xor
call
mov
jmp
faddl
or
clc
hlt
in
mov
insb
or
ljmp
mov
into
fwait
ja
push
int
jae
loopne
movsb
dec
imul
sbb
and
scas
push
mov
push
sbb
cmpsb
mov
je
jns
mov
adc
xchg
sub
and
lcall
lods
scas
jecxz
xchg
cli
hlt
inc
dec
int3
scas
pop
inc
loop
ljmp
inc
test
or
lahf
lret
enter
jnp
lock
push
xor
pop
jl
add
fwait
loopne
loop
nop
push
insb
xchg
xor
sbb
xchg
pop
push
nop
shrb
pop
or
add
pushl
mov
xor
shlb
push
les
push
inc
decl
xor
inc
add
pusha
fadd
and
push
adc
out
clc
fsts
and
add
adc
xchg
lret
xchg
ja
and
inc
push
cmp
jmp
clc
sbb
jb
mov
in
pushl
pop
clc
insl
xchg
ljmp
adc
nop
push
xchg
push
test
inc
and
flds
inc
xorl
sub
xchg
cmp
inc
jl
jb
push
or
and
mov
aam
cmp
add
push
movsl
xchg
dec
xchg
inc
inc
adc
dec
push
xchg
adc
dec
lds
pushl
lds
push
mov
mov
pusha
lds
xchg
pop
mov
push
pop
pop
pop
test
mov
xchg
sbb
cli
sub
cli
pushw
pop
gs
lret
test
ljmp
push
sub
pop
or
jo
scas
insl
mov
add
pop
pop
outsl
in
mov
push
sbb
mov
jbe
push
mov
loopne
xchg
test
mov
adcb
inc
sbb
in
lock
incb
add
jl
add
inc
add
xor
incl
add
js
or
inc
cmp
jnp
mov
roll
add
icebp
pop
add
incb
enter
in
sbbl
rcrl
adc
aam
lock
or
cld
jo
call
pushf
jo
sbb
fs
adc
jb
mov
arpl
insl
js
and
call
xchg
or
sub
push
mov
cmpsl
fwait
inc
jb
movsb
xchg
pop
fmulp
rcrb
dec
and
pushl
lcall
pop
push
xchg
push
mov
sbb
cmp
jns
in
sub
jmp
jmp
sub
fwait
mov
push
inc
sub
adc
mov
mov
inc
dec
les
ljmp
addb
push
stos
fs
lods
fmuls
xchg
std
out
add
mov
adc
scas
ds
incl
fmull
pop
jl
mov
mov
pop
call
adc
ljmp
fsubs
daa
mov
fs
jl
addr16
cltd
push
pushf
outsl
clc
push
ja
imul
pop
mov
in
sbb
xor
pop
push
adc
ret
sbb
and
xchg
ljmp
cmp
pop
add
test
mov
adc
enter
outsl
mov
lcall
cltd
or
pushl
ds
jno
andb
add
gs
xchg
repz
add
add
std
cmpsb
stos
ret
test
push
mov
test
ret
aas
stc
add
ss
clc
incl
mov
sub
nop
call
jb
mov
rcl
cwtl
enter
jmp
mov
cmp
mov
or
jmp
ljmp
jns
push
sbb
daa
test
test
test
add
push
mov
incl
ss
xchg
insb
push
dec
inc
push
nop
cli
xchg
push
loope
pop
add
cmp
lods
and
lret
jmp
stos
sahf
fmuls
push
push
inc
or
xchg
popa
rorb
dec
test
cmp
xor
nop
or
mov
test
fstps
pop
xlat
add
mov
in
std
test
stc
xlat
pop
into
out
jg
and
rcrl
add
ret
cmp
xchg
decl
push
jno
add
int
inc
sbb
pushf
imulb
rolb
test
sbb
cmp
add
jo
fbld
cs
sbbl
push
iret
or
repz
sub
cmc
aam
jmp
lahf
jns
dec
inc
ja
nop
add
lock
loopne
add
pushl
sbb
loope
sbb
aam
or
or
xlat
mov
mov
loop
incl
sub
ljmp
or
hlt
ljmp
sarb
jbe
adc
and
push
xor
imul
xlat
mov
pop
cmp
dec
mov
dec
lods
sub
xchg
ljmp
call
loopne
jae
sbb
add
ljmp
pop
or
adc
jle
pushl
clc
or
mov
rorb
adc
iret
push
or
daa
adc
mov
movsl
icebp
and
lret
insb
lcall
roll
stos
sub
aad
test
sub
and
push
scas
cltd
push
pop
inc
lret
sub
andl
push
adc
cmp
xor
mov
and
cmp
stc
out
pushf
movsb
push
adc
xor
push
jmp
mov
xchg
pop
fucom
outsl
mov
fidivrl
gs
add
adc
jge
adc
and
call
movsb
jmp
div
pop
add
orl
dec
add
and
pop
sub
cli
mov
mov
and
iret
decl
cmp
cs
mov
cli
shl
pop
pop
and
jle
jae
lcall
outsb
and
or
push
popf
adc
mov
mov
jg
cmp
sub
out
push
fisubs
inc
das
xchg
cmp
lcall
inc
mov
or
or
adc
and
lds
es
jo
inc
orl
scas
je
mov
mov
sub
scas
orb
push
sbb
add
pop
fs
mov
or
jmp
cltd
push
test
dec
cld
push
mov
imul
mov
sub
pushl
cwtl
push
dec
mov
lods
mov
mov
jl
imul
rol
es
push
jmp
repz
push
inc
ss
inc
decl
inc
addl
inc
xchg
mov
pop
or
std
pop
insb
cmp
fcomip
lcall
loope
addr16
mov
out
loopne
or
mov
fdiv
cld
aaa
rcl
inc
insb
dec
sahf
xor
jns
cmpsb
test
dec
cmc
jg
inc
mov
incl
lea
pop
xchg
incl
sub
lahf
add
sbb
sahf
imul
call
mov
cmp
sbb
inc
push
xchg
lcall
addr16
and
add
adc
adc
mov
add
jns
add
daa
pop
mov
jns
pop
add
push
jle
mov
xor
xchg
fisttps
mov
and
pop
sbb
lods
imul
pop
adc
xchg
push
sub
test
cltd
xlat
jae
pop
mov
call
loopne
xchg
mov
adc
push
decl
call
push
out
pop
pushf
push
and
sahf
cmpsl
mov
fidivl
ljmp
subb
test
or
popf
adc
decl
mov
mov
loop
lock
incl
inc
cld
sub
fidivs
pop
ficompl
pop
or
fbld
push
movsb
mov
jno
jmp
push
fdivs
sub
fucomp
ss
dec
fcoms
fwait
sub
ljmp
outsb
and
test
dec
sbb
fucomi
xor
push
jecxz
aad
mov
add
decl
addr16
jb
dec
sub
adc
xchg
push
and
dec
daa
out
mov
lcall
movsb
pop
cmpsl
test
add
daa
dec
pop
jns
inc
decl
lock
clc
outsb
sarl
mov
adc
aam
orl
or
rcrl
push
xchg
push
fcompl
add
rol
push
inc
arpl
test
and
clc
lods
add
jg
dec
xchg
frstor
sbb
fcmovbe
aad
jb
popf
fcmovu
lret
fistl
sar
and
mov
add
roll
enter
jmp
or
roll
scas
add
test
in
ja
sahf
sbb
or
mov
mov
pop
xchg
jle
inc
mov
add
mov
inc
push
icebp
decl
inc
sbb
cmp
test
inc
xor
js
test
adc
sbb
aam
jmp
in
inc
or
push
mov
or
jmp
fs
xor
push
adc
repz
js
decl
sub
pop
dec
fistps
les
leave
pop
std
adc
popf
les
lcall
push
stos
push
mov
stc
xchg
cli
push
andl
sub
pusha
insl
sbb
cmc
jno
mov
insb
push
lods
lret
lcall
and
xchg
lods
movsb
sbb
mov
push
adcb
adc
popf
test
dec
push
filds
push
push
jbe
outsb
imul
dec
mov
push
bound
pop
mov
adc
fnstenv
mov
and
orb
rcr
cmp
gs
fcompl
or
inc
test
lcall
lret
adc
mov
or
int3
in
xchg
dec
and
outsl
jb
ret
in
rorb
mov
push
decl
pop
mov
test
adc
sbbb
cmpl
push
call
mov
adc
cmp
push
mov
dec
pop
cli
popa
push
push
jo
pop
inc
lods
bound
sub
xchg
leave
rclb
lcall
enter
cwtl
lea
xchg
or
mov
test
mov
pushl
xchg
dec
enter
movsl
push
jns
and
xchg
sbb
dec
and
sbb
pushf
pop
in
push
xchg
popa
dec
les
inc
lcall
and
xchg
imul
enter
mov
add
cld
lds
pop
and
mov
mov
push
and
inc
fwait
or
imul
repnz
incl
stc
mov
cmpb
push
dec
je
hlt
adc
insb
xchg
cmp
mov
call
pop
xor
jmp
and
push
cmp
add
out
iret
cmp
dec
cmp
cmp
mov
lcall
out
int3
popf
adc
rolb
lcall
jo
add
pop
push
add
xor
jl
pop
adc
xchg
jle
inc
inc
dec
ret
sbb
pop
and
inc
jne
cwtl
mov
movsl
and
cmp
sub
mov
shlb
mov
loope
int3
fiadds
scas
mov
pop
xchg
mov
decl
js
mov
adc
pop
push
std
mov
and
aad
in
cmc
inc
dec
ret
rol
decl
pop
and
sub
das
xchg
movsb
aam
cmpsb
int3
rcrl
fsubs
jmp
cmc
mov
je
arpl
lahf
mov
and
dec
es
jg
push
dec
jecxz
lods
sbb
mov
sbb
xor
and
roll
push
aam
pop
pushf
lds
adc
dec
insb
pop
adc
lret
enter
sbb
pop
lock
and
test
stos
frstor
mov
lcall
or
adc
mov
push
and
inc
lret
outsb
adc
rcll
int3
orb
adc
sbb
int3
inc
cmp
dec
adc
outsl
cli
lcall
sbb
push
mov
pop
dec
mov
mov
and
mov
mov
jmp
mov
pop
sbb
add
sbb
dec
jo
xchg
adc
push
std
fildl
loopne,pt
test
jg
adcl
outsb
or
and
cmp
sub
rcrl
inc
nop
push
mov
dec
out
xchg
in
test
pop
sub
cli
and
mov
mov
loop
inc
dec
mov
lea
gs
sar
fcomip
pop
mov
loopne
add
xor
es
xchg
data16
adc
adc
mov
xchg
jmp
imul
and
inc
outsb
rcll
ljmp
mov
and
cli
shlb
cli
jmp
push
pop
cmp
sub
rclb
cld
push
movsb
cli
jae
and
das
mov
dec
int3
inc
int3
scas
gs
jno
ja
pop
inc
jle
decl
addl
loope
nop
sbbb
adc
mov
adc
mov
daa
dec
pop
sbb
dec
fxtract
popa
xchg
loopne
call
xor
sbb
cmpsb
xor
fstl
daa
mov
inc
jg
xchg
popf
test
cmp
or
mov
pop
push
add
movsb
sub
sbb
pop
dec
aam
mov
push
push
mov
mov
test
fstl
or
rclb
mov
add
pusha
incl
inc
arpl
adc
cmp
xchg
push
or
es
out
push
lods
cmp
cmp
sahf
gs
bound
pop
das
xor
imul
mov
aaa
sar
cmpsb
pop
sbbb
xor
cmp
lret
popa
mov
cmp
fst
push
ficompl
ljmp
das
xchg
adcl
sbb
cmpsl
add
mov
mov
scas
cmp
mov
insb
inc
xchg
out
imul
stc
dec
push
rorb
and
rclb
mov
jg
ljmp
call
dec
imulb
dec
in
int3
rorl
mov
fwait
lea
sbb
dec
mov
cmpsb
lcall
rcr
mov
das
ss
in
dec
pop
gs
sbb
test
call
xchg
pop
mov
xchg
add
pop
sub
mov
mov
mov
decl
ljmp
mov
pop
sti
loop
mov
pop
add
xor
out
dec
lods
push
xor
repnz
mov
lock
xor
inc
fwait
popa
syscall
push
pop
iret
rorb
shrl
ljmp
pop
lock
add
lret
movsb
loope
add
decl
jle
adc
cmp
cli
mov
out
test
decl
movsb
xchg
stc
mov
js
or
movsb
or
test
jle
adc
ljmp
mov
test
jnp
mov
mov
adc
lock
mov
push
mov
pusha
or
mov
dec
out
in
push
adc
insl
xchg
or
and
decl
push
mov
push
and
sbb
inc
lcall
xchg
jnp
daa
and
xchg
pop
sbb
adc
inc
inc
or
ljmp
jge
mov
sbb
mov
lods
in
cmp
jo
mov
leave
and
xchg
stos
scas
ljmp
dec
sub
inc
cmp
ljmp
pushw
cmp
sbb
xchg
mov
repnz
sub
lock
dec
das
cltd
mov
pop
lods
sbb
add
lock
xchg
inc
mov
and
test
pusha
push
leave
mov
cld
fucomip
mov
mov
jmp
aaa
or
out
test
int
popf
and
rclb
in
cli
jmp
lds
xlat
sti
jp
add
addr16
pop
mov
xchg
xchg
stos
ljmp
lods
xchg
mov
mov
jns
or
adc
push
je
fidivl
lcall
dec
data16
shrl
or
jg
addr16
sahf
add
mov
inc
xor
lds
sub
and
int3
fistpll
pop
rcrb
mov
mov
sub
and
lcall
xchg
cmp
pop
in
dec
test
popl
lret
call
mov
dec
fisttpl
pop
xchg
lcall
cwtl
sub
sbb
and
pushl
addb
out
mov
adc
mov
sbb
iret
sahf
icebp
je
je
mov
dec
jb
jo
test
in
imul
push
movswl
imul
imul
lcall
jmp
cmpsb
outsb
loop
push
ror
mov
fidivs
jno
xchg
mov
shll
pop
out
xchg
push
jnp
shll
dec
sub
lcall
add
sahf
mov
mov
repnz
or
push
mulb
fdivs
ljmp
pop
add
mov
test
mov
popa
adc
jmp
or
ret
xor
dec
mov
scas
sub
and
ljmp
or
lock
adc
ret
add
dec
mov
mov
pop
xchg
adc
or
scas
pop
lds
pop
sub
ljmp
decl
ror
add
mov
jno
aaa
popf
daa
xor
lret
incl
xor
inc
rolb
inc
mov
bound
sbb
mov
scas
mov
lock
jmp
ja
hlt
and
repz
mov
mov
loopne
cmpsb
imul
adc
in
pop
clc
lret
pop
adc
test
or
push
or
jmp
scas
scas
jne
testl
cmp
cmp
push
nop
mov
xchg
add
aam
ljmp
je
add
adc
or
cmpsl
add
inc
xchg
and
pushl
aam
test
mov
cmc
flds
pusha
pop
xor
lcall
fdivl
inc
push
bound
lret
and
pop
adc
lret
push
nop
call
into
leave
jmp
jo
and
fmuls
aas
decl
mov
mov
jmp
lcall
test
ja
shrb
test
mov
lret
inc
dec
bound
shrb
incl
test
adc
sbb
sub
jmp
fsubrl
xor
out
out
push
incl
cltd
icebp
loopne
pop
icebp
clc
inc
pop
test
jg
cmp
loope
push
rcrb
push
push
fnstenv
mov
cld
dec
mov
jbe
scas
push
inc
outsl
bound
subb
popf
dec
cmpsb
std
push
mov
ljmp
add
outsl
call
outsb
cwtl
fisubrl
add
cmp
ljmp
movsb
jne
xlat
ret
inc
ss
pushf
addr16
mov
push
mov
jae
push
xor
movsb
test
call
adc
add
lods
loop
incb
scas
xchg
jmp
orl
add
hlt
les
lds
nop
pushl
cld
adc
xchg
adc
mov
idivb
out
xchg
cwtl
inc
mov
jg
pop
adc
dec
pushf
sub
insb
das
xor
mov
js
pop
cmp
aas
out
mov
sub
jo
imul
mov
into
pop
inc
int3
inc
inc
cmpsl
fstps
add
into
add
adc
pop
xor
push
cli
fwait
call
add
cltd
lock
add
adc
je
adc
cmc
xchg
dec
cwtl
inc
outsl
stos
sub
ljmp
push
mov
roll
xor
in
incl
bound
xor
sub
xchg
mov
les
and
add
lea
xchg
sub
add
mov
sub
bound
fbld
push
xor
xor
and
incl
push
dec
push
and
cli
adc
rcrl
pop
das
dec
nop
jns
test
mov
icebp
and
cmp
adc
stos
pusha
fsubs
mov
shl
mov
and
cwtl
xor
test
cs
mov
std
add
and
subl
decl
xchg
mov
fistl
jns
or
dec
xor
sub
cltd
jae
roll
call
popa
pop
mov
rorb
cmpsl
cs
lcall
mov
scas
cmp
imul
add
sub
mov
jecxz
lcall
cli
jae
push
test
jae
mov
ljmp
ljmp
inc
mov
cltd
scas
pop
add
pop
sub
cmp
incl
push
loopne
cmp
lock
jmp
arpl
add
or
xchg
decl
or
jo
or
les
cs
inc
hlt
rolb
data16
mov
pop
jno
push
push
push
std
ljmp
or
sbb
dec
or
mov
jno
aaa
xchg
ret
dec
dec
test
and
call
insb
loop
and
loop
inc
mov
inc
and
loop
dec
daa
stos
sub
movsl
lea
sub
xor
insb
loopne
mov
incl
test
jg
xor
xchg
ret
xchg
dec
sub
push
add
decl
retw
cmp
mov
rorb
loop
adc
push
cmp
jmp
xor
push
adc
add
push
adc
orl
nop
mov
mov
lods
cmp
push
arpl
aam
imul
out
imul
ljmp
mov
xchg
gs
stos
add
sbb
lods
cmp
in
mov
xchg
pop
out
push
dec
rclb
mov
cmp
in
push
inc
in
lret
mov
adc
iret
and
lea
mov
mov
aas
add
test
pushl
rorl
pop
xchg
mov
inc
sub
nop
or
cmp
or
inc
xchg
mov
push
inc
movsb
mov
push
mov
jg
jno
cmp
imul
xchg
je
daa
fwait
xchg
xor
adc
mov
dec
popf
test
and
jmp
test
jmp
aaa
adc
inc
cmp
leave
sub
filds
mov
jmp
fwait
outsb
inc
push
sbb
test
addr16
and
jg
pusha
and
sbb
decl
push
push
pop
mov
xor
call
lods
or
inc
sub
dec
lods
bnd
or
adc
and
push
xor
mov
call
jae
stos
lods
pop
jbe
jnp
fst
cmp
fsubs
xchg
div
or
mov
mov
mov
mov
dec
jbe
in
movsb
ja
in
fstpl
stc
dec
push
mov
popa
cld
in
sbb
inc
not
js
add
pushf
cwtl
loop
stos
mov
dec
call
inc
repz
sbb
and
pop
cli
mov
pushf
push
mov
sar
dec
mov
int3
inc
das
mov
jno
inc
jb
pop
cld
lcall
or
or
inc
xor
sub
xchg
js
sub
test
cmp
xchg
test
cld
jmp
outsb
addb
push
in
test
xchg
adc
sub
cmpsl
cmp
ljmp
xchg
xchg
fsubl
ret
ds
pop
sti
dec
push
push
adc
mov
bound
pop
aam
push
adc
or
xchg
inc
pusha
push
push
rclb
mov
test
jns
inc
clc
mov
mov
sub
ret
pop
js
push
aas
cli
mov
roll
mov
mov
or
ficoms
pop
or
dec
outsl
sbb
sbb
ljmp
jae
dec
fisubl
jmp
jns
jno
leave
das
push
cmpsb
xchg
loope
mov
dec
dec
xchg
jecxz
or
jb
loopne
push
cmp
inc
xchg
inc
adc
ror
mov
mov
lock
add
int3
and
test
fmul
sbb
cld
mov
cmp
ja
incl
or
insl
daa
cmp
lret
dec
xchg
rolb
push
push
xchg
inc
sar
jmp
add
add
and
shll
mov
jno
test
aam
or
adc
push
sbb
push
sbbl
sub
pop
jb
mov
int
push
mov
test
mov
and
je
sbb
decl
xchg
adc
xchg
les
adc
and
or
inc
daa
test
movsb
outsl
push
test
movsb
or
add
movl
sub
mov
loop
mov
incb
dec
mov
pushl
data16
arpl
sti
mov
aad
xchg
push
add
mov
hlt
push
cmp
lea
lods
in
xor
cmp
sar
jmp
leave
loop
rorl
mov
outsb
xchg
xlat
sbb
dec
lock
scas
into
stos
dec
std
incl
dec
xchg
inc
movsl
sbb
lahf
stc
loop
les
push
test
add
dec
bound
pop
int
push
pop
add
mov
pop
inc
adc
pop
loopne
mov
movsb
adc
dec
adcb
dec
hlt
dec
pop
jno
mov
data16
call
fdivrl
test
test
andb
popf
or
fidivrl
xor
lcall
sub
inc
test
test
loopne
js
xor
and
mov
sbb
lea
aad
clc
ja
jl
jp
leave
push
push
sub
pop
sub
stos
bound
xor
add
ljmp
jb
int3
pusha
pop
leave
or
jmp
xchg
adc
adc
cmp
subl
jmp
jne
aam
mov
cld
mov
sbb
cwtl
dec
pop
pop
dec
lods
lret
jb
adc
inc
xlat
mov
aam
pop
icebp
xchg
addr16
hlt
insb
aaa
bound
push
mov
cli
mov
push
enter
fldenv
aas
ud2
into
xchg
mov
cs
mov
mov
pushf
mov
flds
dec
test
outsl
xchg
adc
dec
adc
call
adc
loopne
imul
iret
jb
iret
cltd
int
mov
ljmp
in
dec
push
jecxz
mov
add
adc
inc
cmpsb
dec
adc
sub
pop
out
ret
loope
outsl
jle
fistpl
xor
hlt
aad
popa
das
test
data16
ljmp
mov
sub
and
jg
sub
pop
nop
adc
jae
fcomip
mov
mov
incl
add
mov
add
je
stos
push
decl
cmc
push
insl
cwtl
movsl
mov
gs
jnp
ss
cmc
mov
jmp
xchg
das
sar
mov
inc
jge
mov
and
aam
out
jl
sub
outsl
xchg
jb
sahf
sbb
sbb
lock
push
enter
fs
cmp
inc
add
ret
stc
test
repnz
int3
dec
pop
icebp
xchg
rclb
incl
cmp
add
hlt
mov
and
mov
cmp
inc
dec
hlt
mov
pusha
mov
add
imul
aas
push
and
mov
jl
inc
pushf
xor
adc
popf
mov
push
insl
sarl
xchg
jae
pusha
stos
rcll
mov
xchg
xchg
lcall
mov
cmp
jae
or
lds
jmp
push
sub
enter
xor
add
cmpsb
and
cmp
clc
test
pop
lock
loopne
mov
xor
ljmp
adc
pop
dec
data16
out
pop
push
daa
out
dec
stos
mov
mov
xor
xchg
cli
push
jecxz
mov
mov
lret
loope
push
aas
dec
pop
xchg
sbb
hlt
lds
in
jg
mov
incl
jl
into
shr
iret
ret
adc
sbb
incl
mov
js
gs
arpl
push
jle
xor
incl
jp
mov
les
pop
push
push
xchg
repz
mov
mov
push
mov
jge
iret
pop
sarb
call
ljmp
inc
lods
mov
cs
fimuls
shlb
imul
mov
ljmp
lret
mov
lods
shrl
inc
lods
out
fs
mov
mov
lret
dec
sub
out
aad
inc
nop
ljmp
incl
push
lds
and
jmp
adc
or
enter
icebp
scas
and
enter
lods
decl
add
lea
out
enter
push
imulb
add
es
divb
outsl
or
lods
je
mov
pushl
insl
pop
jo
ja
leave
xchg
pop
or
loopne
inc
int3
inc
cmc
xchg
insb
pop
fmuls
out
nop
jp
decl
xor
jne
inc
pop
into
insl
fcoml
andnps
mul
dec
fisttpll
adc
hlt
jmp
in
ret
aas
fiaddl
cld
fadds
aas
mov
in
push
cld
repnz
decl
adc
ret
stc
xchg
ret
mov
jmp
inc
loopne
into
xor
inc
push
add
das
iret
add
add
decb
call
sbbl
mov
ret
xchg
fs
test
ljmp
xchg
sub
ud0
push
add
ret
or
nop
sub
mov
shlb
pushl
lret
pusha
xor
addl
and
imulb
and
lods
mov
movsl
push
loop
and
push
fs
nop
nop
incl
das
xchg
xor
push
iret
icebp
cmp
test
jo
push
mov
xchg
push
pcmpeqb
or
stos
or
hlt
sub
les
adc
scas
xchg
pop
das
fucom
lcall
inc
and
mov
jno
rolb
mov
jbe
enter
pushl
cld
int3
imul
movsl
push
testl
and
mov
je
mov
imul
mov
loop
add
xchg
push
test
jle
addr16
pushl
xchg
popa
mov
cmp
loopne
sub
add
inc
sarb
dec
out
xchg
daa
shr
loop
pushl
mov
setge
js
andl
cs
mov
push
out
adc
ljmp
adc
mov
lods
xchg
mov
out
mov
lcall
add
and
arpl
sbb
inc
insl
mov
in
mov
lcall
ljmp
movsb
fdivs
sub
and
push
sub
push
fmull
push
insb
mov
movsl
pushl
mov
sbb
cmp
pop
mov
jl
jno
mov
mov
mov
cmp
mov
push
lret
mov
pop
cs
xor
fnsave
sub
ss
pop
shl
decl
gs
scas
inc
cwtl
cmc
inc
sub
loop
cmp
cmp
stos
xchg
mov
pop
push
hlt
fmuls
ficoml
ss
popf
push
xchg
mov
inc
std
add
dec
cltd
add
cmp
decl
jge
out
adc
inc
dec
push
int3
stos
add
xchg
inc
std
xchg
add
push
pop
shlb
inc
cmpsb
adc
icebp
sub
jno
sbb
out
pop
jno
mov
outsl
call
clc
ret
and
or
or
call
enter
or
in
sub
in
or
add
mov
inc
rcrb
lcall
decb
mov
xor
xor
pusha
pop
inc
dec
dec
push
and
clc
mov
in
aam
dec
and
sbb
add
orb
push
push
pusha
push
in
add
pop
das
jle
push
xchg
lock
and
sti
jmp
jmp
or
mov
adc
push
adc
scas
fidivrl
fldenv
pop
testb
add
shlb
mov
stos
inc
pusha
insb
jnp
repnz
in
repz
gs
lret
pushf
daa
and
dec
scas
dec
adc
out
xchg
add
mov
cmp
int3
daa
jno
scas
int3
movsl
push
mov
stos
cwtl
arpl
loop
dec
ljmp
cltd
ret
out
decl
add
in
pushf
test
sub
sub
add
mov
inc
dec
out
cmp
aam
mov
scas
int
inc
push
rorb
movsb
scas
clc
ljmp
std
pop
adc
in
in
dec
cs
sub
out
and
push
call
cmp
insb
cwtl
cs
xor
xor
mov
sbb
dec
stc
inc
xor
mov
in
scas
in
call
sbb
repz
mov
shlb
mov
push
out
stos
dec
xchg
and
decl
dec
inc
push
aas
test
loope
dec
loop
ret
ja
push
add
repz
ret
pop
inc
sub
rolb
push
lret
test
in
retw
inc
cli
mov
add
inc
lcall
fisubrl
sub
in
jecxz
inc
int3
cmpsl
sub
dec
fistpll
push
fldt
dec
mov
subl
jp
cli
jbe
adc
jmp
xchg
pop
fs
ret
data16
scas
add
in
aaa
adc
push
cmp
adc
call
add
and
adcl
adc
sub
pop
lahf
xor
or
call
in
xchg
pop
mov
insl
mov
cmp
add
push
pop
clc
out
or
nop
je
ret
push
out
out
push
fs
loopne
inc
out
xor
push
mov
pushl
adc
stc
repnz
or
das
inc
enter
add
dec
ljmp
test
jns
xchg
adcb
mov
mov
adc
and
mov
cmp
jp
fcomip
jmp
movsl
ja
sub
es
ret
push
movsl
adcl
fbstp
ljmp
xor
or
pop
loopne
fwait
mov
sbb
imul
call
bound
push
repz
push
inc
sysret
lods
mov
jbe
ret
mov
andl
pop
add
inc
es
loope
or
pushl
cmpl
ljmp
push
imul
cmc
lcall
pop
inc
in
lds
call
jne
add
mov
and
jge
dec
jl
scas
push
clc
popa
lods
mov
inc
lcall
jbe
inc
in
push
cli
or
mov
xlat
aad
rcll
incl
fwait
mov
ljmp
cmpsb
adc
aam
pop
out
sub
lret
inc
in
pop
ja
cmc
add
mov
push
das
sub
and
xchg
fisttpl
mov
adc
imul
ljmp
mov
mov
sbb
dec
dec
push
int
inc
mov
dec
xor
pop
dec
add
jl
mov
dec
call
cmp
bound
fsubp
aam
sub
and
inc
pop
mov
mov
adcl
mov
xchg
mov
adc
cwtl
adc
push
movsl
xchg
push
and
push
and
test
stos
push
fmuls
xchg
popa
stos
shl
cld
push
stc
mov
cmp
clc
data16
stc
inc
cmp
add
sub
inc
and
test
fldl2e
notb
jp
or
xor
adc
or
or
jg
loopne
sub
insb
add
aas
xchg
cwtl
lret
mov
add
or
sub
sbb
pop
dec
mov
hlt
jmp
mov
mov
mov
sbb
mov
mov
mov
dec
lcall
sub
sbb
mov
push
daa
pop
dec
andl
xlat
add
movsl
ljmp
rcrl
mov
in
jns
jne
inc
cltd
mov
gs
sub
ror
pop
lods
cmpsb
ljmp
mov
fs
pop
loope
sar
dec
lock
push
add
out
xor
cmp
enter
cmc
add
mov
jl
xchg
add
mov
mov
cmp
cmp
xor
incl
adc
pop
nop
les
mov
loopne
aad
ljmp
cmp
jae
call
cmp
mov
lahf
daa
pop
sbb
icebp
inc
push
adc
xchg
xor
repnz
and
scas
inc
inc
mov
lea
and
cwtl
adc
lcall
adc
aaa
test
scas
mov
dec
jle
dec
mov
fnstenv
cmp
dec
inc
incl
std
push
sub
xchg
jbe
mov
xlat
jne
xor
cmp
sub
decl
xor
in
jmp
or
int
jne
xchg
cmc
sub
pop
sub
sub
mov
shlb
xchg
sub
push
push
dec
ret
aam
sbb
xor
dec
int
push
pop
push
gs
jmp
outsb
ret
mov
and
inc
arpl
and
jmp
out
push
repnz
data16
faddl
xchg
les
std
decl
cld
adc
mov
cmp
ja
nop
or
and
mov
or
xorb
cmpsl
jne
cmpsl
mov
pop
gs
incl
dec
mov
mov
mov
jnp
inc
mov
jmp
push
push
enter
call
scas
scas
outsb
fcoms
add
mov
stos
in
popa
icebp
or
jecxz
inc
mov
data16
das
add
jle
mov
mov
add
pop
inc
jle
pop
fwait
popa
jmp
into
sub
pop
xor
mov
jmp
out
pop
xor
cmp
in
in
cmp
pop
cmp
popf
mov
mov
xchg
fstps
mov
jecxz
xchg
outsb
dec
sti
iret
cmpsl
mov
mov
adc
mov
into
jno
lock
in
jl
lock
jmp
je
push
mov
push
andb
sbb
movsl
xor
mov
add
inc
cli
icebp
ret
add
mov
popa
cld
lds
mov
fisttpll
in
lock
decl
testb
pop
pop
fmuls
ss
les
ljmp
ss
fisttps
inc
fistps
aaa
pop
jb
pop
dec
push
or
in
xchg
pop
push
fildll
mov
or
daa
cmc
jge
dec
jecxz
jg
loope
and
in
repnz
and
ljmp
loop
ror
lcall
or
jae
jb
ds
negb
mov
inc
add
lret
out
call
sarb
push
fimuls
and
or
je
insb
push
pop
sbb
add
pop
aaa
lea
inc
cmpsl
mov
ljmp
inc
push
dec
stos
lret
popl
push
popl
dec
arpl
call
lcall
xchg
xchg
mov
xchg
mov
mov
call
insb
repnz
and
and
or
or
out
out
push
loopne
xchg
pushl
dec
mul
jp
sbb
repnz
bnd
push
mov
das
push
loopne
push
mov
imul
fdivl
loopne
jle
push
shlb
in
jae
int
and
clc
mov
flds
bound
cmp
add
cmp
mov
aas
and
or
jecxz
lds
jle
pop
lea
mov
js
add
lods
jecxz
add
cmp
test
jecxz
push
stc
sub
stc
xchg
sbb
jle
mov
ja
imul
dec
clc
mov
xchg
and
jmp
adc
pushl
jge
and
loop
addb
xchg
and
mov
sbb
xchg
add
adc
push
sbb
mov
inc
js
adc
mov
inc
dec
inc
jl
xchg
sub
test
push
xchg
xor
inc
call
dec
dec
xchg
xor
fdivrs
movsl
test
leave
push
or
mov
xor
hlt
sub
pop
dec
xor
cli
je
aam
fcompl
add
sbb
lcall
inc
call
fnstenv
lret
xlat
jmp
sub
aaa
mov
xor
sti
push
lods
insb
push
mov
add
jle
ljmp
or
mov
es
mov
int
add
xor
xor
into
mov
cmp
mov
insl
push
mov
jp
mov
mov
call
loop
mov
decl
mov
aaa
frstor
lret
push
jle
cli
hlt
imul
push
out
roll
or
mov
cltd
and
sbb
jbe
push
imul
lcall
pushf
adc
call
pop
pop
jne
and
and
add
orl
push
push
xor
or
and
adc
mov
jg
sub
add
xor
add
pushl
insb
sub
xor
call
mov
arpl
mov
xchg
cmp
pop
dec
cld
shl
jg
out
movsb
cmp
and
xchg
pop
loop
jle,pt
mov
jmp
popa
xchg
sbb
aaa
cmp
mov
jecxz
sub
mov
imul
ljmp
nop
xchg
bound
je
pop
aaa
lds
std
addl
push
add
add
ljmp
xchg
inc
sbb
call
adc
sub
jmp
cmp
jns
adc
leave
or
pushf
and
and
jbe
jl
push
es
aam
push
dec
add
push
dec
sub
push
or
call
lock
push
jmp
jns
push
push
shrb
scas
notb
or
dec
pop
pop
add
sbb
cmp
bound
es
cwtl
mov
xor
lea
into
cmp
pop
push
cmp
fnstenv
jne
ss
lcall
lods
xchg
imulb
ret
insb
pop
fsubl
mov
pop
rorb
fisttps
add
pop
outsb
ret
cld
pushl
push
mov
fs
xor
sbb
ret
aam
xchg
adc
mov
aaa
ret
sbb
loopne
call
incl
inc
loopne
pop
sbb
shll
ret
jne
xchg
addb
inc
sub
cld
fistpll
adc
or
push
inc
inc
in
or
push
jl
mov
dec
inc
sub
add
jge
in
jg
sbb
inc
popl
mov
aas
mov
gs
pop
xchg
notb
aad
mov
out
sub
cmp
fsubl
pop
jge
in
cmpb
pushl
pop
xchg
mov
insl
dec
xchg
ljmp
leave
mov
jbe
arpl
sahf
add
or
cmpsb
pop
xor
pusha
ljmp
push
inc
mov
mov
lcall
xchg
ficoml
and
dec
jno
test
popa
lret
lahf
mov
sub
xchg
imul
incl
dec
in
ljmp
push
inc
pop
in
push
popa
sub
and
inc
in
mov
lock
pop
jge
lret
xchg
mov
dec
xor
push
mov
mov
out
movsb
mov
cli
pop
icebp
add
push
pop
sbb
in
test
or
pushl
push
inc
arpl
jo
pop
dec
test
mov
cmp
cmp
pop
add
and
push
test
push
pop
nop
and
out
nop
cmpl
adc
pushl
fs
push
xchg
mov
inc
aaa
mov
out
sti
stc
pusha
loope
insb
inc
movsb
mov
add
mov
adc
push
mov
test
xor
sub
and
xchg
xlat
movsb
and
xor
imul
jl
mov
leave
lea
dec
rclb
or
lea
push
xchg
jle
and
xor
ja
decl
leave
xchg
xchg
repnz
sub
xor
stos
push
and
cmp
test
jmp
xchg
cmp
leave
les
ja
adc
incb
icebp
mov
sbbl
xchg
inc
adc
mov
jmp
out
and
add
mov
xor
adc
adc
and
lcall
fwait
xchg
pop
xchg
dec
gs
jns
inc
xchg
xor
hlt
stos
ljmp
push
scas
xchg
inc
lods
lods
in
jmp
adc
sub
xchg
cmp
cvtps2pd
xchg
push
pop
inc
and
decl
popa
sub
loop
cmpsb
enter
dec
fdivrs
xchg
adc
inc
or
ret
incl
push
pop
mov
femms
inc
fildll
idivb
pop
adc
mov
mov
sbb
incl
nop
dec
adc
push
addr16
shrb
dec
xchg
pop
test
faddl
jmp
daa
add
decl
rcrl
and
addr16
jno
test
repnz
adc
ljmp
sbb
mov
xchg
mov
or
filds
push
lcall
loopne
push
decl
xor
pop
xchg
fsubr
or
in
imul
mov
pop
cmp
pushf
jp
cmp
fs
mov
mov
pop
xchg
push
sti
or
popf
sub
sbb
mov
xchg
or
pusha
lock
xor
enter
cmp
aam
mov
jg
pop
in
ljmp
ljmp
dec
dec
xor
and
ljmp
test
sahf
dec
cmp
mov
loop
in
test
xor
out
mov
mov
pushl
mov
pop
clc
mov
loopne
lcall
arpl
aam
xor
mov
xor
pop
jb
imul
pop
lock
lods
sbb
xchg
jo
lcall
ss
push
inc
sar
outsl
out
decl
pushf
adcl
push
and
push
cmp
imul
or
add
inc
arpl
js
cmp
sbb
cmp
push
loopne
orl
cmp
in
cmp
les
cmpsl
mov
jo
push
addl
pusha
shrb
mov
mov
mov
push
pop
inc
add
pusha
das
clc
adc
lret
mov
mov
jecxz
push
pop
xor
clc
adc
inc
sarb
sbb
icebp
popl
jmp
stos
fs
mov
or
lods
and
mov
aam
mov
add
in
out
jb
lea
cmp
sbb
jg
decl
inc
and
imul
in
inc
test
decl
pop
ret
les
and
pusha
mov
xchg
jb
pop
xor
and
jle
and
mov
orb
sbb
in
jmp
xorb
cmp
andb
in
dec
adc
pushl
test
sub
stos
pop
call
sahf
push
xchg
aas
mov
cli
das
mov
shrb
roll
add
clc
insb
lcall
mov
jl
fdivrs
idivl
imul
dec
jo
add
xor
mov
mov
dec
pop
fiadds
mov
sbb
ljmp
cmp
cmp
xor
inc
je
jnp
add
stc
and
mov
jmp
add
and
test
push
inc
push
xchg
hlt
mov
insl
xor
subl
call
adc
scas
xor
imul
lods
lea
in
pop
cmc
cmp
xchg
mov
cmp
mov
nop
or
mov
nop
push
cmp
insl
jmp
push
xlat
add
aam
stc
or
inc
aad
xor
mov
xchg
in
fs
add
jne
mov
popf
sahf
lret
dec
adc
cmp
jg
fsubr
sbb
and
mov
sbb
out
jmp
movsl
arpl
call
in
es
outsb
icebp
mov
add
jge
cmp
xchg
lret
fistl
ljmp
outsb
scas
mov
imul
sub
cmp
mov
pushl
jmp
sbb
jecxz
jnp
inc
xor
lcall
inc
in
stos
adc
adc
fcmovnbe
jp
mov
pop
add
jmp
inc
shrl
inc
cmp
jg
or
jg
inc
add
lcall
bound
mov
mov
aas
sub
inc
mov
cltd
xchg
lock
jg
dec
js
push
xchg
insb
push
push
fs
fs
cmp
pop
sub
pushl
xorl
ss
mov
inc
add
inc
push
push
and
je
gs
je
repnz
cs
xor
mov
cmc
ljmp
ret
daa
popf
push
pop
ljmp
ljmp
dec
test
and
mov
pop
sbb
xchg
loop
scas
push
dec
scas
test
out
clc
push
jmp
daa
daa
shlb
notb
call
js
cmp
inc
imul
xor
mov
lcall
and
imul
fbstp
gs
cmp
call
outsl
xor
repnz
add
xchg
in
pop
lods
pop
jle
pop
mov
pop
cmc
decl
xorl
xchg
data16
mull
sbb
push
pop
divl
decl
data16
xor
addb
jae
ret
mov
std
incl
cs
push
push
and
fdivs
paddb
add
aaa
push
sbb
sub
inc
jg
inc
xor
xor
mov
mov
and
mov
xor
jo
dec
xchg
sbb
loopne
push
repz
arpl
enter
dec
sar
rclb
arpl
pop
xor
sub
push
je
mov
lock
pushl
push
pop
push
inc
xchg
inc
dec
push
es
pop
and
daa
and
out
dec
pushf
test
and
fcomip
incl
jecxz
out
sbb
andl
repnz
adc
pushf
add
cs
pop
popf
mov
addr16
cmp
call
adcb
lock
sub
xchg
dec
adc
decb
sbb
cli
jne
pop
mov
xchg
jecxz
ds
test
inc
add
shlb
insb
xchg
pop
iret
adc
roll
inc
and
test
xchg
test
xchg
cmc
xchg
call
imul
hlt
je
mov
inc
mov
stc
xchg
sub
mov
cld
push
pop
mov
mov
mov
cltd
inc
roll
sbb
ret
dec
add
push
add
cmpsb
rcll
xchg
jl
aad
loope
push
or
sbb
notb
and
pop
mov
jge
add
fildl
popa
xlat
adc
sub
cli
fidivs
icebp
shlb
xor
cltd
add
jg
xchg
jle
inc
add
mov
push
bnd
rorb
ljmp
xor
arpl
loop
fs
xor
xchg
and
push
bound
or
and
cmp
out
decl
ja
push
es
mov
push
inc
inc
xchg
popa
inc
and
orl
ljmp
insl
add
push
mov
and
jae
daa
xor
addr16
add
incl
adc
cmp
cmp
cmp
push
add
aaa
add
pusha
ja
imul
clc
incl
pop
pop
nop
insl
imul
dec
pop
loope
mov
adc
jg
inc
inc
repnz
shlb
incl
testb
sub
and
inc
sub
lret
js
dec
cmp
ljmp
mov
aam
outsl
dec
adcl
xor
movsw
sar
ljmp
push
cwtl
mov
push
add
inc
loope
mov
mov
test
mov
jl
inc
pop
sbb
outsl
clc
dec
jnp
mov
and
or
outsl
jb
fs
push
jbe
xor
jecxz
test
xor
pop
lcall
or
and
push
add
incl
stos
sbb
nop
jg
repnz
call
imul
add
and
mov
pop
lock
addb
les
shll
jo
and
lcall
inc
dec
jecxz
out
cmp
jp
mov
jns
jmp
push
andl
mov
stos
in
fstps
aad
test
scas
inc
jbe
cmpsl
add
mov
jno
incl
cli
cltd
pop
dec
dec
call
xlat
push
mov
fstps
loop
xor
pushl
std
xchg
xchg
mov
dec
xor
mov
ds
pop
inc
xor
xor
pushl
insb
inc
pop
es
xchg
lea
ja
mov
ljmp
sub
or
aam
subb
mov
mov
sbb
sbb
add
sbb
decl
pop
testb
push
mov
mov
mov
ljmp
movsl
xor
push
fwait
xchg
xor
movsb
inc
or
add
nop
pop
or
inc
repnz
outsl
fildl
ljmp
loop
cwtl
inc
push
mov
xor
mov
push
mov
das
push
lock
cmp
and
inc
lcall
push
test
sar
inc
add
mov
incl
sbb
dec
ss
jno
sub
push
or
jmp
and
pushf
outsb
jae
adc
sbb
add
imul
mov
call
scas
mov
jnp
sbb
loope
xor
sbb
sub
daa
fstpt
movsl
cmp
adc
lods
add
jbe
xchg
scas
js
incl
adc
jae
lods
mov
and
shrl
stc
stos
pop
sub
xchg
push
inc
data16
imul
push
cmp
std
push
std
mov
sub
pop
pop
dec
fnstenv
jno
lret
adc
dec
les
xchg
rolb
aam
mov
xor
pushl
mov
sbb
xchg
cmp
das
add
push
aad
scas
int
sbb
ret
and
adc
add
pushf
pop
jne
lcall
insl
mov
loope
bound
push
and
enter
adc
inc
notb
add
pop
mov
push
pop
jp
mov
inc
fs
xor
dec
nop
cli
fwait
push
pushf
sbbb
inc
mov
or
push
loop
push
or
mov
mov
enter
pushl
jg
cmpsl
shll
jb
bound
sti
or
test
cwtl
and
clc
and
mov
sub
jg
pushf
and
bound
and
lea
sub
in
insb
mov
cmp
jb
adc
cmp
adc
andl
mov
sub
xchg
xchg
add
push
rorb
cli
stos
mov
mov
cmp
xchg
fwait
test
mov
pushf
sub
ret
dec
push
jp
mov
es
in
call
cmpsl
jb
pop
push
iret
aad
shlb
push
es
xchg
scas
mov
cli
decl
xchg
mov
xchg
sbb
stos
ret
inc
imul
decl
push
push
xchg
stos
popa
scas
jmp
xchg
stos
push
jnp
jno
fnstsw
adc
imul
or
jmp
jae
arpl
mov
stos
leave
aam
lock
inc
jne
xor
decl
sub
outsl
xor
std
stos
xor
add
jmp
cmp
lock
inc
stc
icebp
or
or
shll
jp
pop
rolb
pop
sub
and
in
sub
cmpsl
jmp
or
and
pop
jb
repnz
pop
or
inc
pop
iret
fcmovne
arpl
pushf
ret
ret
inc
add
fwait
ljmp
sub
stc
fwait
xor
imul
jg
jg
jb
jne
xor
sbb
add
mov
rcrb
add
inc
dec
lahf
lret
test
leave
test
inc
fcom
nop
mov
lcall
xchg
clc
call
fisubl
lods
mov
xor
adc
or
ljmp
loope,pn
enter
cmpb
lea
mov
jnp
lds
fcmovnbe
or
aas
sbb
mov
outsb
push
pop
jg
cmpsb
dec
out
inc
lret
inc
imul
mov
sbb
mov
add
pushl
inc
xchg
jns
aam
in
xor
mov
mov
outsl
pusha
lret
sbb
btc
push
push
cmpsb
cmc
jno
in
push
call
shlb
mov
rolb
lock
sub
and
cld
in
les
lock
mov
push
incl
mov
or
pusha
adcb
ret
mov
pop
xchg
movsb
mov
sub
adc
fstp
popf
adc
push
adc
jg
test
adc
sbb
add
dec
scas
add
call
enter
daa
mov
fbld
sub
sbb
cli
fimuls
hlt
jg
lcall
xchg
ja
or
push
ds
dec
mov
pop
jle
fstpl
dec
inc
lea
mov
jns
xor
push
enter
incl
push
xor
xchg
aad
push
add
insl
shll
sbb
dec
push
ljmp
dec
lret
sbb
add
cmpsl
lcall
inc
incb
stos
cmp
in
ljmp
clc
mov
inc
inc
or
and
call
shlb
inc
hlt
mov
mov
xor
jl
xchg
insl
cltd
mov
rclb
or
mov
mov
cmp
scas
mov
sub
fisttpl
push
pop
jne
jge
mov
into
out
decl
push
enter
lcall
push
pop
add
fbstp
adc
jmp
jns
or
push
add
dec
loopne
cmp
clc
jg
mov
adc
cmp
add
mov
ret
into
dec
dec
cwtl
shlb
popf
push
push
jmp
or
stos
push
sub
imul
inc
test
push
jno
loopne
decl
test
aad
aad
movsb
xchg
outsb
sub
loop
cs
mov
cmpsb
loop
dec
pusha
or
addr16
mov
loope
mov
scas
lea
inc
add
push
sbb
dec
add
jne
stos
pushf
lret
sbb
xchg
shrb
xchg
xchg
imul
ljmp
push
pop
add
add
frstor
fwait
push
xchg
or
iret
cmp
cltd
popf
mov
filds
adc
add
jnp
movsb
cltd
and
jmp
test
and
int
fs
negl
clc
iret
sti
pushf
call
mov
mov
repz
pcmpeqb
jge
xchg
xchg
js
xchg
adc
aad
jmp
test
cmp
rorl
mov
mov
jbe
mov
jg
psubw
leave
xchg
movsb
add
mov
das
pop
lret
push
jmp
mov
mov
push
xchg
mov
imulb
adc
push
ljmp
pop
sub
test
mov
xlat
push
cmp
arpl
ret
jne
sbb
in
xlat
repnz
jle
dec
xchg
xchg
mov
pop
lock
xchg
data16
sahf
rcl
loope
lcall
and
rorb
or
aas
mov
out
mov
and
add
xor
add
sbb
incl
loop
sbb
xchg
adc
jbe
rorb
int3
mov
fstps
and
int3
pusha
fdivp
add
int
aas
push
jecxz
add
rolb
and
fisubrs
push
vshufps
mov
xor
stos
xchg
lods
aaa
and
ret
mov
push
inc
dec
repz
inc
xchg
int
icebp
shrb
or
mov
adc
pop
xor
rol
loop
orb
pop
les
inc
bound
sbb
mov
enter
jmp
fs
and
movsb
mov
sar
enter
jne
xchg
shll
cmp
hlt
xchg
in
shr
mov
pop
shlb
lahf
push
pop
mov
push
xchg
inc
mov
mov
xchg
push
leave
pop
mov
lds
decl
fldenvs
mov
insl
jmp
in
xchg
jns
mov
pop
xchg
jle
outsb
jg
call
mov
cmp
and
and
bound
push
xor
mov
cmp
jmp
mov
loop
or
mov
fucomi
rorl
push
mov
push
stos
mov
pushl
cmp
mov
fcmovnu
sbb
add
jb
dec
popf
pop
outsl
shlb
aad
mov
push
fnstsw
jbe
fdivrs
mov
mov
hlt
fs
in
les
inc
jnp
pop
pop
out
jo
lcall
adc
es
std
insl
jp
and
inc
xchg
jmp
cld
cs
xor
xor
mov
add
loopne
mov
inc
xchg
lock
pop
pop
push
ja
mov
popa
mov
inc
mov
inc
adc
cmp
or
adc
cli
call
cs
das
ss
push
jb
mov
mov
andb
mov
and
and
pop
and
sbb
mov
decl
add
enter
and
xor
decl
dec
xor
mov
pop
mov
int3
sub
mov
xor
xor
mov
out
out
insb
mov
xor
push
arpl
lods
sub
mov
dec
cmpsl
xchg
and
dec
sbb
mov
stos
mov
sahf
pop
add
lahf
xchg
add
ljmp
mov
dec
decl
lods
mov
mov
jae
mov
pop
leave
lcall
mov
fs
cmp
lcall
repnz
xchg
scas
push
mov
mov
xor
nop
inc
cmp
xor
into
aam
in
xlat
aam
jg
aaa
jle
mull
aad
sbb
push
loop
xchg
mov
pusha
orl
push
cmp
xchg
pop
arpl
test
cmp
loope
mov
dec
or
mov
ficoml
mov
jb
cli
and
aas
sub
mov
adc
fildll
adc
int3
or
cmc
mov
icebp
mov
cmp
mov
mov
out
mov
dec
je
lds
pop
mov
and
das
ljmp
sbb
fldenv
push
addr16
ljmp
mov
and
sbb
sbb
add
ss
decl
int3
jb
sub
xor
pushf
push
mov
jo
out
decb
int3
nop
fistpl
test
hlt
and
outsb
xchg
data16
mov
call
or
jb
xchg
cld
fimull
push
movsl
and
mov
xchg
push
aad
or
jmp
push
and
mov
mov
gs
cmp
gs
mov
call
mov
cmpsl
xchg
mov
sub
in
sbb
ja
jo
std
ficomps
decl
std
or
cmc
cmp
imul
aam
lds
fsubp
pop
scas
fcomip
inc
and
and
ljmp
loopne
and
rcr
lock
dec
push
pop
lods
cmp
mov
les
push
and
pop
hlt
inc
xor
jl
push
xchg
add
jo
and
cmp
stos
mov
ss
fnstenv
push
add
and
inc
add
adc
mov
mov
mov
lea
sar
hlt
inc
imul
xchg
nop
rclb
decl
sub
adc
mov
lcall
insl
outsl
rcr
inc
shrb
movsl
mov
or
scas
aam
sub
jno
cmp
out
clc
mov
lret
and
add
call
adc
inc
test
dec
dec
jle
mov
xchg
xor
push
cld
inc
aad
pop
lds
add
push
mov
mov
add
shrb
loopne
inc
sub
stos
sahf
jg
daa
sub
sbb
int3
jae
hlt
pushf
add
jnp
popa
int3
mov
bound
lea
dec
in
xchg
sub
jl
call
stc
rolb
pop
stos
jmp
xchg
faddp
jmp
out
ret
cmpsb
cld
in
mov
mov
jmp
add
inc
adc
xchg
pop
inc
adc
clc
xor
ljmp
push
js
mov
dec
ja
mov
ss
fxch
ds
mov
cmp
dec
out
add
nop
jg
lock
je
into
in
arpl
incl
aam
pop
into
addl
cwtl
push
adc
sub
cmp
aad
xor
pop
or
xchg
and
xchg
fsubs
test
test
pushf
fwait
adc
clc
cmpsb
test
lea
fimull
cmp
scas
mov
xor
xchg
mov
aaa
adc
jno
test
xchg
mov
pop
into
test
scas
and
ret
out
push
adc
daa
and
out
and
sahf
mov
dec
test
ret
push
bnd
sub
dec
adc
loop
in
out
test
cmp
push
shlb
xchg
pop
add
ret
jle
int3
mov
in
sahf
mov
adc
cs
sub
xchg
jbe
push
addb
lods
xchg
js
pop
and
dec
lret
mov
fdivl
out
mov
movsb
pop
std
and
dec
fists
inc
sbbb
push
pusha
out
or
adc
sbb
pop
jae
sarb
cmp
orl
pushf
pop
or
mov
scas
mov
int
fadds
mov
and
add
inc
add
and
insl
cld
inc
decl
or
adc
stos
adc
in
push
push
mov
dec
mov
int3
subb
fbld
call
adc
mov
xor
push
and
xchg
lods
dec
movsb
decl
movsb
inc
pusha
inc
pop
adc
imul
dec
lea
or
andl
ret
hlt
or
ret
decl
lea
mov
or
sub
test
add
incl
xchg
stos
mov
fs
stos
mov
test
cmp
scas
pop
nop
sbb
nop
stos
jp
mov
sub
lcall
inc
cli
ret
out
mov
shrl
fldenv
das
mov
sarl
pop
mov
cmp
mov
arpl
jb
jmp
stc
insl
lea
add
push
adc
mov
xor
gs
decl
lcall
insl
dec
and
ljmp
in
cmp
decl
sub
outsb
jae
sbbl
xchg
and
and
aam
or
add
mov
incl
imul
sarl
push
mov
test
bound
and
das
mov
pop
mov
scas
aam
or
xchg
add
push
ret
and
sub
dec
push
mov
xchg
les
inc
adcl
in
aaa
stos
shrl
add
mov
cmp
mov
rcll
cmp
pushf
leave
dec
sub
mov
cmp
mov
gs
mov
adc
sub
pushl
sub
fdivrl
fs
push
sub
jge
clc
ljmp
dec
out
mov
rorb
cwtl
out
in
xor
sti
addr16
and
push
sbb
js
lret
mov
jecxz
lcall
xchg
sbb
jne
sarl
ret
call
push
ror
sbb
push
sar
lods
pusha
fisubrs
lahf
pop
jg
sbb
or
pop
daa
adc
xchg
xchg
mov
inc
stc
mov
inc
jg
push
test
xor
pushl
nop
push
or
mov
inc
mov
sbb
push
jmp
clc
xchg
mov
add
xor
mov
hlt
xchg
inc
out
add
xor
call
pusha
add
jp
mov
add
mov
push
adc
cli
sub
jne
pop
into
or
adc
sub
out
and
ljmp
dec
lds
cmpsl
dec
decl
or
es
xchg
gs
cmp
gs
in
push
jb
incl
incl
xchg
movq
lahf
xor
mov
mov
cltd
repz
sub
mov
mov
mov
inc
jno
inc
inc
or
cli
xor
scas
clc
pop
test
jo,pn
mov
mov
push
addb
mov
cmpsl
std
leave
mov
xor
je
sub
incl
out
cmpsl
push
mov
fldenv
xchg
movd
clc
test
cmp
lret
imul
mov
push
and
mov
xchg
mov
fsubrs
mov
mov
mov
int
cmpb
xchg
jae
adc
mov
repz
stos
fwait
sbb
popf
and
mov
aaa
push
add
mov
loop
aaa
test
les
or
and
fiaddl
addb
subb
decl
es
mov
jp
into
inc
movsb
into
leave
ds
incl
dec
stos
cmp
repnz
std
push
inc
or
mov
insb
mov
adc
mov
pop
xor
mov
lods
xor
xor
aaa
or
sub
fs
mov
push
or
pop
push
sub
in
mov
addb
cli
clc
ljmp
mov
sub
mov
mov
pop
jno
xchg
mov
mov
outsl
push
ljmp
jb
cli
adc
sti
mov
mov
pop
sar
pop
pop
and
fiaddl
rol
hlt
xor
call
mov
cld
incl
xchg
adc
add
icebp
test
rol
mov
pop
lcall
nop
push
adcb
sbb
pop
sub
mov
lock
nop
xchg
sbb
test
push
inc
call
and
dec
adc
fildl
mov
js
stos
mov
leave
mov
pusha
andl
stos
mov
fisubl
orl
mov
jmp
and
and
loop
in
nop
mov
loope
dec
mov
sub
jo
mov
cmp
pop
add
adc
ficompl
fdivrs
mov
pop
jmp
sbb
or
mov
sarb
sahf
cmp
rclb
push
mov
leave
xor
xor
lahf
inc
sti
or
out
jg
mov
fdivrs
xchg
lods
cmpb
cltd
or
mov
enter
and
and
adc
je
xor
fcoms
pop
add
sub
decl
andb
xor
or
out
nop
or
inc
jb
or
call
pop
cmp
add
shl
sbb
jmp
jecxz
or
repnz
sub
add
cld
dec
jg
sub
jo,pt
rol
xor
inc
leave
push
cmp
ja
push
cmc
js
dec
push
cmp
sbb
push
sub
std
decl
push
pusha
cmp
pusha
aaa
pop
inc
ds
jg
test
stos
mov
les
xchg
insb
adc
mov
mov
mov
roll
push
or
mov
clc
fwait
popf
loopne
push
inc
mov
adc
mov
or
cld
ljmp
test
push
sub
mov
pop
ljmp
pushl
cs
push
popa
in
add
hlt
dec
cmp
out
inc
or
and
jmp
mov
push
cmpsl
add
and
jmp
pushf
lock
inc
or
mov
xor
fiadds
movl
ret
adc
mov
aam
pop
es
fmul
jg
adc
mov
cwtl
mov
mov
clc
mov
les
push
psubd
int3
mov
fsubrs
mov
mov
add
add
dec
cld
call
push
hlt
jmp
dec
test
lcall
clc
jg
cld
and
cmp
cmpl
ds
or
xchg
clc
fwait
inc
cmp
pop
ret
xchg
inc
sbb
xor
mov
sar
xor
aas
lret
inc
xchg
mov
adc
clc
pushf
and
andl
test
mov
jmp
cmp
add
sti
xchg
sar
sub
mov
mov
or
mov
pushl
and
pushf
cmp
fnstcw
cs
push
push
add
mov
sub
or
mov
jg
int3
and
ror
mov
lcall
cmpsb
xchg
jmp
rcrb
int3
cwtl
mov
rcr
sbb
xchg
or
insb
int
xchg
dec
fdivl
js
push
fsubl
mov
xor
repz
add
sbbb
xchg
mov
shr
push
cmp
icebp
loopne
sub
mov
mov
xor
lcall
xchg
mov
dec
push
add
xchg
xor
or
mov
xor
leave
dec
sub
pop
notl
mov
mov
fwait
and
and
and
call
cmp
fisubs
dec
pop
push
and
inc
out
lahf
or
and
pushl
int3
mov
xchg
mov
lods
pushf
or
adc
lea
xchg
mov
pop
cmc
pop
mov
ds
sbb
jecxz
jmp
jge
fs
inc
mov
mov
xchg
ss
jp
sub
pop
call
in
xor
inc
pop
and
cmp
movsl
mov
fldl
or
mov
jmp
mov
fmull
pop
inc
mov
or
mov
jg
decl
mov
push
xchg
fnstenv
roll
ljmp
add
sub
adc
jp
test
dec
lcall
dec
in
lds
or
outsl
pop
loopne
jecxz
sub
pushf
das
sahf
xor
inc
sbb
sti
int
repnz
fildl
mov
repnz
or
dec
inc
test
xchg
ss
push
dec
or
xchg
sbb
dec
adc
xor
dec
pop
cmp
sbb
aad
das
test
push
insb
movsl
xchg
xor
mov
cmp
mov
mov
mov
dec
xor
push
dec
cld
imul
in
push
pushf
call
adc
mov
sub
movsl
jae
int
push
push
push
xchg
in
jns
mov
mov
jns
pushf
sbb
aam
push
fmull
ret
aaa
mov
and
hlt
pop
or
dec
bound
mov
out
mov
push
es
mov
fs
mov
lcall
push
jmp
jecxz
fwait
cmp
or
xor
lcall
push
inc
ljmp
adc
mov
push
add
adc
call
dec
jg
incl
cld
test
sub
push
dec
in
sbb
sbbb
mov
pusha
rcr
call
mov
rorb
lock
xor
mov
xchg
into
mov
adc
data16
sbb
test
lcall
mov
ljmp
add
dec
sbb
adc
pop
cld
outsl
pushl
add
mov
fisttpl
stos
iret
cld
xor
leave
mov
inc
rcll
call
lcall
imul
dec
pop
enter
xchg
mov
cmpsl
pop
rorl
mov
clc
ljmp
add
jno
mov
mov
pop
adc
push
jge
jmp
fs
fisttpll
arpl
sbb
or
rcr
gs
cmp
addr16
pop
sub
scas
clc
ljmp
jae
push
push
into
in
ds
outsl
hlt
cmpsb
mov
lods
les
jmp
lock
addr16
dec
int3
pushf
mov
outsb
rcrl
test
dec
fidivs
rcr
pushl
push
dec
dec
push
mov
inc
ja
ret
or
add
xor
xchg
or
pushl
push
in
faddp
mov
pushf
or
or
sti
dec
xor
mov
rolb
cmp
adc
cmpsl
adc
lcall
mov
dec
mov
test
mov
ds
sub
jns
mov
dec
jne
bound
sbb
cmp
mov
mov
xchg
mov
sub
adc
sub
pop
xchg
repz
cmp
loope
into
cmp
loopne
fdivrp
pop
jns
mov
push
sub
ss
push
mov
pop
and
int
lcall
in
jbe
movsl
cmp
mov
push
mov
or
sub
or
ljmp
decl
push
sti
push
mov
cmpsl
jmp
pop
lock
mov
mov
or
repz
and
in
fistl
add
push
dec
rolb
jb
inc
pop
adc
data16
mov
xor
push
jle
ljmp
jle
add
data16
mov
aaa
adc
in
lcall
inc
ljmp
xchg
mov
outsb
das
push
and
and
sbb
push
outsl
into
pop
mov
inc
int3
fcomps
mov
push
stos
mov
and
testb
add
adc
push
adc
mov
ljmp
sub
push
mov
cltd
xlat
pop
mov
add
xor
outsb
roll
fst
add
jmp
push
shrb
lahf
movsl
ja
movsl
orl
mov
jmp
rcl
movsb
adc
decl
lods
pop
stc
fcom
mov
decl
int3
mov
repz
dec
jmp
inc
adcb
and
ss
ljmp
mov
cmp
fildll
addl
lock
ljmp
call
add
mov
push
ljmp
cmpsb
lret
adc
cs
dec
adc
jo
aas
and
lcall
mov
mov
es
jne
xorl
add
imul
xchg
mov
lcall
inc
adc
test
mov
mov
insb
mov
jns
repnz
xchg
adc
fstpt
mov
pusha
or
popf
jae
aaa
push
out
mov
add
push
insb
jmp
lcall
inc
out
fdivrs
fs
pop
xchg
outsb
das
xchg
mov
mov
or
xor
mov
mov
out
cmp
fsubrs
mov
out
pop
sbb
dec
out
ljmp
add
xchg
out
out
mov
scas
sarb
sub
pop
mov
sbb
popa
sub
push
xchg
inc
push
inc
or
ja
ljmp
sti
mov
icebp
xor
add
push
jg
adc
sbb
lods
out
pop
js
and
mov
xor
bound
push
loope
xlat
xchg
cmp
out
and
push
dec
or
mov
notl
lcall
push
notl
mov
in
mov
xlat
scas
icebp
lcall
shl
or
mov
sub
jge
insl
orb
jecxz
sbb
jl
jne
popa
sub
mov
cld
jge
add
mov
xor
or
ljmp
mov
inc
cmpsb
pushf
jae
fnstsw
mov
push
clc
ljmp
repz
je
xchg
in
fistps
mov
push
mov
popw
sbb
sub
jecxz
mov
sbb
ljmp
jp
mov
mov
sbb
xor
jl
or
stos
insl
ljmp
dec
lock
popl
aam
pushl
sbb
cli
pushf
leave
popf
stos
lods
or
clc
roll
incl
movsb
and
or
es
mov
inc
sbb
dec
xchg
cli
enter
lcall
aas
nop
sbb
inc
lcall
sub
js
repnz
xchg
add
mov
je
and
push
mov
add
or
add
ljmp
mov
sub
dec
pop
je
xor
fnstenv
stos
xor
ja
shrb
or
insl
fistl
adc
ljmp
adc
test
add
sti
push
jo
ret
sbb
out
into
scas
loop
or
ds
int3
fsubrs
lret
dec
ss
out
in
jne
mov
stos
jbe
xchg
mov
mov
lods
sbb
mov
insl
adc
in
fidivl
fwait
mov
aaa
or
clc
out
fnstsw
sbb
xor
and
addr16
sbb
sbb
pop
cmp
outsb
and
dec
insl
fdivrs
ret
data16
pop
bound
xchg
xor
aaa
xor
das
add
xchg
movsb
dec
xor
xchg
or
mov
decl
or
mov
xchg
jl
inc
jo
dec
and
or
push
push
jp
les
inc
lret
or
fnstsw
adcl
jg
dec
sbb
or
push
popa
or
push
jno
push
push
andb
inc
and
push
adc
xor
enter
sbb
adc
mov
push
sahf
xchg
sub
jnp
rcll
adc
icebp
adc
sbb
sub
inc
xchg
dec
inc
insl
call
dec
jno
rorl
push
lds
xor
push
cmp
xchg
push
pusha
lock
pushl
push
mov
add
orl
decl
shll
gs
mov
popa
fucompp
pop
dec
insb
jbe
insb
xchg
xchg
fisubrl
ljmp
data16
leave
pop
stos
mov
xor
fisubrl
imul
sarl
pushl
lcall
sbb
mov
enter
mov
push
cmp
jae
inc
push
or
jne
cmp
jb
inc
les
int3
sbb
decl
in
int
add
repnz
pop
lahf
mov
inc
imul
ret
orb
mov
incl
adc
test
push
pop
call
jo
cmp
cmp
test
and
push
inc
sbb
mov
bound
mov
xor
arpl
push
enter
jg
inc
inc
adc
inc
dec
and
inc
pop
cmp
xchg
xchg
push
jbe
push
jg
sahf
inc
in
xor
dec
ljmp
loop
rorl
std
je
jg
and
lcall
inc
dec
xor
jmp
push
push
cmp
stos
stos
inc
jp
out
pop
mov
dec
hlt
fidivrs
cmp
xor
cli
sub
dec
mov
cmpsb
popa
pop
pop
push
icebp
lods
push
fldenv
rcrl
aaa
lods
cmpsl
dec
sbb
xchg
cs
cmp
outsl
mov
mov
push
mov
xchg
mov
ljmp
rolb
sti
mov
mov
inc
and
add
loop
jg
add
test
jne
mov
or
lock
dec
adc
fistps
xor
movl
xor
incl
mov
sub
icebp
test
ffreep
jb
movsl
or
cs
sbb
int3
mov
stos
ljmp
call
sub
rorb
repnz
dec
jnp
nop
push
jg
je
xchg
jl
jne
adc
mov
daa
xlat
cmp
or
cmc
imul
inc
xchg
aas
xchg
in
dec
push
jns
push
enter
or
sub
test
icebp
sub
mov
inc
std
cwtl
dec
or
and
lcall
adc
mov
repz
into
xor
xor
idivl
into
std
incl
jecxz
shr
xchg
pop
xchg
xchg
dec
or
xchg
dec
orl
push
cmpsb
rorb
aam
int
cmpsl
add
nop
xlat
mov
sbb
outsl
cli
pop
sahf
adc
xor
jns,pn
jns
dec
pop
inc
in
or
jmp
jl
in
inc
and
xchg
cld
sub
jmp
divl
mov
jecxz
sub
clc
pop
push
push
adcl
pop
pop
mov
xor
mov
idiv
call
jb
call
test
sub
sbb
adc
jne
cmc
adcb
push
adc
cwtl
inc
adc
in
adc
loopne
jg
bound
scas
mov
fs
ljmp
xchg
ljmp
sbb
and
add
mov
test
test
std
ljmp
cmp
push
mov
in
pop
xchg
mov
pushl
stos
sbb
lea
repz
into
sub
mov
lret
cmp
sub
lea
bound
adc
jae
lods
pop
dec
jecxz
sbb
clc
insl
xor
test
dec
sbb
push
lods
cmp
push
adc
call
mov
xchg
xor
adc
cs
mov
xchg
mov
arpl
or
jg
or
mov
in
sub
cmpsl
and
sar
mov
jo
pop
xchg
addr16
pop
cmp
ret
ret
adc
loope
in
stos
in
inc
push
lock
jg
jne
inc
and
lahf
dec
nop
xor
nop
insb
mov
add
cmp
out
adc
out
rorl
cmp
cmp
test
pusha
pop
std
add
jmp
mov
loope
adcb
movsb
dec
push
jg
sub
mov
call
mov
test
jmp
in
xchg
pop
and
fldt
cmp
cmpsb
lahf
inc
pushf
loope
call
lcall
mov
mov
ljmp
inc
ljmp
jmp
out
pop
cli
cmpsb
in
aad
pop
and
or
push
sub
enter
adc
add
jo
xlat
add
nop
jg
fcomip
imul
or
sti
push
mov
cmpsb
or
in
rcll
ficoml
in
push
push
jae
mov
mov
mov
jle
fcomp
add
sbb
fcomps
mov
stos
jns
insb
ds
fwait
jo
out
mov
cmp
lret
xor
ja
dec
add
lcall
jne
pusha
imul
ffree
test
add
call
data16
lcall
mov
cmpsb
dec
pop
inc
aam
mov
pushl
cwtl
leave
jns
xor
out
data16
cltd
das
pushw
inc
movsl
sbb
mov
pop
cld
out
cmp
mov
adc
fwait
mov
das
cmpsl
inc
mov
shll
dec
movsl
and
sub
insl
test
shl
in
mov
push
push
js
leave
mov
pop
das
ret
push
push
ljmp
scas
push
call
daa
cmp
scas
dec
push
jg
inc
jge
roll
push
xchg
popa
inc
ljmp
call
add
lret
arpl
fwait
inc
pop
mov
and
pop
mov
addr16
ljmp
mov
shl
mov
xchg
or
fwait
inc
sub
and
arpl
shll
adc
push
stc
and
sub
insl
cli
push
inc
frstor
ljmp
mov
cmp
inc
xchg
test
inc
sbb
adc
lcall
xor
shrw
cli
ror
mov
jle
mov
notl
mov
or
add
cmpsl
push
jno
mov
jae
inc
lcall
xchg
xor
dec
call
dec
adc
arpl
arpl
jmp
xchg
icebp
pushl
dec
mov
sbb
in
and
stos
sbb
ljmp
shlb
xchg
mov
or
mov
lcall
adc
mov
insb
sbb
mov
frstor
dec
es
sbb
mov
addr16
pop
call
or
jmp
inc
das
inc
out
or
or
jbe
mov
mov
out
popf
jns
push
xchg
fs
jbe
data16
fdivrp
incl
fimull
dec
aam
subl
scas
adc
std
les
sti
aam
push
je
jecxz
cmp
outsl
imul
or
sub
incl
mov
cmp
mov
and
test
inc
and
shlb
dec
lret
test
jnp
iret
aaa
mov
aad
ret
movb
xchg
cli
stos
sub
out
and
adc
out
lahf
push
call
inc
cmp
pop
jg
or
xchg
mov
xor
xor
cmpsb
incl
clc
pop
orb
dec
mov
jno
push
sbb
or
je
mov
rcr
icebp
sbb
sub
sub
and
and
ljmp
in
inc
cs
pop
adc
movl
mov
mov
pop
sub
xchg
and
adc
inc
mov
ljmp
test
push
xchg
sub
in
popa
mov
stc
fldt
test
inc
adc
jmp
or
fiaddl
inc
push
xchg
icebp
call
pop
push
aam
popf
xor
inc
add
pop
fmull
and
dec
repnz
pushf
jl
or
adc
sub
and
adc
leave
mov
lock
sar
push
sub
pop
popf
xchg
push
cmpsl
mov
xchg
stc
push
sbb
pop
lret
sbb
jle
add
incl
push
fimull
dec
push
jmp
pop
add
fistps
and
xlat
std
xchg
test
into
and
shrb
iret
push
add
in
pushf
mov
loopne
pop
insl
insb
pusha
add
loop
loopne
push
adc
orb
inc
cwtl
xchg
test
loope
adcb
sahf
add
aad
movsb
dec
or
xchg
test
jge
pop
jl
mov
rcll
test
sub
clc
pop
adc
popa
ds
xchg
add
jl
ss
dec
xchg
repnz
dec
jo
xchg
lock
aam
sar
dec
sbb
xlat
sub
pop
push
add
push
fsubs
push
js
cwtl
or
ljmp
xchg
mov
jnp
and
inc
dec
inc
lret
decl
lock
jmp
int
pop
movsl
mov
lret
lds
mov
or
dec
push
sbb
rcrb
pop
xor
scas
in
pop
movsl
fcos
mov
fldl
ret
pop
and
int
xor
cs
lret
fcmovu
push
stos
sbb
push
jg
add
shlb
or
xor
ja
and
rcrl
jo
sbb
call
mov
and
xchg
fcomps
cwtl
iret
loopne
push
push
dec
jl
pop
inc
or
pop
enter
adc
pop
pop
dec
jmp
jmp
pushw
fnstcw
dec
mov
lods
xchg
xchg
mov
shll
cltd
clc
lcall
xchg
mov
xchg
mov
aad
fidivrs
popf
dec
out
ljmp
dec
fxch
dec
sbb
test
dec
insb
int
in
lcall
je
movsb
insl
xor
jno
bound
pushf
test
test
jo
pop
dec
pop
rolb
es
add
ja
pop
cmpsb
test
movsb
add
daa
mov
call
sub
sar
push
sub
push
inc
sbb
sub
and
jmp
and
mov
mov
loop
jbe
and
movsl
push
mov
fistl
pop
jg
and
ljmp
mov
xorb
jmp
mov
je
sbb
addl
out
in
pusha
sbb
add
int3
or
sahf
mov
loope
mov
pop
or
push
xor
mov
data16
aaa
aad
cmp
ljmp
dec
inc
dec
xchg
xchg
inc
aam
mov
mov
xor
cli
sahf
insb
out
push
cmp
fists
out
aam
lahf
or
or
in
insl
or
push
fwait
sub
loop
inc
pop
or
decl
je
or
sub
xor
movsb
and
int3
inc
scas
mov
call
call
xchg
xchg
jl
test
xchg
sub
adc
add
sbb
and
mov
dec
and
push
lcall
fisttpl
jns
popf
ljmp
ret
mov
add
sub
pushl
mov
mov
push
xchg
sbb
dec
push
mov
repnz
or
push
daa
in
push
std
mov
push
insl
arpl
lcall
mov
or
ret
inc
jg
stos
hlt
bound
test
xchg
push
pop
add
jmp
mov
sbb
cld
inc
adc
incl
sbb
xchg
les
dec
int3
sahf
inc
dec
cltd
xchg
je
push
jge
insb
xor
xchg
not
imul
insl
add
mov
mov
and
ljmp
lods
outsb
jb
pop
push
push
mov
inc
mov
cmc
mov
mov
push
movsl
ljmp
rcrb
sbb
sub
push
mov
push
cmp
jmp
mov
idiv
das
clc
sahf
cmpsl
jns
in
ret
cmp
movsl
out
jae
cmpsl
jbe
movsl
jp
shll
insl
lcall
and
sbb
add
jl
jg
int3
add
sub
dec
adc
or
adcb
js
outsb
jl
frstpm(287
lret
pop
outsb
insl
outsl
adc
jg
mov
xchg
or
ja
xlat
and
fildll
or
sbb
in
push
add
sar
dec
rcrb
mov
sub
in
loopne
sarl
mov
mov
cwtl
out
push
adc
inc
mov
bound
add
out
add
cmp
call
add
and
rcll
aas
jmp
adc
pop
fs
sub
jg
cmp
cwtl
bound
imul
cmp
ljmp
and
pop
push
pop
pop
adc
in
inc
jae
mov
lea
aam
mov
movsb
xchg
decl
stos
jnp
push
dec
push
and
or
stc
shr
cmp
mov
push
ljmp
push
and
push
jae
loop
shl
stos
pushf
dec
pop
scas
shl
dec
xorb
jle
and
in
stos
stos
mov
xchg
push
or
ljmp
xchg
lods
shlb
fs
ljmp
or
sub
lods
in
cli
mov
loop
sub
inc
mov
mov
inc
dec
test
add
std
scas
jl
subl
add
jg
jg
inc
rorl
sbb
fisubs
out
inc
push
dec
lea
int
sahf
jmp
mov
in
jb
cmc
les
int
add
adc
or
jl
outsb
sbb
or
pushl
or
imul
sub
mov
mov
imul
or
mov
leave
lret
adc
test
ss
into
sti
sarb
push
out
push
mov
movsb
idivl
es
pop
into
repz
jp
loop
loop
loop
lahf
mov
movsb
hlt
xlat
mov
mov
and
pop
push
sar
daa
sub
incl
ljmp
sub
inc
xor
frstor
loopne
sub
xchg
mov
pop
pop
icebp
inc
incl
pusha
addb
sahf
mov
imul
lock
add
sub
loope
outsl
fistpl
adc
inc
adc
push
add
ss
push
push
rorb
loopne
aaa
movsl
imul
cli
decl
test
insl
int
es
cltd
mov
cltd
in
sub
ljmp
mov
cltd
sub
adc
ret
sub
in
add
or
lea
out
repnz
mov
dec
add
clc
test
lcall
add
inc
in
or
inc
xchg
call
adc
jp
dec
mov
sub
lods
int
pop
dec
bound
fcmovu
jp
int
fsubrp
call
adc
and
push
in
and
scas
cmp
fisubl
and
lcall
push
xchg
lock
xor
or
xchg
adc
enter
enter
push
mov
sbb
jg
pop
xor
or
cs
sbbl
lods
mov
shll
pop
xchg
mov
pop
push
mov
and
push
hlt
mov
iret
add
dec
mov
lcall
cli
push
pop
push
push
fadd
repz
daa
test
mov
out
lea
lea
call
pop
das
lcall
jg
outsl
ja
out
mov
adc
push
dec
dec
mov
in
dec
and
movsl
mov
mov
pushf
push
fnstsw
mov
inc
pop
insb
imul
scas
sbb
mulb
adc
sbb
ljmp
mov
pop
pop
fdivr
xlat
aad
xor
dec
xchg
stos
and
mov
jbe
or
pop
in
aad
mov
mov
jg
hlt
sub
stos
loopne
sub
movsl
sub
lret
pop
jmp
or
js
mov
addb
add
sub
rorb
jmp
cmp
sbbb
mov
mov
pop
jae
test
pop
xchg
dec
xchg
aam
push
out
popa
mov
mov
adc
mov
mov
loop
xor
jg
inc
dec
jl
xchg
gs
mov
fldenv
cwtl
mov
dec
ret
sub
mov
mov
stos
jne
mov
jbe
pushl
cmp
incl
sub
xor
mov
pop
sbb
sub
jo
pushf
mov
dec
mov
pop
sub
decl
fbstp
clc
push
lods
mov
and
ljmp
dec
pushl
pusha
push
jne
dec
repz
add
mov
jne
add
lods
stos
push
ret
xchg
idivb
or
push
in
jge
push
lcall
faddl
or
sahf
test
aaa
jg
add
mov
or
pop
das
sar
iret
mov
cmc
cmovo
fbld
and
adc
stos
pop
ret
call
movsb
sbb
f2xm1
lds
mov
clc
mov
lock
loopne
add
in
outsl
cmp
cltd
cmpsb
lods
call
jmp
inc
jnp
andl
scas
mov
xor
cs
sbb
fdivr
decl
pop
insb
jp
lahf
xchg
es
imul
cwtl
xchg
xor
push
and
inc
call
lods
jl
and
lods
pop
test
jne
adc
scas
insb
cmp
pop
lods
mov
aad
sub
sahf
repnz
jg
add
lahf
insl
clc
enter
dec
scas
aaa
or
out
gs
sbb
push
jg
pushl
in
xor
push
adc
sub
and
sbb
or
mov
pop
clc
pop
inc
mov
mov
cmpsl
cli
or
mov
sarl
inc
push
sub
lret
out
outsl
pop
icebp
mov
jecxz,pt
push
movsb
or
inc
adc
call
add
inc
stc
dec
xchg
cs
shrb
cltd
test
xorb
sub
jle
dec
cmp
mov
pop
xchg
fnstcw
pop
mov
inc
jg
hlt
adc
sti
test
mov
daa
mov
incl
cwtl
scas
fists
lcall
mov
hlt
cs
xor
add
call
je
mov
into
or
ret
pop
xor
cmp
add
ja
xor
sbbb
insb
mov
inc
fmull
mov
pop
sub
mov
push
fwait
movb
rcr
inc
mov
cmp
mov
int3
dec
push
ljmp
sbb
loope
add
mov
or
xor
push
xchg
or
fcomip
in
inc
jmp
sub
lock
sub
mov
mov
sar
outsl
push
xor
pushl
mov
inc
sahf
sbb
xor
fdivrs
outsl
mov
pusha
lret
adc
lock
insb
cld
call
xor
push
sbb
xor
ret
jp
xchg
cmpsb
jne
adc
fimull
jmp
decl
leave
adc
les
inc
scas
lods
mov
aas
jge
or
in
inc
xchg
aaa
andl
test
lcall
cmpsl
rorl
enter
add
data16
xchg
lret
movsb
cmp
jo
mov
sbb
push
mov
add
jp
sbb
sub
jbe
aad
xlat
jmp
mov
jg
ret
sbb
mov
jecxz
push
sti
cwtl
jno
scas
dec
xor
xor
incl
jmp
and
scas
adc
mov
movsb
or
jmp
pop
mov
add
ss
jl
loop
dec
imul
xchg
rorb
arpl
andl
cmp
and
ds
mov
jno
iret
test
mov
jns
inc
xchg
movsl
pusha
ja
add
pop
cmp
andb
jne
int3
xchg
jnp
jg
das
inc
fisubrs
or
jl,pt
dec
les
js
sti
testl
lock
add
add
xchg
adc
jmp
scas
cmp
mov
movsb
mov
enter
call
push
sub
stos
pushf
push
mov
nop
fs
call
lcall
sub
test
test
mov
outsb
sub
cmp
shrb
and
adc
rolb
dec
xchg
dec
mov
setbe
cli
push
or
dec
cld
mov
jnp
shrb
movsl
mov
pop
inc
dec
mov
sub
sub
inc
ror
sub
xor
inc
ljmp
xchg
cs
or
lods
or
scas
sub
jae
mov
mov
push
mov
xor
dec
or
pop
push
arpl
decl
fs
cmc
add
sbb
xchg
jo
sarl
or
and
popa
mov
jmp
mov
out
cmp
or
sbb
or
mov
test
xor
cmp
sti
stos
xadd
jne
shrb
sub
jns
lods
pop
sar
add
mov
cmp
repz
loope
mov
push
and
xor
decl
adc
es
xchg
mov
and
mov
sub
mov
leave
and
or
or
xchg
and
dec
bound
subb
jmp
sub
adc
adcl
insb
xchg
shr
mov
dec
xor
dec
or
mov
dec
adc
xor
ret
mov
ja
sbbb
lcall
imul
sti
imul
push
and
mov
mov
cmp
xor
xor
dec
sbb
aam
dec
fstl
lea
push
and
call
popf
dec
cmpb
ss
push
xchg
hlt
decl
repz
push
fcoml
push
loope
arpl
xlat
add
ret
lret
ds
call
jae
add
ret
lods
mov
add
jl
jne
jmp
ficoml
or
xor
pop
jne
mov
lcall
push
add
loope
test
cld
call
fadds
mov
popa
pop
ljmp
popa
gs
clc
arpl
inc
push
mov
inc
mov
es
mov
add
sub
in
decb
mov
xchg
mov
push
sub
cld
fsts
and
cmp
test
ljmp
mov
or
insb
outsb
pop
or
nop
shrl
aam
pushl
test
jns
sbb
push
sub
adc
into
or
popa
rcll
jg
inc
lds
cmp
add
push
xchg
or
push
clc
outsl
andb
inc
jno
fadds
ljmp
inc
sub
nop
bound
mov
add
or
push
sub
push
push
jp
rep
jo
pusha
pop
hlt
cmp
jns
out
add
dec
pop
in
shr
add
adc
mov
cmc
adc
sub
adc
xchg
inc
add
int
pop
and
mov
sti
dec
push
bound
xchg
add
jge
inc
adc
cmp
dec
gs
adc
adc
adc
cmp
pop
imul
and
repnz
lock
pop
filds
aam
push
movsl
adc
jl
dec
mov
incb
shlb
and
bound
fwait
pop
sbb
ss
fprem
fcmovnbe
inc
test
inc
pop
push
push
adc
dec
and
incl
sub
sub
adc
pusha
call
stc
test
mov
outsl
cli
incl
inc
rorb
xor
lds
sub
addr16
incl
test
aas
cwtl
dec
inc
stos
inc
lock
js
cmc
push
rcr
mov
sbb
lea
je
xchg
sub
sbb
push
jnp
push
pushl
mov
enter
cmp
fnsetpm(287
clc
push
or
xchg
lods
dec
hlt
jb
lods
xchg
push
or
loopne
xchg
or
and
sbb
lahf
shll
aam
in
je
inc
pop
dec
lcall
mov
or
add
enter
cltd
add
in
daa
dec
mov
adc
add
or
aam
or
mov
pop
pop
aad
mov
loopne
imul
jmp
and
mov
adc
into
pop
push
ljmp
fadd
inc
dec
push
stc
dec
sahf
cmp
and
clc
decl
pop
loopne
addr16
xchg
and
pop
lods
xchg
mov
pop
test
mov
das
clc
fs
push
mov
jmp
add
ds
add
outsb
mov
mov
dec
or
jae
stc
fcoms
pop
inc
jmp
pop
mov
xchg
xchg
pushf
enter
lret
push
xrelease
mov
stos
inc
repnz
decl
iret
mov
and
or
pop
leave
andb
add
pushf
jns
dec
out
or
xor
add
cmp
es
call
mov
mov
push
icebp
pop
mov
cmp
je
incl
mov
inc
repz
or
cmp
lahf
inc
in
sbb
cld
ljmp
addl
xor
daa
addr16
dec
int
test
mov
and
jmp
dec
mov
scas
clc
rol
mov
aad
xor
int
movsl
into
outsb
decl
and
jns
les
mov
push
stc
pop
dec
add
ja
int
jmp
je
add
sarl
or
cs
add
fcomip
jmp
in
xchg
pusha
std
push
jne
mov
and
stos
push
lcall
call
shlb
adcb
dec
lahf
ds
dec
sbb
xor
lock
hlt
aad
xchg
jg
call
xchg
or
xor
dec
mov
mov
inc
and
xor
mov
pop
arpl
dec
aad
aam
xor
push
add
pop
icebp
mov
adc
dec
imul
dec
add
sub
sub
push
push
cmp
fisttps
add
ret
pop
sahf
popa
or
int3
xchg
sub
lahf
mov
sub
pusha
cmpsb
jmp
xor
add
rcrl
pusha
mov
adcl
mov
lock
sub
mov
pop
and
mov
call
loope
test
test
cwtl
js
cmpsl
sub
sbb
pushw
xchg
push
sub
cld
mov
subb
fidivrl
test
cmc
push
pop
mov
aaa
repnz
dec
pop
and
icebp
mov
fcos
lcall
mov
xchg
test
fdivs
jl
sub
lods
xor
sahf
ss
loop
mov
outsb
ret
clc
push
sub
stos
cld
test
lcall
or
fucomi
lret
cltd
loope
cmpsl
cmp
xchg
fnstcw
push
jmp
mov
repnz
xor
and
adc
push
mov
insb
jo
out
pop
rcl
push
scas
push
add
jg
add
mov
push
loope
jp
sbbl
jb
mov
aas
sbb
cwtl
roll
xchg
icebp
clc
jle
mov
mov
jp
mov
pusha
popa
jmp
ljmp
mov
mov
minps
call
in
lahf
adcl
jg
aas
mov
pop
inc
ljmp
cmpsb
gs
dec
data16
adc
mov
jmp
nop
sub
push
sti
mov
test
scas
faddl
mov
adc
push
ret
pop
movsl
mov
incl
mov
xchg
lea
dec
mov
or
mov
out
sbbl
scas
lods
xchg
decl
sub
and
sub
mov
cmp
in
push
or
ljmp
add
orb
gs
mov
xchg
stos
negl
decl
fs
pop
decb
adc
rol
rolb
popl
jo
aam
or
mov
rolb
sti
xchg
bound
inc
jmp
lcall
add
inc
add
fs
dec
shlb
movsb
ret
mov
jecxz
movsb
jg
icebp
jmp
push
dec
mov
stos
je
jmp
jmp
push
and
in
and
dec
adc
xchg
jmp
clc
and
out
pop
jbe
push
pop
jno
lock
ljmp
push
icebp
add
push
sub
out
adc
cmp
ljmp
movsb
and
push
jecxz
shrb
mov
mov
in
inc
icebp
int3
cmpsb
add
mov
sub
jecxz
and
lret
les
mov
lret
clc
outsl
push
std
jo
inc
jno
inc
insb
orl
lret
sbb
out
jb
inc
cmp
mov
inc
ljmp
and
push
or
ror
jo
sbb
xchg
out
jbe
inc
stc
or
insb
incl
out
enter
mov
dec
xchg
ljmp
jp
sub
adc
mul
cmovno
and
rorb
jmp
jnp
dec
aad
ret
decl
xchg
or
jbe
dec
sbb
lods
mov
gs
lret
scas
shrb
pusha
or
ljmp
and
push
mov
dec
or
ficoms
popf
insb
ret
call
arpl
lea
rolb
inc
push
and
lock
decl
and
sbb
outsl
sub
add
mov
loopne
push
inc
mov
push
stos
sub
hlt
shlb
or
or
mov
ret
mov
push
addr16
jmp
or
jecxz
daa
outsb
into
lods
mov
je
ds
or
rcl
jbe
movsb
xlat
incl
mov
mov
out
xor
fs
xlat
xor
jb
push
jmp
sbb
divl
gs
les
cs
in
cmpsb
add
push
icebp
call
mov
push
loop
jb
stos
push
dec
shr
iret
inc
inc
in
dec
mov
popa
jbe
insb
mov
cmp
mov
adc
test
int3
repnz
orb
out
adc
add
loopne
inc
in
out
sbb
idiv
cmp
xchg
xor
rcll
fcmove
pop
gs
push
dec
sbb
or
dec
sbb
xor
enter
push
adc
popf
ljmp
outsl
mov
sahf
idivb
ret
add
push
add
inc
add
cmp
cmpsl
jb
dec
hlt
pushl
bound
add
mov
pop
aam
pop
xor
sub
add
jmp
mov
call
sub
add
add
xor
prefetchw
or
stos
add
push
daa
loop
and
cmovns
mov
movsb
and
decl
psubw
jl
ret
sub
les
mov
std
pushl
mov
mov
dec
insb
rol
lods
mov
lcall
adcl
out
jo
jbe
mov
fwait
js
add
mov
sar
incl
icebp
cmp
cmpb
push
add
push
push
scas
adc
aad
or
sub
scas
push
orb
adc
lcall
sahf
cmpsb
cmp
inc
sub
inc
iret
add
call
bound
mov
lcall
pop
sub
or
pop
test
cmp
inc
sbb
loop
or
ds
pop
repz
decl
cmp
cmp
xchg
scas
xor
movsl
sbb
inc
inc
cs
repnz
stos
inc
jnp
imul
jns
jmp
addr16
dec
jne
jl
data16
repz
pop
jae
mov
daa
decl
icebp
inc
fcmovb
and
xor
cld
stos
mov
inc
cmp
pusha
das
cmpsb
or
call
dec
add
ret
out
and
xchg
les
enter
and
mov
xchg
cmpsb
add
cmp
and
repz
inc
gs
add
test
adc
out
fdiv
cmp
daa
add
push
test
cmp
push
sub
incl
push
sbb
add
or
and
sub
ljmp
rolb
cmp
pusha
cs
je
dec
fbstp
vunpcklpd
je,pt
aad
arpl
ret
jg
gs
loop
not
inc
or
outsl
in
jecxz
jg
scas
clc
inc
stos
xchg
pop
pop
loopne
into
stos
fs
push
add
jg
insb
pop
sub
push
xor
ror
pusha
icebp
jne
cmp
outsl
xchg
and
test
stos
jle
into
and
jl
es
mov
aam
aad
inc
and
stos
and
fs
outsb
test
jg
push
add
insb
pusha
xchg
jo
dec
dec
sbb
xchg
push
imul
lods
scas
clc
hlt
xlat
call
clc
loop
dec
mov
sub
out
daa
push
cli
ljmp
jmp
ret
xchg
jb
pop
push
jns
push
push
pop
push
pop
push
jge,pt
xor
outsl
push
out
les
decl
xchg
cli
repz
enter
arpl
cwtl
xchg
jnp
dec
add
out
daa
sub
scas
clc
jmp
lods
push
movsl
es
jns
push
insl
push
arpl
add
xchg
push
rorl
xor
mov
xchg
push
std
subb
add
pop
out
outsb
stos
mov
std
jno
sbb
inc
inc
scas
xor
jle
hlt
and
cmp
out
and
mov
stos
push
aad
adc
adc
jnp
out
test
cmp
testl
jmp
push
in
nop
pop
push
inc
mov
lcall
dec
js
nop
out
ficoml
mov
jp
hlt
call
je
pop
dec
push
arpl
daa
jp
dec
inc
test
pop
or
shrb
gs
out
mov
ss
mov
pop
ret
add
mov
cs
dec
and
mov
aas
xor
xchg
insb
into
in
push
xchg
push
insl
ss
in
int
or
pop
push
or
mov
pushf
jg
or
lea
outsl
or
and
lcall
or
and
dec
pop
lods
and
pusha
ljmp
in
push
mov
shr
testb
pop
test
sub
inc
sbb
stos
jle
dec
dec
pop
mov
stos
cmpsl
cld
xchg
jae
dec
arpl
test
je
int
pop
hlt
lcall
inc
and
in
fwait
mov
inc
jge
mov
lcall
loop
lcall
or
mov
jne
pushf
xchg
push
decl
push
add
fs
dec
adcb
ljmp
jmp
xchg
push
add
xor
or
mov
xchg
xor
test
add
adc
test
ljmp
cs
mov
cmp
push
and
in
xor
xchg
movsb
cmp
and
cs
push
and
fcomip
xchg
and
push
jo
cmpsb
movsl
add
movsb
shlb
inc
cmpsl
loopne
jmp
mov
movsl
or
xchg
mov
or
and
arpl
or
jbe
decl
out
pop
repz
not
xchg
jb
arpl
decl
and
cmpsb
jae
jg
jns
and
xchg
decb
xor
shlb
pushf
sbb
popa
les
shlb
icebp
mov
lods
out
xchg
mov
add
dec
add
dec
inc
test
stc
xchg
ljmp
inc
sahf
mov
js
ret
fwait
gs
jg
mov
adc
popa
xor
int
fildll
mov
lock
push
pushf
insb
icebp
push
add
sbb
xchg
int3
mov
mov
mov
push
cmp
out
ljmp
nop
dec
add
incl
insb
or
mul
aaa
notb
or
cmp
cmp
dec
std
jle
aaa
pop
sar
cmpsl
add
dec
popl
fists
or
pop
gs
pop
fwait
in
pop
arpl
in
es
jmp
cli
cmc
inc
ds
scas
ja
jmp
xor
das
sahf
and
adc
inc
loop
aaa
rorl
in
mov
es
sbb
addb
cmp
test
ljmp
enter
xchg
popa
call
add
scas
es
or
movsb
and
ljmp
add
fst
js
fsubrs
movl
shr
loop
push
inc
mov
call
lcall
insb
shrl
jmp
xchg
jbe
dec
jmp
lods
sub
push
jp
pop
incl
out
push
pop
mov
addl
popf
rclb
inc
xchg
mov
repnz
add
jl
aam
mov
ficompl
pop
in
pop
hlt
lcall
shlb
mov
push
pop
add
sbb
ror
mov
dec
out
or
decl
pop
fsubl
sub
mov
dec
inc
dec
call
test
cmp
xor
adc
xor
jns
ja
and
jp
ja
inc
scas
dec
lods
dec
outsb
out
jl
dec
adc
iret
mov
repnz
jne
ja
ret
pop
jns
cmp
popa
xchg
mov
jecxz
xor
push
cmp
pushl
cmp
mov
dec
pop
push
fbstp
imul
pop
pop
lcall
loope
ffree
leave
stos
dec
cld
lcall
sub
push
jnp
stos
aam
xchg
call
popf
movsb
jmp
push
push
xchg
mov
xchg
cmc
mov
xchg
or
into
inc
mov
mov
xor
mov
mov
fnstenv
aad
jbe
addl
inc
mov
jmp
nop
push
int3
add
fwait
inc
and
jno
in
adc
jmp
jge
pop
push
dec
add
jl
dec
pop
cltd
cmp
and
pusha
inc
push
inc
xor
pusha
push
andb
daa
pop
sahf
test
inc
mov
es
repz
add
addb
fisubrl
mov
inc
sbb
std
jp
out
pushf
jg
dec
lahf
out
jmp
test
inc
fldt
xor
pop
xchg
lea
fldl
in
fcmovne
lcall
fistpll
test
sahf
pop
mov
in
lea
inc
sub
mov
in
push
or
jmp
xlat
push
aad
push
hlt
insl
mov
xchg
pop
pop
and
dec
inc
or
decl
jb
pop
sbb
mov
cmp
je
cld
cmp
pop
or
aam
add
inc
cli
dec
clc
or
int3
and
fs
mov
scas
add
add
push
sbb
xchg
ljmp
push
divb
outsl
pop
jnp
scas
inc
clc
mov
xchg
mov
push
cli
call
jecxz
add
mov
fwait
xor
or
out
mov
fwait
incl
mov
scas
mov
popa
bnd
add
sbb
dec
pop
and
andb
loopne
inc
push
sbb
push
sub
jp
js
sbb
ljmp
fdivrl
add
mov
xor
mov
sbb
push
loop
and
cs
xchg
sub
xchg
sub
adc
incl
add
shll
out
aam
jae
add
sbb
addr16
fwait
inc
jne
call
std
inc
test
stos
aad
jnp
jge
mov
push
scas
inc
mov
in
es
cs
jp
in
mov
mov
lds
cmpsb
push
cwtl
xor
in
xor
push
and
xchg
xor
incl
movsl
imul
loopne
mov
imul
jo
and
out
sahf
pop
or
incl
xchg
rorl
dec
stos
push
or
mov
sbb
cmpsb
jg
cli
dec
test
xchg
mov
pop
loopne
mov
mov
scas
clc
mov
cltd
and
ficompl
enter
hlt
push
cld
or
mov
pop
outsl
jle
mov
scas
cmp
outsb
or
push
in
mov
mov
push
lcall
lods
cmp
and
pusha
jne
add
inc
rcrb
aad
lcall
and
xor
loopne
dec
xchg
loope
or
test
faddl
call
and
inc
sbb
sub
lahf
and
sbb
mov
and
mov
sub
and
loopne
dec
sub
movsb
dec
sbb
jmp
mov
je
cmpsb
jne
xchg
cmp
test
cmc
xor
push
fcomip
or
pop
push
loop
daa
adcl
inc
insb
mov
test
pushf
inc
mov
loope
push
pop
outsb
xchg
adc
jno
add
ja
cmc
fwait
pop
adc
das
mov
xor
sub
add
jl
pop
icebp
call
pop
adc
pop
movsb
insl
cmp
out
adc
jno
nop
lcall
pushl
test
mov
out
insl
mov
ljmp
in
and
mov
dec
jmp
sbb
ja
inc
orl
cmpsl
incl
inc
cmp
js
jge
push
jnp
and
mov
xchg
test
mov
cmc
pop
jns
push
inc
popf
sbb
test
push
sub
out
or
jp
dec
xchg
mov
cwtl
mov
fisttps
into
das
mov
es
mov
cs
rolb
xchg
and
mov
pop
inc
adc
jp
inc
fcomip
cmp
adc
xchg
nop
push
in
nop
xchg
nop
inc
sbb
inc
sub
leave
test
add
push
adc
add
push
pop
leave
rcrl
pushl
std
lods
xor
mov
inc
popf
je
push
pop
imul
jno
movsb
mov
in
mov
fdivl
test
pop
test
xchg
adc
inc
inc
mov
cmpsb
mov
loope
sbb
jnp
lcall
testb
loopne
push
push
sub
mov
pop
inc
imul
test
insb
mov
lcall
ds
sub
or
adc
daa
cmp
mov
pop
addr16
mov
cmp
call
jp
mov
sub
ffreep
cli
test
push
sti
pop
mov
jne
loopne
lods
push
mov
mov
lock
iret
cmpsl
ds
cmpb
loopne
into
das
cmp
rorb
mov
dec
mov
mov
sub
fsubrs
pop
mov
cs
push
dec
jl
stc
and
mov
es
sbb
dec
test
xchg
js
dec
sub
dec
bound
daa
int
addb
lcall
into
call
in
data16
push
lods
hlt
add
rcrb
shlb
lcall
push
cwtl
xor
add
lahf
ret
inc
popa
rolb
jmp
push
bound
lds
mov
add
inc
or
push
sbb
lcall
dec
pop
cmp
pop
sbb
add
xchg
cmp
cs
and
pop
xor
push
push
repnz
outsl
es
into
rolb
dec
shll
scas
cmpsb
test
mov
push
mov
cmp
aad
out
mull
testb
hlt
scas
mov
pop
inc
inc
test
add
fidivs
push
nop
jae
incl
nop
ret
xchg
sub
jmp
bound
jnp
iret
jnp
sbb
jg
mov
sub
xchg
and
lods
addr16
xor
mov
sbb
out
xchg
lods
fsubl
cmp
sbb
outsl
xchg
pop
dec
mov
incl
enter
xor
pop
inc
xor
lret
ljmp
lret
push
mov
scas
jo
pop
xchg
loopne
push
xorl
xchg
lret
cmpsb
xchg
jo
pop
dec
loope
jbe
mov
mov
aas
sub
rolb
aaa
std
ljmp
popa
fcom
jb
cmp
push
sub
sub
jle
test
in
mov
jl
mov
mov
pop
jo
inc
add
movsb
daa
push
adcb
nop
add
rorl
push
dec
mov
mov
inc
jo
pop
and
cmp
lcall
push
mov
dec
dec
sub
orb
mov
jb
adc
pop
loopne
scas
addr16
push
cmp
xchg
ljmp
js
or
xchg
cmpsb
pop
adc
xchg
xchg
js
dec
adc
pop
icebp
call
adc
iret
xchg
sarl
jmp
push
aad
cmp
in
push
lea
pop
dec
in
xor
es
push
sub
cltd
xor
or
cmp
mov
fcomip
xchg
xchg
insl
in
icebp
out
gs
sub
into
adc
add
dec
mov
or
hlt
dec
ficoms
ret
add
fcomip
pop
or
movsl
xchg
aaa
pop
movsl
mov
lcall
sbb
fstps
jg
inc
cld
cli
push
inc
leave
gs
rcr
xor
inc
stc
movsl
filds
mov
adc
or
xchg
mov
inc
js
test
or
ljmp
mov
inc
add
fidivrl
mov
mov
or
mov
adc
xchg
dec
les
mov
jmp
cmp
incl
jbe
mov
popf
and
js
mov
pushl
mov
lods
daa
pop
or
pop
pop
lds
lock
inc
in
rclb
push
incl
cld
ljmp
or
jnp
mov
cld
push
mov
mov
test
jge
dec
pop
inc
sar
jmp
popa
pushaw
jns
mov
shr
jge
inc
into
fs
add
mov
sbb
sti
xchg
mov
and
fisubrl
xor
aaa
daa
xorl
or
sub
push
xchg
call
xchg
push
adc
mov
imul
cmpsl
xchg
mov
pop
jmp
mov
sbb
inc
sub
and
mov
cmp
pop
scas
cli
decl
test
and
loop
shlb
add
ljmp
xchg
or
inc
shrb
ficompl
out
stos
std
cmp
or
arpl
push
adc
adc
xor
fistpll
clc
adc
push
inc
inc
pushf
aaa
sub
jbe
inc
jb
cs
popa
pop
shrd
lcall
and
dec
in
test
pop
or
lock
mov
out
insl
cmp
push
jno
pop
jmp
cmp
pushl
je
ds
jmp
iret
xchg
cmpsb
ss
lcall
push
sbb
shrl
je
lods
mov
xchg
out
inc
sti
adc
mov
sub
or
call
icebp
xchg
cwtl
in
int3
push
clc
fistl
mov
test
xor
jbe
or
mov
xor
push
mov
lcall
rorl
xchg
stc
jo
xor
jg
mov
je
mov
bound
mov
ret
xor
mov
sub
sbb
pop
add
lock
fisttps
ljmp
jnp
mov
data16
jmp
jle
xchg
movb
mov
hlt
dec
pushf
jb
jmp
push
arpl
jne
leave
sahf
les
jno
push
loopne
or
ljmp
inc
dec
xchg
out
push
jae
xlat
popf
jae
out
cmp
je
pop
jae
ds
pop
xchg
das
ss
cli
add
inc
xchg
movsb
gs
mov
jle
mov
std
scas
aas
lret
test
add
lahf
inc
fldt
adc
clc
lods
xchg
stc
xor
jmp
ds
add
xor
add
mov
cltd
sub
cmp
xchg
cmp
xchg
psllw
sbb
jns
popa
loop
ljmp
mov
lcall
gs
mov
ds
repz
in
mov
pushl
pop
insl
bound
push
inc
pop
pop
les
jnp
xorb
pop
xchg
pop
xorb
addb
push
arpl
in
and
xchg
ss
decl
adcl
out
pop
or
add
loopne
jb
cmp
das
push
add
pushl
sbb
and
mov
gs
psubb
and
cmpsb
jl
jns
es
cmp
fldenv
push
inc
sbb
xlat
cmp
push
test
cmpsb
inc
dec
dec
mov
cli
and
jae
add
jp
pop
bound
outsb
cmp
repnz
add
mov
or
dec
lret
stc
mov
fs
leave
mov
inc
cmpsb
out
incl
and
aas
xchg
xchg
adc
out
pop
push
adc
push
dec
imul
xchg
jle
in
jmp
paddq
test
in
adc
jo
dec
pop
mov
imul
push
rclb
test
movsb
xor
xchg
mov
test
cmp
dec
xchg
pop
jbe
cmpl
cmc
adc
jmp
and
jne
les
andb
shrb
or
test
pop
jmp
ja
loopne
ret
push
cmp
inc
jl
sub
push
inc
mov
or
push
clc
decl
dec
test
or
jp
mov
enter
lcall
dec
sbb
bnd
lea
push
in
and
pop
or
lcall
push
bound
jo,pt
test
push
test
jbe
lods
inc
xchg
xchg
and
sbb
push
jg
jmp
jl
xchg
xchg
xor
adc
jl
push
lock
inc
fnstsw
clc
jl
orl
xchg
adc
aam
dec
mov
ljmp
jno
adc
fwait
mov
sahf
pop
cmpsb
xor
daa
mov
ret
jb
ljmp
xchg
jl
xor
ret
daa
mov
adc
data16
and
add
lcall
daa
pop
mov
dec
daa
jb
xchg
push
pushl
jl
into
xor
jne
add
mov
mov
and
and
fadds
mov
jg
call
xor
lea
inc
data16
jge
sub
out
clc
incb
push
xchg
mov
pop
or
push
sub
ja
clc
das
push
cmp
xchg
cmp
ret
ret
call
es
mov
inc
scas
aaa
outsl
fs
and
cli
fisubl
jo
mov
cli
subl
popa
mov
fnstcw
mov
jl
jg
jge
and
and
xchg
outsb
mov
pop
mov
inc
add
xchg
pop
std
incl
aam
daa
rorl
out
pushl
and
jle
les
xchg
jle
roll
add
xchg
sbb
mov
jmp
je
mov
stos
jecxz
sub
imul
add
mov
dec
jle
rorl
mov
push
in
pop
and
sbb
xchg
add
incl
pop
jbe
xorb
adc
cmp
or
jno
sub
imul
pushl
add
lock
mov
or
or
pushl
mov
xchg
xchg
and
or
ljmp
call
adc
enter
push
imul
lret
xor
inc
sbb
lcall
xor
bound
dec
int
jl
es
adc
arpl
xchg
lcall
mov
sti
jbe
aaa
sbb
cmpsb
pop
es
or
incl
popa
gs
inc
xchg
imul
and
sub
lahf
insl
hlt
add
pop
cli
decl
aaa
xchg
mov
xor
in
jl
jae
sbb
xor
mov
cmpsl
enter
dec
dec
jg
lcall
push
subl
add
out
je
roll
push
lods
jl
add
inc
jae
sub
push
and
inc
test
call
push
aaa
mov
mov
pop
mov
imul
ss
add
jg
pushl
or
clc
push
test
mov
enter
cltd
movsl
daa
push
adc
lcall
push
push
aad
cmpsl
je
popl
sub
mov
out
jae
pop
dec
cld
call
sub
in
xchg
mull
jg
sbb
dec
mov
cmpsl
test
in
out
jbe
push
sub
adc
adcb
or
ljmp
and
pop
pop
out
or
mov
roll
stc
aas
shll
xlat
push
cltd
fcoms
push
stos
and
cs
adc
xchg
aaa
aam
jmp
mov
mov
std
pop
adc
mov
adc
rcll
notb
hlt
outsb
sub
or
adc
ja
sub
jne
ljmp
jb
sbb
mov
ljmp
in
cmc
pop
jo
ja
or
test
ss
ljmp
xchg
xor
movaps
dec
xchg
insb
dec
in
inc
clc
clc
fbstp
push
adc
test
cmp
es
out
ret
jns
push
mov
aaa
sbb
das
call
xchg
jnp
xor
dec
xor
jns
shrl
shl
push
into
jmp
xor
mov
out
test
cmpsl
filds
into
xor
mov
xor
xor
pop
fs
sub
cmp
cmp
xor
sbb
and
leave
mov
arpl
lcall
movsb
gs
dec
lahf
cmpsb
cli
adcl
cli
cltd
adc
or
mov
or
fisubrl
cmpsb
xor
or
ljmp
adc
mov
adc
xor
daa
pop
lret
xor
ss
scas
clc
adc
lods
xchg
jbe
xor
jbe
mov
idivl
lods
test
jle
and
mov
sub
in
mov
cwtl
sub
sbb
inc
out
scas
data16
sbb
decb
or
inc
or
mov
mov
loop
xor
es
cld
loope
vmovupd
push
xchg
or
ja
jp
loop
xchg
outsb
push
jnp
cmpsb
fidivs
xchg
push
fdivs
or
xor
mov
das
rolb
or
sbb
stos
sbb
push
xchg
popf
fstpt
sbb
loop
test
jns
sbb
jge
fs
cmpsl
and
icebp
pop
jmp
sbb
mov
add
dec
xchg
jp
or
incl
dec
loop
out
stc
pop
shll
inc
dec
mov
call
call
adc
push
movsb
lahf
mov
adc
inc
and
dec
adc
dec
mov
and
mov
cmp
test
xchg
rorl
popf
and
jmp
je
pop
inc
sbb
mov
jle
jg
pushl
xchg
push
fstpl
adc
sub
or
lock
call
lock
scas
xchg
ret
xchg
mov
sub
movb
rorl
ljmp
push
dec
fisubrl
push
pop
test
mov
shlb
cmpsb
into
sub
es
jb
mov
mov
movl
pusha
push
jns
adc
dec
mov
cmpsb
add
outsl
enter
push
arpl
xchg
enter
call
xlat
cmpsl
lea
xor
pop
adc
bound
jmp
gs
push
mov
imul
dec
lahf
sub
cmp
movsb
xchg
clc
cmpb
mov
stos
testl
lret
stos
sub
pushl
mov
lret
sbb
rorl
mov
test
adc
and
jmp
int3
outsb
and
cmp
pop
mov
shr
pop
sbb
mov
cmp
add
aad
test
shll
cmpsb
lcall
pushl
mov
cmpb
xchg
xorb
xor
push
insb
adcl
cmp
in
sub
pusha
negb
xor
cltd
cmp
sub
jns
in
push
icebp
call
sub
push
lret
test
mov
dec
pop
add
mov
fstps
xchg
push
push
loopne
mov
push
js
test
mov
pop
fsts
rorl
xchg
mov
mov
sbb
dec
xchg
mov
or
mov
sti
pop
mov
dec
sub
mov
xchg
lret
push
ljmp
cli
das
hlt
sbb
scas
cld
aaa
or
xlat
stos
lret
pop
cli
ffreep
dec
inc
mov
mov
hlt
shrl
pop
inc
mov
mov
or
push
outsb
jno
and
inc
jg
hlt
inc
adc
aas
sbb
jb
push
inc
ljmp
ret
push
dec
and
inc
push
test
notl
mov
das
cli
fldt
inc
fcos
mov
sbb
in
popf
in
mov
fiaddl
sbb
push
je
stos
scas
mov
cld
call
rsqrtps
xchg
adc
cmp
adc
shll
dec
cmp
test
xchg
arpl
jmp
mov
mov
push
sahf
mov
xchg
and
jl
or
rolb
hlt
inc
repz
jg
adc
repnz
or
sbb
add
es
add
mov
lcall
add
sub
jnp
cwtl
or
mov
sub
int
test
and
and
fmul
hlt
pop
mov
jge
hlt
mov
dec
push
mov
mov
clc
pop
lahf
mov
mov
lahf
fbld
push
fisttps
and
mov
push
xor
mov
mov
xor
cmp
jmp
mov
bound
ret
imul
jecxz
insl
ret
ret
mov
incl
xchg
ret
js
dec
xchg
in
lcall
or
add
lret
loopne
ficoms
pushl
sbb
jecxz
orl
lret
push
js
jmp
inc
test
movsl
mov
pushl
xor
mov
add
dec
iret
xchg
cmp
xchg
lock
add
mov
fdivs
das
es
adc
pushf
imul
add
sbb
loopne
xor
mov
decl
add
pop
cmp
std
fwait
add
lods
push
inc
bnd
mov
mov
aad
mov
cmpsl
fisttpll
cmp
or
arpl
ret
mov
and
fists
jmp
pushl
jae
and
dec
dec
dec
lock
mov
and
clc
mov
xchg
fbld
xchg
repnz
lret
or
pop
adc
decl
and
idivb
int3
adc
and
add
stos
add
js
fstp
loopne
inc
jl
adc
jnp
rcrl
nop
aas
jg
add
test
add
sbb
jbe
sbb
add
movsb
cld
push
decl
movb
or
or
push
cwtl
sti
or
push
dec
nop
sub
out
xor
adc
aas
add
verw
mov
mov
add
lahf
add
aas
pusha
cld
enter
cld
pop
adc
outsb
ja
jg
std
sarb
std
or
fildll
sub
pushf
jecxz
xchg
cmp
sti
push
add
fwait
leave
adc
mov
lock
cs
ljmp
inc
cli
xor
pop
and
arpl
dec
mov
orl
adc
xor
dec
sbb
and
adc
mov
push
push
shlb
repnz
fcomip
fwait
lcall
rorb
or
mov
cmp
fs
call
sub
fs
incl
cmpsb
push
add
call
out
push
xor
fcoms
jne
aad
push
mov
jmp
mov
mov
test
insl
cmp
loope
push
fcomip
mov
fsubrl
cmpsl
push
scas
mov
jecxz
outsl
push
pop
pusha
fwait
jo
bound
cld
daa
adc
gs
movb
lcall
and
out
clc
xor
es
fdiv
xchg
dec
push
mov
and
xchg
ljmp
add
mov
jne
enter
lcall
ret
out
popa
mov
inc
rcrl
pop
pop
inc
or
push
nop
addr16
and
fcoms
mov
loope
pushf
push
adc
clc
decl
cs
sbb
out
into
addb
stc
xor
dec
push
cmpsl
int3
in
aaa
xchg
sub
pop
lahf
xor
xor
or
push
or
adc
adc
dec
adc
push
roll
jnp
mov
clc
jmp
adc
outsb
ljmp
daa
push
adc
push
dec
mov
ds
std
lds
dec
jo
inc
les
add
xor
add
clc
add
push
pop
jp
push
test
pop
or
sub
mov
cmp
es
loopne
sub
testb
mov
std
jg
aaa
lods
icebp
les
and
adc
shll
daa
sahf
and
jecxz
call
or
movsb
add
mov
push
mov
push
sarl
cmc
mov
jp
add
test
or
push
cmp
sbb
push
cltd
repnz
decl
dec
push
jae
sub
xchg
pop
xor
xor
sub
push
fbld
dec
sub
test
jmp
test
mov
ss
adc
mov
subb
jmp
add
xor
imul
lahf
jb
xor
sbb
mov
dec
stos
fmul
and
xchg
shrl
aad
mov
pusha
loop
jg
into
xor
fdivl
or
fistpll
adc
cmpl
xchg
stos
incl
pop
ljmp
sbb
and
xchg
sti
push
push
sub
inc
in
rol
std
es
add
push
push
pop
jo
or
add
pop
test
xchg
add
xor
xor
bound
and
inc
pop
mov
cld
jmp
jno
adc
jp
scas
push
mov
scas
stos
inc
mov
add
mov
ds
decl
lods
push
or
mov
cwtl
rolb
add
pushf
lea
decl
or
xor
add
cmpsl
xor
ret
add
pop
add
and
aas
adc
jg
mov
lret
adc
inc
xchg
or
cmp
lods
adc
jo
dec
mov
sub
dec
sbb
or
nop
decl
ljmp
push
loopne
gs
cmpsl
dec
mov
test
lret
mov
lods
mov
in
sti
arpl
ror
lods
or
jmp
mov
insb
movnti
shlb
incl
je
insl
bound
lret
stos
fidivs
outsl
xor
mov
add
pop
xor
lahf
lods
lret
jb
inc
ss
sbb
pop
and
nop
arpl
pusha
cmp
sub
add
xchg
add
adc
rcrb
jg
inc
repnz
in
adcb
cmpsb
push
imulb
out
and
dec
dec
inc
or
test
aam
adcl
xor
inc
or
inc
sub
adc
xor
and
mov
or
mov
pushf
in
jne
or
aad
mov
sbb
sbbl
loop
leave
sub
xchg
mov
pop
cmp
jne
mov
cmpsl
and
xchg
xchg
inc
push
add
sbb
lcall
insb
outsb
out
sub
sbb
psubusb
dec
cli
inc
add
and
out
add
or
test
mov
loope
inc
cmp
jo
pop
clc
call
add
mov
push
shrl
push
mov
sbb
xchg
fidivs
sahf
adc
jge
out
clc
push
dec
push
and
add
xor
aam
and
and
loope
movsb
jmp
leave
cmpsl
insb
inc
adc
fdivrs
test
cwtl
jmp
ret
shlb
mov
test
test
or
cwtl
out
pop
jl
or
dec
fs
pop
mov
xchg
mov
mov
lcall
adcb
xlat
insl
sarb
je
popa
inc
cmpsl
cmp
hlt
inc
mov
loopne
fdiv
decl
add
mov
sub
inc
or
inc
out
mov
pop
mov
incl
sbb
adc
sbb
xchg
lds
ret
jmp
ret
mov
dec
inc
jp
decl
ja
ret
or
xor
sbb
popa
cmp
jo
push
sbb
mov
sub
rolb
mov
dec
test
ror
int3
dec
inc
inc
rorl
lcall
pop
jo
adc
orb
add
fsubl
sub
rolb
pop
add
inc
lcall
cmpxchg8b
rol
aaa
out
adc
jae
rcrl
icebp
enter
leave
dec
jno
rcr
ljmp
decl
or
mov
inc
mov
mov
lods
pushf
or
inc
and
jbe
push
and
gs
mov
call
mov
xor
into
test
imul
aaa
add
test
data16
or
decl
in
or
test
outsb
mov
dec
scas
insl
pop
mov
mov
cmp
ljmp
jmp
mov
pop
cltd
fdivs
pop
mov
jp
pushl
dec
std
test
dec
fdivrl
lea
mov
fsubrs
sbb
inc
sub
push
mov
pop
inc
call
sub
pusha
pop
sbb
je
xchg
incl
add
mov
push
fildl
fs
loopne
clc
push
repz
pop
std
aad
mov
decl
push
and
cld
sub
pushf
loop
mov
jb
inc
stos
jecxz
inc
es
sti
fdivr
adc
sbb
lret
rorl
call
clc
leave
xchg
sub
rolb
rcrl
outsb
and
ljmp
push
push
push
push
push
push
orl
sahf
sub
mov
in
ret
mov
nop
cmp
push
adc
fiaddl
push
xor
push
mov
decl
lcall
xor
xchg
or
jo
dec
pusha
sbb
inc
ret
ret
nop
stc
pop
add
ss
sar
decl
outsl
jl
push
ds
sbbb
pusha
and
push
gs
pop
pop
cmp
movsl
lea
sbb
mov
jge
xlat
jns
in
jmp
test
addb
jle
jg
jmp
fisubl
push
fcoml
insb
pop
add
jmp
xor
push
xchg
ja
aam
jp
pushf
mov
std
in
arpl
sti
lret
xor
aas
xor
push
jno
je
dec
in
xchg
ret
imul
lea
mov
popa
jo
sub
mov
and
orb
or
mov
call
ljmp
push
jl
adc
mov
nop
jmp
test
ja
ljmp
mov
cmp
addr16
push
push
aas
addr16
or
push
jmp
ja
sar
nopl
jae
mov
pushl
std
arpl
arpl
dec
add
jmp
in
jno
jl
cmovbe
jmp
add
lods
push
test
test
and
mov
movsb
pop
in
mov
jmp
sub
xchg
ss
inc
mov
rolb
mov
lcall
jge
mov
jns
add
xchg
inc
mov
pop
jg
decl
rorl
xchg
xchg
or
xor
stos
add
dec
jmp
jl
inc
pop
push
or
mov
push
push
add
xor
in
lds
insb
xor
ljmp
aas
inc
sbb
mov
rcl
insl
cmp
sti
lods
ffreep
fnstcw
ret
cmp
ss
int
sbb
jno
push
mov
data16
fwait
mov
add
movsb
add
lock
dec
add
divl
jnp
jg
decl
in
testl
push
adc
shll
adc
popf
loope
call
add
lods
cli
push
add
andl
adc
lods
mov
sbb
add
mov
rolb
sub
push
or
or
jno
mov
adc
add
mov
mov
push
rcll
inc
push
mov
sub
test
and
mov
xor
add
mov
pusha
add
and
cmp
jl
sahf
pop
mov
mov
inc
daa
mov
inc
jg
pop
mov
or
xor
jmp
lcall
loopne
ret
lahf
and
fisubl
cmp
inc
or
or
fstpl
or
lods
pop
js
or
pop
icebp
ljmp
movsl
sbb
xchg
add
stc
or
add
arpl
mov
and
les
inc
mov
call
or
nop
mov
xchg
sub
mov
push
rolb
roll
sbb
add
xor
add
pop
and
sub
dec
and
dec
sub
add
xor
fisubrl
xor
add
sbb
fcomps
xor
shrb
jp
call
test
xor
xor
jno
push
nop
or
add
xchg
mov
inc
mov
call
mov
ljmp
sti
addl
out
stos
pushf
arpl
or
enter
gs
xor
mov
pusha
or
aas
sar
pop
loopne
xor
rolb
jl
daa
out
xor
mov
push
or
cs
mov
jecxz
stos
int3
or
xorb
enter
mov
test
xorb
dec
xor
shll
sbb
jo
rcrb
mov
dec
add
lret
lret
dec
cmpsb
je
dec
jg
scas
movsb
dec
test
mov
popf
mov
add
add
pop
push
jg
pop
pop
xchg
mov
dec
cmpsl
xchg
lret
add
dec
mov
dec
mov
call
push
addb
push
movsl
pushf
cmp
sub
imul
loope
mov
xor
lea
cmp
cmp
mov
les
jo
pushl
push
jp
mov
and
jecxz
add
mov
add
jne
mov
insb
or
mov
cld
adc
and
fimuls
push
dec
mov
decl
pop
push
adc
cli
xchg
adc
subl
mov
fdivl
ret
dec
mov
mov
sbb
sub
cwtl
rorb
stos
xchg
pop
faddl
sbb
mov
prefetcht0
in
decl
adc
xchg
and
dec
cmp
sbb
stos
or
mov
adc
push
mov
jp
lcall
sub
test
ds
jae
mov
mov
xchg
ds
xchg
mov
mov
lock
aas
dec
mov
and
jmp
addl
ss
aas
pop
or
cld
fcomip
adc
test
test
fcomip
dec
mov
dec
and
ss
dec
test
or
add
jecxz
popf
hlt
push
orl
cltd
cli
jge
and
mov
jg
sub
xor
xor
xor
mov
aaa
shll
ljmp
test
cmp
push
ds
shrl
mov
xchg
add
push
and
inc
lahf
pop
add
inc
ds
mov
insb
jg
decl
mov
shlb
les
sbb
sub
or
dec
or
pop
sub
mov
stos
cmp
mov
sbbl
cmp
aam
pusha
mov
lcall
jl
sbbl
add
or
or
lahf
aam
dec
leave
pushl
std
data16
mov
test
cltd
nop
xchg
xor
push
mov
shrl
and
int
call
sub
add
cld
cmpsb
pop
push
imul
dec
rolb
mov
inc
add
and
leave
sub
and
mov
pop
fistpl
outsb
in
add
bound
cmc
decl
ss
jne
mov
dec
fwait
int3
bound
leave
and
fiaddl
dec
jg,pt
in
movsb
inc
adc
icebp
mov
xchg
add
test
mov
add
mov
aaa
push
hlt
and
test
fidivl
sbbb
jnp
xchg
xor
lds
pop
or
cmp
mov
push
movsl
fistpll
adc
fcmovu
mov
out
mov
pop
test
sbb
sub
xchg
mov
fldl
jmp
mov
add
std
shrl
pop
cs
popf
ret
sti
fildll
aad
les
push
cwtl
add
pop
mov
leave
movsl
fcompl
pop
mov
or
test
pop
call
fldl
pop
shll
adc
decl
hlt
dec
and
sub
lods
shrl
stos
es
incl
cld
dec
imul
and
je
mov
aad
pop
clc
sbb
inc
sbb
call
jmp
hlt
ljmp
insl
ds
pop
mov
add
jo
and
xchg
pop
icebp
jge
incl
loopne
sbb
push
push
ret
jbe
cmp
add
sbb
inc
and
into
test
add
cmp
push
rorl
push
pop
adc
ret
jo
mov
xchg
adc
test
icebp
add
add
dec
clc
xlat
jge
and
test
xchg
fiaddl
neg
xchg
fsubrs
inc
jmp
pushl
mov
push
xor
enter
sub
add
sbb
cmp
adc
jg
sub
and
pop
xor
movsb
outsb
fistpl
clc
lea
out
push
cmp
sub
cmp
mov
fmull
jg
call
or
mov
repz
jb,pn
add
or
es
ljmp
jns,pn
sub
add
arpl
add
mov
fwait
inc
cmp
les
sahf
sbb
ss
mov
cltd
movsb
leave
pop
mov
int3
sub
addl
sbb
cmc
mov
fwait
and
inc
movsl
xchg
jecxz
fs
into
fs
ss
dec
add
xchg
and
sbbl
lcall
add
mov
mov
cmp
cwtl
in
jl
xchg
add
lahf
stos
jmp
and
loopne
xorl
lods
loopne
push
jp
push
movsb
lds
mov
in
loop
incl
fldcw
xchg
jmp
test
mov
in
mov
sbb
adc
pop
push
or
addr16
rol
dec
jg
andl
nop
and
in
faddl
pushl
jo
hlt
daa
sub
sbb
lret
sbb
mov
sti
or
xchg
call
xchg
and
addr16
and
lcall
xchg
mov
jno
cwtl
insb
adc
cmp
decl
pop
mov
inc
rep
or
loopne
mov
or
jmp
aad
cmp
xorb
push
fsubs
add
cmpsl
jg
loope
dec
std
push
shrb
sbbl
incl
adc
xchg
inc
inc
xor
bound
mov
incl
mov
je,pt
and
adc
and
rcrb
jmp
adc
lcall
stos
cmpsb
cli
sub
mov
aas
mov
add
jecxz
aas
inc
mov
mov
cmp
insb
int
xchg
imul
icebp
cmpsb
cwtl
inc
scas
decb
cwtl
insl
sbb
sbb
sbb
push
add
pop
cmc
ljmp
movsl
das
push
rcr
add
sub
xor
in
mov
addb
adc
dec
cmp
loope
aaa
decb
loopne
add
sahf
mov
jo
outsb
jmp
out
push
sahf
or
out
push
enter
sbb
jmp
out
cmp
out
icebp
push
ljmp
push
out
imul
sbb
adc
push
inc
or
mov
adc
andl
jnp
popf
out
negb
dec
mov
add
xor
decl
push
add
pushf
lds
pop
jmp
or
popf
xor
fisubl
dec
insb
data16
mov
pop
or
jae
mov
jg
scas
in
testl
out
cmc
out
js
and
push
sub
fildll
shlb
scas
jno
fbstp
lret
mov
pop
mov
daa
fwait
leave
push
loopne
sub
leave
fstp
aas
fstpl
out
incl
sub
icebp
stos
jb
mov
jl
add
sbb
popf
addl
and
or
js
enter
mov
lcall
sbb
add
add
loop
mov
sbb
dec
std
pop
dec
js
cwtl
jg
add
cld
je
mov
inc
push
push
fwait
enter
xchg
xchg
xor
adc
cmp
hlt
and
js
mov
xchg
jmp
and
jno
push
inc
cmc
lock
incb
outsb
or
inc
mov
mov
mov
ljmp
dec
mov
div
daa
xor
mov
mov
sbb
pop
cwtl
cmp
adc
fistpll
mov
loopne
add
hlt
xorl
aas
cmp
clc
stc
push
jo,pt
xor
testl
pushl
test
or
test
push
dec
out
sub
xchg
mov
rorb
mov
xchg
sbb
sbb
imul
mov
call
imul
jne
mov
add
stos
mov
push
sub
scas
enter
push
mov
pushf
notl
into
in
in
mov
lcall
fmull
fadds
pop
std
xchg
push
daa
inc
cmpsl
ja
cmpb
jno
inc
jb
icebp
cmpsb
das
ret
fwait
and
sbb
sub
adc
mov
ljmp
clc
jno
movsl
xor
mov
pop
sub
inc
mov
dec
call
mov
cmp
or
ljmp
inc
js
cmp
ljmp
test
cmp
add
adc
jg
mov
enter
push
fcomps
lcall
or
lods
mov
clc
add
mov
clc
decl
pop
mov
sbb
push
adc
jmp
mov
mov
jg
outsl
or
sub
and
sbb
sahf
adc
cmp
jge
adc
dec
mov
cmp
pusha
or
xor
mov
fidivl
call
call
in
or
add
in
pop
push
mov
icebp
fldt
into
push
pop
or
lods
xchg
adc
add
or
fwait
ja
pushf
lock
stos
sbb
ljmp
arpl
loop
mov
es
mov
scas
mov
jo
sbb
inc
inc
or
sbb
shll
sar
xchg
repz
lcall
mov
call
and
adc
mov
shl
add
mov
hlt
test
mov
jecxz
stos
xlat
ss
lods
leave
lcall
call
std
pop
or
cmp
imull
ss
clc
fdivs
je
adc
adc
mov
cld
inc
mov
mov
xor
call
scas
aaa
mov
mov
push
je
scas
push
js
xchg
pusha
and
hlt
add
movsb
mov
clc
pop
mov
sbb
mov
inc
or
movsl
or
xor
inc
gs
in
xchg
xor
sar
jl,pn
outsb
call
sarb
cmp
mov
div
mov
pop
xchg
adc
iret
rclb
xor
cmp
inc
outsl
ljmp
gs
or
data16
loopne
add
adc
sar
outsl
and
test
and
jb
orb
pop
sbb
jg
lahf
cmp
add
ss
xor
nopl
xchg
rcr
insl
clc
fs
sbb
pushl
ds
cwtl
pushf
mov
cmp
push
push
and
inc
rsqrtps
call
ja
lock
pop
push
add
mov
fs
or
sbb
dec
xchg
jmp
dec
sbb
inc
movsl
ud2
or
test
dec
rorb
push
mov
or
push
shrl
rclb
clc
mov
jg
jmp
dec
inc
inc
xchg
adc
or
pop
cwtl
imul
add
cmp
dec
ds
movsl
xor
loop
add
movb
ret
dec
cld
popa
call
adc
test
xor
dec
push
adc
or
adc
adc
in
xchg
xor
js
xor
loopne
mov
aam
push
loopne
jmp
movsb
xchg
push
cli
jmp
call
sbb
dec
and
pop
jns
mov
push
add
incl
xchg
and
adc
mov
sbb
pop
pop
imul
push
push
add
pop
push
or
mov
mov
dec
aas
sar
or
lds
sbb
lds
loope
cmp
xchg
int
xor
and
dec
ss
sub
test
loop
test
add
or
sub
mov
mov
jo
loope
pop
js
lods
fldt
jns
mov
xor
clc
inc
adc
insb
mov
sub
lahf
mov
sub
mov
int3
sbb
ljmp
add
jo
lods
test
into
pop
xchg
xchg
fistpl
mov
into
xor
cltd
leave
add
sub
bound
stc
loope
fistpll
loopne
pop
call
add
adcb
push
loop
dec
xor
mov
decl
or
ds
lahf
or
loop
into
sub
movsb
cs
push
sub
decl
ss
push
mov
enter
fldcw
pushl
cmp
roll
jbe
popa
jnp
test
inc
add
ja
jmp
dec
mov
add
rolb
and
mov
pop
aam
and
lcall
jg
inc
test
and
add
or
and
shrl
ljmp
subb
xor
inc
ds
rolb
jl
cmc
roll
cmp
sbb
jg
loop
sti
out
add
aad
add
dec
mov
push
jnp
add
add
mov
ret
rorb
ljmp
pop
leave
and
xor
out
pop
adc
mov
push
add
push
lret
mov
inc
data16
decl
mov
nop
pop
pop
out
cmp
inc
xchg
xor
dec
mov
call
sbb
movsl
scas
xor
or
xor
das
outsb
flds
or
call
push
push
mov
pop
lock
cmpb
icebp
fs
test
fs
cwtl
sbb
fbld
mov
into
cmp
sbb
mov
mov
and
mov
aaa
and
lds
negb
pop
daa
icebp
mov
add
fs
push
lcall
cmp
sub
and
push
jo
mov
insb
or
decl
pusha
lcall
in
inc
sub
mov
aaa
cli
add
jmp
popa
push
jl
iret
fdivp
mov
std
in
jo
sbb
sbb
test
enter
incl
adc
in
xor
clc
mov
addl
ret
mov
decl
shr
xchg
je
add
data16
aad
scas
pop
jl
fldl
pop
movsb
and
adc
dec
mov
enter
adc
pop
push
xchg
jle
cmp
jg
lcall
repz
adc
mov
add
sub
popa
cmpsb
adc
mov
ljmp
and
js
add
cli
xchg
mov
add
jne
aaa
mov
add
xor
mov
or
jg
lcall
sub
mov
or
aam
les
or
jmp
mov
xor
sub
inc
sub
pop
leave
dec
jbe
and
mov
push
mov
jne
or
out
pushl
push
int3
shrl
imul
sub
pop
pusha
loope
pop
frstor
sub
lcall
push
sub
mov
or
push
pop
hlt
filds
jle
inc
push
sbb
sub
cmpsl
aas
ljmp
xchg
adc
fdivr
clc
pop
int
decb
pushf
mov
das
rol
fs
iret
xchg
frstor
cld
mov
decl
and
shlb
or
rcrl
sub
rcl
xorl
jnp
bound
insl
mov
dec
add
sbb
or
mov
fwait
outsl
rolb
sar
das
js
or
and
popa
and
fsubl
sar
ja
fmuls
xchg
lock
pop
mov
pop
sbb
dec
aas
cmc
cwtl
movsl
in
push
xor
inc
jno
cmp
lock
dec
inc
or
inc
mov
xchg
mov
pop
sbb
icebp
cmpxchg
call
incl
fs
sbb
dec
inc
or
mov
jg
cltd
es
and
push
push
push
rcll
mov
aad
imul
mov
movsb
lret
inc
mov
jnp
imul
cs
insb
fcoml
test
lcall
incl
or
ret
pop
call
jne
sbb
add
inc
or
mov
xchg
inc
sbb
es
and
repnz
cld
test
jg
sub
getsec
xchg
mov
mov
idiv
ljmp
je
push
loop
mov
push
nop
mov
test
mov
jmp
jmp
add
and
aam
fisubl
sbb
xchg
mov
xor
pop
imul
loope
repnz
pop
mov
pop
dec
loop
andb
push
adc
mov
add
xor
pop
sarb
stc
cltd
repz
lcall
cltd
and
in
insb
push
cmpsl
dec
or
leave
cli
inc
add
xlat
jg
int
inc
cltd
cmp
dec
or
test
adc
bound
sbb
fdivrl
mov
add
call
mov
sahf
mov
push
mov
sbb
stos
cmp
sbb
popf
or
out
clc
mov
and
movsb
fdivs
jno
jle
cmp
fisttpll
push
xchg
push
sbb
dec
pop
sbb
ret
push
xchg
ret
fs
pushl
mov
and
add
ss
loopne
sub
and
incl
je
movsl
and
mov
or
push
sbb
xchg
mov
decl
clc
push
out
dec
xorb
lods
sbb
mov
jmp
cs
movsb
iret
lods
or
mov
push
cmp
repz
jg
cmc
rcr
jecxz
loop
adc
or
xchg
in
mov
dec
ljmp
adc
cmpsb
pop
rcrb
jmp
mov
jae
in
sbb
inc
scas
push
inc
or
xlat
shll
arpl
jl
insb
cmp
pop
jbe
cmpb
in
je
cmp
push
pop
xchg
arpl
std
decl
sbb
out
lahf
aad
mov
mov
dec
adc
dec
neg
inc
or
adc
cld
addl
xor
subb
mov
xor
or
pusha
push
les
push
push
imul
xor
ret
adc
adc
mov
jo
call
jge
xor
fs
test
in
push
nop
test
inc
arpl
inc
leave
jmp
xchg
loop
add
cmp
mov
sbb
or
cld
and
std
pop
mov
fdivrl
int
pop
jo
jmp
call
mov
cwtl
ljmp
xchg
aam
inc
loop
mov
dec
push
dec
dec
in
or
shlb
mov
sub
cltd
fs
add
ret
sub
add
es
fwait
xchg
enter
adcb
inc
dec
push
pushl
push
sbb
dec
mov
add
aad
push
sarb
ret
std
or
inc
or
or
fldenv
repnz
out
sbb
imul
push
nop
sahf
and
inc
sbb
sbb
call
jo
in
imul
push
add
mov
pop
adc
lock
add
call
stc
mov
insb
pop
test
pop
or
inc
mov
popa
mov
mov
call
cmp
sub
dec
inc
inc
stc
adc
test
inc
arpl
add
cmp
clc
fwait
insl
cld
pushl
pop
inc
or
lods
push
gs
cld
inc
adc
fisttps
orl
test
mov
jmp
std
cmp
loopne
test
dec
mov
andb
rorl
cmp
mov
idivb
or
pushf
or
call
push
insb
inc
insl
in
adc
add
lcall
cld
movb
inc
insb
or
or
push
loopne
or
addb
dec
cli
lcall
aam
in
leave
or
adc
dec
loop
or
push
pop
mov
rcll
cmp
outsl
addb
mov
sub
mov
aad
mov
or
aaa
cld
jl
mov
rcrl
pusha
ret
andb
incb
arpl
cmpsb
arpl
sub
xor
int3
inc
rorb
imul
faddl
data16
xchg
cmc
or
cmpsb
add
addl
call
fwait
xchg
and
es
mov
and
dec
shr
push
inc
push
scas
mov
addl
nop
cmc
loop
push
xor
insl
or
lret
add
pop
icebp
mov
add
nop
adc
or
clc
push
orb
std
adc
lret
xchg
insl
lret
flds
jg
sub
repnz
mov
cmpsl
fstl
sbb
clc
ret
jmp
sub
and
cmp
inc
in
sbb
filds
push
fsubl
bound
cltd
lock
pop
push
inc
ss
ret
sbb
repz
push
mov
shlb
mov
push
add
sbb
dec
push
lock
mov
cld
incl
dec
xor
repnz
add
lock
hlt
call
adc
mov
sbb
out
mov
add
mov
xchg
into
out
mov
fs
int3
loop
and
sub
add
dec
cmp
movsb
dec
push
mov
mov
pop
loopne
push
clc
mov
hlt
push
push
iret
bound
jl
outsl
cli
and
lret
adc
and
cmp
jmp
dec
xchg
adcb
jb
or
ss
push
pop
add
dec
pop
jmp
mov
loop
loope
dec
add
les
popa
mov
fdivrs
inc
std
ret
sub
mov
pop
sbb
mov
lcall
jl
pop
push
shll
stos
adc
sbb
out
test
push
mov
xchg
sub
jno
add
adc
cmpsb
inc
cld
dec
lret
orb
outsl
push
into
and
or
ficomps
bound
call
jns
mov
lea
into
inc
out
or
cs
cltd
sub
je
vmovaps
pop
mov
mov
or
jmp
cmp
ss
inc
lcall
sbb
arpl
dec
add
sub
pop
inc
push
push
aam
lahf
cmp
adc
push
inc
mov
dec
arpl
push
sbb
mov
scas
add
call
mov
sub
push
pop
mov
test
xchg
cli
jg
bswap
pop
xor
push
leave
push
add
lock
xchg
sbbb
mov
fwait
xchg
xchg
xor
mov
or
ret
in
in
lcall
add
ss
mov
add
ljmp
test
pop
movb
ret
mov
fwait
ljmp
incl
dec
lret
add
add
in
or
sub
mov
xchg
pusha
sti
sub
decl
and
loopne
ret
inc
rorl
rolb
push
leave
lock
mov
int3
add
and
popa
outsb
popa
sahf
sbb
cmovs
ds
mov
fwait
sub
out
out
call
push
adc
imul
pop
subb
insb
pop
jo
add
in
dec
push
into
mov
ljmp
and
and
call
enter
sbb
xchg
addl
clc
mov
jle
lcall
or
decl
or
rcrl
cs
lahf
push
das
xor
ljmp
mov
idiv
cmp
xor
js
mov
fwait
add
loop
fsubs
cmpsb
jno
cmpsl
cmp
incl
les
jne
mov
inc
insb
add
adc
in
das
mov
sar
push
xor
lahf
mov
fisubl
push
and
push
lock
arpl
insb
push
jl
fwait
mov
ja
fisttps
les
xchg
jl
add
lret
fs
adc
sar
mov
or
repnz
push
out
imul
out
repnz
sti
lock
sbb
dec
jp
scas
test
gs
adc
clc
and
and
push
mov
adc
sub
sbb
inc
adc
and
or
dec
xor
jp
shll
jno
inc
jmp
rol
in
iret
xchg
sub
sub
pop
fisttpl
sbb
es
decl
xor
lret
push
pop
shl
pop
inc
pop
loop
sbb
pop
stc
daa
cmp
jle
popf
orb
sbb
repnz
sbb
sbb
icebp
orl
repnz
rcrb
data16
push
add
xor
or
cmc
aad
icebp
mov
mov
sub
cli
lcall
or
in
out
or
fldenv
shrb
cmpsb
or
movsb
scas
xchg
mov
sbb
aaa
mov
das
xchg
mov
mov
aad
sbbl
adc
pop
add
stos
popf
out
sub
cmp
mov
in
add
and
jp
vcvtss2sd
data16
inc
add
push
mov
test
arpl
adc
fs
ljmp
in
rcrl
fsubrs
enter
add
adc
faddl
aaa
mov
ja
mov
mov
sarb
jle
lods
rolb
lock
mov
xor
repnz
js
fsubrl
std
fcomip
ffreep
pop
pop
das
pop
test
addr16
sub
sub
xor
pop
inc
or
push
push
pushl
or
test
aad
scas
xor
out
aaa
lods
shll
add
push
loopne
dec
mov
mov
push
movsl
lret
cwtl
inc
adc
sub
cmp
aam
push
mov
push
or
lcall
sub
aam
mov
cmp
imul
sub
daa
cltd
xor
jmp
pop
out
mov
sub
cltd
and
pop
sub
mov
std
jb
mov
sar
jmp
test
pop
mov
loop
jbe
lods
jne
sbb
sti
in
or
adc
pop
icebp
call
hlt
ret
mov
scas
inc
decl
mov
decl
inc
pop
mov
inc
ja
jne
out
xchg
rcrb
mov
or
or
push
add
sub
push
dec
loopne
xor
pusha
jo
ret
into
in
incl
inc
add
clc
pop
add
inc
pop
sbb
and
xor
add
or
xor
jg
in
mov
lret
rcrl
cmp
and
jg
test
mov
adc
in
decl
push
loopne
repz
xorl
adc
lcall
pushf
inc
cwtl
jle
dec
dec
shrb
pop
dec
movsb
or
mov
add
adc
insl
push
cmpsl
sbb
scas
mov
insl
loope
mov
sub
and
mov
mov
adc
cmpsb
lock
icebp
inc
sbb
mov
sbb
adc
lcall
jbe
out
fcoms
shlb
pop
and
sub
lcall
add
fldt
mov
xor
push
xor
shrl
and
jg
mov
dec
rorl
sub
ret
add
lds
repz
shl
xor
pop
push
in
movsl
pmulhuw
xor
push
cld
decl
aas
jp
insb
out
sbb
push
ret
dec
push
decb
add
dec
sarb
jmp
mov
and
decl
bound
inc
cld
das
xchg
fsubl
jno
fisttps
pop
cmp
mov
inc
ss
imul
popf
popf
pop
loope
pushl
and
push
and
clc
popa
mov
leave
pop
or
rcrl
movb
sarb
lods
hlt
xchg
inc
add
ljmp
mov
fdivrs
mov
lcall
push
cmpl
xor
mov
lcall
mov
ds
inc
add
repz
pop
sub
loopne
pop
test
leave
cld
ffreep
aas
mov
shl
mov
sub
lcall
add
cmp
or
sub
pop
sub
orl
and
or
jmp
add
sbb
repnz
push
sbb
xchg
mov
add
call
push
aam
xlat
loope
inc
popf
mov
push
mov
arpl
add
cmp
std
ljmp
out
aam
push
lods
xchg
shrb
xor
lcall
jg
imul
imul
dec
add
add
fwait
nop
push
call
movsb
orl
fmull
mov
les
xor
xor
iret
xor
ljmp
lea
jle
adc
mull
or
dec
movsl
cmpsl
in
sbb
lcall
sub
scas
scas
mov
or
popf
inc
in
cmp
fcom
jmp
ret
add
aas
pop
xchg
jnp
or
jg
call
sbb
ss
dec
in
mov
or
jo
dec
jg
test
mov
pushf
add
popl
lcall
pushf
fbld
mov
shll
add
ljmp
sbbb
inc
lds
std
mov
loopne
lds
add
loopne
fcomip
pushl
and
sbb
cmp
add
je
popa
inc
xchg
pop
pushl
test
adc
lea
cmp
fdivs
inc
cmp
push
and
nop
and
orb
test
test
test
dec
adc
and
cmc
dec
and
pop
clc
mov
ljmp
xor
enter
mov
lods
jmp
sbb
movsb
lea
icebp
incl
cmp
enter
andl
repnz
aaa
or
push
outsb
push
xor
mov
push
push
cmc
cmp
mov
fisttps
hlt
lcall
jmp
decb
mov
push
neg
xor
push
mov
mov
sbb
fdivl
ljmp
call
ds
pop
cmp
hlt
loopne
loope
pop
loope
adc
dec
jg
jecxz
inc
test
ficomps
iret
jl
fwait
ss
cli
jmp
sub
sub
lock
add
mov
cmp
lods
xor
int3
and
rclb
subb
bound
arpl
outsb
sbb
clc
push
ljmp
add
out
cli
fistpll
ret
dec
ret
adc
aas
push
pop
push
rolb
add
inc
pop
call
fisubl
xor
es
test
xchg
cmp
mov
fcomip
xchg
sbb
mov
jo
mov
adc
xorb
mov
dec
ljmp
ljmp
lahf
mov
mov
sti
adc
lret
sub
test
push
incb
xchg
movsb
in
cld
mov
ret
fistl
cmp
clc
lock
loope
sbb
add
jne
inc
hlt
mov
fistpl
ret
xchg
add
cli
mov
cvtpi2ps
lods
and
ljmp
or
adc
adc
lcall
push
jge
in
push
loope
xor
int
lock
in
andl
add
pusha
out
mov
jmp
stos
xorl
fldenv
push
push
cli
ljmp
call
xor
sub
dec
rclb
andb
jecxz
jo
cmp
movsl
xchg
fmuls
nop
lods
mov
push
add
pop
mov
in
pop
push
fcom
and
add
sbb
decl
int3
hlt
inc
movsl
das
jnp
dec
lods
cmp
int3
cs
mov
xchg
and
daa
pusha
call
in
inc
inc
arpl
jl
mov
pop
lret
lcall
shlb
stc
inc
and
bound
lock
cltd
mov
fiadds
mov
std
or
mov
fisttpl
mov
adc
sarl
repz
cmp
xchg
cwtl
sbb
inc
adc
incl
in
imul
stc
orl
adc
nop
loopne
pop
ljmp
inc
dec
adcb
data16
dec
inc
or
mov
add
cmp
add
mov
ja
add
das
out
jno
sbb
mov
lcall
imulb
add
or
sub
movsb
jl
xor
and
pushl
in
test
pop
js
cmpsl
adc
mov
dec
daa
int
xor
decl
pop
mov
ds
fstpl
add
mov
push
inc
int
pop
mov
fcomip
std
push
dec
pusha
arpl
xor
dec
jnp
jb
mov
inc
mov
ljmp
push
leave
andnps
sarb
lods
inc
or
das
fiaddl
and
pop
fadds
adc
sub
add
xchg
mov
pop
inc
add
lcall
cmp
and
sbb
pop
or
inc
test
lods
test
inc
and
test
and
or
xchg
leave
dec
add
jg
dec
xchg
add
inc
scas
ss
sbbl
inc
sbb
nop
add
push
xor
lods
and
jne
mov
xchg
mov
mov
cwtl
ret
and
rcl
rclb
sbb
xchg
inc
adc
das
adc
jo
rcrb
adc
pop
out
cwtl
push
js
xor
dec
and
add
push
rcr
inc
dec
jae
lahf
mov
cld
mov
or
ss
jns
and
ds
ficoml
push
sub
sub
repz
add
jmp
pop
and
divb
xchg
adcb
call
js
movb
xor
add
pushf
add
mov
mov
xchg
jo
xchg
or
dec
mov
adc
mov
outsb
push
insl
dec
popf
test
jmp
xchg
stos
jae
lcall
loopne
stos
inc
pop
fcmovbe
sub
arpl
sub
add
push
dec
jns
fiaddl
ljmp
or
popf
imul
movsb
test
jno
dec
jmp
xchg
pop
mov
pop
and
lret
or
cmpb
out
cli
je
imul
sqrtps
movsb
movsl
mov
and
jmp
sti
ljmp
push
mov
xchg
movsb
lods
mov
mov
or
xchg
push
aad
movsl
loop
jle
repnz
mov
fsubp
dec
shrb
mov
adc
inc
clc
mov
insb
les
in
mov
jo
xor
shlb
xchg
push
and
push
mov
pop
push
mov
clc
xchg
lcall
or
mov
das
jg
es
cmp
jg
inc
pushl
adc
pop
and
dec
ja
xchg
adc
jg
mov
fcoml
push
cmp
pushl
repnz
jl
insb
adc
jmp
push
adc
push
das
mov
sbb
add
ljmp
mov
dec
cltd
lret
push
mov
push
int
lock
xchg
sub
mov
decl
inc
in
rclb
in
dec
imul
pushf
xlat
mov
inc
outsl
nop
repz
scas
sub
jae
mov
xor
mov
lcall
insb
inc
jno
je
cmp
xor
outsl
mov
xchg
mov
insl
or
mov
je
sbb
decl
lea
mov
adc
or
nop
or
cs
inc
mov
mov
popa
mov
inc
jno
jecxz
out
ss
inc
mov
pushl
testb
add
push
gs
div
in
cmp
bound
enter
dec
loop
jmp
mov
out
mov
in
outsl
cmp
mov
decl
out
lret
popf
jns
test
shrb
pushf
insl
cmp
decl
decb
fwait
lods
testl
sub
mov
mov
fwait
dec
enter
add
mov
add
jle
jmp
push
lods
xlat
outsl
xor
jg
ljmp
jg
push
mov
outsb
pusha
xor
adc
sbb
push
xor
mov
ljmp
mov
lds
mov
lret
ds
mov
push
lahf
cli
mov
add
scas
loope
sbb
int
mov
push
add
mov
jecxz
xor
pushf
pop
test
jmp
sar
incl
pop
mov
xchg
cltd
inc
in
or
inc
cwtl
add
and
xchg
test
push
int
sub
scas
mov
mov
pushl
push
jno
xchg
insb
nop
shlb
fidivrs
test
das
les
ss
lcall
insl
fisubrl
decl
std
clc
imul
idiv
jmp
in
mov
add
push
add
test
sub
mov
dec
mov
add
dec
inc
adc
repnz
mov
push
xchg
test
ljmp
or
mov
mov
sub
ljmp
scas
adc
sbb
jl
jecxz
sub
lea
mov
jbe
sub
out
es
iret
push
ja
fistps
or
lahf
icebp
fincstp
loopne
out
mov
sbb
fisubrs
call
icebp
mov
loop
pushf
rolb
push
pop
sbb
sbb
pushf
loop
xchg
inc
in
jne
incl
popa
push
add
adc
xchg
iret
xchg
test
pop
adc
call
dec
mov
pop
outsb
xchg
out
jl
or
inc
xor
pop
cmp
or
jne
les
inc
decl
pop
pop
fsubrs
push
inc
cld
jecxz
decl
mov
adc
push
xor
push
add
sti
movsl
into
dec
mov
gs
call
or
lret
pop
fs
add
or
ljmp
add
mov
cmp
ffreep
sub
sbb
pop
insb
or
and
mov
test
loop
inc
insl
arpl
arpl
popa
adc
mov
lods
xor
mov
xor
adc
and
decl
mov
inc
adc
jo
or
in
pusha
mov
loopne
push
cli
or
sub
movsl
cmpb
icebp
decl
lret
sub
loop
push
xchg
mov
dec
mov
mov
imul
pop
add
cmp
popa
add
mov
into
loop
pop
push
ret
adc
add
fisttps
or
lcall
or
jbe
sub
pushf
out
jp
ret
les
dec
pop
add
incl
jno
pop
pop
and
movsb
mov
jo
bound
ja
and
ljmp
mov
lcall
outsb
mov
es
adc
push
sub
and
pushl
icebp
fs
into
push
jno
leave
sub
ret
subb
test
cmp
pop
out
loop
mov
or
outsl
addps
push
adc
push
lret
inc
lret
push
fs
inc
xor
data16
decl
adc
or
or
punpckhdq
test
jg
jl
add
insl
pop
shrb
push
dec
insl
ljmp
call
imul
mov
repnz
mov
in
mov
pop
dec
rcrl
shrl
cli
test
cmp
fnop
scas
in
fs
sbbl
mov
adc
cmpsb
add
testb
jmp
fs
sub
pop
es
push
orl
incl
push
sbb
mov
adc
pusha
data16
inc
add
add
lea
adc
pop
or
mov
addb
mul
decl
mov
and
cmp
mov
mov
fisttpll
test
call
mov
pop
scas
and
adc
dec
rclb
into
xchg
in
adc
inc
cmp
mov
dec
sub
call
pop
inc
jne
mov
mov
ret
psubw
push
push
xor
stos
incl
das
fucomi
pushf
xchg
pop
pushf
inc
inc
jl
adc
imulb
repz
sub
daa
cs
mov
sbb
xor
insl
cmpsb
xor
xor
xchg
xor
or
pop
xor
push
ret
xor
xchg
popa
pop
out
inc
adc
dec
push
dec
gs
inc
dec
aaa
leave
outsl
ljmp
das
int3
pusha
push
repz
inc
repz
pop
imul
adc
cmp
adc
jg
lcall
adc
and
jno
add
lds
aaa
sub
xchg
fadd
jmp
push
adc
jge
in
pusha
test
sub
push
jbe
scas
add
enter
mov
ja
pop
nop
outsl
and
sbb
sub
lods
fdivp
and
ljmp
rcrl
inc
jmp
call
push
and
pusha
not
aam
cmp
cld
sub
call
jb
adc
pop
mov
cs
inc
pop
and
ret
jnp
xlat
sbb
decl
je
movsb
or
inc
and
incl
aam
push
xor
nop
loop
cmp
ror
repnz
push
shl
enter
dec
xchg
and
call
test
fs
out
js
or
lret
or
loope
mov
ds
xchg
xchg
lret
sub
push
sbb
jne
aaa
shl
lcall
sub
or
mov
mov
mov
es
and
in
dec
xor
adc
out
push
and
cmp
loopne
push
fstps
xchg
xchg
mov
pop
xor
sarb
xchg
clc
dec
fcmovnb
das
stc
cs
sahf
dec
pushl
add
in
jo
dec
add
adc
push
push
mov
rcll
roll
push
push
sbb
push
cmpsb
xor
push
xor
push
push
test
rcll
ss
aad
pop
xchg
push
imul
adc
jne
push
jne
xchg
xchg
pop
cmpsl
adc
mov
pop
push
cmp
xchg
ss
adc
xor
mov
xor
lock
xor
enter
jg
aaa
sub
out
fsub
sbb
inc
arpl
mov
jnp
loop
cmc
jmp
xor
add
dec
push
lods
cli
decl
lock
out
aam
adc
xor
inc
pushl
add
mov
ljmp
or
pushf
sub
xlat
scas
cmpsb
pop
mov
mov
idiv
fcomip
aad
add
insb
jge
xchg
lret
cs
push
pop
arpl
insb
and
inc
or
and
scas
cli
jmp
push
jo,pn
mov
stos
and
mov
das
adc
xor
mov
daa
mov
mov
insl
sub
sub
mov
sub
mov
pop
dec
loop
and
mov
aam
mov
sub
es
mov
sub
push
clc
decl
leave
xor
push
or
lahf
push
or
adc
scas
xchg
inc
das
ljmp
adc
pop
lock
incl
sub
in
pop
cmp
divb
scas
sbb
and
lods
adc
adc
mov
inc
outsl
adc
cld
push
push
fildll
mov
daa
pusha
or
imul
mov
cli
inc
lock
nop
ja
adc
imul
aaa
js
push
jns
pop
jmp
addb
jne
mov
mov
pop
xchg
out
clc
pushl
ja
jne
pop
xlat
outsl
push
xor
jns
push
outsl
xchg
jl
jl
addl
inc
xor
cmpsl
jb
and
subl
jg
jg
inc
outsl
dec
cmpb
gs
das
int
dec
xchg
sbb
inc
inc
rorl
decl
and
or
das
sti
sbb
scas
and
clc
icebp
xor
mov
xchg
rolb
aam
nop
loope
and
jmp
pop
and
and
or
movsb
or
cmc
fisttps
xorb
dec
sub
and
leave
sub
lock
dec
add
test
push
xor
xor
mov
lcall
and
mov
cmc
bound
pusha
adc
inc
adc
rcr
call
lods
fmuls
sub
lock
mov
xchg
mov
jg
test
and
nop
mov
xchg
hlt
xchg
jecxz
push
dec
mov
outsb
jecxz
cs
pushl
push
xor
push
ret
clc
xor
dec
inc
add
adc
push
shll
lock
outsl
clc
aaa
cwtl
rolb
lahf
push
jae
xor
inc
add
mov
into
dec
jo
popl
setns
inc
ja
das
sar
jae
and
pop
enter
dec
jb
or
pusha
xchg
mov
pop
pop
xchg
gs
insl
sbb
std
jns
imul
cld
xchg
sub
cs
xchg
cli
lcall
sub
fsts
sbb
mov
mov
mov
sbb
pop
fwait
mov
loope
inc
mov
sub
inc
push
fmuls
shrb
pushl
imul
and
inc
or
insb
imul
bound
shr
jmp
fisubs
das
xor
and
jo
cmpb
outsl
or
and
out
sbb
decl
sub
loope
sbb
fs
inc
pop
sahf
inc
stc
mov
or
and
ljmp
enter
sub
push
inc
movsl
call
cmpsb
hlt
jle
and
lea
inc
loop
mov
fcomip
add
rcrb
nop
add
shlb
into
insl
dec
iret
insl
frstor
mov
mov
mov
adc
jecxz
pusha
nop
xor
call
jmp
inc
and
push
sbb
aaa
mov
lock
leave
mov
cmp
fnstcw
dec
arpl
mov
scas
ret
out
ficoms
xor
pusha
mov
sar
call
jp
bnd
pop
out
or
xor
adc
rep
idivl
or
push
or
xor
xchg
or
mov
mov
outsl
or
lcall
fwait
adc
sti
out
mov
mov
fildl
mov
and
addb
xchg
pop
lret
adc
orl
jg
ljmp
cmp
cmp
mov
fstpt
popf
xchg
leave
je
mov
lock
int3
and
pushf
cmpsl
mov
dec
add
stc
xchg
mov
sbb
adc
ljmp
adc
pushf
add
mov
or
cmp
mov
pop
adc
fcomip
movd
pop
cld
or
sbb
cwtl
adc
pop
push
lea
test
xor
incl
fcmovb
jl
xchg
out
mov
inc
or
sbb
dec
testl
sbb
mov
pop
ljmp
xchg
cli
es
lods
add
mov
fcoml
lock
mov
and
lcall
lea
adc
lods
and
mov
imul
cmp
mov
stos
ret
mov
add
cmp
or
jle
mov
rclb
adc
nop
adc
pop
and
lcall
or
push
inc
or
pop
push
call
push
jo
lods
inc
or
outsl
dec
jno
pushf
mov
pop
int3
or
jno
pop
and
and
jmp
adc
movsb
push
pop
pop
sbb
call
sbb
xor
sbb
cmp
cmpl
sub
sub
cmc
adc
pop
aam
add
pop
imul
sbb
addb
sbb
outsl
aaa
leave
into
stc
push
fimull
icebp
pop
lret
imul
scas
test
mov
push
sub
pushf
popa
xlat
and
int
incl
test
bound
pushf
movsl
stc
iret
xor
rcl
cmp
ret
arpl
imul
or
sub
jl
dec
mov
pop
sbb
decl
add
shrb
and
or
enter
es
vpunpcklwd
int3
jge
jle
sbb
push
stos
mov
scas
or
in
aam
fistpl
out
aam
loop
ljmp
xchg
dec
jno
insl
or
cmp
push
dec
rorb
mov
cltd
jmp
incl
pop
cmp
jne
or
and
jnp,pt
sub
jne
xor
outsl
sub
inc
add
pop
int3
dec
loop
dec
ret
das
and
xchg
in
mov
or
xchg
push
ljmp
cmp
incl
adc
push
in
lret
push
sub
fdivrl
or
aad
jo
lods
leave
dec
popf
push
sub
call
popf
dec
repnz
mov
push
stc
inc
push
aad
and
les
clc
decl
cwtl
pop
cmp
mov
insl
jmp
add
sbb
push
jbe
sbb
inc
add
jmp
xchg
movsb
sub
mov
cmpsl
jp
mov
scas
dec
mov
cmpsb
call
loopne
loopne
jmp
popa
adc
inc
lds
test
dec
mov
outsb
lret
clc
test
xor
arpl
call
mov
fdivrl
int3
mov
push
arpl
imul
or
call
les
imul
cmp
jecxz
adc
xchg
idiv
mov
fwait
push
dec
std
fsubrs
mov
pop
dec
ljmp
pop
shl
mov
add
xchg
mov
jo
xchg
xor
shll
inc
sbb
inc
mov
lcall
pushl
ret
or
in
or
jl
shlb
or
mov
xchg
ficompl
cmp
fidivrl
dec
fs
or
ja
aam
test
jmp
mov
cmp
stos
shr
push
stos
pop
test
sbbl
jl
xor
dec
lcall
imul
or
mov
shl
jmp
push
pusha
out
fdivrp
pop
add
pop
mov
int3
fildll
or
dec
js
orb
mov
lock
lcall
clc
or
mov
sbb
sbb
sub
cs
cli
ljmp
dec
iret
mov
cmpsb
mov
hlt
jne
fmuls
repz
jns
xchg
repnz
fdivr
mov
jmp
xchg
ret
jg
out
lods
cmp
lds
push
ds
mov
fidivrl
sbb
lahf
cmp
ret
jnp
cwtl
xor
cwtl
jmp
sbb
es
xor
pop
loope
pop
add
push
cmp
ds
cwtl
loope
and
sub
addr16
jno
cmp
adcb
inc
addr16
test
mov
cmc
in
call
push
cmpsb
jl
js
mov
and
and
or
aaa
decb
repnz
dec
cmp
mov
xchg
ds
gs
push
dec
dec
gs
push
adc
cmp
adc
xchg
add
jo,pt
movsl
dec
pop
inc
or
xchg
jle
cmc
push
cmpb
cld
jne
gs
std
lcall
daa
fwait
jne
cltd
rcrl
sahf
aad
in
je
test
push
sbb
push
jne
pusha
push
inc
push
cmp
add
push
test
fwait
fs
jmp
cmp
lds
pop
mov
insl
cld
adc
fsubs
cmc
rcr
arpl
call
inc
xchg
sub
andl
aad
insw
lods
inc
insb
mov
test
fldenv
jno
aad
aam
ljmp
test
decb
inc
sbb
call
cwtl
jae
xor
pushf
bound
mov
out
adc
mov
pop
jne
fcomp
sbb
es
push
add
cmc
jp
jp
push
insb
xchg
mov
xchg
and
ljmp
in
sub
ds
xor
fs
or
xchg
std
mov
andb
dec
dec
scas
jbe
clc
add
lret
or
or
call
repz
fisttpl
jmp
adc
pushf
lds
mov
sarb
ret
out
shll
jno
rorb
dec
les
test
push
pushl
mov
aad
out
add
jns
popf
jne
adc
sub
jmp
pushf
add
adc
or
sub
neg
xor
dec
pop
fisttpl
lods
jbe
xchg
lods
or
inc
push
jbe
fistpll
mov
fimull
cs
jbe
jns
jmp
mov
adc
fsubrs
add
ja
pushf
xchg
jmp
lods
mov
call
mov
jne
inc
call
pop
cmp
test
clc
cmp
ljmp
aaa
push
pop
and
mov
dec
add
push
fmuls
add
outsl
daa
hlt
rorb
pop
idivb
fdivrl
jge
fdivl
xor
fsub
roll
cld
incl
rolb
sti
or
sarb
xchg
sub
or
jg
mov
lods
insb
int3
add
lods
jo
iret
cmp
add
push
orl
or
dec
ljmp
adc
in
lock
jb
push
mov
addl
dec
int3
or
inc
jmp
popa
push
adc
movq
je
cmpsb
jo
add
and
inc
clc
fwait
shlb
es
jmp
sbb
push
jl
inc
packsswb
scas
js
inc
rorb
cltd
add
lcall
daa
xor
loop
cli
mov
xor
sub
sbb
aad
xor
out
call
or
inc
dec
sbb
push
aaa
xchg
jle
dec
das
imul
lret
mov
fmul
add
xor
gs
sbb
inc
and
mov
mov
les
xor
adc
or
xchg
and
lds
out
dec
jns
lock
cmp
jge
push
push
sub
dec
leave
rcrb
sbb
jg
enter
or
sbb
stos
push
stos
int3
mov
mov
sub
jg
test
jecxz
inc
jo,pn
insl
push
addl
jmp
ljmp
lret
int
xor
test
add
pop
push
mov
orl
sbb
sahf
xor
adc
or
es
movsb
cmp
adc
mov
inc
je
xchg
arpl
fcomps
loopne
sbbb
nop
sub
cmpsl
mov
arpl
mov
lds
call
push
inc
mov
ja
inc
add
dec
jle
fadd
call
push
dec
xor
add
bound
movsl
sti
pop
in
ja
je
enter
ljmp
ret
inc
std
out
add
inc
insl
lds
lea
movsl
data16
lret
mov
mov
add
pop
sub
clc
pushl
or
sbb
ss
stos
stos
xor
xlat
mov
mov
jmp
pop
gs
fimuls
xlat
pop
add
dec
ret
incb
das
nop
movsl
inc
dec
and
xor
insb
pop
lcall
sbb
movsb
push
adc
or
mov
lcall
jo
cmpsl
cwtl
adc
cmp
jg
aam
insb
or
pop
sub
pop
pop
cwtl
test
pop
es
js
rol
test
add
jne
dec
push
cmc
pusha
je
mov
cwtl
inc
xchg
push
mov
push
inc
int
cmp
loope
out
or
jmp
bound
fsts
fcomp
in
rolb
out
fwait
push
lahf
lods
xor
jg
mov
sbb
lea
imul
pop
es
lods
xchg
in
fs
lcall
cmp
add
xchg
outsb
jns
sbb
nop
fists
jbe
jmp
cmp
push
mov
cmpsl
sub
adc
repnz
std
mov
cmp
and
lods
xchg
aad
push
test
xchg
scas
rol
add
jne
ljmp
decl
pop
cmp
sbb
repnz
xor
bound
test
push
cld
dec
les
fs
loopne
adc
push
ljmp
cld
dec
fs
dec
subl
mov
dec
mov
fldt
icebp
jbe
ret
loopne
or
lcall
sbb
jl
mov
movsl
mov
pop
sti
lds
pop
sub
aam
add
call
inc
adc
jbe
lods
mov
inc
xchg
push
push
cmp
jnp
pop
cmp
cmp
or
xchg
fidivrs
adc
push
aaa
stos
add
pop
jbe
mov
xchg
push
aaa
ret
stos
in
add
dec
sub
push
test
xchg
mov
pushl
rcr
cmp
push
insb
mov
or
stc
scas
and
mov
stc
daa
popf
mov
cmc
jg
orb
inc
movsl
or
lret
insb
jecxz
in
inc
add
xchg
lock
xchg
and
in
or
xlat
call
orl
addl
mov
decl
call
mov
pop
mov
sbb
xor
mov
dec
das
pop
or
in
fisttpll
lcall
sbb
popf
xchg
cmp
mov
inc
repz
orl
outsl
dec
call
sub
enter
test
mov
cmp
mov
cmp
xorl
jle
leave
call
or
mov
mov
fsubrs
rcrl
in
mov
sbb
movsb
stos
mov
loopne
mov
fidivl
scas
dec
push
lds
cmp
out
lock
bound
push
lods
int
dec
test
in
adc
jne
xor
sub
clc
ljmp
adc
or
and
jmp
loopne
cmp
mov
mov
enter
dec
pop
pushl
sar
and
sbbb
dec
mov
fsqrt
mov
scas
mov
int3
inc
cmp
push
mov
inc
mov
in
pop
cs
xchg
ret
mov
cmp
mov
pop
std
mov
ds
sti
push
loop
pop
test
mov
sbb
je
stos
or
sub
dec
mov
dec
imul
sbb
test
push
and
xor
scas
cli
ljmp
stos
out
push
ret
stc
pop
addr16
out
gs
aaa
ja
clc
daa
rol
adc
jg
mov
pop
and
ja
mov
adc
shll
jbe
decl
xor
add
loopne
inc
push
cmp
xchg
js
mov
adc
push
push
pop
outsl
std
sar
incl
mov
jecxz
bound
fidivs
incl
pusha
xlat
addr16
pop
lods
inc
test
push
jo
jp
xlat
adc
leave
adc
incl
mov
jne
inc
cmp
fcoms
mov
addr16
loope
imul
loope
call
test
sahf
hlt
dec
sbb
cwtl
je
mov
lcall
pushl
arpl
test
and
add
cmp
push
push
sub
add
mov
add
jno
mov
pushl
loope
popa
xchg
pop
xor
dec
push
adc
fisubl
mov
je
mov
enter
add
ss
xchg
bound
test
mov
mov
cwtl
mov
data16
push
notb
sti
call
cmpsl
orl
dec
js
xor
jnp
xor
push
inc
and
subl
jnp
hlt
pop
push
push
xor
inc
pop
sbb
mov
push
js
call
mov
enter
cmpsl
push
add
les
mov
pusha
fdivr
xchg
mov
push
aaa
cld
mov
sub
aaa
dec
mov
cmp
dec
scas
jbe
pop
xchg
mov
jmp
cmp
jge
rolb
cmpsb
dec
je
mov
inc
dec
push
jbe
or
jg
push
sub
xchg
inc
push
mov
insl
ret
jb
clc
movb
jg
push
sbb
push
push
pop
hlt
or
jmp
add
test
ljmp
fs
jp
push
rclb
jne
sbbl
jg
inc
mov
js
clc
jp
cmc
pop
xor
dec
js
fwait
mov
test
call
gs
mov
push
dec
shll
and
repz
ret
mov
xchg
mov
lret
mov
or
nop
popa
sar
lcall
pop
jg
mov
in
nop
dec
push
clc
aaa
pop
jb
mov
sub
call
mov
jge
popa
dec
mov
cld
movl
decl
add
mov
add
xchg
push
fld
jmp
pop
mov
push
sbb
xchg
jp
pop
or
test
push
xchg
mov
call
or
jb
inc
iret
mov
int
inc
push
call
adc
and
out
lea
gs
lds
dec
xchg
inc
and
dec
mov
fs
mulb
aaa
clc
xchg
adc
xchg
push
popf
test
call
cwtl
mov
hlt
lahf
fidivrl
pop
addb
add
popf
xchg
jmp
imul
jle
inc
dec
pushf
rclb
push
push
sub
jg
xor
push
cmpsb
xchg
xchg
xor
dec
nop
jg
rolb
jg
sbb
imul
mov
cltd
dec
sub
xor
or
xor
inc
fwait
lret
cmp
xor
call
add
je
mov
orb
fs
fwait
pop
pop
stos
add
out
clc
sub
cltd
dec
adcb
inc
pushf
add
xchg
push
inc
push
fcmove
pop
scas
decl
stos
into
or
push
inc
cmpsl
out
adc
push
mov
cmpsb
enter
pushf
xchg
xchg
add
xchg
xchg
sahf
outsb
incl
push
cmp
mov
and
sahf
in
fisubs
cltd
test
cmp
sub
fcmovbe
dec
mov
loope
push
mov
sub
dec
daa
popf
enter
stos
dec
mov
inc
mov
subl
idiv
pop
jp
sbb
orl
dec
sub
shrl
std
pop
inc
push
sbbl
jg
sbb
push
mov
and
lcall
mull
cmp
inc
sub
pushf
add
lahf
in
leave
jp
lret
add
xchg
fisttps
es
sahf
jns
jnp
je
push
scas
adc
jae
incl
out
push
push
jnp
jno
fidivl
cmpl
inc
call
scas
sub
nop
mov
pop
sbb
jae
js
jp
cltd
mov
mov
push
mov
push
cmc
push
negl
lret
add
lods
test
jp
mov
mov
mov
jg
push
ret
mov
push
sbb
popa
je
jae
sti
dec
shll
or
add
and
outsl
cmc
stos
lods
outsl
xor
insl
mov
dec
mov
call
popa
ss
mov
leave
pushl
xor
push
pop
test
pop
stos
scas
xor
ljmp
in
cmp
cmp
test
mov
addb
inc
fdivrp
lcall
cmpsl
cmpsl
inc
or
adc
add
mov
push
xchg
push
dec
push
push
mov
jecxz
scas
cli
cmp
add
push
nop
adc
mov
aas
mull
jo
into
ficoml
inc
popf
call
jmp
fwait
push
pop
jbe
pop
pop
push
cmp
in
cmp
mov
cmp
or
pop
ja
add
ss
ret
mov
xor
lret
es
lds
fidivrs
xor
outsl
fistps
iret
cwtl
push
mov
mov
aas
inc
xor
xlat
mov
mov
or
in
jmp
mov
mov
ret
xor
jmp
mov
add
mov
mov
mov
enter
ss
ret
loop
fwait
insb
and
xchg
aam
sbb
dec
mov
or
and
adc
xor
jno
adc
rcrb
addb
xor
shll
dec
ss
mov
sbbl
mov
popa
fwait
js
cmp
rol
jbe
addl
add
add
addl
inc
push
cs
in
in
add
sti
repz
and
and
lret
mov
adc
fstpt
dec
cmp
cld
das
mov
sbb
imul
xor
jl,pn
mov
sub
adc
divl
pop
push
fistps
mov
mov
mov
pop
mov
nop
jp
imul
sti
adcl
xlat
and
jo
ss
adc
inc
xchg
push
pop
push
pusha
rorl
pop
push
lods
push
push
dec
push
push
shrb
push
mov
mov
inc
fistl
pushw
jge
test
negl
pusha
sub
push
push
push
addb
das
pop
rcr
out
testb
sbb
jecxz
add
or
fisubrs
fisubl
fs
imulb
add
inc
test
add
xor
nop
mov
or
sub
js
add
inc
and
mov
call
cmp
mov
das
add
fimull
xorb
or
push
test
jno
test
test
or
mov
loopne
cs
mov
jnp
scas
in
jo,pn
jno
enter
js
push
lock
fldenv
in
dec
jnp,pn
pushl
test
bound
fcomps
cs
adc
jns
jbe
or
xchg
inc
cs
xor
stos
sub
and
cltd
fdiv
pop
and
loope
adc
jg
scas
xor
mov
inc
roll
pop
pushf
loopne
inc
mov
mov
lock
lock
adc
mov
das
jb
popf
out
mov
lds
in
jo
and
adc
dec
inc
add
jo
outsl
add
mov
mov
push
cwtl
adc
sarb
add
inc
cmp
mov
jae
mov
xchg
cmpsb
adc
mov
pop
dec
jae
cmp
pushf
or
aas
or
inc
roll
mov
outsl
mov
into
xchg
lock
pop
lcall
nop
mov
xor
add
nop
outsb
fildl
out
outsb
das
stc
mov
pop
enter
aam
aam
and
cltd
inc
inc
dec
adc
pop
fwait
adc
jne
lock
lcall
aaa
shrb
or
add
and
mov
aas
pop
enter
adc
inc
xchg
mov
ficompl
dec
adc
pop
and
and
sbb
fisubrl
test
mov
loope
add
jo
pop
push
loopne
jae
mov
das
add
add
nop
dec
psubsb
jecxz
rorb
subb
add
loop
push
pop
inc
call
imul
inc
mov
add
adc
dec
lock
dec
mov
nop
clc
inc
adc
cmp
pop
daa
test
and
outsl
inc
stc
fbld
sahf
outsl
and
icebp
add
sbb
enter
push
jo
pop
lods
mov
das
mov
or
stc
orl
jo
jns
std
push
cld
dec
push
dec
and
mov
add
mov
sub
cs
enter
jo
das
pop
shlb
add
sbb
mov
sar
pop
in
jbe
and
jns
jecxz
add
leave
movl
cmpsl
enter
mov
enter
dec
add
inc
lock
inc
sbb
enter
nop
cs
cmp
ret
adc
nop
int
add
adc
daa
rcrb
scas
out
mov
aad
push
add
pop
pop
xlat
push
push
pop
pop
adc
andl
mov
aam
inc
mov
mov
push
pop
mov
adc
iret
push
xor
add
xor
movsb
cmp
iret
mov
cmpsb
fsubs
aaa
outsl
fcoms
movsl
nop
out
xor
mov
cs
push
or
pusha
outsl
mov
add
cmp
and
jno
sbb
cmp
cmp
jbe
fstps
cmp
imul
mov
add
iret
adc
sbbl
and
mov
jmp
fsubs
pushl
xor
nop
cmp
cmpsl
cmp
cs
cmp
dec
loopne
add
xor
dec
adc
sbb
add
jae
je,pn
push
insb
and
aas
or
and
inc
inc
xor
es
adc
ds
add
add
adcl
mov
inc
jle
push
mov
dec
mov
add
aas
xchg
pop
push
out
das
push
jp
fwait
int
pop
push
dec
jl
test
mov
out
pop
push
loope
push
in
out
repz
push
jo
push
pop
ss
sub
insl
loopne
xlat
iret
aas
ss
xor
xor
fnstcw
dec
sub
cmp
shll
xor
inc
cwtl
push
pop
dec
push
pop
fistl
rcrl
push
push
lcall
and
xchg
inc
jb
xlat
cmp
push
mov
lock
cmpsb
lock
in
add
rolb
lock
xor
pop
scas
mov
push
test
jo
push
icebp
push
lock
pusha
pop
pop
or
pop
xchg
mov
mov
aad
shll
mov
shr
mov
mov
ja
push
xchg
pushf
mov
or
mov
push
fidivs
sub
pushf
stos
push
add
xchg
push
inc
aam
mov
jno
imul
in
xchg
sub
and
pushf
ljmp
push
clc
pushf
xchg
push
xchg
pusha
clc
pusha
hlt
shlb
and
push
fldenv
push
adcb
adc
and
not
xchg
fs
into
popl
mov
inc
push
mov
push
xor
lock
jns
mov
loopne
es
das
mov
push
jo
fs
out
pushl
pop
fwait
add
xorl
repz
popa
push
push
xchg
imul
incb
imull
mov
push
adc
fwait
mov
scas
call
lds
mov
xlat
xor
mov
mov
mov
cmp
pop
out
push
rcrb
out
imul
es
add
es
adc
aaa
clc
loop
pushl
outsl
and
into
in
inc
adc
sti
mov
push
lea
es
adc
cltd
out
lret
jg
ss
push
out
add
add
xchg
sarb
loope
or
and
decl
push
test
rolb
out
push
movsb
mov
out
xchg
pop
push
ret
add
out
sbb
fs
pop
gs
and
cltd
sahf
mov
push
adc
inc
aad
push
enter
loop
lock
dec
fcoml
repnz
inc
adc
das
cmpsb
sbb
xor
lea
aas
js
pop
loop
push
pusha
dec
mov
rorb
loopne
mov
rclb
add
aas
faddl
mov
or
and
add
inc
addl
xor
xor
test
mov
aas
inc
popl
test
movups
out
lock
inc
or
pop
orb
sahf
jg
push
jmp
das
test
inc
pop
js
inc
decl
dec
inc
mov
stos
and
push
dec
fldt
das
add
mov
sbbb
mov
xor
lods
jl
adc
inc
inc
int3
sbb
inc
nop
xor
xor
int
jnp
fwait
and
sbb
dec
notl
pushf
insl
mov
push
nop
push
xchg
and
mov
ss
pusha
mov
or
mov
lcall
cwtl
adc
mul
cmpsl
push
xor
lods
inc
pop
mov
sbb
out
mov
inc
outsl
loopne
mov
sbb
jns
test
scas
mov
or
adc
jo
add
mov
test
add
rclb
hlt
inc
mov
jo
jg
das
inc
add
add
shrb
add
loopne
sub
inc
pop
jns
in
add
xor
add
aaa
or
movsb
add
pop
cltd
push
sarl
data16
movsb
mov
adc
adc
sbb
shr
dec
fwait
nop
inc
mov
cli
jmp
pusha
xchg
inc
fbld
mov
scas
inc
sets
cmp
xchg
jo
push
xchg
aas
and
sub
jo
jg
roll
mov
xchg
dec
jmp
loopne
subb
cwtl
inc
mov
test
xchg
cs
mov
jns
shr
push
mov
sbb
inc
jle
ss
and
push
sbb
pushf
inc
lock
nop
cltd
pop
or
out
push
inc
mov
sbb
mov
nop
add
or
roll
shlb
xchg
aaa
shl
inc
outsl
push
adc
out
inc
das
repnz
in
pop
pop
popa
pop
popa
dec
sahf
cmp
inc
inc
jo
daa
out
dec
sahf
inc
inc
inc
cs
xor
dec
fisubs
cs
pop
leave
jae
push
push
push
dec
adc
push
leave
xor
push
mov
inc
leave
leave
jae
rorb
cltd
in
jae
dec
and
dec
in
in
dec
push
pop
pop
in
mov
mov
in
mov
repnz
repnz
inc
repnz
pusha
jl
mov
aas
nop
ljmp
in
pop
add
jo
test
stc
inc
test
xchg
mov
inc
pop
out
cs
inc
jg
je,pn
and
ljmp
inc
dec
push
out
cmpb
das
aas
pusha
dec
push
jns
das
pop
pop
add
pop
mov
lahf
leave
leave
jae
shrb
lock
fnsave
pop
pop
jo
pop
sub
pushf
xchg
pop
and
add
loop
ret
pop
clts
jg
xor
or
inc
dec
rorb
inc
pop
adc
inc
aas
loopne
or
addb
movaps
cwtl
les
jo
pop
mov
mov
ficoms
inc
out
add
das
push
mov
adc
xor
adc
inc
iret
cs
subb
sbb
les
in
push
incb
inc
aaa
inc
sbb
mov
mov
sub
adc
add
sbb
pusha
and
inc
add
iret
add
fwait
and
push
sbb
iret
adc
iret
xor
loopne
ss
iret
inc
seto
mov
push
sub
and
lahf
lds
popa
xor
mov
and
daa
mov
mov
and
incb
pop
lcall
cmp
jno
mov
inc
cs
and
inc
scas
mov
outsl
es
lock
and
sub
andb
enter
pop
inc
dec
rolb
and
and
inc
mov
aaa
jb
inc
jo
pop
and
jns
sub
clc
int
mov
inc
fiadds
inc
add
repz
insl
fisubl
push
adc
pop
add
shrb
cmp
inc
into
pop
lahf
jge
sbb
pusha
fists
sub
repnz
clc
jo
dec
test
or
imul
call
inc
das
das
mov
loopne
sbb
push
sbb
inc
adc
pusha
xor
add
inc
pop
mov
push
dec
dec
push
add
add
outsl
and
lock
mov
hlt
mov
test
aaa
pop
pop
sub
outsl
mov
js
jo
push
ds
std
in
sbb
inc
das
cmp
testb
sarb
lahf
adc
sarb
add
shr
cmp
das
inc
inc
pop
enter
mov
pop
xor
mov
fwait
xor
cmp
push
lock
or
sti
in
mov
daa
mov
push
ds
dec
and
and
rclb
push
xor
xor
push
mov
leave
or
pop
mov
dec
inc
sar
pusha
adc
and
xor
outsl
loope
lock
sarb
insl
fistps
and
fcmovu
lock
xchg
adc
pop
pop
mov
pop
xchg
mov
pop
adc
lahf
dec
aaa
leave
adc
dec
loopne
lock
iret
mov
ds
pusha
inc
out
movsb
sbb
stos
movsb
inc
scas
pop
jae
fst
scas
sbbb
mull
jo
dec
mov
test
loop
push
movsb
push
or
jae
cmp
inc
jmp
out
cmp
subb
enter
je
and
lahf
pusha
push
subb
lock
pop
and
iret
cld
cwtl
mov
xchg
sub
nop
shr
xchg
out
loopne
aas
sti
mov
and
nop
inc
add
loopne
adc
push
or
jbe
insb
mov
or
sub
push
aaa
aas
mov
push
gs
jb
pop
adc
aas
rcrl
mov
inc
push
push
imul
push
daa
xor
adc
jae
out
fldl
pop
push
push
pop
jp
jecxz
imul
test
out
pop
and
or
addb
mov
sbb
mov
cmp
incl
popa
push
or
scas
int
adc
outsb
popa
stc
push
mov
xor
adc
fstps
test
and
jp
jnp
fidivl
les
nop
add
pop
add
dec
sub
leave
dec
fidivrs
or
cld
push
shll
mov
adc
pusha
add
and
cmpsb
and
push
push
adc
shrl
fldl
jnp
jbe
jecxz
adc
gs
cmpsl
clc
adc
jne
push
dec
cmpsl
or
ret
mulb
push
cmpsl
mov
leave
and
sub
and
flds
or
push
push
iret
mov
int3
push
test
jg
push
xchg
mov
sahf
fsin
orps
fucomi
mov
jbe
fcompl
in
or
adc
les
push
cmp
lea
sub
data16
bound
add
dec
fwait
inc
adc
jmp
mov
fadd
jg
sbb
pcmpgtw
frstor
mov
std
push
pop
ret
fcmovbe
lods
pop
dec
sub
inc
add
push
pusha
inc
sub
adc
adc
sbb
or
jnp
adc
inc
rcr
sbb
or
mov
stc
sbb
or
pop
outsl
cmp
sbb
mov
repz
jno
add
jl
cmpsl
stc
sbb
xchg
fildll
je
sahf
out
iret
sbb
loop
idivb
cmpsl
stc
push
push
jg
inc
jg
and
mov
jmp
js
stc
xor
dec
sbb
bnd
cwtl
negl
jp
aad
dec
add
sbb
lea
bnd
and
jns
scas
fcomps
mov
dec
ja
mov
sub
out
imull
addl
dec
sbb
loopne
pop
test
sbb
mov
sarb
rcll
and
xor
jnp
fldcw
add
or
mov
leave
out
das
imul
into
xchg
insb
xor
adc
xor
dec
add
jl
pusha
and
push
sbb
xchg
dec
sub
adcb
adc
rclb
jecxz
or
jnp
loop
loope
push
cmp
push
lfs
dec
jnp
jecxz
hlt
outsb
xchg
iret
orl
xor
test
jle
das
xor
and
xor
mov
xor
sub
xor
mov
inc
dec
out
add
add
jnp
xchg
jo
mov
dec
xchg
stos
loopne
jns
adc
lds
dec
cs
lcall
scas
push
cwtl
nop
jnp,pn
inc
test
cs
inc
lcall
popf
out
sahf
mov
push
scas
sub
sahf
push
aad
jge
jle
mov
inc
inc
inc
sbb
mull
jnp,pn
inc
xchg
and
xchg
lods
and
xor
xlat
lahf
xor
push
or
push
pop
ret
ja
add
jbe
mov
fs
mov
cmp
iret
roll
adc
adc
jge
mov
pop
movl
addr16
cmp
push
adc
add
mov
aas
add
mov
jnp
dec
adc
dec
fmuls
mov
orb
lret
push
inc
xchg
int
mov
inc
in
xor
shlb
scas
sub
add
sarl
sbb
mov
xor
xchg
or
pusha
cmpsl
jo
fbld
sub
or
in
outsb
punpckldq
fistps
jo
stos
xchg
cmpsb
cmp
xchg
dec
dec
cwtl
jo
aad
push
vpmacsdqh
sbb
das
jae
int
cs
mov
leave
cltd
xor
sahf
push
cmpl
in
jne
mov
jmp
sbb
das
sahf
loopne
lahf
xlat
jl
cmpsl
sbb
dec
xchg
mov
mov
test
popf
inc
dec
push
enter
and
cmp
call
add
outsl
fs
mov
push
cmpsw
pop
out
negb
xlat
push
jo
outsl
cmpsb
push
in
push
cmp
dec
push
arpl
fwait
out
rorb
jge
and
sub
jo
xor
repz
cmpsl
jnp
pop
shrb
mov
push
adc
outsb
enter
nop
stos
aaa
mov
pusha
mov
out
nop
sahf
pop
ds
inc
jnp
es
into
mov
or
stos
jnp
addl
and
jnp
cs
push
sbb
jnp
ja
mov
lods
push
cs
and
xchg
push
loopne
mov
lahf
pop
jb
das
jmp
dec
xor
test
xchg
lods
leave
into
xchg
push
vmwrite
mov
icebp
pop
mov
orb
es
jnp
imul
and
imul
das
leave
and
shlb
inc
dec
inc
add
adc
add
mov
lret
push
sub
inc
xchg
call
jo
inc
mov
outsl
pop
repz
leave
xor
shlb
repz
lock
jge
outsl
sub
pusha
xlat
mov
jbe
aam
cmp
xchg
subb
inc
push
lahf
ja
add
nop
xchg
or
sub
repz
rcll
iret
js
movsl
into
das
rcr
push
pop
dec
enter
stos
add
jmp
jle
mov
aaa
adcb
divb
shl
and
and
push
inc
or
fisubl
sub
lcall
pop
pop
sahf
sahf
jnp
pop
mov
lods
or
iret
fwait
bound
clc
or
inc
xchg
popa
mov
xchg
sbb
or
mov
sbb
dec
push
pop
mov
je
incl
outsl
dec
sbb
outsl
mov
in
cs
cs
jo
ret
daa
mov
jl
dec
pop
lahf
test
push
pop
movl
mov
add
dec
fistpl
cmp
in
jg
pop
dec
pop
pop
push
push
repz
and
ds
out
incb
clc
mov
dec
call
pop
mov
sub
cmpsl
mov
mov
inc
js
fistpll
and
fidivl
test
mov
and
dec
push
mov
pop
addb
rorl
lods
and
push
sar
dec
mov
xor
test
inc
stc
adc
mov
aas
inc
push
mov
leave
pop
push
push
js
mov
lock
pop
pop
sub
adc
jmp
dec
fnstsw
insb
pop
ss
cmpsb
scas
in
pop
add
fs
imul
push
sbb
adc
pop
inc
fsubrs
lock
push
adc
cwtl
shl
test
or
cli
add
or
sti
aas
mov
in
outsl
sub
aaa
ds
push
in
inc
outsb
and
loope
jmp
inc
lea
repnz
in
and
ds
fistl
rcll
dec
sahf
out
fimuls
insb
fs
sarb
dec
dec
dec
dec
dec
incb
inc
push
pop
mov
add
fbld
fisttpl
xor
dec
push
push
xchg
inc
lahf
cmp
cli
inc
sub
popf
mov
fisubl
lret
enter
xor
rorl
fdiv
cs
cmp
push
or
adc
repnz
ret
dec
push
sahf
push
sbbb
pop
push
xchg
test
out
and
out
push
and
aad
pop
test
out
lcall
cmp
sahf
mov
jmp
loope
sub
es
rorl
es
into
nop
push
idivl
push
pop
push
sub
dec
sbb
push
out
mov
pop
or
mov
inc
push
jge
daa
push
mov
mov
shrl
outsl
enter
js
xchg
add
fwait
and
ret
ret
stc
push
decb
adc
sbb
pusha
mov
pop
xchg
push
je
int
stc
cmp
das
xchg
push
in
xchg
xchg
sbb
and
add
es
pop
jmp
dec
insb
add
sub
scas
sbb
xor
inc
add
add
pop
mov
or
cmpsl
dec
fdiv
popa
sbbb
mov
and
dec
jg
sbb
gs
inc
cmp
iret
fwait
or
dec
inc
mov
sahf
int3
add
ljmp
or
sbb
xor
in
fwait
inc
ds
out
stc
out
repz
xor
push
push
or
lods
fistpl
pop
pop
or
pop
or
mov
test
xchg
mov
scas
cmpb
loop
push
lahf
or
sub
addl
es
mov
mov
add
ja
rcrl
jle
sbbb
adc
dec
cwtl
aas
pop
rorb
push
andb
mov
adc
pop
lock
es
xchg
int
mov
cmp
clc
mov
test
adc
in
mov
lcall
sbb
into
and
mov
bound
out
push
cmp
adc
add
out
sahf
out
aaa
or
sahf
ds
ss
jb
andb
repz
push
mov
test
mov
rorb
nop
aam
fadds
js
aas
outsb
popf
fistpl
mov
xor
data16
imul
scas
testl
or
bound
sahf
out
mov
push
mov
fwait
iret
sarl
test
jp
mov
rorl
adc
sahf
xor
out
ss
xchg
push
jne
sbb
int
ret
call
in
push
scas
cmp
repz
into
sbb
cmp
out
int
fcoms
jecxz
push
mov
fldt
ss
mov
pop
out
test
loopne
fs
scas
push
les
hlt
mov
stc
fiadds
mov
push
mov
push
pop
fidivs
sahf
sbbb
iret
mov
mov
iret
ja
sahf
push
dec
pmaxub
jp
jnp
out
cmp
es
cmp
dec
push
sar
shll
mov
pop
out
shll
loopne
or
cmpsl
push
or
push
call
xlat
pusha
sarb
cmpb
inc
ret
ja
inc
mov
dec
int
jns
les
jns
lds
or
cmp
pop
rolb
jb
ret
and
testb
insl
aaa
das
mov
mov
stc
push
pop
add
mov
and
and
xor
fwait
and
push
add
bound
sbb
pop
jbe
jno
arpl
adc
add
cli
jbe
outsl
inc
push
adc
sbb
cmp
rorb
stos
call
loop
xchg
add
pop
mov
lcall
mov
xchg
pop
aaa
pop
mov
rorl
movb
jne
adc
out
imulb
cmp
data16
pop
xchg
jns
inc
cmpsl
ljmp
xchg
push
fisttpll
jne
jns
pop
ret
outsb
jne
cs
mov
add
js
lcall
or
add
push
inc
je
js
aaa
jnp
mov
and
xor
and
cwtl
fcoms
dec
outsb
sbb
xor
aaa
jo
outsl
arpl
pop
push
je
adcb
jbe
xor
mov
ret
lcall
xor
jnp
pop
pop
std
xor
dec
add
and
sahf
arpl
push
xor
mov
movsl
add
mov
xor
adc
xor
xor
in
pusha
ret
push
aaa
lcall
jne
mov
enter
xchg
data16
xor
jge
outsb
sbb
inc
sub
aaa
hlt
adc
dec
imul
mull
arpl
lahf
xor
imul
mov
or
or
lea
aaa
fadd
push
jmp
sub
iret
mov
inc
or
pop
sahf
cmpsl
stc
cmp
or
sub
pusha
out
js
push
dec
repz
fmuls
cmpsl
in
cld
repz
inc
test
mov
iret
lock
or
enter
xor
push
pop
inc
ja
mov
scas
pmaxub
mov
push
rolb
jo
add
out
iret
roll
adc
xor
es
leave
test
mov
cmp
test
add
inc
cli
mov
js
inc
imull
cmova
arpl
orb
jae
xchg
das
sbb
push
xor
popa
arpl
sti
das
jo
popa
insl
or
es
pop
call
bound
fldl
dec
sub
jge
push
sbb
cs
jge
pop
jg
cmp
fldlg2
out
push
inc
push
dec
xchg
adcl
subl
mov
jb
push
das
sbbl
push
pop
xor
les
xchg
lcall
mov
push
outsb
ss
outsl
jle
addb
mov
es
lock
push
mov
nop
push
sub
push
movsb
popa
gs
sub
lcall
popl
incl
test
cmovno
and
push
mov
jmp
and
fldcw
mov
pusha
sahf
cmpsl
dec
int
pop
sar
pop
jb
lret
and
in
loop
stc
inc
ja
int
cmp
inc
cmpsb
sbb
inc
cs
insb
push
fisttpl
mov
mov
mov
sbb
test
xchg
xchg
pop
jb
dec
sbb
sbb
mov
bound
aas
lahf
jnp
push
cld
adc
push
iret
fidivrs
or
js
pop
loopne
sbb
pop
int3
push
lahf
test
mov
sarb
cmpsb
stos
fcmovnu
jge
addr16
jecxz
mov
rcll
mov
sbbl
inc
sub
lods
mov
xor
xchg
das
mov
das
add
nop
or
add
add
mov
cs
or
pop
or
in
mov
cs
or
push
ud1
nop
adc
adc
adc
mov
cs
or
pop
sbb
out
mov
and
mov
xor
add
enter
add
sbbl
add
add
outsl
add
jp
pop
iret
xlat
das
ret
fmuls
add
add
int3
out
mov
dec
sahf
fadds
clc
add
jns
mov
mov
add
mov
xchg
js
sbb
xchg
pushf
dec
inc
sbb
mov
sbbb
lods
pop
enter
xchg
loope
xchg
das
rcrb
negl
nop
aaa
add
lods
subb
js
sbb
inc
mov
cmp
dec
daa
nop
test
lahf
and
sub
aas
in
push
shlb
sub
fistl
sub
mov
daa
fcomps
in
xchg
testb
mov
mov
xchg
adc
sbb
sub
mov
xor
xchg
or
mov
js
adc
daa
inc
xchg
jg
push
fdivrl
xchg
daa
pop
jns
pop
adc
jp
sub
xchg
das
sub
pop
pop
scas
xchg
or
xchg
jo
call
scas
mov
enter
daa
nop
adc
sub
adc
and
or
sbb
push
lock
lahf
cmp
push
mov
xchg
push
daa
ja
out
in
fsubrs
mov
add
or
pop
jg
enter
clc
outsb
mov
out
loopne
jns
jo
xchg
daa
nop
out
sbb
jbe
jb
xor
xchg
dec
daa
or
and
jg
lds
or
jg
das
cmc
sbb
xchg
and
sub
lahf
xchg
and
sub
shll
sub
enter
inc
and
xchg
pop
scas
sbb
cwtl
jb
fdivrl
fdivs
xchg
or
scas
push
leave
or
and
mov
xchg
and
jb
pop
mov
xchg
mov
loopne
fsubrs
xchg
and
pop
enter
xchg
xor
mov
vpmacssdql
in
mov
out
sub
push
add
sub
mov
shrb
lahf
ja
sbb
outsb
imul
and
adc
daa
dec
and
mov
xor
mov
rcrb
call
fstl
xchg
outsl
faddl
rorl
inc
add
fidivrs
daa
mov
in
mov
mov
outsb
xchg
fldl
nop
lock
inc
pop
and
daa
mov
daa
xchg
sbb
jg
seto
push
lcall
fcomip
sbb
xchg
shlb
scas
call
or
scas
xchg
xchg
pop
in
jbe
daa
push
fldl
pop
xchg
jo
mov
sub
icebp
sub
xchg
iret
pop
jb
cmp
sub
sub
sbb
enter
mov
aaa
shlb
mov
or
sub
xchg
out
add
push
fwait
loop
xchg
inc
in
xchg
adc
lahf
cmpsl
fisubrl
xchg
fdivs
das
push
inc
daa
pop
enter
add
dec
xor
push
xchg
out
mov
inc
mov
or
ljmp
loop
mov
sub
sub
sub
and
push
xor
enter
xchg
outsb
and
xchg
sub
cmp
iret
cwtl
pop
das
subl
pusha
cmpsl
xchg
daa
js
ljmp
mov
xchg
enter
dec
and
cmp
pop
fisubrs
xchg
daa
mov
in
inc
sub
lods
pop
cmpsl
js
fcomps
in
lahf
xchg
pop
orb
clc
cwtl
xor
orb
xchg
sub
sbb
sbb
push
jb
lahf
pop
xchg
add
cltd
fildll
cmp
jecxz
cltd
dec
mov
sahf
testl
test
subb
enter
add
shrl
das
jne
dec
adc
ret
add
mov
and
add
lcall
enter
cwtl
das
xlat
mov
push
jg
xchg
xor
daa
cwtl
fbld
xor
in
xchg
in
cmp
xchg
pop
enter
jg
mov
jo
out
mov
outsb
xchg
mov
outsb
mov
xor
lahf
xchg
xor
adc
push
outsl
dec
xor
outsb
add
cmpsl
xchg
push
cwtl
xor
mov
xchg
daa
mov
call
add
xchg
sbbb
daa
test
enter
inc
icebp
loopne
mov
cmp
mov
cmpsb
mov
orb
insb
subb
daa
pushf
jg
addr16
sub
fdivs
daa
or
shl
pushf
fisttps
xor
jbe
jb
xor
and
outsl
pop
pop
adc
sahf
cmpsb
push
jmp
jb
test
mov
jb
js
jg
pop
jl
outsb
loopne
pop
pop
jbe
sub
and
test
filds
pusha
outsb
dec
xor
adc
add
out
js
or
daa
clc
scas
or
mov
outsl
fldl
call
popf
jns
dec
and
xor
and
cs
pusha
daa
cwtl
iret
mov
mov
pop
mov
enter
lock
jb
stc
xor
or
xchg
cwtl
lock
daa
sbb
mov
fadds
push
ss
pusha
iret
dec
adc
nop
outsl
rolb
daa
cwtl
lahf
sub
movups
jb
jo
xchg
daa
enter
pusha
filds
iret
js
mov
daa
sbb
or
add
mov
rcrb
lahf
nop
out
jb
lahf
adc
clc
insb
mov
das
sub
xchg
daa
test
ja
pusha
and
test
jo
mov
pop
xchg
sub
cwtl
cmp
add
shlb
fcomip
cmp
call
js
sub
mov
adc
push
outsb
push
nop
ja
lea
push
pop
out
andb
pop
mov
mov
sub
cmp
lahf
adc
rolb
sbb
push
fwait
xchg
cmp
daa
ja
daa
or
test
rclb
rcr
dec
cmp
dec
loopne
test
pop
add
mov
andl
dec
or
and
push
sub
mov
pusha
ja
dec
inc
das
js
mov
inc
aas
iret
and
fcompl
jo
inc
dec
popa
repz
push
das
jg
pop
xor
jg
dec
fsubs
das
mov
pop
and
fsubrl
cmp
out
push
cmp
cmp
or
cmp
inc
jle
call
mov
fcoms
fstpl
mov
sti
pusha
frstor
cmp
sub
pop
push
push
mov
lcall
dec
pop
jb
pop
test
rolb
clc
cltd
inc
pop
jb
and
lock
inc
cs
adc
aas
lods
jo
fdivs
xor
jbe
repz
mov
je
xchg
lock
cld
mov
sarb
cmp
nop
incl
aas
syscall
je
or
sub
mov
ljmp
or
rcrb
fisttpl
jg
inc
aam
adc
ja
pop
cmp
xor
pshufw
dec
push
add
in
insb
addr16
xor
adc
addr16
dec
mov
cmp
jmp
iret
cwtl
nop
out
test
dec
or
xchg
mov
scas
lock
sti
clts
loopne
cmp
push
add
and
dec
sahf
ja
aaa
dec
inc
push
pop
dec
pop
cmp
fisubrs
arpl
aas
inc
inc
pop
inc
scas
push
leave
sub
or
inc
cmpsl
add
lds
dec
shl
je
bswap
daa
outsl
add
mov
leave
jg
sti
pop
cmp
or
loope
mov
cmp
nop
push
jmp
pcmpgtd
jno
lahf
jl
sahf
xchg
out
test
loopne
stc
jo
mov
inc
out
popf
fcmovnu
enter
fimuls
add
popf
cmp
hlt
das
decl
loop
pop
mov
cmp
xor
sub
jb
scas
cwtl
inc
mov
cwtl
nop
push
leave
push
loop
inc
or
pop
mov
clc
jo
cmpsb
fmuls
inc
dec
nop
jbe
push
outsl
fsubrl
outsl
sarb
add
mov
call
mov
pop
sti
add
push
jecxz
cmpsl
in
rolb
and
dec
jb
dec
add
shll
mov
addps
fs
mov
pusha
and
lret
fmuls
dec
mov
or
add
xor
scas
call
push
mov
clc
js
dec
imul
fistpll
in
in
imul
dec
and
mov
incl
pusha
out
pop
and
add
sub
popf
mov
scas
fcoms
pop
mov
mov
jg
out
mov
mov
dec
stc
int3
pop
mov
jg
in
push
or
cmp
inc
in
in
in
js
lea
imul
xchg
sbb
pop
dec
jo
nop
in
dec
leave
test
ljmp
mov
incl
rorb
dec
jp
pop
xor
xor
out
in
sub
dec
jo
xor
js
dec
and
inc
dec
scas
nop
and
mov
sub
daa
push
enter
dec
nop
cwtl
jae
cmp
push
inc
mov
ja
mov
enter
cmp
push
push
push
lahf
rcll
push
sti
out
pushf
add
push
out
out
rorb
xchg
sub
cmovae
dec
mov
pop
or
dec
repz
dec
and
leave
leave
xchg
mov
lds
int
fmuls
jecxz
xlat
in
or
ja
scas
nop
imul
dec
loopne
enter
or
push
enter
pop
mov
test
add
sub
aaa
push
fucomip
arpl
mov
cmpsl
sahf
fsts
jmp
cmp
add
add
pop
pop
in
in
jbe
punpcklbw
fbstp
lds
fists
cwtl
jmp
scas
nop
imul
xchg
sub
xchg
push
pop
dec
repnz
add
and
in
fsts
pop
sub
ficompl
ljmp
pusha
dec
jae
inc
pusha
xchg
jo
mov
loopne
fmulp
leave
mov
push
add
sahf
out
fucom
loop
add
add
jp
mov
sbb
or
or
or
sahf
out
push
or
or
out
jl
mov
sahf
out
sahf
cwtl
adc
sahf
out
ret
adc
out
in
pop
cli
sbb
repz
or
sbb
sbb
cmp
repz
sbb
sbb
repz
pop
pop
outsb
push
inc
cmpsb
test
or
in
mov
in
pop
add
mov
and
js
cmp
shr
fsubr
in
xchg
and
in
hlt
in
add
mov
jb
in
push
in
sub
cmp
enter
dec
in
push
in
fs
sbb
jb
jb
sub
in
pushf
in
xchg
and
stos
in
mov
jb
enter
in
lock
in
sahf
out
sbb
out
sbb
sbb
sbb
out
sbb
out
sahf
out
pusha
sbb
jns
jl
mov
cwtl
add
cmpsb
scas
out
das
mov
mov
pminub
aam
fcompl
xchg
add
inc
push
adc
sahf
pop
mov
mov
push
mov
fdivrl
inc
pop
jo
into
jae
jmp
push
sub
out
decl
jmp
cmp
nop
outsb
cmp
iret
shlb
mov
lahf
out
push
hlt
push
sbb
sets
call
pop
pop
and
jb
pop
jb
mov
add
pop
mov
lock
das
outsl
fcoms
push
xor
roll
or
inc
cltd
inc
push
cmp
xchg
sub
repnz
push
sbb
jp
scas
mov
push
das
mov
or
enter
call
icebp
and
sub
sbb
fwait
call
pop
or
frstor
push
cmp
inc
push
push
int
fwait
push
in
aad
call
iret
adc
adc
adc
inc
ja
adc
xor
data16
add
outsb
test
cmp
add
in
sbb
mov
stos
mov
mov
dec
outsb
aam
out
icebp
jmp
cmp
mov
cmpsl
iret
cmp
repnz
add
repnz
iret
sub
lahf
or
sbb
mov
dec
sahf
out
jae
pop
out
pop
fisttpl
jns
out
icebp
in
imul
push
out
adc
bswap
leave
insl
and
sub
iret
repz
xor
popl
push
xchg
xchg
out
pop
push
add
mov
pop
lcall
mov
les
outsl
xchg
fsubrl
mov
call
fcomip
lcall
cmpsb
jecxz
sub
pop
hlt
jg
or
dec
js
or
push
lock
lock
pushf
pop
and
lds
dec
aaa
jnp
dec
add
scas
or
iret
jae
sbb
push
das
sub
xor
andb
aas
dec
cmc
push
adc
dec
shl
adc
mov
scas
lcall
dec
dec
cmp
in
fcomps
push
push
or
jbe
pop
lock
iret
loop
test
add
out
lahf
idivb
repz
fisttps
add
or
shrb
mov
mov
cmp
pop
adc
cmp
pop
je
outsl
fcomp
adc
into
cmovnp
shl
dec
es
push
popa
push
aas
insb
mov
idivb
pop
scas
in
push
cltd
negb
stos
lock
or
xlat
dec
mov
imull
in
sub
imull
testl
neg
cltd
bound
pop
jo
jnp
movsl
dec
outsl
popl
sub
in
mov
popf
pop
jo
dec
lret
pop
loope
lcall
repnz
sub
adc
jb
adc
cmp
aas
pusha
pop
js
test
xchg
clc
nop
pop
add
cmc
sarl
rorb
jecxz
push
mov
push
pushf
mov
xor
push
pinsrw
das
enter
fdivr
das
sbbl
add
fs
dec
dec
pop
stc
push
fdivs
fisttps
sub
iret
mov
add
stc
das
mov
pusha
dec
loopne
inc
ds
incl
jb
cmp
stc
and
popl
out
push
pop
push
jns
stc
sbbb
in
fdivs
mov
in
dec
and
dec
mov
cld
dec
enter
in
mov
faddl
mov
loope
cli
outsl
dec
cli
movl
mov
mov
push
fsubs
dec
sbb
popa
sub
xchg
dec
leave
xchg
popa
inc
popa
mov
pop
popa
push
and
psubd
daa
push
in
or
shrb
or
out
clc
scas
nop
push
cmc
and
das
and
push
insb
leave
mov
dec
sti
pop
pusha
cmp
cmpsl
cmp
push
scas
iret
mov
sub
pop
mov
loopne
das
mov
pop
and
cld
dec
scas
nop
dec
pop
xor
arpl
sub
test
mov
dec
lret
iret
call
test
and
pop
mov
adc
orl
mov
cld
mov
mov
pop
cld
sar
call
pop
repz
cld
or
adc
pop
pop
pop
pop
pop
std
sub
xor
pop
pop
pop
dec
std
push
std
popa
std
insb
std
pop
pop
pop
pop
ja
cmp
std
cwtl
std
mov
std
stos
std
fbstp
push
sbb
sbb
sbb
xlat
push
loop
in
and
add
and
repz
repz
and
and
das
cmp
inc
sub
repz
sub
data16
repz
jl
iret
repz
xchg
xchg
das
popf
xor
xor
and
das
inc
mov
icebp
in
xchg
and
decl
incl
push
jmp
enter
outsl
jge
mov
sbb
jb
cltd
jmp
call
in
incl
js
sti
call
dec
outsl
push
dec
jno
add
dec
xor
jns
and
add
aas
sahf
add
push
enter
inc
addr16
pop
and
dec
push
push
lods
nop
dec
sarb
mov
add
outsl
ljmp
scas
loopne
lock
pop
clc
dec
and
and
xchg
pop
and
xchg
pop
and
pop
and
xchg
pop
and
dec
cmpsb
nop
imul
scas
adc
sbb
jae
add
push
add
jns
out
inc
add
pop
sahf
out
sahf
add
jge
sahf
out
or
jns
out
or
jns
or
xchg
out
decl
adc
jmp
mulb
outsl
popl
add
add
and
cmp
repz
push
sub
repz
inc
add
pop
mov
jp
mov
repz
mov
aaa
sets
sub
in
mov
adc
neg
dec
loopne
or
mov
or
rcr
insb
add
or
pop
adc
sbb
dec
jg
cmp
or
in
add
imul
sahf
out
add
mov
xchg
pop
popa
jb
cpuid
fildll
mov
ror
shrb
in
cmp
insb
fldcw
jbe
dec
adc
ficompl
add
sub
xchg
cmp
xchg
pop
loopne
dec
and
insl
nop
mov
pop
pop
mov
in
mov
mov
sub
leave
fdivr
pop
adcb
lock
mov
push
fwait
pop
xor
outsb
inc
test
pop
push
dec
mov
fmuls
mov
mov
vmread
pop
pop
inc
fistl
loopne
mov
xor
cmp
jg
jg
daa
pop
pop
lock
jns
or
outsl
or
ja
in
decl
xor
rorb
dec
sbbb
outsl
jns
pop
jmp
pop
js
cmp
xor
or
xor
or
lcall
bnd
and
out
nop
cmpsl
bound
or
dec
mov
mov
mov
jo
jo
mov
das
test
mov
mov
dec
xchg
jp
adc
dec
mov
jno
rcl
push
in
fisubs
xchg
jno
mov
stos
dec
xor
mov
leave
xchg
push
add
out
clc
iret
inc
enter
adc
imul
push
pop
push
outsb
and
fbld
push
lcall
pop
inc
sub
jb
push
pushf
cmpsb
movsl
enter
fistps
pop
mov
push
inc
or
into
pushl
and
push
sub
dec
xor
pop
mov
and
inc
pop
and
or
rcl
jbe
or
add
or
nop
je
sub
cs
pop
mov
andb
pop
mov
xor
popa
jb
lcall
jecxz
pop
loopne
jg
add
aaa
jg
pushl
push
pop
xor
jb
push
test
ljmp
scas
fcom
jbe
pop
das
pop
jo
pop
and
dec
mov
daa
push
int3
cltd
cmpsl
pushl
outsb
xadd
iret
sbb
scas
nop
imul
inc
add
movsb
push
enter
or
dec
inc
cmovs
xlat
dec
push
mov
inc
scas
dec
lock
or
xchg
adc
ja
or
jns
mov
rclb
pop
jecxz
cmp
mov
psrlq
push
jmp
inc
fildl
xor
inc
mov
xchg
pop
xor
add
jg
cmp
or
and
or
repnz
into
inc
loop
xor
js
inc
sbb
dec
iret
jo
xchg
inc
nop
js
pop
add
imul
sub
jae
dec
pop
out
sbb
js
fcmovu
add
jae
lret
lret
lret
orl
or
lret
lret
lret
mov
or
or
lret
lret
lret
icebp
or
or
or
cmp
repz
aaa
adc
fidivrs
iret
adc
push
adc
jns
out
adc
adc
sahf
push
cltd
pop
push
cmpsl
or
mov
adc
loopne
in
into
jmp
testb
test
dec
dec
scas
nop
out
xor
jo
jb
jbe
scas
punpcklbw
jmp
mov
push
mov
outsl
inc
scas
loopne
mov
mov
in
mov
cmp
jnp
lods
mov
cmpsl
and
inc
sub
mov
push
pop
pop
fdivrs
or
xor
test
pop
mov
pusha
dec
push
pushl
pushf
pop
xor
sti
dec
push
fcomip
cmp
adc
adc
sbb
sahf
daa
adc
inc
adc
in
mov
push
sahf
add
push
enter
or
jge
daa
daa
daa
daa
test
mov
daa
ficompl
call
jnp
mov
mov
test
xor
cltd
inc
pop
jb
or
cmp
push
rcrb
in
lea
lahf
das
adc
scas
call
fisttps
mov
fdivs
test
jg
adc
jg
int
mov
outsl
leave
leave
adc
leave
adc
mov
xchg
leave
mov
scas
popf
pop
loopne
iret
add
adc
add
or
outsb
daa
push
insb
cmp
dec
pop
push
leave
leave
adc
imul
push
loope
adc
push
add
xchg
add
jbe
popf
mov
outsl
rorb
fdivr
adc
sub
sub
xchg
out
dec
mov
dec
and
out
sbb
lcall
repz
aas
push
mov
jb
jb
jo
pusha
dec
and
in
jbe
outsl
iret
adc
imul
repz
add
add
add
cmp
daa
daa
out
std
or
cmp
stc
or
jns
out
xor
aas
dec
mov
adc
pusha
adc
xchg
subb
sbb
dec
test
lcall
cmp
push
ror
mov
into
das
push
das
fnstsw
imul
sbb
fists
push
lea
add
cmp
xchg
inc
pop
push
push
xor
outsl
cmp
and
enter
in
or
dec
mov
pmaxsw
test
jbe
daa
jno
out
fmuls
ret
enter
add
jmp
repz
repnz
scas
adc
sbb
sub
ljmp
in
mov
dec
or
test
xchg
xchg
pop
pop
pop
jle
mov
jns
in
iret
xchg
pop
push
push
mov
lds
or
iret
dec
dec
dec
cmpsb
loopne
repz
in
in
in
dec
pop
iret
sbb
pop
and
sbb
ds
or
dec
sbb
pop
mov
pusha
sbb
dec
xor
into
adc
lods
cmp
xchg
dec
sub
mov
in
mov
xchg
push
add
test
inc
xor
cmp
sysexit
sahf
je
and
ljmp
sub
dec
nop
dec
scas
nop
cmp
inc
dec
scas
nop
decl
in
xchg
mov
mov
leave
adc
sub
test
call
cltd
and
pop
sbb
adc
sbb
outsl
sub
xchg
fildl
dec
js
test
sbb
pop
fcmovb
cmp
imul
in
loopne
mov
pop
es
push
enter
fadd
adc
lock
ljmp
fisttps
push
inc
sahf
pop
das
lcall
popl
mov
mov
dec
test
jno
pop
lahf
sbb
lahf
mov
pop
or
dec
cwtl
out
loopne
leave
leave
add
sub
rolb
jno
mov
and
test
fistpll
jnp
dec
sbb
push
sbb
pop
sbb
inc
sbb
sbbb
pushf
add
sbb
push
jb
sbb
outsl
test
popa
or
insl
inc
decl
cmpsb
rorb
outsl
test
mov
dec
scas
shrb
sbb
and
nop
mov
sbb
pop
dec
add
enter
js
mov
and
mov
enter
mov
push
pop
cmp
xor
imul
imul
xchg
xorl
scas
fldcw
aas
pop
js
pop
push
cmp
inc
lock
clc
mov
es
inc
sti
adc
pop
xchg
pop
loopne
mov
xchg
cmp
and
dec
push
cmp
push
call
push
dec
test
nop
dec
scas
push
nop
dec
clc
nop
enter
and
and
and
loopne
and
call
or
adc
sbb
xor
adc
xchg
popf
into
adc
rorl
nop
nop
mov
das
outsb
jb
or
insb
mov
and
push
andl
inc
add
sub
mov
aam
inc
xchg
pop
mov
iret
cwtl
or
mov
sbb
mov
or
cltd
loopne
or
iret
xchg
pushl
cltd
bound
xor
jb
pusha
xchg
jo
mov
aad
mov
aam
lock
das
inc
or
out
in
call
pop
pop
decl
aad
rorb
pop
adc
lcall
and
sub
mov
nop
and
xchg
jecxz
je
pop
pop
mov
inc
dec
pop
loope
push
addr16
incb
mov
outsl
push
dec
adc
js
adc
mov
adc
or
adc
or
xchg
lock
xor
dec
xchg
mov
xor
sub
enter
fisubl
lock
xchg
fbstp
cs
insb
dec
jb
or
in
leave
adc
push
enter
dec
lock
add
xchg
outsl
sub
inc
xchg
outsl
dec
and
scas
jo
lock
fcoms
pop
sbb
lds
and
lcall
or
push
movsl
sub
and
lds
dec
test
cs
test
cmp
test
call
pop
jb
and
and
xchg
pop
and
cwtl
adc
and
dec
stc
adc
call
jg
xchg
les
cltd
ja
cmpsl
mov
out
add
lcall
xchg
jmp
ficoml
cwtl
sub
xchg
sub
rclb
call
adc
in
adc
in
mov
mov
dec
fsubrs
mov
pushf
cmove
sub
xor
or
adc
decl
mov
movsb
aas
xchg
addl
enter
in
mov
mov
lds
dec
jo
and
cltd
ss
outsl
and
mov
or
and
js
repnz
shlb
push
or
dec
and
lds
pcmpgtw
push
in
or
repnz
clc
sahf
xchg
pushf
or
or
cmp
mov
inc
call
mov
js
int3
mov
xor
lahf
mov
shrb
pop
add
jns
jp
mov
verr
pop
into
enter
pop
adc
sbb
mov
add
sub
scas
jo
xchg
cmp
jns
mov
add
lods
mov
das
rclb
add
or
lahf
pusha
outsl
and
lds
mov
mov
fcoms
subb
fmuls
mov
ret
adc
iret
movsb
seto
scas
loope
iret
fsubs
enter
enter
test
sarl
out
adc
fsubrs
outsl
push
and
daa
or
xchg
daa
stos
pop
mov
jg
daa
scas
pushf
or
jb
mov
xchg
lock
cmp
inc
xchg
dec
mov
or
jo
daa
dec
cwtl
mov
test
shlb
cli
inc
scas
lock
scas
sbb
dec
movsb
pop
jo
sub
test
mov
movsb
out
daa
das
addb
subb
dec
pcmpeqb
test
movsl
mov
pop
mov
pop
rorb
test
in
jns
pop
jb
rorb
push
and
dec
push
add
cmpsb
lahf
sub
mov
mov
pop
mov
pop
jb
pop
test
ror
jmp
dec
clc
cmpsb
push
jb
in
cmpsl
and
shrb
adc
adc
cmc
scas
cwtl
out
mov
cmp
or
cmpl
pop
jmp
scas
mov
test
sbb
mov
sbb
sbb
imul
and
loopne
push
mov
outsl
or
sbb
sbb
aam
inc
scas
pusha
jo
loopne
pop
mov
mov
test
and
dec
cltd
inc
pop
jb
or
xor
pushf
jp
push
decl
sub
cmp
mov
mov
sahf
mov
in
mov
daa
inc
fisttpl
fmull
lds
jno
scas
push
movsb
fidivrl
push
into
push
fistpll
cmpsl
movsb
stos
scas
movb
and
inc
pop
mov
mov
scas
leave
adc
loope
scas
adc
dec
sub
popa
add
imul
xor
daa
and
push
add
daa
daa
daa
setb
daa
je
lcall
xor
les
lcall
call
sub
into
lock
iret
sub
add
inc
enter
ljmp
xchg
sub
cmpsb
or
ljmp
scas
scas
inc
push
sti
sub
enter
push
scas
pusha
repnz
cs
js
lds
dec
test
rolb
call
cmp
scas
sub
cmp
dec
call
inc
scas
pop
push
subb
sub
jno
mov
test
dec
cwtl
sub
mov
iret
sbb
icebp
sub
mov
add
fcoml
mov
leave
les
outsb
aas
sarb
pop
shlb
sub
daa
cmp
mov
inc
lret
lahf
scas
jbe
push
pushf
cmpsb
mov
testb
lahf
pop
jb
push
repnz
push
xor
ss
dec
or
psrad
push
imul
imul
push
dec
dec
push
inc
push
dec
sbb
push
or
mov
dec
sbb
pop
pusha
sbb
add
and
and
test
or
push
push
dec
inc
dec
lahf
mov
add
aaa
or
stc
cmp
add
lret
cmp
insl
mov
cmpsb
stos
mov
mov
mov
jmp
push
fistl
lods
outsl
ds
or
aaa
loopne
add
push
gs
cmpsb
andb
cs
fildll
or
adc
shr
push
inc
add
ret
jo
mov
mov
inc
push
repnz
push
hlt
rclb
cmc
push
xor
in
push
push
jp
mov
mov
mov
sahf
out
jl
mov
ror
out
jl
and
add
lcall
push
dec
out
fwait
int
mov
mov
cmp
inc
filds
jbe,pn
int
rcll
jne
addr16
adc
lret
leave
push
loope
aaa
insl
movsl
adc
lret
out
add
incb
sbb
jl
add
test
lret
int
mov
std
mov
pop
repz
lret
call
add
add
add
sbb
push
enter
sub
xor
add
sbb
test
push
inc
and
out
mov
sbb
cld
sbb
je
repz
mov
sbb
push
in
xlat
mov
in
in
add
dec
jmp
lahf
out
or
pop
andb
pop
push
mov
stc
daa
cmc
jbe
outsb
and
jmp
jmp
add
aas
and
push
mov
inc
push
cwtl
sbb
jmp
daa
mov
xchg
mov
cli
cld
cmp
shll
add
sub
cmp
jmp
loopne
sbb
rcl
or
jmp
stc
jg
or
rcll
sbb
add
test
imull
stos
mov
inc
call
movsb
shll
lret
out
loop
insl
add
out
and
add
inc
lds
add
or
stc
decl
and
push
xor
add
dec
inc
adc
les
and
jo
icebp
mov
add
and
ret
adcb
movsb
jmp
xchg
dec
jmp
sub
or
xlat
das
sbb
push
adc
aad
mov
test
and
iret
nop
adc
pop
add
adc
aaa
clc
mov
jmp
or
in
arpl
movsl
pop
lahf
dec
add
dec
daa
cmc
mov
scas
push
add
mov
jo
pop
out
push
in
push
cmpsl
into
push
dec
push
pop
shrb
dec
aas
mov
mov
stos
pop
adc
mov
add
add
mov
add
adc
aas
out
mov
add
or
mov
aaa
push
or
add
and
out
mov
mov
daa
loop
push
dec
testl
daa
movsl
push
lea
divb
nop
mov
jg
imul
pop
jmp
incl
add
mov
inc
fidivs
mov
add
sub
les
orb
push
mov
add
jg
mov
push
pop
call
push
movl
and
dec
xlat
mov
loopne
out
pop
xor
add
add
dec
add
lods
push
in
fiaddl
sub
cmpsl
sahf
or
jmp
sub
daa
and
ret
daa
push
andl
xlat
push
push
sub
lahf
ja
add
push
push
xchg
movsb
cmpb
call
xchg
sbb
xchg
pop
adc
sub
test
cmpsl
pop
sbb
sub
filds
push
or
add
pop
add
dec
add
aas
das
push
or
or
lcall
pop
scas
in
adc
and
xor
pop
jne
add
in
adc
push
gs
enter
xor
sbbb
push
xchg
mov
xor
adc
aas
adc
inc
and
adc
ss
cs
cli
testb
mov
mov
daa
in
add
mov
inc
add
xor
add
out
nop
add
test
pop
in
mov
inc
insl
inc
shlb
or
mov
cmp
repz
test
inc
inc
sbb
sbb
or
dec
stc
pop
add
dec
dec
add
jbe
push
ljmp
arpl
pop
jo
xor
daa
std
and
lcall
add
and
adc
outsb
and
and
inc
pop
stos
push
xchg
scas
or
mov
inc
iret
daa
xchg
pusha
and
mov
or
push
shrl
push
dec
into
cmc
add
pop
mov
movsb
add
nop
lea
mov
mov
push
mov
and
inc
testb
or
jae
xor
out
mov
push
push
add
add
repz
call
pop
cmp
repz
or
or
repz
repz
or
or
repz
enter
rorb
iret
repz
adc
iret
repz
repz
test
movsb
push
mov
cmp
sbb
iret
repz
repz
mov
cmp
repz
and
je
cmp
repz
insb
and
repz
fs
cmp
repz
sub
repz
repz
sub
repz
cmp
cmp
xor
cmp
repz
xor
sub
cmp
repz
and
repz
sbb
sbb
adc
gs
push
add
aaa
jnp
sub
push
loopne
popa
add
out
sahf
out
ror
sarb
test
cwtl
nop
mov
js
push
sahf
out
dec
inc
cmp
sahf
out
sahf
sub
sbb
or
cmp
out
add
cld
jo
hlt
repz
repz
call
cmp
fcom
enter
cmp
repz
mov
cmp
repz
pop
push
inc
lahf
idivl
cmp
adc
or
outsl
repz
cmp
in
les
xchg
test
cmp
repz
xor
and
add
sbb
or
jae
jnp
into
andb
push
push
clc
push
xor
out
imul
sahf
add
or
lods
scas
cmp
rcrl
std
jo
cmp
repz
fs
push
cli
iret
repz
inc
stc
xor
sbb
sahf
out
cmp
div
jl
fdivrl
out
hlt
repz
sahf
jnp
out
icebp
xchg
lock
out
repz
out
push
out
clc
jnp
call
in
aam
shr
neg
repz
je
decl
out
sahf
rclb
out
in
in
sahf
out
enter
decl
sahf
out
sahf
loope
loopne
filds
iret
jnp
jle
fisttpll
cmp
xchg
out
jns
push
fidivrl
fxch
repz
mov
push
xlat
fs
jae
repz
aad
aam
push
out
lcall
rcrl
rol
iret
lods
into
jns
out
xchg
int
int3
insb
out
sahf
out
inc
lret
out
sbb
ja
loopne
sahf
jnp
enter
les
pusha
add
push
nop
sahf
out
faddp
push
test
je
pusha
jns
out
mov
sahf
out
out
mov
mov
call
scas
push
iret
repz
mov
mov
mov
imul
push
mov
jne
xor
enter
sub
inc
push
mov
iret
repz
mov
cmp
pusha
pop
push
fists
push
add
wrmsr
mov
popf
das
addb
or
and
adc
out
jnp
push
sbb
adc
add
mov
ja
inc
inc
cmp
push
and
cmpl
add
movups
negl
push
sbb
rorb
add
mov
cmovae
in
mov
mov
sarb
loopne
mov
cmpsb
sarb
pusha
nop
test
push
fcomp
out
in
imul
mov
push
pop
pusha
rcrb
pushf
cmpsb
outsl
pop
push
adc
adc
mov
fsts
push
inc
mov
and
shlb
je
push
outsb
popf
add
daa
mov
xor
lea
inc
add
sub
inc
inc
adc
xchg
jnp
sub
dec
rclb
movsb
sbb
sub
pop
add
mov
sub
bound
cmp
add
sub
imul
aas
popf
fcoms
ds
inc
aas
add
push
test
fiaddl
fistpl
and
add
mov
xor
and
ret
xchg
insl
shrb
adc
and
ss
dec
dec
dec
inc
sub
xchg
xor
xor
xchg
sub
mov
imul
and
popa
push
sub
aad
push
and
fildll
insl
imul
xchg
negb
jns
and
rcrb
or
push
dec
inc
inc
push
pop
and
push
gs
push
dec
outsl
fdivs
shlb
and
daa
push
jne
pushf
jns
mov
inc
popa
es
or
push
or
arpl
aaa
dec
imul
popa
sub
fs
pop
dec
cmp
dec
push
and
sub
xor
inc
push
push
dec
push
leave
or
mov
ror
mov
icebp
imull
fld
sub
nop
mov
dec
adc
cltd
repnz
in
shll
clc
ret
lods
cmp
dec
aad
jecxz
dec
xor
scas
mov
imul
leave
rolb
pop
loop
add
inc
inc
inc
push
sub
mov
or
scas
xor
jns
adc
scas
test
jl
cmpsb
mov
fldl
add
hlt
mov
mov
enter
pop
pop
and
pop
ds
jnp
push
daa
inc
hlt
mov
cwtl
test
call
fdivrs
enter
pop
mov
add
mov
test
rep
je
add
addr16
and
mov
pop
enter
loopne
iret
test
ror
sarb
lods
jmp
pop
repnz
movsb
pushf
nop
sbbb
push
sub
out
imul
in
mov
scas
mov
faddl
mov
negl
push
sbb
or
xchg
or
ja
fcoml
aam
xor
mov
daa
push
push
rol
xlat
not
ficoml
push
mov
mov
lods
jbe
les
sub
loop
pop
addl
sbb
daa
add
mov
lods
int3
cmc
jae
aas
and
popf
push
jp
gs
fidivl
mov
sub
mov
mov
mov
addr16
jecxz
je
cmp
adc
insb
sub
or
fnstcw
xchg
aam
mov
cmp
mov
mov
xchg
ret
out
lea
repnz
jne
add
lret
aam
or
pop
jbe
stos
aad
mov
adc
pop
mov
xchg
shr
fwait
shrl
stos
xlat
aam
mov
mov
repnz
pop
dec
mov
lods
js
ljmp
lret
icebp
mov
mov
out
out
mov
enter
push
sub
fstpt
data16
imul
jmp
fbld
xlat
iret
xlat
gs
mov
mov
or
push
addb
add
ret
add
addl
add
pop
mov
pop
mov
sar
mov
leave
lret
sbb
mov
imul
mov
imul
fwait
sti
daa
or
fists
test
xor
mov
psllq
sub
mov
mov
rcl
iret
andb
in
sub
scas
push
push
push
movsb
iret
ds
mov
or
xchg
loop
xchg
idivb
or
and
adc
cs
mov
push
out
fstl
push
mov
mov
repz
pop
sbb
inc
ror
outsl
pop
mov
ds
loopne
add
lret
int
mov
sub
ret
mov
sub
shr
addr16
pusha
out
xor
or
dec
iret
out
mov
xor
mov
add
dec
aam
xchg
or
push
outsl
mov
repz
dec
mov
mov
stos
in
fcmove
xchg
inc
mov
test
cs
xlat
aas
cmpsl
fistpll
addb
fidivl
out
and
sub
int
mov
mov
adc
cmpsb
int
idivl
sahf
dec
daa
out
dec
adc
mov
shrb
mov
loop
xor
and
dec
push
xor
mov
fdivl
and
jl
vrcpss
dec
popa
loop
push
ljmp
mov
mov
push
mov
vpsubq
cmpsl
out
stos
mov
inc
fs
pop
push
mov
mov
addl
ret
dec
and
daa
mov
loop
mov
lods
dec
dec
mov
or
pusha
sub
xchg
int
push
adc
mov
and
push
lret
or
xor
xchg
mov
dec
mov
subl
or
pop
das
lahf
or
loop
jae
xlat
jne
jp
xchg
imul
xor
jo
fcoms
xor
dec
jecxz
lods
mov
fucomi
jb
stos
xor
pop
cmpsl
adc
das
xchg
loope
mov
mov
pop
inc
test
loop
xchg
ds
mov
rorl
jae
loopne
mov
aam
ret
mov
add
cmp
and
mov
les
gs
push
add
pop
xchg
cmpsl
push
cwtl
movl
sbb
outsl
or
dec
dec
push
or
push
push
add
add
ffreep
and
int3
xchg
mov
cmp
add
dec
mov
push
sbb
aas
pop
pop
add
pop
xchg
das
mov
mov
push
scas
aas
aas
shll
cmp
out
xchg
mov
rcll
insb
mov
xchg
add
push
dec
pushl
test
lahf
pop
lcall
es
das
lea
pop
push
or
outsl
or
ss
gs
das
xchg
add
insb
mov
pop
jnp
xlat
mov
push
push
ficoml
jmp
sub
dec
xor
add
mov
iret
outsb
fs
sub
xchg
lretw
push
inc
das
stos
fnstenv
mov
rcr
dec
or
lods
lretw
jnp
fisubrl
or
jg
int
xor
shll
test
jg
cwtl
add
xchg
pop
data16
mov
xchg
stos
das
push
mov
push
mov
stos
pop
leave
mov
stos
aad
sbb
lods
cmp
fiaddl
gs
aas
sub
aas
inc
int
mov
fimull
push
add
xor
pop
xchg
cmpsl
mov
inc
add
jg
mov
xor
inc
stos
mov
xor
pop
aas
stos
push
lds
das
shll
or
push
adcl
push
sbb
sbb
inc
mov
xor
pop
jg
jmp
sbb
cmp
push
jnp
push
xor
adc
clc
ljmp
push
rolb
stos
or
xlat
cmpsb
loopne
xchg
insl
add
sbb
pop
leave
and
lahf
lods
push
rcr
mov
xor
pop
aas
cmpsb
xchg
fisubrl
xchg
jbe
jge
rcl
push
adc
inc
sub
ret
fisttps
adc
scas
aas
dec
outsb
adc
push
push
dec
add
das
inc
imul
xor
and
or
int
pop
inc
out
in
rclb
xchg
push
inc
pop
cs
xchg
add
dec
and
or
mov
aas
push
and
sbb
add
cs
xor
loopne
aas
adc
aas
dec
arpl
outsb
mov
or
dec
jb
mov
outsl
out
mov
rolb
dec
out
js
adc
pop
cmpl
sbb
jne
dec
and
add
cmp
sub
lret
add
cmp
sbb
insl
add
outsl
mov
mov
or
push
add
movl
das
push
pop
xor
inc
rcrl
das
xor
sub
lds
inc
jae
aas
sbb
dec
sub
int
cmp
rol
lahf
inc
or
fildl
pop
subl
add
xor
aas
push
inc
nop
xor
fildll
dec
mov
mov
pop
in
pop
dec
mov
rcl
jl
insl
bound
jae
bound
out
adcb
mov
add
pop
insl
inc
dec
add
popl
leave
adc
aas
push
dec
dec
das
pop
das
jno
adc
mov
jbe
scas
inc
inc
rolb
or
aas
adc
out
and
and
sbb
das
push
imul
dec
pop
jbe
inc
or
repnz
pop
add
fdivl
enter
stos
in
insl
push
sti
dec
ss
xchg
pop
inc
sete
in
mov
int
pop
testl
or
pop
mov
or
inc
adc
scas
mov
mov
daa
sub
mov
push
or
jg
rcrb
insb
lcall
jns
push
push
mov
out
insb
push
push
sahf
out
pop
push
dec
inc
sahf
out
sahf
xor
and
or
lahf
out
or
cld
or
repz
repz
lock
call
iret
enter
mov
mov
test
xchg
mov
out
js
insb
pop
push
and
sarb
sbb
add
inc
aaa
cmp
mov
adc
jl
mov
push
adc
call
jmp
les
push
adc
stc
cmp
repz
adc
sbb
push
out
sahf
cmpsl
sbb
out
sahf
dec
sbb
js
jns
lods
sahf
out
push
jp
testl
mov
inc
pop
and
in
shll
popf
pop
push
mov
or
call
outsb
sbb
adc
push
pop
in
adc
jns
out
and
push
aam
out
sahf
out
pinsrw
sahf
out
sahf
add
lods
jns
out
and
jns
out
adc
out
sahf
sbb
jns
out
push
push
jns
out
and
push
inc
mov
push
jno
and
outsb
sub
das
xor
cmp
dec
push
out
sahf
out
jae
mov
mov
push
cmp
repz
inc
push
outsb
xor
iret
repz
out
lcall
dec
sahf
out
sahf
gs
sahf
mov
cmp
out
ljmp
cmp
repz
pop
outsb
mov
lods
mov
out
adc
xor
push
push
jbe
out
mov
lcall
test
aas
aaa
cmpsl
sub
jle
popa
loopne
or
in
cmpsl
add
or
rorb
or
sub
mov
sbb
out
jle
inc
adc
push
scas
and
add
bound
shlb
mov
mov
subb
add
mov
inc
inc
inc
push
or
add
push
ficoml
add
mov
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
or
sub
in
cs
adc
das
pop
adc
fidivrl
and
push
sbb
and
inc
and
adc
pop
test
or
cs
push
and
push
mov
xchg
jge
push
es
pop
jae
or
js
mov
js
add
xchg
add
vmread
ficoms
xchg
dec
push
es
pop
pop
fisttpl
js
lock
incl
js
and
push
mov
or
orb
lea
andb
push
dec
add
mov
add
inc
lret
add
and
mov
inc
lods
push
fs
rcrb
push
fdivs
mov
mov
or
rorl
add
add
xor
lods
test
fwait
xchg
outsl
pop
fdivl
add
fcmovnb
push
and
lods
and
xor
add
mov
sub
adc
pop
stos
ret
xchg
pop
mov
sbb
mov
loope
insb
pop
addl
popa
ret
sbb
stos
fs
fimull
push
pop
add
lds
outsb
pop
fadds
push
in
mov
insb
pop
sbb
mov
add
outsb
ret
mov
mov
shlb
lea
popf
add
xor
mov
add
or
aad
dec
inc
add
jne
dec
gs
adc
lods
mov
adc
push
add
push
sbb
lods
add
add
lea
xchg
mov
inc
pusha
lcall
and
arpl
lods
xchg
pcmpeqd
negl
cmp
xor
lcall
rorl
lret
mov
aas
out
pop
pop
add
pop
subb
or
lods
or
fisttps
and
or
movsl
cmp
adc
add
shrb
enter
add
insl
sbb
xor
nop
adc
lods
mov
shll
push
sbb
ss
lods
rol
nop
jo
push
sub
push
pop
pop
movsb
or
mov
sbb
inc
mov
sbb
mulb
ret
push
adcl
or
sub
add
xchg
add
shrl
lds
jne
or
add
or
stos
inc
loop
or
pop
movsl
or
jecxz
mov
adc
jnp
pop
das
insl
aas
add
jecxz
stos
mov
jno
mov
xchg
stos
clc
jnp
xor
andb
fsubp
mov
addr16
dec
sbb
or
sub
or
jne
fstps
aad
sub
mov
popa
inc
sbb
addl
adc
mov
xchg
jae
popa
pop
bound
mov
ficomps
das
pop
repz
dec
push
rcr
cmp
add
push
bound
fs
popa
sub
pop
loopne
fstpl
mov
imul
xchg
cmpsl
loopne
and
sub
mov
and
sbb
das
or
movsb
lea
mov
aaa
iret
and
xor
cltd
xchg
mov
jbe
and
popa
clc
sub
push
xchg
push
mov
pusha
daa
or
je
lods
mov
popa
or
shl
mov
push
or
add
pop
xchg
add
insb
pop
sub
mov
xor
mov
add
dec
test
sub
flds
subb
dec
sbb
fs
jnp
lods
cmp
iret
add
and
sbb
adc
mov
addr16
lods
inc
xor
and
or
in
cmp
lcall
inc
or
xor
fiaddl
insb
pop
gs
lods
lret
xchg
jecxz
lret
cmpsl
and
add
notb
xchg
and
lret
dec
subb
pop
add
dec
xchg
and
add
mov
int3
xor
inc
push
gs
cmpsl
inc
sub
mov
stos
lds
sbb
rorl
enter
and
insl
ret
dec
and
adc
pop
mov
xchg
sub
pop
ljmp
lods
lds
lds
and
or
and
lcall
rcll
enter
andl
push
lock
lods
jg
xchg
ss
mov
subb
aas
mov
or
xor
lahf
nop
mov
insl
dec
shll
test
xor
sbb
ret
push
jno
mov
jae
mov
leave
imul
or
je
dec
add
dec
test
enter
inc
dec
sbb
mov
and
dec
mov
vandnps
mov
lahf
cmpsl
add
jb
xchg
scas
sahf
xor
imul
lods
dec
and
pop
enter
mov
dec
jae
sub
popf
addb
or
ljmp
and
pop
sti
sbb
push
inc
lds
add
pusha
insl
in
sub
jl
sti
add
push
imul
and
or
shll
mov
xor
xchg
adc
sbb
aaa
dec
shll
mov
lcall
mov
or
and
int3
xorb
hlt
addr16
lods
push
pop
sub
dec
jns
inc
push
cmp
jmp
xchg
and
lret
xchg
and
es
pop
fwait
add
push
adc
and
push
ret
lea
dec
or
mov
stos
or
adc
cmpl
jbe
repz
jne
les
add
or
nop
cmc
shl
push
mov
mov
mov
mov
test
or
nop
xor
push
aam
shr
mov
and
xchg
nop
jne
fldl
test
cmp
gs
fsts
fadds
mov
xchg
nop
mov
pop
pop
or
pop
mov
or
nop
imul
jae
fmull
sub
xchg
pop
and
push
aaa
sub
frstor
fs
out
stos
or
pop
jg
clc
rol
jno
inc
loopne
add
inc
sbb
cs
imul
data16
aad
mov
cmp
dec
roll
dec
push
test
enter
xlat
bound
aaa
outsl
lods
test
enter
icebp
add
nop
jne
popl
int
lods
mov
add
rorb
pop
jno
inc
add
sbb
test
jb
pusha
mov
inc
stos
jg
lods
ret
xor
les
lods
xor
popa
enter
cmp
fisttpll
xchg
jmp
sbb
and
xor
fs
inc
push
and
mov
jecxz
sub
xor
test
testl
in
sti
pop
arpl
arpl
inc
sub
pop
ljmp
and
sbb
and
addr16
fidivl
lods
mov
mov
pop
pop
push
jno
dec
test
out
addl
inc
pusha
enter
or
xor
test
nop
jne
mov
mov
add
fwait
nop
lahf
adc
fs
or
ret
mov
enter
test
sbb
inc
add
dec
jnp
or
add
es
popf
test
adc
xchg
add
icebp
test
add
fistps
cmp
sub
fwait
lods
push
pop
mov
pop
xchg
subb
lahf
inc
sub
inc
jnp
jecxz
mov
and
xchg
cmp
xor
push
nop
adc
pop
mov
xor
inc
push
stos
adc
or
lods
scas
sbb
push
aad
stos
adc
pop
adc
mov
push
add
pop
xor
dec
ja
insb
stos
adc
inc
xchg
inc
subl
ljmp
clc
es
sub
into
shrl
pop
aam
sbb
enter
cltd
add
daa
shrl
fs
and
add
xchg
cmp
mov
cmp
pop
add
inc
popa
jne
or
fcomps
or
sub
jb
cmp
push
inc
imul
mov
iret
add
adcb
out
cmpsl
sbb
lcall
adc
adc
add
xchg
pop
mov
ja
idivl
or
push
mov
sub
push
movsb
push
xchg
adcl
leave
inc
mov
and
mov
divb
and
xchg
mov
call
or
dec
mov
dec
inc
out
sbb
xlat
sub
dec
push
mov
pusha
fwait
loopne
test
divl
mov
dec
inc
add
leave
rclb
xor
pop
xchg
les
xlat
loope
out
loope
lahf
add
and
add
inc
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
