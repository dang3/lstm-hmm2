fstpt
xor
ret
nop
test
jne
push
mov
test
jp
je
dec
sbb
mov
add
xor
xor
add
test
je
mov
cld
dec
es
je
and
pushl
push
je
jmp
in
dec
lea
sub
ret
or
std
cld
push
decl
shl
sub
lea
push
movl
or
push
call
adc
pop
add
mov
add
dec
jne
pushl
add
loopne
mov
mov
pop
lea
push
lea
or
ret
movsb
dec
mov
pop
add
in
mov
in
or
jmp
push
dec
push
jb
je
arpl
sti
jmp
bound
imul
add
movb
push
jmp
pop
cld
lock
push
mov
add
test
jle
add
subb
push
fnsave
mov
pop
lea
mov
inc
push
stos
push
adc
push
add
adc
or
jge
pop
sbb
jne
mov
orl
arpl
mul
push
add
sub
hlt
std
adc
sbb
adc
leave
push
int
add
pushf
fldl
fisttps
and
fstpl
pop
repz
adc
adc
xchg
push
aad
in
nop
fldl
mov
sub
jg
fsub
shl
jmp
outsb
add
fcomip
ja
dec
and
test
jne
ds
je
cmpb
lahf
mov
add
adc
or
cmpb
inc
ret
test
fwait
decb
sub
and
popa
adc
or
sbb
cmp
call
jne
sub
add
ss
jne
jl
sbb
shl
push
lods
mov
jge
adc
add
jmp
push
jecxz
add
cltd
cmpsb
pop
lods
aam
lret
les
ret
sbb
adc
push
jo
mov
pushw
fsubs
mov
pop
and
fcomps
add
mov
cmp
arpl
lods
stos
testl
xchg
hlt
mov
push
fisttps
mov
add
sub
or
mov
cld
insb
or
mov
or
cmp
mov
or
sub
lock
xor
popf
lcall
or
cli
pop
push
inc
call
push
stos
add
push
cld
push
mov
add
repnz
pop
pop
aam
or
movsb
movsl
push
sub
fmuls
insb
in
jo
call
sti
push
push
mov
pop
push
push
mov
mov
add
jg
pop
enter
je
imul
jmp
mov
cmp
jnp
add
xor
sbb
adc
out
or
test
mov
into
or
push
add
and
adc
int
jo
push
cwtl
leave
and
add
cmp
cmp
add
cmp
sete
outsl
shlb
les
dec
xchg
ds
icebp
inc
daa
bts
cltd
add
add
sub
icebp
lock
push
dec
je
pop
pop
stos
daa
test
lret
repz
dec
or
push
nop
sub
push
or
lret
pop
inc
mov
loopne
in
ss
cs
push
push
xchg
add
adcl
hlt
add
and
pop
in
stos
rorb
fadd
and
pop
dec
inc
lods
adc
pop
adc
mov
or
dec
cmpsb
pop
mov
and
add
or
mov
mov
cld
cmp
rol
add
mov
iret
xor
push
mov
pushf
push
idiv
mov
or
pop
hlt
hlt
addb
fimuls
or
or
call
xor
loopne
dec
cmpl
bnd
add
in
mov
xchg
pop
lods
sub
xor
or
push
cmp
jne
test
testb
or
clc
add
out
clc
mov
or
xor
aam
lock
mov
inc
mov
jg
jecxz
push
popa
xor
fnstcw
data16
in
lahf
mov
or
push
fldcw
fistpll
insl
inc
inc
xchg
stos
in
mov
dec
addb
fbld
fiaddl
aaa
hlt
scas
rolb
pusha
lret
mov
xchg
mov
mov
mov
dec
and
push
mov
aam
int
call
sbb
pop
cmp
mov
movsl
loopne
add
inc
hlt
int
mov
cmp
or
pop
dec
in
xor
dec
mov
mov
xor
call
outsb
sbb
scas
xor
pop
sbb
xor
mov
fildl
fstpl
sbb
fstpt
loopne
inc
loopne
fcoms
and
daa
fadds
inc
aam
push
pop
into
in
push
rol
and
adc
lcall
rcrb
leave
xchg
pop
jae
add
add
rcrb
push
xchg
lds
push
or
faddl
pusha
nop
jmp
add
xchg
fdivl
shll
rcl
enter
push
pop
enter
nop
xchg
in
les
or
mov
pushl
fldpi
add
push
dec
xor
test
movsb
rorb
pop
push
adc
pusha
sub
rclb
mov
sti
lock
or
add
leave
cmp
mov
inc
xchg
sbb
mov
test
leave
ret
cmp
dec
insl
shlb
pop
xor
enter
hlt
lock
ljmp
in
adc
adc
clc
pop
das
or
sbb
out
test
sbb
lock
enter
mov
adc
add
jg
inc
and
xor
hlt
push
add
dec
lret
xchg
out
ret
add
sub
pop
test
cmc
fisttps
xor
push
aaa
xor
jns
jnp
pop
out
push
cmp
push
sbb
pop
je
and
pop
jo
or
hlt
mov
mov
or
insb
adc
xchg
popa
push
mov
pop
movsl
out
lea
push
lock
xchg
daa
cwtl
and
jne
mov
nop
cs
rorl
xchg
or
sbb
fsubrl
xor
push
outsb
inc
add
aaa
pop
pop
mov
rep
or
insl
mov
adc
sbb
incl
cmpsb
out
add
test
call
push
push
mov
jno
sar
cmp
jg
pusha
push
push
std
and
jns
add
pop
cmp
jl
pop
mov
fmuls
add
addl
xor
fdivrl
cmpb
or
fsubrs
call
cmc
aam
fadds
mov
aam
adc
nopl
test
add
aad
push
test
fcmove
in
icebp
jmp
pop
push
mov
adc
mov
inc
fldcw
sbb
pop
fistpll
cli
adc
pop
ret
or
pop
mov
dec
or
sbb
out
adc
cmp
das
rcl
aas
cld
jae
sbb
fcomps
fildll
hlt
xor
xlat
ds
or
inc
mov
adc
pop
dec
cmp
lret
addl
push
fisubs
inc
das
lds
dec
jecxz
enter
lret
xchg
inc
sbb
pop
and
loopne
addb
dec
or
push
loopne
rcrb
xor
and
in
inc
scas
pusha
add
add
movb
push
inc
pop
mov
adc
inc
xchg
filds
adc
push
lds
pop
push
dec
insb
jne
jbe
call
outsb
call
insl
push
loopne
add
dec
push
add
incl
xor
sbb
inc
sbb
orb
and
xchg
add
pop
jb
push
shrb
test
fisttpll
and
loop
push
fdivrl
push
mov
cmp
sub
loopne
xchg
les
lcall
and
jb
xor
loopne
xchg
pop
xchg
ret
inc
sub
push
dec
addl
sub
cmpsl
lock
mov
movb
xchg
pushf
push
add
sub
mov
leave
mov
aad
shlb
ret
xchg
jne
push
or
xor
add
adc
xchg
int3
adc
les
addl
pop
sbb
orl
and
rolb
or
test
xchg
call
fwait
xor
sbb
inc
cli
push
xchg
ja
es
bound
sub
repz
loope
inc
or
jmp
adc
mov
jb
sub
or
xchg
dec
lcall
xor
add
cltd
push
cmp
add
ret
push
lods
pop
frstor
push
jnp
mov
inc
ret
sub
jecxz
sub
xchg
xchg
pop
lcall
push
pop
test
mov
ret
and
cmp
inc
mov
pop
movsb
nop
arpl
push
int3
sub
ret
popa
mov
adc
pushw
pop
nop
imul
or
add
je
push
sbb
sbb
rcll
dec
sbb
xorb
or
dec
adc
adc
fisttpl
dec
cmp
and
pop
aas
add
lods
rep
mov
fiaddl
add
dec
cld
mov
aad
cld
mov
add
sbb
fs
push
push
pop
cmp
cld
mov
xchg
cmpsb
imul
shll
adc
sbb
sub
xor
test
mov
or
sub
orb
mov
or
xchg
jo
push
cld
mov
fldl
faddl
mov
rol
mov
add
mov
popa
ds
addr16
mov
les
aad
or
jb
in
adc
sbb
mov
dec
repz
rcr
loopne
mov
bound
push
cld
lahf
fcompl
add
pop
loope
mov
movl
das
loop
inc
addr16
je
or
add
lock
jnp
subl
in
jge
scas
push
push
or
daa
push
jne
pop
xchg
jae
scas
subb
cmp
popa
scas
sbb
mov
or
sub
adc
popl
cld
imul
cwtl
in
push
and
push
mov
mov
sbb
xchg
aas
xchg
fildl
adc
push
jnp
push
hlt
cmp
aas
add
clc
push
rorl
mov
mov
inc
pop
fdivr
pop
xchg
adc
or
sbb
adc
xchg
aas
orb
or
ss
addb
lea
cmp
mov
push
jno
and
add
movsl
push
add
mov
ss
jp
call
mov
pop
pushf
stos
js
ret
pushl
push
xor
jbe
sbb
aam
mov
dec
int3
int3
add
mov
shrb
movsb
cmp
inc
outsb
dec
dec
out
mov
push
in
movsb
movsb
xchg
ret
or
cmp
xchg
imul
xchg
adc
mov
inc
mov
test
faddl
or
je
popf
insb
and
or
movsl
sub
test
je
fchs
fcompl
popf
push
sbb
push
mov
rclb
jbe
stos
jecxz
sbb
inc
pushf
pushl
inc
inc
add
add
loope
add
add
out
push
shll
adc
lock
jmp
in
ret
mov
push
push
inc
mov
es
sbb
pop
pop
pop
cmpsl
ljmp
ret
push
and
push
and
jne
mov
inc
add
mov
inc
mov
ret
pop
cs
sti
push
mov
jmp
add
jo
cld
icebp
add
fcoml
shlb
shlb
fsts
push
inc
ficompl
ret
mov
pop
pusha
stos
mov
je
add
mov
out
pop
mov
clc
mov
inc
jb
inc
add
sbb
cmp
sti
and
cmpl
xor
subl
pop
loopne
test
mov
inc
pop
les
test
xchg
mov
jb
inc
bound
movsb
rorb
test
mov
inc
add
rorl
cltd
push
or
aaa
xor
xchg
clc
or
adc
fildl
push
in
fdivl
mov
xor
push
mov
pop
dec
jno
or
sub
nop
flds
test
inc
xchg
jge
xchg
xchg
jl
xchg
mov
cld
test
jb
dec
inc
push
xor
mov
cmpb
lods
dec
sbb
adc
in
pushf
push
repnz
call
mov
testb
xchg
dec
mov
xor
ss
sbb
inc
jae
cmc
push
insb
roll
repnz
mov
adc
mov
cmp
jmp
inc
or
mov
inc
or
ljmp
and
or
adc
and
loopne
fdivs
inc
and
mov
add
roll
ljmp
or
leave
adc
fwait
rcrb
push
sbb
xchg
and
mov
aas
clc
movsb
xor
cwtl
js
inc
inc
scas
or
subl
int3
push
popf
push
and
test
sti
or
lock
lahf
in
pop
adc
adc
dec
into
push
shll
and
mov
and
fadds
xor
dec
add
nop
cmp
call
int
cli
cmp
inc
xor
rcrl
dec
mov
push
shl
and
ret
nop
loopne
and
nop
dec
fistpl
mov
and
fisubl
icebp
decl
pop
push
loope
push
mov
lret
adc
shrb
movsb
in
js
add
stos
dec
inc
sub
xchg
or
sbb
imul
aam
xchg
jl
gs
pop
lods
mov
rorb
xor
lods
movsb
movsb
fmull
mov
add
sbb
mov
jg
xor
pop
xor
ljmp
adc
mov
inc
fcoml
std
dec
xchg
push
int3
mov
add
sbb
imul
sub
mov
mov
mov
or
les
out
push
call
or
les
pop
add
dec
pop
fwait
and
push
mov
call
mov
add
adc
inc
xor
loope
pop
and
test
push
xor
pop
dec
jne
lods
sbb
fisttpll
leave
aam
xor
dec
add
lahf
adc
sbb
ss
mov
add
sarl
and
jae
and
dec
xchg
mov
fstpl
bswap
or
mov
mov
mov
mov
add
mov
inc
cmpsb
sub
lock
rolb
js
in
clc
push
cmp
add
sbb
inc
xchg
pushf
xchg
sub
add
enter
xor
leave
adc
inc
xor
mov
cmp
fs
cmpsb
inc
adc
dec
mov
push
test
push
enter
add
push
xor
jl
xchg
sub
pop
adc
pushf
cmc
add
enter
outsb
push
inc
in
push
xchg
lahf
outsb
hlt
addr16
xor
ret
repz
jne
je
or
push
add
rol
or
and
pusha
xor
sbb
stos
fs
mov
cltd
out
dec
mov
jnp
movsb
rorl
or
xor
xchg
sbb
pop
adc
leave
mov
int3
sti
icebp
dec
pusha
inc
mov
out
loopne
push
cmp
movsb
pop
adc
out
cld
mov
xor
in
mov
or
or
and
repz
cmp
dec
in
lock
outsb
ret
int3
fstl
sbb
test
or
nop
js
adc
ret
orl
bound
or
sub
sub
cld
shrb
imul
add
aad
inc
or
fildl
fstpl
fisttpll
fsubl
push
jbe
cmp
insb
in
inc
pushf
and
cmp
sub
in
sbbl
add
mov
cld
xor
push
hlt
mov
add
movsb
mov
xorb
mul
insl
popa
jmp
sbb
add
je
cmp
add
call
pusha
mov
sbb
dec
inc
fstpt
jmp
mov
dec
scas
and
jg
adc
mov
sbb
push
dec
popa
mov
ret
shll
mov
mov
orl
bound
mov
cltd
dec
scas
nop
or
hlt
pop
dec
sub
dec
nop
dec
xchg
jbe
pushl
jg
push
push
jmp
jg
xor
sbb
xchg
xor
jg
sti
add
arpl
andl
pop
dec
inc
pusha
sbb
ss
xor
cmpsb
xchg
or
orl
pusha
shrl
rcll
push
fwait
cwtl
or
inc
jb
cmp
xlat
test
or
stos
or
jmp
push
push
shl
push
push
push
repnz
push
mov
push
push
clc
sbbl
xor
cmp
clc
pop
add
xlat
insl
mov
push
and
enter
add
cmp
rclb
cli
sub
rclb
loope
shlb
rcrb
in
push
inc
mov
sti
dec
add
or
jb
and
clc
pop
push
sub
sbb
or
adc
in
and
imul
add
sbb
push
in
add
mov
add
inc
or
adc
daa
xor
es
push
cld
lea
jle
test
into
dec
insb
clc
shl
in
fs
cmpb
and
nop
xchg
es
push
and
lock
dec
cmpsb
dec
jl
or
test
push
iret
mov
or
aaa
dec
xchg
pop
adc
or
adc
or
test
mov
mov
test
add
cmp
mov
hlt
push
jge
scas
fistl
mov
movsb
push
push
je
fmuls
mov
mov
jae
shlb
push
mov
mov
mov
and
test
xchg
or
in
cmp
push
ret
xor
add
pop
or
nop
addl
or
test
mov
mov
cmp
pop
aaa
xor
cmp
sub
or
nop
or
add
xchg
push
lahf
or
push
jmp
loope
mov
mov
insb
testb
ja
add
rol
mov
sub
inc
shrb
adc
stos
imul
addb
sub
lods
jmp
mov
das
or
icebp
cmp
dec
es
xchg
and
and
pop
push
loope
dec
std
sub
xorb
popa
xor
test
mov
xchg
cs
mov
lock
pop
leave
adc
in
push
call
fadds
and
dec
push
leave
xor
mov
mov
xchg
fldenv
orl
jecxz
push
lcall
and
adc
ds
in
jo
cmp
jmp
pop
popf
cmp
in
push
aaa
inc
mov
jo
inc
dec
mov
daa
int
in
call
or
std
loopne
or
push
jnp
loopne
or
imul
add
dec
sub
jns
add
pop
stos
or
add
roll
mov
mov
and
inc
movsb
jae
stc
in
jb
xor
call
orb
outsb
test
cmpsb
pop
jbe
imul
xchg
lock
and
mov
inc
lds
push
rorl
xchg
adc
xor
and
and
test
popa
arpl
push
das
imul
xor
sbb
xchg
popa
js
in
ret
add
test
and
add
cli
add
mov
mov
adc
xor
sub
push
cmp
jb
insl
gs
push
sbb
pop
clc
rorb
jns
out
mov
les
loope
xchg
push
fnstsw
fdivr
xor
lea
push
add
icebp
add
push
rolb
dec
push
sarb
inc
xorl
inc
add
insl
movsl
stos
fcompl
xor
je
dec
and
or
mov
dec
jne
or
loopne
lods
fstl
mov
sub
add
mov
xchg
xchg
cmp
aas
cmp
clc
clc
arpl
inc
mov
dec
movsb
dec
mov
inc
inc
shrb
push
pop
hlt
pushf
or
mov
sub
mov
add
cltd
and
push
add
jmp
ljmp
add
push
test
repnz
pop
aad
hlt
loopne
push
test
mov
inc
cld
inc
lock
jo
add
inc
test
in
mov
and
filds
adcl
push
sub
xchg
insl
rcrl
ds
inc
xor
add
add
stos
push
push
add
imul
pop
jl
repnz
pop
mov
fcmovnb
shll
dec
in
pop
add
push
inc
arpl
inc
lods
mov
nop
or
out
scas
and
add
adc
push
adc
or
add
std
dec
mov
lods
pop
ret
push
popf
cmpb
es
cwtl
pop
and
jl
or
adc
stos
add
inc
inc
lcall
xor
rolb
add
mov
pop
cmp
enter
fildl
add
fsubl
and
cmp
sbb
test
lea
nop
jecxz
dec
mov
lcall
inc
in
or
add
test
pop
push
mov
adc
mov
dec
and
jne
push
imul
pop
call
mov
inc
scas
jne
or
mov
loopne
add
mov
and
loop
mov
add
push
nop
dec
dec
push
call
jmp
aam
jo
add
into
fistpll
or
cwtl
int
jns
push
lock
add
and
dec
add
sbb
or
mov
jae
jnp
or
test
imul
and
lods
sbb
adc
test
add
adc
sub
mov
push
add
cmp
inc
or
add
inc
movsl
sbb
add
push
mov
and
add
jae
movsl
popa
rolb
inc
sub
xor
add
out
and
inc
clc
pusha
andb
pop
pop
test
enter
rep
cmpl
xor
add
test
ret
or
add
sub
jmp
add
cmpl
xorl
lods
xor
sahf
xchg
add
sub
jmp
xchg
lcall
adc
pop
inc
pushf
mov
in
shll
jbe
in
add
sub
sbb
cmp
fisttpl
push
mov
push
into
inc
push
or
ja
xchg
dec
sahf
adc
add
xchg
into
add
hlt
and
sub
outsl
adc
cld
jns
or
add
inc
cmp
mov
nop
mov
sub
clc
xchg
bound
stos
popa
outsl
shll
in
cli
and
or
inc
lods
pop
rcrl
pop
xlat
jnp
icebp
xchg
jl
or
and
sbb
adc
mov
fcoml
fs
pusha
ss
and
fdivl
xor
test
loope
jp
xor
or
mov
insl
jp
lock
cmp
xchg
lea
sbbb
or
inc
mov
fcompl
push
lea
int3
nop
icebp
pop
cmp
dec
pop
test
add
rep
xchg
fimull
dec
add
sbbb
hlt
mov
push
jmp
hlt
xchg
sbb
outsb
add
cmpsb
imul
nop
add
jge
enter
enter
push
push
add
es
jp
sub
clc
mov
adc
adc
or
femms
sub
mov
pusha
inc
xor
push
mov
push
jns
xor
add
add
push
adc
pusha
leave
sarb
and
je
lods
xchg
in
pop
pop
push
or
or
jmp
aaa
arpl
push
xchg
gs
dec
mov
lahf
fsubr
fdivs
pop
jb
aas
test
pop
insl
aam
pop
sub
mov
movb
pop
push
adc
pop
sub
pop
add
adc
aaa
orb
shrb
xchg
sub
cwtl
cmp
jle
dec
cmp
dec
lcall
add
push
pop
or
and
add
xor
aam
jp
out
aad
and
adc
and
int
fisttpll
add
stc
cld
sbb
dec
or
fadds
fldl
fwait
sub
iret
inc
addr16
pop
mov
test
movaps
sub
fisubs
loope
add
daa
dec
sbb
addb
pop
and
or
nop
in
push
jns
loopne
scas
push
call
push
dec
or
add
out
inc
cmp
cmp
sbb
inc
push
sub
call
popf
das
and
movsb
push
jne
and
lea
jmp
fmull
ret
sahf
adc
mov
mov
mov
pop
mov
add
rorb
in
xchg
xor
clc
cmpsl
vcvtsi2ssl
clc
enter
xchg
add
sub
mov
adcb
xchg
popf
and
sub
or
or
adc
movsb
and
dec
xor
add
sbb
mov
inc
lret
and
dec
and
adc
mov
push
test
imul
shl
jnp
pop
sbb
dec
popf
add
sub
pop
lahf
inc
xor
inc
cmp
xchg
jo
cmp
add
lock
dec
scas
dec
ss
push
in
push
aaa
adc
add
sub
xor
and
or
add
adc
add
add
dec
pop
fadd
inc
std
stos
dec
int3
mov
xor
adc
sub
sub
sbb
stos
add
sub
dec
in
add
loopne
push
inc
jg
test
mov
pop
fcomp
push
aam
rcr
and
add
jns
add
lret
sub
fadd
add
jno
ror
movsb
ljmp
mov
xor
enter
inc
js
push
leave
mull
mov
int
xor
push
mov
out
add
xchg
sub
xor
popa
adc
xchg
sub
movb
xor
outsb
rcll
lcall
clc
test
icebp
sub
dec
movsb
dec
addr16
add
pop
scas
mov
push
mov
dec
mov
call
sub
dec
xchg
xchg
cmp
mov
lea
push
adc
aaa
jl
imul
test
add
dec
and
std
rclb
shrd
rorl
sbb
or
test
pop
add
aam
lea
inc
pop
addl
cmp
cmp
popf
xchg
loopne
insb
push
sbb
adc
fisttps
sbb
rolb
rclb
jle
mov
std
fs
movsb
mov
movsl
mov
aas
test
fld
or
movsb
test
and
nop
jbe
add
xor
out
outsl
movsl
loopne
dec
ss
add
fsubs
cld
test
mov
movsl
pop
cmpsb
pusha
andl
push
add
add
pushl
mov
shl
rclb
ret
or
fsubrs
push
push
bound
cli
push
xchg
imul
push
jne
loopne
nop
ds
outsb
sub
adcb
in
add
inc
inc
sbb
cmpsb
push
sbb
push
push
mov
and
push
add
or
sbb
pusha
push
jns
hlt
insl
adc
popa
or
mov
sbb
loopne
fsubr
sbb
add
in
popf
ret
rcl
add
push
xor
stc
pop
ljmp
xlat
push
xor
aam
fsubr
dec
add
ds
pop
shlb
jecxz
adc
sub
sbb
or
imul
test
fmuls
add
jno
subl
pushf
sbb
pop
push
and
add
lea
mov
fstpl
movsl
cmp
shr
cmp
push
cmp
sub
and
add
loopne
xchg
imul
in
and
mov
adcb
in
push
and
pop
xor
adc
or
xchg
sub
add
push
xchg
adc
cltd
add
clc
addl
cli
std
dec
adc
mov
pop
ret
nop
not
adcb
lock
jl
ljmp
push
add
push
inc
xchg
clc
xor
and
aas
in
push
pop
mov
push
or
xor
loope
or
aam
fldl
movsb
add
inc
es
add
bound
mov
lods
shlb
adcb
dec
xchg
bound
xchg
stos
movsl
loopne
or
rcrb
adc
fcmovbe
sub
adc
sbb
xor
sahf
mov
adc
movsl
addr16
or
add
sbb
sub
cmp
adc
stos
add
lods
dec
pop
mov
jecxz
addb
addr16
xchg
sub
enter
jbe
xchg
adc
das
adc
js
scas
dec
mov
inc
mov
andb
pop
lds
mov
inc
addr16
push
and
mov
and
ret
or
push
adc
inc
shrl
std
dec
mov
lods
dec
cs
ret
adc
test
xor
jg
push
fstl
rcrl
or
push
push
pop
xor
aaa
mov
pop
mov
cmp
cltd
sbb
adc
and
mov
movsl
mov
gs
dec
or
and
add
inc
fldt
or
cmp
test
iret
ficoms
jb
pop
jo
mov
and
pop
pushf
dec
bound
mov
in
or
cmp
sbb
test
sbb
cmp
cmp
add
push
movsl
mov
mov
adc
in
mov
arpl
out
adc
loop
decb
push
nop
sub
xor
push
jecxz
fiadds
and
and
inc
enter
nop
arpl
add
sub
mov
add
nop
inc
add
or
add
mov
fstpl
add
pushf
push
popf
ljmp
add
pop
aaa
or
and
dec
sub
xchg
cmp
add
mov
popa
mov
pop
sti
inc
lret
sbb
insb
mov
bound
xor
mov
cmpb
movsl
inc
mov
out
add
test
xchg
bswap
xor
add
push
loopne
std
addb
xor
mov
adc
push
push
icebp
hlt
add
fwait
cwtl
xor
add
imul
jecxz
cwtl
sbb
ret
mov
in
pop
cmp
xchg
inc
jmp
movsb
push
and
pop
popf
data16
add
call
adc
adc
add
push
sub
adc
jno
repnz
decl
sub
loop
pop
rorb
sub
mov
or
popa
sbbb
sub
xchg
push
daa
jno
inc
das
inc
dec
cs
loopne
push
mov
or
adc
aas
add
sub
xchg
fsubr
adc
stos
sub
push
add
inc
push
div
les
cwtl
mov
cltd
imul
push
push
mov
dec
or
pushf
aad
test
adc
call
in
pop
xor
xlat
in
xor
in
mov
scas
mov
andb
mov
cs
push
jne
xchg
or
movsl
add
pop
xor
mov
and
add
lock
sbb
mov
dec
les
add
mov
xchg
add
push
or
jecxz
repnz
mov
add
je
sbb
das
mov
adcb
sub
sub
mov
in
nop
or
add
scas
add
inc
cs
rorb
nop
or
and
in
insl
or
andb
cmc
icebp
mov
popa
adc
dec
adc
sub
mov
loopne
mov
push
loope
xchg
cmp
push
pop
lock
push
or
xor
dec
add
outsl
inc
gs
adcl
adc
jno
add
andb
das
loopne
xchg
add
loopne
lea
fidivs
add
add
pusha
insb
daa
inc
lock
lods
repz
gs
inc
and
sub
outsb
add
mov
pusha
pop
push
adc
dec
push
inc
or
inc
add
mov
xchg
mov
jno
push
loopne
cld
add
test
xchg
dec
and
or
add
and
hlt
or
mov
popa
test
nop
mov
sub
jne
pop
or
or
ja
in
adc
adc
scas
mov
insl
cmp
sbb
and
sbb
adc
sub
adc
lock
hlt
sub
lods
push
add
f2xm1
pop
test
jne
add
or
push
lock
mov
addr16
rcr
shll
ret
callw
imul
mov
inc
jb
lock
dec
mov
aad
mov
inc
stos
mov
lcall
sbb
aam
lock
mov
or
mov
fldenv
and
call
loopne
icebp
nop
sub
fsubs
mov
xchg
mov
xor
inc
lret
mov
rcl
nop
pop
mov
sbb
testl
add
mov
mov
or
cmp
dec
scas
test
adc
lcall
add
pop
inc
add
lock
fildl
test
and
fsubl
pop
push
mov
enter
movl
push
mov
mov
dec
sti
add
lods
mov
aaa
nop
mov
inc
xchg
leave
push
and
adc
sbbb
out
in
imul
mov
mov
daa
adc
inc
leave
xor
push
push
mov
icebp
dec
shrb
fs
jecxz
rcll
dec
out
sbb
ret
enter
mov
fsubl
push
inc
or
daa
add
pop
insl
mov
fcomps
nop
mov
lea
sarb
xchg
scas
cs
xlat
int3
aaa
xor
xchg
or
xchg
les
pop
test
or
cmp
and
cmpl
add
inc
mov
inc
loope
dec
xlat
or
dec
xchg
xor
fisttps
push
adc
sar
and
mov
test
mov
cs
xchg
add
or
nop
mov
test
fst
mov
test
repz
orb
add
fs
leave
das
arpl
xor
jns
fiadds
mov
mov
insl
lock
inc
test
loopne
cmpsb
sbb
mov
mov
shlb
insl
test
in
mov
lds
adc
mov
or
or
pop
add
push
stos
mov
cmp
cld
xor
xchg
sub
or
mov
mov
adcb
ror
push
pusha
push
dec
sbb
mov
mov
mov
pop
jae
rcl
ret
pop
int3
sub
push
mov
mov
inc
lock
fcoms
lods
ss
ja
enter
inc
or
mov
fs
add
in
adc
ss
and
jbe
or
mov
lds
cmp
inc
jmp
dec
jp
popl
test
ljmp
xchg
pop
pop
mov
push
jl
out
adc
xor
sbb
add
aad
cmp
out
adc
rolb
fld
jne
sub
lea
imul
jne
jg
iret
lods
xor
popa
rorl
ror
inc
cld
cld
int
aad
add
loopne
cmp
mov
lods
jnp
lret
adc
push
sti
and
enter
addb
push
shl
push
sbbb
push
and
cs
xlat
xor
add
sub
add
and
movb
jmp
hlt
adc
push
shrl
pop
enter
cld
or
or
stos
loopne
outsb
das
adc
in
adc
loope
and
test
push
and
mov
and
call
ret
push
inc
and
mov
cltd
mov
in
lds
cmp
sbb
hlt
shrb
test
arpl
ret
inc
mov
cmc
pop
leave
mov
mov
jmp
jl
out
push
and
adc
pop
dec
test
fstpt
push
test
push
xchg
dec
mov
mov
add
mov
mov
dec
xchg
inc
aad
add
or
mov
inc
cmp
cwtl
cmp
sar
roll
out
aam
xchg
add
sbb
pop
pop
arpl
je
das
lock
sbb
popa
xor
mov
es
fsubs
sub
aas
les
push
add
add
outsl
in
cwtl
sbbb
outsl
sti
call
dec
call
adc
loop
jl
loopne
fwait
loopne
cld
push
cmp
mov
movsl
inc
pop
jne
xchg
lods
roll
in
rorb
mov
enter
inc
enter
add
mov
bound
aas
mov
add
add
xor
pop
in
loopne
popa
inc
mov
push
sub
or
mov
test
ret
sbb
xchg
stos
test
ror
in
mov
sub
mov
and
ret
mov
fidivrl
and
fldt
shl
inc
push
sub
lcall
enter
push
jmp
xchg
and
push
inc
sbb
or
inc
xor
sub
shrb
iret
les
push
andb
adc
and
push
adc
add
movsl
sub
inc
sahf
out
inc
clc
dec
push
xor
jno
fldl
xor
adcb
push
sub
loopne
jnp
and
xchg
xor
pop
or
sub
and
and
lea
cmp
cmp
stos
pop
js
pusha
pop
pop
aam
dec
add
in
aas
push
sbb
and
dec
sbb
mov
cmp
sbb
mov
inc
test
sbb
movsb
sub
mov
call
dec
push
mov
sbb
add
sbb
sub
add
cld
xchg
rclb
loopne
fisubrl
inc
cmp
pop
mov
mov
inc
test
push
cmp
mov
dec
xchg
sbb
loopne
cmpsb
inc
or
std
adcl
mov
xchg
add
lahf
and
test
push
push
cltd
lcall
adc
push
push
ja
adc
negb
gs
push
xchg
cmpb
je
les
pusha
ljmp
jl
xor
js
loopne
scas
and
sarl
rolb
cmpsb
xor
loop
dec
xlat
test
push
js
sub
mov
inc
add
xchg
or
addb
mov
popf
pop
fdiv
int3
mov
add
sub
ret
aad
mov
jecxz
pop
push
mov
cmp
ret
mov
pop
cmpsl
jmp
pop
arpl
mov
cmpsl
or
xor
adc
add
lock
mov
iret
inc
or
es
mov
fs
stos
lods
dec
inc
test
leave
and
dec
repz
movsb
cwtl
in
mov
dec
mov
push
ficoml
add
or
pop
sub
or
push
add
movsl
hlt
sub
out
inc
pop
mov
mov
inc
out
or
sbb
outsl
or
inc
adc
dec
or
mov
add
and
push
xchg
add
loopne
add
add
and
add
push
out
loopne
push
add
test
rcl
test
cmp
lahf
or
sbb
dec
loopne
fdivs
and
adc
ljmp
add
nop
dec
push
cltd
fcomp
fmull
dec
and
sbb
dec
dec
xorb
js
fs
stos
cmp
push
mov
lock
sbb
andl
mov
sbb
cmpsb
test
bound
xchg
in
sub
mov
test
add
repz
test
jno
clc
pop
stos
movb
push
pop
hlt
xor
movsl
aas
or
mov
xlat
add
sbb
lock
mov
xlat
addr16
sbbb
sbb
push
jo
adc
jg
jo
cs
pop
lea
adc
into
jmp
in
mul
rclb
pop
cmpsb
mov
int
mov
imul
aam
pusha
fdivs
clc
sti
in
stos
cltd
repz
sbb
add
dec
addb
into
in
mov
xor
insb
or
sub
outsb
pop
dec
outsb
fmull
mov
aaa
popa
and
fmull
mov
test
mov
mov
or
lcall
inc
in
fs
or
inc
cmp
xchg
cmpsb
les
mov
or
cmp
das
sbb
or
lock
lock
sbb
adc
pop
les
ss
or
and
mov
in
data16
add
mov
nop
mov
mov
add
push
and
fcoms
adc
test
loopne
cmp
roll
mov
mov
mov
inc
test
mov
mov
mov
cwtl
fmull
nop
outsl
cmpsb
loopne
cltd
nop
test
or
test
pushf
test
js
mov
adc
rclb
xlat
in
mov
out
adcl
pushf
in
pop
or
or
dec
mov
leave
inc
pop
xchg
pop
xchg
out
or
or
pop
popa
mov
xchg
pop
imull
insb
or
xchg
das
add
pop
pop
mov
or
adc
xor
lods
incb
add
popf
lcall
push
je
sbb
sbb
popa
bound
mov
bound
sub
loopne
repnz
sbb
adc
bound
sub
cltd
push
add
mov
inc
or
add
cltd
adc
les
scas
or
xchg
adc
dec
push
and
les
stos
xchg
jo
dec
test
adc
adc
xchg
mov
enter
add
test
add
dec
stos
and
andb
push
push
mov
dec
pop
movsl
adc
imul
and
mov
rolb
in
stc
jne
test
cmp
and
clc
in
inc
popa
clts
add
inc
loope
in
jns
add
pop
push
add
int
addb
mov
xor
es
jne
imul
inc
inc
or
adc
nop
add
adc
ret
add
rcrb
or
in
adc
inc
push
or
stc
pop
cs
xor
sbb
xchg
add
icebp
fcoml
fistl
mov
mov
add
xor
or
sub
nop
in
in
sbb
xorl
dec
popa
and
add
sub
mov
add
movsl
add
rcrl
and
leave
pop
in
cmpl
mov
mov
xchg
mov
pop
test
addl
pusha
insl
stos
std
imul
jbe
test
add
mov
je
mov
or
test
loope
inc
push
repnz
fwait
pop
pop
inc
push
test
inc
inc
sub
rorb
push
push
or
cmp
xchg
add
aad
inc
xor
adc
int
add
xor
mov
or
subl
pop
xlat
inc
rcrl
test
pushf
adc
int
and
push
or
xor
push
mov
or
arpl
adc
or
push
or
scas
cli
enter
add
outsb
ljmp
and
jge
lret
sbb
call
add
in
pop
xchg
jp
add
inc
ret
add
mov
iret
or
xchg
jbe
hlt
int3
add
cwtl
sub
mov
fwait
aam
push
loopne
mov
push
xchg
push
add
pop
das
stos
adc
outsl
pop
les
jno
mov
outsl
lock
xchg
out
rorb
or
add
or
sub
rorb
inc
test
xchg
xor
rcrb
sarb
jns
mov
mov
dec
mov
and
add
cmovb
add
dec
sub
mov
movsb
or
add
mov
enter
ret
icebp
adc
repz
test
sbb
lahf
add
sbbb
iret
pop
imul
and
dec
xchg
adc
xor
push
push
popa
lea
and
sub
xorb
mov
or
lds
hlt
inc
rcll
inc
loopne
fstps
orb
add
or
rorb
mov
stos
in
in
add
icebp
mov
and
jnp
dec
and
loope
adcl
inc
roll
pop
xor
cld
xchg
push
xor
jo
and
test
inc
dec
aas
xchg
cmp
xor
mov
leave
add
testb
cmp
sub
push
inc
hlt
or
cmp
sbb
popa
and
mov
or
inc
loop
sub
fmull
inc
jae
add
movsb
mov
and
and
adc
push
xorl
addb
ret
push
sub
dec
cwtl
aas
adc
add
or
shlb
test
aam
mov
shrl
cmp
scas
xchg
cwtl
les
inc
push
mov
or
stos
and
mov
fsubr
mov
push
jo
aaa
mov
aaa
mov
sbb
mov
icebp
fdivl
and
inc
pop
add
pop
cmp
pop
in
sbb
and
loopne
push
and
inc
pop
pop
and
mov
inc
das
jge
push
div
add
dec
shlb
insl
repz
add
jge
inc
push
dec
loopne
int3
aad
mov
int3
lcall
push
dec
fsubrl
cmp
movsl
jb
pusha
cmp
movsl
sub
loope
das
inc
sub
or
sti
ret
push
jp
jge
inc
or
mov
adc
sti
xor
push
cld
fninit
push
sbb
push
daa
fdivr
sub
or
sub
aaa
dec
nop
inc
dec
sub
sub
jmp
jb
pop
cs
orb
push
sub
mov
add
add
or
inc
add
addb
clc
push
ja
mov
dec
dec
mov
das
clc
pop
test
mov
push
mov
or
and
scas
mov
mov
and
pop
not
mov
add
add
or
std
xor
fmuls
ret
arpl
mov
hlt
fnclex
cmpsb
adc
je
cmp
or
add
xchg
arpl
xor
jl
dec
mov
sarb
lock
stos
cmpsb
sbb
lds
push
push
xor
nop
add
pop
xchg
fs
ss
adc
ret
stos
out
mov
pop
jo
roll
add
das
imul
adc
adc
cli
inc
outsb
pop
ret
and
add
sbb
jne
sbb
inc
jne
pop
and
fstpl
pop
push
je
adc
push
sti
fildl
adc
cli
or
mov
xor
es
rclb
shr
loop
mov
das
cmp
scas
scas
and
or
pop
pop
je
jmp
mov
pop
xor
push
inc
outsb
popf
shll
sub
or
mov
pop
rcrl
je
inc
jno
lock
movsb
inc
insb
leave
or
mov
mov
pop
lock
sbb
push
add
mov
and
jne
lcall
push
das
pop
lcall
push
add
das
je
lods
add
es
lcall
mov
cltd
loopne
pop
loope
in
out
in
jle
jp
fucomp
inc
mov
pop
jl
fstpl
incl
test
xor
inc
in
sub
push
mov
adc
push
push
mov
fcmovnbe
lcall
mov
loop
jle
lea
fldl
fcompl
or
inc
cmp
fsubs
pop
push
add
sub
cli
fdivl
lea
and
pop
cltd
and
idiv
dec
fstp
jne
frstor
xor
outsl
cld
sbb
sbb
inc
pop
inc
call
fldl
or
fstpl
pop
sarb
push
sbb
pop
push
push
or
addr16
mov
fildll
sub
mov
add
call
pushl
je
dec
jne
xor
jmp
or
add
or
push
aad
scas
ret
cmpsl
lcall
addr16
xor
add
es
push
push
xchg
mov
imul
cs
push
addr16
sbb
mov
sbb
inc
and
jo
inc
and
sarb
jne
sub
xor
add
add
cmp
jge
jmp
sbb
out
std
fcmove
inc
inc
or
mov
jne
data16
outsb
and
add
scas
dec
jmp
push
add
mov
jmp
sbb
adc
add
andl
pop
sub
mov
jmp
jb
sti
inc
lcall
xchg
mov
fiadds
or
shld
push
or
loopne
cs
adc
mull
jmp
push
and
ss
xor
inc
icebp
imul
call
push
push
inc
pusha
mov
push
pop
adc
sbb
adc
lds
pop
push
pop
cmp
pop
push
add
push
inc
daa
push
xchg
push
add
and
das
mov
sbb
add
sahf
pop
push
pop
inc
or
mov
add
dec
sbb
inc
jl
divb
xchg
push
adc
sub
push
mov
or
mov
cmp
push
bound
or
divb
sarl
pop
xchg
mov
dec
mov
push
dec
pop
cmpsl
or
mov
push
sbb
push
iret
nop
fwait
xor
aas
aam
push
xlat
movsl
push
pop
add
add
loopne
out
push
inc
sub
dec
or
pop
adc
sub
mov
test
mov
push
and
mov
fisubs
push
ficomps
sub
mov
mov
movl
cld
idiv
ret
push
push
sbb
fs
xchg
pop
jl
dec
inc
loopne
pop
push
and
test
add
mov
lahf
inc
or
xor
jmp
add
inc
sti
mov
ret
rorb
push
fmuls
test
sbb
leave
cmc
fcos
fistpll
rorl
cmp
mov
jl
mov
cmp
jle
sbb
cmp
pop
ret
sub
push
cmp
cmp
jg
clc
fwait
jmp
xor
sub
inc
cltd
idiv
lret
add
inc
pop
scas
pop
sbb
aas
push
movsb
rolb
mov
jg
mov
add
ret
and
pushf
loope
mov
int3
sarl
enter
test
and
outsl
dec
xor
lea
pop
add
jg
jo
idivb
iret
pop
mov
mov
cmp
cmp
xor
jecxz
mov
or
cmp
sahf
shll
add
fists
sub
push
sbb
jge
add
jle
lea
cmp
jle
sub
es
sub
mov
fdivs
lea
adc
mov
mov
ret
push
leave
fists
push
ret
push
test
inc
xchg
jae
popa
push
adc
cmp
mov
repnz
movsbl
mov
mov
out
addr16
sub
cld
sub
mov
pushf
mov
inc
dec
and
es
inc
xor
xchg
adc
in
ja
loope
cmp
xchg
adc
xor
stos
stos
aaa
je
mov
sub
pop
sbb
xor
push
fistpl
dec
inc
inc
ret
dec
and
push
and
sbb
loopne
jg
xor
xlat
jne
sub
sub
jl
ss
sbb
insw
imull
lock
mov
push
jg,pn
or
pop
cmp
stc
stc
mov
subb
aam
mov
lret
cli
and
ret
nop
add
add
cmp
jl
orl
pop
loope
jne
push
push
push
push
cmp
js
mov
and
pop
mov
sub
inc
lods
pusha
cmpb
push
jmp
mov
push
cmc
into
repz
pusha
push
das
psubsb
int3
outsb
filds
inc
add
shlb
jge
pop
cld
sbb
mov
nop
mov
sbb
rolb
pop
leave
and
pop
ds
arpl
dec
push
push
mov
sub
insl
lock
sub
cld
jb
dec
cld
push
xor
mov
cmp
and
lret
std
push
jnp
mov
dec
fcomps
lods
pop
xchg
fwait
and
inc
cs
cwtl
cmp
mov
or
jp
pop
sub
mov
or
rcll
rcr
in
mov
inc
je
inc
push
inc
adc
jmp
cmpsl
xchg
cmpsl
rorb
dec
sahf
inc
pop
rorl
sbb
and
insb
mov
jp
adc
nop
or
pop
dec
out
xor
imul
add
ss
push
roll
and
mov
inc
cmp
cwtl
push
call
mov
sub
sub
jb
aas
add
jecxz
pop
and
inc
addb
xor
mov
je
cmp
xchg
dec
mov
push
xchg
inc
test
cs
pushf
test
sahf
xchg
and
push
ja
inc
push
push
gs
mov
std
mov
lods
jbe
jne
lret
mov
pop
mov
daa
bound
imul
mov
addr16
frstor
out
push
adc
js
add
mov
xor
imul
add
add
jb
xor
push
mov
pop
push
outsb
movzbw
arpl
pcmpgtd
push
sbb
inc
je
push
xchg
lret
jnp
cmp
push
mov
lods
aaa
dec
mov
dec
andb
mov
jae
movsl
push
cmp
and
prefetch
sub
or
push
addr16
jo
add
leave
fs
mov
rol
push
cmp
push
adc
ret
inc
sbb
push
dec
push
xchg
jo
dec
dec
cmovae
pop
inc
dec
dec
dec
cmp
add
loopne
mov
sbb
hlt
in
out
ret
pop
addr16
pop
sbb
sub
xchg
test
and
mov
sbb
mov
int3
push
shlb
and
and
xlat
or
pushl
mov
add
test
adc
cltd
outsl
sbb
jne
inc
ffree
imul
mov
sbb
push
cmp
adc
ret
cmp
adc
js
or
sub
push
in
inc
fisttpll
mov
mov
addr16
jmp
popa
lods
mov
or
mov
or
cmp
xor
jle
pop
mov
mov
pop
jo
mov
jmp
and
and
js
inc
cmp
nop
or
mov
cli
addl
xor
enter
loopne
scas
popa
out
lods
dec
int3
inc
jmp
movsb
push
jne
xlat
loope
cmp
adc
dec
or
mov
scas
and
fildll
clc
sbb
and
push
rcr
sub
cmp
push
je
mov
mov
adc
rorb
push
lods
adc
or
mov
stc
sub
fimull
mull
ds
add
loopne
aam
sbb
cs
add
sbb
test
dec
pop
ret
jle
push
sbb
sbbb
or
mov
push
adc
int3
jmp
xor
mov
out
sub
das
mov
jnp
adc
rorb
std
shll
cmp
je
inc
cmp
rcrl
js
dec
decl
xchg
ret
int3
jno
enter
in
lret
mov
mov
and
push
mov
test
out
in
pop
fists
cmp
mov
rcll
fimull
lock
push
shrb
cmp
and
mov
shll
aad
mov
or
int
repz
repz
mov
sbb
jne
push
in
push
xchg
rolb
cmc
cmp
stos
je
dec
mov
je
jmp
cmp
icebp
rorl
inc
loop
adcb
mov
dec
jmp
push
dec
sub
or
sbb
cmc
outsl
aas
add
les
sub
js
sub
jns
test
mov
inc
xchg
dec
adc
or
fmuls
mov
fsubl
push
aam
dec
or
fcmovbe
or
std
jb
and
sbb
mov
jno
and
mov
loop
sub
jbe
sbb
push
cltd
loop
mov
jne
push
ret
xorl
insb
xchg
int
push
test
push
push
repz
pop
mov
pop
out
adc
mov
aad
push
sbb
lds
sub
add
adc
imul
cmp
cmp
in
jge
cmpb
je
lock
call
lret
push
sub
out
add
out
lea
inc
js
ds
in
mov
arpl
shr
mov
fstps
push
pop
push
fadd
or
mov
and
cmp
sti
aad
jl
and
rep
pop
xor
pop
jb
sbb
sbb
das
orb
jp
push
jl
shr
xorl
fdivrs
jl
je
cmp
sbb
imull
insb
in
sbbb
sub
scas
inc
cld
mov
inc
cmp
pop
fcompl
loope
cmp
out
inc
mov
popa
adc
or
sbb
rcrb
or
inc
insl
loope
js
rclb
pop
hlt
rorb
lods
xor
jge
push
inc
xchg
repnz
dec
add
fnstsw
into
mov
mov
mov
pop
sbb
cwtl
sbb
fidivs
cmpsb
xchg
addl
jle
test
sarb
add
jl
push
or
push
mov
cmp
lcall
push
add
pop
add
dec
add
inc
sub
push
imul
sub
addr16
sbb
das
push
sahf
or
sbb
sub
roll
add
mov
mov
adc
jl
and
hlt
adc
dec
dec
je
mov
cmp
add
pop
repnz
jmp
mov
dec
mov
add
fucomi
pusha
mov
cmc
sub
push
cmp
idiv
test
push
sub
fdivrs
xor
cmp
jo
mov
mov
hlt
lret
mov
sbb
lea
dec
sub
push
jo
inc
add
jl
repnz
cmpl
cmp
mov
call
jl
inc
pop
or
pop
mov
fdivr
sbb
int3
mov
mov
lea
and
loop
aam
stc
es
xor
mov
lret
test
jge
sahf
sbb
sbb
and
xchg
into
je
adc
jg
dec
movsl
xor
inc
lock
cmp
js
jns
leave
jge
sub
push
loop
mov
movsl
lret
xor
pop
push
lret
jns
addr16
pop
inc
cld
cmp
mov
mov
add
mov
lock
pop
ror
movsl
call
lret
xor
shlb
fdiv
xchg
hlt
mov
mov
sbb
adc
mov
cli
inc
push
repz
xor
insl
mov
hlt
adc
and
dec
mov
add
lock
jle
je
cmp
or
push
push
push
sbb
in
jns
int
push
add
sbb
insb
jle
push
fisttps
push
int3
mov
out
jl
push
add
lods
sbb
push
fistpll
shlb
mov
mov
jl
clc
and
jmp
ljmp
jbe
inc
dec
cmpsb
std
jge
cmp
adc
dec
icebp
pop
pop
aam
mov
stos
jb
pop
dec
mov
jecxz
leave
push
mov
add
add
cmp
and
xor
mov
shrb
dec
fcom
push
push
dec
adc
mov
pop
ljmp
rclb
mov
lds
sbb
cli
sbb
cmp
shr
call
dec
sub
sbb
mov
movsb
mov
jle
or
push
push
cmpsb
sbb
jmp
mov
and
push
lods
scas
sbb
cld
rcll
ror
or
or
and
pop
and
jle
lea
push
adc
shlb
push
add
push
loop
or
movl
rorl
pop
sbb
movups
rcrl
add
xorl
push
xor
js
xchg
jb
sub
fistpl
inc
cmp
jo
xchg
push
and
mov
push
push
sbb
pop
add
push
jnp
mov
dec
enter
or
repnz
inc
imul
outsl
in
and
fdivl
movl
dec
sahf
fs
adc
inc
xor
add
sti
add
adc
test
ret
xchg
dec
or
xor
call
test
mov
inc
je
sub
jno
xor
mov
push
shll
mov
push
rcrb
fs
test
mov
ficompl
fidivrl
insb
aaa
or
int3
fnstenv
jmp
pusha
mov
imul
jle
sub
dec
sbb
add
inc
xor
jne
push
sub
loopne
jae
push
add
aas
xor
add
push
cmp
push
shl
dec
or
ret
pop
or
popf
mov
or
scas
mov
in
fisttpl
inc
lahf
xchg
mov
pop
sub
sub
ljmp
enter
fwait
cmc
ret
fistps
xor
mov
cmpl
and
mov
adc
push
imul
xchg
sbbl
repnz
pop
mov
sbb
adc
and
add
adc
push
add
aas
mov
aaa
pushf
lock
jge
lea
mov
push
sub
mov
sarb
jo
mov
mov
out
pop
xor
pop
lods
aas
andl
pop
sbb
inc
sub
mov
adc
mov
dec
or
add
test
add
ds
add
push
jne
ds
test
push
add
imul
in
outsl
push
mov
push
adc
stos
xchg
jo
xchg
adc
add
mov
sub
pop
pop
into
je
repnz
test
insl
jmp
push
add
aam
push
shl
pop
mov
xchg
push
pop
sub
jecxz
mov
mov
clc
mov
ljmp
data16
xor
push
rolb
test
push
mov
sub
cwtl
adcl
adc
dec
push
mov
imul
std
addb
ss
mov
push
push
mov
mov
xchg
mov
fiaddl
mov
jle
xor
push
mov
sub
test
push
push
push
rclb
nop
push
fcomi
ret
pop
pushf
mov
xchg
xchg
rolb
fiaddl
xchg
out
aaa
scas
repnz
mov
dec
call
fimull
adc
je
fsts
das
push
adc
inc
je
xor
cmp
mov
je
ss
sbb
mov
dec
std
ja
stos
adc
dec
mov
sub
add
jle
divl
or
xor
push
inc
cmp
push
sbb
add
rolb
push
popa
jmp
mov
xchg
mov
sbb
mov
stc
loopne
mov
pop
pop
jl
sub
dec
and
dec
movl
loope
or
push
jo
ret
cs
jb
mov
cwtl
bound
clc
test
les
push
dec
icebp
lods
loopne
aam
stc
negb
push
mov
xchg
inc
push
mov
push
xor
xchg
cmp
add
xor
lcall
mov
mov
loope
adc
push
mov
ret
in
push
inc
and
sbb
lock
inc
pop
sahf
cmp
xchg
popa
xchg
push
popa
mov
xor
dec
lods
jl
fstpl
in
add
insl
loopne
mov
add
xchg
xor
std
push
sbb
dec
je
dec
jne
insb
je
repnz
inc
push
add
add
imul
dec
je
cmp
pop
clc
dec
jne
mov
ret
das
loopne
mov
add
xor
or
adc
lea
stos
insb
fs
filds
jo
pusha
ret
lea
imul
push
inc
movhps
fdivrl
pop
push
jb
popf
hlt
xor
cmpsb
push
cmp
push
push
sarb
divb
add
jg
test
jp
movb
xor
jne
sbb
movsb
push
into
xor
scas
add
sub
shl
inc
pop
ljmp
mov
pop
push
outsl
nop
je
mov
push
push
jmp
stos
push
push
dec
cmp
cmp
push
push
xchg
std
movsl
mov
pop
cmp
jg
sub
rcll
push
in
cmp
pop
xor
sub
imul
push
mov
add
mov
lahf
in
cwtl
cmp
xor
or
adc
cmp
inc
lea
ds
dec
and
lret
cmp
add
leave
xlat
lahf
inc
cmp
xchg
and
mov
mov
cmpsl
jb
rorl
rorb
push
xchg
pop
adc
xchg
ret
insb
xchg
jnp
inc
sub
mulb
and
adc
cmp
in
cmpl
je
mov
loope
add
test
sub
out
push
or
or
mov
pop
adc
sbb
lock
pop
push
cmp
xchg
jg
pop
xor
adcb
es
push
or
ja
ja
mov
pop
xchg
outsb
mov
pop
je
jle
push
sbb
sub
mov
cmpsb
popf
decl
jmp
push
popf
cltd
bound
popf
lcall
mov
test
mov
xor
mov
jo
pop
sub
adc
insb
loope
ret
not
and
jo
push
push
or
js
xor
pop
daa
pop
cmp
out
push
loope
adc
es
add
add
leave
and
cmpb
xor
and
dec
and
movsl
adc
leave
adc
loopne
test
scas
cld
push
inc
cmp
stc
out
and
add
out
cmp
adc
js
push
out
les
jns
fstpt
sub
jo
pop
add
je
xchg
push
lock
mov
aaa
or
imul
or
fcompl
push
test
scas
inc
cs
push
push
orl
or
sbb
sti
popl
mov
push
mov
in
adc
dec
sti
pop
es
inc
call
test
pusha
sbb
jmp
cwtl
sub
push
mov
sbb
pop
cmpl
movsl
xor
dec
idivl
lea
push
mov
adc
push
xchg
pop
jbe
insl
lock
sub
stos
lea
push
xchg
push
mov
xchg
lea
insb
xor
test
pop
je
lcall
fdivrl
pop
push
dec
sub
mov
lods
add
push
cmp
cmpsb
test
xchg
loopne
sub
mov
loop
pop
inc
adc
ds
mov
les
inc
dec
add
push
cs
mov
adc
enter
or
push
dec
mov
add
add
jecxz
xor
or
in
xchg
sub
push
sbb
jle
and
sub
cld
inc
push
add
pop
mov
js
daa
and
lds
inc
dec
pop
js
insl
xor
mov
mov
ret
mov
inc
push
ret
mov
fcmovb
pop
fsubrl
xor
loop
dec
scas
mov
mov
mov
or
xchg
pop
push
js
pop
xor
addl
add
adc
bound
pop
setge
in
in
pusha
jbe
xchg
or
rcr
sbb
inc
add
aaa
pop
dec
sti
mov
add
movsl
push
mov
cli
add
adc
inc
push
cmp
pushf
clc
sahf
out
pop
mov
mov
cmp
mov
jg
fidivrs
pusha
jge
push
cld
es
push
push
jge
mov
mov
jb
inc
mov
mov
cwtl
or
aam
mov
fs
mov
shll
rcr
pop
or
les
jbe
lahf
clc
push
lods
inc
enter
iret
ds
jne
or
inc
lcall
fs
cmp
cs
mov
test
jne
inc
pop
mov
xor
jnp
ret
lret
pushl
addr16
dec
add
push
fs
jb
add
mov
mov
ret
fistpll
or
int
sbb
int
loopne
cmp
jg
imul
imul
pop
lea
ljmp
adc
jmp
int
jae
clc
cmp
loope
adc
dec
nop
outsb
jbe
xor
dec
pusha
adc
pop
loope
add
orb
or
lret
mov
push
ret
sarb
cmc
mov
pop
push
pop
mov
shl
cmpl
xor
cmp
or
je
mov
in
xchg
inc
clc
jb
lea
and
lret
sub
cltd
hlt
pop
adc
add
sar
xor
loope
decl
or
mov
xor
jo
mov
push
or
rolb
adc
and
xor
jl,pn
or
add
xchg
mov
insb
xchg
scas
repnz
cmpl
xchg
or
mov
addl
jecxz
add
push
mov
mov
add
pop
jno
jbe
int
call
fs
rcrl
sbb
push
push
push
or
or
jbe
or
cwtl
push
or
or
loop
push
jno
add
mov
xor
or
stc
or
shrb
cmpsb
and
mov
shll
cli
add
enter
fisubrl
ds
sbb
jbe
mov
xorl
mov
jle
push
push
inc
push
std
adc
inc
fstps
sti
mulb
inc
dec
sub
or
out
imul
mov
sbb
test
mov
jle
push
popa
mov
add
cwtl
push
fsubs
fistps
xchg
nop
bound
imul
or
aas
lock
push
add
fsts
dec
loopne
pushf
push
nop
sbbl
mov
mov
mov
sbb
gs
js
push
jne
xchg
mov
xor
jb
jmp
lret
dec
jns
push
aaa
outsl
xchg
mov
ja
cmp
je
aaa
in
leave
sub
xor
int3
lock
addr16
stos
cltd
inc
adc
ss
cli
jbe
cmovo
mov
dec
in
lods
xchg
or
pop
inc
add
mov
dec
leave
popa
sbb
pushf
xchg
stc
sahf
in
sbb
cmp
mov
rsqrtps
stos
lock
addr16
adc
neg
mov
lret
loope
leave
js
cwtl
adc
pop
es
les
sbb
cmp
aas
aam
out
testb
nop
lret
les
leave
ret
or
push
push
loope
mov
dec
pop
push
mov
mov
fdiv
adcb
aas
adc
xlat
sbb
pop
push
insb
push
pop
adc
fidivs
icebp
push
ja
lahf
incl
ret
movb
ss
or
sbb
push
pop
jo
sar
cmp
jge
sub
lea
stos
in
push
cli
push
push
nop
push
mov
and
cld
mov
sub
or
cmp
roll
cmp
jmp
push
xchg
inc
or
leave
push
je
shlb
fisubs
cmp
mov
iret
pop
push
insb
inc
clc
scas
mov
jns
out
dec
clc
les
jecxz
xlat
jge
jo
test
rcpps
fsubrs
iret
inc
pop
mov
js
ret
sub
sub
cmp
movsb
cmp
sub
add
push
inc
xchg
cmc
dec
insl
sub
and
repnz
mov
push
dec
cs
inc
mov
shrb
imul
inc
adc
push
add
push
push
inc
loope
mov
mov
sbb
int
test
lea
push
or
xorl
mov
mov
jne
ret
loopne
sub
js
inc
sub
mov
mov
mov
ret
pop
or
dec
sub
insb
jge
adc
xor
into
cmp
jge
shl
pusha
push
pop
xor
or
pop
adc
rclb
add
fcoms
into
push
push
or
mov
imul
dec
lahf
cld
or
rol
or
adc
icebp
out
xor
jne
mov
mov
daa
add
inc
nop
movsl
dec
and
out
mov
lea
add
ds
imul
cld
sbb
mov
aam
stos
or
test
das
mov
sbb
push
dec
insl
xor
aas
ret
pop
ss
sbb
add
and
cwtl
mov
or
mov
cmp
jne
lock
jno
pusha
mov
and
ret
cld
xchg
pop
call
insl
xchg
cli
pop
pop
or
sbbl
xor
lahf
add
in
mov
pop
xor
push
mov
and
or
outsl
inc
sbb
movsb
ds
add
dec
adc
xchg
addl
aas
or
ljmp
push
cmp
sbb
push
enter
xor
push
rcll
xchg
rclb
adc
fdiv
push
call
push
loopne
push
adc
jg
add
cli
ja
jns
adc
and
divb
cmp
out
add
push
je
test
and
addb
cmp
jl
les
xor
push
dec
jg
dec
aas
pop
or
popl
dec
lods
or
adc
mov
mov
popa
or
pop
ret
iret
ret
or
fistpll
pop
test
and
lds
ret
jae
or
xchg
xor
nop
add
fwait
cmp
sahf
sbbb
sbb
loopne
sbb
sbb
push
js
mov
cs
dec
dec
jg
xor
push
dec
push
dec
cltd
mov
mov
filds
test
sbb
adc
sbb
push
adc
sub
in
xchg
and
fiadds
add
sti
fidivs
stos
push
sbb
push
jns
idivl
notb
pop
push
gs
jae
sub
jecxz
or
xchg
push
or
imul
mov
test
dec
push
idivl
cmp
inc
shr
add
sbb
mov
pop
leave
cmpsl
mov
fsubrs
and
cmp
daa
add
sub
sub
add
push
mov
data16
nop
loop
xchg
lcall
aas
jbe
push
loopne
pop
fwait
dec
and
push
sub
sub
or
les
pop
mov
mov
dec
push
jne
xor
or
mov
mov
rcl
pop
fsubrs
jnp
sub
push
es
je
jmp
loopne
lea
sbb
nop
lods
cmp
je
inc
jmp
lea
inc
xor
and
rcll
add
loopne
push
jl,pt
and
add
mov
in
jnp
fs
arpl
mov
adc
adc
in
xor
mov
fs
add
scas
push
xor
daa
mov
or
cmp
mov
movsl
xor
adc
test
or
xor
jb
pop
sahf
adc
or
and
pop
lds
inc
inc
xor
testb
sbb
movl
lea
xor
sub
insl
lcall
data16
sub
lahf
add
mov
add
dec
sbb
push
mov
in
xor
nopl
adc
jp
inc
adc
fsubl
loopne
pop
call
xor
xorl
cmp
inc
cmpsb
inc
mov
fsubrs
xor
dec
pop
lret
inc
test
xor
sbb
loope
ljmp
xchg
fs
mov
lret
cwtl
pusha
pop
loopne
mov
sub
push
jne
pusha
or
dec
lea
push
push
adc
lods
inc
push
cld
lock
ds
lea
push
adcb
xor
leave
and
cmp
add
add
inc
cs
data16
add
dec
cmpsb
dec
xor
push
insl
outsl
push
nop
pop
inc
pop
mov
je
shlb
inc
cmp
jo
test
xchg
push
or
into
movsb
jae
dec
insb
imul
push
dec
pop
or
fstpl
popf
xor
xchg
mov
and
inc
rol
mov
insb
push
movsl
sbb
sub
loopne
addr16
inc
es
data16
add
sbb
popl
and
lds
fiaddl
dec
cmc
push
xlat
sub
adc
popf
push
jo
cmp
cmc
xor
les
and
test
add
dec
inc
addb
outsb
sarb
push
pop
push
push
jmp
dec
pop
inc
ret
test
push
push
sbb
std
or
add
in
mov
shrb
test
ret
pop
pop
shlb
scas
dec
jo
mov
adc
add
pop
aas
ret
jecxz
push
outsl
add
decb
fmuls
adc
or
push
push
pop
fs
push
push
dec
pop
fmul
ret
sbb
cmpsb
inc
je
or
insl
rol
adc
je
sub
add
ret
sbb
outsb
push
sub
loopne
or
pop
cmpsl
jnp
inc
cmpps
push
loop
lea
roll
xchg
int
out
mov
in
mov
mov
adc
sub
je
insb
push
cmp
fwait
push
push
mov
cmp
out
dec
je
add
dec
hlt
xchg
add
push
mov
pop
jmp
adc
je
or
int
out
in
add
add
add
js
or
push
xchg
fstpt
adc
adc
repz
fimuls
or
inc
inc
push
inc
test
out
andl
dec
push
adc
jg
cmp
or
push
arpl
rcr
stos
pop
iret
xchg
add
gs
nop
insb
mov
shr
push
push
inc
lods
stc
lds
xor
fsub
dec
insb
push
push
inc
js
orb
inc
push
push
out
push
lcall
sbb
xor
xor
cli
or
clc
jle
push
shlb
push
push
movb
dec
lods
xchg
out
fwait
inc
or
loopne
roll
aas
bnd
jmp
mov
xchg
ss
mov
mov
push
movsb
adc
xchg
idivb
sbb
test
mov
enter
fists
mov
ret
mul
or
loopne
or
xchg
arpl
mov
jl
sub
in
push
or
je
sub
stos
test
cmpl
loopne
in
mov
cmp
cmp
or
enter
cmpsb
or
add
popa
aam
inc
push
push
popf
cmp
jbe
xor
bound
nop
rolb
cltd
outsb
ljmp
shll
xor
lea
or
pop
add
hlt
inc
movsl
ror
push
dec
jle
or
pusha
xchg
dec
mov
jmp
inc
pop
and
push
pusha
adc
out
decl
fsubr
or
sbbl
xchg
push
in
icebp
out
push
test
pop
adc
xchg
mov
push
addb
push
test
dec
mov
mov
jecxz
jnp
and
sbb
sub
inc
xor
sub
cmp
jge
cli
test
pop
sti
pop
es
imulb
lods
xor
inc
nop
mull
popl
add
push
jmp
push
cmp
xchg
xor
push
inc
sub
dec
jae
imul
xchg
call
je
dec
sub
repz
push
sub
xor
imul
add
mov
adc
xchg
adc
repz
xchg
fucom
sub
dec
pop
pop
pop
mov
call
into
push
dec
test
sbb
inc
xchg
loopne
lds
push
int
inc
mov
add
dec
pop
cwtl
in
add
adc
lcall
fcomps
call
add
inc
insb
je
test
jbe
lret
add
jo
and
lret
sbb
mov
ret
sub
and
cmp
add
adc
push
dec
sub
adc
adc
add
dec
or
sbbl
aas
xchg
adc
push
push
push
push
rcrb
fcoml
ret
fmuls
pop
adc
daa
pop
push
dec
mov
jo
rclb
pop
xchg
roll
push
ret
lock
int3
fwait
xor
push
add
dec
pop
cmp
push
ficomps
push
test
imul
dec
fiadds
add
popf
add
push
test
jo
inc
imul
sahf
add
add
pop
mov
je
or
jnp
sahf
or
insl
pop
js
jne
add
orb
inc
scas
push
scas
outsl
push
pop
push
sti
leave
js
pop
in
or
in
mov
iret
stc
sub
lds
ret
pop
pop
or
jl
lret
insl
mov
je
lret
push
int
and
addl
sbb
and
mov
cmp
jle
jmp
test
ret
insl
and
mov
add
push
mov
arpl
adc
scas
add
movsl
add
jmp
js
sbb
mov
push
push
inc
lret
sbb
sbb
sbb
scas
sbb
mov
aad
stc
jb
test
pop
inc
clc
xchg
dec
cmp
add
and
adc
clc
adc
sub
loopne
rclb
push
jp
loop
adc
push
sbb
nop
mov
inc
and
cmp
add
pusha
add
ret
xor
sub
xchg
xchg
inc
nop
loopne
mov
and
jmp
daa
sbb
ret
mov
or
mov
sub
jmp
sbb
loopne
icebp
in
adc
data16
lds
adc
aas
add
or
lcall
push
pop
int
jns
jbe
mov
lcall
sub
dec
repz
mov
jb
adc
add
push
lcall
call
into
andb
xchg
adc
add
sbb
and
call
push
pavgw
adc
adc
adc
push
add
iret
push
in
and
push
dec
adc
sub
sbb
sub
push
push
lock
add
pop
cmp
mov
pop
dec
mov
xchg
push
pop
jo
je
sbb
in
inc
jl
sar
fwait
xor
xchg
add
or
scas
inc
orl
adc
movsl
adcb
jne
mov
and
mov
push
pusha
fdivrs
cmp
loopne
imul
pop
repnz
movsb
and
xchg
cmp
sbb
push
orl
push
gs
aam
test
movsl
notb
xchg
sbb
dec
insl
add
cs
or
stos
loop
loope
pop
pop
fistpl
fs
es
cmp
ljmp
pushf
push
mov
repz
dec
jl
mov
into
out
push
jge
push
cmpsl
stc
cmp
je
mov
sbb
int
jg
jg
movb
int3
sbb
or
add
test
or
inc
call
jne
cmp
jne
and
lods
pop
pop
and
setno
or
pop
jmp
or
aaa
sub
pop
lock
mov
les
xor
call
ja
sub
dec
cmp
mov
roll
mov
push
push
pusha
sbb
jne
push
sub
out
dec
fadds
push
enter
dec
push
movsl
push
mov
mov
push
sbb
jl
movb
sbb
xchg
pop
dec
mov
test
jo
adc
vsqrtss
add
push
outsb
iret
dec
pop
push
add
adc
popf
orl
inc
inc
sbb
sub
mov
ds
repnz
jne
nop
call
push
xor
sarb
mov
xchg
rorl
lock
out
clc
add
or
push
adcb
mov
jge
cmp
inc
clc
adc
fs
fadds
xchg
out
jno
add
dec
les
dec
test
xchg
push
mov
nop
rorl
push
aas
cs
cmp
adcl
add
pusha
mov
push
aam
jle
popl
pop
inc
mov
aam
or
lahf
or
jb
xchg
push
mov
or
jno
mov
inc
xorl
int3
nop
push
jl
outsb
adc
jmp
and
mov
push
push
push
enter
pop
call
out
call
sbbb
test
call
inc
xchg
jbe
std
cmpsb
rorl
mov
or
and
iret
add
orb
xchg
dec
jl
and
push
mov
cmp
lds
rcrb
sub
add
fistps
push
popf
rorb
and
push
inc
push
mov
adc
push
cs
arpl
insb
and
fisttpl
imul
jo,pn
mov
mov
fistl
and
dec
sub
orb
sbb
add
shlb
adc
add
dec
cmp
push
sbb
je
int3
mov
sub
adc
add
push
xchg
shl
jle
int3
inc
pop
push
lods
and
sub
push
scas
dec
cmpsl
nop
mov
iret
mov
push
lods
movl
xchg
inc
add
ret
mov
or
pop
int3
mov
adc
mov
mov
test
add
dec
cmpsl
nop
jl
inc
add
fsubr
pop
inc
dec
and
pop
ljmp
mov
lods
mov
loope
xor
pop
inc
sub
mov
xor
push
and
and
xchg
xor
ljmp
mov
pop
inc
dec
sub
push
dec
pusha
scas
or
pop
or
sbb
and
push
dec
or
out
das
fidivrl
rol
sub
sbb
add
js
mov
adc
sub
cli
inc
mov
ljmp
lret
jne
bound
out
add
sub
pop
add
push
push
add
sbb
movsb
push
fmull
movsb
fsubr
pop
jne
ret
pop
negb
jne
stos
xchg
adc
in
sub
sbb
pop
push
imul
mov
filds
out
imul
sti
pop
xchg
xchg
push
add
xorb
jg
inc
lahf
popf
add
or
push
and
sub
shlb
loop
pop
loop
das
dec
sub
jl
lahf
mov
xchg
xchg
out
sub
test
shl
push
mov
neg
mov
and
push
iret
cltd
rolb
fildl
and
ror
movsl
lods
pop
leave
push
test
bound
std
pop
iret
adc
rcrl
cmp
sbb
xchg
cmp
cmpb
scas
imul
rcrb
ret
loopne
sbb
push
adc
enter
iret
sbb
mov
sbb
icebp
pop
jmp
fs
push
clc
mov
xchg
ds
cmp
subl
push
adc
add
shrl
jo
xor
orb
sub
hlt
mov
rorb
mov
int
mov
decb
cltd
sub
outsb
data16
clc
add
xor
add
mov
push
rol
adc
add
lahf
jmp
pop
insb
mov
aam
push
sub
jmp
dec
sbb
in
pop
sbb
fistps
fisttps
cs
or
or
xchg
mov
mov
hlt
lahf
fsubs
lcall
add
sbb
push
add
cmc
lods
test
push
lret
in
add
dec
add
jnp
xchg
sbb
xor
imul
imul
push
add
lahf
inc
aaa
xor
aaa
add
pushf
cli
test
dec
jno
inc
testl
ja
pop
mov
inc
testb
mov
clc
xchg
pop
bound
adc
cmp
jge
cmp
das
cmpsl
pushf
cmp
mov
enter
pop
rcrl
add
add
or
jns
mov
incb
std
xchg
arpl
mov
insl
ret
sbb
jg
je
shlb
sbb
stc
jo
pop
pushf
add
push
pop
add
sub
pop
fwait
sbb
push
fstps
mov
fucom
push
pop
add
mov
pop
mov
in
add
icebp
sub
cld
jg
cltd
xor
fstps
arpl
sub
in
popf
insl
mov
out
jo
push
add
sub
movsb
sub
xor
xor
dec
fadd
mov
push
adc
xlat
xor
adc
lahf
push
xor
cwtl
sub
sbb
xor
test
pop
movb
sub
adc
push
into
mov
add
and
add
mov
call
inc
xor
mov
dec
dec
mov
inc
clc
popa
adc
xor
cmp
cmpsb
add
sbb
or
jb
inc
js
or
push
add
je
je
add
fs
stos
jle
je
iret
out
out
jne
sub
je
xor
loopne
mov
sub
ja
iret
mov
pop
fadds
test
inc
into
sar
insl
cmp
add
push
std
add
jo
pop
cmp
or
and
jg
pop
push
or
adc
fwait
jg
sbb
ss
sub
jmp
push
jle
jne
jbe
jmp
xor
ljmp
scas
outsl
imul
bsr
jl
js
jg
sub
jle
xlat
or
and
xor
movsl
ret
push
or
into
inc
ds
ss
sbb
dec
or
jae
dec
push
rolb
out
push
adc
jp
lock
pminsw
jmp
jg
sbb
mov
dec
or
xor
inc
xchg
sbb
dec
push
cmp
push
pop
fisubrl
mov
xchg
sub
ret
mov
cmp
mov
jle
mov
je
aaa
push
sarb
imul
pop
and
je
lds
inc
mov
arpl
cmp
mov
mov
jns
dec
popl
lea
nop
xor
and
push
out
jg
inc
cmpsl
push
and
and
sbb
loopne
shrb
js
cmp
push
or
xchg
pop
mov
data16
adc
ret
mov
mov
push
inc
dec
call
sub
rclb
pop
sub
insb
add
imul
shlb
cmp
mov
mov
mov
divb
or
inc
mov
push
sbb
mov
push
dec
add
add
icebp
clc
aas
add
jo
jle
mov
cltd
lret
pop
push
adcl
and
clc
jmp
addr16
dec
dec
insb
test
scas
shrb
clc
inc
sbb
test
pop
cmp
roll
dec
adc
adc
push
sub
dec
popl
fcoms
test
jae
mov
adc
test
rcrb
rclb
repnz
mov
rcll
pop
test
inc
cwtl
mov
mov
jg
push
pop
push
pop
mov
int3
pop
aaa
inc
lret
inc
push
push
adc
and
push
fmull
xor
pop
jne
push
in
ficoms
cmpsb
dec
mov
dec
das
sub
add
jns
inc
dec
stc
sahf
test
stos
push
adc
lahf
xchg
pop
mov
xchg
push
add
and
sub
loopne
dec
iret
pop
in
mov
inc
mov
iret
xor
sub
mov
sbb
repz
or
mov
add
fldenv
test
enter
aaa
ret
pop
pop
imul
sub
pop
addl
xchg
jle
jo
inc
jmp
ret
pop
pop
mov
or
adc
lea
mov
adc
repz
xor
lods
out
aam
in
mov
pop
data16
cmp
fwait
ss
xchg
or
add
bts
in
xor
sub
sub
insb
popf
push
pop
ds
testb
mov
pop
push
mov
sub
adc
xchg
inc
xchg
mov
loop
push
jle
repnz
ret
add
outsb
std
mov
push
add
leave
mov
ss
in
lea
jle
push
sbb
adc
ds
xor
fdivrl
and
addr16
pop
sti
test
mov
jle
insl
dec
inc
ds
adc
sbb
and
adc
inc
dec
cmp
loope
fists
repnz
pop
loop
pop
inc
ret
movsl
loope
outsl
and
adc
jg
movsb
xor
and
addb
and
jge
sub
xchg
fwait
push
xchg
adc
shlb
jmp
outsb
loop
test
jo
inc
push
and
movsb
imul
sub
outsb
mov
push
add
fwait
cli
pusha
push
adc
jne
push
loope
xchg
rcrb
sbb
pop
loopne
jo
jo
dec
fadds
or
xor
adc
inc
pushf
movsl
mov
es
std
stos
jmp
and
je
sub
je
push
into
and
popa
out
mov
add
lahf
adc
test
add
sbb
adcb
sbb
jg
add
and
xlat
fwait
push
mov
scas
xchg
add
sbb
ret
xchg
pop
pusha
insb
loope
lds
and
adc
bound
loop
mov
pushf
push
fmull
adc
jns
cmp
sub
cltd
or
ss
adc
imul
push
add
inc
es
insb
push
dec
xchg
sbb
clc
push
dec
push
fists
adc
aaa
enter
sub
and
fmuls
icebp
push
pop
push
xor
popa
pusha
fs
test
fistl
inc
inc
add
push
adc
shlb
adc
mov
and
arpl
dec
jg
jo
push
repnz
jo
and
je
adc
decl
pushf
inc
add
xchg
lods
push
push
pop
jp
dec
aaa
mov
push
and
test
scas
fwait
dec
lods
imul
cld
fwait
or
dec
mov
mov
jns
aaa
and
add
icebp
xor
mov
cmp
xor
add
cmp
pop
push
sbb
outsb
xor
xchg
lea
push
add
and
test
push
sub
adc
fists
adc
mov
cmp
push
and
out
adc
push
filds
add
jne
add
mov
pop
mov
push
iret
push
inc
mov
or
out
in
lahf
add
and
xor
inc
inc
dec
sub
inc
add
icebp
inc
and
cmp
test
inc
dec
fldenv
lea
push
mov
test
and
xchg
or
imul
push
inc
xchg
and
jp
xor
or
jbe
lods
push
pop
js
test
sbb
add
lahf
xor
pop
cmp
je
inc
jmp
test
int3
pop
push
pop
push
add
or
or
out
dec
mov
out
xchg
rorb
and
pop
test
sbb
xchg
pop
sbb
icebp
adc
cli
sbb
push
inc
bound
push
std
inc
xchg
pusha
outsb
dec
inc
dec
or
fs
arpl
popl
mov
xchg
adc
mov
idiv
mov
mov
push
xor
sbb
out
push
jmp
sbb
xor
lcall
and
sarl
stc
and
iret
repz
mov
cmp
repz
pop
das
dec
sahf
dec
call
cli
sbb
fnstsw
mov
sbb
push
add
jo
stc
pop
faddl
aam
leave
lods
movsb
sbb
pop
or
push
inc
ds
xchg
mov
and
dec
dec
nop
iret
mov
gs
xchg
push
push
pop
jbe
dec
dec
insb
aam
push
xor
orb
inc
ss
mov
jge
sub
jo
je
xor
enter
sbb
sbb
test
leave
xorb
nop
and
out
cwtl
pop
and
jb
mov
xchg
test
fdivrs
push
jb
mov
lcall
add
sahf
out
inc
jnp
popf
iret
sarl
icebp
add
cmp
repz
imul
jle
inc
js
movsb
imul
rolb
nop
xor
clc
mov
mov
cmp
xchg
ret
push
cs
mov
adc
dec
add
xchg
inc
pushf
or
xor
adc
jno
mov
jge
sub
cmpsw
push
jl
daa
add
mov
dec
dec
sub
repnz
popa
sub
add
mov
andl
imul
pop
lahf
cld
inc
cmp
cmp
je
jo
adc
repnz
and
push
xor
mov
rcrb
pop
add
sub
in
inc
cmp
popa
xor
push
or
mov
mov
inc
lods
sub
and
jl
rclb
fstps
mov
cmp
add
daa
mov
sub
ss
or
nop
arpl
shlb
add
xor
movsb
fcom
xchg
or
dec
ss
outsl
inc
or
mov
add
sbbb
test
xor
dec
jmp
icebp
movsl
loopne
mov
push
adc
cmp
lods
add
add
inc
pop
dec
and
add
pop
imul
addr16
dec
pop
leave
xchg
add
and
pop
call
mov
lcall
mov
mov
xorb
ret
dec
adc
cmp
mov
jo
jb
and
sbb
loop
jge
sub
repnz
leave
and
mov
out
lcall
ret
out
cli
sub
jmp
sbb
add
jle
push
jg
testb
lea
sub
rorb
rorb
jmp
imul
pushl
dec
clc
push
mov
mov
mov
test
xchg
les
inc
jb
pop
and
mov
xor
push
insb
or
loope
sbb
loope
mov
shlb
lods
fistpl
sarb
arpl
enter
cmp
pop
push
push
iret
inc
inc
xchg
pop
insb
add
insb
push
add
push
jp
xchg
out
dec
pusha
mov
hlt
aam
je
inc
xchg
add
or
fsubrs
into
sub
pop
fstps
hlt
shll
and
dec
add
pushf
xchg
js
push
mov
jo
js
adc
int
jg
xchg
sub
jnp
pop
cmpsl
loopne
cmpsb
clc
into
js
sarl
mov
push
lods
lea
lock
lret
std
fiaddl
jle
fstpt
push
adc
icebp
mov
js
push
fstp
fdivl
adc
sbb
testb
leave
in
sbb
adc
pushf
cmp
mov
sbb
cld
clc
sub
fildll
cltd
dec
std
mov
rcrl
xchg
add
int3
mov
popa
xchg
pop
push
daa
inc
jl
push
mov
mov
xor
jl
pop
and
out
add
push
and
push
mov
and
pop
imul
sub
cmp
lds
push
dec
mov
rcrl
in
icebp
movsl
jmp
sahf
testl
lea
pop
sahf
clc
lea
cmp
and
add
inc
and
push
xchg
xchg
sub
test
pop
jg
mov
shlb
mul
or
push
sub
push
and
popa
sbb
jl
xor
or
orb
xor
je
repnz
add
cmp
sub
mov
scas
sbb
cmpsl
inc
lock
inc
push
mov
dec
fdivs
fldl
push
mov
cs
lea
xchg
stos
pop
add
xor
fdivl
movsl
pop
add
push
pop
ret
pop
xchg
pushf
inc
push
lahf
cmp
inc
push
movb
dec
push
mov
scas
shlb
andb
in
push
pop
mov
jb
test
adc
push
jge
fldt
loope
test
stc
dec
mov
push
dec
test
fsubrl
jle
and
push
xor
jg
cltd
cmp
mov
adc
dec
mov
pop
rorb
and
mov
js
mov
dec
movsl
mov
cmp
sub
adc
xlat
dec
adc
push
push
js
jo
loop
popf
cmp
jl
add
rcrl
mov
neg
jno
xchg
xchg
mov
sarb
iret
hlt
jb
mov
mov
pushf
cltd
movsb
jge
sbb
xor
in
pop
mov
adc
sub
push
xor
pop
fs
ljmp
inc
push
push
mov
cmpsb
ja
mov
iret
inc
cld
pop
rclb
mov
cmp
jne
mov
jle
cwtl
inc
ja
filds
inc
dec
test
mov
mov
mov
push
mov
in
into
in
test
push
or
imulb
mov
nop
xlat
push
cmp
lahf
sti
ja
or
bound
leave
push
loope
or
or
imul
arpl
cmpb
sub
push
je
mov
test
xchg
adc
inc
cmpsb
nop
and
pop
xchg
mov
ret
lds
push
sbb
and
repz
mov
add
add
inc
cltd
mov
inc
loope
mov
push
outsl
bound
aad
inc
daa
popa
mov
add
ffreep
cmpsl
xchg
pop
fwait
loop
out
inc
xchg
imull
jne
outsb
adc
adc
clc
sub
and
inc
stos
inc
add
sbb
push
jnp
outsb
push
push
ds
or
mov
sbb
jns
cwtl
sub
and
mov
sub
dec
mov
mov
xor
xchg
and
adc
scas
push
jb
incb
sub
xor
sbb
fmulp
push
push
and
or
or
cmp
mov
aas
lods
lret
mov
cmp
outsl
xor
int3
jle
cmp
sub
clc
push
fwait
insb
fldenv
xchg
cmc
ss
cli
jne
or
shlb
lcall
push
dec
push
cmp
inc
mov
lahf
add
fcomip
fsubr
dec
cmp
pop
dec
cmpsb
push
push
push
dec
idivl
repz
push
dec
dec
add
inc
fidivl
dec
push
add
stos
push
repz
push
jmp
sbb
sub
adc
mov
setl
push
lock
dec
dec
dec
mov
test
mov
pop
test
lea
add
dec
or
sub
push
or
and
xor
push
or
pop
ret
pop
mov
movsl
nop
and
dec
fstl
in
and
or
xchg
aam
addr16
add
fdivr
push
jmp
or
pop
push
das
or
outsl
in
inc
pop
pop
addr16
test
dec
cmp
popf
pop
xchg
dec
xor
cmp
cs
cltd
or
pusha
adc
pop
inc
data16
or
es
cmp
inc
sub
push
dec
or
in
mov
and
or
sbb
mov
and
js
sbb
xchg
inc
adc
push
inc
fisttpll
add
and
js
inc
add
xor
xchg
add
cmp
inc
ljmp
dec
jl
mov
mov
ret
adc
mov
test
add
add
not
push
xor
or
sub
jl
push
xlat
xor
jmp
push
mov
fldenv
shrl
add
jnp
add
cmp
sbb
dec
sub
sbb
jne
mov
adc
test
adc
movsb
or
in
cmp
jne
pushf
jo
jae
mov
sbb
cltd
push
adc
mov
outsb
imul
out
in
in
scas
xchg
fiadds
xchg
dec
out
adc
mov
dec
push
push
push
imul
push
lea
mov
add
mov
mov
cmp
sub
mov
adc
cmpsb
insl
subb
or
fcoms
shrb
jo
add
push
outsl
lret
and
jo
stos
xor
and
adc
fistl
pop
or
xchg
ficompl
sub
sbb
xor
mov
lea
pop
insl
xchg
je
int3
inc
lock
and
aam
cmpsb
xor
xchg
mov
jne
cmpl
or
in
call
add
sbb
mov
dec
in
arpl
sub
stos
xchg
sbb
rclb
mov
addr16
sarl
add
sbb
arpl
or
lock
dec
xor
mov
mov
pop
and
pop
adc
add
pop
mov
mov
mov
movsl
movsb
lods
lds
cmpsb
and
test
loope
in
or
adc
xor
shll
lock
pusha
inc
je
mov
out
enter
mov
and
adc
jne
pop
lea
mov
and
adc
fdivs
pop
xorl
adc
sarb
mov
dec
xchg
adc
mov
ljmp
mov
push
jg
inc
and
add
fldenv
xor
add
adc
jne
pop
pusha
dec
loopne
or
cmp
sahf
and
sub
fsubrl
or
movsb
or
popa
dec
jb
inc
jg
mov
inc
pop
enter
pusha
mov
es
mov
std
add
pop
xor
add
adc
cld
orl
mov
mov
and
sub
imul
mov
sti
and
mov
test
enter
hlt
push
push
fs
add
inc
dec
xor
mov
add
mov
pop
cmp
loope
mov
out
rorl
sub
cltd
sub
jle
jle
ds
pop
in
lea
mov
icebp
lret
roll
out
xchg
out
inc
jb
push
adc
daa
fimull
mov
lahf
mov
dec
dec
mov
add
xchg
pop
add
xchg
lds
subl
daa
rorb
or
cmp
aaa
mov
jo
cmpsb
xchg
add
dec
inc
iret
mov
push
and
pop
cli
imul
fdivrs
pop
sbb
movsl
adc
ja
xchg
push
test
add
and
and
xchg
push
mov
fisttpl
jmp
jne
pop
in
pop
shl
pop
mov
test
xchg
sbb
sbb
cmp
in
lods
ret
or
xlat
push
mov
mov
call
ret
or
addl
add
mov
add
fdivrl
rol
ret
repnz
mov
push
adc
pop
jg
rcll
xchg
into
mov
cmp
push
sahf
mov
imul
cli
adc
jl
add
lods
mov
mov
adc
loopne
movsl
jecxz
ds
movsb
sub
loop
inc
outsb
outsb
add
outsb
lds
lret
leave
and
rclb
cmpsb
ljmp
push
mov
sub
pop
add
dec
sbb
dec
into
les
mov
pop
inc
pop
movsl
xchg
les
inc
jne
pop
nop
sarl
push
rolb
push
mov
stos
mov
pop
mov
lahf
xchg
push
aam
mov
jb
fs
pop
jecxz
jge
mov
jne
mov
imul
and
cmp
sbb
add
mov
enter
push
imul
push
sub
xor
sub
dec
or
das
out
jnp
pop
lock
dec
and
dec
push
neg
sbb
and
push
push
les
xor
jns
jmp
lds
sub
xchg
fsubr
imul
push
das
push
pop
sub
push
xor
jl
je
mov
mov
stos
jmp
or
mov
push
inc
addr16
mov
jo
add
fisttps
popl
sub
sub
adc
sbb
push
or
rcl
imul
inc
hlt
mov
dec
ret
sub
sub
adc
je
cmc
adc
jge
sub
or
xchg
test
jmp
ja
fisttpll
sub
xor
lds
pop
add
or
cmp
adc
lods
add
sub
mov
adc
dec
fsub
test
rorb
mov
sub
je
mov
push
arpl
jl
cmp
sahf
xor
pop
jmp
push
jmp
push
inc
fbld
fldt
add
mov
leave
test
push
dec
in
add
adc
adc
dec
cwtl
inc
insb
or
sub
xor
jl
in
mov
out
sar
mov
shr
add
pop
mov
imul
and
mov
outsb
jl
sbb
and
sbb
gs
add
rcll
adc
ret
jmpw
pop
loopne
mov
in
sbb
xor
shlb
ljmp
push
out
jmp
ret
mov
shrb
jnp
addr16
push
outsl
or
fs
divps
arpl
mov
cli
adcl
pusha
cmp
jno
push
nop
cli
mov
movsl
mov
sub
or
repnz
push
sub
jne
or
pop
and
or
fdivrl
xlat
mov
dec
jae
shrb
xchg
pop
push
adc
rol
into
nop
fistpll
or
dec
adcb
pop
fucomip
sahf
mov
ficoms
mov
or
pop
dec
shlb
movsl
mov
aam
sub
sbb
movsl
add
cli
cld
push
cmp
or
add
mov
jle
cmp
mov
jo
movsb
xor
add
inc
je
es
pop
sbb
push
push
aas
insb
ja
test
adc
mov
dec
dec
or
add
mov
pop
inc
push
push
inc
aaa
dec
aaa
pop
sub
mov
or
and
aas
pop
dec
jmp
dec
push
imul
adc
push
jmp
dec
and
push
xchg
and
pop
lahf
stc
test
pop
xor
or
sti
or
mov
daa
test
jp
out
xlat
sbb
push
cld
adc
fcompl
xor
push
pop
ja
cmp
mov
jge
mov
mov
jmp
sub
jmp
add
out
jecxz
mov
adc
push
add
or
outsl
push
je
lcall
cmp
lahf
add
mov
jle
aam
dec
inc
and
mov
mov
lods
int3
push
pop
push
push
push
push
popf
and
lcall
insb
and
xor
int
out
sahf
ja
push
xlat
fsub
loope
fdivs
ror
aas
or
pop
lahf
push
or
adc
iret
repz
sub
push
daa
sub
xor
loope
adc
into
lahf
mov
inc
aas
in
outsl
adc
les
lcall
xor
push
push
push
call
sbb
pop
loope
push
adc
fimull
and
cmp
movsb
cmp
je
adcl
lahf
aas
les
punpckhbw
cmpsl
push
les
mov
jb
test
ret
jmp
xchg
add
in
aas
adc
sbb
pushf
pop
addb
pop
or
pop
pop
pop
int
subl
shrl
mov
sbb
push
test
push
cwtl
rcrb
and
inc
dec
ss
mov
lret
stc
pushf
sub
sub
add
enter
into
into
lcall
sub
fists
fstp
dec
adc
sbb
or
add
jmp
sub
or
mov
loop
add
xchg
test
and
cmp
lahf
push
mov
data16
shrl
add
add
clc
fs
mov
jne
push
mov
daa
or
loope
jecxz
outsl
daa
enter
push
jne
dec
fmul
repz
mov
mov
fld
pop
mov
mov
lahf
or
repnz
xorl
adc
movsl
mov
ffreep
inc
xor
and
sbb
sub
mov
and
add
push
or
inc
push
adc
in
mov
pushf
cmpb
rcrl
xor
pop
mov
pop
jg
std
inc
or
cmp
mov
dec
add
add
rolb
adc
mov
pop
lods
and
js
call
in
push
mov
out
pop
pop
pop
pop
adc
or
dec
je
mov
push
mov
das
cs
push
jmp
inc
push
sub
loopne
mov
fs
mov
jmp
or
sahf
inc
inc
xchg
add
adc
cmpsb
jecxz
pop
add
mov
lcall
mov
dec
mov
mov
sbb
xor
lret
shrb
dec
jne
mov
push
sbb
jmp
push
mov
adc
mov
les
push
adc
jl
mov
insl
test
je
sub
cmp
mov
shl
push
cmp
add
dec
loope
or
cs
xor
xchg
dec
sub
add
test
pop
and
mov
mov
adc
or
leave
cmpsb
inc
xlat
mov
mov
mov
inc
cwtl
sbb
mov
pop
dec
lea
and
pop
push
jecxz
mov
ret
dec
imul
cmp
push
ds
ret
shrl
push
loopne
call
lock
imul
js
pop
add
adc
push
add
cltd
mov
imul
pusha
add
pop
mov
testb
add
fcompl
dec
xor
push
ficomps
or
shrd
dec
inc
push
jb
ret
jg
adc
sbb
mov
and
sbb
stc
push
mov
jl
cmp
mov
or
arpl
addb
mov
push
or
dec
ret
push
mov
out
loopne
sbb
and
pop
add
mov
add
bound
xchg
aas
bound
jl
sbb
js
jecxz
add
ficomps
aas
cs
outsb
sbb
arpl
add
fisttps
cmp
pushf
cmc
or
or
lahf
loopne
fwait
rorl
out
test
je
push
jl
repnz
dec
push
rcll
mov
jb
or
mov
pop
add
jne
and
sbb
add
add
mov
jmp
mov
sbb
mov
lret
enter
fisubrl
popf
push
cltd
test
lahf
push
xor
push
and
or
dec
push
out
xchg
mov
and
jg
mov
inc
dec
orb
xchg
or
rcr
lahf
inc
or
mov
popf
xchg
lahf
sub
xchg
sub
jl
sub
mov
fdivs
or
mov
test
sub
mov
sti
add
loope
adcb
lds
daa
shll
mov
or
dec
jle
roll
push
fisubrs
lods
decb
outsl
movsl
test
pop
mov
dec
or
or
sbb
pop
push
je
adc
jno
scas
adc
pop
inc
dec
inc
or
push
mov
dec
and
addl
sbb
mov
or
mov
ror
cmp
scas
das
adcl
roll
test
inc
mov
lahf
add
out
push
dec
or
and
shlb
and
ljmp
push
or
xor
adc
aas
lahf
lock
mov
add
add
rorb
add
xor
pop
jo
jp
ds
outsb
sbb
ds
jne
mov
fimull
add
pusha
cmp
rcr
loope
and
mov
or
lock
lcall
xchg
jne
fimull
flds
aam
inc
mov
ja
add
movsl
dec
lods
push
cmp
add
in
dec
cmp
cmp
push
imul
sub
and
push
lcall
or
xchg
add
push
mov
jbe
add
dec
adc
push
or
inc
mov
inc
mov
or
mov
lock
mov
addr16
cld
rorb
sarb
push
and
mov
aam
lods
xor
push
dec
push
push
cli
sub
in
add
cmp
ja
xchg
repz
cmp
push
sbb
pop
or
sbb
sbb
or
push
push
sbb
adc
addr16
je
loop
pop
xchg
push
enter
inc
adc
mov
push
stc
cmp
push
les
in
inc
or
jle
leave
je
adc
aaa
xchg
pop
sbb
shll
mov
adc
inc
movb
shlb
das
in
fists
test
pop
sbb
rcr
lahf
ret
repnz
andb
jb
jo
cmc
and
in
add
xor
mov
les
fwait
sbb
sbb
dec
mov
test
jg
ret
dec
scas
sbb
adc
adc
aaa
lock
adc
sub
and
add
add
int
ret
bnd
inc
push
push
push
mov
inc
and
push
fcoml
pop
cmpsb
mov
icebp
xchg
stos
adc
fwait
or
inc
dec
je
or
dec
sbb
test
add
fcmovbe
cmp
adc
mov
dec
test
push
jmp
mov
sub
push
push
leave
push
or
and
mov
imul
stc
insb
cmp
stc
inc
or
fcoml
pop
pop
adc
mov
mov
and
fsubs
bound
or
mov
add
enter
or
repz
dec
fiadds
add
or
mov
dec
adc
aas
iret
shlb
mov
dec
dec
fwait
mov
mov
rcrb
aas
push
popf
ret
and
push
dec
movsl
and
leave
add
adc
movl
pop
mov
push
enter
push
leave
mov
addl
mov
jo
sahf
mov
mov
jmp
adc
loope
sbb
add
sbb
pusha
fstl
add
jb
inc
in
test
sbb
rcl
inc
sbb
decl
enter
push
mov
xor
adc
adc
enter
dec
jo
dec
or
jg
pop
or
mov
pop
sub
mov
mov
mov
push
daa
adc
xchg
xchg
inc
fisttpll
add
push
push
mov
shlb
mov
pop
or
outsb
test
xchg
jne
mov
and
mov
inc
inc
xchg
sub
cmpl
mov
sti
mov
shll
inc
jle
data16
pop
mov
xor
fstps
rcrb
pusha
adc
add
cmp
mov
adc
add
inc
dec
pop
insl
int
mov
aas
cmp
sub
out
jl
and
call
pop
inc
cmp
pop
pop
adc
cmp
cli
push
movl
aam
xchg
fnstenv
and
pushl
in
jmp
hlt
lds
or
fmull
adc
xor
push
ffreep
cmpsb
aas
or
mov
loopne
mov
pusha
or
fwait
push
adc
test
mov
in
inc
dec
and
outsl
push
xchg
shlb
push
repnz
cmpl
test
es
test
pop
shrb
pop
xlat
ret
movsb
and
mov
inc
enter
mov
and
in
cs
mov
fcmovne
fmull
adc
inc
jb
mov
enter
sbb
and
test
push
pop
xchg
pop
stos
js
add
push
test
push
sbb
jmp
dec
fbstp
jne
nop
insb
jo
pushf
and
push
sahf
rcl
movsb
jb
mov
cmp
xchg
add
adc
xchg
mov
inc
or
sub
loopne
ret
mov
test
mov
stc
lahf
test
pop
adc
nop
movsb
fistpll
and
enter
dec
enter
shl
aad
test
jl
mov
add
pop
enter
or
mov
lock
lock
xchg
je
pusha
lea
xchg
push
aad
fs
add
sub
pusha
data16
dec
jae
rorb
push
push
jmp
and
or
lock
sbb
add
mov
and
mov
pop
lcall
add
mov
pusha
lahf
add
dec
or
mov
cmpsb
pop
cmp
pop
push
enter
push
ret
sahf
orl
in
cmpsl
inc
fbstp
inc
add
call
leave
adc
sahf
mov
and
mov
add
ret
cmp
push
fdivs
adc
or
pop
les
mov
pushf
mov
add
fdivrl
les
sub
popa
add
andl
or
dec
enter
mov
rolb
out
in
xchg
push
push
sbb
add
mov
sub
xchg
push
ja
add
mov
adc
push
sub
push
sub
pusha
sub
out
sub
loopne
mov
std
lea
lahf
int
je
sub
or
pop
incl
xchg
lret
pop
pop
shrb
mov
mov
cmp
test
jge
loopne
jle
movsl
jmp
pop
or
add
inc
cmp
jl
hlt
mov
or
pop
cmpl
ds
sub
adc
mov
or
cmp
pushf
mov
lret
out
daa
roll
inc
cmp
jmp
or
pop
add
sub
xchg
jmp
test
cld
and
cmp
jl
lahf
enter
push
push
jne
pop
push
push
mov
xor
or
inc
cmpsb
xchg
int
movsb
jge
add
cmp
jg
dec
and
adcb
movsl
add
or
int3
lock
mov
lods
pop
push
cmp
rdtsc
mov
inc
cmp
jl
push
xor
jl
mov
rcrl
shr
xor
insl
out
inc
dec
fsubr
xchg
ss
cmp
jne
mov
cmpsb
cmpsl
jl
xor
fistps
neg
sbb
xor
and
mov
add
out
pop
pop
loop
jne
inc
cmp
jl
xchg
fwait
pop
pusha
add
dec
cld
pop
mov
enter
mov
mov
cmp
imulb
sbb
outsb
shrb
jmp
jne
lret
aad
fdivl
pop
push
pop
in
pop
dec
loope
add
jl
mov
mov
sub
sbb
dec
jl
xor
inc
cs
push
add
mov
xor
sbb
out
jl
mov
push
mov
je
mov
test
inc
xor
xor
and
xchg
xor
xor
dec
ss
mov
mov
rorb
push
push
pop
pop
movl
pusha
daa
or
insb
mov
jo
je
or
rclb
pop
mov
leave
cwtl
pushf
cmp
test
mov
push
sahf
addr16
shl
enter
test
add
push
imul
fsubs
movsb
in
or
jns
movsb
push
jmp
cld
icebp
cmpb
add
or
fcomip
fs
xorl
cmp
fildll
push
sub
outsl
push
dec
pop
jns
jo
repnz
loope
aaa
loopne
pop
dec
adc
int3
ret
push
adc
movsl
add
cwtl
or
shlb
mov
push
mov
sub
push
pop
cmc
or
lret
mov
test
push
and
outsb
add
cmp
jmp
sub
push
cwtl
push
cmc
dec
push
add
cld
adcb
push
cmp
jb
add
sbb
xchg
mov
sub
inc
add
je
mov
cmp
xchg
loope
adc
add
jmp
push
inc
push
mov
inc
ret
addr16
add
pop
add
jo
cld
push
sbb
sub
sub
imul
push
imul
rcrb
xchg
fbld
imul
and
lods
testb
jns
add
adc
test
or
sbb
ret
jo
loope
jp
pushf
xchg
std
and
push
jp
mov
cmp
push
popf
sbb
push
dec
loope
mov
repz
int
ret
test
adc
adc
ret
pop
jns
mov
shrb
int3
enter
xchg
jo
push
inc
mov
ret
sub
ret
insb
jl
cmp
out
leave
push
scas
cmp
push
movsl
xchg
fs
inc
adc
fsubr
add
cwtl
mov
mov
rorl
movsl
ret
mov
imul
cmpsb
pusha
imul
sub
or
sbb
loopne
jmp
mov
je
xor
sarl
es
insl
push
push
push
xor
fsubs
mov
rolb
fdiv
mov
insb
mov
and
dec
cmp
sub
push
out
lock
sub
in
and
cmp
insb
adc
cmp
mov
arpl
xor
fidivs
pop
fs
or
mov
pusha
xchg
jg
call
fimuls
xchg
jle
push
rol
ret
loopne
inc
test
and
push
ss
inc
dec
cmp
jo
mov
pop
dec
fs
cmpxchg
pop
dec
dec
push
sub
insb
lock
inc
es
push
sbb
into
bnd
inc
dec
jbe
pop
imulb
loope
push
outsb
inc
xchg
ljmp
fadds
pusha
cmpsl
or
cmp
in
adc
push
add
xchg
test
addr16
add
fs
movsb
push
je
add
mov
daa
mov
push
je
dec
xor
data16
rorb
mov
lret
jno
or
dec
ja
xchg
mov
inc
jl
xor
popf
dec
jl
push
aaa
cmpb
mov
inc
inc
sbb
and
mov
xchg
loopne
stos
out
cmp
and
sbb
adc
mov
pop
loope
pop
repnz
add
pusha
push
call
jo
push
or
test
jo
push
sub
mov
jle
ljmp
sub
cmp
jge
mov
dec
mov
mov
or
xor
adcl
push
je
sub
inc
xchg
sbb
and
es
xchg
iret
dec
into
push
lea
mov
iret
cmp
fists
aad
ret
inc
inc
popa
inc
pop
inc
mov
cs
jle
adc
dec
test
out
pop
inc
bswap
inc
mov
roll
out
insl
adc
mov
addb
inc
hlt
xor
in
add
cmpsl
pop
jo
cmp
lods
mov
jo
mov
call
inc
ss
and
pop
in
adc
xchg
ficoms
mov
mov
pop
fisubs
sbb
cmp
popf
movl
shlb
adc
mov
bound
inc
xchg
adc
mov
nop
loop
daa
ss
mov
inc
and
movl
jl
je
ret
xchg
stc
inc
inc
fimull
sbb
movsl
jge
mov
cmp
dec
or
fsubl
sub
scas
mov
sub
pop
cmp
mov
insl
sub
push
int3
xor
mov
xchg
or
pusha
test
sbb
pop
or
mov
mov
imul
push
jo
pop
and
pop
and
jnp
sbb
test
push
sbb
hlt
or
scas
loop
sub
pop
adc
xchg
add
jo
xor
pushf
mov
add
repz
pop
ret
add
xor
addb
push
movsb
mov
mov
dec
dec
out
mov
js
adc
lea
cli
lret
inc
push
push
clc
fmull
lahf
ror
sbb
hlt
mov
cmp
dec
sbb
fidivs
outsl
mov
add
ja
fimuls
or
call
jle
xor
data16
xor
sti
mov
add
adc
xlat
int
frstor
aaa
sbb
and
movsl
sti
pop
and
sub
xor
xchg
xchg
dec
cmp
inc
dec
outsl
mov
add
movsl
jb
dec
push
pop
pop
pusha
mov
push
cmp
dec
push
jo
je
xchg
jl
sub
stos
jle
addb
nopl
xchg
cwtl
lea
movsb
cmpsb
xchg
dec
movsl
repnz
and
into
loop
and
xchg
and
push
xor
movsl
repnz
cmp
mov
dec
enter
aaa
aam
movsb
push
fcomp
loopne
pop
inc
sub
clc
cld
sahf
dec
test
jmp
repnz
or
xor
or
in
jmp
and
and
cmp
xor
cmp
inc
dec
and
pop
pop
aaa
push
test
insb
inc
sub
jo
js
test
addb
nop
xchg
xchg
inc
sub
movsb
test
test
mov
into
gs
mov
mov
add
test
cmp
dec
add
fisttpl
pop
and
sbb
inc
add
mov
dec
test
lock
cwtl
loope
mov
xor
sub
jns
cltd
dec
xchg
sti
cmp
test
std
cmpsb
je
mov
push
sbb
fwait
ljmp
and
pop
inc
and
inc
adc
jp
jmp
negb
int
fs
sub
loopne
jmp
rol
jne
das
add
pop
roll
test
cltd
pop
stos
inc
inc
testb
fdivrl
push
jae
lock
pop
sub
pop
jge
fisttps
roll
push
data16
cmpl
jg
lock
mov
fcmovbe
or
andl
gs
out
aaa
mov
movl
or
mov
xor
adc
aas
orb
inc
add
mov
test
pop
xor
insl
test
mov
sub
or
add
cwtl
xor
and
ret
je
push
ja
fsubl
and
cwtl
xor
xchg
mov
sub
fdivs
xchg
add
xchg
xchg
xchg
out
add
push
jo
dec
jo
nop
sub
push
daa
and
mov
ja
je
das
adc
cmp
pop
mov
push
hlt
cmpb
push
lock
aam
mov
test
cmpl
mov
push
in
cmp
dec
lock
orb
dec
cmp
xchg
call
push
iret
insb
in
cmp
addl
inc
movsb
xor
xchg
push
aam
rcll
adcb
arpl
shl
dec
xchg
stos
dec
mov
je
push
xchg
int3
and
idiv
pop
je
clc
clc
icebp
fdivrl
clc
pop
pop
pop
je
pop
push
push
push
nop
and
cmp
jmp
imul
cmp
mov
add
imul
add
push
push
push
and
inc
xlat
shrl
out
mov
out
insl
cmp
popa
push
cmc
jne
aad
dec
test
jl
pop
loopne
fs
leave
mov
adc
mov
je
xchg
or
add
frstor
hlt
rorb
insl
jg
jns
fiaddl
jmp
and
cmpb
nop
xchg
outsb
aas
cld
cmp
jo,pt
lcall
sbb
inc
jns,pn
or
pop
inc
cmpsb
dec
xorb
dec
rorl
mov
add
imul
in
je
xchg
test
xor
pop
mov
add
dec
add
push
test
adc
fcoml
sbb
fdivrl
test
jns
cmp
sub
jno
inc
jbe
or
sbb
mov
add
inc
or
sti
jle
add
adc
lock
mov
sbb
or
out
and
add
in
pop
push
or
bound
adc
pop
cmp
ret
jmp
xor
adc
push
mov
cmp
pop
test
lret
push
int
cwtl
mov
testl
xchg
pop
adcb
dec
ret
adc
mov
les
fsubrs
sti
pop
or
imul
dec
dec
push
lahf
sbbb
cmp
push
mov
pop
sbb
push
daa
popf
movsl
pop
inc
rcll
test
jmp
jmp
push
mov
fistps
test
and
push
pop
shl
je
in
pusha
cmp
and
mov
sub
stc
mov
sub
rorb
add
and
imul
inc
movsb
aaa
push
pop
ret
mov
adc
and
mov
mov
ds
clc
push
inc
push
or
xchg
push
push
xor
push
jno
dec
sbb
jg
add
or
addb
inc
xchg
mov
pop
adc
adc
ret
push
adc
cmpsl
adc
or
jg
call
add
ja
mov
push
inc
pop
cmpsl
push
cmp
arpl
orb
cmpl
cmp
out
jae
ljmp
xor
test
push
push
or
jl
add
in
and
and
push
or
push
js
test
leave
jbe
push
add
jo
cmp
jbe
test
test
mov
dec
push
loope
jb
jge
pusha
je
call
sbb
mov
fisttpll
xchg
xchg
mov
call
mov
xchg
insl
enter
js
aaa
jl
sub
inc
arpl
test
std
repnz
add
unpcklps
pop
jne
pop
adc
clc
aam
sbbb
add
movl
mov
push
dec
inc
sbbb
push
add
or
inc
and
or
dec
inc
cmp
jl
loope
inc
mov
ret
fstl
jb
jg
dec
aas
adc
lea
clc
xor
lcall
jg
pop
sub
mov
mov
push
dec
xchg
push
ss
mov
cmpl
pop
imul
lret
lret
or
mov
cmp
dec
push
mov
cwtl
xchg
dec
rcll
idivb
cmp
adc
ds
mov
cli
dec
push
push
push
push
jae
lcall
add
jno
shll
push
inc
repnz
dec
push
sub
sub
clc
adc
and
test
cmpsl
inc
inc
je
and
pop
addb
or
push
add
sub
mov
je
sbb
mov
add
bound
jbe
ret
jmp
cmp
sbb
inc
xchg
dec
pop
std
stos
add
push
aaa
push
cmp
jne
pop
test
push
flds
push
orb
mov
inc
mov
xchg
test
inc
in
or
push
jnp
push
rcrb
sub
and
pop
and
jl
mulb
jno
adc
push
or
sahf
shlb
call
push
test
bnd
fisttpl
popa
add
inc
loopne
or
adc
ficompl
les
cmp
mov
ss
mov
sub
fidivl
or
or
mov
adcl
in
mov
sbb
daa
or
and
push
add
xor
add
sub
and
add
xchg
fimuls
or
insl
ret
icebp
xor
push
adc
neg
repnz
arpl
inc
sahf
mov
add
mov
mov
lea
cmc
call
cmp
mov
jo
les
push
pusha
push
and
mov
ret
xchg
push
mov
mov
std
adc
sub
mov
lock
dec
sub
adc
aaa
inc
rdtsc
add
inc
ret
mov
push
push
push
les
pop
stc
int
imul
mov
push
push
add
mov
push
dec
adc
xor
xor
pop
aas
mov
push
sub
add
and
in
pop
test
or
push
push
mov
adcl
adc
add
or
bts
je
sbb
xchg
push
call
adc
xor
ret
push
outsl
mov
add
jns
inc
inc
sbbl
add
mov
push
mov
cmp
mov
sbb
push
push
jae
push
dec
jecxz
outsb
jbe
dec
sub
push
inc
add
int3
mov
pusha
mov
pop
insl
xor
mov
push
repnz
xchg
sbb
sbb
fst
xor
sbb
ret
mov
cltd
inc
bnd
lea
pop
sub
loopne
jle
insb
mov
cmp
fnsave
and
mov
adc
or
pop
push
mov
pop
pop
aad
pusha
xchg
mov
push
out
aaa
cmp
xchg
cmpsb
push
adc
enter
push
stc
notl
add
jmp
fldt
jl
je
flds
and
mov
jl
arpl
jbe
sarb
adc
jno
adc
jae
jl
adc
add
and
push
jge
mov
adc
mov
push
dec
add
divb
xchg
sub
push
push
mov
sbb
jb
add
push
sub
jge
or
mov
ret
dec
adc
add
dec
les
lods
dec
cmpsl
lahf
dec
rcl
add
adc
dec
mov
repnz
fildl
or
insb
cltd
or
fists
rolb
mov
or
cmp
cmp
sub
pop
adc
sbb
js
idivl
sbb
pop
insb
cmp
pusha
mov
imul
out
xor
jno
sbb
call
and
push
and
add
movsl
insl
mov
xchg
lahf
push
inc
adc
mov
jge
push
movsb
int3
orl
loop
dec
test
push
scas
mov
jbe
cld
sub
pop
jne
and
or
mov
jns
pop
loopne
jnp
movsl
pop
jecxz
ss
add
mov
add
clc
jns
adc
add
faddl
mov
push
inc
sbb
rcll
xchg
adc
mov
or
out
fiadds
cli
mov
cli
jge
lea
cmp
cmp
loopne
push
shlb
push
lret
popa
jle
inc
cli
inc
clc
mov
jle
push
jg
outsb
push
pop
cmpb
lea
add
push
sub
add
jno
gs
nop
nop
shrl
imul
jns
rcll
add
iret
mov
sbb
mov
sub
ljmp
loop
sahf
cld
xchg
mov
mov
xchg
push
ds
ljmp
ret
cmp
sbb
lods
adc
jne
filds
pop
or
or
mov
mov
aas
jg
sub
pop
xor
sahf
rorl
roll
das
jbe
sub
pop
xchg
dec
push
mov
cli
out
sbb
jb
xor
or
sbb
in
and
stos
js
dec
stos
sub
enter
aam
or
fsubs
fimuls
es
ficomps
sub
sub
addr16
jb
xor
or
enter
inc
and
xchg
aam
sbb
push
clc
pop
and
insb
mov
pop
sub
dec
or
mov
jmp
stos
leave
xchg
and
in
loope
out
pop
push
aaa
cmp
je
orl
sbb
rorb
xchg
and
sbb
adc
sub
or
ljmp
test
push
dec
jnp
fstl
dec
pusha
dec
sbb
incl
loopne
shlb
rorl
mov
test
and
idivl
adc
dec
cmp
sbb
fbld
lock
es
sbb
test
out
sbb
fucomip
push
inc
call
xchg
sub
push
add
push
int
add
cmp
pop
sbb
insl
add
daa
dec
dec
test
hlt
jne
push
vxorps
int3
and
pop
pop
jl
inc
cmp
xlat
xor
lock
or
mov
js
pop
ret
ror
and
fisttpll
daa
sub
in
mov
sarb
addb
mov
dec
and
mov
loop
fmuls
les
test
mov
ja
test
add
lret
pop
jo
adc
sub
and
cli
push
icebp
or
flds
jp
or
pop
xor
sbb
xchg
out
aad
incb
fistl
add
rcll
test
sub
mov
and
pop
and
cmpsl
xor
push
ljmp
cmp
iret
pop
or
fmull
punpcklbw
sbb
pop
sbb
lock
cmp
cltd
dec
sarl
inc
jmp
lea
repz
sbb
adc
push
cmp
jb
fwait
pop
add
test
sahf
push
cli
adc
and
or
push
push
fcoms
lahf
iret
or
cmp
mov
add
cld
push
add
pop
cmp
inc
mov
fadds
lock
sbb
mov
mov
mov
fs
into
daa
std
push
inc
or
jne
sbb
sbb
dec
fisttpll
imul
pop
hlt
cmp
inc
add
add
inc
enter
push
in
and
cmp
or
cmp
test
scas
push
test
sub
test
repnz
or
push
inc
mov
adc
std
in
std
sub
mov
mov
or
sbb
movsl
or
push
roll
mov
dec
into
bound
dec
and
aaa
push
cmp
nop
inc
daa
inc
out
pop
inc
inc
test
fwait
push
sub
xchg
addb
push
ljmp
loopne
push
scas
mov
jmp
adc
sub
orl
pop
nop
out
and
adc
pop
pop
xchg
and
mov
nop
push
add
daa
jmp
dec
enter
mov
inc
pop
cwtl
hlt
dec
out
lea
push
fmuls
cwtl
in
test
push
call
loopne
bound
fwait
add
outsb
jmp
insb
or
adc
stos
add
cmp
sbb
movsb
cmp
sbb
inc
or
bound
repnz
lds
or
xchg
mov
inc
mov
push
or
scas
rcl
fldenv
cmp
mov
jmp
add
jbe
cli
adc
test
mov
inc
sarb
mov
and
mov
jmp
lea
jne
mov
inc
enter
jno
xor
mov
leave
in
mov
adc
pause
test
push
mov
dec
cld
mov
mov
xchg
icebp
pop
dec
adc
adc
jne
adc
xchg
xor
cmp
lds
dec
das
cwtl
xchg
inc
test
cld
or
sbb
les
movsb
rclb
xchg
add
lret
xor
add
cmp
adc
xor
jle
dec
cmp
xor
ds
or
add
mov
int3
xor
dec
out
jne
ret
inc
xchg
sbb
mov
push
push
dec
xchg
cwtl
mov
clc
dec
jne
aaa
inc
mov
mov
add
inc
or
add
sbb
cs
inc
loope
adc
xlat
int3
rcrb
mov
ret
dec
cmp
or
push
xor
jmp
shl
mov
jnp
inc
sbb
popw
mov
sbb
cs
pop
inc
dec
push
pusha
add
or
dec
jle
call
call
mov
mov
pop
lea
jle
pusha
mov
jge
nop
mov
add
add
xlat
xchg
cmp
xchg
sbb
test
jns
movsl
inc
xchg
jmp
mov
push
jno
sub
add
push
mov
or
or
mov
insb
pusha
testb
mov
popa
mov
pop
mov
xor
fists
mov
test
or
ds
jb
add
xchg
sub
dec
pop
add
xchg
xchg
divb
pop
push
and
lock
aas
sbb
cmp
dec
sbb
test
lods
and
lret
cmp
add
and
dec
xor
test
and
sub
or
xchg
or
fadds
xchg
clc
or
and
cltd
cmp
and
je
cmp
add
pushf
add
mov
repnz
or
mov
subb
sahf
jl
test
and
mov
jbe
dec
mov
enter
cs
testb
les
enter
sbb
add
pop
das
jbe
aam
or
inc
mov
add
and
ja
and
or
call
mov
fistps
xchg
lret
movsl
popf
mov
nop
cwtl
xchg
mov
sti
cs
add
cs
lret
les
enter
add
sti
ja
cmp
mov
icebp
insb
imul
jae
adc
ret
or
arpl
and
add
adc
adc
inc
decb
inc
mov
loope
sbb
bound
xor
pop
add
and
push
and
addl
sub
or
xor
loope
dec
cmp
inc
jne
pusha
dec
rcl
fbld
insb
pop
adc
mov
pop
pop
pushf
jg
push
leave
sub
mov
and
sti
cmp
mov
adc
sub
or
call
pushf
cmpsb
add
xor
notl
pop
mov
xchg
pop
imul
pushf
inc
xorb
ret
mov
xlat
inc
sti
pop
cmp
mov
inc
cmp
jecxz
je
leave
sbbl
cmp
and
push
sbb
leave
or
jle
xchg
add
sub
fdivl
push
fmuls
enter
cmp
lods
or
cwtl
sub
add
cmp
cmp
or
nop
xchg
add
and
add
push
mov
or
and
pop
or
mov
inc
add
and
push
fsubs
mov
pop
add
push
fwait
pop
mov
lea
and
cmp
lods
ret
es
sbb
loopne
cmp
mov
push
aad
add
dec
cmpsl
xor
mov
push
add
testb
enter
or
rolb
jno
or
inc
call
sarb
test
cmp
jne
pop
and
mov
fsts
rcrl
sbb
sub
or
ficoms
mov
add
repz
cld
sarb
push
ja
dec
inc
mov
cmp
cmc
add
inc
mov
cmp
lea
lea
sub
ja
popa
out
aas
push
push
push
cmp
and
cmc
sahf
adc
bound
mov
sub
int
dec
sarl
mov
mov
sub
sarl
xchg
lods
or
or
fdivrs
imul
or
dec
mov
mov
loopne
inc
roll
or
cmp
push
add
xor
push
sub
enter
adc
adcl
dec
rorl
cltd
push
das
and
mov
pop
ja
das
mov
ror
pop
imul
xlat
cmp
test
sub
xchg
test
mov
push
dec
add
jl
and
mov
dec
insb
sbb
mov
xchg
mov
sbb
pop
and
or
jb
add
ja
aad
pop
jo
pop
cmp
je
mov
push
lods
pavgb
arpl
lods
cmpsl
aad
fmuls
adc
dec
movl
xor
add
pop
mov
andb
dec
push
or
cmpsb
xor
das
clc
lds
fwait
daa
xor
mov
pop
xchg
stos
lahf
outsb
ss
push
or
dec
adc
int3
push
jne
aam
add
enter
mov
add
add
sub
mov
xor
mov
aas
push
adc
push
dec
push
pop
push
inc
fcomp
pusha
xlat
adc
pop
lds
jl
push
sbb
adcb
pushf
rclb
sub
push
sbb
adc
dec
scas
push
push
cmp
inc
add
push
push
add
xchg
cmp
mov
pop
iret
pop
add
add
fwait
cmpsb
or
push
jl
xchg
push
push
cltd
or
jl
add
lea
cwtl
cmp
pop
iret
stos
pop
adc
cmp
gs
imul
int3
incl
fidivl
bound
dec
mov
loop
ss
adc
rorb
xchg
cmp
adc
rorb
cwtl
jo
mov
fldt
inc
pop
jne
sbb
push
push
sarb
cmpsb
push
pusha
out
push
and
mov
mov
push
repnz
mov
pop
mov
mov
adc
dec
popf
pusha
scas
ret
test
aas
in
pusha
mov
pushf
adc
insl
loopne
mov
clc
mov
cmp
add
sbb
mov
popl
jns
jp
add
push
rcrl
in
xchg
push
jecxz
addr16
mov
test
push
outsl
push
sbb
or
jl
loop
adc
sub
sbb
push
stos
push
xchg
cltd
push
add
pop
lahf
mov
lahf
test
and
cmpb
or
das
dec
lods
jo
stos
aaa
sub
jo
jl
pusha
pop
xor
and
sub
pop
sub
xchg
adc
xor
inc
negb
cmp
loopne
mov
mov
int3
icebp
mov
adc
inc
xchg
test
call
in
jle
pop
add
or
test
ret
pop
sub
inc
mov
jnp
mov
notb
into
inc
jo
jo
push
or
sub
sbb
filds
out
pop
sbb
sub
cmp
sbb
sbb
or
or
jne
jae
lea
imul
adc
jne
sub
stos
cmp
sbb
popa
call
xchg
dec
jne
push
pop
popf
stc
scas
sbb
cmp
adc
xor
in
xchg
rcll
int3
jmp
arpl
cld
xchg
movsl
cmp
push
dec
push
dec
mov
pop
or
cmp
inc
movsb
adc
pop
add
push
sar
test
mov
fnstenv
inc
and
xchg
adc
sbb
dec
cmp
sub
inc
shlb
mov
hlt
add
clc
inc
mov
sub
faddl
ret
push
sbb
mov
mov
pushf
or
sub
dec
clc
sub
je
push
ja
ffreep
jmp
data16
push
shlb
add
add
add
xchg
mov
jecxz
dec
sbb
fcoms
das
mov
out
movsl
insl
aam
mov
outsl
cmp
js
inc
xor
push
push
push
call
aaa
pop
jne
xlat
outsl
add
out
mov
pop
adc
xchg
xchg
and
jnp
fadds
jmp
leave
mov
inc
out
test
mov
aas
dec
add
popa
lea
lea
adc
movntq
pop
xor
jmp
dec
or
sub
mov
xor
arpl
and
sbbl
xor
dec
dec
ret
cmp
xlat
dec
rol
sub
or
hlt
mov
sbb
inc
fnstsw
push
shrb
sbb
dec
xor
cmp
push
adc
ss
addr16
pop
fidivrs
pusha
popa
xor
lahf
mov
lock
sbb
or
daa
or
adc
scas
add
or
jae
bound
pop
xchg
xor
mov
push
push
incl
add
daa
jmp
push
lret
xlat
or
imul
cmp
andb
push
or
sbb
add
push
cmp
jns
dec
in
inc
bound
cmp
test
in
fnstcw
aaa
aas
es
inc
push
adc
sbb
cmp
dec
aas
std
push
lret
lcall
lret
xor
xor
out
push
inc
out
fcomip
fsubs
mov
leave
sbb
repnz
push
out
fidivrs
push
inc
push
js
pushf
je
ds
inc
mov
inc
cs
jg
jmp
inc
inc
rorb
push
push
sbb
mov
adc
cmp
or
jmp
inc
ret
lock
out
loopne
xor
push
mov
out
mov
sub
shrl
test
sahf
testb
mov
in
arpl
dec
mov
pop
xlat
or
fwait
das
push
rcll
lods
push
filds
stc
mov
mov
imul
adc
lret
loope
and
sbb
jno
sub
stos
cmpl
adc
cmpsb
test
add
int3
push
push
add
aas
aaa
arpl
es
jb
add
or
nop
or
enter
pop
inc
imul
mov
xchg
adc
mov
lret
movsl
pop
or
add
fistl
sub
cwtl
or
ljmp
inc
rclb
mov
jbe
gs
dec
cmpsb
xchg
movsb
push
es
jge
push
push
mov
mov
std
in
mov
cli
mov
popa
pusha
data16
push
out
xchg
or
jecxz
and
aam
aam
hlt
ret
mov
mov
mov
es
push
xchg
or
pop
mov
jns
test
int3
mov
in
fs
cmp
movsb
test
cmp
xchg
adc
cwtl
add
xchg
pusha
shrl
and
jl
mov
pop
sbb
push
fidivs
scas
mov
sbb
data16
pop
pop
jns
scas
sub
rcr
cmpsb
jb
ss
mov
or
das
ror
push
aam
xchg
dec
adc
jmp
les
clc
mov
addr16
jne
ret
out
movsl
and
cmpsb
pop
sub
movsb
cmpb
xor
xchg
sbbb
adc
sbb
xchg
ret
dec
cmovg
test
and
or
mov
inc
jo
cmp
shrb
push
add
jmp
sbb
scas
test
movsb
in
xor
and
pop
push
sub
enter
int
lods
shll
dec
pop
data16
sub
movsb
cmp
dec
pop
sub
pop
fiaddl
sarb
sqrtps
in
aam
sub
aaa
mov
pusha
or
push
aad
add
push
es
dec
add
lea
push
gs
adcb
jle
cmp
mov
jne
mov
imul
and
clc
and
push
cmpl
mov
das
test
sbb
sbb
add
add
jnp
les
xchg
sbb
inc
test
test
jne
jmp
mov
fsub
inc
sbb
xor
decl
pusha
pop
and
int3
data16
add
bound
inc
xchg
aas
lods
negl
xchg
inc
fists
fwait
adc
rcrl
sub
fs
add
pushf
into
inc
loopnew
push
jae
aam
out
negl
jl
and
push
addr16
mov
mov
sbb
cli
add
outsb
int3
jle
or
or
xchg
cs
paddb
sti
push
scas
call
daa
in
push
mov
jae
inc
popf
cmp
or
inc
stc
std
mov
push
mov
mov
rclb
and
inc
add
test
adc
and
push
or
jmp
jp
inc
jle
mov
loop
mov
xor
dec
push
xor
stc
dec
and
and
ret
inc
pop
or
mov
orl
daa
dec
daa
mov
push
mov
dec
test
je
nop
mov
test
mov
mov
sbb
cmp
pushf
jmp
mov
cld
xor
sbb
test
idivb
mov
cmp
or
clc
add
and
pop
in
pusha
hlt
test
ret
inc
loop
jecxz
push
push
and
mov
test
mov
das
push
and
movsb
jnp
xor
fs
add
push
je
test
dec
dec
push
mov
sub
pop
dec
mov
pushf
lods
push
mov
cmp
ja
jmp
and
push
dec
xchg
fsubs
adc
add
cs
dec
mov
enter
push
sub
push
push
cmp
cmpsb
flds
mov
scas
test
in
mov
lock
dec
popa
je
sbb
popl
pusha
gs
in
icebp
cmp
and
pop
xchg
inc
sbb
mov
hlt
mov
and
dec
mov
sbb
adc
outsl
data16
and
ret
hlt
dec
and
lock
mov
xchg
or
and
cmp
sar
inc
pop
les
mov
mov
cmp
adc
adc
mov
adc
add
dec
sbb
push
dec
jne
mov
or
ss
push
rep
sbb
add
fisttpll
addl
adc
sahf
mov
sub
push
jg
stos
push
and
jo
add
push
rol
cmp
repz
repz
jle
lods
out
jl
sub
hlt
enter
adc
xor
sub
dec
mov
push
dec
cmpl
inc
or
add
or
and
repz
and
add
das
jmp
mov
push
leave
mov
dec
sub
xchg
ficompl
mov
fdivl
mov
sbb
add
or
cmp
sbb
mov
sarb
dec
and
lea
jl
movsl
add
sbb
cmp
dec
arpl
fs
cli
jge
sbb
icebp
sbb
fidivl
or
jge
xlat
pop
jl
iret
adc
lea
cmp
scas
mov
mov
xor
dec
push
push
push
jmp
xor
adc
ds
lret
inc
test
and
add
je
lea
sti
push
jp
adc
lea
pop
pop
das
mov
enter
dec
push
adc
push
xchg
out
xlat
mov
jmp
pop
jmp
push
add
push
pop
sbb
imul
push
dec
push
dec
sbb
jns
mov
xorl
pop
pusha
mov
xor
push
push
mov
add
jge
jmp
lret
add
inc
bound
xor
jmp
idivl
icebp
insb
test
jg
in
add
adc
mov
dec
neg
sbb
and
sbb
adc
push
sbb
mov
jl
lcall
add
dec
sub
fcmove
mov
lock
das
push
scas
jns
cmp
int3
stos
mov
xchg
cmpsl
test
and
lods
and
shr
sbb
mov
add
or
jno
push
pop
mov
lods
push
push
movsl
jb
rclb
scas
lods
lahf
add
push
add
js
and
cmpb
mov
lods
bswap
cmp
xorl
mov
cmp
mov
inc
hlt
out
sub
mov
push
mov
mov
push
inc
stos
jb
mov
xor
rorl
xor
clc
test
scas
push
mov
vpcmpeqw
fmull
cltd
rcrb
fldln2
daa
jnp
push
sbb
xor
jne
cmc
xor
les
add
dec
adc
dec
gs
pusha
fmull
dec
xor
cmp
pushf
pop
sub
jg
inc
ds
les
mov
sbb
dec
jg
movsb
and
out
das
test
test
icebp
jne
mov
mov
add
outsl
or
push
lock
popa
mov
cwtl
cmp
pusha
movsb
sbb
add
rcrb
mov
pop
daa
pop
mov
jne
insb
enter
scas
lds
and
dec
dec
cmp
jge
pop
and
push
mov
mov
xchg
mov
movsb
sarl
lock
add
push
loope
popf
cwtl
push
adc
loopne
push
jns
mov
or
nop
or
rcrb
inc
adc
dec
dec
ja
dec
rcl
shll
aaa
or
or
or
inc
es
call
sahf
in
pop
data16
cmp
and
cmpb
pop
xor
sub
sub
ret
pop
aam
xchg
sbb
mov
dec
test
inc
je
int
outsb
mov
loope,pn
mov
sbb
popf
mov
or
push
sub
add
test
jne
sub
sub
adc
mov
xchg
adc
cmc
xchg
mov
lods
nop
cmp
sbb
sbb
xor
jp
dec
cmc
decl
imul
jns
mov
es
xor
push
xchg
sbb
and
push
add
dec
testl
das
push
lea
pop
mov
pop
nop
cmp
cmp
push
jb
in
sbb
pop
pop
push
into
push
and
outsb
jmp
adc
lods
popa
ds
and
std
mov
jb
pop
outsl
xor
dec
cmpsl
ljmp
ds
jb
js
push
cmc
inc
in
lea
sub
scas
or
outsl
add
sbb
jp
and
jmp
jle
jg
xchg
xor
jg
shll
popf
pop
mov
inc
and
push
pusha
repnz
iret
cli
xchg
movsl
aas
or
lahf
xchg
je
adc
andl
inc
or
sbb
lahf
xchg
push
push
cmpl
je
mov
in
fdiv
cmp
xchg
cmp
popa
das
lods
lea
cmp
out
ja
push
movsl
fs
adc
push
shlb
stc
push
jne
call
dec
mov
add
jle
inc
xor
xchg
push
fcmovbe
shrb
pop
jp
xchg
gs
stos
orb
aas
and
dec
jne
pop
mov
rolb
stos
jne
lret
or
add
inc
inc
fs
les
dec
push
add
jo
cmp
pusha
popa
ljmp
cmp
or
inc
stos
daa
jle
dec
push
xchg
push
loopne
bswap
xchg
push
std
fwait
sbbb
or
inc
xor
add
and
je
add
in
add
and
push
test
mov
inc
popf
fisttpl
cmp
push
out
jb
dec
sub
das
call
cmp
ret
dec
cmp
es
lds
insb
mov
into
int
outsb
iret
or
cli
or
or
gs
js
or
mov
ret
jbe
xor
jmp
pop
push
sub
lock
stos
fisubl
cmpsl
adc
nop
psubb
mov
rcl
sub
mov
adc
ljmp
push
or
ss
dec
ret
add
es
daa
or
sbb
outsl
push
jo
mov
jne
adc
insb
inc
dec
mov
push
nop
push
testl
lds
ljmp
arpl
icebp
ficoml
je
sub
sub
jge
push
lods
cmpsb
add
sbb
add
popa
mov
movsl
add
adc
outsl
mov
add
push
xchg
add
lock
jb
or
daa
je
or
pushf
add
flds
mov
pusha
add
xor
ret
jecxz
pusha
or
mov
adc
mov
mov
test
mov
movl
shr
jmp
sub
and
inc
js
daa
mov
into
mov
jno
add
bound
lea
movsl
movsl
push
xchg
add
inc
dec
sbb
mov
push
push
pop
mov
ds
loopne,pn
xor
jmp
cmp
or
pusha
mov
rolb
sbb
mov
imul
scas
pop
sbb
sbb
mov
fcompl
in
or
fdivl
aas
pop
cwtl
js
mov
add
adc
and
sub
js
outsl
mov
jnp
mov
sub
sbb
push
call
and
loop
push
lcall
push
test
xor
xchg
xor
push
jo
ljmp
jo
ds
sub
sub
or
pop
ja
in
pop
mov
pop
pop
and
nop
insb
mov
push
mov
mov
jl
or
add
inc
cmpb
cmovo
add
add
mov
ljmp
mov
xchg
cmp
jp
movsl
lea
sub
inc
mov
sub
or
mov
jge
inc
test
dec
loop
dec
pop
lock
add
add
or
dec
sub
fwait
or
fcoms
cld
push
mov
adc
or
clc
push
aam
push
lahf
and
sbb
inc
xorl
adc
push
adc
cmpb
xchg
mov
jae
xchg
loopne
sbb
sti
add
fidivrl
enter
cltd
jmp
mov
mov
mov
daa
jns
in
pop
inc
cmp
cltd
fnstsw
fnstcw
xchg
jns
and
jnp
jbe
cmpl
adc
sarb
push
jge
mov
jl
lret
pop
inc
cltd
add
mov
push
mov
mov
pop
sub
pop
aas
sub
push
push
add
imul
fwait
pop
lea
int
bound
xor
fsubl
test
push
pop
xchg
sbb
fmuls
or
adc
push
in
fs
mov
pop
pop
pop
in
loope
add
scas
pop
sub
mov
cld
or
loop
fidivl
jge
daa
ret
call
jg
mov
sar
arpl
sub
movl
shlb
sbb
je
xor
xchg
xchg
or
or
lea
pop
test
push
or
ljmp
ds
mov
std
push
repz
rclb
push
stos
call
push
inc
dec
push
or
or
out
adcl
hlt
ret
mov
push
int3
cmp
sbb
or
and
xchg
add
or
xorb
movsl
fbstp
ds
sub
inc
cmp
mov
mov
dec
push
sub
dec
hlt
popf
test
sarl
xchg
mov
loopne
xchg
aam
and
mov
push
jge
mov
lea
add
add
pop
cwtl
dec
mov
js
fimuls
sub
lock
fisubs
sub
mov
aaa
adcb
cmpb
clc
add
cld
and
sarl
cmpsl
stos
jge,pt
adc
jbe
leave
mov
pop
test
je
jmp
ror
sub
or
cmovp
mov
pop
mov
cmp
insb
subb
sbbl
cmp
lds
rol
xorb
or
or
std
jb
dec
testl
jmp
mov
adc
xor
adc
mov
push
push
dec
ficoml
jg
xor
push
and
inc
inc
xor
or
insl
jbe
scas
dec
jne
or
sub
xchg
mov
je
push
lahf
sbb
or
push
add
or
add
adc
icebp
pop
inc
mov
lds
rolb
sbb
mov
popa
negb
ret
pop
or
mov
imul
aaa
mov
push
pop
and
adc
in
push
push
or
inc
push
jne
cmpb
push
mov
inc
mov
test
imul
jo
jo
add
inc
pop
sbbl
test
repnz
push
test
mov
jne
fbld
adc
and
test
dec
push
ffree
mov
mov
fcmovnbe
insl
mov
push
push
ret
pop
insb
lea
sahf
lret
sbb
inc
movsl
mov
or
cmp
push
push
clc
sbb
jnp
test
andps
rcll
imul
inc
and
test
xor
mov
inc
xlat
aas
test
add
fs
push
call
dec
cld
sbb
scas
add
movsl
and
jns
popa
mov
nop
call
mov
movsb
sub
push
or
push
push
lods
add
insl
out
mov
outsb
call
sbb
sub
insb
dec
loope
cmp
fdivrl
pop
push
add
or
lock
jge
testl
sbb
aam
fsub
cmp
out
mov
inc
xor
js
mov
clc
ret
xchg
push
into
and
fnstenv
push
add
bound
pop
cld
insb
pushf
fmull
aas
ljmp
jne
xchg
fadds
cmp
insl
add
das
add
outsb
or
sub
daa
inc
and
je
ds
add
int3
mov
insb
popa
les
jbe
dec
sbbl
in
cmp
loope
add
cmpsb
pop
xchg
out
popa
sub
sbb
jne
rorb
push
in
xchg
xchg
lock
fstpl
fs
or
and
bound
xor
jmp
dec
faddl
aam
push
jmp
push
push
bound
or
push
sbb
or
fistpl
rol
and
push
adc
int
scas
push
mov
pusha
xchg
pop
adc
imul
mov
inc
push
sbb
sub
mov
sub
jg
or
test
lea
lock
rorb
push
std
cmc
sbb
lods
mov
cmove
xor
push
sub
nop
ds
cld
add
xor
pop
mov
cmp
lock
sbb
jl
mov
mov
stc
das
je
movl
repz
js
in
adc
ss
negl
xchg
movsb
lahf
into
aas
lret
cmp
xchg
pop
mov
jge
sub
mov
xor
jne
or
mov
popf
xor
or
sub
movl
pop
mov
cmp
add
popa
mov
lcall
es
js
inc
inc
adc
scas
pop
pop
fsubs
adc
cmp
or
clc
js
mov
iret
fldl
insl
fiaddl
sub
sub
xor
int
jl
cmpsl
jmp
lods
pop
rcrb
scas
and
xor
lock
cmpsl
mov
out
clc
sbb
mov
xor
mov
and
add
mov
pop
push
pop
adc
xchg
pinsrw
xchg
pop
mov
xchg
jns
aam
add
inc
or
inc
add
outsb
mov
or
cmp
nop
adc
push
or
or
push
inc
scas
xor
fcomps
xor
cmp
hlt
jns
jp
add
hlt
sbb
lock
xchg
movsb
push
mov
add
cmp
xchg
andl
dec
sub
jae
inc
xchg
sbb
lds
jle
xor
mov
test
scas
jno
call
lret
pop
lods
pop
or
xor
sbb
lods
add
imul
ret
or
jge
ret
out
push
push
jle
jae
icebp
add
loopne
pop
sub
dec
pop
or
je
outsl
push
push
pop
cwtl
inc
sbb
jl
jp
jne
inc
xchg
scas
cmpb
aad
jne
dec
cmp
rclb
pop
jp
sbb
adc
xchg
ljmp
cmp
add
inc
add
iret
inc
sub
cmp
leave
xor
inc
jle
call
ret
lret
or
in
adc
xor
push
push
push
bound
or
ja
inc
xchg
dec
jne
sub
jnp
bound
in
pop
in
into
inc
ja
mov
pop
sub
mov
insb
adcb
cmpsb
jae
repnz
dec
dec
sbb
mov
mov
pop
push
push
btl
imul
xor
fs
push
mov
ss
mov
adc
sbb
dec
or
stos
jo
add
sahf
out
std
and
fiadds
add
add
push
pop
mov
push
fistpl
and
adcb
push
int3
or
add
outsb
or
push
cmp
mov
push
sarl
outsb
popa
pop
pop
js
sbb
push
pop
mov
push
push
push
push
push
push
jnp
call
add
rorl
out
jb
dec
inc
loope
in
add
adc
mov
sbb
fadds
ljmp
stos
and
in
pop
shr
pop
not
push
push
jp
lock
icebp
pop
mov
mov
push
sub
aam
lock
adc
or
insb
jge
popa
adc
bound
popl
sbb
ret
xchg
pushf
imul
pop
lret
xorb
push
addl
addr16
xchg
pop
add
add
dec
dec
pop
pop
or
adc
add
jbe
aaa
imulb
rcll
and
xchg
nop
lahf
sub
or
pushf
imul
and
mov
jg
add
xor
cmpsl
cmpsb
nop
shr
dec
out
xchg
mov
test
rorb
pop
mov
add
inc
test
ds
jns
add
aam
inc
inc
dec
sbb
fwait
jmp
pop
outsl
loop
imul
cld
cmp
mov
adc
loopne
mov
pop
xchg
fstpt
aas
jmp
jae
or
xchg
xchg
fistl
ljmp
push
ds
jp
aam
ret
clc
mov
into
sub
adc
stos
call
xor
mov
shrl
and
xor
sahf
testl
xlat
pop
lret
call
jbe
ds
dec
pop
out
jns
fistpl
test
js
jne
into
mov
push
jg
icebp
push
add
jo
js
xchg
mov
lods
xorl
mov
dec
xor
loope
mov
sbb
jmp
sbbb
adc
loope
pop
leave
test
push
mov
negl
insl
push
scas
add
cld
xor
pop
add
mov
or
mov
pusha
aad
popa
sbb
jle
sbb
sub
mov
adc
fisubrs
adc
push
dec
adc
sub
das
cmp
or
cmpl
sub
in
fmulp
clc
das
pusha
inc
mov
movsb
or
pop
inc
mov
push
imul
or
add
xchg
push
xor
enter
xchg
inc
and
pop
in
sub
jmp
pmaxub
adc
std
mov
lea
lods
add
test
push
cmp
mov
ss
pop
pop
xchg
sub
movsl
jmp
rorb
outsl
push
sbb
fcomp
cwtl
jp
into
xchg
push
popf
pusha
fnsave
adc
or
add
push
cmp
xor
push
loop
xchg
dec
jnp
lret
cmp
mov
mov
lods
add
shrb
sar
sub
add
push
ret
inc
mov
int
es
cmpl
push
add
cs
stos
lods
fisubl
jl
shlb
aam
ljmp
mov
leave
xor
test
rclb
mov
bound
faddl
add
loope
imul
addb
shrl
call
cmpsl
or
sbb
push
addb
shr
mov
push
push
fwait
ss
ficompl
jo
ljmp
aas
sbb
dec
mov
jmp
movswl
mov
sub
outsb
mov
addr16
dec
xchg
push
dec
loope
push
lahf
aad
enter
jo
push
in
fs
jp
repz
push
das
rcll
cld
fstpt
pop
add
add
add
add
fldt
jecxz
add
sbb
jl
sahf
out
pop
inc
push
pop
outsl
test
jo
enter
into
andl
push
xor
adc
pop
addl
movsb
lret
sbbb
icebp
adc
cmp
fcom
sub
inc
insb
shl
mov
mov
dec
inc
mov
xchg
push
mov
xor
jno
test
cmpsb
push
pop
orl
jl
cmp
or
push
inc
js
lret
movsb
xchg
sti
mov
mov
les
lods
mov
stc
cwtl
jp
xor
in
test
les
pusha
or
pop
pusha
adc
scas
mov
movsl
jbe
out
fs
int3
xlat
shr
xor
sbb
inc
loopne
pusha
pop
fnstsw
call
aam
mov
je
xor
fiaddl
mov
loopne
xchg
push
and
ljmp
jp
push
adc
loopne
push
std
add
lret
test
xor
pop
mov
sbb
inc
mov
add
push
pop
fisttpl
adc
push
pop
fimull
aaa
rorl
adc
cmpsb
or
pop
mul
adc
adc
push
outsb
nop
ss
adc
jmp
cmp
push
scas
pop
mov
es
pop
test
add
sti
or
dec
mov
addb
jg
fisubl
jg
push
mov
dec
mov
aam
pop
imulb
pop
xor
outsl
adc
sahf
xchg
mov
out
adcl
xchg
xor
cld
nop
pop
add
xchg
adc
in
aaa
push
mov
push
push
lret
and
popa
pop
loope
push
adc
pop
xchg
ret
mov
mov
rcrb
cli
add
mov
mov
cmpl
cmp
sub
out
sar
inc
pop
cmp
adc
sbb
xor
inc
popf
mov
or
or
mov
jmp
inc
sub
shll
push
xor
sbb
xchg
rolb
insl
sarb
xor
dec
rclb
sarl
jo
push
lret
repnz
xchg
rorb
lds
hlt
cmp
push
sahf
or
lea
cmp
push
andb
lret
dec
fistpll
adc
and
mov
mov
aas
mov
push
repnz
xor
mov
mov
jge
loope
and
and
and
mov
test
ds
mov
inc
mov
xor
push
add
push
push
dec
andl
sahf
adc
jns
dec
in
mov
xor
and
sarl
sub
cmp
sahf
call
js
jmp
sbb
je
shlb
sub
push
int
test
mov
and
sub
loop
xchg
dec
cmp
scas
dec
push
out
outsl
cmp
lea
or
pop
dec
push
push
sub
pop
lock
cmpb
bound
shlb
dec
popf
cmpsl
stos
push
mov
cli
mov
adc
and
repz
push
rolb
aaa
cwtl
sub
sbb
push
xchg
jg
mov
add
and
ds
fidivrl
lret
xchg
adc
sbb
mov
and
sub
shr
fwait
add
orb
push
lahf
call
divl
mov
add
sahf
cwtl
add
sbb
mov
or
mov
mov
sbb
cmpsl
ja
enter
adc
add
sub
mov
xchg
adc
dec
lods
cmpl
jne
test
cmp
mov
lods
out
test
faddl
sub
xchg
push
lods
cmp
das
or
push
testb
jmp
mov
pop
aam
popa
insb
test
mov
mov
ret
mov
sub
mov
clc
popa
dec
mov
iret
inc
sbb
lea
sbb
xchg
pushf
pop
rorb
jbe
fimull
mov
inc
inc
stos
dec
mov
aam
sarl
inc
xor
cmp
sub
add
sbb
lret
sbb
mov
ss
push
popa
adc
nop
mov
pop
test
and
jb
jo
mov
jbe
jp
mov
lea
adc
sbb
push
push
push
mov
push
mov
js
adc
push
mov
push
mov
stos
ss
sub
dec
fldt
and
cs
xchg
pushw
stos
and
nop
adc
dec
jmp
push
jae
mov
adc
sub
push
push
jne
inc
adc
xor
in
pop
jne
popa
leave
add
xor
js
loope
xchg
inc
pop
loop
push
pusha
add
cltd
cli
dec
pop
lods
ja
adc
sub
loopne
lock
jb
cmp
clc
mov
test
and
in
push
mov
push
mov
pop
mov
test
sub
jne
xor
adc
lea
xchg
push
xor
and
mov
xchg
add
push
push
aaa
pop
test
pop
mov
xchg
and
test
popf
cs
loope
dec
test
test
sbb
jo
pop
pop
sbb
cmp
in
sarl
test
jle
mov
mov
lret
cs
push
add
dec
push
icebp
rorb
inc
xlat
xor
adc
fs
push
sbb
ja
cmp
push
adc
aad
jnp
pop
pop
adc
addl
pop
aaa
adc
je
push
cmpsl
add
mov
daa
into
mov
cmp
fildl
push
ret
je
jg
nop
mov
les
insl
jne
fsubl
loopne
xchg
ret
push
imul
loope
jns
mov
adc
xor
jb
jl
cs
inc
push
fisttps
xchg
xchg
sbb
xor
subl
out
pop
test
ret
inc
adc
pop
inc
adcl
or
mov
pop
xor
push
nop
add
loope
mov
push
sarb
add
je
xlat
enter
pop
fiadds
and
xchg
repnz
inc
add
clc
jecxz
mov
lock
ss
inc
jmp
daa
pop
pop
jmp
sub
movswl
add
sub
xor
pusha
cmp
inc
nop
cmp
in
cmp
cmp
pop
aad
pop
test
sub
movsl
pop
arpl
xchg
sub
orl
inc
jp
sub
bound
sbb
clc
cmpl
cmp
cmp
ss
lods
add
sub
bound
dec
inc
repz
aad
loopne
xor
or
mov
and
push
and
and
fisubl
arpl
insb
add
aam
sbb
sub
scas
bound
push
push
cmp
lds
push
pop
imulb
movsb
flds
ja
shrb
cmp
mov
test
bound
cmp
sub
push
lods
cmp
pop
inc
lods
cmp
call
xchg
mov
sbb
imul
inc
inc
sub
add
xorb
pusha
in
orb
push
cmpsb
xchg
xchg
test
loop
adc
cmpsl
push
in
xchg
adc
add
push
mov
xorb
inc
cld
inc
test
xor
inc
jmp
and
lcall
lds
inc
loop
inc
cwtl
cwtl
daa
and
pop
fs
push
dec
sub
js
fildl
adc
daa
cmp
mov
or
push
test
int
adc
xor
es
insb
ds
xor
repz
mov
lea
pop
fwait
iret
fmull
mov
xchg
dec
repz
mov
or
and
mov
call
jb
cs
mov
cmpl
or
and
dec
add
insl
std
mov
sub
lock
adc
int
in
adc
cmp
add
flds
mov
idiv
and
push
mov
pushf
les
xor
out
push
xchg
loopne
inc
and
pop
sarb
fcmovb
ret
mov
mov
enter
orl
enter
ret
push
andl
aaa
sbbb
add
mov
adc
inc
adc
dec
jge
inc
add
inc
mov
cmp
add
xor
mov
out
and
loope
inc
push
add
mov
outsb
inc
inc
add
add
lret
orb
xor
jae
add
fnsave
mov
stos
mov
inc
push
addr16
stos
imul
sbb
mov
das
xor
jmp
mov
and
pusha
mov
loop
xchg
add
xchg
in
dec
movsb
add
xchg
xorl
or
add
or
mov
test
lcall
xchg
fld
mov
push
or
mov
ficomps
es
movaps
es
inc
push
push
rcll
dec
sub
sbb
or
adc
or
inc
add
pushl
movsb
ret
add
cmp
push
jle
add
and
xchg
pop
outsl
shll
jo
rorb
or
adc
xchg
xor
inc
sbb
xchg
rolb
dec
scas
push
insb
add
dec
or
xor
mov
sub
cltd
fs
push
dec
dec
inc
pop
jb
in
hlt
adc
lahf
or
add
lea
adc
cmp
rcrl
mov
push
fwait
add
shrb
es
addb
in
inc
jl
cmp
call
sbb
add
cs
testl
jb
pop
enter
sub
sub
sbb
adc
nop
orl
and
xor
in
and
inc
test
mov
inc
popf
mov
add
push
add
add
xchg
aam
push
pop
adc
sbb
dec
ljmp
xor
dec
dec
fistpll
aam
outsb
mov
pop
fadd
jnp
or
push
or
or
push
fsubr
in
sub
cmp
mov
gs
mov
and
loopne
adc
xchg
xchg
pop
inc
enter
jle
push
mov
jo
mov
nop
and
mov
push
push
sbb
out
dec
jecxz
in
mov
shrl
xor
sub
popa
test
add
pop
mov
dec
xchg
rcll
pop
cs
movsb
dec
inc
das
inc
or
fsubrs
movsl
adc
sbb
sbb
daa
jmp
ficomps
sbb
cmp
sub
sbb
cmp
out
inc
mov
fmuls
call
jbe
cmp
dec
pop
loope
cmp
leave
fcmovne
pop
or
pop
jl
mov
mov
inc
rep
je
push
fistps
and
movsb
hlt
push
mov
out
add
mov
rcrb
jo
adc
outsb
mov
mov
pushf
pop
add
movsb
xor
aas
jbe
mov
cli
dec
cmp
add
addr16
cmp
jne
mov
push
sbb
inc
sbb
and
jmp
inc
add
mov
mov
out
push
xor
subl
add
and
adc
inc
xchg
out
xor
push
pop
mov
lods
bound
clc
mov
ficoml
aad
mov
imul
sub
and
xor
xor
imulb
add
decl
mov
push
rorb
mov
nop
xor
mov
dec
scas
fs
xchg
adc
minps
jge
add
in
loopne
xchg
fisubrs
test
cmp
dec
inc
sarl
push
jno
cmp
loop
and
test
rol
dec
adc
cmp
scas
adcl
sub
test
adc
jge
jmp
das
mov
add
push
or
dec
add
adc
push
int3
push
or
cmp
shlb
ret
sbb
or
adc
dec
cwtl
lock
push
xchg
jo
je
add
dec
and
test
add
lahf
in
mov
xor
and
sub
inc
xor
sub
mulb
sbb
testl
sar
and
mov
lea
cmp
xor
inc
push
xchg
or
push
sbbb
push
xchg
ret
and
incl
pop
cmpl
add
je
andl
aam
ja
sub
or
pop
inc
inc
movsb
dec
or
inc
test
loopne
sbb
rcll
add
out
push
jne
ret
dec
push
pop
pop
stos
push
repnz
clc
dec
in
inc
and
mov
mov
jns
adc
jbe
inc
or
add
lds
pop
adc
lret
adc
test
pop
mov
shlb
shr
inc
das
lock
or
dec
clc
fcompl
lock
mov
mov
lea
and
mov
xor
add
push
sbb
movsl
aam
jae
dec
mov
mov
daa
lahf
daa
jecxz
adc
mov
lock
adc
divb
sub
or
sbb
rclb
and
xchg
mov
sahf
dec
sub
out
push
in
in
cmc
in
add
sub
mov
fs
jmp
adc
mov
inc
inc
push
or
inc
fisubrs
push
xchg
jae
lret
mov
or
pop
into
jg
mov
cmp
dec
movsl
sbb
push
cmpsb
xorl
sub
push
sbbb
test
ret
mov
cmpsl
mov
pop
xor
xor
adc
cmovno
pop
xchg
mov
int3
push
test
arpl
push
sbb
cmp
mov
daa
lret
test
lret
sbb
rcrl
sbb
jbe
sub
ja
push
mov
stos
inc
sbb
fnstsw
xchg
push
mov
dec
cmp
pop
test
imul
jne
push
jecxz
xor
movsb
xor
lds
pusha
push
xchg
jne
pop
cs
loope
int3
push
or
ror
mov
data16
int
sub
sbb
or
imul
dec
push
or
push
cmc
push
inc
sbb
repz
into
mov
je
cmpsl
add
sub
jo
sub
sub
sub
into
roll
pop
add
xor
add
adc
push
add
jb
dec
cmp
aas
jo
enter
pop
jg
sub
jg
clc
call
loopne
pushf
cmc
push
sub
stc
cwtl
sub
pop
inc
mov
ret
and
cmp
push
arpl
dec
mov
pinsrw
dec
mov
xchg
adc
and
push
push
dec
or
sub
jae
jne
or
push
aas
addb
imul
push
pop
or
jns
push
adcl
sub
lahf
pop
test
sbb
dec
adc
jp
inc
mov
and
dec
mov
out
mov
or
xor
sbbl
sbb
and
stos
fwait
mov
cmp
mov
jns
lahf
sbb
pop
add
imul
inc
int3
sbb
loopne
sbb
or
mov
push
xchg
test
push
mov
add
out
sarl
scas
sub
mov
ss
dec
cmp
aam
inc
shlb
sub
sub
bound
mov
cltd
out
adc
loope
mov
inc
dec
leave
xor
es
arpl
adc
push
xorl
lcall
inc
push
shl
jns
iret
in
pop
mov
cmpsl
stc
cmp
dec
sbbl
repz
and
mov
mov
pop
cmpsl
repz
imul
jnp
lcall
xchg
push
or
add
inc
mov
adc
mov
pusha
stos
inc
cmc
inc
and
mov
test
pop
xor
lret
xchg
and
or
mov
cmp
repnz
pusha
mov
mov
jbe
xchg
and
jge
cmpsl
es
mov
subl
dec
fs
std
je
xchg
pop
ret
cmpsl
inc
std
add
roll
and
sub
je
xchg
inc
push
mov
scas
adc
and
mov
test
add
stc
adc
fs
mov
rol
push
nop
add
int3
cmp
mov
push
out
lcall
xchg
int
jns
cmpsb
mov
das
cmp
repz
xchg
iret
repz
add
sbb
adc
out
pop
or
outsl
mov
pushf
inc
call
lock
and
add
lea
xor
sbb
pop
lods
shlb
lock
pop
loope
jge
nop
mov
or
push
cltd
add
pop
lea
test
push
cmp
and
popf
scas
test
pop
dec
push
fldl
pop
iret
lea
mov
dec
sub
cmp
outsl
mov
cmp
add
and
pop
mov
xor
ret
loope
and
outsl
inc
or
and
adcb
scas
mov
xor
adc
popf
paddb
sub
lods
inc
movsb
popf
cmp
dec
or
mov
fbld
or
mov
pop
add
clc
fldcw
mov
pusha
orl
fs
xchg
adc
pop
push
adc
inc
xchg
pop
xchg
dec
enter
add
mov
xchg
or
pop
push
push
pop
xor
add
movb
inc
dec
mov
push
adc
sub
aas
dec
dec
scas
cmpsb
cmp
test
mov
mov
leave
mov
and
shlb
pusha
andb
mov
add
dec
xor
ds
orb
push
sbb
mov
inc
cmp
xchg
dec
mov
das
loope
add
pop
pop
or
scas
loopne
fildl
sbb
popf
add
sbb
and
sub
push
ljmp
dec
adc
cmpsl
xor
addr16
mov
loopne
inc
push
dec
sbb
les
sbb
or
std
push
pop
fs
and
and
add
xchg
fiadds
or
pop
cmp
pushl
dec
test
inc
mov
dec
mov
sub
add
dec
je
push
lahf
cmpsb
jge
mov
loope
xchg
pop
xor
movsl
adc
add
push
mov
adc
call
lods
pop
or
loopne
fsubr
jb
mov
in
mov
or
jbe
lret
in
loopne
mov
push
clc
adc
and
or
popa
jmp
int3
mov
pop
push
mov
or
sub
dec
or
and
xor
mov
daa
mov
push
mov
out
popf
roll
push
rcl
loope
add
push
fcomps
in
adc
jae
loop
rclb
das
and
cmp
add
rorb
or
or
in
and
and
xor
and
sub
lds
sbb
sbb
inc
inc
mov
rorb
test
push
and
and
cmp
jecxz
shl
ds
dec
lcall
xor
xor
add
neg
mov
add
sbb
jo
sbb
enter
movb
or
orl
lds
ficoms
adc
jbe
mov
mov
jp
jg
add
testb
cmp
cmp
adcl
sub
mov
outsl
mov
sub
nop
push
mov
mov
cmp
sbb
pop
inc
scas
jge
cs
mov
cmp
mov
or
or
popl
push
rol
les
inc
push
or
adc
sti
fmulp
dec
call
dec
insb
or
push
jmp
jns
ret
popa
ret
pop
push
addb
sub
xchg
pop
into
std
push
in
cmp
lret
pop
test
nop
je
or
and
push
adc
inc
call
mov
jge
pop
and
xchg
pop
mov
movsb
mov
dec
ret
push
popf
mov
push
pop
adcb
lods
aaa
shlb
sub
adcb
inc
cld
cmp
pop
mov
or
ljmp
in
lods
sar
les
cmpsb
mov
lock
jle
mov
add
sbb
add
lods
loopne
sbb
cli
div
dec
pop
fbstp
push
mov
xchg
pop
add
add
and
shrb
add
ja
add
rcll
push
sbb
push
iret
sub
lcall
ja,pt
imul
xor
insl
push
bound
and
into
std
repnz
push
push
ror
cld
loope
pop
dec
aaa
adc
sbb
es
dec
cmpsl
mov
xchg
je
jmp
clc
pop
push
push
push
push
sub
icebp
dec
push
mov
movb
enter
sar
xor
sar
sub
sub
pusha
push
push
push
and
cli
xor
and
ljmp
lret
sbb
pushf
add
mov
add
inc
jmp
iret
in
adc
add
data16
push
push
gs
jmp
pop
clc
xor
xor
out
mov
lods
push
mov
scas
add
ret
and
xchg
in
adc
inc
outsl
push
mov
test
dec
pop
inc
lock
sbbl
subl
mov
xor
and
xor
pop
mov
ficoms
add
push
cmp
cmpsl
dec
incl
inc
sbb
dec
push
test
ret
mov
sbb
incl
jmp
pop
pop
xor
mov
xorl
aad
dec
pushf
xchg
pop
cmpsb
test
adc
add
sub
push
ss
inc
je
cli
dec
mov
icebp
and
adc
push
sarl
jp
xor
hlt
ficoms
inc
pop
sbbb
and
sub
dec
xor
push
cs
and
xchg
xchg
loopne
ja
adc
mov
jge
ret
xchg
hlt
or
das
jmp
fdivs
addl
fwait
xchg
xlat
inc
pop
sbb
loop
add
sub
mov
enter
into
imul
mov
repz
inc
inc
cmp
adc
in
mov
pusha
adc
insl
loop
test
add
pop
js
out
js
jo
insb
out
push
pusha
sub
addb
adc
adc
jmp
xchg
hlt
mov
fistl
push
push
mov
mov
pusha
adc
add
leave
jae
ret
call
mov
and
and
xchg
lock
je
add
sbb
sahf
lods
cmp
mov
mov
test
mov
orb
push
sbb
mov
dec
add
add
dec
leave
add
adc
push
adc
dec
imul
pusha
into
fildl
dec
push
pop
sbb
popa
xor
orb
cli
add
sbbb
js
dec
scas
mov
rcll
jno
sub
fwait
repnz
mov
insl
adcl
fimull
clc
adc
sarl
int
ret
pushf
mov
cmp
jg
aaa
nop
clc
sub
lock
cmpsb
leave
shlb
jle
ljmp
dec
dec
adc
xchg
and
dec
fdivrs
hlt
out
sub
dec
bound
in
fbstp
mov
cmp
add
add
cli
and
push
testl
pop
testl
jmp
ret
es
mov
push
and
xchg
scas
addr16
in
inc
ljmp
or
mov
aas
enter
add
inc
aaa
push
push
dec
lcall
mov
or
mov
cmp
adc
in
or
sbb
fsubl
cmc
les
xchg
nop
xchg
mov
pop
mov
loop
push
sub
push
cmp
mov
jb
jg
fsubs
sub
dec
jb
jo
push
push
inc
mov
xchg
cmp
pusha
add
cli
loope
icebp
add
fs
add
inc
ja
test
addl
push
lea
rcll
pop
inc
xchg
int3
xor
add
je
mov
pop
pop
mov
mov
fidivrs
adc
mov
rorb
jno
xchg
push
sub
dec
fdivl
fists
sbb
add
rcll
mov
pop
je
add
test
ret
inc
pop
je
cmp
rclb
pop
daa
add
pop
xor
cltd
js
adcl
pop
adc
adc
mov
pop
push
in
outsl
ljmp
sub
jae
imul
pop
mov
sbb
push
stc
dec
insb
dec
or
jb
or
pop
push
test
fwait
pop
push
push
bound
mov
add
sub
jo
xchg
je
push
and
dec
jnp
mov
sbb
fmuls
pop
add
dec
je
xor
mov
fstpl
int3
test
inc
outsl
nop
js
cltd
aam
cli
mov
pop
jmp
test
pop
repnz
push
push
sub
sub
std
aas
into
xchg
nop
and
xchg
mov
mov
and
xchg
or
xor
sub
jmp
fistl
loopne
lcall
push
inc
fldl
rorb
cmpl
sbb
nop
cmp
xor
mov
icebp
xchg
sub
insb
push
push
cmp
int
pop
push
mov
and
movsb
insb
adc
and
jno
push
mov
add
pop
and
cmpsl
cmpsb
push
and
inc
shl
fsubrl
dec
push
pop
cmp
ds
adc
adc
ret
sbb
scas
sub
cmpsl
add
add
or
sub
adc
adc
dec
jne
pop
pop
mov
test
std
push
clc
dec
push
sbb
dec
sbb
les
outsb
leave
leave
xchg
mov
cmpl
xor
mov
push
adc
loop
and
cmp
sub
or
push
cmp
xor
idivl
aas
movsl
push
mov
adc
in
sbb
add
or
and
out
test
pop
cmpsb
adc
sbb
call
sub
fstl
jne
sbb
dec
mov
mov
adc
shl
in
rorl
dec
xchg
nop
push
lcall
test
add
jp
pusha
mov
cmp
add
add
sub
and
cmp
jp
mov
add
add
push
or
pushf
push
pop
inc
add
push
adc
or
and
ret
sub
xchg
gs
lods
mov
push
adc
push
adc
fadds
add
mov
adc
dec
daa
inc
dec
loope
jmp
mov
or
xchg
adc
mov
hlt
outsl
loope
mov
adc
cwtl
and
push
sbb
mov
and
cltd
js
adc
jg
mov
push
sub
xchg
ss
add
sarl
push
dec
inc
mov
es
data16
ret
imul
push
xchg
add
std
mov
lods
andb
push
leave
jp,pn
sub
out
add
in
or
xchg
nop
mov
push
cmpsb
mov
mov
dec
xor
inc
sbb
pop
pop
mov
add
lds
and
lcall
push
rolb
sub
add
jae
jno
add
push
and
jno
fcomps
mov
xor
push
call
pop
flds
dec
pop
clc
mov
adc
and
lods
fcomps
push
add
adc
mov
mov
xor
lahf
fcmovnb
je
nop
lahf
adc
add
sbb
mov
xor
dec
pop
xor
scas
jl
pop
pop
call
add
test
fsts
adc
js
xor
test
or
jmp
repz
pop
adc
sbb
mov
jne
adc
mov
aas
adc
xchg
pop
cmp
or
dec
js
or
mov
cmp
jle
dec
sub
les
inc
xor
es
lea
cmp
mov
stc
fstl
in
mov
int3
es
adc
sub
or
daa
sbb
les
rcrb
popl
test
fadd
imul
add
adc
mov
inc
arpl
test
aaa
inc
test
test
inc
mov
movsb
mov
push
ljmp
insb
lea
mov
dec
inc
pop
adc
mov
fisubs
dec
sub
jge
dec
sub
mov
call
int
pop
xchg
add
shll
ss
cmp
jne
inc
loop
or
mov
jns
out
lods
in
mov
shlb
mov
mov
cmp
jle
add
push
mov
cli
rcrb
lods
mov
or
ret
fidivl
add
shrl
sub
insb
push
push
sbb
js
test
cltd
or
sbb
cmp
jmp
popf
pop
sub
pop
das
rolb
xor
sbb
pop
pop
mov
imul
fmuls
xlat
call
mov
lret
push
xchg
rorb
jmp
pop
xor
pushf
and
jmp
sbb
pushf
xor
cmp
push
push
jne
sbb
cmp
inc
hlt
adc
sbb
xor
xor
xor
subb
nop
xchg
sub
add
mov
sbb
inc
cld
lahf
and
pop
mov
stos
xchg
adc
lock
mov
ret
mov
jg
js
dec
cmp
adc
sarb
fs
enter
push
push
test
adc
pop
sarb
dec
pop
push
push
push
insl
add
cmc
int3
and
rorb
xorb
and
add
imul
je
jecxz
push
movsb
cmpb
lock
addb
pop
pop
jne
testl
dec
jne
testb
mov
shld
es
and
and
dec
sbb
movsl
lret
jo
clc
inc
sbb
dec
mov
xor
xorb
mov
aaa
mov
movsb
mov
pusha
adc
es
aaa
pop
sbb
aas
add
pop
cmp
popf
xchg
adc
fmuls
mov
add
xor
mov
in
orl
cmp
dec
xor
or
test
outsb
hlt
xchg
sbb
xchg
popf
xchg
push
xchg
xchg
sbb
pusha
xchg
push
fstpl
jne
test
rorb
jo
movsb
sbb
and
xchg
lods
adcl
jno
std
stos
xchg
jo
sbb
inc
imul
in
add
xor
aad
sub
and
insb
lods
je
lret
xor
jne
mov
pop
add
test
ss
or
mov
out
dec
push
imul
mov
add
adc
push
add
xchg
pop
pop
cld
mov
push
js
movl
sub
in
jne
pop
arpl
pop
fldcw
or
or
pop
xlat
push
push
xchg
push
mov
sub
pop
xor
add
pop
inc
in
js
push
adc
push
daa
repz
or
sub
inc
mov
jmp
sahf
inc
add
and
int3
or
push
test
out
xchg
mov
push
loop
imul
add
jne
sbb
ret
xchg
outsb
sbb
mov
pop
ljmp
or
push
sub
pop
dec
pop
sbbl
xchg
icebp
cmp
xchg
jmp
dec
ja
jb
cmp
adc
cmp
push
pop
or
inc
xchg
adc
sub
in
mov
push
or
mov
into
xchg
xor
add
pop
cmp
and
test
addr16
inc
xor
push
mov
jne
lock
or
aam
adc
nop
sub
mov
push
stos
cmpps
bound
ret
pusha
insb
push
push
dec
cmp
ljmp
pop
or
sub
fwait
push
adc
ret
into
inc
cmp
and
and
bound
stos
push
inc
sub
cmp
adc
pop
lods
push
icebp
xor
adc
iret
inc
mov
sub
mov
je
cmp
push
pop
push
loope
test
je
push
sbb
or
pop
mov
lock
mov
jle
lret
adc
pop
jbe
sbb
pop
cmp
cli
or
pop
icebp
int
inc
pop
test
and
xchg
lea
mov
adc
xchg
orl
loopew
mov
fisubs
inc
sbb
mov
pop
push
sub
mov
lret
sarl
push
adc
fisubl
xchg
test
pop
dec
pop
push
jecxz
mov
nop
add
jp
es
mov
add
dec
dec
inc
fs
fstl
push
xchg
aam
inc
push
fsubl
test
sub
add
xchg
roll
or
or
push
jg
xlat
sbb
lret
or
mov
and
add
outsb
pusha
sbbl
rep
shrl
xchg
mov
hlt
dec
int3
movsb
mov
scas
loope
sub
dec
imul
adc
int3
aaa
and
push
cmp
pop
and
jae
inc
mov
adc
jne
xchg
test
mov
fidivrs
lret
push
xlat
outsl
inc
inc
dec
fsubrs
or
adc
xchg
sub
mov
cmp
mov
or
or
or
adc
outsl
ljmp
sub
dec
stos
pop
mov
cli
adc
lock
mov
push
aam
inc
push
out
cmp
or
sub
or
fsubrs
out
rorl
or
aaa
sbbb
jo
add
xorl
inc
popf
imul
aam
add
cmpsl
pop
or
mov
sti
xor
cmp
jmp
inc
mov
les
pop
mov
adc
inc
loopne
lret
cmp
adc
and
mov
xor
mov
inc
cmpsl
cmp
push
aaa
ror
sbb
andl
xchg
test
push
imul
sub
sub
sbb
inc
push
out
sbb
ret
and
movsb
inc
mov
add
xchg
int3
std
inc
out
orb
addb
xchg
or
cmp
nop
add
cmp
inc
mov
gs
adc
ret
daa
ds
or
adc
nop
push
pop
inc
adc
andb
lret
push
xor
push
cmp
sub
test
push
sbb
jg
test
nop
leave
xchg
lock
sarb
and
or
adc
arpl
fdivp
cmp
push
xor
add
into
inc
xchg
scas
jo
and
adc
pop
add
pushf
or
adcl
mov
sub
adc
ffree
pop
add
xchg
insb
push
js
cmp
mov
rorl
js
pusha
mov
jmp
in
jne
sub
push
and
fistl
and
sbb
xchg
cmpsb
inc
lret
xchg
cmp
xchg
cmp
pop
jae
sti
push
add
pop
xchg
add
dec
mov
jmp
and
lea
sbb
add
sub
js
xor
mov
jecxz
xor
test
add
cld
les
or
push
daa
cmp
inc
push
inc
and
stc
addl
aad
dec
sub
inc
inc
cmc
imul
pop
mov
inc
push
inc
push
shlb
pop
rcrb
and
lods
cli
xor
add
push
orb
xchg
into
gs
loop
dec
mov
test
dec
dec
add
mov
sar
jne
jne
notl
pop
fldcw
sbb
and
loopne
xchg
jle
add
or
es
lock
ficompl
cli
sub
add
cmp
fdivr
outsb
add
stc
mov
add
aaa
mov
jnp,pt
sbb
push
dec
sub
inc
or
arpl
imul
mov
push
inc
add
xchg
push
out
sbb
xor
mov
icebp
mov
push
insb
mov
inc
inc
and
jo
gs
js
lods
push
jbe
xchg
add
fnstenv
or
cwtl
inc
aam
push
clc
add
xor
dec
orb
adc
xchg
inc
arpl
add
sbb
pop
adc
pop
rolb
pop
sarb
or
inc
add
fsubrs
and
adcb
adc
cltd
aad
daa
pop
and
push
adc
cmp
mov
mov
add
scas
test
push
sar
mov
cwtl
hlt
test
adc
es
cmp
cmp
inc
inc
lods
loopne
addb
adc
dec
je
inc
push
or
loopne
push
cmp
cmpsb
or
fs
sbb
subb
fcmovnbe
cmp
mov
sahf
cmpsl
sbb
and
and
and
sbb
es
sbb
or
inc
sbb
or
push
shrl
fwait
jne
or
movsl
and
push
jg
in
add
xchg
int3
loop
clc
mov
lret
mov
push
cmp
pop
leave
mov
mov
rclb
push
test
or
cwtl
shlb
shlb
dec
test
and
mov
sub
or
mov
loope
sub
aad
sbb
jbe
dec
loopne
jge
clc
cs
lea
mov
xchg
shll
in
ja
stos
repz
aaa
jne
sub
mov
pop
lock
pop
insb
push
mov
adc
xchg
cmp
mov
pop
sub
push
add
xchg
adc
adc
inc
and
and
test
dec
jo
cmp
stc
addr16
dec
lock
cmp
movsl
xchg
mov
fmul
mov
adc
inc
mov
iret
repz
jne
push
mov
sub
xor
push
rorb
dec
js
mov
xor
inc
sub
addr16
bound
mov
je
xchg
insb
or
sub
cmp
sub
outsl
and
inc
jmp
push
mov
testl
popa
popf
dec
gs
das
push
xchg
repnz
jnp
jp
negb
mov
test
inc
lock
je
sti
add
or
mov
sub
add
mov
inc
repz
add
mov
and
dec
rclb
inc
push
rolb
dec
pop
mov
push
adc
das
popf
shlb
or
or
push
popl
aaa
lods
addr16
xchg
pop
aad
repnz
inc
xor
test
lds
cmp
mov
mov
dec
mov
sbb
lods
addb
pop
dec
fs
dec
aad
push
push
inc
xor
aam
jns
pop
adc
add
push
mov
or
jmp
pop
movb
mov
cmp
lods
xchg
add
or
fs
fldl
mov
leave
dec
cmp
inc
pop
daa
jmp
lods
add
adc
movsl
dec
mov
stc
add
sbb
addr16
add
fiaddl
jl
fstl
daa
loopne
cmpsl
sbb
test
mov
add
jmp
inc
pop
daa
test
mov
push
pop
push
jg
sbb
inc
gs
mov
or
push
or
bound
push
in
push
push
inc
inc
loope
dec
ds
mov
or
and
push
adc
push
jmp
and
nop
outsl
es
fstpl
pop
ret
int3
push
sti
and
push
push
jns
mov
pop
daa
pushf
push
mov
fisttpll
mov
nop
add
cmp
add
xor
adc
jmp
dec
cwtl
sbb
push
push
jbe
add
mov
xchg
and
mov
cmpb
hlt
mov
sbb
cs
and
cs
add
cmpsl
or
jg
cwtl
sbb
lods
dec
jo
push
test
or
outsb
aad
xor
loopne
inc
scas
or
loope
fildl
std
movups
xor
lret
in
or
sub
or
xor
push
rorl
inc
adc
adc
shll
inc
test
jo
mov
mov
push
push
push
add
sub
pusha
adc
int3
cmp
fadd
mov
enter
push
rorb
sbb
jmp
sub
jl
cmp
pop
loopne
xor
jmp
call
mov
nop
fdivrs
pop
clc
cmp
movl
pop
movl
and
push
sub
inc
lcall
in
int3
movsl
jb
jl
fdivr
gs
jbe
rol
in
mov
inc
push
push
dec
mul
shl
mov
pop
imul
add
sbb
ss
mov
cmpsl
xchg
push
xor
add
dec
cmpl
in
data16
ds
hlt
fs
sbb
mov
jae
mov
add
mov
aam
push
or
enter
repz
mov
adc
adc
jnp
lret
xor
sbb
sub
pop
scas
aam
mov
dec
push
push
aam
mov
loopne
jle
fcomps
in
jns
jne
or
test
cmp
stos
xor
js
js,pt
and
out
jbe
subl
jmp
aaa
imul
push
es
xor
les
hlt
add
insl
imul
push
cmp
popf
or
call
nop
gs
sbb
lock
pop
int3
aad
push
mov
pop
cmp
add
sbb
ss
shlb
fcompl
test
pop
push
pop
pop
rclb
ds
fdivrl
adc
scas
stc
into
orl
sbb
call
adc
pop
xchg
icebp
lcall
add
pop
sbb
mov
les
gs
mov
sbb
pop
test
rcrb
sub
loop
ret
dec
xchg
add
adc
out
aam
jo
sarl
mov
int3
jb
nop
lea
movsb
lcall
push
adc
push
add
mov
pop
ja
pushf
or
inc
lock
mov
rcr
sbb
or
inc
mov
push
loopne
inc
sub
cltd
lock
push
out
xchg
mov
or
push
jge
jo
repz
push
lahf
adcl
lret
push
pop
add
and
adc
push
in
insl
jmp
adc
rorb
jle
test
and
mov
sub
push
sbb
or
scas
add
xchg
jl
daa
and
mov
jecxz
mov
cmp
or
jnp
fsubrs
or
sbb
pop
incl
xlat
jl
pop
mov
adc
test
scas
jg
pop
pop
add
add
push
shlb
imulb
pop
fwait
inc
add
stos
fwait
xor
and
and
add
or
fidivl
add
cmp
add
rolb
pop
pop
add
xor
cmp
loope
test
sbb
inc
xorl
cmpl
add
push
ret
push
nop
mov
dec
push
mov
loop
cmp
cltd
clc
std
pop
movsl
mov
cmp
jb
or
dec
jmp
sub
adc
adc
xlat
jns
pop
jg
push
or
dec
repnz
es
adc
subb
insl
in
dec
adc
mov
dec
mov
jne
mov
aam
mov
cmp
inc
add
jge
fs
fcmovne
rorb
or
je
pop
or
inc
inc
add
mov
pop
imul
jne
pop
jb
jg
jb
test
bound
pop
pop
cltd
cmp
shrb
cmp
or
and
push
inc
pop
add
mov
and
and
or
inc
lods
fmull
cltd
mov
pop
mov
cwtl
cltd
idiv
ss
dec
pop
cmp
pop
mov
xchg
or
dec
loopne
faddl
cmpb
jne
sar
mov
mov
mov
cmp
jne
cmp
jne
es
imul
xorb
or
adc
push
jle
or
nop
arpl
cmpl
fldl
arpl
add
icebp
fstpl
out
adc
mov
shl
sti
sub
incl
fmull
popa
ret
ret
add
loopne
lock
cs
adc
flds
jg
sub
clc
jmp
fmull
fcoml
sbb
or
push
mov
fcoms
jmp
inc
and
cs
dec
rolb
hlt
push
stos
and
mov
loopne
inc
inc
gs
sbb
imul
popf
push
fcomps
fldt
push
mov
shlb
leave
cmp
inc
and
mov
fdivrp
aaa
and
pop
mov
dec
daa
fistpll
mov
dec
push
orb
sbb
fisubl
popf
and
les
and
or
pop
xor
out
dec
add
sbb
jl
push
push
sbb
pop
gs
shll
xchg
lret
add
xchg
std
dec
adc
imul
inc
dec
or
ret
mov
push
ds
repnz
mov
ret
inc
inc
xchg
inc
inc
xor
mov
adc
out
cmp
xchg
lahf
ret
push
pop
scas
fs
test
xor
shlb
out
mov
bound
mov
adc
cs
popf
pop
fstps
dec
lock
daa
push
jb
mov
push
inc
loope
and
test
adc
sbb
jge
dec
mov
push
out
fnstcw
jmp
pop
xor
sub
rol
xchg
push
xor
arpl
dec
xor
add
push
cld
imul
popa
add
sub
or
adc
mov
aas
mov
pop
xor
add
cmova
fldl
cmpb
ds
call
adc
lock
mov
or
add
hlt
jl
out
andb
push
insb
add
sub
aas
inc
mov
jge
jmp
mov
mov
cmp
push
push
clc
cmp
xchg
fbstp
xor
lret
ret
and
push
and
test
mulb
je
or
pusha
and
jo
xlat
push
xor
mov
add
sub
and
mov
push
or
sahf
je
push
xor
pop
insb
mov
or
orb
jo
cmp
push
inc
imull
sarb
lcall
je
or
xchg
adc
mov
xchg
icebp
mov
clc
ljmp
inc
dec
fisubl
mov
pop
dec
push
mov
mov
dec
movsl
pop
sbb
pop
mov
ret
iret
in
mov
out
dec
push
sub
mov
xor
mov
and
aad
imul
es
enter
in
testb
adc
sbb
inc
adc
push
sbb
mov
in
and
daa
and
jmp
pop
xor
add
jle
int
mov
add
dec
movsl
and
je
imul
stos
xchg
or
jecxz
bound
and
cmpsl
pop
and
sub
mov
lret
sbb
adc
pusha
cmp
jne
cmp
jne
insb
jne
jbe
xchg
sub
pop
mov
cmp
jne
and
icebp
jne
jmp
and
push
out
mov
jl
loop
fstp
pusha
inc
pusha
push
and
mov
faddl
frstor
or
adc
ret
gs
imul
loop
pop
dec
pop
dec
add
sub
fs
or
or
xchg
into
or
stos
dec
mov
dec
sub
or
pop
sub
pop
mov
pop
adc
or
push
fisubs
or
pop
cli
adc
fwait
sub
adc
adc
mov
pop
pop
pop
pop
lea
out
mov
lds
cmp
jne
mov
ret
cmp
or
jg
pop
push
adc
sub
mov
jbe
inc
pop
popa
loope
pushl
jg
xor
inc
sub
adc
sbb
adc
popf
pop
pop
testl
nop
mov
or
push
lock
lea
jle
push
push
faddl
jge
cmp
jle
xchg
repnz
mov
add
aaa
ret
jg
pusha
sbb
mov
xor
outsb
adcl
xchg
enter
pop
rcll
cmp
mov
pop
sbbl
push
rcr
mov
inc
add
push
test
into
push
jb
fcoms
push
loope
add
cli
or
shr
sub
popf
filds
mov
les
sahf
insl
cmp
test
or
outsl
rorb
cmp
adc
pop
cmp
pop
movups
bound
dec
loopne
aam
filds
cld
cmp
jle
gs
push
push
push
sub
push
lds
test
adc
not
pop
or
pop
dec
pop
xchg
int
xor
and
shrl
xchg
in
or
aas
ret
dec
lods
jmp
cmp
and
test
ljmp
push
sub
pop
nop
dec
enter
in
in
mov
xor
loope
and
sub
mov
mov
xor
xor
andl
sub
xor
push
cmpps
push
mov
or
mov
inc
sbbb
mov
dec
jmp
xor
hlt
xchg
mov
xchg
stos
dec
imul
pop
add
aam
inc
nop
sarb
outsb
adc
mov
mov
push
push
jae
imul
je
cmp
sbb
leave
dec
add
xchg
imull
sub
notl
out
shlb
not
clc
sets
sbb
ret
and
pop
pop
cli
mov
sub
push
cmp
ds
cmc
dec
adc
xchg
push
add
int
dec
and
add
aaa
push
push
jmp
nop
or
faddp
mov
pop
ffreep
movl
push
inc
outsl
xchg
rcrb
lahf
adc
push
pop
pop
xorb
js
sub
stc
pop
je
ja
pop
mov
or
mov
mov
jmp
xor
jge
inc
pop
pop
adc
in
lock
jns,pn
jmp
std
mov
lcall
add
jmp
push
out
mov
out
cmc
sarb
mov
or
or
jl
imul
jno
dec
add
data16
cwtl
sbb
lock
pop
ror
lods
push
sub
push
or
neg
movsl
or
bound
add
sub
jl
cmp
movl
push
jg
out
or
mov
pop
aaa
and
shrl
int
dec
cmp
sub
lcall
jmp
jmp
aas
add
fwait
add
lods
add
cld
fisubrs
das
push
bound
pop
ret
mov
add
push
in
jge
clc
es
and
syscall
repnz
addr16
push
xor
or
xchg
enter
add
daa
or
add
mov
inc
daa
jbe,pn
popa
in
cmpsl
jb
dec
push
or
mov
adc
pop
mov
sub
and
orb
pop
je
pop
cmp
out
sahf
ja
cmp
ds
dec
pop
movsb
add
test
decl
dec
jo
push
cmp
mov
rclb
stos
xchg
test
and
daa
jmp
pop
cmp
jae
or
mov
call
xor
push
sbb
push
and
mov
lea
add
dec
pop
push
iret
push
add
nop
repnz
or
dec
pop
jl
adc
add
mov
mov
add
mov
and
mov
or
or
gs
inc
aaa
out
push
push
stos
xor
mov
xchg
sbbb
jp
in
mov
or
or
cmpsb
lds
lods
lods
dec
popf
mov
push
mov
pop
add
push
fdivrl
scas
or
inc
add
mov
into
jne
cmp
cmp
aas
cmp
ret
mov
and
inc
daa
pushf
pop
popl
hlt
mov
stc
pop
xchg
lret
inc
shrb
adcl
jne
cwtl
fstpt
mov
invd
adc
or
js
jne
cmp
xor
daa
ret
cmp
or
sub
add
adc
add
iret
in
cmp
or
das
xor
jae
xor
pop
sbb
cltd
std
outsb
mov
adc
sbb
sub
jo
and
pop
sahf
and
push
out
pop
jecxz
add
pusha
insl
add
sub
or
stos
or
add
es
dec
shrl
imul
and
push
lea
fmuls
aas
adc
mov
data16
adc
or
stos
lea
cmp
call
popa
cwtl
inc
push
xchg
js
cli
mov
xor
fldt
fidivrs
sbbl
out
or
push
psubb
jle
out
popa
xor
movsl
movsb
push
sub
subl
movsw
shll
mov
mov
adc
xchg
outsl
xchg
cmp
jo
inc
dec
adc
ss
inc
xchg
ret
dec
jbe
push
lods
popf
push
lock
add
add
cmp
mov
xlat
push
lock
pop
push
dec
stc
outsl
int3
pop
mov
pusha
and
and
push
push
or
jb
adc
jbe
sahf
in
xchg
je
loopne
scas
and
sbb
inc
test
shr
jo
aad
leave
push
lret
movsb
mov
push
pop
xchg
push
pop
push
dec
mov
push
jo
inc
data16
imul
sbb
mov
sbb
mov
das
mov
repnz
add
mov
xor
insl
insb
mov
push
in
push
mov
sarb
push
pop
pop
scas
mov
vpsllvq
cmp
and
int
lock
pop
or
and
jle
std
mov
sbb
sbb
cmpb
repnz
cmp
pop
push
mov
mov
mov
mov
push
inc
lar
scas
aam
dec
fimuls
decl
out
sub
adc
ret
sub
rolb
mov
jne
mov
ds
jp
int
fistl
ret
adcl
xchg
outsl
jnp
inc
in
mov
nop
movsl
imul
cmpsl
sub
call
nop
sbb
or
push
xor
inc
cli
out
cmp
outsl
movsb
mov
mov
adc
add
cmpsl
loopne
mov
add
decb
outsl
into
lock
jmp
lea
and
mov
shrl
sub
nop
lea
sti
ss
mov
push
adc
out
insl
shll
sub
hlt
in
or
lea
lcall
lea
add
mov
mov
test
dec
adc
or
add
push
jne
daa
xchg
push
es
push
sar
fisubl
xchg
int3
adc
mov
jmp
iret
mov
int3
jp
lret
leave
lods
sbb
pop
xchg
pop
pop
andb
mov
jo
cmp
adc
inc
scas
je
lea
dec
inc
mov
aad
outsl
or
ret
push
push
rolb
push
mov
mov
rcrb
sub
pusha
adcl
in
test
add
and
lea
pop
es
add
repnz
scas
adc
outsb
mov
lods
int
inc
pusha
cs
in
rcr
fstps
fwait
push
jmp
fiadds
in
ja
push
mov
shll
out
or
sbb
mov
jmp
adc
push
and
and
mov
pop
push
rcrl
xchg
add
mov
je
dec
adc
mov
int3
dec
pop
mov
mov
sbb
andb
loope
inc
dec
dec
jl
cmp
or
sti
jg
jb
mov
xor
fldt
adc
sub
jb
jbe
test
add
ucomiss
clc
clc
loop
mov
sbbl
rclb
xchg
pop
mov
test
sub
ficoms
push
sub
aad
sbb
pop
in
mov
and
cs
mov
sub
mov
add
pop
push
cmp
mov
xor
mov
mov
adc
inc
pusha
bound
dec
inc
or
mov
movsb
cmp
cmp
cltd
mov
cmpsb
or
xlat
jge
rclb
sbb
sub
adc
or
loop
fistl
adc
dec
inc
add
lahf
cmp
lret
push
fdivrs
insl
imul
and
push
ss
mov
mov
movsb
cmp
jmp
xlat
sbb
fsub
mov
das
adc
xor
push
dec
ss
push
pop
cmp
inc
sbbb
and
lret
mov
and
xor
shrb
int
mov
add
inc
jno
pop
lods
ljmp
jne
push
test
jecxz
add
iret
add
xchg
pop
dec
inc
mov
call
jno
add
cltd
subb
or
push
jmp
pop
push
addr16
sbb
cmp
fbld
xor
ret
add
push
outsl
add
mov
sub
jg
enter
sbb
out
xor
and
cmpb
xchg
jg
inc
add
pop
xchg
push
jg
sbb
jne
mov
lahf
xor
mov
dec
sbb
dec
mov
cmp
xchg
and
loopne
and
jnp
jb,pt
jmp
enter
mov
jle
loopne
push
add
cmpsl
fwait
sub
cmp
sub
add
imul
dec
sahf
es
and
sbb
dec
dec
test
dec
data16
inc
xorl
jno
sub
dec
xor
fmull
movsl
test
arpl
and
loop
pusha
rcrl
add
add
sbb
ds
rcl
lods
pop
add
mov
cwtl
cmp
add
fisttpll
scas
xor
mov
push
cmpsl
adc
cmp
pop
adc
xor
popf
jge
subl
or
dec
mov
arpl
cmp
pop
arpl
inc
mov
out
mov
sub
or
xor
adc
push
xor
into
dec
stc
adc
call
sahf
mov
add
scas
cmp
adc
push
push
sbb
jae
dec
inc
cli
push
push
xchg
xchg
or
lock
out
inc
das
cmp
jge
push
push
mov
subl
inc
scas
int
mov
push
push
lods
sbb
inc
int
inc
stos
add
dec
lods
xor
in
lret
mov
fstp
push
adc
add
pushf
pop
xchg
push
flds
cmpsl
aad
mov
add
sbb
xchg
pusha
push
test
mov
and
sub
ret
lock
test
cli
test
jle
enter
add
lcall
xor
ds
ret
int3
mov
inc
mov
mov
sub
mov
add
cmp
sub
fildll
mov
sbb
and
fsubs
arpl
mov
mov
popa
cmpl
xchg
xor
shll
mov
adcb
xor
lea
fstps
or
or
push
pop
push
add
inc
adc
xchg
inc
pop
and
pop
inc
mov
push
fcoml
add
dec
sbb
es
push
or
cmovle
or
cmp
pop
and
cmp
or
mulb
mov
ds
mov
daa
cmpsl
lock
out
cmp
sub
adc
sbb
add
out
inc
shlb
mov
insb
xor
push
mov
push
pop
jecxz
fstpt
mov
das
push
add
jnp
fcmovnbe
sub
and
and
imul
ja
push
fstpl
push
add
xor
in
add
outsb
xchg
sbb
pop
rolb
add
mov
add
leave
add
push
stos
xor
sbb
or
push
ljmp
loop
xor
or
negb
pop
inc
scas
insl
stc
sbb
jmp
mov
jmp
decb
mov
addr16
clc
inc
and
sbb
lock
mov
jne
add
or
inc
mov
daa
adc
int3
add
cld
mov
jmp
je
push
xlat
in
adc
xorb
pop
dec
pop
or
leave
add
fsts
int3
mov
incl
mov
dec
push
inc
and
bound
and
and
jnp
lea
nop
orl
out
or
gs
add
pushf
mov
pop
fadd
les
pop
jno
test
testl
sbb
jo
mov
mov
or
test
pop
xchg
and
jle
mov
ret
push
mov
mov
mov
xchg
xchg
push
out
and
dec
add
push
call
sub
push
inc
js
jge
xchg
jecxz
mov
xor
stc
or
add
loope
sbb
add
adc
xor
je
nop
mov
push
dec
lods
mov
add
fadd
pusha
arpl
xchg
sub
lcall
sarb
or
fsubl
ret
dec
mov
push
adc
inc
inc
fadd
mov
inc
mov
pop
mov
fsub
dec
mov
mov
les
sub
ficoms
or
jo
inc
pop
adc
pusha
dec
fmul
and
cmp
pop
push
testb
and
add
or
lods
and
es
push
lcall
pusha
cmc
sub
dec
mov
aas
sarb
int3
adc
shl
sub
dec
std
mov
xchg
nop
cld
lds
dec
add
call
xchg
pop
sub
xor
push
shll
add
jne
shll
add
lea
jp
dec
mov
mov
inc
sarl
into
je
aam
push
push
cmpsl
rcll
ja
aam
push
adc
mov
push
push
mov
adc
ds
mov
loopne
xor
add
add
adc
xchg
push
add
outsl
sub
push
out
jb
in
ret
jle
mov
pop
mov
lea
add
xor
cmp
sub
dec
sub
mov
out
add
sub
or
mov
cmp
sub
cmp
pushf
fdiv
loopne
cmc
pop
mov
pop
sub
out
pop
mov
xor
mov
les
dec
orl
test
cli
out
inc
stos
push
and
adc
scas
jae
jbe
ds
push
pop
push
js
add
insl
add
lods
mov
dec
les
mov
movsb
lds
mov
clc
ss
je
faddl
repz
adc
test
iret
xor
cmp
adc
jae
out
mov
out
loopne
cmc
repnz
data16
pop
push
push
and
fldt
sysret
cmpsb
adc
inc
pop
push
pop
dec
sbb
adc
dec
cld
sysexit
mov
jl
and
jp
int
jbe
dec
add
jb
or
or
mov
icebp
add
cmp
fstps
ret
dec
cli
fwait
lcall
or
movsb
dec
int
je
push
loop
adc
mov
mov
or
data16
lock
push
cmp
mov
pop
dec
imul
jle
mov
fs
pushf
clc
mov
addb
loop
sub
pop
ljmp
in
jnp
mov
mov
popa
push
add
cs
dec
fwait
pop
push
js
fiaddl
add
xchg
adc
inc
jbe
cmp
loop
mov
mov
lods
incb
sbb
sti
jne
cltd
sub
pop
lcall
rolb
and
rolb
adc
sbb
push
int3
repnz
notb
adc
repnz
xchg
push
mov
dec
add
and
js
jo
rorb
push
cltd
jno
jo
cli
push
rorl
leave
rclb
roll
add
insl
enter
adc
addb
shll
dec
fistps
pop
cmpsb
mov
incb
call
jnp
jp
cld
pushf
push
lar
aad
pop
movd
pop
inc
push
ja
sbb
inc
adc
dec
mov
sbb
push
xorl
je
mov
pop
shlb
cmp
add
sahf
push
rcr
mov
cmp
and
push
mov
out
xor
xchg
add
lock
sbb
sub
jmp
fstpt
or
fimull
add
adc
das
imul
add
lods
in
sbb
testb
xlat
cmpsl
cmp
sbb
adc
mull
mov
or
mov
sti
inc
add
loopne
sbbl
adc
or
or
es
sbb
xchg
xor
std
sbb
js
xlat
mov
push
icebp
mov
add
adc
mov
testl
rorb
lret
ret
outsb
fbstp
xor
mov
pusha
xor
movsb
push
add
or
dec
rorb
cwtl
push
cmpsb
aad
jns
dec
jmp
sbb
jle
sbb
lret
testb
insl
sbb
xor
popa
nop
adc
mov
sub
aas
inc
sub
sub
ficomps
aam
pop
inc
jns
cmp
sbbb
addb
shl
push
addl
shrb
jp
xorb
xchg
xor
nop
mov
les
add
jl
push
pop
push
xor
push
pop
sbb
cmp
hlt
mov
pop
js
xchg
pusha
pusha
push
adc
fwait
shrb
lret
mov
and
lcall
stos
sbb
es
test
jmp
mov
xchg
popa
test
scas
xor
mov
add
sub
add
rclb
xchg
sbb
or
pushf
lret
sti
adc
mov
add
add
mov
mov
inc
fisubrl
add
xchg
out
pop
movl
jecxz
xor
sub
inc
xor
inc
jl
lahf
nop
mov
lods
jg
insb
cmc
push
and
xchg
xor
out
add
insl
and
xor
bound
mov
xchg
mov
mov
call
sub
sub
arpl
fisttpl
lods
gs
add
adc
push
insb
sub
pop
jnp
cwtl
and
sub
sub
fimuls
mov
cmp
test
ss
and
sub
sbb
mov
sbb
push
lret
pop
mov
mov
std
pop
add
outsl
fs
adc
inc
sarb
ret
jle
test
pop
pop
lds
xchg
leave
mov
nop
dec
dec
test
mov
inc
clc
cmp
mov
nop
adc
sbb
cli
xor
push
in
adc
fwait
cwtl
or
movsb
and
inc
cmp
jl
mov
ficomps
divb
mov
fisttpl
push
mov
mov
push
mov
push
cmc
pusha
add
cmp
jmp
movsl
mov
nop
fadd
pop
dec
pusha
in
aaa
lock
mov
mov
and
mov
sub
cmpsb
push
test
add
sti
pop
repnz
push
lea
xor
cmpsl
cmc
add
rcrl
adc
adc
adc
dec
pop
imul
adc
mov
pop
jne
pop
in
inc
jecxz
jecxz
pop
mov
movsl
xchg
scas
sarl
mov
xor
scas
pop
jp
add
pop
jle
jmp
shl
inc
aas
sbb
out
jle
or
int
loopne
jp
cli
push
xor
push
dec
popa
fwait
popf
pop
dec
sub
je
adcl
filds
pop
cmp
jne
push
adc
enter
nop
cmp
add
add
push
jmpw
bound
lret
lods
jne
popf
lock
ret
push
pop
push
xchg
adc
sub
sbb
cmp
clc
add
test
add
je
jnp
iret
rcrb
pop
repz
xchg
mov
hlt
aad
xchg
out
add
loopne
decl
js
ja
fs
add
add
sysenter
xchg
loop
fcmovnb
sbb
or
dec
call
loop
push
xchg
cmp
je
mov
add
mov
pop
fists
dec
inc
std
pop
mov
cld
push
push
pusha
je
loopne
arpl
and
insl
inc
dec
imul
add
outsl
add
andb
or
mov
es
push
sbb
or
pop
in
push
outsl
and
fsts
je
dec
mov
and
push
sub
sub
aad
mov
fdivs
hlt
or
clc
loope
loop
lea
loopne
mov
xchg
jno
daa
neg
mov
push
mov
je
push
or
adc
push
dec
push
add
jl
outsl
pop
dec
push
inc
xor
adc
sub
test
sbb
cs
loop
mov
and
and
cs
mov
inc
xor
fisubl
insl
xor
add
rorl
push
push
test
rcrb
inc
js
mov
jmp
and
sbb
jno
adc
insb
push
pop
mov
push
dec
push
arpl
mov
jecxz
xchg
das
pusha
mov
adc
std
aad
adc
pop
mov
pop
movsb
mov
cmp
es
aas
mov
xor
out
push
push
mov
pop
push
cmp
jmp
add
or
push
dec
push
stos
jle
sub
call
scas
dec
aad
or
jl
cmp
and
xchg
cmc
ss
inc
repz
push
test
mov
popf
xchg
inc
test
inc
int
dec
add
popf
stos
jb
inc
clc
maxps
sub
jle
pop
pushl
dec
sub
mov
dec
js
je
sub
call
or
rolb
xchg
sub
jecxz
loop
ret
or
aas
in
das
sti
dec
in
and
outsb
pusha
jne
in
mov
mov
imul
xchg
cmc
mov
rolb
call
xchg
or
cmc
dec
push
jl
adc
jmp
xor
daa
add
add
and
or
das
cmc
xor
push
push
lea
and
nop
stos
movsb
pop
inc
ficompl
or
mov
popa
pusha
or
sub
jl
inc
or
lret
je
andb
xor
test
fadds
and
fxch
aaa
mov
js
andl
push
insb
test
or
imul
mov
clc
dec
pop
fstps
jne
or
cmpb
leave
imul
test
or
rorl
push
iret
sbbl
js
rorl
lret
pop
pop
out
sbb
or
popf
es
xor
lea
add
loopne
je
loopne
xchg
ret
or
sbb
fcomps
or
push
out
adc
shll
clc
movsb
jp
and
cli
mov
movsl
push
xchg
xchg
aaa
pop
shll
fisttps
test
xchg
jnp
popa
sahf
xor
ret
lahf
clc
sbb
adc
jg
push
addb
xor
pop
aam
sbbl
push
xchg
pop
les
mov
pop
sbb
ret
sub
jno
xor
or
mov
adc
lret
pop
adc
mov
mov
ss
dec
orl
push
movsl
dec
push
push
insl
mov
ficoms
repz
cli
push
jg
or
dec
lcall
out
add
xchg
or
popf
dec
dec
icebp
xor
inc
dec
lea
lods
push
pushf
and
lock
test
or
push
incb
mov
cmpw
test
push
enter
lods
fimull
push
jle
or
std
adc
push
pop
inc
test
sub
movsl
hlt
adc
mov
mov
jg
or
clc
dec
jae
sbb
sbb
in
push
fstps
sbb
sub
ret
add
pop
add
or
mov
sbb
add
xchg
pextrw
inc
pop
movsb
pusha
push
and
mov
mov
or
sbb
add
pop
cmp
jae
loopne,pt
mov
push
mov
cwtl
mov
mov
pop
test
mov
mov
inc
xor
cmc
adc
shlb
push
shlb
mov
ret
je
and
clc
mov
mov
pop
dec
sti
inc
xchg
mov
cmp
jle
cmp
add
inc
mov
mov
inc
and
pop
incl
xor
movsl
lock
lods
loop
xchg
push
sbb
test
cmc
loopne
ret
inc
adc
jne
and
je
les
mov
cmp
popa
decb
sbb
mov
aaa
mov
inc
adc
cmpb
push
xchg
scas
jo
dec
push
or
data16
inc
sahf
pop
test
call
xchg
dec
push
adc
out
push
leave
lea
adc
or
mov
jmp
inc
arpl
add
jle
inc
xchg
mov
cli
add
mov
push
and
jmp
call
cmp
cmp
je
push
add
xchg
pop
lcall
mov
je
and
mov
dec
sbb
pop
inc
push
test
clc
ret
jae
mov
adc
shr
or
jne
push
fidivl
push
in
adc
jge
dec
sbb
aad
movb
in
test
pop
add
test
lahf
insb
test
movsb
in
push
push
outsl
inc
lret
sbb
mov
sbbb
mov
into
mov
add
les
add
ljmp
push
pop
clc
out
rorb
or
inc
std
lret
rcll
xchg
les
icebp
hlt
das
dec
fadds
mov
mul
sbb
leave
dec
adc
push
push
push
call
je
sub
mov
and
add
es
fldcw
jbe
flds
push
flds
cmp
ds
cmp
add
sbb
shrb
cmp
shlb
bnd
or
push
hlt
pop
insb
lret
cmp
or
jo
arpl
incb
dec
mov
rcrl
ljmp
sub
jne
push
addl
adc
ja
mov
aam
rorl
mov
inc
sub
add
or
jecxz
sahf
imull
push
pop
pusha
fs
or
clc
dec
cmp
sbb
push
push
and
xchg
loopne
cmpsl
shrl
adc
mov
pusha
and
push
jno
and
repnz
or
test
sbbb
clc
push
lahf
loopne
dec
xor
xor
lods
adc
test
cmp
mov
xor
aad
dec
les
loopne
jnp
call
incb
xor
incl
sbb
js
cld
cli
sbb
inc
push
jne
sbb
push
xor
adc
mov
push
es
pusha
add
mov
jne
xchg
je
test
fcomps
pop
fstps
sbb
pop
out
loop
fwait
sub
sub
or
cmpsb
addl
jo
jle
mov
popa
adc
daa
fdivrl
addb
clc
mov
dec
push
shl
jbe
clc
fs
jle
push
data16
inc
dec
fbstp
push
inc
fimull
adc
push
loopne
push
mov
mov
mov
dec
loop
add
pop
out
aas
push
lcall
test
xor
rolb
pop
jb
pop
ret
jg
pop
je
cwtl
or
nop
std
mov
or
cmp
adc
shl
or
outsl
jecxz
jo
out
subb
sarb
out
mov
sbb
jge
jg
lcall
neg
cmp
jge
mov
fs
dec
cmp
and
xor
sbb
neg
cmp
outsl
dec
push
jp
pmulhuw
xlat
shr
loop,pt
inc
out
push
cmp
lock
mov
je
mov
orb
sbb
jl
adc
imul
or
push
insb
inc
mov
xor
aad
jmp
push
or
push
and
inc
xchg
cmc
push
rol
push
cltd
cmp
and
int3
jne
nop
cmp
and
jp
fwait
lock
sub
stos
setl
nop
inc
lcall
imul
xor
sbb
push
and
mov
mov
add
mov
or
orb
jge
add
jno
mov
ds
rolb
rcll
cmc
push
sbb
out
inc
lock
stc
hlt
xchg
aam
mov
add
fninit
gs
imul
cs
xorb
push
scas
into
push
sbb
push
js
addr16
fildl
sbb
add
inc
sub
repz
sarb
cmp
pop
cmp
incb
mov
bnd
pop
cmp
add
push
lods
add
cmc
sub
clc
jmp
and
mov
data16
mov
filds
sub
push
sub
push
dec
and
xchg
ljmp
cmp
sub
mov
out
push
nop
jmp
sub
push
sbb
add
and
sub
pop
test
pop
sub
adc
insb
addr16
je
cmp
dec
push
and
dec
push
adc
sub
push
sbb
mov
xor
push
and
xor
sub
dec
push
punpckhwd
popa
fsts
inc
es
xchg
mov
mov
sbb
mov
and
mov
pop
xchg
out
test
add
sub
inc
cmp
andb
and
inc
fcmovb
pop
xor
mov
add
adc
xor
pushf
xchg
push
loopne
push
fstpt
cmp
int
lock
sub
clc
pop
lahf
or
lea
lcall
mov
push
subb
dec
xchg
inc
adc
mov
pusha
add
sbb
mov
or
push
add
sub
add
inc
insb
rcrl
pop
xchg
andb
loopne
ss
inc
sub
push
mov
and
sub
cmp
in
push
adc
jnp
int
test
mov
xor
xor
inc
mov
jae
imul
in
jp
or
insb
aad
or
inc
int3
pop
fidivrl
pop
ds
sbb
add
xorb
or
loop
in
adc
or
push
bound
inc
inc
call
sbb
cmp
push
loopne
pop
push
inc
clc
inc
je
test
xorl
dec
mov
inc
daa
sub
dec
scas
mov
roll
adc
jo
mov
daa
jb
je
mov
bound
sub
fs
inc
mov
mov
mov
or
pushf
into
lock
cmp
popf
neg
xchg
movsb
adc
xchg
and
loop
push
adc
pop
mov
adc
sbb
jmp
and
scas
js
test
and
xchg
nop
pusha
pop
sub
fsubs
loope
jo
and
lds
push
inc
je
pop
mov
dec
ret
xor
mov
sub
cld
or
in
outsb
ret
jl
sbb
xchg
or
jl
je,pt
sbb
insb
clc
cmpb
imul
push
outsb
add
inc
gs
imul
or
cmp
jle
mov
cmp
push
or
add
push
push
add
jmp
lret
sub
sahf
jg
xor
dec
js
out
int
xor
rol
lea
xchg
push
lds
xchg
mov
adc
je
jle
push
or
out
aaa
mov
jge
mov
jne
cmc
and
lods
nop
sbb
pop
or
cld
js
loop
orl
sbb
ds
inc
dec
mov
pushf
sahf
xchg
xchg
inc
cmp
pusha
add
adcb
ret
loope
scas
and
insb
cmp
push
pop
cli
push
xchg
ja
add
test
aam
ret
outsl
adc
adc
dec
xchg
aam
js
sub
faddl
cmp
jne
jl
mov
mov
outsl
mov
imul
or
add
lea
sub
push
ret
inc
push
aaa
xchg
jno
ss
out
push
add
or
clc
push
push
addl
clc
lds
sbb
adc
cmp
push
push
sbb
leave
ficoms
pop
sub
jae
aas
nop
or
xchg
int
add
fs
addb
jp
mov
add
push
jo
inc
add
sub
ljmp
rcrl
or
bsf
jnp
imul
fmuls
repnz
scas
nop
push
and
cld
mov
aaa
es
push
pop
jl
cld
and
lock
out
dec
and
repnz
out
xchg
xchg
xchg
inc
mov
and
out
sbb
sti
shl
cmp
fistl
fadd
pushf
mov
inc
or
inc
loope
xorb
and
jb
ret
adc
push
inc
sarl
ret
clc
loope
jb
mov
outsl
mov
jle
inc
enter
ret
add
mov
lea
adcb
orb
mov
inc
mov
mov
jl
leave
sub
sbb
fiaddl
or
loopne
stos
push
xchg
cmp
and
inc
adc
pop
shrl
sub
jge
sub
push
pop
mov
sbb
sbb
push
xor
cmpsl
mov
push
popa
xor
aam
dec
or
and
add
xor
fsubrl
iret
jne
lcall
push
test
incl
xor
mov
fbld
and
adc
cmp
popa
clc
in
cli
scas
lret
idivl
popa
ja
neg
jl
std
inc
xchg
mov
out
xor
cmp
mov
stc
inc
nop
cmpl
sahf
jl
test
add
xor
jl
pop
xor
or
sbb
ret
xchg
xor
jecxz
out
jle
cmpsl
xchg
cwtl
jle
imul
sub
push
stc
pop
incl
add
jnp
loop
add
xchg
add
out
fwait
insl
in
push
fiaddl
inc
push
jle
rolb
int
inc
and
lahf
les
outsb
sub
pushf
sahf
cli
stos
in
cmp
lea
push
idiv
inc
mov
iret
pop
test
iret
fs
and
xor
ss
dec
cmp
test
mov
cltd
and
out
aas
or
xor
pop
mov
adc
pop
mov
pop
mov
or
mov
adc
dec
flds
lret
movsl
ficomps
push
movsb
fcmovbe
fcoms
str
or
fmuls
aad
push
cs
adcl
or
mov
adc
inc
das
sub
sbb
sbb
inc
bound
sbb
mov
xchg
jo
outsb
and
mov
data16
adc
xchg
jg
mov
jb
and
leave
and
ret
test
in
xchg
shrb
jecxz
pop
dec
insb
fsubrs
cmp
ss
add
movsb
or
push
jbe
pusha
sbb
outsl
into
movsl
fnstcw
test
pushf
pop
aaa
xor
xchg
dec
lret
adc
xchg
mov
push
mov
xor
and
inc
sub
xchg
inc
mov
push
push
jbe
push
add
push
cmpsb
dec
decb
add
or
test
aaa
jl
in
mov
jne
test
call
frstor
fisttpl
pop
add
or
dec
cmp
scas
push
add
inc
mov
xchg
pushf
dec
inc
and
aam
lock
mov
sbb
int
lock
pusha
cmpsl
ljmp
and
adc
out
push
sbb
jmp
add
or
pop
mov
add
sub
push
aad
jae
jne
add
xor
or
clc
ret
pop
push
movb
lods
or
mulb
sti
fwait
popl
adc
mov
xor
adc
pop
or
jl
sbb
mov
dec
sub
xchg
rcrb
rolb
aaa
hlt
sbb
mov
hlt
mov
data16
cltd
dec
or
mov
add
sahf
push
push
cmpsl
fidivrs
push
add
sbb
ret
jg
fs
aaa
rcrb
and
add
jecxz
cmp
pop
in
int3
xor
push
lea
push
push
xchg
jo
movsb
push
cmp
push
add
pop
sub
mov
mov
sub
fs
and
adcl
add
adc
or
rolb
outsl
addb
andl
sahf
lods
dec
inc
adc
jno
or
push
pushf
pop
pusha
cs
adc
mov
inc
push
xlat
repz
pop
js
cs
je
ror
add
test
imul
fs
das
push
fdivrs
popa
dec
cmp
xor
cmp
cmp
mov
jge
mov
mov
and
fcmovb
xor
and
movsb
pop
mov
xchg
std
add
sub
sub
pop
lods
inc
add
add
jae
mov
cmp
ja
push
push
je
rclb
adc
jge
out
orb
inc
shl
inc
add
xchg
and
pop
xor
lea
mov
movb
and
add
mov
and
imul
mov
outsb
inc
xchg
outsb
add
lods
ret
into
sub
adc
sar
aam
pop
pop
mov
clc
clc
mov
je
cmc
rcrb
push
cmp
iret
cmp
imul
test
sbb
add
add
ret
clc
adc
mov
sbb
rorl
shr
and
lret
and
in
or
fwait
cld
dec
xor
and
pop
dec
je
or
mov
adc
rcll
jmp
xchg
pop
cmp
sbb
push
push
dec
ds
dec
ret
inc
ja
loope
cld
sbb
test
lods
std
adc
jne
inc
dec
sub
fs
clc
icebp
inc
dec
int3
das
pop
aaa
ret
loopne
clc
add
shlb
and
or
test
xchg
lods
outsl
int
add
inc
xchg
call
pushf
sbb
sbb
fsubs
push
mov
mov
lea
mov
sahf
xor
adc
daa
in
sub
push
mov
addr16
enter
hlt
inc
jecxz
jnp
cmp
js
ror
loope
sbb
pop
push
fucomi
adc
fcoms
jns
rcr
dec
push
sbb
xor
mov
inc
imul
imul
push
adcb
inc
loop
mov
pop
mov
mov
ror
aad
and
stos
aam
fmull
fistpll
insb
es
test
repnz
neg
and
or
or
sbb
jns
popa
push
inc
or
imul
add
push
mov
push
xchg
int3
rolb
rolb
add
cmp
rcrl
loope
hlt
lock
mov
push
cmp
jae
push
push
cwtl
or
add
js
add
add
jne
mov
sbb
jge
outsb
xor
in
mov
dec
cmp
adc
add
and
inc
jno
adc
addr16
cmpsl
loopne
ret
movsl
leave
les
pop
dec
jmp
xor
push
pop
negl
or
cmp
cmp
adc
and
test
inc
cmp
cmp
in
in
cmpsb
cmp
movb
and
xchg
inc
sub
stos
xchg
stos
pop
popl
xchg
cmp
add
shrl
push
andl
xor
pop
sub
push
jne
push
ds
add
push
aad
movsl
shl
std
add
test
test
and
dec
fmuls
ret
lods
aas
pop
pop
xchg
jbe
jmp
loopne
sub
dec
lds
out
movsb
sub
add
lret
outsb
mov
mov
cmp
ljmp
push
jne
xor
or
mov
or
test
and
cmp
arpl
popa
push
data16
iret
clc
xor
inc
shr
mov
shrl
lret
mov
add
jp
shll
imul
rep
mov
cmp
int
jge
flds
sub
mov
pop
cmc
stc
in
mov
or
and
cmp
jmp
fwait
shrb
test
test
add
push
out
pop
add
inc
mov
or
mov
add
add
fs
push
cmpsl
insl
cmp
and
sbb
and
loopne
or
or
push
dec
jg
jns
popa
mov
push
add
dec
inc
sbb
adc
dec
int
decb
push
xor
add
inc
lock
jo
sub
mov
dec
dec
fdivrl
ret
xor
inc
xchg
in
add
sbb
push
lods
push
jo
cs
push
sbb
sbbb
popf
mov
ljmp
lret
mov
clc
test
ja
pop
adc
ret
xchg
pop
mov
imul
or
mov
in
add
cmp
or
fcoml
cmp
fsubr
and
out
push
dec
push
int3
addl
mov
lods
pop
xor
das
ret
shll
pop
ja
in
leave
adc
push
push
dec
sahf
xchg
mov
pop
data16
popf
jbe
das
push
sub
push
adc
cmp
adc
dec
shll
adc
mov
int
cli
mov
enter
fimull
dec
sub
push
or
xchg
pop
pop
push
test
xchg
mov
les
icebp
mov
xchg
add
nop
nop
push
rclb
cmpsl
cmp
xchg
cs
mov
or
test
mov
cmp
out
add
push
push
push
addr16
mov
imul
dec
adc
fadds
push
or
add
or
aam
adc
fld
adc
lock
push
and
push
adc
fildl
pop
push
and
bound
xchg
setne
sbb
pop
int3
sub
add
xchg
and
pop
arpl
sub
into
mov
push
out
push
pop
mov
dec
arpl
or
sbb
int
test
pusha
mov
dec
mov
push
aaa
sub
sub
push
and
xor
xchg
push
adc
inc
inc
adc
js
dec
adc
adcb
shrl
rep
push
lds
adc
stos
jb
nop
sub
xchg
push
mov
fwait
stc
arpl
push
pop
mov
clc
add
pop
js
ret
xor
push
imul
insb
and
sub
aam
add
ret
push
push
push
sub
rorb
adc
inc
sbb
adc
cmpsb
sbb
movsl
rcll
das
xchg
push
xchg
lods
cmp
les
or
or
lods
sbb
sbbb
adc
icebp
adc
or
adc
xor
and
xor
rcl
aam
and
inc
mov
adc
cmp
and
ret
out
push
popa
mov
and
and
hlt
inc
or
xchg
jmp
push
jo
pop
push
or
inc
pop
push
mov
push
mov
push
je
xchg
push
inc
and
xchg
xchg
pop
jp
add
je
add
push
adc
mov
xchg
movb
sub
jo
insl
shrl
and
mov
jae
vmmcall
sub
inc
insb
jae
sbbb
xchg
jae
movsl
daa
push
int3
hlt
jb
jae
movsb
popa
pop
lahf
testb
ret
adc
cmp
xchg
enter
cmp
aam
sbb
pop
and
mov
pop
dec
cmp
loope
sub
mov
orl
lock
push
dec
cmc
ret
jno
cmp
mov
mov
push
push
adc
cld
pop
inc
mov
test
mov
dec
repz
or
out
inc
mov
push
push
ja
jl
dec
or
cmp
mov
mov
js
add
test
into
mov
adc
pop
idivb
or
adc
xor
test
sub
push
and
cltd
test
pop
pop
ss
pop
sub
push
mov
push
sahf
mov
popf
add
icebp
gs
mov
addr16
add
and
sbb
dec
and
mov
jmp
popf
mov
jne
insl
inc
inc
add
adc
inc
dec
mov
xor
nop
and
xchg
inc
inc
add
movsb
test
fcomi
inc
jge
cmpb
push
mov
adc
cli
mov
adc
add
or
and
dec
cmc
xor
pop
push
imul
mov
hlt
rclb
rcr
mov
mov
add
es
adc
bound
int3
popa
xor
or
rclb
or
and
clc
rolb
aad
push
sbb
fisttps
cmpsb
sbb
and
and
adc
nop
adc
and
sub
jo
dec
sub
and
push
loopne
sarb
dec
les
loop
dec
mov
mov
inc
adc
outsb
pop
adc
push
and
mov
fmull
add
adc
movsb
lahf
pop
xor
ret
popf
dec
popf
xchg
pop
and
push
inc
dec
or
enter
mov
in
dec
cmpsb
imul
sub
or
sbb
mov
push
sbb
xor
sbb
jle
or
jne
adc
movsb
adc
sub
dec
or
or
filds
add
mov
sbb
inc
lahf
jbe
add
xor
sbb
psraw
push
ret
mov
lea
les
cmpsl
dec
movsb
push
adc
ret
inc
rorb
js
mov
mov
test
rcrb
mov
jb
dec
int3
mov
pop
cmp
cmp
dec
imul
enter
adc
inc
jmp
jnp
outsl
andb
inc
and
test
dec
xchg
jno
xchg
ds
mov
pop
shll
jle
shrb
add
dec
push
mov
cmp
jne
add
dec
nop
dec
jne
mov
pop
pop
es
fadds
adc
dec
push
cmpsl
xchg
jbe
outsl
dec
xor
pop
add
dec
add
inc
add
insl
insl
je
push
xor
push
ds
jne
pop
sub
add
dec
shr
and
cmp
mov
stc
aaa
out
iret
out
xchg
cmp
add
jne
mov
ja
cmp
bound
cmp
sbb
jne
push
or
cmp
in
jb
mov
fmuls
sbb
fisttpl
pop
add
test
push
push
mov
jo
add
inc
sbb
sub
push
jno
or
pusha
jge
test
fnstcw
loopne
jne
inc
add
xor
dec
mov
jle
test
dec
cmpsb
scas
in
aas
clc
xor
aam
sub
fsubl
mov
test
js
fs
lock
mov
cwtd
adc
fdivs
shlb
les
sub
xor
cmp
mov
add
mov
sbb
jge
jge
ret
add
mov
pop
rorb
push
lcall
adc
cmpb
jb
or
cmpl
mov
push
fidivl
or
inc
xchg
shrb
and
push
jbe
sbb
ds
js
sarl
push
push
fdivrl
push
int3
push
push
ret
cmp
je
push
jl
xlat
cmp
mov
xor
ficomps
mov
add
or
mov
aam
jge
sub
pop
pop
repnz
clc
and
stos
dec
mov
mov
dec
cmp
in
pop
mov
out
cli
jg
adc
iret
insl
pusha
cwtl
sub
push
nop
cmp
mov
arpl
jne
mov
mov
add
pop
adc
std
add
jbe
sub
add
push
scas
fdivrs
lods
imul
xchg
lods
dec
push
push
pusha
jne
call
shll
pop
das
adc
push
lcall
or
movsl
enter
mov
mov
pop
mov
dec
fs
aad
xor
icebp
stos
sahf
adc
lret
sub
sbb
push
test
in
push
fs
in
sub
in
xor
mov
pop
cmpsl
nop
xchg
int3
fistpll
lods
mov
cmp
je
jecxz
je
mov
dec
shll
push
or
adc
sbb
out
les
mov
fadds
sub
mov
mov
push
add
inc
mov
ret
mov
and
stc
and
addr16
add
push
mov
mov
adc
mov
push
mov
adc
or
lock
rorb
dec
cmp
push
mov
inc
mov
pop
rolb
mov
cmp
enter
insl
int3
js
mov
or
movsl
aam
out
add
pop
es
fucom
or
add
and
mov
sti
mov
outsl
sub
mov
popf
repnz
push
push
push
cld
pop
aaa
push
outsl
sbb
test
add
push
pop
jecxz
adc
fcomp
push
dec
and
push
mov
leave
xchg
or
cs
or
outsl
sbb
mov
mov
xor
incb
insb
sub
mov
adc
or
jle
adc
mov
cmp
mov
sar
cmp
jg
mov
xchg
shrl
shll
cmp
mov
jbe
add
jle
add
rol
movsl
sbb
fstl
outsb
sbb
addb
xchg
lock
clc
ret
loopne
adc
fldl
dec
xchg
pop
mov
jmp
push
add
inc
jl
jmp
pushf
and
push
fcomps
fcoms
pop
pop
pop
push
mov
or
adc
adc
push
lods
movsb
add
jno
repnz
movsl
je
test
sbb
pop
pop
jb
sbb
push
push
pop
jmp
sub
and
xor
int3
fidivl
orl
sub
pop
lock
and
fnsave
movsb
adc
dec
push
clc
sub
cmp
cmp
sbb
test
sub
fs
cmp
notl
or
mov
xchg
jo
cli
mov
push
sub
push
push
or
and
xor
insb
mov
es
mov
xchg
cmpsb
sbb
sbb
mov
push
dec
jecxz
nop
inc
fucomip
rolb
shrb
dec
sbb
sar
mov
test
out
adc
out
add
add
stos
arpl
or
ljmp
push
push
pop
divb
dec
add
sti
mov
ss
sbb
adc
mov
sub
push
dec
int3
jp
add
inc
add
stc
cmp
cmpb
mov
mov
shrl
mov
mov
je
mov
lods
imul
or
adc
data16
mov
inc
inc
out
xor
jmp
sub
movsl
mov
lods
xor
xor
outsb
cli
push
out
sbb
jo
loope
sub
loop
mov
dec
jecxz
adc
mov
in
pop
cmp
pop
roll
cmp
xlat
jo
sti
jmp
push
test
pop
adcb
push
js
gs
add
push
push
pusha
cs
jo
pop
mov
push
fadds
in
mov
pop
push
inc
cld
or
fcomps
lods
je
push
sub
loope
xor
pop
inc
mov
stc
xchg
lock
int
rcrb
adc
cmp
in
push
add
mov
cmp
mov
xchg
pop
mov
cli
adcb
scas
mov
aaa
mov
daa
cmp
movsl
orb
jne
add
jl
movsb
xchg
add
mov
pusha
or
or
clc
outsb
xor
and
inc
dec
and
add
pop
inc
or
push
leave
inc
cmp
and
adc
jne
jl
pushf
pop
push
or
pusha
in
dec
inc
loope
add
shr
sahf
in
sarl
in
jns
and
les
sti
push
jl
pop
cmp
test
test
add
cs
dec
pop
repz
inc
mov
sub
int3
xchg
icebp
xchg
sub
jmp
lea
inc
push
pop
adc
fistps
inc
adc
cmp
data16
add
mov
rorl
call
xor
js
data16
add
lcall
mov
add
and
jle
mov
sub
shl
jl
sub
adc
jmp
sub
push
shlb
aas
aaa
xchg
imul
add
jbe
mov
sub
inc
or
push
inc
sbb
jg
jnp
incl
cmp
dec
lret
mov
mov
mov
jo
adc
movsb
data16
repnz
add
xchg
add
xchg
lcall
daa
xor
cmp
sub
inc
mov
mov
jmp
std
lahf
and
jge
sub
into
mov
shr
push
xor
add
loopne
or
sbb
jmp
ja
inc
mov
push
stos
push
movl
adc
push
add
clc
jg
sti
movb
dec
jne
scas
cmp
insl
lahf
pop
std
sbb
aam
add
inc
rorl
cmp
stos
movsl
in
or
push
push
mov
inc
xor
inc
cmp
out
xorl
movsl
push
popa
hlt
insl
clc
adc
incl
and
jge
or
inc
sbb
sub
push
sub
leave
incb
dec
push
push
insl
adc
in
fcom
push
adc
pop
mov
cmpsb
test
inc
clc
cwtl
push
aaa
fwait
inc
and
sarl
nop
jne
and
imul
sarl
or
rol
idivb
mov
cmp
call
pop
cmc
sub
adc
int
jle
sarl
push
les
std
dec
bt
lret
and
out
out
or
jp
push
push
out
lock
mov
or
xor
into
in
adc
xor
xchg
dec
dec
lds
push
and
push
outsl
add
ret
pop
adc
adc
lcall
xor
or
cmp
sub
hlt
mov
pop
loopne
lret
dec
int
imul
sub
pop
ret
lods
push
mov
js
stos
scas
sbb
or
dec
adc
or
sti
ja
ljmp
call
and
dec
or
shll
orl
pop
rorl
lds
cmovae
xchg
lgs
pop
push
push
cmpsl
add
adc
cmp
sub
adc
mov
lcall
xor
call
jle
je
dec
or
or
xor
arpl
jo
js
push
mov
pusha
jl
movsl
pop
xchg
shl
xchg
inc
add
or
inc
mov
add
jo
mov
add
push
sbb
pop
loope
adc
xchg
pop
push
cs
insl
int3
lock
cmp
pushf
sbb
jnp
test
xor
add
xchg
outsl
das
mov
inc
xchg
xchg
adc
dec
sub
adc
adc
orl
test
jg
sub
jno
aad
add
icebp
xor
xchg
pop
push
cs
push
ljmp
pop
add
sbb
and
fnsave
dec
sub
movl
push
push
stos
adc
adc
lcall
lea
outsb
pusha
push
cmp
push
inc
je
mov
or
push
mov
fstpt
insl
mov
push
jo
bound
into
push
je
retw
fcmove
or
sbb
call
push
inc
nop
test
sbb
mov
mov
push
push
in
sti
sub
cwtl
mov
xchg
cwtl
aaa
out
add
inc
adc
clc
pop
cmp
adc
lret
clc
repz
jg
jbe
cmpl
mov
sub
xchg
push
scas
movsb
xchg
aam
clc
push
push
jae
adc
or
xchg
add
hlt
and
rcl
shr
stos
dec
add
shr
or
sbb
loop
add
mov
and
adc
or
or
decb
jae
lea
mov
adc
push
jle
pop
push
pop
mov
add
sarl
data16
jmp
pop
ret
jp
lret
mov
xor
repnz
test
sub
sub
sbb
push
lret
ss
pop
dec
insb
push
push
push
inc
in
jno
cmp
cmp
pop
ret
fcomps
push
mov
pushf
call
push
pop
adc
pop
mov
enter
stos
sub
jmp
aas
cmp
jae
xor
pusha
mov
sub
sub
out
ret
sbb
das
adc
jge
fdivs
mov
dec
std
mov
rclb
jge
mov
into
test
mov
add
sbb
jo
push
mov
mov
or
cmpsb
rcrl
shl
enter
popf
cmpsb
pop
push
or
fs
xor
cmp
push
aam
sub
cmp
fwait
cmp
push
orl
jmp
jge
mov
sub
add
jo
pusha
aas
aaa
or
or
fmuls
cmpb
inc
push
add
ljmp
sbb
xchg
mov
lret
mov
sbb
in
enter
jns,pt
fisttpll
xor
mov
adc
or
shlb
mov
or
into
rcr
sbb
mov
call
jmp
jbe
push
inc
rorl
push
xchg
sahf
test
sbb
sbb
pop
or
add
cli
int3
mov
ds
mov
hlt
sub
sbb
fs
jae
inc
and
mov
pop
adc
add
dec
lcall
or
loopne
dec
in
or
add
add
mov
xchg
test
jne
rcrb
fstp
dec
imul
loop
jae
shrb
adc
test
movsl
cmp
inc
enter
inc
mov
mov
dec
fsubp
call
mov
push
fadd
jbe
jge
clc
nop
jle
add
aas
push
imul
fcomp
add
and
adc
fsubs
and
les
cmp
pop
jge
gs
xchg
and
or
mov
mov
je
adc
and
fstpt
pop
or
ret
inc
shlb
cmp
jbe
lret
mov
cmpsl
mov
aad
push
pusha
mov
and
sbb
inc
shrl
loope
adc
xor
fbstp
jg
cmc
xchg
inc
int3
cmp
jb
mov
pusha
add
pop
mov
movsb
lods
add
stos
test
mov
pop
sub
add
add
or
nop
je
xor
inc
push
or
xchg
ljmp
insb
test
cltd
into
ds
jmp
pop
lcall
xor
xchg
mov
cmp
cmpb
adc
je
push
loope
cs
push
mov
sub
cwtl
jne
mov
fmul
negl
jae
movsb
ss
je
ds
cwtl
aam
sahf
sub
insl
cmpsl
or
shll
sbb
imull
ret
bound
inc
mov
xchg
jo
lods
loopne
dec
fs
inc
cli
add
jae
or
xor
pop
div
inc
sbb
ret
adcb
cmp
lea
xchg
mov
fwait
inc
xchg
mov
mov
mov
movsl
inc
xchg
insl
jp
repnz
add
mov
ficompl
sahf
add
push
push
or
dec
andl
jo
or
ret
jne
mov
add
fwait
add
lds
sbb
jg
mov
les
jp
ljmp
pop
cli
push
outsl
adc
dec
inc
or
push
cmp
loop
es
pop
jl
adc
or
shrl
inc
sub
dec
add
add
pop
add
sbb
adc
jg
sub
pop
mov
mov
and
mov
cmp
xchg
fdivp
loop
or
scas
out
jbe
xor
lock
out
push
cli
adcb
xchg
mov
xor
cwtl
push
push
cmp
mov
loope
cmp
je
scas
adc
mov
orl
mov
ret
add
fisttpl
rorb
sbb
dec
sub
lods
sbb
lods
enter
pop
sub
movsb
mov
cmp
xorl
pop
mov
xor
in
shll
andb
daa
lea
xchg
push
mov
in
mov
pop
xchg
add
mov
inc
or
xchg
movsl
sub
inc
mov
mov
test
jbe
mov
popa
dec
je
pushf
sub
mov
push
inc
dec
adc
cmp
inc
or
inc
adc
je
aam
cmpb
jne
aas
push
xchg
cwtl
push
jmp
and
roll
sbb
adc
in
adcb
je
xchg
adc
fadds
mov
mov
pop
mov
mov
sarl
ret
cmp
add
mov
test
je
testb
dec
mov
jp
push
add
inc
adc
fsubs
mov
out
mov
test
shl
or
xchg
lock
loopne
pop
pop
cltd
adc
orb
jle
outsb
sbb
mov
mov
mov
or
jno
push
jne
jo
push
push
fsubr
or
or
insb
lret
inc
jbe
cmp
je
or
cli
in
cwtl
movl
mov
cmp
je
scas
cmp
or
push
cmp
jae
addr16
je
mov
cmp
fcmovnb
mov
xor
add
adc
xor
jmp
mov
orl
out
std
mov
mov
jae
test
jne
sub
jg
jo
lods
sahf
cld
cmp
add
ds
mov
sub
push
addb
aam
loop
cli
mov
jnp
addl
orl
xchg
std
pop
add
pop
mov
xlat
std
cmp
out
pop
push
je
cmp
pusha
shlb
or
rcll
imul
loope
inc
enter
cmp
test
sbb
mov
mov
mov
ret
inc
add
jl
sbb
add
ljmp
dec
ss
xchg
bound
inc
add
lods
push
sub
ja
add
add
or
push
pusha
and
cwtl
test
lea
pop
push
cs
rcrb
push
clc
mov
into
repnz
sbb
pusha
ret
mov
and
sbb
pop
push
push
pop
mov
pop
mov
and
jl
ror
aam
cld
or
and
iret
push
push
inc
outsl
fiadds
cmp
enter
xor
xor
nop
or
and
insl
pop
jae
ds
mov
pop
xchg
push
or
fsts
pop
mov
xor
jbe
lcall
outsb
push
sbbb
das
push
dec
ret
cs
push
push
int3
test
or
and
dec
inc
mov
xchg
mov
je
add
loop
jecxz
stos
mov
fldl
fbld
loopne
inc
xor
aad
lret
and
add
jb
xor
push
inc
in
mov
or
push
rorl
pop
and
dec
or
mov
pop
in
je
pop
orl
nop
push
xchg
inc
mov
addl
sbbb
cltd
mov
iret
mov
add
push
cmpb
mov
stc
loope
adc
mov
adcb
cs
lcall
pop
jp
mov
inc
cltd
or
inc
or
mov
push
mov
xor
mov
ret
hlt
mov
and
mov
int3
stc
add
mov
cmpxchg
cmp
jnp
fadd
outsb
aad
int3
push
sti
arpl
push
push
inc
dec
stc
loop
inc
fadd
add
outsl
jp
mov
rolb
mov
xchg
or
test
fstpl
lret
push
dec
inc
mov
fimull
dec
push
popf
lea
mov
sbb
adc
push
push
aas
iret
jle
jnp
mov
add
add
inc
sbb
ret
pop
lds
push
pop
xchg
mov
sti
arpl
mov
xor
inc
out
jns
call
dec
imul
jl
aaa
jnp
sbb
inc
cmc
ss
jne
jmp
dec
shrl
je
orl
inc
mov
adc
and
adc
mov
call
cmp
aas
jae
mov
and
call
jmp
lods
dec
adc
add
sbb
and
mov
mov
addb
cmpsl
cmpl
ss
add
inc
jo
push
mov
arpl
ret
test
add
adc
int3
cwtl
test
adc
rol
push
jle
aam
mov
push
push
repnz
pop
sbb
mov
pop
mov
aas
add
mov
add
cli
movsl
add
ret
insb
ret
dec
or
sbb
adc
adc
cmp
popa
jo
mov
sub
testl
shrb
out
gs
jno
jge
sbb
mov
sub
mov
sbb
pop
adc
lret
inc
or
and
dec
filds
mov
or
das
pop
addb
inc
loopne
add
roll
fimuls
rorb
sub
mov
add
nop
std
jle
sbb
inc
sbb
mov
adc
int
popf
adc
fimuls
bound
push
pop
jp
mov
mov
adc
sbb
push
sbb
pop
pop
lret
mov
adc
add
sysret
lock
dec
xor
addb
sbb
hlt
jbe
adc
test
movsb
jbe
mov
arpl
push
clc
dec
jg
and
jne
push
decl
aas
add
cmp
lea
je
mov
inc
ret
inc
xchg
jp
leave
sti
mov
ret
jne
cld
mov
or
cmp
loope
nop
adc
out
or
xorb
enter
aaa
ss
lea
cmp
dec
pusha
sbb
test
and
data16
pop
pusha
or
or
mov
rol
mov
xor
shll
repnz
ret
shll
movsl
mov
loope
mov
jl
mov
ret
loop
cmc
test
sub
cmp
es
repnz
dec
cmp
inc
in
add
jne
add
or
xchg
daa
pusha
sbb
in
sahf
mov
add
aam
mov
push
insb
aad
ret
fldt
call
push
jl
dec
shll
out
icebp
adc
push
xor
cmp
add
daa
pop
jno
stos
add
roll
mov
mov
in
cmc
js
sti
push
xchg
aad
jmp
test
cmpsl
push
pop
sbb
test
shrl
cmp
add
stc
pop
aam
inc
insl
dec
dec
push
outsl
es
push
mov
outsb
jle
sub
xor
iret
dec
fistpll
test
lret
xor
or
add
adc
sub
clc
pop
fimull
dec
out
jle
in
lds
fimuls
and
call
adc
xor
dec
incb
jl
test
xchg
rclb
bound
add
and
xor
outsl
or
jl
jae
stos
pop
ror
mov
xchg
sti
add
cmp
jo
mov
cmpsl
fsubl
test
jnp
mov
insl
dec
test
push
push
mov
cmp
push
dec
add
sarl
cmpsl
add
jne
js
inc
pop
push
add
imul
lret
clc
xchg
ljmp
stc
adc
inc
stos
fisubrs
mov
pushl
and
dec
xchg
mov
push
sub
fcompl
sbb
fwait
subb
inc
mov
jg
xchg
ja
sbb
loopne
subb
xchg
push
xor
and
push
dec
addr16
aam
ret
addb
push
mov
xor
nop
adc
xchg
jbe
arpl
lods
xor
sub
aas
inc
adc
add
sbb
mov
rorb
dec
jg
icebp
push
fs
sbb
jmp
lahf
xor
mov
jg
test
or
leave
test
cmp
jge
pop
pop
outsl
rclb
dec
cmp
sbbb
jge
cltd
fwait
int3
add
into
out
add
enter
jle
xchg
pop
in
or
or
call
push
dec
inc
or
and
test
fisttpl
enter
pop
rcrl
inc
insl
pop
and
jbe
and
mov
inc
and
inc
hlt
adc
adc
clc
les
xchg
sbb
movb
inc
add
or
sub
orb
jo
inc
xchg
shll
jno
mov
mov
dec
xor
sbb
adc
sub
mov
ret
adc
sub
xchg
and
dec
pop
jmp
ret
push
add
pusha
xchg
rclb
aaa
xchg
repz
cmc
movsb
adc
adcl
sub
pop
fisubrs
and
imul
lock
mov
clc
addr16
or
cmc
std
mov
das
adc
or
rep
sahf
jp
cmp
sbb
push
and
popl
fsubl
or
idivb
cmp
aam
hlt
and
adcb
inc
mov
jge
lods
int
xchg
adc
fcmovbe
mov
xchg
sub
scas
dec
dec
inc
or
jbe
pop
adc
dec
push
push
push
or
fs
xor
mov
je
jo
push
add
jo
inc
shlb
pop
cmp
je
std
loope
cld
sub
xor
scas
mov
shlb
jl
pop
inc
jne
push
cltd
rorb
movl
call
fidivl
fadds
and
push
cmp
loope
inc
mov
push
inc
hlt
xchg
adc
xchg
lea
add
out
test
mov
xchg
xchg
pusha
rolb
xchg
jo
inc
fs
repz
xchg
clc
xor
mov
shrl
pop
or
cltd
iret
ficompl
roll
imul
jnp
int
or
push
hlt
xchg
and
adc
inc
lds
pop
in
inc
add
in
mov
and
sub
pop
mov
fdivrp
jo
dec
xor
inc
inc
daa
mov
je
inc
stos
pusha
cmp
enter
pusha
mov
or
inc
fs
jns
xlat
je
adc
adc
cmp
lds
cmpl
pop
push
add
rorb
push
push
mov
movsb
cmp
mov
fadd
push
cmp
or
xchg
jmp
dec
movsb
sbb
adc
adc
inc
cwtl
sbbl
lods
xorb
cltd
pop
int
xchg
in
in
pop
mov
add
inc
mov
push
insl
mov
or
dec
sbb
lock
pop
dec
arpl
jo
sti
push
dec
jnp
sarb
push
add
cmpsb
xor
push
adc
mov
rcl
fadds
or
add
jecxz
mov
aam
lea
mov
les
sub
push
mov
scas
xchg
push
mov
ja
jge
mov
jmp
inc
mov
imul
test
pop
mov
daa
add
add
jmp
pop
repnz
pusha
push
dec
jl
pop
enter
push
sub
mov
test
adc
cmc
fimull
lock
sbb
jl
add
add
xor
mov
pop
inc
pop
fisubrl
sbb
insb
mov
push
std
leave
cwtl
out
lcall
das
inc
push
cmp
ja
ss
inc
test
decl
cmpsl
xchg
cs
xor
sub
cmpb
or
movb
inc
and
jae
lea
adc
mov
jnp
dec
ljmp
add
adc
xchg
push
xor
subb
lods
mov
enter
imul
mov
or
pop
mov
mov
mov
adc
test
adc
pusha
mov
mov
mov
inc
mov
sub
shlb
fsubrs
sbb
mov
subb
dec
adc
enter
push
in
adcb
ret
adcb
jmp
adc
pusha
ds
xchg
adc
or
adc
lea
add
add
cli
xchg
adc
mov
cltd
insb
imul
lcall
test
sbb
int
adc
dec
mov
pop
jmp
pop
pop
sub
cmp
testl
lret
cmp
xchg
mov
addl
aaa
adc
inc
daa
xchg
xor
sub
cmp
push
or
pop
mov
add
or
imul
shll
lahf
adc
add
push
or
jg
lcall
cs
rol
in
adc
movsl
add
adc
pop
aam
or
loop
push
dec
add
mov
dec
mov
jg
pusha
or
adc
inc
pop
push
mov
push
pop
push
shll
pusha
stos
jnp
adc
add
nop
cmp
pop
iret
sbb
cmp
sti
imul
xchg
jns
incl
pop
sbb
rcl
cmp
lret
insb
sbb
inc
imul
rclb
add
push
and
pop
inc
adc
adc
pop
add
push
test
or
icebp
dec
ljmp
adc
xor
jb
pop
stos
fcoml
dec
pop
or
or
pop
or
enter
xchg
je
out
dec
test
dec
aas
test
sbbl
mov
sub
lods
int3
and
adc
adc
inc
mov
jg
pop
xor
jns
lods
mov
filds
pop
imul
ret
pop
push
and
sub
pop
xchg
sub
add
jge
cmpl
add
roll
std
pop
adc
and
es
pop
add
inc
repz
sub
test
push
dec
ljmp
jo
add
sbb
cmpb
inc
and
fldcw
mov
cs
pop
or
jbe
push
cltd
jmp
push
dec
inc
push
push
push
inc
adc
rcrb
pop
ret
sub
call
inc
in
sub
xchg
or
and
xchg
inc
adc
repnz
inc
xor
roll
sbb
or
or
cmp
adc
push
mov
add
mov
outsl
xchg
jle
aad
mov
mov
into
ret
push
je
xchg
add
push
rcll
nop
shll
pusha
call
inc
add
cmp
pop
or
mov
jnp
sbb
pushf
cltd
cmc
adc
pop
outsl
xchg
mov
sahf
sbb
pop
push
sbb
and
movsb
xor
jnp
xchg
mov
push
mov
popf
pushl
pusha
push
cwtl
dec
fs
cmp
xor
decl
mov
idiv
jg
jl
int3
xchg
mov
mov
jg
test
inc
or
mov
bound
xchg
sbb
mov
xlat
push
mov
out
pop
add
dec
fstl
sub
cmp
lea
jge
or
adc
push
push
push
sbb
je
jnp
pop
inc
adc
and
sbb
popa
psubb
jo
int3
and
in
mov
icebp
shlb
inc
lahf
add
push
add
test
mov
mov
dec
xchg
mov
insb
xchg
xchg
mov
adc
add
jmp
jne
push
add
ss
push
adc
les
test
enter
adcb
insl
loope
cwtl
and
int
and
mov
push
add
movsb
movsb
andl
call
test
repz
sub
inc
jb
pusha
push
xchg
mov
in
lock
adc
push
push
or
lea
in
push
or
mov
add
xchg
out
movsb
enter
sub
je
mov
mov
jo
mov
enter
mov
cmp
push
mov
fistpl
push
add
push
xor
mov
cltd
cli
jmp
adc
mov
cmp
lods
jb
fld
sbb
xchg
dec
jae
cmp
inc
xchg
dec
sarb
pop
or
int3
test
pop
xor
pop
push
and
pop
jle
test
adc
sbb
cmp
jle
dec
mov
xchg
aas
mov
add
mov
push
adc
push
mov
jmp
add
mov
scas
jno
fwait
xor
sub
push
mov
push
into
sub
mov
push
dec
dec
push
xchg
icebp
mov
xor
rcll
push
pop
repnz
add
lret
cmp
add
jns
mull
inc
sbb
mov
dec
sbb
sub
out
test
mov
and
dec
mov
adc
and
aam
adc
xchg
cwtl
adc
and
dec
and
cmpsb
or
out
adc
xchg
inc
insb
push
xor
inc
es
and
nop
imul
or
insl
cltd
fs
sbb
and
mov
and
push
add
mov
daa
add
into
insb
xchg
inc
outsb
daa
add
cmpl
push
adc
push
mov
pushf
adc
test
xor
cmc
jns
mov
test
jae
dec
scas
add
scas
in
das
cs
scas
in
sub
scas
in
scas
sub
sub
in
daa
es
scas
in
and
push
mov
and
jbe
push
daa
and
and
sbb
sbb
sbb
sbb
repz
push
jo
xor
mov
ret
pop
mov
lods
sbb
mov
and
cmp
daa
push
sbb
mov
pop
add
in
jecxz
pop
lret
push
test
es
daa
sub
pushf
mov
push
rolb
xchg
pop
pushf
pushf
pushf
adc
or
repnz
ds
loopne
xchg
xchg
xchg
xchg
lret
push
movsb
push
push
or
leave
leave
leave
leave
or
fisttpl
cmp
or
pop
sub
mov
and
in
push
mov
imul
leave
leave
idivl
add
ret
stos
mov
xchg
cmp
stos
je
inc
std
add
sub
push
sub
mov
inc
fs
mov
or
ljmp
lods
lahf
push
js
movl
nop
xor
mov
add
mov
mov
cmp
xor
sbb
mov
test
cmp
and
jp
and
ds
sub
addl
and
cli
lea
cmp
lea
mov
and
push
add
add
ret
and
insb
xor
push
addb
push
or
pop
sbb
mov
jnp
das
xor
push
out
sub
je
push
addl
popa
retw
lea
or
cmp
and
fbld
bnd
push
sbb
xor
adc
movsl
lods
mov
mov
sbb
adc
inc
pop
or
js
xchg
push
es
je
add
fs
sti
push
aad
push
or
cld
inc
push
fsubs
cmp
jle
push
test
push
adc
sbb
xchg
mov
add
cwtl
jp
and
inc
xchg
pop
jmp
add
shlb
xor
mov
daa
pusha
js
push
inc
les
leave
push
lock
sti
push
add
cmovnp
xchg
iret
inc
pop
sbbl
iret
jmp
int
pminsw
mov
or
add
lahf
adc
imul
cwtl
int3
cli
cs
imul
rclb
dec
sub
movsb
xor
rolb
push
rcl
pusha
and
fisubl
and
inc
imul
push
pusha
rcrl
cmp
adc
and
pop
cmp
rcrl
mov
fdivrp
cmpsl
cmp
dec
mov
add
or
xor
jo
testb
mov
mov
add
mov
jl
mov
mov
mov
loop
mov
loopne
push
push
clc
or
sub
test
fisubrl
rcrb
pop
faddl
ret
mov
rorl
call
xor
add
inc
add
inc
xor
jo
cmp
adc
push
in
push
xor
lds
mov
and
div
test
adc
pop
xor
mov
in
fldl
push
mov
stos
and
ret
inc
inc
cmpl
pop
rorl
pop
or
jo
mov
jae
xor
lock
in
xchg
loopne
push
push
jge
mov
cltd
rolb
cmp
xchg
es
cmp
xlat
sub
jl
mov
jmp
pop
cmp
or
pusha
nop
mov
jmp
lods
mov
pop
push
xchg
pop
cmp
jnp
jl
push
inc
jg
and
enter
push
lds
mov
mov
jne
xor
leave
dec
outsb
sbb
or
or
cmp
jl
cli
pop
jmp
dec
pop
ret
mov
popa
imul
clc
jmp
sub
pop
mov
mov
sub
cli
cmp
clc
subb
insb
mov
push
sbb
jmp
test
mov
nop
inc
clc
pop
push
shlb
mov
fsubrs
loop
jp
out
dec
out
cmp
cmp
jb
add
lea
sbb
push
je
adc
and
rol
push
shlb
xchg
mov
leave
cs
pop
mov
push
add
push
pop
inc
pop
lds
movsb
std
mov
cmp
jg
pop
and
add
push
fsubrs
and
xor
shrb
fldcw
addb
or
xor
add
jo
fmull
insb
mov
push
pop
push
and
in
add
or
rorl
pushf
adc
mov
cltd
jp
sahf
push
outsl
pop
mov
daa
mov
sbb
dec
push
xor
xor
push
test
cmp
xchg
xchg
adc
sub
js
push
add
fsts
lret
cmovge
aam
cmp
lret
addb
xor
out
lock
cmp
fidivrl
cmp
mov
cmp
cs
outsl
jmp
jne
gs
testl
mov
inc
mov
pop
enter
je
cmpw
mov
add
push
adc
loopne
daa
dec
push
xor
nop
es
sub
fwait
cmp
int3
add
push
cmp
pop
je
ret
lods
sbb
jecxz
inc
jge
mov
out
cmp
fnstsw
and
cmp
clc
loope
add
fldz
jno
cli
fwait
lar
arpl
adc
rol
pusha
add
inc
and
push
and
mov
adc
imul
mov
inc
je
push
jns
add
testb
xor
ret
mov
ret
aas
decb
mov
pop
and
cmp
adc
adc
mov
into
std
cmpb
push
add
fbstp
outsb
dec
leave
aad
xor
add
lea
and
fisubrs
push
or
xor
mov
mov
adc
cmp
push
in
push
sbb
adc
addr16
imul
adc
fildl
push
adc
cmc
pop
add
pop
insb
jl
cmp
fidivrl
mov
adc
xchg
test
mov
push
adc
xorb
jle
sub
jge
stc
add
mov
ds
test
cmp
or
sbbl
addb
sub
adc
xor
ret
inc
sub
sbb
or
inc
jmp
pop
push
xor
push
dec
shll
xor
xor
shll
xor
cmp
andb
loope
or
xchg
shll
cmp
dec
je
inc
insw
xor
push
jbe
pushfw
push
sbb
dec
dec
and
int
pop
pop
jg
dec
and
stc
jle
add
int3
dec
or
add
inc
jnp
dec
js
movl
adc
rcr
ja
sub
or
or
xor
cmp
pop
dec
out
dec
aas
add
daa
jmp
cs
sub
or
push
lds
xchg
cmp
filds
push
sub
push
dec
pop
je
add
dec
jnp
mov
shr
dec
insb
mov
push
pop
and
inc
adc
dec
inc
ds
mov
add
sub
add
nop
mov
shll
lods
inc
push
inc
enter
inc
add
pop
cmp
testl
push
cmpsl
jb
jmp
pop
or
lods
cmp
rorb
push
pop
ret
std
mov
lock
sahf
cmp
cmp
jne
push
add
aad
call
clc
test
outsb
hlt
xor
xor
outsb
filds
dec
adc
pop
mov
push
ss
pushf
add
cmp
test
jno
lahf
add
sbb
push
or
mov
fistpll
stos
jp
testl
stos
insl
loope
add
mov
pop
pusha
push
adc
psubusw
mov
push
push
outsb
mov
xor
ss
fdecstp
inc
adc
insb
push
insl
aas
lahf
cmp
movsb
jb
sub
mov
aaa
and
adc
fs
or
cli
test
test
dec
lea
pop
jns
xchg
sub
or
add
dec
dec
cs
int
lea
xorb
adc
fstps
xor
arpl
jle
fisubrs
aad
mov
mov
mov
aad
mov
imul
imul
cmp
xorb
sub
inc
sub
or
jle
aad
mov
push
cs
sub
addb
mov
mov
sbb
ret
xor
lock
pop
jle
push
push
in
andb
inc
cmp
ficompl
push
add
adc
ret
and
push
je
outsl
jno
leave
dec
popa
or
nop
lret
mov
pop
adc
push
and
out
aas
xor
ljmp
xor
and
dec
aas
and
popa
lcall
out
sub
and
inc
and
fmull
sbb
adc
jmp
sbb
data16
lret
fldl
lods
jmp
or
call
mov
jne
out
lea
sbb
add
cwtl
and
cmc
jg
fdivrs
or
lret
sub
jl
cmc
push
push
xchg
push
int3
jne
push
stc
mov
pop
cmp
push
push
jl
imul
inc
push
mov
ror
je
call
int
dec
jno
popa
sbb
jle
mov
or
insb
xlat
fs
sbb
scas
nop
cmc
cld
xchg
stos
fcompl
pushl
cmp
or
das
or
out
mov
cli
je
test
mov
push
jecxz
pop
call
inc
lock
adc
jl
sub
sbb
inc
inc
cmp
daa
jl
xorl
adc
pop
aam
dec
cmp
mov
flds
mov
fsubr
sti
inc
sbb
sbb
mov
enter
adc
mov
jle
sub
mov
cmpsb
in
xchg
std
sub
popl
fsubl
xor
mov
push
rcrl
and
or
xchg
andl
in
adc
nop
jl
cmp
pop
dec
pop
jl
loope
pop
xor
cmp
cmp
or
mov
add
in
sbb
sbbl
xchg
dec
push
or
bound
mov
aam
jg
adc
or
cmovno
mov
xchg
jle
inc
sbb
mov
loope
pop
mov
fstps
clc
dec
xor
mov
jo
and
adc
xor
rcrl
push
pop
test
imul
ficoml
js
dec
loop
pop
push
mov
and
int
movb
testl
adc
je
aaa
clc
sub
pop
pop
and
xor
push
mov
pop
cld
xchg
jle
mov
mov
add
testb
adc
inc
xorl
adc
sbb
mov
xor
push
repnz
lods
scas
pop
add
pop
adc
movsl
scas
push
mov
push
sarb
mov
jg
xchg
xor
cmp
push
push
daa
dec
jecxz
mov
addr16
sub
mov
mov
and
inc
sub
cmp
mov
and
or
repnz
dec
mov
xchg
pop
jae
pop
jb
push
jb
sub
hlt
xchg
xor
xchg
imul
pop
cmp
add
sbb
leave
dec
or
sbb
and
and
cmp
or
aas
adc
shrl
pop
cltd
fiaddl
inc
or
leave
cmp
add
sbb
jl
sahf
or
inc
jl
sbb
sbb
adc
push
cmp
adc
nop
addr16
out
inc
and
movsb
inc
push
cltd
sbb
add
and
bndstx
push
xchg
push
mov
fists
or
mov
cmp
xorb
sbb
mov
push
lock
daa
cmpsl
add
sahf
orb
add
ja
mov
sbb
mov
inc
shrb
cmp
or
cltd
js
hlt
push
dec
nop
inc
imul
stos
mov
dec
sti
adc
loope
pop
adcl
mov
shll
mov
add
dec
push
aad
adc
sbb
test
fists
ljmp
push
jp
js
es
jae
pushf
inc
idiv
data16
lea
pop
pushf
lea
incl
addr16
fidivs
or
sarl
pop
test
sub
cmpl
and
push
rcl
cmp
repz
add
jmp
jo
xchg
cmp
test
sbb
imul
insb
sub
inc
cmp
insb
adc
test
and
inc
imul
out
pop
dec
ds
cli
cwtl
cmc
mov
cmp
and
pop
and
fmull
outsb
into
push
pop
xchg
or
fbld
mov
loope
mov
pop
add
out
push
fsubs
add
or
push
push
push
sbb
jle
sbb
faddp
cmp
adc
mov
dec
jns
mov
or
pop
xor
jae
in
push
inc
pop
aam
jmp
cmp
mov
jl
mov
xlat
and
jge
add
jge
push
mov
int3
fidivs
in
scas
std
ljmp
enter
xor
or
or
repz
push
in
adc
adcb
adc
jb
inc
pop
mov
inc
add
aas
adc
shlb
or
movsl
addr16
lods
je
out
dec
or
xor
js
adc
sub
cltd
shlb
push
unpckhps
lahf
sbb
lahf
nop
cmp
dec
pop
jmp
rclb
sbb
mov
pop
push
sbb
push
mov
dec
leave
mov
dec
add
xor
and
cmp
mov
ss
fiadds
ret
je
inc
shlb
jo
call
dec
mov
dec
or
xchg
out
mov
sub
dec
test
inc
mov
test
dec
sarb
or
call
or
and
fsubrp
loopne
dec
mov
push
ljmp
add
xchg
pushf
rolb
mov
aas
xor
push
js
dec
mov
xor
push
pop
jnp
add
push
inc
inc
push
mov
xor
loope
sub
pop
push
fsubrs
push
dec
rorl
test
xchg
dec
jecxz
js
inc
jnp
add
xor
dec
push
push
or
shl
je
and
cmpsb
mov
sbb
sub
lds
outsl
jno
pop
mov
adc
sbb
xchg
xchg
sub
push
push
in
cs
and
dec
mov
imul
cmp
shll
repz
jnp
xorb
bound
or
cmp
inc
and
or
xor
cmp
jo
aas
pusha
mov
cwtl
pop
pop
out
jge
push
jne
enter
fsubrs
out
popa
jb
dec
dec
lea
push
ret
pop
push
insl
insb
shll
mov
sbb
shll
test
mov
mov
out
inc
inc
pushf
xor
xchg
mov
test
xchg
push
jae
dec
cmp
mov
jecxz
movb
in
xchg
add
inc
adc
adc
sarb
out
sub
xor
js
divl
sub
mov
dec
aam
jp
cmp
xchg
das
inc
mov
sub
int3
inc
out
aam
or
call
inc
cmp
push
cmp
or
push
and
int3
in
out
sub
addb
sbb
stc
cs
or
rorb
in
add
add
insb
fs
push
mov
sbb
cs
inc
sbbb
in
xor
dec
push
stc
pop
movsl
and
xor
cmpsb
and
les
movsl
bts
lods
xchg
sbb
sub
jno
popa
push
insb
add
dec
add
xor
mov
and
cmc
outsb
sub
adc
lock
pop
nop
sti
adc
cmpl
rolb
out
and
mov
testl
jle
mov
sbb
mov
push
adc
lods
clc
cmp
clc
in
dec
inc
in
mov
jge
inc
adc
clc
mov
add
mov
mov
mov
and
or
cwtl
fs
xor
add
dec
mov
dec
pushf
cmpsb
imul
insb
loope
and
push
sbb
gs
mov
push
inc
sub
jp
in
inc
push
or
iret
loope
fldenv
pop
cmpsb
jl
test
or
fs
cmp
pop
xor
cwtl
adcl
cmp
and
or
clc
jge
push
xor
add
push
inc
cltd
mov
out
jne
jno
xabort
jge
test
clc
mov
xchg
jle
push
rol
jo
fnsave
ret
ret
mov
inc
clc
cmpb
push
loopne
inc
mov
sbb
fmul
xchg
sbb
xchg
mov
shrl
inc
shl
adcb
sub
loopne
in
fildll
push
adc
jo
and
mov
jo
es
sbb
sub
jle
jg
and
or
fdivs
insl
push
or
jo
adc
js
pop
push
and
pop
test
mov
jmp
push
inc
inc
xchg
inc
mov
test
repz
cmpsl
pop
fmulp
inc
bound
push
aaa
popa
cmpsl
data16
iret
ret
mov
xor
sbb
sub
sar
andb
adc
arpl
cmp
aaa
nop
xchg
jbe
fwait
xchg
push
loop
mov
arpl
xlat
push
mov
loope
test
or
push
cmp
je
or
jnp
lds
lahf
xor
dec
js
add
xor
rcrl
addb
or
xchg
push
xorl
jns
xchg
sahf
push
lea
adc
push
push
push
sbb
push
pop
sti
mov
and
push
push
inc
filds
mov
or
stos
mov
inc
je
shrb
sarb
sub
or
rcrb
fnstenv
and
push
mov
cmp
push
mull
push
fidivl
daa
loop
pop
bound
fcoms
mov
daa
rolb
mov
and
fimull
loop
pop
cmp
subl
orl
or
aad
in
push
or
dec
jno
cmp
push
xchg
or
pop
sbb
mov
mov
jo
aas
jle
fidivl
aam
push
mov
mov
test
add
xor
adc
dec
shll
nop
cmpsb
js
pop
sbb
enter
inc
push
dec
ret
hlt
push
mov
add
push
push
add
or
add
and
fdivrs
xchg
sahf
cvtpi2ps
fdivl
rcrl
push
add
mov
xchg
add
or
mov
dec
add
cmp
js
lds
push
push
int
mov
movb
mov
pop
ret
pop
adc
xchg
jne
hlt
mov
sub
sbb
cmp
jl
cmp
mov
or
sub
add
pop
jns
aaa
or
xchg
mov
add
sarb
leave
xor
xchg
test
mov
push
jmp
mov
pop
pop
add
fs
aas
push
out
inc
and
sub
nop
dec
cmp
imul
imul
dec
bound
add
jb
jg
xchg
jne
orb
jl
sahf
das
test
push
imul
push
aad
fs
mov
int3
add
mov
in
testl
pop
subb
mov
stc
cmp
inc
sbb
gs
das
jnp
and
call
mov
or
push
enter
push
insb
jecxz
jbe
or
mov
fucomi
pop
mov
inc
ret
fildll
or
cld
shr
jmp
inc
rcl
popf
in
or
data16
std
mov
push
pusha
cmp
jge
cs
nop
ficoml
push
xchg
pusha
jmp
adc
dec
jl
lea
fcoml
lcall
ret
pop
inc
jnp
mov
scas
popa
mov
repnz
mov
pusha
fwait
movsb
pop
js
mov
xchg
jge
adcl
add
push
push
aaa
movsb
lds
pop
ror
dec
push
test
xchg
push
repnz
hlt
lds
fisttpl
mov
es
int
ds
or
in
clc
mov
ja
sub
fdivrs
inc
push
lea
outsl
cmp
mov
leave
cli
ds
decb
cmp
ljmp
jo
cmp
imul
loop
rcrl
fldenv
dec
mov
rclb
jae
nop
insb
test
mov
inc
hlt
ret
mov
and
add
fsts
adc
push
add
and
jmp
loop
ljmp
add
lahf
pop
and
jmp
xchg
int
movsl
leave
inc
push
ret
xor
call
pop
push
mov
push
nop
loope
pushf
mov
movsl
push
jp
test
fs
pop
daa
adc
adc
sbb
dec
add
inc
iret
add
insb
pusha
orl
inc
adc
rolb
xchg
push
mov
add
push
mov
jne
rolb
cltd
jne
arpl
pop
pop
ret
loopne
ds
pop
push
adc
push
xchg
je
lahf
cmp
push
cltd
clc
cltd
mov
stos
inc
es
jns
jne
sub
les
push
jnp
pop
mov
sbb
subl
adc
sti
push
inc
out
inc
sarb
mov
push
icebp
sub
pop
push
xor
mov
pop
imul
push
ja
fidivrs
movsb
xchg
js
or
shlb
in
ret
es
hlt
dec
std
test
and
es
lods
cmc
adcl
mul
pop
dec
repnz
adc
cltd
fs
xor
fs
dec
adc
xor
xor
pop
je
lea
sub
fs
fistpl
stc
mov
cltd
fs
sbb
xchg
dec
inc
push
inc
inc
sbb
sbb
jbe
mov
inc
addr16
inc
je
xchg
add
sbb
mov
cs
lret
xor
cltd
in
jb
jae
add
sbb
js
xchg
dec
les
jmp
addl
cld
and
pop
mov
rorb
add
mov
aam
sti
je
push
add
jmp
sub
rcl
cmp
mov
or
std
inc
mov
xor
mov
inc
dec
sbb
push
adc
mov
xor
push
call
loopne
mov
dec
pop
inc
repnz
jg
loopew
add
and
mov
pop
outsb
dec
sub
or
pop
push
popa
dec
cltd
sub
mov
mov
sub
add
sub
and
sub
mov
xlat
mov
dec
push
cmp
push
frstor
rclb
jecxz
lea
sub
xchg
imul
pop
imul
out
es
jecxz
pop
or
mov
sbb
jl
mov
lods
pusha
xchg
js
and
adc
mov
xor
movsb
sbb
push
js
popa
add
pop
push
out
add
iret
dec
call
sbb
adc
les
inc
mov
push
sarb
repz
xor
call
lret
stos
adc
sub
sbb
inc
push
cmp
sub
mov
repnz
lcall
mov
ljmp
add
scas
push
sub
hlt
xor
sbb
lods
mov
jmp
sbb
push
xchg
mov
add
fwait
or
and
pop
or
and
mov
ret
adc
cmp
mov
loop
dec
stos
push
and
push
mov
xchg
pop
sub
inc
clc
dec
xor
ret
les
xorl
push
sub
dec
pop
and
rcll
dec
add
cmpl
push
dec
je
and
adc
call
push
sub
jbe
mov
and
lea
and
arpl
fdivs
or
or
xor
xor
fs
xchg
ret
or
mov
ret
int
push
jmp
and
dec
xchg
inc
cmpsl
push
call
shrl
or
mov
lds
mov
mov
daa
or
ffreep
imul
xchg
fsubrl
je
dec
pop
pop
xor
push
mov
cmp
adc
mov
popa
aad
or
lret
pushw
mov
js
xchg
or
push
pop
or
insb
add
adc
fxch
in
insl
das
sbb
sub
pop
bound
cmp
xsha256
cmpsb
xlat
movsl
cmpsb
jmp
pop
cmp
xchg
dec
imul
cmp
cmp
pop
and
mov
pop
or
adc
cmp
adc
xchg
leave
ret
es
jg
cli
adc
jmp
dec
push
inc
lcall
add
jge
sub
sti
add
mov
pop
xor
xchg
mov
mov
xlat
and
pop
or
or
jo
rcr
dec
adc
rorl
imul
sbb
sub
pop
and
jne
cmp
outsb
push
xor
push
ret
sbb
sbb
test
scas
add
xchg
aas
jecxz
faddl
lea
mov
sub
mov
ret
xchg
shrb
inc
add
and
and
clc
mov
je
mov
mov
bound
fadds
subb
cwtl
adcl
outsl
insb
and
mov
push
call
mov
loopne
shlb
test
dec
push
adc
add
and
test
sbb
mov
xor
mov
push
pop
nop
jmp
test
lea
call
shll
leave
insl
mov
xor
dec
aad
loopne
lret
pusha
cltd
in
fiaddl
dec
enter
push
push
aam
add
mov
sbb
testl
xchg
pop
cmpsb
inc
add
cmp
add
lods
or
mov
insb
sahf
nop
or
sbb
inc
mov
fnstenv
cmp
mov
or
roll
je
sbb
inc
mov
adc
and
mov
dec
dec
push
movl
movsb
add
pusha
push
sbb
lcall
and
dec
das
dec
pop
arpl
xlat
jo
jl
mov
add
sbb
mov
into
pop
sbb
add
inc
imul
sub
popf
add
inc
inc
pop
adc
popa
add
jl
inc
bound
pusha
push
pushf
out
sub
les
addl
push
test
mov
jg
cmpsb
test
jmp
push
add
pop
xorl
push
push
dec
jmp
xor
sti
jp
loope
movsb
xor
push
mov
mov
cs
test
rolb
cmp
in
sbb
test
mov
fucomp
push
bswap
dec
int3
out
enter
enter
cmp
int
inc
or
cli
mov
cmpb
adc
add
pop
push
movsl
pop
xchg
rdpmc
popf
sahf
cwtl
pop
pop
mov
scas
add
mov
je
lods
adc
test
lea
dec
fwait
or
inc
push
xorl
push
dec
inc
loop
shrb
je
popa
or
push
lods
or
enter
pop
nop
lahf
lock
xchg
or
imul
push
mov
adc
mov
dec
out
jo
lods
out
imul
push
loop
jle
inc
cld
cltd
add
fimuls
dec
cmp
cmp
roll
xchg
or
pop
rcl
jl
inc
sbb
lcall
je
pop
stos
push
inc
je
jae
pop
mov
mov
mov
xchg
addl
xor
add
mov
pop
lock
lcall
ret
out
push
jecxz
sub
sarb
dec
clc
push
mov
sub
cmp
dec
inc
mov
aaa
lret
aaa
movsl
adc
imull
clc
inc
pop
ret
std
cmp
or
xor
xchg
cmp
cmp
adc
cmp
jmp
ret
sbb
add
and
add
cwtl
insb
xchg
push
ljmp
dec
mov
sub
push
cmp
xor
jecxz
out
or
adc
sub
mov
ret
hlt
jns
sbb
mov
fldpi
jge
pop
sub
adc
fldcw
adc
and
aad
xor
je
push
mov
jecxz
sbb
movsl
loope
xchg
lret
lret
fimull
cmp
cmpsl
dec
loope
and
outsb
cmp
push
sbb
mov
xchg
or
cmp
call
push
outsb
cmp
aad
clc
test
cltd
repnz
ljmp
es
add
adc
mov
jl
jmp
jle
push
and
dec
xor
mov
adc
fisubs
add
dec
mov
sub
orb
and
fwait
inc
test
scas
mov
add
adc
inc
sub
rorb
push
xchg
inc
xchg
inc
in
ja
cmp
andb
cmp
andb
pop
inc
loope
pop
jg
xchg
mov
fcmovnu
cmp
push
cmp
pop
es
fcoms
test
aas
sbb
push
mov
loop
add
int
jno
lea
adc
sbb
inc
adc
and
add
dec
xchg
add
adc
dec
pop
in
fadds
mov
inc
mov
ficompl
adc
adc
iret
movsl
adc
inc
inc
inc
add
sbb
jns
sbb
cs
stos
pop
mov
dec
push
and
and
test
dec
xor
leave
sbb
cli
dec
repnz
mov
and
and
inc
btc
test
mov
pop
adc
lcall
fxch
ret
push
mov
adc
js
mov
jmp
in
dec
mov
call
enter
les
xchg
stos
ret
push
insb
sbb
int
negb
dec
add
test
loopne
lock
adc
sbb
push
test
push
push
out
or
pop
xor
out
scas
fidivrs
cmp
jmp
or
shrl
sub
dec
push
and
add
aas
clc
sbb
das
mov
and
pop
sub
mov
push
xlat
mov
sub
push
lock
sub
xorl
stos
or
repz
add
xchg
xor
jo
jmp
dec
pop
dec
cmp
rcll
cld
dec
les
add
fisubrs
je
mov
adc
popa
xor
popa
and
jl
lods
and
jge
xchg
and
pusha
xchg
lods
icebp
xchg
sbb
add
pop
mov
mov
je
cmc
sub
and
adc
or
pop
xorb
sbb
inc
or
cmp
add
xchg
and
sbb
div
cwtl
test
sbb
aaa
lea
nop
rclb
loopne
push
cmovo
push
in
push
mov
les
in
gs
dec
dec
jmp
sbb
push
es
sub
or
popa
or
roll
jge
cmpl
repnz
and
rcll
je
je
adc
icebp
sub
add
add
movsl
mov
and
lds
movsb
fistpll
jmp
mov
mov
fcoml
inc
ret
push
sbb
sti
movsb
fstp
arpl
pop
dec
mov
xchg
push
test
or
pop
lock
or
dec
sub
cmc
loope
fadds
add
cmpsl
and
fcoml
int
ds
test
inc
adc
cmp
jmp
lock
xlat
frstor
jl
lods
sarl
xchg
jo
out
ficoms
mov
pop
add
add
push
or
sarl
decl
jne
mov
mov
add
mov
push
sbb
adc
test
or
add
xchg
and
imul
pop
adc
insl
jno
add
push
sub
dec
adc
xlat
mov
insb
inc
sub
andb
aaa
mov
sbb
inc
inc
mov
cmovg
js
rorl
ds
jb
push
fsubrl
lret
lret
mov
xlat
sahf
push
into
push
lds
jl
fcoms
cmp
lret
cwtl
pushf
cmp
adc
insb
adcl
fimull
add
jb
sbb
cmp
jae
fwait
push
les
js
push
dec
or
sub
adc
pushl
and
cwtl
mov
fsubl
jae
call
roll
js
or
mov
mov
jae
cli
loope
pop
pop
testb
mov
movsl
and
jmp
xchg
lock
aam
cmp
movsl
or
push
cmp
repz
es
mov
mov
sbb
ror
rcrb
insb
jb
or
pop
mov
movsl
mov
xchg
mov
push
or
push
adc
mov
stos
sbb
or
and
test
sub
sub
xlat
les
jmp
or
lcall
adc
xor
sub
and
pusha
sarl
jo
mov
xor
popa
xor
les
sarl
dec
sub
or
xor
mov
daa
and
fidivl
push
hlt
xchg
aad
jo
sub
movsl
ucomiss
pop
fnstsw
mov
pop
fcomp
xor
ds
push
fcmovb
pop
test
jecxz
xor
add
jl
push
xlat
jns
add
mov
call
jl
test
aad
push
lods
lds
add
mov
fdivs
inc
mov
or
jb
sbb
aaa
mov
or
push
and
push
push
add
pop
sub
test
lds
mov
inc
cmp
fs
int
pop
adc
pop
orb
adc
mov
mov
aas
and
test
mov
mov
inc
test
add
add
sbb
lock
movsb
sbb
sbb
push
sub
daa
sbb
fmul
add
bound
stos
bound
loopne
push
mov
fildl
jo
fdivr
jo
sbb
mov
add
mov
stos
sub
shll
insb
out
xchg
mov
inc
cs
jne
loopne
mov
mov
sbb
add
mov
push
subl
xchg
pop
jl
ficompl
enter
add
test
xor
push
bound
xlat
int3
outsl
imul
shlb
or
xor
push
outsb
and
or
inc
dec
mov
addl
dec
iret
push
or
rcl
pop
rol
mov
inc
faddl
cmpsb
or
pop
xchg
mulb
arpl
test
popa
pop
gs
lock
and
and
sbb
adc
dec
pop
loopne
dec
dec
sbb
into
or
sub
arpl
ret
aad
adc
mov
jae
int3
aas
idivl
and
loop
mov
cld
pop
cld
push
cmc
and
test
xchg
cs
dec
rcll
ret
adc
or
nop
inc
cmp
stc
push
in
push
push
mov
sbb
and
xor
faddl
test
test
sbb
jo
or
adc
rorb
xchg
mov
inc
popf
adcb
jbe
ss
jnp
loope
inc
in
out
inc
push
push
xor
adc
bound
or
out
dec
adc
jg
mov
or
ljmp
sbb
push
xchg
sahf
push
dec
ret
sbb
inc
popf
outsb
cwtl
inc
xor
imul
or
pop
jp
inc
add
inc
fcompl
sbb
in
call
mov
aam
pop
sbb
dec
out
rolb
jp
push
jo
fldl
xchg
les
or
sbb
mov
add
add
loope
je
and
and
dec
push
sbb
mov
popa
or
dec
in
push
push
or
dec
mov
fcomps
inc
mov
outsl
jns
cs
and
pop
and
jmp
push
and
adc
in
xor
or
mov
mov
jb
dec
jmp
xchg
mov
rdtsc
cs
push
jge
cmpsl
stos
or
dec
xchg
push
add
cmp
sbb
push
jle
dec
cld
inc
add
adc
out
add
test
inc
sub
and
and
test
adc
pop
mov
mov
out
xchg
mov
pop
aam
push
arpl
adc
insl
aas
add
pop
or
sub
cmp
adc
jl
std
add
push
or
pop
push
adc
out
mov
lock
jne
xor
cmc
test
cmpl
ja
adc
cltd
pop
inc
lods
add
imul
call
add
inc
sub
pusha
sub
sub
popf
adc
add
jae
push
loope
mov
cmp
mov
es
dec
and
addr16
icebp
and
shrl
jl
cmp
add
pushf
jge
dec
mov
pop
xchg
push
les
adc
addb
lock
shll
in
loopne
cmp
push
add
leave
xor
fisttpll
mov
pop
fbstp
or
mov
pop
fsubr
lea
sbb
add
movsb
roll
sub
mov
shll
leave
addb
add
sti
and
inc
jb
dec
xor
and
xor
std
and
daa
fwait
es
sub
je
and
fwait
fwait
inc
and
je
inc
jne
mov
lods
adc
jb
and
sbb
pusha
mov
add
scas
dec
pop
ret
pop
inc
jnp
rcl
sbb
jl
fsubl
or
orb
and
cmp
inc
les
ret
dec
sub
dec
dec
xchg
and
imul
sub
sbb
lret
cld
or
add
sahf
aaa
push
or
push
rolb
xchg
lods
xor
movups
and
jle
mov
cld
pop
inc
sub
in
mov
aaa
loop
adc
jne
and
sub
dec
ret
das
adc
add
mov
mov
xor
add
xor
pop
and
popf
mov
fcompl
push
nop
andl
cwtl
shl
and
clc
das
and
jns
mov
jmp
inc
cmp
xchg
push
jmp
das
je
outsl
test
mov
push
shl
jbe
sbb
je
and
or
popa
inc
dec
fcoms
or
mov
loopne
inc
dec
scas
jne
decb
or
cmp
dec
dec
adc
scas
push
push
cmp
fnstsw
push
push
inc
xchg
mov
pop
aad
test
hlt
or
sti
fiadds
jp
push
mov
push
and
push
mov
dec
pusha
pop
add
pop
or
or
aam
or
or
or
sub
mov
sbbb
inc
xchg
inc
adc
sub
push
jl
hlt
lods
cmp
fsubs
xchg
lret
fnstsw
mov
adc
inc
in
faddp
je
pop
pop
inc
test
adc
mov
cmpsb
sbb
dec
sbb
callw
and
sbb
and
dec
cmp
jle
cs
add
pop
mov
cmpsl
adc
cmp
pop
jae
xor
adc
push
mov
or
sbb
fsubl
jmp
aam
or
aam
nop
shrb
lea
popa
mov
cmp
xchg
mov
jge
cmp
mov
jge
cltd
dec
loop
out
sub
add
pop
cmp
in
add
xorl
dec
xchg
jo
les
adc
test
mov
je
mov
cltd
mov
testl
push
push
lds
or
mov
dec
pusha
add
mov
and
scas
dec
lret
popa
mov
movsl
cmp
pop
mov
jg
push
cmpsl
add
push
sub
sbb
pop
notb
and
sbb
out
adc
shrb
std
jecxz
sub
arpl
adc
mov
loopne
sahf
jge
mov
mov
call
add
dec
push
in
pop
jecxz
out
cmp
popa
repz
pusha
pop
pop
xchg
and
push
dec
test
dec
add
push
push
test
and
or
add
push
push
xorb
lock
testb
and
sarb
mov
icebp
add
xorb
mov
or
roll
pop
gs
mov
sbb
jo
mov
xor
xor
rcrb
nop
out
xchg
mov
sub
inc
add
push
dec
xchg
add
imul
pop
loopne
dec
pop
imul
add
dec
cmp
jne
gs
or
aas
xor
pop
xor
push
cli
fimull
mov
divb
push
sub
icebp
jne
lods
xlat
jge
insb
lea
sub
fistl
dec
jmp
lea
sbb
or
adc
rorb
jge
ret
or
xchg
pop
rcr
ret
jge
add
inc
jo
pop
call
lea
sbb
dec
push
jg
push
cs
jbe
xor
push
test
shll
pop
aaa
push
sti
sahf
clc
out
ficomps
jge
neg
pop
add
jp
inc
dec
or
insb
scas
xor
lods
inc
dec
mov
jmp
xchg
jae
insb
insb
test
adc
sarl
in
inc
or
xorb
xor
add
ret
and
dec
rcrb
xor
aad
loopne
add
enter
push
sub
push
xchg
push
arpl
adc
xor
cmp
push
sbb
pop
pop
data16
sbb
aam
mov
hlt
shlb
cmp
or
xchg
jno
inc
mov
cmc
into
add
sbb
ss
jge
mov
jge
call
das
repnz
andb
sbb
scas
roll
clc
xchg
sub
xchg
mov
jo
mov
adc
adc
mov
adc
add
out
jl
nop
lcall
inc
mov
adcb
test
imul
dec
ficomps
cltd
cmp
xchg
in
sbb
or
fists
aas
add
dec
pusha
test
add
or
movsl
or
mov
les
sahf
fs
fwait
aaa
mov
pop
jne
mov
roll
sbb
fwait
loope
in
and
fnsave
addr16
xchg
push
cmp
ret
pop
push
and
jb
movb
das
loop
mov
mov
sar
in
mov
push
jge
push
mov
xchg
test
jo
add
mov
xchg
xchg
jle
mov
and
xor
shll
push
rclb
aad
pop
fwait
les
shll
mov
cmp
adc
and
or
ljmp
popf
popf
xchg
jecxz
mov
je
incb
je
jmp
mov
aas
test
jb
inc
jne
cmp
leavew
and
lods
sbb
pop
sbb
xchg
dec
test
sub
cmc
and
xor
adc
mov
mov
mov
cmp
inc
orb
outsb
popa
cmp
xchg
lahf
mov
mov
xchg
cs
dec
and
sub
or
sub
dec
add
mov
cs
jg
cld
out
fcoms
lods
adc
xchg
arpl
mov
or
mov
rcl
imul
and
or
enter
mov
sbb
mov
pop
es
mov
pop
pop
test
mov
jle
insl
stc
jne
insb
dec
sbb
lsl
cmp
nop
pusha
addb
jp
popl
pop
out
addb
pop
inc
or
cmp
int3
inc
mov
aaa
xchg
and
sbb
adc
or
push
adc
push
mov
or
mov
mov
add
add
jl
or
cwtl
pop
movsb
xor
pushf
inc
or
push
test
mov
mov
iret
xchg
xchg
xor
in
or
add
and
aas
test
push
adc
jmp
mov
push
dec
imul
pop
sub
sbb
pop
popa
imul
inc
jl
test
push
dec
add
aad
out
mov
neg
push
push
cltd
mov
mov
sub
pop
jmp
jp
int3
rolb
orb
enter
push
ret
ret
mov
imul
or
dec
xor
pop
pop
dec
je
push
rorl
sbb
pop
and
or
scas
loopne
and
add
popa
and
push
sbb
push
enter
cmpsl
xor
addl
or
xchg
add
adc
push
cmp
push
je
and
loop
jne
ret
jmp
sbb
push
in
xor
mov
and
daa
pop
mov
shrb
push
aad
popa
jae
or
ret
rcll
dec
lea
pushl
dec
loope
push
or
add
pop
fxch
xorb
aam
inc
xchg
xchg
fists
lods
fldl
mov
push
add
pop
xchg
jle
pop
push
lahf
sbb
lret
adc
inc
dec
fsin
cwtl
dec
sbb
js
gs
push
add
mov
push
push
and
and
pop
aaa
adc
jge
push
sbb
pop
int
mov
mov
fucomip
aaa
add
add
and
cmp
fwait
xlat
or
or
mov
push
fs
pop
sub
xlat
nop
add
cmp
lret
cmovp
rclb
mov
cli
fsts
mov
ret
or
dec
out
scas
je
cmpsb
push
and
test
lods
push
pop
dec
andb
mov
or
push
loopne
jmp
cwtl
pop
push
adc
lods
adc
inc
or
cmc
jg
test
mov
pushf
scas
bndldx
dec
xlat
lods
sbb
cmp
mov
jmp
and
or
call
sub
inc
pop
xchg
test
lods
lahf
lea
inc
imul
addl
xor
incl
stos
ret
xorb
fistps
sbb
fcoms
pop
pop
movsl
out
and
shl
or
movl
adc
scas
popa
scas
xor
add
cs
mov
jnp
rcrl
pop
push
shll
es
fcmovnb
orl
orl
add
dec
xlat
insb
cmpsb
add
notb
and
add
xchg
lea
jns
or
push
in
fs
movsl
sbb
push
pop
leave
pop
bound
push
jnp
ds
pop
jne
push
mov
push
je
dec
insl
aaa
roll
push
xor
sbb
repnz
jns
fstps
inc
push
pop
dec
dec
test
push
and
loope
hlt
mov
or
sub
or
call
nop
mov
fisubs
lahf
aam
cmp
and
in
and
test
imul
pushf
cmpsb
inc
xchg
in
push
fwait
sub
mov
sub
fs
sbb
sub
rcrb
inc
int
lock
push
push
hlt
repnz
int
sub
ret
pop
dec
jecxz
insb
adc
imul
es
jmp
mov
adc
xchg
pop
push
or
and
and
xchg
dec
lods
xor
push
cmp
xchg
repnz
shlb
xor
cmp
inc
stos
fisubl
popa
int3
xchg
addr16
inc
test
ja
adc
ret
xchg
jg
fs
jo
mov
dec
jne
jno
sub
loope
sbb
lret
inc
gs
add
repnz
add
sbb
pop
lret
dec
mov
xor
int3
mov
pop
pop
xchg
test
xchg
sub
mov
cmp
or
nop
int3
loopne
add
jne
mov
fcom
sub
mov
xor
sbb
insb
push
push
aaa
and
and
add
and
jge
jbe
push
pop
jp
and
or
adc
or
pop
in
in
iret
and
inc
es
aaa
add
sahf
int3
and
rolb
cmp
insl
adc
push
lea
jl
les
ljmp
jecxz
dec
add
and
or
push
aad
lods
and
jae
inc
shrb
jge
cli
mov
inc
cmp
mov
int
es
push
fsubrs
pop
and
xor
mov
int
adc
inc
ret
add
adc
das
push
mov
cmp
jno
inc
xchg
cmpsb
xchg
cmp
nop
add
pop
xchg
movsb
insb
pop
push
inc
xchg
mov
ss
aam
rorl
sbb
push
das
lret
add
mov
dec
xchg
cli
mov
lcall
push
icebp
test
or
adc
ret
ret
test
and
sti
out
dec
sbb
jns
xchg
add
popf
nop
xchg
ret
mov
jae
adc
cs
and
fs
mov
adc
insl
test
sbb
dec
popa
inc
nop
rorl
out
or
mov
add
add
mov
jge
add
xchg
jnp
add
dec
sub
test
mov
lret
andb
movsb
faddp
cmp
pushf
mov
pop
dec
add
insl
mov
add
std
mov
sub
xchg
jl
movsl
or
dec
push
push
imul
adc
je
or
mov
je
add
dec
cmp
pop
ficomps
sub
add
mov
sbb
imul
adc
scas
pop
or
sub
imul
pusha
push
push
sbb
jo
and
sub
xor
lret
pop
dec
fisubrs
loope
push
gs
stos
add
je
push
adc
je
adc
push
nop
dec
sahf
push
rol
lods
xchg
pop
and
insb
rcrb
sahf
or
xorl
push
roll
inc
dec
rcll
sbb
adc
outsb
loop
add
jle
lcall
push
movsl
fdivl
lods
add
sbb
lock
ds
lret
jp
fucom
pop
sub
lret
push
cmp
add
andb
addr16
dec
sub
not
adc
bound
sub
insb
xor
lea
idivb
adc
add
push
mov
dec
mov
add
shr
enter
inc
rolb
mov
mov
cmp
push
xchg
sub
loope
mov
mov
into
add
sbb
adc
lock
sbb
loope
mov
lds
push
sbbl
fmuls
lds
cltd
mov
repz
test
jno
mov
sbb
pop
fstps
jo
loope
cs
cmpsl
or
dec
aas
push
lcall
and
cmc
mov
xchg
rsqrtps
and
push
inc
xor
sbb
outsl
inc
sarl
mov
push
sbb
xchg
sbb
or
leave
repz
pop
int
inc
sbb
mov
add
int
add
xor
scas
sti
je
sbb
or
das
push
push
and
bound
outsb
pop
test
addr16
cmc
mov
mov
cmp
dec
add
pushf
rcrb
cld
imul
cmp
pushf
lock
jo
xor
cmp
jl
pop
dec
pop
add
push
mov
fisubs
das
mov
mov
cmp
out
sbb
cmp
dec
mov
and
out
add
data16
sbb
mov
sub
mov
push
xor
adc
adcl
dec
xchg
aas
data16
sti
je
lods
jmp
cmp
dec
shrb
cwtl
fbld
xchg
orb
and
dec
dec
and
movd
mov
jb
dec
inc
pop
movsb
mov
add
ret
inc
adc
inc
sub
push
outsb
mov
je
jge
adc
cmp
icebp
mov
out
mov
int
ss
repnz
pop
sbb
jne
adc
in
add
add
sahf
push
stc
pop
clc
or
or
or
in
jns
or
or
adc
xchg
addr16
xor
cmp
pop
icebp
and
and
jle
sbb
xor
pop
xor
jno
fdivrs
orb
or
xor
inc
sbb
add
sti
add
ss
mov
inc
inc
xchg
iret
mov
pop
adc
mov
pop
sbb
add
nop
xorl
cmpsb
repz
lea
inc
andl
ret
rcll
push
aam
lock
sub
mov
pop
cmpsb
sahf
jbe
pop
je
pop
or
xor
or
push
or
add
test
pop
add
pop
sbb
mov
pop
xor
or
add
mov
test
call
cmp
adc
dec
mov
shl
hlt
push
gs
jle
scas
rolb
xchg
pop
insl
call
mov
or
sbb
mov
pcmpeqb
or
and
push
in
inc
and
lea
xor
movsb
inc
xor
mov
or
pushl
aam
push
imul
data16
enter
jle
cmpl
ret
ja
jb
test
repz
mov
popf
inc
jo
xor
cmp
test
inc
out
incb
dec
xchg
add
add
or
or
inc
adc
mov
or
push
das
stc
add
lcall
jl
inc
mov
aas
mov
or
ljmp
push
sbb
arpl
subb
or
mov
inc
push
push
add
sub
and
mov
mov
inc
push
lcall
xor
xorl
lds
and
xchg
mov
and
fsubs
or
sbb
shlb
adc
adc
mov
jmp
or
or
cli
adc
add
je
test
mov
mov
xorb
or
andl
add
insb
adc
arpl
mov
jmp
lahf
push
shrb
inc
dec
adcb
add
into
mov
daa
xchg
or
jp
push
cld
jne
jmp
cmp
call
add
inc
lods
add
pop
adc
fcompl
adcb
cmp
push
mov
ficoml
cmp
call
add
aam
cld
stos
fwait
and
addr16
dec
and
call
push
push
push
cld
loope
or
or
dec
xor
push
pop
test
jno
mov
pop
or
ss
dec
dec
mov
mov
ss
cmc
xchg
and
sbb
addr16
in
mov
mov
add
sbb
add
and
adc
or
and
inc
enter
add
adcb
push
cld
push
mov
ret
and
push
shr
push
in
push
push
cwtl
jle
shlb
or
adc
sbb
mov
test
pushf
sbbb
adc
inc
sbb
adc
les
fidivs
xor
fcomps
push
fadd
dec
scas
dec
aam
call
or
cmp
stc
cs
jne
movsl
mov
lea
or
fbld
or
push
xchg
push
shll
mov
lock
or
cmp
sti
hlt
andl
push
pop
mov
mov
cmp
sub
or
insb
leave
inc
les
mov
movnti
jmp
adc
jae
aam
sbb
push
leave
dec
fsubr
sbb
pop
js
pop
pushf
jge
add
arpl
pushf
mov
adc
mov
mov
push
aas
cmp
mov
rep
xor
in
mov
push
inc
inc
push
or
je
loope
push
mov
jne
cld
push
or
movsl
dec
mov
xor
jnp
cmc
dec
fiadds
iret
data16
mov
add
jecxz
push
push
in
lods
mov
lea
push
fs
cmc
insb
repz
and
sub
pop
pushf
push
mov
int3
push
jo
pop
xor
or
rclb
insl
dec
push
jns
push
or
repnz
sub
jb
mov
fildll
jmp
mov
adc
les
jb
call
xchg
es
push
mov
js
fsubr
sbb
int
mov
in
pop
cmp
pushf
and
add
imul
sub
lods
das
std
cli
je
andb
pop
dec
jo
add
push
test
push
ret
xchg
adc
or
add
cmp
js,pt
mov
mov
dec
sub
inc
in
mov
scas
pop
mov
lea
pop
cmp
cmp
das
pop
mov
or
ud1
ja
pop
xchg
loop
xchg
scas
mov
cmp
loop
nop
roll
clc
lea
movl
cli
mov
js
and
rol
pop
adc
out
ss
add
add
jns
and
das
dec
popa
stos
nop
pop
xbegin
fldl
test
xor
mov
mov
insb
sub
stos
adc
xor
rcr
ficompl
adcb
dec
rcl
jecxz
movsb
push
add
inc
mov
je
adcl
push
push
cmp
and
mov
push
push
arpl
jno
jbe
mov
adc
cmp
inc
cwtl
pop
or
dec
mov
jp
inc
xor
test
or
rol
fdivp
insb
add
sub
jbe
or
sub
pop
cmp
mov
sbb
mov
lock
mov
pop
xor
sbb
leave
aam
or
je
inc
mov
das
jge
push
jle
clc
in
shr
shlb
mov
fnstsw
call
mov
pusha
pop
les
jmp
lcall
adc
inc
rcl
loope
shll
sub
pop
pop
mov
mov
fcomps
out
add
adc
add
inc
push
push
xor
inc
loopne
loope
inc
jmp
adc
push
xchg
jne
inc
dec
stos
int3
jne
mov
shlb
pushf
cmp
fcoms
aaa
jge
inc
mov
or
cmp
and
mov
adc
cmp
pop
or
mov
jae
and
cmpsb
fwait
les
inc
in
cmp
adc
add
fistl
stos
cmp
cs
nop
push
into
cwtl
lods
cltd
iret
test
mov
mov
pushf
das
inc
leave
sub
inc
or
mov
pusha
frstor
mov
daa
adc
jmp
das
js
daa
sarb
push
inc
dec
pop
out
push
dec
pop
jbe
inc
sbb
add
adc
mov
test
push
lret
mov
inc
out
xchg
mov
daa
add
adc
movsl
inc
fmuls
cmpl
imul
or
jmp
dec
inc
test
or
push
or
and
dec
lcall
add
fs
or
mov
dec
stc
adc
test
xor
mov
loope
clc
mov
pop
and
pop
pop
idivl
inc
mov
mov
subb
pushf
xchg
sbb
jo
sbb
or
sub
push
ret
or
fists
adcb
flds
jmp
jo
add
lea
mov
lea
add
cmp
sbb
and
pusha
inc
adcl
xchg
or
pop
pop
cmp
je
call
push
data16
push
jnp
int3
fsubl
fsubrs
mov
jno
add
or
pushf
xchg
sbb
lds
jbe
sbb
movsb
dec
or
dec
lock
cltd
popf
subb
push
movsb
fcmovnb
inc
mov
fwait
cmp
cmpsl
insb
enter
xlat
scas
add
cmp
mov
adc
cmp
je
pop
add
repz
inc
dec
push
xor
leave
mov
mov
cmp
jp
incl
or
call
or
inc
in
sbb
sbb
pop
or
xorb
adc
andl
pop
inc
add
xor
bound
inc
movb
cmp
add
test
sarl
cmp
aad
les
addl
and
out
pop
inc
push
roll
sbb
lahf
add
lret
xchg
and
idivl
ret
adc
ds
mov
push
dec
cmp
in
sub
mov
les
inc
das
lcall
fimull
push
xor
xchg
mov
cmp
sbb
mov
or
mov
or
inc
push
or
fwait
mov
icebp
mov
push
push
xlat
int
jmp
gs
inc
mov
adc
rorl
cmp
or
bound
mov
popa
pop
popa
sub
pop
inc
push
sub
pushf
push
cmpsb
aam
add
fmuls
jmp
xor
or
jne
in
sub
push
fbstp
or
cld
lock
sub
push
imul
add
fidivs
push
adc
dec
mull
push
cmpb
cmpsl
rclb
add
js
lea
ss
pop
jl
push
loope
fisttpll
dec
pushf
jp
orb
popf
enter
sbb
xchg
aaa
and
repnz
inc
xchg
push
fnstsw
add
or
mov
cmpsb
xchg
cmp
push
imul
inc
pop
adc
or
adc
xor
loop
mov
ret
push
enter
sub
xchg
and
stos
or
pop
push
lods
pop
sbb
int
loope
xchg
or
aad
movsb
add
aam
icebp
xchg
scas
dec
push
cmp
mov
sub
mov
fcmovnu
mov
jl
mov
fadds
mov
daa
inc
xchg
ljmp
xor
dec
mov
push
sub
adcb
mov
add
popf
add
jecxz
loopne
jne
lods
popa
inc
popl
aaa
add
push
mov
sbb
xor
xor
inc
mov
and
in
push
lea
in
and
aaa
movsl
imul
rclb
cmpsl
je
inc
fadd
sbb
in
push
xor
adc
pusha
call
faddl
in
dec
dec
mov
roll
add
into
iret
shrb
dec
ficoml
adcl
gs
dec
lret
movsl
rcll
mov
add
mov
jge
mov
outsl
inc
push
xchg
jge
hlt
js
xlat
or
xchg
out
push
and
xlat
add
jmp
lods
loopne
xor
dec
fcompl
and
and
stc
sbb
stos
or
sub
mov
add
add
and
mov
jge
pop
inc
cmp
add
scas
hlt
jne
int
test
pop
jle
add
push
and
push
or
in
out
sarl
decl
push
jo
pop
scas
mov
push
mov
je
mov
or
jo
inc
inc
fstl
push
call
adc
adc
mov
pusha
or
movb
xchg
sbb
push
mov
add
sbb
inc
adc
loopne
mov
mov
and
inc
rorb
and
xchg
push
sarl
pop
mov
cmp
and
jb
and
lods
mov
cmp
cmp
insl
sahf
push
sub
dec
idivb
cmp
cmp
add
inc
mov
rcrb
in
dec
ja
mov
inc
sub
lret
imul
or
cwtl
mov
push
arpl
pusha
mov
cs
xor
or
fldl
fcoml
sbb
ds
mov
cmpsb
andl
cli
pop
pop
add
or
jmp
mov
xchg
and
push
cli
sub
sbb
xor
fcom
push
into
lods
xor
fs
push
outsb
mov
cmp
and
cld
push
ja
xor
push
cmp
sbb
inc
jno
jb
in
cmp
add
and
push
sub
outsb
add
and
pop
lcall
xor
push
dec
iret
xchg
stc
adc
dec
sahf
out
sub
push
repz
jb
pushf
out
fwait
mov
inc
push
cmp
sahf
das
sub
imul
jne
testb
dec
sub
popf
test
add
pop
inc
push
jle
jno
lods
or
jl
inc
adc
ss
jl
dec
sbb
ret
inc
cltd
pop
xor
sub
sbb
aam
push
dec
mov
ror
push
push
iret
add
sbb
push
cmp
or
rorl
add
adc
or
es
sub
inc
das
int
and
cld
imul
sarb
lea
add
cmp
imul
scas
inc
dec
pushf
jle
inc
mov
test
xchg
fbld
push
test
je
cmp
push
insl
jmp
jne
or
in
jae
cmp
ret
std
ljmp
push
cmp
jb
cmp
ja
add
jnp
mov
inc
test
mov
loopne
xor
xlat
add
mov
fcmovb
jmp
push
fidivrl
ret
dec
mov
call
inc
and
xchg
inc
push
lahf
dec
fisubrs
js
fs
shl
sub
and
or
push
xor
pop
sbb
ds
data16
push
cs
sbbl
les
jl
xchg
sbb
jg
adc
outsl
jge
push
mov
sub
add
sbb
icebp
mov
mov
adcl
ret
jp
mov
clc
mov
ret
mov
fcomip
lret
cmp
jmp
mov
roll
push
setp
inc
or
xorb
fldl
dec
test
add
aad
adc
and
nop
push
movsl
and
fisubl
dec
and
or
fists
push
add
mull
lret
aam
bound
push
push
imul
es
push
mov
cmp
lahf
sub
notl
mov
cld
lea
movswl
movsb
jo
movsb
or
pop
daa
or
and
add
add
inc
rolb
xchg
aam
lahf
pop
insb
das
or
push
xor
gs
mov
into
mov
lock
xchg
pop
xor
pop
add
loop
lock
aam
pop
call
xchg
ficoml
and
cmp
push
test
dec
pop
pop
das
mov
dec
into
testl
stos
jo
jae
xchg
push
rorb
popa
pusha
data16
sub
mov
mov
fistpl
inc
mov
xlat
addb
push
ss
cmp
dec
xor
dec
inc
mov
push
arpl
and
das
js
ss
rol
daa
mov
mov
dec
sbb
adcb
mov
mov
call
daa
mov
ss
pop
cmp
frstor
or
or
shlb
and
and
sbb
add
cli
rcll
inc
jp
arpl
test
mov
dec
movl
jno
mov
je
and
jmp
rclb
and
cmp
pop
cmpb
insl
mov
jae
push
xchg
jb
sti
pop
pop
scas
dec
sub
mov
pop
jo
fbstp
and
sbb
xlat
or
and
jmp
cmp
sub
movsl
mov
xchg
sub
stos
push
mov
mov
cmp
adc
scas
push
lds
sbb
das
js
sbb
adc
xchg
loopne
dec
shlb
iret
add
push
lea
and
jp
sub
sub
add
add
xchg
mov
clc
or
jbe
push
cmp
into
sbb
or
and
sbb
sbb
xor
mov
add
lods
sarl
mov
inc
add
add
or
pop
fwait
push
in
inc
mov
sub
sub
adc
jno
push
mov
push
add
adc
fdivrs
cs
es
pop
add
adcl
pop
or
push
das
int3
pop
xchg
sbb
lahf
push
inc
lods
push
mov
fadd
dec
dec
pop
xchg
or
jecxz
scas
iret
xor
or
in
nop
sbb
inc
fwait
push
mov
insl
mov
xchg
dec
sub
lea
xor
mulb
ret
push
cmp
mov
push
and
sub
push
lods
adc
cmp
ljmp
fidivrl
aam
add
push
jg
sub
inc
andb
test
mov
shll
push
and
or
mov
push
push
bound
mov
cld
cli
sub
inc
sub
add
orl
or
push
cmp
pop
adc
xchg
or
adc
xchg
test
xchg
mov
ljmp
lcall
les
xchg
loope
push
pop
shl
sarl
fs
jne
cli
clc
push
add
push
fsubl
fsubrs
icebp
call
fcmovnb
mov
or
sub
xchg
jns
dec
gs
insb
push
rclb
or
inc
push
push
cs
jmp
jnp
jbe
inc
popa
cmpl
jge
dec
add
jp
mov
or
roll
and
adc
je
add
inc
adc
push
sub
sub
pop
inc
pop
fs
daa
adc
add
xor
stc
jb
ja
fmul
inc
rclb
mov
dec
inc
sbb
push
adc
sub
cld
ret
xor
push
loopne
cmpb
jbe
push
cmp
or
mov
add
adc
decb
je
test
out
mov
cmc
mov
test
lea
int3
aam
dec
cmc
push
into
dec
popa
lods
xchg
xchg
sub
pop
cmp
jbe
adc
inc
enter
pushf
sub
add
negb
out
jno
pop
inc
inc
lcall
add
fiaddl
inc
add
pushf
movsb
sahf
inc
pop
dec
sbb
inc
fadds
jmp
mov
adc
mov
add
mov
add
mov
sbb
bound
add
mov
sub
xor
and
aas
mov
xor
fld1
pop
lods
inc
loop
add
or
adc
push
and
aad
sarl
xor
inc
push
jmp
in
inc
popf
jne
mov
inc
movl
xor
inc
lods
sbb
xlat
fdiv
and
sbb
ret
xchg
sbb
dec
or
cmpsl
push
push
xor
test
pop
int
jns
sbb
ljmp
push
inc
je
jbe
cmpsl
sbb
mov
jbe
adc
stos
movsl
call
and
dec
push
adc
and
or
xchg
popa
mov
jmp
mov
inc
mov
jp
pusha
push
icebp
adc
iret
jge
xchg
dec
mov
inc
mov
adc
inc
and
cmc
sbb
popa
cmp
ljmp
add
xor
jae
dec
inc
clc
cli
push
adc
mov
sbb
push
fadds
pop
dec
ret
leave
je
inc
or
movsl
adc
push
xchg
pop
nop
push
sbb
mov
sbb
push
ret
push
mov
xchg
cli
pop
mov
mov
push
js
sbb
xlat
push
lea
xor
imul
xchg
jl
inc
inc
loopne
mov
and
or
xor
push
inc
push
ret
jbe
fiadds
sbb
bound
shrl
andb
jmp
xor
stos
dec
notl
rorl
inc
aaa
sbb
mov
cli
lret
movl
and
movsb
hlt
push
mov
adc
lods
push
andb
add
rorl
cmp
sbb
aas
push
mov
loope
mov
mov
jmp
pop
jo
mov
fiadds
inc
mov
push
in
inc
in
test
pop
cmp
popa
add
pop
jb
add
sbb
mov
inc
mov
in
or
rorb
lret
repz
xor
adc
fsubs
push
data16
add
or
xchg
in
push
std
push
jmp
mov
mov
mov
out
push
and
pop
daa
test
rorb
sbb
les
shll
push
lds
push
sbb
aas
inc
dec
dec
push
inc
insl
or
scas
or
cmp
mov
add
or
insl
cmp
je
adc
stos
ret
cmpsb
int
loope
add
xchg
mov
sbb
ret
or
add
dec
dec
sti
xchg
test
js
stos
push
decw
and
adc
fwait
mov
push
in
filds
dec
pop
xor
sbb
sub
push
out
mov
negb
es
insb
dec
and
inc
loopne
icebp
inc
jne
push
adc
mov
jge
popa
and
xchg
inc
sbb
push
imul
lahf
mov
mov
lds
jbe
mov
sub
xchg
xchg
incl
shlb
out
pop
cmp
mov
xor
and
shlb
push
push
daa
jbe
sbb
cmp
dec
inc
std
mov
nop
adc
push
push
loop
sub
cmc
inc
int3
mov
in
syscall
dec
adc
lds
add
adc
mov
xor
scas
adc
lret
push
sub
mov
lds
jb
xchg
hlt
add
push
in
fnstsw
cmp
jne
inc
push
jo
out
mov
dec
push
leave
lods
mov
daa
mov
lret
add
pop
push
mov
mov
nop
fstp
cs
cmp
shlb
adcl
add
and
outsl
add
das
nop
int
xchg
mov
rclb
jecxz
cmp
mov
sbb
mov
and
push
push
iret
lods
dec
inc
insb
imul
sub
cmp
imul
dec
xor
add
pop
arpl
xor
push
psubd
dec
inc
pop
dec
adc
adc
int
xchg
nop
lret
fimull
adc
push
xor
inc
cmpsb
push
push
pop
and
xor
mov
pop
xchg
push
sarl
xchg
xchg
lret
gs
sahf
push
and
pusha
sarb
jno
cltd
dec
sbb
call
test
movsb
dec
push
or
aam
inc
adc
dec
fwait
push
in
adc
mov
out
mov
or
lods
int
mov
fmull
das
popa
outsb
leave
sbb
lahf
ret
in
adc
inc
ds
gs
dec
add
push
jecxz
sub
cmovp
dec
cli
or
dec
pop
inc
sub
lods
movl
xchg
leave
cmp
hlt
pop
ds
sub
sub
or
lds
xchg
ucomiss
mov
sub
push
and
xchg
inc
add
adc
pusha
andl
mov
cltd
cmp
cmp
outsl
fs
mov
pop
sub
jo
nop
inc
mov
leave
add
lret
push
mov
push
lret
push
add
adc
mov
addl
jne
sbb
jb
lea
dec
mov
push
rcrb
and
outsb
xor
add
ret
rorl
push
lret
add
xchg
pop
clc
pop
lods
hlt
mov
mov
loope
jne
push
adc
je
pop
addr16
aas
cmp
mov
cmp
ds
push
xchg
push
push
and
sub
push
mov
lock
fimull
push
push
jne
cmp
inc
xchg
ss
in
gs
rorl
call
dec
mov
pusha
iret
xchg
adc
push
dec
push
xchg
ret
popa
stos
rol
mov
movsb
call
xchg
stos
sub
or
add
dec
rolb
cmp
xchg
mov
fsubl
adcl
test
push
mov
mov
mov
push
add
inc
or
dec
sbbb
jne
cmp
mov
mov
xchg
push
test
data16
and
inc
push
movsb
cmp
add
jp
icebp
loope
gs
cs
lea
jo
dec
mov
push
gs
adc
and
jle
mov
or
jne
dec
add
rorb
rcrb
jae
push
cwtl
in
pop
outsl
sub
pop
push
repnz
xchg
push
adc
push
sahf
scas
lahf
loop
icebp
pop
insl
pushl
xor
sahf
test
cmp
cwtl
xor
and
add
popa
cmp
dec
or
jne
jb
cmp
cmp
data16
outsl
icebp
sbb
or
inc
add
bound
mov
mov
nop
cmpl
and
sub
test
xor
pop
pop
adc
jne
mov
ror
sar
xor
loope
push
ror
dec
aad
mov
sbb
outsb
adc
mov
push
jge
subl
jo
mov
arpl
bound
pop
pop
dec
add
movsb
inc
or
or
mov
jne
inc
es
or
adc
lods
insb
mov
mov
je
adc
adc
repz
mov
repz
lock
sbb
pop
adc
xor
lods
adcb
cmp
push
inc
jge
add
mov
xchg
ret
sub
hlt
push
or
shl
push
repz
dec
add
pop
and
or
add
push
aad
xchg
test
xor
cmp
xchg
icebp
adc
je
push
call
clc
repz
outsb
mov
lret
das
out
mov
xchg
mov
lock
stc
mov
push
addb
xor
add
push
pushf
mov
push
faddl
lock
dec
add
cwtl
adc
mov
push
or
pop
fists
orl
push
int3
add
enter
mov
mov
pop
mov
stc
or
lahf
jmp
add
inc
icebp
mov
jmp
push
xor
xor
add
mov
pop
jl
mov
xchg
mov
xor
mov
pop
stos
inc
mov
jg
out
add
out
pop
jo
pop
lods
mov
push
sarl
movsb
xor
add
pop
pop
add
dec
mov
push
and
test
fldcw
cmp
dec
das
popa
je
stos
push
push
imul
adc
js
adc
leave
mov
lcall
mov
mov
arpl
ret
fldcw
sub
pushf
fwait
mov
sbb
lret
dec
pop
push
adc
or
je
pop
sub
cmp
pop
call
cli
push
push
add
movsl
push
das
aad
cmp
pop
loop
dec
movsl
inc
dec
in
enter
mov
and
test
hlt
jle
mov
loop
sbbl
and
les
push
mov
mov
mov
push
mov
shrl
inc
in
dec
aas
push
popf
stos
add
cmc
movsl
movsl
or
mov
xchg
mov
inc
xor
rorl
and
mov
dec
adc
jg
repnz
and
or
push
test
and
rcrb
icebp
cmp
sub
dec
fs
rorb
mov
adc
mov
fwait
jo
lods
jne
sbbb
jbe
xor
add
jle
in
push
cs
add
push
mov
or
aas
mov
insb
pusha
cmp
or
xorb
aas
sub
mov
ffree
or
inc
dec
push
mov
and
add
test
pop
fwait
lods
out
lea
xchg
and
mov
outsb
insb
dec
sbb
loopne
mov
add
fldenv
adc
data16
push
lret
arpl
cmp
int3
and
push
inc
aad
adc
call
mov
xor
pop
mov
adc
ret
call
jb
jns
fdivl
outsb
or
add
xor
pusha
das
and
or
call
sbb
and
add
push
sbb
fnstcw
inc
adc
or
push
pop
mov
or
push
and
dec
loop
loop
pop
xchg
mov
and
fisttpl
push
push
rcrb
push
in
push
xchg
cmp
es
add
insb
adc
jbe
subb
rcl
push
inc
mov
pop
sbb
adc
push
adc
jb
nop
aas
pop
in
pop
ficompl
packssdw
adc
xor
push
movsb
inc
sbbb
sbb
mov
inc
jg
int3
pop
and
rolb
jg
push
jge
pop
cmp
movsl
mov
sub
call
mov
push
dec
dec
lods
and
push
jbe
adc
aas
out
inc
sbb
push
jo
stos
push
lods
and
cmp
orb
xchg
mov
ljmp
jg
mov
cmp
sbb
dec
fdivr
lea
pushf
lock
inc
sbb
sub
sub
add
and
icebp
pusha
adc
es
add
jmp
cmc
out
push
ss
xor
xor
push
push
test
inc
cmp
icebp
and
jo
sbb
xor
mov
sub
sub
ret
ss
pop
adc
lds
in
adc
and
add
shll
dec
sub
lds
lret
or
xchg
or
pop
cmp
cmp
add
cmpsl
sbb
fs
jo
js
ret
xchg
lods
xchg
cmp
xor
add
test
inc
adcb
or
fwait
call
xor
mov
rcl
xchg
mov
xchg
inc
inc
xchg
jo
test
add
xor
xchg
repnz
repnz
mov
popf
push
mov
mov
mov
movsb
inc
push
xchg
aam
test
push
mov
subb
jg
call
push
jg
lret
jmp
pop
push
inc
sub
push
and
test
icebp
or
shrb
push
or
inc
mov
call
cmpsb
fcomps
and
and
push
ficoms
orl
lods
or
shlb
mov
dec
pop
add
sbb
loopne
cmp
ret
sub
dec
pusha
jl
fiaddl
daa
divb
mov
sub
test
cmp
push
adc
xchg
xor
cli
push
imul
mov
xlat
and
fbstp
loope
pushf
mov
push
jecxz
mov
stos
aaa
aas
add
ret
push
inc
inc
js
xchg
or
imul
mov
js
mov
adc
or
push
loope
push
fcoml
leave
dec
aad
dec
mov
push
call
inc
call
add
push
xchg
dec
sbbb
or
adc
xchg
cmp
and
push
xor
and
xor
rcrl
dec
add
cmp
es
inc
test
pop
push
xchg
mov
shll
in
dec
or
and
pop
push
sub
push
cmc
pop
icebp
scas
and
lret
add
push
sub
push
xor
push
jmp
popf
adc
push
push
scas
dec
fbstp
dec
les
imul
ljmp
test
xchg
lock
lds
xor
mov
iret
je
add
pop
mov
lods
lahf
dec
loope
je
mov
sbb
adc
sub
pop
mov
mov
mov
cmp
adc
and
shlb
sbb
mov
cld
and
movsl
call
ja
aam
adc
cld
enter
push
mov
mov
pop
and
push
pop
shlb
cmp
or
lcall
fstpl
mov
inc
lock
js
add
xchg
add
pop
or
mov
sub
repz
mov
shll
nop
fs
jno
fwait
sub
dec
xchg
stos
push
mov
mov
je
add
aaa
adc
cs
loopne
mov
or
adc
xchg
test
dec
fbstp
push
fs
add
add
sbb
adc
clc
out
push
xor
or
dec
mov
cmp
mov
jne
inc
loopne
or
mov
das
shrl
xchg
jno
fs
jne
call
clc
sti
mov
je
xchg
hlt
cmp
testl
insb
push
push
xor
mov
or
mov
ja
jle
mov
je
adcb
pop
std
xchg
inc
and
fcoms
mov
sub
cmp
sub
stos
xchg
jo
ds
imul
jb
cmp
xchg
pop
sbb
push
or
xor
ljmpw
mov
sbb
lea
and
adc
cltd
mov
jae
mov
push
adc
xchg
mov
dec
and
fcompl
jbe
jno
mov
in
lock
insb
aaa
inc
mov
fcompl
repnz
adc
cmp
aas
jb
adc
xor
or
sub
xlat
lea
xchg
in
iret
movsb
loop
push
jns
mov
andl
xor
pop
mov
or
fcom
test
movsl
mov
sbb
mov
nop
mov
je
in
movsb
lret
in
pop
rorb
enter
or
add
leave
cmpl
adc
bound
outsl
pop
xchg
addb
pusha
insb
sub
mov
jecxz
mov
test
inc
xchg
or
add
iret
lea
sub
inc
add
cld
mov
xor
aaa
add
and
pop
xchg
add
sbb
push
outsl
dec
jne
jmp
js
lret
and
into
ret
dec
inc
and
cltd
xor
mov
aad
xor
dec
dec
sbb
imul
out
inc
or
xor
ficoml
rcr
sbb
ss
fildl
mov
cmp
add
dec
add
outsl
mov
divb
add
mov
cmp
inc
cmp
pusha
loop
push
xor
ja
cltd
das
rcrb
sbb
addr16
dec
enter
ret
mov
xor
xchg
roll
mov
adc
cwtl
jp
add
lods
push
cmp
insb
xchg
lock
add
lds
fcoms
xor
insl
mov
jp
mov
shlb
push
enter
mov
ja
mov
mov
aaa
xchg
imul
lea
loop
add
fstpt
adc
sbb
inc
mov
fbstp
jmp
xchg
scas
fists
filds
xchg
fwait
or
push
xor
jl
mov
xchg
fisubl
mov
push
test
xchg
iret
mov
es
adc
xor
nop
addl
add
sub
shll
add
xor
mov
and
call
dec
stos
popf
dec
sbb
push
test
dec
push
pop
push
dec
mov
xchg
movsb
xchg
lret
dec
mov
or
movb
ljmp
enter
sub
test
sub
pop
scas
xor
dec
test
inc
and
and
mov
movl
sub
dec
mov
add
movsl
add
call
dec
sbb
mov
sub
in
loopne
addb
xchg
test
dec
sub
out
add
pop
jno
and
adc
stos
pop
lcall
adc
lea
cmp
pop
and
pop
dec
outsl
inc
pop
push
out
cmp
sar
cmp
push
sub
dec
xchg
ss
push
and
das
jge
fisubl
leave
neg
or
packuswb
adc
cmc
xlat
stos
aas
addb
fsubr
popa
enter
enter
call
add
jo
push
movsb
xchg
and
bound
mov
push
into
push
sub
test
lods
fbld
pop
mov
mov
add
add
jmp
xor
adc
push
scas
test
shl
loope
add
and
and
sbb
push
outsl
test
adc
dec
mov
rclb
push
das
xor
lahf
mov
inc
pop
test
in
sub
ret
or
lds
and
push
cmp
push
insb
or
dec
cmp
stc
loopne
push
pushf
cmp
adc
xchg
add
xchg
adc
hlt
pop
add
movsl
addl
fs
daa
ret
orb
push
push
arpl
add
clc
mov
xchg
testb
mov
rclb
stos
imul
mov
sub
push
push
and
or
je
push
dec
mov
mov
out
dec
jo
mov
push
pop
movsl
xchg
push
mov
pop
mov
js
push
sub
push
stos
adc
inc
imul
jle
mov
addl
adc
dec
das
dec
fadds
daa
lods
pop
mov
adc
xchg
and
jne
sub
push
jmp
add
pop
jecxz
movsb
add
mov
xchg
fwait
jno
mov
lahf
xor
add
ret
mov
cmp
cmc
add
in
xor
pop
inc
enter
sbbl
les
dec
adcl
mov
sbb
xor
adc
push
je
sbb
cld
pop
or
push
dec
mov
loope
jmp
ret
inc
mov
aaa
je
add
filds
or
ljmp
cmp
addr16
jne
dec
inc
jmp
push
mov
outsl
loopne
pushf
adc
or
fisttps
aas
jae
push
jno
pop
mov
insb
rclb
or
js
addr16
mov
pop
and
cmp
or
mov
cmp
pop
lcall
sti
orb
loop
sbb
mov
fsubl
pop
in
adc
dec
xchg
add
out
mov
cmp
fldln2
cmp
je
cmp
sub
test
push
sub
inc
push
fiadds
jle
xor
fcomps
jle
mov
and
test
ja
loope
inc
shl
push
dec
insl
and
pop
and
sbb
incb
lea
cmp
jg
mov
or
clc
fwait
cmpsb
lea
jnp
jl
js
in
mov
lea
cmp
gs
lds
js
inc
jmp
je
dec
je
add
add
jp
mov
xor
scas
lock
lcall
sbb
xchg
add
pop
lret
jo
outsl
lods
clc
ret
pop
push
xchg
movsb
xchg
in
inc
sbb
out
xchg
adc
fadd
xor
dec
cmp
fldenv
enter
mov
subl
mov
mov
pop
mov
mov
pop
scas
or
pop
xchg
adc
and
push
pop
iret
pop
mov
out
loop
sub
lea
mov
mov
inc
mov
mov
addl
jge
dec
ret
cmpsb
rorb
in
mov
in
or
push
push
inc
dec
pop
cmp
repnz
pop
les
or
inc
pop
mov
loop
mov
xchg
mov
cmp
adcb
test
mov
inc
add
mov
icebp
lret
mov
cmp
mov
je
mov
mov
and
add
add
inc
ljmp
add
dec
sub
sbb
adc
rorl
sbb
mov
ror
add
add
dec
rorl
jmp
rorb
pop
adc
and
sub
rol
mov
mov
aam
jg
jmp
pop
arpl
push
cltd
std
adc
xchg
hlt
or
stc
push
aas
mov
int3
jle
sbb
pop
jnp
mov
popf
cli
ljmp
add
add
xor
in
jns
inc
lods
jle
push
jno
lahf
or
test
add
add
dec
bound
inc
mov
jne
mov
in
mov
or
add
adc
mov
mov
and
dec
mov
inc
push
or
sub
lea
mov
fisubrs
shlb
pop
pop
enter
lods
and
movsl
test
push
cmp
testl
mov
jno
push
mov
or
xor
sbb
xor
inc
pop
fcomip
scas
ljmp
adc
insl
cltd
push
adc
out
push
mov
lock
loope
lret
shlb
inc
mov
or
cmpsb
add
sbb
and
mov
cmp
cmp
or
out
sahf
jno
add
mov
sub
test
movsl
cmp
insl
add
mov
filds
mov
mov
mov
jbe
sbb
dec
sbb
push
mov
mov
enter
and
lcall
inc
imul
or
shufps
mov
lahf
add
test
je
dec
mov
adc
add
sub
inc
cli
aam
inc
lcall
adc
or
and
inc
inc
adc
or
pop
mov
mov
fistps
dec
push
fstl
inc
movb
push
and
pop
jl
pop
js
jae
ret
jp
inc
mov
inc
push
or
xchg
shlb
fs
nop
xor
mov
mov
shl
adc
cli
pop
mov
lret
cmp
flds
test
mov
ds
dec
mov
and
inc
pop
inc
les
add
xor
sub
mov
jb
outsl
jbe
xchg
pop
push
push
setne
rclb
sbb
lea
dec
lret
add
lock
mov
lret
cmp
jle
sub
dec
or
inc
and
mov
pop
dec
dec
pop
xor
dec
sub
sbb
nop
push
xlat
xor
faddp
inc
sub
sbb
inc
imul
ja
push
ss
lret
movsl
adc
inc
rcrl
mov
enter
ss
jno
add
adc
or
fsubrl
ljmp
dec
nop
sub
pop
cmc
leave
shlb
mov
add
inc
rol
jg
jmp
adc
daa
loope
lret
dec
xchg
jmp
das
lret
scas
adc
adc
aas
roll
mov
add
dec
dec
roll
push
cmpsb
jo
push
xchg
sub
dec
or
push
lods
adc
inc
loopne
push
dec
insb
pop
ljmp
adc
xchg
flds
and
pop
and
mov
xor
cmp
lods
fistl
ds
fistps
movsb
pop
test
add
xlat
int
cli
pop
cmp
pusha
mov
pop
dec
cs
scas
je
or
adc
pop
jecxz
mov
aas
or
mov
ds
pop
dec
sub
sbb
sbb
ret
pop
inc
inc
inc
pop
mov
gs
jecxz
fmull
imul
mov
sbb
stc
push
xor
loop
shl
pusha
sbb
jo
adc
jmp
adc
dec
add
sub
pusha
adc
es
mul
in
xor
shl
les
and
rol
imulb
loopne
fmuls
jne
push
std
jle
add
mov
pop
or
popa
pushf
inc
fdivrl
or
cmp
lea
repz
or
sbb
dec
inc
fs
sbb
or
xchg
out
dec
add
add
add
mov
in
xchg
and
mov
adc
cli
in
test
rolb
ret
aaa
mov
js
and
cmp
shlb
jl
ja
cwtl
or
bound
sbbb
cmp
dec
jecxz
adc
dec
sbb
clc
or
rolb
adc
ret
xchg
pusha
cmp
xor
jmp
push
pop
push
add
ret
mov
pop
subl
sub
bound
add
sbb
mov
pop
inc
or
inc
push
sbb
stc
stc
stc
rcrl
xlat
jl
inc
decl
xor
dec
jle
xchg
lcall
decb
lret
add
dec
fidivrs
cmp
add
fcoms
sub
dec
jg
cmpl
enter
ficoml
xorl
push
mov
pop
lds
mov
and
or
xchg
or
pop
xchg
sbb
popl
xor
and
or
add
jns
dec
sbb
inc
sbb
out
loope
mov
mov
and
dec
sbb
dec
scas
add
jno
xorb
lods
or
imul
repnz
and
or
dec
cmp
xlat
fcmovu
dec
mov
outsb
xor
push
xorl
sbb
add
dec
mov
jle
jmp
mov
push
out
les
jmp
ja
outsb
adc
pop
leave
movsb
lret
or
sub
jmp
mov
popa
xchg
aas
pop
push
cmp
mov
cmp
jne
shr
adc
xchg
clc
adc
arpl
jno
outsb
stos
mov
mov
and
sbb
jne
add
and
pop
roll
dec
and
loop
je
clc
fwait
addr16
sub
or
push
rorl
push
adc
jno
inc
pop
jge
jbe
adcb
jne
cmp
lcall
sub
je
mov
pop
popa
lds
test
or
jp
lea
sbbl
mov
inc
sbb
insl
or
in
add
jecxz
roll
test
stc
or
aas
sub
lcall
leave
js
add
or
push
mov
test
sbb
dec
mov
push
or
push
adc
mov
jne
push
add
xchg
inc
gs
roll
push
dec
jmp
inc
xor
xor
adc
jno
pop
sbb
jno
xor
xchg
inc
jecxz
jns
sbb
push
arpl
dec
jg
jl
add
sarl
xchg
loope
fsub
add
dec
adc
rcl
dec
jecxz
add
inc
push
dec
xchg
test
pop
push
xchg
pusha
and
fbld
int
mov
loopne
inc
xor
add
lods
les
test
les
outsl
ds
add
inc
mov
push
popa
lds
jns
cmp
les
inc
cmp
dec
dec
pop
cmpsl
or
imul
inc
negb
add
inc
sbb
mov
jmp
loope
push
adc
clc
je
mov
or
ret
push
ja
jle
lock
push
mov
das
pop
add
or
add
add
push
xchg
int3
xchg
insb
mov
cmp
push
lret
and
fcmovb
shl
pop
add
cmp
lret
or
shll
jne
pop
mov
xor
ficomps
xchg
adc
out
pusha
fldcw
cmc
add
mov
mov
and
in
push
dec
fidivs
mov
xchg
sarb
push
icebp
adc
adc
rorb
dec
call
adc
pop
sub
push
sbb
lods
sbb
pop
jo
hlt
pusha
popf
mov
fwait
or
loope
mov
shlb
loope
and
outsb
std
cmp
std
mov
jmp
test
mov
into
rclb
pushf
popa
lea
je
inc
test
xlat
outsb
loopne
mov
sub
rcll
aas
lcall
mov
dec
or
sub
mov
or
mov
xchg
or
push
adc
mov
sbbb
or
push
aam
dec
stos
and
push
add
cwtl
add
lea
popa
sub
leave
dec
adc
scas
lea
adc
outsl
sub
rorb
push
push
push
sub
mov
es
jne
mov
inc
cmp
pop
inc
mov
cltd
mov
lea
add
xchg
mov
outsl
aam
push
lock
xor
push
mov
rcll
test
jbe
push
jne
add
aaa
and
push
xchg
insl
pop
leave
xchg
test
cmpsl
cmp
adc
sti
sbb
mov
push
shll
dec
push
dec
or
movl
outsb
pop
fsubrs
and
cmpsb
mov
dec
mov
adc
sub
sub
sub
sub
xchg
mov
inc
adc
daa
shll
jmp
mov
push
mov
or
push
pop
lcall
cmovns
adc
mov
mov
jns
mov
and
cmc
fisubl
push
mov
cli
ss
push
icebp
adc
or
xchg
lret
xchg
js
xchg
jbe
pop
jmp
pop
mov
cmp
hlt
int3
dec
dec
sub
ret
test
sbbb
call
inc
imul
je
inc
cwtl
cwtl
push
push
xchg
sub
xchg
cmp
sub
pop
jb
outsb
push
sub
mov
enter
inc
cmp
sbb
jno
aas
cwtl
sahf
pop
mov
mov
rcrb
int
pushf
fadds
or
inc
lock
int3
lret
sti
xchg
into
jae
lea
gs
xor
xchg
int3
cmp
push
popa
mov
sub
dec
inc
cld
and
or
dec
loope
add
in
jnp
scas
hlt
jmp
push
inc
cld
push
push
int3
xchg
push
cmpb
inc
fwait
ds
cmp
xchg
nop
and
push
and
adc
mov
jge
shlb
mov
mov
push
and
cmpsl
and
mov
mov
ret
jl
subb
mov
cs
adc
cli
dec
mov
sub
jmp
lea
push
sub
in
adc
xchg
xor
adc
jecxz
add
testb
nop
sti
rcrb
xchg
pop
push
dec
aas
add
aas
pop
fldl
mov
jmp
push
cwtl
push
lock
mov
xor
ss
adc
enter
adc
stos
dec
stos
dec
sbb
push
sti
or
jge
push
dec
mov
and
sbb
jle
pop
mov
mov
xchg
add
sbb
sbb
pop
dec
adc
or
inc
cltd
cli
mov
and
lock
xchg
dec
sub
je
push
mov
push
jnp
cmpsl
mov
rorl
sub
mov
xchg
out
lea
mov
test
push
sbb
inc
ds
push
inc
and
sub
jl
jmp
add
and
dec
dec
push
mov
mov
mov
sub
jg
xor
and
ret
cmp
je
inc
jmp
adc
lea
clc
dec
icebp
loop
pop
xor
dec
lret
jge
cld
mov
mov
dec
dec
imul
std
aam
add
mov
xchg
lahf
push
add
cmpsb
inc
sub
push
sub
mov
pop
add
pushf
sahf
fsts
add
inc
call
test
jno
rorl
inc
add
or
jbe
pop
cld
or
xchg
rcrl
vpcmpgtw
jle
add
ret
cmpl
pusha
aas
insb
stc
add
movsl
int
rcr
inc
aam
das
push
dec
push
cmp
cmp
and
push
add
adc
lret
mull
push
inc
adc
out
in
add
mov
jbe
sub
fdivrs
loop
adc
inc
dec
cmp
add
lea
push
mov
roll
sub
add
inc
dec
mov
adc
sub
sub
cltd
or
mov
jmp
dec
pop
push
jbe
pop
mov
or
push
cs
ret
pop
mov
incb
int
outsb
lea
sarb
adc
pusha
mov
lret
cli
je
mov
sbb
xorb
push
mov
jmp
push
mov
dec
pop
adc
add
sbb
cmp
ds
mov
in
aam
enter
fmuls
es
pushf
mov
sub
lods
ljmp
mov
shr
xchg
shrl
dec
jo
movsb
jno
pop
fdivrs
mov
sub
nopl
mov
mov
inc
insl
int
mov
adc
add
fdivrs
pop
xor
insb
lret
outsl
mov
repz
jbe
test
mov
fcmovne
dec
mov
mov
andb
push
in
inc
sub
lea
movsb
lods
f2xm1
xor
push
adc
pop
xor
mov
and
mov
sub
and
mov
adc
dec
xor
mov
test
push
and
dec
adc
out
scas
and
lea
push
push
fisttpll
jecxz
lea
scas
and
xor
mov
xor
mov
mov
ss
and
popa
push
fildll
nop
and
nop
les
add
lock
cmp
push
or
cmpsb
test
mov
push
repz
rcrb
adc
nop
mov
add
rcrl
pop
jnp
pop
ja
cmp
cmp
fistl
popf
adc
sarl
sub
repnz
add
sbb
dec
add
cmc
lods
lea
in
push
add
popf
pusha
inc
dec
fistl
inc
aad
cmpb
add
outsl
mov
jge
or
push
sub
dec
sub
inc
loopne
mov
cmpl
jns
mov
jb
out
push
aad
mov
rcll
jle
sub
jno
or
mov
push
mov
fisubrs
or
push
push
dec
cmp
sub
mov
and
or
cltd
mov
and
cli
and
pushf
xor
xchg
dec
enter
enter
sub
inc
addl
push
add
push
sub
add
xchg
xor
adc
daa
fistpll
push
xchg
jo
push
push
mov
push
ss
ffreep
push
pop
adc
cltd
pop
arpl
lea
out
xlat
push
adc
dec
rclb
ficompl
fcomps
cld
cmp
adcb
scas
pop
jo
add
inc
rorb
pop
enter
push
sahf
add
dec
lea
mov
ljmp
mov
push
call
faddl
xor
jns
sbb
inc
jo
push
cmp
inc
push
jecxz
js
les
jb
and
ss
adc
popa
and
dec
inc
inc
adc
or
jne
pop
lock
cli
test
push
jmp
cmp
loopne
pop
loopne
call
xor
mov
fdivl
push
add
popa
mov
or
adc
ret
adc
mov
int3
mov
sarb
pushf
mov
or
xchg
call
mov
mov
or
pusha
packuswb
fists
cmpsb
pop
jmp
or
inc
push
enter
sub
scas
icebp
xor
inc
test
push
insb
lcall
stos
adc
dec
subb
popf
push
movsl
icebp
sbbb
ret
shll
leave
aas
xor
or
cmp
cmp
mov
sub
test
add
packuswb
push
cli
or
mov
push
shlb
or
cmp
jb
mov
sbb
cmp
stos
xorb
inc
lock
adc
adc
in
push
imul
nop
inc
jecxz
sub
adc
divl
lods
mov
lret
and
and
or
shr
mov
add
push
push
call
call
enter
shll
lret
or
xchg
or
call
clc
adc
loop
inc
scas
rorl
xlat
push
decl
outsb
or
dec
stos
jmp
jo
and
cld
fistpl
sarl
shl
or
add
and
not
and
or
sub
fldl
into
mov
push
shr
sti
sbb
or
sti
add
mov
push
lcall
mov
std
jmp
mov
decb
jl
sbb
andl
sti
nop
and
xchg
nop
jns
adc
lds
subb
xchg
lret
dec
push
adc
mov
pop
cwtl
jns
cmp
mov
inc
xor
xor
and
addl
mov
ja
sub
push
aas
push
jg
roll
cmp
dec
and
cmp
xlat
add
lock
loop
or
inc
mov
testl
out
push
ret
push
test
dec
jae
jp
mov
sbb
movups
out
lret
or
xor
icebp
add
lret
mov
pop
shr
cmp
push
iret
cmp
push
sub
lock
fucom
and
nop
imul
bound
scas
lret
fsts
dec
cmp
xchg
jno
std
push
sub
push
adc
fs
lret
add
and
ljmp
repnz
cmpsb
movups
clc
enter
cmp
and
lea
mov
push
push
aas
ds
in
or
ljmp
pusha
clc
push
fistpl
bound
sbb
pop
add
and
shlb
and
jmp
js
mov
rclb
popa
xor
je
xchg
out
aad
adc
pop
adc
jo
out
shlb
cli
je
xchg
jns
lcall
stos
mov
out
xchg
test
add
pop
mov
das
mov
and
ret
pusha
inc
mov
ret
mov
mov
push
adc
add
loope
mov
or
mov
into
jmp
movups
xchg
and
adc
cld
cmpsl
inc
daa
aad
fisubrl
mov
out
cmpsl
mov
out
push
insb
cwtl
push
or
mov
push
iret
aaa
fucomp
or
call
loope
out
and
sub
orl
pop
insb
cli
imul
ret
xchg
or
ret
push
lret
movsl
mov
dec
dec
and
push
xchg
adc
jmp
daa
int
into
pushf
sbb
adc
inc
and
int
mov
push
loope
pop
in
icebp
dec
nop
das
fldenv
decb
add
mov
out
int
pusha
dec
mov
insb
shrl
inc
stc
mov
clc
mov
or
mov
xchg
sti
pop
cmp
clc
rol
dec
mov
sub
je
imul
cmc
into
or
mov
dec
sub
adc
push
les
xor
cwtl
inc
cmp
jmp
fdivrl
fbstp
fdivs
into
mov
mov
xor
adc
pop
sub
shlb
shl
cmp
fisttpll
push
fists
and
insl
push
adc
or
shr
cmpl
xor
fs
and
push
sbb
jge
or
in
lcall
mov
xlat
xor
fisttps
stc
xor
mov
mov
lret
test
jno
lcall
mov
int
lret
pop
punpcklbw
push
xor
xor
fcomip
out
std
xor
sbb
fidivs
cld
outsb
jo
mov
cs
pop
ret
lret
xor
jle
sub
ret
ret
data16
sub
daa
mov
push
std
cmp
cmp
aad
adc
fidivl
fbstp
sub
call
add
rorl
add
cmp
cmp
aam
ljmp
jmp
sbb
cltd
gs
cmpsb
vcvtpd2dqx
into
jno
xor
jl
pop
xchg
loopne
into
jge
jg
sub
cmp
push
inc
push
mov
punpckhwd
lods
loopne
or
pop
loopne,pt
mov
sub
xchg
mov
adc
or
sahf
iret
cmp
dec
push
stc
xchg
ljmp
inc
push
or
xor
les
push
xchg
outsl
cmp
xor
stos
add
pusha
and
xor
jo
xchg
pusha
xchg
icebp
inc
sub
in
xor
adc
sbb
push
lcall
and
decb
loopne
fsubrl
int3
or
push
les
push
xchg
ret
xchg
dec
mov
call
add
push
push
insb
push
shll
and
push
sbb
and
inc
into
cld
loopne
fbstp
dec
jle
outsl
jmp
and
movsl
adc
add
sub
inc
jmp
leave
xor
dec
in
cltd
aas
adc
add
inc
addb
jns
mov
adc
dec
jmp
scas
lea
ja
cmpb
loopne
jb
jmp
cmp
out
dec
xor
sbb
loopne
movb
cld
ss
sub
shll
inc
xchg
ss
roll
popf
jmp
pop
mov
daa
mov
fimull
imul
test
mov
push
inc
or
push
mov
and
cmpsb
int3
sbb
sbb
mov
sarb
dec
adc
pop
fucomp
or
push
xor
xacquire
lahf
lods
mov
or
and
leave
xchg
push
rcrl
dec
pop
fldcw
shl
add
pop
fs
xchg
loop
add
dec
test
int3
mov
jp
es
mov
inc
dec
add
movl
or
mov
mov
mov
xor
push
sbbb
sub
mov
sub
mov
or
inc
and
push
decl
adc
adc
add
lods
add
pop
mov
pop
cmpb
pop
sbb
and
mov
loopne
or
or
je
mov
add
jmp
cs
add
cmp
mov
std
iret
push
cli
mov
xchg
push
push
sbb
push
inc
das
imul
out
adc
dec
and
sbb
imul
or
mov
cwtl
jmp
cmp
ja
sub
mov
imul
mov
ds
vmovd
pop
repnz
sti
lret
mov
aaa
ljmp
rep
jl
xchg
lock
sub
out
or
mov
addl
xor
add
xor
into
out
push
cmc
idivb
push
mov
jae
incl
jnp
sarl
in
in
ljmp
mov
push
icebp
and
mov
int
sbb
sar
lea
test
push
sahf
jne
sbb
cmc
jae
out
addb
xchg
rcll
cs
sbb
out
cmp
add
inc
pusha
inc
or
stos
mov
inc
xchg
sbb
ret
aas
adc
lods
mov
inc
ret
lea
sti
push
lock
pusha
add
mov
test
pop
test
cmp
or
dec
mov
mov
rcrl
lea
pushf
mov
jb
or
push
shlb
cmp
push
cmp
cld
lock
fcmovne
pop
push
pop
or
add
jnp
push
or
test
or
cli
sbb
test
push
adc
and
fwait
xor
push
jecxz
out
leave
cmpb
and
orl
iret
mov
cmp
shr
aas
fisttpll
mov
inc
cmp
jae
insl
xor
sbb
mov
test
xlat
ret
push
mov
mov
adc
loopne
mov
sub
sbb
xor
outsb
loopne
sub
test
push
pushf
or
xchg
or
es
jl
or
shll
xchg
add
mov
pop
ret
insl
jge
push
adc
pop
jle
jmp
push
xchg
dec
adc
mov
push
sti
add
mov
decb
shrb
inc
cmp
mov
pop
mov
xor
fildll
jnp
shlb
mov
inc
dec
or
xor
or
sbb
insl
pop
clc
test
add
dec
fwait
add
or
add
fstpl
lret
cld
push
or
call
or
and
dec
setge
sbb
push
xor
outsb
lds
data16
jl
push
mov
nop
lock
pop
in
in
ss
lods
jnp
or
push
cmpb
inc
je
adc
sub
mov
adc
cltd
mov
xchg
xor
push
cwtl
sub
outsb
arpl
lcall
lock
xor
cmp
lea
leave
push
fdivrs
lret
iret
sahf
inc
loopne
cmp
out
clc
out
test
loop
pop
ja
xchg
nop
adc
or
in
xchg
push
test
popf
push
stos
test
push
jo
mov
jle
inc
je
dec
adcl
dec
cmp
in
mov
mov
add
mov
add
inc
xchg
in
aam
mov
test
addb
bound
mov
cmp
adc
push
adc
ljmp
cmp
xor
les
push
push
pop
xor
ss
sbb
test
adc
xor
movl
shr
cmp
push
hlt
and
inc
adc
dec
data16
and
cmp
mov
push
roll
mov
jecxz
adc
repz
add
adc
icebp
nop
lock
orb
cmc
rcl
jecxz
int3
mov
test
mov
ss
enter
xor
mov
mov
jp
sub
xor
push
or
push
sbb
imul
insl
mov
xchg
sbb
pop
sub
loopne
sbb
in
inc
mov
ret
shrb
inc
mov
mov
shll
call
mov
push
jl
std
adc
dec
addl
add
aaa
shl
or
sub
les
xor
ljmp
pop
inc
loope
data16
lock
jmp
adc
es
add
aam
and
sub
push
push
loopne
add
mov
loopne
sub
fbld
ret
jne
js
icebp
je
inc
dec
mov
mov
mov
inc
scas
test
adcb
jno
mov
mov
fadd
adc
stc
adcl
jl
mov
rcr
insb
test
repnz
lea
adc
into
sub
ror
idiv
inc
adc
int3
inc
inc
mov
mov
mov
or
loopne
mov
adc
mov
sub
inc
add
dec
jne
push
fmuls
add
mov
adc
inc
loope
or
sbb
ljmp
jecxz
push
mov
sbb
cmp
push
cmp
push
lds
push
popa
pusha
pop
pop
or
mov
inc
cmp
jecxz
test
mov
xchg
icebp
mov
addb
push
add
cmpsb
push
orb
adc
pusha
sub
and
nop
jno
add
mov
inc
jecxz
mov
test
xchg
imul
cwtl
das
aam
mov
nop
add
xor
bound
pop
dec
add
mov
ss
mov
add
xor
push
jbe
pop
mov
cmp
pop
cmp
mov
jns
mov
lock
or
nop
xchg
or
or
or
movsb
push
loopne
xor
adc
das
adc
pop
adc
in
and
das
adc
adc
adc
pop
test
push
mov
outsb
add
adc
push
and
adc
add
lock
push
rclb
sbb
pushf
sub
pusha
shll
add
dec
adc
cmc
int
push
fisttpll
sbb
ds
xchg
pop
sarb
push
fisubrs
mov
xchg
shrb
repnz
dec
cs
mov
negl
push
mov
push
mov
jl
and
push
add
scas
jmp
pushw
pop
inc
sub
and
arpl
jnp
push
ss
and
push
enter
push
adc
inc
and
js
movb
pop
add
nop
add
rcr
and
popl
mov
or
xor
push
or
xchg
xorl
inc
jns
pop
or
sub
imul
xchg
lods
inc
pop
mov
and
xchg
add
and
mov
adc
jecxz
pop
push
jo
movsb
ja
pop
jl
dec
sbb
aaa
mov
adcl
xor
push
sbb
add
fmuls
push
pop
add
divb
or
pop
sti
call
jmp
push
inc
push
push
fmulp
sub
or
xchg
adc
push
mov
jbe
sbb
or
daa
sbb
imul
es
dec
add
jae
push
jp
inc
mov
xchg
jge
pop
inc
aaa
xchg
and
mov
sub
ret
dec
sbb
pop
pop
and
ret
adc
mov
mov
pop
je
fdiv
bound
test
xchg
push
or
fstpt
inc
pop
ror
and
dec
sbbl
scas
adc
jne
cmp
mov
push
add
adc
sbb
cmp
ss
sbb
and
xchg
or
xchg
mov
jg
dec
adc
mov
insb
inc
adc
mov
pop
adc
adc
jg
mov
cmp
xchg
jno
push
lea
scas
add
pop
mov
add
das
add
je
push
dec
leave
sbb
sahf
add
inc
add
cmp
and
pop
push
dec
mov
sub
pop
inc
push
dec
outsb
push
dec
lahf
pop
dec
fistpl
inc
sbb
adc
rcll
pushf
lds
and
mov
test
inc
pop
cmp
mov
mov
push
mov
addl
pop
push
push
sub
add
cmp
fbld
and
add
cmpsb
mov
and
push
aas
dec
add
mov
je
dec
jecxz
xchg
push
fistl
sbb
cld
push
sub
inc
push
mov
lock
dec
add
push
xlat
sub
xor
or
daa
mov
cmpsl
inc
cmpsb
adc
in
mov
ja
push
jl
cmp
rcll
fcmovb
and
sbb
icebp
mov
sbb
push
adc
inc
cmp
fidivl
dec
jmp
mov
jl
mov
fdivl
push
adc
push
lea
lods
lds
xor
cmp
inc
shll
and
rclb
xchg
add
iret
mov
mov
shlb
or
mov
cmpsl
lahf
jne
or
rolb
jg
les
jne
cmpb
xlat
push
pusha
mov
ds
pusha
mov
adc
fcmovbe
imul
inc
enter
and
enter
rolb
lds
inc
push
mov
mov
sub
add
sub
icebp
lret
mov
push
push
dec
inc
enter
dec
fadds
test
jecxz
loope
adc
push
sahf
jne
loopne
mov
arpl
mov
rorl
mov
test
call
mov
sbb
ret
cmp
xchg
outsb
sub
jbe
xchg
repnz
jno
and
mov
jmp
repnz
lods
and
ret
sbb
addb
ret
clc
enter
jo
jb
push
adc
jb
mov
mov
push
push
mov
outsl
jo
mov
jbe
xorl
pop
pop
mov
scas
and
mov
std
push
and
push
sbb
lahf
test
lods
pop
and
add
ret
jns
fs
xchg
rcll
adc
rcrl
daa
dec
subl
pop
stos
push
inc
xchg
popa
loop
xor
sahf
test
mov
fldt
push
arpl
lods
push
inc
and
sbb
dec
add
fdiv
call
sbb
arpl
sub
push
icebp
inc
sub
popa
pusha
nop
mov
test
xor
push
shrl
cwtl
mov
pop
push
bound
jge
bound
pusha
add
adcb
inc
adc
arpl
sbb
sub
xor
mov
cli
sub
xchg
sub
mov
push
sub
dec
mov
adc
sub
mov
adc
aas
jb
add
push
cmpsb
jge
lret
add
push
or
xchg
add
lea
bound
push
jbe
jmp
sbb
into
add
scas
mov
rcrl
add
into
push
mov
add
sub
add
int3
pop
mov
test
mov
dec
xor
mov
sbb
and
sbbb
mov
repz
bound
mov
dec
mov
aam
fiaddl
dec
nop
ja
mov
push
out
add
mov
inc
xlat
out
into
and
add
in
sti
jmp
push
jo,pt
push
push
mov
call
mov
xchg
sbb
mov
push
orb
pusha
inc
mov
sub
mov
inc
or
add
push
inc
cmp
cmp
int
je
pop
add
inc
mov
imul
or
popf
adc
pop
les
inc
push
add
fistpll
jno
das
or
leave
mov
inc
or
popa
test
xor
cmp
xchg
jb
adc
pop
push
push
xchg
orl
jo
pop
arpl
jae
sti
inc
mov
adc
pop
or
dec
inc
dec
push
xor
mov
add
insb
and
sub
xor
cli
pop
ret
bound
adc
lret
add
es
add
dec
cmpsb
xchg
jnp
mov
repz
cwtl
cmp
test
popa
fstp
or
push
add
clc
dec
dec
add
add
sahf
sbb
mov
lock
call
pop
xor
outsb
xchg
dec
inc
mov
fdivs
pushaw
or
pusha
xchg
rorb
shlb
cmp
sub
push
ss
test
cmp
iret
sarl
iret
scas
jecxz
fstps
or
and
repz
ds
pop
push
push
cmp
repz
xchg
mov
iret
mov
cs
pop
int3
and
pop
aas
inc
xor
fs
mov
repz
push
pusha
push
push
or
ja
mov
fistpl
fisubl
outsl
sub
push
fdivl
data16
and
inc
fstpt
sbb
jo
fwait
pushf
mov
xor
pushf
or
in
dec
push
or
or
enter
mov
outsb
je
sbb
xor
fsubl
addl
or
xor
add
add
mov
inc
adc
pushf
dec
inc
sub
push
dec
fdivp
sarb
sub
inc
pushf
mov
mov
mov
xor
adc
push
and
and
nop
pop
mov
push
jle
mov
xor
sub
push
repnz
add
inc
cltd
xorl
bound
lahf
pusha
push
sub
mov
ss
mov
adc
sub
cmp
adc
loop
or
loop
add
push
pop
cmp
xchg
sub
dec
or
inc
mov
add
data16
sub
inc
cwtl
cmp
dec
mov
mov
adc
pop
jmp
aam
ret
lret
sbb
lahf
cmp
push
test
xor
push
push
xchg
cmpsl
cmp
and
and
add
cltd
mov
rcrl
mov
sti
adc
inc
sub
adc
fadds
push
addr16
movsb
sbb
sahf
or
jns
jo
push
and
add
fbld
inc
add
push
loopne
pop
stc
adc
add
pop
xor
xchg
dec
add
loope
fmuls
dec
xchg
test
cs
rorb
sbb
sbb
cmc
sub
enter
mov
ret
mov
dec
fnstcw
cli
adc
mov
out
dec
lret
shrb
push
xorb
pop
xor
lahf
pop
or
mov
mov
movl
aam
test
pop
nop
in
mov
pop
mov
and
insl
and
aas
adc
popl
fs
outsl
icebp
mov
mov
and
sbb
in
xchg
ljmp
adc
xor
add
inc
and
pop
dec
push
add
or
sub
mov
pusha
sbb
jecxz
pusha
adc
fmull
xstore-rng
cmpsl
add
adc
cmp
adc
pusha
call
orl
js
test
dec
fwait
clc
mov
stos
cli
jmp
or
push
bswap
inc
push
scas
js
dec
jg
adc
rcrb
roll
fcmovnu
push
pusha
movsl
adc
pop
xor
fldpi
mov
dec
sbb
mov
lahf
fwait
push
sub
addb
jns
jnp
lea
je
cmpsl
outsl
test
test
cmp
sahf
mov
movlps
jle
movl
xor
or
lcall
mov
pusha
cli
dec
mov
lea
fcomi
lcall
push
jle
push
sbb
push
inc
clc
mov
dec
scas
lret
mov
rolb
js
add
pop
leave
inc
mov
push
je
sete
bound
mov
mov
xchg
mov
ret
pop
mov
push
es
sbb
daa
testb
or
call
or
push
nop
das
mov
andb
mov
jb
or
mov
xor
outsl
ret
andb
jno
subb
out
out
shll
pushf
std
push
add
jge
roll
sbb
add
sub
adc
add
mov
loope
pop
push
or
cwtl
jae
inc
add
xchg
cltd
push
enter
js
sbb
xor
xchg
test
call
xchg
rorb
int
rcrb
sbb
and
cmp
adc
jecxz
cmp
lahf
hlt
sbb
sarl
or
or
fiadds
mov
pop
movsb
sbb
mov
push
mov
dec
loope
push
add
in
cmp
adc
ljmp
iret
and
adc
or
rol
leave
or
ret
sbb
add
pop
or
or
push
add
lret
mov
inc
cli
sub
insb
push
push
or
xor
adc
mov
daa
lock
or
push
mov
xor
fstpt
fmul
push
test
or
or
jmp
lock
adc
out
movb
aaa
mov
gs
scas
adc
cmp
je
push
mov
dec
xchg
sub
xchg
lret
daa
iret
repz
pushf
mov
dec
mov
mov
inc
enter
out
mov
lret
pop
jns
sahf
popa
dec
dec
leave
adcl
sbb
mov
jno
cmp
ret
xchg
leave
and
mov
jo
xor
sub
and
adc
arpl
addr16
adc
fcoms
adc
push
loopne
jmp
add
enter
xor
pop
sbb
add
push
jmp
xchg
inc
icebp
adc
xor
scas
jg
add
mov
push
add
dec
sub
mov
sub
pop
andb
es
shl
mov
inc
es
neg
roll
cwtl
pop
jmp
fs
xlat
xchg
xchg
and
sti
stc
pop
or
add
movsb
shrb
adc
xorb
pop
pop
inc
sub
dec
lods
xor
pop
sbb
adc
outsb
or
push
ss
pop
cmpsl
std
lret
sbb
and
mov
inc
push
lcall
xorb
adc
lock
xor
ret
inc
cltd
add
data16
notl
jecxz
int
mov
mov
sbb
sub
sbbb
outsl
cmp
or
movsb
stos
test
add
mov
mov
cmp
lock
adc
xchg
pusha
pushl
inc
sbb
scas
fs
mov
lcall
push
jo
add
pusha
pop
xchg
insl
js
mov
jo
outsb
pusha
testb
stc
ret
sub
sbb
lcall
nop
jecxz
outsb
sub
push
cmp
fsubl
fisttpll
pop
jae
clc
adc
xor
sar
mov
insl
dec
loope
jo
sahf
mov
stos
pop
mov
xor
pop
loop
mov
xor
jno
inc
dec
add
mov
sbb
xchg
cmc
inc
inc
push
mov
daa
inc
adc
arpl
dec
sub
loope
aad
mov
out
push
add
loopne
jnp
or
mov
icebp
or
mov
cmp
cmpl
inc
jae
ljmp
insl
adc
inc
lea
xlat
xlat
out
push
addr16
movsb
negl
dec
adc
or
push
test
push
pusha
push
das
inc
lods
mov
push
push
ret
call
in
inc
xchg
xor
pusha
ss
add
and
pop
mov
sbbl
in
aas
push
ret
inc
push
xchg
popa
pop
inc
decl
jne
ret
in
or
jl
cmp
je
and
sub
mov
test
imul
pop
lds
inc
cmpsb
aas
xor
lock
push
lcall
and
addl
cmp
sbb
mov
xchg
sbb
inc
add
inc
fisttps
xor
mov
lret
push
outsb
dec
add
or
add
les
or
aam
fwait
pusha
loopne
mov
test
inc
inc
push
push
imul
out
popa
sub
subb
ret
jbe
sbbb
test
or
aad
mov
mov
or
mov
xchg
enter
mov
and
cltd
movb
cmpsl
js
ret
pop
ret
test
hlt
lea
or
xor
shl
push
sub
and
add
stc
push
adc
fidivl
fimuls
ret
pop
or
mov
or
add
pop
push
loop
or
xor
push
jns
sbb
or
push
enter
dec
dec
popf
shll
xchg
test
ficoml
jecxz
test
jg
test
inc
pop
inc
push
repz
adcl
or
add
mov
mov
xchg
dec
and
cltd
rorl
loope
mov
add
dec
lcall
fildl
sahf
fisubrl
movsl
add
mov
mov
and
inc
loopne
xchg
je
push
add
fmuls
pop
or
sbb
ret
inc
mov
les
add
aad
mov
adc
add
or
shl
iret
and
push
lds
rclb
jg
inc
pushf
mov
shrl
sub
dec
call
pop
jo
inc
sub
insl
test
or
int
testb
or
loope
add
jl
jmp
divl
inc
pusha
mov
je
fs
decb
fbld
inc
std
sub
jmp
cmp
mov
lret
add
and
pop
not
or
inc
pushf
loope
loopne
andb
sbb
rolb
push
add
in
inc
jp
pusha
pop
jp
or
add
mov
lds
xchg
sub
xor
xor
jb
mov
rorb
sbb
lods
pop
shlb
addb
les
aam
lret
and
cmp
lret
hlt
movsb
mov
sub
stos
aad
sub
add
sets
dec
and
std
pop
or
push
mov
sbb
cmp
dec
and
gs
xor
imul
mov
outsb
push
divl
mov
fwait
dec
push
adc
xchg
mov
xchg
cmpsb
jmp
icebp
int3
push
je
out
je
and
ret
pop
out
lret
adc
sbb
cmp
sub
aam
xor
int
dec
adc
mov
jb
es
nop
decl
add
and
lea
add
adc
mov
and
or
xor
into
js
fiaddl
aaa
int3
sbb
pop
adc
das
outsl
inc
into
push
sbb
imul
adc
aad
push
movsb
sub
push
mov
or
js
inc
xor
ret
jle
sbb
test
ds
mov
cmpsb
shll
and
sub
pop
xor
or
adc
dec
cmpsb
nop
lea
mov
outsb
dec
jl
mov
pop
xor
mov
dec
jle
mov
es
aas
push
dec
add
test
nop
outsl
sbbb
stos
rolb
add
movsb
mov
popa
xor
xchg
test
push
loopne
jmp
or
dec
xchg
outsb
popl
add
inc
rcrb
xchg
loope
or
pop
imul
adc
add
cli
lret
mov
or
inc
test
ret
jne
mov
insl
cli
add
or
or
sahf
mov
cmp
push
push
pusha
pop
add
or
jo
pop
push
je
ja
sbb
ret
add
jb
push
push
inc
movsl
pop
call
jmp
das
sbb
scas
sti
add
loopne
push
pop
adc
xor
or
cmp
and
xor
adc
pop
push
lods
cmc
ret
fs
out
mov
lock
inc
aad
push
jnp
xor
outsl
jns
push
loope
adc
in
lea
push
push
outsl
test
gs
xchg
subb
sti
lods
ret
test
xchg
mov
push
inc
jmp
xchg
or
mov
out
xor
sub
dec
js
push
pop
sahf
mov
out
add
fwait
xor
inc
popa
sar
lret
lret
inc
push
mov
push
mov
mov
cmp
jle
add
cld
sub
sbb
dec
jo
sbb
xchg
mov
fldpi
inc
or
cmp
mov
fs
mov
movsb
dec
and
lea
lea
mov
mov
ret
inc
cmpsl
imul
scas
mov
adc
push
xor
inc
cmp
stc
push
cmp
mov
ret
cmp
pop
mov
cld
add
mov
adc
pop
mov
addl
or
adc
orb
out
daa
testl
in
repz
push
pushf
jl
pop
or
or
jne
xchg
mov
sub
inc
mov
lea
test
rcr
enter
test
int
xor
data16
mov
xchg
sub
movsl
std
das
add
and
mov
add
shrl
test
fs
mov
mov
mov
mov
and
ljmp
add
into
xchg
dec
js
push
xor
or
sub
push
in
xor
test
fcomps
movsl
cmp
jecxz
sbb
insl
or
push
dec
nop
leave
sub
in
or
xchg
sbbl
mov
pushf
out
in
jb
xchg
pop
pop
mov
pop
push
xchg
divl
jb
insb
sbb
mov
orps
call
adc
rcr
cmp
mov
push
push
int
push
mov
push
push
xor
add
inc
push
push
std
cvtps2pd
cli
jne
sbbl
jecxz
mov
push
xor
ds
rcll
and
movsl
dec
jp
push
lea
lret
add
mov
aas
je
loope
jp
lods
pop
jae
push
shlb
fwait
xchg
mov
pop
xchg
dec
enter
xchg
jo,pt
xchg
js
push
movsl
icebp
lahf
je
daa
cs
ds
pushf
or
in
jl
dec
testl
fstpt
fs
jnp
clc
aam
push
jp
or
cmp
inc
add
pop
xchg
jb
fbld
adc
call
sub
test
add
jl
or
iret
sahf
inc
add
imul
lahf
mov
sub
test
jns
mov
sbb
add
mov
sub
cmp
imul
push
sbb
data16
dec
or
mov
scas
add
les
dec
mov
push
ret
and
fdivrs
cmp
sub
popa
imul
dec
movsb
sbb
mov
and
je
dec
push
push
jae
dec
push
pop
fistpl
outsl
cmc
aaa
add
jecxz
xchg
push
pushf
jp
inc
sub
push
mov
je
in
inc
and
add
xchg
sbb
xor
pusha
xlat
add
repz
rolb
gs
test
je
add
add
adcl
jge
add
sub
pop
out
enter
pop
push
push
sbb
pop
icebp
sub
adc
loope
test
cmp
cmc
fldt
shrb
sahf
and
lock
inc
and
adc
sub
mov
or
movsl
mov
je
mov
call
sbb
cli
add
sub
pop
push
pop
dec
movsb
nop
sbb
push
test
pusha
push
cltd
sub
mov
lea
or
mov
mov
loopne
mov
test
adc
sti
dec
pminsw
mov
sub
xor
adc
sbb
adc
clc
lcall
jne
aaa
or
insb
scas
inc
xchg
cwtl
push
inc
and
je
inc
mov
pop
enter
jno
xchg
pop
imul
mov
arpl
jbe
sahf
cwtl
sbb
femms
fnstenv
ret
push
jb
pop
xchg
testb
pop
add
stc
add
xchg
mov
jb
jmp
inc
ret
test
cmp
pusha
adc
andl
add
mov
push
in
add
dec
push
mov
add
dec
sbb
subb
mov
or
outsl
repnz
add
inc
add
stos
sub
add
add
mov
das
or
inc
xor
or
add
mov
cmpsl
stc
cld
or
clc
mov
mov
jo
jmp
add
sbb
cmc
pop
push
sub
bound
lcall
nop
mov
dec
je
xchg
cmp
xor
cld
sahf
sbb
adc
xor
xor
cmpsl
adc
add
cmp
pop
in
push
fadd
test
push
dec
mov
pop
daa
gs
ljmp
push
iret
fimull
lock
mov
inc
dec
sbb
clc
stos
or
clc
sub
cmp
push
or
dec
mov
pop
clc
out
inc
cmp
repz
out
addr16
out
adc
jns
lods
cmp
mov
mov
or
addb
fsubl
jne
in
movsl
dec
ja
pop
fdivrs
shll
sbb
dec
push
insl
lock
cmp
push
cmp
mov
insb
xchg
call
sarl
mov
scas
cmc
daa
jne
or
in
xlat
adc
shlb
mov
jmp
inc
dec
sub
roll
add
push
jecxz
or
dec
xchg
out
pop
mov
xchg
sbb
xchg
sar
and
xor
adc
jmp
sub
adc
push
lock
sub
dec
push
jmp
add
dec
lock
and
pop
pop
inc
dec
adc
imul
das
mov
ret
xlat
sbb
lock
std
sub
adc
aad
aaa
sbb
xchg
sbb
xchg
sbb
lods
adc
or
adc
push
mov
adc
les
and
cmpl
jne
sbb
imul
jb
xor
std
call
sub
push
add
add
and
mov
ljmp
xchg
subl
mov
push
imul
mov
popf
jo
add
or
push
adc
cs
jl
inc
test
call
outsl
arpl
push
into
pop
sbb
ret
push
mov
inc
jo
push
rolb
std
xor
loope
rolb
cli
push
ret
push
mov
jl
cmp
jge
or
das
mov
popa
fxch
pop
bound
inc
and
cmpsl
mov
aas
cmpl
push
dec
gs
and
lea
adc
test
pop
out
adc
into
mov
rcll
ficompl
incl
cli
clc
pop
or
push
js
mov
lock
pop
cmp
cmp
xor
movsb
sarb
std
pop
std
inc
adcb
hlt
sbb
push
inc
jge
inc
inc
out
add
push
push
sbb
ret
push
dec
sub
xchg
adc
enter
icebp
pop
sbb
fsubrs
dec
aad
mov
inc
int3
mov
jns
push
xchg
xchg
nop
stos
cltd
lahf
xor
bound
xchg
dec
push
or
ret
push
lods
sub
mov
push
mov
and
inc
push
lea
xor
push
fcmove
inc
test
or
pop
rcll
mov
sbb
mov
mov
cmp
push
xor
jg
cmp
into
inc
insb
pop
inc
add
inc
rolb
fnstsw
jmp
test
pop
sarl
adc
xor
inc
adc
mov
fstpt
pop
jne
adc
add
jl
shrl
mov
xor
stos
or
dec
push
pop
push
mov
and
fs
xchg
dec
cmpsb
rorl
fists
jo
add
ljmp
inc
add
push
sti
mov
dec
leave
loope
pop
sub
fwait
ds
inc
xor
push
movsl
xor
xor
int3
xchg
mov
nop
mov
or
sub
push
je
lret
sub
fwait
sbb
pop
movsl
ret
push
mov
negl
inc
jne
addr16
inc
push
popa
pusha
inc
imul
dec
dec
mov
jne
cmp
jecxz
jmp
sub
xchg
add
daa
nop
inc
add
cmp
test
fildll
dec
cmp
xchg
and
xchg
in
inc
orb
mov
mov
and
inc
jle
inc
inc
push
sub
and
inc
cs
adcb
fdivl
movl
loope
add
aad
and
cld
push
mov
pop
icebp
mov
adc
or
fidivrl
js
jo
dec
test
lock
cs
lea
jle
fcmovu
rcr
rol
flds
lret
sbb
push
mov
mov
out
movsl
dec
jge
shl
call
jecxz
push
mov
mov
popa
pop
xchg
andb
or
xchg
mov
outsl
add
pop
pusha
mov
inc
mov
or
xchg
mov
mov
push
in
imul
mov
sub
nop
ret
loopne
and
xor
add
fcomps
cmpsl
or
xlat
lret
test
pop
add
inc
test
cmpsl
sbb
ds
fcoms
xchg
jo
shll
inc
in
sub
sbb
inc
ds
mov
xlat
xchg
add
adc
rclb
mov
cmpsb
call
cmp
cmp
ds
sbb
xor
test
adc
jnp
or
out
imul
sbb
pop
div
leave
pusha
dec
mov
dec
adc
call
or
cmpsb
sub
stc
dec
add
inc
fistpll
dec
into
push
push
push
adc
lea
sbb
movsb
pop
repnz
add
sbb
fiaddl
ret
jle
repz
add
add
or
push
sbb
jmp
push
fs
fcompl
mov
push
int
inc
pop
sub
inc
aam
mov
mov
sbb
and
xchg
inc
or
imul
push
popa
xor
mov
sbb
cmpl
push
push
jno
dec
shr
adc
cmpsl
add
inc
dec
jl
sbb
pop
sub
arpl
cmp
addr16
gs
pop
xorl
jmp
xchg
push
xchg
inc
mov
pop
xrelease
sub
xchg
push
or
xor
inc
loope
sub
pop
inc
push
push
add
jg
add
scas
mov
loopne
jmp
pop
add
addr16
data16
into
or
adc
jo
pop
push
push
daa
sbb
xchg
inc
mov
mov
pop
or
lock
add
mov
mov
loopne
fdiv
stc
movb
shl
pop
push
sub
outsb
jo
hlt
popf
rclb
sbb
jbe
sub
xlat
push
shlb
cmp
insb
push
outsb
mov
and
cmpsb
mov
or
push
loope
roll
cmpb
add
jle
xor
nop
std
movsb
adc
xchg
dec
jmp
aaa
sub
in
pop
xchg
push
push
out
mov
lea
cmp
jne
push
cmpl
mov
mov
inc
or
mov
pop
ss
inc
adc
clc
mov
mov
push
push
inc
add
xor
std
cmp
push
subl
insb
mov
popf
push
rolb
jno
jl
rolb
jbe
mov
mov
sbb
pop
push
push
jo
fs
movsb
adc
inc
hlt
or
pop
pop
aad
jmp
mov
pop
aad
mov
rorb
add
adc
std
pop
lahf
push
shl
aam
test
loop
mov
add
shrl
mov
lea
mov
xchg
lods
movhps
add
cmp
add
dec
or
or
loope
push
jo
or
sub
inc
push
dec
lock
push
push
xor
test
or
push
xlat
loopne
push
or
dec
mov
or
pop
mov
push
mov
or
cmp
aas
out
push
sub
ss
and
in
mov
es
push
test
push
or
push
jecxz
xor
jne
adc
sarb
push
fsubs
push
ret
or
adc
xchg
push
push
adc
or
jmp
inc
and
pop
in
sub
or
dec
clc
loope
aam
pop
or
and
jb
mov
adc
add
dec
sbb
fldl
js
in
roll
rolb
daa
pop
mov
push
push
push
mov
lret
sbb
and
mov
fcoms
inc
loope
roll
lret
inc
add
repz
cwtl
sub
inc
inc
in
sub
adc
dec
roll
adc
ret
xchg
dec
in
push
icebp
push
in
addr16
pop
xchg
shll
popf
push
and
fs
inc
push
and
xchg
inc
sub
in
adc
adc
jne
les
jl
enter
inc
rolb
pop
push
in
sub
push
or
xchg
imul
push
dec
loopne
add
pop
xor
jp
push
or
push
out
push
mov
imul
jns
sub
inc
pop
push
xchg
mov
or
xor
int3
sbb
rorb
cmp
xor
dec
or
xor
mov
cld
test
adc
aas
xor
int3
pop
ret
pop
adc
je
cmp
add
cmpsl
xor
adc
je
mov
jp
lock
pushf
add
or
shlb
xor
add
sub
imul
iret
push
inc
pushf
or
mov
and
push
mov
push
or
add
adc
mov
xor
mov
fwait
dec
lret
fdivrs
add
xchg
adc
out
jge
loopne
push
sbb
ja
movsl
repz
mov
or
mov
sub
cmp
adc
sbb
sti
dec
add
mov
into
cmpb
and
push
pop
jecxz
adc
inc
test
add
sub
push
pop
or
jmp
jne
mov
push
mov
icebp
mov
adc
adc
xchg
xor
push
jns
mov
dec
lods
push
push
imul
mov
inc
adc
push
inc
sbb
inc
pop
inc
adc
sub
cmc
push
sub
jns
fsubrl
sub
adc
xchg
add
push
push
push
pusha
lcall
add
mov
adc
push
or
xor
pop
mov
sub
aas
cmc
add
dec
lret
dec
lret
pusha
pop
adc
imul
adc
xchg
popf
sub
es
add
xlat
rcll
ret
dec
add
je
pop
into
xor
jle
mov
cmp
ret
in
mov
sbb
shlb
outsl
and
cmp
and
rclb
es
lods
pop
and
fisubl
push
sbb
or
pop
cmpl
or
out
jle
push
cld
paddsw
lret
mov
adc
fstl
pop
jno
sbb
cmpb
xchg
aaa
and
pop
add
ss
dec
fstpt
xlat
sbb
inc
int
int3
push
jb
xor
add
cs
fidivl
or
loope
add
push
lcall
sub
mov
cmc
adc
jno
aam
push
mov
pop
xchg
or
xchg
pusha
ffree
orl
add
dec
xor
jae
mov
loop
push
cmp
push
push
scas
mov
sbb
es
xor
adc
outsl
pop
push
jmp
xor
jp
cmp
shl
jo
loopne
dec
mov
sub
mov
loopne
dec
rolb
xchg
or
mov
xor
bound
cltd
nop
orb
mov
jg
adc
ds
jmp
dec
test
xchg
push
mov
dec
stos
jg
or
and
push
jmp
sbb
or
mov
or
jle
fildl
dec
les
mov
pop
push
clc
pop
flds
and
or
mov
adc
sbb
pusha
and
and
add
push
aas
in
pop
out
mov
mov
ret
push
push
add
push
sub
ja
and
popa
in
or
pop
push
rdmsr
push
or
movb
and
sub
or
jbe
and
and
add
test
pop
movsb
mov
loopne
dec
push
daa
xchg
lock
push
sub
out
jo
dec
pushf
adc
jg
add
into
push
mov
mov
mov
lock
add
imul
adc
jns
pop
lds
insb
adc
jo
sbb
stos
mov
in
je
js
mov
and
mov
decb
jl
mov
add
xchg
pop
leave
adc
xor
adc
jl
ret
sbb
and
lds
add
inc
mov
sbbb
or
fcmove
pop
les
dec
loope
jae
popf
mov
dec
sub
pop
nop
sbb
and
and
enter
ret
call
adc
mov
add
mov
mov
push
cmpb
outsb
imul
lea
pop
mov
mov
sub
les
pop
ja
mov
in
add
xchg
ja
gs
subb
aam
adc
inc
mov
sbb
lahf
clc
subps
and
lea
test
ja
jmp
or
nop
jb
inc
push
or
ret
push
imul
or
adc
sbb
pop
sub
ljmp
lret
mov
rolb
adc
cmpsb
imul
pop
xor
cmp
aaa
rclb
clc
xlat
mov
mov
imul
or
jle
add
fs
mov
clc
daa
pop
test
aam
sub
cld
out
xor
xor
stc
xor
or
xchg
mov
xchg
std
mov
arpl
xor
mov
inc
sub
push
and
mov
test
xor
fadds
pusha
jbe
xor
sbb
imul
into
into
addl
sarb
add
pop
or
dec
pushf
rorb
and
dec
cmp
add
rorb
shlb
pcmpeqw
xchg
xor
subb
sbb
sbb
pop
jo
mov
notl
pop
leave
mov
push
lea
aaa
and
sahf
push
nop
jbe
add
add
jb
add
test
mov
or
adc
adc
push
std
add
cld
mov
mov
jb
inc
mov
cmpsl
movsb
mov
add
daa
shlb
xchg
rol
insl
call
mov
push
out
aad
pop
fcoms
inc
mov
pop
pop
push
xchg
sbb
jbe
push
pop
mov
dec
je
dec
jne
dec
sbb
dec
sub
jp
xchg
movsl
pop
stos
push
or
push
push
mov
dec
test
pop
pop
out
ds
cmp
add
mov
data16
sbb
adc
mov
popa
adc
out
sbb
fwait
je
pusha
jg
fsubl
inc
dec
shlb
sbb
xor
or
cmp
and
dec
pusha
push
gs
push
mov
xchg
ret
push
cmp
lea
js
xor
scas
jle
out
jg
jno
roll
lret
ret
dec
loope
add
inc
inc
push
mov
daa
sbb
adc
push
inc
add
mov
out
out
stc
push
cmc
xor
cmp
lcall
push
in
sbb
sub
out
xchg
into
push
jp
popf
cltd
dec
push
ret
dec
ficomps
movsb
cmpsl
xorb
scas
out
push
push
sarl
jp
xchg
xor
xchg
xchg
add
and
inc
or
sub
lea
sub
xchg
or
or
sub
rol
and
or
cmp
cmp
pop
jl
fmull
dec
dec
pop
out
out
inc
pusha
stos
loope
arpl
sbb
orb
jne
mov
cmp
xchg
lahf
or
mov
xchg
push
push
jge
mov
push
pop
sbb
push
jl
xlat
jg
lea
add
push
adc
out
xchg
jo
pop
lea
pop
lcall
es
out
or
loopne
add
pop
sbb
add
mov
inc
lahf
dec
addb
jo
sahf
add
cs
push
jb
cmp
pop
adc
or
add
popf
xchg
fld
test
add
mov
add
sub
cmp
adc
lahf
shrl
test
dec
adc
jo
test
dec
pop
int3
gs
xor
push
mov
mov
insl
xchg
lea
je
gs
or
cmpsb
test
dec
cmp
xlat
and
fadds
into
daa
add
rcl
lcall
cli
inc
inc
fimull
add
mov
adc
andb
jecxz
je
ss
inc
pop
ret
adc
jae
mov
incb
pusha
push
addl
jl
cli
pop
dec
fiaddl
div
rclb
or
push
jns
mov
dec
or
rcrb
fsubl
cld
xor
push
push
loopne
dec
sub
or
sub
fcoml
in
or
dec
and
add
lea
mov
push
aam
or
xchg
daa
inc
cmp
push
les
add
cmovle
roll
push
mov
adc
fidivl
std
aas
jbe
insl
adc
add
inc
inc
imul
clc
and
mov
push
cmp
sub
orb
mov
outsl
mov
adc
sbb
fidivrs
dec
adc
gs
dec
cmp
adc
adc
test
inc
mov
nop
inc
shlb
pusha
loopne
sbb
adc
sbb
jbe
or
es
arpl
orb
sbb
in
sbb
jp
mov
mov
and
mov
mov
cli
add
out
jecxz
inc
loope
inc
xchg
push
pushf
imul
or
cld
add
addb
and
call
add
lahf
mov
testb
out
mov
push
lock
inc
addl
jo
jno
mov
pop
adc
jmp
add
ja
adc
les
mov
ret
adc
cmpsb
push
jne
xchg
inc
push
fcompl
sahf
rclb
add
mov
pop
push
xchg
sar
push
lcall
pop
mov
leave
popa
std
insb
mov
dec
sub
pop
jl
mov
adc
mov
adc
fbstp
or
outsl
jne
pop
bound
sbb
xor
add
outsl
push
cmp
cmpsl
cmc
outsb
daa
fisubl
or
into
push
cmpsl
adc
or
or
adc
sub
ret
push
dec
jle
push
mov
int3
mov
nop
xor
mov
jne
test
ret
push
pop
and
lock
cmp
or
sub
ds
shlb
push
mov
jnp
and
dec
out
decb
adc
rolb
test
call
in
cmc
outsb
test
cmp
mov
cmp
jne
shrb
arpl
sub
adc
xchg
les
pop
cmp
dec
scas
cmp
adc
jp
insb
or
sbb
xor
push
jmp
add
jo
inc
xchg
mov
scas
add
inc
pop
into
add
xor
fldt
and
cmp
aaa
and
jbe
jb
push
sub
dec
dec
loopne
adcl
push
or
adcb
or
pop
cmp
je
das
xor
sbb
push
and
dec
rorb
push
xchg
pop
add
push
fimull
push
mov
cli
std
mov
push
sub
pop
je
repz
or
repnz
push
xor
push
nop
lods
inc
lds
out
push
rcrb
push
add
add
in
sbb
mov
shll
or
or
or
mov
add
xchg
add
pandn
inc
or
adc
push
sub
data16
in
pop
push
je
mov
loopne
dec
sub
mov
mov
gs
fwait
sbb
mov
inc
lock
jl
scas
mov
adc
sahf
sub
mov
sbb
xchg
add
and
les
inc
push
push
cmp
mov
ret
push
out
jmp
mov
xchg
add
mov
pop
loope
aaa
add
inc
or
cmp
ror
dec
stos
dec
add
push
sbb
cmp
pavgb
pop
cmp
fcomip
pusha
mov
nop
add
fstpl
fildl
add
inc
sbb
stos
sbb
push
addl
sub
cs
pusha
mov
inc
and
xchg
cli
add
movsl
push
out
fistpl
dec
movsb
add
daa
sbb
jbe
or
sbb
dec
sbb
fidivrl
aam
xor
fisubs
ret
es
add
stos
dec
and
add
add
mov
adc
dec
fincstp
dec
xchg
mov
or
and
jne
sbb
jns
scas
stos
add
rcr
dec
add
mov
mov
mov
cli
xchg
loop
imul
mov
lods
mov
and
dec
adc
nop
jp
loop
pop
sbb
pop
cmp
push
ss
enter
bound
add
aam
inc
add
shlb
iret
je
and
jle
fsubrs
dec
lahf
dec
adc
adc
pop
sbbb
xchg
jge,pt
pushf
xor
inc
fmuls
mov
inc
cmp
aas
mov
lret
inc
movsb
xor
rorb
xchg
push
inc
push
inc
dec
lods
or
push
cmp
insl
jl
adc
lret
movsl
scas
add
test
sub
setns
add
add
pop
xor
fcomps
das
shlb
sub
iret
or
sbb
clc
dec
out
pop
je
inc
inc
lretw
xorl
dec
shl
dec
pusha
xchg
inc
les
mov
sbb
and
lcall
pusha
repnz
outsl
cltd
add
js
sbb
mov
mov
nop
pop
mov
inc
cli
enter
xchg
inc
stc
mov
or
mov
sbb
inc
pop
popa
jnp
inc
popl
dec
cmpsb
lods
pop
mov
adc
xchg
pop
stos
sbb
mov
sbb
les
xor
mov
scas
xor
push
aas
push
mov
and
adc
inc
sub
pop
jmp
add
inc
repnz
js
dec
test
inc
xchg
fcom
arpl
nop
mov
sub
mov
addr16
js
pop
repnz
in
or
mov
sbb
and
add
cmpsb
jl
xorps
or
mov
mov
sub
sti
add
xchg
das
inc
loopne
sbb
das
cmp
movsb
xor
xchg
pushf
xorb
push
sbbl
lods
sbb
aaa
cmp
adc
cs
or
pop
insl
test
pop
mov
out
sti
jbe
sub
orb
add
inc
nop
imul
test
sbb
dec
dec
dec
inc
xor
pop
or
test
arpl
pop
fcomp
mov
xchg
push
adc
inc
ja
loope
jno
mov
jne
adc
pop
fs
clc
pop
aaa
or
orb
dec
xor
inc
add
ljmp
adc
add
pop
rorb
fisubl
sahf
cs
pop
add
hlt
adc
xchg
adc
and
aad
or
mov
jmp
jle
mov
mov
nop
sbb
or
pop
mov
out
dec
loopne
and
sbb
into
out
lods
orl
je
call
adc
mov
pop
stc
dec
jl
aas
sbb
lcall
cmp
outsl
mov
loop
dec
push
je
mov
xor
mov
sbb
push
xlat
mov
aad
aas
scas
adc
xor
ret
call
das
cmp
sub
xchg
insl
cmp
std
jg
adc
ret
test
jne
adc
and
fimull
ds
nop
arpl
jp
sbb
inc
nop
lcall
add
movlps
adc
mov
and
pop
sbbb
mov
inc
sarl
xor
scas
xchg
and
lods
fs
icebp
mov
or
adc
hlt
ret
sbbb
cmp
inc
in
push
pusha
mov
cltd
das
xchg
xchg
inc
lds
sbb
sbb
sbb
in
add
pop
sbb
sbb
add
jmp
inc
and
inc
mov
pushf
ficoms
lock
in
pop
clc
popf
loopne
dec
cmp
mov
jl
inc
ss
add
or
mov
and
rolb
fstpt
jne
pop
sub
int
lods
ljmp
pop
xor
jmp
sub
mov
loope
imul
pop
push
in
sub
push
mul
sbb
and
bound
and
xor
leave
shll
or
cmp
lea
dec
fadds
sbb
mov
pop
mov
push
adc
xchg
and
add
cmp
push
and
aad
dec
inc
not
adc
cmp
fistpll
das
shr
adc
lahf
sub
sub
adc
movsl
xchg
cmp
test
outsl
movsb
inc
xchg
add
jns
inc
sub
mov
cld
inc
mov
jne
adc
or
dec
adc
push
push
adc
xorb
lock
sbb
pop
sub
mov
nop
jae
push
xor
push
lock
ret
lahf
push
roll
lods
lahf
daa
lock
push
imul
or
cmp
jne
push
aas
cmp
push
push
cmp
lret
sbb
nop
cmp
repnz
or
adc
adc
sbb
inc
push
scas
pop
mov
nop
inc
and
inc
sub
and
mov
hlt
and
cmp
add
call
jg
push
dec
testb
les
push
lods
lock
cmpb
cmp
ret
loop
inc
jle
jg
dec
cmp
inc
push
cmp
inc
dec
jo
add
push
inc
insb
outsb
jmp
pop
pop
adc
add
or
shrb
inc
sub
mov
mov
inc
add
jmp
xchg
push
dec
sub
nop
push
mov
jl
mov
push
outsb
jbe
dec
jb
lock
adc
inc
and
in
fisttpl
mov
pop
js
jae
jnp
lea
or
adc
andb
popa
sbbb
xor
sarb
cmp
cmp
jbe
mov
cmp
push
push
addr16
xor
shlb
jae
add
ds
inc
je
aam
mov
enter
or
jae
adc
pop
mov
push
dec
ja
jne
or
mov
xchg
xor
pop
pusha
xor
add
or
push
jne
loop
iret
insb
or
mov
pop
fidivl
mov
ret
xchg
pop
jbe
dec
or
sbb
ret
lock
mov
jo
xchg
filds
mov
es
vfrczsd
cltd
ljmp
lea
push
push
stos
cmp
add
push
xchg
sub
adc
adc
push
xchg
mov
test
repz
jns
les
mov
push
aaa
push
inc
mov
fimull
test
adc
and
sub
push
jecxz
lods
xor
imul
das
jb
xor
mov
gs
imul
sbb
mov
jbe
std
xchg
mov
sar
cmpsb
add
ret
dec
jne
cmp
jb
xor
clc
rcll
aas
shl
inc
sbb
sbb
jo
sbb
dec
jmp
mov
dec
lahf
add
outsb
sti
add
test
mov
fnstcw
jmp
pop
mov
xchg
mov
jb
es
and
sub
scas
fs
dec
dec
sub
pop
or
fiadds
cmp
orl
pop
ss
call
les
pop
adc
adc
xchg
rorl
mov
addr16
movsb
repnz
dec
inc
and
mov
push
adc
mov
mov
push
push
xchg
inc
ret
and
add
lcall
sbb
cmp
xorl
dec
add
sbbb
aas
lret
divl
inc
pop
cmp
dec
adc
inc
out
pop
loop
inc
les
jle
xlat
lea
mov
pushf
sbb
mov
and
inc
jge
push
out
xor
in
and
dec
dec
cmpsb
rcrb
dec
adc
mov
sahf
pop
dec
pusha
jbe
xchg
xchg
out
ret
lret
push
add
out
out
dec
pusha
dec
lcall
inc
and
rcr
push
and
mov
sub
mov
adc
in
sbb
push
cmp
cmp
ja
mov
push
jp
pop
sbb
sbb
mov
or
loop
fnstenv
mov
mov
pop
push
inc
movsb
add
test
mov
cli
xor
cmp
jbe
mov
cmp
mov
addr16
add
push
push
mov
jae
cli
inc
mov
or
mov
mov
jle
add
sbb
sti
or
clc
sub
outsb
test
add
mov
mov
cmp
jb
xchg
icebp
and
jmp
mov
repz
adcl
roll
inc
popa
lock
and
loop
add
mov
adc
pop
mov
push
mov
add
adc
mov
iret
sub
mov
adc
mov
xor
and
movsb
mov
sbb
ja
js
inc
push
xor
push
push
lea
popa
roll
adc
jmp
mov
in
loop
or
sbb
mov
jg
lahf
sub
outsb
and
pop
and
dec
pop
xor
pop
pop
vmovshdup
and
lahf
std
jae
pop
dec
mov
fildl
jb
outsb
xor
xor
pop
cmpsl
sub
movsb
push
std
leave
sbbb
fistpl
movsl
jb
lcall
pop
xor
mov
inc
xor
jmp
push
or
jns
mov
iret
add
int3
leave
leave
mov
mov
in
sub
incl
adc
in
mov
shlb
cmp
or
jp
mov
fmuls
push
cmp
sub
jne
xchg
imul
inc
jl
push
push
push
daa
outsb
and
inc
mov
enter
cmp
loop
inc
push
pop
adc
sub
call
shrb
sbb
xor
push
addb
and
mov
xor
insb
cmp
jns
push
adc
daa
mov
call
push
pushf
xchg
mov
add
je
fwait
xchg
int3
push
dec
or
lea
jl
loope
mov
insb
pop
jg
fcmovb
or
xchg
fcompl
sub
loop
jg
push
dec
push
adc
xchg
subb
sbb
cli
aas
inc
lcall
mov
sub
or
adc
mov
ja
push
push
sbb
fsubrs
and
cmp
int3
inc
je
scas
inc
jmp
xor
movsb
bound
cmp
push
pop
fs
arpl
pop
dec
push
add
add
add
shl
pop
cmp
or
jl
adc
cmp
xchg
mov
mov
jge
fwait
into
and
pop
cld
or
rcr
mov
clc
jecxz
fistpll
push
add
sar
scas
push
mov
rcrb
mov
adc
inc
xchg
push
dec
jecxz
mov
icebp
aad
shrb
dec
add
bound
pop
scas
push
in
mov
xor
or
shld
inc
pop
loopne
mov
jne
repnz
dec
pop
adc
xor
inc
xchg
mov
outsb
js
sbb
lret
adc
outsb
jns
push
mov
adc
mov
cmp
xlat
inc
shll
add
ret
push
mov
xchg
adc
jmp
xor
mov
movsb
inc
in
dec
sbb
call
and
add
pop
cmp
jne
cmpl
jne
adc
inc
mov
adc
inc
mov
insl
and
lahf
mov
jne
cmp
in
mov
daa
cmp
jne
and
cs
js
xchg
xor
outsb
or
fmull
jl
inc
xor
loop
mov
pop
inc
movl
addr16
dec
jmp
mov
adc
cmp
pop
or
fldenv
mov
in
fs
hlt
popa
scas
dec
push
jnp
add
push
les
fsubr
pop
lock
or
jle
and
je
lds
imul
ss
pop
jmp
fucomp
or
jmp
pusha
pop
adc
fcomp
out
insb
jmp
dec
sbb
sti
lcall
aad
dec
adc
insb
jne
push
jo
mov
push
sbb
test
sbb
or
subb
push
or
adc
pop
jae
orb
insb
push
sbb
adc
dec
shr
push
push
mov
jg
daa
jmp
mov
add
fcompl
mov
jp
out
mov
xor
rcrb
fbstp
lock
call
outsb
mov
or
aas
movsb
sarb
sbb
frstor
iret
je
orl
pop
rcrb
pop
jl
loop
add
jns
pop
cmp
and
sarb
lcall
sbb
cmp
lds
mov
xor
ret
aas
and
loop
addb
mov
shlb
ret
sub
push
inc
xchg
cmpl
add
inc
ret
sti
xor
dec
or
mov
out
inc
pop
mov
pop
add
mov
addb
and
es
aas
mov
sbb
jbe
lds
pusha
and
subl
popl
add
movsb
adc
test
loop
outsl
imul
pop
cmp
cmp
pop
sbb
mov
mov
pop
mov
dec
inc
imul
xchg
adc
pop
scas
add
iret
or
xor
sbb
dec
jp
ds
stos
push
adc
loopne
testb
add
and
jp
jmp
push
call
and
push
mov
inc
xor
sbb
lods
and
imul
mov
fdivs
call
jp
sbb
jecxz
mov
push
shlb
cmp
out
mov
data16
call
mov
mov
nop
testb
data16
rcrl
pop
cmp
inc
mov
push
dec
outsl
aam
or
adc
jle
imul
and
sub
inc
inc
jmp
push
mov
jne
dec
sbb
xchg
mov
rclb
leave
js
fistl
push
add
jb
call
lcall
pop
je
jne
lea
or
incl
xchg
inc
movsb
sbb
andb
push
andl
fbld
es
test
add
or
mov
or
sub
lock
jge
out
rolb
or
loop
add
adc
sarb
std
in
or
js
adc
push
es
fadd
and
push
sbb
clc
push
scas
daa
je
icebp
or
add
dec
sbb
add
das
or
fcomip
push
pusha
and
sarb
xchg
adc
xchg
mov
mov
cmp
xor
xor
test
pop
push
mov
push
lea
or
cmp
mov
clc
scas
movsb
push
dec
add
cmpsb
xor
push
mov
mov
lcall
and
add
bound
mov
sbb
scas
mov
xor
sub
je
cmp
push
mov
sbb
loopne
sarl
shlb
and
push
push
cmp
mov
adcb
lret
and
lret
adc
xchg
push
mov
pushf
adc
push
xchg
fildl
icebp
mov
out
pop
push
notb
lea
into
lea
add
lcall
and
sub
mov
call
xor
pop
fimull
test
jnp
dec
and
or
shrb
push
or
fnstenv
sub
outsb
xlat
push
pop
sub
or
xor
dec
das
mov
add
pop
xchg
mov
mov
inc
push
push
es
mov
loop
insb
mov
hlt
sub
mov
sub
test
dec
jne
sbbl
sbb
leave
adc
cmp
xchg
test
stos
mov
jne
clc
mov
icebp
lods
or
jmp
pushf
mov
leave
cs
ret
out
jl
or
and
pop
inc
mov
xchg
dec
sbb
sbb
adc
or
mov
rcrb
aaa
mov
jle
push
mov
fdivr
lea
push
push
push
insb
add
aam
xchg
xchg
cmp
pop
jb
jb
enter
pop
jg
xorb
adc
shlb
pusha
push
pushf
adc
inc
or
inc
dec
in
add
pop
push
dec
sbb
das
and
dec
je
dec
mov
xor
xchg
push
mov
xorl
xchg
cmp
cs
inc
enter
push
adc
rorb
xorb
cmp
sub
sbbl
clc
arpl
cmpsb
mov
xor
mov
jne
push
pop
inc
push
xor
cmpsl
jmp
inc
xchg
push
out
shl
cltd
inc
sub
scas
into
in
sbb
aad
push
fdiv
inc
outsb
outsl
pushf
or
add
ret
test
adc
aas
outsb
enter
xor
mov
jl
push
sahf
sub
add
arpl
adcl
push
cs
stos
test
sbb
and
adc
imul
sbb
inc
lahf
jbe
sub
dec
clc
inc
mov
rolb
sarb
ss
adc
ja
pop
mov
push
addr16
inc
pop
test
cmp
mov
sub
sub
jbe
sbb
or
insl
pop
add
lods
cmp
add
insb
sbb
insb
inc
int3
sub
sahf
or
jmp
pop
out
cwtl
inc
out
xchg
xorl
cmp
push
loope
jl
mov
or
xorl
jle
push
fmuls
sbb
push
lcall
idivl
lods
icebp
into
and
inc
or
stos
pop
test
cmp
or
adc
cmp
test
test
mov
or
jo
stos
xor
ljmp
fadd
or
and
addr16
popf
dec
das
add
adc
and
mov
sbb
push
roll
loope
mov
in
lcall
push
jbe
or
inc
pop
pop
xchg
pop
call
out
mov
popa
dec
dec
pusha
xchg
adc
icebp
sbb
jle
je
pusha
mov
push
or
sub
xchg
and
cwtl
pop
adc
cltd
mov
and
inc
call
inc
mov
loop
orb
fisttps
push
add
pop
sbb
push
lahf
pop
dec
adc
cmp
lods
sub
and
sbb
movsb
adc
jge
lock
pop
adc
lcall
aas
push
add
les
or
adc
rclb
lock
jne
mov
and
sub
sbb
xchg
cmpsb
push
sbb
add
and
pop
push
dec
jo
or
stos
and
sahf
aam
das
mov
imul
pop
js
addb
xchg
jbe,pn
daa
nop
jne
jp
int
mov
orl
mov
dec
push
sub
pushf
icebp
fdivrl
cs
pop
add
push
adc
lea
mov
adc
loop
inc
scas
in
ja
dec
and
inc
dec
adcb
je,pt
push
in
stos
cmp
repz
cltd
jg
xor
jecxz
in
xchg
das
xchg
cmp
mov
jecxz
pop
mov
into
bound
sub
test
mov
cmc
adc
push
inc
jae
pop
add
push
xor
sbb
add
inc
inc
in
mov
dec
ret
loopne
add
popa
and
ss
sbb
cmp
cmp
ss
movsl
cmp
jb
dec
lock
xchg
dec
jmp
add
inc
sub
pop
mov
subl
push
push
ss
cmp
push
add
add
pushf
in
jge
xchg
and
loopne
idivb
xchg
out
imul
test
or
mov
inc
lea
xchg
jno
inc
inc
in
test
bnd
push
sub
and
xchg
sti
inc
xor
xchg
addr16
sub
mov
int3
mov
pop
lods
pop
mov
mov
push
jecxz
inc
mov
sub
sub
inc
push
inc
in
mov
lods
mov
fiadds
cmp
jmp
pop
add
insl
sub
les
push
ret
sub
cltd
pop
mov
xor
into
pop
movsb
add
loop
dec
in
add
es
xor
push
mov
ret
xchg
mov
adc
inc
pushf
mov
jo
inc
es
xchg
leave
ds
sbb
roll
sbb
icebp
xchg
or
and
pop
ss
sub
pop
sub
sbb
out
mov
mov
cmp
jecxz
ret
dec
pop
sbb
mov
data16
or
jle
loop
add
rcll
shlb
or
jbe
mov
mov
inc
cmp
inc
mov
inc
fisubs
xor
pop
cmc
lods
cwtl
and
mov
in
mov
loopne
sbb
js
sub
add
nop
movsl
xchg
xchg
pop
addr16
sbbb
nop
out
rcr
jle
push
xor
inc
dec
xchg
movsb
mov
dec
in
mov
dec
and
jno
dec
xor
add
push
std
inc
sub
hlt
jb
push
jl
jne
and
pop
pop
or
rorb
adc
dec
jmp
cmpsb
fidivs
sbb
movsb
sbb
sbb
push
lret
js
dec
sub
in
rolb
xchg
pop
dec
not
cmp
lds
sbb
add
pop
popf
pop
push
jmp
loopne
loope
lock
mov
popa
inc
inc
rcr
sub
movsl
inc
shl
inc
sub
xchg
push
mov
pop
fwait
jle
cmp
push
jo
cli
inc
les
add
punpckhwd
jbe
add
mov
rcl
push
mov
sbb
push
pop
arpl
dec
rolb
or
jmp
jb
in
inc
adc
jecxz
inc
adc
dec
jl
out
cmpb
out
insb
dec
sbb
lods
xor
ficoml
pop
psllw
outsb
mov
xor
dec
arpl
xchg
sbb
inc
lods
dec
lods
cwtl
push
les
push
mov
xchg
clc
es
std
pop
imul
loope
jo
sub
adc
dec
fs
and
or
int
mov
jbe,pn
xchg
and
decb
popa
in
push
and
and
test
xchg
xchg
jns
and
jno
or
xchg
xor
xchg
pop
mov
xchg
lods
push
stos
pop
inc
xchg
mov
sub
mov
add
or
or
dec
in
dec
xor
jns
imul
xor
pop
fadd
pop
dec
fldenv
pop
addr16
adc
and
adc
pop
push
out
inc
mov
jo
sbb
dec
dec
pop
inc
testl
andb
add
adcl
mov
pusha
cs
scas
mov
lahf
push
rcrb
push
pop
add
rcl
enter
jl
pop
insl
jmp
mov
dec
xlat
sbb
and
pusha
test
popf
add
xchg
cmpsb
dec
mov
pop
cmp
xor
test
pop
jo
out
rcrl
pop
mov
mov
incb
lock
rorl
pop
mov
add
jmp
arpl
ret
jp
mov
jne
int3
dec
ret
and
dec
icebp
idiv
push
dec
dec
dec
mov
push
add
shr
loopne
cli
ret
pop
orl
and
mov
inc
call
push
addb
xchg
or
inc
jo
mov
push
adc
into
out
pop
mov
add
insb
lret
jae
adc
test
add
adc
inc
das
pop
sbb
sbbb
lea
add
adc
sub
adcb
push
das
js
or
push
jo
fcmovnb
add
or
lret
push
or
xchg
dec
or
push
dec
push
sub
sub
lock
cmp
cmp
dec
gs
js
aaa
pop
dec
inc
icebp
ss
shrb
push
cmp
push
std
test
push
imul
lods
jl
cld
popa
mov
sbb
sbb
shlb
cmp
add
sbb
dec
jb
cmpsb
inc
pop
outsb
scas
sahf
lcall
pop
push
insb
data16
cmpsb
test
sbb
mov
js
and
ret
in
idiv
cwtl
test
shl
jl
xchg
je
adc
jmp
sub
mov
into
add
into
sbb
dec
or
and
mov
jl
test
adc
jl
jno
rol
fistpll
je
add
mov
or
xor
movsl
jb
adc
stos
imul
adc
add
orb
lods
mov
mov
jns
outsb
ds
lock
and
or
dec
pop
loopne
sarb
call
loopne
and
xchg
hlt
push
call
dec
jmp
aam
out
inc
sub
pop
add
daa
test
aad
jne
ljmp
jo
mov
in
call
mov
cmp
pop
loope
push
int
ds
add
and
mov
adc
or
push
rolb
clc
mov
daa
add
fdivl
lea
xchg
adc
jnp
lds
push
jnp
inc
inc
test
movsb
adc
pop
mov
push
xchg
fidivs
leave
or
sbb
cmp
add
and
pushf
hlt
sbb
sbb
adc
mov
pop
sbb
rolb
movsb
push
pop
dec
push
xor
mov
inc
sub
pop
ja
test
das
or
add
mov
pop
fstpt
jle
movb
scas
sahf
or
jg
pop
movsbl
je
or
test
add
pop
test
push
insb
add
lret
inc
cmp
je
movb
mov
loope
pop
jne
xor
idiv
inc
sbb
pushf
dec
cmpb
xchg
mov
and
mov
jo
push
mov
mov
dec
call
add
and
mov
xchg
lock
cmc
verr
mov
xor
aad
mov
movsl
mov
add
mov
and
sub
js
lea
loopne
addl
or
xor
cld
lcall
sti
lea
mov
mov
inc
dec
jne
lods
or
idivl
das
mov
xor
mov
mov
add
mov
bound
vcmpss
mov
std
sbb
mov
pop
sahf
pop
add
lea
cmp
jmp
jecxz
pop
mov
repnz
add
pop
pop
repnz
jmp
sbb
fcoms
shll
insb
loopne
movsl
mov
push
add
adc
ja
rclb
mov
dec
sbb
hlt
xor
jge
ffree
not
mov
dec
mov
loopne
ss
mov
rclb
jp
outsb
inc
sub
stos
enter
or
mov
sub
or
push
adc
adc
mov
push
lret
adc
mov
js
mov
push
mov
shl
and
push
pop
outsl
lods
mov
mov
jmp
inc
shl
xchg
pop
xchg
fwait
je
mov
ljmp
sar
popf
in
or
inc
or
push
ljmp
dec
es
xor
cmp
bound
stos
bound
popa
xor
hlt
pop
xchg
std
stos
xor
xlat
adc
rcrb
adc
lds
lahf
sub
mov
mov
xchg
insb
add
xchg
sub
sub
mov
clc
stos
ret
aas
and
loopne
loop
jge
jg
shlb
and
outsb
aas
jne
or
mov
int3
or
push
mov
or
popa
bound
dec
pop
inc
or
push
fadds
iret
or
inc
ljmp
movsl
je
mov
xor
sti
sahf
les
mov
inc
mov
movsl
push
push
int3
dec
adc
push
and
xchg
mov
add
in
movsl
shrb
shrb
fmull
adc
or
mov
xchg
mov
loopne
out
hlt
mov
cmp
adc
sahf
pushf
inc
ja
sbbl
sti
pop
cmp
lahf
xor
sbb
or
popf
outsb
lea
cmp
pop
jnp
fdivl
sbb
test
and
adc
aas
outsl
add
and
shlb
or
pop
aam
jmp
fldenv
dec
and
scas
out
jno
sahf
or
jno
dec
std
xor
sti
lods
lahf
insb
das
push
mov
dec
inc
in
jge
inc
into
xchg
xor
xchg
mov
test
cmp
push
adc
scas
test
loop
cmpsb
mov
fwait
sub
cli
frstor
or
ror
sub
mov
mov
icebp
jmp
dec
or
fldenv
sbb
int3
pop
lods
cmc
dec
loop
mov
mov
push
pusha
in
sub
and
mov
inc
mov
mov
out
incb
enter
or
sbbb
sarl
xchg
out
rcrl
rcrb
bnd
add
pop
inc
xor
xor
test
and
inc
xorl
pop
xchg
push
xchg
adc
popa
jo
lret
and
jb
xchg
sbb
sar
xor
dec
dec
mov
addr16
daa
inc
das
dec
push
mov
jo
pop
ret
xor
jmp
add
add
push
inc
sbb
cmp
push
pusha
push
sbb
rolb
and
inc
sbb
sar
push
enter
pop
sbb
sbbl
or
cmp
insb
ret
sbb
xor
add
inc
and
xchg
xor
cwtl
mov
jne
dec
cmp
es
bnd
cmpsl
scas
jb
scas
dec
pushf
lret
sbb
pop
fs
pop
or
sbbl
sbb
lods
cli
push
sbb
mov
add
adc
sub
and
sbb
fistpll
sub
inc
or
add
sbb
push
pop
test
rol
orb
rcrb
cmp
jo
addl
sbbb
je
pop
bound
jmp
or
add
insl
in
xchg
dec
and
xor
jg
pop
push
adc
mov
dec
xchg
push
adc
mov
mov
mov
add
inc
mov
or
shrb
aaa
sbb
shlb
jge
hlt
sub
inc
sbb
mov
sbb
jg
mov
lock
rol
push
sti
dec
xchg
ret
lds
push
sbb
insb
bsf
scas
loop
jmp
mov
sbbl
pop
mov
cmpl
xchg
mov
adc
jp
dec
xchg
xchg
xor
or
pop
or
jns
pop
clc
inc
out
mov
and
daa
add
mov
fwait
adc
movb
mov
push
mov
push
sahf
outsb
loop
dec
clc
aas
daa
fdivrs
lea
mov
pop
inc
sbb
adcl
nop
fstl
out
fdivrs
pushf
gs
bound
test
ljmp
jae
shll
or
push
sub
adc
xor
mov
xor
mov
xor
adc
ja
pop
adc
mov
mov
sbb
push
xor
push
or
jl
sub
cwtl
lock
imul
mov
push
or
les
push
insb
adc
rorl
scas
or
dec
cmpsl
in
dec
sbb
nop
popa
pop
daa
inc
add
mov
mov
mov
pop
push
cmp
test
inc
in
cld
test
fnstenv
idivl
std
and
int
jb
push
fs
inc
and
dec
push
jbe
shlb
lods
adc
adc
mov
and
loope
pop
hlt
xchg
adc
push
ljmp
dec
mov
sbb
sbb
pop
jp
loope
cmp
xor
add
sub
daa
push
test
push
pop
jb
jb
rcll
cmpl
pop
push
or
mov
push
into
dec
jns
xchg
mov
incl
pop
xlat
push
sbbb
andl
or
xor
shl
push
bound
shr
xchg
push
or
insl
loope
or
dec
mov
or
dec
inc
mov
jp
mov
pop
push
jno
xor
jle
test
inc
inc
in
mov
push
mov
xor
inc
aas
sbb
push
and
adc
aas
nop
arpl
ret
push
mov
mov
test
push
push
inc
or
dec
lods
ret
inc
mov
addr16
push
xchg
ret
cmp
inc
stos
xor
sub
add
fstl
cmp
imul
and
adc
clc
push
loope
sub
cmp
jg
xor
sub
cmp
sbb
out
push
sub
das
cld
popf
mov
faddp
sti
imul
mov
jne
add
jp
adc
roll
inc
stos
movl
mov
test
subb
imul
test
pop
xor
scas
cmp
push
or
push
jp
sub
cs
shrb
pop
or
sub
bound
adc
cli
dec
and
add
dec
outsl
loopne
sub
ret
rcl
repnz
pop
push
mov
xchg
push
dec
inc
push
fs
xchg
imul
add
out
enter
xlat
fbld
jl
sbb
xor
shll
loopne
mov
jl
adc
adc
popl
pop
stc
push
movsb
ret
sub
in
adc
addr16
dec
dec
cmp
shlb
or
jg
push
loop
lcall
jmp
sub
adc
xchg
movsb
pusha
clc
dec
add
mov
sub
or
or
adc
test
xor
inc
mov
scas
xor
lock
pop
inc
sbb
sub
ret
in
shrb
scas
popf
jo
sub
dec
stos
and
popf
push
imul
xor
inc
jns
pop
jns
xchg
lods
jl
mov
push
or
add
jge
mov
pop
sbb
xor
js
inc
subl
fldl
sub
add
div
mov
mov
mov
xchg
xor
mov
test
sbb
std
push
adc
cmp
call
rclb
mov
xlat
dec
aad
movsb
push
outsl
pusha
push
lea
lods
inc
cmpsb
jp
sar
and
push
mov
jns
mov
sub
add
xor
call
jmp
pop
jecxz
in
in
sub
and
mov
test
sbb
mov
sub
mov
sub
mov
cmp
mov
xchg
imul
sub
push
int3
or
inc
xor
lret
or
or
sbb
push
sub
adcb
icebp
add
adc
mov
sub
cwtl
pop
xlat
adc
jp
test
jne
lods
pop
test
shlb
int3
push
adc
shl
insb
xchg
adc
pop
clc
mov
jg
lret
shl
pop
js
dec
push
push
adc
and
push
dec
das
insb
pop
dec
xor
sub
lret
or
inc
mov
ja
cmpl
fldl
idivl
dec
sub
icebp
jge
mov
sbb
andl
mov
leave
dec
and
mov
sbb
pop
sbb
or
mov
or
lock
or
mov
test
sbb
pop
mov
push
imul
out
mov
nop
and
push
lcall
add
mov
dec
sub
incb
add
xchg
mov
mov
lods
or
dec
push
fldl
inc
mov
mov
mov
data16
stos
and
xchg
mov
test
sub
jge
push
adc
pop
dec
dec
add
push
test
pop
loope
cmp
inc
clc
dec
aam
imul
sbb
repz
lds
add
cs
test
dec
sbb
and
mov
mov
cmp
lret
lds
sbb
pop
jo
push
and
not
push
mov
mov
mov
xchg
jae
jg
nop
lods
pushf
cmp
adc
jmp
pop
mov
pushf
arpl
cli
inc
dec
lea
je
add
pop
jmp
popf
daa
cmpb
dec
inc
shll
mov
nop
mov
pop
xchg
mov
outsb
add
clc
pop
push
fdivrs
loopne
inc
inc
xchg
lock
ror
adc
lds
popf
sbb
popf
mulb
shlb
outsl
lods
imul
mov
xchg
or
and
into
inc
xchg
loop
sub
or
fistpll
clc
fmull
fstps
jl
popf
sbb
rcl
ss
aas
sub
adc
push
mov
push
pop
lds
add
push
rolb
ljmp
int
mov
mov
mov
loope
mov
dec
imul
and
sub
mov
pop
in
sbb
sbb
pop
out
jle
push
push
mov
xchg
bound
jb
das
xor
push
sbb
cmpb
sub
nop
cmpb
arpl
push
mov
inc
adc
faddl
dec
je
movsb
push
push
nop
jns
lahf
push
js
jo
dec
cmp
push
rorb
dec
xchg
pop
les
push
or
push
shrb
cmp
sub
mov
mov
insb
fiaddl
push
sbb
cmp
bswap
lret
jns
add
lods
or
lock
dec
mov
sbbb
ret
push
pop
movsb
ja
pop
mov
test
push
push
cmp
push
xchg
data16
sbb
rcrb
ss
sub
iret
push
mov
cmp
mov
cmp
dec
dec
and
mov
jo
sub
pop
push
sub
sbb
lret
mov
mov
mov
adc
jno
adc
mov
sub
fdivrl
leave
sbb
xor
pop
orb
or
xchg
or
dec
ret
pop
cmp
inc
leave
push
xorb
add
popa
xchg
mov
sub
push
fldt
cmpsl
lret
inc
push
sbb
cmp
push
pop
sub
call
and
dec
ja
mov
sub
test
lret
pop
jb
clc
jae
scas
or
pushf
adc
rcrb
xchg
lahf
mov
push
insb
dec
inc
lcall
fisubs
std
dec
push
aas
hlt
sbb
jbe
jnp
insb
pop
je
sub
sbb
stos
mov
or
mov
mov
cmp
lea
rolb
sbb
ficoml
inc
out
jo
pop
fistpll
add
pusha
pop
cmpsl
mov
push
arpl
push
daa
xchg
add
mov
push
xchg
fdivs
or
add
add
mov
outsb
or
xchg
mov
xchg
xchg
push
loop
clc
mov
je
or
or
lret
add
pop
jb
push
leave
lret
inc
jecxz
mov
in
or
arpl
inc
imul
jns
leave
mov
scas
imul
xchg
xor
lea
adcb
xchg
jne
ja
mov
cmpsb
adc
cmp
sub
pusha
add
sub
pop
lock
sbb
add
jbe
nop
mov
fs
loop
mov
sub
fimuls
xchg
pop
sub
adc
mov
push
mov
adc
pop
cmpsl
jns
xor
cmpsl
loopne
push
and
xchg
xor
and
repnz
mov
les
pmuludq
jmp
push
and
lds
dec
mov
in
push
inc
jecxz
test
add
dec
or
push
aad
push
test
jg
hlt
ret
stos
jmp
mov
pop
xor
xchg
test
ret
call
pop
jl
test
dec
adc
add
inc
adc
data16
stos
aad
xchg
mov
mov
sbb
mov
sub
lods
mov
xor
mov
les
add
xchg
jbe
mov
mov
cmp
mov
ljmp
jae
inc
sahf
inc
cmp
cmp
icebp
fwait
sbb
aad
cmpsl
sub
pop
je
xchg
jae
or
ret
inc
mov
gs
sub
mov
loope
push
jb
xchg
pop
jl
mov
dec
sub
inc
insl
cmpsb
lcall
xor
adc
ja
cmp
das
sbb
maxps
add
and
xchg
add
mov
xchg
loopne
repz
arpl
loop
mov
dec
jecxz
mov
popf
xchg
imul
andl
aad
mov
add
nop
adc
fadds
jle
mov
iret
shrl
add
and
testb
inc
cmpsl
jge
idivl
jp
imull
test
popf
xor
dec
jo
adc
jmp
arpl
daa
lock
sbb
ret
add
sbb
xchg
scas
pop
mulb
imul
fs
pop
lret
fsubrs
sub
push
cmp
cmpl
mov
fs
pop
push
sahf
pop
sbb
mov
shll
push
inc
mov
add
jb
inc
mov
xor
testb
sub
xor
push
cmpb
push
ret
ljmp
in
inc
cmp
jp
ficoms
ret
lret
push
test
out
and
rorl
push
sahf
addb
push
jl
mov
pop
add
push
and
and
mov
push
mov
xchg
sub
lret
stos
add
or
dec
rcrb
mov
adc
mov
inc
sbb
addb
or
adc
mov
sti
pop
xchg
push
ljmp
push
decb
out
mov
xchg
add
inc
sbb
dec
jne
mov
movsl
mov
pusha
push
push
das
sbb
or
sub
mov
add
jo
jle
add
pusha
push
cmp
add
and
in
or
ja
mov
xchg
mov
mov
sub
mov
pop
aaa
xor
clc
lock
fldcw
insb
cmp
or
insl
sbb
mov
add
add
mov
sti
addb
jbe
repnz
inc
pop
mov
addb
xor
jbe
mov
push
jo
push
push
push
pop
and
lcall
inc
dec
jmp
je
outsb
cmp
or
mov
mov
jnp
cmp
ret
lea
pop
pop
adc
xor
jle
mov
cmp
jp
inc
dec
jbe
insl
jne
outsl
or
mov
shll
or
clc
data16
ljmp
aam
sub
push
add
jnp
insl
adc
repnz
xchg
cmpb
add
adc
fwait
sar
adc
xor
sbb
pusha
cmp
sub
add
cmpsl
aam
dec
and
mov
jle
sub
and
add
lock
inc
jmp
sbb
adc
mov
or
dec
dec
js
sub
repnz
inc
cmc
outsl
add
bound
cmp
loopne
jp
daa
jmp
inc
mov
jl
fdiv
lret
push
dec
leave
inc
adc
adc
add
pusha
fbstp
or
xlat
leave
lret
addl
jne
adc
jmp
sti
jge
sub
pop
test
jmp
jo
inc
sbb
je
jp
or
out
pop
movsl
cmp
pusha
shlb
xchg
mov
jle
mov
adc
push
adc
mov
push
jl
iret
or
ret
adc
push
pop
daa
icebp
inc
cltd
push
es
loope
push
xchg
add
mov
mov
popa
xchg
aam
and
push
and
pop
adc
testb
pop
insb
xor
movsb
mov
pop
outsb
add
sbb
dec
mov
outsb
pushf
fcmovb
sti
test
aaa
fldt
add
mov
out
and
add
push
jmp
mov
loope
pop
mov
aad
add
sbb
aam
imul
cmpb
push
jo
fcomps
shr
les
xchg
inc
xchg
dec
test
lcall
inc
and
shlb
ds
or
mov
or
daa
cmp
push
fnstcw
or
inc
inc
rclb
xlat
test
mov
sub
add
mov
mov
js
inc
outsl
jmp
xchg
cmc
loopne
lret
jmp
cmp
jp
aam
mov
push
push
addb
repz
filds
cmp
jne
stos
add
mov
adc
mov
rcrb
std
and
cmp
cmpsl
mul
in
push
bound
add
gs
sub
repz
aaa
xor
jne
mov
adc
aas
push
and
stc
ret
push
dec
xor
loope
ss
push
add
cmpsb
int3
subb
mov
push
mov
loopne
into
push
into
sbb
sarb
mov
jge
or
ret
inc
push
mov
inc
mov
loopne
ja
dec
jne
pop
inc
mov
cltd
push
out
sub
ret
rorl
xchg
mov
and
pop
loopne
ret
add
dec
jo
inc
sub
sub
in
and
jge
and
fisttpll
jns
rorl
cmp
jae
sbb
adc
sbb
enter
lods
push
push
pop
loopne
sub
add
sbb
push
fisttpl
fistps
or
cwtl
lds
mov
dec
mov
cmp
cld
cld
xchg
leave
inc
cmc
scas
jns
fmul
mov
cmp
clc
push
mov
or
adc
pop
dec
in
add
sub
sub
mov
orb
and
mov
and
ljmp
out
mov
jecxz
push
pop
fisubrl
pop
mov
loope
mov
fwait
jnp
mov
and
dec
and
xor
int3
sbb
adc
inc
dec
dec
add
inc
sbb
pop
cmpsl
push
xor
sbbl
xchg
add
cli
dec
lods
dec
jo
cmp
popa
sbb
jbe
dec
inc
mov
je
out
push
xchg
jp
mov
push
cmp
fucom
sti
and
mov
lock
cmp
sub
inc
and
mov
adc
dec
scas
nop
sub
nop
or
xchg
adc
sbb
and
mov
orl
and
dec
je
nop
stos
mov
ret
pop
jne
add
out
mov
out
xchg
push
push
and
in
test
adc
mov
add
lea
lcall
pop
jmp
sub
aam
mov
in
jae
dec
aaa
sbb
jg
add
cmp
incl
faddl
push
adc
cmc
pop
xchg
js
shl
dec
adc
test
adc
popa
or
rorl
inc
add
push
sbb
pop
mov
iret
mov
jne
jle
xorb
cmp
cmp
push
push
pop
enter
add
or
xlat
call
testb
inc
mov
pop
inc
dec
das
popa
mov
jg
adc
popf
and
lea
je
insb
xor
sub
push
xor
sti
xchg
dec
mov
ret
mov
pop
mov
aam
adc
inc
push
push
and
mov
call
jge
xor
or
outsl
sub
sub
and
ds
outsl
jne
jae
scas
add
xor
icebp
pop
std
pop
pop
mov
arpl
add
sar
cmpsb
mov
outsl
int3
inc
mov
lea
add
push
adc
or
xor
ret
mov
add
cmp
push
xor
sub
sub
shr
mov
jge
test
dec
sub
push
testb
je
xor
call
das
adc
sub
loopne
stos
sbb
and
push
ficoml
or
data16
std
adc
cmp
mov
or
icebp
loope
cmp
cmpl
cmpsl
and
cmc
mov
das
cmp
lea
fmuls
fidivrs
cmp
pop
fcmovnu
dec
insl
jno
push
enter
or
add
stos
ret
push
jo
sbb
orl
pop
ss
lock
inc
inc
cs
pop
lea
mov
mov
mov
sahf
lahf
inc
sbb
cmp
js
call
sar
ret
test
jns
shrb
inc
inc
sub
cmp
jo
sti
pop
add
push
adc
mov
push
std
cmp
push
mov
daa
mov
cli
pop
push
into
mov
rcrb
pop
dec
push
lock
sahf
add
fiadds
xchg
xchg
pop
mov
adc
pushf
sahf
addr16
cli
pop
loope
ret
push
sbb
popf
add
jbe
sub
push
mov
and
sbb
ljmp
or
add
xchg
and
leave
cmp
inc
cmp
add
loopne
ret
mov
jle
adc
and
xor
push
add
cmp
mov
mov
inc
mov
fisttpl
mov
push
daa
cmc
aad
sbb
jl
lcall
mov
push
jge
and
sub
add
dec
mov
dec
inc
add
sub
and
add
mov
pop
add
jno
pop
cmp
push
popf
or
cli
push
dec
xchg
je
adc
iret
inc
push
pop
in
push
jo
xchg
xchg
mov
xor
jo
jne
mov
push
rorb
fists
add
rcl
popf
sub
enter
add
aad
mov
clc
out
add
dec
outsb
jg
mov
lea
mov
sub
fildl
hlt
std
mov
ss
and
inc
add
mov
jl
mov
cmp
push
push
push
sbb
lea
sub
mov
adc
dec
pop
call
pop
cli
xchg
pop
sub
or
mov
push
idivl
inc
lds
outsb
das
pusha
aaa
mov
mov
push
aad
mov
jp
jne
lea
xchg
sbb
sbb
lds
xor
call
pusha
sbb
js
int
shl
mov
je
pop
and
cmpsb
sbb
movsb
push
out
dec
mov
mov
add
sbb
sbb
xchg
pop
ret
imul
ljmp
pop
pop
mov
nopl
cmp
clc
nop
pop
push
bound
push
hlt
pop
or
cmp
cmpsb
es
add
shr
sarb
shr
and
adc
ss
mov
pop
dec
leave
add
test
ja
dec
inc
or
adc
add
and
xor
dec
push
xchg
jle
xchg
xor
add
sub
or
or
cmpsl
mov
fwait
outsl
push
sub
push
push
aam
aam
lods
sbb
hlt
mov
jbe
cmp
jp
rcll
mov
inc
shl
add
sbb
inc
push
stc
mov
or
out
loopne
cs
sub
lcall
mov
mov
mov
inc
jo
ljmp
pop
mov
dec
das
test
push
adc
jge
jne
push
sbb
adc
sub
cmpb
mov
inc
andb
push
insb
sarl
mov
jp
sar
or
decl
dec
add
cmc
pop
sub
xchg
or
out
das
add
xchg
rcll
mov
sbb
adc
mov
dec
dec
popa
sahf
mov
inc
ljmp
jp
or
dec
sarb
adc
cltd
push
sbb
loope
inc
mov
in
mov
mov
fiadds
je
mov
push
into
insl
shl
clc
fld
adc
sbb
mov
stos
lret
add
fsubs
jb
inc
loope
jg
loope
sbb
inc
inc
jg
js
in
fidivl
push
xor
insl
fwait
jg
outsl
sbb
outsb
bound
xlat
inc
aaa
pop
sbb
add
xor
xchg
cli
clc
add
js
fimull
or
jo
insl
das
stos
adc
sar
sub
fcmovnbe
cmp
and
xchg
mov
rorb
push
nop
adc
pop
ret
and
and
or
test
jecxz
jae
or
nop
cmc
add
cmpsb
mov
shl
imul
mov
mov
cmp
inc
push
sti
push
shrb
insl
mov
sub
ficomps
fisubrs
adc
int
pop
jmp
or
jmp
in
fisttps
jg
sub
jmp
cmp
jle
cmc
nop
fldl
sub
cmp
fnstsw
add
ret
ret
je
loop
aaa
mov
vgetmantss
pop
sbb
adc
pop
sub
jmp
cmp
jg
pop
xor
mov
into
cli
sub
sbb
arpl
jg
adc
sub
rcll
xor
movsb
in
adc
loopne
jle
mov
or
sub
cmp
cmpsl
xor
and
xchg
mov
jbe
cmp
mov
or
inc
inc
imul
mov
pop
inc
clc
and
push
mov
jo
mov
stos
cmp
and
sub
cs
enter
sbbb
adc
mov
call
pusha
ffreep
cmp
push
jmp
adc
js
and
js
lret
insb
sub
cli
daa
inc
ret
inc
add
push
inc
hlt
lods
lcall
lea
mov
or
clc
dec
lea
mov
pop
shl
test
sbb
mov
push
aam
xchg
aam
jmp
xchg
xor
cmp
jbe
outsb
inc
dec
jne
dec
jb
or
sub
and
jne
popf
add
bound
mov
loopne
or
shll
pop
aaa
pop
xor
push
xchg
loopne
sub
sbb
pop
cmp
push
popa
xor
dec
sti
mov
push
loopne
flds
das
jp
into
mov
cmp
mov
aaa
mov
sbb
push
outsl
pop
xorl
fildll
out
fld
jb
xor
mov
scas
pop
insb
je
dec
jo
cmpsl
sub
je
into
mov
mov
or
xor
dec
push
ud0
test
add
add
scas
call
outsb
and
insl
push
stos
add
mov
and
add
lret
xchg
xchg
in
adc
rcll
and
xchg
je
push
movswl
loope
push
mov
lahf
xor
imul
and
inc
aas
faddl
lret
inc
lcall
cmp
add
cmp
pop
cli
push
invlpg
push
add
lods
dec
push
push
or
and
nop
mov
enter
inc
push
mov
rcrl
lock
mov
mov
dec
pop
dec
cmp
jne
ret
add
imul
js
mov
insb
test
pop
mov
mov
pop
pop
repnz
adc
jmp
lock
push
mov
sub
xchg
lcall
sbb
sahf
jno
dec
xlat
push
inc
les
pop
inc
dec
xchg
loop
lock
fcomps
fdivs
xor
cmc
fidivs
add
andl
inc
roll
cmp
xor
xchg
cmc
rcrb
add
xor
in
icebp
je
or
sbb
mov
add
inc
adc
inc
lahf
std
cmp
jg
dec
cltd
mov
mov
xor
fsubrs
or
or
or
adc
mov
fistl
xchg
lock
inc
push
lea
jbe
aas
adc
adc
sbb
jle
xchg
jl
stos
xchg
int3
sar
std
sub
and
jmp
adc
cwtl
jl
sub
cmp
mov
jbe
mov
cmpb
fbld
sub
shlb
inc
sbb
pop
push
add
push
ss
inc
shrb
cmp
in
icebp
and
adc
lret
sbb
jg
push
ret
je
and
rcll
or
mov
jg
data16
rcll
pop
sub
xor
sub
push
inc
sub
ret
jle
adcl
xchg
rcl
cwtl
push
sub
lea
test
and
and
fwait
scas
mov
adc
jnp
push
inc
sbb
pusha
aad
add
sbb
cmpsb
mov
pop
inc
xor
aad
push
xor
addb
dec
scas
fnstsw
cmp
mov
invd
add
testl
jne
jg
push
push
and
add
shl
xchg
adc
sbb
or
adc
push
insb
int
subb
add
jg
out
inc
call
sub
lret
pop
cmp
imul
or
jle
jmp
pusha
arpl
inc
or
inc
or
and
scas
addl
add
add
cmp
cmp
out
or
andl
inc
or
or
fildll
jg
testl
cmp
sbb
outsb
pop
iret
shl
aam
punpckhdq
push
dec
pop
ret
push
fsubrl
nop
jne
cmpsb
inc
push
bnd
stos
xor
fidivl
xchg
adc
rorb
ret
movsl
js
shll
test
fnstsw
and
sahf
or
dec
inc
mov
cli
div
subl
jge
and
lcall
adc
xor
xlat
adc
xor
mov
add
mov
sub
out
mov
jbe
enter
aam
out
lock
lea
xor
pop
jmp
cs
addb
leave
sub
loope
xor
adc
dec
jg
cmp
negl
jo
lock
add
gs
ds
mov
add
dec
je
mov
dec
jne
dec
sub
adc
sbbb
sub
pusha
repnz
out
sbb
add
push
sub
in
sbb
iret
jle
and
aas
mov
pushf
and
lea
push
mov
adcl
rclb
pop
sub
or
add
stos
fisubrs
lea
loopne
leave
sub
sbb
mov
jbe
repnz
or
mov
gs
js
imul
sarb
or
pmaxub
sub
add
out
push
adc
and
inc
push
clc
mov
xlat
jle
mov
xor
sbb
xchg
cli
add
add
js
nop
cmp
daa
jb
nop
js
sub
es
or
js
sub
lods
mov
add
mov
mov
push
daa
push
or
xchg
push
inc
pop
mov
pop
jl
mov
mov
test
push
lahf
aaa
pusha
push
add
sbbb
or
sbb
adc
hlt
push
xor
pop
cld
mov
inc
in
repnz
and
ja
repnz
test
outsb
call
out
xor
sbbl
test
inc
push
jecxz
in
pop
push
xchg
push
or
adc
popa
or
fadds
enter
outsw
jmp
jae
add
enter
jmp
inc
mov
mov
sbb
push
cmpsb
lods
dec
fdivrs
add
sub
add
dec
dec
sahf
rclb
mov
mov
in
test
insb
sbb
cwtl
or
cmp
xor
inc
add
mov
or
adc
sbb
sub
inc
sbb
and
pop
and
daa
adc
mov
xchg
daa
jno
mov
adc
push
mov
lock
jbe
jbe
imul
aaa
in
mov
pop
mov
jae,pt
jp
outsl
fimuls
pinsrw
xchg
cmc
adc
scas
pop
xchg
out
into
popf
test
and
push
test
inc
pop
sahf
pop
mov
xchg
inc
ret
xchg
pop
pop
pop
clc
pop
enter
shrb
cmpb
cmp
push
push
pop
jle
and
or
dec
sbb
xlat
ret
mov
jecxz
jo
mov
and
std
xchg
lea
push
xchg
pushf
pop
sub
jge
inc
js
push
mov
lea
add
mov
js
push
add
enter
jo
mov
push
call
ret
lahf
stc
lret
filds
adc
and
jle
imul
lea
pop
adc
fcoml
pushf
cld
dec
push
nop
fidivrs
mov
xchg
adc
sub
cmp
push
sub
lods
xor
aam
or
mov
add
pop
add
test
pop
pop
popa
lods
out
push
js
dec
or
inc
pop
cmp
or
fcoml
call
test
in
ss
call
fcomi
rol
cmp
scas
add
shl
outsb
mov
fisubrl
mov
dec
jne
adc
jle
sti
add
add
xor
es
sbb
orb
ffree
rep
pop
jmp
add
lret
js
sahf
lea
inc
inc
sti
jmp
add
orb
cmpl
sub
andb
repz
inc
decl
mov
lds
aaa
and
sbb
mov
inc
daa
inc
sub
push
test
sub
sub
dec
or
icebp
jl
jmp
mov
sarb
push
outsb
lock
jo
dec
adc
sti
pop
shlb
jo
sbb
inc
sub
pop
and
jns
sbb
js
cmp
int
sbb
or
aam
imul
repnz
ret
out
pop
rolb
clc
insl
push
push
stos
jl
cmpsl
popa
pushf
mov
adc
sbb
jmp
loope
cmp
xchg
gs
pop
pop
fistl
jmp
popf
orb
inc
sbbl
add
ljmp
push
test
pop
cmpsl
xchg
and
scas
ret
adc
outsl
inc
cmp
sub
mov
jmp
jmp
mov
enter
jle
push
cmp
fndisi(8087
or
mov
mov
sti
xchg
add
add
mov
test
xchg
adc
insb
and
daa
pop
mov
sub
mov
leave
mov
pop
ljmp
lea
dec
js
or
bound
pop
repnz
mov
push
inc
adc
orb
inc
loopne
ret
aas
xor
mov
and
sbb
mov
movsl
lret
cs
pop
push
mov
inc
inc
sub
dec
sbb
pusha
mov
pop
xlat
add
outsl
push
scas
add
add
js
pop
rclb
jno
push
filds
loopne
loopne
adc
xchg
shlb
add
xor
js
push
cld
movsb
xor
movsb
outsl
xor
daa
sbb
mov
and
sbb
stos
mov
ds
lea
test
sbb
mov
dec
dec
adc
popa
mov
incb
or
mov
mov
lock
and
inc
xchg
mov
jle
pop
shl
mov
hlt
mov
push
mov
mov
cmp
fsub
mov
sti
add
mov
cld
pusha
xor
fs
or
mov
iret
sti
ret
mov
les
vmread
inc
adc
jmp
xor
push
test
shrl
fldenv
ja
mov
xor
mov
imul
or
mov
sbb
loop
add
fildll
add
inc
out
test
push
dec
pop
dec
adc
mov
inc
xchg
xor
into
inc
clc
ffree
and
mov
dec
aad
xchg
pop
adc
jg
adc
inc
das
add
in
dec
jp
inc
sbb
push
push
faddl
insl
flds
mov
sub
jp
xchg
jb
jne
add
aad
xor
inc
aad
mov
rcll
inc
dec
popa
sub
dec
in
test
mov
inc
and
push
sbb
push
mov
mov
mov
pop
mov
and
adc
test
or
popa
pop
fidivs
stos
movsl
jle
nop
stos
jecxz
jl
dec
adc
cs
mov
loope
add
cmpsl
sub
push
add
mov
jbe
sbb
ja
lret
add
add
xchg
daa
jmp
push
lea
repnz
push
outsb
ss
xor
rcl
inc
mov
sbb
aas
int3
adc
jbe
mov
mov
sbb
lsl
mov
dec
pop
ljmp
sbb
aaa
pop
aaa
je
inc
inc
sub
dec
mov
sahf
cmp
negl
adc
and
andl
cmp
push
xchg
sbb
arpl
inc
mov
pop
xchg
enter
inc
xchg
pop
dec
jo
add
inc
sbb
test
jo
les
aam
lcall
movsl
and
test
addl
fdivl
dec
mov
mov
push
mov
jecxz
sbb
jb
shl
add
add
or
stc
pop
add
fistpll
outsb
push
mov
sbb
push
sti
sbb
lods
adc
bound
cmpsl
mov
jo
fildl
test
pop
mov
xor
cmp
jecxz
nop
add
lock
mov
push
ret
test
ret
imul
inc
loop
dec
bound
or
pop
pop
pusha
add
rorb
js
xchg
jo
leave
fimull
inc
mov
mov
mov
dec
sub
iret
or
shll
mov
psrlq
negb
cmovl
je
inc
loop
nop
into
in
adc
jbe
add
lods
scas
mov
dec
xor
cmp
adc
add
mov
mov
push
dec
mov
shlb
cmpsb
jo
mov
je
loope
dec
cmpsl
lcall
cmp
or
jo
inc
or
push
inc
outsl
ret
add
jp
adc
jp
and
es
add
add
ret
lock
xlat
mov
fs
or
push
sub
mov
and
xor
cltd
push
push
lea
aaa
clc
ret
dec
sti
arpl
dec
imul
jbe
jne
and
adc
sti
popf
nop
loope
pop
cmp
pusha
sub
push
dec
jmp
pop
mov
fmull
push
xchg
out
jecxz
lea
sub
or
push
movsl
push
lea
fwait
test
push
mov
ret
cmp
ss
adc
mov
mov
sahf
rorl
jnp
cmp
inc
push
and
sub
push
inc
sub
xor
incb
and
sahf
xchg
pop
gs
sbb
sbb
xor
pusha
faddl
enter
or
mov
mov
add
or
popa
pop
or
inc
addl
cmp
test
data16
lock
out
mov
inc
add
lea
orl
inc
push
sub
pusha
adc
mov
lock
dec
movsb
lea
orl
cmp
lods
mov
lea
dec
clc
or
sub
adc
mov
aam
fcoml
sbb
push
jo
lea
movl
sub
xchg
mov
insb
movsb
mov
add
inc
ss
orb
in
sbb
stos
sbb
pusha
sbb
pop
nop
and
mov
jns
lea
xor
add
notb
pop
or
adc
loope
scas
and
ljmp
out
inc
push
sbb
shlb
jne,pt
mov
adc
add
mov
or
or
test
fisttpll
dec
or
in
call
clc
imul
xchg
je
xchg
and
pop
imul
negl
inc
jge
dec
cmp
fldl
imul
add
repnz
clc
adc
fadds
fsts
pop
ret
add
xor
cwtl
pop
js
les
inc
fsubr
lods
sbb
leave
cmp
adc
or
std
sbb
inc
out
jle
cmpsb
aas
sarb
pushf
cmp
jl
mov
mov
pop
inc
push
mov
inc
shlb
mov
mov
decl
dec
jns
jle
pop
fcom
mov
pop
xorb
test
xor
mov
or
sbb
xchg
pop
push
push
clc
push
das
xchg
push
add
push
jecxz
and
rcr
icebp
out
rcrb
xor
sub
xlat
or
sub
inc
and
push
add
add
shll
mov
add
add
mov
adc
insl
xor
adc
adc
sbb
mov
ljmp
mov
in
clc
push
sub
jmp
push
sbb
or
mov
xchg
inc
inc
and
pop
mov
loopne
xchg
xor
movsl
mov
int3
call
jae
push
fdivs
shrl
inc
push
inc
push
sbb
lea
xor
push
cmp
xorb
cmp
jo
sub
fdivs
inc
or
push
and
call
inc
js
inc
or
lea
lret
lahf
jmp
loope
cmp
loop
enter
and
mov
sub
inc
pop
scas
push
pop
lea
push
or
sub
and
inc
and
adc
mov
cs
out
jecxz
cmp
pop
jae
sahf
out
add
add
pushf
push
push
add
jb
out
jecxz
sub
jo
or
cli
add
or
jge
adc
je
add
stos
scas
ret
mov
mov
fadds
add
xor
mov
mov
cmp
inc
mov
fnsave
ret
subl
sub
in
cmp
and
and
jle
sbb
addr16
out
mov
pop
pusha
mov
in
adc
or
jmp
inc
mov
push
cmp
scas
cmp
shll
and
ret
das
add
sub
jne
fildl
shrb
pop
loopne
inc
pop
and
loopne
lods
mov
push
std
add
adc
cltd
jns
dec
pop
sub
pop
sub
dec
xor
repz
push
and
sahf
push
inc
xchg
popa
shl
mov
jo
and
mov
sub
test
and
mov
push
mull
shr
add
or
mov
sti
mov
and
adc
push
adc
mov
fisubl
rolb
inc
or
testb
push
sarb
imul
xor
stos
mov
xor
or
sub
jbe
adc
add
pop
jg
daa
fmuls
ss
add
mov
outsl
repnz
pusha
pop
mov
xor
mov
mov
mov
and
inc
xchg
imul
adc
ret
jbe
rcrl
dec
roll
mov
push
cmp
lahf
pop
popa
or
adcl
push
mov
sub
mov
lock
or
test
sbb
and
mov
push
push
lods
xchg
sbb
call
sbb
or
jno
add
mov
sbb
pusha
sbb
push
adc
sarb
ljmp
or
adc
adc
mov
dec
shll
push
xchg
test
pop
mov
add
mov
adc
nop
jp
scas
mov
aaa
xor
pop
sub
loope
stc
push
lret
ss
and
dec
inc
jns
or
sub
int3
lods
rolb
imul
jo
xchg
mov
pop
add
fstps
sub
add
adc
adc
xchg
xchg
mov
or
cli
sub
sbb
sbbb
fcompl
std
mov
andl
xchg
mov
ds
fidivl
or
clc
shlb
and
sbb
mov
arpl
cmp
out
mov
pop
pop
push
cmp
pop
loopne
test
cmp
dec
or
xor
stc
jg
dec
adc
pop
add
repnz
mov
add
daa
cmp
idivl
and
lcall
and
scas
jo
sub
inc
and
fisubrl
xor
pop
and
sub
xor
xor
shr
add
outsl
adcb
push
loopne
mov
adc
push
or
or
inc
add
cmp
stos
fisttps
fsts
fsts
add
movsl
mov
nop
lods
or
dec
test
pop
imul
and
adc
filds
adc
fsts
push
xor
cmp
lods
fsts
inc
jp
push
xor
sarb
ret
in
push
sti
movsb
xchg
push
xchg
fadds
xchg
cli
mov
or
jbe
fadd
pop
xor
bound
daa
popa
fbld
arpl
rcll
inc
inc
and
xchg
and
inc
pusha
adc
pop
mov
jnp
and
push
adc
lret
sbb
sbb
push
push
add
push
and
mov
push
mov
adc
sub
leave
movsb
dec
rol
pop
jp
fnstcw
or
sbb
add
and
test
pusha
outsb
in
gs
js
lea
ss
xorl
or
lret
shlb
jo
inc
imul
imul
inc
clc
or
fsubs
enter
adc
push
add
push
sub
fcmovu
push
xor
and
mov
push
aaa
fucomi
lcall
data16
cld
sti
mov
push
ds
adc
sbb
mov
mov
shll
loope
cmpsl
loope
insb
jo
lock
stos
fildll
stos
in
or
add
unpcklps
mov
cmp
add
pop
sbb
aaa
lret
aas
or
in
shll
movsl
push
push
mov
mov
mov
cmp
neg
ficompl
xor
scas
add
and
add
repnz
sahf
adc
xor
jmp
dec
mov
cmp
and
cmpl
movsb
xchg
push
lret
adc
dec
sbb
dec
push
push
push
loope
iret
fidivl
mov
or
out
push
inc
adc
mov
rol
cmc
mov
ret
imull
rclb
mov
cld
xchg
fdivrp
xchg
int
arpl
adc
sbb
push
push
lock
pop
sbb
push
mov
pusha
aam
push
loopne
scas
jbe
shlb
add
repnz
mov
fwait
dec
idivb
je
sub
out
sbb
lock
decb
cmp
jge
jmp
shl
lea
test
hlt
adc
push
lret
jo
daa
and
push
aas
push
mov
add
std
push
adc
rclb
sbb
ljmp
rcl
dec
mov
int
mov
sub
imul
add
int
and
pushf
pop
scas
stos
sub
pop
add
mov
xor
add
cmc
dec
add
insb
in
add
or
rolb
cmp
call
ss
xor
push
fs
rcll
sbb
gs
push
xor
inc
xor
inc
std
jne
test
fisubrl
dec
shl
sub
xchg
xor
jle
push
fistpll
inc
and
rcl
call
or
ss
and
and
icebp
jg
adc
mov
add
cmpl
dec
test
add
inc
test
sbb
mov
lock
add
adc
mov
adc
sub
aam
imul
dec
xor
pusha
pop
ljmp
out
mov
add
movsb
push
or
push
sub
mov
mov
xor
jl
jmp
popa
mov
sub
lds
imul
inc
dec
jp
sbb
inc
dec
fstp
dec
pop
dec
mov
push
ficoms
and
shll
call
loope
adc
and
adc
sub
packssdw
push
mov
cmp
sbb
sarb
cld
ret
pop
cli
push
add
cld
dec
movsb
lret
loop
push
and
push
push
add
addr16
push
or
cmp
adc
cmpsl
adc
or
mov
lea
lea
mov
imulb
dec
repz
adc
add
test
lret
into
push
pop
sub
cmc
or
inc
jo
xor
or
inc
and
xor
adc
jle
clc
dec
ja
test
mov
lods
repnz
testb
loopne
lea
mov
rolb
pop
xchg
ret
add
stos
aad
shrb
fistpll
xchg
test
mov
or
and
stos
jne
and
int3
pop
aaa
aad
xor
lret
daa
push
loopne
add
xor
or
nop
jle
and
adc
lea
out
cs
add
je
push
xor
dec
loopne
std
pop
pusha
dec
rorb
xor
push
add
mov
std
aad
sbbl
or
or
add
or
fwait
add
mov
pop
add
inc
orl
jmp
sub
xchg
mov
cmp
mov
repnz
sbb
xor
mov
dec
lcall
inc
fimull
repz
sbb
cmpb
dec
sub
fcmovu
cmp
jnp
hlt
xchg
clc
adc
mov
fsubs
mov
imul
mov
ljmp
dec
push
loopne
add
mov
mov
cltd
push
hlt
repnz
outsl
add
xchg
dec
add
ljmp
jmp
pusha
dec
add
dec
int
mov
sahf
mov
mov
es
je
out
test
mov
push
jmp
filds
out
push
mov
push
mov
js
in
and
push
into
mov
pop
shlb
ret
rclb
in
adc
push
push
sub
insb
sti
mov
mov
and
inc
push
pop
fucomp
lcall
fcomp
push
mov
dec
mov
aas
add
scas
and
ljmp
adc
mov
es
or
cmp
mov
sub
mov
movsb
or
mov
jl
mov
mov
aas
adc
mov
push
mov
out
or
and
mov
push
adc
or
mov
or
pusha
enter
add
in
jbe
or
mov
pop
inc
bound
xchg
daa
xor
out
pop
mov
add
dec
and
mov
inc
decb
aam
es
int3
cmp
push
push
dec
pop
dec
enter
mov
mov
pop
call
mov
das
aam
inc
add
add
fdivl
adc
dec
popf
test
orb
jge
sbb
jmp
add
lcall
xor
xor
negb
xor
inc
ret
xchg
je
jnp
arpl
mov
mov
ret
loop
pop
sbb
inc
mov
jo
push
sbb
call
jo
stc
push
push
jo
cmp
sbb
mov
push
mov
ret
or
mov
lahf
faddp
sub
push
adc
push
cmp
push
stos
test
add
in
fiadds
fdivrs
or
mov
enter
lods
jl
pop
and
sbb
dec
dec
fsubl
leave
dec
in
mov
mov
movsl
pusha
sub
and
sbb
fcoml
push
sbb
pop
or
cmc
jae
add
rorl
sub
addb
outsl
adc
jge
add
pop
ret
mov
ficoml
jp
or
jns
cmp
jbe
insl
or
dec
je
inc
aam
push
inc
ret
add
mov
sbb
cmp
push
inc
and
popf
mov
cmp
push
sub
xchg
push
dec
ss
xchg
jbe
and
lret
jl
inc
jg
push
cmp
and
sbb
push
aam
insb
dec
adc
xchg
sub
jecxz
or
xchg
push
add
test
mov
fbstp
bound
sub
cmp
add
gs
inc
adc
mov
sbb
adc
or
testl
cmc
lea
out
adc
pop
add
and
mov
and
sub
or
xor
insb
in
mov
pop
fistps
dec
popf
aad
aas
inc
pusha
dec
pop
sub
outsb
faddl
lds
nop
push
xor
mov
and
les
add
mov
pop
fldenv
adc
sbb
add
mov
and
and
sub
pop
cmp
cmp
mov
jp
dec
sub
je
inc
dec
inc
out
mov
aad
push
add
xor
inc
in
fldl
adc
cmp
arpl
jle
and
ja
pop
es
or
scas
add
sbb
js
pop
cld
stos
sbb
scas
insb
mov
xor
loop
sahf
mov
dec
addb
cld
or
add
jae
or
imul
xchg
shll
lahf
emms
ds
popf
mov
fs
inc
sbb
lds
or
jmp
inc
test
adc
xchg
sbb
pusha
aam
xchg
das
inc
push
inc
scas
pop
aas
js
cmp
fs
and
sarl
cli
add
pop
ret
pop
in
mov
and
gs
fwait
mov
push
jp
in
xor
js,pt
adcb
fistpll
subb
movsl
inc
pop
pusha
add
sbb
mov
clc
xor
pop
pop
jmp
out
mov
js
inc
test
dec
test
push
nop
enter
cmp
cltd
pop
mov
lds
push
sbb
out
cmp
cmovg
xlat
inc
divb
sub
push
jns
dec
sub
add
dec
xor
rorb
mov
lea
adc
xchg
inc
insb
ficoml
fdivs
and
jo
xchg
out
inc
or
ret
xchg
xlat
xor
cmp
inc
push
movsb
pusha
mov
cltd
lods
push
fs
mov
push
push
mov
scas
push
mov
xchg
dec
lret
xorl
push
mov
in
add
cltd
bound
sbbb
rolb
xchg
sub
addr16
clc
test
pop
psubusb
stos
dec
leave
pushf
loope
inc
xor
push
or
cmp
jmp
and
push
jmp
push
sub
pop
cmp
push
gs
cmp
inc
stos
push
inc
pop
xchg
rcrb
mov
and
add
push
add
sub
stos
mov
cmp
pop
fisttpll
cli
call
fdiv
inc
dec
add
or
pop
mov
xor
sub
jnp
loop
add
jnp
rcrb
sbb
js
fwait
adc
or
sbb
int
xchg
sbb
add
test
inc
inc
scas
mov
ja
clc
and
inc
cmpsb
int3
dec
imul
stos
sbb
add
cltd
and
add
jmp
push
mov
dec
stos
fs
xchg
enterw
adc
leave
jo
mov
test
xchg
xor
jmp
out
mov
push
push
and
mov
test
in
insl
dec
add
cmp
ficomps
xor
xchg
mov
push
ret
insb
and
ss
rcr
lcall
or
ret
jo
jne
pop
lahf
push
push
sbb
or
pop
xchg
nop
mov
and
xor
add
adc
xor
and
inc
in
loope
nop
insl
jae
mov
and
adc
test
sbb
push
pusha
pop
pusha
push
rcll
pop
lahf
in
xchg
xchg
repz
pop
inc
mov
repz
outsb
xor
push
mov
loop
aaa
xchg
pop
pop
adc
ret
mov
ret
ret
cmp
sub
enter
push
sbb
pop
mov
adc
lcall
mov
push
push
xchg
jno
movsl
movsb
or
loop
and
push
sub
add
inc
mov
lahf
jae
inc
and
test
rol
add
mov
add
sub
movsl
inc
orb
inc
add
aaa
and
sbb
sub
inc
pusha
jmp
data16
call
jae
sbb
dec
or
mov
sarl
sbb
or
sub
inc
adc
xchg
mov
and
mov
nop
clc
inc
inc
mov
sub
push
xchg
les
cmp
or
sub
sbb
adc
and
shlb
cli
orb
and
sbb
fadds
jnp
xor
in
mov
stos
int3
shlb
aas
sbb
adc
shrb
jnp
xor
lock
sbb
mov
lods
sub
add
xor
xor
pop
mov
adc
mov
xor
pop
xor
push
leave
mov
push
jecxz
addb
js
mov
sbb
push
pop
adc
divb
jmp
dec
imull
clc
mov
out
add
add
cmpsl
repnz
add
pop
or
sbb
orl
pop
repz
lock
push
push
call
popa
push
add
imul
push
mov
wrmsr
xorb
rcll
loope
mov
ja
adc
push
or
out
mov
lea
test
xchg
xor
xor
mov
push
add
insb
pop
pop
ror
sbb
xchg
and
inc
add
ss
and
cld
dec
dec
sub
sbb
mov
xor
mov
add
xor
sbb
jno
insb
aaa
pusha
cmp
xor
gs
or
adc
sub
lock
push
insb
and
sti
rolb
cs
out
mov
idivl
inc
mov
push
mov
pop
fldl
fisubrs
cmpsb
into
out
push
iret
sarl
out
stc
sbb
pop
add
faddl
aam
xor
add
dec
hlt
xchg
je
sub
xchg
repz
add
pop
sbb
add
xchg
xchg
adc
js
rolb
xchg
out
xorb
jae,pn
je
test
sbb
out
rclb
cmp
add
mov
scas
roll
shr
es
ret
pop
mov
shrb
pop
loopne
jb
pop
jb
call
enter
pop
jb
shl
andb
shlb
push
jb
lds
rolb
dec
jp
inc
pushf
dec
in
inc
call
test
jae
jge
cmp
and
jmp
jl
cli
inc
or
push
in
mov
push
faddl
aam
mov
push
ljmp
stc
andl
rorb
incb
or
test
push
les
stos
push
push
jne
xchg
jb
jmp
push
push
sahf
loopne
fcoml
push
lahf
dec
rorl
sub
test
xor
xorl
or
xor
inc
xor
pop
jmp
add
adc
add
add
pusha
ss
or
or
jmp
test
dec
loopne
and
out
xor
outsb
pop
or
sbb
sbb
or
cmp
out
jo
popa
or
jne
sub
loop
sahf
xor
cmp
daa
xchg
lcall
xor
push
jp
ret
adc
xor
push
mov
cmp
adc
or
daa
lock
movsb
sub
xchg
repz
fisubrs
xor
pop
mov
pop
cmp
adc
xor
testb
jne
movzwl
bswap
clc
add
pop
idiv
or
sarl
xchg
je
add
outsb
inc
xor
jmp
andl
cmp
mov
daa
adc
dec
push
adc
lea
adc
pusha
push
pop
fcoml
add
cmp
sub
jg,pn
pop
sti
dec
jae
in
nop
adc
cmp
insb
add
int3
cmp
sbb
out
enter
insl
adc
push
movsb
iret
aad
ja
fists
xor
inc
adc
sbb
adc
rol
sub
sbb
subb
mov
fildl
cltd
inc
xor
mov
mov
aaa
mov
rcr
pop
fstp
sbb
mov
cmp
leave
or
hlt
xchg
inc
sbb
jmp
and
jmp
repnz
subb
imul
negb
out
push
adc
inc
std
dec
adc
add
sti
push
push
or
pop
adc
add
and
popa
xor
insl
xor
scas
loopne
pop
pop
ds
js
sbb
add
push
sub
mov
es
pop
mov
adc
pop
ret
mov
cmp
hlt
sbb
in
mov
ret
mov
cli
lea
push
pop
xor
inc
lock
out
popf
sbb
add
sub
sarl
fidivrs
jae
out
lock
mov
push
popa
add
lods
push
lock
sbb
hlt
push
xorb
dec
push
mov
push
addl
test
push
cmp
idiv
cmp
push
insb
or
sbb
xchg
in
add
mov
inc
clc
pop
dec
shrb
loop
mov
add
mov
clc
add
test
mov
cs
out
or
push
xchg
addb
push
push
jno
jne
mov
fnstenv
cmpsb
repnz
sbb
lock
adc
sub
pop
lods
mov
addb
jbe
in
shll
mov
mov
push
aas
inc
inc
lods
lods
push
cmc
or
or
mov
test
adc
adc
lea
loope
fdivrp
mov
jmp
jl
pop
cltd
jp
pop
sub
movsb
ret
gs
stos
loop
add
shrb
and
cmp
push
fldl
jmp
cltd
add
mov
dec
lock
mov
pop
out
adc
clc
add
dec
push
jo
push
addr16
add
call
push
outsb
lock
loopne
fmull
pusha
shll
aam
push
and
push
sub
inc
stos
inc
dec
xchg
xor
cltd
test
fimuls
push
in
mov
inc
call
inc
loopne
or
jp
pop
mov
sti
hlt
push
pushf
pop
je
mov
adc
dec
aaa
cmp
or
push
lock
xchg
inc
adc
inc
add
out
pop
test
dec
nop
roll
xchg
in
inc
mov
jnp
sbb
add
pop
clc
fldl
and
test
sbb
test
nop
sbb
mov
idiv
jne
add
insl
pop
and
dec
pushf
push
mov
out
sti
jne
insb
jp
sub
clc
call
xchg
push
int3
adc
xchg
arpl
or
push
ror
or
inc
clc
mov
aad
adc
xchg
dec
dec
inc
mov
push
je
cmp
add
cltd
add
mov
sbb
ja
es
jecxz
pop
adc
bound
lcall
les
pop
sub
inc
cmp
pop
out
adc
adc
je
mov
or
lock
inc
add
or
xor
lahf
cwtl
jo
sti
das
jp
pushl
aam
xchg
ror
rol
cmp
pop
das
fmuls
test
add
mov
jno
inc
sub
cwtl
mov
push
add
imul
movl
xchg
lret
dec
orb
cmpsb
fisubrl
adc
nop
or
sub
sub
sub
cltd
cmp
lods
ret
aaa
dec
add
pop
adc
mov
add
pop
mov
movsl
sbb
inc
mov
cmpsb
and
inc
inc
push
sbb
and
dec
cld
xchg
dec
mov
push
mov
shlb
outsb
and
add
fdivr
mov
push
pop
add
pop
dec
push
cmpb
or
fisubs
and
cmc
or
jbe
lds
cmp
je
ds
rcrb
and
stos
out
push
mov
adc
sbb
adc
sub
sbb
rclb
pop
push
dec
push
in
cmp
push
inc
aam
push
sbb
or
xor
xor
in
or
enter
cmp
in
add
dec
push
cmpsl
fsubp
addr16
movsl
jo
or
ss
xor
fists
sbb
or
push
fnstcw
dec
fidivrs
push
jge
clc
push
inc
add
inc
jecxz
adc
adc
cmp
adc
jmp
sub
push
daa
scas
les
xchg
dec
mulb
pop
jmp
pusha
and
js
lret
shld
and
push
or
mov
loopne
daa
scas
out
das
push
rcr
cmpsl
inc
in
outsb
jle
rcll
add
lods
sarl
pop
cmpl
jb
mov
xor
and
jl
or
mov
add
mov
adc
bound
lea
movsl
add
movsl
pop
push
outsl
mov
pop
jb
sub
pop
int3
add
mov
arpl
and
and
add
sbb
ljmp
jl
lahf
sub
mov
aaa
push
movzwl
dec
das
bound
jmp
pop
pop
movsl
jmp
xor
jmp
cmp
sub
dec
cmpl
loop
jae
inc
cli
test
jge
push
and
adc
adc
pop
jge
mul
dec
add
sub
lods
push
xorb
push
pop
inc
loop
scas
inc
push
enter
mov
push
add
adc
push
enter
dec
xchg
in
push
sub
inc
pop
dec
xor
push
in
aad
or
sub
mov
mov
or
push
inc
jecxz
lret
sbb
dec
adc
ss
and
sbb
adc
xor
sbb
xor
mov
xor
sub
stos
rorb
add
sub
cmp
scas
sub
sbbl
sub
jle
xor
fs
or
mov
dec
mov
ljmp
pushf
ficoms
mov
shll
popa
je
cmp
jp
test
je
mov
inc
xchg
pushl
or
and
sbb
mov
je
int3
sbb
pop
jge
pop
orb
mov
or
movsl
or
sahf
enter
mov
nop
push
nop
or
lods
adc
insb
ficompl
dec
cmp
push
inc
inc
xchg
fldcw
push
addr16
mov
jo
fsubl
push
jmp
pop
mov
adc
adc
in
inc
inc
and
mov
cwtl
or
incb
inc
lea
push
pop
pop
pop
mov
mov
xchg
push
popa
ret
shlb
fnstsw
call
cmp
cmp
xchg
adc
pop
mov
insl
orl
sbb
push
stos
pusha
adc
scas
sub
xchg
dec
mov
rcll
imul
jb
and
jge
jmp
rolb
call
js
sbb
aad
in
movsb
xchg
lock
xlat
in
shrb
sbb
cmp
dec
pop
cmp
fisttpl
call
fcmove
popa
add
aas
mov
or
and
dec
and
mov
push
adc
add
adc
add
ret
mov
sub
cs
inc
sub
and
je
lea
sbb
hlt
xor
outsl
nop
cld
clc
in
push
mov
pop
addb
clc
jmp
mov
in
or
stos
inc
setb
lea
es
mov
pop
adc
js
push
lea
xor
and
sarb
mov
jl
cmp
adc
cmp
gs
dec
push
ds
out
adc
lcall
inc
sub
mov
and
insl
xor
repz
nop
mov
push
lock
inc
aam
xor
xchg
adc
insl
loop
sub
dec
or
jo
faddl
scas
cli
sbb
mov
cs
sub
jb
jp
into
mov
dec
insb
inc
dec
adc
movsl
push
pop
in
jo
or
xor
aam
lret
out
xor
xchg
mov
and
or
lock
lea
sub
dec
es
ss
rorb
dec
or
rorb
and
outsb
or
or
push
dec
fstps
lds
inc
and
out
xor
mov
lods
insl
call
xor
jne
dec
xchg
neg
push
inc
sbb
addl
ja
scas
inc
ljmp
add
mov
ret
add
cmp
arpl
or
and
adc
add
push
sub
nop
icebp
push
dec
cmp
and
enter
data16
and
mov
sarb
inc
adc
cld
inc
cmp
test
inc
cmp
add
adc
pop
cmp
data16
out
insl
and
inc
adc
push
mov
sahf
out
or
int3
mov
out
sbb
test
dec
mov
add
dec
aam
push
add
repnz
aam
pop
adcb
xchg
mov
jg
xor
cmp
fiadds
ficompl
pop
rcrb
pop
and
push
xchg
fsub
add
push
loope
stc
add
loop
add
movsl
insb
test
xchg
add
aad
and
ljmp
xchg
fcompl
sbb
repnz
je
cld
clc
xchg
push
int3
orb
add
xchg
stos
dec
mov
data16
push
inc
adc
mov
inc
or
inc
add
mov
addl
dec
add
cltd
jp
fsts
pusha
sub
call
push
and
xchg
add
xor
xchg
jmp
jl
ret
aad
push
jg
sti
sub
out
in
adc
iret
dec
and
js
inc
jmp
leave
push
sbb
sub
add
mov
jo
xchg
dec
in
lea
inc
dec
or
aam
js
jo
les
and
push
add
and
cmp
pop
faddp
sub
dec
xor
push
adc
imul
or
movsbl
push
rorl
and
xlat
and
inc
push
sbb
dec
push
push
xor
pop
test
xor
lea
mov
lds
ds
pop
pop
mov
popa
test
dec
dec
je
xor
inc
ret
mov
xchg
movsb
jmp
xchg
pop
movsl
add
sar
dec
femms
bts
lea
stos
stos
sub
mov
popf
mov
out
ficompl
loop
cmp
jo
andl
test
test
adc
fisttpll
or
inc
mov
mov
add
push
mov
xor
fcoms
cmp
lock
push
lahf
xchg
test
lods
push
stos
popf
lods
loopne
movsb
scas
ss
cmp
add
dec
dec
sbb
pop
cli
insl
add
gs
push
add
jge
dec
pop
ret
shl
jbe
mov
and
cmp
jecxz
pop
xor
pop
adcl
movsb
mov
fstps
sbb
loop
push
jne
xchg
xor
mov
or
jo
pop
and
out
mov
iret
add
cmpb
cmp
cmp
push
adc
das
dec
lock
pop
xorl
and
add
jbe
mov
shll
es
aas
or
lret
pop
add
add
pop
pusha
icebp
sub
sbb
cmp
push
or
sbb
xchg
test
mov
xor
xor
sbb
pop
dec
imul
in
sbb
and
insb
roll
jbe
inc
and
pop
push
stos
add
gs
stos
xor
lea
push
xchg
cmpsb
sbb
fsub
or
push
dec
out
mov
push
sbb
add
push
in
jmp
push
cltd
cwtl
pop
mov
and
cmp
pop
dec
sbb
je,pn
pop
in
inc
cmp
add
jo
jmp
cld
sbb
test
xor
mov
push
orb
fs
icebp
sarl
xor
sbb
sbb
or
cmp
jbe
jae
clc
add
adc
hlt
sti
pop
add
mov
jmp
push
pop
inc
xchg
sbb
notl
or
push
test
push
call
cs
mov
mov
add
shlb
stos
cmpsl
push
je
inc
sti
inc
adc
or
into
push
jp
sbb
mov
fnstcw
mov
push
sbb
ret
call
sub
hlt
pop
fnsave
add
test
je
xchg
add
add
jb
bound
add
pop
int
faddp
sar
std
js
sbb
in
data16
or
pop
jne
sbb
jge
mov
add
jnp
add
jmp
add
add
lret
sbb
hlt
add
dec
dec
aas
adc
or
addl
scas
icebp
sbb
addr16
mov
pop
jne
push
mov
add
push
jecxz
lods
mov
inc
fisttpl
add
or
cs
pop
dec
das
dec
stos
or
sub
push
movl
xor
dec
inc
das
fistpl
icebp
pop
mov
cwtl
jbe
adc
into
gs
je
cltd
inc
push
push
orb
enter
sub
lcall
or
addl
lea
inc
sbb
scas
xor
movsb
in
jle
lods
mov
pop
jne
cmp
clc
push
sbb
pusha
test
dec
dec
mov
jnp
rclb
mov
insl
mov
dec
into
add
dec
lods
jne
dec
jle
or
outsb
adcl
cli
mov
push
out
inc
loope
shrb
push
roll
repz
sbb
fwait
and
imul
inc
push
mov
test
int
loopne
lea
inc
cmp
fistpll
dec
bound
sub
push
push
fdivs
daa
dec
or
jmpw
sub
hlt
jne
lds
icebp
jo
mov
ret
pop
or
or
inc
pop
je
and
add
jno
push
xchg
jl
xchg
ja
into
push
push
andb
cmc
sub
mov
lods
sbb
dec
push
adc
hlt
and
movsl
push
fbstp
sbb
add
sub
push
call
add
inc
push
xchg
jno
pop
or
clc
inc
gs
dec
dec
push
clc
ss
xchg
sbb
aam
loopne
inc
loop
and
add
xor
rorb
data16
pop
lea
jmp
or
pop
outsl
mov
push
fidivl
push
je
adc
je
insb
lcall
or
cltd
adc
or
jb
xchg
inc
and
adc
mov
xchg
outsb
insb
push
jge
mov
enter
jmp
and
mov
mov
inc
adc
ret
inc
adc
aam
mov
add
and
push
cmp
xchg
std
push
push
or
aas
push
addr16
dec
bound
push
and
cld
sub
inc
clc
sahf
addl
rorl
add
pop
pop
cld
xchg
mov
push
mov
rorb
push
adc
je
cmp
dec
mov
or
xchg
js
dec
out
sbb
inc
inc
lea
mov
ret
and
xor
or
dec
arpl
cmp
mov
jmp
mov
jo
shr
xchg
cmp
mov
push
mov
ret
xor
push
cmp
adc
jo
cmp
mov
and
outsb
dec
mov
movsb
cmp
cmp
loopne
inc
int3
or
inc
cmp
push
adc
cmc
dec
shl
rclb
add
sub
mov
add
jg
clc
cmp
lock
rcrl
popf
xchg
xorb
mov
push
xchg
cmpsb
mov
adc
outsb
add
push
imul
mov
cltd
jbe
movsb
ss
cmpsb
pop
push
stos
jg
mov
sbb
sbb
lea
testb
push
mov
push
or
inc
push
dec
mov
or
rcrb
clc
lcall
shl
adcb
enter
and
mov
mov
mov
subl
pop
mov
adc
les
cmc
test
sub
dec
outsl
mov
add
sbb
push
push
je
daa
fwait
andb
mov
subl
insl
add
sub
ret
cmp
inc
pop
add
inc
out
xorb
jp
lea
jae
sub
fcmovu
add
pop
ret
je
xchg
sub
add
inc
jmp
push
jecxz
sub
adc
sbb
adc
unpckhps
or
fdivr
add
jne
int3
js
sbb
push
jo
jg
fldt
inc
and
mov
mov
push
insl
or
rorb
pop
push
enter
mov
adc
scas
fisttps
insb
sub
inc
stos
out
inc
pop
data16
sbb
xor
lock
sbbb
xchg
pop
out
adc
or
dec
sub
sub
enter
add
push
mov
aaa
push
das
jb
cmp
dec
xor
lea
xchg
and
adc
add
aam
jp
and
inc
arpl
sub
xlat
jo
mov
mov
lea
add
xchg
in
mov
jecxz
xorl
mov
ljmp
movsl
push
sbb
adc
idivl
loop
and
dec
jl
mov
movsl
mov
pop
sti
test
mov
roll
mov
lods
dec
into
mov
sub
add
push
pushf
xor
movsl
ss
icebp
xchg
sub
sub
mov
repnz
scas
or
out
inc
dec
fcomi
insl
xlat
xchg
pushf
data16
xchg
xchg
adc
pop
jae
pushf
loopne
addl
and
and
xor
xchg
mov
fcomps
ja
jle
mov
ss
aas
rolb
pop
push
ljmp
imul
and
add
xor
jle
or
ss
sub
cmp
sub
sbb
roll
into
rorb
fidivrl
mov
push
pop
imul
mov
or
add
mov
lods
dec
inc
mov
sbb
adc
dec
dec
add
push
ret
pop
mov
or
push
push
add
xchg
add
mov
and
push
andl
dec
sub
xor
jo
inc
sbb
js
test
fisubl
daa
sub
push
jnp
xchg
sbb
xchg
adc
mov
out
punpckhbw
pop
adc
rolb
enter
add
jle
rcrb
lea
int3
pop
and
in
dec
xlat
lock
fcoms
rclb
or
xchg
sbb
stc
add
js
test
sub
push
add
cmp
cmp
inc
and
mov
lahf
add
and
push
jg
mov
xchg
hlt
pusha
cwtl
cltd
fstpl
adc
adc
sbb
mov
and
pop
imul
test
adc
int3
adc
xor
jns
shll
push
or
push
dec
movsl
pop
negl
sbb
fstl
dec
aad
and
inc
dec
inc
inc
push
mov
cmp
pop
adc
xchg
adc
ret
sahf
and
cmp
lods
int
insl
lock
loopne
dec
xchg
xchg
pusha
inc
nop
mov
loopne
aaa
fisubrl
dec
sub
cmp
movsl
les
or
fsubrs
imul
dec
div
aam
rolb
push
movnti
xor
mov
frstor
jl
data16
cmc
imul
add
add
xor
scas
rorb
adc
cmp
sbb
sub
adcl
dec
pusha
sub
lea
jae
stos
and
int3
loop
pusha
or
enter
sbb
adc
jae
loopne
lods
dec
ss
fstpl
or
xor
roll
lods
xor
or
jne
push
and
lock
dec
inc
fwait
repnz
and
mov
dec
jno
je
lea
lea
or
faddl
ret
sbb
mov
inc
js
inc
push
inc
mov
movsl
add
daa
imul
mov
xor
mov
inc
shr
outsb
pusha
movsl
hlt
jo
inc
ficoms
pop
push
add
je
pop
pop
out
cmp
and
dec
pop
and
jle
insb
je
lea
add
sub
jbe
lret
stos
sub
sub
push
jns
mov
shrb
fs
aam
sub
call
sbb
out
mov
ret
rorb
jge
adcl
sbb
xchg
nop
push
push
cwtl
push
push
sub
push
cmp
jne
lahf
sub
jmp
cli
sub
lods
mov
pop
bnd
and
jl
and
sub
pusha
jge
popa
movups
xchg
js
sbb
lret
cvtps2pd
or
jmp
pop
push
mov
push
jge
xchg
jae
inc
jb
jae
lret
jae
mov
push
mov
lret
mov
fstpt
ret
jl
leave
adc
adcl
or
dec
clc
dec
nop
xorb
xorl
or
fadds
js
pop
cmp
adc
sub
adc
andb
mov
xchg
pop
cmpsl
dec
iret
ret
add
cmp
jge
sbb
cmp
push
adc
pop
or
mov
adc
ficomps
inc
sti
xor
insw
lock
fnstenv
cld
xor
sub
gs
sbb
push
ja
push
popf
adc
mov
or
je
mov
shl
lock
cmp
sarb
mov
pop
mov
ret
sub
push
dec
mov
mov
mov
movl
push
test
js
mov
cltd
mov
cwtl
add
ret
xchg
movsb
xchg
inc
inc
iret
jl
mov
xchg
mov
in
add
inc
cwtl
movsb
add
fnstenv
sti
les
push
sbb
mov
push
xchg
add
jbe
in
cmp
inc
mov
xor
mov
add
mov
inc
insl
fdivs
and
inc
fstpt
les
test
pusha
inc
loope
les
scas
scas
adc
ss
xor
mov
or
fs
aad
movsb
adc
jmp
xchg
xchg
in
push
xchg
mov
icebp
mov
dec
xchg
pusha
dec
jo
test
into
rolb
cmp
jno
xchg
fists
jno
lea
jne
inc
push
cmpb
lock
pop
testb
je
es
inc
push
push
or
pop
mov
xchg
xor
lods
jp
pop
loope
in
pusha
push
repnz
les
and
lcall
push
mov
push
ret
mov
adc
sub
push
pop
or
les
push
lock
sbb
jb
cmp
or
in
xchg
leave
nop
add
scas
inc
and
bnd
mov
aam
arpl
sbb
nop
jo
cli
fisttpll
imul
mov
mov
sarb
icebp
popf
addb
add
lock
cmp
inc
xor
in
mov
mov
jo
mov
add
pop
cmp
xor
cld
adc
mov
je
les
lret
cmp
cs
xor
cs
sbb
push
fs
add
and
pop
inc
fldcw
cmp
inc
sub
nop
cmpsb
loopne
call
pop
in
sbb
jb
call
push
sarb
orb
sbb
push
push
jns
sub
testb
adc
push
rcr
cmc
adc
or
dec
jge
pop
push
fmull
push
cmp
outsb
sbb
pop
fnsave
call
push
mov
push
ret
cmp
dec
roll
pop
xor
ror
push
push
pusha
cli
or
jp
pop
xor
push
and
add
dec
sbb
inc
insb
jo
loope
hlt
ret
and
add
push
pop
dec
adc
lock
push
sbb
mov
je
js
dec
push
jle
add
add
std
js
cmp
adc
pop
jbe
aaa
dec
stos
subl
jmp
cmp
push
lods
clc
sub
sub
clc
mov
add
xor
xchg
mov
pop
data16
es
and
fadds
scas
cld
push
aam
and
mov
and
adc
test
sahf
test
push
mov
int
jo
dec
rolb
hlt
push
aam
pop
jno
es
ror
into
add
fstps
xchg
lret
add
cli
mov
insb
negb
lods
inc
faddl
push
mov
popf
jmp
stc
in
enter
pop
mov
mov
dec
out
mov
outsl
test
mulb
js
jbe
popa
inc
in
push
jae
xor
xor
jmp
loopne
cmp
je
inc
movzwl
cmpsl
jge
mov
push
loopne
clc
push
pop
and
sub
pop
loopne
cmp
xchg
ljmp
add
leave
push
xchg
sbb
push
rcll
dec
mov
xchg
in
and
lods
jb
or
ret
mov
daa
jl
mov
push
or
cmp
cld
jl
or
in
push
and
into
pop
clc
test
pop
jecxz
ret
dec
xchg
mov
push
stos
dec
jl
jmp
enter
leave
je
pop
outsb
add
repnz
pop
das
mov
push
mov
xchg
pop
clc
xchg
sbb
mov
ret
cmp
aam
or
jmp
pusha
push
hlt
out
push
movzbl
and
cmp
mov
mov
test
push
cmp
jl
jmp
ds
mov
lret
dec
pop
pop
and
in
and
adc
jno
call
mov
or
pop
ja
popf
ret
mov
cmp
insl
imul
mov
push
jnp
inc
add
cmp
pusha
push
inc
jle
lea
cmp
push
mov
cmpl
xor
jnp
xchg
pop
aaa
clc
dec
cmpsb
outsl
cmp
cmpl
or
test
jno
jp
dec
pusha
cmp
ret
xchg
push
adc
fs
add
ror
push
mov
xor
cltd
cmp
pop
jns
int3
sbb
pop
inc
pop
jne
push
add
jo
es
cmc
shlb
clc
les
jo
push
cmp
pop
push
pop
and
add
or
ret
dec
pop
lock
pop
sub
jg
and
fwait
cmp
or
and
js
xchg
sbbb
hlt
xor
push
rclb
cmp
mov
cmovbe
sbb
addr16
adc
add
mov
test
push
pop
pop
ret
nop
test
jnp
and
sub
sbb
push
pusha
inc
out
sub
pop
ret
mov
xchg
out
push
mov
pop
inc
xor
fld
push
daa
dec
mov
xchg
vmovsldup
lret
sahf
add
cld
pop
daa
xor
and
mov
mov
lcall
sub
sti
push
and
insb
scas
push
push
push
add
into
in
faddl
adc
pop
loop
pop
jo
fadds
jo
and
ljmp
push
xchg
mov
push
jb
xchg
fs
pop
outsl
test
orb
jae
es
imul
gs
lret
cmp
pop
cs
add
dec
iret
in
add
jnp
mov
push
mov
insb
or
or
fildl
push
cli
mov
test
cmp
add
pop
xlat
xor
jo
push
das
aam
mov
mov
dec
test
and
and
pusha
insb
popa
and
mov
cmpsl
pop
add
dec
inc
fs
push
movsb
push
loope
mov
add
push
test
dec
repnz
stc
xchg
jecxz
cltd
or
and
cmp
mov
inc
xchg
in
inc
sbb
cli
jae
sub
mov
push
das
sti
add
sbb
mov
int3
adc
fnstenv
mov
cwtl
xchg
int3
hlt
jo
mov
insl
add
pop
xchg
add
adc
clc
bound
rorl
es
add
cmp
in
loope
mov
or
cmp
or
adc
adc
adc
rcll
xor
aad
mov
addb
leave
cmc
ja
push
sbb
lea
inc
repz
mov
dec
adc
addr16
dec
pop
cmp
cmp
outsl
or
rolb
inc
add
inc
or
add
hlt
outsl
dec
pop
adc
push
bound
pop
pusha
mov
aam
cmp
push
notl
pop
enter
adc
inc
push
inc
adcb
jmp
jp
push
cs
cmp
push
notb
cmpb
in
loopne
xor
mov
sbb
inc
sub
push
inc
mov
insl
and
lret
jne
xor
aad
add
mov
and
push
add
scas
and
or
and
push
dec
arpl
jbe
add
in
push
jge
rcl
pop
sub
pop
adc
jle
and
ret
mov
daa
sub
std
pop
call
mov
inc
mov
push
aam
inc
or
rclb
dec
and
fstp
push
clc
or
or
xor
sbbb
jns
daa
jl
fiaddl
sbb
add
pop
mov
loop
ret
or
loopne
sbb
add
cmp
push
loopne
sbb
push
loope
or
jecxz
push
test
cmpl
xor
or
jno
inc
insb
pop
or
rcll
push
test
pop
sub
adc
dec
adc
es
or
jmp
negl
enter
and
inc
test
push
add
dec
adc
or
mov
loopne
sbb
arpl
rclb
inc
xor
mov
xlat
mov
notb
push
arpl
mov
lret
rcrl
inc
and
insl
mov
adc
out
outsl
cmp
imul
pop
scas
test
out
adc
mov
pop
add
sub
mov
out
gs
loope
das
repnz
rol
shrl
outsl
das
loopne
sarb
jge
xchg
mov
lock
iret
loope
fimuls
add
jns
mov
inc
pop
pop
cmp
cwtl
sbb
cmc
inc
or
ss
leave
and
push
fcomps
sbb
push
or
cmp
push
mov
loopne
cmpsl
mov
mov
jne
cmc
pop
dec
sbb
dec
add
fdivrl
pop
mov
and
pop
add
xor
jl
aaa
adc
popa
mov
inc
mov
xor
fimull
es
or
xchg
xchg
insb
or
xchg
inc
xor
dec
add
push
xchg
mov
dec
pop
xchg
xor
cli
sbb
sti
mov
ja
lods
out
adcl
je
sub
add
push
clc
scas
lea
push
cltd
loopne
fmuls
sbb
sbb
jo
push
testb
sbb
shlb
push
enter
add
loopne
mov
adc
push
adc
xor
xchg
imul
sub
jl
pop
mov
pusha
loopne
lods
loope
psrad
or
jg
xchg
and
movsb
or
lret
fcoml
sbbl
push
call
cmp
lea
adc
hlt
mov
cmp
push
push
push
sbb
daa
in
mov
adcb
sub
ds
mov
mov
push
sbb
cmp
int
add
sub
aaa
and
add
inc
je
adc
lret
leave
push
adc
push
test
adc
test
push
ds
cs
mov
sub
and
fildl
inc
fstps
and
fstpl
testb
je
adc
aad
pop
add
or
mull
pusha
and
mov
adc
loopne
les
adc
pop
aam
loope
sub
jge
aaa
mov
xor
repnz
add
loopne
or
rol
loope
mov
add
cld
test
xor
cmp
ja
test
sub
pop
dec
xchg
dec
leave
xchg
lcall
and
add
test
xchg
lods
jno
shl
test
je
sub
pop
mov
push
adc
add
adc
lret
and
dec
cmpl
mov
sarb
scas
test
or
inc
lods
test
int
loopne
inc
inc
and
add
lea
add
fsub
addb
mov
xor
xchg
xchg
stos
sbbl
mov
or
dec
push
adc
dec
pop
jg
add
mov
push
rep
push
adc
push
in
clc
cld
shlb
push
xchg
int3
orb
push
stos
xchg
stos
push
sbb
and
sbb
jle
je
push
jmp
and
adc
fdivrs
insl
and
jl
mov
addr16
rorb
call
mov
xor
cmp
add
faddl
icebp
loopne
cmpsb
and
std
adc
hlt
clc
xchg
sbb
imul
loop
fisubrs
mov
push
xor
jbe
xor
pop
lea
push
pop
push
cs
or
adc
pop
or
sbb
ja
andl
and
push
or
mov
mov
inc
dec
mov
and
dec
nop
pusha
mov
pop
jle
add
test
dec
adc
stos
pop
mov
adc
or
dec
mov
add
movl
dec
cmp
inc
aaa
test
fldl
mov
mov
pop
hlt
xchg
pop
pop
push
mov
push
xor
mov
sbb
pop
dec
or
mov
test
push
lds
loope
add
in
push
in
inc
and
mov
in
mov
wbinvd
dec
pop
loope
ja
mov
incb
fcmovnbe
add
mov
repnz
inc
fimuls
mov
add
ret
add
xorl
cmp
jl
push
cmp
jnp
test
push
inc
push
pop
les
sub
leave
sbb
adc
pop
or
add
cmp
mov
sbb
or
stos
cltd
adc
in
cmp
cmp
pop
sub
cltd
inc
sub
lds
inc
adc
dec
push
out
in
sti
or
inc
xor
pop
push
sbb
fs
and
sete
jb
mov
std
push
and
mov
sti
bndldx
xchg
mov
ret
sub
mov
mov
pop
cltd
jbe
cmp
cmp
in
dec
xchg
mov
loopne
adc
mov
mov
lds
in
add
pop
push
push
mov
mov
fisubrl
jl
fmull
push
fbstp
lds
jp
pushl
xchg
inc
faddl
jmp
fists
mov
sub
pop
push
pusha
add
test
or
push
imul
mov
popa
cmpsl
mov
movsb
xorl
fs
out
push
jb
jne
sub
movsl
xchg
lods
andl
mov
add
stos
push
lea
pop
stos
loope
cli
ds
push
add
pop
pusha
add
pop
mov
dec
sub
ret
add
cmp
sub
xlat
mov
shlb
adc
ljmp
xor
xor
aas
xchg
sbb
cmp
push
lock
sbb
incl
aaa
mov
lock
je
ja
pop
push
or
push
in
adc
int3
fcomps
cmp
push
sub
xchg
iret
rorl
imul
push
int3
pop
cmp
pusha
fistpll
add
insl
dec
rorb
xor
xchg
pusha
cwtl
pop
push
pop
mov
nop
mov
push
mov
and
js
xchg
nop
add
fcoml
sub
loopne
imul
in
push
mov
mov
xlat
sub
je
dec
shlb
out
hlt
or
stos
mov
hlt
or
jno
jp
lock
orl
mov
jne
cmp
inc
mov
repnz
or
inc
or
and
pop
in
ret
mov
mov
iret
es
push
xchg
sub
mov
xchg
stc
xor
clc
xor
wbinvd
jp
mov
cld
sub
test
orb
shr
repnz
roll
jno
or
insl
sub
cmc
sub
test
je
jl
aas
out
loope
add
movb
xor
mov
andb
xor
and
inc
xor
push
pop
ljmp
push
aad
fistpll
adc
fdivrs
je
leave
and
sub
fwait
lods
lods
push
cli
jno
or
fs
pop
je
dec
shll
or
adc
jle
jae
push
outsb
push
pushl
xchg
sub
mov
mov
or
in
adcb
push
or
mov
mov
pusha
ret
fs
adc
aad
into
sub
daa
sbb
xor
neg
push
lea
or
hlt
adc
jno
push
out
pushf
pusha
sub
das
dec
orl
nop
lods
mov
popa
sub
fsts
or
mov
mov
mov
andb
lods
in
mov
mov
sub
sbb
adc
and
sub
nop
push
addb
out
jge
jb
ret
push
enter
je
pop
mov
insb
push
or
les
int3
jge
les
adc
jge
lahf
xchg
rorb
dec
xor
xchg
dec
mov
mov
mov
push
les
jle
xor
in
mov
xchg
js
mov
push
push
add
fnstcw
sub
mov
sbbb
cwtl
inc
shrb
test
adc
lods
je
xchg
xorl
jb
adc
test
pusha
dec
test
mov
mov
or
pop
sub
sub
scas
and
dec
call
cwtl
mov
stos
lret
or
jmp
icebp
xchg
push
jle
xlat
add
dec
out
jp
add
push
outsl
dec
adc
add
pop
test
sti
sahf
mov
and
popa
pop
add
loope
mov
mov
mov
jp
inc
or
out
push
or
pop
movnti
sti
push
out
inc
test
rorb
xchg
cld
sub
pushf
jp
mov
or
mov
ljmp
addl
sbb
stc
xor
xchg
xlat
int
ja
inc
test
adc
xchg
push
sub
lcall
dec
push
in
cmp
pop
xchg
fsub
push
adc
iret
add
add
sbb
imul
enter
and
cmp
ss
subb
fcompl
popa
jno
sets
adc
jnp
adc
movsl
inc
shrl
xlat
mov
call
outsb
or
gs
outsb
fs
dec
imul
mov
jge
in
daa
testl
mov
push
push
push
adc
push
xchg
popf
cmpsl
push
adcb
jl
arpl
and
or
add
add
inc
sbb
inc
cmovo
fsubrl
mov
jg
or
xchg
in
or
popf
jo
jmp
fisubrs
inc
das
cmp
mulps
sub
jbe
movb
sahf
ja
sbb
scas
adc
dec
push
in
pushf
pop
into
aam
lret
int3
lock
jmp
leave
push
aam
pop
xor
cli
fdivr
and
js
add
push
arpl
mov
gs
mov
movsb
fsts
adc
loop
adc
mov
or
xchg
in
sub
xor
or
or
iret
call
mov
push
push
mov
dec
outsb
jae
or
push
jae
hlt
jmp
mov
shrb
sbb
test
fdivrl
and
mov
fidivrl
mov
aad
addb
push
cmpsb
into
pop
sub
or
inc
and
sbb
add
inc
add
andl
jns
sub
cmp
xlat
jnp
arpl
xchg
cmp
das
test
mov
inc
dec
test
push
in
loopne
cmpsb
mov
push
sbb
mov
daa
push
mov
test
jo
fsts
lock
push
push
add
add
push
ds
outsl
and
mov
clc
jg
add
sub
and
lret
mov
xchg
or
mov
popa
std
orb
push
adc
and
lock
push
xor
pop
jne
movaps
xchg
hlt
mov
imulb
sbb
pop
xchg
dec
and
mov
xorb
cmpsb
mov
mov
push
sbb
out
pusha
cltd
or
jo
in
lods
imul
sub
outsb
sbb
cmp
jo
outsl
push
insb
adc
inc
sbb
dec
pop
dec
int3
dec
or
fbstp
dec
sbb
sbb
or
sbb
test
sbb
test
insb
xor
sbb
aad
ffreep
inc
cli
mov
test
pop
xor
mov
pop
add
test
xchg
dec
js
sbbb
cli
sahf
dec
pop
pop
fbstp
push
lock
cmp
push
sbbl
jmp
push
or
imul
aam
jle
sub
push
inc
fidivl
loop
add
xor
test
shl
mov
sbb
adc
mov
shl
add
aas
mov
adc
push
test
xchg
repnz
neg
pop
sbb
inc
decb
jne
jp
add
cltd
push
mov
dec
jmp
dec
js
aam
add
pop
mov
push
pop
and
inc
js
or
jle
jmp
mov
pop
mov
jp
hlt
rol
clc
xor
pop
lods
jmp
push
rolb
adc
les
jbe
hlt
inc
mov
mov
stos
and
fiadds
test
mov
lock
andb
push
sahf
push
xchg
out
sahf
stc
add
cmp
adc
mov
add
lods
push
inc
movsb
add
in
ss
pop
inc
adc
cmp
jb
xor
mov
xor
inc
and
adc
je
mov
or
sub
push
sbb
pop
shlb
js
dec
fdivrs
je
xchg
andb
sbb
fcoml
mov
inc
pop
dec
inc
jecxz
or
xchg
sbb
cmp
les
xchg
adc
inc
inc
push
xor
adc
push
xchg
push
mov
cmp
inc
push
je
or
jle
push
imul
add
inc
dec
cwtl
add
sbb
and
jb
cltd
inc
or
mov
cwtl
jle
or
push
or
push
cmp
push
in
jo
inc
js
cltd
pusha
mov
lods
cwtl
inc
in
push
je
adc
sbb
jl
sbb
rolb
adcb
xlat
add
pop
xor
roll
clc
add
xor
sahf
subb
push
cmp
mov
es
andl
adc
cli
pop
sub
mov
mov
movl
push
mov
ss
je
or
push
dec
cwtl
sub
hlt
add
hlt
into
mov
cmpsl
std
dec
and
and
push
xchg
xchg
sbb
sub
scas
movsl
and
or
sub
cmc
and
mov
mov
andl
xor
mov
fldl
imul
push
inc
test
mov
sub
lret
mov
js
sbb
xor
xchg
push
aaa
loope
es
lea
push
push
push
and
sub
add
call
push
ret
mov
mov
test
mov
les
arpl
lret
jmp
leave
fadds
les
std
adc
cmp
inc
pop
lods
scas
dec
pop
and
dec
xchg
xor
sbb
call
mov
jnp
pop
aam
push
test
nop
jnp
addb
dec
push
in
in
aam
roll
inc
loope
fs
lret
addl
xlat
fbstp
dec
inc
or
lock
mov
pop
inc
dec
out
adc
stos
xchg
xor
fadds
jl
mov
das
or
clc
sbb
lods
or
xor
dec
enter
cmp
repz
mov
dec
ret
dec
adc
dec
outsb
lods
sbb
es
shll
insb
xchg
dec
cs
add
fmuls
in
mov
lds
push
fstps
bound
pushf
jl
aad
imul
jb
hlt
add
adc
or
push
sarl
out
or
test
nop
push
lea
roll
in
or
inc
inc
sub
dec
cmpsl
adc
or
lock
mov
sub
insb
leave
pop
ss
xorb
mov
leave
mov
push
push
daa
dec
add
xor
outsl
dec
pop
xor
rorb
and
rclb
or
decl
pop
add
daa
dec
dec
mov
mov
or
inc
cmp
mov
aaa
aas
in
test
mov
ljmp
push
inc
xchg
lret
scas
pop
inc
dec
or
add
mov
js
mov
enter
insb
int
mov
xchg
rolb
dec
rcl
mov
fsts
jne
movswl
sub
push
mov
out
shlb
js
adc
pop
daa
xor
sub
addb
mov
mov
das
mov
add
loopne
adcb
fldz
cmp
xor
xor
inc
data16
loopne
fdivrs
adc
or
imul
adcl
cmp
sub
pop
lds
fs
adc
cs
test
pusha
aas
jo
cmpsb
clc
cmp
pop
roll
movsl
sbb
mov
jp
adc
pushf
sar
add
leave
dec
xlat
pop
xchg
inc
mov
mov
pop
or
sub
add
sub
call
mov
mov
dec
test
jbe
fld
add
fstp
jmp
cmpb
in
int
and
loopne
out
clc
jl
adc
decl
imul
rolb
cmp
fsts
sub
add
subl
dec
sub
cmp
rcrl
mov
jnp
rorl
mov
dec
ret
inc
xor
fwait
dec
mov
inc
movsl
jp
test
leave
cmp
and
lods
and
push
or
push
mov
or
jle
ret
mov
cs
aam
ret
call
shlb
mov
adc
jle
je
adc
jns
or
pop
pop
push
mov
imul
iret
inc
sbb
jo
cmp
xor
add
and
inc
add
push
mov
jl
pop
mov
arpl
sub
jb
xorb
push
mov
clc
and
mov
or
mov
sbb
dec
mov
mov
dec
andl
cmp
mov
xchg
xchg
test
jae
push
enter
mov
or
test
test
pop
xchg
pop
imul
cmp
scas
mov
movsb
into
lock
push
sbb
xlat
xlat
mov
cmpsb
cmpsl
aam
sbb
rcrb
inc
pop
sar
sbb
adc
subb
movsb
insb
imul
sub
aam
fsubp
xor
dec
das
mov
fwait
sub
cmp
push
aam
ss
bound
mov
adc
je
cmp
pop
xchg
or
jo
popa
push
test
call
push
pop
xchg
int
inc
inc
lea
inc
xchg
push
in
mov
jbe
push
pop
pop
add
mov
mov
push
insb
xchg
pop
jnp
mov
xor
push
sarb
test
pop
inc
dec
and
cmp
ss
and
popf
xchg
sbb
push
movsb
movsb
out
push
fiaddl
dec
push
dec
adc
adc
xchg
adc
adc
xchg
cmp
push
cmpsl
jne
negb
inc
addb
push
and
pop
addl
pop
pop
xchg
dec
or
push
ret
sbb
out
les
int3
add
sbb
addb
jno
inc
adc
lcall
cmp
shrb
add
pop
mov
xchg
add
sbb
cltd
dec
fiaddl
mov
jns
push
shl
fcomps
fmul
mov
clc
add
xchg
out
push
xor
adc
dec
inc
ret
add
push
mov
sub
call
xor
and
inc
sbb
adc
add
mov
and
lcall
mov
data16
adc
scas
mov
adc
lret
mov
lret
mov
dec
fisubs
rorb
sub
fwait
movsl
popf
movsl
movsl
mov
in
mov
movsl
dec
xchg
or
push
jb
mov
push
pop
mov
adc
fsub
sarb
lret
pop
mov
jb
sub
add
sbb
add
add
mov
dec
and
jnp
ficomps
mov
mov
stos
push
lcall
mov
mov
lods
scas
shl
mov
sbb
in
mov
xor
cwtl
lea
lods
jle
cmp
clc
xlat
int3
stos
mov
dec
lods
jne
xor
icebp
jno
or
push
outsl
sbb
imul
inc
dec
push
in
dec
push
dec
mov
out
pop
jg
inc
lahf
sub
aas
add
incl
cmp
mov
inc
cmp
mov
cmp
add
fst
jnp
adc
cmp
or
inc
pop
add
stos
mov
or
pusha
jno
jl
loopne
or
int3
and
mov
adc
push
repz
leave
inc
push
pop
rorl
or
add
pop
xchg
adc
mov
popa
jne
or
push
mov
pop
movsb
daa
aam
sbb
or
mov
push
outsl
sub
and
xor
sub
lea
adc
daa
push
insl
pusha
cmpl
or
push
mov
loop
lcall
or
mov
repnz
aam
shlb
test
cmp
sbb
jne
mov
fiaddl
xor
cmpb
xor
and
repz
cmc
or
and
or
repnz
aas
repnz
or
push
loope
scas
arpl
add
jno
lcall
and
sbb
push
mov
je
lock
mov
mov
mov
mov
nop
mov
push
sbb
xchg
movsl
push
test
les
inc
adc
popa
cmp
mov
test
faddl
in
adcb
testb
mov
ljmp
xor
dec
push
addr16
pop
xchg
inc
sbb
jns
sbb
push
pop
inc
jo
push
or
fdivs
enter
pop
push
add
sbb
fcomps
mov
mov
ret
push
addr16
mov
rolb
mov
and
dec
and
or
mov
cmp
test
inc
std
jnp
mov
cmc
jae
pushl
mov
in
decl
test
dec
bound
or
xchg
push
jg
add
je
sub
imul
adc
daa
xor
xor
adc
mov
or
push
add
mov
lock
add
or
lods
sub
cmp
push
and
jl
or
xlat
lock
fadds
shlb
add
loop
jge
jns
adc
ret
jmp
adcl
pushl
or
lea
adc
les
daa
pusha
mov
add
daa
add
jl
or
insb
les
sbb
std
fisttpl
movsl
adc
inc
or
cs
iret
lods
push
rcr
dec
pusha
daa
inc
sbb
pop
loope
and
jo
mov
pushf
nop
cld
xor
aaa
or
and
or
sub
enter
mov
lods
test
cmc
jecxz
insb
cmp
pop
int3
mov
pop
cmpl
add
pop
sbb
cmp
das
ret
mov
dec
xchg
rorb
pop
mov
popa
cmp
xlat
fidivl
add
add
fcoml
dec
mov
mov
lods
mov
or
pop
aas
add
jmp
sbb
dec
jmp
xor
and
outsl
mov
mov
xchg
xchg
adc
jecxz
add
sbb
adc
scas
add
and
aaa
push
push
dec
scas
jg
or
js
iret
add
xchg
xor
cmp
je
or
je
add
jo
dec
pop
mov
jle
nop
push
adc
dec
mov
or
call
adc
mov
push
movsl
dec
add
adc
out
ret
scas
inc
ds
out
sbb
add
jmp
adc
andb
push
xor
roll
add
push
inc
shrl
bound
divb
jle
ljmp
and
sub
and
push
dec
mov
sub
inc
or
lock
in
ficompl
int
mov
and
js
sbb
ss
xor
lcall
lock
push
aam
mov
push
or
bound
incl
dec
ja
movzbl
test
xor
xchg
inc
jmp
loopne
push
adc
adc
xor
mov
inc
jno
jmp
adc
pop
mov
adc
es
push
add
mov
push
mov
fcmovne
cs
jns
sti
test
pop
push
push
push
cli
push
imulb
jmp
pop
jnp
push
cltd
enter
adc
add
mov
pop
add
xchg
sbbb
inc
sub
shll
mov
mull
jecxz
push
inc
jnp
dec
je
add
sti
inc
mov
cmp
iret
out
aam
jne
or
test
and
in
push
adc
movq
jmp
es
lret
xchg
ret
ret
adcl
aaa
es
and
mov
orl
mov
and
add
and
sub
cs
push
cwtl
adc
sub
and
ret
adc
sub
push
lock
rcrb
or
xchg
inc
leave
add
sub
or
adc
pop
je
sub
je
push
or
push
mov
jmp
xchg
push
fs
pop
cmp
mov
pop
stos
mov
mulb
cmp
sub
jne
xchg
xor
inc
dec
pushw
aam
mov
cmp
or
jne
test
xor
mov
push
or
or
push
cmp
pop
push
push
es
je
out
cld
push
hlt
fsubrs
xchg
push
fstpl
sbb
or
jle
out
push
loopne
and
int3
sub
jns
sbb
cld
aad
cmp
fwait
or
popa
mulb
pop
bound
mull
jbe
or
testb
clc
mov
adc
xchg
add
addl
push
inc
mov
sbb
jp
jp
mov
rolb
incl
pusha
mov
pop
imul
pushf
cli
add
push
xchg
imul
subl
xchg
mov
in
push
cltd
push
push
jbe
and
pusha
jecxz
and
adc
jo
rorl
mov
lret
fwait
ss
ss
lods
adc
jbe
dec
and
push
cmp
in
cld
cs
test
mov
pop
and
ja
les
sbb
or
cmpsb
movsb
fs
or
or
outsl
jmp
ja
mov
inc
out
push
in
pop
aaa
popf
inc
xchg
push
xchg
add
and
adc
in
add
cmp
or
xchg
inc
xor
adc
js
in
cmp
push
psubq
inc
or
xor
add
sbb
pop
add
or
and
sbb
inc
dec
sub
ret
add
or
and
enter
add
ss
pop
sahf
add
sub
loope
ds
push
xchg
inc
or
fsubrl
sub
enter
and
ss
dec
sub
mov
js
sbb
fs
in
les
inc
loopne
inc
push
cmp
adc
pop
push
sarb
add
aam
pop
loop
test
xchg
lock
sti
pop
cmp
cmp
jne
cmp
jne
fadd
push
enter
mov
mov
dec
loop
pop
and
pop
adc
testb
jne
lret
mov
sahf
jne
mov
pop
sub
fld
aam
stos
pop
je
sub
movsl
jne
and
add
adc
fcoms
mov
adc
in
das
test
adc
dec
jbe
enter
roll
or
or
push
push
testl
lock
xlat
cwtl
push
inc
sub
lahf
push
inc
je
sub
lea
cmp
jne
test
add
ret
test
imul
popf
xchg
push
add
add
test
sbb
fcoms
fs
sub
into
push
push
sbb
pop
cmovns
je
inc
xchg
adcb
or
xor
or
sub
nop
roll
idiv
pop
dec
or
push
sbb
jnp
inc
dec
pop
mov
fsubs
je
adc
mov
dec
xor
test
mov
pop
mov
dec
mov
les
js
pop
fidivrl
add
in
popf
add
push
in
pushf
cltd
dec
mov
mov
pop
lock
gs
mul
jmp
or
roll
or
inc
jno
sub
jp
popf
test
dec
pusha
js
ss
push
cld
mov
jbe
inc
mov
adc
push
nop
or
xchg
and
add
cli
jle
shlb
aas
push
inc
cld
cmpl
or
in
je
jmp
test
sbb
push
sarb
jo
lock
xor
ljmp
pushl
js
push
outsl
movsb
ffreep
inc
and
mov
xchg
imul
pop
xor
add
fnsave
je
data16
mov
ja
lods
jo
sahf
scas
outsl
jbe
repz
dec
xor
inc
sbb
push
and
push
mov
into
and
pop
cli
xorb
mov
or
ret
mov
sbb
inc
mov
push
jno
fs
ljmp
ja
fcmovb
adc
pop
cmp
push
call
jmp
rolb
cmp
or
or
or
pop
pop
mov
add
pop
sbb
insl
add
ljmp
or
fldt
jmp
repnz
push
and
outsl
or
ljmp
push
lock
xchg
repz
int3
or
pusha
shll
inc
mull
push
mov
mov
push
rol
push
loopne
add
add
xor
add
push
adc
dec
push
adc
mov
sbb
xchg
loope
or
adc
pop
nop
movsl
push
push
xchg
jae
add
cmp
ja
je
inc
test
daa
xchg
xor
int3
lds
aad
fcoml
and
mov
cmp
data16
mov
imul
sbb
and
or
out
sar
scas
jge
movsb
xor
push
jmp
lahf
and
adc
mov
jecxz
mov
cmp
lods
sub
popa
mov
and
sub
insb
jnp
ret
addr16
dec
fmull
cmc
fs
or
daa
dec
push
xor
fiaddl
scas
out
jbe
and
jb
xor
push
xchg
mov
dec
or
mov
mov
xchg
adc
sbb
add
or
inc
dec
loope
in
cltd
dec
pop
lahf
ljmp
popa
or
jae
sbb
lret
xor
mov
data16
cmp
in
push
testb
mov
add
daa
push
adc
adc
insb
jmp
add
test
mov
fcoms
cmp
add
push
roll
mov
xchg
or
adc
sub
jge
sub
stc
pop
fcomip
or
pop
sub
js
jmp
popa
fwait
rcrb
sbb
push
push
inc
shlb
sbb
repz
ss
push
and
outsl
inc
arpl
adcl
inc
pop
sub
sbb
sbb
add
rorb
stos
sbb
adc
test
or
mov
sub
and
xor
adc
sbb
xchg
pop
rorb
mov
pop
sbb
mov
in
jnp
jae
repz
dec
faddl
aaa
test
add
fwait
push
mov
popa
pop
mov
sbb
xchg
xor
add
dec
sbb
cmp
add
cmpsl
jo
add
adc
hlt
push
cmp
and
adc
lahf
andl
sub
mov
pop
aaa
mov
flds
or
les
insl
and
mov
jb
hlt
cltd
das
add
pop
test
mov
popf
mov
xchg
lock
xor
cmp
fs
pop
scas
or
and
imul
jl
imul
nop
rclb
push
pop
push
mov
adc
movsl
fucom
add
imul
sti
pop
cmp
sbb
push
and
sbb
add
or
mov
jo
inc
mov
dec
stos
push
je
add
ss
cmp
jmp
push
sub
lahf
cltd
mov
loopne
push
pop
add
sub
adc
ljmp
xchg
rorb
lds
loop
inc
sbb
fcomps
scas
mov
xchg
xor
lret
call
mov
jbe
sarb
mov
sub
jge
sbb
pop
sti
pop
or
sarb
and
adc
mov
and
jl
jg
mov
mov
adc
adc
inc
cli
xchg
xor
adc
subb
out
sub
rolb
push
aam
push
dec
cli
push
push
push
add
pop
cmp
push
pop
and
pop
push
dec
cwtl
push
push
sbbb
ret
mov
cmpl
jmp
add
adc
or
xor
frstor
add
pop
dec
pop
cmp
xchg
mov
push
stos
out
mov
out
pop
adc
mov
add
in
cmp
mov
adc
fistl
sbb
lret
sbb
inc
ret
and
int3
add
fxch
add
adc
fldl
mov
mov
push
fstcw
addw
dec
je
test
mov
out
lock
or
mov
jp
pop
test
test
fwait
xchg
adcb
dec
fyl2x
dec
mov
pop
adc
xchg
idiv
mov
push
and
lea
das
mov
pop
rcl
insl
lret
sub
aas
or
mov
jne
inc
jmp
faddp
push
jns
sti
jno
and
lock
pop
mov
mov
xor
push
push
and
insl
gs
jns
jne
in
sbb
loop
cmp
sub
jne
jp
or
mov
push
dec
dec
fidivrl
fldl
mov
dec
pop
frstor
fldl
adc
movsl
popf
xchg
pusha
push
pop
test
pop
push
loope
xchg
pop
cmp
loop
fldl
je
testb
mov
in
pop
imull
pop
mov
fldt
je
mov
popa
xchg
fldz
and
add
xor
fld1
daa
dec
pop
or
push
test
ljmp
lods
nop
cmp
test
inc
cld
fcomp
mov
fwait
scas
jne
in
or
mov
shrl
fnstcw
add
ret
insb
mov
or
out
ss
fs
or
and
adcb
lret
add
push
dec
or
fcom
addr16
dec
idivb
mov
xor
inc
mov
stos
mov
lcall
mov
jge
mov
cmp
cmp
and
ss
cs
inc
cmpsl
imul
adcl
mov
mov
gs
sbb
inc
xor
xlat
sar
adc
fstpl
sbb
sbb
mov
inc
aaa
fsubl
in
ds
sub
sbb
pop
mov
add
mov
mov
clc
inc
jmp
test
sahf
jp
fstp
sub
push
inc
mov
cmp
lock
mov
je
mov
mov
repz
mov
je
inc
pushl
lcall
adc
pop
pop
cmc
inc
nop
mov
pop
mov
loop
mov
pop
push
daa
push
sub
sub
test
push
add
xchg
and
or
jo
shll
xchg
pop
jmp
mov
mov
fcompl
fnstsw
jne
push
jg
and
ret
and
push
lock
xchg
mov
sarb
fwait
pusha
les
adc
mov
mov
fdivrs
adc
inc
loopne
mov
jg
adc
enter
xchg
loopne
mov
mov
rcrl
adcb
sbb
mov
add
stc
inc
int
sub
push
in
pop
dec
jne
testl
clc
nop
push
shll
add
xor
orl
dec
xor
inc
jo
rclb
rcrb
sbb
dec
adc
std
mov
and
jle,pn
jo
nop
inc
in
iret
pop
ror
adcb
pop
jp
inc
loope
pop
fs
mov
je
int
or
gs
test
ljmp
and
xor
cmpsb
cmp
pop
dec
popa
or
rcr
pop
sbb
push
sbb
clc
jbe
and
cmpps
lods
push
shl
adc
es
inc
cmp
add
push
or
adc
rcrb
imul
mov
mov
or
mov
fcomps
add
jmp
iret
pop
pop
xchg
test
and
or
or
ret
mov
cmc
int3
mov
pusha
std
fcoms
nop
cmp
pop
aad
fistl
mov
adc
sbb
insb
dec
inc
adc
rol
sbb
fs
cmpsl
stc
xor
pusha
push
ret
and
rcll
lret
add
xor
cwtl
inc
das
ljmp
inc
loopne
sarl
enter
jge
out
shl
xor
stos
pop
int3
jo
jo
pop
jo
add
rcrb
jne
test
orl
and
hlt
fcomi
or
lock
and
insl
movsb
sbb
inc
and
imul
sub
repnz
pop
es
int3
add
inc
roll
pop
jnp
fcoms
pop
inc
xor
popf
cmp
ret
mov
and
divps
xchg
add
lss
or
cld
and
lret
lock
adc
jbe
pop
cmp
js
out
es
mov
jbe
jne
push
and
arpl
pushf
xchg
aad
add
add
movsl
push
dec
and
rcrb
ss
into
add
in
imul
xor
mov
add
pop
add
add
cmp
insl
in
into
call
jge
xor
dec
adc
mov
add
add
dec
mov
sub
subb
rclb
mov
ljmp
and
mov
push
jnp
dec
xlat
mov
adc
cmp
dec
lock
push
xor
movsl
pop
push
test
or
je
shrb
jb,pn
je
ret
sbb
ljmp
jl
add
ret
pop
rcll
mov
jge
and
push
adc
ret
popl
stos
and
fcoml
jns
shl
push
mov
pop
push
or
bound
or
mov
adc
or
jecxz
add
imul
cmc
push
out
mov
imul
add
movzbl
adc
sbb
lret
xor
add
cmp
inc
add
inc
jmp
cmp
push
lods
and
jp
xchg
fdivr
fldl
push
adc
or
mov
test
test
inc
sub
jl
sub
pop
xor
xchg
int3
push
fcmovnb
add
orl
aaa
inc
imul
fwait
lea
popa
jmp
movsl
in
iret
cmp
ret
jne
cld
int3
lock
pop
ret
push
xor
and
sub
push
lock
in
xor
sub
pop
lea
or
test
jo
sbb
pop
aaa
enter
adc
stos
imul
insl
mov
inc
pusha
push
jo
mov
adc
or
add
dec
mov
jo
rorl
push
add
insl
or
mov
fcompl
or
adc
push
mul
cmp
lods
inc
js
or
testl
pop
cmc
inc
subl
push
dec
cmp
add
inc
rcll
lock
push
inc
jp
test
dec
pop
clc
xchg
roll
mov
mov
push
std
mov
das
jbe
gs
xor
inc
ret
inc
mov
xchg
xchg
mov
dec
adc
add
ret
push
inc
mov
mov
ss
add
fs
pop
mov
mov
aad
cmp
pop
pop
dec
mov
daa
pop
and
invd
arpl
imul
ret
clc
mov
cmpsb
pop
hlt
lea
clc
xor
mov
fsubrs
aaa
mov
push
ficoml
xchg
or
imul
push
rclb
ret
test
sbb
int
fiadds
fisubrl
sbb
cmp
or
cmc
mov
dec
repnz
mov
add
ja
orb
sbb
fldt
jne
inc
mov
push
or
hlt
testb
push
cmpb
imul
popa
hlt
pop
outsb
int
jne
push
add
subb
or
jmp
or
orb
lock
mov
aaa
pop
push
xor
inc
mov
mov
jecxz
in
pminub
jae
sub
dec
push
sbb
sub
add
mov
inc
or
inc
ds
sub
leave
and
and
dec
sub
cs
mov
jg
out
jle
mov
inc
push
xor
mov
jmp
ljmp
shll
sbb
lock
idiv
neg
and
cmp
or
cmp
add
int3
mov
dec
dec
fsub
sbb
mov
ljmp
dec
and
add
fcompl
sbb
sbb
pop
inc
jl
push
add
ret
jns
jmp
mov
or
popa
into
add
lahf
enter
pop
adc
push
mov
addr16
push
or
lcall
pop
lahf
adc
sahf
lock
push
mov
cltd
mov
adc
or
pop
mov
js
inc
jne
pop
insb
jmp
jb
stc
lret
movsl
xor
test
mov
add
push
aam
cs
int
lea
es
adc
and
xchg
or
pop
or
lods
psubw
mov
sarl
dec
add
add
fsubrp
nop
cmpsb
nop
inc
inc
inc
inc
jg
sahf
out
add
insb
fs
out
pop
push
dec
jg
mov
repz
pop
sbb
in
in
iret
repz
lock
hlt
clc
clc
adc
cmc
cmp
cld
xchg
sbbl
cmpsb
xor
loope
xchg
jnp
mov
mov
mov
lock
nop
cmp
repz
sbb
or
je
into
jl
cld
jmp
in
cmp
xor
bound
pop
stc
sub
fcmovnu
push
cmp
pop
nop
dec
push
push
xchg
add
dec
mov
lods
push
test
xchg
mov
aas
inc
imul
add
nop
dec
add
inc
jno
push
pop
add
imul
enter
jns
in
in
push
hlt
cld
add
or
out
out
adc
subb
sbb
jns
out
sbb
adc
out
sahf
out
or
or
int
nop
add
inc
or
pop
dec
inc
sub
insb
subb
add
sub
mov
cmc
shlb
and
lock
add
orb
mov
inc
mov
adc
les
mov
ret
push
inc
or
mov
inc
test
ja
sbbb
dec
shrb
pusha
adc
repnz
sbb
xchg
cmp
dec
shlb
cmp
inc
cli
mov
or
ret
xor
imul
xchg
jae
bound
rcl
jno
rcrb
jo
mov
jg
test
or
push
sub
cmpsb
ret
fucomip
push
push
sub
cmp
xchg
loope
xlat
mov
lods
xchg
addb
jbe
add
add
xchg
je
lods
push
xor
lret
leave
clc
jle
les
mov
mov
push
mov
dec
inc
loop
jb
fistpll
xor
adc
shrd
jecxz
lock
ljmp
call
pop
or
push
movl
in
or
pop
xchg
xor
add
pusha
and
call
sarb
push
cmp
pop
popa
adc
je
pop
sub
jae
aam
fidivl
mov
in
adc
adc
or
cmp
sbb
mov
lods
cmpsl
mov
push
mov
mov
mov
imull
mov
xlat
adc
push
jne
mov
inc
daa
add
adc
ljmp
mov
out
inc
lea
inc
enter
mov
push
or
inc
cmpsl
sbb
loope
xchg
mov
xchg
mov
in
push
jne
jmp
clc
inc
test
out
in
lods
add
aas
jne
pop
cmp
jecxz
sbb
or
adcl
add
je
jne
fiadds
out
in
or
insb
xor
aam
mov
push
scas
or
mov
adcb
movsl
mov
cmpl
mov
test
push
scas
je
ljmp
mov
jmp
rcll
push
icebp
push
aam
add
mov
or
mov
rol
clc
pusha
jne
inc
test
mov
loop
jge
movsl
ss
mov
push
sbb
mov
out
pop
ret
mov
push
ficoml
pop
pop
js
pop
inc
or
inc
jp
or
aam
jmp
arpl
ret
test
dec
xchg
aam
mov
adc
out
xor
dec
dec
inc
or
mov
jne
fmull
sbb
and
inc
pop
adcb
xchg
fldenv
dec
jne
repnz
ja
and
in
lds
mov
adc
adc
in
inc
in
movsl
fidivs
sbb
add
dec
aaa
inc
mov
xor
or
in
test
pop
and
ret
pusha
jbe
inc
pop
rorb
and
popf
xchg
mov
testb
shlb
or
ja
cmpl
mov
pushf
and
jne
push
popf
mov
mov
add
and
push
daa
jo
cmpsb
jae
mov
or
mov
and
pop
in
jg
mov
daa
pop
mov
inc
ljmp
xor
sbb
pop
jle
loopne
adc
mov
mov
pop
rcll
cmp
ljmp
stos
icebp
push
incb
sbb
mov
add
data16
js
mov
orl
das
and
js
cmp
pop
add
outsl
cmpb
mov
adc
dec
and
cmp
sub
outsl
xchg
ret
clc
push
sbb
xor
or
cmp
leave
add
enter
test
insb
inc
daa
xchg
add
xchg
mov
adc
push
cld
or
repnz
add
jae
push
cmp
add
mov
nop
jmp
cmp
sub
sub
adcb
stos
add
test
adc
das
js
pop
add
aad
in
inc
pop
or
cmp
xor
cmc
xor
rcrb
fcompl
xor
mov
dec
or
mov
dec
adc
clc
popa
jl
clc
jp
push
sub
add
push
push
dec
xor
sbb
push
sub
adc
aaa
mov
pop
mov
mov
adc
push
je
add
filds
jb
mov
nop
loopne
mov
call
div
jmp
sub
xor
jge
push
add
rclb
test
add
ja
ret
pushf
hlt
daa
adc
in
inc
dec
shr
sbb
push
andb
mov
mov
cmp
sbb
mov
rcll
xchg
adc
nop
shr
mov
pop
jl
clc
jle
lret
push
push
fisubl
addl
mov
loop
jne
pop
ret
jno
enter
push
je
mov
pop
inc
cmp
je
mov
movb
js
or
cmc
loopne
rcr
sub
lock
mov
mov
test
je
and
mov
dec
scas
mov
inc
shll
fucomip
mov
mov
ret
sub
sbb
or
lret
push
pop
jmp
in
dec
mov
push
cmp
lcall
and
add
pop
cmp
mov
test
je
cmp
ja
push
pop
dec
add
mov
cmp
dec
cmp
add
inc
cmp
out
cmp
sbb
or
inc
test
dec
aam
inc
sub
movsb
stos
lea
lea
mov
ss
push
cmp
aaa
ljmp
cmp
mov
shll
or
loope
vxorps
push
adc
loope
call
stc
xor
ret
aas
jle
xor
cmp
loope
mov
sbb
or
ss
cmp
mov
test
inc
cld
cmp
je
outsb
or
je
sahf
out
sarb
and
faddl
aam
xchg
pop
push
inc
ficomps
or
cld
jo
mov
jl
sbb
mov
std
mov
gs
je
cld
jo
push
lock
int3
xor
imul
mov
cmp
add
testb
push
and
call
scas
adc
or
scas
mov
inc
jne
add
nop
adc
pop
cltd
divl
enter
mov
outsb
inc
xor
sub
ret
cmp
adc
jmp
and
mov
decb
rep
test
mov
lret
push
jl
mov
lea
sbb
add
std
fsub
mov
hlt
dec
push
stos
mov
cmp
add
push
pop
push
loop
add
shl
sub
mov
pop
lcall
inc
adc
inc
imul
mov
push
dec
pop
shl
dec
shll
and
inc
xchg
push
popa
push
inc
scas
lcall
ret
insl
leave
pop
push
fiaddl
call
rcl
rorb
les
adc
and
mov
je
arpl
in
adc
sub
adcb
or
adc
pop
pop
je
dec
icebp
cltd
mov
ds
jne
nop
dec
jmp
sbb
stos
fwait
xchg
icebp
outsl
shll
jp
cld
push
and
jmp
sbb
adc
cmp
sbb
jb
aaa
xor
xchg
lods
aad
mov
mov
fnstcw
adc
inc
and
xor
or
mov
cmp
mov
les
or
repz
inc
push
scas
cmp
repnz
scas
inc
int
push
dec
or
sbb
and
inc
jecxz
adc
pop
sarb
lock
add
sub
sub
add
sub
cmp
dec
cmp
out
mov
movsb
xchg
mov
sbb
lea
pop
aaa
mov
add
or
sbb
out
xchg
inc
cmp
and
add
inc
loop
in
sahf
sub
incl
rcll
mov
mov
sti
add
jmp
popf
and
mov
fiaddl
lahf
test
push
adc
cltd
add
mov
in
inc
cli
std
add
leave
addr16
xchg
lods
clc
pop
inc
xchg
iret
mov
test
sahf
push
repz
add
adc
lods
inc
andb
dec
add
shl
or
pop
mov
sbbl
mov
movsl
sti
lea
loope
or
aam
mov
mov
or
hlt
ljmp
clc
les
inc
cmp
sbb
and
add
jno
push
fcmovnu
xchg
sbb
or
mov
adc
pop
add
jmp
add
shlb
or
lods
dec
jns
shl
nop
dec
cwtl
cmpsb
repnz
daa
pop
fcomps
xchg
stos
adc
adc
decb
cmp
je
icebp
sub
ret
sub
popf
jmp
cmpsl
rolb
in
mov
scas
iret
cwtl
xchg
dec
adc
rcr
cli
pushf
xchg
xchg
ljmp
ret
repnz
out
sahf
lret
and
mov
pop
jns
pop
mov
lea
and
mov
loop
nop
into
scas
les
add
add
popl
jne
jbe
or
mov
dec
movsl
sub
es
or
clc
aas
cmpb
div
prefetch
pop
push
pop
pop
fistpl
leave
fistpl
and
mov
pop
hlt
fbstp
andb
in
pop
test
clc
testl
aad
and
test
loopne
xchg
cmpl
aaa
or
xorl
mov
lock
xor
jmp
and
cmp
fcompl
cld
dec
pop
cmp
jb
xchg
cmp
dec
jbe
icebp
movsl
mov
and
dec
sub
dec
pop
ds
push
dec
add
inc
jo
bound
pushf
scas
and
jbe
je
adc
and
fdivs
and
cmpsb
popf
add
call
cmp
cmp
into
sahf
push
push
xchg
lret
les
jo
push
rcll
aad
pop
jo
fdivp
jl
adc
jbe
shl
or
xchg
nopl
imul
add
in
or
mov
push
jae
ds
fs
call
repnz
mov
rolb
insl
insb
test
pmulhuw
add
ret
mov
xchg
rol
inc
xchg
sbb
punpckhdq
or
push
lea
adc
pop
pop
add
je
push
add
movsl
jecxz
lahf
cmp
inc
fwait
scas
mov
sub
xchg
sbb
arpl
adc
add
int3
push
inc
xor
pop
inc
xor
xadd
xchg
inc
push
cld
fmuls
testl
inc
sbb
adc
in
mov
jae
or
f2xm1
cmpl
inc
shrb
mov
call
pop
xorb
out
stos
xor
dec
push
or
inc
dec
mov
adc
out
lds
stos
or
ret
jbe
pusha
xor
xor
jmp
mov
mov
ret
cmp
xor
adc
cmpsl
sub
notb
dec
mov
xor
jo
xor
icebp
xor
sbb
or
add
mov
or
lahf
loopne
xchg
outsb
or
push
inc
add
sub
sub
sub
add
pop
inc
bts
jmp
std
and
push
sub
mov
ss
aaa
cmp
std
add
xor
jbe
mov
das
dec
push
stos
inc
mov
pop
add
pop
out
mov
add
or
jecxz
xor
push
out
or
notb
push
dec
shll
push
loope
data16
iret
cwtl
add
sbb
add
leave
cwtl
outsb
shll
and
pushw
arpl
cltd
pop
test
inc
pop
rolb
add
addr16
in
stos
stc
pop
call
rolb
or
cmp
pop
jge
cmp
or
and
lahf
enter
cvtps2pd
pop
mov
push
mov
scas
nop
xchg
push
daa
lock
fbstp
cltd
and
mov
xor
pop
push
sbbb
mov
xchg
dec
fistpll
mov
in
push
in
or
aam
les
fists
jmp
mov
clc
mov
cltd
fbld
in
scas
mov
divl
test
pop
nop
mov
lcall
ffreep
or
add
repz
or
push
fs
adc
cmp
je
test
sbb
mov
mov
iret
enter
or
add
inc
lret
sbb
xchg
imulb
rcl
dec
mov
sub
add
push
and
pop
push
movsb
push
or
lea
push
ret
cmp
xchg
jp
jbe
add
push
scas
loopne
sarb
sbb
rolb
test
jmp
and
lcall
or
xchg
jmp
pop
jmp
mov
jmp
sbb
subb
insl
push
mov
push
in
xchg
test
cmp
mov
cmp
mov
mov
sub
jle
pop
mov
or
cli
mov
out
pop
push
loope
or
je
sarb
rep
je
inc
dec
push
test
ficomps
or
mov
outsl
add
xor
inc
sub
mov
add
add
imul
pop
es
mov
dec
adc
mov
xor
sbb
or
stos
cli
ret
adc
std
inc
adc
xchg
fstps
sbb
or
rcr
rorb
movsl
inc
mov
xchg
mov
hlt
or
inc
shl
xlat
clc
test
int
pcmpeqw
inc
cli
push
and
scas
pop
cmp
jne
cmpb
pusha
mov
adc
imul
jbe
sub
mov
sub
cmpsl
std
push
sbb
nop
repnz
cld
dec
adc
cmc
cwtl
add
push
mov
sbb
jge
sahf
sub
and
les
neg
add
cmp
jne
sbb
out
jne
or
add
mov
mov
dec
mov
push
lds
push
mov
jecxz
push
mov
ret
jne
mov
imul
and
xor
outsb
notl
mov
and
jmp
loopne
cmp
push
fsubl
rcrl
push
xorl
push
jb
xor
jb
or
inc
in
push
insl
sbb
adc
fstl
xchg
sub
push
cmp
pop
cmp
decl
cld
jg
push
sub
add
sbbb
js
push
mov
and
adc
or
mov
pop
mov
xchg
pop
incb
lret
mov
aam
insl
mov
int3
xchg
jmp
out
fsts
cmp
pop
cltd
mov
dec
mov
inc
add
or
dec
fistpll
cltd
sub
inc
add
adc
push
add
lods
mov
jge
add
push
inc
push
pop
dec
dec
out
rolb
inc
or
inc
pop
add
pop
ljmp
adc
rol
push
inc
sbb
add
notl
mov
rol
mov
inc
fcoml
or
jg
push
decl
fchs
sub
insb
or
and
xchg
xchg
jecxz
xchg
js
and
daa
je
or
add
mov
or
add
setb
xor
pop
or
testb
in
xor
sarb
cmp
sbb
or
add
movsb
shlb
or
push
mov
daa
mov
sbb
jns
pop
mov
inc
xor
cmp
sbb
out
mov
adc
push
dec
mov
inc
sub
add
mov
cmp
jb
pop
jns
in
pop
push
loopne
fldcw
or
test
pop
je
rol
inc
dec
push
pop
stos
mov
add
and
lock
cwtl
enter
jae
loope
aam
inc
dec
and
mov
cmp
jbe
xchg
cmpsl
pop
xorl
cmpl
loopne
jbe
fidivrl
sub
movsl
adc
movsl
add
shlb
add
enter
jmp
int
push
imul
or
push
loop
dec
fdivr
and
or
cltd
in
ret
enter
dec
fstps
add
or
aas
push
add
xchg
jns
jne
jmp
adc
sbb
pop
imul
adc
adcl
add
sbb
rolb
enter
mov
xchg
mov
out
or
or
or
loopne
ret
push
into
xchg
xchg
and
ja
inc
push
xchg
dec
push
daa
or
mov
lods
and
cmp
pop
or
sub
push
or
ret
cmc
cmp
mov
lods
mov
or
push
dec
sub
add
ret
call
sbb
sub
add
rolb
sti
sub
movsl
cmp
sbb
adc
and
or
add
cmc
int
adcb
sbb
fildl
pop
xor
iret
add
or
in
inc
in
js
or
pop
cmp
lods
scas
cmp
aas
add
adc
adc
mov
sub
es
repz
jg
fisttpl
movsbl
sub
loopne
int
pop
in
or
mov
push
dec
ret
fwait
sbb
push
pop
js
dec
data16
cmp
xchg
clc
fidivrl
cmp
hlt
jb
push
pop
cmp
jbe
add
mov
lcall
add
sub
nop
dec
decl
sbb
push
sub
or
push
scas
lock
jmp
test
mov
leave
push
push
jne
into
shlb
push
add
jge
ljmp
hlt
cmp
xchg
dec
mulb
lock
movl
test
faddl
negb
sar
mov
lock
push
mov
xor
mov
push
lret
add
jno
xlat
ss
rclb
push
aad
sbb
or
add
loope
push
dec
leave
sub
inc
cmp
icebp
cmp
push
addb
ja
sub
testl
sbb
push
push
cmp
fdivrl
jb
push
jo
or
enter
cmpsb
fld
adc
inc
aaa
rorl
dec
push
pop
xor
movsb
and
in
inc
add
in
je
leave
stos
mov
ja
sbb
cld
add
push
or
fisubl
mov
adc
dec
mov
adc
push
dec
adc
xchg
test
add
ficoml
xchg
add
imul
enter
cmp
test
and
sbb
jl
lock
in
xchg
dec
pusha
mov
cmp
dec
sbb
sub
add
adc
push
sbb
rclb
inc
push
add
add
and
shl
in
sbb
imul
cmp
add
sbbl
add
pop
test
push
or
push
fnstsw
xchg
sarb
or
in
mov
jno
jg
cmp
sbb
jmp
mov
sub
jle
inc
dec
mov
loopne
mov
pop
popa
adcb
adc
outsb
or
movsl
jno
pop
push
xor
jge
fs
mov
push
and
clc
ja
push
cmpl
mov
and
mov
mov
push
in
dec
dec
inc
lret
pop
xchg
and
imul
add
cwtl
test
mov
xor
add
sub
inc
or
jbe
pusha
leave
mov
add
add
leave
sbb
pop
fcmovu
les
in
adc
test
cmpb
jbe
frstor
lock
sbb
add
jmp
add
adc
test
xchg
jmp
and
push
adc
sub
aam
test
stos
jbe
cmp
or
cmp
int
xor
sbb
mov
lock
incl
and
popa
addl
and
or
mov
dec
mov
push
jmp
scas
scas
fcomps
sbb
fdivs
sbb
fwait
idivb
push
fstpt
aaa
scas
push
cmp
je
xor
enter
or
faddl
arpl
sbb
clc
add
andb
xchg
mov
mov
movsl
inc
fsubr
jbe
add
lea
mov
test
movzbl
push
mov
mov
dec
mov
jmp
popa
aaa
add
lods
lahf
rorl
stos
lea
insl
loope
cmp
je
sbb
dec
andb
and
mov
sbb
mov
sarb
popl
jbe
inc
inc
jl
adc
push
ret
sahf
add
shll
jb
cmp
je
mov
mov
jbe
nop
jle
push
jg
movsl
movsl
pop
mov
jns
add
cwtl
fcoms
jno
inc
or
push
push
jno
mov
push
mov
jne
inc
sub
add
scas
add
cmp
orb
or
add
call
insb
orb
inc
loopne
adc
push
inc
leave
pop
mov
cld
gs
lcall
pop
in
das
dec
add
xchg
sub
and
je
or
mov
cmp
or
push
or
push
popa
shll
jecxz
xorl
movsl
lret
sahf
pop
ret
aaa
pop
outsb
mov
rolb
sub
mov
jne
jecxz
mov
fstp
dec
sub
and
mov
movb
dec
cmpsb
aaa
push
inc
repz
mov
sbb
inc
mov
inc
add
fsts
inc
inc
imulb
sbbb
pop
outsl
xor
cmpsb
xchg
adc
push
pop
inc
std
cmp
popf
mov
cmp
mov
xchg
cld
mov
xchg
pop
xor
rcl
mov
lcall
mov
mov
je
inc
out
dec
sbb
mov
jecxz
mov
aas
cmp
sub
adc
mov
jb
fs
mov
xor
xchg
pop
pop
inc
sub
mov
push
popf
test
in
outsl
cmp
and
loopne
xchg
mov
jo
lods
dec
adc
mov
lcall
loopne
add
add
add
int3
adc
push
inc
inc
jmp
xor
fs
jecxz
leave
test
push
sub
ds
sbbl
pop
loop
clc
mov
orb
decb
or
push
sub
shr
push
adc
data16
shlb
xchg
pop
call
lahf
in
push
test
mov
inc
divb
mov
js
push
pop
inc
and
call
and
mov
xchg
xchg
inc
adc
mov
inc
in
or
pop
test
or
jle
xchg
jbe
ficoml
cmp
call
loop
dec
sub
enter
mov
pop
adcl
sub
cmp
cmp
and
sub
sbbb
xchg
cmp
pop
inc
sub
pop
mov
les
rcll
push
scas
sub
push
je
or
fidivs
pop
int
shrb
adc
jnp
xor
xor
add
clc
or
pop
mov
cmp
jne
cmp
inc
push
movsb
or
cmp
je
mov
mov
nop
pop
pop
sahf
xor
mov
add
and
test
dec
cmp
ds
mov
or
inc
adc
inc
or
jbe
inc
push
jp
outsb
sbb
ja
push
je
xchg
add
mov
mov
fisubrl
mov
xor
dec
cmp
and
push
scas
cmp
je
inc
leave
dec
fld1
sub
call
push
aas
insb
xchg
jo
or
ja
movsl
loop
cmp
push
push
loopne
std
setns
pop
inc
cmpb
and
cmp
sub
push
pushl
mov
jl
add
outsb
jne
pop
decl
and
jge
add
adc
shrb
cmpsl
cmpb
adc
sbb
push
push
subl
push
inc
cld
jo
and
int3
decb
je
ja
jns
push
aas
mov
inc
xor
mov
test
mov
inc
or
dec
dec
xchg
imul
dec
mov
xor
mov
or
mov
xchg
andl
or
enter
mov
and
xor
ljmp
ss
push
addb
jl
or
sub
call
test
aad
into
sbb
int
sbb
inc
cmpl
fists
mov
testb
sahf
fistps
inc
lret
or
adc
jne
push
jmp
dec
bound
clc
nop
mov
cmp
mov
add
xchg
pushf
jns
push
add
or
push
aaa
inc
pop
jne
inc
inc
jmp
and
xchg
cmpsb
sub
ficoml
and
sub
ficoml
stos
xor
push
sbb
mov
insb
ret
jmp
mov
inc
adc
es
and
xchg
bound
add
xchg
imul
sbb
cs
sbb
pop
rcrl
push
aas
aaa
jle
mov
sub
inc
call
ja
popa
mov
andl
movsl
daa
imul
adc
mov
sarl
push
jns
shll
imul
aad
xchg
push
and
cmp
inc
add
or
push
adc
and
aaa
arpl
sbb
xchg
cmpsb
aas
push
inc
adc
push
out
and
loopne
mov
dec
data16
or
roll
cli
sar
sbb
add
and
jae
push
adc
movsb
jmp
xor
pop
testb
fcomps
dec
inc
dec
dec
jmp
addr16
push
cmp
ret
jmp
or
subb
dec
dec
or
push
je
rorb
imulb
sub
inc
aam
popf
cwtl
test
xchg
test
xchg
jp
mov
push
pop
mov
inc
jns
repnz
push
xchg
nop
xor
js
cmp
and
xchg
inc
jae
pop
push
ficoms
xorl
std
xchg
faddp
inc
add
and
aas
inc
inc
stos
imul
xchg
cmp
inc
test
repnz
adc
and
xchg
sbb
cmp
out
mov
or
movsb
cmp
mov
cwtl
daa
or
jmp
addb
shll
pusha
mov
pusha
inc
or
shlb
add
or
iret
insl
pushf
fwait
jl
push
adc
mov
dec
or
popa
std
insl
cmp
cmpsl
popa
xchg
or
push
ss
sbb
inc
popa
into
xor
mov
and
mov
ds
mov
mov
sub
inc
inc
xchg
or
cmp
jne
test
sbb
nop
push
sub
and
ret
or
cmc
sbb
jo
or
push
loope
xor
cltd
mov
leave
push
orb
test
push
pminub
adc
mov
addb
xchg
pushl
test
test
mov
mov
mov
pop
mov
dec
push
mov
lret
stos
sub
jo
fmulp
xchg
sbb
gs
push
movb
xor
sbb
pop
or
in
xor
and
ss
insb
lea
xchg
dec
aas
fldenv
adc
aam
xor
adc
gs
mov
or
add
sub
mov
adc
add
mov
mov
inc
sbb
sub
or
xchg
pop
lea
xor
cld
fcoml
sbb
sbb
dec
add
fwait
in
test
push
in
push
out
adc
push
pop
push
mov
cmp
xchg
cmp
jg
sub
mov
inc
cmp
jne
or
mov
subl
cs
jo
push
or
xor
cmp
dec
push
movsl
popf
cmp
lea
pop
mov
adc
insb
movsl
cmpsl
lock
push
es
std
jp
mov
enter
pop
cmc
push
cmpb
into
mov
jmp
repnz
or
and
cmp
xchg
movsb
stos
sbb
fimuls
call
cmpb
pop
and
test
bound
sub
ret
js
outsl
pop
mov
insl
mov
push
jne
push
jge
inc
dec
jb
in
add
add
add
fs
cmp
ljmp
inc
sub
xchg
add
and
mov
inc
mov
mov
sub
pop
popf
push
imul
andb
adc
adc
dec
dec
es
mov
xor
sbb
fstps
loopne
adc
cli
jmp
icebp
testb
rcrl
das
sub
pop
push
subb
xchg
and
fldt
jbe
xor
cmpsb
paddw
sbb
add
push
dec
push
push
rcll
stos
pusha
sti
inc
sahf
dec
and
cld
cmp
cld
je
loopne
sbb
sahf
outsl
popf
pop
outsb
dec
mov
pop
jmp
pop
push
scas
push
mov
mov
push
xlat
and
xchg
out
ficoml
mov
inc
or
sbb
dec
inc
jo
movsb
insb
add
clc
adc
js
mov
test
pop
add
lods
sbb
cli
jnp
sahf
adc
sub
push
lret
inc
sbb
push
pop
dec
rclb
pop
shrb
mov
loope
jns
gs
inc
mov
push
sbb
push
aas
mov
fs
or
bound
push
mov
adc
adc
sub
push
mov
mov
je
and
xchg
adc
and
xor
divl
xor
inc
mov
in
insb
dec
cmpb
je
cmp
mov
xor
pop
xchg
call
fldl
xchg
cs
pop
jb
icebp
cmpl
sbb
out
sbb
iret
js
dec
mov
cld
jae
imul
adc
sub
outsl
adc
inc
fists
mov
js,pn
lret
pop
sbb
or
and
push
pop
pop
jge
ss
pop
jl
lahf
shrl
pop
sub
sub
mov
jbe
xor
pushl
scas
adc
pop
sbb
xor
dec
adc
in
mov
lcall
add
ret
scas
sbb
push
movb
mov
or
dec
jle
insb
stos
dec
sbb
int3
rcrl
sbb
mov
lcall
sbb
push
cmp
insl
sbb
pushf
shlb
lods
enter
adc
inc
mov
sbb
and
dec
jns
neg
rolb
sub
xchg
adc
lods
ja
ret
adc
adc
and
pop
shlb
inc
inc
hlt
int3
push
cmpsb
shr
add
jb
ret
sbb
sub
inc
outsl
push
lds
or
adc
mov
movb
orl
adcb
xorl
ficoml
mov
insl
pop
xor
jmp
or
add
das
mov
pop
pop
nop
jbe
inc
clc
rcrl
outsl
jge
leave
add
pop
push
add
jo
pop
add
xor
or
gs
adc
push
mov
or
addl
enter
xor
dec
fsubl
add
ficoml
dec
cmp
inc
sub
dec
cmp
push
mov
xchg
or
jo
mov
and
pop
ds
adc
inc
cmp
daa
pushaw
adc
mov
lcall
sub
sub
data16
adc
inc
add
lods
ret
pushf
xchg
je
sub
xchg
and
xchg
loope
aad
jecxz
rcll
sub
inc
sub
inc
es
or
inc
movsb
int3
add
std
fisttps
in
jne
fxch
fyl2x
jmp
mov
fistpll
ljmp
call
add
add
push
mov
adc
ficomps
inc
lret
lcall
inc
std
xchg
mov
outsl
in
mov
cmp
not
mov
addr16
xchg
cmc
or
add
fldln2
inc
in
frstor
mov
loope
jne
es
inc
popa
cmp
cmp
pop
in
dec
mov
sbb
xchg
rolb
sub
fldz
mov
xchg
cmp
push
in
in
jmp
or
cmp
or
push
lock
push
orb
xchg
add
and
scas
daa
adc
lcall
fcompp
mov
mov
xor
xchg
mov
andl
ret
inc
mov
sbb
sbb
je
shrb
xchg
arpl
clc
sbb
icebp
push
or
push
lret
mov
or
movsb
jbe
lods
test
adc
data16
or
inc
addl
jmp
sub
or
mov
push
or
and
mov
jmp
mov
push
mov
sub
xor
loop
mov
pop
loopne
add
sar
rcl
shll
add
xlat
insb
and
add
jmp
int
xchg
iret
or
loopne
jg
and
rol
mov
mov
xor
in
or
pop
call
add
idiv
xlat
popa
test
ret
fstpt
or
lahf
or
inc
je
aad
or
pop
mov
movsb
pop
or
add
pop
pop
pushf
test
and
nop
frstor
add
pop
pop
inc
and
dec
popf
xchg
mov
dec
loopne
push
mov
movsb
xor
xchg
or
pop
pop
sub
hlt
adc
loopne
les
mov
pop
sbb
add
es
add
and
or
adc
inc
push
jb
push
push
or
cmovb
ss
inc
push
xor
lret
inc
sti
fwait
in
push
fldcw
test
pop
fs
loopne
nop
dec
lock
mov
cmp
and
or
sbb
sbb
decl
or
loope
pop
or
fldt
mov
test
xor
and
outsb
cmp
inc
xchg
and
pop
sbb
cltd
clc
sbb
data16
push
nop
mov
or
dec
push
gs
dec
fwait
popf
ficompl
daa
je
xlat
pop
mov
subl
cli
xchg
in
sbb
sub
add
sbb
fcompl
or
jl
movsb
jge
jmp
push
fs
mov
sahf
je
add
push
jo
js
rorb
push
sarb
pop
mov
adc
xor
push
adc
mov
jmp
insl
and
push
pop
sub
testl
pop
adc
sbb
add
adc
xor
xchg
sub
andl
mov
cwtl
lods
jmp
sub
loopne
gs
jge
mov
ss
dec
push
sub
inc
and
adc
daa
lahf
pop
cmp
mov
dec
out
adc
sahf
mov
inc
nop
cwtl
repz
roll
xorb
nop
pop
jne
and
inc
sub
xor
ret
sbb
insb
xor
add
decb
cltd
imul
cmpsb
ret
inc
mov
mov
add
pop
dec
test
scas
test
pop
insl
call
xor
movsb
jo
cmp
mov
push
rcrb
ds
inc
and
gs
push
ret
inc
popf
and
add
popa
mov
mov
mov
and
add
sbb
shll
sub
xor
sahf
adc
add
or
ficoml
loopne
int
loope
lcall
insl
xchg
dec
idivb
pop
es
add
adc
or
pop
mull
add
and
cs
add
and
mov
or
out
cmovno
mov
push
or
and
mov
lret
in
fisttpll
andl
xor
inc
fidivrl
jmp
push
mov
ds
sub
fsub
jne
add
mov
or
test
sub
enter
test
add
hlt
push
adc
pusha
sub
or
test
das
cli
pusha
mov
or
add
jbe
xor
je
inc
add
sub
push
xlat
xchg
decb
add
and
aad
iret
call
or
dec
mov
and
add
jp
mov
aaa
jecxz
sbb
or
jmp
sbb
mov
sbb
scas
setb
nop
fs
mov
fsubs
xchg
cmp
repnz
push
xchg
dec
add
adc
sbb
and
pop
cmp
pop
leave
adc
insl
pop
pop
lds
sub
lock
scas
es
adc
sti
out
lret
add
add
test
stos
push
jmp
push
lock
jmp
lcall
imul
outsl
pop
dec
add
sahf
push
and
or
or
lret
cmpsb
divl
xor
mov
and
push
popw
gs
mov
pusha
pop
push
sub
adc
lret
hlt
insl
push
dec
pop
adc
pop
fldl
fstpl
dec
inc
mov
push
and
bound
pusha
xlat
sub
je
test
mov
push
sti
pop
sub
jmp
test
push
out
or
and
xor
clc
je
push
cmp
adc
inc
mov
mov
fmull
iret
pop
push
shrl
mov
addb
add
mov
dec
test
fcomi
fisttpll
outsb
aas
stos
or
xchg
sbb
pop
dec
inc
test
orl
sarb
test
into
dec
push
and
adc
cmp
xor
inc
test
imul
and
xor
addr16
cli
push
xchg
imul
pop
fildl
clc
into
sti
or
lret
jmp
shlb
jo
mov
mov
mov
and
and
or
leave
mov
roll
lldt
insl
hlt
sbb
jo
ret
or
clc
mov
sub
insb
mov
jmp
pop
pop
je
push
and
imul
mov
or
sub
jb
pop
pop
sbb
cwtl
subb
mov
cltd
loopne
bound
mov
js
and
js
inc
lret
push
sub
test
test
push
sbb
cmp
jns
add
pop
inc
pop
push
xchg
fistpl
push
test
xor
and
dec
push
cli
lods
int3
jle
add
mov
mov
lahf
and
lret
sarb
add
pop
dec
pop
pop
mov
add
les
mov
cwtl
clc
add
aam
pop
mov
xor
jmp
leave
ss
sbb
fcmovne
push
add
mov
shl
and
les
xchg
push
push
sahf
adc
xlat
add
jo
push
mov
incb
push
stos
pop
rcrl
out
or
or
lcall
loopne
inc
lds
xchg
mov
pop
sub
sub
stc
push
add
cs
push
movb
cwtl
push
mov
sbb
ret
push
fimull
add
or
mov
aam
jb
andb
jno
insl
xor
outsl
push
jbe
push
into
negb
insb
aaa
cli
shll
adc
and
or
push
or
mov
out
gs
out
pop
mov
and
fmuls
mov
ja
push
loop
test
xchg
adc
sub
loopne
add
jp
mov
divb
loope
mov
ss
lret
or
sbb
fnclex
sbb
mov
push
mov
dec
cld
or
mov
or
cld
fwait
mov
push
or
sub
mov
fistpl
fwait
clc
adc
and
sub
push
add
sbb
int3
and
push
dec
data16
fcomps
sbbl
jmp
mov
shlb
add
push
adc
idiv
or
je
mov
orb
sbb
shlb
insb
xchg
jp
push
xchg
popa
mov
jnp
sbb
frstor
add
mov
sarb
mov
arpl
mov
pusha
mov
test
xor
popf
pop
mov
cmp
mov
mov
sbb
je
cmp
je
push
xor
mov
adc
jmp
mov
aaa
cmp
movl
jp
lods
daa
ret
push
ss
test
adc
into
or
insb
jnp
lcall
aam
cmpsl
pop
pop
imul
in
sti
fdivp
xor
or
pop
add
xor
cs
jbe
pusha
xchg
lock
dec
popf
inc
clc
xchg
jne
cld
lea
mov
jnp
fadds
rorb
sbbb
push
cli
push
mov
rorl
push
call
ljmp
adc
mov
jnp
jecxz
shlb
imul
rolb
or
push
data16
push
fsubs
jne
js
lcall
adc
lock
roll
mov
push
xor
rorb
insb
and
mov
push
add
add
jae
or
test
cli
je
fdivrp
ret
pushf
sbb
mov
cmc
sub
sbb
cmp
or
or
in
xchg
xor
xchg
clc
add
sbb
fmuls
inc
in
cmovb
sub
addb
pushf
hlt
shrl
jmp
sbb
lock
xor
stos
adc
sub
std
test
jb
into
rolb
gs
clc
jae
call
test
es
out
rcl
insl
and
add
loopne
sahf
ds
fdivs
push
int
fdivr
adc
sub
and
ret
mov
cmp
adc
xchg
out
jno
or
sbb
adc
adc
scas
insl
iret
pop
push
daa
pop
movsb
shll
lret
xchg
add
in
movsl
cwtl
adc
jge
or
das
jb
nop
and
lret
rorl
push
or
mov
jge
mov
imul
pop
jb
inc
lret
lret
int3
fs
inc
or
xchg
bound
rcl
insl
out
xor
and
int3
dec
cmp
enter
or
push
int3
xchg
adc
jge
fisubl
das
pop
enter
int
imul
cmp
or
mov
pop
mov
xor
add
in
pusha
and
dec
xor
or
mov
imul
movsl
scas
add
push
push
cmp
pop
inc
aad
and
push
xor
fistpl
xor
loopne
cmp
clc
out
lret
je
xor
pop
sahf
mov
outsl
sub
je
aam
xor
cmp
roll
or
inc
jnp
and
push
orps
sbbb
orb
addr16
add
call
xchg
jl
inc
push
add
sbb
pusha
fisttpl
ljmp
push
mov
iret
cmpsb
push
push
xor
mov
or
pop
mov
cld
clc
popf
maskmovq
mull
aaa
dec
or
jbe
inc
fimull
es
cs
jbe
in
sub
test
pop
adc
ja
test
mov
gs
ja
push
enter
or
mov
xor
hlt
dec
sub
mov
addl
or
sbb
ds
aam
sbb
dec
inc
push
adc
jb
loopne
lahf
push
push
jne
adc
mov
jb
xor
dec
jae
push
lods
xor
aas
jbe
add
add
jp
and
push
fwait
neg
loope
sub
shll
fadds
ret
inc
push
notl
add
jns
push
sbb
sub
int
clc
sbb
xor
je
xchg
mov
das
clc
insl
cs
or
mov
jg
sbb
xchg
fsts
xor
sbb
pusha
loop
inc
rcr
xor
andl
or
popl
les
pop
xor
xor
loop
cmp
xor
jbe
test
sub
sbb
rorb
pop
ret
mov
xchg
sbb
or
jns
movntq
lcall
sub
and
or
ja
dec
add
rcll
or
and
je
movsb
loopne
inc
sbb
adc
outsl
ret
leave
inc
jb
cmc
cmc
sub
imul
mov
mov
roll
insl
out
or
nop
and
add
pop
mov
mov
xor
lods
pop
dec
dec
pop
push
je
inc
pop
insl
fmul
insb
push
push
cmpl
iret
out
jne
xchg
jno
jl
lods
clc
pop
test
movsb
fists
cmc
bswap
andb
xchg
andb
incb
pop
cmp
pop
pop
pushl
test
das
add
insb
ljmp
fidivs
lods
add
jo
andb
adc
xchg
pop
pop
bound
shr
mov
sbb
or
add
mov
bound
aam
jne
inc
or
es
add
out
je
popa
mov
cmp
adc
movsb
ja
ss
test
cmovge
pushf
pop
shlb
dec
jl
jne
rol
popa
sub
jo
cmc
imul
je
push
lahf
mov
das
jecxz
in
pop
divl
cmp
cmp
or
jnp
cmp
sbbb
sbb
cmp
cmp
arpl
dec
inc
nop
cmpsl
jo
sub
test
add
jge
addr16
jno
fisttps
xor
stos
xor
dec
cmp
dec
or
in
xchg
inc
ss
xor
mov
cmp
push
sub
cmp
sub
push
orb
movsb
cld
out
sbbl
sbbl
aam
and
mov
inc
or
ret
and
stos
or
andl
xchg
andb
push
sbb
pop
adc
xchg
lahf
cs
mov
in
pop
sub
add
mov
lods
or
or
jo
push
shlb
add
jge
or
adc
sub
xchg
xor
subl
jno
add
push
mov
xlat
int3
sub
rcrl
ret
pop
hlt
xor
leave
subl
xor
xchg
rolb
ljmp
mov
adc
mov
fists
sbb
int3
push
adc
lea
sahf
jmp
cs
test
sbb
inc
roll
push
mov
push
out
enter
and
sbb
out
push
je
pop
or
std
jmp
add
mov
es
pop
out
jmp
scas
add
or
add
cwtl
adc
xor
dec
repz
or
xor
adc
jo
insw
push
or
std
sub
mov
adc
push
in
je
push
sub
data16
cmc
add
pop
outsl
push
jne
out
loop
outsb
adc
xlat
xor
jmp
test
cmp
insl
loopne
sbb
icebp
js
jbe
into
dec
inc
call
mov
and
je
js
push
vcvtps2dq
mov
jl
pop
das
xor
scas
add
push
out
aam
cmp
xor
addb
add
addl
inc
add
push
test
add
and
cmp
andl
cmp
jne
jecxz
jmp
jecxz
insb
in
bswap
adc
es
jo
mov
add
inc
jo
scas
adc
sbb
ss
mov
ret
mov
ficoml
cmp
lahf
sarb
mov
jge
or
adc
push
das
jo
pop
pushw
out
ss
movsb
fcomp
ss
adc
cmp
cmp
jg
sbb
mov
dec
mov
ret
adc
or
js
dec
and
jle
xor
arpl
aam
sbb
in
jecxz
dec
clc
inc
cmp
loope
hlt
adcl
add
mov
jg
jmp
out
in
sub
push
xlat
in
lea
jle
jns
test
push
adc
fldt
sub
xchg
mov
aad
fmull
fidivl
jl
xlat
push
add
ret
ds
cmp
xchg
sbb
lock
les
jae
cmp
jl
hlt
jg
xor
mov
hlt
jecxz
push
ljmp
pop
sub
aad
frstor
rol
adc
test
or
mov
mov
cmpb
push
or
sahf
mov
xchg
dec
sub
addl
pop
shlb
mov
testb
cltd
subb
frstor
or
test
or
data16
mov
lds
add
jo
or
sub
jl
jae
in
imul
sahf
pop
je
dec
mov
inc
hlt
jle
cmp
pop
inc
sub
add
imul
cld
pop
xor
in
iret
lods
mov
sub
test
mov
jmp
mov
insl
dec
cmc
adc
mov
sbb
jne
xchg
sub
add
loopne
js
add
rclb
pop
fldenv
int
inc
add
lods
push
sub
xchg
xor
ss
push
jmp
sub
enter
icebp
idivb
cltd
cmp
xchg
fsubs
jecxz
popa
push
and
ret
push
popa
arpl
mov
dec
inc
xor
in
ficoml
cld
mov
adc
out
adc
jo
or
pusha
dec
jo
adc
fwait
and
mov
fs
pusha
dec
inc
mov
sub
xchg
imul
jnp
or
fwait
iret
jg
jp
jo
iret
jmp
adc
icebp
in
pop
jl
pop
loopne
aas
push
sub
xchg
and
xchg
add
aam
adc
dec
ffreep
ds
push
stc
push
dec
sbb
adc
sbb
sbb
fwait
xor
inc
out
adc
push
fisubrl
imul
pusha
rorb
data16
shl
add
add
pusha
adc
jbe
loop
jmp
sbb
push
and
dec
ret
mov
adc
xor
inc
dec
shlb
and
adc
test
movsb
cmpb
cmp
inc
in
rol
adc
sbb
dec
push
shll
ret
jle
add
pop
in
push
stos
push
jmp
xor
pop
jb
mov
stos
jne
scas
mov
sahf
mov
cmp
or
neg
jmp
jae
push
imul
dec
or
or
lods
adc
add
push
lea
pusha
out
xchg
arpl
jmp
xor
jmp
aad
jno
mov
and
pop
mov
pop
add
mov
loopne
sbb
xlat
popa
ret
push
mov
ror
mov
cmp
rcll
cltd
out
int
mov
inc
sub
mov
inc
or
sbb
push
xchg
rcrl
ret
jg
mov
loope
mov
enter
xchg
inc
mov
rorb
jmp
and
sbb
test
pop
pop
in
or
push
jge
cs
cmp
je
gs
pusha
ss
gs
cs
jmp
imul
xchg
insl
mov
push
push
push
and
jmp
stos
cli
xchg
xor
push
jo
ret
pop
inc
lock
xor
mov
or
mov
xchg
mov
mov
hlt
inc
sbb
and
mov
pop
dec
test
adc
or
and
sub
xor
add
and
rolb
dec
mov
push
enter
dec
ljmp
add
fcoms
sbbb
add
in
mov
std
dec
std
sbb
push
mov
push
add
jecxz
dec
push
fsubr
jne
cmpsb
inc
or
shrb
or
inc
push
es
or
cmp
xor
int
es
add
adc
xlat
xchg
push
cmp
lret
in
test
mov
loopne
or
xchg
dec
jle
lock
cmp
add
mov
or
sbb
int3
js
or
sbb
call
or
or
xor
jle
mov
lret
or
dec
xchg
nop
pop
imul
sarb
and
imul
xor
js
out
cpuid
and
imul
inc
push
push
popa
fadds
mov
jmp
or
enter
les
push
por
push
add
js
loopne
and
adc
ret
nop
flds
dec
lock
dec
adc
pop
push
inc
xor
inc
or
mov
xor
jg
mov
gs
mov
imul
gs
mov
cmp
addr16
inc
inc
inc
mov
shl
fidivs
pushf
push
or
insl
jne
push
jmp
sbb
cmp
push
xchg
pop
or
and
xor
jecxz
push
test
aam
and
cmp
push
or
iret
jmp
or
sbb
adc
xor
mov
push
xor
mov
ss
imul
push
fstl
int
mov
adc
imul
and
adc
and
faddl
or
or
clc
or
or
jo
inc
pop
push
xor
push
push
mov
or
mulb
jno
movsb
je
pop
or
and
cmp
scas
mov
jmp
mov
xor
push
sbb
dec
mov
adc
jmp
mov
enter
scas
mov
inc
ret
mov
jns
xor
sub
sub
sbb
xlat
popa
xchg
int3
fs
out
add
xor
adc
mov
adc
shlb
inc
clc
scas
mov
dec
cmp
jbe
push
pop
stos
xor
dec
push
inc
inc
dec
jp
jae
mov
lds
jo
dec
add
pop
mov
sti
pop
inc
xor
and
jmp
lea
inc
cmp
pushf
mov
andl
insb
push
lock
add
out
insb
or
and
pusha
iret
cmc
adc
cs
and
add
pop
hlt
or
jne
and
xor
dec
pop
cmp
jbe
pop
xor
xchg
and
mov
hlt
cmp
cmp
jno
gs
jp
inc
cmp
mov
and
lock
jb
add
dec
xorl
loopne
cmp
call
lcall
add
lods
pushf
cwtl
imul
call
not
pop
roll
addr16
mov
push
pop
outsb
or
mov
push
inc
cld
std
mov
inc
mov
jae
cmpb
imul
fstpt
and
or
adc
sbb
dec
stos
push
mov
ljmp
pop
xor
js
pop
or
lock
mov
sbb
stos
insb
mov
loope
add
movsb
add
test
dec
adc
fcmovu
sti
divb
aas
gs
push
or
or
mov
scas
push
mov
dec
inc
adc
inc
add
std
mov
cmpl
addr16
jo
mov
adc
jge
test
adc
aaa
and
xchg
pop
inc
cmp
in
push
push
lcall
mov
or
jbe
cmpsl
inc
test
adc
movsl
sbbb
cmp
rcr
loope
in
adc
pusha
lret
sub
lret
scas
dec
sbb
loopne
pop
and
inc
dec
dec
sbb
push
call
lret
je
pop
dec
js
not
call
stos
call
sarl
pusha
jae
inc
mov
and
sbb
ret
adc
rolb
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
and
outsb
jmp
es
aaa
pop
out
sbb
ss
dec
xchg
negb
adc
sbb
or
add
fs
add
cmp
fadds
dec
sub
movsb
fwait
add
fldenv
mov
inc
adc
mov
jo
push
mov
fcomps
or
xchg
pushf
or
sbb
inc
ret
cmp
sub
and
or
xlat
and
mov
mov
dec
scas
into
lcall
and
pop
push
add
testl
sub
pop
pop
insb
push
stos
mov
add
aas
jle
adc
mov
loop
lcall
cmp
sub
iret
js
inc
xor
push
cmp
and
mov
decb
jne
rclb
mov
in
and
jmp
dec
sub
sub
push
pushf
push
insb
xor
arpl
add
pop
xor
xorb
imul
pop
cmp
icebp
jle
inc
ljmp
push
inc
or
cmp
lahf
cmpsb
jle
decb
jge
subb
jmp
les
or
adc
push
or
das
push
or
inc
sub
push
jnp
arpl
add
or
inc
movsb
adc
xchg
rolb
cld
data16
rolb
mov
add
insl
jl
test
or
stos
mov
add
adc
add
sub
lea
pop
add
cs
aad
and
mov
loopne
xchg
andb
xor
insl
jnp
push
adc
mov
enterw
adc
je
push
and
mov
jns
je
xor
mov
xchg
sbb
jbe
repz
test
mov
sti
nop
out
add
dec
lret
add
xorb
arpl
sahf
loopne
ret
outsb
mov
shrb
rolb
lock
in
jp
xchg
ss
dec
cmp
or
inc
sub
shl
jns
sub
pop
and
shr
push
dec
jmp
jo
pop
mov
cmp
inc
out
dec
in
mov
psubsb
cmp
movl
jmp
add
sub
sub
jmp
lock
enter
mov
add
les
dec
or
push
inc
fs
inc
test
mov
or
test
hlt
daa
ret
dec
inc
jne
or
mov
and
imul
fst
lea
sub
adc
addb
lods
jne
push
movsl
or
mov
movsb
cmp
and
out
sar
mov
xorl
inc
add
loope
sbb
push
xor
pop
pop
push
mov
pop
dec
or
mov
shll
cmpsl
or
in
test
jecxz
sub
sub
cs
call
popf
dec
or
inc
inc
and
insl
add
inc
in
mov
xor
incl
mov
jmp
mov
cmc
pop
mov
sbb
stos
int3
pop
addl
lcall
pop
insl
cmpsl
or
adc
jae
adc
es
adc
inc
lret
and
and
dec
enter
sub
mov
sub
dec
aad
inc
xor
jle
mov
sub
in
cmp
jge
jne
mov
insb
pop
xor
or
andb
and
push
jecxz
scas
pop
divb
xchg
ja
shll
aaa
xor
inc
fadds
push
xlat
andb
aam
jle
push
shlb
xlat
dec
push
in
mov
repz
ja
sub
test
pop
push
cmpsb
add
fstpt
sbb
mov
enter
rclb
rclb
push
pop
lds
lret
ret
nop
push
sub
push
lret
ret
jns
and
rorb
push
jmp
cmp
inc
into
fcompl
xlat
fs
xor
jmp
and
jle
pop
int3
mov
or
pop
push
sbb
inc
push
in
adc
ja
int3
xor
dec
add
or
mov
add
push
loop
cmp
rcr
mov
mov
push
mov
adc
jecxz
adc
lea
jmp
jl
dec
shlb
lods
fildl
mov
or
and
dec
inc
aad
mov
int3
jl
inc
shrb
adc
decb
adc
adc
jae
orb
mov
lock
sbb
sub
imul
xor
daa
jnp
cld
adc
push
das
cmp
cmove
jle
shlb
fsubl
xor
mov
mov
cmp
adc
xchg
rcll
dec
adc
pop
and
adc
push
orl
jnp
pop
popa
mov
aas
dec
cwtl
xor
aas
jae
clc
and
mov
cltd
add
and
decl
cwtl
cli
xchg
andl
xchg
or
or
or
mov
pusha
mov
inc
leave
loope
sahf
in
lods
sub
jns
es
inc
and
movsl
ret
inc
int3
or
mov
clc
mov
pusha
mov
sbb
cmp
or
jo
nop
aam
ret
add
movsb
leave
mov
add
adc
or
les
jmp
test
inc
lgs
lock
dec
pop
pop
cld
cmp
jb
mov
mov
enter
sub
ret
mov
pop
sar
or
sbb
incl
or
mov
add
and
push
xor
icebp
sub
hlt
lret
pop
call
jb
mov
dec
sub
push
je
arpl
add
xchg
sbbb
jbe
adc
shlb
stc
daa
dec
jp
fidivs
mov
loopne
jo
ror
movsb
arpl
je
push
dec
icebp
fmuls
or
test
adc
movl
or
dec
mov
or
add
cmp
adc
fnstcw
es
xorl
movsb
cmp
jb
mov
cmp
adc
adc
fimuls
test
fimuls
or
and
or
push
jbe
out
aas
ficoml
add
imul
sub
sub
out
pop
lods
mov
adc
adc
mov
in
je
movsb
xor
lods
push
jo
pop
add
mov
inc
push
mov
rorb
imul
mov
sbb
mov
leave
push
sbb
mov
xor
adc
inc
cmp
mov
push
jne
mov
mov
insl
cmp
jae
add
jmp
sbb
or
xor
fisubs
cmpb
sub
sub
push
lret
je
ljmp
sbb
pop
iret
sahf
outsb
xor
jmp
jmp
shrl
inc
shrl
push
sbb
pop
mov
call
adc
lea
rcrb
dec
add
fs
adc
mov
popa
clc
lock
inc
xor
js
xchg
push
icebp
loop
sub
lock
mov
push
mov
xchg
or
mov
test
aas
push
fdivl
jbe
add
cmp
inc
add
jmp
mov
pop
adc
add
sbbb
mov
xorl
lea
divl
imul
hlt
push
data16
or
inc
mov
repnz
add
inc
inc
lea
mov
or
push
sbb
mov
sub
ret
sub
jb
movsb
mov
scas
lods
add
jmp
outsb
push
add
andb
mov
add
imul
mov
les
clc
sbb
test
push
adcl
scas
ljmp
incb
sbb
ror
mov
add
cmpb
sahf
shr
jae
movsb
mov
lea
adc
or
insl
or
sub
mov
insl
adc
jbe
push
jmp
push
sbb
xor
push
xor
xor
mov
cmp
add
ljmp
inc
fnsave
repz
pop
sub
and
insb
jbe
adc
jo
leave
push
cli
jp
xor
adc
dec
nop
lock
mov
jne
movsl
or
ret
insl
inc
mov
inc
pop
sbb
add
or
cmpsb
ret
mov
andb
rorb
sbb
mov
pop
push
xchg
dec
push
cld
pop
pop
inc
or
xor
sub
jo
scas
adc
aam
mov
adc
sti
and
or
je
jne
divl
or
dec
je
sbb
cmpsb
test
idivl
add
and
xchg
inc
lcall
and
sbb
cld
or
jge
sub
mov
jg
jmp
lret
mov
jmp
jg,pt
clc
dec
outsb
andb
lcall
or
push
mov
mov
ja
jmp
or
adc
arpl
ss
js
add
xor
push
inc
inc
nop
std
orb
loopne
pop
lret
pusha
dec
add
cmp
pop
nop
call
lds
cmp
loope
mov
xor
inc
jmp
jg
adc
mov
pop
out
xor
adcl
jo
insb
and
mov
push
or
xor
xorb
inc
pushl
arpl
inc
or
cmp
or
xorb
call
clc
and
das
inc
inc
aam
mov
dec
ficoms
lock
adc
or
lcall
or
inc
lea
mov
add
repnz
mov
pop
push
subl
add
popa
pop
inc
sbb
ds
xchg
mov
cmpsb
xor
sti
sub
in
call
cli
mov
shrl
mov
mov
lock
mov
cli
inc
das
nop
mov
movd
fsubl
in
sub
cs
shlb
icebp
push
int
popa
sub
sbb
adc
xor
sbb
sub
xor
mov
sti
icebp
xor
jle
mov
pop
ss
aas
push
mov
cmp
clc
sbb
dec
and
pop
ret
les
adc
es
mov
adc
mov
xchg
or
ds
inc
loopne
out
xchg
popa
lock
jbe
sbb
adc
lret
cmpsl
adc
and
sub
push
or
inc
fcoms
test
pop
push
ret
push
rorb
add
mov
sbb
pop
outsb
setb
inc
mov
stos
pop
add
cmp
jbe
out
xor
add
stos
jnp
sahf
sub
fidivrl
sub
test
adc
pop
mov
movb
add
and
jle
insl
pop
add
je
or
inc
fsubrl
or
arpl
xchg
or
add
ret
or
cmp
jecxz
out
outsl
fimuls
sar
je
jne
or
inc
jnp
sbb
fidivs
inc
leave
or
push
les
je
jmp
pop
cmp
jb
enter
jmp
rdpmc
shlb
or
inc
nop
or
sbb
add
fidivl
je
aad
sbb
push
neg
leave
mov
mov
jne
bound
push
inc
jge
cmp
sub
stos
idivl
in
jle
lcall
add
mov
test
lods
pop
clc
sub
je
push
cltd
mov
jo
mov
push
clc
inc
sbb
add
xor
loopne
inc
sbb
add
jnp
pusha
xchg
jo
sbb
scas
lods
sub
inc
scas
roll
out
lods
or
call
mov
xor
hlt
or
add
jg
es
inc
sub
jmp
push
adc
add
add
and
sbb
scas
lock
add
xor
inc
mov
sti
xchg
add
cmpsb
and
ljmp
sub
mov
and
xor
cmovnp
cmp
insl
adc
xchg
js
add
cmp
mov
popa
out
dec
ss
jbe
mov
pusha
sti
loopne
dec
mov
jmp
mov
ret
sbb
push
rcll
pop
dec
out
and
sti
pusha
dec
xor
sbbb
push
rorl
push
clc
mov
xor
inc
add
push
fs
sarb
mov
mov
or
dec
add
push
mov
mov
add
add
sbb
jno
add
adc
lock
bound
pop
jge
sbb
jns
pop
sbb
or
add
add
cmpl
pop
inc
jg
gs
unpcklps
ret
dec
mov
sbbb
fs
jno
shl
fnstsw
aas
dec
insb
loop
jnp
test
add
sbb
inc
sbb
cld
scas
sub
jns
cmp
or
pop
insb
or
add
adcl
add
push
inc
lret
add
and
inc
fdivrs
cmp
mov
cmpsl
add
dec
mov
cld
rcrb
call
dec
mov
inc
test
push
xchg
std
dec
adc
clc
ss
jne
sbb
test
outsb
pop
inc
bound
insl
and
xor
lods
adc
pop
andb
popa
and
out
std
add
pusha
jle
mov
mov
push
mov
out
mov
mov
pushf
test
inc
inc
hlt
das
add
shlb
sub
mov
jl
push
inc
xchg
test
cmp
and
xor
sti
sub
ficomps
pusha
and
push
cmp
test
or
push
adc
enter
scas
push
testb
fst
push
cltd
inc
add
or
and
aam
or
insb
adc
test
xchg
je
xor
ds
jle
cmp
push
ja
imul
add
xchg
add
dec
or
jmp
mov
mov
sbb
or
loope
cld
jo
sub
ljmp
xor
sub
push
pop
pop
push
push
push
je
bswap
ja
pop
xor
and
shll
insl
std
ret
push
mov
in
sbb
cmpsl
sbb
dec
divl
ja
or
imul
ds
mov
mov
je
fadds
sbb
xorl
jg
test
sbb
add
sub
mov
mov
add
or
or
add
sub
aam
fisubl
add
dec
sub
sbb
pop
jecxz
outsl
sbb
add
ret
jp
mov
pop
mov
outsl
sbb
pushf
fcomps
mov
xor
cmp
xchg
mov
lods
in
dec
add
and
push
pusha
push
test
mov
jbe
xor
insl
sub
pusha
or
mov
sub
loopne
push
push
dec
aam
push
push
sbb
pushf
pop
or
call
inc
pop
sbb
decl
leave
adc
dec
inc
test
and
cmp
dec
mov
mov
mov
jmp
test
into
es
mov
je
lahf
idiv
push
sbbb
push
cmp
ja
add
cmp
adc
cmp
pop
clc
les
dec
jne
adc
fwait
mov
and
neg
xchg
testb
or
sbb
or
mov
jg
add
push
or
mov
je
or
push
push
loope
roll
in
ja
fs
jb
loop
or
mov
std
lret
xchg
ret
add
popa
fsubrl
dec
mov
sbb
orl
lock
xor
lods
pushf
shrb
sub
outsb
push
test
and
mov
mov
push
rcrl
mov
jb
push
mov
dec
push
mov
xor
sub
xor
dec
cs
cmpb
push
dec
pop
or
psubusb
popf
push
and
sub
mov
nop
out
cmpb
mov
or
lret
push
call
xor
js
clc
or
add
hlt
movb
rolb
addl
mov
add
lcall
test
loopne
inc
rclb
std
lahf
dec
gs
jg
je
or
pop
sti
inc
imul
or
or
jmp
pop
ss
or
jmp
add
rcr
in
sahf
les
lock
inc
bnd
pop
push
push
insb
insb
ja
or
mov
lods
imul
add
jmp
dec
push
dec
sti
cmpb
mov
push
adc
pop
rolb
adc
arpl
adc
sarl
jl
push
sbbb
fdivs
push
mov
add
xor
into
inc
add
sub
sbb
outsb
push
arpl
jnp
inc
sbb
fdivl
fucomip
mov
roll
scas
in
mov
loopne
or
mov
adc
outsl
jg
push
jge
lret
adc
fs
add
mov
mov
cmp
imul
nop
sbb
jle
dec
ret
or
push
lcall
sub
add
push
cmp
out
insl
or
lea
push
mov
imul
jne
test
addl
mov
fmuls
sub
or
or
daa
rolb
mov
mov
inc
and
in
sti
rclb
and
jne
push
pop
mov
jbe
inc
mov
inc
fcmovnb
rol
add
mov
mov
ret
sti
jbe
push
gs
xor
dec
pop
xchg
insb
push
mov
add
pop
add
sub
mov
sub
or
pop
mov
or
push
daa
inc
push
push
xchg
xor
shr
or
dec
adc
andb
cmp
movsbl
or
sbbb
out
mov
xor
loopne
jle
ljmp
js
add
mov
lcall
nop
movsw
call
adc
push
mov
and
add
imul
adc
xor
mov
inc
fcmovb
adc
outsl
inc
leave
jle
aas
pop
dec
rol
lea
popa
sbb
arpl
fdivrs
xchg
add
adc
bound
xor
mov
cmp
pop
je
in
sub
mov
xchg
pop
mov
jae
aam
xor
pop
sub
mov
subb
iret
pop
jo
iret
xor
mov
call
pushf
push
xchg
cs
std
push
cmp
pop
jne
mov
inc
push
cmpsl
push
pop
cli
fists
mov
mov
cmp
je
inc
cmp
push
in
mov
adc
push
ss
cmp
lods
shr
leave
aam
inc
mov
cmp
ja
movsb
add
add
pusha
mov
cwtl
ret
dec
ret
add
pushf
or
mov
xor
jmp
push
enter
push
pushf
or
rolb
sbb
mov
xor
inc
test
lcall
push
test
xor
mov
and
xchg
mov
enter
call
mov
adc
or
shll
xor
or
fs
aam
test
sbb
lds
popf
pop
sub
jmp
mov
fisttpl
scas
pop
ret
cmp
jbe
xor
lock
xchg
punpckhbw
cs
or
lcall
jg
lret
xorl
or
in
pop
push
sbb
mov
pushf
xchg
jne
sbb
or
fwait
test
cs
add
adc
loope
inc
jp
dec
sub
adcb
outsb
nop
or
rorb
mov
lahf
movsb
orb
cs
add
rolb
ja
push
xlat
add
pusha
adc
xchg
fstpt
lahf
add
insb
or
or
sub
adc
mov
cltd
add
adc
add
sbb
std
mov
fsubr
add
fsubl
roll
lods
neg
mov
mov
cltd
sbb
jo
cmp
jbe
insb
shl
jmp
or
pop
and
cmp
xchg
push
jno
loopne
push
mov
jl
sarb
or
je
neg
push
inc
mov
push
sub
sub
js
cmpsb
pop
jmp
ret
mov
dec
pop
data16
mov
push
or
inc
ret
lods
jns
nop
cmp
clc
cltd
sub
sbb
push
enter
insl
les
in
push
jne
push
in
outsb
test
out
push
andb
xor
mov
int
pop
dec
mov
movsl
mov
stos
mov
or
outsl
sbb
adc
jmp
inc
js
push
jle
out
bound
stc
adc
jo
mov
pop
out
pop
call
dec
add
or
insl
fisttpll
ret
lods
lcall
cmp
jle
jmp
pop
cmp
loope
lods
sub
call
push
xor
mov
mov
or
or
pop
adc
push
push
or
lock
add
clc
dec
or
dec
pop
call
lock
or
fadds
sub
enter
loope
adc
push
and
daa
outsb
mov
test
popa
testw
je
fcmove
fs
push
mov
xor
mov
adc
shl
shlb
icebp
dec
sbb
sbb
add
sub
and
push
dec
lret
jne
cltd
or
mov
jmp
aaa
xchg
fsubs
stos
or
cs
and
and
push
xchg
or
out
or
or
push
cltd
and
fs
jle
cli
sti
inc
jl
or
xchg
mov
cli
mov
xor
fs
add
loope
mov
jle
inc
push
dec
inc
jp
ret
dec
js
subb
or
mov
in
pop
lock
sbb
movsl
adc
or
enter
sbb
or
pop
dec
jle
decb
es
lea
add
jno
inc
and
push
inc
cmp
dec
xor
arpl
clc
xor
pop
jbe
mov
adc
jnp
push
out
in
push
add
and
lret
std
dec
jb
in
pop
sub
mov
xor
jbe
leave
sub
and
test
cmc
xchg
mov
lock
in
lods
mov
and
inc
loope
lock
mov
xor
push
xor
cmp
jle
shr
sbb
add
mov
insb
pop
andb
lret
xchg
pop
sbb
xchg
loope
mov
pop
scas
insl
push
sub
push
insb
inc
mov
inc
jmp
insb
in
and
cwtl
lret
xchg
add
jae
push
jmp
xor
push
mov
cmp
loope
and
mov
and
dec
out
int3
pop
push
sbb
aad
sub
popa
lds
xlat
pop
inc
outsb
or
xlat
mov
dec
sub
dec
dec
add
mov
mov
mov
mov
inc
dec
cld
ret
adc
shlb
enter
enter
lret
mov
incl
or
ds
sbb
or
loop
jnp
decl
mov
lock
arpl
mov
push
xchg
and
cmp
lods
mov
cmp
mov
fdivrl
cmp
mov
dec
adc
ja
icebp
imul
daa
inc
lcall
mov
gs
sahf
xchg
dec
lods
jle
mov
sbb
pusha
push
xor
rcrb
aas
mov
mov
js
add
sti
mov
in
cld
fsubr
jne
add
cmp
and
jnp
adc
cmp
and
inc
xor
sti
adc
cli
mov
mov
lods
pop
adc
xor
xchg
test
mov
and
mov
xchg
cmp
enter
inc
sbb
adc
mov
add
mov
daa
add
inc
push
mov
mov
imul
aaa
dec
mov
or
ret
jl
mov
jbe
es
out
push
xchg
pop
fmuls
xor
enter
mov
repz
inc
fcoms
cwtl
xor
int3
ds
sbbl
pop
js
jmp
sbb
cmp
push
pop
es
dec
mov
loopne
sbb
adc
pusha
cmp
and
adc
pop
xor
add
pop
movsb
add
push
mov
jbe
jmp
mov
jbe
lahf
or
cmp
cmp
push
mov
pop
jne
adc
mov
and
jmp
daa
push
sub
mov
fimull
mov
int3
and
xchg
ret
and
jae
in
dec
dec
jne
adc
xor
dec
das
mov
testl
aas
push
inc
push
jmp
mov
pop
sbb
fiaddl
sti
and
in
sti
pusha
xchg
mov
sbb
cmpsb
mov
sarb
mov
mov
bswap
jle
insb
pop
arpl
enter
ret
adc
jg
jo
pop
sub
xchg
jae
js
pop
pop
mov
outsl
inc
push
mov
ss
xor
or
cmp
push
outsb
jmp
sbb
lcall
adc
xchg
popf
pusha
pushf
sbb
add
push
or
imul
adc
xchg
and
add
cmp
mov
inc
sbb
push
sbb
push
push
xchg
xchg
mulb
or
or
inc
call
sbb
pushl
push
push
sub
jmp
adc
push
imul
adc
and
clc
fs
jne
sahf
or
insl
filds
andb
stc
adc
mov
rorl
rorb
jns
dec
out
int
pop
es
sbb
dec
adc
out
inc
xchg
mov
and
out
sub
mov
pop
push
sbb
pop
pop
mov
test
mov
add
push
dec
lods
sbb
cmp
popa
add
sbb
push
scas
in
add
mov
inc
push
enter
xchg
addr16
outsb
aad
pop
push
je
jnp
xchg
xchg
and
pop
push
mov
sbb
xchg
popf
insl
inc
xor
lock
pop
pop
data16
pop
cmp
scas
dec
cmp
or
das
jmp
and
or
or
or
lods
dec
ss
pop
popa
inc
pop
std
in
insl
aad
cmp
sub
out
jmp
push
gs
xlat
adc
push
xchg
push
jle
mov
xor
pop
cmpsl
jns
lahf
sbb
or
or
add
inc
js
add
add
or
lret
loopne
inc
xor
cmp
mov
jnp
push
adc
dec
in
pop
hlt
ljmp
or
cmc
lds
mov
or
int
out
mov
cmpsb
mov
jmp
insb
pop
pop
test
pop
mov
fcoml
fdivs
push
cmc
mov
adc
add
outsb
pusha
lock
and
ret
sbb
lret
mov
bswap
mov
push
je
mov
testb
or
mov
xor
add
nop
sub
imul
or
sahf
add
or
dec
adc
adc
andb
push
push
push
outsb
inc
loope
mov
sub
lret
mov
shl
not
test
outsb
and
aas
popa
es
push
mov
outsb
sbb
push
cli
and
push
rclb
ficoms
fcmovne
out
cltd
adc
cmp
sub
pop
push
mov
shll
aaa
cmp
xor
js
mov
sub
les
cmpl
add
cld
test
add
ret
pop
cltd
addr16
xlat
mov
mov
adc
and
rolb
jecxz
repnz
sbb
test
inc
push
push
sbb
sbb
pop
mov
aam
aaa
lret
and
addb
sarl
enter
stos
sbb
push
adc
ja
push
ss
sub
pop
fcmovnb
add
xor
xchg
inc
gs
or
dec
stc
dec
mov
xchg
shl
push
mov
cltd
push
out
sbbl
imul
cmc
adc
sub
not
ss
and
mov
call
dec
and
loopne
mov
mov
fidivl
xchg
hlt
push
pop
inc
outsb
lret
or
in
cld
add
or
cltd
inc
fs
or
pop
mov
popf
jg
mov
dec
or
imul
dec
dec
push
or
add
out
lahf
lods
xor
sub
outsb
add
mov
sbb
mov
cmp
sbb
sbb
out
and
gs
jecxz
dec
fstps
push
xchg
fsub
add
hlt
and
dec
xchg
xchg
xor
lods
loopne
jge
pop
jg
cs
aas
sub
push
nop
out
adc
stos
test
inc
std
daa
adc
stos
mov
cmp
jl
in
and
lea
inc
test
xlat
sub
mov
inc
push
sahf
cmp
andb
mov
add
inc
jle
sub
adc
xor
pop
or
or
dec
mov
push
incl
sub
clc
inc
ret
ret
and
mov
mov
and
out
push
loopne
cs
sbb
mov
dec
movsb
inc
rolb
dec
cltd
or
ss
mov
fs
push
fcomps
outsl
pusha
and
push
dec
adc
ss
push
or
mov
mov
jle
sahf
xor
out
sbb
jl
rolb
xor
clc
fwait
adc
out
dec
jl
cmpb
jl
sbb
adc
nop
cmp
jmp
cmpsb
xor
incl
call
push
lcall
adc
pop
push
xchg
sbb
push
mov
xor
sbb
adc
subl
xor
pop
push
rclb
mov
sahf
fimull
js
add
push
iret
mov
mov
xor
insl
adc
lcall
push
push
mov
pushf
push
cmc
pop
rcl
iret
ss
mov
push
adc
pop
enter
adc
rcrb
sub
or
fwait
cmp
sub
fildl
sbb
or
dec
dec
add
jbe
ljmp
add
data16
adc
lea
mov
mov
push
pop
or
outsb
test
adc
fs
clc
and
jmp
adc
iret
cwtl
cli
sub
dec
inc
loopne
dec
xchg
fdivl
push
sbb
arpl
fs
dec
and
adc
cltd
ret
push
dec
fldl
dec
cld
xchg
or
adc
push
leave
jmp
push
sbb
inc
sbb
loope
adc
xchg
test
lcall
mov
inc
inc
rcr
or
je
sbb
call
inc
sti
aaa
cmpsb
loope
fstpl
or
loopne
push
lds
sbb
dec
or
adc
ds
scas
and
or
push
movsl
andb
mov
ss
into
movsl
rclb
popa
cltd
inc
xor
shrb
jne
push
mov
popa
dec
cwtl
shlb
fstl
cmp
call
mov
inc
add
xchg
mov
adc
adc
xchg
and
jmp
rcrb
xchg
fsub
xchg
inc
sbb
imul
sbb
push
inc
cld
lret
and
cmp
sub
test
mov
or
dec
ja
mov
scas
dec
sub
mov
push
mov
and
and
rcl
outsb
add
lret
inc
dec
out
mov
push
add
ror
js
lock
mov
cmp
jb
cmp
jbe
inc
mov
or
movsl
jnp
popa
movsl
int
sbb
popf
xchg
sbb
psubb
imul
in
push
push
mov
and
adcb
pop
jle
shrb
adc
cmc
dec
and
mov
jge
movzwl
mov
aaa
jns
xchg
or
je
out
repz
popa
aam
cs
fsub
adc
xchg
fistpll
imul
xor
mov
push
sub
pop
xchg
loope
lods
imul
ja
sub
cmp
fmull
xor
or
icebp
dec
cwtl
repz
adc
sub
ret
shll
pusha
add
movsb
cwtl
es
adc
push
dec
sbb
cs
push
vdivps
xchg
out
push
push
xor
jno
ret
add
sbb
pop
rcrb
push
ds
fneni(8087
or
pop
jmp
in
mov
ret
dec
inc
or
and
call
xchg
js
xchg
fistl
inc
divb
jl
or
jg
adc
mov
hlt
push
and
cmp
dec
add
push
lcall
aam
xor
rclb
jle
mov
pop
jmp
or
jmp
pushf
inc
inc
loope
inc
cmp
jle
xchg
jae
imul
mov
or
push
mov
dec
inc
inc
out
sbb
adc
shlb
jnp
jg
movsl
psubq
or
dec
or
mov
cmp
jb
pop
push
sbb
inc
rcrl
testl
addb
imul
push
fsubrs
push
push
das
or
fadd
xchg
mov
dec
andb
bound
or
push
fdiv
push
jmp
adc
dec
loopne
xchg
mov
cwtl
data16
push
dec
repz
inc
cs
sbb
mov
push
popf
out
mov
loopne
push
cmpsl
adc
iret
jle
ljmp
ret
push
adcb
pop
dec
pusha
jns
cwtl
pop
inc
je
mov
adc
push
jo
sbb
movl
inc
in
popa
push
movsl
push
or
dec
adc
std
cmpsb
outsb
inc
jmp
mov
sub
sbb
mov
pusha
xchg
and
pop
pop
mov
and
or
cli
test
sub
mov
adc
mov
es
cld
mov
mov
rolb
std
shrb
push
cli
dec
roll
cmp
out
cmp
push
pop
loop
scas
ljmp
jl
incb
hlt
aas
xchg
shl
dec
inc
andb
or
dec
jmp
xor
jecxz
aaa
movsb
xchg
add
xor
imul
push
int
mov
sub
loopne
rorl
sbb
sub
cmp
xor
or
push
pop
shlb
add
and
add
aaa
loope
lret
mov
dec
mov
add
stc
ljmp
lcall
mov
or
adc
jmp
adc
add
aad
int
dec
imul
push
les
jno
aas
inc
pop
sbb
push
mov
pop
push
adc
je
cmp
out
push
mov
xor
stc
sub
inc
sub
xchg
ret
adc
enter
cmp
dec
loopne
pop
xchg
adc
popa
loop
push
adc
push
mov
hlt
js
pop
and
es
les
adc
popa
mov
fadds
add
mov
sbb
jecxz
enter
mov
pop
push
mov
js
xchg
adc
push
mov
loopne
ljmp
add
das
jp
push
daa
sbb
xchg
or
pop
shll
call
call
jmp
repz
pusha
shll
inc
clc
sbb
addr16
popa
xorl
loop
pop
dec
pop
cmp
mov
inc
jge
dec
sbb
push
not
jae
mov
xchg
inc
cmp
rclb
jae
pop
int3
popa
ret
sub
cmp
ret
push
out
xor
stos
inc
or
pop
dec
popa
mov
int3
push
lock
and
sub
pop
out
rcl
jbe
lock
xchg
mov
ja
popf
or
or
insl
cmp
pop
inc
sbb
sbb
notb
jae
dec
pop
lds
pop
testb
ficomps
scas
sbb
imul
mov
nop
clc
pusha
int
mov
hlt
dec
loope
inc
xchg
adc
lret
xor
mov
sub
shlb
adc
adc
daa
and
xchg
cs
xor
icebp
popa
add
xchg
addb
adc
xchg
push
jp
movsl
in
cmp
mov
xor
fld
adc
or
call
adc
or
jbe
mov
lea
lret
fimuls
jl
clc
and
fmul
les
push
loop
xor
or
je
fs
mov
frstor
add
pusha
ret
loop
cli
adc
xchg
mov
bound
orl
adc
cmpsb
inc
mov
mov
sahf
stos
imul
js
hlt
mov
inc
ret
pushf
test
sub
xchg
sbb
cs
loopne
loopne
cmpsb
movsb
sbb
clc
nop
fwait
add
sbb
jmp
subl
lcall
mov
or
cli
jno
push
jae
mov
mov
sbb
js
fidivs
add
inc
push
pop
adc
inc
add
mov
add
flds
dec
mov
repnz
and
rorl
cmp
push
rolb
out
add
or
mull
sbb
xor
prefetch
mov
mov
movsb
cmpb
or
jle
add
ds
mov
adc
aaa
ljmp
lret
push
jl
jg
mov
cmp
data16
cmp
mov
rcrl
es
dec
cmp
sbb
add
sub
clc
adc
mov
cs
add
xchg
push
adc
cmpsl
lahf
cmc
xor
push
aad
inc
pop
inc
lods
adc
mov
cli
lcall
cmp
mov
xor
lea
jge
movb
imul
jge
je
out
xor
sbbb
mov
inc
enter
sub
aaa
pusha
mov
test
and
push
xor
pusha
fnstenv
jp
pop
push
add
add
jmp
push
mov
shr
adc
mov
adc
cltd
test
xor
adc
test
xchg
pop
inc
or
pop
inc
and
xchg
lcall
std
xorb
pop
mov
push
sbb
cmp
push
xchg
or
or
xchg
mov
and
add
bound
adc
jp
adc
dec
mov
push
inc
sub
lret
xor
lods
xor
scas
push
inc
out
ja
sbb
mov
jne
push
jb
popa
addl
jnp
cmp
sarb
js
leave
jo
pop
pusha
fstps
adc
ret
xchg
outsl
sbb
je
loop
lea
mov
xor
or
cli
sub
xor
add
inc
sub
mov
or
pusha
ja
dec
es
mov
pop
adc
push
cs
mov
ret
jnp
pushl
mov
nop
incl
and
pop
mov
inc
pop
ds
loope
das
add
and
jg
stos
xchg
icebp
add
mov
adc
sbb
add
popa
ret
cmp
xor
xor
inc
push
stos
repz
lods
pop
adc
mov
jecxz
mov
addl
std
lea
push
aad
inc
sub
test
sbb
and
sub
adc
xchg
movsb
cmpsb
sub
push
add
xor
jo
lcall
jmp
sbb
xor
cmp
push
xor
jo
andb
pop
jmp
push
sub
and
pop
push
and
js
test
arpl
push
mov
dec
push
out
and
pop
imul
adc
pop
aam
and
in
das
push
jns
xchg
inc
push
and
movsb
test
xchg
mov
or
and
std
inc
lods
dec
push
jne
sbb
cmp
push
mov
test
test
or
mov
sub
adc
push
sahf
sub
cld
add
and
punpckhbw
sbb
sub
xor
sub
cmp
dec
jl
or
lcall
cmpsb
push
push
mov
push
mov
leave
mov
push
adc
push
jo
hlt
adc
adc
sbb
xor
lret
into
loop
repnz
sbb
pop
inc
insb
or
add
pop
aaa
mov
xor
adc
add
daa
lcall
das
dec
xchg
in
or
cld
pop
nop
je
in
add
outsb
jmp
xor
adcl
fimuls
pop
and
int3
dec
shr
shl
mov
mov
sub
jmp
ss
mov
ret
jmp
push
insl
div
or
out
shr
or
push
mov
xor
fidivs
jle
pop
and
je
mov
push
or
push
or
or
and
push
movsl
sub
movsb
mov
pop
push
mov
jns
mov
rcll
add
mov
pop
cmp
mov
addr16
out
adc
jo
inc
sub
push
roll
gs
xchg
pop
add
sarl
adc
fstps
cmp
clc
jmp
loopne
mov
or
sbb
pop
adcl
enter
xchg
pusha
cmp
call
push
movb
push
in
out
out
sahf
out
ljmp
int
sti
out
aas
xchg
push
inc
add
or
add
xchg
insb
push
sub
add
and
rorb
xor
add
add
jo
pop
data16
aad
jp
pop
jp
lea
test
imul
push
test
fs
test
inc
cld
mov
xor
and
sbb
or
lea
mov
xor
push
cmp
lods
inc
loop
sub
movzwl
mov
fdivs
sbb
adc
mov
data16
adc
mov
dec
inc
filds
xchg
imul
mov
lea
add
icebp
sub
mov
je
neg
jle
ret
jbe
pop
xchg
jge
aas
jb
in
xor
fs
testb
mov
je
in
imul
add
or
dec
sub
call
add
jbe
outsb
call
add
sbb
xor
icebp
fs
neg
sbb
jle
cmp
dec
xor
dec
je
adc
jge
sub
xchg
enter
dec
or
xor
mov
aas
mov
mov
cmpsb
push
add
add
sbb
dec
rolb
xor
jb
add
int
cmp
dec
jmp
inc
fs
incl
inc
incw
incb
sub
sub
mov
push
xchg
sbb
fwait
push
xor
pop
hlt
flds
adc
andb
shrl
jp
jbe
jne
dec
aad
xor
inc
xchg
in
ja
inc
push
fnsetpm(287
and
or
mov
sbb
jle
and
pop
cmp
or
in
dec
dec
or
add
repnz
cli
std
mov
aas
ja
dec
and
jmp
movb
ret
repnz
jo
cs
pop
push
mov
dec
out
cmp
cmp
cmp
cmp
call
pusha
xor
dec
aam
subl
or
jp
clc
mov
add
mov
fisubrs
dec
fcomps
call
adc
add
pop
shlb
push
jbe
cld
test
adc
push
pusha
fwait
shlb
subl
mov
in
movsb
enter
scas
push
or
jg
cmp
jns
cwtl
or
rolb
and
cmp
mov
in
mov
jg
or
sub
sbb
add
fdivrs
xorb
faddl
orb
dec
ljmp
ss
fsubl
int3
fsubl
test
and
inc
fdivp
inc
fiadds
adc
insl
lcall
push
or
movsl
cmp
pusha
shrb
add
push
jmp
cmp
mov
inc
fisubrs
jae
shl
pop
nop
enter
push
mov
std
adc
add
in
sbb
or
movsb
pop
mov
xor
push
jmp
and
pusha
jle
gs
or
mov
adc
inc
jmp
sub
mov
mov
or
adc
add
inc
clc
fildl
pop
ret
push
sub
stos
in
push
adc
ds
mov
lea
cmp
rorb
push
push
hlt
mov
neg
stos
pop
popa
push
fsubrl
push
movsl
por
sub
and
in
pop
or
sbb
bound
lds
mov
sub
leave
movsl
ficoml
push
sbb
cmp
xchg
hlt
adc
or
clc
add
adc
push
imulb
icebp
add
mov
or
pop
mov
mov
push
inc
adc
cmp
pop
dec
data16
sti
inc
gs
inc
mov
cmp
and
xchg
sbb
shll
mov
mov
or
xchg
sub
add
je
adc
hlt
cmpsl
mov
cmc
inc
or
xchg
mov
jb
or
inc
push
push
jmp
imul
jecxz
xor
or
dec
dec
add
sbbl
cmp
sbb
push
lock
repz
js
dec
and
dec
add
es
js
mov
xor
sbb
clc
das
pop
bound
test
mov
xchg
dec
jg
or
rorl
imul
jbe
add
out
xchg
mov
mull
xchg
not
and
inc
cmp
dec
rclb
mov
out
push
add
cmp
jecxz
mov
icebp
pop
in
sbb
sub
pop
dec
mov
adc
inc
roll
jne
push
popf
push
out
aam
cmp
jl
dec
push
or
es
jmp
cmp
mov
out
push
mov
cli
or
out
loopne
sub
gs
jmp
jno
mov
inc
sub
testb
or
frstor
sub
adc
lods
push
pop
adcl
dec
and
xor
add
jae
mov
int3
add
pop
cs
dec
xor
sub
sub
mov
add
add
loopne
sub
cli
adc
dec
or
sahf
shll
dec
or
or
ljmp
mov
or
push
mov
in
inc
mov
jb
dec
aas
flds
nop
icebp
and
mov
negb
fists
inc
aaa
xor
repnz
leave
xor
mov
xor
sub
adc
push
imul
fldpi
pop
push
std
inc
out
lock
cmp
mov
inc
mov
pop
sub
fs
dec
push
pop
es
push
jl
or
jge
pop
gs
movsbl
dec
ss
pop
xor
shlb
in
mov
mov
xor
mov
add
and
xor
cld
and
jbe
xchg
add
and
pusha
xor
out
or
aaa
jmp
jbe
or
pop
mov
shll
enter
sbb
addr16
dec
sbb
push
sub
sub
or
movsb
pusha
dec
shrl
sbb
std
add
push
clc
jl
out
jmp
push
out
adcb
push
inc
clc
divl
stc
cmpb
int
testl
addl
cmp
cmpsb
sahf
out
jmp
out
fnsave
push
std
sbb
xor
jg
xor
shll
push
dec
mov
pop
in
test
sub
scas
je
push
or
push
jmp
stos
aas
lock
pop
mov
xor
lahf
dec
or
and
xor
test
push
push
ror
inc
cmp
pop
jmp
and
mov
or
movsb
jle
jg
imul
adc
xor
pop
and
push
mov
cmp
fcoms
mov
sub
int3
lods
dec
cmp
xchg
arpl
xchg
aas
jne,pn
xchg
loopne
push
jecxz
cld
push
movsl
push
mov
add
imul
jne
lret
lret
pop
jmp
ds
mov
std
pop
sub
je
mov
daa
mov
mov
add
adc
add
je
sbb
and
arpl
sbb
lcall
test
fistpl
rcll
jne
lods
xchg
xchg
xchg
xlat
ljmp
pop
andl
adc
mov
stos
lods
xor
adc
and
jmp
mov
nop
or
sub
jae
shll
cmpsl
xor
or
rorl
add
sub
and
fcmovne
jmp
aas
loop
test
push
sbb
addb
add
dec
pushf
lods
add
inc
mov
inc
pop
sarb
mov
rcll
pop
lea
xchg
ss
les
icebp
lea
mov
jp
mov
ret
push
fldl
mov
cld
push
mov
es
rcrb
or
pop
mov
stos
mov
sub
add
es
pop
jl
sbb
push
jmp
outsl
and
xchg
and
mov
lret
mov
je
ja
in
adcl
or
cmc
shrl
bound
push
inc
bound
repnz
out
stc
adcb
jle,pn
mov
xor
push
or
test
inc
dec
pop
xchg
rorb
in
inc
adc
int
or
push
xchg
xchg
loop
xchg
push
bound
or
jge
lret
jbe
jle
gs
pop
repz
test
cmp
lock
mov
or
cmp
mov
mov
sbbb
push
sub
inc
jo
pusha
mov
test
enter
ljmp
mov
mov
push
ja
adcl
xchg
sbb
pop
push
push
inc
mov
push
mov
cmp
aam
mov
and
mov
xorb
and
jo
pop
adcb
scas
inc
inc
cwtl
mov
pop
cli
push
adc
subb
or
sahf
hlt
mov
mov
sbb
adc
adc
filds
add
lds
xor
jp
lret
mov
mov
das
aam
fisubs
out
xchg
sbb
cmpsl
imul
mov
mov
rcrb
jb
stos
xchg
rol
xchg
jae
inc
or
fbstp
mov
lods
push
push
or
das
pop
mov
push
lfs
push
pop
cmc
sbb
mov
roll
fimull
cmpsb
gs
dec
lcall
js
cmovae
in
adc
call
lods
shlb
xchg
push
mov
insb
leave
adc
rcl
pop
pop
cs
mov
loopne
inc
int
xchg
xchg
sub
xor
js
push
jnp
arpl
mov
mov
jmp
or
cmp
fnstcw
xor
add
cmpsl
sbb
fdivr
pusha
jecxz
or
mov
fldcw
cld
clc
dec
sarb
jns
testb
das
ss
mov
loopne
add
sbb
push
xorl
lea
inc
pop
rolb
add
subb
aas
and
jge
inc
jmp
or
pop
outsb
jecxz
shl
and
aaa
in
xor
push
jl,pt
ret
push
xchg
sbb
arpl
dec
pop
popa
jno
aaa
addr16
mov
les
lock
movsb
push
insb
xchg
enter
add
add
pop
mov
add
mov
xchg
mov
cmp
pushf
mov
cmp
movsl
ljmp
lret
mov
or
cmp
jb
cmp
flds
ds
fsubl
imul
sub
in
adc
sbb
cmpb
sarb
adc
or
das
mov
sub
pop
jmp
push
push
cltd
aam
pop
cmpsw
mov
push
cmc
xor
push
fidivs
pop
movl
mov
and
pop
dec
leave
mov
addb
pusha
add
add
jne
cmpsb
clc
jle
push
push
bnd
outsl
add
or
pop
movl
cli
mov
or
push
and
outsb
cwtl
aaa
push
clc
add
dec
jo
push
sub
pop
cltd
and
addb
arpl
jb
lcall
inc
cmpsb
ror
sub
dec
pop
jge
pushf
adc
je
cmp
cmpsl
lods
add
sbb
mov
arpl
or
shr
stos
mov
adc
lds
fimull
add
in
shll
cmp
sbb
xlat
jge
jns
nop
mov
test
mov
mov
js
bound
pop
push
pop
xchg
mov
xchg
xchg
dec
mull
mov
dec
push
inc
sub
insb
dec
pop
inc
add
mov
mov
cmp
cmc
jae
sub
cmp
mov
pavgb
aam
push
add
pop
adc
pop
and
orb
xchg
fs
mov
xchg
jne
sahf
sub
in
adc
xchg
xor
jp
dec
and
lea
xchg
mov
andl
setb
sbb
inc
push
mov
adc
rcrb
fdivrs
sub
test
jp
hlt
jg
movsb
add
loope
inc
push
xchg
push
fwait
pop
push
inc
or
pushf
fstps
jae
pop
jmp
xorl
rorl
dec
mov
repnz
add
xchg
add
mov
pop
mov
stos
jmp
xchg
ja
ljmp
fiadds
mov
push
push
or
or
push
inc
shlb
lcall
insl
dec
xchg
xchg
pop
stos
addl
mov
lea
cmpsl
clc
cmp
out
mov
shlb
push
xchg
shll
and
subb
push
daa
int3
cmp
mov
nop
xor
test
cld
and
notb
je
inc
imul
pop
int3
or
mov
ja
addb
push
fdivrs
or
lea
lret
dec
test
or
pop
pop
xor
orl
in
fsubrs
and
fbld
pop
lock
push
adc
jl
test
jbe
pop
test
and
pop
push
in
inc
mov
dec
dec
pop
clc
add
mov
or
fadds
jb
popf
xor
jne
sbb
and
inc
dec
add
add
inc
mov
js
ret
mov
adcl
sub
or
cmp
lods
jno
dec
incb
ja
sbb
adc
fadds
adc
add
add
dec
ds
daa
lods
inc
dec
mov
or
outsl
or
loop
or
nop
add
or
add
xchg
dec
or
push
xor
xchg
sub
cmpb
fisttpll
or
and
pop
test
test
adc
and
aam
push
sbb
push
xchg
pop
push
fmuls
or
sub
xchg
push
mov
cmp
jne
ret
sub
push
push
data16
imul
adc
pusha
or
add
mov
add
xor
enter
adc
pop
mov
icebp
shll
jnp
sub
ret
fs
add
push
mov
xor
cmpl
push
out
repz
in
enter
imul
sbb
sbb
roll
xor
inc
inc
cmp
jge
mov
cmp
xor
bound
cmp
or
icebp
ret
push
pop
pop
sbb
sub
movsl
sahf
sub
dec
dec
jae
in
js
rorb
add
aad
or
js
push
clc
push
push
rorb
ret
pop
push
dec
dec
js
xor
rclb
sbbb
arpl
jl
insl
adc
push
gs
inc
adc
insl
push
rcrb
push
add
sub
sub
pop
decb
pop
lea
rep
ds
jne
imul
clc
je
and
jae
mov
clc
inc
arpl
pop
arpl
mov
xor
mov
xor
push
mov
and
or
stc
xchg
inc
xchg
stc
jae
add
movsl
or
inc
lods
xor
push
ljmp
jge
pop
cmp
movsb
add
js
or
pop
pop
dec
inc
pop
adc
inc
sub
add
sub
or
add
cmp
or
push
arpl
dec
sub
or
call
mov
sub
dec
cmpsb
test
mov
mov
cmp
fcoms
sbb
push
pusha
xbegin
and
adc
sub
movsb
jo
pop
outsl
xchg
lods
pop
or
ds
mov
lea
push
adcb
je
cwtl
lcall
mov
pop
mov
jmp
dec
imul
sub
adc
and
es
or
pop
add
push
mov
clc
addb
sbb
adc
mov
inc
fiaddl
pusha
and
push
movb
push
enter
mov
mov
lahf
ss
xor
inc
push
adc
fisttpl
js
fwait
test
pop
adc
or
cmpsl
jno
sbb
inc
inc
movsl
in
add
jno
adc
mov
inc
sub
iret
sbb
push
cmp
les
imul
popa
and
fistpl
psllq
push
xor
push
inc
pop
in
jb
gs
imull
mov
roll
add
dec
add
sarb
mov
push
pop
jge
push
js
je
js
loop
nop
xchg
jne
xchg
sqrtps
xchg
mov
adc
xor
loop
push
push
stos
cmpl
mov
out
mov
aam
pop
es
shrb
jnp
and
fisubl
mov
ds
int
add
and
scas
mov
inc
inc
push
push
xchg
aam
add
cmpsb
fistl
test
sub
or
and
enter
testl
push
and
lods
or
enter
test
xchg
rolb
mov
add
rorl
scas
or
rolb
fs
bound
jl
push
sbb
mov
js
jp
cmp
jge
push
pushf
lock
inc
adcl
mov
mov
push
jge
out
mov
cmp
add
sbb
mov
ja
lea
xor
pushaw
rclb
fsubs
shrb
mov
xchg
dec
ret
mov
js
pop
push
add
sub
sub
mov
or
or
and
pop
add
add
or
or
sub
sub
push
pop
aaa
inc
es
push
sbb
fldt
xor
loopne
mov
mov
aad
pop
orl
insb
jno
repnz
fstps
xchg
nop
aaa
sbb
inc
pop
and
inc
push
and
dec
xor
pop
and
mov
pop
arpl
mul
add
sub
cmp
adc
aam
cs
mov
imul
push
add
adc
imul
adc
loop
iret
and
mov
sub
jmp
or
push
ljmp
cmp
push
int
adc
mov
outsl
arpl
and
ret
sub
sbb
stos
sub
ss
loope
jne
cmp
sbb
movsl
repnz
das
aad
iret
test
cmpsl
shrl
pop
jmp
lods
sub
insl
inc
sbb
xor
das
scas
and
add
sbbl
and
jno
mov
leave
lea
stos
push
fcomps
stos
and
jg
loop
mov
loopne
int
rclb
loopne
and
xchg
jg
shl
mov
sbb
lea
pop
test
inc
push
je
pop
inc
inc
popa
add
cmpb
ret
pop
pop
pop
push
dec
push
leave
mov
push
orl
in
js
dec
add
jno
pop
jnp
subb
push
icebp
and
and
ret
push
inc
icebp
xchg
pop
sbb
dec
push
inc
lds
pop
outsl
aas
inc
jecxz
inc
xchg
adc
dec
adc
ret
arpl
dec
sbb
adc
insb
sub
lods
adc
xchg
pop
jae
sub
in
stos
addl
mov
jno
add
rorb
jns
dec
sbb
sarb
nop
hlt
jl
inc
jbe
add
inc
movsb
lods
cltd
cmpsb
jp
ret
adc
add
push
adc
sub
sbb
incl
add
mov
decl
inc
xchg
data16
jmp
push
mov
jnp
inc
dec
cmp
cwtl
jmp
or
jo
inc
inc
sub
jo
cmp
adc
shlb
mov
ja
or
pop
jecxz
aaa
cmp
fs
xlat
cmp
dec
jo
xor
or
or
push
add
mov
jb
insl
mov
inc
dec
call
xchg
ds
jge
cmp
jne
test
dec
enter
mov
in
sub
mov
bound
pop
adc
pop
sbb
sahf
push
sub
rorb
xchg
into
je
stos
add
loop
mov
test
sub
and
inc
sub
push
dec
dec
mov
repz
push
mov
pop
cmp
ds
add
pop
add
xchg
sbb
add
sbb
xchg
fmuls
cld
cmp
jo
xor
pop
push
pusha
adc
ljmp
outsb
jne
inc
ret
cmp
gs
pop
fdiv
jno
dec
cmp
in
orl
mov
popf
or
mov
xor
and
scas
jae
xchg
sub
push
fwait
pop
mov
pop
cld
pop
mov
imul
ja
adc
nop
test
les
int3
pop
testb
inc
aas
lds
push
and
shll
sahf
or
lret
sbb
faddl
loopne
add
xor
xor
sbb
js
push
xor
stos
mov
and
xor
and
in
ljmp
jbe
ds
lods
inc
lahf
or
cmp
dec
ds
mov
xor
mov
pop
or
or
inc
repz
js
push
insl
ret
pop
sbb
sub
pop
ss
add
cmp
in
add
out
adc
enter
inc
dec
bound
dec
std
fwait
sub
xor
or
and
cwtl
mov
add
mov
jmp
inc
cmp
jb
insb
aam
mov
pop
sbb
xchg
adc
push
nop
add
nop
aaa
imul
dec
cmpxchg
fdivs
push
add
cmp
adc
cmp
cltd
mov
sub
je
push
inc
push
push
addr16
pop
popa
xor
inc
pop
push
testl
sub
ret
add
out
negb
and
mov
dec
popf
inc
ret
dec
les
adc
jmp
add
jmp
adc
or
inc
enter
ljmp
sahf
add
push
push
gs
cli
inc
lea
dec
and
xchg
daa
jg
pushl
jae
dec
movsl
mov
dec
clc
movsb
cmc
pop
test
dec
pop
add
mov
lea
sbb
arpl
push
mov
int3
jo
inc
push
or
adc
fs
adc
or
test
dec
call
adc
push
add
div
add
inc
hlt
adc
cmc
xchg
jo
adc
jno
sub
mov
sbb
loope
shlb
push
mov
test
cmp
sahf
outsb
xchg
cli
je
sub
repz
pop
or
push
in
andb
andb
ds
cmp
adc
pop
pop
push
sbb
mov
xor
add
mov
dec
push
stos
jge
or
add
push
add
cmpsl
ret
mov
add
jmp
lahf
xchg
mov
stos
bound
imul
or
pushl
sbb
cmp
js
jae
xchg
or
dec
inc
mov
inc
cmpsb
fildl
push
ret
cmp
jne
push
shl
jbe
iret
fdivrl
push
jne
int
loopne
add
and
rorl
loop
inc
jg
jmp
mov
adc
jnp
push
outsl
dec
push
ret
push
adc
test
pushaw
push
push
push
cmp
ss
ret
push
jne
shlb
ret
gs
push
add
dec
ret
aaa
jne
xlat
sbb
sbb
lcall
js
jle
xlat
adc
gs
and
xor
aaa
adc
push
add
stc
cmp
xorb
dec
rorb
push
mov
js
fimuls
dec
and
lock
addr16
jg
sbb
mov
adc
or
test
jmp
push
roll
push
sbb
adc
sub
push
mov
jle
mov
lods
xchg
js
and
add
inc
test
sub
test
xchg
xchg
popa
cmp
std
addr16
loope
dec
loope
mov
push
xorb
and
fisttpl
or
lcall
adc
xchg
js
mov
or
lods
fcoms
pusha
jecxz
or
xchg
stc
mov
pop
push
add
jnp
loope
mov
test
pusha
addl
push
jno
ret
leave
popa
lock
and
mov
xchg
clc
inc
and
mov
sbb
js
sub
loope
and
or
jp
sarl
insb
jmp
dec
gs
xchg
sbb
es
adc
lock
ljmp
adc
lock
dec
lods
cwtl
pop
inc
add
fadds
dec
lock
loop
xchg
icebp
push
notb
or
inc
imul
out
jns
inc
cs
loopne
test
or
sub
push
lahf
ljmp
lea
jg
pushl
mov
mov
cld
jg
sub
mov
or
roll
mov
dec
call
push
fdivr
push
ret
xchg
jb
jecxz
adc
add
sub
in
cmc
aaa
add
or
ja
mov
dec
adc
xor
sub
push
roll
inc
xor
ficoms
push
xchg
mov
lcall
push
jg
push
pop
push
push
in
mov
or
xor
and
pop
or
mov
add
mov
xor
push
imul
inc
test
push
and
xor
push
fnsave
insl
mov
push
lcall
js
and
lods
or
inc
sub
push
push
test
xor
test
add
inc
rcrl
insb
cltd
pop
shlb
mov
sbb
popa
sbb
or
mov
test
adc
inc
js
adc
test
pop
rol
push
xorb
add
sub
jmp
mov
bound
mov
orb
dec
or
mov
xor
pop
cli
xchg
mov
sbb
jmp
orl
push
insl
sbb
popaw
pop
lea
pushf
mov
xchg
enter
clc
mov
and
dec
jno
aaa
pop
inc
loopne
inc
add
xor
dec
or
inc
mov
imul
enter
mov
push
sbb
and
test
shl
cmp
loope
aad
ljmp
adc
pop
mov
dec
dec
ret
xchg
pop
add
sbb
cmovb
mov
or
pop
push
xor
cmp
daa
mov
sub
or
shlb
pop
sbb
mov
mov
mov
push
outsl
stc
mov
jnp
call
push
sbb
movsb
xor
inc
adc
lea
jg
cwtl
add
jo
outsl
ja
imul
jno
pop
inc
call
ffreep
xor
mov
rorl
sub
sub
or
inc
arpl
fwait
and
jo
mov
cmp
and
pop
dec
inc
or
push
push
js
dec
aam
mov
xor
add
xor
rcll
and
or
shll
xor
adc
lods
mov
out
mov
loop
inc
inc
xor
je
sub
sub
mov
xchg
test
jle
les
cwtl
je
cmp
add
adc
cmp
movsl
pop
or
xor
jmp
pop
or
in
jbe
mov
dec
sub
push
add
jbe
push
popf
sbb
jne
jno
inc
sahf
jbe
prefetcht0
sbb
es
xchg
inc
xlat
add
and
xor
push
push
shrb
sub
pop
mov
rcll
call
push
nop
add
xchg
xchg
add
cmpb
lock
jmp
inc
inc
lock
push
xchg
cmp
mov
xchg
sbbb
jnp
push
adc
add
inc
jo
mov
repnz
xchg
adc
lods
sub
sti
xor
fprem
push
pop
push
fcoms
adc
sub
pop
push
sub
sbb
fcomp
shrb
inc
ljmp
xchg
adc
sti
in
push
xlat
push
xor
dec
shrl
insb
dec
and
xor
adc
addr16
sbb
jb
push
sbbb
addl
and
divb
es
add
push
push
dec
test
add
sub
test
out
add
mov
imul
add
xchg
mov
cltd
adcl
sbbl
inc
pop
and
xor
dec
dec
dec
dec
add
mov
xchg
test
das
lock
lret
loope
cli
mov
pop
subb
popf
mov
sub
leave
mov
jmp
push
jmp
inc
inc
adc
inc
push
or
fdivrs
out
pop
pop
mov
mov
pop
vandpd
loopne
fcmovnbe
mov
or
or
mov
sbb
data16
data16
mov
movsb
sub
dec
sbb
push
addl
ret
cmc
add
sub
sub
imul
push
sub
roll
sub
mov
xchg
jge
push
test
jecxz
dec
jo
ret
stc
mov
xorb
inc
xor
push
and
pop
pop
add
popa
jne
xchg
mov
pop
dec
lret
xchg
test
fists
lcallw
and
dec
hlt
xor
fnsave
dec
sbb
xchg
orl
pop
lock
cli
sbb
sub
stos
xchg
mov
int
jecxz
pop
cmp
add
adcl
sub
add
mov
out
test
xor
inc
jae
add
adc
jnp
add
adc
ss
xchg
sbb
mov
pop
mov
jo
adc
mov
pop
andl
xchg
jae
sub
mov
jne
or
fdivrl
pop
pop
push
jecxz
jne
fwait
mov
adc
rolb
cmp
cld
scas
push
push
mov
ret
pop
mov
mov
jmp
mov
mov
test
pop
aaa
fcom
sub
and
rcrl
mov
lcall
test
test
lds
inc
mov
xchg
push
push
clc
add
cli
jmp
push
bound
es
pop
repnz
jne
loopne
lret
je
xchg
imul
loopne
les
sub
sbb
sbb
sbb
sub
ror
ret
jmp
lods
ja
push
sahf
mov
cwtl
or
and
add
pushf
in
mov
movsb
dec
jo
add
pusha
icebp
xor
add
xchg
mov
rol
adc
jne
nop
test
adc
call
in
jmp
jo
pop
adc
inc
push
cmpsl
pop
inc
and
call
ja
or
cwtl
adcl
sbb
test
pop
pop
pop
out
enter
cltd
cmp
and
fnstenv
mov
test
mov
mov
ficoml
mov
jno
mov
cltd
jo
and
dec
loope
iret
sub
xchg
inc
inc
push
xorps
in
dec
mov
xchg
lock
adcl
icebp
jbe,pn
mov
xchg
push
add
xchg
in
pop
ret
add
add
sbb
fs
or
or
add
je
test
out
sbb
push
mov
pushf
adc
or
or
sbb
rcrb
dec
dec
sarl
dec
lods
rcrl
js
arpl
inc
fdivp
pusha
push
les
mov
lock
mov
fbstp
pop
push
jle
adc
call
push
push
test
push
mov
dec
push
or
pop
orl
test
add
push
push
pop
cmp
je
push
push
mov
jmp
test
in
shrl
xchg
mov
stc
cmp
shlb
xchg
push
and
cmp
jne
xor
xchg
frstor
xor
pop
inc
sub
call
inc
sbb
inc
push
je
push
adc
loop
ja
repz
add
jb
out
shlb
mov
rolb
cmp
addl
popf
or
dec
sub
lahf
xchg
icebp
inc
mov
adc
or
add
loopne
imul
xor
and
mov
pop
addl
sbb
inc
sub
pop
add
ljmp
out
mov
push
out
xchg
popa
and
clc
push
dec
mov
push
add
dec
jp
fwait
inc
cmp
sub
inc
mov
mov
sub
cmp
rcll
add
dec
jecxz
fcomps
scas
adc
pop
dec
cmp
add
cmpsl
insl
in
imul
lods
xlat
mov
ret
mov
mov
hlt
inc
inc
xor
xchg
mov
ja
mov
addr16
sbbl
add
mov
push
clc
or
pop
inc
stos
cli
adc
jbe
adc
into
or
test
push
jecxz
loopne
push
xchg
ret
lea
rolb
sahf
mov
sbb
fidivl
mov
mov
lcall
lcall
mov
push
imul
add
push
jl
push
cli
imul
or
std
adc
xor
and
push
mov
add
add
orb
dec
jmp
idivb
inc
jnp
add
lods
test
jnp
jnp
mov
fs
cmpsb
jnp
add
dec
inc
jle
fidivrl
cld
push
mov
pop
enter
or
push
or
and
fdivl
push
movl
push
and
inc
push
subb
mov
fnstcw
sbb
push
mov
or
pop
leave
cmp
outsb
insb
enter
movsb
adcb
xchg
xchg
in
leave
xchg
clc
fcoml
loop
or
push
push
add
push
add
pop
xor
inc
mov
in
inc
adc
in
add
rorb
add
sbb
shll
xchg
sar
adc
push
lcall
add
mov
push
ja
mov
fsubs
cmp
jne
sbb
dec
cli
hlt
jne
push
jns
xchg
or
pop
or
jnp
stc
sti
mov
pop
pop
cmpsl
dec
out
adc
lret
sbb
inc
lods
push
cmp
ficoms
ret
xchg
adc
call
xchg
push
sbbb
push
xor
cmc
lods
gs
cmc
nop
sub
loop
dec
or
jne
arpl
pushl
jbe
sub
and
inc
loope
into
cwtl
out
add
push
jno
inc
or
pop
pop
jnp
dec
lock
sarl
nop
jno
push
js
test
xor
int3
insb
rep
arpl
or
ljmp
lahf
movb
jae
adc
nop
pop
pop
xchg
loop
insl
mov
push
pop
outsb
mov
or
sbb
and
xor
jns
mov
sbb
jne
push
push
xor
rorb
xor
push
push
out
into
clc
pop
shll
call
pop
xlat
call
cmpsb
test
bound
push
mov
cli
jnp
pop
rolb
xor
push
adc
and
fcoms
adc
movb
mov
insl
mov
lds
sub
fildll
test
jo
jecxz
or
add
les
test
dec
fs
jnp
cmp
das
adc
out
inc
dec
lcall
pop
ret
ret
add
inc
sub
fimuls
dec
mov
and
clc
ds
fdivp
pop
sbb
dec
push
xor
xor
pop
hlt
test
bound
int3
ret
sub
dec
mov
mov
xor
test
pusha
popa
call
shll
cmp
cmp
mov
cmp
mov
popf
jg
jmp
shr
push
movsb
and
adcb
in
cli
xchg
js
popl
dec
insl
add
dec
xor
mov
stos
xor
dec
jbe
sbb
dec
xor
rorb
pop
sub
jp
cmpsl
push
mov
adc
pop
push
mov
push
std
push
cmp
nop
imul
xchg
add
pop
cld
push
push
pop
push
push
subl
sub
or
xchg
push
in
jmp
mov
dec
adc
mov
sti
or
sbb
in
fdivrp
inc
or
push
push
arpl
lods
adcl
pop
mov
sub
add
fsubrl
adc
dec
mov
test
mov
cmp
mov
lcall
enter
pop
inc
cmp
jns
push
sbb
lods
out
addr16
aaa
pushl
or
cmc
xor
push
fidivs
and
and
nop
jmp
daa
adc
shll
sub
add
add
add
orl
or
sbb
jo
xor
push
mov
adc
mov
adc
inc
and
pop
adc
int3
xor
addb
add
dec
inc
mov
xor
shrl
pmaxsw
dec
mov
sub
call
and
xor
adc
push
lock
lods
imul
mov
rolb
jecxz
xchg
or
test
je
push
push
push
sahf
adc
lods
cmp
enter
cmpl
dec
stos
mov
aas
dec
inc
adc
lcall
xor
inc
xchg
push
sbb
and
xor
insl
sbb
mov
mov
sbb
mov
sub
inc
filds
lea
dec
push
and
roll
into
mov
jmp
xor
and
or
sbb
push
mov
cmp
and
cmp
xchg
movsb
jne
addr16
sub
scas
xchg
inc
je
pop
xchg
pusha
test
xor
dec
mov
lods
je
and
cmp
pushf
dec
pop
sbb
cmp
dec
test
inc
movsb
jle
jne
ljmp
xchg
inc
push
orl
shrl
ret
jae
xchg
daa
cmpb
dec
sbb
test
xor
and
movsl
xor
xchg
xchg
in
cld
cmc
clc
hlt
push
xchg
lret
call
or
push
sub
lods
xchg
jp
fcoms
sub
xor
rclb
cltd
inc
adc
xchg
push
mov
rorb
outsl
int3
mov
dec
sbb
mov
dec
mov
jne
ret
loop
test
add
adc
mov
add
lahf
xor
movl
xorl
push
fadd
nop
inc
jle
add
push
push
add
add
push
push
inc
stos
mov
stos
imul
les
adc
hlt
test
and
sbb
dec
adc
mov
dec
pop
dec
les
dec
cmp
mov
sub
nop
jno
xor
arpl
gs
aaa
hlt
clc
inc
je
inc
push
push
jne
inc
cmp
jne
cmpsl
or
or
gs
rolb
push
ja
dec
xor
call
in
int3
add
push
loope
lods
in
pop
push
and
test
test
movsb
dec
mov
mov
add
push
aam
lea
add
repnz
rcrb
sub
mov
or
mov
inc
mov
adc
mov
mov
pop
fs
stos
ficomps
aaa
or
jecxz
add
psrad
lret
loop
jle
pusha
pop
jmp
sub
push
push
mov
fwait
push
sub
add
pop
xor
add
addr16
jne
iret
add
dec
psraw
xor
sub
xchg
add
xor
jmp
daa
push
mov
xor
sub
mov
xor
push
and
test
shl
jg
mov
push
sub
mov
sub
mov
addl
adc
dec
add
dec
adc
shlb
scas
incl
push
popf
lea
loope
and
js
or
adc
add
xchg
xchg
xor
sub
sbb
jp
jmp
add
cmp
rcr
jle
pop
test
call
mov
movsb
pop
jb
jne
xchg
xchg
xchg
mov
dec
cli
or
pusha
push
enter
je
test
add
jo
mov
cs
fs
sbb
adc
adc
mov
clc
mov
sbb
dec
cmp
sub
xchg
out
dec
jmp
push
nop
dec
or
inc
xchg
jmp
mov
jbe
cltd
xchg
sbb
test
mov
rcll
or
push
xchg
ficomps
jmp
imul
xorb
mov
and
add
pop
sti
jmp
sub
stos
mov
dec
mov
push
or
push
jmp
push
loopne
jb
loopne
loope
jl
adc
mov
cmp
jo
mov
xchg
mov
rclb
jecxz
test
xchg
push
inc
cwtl
and
pop
arpl
ss
pop
xchg
or
sbb
mov
fldt
add
pop
lcall
jle
mov
push
mov
push
push
mov
and
cld
mov
mov
xor
push
sarl
mov
dec
mov
inc
pop
dec
js
pop
mov
mov
sbb
repnz
adc
adc
sbb
push
repnz
push
aaa
add
jnp
add
scas
ret
es
cmp
andb
mov
push
add
mov
pop
lock
hlt
jae
push
mov
cmp
test
dec
cmp
movsl
or
xor
mov
aad
scas
mov
xchg
push
push
sub
movsb
xor
add
or
cmp
or
int
adc
jmp
outsb
hlt
je
pop
int
pop
mov
scas
movsb
add
push
mov
push
js
dec
in
cwtl
xor
inc
jmp
xor
ret
jo
out
or
scas
loopne
rcll
add
xchg
mov
ret
pusha
loope
fadds
icebp
sub
inc
push
xchg
or
rolb
mov
nop
xchg
mov
adc
add
cmp
sbb
push
add
mulb
lcall
ja
jl
push
xchg
mov
mov
fisubl
adc
jbe
fwait
or
push
sub
sub
jmp
mov
pop
or
cmp
mov
jne
jge
or
js
push
add
sub
pop
xchg
dec
test
adc
aas
pop
pop
nop
pop
test
cmpsb
push
clc
ror
inc
jns
test
add
jle
sbb
lcall
sub
add
push
popf
orl
mov
mov
add
add
dec
or
lcall
mov
pop
xor
jmp
pusha
add
add
cmp
inc
outsl
mov
lret
cmp
push
inc
mov
mov
push
in
mov
jp
pop
fucomp
xorl
loopne
js
popl
je
icebp
scas
popf
push
sub
movsb
mov
push
arpl
orl
add
insl
jmp
adc
jo
test
sub
xorl
lahf
adc
jae
xchg
mov
push
jne
push
pop
pushf
loope
cs
mov
inc
add
rclb
inc
add
sub
je
pop
jns
sbb
pop
shlb
add
iret
das
dec
cwtl
ja
lret
movsb
inc
add
ret
mov
sbb
fstpt
shrb
lds
push
cmp
jg
fwait
enter
loopne
mov
mov
mov
xchg
jbe
add
mov
andl
or
xor
cwtl
and
push
mov
mov
sbb
mov
xchg
add
lock
pop
loopne
sbb
dec
popa
lret
push
fbstp
jg
loopne
outsb
pop
jo
leave
aam
mov
cmpsl
mov
mov
data16
push
cltd
loop
adc
ja
inc
push
aaa
adc
push
xchg
sub
xchg
xchg
sti
insb
aas
cmp
out
mov
dec
dec
or
add
in
jnp
xchg
jmp
xchg
insb
xor
jmp
jnp
hlt
adc
arpl
or
add
into
fildl
mov
adc
adc
jmp
pop
pop
add
mov
punpcklbw
or
maxps
cmp
sbb
dec
dec
out
mov
mov
jmp
sub
jne
or
jl
loopne
inc
cmp
mov
and
pop
fcomps
push
ret
iret
jmp
pop
test
inc
mov
or
mov
push
or
sub
mov
mov
cpuid
stc
data16
cmpsl
test
push
mov
add
sahf
out
xchg
and
pop
imul
xchg
stos
mov
rcl
cmpsb
inc
movsb
mov
inc
bound
daa
xchg
xchg
movsb
pop
push
cmp
idivl
push
pop
dec
and
add
loope
mov
outsb
adcl
addl
and
adc
add
sub
cmp
xor
cmp
mov
mov
jno
mov
add
and
sbb
cltd
add
pop
ds
je
fcoms
or
aaa
dec
arpl
and
mov
add
pop
imul
inc
adc
out
pop
imul
pop
xor
sahf
inc
or
or
adc
lods
inc
adc
repnz
lods
lretw
scas
or
pop
cmp
add
lcall
movsl
sti
imul
sub
push
in
rolb
push
mov
sub
out
jle
or
call
jbe
inc
dec
and
push
add
and
or
jo
xchg
sar
xor
mov
and
jbe
pop
push
movsb
lock
aam
inc
lock
repnz
call
pop
or
xorb
push
insl
lcall
sbb
cli
lods
cmp
or
sub
mov
cmc
je
add
xchg
loope
dec
ds
stos
mov
push
inc
adc
movsb
mov
inc
sub
daa
cmp
jl
lods
cs
adc
int3
dec
push
sub
scas
lods
cmc
jne
pop
xor
jne
iret
mov
jno
arpl
repz
jbe
rclb
push
push
filds
push
and
sbb
mov
ljmp
and
push
aaa
int
sbb
cltd
stc
sbb
les
push
je
cli
dec
jno
dec
push
into
jmp
mov
int
and
out
pop
lret
mov
fldl
mov
and
cs
test
lods
and
ret
mov
xchg
push
or
sahf
and
mov
pop
or
enter
adc
das
imul
push
sub
es
les
pop
inc
cmp
jmp
inc
or
and
addl
adc
or
dec
test
jno
inc
inc
mov
jle
movl
mov
dec
xchg
movb
cs
ret
inc
push
or
sbb
test
xor
and
das
fwait
mov
into
and
sahf
push
mov
pop
adcl
jno
xor
mov
scas
je
xor
mov
sbb
std
and
or
inc
inc
orb
ja
adc
fadds
adc
or
xchg
jge
dec
pusha
mov
je
addl
icebp
clc
sub
and
das
jbe
or
sbb
fcoms
aaa
or
jge
mov
and
add
push
movsb
cmovl
xor
adc
fisttpll
adc
clc
cmp
push
xor
mov
test
into
pop
je
shr
push
pop
push
cmp
adc
xchg
movsb
xor
daa
adc
addb
mov
shll
mov
andl
loopne
cltd
shrb
sbb
cmp
cmp
shlb
cmp
sub
add
or
in
mov
pop
pop
adc
and
and
push
inc
aas
popf
inc
sub
mov
add
pop
lea
jne
imul
dec
dec
push
cmpl
mov
lcall
fisubrl
adc
jg
ret
xchg
int
lds
jns
movsl
and
in
leave
sbb
andl
xor
popf
mov
and
iret
mov
xor
sbb
push
lret
pop
inc
jo
add
pop
pop
inc
fs
dec
cmpsb
mov
push
cmp
push
sbb
mov
test
xlat
xchg
test
mov
dec
and
ss
lds
adc
gs
or
inc
adc
ds
insb
imul
frstor
xor
sbb
js
add
aaa
push
jmp
mov
leave
pop
push
jae
xor
pusha
fiaddl
push
or
xor
add
fmul
fcoml
sbb
sbb
in
inc
sbb
push
orb
pop
mov
scas
inc
cmpsb
pop
leave
arpl
pop
add
mov
int3
push
jl
cmp
dec
and
or
lods
imul
xor
lret
or
cmp
add
add
popf
mov
mov
push
xchg
and
add
xor
adc
and
jle
das
and
dec
clc
add
adc
enter
mov
cli
lea
cmp
and
stc
and
aam
pop
adc
subl
mov
or
mov
mov
push
xor
sti
push
pop
cwtl
jmp
roll
pop
mov
dec
jp
icebp
int3
adc
xlat
imul
jl
notb
loope
pop
jl
xor
inc
incl
int3
or
xor
add
das
stos
adc
js
shrb
cmc
adc
push
loope
mov
lea
pop
rorl
out
sbb
push
std
and
lods
mov
jp
add
push
scas
cwtl
jne
add
dec
cmp
push
dec
mov
aam
out
or
hlt
xor
lret
mov
mov
call
shr
fs
and
or
xor
sub
ljmp
fadds
mov
push
jg
orl
fidivs
rolb
xchg
sub
mov
test
pop
fcompl
adc
orl
shll
daa
out
data16
ret
xchg
mov
sub
xor
push
call
add
sar
inc
nop
dec
push
cmp
xor
jmp
inc
hlt
push
pop
cmp
jle
repnz
push
stos
sub
cwtl
push
clc
ret
push
jmp
adc
or
adc
mov
das
xchg
sbb
add
add
dec
notl
adc
add
pop
xchg
rolb
popa
pop
nop
lock
add
and
jo
or
push
pushf
gs
arpl
inc
inc
sbb
or
jmp
xor
jle
push
out
andb
adc
testb
data16
add
orl
add
fdivr
mov
fcomp
xchg
dec
rolb
mov
data16
or
sbb
add
add
lds
xchg
shll
adcb
sbb
mov
adc
adc
clc
push
jle
push
pop
sbb
inc
scas
cs
add
pshufw
or
mov
dec
xchg
jg
scas
mov
sub
jo
or
adc
adc
outsl
rcll
adc
pop
pop
fdivrs
dec
or
es
xor
je
xchg
add
cmp
jne
loope
lods
jbe
jle
or
fwait
out
sti
les
sahf
xor
loop
jne
ss
sub
sub
dec
jle
incl
fisttps
mov
ds
repz
add
and
or
and
push
jp
mov
jnp
test
in
data16
adc
mov
idivl
sbb
and
pop
andl
inc
push
shrb
mov
and
fisttpll
out
orl
and
gs
mov
cmp
sub
imul
jno
mov
mov
push
push
fnstenv
and
ss
cmp
daa
sbb
push
insb
js
inc
loope
test
push
sbb
sbb
insl
imul
ss
xor
into
xchg
xchg
cmp
sarb
jl
and
adc
mov
imul
sbb
out
sarb
mov
lret
mov
or
adc
rclb
xor
addb
shlb
pop
pop
xor
push
xor
xor
push
push
cld
adcb
dec
mov
rcrb
addb
ret
mov
fcoml
sahf
leave
and
push
add
movb
inc
test
aam
add
mov
add
and
add
popf
xchg
dec
inc
mov
cmp
je
cmp
iret
mov
or
cmpsb
gs
add
and
sti
dec
jp
push
not
push
add
add
jbe
andb
add
aaa
hlt
add
out
or
xchg
hlt
and
sbb
andl
adc
aas
rolb
and
inc
push
aas
adc
das
out
test
jns
mov
xchg
jl
add
xorl
inc
dec
clc
xor
jns
enter
and
mov
push
cmp
aaa
ror
es
cmp
fbstp
adc
pop
xor
adcb
mov
cmpl
insb
adc
enter
add
je
push
mov
enter
mov
cmp
add
adc
adc
and
sub
dec
pop
pop
rorb
pop
incb
loopne
scas
xor
push
rolb
insl
xor
test
sahf
subl
mov
addb
ds
daa
jae
add
adc
rcrl
lcall
daa
jp
imul
pop
mov
dec
xor
sub
fimull
xor
stc
inc
dec
ret
push
xor
call
mov
pop
fmull
pop
int
add
scas
push
orl
mov
mov
sub
sahf
rcrl
pop
fwait
mov
mov
xor
pop
push
jle
mov
dec
xor
xor
xchg
jno
inc
push
jne
test
push
xchg
ret
add
jns
mov
sbb
subb
loop
jmp
rcll
inc
iret
jo
or
lock
ret
js,pt
push
ret
inc
bound
in
test
and
imul
dec
pop
mov
fcoml
jnp
sub
cwtl
sub
idivb
sbb
test
je
push
shrl
jmp
pop
test
out
sub
adc
pop
test
shll
cmovle
lahf
insb
mov
addb
mov
xchg
outsb
std
js
xor
jbe
sahf
mov
add
test
sarb
push
adc
popf
pushf
sbb
test
add
sub
pusha
mov
in
pop
sbb
mov
andb
xor
add
or
add
mov
xor
test
add
mov
popa
fstp
xor
fidivs
pop
xor
pop
cmp
stos
xor
ljmp
test
aas
push
into
inc
add
ds
and
cmp
adc
inc
sbb
sub
mov
mov
test
add
push
imul
adc
rolb
lcall
push
push
add
xor
push
out
dec
call
sub
daa
add
dec
add
or
push
cmpsl
mov
sbb
testb
loopne
xchg
and
orb
mov
add
and
aad
inc
adc
mov
dec
cwtl
shlb
cmp
xchg
insl
cmp
xor
xor
inc
add
cmp
out
js
mov
cmpl
rcrl
ljmp
fimull
insb
xchg
add
mov
rclb
sahf
sub
push
xchg
jbe
das
mov
call
xchg
dec
das
dec
pusha
add
pusha
daa
fisubl
cmpsl
or
sbb
cmp
sub
push
out
push
repnz
js
testl
mov
imul
addr16
daa
mov
loop
lods
out
pop
mov
push
insb
mov
fwait
sbb
inc
push
je
sub
je
dec
xchg
fisubrl
push
cmp
rcl
enter
add
loopne
push
jp
push
adc
xchg
xchg
fdivl
in
cmp
xor
lods
movsb
push
push
cmp
dec
insl
pop
sahf
jmp
push
mov
iret
push
icebp
or
push
xchg
cmpsl
xchg
mov
in
daa
jno
cmp
and
cmpl
xchg
or
mov
mov
dec
pusha
and
xorb
push
or
sbb
loop
sbb
sbb
shrb
cmp
cmpsb
ds
arpl
dec
cmp
fs
je
jbe
or
out
fidivs
scas
dec
inc
les
out
cmpsl
or
stos
rolb
add
sti
xor
cmp
mov
fnstcw
into
add
mov
out
inc
xchg
push
or
lcall
add
mov
mov
test
or
orb
dec
xchg
add
popf
rcll
mov
cmp
ja
fsubl
push
sub
je
push
jo,pt
add
jne
jne
cmc
test
dec
push
adc
push
xchg
pop
cmp
imul
inc
pop
jmp
sbb
imul
dec
fisubs
add
mov
add
jae
adc
cmp
push
sbb
mov
push
pop
das
jmp
int
fmuls
loopne
mov
or
add
and
sub
pop
loope
in
subb
push
xor
add
adc
cmpsl
and
jbe
push
sbb
pop
loope
xchg
loope
sbb
nop
and
pop
add
dec
push
inc
sub
push
inc
xor
xor
cwtl
and
and
out
dec
addr16
dec
xchg
rorl
movsb
addl
push
mov
mov
clc
dec
lret
adc
adc
pop
insl
or
mov
aam
dec
or
cmp
push
or
jne
in
insb
mov
jo
or
imul
adc
add
adc
jnp
arpl
andl
mov
or
sub
inc
lret
or
leave
sbb
or
mov
and
xor
add
add
imul
adc
sbb
and
sbb
bound
std
push
add
je
cmpsb
sub
mov
push
pop
push
jbe
bound
rorl
or
nop
ja
faddl
lock
add
inc
adcl
cwtl
xor
out
adc
rclb
pusha
xor
inc
jo
add
sbb
das
in
push
adc
int
fcmovnbe
add
xchg
adc
adc
fstl
pop
icebp
das
addr16
jge
shl
loop
jo
pusha
shll
loopne
nop
xchg
sbb
jne
cmp
gs
or
sbb
mov
xor
sbb
stos
push
shl
cmp
push
fnstsw
jl
mov
test
and
or
sbb
pop
mov
in
dec
inc
fiadds
pop
nop
imul
inc
sbb
add
mov
les
fistl
add
cwtl
stc
add
jmp
xor
xor
outsb
and
fwait
cmpl
push
adc
dec
sbb
add
mov
and
pop
and
int
jne
mov
test
pop
inc
pop
add
mov
decl
cmp
mov
decl
movsl
mov
js
test
cmp
adc
push
sbb
popf
xlat
add
jmp
arpl
loopne
shrb
and
add
ret
sahf
sbb
or
and
and
sete
inc
loope
cmp
mov
aas
es
cmp
or
jne
notl
cmp
je
sub
mov
push
mov
fs
hlt
imul
dec
add
adc
sbb
arpl
std
add
cmp
push
and
push
cmp
lea
adcl
sbb
cmc
rcrl
add
and
ret
enter
imul
sbb
push
pop
cmp
pop
jnp
cmp
insb
sub
jl
aam
xor
and
jbe
xor
jle
push
xchg
testl
popf
insl
or
push
nop
or
or
out
adc
mov
lods
cmp
inc
or
sub
push
pop
sub
xchg
shl
adc
icebp
sbb
push
push
push
sbb
shlb
dec
jne
ss
mov
subl
push
das
je
lds
cmp
inc
sub
mov
inc
sub
jo
andl
xchg
or
mov
cmp
inc
mov
ret
inc
mov
xchg
jge
pushf
scas
fbld
cmpsl
xchg
sbb
and
insb
xchg
add
sub
shrd
add
imul
into
cmp
and
cmpsb
fwait
or
push
stos
imul
and
fimull
dec
inc
sbb
inc
movsb
jo
and
inc
mov
jo
mov
lea
movsl
pop
jns
ret
cmpl
mov
push
push
mov
mov
pop
pop
push
adc
push
fsubl
outsl
inc
ret
dec
and
push
loopne
ret
test
mov
mov
ljmp
ficoms
ss
and
loope
aas
inc
repz
dec
popf
orl
pop
push
rcll
lret
xchg
cmp
xor
push
mov
mov
movsl
sbbl
push
int
jge
cmp
test
jae
lret
mov
adc
jmp
dec
popa
test
ficomps
inc
jecxz
je
push
fs
inc
inc
pop
pop
das
fadds
adc
pop
test
loopne
movl
and
sbb
cmpl
insb
pop
push
lods
or
pop
mov
subb
and
nop
dec
je
jg
add
push
push
fsub
xadd
mov
out
mov
add
jns
lds
ds
fwait
shlb
jg
rorb
shrl
sbb
mov
sub
mov
mov
or
push
cwtl
stos
push
mov
adc
push
data16
add
ficoms
data16
hlt
test
sub
sarb
and
or
sbb
rorl
adc
adc
es
cltd
adc
xor
rorb
lret
mov
xchg
dec
sbb
lods
inc
push
push
or
mov
jno
mov
enter
xor
in
pop
cmp
cmp
cmc
mov
rcl
dec
inc
cld
adc
inc
test
jns
outsb
fiadds
les
xchg
push
add
add
mov
push
xchg
mov
adc
jo
rorl
push
push
ds
add
aas
flds
sub
mov
out
scas
test
push
or
out
dec
daa
ja
insb
frstor
add
je
arpl
add
fidivrl
dec
lea
or
jle
or
jp
and
std
stos
insb
push
add
push
lods
dec
ds
into
dec
sarl
jmp
add
lock
dec
adc
outsb
stos
fidivl
inc
je
or
jbe
cmp
icebp
lcall
shlb
scas
lret
ds
sbb
in
or
mov
push
mov
sarb
adc
mov
lods
ja
je
insb
jne
insb
jns
imul
lcall
ficompl
jmp
push
jmp
cmp
outsl
or
xor
je
popa
pop
clc
and
into
mov
enter
sub
or
pop
bound
je
pop
inc
out
lock
jne
mov
sub
das
adc
or
int3
jp
outsb
jnp
nop
dec
and
push
jmp
sub
pop
or
sbb
push
shlb
push
sbb
adc
sahf
gs
negb
nop
into
aaa
fmul
in
mov
pop
test
outsb
sti
outsb
mov
adc
aam
jmp
icebp
push
pop
inc
cmpsl
xchg
pop
xor
sub
mov
sub
mov
adc
test
sbb
xchg
enter
cmovge
inc
mov
push
or
popa
mov
xor
inc
es
inc
jle
add
repz
push
adc
and
test
ja
cli
dec
adc
icebp
xlat
xor
sbb
lods
movsl
mov
dec
sub
or
ljmp
sub
push
lahf
push
push
movsb
push
cld
inc
sbb
pop
cmp
lahf
rol
imul
xor
jl
xor
ss
hlt
ret
jp
fnstsw
or
arpl
pop
adc
test
jne
add
test
xchg
cmp
and
ror
or
adc
xchg
inc
mov
add
adc
dec
inc
cmp
test
mov
xlat
push
mov
mov
or
dec
jnp
fwait
cli
rorb
push
sbb
lret
leave
leave
sbb
pop
dec
dec
clc
sbb
pop
into
xor
aam
popa
adc
leave
jge
loope
mov
pop
pop
jae
cmpl
mov
push
inc
adc
movsl
mov
sbb
jmp
iret
pop
pushl
shlb
hlt
push
rolb
sub
and
pop
cs
push
mov
and
pop
mov
sub
sbb
push
lret
es
les
aam
inc
sub
or
inc
or
popf
and
dec
xchg
xor
adc
sub
rolb
test
or
loop
and
test
fcomps
in
cmp
push
test
cmp
in
xbegin
ss
cmp
and
push
movsb
mov
mov
jno
pop
sbb
lcall
ret
add
ret
jmp
xor
cmp
xor
or
push
inc
or
aas
mov
in
or
mov
sub
js
adc
add
sub
ljmp
inc
dec
xor
cmpsb
add
xor
sub
mov
or
adc
mov
sub
or
push
sarb
push
add
roll
es
imul
dec
sbb
pop
or
xchg
mov
cmpsb
push
pop
cmp
mov
or
cmp
adc
cltd
mov
js
sbb
mov
ret
negb
mov
push
rolb
out
and
js
pusha
pop
pop
dec
or
roll
movsl
or
push
movsl
add
cmp
push
push
aaa
sbb
add
testl
lods
push
shlb
addb
or
rcrl
and
scas
add
inc
pop
adc
cmpsl
inc
stos
push
or
inc
jmp
div
sbb
rolb
or
mov
sub
or
inc
clc
xor
adc
xchg
cmp
cs
add
movsb
add
fldcw
cmp
ret
xchg
cmpsl
push
mov
mov
and
and
or
mov
mov
sub
les
push
adcb
fucom
je
andl
push
shld
inc
add
inc
and
ds
inc
shl
cmp
cmp
adc
dec
mov
or
popa
popf
push
stos
sbb
push
mov
add
xor
or
jmp
sub
xor
push
testl
push
or
lea
cmpb
ret
xchg
push
push
or
sbb
stos
jbe
js
fadds
pop
add
imulb
test
sub
pop
or
into
jns
sub
jbe
pop
jge
dec
push
jle
cmp
and
jp
pop
pop
push
mov
adc
pop
xor
loopne
ljmp
shr
cs
pcmpeqb
mov
and
cmp
add
fwait
cli
and
push
inc
orl
add
or
adc
dec
pushf
cmpsb
xchg
test
xor
dec
cwtl
add
shlb
wrmsr
fdivs
mov
dec
mov
lods
push
out
pop
or
and
jb
ljmp
int
xorb
sub
sub
dec
xor
shll
push
xor
enter
int
cmp
and
lods
inc
hlt
mov
or
inc
xlat
pushf
push
incb
in
paddsw
add
and
cmp
sbb
cmpl
out
push
sbb
or
imul
movb
jo
sbb
outsb
cmp
int3
cmp
push
xchg
lock
sbb
in
dec
pushf
test
pop
test
dec
pop
loopne
int3
dec
jmp
dec
xchg
jmp
add
and
pop
dec
adc
mov
and
inc
jae
inc
test
and
sbb
dec
ss
add
and
fistl
inc
and
arpl
pop
pop
or
or
push
call
test
adc
jecxz
and
and
cmp
ret
mov
aaa
addb
pop
je
push
inc
lods
adc
roll
addr16
add
mov
popa
ret
fnstenv
ds
mov
xchg
add
int
in
insb
adc
fcomps
cs
scas
mov
mov
mov
js
es
mov
inc
pop
pop
push
rcll
ss
jge
out
and
rol
inc
jmp
lret
stos
xor
rclb
sub
adc
and
dec
addr16
inc
mov
into
pop
ss
rclb
lahf
or
outsl
lea
sbb
test
jne
repz
cmpb
mov
mov
adc
shl
pop
or
aad
xchg
shll
dec
push
mov
mov
das
sbb
cmp
sbb
add
or
bound
push
mov
add
ret
or
lods
inc
xchg
or
pop
push
mov
lea
xor
nop
sub
sub
cmpsb
loopne
adc
xchg
or
rcll
xor
add
fists
jb
enter
dec
inc
or
nop
push
xchg
sbb
adc
and
jnp
pop
or
lods
inc
std
leave
sub
adc
xchg
push
adc
inc
sbb
xchg
mov
jo
and
inc
test
sub
push
ljmp
test
jmp
cmp
repz
add
push
cmpsb
ficoms
test
sbbb
in
mov
or
aad
inc
push
xor
movsb
scas
push
push
or
push
dec
or
or
xchg
jl
mov
ja
mov
rcll
rolb
pop
xchg
adc
dec
cmpsl
inc
add
aas
adc
clc
data16
push
mov
push
movsl
dec
mov
cld
and
lock
cmp
mov
ret
jbe
xchg
adc
mov
shl
or
jb
mov
xchg
enter
orb
add
pop
add
mov
shrb
adcl
and
pusha
xchg
sub
ffreep
daa
dec
or
jbe
leave
jo
xchg
leave
aam
nop
adc
addr16
xchg
and
enter
test
cwtl
adc
mov
lock
fs
addr16
sbb
add
enter
mov
lret
rcll
data16
lret
clc
ret
fnstenv
adc
pop
jp
and
jg
inc
jb
es
mov
sbb
sbb
add
imul
scas
or
xchg
xorl
mov
and
cwtl
xchg
adc
nop
sbb
aam
push
xchg
add
js
mov
movsl
test
js
inc
pop
test
and
add
clc
mov
enter
shlb
jb
inc
sbb
cli
ds
jge
and
stos
add
clc
inc
xchg
jmp
sub
xor
inc
pop
xchg
xchg
xor
sbb
sbb
push
je
push
or
testl
addr16
enter
pusha
cmp
pop
add
mov
jl
xchg
jb
mov
add
outsb
add
cs
fiaddl
sub
outsl
cmc
xchg
hlt
dec
data16
das
pop
cld
xor
fs
pop
and
call
test
or
or
jmp
sti
sbbb
add
add
inc
or
mov
sbb
les
sub
cld
and
adc
sbb
inc
mov
jbe
test
punpckhdq
orl
adc
scas
test
adc
sub
cmc
or
sub
test
xor
das
add
or
xchg
add
cltd
movsb
test
mov
pop
and
add
pop
pop
or
cmp
popa
adc
and
jle
mov
xchg
mov
inc
mov
cltd
data16
sbb
add
mov
mov
mov
repnz
leave
push
daa
xchg
in
push
push
push
pusha
sbbb
mov
jl
test
adc
add
sub
test
rol
int
nop
inc
pop
cmpsl
fsts
dec
mov
mov
add
fadds
out
dec
pusha
je
jg
sub
dec
inc
push
or
inc
mov
xor
cmp
mov
push
rolb
in
jo
dec
lret
hlt
out
adc
roll
pop
jp
sub
rcr
jae
jb
add
mov
inc
ror
add
cltd
fcoms
sub
ffree
add
inc
sub
loopne
push
dec
sahf
sbb
int3
fs
jnp
inc
xor
sub
jbe
xchg
ja
sub
push
xor
cli
das
sbb
inc
mov
xor
ret
add
clc
mov
clc
mov
jbe
aas
faddl
mov
push
rorb
xchg
cwtl
mov
adc
rclb
inc
xor
testb
pop
sbb
adc
inc
xchg
ficomps
fwait
cmp
and
mov
jp
jne
push
or
into
lahf
adc
push
push
push
adcl
dec
dec
fstpt
xchg
and
push
adc
loope
andb
pop
and
cmp
pop
mov
mov
in
sbb
sub
out
je
mov
ret
xor
sub
push
ss
mov
sub
or
daa
pusha
mov
xor
repz
call
jmp
and
push
push
lods
push
aas
sbb
sub
push
push
pop
daa
sbb
push
sbb
mov
mov
int3
aas
mov
lea
add
sbb
add
popf
into
pop
add
push
incb
mov
rclb
push
shll
mov
or
shlb
sub
sub
dec
xchg
mov
fcoms
outsb
xor
mov
jb
xchg
cld
jo
pusha
adc
test
mov
neg
sbb
cmp
pop
inc
leave
pusha
or
or
cmpsb
imul
sbb
pop
loop
pop
js
mov
or
scas
pusha
jo
and
loop
mov
push
mov
push
sub
add
push
xchg
pop
mov
in
adc
mov
repnz
mov
xchg
sub
repnz
dec
repz
enter
nop
roll
test
inc
arpl
test
add
push
mov
mov
bound
push
cmp
rorb
xchg
xchg
hlt
push
mov
nop
in
and
push
inc
and
or
push
xor
mov
add
inc
push
cmp
adc
or
je
sub
mov
shl
sbb
adc
popa
aam
lret
cmp
mov
dec
test
jecxz
fld
arpl
je
test
roll
push
sbb
jo
push
sub
pop
je
fldl
mov
push
scas
add
adc
or
inc
inc
imul
inc
pop
bound
sbb
pop
push
rolb
inc
add
in
rorb
loopne
aas
dec
xor
sub
adc
adc
jp
push
out
sbb
xchg
rcll
xchg
mov
cmp
sub
sbb
repz
sbb
push
fisttpl
negb
adc
pop
sub
xor
adc
ds
ss
xchg
addl
adc
mov
pushf
pop
xor
sarl
sub
loopne
xor
push
mov
sub
push
inc
clc
adc
adc
or
and
jmp
dec
sub
pop
add
out
cmpl
mov
repnz
sbb
mov
pop
roll
jno
fistpll
imulb
inc
addr16
ret
add
and
sub
xlat
scas
sbb
push
adc
or
xor
cmpsl
push
xchg
iret
push
movsb
xchg
fnstsw
add
mov
add
add
or
insl
mov
loopne
popa
xchg
js
sub
mov
pusha
pushf
mov
push
pop
dec
inc
test
xlat
pop
ret
movsl
dec
jecxz
pusha
dec
mov
std
pop
fisttpl
in
cmp
pop
or
les
flds
push
xchg
or
outsb
xor
repnz
clc
cli
mov
shlb
push
or
movsl
mov
pusha
mov
mov
push
insb
test
adc
add
cmp
fdivs
mov
mov
movsl
out
rclb
cmp
jp
mov
xchg
subb
add
xorl
sub
inc
fsts
push
add
lcall
mov
aam
es
into
add
jb
pop
lods
stos
mov
shlb
xchg
and
xor
xchg
hlt
je
sbb
mov
hlt
sbbb
pop
jbe
push
mov
sbb
js
push
cmp
mov
adc
lods
lret
and
pop
xlat
mov
pop
outsb
addr16
lret
js
xor
inc
xor
test
mov
and
jl
mov
inc
outsl
dec
adc
jo,pt
cmpsb
fldl
dec
mov
push
push
cmp
imul
xchg
dec
enter
iret
mov
jmp
and
loope
and
call
pusha
mov
rorl
repz
dec
movsb
xor
jg
push
push
push
or
rolb
cmp
rol
mov
idivb
orb
jo
pusha
aaa
mov
ret
xor
and
push
push
add
adc
ret
pop
xchg
sub
pusha
xchg
das
repz
inc
inc
xchg
push
xor
fmuls
test
mov
xor
mov
mov
test
rolb
adc
push
ss
jg
jmp
in
or
sbb
cli
insb
mov
hlt
out
dec
jmp
add
int3
mov
xchg
cld
dec
xor
loopne
int
test
pop
inc
dec
shrb
and
gs
imul
aam
inc
sbb
cmp
lods
or
testb
or
das
jecxz
dec
push
mov
cltd
les
xor
test
jne
sbb
loop
in
jle
adcl
adc
or
cwtl
addb
scas
cmp
and
push
jne
adc
dec
jg
mov
push
lods
inc
pop
cmp
fdivrl
je
rclb
cmp
jae
rorb
adc
scas
in
lahf
sub
jmp
andl
clc
nop
cmc
pop
dec
add
loopne
movsl
shlb
add
mov
add
es
push
add
clc
pushl
mov
sbb
or
add
mov
add
aam
adc
mov
inc
add
mov
and
push
add
mov
jae
push
pop
sub
sbb
lock
cmp
and
or
push
mov
xor
lea
loopne
cmp
fstl
sahf
lcall
jo
push
pop
or
push
movsl
clc
xchg
mov
xor
adc
pop
sbb
add
scas
and
jl
xor
imul
cmp
pop
jne
fdivr
lods
out
callw
inc
test
leave
jne
xchg
addb
test
or
into
inc
lods
xorb
adcl
fdivrp
addl
lds
xchg
fidivs
jp
sbb
cmp
add
push
icebp
cmp
pop
jmp
jnp
mov
inc
adc
fadd
sahf
repz
adc
cmpl
aaa
push
fwait
leave
lea
inc
add
mov
shlb
pop
test
push
and
das
sbb
xor
js
sarl
xor
jg
push
dec
rolb
cmp
push
rdtsc
inc
inc
cmp
jge
ljmp
mov
ljmp
outsb
add
adc
clc
xchg
cmp
pop
inc
call
push
outsb
mov
fisttpll
inc
inc
cmp
jmp
and
cmp
fisubrs
jmp
mov
xchg
push
stc
clc
jmp
and
inc
inc
push
or
insl
outsb
or
lea
cmp
push
addr16
jne
xor
out
xchg
inc
xchg
pop
and
xor
mov
mov
cltd
andb
adc
popa
in
xor
nop
mov
bound
xor
mov
sarb
xor
push
push
push
push
and
xchg
dec
xchg
add
adc
jne
push
add
in
lods
xlat
in
adc
and
jecxz
sbb
cmp
adc
mov
les
inc
pop
icebp
sub
or
add
xor
je
aam
jl
popf
and
andb
fs
inc
orb
mov
jns
fisubrl
pop
stos
mov
push
add
sub
add
gs
sub
push
add
pop
sbb
mov
add
mov
inc
not
pushl
sub
pushf
push
loopne
jne
add
xchg
adcb
lahf
push
pop
push
roll
cwtd
mov
daa
adc
pushf
bound
or
cs
jbe
add
cltd
add
dec
adc
loope
push
or
xor
testl
jne
js
xchg
in
jnp
das
jns
out
lcall
or
es
outsl
add
mov
loop
mov
adc
out
ds
dec
ds
fadd
frstor
sbb
test
loope
call
andl
jnp
popa
arpl
inc
sahf
cmpsb
lret
cmp
dec
ficoml
shrb
data16
cmp
jg
inc
ret
clc
add
inc
clc
jg
inc
jg
and
xchg
dec
daa
pop
daa
mov
cwtl
roll
ljmp
inc
aaa
inc
cwtl
and
and
sub
cmp
jecxz
in
pop
dec
jmp
fmuls
push
jne
dec
fdivr
andb
fbstp
imul
mov
push
dec
mov
inc
mov
cld
add
in
mov
mov
outsb
outsl
mov
sbb
lods
push
jns
lret
xlat
shrb
shll
leave
call
lds
dec
add
mov
test
sbb
and
mov
mov
aam
shlb
fistpll
outsb
popa
jg
lods
cld
push
push
push
sbb
sub
in
movsl
jmp
rol
and
xchg
pop
sbb
dec
xchg
mov
mov
dec
jne
lock
or
je
jo
or
int
pop
pop
jae
push
push
mov
cmpsl
sahf
add
xor
stc
adc
cmc
inc
fmuls
or
nop
jle
pop
sbb
mov
add
push
pop
add
dec
sbb
orl
adc
inc
imul
xchg
pop
sbb
or
dec
test
add
rcll
in
int
sub
je
inc
outsb
je
sub
ret
push
add
xlat
pop
push
jmp
aas
out
loopne
das
adc
in
out
inc
jne
push
sub
cmp
test
rcrl
sbb
mov
or
lods
fmul
imul
add
pop
cmc
test
push
xchg
test
push
add
je
mov
sbb
mov
mov
adc
cmpxchg
shl
add
xor
add
inc
jo
mov
jmp
add
roll
push
mov
inc
dec
dec
add
pusha
push
lods
call
das
push
fistl
sbb
add
jmp
out
sbb
jmp
mov
inc
and
pop
outsb
call
aas
sbb
cmp
js
mov
orl
loop
enter
shr
push
test
pop
or
mov
movsl
dec
repz
rol
xchg
mov
or
push
jnp
jge
push
jmp
imul
and
cwtl
push
mov
cmp
mov
daa
or
or
jmp
adc
fcoms
jb
inc
inc
mov
test
pop
aad
cmp
popa
sbb
mov
xchg
dec
or
insl
insl
addl
popa
xor
sub
xor
mov
pop
mov
or
std
dec
adc
ffreep
mov
test
push
loop
sahf
push
rorl
mov
ret
xlat
ljmp
clc
or
leave
ljmp
lock
sbb
push
gs
push
adcb
and
rcl
or
add
in
ret
sub
sub
push
dec
mov
xor
or
jge
or
mov
out
out
adc
jmp
test
jmp
lods
and
dec
add
daa
pop
xchg
add
adc
mov
fisubrl
in
or
pop
clc
push
fsts
in
or
pop
stos
test
or
nop
or
sbb
iret
and
sbb
add
cmp
cmp
inc
xorb
pop
xlat
outsb
loop
or
and
sub
daa
adc
popa
ret
aaa
push
addr16
add
adc
add
lock
pop
outsb
push
pop
dec
xor
clc
mov
inc
mov
inc
pop
mov
mov
ljmp
lcallw
sub
xchg
push
add
out
jmp
divb
jg
adcl
xor
add
loope
clc
xor
idivl
sbb
mov
sbb
add
mov
into
dec
loopne
or
insl
pop
andb
cwtl
add
rcl
ljmp
movsl
sbb
mov
and
xor
mov
and
mov
and
call
mov
ret
in
out
movsb
movb
sub
outsl
mov
xor
call
push
test
outsl
popf
mov
daa
mov
pop
xchg
and
sub
shr
jle
cld
and
inc
jae
rcrb
rcrb
out
clc
dec
and
gs
and
xor
dec
jae
jb
push
adc
cmp
in
dec
and
xor
jge
push
fldcw
sub
cwtl
iret
xchg
jne
push
pop
or
mov
arpl
push
or
jb
mov
enter
inc
mov
mov
push
or
enter
push
pushf
push
pop
stc
addr16
dec
hlt
fmuls
imul
mov
loop
dec
mov
das
dec
or
lds
sub
nop
fisttpl
shlb
push
sbb
sub
dec
pusha
aad
out
push
notb
daa
inc
ret
jmp
or
mull
or
cmp
popf
add
jg
daa
cli
or
jg
add
js
add
mov
dec
xchg
fnstsw
jge
subb
pop
imul
fidivs
pop
popa
xlat
push
js
fs
xchg
pop
iret
cwtl
cli
sti
xchg
dec
hlt
mov
aad
sti
cld
mov
lahf
adc
pop
cmp
push
das
or
jnp
xchg
nop
test
dec
rcrl
push
inc
mov
add
daa
cmp
xchg
and
stc
mov
or
lock
xor
loopne
cmp
and
sub
sbbb
leave
dec
pop
ljmp
mov
cmpsl
orl
dec
or
shll
mov
mov
pop
test
add
jge
xchg
push
sub
addr16
movsl
rcll
or
addb
inc
add
mov
lods
dec
add
jbe
shl
push
push
aas
repz
dec
int3
daa
and
iret
and
sub
in
dec
sub
mov
cs
shll
sub
mov
sub
xchg
cmp
or
mov
test
mov
sbb
and
jge
jmp
or
push
adc
ja
addb
add
std
ja
mov
inc
jle
in
xor
push
adc
mov
into
jo
or
sbb
push
call
mov
or
bound
and
sbb
test
mov
push
jl
nop
mov
addr16
sub
sbb
addb
push
and
cmpl
inc
and
add
xchg
push
pop
leave
and
sbb
sbb
clc
rcrl
and
pop
cmpl
xchg
and
lcall
push
adc
mov
fbstp
jmp
or
adc
jge
sbb
cmp
jecxz
in
and
arpl
dec
sub
lsl
ljmp
imul
ret
add
mov
dec
loopne
lea
adc
adc
and
std
cmp
out
stos
icebp
jmp
je
xor
repz
stos
cld
stc
stos
js
pusha
mov
xor
mov
adc
push
and
les
inc
in
push
adc
add
xor
rclb
push
cmp
adc
xchg
ret
cmp
add
cwtl
inc
dec
add
add
or
int3
and
out
fs
loope
sbb
cmp
in
pop
repz
or
mov
inc
mov
sbb
bound
add
stos
fcomp
cld
xchg
adc
push
xchg
adc
ret
flds
outsb
push
gs
sbbb
add
inc
les
xchg
leave
ret
add
push
fwait
jno
sbbb
lret
inc
aas
mov
and
in
js
xchg
or
push
add
mov
jb
xchg
notl
push
xchg
test
adc
add
or
and
std
push
sbb
xor
and
clc
cs
std
jge
xchg
testb
pop
sbb
add
sub
xlat
push
sbb
mov
mov
out
dec
jl
fstpl
dec
leave
push
adc
lds
adc
lds
add
es
loopne
js
add
and
fcoms
je
and
push
jecxz
xchg
push
lods
shll
mov
mov
sbb
push
out
aaa
dec
rcll
jae
mov
lods
pop
adc
out
add
cmp
sub
sub
cmp
mov
shlb
imul
pop
clc
daa
or
jecxz
loopne
shr
stc
cmp
mov
mov
pop
xchg
shlb
and
mov
dec
sub
and
inc
adc
xchg
dec
jne
xchg
sub
inc
push
and
inc
fdivrs
cmp
lock
xchg
jp
mov
add
lock
rcll
cmpsl
add
xchg
loopne
sbb
add
addr16
add
outsb
adc
xorl
xor
lods
sub
dec
aam
in
add
push
push
or
sbb
jl
mov
int3
pop
xchg
sbb
decl
cltd
sub
mov
pushf
and
or
dec
adc
enter
dec
pusha
dec
cld
mov
mov
gs
or
pop
pop
push
lock
data16
daa
les
inc
stc
add
int3
sbb
and
cmp
inc
bnd
imul
nop
mov
push
inc
les
push
adc
popf
nop
and
in
push
or
fiadds
sbb
ret
movsb
mov
add
sub
sub
in
sbb
xchg
sbb
inc
xor
push
xlat
jmp
add
dec
mov
push
fisttps
or
pop
push
push
sub
std
sahf
and
cmpb
mov
sbb
mov
orb
and
sti
negl
leave
mov
and
sbb
aaa
pushl
dec
ret
icebp
adc
or
andl
int3
jp
insl
repz
add
add
lahf
mov
in
push
ds
mov
pop
add
adc
push
cmp
mov
ds
adc
stos
push
icebp
sub
lcall
sub
sub
jno
gs
clc
xchg
xor
add
das
inc
or
jge
ret
pusha
add
sub
jl
sub
hlt
xor
or
mov
push
push
or
fisubl
test
cmp
mov
or
movsl
in
enter
push
or
mov
jecxz
jge
jbe
mov
into
js
cmp
push
enter
fsubs
lea
push
cmp
rol
cmp
cmc
sub
mov
mov
jle
out
xchg
test
jl
in
push
pop
data16
mov
jo
fstl
pop
adc
xchg
xchg
cwtl
mov
adc
test
mov
pop
inc
test
mov
rcll
shll
pop
subb
loope
orl
adc
sub
sarl
rcrl
or
xchg
mov
aaa
orl
lock
xor
cmp
mov
loope
in
adc
cs
mov
lcall
test
and
int3
add
ret
push
cwtl
lock
mov
fucomp
mov
mov
sub
fcomps
iret
sbb
rcrl
lea
push
mov
js
pop
out
addr16
adc
inc
js
mov
jl
test
es
xor
and
data16
mov
xchg
push
sarl
adc
and
arpl
loopne
jle
orb
mov
sub
mov
sbb
add
sub
iret
add
es
dec
mov
inc
push
xchg
call
or
ret
push
add
pop
xor
mov
and
xchg
dec
fwait
inc
mov
push
pusha
cmp
sub
aas
pop
insl
cmp
pop
sti
imul
mov
cld
shl
movsb
popf
int
cli
lods
sbb
jnp
xchg
inc
ret
test
out
loopne
or
add
xor
mov
adc
inc
out
dec
fnstcw
and
and
inc
push
dec
mov
xchg
setns
cmpsb
sar
out
clc
sub
inc
in
push
cwtl
and
pop
inc
pop
js
loopne
jmp
cmp
cmpsl
pop
or
int3
or
mov
int
push
lods
sti
sub
fsubr
fldt
adc
scas
movb
sbb
add
add
subb
mov
aam
inc
sbb
loop
mov
or
mov
ljmp
popf
inc
rcrb
push
jmp
or
pop
push
mov
aaa
add
jg
sub
xchg
mov
push
sbbb
inc
cmpsl
cmc
cmp
mov
adc
fildl
mov
out
orb
sbb
call
push
daa
movsb
nop
inc
nop
jbe
jle
jns
sbb
dec
mov
fsts
pop
add
lods
push
test
rolb
lods
xchg
mov
cmp
in
xor
orl
or
mov
adc
sbb
out
add
inc
mov
or
xchg
pop
ds
js
sbb
mov
dec
sti
popf
xchg
inc
aaa
out
push
icebp
enter
sbb
scas
fs
dec
jae
pop
add
xchg
push
fisubrs
nop
adc
stos
sub
arpl
push
or
enter
rorl
xchg
inc
sar
push
jecxz
out
xchg
xlat
or
orb
or
aam
pop
testb
dec
rorl
rcll
pop
push
xor
outsl
jo
rcl
rol
or
adc
adc
ja
mov
adcl
pop
push
pop
lods
add
cs
push
in
mov
sub
movsb
cmp
and
cmpsb
push
xchg
addb
inc
dec
cld
dec
clc
cmp
adc
add
cmp
xchg
xor
pop
cld
pushf
xor
and
or
mov
lock
mov
xor
push
fistps
nop
or
mov
mov
inc
in
bound
adcb
inc
es
mov
andb
in
xchg
adcl
dec
pop
push
jb
loopne
movsb
xor
mov
add
call
and
pop
mov
je
add
cmp
int
arpl
cli
or
mov
adc
and
xor
pushf
and
stos
or
pop
mov
movl
rolb
xor
or
mov
lock
lods
and
pop
or
push
push
cltd
adc
add
xor
pop
push
imul
inc
lods
lods
mov
enter
xlat
imul
adc
adc
push
sbb
xor
xor
in
add
out
out
mov
cmp
fcomp
or
dec
dec
or
testl
sub
push
in
rolb
orb
outsb
lret
imul
add
pop
sbb
inc
pop
mov
enter
pusha
or
jecxz
gs
adc
cmp
mov
cmp
pop
inc
push
icebp
pop
sbb
cmp
cmp
xor
mov
loopne
insb
cwtl
movsb
shrb
pop
push
add
pop
setne
test
pop
pop
add
daa
adc
jge
lock
roll
sub
adc
mov
add
out
mov
jne
mov
les
xor
fucom
shrl
jmp
push
push
push
mov
pop
mov
or
addr16
jne
xor
imul
mov
xlat
mov
or
jle
push
add
testl
call
clc
mov
into
push
pop
or
scas
scas
push
xchg
out
cmp
xor
out
insl
inc
divl
push
mov
nop
imul
iret
imul
mov
xor
imul
cmp
inc
arpl
jno
ljmp
sub
notb
push
mov
or
or
cmp
mov
hlt
or
andl
cmp
push
enter
pop
push
jae
xchg
ja
pushf
mov
cmp
cmp
imul
test
pop
inc
mov
test
shl
cmp
lcall
test
test
xor
push
pusha
lea
enter
ds
sub
pop
jae
inc
and
lock
push
cmp
testl
pop
xchg
push
jo
inc
inc
xor
sbb
dec
push
ds
push
push
loop
and
sub
mov
mov
and
xchg
xor
fldcw
push
test
lret
movsl
sbb
inc
sbb
push
outsl
je
dec
mov
scas
mov
lcall
insb
dec
cmp
out
dec
cs
or
push
adc
pop
sahf
test
inc
or
repnz
adc
cld
dec
mov
lock
and
and
sub
sub
call
jno
in
or
mov
dec
pushf
or
popa
das
dec
js
push
mov
fldt
push
movl
pop
lcall
dec
cmp
adc
push
jge
adc
test
outsb
lods
mov
mov
sub
push
pushf
rolb
pusha
imul
mov
xlat
stos
addl
add
cmpl
loope
je
add
in
or
dec
push
cs
push
jmp
pushf
jmp
jo
inc
sub
fisttpll
jmp
jne
incl
leave
jbe
adc
add
mov
adc
aaa
xlat
dec
xor
nop
add
inc
cmp
enter
mov
je
rorb
mov
into
test
cmp
psubsw
loopne
sbb
stos
mov
inc
xchg
add
push
or
xchg
out
mov
add
push
sub
nop
fbld
xchg
push
ds
push
jo
nop
lds
xor
and
adc
jo
sub
sbbb
lret
or
push
xchg
out
adc
fdivrl
dec
imul
rcrl
push
add
stos
push
push
lea
dec
jl
dec
test
sub
adc
adc
mov
xchg
cmp
sbb
cli
lds
or
mov
test
push
pop
das
add
jb
rclb
lock
sahf
add
push
push
push
inc
or
popa
test
scas
lods
push
or
xor
jno
or
mov
lds
xchg
cmp
add
mov
imul
or
sub
movsb
out
and
int3
inc
orl
adc
stos
out
push
jne
jmp
or
or
pop
insl
sbb
cmp
es
adc
nop
xchg
mov
inc
js
add
int
xchg
loopne
mov
lods
orl
popf
inc
lods
cmp
inc
inc
jnp
push
divb
inc
sbb
inc
push
sub
xor
enter
sbb
dec
dec
daa
adc
aam
iret
mov
pop
lahf
add
pop
push
push
mov
iret
and
ds
pop
pop
sbb
cmp
fld
mov
sahf
mov
out
sbb
ds
cmpl
push
push
outsb
mov
mov
fdivr
sbb
arpl
xchg
lret
sub
mov
mov
pop
pushl
cmc
xchg
push
or
mov
xchg
shlb
adc
mov
sbb
adc
lock
xor
fwait
stos
push
movl
xchg
shrb
or
or
fdivl
and
ret
pop
loope
popf
aad
sbb
jne
and
cmpl
ret
adc
push
mov
sub
sub
mov
pusha
and
dec
les
mov
adc
or
sbb
subb
and
stos
insl
jmp
sub
and
jbe
xchg
sub
add
mov
jnp
cwtl
inc
inc
mov
mov
mov
push
adc
add
test
pop
data16
and
out
adcl
popf
sub
add
mov
push
jp
jmp
lret
icebp
or
mov
jno
and
or
or
sub
test
push
pop
mov
fwait
loop
mov
sub
inc
mov
and
or
xor
inc
sub
popa
insb
sub
ret
sbb
jl
mov
mov
enter
push
add
outsb
and
push
sub
mov
ret
jo
lock
imul
int3
add
ss
or
sub
movsb
sub
test
int3
lret
fadds
inc
sbbb
pop
insb
sub
cs
pop
push
mov
jno
add
sbb
sbb
sub
sub
push
sbb
jo
and
xchg
outsb
sub
test
adc
pushl
cmp
jp
adc
insl
jge
jae
push
sbb
push
and
sbb
or
test
mov
int
xchg
mov
xchg
add
inc
int3
pushf
sub
inc
in
adc
stos
ficoml
out
or
and
lock
dec
xchg
push
inc
ja
and
cli
jle
lahf
mov
add
pop
mov
loopne
push
dec
testl
cmp
popa
ds
andl
mov
test
cmp
sbb
arpl
test
push
push
push
mov
jo
stos
xor
xchg
pop
push
or
inc
and
loope
orb
and
lret
fldt
add
mov
stos
dec
test
pop
fsubs
add
insl
frstor
in
ds
arpl
push
pusha
pop
adc
jb
dec
je
dec
inc
jnp
jge
cwtl
cltd
push
sbb
dec
scas
adc
add
je
sbbb
shld
jbe
ret
les
jg
idivb
or
mov
loopne
mov
stos
gs
dec
cmpsb
and
sarb
loope
push
inc
and
outsl
pop
aad
stos
popa
pushf
movsb
jne
cs
xor
jne
mov
adc
enter
les
mov
out
inc
dec
js
jne
or
call
or
mov
pop
push
movsl
push
dec
sub
xor
mov
add
adc
or
sbb
xor
add
les
pop
sub
inc
xor
sbb
cmp
pusha
xlat
mov
mov
push
test
dec
aad
jae
aam
adc
stos
testb
sub
pop
popf
adcb
sub
mov
testb
pop
mov
inc
sub
daa
call
je
aas
add
pop
fimull
outsb
add
mov
push
xor
jo
and
addr16
jmp
adc
add
and
popa
push
and
xchg
or
pop
imul
push
outsl
movb
xor
popl
cmovb
or
fnstcw
adc
or
cmp
je
ss
jge
imul
mov
or
xchg
pop
dec
jle
adc
and
inc
std
dec
mov
add
or
lock
sbb
out
cmp
scas
and
push
ret
push
fiaddl
dec
test
xchg
push
pop
mov
xchg
inc
sbb
push
pop
xchg
mov
clc
out
or
push
fcmovb
add
push
jle
jl
inc
jo
pop
and
or
lcall
and
jle
or
mov
pop
outsb
cld
das
js
sbbl
jbe
jge
mov
add
mov
xor
and
xchg
cmp
nop
gs
pop
or
fldl
fstps
and
fstpl
insl
imul
add
int3
fisubrl
xor
xchg
les
sub
fsts
push
xchg
aas
imul
loop
pop
dec
aaa
mov
in
pop
inc
and
mov
mov
xor
add
arpl
mov
push
push
sub
aad
ja
daa
fidivs
inc
push
adc
fwait
add
jmp
iret
fidivrl
mov
and
mov
jge
das
inc
adc
inc
dec
inc
add
call
add
dec
pop
sbb
ss
jne
dec
adc
xchg
mov
nop
mov
xchg
insl
lock
adc
ret
mov
roll
jb
jp
jl
inc
or
ss
push
sbb
sub
jne
addb
and
mov
call
loope
adc
xchg
push
mov
xor
test
cmp
push
sbb
sbb
dec
mov
divl
pop
or
je
dec
test
test
or
push
or
ja
push
mov
jmp
inc
jle
mov
mov
fistpl
lds
xor
lea
add
fs
mov
mov
lods
je
ds
push
lods
dec
adcb
xchg
mov
mov
xor
jb
adc
xchg
lret
cs
je
mov
out
cwtl
mov
inc
divl
adc
movsb
jmp
sub
dec
mov
cmp
inc
out
push
mov
jmp
ljmp
ss
sahf
add
es
xchg
cltd
loopne
push
xchg
lods
cmp
mov
fwait
sub
addr16
movl
stos
mov
push
lcall
push
dec
sahf
arpl
adc
sarb
sub
or
jnp
and
push
fstl
adc
and
int3
loope
fdivrs
cmpsb
add
fs
xchg
jnp
mov
hlt
lea
fistpll
add
jp
xor
push
xchg
push
test
xadd
pop
pop
imul
imulb
mov
pop
arpl
xchg
pop
dec
fldt
insb
xor
jbe
js
das
sahf
push
scas
pop
out
ret
push
push
jne
push
loop
ds
enter
pop
pop
push
xlat
or
je
popa
call
fucomp
add
neg
xchg
push
dec
add
lods
fildll
fsubs
add
cwtl
in
or
inc
mov
cmpsl
xor
shlb
cmp
sbb
add
mov
adc
iret
mov
das
bound
mov
pusha
or
or
jmp
pop
mov
add
jge
scas
ljmp
adc
test
ljmp
nop
inc
or
adc
cs
or
adc
sbb
mov
shlb
imul
cmp
ss
mov
or
mov
inc
enter
inc
js
inc
fcoms
inc
lock
stc
fnstsw
scas
mov
inc
lret
cmc
push
aam
lock
or
fdivrs
push
add
push
out
or
push
outsb
mov
mov
fidivl
add
mov
cltd
hlt
dec
jne
addb
push
es
mov
jo
push
push
mov
call
or
ja
sub
and
add
or
test
bndldx
mov
and
adc
je
je
dec
cmc
or
add
js
sub
hlt
jecxz
imul
pop
push
cmp
push
addl
xchg
outsl
lahf
jne
ret
imul
mov
and
fldl
sub
aam
xor
test
xor
dec
xor
push
mov
jmp
lods
rclb
cmp
pop
imul
cld
mov
daa
pusha
xchg
mov
jo
sub
jo
or
mov
imul
sbb
jns
jbe
cmp
loop
push
xor
pop
mov
inc
cld
sub
adcl
andb
push
dec
xor
dec
jo
adc
and
push
js
int3
xchg
repz
mov
and
xchg
andb
inc
pop
pusha
test
loopne
or
mov
and
mov
aaa
incl
add
andb
out
cmp
mov
inc
add
shl
xchg
in
lret
mov
add
cmp
sbb
popf
lods
dec
or
lcall
ret
push
sub
inc
add
or
loop
sbb
insb
push
das
dec
sbb
fcmovnb
add
sbb
mov
sub
inc
mov
and
cpuid
xor
dec
in
xchg
mov
das
xchg
or
das
adc
push
fsubr
mov
lea
and
cmp
jmp
sbb
fstps
int3
mov
xchg
cwtl
cmp
jbe
cmp
mov
add
dec
inc
adc
mov
sbb
jecxz
shll
dec
lock
dec
adc
loopne
mov
pop
rcl
adc
arpl
cmpsl
out
adc
nop
rcr
push
sub
add
pusha
imul
dec
push
add
jg
or
push
fisttpll
cmp
jmp
dec
inc
lea
sbb
rcrb
sbb
pop
and
jne
sbb
jp
por
inc
adc
and
pop
lods
jo
loop
jo
push
inc
popf
push
jns
mov
jp
jg
xchg
xchg
pop
popf
push
cmpsl
jmp
inc
add
rolb
add
test
mov
adc
xchg
das
adc
inc
or
nop
mov
push
mov
ret
call
dec
subl
ret
jg
mov
lcall
mov
jne
sahf
mov
cmp
lock
fmul
mov
sbb
adc
dec
arpl
add
call
cmp
fs
jae
and
cld
jmp
sub
clc
cmp
test
jno
push
push
mov
xor
lea
jecxz
push
rolb
lahf
pusha
cld
adc
sbbl
js
sbb
jmp
aam
test
sub
adc
or
gs
sbb
rclb
sbb
mov
daa
sbb
jne
or
xchg
pusha
dec
jb
hlt
or
mov
push
inc
jne
dec
xchg
test
add
pop
scas
movsb
stos
sub
push
or
je
les
pusha
mov
sub
adc
dec
add
dec
push
addb
push
fs
and
std
lea
mov
mov
int
jns
and
aad
push
bound
psadbw
orb
xchg
or
fiaddl
lea
add
rorb
lret
fadd
inc
cmp
ficomps
into
popf
sbb
and
push
dec
dec
addl
stc
dec
pop
adc
mov
mov
or
inc
pop
pop
pop
xchg
lock
call
sub
mov
pop
call
rol
xchg
or
scas
jno
xchg
add
popf
or
pop
loop
and
push
mov
shl
inc
xchg
xchg
test
pusha
jg
call
imul
iret
cli
mov
add
push
shlb
or
mov
test
add
sbb
js
xchg
push
and
mov
xchg
cmpb
mov
inc
push
cmp
push
cmp
aad
mulb
pop
xor
jl
out
jbe
pop
xchg
sbb
sbb
lock
iret
sbb
pusha
and
mov
movsb
sub
cmc
mov
and
push
jmp
or
xchg
adc
push
in
push
ja
jmp
push
or
mov
xchg
dec
loopne
imul
push
mov
int
push
push
roll
es
pop
pop
add
nop
test
xchg
pop
int3
xor
sub
roll
sub
inc
inc
pushf
rolb
sub
sbb
push
mov
aas
fsubr
rcll
jb
test
enter
mov
in
cmp
dec
fsubrs
mov
in
bound
cmpb
mov
mov
pop
imul
in
rolb
xor
orl
aas
adc
and
sub
dec
inc
fsubp
shl
in
sbb
aas
in
daa
and
dec
imul
inc
test
sub
cmp
add
sbb
jg
mov
andb
movsl
adc
jg
pop
push
cld
jle
test
or
pop
bound
lock
decb
dec
movsb
lahf
in
outsl
test
mov
adc
ss
fstps
mov
and
ja
cmpl
mov
sbb
sbb
dec
dec
sarl
inc
lds
cwtl
cmp
in
in
in
inc
push
in
in
in
adc
mov
in
aad
mov
push
shlb
fnsave
mov
and
mov
js
xchg
lock
fcomps
inc
mov
pop
inc
cmp
xor
nop
inc
fisttps
lcall
mov
xor
shll
sbb
cmp
jo
add
pop
xchg
xchg
mov
xor
fimuls
in
nop
sbbl
in
sub
rorb
lahf
cmp
ficomps
pop
sub
fsubrl
pop
mov
dec
dec
and
test
push
dec
mov
faddp
mov
push
fdivrs
call
fbld
cmp
mov
cmp
inc
sub
dec
inc
dec
pop
in
mov
pop
leave
mov
push
pushf
nop
out
rcrb
pop
xor
sub
add
scas
mov
aam
cmp
mov
sahf
iret
lock
mov
fisttps
jg
jmp
scas
inc
dec
xchg
and
call
mov
mov
rclb
je
dec
adc
xchg
fnstenv
in
adc
pop
cltd
mov
xor
or
aas
dec
fimull
pop
loopne
inc
push
in
sub
mov
in
in
sarb
sbb
adc
std
call
lahf
js
insb
ret
adc
inc
jo
xchg
mov
mov
rcl
ret
fbstp
mov
lahf
adc
cmp
jge
adc
mov
stc
mov
mov
mov
outsl
mov
fcompl
sbb
aam
pandn
lds
loope
xlat
rorb
jo
scas
enter
cmp
inc
out
mov
cwtl
mov
out
pop
dec
es
push
call
adc
inc
mov
xchg
push
push
pop
iret
pop
nop
push
aad
push
mov
xchg
mov
sbbb
or
loope
das
sub
and
mov
aad
mov
imul
adc
xchg
sbb
sbbl
pusha
leave
in
push
lock
in
sub
and
sbb
in
push
dec
pop
jo
push
in
test
lods
rolb
mov
or
clc
outsl
jb
add
add
and
pop
jb
pop
dec
pusha
je
pop
jb
pushf
mov
xor
sbb
inc
cs
inc
jl
es
nop
test
stc
int3
test
movsb
push
ljmp
jb
push
es
mov
sbb
das
aas
aas
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
push
jo
stc
sbb
daa
insb
sub
xchg
inc
lcall
mov
and
jg
sti
test
cmp
or
xchg
pop
cltd
xor
iret
pop
call
bound
into
lahf
scas
aam
xchg
pop
fadds
or
outsl
mov
and
sbb
xchg
fmul
add
adcb
dec
add
lds
xlat
js
or
arpl
sahf
add
mov
bound
icebp
leave
inc
pop
je
and
outsl
fiaddl
xor
push
adc
xchg
xor
pop
fs
inc
call
cmp
xchg
push
push
mov
test
mov
inc
lahf
iret
add
push
loope
or
shlb
ss
rcll
or
aam
lahf
jae
cmp
xor
pop
mov
push
rorb
aas
cs
sbb
jge
mov
xor
notl
in
inc
subb
andl
inc
mov
mov
enter
mov
dec
fisubl
add
outsl
aas
out
push
clc
fwait
xor
push
and
pushf
aas
dec
mov
adc
mov
rcll
xchg
push
sub
insl
xor
mov
mov
dec
adc
out
push
sub
pop
arpl
flds
push
popf
inc
orb
js
into
jbe
popa
dec
in
jnp
mov
or
das
popa
or
insb
enter
sbb
xchg
jg
dec
mov
outsl
push
incl
lret
mov
inc
sub
dec
clc
ds
insb
popf
inc
and
inc
test
mov
imulb
xchg
les
ljmp
adc
sahf
pop
lock
movsb
add
js
imul
pop
jnp
jne
mov
xor
mov
or
andb
bound
pop
insb
aam
popa
insl
orb
lahf
rcl
push
ljmp
lcall
push
sti
sub
test
inc
nop
aas
lret
add
push
push
and
loopne
fisttps
mov
aas
fistps
fisubrs
sub
out
mov
jmp
and
fistpll
mov
jbe
and
lock
xchg
mov
adc
mov
cmpl
add
inc
insb
aad
pusha
pop
pop
adc
mov
addr16
insb
clc
mov
inc
daa
mov
mov
lods
add
cmp
mov
ss
sub
push
add
aas
xchg
dec
mov
mov
orb
movsl
pop
push
jg
aas
pop
sbb
push
pop
dec
inc
in
push
lahf
xchg
testb
sub
mov
pusha
cmpsb
aas
mov
sub
cmpsb
pop
fdivrs
cmp
call
js
mov
and
jnp
leave
enter
sar
sub
adc
call
rcrb
in
and
sti
inc
dec
sti
loope
cmp
sub
dec
cld
in
nop
xchg
adc
in
sub
fs
adc
sbb
scas
dec
cmpsb
sbb
nop
adc
test
sub
dec
subb
cmpb
inc
pop
push
xchg
test
sbb
in
in
data16
dec
add
mov
add
les
ffreep
rcrl
lock
cmp
add
nop
add
sbb
sub
push
movsb
loopne
mov
rcrl
pop
add
xchg
aaa
pop
in
push
rcrb
or
dec
add
cmpsl
test
sarb
test
fmuls
fsubr
leave
hlt
adc
push
push
sbb
or
or
pop
repz
stos
andl
sarb
mov
and
cmp
mov
and
mov
jno
xor
dec
pop
mov
xor
mov
push
ret
lock
inc
aas
push
nop
mov
xor
aas
xor
lock
and
bswap
adc
aam
std
rorb
pop
push
or
jg
adc
cmp
mov
pop
mov
cmp
sub
or
inc
and
mov
ds
sub
das
in
cmp
lds
mov
or
adc
xor
aam
sbb
inc
mov
xor
iret
cwtl
mov
mov
inc
mov
pop
aas
out
lret
leave
mov
push
mov
add
xchg
xchg
imul
mov
out
out
lock
xchg
loop
mov
mov
pop
push
and
fistps
outsl
sti
pop
insl
pop
adc
stos
movsb
popa
pop
in
andnps
rcll
shlb
clc
jg
cmp
sub
test
mov
or
fstpt
aas
mov
nop
les
ja
pop
pop
jle
mov
outsl
add
fbstp
mov
mov
cmp
mov
push
movsb
jne
xchg
arpl
sbbl
adc
in
incl
adc
adc
insb
pushl
mov
mov
mov
test
pop
rolb
pusha
jecxz
mov
shlb
call
es
adc
nop
nop
xchg
xchg
nop
fbld
mov
adc
push
mov
fcmovnbe
call
inc
roll
mov
jle
lock
mov
mov
sarl
aas
add
sub
push
imul
dec
js
test
push
dec
in
add
dec
jg
mov
sub
push
or
pop
mov
subb
push
jno
mov
mov
pusha
lods
push
fidivl
add
mov
sub
or
push
pop
fcoms
por
push
xchg
aas
ds
mov
call
vmovups
int3
xchg
add
cmp
aas
jo
sysexit
test
insl
cwtl
aas
movsb
leave
dec
sbb
pop
scas
mov
nop
pop
shr
cmp
movsl
inc
es
and
mov
or
adc
inc
push
ret
sub
fidivrl
fadds
dec
loopne
push
call
dec
pop
js
dec
add
jb
iret
mov
sub
jecxz
mov
sbbb
out
mov
test
adc
lahf
jo
push
jns
or
jg
mov
cmp
sub
xchg
mov
jecxz
pop
pop
fldl
pop
or
fisubs
cmp
or
pop
mov
xor
dec
das
loopne
pop
xor
or
call
fwait
sbb
loopne
lock
inc
movsb
adc
push
js
push
push
pop
push
add
ret
popf
lcall
pop
and
push
mov
xor
shrl
mov
mov
fistpll
dec
in
in
in
xchg
mov
inc
in
flds
dec
mov
mov
rolb
pusha
ror
fwait
call
pop
add
push
aas
pop
fadds
mov
and
dec
ljmp
call
andb
aas
repnz
add
xchg
sub
push
call
ret
loope
add
pop
pop
mov
lds
adc
and
xchg
xchg
xchg
mov
movsb
jge
js
fucomip
in
ss
enter
mov
insb
push
int3
push
mov
mov
cmp
jo
enter
dec
or
and
dec
adc
loopne
fwait
jg
mov
mov
arpl
push
or
push
popl
mov
lock
lock
or
and
sbb
push
dec
mov
and
add
test
and
or
add
or
mov
fimuls
sub
pop
jo
jmp
dec
cmpsl
enter
cmp
bound
leave
ja
push
ret
daa
push
nop
mov
dec
or
aas
xor
mov
adc
dec
pop
pop
enter
adc
pop
int3
out
popa
sbb
loopne
sbb
out
push
add
pop
lcall
das
pop
imul
sub
int3
iret
mov
pop
mov
int3
jg
out
ss
int3
jp
fsubl
xor
or
inc
pop
scas
inc
mov
jg
int
loopne
mov
dec
into
daa
pop
test
pop
mov
or
sub
cwtl
dec
add
test
and
dec
daa
adc
cmp
nop
sub
xchg
mov
push
xchg
imul
insb
or
daa
pop
call
inc
cmp
testb
daa
adc
inc
sar
cld
push
adc
adc
ret
std
bound
rcl
cmpsb
mov
mov
daa
repnz
and
ja
shll
push
pop
enter
sub
daa
inc
andb
pop
push
xchg
into
rclb
or
add
jb
lahf
jo
cwtl
rorb
xchg
xchg
ja
bound
iret
and
shll
inc
scas
call
in
push
repnz
or
fcom
or
aam
and
aam
push
cmp
dec
pusha
stos
dec
push
ja
aam
mov
xchg
add
fcom
daa
add
sub
xchg
pop
insl
push
push
daa
js
dec
scas
ljmp
insl
xchg
pushf
sbb
dec
scas
stos
stos
call
data16
and
cmp
lahf
push
xor
inc
fsubrs
in
out
pusha
inc
pop
dec
mov
xchg
cmp
mov
lock
xchg
std
iret
jne
fistps
out
and
daa
pusha
fnstenv
jg
jg
lret
mov
daa
insl
insb
addl
lock
and
fisubrl
aaa
sbb
movsb
shlb
nop
sub
xchg
push
loop
adc
enter
sbb
cwtl
push
sub
sbb
aaa
mov
movsb
lea
iret
in
mov
add
adc
js
sub
push
sbb
out
bound
pop
dec
fidivrs
daa
jne
fcmovb
xchg
daa
rcr
clc
movsl
ss
pop
push
ljmp
enter
das
dec
and
arpl
jo
in
cwtl
lcall
rcr
xchg
dec
repnz
inc
loopne
and
daa
test
rclb
lds
mov
cmpsl
and
sub
or
movsb
and
shlb
pop
adc
xlat
push
dec
loope
jecxz
xchg
outsl
test
popf
je
pop
out
mov
subb
in
and
cmp
inc
pop
scas
mov
cmp
inc
adc
lods
insb
pushf
xchg
push
inc
dec
adc
leave
dec
rolb
jge
xchg
mov
stc
data16
xor
insl
ficompl
ja
rorb
jb
mov
mov
enter
mov
fwait
cwtl
rclb
jne
dec
sub
nop
in
push
sbb
push
cmpsl
mov
lcall
lea
sub
out
mov
cwtl
lock
call
lahf
mov
mov
or
jmp
pop
dec
das
push
jmp
fdivs
jl
pminub
push
add
push
cld
or
push
mov
inc
push
bound
adc
jnp
add
pop
aam
push
ret
stos
out
sahf
out
nop
test
repz
add
enter
cmp
mov
nop
xchg
cmp
imul
push
add
add
jle
sahf
inc
push
xor
out
fidivrs
push
xor
inc
dec
push
sahf
out
sahf
bound
nop
pushf
mov
sahf
out
enter
add
sahf
out
push
cmp
pusha
jnp
out
jb
cwtl
movsb
adc
iret
repz
add
out
or
idivl
cmp
aam
scas
lahf
out
pop
add
and
inc
push
data16
cmp
imul
push
repz
add
add
or
pop
jle
mov
outsb
push
inc
xor
out
idivl
hlt
push
incb
int3
sahf
out
sahf
mov
outsb
jns
out
pop
dec
cmp
sbb
xor
out
add
add
cmp
mov
mov
push
sahf
ja
cmp
pop
ss
push
sub
repz
cli
imul
fadd
repz
repz
mov
out
lcall
or
repz
add
mul
sarb
cmp
mov
inc
out
iret
repz
and
data16
jnp
iret
clc
cmc
or
ljmp
iret
repz
lcall
repz
inc
cmp
out
lcall
mov
scas
xchg
jle
pop
dec
jl
out
cmp
sbb
repz
not
mov
lock
repz
shll
push
push
iret
xchg
sahf
cmpsl
stc
cmp
add
adc
inc
jns
out
push
data16
lcall
mov
or
repz
repz
adc
repz
adc
pop
adc
movsb
cmp
jnp
add
add
cmpsl
andb
icebp
sar
push
lcall
ljmp
out
sahf
xor
dec
pop
insb
test
out
xchg
stos
mov
int
lock
adc
xor
repz
dec
inc
xor
jge
testl
push
loop
sahf
out
sarb
sahf
sahf
out
js
xchg
push
decb
out
scas
insb
push
pop
push
dec
cmp
sbb
repz
cli
cli
call
iret
repz
iret
repz
xchg
push
inc
ss
clc
stc
in
jns
out
fmul
shlb
test
pop
int
jns
inc
xor
push
cli
clc
call
fmul
pop
push
push
jbe
repz
mov
sahf
out
ds
sub
dec
pop
jns
out
push
in
pop
ret
out
dec
adc
loop
lock
add
cld
or
mov
push
idivb
cmpsl
stc
add
adc
xor
jns
out
pop
js
cwtl
int
jns
scas
enter
or
iret
repz
xor
fs
repz
pushf
lods
shlb
clc
or
sahf
out
sahf
xor
data16
jge
out
pushf
mov
out
lcall
decb
sahf
out
sahf
inc
es
xchg
mov
mov
push
mov
mov
add
add
int
gs
add
cmp
repz
enter
push
repnz
jbe
push
sahf
push
mov
fiaddl
or
and
lahf
out
cmpsb
rolb
dec
cmp
xor
insb
movq
mov
jbe
inc
inc
add
shl
test
mov
pop
movsb
sbb
pusha
push
pop
xchg
aas
hlt
mov
es
push
mov
xor
iret
repz
scas
scas
mov
rcrl
jmp
add
out
adc
sahf
out
sbb
sbb
out
sahf
sbb
and
out
and
sahf
out
sub
sub
out
sahf
sub
xor
out
xor
sahf
out
cmp
cmp
out
sahf
cmp
inc
jns
out
inc
inc
inc
inc
inc
out
sahf
out
dec
dec
dec
dec
sahf
out
sahf
dec
dec
dec
push
push
push
jns
out
push
push
push
push
push
out
sahf
out
pop
pop
pop
pop
sahf
out
sahf
pop
pop
pop
pusha
popa
bound
out
arpl
out
sahf
out
cmpsl
mov
aad
sarl
testl
cmp
repz
pop
jae
repz
repz
scas
mov
ds
jmp
push
pop
xor
cmp
repz
pop
data16
iret
repz
cltd
stos
mov
aad
sahf
out
cmp
std
or
out
xor
inc
dec
push
out
sahf
out
outsw
js
sahf
out
sahf
mov
xor
out
shl
hlt
add
repz
push
pop
jb
repz
xchg
lcall
add
adc
out
and
inc
push
addr16
sahf
out
mov
ja
shl
add
gs
xor
jbe
adc
in
popa
jo
adc
fs
insb
sbb
call
inc
jb
popa
je
push
outsl
outsl
insb
push
xlat
add
js
push
outsl
arpl
jae
or
and
jb
sbb
insb
outsl
mov
fcomi
divb
xor
push
imul
pop
idivb
arpl
pusha
gs
outsl
outsb
je
inc
sub
ret
in
jp
pop
push
aam
jae
lods
lret
daa
cmp
sbb
lret
out
mov
gs
gs
push
popa
jb
insl
and
pop
or
outsl
fs
pop
xor
dec
lds
push
sbb
out
in
in
insb
gs
aam
bound
in
push
imul
jbe
jns
arpl
jns
je
ja
xor
lcall
jb
mov
sbb
insb
bound
mov
xor
lock
imul
xor
fiaddl
inc
outsl
xor
jne
mov
push
cld
stos
jp
addr16
gs
adc
sbb
or
shrl
mov
push
and
popa
fldt
jne
push
jne
cmp
sbb
idivl
nop
arpl
insb
aaa
fcompl
push
imul
jbe
in
outsl
rclb
ret
push
ret
into
enter
outsl
aaa
out
push
movhlps
adc
push
mov
inc
mov
add
dec
xor
cltd
xchg
aad
ret
jnp
gs
sub
push
outsb
insl
pop
sub
popa
in
leave
mov
cmp
cmp
jb
xchg
dec
ret
push
ret
negb
ljmp
sub
push
into
xor
mov
inc
cmp
inc
inc
xchg
clc
and
or
push
popa
imul
adc
dec
bound
test
loop
xor
fs
and
sbb
pop
pusha
sbb
dec
arpl
ficoml
or
sbb
sub
inc
sub
jbe
call
mov
ret
add
mov
imul
jo
iretw
popa
jp
jae
sub
mov
pop
in
and
pusha
adc
pusha
add
jb
fistpll
add
gs
outsl
or
pop
xorl
add
sarb
jae
inc
xor
dec
dec
aas
adcb
xchg
inc
loop
mov
dec
testl
std
add
xchg
pop
push
or
jo
add
movsb
inc
int3
inc
adc
mov
dec
xor
add
or
add
fdivs
sub
pop
xor
data16
xor
clc
pushl
cmp
cmp
cmp
ss
popa
data16
arpl
xor
sub
iret
mov
mov
lret
rol
cmpsl
mov
mov
jns
inc
adc
dec
jo
push
and
out
insb
ss
push
pusha
xor
push
inc
xor
mov
dec
mov
pop
inc
push
dec
push
ja
stc
sahf
push
xor
inc
push
push
imul
xchg
inc
push
mov
fidivrs
xor
xchg
pusha
outsl
cmpsl
divl
add
sahf
imul
rclb
cmp
cmpsb
inc
mov
push
pushw
shlb
push
push
loopne
sti
mov
ds
mov
cmp
xor
divl
ja
dec
lock
js
jo
push
xchg
in
div
inc
aaa
inc
inc
sub
xor
inc
add
xor
lret
mov
xor
add
jo
or
and
ret
mov
dec
mov
and
pusha
mov
mov
xor
cmp
ss
and
bound
adc
xor
in
add
mov
into
les
mov
mov
mov
add
mov
add
iret
pop
and
inc
push
inc
inc
es
inc
idiv
rolb
stos
inc
addb
cmp
mov
mov
add
mov
nop
test
cmpsl
inc
mov
push
les
sub
ret
xchg
adc
das
xor
or
shl
mov
mov
js
mov
arpl
sbb
andb
mov
lahf
pop
push
pop
dec
sbb
cmpb
fbstp
push
dec
inc
push
jmp
xlat
mov
mov
add
loopne
daa
sbbb
jmp
cmp
andb
sub
ja
nop
mov
inc
lcall
or
or
lahf
or
jmp
pusha
scas
cmp
jmp
sbb
notl
aas
adc
xchg
mov
mov
inc
imul
js
testb
mov
cmc
jmp
add
add
aam
ja
mov
sbb
daa
sbb
push
or
cli
cld
int
lods
inc
sub
clc
push
imul
cltd
sbb
aad
xorl
popa
bound
adc
mull
subl
test
inc
mov
sub
fcomip
add
adc
mov
roll
push
adc
or
add
add
sbb
insl
insb
loop
and
xchg
push
add
daa
clc
in
add
adc
inc
add
mov
fidivrs
push
push
push
lock
pusha
ljmp
inc
andb
inc
arpl
jae
data16
mov
js
inc
push
xchg
ret
notb
jb
fs
imul
std
data16
pop
imul
je
jo
das
das
ja
cs
mov
loope
data16
jp
arpl
das
aas
jns
fs
pop
dec
push
dec
jae
push
push
outsb
and
mov
nop
cmp
pop
fdivrl
jge
call
push
lock
decl
add
dec
push
push
js
push
adc
mov
outsb
outsb
outsl
and
pop
and
and
inc
dec
push
and
std
outsl
pop
shrb
or
mov
pop
inc
roll
push
test
cli
mov
clc
dec
sbb
ds
jle
int
push
sti
push
inc
shl
ja
es
dec
jnp
push
push
push
imul
aad
push
rorb
cli
lret
rcll
jp
or
pop
or
adc
push
fmul
daa
mov
pop
jns
or
add
nop/reserved
mov
add
prefetchwt1
les
mov
ret
push
out
pusha
and
or
sub
insb
mov
call
test
adc
dec
pusha
jb,pn
popa
test
mull
dec
out
inc
cs
inc
jb
mov
sub
dec
or
mov
add
arpl
xlat
inc
inc
or
dec
mov
outsl
push
nop
lahf
push
push
inc
int3
rorb
inc
pop
sbb
mov
push
cmp
decl
pminsw
inc
dec
mov
jne
mov
sub
and
fstl
push
sahf
xchg
jns
sbb
sbb
call
adc
or
inc
add
push
push
xor
int
mov
sahf
sub
cmp
adc
adc
inc
les
call
xor
sub
sub
jae
push
mulb
and
xchg
xor
xor
mov
and
jl
adcb
adc
cmp
aas
fwait
cmp
repz
jmp
bound
call
push
rcr
add
sub
add
cs
jb
enter
push
daa
aas
enter
pop
in
je
and
fcomps
aam
out
mov
test
popaw
cmp
push
mov
adc
or
sbb
sub
xchg
test
cld
cmp
imul
fisubs
and
xor
cmp
push
sub
or
ss
mov
xchg
add
dec
inc
jns
pop
dec
ret
inc
inc
sbb
mov
jae
scas
insl
mov
mov
add
push
test
dec
ja
fildl
xchg
insb
xchg
nop
xchg
xchg
pusha
rol
jo
xchg
fs
or
pop
rorl
jne
cwtl
and
jne
vpunpcklqdq
int3
push
cmp
pop
adc
lahf
and
push
sub
inc
adc
clc
mov
inc
mov
add
xor
aas
insb
loope
gs
add
insb
mov
mov
adc
push
inc
pop
inc
shld
iret
jnp
dec
pop
push
xor
lcall
sub
add
insb
adc
dec
sahf
dec
adc
push
push
dec
mov
dec
mov
push
cmp
sbb
cltd
testb
pop
orb
daa
and
rcrb
pop
and
xor
lods
add
gs
ret
adc
outsb
imul
add
insb
cmpl
clc
popa
fs
jae
imul
aaa
pop
inc
jo
pop
arpl
rcrb
insb
dec
insb
outsl
and
arpl
pop
push
loop
inc
lods
inc
push
aaa
xor
imul
mov
bound
outsl
outsb
dec
mov
test
inc
inc
loop
clc
imul
es
xchg
les
dec
inc
dec
hlt
add
clc
sbb
mov
push
das
popa
orb
adc
and
jns
inc
outsl
add
push
sahf
addb
adc
or
enter
add
pop
pop
pop
and
xchg
xor
pop
lock
dec
push
pop
inc
jae
int
inc
mov
movsl
cli
add
add
outsb
add
loope
in
push
lock
popa
add
imul
push
push
sub
and
add
cmp
cmpsl
cli
sbb
add
add
pop
out
jge
mov
cmp
insb
ds
adc
pop
jnp
insb
imul
inc
pop
daa
mov
and
outsl
sbb
push
insl
bound
idivb
jae
jne
arpl
and
cmp
dec
es
mov
jp
inc
adc
negl
xlat
jo
je
push
jecxz
push
out
mov
dec
je
out
pop
jb
jbe
sub
insl
lahf
jbe
outsl
jo
mov
add
pop
adcl
sub
pop
pop
jo
inc
jbe
fs
ja
mov
andb
rep
dec
adc
xchg
sti
lock
jae
jb
gs
adc
adc
fwait
inc
pop
test
outsl
repz
mov
jae
sbb
lret
jno
lds
daa
out
insb
pop
fcomi
es
jle
push
outsl
pusha
dec
push
rcrl
push
or
adc
or
add
jmp
dec
mov
xorl
cmpsl
mov
xor
inc
xchg
pop
sbb
or
adc
mov
mov
in
xor
pop
data16
rorl
push
arpl
pop
inc
mov
mov
xchg
sub
arpl
cmp
scas
out
add
out
ret
ret
inc
pop
lret
popa
scas
arpl
rol
xor
mov
adc
push
jnp
out
outsb
clc
pop
outsb
jns
shrl
mov
je,pt
jae
shll
cmp
dec
rorl
add
sub
arpl
subl
fs
pop
dec
insb
jne
stos
push
notb
sahf
aaa
lock
sahf
push
arpl
cmp
mov
aaa
xor
pop
fisubrs
out
bound
mov
and
sbb
shll
add
daa
pop
push
pop
jno
fistpl
or
xor
jae
das
or
mov
out
shlb
sbb
jo
jg
les
xor
test
adc
xor
xor
and
in
xor
xor
cmp
inc
xor
push
xor
data16
jge
xor
pushf
movsb
lods
xor
inc
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
scas
jns
pushl
test
xchg
xor
xor
xor
sbb
inc
add
lock
xor
push
xor
mov
add
sarb
rol
shll
call
mov
mov
mov
in
and
ror
iret
mov
cld
mov
ja
fisttpl
mov
rol
popa
mov
clc
aad
daa
and
clc
loop
jmp
daa
and
out
adc
leave
mov
mov
shrl
iret
ljmp
mov
mull
push
jg
pop
xor
cmp
mov
rcrb
in
ljmp
mov
cs
mov
adc
in
popa
jg
sbb
cmp
out
arpl
push
arpl
jo
insl
adc
aaa
xor
popa
daa
push
fimuls
mov
outsb
sbb
add
mov
cs
movsb
xor
xor
hlt
aam
ror
idivb
sbb
sbb
mov
mov
shl
shl
sarl
mov
mov
rcr
mov
shl
pop
test
sub
ret
aam
xlat
cmp
rcl
and
adc
mov
loop
roll
push
lock
fcmovbe
xchg
pop
orl
arpl
je
inc
call
das
add
jo
xor
data16
push
test
jbe
jb
jbe
testb
nop
cmp
or
leave
jo
daa
mov
push
test
pusha
add
or
jecxz
incl
push
imul
lods
popa
mov
inc
cmp
daa
xor
push
or
mov
adc
sbb
xchg
js
add
insl
or
pop
add
pop
or
xchg
insb
insb
sub
adc
lea
mov
notb
pusha
mov
rdpmc
pop
leave
sub
xor
xor
test
add
in
sub
sahf
insb
lcall
xor
ss
sub
xchg
repnz
lods
push
jne
or
mov
adc
shl
xor
daa
andb
inc
sarb
sbbl
sbb
call
insb
sbb
inc
or
adc
jno
jle
into
dec
jbe
fiadds
sbb
lds
imul
and
dec
xchg
push
frstpm(287
mov
push
orb
xchg
adc
inc
mov
fsubs
testl
ds
leave
and
fdivp
add
inc
fsubr
outsb
adc
ret
mov
cli
pop
fmuls
dec
inc
add
and
push
daa
jno
push
enter
and
mov
in
pushf
jne
lret
push
cmpsl
inc
jne
adc
out
int3
fldt
adc
add
push
and
roll
cmc
and
or
loope
push
sub
or
inc
xchg
or
aas
test
jle
mov
and
push
scas
add
dec
add
xor
jb
jecxz
cmpsl
push
pop
and
pop
cmp
mov
inc
dec
incl
jge
enter
iret
sub
iret
cmp
mov
xor
lret
push
addl
btr
mov
or
pop
xchg
mov
mov
int
cld
mov
cmp
cmpsl
loopne
mov
aaa
ljmp
test
sub
popaw
inc
jo
cmp
pusha
xor
cld
jbe
rcll
add
in
add
shlb
cmp
sbb
fistps
movsl
xor
fs
ja
sbb
int
insb
sub
push
jmp
or
sbb
or
and
mov
mov
mov
adc
or
sbb
mov
loope
push
and
adcb
push
inc
popa
or
cmp
adc
clc
enter
mov
push
pop
adc
xor
xchg
movsl
xchg
jl
loope
adc
int
pop
sbb
in
sti
and
fisubrl
imul
or
and
push
fimull
cmp
cltd
add
adc
mov
mov
adc
dec
movsl
adc
add
mov
call
mov
std
push
mov
dec
orb
cmpsb
cmp
xlat
and
adc
jbe
sahf
inc
out
jo
inc
imul
fsubr
or
test
xchg
stos
test
in
adc
cmp
fdivl
aam
fadds
mov
cld
mov
and
push
xor
fcompl
mov
mov
rorb
dec
mov
movl
and
jmp
sub
mov
out
add
xchg
stc
lods
push
dec
sbbl
push
into
test
imul
or
cmp
loopne
cmp
mov
cmp
jns
stc
icebp
sub
sbb
push
xor
movsl
sti
fs
xor
enter
scas
push
mov
ja
adc
loop
or
inc
cmp
and
jbe
data16
bound
nop
shlb
push
test
rcll
fdiv
mov
mov
mov
pop
xchg
fsqrt
cwtl
push
push
cmp
and
adc
jnp
xor
lods
subb
mov
sub
cmp
mov
adc
mov
pop
pop
daa
call
notb
testb
ret
call
inc
pop
shl
or
orl
xchg
lret
cmpsb
xor
pop
mov
sbb
pop
js
push
add
aaa
add
xchg
test
or
mov
sub
sub
inc
jne
xchg
fs
ret
fists
out
add
pushf
rorl
add
daa
iret
mov
call
push
add
movl
nop
sub
fucomip
outsb
jae
fists
test
xchg
mov
subl
add
mov
in
loopne
and
or
ret
in
and
out
mov
jb
fisttps
add
jp
adc
cmpl
mov
and
in
jno
xor
sahf
xor
or
pop
in
cwtl
insb
ss
jns
dec
popa
lret
addr16
and
outsb
shll
sub
jmp
push
push
mov
mov
sub
out
add
add
mov
xchg
in
mov
xor
mov
push
loope
dec
movsb
jo
mov
adc
cmpsb
mov
inc
dec
loope
pop
in
lods
push
or
push
daa
pop
loop
fisubl
cwtl
inc
adc
push
ss
cmp
xor
pop
mov
and
push
scas
add
dec
mov
xchg
inc
xor
jo
loopne
jmp
add
mov
push
ficoml
repz
sub
xor
test
push
jno
lret
push
js
jmp
inc
cmp
daa
pop
and
inc
enter
push
xor
es
xchg
repz
test
pop
mov
or
pushf
call
or
dec
push
in
mov
dec
mull
push
enter
jbe
stos
lock
and
mov
fs
sahf
xchg
sub
popa
push
jb
push
popa
push
fwait
mov
popf
and
loope
or
clc
dec
pushf
dec
push
or
xlat
sbb
nop
xchg
in
dec
and
dec
dec
test
aam
mov
dec
repnz
test
loop
addr16
lock
inc
es
dec
call
xor
mov
mov
and
nop
inc
adc
jecxz
orl
adc
inc
leave
jmp
out
push
leave
mov
lods
call
or
jecxz
adc
dec
insl
dec
dec
adc
xor
jecxz
mov
inc
cmp
sbb
hlt
movsl
push
out
xor
jns
inc
lea
jnp
hlt
xlat
inc
fwait
push
call
mov
pop
scas
push
cmpsl
movsl
push
mov
es
and
mov
subb
mov
pop
cwtl
jne
xorl
dec
dec
enter
inc
imul
dec
push
sti
fs
rorb
and
xorb
mov
enter
or
inc
pmulhuw
and
inc
test
sbb
xchg
sub
rcrb
sti
inc
mov
sub
pop
lahf
jno
xchg
and
adc
fs
push
ret
add
mov
inc
dec
loope
flds
dec
add
out
cmp
pop
dec
fcoms
sbb
in
cld
jno
in
cs
clc
add
pop
cmp
je
push
inc
or
inc
loopne
inc
sub
lret
sti
add
fs
dec
xor
nop
xchg
add
das
enter
and
hlt
cmp
or
jns
jmp
sbb
inc
inc
adc
sbbl
pop
jnp
cld
push
dec
push
and
or
inc
inc
fimuls
push
in
and
in
data16
pop
xchg
xchg
sti
cltd
pop
and
mov
inc
xchg
ljmp
jae
sub
jecxz
int3
lahf
xchg
inc
pushf
xchg
in
scas
jnp
xchg
xchg
rolb
daa
call
loopne
pop
sbb
mov
mov
push
cld
cld
mov
loope
mov
pusha
out
scas
add
add
js
arpl
add
jecxz
jnp
or
sarb
cmpsl
inc
popa
aad
andb
push
in
jbe
push
jns
hlt
push
pop
hlt
test
sbb
inc
jns
xor
dec
cmpsb
dec
imul
inc
adc
leave
dec
lret
xchg
mov
jbe
xor
xchg
lock
inc
cmpsl
and
call
in
enter
inc
dec
lds
mov
or
xchg
pushf
ds
mov
daa
fs
icebp
push
ss
hlt
dec
xor
push
sarb
inc
mov
add
jo
push
cmpl
enter
movl
add
ds
inc
es
sub
cmp
das
adc
add
jmp
ds
ds
cs
or
add
cmpb
and
sub
jmp
test
in
and
icebp
scas
push
insb
adc
insb
xor
insl
push
pop
cmp
mov
sbb
adc
repnz
pop
clc
inc
lcall
sub
cltd
lods
adc
pop
rorb
dec
shrl
or
add
into
xchg
orl
leave
mov
mov
adc
mov
std
xchg
mov
xchg
lret
pop
orl
add
orl
ret
add
je
lret
push
xchg
push
ret
mov
aas
sbb
mov
cmp
hlt
mov
push
dec
adc
in
cmp
aas
lock
sbb
mov
adc
push
lods
int3
rcll
dec
lea
enter
cmp
clc
xor
cltd
rcll
jmp
clc
setge
ficomps
das
push
scas
dec
or
adcb
adc
in
cld
push
add
out
cmp
mov
push
movsl
add
cmp
inc
call
xchg
add
cmp
dec
add
or
sub
test
jne
mov
push
loope
mov
pop
pop
push
arpl
pop
popa
inc
sub
pop
cwtl
xchg
xor
cmp
fwait
add
xor
out
and
pop
jns
inc
add
out
dec
mov
lcall
add
out
mov
pop
pusha
and
sbb
aaa
rorl
or
pushf
xor
das
ds
push
push
pop
add
cmp
sub
adc
adc
push
xchg
out
jo
dec
mov
js
in
icebp
cmp
lcall
pop
rcll
mov
mov
push
imull
loope
mov
repz
mov
shll
hlt
call
addb
js
rorl
sbb
ret
iret
aaa
repz
fchs
push
adc
pop
push
add
fcompl
and
mov
push
add
push
ret
aaa
roll
sbb
cld
push
imul
sub
outsb
add
cmpsb
sbb
cmp
ffree
jmp
add
sbb
or
das
and
and
pop
jg
std
fsubrl
or
int
or
cmp
push
push
insb
roll
push
imul
and
lock
aaa
inc
or
fldl
or
mov
pushf
inc
cs
push
shrl
rol
sbb
add
mov
and
sub
roll
int3
jmp
jns
insb
aam
xor
sbb
js
pop
ret
test
mov
leave
mov
or
pop
xchg
addr16
push
xor
add
addr16
push
or
add
sbb
sub
shl
imul
rcrl
pusha
and
jb
jge
call
ds
push
roll
push
push
xor
lret
mov
repnz
push
clc
data16
xchg
lock
push
add
dec
test
adc
aam
sarl
and
push
orb
rorb
and
xor
push
or
aaa
inc
add
mov
std
or
repz
xchg
add
xor
in
testl
shrl
dec
mov
jo
jle
shrl
sub
mov
dec
pop
cmp
rorl
adc
lods
loope
sbb
xchg
adc
sbb
pop
mov
push
xlat
xor
push
outsb
inc
and
mov
add
inc
sahf
sub
xchg
mov
adcl
push
sbbb
xor
rol
flds
mov
jb
add
and
push
sub
inc
repnz
shlb
or
sbb
add
dec
push
in
xchg
leave
mov
addb
pusha
loope
shrl
movsb
push
jl
insb
push
pop
test
shr
rcrb
sbb
inc
add
xchg
dec
xor
dec
fdivs
daa
mov
das
xchg
add
and
xlat
and
mov
inc
in
and
or
pop
das
mov
dec
pop
inc
pop
and
cmpsb
imul
xor
dec
insb
and
das
add
cs
dec
pop
xchg
out
adc
test
or
roll
cmp
or
jae
push
rorl
les
lock
stc
es
pop
loopne
fcoml
xchg
jae
and
adc
jne
adc
loope
xchg
lret
sub
pop
mov
icebp
sbb
adc
insb
xchg
lods
mov
push
scas
xor
ss
loope
inc
test
and
arpl
mov
mov
sub
or
leave
or
sub
jnp
inc
scas
sub
sub
imul
mov
mov
and
pop
cmp
push
and
adc
in
jo
addr16
and
flds
pop
or
cmp
or
inc
and
and
shll
push
and
add
sbb
mov
dec
push
out
sub
inc
and
xchg
mov
push
and
add
jecxz
loope
test
inc
dec
jb
jl
or
xor
pop
pop
jo
inc
and
jo
and
mov
and
outsb
or
dec
xchg
jo
inc
mov
out
inc
and
lds
and
pusha
or
dec
iret
ds
inc
mov
and
fldenv
or
jo
mov
add
leave
mov
dec
xor
into
xor
xor
pop
jo
and
clc
push
enter
test
in
test
adc
push
add
popa
enter
and
out
xor
sbb
daa
dec
adc
rol
enter
sbb
mov
popa
into
faddl
lds
insb
sub
sub
nop
jnp
inc
or
and
pop
mov
inc
fcomps
and
sbb
sbb
xchg
popl
out
mov
and
mov
cmp
and
mov
and
push
and
or
push
and
jmp
or
sbb
add
sbb
mov
dec
add
push
and
cmpsl
scas
or
xor
cld
xchg
xchg
or
xchg
push
jo
add
sub
or
mov
dec
xor
or
cmpsb
jecxz
and
or
xor
fmul
and
icebp
mov
pop
inc
and
pusha
mov
jo
and
push
xchg
orl
dec
and
sbb
mov
and
in
lods
fisubs
leave
and
jo
fwait
and
sbb
addb
jg
push
and
sbb
inc
das
or
sbb
add
loopne
jg
pop
les
and
add
xor
movsb
xor
xor
scas
inc
es
xor
jb
xor
add
mov
les
in
and
sub
xchg
sbbl
dec
addb
daa
jmp
aaa
addl
push
lds
out
sbb
mov
shl
lds
push
enter
sbb
in
lcall
movsb
addr16
mov
pop
test
inc
and
and
and
sub
sbb
loop
loopne
xchg
inc
and
mov
outsl
lcall
adcb
ja
pop
adc
and
aas
fcomip
sub
add
nop
add
mov
add
pop
icebp
ficomps
test
pop
cmp
rcrl
lods
test
and
mov
repnz
and
enter
pop
cmp
xor
sbb
rorb
iret
dec
push
loopne
fldl
roll
add
addl
data16
cmpsl
push
mov
mov
aaa
adc
jno
ss
or
add
lea
movsb
and
cld
orb
add
in
sbb
fs
add
test
sub
shll
dec
in
cmp
mov
push
and
sbb
js
inc
and
cmpsb
sbb
push
and
test
imul
addb
sub
add
jne
clc
pop
aad
mov
leave
inc
and
or
cld
inc
and
hlt
call
xchg
xchg
inc
gs
aam
movsb
cmp
cmp
rcl
test
sbb
lahf
add
ret
or
in
push
push
fcomps
add
test
lea
imul
adcb
imul
add
cmp
cmp
push
in
cmp
ret
xlat
andl
faddp
inc
push
flds
pop
mov
jb
dec
shrl
adc
call
scas
pusha
fistl
add
pusha
add
or
and
je
insb
pop
lds
mov
subl
xor
xchg
adc
push
or
addb
push
movsb
add
or
xchg
sar
sub
add
scas
mov
adc
adc
push
and
jo
and
movsl
xor
mov
cmp
cmp
jo
push
sub
adc
sbb
and
and
and
or
and
jo
and
inc
cli
push
and
inc
mov
add
movsb
pop
xor
sub
inc
mov
or
and
push
adc
xorb
adc
or
pop
ret
jo
adc
mov
cmp
testl
adc
test
jb
cltd
jg
inc
ret
outsl
dec
mov
or
inc
and
cmp
adc
sub
adc
xlat
push
and
mov
in
leave
orb
mov
adc
sub
loope
adc
adcl
or
sub
and
orl
and
and
or
addr16
unpckhps
xchg
or
mov
cmp
pop
mov
adcl
hlt
inc
push
xor
xchg
in
rcll
andl
sub
inc
push
xchg
xor
or
xchg
inc
or
aaa
and
inc
push
dec
shrl
mov
or
xchg
add
xchg
jl
xor
sub
ret
pusha
scas
push
repnz
btr
or
mov
dec
fists
or
pusha
addl
dec
push
enter
xor
adc
push
and
stc
arpl
andl
cld
rolb
and
or
adc
ret
adc
and
add
pop
ud0
sub
sub
popf
and
insl
out
and
sub
sbb
xchg
and
jmp
pop
in
insl
testb
or
arpl
push
outsb
sub
movsl
xor
adc
and
inc
mov
sbb
or
and
pop
adc
push
and
mov
nop
test
pop
in
dec
push
enter
pop
lea
and
and
in
repz
rcll
pusha
and
movsb
cmp
add
inc
mov
and
cmp
outsl
mov
movsl
push
dec
push
add
and
adc
fmuls
pop
hlt
imul
sub
fs
or
and
xchg
pavgb
enter
cmpsb
xor
nop
add
test
outsl
add
rcrl
jl
adc
inc
popa
push
jecxz
adc
push
dec
mov
adcb
shlb
aad
lods
push
and
addl
and
add
sti
cld
addb
test
add
inc
xchg
add
mov
pop
adc
mov
mov
imul
jmp
nop
add
das
inc
and
roll
loopne
cltd
xchg
cmpb
pop
cltd
add
lds
or
sbbb
pop
add
xchg
sbb
cld
xchg
std
sbb
xchg
in
neg
push
popa
cli
jmp
dec
cmp
ffreep
dec
adc
mov
and
dec
pop
dec
clc
xchg
add
loopne
add
andl
and
inc
inc
add
pop
and
rol
xchg
mov
addl
add
add
jp
add
les
popf
push
sub
push
or
mov
frstor
add
inc
sub
mov
and
cmp
sbb
lock
sub
cmpsb
jmp
push
stos
jbe
mov
mov
filds
and
add
or
adc
jb
mov
add
sbb
ret
call
xchg
lods
call
ret
lods
push
aas
cmp
push
inc
je
add
pop
push
insb
pop
out
sub
jp
or
movsb
cmp
movsl
sub
dec
or
aam
pop
cs
enter
in
xor
mov
sbb
lcall
out
cmp
xchg
push
xchg
test
adc
push
cmc
mov
push
push
sbbb
test
and
jbe
mov
or
mov
inc
jle
dec
cmp
test
les
gs
or
test
mov
outsl
out
addb
sbb
xchg
jo
loopne
and
or
sbb
mov
mov
jo
adc
call
or
jmp
sub
sbb
xchg
js
or
pop
mov
jo
shrb
sub
icebp
test
jnp
dec
shl
jecxz
dec
push
rcl
call
push
adc
mov
add
fcomps
movl
xchg
adc
lcall
lcall
add
xchg
xchg
mov
or
dec
push
pushf
and
adc
inc
inc
dec
inc
mov
test
add
filds
or
and
shrl
les
inc
push
ret
add
or
sbb
cmpsl
xchg
adc
enter
add
add
pop
and
inc
add
lret
dec
dec
jo
call
add
fisubrs
shrl
sbb
xor
xlat
lock
xor
push
mov
nop
aam
sahf
fsubr
call
add
xchg
push
cmpsb
add
sbb
stos
adc
or
imul
stos
inc
inc
or
rorl
and
inc
pop
xchg
sub
push
xchg
sub
inc
dec
xchg
and
push
add
add
pop
and
sub
cmp
adc
mov
xor
add
push
inc
pop
push
subb
lock
push
popf
cmp
in
shll
mov
rorl
rcll
lcall
loope
add
mov
shll
loope
add
faddp
and
cwtl
and
jne
adc
mov
lods
fs
std
adc
cmp
and
xchg
or
hlt
sbb
add
and
push
ret
outsb
xchg
outsl
hlt
mov
jo
mov
sbb
cltd
and
sbb
xlat
and
shl
jne
adc
pop
loope
and
pushf
gs
loop
mov
push
push
ret
add
call
dec
ret
out
and
lock
add
pop
xor
inc
jecxz
sub
dec
rolb
pop
jmp
std
sub
push
scas
insb
inc
call
sbb
test
cwtl
push
sbb
xorb
and
cmpsb
adc
xchg
lods
and
mov
xor
or
test
jmp
jbe
lret
lea
mov
popf
dec
call
mov
and
cmp
dec
sbb
mov
cmpsb
rorb
mov
sbb
adc
jns
mov
fsubrs
adc
dec
xchg
das
pop
jo
sub
test
jbe
bound
add
push
pop
xor
xchg
popa
sbb
rorb
insb
popf
dec
pop
enter
push
rcrb
fwait
jo
adc
arpl
sbbb
push
rcll
or
pop
push
mov
cmp
pop
popf
xchg
add
cwtl
and
ljmp
mov
lods
xchg
push
ret
xor
or
lock
xchg
js
adc
add
insb
and
pop
push
jp
jnp
inc
jo
mov
shrl
adc
shlb
jg
daa
clc
inc
or
pop
xor
xchg
mov
sbb
mov
loope
push
imul
add
jo
xchg
inc
xchg
loope
mov
adc
mov
or
sub
imul
test
push
loope
loopne
adcb
inc
test
and
jae
dec
dec
and
xchg
lock
loop
test
and
ret
inc
xchg
loope
add
rclb
xor
xchg
test
loope
rclb
rclb
cmpsl
and
loopne
ljmp
loopne
sub
dec
sbb
loope
xchg
add
mov
sbb
faddl
sbbl
sub
ficoms
rorl
sbb
daa
lcall
in
push
mov
or
push
pop
loope
and
cmp
sub
faddl
dec
dec
loope
das
pop
andl
call
test
enter
sbb
or
out
rclb
push
push
cs
testb
sbb
loope
pop
adc
inc
loope
cmpb
enter
sarb
xchg
test
xchg
xchg
test
push
sahf
loope
xchg
jo
dec
lods
pop
adc
stos
loope
dec
dec
sbb
push
imul
imul
sub
popa
sbb
or
dec
push
int
dec
dec
ret
xchg
add
mov
and
add
outsb
loopne
loope
add
sub
aaa
cli
loope
dec
ret
and
and
or
jl
mov
mov
cmp
adc
in
mov
push
movsl
and
xchg
xchg
test
xchg
xchg
test
lea
lret
push
jbe
xchg
jo
mov
jo
loope
add
inc
sub
adc
loope
dec
pop
pop
icebp
inc
dec
sbb
add
loope
sub
pop
adc
int
movsl
and
dec
dec
adcb
pop
adc
add
stc
add
add
es
ret
and
xchg
xlat
or
push
xchg
andl
popf
rclb
inc
inc
popa
mov
dec
call
nop
out
je
sbb
test
smsw
sbb
push
adc
add
xor
testb
sub
push
mov
mov
dec
and
sarl
sub
adc
xchg
roll
shl
mov
xchg
and
out
push
gs
rcrl
push
ja
pop
adc
movsl
jp
stos
sub
rorl
movsb
xchg
inc
in
push
inc
jne
sub
sbb
or
adc
and
and
lcall
jae
sbb
jnp
cmp
mov
pusha
jbe
add
scas
sub
xor
int
jns
xchg
pop
scas
xor
xchg
cld
push
xchg
test
push
shrl
loopne
cmp
xchg
adc
cmp
lret
jno
iret
add
pop
adc
repnz
leave
sub
leave
add
sub
sti
lahf
stos
mov
fdivrl
inc
xor
rorl
adc
shrl
pop
mov
pop
enter
and
adcl
jle
cmp
les
mov
push
and
xchg
loopne
or
xchg
push
and
cmp
hlt
inc
out
and
test
and
mov
pop
ret
test
mov
mov
rcrb
mov
negb
adc
test
mov
add
adc
inc
mov
daa
add
lods
and
in
dec
push
fwait
xchg
fcom
fildll
aas
pop
mov
dec
pop
and
and
cmp
cltd
add
mov
add
dec
andb
inc
nop
add
cs
push
inc
push
inc
test
cmpsb
pop
push
inc
inc
sbbb
cmpsb
or
ret
jmp
jg
ret
add
fmuls
sub
jle
sbb
push
add
xchg
inc
add
adc
inc
push
nop
test
adcl
inc
jae
dec
sbb
fsts
push
into
sbb
xor
dec
ret
inc
sub
pop
or
inc
xchg
dec
loop
inc
adc
mov
ret
aas
mov
push
sub
inc
popa
pop
outsb
dec
push
call
push
inc
outsb
sub
dec
inc
inc
pop
push
inc
adc
inc
add
inc
sbb
dec
addb
and
lea
add
inc
dec
ret
mov
sahf
push
mov
out
sbb
test
or
mov
orl
sub
mov
xor
pop
and
andl
and
mul
mov
popf
cmp
and
cld
and
fcompl
sbb
inc
add
andb
adc
mov
pop
ss
je
mov
andb
addl
xor
mov
cwtl
add
dec
test
jg
pop
and
sbb
int3
add
adc
orl
mov
xchg
mov
or
enter
add
pop
enter
sub
or
cmpsl
loope
mov
add
vpsubusb
mov
pop
and
mov
loope
mov
js
mov
jno
mov
movsl
in
jmp
aad
dec
mov
andb
dec
push
sbb
jmp
dec
mov
bound
addr16
das
cmp
mov
and
andb
sbb
fmull
jmp
adc
pop
dec
aas
push
ljmp
and
pusha
loopne
and
mov
and
dec
les
cmp
push
xor
mov
dec
loop
stos
add
je
adc
sbb
mov
xchg
xchg
jo
push
dec
xchg
and
adc
das
mov
loopne
mov
dec
ret
mov
dec
mov
mov
inc
mov
loopne
and
loopne
and
and
or
pop
ss
jo
cmp
loopne
adc
rol
cmp
or
pushw
or
sbb
sub
add
popa
and
popa
aas
inc
or
test
inc
inc
add
xor
cwtl
mov
cmp
adc
dec
out
jle
and
aaa
je
imul
inc
mov
in
andb
in
sbb
jne
pop
jo
adc
lds
dec
mov
push
inc
or
call
andb
xor
pusha
das
test
mov
sarb
mov
mov
dec
ret
cld
and
and
sbb
adc
jb
and
ret
xchg
inc
add
or
add
push
and
push
inc
fwait
test
dec
mov
add
jo
push
add
stc
dec
push
add
add
and
sbb
sbb
or
rcr
mov
xchg
and
push
or
and
add
and
mov
dec
cmpb
mov
mov
stos
andb
sub
push
inc
adc
adc
push
loopne
sub
and
andb
push
and
subl
fsubs
add
test
add
loope
mov
push
adc
cmp
add
jg
push
cs
lods
mov
jmp
or
movsb
add
mov
dec
push
les
movsb
mov
data16
lret
inc
addb
mov
inc
cmp
cmpsb
ret
dec
orl
popl
jecxz
and
sbb
add
and
push
mov
cmpb
mov
add
mov
mov
cwtl
inc
dec
inc
or
and
les
xchg
es
xor
push
and
jb
dec
cmp
faddl
adcl
xorl
push
ret
sub
addb
xchg
aad
xorl
cmpsl
mov
push
and
or
nop
shrl
test
addl
and
insb
cli
push
addb
enter
adc
cwtl
push
pop
xchg
jo
cmpb
fmuls
jp
jno
push
sbbl
adc
sbbl
dec
mov
dec
cmp
pusha
adc
push
and
cmpl
mov
and
adc
addb
pop
subl
or
xchg
adcl
push
pop
stos
or
rclb
adc
inc
cwtl
subl
inc
xorl
and
outsb
dec
sbb
loope
andl
cmp
mov
imul
repz
add
nop
add
or
fsubl
aad
push
or
loope
xorl
push
orl
lahf
push
subl
cmp
push
xor
inc
mov
stc
stc
stos
inc
cmp
cmp
inc
xchg
lock
stos
xor
addb
test
or
inc
cmpb
addb
aaa
adc
cmp
sub
add
mov
jo
movsl
test
xchg
sbbb
lea
addb
push
or
push
inc
sbbl
push
jo
sbbl
in
orl
aam
and
push
adcl
out
inc
sub
in
push
or
orl
push
and
xor
sbb
loope
add
pop
and
inc
enter
add
pop
pushf
push
or
shll
adc
and
mov
add
nop
scas
ret
cli
add
dec
adc
mov
sbb
mov
push
and
sub
ljmp
sub
adcb
sbb
inc
mov
sahf
sub
adc
sbb
and
aas
loope
das
paddd
call
mov
add
outsb
sub
inc
faddp
cmp
in
jle
xchg
push
and
fldenv
inc
pusha
pop
adc
pushf
adc
lret
cmp
sbb
and
loopne
cvtpi2ps
inc
fisttpl
inc
inc
ret
push
xchg
inc
mov
inc
test
ret
sub
outsb
dec
push
fsubs
mov
pusha
mov
stos
add
dec
mov
push
loopne
dec
pop
cmp
stos
cmp
push
add
inc
stos
add
inc
push
add
out
ja
inc
add
push
sbb
mov
inc
add
add
inc
inc
out
orb
or
movsb
stos
add
cs
or
dec
sbb
cmp
call
inc
add
mov
inc
cmp
push
jmp
aaa
push
into
pop
cmp
das
and
call
adc
fsts
outsb
je
daa
inc
dec
pusha
add
push
add
pop
sub
push
push
addb
inc
push
add
inc
push
addb
sbb
add
jo
jle
sbbb
hlt
sub
cmp
fldenv
test
jge
xor
pop
pop
and
dec
push
inc
rcrb
sub
adc
adc
add
mov
mov
pop
loopne
mov
push
add
outsb
hlt
movsb
inc
and
sub
jo
adc
popa
mov
fwait
test
or
popw
push
addb
pop
insl
dec
pop
mov
mov
xchg
inc
mov
inc
sub
or
and
xchg
inc
or
add
mov
popa
hlt
movsb
jmp
mov
pop
arpl
loop
mov
or
push
pop
clc
repnz
nop
push
leave
clc
push
ret
popa
sbb
mov
mov
push
adc
dec
addb
roll
inc
cs
add
add
ret
or
loopne
insl
mov
xor
outsb
test
and
inc
inc
and
inc
push
push
inc
stos
lahf
push
addb
roll
mov
push
add
nop
shlb
adc
loope
mov
movsl
je
adc
cwtl
xor
add
pop
out
sahf
ja
bound
insb
jbe
addb
push
pop
clc
jmp
add
mov
sahf
out
es
mov
mov
xchg
out
mov
mov
and
jl
into
or
and
sbbl
xor
and
and
pushf
inc
addb
int3
sahf
outsb
subb
dec
inc
decb
lock
inc
inc
sbbl
or
xchg
lahf
mov
iret
rorb
ret
jmp
addb
push
adc
xchg
movlps
inc
imul
das
pop
rcrb
pop
sbb
mov
rcrl
cs
adc
mov
dec
addb
add
outsl
adc
imul
jg
adc
sbb
inc
ja
add
inc
push
or
flds
repnz
dec
addb
popa
sbb
or
lock
adc
loop
or
pop
mov
inc
std
in
ds
pop
xor
inc
call
inc
sbb
inc
sbb
or
add
jo
inc
fstps
xchg
pop
mov
inc
adc
popa
xor
xor
add
add
add
or
or
cwtl
inc
push
adc
xor
adc
inc
imul
or
sub
add
inc
pop
inc
adc
inc
or
and
jbe
jg
lock
push
orb
cmpsb
orb
loopne
inc
inc
xchg
inc
scas
dec
cwtl
push
jb
mov
xchg
dec
addb
jl
call
inc
cmp
push
xor
int3
cmp
add
rorb
pusha
add
mov
mov
push
push
aas
jo
mov
ja
in
and
dec
sbb
inc
mov
or
or
jbe
call
push
imul
lcall
aam
mov
or
dec
cmp
add
inc
je
add
push
bound
addb
xchg
and
add
push
pop
or
test
js
xor
adc
dec
mov
mov
aad
dec
inc
test
lcall
inc
ret
push
out
sbb
sbb
cltd
or
rolb
mov
repz
mov
cmp
adc
loope
movsl
add
adc
push
lret
arpl
add
inc
shrb
or
adc
mov
cwtl
inc
pushf
into
add
addb
addb
inc
mov
inc
adc
loope
push
sbb
jecxz
xchg
mov
push
dec
addb
add
push
movsb
inc
aad
dec
mov
addb
iret
dec
inc
adc
adc
je
xor
aas
aad
ror
out
paddusw
and
adc
inc
cmp
mov
mov
bound
push
cmp
xchg
lahf
add
sbbl
inc
adc
inc
cs
sbbb
inc
dec
sbb
cwtl
pop
pop
cmp
add
xchg
loop
inc
xor
adc
inc
add
push
pop
iret
shrl
sbb
and
insb
pop
pop
iret
adc
arpl
inc
ret
pop
push
inc
add
addl
and
loope
cwtl
inc
movsb
mov
jno
adc
dec
add
addb
dec
adc
out
inc
add
in
rolb
and
add
inc
mov
xor
add
inc
scas
dec
addb
inc
popa
aas
pop
inc
xchg
stc
adc
or
adc
popa
add
dec
jo
inc
mov
dec
roll
inc
mov
xlat
add
inc
rorb
push
les
nop
jo
add
cwtl
pop
popa
lock
or
adc
call
adc
inc
ja
fsts
stc
add
add
inc
inc
adc
shrl
nop
jo
push
inc
arpl
addl
mov
cmp
add
and
jmp
cmpsl
push
mov
mov
push
aam
loopne
adc
movsb
mov
pusha
push
push
add
push
pop
test
adc
inc
pop
cmp
add
ds
rol
punpcklwd
inc
push
and
push
inc
ret
pop
inc
xchg
scas
sbb
cmp
and
stc
cs
call
outsb
inc
cwtl
enter
push
adc
and
dec
xor
cmp
inc
add
ja
inc
xor
addb
mov
dec
inc
clc
fldl
orps
inc
addl
sbb
pop
cwtl
inc
sbb
push
and
inc
xor
adc
mov
inc
adc
rorl
mov
cwtl
sbb
inc
xchg
aas
sub
adc
pop
addb
adc
jo
and
push
pop
dec
inc
mov
add
pushf
ret
add
inc
scas
xlat
ret
inc
mov
add
test
inc
dec
inc
and
add
add
into
pop
mov
pusha
xor
add
pusha
add
xor
adc
inc
or
add
or
inc
stos
fistl
or
xor
add
cmpb
pop
mov
mov
inc
insl
or
test
shrb
mov
ss
push
sub
int3
adc
adc
or
pop
mov
cmp
test
inc
insb
mov
sub
sbb
test
mov
les
andl
push
les
mov
jmp
add
enter
ss
mov
cmp
xchg
lods
mov
sbbb
pushf
movsb
xchg
jns
sbb
call
enter
jb
nop
je
push
mov
sub
mov
and
or
sbb
jge
xor
mov
mov
add
ficoms
mov
test
enter
lahf
mov
cmp
jle
movsl
rcl
inc
inc
xor
popa
lods
test
popa
sbb
lock
mov
dec
test
adc
mov
inc
mov
push
shll
sbbl
ret
jns
adc
sbb
enter
cmpsl
mov
movsb
leave
lret
leave
lret
sarb
test
inc
in
jo
jb
imul
sbb
lods
xchg
push
and
jo
lods
or
xchg
mov
adc
xor
adc
mov
sarl
andb
fstpt
roll
ja
sbb
sbbl
xchg
sbb
addb
nop
dec
aam
xchg
lahf
add
add
mov
inc
and
dec
push
cltd
mov
push
mov
popa
push
and
mov
fldenv
mov
sub
and
sbb
or
test
push
popa
add
add
aas
mov
roll
por
add
mov
mov
inc
leave
lret
imul
imul
lock
ljmp
es
xchg
mov
xchg
pop
xor
and
jo
into
out
popf
bound
pop
lds
std
insb
inc
cmp
mov
xchg
les
xchg
or
push
insb
lahf
stc
arpl
xchg
dec
add
mov
lret
push
inc
add
adc
jo
push
inc
add
jns
add
jg
insb
inc
mov
add
mov
mov
inc
adc
mov
leave
insb
inc
mov
or
jge
je
jo
mov
loop
imul
fsubs
jo
dec
das
inc
lock
sub
aas
mov
shlb
inc
mov
cmpb
dec
insb
dec
mov
fadds
mov
sbb
mov
sbb
fistl
mov
pop
xchg
or
ret
inc
enter
pop
test
in
dec
inc
mov
xchg
andl
adc
or
cmp
jb
in
lahf
out
adc
mov
pop
lahf
or
cmp
adcl
xchg
pop
leave
add
sti
pushf
dec
insb
pop
enter
lods
dec
pop
add
and
leave
sub
push
je
popf
jmp
or
mov
in
or
fdivrs
or
cmp
jle
cwtl
cmp
aam
adc
sbb
sub
ss
sbb
je
or
out
aaa
les
cmp
loopne
sbb
fstl
xchg
movl
daa
hlt
or
push
cld
shlb
int
add
cmp
orl
or
fisttpll
adc
cmp
jb
je
sub
xor
dec
movsl
jb
cmp
inc
dec
push
jns
xchg
dec
push
notl
iret
enter
fs
add
fnsaves
inc
insb
xor
stos
je
jo
dec
js
mov
or
jns
dec
addb
mov
cmpsb
push
push
and
inc
popa
mov
inc
jbe
xchg
mov
push
cmpsl
fsubs
fwait
push
dec
or
bound
ret
test
push
dec
inc
push
fadds
xchg
popa
inc
sub
insl
or
lea
pusha
add
mov
lods
add
adc
xor
sub
sub
or
and
or
ret
popa
mov
pop
fisttpl
bound
mov
cmp
xchg
scas
dec
rcrb
mov
xlat
add
push
mulb
mov
sbb
outsb
pop
mov
sbb
xchg
mov
sub
fsubs
sub
popa
loope
mov
insl
popa
fcoml
les
add
popa
xor
out
or
xor
imul
fdivrl
push
insb
inc
mov
dec
popa
adc
adc
andl
or
ret
jns
sub
mov
or
popa
bound
ret
push
popa
fistl
out
mov
adc
test
adc
fsubl
and
andl
orb
daa
jne
outsb
dec
insb
sbb
add
fadds
repnz
sub
cmp
mov
popa
outsb
insl
fs
ss
or
adc
adc
and
js
lahf
test
push
jg
faddl
in
sub
mov
popa
mov
sbb
mov
popa
mov
sbb
mov
sub
test
xlat
pop
sbb
and
popa
pop
add
popa
movsb
mov
stos
fadds
or
or
add
jne
push
ss
lods
cld
mov
nop
mov
mov
mov
cmp
xchg
sbb
popa
fcoml
push
stos
fadds
mov
fcoms
and
lds
movsb
adc
ss
mov
test
push
mov
pop
pop
call
popa
movsb
das
mov
popa
std
mov
fadds
insl
cmp
jno
mov
test
lods
insb
inc
cmp
and
jno
inc
popa
lds
mov
dec
lds
popa
push
popf
xchg
bound
ret
push
popa
mov
sub
addb
ret
add
push
ret
rol
pop
jge
mov
popa
and
ss
mov
sbb
inc
les
sub
adc
mov
cmp
and
popa
or
inc
insb
inc
popa
ljmp
push
and
sub
out
sub
pop
sbb
add
cltd
test
popa
daa
das
or
xor
les
test
push
popa
or
pop
inc
lea
popa
mov
push
push
mov
jle
insl
or
sub
mov
cmp
xorb
scas
bound
add
je
sti
push
sub
jns
subb
mov
test
mov
mov
nop
cmp
cwtl
pushf
or
mov
jmp
mov
mov
mov
lret
enter
enter
pop
sub
ds
push
mov
dec
out
in
ds
enter
clc
cmc
sbb
pop
cld
add
or
aas
dec
pop
push
fnstcw
push
aas
adc
mov
add
or
and
sub
cmp
lea
mov
cmp
and
dec
or
and
xchg
cmp
ljmp
push
push
push
pop
pop
jmp
je
fs
dec
in
js
addb
nop
xchg
xchg
lret
cwtl
inc
sbb
push
stc
inc
sub
xchg
lret
dec
movsl
mov
mov
rcl
fmul
dec
movsl
push
fsub
in
lea
in
lock
clc
cld
movsl
mov
stc
inc
adc
or
xchg
lret
or
inc
adc
inc
adc
mov
es
movsl
push
mov
sub
cmp
inc
mov
cmp
bound
ret
adc
mov
ret
cmpsb
out
mov
dec
test
insb
popa
icebp
arpl
lds
popa
inc
mov
dec
les
popa
dec
or
or
mov
cs
popa
les
add
int
fistl
pop
pop
sahf
sbbb
or
cmp
dec
mov
loopne
xchg
popa
pop
mov
pushf
ja
or
fistl
outsb
sub
or
punpckldq
popa
loope,pn
mov
push
repnz
adc
or
mov
popa
dec
xchg
fistl
in
or
pushf
int
add
xor
popa
pusha
sub
and
xchg
loope
sbb
sub
popa
js
insb
inc
sbb
popa
dec
sbb
sbb
xor
push
dec
jo
push
addb
popa
test
add
or
push
popa
mov
fcoml
dec
fisttpll
xchg
mov
call
sbb
into
in
push
push
push
push
stos
mov
add
test
popa
shrl
and
push
cmp
inc
lret
lds
add
in
or
mov
mov
push
pop
ds
shl
jno
inc
push
rolb
inc
mov
popa
call
cltd
dec
push
inc
fildll
sbb
inc
or
bound
ret
sub
xchg
ret
aas
in
leave
mov
sub
ja
push
lds
add
adc
inc
mov
or
inc
insb
popa
aas
xchg
lea
mov
aaa
adcb
jae
sbb
xor
popa
dec
inc
js
movsb
in
jo
push
outsb
hlt
jno
mov
mov
mov
mov
fistl
adc
popa
or
mov
js
mov
jp
or
mov
lods
repnz
loopne
cmp
and
cmp
inc
sbb
inc
or
movsl
daa
insb
inc
xor
or
test
inc
popa
jne
cwtl
and
popa
add
ret
push
add
shlb
sbb
inc
sbb
dec
xor
inc
insb
popa
jnp
pop
jae
or
test
fistl
xchg
es
sbb
outsl
add
in
pop
or
xor
mov
cmp
mov
into
lods
push
xchg
daa
aaa
mov
fsubs
xchg
outsb
js
insb
inc
popa
cmpsl
sub
push
insb
inc
popa
das
nop
add
dec
or
jmp
ret
popa
push
daa
icebp
sbbb
fistps
rorb
pusha
lahf
fbstp
pop
daa
adc
and
daa
mov
popa
adc
add
lcall
enter
push
aam
cmp
arpl
mov
cmp
popa
mov
cmpb
loope
mov
xor
test
sbb
adc
scas
fadds
push
test
jnp
je
inc
jle
jl
or
movsl
stos
push
aaa
add
and
inc
add
inc
push
and
pop
daa
sub
inc
cmp
cmp
push
or
jo
insb
popa
imul
popa
scas
and
adc
adc
cmp
popa
inc
xor
jp
mov
sti
mov
add
popa
mov
movsb
inc
jmp
bound
je
cmp
ss
stos
mov
or
ss
push
push
daa
mov
aas
mov
lds
test
lcall
aas
outsl
pushf
fldt
aas
dec
scas
and
push
aas
mov
pop
rclb
adc
adc
xchg
mov
mov
xchg
fistl
into
mov
roll
dec
jp
popa
mov
pushf
dec
mov
loope
sbb
xchg
pop
shlb
popa
aad
and
cmp
lods
adc
out
jne
adc
sbb
lods
dec
test
mov
popa
or
loop
cmpsl
add
out
out
sub
fcoml
fistl
popa
enter
mov
popa
xchg
adc
popa
inc
adc
pop
mov
insb
popa
xchg
sbb
ja
pop
mov
bound
popa
mov
xchg
push
push
xchg
andb
xchg
and
fsubs
sub
mov
inc
addb
ss
sbb
adc
sub
and
xorl
punpckldq
into
and
mov
and
and
addb
sarl
sbb
inc
sbb
push
notl
inc
movsb
jl
test
stos
adcl
and
pusha
mov
rorl
rcl
inc
mov
mov
fcompl
roll
or
rol
sbb
and
shll
dec
movsl
aam
mov
shrl
shll
add
adc
insb
aaa
xor
push
rcrl
or
shll
cli
pushl
or
or
adc
lahf
sub
jae
mov
adc
es
test
xchg
adc
mov
aam
sub
scas
roll
adc
or
pushf
data16
ljmp
and
adc
or
push
shll
scas
push
fmuls
movsl
add
or
jo
ror
inc
mov
ja
xor
mov
shll
mov
test
cmp
cmpsl
das
popa
daa
xadd
push
add
adc
sbb
and
mov
add
xchg
push
nop
ret
aas
shrl
loope
rorl
or
aaa
rcrl
shrl
bound
sbb
shll
mov
ret
sahf
ficoml
out
shr
push
inc
cmp
loope
shrb
data16
mov
mov
mov
ss
push
mov
roll
xor
icebp
adc
rorl
enter
inc
jl
jl
mov
shll
pop
leave
aad
lds
shr
fmuls
rcll
xchg
xchg
int3
ficoml
outsb
mov
adc
xor
adc
daa
test
and
inc
push
xor
inc
sbb
mov
movsl
lock
add
sarl
sbb
xor
xor
popa
shll
dec
mov
lret
aad
inc
mov
add
xor
mov
mov
sbb
mov
xchg
push
ficoml
dec
rcr
fdivs
add
xor
bnd
pop
imul
sub
mov
jg
xor
adc
iret
shll
ss
adc
test
xchg
push
dec
nop
nop
or
dec
jecxz
or
ficoml
adc
lret
pop
xor
xchg
xor
push
add
jmp
shll
cmp
dec
bnd
mov
rcrl
lds
shrl
sbb
shll
or
hlt
cs
mov
inc
sbb
and
cmp
rclb
mov
sar
dec
ret
fcmovb
push
push
mov
das
inc
loope
mov
shll
stos
adc
enter
sbb
shrl
movsb
and
xchg
sbb
insl
lock
inc
or
enter
xor
or
pusha
aas
fcmovb
adc
ret
rol
icebp
jle
mov
or
rol
mov
sbb
mov
or
inc
sbb
push
shll
xor
iret
cwtl
jo
push
enter
xchg
scas
pop
inc
sbb
rcll
pop
imul
push
xor
roll
insl
or
mov
sti
and
and
das
inc
sbb
push
rorl
cmp
xchg
mov
xchg
roll
adc
rol
call
push
mov
sub
insl
or
aam
inc
mov
or
test
insl
or
test
cmp
sub
cmp
mov
call
shl
call
sbb
jmp
sub
shrl
jmp
lea
test
pop
js
insl
or
pop
jmp
movl
and
loopne
ljmp
shll
ficoml
add
shll
movl
aaa
xor
enter
adc
test
xchg
jmp
fsubrs
fsts
addb
fadds
pusha
mov
and
mov
cltd
or
and
sbb
push
in
fidivrl
and
ss
in
mov
shlb
sbb
jo
mov
pop
ret
rol
pop
dec
test
pushf
push
sbb
nop
addl
rcll
push
mov
or
add
ret
in
or
mov
rcl
sbb
repz
pop
xchg
adc
fldl
and
ficoml
dec
insb
rorl
js
addr16
push
outsb
cmp
mov
sbb
rorl
clc
data16
outsb
sbb
fdivrs
xchg
xchg
pop
mov
mov
xchg
push
shl
pop
mov
fwait
sbb
pop
mov
decl
fadd
jmp
into
xchg
sbb
ficoml
rcl
inc
xor
sti
daa
insb
sub
push
mov
call
shll
roll
cmp
jl
add
sbb
xor
mov
shrl
fbld
cmp
push
xchg
lret
leave
mov
sub
pusha
daa
daa
xchg
xchg
push
mov
adc
cmp
and
mov
or
mov
shrl
dec
sub
ret
rcll
roll
fdivrl
or
jb
mov
or
in
jb
jo
mov
pop
or
or
dec
dec
and
bound
roll
mov
shl
jb
arpl
inc
mov
imul
test
lds
aaa
push
add
jmp
test
insl
or
shll
or
sbb
adc
add
insl
rcl
sti
insl
or
inc
dec
ret
sbb
aam
addl
aam
ss
rol
sbb
aad
popl
ljmp
aad
push
push
lock
pop
mov
sub
adc
add
cli
into
dec
roll
sub
cmp
xor
adc
sbb
sub
out
xor
rcl
and
add
and
add
add
insl
or
cli
dec
or
xlat
inc
or
mov
add
insl
aaa
rcll
ss
outsl
shrb
mov
push
cld
mov
push
fcmovb
sub
xchg
mov
and
sbbb
xchg
inc
shll
rol
jns
and
jmp
push
and
das
inc
mov
sbbb
adc
fadd
push
out
pusha
mov
add
xor
add
or
js,pn
sbb
dec
push
inc
cmp
push
insl
or
mov
ljmp
roll
sbb
insl
or
dec
sub
ss
cmp
inc
mov
or
rol
mov
push
push
test
xchg
add
lea
shll
cmp
push
lea
roll
mov
pop
insl
or
mov
xchg
sbb
stc
in
cmp
adc
fstp
fdivs
test
xor
sbb
shr
and
adc
shll
testl
cmp
push
adc
insl
or
jno
sbb
addr16
mov
add
inc
shl
sub
xchg
frstor
mov
xchg
pop
test
push
test
aam
adc
add
or
fcmovb
mov
or
in
jo
pop
sbb
push
out
adc
shll
pop
xor
adc
fwait
sbb
out
push
dec
jmp
inc
sbb
test
mov
xor
adc
in
rcrl
ret
inc
mov
push
les
xchg
dec
xchg
ret
rol
xor
add
rol
push
test
movsb
mov
ss
inc
sbb
scas
roll
push
pushf
cltd
sbb
sbb
and
sub
sub
out
arpl
push
xchg
xcrypt-ofb
cmpsl
sub
push
sub
jmp
rol
push
cmp
cmp
add
or
out
rcll
ss
xor
adc
shll
inc
roll
dec
hlt
sbb
cmp
sbbl
pop
jno
push
mov
or
insl
or
lock
pop
hlt
push
sbb
xchg
pusha
xchg
insl
shll
test
lea
test
rorl
je
mov
lea
jmp
es
shrl
out
push
fistps
loopne
pusha
mov
shrl
fdivrs
xchg
shrl
aaa
into
pop
jmp
push
mov
and
fs
and
push
scas
adc
lods
pusha
xor
das
jnp
fcomp
xor
rcrl
jmp
fldln2
es
jb
cmp
and
mov
and
popa
jmp
xchg
adc
or
sub
and
adc
mov
inc
jo,pt
shr
leave
into
add
into
mull
insb
roll
and
int
xor
shll
in
inc
cmp
mov
xor
push
loope
mov
test
inc
sbb
and
push
aaa
or
shl
out
test
push
sbb
pop
roll
mov
ret
shrb
fucomp
sbb
lea
sarl
inc
sbb
adc
dec
fmuls
mov
sbb
rcrl
or
insl
or
pop
iret
or
stos
cmc
inc
loop
aad
call
adc
cli
adc
inc
ss
xor
cwtl
pop
and
rclb
mov
sub
sbb
mov
outsb
push
and
pop
inc
sbb
ficoml
rcll
or
cmp
lea
test
inc
pop
pop
movsl
les
aaa
rol
xchg
insl
or
sbb
cmp
sub
jmp
add
add
push
or
imul
adc
push
out
sahf
out
adcl
mov
es
push
jecxz
out
jns
out
sbb
and
dec
repz
and
sarl
inc
lret
xlat
push
and
fidivs
cld
pop
es
xchg
repz
mov
push
sti
ficomps
lcall
adc
test
sub
or
rcr
roll
inc
push
rol
aad
cmp
scas
push
mov
mov
add
inc
sbb
rcr
inc
or
adcb
sarl
and
aam
roll
xchg
cmp
cmp
push
xor
adc
jg
adc
or
jge
bound
adc
lods
sbbl
mov
push
mov
xor
sub
rol
fisubrl
inc
mov
sbb
test
out
inc
sbb
shll
xor
adc
push
push
adc
push
inc
shll
cmp
adc
push
pusha
js
rcl
out
ljmp
sbb
shll
roll
popf
notb
shrl
mov
in
rol
adc
xor
lods
pop
sbb
aaa
movsb
push
rcll
adc
hlt
xor
xor
sar
xor
add
ret
push
inc
jns
xchg
mov
sbb
jae
mov
outsl
mov
cmp
jmp
pusha
push
roll
cmp
sub
rcl
roll
mov
sarl
and
arpl
push
out
lea
pop
mov
mov
sbb
lds
rcrl
ret
mov
pushf
roll
popf
mov
ret
rol
adc
ror
xor
ss
lods
push
mov
and
sarl
rorl
loopne
int3
sahf
xor
lds
xor
dec
sub
aad
aam
roll
sti
push
mov
test
bound
sbb
imulb
roll
outsb
jge
cmp
mov
add
sbb
test
int
push
or
ss
inc
sbb
roll
insl
or
fisttpll
shll
test
push
jo
mov
das
ss
and
mov
inc
mov
movsl
push
and
inc
mov
mov
add
mov
add
and
jbe
sbb
shr
ret
je
int3
and
adc
or
mov
sbb
shl
ss
push
dec
sbb
push
inc
inc
sbb
shll
adc
repnz
jl
adc
aad
jecxz
push
sti
sbb
frstor
and
mov
mov
mov
movsb
shll
inc
mov
adc
shrl
shll
addl
mov
sarl
rorl
xchg
inc
cmp
popf
sbb
jnp
and
cmovbe
rorl
shlb
fcomps
fcoms
stos
inc
sbb
push
rcll
mov
sub
into
leave
xlat
sbb
xor
shll
ss
dec
imul
leave
mov
loope
mov
ja
jne
xchg
sbb
roll
scas
rol
aam
mov
mov
mov
roll
shll
push
sbb
mov
or
jbe
flds
and
sbb
jnp
inc
push
xor
adc
cmp
inc
sbb
je
mov
shll
stos
adc
xor
mov
mov
xor
push
fwait
test
xchg
addr16
orb
inc
sbb
mov
mov
fadds
pusha
rol
lahf
sbb
mov
test
xor
xchg
fs
mov
xor
adc
jp
pop
push
cmpsl
push
add
test
ret
rcrb
mov
xchg
mov
inc
test
ds
push
sbb
push
push
sahf
notl
dec
jmp
xor
shll
mov
cwtl
nop
and
dec
dec
inc
dec
dec
roll
or
roll
dec
and
and
adc
jb
add
jno
fs
push
sbb
mov
mov
js
adc
xor
sbb
push
les
add
add
roll
dec
dec
mov
add
and
cmc
aam
and
imul
mov
pop
mov
add
push
and
mov
fucomip
mov
jmp
inc
sbb
or
adc
shlb
inc
sbb
fidivrl
or
mov
or
jne
cld
inc
mov
xor
adc
shrl
sbb
jmp
pop
decb
ficoml
fdivp
xadd
in
shlb
mov
xor
xchg
fnstsw
shrl
rcll
shll
lds
pop
int
inc
sbb
ffree
rcll
lea
test
adc
adc
in
add
xor
cmpsl
jb
mov
cli
inc
sbb
in
nop/reserved
shll
mov
adc
pop
or
mov
mov
cwtl
roll
or
jnp
dec
fdivs
sbb
and
rol
cmpsb
sahf
stc
jne
jmp
sbb
inc
cmp
push
push
adc
xchg
adc
mov
aaa
rcrb
xlat
push
push
or
or
inc
fldt
push
or
insl
shll
jns
andl
insb
xchg
push
inc
cmp
sub
fisubrs
xchg
int
ss
dec
jno
cli
sbb
dec
rcll
jmp
push
loop
insl
or
pop
or
adc
adc
fcmovb
cmpsl
cmp
inc
sbb
xor
insl
roll
jns
and
nop
add
xchg
sbb
shrl
adc
sub
insb
and
sbb
xor
roll
adc
xor
xorb
imul
test
push
push
xor
adc
lods
roll
xchg
or
movsl
adc
dec
push
daa
pushf
or
loope
adc
jo
int3
pop
daa
bound
xchg
out
inc
add
xchg
push
mov
adc
vorpd
call
rolb
mov
ret
inc
sbb
inc
outsb
shrl
and
leave
in
rol
out
out
pop
pop
xor
adc
push
ror
fisttpll
pop
insl
or
and
je
jns
pusha
mov
bound
cmp
roll
insl
or
shll
pop
or
pop
dec
dec
lea
ret
and
xor
adc
and
cmp
adcl
fcmovb
xlat
imul
sbb
shr
mov
xchg
shll
imul
inc
add
insl
or
lea
test
fsubs
xor
jg
push
rcr
push
dec
leave
cmpsb
in
bound
or
roll
out
jae
stos
rorl
icebp
pop
insb
pop
xor
adc
shrb
mov
shll
inc
jo
shll
inc
enter
sbb
or
ficoml
outsb
inc
sar
adc
rcll
aas
fcmovb
push
ds
cmp
shrl
add
adc
int3
mov
aam
in
add
ficoml
rcr
lods
xor
mov
add
test
shll
mov
sub
roll
dec
mov
add
adc
push
xor
shll
mov
xchg
pop
sbbb
shll
and
sbb
mov
mov
xchg
out
xor
stos
out
repz
ds
xchg
imul
mov
push
call
push
je
into
adc
sub
mov
pop
mov
mov
or
shll
adc
push
xor
xor
outsb
adc
shrl
xor
adc
rol
test
test
stos
or
lea
ror
mov
xor
inc
les
shr
mov
xchg
mov
push
cmpsb
loope
dec
repz
adc
lock
push
mov
or
roll
lret
mov
stos
andl
lock
or
insl
or
and
dec
bound
rolb
mov
imul
sbb
sbb
roll
and
pop
or
bound
test
insl
inc
push
pop
aas
sbb
cwtl
shlb
mov
and
orl
insb
jns
loope
mov
jp
mov
sub
jne
cli
enter
push
sbb
ret
push
push
sbb
rcrb
shll
insb
dec
add
dec
inc
cmpsl
test
mov
jnp
and
cwtl
stos
adc
ss
xor
adc
jg
ret
rol
rcll
and
ficoml
in
sbb
lret
dec
insl
add
fistps
out
or
outsb
sbb
push
mov
sbb
mov
loope
sarl
inc
cmp
sbb
aaa
or
or
sub
sbb
je
or
push
cs
push
mov
loop
nop
pusha
addr16
rorl
xchg
leave
xor
mov
sbbl
jmp
pusha
push
sbb
enter
mov
rol
jns
mov
xor
sub
xchg
xor
or
mov
cmp
inc
sbb
push
adc
xor
shlb
popa
movsb
aam
dec
xchg
mov
jecxz
rol
add
mov
ficoml
add
lods
mov
out
rcll
test
add
add
cmp
stos
sub
adc
xchg
fnstsw
imul
push
pop
inc
sbb
test
popa
mov
pushf
inc
sbb
rcr
mov
pop
repnz
mov
cmp
ficoml
rcrl
or
or
lea
test
scas
sbb
roll
or
loop
push
mov
stos
sbb
mov
or
sbb
push
jns
lds
les
sarl
mov
lods
cmpsb
rcrl
cmpsb
pusha
rcrl
roll
test
sbb
ja
roll
jne
add
lahf
adc
pusha
or
push
and
adc
jmp
imulb
les
sub
mov
push
or
scas
sbb
sbb
push
sbb
mulb
shrl
jo
rcl
mov
xchg
dec
and
movsb
xchg
push
add
adc
pop
inc
in
faddp
shrl
inc
jle
push
gs
out
xchg
cmpsb
int
jl
roll
adc
scas
push
outsl
adc
mov
insl
or
and
sub
test
shlw
sbb
lret
into
pop
fisubrl
rorb
and
sbbb
adc
sbb
cmp
xchg
push
inc
shll
shr
pop
pop
adc
and
fcmovb
cmpsb
nop
inc
cmp
das
test
xchg
cld
jmp
das
adc
rcll
sarl
push
rorl
sbb
ss
mov
pop
mov
inc
negl
sbb
push
push
sbb
rcrl
mov
xor
shll
rcrl
adc
add
aas
aaa
push
pop
push
iret
sbb
shll
imul
add
ljmp
test
pop
inc
add
mov
and
and
adc
inc
test
cs
or
xchg
int3
add
roll
ret
rcr
pop
and
movsb
pusha
xchg
xchg
aad
inc
mov
ret
aam
inc
roll
inc
jo
mov
dec
add
push
or
mov
sbbb
sbb
xor
push
pop
enter
push
pop
das
stos
sub
ret
iret
xchg
and
fsubs
inc
sbb
and
into
lods
push
and
pusha
shrl
cmp
fcmovb
cmpsl
jl
shrl
cld
and
lea
add
adc
sub
pusha
movsl
hlt
pop
or
lock
and
cmc
add
insl
or
adc
sub
sbb
ret
xor
inc
xchg
mov
jns
inc
clc
jmp
xchg
scas
inc
sbb
sarl
or
sbb
loope
daa
and
ss
xchg
sbbl
rcrl
ficoml
into
sub
fcmovbe
rclb
scas
or
scas
roll
mov
sbb
rorl
roll
sbb
sbb
xchg
inc
sub
inc
mov
roll
adc
adc
add
xor
pop
mov
xor
ret
fcmovb
mov
sbb
in
inc
sbb
add
roll
addb
rorl
mov
sbbl
add
mov
repz
push
xchg
xchg
out
repz
sti
inc
adc
sub
push
imul
mov
push
insl
or
or
jl
push
rol
inc
sbb
std
add
lcall
xor
push
rorl
sbb
or
insl
sarl
ss
pusha
mov
jecxz
outsb
mov
xchg
adc
push
outsl
and
sbb
rcll
shlb
inc
rcrl
pop
nop
nop
inc
adc
rcl
jo
aad
shll
push
ficoml
push
push
shrl
or
mov
sbb
addb
push
stos
inc
fisubrs
mulb
testb
popa
push
adc
in
fmull
movsb
outsl
add
idivb
out
push
jecxz
bound
out
fxam
pop
cwtl
mov
push
push
dec
lea
jo
pop
shrl
push
jbe
mov
add
mov
out
mov
popf
jns
push
push
and
cmp
rorl
jle
inc
mov
sbb
adc
push
adc
ficoml
sar
pop
and
adc
inc
sbb
xor
inc
sbb
rcrl
pop
mov
bound
roll
and
adc
mov
xchg
sti
and
data16
jecxz
adcl
rol
mov
mov
add
cmp
mov
movsl
jb
movsl
add
adc
fwait
add
mov
roll
vphaddbw
sbb
cmp
mov
inc
xor
test
push
dec
mov
push
shrl
test
lea
add
rcrl
adc
mull
data16
and
push
ret
mov
or
or
sub
xchg
dec
jb
pusha
mov
shll
mov
ss
adc
insl
or
push
fbld
test
push
sarl
jb
push
mov
sarl
cmp
movsb
mov
and
mov
ja
imul
and
es
sub
test
or
shll
jmp
pop
call
or
ficoml
mov
push
mov
rorl
out
add
jnp
mov
ljmp
mov
pop
loope
xchg
rcrl
rorl
sar
and
add
or
inc
jmp
loopne
mov
nop
push
push
mov
test
lea
add
iret
rcrl
push
push
push
sbb
aam
inc
sarl
aaa
fs
push
sbb
ficoml
outsb
repnz
shl
lods
push
fcomps
or
adc
push
mov
es
mov
ss
leave
insl
or
jb
sbb
pop
insl
push
push
cmp
push
dec
rol
jg
xor
bound
inc
sbb
xchg
xchg
rcrl
fsubl
sbb
push
cmp
and
icebp
xor
ss
push
pop
roll
dec
insl
or
roll
add
sbbb
shl
inc
addb
push
pop
mov
shl
xor
out
loop
push
lods
push
cmp
ficoml
shl
inc
sbb
sti
adcb
cmpsl
push
sbb
dec
sbb
jg
push
insl
push
sbb
cld
sbb
cmpb
insl
or
shll
or
push
jno
insl
shll
sbb
out
imul
mov
add
sbb
xchg
pop
insl
or
rorl
push
fadds
xchg
pusha
out
push
rol
xor
ret
adc
and
add
insl
or
jmp
and
shll
xchg
inc
mov
rcll
sar
lahf
sub
in
shrb
shl
xchg
addl
shrl
lea
mov
aad
xchg
dec
arpl
pop
dec
inc
pushf
ss
jo
repnz
loope
mov
shll
sbb
mov
pop
les
mov
les
ficoml
pop
js
inc
sbb
sbb
or
roll
mov
rol
xor
cmp
sub
dec
push
and
stc
or
inc
les
push
and
das
bound
lods
adc
push
test
mov
shrl
pop
mov
roll
sbb
out
mov
roll
fcmove
mov
mov
shll
out
mov
adc
xchg
int
push
push
cmpsl
stc
xor
imul
sub
int
jns
push
xchg
cmp
shrb
push
jo
iret
repz
push
jno
cs
rorl
mov
sbb
dec
ficomps
inc
movsb
jns
flds
loope
inc
shll
rcll
add
sarl
rorb
cmpsb
pop
inc
pop
pop
cmc
jle
sbbb
rcl
nop
push
sub
pop
ficoml
xchg
push
sub
lret
or
rcll
or
xchg
popa
inc
jae
or
xor
repnz
adc
fistpl
movsb
test
adc
popa
pusha
and
pop
adc
cmp
cmp
clc
mov
in
add
jg
fidivrs
test
mov
pop
adc
mov
nop
xorl
and
push
shr
lods
loopne
loop
adc
popa
sub
pop
adc
dec
adc
andb
adc
pop
jno
sub
pop
je
popa
mov
popa
jne
adc
andb
dec
and
or
popa
mov
popa
cmp
mov
insb
add
adc
aad
movsb
push
push
push
in
xchg
add
popa
or
lcall
pop
ljmp
mov
dec
mov
push
inc
cmp
repnz
lds
push
and
mov
dec
mov
push
inc
or
cs
inc
push
cmp
sbb
dec
or
adc
je
pop
scas
or
iret
add
mov
xchg
xchg
xor
in
pop
jg
push
cmpsb
ljmp
or
cltd
andb
push
push
and
and
je
and
popa
push
cltd
jmp
and
movsb
push
inc
push
pop
lods
or
sbb
sbb
adc
mov
sbb
adc
pop
faddp
push
jno
mov
popa
mov
add
test
jg
pop
mov
or
adc
jo
adc
mov
push
popa
lahf
test
mov
cmp
frstor
subb
ret
xor
mov
es
mov
mov
popa
adc
push
enter
adc
add
jno
pusha
or
and
stos
das
pusha
nop
rolb
popa
call
es
xchg
cmp
pop
xchg
popa
mov
inc
popa
push
fdivrl
movd
popa
mov
dec
push
imul
test
sub
push
nop
ret
pop
popa
dec
sub
fcompl
or
adc
push
ja
dec
popa
subb
aaa
mov
dec
pop
adc
pop
dec
adc
dec
fbld
test
jo
mov
xchg
popa
cmp
outsb
lret
mov
and
stos
mov
test
test
sub
popa
inc
push
mov
aas
pop
or
or
push
mov
dec
adcb
scas
popa
mov
js
sbb
popa
adc
push
jno
popa
hlt
sbb
jo
xchg
add
cmp
add
xchg
and
adc
in
in
sbb
or
dec
lock
or
fsubr
inc
popa
sbb
add
rcrb
loop
and
xor
dec
adc
popa
or
xor
adc
push
cs
dec
xor
inc
jne
popa
cltd
jo
adc
popa
xchg
and
adc
and
ja
popa
loop
and
fnstcw
loop
popa
fisttpl
popa
and
mov
adc
jo
adc
inc
push
loope
push
push
rcrl
push
sbb
xchg
testl
orb
dec
popa
adc
jecxz
pop
pusha
cld
add
je
add
xorl
es
fs
sbb
pusha
adc
ret
dec
xor
test
popa
pop
pop
inc
jo
ljmp
popa
jg
sbb
scas
dec
andb
dec
adc
inc
popa
pop
adc
push
adc
adc
adc
jp
cld
loopne
aas
test
add
xorl
xchg
adcl
push
ror
shrb
jnp
shll
sbbl
call
pop
test
push
call
or
adc
inc
sub
call
push
push
or
or
sbb
mov
xchg
mov
shrb
sub
or
xchg
pop
adcl
jo
pop
int3
sbb
xchg
cld
jnp
es
fiadds
xchg
mov
scas
or
loopne
andl
ret
xchg
xorl
or
cmp
aaa
push
call
shlb
dec
sub
bound
cwtl
and
add
or
jbe
lods
pop
xor
xorl
mov
xchg
cmpsl
pop
fisubrl
stos
daa
pop
adc
add
add
add
mov
push
sbb
lcall
adc
jo
and
arpl
mov
andl
pop
add
fisubs
cltd
scas
incb
lods
push
lcall
dec
xorb
orl
xchg
and
adc
pop
xorb
bound
pushf
dec
sbb
test
repz
decl
rolb
adc
shrl
push
jmp
stos
adc
aad
mov
imul
add
subb
mov
dec
adc
ret
and
clc
mov
or
dec
rolb
cmpl
adc
push
or
jecxz
pop
or
or
or
mov
andl
and
lcall
mov
and
cmp
call
pop
add
add
cwtl
fs
add
or
sub
xorb
shll
add
orl
add
jo
cmpl
jmp
xchg
add
add
push
or
xchg
add
and
mov
repz
je
sbb
mov
dec
addb
adc
xchg
in
loopne
and
aaa
adc
orl
sub
mov
test
or
push
andl
and
mov
or
sbb
inc
push
mov
and
jno
ret
dec
add
or
and
sbbl
push
enter
adc
xchg
and
push
or
add
addl
dec
cli
daa
arpl
and
fsubl
cwtl
and
cmpl
test
mov
mov
push
aaa
xor
sbbl
xor
int
inc
mov
mov
sti
add
pusha
shll
xorl
addl
sbb
push
mov
jo
cmp
and
jns
insl
pushf
or
and
mov
and
cmp
sbb
and
cmpl
xchg
add
push
jne
dec
sbbl
push
or
or
std
add
sub
mov
xchg
addl
shrl
xor
mov
in
dec
xorb
adcl
orl
adc
pop
dec
dec
orl
sahf
jo
call
push
dec
addb
and
imul
stos
push
orl
add
cwtl
and
xchg
imul
push
scas
cmpl
inc
xor
arpl
or
imul
popf
cmpl
adc
jne
adc
xor
cmp
or
dec
adc
cmp
addl
mov
dec
adc
shlb
addl
addl
inc
test
cmpsl
jbe
test
or
cmp
dec
adc
dec
adc
pusha
gs
fbstp
ja
dec
adc
xchg
jge
sarb
fwait
es
sbbl
xorb
jp
enter
sub
test
xor
ret
cmpl
es
push
add
lret
xor
lahf
orl
or
or
dec
adc
and
or
xor
or
subl
int3
inc
xchg
add
testb
adc
roll
dec
addl
adc
and
and
mov
fildl
insb
dec
xchg
aam
xor
and
mov
mov
rcl
scas
jl
mov
jbe
xorb
jmp
lea
or
xorl
test
push
cmp
bound
jl
xlat
addl
and
and
js
addl
dec
andl
or
push
fcoms
mov
push
dec
push
shll
cld
jp
xor
orl
adc
ret
xchg
icebp
mov
adcl
add
sahf
mov
shlb
popf
dec
push
push
inc
pop
sbb
movsb
rolb
jo
orl
sbb
ficomps
xorb
fsts
mov
cmp
jle
addl
dec
xchg
adc
and
or
cmpsb
orl
add
add
pusha
setp
into
push
mov
pushf
dec
addb
and
subl
out
or
push
pop
mov
neg
in
rcll
das
and
nop
push
xchg
push
nop
pop
movsl
out
imul
push
fmull
pop
jecxz
push
add
mov
or
adc
andl
dec
adc
orb
imul
int3
inc
data16
insb
pop
add
push
xor
inc
sbb
fisubs
btrl
test
shll
ds
and
sub
loopne
xorl
and
sbb
ds
dec
adc
dec
andb
xchg
push
repnz
std
add
sbb
dec
adc
sbb
or
pusha
add
xorl
andl
sbbl
add
mov
ret
or
test
jne
add
or
dec
andb
icebp
adcb
pushf
sub
out
pop
popa
inc
loope
cwtl
cmpl
pop
pop
xchg
add
les
cmpsb
scas
mov
sbb
dec
adc
mov
ja
daa
jecxz
or
and
push
call
fcomp
ja
fsts
and
test
mov
ret
daa
addl
mov
and
jnp
or
dec
andl
xorl
inc
adcl
test
lock
sub
scas
dec
and
or
adc
adcl
xchg
xor
cwtl
and
mov
or
add
add
mov
icebp
dec
xorb
push
add
and
fstpl
and
out
push
inc
xor
jb
arpl
xchg
add
inc
adcl
iret
adcl
lods
mov
fiadds
lods
lcall
dec
adc
push
adc
dec
adc
pop
movsl
aad
in
sub
adc
ret
sarb
and
cmp
cmpl
ja
cmp
jo
clc
sbb
jo
pop
cmp
testl
xorl
adc
adc
rorb
loope
dec
push
pop
xor
rcll
add
mov
dec
adc
test
loope
xor
aad
and
shlb
or
jmp
orl
dec
add
subb
add
subl
xchg
or
dec
adc
and
and
lds
adc
and
xchg
and
jmp
mov
dec
and
cmp
dec
call
pop
shll
test
mov
xorb
sbb
hlt
mov
sbbl
inc
orl
add
andl
jp
js
xchg
and
and
jg
mov
jno
push
adc
push
sub
dec
andl
xchg
int3
add
orl
adc
jge
xor
pop
xor
orl
and
shll
xlat
and
mov
inc
adcl
sbbl
mov
ljmp
mov
or
xchg
andl
and
and
fisttps
xor
enter
jns
sub
sbb
and
dec
adcl
data16
andl
xorl
xchg
and
pop
adcl
sbbl
cmp
sbb
and
cmp
das
and
inc
push
bt
andb
lock
adc
xor
in
dec
xor
adc
lds
adcl
addl
and
testl
fisttpll
dec
xorb
xchg
add
popa
scas
cmp
adc
adc
dec
adc
xor
sbb
pop
adc
ficoms
in
hlt
xchg
mov
bound
adc
inc
add
xor
adc
div
addl
sahf
xor
mov
pop
xor
rcrb
xchg
add
sbb
repz
push
lcall
sub
pusha
and
scas
ror
orl
fsubl
nop
nop
decl
pop
fldcw
and
inc
push
loop
data16
ret
orl
data16
inc
mov
dec
cmp
aad
add
in
adc
sbbb
das
or
cwtl
daa
arpl
out
bound
inc
xor
daa
or
rorl
test
xchg
push
push
addr16
scas
orl
cwtl
and
cmp
cld
aaa
inc
xor
ret
inc
add
adcl
xchg
mov
insb
xchg
add
gs
push
push
and
adc
add
fadds
in
xorb
jns
in
add
and
call
cmp
imul
cmp
dec
add
or
push
cs
jmp
adc
mov
pusha
out
and
jo
int3
push
and
inc
faddl
mov
outsl
xchg
add
cld
arpl
in
adcl
cmp
lcall
push
sbbb
fsubrs
cmp
repnz
pusha
add
sub
ret
mov
add
push
rcr
out
cwtl
inc
or
pop
mov
popa
mov
xor
and
dec
sar
add
xor
xchg
hlt
dec
xchg
test
xchg
jo
aam
lods
pushf
repnz
leave
or
mov
sub
or
movsl
jb
jl
xor
cmp
fs
jno
lret
test
bound
and
adcl
es
ret
xor
dec
mov
shll
ret
and
mov
sbb
push
dec
dec
rcl
decb
xlat
sub
sbb
adcl
inc
sbb
fbstp
add
sub
xlat
mov
xchg
jo
rorl
jo
sbb
adc
shll
sarl
inc
mov
out
xor
cltd
xchg
add
and
pop
pop
enter
aam
leave
add
and
orb
enter
jl
xor
in
dec
add
test
add
fcomps
lods
into
add
mov
sar
inc
or
mov
idivb
call
daa
push
ret
rcll
mov
jmp
addl
and
or
xor
and
or
adcl
or
jo
mov
cmpsl
in
inc
jg
mov
fidivrs
xchg
add
or
fadd
and
loopne
outsb
dec
shll
je
xchg
sub
add
mov
test
adc
fidivrl
sub
mov
dec
lret
cmp
xor
jb
sub
add
adc
movsl
dec
shl
inc
jmp
loop
and
arpl
dec
orb
sub
loope
add
push
xchg
pusha
repz
mov
into
loope
int
dec
js
loope
sub
rcrb
loope
fwait
shl
loope
xchg
sub
xlat
sub
popf
mov
loope
je
pushf
xchg
test
sub
add
push
pop
shl
cwtl
dec
xchg
dec
jno
loope
aad
xor
mov
test
mov
lock
loope
ret
push
loope
jmp
loope
pop
push
jo
adc
loope
les
dec
adc
mov
mov
loope
jns
sbb
xchg
loope
inc
cmpsb
ret
sub
inc
loop
movsb
dec
sahf
sbb
or
mov
mov
and
xchg
loope
loope
xorl
mov
pushf
xchg
add
pusha
test
or
and
sbb
dec
jno
adc
popa
andb
test
or
push
mov
and
sub
mov
or
push
popa
dec
jge
dec
stos
dec
addb
mov
jnp
xchg
jo
int3
inc
add
inc
cltd
mov
stos
pop
push
aam
int3
inc
hlt
outsb
add
dec
adc
xchg
and
lea
push
addb
push
xor
adc
dec
adcb
pop
xchg
pusha
adc
mov
gs
sarl
add
and
int3
add
int
inc
mov
inc
dec
ret
inc
dec
cmpl
xchg
and
and
mov
sbb
test
dec
sbbb
adc
and
xchg
add
xor
pop
repz
xchg
mov
lea
mov
rcll
adc
sbb
sbb
inc
xchg
ret
push
add
cwtl
and
inc
dec
sbb
lds
xor
inc
inc
js
push
insb
xchg
and
js
and
adc
xchg
jnp
dec
loopne
pusha
xchg
inc
scas
loope
pop
xchg
inc
les
repz
dec
cmp
sub
pop
xchg
xchg
jo
inc
lcall
test
cmp
inc
out
mulb
and
xor
add
and
int
test
inc
es
fnstsw
shll
ret
dec
aam
push
inc
pop
fisttps
jo
adc
sahf
mov
movsl
push
jbe
xchg
or
adcb
int3
xchg
add
push
fs
add
int3
inc
push
inc
inc
push
xor
es
dec
ret
addb
push
mov
cmp
lcall
andb
and
fwait
mov
jl
int
test
and
fldcw
adc
stos
xchg
mov
pop
clc
and
dec
imul
jae
popa
jns
addb
fistpl
and
mov
dec
ret
jmp
xor
xor
and
inc
popa
adc
mov
add
mov
popa
xor
dec
pop
push
push
xor
popa
xchg
and
inc
sbb
sub
inc
incb
ret
jp
stc
jmp
dec
adc
faddl
cmpsb
divl
sub
xor
imull
mov
jle
imul
mov
and
cmp
and
hlt
aad
mov
sub
mov
pop
xor
inc
cmc
inc
jnp
pop
mov
inc
inc
fsubl
inc
mov
loopne
js
xor
mov
insb
iret
mov
add
push
aad
dec
inc
testl
sub
mov
es
int3
xchg
add
icebp
cmp
inc
sub
mov
push
das
cmp
jl
xchg
pusha
sets
jb
adc
mov
inc
fsubs
sbb
inc
xchg
pusha
add
sub
pop
inc
roll
fdivs
xor
xchg
adc
gs
mov
inc
mov
mov
popa
xor
inc
jmp
jo
add
dec
adc
jo
in
repnz
inc
cmp
xchg
add
xchg
inc
mov
loope
jno
push
inc
dec
adc
adc
mov
loop
sub
mov
mov
push
inc
aas
xchg
inc
mov
rorl
inc
or
and
les
and
adc
sbb
ret
nop
sbb
mov
lock
outsb
repnz
data16
lcall
add
sub
mov
and
stos
rolb
jg
imul
cwtl
and
daa
dec
ret
adc
jo
jg
cmp
jns
mov
loope
fwait
jno
inc
ret
add
add
dec
inc
mov
scas
adc
rcl
inc
pop
dec
shrl
rcll
xor
outsl
sbb
sub
les
mov
loope
cmp
cmpsb
or
mov
mov
jecxz
sbb
cwtl
and
dec
jo
adc
mov
rolb
shlb
shrl
adc
mov
inc
ror
adc
xchg
and
dec
sub
push
inc
dec
sub
and
into
test
lcall
loope
jecxz
or
mov
mov
push
mov
inc
js
push
xor
inc
xor
adc
movsl
inc
sbb
sub
sub
lods
ja
mov
repz
push
mov
pop
inc
daa
leave
jnp
inc
int
inc
mov
mov
inc
pusha
xchg
and
std
es
sub
adc
and
fiadds
lods
push
inc
loope
les
repnz
mov
inc
fnstenv
mov
les
dec
shrl
shrl
sbb
inc
ss
adc
out
inc
or
xchg
rorb
dec
adc
xlat
jp
lods
dec
adc
lods
mov
push
and
jo
inc
and
scas
test
test
test
int
inc
pop
mov
popa
sbb
mov
inc
and
and
test
or
xchg
inc
push
lahf
xchg
int
add
mov
in
push
mov
mov
mov
lcall
int
sub
and
bound
mov
popa
lock
dec
inc
and
lods
dec
rcll
cwtl
inc
mov
mov
inc
dec
adc
and
push
xor
and
js
mov
loop
into
xchg
test
lock
mov
pop
xchg
inc
inc
int
add
push
inc
dec
ret
sub
and
scas
sbb
inc
pushf
or
cli
loopne
xchg
and
pop
lcall
push
mov
dec
inc
sub
js
inc
dec
adc
and
add
jbe
adc
in
out
adc
push
int3
inc
mov
xchg
and
xor
xchg
loope
pop
xchg
inc
jmp
and
sub
add
dec
inc
std
cmpsl
pop
lahf
and
inc
jmp
push
pop
loope
adc
add
cmpsl
xor
and
add
jnp
subb
sub
outsb
sbbb
jne
pop
enter
push
insl
out
sub
mov
loope
xchg
add
je
outsb
inc
or
data16
mov
inc
jmp
xchg
add
mov
add
fbld
inc
push
mov
cwtl
and
inc
and
inc
and
mov
add
sub
inc
dec
ss
int
test
shrl
mov
inc
inc
lret
arpl
ja
xor
xchg
and
in
inc
pop
xchg
jo
mov
cmp
inc
ja
fisttps
sbbl
shll
jnp
sarl
imul
lret
test
lcall
int3
xchg
inc
sbb
pop
xchg
and
inc
in
or
lds
xchg
add
cmpsb
mov
pop
pop
add
scas
dec
adcb
xchg
or
inc
scas
sbb
and
mov
inc
clc
mov
out
push
inc
das
inc
pop
test
push
sbb
dec
sbb
inc
jbe
loope
aad
inc
sahf
xor
add
xchg
and
or
add
push
push
add
sbb
int
sarl
or
xchg
out
inc
xchg
jo
and
xor
stos
pop
inc
pop
mov
test
xor
and
mov
inc
xchg
and
andl
aad
pop
xchg
inc
mov
inc
push
xor
lods
pop
inc
push
cld
loope
cs
jno
test
push
mov
inc
push
int3
imull
and
push
and
cwtl
and
and
andb
and
mov
pusha
scas
cwtl
inc
test
or
icebp
pop
and
push
pushf
fistl
dec
mov
inc
call
inc
aaa
loopne
aam
dec
inc
loope
sbb
enter
push
mov
inc
xor
push
incb
and
xor
jl
add
out
sbb
bound
sbb
outsl
push
mov
push
jl
push
call
xor
sub
adc
fnstsw
ss
mov
add
les
cmp
and
sub
inc
sub
mov
add
push
and
les
incb
sbbl
js
xchg
or
add
dec
ret
jae
inc
and
andb
es
stos
inc
mov
push
cli
or
and
lcall
or
or
and
cmp
and
bound
inc
int3
xchg
test
and
inc
and
jmp
loop
cmpsl
cwtl
inc
or
sahf
stos
pusha
jp
mov
adc
pop
xchg
inc
rcll
dec
int3
xchg
inc
clc
cltd
and
push
mov
inc
repnz
adc
sbbb
inc
dec
ret
adc
adc
das
push
imul
pushf
and
mov
ficomps
nop
cmpl
insb
inc
sub
sbb
sbb
adc
ret
inc
xor
dec
ret
inc
adc
adcb
inc
push
push
mov
rorl
loope
mov
mov
sbb
dec
mov
pushf
cwtl
inc
cmp
or
push
inc
push
adc
and
cmp
and
rolb
inc
or
fildl
call
and
adc
and
pop
in
shrb
lock
subb
es
sbb
fwait
call
xchg
in
pop
sarb
je
pop
xchg
pusha
daa
loope
xchg
push
xchg
outsl
push
lret
jo
lds
mov
cmp
adc
inc
call
inc
add
scas
pop
xchg
adc
mov
and
dec
sub
loopne
lcall
mulb
push
inc
sub
push
xor
pop
or
xchg
jb
pop
xchg
add
xor
add
sub
stc
push
int
adc
add
cwtl
and
inc
and
data16
and
es
mov
mov
addr16
adc
inc
jmp
dec
push
dec
pop
xor
sub
js
enter
inc
shrb
inc
test
gs
inc
nop
mov
or
inc
add
and
dec
inc
xchg
and
xor
repz
out
ror
push
dec
out
repz
popa
data16
pop
stos
scas
push
mov
adc
mov
aas
pop
dec
ja
sub
inc
and
hlt
lcall
mov
sarl
mov
or
pusha
jb
add
add
je
jnp
cli
xchg
or
xchg
inc
shrl
sbb
rol
subb
inc
or
popa
sbbb
add
dec
jo
inc
fsub
adc
fimuls
mov
outsb
bound
dec
xor
adc
into
and
add
mov
sti
pop
mov
adc
dec
and
pop
bound
adc
add
daa
mov
inc
adc
ret
xchg
inc
insb
sbb
das
dec
inc
mov
pop
xchg
inc
es
and
bound
and
jmp
adc
mov
iret
jecxz
pop
mov
popa
leave
dec
inc
dec
xor
push
out
rcl
shrl
mov
aaa
int
test
sub
adc
pop
inc
dec
ret
sub
or
inc
inc
fs
pop
mov
shrl
inc
dec
adc
xor
idiv
adc
and
inc
xchg
add
dec
adc
pop
xchg
lock
push
inc
xor
outsb
and
inc
mov
rcrl
lret
pushf
inc
adc
lods
add
lea
inc
sbb
push
push
lret
push
roll
scas
and
sub
lahf
pop
mov
shl
mov
inc
sub
pop
xchg
xchg
lock
xchg
sub
test
movsl
pop
inc
int3
inc
mov
or
inc
dec
or
mov
sub
inc
push
faddl
les
aas
call
adcl
orl
sbb
mov
test
adc
jo
ret
inc
and
daa
or
cmp
dec
mov
xor
and
lods
sub
jmp
popf
xchg
jne
adc
add
or
dec
dec
jp
or
fiadds
push
add
adc
xor
dec
sbb
cmpl
mov
jo
or
ret
sbb
mov
mov
xchg
pop
push
popf
xor
mov
push
pushf
xor
or
mov
push
daa
sub
les
cmp
add
adc
push
aam
inc
mov
arpl
and
rorb
jbe
jno
sbb
push
call
lahf
xor
in
je
mov
adc
mov
into
mov
psubsb
test
fdivl
add
jbe
lret
out
or
jecxz
mov
or
sbb
aam
cld
bound
daa
or
adc
inc
les
lahf
or
loope
outsl
dec
sbb
fildl
loope
inc
cmp
or
or
inc
dec
push
and
inc
mov
test
xor
adc
and
mov
daa
or
test
adcl
jmp
jno
add
daa
or
sub
daa
or
ljmp
or
es
andl
jo
xchg
sbb
cmpsb
mov
push
and
std
or
mov
fdivl
mov
andl
xor
push
lods
push
rorb
add
mov
js
jae
je
adc
xor
sbb
adcl
sbbl
xchg
xchg
dec
sbb
inc
sbbl
loope
orl
add
or
popa
and
inc
sbbl
mov
mov
adc
add
enter
add
adc
je
xchg
lods
ret
jg
ret
mov
inc
sub
fsubs
mov
ret
and
push
inc
pop
adc
loope
ret
mov
adcb
jae
adc
jb
inc
into
in
jo
xor
call
adc
ds
cli
xor
sub
mov
mov
or
mov
adc
add
sbbl
adc
jle
dec
cmpl
pop
jns
scas
adc
xorl
addl
xchg
sbb
pop
ret
push
adc
ret
inc
ja
ret
pop
stos
cmp
popa
or
xor
data16
adcl
dec
or
loope
adcl
pop
daa
adcl
ret
cmp
data16
incb
push
das
cmp
repz
jns
mov
pop
call
and
or
loopne
fists
inc
push
pop
mov
sbb
ret
inc
jg
adc
jmp
ret
punpckhwd
scas
cmp
aam
js
cmp
xor
and
push
test
push
daa
orl
mov
cwtl
dec
add
ficoml
cmp
jp
loope
and
sbbl
lea
pop
sbb
lds
testb
or
cmp
mov
popa
xor
jne
adc
ret
je
loope
ret
sbb
addl
or
cmp
push
pop
sub
cmp
sbb
call
inc
daa
or
mov
loopne
and
addl
ret
xchg
hlt
orl
jb
ret
sbbl
dec
xorl
scas
pushf
mov
sbbl
or
or
mov
fidivrs
add
mov
rcll
rorb
addl
inc
mov
popa
or
fiaddl
sub
or
xor
decl
cltd
add
adc
push
enter
popf
xor
loopne
and
xor
pusha
mov
mov
insl
and
xorl
addl
jae
jne
or
add
ret
ret
pop
mov
dec
jo
cmpb
adc
addl
insb
movsb
mov
push
daa
or
mov
adc
enter
mov
add
test
mov
push
adcl
adc
push
sbbl
adc
cwtl
cmpsb
mov
pushf
xor
dec
xorl
popf
mov
sub
and
and
or
jo
cmp
pop
pushf
add
or
nop
add
push
loopne
jo
scas
or
xchg
or
sahf
mov
push
mov
adc
push
cmp
cmpsl
push
roll
ljmp
dec
daa
or
sub
addb
push
xor
and
push
pushf
cmpl
test
push
incb
dec
pop
and
xor
dec
testb
test
addb
adc
sbb
lahf
xor
or
shll
mov
pushf
pusha
adc
xor
fsubrs
inc
sub
sub
call
ret
shrb
add
sbb
loopne
and
mov
popa
or
pusha
les
popa
aad
and
andl
pop
sbb
test
and
test
or
xor
orb
and
addl
sbb
pop
aas
addl
addr16
cmp
popf
xor
popf
xor
xor
jo
inc
and
inc
pushf
add
test
adc
test
orl
xor
xor
out
pushf
xor
push
xorl
fcomps
ret
add
xchg
push
push
sbb
outsl
cmp
aad
jmp
sbbl
les
xchg
jno
cmp
andl
xor
loopne
pushf
or
loopne
add
loop
jmp
lds
addl
sub
push
gs
loope
aad
add
lcall
add
pop
loopne
jg
and
jnp
or
add
loop
and
push
or
xchg
in
xorl
mov
xchg
pushf
adcl
adc
rorl
mov
xor
mov
xchg
rolb
xor
adc
call
insl
sbb
and
sbb
ss
adc
test
xchg
out
mov
cmpsl
mov
mov
popa
or
push
ljmp
fcoml
sbb
pop
xor
xor
into
fnstcw
orl
adc
es
xor
or
adcb
push
ret
push
ret
js
or
adc
popa
or
lcall
bndldx
mov
popa
or
adc
int3
sbb
ret
dec
fiaddl
cwtl
outsb
pusha
xor
adcb
addl
adc
rolb
sbb
addl
loope
sub
or
ret
sti
adc
push
popf
xorl
adcl
into
mov
xchg
call
adc
popa
push
orl
xchg
push
orl
sbbl
sbbl
push
addr16
orl
or
daa
addl
fdivl
adc
or
xor
icebp
and
popf
andl
ficomps
push
in
sub
inc
or
adcl
cmp
aad
mov
popa
orl
popa
or
andl
outsb
or
ljmp
adc
sbb
popa
subb
daa
subl
subl
add
adc
inc
jno
lcall
sub
jno
adc
xchg
icebp
adc
jo
sbb
sbb
or
cmp
pop
daa
or
movl
or
cmpsl
daa
or
dec
dec
addl
add
ret
mov
gs
js
movb
loope
sbbl
pop
enter
push
jge
mov
pop
inc
scas
ljmp
popa
or
movsl
test
and
xchg
adc
cwtl
cmp
subl
repz
mov
or
lcall
sbbl
inc
daa
loopne
and
ret
adc
sbb
dec
xor
popf
xor
cmp
aas
mov
cmpl
xorl
jnp
mov
add
push
xorl
xchg
push
repnz
loop
sbb
cli
addl
popa
mov
inc
jb
orl
or
clc
jns
loopne
and
jecxz
xchg
cmp
or
and
pop
xchg
test
orl
orl
aad
push
sbbb
mov
push
dec
adc
sub
mov
orl
test
xchg
andl
adcl
add
mov
js
push
in
xchg
stos
dec
push
mov
call
adc
test
popa
adcl
test
cmp
sbb
ljmp
add
pop
orl
cmp
shll
add
dec
xor
popa
cmp
xchg
or
leave
cmp
jmp
xchg
cmpsb
pop
imul
sub
push
adcl
nop
inc
jb
jle
pop
add
inc
add
jge
adc
dec
sbb
andl
push
add
je
and
jne
mov
xchg
xor
xor
cmp
mov
jae
adc
xlat
adc
inc
sbbl
jae
sbbb
ds
dec
sbb
jne
sub
or
lock
mov
xor
jmp
loopne
xor
test
add
sbbb
and
test
adc
js
push
pop
popf
xor
xor
or
pop
stos
mov
add
mov
or
dec
nop
or
dec
lds
lea
daa
sbb
or
loop
adcl
jmp
fiaddl
xor
dec
sbb
daa
or
sbb
push
mov
mov
outsb
sbb
lds
addl
and
xchg
orl
adc
cmpb
push
mov
mov
xchg
inc
adc
jns
sub
and
fmuls
push
pop
shlb
aad
mov
and
and
jo
jo
addl
andl
push
or
daa
or
sub
dec
add
aaa
aas
mov
lret
push
mov
lods
jge
add
lds
inc
fwait
dec
in
popf
xor
sbb
lcall
data16
sbb
adc
cmp
pop
jne
ss
loope
dec
sbb
daa
or
add
or
sbb
ret
adcl
enter
mov
push
enter
lahf
call
rorb
xor
loope
clc
andl
orl
insb
lods
rorb
inc
mov
scas
push
aaa
adc
cmp
xchg
orl
mov
inc
add
orl
or
dec
roll
push
daa
adcl
xorl
orl
push
popa
subl
pusha
js
addr16
and
ret
cmp
mov
pop
mov
dec
subl
ret
nop
adc
pusha
xchg
sbbl
shlw
ret
test
add
xor
xor
xor
mov
xchg
popl
jo
xorl
cmp
ja
sub
xor
sub
test
push
xor
jnp
test
mov
inc
mov
inc
jae
mov
inc
addl
cmpsb
orl
pushf
adcl
jmp
adc
into
cmp
or
xor
add
and
sub
orl
dec
push
pop
rolb
addl
dec
orb
xor
sbb
sbb
or
pushf
insb
and
sbbl
test
ret
mov
test
sub
add
mov
jo
push
adcl
and
add
cmpl
dec
or
push
loopne
add
mov
mov
and
push
mov
and
jl
ret
and
dec
sbb
mov
popf
xor
push
aam
push
push
mov
xorl
mov
ret
addl
sub
je
xorl
adc
jbe
ss
cmc
mov
adc
cmpl
outsb
orl
push
lods
adc
xorl
rorl
adc
stos
sbb
daa
or
xchg
daa
or
add
addl
bound
orl
popa
or
mov
xor
cmp
adc
sbb
int3
andl
push
push
xorl
and
or
or
adc
lcall
pop
or
cmpsb
mov
cmp
addl
xchg
mov
test
lods
stos
imul
repnz
push
ds
daa
or
lret
test
mov
pusha
and
popa
rorl
dec
sbb
test
rol
jge
or
les
leave
pop
mov
sarl
loopne
shll
out
dec
pop
xchg
lods
loop
inc
and
and
and
loopne
and
daa
or
lock
rcll
push
add
jno
shrl
daa
or
test
popa
or
or
or
popa
mov
pop
inc
sub
xor
lahf
call
mov
dec
sbb
adc
or
mov
and
aam
rcrl
movsl
xchg
call
dec
scas
cmp
mov
adc
mov
jl
and
adc
mov
sbb
test
outsb
loope
dec
sbb
daa
or
stc
and
adc
cmp
ret
cmpsb
mov
jp
mov
push
fsubl
adcb
dec
mov
adc
ja
adc
adc
call
mov
in
xor
cmp
adc
pop
jo
cmp
mov
ret
push
mov
test
cmp
imul
add
jmp
or
dec
pushf
mov
in
adc
ds
cmp
div
cmp
lret
xchg
jno
mov
and
adc
fwait
dec
sbb
popf
xor
cmp
mov
or
mov
jo
jns
popa
or
mov
mov
mov
jl
inc
add
mov
orb
mov
data16
bound
lods
dec
sbb
test
lock
clc
sbb
cmp
jge
or
sbb
dec
enter
iret
and
addb
and
mov
test
ret
jl
add
ret
or
scas
or
and
cmp
mov
xchg
xchg
mov
mov
adcl
sbb
inc
adc
dec
sbb
jne
mov
push
out
ds
enter
adc
mov
fldl
and
or
daa
or
or
and
adcb
cmp
jbe
aas
pusha
mov
sub
inc
mov
dec
inc
dec
aam
mov
mov
sub
daa
or
push
ret
inc
xchg
pop
test
fdivl
mov
xor
loop
ffreep
rorb
inc
mov
xor
jbe
dec
rorl
mov
or
xor
dec
sbb
jle
jno
adc
add
test
or
ds
mov
int3
pusha
pushf
mov
xchg
cwtl
imul
test
dec
jno
push
xor
rorl
mov
push
daa
or
xlat
dec
cmp
test
mov
sub
insb
sbb
or
dec
and
inc
mov
daa
mov
sbb
cmpl
adc
je
mov
dec
push
fcompl
dec
loope
fs
cmp
or
or
mov
add
mov
test
mov
popf
mov
jno
mov
or
mov
adc
mov
ret
test
stos
test
cmp
out
inc
push
pushf
xor
sbbb
cmpsl
aad
dec
sbb
sbbb
push
mov
int3
mov
xchg
dec
mov
clc
fiadds
pop
je
test
aad
mov
loopne
mov
daa
or
xlat
xor
adc
daa
or
inc
mov
movsb
and
jo
cmp
testl
popa
mov
jo
or
js
or
call
subl
sbb
aaa
cmpsl
in
cmpl
pop
mov
filds
add
neg
jo
xor
lret
loop
and
into
mov
mov
mov
scas
data16
mov
cltd
inc
cmpsb
test
fcoml
nop
lock
lock
mov
pop
daa
add
pusha
pop
test
dec
dec
pop
xchg
daa
mov
mov
mov
adc
rorb
inc
mov
and
mov
movsb
pusha
mov
push
pusha
aam
push
repnz
or
mov
es
mov
adc
pushf
xor
ret
shll
mov
mov
and
stos
mov
inc
push
xor
sbb
pop
pushf
mov
cs
mov
pop
daa
mov
mov
mov
lds
mov
loop
mov
jno
mov
daa
or
push
dec
mov
jnp
fadd
or
sub
out
loop
and
ret
xchg
mov
dec
pushf
xor
ret
xor
daa
or
mov
jo
mov
jo
fildl
mov
cmp
adc
jl
ds
push
xor
cmp
call
lahf
mov
loop
and
call
ret
ja
mov
btr
call
pushf
xor
dec
sbb
daa
or
test
mov
jo
fadd
or
pop
es
loop
and
ret
outsl
pop
daa
or
push
mov
mov
loope
dec
sbb
daa
or
in
mov
inc
daa
or
mov
or
inc
je,pt
sbb
and
xchg
and
add
or
in
push
adc
cmp
jo
loopne
popa
or
ret
push
jo
xor
popa
loop
xor
push
mov
xor
popa
or
ret
mov
test
mov
or
inc
push
loope
adc
pop
daa
or
es
test
push
or
xor
cmp
negb
and
jne
mov
jmp
mov
xlat
or
scas
adc
daa
or
in
push
scas
mov
in
push
popa
mov
pop
cltd
or
test
adc
and
lret
or
jmp
mov
js
or
mov
sbb
inc
xchg
cs
mov
icebp
adc
rorb
add
cmp
mov
add
mov
lods
dec
mov
and
cld
mov
xor
xchg
inc
or
popa
or
loop
dec
jo
adc
and
jge
or
push
bound
jmp
and
mov
das
callw
xor
je
je
es
ret
push
and
adc
daa
or
cmpsb
mov
or
dec
shrb
fcoml
ds
inc
call
dec
mov
sub
mov
rorl
inc
js
mov
js
mov
dec
mov
add
js
or
loopne
and
jbe
sub
cwtl
cmp
js
aaa
rorl
mov
cmp
ret
add
call
stos
adc
xor
pop
rolb
mov
add
mov
in
and
sbb
sbb
or
dec
sbb
sub
inc
add
stos
sub
popa
mov
popa
or
call
mov
or
and
or
popa
mov
cmp
push
xor
add
or
or
dec
test
mov
and
cmp
xchg
inc
pop
inc
daa
or
jle
popa
or
or
es
adc
daa
or
scas
mov
sbb
dec
sbb
inc
push
arpl
rorb
ret
push
mov
dec
sbb
or
cmp
loopne
mov
xchg
xor
cmp
sub
stos
call
adc
dec
mov
je
mov
lds
inc
mov
pushf
xor
cmp
ja
mov
pop
dec
mov
sbb
and
test
mov
xor
lds
mov
dec
jo
adc
xor
stos
mov
xchg
test
popf
xor
adc
add
sti
mov
jecxz
mov
rcrl
mov
mov
mov
dec
sbb
or
fsubr
add
ret
loop
sahf
cmpsb
out
add
mov
ret
xor
popa
or
fisubl
push
xchg
rorb
stos
loopne
jle
cmp
mov
xchg
mov
sti
loopne
popf
xor
inc
sub
and
pop
adc
cs
cmpsl
test
cmp
cmp
mov
enter
je
adc
adc
mov
movsl
jl
mov
mov
test
mov
data16
lds
scas
pop
movl
imul
and
call
call
lea
ret
inc
mov
daa
call
mov
loopne
and
loope
mov
movsl
dec
mov
sbb
ret
dec
mov
pop
jne
push
out
out
leave
adc
popf
xor
rorl
xor
jecxz
and
test
shlb
jo
popf
mov
mov
sbb
mov
or
into
and
ret
jo
adc
pushf
bound
icebp
add
bound
imul
adc
insl
adcb
jo
mov
pop
fidivrl
inc
xchg
ret
jle
aaa
stos
adc
add
and
loop
adc
ret
mov
movl
pushf
mov
jno
mov
sbbl
sub
daa
or
outsb
mov
pop
push
xchg
push
test
inc
xor
popa
jo
pop
mov
cwtl
inc
inc
daa
or
dec
sbb
loop
mov
push
cmp
add
mov
ret
and
ret
scas
mov
inc
mov
adc
lock
and
push
mov
ret
mov
push
adc
notb
pop
add
or
push
adc
out
aas
add
ret
inc
add
inc
add
push
add
mov
add
xchg
int3
sarl
adc
sbb
rcpps
aas
pop
int3
xor
push
or
mov
xlat
add
cwtl
popa
rorl
aas
cwtl
popa
or
shl
rcrl
cmp
adc
push
mov
or
xor
roll
out
cwtl
popa
shll
shrl
pop
xor
sarl
sub
jo
lock
shrl
mov
in
sbb
push
gs
jle
push
jns
mov
data16
sbb
mov
shrl
js
rcr
lahf
ss
sbb
xchg
jle
out
inc
push
enter
jge
xchg
mov
jo
cmpb
or
rcll
pop
cmp
popa
push
out
xor
adc
cmc
jl
lock
adc
xor
roll
inc
xor
mov
push
xor
sub
roll
xor
xchg
int3
shll
sarl
aam
rcr
cmpsb
in
or
inc
loope
jl
out
jns
lds
or
in
push
jb
jl
or
xchg
add
pop
jl
adc
cmpsb
sbb
add
or
cmp
mov
xchg
out
inc
ds
adc
cli
or
xor
shll
mov
inc
int3
shll
daa
and
lds
mov
mov
lods
mov
jno
andb
repz
xor
rorb
sbb
push
xchg
adc
and
ret
roll
mov
inc
add
add
shlb
sbb
xchg
sar
sub
test
adc
rorb
int3
push
add
add
mov
rol
inc
xor
pop
xlat
or
lock
or
mov
lds
mov
sbb
add
mov
sbb
or
movsb
and
fcomps
dec
xor
imul
rorl
ret
adc
shll
dec
and
shll
loope
pusha
and
inc
jo
pop
test
xchg
or
fwait
sbb
sbbl
ja
insl
pop
xchg
adc
call
xor
outsb
xor
ret
rorl
or
or
sub
loop
cmp
iret
cs
ficomps
xchg
xor
ror
repz
xchg
push
or
xor
xor
adc
and
scas
rcl
ljmp
gs
data16
mov
leave
push
adc
jge
les
add
cwtl
popa
or
add
movsb
jns
or
mov
lcall
jecxz
add
or
rcr
fsubs
push
xor
push
and
jno
push
push
cwtl
popa
or
in
push
and
test
lods
test
inc
xor
add
popa
inc
popa
lcall
js
pop
xor
bound
out
cmp
dec
sbb
ja
cwtl
popa
or
lcall
enter
push
push
popa
or
mov
and
cs
shl
adc
ret
adc
xor
rorl
add
pusha
mov
adc
inc
rorb
xor
cmpsl
pusha
rcrl
push
and
lock
jne
out
push
and
shll
or
mov
xor
ljmp
or
add
lret
fs
popa
or
adc
mov
das
inc
call
int
cmpsl
sbb
ja
xor
cltd
sbb
mov
rorl
add
shrl
mov
scas
mov
add
or
pushf
shll
fcoml
ror
test
sbb
dec
and
aam
push
or
fldl
xor
inc
push
roll
mov
rorl
scas
fadd
or
shrl
sbb
and
pushf
or
push
sbb
dec
pop
rol
out
lock
popa
or
ret
mov
sbb
or
rcll
push
push
imul
push
dec
xchg
sub
addr16
and
jb
shll
call
sbb
add
roll
loop
sbbb
test
jmp
inc
push
rcr
jo
pusha
out
lret
icebp
stos
data16
push
cmpsl
shll
mov
lcall
aam
shll
ret
loopne
xchg
adc
cmpsl
push
jl
mov
adc
xchg
fsubr
data16
shll
sbb
adc
sub
add
jno
fisubrs
js
lea
shll
dec
fwait
cmpsb
xchg
popa
or
nop
push
xchg
jae
cmp
je
or
push
xor
adc
aaa
in
ret
adc
cmp
out
adc
sbb
ret
sarl
adc
scas
xchg
ret
or
subl
sarl
shrl
push
inc
data16
sbb
push
xchg
shll
jns
push
inc
or
lcall
rcrl
sub
aad
pop
scas
rorw
mov
mull
xor
adc
xor
push
sub
in
insl
int3
pop
jmp
popa
or
adc
or
aad
sbb
add
arpl
or
rcll
jmp
push
jo
shl
fidivrs
dec
push
xor
dec
cmp
and
xchg
sbb
adcb
shll
mov
inc
cmp
mulb
shll
popa
shl
mov
ror
test
cmp
call
int3
shll
xor
cmp
or
lcall
shrl
xchg
out
sbb
xchg
fsubrs
sub
test
jo
xor
in
in
push
xor
nop
in
fdivl
adc
sbbl
and
rcrb
mov
mov
mov
jg
fisttpl
aaa
xor
loop
lcall
loope
addr16
insb
rol
push
pop
out
sub
insb
fwait
jne
rcrl
xchg
jns
or
call
scas
rcrl
repnz
call
xor
adc
xor
adc
sbb
in
or
mov
out
loop
or
push
vpsrlw
shll
sub
ljmp
and
add
xchg
and
or
mov
and
mov
cwtl
inc
pop
fmull
test
shll
adc
pusha
mov
add
movsl
jnp
shlb
std
pop
popf
cwtl
popa
or
mov
ret
test
xor
rcll
fsubs
and
testb
or
sbb
inc
mov
mov
sub
push
push
in
pusha
cmp
xor
jg
sbb
inc
push
popa
add
insb
inc
rorl
xor
rol
or
shrl
xchg
sub
xor
adc
orb
addr16
inc
enter
popa
or
dec
xor
mov
push
loopne
int3
xor
jns
data16
cmp
push
popa
cmpsb
test
or
shlb
ror
add
xchg
bound
ret
adc
inc
jle
pop
inc
xor
addr16
xlat
or
rcll
mov
xchg
push
cmp
or
rorl
rorl
cmp
out
inc
sbb
sbb
scas
out
pop
rorb
push
mov
ret
adc
popf
je
ret
ror
push
sar
lahf
sub
mov
nop
add
rcll
sbbb
mov
sub
pusha
xchg
cmp
or
imul
add
ret
adc
sbb
shrl
roll
mov
and
xor
adc
adc
pop
outsb
xchg
fadd
shll
adc
rorl
paddusw
roll
pop
aas
imul
ret
adc
in
mull
push
xchg
or
adc
imul
cs
pop
xor
fisubl
and
or
xchg
mov
shll
mov
pop
cmp
push
ret
roll
mov
xor
out
push
inc
or
movsl
adc
rcrl
and
or
rcrb
push
and
push
push
adc
popa
or
or
xor
dec
sbb
test
inc
xor
xchg
inc
int3
xor
dec
add
int3
xor
lret
shll
test
dec
xor
xchg
sbb
rol
sbb
mov
jge
outsl
inc
pop
or
imul
pop
mov
pop
jle
out
xchg
aas
lods
fbstp
pop
xor
adc
add
imul
sub
xor
stos
push
pop
mov
mov
jle
adc
adc
xor
push
ret
push
ret
loope
add
push
xor
rorb
cwtl
rcrl
rorl
add
mov
xor
inc
cwtl
popa
or
add
ret
adc
and
rorl
rol
inc
or
inc
xor
adc
popa
rol
push
or
adc
shll
loope
call
jb
dec
fsubrs
mov
jb
dec
mov
xchg
or
push
ret
adc
imull
dec
in
pop
xor
stc
push
mov
sbbb
adc
or
inc
sub
xor
push
push
mov
int3
xor
adc
jg
shll
or
mov
rcr
out
adc
xor
ljmp
adc
fsubl
mulb
mov
dec
pop
call
pop
int
test
sbb
add
or
or
mov
or
mov
inc
imul
xor
push
ret
adc
xchg
fwait
and
adc
cmp
sbb
sub
rclb
data16
shll
popf
mov
mov
adc
add
out
adcl
adc
lcall
xor
cwtl
popa
or
sub
in
sbb
and
movsl
xchg
loope
pusha
xchg
and
inc
xor
sbb
lret
sbb
imul
fldenv
fcoml
push
push
ror
fmuls
or
or
stos
inc
pop
push
adcb
adc
aad
roll
xor
ret
shrl
sarl
int3
data16
inc
pusha
rcrl
xor
outsb
mov
xchg
shl
repz
sub
rorb
sub
sbb
popa
or
or
push
cmc
adc
xchg
data16
push
ljmp
mov
push
ljmp
sbbb
xor
lret
bts
push
aas
lods
int
add
aam
dec
lods
xor
jg
mov
xor
sbb
xchg
sub
pop
rorl
push
or
add
fadds
fwait
popa
rorl
shll
xchg
and
and
loope
mov
stos
ret
xor
or
ret
or
roll
xchg
pushf
out
or
mov
push
dec
jecxz
or
lret
inc
xchg
mov
jg
into
ja
int3
shll
ret
adc
je
or
or
cmp
subb
test
xchg
sub
jno
pop
rorb
lock
jnp
repnz
or
xchg
sahf
js
popl
xor
fimuls
push
pop
cwtl
popa
rcll
data16
jns
imul
into
dec
jp
test
sar
shlb
popa
xchg
lods
mov
pop
xorl
rcll
repz
and
jne
xchg
cwtl
push
cmp
data16
adc
sbb
inc
ret
sub
mov
ds
popa
xchg
movsb
int
push
and
mov
xchg
inc
movsl
movsl
sbb
xchg
faddl
int3
ret
adc
shl
into
out
push
xor
add
pop
xor
adc
mov
rorl
xor
ror
test
xchg
shll
or
in
push
dec
mov
data16
mov
push
push
sbb
lcall
lcall
inc
es
or
sarl
int3
xor
bound
shll
out
xor
shll
pop
pop
inc
sti
bound
lock
xor
xchg
sub
inc
xchg
rorb
or
xchg
dec
sub
popa
rcll
and
or
ret
shl
xor
out
roll
push
mov
xlat
adc
lock
int3
xor
nop
loope
mov
sti
jnp
cmp
or
push
loop
rorb
xlat
or
mov
or
mov
dec
mov
jmp
and
fisubl
addb
popa
or
sub
shrl
mov
or
ret
shrl
nop
cwtl
popa
sarl
xor
mov
popa
or
add
negb
add
add
rcll
shl
inc
int3
xor
and
rcrl
mov
jbe
inc
jo
shll
dec
or
rol
add
mov
sbb
ret
adc
dec
push
mov
push
xor
repz
and
iret
xor
dec
pop
adc
xchg
pusha
xchg
add
inc
mov
adc
jne
xor
dec
push
or
push
xchg
xor
push
xor
rcrl
jo
aaa
les
loopne
or
xchg
mov
xor
or
mov
or
divb
or
outsl
pushf
mov
outsb
cwtl
popa
shll
sbb
push
test
shll
movsl
popa
mov
popf
lcall
pop
rorw
and
rolb
or
rol
inc
sbb
rorl
add
jno
dec
sbb
inc
adc
mov
and
push
xor
shl
scas
cmp
ret
adc
aad
adc
adc
in
adc
adc
loopne
sbb
mov
sbb
push
int
shll
push
mov
test
loopne
push
movsl
dec
xor
int
add
sbb
int
add
faddl
rcll
scas
jne
add
ret
rcrl
lahf
push
ret
adc
xchg
rol
adc
or
faddp
xor
jne
mov
adc
xor
push
mov
add
lds
rcrb
shrl
fwait
bound
pop
int
test
push
pushf
out
and
rolb
jne
pop
mov
push
and
es
int
test
insl
shll
dec
push
sub
outsl
sti
pop
scas
out
xchg
popf
call
sbb
jns
and
scas
mov
rorl
mov
push
xor
icebp
pop
xchg
pushf
mov
nop
sbb
notl
rorl
xchg
rolb
adc
mov
out
fisubs
mov
cmpl
xor
es
repz
xor
cmp
rcll
jns
gs
rorl
or
jb
in
js
rorl
sahf
add
rolb
rcr
fstl
test
pop
xchg
in
xor
rol
sub
sarl
loopne
sbb
sbb
xchg
and
xor
inc
dec
lods
inc
inc
add
and
enter
test
int3
cs
xor
mov
sbb
and
shll
or
cmp
sarw
rolb
aaa
lds
shll
iret
in
ret
adc
add
push
pop
mov
lcall
into
shl
imul
xor
fimuls
test
or
or
xor
adc
add
xor
jnp
cmp
mov
popa
dec
call
sub
mov
and
pop
and
lds
ror
test
xchg
and
or
inc
int3
xor
sub
outsb
ja
bound
adc
cmc
or
push
xor
inc
pop
cmp
ret
sarl
popa
or
into
push
pop
call
xlat
arpl
and
shll
jne
add
ret
cltd
movsb
fcmove
add
inc
arpl
inc
pushf
and
or
loop
sbb
pop
sbb
add
push
mov
iret
repz
ret
push
daa
cmc
pop
mov
adc
jns
movsl
cs
push
loopne
xor
add
adcb
enter
orb
sbb
xor
and
mov
sbb
mov
cmc
mov
and
adc
or
call
inc
mov
or
pop
sbb
data16
ffree
inc
sbb
jns
and
push
aaa
cmpsl
dec
add
mov
and
or
rcr
inc
pop
aam
icebp
mov
xor
roll
cmp
inc
int
rcr
data16
cmpsb
rcrl
rol
dec
cmp
inc
or
test
or
pusha
push
inc
xchg
mov
lds
fdivl
inc
shrl
add
jecxz
jnp
xchg
sbb
rcrl
xor
or
add
mov
xor
leave
xor
pop
and
clc
push
and
in
sbb
add
andb
rcrl
inc
shll
cmp
shll
mov
and
test
mov
pop
cmp
xchg
mov
rol
dec
adc
xor
cli
cmc
xor
mov
fimull
add
and
cmp
lret
pop
inc
sbb
daa
ljmp
dec
test
xorb
dec
rorl
pop
xor
inc
mov
xor
icebp
cli
mov
rorb
sub
inc
in
inc
int3
xor
int3
mov
push
xor
adc
lods
xor
adc
cs
test
pop
into
shll
int
test
adcl
sbb
orb
lock
roll
sbb
test
or
lret
xchg
rorl
repnz
sbb
cmp
out
push
cmc
xor
rorl
shll
xor
xchg
ror
add
in
jl
sbb
cmp
out
dec
les
xchg
addl
mov
xor
adc
lock
or
stos
sbb
aad
inc
shl
nop
xor
xor
dec
cmp
pop
scas
jb
add
pop
data16
push
lret
shl
sub
xchg
pop
xor
sbb
ret
popl
test
xchg
data16
xor
adc
cmp
rol
int3
cmp
repnz
test
imul
mov
int3
shll
dec
rorb
dec
pop
xor
adc
dec
cs
xor
xchg
shl
int3
mov
push
add
or
jle
test
pop
mov
inc
and
xchg
mov
rcrl
loopne
jecxz
sbb
mov
shll
loopne
fisubl
adc
lahf
data16
adc
dec
imul
es
ret
adc
shrb
ss
scas
adc
roll
lahf
xor
or
mov
shll
dec
push
xchg
jnp
xchg
adc
outsb
daa
and
xchg
fdivl
shll
jecxz
hlt
rcrl
pusha
daa
jo
and
shl
sar
mov
xchg
fadd
or
pop
or
or
shll
popa
or
ror
add
aaa
shll
sbb
xor
inc
push
jo
or
adc
stos
pusha
xchg
cwtl
fcmovnb
sbb
inc
mov
adc
shlw
imul
inc
or
outsb
adc
push
or
cmovge
and
std
sub
imul
mov
and
shll
pop
stc
ror
test
cs
sbb
sbb
or
dec
dec
dec
xchg
pushf
out
arpl
or
shrl
int
test
rcrl
rcrl
jo
add
scas
shll
pushf
lcall
xchg
faddl
stos
pusha
sub
cwtl
rcrl
add
jmp
mov
rcll
sbbl
rorl
aad
inc
rcr
xor
push
rcll
shll
shll
rorl
pop
sub
rol
and
aam
rorl
ss
aaa
sbbb
cmp
outsl
xor
int3
roll
add
repz
inc
mov
sbb
xor
loop
test
and
mov
shl
popa
or
mov
cmpsb
dec
xchg
pop
daa
cwtl
shr
dec
and
xor
adc
xchg
test
out
sub
shll
shll
rcr
or
adc
stos
mov
pusha
xor
shrl
js
mov
rcll
ja
xor
stos
rol
or
mov
cwtl
popa
or
test
dec
mov
pusha
shll
popa
icebp
fidivrs
add
lcall
mov
popa
sarl
and
rol
inc
jo
shll
or
sbb
ret
xchg
movl
aad
adc
or
dec
or
ret
sarl
cwtl
popa
or
mov
add
xor
adc
xchg
push
pop
mov
popa
test
xor
sub
add
or
fdivr
or
faddp
or
pop
xchg
sar
sub
dec
nop
std
jmp
sbb
ret
pop
inc
mov
ss
rorl
xchg
std
loope
sbb
and
xor
push
add
pushf
mov
adc
cwtl
and
xchg
sub
ss
cmpsb
cwtl
mov
test
rcrl
shll
cmpsl
or
or
mov
xchg
jg
xchg
loopne
addr16
and
add
or
bound
mov
mov
mov
mov
mov
xor
adc
data16
jecxz
jae
shll
add
js,pt
sarl
jnp
mov
xchg
jecxz
or
js
shll
mov
xor
adc
add
iret
dec
ja
xor
mov
rcll
or
pop
or
pusha
adc
mov
xchg
jbe
adc
adc
xor
xchg
cs
mov
xlat
or
rcrl
ret
shll
daa
xchg
sub
xchg
sbb
addr16
mulb
nop
push
stos
sbb
popa
or
test
dec
roll
pusha
pusha
pusha
rcl
rcrl
rcll
or
xor
insb
lds
pop
mov
cmp
out
and
pusha
cld
lret
daa
bound
or
loope
xorb
adc
daa
orl
xor
loope
adc
cmp
cmpsl
xchg
adc
daa
mov
adc
or
cmp
push
aam
push
sub
or
loope
adc
add
add
loope
or
ret
jmp
adc
and
inc
pop
pushf
loope
or
ret
cwtl
loope
sbb
data16
sbb
sbb
and
pop
sbbb
mov
loope
adc
loope
xor
popa
mov
xor
pushf
je
xchg
pop
imul
or
push
pusha
loope
jbe
ja
xor
add
or
xchg
shl
sbb
cmpsl
cmp
pop
pop
push
jae
adc
mov
mov
xor
loope
lahf
push
push
aam
inc
loope
int3
xchg
rdpmc
adc
inc
mov
sub
pop
aad
loope
int3
pusha
add
loope
aaa
xor
and
jno
subb
cwtl
popa
or
cltd
bound
jo
push
sbb
inc
adc
insl
sbb
cmp
xor
test
sbb
inc
lods
popa
idiv
and
add
or
push
loope
mov
ret
popa
loope
pushf
es
mov
imul
frstor
dec
sbb
loope
decb
rorb
subl
jg
fwait
add
inc
add
adc
jmp
dec
jg
mov
clc
push
jo
nop
and
and
jbe
orb
in
pop
orb
stc
adc
decl
pop
push
call
mov
and
xor
imul
pop
xchg
test
adc
push
ret
adc
cmp
ret
or
stos
add
mov
dec
mov
aas
or
or
xor
pop
test
test
loope
dec
and
mov
xor
fisttps
mov
or
dec
xchg
jp
sahf
pop
stos
xchg
mov
or
fucomip
test
daa
or
mov
add
je
mov
popa
or
add
ret
or
or
mov
cmp
add
andl
xchg
xor
test
or
ret
adc
sbb
test
or
add
outsb
andl
ret
cmp
xor
out
test
and
push
sub
popa
or
xchg
add
inc
cmp
add
add
sbb
xchg
inc
rol
outsb
addb
xor
ret
add
ficoms
shrl
add
xchg
cwtl
xchg
xchg
sarb
scas
sbb
das
xchg
es
cmp
in
adc
loope
push
or
adc
aam
add
mov
mov
xchg
dec
add
mov
pushf
or
scas
xchg
add
or
lcall
inc
inc
xlat
loope
lea
push
or
pushl
xchg
adc
xchg
jmp
sub
push
add
inc
add
insb
sbbb
add
push
fsubrs
add
call
add
imulb
adcb
popa
or
push
or
add
mov
testb
push
add
jnp
or
dec
pop
aam
add
add
adc
adc
push
ret
int3
add
jg
popa
or
mov
mov
stos
add
nop
xor
sbb
push
push
add
inc
add
pop
je
push
pushf
imul
jo
and
test
aam
add
sbb
xchg
addb
rcrb
jne
push
xorb
cmp
ret
adc
adc
push
add
sbb
pop
add
ret
xchg
lods
xchg
cli
add
push
stos
add
mov
adc
xor
or
inc
sbb
js
inc
or
or
sub
aad
test
add
add
inc
rclb
loop
push
push
ret
add
dec
inc
or
push
ret
push
ret
incb
or
lods
inc
sbb
data16
pop
inc
or
sbb
add
add
loope
and
scas
push
mov
xchg
sub
jl
das
and
adc
add
sahf
adc
xor
or
aam
test
sbb
andl
add
aam
add
popa
je
add
cwtl
lcall
push
ret
scas
aam
add
pop
add
mov
test
or
stos
popa
or
and
or
xchg
ljmp
add
dec
aam
add
aad
adc
add
jne
mov
int3
mov
je
and
or
mov
test
xchg
mov
stos
add
xor
mov
xchg
bound
push
ret
push
in
adc
popa
or
mov
ret
add
sbb
sbb
add
jo
add
sbb
sbb
add
ja
xchg
cmp
jbe
sbb
in
jle
xchg
faddl
or
inc
loop
xchg
add
rolb
popa
or
scas
fwait
jno
and
mov
or
scas
xchg
push
and
add
loopne
xchg
xchg
push
outsl
subb
pop
jne
stos
popa
or
into
stos
xchg
insb
or
stos
popa
or
imul
cltd
push
add
test
inc
mov
sub
cmp
mov
sbbb
ret
in
xchg
push
aad
push
dec
jmp
or
mov
call
push
or
xchg
or
xchg
mov
add
mov
add
xchg
add
xor
cmp
xor
insl
push
cmp
or
sbb
sbb
or
lea
pop
imul
insb
push
incl
mov
add
cmp
or
cld
out
ret
popa
jae
xor
or
push
adc
and
and
orb
xchg
and
popf
dec
adc
sub
add
inc
xchg
add
in
add
stos
test
push
xchg
push
in
adc
nop
jle
push
ret
adc
push
ret
adc
push
pop
push
rolb
push
push
or
ja
or
xchg
xor
or
fldl
xor
popa
or
and
inc
mov
push
or
or
and
adc
or
add
add
push
ljmp
adc
cmp
repz
jecxz
adc
cmp
rep
jmp
subb
add
cmp
dec
inc
sbb
cli
sbb
incl
out
jmp
lods
mov
sbb
nop
lret
cmp
testb
add
add
insb
sbb
xchg
jle
ret
adc
enter
add
push
add
insb
cs
rolb
adc
shlb
xchg
adc
push
add
push
xor
xchg
idivl
pop
adc
pushw
aas
adc
jbe
adc
adc
push
ret
add
and
xor
pusha
add
cmp
push
ret
adc
sbb
call
inc
js
push
aas
loope
inc
or
xor
mov
push
or
test
insb
mov
add
or
add
xchg
dec
daa
xchg
mov
push
sbb
adc
pop
xor
cmp
push
or
sbb
add
adc
push
bound
ret
ret
add
mov
push
add
xchg
mov
ret
adc
popa
or
shrl
arpl
or
test
gs
push
ret
add
xchg
add
sub
lds
add
test
and
aam
mov
or
mov
add
push
loope
test
add
add
cmp
test
or
aad
test
out
or
sbb
mov
push
or
push
ret
adc
movsl
push
ret
adc
test
or
icebp
pusha
arpl
inc
ret
inc
xor
inc
enter
inc
aas
and
xchg
sarl
in
int3
pusha
test
test
cli
loopne
xchg
add
add
bound
jbe
pop
sub
inc
xor
add
cmpsb
nop
xchg
push
xor
add
pushf
add
sbb
inc
or
sub
add
loope
add
adc
in
inc
add
addb
add
popa
add
xor
xlat
mov
xchg
add
ret
push
and
test
jp
or
xor
stos
popa
or
lcall
cmp
sub
inc
add
adc
pop
or
mov
add
fimuls
jne
add
xor
xor
pop
mov
xchg
aas
pop
push
ret
adc
mov
inc
adc
xchg
repz
push
add
dec
cmp
ret
adc
sbb
test
or
aas
add
arpl
sub
push
add
mov
sbb
or
xor
mov
test
mov
add
jo
push
ret
pop
add
pop
mov
test
test
in
push
xchg
push
aad
push
or
adc
rcll
cmp
jmp
jb
or
mov
out
pop
add
popf
stos
popa
add
mov
aaa
cmp
push
or
push
sbbb
sbb
jo
inc
addb
sbbb
push
xor
outsb
jo
push
add
ret
cmp
or
orl
or
lea
fdivr
sub
push
sti
xchg
outsb
jmp
xor
jo
add
xchg
jge
inc
jo
mov
dec
inc
or
es
add
add
daa
sbb
cmp
mov
and
and
xchg
cli
clc
test
pusha
ret
adc
stos
add
and
inc
push
add
jbe
adc
fwait
gs
rcl
loop
stos
xchg
add
js,pn
ret
adc
dec
loop
add
outsb
push
and
lea
or
call
subb
inc
xor
aad
add
add
push
sbb
mov
add
in
inc
aam
add
out
fmull
push
ret
adc
lods
lea
add
sub
pushf
or
ds
xchg
clc
xor
jo
aam
subps
mov
add
addr16
mov
aaa
dec
and
add
aam
add
push
fs
es
lret
and
cs
add
es
xor
sarl
push
mov
add
js
push
ret
adc
sub
adc
add
sbb
pop
push
ret
add
into
scas
stos
popa
or
pop
ret
adc
dec
loopne
push
push
add
in
adc
sub
andb
mov
popa
add
inc
or
inc
or
imul
push
or
ret
adc
rorb
jo
push
add
and
sbb
push
test
bound
pop
aam
add
inc
pop
jle
andb
xor
mov
xor
pop
sbb
sbb
or
xchg
pop
cmpsb
and
inc
xor
scas
mov
cmp
xor
test
or
inc
add
add
push
pushf
stos
add
sbb
ret
adc
jne
add
xor
sbb
sbb
pop
lds
adc
stos
popa
or
jl
ret
adc
cmp
push
add
in
xchg
fcoml
lds
or
push
ret
stos
popa
or
frstor
mov
bound
es
popa
add
push
fisubrs
add
or
ficoml
adc
add
xchg
ret
ret
adc
add
push
add
ret
xor
shll
loope
xchg
sbb
add
xchg
cwtl
bound
stos
call
ret
adc
popa
or
or
inc
jns
cmpsl
test
xchg
mov
sbb
outsb
mov
ret
add
loope
and
add
dec
push
xchg
push
test
add
out
in
inc
das
push
push
je
scas
mov
add
xor
mov
pop
cmc
xchg
xor
test
or
push
dec
lahf
ljmp
xorb
repz
pop
dec
adc
aad
pop
pushf
or
ret
add
pushf
add
inc
lock
decb
daa
std
lods
push
or
mov
add
jg
scas
jnp
stos
popa
or
lcall
add
add
inc
mov
xchg
fdivl
add
adc
push
adc
inc
push
add
sahf
add
ret
add
in
pop
push
push
lcall
in
inc
push
ret
adc
xor
lea
fiaddl
fdivp
out
fsub
dec
xor
push
or
mov
sub
xchg
sub
nop
push
xor
mov
or
es
inc
jmp
adc
pop
xor
aaa
push
ret
add
and
test
mov
out
mov
sbb
popa
or
adc
adc
mov
imul
fsubl
fdivs
loope
mov
aad
lods
nop
add
inc
lds
push
push
daa
jo
nop
mov
add
push
icebp
mov
push
scas
mov
inc
cmp
dec
mov
inc
cs
or
or
jo
stos
add
add
jbe
mov
mov
or
push
ret
add
xor
popa
or
add
cmp
mov
add
or
inc
lcall
push
ret
adc
dec
mov
fsts
push
and
and
leave
cmpb
test
push
add
xchg
mov
and
stos
add
imul
pushf
xchg
push
aam
gs
test
iret
dec
add
shlb
add
divl
outsb
cmp
mov
test
add
fisttpl
pop
mov
add
add
push
popa
or
aad
int3
sbb
js
test
outsl
popa
xor
add
mov
add
int3
insl
lds
xchg
sbb
add
fsubs
add
mov
mov
or
push
nop
shr
add
ret
adc
incb
addb
push
lock
mov
pop
and
adc
in
push
add
inc
pusha
in
inc
mov
jmp
adc
inc
ljmp
push
jnp
ret
add
adc
lods
or
ret
addr16
add
xor
ljmp
or
enter
sub
add
imul
mov
gs
pop
dec
dec
xchg
mov
jge
push
or
mov
cltd
pusha
sbb
xor
or
movsl
jge
sub
subl
cmp
fwait
adc
push
rclb
add
aaa
push
ret
adc
imul
add
xchg
aaa
aad
test
inc
inc
mov
cmp
rcr
sbb
or
sub
adc
lods
aas
pop
aad
test
fnstenv
add
decl
in
je
xor
add
push
dec
pop
roll
ja
mov
push
pop
add
or
add
mov
inc
mov
stos
add
es
cmp
shlb
or
sbb
lods
mov
ret
adc
dec
add
xor
xchg
nop
dec
outsb
jo
push
add
add
sahf
add
leave
rolb
sub
popa
inc
mov
xchg
push
and
add
mov
adc
ret
adc
push
push
add
inc
rorl
add
add
add
xchg
xor
xor
or
aam
or
or
outsb
add
inc
mov
ret
adc
mov
xchg
les
adc
add
mov
mov
ret
add
push
ret
xchg
sbb
cmp
or
lock
push
rorb
add
and
add
xchg
or
or
push
rclb
push
add
dec
aad
test
or
rclb
add
xchg
outsl
pop
ret
adc
dec
ret
adc
push
push
add
sbbl
add
push
ret
jle
add
sbbb
or
cmpsb
aas
sub
loopne
arpl
rorb
daa
xchg
dec
mov
inc
and
xor
or
adc
add
inc
sub
inc
js
inc
push
pop
and
inc
xor
jmp
xor
push
inc
jo
or
mov
inc
pop
cmc
pusha
loope
and
inc
mov
inc
fwait
or
adc
les
dec
roll
and
or
adc
mov
popa
or
adc
adc
xor
xor
jl
add
xor
or
xor
push
dec
fcompl
int3
push
xor
mov
in
push
inc
add
pop
jl
aad
shrb
or
or
int3
push
push
jge
cmp
or
push
or
ret
cmc
adc
addr16
ja
into
mov
inc
mov
in
push
xor
inc
insl
jmp
sbb
int3
xor
adc
push
inc
dec
or
push
andb
ret
sbb
xchg
into
mov
data16
adc
insb
nop
dec
xor
inc
rorb
adc
add
jg
pop
enter
test
jg
xor
outsb
push
jecxz
cmpsl
jnp
data16
mov
mov
jo
cwtl
sbb
int
push
inc
inc
repnz
in
shll
rcll
adc
add
and
cwtl
cmpb
inc
push
call
xor
adc
sbb
inc
pusha
mov
rorl
xor
mov
or
les
xor
xchg
and
and
push
adc
xor
dec
inc
or
js
sbb
arpl
inc
sbb
in
int
inc
or
and
ret
lods
or
sub
stos
lods
enter
inc
mov
jo
test
aam
inc
xor
int
test
sub
pop
sub
shll
addr16
mov
imul
int
inc
mov
or
sbb
mov
sub
test
xchg
fmull
inc
popa
or
out
and
subl
adc
mov
mov
movsb
xchg
incl
pusha
xchg
inc
cmpsl
mov
test
inc
pop
cmp
inc
adc
cltd
xor
sub
sbb
inc
add
data16
xchg
and
push
enter
cmp
inc
xchg
cmp
add
inc
fisubl
mov
int
test
fsubs
xor
add
or
xor
or
and
sub
sbb
push
cwtl
popa
or
int3
xor
dec
inc
xor
add
add
inc
int3
inc
jg
mov
arpl
ret
inc
cwtl
sub
lods
inc
das
inc
clc
dec
xor
xchg
rorb
pop
and
sbbl
push
bound
popa
or
inc
data16
push
inc
or
js
dec
popa
or
inc
cmp
pop
xor
xor
lds
insl
and
or
inc
cmp
sbb
ret
adc
and
bound
sbb
mov
dec
xchg
addb
sub
sbb
sub
test
inc
dec
or
rorl
in
xchg
xor
mov
and
mov
push
xchg
sbb
jbe
inc
sub
inc
adc
inc
inc
int3
xor
bound
xchg
dec
cmp
pusha
scas
addb
scas
pushf
mov
sbb
jo
ret
adc
or
test
sbbl
or
jae
sbb
pusha
or
inc
test
ret
adc
mov
add
inc
aam
shlb
mov
andl
add
data16
or
xor
fimull
jp
push
addr16
pop
push
sub
in
jnp
push
push
xchg
stos
add
mov
lahf
inc
add
xor
inc
mov
in
add
data16
andl
add
push
mov
cmp
int3
xor
adc
ficoms
jne
xor
int3
xor
inc
xor
pop
scas
orb
xor
or
inc
add
pusha
addb
sbb
aam
inc
inc
subb
xchg
inc
popa
or
push
or
push
lcall
xor
ficoms
xor
adc
or
xor
adc
inc
les
adc
lods
jl
int
add
jecxz
dec
adc
or
inc
js
sbb
pop
dec
roll
bound
data16
cwtl
popa
or
inc
mov
mov
jg
pop
xor
inc
clc
into
sti
in
sub
mov
mov
ret
adc
push
xchg
xchg
pop
lahf
push
mov
or
sbb
push
subl
jo
inc
les
ljmp
pusha
mov
sbb
xor
shrb
int3
inc
and
sbb
mov
pop
push
ja
or
inc
enter
popa
or
add
xchg
jbe
insb
loope
sbb
or
mov
inc
push
ja
and
sar
xor
and
dec
mov
and
push
inc
push
mov
jl
outsl
aad
inc
sarl
add
push
int
test
sub
pop
enter
add
push
dec
sbbb
lock
inc
inc
clc
xor
inc
xor
xchg
int
lock
add
hlt
sbb
scas
fisttpl
xor
inc
call
xor
push
cmp
das
ss
mov
inc
push
pop
push
xor
inc
lods
data16
incb
and
lret
outsb
push
jo
xor
push
dec
push
and
xor
inc
mov
outsb
jns
mov
cmp
jne
push
mov
add
aam
inc
lock
inc
or
imul
xor
pop
xor
call
inc
subl
sbb
xor
push
insb
sub
mov
mov
rolb
inc
cmp
call
add
call
fstpl
dec
addl
adc
push
xchg
jp
outsb
xor
inc
gs
push
push
ret
adc
xor
in
popa
sarl
inc
and
push
or
js
push
inc
xchg
sbb
inc
pop
insl
jo
or
inc
adc
mov
sbb
pop
rorl
xor
data16
pop
inc
fwait
popa
or
inc
lcall
add
push
and
add
add
inc
xor
inc
sub
inc
cmp
inc
pop
inc
cmp
or
pop
mov
lds
sbbb
mov
inc
xor
adc
inc
sub
jmp
xchg
popa
add
hlt
sub
int3
lock
pusha
les
xor
fisttpll
sub
adc
sbb
mov
call
pop
adcb
sti
inc
sub
inc
sbb
addr16
mov
inc
pusha
jle
call
add
adcl
mov
inc
cmc
sbb
xor
stos
inc
mov
popa
inc
or
push
push
scas
inc
mov
aam
out
xor
jno
rorl
mov
xor
xor
xor
xchg
fmul
popa
movsb
push
ret
adc
pusha
popa
test
popa
or
xor
and
loope
cwtl
popa
dec
mov
cmpsb
sbb
popa
mov
lods
scas
cwtl
popa
popa
pop
test
xchg
popa
xchg
push
data16
repnz
ss
xor
inc
popa
sub
adc
les
add
xor
inc
out
xor
sub
cmpxchg
sbb
test
orl
xor
pop
fisubrs
push
data16
shlb
rcrb
lea
sub
loope
into
or
scas
imul
jo
lahf
popa
popa
mov
mov
xchg
push
dec
sbb
test
xor
sbb
or
ret
adc
popaw
int3
mov
ret
popa
rorb
outsb
add
rclb
ret
popa
les
pop
mov
popa
popa
add
add
or
popa
pop
or
xor
push
lock
inc
pop
int3
xor
iret
int3
xor
xor
xor
mov
es
or
or
mov
popa
push
add
popa
andb
xlat
or
cmp
test
popa
bound
sub
fnstsw
outsl
jbe
lcall
loope
xorl
shll
test
fsubrs
jbe
in
sbb
nop
adc
decb
std
jo
sub
adc
test
xchg
outsl
or
into
sahf
aaa
cwtl
popa
or
test
popa
pushf
push
testb
xor
adc
popa
xchg
pushf
out
fs
sub
call
and
pusha
dec
mov
pop
cmp
popa
mov
xchg
push
sbb
inc
sub
and
push
sti
mov
test
mov
enter
popa
or
pusha
xchg
or
popa
sbb
adc
nop
pop
xor
popa
mov
adc
or
add
add
sub
add
mov
xor
mov
aad
popa
out
mov
enter
xor
jo
popa
xor
dec
popa
data16
dec
push
dec
popa
or
mov
das
sub
popa
aam
movsb
lcall
push
popa
int
test
xchg
nop
dec
ret
adc
popa
imul
dec
arpl
cwtl
popa
or
adc
cmp
xor
jl
xchg
pop
sbb
or
mov
sbb
xchg
push
mov
insb
loope
and
add
mov
pusha
xchg
and
sbb
or
cmp
mov
inc
cld
sub
fistpll
push
rorl
int3
xor
addb
xor
adc
mov
sbb
adc
nop
mov
pop
xor
in
ret
xor
es
imul
test
pushf
out
mov
ja
mov
sbb
jnp
int3
xor
pop
movb
xor
jge
ret
adc
mov
data16
dec
mov
popa
or
sub
jmp
pop
popa
and
test
nop
out
test
xchg
les
pop
test
mov
test
sbbb
inc
push
cmp
int
popa
jno
adc
and
push
push
addl
popa
adc
mov
popa
or
or
cmpb
or
or
rorl
pop
js
ret
adc
mov
xlat
fidivl
negb
or
sbb
sbbb
sbb
dec
popa
aaa
adc
jle
and
and
add
or
aaa
pop
cwtl
popa
or
sbb
popa
popa
or
sbb
sbb
mov
add
popa
push
pusha
popa
test
add
jb
adc
xor
jo
jl
dec
fcoml
loope
adc
adc
aas
shll
popa
outsb
or
int
test
inc
xor
jl
andb
pop
add
pop
cmpsb
push
cmp
sbb
xchg
cmp
adc
pop
adc
popa
das
enter
sbb
sub
xchg
popa
lods
push
pop
popf
pop
in
aad
inc
popa
orl
mov
push
lea
xchg
xchg
mov
adc
les
loope
cs
add
test
daa
xlat
push
cmp
aam
and
or
mov
lods
pop
or
iret
insl
fisubrl
loope
sub
fidivrl
sub
jl
les
ret
and
xchg
sub
iret
leave
mov
loope
pop
js
jp
iret
leave
and
dec
sahf
fcomi
das
or
in
mov
xor
push
or
jae
leave
add
pminsw
sbb
xor
or
or
sub
xchg
pop
adc
shrb
adc
loope
das
pop
xor
loope
dec
sahf
fistl
inc
popa
mov
loope
xor
sub
pop
push
pop
add
or
push
loope
mov
call
dec
sub
xor
xchg
sbb
sbb
or
push
xchg
and
pop
xor
jg
inc
js
or
insl
imul
imul
bound
ret
loope
sbb
mov
xor
lret
in
imul
cs
out
xchg
xchg
or
frstor
inc
mov
and
fiadds
loope
imul
adc
adc
adc
adc
adc
fists
rorb
xchg
lock
loope
imul
loope
loope
and
sbb
dec
sub
and
cmp
test
push
lahf
nop
ljmp
testb
aam
mov
loope
bound
addb
call
vpmacssdqh
mov
dec
xor
pop
jmp
inc
mov
or
push
hlt
add
adc
push
loope
cmp
out
xor
test
fsubs
ds
jno
xchg
loopne
pop
rolb
loope
cmp
pop
fdivrl
inc
loope
adc
sbb
lods
adc
mov
pusha
sbb
fs
inc
cmp
xchg
loope
xor
mov
cmpsl
cmc
cmp
or
mov
outsb
mulb
ret
adc
push
loope
push
or
bound
adc
sbb
loope
shll
adc
sbb
xor
pushf
cmp
cmp
push
or
fdivrs
or
push
pop
mov
xchg
xchg
xchg
ds
adc
sbb
sbb
sbb
mov
dec
sub
or
bound
inc
sub
pushf
cmp
dec
push
bound
and
ret
or
jo
cwtl
jle
test
inc
loope
pop
sub
cmp
push
cmp
add
inc
leave
or
sub
test
or
mov
and
fiaddl
inc
loope
pop
and
cmp
mov
loope
and
jp
pushf
and
xchg
and
push
sarb
dec
inc
ljmp
pop
sbb
mov
test
or
loope
adc
xchg
mov
scas
inc
sbb
add
xchg
push
mov
xchg
loope
sbb
sbb
push
adcl
loope
fsubrl
push
sub
outsb
cs
lds
mov
adc
hlt
mov
cmpsl
bound
loope
incl
inc
or
mov
xor
cmpsl
loope
push
adc
sahf
out
add
movsb
xor
xor
stc
inc
xor
aam
mov
ja
mov
ljmp
test
inc
loopne
enter
add
add
sbbb
mov
adc
loope
addb
lahf
push
shrb
sbb
loope
pop
xor
test
dec
in
lea
dec
xor
add
test
or
inc
les
loope
dec
bound
ret
adc
clc
add
sub
loope
or
jo
loope
ret
adc
decl
or
inc
sbb
lcall
dec
fsubrl
push
ret
test
movsl
bound
loope
push
and
xchg
or
loope
mov
enter
jmp
cld
dec
lods
push
cmp
daa
aas
mov
out
push
loope
inc
mov
push
popf
sbbb
jo
mov
scas
icebp
adc
pop
or
loope
mov
loope
pop
mov
lods
lods
das
pop
push
into
ftst
dec
cmp
loopne
loope
cmp
dec
les
test
loope
add
adc
adc
sub
popa
loope
nop
call
les
sub
mov
adc
xchg
ret
in
ret
adc
sbb
inc
pusha
pop
loope
dec
scas
or
push
lds
add
fsubrl
and
and
stos
dec
and
sbb
add
arpl
xchg
push
in
adc
in
mov
xor
add
popa
or
jo
pop
std
shrb
sbb
xor
inc
js
fidivl
or
fcoms
ja
ret
popa
loope
sub
cmpsb
bound
loope
out
adc
inc
adc
loope
andb
fsubp
add
or
add
mov
out
cmp
dec
xorb
and
sbb
or
stos
add
add
cmp
loopne
decl
push
loope
inc
mov
sbb
loope
arpl
bound
ret
call
ret
mov
push
add
mov
sarl
and
pop
xor
shlb
adc
adc
ds
adc
stos
pop
pusha
dec
test
add
loope
nop
pinsrw
js
add
xchg
xor
and
mov
rorb
add
loope
lea
mov
test
and
loope
outsl
fcomp
inc
push
mov
rolb
mov
nop
dec
mov
nop
dec
sahf
inc
sub
add
jo
push
xlat
jns
jnp
push
pcmpgtd
pop
push
imul
fsubrp
nop
pop
mov
push
jns
cmc
push
add
sub
das
fsub
cmp
push
cs
or
ret
adc
popa
or
adc
loope
outsb
jo
ret
add
mov
sbb
sbb
pop
xor
loopne
out
push
or
sub
mov
add
xor
pop
enter
loopne
aad
xor
xor
mov
movsl
adc
adc
jne
stos
add
adc
sbb
shll
fsub
test
rcrl
loope
imul
xchg
sub
call
inc
or
loope
pusha
and
adc
adc
pushf
mov
adc
data16
std
inc
mov
or
xor
mov
xor
mov
cmpb
pop
lret
or
sbb
add
pop
fwait
jno
cmp
cwtl
xor
aaa
add
pop
inc
or
icebp
adc
or
or
sbb
pushl
adc
test
outsl
push
aaa
xchg
inc
jns
and
stos
lahf
shr
out
fs
pop
out
or
or
or
fdivrl
loope
int
add
cmp
pop
inc
fiadds
mov
ret
idivl
enter
mov
adc
enter
add
xchg
lret
inc
or
aas
xor
cmp
push
mov
sbb
cmpsl
cmp
cmp
xchg
loope
bound
sbb
loope
sbb
loope
pushf
pop
xchg
ja
xchg
sahf
jp
sahf
call
scas
cmpsl
adc
xor
popa
clc
adc
xor
adcl
adc
sahf
loope
mov
js
loope
or
leave
jnp
or
push
xor
inc
cmp
lock
mov
dec
or
fcomps
loope
sub
les
add
and
pop
xchg
adcl
ret
aas
add
push
bound
loope
movsl
or
or
adc
loope
pop
fsubs
lret
sub
sbb
pop
xchg
jge
mov
pop
cmp
nop
mov
loope
mov
xchg
jo
mov
loope
int
sub
movsl
mov
dec
imul
in
add
add
cwtl
push
and
popa
or
xchg
add
push
mov
loope
sbb
push
pusha
test
lret
cmp
or
bound
mov
loope
jo
sub
or
sub
dec
sbb
cmc
xlat
mov
or
push
or
push
dec
push
mov
fists
repnz
mov
loope
xchg
mov
fdivp
test
jp
sbb
push
pop
add
adc
adc
or
test
loope
jns
mov
mov
xor
pop
psubsb
or
push
push
or
js
loope
xchg
fcoml
cmp
mov
adc
jb
dec
idivl
lret
cld
add
xor
push
out
push
mov
xchg
es
add
sub
es
subl
xor
out
and
repz
stos
scas
inc
or
cmp
loope
add
add
push
adc
xor
daa
rclb
les
test
xor
orb
xchg
sbb
loope
stos
sbb
xchg
fdivrs
mov
sub
cmpsb
sub
xchg
je
push
or
mov
or
pop
pop
add
or
sbb
or
pop
cmp
stos
add
or
and
jbe
rolb
loope
or
jb
and
push
push
or
loope
ret
pop
shr
bound
inc
cmp
loope
ret
push
and
or
bound
loope
fs
lret
inc
call
xor
push
and
inc
loope
xchg
lods
and
sub
add
mov
loope
push
push
inc
or
loope
scas
imul
cmp
add
and
or
or
out
adc
loope
cmp
loopne
frstor
ret
cmp
adc
xor
fcoml
inc
mov
xor
cli
pop
sub
inc
inc
or
test
pop
xor
add
andb
cmp
and
sbb
or
push
pusha
push
and
adc
shrl
adc
push
xor
rorl
sub
loope
dec
or
popa
cmpsl
bound
ret
outsw
xchg
xchg
shrl
inc
call
dec
adc
rcll
in
dec
rorl
or
xor
add
or
adc
inc
insb
pop
clc
ljmp
mov
sbb
pop
add
rol
push
mov
xor
movsl
mov
out
int
outsb
add
lahf
mov
rorb
add
jl
mov
xchg
cmp
sbbb
push
xor
xor
lea
xchg
jp
mov
mov
xchg
dec
xchg
xor
std
aas
pusha
pop
adc
adc
adc
adc
rol
add
inc
rcll
loope
rcrl
inc
mov
ror
add
popa
and
inc
or
mov
leave
push
adc
movsl
push
push
sub
and
ret
rol
cs
or
push
dec
add
bound
rcll
fidivs
cmp
push
jp
inc
sbb
inc
inc
or
in
inc
lds
test
lea
cmpsb
je
sub
js
call
cmp
dec
mov
rorl
and
adc
rcl
test
outsb
or
dec
and
jne
fistps
shlb
adc
push
jg
add
push
pop
js
int
test
das
add
or
push
mov
adc
add
add
xor
add
cltd
push
subb
pop
adc
out
pushf
xor
adc
ret
adc
rorb
in
imul
add
inc
jecxz
test
add
std
loope
dec
lcall
pop
or
fsubrs
cmp
mov
push
pop
adc
call
inc
ds
js
add
lock
int3
xor
jae
bound
ret
loop
pop
scas
mov
aas
repnz
aam
add
stc
push
popa
push
lret
xor
loopne
data16
loopne
popa
xchg
js
add
adc
shl
mov
adc
pop
xor
int3
add
jnp
add
mov
or
push
int3
add
ret
and
loope
xor
fs
mov
add
push
pusha
xchg
add
xor
js
inc
xchg
cmp
sub
call
mulb
jg
or
xor
mov
xchg
out
pop
inc
and
add
pushf
xor
or
inc
clc
rorl
js
mov
sbb
xor
or
insl
out
or
inc
test
dec
fsubs
or
push
and
jae
add
xchg
mov
mov
inc
dec
sbb
data16
hlt
add
sub
int3
xor
or
dec
rcl
inc
push
push
lahf
add
xchg
inc
mov
adc
ss
and
jmp
or
loopne
xor
adc
push
int
sub
lds
sbb
add
adc
xor
jo
push
mov
adc
inc
push
add
xor
les
ret
adc
push
xor
testl
xchg
add
xchg
or
mov
inc
sub
add
dec
imul
rcll
or
pop
imul
or
test
add
fidivs
mov
pop
int
add
inc
xlat
or
mov
inc
add
iret
xor
inc
adc
or
xor
and
out
cwtl
popa
add
sbb
jne
sbb
or
loopne
sub
and
dec
loope
imul
or
xor
adc
shl
add
stos
pushf
xchg
add
out
inc
neg
js
sbb
addl
dec
xor
daa
push
loope
inc
add
cmp
xor
and
lock
ss
scas
dec
mov
jns
lahf
or
cmp
dec
xchg
ficomps
ret
jmp
ret
filds
jmp
fistpl
mov
dec
jg
lret
mov
fucomi
test
jecxz
fs
pop
dec
jge
repz
xchg
sbb
loope
ret
adc
loope
loope
sub
pop
xor
lret
popa
or
arpl
xchg
jno
popa
or
inc
push
popa
or
mov
mov
or
adc
xchg
xchg
test
into
mov
loope
int
jp
or
ret
loope
jb
inc
or
loope
adc
inc
xor
add
loope
in
mov
or
xor
jbe
adc
mov
je
adc
inc
cmp
push
dec
js
or
mov
inc
pop
xchg
ret
xor
and
xchg
bound
loope
sbb
adc
sbb
pusha
sub
in
loopne
push
call
sub
call
cmp
popa
adc
adc
loope
xchg
fcoml
and
sbb
sbb
or
test
mov
adc
daa
daa
dec
xacquire
inc
lea
mov
xor
mov
sub
aaa
push
or
mov
popa
loope
and
dec
xchg
orb
inc
push
mov
xlat
dec
fucomp
sbb
ret
adc
sbb
ret
pop
dec
push
pop
adc
ret
loope
xor
or
mov
push
or
push
mov
repnz
js
xor
xor
or
leave
clc
test
inc
std
cmp
loope
sbb
ret
adc
xchg
loope
or
pop
arpl
bound
ret
fsub
push
ret
adc
cmp
into
in
leave
hlt
shll
sbb
xor
bound
loope
inc
or
adc
aaa
scas
sub
sbb
popa
or
loope
adc
or
jo
fistps
inc
inc
loope
bound
ret
cmp
fmuls
add
dec
shlb
out
inc
adc
xor
scas
push
or
xor
loope
ret
adc
and
xor
rcr
test
aas
adc
adc
clc
mov
test
test
and
lds
mov
bound
mov
repnz
pop
xor
pusha
loop
push
adc
mov
add
add
popa
sbb
mov
inc
or
pop
and
mov
aaa
jno
mov
push
mov
mov
adc
les
ret
mov
xor
mov
mov
xor
or
cmp
pop
popa
or
mov
or
jnp
stos
and
adc
sbb
adc
sbb
add
jbe
mul
push
mov
roll
js
add
xor
xor
push
mov
mov
push
inc
or
mov
in
mov
push
inc
xor
stos
sbb
adcb
outsb
outsb
loopne
bound
popa
or
mov
mov
xor
mov
push
or
cmp
adc
or
fwait
test
xchg
cld
mov
push
popa
or
mov
or
xor
in
or
xor
sbb
or
jne
mov
cmp
adc
ret
mov
mov
sbb
or
subl
adc
lds
mov
insl
mov
or
jne
mov
and
add
mov
inc
mov
sbbb
xor
lea
xchg
faddl
outsb
ret
adc
sub
adc
mov
xor
sbb
pop
lds
bound
add
ret
xchg
les
or
mov
xor
and
les
mov
adc
add
mov
iret
sbb
or
dec
jmp
bound
popa
or
fwait
mulb
in
xor
xor
pop
lds
mov
push
bound
mov
xor
mov
jl
or
add
pushf
push
or
mov
or
mov
sbb
xchg
mov
and
cmp
sub
add
jb
and
mov
mov
mov
jo
mov
movsb
call
add
aaa
les
test
xor
and
jns
jmp
add
push
push
adc
add
add
bound
ret
adc
mull
icebp
in
mov
pop
mov
sub
fcoml
inc
mov
xchg
mov
xchg
xor
ret
jbe
lcall
les
bound
mov
inc
call
add
jno
or
mov
mov
xor
xchg
je
movsb
aas
movb
xor
add
mov
ret
adc
or
inc
mov
lock
fmull
adc
or
pop
adc
mov
je
popl
mov
into
push
adc
adc
int3
testl
mov
and
adc
adc
mov
pop
nop
push
test
mov
aam
mov
fdivr
or
adc
or
loope
mov
shl
pop
int3
xchg
mov
adc
adc
out
nop
pop
ret
adc
mov
ret
adc
and
add
or
adc
adc
adc
rclb
adc
mov
inc
push
xor
ds
inc
cmp
mov
sbb
aad
test
inc
mov
adc
push
fidivrs
mov
add
bound
ret
fisubl
add
stos
and
mov
add
xor
and
or
adc
mov
fdivrs
ret
add
aad
sbbb
or
xchg
mov
xor
ljmp
iret
aad
add
adc
add
adcb
mov
and
bound
and
add
pusha
ljmp
mov
xor
shll
sbb
lds
test
mov
push
adc
xor
cmp
out
mov
fmuls
mov
and
ret
adc
xor
outsl
sub
les
test
and
push
and
inc
mov
mov
popa
mov
push
push
jg
and
inc
adc
adc
pop
mov
inc
and
add
shl
push
xor
mov
mov
loope
mov
popa
or
xor
inc
dec
arpl
or
pushfw
cmpsb
andl
xadd
jge
adc
or
lock
cli
pop
pop
lods
or
call
inc
mov
sub
mov
out
lea
mov
or
inc
pop
outsb
outsl
and
inc
jb
sbb
jb
cld
add
or
leave
and
xchg
or
les
sub
and
test
inc
jo
les
mov
sbb
hlt
sub
testb
jp
jmp
addr16
inc
mov
ds
cmp
cwtl
inc
out
cmp
xor
jns
jnp
inc
push
shr
push
adc
add
ret
adc
or
push
imul
mov
xchg
mov
and
and
stos
bound
mov
lret
or
int
mov
mov
xor
rol
xor
shlb
nop
pop
add
rorb
or
stos
xchg
das
sub
adc
push
mov
sbb
or
rorb
mov
adc
nop
adc
pop
adc
call
cmp
sbb
sbb
popa
or
mov
testb
loope
mov
lock
es
jmp
adc
and
test
nop
pusha
sub
negl
xchg
mov
test
bound
addl
ret
mov
mov
push
pop
push
or
testb
sbb
adc
mov
adcl
orl
or
xor
sarl
mov
mov
orl
add
mov
loope
adc
or
xor
pusha
popf
addl
addl
mov
and
adc
lcall
fwait
sbbb
xorl
cmpsl
xor
inc
add
lds
adc
sbb
dec
movsl
insl
loopne
mov
loope
sbb
push
xor
lahf
aas
ds
inc
xor
cwtl
or
js
test
xchg
orl
add
mov
xor
popa
or
jb
cmpl
or
ret
push
or
mov
push
inc
ds
adc
or
sub
popa
or
pusha
mov
pop
adc
scas
jmp
push
sbb
test
cmp
les
test
pop
xchg
mov
or
sbbb
mov
or
inc
mov
push
call
cmp
negb
inc
xor
ret
adc
pop
xor
xchg
and
call
xor
sbbl
out
sub
addl
cmpsl
mov
sub
rolb
hlt
cli
and
and
rcrb
add
ret
adc
jp
sub
adc
sub
add
test
mov
pop
lds
add
inc
or
sbb
sbb
and
out
sub
jbe
or
or
inc
xor
mov
xchg
xor
xor
scas
cmpl
adc
mov
pop
inc
or
addl
xchg
fcoml
add
addl
andb
ret
adc
sbb
pop
lcall
mov
inc
or
xorl
add
push
add
orl
test
dec
lcall
xor
xorl
inc
inc
or
sbbl
ret
xor
sub
xchg
orl
xchg
faddl
and
add
sub
cmp
roll
subl
orl
addl
xchg
gs
sbbb
lds
addl
and
and
sbbb
lods
mov
orl
add
addl
orl
add
adc
and
inc
jo
add
pushf
outsl
lds
loopne
xor
sbb
das
xchg
andl
mov
out
inc
addl
aaa
inc
xor
test
popa
or
mov
add
ret
subl
xor
push
mov
add
subl
and
sbb
adc
xorl
addl
sbb
xchg
les
adc
bound
testb
inc
or
inc
pop
leave
shll
test
push
xorl
adc
or
bound
sbbb
sbbl
out
shlb
andb
and
and
fsubrs
and
and
xchg
andl
sbbl
inc
js
bound
or
xor
and
xchg
addl
and
subl
mov
sbb
ret
push
inc
enter
add
adc
test
or
add
adc
pushf
fcompl
arpl
addl
xchg
rolb
adc
adc
inc
popa
or
sbb
rorb
inc
jo
adcl
addl
dec
les
bound
push
xor
xchg
in
addb
push
xchg
pop
mov
add
mov
push
mov
mov
andl
lds
adc
xchg
mov
cmpl
or
inc
or
sbbl
push
push
ret
out
and
and
rep
out
rclb
adc
push
xchg
xor
mov
push
xorl
mov
mov
subl
and
ffreep
mov
adc
mov
stos
mov
andl
add
pop
mov
inc
bound
xorl
adc
in
mov
xor
out
lods
cmp
addl
popa
or
and
or
andl
mov
pop
ss
adc
or
sbb
and
add
xchg
sbb
xlat
and
pop
lds
adcl
add
pop
or
subl
popa
and
and
xor
inc
sbbl
mov
dec
sbbl
arpl
fcoms
or
js
push
and
adcl
fs
insl
or
orl
popa
or
gs
push
sub
mov
mov
test
lcall
mov
es
adc
adcl
andl
adc
or
xchg
adc
adc
pushf
movb
mov
adc
or
ret
xor
adc
subl
and
sbb
mov
or
mov
cmpb
lods
in
adc
sbb
or
inc
adc
addl
rcrl
shll
add
dec
invd
pop
outsl
inc
dec
mov
or
subb
sbb
push
xchg
popa
and
add
cmp
and
inc
mov
push
sub
and
add
or
addb
jg
or
xor
xchg
pusha
daa
mov
mov
xchg
jle
add
adc
and
sbb
jnp
popa
mov
test
popa
xor
xchg
pusha
jl
and
mov
pusha
popa
xor
xchg
or
mov
and
popa
mov
bound
andb
shll
add
popa
add
sub
adc
lcall
and
inc
jo
sub
sbb
push
push
or
cmp
mov
jbe
or
mov
popa
or
mov
add
mov
mov
sbb
roll
mov
cmp
fsts
adc
test
or
lds
mov
mov
xchg
mov
ret
sub
or
mov
and
or
andb
cmp
xor
mov
sbb
popa
or
mov
loope
mov
add
test
and
inc
lds
mov
out
add
mov
cs
nop
and
mov
or
jmp
or
add
and
mov
inc
mov
sbb
dec
jecxz
nop
sbb
mov
mov
out
mov
call
xor
dec
movsb
or
add
movsl
adc
js
push
cmp
mov
pusha
xor
sti
mov
outsb
xchg
add
jmp
fsubl
jb
mov
clc
daa
sbb
stos
addr16
out
shr
std
or
out
push
add
push
addr16
inc
pop
jp
inc
mov
ljmp
jle
outsl
pop
inc
jae
stos
je
mov
out
push
cli
mov
adc
lock
adc
cwtl
push
fs
int
sbb
mov
test
test
int3
adcl
push
sbb
inc
mov
and
or
push
and
pusha
mull
push
data16
imul
fdivl
or
and
enter
push
and
data16
test
hlt
xor
hlt
idivl
test
int3
mul
js
pop
sbb
and
lds
lock
test
testl
mov
fdivrl
les
testl
push
and
sub
adc
loop
testl
mov
negl
notl
ret
je
add
addr16
cwtl
inc
or
mull
test
arpl
int
xchg
cs
adcl
xor
and
mov
xor
mull
xor
jne
push
int
add
scas
xor
lcall
popa
enter
imul
xor
not
int3
and
sbb
cmp
cmp
hlt
ljmp
adc
push
fcmovbe
shr
pop
jo
add
insb
push
lcall
mov
jo
add
test
jo
jb
cmp
imul
inc
addb
or
lods
and
push
add
inc
or
sub
daa
or
cs
or
faddl
inc
adc
xchg
dec
adc
or
lock
adcl
or
xchg
pop
ljmp
call
and
movsl
cmp
push
lock
adc
push
jle
je
inc
pusha
push
insl
sbb
adc
push
push
push
or
fcomps
sbb
movsb
jo
and
dec
push
inc
loopne
push
push
mov
sbb
fs
adc
and
xor
pop
cs
out
or
loopne
call
add
sbb
xorl
js
dec
aam
or
pop
and
aad
inc
xor
or
or
or
push
or
and
ret
dec
call
and
lea
or
mov
cmpsb
cmp
add
sbb
loopne
and
je
sbb
xchg
sbb
out
mov
add
or
mov
loop
call
cmp
push
dec
and
and
adc
or
jo
fidivs
jno
or
xchg
lods
scas
add
je
fstpt
testb
pop
rcrl
inc
or
and
movsb
and
add
pop
xchg
rorl
add
sub
bnd
test
daa
int3
jae
movsb
leave
mov
mov
add
xchg
pop
sub
mov
push
and
inc
mov
inc
adc
inc
lods
fidivl
cwtl
test
and
mov
or
pop
shr
xor
dec
dec
or
inc
lea
pop
dec
pop
mov
movsb
push
stos
xchg
and
std
es
adc
aam
add
mov
pop
lea
jbe
aaa
mov
and
xor
mov
xorb
pop
or
movsl
pop
arpl
lahf
mov
sarl
pushf
fisttpll
inc
popa
lods
mov
idivl
sbb
dec
mov
push
mov
xchg
dec
enter
mov
lahf
into
std
cmp
int
jb
shrb
outsb
pop
pop
hlt
cmp
pop
mov
mov
inc
or
xor
ret
add
stc
call
cmp
nop
out
std
mov
fistl
loope
or
shr
push
lea
enter
add
mov
push
rclb
jmp
sub
sti
jae
movb
and
or
es
and
or
and
gs
call
pop
iret
add
mov
lock
cwtl
cs
je
push
ficoml
inc
ret
testb
ds
mov
and
je
mov
sub
rol
inc
cmp
loopne
push
push
jo,pn
mov
rorl
adcl
mov
sbb
ss
push
xor
lret
dec
rol
push
push
jl
jno
insl
sub
popf
pmuludq
push
rorl
dec
imull
adc
pop
icebp
xor
repz
lock
pusha
pop
icebp
fs
xor
xor
rolb
rolb
push
sbb
das
dec
mov
outsb
adcb
push
xchg
mov
dec
shlb
lock
and
lea
out
and
pop
and
stc
dec
mov
xchg
xchg
mov
push
js
sbb
bound
leave
push
dec
mov
xor
dec
mov
js
mov
jo
mov
idivb
mov
fucomi
mov
dec
jmp
insb
mov
push
xchg
mov
and
fsubl
shl
mov
and
fsubs
loopne
mov
sbb
in
add
xorl
mov
movsb
add
or
jmp
mov
mov
and
lahf
pop
push
pop
xorb
xchg
push
mov
std
mov
jmp
add
out
adcb
push
xchg
mov
dec
shlb
dec
add
cmp
mov
and
pop
sub
pusha
scas
mov
sub
sbb
xchg
push
mov
imul
add
lods
loope
inc
xchg
pop
jmp
mov
mov
dec
shlb
and
subl
push
loopne
dec
add
orl
push
ljmp
sbb
push
and
or
add
and
mov
mov
roll
fdivl
cmp
mov
rcrb
pop
call
cmp
adcl
mov
loopne
fcoml
sbb
and
mov
pop
scas
add
cmpsl
and
and
mov
mov
mov
or
push
mov
and
xchg
xor
pop
mov
in
mov
mov
mov
jecxz
push
add
mov
add
xchg
push
pushf
lcall
mov
pop
push
dec
mov
dec
shlb
xor
pop
sbb
rorb
imul
dec
rol
push
mov
shll
mov
jmp
adc
pusha
movl
dec
xor
xchg
xor
push
lds
cwtl
scas
and
sbb
mov
xor
push
mov
test
add
inc
mov
xchg
mov
orl
xor
xchg
push
mov
bound
mov
dec
sbb
and
xor
mov
xchg
mov
xchg
mov
dec
rolb
mov
jl
enter
dec
cmp
adc
or
and
call
imulb
test
shlb
add
mov
sub
movsb
mov
repnz
andb
xchg
movsb
mov
andl
rol
popa
adc
push
fsubrl
dec
mov
xchg
mov
test
mov
xchg
mov
nop
hlt
movsb
outsb
or
ret
add
mov
sbb
dec
mov
xor
jle
pop
xchg
xor
push
mov
mov
and
push
mov
fdivrs
dec
shl
cs
call
repnz
insb
add
sub
push
pop
add
mov
push
rorl
lret
add
sahf
imull
iret
or
push
mov
movsb
xor
sahf
out
xchg
mov
or
xchg
mov
jns
loope
push
cld
adc
mov
dec
xchg
add
fs
js
loopne
mov
pop
pop
nop
mov
test
sarb
push
or
adc
iret
repz
and
sub
xor
inc
push
into
repz
push
xchg
push
xchg
mov
outsl
orb
push
cwtl
lods
rolb
dec
mov
pop
inc
rol
sbb
pop
fcoms
mov
add
repnz
adcl
fs
sbb
inc
xor
dec
sbb
push
mov
pusha
int3
mov
outsb
repnz
iret
aas
push
push
adc
xchg
xor
adc
or
dec
dec
ret
popa
cli
out
fsubl
mov
dec
adc
and
mov
add
sbb
sbb
sbb
dec
or
dec
popa
cmp
lahf
pop
mov
nop
lea
add
push
loop
and
push
loope
inc
rolb
inc
sbb
or
pop
popa
cmp
sbb
push
popa
popa
adc
popa
mov
inc
popa
adc
mov
movsl
or
imul
rclb
rolb
ja
and
sbb
xchg
xor
rorb
dec
sbb
push
in
lds
jnp
ficoms
add
in
dec
add
sbb
aaa
dec
sbb
mov
ret
popa
mov
rol
sbb
xchg
mov
into
in
inc
popa
xchg
out
pop
xor
popa
xchg
out
adc
push
les
adc
sti
imul
mov
and
mov
popa
jae
sbb
add
outsb
rorb
push
orl
jl
cwtl
movsb
xorl
rorb
mov
mov
negb
dec
add
mov
add
mov
sbb
cmp
xchg
push
popa
pusha
pusha
inc
rol
pop
popa
clc
test
xchg
inc
dec
cmp
jmp
scas
adc
aad
xor
sbb
push
push
xlat
clc
push
adc
imul
ficompl
js
out
inc
mov
xor
adc
mov
xor
sbb
pop
mov
rorb
mov
lock
push
mov
std
popa
sub
or
das
sub
cmp
adc
shlb
push
xchg
movsb
mov
popa
int3
pop
pop
mov
dec
add
in
mov
xor
jmp
jns
or
shlb
xor
jo
out
mov
sub
mov
sbb
mov
rolb
adc
lcall
xor
push
sbb
popa
sahf
add
imul
jg
loope
push
call
mov
shlb
sbb
mov
lret
les
xchg
xor
dec
sbb
and
lret
dec
sbb
popa
xchg
xor
mov
dec
add
popa
pop
adc
or
loopne
and
in
mov
rclb
sbb
dec
push
popa
and
sbb
push
imul
mov
inc
and
sbb
push
and
inc
rolb
popa
movsb
add
js
lea
imul
jmp
and
xor
and
popa
sub
mov
int3
aas
ss
push
add
leave
ret
fsts
or
mov
and
dec
mov
mov
push
jo
aas
mov
aas
dec
aas
repz
or
push
aam
mov
cmp
les
lock
add
jmp
adc
push
lds
aas
nop
in
jb
lret
inc
lret
cwtl
lret
jnp
pop
nop
test
enter
aas
pop
shrb
push
aas
push
ja
les
aas
mov
or
iret
repz
fs
je
add
jge
fwait
aas
mov
int3
lret
aas
push
xor
add
adc
push
pop
les
aaa
fs
adc
mov
jmp
sbb
add
add
push
cmp
mov
xor
in
sbb
mov
sbb
popl
inc
push
cwtl
push
jge
sub
insl
mov
cmpsb
add
inc
add
jge
adc
add
mov
mov
mov
mov
adc
mov
aad
loopne
cmp
inc
insl
rcrb
add
rcrb
push
stc
push
stos
push
call
subl
inc
mov
sbb
cmp
rol
xlat
lock
jmp
add
adc
testb
cmp
sbb
mov
mov
mov
sub
mov
or
and
mov
rol
pop
test
mov
cmpl
imul
adc
or
adc
pop
sbb
pop
xor
sub
inc
jb
fbstp
or
mov
cmc
jo
mov
in
adc
call
cmc
xchg
out
cmp
push
cmp
call
repnz
mov
loop
adc
jo
sahf
loopne
pop
mov
cmpsb
lret
cmc
in
test
cs
cmc
test
mov
push
lret
cmc
sti
mov
shlb
cmc
cld
js
mov
xchg
test
push
inc
add
adc
jo
les
and
scas
push
insl
adc
repnz
insl
enter
mov
sbb
aaa
stos
pop
dec
sub
fldl
insl
insl
flds
je
push
insl
push
and
loope
jns
push
push
lcall
push
imul
cmp
jo
inc
mov
ljmp
shlb
cmpsb
dec
add
mov
push
shrb
mov
mov
dec
mov
pop
push
push
rolb
gs
sbb
push
mov
mov
movsb
in
push
fisubs
rol
mov
add
lods
and
repz
xor
rcrl
mov
movsl
mov
addb
xor
cmp
mov
shlb
and
movsl
imul
mov
inc
sub
xor
xchg
cmpsb
add
dec
xor
cmpsb
imul
arpl
jo
movsl
mov
jl
popa
mov
add
int3
xor
adc
mov
scas
dec
push
lcall
xor
sub
add
lds
add
ret
movntps
lods
je
movsb
sub
data16
fs
xor
mov
pop
mov
or
dec
mov
nop
push
push
lret
aam
mov
add
or
movsb
add
push
adc
inc
mov
mov
je
shr
ljmp
imul
adc
dec
and
mov
popl
nop
push
fadds
or
add
add
cmp
pop
lea
movl
rclb
cltd
or
add
add
add
test
js
int3
das
rolb
movsl
fisttpl
xor
push
dec
in
fs
xor
sbb
cmpsl
mov
dec
adc
rolb
and
adc
xchg
iret
jo
ret
dec
shrl
iret
and
dec
repz
xchg
aas
daa
or
adc
push
fimuls
inc
add
pop
xor
cwtl
loopne
jo
adc
and
pusha
push
or
repz
and
jle
and
jne
add
xor
dec
sbb
lods
mov
out
orl
and
xchg
push
outsb
adc
pushl
fidivrs
add
mov
sbb
lcall
xchg
push
inc
inc
sbb
pushl
xchg
push
out
inc
pop
dec
decl
test
aad
aas
aaa
mov
push
in
dec
movsb
cmp
lea
adc
fs
ds
test
es
pop
sub
dec
incl
and
xchg
filds
ja
or
aad
sbb
js
xchg
push
xchg
test
push
fcoml
pop
sub
xchg
push
push
cmp
cli
testl
cmp
call
dec
add
imul
add
imul
xorl
imul
xor
cltd
jl
filds
adc
push
js
mov
adc
ret
sbb
xchg
roll
xor
js
sbb
cltd
xchg
cmpsb
sbb
inc
jns
rolb
imul
add
fiaddl
enter
or
dec
cltd
jle
sbb
cltd
jae
mov
xor
dec
cltd
or
adcl
cmpl
add
test
lcall
incb
pop
inc
cltd
daa
xor
or
loopne
ljmp
xchg
add
sbbl
cmp
mov
inc
cltd
nop
rcrb
push
ret
inc
cltd
cld
in
pop
sub
nop
cltd
test
inc
lods
xlat
in
mov
outsb
add
sbb
imul
push
mov
or
nop
cltd
movsb
xorl
call
sbb
add
jbe
jo
cwtl
push
or
nop
push
pop
mov
or
popf
fstl
cmpsl
outsb
pusha
lods
and
ret
add
aam
js
call
cmp
pop
jbe
test
movsb
cltd
aam
lock
add
pop
add
jmp
shld
std
sub
or
enter
mov
xor
aam
cltd
jecxz
jl
mov
cmpl
or
inc
push
pop
inc
sub
lea
push
rol
cltd
jl
rolb
dec
add
cmp
cmp
inc
inc
cld
mov
push
dec
ficoms
add
cmp
pop
imul
add
cltd
xor
cltd
cmp
or
xchg
nop
push
fiadds
cltd
xchg
nop
push
mov
cltd
popf
xorl
or
dec
das
pushf
loop
cltd
sbb
pop
clc
and
push
sbb
jb
shr
add
mov
push
imul
mov
dec
int3
dec
xor
adc
add
dec
or
call
js
int
mov
rcr
sbb
pop
subl
inc
leave
inc
xor
fimull
jb
cmpsl
mov
pop
adc
pop
xor
cmp
mov
sub
je
call
and
inc
dec
dec
mov
divb
push
fnstsw
and
in
jp
enter
sub
xor
enter
cmp
enter
push
cmp
or
pop
mov
fstl
flds
push
les
push
jne
add
nop
cmp
or
dec
shr
adc
enter
cs
iret
jge
orl
push
mov
outsb
sbb
inc
fnsave
sbbb
and
das
rcr
adc
sbb
adc
int3
push
push
mov
sub
add
mov
fucom
adc
cmpsl
sbb
out
ret
mov
push
test
psllw
clc
jae
lea
cmpl
dec
push
inc
push
push
inc
add
push
dec
sub
pushl
xor
shr
jns
es
mov
sub
pop
es
icebp
xorb
insl
adc
xor
movsb
cmpl
mov
movsb
icebp
xor
pop
cmp
add
xchg
jb
and
shlb
insl
shr
cmp
sub
loopne
in
daa
aad
sbb
mov
inc
mov
dec
insl
jnp
rolb
or
push
jp
and
sbb
into
inc
enter
adc
shlb
cmp
orb
and
dec
lock
and
insl
pop
imul
mov
sub
or
insl
dec
add
lods
lret
mov
inc
push
inc
insl
lds
movsb
subl
insl
and
sbb
es
push
insl
or
xchg
push
dec
jbe
sbb
insl
inc
xchg
push
out
and
dec
imul
adc
or
movsb
subl
jl
loopne
mov
shll
inc
adc
rolb
adc
pop
mov
shrb
ja
inc
sbb
int3
pushf
mov
insl
out
add
gs
rorb
outsb
pop
rol
add
mov
push
pop
xchg
pop
mov
pusha
jne
dec
pop
andl
or
pop
sub
mov
cmc
or
call
mov
pop
jns
fsubl
adc
or
adcb
call
or
pop
cwtl
sbb
mov
fdivrp
push
pop
or
xchg
bound
movsl
pusha
pop
pop
xor
aam
xor
add
pop
roll
xor
outsb
gs
sbbb
imul
inc
push
mov
sbb
mov
popf
movsl
test
jo
inc
sbb
or
xchg
inc
dec
frstor
shrl
nop
pop
aad
adc
cmp
rcrb
daa
and
and
in
pop
fcomps
cltd
push
xchg
nop
rorl
add
mov
sub
or
push
sbb
xor
shrb
adc
outsb
add
test
dec
test
inc
test
subb
test
rolb
mov
jo
or
mov
pop
dec
rclb
fdivs
loopne
test
rep
das
and
xor
lret
push
aas
xchg
or
pushl
adc
test
loopne
dec
add
icebp
push
nop
test
sbb
rcr
test
mov
push
add
test
add
dec
hlt
movsb
adc
mov
adc
out
mov
insb
pop
lcall
push
sbbl
pop
test
sbb
inc
sbb
inc
into
xor
or
aaa
cltd
dec
cli
subb
and
add
push
test
cmp
push
xor
push
inc
test
addb
adc
xorb
test
sub
dec
add
pusha
push
add
mov
sub
dec
test
or
and
or
or
inc
movsl
mov
add
add
adc
test
add
daa
mov
pop
test
stc
xor
sub
dec
test
dec
test
pushf
xor
push
inc
test
call
test
inc
push
test
dec
subb
imul
cmpsl
push
push
push
add
adc
pop
pop
ret
test
add
mov
fisubl
push
add
add
or
mov
dec
add
cmpsb
and
loope
or
cld
add
cltd
int
mov
jp
ja
inc
sbb
movsl
or
add
mov
cmp
nop
push
mov
andb
add
pop
mov
add
mov
nop
push
outsb
or
adc
fcomi
pusha
xor
mov
add
in
adc
mov
int
jno
add
shrl
add
mov
push
pop
adc
mov
nop
push
mov
dec
cwtl
mov
and
and
test
push
add
cmp
add
mov
sahf
imul
insl
leave
fldl
sub
pushf
push
imul
and
mov
xchg
or
mov
rol
adc
mov
add
push
insl
sub
mov
fisubs
jno
imul
lods
jbe
fadds
ja
sbb
in
mov
push
inc
mov
andb
add
aam
mov
repnz
imul
stc
sbb
add
rolb
and
or
loopne
push
cwtl
mov
mov
in
mov
add
or
xor
mov
out
test
pop
xchg
cmpsb
popa
icebp
inc
sbb
call
sbb
mov
dec
inc
mov
cwtl
add
stos
andb
lock
inc
ror
add
shlb
mov
mov
js
cmp
or
mov
add
imul
push
add
lahf
mov
or
stos
and
pop
dec
inc
and
fcomps
adc
mov
mov
loope
or
mov
add
test
lods
push
dec
add
adc
dec
test
mov
or
dec
call
push
scas
sbbl
and
push
js
nop
mov
pop
loop
insb
xor
xchg
mov
sarb
shl
mov
add
mov
and
adc
mov
push
mov
pusha
ljmp
mov
rolb
sub
mov
adc
push
movsb
int3
mov
jo
andb
mov
sub
mov
js
adc
inc
es
xchg
rolb
mov
nop
mov
adc
mov
jo
and
inc
sbb
add
mov
rorb
pop
push
rorb
cmp
add
mov
push
push
mov
dec
add
mov
cmp
mov
xorb
push
mov
mov
xorb
loope
mov
lcall
add
mov
in
adc
add
mov
inc
mov
xor
movsb
andl
and
rol
loope
mov
add
inc
add
or
xorl
pop
jnp
or
mov
nop
push
jns
lea
pusha
daa
es
fxch
lahf
push
adc
imul
out
shlb
dec
das
jge
sbb
sub
push
lret
inc
sbb
dec
add
dec
cmp
outsb
or
cmpsb
and
inc
jge
ret
pop
out
pop
clc
cld
movsl
dec
add
les
loopne
cmpl
mov
stos
andb
mov
jge
out
pop
adc
das
cmp
int3
movsb
xorl
jo
add
add
jbe
andb
imul
pop
adc
or
cwtl
push
int
add
add
loopne
or
push
add
imul
pop
pop
cmp
hlt
cli
push
into
dec
add
add
loopne
or
push
add
imul
pop
xorl
das
push
fisttpl
sub
sti
sub
pop
cmpsb
or
aad
mov
add
mov
mov
mov
dec
add
or
fistps
es
addr16
fildl
rol
push
out
mov
lret
mov
add
shlb
ljmp
adc
inc
incl
in
jns
decb
sbb
pop
enter
and
add
mov
adc
pop
adc
adc
add
rorb
mov
pop
mov
mov
cmpsl
push
testl
test
add
rol
rorb
mov
outsl
adc
add
or
mov
and
inc
jne
test
push
loop
mov
or
jno
movsb
andl
cs
push
mov
pop
dec
dec
movsb
test
shr
jae
pushf
mov
cmp
jmp
je
push
mov
cltd
dec
push
sbb
or
xlat
pusha
or
pop
roll
mov
fucomi
fs
xlat
aad
cmc
xlat
aad
outsb
or
flds
iret
and
lcall
cmpsl
pushf
xorl
jns
xchg
mov
sbb
jns
insb
pop
rolb
and
rcr
jns
mov
scas
daa
and
push
jns
dec
add
jns
andb
shr
dec
add
add
push
movb
pusha
jo
nop
jns
xor
inc
add
sbb
or
cmpl
mov
jns
add
and
mov
sbb
sbb
dec
add
mov
rcll
rol
mov
push
pop
orb
outsl
jno
fstpt
adc
insl
and
add
dec
jns
add
jns
nop
push
in
call
imul
jns
push
ficoms
dec
imul
fs
push
add
mov
nop
push
outsb
mov
movsb
add
sbb
jns
sbb
cmp
and
cld
dec
add
or
jns
fsubrl
mov
pop
mov
or
or
and
jns
add
pop
mov
jns
add
add
xorl
loopne
sbb
or
or
or
pusha
and
and
push
xor
add
cmp
add
imul
xor
test
push
mov
xor
and
sbbl
dec
addl
sbbl
rolb
imul
or
orl
jmp
jmp
fsubs
and
mov
xchg
fsubs
push
rolb
pusha
and
push
jle
sbb
cmp
inc
xorl
or
rorb
subl
subl
mov
add
add
sbb
mov
imul
add
addb
orl
pop
and
imul
cmp
or
adc
subl
push
out
push
adc
inc
sbb
or
mov
or
inc
movsb
cmpl
imul
xchg
sbbb
push
add
cmp
sub
adc
pop
sahf
and
push
test
cmpsb
bound
and
xor
xlat
andl
adcl
sbb
inc
insl
xorl
addl
mov
mov
cmp
lds
std
xchg
jmp
call
ret
dec
push
imul
sti
inc
sbbl
xorl
xchg
xor
sub
call
xor
dec
add
adc
or
ret
mov
cwtl
ss
sub
or
stos
rolb
push
mov
addl
mov
andl
adcl
cmpl
int3
inc
jg
jg
and
decb
stos
dec
ljmp
in
dec
pop
or
inc
sbb
xorl
shlb
inc
add
and
or
sbb
dec
cmpl
subl
andl
mov
pop
subl
jo
and
inc
sbb
cmp
mov
nop
and
push
bound
nop
cmpl
sbb
or
addl
adcl
andl
push
data16
xorl
add
nop
orl
or
lock
stos
cmp
xorl
mov
sub
inc
pop
out
clc
pop
sbb
adc
jnp
cmp
call
pop
sbb
mov
adc
and
ja
nop
push
sahf
xor
dec
push
lcall
ret
lock
inc
dec
add
pop
and
inc
sbb
and
and
add
movsb
add
xorl
nop
and
mov
push
and
jae
fiadds
imul
jne
push
and
pop
loop
or
rclb
adc
jmp
xor
hlt
mov
mov
push
and
dec
or
ss
jbe
and
add
andl
movsl
inc
mov
jae
cmp
xorl
movsb
add
pusha
inc
sbb
mov
and
inc
sbb
hlt
add
rcrl
or
adc
clc
and
and
fbld
add
or
mov
jo
daa
je
xorl
jnp
and
mov
popa
lea
out
sbb
into
stos
inc
sbb
repz
adc
imul
xor
pop
sbb
fsubs
mov
and
add
or
popl
inc
sbb
and
inc
rol
sbb
xchg
push
and
and
and
and
fmull
xchg
fsubs
mov
push
and
push
pushf
pop
imul
nop
and
sbb
xor
cmp
inc
add
punpcklwd
push
sbb
and
xor
sbb
and
jne
push
test
pop
imul
orl
imul
and
inc
cmpb
and
or
dec
pusha
xor
and
jmp
stos
xorl
add
sbb
lret
popa
add
and
dec
pop
imul
sbb
mov
sub
xorl
push
inc
mov
je
jmp
sub
xchg
loope
and
js
in
or
and
ret
sbb
sbb
push
add
and
jo
inc
je
xor
mov
mov
and
daa
add
and
int3
icebp
stos
sbb
inc
jbe
add
rcl
jp
add
loope
popa
std
or
adc
and
adcb
cmp
xor
test
rol
add
mov
add
inc
movsb
out
sbb
aas
mov
movsl
inc
add
or
enter
adc
xchg
add
mov
andb
mov
lret
out
pusha
and
lds
out
orb
adc
push
adc
push
into
add
mov
aaa
push
adc
inc
movsb
sbbl
mov
push
loope
sti
adc
fcoms
and
iret
or
xchg
push
out
lock
insl
and
out
mov
or
scas
or
nop
insl
mov
in
jo
inc
sbb
pushf
and
or
and
mov
mov
ja
andl
and
or
cmp
jno
inc
movsb
out
inc
rolb
sahf
add
incb
fcomps
cwtl
adc
push
fldl
and
out
orb
adc
push
out
xor
mov
xchg
push
outsb
and
xor
add
adc
push
and
mov
jmp
mov
js
stos
int
xor
ja
inc
sbb
test
add
rol
bound
out
add
loopne
mov
sbb
push
adc
cmc
bound
push
loopne
or
jmp
call
adc
jp
add
inc
rolb
in
sub
add
out
xor
sub
or
adc
inc
sbb
out
movsb
add
adc
rorb
out
sbb
push
ficoms
test
rol
loope
out
jnp
cmpsl
std
andl
adc
lahf
out
adc
dec
push
push
mov
cmp
out
adc
inc
inc
movsb
add
mov
lods
repnz
sbbl
out
mov
mov
out
mov
push
mov
dec
and
mov
das
shll
sti
mov
cmpsb
out
inc
rolb
imul
pop
sti
dec
pusha
adc
sbb
sub
outsb
or
in
shr
std
icebp
dec
add
or
mov
or
or
out
push
scas
addb
nop
add
xchg
out
in
cmpsb
mov
pop
cmp
ret
out
and
shl
mov
outsl
lods
out
rolb
out
rolb
push
out
lock
mov
mov
jecxz
test
rolb
xchg
push
fsubl
out
fbld
and
pop
inc
out
sub
add
adc
popa
jbe
orl
cmp
dec
add
movsb
add
pop
mov
sub
mov
jnp
sbb
xchg
push
out
inc
inc
sbb
out
rol
add
or
lock
adc
imul
push
adc
subb
push
in
push
inc
out
sub
add
xchg
out
dec
add
out
add
sbbb
out
test
adc
adc
and
or
mov
push
cmp
add
mov
sti
pop
inc
icebp
adc
movsb
and
pop
push
mov
movsb
loope
movsl
and
or
inc
add
adc
mov
sub
mov
inc
inc
loope
or
push
mov
sub
in
and
push
inc
sbb
loope
xor
or
cmp
or
add
or
loope
dec
add
ljmp
sbb
xor
rclb
stos
mov
jp
rcrb
loope
mov
test
pop
pop
add
mov
arpl
add
imul
sbb
mov
dec
inc
mov
add
jl
mov
xor
and
or
xchg
loope
push
sub
inc
push
xchg
push
outsb
mov
push
adc
push
ror
sub
push
adc
jmp
movsb
and
cwtl
pusha
pusha
sub
loope
lods
inc
add
and
or
movsb
cmpl
or
inc
movsb
cmpl
add
fdivr
add
mov
add
orl
loope
inc
inc
sbb
out
mov
aaa
sbb
dec
add
cmp
dec
cmp
sbb
fsubs
and
adc
sub
adc
and
cli
mov
mov
jo
fldl
ss
push
mov
inc
loope
test
push
pop
mov
rol
dec
mov
inc
loope
sarb
or
loope
out
mov
loope
add
push
xlat
stos
rolb
and
inc
loope
or
dec
add
loope
bound
mov
mov
ss
jmp
enter
sub
and
inc
loope
roll
adc
out
adc
mov
fwait
test
shll
or
xor
adc
pop
mov
ja
sub
rol
loopne
loope
push
inc
movsb
and
dec
daa
xchg
push
into
aaa
sbb
xor
inc
adc
loopne
mov
jge
std
jae
adc
adc
inc
movsb
addl
mov
negl
inc
sbb
dec
repz
adc
jo
jg
rolb
push
inc
adc
inc
or
test
add
mov
inc
sbb
inc
inc
sbb
add
adc
fsubrl
cs
xor
insb
cmp
adc
movsb
add
push
in
add
sbb
push
sbb
iret
dec
inc
stos
dec
add
mov
iret
cli
and
imul
inc
sbb
and
je
sbb
and
mov
push
and
cltd
push
xor
addl
movsb
and
icebp
scas
shrl
addr16
inc
sbb
sbb
outsb
andl
addl
orl
loopne
call
subl
ds
mov
or
test
fisttpll
lret
rol
sub
movsb
add
push
or
pop
push
add
sub
and
inc
xchg
movsb
sub
push
xchg
push
pushf
fsubrl
and
pop
sub
popa
adc
imul
and
sub
mov
xchg
movsb
subl
dec
add
fbld
outsl
or
xor
pop
push
not
sarb
add
jle
outsl
idivl
or
mov
xchg
mov
xorb
mov
push
fdivrl
nop
cmp
inc
dec
add
je
outsl
es
out
adc
loopne
push
cmc
sub
loope
pop
mov
aaa
shrb
inc
push
imul
js
outsl
add
iret
pusha
repz
iret
loopne
popf
dec
outsb
pop
or
arpl
mov
inc
pusha
lcall
loop
fs
fisttps
outsb
dec
movsb
add
lock
dec
add
into
scas
mov
push
jno
loopne
dec
add
or
sub
and
pop
adc
and
shlb
fmuls
xchg
pop
adc
cli
lea
je
pop
cmp
outsl
or
imul
cltd
or
mov
ret
dec
arpl
or
es
fsubrl
mov
xchg
outsl
divb
outsb
push
pop
xchg
js
add
pop
lods
es
outsl
sbb
jae
mov
imul
rolb
push
loop
daa
outsl
popf
call
sbb
outsl
popf
mov
sbb
mov
ret
jle
adc
or
outsb
pusha
and
sbb
xor
mov
inc
sbb
xor
xchg
push
outsb
outsl
lock
mov
outsl
jbe
push
cmp
popf
sbb
je
jb
loop
pushf
jo
sbb
dec
add
outsb
and
jge
outsl
daa
push
sub
add
out
fadd
adc
and
nop
fcompl
sbb
sub
sbb
sbb
or
mov
push
orb
xchg
push
out
nop
pop
outsl
sarb
jnp
pop
mov
or
and
shrb
mov
dec
movsb
subl
add
inc
sbb
xchg
push
push
mov
or
dec
movsb
cmpl
fdivrl
std
shlb
outsl
insl
shlb
outsl
mov
pop
adc
pusha
jne
cwtl
sbbb
push
insb
or
jo
int3
xor
fildl
mov
and
aam
rorb
inc
adc
shl
test
jmp
cmp
mov
orb
rorb
fnstcw
dec
and
bt
jo
mov
and
movsb
add
dec
pop
inc
jmp
jo
adc
mov
aam
mov
adc
xor
sbb
xchg
and
jb
add
stos
inc
inc
or
mov
stos
mov
bound
jno
stos
push
mov
adc
sbb
inc
lret
dec
sbb
ret
pop
adc
test
or
popa
or
insb
pop
adc
dec
adc
aam
pop
jnp
dec
add
pop
pop
movsb
sbbl
xchg
rorb
dec
sbb
andl
cmp
mov
rol
mov
mov
lcall
leave
pop
push
pop
mov
inc
test
stos
pop
jbe
adc
scas
imul
loopne
pop
pop
xchg
mov
or
inc
inc
sbb
mov
xlat
pop
insl
push
pop
imul
pop
mov
inc
dec
inc
add
cwtl
stos
pop
push
roll
cmpsb
call
je
insb
shrb
rcrb
add
call
add
pop
xorl
add
pop
outsb
push
cmp
push
cwtl
or
xchg
push
pop
inc
roll
and
movsb
add
add
xor
inc
sbb
inc
add
pop
ror
push
jo
push
pop
xchg
push
pushf
icebp
into
push
push
inc
jne
stc
pop
push
out
jne
pop
push
popf
push
iret
add
xchg
pop
or
or
sbb
pop
add
adcb
xchg
push
pop
movsb
sbbl
and
pop
push
scas
aas
jmp
cmp
xchg
push
xchg
dec
test
inc
imul
rcrb
js
pop
pop
jecxz
dec
add
inc
pop
imul
pop
push
movsb
pop
stos
sbb
and
pop
movsb
sbbl
push
pop
cld
mov
pop
dec
add
sub
frstor
push
xchg
ljmp
push
pop
imul
pop
mov
sbb
sbb
leave
movsb
add
aaa
adc
movsb
shrb
dec
pop
xchg
aaa
movsl
aas
nop
or
js
or
arpl
push
call
dec
mov
pop
rolb
loope
rcrb
mov
into
in
dec
js
cmp
sbb
jmp
push
pop
mov
and
stos
pop
xchg
jo
push
je
and
out
mov
rorb
outsl
jno
pop
scas
sbbl
push
rcrb
movsb
pop
push
add
sarb
inc
mov
orb
movsb
add
adc
imul
xor
pop
movsb
pop
aad
cmpsl
mov
mov
xor
mov
adc
movsb
sbbl
pop
jno
pop
outsl
and
mov
repnz
in
pop
movsb
addl
jno
push
pop
rolb
lcall
rolb
in
mov
push
push
imul
out
ds
insb
or
xor
add
xor
out
push
dec
adc
daa
lock
and
pop
push
xor
adc
xor
test
imulb
and
mov
idivl
cmpsb
cmp
mov
dec
add
fcomps
or
adc
jmp
aaa
adc
out
pop
sbb
inc
sbb
rorb
push
push
ret
dec
ss
sbb
ja
mov
push
dec
rcrb
cmp
add
rcrb
dec
mov
ljmp
rolb
loopne
pop
jne
push
out
ret
das
add
push
or
movsb
subl
pop
pop
xor
mov
call
and
sti
inc
sbb
xor
pop
pop
movsb
pop
and
popf
adc
fwait
jne
inc
pop
xor
daa
or
fsubl
mov
imul
and
pop
add
sbb
lds
pop
mov
pop
rclb
mov
sub
rcrb
push
xor
das
xchg
adc
imul
inc
sbb
push
leave
fmuls
rcl
pop
pop
pushf
or
loop
or
add
sbb
push
inc
jno
pop
filds
nop
xchg
sbb
mov
mov
out
mov
and
pop
movsb
sbbl
xchg
xor
pop
pop
push
adc
and
das
inc
lret
aaa
inc
pop
movsb
pop
xchg
imulb
rol
stos
add
mov
dec
aam
sbb
xchg
or
dec
inc
lods
pop
imul
pusha
inc
xchg
dec
adc
movsb
pop
les
rcrb
mov
enter
xor
add
movsb
pop
shlb
out
pop
movsb
xorl
and
call
out
xor
jmp
mov
cs
xor
push
rclb
xchg
sbb
or
jns
jnp
mov
mov
pop
movsb
andl
or
stos
inc
add
dec
add
mov
popa
mov
xchg
aad
idivb
sbb
dec
fistpl
cld
loopne
jmp
xor
rolb
lock
jno
into
pop
pop
popa
clc
insl
or
idivl
pusha
ret
dec
popa
iret
xor
imul
je
mov
inc
push
pop
push
mov
lock
add
inc
sub
cmpsl
les
inc
pop
pop
movsb
add
stos
cs
popa
xchg
push
fiadds
adc
int3
rcrb
popa
mov
lds
das
imul
xchg
add
popa
jo
dec
add
callw
pop
add
imul
movsb
adc
aaa
add
xchg
cmp
mov
mov
mov
loopne
xor
push
mov
loopne
mov
and
shrb
in
fwait
cs
outsb
shrb
cmp
add
movsb
andl
mov
add
call
popa
icebp
rolb
shlb
sbb
les
aaa
les
cmp
movsb
ret
es
mov
cmp
inc
sbb
popa
imul
fcoml
popa
imul
loopne
popa
rcrb
add
aam
or
add
popa
testl
popa
dec
add
inc
movsb
add
mov
je
pop
popa
jb
xchg
push
pop
imul
cmp
stos
mov
stc
adc
mov
push
popa
cmp
push
cwtl
or
inc
sbb
add
and
imul
popa
inc
sbb
pop
dec
xchg
push
in
shlb
imul
cmp
add
add
pop
movsb
popa
ret
sub
call
popa
rolb
fdivl
pushf
cs
lock
push
out
adc
loop
or
xor
pop
xor
xchg
popa
cs
sti
cmp
xor
xchg
or
popa
and
mov
aam
jo
push
out
sbb
popa
jecxz
lcall
lock
lahf
jmp
loopne
cs
xchg
je
jl
adc
imul
jle
out
xchg
xchg
insb
mov
xor
xorb
and
faddl
cmp
adc
add
aad
pop
mov
mov
jbe
add
and
jo
push
rorl
add
sbb
mov
pop
sub
sbb
and
imul
fsubr
xchg
call
lret
out
mov
out
out
imul
push
fs
dec
add
shlb
xor
or
out
mov
add
xorl
idivl
mov
in
and
ficomps
pop
adc
adc
jbe
jo
xorb
ds
add
sub
add
jo
cmpsb
out
sbb
or
ljmp
data16
bound
adc
pushf
out
mov
and
out
cmpsb
and
mov
rolb
sbb
fwait
mov
xor
out
icebp
sub
out
movsb
xor
lcall
mov
adc
out
inc
sbb
mov
out
adc
xor
and
adc
push
push
add
je
jnp
nop
out
mov
aam
inc
add
out
mov
push
push
dec
xor
rcll
out
rcl
pop
movsb
sub
sub
ljmp
out
leave
call
out
inc
inc
imul
xor
mov
and
imul
mov
imul
add
movsb
pushf
ret
out
and
or
jo
fimuls
xor
lock
push
mov
int3
add
bound
js
out
repnz
shr
sbb
in
clc
insb
pop
outsb
int3
orb
push
out
and
add
lds
aas
add
or
das
mov
add
out
push
mov
out
aaa
popl
adc
imul
fprem1
add
jl
push
inc
js
add
out
rolb
sbb
xor
pop
and
adc
add
push
out
mov
and
xchg
and
xor
imul
dec
cmp
mov
xchg
adc
das
add
shr
scas
mov
out
and
xor
outsb
negl
and
rol
or
loopne
data16
xchg
rcrl
fdivr
push
lea
rol
and
push
adc
xchg
adc
clc
movsb
movsl
lock
subb
inc
out
enter
add
out
pop
adc
pop
xchg
and
or
out
adcl
inc
sbb
clc
xor
jo
nop
push
out
adc
stos
xorb
mov
sbb
out
push
add
rcrb
in
xor
add
xchg
dec
add
sahf
out
and
push
or
adc
test
rolb
adc
and
xor
push
mov
cmc
lret
jne
or
dec
jbe
add
dec
cmc
les
sbb
lods
pop
nop
adc
xchg
nop
push
into
mov
add
push
or
sbb
lcall
js
add
cmc
cmp
cs
sbbb
xor
das
xchg
dec
add
mov
xchg
cwtl
stos
stos
dec
fidivs
mov
xor
mov
rol
jge
enter
sub
lar
push
dec
ficoml
inc
mov
ret
call
mov
adc
out
cmp
add
dec
fsubrl
and
fsubs
and
imul
or
or
js
cmp
mov
xchg
ja
push
aam
les
push
inc
mov
mov
pusha
out
cmp
xor
and
mov
and
addb
xchg
add
xchg
fs
fwait
jb
or
out
test
out
dec
add
mov
or
leave
pusha
adc
and
lret
push
mov
add
sub
dec
add
or
in
push
add
jno
negb
or
mov
dec
push
out
imul
inc
add
sub
rcrb
subl
movsl
daa
test
and
add
cmpsb
pop
add
sub
add
out
pusha
xchg
xor
sahf
and
xor
cmp
xor
xorb
fisubl
add
add
xchg
jo
or
pop
add
sbb
lea
inc
add
sbb
nop
push
push
and
pop
dec
adc
mov
fnstenv
shll
mov
inc
inc
sbb
inc
gs
cmp
insb
dec
cmp
xor
jge
cld
xor
xorb
jo
movsb
addl
jg
cmp
push
jecxz
aaa
add
cmpsl
lods
out
inc
inc
sbb
push
cmp
inc
sbb
or
movsb
subl
shrb
pop
dec
out
xor
add
jg
pop
inc
jbe
cmpb
push
dec
cmp
or
aad
mov
out
in
push
xor
jg
dec
xchg
dec
loopne
rcll
xor
cmp
enter
nop
push
in
dec
imul
sbb
or
xchg
scas
or
cmp
mov
loopne
nop
jg
or
sbb
xorb
xor
imul
jg
inc
inc
sbb
adc
sbb
or
push
insb
jg
xchg
pop
pop
aaa
xchg
ljmp
cmp
punpckhbw
or
and
or
mov
scas
xorb
jg
add
jg
imul
or
into
sbb
jg
out
andl
add
movsb
jg
test
jg
pop
jle
add
jg
test
or
aaa
pop
jg
add
dec
sbb
or
dec
push
and
sarb
popf
or
jg
xor
add
andb
dec
add
xchg
jg
cwtl
dec
das
xor
call
test
test
mov
or
addb
add
xchg
dec
xchg
pushf
sub
and
pop
adcl
imul
xor
lahf
sbb
push
sbb
add
shrb
loopne
rcrw
bnd
mov
sbb
psubsb
sbb
sbb
sbb
sbb
or
or
add
pusha
push
sbb
cwtl
inc
sbb
jno
add
xlat
adc
out
cmp
xchg
int3
mov
mov
loopne
pop
repnz
ja
inc
js
pusha
daa
lcall
sbbb
jg
cmpsl
rcrw
rorb
mov
xchg
push
inc
add
nop
fstps
pop
adc
push
int
sbbl
xchg
test
cwtl
cs
pop
push
push
sbb
push
xchg
sub
sbb
mov
xor
pop
pop
mov
outsl
popf
movsl
inc
add
mov
lea
stos
rcrw
or
adc
push
adc
cmp
lcall
push
xor
pop
mov
mov
pop
sbb
mov
sbb
sub
sbb
les
arpl
les
les
ret
push
insl
inc
push
jp
repnz
mov
subl
repnz
adc
filds
pop
xor
push
push
add
sbb
stos
inc
cs
or
inc
add
andl
cwtl
sbb
push
sbb
enter
sbb
sub
in
jnp
mov
and
push
stc
insl
jnp
inc
dec
js
adc
sub
push
rol
cmp
jle
pop
cmp
lods
and
or
or
dec
jmp
dec
add
inc
dec
xor
mov
rorl
inc
subl
idivl
add
sbb
into
add
out
stos
inc
ret
mov
pusha
xor
addb
xchg
push
imul
iret
and
push
mov
dec
xor
inc
ret
or
xchg
adc
stos
adc
push
and
loopne
cwtl
les
inc
add
push
sbb
push
ret
mov
js
stos
pop
inc
xchg
push
in
add
push
or
shrb
shr
mov
mov
rcrl
shrb
dec
mov
dec
adc
sbb
add
fs
xchg
sub
sbb
xchg
push
out
mov
and
mov
push
pop
mov
add
xchg
push
cwtl
dec
mov
movsb
xor
pop
pop
dec
jns
xchg
dec
dec
pop
xor
mov
dec
sbb
mov
or
es
sub
call
mov
dec
sbb
shlb
and
pop
mov
dec
and
sbb
movaps
dec
or
adc
insl
add
dec
fwait
add
sbb
jo
call
push
dec
iret
insl
pop
xchg
ret
push
sbbl
rorb
push
xchg
lret
dec
cwtl
arpl
inc
dec
jns
sub
cwtl
cmc
adc
and
hlt
sbb
sub
add
mov
ds
cmpsb
jmp
sub
mov
xor
int
shrb
shr
cmpsb
dec
adc
add
jmp
add
mov
dec
outsl
mov
stc
adc
fcmovnb
xorl
add
mov
mov
sbb
adc
les
mov
jbe
adcb
dec
mov
mov
push
adc
inc
add
add
push
mov
call
dec
jne
dec
mov
clc
cwtl
ret
and
sbb
and
dec
clc
ret
inc
outsb
push
push
jb
gs
sbb
pop
pusha
les
push
cmp
dec
mov
xchg
roll
pop
mov
pop
jo
pop
ficoms
sbb
sar
push
mov
cmp
or
mov
add
sub
shll
clc
jle
mov
inc
add
imul
jp
testb
pop
out
stos
inc
mov
mov
or
in
push
push
mov
mov
cld
sbb
lahf
or
sbb
pop
push
sbb
inc
sbb
mov
inc
push
ljmp
add
mov
and
mov
push
push
mov
adc
fs
push
mov
lret
out
and
stos
adc
rol
mov
add
nop
xlat
out
cli
push
and
dec
gs
jp
xchg
push
dec
enter
out
loope
and
test
sub
adc
add
dec
push
cmp
fdivl
packssdw
push
out
stos
adc
push
mov
mov
mov
mov
mov
adc
and
mov
mov
push
dec
mov
sbb
or
adc
and
inc
mov
mov
xchg
sub
xchg
push
add
push
test
mov
jne
xchg
push
adc
inc
add
add
or
les
test
negb
cmp
xor
inc
and
adcl
push
and
mov
pop
fbstp
dec
lods
xchg
xor
inc
imul
out
hlt
sbb
or
dec
push
sar
pusha
jnp
and
ss
mov
add
mov
rorb
or
mov
xor
push
and
pusha
lds
enter
mov
push
and
rcll
mov
mov
push
mov
sbb
mov
sbb
adc
xchg
push
inc
and
xor
ret
stos
inc
add
rorb
xor
and
dec
mov
xchg
add
push
mov
pop
push
mov
loopne
mov
push
mov
or
and
mov
stos
inc
add
push
mov
addl
pop
mov
dec
jnp
je
jb
insl
adc
add
fcmovu
xchg
or
push
xchg
and
add
jo
mov
xchg
push
add
inc
cld
rorl
sub
roll
sbb
inc
clc
dec
inc
dec
subl
mov
push
mov
xor
inc
dec
or
xorl
push
and
pop
adc
adc
cmc
xor
mov
push
adc
dec
mov
cwtl
add
push
mov
inc
mov
sbb
test
push
mov
es
inc
add
or
mov
mov
mov
push
in
inc
push
iret
bound
xor
pop
pusha
test
mov
icebp
mov
mov
or
and
pop
ljmp
ret
mov
dec
ret
stc
adc
xor
push
cmpsb
mov
movsb
push
xor
mov
xchg
in
add
dec
pusha
mov
les
inc
stos
inc
add
mov
mov
mov
sub
scas
test
jg
mov
mov
adc
addb
mov
or
shll
xor
adc
sbb
dec
mov
push
movsb
add
push
adc
jo
adc
adc
orb
and
add
and
mov
add
mov
adc
push
mov
mov
add
mov
subl
mov
jne
call
mov
push
push
je
push
sbb
stos
mov
mov
push
mov
xor
inc
pop
clc
xchg
push
sbb
and
adc
aam
mov
ljmp
mov
or
cltd
add
movsl
mov
scas
push
mov
fsubrs
mov
push
mov
inc
xchg
push
mov
mov
push
imul
sbb
mov
dec
fisttpl
loopne
stos
inc
mov
call
add
xorl
ret
ret
jp
mov
cmp
mov
lods
push
frstor
jp
or
test
mov
sbb
sbb
cmp
aaa
imul
pusha
xor
push
sub
cmp
add
push
out
orb
outsb
or
das
sbb
test
adc
or
dec
add
push
mov
adc
mov
mov
adc
and
xor
push
ret
xor
pop
and
pop
mov
mov
scas
dec
xor
pop
mov
dec
xor
xchg
rorb
or
cmp
repz
and
mov
push
mov
mov
inc
add
xor
jo
rol
or
add
pusha
xor
mov
push
mov
inc
add
add
outsl
pushl
test
add
out
add
lock
dec
out
test
or
rol
pusha
sub
stc
movsb
mov
repz
stos
adc
addb
out
es
mov
mov
out
lods
and
mov
push
mov
push
mov
sub
pop
mov
add
dec
xchg
mov
in
dec
outsl
stos
inc
mov
mov
popf
nop
mov
xchg
mov
jo
mov
nop
or
inc
sbb
add
jno
push
mov
add
or
test
and
push
sahf
je
mov
add
ret
cmc
and
sbb
push
and
add
mov
mov
push
cmp
add
jnp
dec
jmp
pop
pop
push
test
fidivl
add
dec
jp
mov
push
movsb
sbb
in
inc
add
jp
or
mov
fcomp
push
mov
and
dec
jp
mov
mov
nop
xor
xor
xchg
cld
inc
mov
in
add
sbb
or
push
or
push
sbbl
mov
inc
stc
mov
push
inc
inc
lcall
call
inc
add
adcl
lock
ja
in
cmc
addb
or
jecxz
inc
and
add
test
sbb
push
xchg
push
test
add
push
adc
js
and
and
dec
or
xchg
add
jo
mov
jge
and
dec
pushf
dec
xor
stos
sub
imul
loopne
dec
or
orl
lock
popf
test
call
and
inc
add
or
xor
push
sbb
cmp
add
loopw
rolb
fsts
iret
cmp
fists
xchg
rolb
imul
mov
xor
andl
popa
das
in
mov
sub
scas
ret
sbb
mov
fnstenv
aas
pop
sbbl
dec
xor
test
sub
shlb
mov
and
mov
dec
nop
pusha
call
jnp
fbld
orl
xchg
push
push
addl
sub
test
sbb
data16
xor
pop
push
sbbl
adc
xchg
xchg
add
pop
subl
and
fisubrs
bnd
mov
pop
push
dec
test
xchg
sbb
andl
sbbl
push
inc
fiaddl
and
incl
push
dec
andl
push
and
cld
add
lock
or
xor
push
out
mov
add
push
mov
lods
inc
xorb
inc
pop
and
stos
xorl
sbb
pop
cmp
sbb
inc
cmp
ds
jmp
dec
xor
subl
roll
jb
or
add
adcl
sub
sub
sub
addl
jno
jmp
push
mov
inc
add
inc
or
add
stos
cmpl
push
lock
jnp
sbb
push
mov
dec
enter
pop
and
clc
xor
push
andl
add
inc
and
and
mov
orl
inc
or
xchg
push
andl
fisubs
push
sbb
adc
or
mov
popf
loopne
sub
xchg
jo
xchg
push
scas
dec
xor
in
in
cmp
fbld
scas
mov
push
dec
push
sub
inc
subl
push
xchg
and
push
mov
insl
sti
ds
shrb
mov
or
jmp
imul
negb
call
xchg
push
mov
adcl
in
mov
call
push
jo
pop
push
mov
pop
xchg
mov
pop
inc
or
dec
xor
call
stos
xchg
or
jns
jl
jmp
inc
add
or
sbb
or
enter
add
push
addl
xor
inc
mov
push
mov
test
add
roll
inc
mov
jo
scas
inc
add
inc
and
push
mov
dec
sub
xor
inc
addl
imul
orl
push
push
xchg
push
mov
subl
fwait
arpl
addb
lods
dec
cmp
sub
roll
movsb
subl
addl
pop
loopne
push
mov
inc
xchg
push
mov
dec
xor
cld
xorl
loopne
dec
xorl
addl
sbb
add
inc
stos
in
aam
add
dec
xor
jae
xchg
cmpsb
stos
inc
sbb
add
push
loope
pusha
and
add
movsb
sub
test
or
push
and
or
xchg
push
push
mov
xorl
mov
sbb
stos
subl
push
pusha
orb
lock
inc
add
xor
cmp
inc
and
outsb
push
pop
push
ljmp
daa
popa
xchg
repz
mov
fdivs
mov
fisubrl
adc
sbb
pop
mov
push
inc
and
push
ja
arpl
je
push
mov
xchg
subl
pop
andl
push
add
adc
roll
pop
push
mov
and
and
mov
xor
ret
lods
push
and
push
mov
cmpl
and
mov
dec
add
mov
add
xchg
pushf
xor
and
sarb
cmp
sbb
call
mov
subl
lahf
clc
dec
inc
or
inc
pusha
and
and
in
ret
inc
xchg
push
sub
rolb
or
xchg
roll
mov
xor
sbb
rcl
push
mov
pushf
rolb
sbb
sub
cs
and
cmp
adc
or
sub
sub
or
add
mov
mov
or
adcl
add
jo
subl
adcl
ja
adc
or
test
jo
sbbl
cmp
inc
and
ss
cmp
aam
insb
call
sti
loope
sub
sbb
adc
mov
call
dec
add
cmp
mulb
jmp
cmp
pusha
push
push
mov
add
adc
mov
outsb
mov
adc
das
ss
push
jns
jp
push
mov
xorl
add
jp
push
xchg
mov
adc
int
or
sbbl
or
pop
dec
xor
fsubp
out
adc
cmpsw
xor
sbb
fldcw
cmpb
add
sub
in
scas
test
stos
aas
mov
pushf
xchg
hlt
jmp
sbb
push
add
and
or
inc
andl
es
adcl
inc
lds
sbb
inc
dec
das
sub
add
sahf
out
inc
lods
adc
sbb
mov
sahf
data16
es
or
push
mov
jnp
testl
push
pop
pop
cmp
repz
arpl
mov
icebp
add
outsl
negb
dec
ja
mov
es
testl
push
or
dec
fidivl
rorb
push
out
push
push
xor
imul
push
mov
andl
adc
or
and
xor
mov
mov
mov
aad
sbb
sub
push
xchg
sbb
push
cwtl
js
push
mov
adcl
sbb
nop
cmp
shlb
aaa
sub
push
cmpl
andl
push
xchg
push
push
into
mov
dec
pop
sbb
adc
push
mov
orl
sbbl
fdivrp
jp
mov
xor
jbe
xchg
push
or
sahf
arpl
sbb
mov
sub
addb
cmpsb
sbbl
out
dec
cmp
dec
xor
ss
xor
cwtl
mov
orb
push
faddl
mov
mov
or
call
mov
rol
imul
iret
js
mov
adc
xor
fldenv
push
loopne
push
push
adc
shlb
subl
out
and
and
push
push
mov
subl
es
dec
pusha
imul
xchg
push
roll
xchg
push
push
add
and
lock
test
add
adc
rol
sbb
push
imul
adcl
orw
mov
orb
pop
mov
sub
mov
sbbl
pop
sbb
inc
add
adc
fdivrl
cmpsl
adc
pop
mov
out
and
adc
mov
add
les
gs
popa
stos
inc
andl
roll
shlb
into
mov
movswl
pop
lds
adc
stos
stos
inc
adc
mov
xor
lods
jne
push
sbb
xchg
mov
cmp
sysenter
mov
call
xchg
push
sbb
sbbl
inc
push
das
cmp
add
add
test
mov
mov
in
lcall
xchg
jl
sbb
mov
dec
loop
lahf
loopne
mov
xchg
mov
push
jo
test
mov
dec
jne
insl
es
rolb
enter
sbbl
rol
dec
mov
cs
loope
inc
and
xchg
cmpsb
sbb
dec
xor
ljmp
cmpsl
or
mov
push
xorl
dec
bound
and
xorl
mov
xor
push
xchg
push
and
xor
cs
andl
push
adcl
sbb
jo
out
adcb
orl
sbbl
or
add
cmp
push
mov
adc
sub
andl
in
inc
adc
roll
inc
and
dec
mov
or
call
jae
stos
lcall
subl
imul
and
lods
dec
xor
mov
addl
imul
pop
add
adcl
add
adc
test
subl
add
cmp
push
mov
xchg
cmp
loop
leave
mov
rol
subl
lcall
subl
and
adc
push
orl
adcl
sub
addb
adcb
loopne
sub
add
test
xor
movsb
orl
int3
negb
adc
cwtl
jo
dec
mov
dec
xor
inc
addl
pusha
orb
sbb
and
stos
inc
add
addl
push
mov
in
std
push
nop
orl
cmpl
fcoml
outsb
add
mov
and
inc
orl
rorb
sub
xchg
push
add
or
call
stos
inc
add
mov
mov
aam
test
loopne
aaa
movsb
test
or
mov
orl
add
sbbl
addl
push
addl
mov
push
subl
cmp
cmp
adcb
movsl
jb
outsb
sub
test
or
and
sub
sarb
and
and
roll
mov
jnp
rcrb
jnp
and
xchg
push
jl
mov
inc
rorb
sarl
notb
adc
or
stos
adc
scas
mov
mov
dec
sub
inc
add
or
adc
stos
adc
xor
stos
inc
adc
shll
mov
rcrb
insb
cwtl
outsl
mov
inc
and
and
mov
xor
push
mov
push
push
xchg
mov
mov
xor
xor
push
xchg
mov
int3
adc
pushf
jmp
mov
push
sbb
shrl
xorl
sarl
pop
repnz
push
adc
or
cmpb
add
gs
jns
rorb
cltd
mov
sbb
add
add
jo
dec
pop
repnz
fistpll
leave
add
pop
dec
leave
adc
sbbl
inc
add
inc
gs
jb
or
mov
sbbb
sbb
push
gs
push
push
andb
or
inc
mov
adc
adc
and
mov
pusha
add
push
gs
push
or
inc
dec
fsubrs
pop
imul
movsl
jne
xchg
push
push
cmp
adc
adc
data16
mov
sti
adc
xor
and
stos
xchg
loopne
adc
rol
xchg
mov
out
mov
xor
dec
gs
and
and
mov
mov
gs
cmpsb
dec
xor
xchg
mov
and
add
shll
inc
jo
and
or
gs
cmp
test
or
fldt
scas
sub
in
pusha
adc
gs
and
gs
adc
or
sub
and
push
mov
xlat
and
or
subl
jae
xor
xchg
ret
loop
gs
clc
mov
pusha
and
inc
pop
push
mov
dec
xor
push
sub
dec
and
and
loopne
push
sub
adc
push
pop
jp
pop
sti
int3
jl
adc
push
pop
push
xchg
push
add
jo
inc
jo
pop
dec
lret
adc
and
or
test
gs
fsubl
sub
xchg
push
loopne
test
test
push
push
rol
dec
and
push
push
out
sub
gs
adcl
sbb
sar
push
and
cmpb
sbb
sbb
gs
mov
adc
xor
sbb
gs
mov
lods
orl
es
es
daa
fwait
inc
inc
icebp
sub
lcall
gs
inc
sub
mov
js
pop
adc
cltd
test
adc
push
dec
dec
mov
push
js
cmp
adc
repz
int
fst
inc
cmp
push
inc
and
inc
or
add
dec
mov
mov
insb
sbb
ficoms
pusha
negl
sub
insb
push
push
inc
jecxz
or
or
sbb
mov
rcrb
push
xchg
test
sbb
push
pusha
adc
jo
mov
shrb
dec
dec
mov
andb
mov
push
push
stos
pop
call
fs
leave
dec
cmp
notb
or
sbb
pusha
fwait
lds
out
push
mov
or
add
push
out
pusha
adc
xor
mov
into
or
pop
mov
in
or
push
xchg
push
add
rcrb
mov
bound
or
add
out
mov
int
fisubrs
mov
movsl
sbb
into
push
inc
stos
dec
xor
rorl
nop
inc
inc
push
mov
stos
dec
dec
mov
lods
addl
pusha
adc
sbb
call
dec
clc
and
loopne
xchg
xor
fwait
inc
add
inc
jo
call
jmp
mov
cmp
sbb
mov
mov
lds
cmpsl
xchg
push
mov
xchg
les
lods
dec
adc
or
into
mov
out
bound
pop
xor
out
and
xchg
mov
sbb
test
rclb
jae
xor
add
xor
adc
jae
in
mov
movsl
and
adc
add
jnp
cmpsb
sbb
dec
mov
mov
cld
add
cmp
push
gs
sub
and
mov
mov
mov
in
cli
test
mov
sbb
stos
andb
add
dec
daa
lods
jae
adc
or
stos
daa
xor
rcl
sbb
add
dec
xor
repnz
add
or
dec
mov
rorl
sahf
dec
lods
add
xchg
xchg
push
ret
sahf
sarb
mov
fs
mov
push
mov
pop
adc
mov
ret
rorl
sub
or
sub
xor
out
js
or
fs
xor
xor
cmp
neg
xchg
or
incb
pop
push
lds
ja
fwait
mov
pop
inc
push
xchg
adc
lods
cvtps2pd
cmp
mov
pop
mov
jo
mov
outsb
sbb
and
pop
sbb
addb
in
or
sbbb
imul
jg
iret
imul
clc
pop
add
sbb
inc
adc
add
mov
movl
loopne
sub
pop
inc
add
in
add
adc
mov
mov
scas
or
outsb
sbb
adc
pop
push
push
in
inc
and
ja
mov
fcoml
addr16
or
or
cmp
call
or
leave
add
mov
xor
sbb
addl
cwtl
int3
leave
add
fstpt
loope
and
inc
mov
or
or
rolb
mov
jbe
sti
pop
inc
mov
inc
and
xor
or
rcrb
loop
push
nop
sbb
inc
cli
xor
clc
inc
cmp
xor
mov
xor
in
subl
xor
xor
aaa
cmp
mov
std
cmp
xor
out
mov
cmpsl
push
stc
push
int3
push
add
inc
jno
stc
mov
push
sbb
push
cwtl
cmp
push
adc
jmp
jmp
jo
push
mov
out
push
les
les
or
fcmovne
inc
les
mov
sbb
mulb
mov
and
dec
mov
les
mov
sub
push
mov
mov
push
shrb
pusha
add
rorl
and
add
cli
dec
push
xor
mov
mov
inc
pop
push
push
or
xor
xor
daa
rol
rcrl
mov
or
adc
jo
push
inc
xchg
push
push
aam
sbb
push
mov
in
std
mov
mov
mov
mov
xor
pusha
add
xor
rorb
lcall
mov
dec
and
cmp
mov
rol
int
clc
adc
or
pop
adc
mov
ja
and
mov
mov
mov
inc
fbstp
inc
mov
add
push
or
cmp
and
xor
push
pushf
jmp
lahf
sbb
jns
popf
repnz
call
and
in
mov
rcrb
xor
sbb
sbbl
push
mov
jnp
pop
leave
cwtl
push
addl
lahf
xor
and
mov
mov
int3
mov
sub
data16
jge
mov
xchg
push
adc
xchg
push
lahf
inc
add
add
pusha
mov
stos
call
data16
loopne
out
jns
ljmp
popf
jo
adc
add
xor
xor
push
mov
add
lahf
add
jl
dec
shr
or
xchg
push
in
jbe
or
repnz
and
sub
int
xor
dec
push
fs
pusha
pop
sbbb
lahf
pop
xchg
pushf
sub
pop
push
stos
and
or
adcb
add
xor
popa
incl
rorb
xor
loopne
and
inc
xchg
lahf
ja
mov
out
and
inc
test
and
jo
mov
lahf
cmp
or
push
add
and
lahf
inc
mov
adc
sub
mov
xor
or
or
insb
push
inc
mov
scas
mov
dec
mov
les
inc
cmp
lahf
daa
and
cmp
inc
hlt
call
inc
lahf
sar
or
and
loope
xlat
lds
cmp
mov
test
mov
dec
or
xor
inc
xor
adc
pop
and
cmpsl
aaa
dec
pop
pop
adc
mov
adc
sub
js
lahf
sbb
add
xchg
xchg
lret
xchg
je
pusha
jecxz
adc
mov
or
faddl
into
cmp
aam
mov
je
adc
test
loopne
js
xchg
sbb
jns
add
xchg
mov
enter
mov
or
sub
pusha
mov
xchg
xor
dec
xor
in
jb
jb
cmc
add
nop
or
out
mov
xor
call
or
xchg
jno
cmc
and
mov
nop
sbb
ja
adcb
ds
and
inc
xchg
and
in
sbb
roll
lahf
cmp
orb
lds
test
pop
fdivs
fst
loope
lahf
mov
in
sbb
pop
lcall
fstl
sbb
mov
xchg
mov
adc
add
in
push
mov
or
rcll
mov
and
mov
dec
xchg
adc
and
sbb
pop
sub
inc
sbb
je
cli
js
adc
inc
add
sbb
sbb
in
in
add
push
lahf
mov
mov
and
lahf
ret
mov
lahf
pop
mov
lcall
push
lahf
dec
xor
add
mov
lods
cmp
mov
pop
and
lahf
xlat
xchg
dec
xor
jbe
pop
nop
dec
adc
mov
mov
cld
rcrb
mov
dec
mov
dec
lahf
cmp
sbb
ret
inc
mov
adc
lahf
xchg
and
adc
mov
push
push
lahf
and
rorb
test
lods
fimuls
adc
lahf
loop
inc
add
lahf
and
mov
add
or
dec
mov
mov
adc
push
pop
leave
pop
pop
adc
inc
and
mov
scas
pop
adc
xchg
pop
sahf
testl
lahf
daa
adc
lahf
mov
fs
or
in
mov
cs
xchg
and
mov
cmpsb
adc
in
xchg
mov
xchg
int
fadds
es
mov
sub
xchg
pusha
adc
mov
lea
rcr
lcall
lahf
xchg
push
xor
xor
dec
add
dec
lahf
test
mov
push
inc
inc
lahf
pop
inc
and
fcoms
pushf
add
push
and
or
sahf
test
aaa
lahf
rol
sbb
add
mov
inc
lahf
dec
mov
inc
add
lea
xchg
shlb
movsb
and
lahf
push
lahf
adc
push
sahf
pop
lahf
ds
sbb
adc
push
lahf
imul
inc
add
rcrb
and
cltd
lahf
xchg
push
lahf
xor
add
andl
or
je
dec
or
and
lahf
xor
inc
mov
lahf
xchg
push
push
lahf
or
imul
sub
mov
push
or
push
adc
push
shrl
inc
lock
lods
sbb
daa
and
pop
fwait
mov
daa
mov
shll
cltd
add
and
or
sbb
daa
xchg
push
fs
mov
in
inc
mov
pop
adc
mov
stos
mov
into
push
inc
mov
mov
insl
push
xor
adc
mov
sbb
sub
or
inc
data16
sbb
subl
push
push
mov
xor
adcb
pusha
inc
loop
daa
add
add
and
jo
daa
lahf
psrad
js
cld
adc
test
adcl
inc
daa
aam
lock
inc
mov
push
stos
fwait
bound
push
mov
daa
subl
call
sbb
and
daa
and
or
roll
push
ds
rolb
daa
mov
push
pop
xchg
push
rol
cwtl
daa
push
scas
aaa
lods
add
call
mov
dec
pushf
movsb
mov
jo
addl
mov
inc
push
and
or
daa
cmp
adc
je
add
and
and
daa
inc
lret
mov
mov
pusha
test
or
add
push
inc
sub
daa
inc
mov
and
cmp
shlb
arpl
sbb
xchg
add
add
dec
xor
mov
adc
rol
sbb
or
xlat
enter
adc
jo
push
xor
in
stc
clc
jmp
sbb
cld
loope
inc
and
mov
or
sub
movsb
xor
inc
mov
cmp
pop
outsl
push
dec
sbb
inc
and
roll
and
or
daa
adc
pusha
and
xchg
outsb
push
lock
xor
or
test
and
jns
mov
xchg
push
push
sbb
dec
adc
in
pop
dec
daa
adcb
jl
outsb
dec
push
repnz
mov
sub
or
scas
mov
mov
mov
jg
and
or
daa
and
cmpb
xorl
cmpsb
mov
and
daa
pop
mov
sahf
out
dec
xor
jmp
popf
adc
inc
dec
sbb
inc
daa
dec
xor
mov
mov
shl
and
in
cmp
or
shll
mov
xor
push
clc
subb
daa
lret
add
inc
dec
pop
sbb
pop
xchg
addb
pand
daa
adc
xchg
jmp
daa
dec
xor
inc
clc
mov
das
loopne
and
cmp
mov
aaa
xchg
daa
sbb
adc
daa
lret
adc
xchg
push
adc
pop
daa
xor
cmpl
and
js
daa
and
or
sbb
lahf
push
push
dec
push
daa
push
loopne
adc
daa
divl
dec
xor
in
mov
push
jo
subb
add
xor
mov
shl
daa
xor
daa
imul
mov
daa
jns
xchg
push
mov
push
push
xlat
and
jge
adc
inc
sub
mov
and
mov
xor
lds
loopne
push
inc
rorl
faddl
push
and
or
inc
mov
xor
xchg
imul
inc
mov
pop
fmull
and
sbb
jbe
and
or
loopne
aam
mov
lods
daa
push
out
add
jnp
jne
mov
daa
out
sbb
out
mov
cmp
pop
inc
and
dec
add
andl
daa
jg
fnstenv
cwtl
ret
out
push
push
xor
cmpl
push
mov
scas
dec
xor
icebp
scas
dec
xor
add
jecxz
loopne
xchg
out
sbb
call
daa
sbb
push
jle
insb
lods
add
in
lcall
fs
adc
inc
and
daa
mov
daa
inc
and
mov
sbb
pop
push
adc
add
mov
inc
and
daa
inc
add
and
js
mov
imul
ret
jb
jb
cmp
dec
xor
shlb
mov
or
mov
mov
add
loop
jo
adc
lods
jl
test
loopne
adc
push
xchg
push
or
bound
inc
and
ret
xor
xor
pop
pop
loop
out
push
roll
push
out
inc
xor
push
pop
add
and
add
call
outsb
mov
jo
jns
sahf
ret
mov
jecxz
mov
ret
hlt
out
imul
ret
sub
rcrb
push
stc
sbb
and
mov
lret
cmp
xor
jg
sub
lods
cwtl
pop
xchg
dec
inc
and
adcb
imull
xchg
mov
insl
jo
inc
or
pop
mov
and
and
in
xchg
iret
push
xor
pop
js
lret
outsl
and
in
mov
push
inc
sub
dec
scas
push
scas
jbe
or
push
addr16
pushf
or
cmp
xchg
xor
loopne
xorl
cld
imul
or
js
cmp
lock
lock
lds
add
in
outsb
dec
mov
shll
lods
fwait
xor
mov
pop
or
outsl
sub
jnp
sub
add
lahf
pushf
lcall
or
xchg
push
ljmp
sbbl
addr16
pop
repz
push
sbb
subb
aad
add
inc
clc
fabs
mov
sub
jnp
and
repz
pusha
bound
sbb
daa
aaa
cld
push
cltd
in
mov
add
subb
mov
mov
push
mov
insl
mov
adc
enter
lods
lret
cmpb
addr16
jo
jecxz
nop
mov
movb
insl
mov
xchg
mov
sub
andb
sbb
xchg
insb
push
adc
add
test
adc
xchg
ficoml
iret
xchg
push
repz
adc
push
xor
ror
sub
test
lret
inc
pop
cmpl
nop
mov
xchg
push
addr16
mov
dec
outsb
sarl
mov
jmp
aas
das
mov
pop
lock
rclb
outsb
fld1
insl
sub
popf
shrb
and
adcl
fcoml
push
jo
fs
jno
push
fnstenv
mov
movsl
pusha
xor
cmp
mov
or
inc
mov
addl
jge
addl
adc
mov
add
inc
std
add
and
xchg
mov
inc
add
mov
or
jmp
or
mov
movsb
add
scas
dec
addr16
adcl
push
addr16
nop
jmp
cmp
mov
push
adc
or
sub
in
jns
cmp
add
mov
push
gs
fstp
bound
add
add
sti
lea
loopne
dec
rcr
daa
rolb
shlb
ret
xor
pop
std
mov
push
lds
jp
dec
mov
lock
push
sub
adc
orb
pop
adc
fs
sub
data16
inc
add
scas
cmp
inc
add
xor
sbb
je
frstor
fnstenv
pop
push
ljmp
outsb
rol
sbb
or
test
aam
clc
popl
aaa
push
adc
sbb
push
sbb
js
test
mov
fcoms
aam
js
sbb
sbb
add
and
or
into
dec
or
ljmp
scas
xchg
aaa
push
mov
or
addl
les
fstps
std
or
mov
flds
add
sbb
flds
mov
sbbl
fxch
and
outsl
adc
push
xor
nop
push
or
int3
jbe
xchg
cld
inc
lret
test
push
xor
cmp
jle
push
adc
enter
ficoms
xor
jp
push
add
cmp
jl
pop
xchg
addb
and
pop
sub
push
dec
and
fwait
xchg
sbb
or
lds
roll
push
rol
pop
and
mov
push
pop
xor
cmpsb
push
inc
inc
add
inc
pop
adc
inc
add
pop
and
pop
aas
call
adc
inc
and
cmp
pop
cmp
mov
lock
jle
adc
inc
xor
fdivrs
frstor
jp
xchg
add
inc
xor
add
fcomps
mov
lods
loop
leave
rclb
push
push
pop
xchg
mov
orb
sub
push
test
imul
sbb
cs
inc
and
mov
xor
xchg
push
mov
cmp
insb
jecxz
sub
incl
add
clc
or
in
adc
arpl
pop
pop
push
faddl
outsb
in
popf
adc
or
in
stc
push
dec
and
dec
xchg
shl
adc
or
jbe
and
adc
dec
test
cmp
inc
out
xor
je
rolb
add
jmp
dec
cmpl
sub
and
jo
enter
pusha
adc
inc
xor
xor
out
lods
or
scas
out
push
dec
pop
loop
dec
dec
xchg
out
adc
subl
rcll
out
and
and
mov
xorl
scas
sub
mov
loopne
out
subl
fcompl
jl
testw
cvtdq2ps
mov
inc
cmpsl
addl
or
pop
add
xchg
outsb
and
or
roll
push
push
sbb
out
stos
pop
sbb
mov
xor
xor
dec
add
push
pop
fidivl
inc
cld
push
outsl
jnp
pop
cmpsl
test
stos
or
test
dec
mov
push
sub
sbb
das
test
imul
fiaddl
mov
xchg
pop
add
inc
jp
fisttps
dec
jmp
sbb
xor
rolb
and
test
push
mov
enter
loope
inc
add
loope
xor
mov
mov
mov
xor
xchg
cmpsl
cmp
add
test
addl
bsf
xchg
shrb
lret
inc
add
adc
add
aad
rol
or
das
or
jae
xor
and
jg
cmp
aaa
adc
sub
jmp
mov
in
fistps
pop
mov
adc
adc
push
fmul
pop
cmp
inc
int3
jae
jae
cwtl
or
and
in
insb
push
mov
push
pop
pop
out
cwtl
test
cmpl
mov
xchg
xchg
mov
pop
or
repnz
nop
adc
jmp
pop
push
das
lahf
or
jne
sub
push
mov
inc
jo
inc
call
sub
mov
sub
or
adc
arpl
mov
push
and
pop
dec
push
sarb
in
scas
add
arpl
dec
mov
push
mov
add
add
sub
add
add
add
inc
arpl
push
mov
jo
arpl
inc
add
cmp
inc
adc
sub
cmp
arpl
pop
push
push
xor
fisubl
andl
and
xor
mov
arpl
orb
cmp
cld
add
sarb
daa
mov
push
mov
ss
dec
js
mov
mov
cmp
sbb
iret
inc
dec
or
sbb
mov
pop
les
mov
hlt
jo
cmp
rolb
xlat
mov
sbb
xor
loopne
mov
sbbl
cmp
shlb
push
rolb
lods
fidivs
xchg
and
pop
mov
fcomps
mov
insb
mov
mov
jbe
pushf
xchg
inc
icebp
ret
xor
andb
sbbl
outsl
sbb
adc
inc
jmp
dec
or
xor
pinsrw
in
sbb
push
jae
mov
mov
push
add
or
sti
mov
adc
add
pop
mov
dec
dec
jno
out
pop
dec
inc
movsl
push
and
enter
rol
or
mov
add
inc
stos
pop
adc
xchg
lcall
stos
ret
fs
rcrb
and
rolb
mov
subl
adc
dec
ficoml
pusha
jo
pop
push
jnp
push
adcl
roll
stc
sub
andb
les
and
add
cmp
mov
int
call
add
cmp
das
sub
pushf
test
je
xchg
cmp
push
add
jmp
mov
xchg
ret
or
and
xor
fadd
in
sub
xchg
fs
in
aad
in
es
shl
cmp
test
stos
scas
es
sarb
insl
call
cs
pop
add
and
adc
sbb
fwait
xchg
aad
or
call
mov
push
jmp
into
pop
add
test
fsubrs
mov
xchg
mov
inc
es
lds
inc
imul
mov
decl
sub
push
push
inc
fdivl
daa
aas
aam
mov
pop
push
test
pop
push
and
ds
call
mov
ljmp
sub
add
push
sahf
out
lock
rorb
jmp
ss
jecxz
inc
dec
adc
dec
inc
mov
in
dec
ret
aad
movsb
jle
verw
push
jns
mov
dec
lock
sahf
push
sub
pop
fsubrs
test
aam
sbb
cld
stos
mov
push
and
push
pop
stos
lods
jmp
fs
xchg
rcrb
fdivrl
cmp
call
sbb
mov
push
jmp
sub
adc
clc
cmp
test
add
out
pusha
aad
repz
and
xchg
shlb
and
mov
xorb
jg
jmp
lret
jl
pop
pusha
adc
xchg
lret
push
ret
out
sbb
fwait
adc
in
push
xchg
js
adc
jle
push
push
imul
cmp
dec
xlat
shl
mov
cmp
ja
fildll
push
add
paddusw
pinsrw
shr
jns
push
pop
dec
jbe
pop
ds
cmp
xchg
or
mov
rolb
mov
push
sub
bndldx
and
push
mov
pop
cmp
insb
inc
push
ret
in
int3
popa
cmpsb
and
movsl
jge
test
xor
pop
add
pushf
mov
push
aas
cs
nop
dec
in
rorb
push
jo
push
call
and
and
pop
lcall
sarl
sbb
scas
test
add
sub
int3
mov
inc
comiss
pop
cmp
lret
fbld
mov
sub
mov
dec
loopne
push
jne
add
shlb
pusha
addl
jmp
dec
pop
cwtl
mov
mov
fidivrs
mov
dec
xchg
iret
xorl
sub
stc
add
mov
pop
jne
xchg
fidivs
cld
cs
lds
aas
fwait
dec
ds
add
ret
jg
and
jns
daa
imul
push
aad
mul
xchg
mov
inc
dec
push
notb
adc
add
mov
test
push
cli
inc
adc
or
dec
in
mov
or
call
fiadds
adc
jmp
rolb
cmpsb
fcompl
daa
and
push
push
test
inc
sub
sub
lret
add
push
mov
dec
gs
lret
dec
or
adc
push
sbb
push
push
lods
sar
lret
add
sbb
dec
fdivl
outsb
nop
int
outsl
mov
sbb
dec
gs
jle
jo
sbb
movsb
bound
pusha
push
test
cmp
mov
in
sbb
and
cld
jl
addr16
outsb
nop
outsb
nop
sbb
mov
lret
mov
mov
mov
stos
popf
jle
push
cmp
lahf
popf
adc
cmp
xchg
lret
imul
mov
aas
in
lea
inc
sub
es
xchg
xchg
fdivrl
lock
lret
aas
xor
cli
sbb
push
adc
lret
xor
adc
movsb
xor
pop
fdivl
test
rcrb
lods
movsb
aas
fidivrs
leave
cs
sbb
outsb
nop
lods
clc
outsl
insb
aas
xor
fcomps
and
or
sbb
push
push
test
xchg
jae
sub
aas
jl
in
or
xchg
daa
scas
popf
in
and
aaa
dec
aaa
nop
sbb
mov
gs
mov
sahf
cmp
call
in
dec
sub
sub
pop
jns
sti
xchg
nop
insl
push
xor
cmp
fidivs
add
dec
cld
mov
mov
cs
pop
or
mov
mov
sub
cmp
dec
cmp
das
in
nopl
call
lahf
push
mov
or
add
pop
dec
outsb
jmp
lahf
jecxz
fadd
lret
decb
fsubr
rorl
sub
mov
das
outsb
push
adcb
push
dec
movsl
jb
mov
push
sub
mov
shlb
or
and
into
sti
dec
or
jns
scas
mov
fldl
mov
mov
scas
mov
push
add
sub
nop
mov
push
pop
imul
xchg
lret
imull
inc
or
test
fisttpll
negb
jmp
es
icebp
jl
setle
sahf
outsb
dec
cmp
cmp
mov
loope
xchg
scas
rcr
vpmacssdqh
mov
mov
mov
nop
data16
fimuls
les
pop
xchg
jle,pt
sbb
sub
popf
call
inc
movsb
mov
psraw
test
arpl
lcall
push
jge
dec
int3
adc
movsl
adc
xor
hlt
push
xchg
les
je
sub
in
fs
sbbl
les
shr
les
adc
incb
loope
jb
mov
xchg
dec
sarb
icebp
sub
stos
inc
jle
pop
dec
dec
sub
xchg
shll
sbb
rcrl
push
pusha
and
add
lcall
inc
inc
push
in
dec
mov
aaa
aam
or
nop
orl
inc
mov
loope
mov
je
pushf
hlt
std
mov
inc
cld
pushf
movsb
jmp
adc
sub
fisubrs
adc
in
xchg
mov
outsb
aaa
ds
aas
mov
js
or
ss
aas
or
cld
sbb
push
adc
je
fstp
popf
iret
dec
mov
cmp
fdivp
ja
and
nop
lods
jle
fnstcw
rolb
xchg
push
cld
pop
sti
addr16
popa
ja
dec
xor
lcall
ret
int
leave
jle
in
xor
in
sti
repnz
aaa
or
or
add
push
cli
or
or
inc
aad
or
dec
jg
rorb
imulb
lods
mov
in
pop
push
nop
aam
pop
adc
sahf
mov
scas
mov
sub
adc
push
dec
cmp
pop
sub
xchg
dec
idivl
fstps
mov
push
mov
mov
and
dec
leave
lret
or
mov
sti
jle
sub
and
test
xor
adc
enter
push
xor
and
mov
incb
aas
outsb
dec
lods
mov
lods
ds
dec
frstor
scas
es
js
jg
pop
call
cmp
sahf
sti
add
js
das
lods
icebp
pop
push
mov
testb
rclb
movsl
mov
das
cwtl
mov
xor
fdivrs
push
push
dec
sub
in
mov
xchg
pop
call
jmp
stos
push
jmp
push
mov
sub
aas
cs
push
dec
out
sub
push
dec
push
jns
std
cmp
repnz
sti
popf
pop
xchg
xchg
adcb
es
stos
aam
enter
push
iret
sub
bound
adc
in
jge
cld
push
call
imul
fildll
arpl
js
ja
add
mov
dec
push
dec
xor
adcb
pop
fsubl
lahf
int
add
lret
xchg
cli
in
out
in
cmp
roll
pop
jo
outsb
cmpsb
add
mov
jg
dec
movsb
cltd
es
cwtl
data16
fwait
push
mov
pusha
pop
lahf
enter
clc
xchg
shr
xor
adc
call
mov
out
movsl
movsb
mov
js
cld
xor
movsl
ds
pop
fidivrs
lods
push
cmpb
lret
imul
add
pop
sbb
aad
repnz
sbb
sti
add
clc
adc
lods
ds
mov
addr16
nop
ss
stc
xchg
or
adc
orb
xor
adc
jb
out
rcr
push
fstps
or
inc
or
outsb
mov
movsl
arpl
inc
xchg
cld
sub
fucom
jns
cld
jge
adc
dec
in
adc
std
push
push
mov
mov
in
test
push
sub
sub
xchg
out
repnz
push
or
mov
xchg
mov
fisttps
inc
push
repnz
mov
and
jns
lret
mov
nop
xchg
push
mov
enter
insl
mov
in
vmwrite
mov
repnz
xchg
mov
jns
inc
push
pop
mov
jne
and
scas
mov
dec
sub
pushf
in
sti
inc
jg
lods
cmpl
sahf
ret
cs
hlt
mov
mov
dec
lret
nop
lret
mov
jmp
cmp
sbb
aaa
js
jmp
sbb
lock
sahf
adcl
lret
nop
lret
push
cmp
loopne
sbb
and
pop
rclb
clc
mov
xchg
dec
dec
cmpsl
test
aas
ds
push
push
sarb
inc
mov
jae
push
in
movsl
sub
jmp
ror
repz
sub
test
xor
ja
repnz
push
mov
inc
pop
dec
sub
sub
dec
mov
ret
movsl
sarb
loopne
cmpsb
les
add
inc
ljmp
adc
or
inc
pop
or
cmp
xor
mov
jmp
jo
stos
add
sahf
inc
jg
pop
cld
ds
push
cmp
jle
shrb
add
outsl
ret
dec
push
dec
mov
push
movsl
jb
sub
aas
inc
sub
add
mov
lret
mov
aas
jg
lret
xor
adc
ja
sub
cli
adc
push
aam
repnz
rolb
enter
lods
je
push
adc
push
mov
fcmovne
sub
sbbl
icebp
hlt
adc
push
sub
mov
add
cmp
lds
insl
push
sti
sub
cltd
scas
or
movsb
or
cmp
icebp
cltd
or
add
loopne
or
or
xchg
lret
enter
rcl
dec
pop
inc
lods
fadd
sbb
sub
fistps
outsb
divb
mov
ja
leave
mov
or
mov
jg
jl
jae
sub
test
sti
mov
dec
push
jp
xor
adc
imul
ds
lret
mov
sub
cwtl
ds
dec
shlb
ja
adc
lods
sahf
xchg
out
fmuls
cmp
cmp
nop
insl
les
cmp
nop
shrl
xor
test
sahf
push
mov
add
ja
or
fadds
fdivs
rclb
mov
sub
mov
cmp
in
pop
sarb
ds
test
pusha
ja
nop
dec
clc
jbe
jg
aas
jno
nop
sub
mov
fidivrs
pop
outsb
dec
jle
push
mov
or
sbb
and
push
mov
cmp
cld
lahf
and
dec
dec
incl
dec
sbb
das
add
adcb
stc
sub
loop
movsb
xchg
mov
or
adc
add
jmp
ret
and
push
sbbl
or
fdivrs
xor
dec
cwtl
cmp
or
jl
xchg
adc
inc
pushl
shrb
pop
inc
fdivl
or
cmp
popf
inc
repnz
cmp
mov
pusha
mov
push
mov
cmp
ret
outsb
cmp
dec
popf
push
aad
fcomp
add
scas
imul
rclb
push
push
pop
ja
mov
ror
rorb
mov
fstl
push
mov
test
call
rorb
xchg
pop
or
dec
sahf
mov
mov
jmp
enter
cmp
test
mov
mov
sub
lret
out
cmp
stc
in
test
sub
arpl
rcr
cmp
movsl
push
jmp
xor
dec
addr16
js
mov
push
rclb
cmp
movsl
jb
subb
clc
cmpb
add
dec
ss
jle
out
arpl
cmp
add
popf
lds
push
stc
enter
mov
jmp
dec
sub
adc
cwtl
js
lea
je
mov
bnd
pop
add
ret
xchg
dec
sarl
loopne
add
sbb
loopne
les
dec
test
lock
jne
add
add
loopne
jmp
xchg
notb
out
fildll
ljmp
nop
into
dec
aaa
adc
mov
xchg
xor
loopne
add
ss
push
out
pusha
pop
fmull
or
pop
pop
push
sti
dec
in
jmp
ss
fdivr
jle
push
bound
jae
lahf
pushl
or
cmpsb
xchg
dec
stos
sahf
out
addr16
ja
inc
test
stc
pop
movsl
cltd
xchg
jne
mov
ret
xor
pop
add
push
sub
scas
xor
dec
add
mov
mov
and
jns
inc
mov
scas
fs
mov
scas
adc
xchg
xchg
popf
scas
scas
mov
dec
jae
mov
mov
cmp
xchg
scas
pop
scas
adc
xchg
lods
xor
mov
lods
mov
repnz
scas
sub
cld
cld
lds
adc
push
in
cmc
xor
xor
in
pusha
dec
and
push
fidivl
pusha
pusha
mov
in
lods
mov
sub
fst
pop
lret
aas
sarb
fistpll
addb
xchg
inc
add
cmovs
xchg
dec
xor
dec
mov
repz
adc
lds
adc
push
iret
mov
and
jo
jmp
fnstsw
xchg
inc
pop
insb
sbb
repz
xchg
mov
push
fiadds
repnz
adc
pop
or
xchg
aas
jl
test
andb
out
xorl
insb
xchg
fcomps
mov
push
jb
lods
dec
or
mov
push
push
cmp
fidivrs
cmp
push
ss
adc
arpl
jae
mov
pop
aas
push
fadds
add
das
mov
xor
mov
push
fcom
test
xor
fwait
in
cld
inc
in
cs
idiv
sub
adc
repnz
adc
leave
rsm
clc
push
xor
test
dec
sahf
leave
test
or
into
add
mov
cmc
movsl
sub
nop
in
icebp
cmpsb
test
xchg
flds
sbb
ret
sub
in
push
in
push
cs
inc
adc
lret
leave
in
inc
in
xchg
fildll
stc
fisubrs
xor
adc
or
sahf
xor
xor
mov
ds
pop
xchg
dec
in
imul
aas
add
sbb
in
adc
enter
or
pop
sahf
mov
das
push
fsubrs
rorb
mov
sbb
fs
das
aas
popf
ss
xor
lret
inc
mov
sub
je
in
push
sahf
daa
xlat
jne
add
mov
cmp
xor
jae
push
dec
push
mov
jg
in
subb
das
inc
lret
outsl
inc
inc
or
fneni(8087
sub
pop
or
push
out
cs
dec
gs
sbb
cmp
out
shrl
xchg
adc
cmp
lcall
daa
add
addr16
sub
jp
push
fisubrs
imulb
sub
adcl
cmpl
push
lahf
dec
cmp
and
ja
mov
push
sub
cwtl
push
xchg
mov
inc
push
sub
out
sub
inc
sahf
iret
fisubl
sub
aas
imul
lock
sahf
mov
push
test
mov
jo
push
test
clc
test
jge
dec
shlb
bound
es
fiadds
jo
jbe
push
mov
xor
cs
mov
sub
notb
push
inc
mov
outsb
jmp
mov
out
sub
clc
out
data16
push
or
incb
cmpsl
sbb
push
scas
inc
mov
xchg
notl
cmpsb
cmp
adc
mov
rcll
xchg
push
dec
clc
stc
sub
cmpsl
andl
sub
out
dec
xor
cmpsl
fst
pop
jecxz
ds
inc
daa
int
repnz
or
sbb
xor
inc
push
movsl
push
or
outsb
mov
push
push
pop
cli
bswap
clc
lea
sar
mov
sub
dec
cmp
mov
fistpll
sbb
sub
cmpsl
xor
mov
sub
mov
push
ja
and
lcall
into
and
pop
call
xchg
mov
fstps
addr16
lock
jo
cs
sbb
sbb
mov
pop
push
outsl
inc
and
sbb
push
jecxz
add
scas
sub
sbb
sub
pop
pop
clc
jnp
outsb
jmp
int3
dec
xlat
es
movsl
jb
mov
fstpl
mov
iret
lock
and
push
dec
iret
aad
jle
cmp
out
and
sub
je
push
addr16
notl
repnz
fcoms
dec
and
cmpsb
sti
sub
xchg
outsl
das
xor
ljmp
lods
je
xor
push
out
lahf
in
call
imul
inc
sub
repnz
cmp
fldenv
mov
push
test
xlat
scas
cmp
shlb
push
push
and
mov
fmulp
aam
fidivl
sub
pusha
push
sub
jb,pn
dec
test
outsb
fmul
cmp
cmc
dec
mov
sub
daa
and
sub
fmul
das
add
sti
leave
inc
ds
and
fldt
push
mov
dec
sarl
scas
icebp
nop
out
sbb
stc
inc
add
rcrb
inc
pusha
jns
loope
sub
fstp
cmp
or
popf
fists
xor
movsl
fldenv
sbb
sbb
jmp
pop
mov
dec
or
daa
add
xchg
negl
loopne
daa
adc
ret
cmp
repnz
pop
outsl
jmp
imul
daa
mov
call
sahf
test
mov
mov
adc
fwait
out
adc
fs
pop
add
inc
ja
add
push
push
push
mov
imul
push
pop
push
dec
cmp
sbb
sahf
out
ds
repnz
shrb
xchg
mov
jns
out
inc
sub
or
repz
icebp
lock
shlb
mov
pusha
repz
repz
dec
cmp
sbb
jns
iret
or
lock
jns
mov
jns
out
jp
pop
push
cmp
cmp
out
push
je
mov
imul
jmp
sahf
out
sahf
lret
pushf
mov
sahf
out
jb
push
ds
negl
xchg
push
mov
mov
mov
push
idiv
push
out
cmp
repz
les
cmp
jo
push
cwtl
push
xor
jns
out
push
or
stc
in
sarb
mov
lahf
out
sahf
cmp
and
lock
jns
repz
mov
test
out
sahf
out
jl
pop
dec
cmp
repz
outsb
jmp
push
jns
cmpsl
stc
cli
call
out
sahf
out
lcall
sahf
dec
inc
xor
lock
iret
repz
fcmove
mov
repz
iret
repz
push
inc
cmp
or
sahf
out
lcall
cmp
sarl
and
add
cmpsl
stc
clc
imul
fmul
ret
sahf
out
sahf
mov
sahf
out
sahf
pop
dec
cmp
sbb
cmp
mul
fmul
cmpb
out
into
jbe
pop
scas
push
xchg
push
mov
je
push
sahf
out
inc
cs
and
int
jns
add
in
inc
cli
xor
rorl
rolb
mov
test
mov
cmc
ss
iret
repz
push
pushf
shl
nop
sahf
cmpsl
stc
cmp
or
sbb
cmp
out
dec
pop
data16
out
sahf
out
sahf
stos
mov
sahf
fsubr
clc
or
push
sub
iret
repz
inc
push
add
lock
cmp
repz
rol
mov
repz
repz
xorb
out
stos
iret
push
adc
jle
push
loop
out
sahf
aam
lods
lcall
pop
dec
cmp
sbb
cmp
out
cli
in
call
cmp
mov
mov
iret
repz
pop
inc
xor
iret
repz
repz
hlt
in
jle
fcmove
ret
repz
movsb
push
sti
sbb
repz
repz
ds
pop
data16
repz
test
dec
mov
cmp
add
pop
jmp
dec
repz
jae
push
push
mov
stos
mov
cmp
push
sub
push
cmp
jns
out
pusha
jbe
pushf
scas
int
jns
mov
and
dec
push
xchg
in
pushw
iret
repz
jbe
push
inc
cmp
mov
adc
jmp
push
iret
repz
rol
scas
mov
repz
add
repz
mov
call
iret
jnp
es
cmp
je
sti
cmp
int3
xchg
movsb
mov
lock
add
repz
add
add
jbe
cmp
xchg
add
into
jnp
loopne
push
and
xlat
movb
into
fadds
add
inc
pusha
add
pop
sub
js
pushf
jmp
add
js
es
aam
int
insl
bound
iret
repz
repz
rcl
aam
repz
aad
xlat
fcomp
fidivrl
repz
loop
in
repz
repz
call
cmp
jmp
in
out
out
lock
repz
repnz
cmc
repz
repz
clc
stc
cli
iret
repz
sti
cld
std
incl
sahf
out
lcall
jns
out
push
pop
or
or
jns
out
or
push
setle
jns
adc
push
aaa
inc
push
repz
jp
mov
cmpsl
rcr
idivl
repz
push
push
and
inc
dec
repz
repz
imul
iret
lods
mov
sahf
out
ds
fwait
pop
sub
inc
jns
out
pop
addr16
xchg
out
sahf
out
lods
mov
jns
in
cmc
incb
pushf
cmp
repz
sbb
sub
cmp
repz
imul
add
push
ljmp
cld
inc
je
insl
gs
gs
xor
imul
sub
mov
ret
shrb
inc
outsb
jne
xor
xchg
xor
jae
out
xchg
imul
rcll
mov
or
push
inc
cmp
sbb
sbb
push
sbb
jb
inc
add
shlb
popa
pusha
aad
jg
push
inc
xor
stos
dec
mov
push
gs
pop
push
ret
inc
and
popa
xor
movsb
mov
xor
test
ret
arpl
popa
pusha
and
push
in
and
ret
xor
sub
sbb
in
sbb
and
push
mov
fs
add
adc
inc
shlb
imul
and
nop
out
push
lcall
add
jl
out
mov
pop
push
mov
xor
add
ja
xorb
jp
sbb
xor
or
add
jbe
jnp
roll
inc
adc
lock
nop
jp
out
cmp
loopne
and
push
daa
inc
adc
xor
add
mov
cmp
divb
jge
dec
lea
insl
push
dec
inc
inc
and
push
inc
push
inc
insw
adc
sti
je
fadds
add
push
push
inc
dec
add
push
add
cld
pusha
sti
push
push
push
add
push
or
icebp
sbb
fidivs
daa
out
outsb
icebp
push
jge
fucomp
out
sub
push
ret
addr16
xchg
aas
out
push
cli
add
add
add
jg
lcall
add
pop
add
add
cmp
and
add
test
inc
ret
incl
addl
jno
faddl
jae
push
cmp
jbe
and
int3
std
xor
call
dec
in
push
add
add
std
add
add
nop
in
push
inc
mov
add
decl
scas
add
cld
lret
divl
xchg
sti
cmpsl
or
std
addr16
mov
add
std
fwait
add
inc
add
incl
std
and
xor
xor
dec
xor
push
std
jo
call
add
andb
inc
sti
mov
stos
add
jmp
add
cltd
add
sbb
mov
pop
std
imul
cmp
pop
sub
out
ds
add
add
add
add
add
mov
add
add
mov
sub
mov
decl
fadds
jmp
lret
add
cld
dec
clc
mov
std
push
sbb
add
pop
add
aas
sbb
std
aam
jbe
pop
add
add
add
clc
and
fcomip
scas
push
stc
pop
pusha
add
add
pop
sub
add
stc
cmp
roll
jo
and
incl
das
push
inc
add
pop
xchg
scas
std
mov
dec
add
aad
jge
popa
std
adc
sub
xchg
decl
add
std
add
in
std
imul
cli
std
cmp
icebp
jg
pop
cld
cld
mov
enter
cmp
inc
ficoml
push
in
adcl
and
add
add
dec
pop
add
ret
incl
adc
add
arpl
add
mov
out
push
call
dec
sti
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
xchg
std
sti
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
add
add
incl
push
xor
mov
or
pop
iret
push
les
dec
push
mov
add
mov
add
or
and
shl
mov
out
fsubrp
sub
ljmp
repz
sbb
clc
insl
cmc
inc
cmc
jo
cltd
sti
mov
add
aas
fs
sbb
pusha
or
or
inc
or
push
fimuls
lahf
pmaxub
mov
or
add
ljmp
add
clc
sub
icebp
push
in
aaa
call
sub
dec
cli
or
out
mov
pop
cmc
decl
js
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
pcmpeqd
dec
mov
call
adc
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
sete
aad
add
enter
psubq
sti
imul
negb
repz
in
fsubrl
aad
fstps
icebp
xor
in
push
incb
sti
and
xlat
cld
test
or
call
ds
and
adc
adc
sbb
xchg
test
or
scas
clc
incl
or
test
hlt
cli
repnz
adc
ljmp
loop
fnstenv
iret
je
fcomp
loopne
repnz
fistpll
add
xor
test
sbb
pop
sub
outsb
push
bound
sub
decl
xor
or
push
push
or
pop
add
mov
decl
out
lahf
in
jae
je
jmp
in
ljmp
imul
decl
fadds
add
jle
add
or
pop
or
xor
sbb
cmp
pushl
fcompl
scas
sbb
push
sbbb
and
adc
or
incl
add
icebp
mov
jmp
out
shr
mov
adc
pop
in
fidivrl
test
stc
jo
or
adc
adc
xor
lcall
repz
xchg
adc
sbbb
push
mov
movl
stc
jns
loope
mov
decl
std
cmc
clc
jbe
add
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
in
aam
daa
pop
sbb
fimuls
jecxz
into
adc
adc
ds
in
call
push
daa
adc
adc
or
rolb
cld
enter
xchg
clc
imul
xor
mov
jne
es
pop
cli
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
inc
out
push
cld
js
lds
push
test
adc
push
lahf
adc
imul
ja
adc
test
imul
sub
cli
in
cld
fbstp
out
cld
idiv
loopne
add
repz
das
testl
fsubrp
xchg
out
insb
out
mov
std
push
jp
frstor
in
icebp
add
adc
adc
ljmp
fmulp
adc
adc
adc
scas
adc
lret
adc
incl
mov
stos
std
mov
stc
or
stc
sbb
push
push
sbb
out
jb
inc
repnz
stos
in
sub
jecxz
fcoml
rcr
stos
ljmp
add
movlps
push
pop
pop
loop
popa
adc
xchg
adc
sbb
std
or
inc
hlt
pop
cs
femms
or
add
or
xor
incl
cmp
mov
xlat
sti
outsl
imulb
icebp
mov
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
ljmp
lods
fdivrl
add
ljmp
push
pop
sbb
adc
xchg
cmc
jg
mov
mov
adc
push
adc
or
or
or
mov
test
aam
movsl
std
cmpsb
sti
mov
decl
in
mov
xlat
loopne
fldl
aad
ror
xlat
popf
in
call
inc
repz
or
adc
push
lock
xor
pop
sub
inc
sbb
push
xor
or
call
and
or
int3
pop
in
add
loopne
lcall
jg
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
sub
ljmp
mov
and
or
stos
pop
aad
bound
lds
adc
adc
call
jno
inc
btr
push
adc
orb
push
pusha
add
sbb
pusha
push
arpl
sar
jg
push
add
stc
and
out
out
loopne
fstps
push
push
ret
mov
out
and
and
decl
sbb
sbb
push
adc
popf
stos
je
or
stc
push
inc
adc
mov
push
ret
or
or
or
add
lock
call
fnsave
fxch
sar
insl
lds
jp
or
lcall
sbb
rcrl
rclb
adc
xlat
or
push
mov
and
inc
sbb
call
add
test
sub
push
mov
lds
pop
or
mov
and
loope
cmp
test
lds
jb
and
add
or
or
adc
adc
push
sbb
hlt
adc
xchg
or
push
sub
mov
add
call
out
add
or
or
or
mov
or
add
decb
int
inc
in
loopne
fimull
loope
cmc
cmpsb
add
mov
decl
in
xchg
cmovge
stos
or
psrlw
ss
mov
lret
or
packssdw
add
out
cli
lcall
add
sbb
mov
and
or
or
add
out
cli
sti
ret
out
push
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
decl
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
pop
call
add
cld
pop
pop
or
add
add
mov
pop
or
jle
xor
out
jbe
adc
adc
adc
repz
xor
fwait
jecxz
fsubl
les
aad
add
lcall
icebp
cmp
adc
push
adc
xchg
outsl
sbb
sub
add
add
and
fcomip
lcall
popf
inc
add
push
test
pop
adc
call
or
lods
or
in
in
jge
xchg
fsts
int3
mov
jmp
jmp
sbb
jmp
cld
lcall
push
and
and
add
sub
stos
dec
add
or
decl
lds
and
add
std
idiv
mov
or
or
out
pushf
adc
das
or
stos
mov
jecxz
loopne
fsts
push
lock
and
sub
add
sti
jmp
in
inc
repz
call
or
fimull
xor
add
push
add
rorb
or
or
push
or
aad
mov
sti
xor
loop
fucom
xlat
fmul
push
leave
pop
jmp
mov
int3
call
adc
stos
cs
pop
add
paddd
mov
in
and
leave
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
cmp
loopne
push
mov
lret
adc
adc
add
idiv
lcall
add
fldenv
ret
xchg
neg
test
dec
sub
das
xchg
ss
fcomip
jmp
movsb
mov
clc
adc
sbb
inc
loop
lock
stc
loop
and
out
call
add
add
inc
push
jmp
mov
out
dec
or
xchg
ljmp
add
fst
inc
sar
sub
ror
add
pop
sti
xor
scas
and
sahf
ljmp
pushl
adc
and
sbb
dec
std
clc
aam
in
pop
loope
lock
cli
ljmp
cmp
ss
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
and
or
add
mov
sar
mov
int3
pop
ret
push
iret
repnz
sub
jmp
inc
xor
loope
fcomip
push
add
loope
fistl
ljmp
rclb
imul
decl
adc
adc
xor
mov
mov
cmp
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
inc
mov
cmp
push
call
jg
fstpl
fcoms
pop
add
and
mov
les
cltd
adc
adc
push
clc
and
scas
mov
inc
sbb
xchg
push
inc
nop
mov
ljmp
icebp
fcmove
shrb
leave
push
mov
dec
fiaddl
clc
adc
cwtl
es
xor
cmp
in
inc
xor
fildll
or
cmp
lds
or
fs
fdivrs
into
popf
and
jle
or
pop
daa
in
xchg
and
jge
xor
adc
or
jecxz
stc
leave
les
popa
jmp
add
lcall
daa
loope
in
test
xor
cmp
call
out
inc
out
loop
in
fists
xlat
jg
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
and
mov
decl
std
adc
jno
gs
xor
test
inc
ret
ja
pop
fiadds
arpl
or
das
ret
incl
inc
inc
xor
sub
push
aas
or
adc
mov
fcmovbe
rcr
fldenv
and
notl
mov
sub
imul
pop
or
sti
stos
call
ror
cli
inc
aaa
mov
lods
in
std
call
and
xor
inc
aam
xor
pop
push
adc
call
cmp
fistl
lret
pop
iret
mov
fiadds
icebp
adc
jb
sub
xor
ljmp
or
sub
push
idivb
insb
ljmp
out
ret
or
fisttps
dec
lock
sub
cmp
inc
mov
out
ljmp
add
lods
repnz
xchg
mov
roll
dec
ror
mov
add
adc
sbb
inc
aaa
das
xor
es
ja
int3
sti
sub
and
shlb
enter
sti
sub
sahf
sbb
and
pop
ds
xor
jg
push
xor
fldl
inc
incl
adc
rcr
aam
iret
push
shlb
call
loopne
das
add
xor
xor
cmp
xor
mov
cmc
insb
in
aad
enter
inc
cld
mov
mov
mov
daa
push
sub
cmp
ret
or
cld
mov
ljmp
jo
dec
xlat
mov
mov
pop
test
xor
call
aaa
lret
xor
in
adc
ret
lcall
incl
add
lcall
sbb
sub
shl
jmp
call
mov
sbb
add
outsl
mov
jge
inc
pop
jg
lods
sub
xor
aaa
bnd
xor
in
jns
ror
stos
ret
ds
in
lcall
add
push
and
mov
lret
xor
push
push
add
add
clc
leave
out
push
call
in
shr
into
pop
iret
call
jmp
jmp
jp
sahf
ss
cmp
cmp
mov
repnz
dec
push
mov
aam
ljmp
shr
jp
je
in
sbb
sub
and
fsubrs
ja
xlat
push
mov
or
std
ret
cmc
shl
mov
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
push
adc
outsl
cmp
xlat
push
sti
or
cmc
es
int
mov
int3
or
sub
decl
jle
pop
sub
stos
aas
scas
cmp
ficompl
ret
call
ljmp
jecxz
in
fiadds
loopne
fsubl
loope
stc
push
decl
icebp
and
sub
pop
aaa
fildll
leave
sbb
dec
icebp
shl
sbb
scas
outsl
mov
rcl
jmp
ja
adc
aaa
std
inc
test
sub
sbb
or
cld
loop
ljmp
sub
cmp
fildl
neg
lcall
fisubl
jo
or
push
out
dec
ss
push
cmp
adc
pop
decl
cltd
enter
int3
mov
mov
jg
arpl
in
movsl
cmp
inc
pushl
cmp
mov
test
jb
test
imul
fmuls
lret
rcll
ljmp
sub
sub
out
fidivrl
inc
xchg
mov
repnz
loopne
iret
xor
mov
scas
and
add
xor
pop
incl
inc
xchg
jmp
pop
adc
add
out
jmp
filds
jmp
push
leave
test
fcmovne
insb
shlb
in
mov
es
inc
push
push
xor
mov
iret
pop
mov
cld
mov
stos
mov
imul
addl
xor
add
inc
mov
popf
sub
jg
jbe
mov
mov
cmpsl
jmp
arpl
cmp
push
shll
adc
inc
aad
mov
add
aaa
sub
xor
aaa
out
ss
xor
or
int3
call
shr
push
mov
mov
cmp
das
xchg
sub
inc
fdivs
or
incl
out
sub
repz
xlat
popf
flds
call
sarl
pop
mul
fisttps
xchg
push
loop
mov
test
hlt
sub
sti
std
decl
out
fimull
mov
mov
adc
adc
test
mov
xchg
push
mov
push
notb
fmul
dec
loope
iret
add
xchg
fdivs
frstor
mov
les
int3
daa
cmp
cmp
fcompl
repz
into
or
mov
lds
mov
jnp
lds
jns
repz
mov
cs
adc
aam
int3
push
repnz
or
into
aad
fnstsw
and
incl
inc
inc
dec
sahf
inc
es
pop
and
int3
roll
mov
cmpsl
les
jmp
ja
pusha
sbb
mov
pop
sbb
mov
fldl
es
fstl
jo
sbb
pushl
fs
data16
js
and
jle
sahf
inc
addr16
jo
jg
xor
adc
aad
int3
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
lea
mov
repnz
jge
pop
lret
pop
shrl
pushl
inc
int3
jne
xchg
repz
or
stc
xor
sub
inc
mov
repnz
sbb
or
mull
out
aad
into
in
mov
leave
mov
pop
call
call
dec
sub
fldl
dec
sbb
xor
push
imul
loop
sbb
loope
insb
rcll
ljmp
out
xor
popa
pushl
test
add
rcrb
fidivrs
test
fwait
ljmp
cmp
push
sti
push
jp
les
and
cmp
cmp
decl
sarb
cld
loopne
sbb
popa
sub
inc
cmp
daa
xor
mov
sub
incl
int
iret
outsb
leave
xchg
ret
test
mov
idiv
call
outsb
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
or
icebp
inc
stos
sarb
cli
decl
rcr
divb
mov
mov
dec
ds
dec
dec
dec
iret
dec
jl
lret
sbb
ljmp
pop
lock
loop
shlb
shufps
lcall
sti
fistps
dec
push
inc
fmull
stos
pop
aam
les
pop
jmp
mov
stos
leave
ljmp
inc
pop
loope
push
rcl
xor
inc
je
push
dec
xchg
inc
mov
scas
sub
adc
add
mov
push
scas
rcrb
test
lock
in
ret
ljmp
popa
sti
mov
pop
dec
sbb
rclb
dec
lahf
ds
insl
add
jecxz
lret
int
fcomip
mov
test
rorl
mov
pop
bound
mov
cmp
pop
cmc
lcall
sbb
clc
arpl
add
popf
mov
pop
inc
or
sbb
xchg
or
and
arpl
ret
inc
cli
dec
sbb
sub
push
aam
pop
mov
mov
lcall
lcall
xor
ss
fidivs
mov
jp
rcrb
adc
outsb
add
xchg
sub
aam
pop
fdivrl
rorb
mov
ljmp
push
inc
ljmp
or
out
in
fimull
cmpb
mov
in
add
cmc
sub
cmp
mov
xor
jg
imul
sahf
jmp
xchg
ficompl
clc
loope
fsubp
rolb
adc
and
xor
roll
inc
es
and
call
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
ss
or
xchg
cwtl
or
adc
or
cmp
lcall
fdivl
aad
pop
ficoml
nop
clc
adc
je
or
or
lcall
adc
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
cli
das
sar
pusha
and
cmp
pop
ljmp
mov
rorl
cmp
ljmp
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
ljmp
clc
push
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
incl
inc
pop
rol
xlat
fs
aam
addr16
add
xor
sbb
enter
out
mov
call
hlt
clc
lock
out
je
mov
dec
adc
aaa
push
cli
and
ljmp
sti
sahf
adc
das
cs
add
xor
sbb
xchg
fcmovnu
lret
inc
cmp
ljmp
repnz
mov
inc
and
sbb
pop
inc
push
mov
decl
test
test
imul
adc
mov
mov
fadds
stc
mov
or
test
sub
mov
push
jg
stos
inc
or
loopne
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
sbb
inc
or
or
or
fwait
or
mov
xchg
hlt
bnd
pushl
fisttpl
loopne
aam
push
add
push
out
and
ljmp
cld
cs
add
das
jecxz
ljmp
mov
mov
sbb
sbb
jmp
dec
wrmsr
or
add
add
add
push
adc
or
xchg
cmc
push
ds
fidivs
aad
rcl
int3
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
testb
pusha
repz
divl
adc
xor
or
incl
or
mov
or
adc
cld
dec
push
out
xchg
xchg
jmp
xlat
fbld
xlat
fldl
ror
rcrb
pop
cld
add
pushf
sbb
push
jbe
ljmp
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
mov
xchg
loopne
mov
adc
incl
lods
add
call
adc
or
mov
jp
imul
cmp
out
jmp
pop
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
adc
shrl
idiv
xor
pop
push
xchg
or
clc
repnz
out
in
ljmp
arpl
std
decl
iret
adc
push
push
adc
mov
add
cli
shl
jmp
mov
pushl
fimull
in
enter
enter
out
mov
push
insl
sub
stos
jg
push
mov
dec
xchg
cmp
add
repnz
loopne
aad
into
and
incl
out
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
sbb
xlat
icebp
call
and
inc
aam
jbe
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
cmp
dec
push
mov
inc
and
add
jmp
shr
ret
sbb
clc
fistpll
aaa
jmp
cld
add
sbb
and
out
imul
adc
pop
cld
shr
fcomip
aam
leave
rol
cltd
mov
sbb
xor
popf
lcall
cltd
cmp
push
jno
mov
jo
push
pop
xor
adc
out
imul
inc
sarl
or
es
ljmp
cmp
pushl
dec
or
gs
rorl
pop
mov
mov
cmpsl
and
sub
mov
jmp
dec
or
inc
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
loopne
ljmp
mov
fsubrp
or
ljmp
xor
ss
mov
aaa
std
ss
xor
mov
or
pusha
ljmp
stc
mov
push
mov
or
inc
mov
mov
add
pop
call
cmp
popa
inc
addr16
fwait
pop
rcll
cmp
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
jl
adc
int
mov
xor
cmp
xor
sub
and
adc
add
pushl
fcmovbe
pop
in
and
rcr
sbb
mov
cmc
inc
or
sub
or
pushl
jbe
mov
inc
add
lcall
jecxz
mov
jo
les
cmp
addr16
cmp
imul
movsl
aaa
std
sub
add
out
cmp
fstl
jg
incb
fnsave
int
insl
repz
sti
sub
adc
add
add
jmp
xchg
adc
sub
xor
mov
pop
ss
or
iret
cmp
inc
xor
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
fbstp
add
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
inc
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
js
stos
mov
mov
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
cmp
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
pushl
cltd
clc
ret
push
shll
push
xchg
ret
push
mov
jmp
jnp
ds
xchg
push
and
test
movsl
test
sarb
add
sub
decl
sarb
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
push
icebp
jmp
jecxz
imul
add
mov
jmp
ljmp
sub
push
dec
pop
add
dec
imull
mov
mov
mov
call
jno
xor
xor
shrl
popa
aas
fists
bound
mov
dec
push
out
inc
decl
pop
ds
nop
mov
jae
mov
lret
call
loopne
std
adc
pop
insb
adc
add
ljmp
sub
mov
lock
inc
leave
ljmp
lods
push
ret
add
and
sbb
call
mov
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
cwtl
decl
inc
loopne
call
adcl
xor
ficomps
ljmp
inc
clc
jp
jno
sub
aas
cmp
xchg
es
or
arpl
dec
out
rorb
flds
in
add
shrb
daa
dec
and
faddl
or
in
push
cli
xchg
lcall
in
sub
mov
out
xor
ljmp
sub
ret
add
not
repz
jl
sar
test
mov
xchg
fdivrl
decl
lock
std
and
mov
xchg
rcrb
std
jmp
lcall
or
adcl
pop
jl
imul
push
sbb
cld
sbb
adc
aaa
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
mov
test
jge
xchg
aam
in
hlt
mov
push
cmp
push
jg
call
hlt
and
das
int
lds
rolb
clc
mov
in
and
xor
sub
xor
and
das
adc
shr
ljmp
inc
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
sti
rcll
out
clc
pushl
jo
pushf
imul
insb
fldl
sbb
mov
insl
popf
lcall
pushl
lods
xchg
jmp
xchg
inc
adc
es
or
cmp
aaa
adc
push
ss
ljmp
enter
xor
loop
aad
enter
sarl
lcall
loop
loopne
call
int
mov
pop
xorb
insl
jg
jl
jo
inc
out
push
sub
decl
fistpll
pop
mov
xchg
mov
or
and
decl
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
lea
mov
mov
fs
mov
jmp
repz
or
inc
insb
dec
lcall
cmp
gs
sbb
jl
shll
test
shll
pushl
std
incl
inc
dec
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
push
jmp
inc
ds
leave
and
into
push
fildll
out
clc
icebp
shl
lods
mul
aaa
cld
jmp
jmp
clc
adc
sbb
lahf
nop
inc
hlt
inc
call
add
mov
mov
mov
lcall
sub
cmc
lcall
push
daa
pop
es
pop
cmp
mov
jbe
push
or
sbb
scas
pop
jmp
loope
xchg
icebp
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
call
data16
jae
or
and
sub
es
sub
jecxz
ja
je
xchg
int3
test
inc
lds
mov
sub
loope
sti
mov
xchg
sub
cs
and
and
sbb
lcall
sti
fwait
lock
cmp
fcmovnb
rclb
mov
outsl
pushl
or
adc
sbb
jns
aas
lcall
adc
mov
cltd
and
sub
lcall
arpl
inc
adc
add
dec
fcompl
int3
inc
lds
loopne
jmp
or
stos
sub
jmp
daa
xchg
and
pop
stos
sbb
pop
repnz
add
sti
cmp
sbb
jmp
loope
roll
leave
daa
aam
call
rclb
sbb
and
adc
and
ds
jae
std
push
lods
repnz
cli
xor
call
das
jle
cltd
pop
xchg
add
call
clc
inc
fsubl
dec
add
test
call
clc
add
add
pop
test
or
roll
mov
rcrb
jmp
add
mov
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
push
lcall
adc
push
fimuls
xor
sbb
add
into
sub
int3
xor
adc
sar
out
stc
pop
push
pop
pop
or
pop
pop
or
pop
push
fimull
or
lock
push
mov
or
std
jno
out
ffree
loope
ljmp
sbb
mov
jg
add
test
stos
andl
clc
mov
shrb
dec
adc
pop
pop
cmc
in
lods
inc
aas
push
or
rol
ret
aad
sbb
xlat
lock
or
int
push
pop
jg
out
adc
aad
mov
jmp
cmpsl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
incl
push
mov
cmp
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
xchg
pushl
std
ljmp
sbb
sbb
and
es
sub
lret
adc
insb
push
dec
insb
add
fs
push
cmp
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
lret
xor
pop
push
push
aam
shr
shrl
ret
decl
jg
pop
int3
lret
mov
addr16
iret
add
and
shlb
repnz
lcall
cli
or
add
mov
loop
jb
lcall
std
cmp
jmp
jmp
jae
mov
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
add
lcall
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
lcall
arpl
rcrl
push
lret
bound
sbb
sub
sub
dec
sub
adc
adc
push
fdivl
enter
lret
into
rolb
js
push
out
in
in
ljmp
xor
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
lcall
jbe
testl
adc
push
add
hlt
lcall
cmp
push
cwtl
cmp
inc
and
and
or
mov
das
adc
lcall
into
push
repnz
jmp
xchg
iret
in
mov
pushl
or
cmp
push
inc
pop
cmovb
and
or
ljmp
add
sbb
out
fcompl
cli
jb
sahf
sti
jecxz
lods
sbb
mov
lcall
ds
sub
in
int
mov
mov
inc
jne
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
xor
inc
xor
dec
mov
or
not
in
rolb
fdivs
xor
addr16
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
call
test
sub
cmc
mov
adc
sbb
popa
std
add
cmp
insl
or
decl
or
cmp
shl
dec
or
adc
ds
jmp
inc
dec
sub
dec
add
jmp
fldt
mov
mov
int
out
cld
pushl
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
pushl
push
and
jecxz
fnstsw
mov
cmc
mov
inc
add
push
lods
or
or
out
ljmp
jmp
sub
and
lcall
shl
mov
mov
shrb
ljmp
inc
sub
inc
jge
fwait
sbb
shrl
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
jg
mov
fdiv
movsb
std
stos
add
out
call
cmc
add
call
idiv
jb
or
xor
cmp
ja
insl
pop
cmc
decl
sbb
mov
scas
scas
mov
call
xor
xor
mov
and
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
mov
sbb
out
out
jmp
mov
hlt
pop
adc
cs
cmp
jbe
pushl
mov
pop
push
adc
dec
loop
stos
and
adc
lock
add
mov
mov
and
ljmp
pushl
lcall
iret
test
push
in
js
out
dec
add
or
adc
aam
decl
sar
lahf
repz
out
or
jge
pop
add
add
add
cli
mov
mov
in
dec
push
mov
add
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
jg
aam
push
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
jmp
sti
xor
iret
push
xor
and
mov
imul
adc
mov
cli
mov
mov
xor
sbb
outsl
in
lcall
outsb
cwtl
into
movsl
lret
pop
idivl
pop
icebp
call
movsl
sbb
or
mov
mov
sbb
sub
sub
test
sub
push
mov
push
in
push
mov
movsl
stc
pop
cli
fs
ljmp
lods
or
sbb
daa
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
out
jbe
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
dec
adc
enter
push
ss
xor
and
sahf
test
das
out
pop
out
jmp
fbld
fidivl
jecxz
call
pop
notl
or
jg
mov
out
dec
and
sbb
sbb
clc
mov
loope
in
decl
xor
hlt
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
jg
jmp
push
push
in
pop
dec
arpl
aaa
jns
mov
loopne
filds
mov
pop
enter
out
rolb
or
movq
pop
std
mov
sbb
sbb
adc
int
cmp
mov
mov
paddw
jge
test
sti
push
cmc
adc
aaa
ljmp
insb
out
jmp
push
call
fcmovne
fmul
dec
in
repnz
movlps
and
cmp
jbe
add
inc
cmp
and
pop
inc
call
jmp
cmpsb
mov
mov
add
push
or
adc
sbb
push
mov
dec
adc
mov
xchg
adc
xchg
and
call
and
mov
test
push
fsubs
out
into
mov
fstl
jmp
in
in
fnstsw
iret
out
iret
mov
ss
add
pop
dec
sub
jae
arpl
mov
in
sub
lds
lret
shlb
pop
ficomps
jbe
sbb
setge
fdivl
sahf
and
incl
jbe
and
daa
mov
and
or
cli
jecxz
xlat
nop
into
mov
decl
iret
push
icebp
loopne
jmp
repnz
dec
fcomps
push
incb
sbb
daa
cmp
call
outsb
sub
dec
subb
push
ret
in
scas
sarb
test
int
lret
mov
cmp
nop
sbb
sbb
and
sbb
jnp
jg
das
clc
adc
test
std
adc
out
ficomps
xchg
aam
incl
insl
aam
jo
jecxz
popa
jmp
out
and
pop
out
sub
lods
repz
push
repz
jp
dec
sub
stos
jmp
cmp
inc
push
inc
xchg
cmp
and
or
jle
and
pushf
mov
mov
pushl
xchg
jno
imul
and
in
xchg
jecxz
in
adc
adc
call
mov
adc
ljmp
out
xor
and
xlat
iret
fldcw
adc
lock
out
shl
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
daa
cmpsb
es
sub
loopne
jo
outsb
cli
cmp
inc
flds
jmp
dec
rcrl
mov
sbb
and
hlt
mov
stos
adc
clts
or
cmp
add
test
ja
sbb
mov
sbb
loope
and
mov
cmpsb
loopne
ficomps
in
sahf
add
or
ljmp
inc
or
mov
or
ljmp
add
int
jns
and
mov
pop
clc
int3
ljmp
dec
in
in
icebp
ljmp
adc
imul
sbb
pop
inc
imul
mul
incl
push
adc
adc
push
add
hlt
jecxz
push
fisttpll
shl
call
clc
rolb
jecxz
negb
mov
pop
pop
js
xchg
and
push
jns
mov
in
cmp
ljmp
adc
shl
cmpsb
push
and
push
es
xchg
add
out
mov
std
call
dec
into
call
data16
in
roll
nop
adc
and
pop
and
lret
lcall
dec
push
cli
sub
shl
repnz
mov
jmp
sbb
pop
pop
hlt
ljmp
into
and
lahf
loope
out
xchg
add
adc
es
cmp
adc
aad
loope
cmp
xor
push
out
sub
push
stc
push
aas
aas
shrb
push
hlt
jp
push
fistps
int
lret
fmul
sbb
push
jg
dec
xlat
and
push
jecxz
int
imul
call
ret
hlt
cwtl
add
or
adc
and
daa
push
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
call
insl
bnd
mov
cmpsb
mov
add
fldln2
push
add
mov
decl
pop
rcll
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
incl
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
aaa
decl
xor
inc
sti
cs
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
fmulp
fsubr
iret
pop
aam
out
ljmp
and
bound
cmp
sub
sti
cld
jmp
fcoml
mov
test
gs
call
jb
into
push
fiaddl
jbe
pop
lret
sar
push
les
push
repnz
add
or
scas
sub
jg
lea
rcrb
push
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
ljmp
enter
out
xor
dec
in
hlt
ftst
xchg
clc
add
loopne
decl
pop
sbb
inc
dec
inc
inc
xor
sub
fcmovu
xor
fisubs
push
int
pusha
frndint
sub
add
fs
adc
or
or
push
call
std
push
pop
decl
sub
rcrb
mov
in
fcmovnu
xor
fcomip
call
es
xchg
cld
gs
add
in
loop
sarl
stc
arpl
jmp
cwtl
sub
xchg
push
jp
mov
sbb
add
lock
shrb
or
pop
iret
js
lahf
lcall
add
sub
testl
lods
fwait
fidivrs
out
fldl
mov
jg
inc
ss
dec
pop
push
repnz
cmp
pushl
mov
cwtl
iret
std
loop
testb
push
push
lds
or
mov
aad
fchs
repnz
or
and
mov
imul
mov
cld
mov
lcall
mov
lods
lds
iret
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
sub
dec
add
sbb
or
ds
cmp
push
pop
orl
std
call
adc
stos
enter
into
inc
fldenv
mov
push
adc
adc
decl
mov
cmc
shl
loop
jp
or
inc
repz
or
and
cs
jmp
inc
sbb
pop
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
call
mov
mov
dec
sub
push
dec
or
add
ljmp
sti
mov
ljmp
cli
negl
daa
cmpsl
cld
push
add
out
clc
rorw
or
pop
testl
in
icebp
aas
loop
fcomip
loope
lock
popf
pop
sub
pop
mov
add
imulb
jmp
loop
mov
or
xchg
sbb
or
sbb
mov
adc
dec
clc
lcall
push
lock
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
sti
in
out
lock
and
sbb
sbb
add
cld
push
repnz
mov
addr16
pop
daa
fcompl
add
adc
xor
sub
decl
jbe
in
in
out
repnz
es
or
adc
or
std
fdivp
test
jmp
xor
out
mov
std
or
inc
and
incl
and
xor
call
stc
lahf
add
lock
jmp
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
mov
xchg
decl
or
adc
adc
mov
dec
sbb
add
jg
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
pop
out
out
stos
mov
cli
idiv
dec
or
sbb
sti
sbb
push
sbb
incl
data16
or
add
lret
mov
mulb
jo
out
lods
out
mov
adcb
into
out
mov
jmp
cmc
push
imull
pop
std
mov
fs
cs
xor
das
in
sub
and
xchg
pop
icebp
out
or
call
fists
fcomi
out
repnz
inc
sarl
mov
decl
adc
xor
inc
sbb
sbb
pop
fstps
insl
adc
push
lcall
jmp
insb
stc
add
enter
inc
incl
cli
pop
repnz
shl
jmp
inc
ror
leave
in
iret
or
sbb
inc
ret
inc
subb
incl
mov
notl
sarb
fldcw
jg
testb
push
adc
or
cld
mov
add
add
pop
xchg
call
sbb
adc
or
std
xor
out
mov
div
xchg
hlt
xor
lcall
std
pop
add
clc
stc
out
jmp
dec
out
shlb
jecxz
jmp
ljmp
or
and
cs
xchg
sub
and
jp
loopne
push
sti
icebp
inc
ljmp
mov
loop
jecxz
push
add
pop
mov
add
std
sbb
mov
pushl
repnz
adc
lahf
sbb
push
sbb
xor
mov
mov
mov
xchg
std
in
dec
testl
sar
jg
hlt
add
ljmp
popa
out
sar
add
add
add
xchg
lcall
jg
int3
or
adc
add
cli
imul
adc
sbb
lcall
push
adc
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
add
orb
adc
jg
lcall
sbb
adc
or
add
jg
mov
cmpsb
add
fcoms
pop
out
pop
mov
pusha
out
add
clc
fs
outsb
in
loop
ficoms
in
repnz
loopne
decl
adc
sbb
or
add
mov
pop
in
fstpt
in
stc
sar
pop
cmpsb
ljmp
call
cli
js
lock
call
insl
stc
inc
add
add
push
cwtl
aad
loope
push
sahf
notb
out
dec
clc
ljmp
add
or
push
mov
das
sbb
pop
cmp
and
mov
xchg
jns
icebp
in
out
sub
cmp
add
push
outsl
mov
or
test
sbb
lcall
in
jmp
mov
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
sub
sbbl
mov
sub
push
cmpb
divb
lcall
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
movlps
sbb
lcall
sbb
in
or
mov
xchg
out
mov
adc
test
std
mov
fwait
or
and
pushl
add
ljmp
out
jmp
adc
push
leave
clc
daa
push
push
or
or
adc
sbb
push
pop
or
xor
out
jg
lock
clc
adc
out
jmp
out
or
mov
repnz
clc
mov
movsb
jg
mov
in
add
jp
or
pop
out
add
decl
out
jmp
sub
cmpsl
add
dec
add
fs
push
mov
sub
out
add
clc
gs
ljmp
out
or
jbe
cmc
cltd
clc
push
call
inc
fwait
add
add
loopne
jbe
cmp
int3
jecxz
in
mov
pop
add
xchg
adc
inc
and
sbb
adc
add
std
mov
xchg
out
fyl2x
pop
repnz
shll
cmpsb
add
push
add
divl
pop
jge
imul
and
cltd
std
cmp
cld
jno
rorb
sub
ret
sbb
sbb
or
stos
adc
adc
outsl
inc
adc
incb
cmc
mov
jmp
repnz
repnz
out
aad
mov
int
xchg
cli
scas
stc
or
js
mov
sti
push
inc
icebp
or
out
push
cmc
lcall
pushl
pop
sbb
and
inc
and
or
add
notb
out
ljmp
in
jmp
repz
clc
xchg
jnp
inc
add
add
or
jle
and
mov
repnz
add
push
jmp
insb
setnp
push
es
sub
and
js
push
jmp
in
loopne
pushl
in
ljmp
inc
decl
sbb
test
xchg
fdivr
lcall
sub
cmp
cmc
mov
pop
dec
or
repz
adc
lcall
sbb
mov
rolb
test
inc
neg
bnd
hlt
jmp
ljmp
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
add
sbb
and
and
and
ds
aaa
sbb
sub
jnp
loope
adc
ret
out
mov
mov
push
out
fucomi
fucomp
test
ret
std
inc
add
cli
adc
addr16
adc
lcall
or
ljmp
in
repz
mov
cmc
sbb
pop
push
push
sbb
into
add
xor
lock
in
loop
fimuls
mov
sbb
clc
in
add
mov
xchg
adc
movhlps
push
or
or
push
xchg
or
sub
aas
pop
loopne
iret
sahf
jg
lret
pop
add
cs
repnz
lock
mov
repnz
inc
testb
add
pop
inc
push
test
adc
push
pushl
std
or
pop
lods
add
cli
push
icebp
and
jne
mov
hlt
jge
mov
or
decl
adc
adc
clts
cmp
fdivr
int3
mulb
in
dec
jg
pop
inc
inc
imul
in
icebp
jns
or
or
es
bound
mov
adc
push
add
sti
jl
lods
repz
lock
jnp
std
repnz
aam
push
or
ficoml
orl
add
stc
idivl
clc
sar
pop
dec
stc
stos
vprotd
or
dec
push
mov
sti
popa
stc
das
test
jmp
sub
aad
pop
push
add
decl
or
adc
fistpl
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
dec
aaa
std
incl
or
fwait
push
lock
cli
push
xor
xchg
dec
cmp
jg
in
shr
inc
cmc
add
pop
or
jbe
pop
adc
lds
nop
push
push
or
pop
rolb
xor
push
push
out
fcomip
call
add
call
imulb
jle
repz
add
add
outsb
pop
add
cli
lock
mov
out
mov
and
mov
cmc
xchg
cli
cmpsb
clc
or
cs
jg
pop
xor
adc
std
dec
push
fnstsw
pop
out
jge
pop
repz
hlt
ljmp
mov
inc
sti
das
cld
icebp
cli
inc
divl
jp
insl
idivb
or
adc
sbb
sbb
pop
sbb
adc
out
shl
psllw
out
test
sbb
hlt
mov
jp
test
mov
jbe
sahf
cmp
int3
add
add
lea
fdivrp
lock
aaa
in
jnp
stos
in
jmp
xchg
testl
cmovae
fimuls
xchg
add
mov
dec
std
pusha
hlt
sub
out
in
in
call
movl
xchg
popa
std
or
pop
movb
lods
cli
push
clc
negl
clc
jae
insl
pop
add
out
sbb
and
sbb
inc
pmulhuw
insl
call
loopne
lock
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
lods
add
clc
test
in
shl
or
decl
mov
mov
add
xor
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
call
or
prefetcht1
cmp
jecxz
jle
leave
pop
jp
dec
imull
jle
ljmp
insl
sti
sub
adc
faddl
inc
cld
mov
ljmp
idivb
ds
or
sbb
ds
pop
decl
push
add
negl
repz
in
cli
psubq
pushl
sar
xchg
stc
pop
mull
out
inc
repnz
ljmp
cmp
or
or
sub
add
cmp
test
pushl
jbe
repz
cli
add
pop
adc
xchg
or
mov
divb
repnz
add
cld
jmp
cli
inc
add
pop
or
rclb
jnp
decl
or
add
add
sti
lahf
testl
xchg
add
adc
mov
lret
adc
adc
push
mov
cli
dec
repnz
or
sti
in
lods
lock
clc
pop
subb
negb
mov
inc
cmc
iret
stc
push
cld
pop
incl
xchg
ret
es
ret
cmpsl
sbb
sbb
sbb
pushl
pop
das
stc
shr
filds
fsubrl
out
out
iret
or
push
adc
hlt
sbb
push
dec
push
mov
jle
push
clc
sub
sti
mov
push
out
sub
mov
sbb
cwtl
push
testl
mov
jmp
hlt
push
std
or
adc
or
loopne
out
mov
roll
decl
adc
push
imul
into
divl
cmc
das
bnd
pop
idiv
decl
stc
push
stc
incb
or
or
push
push
ja
dec
mov
mov
push
repz
jmp
dec
fisubl
out
lock
incl
add
sbb
pop
adc
pop
or
in
call
out
iret
add
lods
push
and
jp
nop
pop
loopne
or
push
in
jecxz
in
jmp
add
cld
pop
cmc
aaa
or
pop
sbb
loop
lea
pop
add
test
or
scas
repz
mov
cli
push
jle
sbb
add
incl
idiv
cwtl
cld
movsb
cli
cmp
mov
rorb
pop
or
or
push
or
repnz
loopne
fiaddl
in
out
fs
daa
push
sti
cmpsb
add
push
or
pop
daa
fisubs
and
sbb
cmpb
jge
stc
lock
cli
addl
mov
insl
mov
sub
jecxz
jmp
movsb
loope
in
push
mov
push
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
pop
add
jg
stc
add
add
add
add
add
push
clc
inc
hlt
loope
jecxz
out
in
call
out
push
hlt
sar
add
adc
adc
imul
mov
jns
jno
lods
fmull
clc
cmp
push
setno
rcrb
jo
push
clc
jg
call
or
cmp
std
push
notb
sar
std
insb
add
and
std
dec
cli
shl
mov
in
or
inc
jmp
push
push
lret
stc
pop
nop
add
adc
mov
call
sbb
push
mov
or
ja
lcall
sti
sahf
divb
in
push
jmp
in
out
jo
enter
mov
incl
pop
or
les
or
or
fcomip
pushl
mov
in
ljmp
movsb
hlt
inc
sti
mov
or
push
inc
int3
adc
adc
xsha1
cmpsb
or
or
add
in
cld
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
or
add
and
jo
loop
jmp
fldt
sti
ret
add
in
daa
pop
sub
push
pop
push
decb
mov
xor
sbb
testb
inc
std
jbe
ljmp
mov
stc
pop
negl
and
and
mov
out
mov
fildll
adc
and
xchg
and
and
and
ljmp
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
in
stos
mul
add
into
or
push
sbb
adc
pop
mov
jecxz
add
jg
incl
sbb
push
pop
or
jmp
out
mov
fdivrp
call
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
or
and
add
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
sbb
pop
and
mov
sub
pushl
pop
pop
push
pop
add
mov
jecxz
loopne
fists
and
loop
out
jge
and
hlt
dec
cli
sar
jg
add
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
lcall
loope
test
dec
jmp
jmp
ljmp
icebp
lock
es
idiv
fs
cld
ret
ljmp
nop
push
mov
push
adc
push
test
sbb
sbb
sbb
adc
dec
mov
shlb
jmp
lcall
sub
add
repnz
test
pusha
dec
or
or
mov
insl
adc
ret
xorb
adc
fimull
ljmpw
mov
loope
fcoml
in
in
push
add
pop
pop
xchg
push
push
adc
sbb
mov
iret
or
mov
push
cmp
div
not
clc
in
lods
std
xchg
fs
mov
jnp
sbb
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
jg
incl
cli
mov
pusha
or
sbb
sbb
sbb
dec
push
jg
ds
mov
mov
pushf
ret
repz
testl
add
addr16
fcomip
incl
add
mov
pop
fs
or
or
orl
or
call
notl
repnz
jmp
sub
sbb
mov
hlt
daa
sti
in
js
jl
jmp
pop
test
and
xchg
or
add
std
jb
pop
les
enter
pushl
or
pavgb
pop
pop
add
decb
into
inc
xorb
out
out
jmp
cmc
cmp
mov
pushl
pop
sti
or
or
xchg
or
or
pop
or
fwait
sbb
or
push
cmp
aas
addb
or
cli
xchg
clc
jg
hlt
jae
sbb
icebp
sbb
mov
push
std
jecxz
cli
decl
sub
popf
push
jns
sub
cs
sti
ds
ja
pop
push
dec
notl
repz
repnz
ljmp
dec
testb
adc
jmp
pop
icebp
incl
scas
sbb
aam
andl
and
sbb
or
sub
call
cmc
repnz
lods
out
imul
test
fwait
jl
xchg
in
mov
cmpsl
in
pop
in
mov
out
cld
rclb
or
pushl
mov
dec
sbb
and
sbb
rorl
lcall
add
mov
insb
bnd
lock
mov
in
mov
cmc
aad
data16
in
call
mov
hlt
or
adc
sbb
push
add
adc
xor
outsb
or
mov
lcall
shll
push
pushl
iret
aad
fst
out
repz
adc
cmp
inc
and
jbe
test
mov
sbb
lds
sbb
mov
dec
add
imulb
in
ss
stc
fisttps
loop
incl
in
dec
repz
movsb
adc
mov
jmp
and
test
xor
inc
sbb
or
ds
outsl
hlt
dec
out
and
das
mov
mov
out
xchg
ljmp
xlat
clc
cli
pushl
add
add
jg
push
sbb
sbb
repz
add
mov
out
jecxz
frstor
loop
mov
out
in
jne
fdivrp
cmp
mov
cmp
push
inc
jns
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
incl
or
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sbb
scas
sbb
sbb
sbb
push
sbb
adc
incl
add
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
neg
loopne
lea
fisubs
or
sar
rdpmc
adc
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
cld
in
dec
sbb
pop
or
xchg
xchg
std
arpl
push
test
out
sbb
xor
hlt
xor
ljmp
pop
jmp
roll
or
in
outsb
pushf
push
ret
pushl
or
or
nop
scas
xchg
add
add
je
ljmp
pushl
fwait
std
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
aam
dec
std
ds
add
fbstp
sbb
or
or
pop
push
push
push
and
movl
lret
ja
sbb
repz
out
add
jp
push
jmp
out
sbb
ljmp
sti
cld
decl
rclb
stos
adc
adc
adc
ljmp
and
cs
sahf
or
or
lock
sti
jbe
call
sub
cmp
sub
out
ja
pop
notb
je
ljmp
icebp
add
adc
pop
lock
sbb
sbb
sbb
pop
cmp
push
push
add
xchg
out
in
repnz
and
mov
cmp
std
jecxz
loop
loop
in
std
mov
clc
or
idiv
int3
add
dec
sbb
cmp
xchg
and
in
and
test
aaa
push
mov
mov
imulb
ljmp
sbb
add
push
jecxz
loope
loopne
loopne
call
out
cmc
test
cmc
call
sbb
and
and
les
cmp
push
ljmp
inc
sbb
stc
out
jp
cwtl
ljmp
or
cmp
pushf
jmp
pop
call
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
mov
jge
dec
pop
pop
pop
repnz
dec
int3
in
das
ljmp
clc
or
loopne
loope
outsb
out
jmp
mov
das
fdiv
std
sub
insl
mov
mov
adc
pop
adc
and
mov
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
ljmp
fisubl
ficoms
in
jmp
jg
das
push
jnp
sbb
mov
call
push
sti
push
mull
fsubs
jl
sbb
sbb
adc
std
and
add
mov
jecxz
loop
jecxz
loop
loope
in
call
in
into
icebp
xor
cmp
or
adc
ljmp
adc
sbb
push
pop
xchg
sbb
sbb
add
push
jl
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
jg
push
sub
sahf
adc
adc
adc
adc
adc
clc
lcall
pmaxub
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
addl
ja
jle
scas
out
pslld
test
incl
add
cmpb
adc
mov
and
and
pop
leave
sbb
adc
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
mov
jmp
daa
ljmp
push
std
xchg
mov
add
call
or
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
xor
lcall
out
cmc
jmp
jmp
fcomip
xor
ljmp
sar
filds
or
or
or
or
or
inc
or
or
or
or
or
pop
add
cld
dec
pop
icebp
inc
in
repz
pop
jmp
incl
out
push
repz
pop
mov
stc
mov
mov
xchg
add
pop
cmp
add
adc
sbb
and
pop
adc
jg
mov
cld
sub
out
xor
inc
lock
mull
jne
dec
negl
dec
clc
in
decl
cmp
cmc
ss
out
hlt
xor
lret
sti
and
jmp
pushf
or
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
or
call
add
clc
js
mov
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
testb
mov
cmp
sbb
or
ret
adc
ljmp
sar
bound
pop
xchg
add
std
jb
imul
cmc
in
icebp
shl
gs
icebp
inc
and
in
mov
dec
in
fucomip
mov
out
icebp
es
jo
add
xor
adc
sbb
and
es
ja
and
sbb
shll
loop
xchg
clc
adc
out
out
in
out
jmp
and
cmpsb
call
xchg
out
inc
repnz
and
testl
pusha
lcall
pop
ret
les
add
add
cmp
es
adc
hlt
mov
arpl
in
cmc
mov
mov
jnp
lds
cs
call
repnz
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
ljmp
pop
stc
push
dec
push
nop
adc
les
mov
cmp
xchg
testl
icebp
pop
icebp
call
icebp
in
in
out
shr
mov
out
ljmp
sbb
push
sub
push
or
lds
sub
and
jnp
das
clc
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
in
fdiv
stos
add
xor
sub
lock
mov
or
into
sbb
and
call
rcl
pop
daa
mov
adc
test
out
push
sub
jecxz
call
fmull
push
mov
pushl
cld
test
jle
or
adc
sbb
push
pop
hlt
jmp
sbb
xchg
in
mov
mov
fdivrp
ficoms
loopne
popf
out
jmp
insb
repz
cmpsb
mul
clc
popf
stc
dec
mov
and
inc
or
adc
pushl
fistpl
and
xchg
daa
sub
sbb
sbb
aam
lock
in
incl
cld
fildll
aam
cld
fstps
js
stc
and
icebp
incl
and
inc
adc
adc
adc
test
mov
push
adc
adc
adc
das
push
mov
cld
sti
cmc
ljmp
xor
bnd
loope
fnsave
insb
out
out
jmp
jg
sar
mov
push
in
popf
repnz
sbb
in
cmp
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
ljmp
ljmp
sub
mov
adc
push
add
push
popf
or
or
or
jmp
or
add
ss
inc
clc
sar
dec
div
stc
daa
add
add
add
mov
add
push
sti
fcomip
push
popa
lock
mov
clc
add
push
lock
or
mov
adc
adc
sbb
fucomip
testb
add
cli
in
hlt
sbb
fucomip
xor
jmp
out
push
push
cld
jmp
aas
pop
inc
or
adc
or
or
add
adc
inc
cld
aam
mov
add
and
or
push
call
add
jecxz
add
inc
repnz
cmc
inc
stc
push
cld
or
repz
clc
repnz
adc
cmp
adc
ljmp
jle
punpckhwd
or
sti
sar
xchg
negl
testl
cmc
rcll
sbb
repz
repnz
out
aam
jmp
call
mov
mov
div
sbb
sub
lock
or
in
sbb
hlt
jmp
add
and
and
and
inc
or
hlt
int3
in
mov
pop
dec
dec
or
inc
out
jmp
adc
outsl
clc
addr16
pop
cld
adc
sahf
cli
mov
decl
ljmp
fdivp
add
adc
pusha
sbb
sbb
and
add
pusha
jmp
xchg
pop
sbb
mov
adc
push
adc
sbb
cmc
loop
jecxz
out
ljmp
scas
cmc
cld
cmp
mov
or
or
or
pop
or
or
cmp
or
sbb
mov
adc
mov
or
stos
add
stc
adc
pop
ljmp
loopne
loop
in
jmp
push
dec
push
test
or
popa
std
inc
std
in
sti
cli
clc
push
idiv
push
dec
add
pop
test
xchg
cli
or
push
or
push
push
adc
incl
popa
sbb
pop
jl
cmp
aad
adc
xchg
cmc
push
out
mov
scas
add
push
jle
ds
adc
sti
jb
insl
add
push
pop
aad
mov
mov
aas
mov
add
add
pop
inc
mov
mov
loope
stc
or
or
or
mov
cmp
and
push
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
add
add
int
dec
adc
adc
stos
or
in
add
stos
pop
mov
shll
sti
mov
cld
insb
jg
add
add
add
fbstp
insb
data16
in
je
inc
in
fldl2t
out
sbb
adc
test
add
or
adc
add
das
pop
inc
mov
add
cwtl
in
out
ljmp
cld
notl
adc
adc
adc
push
push
or
add
mulb
mov
icebp
clc
mov
pushf
push
leave
or
ljmp
fwait
aam
rorb
and
sbb
sbb
ret
cli
jmp
jmp
scas
rcrb
lock
push
cld
inc
js
pop
adcb
xor
ficoml
add
jl
xchg
cli
push
stc
push
stc
outsb
in
mov
pop
push
jae
rorl
dec
or
or
lea
mov
dec
jae
movsl
cmc
mov
mov
test
inc
out
pop
out
cmpsl
lock
repnz
cld
dec
add
test
push
pop
add
mov
sti
or
test
or
or
or
jg
jmp
or
mov
outsb
aaa
cli
sti
cmp
std
decl
inc
in
cli
call
in
in
in
in
out
ljmp
dec
shl
std
jne
or
jg
sahf
sbb
sub
scas
and
ja
cmpsl
sbb
sbb
add
lock
jg
sbb
cmp
in
or
out
int
in
scas
repnz
negl
push
push
stc
sub
mov
call
imul
cmpsl
or
cmc
inc
adc
sbb
sbb
adc
or
add
inc
idiv
lcall
hlt
in
sbb
in
inc
out
mov
imull
cld
add
pop
add
add
add
add
incl
flds
arpl
mov
sar
testl
fiaddl
repnz
adcl
mov
sbb
push
popa
repz
out
imul
test
dec
jmp
test
call
mov
clc
push
stos
pusha
adc
lods
add
add
mov
lcall
hlt
repnz
repnz
lahf
negl
idiv
add
push
mov
ret
add
mov
or
or
push
mov
push
add
std
xor
xlat
cli
and
sti
pop
pusha
cld
mov
mov
out
and
cld
inc
std
leave
cld
adc
lcall
add
add
add
pop
adc
pop
or
or
jg
add
fimuls
mov
lahf
add
push
ds
std
shr
pushl
pop
stc
sbb
cmp
aas
stc
mov
and
inc
notl
clc
xor
sar
les
add
mov
add
stos
cmpsl
ljmp
inc
roll
push
or
mov
or
fildl
mov
in
mov
ja
sub
xchg
ljmp
push
aam
push
cld
sbb
cmpsb
sti
dec
cli
mov
out
cs
sbb
std
test
mov
mov
push
clc
decl
pop
jl
dec
add
ss
add
add
add
inc
decb
push
ljmp
cmp
and
repz
sbb
mov
mov
testb
js
lods
or
mov
dec
call
cld
sub
push
mov
jmp
ja
cmpsb
incl
push
jle
roll
cmc
std
push
cli
pop
sbb
mov
lcall
imul
clc
add
dec
add
or
scas
adc
mov
data16
incb
sti
xor
loop
js
push
dec
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
inc
push
incb
cmp
or
fwait
add
cs
add
add
xor
jbe
push
std
std
cmp
mov
add
ja
ret
add
add
add
add
dec
cli
jns
xor
clc
ljmp
sti
push
loope
mov
add
or
add
ljmp
jb
stc
adc
push
out
cmc
out
or
out
aad
jmp
out
mov
add
sub
mov
or
test
or
decl
movsl
or
testl
dec
or
test
add
into
sti
dec
clc
icebp
fcomip
mov
lock
mov
daa
lock
and
cmp
incl
add
mov
pop
or
lcall
or
add
add
add
pop
data16
push
add
cmpsb
inc
inc
add
cld
mov
add
mov
mov
das
std
dec
cld
stos
sti
pusha
sti
sar
xchg
lock
pop
out
out
mov
out
add
mov
add
sub
out
addb
add
push
add
pop
in
dec
dec
cli
gs
adc
das
andb
sub
lcall
pop
add
add
add
add
add
add
add
roll
add
pop
or
rcr
decl
cmpsb
mov
mov
cli
xor
pop
clc
ss
hlt
or
jle
mov
je
mov
js
mov
in
loop
mov
add
mov
mov
jp
push
stos
or
rclb
and
add
mov
sti
clc
inc
notl
cmc
xchg
addr16
testl
stc
cmc
stc
int
stc
data16
sti
lods
cld
hlt
std
js
fcomip
in
decl
jb
push
sub
rorl
xlat
jp
test
dec
or
or
add
inc
cld
psubw
int3
hlt
arpl
xchg
hlt
adc
adc
inc
cld
cmp
enter
hlt
incb
push
lock
xchg
rolb
inc
add
mov
xchg
std
cwtl
std
or
cmpsl
add
add
sti
or
or
or
pop
cmpsb
std
add
cli
mov
scas
push
std
xor
stc
insl
stc
add
mov
jmp
pop
jbe
stos
add
add
cld
test
cmp
cmc
or
repnz
repz
xchg
test
es
ljmp
cld
push
add
add
add
or
push
or
rorl
or
lcall
add
mov
decl
sbb
push
aad
ds
jg
cmc
cld
mov
testb
repz
repnz
bnd
js
or
inc
repnz
xchg
clc
fcomps
jle
cld
add
push
add
daa
fimuls
out
inc
mov
pusha
or
pop
dec
push
dec
add
add
mulb
or
fdiv
shl
jo
fidivrl
icebp
push
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
movb
movb
jg
rorl
int
or
or
aad
mov
or
or
aaa
cld
stos
push
or
add
add
decb
sbb
cmp
sub
out
pop
cli
mov
cli
or
call
std
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
or
push
std
dec
in
incl
xchg
bound
into
loop
sbb
decb
cmp
call
incb
add
rolb
add
add
add
add
jo
and
push
add
clc
xchg
pop
ljmp
cld
cli
push
cli
sbb
jmp
testl
cmpsb
push
std
pop
pop
clc
mov
xchg
cli
scas
ljmp
aaa
frstor
xor
xchg
push
rorb
iret
or
or
or
or
idiv
fwait
jbe
mov
add
dec
out
ljmp
adc
cld
mov
sti
aaa
sti
movsl
cli
adcb
jecxz
jmp
cli
xchg
cli
out
mov
xor
inc
add
or
cwtl
or
pop
ljmp
adc
sbb
cmc
mov
add
add
cltd
add
sti
xor
push
cmp
gs
cmp
lcall
add
xor
sub
add
lods
xchg
data16
test
aad
insl
call
cltd
add
popf
add
adc
call
cld
pop
sti
aad
xbegin
mull
decl
lock
jmp
das
repnz
fdivr
lods
lcall
pushf
add
add
add
jne
push
lock
in
aad
incl
xchg
and
std
idiv
inc
sti
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
cmp
inc
xchg
push
cmc
in
add
add
sti
add
inc
push
sub
xor
fiaddl
movsb
add
add
je
xchg
pop
insb
add
loope
jb
pop
add
lcall
cmpsb
cmp
cld
sub
cld
outsl
cld
push
std
pop
pushl
mov
add
push
movsb
add
add
add
add
dec
add
add
ret
or
je
add
add
add
sti
sub
fisubrl
add
mov
mov
add
cmp
call
mov
out
add
add
add
xor
lsl
add
inc
add
sbb
pop
imul
sti
pop
sti
cmp
mov
sti
imul
fs
jle
std
mov
add
jp
in
xchg
daa
sti
cli
push
or
dec
cli
lcall
ss
data16
call
inc
add
add
add
into
pop
cli
mov
es
sbb
push
add
mov
clc
add
and
adcb
add
push
push
push
cmp
std
jge
mov
and
push
out
xchg
jb
jp
add
pop
pop
and
push
sub
sub
sub
mov
dec
jmp
mov
push
fcom
in
sub
aas
movsb
push
fwait
mov
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
push
adc
add
add
decl
test
sbb
inc
add
das
add
add
lock
sub
add
add
test
mov
std
add
pop
mov
mov
sub
and
sarb
xchg
add
jg
pop
ss
fcmovbe
decb
cld
lcall
stc
idiv
push
clc
cwtl
testl
mulb
test
fincstp
mov
sti
dec
push
mov
sbb
stc
xchg
add
mov
cld
push
jg
xor
or
pop
movl
incl
add
std
movsl
cld
idiv
push
sti
push
sti
cmp
ds
push
lret
inc
ljmp
xor
xchg
outsl
sbb
and
push
aaa
add
mov
clc
add
sub
add
das
adc
add
add
add
sub
xchg
add
out
decl
push
jnp
fistps
std
pop
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
lock
decb
std
cmpsb
mov
cmp
add
add
jg
mov
add
add
scas
add
jno
lock
das
add
add
mov
add
add
sbb
pusha
pop
and
jge
bound
pop
cmp
std
jb
in
push
cmc
pop
sahf
adc
pop
add
xor
cs
cld
mov
sbb
sti
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
and
clc
cmp
stc
inc
cli
out
cli
jmp
jo
mov
cld
std
cld
loope
inc
jmp
xchg
bound
incl
push
outsl
pop
mov
jge
stos
or
and
push
mov
sub
out
mov
incl
filds
sti
and
ficomps
lcall
sti
or
clc
mov
outsb
loope
notb
fbstp
xchg
push
add
inc
push
out
add
jbe
and
add
cmpsb
out
lock
ret
cld
add
push
sti
iret
cli
pop
cli
daa
dec
jae
pop
inc
sti
out
decl
fsubrs
fscale
enter
add
add
add
incl
hlt
add
faddl
mov
aam
add
lcall
in
dec
es
jnp
cmp
icebp
jo
push
xor
pop
push
sub
adc
dec
data16
dec
mov
sar
decl
cmp
dec
lods
std
xor
sar
cld
in
sti
jl
sbb
sahf
mov
lock
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
push
jl
pop
mov
push
add
add
add
adc
test
add
push
add
sub
add
add
cld
mov
ss
jns
idiv
jno
or
cmc
sti
pop
mov
incl
outsb
fsin
and
cmp
lcall
add
inc
adc
mov
add
add
xchg
add
add
add
mov
add
pop
fwait
lea
or
and
or
cltd
decb
and
arpl
mov
pusha
outsl
cmp
pushf
add
add
add
pop
add
adc
add
faddl
add
pop
mov
add
cmp
inc
add
add
add
ret
add
pop
fdiv
and
data16
fdivr
pop
sar
sbb
lret
push
mov
fimuls
add
imul
add
fwait
inc
mov
pop
incb
incb
std
mov
std
fs
xchg
testb
fs
add
push
mov
sbb
jnp
dec
jl
subb
negb
std
cmc
stos
dec
mull
ficomps
std
xor
sub
add
fildl
and
add
adc
jne
add
sahf
leave
add
xor
gs
sti
mov
push
xor
mov
outsb
add
add
enter
mov
ljmp
out
cmpsb
push
jl
stos
std
movq
stc
or
inc
add
mov
sbb
nop
mov
push
cmc
cmpsb
incl
cld
add
add
movsb
add
jbe
outsl
test
mov
mov
lcall
adc
in
xor
repnz
jmp
adc
mov
sahf
push
ljmp
jmp
call
cmp
test
sub
add
call
cmpl
filds
cwtl
add
and
add
add
pushl
dec
clc
incl
cmpsb
mov
std
fdivr
stos
cld
xchg
cld
mov
add
pand
xor
mov
inc
push
mov
ljmp
sub
push
out
sti
lock
sub
test
insb
std
sbb
sar
mov
mov
std
xchg
decb
loop
lahf
outsb
push
add
mov
add
sbb
inc
xchg
pop
xchg
push
shlb
mov
es
sar
adc
add
insl
add
addl
add
jg
adc
cmp
mull
loop
clc
daa
pushl
cmp
clc
clc
xchg
add
add
test
add
ja
cmp
add
pop
sbb
sahf
ss
imul
arpl
pop
ficoms
pop
jle
jecxz
mov
sub
dec
adcb
lcall
lret
ret
sbb
xchg
add
cs
cmc
mov
in
mov
jg
ja
cmpsl
xchg
movb
add
bound
out
decl
out
lahf
cs
int
sahf
cld
push
pop
call
inc
cld
arpl
lcall
stos
add
inc
mov
mov
lcall
clc
insl
push
aad
dec
test
std
inc
mov
ss
sbb
out
test
pop
sub
xchg
stos
out
std
cmp
push
add
test
lret
add
xchg
push
loop
cltd
add
and
add
arpl
xor
adc
lcall
fidivs
xor
fsubr
std
mov
ja
scas
mov
popf
and
pop
pop
inc
dec
or
add
sbb
add
push
fcmovnb
stos
add
stos
stos
xchg
jo
faddl
test
lods
mov
gs
ljmp
ljmp
pushl
push
sub
xchg
sbb
sahf
mov
aas
xor
sub
add
add
test
lds
mov
add
pop
add
pop
dec
fdivr
out
push
mov
add
add
adc
dec
or
dec
popa
lock
mov
cld
mov
sarl
aad
idiv
sbb
pop
std
mov
decb
mov
xchg
out
add
xchg
xor
inc
out
loopne
fldl
ficoml
sbb
inc
decb
lret
inc
jl
pop
std
shlb
or
mov
ds
pop
sti
sti
std
sti
sub
push
cli
xchg
cld
sbb
loope
sahf
lcall
ljmp
les
inc
add
add
shlb
add
add
add
loopne
test
xchg
fiaddl
xor
leave
xor
push
sar
add
mov
push
ret
pop
mov
sar
pop
pop
es
inc
pop
out
out
pop
add
call
add
add
add
decb
mov
movsl
decl
mov
pop
mov
add
sub
movl
inc
outsb
lret
mov
sar
dec
hlt
dec
add
loop
add
xor
mov
mov
and
lods
decb
pop
outsl
push
bound
push
mov
jmp
mov
repnz
mov
call
push
lcall
sbb
or
jecxz
out
inc
mov
mov
xchg
sbb
leave
std
jle
dec
std
push
hlt
cld
enter
loop
xor
faddl
bound
push
fisubl
dec
cmp
add
xor
push
das
mov
lods
bound
into
xchg
add
scas
loop
push
incb
pop
add
add
add
shlb
add
ret
decl
iret
pop
bound
jnp
movsl
sub
or
push
add
shl
in
mov
rcr
mov
ret
rcl
shll
add
ljmp
ret
mov
jle
add
add
jle
add
push
outsb
nop
push
addl
clc
xlat
add
add
fcoms
mov
rcll
inc
xchg
fsin
cmpsl
mov
js
imul
push
pop
pop
test
pop
movb
scas
xchg
push
sbb
add
jecxz
cmp
adc
das
mov
or
imul
add
push
ljmp
loopne
sahf
cld
std
std
jp
cmp
add
cld
adc
mov
jg
mov
sbb
fcoml
inc
jp
push
inc
cmp
pop
add
sbb
out
add
add
lcall
data16
fcmovbe
inc
ficompl
mov
shl
sahf
aam
xor
repnz
xchg
sahf
xchg
stos
pop
or
scas
mov
aam
out
je
icebp
push
inc
or
add
out
push
lock
push
mov
add
loopne
cld
hlt
or
jbe
add
ss
add
shrl
xor
sub
pushl
lock
scas
lds
mul
add
add
dec
fisttps
sbb
mov
mov
stos
xchg
mov
idivb
aaa
lea
jp
ljmp
adc
jno
lods
rclb
mov
cld
add
xor
mov
je
ds
add
rol
jge
insl
xchg
loop
out
mov
loop
xor
jb
jb
outsl
lcall
iret
jp
push
scas
or
sahf
pushl
cmc
popf
mov
cs
cmp
cli
bound
data16
dec
jle
add
or
jne
js
loop
xchg
inc
outsb
aam
jmp
cmpsb
mov
in
jle
fidivl
xor
add
sbb
cmp
jg
mov
xchg
xor
jae
cmp
mov
sbbb
lock
push
lock
ret
sbb
pushf
adc
ret
aad
mov
inc
ss
push
adc
fnsave
into
divb
scas
inc
xorb
add
push
shl
aaa
inc
pushl
decl
icebp
aad
ljmp
decl
es
icebp
push
fsubrp
scas
cltd
decb
sbb
std
ss
std
cmpsl
std
cmpsb
std
vaddsubpd
je
sub
ja
lret
aas
test
jl
pop
out
mov
ret
cmp
push
mov
jmp
adc
push
test
mov
mov
popa
rolb
and
cli
loop
inc
aaa
sub
in
ljmp
and
out
adc
add
push
out
lgdtl
cmp
pop
inc
xor
es
mov
mov
mov
ljmp
rcl
cli
mov
ljmp
lret
out
cmpsb
push
loop
mov
sub
jecxz
stos
shlb
push
fiadds
lds
cmpsl
in
mov
mov
rol
jnp
fsts
cmc
mov
cli
inc
mov
gs
lock
mov
xchg
daa
ljmp
fcompl
jg,pt
inc
addr16
cmp
and
bound
adc
loope
sbb
shrl
adc
mov
or
adc
inc
cli
mov
roll
xchg
add
xchg
mov
or
inc
cmp
pslld
imul
data16
jp
fldenv
or
faddp
roll
pop
ss
popa
jo
cmc
cmpsb
outsb
xor
sahf
push
fisubs
in
iret
add
mov
scas
pusha
dec
jns
mov
xor
inc
aad
mov
out
adc
mov
bound
sarl
mov
mov
clc
dec
stos
mov
cmp
mov
stos
or
notb
dec
ret
mov
pop
js
push
lds
jp
std
sbb
je
add
add
dec
cs
and
cmp
out
adc
inc
mov
ljmp
jle
push
xchg
push
mov
sbb
loop
shlb
scas
daa
jnp
inc
test
push
mov
outsb
push
andb
clc
js
test
xchg
push
pop
ret
jns
jb
add
dec
push
xlat
inc
and
imul
sub
mov
push
inc
movsb
xchg
js
call
jge
lahf
push
xor
mov
outsl
es
push
lret
out
adc
xor
jbe
ret
negl
sbb
mov
adc
fcomi
inc
xchg
pop
mov
mov
loope
sbb
insb
push
adc
cli
nop
adc
cmp
faddl
xchg
repnz
cld
cmpsl
push
test
sbb
scas
notl
lods
lret
fadd
out
mov
push
or
hlt
aad
mov
iret
andl
sbb
adc
mov
add
sbb
cmp
push
jge
je
push
jns
mov
pop
aas
cmp
add
mov
js
jp
xchg
mov
out
xchg
and
push
push
add
mov
dec
fimull
inc
jp
add
pop
dec
dec
push
push
sahf
cli
add
push
scas
adc
sub
ds
push
add
negl
sub
jp
cmp
jl
imul
xor
sbb
aad
sub
jbe
push
aam
push
lock
inc
hlt
lret
push
sbb
outsb
mov
mov
cmpl
ss
dec
fmull
push
jmp
push
test
push
notl
and
inc
mov
bound
push
mov
sbb
pop
jg
push
xchg
adc
xor
pop
pop
stos
cmp
jecxz
mov
xchg
movsl
fidivrl
loop
ret
outsb
cli
dec
sub
sbb
mov
mov
and
jbe
jl
jge
ret
mov
push
loopne
pop
push
into
xor
cs
push
out
mov
mov
pop
sbb
je
dec
ljmp
es
or
pop
es
pop
push
orl
in
pxor
mov
xchg
cmp
and
jbe
push
pop
dec
push
or
adc
add
push
and
mov
mov
push
je
js
mov
dec
gs
pop
xchg
xor
pop
fs
jecxz
rolb
adc
sbb
inc
sarl
cwtl
ret
pop
loopne
test
test
mov
adc
jbe,pn
loope
dec
sbb
scas
mov
icebp
jno
movsb
lea
inc
and
push
mov
out
push
or
pop
in
test
ret
hlt
hlt
icebp
aad
cmpb
jbe
in
lock
addr16
push
sti
js
popf
imul
add
jl
addb
loope
iret
mov
mov
xor
cmp
add
loopne
xor
adc
out
jbe
add
repz
sbb
add
loope
pop
adc
add
jmp
loopne
mov
loop
push
and
or
cmpsl
out
into
fldcw
cmpsl
cmpsl
cwtl
push
mov
shl
loop
js
mov
es
add
mov
lods
push
fisttpl
mov
jno
push
inc
scas
push
sub
fnstsw
cli
dec
out
lcall
pop
scas
fiaddl
cmp
push
mov
das
jno
push
jo
jp
ss
mov
ja
push
push
ret
xor
jp
pop
repnz
fidivrl
or
pop
or
mov
sub
ss
inc
inc
adc
scas
inc
jbe,pn
mov
push
push
fdivrl
or
and
jno
lock
repnz
fidivs
je
loopne
divl
inc
sub
sbb
add
fstpl
leave
daa
xchg
jbe
sub
jo
test
add
js
data16
mov
ret
and
mov
dec
jmp
scas
ret
nop
inc
adc
ret
xlat
je
fcmove
outsb
ljmp
xor
aad
cmp
subb
inc
push
jnp
pop
adc
push
cs
add
sbb
ljmp
xor
mov
dec
aam
iret
inc
push
push
push
pop
faddl
and
loop
ficoms
cmp
aad
add
push
out
ret
cs
scas
or
jle
jb
lret
xchg
jecxz
inc
vdivss
inc
add
jnp
out
mov
push
push
jb
add
mov
add
inc
adc
pop
rcll
xlat
add
cs
movb
or
fcmovu
in
std
push
jbe
sahf
fimuls
sub
xchg
push
scas
jle
xchg
jbe
outsb
clc
mov
jnp
cld
and
sahf
jmp
push
loopne
std
push
inc
sti
repnz
sahf
adc
and
mov
in
mov
or
adc
adc
inc
and
ss
iret
cmp
in
out
inc
add
mov
push
neg
ret
ret
sbb
dec
out
imul
mov
mov
push
mov
push
inc
popa
rorb
inc
xchg
stc
push
out
mov
add
add
cli
data16
in
sub
ret
mov
xor
stc
adc
out
jmp
xchg
mov
mov
pop
inc
push
fwait
jnp
pop
outsb
addr16
lcall
inc
sub
and
and
addl
jmp
cld
mov
sarl
out
xor
inc
ss
fdivp
lock
add
or
jne
div
out
sub
sbb
pop
fnstsw
inc
sbb
sbb
jnp
out
or
movb
adc
ret
fwait
call
std
push
out
pop
roll
imul
jnp
loop
sbb
sub
negb
push
clc
jmp
out
not
out
popa
xor
inc
push
pop
paddusb
pop
jp
andl
out
push
push
pop
iret
xchg
ret
outsl
scas
add
add
mov
mov
add
push
cmp
xchg
dec
push
dec
adc
arpl
cmc
fcomi
sbb
dec
pop
mov
push
cmp
fbld
shll
add
mov
ja
dec
les
std
cmp
or
test
push
adc
pop
fcomi
push
idivb
sti
sub
pop
idivl
clc
aaa
fwait
add
sub
sti
aas
testb
inc
std
pusha
cmp
add
sbb
insl
pop
addl
mov
push
inc
cmovo
fistl
xchg
insb
mov
je
jo
pushf
jge
adc
gs
inc
inc
lods
add
imul
push
fdivrl
aas
aas
sbb
jp
lcall
mov
dec
cmpb
jns
add
inc
dec
dec
dec
out
mov
ret
int
jge
push
movsb
repnz
es
into
push
sub
mov
sahf
push
push
into
inc
push
ss
pop
push
cmpsb
pop
mov
insb
add
clc
adc
data16
push
shl
mov
mov
fdivs
jae
mov
mov
ja
inc
mov
mov
rcl
sub
sbb
mov
in
cmp
pop
push
jns
gs
xor
pop
inc
jb
jbe
xor
je
pop
xchg
xchg
aaa
test
jae
arpl
arpl
addr16
popa
sbb
dec
jno
jns
jne
push
mov
dec
mov
das
outsw
jb
insl
sub
or
sbb
xor
arpl
add
std
jo,pn
jo
imul
mov
push
xor
ss
outsb
mov
dec
push
pop
icebp
inc
jno
xlat
test
out
js
push
into
push
in
je
outsb
addr16
les
ljmp
idivl
mov
int3
shlb
ret
loop
rorl
mov
mov
mov
or
ret
mull
xlat
or
mov
push
dec
and
not
fbld
rcl
sbb
and
test
adc
popf
std
lret
cld
enter
addb
mov
shr
mov
rol
mov
into
stos
ret
mov
loope
mov
mov
arpl
mov
ret
test
mov
shr
mov
mov
ret
sub
mov
or
std
mov
ror
repnz
into
mov
jnp
divb
mov
enter
rcr
addr16
mov
fmul
mov
fldl
inc
mov
ret
mov
mov
lret
lock
pop
mov
in
push
xlat
aam
mov
mov
jne
les
add
shl
inc
fsubp
int3
rol
pop
or
enter
pop
mov
fiadds
stc
rcl
and
shrb
xchg
cltd
andl
pop
sbb
int
in
sti
xchg
mov
imul
sbb
in
pop
jno
int
mov
ret
enter
insl
push
outsl
xorb
repnz
out
mov
es
lock
add
bound
ficoml
cltd
pusha
mov
clc
adc
rcrb
ret
mov
ret
das
mov
xlat
stos
mov
mov
shl
in
dec
mov
mov
fmul
aad
sar
aam
iret
pusha
fidivs
or
das
repnz
sub
push
sahf
jb
sar
iret
in
mov
cmp
std
add
ljmp
mov
iret
mov
or
ret
xchg
and
cli
mov
shlb
movl
leave
iret
shrb
rclb
push
mov
and
fildl
shll
inc
mov
fdivrl
and
cmp
aad
insl
loopne
cmp
mov
and
data16
cmp
fs
xor
ja
and
and
aaa
cld
scas
mov
fs
push
push
mov
sarb
xor
das
jno
mov
xchg
fs
mov
or
jo
push
jns
lcall
and
outsb
orl
rolb
fidivrl
jne
adc
sarl
fisubrs
in
jae
ds
and
outsb
arpl
push
push
fdivr
and
shrb
sub
and
inc
ja
push
and
push
es
push
and
sbb
jo
daa
and
jl
sub
sbb
mov
cmp
mov
dec
gs
decb
inc
cmp
sub
dec
outsb
jae
popa
loopne
jae
bound
aaa
shlb
xor
sti
xor
cmp
inc
adc
inc
popa
arpl
or
fldt
addr16
add
mov
dec
fs
fwait
cmp
xchg
cmc
pop
dec
sbb
adc
jb,pt
outsb
or
inc
xchg
seto
xor
inc
jmp
inc
xor
xor
pushl
inc
cmp
xor
inc
inc
inc
inc
inc
inc
xor
cmp
inc
xor
add
inc
dec
cmpsl
ret
dec
add
xor
xor
inc
inc
inc
inc
inc
inc
jae
aas
xchg
int3
adc
inc
clc
dec
add
dec
imul
inc
mov
repz
cs
sti
gs
sub
adc
and
sub
out
pop
pop
add
inc
mov
or
lcall
adc
mov
push
add
adc
adc
push
pop
popa
push
insb
inc
loope
sbb
inc
insb
cmpsl
imul
push
lea
in
fimull
and
jmp
lock
inc
jo
and
pushl
lcall
push
into
mov
cmpb
fbstp
xor
add
pop
xor
mov
xchg
mov
adc
in
xlat
mov
in
and
ret
scas
push
dec
push
mov
sarl
push
mov
xchg
push
aas
out
fidivs
push
push
fiadds
ljmp
pop
pop
and
dec
mov
arpl
sbb
inc
popa
pop
lods
add
mov
sbbb
outsl
scas
push
cltd
jno
xchg
movsb
mov
mov
push
and
add
in
jo,pn
jecxz
out
adc
test
xor
lock
or
in
rcrb
jbe
or
xchg
shrb
pop
rolb
push
repnz
and
jl
movsb
in
fbstp
nop
pop
adc
rorb
outsl
xorb
fnstenv
loop
xchg
outsl
clc
outsl
push
pusha
and
out
or
flds
add
pop
sbb
in
mov
pop
adc
xchg
xchg
jbe
nop
cmp
push
iret
jae
mov
and
and
push
notb
jle
sbb
enter
and
pop
mov
jb
loop
xlat
dec
add
loopne
jne
sahf
das
mov
and
pop
bswap
or
stos
dec
inc
adc
stos
pop
sbb
adc
pushf
inc
xor
cmp
daa
outsl
mov
rorl
mov
rol
jno
sub
scas
dec
mov
sub
pop
mov
dec
sahf
jo
shlb
sub
adc
adc
mov
cs
inc
sti
push
mov
add
test
adc
or
inc
ret
sub
aas
dec
sub
mov
mov
adc
add
mov
jg
xchg
inc
push
enter
test
add
aas
or
add
inc
dec
es
call
lock
scas
push
or
shrb
dec
push
sub
jg
xlat
or
cltd
enter
aas
or
in
add
test
scas
or
das
sbb
mov
dec
dec
jae
pop
mov
adc
lahf
std
push
ret
jno
les
sahf
fbstp
ret
jo
cmp
inc
mov
cmp
das
sbb
xchg
les
nop
das
add
pop
push
ret
mov
js
lock
das
sub
add
cmp
adc
rol
mov
sub
add
lahf
xor
in
jns
add
mov
add
mov
cs
pusha
int3
outsl
out
push
add
outsb
and
lds
mov
int
int
inc
pop
and
cmp
outsl
adc
loope
das
pop
rolb
xor
add
roll
fwait
mov
adc
jb
pusha
sbbb
cmp
orl
add
shl
cs
and
inc
outsl
rcll
sar
mov
pusha
adc
pop
enter
aad
pop
push
aad
push
pushf
inc
lock
seto
enter
aam
aam
mov
push
jmp
adc
nop
shlb
jo,pn
pop
inc
lahf
mov
cmpsl
out
nop
adc
mov
xor
sbbl
xor
sbb
addb
adcl
xlat
push
mov
inc
scas
cmp
xor
fstl
int
pop
and
pop
add
jo
ljmp
xor
mov
adc
add
pop
or
lds
mov
inc
loopne
repz
loopne
pusha
idiv
subl
dec
xor
xor
sbb
mov
mov
shrb
loopne
fildll
ss
or
add
pop
mov
popf
push
and
add
das
pop
and
sub
adc
add
iret
nop
adc
out
inc
adc
sar
addb
sti
iret
cli
je
add
das
adc
pushl
cmove
add
adc
lock
outsl
push
in
add
outsl
js
mov
cmp
push
ds
roll
iret
pop
inc
push
fmuls
leave
push
mov
je,pn
incb
out
and
push
inc
push
outsb
push
mov
dec
fdivrs
out
shlb
cmpsb
push
cmpsl
in
add
mov
jo
rclb
dec
icebp
leave
outsl
in
insb
push
pop
bnd
xor
cmp
fnstenv
add
fwait
push
jecxz
mov
fists
cs
mov
insb
inc
mov
movsl
push
popf
fnstenv
fmul
mov
ja
in
shl
enter
negl
push
nop
pushw
cli
call
rolb
fdecstp
xor
neg
fcmovbe
push
push
imul
adc
shrl
loopne
push
rolb
das
mov
inc
push
pusha
nop
dec
inc
cmp
cmp
push
sbb
lods
repnz
fwait
negl
out
push
push
mov
jns
cmp
imulb
rcrb
stc
fcmovbe
mov
mov
xchg
push
outsb
inc
push
and
sarl
and
push
cmp
rorb
and
xadd
dec
inc
aaa
loope
jno
sbb
adc
stos
mov
push
nop
addb
add
mov
clc
in
sbb
inc
scas
addb
mov
inc
mov
pop
fbstp
scas
mov
addl
idivb
jp
out
cltd
add
inc
cmp
lahf
mov
das
sub
int
lcall
sbbl
aas
loopne
mov
sbb
push
scas
add
push
lods
xor
xor
loope
or
cmpsl
xorb
mov
add
dec
and
outsl
pop
mov
outsb
adc
add
inc
insb
pop
iret
mov
je
and
pop
das
shlb
insl
xchg
push
pop
das
loopne
pop
xor
aas
mov
jns
mov
mov
adc
sar
cmpsl
sbb
mov
mov
outsb
ja
mov
sarb
mov
dec
rorb
fs
pushf
and
jle
enter
mov
or
aam
add
stc
dec
sbb
push
mov
jbe
fisubrs
push
sbb
loopne
mov
dec
and
push
icebp
add
fiadds
adc
out
mov
push
xchg
nop
repnz
cwtl
push
pusha
fists
add
mov
push
das
lock
out
xchg
cs
out
mov
cs
cmpb
jle
inc
lock
cmpb
les
cmp
adc
lds
jp
mov
dec
je
notl
aas
inc
pop
inc
mov
jle
pop
add
rolb
outsb
cmpb
dec
push
subl
sub
mov
mov
jge
int
ds
push
pusha
add
xor
into
or
mov
aaa
shlb
push
js
pop
add
jns
outsl
and
adc
jns
and
add
add
pusha
imul
add
dec
xchg
stos
out
inc
jg
loopne
bnd
pshufw
rcrb
rorb
push
or
adc
cs
mov
push
and
mov
flds
scas
cs
pusha
fcompl
outsl
fldl
add
shl
mov
push
rcrb
jmp
add
icebp
or
xchg
dec
pop
and
pop
outsl
jmp
xor
ss
add
out
pusha
inc
add
sbb
unpcklps
push
jo
jle
das
loopne
lock
add
add
nop
aaa
add
loope
mov
loopne
fistps
les
int3
lods
rorb
sub
addr16
mov
jg
add
faddl
push
sar
in
das
push
cmp
jmp
outsl
sub
cmovo
sbb
add
test
outsb
loopne
push
push
cltd
xchg
push
jg
aas
outsl
cmpb
inc
add
jl
push
jo
out
lock
or
and
dec
mov
add
nop
cmp
pop
pop
add
sub
jge
xchg
add
pop
pop
daa
iret
xchg
mov
inc
push
mov
inc
inc
inc
cs
ja
leave
inc
adc
dec
repnz
leave
mov
push
mov
push
iret
sub
std
push
push
inc
add
setb
inc
inc
mov
dec
dec
rorb
xor
xchg
dec
add
ja
xor
pop
pusha
out
xchg
out
push
nop
push
xchg
out
xchg
push
rcrb
leave
xor
and
repnz
add
cmpsb
mov
inc
xchg
jg
aaa
push
add
fisubrs
mov
lahf
add
sbb
jno
mov
aas
dec
add
ljmp
aas
orps
repnz
push
inc
cmpsl
incl
cmp
loopne
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
cmpsl
call
xor
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
sar
mov
and
jnp
mov
adc
inc
loope
test
decl
hlt
addb
xor
inc
sub
jg
mov
mov
pop
lods
add
mov
lods
inc
das
pop
jbe
sbb
pop
stos
aas
xlat
es
scas
lahf
jo
mov
pushf
cmp
rolb
pop
cmp
fstps
test
add
decl
cmp
jo
das
lods
jg
mov
add
add
mov
add
out
and
mov
aas
loopne
add
enter
js
inc
mov
push
push
mov
stos
loope
and
pop
out
add
pusha
add
mov
test
inc
inc
test
movsb
cmp
mov
add
inc
repnz
mov
in
push
push
leave
iret
or
xchg
pushf
mov
adc
rol
shll
loopne
push
pusha
iret
inc
es
sahf
push
push
rolb
jns
cmp
shl
rcl
cmp
rcl
pusha
into
mov
stos
jne
sub
add
mov
dec
xchg
cs
add
xor
push
test
aas
adc
fists
leave
ror
push
je
rcr
outsl
jo
add
push
pop
mov
nop
call
loopne
mov
xchg
xchg
repnz
fwait
data16
mov
cwtl
add
or
lcall
or
adc
cs
repz
and
xor
iret
repz
and
adc
or
push
pop
adc
pop
je
mov
inc
and
sub
sahf
out
push
push
and
jns
out
xor
es
sahf
out
sahf
daa
cs
sahf
out
das
aaa
ds
leave
ret
xor
sbb
addb
push
push
pop
std
push
stc
icebp
push
jns
out
roll
iret
cld
clc
lock
xor
push
xor
inc
lds
push
inc
dec
sti
in
mov
fmuls
mov
and
jae
push
xor
ss
mov
sbb
push
bound
mov
inc
sub
sbb
inc
in
mov
push
and
mov
or
fwait
cltd
outsb
push
ss
andb
sbb
or
outsw
push
push
sbb
cmpsb
mov
add
push
ss
add
out
popa
dec
psubq
pushl
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
inc
imul
jnp
push
loope
pop
stos
jb
push
test
shlb
or
cmp
incl
ret
xor
bswap
aas
incl
dec
mov
jae
dec
mov
shrb
sbb
jmp
jecxz
shrl
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
decl
lret
cmp
pop
aaa
testl
dec
mov
ja
call
adc
ljmp
jmp
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
ds
incl
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
faddp
jmp
loope
shrl
bound
pop
mov
insl
popf
pop
or
mov
testb
cmp
add
dec
mov
jbe
dec
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
push
pop
cmpsb
xchg
push
test
push
pop
movsl
gs
push
add
aas
jne
daa
inc
ljmp
lcall
in
aas
repz
aas
or
mov
mov
sbb
mov
and
sbb
ljmp
mov
xor
sbbb
loopne
mov
dec
or
add
mov
sub
mov
xor
call
mov
cmpsl
movsl
mov
mov
dec
outsl
je
inc
clc
sbb
jo
jb
gs
in
add
and
mov
pop
pop
mov
add
xchg
aaa
dec
pop
or
push
mov
andl
add
dec
rclb
cmp
test
stc
scas
mov
adc
jbe
push
inc
jbe
lret
pop
loopnew
push
inc
mov
pop
sbb
pop
outsb
push
es
dec
xor
add
xor
leave
and
faddl
andl
mov
inc
scas
cmpsb
pop
push
daa
and
test
add
push
addr16
pop
and
fidivrs
sbb
push
lock
das
push
push
mov
push
je
stos
rcrb
pop
mov
push
ss
mov
std
dec
jo
fs
push
dec
adc
pop
pop
push
dec
adc
inc
inc
add
pop
jg
push
addr16
bound
sub
push
popa
call
jo
cmovg
imul
inc
rorb
nop
jb
jae
jb
inc
pusha
jbe
push
rorb
push
pop
pop
sbb
mov
push
addb
imul
insl
iret
cs
jge
sbb
dec
inc
insb
imul
jo
adc
xchg
movsb
or
out
push
inc
sub
sbb
xchg
dec
xlat
push
xchg
adc
push
push
xor
stos
testb
or
jns
out
popa
imul
or
rorl
push
or
imul
or
stos
fimuls
es
pop
lret
negb
mov
push
outsl
lahf
mov
and
xchg
lock
dec
inc
repnz
inc
test
test
stc
mov
daa
clc
push
call
rcrl
test
cmpb
mov
ss
shr
lahf
andb
mov
and
clc
mov
cs
xchg
lahf
dec
mov
sbb
pop
aam
or
enter
adc
pop
out
rolb
mov
out
add
iret
push
dec
jl
negb
cs
jne
data16
push
and
shlb
cli
insb
lock
lcall
pop
adcl
or
in
inc
mov
xchg
cmp
mov
jo
mov
pop
pop
call
pop
add
aaa
clc
dec
gs
jbe
dec
push
and
outsb
jae
mov
in
jbe
imul
inc
insb
addr16
pushf
je
popa
push
cmp
push
sbb
and
setg
fs
loopne
fwait
jl
dec
nop
jno
rcrb
push
sub
lock
ja
cs
xchg
xor
xor
xor
mov
cs
xor
xchg
mov
test
xchg
lret
cs
jl
hlt
stos
int3
add
ja
aaa
inc
out
rorb
ficoms
pushf
orb
mov
lahf
cld
imul
das
push
sbb
cmp
add
adc
add
push
fcoml
insl
sbb
cmp
fstl
mov
aad
iret
lds
dec
stos
pop
enter
pop
jle
cmp
stos
add
mov
fsubrp
dec
aam
dec
inc
data16
insb
fs
jbe
xor
daa
and
jae
fidivs
push
inc
popa
jb
daa
dec
inc
dec
inc
cld
out
or
sbb
fnsave
and
or
icebp
sub
aad
outsb
into
pop
outsb
outsw
inc
fdecstp
mov
cmp
jo
popa
jns
dec
clc
add
outsl
imul
daa
push
rcrb
popa
gs
pop
pop
mov
mov
adc
inc
push
outsl
add
insl
insb
jb
pop
inc
sub
mov
inc
fs
inc
add
mov
dec
and
xlat
xlat
pop
test
movsb
sbb
add
mov
lock
lds
dec
je
rclb
push
test
jae
js
add
outsl
dec
dec
les
mov
and
jnp
ss
push
aaa
mov
jbe
mov
jle
addr16
sub
inc
jb
jns
cmp
out
mov
outsl
sarb
lods
cs
push
loopne
inc
or
inc
mov
idivb
inc
jne
je
and
lcall
call
ss
lock
inc
jecxz
xor
jbe
xorb
ja
cs
and
fstpl
shlb
loopne
mov
ss
cs
sbb
movsb
push
mov
inc
add
incb
dec
sub
mov
lock
xor
push
ss
addr16
mov
xor
addb
scas
in
xchg
iret
mov
xchg
xor
rorl
cmc
sbbl
sahf
sub
jecxz
dec
mov
pop
and
fidivrl
sbb
sub
mov
call
outsl
push
and
andb
aam
pop
idiv
mov
popl
and
ret
sub
into
nop
jnp
push
test
nop
pop
decl
shll
sbb
cmp
mov
outsb
mov
cmp
jo
rcr
cmp
cmp
jb
sbbb
rcll
cmp
mov
push
push
push
popf
loop
inc
aaa
dec
outsb
out
mov
cwtl
jb
jo
iret
pop
loopne
mov
inc
mov
out
dec
dec
sbb
das
ficoms
aaa
divb
mov
inc
call
cli
js
gs
push
popa
addr16
or
cmp
sub
dec
inc
mov
scas
push
das
stos
or
out
insl
faddl
iret
scas
xchg
scas
lea
add
push
sub
into
scas
or
mov
xchg
sbb
rorb
lahf
inc
adc
das
outsl
jg
sbb
sahf
addr16
push
mov
pushl
jmp
xchg
add
subl
sbb
push
jp
push
pop
push
add
orl
jbe
fistl
sbb
aas
pusha
shrl
add
cs
or
push
jmp
push
mov
repnz
sbb
test
sbb
push
mov
fs
popa
jb
xchg
scas
fwait
mov
add
pop
mov
lock
divb
lods
push
sbb
inc
aam
stos
andl
pop
sbb
ja
outsb
nop
pop
push
sub
push
add
push
sbb
stos
push
or
aam
bound
add
lahf
iret
out
mov
xor
dec
adc
inc
add
push
xchg
repnz
xchg
push
mov
cmc
mov
xchg
clc
lahf
mulb
mov
inc
inc
mulb
es
add
in
mov
popf
push
inc
xor
xchg
sbb
loope
cmp
lahf
pushl
dec
jae
sbb
and
decl
mov
mov
cmp
mov
lock
mov
out
mov
push
das
arpl
call
js
je
push
je
sub
jns
push
call
dec
popa
jo
push
outsl
adc
pop
loopne
pop
out
add
adc
and
pop
das
jl
inc
or
jo
out
xlat
add
push
imul
iret
add
test
xchg
cmp
xchg
add
add
pop
push
or
outsb
push
mov
add
jle
jne
je
add
jae
lods
leave
cwtl
add
jbe
xor
inc
cmp
xor
push
push
lahf
sub
xor
mov
jle
cmp
add
into
mov
mov
mov
scas
add
movsb
add
dec
dec
dec
fildll
dec
dec
push
pop
pop
jo
shl
mov
xor
lods
sti
iret
jo
pminsw
scas
push
fs
addr16
inc
sbb
inc
pop
daa
testb
dec
mov
pop
notl
fs
mov
popa
jb
push
xchg
cmp
inc
jnp
lahf
das
dec
inc
ret
sbb
daa
mull
mov
ja
dec
movsb
test
iret
js
jge
pop
jno
cmc
push
xchg
xor
mov
cwtl
outsb
enter
jns
mov
pop
rcrb
jo
add
or
lock
cmp
cld
mov
add
dec
and
rorl
out
pop
jns
add
fs
or
dec
push
inc
cmp
or
inc
adc
gs
rclb
sub
outsl
adc
or
addr16
dec
jne
and
out
orb
incl
sub
sahf
jnp
int3
jle
bound
push
inc
push
into
pushf
jae
mov
popl
outsb
jns
jg
addr16
fcmove
fcompl
jne
xor
and
mov
push
adc
sbb
cmp
jle
and
jbe
into
outsl
pop
dec
inc
aas
pop
cmpsl
popf
xchg
sub
mov
ficoml
fistl
fmull
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
mov
inc
inc
push
inc
inc
popf
inc
or
cs
push
push
pusha
pop
pusha
das
addr16
xor
push
jb
je
fnstenv
jle
push
push
sbb
mov
mov
jbe
dec
inc
and
xchg
fstpt
xor
cmp
sub
jo
lds
push
and
dec
imul
ljmp
stos
outsb
push
and
popa
push
inc
data16
push
ja
jno
adc
in
out
add
outsl
xor
fsubs
xorb
nop
out
mov
imul
push
mov
mov
das
or
into
mov
mov
mov
outsl
jo
mov
sbb
imul
push
inc
lock
xor
inc
aaa
insl
es
mov
arpl
sbb
and
imul
pop
add
inc
jb
mov
test
std
mov
sbb
pop
xor
lahf
loope
orl
or
into
pop
pop
push
cmp
jne
jae
push
xor
or
fdivr
add
jo
cmp
and
push
xor
adc
mov
inc
sub
and
in
mov
pop
sub
inc
sbb
cmp
pusha
shll
mulb
cwtl
imul
outsb
lea
lods
jl
jle
push
inc
incl
jae
sub
or
mov
mov
ret
or
fldt
sub
add
aas
jg
xor
fimull
leave
ds
out
jg
rolb
push
mov
into
jae
jns
xor
mov
outsl
fs
push
xor
mov
fs
cmp
aas
sub
shll
bound
bswap
add
mov
lcall
jb
sub
fidivrs
inc
cmovs
jnp
xorb
sub
mov
fldcw
mov
xor
add
test
fmuls
add
xlat
jo
adc
pop
dec
sbb
sbb
pop
mov
dec
mov
dec
adc
adc
and
jnp
daa
pop
and
push
das
xchg
leave
scas
lcall
repz
push
push
pop
clc
cld
or
add
push
push
pop
add
into
inc
add
mov
cmp
add
in
push
or
iret
ficoms
push
and
add
pusha
push
ss
jo
add
inc
xchg
cmp
ja
add
sbb
aas
lods
addr16
sub
outsb
shrl
push
subb
inc
ja
sub
cwtl
dec
mov
loopne
mov
dec
jg
push
addl
addb
cmp
or
cmp
outsb
jl
adc
xor
push
inc
adc
pop
insb
jp
inc
add
mov
inc
mov
push
pop
dec
mov
xor
cs
notb
mov
jo
pop
les
test
or
clc
inc
test
test
call
xlat
in
push
pop
fs
pop
push
xor
push
dec
inc
xor
data16
dec
inc
add
out
push
das
andb
jg
dec
sbb
scas
sub
adc
scas
mov
pop
or
mov
pop
daa
movsb
pop
jb
sbb
mov
mov
add
add
add
repz
push
dec
xor
outsb
mov
sbb
nop
das
xchg
sub
call
sub
andb
mov
adc
mov
inc
subb
push
daa
sub
das
js
testl
sahf
nop
xchg
into
add
mov
lock
adc
add
xorl
add
inc
daa
js
and
cmpsl
add
outsb
xchg
push
jb
rolb
add
xchg
insl
leave
and
stc
pop
mov
loopne
jo
test
sub
cwtl
daa
pop
and
in
clc
lahf
rcr
fstpt
mov
leave
and
test
and
test
dec
test
sub
jo
sub
adc
or
add
pop
mov
shlb
mov
insl
leave
test
xchg
sbb
mov
jne
cltd
pop
xchg
jo
fdivs
clc
das
adc
bswap
mov
cwtl
xchg
sub
xchg
clc
daa
dec
push
test
ja
xchg
rcr
aaa
xor
sub
cmp
mov
outsb
pop
xchg
pop
mov
add
das
xchg
andb
xchg
enter
scas
xchg
lock
insb
pop
and
cwtl
xor
orl
stos
pop
in
mov
or
outsb
mov
lahf
xchg
cmpsb
xchg
pop
rorb
mov
mov
sub
xchg
pop
daa
stos
orb
mov
cwtl
xchg
mov
sbb
mov
cs
jbe
or
mov
xchg
nop
adc
pop
mov
orb
lahf
xchg
jb
shr
and
clc
daa
mov
add
or
push
cs
xor
push
out
push
mov
outsb
mov
cmpsl
jo
enter
and
cwtl
mov
jne
rcrb
sub
mov
daa
fmuls
mov
cmp
xchg
xor
sbb
cmp
inc
add
mov
mov
adc
subb
cltd
pusha
mov
add
adc
sub
and
das
sahf
push
mov
jmp
jb
nop
xchg
jo
jg
mov
sbb
outsb
enter
repnz
fists
mov
cmp
fldt
mov
in
mov
cmp
mov
mov
aaa
shlb
pop
enter
lahf
mov
mov
dec
popl
add
filds
pop
jl
xchg
mov
lods
movl
daa
sub
sub
mov
fistl
dec
and
nop
lock
mov
mov
mov
lods
mov
dec
fcoms
test
add
in
mov
fistl
xchg
js
nop
pop
add
js
nop
xor
mov
daa
cwtl
mov
add
scas
adc
sbb
outsl
mov
nop
xchg
cmp
or
fdivrs
sub
cmpsl
test
insb
push
shl
jmp
sub
call
es
sbb
and
daa
sarb
das
push
add
ja
daa
push
inc
testb
push
push
adc
in
sbb
shlb
test
loopne
je
sbb
push
add
pop
nop
and
imul
and
cltd
addb
xchg
pushf
sbb
clc
inc
or
pop
dec
adc
in
out
fildl
enter
dec
push
and
push
enter
mov
and
jg
fcoms
push
xchg
dec
and
push
scas
pusha
adc
dec
add
cmp
jmp
pusha
push
sbb
nop
dec
jb
loopne
xchg
sahf
out
jbe
shufps
dec
dec
dec
in
testl
rorl
pop
or
push
fcoml
cmpsl
jg
xchg
pop
pop
dec
fistl
pusha
scas
cmp
orb
xchg
push
add
fisttpll
das
mov
imul
xor
scas
nop
pop
adc
test
push
xor
jae
fisttps
out
fiaddl
punpckhbw
jo
lock
mov
nop
dec
sbb
mov
inc
ror
repz
cs
fsub
push
add
sub
stc
aas
add
out
nop
and
dec
mov
enter
lcall
xchg
sub
xchg
mov
sub
and
add
sub
push
dec
rcrb
adc
enter
cmp
add
fwait
jns
daa
push
pusha
imul
pop
out
or
mov
pop
push
pop
jbe
jb
pop
test
mov
sarb
scas
loopne
aas
mov
bound
cmpsl
pop
sub
xor
pop
dec
adc
add
fnsetpm(287
pop
pop
lcall
bound
pop
js
dec
xorl
jg
jo
adc
mov
rcr
cmpsl
out
or
fsubrl
xor
sbb
or
push
add
iret
repz
xor
add
add
repz
pop
push
js
cmp
repz
repz
mov
cmp
repz
int3
pminub
stc
cmp
repz
pop
out
sahf
cmpsl
adc
adc
adc
cs
cmp
dec
sbb
out
pop
sbb
je
jns
out
sbbb
bnd
lods
pop
ds
dec
pop
sahf
dec
sub
mov
mov
pop
dec
and
and
or
rclb
ss
mov
jb
pop
push
pop
pusha
pop
outsb
pop
enter
jl
mov
pop
sbb
jb
cmpsb
pop
mov
ret
pop
xchg
and
ficomps
pop
cli
pop
out
fmulp
or
adc
sahf
out
sahf
xor
adc
out
pop
pop
push
js
jns
out
xchg
xchg
sbb
sbb
sbb
out
int3
pop
fisubl
call
add
lock
adc
sub
fidivrl
cmpsl
push
push
pop
jo
fcomps
inc
ret
add
vmread
fildl
into
faddl
add
fcomp
inc
mov
inc
jmp
dec
pusha
xchg
fisttpl
pop
fisttps
iret
jbe
adc
and
cmp
daa
pop
and
outsb
psubsb
mov
pop
xchg
pop
and
dec
mov
fdivrs
xchg
pop
and
or
sub
or
mov
shlb
add
sahf
flds
or
pop
pop
or
iret
cmp
add
ja
daa
dec
das
pop
out
das
test
les
mov
outsl
dec
or
jb
mov
shlb
test
add
shlb
xor
add
jbe
pop
and
adc
jmp
testl
pop
in
pusha
dec
add
mov
mull
es
push
mov
jae
je
sbb
repz
mov
mov
out
dec
jo
jnp
xchg
push
aas
pushf
cmpsl
fildll
mov
lock
sbbl
dec
fwait
inc
push
cmp
jae
test
add
push
push
popa
das
pop
popa
arpl
mov
sbb
popa
jl
xchg
pop
ja
cwtl
mov
inc
dec
mov
mov
scas
nop
out
xor
dec
fs
xchg
sti
push
bound
adc
jo
push
mov
xor
dec
mov
jo
pop
mov
scas
push
daa
cmp
add
loope
aas
jno
add
clc
setae
fisubrs
scas
js
xchg
bound
nop
out
dec
push
push
call
arpl
adc
lahf
or
xor
arpl
push
mov
add
dec
jne
push
out
iret
repz
or
xchg
test
or
in
xor
rorb
fmul
inc
arpl
pop
test
aaa
mov
add
dec
dec
dec
dec
push
sub
push
insb
cmp
pop
dec
fs
mov
daa
push
test
test
dec
outsl
cwtl
inc
insb
push
cmp
dec
or
enter
mov
xchg
pop
loopne
test
fs
push
add
and
gs
adc
cmp
sub
cs
mov
pop
xor
gs
int
cmp
add
das
jbe
mov
mov
sets
mov
sub
sub
fsubs
psubsb
sub
jae
and
adc
or
pop
and
mov
inc
add
enter
cmp
data16
stos
test
lods
mov
rcrb
movaps
mov
dec
lods
pusha
shlb
js
sub
in
loopne
nop
mov
fildll
add
lods
sub
test
addr16
lods
out
or
pop
loop
add
jo
mov
dec
cwtl
inc
dec
mov
xor
shrb
jb
lock
test
dec
push
jecxz
and
cmpsb
jp
addr16
xchg
das
pop
outsl
add
mov
sub
outsl
loopne
lcall
decl
push
pop
and
sub
dec
fwait
sbb
push
push
cmp
lcall
inc
scas
pop
jo
js
cs
enter
inc
shl
mov
xor
lock
sbb
jb
adc
imul
iret
subb
dec
dec
mov
mov
jno
inc
ror
iret
xor
mov
scas
in
dec
in
cvtdq2ps
imul
in
jl
xchg
imul
imul
imul
imul
push
push
and
in
in
push
push
push
push
popf
loopne
pop
push
push
imul
out
fidivs
sbb
sahf
out
xchg
push
mov
sahf
out
mov
out
sahf
into
and
and
and
out
es
daa
add
shrl
adc
sbb
iret
repz
sub
sub
sub
inc
cs
das
pop
jmp
push
adc
mov
sub
das
imul
mov
mov
jb
imul
fldt
imul
insb
adc
or
cmp
repz
das
or
iret
repz
or
addr16
repz
jne
adcl
cmp
repz
adc
cmp
adc
into
push
enter
insb
push
mov
xchg
insb
sti
insb
push
insl
adc
dec
sbb
insl
lcall
inc
dec
add
push
sub
insl
outsl
fisttps
dec
scas
cwtl
outsl
mov
pop
enter
nop
rorb
push
enter
loopne
leave
adc
xchg
outsb
or
jb
push
pop
adc
or
jb
nop
test
iret
leave
adc
clc
out
pop
and
pop
and
out
repz
into
jno
filds
outsl
adc
add
repz
sbb
daa
push
xor
cmp
repz
or
push
repz
repz
imul
or
outsb
mov
cmp
icebp
mov
loopne
mov
int3
iret
xlat
out
loop
or
mov
dec
add
add
jo
jo
add
add
decl
fisubrl
and
or
into
jg
xorb
lds
dec
mov
pop
and
add
ror
mov
fcomp
loopne
in
in
jg
clc
pop
or
jo
cmpsl
nop
mov
sahf
xchg
fwait
adc
movntps
add
jbe
jns
dec
das
push
punpckldq
or
push
rcr
orb
cwtl
aaa
mov
pop
jg
fistl
call
in
fcomps
mov
xchg
clc
dec
adc
or
xor
jb
pop
pop
inc
loope
push
pop
jb
pop
scas
fsubs
lock
nop
enter
cwtl
jb
mov
dec
dec
rorb
scas
fcoms
jbe
pop
xchg
clc
adc
pop
stos
jno
jae
xor
fchs
dec
aas
cmp
adc
dec
mov
scas
cmp
jae
xchg
jae
push
mov
ror
out
jg
aas
mov
dec
mov
movaps
and
fdivrs
je
mov
mov
and
xor
call
push
in
xlat
cwtl
cmp
loopne,pn
xchg
push
jb
aad
jmp
daa
push
or
pop
pop
bsf
pop
nop
out
pop
or
mov
das
dec
and
orb
and
jns
xchg
pop
outsl
xor
push
in
pop
rorb
add
push
fbld
test
sti
test
or
ret
jo
dec
mov
pushf
dec
leave
xchg
mov
xchg
push
jnp
cmp
adc
inc
fimuls
adc
js
dec
xor
jne
test
adc
stos
fbld
iret
mov
xchg
mov
and
jne
dec
push
mov
mov
pusha
pop
dec
adc
imul
aas
enter
fcompl
aaa
mov
inc
jne
pusha
dec
scas
nop
dec
lock
push
enter
inc
test
push
rolb
inc
scas
fnsave
jmp
cwtl
pop
and
and
enter
jbe
inc
xchg
sub
and
push
enter
dec
orb
js
xchg
pop
xorl
mov
mov
add
sub
repz
lock
es
or
sbb
iret
push
enter
dec
push
scas
pop
sub
cmp
orb
test
mov
shlb
jae
xor
loopne
ret
pop
js
imul
mov
scas
xor
push
into
xor
or
sbb
jg
push
xor
sbbb
das
xchg
fisttpl
pop
mov
mov
fwait
outsl
pop
or
dec
dec
sbb
mov
and
js
push
leave
lret
jo
mov
loopne
add
and
mov
mov
add
les
lds
add
add
jns
shlb
xchg
lds
pinsrw
and
mov
mov
rorl
pop
sbb
das
lret
lret
fistpll
jns
xor
jns
lret
lret
lret
dec
jns
jns
jns
jns
lret
lret
lret
xchg
jns
jns
jns
lret
lret
lret
mov
jns
jns
enter
jns
jp
jp
adc
cmp
repz
adc
adc
iret
push
pop
pop
push
addr16
or
jp
in
pop
add
pop
mov
stos
mov
outsl
sub
ficoml
push
mov
das
nop
imul
outsl
inc
inc
dec
ja
inc
cmovnp
fistl
jnp
jo
mov
jnp
pop
nop
dec
push
test
loopne
mov
aaa
call
fsubrs
jecxz
out
das
stc
popl
and
push
or
jl
sbb
push
enter
andb
enter
jl
enter
pop
jo
clc
add
daa
push
nop
cwtl
push
sbb
leave
jl
out
cmc
push
psrlw
sahf
add
test
nop
out
leave
fisttps
push
add
xchg
and
pushf
pushf
pop
and
jae
popf
pushf
pushf
jle
lcall
js
jge
lret
inc
scas
lods
dec
push
lock
mov
jle
and
adc
push
lock
jmp
orb
nop
das
cwtl
jle
mov
lret
fistpll
pop
mov
dec
jo
shrb
inc
in
in
enter
test
jg
jg
xchg
pushf
pop
and
dec
dec
cmpsb
nop
int3
push
nop
pop
xchg
stos
rorl
adc
mov
sub
cs
add
sbb
push
mov
push
add
sahf
out
test
push
dec
dec
mov
adc
les
pop
mov
dec
iret
rorb
shrb
iret
fcompl
lock
repnz
dec
sbb
or
inc
sbb
or
in
mov
mov
insb
or
test
xorb
test
pop
test
jb
pop
cmpb
shlb
pop
jb
clc
clc
mov
dec
mov
mov
and
aas
push
test
nop
dec
pop
or
pop
pop
imul
push
das
cmp
enter
sub
add
mov
scas
and
in
lahf
mov
shrl
js
in
fcompl
popa
rolb
je
push
call
loopne
lods
test
mov
inc
dec
sub
je
ror
mov
rolb
stc
dec
les
pusha
mov
cmp
jae
aas
outsl
dec
adc
cmp
enter
roll
adc
out
pop
pop
jo
mov
stc
das
loopne
xor
add
cwtl
in
outsl
dec
repnz
dec
add
test
dec
sub
xchg
sub
cmp
pusha
push
in
sub
mov
aad
sub
decl
lods
cmp
pop
xchg
setl
pop
mov
add
lahf
dec
test
sub
cmp
cmp
outsb
push
sub
fdivr
loopne
dec
scas
nop
nop
clc
mov
or
loopne
and
addb
scas
nop
imul
cmp
scas
xlat
jmp
pop
jo
push
push
xchg
cmp
das
mov
jl
je
dec
scas
nop
imul
or
pop
pop
sbb
dec
in
sub
inc
loopne
adc
dec
nop
dec
nop
imul
scas
rcrb
xor
call
xchg
adc
pop
nop
dec
scas
nop
cmp
xor
dec
scas
mov
dec
jl
pop
pop
mov
push
test
cwtl
fsubs
add
sub
pop
ds
leave
adc
mov
ror
outsl
in
mov
clc
mov
test
inc
enter
fldcw
mov
decl
fisubrl
jb
je
xor
test
push
xorb
jb
test
pop
jb
pop
rclb
test
enter
test
test
adc
mov
fistl
leave
adc
aam
add
leave
fucom
ljmp
or
adc
fmull
pop
sub
lds
xchg
pop
inc
scas
in
in
mov
adc
daa
jp
fsubr
mov
popf
xchg
fsubl
jb
inc
je
adc
inc
inc
fstpl
daa
sbb
movsl
add
mov
mov
add
add
pop
movswl
adc
fidivrl
fmul
adc
loopne
daa
pop
and
push
test
enter
cmpsl
daa
sbb
mov
dec
ss
repz
sub
out
lock
dec
lcall
xchg
cmp
fidivrl
jbe
add
test
sbb
pop
jnp
shlb
lods
dec
lcall
lahf
adc
sbb
pop
jnp
ja
es
ja
es
xchg
jbe
ja
add
push
sbb
sub
insl
add
imul
sub
divl
lret
or
push
adc
sub
jne
inc
les
xchg
mov
add
rclb
insb
and
push
addb
insl
loope
jne
add
pop
add
test
mov
pushf
jb
ss
fnstsw
sbb
add
test
xchg
addr16
nop
add
jmp
pusha
mov
loopne
stc
out
orb
xor
insb
push
outsb
jge
insl
dec
jle
mov
add
clc
mov
xchg
push
inc
mov
or
xor
add
add
add
mov
sbb
jbe
in
mov
data16
mov
jne
jo
pop
jbe
inc
js
mov
fiaddl
ss
or
fchs
loopne
jne
inc
movsb
gs
add
mov
bound
std
test
dec
out
out
popa
cwtl
aas
inc
ret
mov
mov
mov
sbb
dec
aaa
popf
xor
cmp
xchg
stos
xor
add
lock
pop
rcrl
adcl
rol
dec
adc
mov
lea
inc
push
jp
push
orb
mov
orb
aad
imul
mov
dec
bound
or
aad
imul
adc
insl
pop
mov
test
xchg
gs
xor
test
jmp
lret
push
test
sbb
and
sub
fiaddl
add
sbb
or
rcrl
jbe
adc
sbb
add
or
add
mov
sbb
or
jmp
jae
movl
inc
int3
jnp
adc
jae
add
sbb
sub
cmp
or
adc
lock
mov
inc
mov
add
imul
or
insl
jo
jns
inc
add
sub
dec
add
add
outsl
push
mov
cmpb
mov
mov
roll
xchg
out
outsb
or
add
sbb
fs
add
aaa
aaa
in
outsl
jo
xor
ret
sbb
imull
jo
aam
jmp
xchg
jbe
fs
adc
sahf
and
js
add
mov
lahf
insl
sbb
or
inc
cmp
or
or
cmp
inc
lea
lret
test
adc
xlat
lcall
test
ds
lds
inc
and
mov
lret
sbb
sub
cmpsl
sbb
adc
dec
andb
mov
dec
in
cmp
push
and
add
fs
inc
inc
shl
ja
mov
cmpsl
lods
ret
pop
xchg
pop
xchg
add
jb
data16
lods
xor
xor
ds
adc
popf
jns
jl
enter
xor
inc
sbb
or
xor
icebp
inc
das
push
arpl
pop
push
adc
sbb
out
mov
cmpsb
xchg
in
sbb
mov
pop
add
and
ret
push
mov
popf
xchg
add
xchg
add
pop
jo
fisubl
sbb
je
xchg
les
cmp
mov
sbb
scas
or
outsb
movsb
adc
adc
push
sub
push
xor
pop
cltd
pop
add
cmpsl
arpl
mov
dec
out
ret
pusha
loopne
or
add
mov
mov
and
push
push
rorl
fdivr
out
xchg
dec
sti
sbb
mov
adc
mov
lds
lods
mov
cmp
je
cmp
mov
lds
sub
adc
jne
and
add
adc
rolb
gs
push
or
add
or
jg,pt
mov
pushf
cld
inc
sbb
jne
jns
mov
dec
push
add
insl
int
outsb
jae
cmp
nop
dec
mov
test
push
push
or
inc
xchg
mov
xor
pop
imul
ss
or
insb
mov
sbb
add
stos
lret
adc
pop
push
aas
pop
push
cmp
sbbb
addr16
push
loope
dec
popf
lock
incl
pop
fwait
test
out
xor
push
out
out
test
and
inc
jns
cmpsl
fbld
fs
push
push
push
xor
mov
addb
mov
adc
call
ret
pop
das
and
sbb
or
add
imul
add
int
push
lods
xor
mov
add
push
add
cs
jo
and
jns
loopne
dec
push
sub
pop
jno
xor
inc
and
push
ljmp
pusha
adcb
hlt
mov
insb
xchg
incl
jb
mov
push
test
pop
inc
sub
ja
pop
pop
sub
pop
in
popa
pop
ds
aaa
ja
dec
adc
pop
divl
or
and
push
outsl
inc
push
xorb
push
xchg
test
bound
inc
jnp
out
add
xchg
add
fcoml
es
inc
ret
in
movl
fsubp
or
sbb
fbld
or
sub
daa
or
dec
pop
pop
inc
xor
sbb
jl
xchg
daa
pop
pop
clc
or
mov
push
jl
add
sbb
mov
cmpsl
add
jb
scas
jns
mov
push
push
movsb
mov
cmp
frstor
jnp
inc
sbb
xorps
movsl
adcl
mov
loope
inc
push
sub
cs
and
adc
loopne
ja
pop
and
dec
loopne
add
inc
lods
push
jne
fadds
and
fsubs
arpl
and
ds
shll
ss
jnp
cmp
jno
out
lret
sbb
adc
push
adc
add
adc
das
inc
or
cmp
icebp
je
imul
mov
dec
daa
inc
jbe
scas
fistps
dec
jne
sbb
inc
fstl
and
ret
sbb
cmp
arpl
movsb
push
mov
daa
jo
cmp
bound
jb
mov
xor
dec
pop
sub
test
ficompl
cmpl
ja
xor
sbb
inc
js
dec
xor
cmp
jns
mov
ss
rcr
lea
mov
cltd
shlb
dec
dec
dec
dec
mov
sbb
lret
imul
cmp
rolb
cld
jl
in
mov
jg
push
dec
dec
dec
cs
push
push
sbb
adc
or
jb
or
mov
xchg
cwtl
dec
mov
and
cmp
and
push
inc
push
push
pop
sub
addb
cwtl
cmp
cmp
pop
pop
clc
or
outsl
push
dec
inc
dec
push
js
fisttpll
xchg
inc
and
fidivs
add
sarb
jmp
add
and
outsl
sbb
cmp
add
push
mull
add
les
pop
xchg
fsubrs
testl
mov
fsubs
jge
call
add
jae
lods
mov
insl
mov
loope
inc
dec
push
lret
scas
or
in
and
pop
int3
mov
xchg
jo
insb
mov
inc
pop
pop
popa
lret
rorb
es
add
ret
jbe
inc
jne
or
sbbb
add
not
jno
sub
outsl
lock
xorl
inc
jne
data16
cltd
fisubrl
fsts
lcall
popa
stc
rcr
aas
mov
add
insl
jo
mov
addr16
fwait
adc
jo
daa
pop
sub
fmul
and
outsl
fs
xchg
xchg
and
pop
and
push
test
jae
pop
into
cld
cmp
ret
or
enter
jbe
pop
mov
push
xor
mov
sub
adc
mov
pop
add
add
movsb
cmp
adc
lcall
stc
idivl
push
sub
movb
and
inc
aas
sub
cmp
aaa
add
mov
xor
inc
dec
sbb
pop
push
je
push
sub
ja
add
push
popa
pop
sbb
push
or
mov
lret
sbb
xor
addl
xor
inc
sbb
addl
js
mov
adc
push
jge
push
shl
sbb
pop
jns
adc
pusha
clc
add
cmp
inc
out
movsb
dec
xor
adc
mov
jae
bound
fsubs
or
jb
or
xor
popf
scas
lret
fstpt
ret
sbb
std
dec
or
bound
aad
xchg
xchg
movsl
in
rcrb
ficoms
idiv
mov
loope
sbb
daa
push
sub
rclb
leave
dec
andl
mov
movsl
mov
pop
xchg
push
and
adc
addb
xor
add
push
mov
out
jnp
inc
in
pop
jl
jae
inc
add
add
lock
daa
movsb
and
gs
je
cs
add
sbb
dec
push
pop
or
mov
or
jle
outsl
scas
adc
cmp
pushf
mov
jb,pt
add
outsb
imul
mov
jns
hlt
inc
sbb
out
daa
mov
in
dec
dec
in
addb
cmp
out
add
popl
xchg
cli
popf
pop
pop
sub
push
and
dec
in
add
pop
xor
ljmp
je
sti
sub
xorb
scas
insl
into
mov
inc
add
push
imul
pushl
xchg
les
jae
adc
je
call
jmp
int
cmp
rcrl
pop
mov
pop
and
sub
push
pusha
inc
pop
jmp
out
pop
sub
loopne
aas
dec
dec
or
cmpsl
add
inc
insl
nop
dec
cmp
add
and
sbb
dec
popf
mov
add
sub
jno
call
jbe
sub
pushf
or
and
xchg
imul
sbb
lea
mov
pop
push
push
jns
loopne
sbb
cli
pop
aaa
jno
shr
lcall
mov
je
mov
xchg
xchg
stos
movl
dec
and
push
dec
dec
add
arpl
add
inc
mov
in
and
repz
loop
inc
cmpsl
mov
imulb
jbe
mov
mov
mov
or
push
gs
push
ljmp
dec
cmp
and
daa
or
outsb
sbb
pop
jb
pop
fsubr
cwtl
add
jne
and
mov
push
jecxz
addr16
dec
popf
je
insl
or
mov
movsl
cmp
outsl
sbb
mov
adc
and
add
out
ss
cmp
xchg
or
rolb
or
push
insl
insl
or
daa
add
mov
sbb
cmpsl
cmp
mov
jg
or
xchg
mov
adc
lcall
mov
movsb
xor
scas
into
inc
js
mov
js
inc
add
inc
add
nop
inc
add
mov
out
dec
push
int3
inc
ss
int
xor
mov
inc
sub
push
mov
mov
fisubrl
dec
dec
lret
loopne
insb
cmp
mov
push
nop
in
lock
and
fisubrs
adc
repz
in
xor
mov
sub
out
mov
cmc
xor
mov
cmp
dec
pop
or
push
inc
dec
insb
mulb
ret
jecxz
jge
fstl
adc
aaa
and
push
xorl
or
je
leave
sbb
cmp
shrl
jmp
sahf
sbbb
dec
xor
add
jg
jmp
aam
dec
je
jecxz
scas
mov
cmpsl
int
ud0
pop
fcom
ficompl
rol
jecxz
mov
lret
into
in
stc
fbstp
lret
mov
mov
stos
pcmpgtd
pushl
mov
into
jmp
mov
mov
pop
xlat
push
mov
mov
mov
add
loopne
int
mov
into
sbb
mov
xchg
inc
pop
push
cmpsl
es
fs
ljmp
enter
lret
mov
leave
mov
ret
jmp
pop
js
test
xlat
lahf
cs
inc
push
push
xor
inc
add
push
inc
inc
push
aaa
mov
pop
jae
leave
iret
pusha
das
mov
push
mov
outsb
add
into
les
out
sub
cs
push
or
ja
sub
jl
incl
mov
xlat
mov
mov
mov
aam
movsl
xor
sbbb
cmp
pushf
jl
dec
or
sahf
cmpsl
stc
in
test
inc
je
in
dec
mov
daa
in
jmp
aad
inc
repz
cmpb
pop
dec
notb
jb
sub
daa
cmc
sub
push
jmp
jmp
jmp
sbb
aas
dec
lea
add
es
dec
ja
daa
push
nop
andb
push
or
cli
cld
add
loopne
popl
adc
inc
dec
jmp
xchg
sbb
pop
or
mov
pop
adc
push
push
andl
iret
jg
lds
in
daa
testl
push
mov
inc
cmpsl
icebp
add
cwtl
push
out
and
and
add
inc
inc
dec
inc
add
or
stc
decl
and
push
xor
add
dec
inc
adc
les
add
mov
jo
pusha
adc
mov
inc
add
add
orb
sbb
xlat
add
xchg
sbb
dec
xchg
call
mov
stos
add
add
or
inc
pop
add
mov
jmp
jmp
cmpsl
stos
jne
jne
pop
in
dec
pop
rolb
pop
add
scas
push
dec
sbb
iret
or
add
in
add
daa
adc
jmp
mov
aas
mov
add
pusha
pop
mov
inc
jb
mov
or
pusha
adc
add
pop
adc
push
andb
daa
add
push
sbb
ja
mov
jo
pusha
dec
out
add
jg
pop
add
daa
testl
push
add
add
sub
push
cmpsb
pop
inc
dec
pop
mov
jg
and
pop
mov
jmp
iret
add
daa
fiadds
add
sahf
add
add
mov
and
add
ja
sub
mov
mov
jmp
test
mov
xor
out
and
add
dec
lods
test
xchg
jo
je
cwtl
jno
and
or
jmp
roll
daa
push
add
pop
push
push
adc
adc
mov
xlat
add
ja
enter
dec
or
faddl
and
add
add
sahf
popa
idivl
btc
out
imul
jnp
iret
mov
andnps
or
mov
jns
inc
push
adc
pop
test
xchg
imul
fldt
mov
mov
jns
out
mov
xlat
scas
cmpsb
xor
pcmpgtd
push
jb
add
add
dec
jle
or
jecxz
sbb
neg
clc
xor
and
add
push
repnz
mov
rsm
add
pop
fdivs
add
pusha
in
ret
cmp
mov
pop
mov
pop
lock
clts
jg
test
sti
sbb
adcl
push
xchg
test
jnp
iret
mov
or
mov
lcall
out
idivl
mov
mov
loopne
xor
or
pop
mov
mov
add
add
fdivrp
xchg
mov
push
and
out
mov
pop
repz
push
ljmp
call
data16
negb
push
flds
roll
add
adc
add
mov
int3
sbb
fmull
mov
fidivrl
frstor
jecxz
test
loope
orb
orl
sbb
mov
scas
mov
add
push
or
mov
push
add
adc
orb
scas
je
and
testb
aad
adc
add
or
or
or
cmp
cmp
add
jne
jae
adc
repz
mov
iret
adc
ss
cs
cli
testb
mov
mov
daa
in
add
mov
inc
add
xor
add
out
nop
add
test
pop
in
mov
push
push
mov
mov
ja
sub
jo
out
sbb
add
add
pop
push
ret
dec
loope
bound
jo
cmovno
add
mov
cmpsl
addr16
xor
outsb
jp
test
jg
stc
int3
loope
test
jmp
mov
shrb
ja
push
mov
fdivs
adc
cld
rcrl
mov
lods
sub
out
repz
shl
repnz
xor
mov
lcall
and
xchg
mov
addr16
outsb
jnp
mov
test
jle
hlt
push
sbb
dec
mov
mov
mov
or
fmull
pusha
pop
inc
setnp
dec
xlat
rcr
out
not
out
mov
mov
mov
fists
jle
push
fsubrs
stc
mov
loopne
rorb
orl
test
and
xchg
out
adc
cltd
mov
mov
aad
mov
into
repz
sti
or
pop
xor
movsl
and
leave
aam
mov
ret
pop
pusha
or
jmp
ds
inc
push
jmp
clc
mulb
std
jbe
stos
xor
shlb
cmp
mov
cmpsb
add
shlb
or
into
inc
outsb
jp
ret
shr
mov
push
data16
sub
ret
or
inc
pop
xor
inc
dec
push
mov
xor
cs
push
inc
ja
push
xor
int
divl
notb
xor
and
sbb
arpl
xor
lea
call
cmp
movaps
cmp
push
les
dec
inc
pop
dec
pop
lret
insl
lock
les
aam
sbb
and
lods
or
hlt
arpl
xor
daa
mov
call
and
shll
mov
mov
inc
decl
add
test
mov
addr16
cmpsb
mov
mov
cli
or
mov
dec
mov
leave
rcrb
imul
hlt
mov
inc
cmp
into
mov
iret
mov
shrb
pop
into
shrb
jae
or
repnz
mull
pop
push
mov
incb
fsubs
xlat
mov
ss
rcr
and
addr16
pushw
push
xor
daa
sbb
push
mov
daa
aam
rcl
rclb
or
add
cmp
mov
push
add
daa
push
and
pop
lcall
push
pop
dec
inc
dec
dec
add
dec
rcrl
sti
add
shll
sub
mov
adc
mov
hlt
sub
js
fmulp
int3
in
aas
or
cmp
ss
dec
das
notb
mov
repz
lods
das
fcmovbe
stos
mov
and
cmpl
sub
negb
dec
push
sarb
ja
jns
adc
pop
ds
bswap
push
pop
dec
push
daa
add
jns
cmpsl
push
add
add
sahf
mov
push
mov
pop
cs
push
xor
adc
mov
xchg
and
pop
aad
push
mov
dec
ja
add
sahf
ja
push
add
sahf
add
lods
jns
out
or
jns
out
or
sahf
or
mov
out
adc
jns
out
adc
sahf
out
sahf
adc
insb
jns
out
sbb
fs
jns
out
sbb
sahf
out
sahf
sbb
dec
jns
out
and
inc
and
jns
out
and
xor
out
sahf
and
and
out
sub
sbb
out
sahf
out
sub
sub
sahf
out
sahf
sub
add
repz
cld
xchg
xor
xor
cmp
repz
xor
xor
iret
repz
xor
loopne
aas
daa
fsubl
fs
imul
jno
mov
dec
and
ja
jns
adc
pop
or
add
or
push
add
add
adc
mov
in
imul
gs
outsl
push
fstps
and
jmp
pop
sbb
sbb
sub
and
sub
xor
sub
sub
and
decl
push
bound
jp
outsl
sbb
sbb
sbb
push
pop
and
and
and
inc
lcall
sub
add
mov
and
orb
add
sbb
dec
scas
mov
push
sbb
sbb
and
cmp
add
or
or
or
mov
pop
sbb
jns
sbb
or
sub
mov
push
push
sub
sub
in
cmp
daa
and
fiaddl
jo
or
jge
jl
add
adc
sbb
andb
cwtl
push
add
adc
sbb
mov
push
and
and
andb
ret
adc
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
mov
fidivrs
sbb
adc
add
pop
leave
pop
sbb
inc
sbb
and
mov
stc
mov
pop
add
and
insb
fisubl
pop
sub
sbb
mov
aaa
add
add
pop
imul
and
push
and
sub
xor
pop
jb
add
sbb
in
cs
sub
xor
subb
add
lret
sub
sbbl
add
rcrl
xor
add
mov
orb
xorb
sub
cmp
and
pop
sub
xor
cmp
add
push
daa
add
add
ds
or
aaa
cmpb
adc
imul
add
adc
cmp
add
sub
cmpb
mov
and
add
sbb
inc
pop
jb
sub
add
and
ss
sbb
adc
pop
enter
and
nop
pop
pop
sbb
mov
mov
pop
aaa
inc
aaa
add
mov
dec
dec
add
add
mov
dec
orb
add
add
xchg
sbb
orb
imul
orb
dec
subb
pop
repnz
enter
aaa
push
enter
sbbb
add
sub
push
or
add
sub
push
xor
xor
push
and
sbb
scas
or
push
sbb
mov
push
push
pop
pop
daa
add
push
mov
pop
add
sub
in
insl
pop
dec
sbb
repz
xor
xor
pop
adc
in
mov
sub
pusha
sub
popa
push
add
test
insl
pop
xor
bound
fs
xor
add
ss
sbb
sbb
pop
inc
xor
push
push
sbb
add
orb
add
outsb
ss
sub
cmp
adcb
xorb
je
pusha
xchg
mov
add
jbe
sbb
js
jns
add
push
mov
add
das
add
mov
push
enter
sbbb
dec
push
ss
xor
lcall
add
sbbb
xlat
cld
testb
orb
xchg
scas
push
sbb
pusha
pop
nop
and
pop
add
outsb
in
sbb
aaa
in
cmp
xor
sub
mov
xlat
add
and
in
mov
sbb
lea
sbb
sbb
inc
push
sbb
addb
nop
adcb
and
xchg
and
scas
nop
scas
dec
xor
sub
testb
inc
sub
sbbb
add
daa
lods
dec
leave
inc
cs
mov
add
and
xchg
sbbb
pop
cltd
sbb
sub
sbb
lcall
loopne
fwait
orb
and
in
add
popf
cmp
add
lahf
sbb
mov
int
test
add
inc
mov
sbb
sbb
movsl
push
cmpsb
adcb
fisttps
repnz
sub
orb
in
out
add
xor
out
jmp
and
push
pop
lds
sbb
aaa
add
and
out
scas
subb
or
add
inc
jle
sbb
sbb
and
add
or
or
in
pusha
insl
dec
mov
sub
and
rcr
mov
das
add
or
cs
outsb
stos
pushf
sub
add
or
push
leave
add
loop
add
add
sbb
in
pop
sbb
cmpb
mov
sbb
leave
in
fmuls
mov
sub
xor
mov
divl
add
add
sbb
jg
pop
ret
adcb
add
movb
inc
faddp
add
es
lret
xchg
outsb
sub
or
add
and
into
sbb
in
popf
ss
roll
out
push
rolb
aam
add
adc
aad
xor
daa
pop
jnp
iret
es
xorb
int
dec
push
sub
orb
fdivs
jb
mov
add
push
xor
adc
sbb
and
sbb
in
jle
adc
sbb
pop
sub
xor
mov
sbb
orb
add
sbb
sti
outsl
dec
and
and
addb
add
or
pop
repz
sbb
fbld
sbb
int
add
loopne
loope
sbb
loop
pop
enter
and
imulb
cmp
sbbb
add
and
pop
pop
out
push
in
ss
orb
sub
fdivs
ljmp
sbb
popw
repnz
in
sub
pop
xor
jns
sti
add
lock
sub
sub
xor
ds
add
pop
jnp
add
xor
sub
sti
push
leave
leave
sbb
sub
sub
xor
in
lar
and
adcb
sbb
clc
jle
popf
fdivs
add
sbbb
std
mov
sbb
ss
cs
nop
or
test
sub
aaa
sub
mov
xor
xor
jmp
sarl
and
sbb
xlat
fdiv
push
add
orl
inc
and
andl
ss
add
add
and
imul
push
ss
add
adc
and
ss
orl
in
xlat
jp
push
adc
or
xor
or
or
push
sub
push
push
add
mov
enter
adcl
in
lcall
pop
das
add
addl
sbb
sbbl
roll
aaa
push
pop
aaa
or
mov
popf
pop
add
and
add
sbb
add
mov
add
and
sbb
push
sbb
sbb
xchg
or
xchg
and
cmpsb
jbe
sbb
add
ss
dec
add
xchg
or
sub
xor
daa
mov
sub
adcl
rolb
add
pop
insb
add
xchg
add
and
outsl
sub
subl
lcall
jg
cs
adc
sbb
subl
mov
cmp
sbb
orl
jnp
sub
and
and
pop
adc
sub
insl
fcomps
and
xor
xor
sbb
cmp
jb
xor
sbb
sbb
xchg
and
xchg
and
leave
inc
jb
add
sbb
xor
fwait
pusha
inc
in
sub
aaa
inc
sub
cmpl
add
imul
add
cmp
das
xor
cmp
add
or
adc
aas
and
out
xor
inc
dec
insb
pusha
adc
pop
sub
out
popf
add
sbb
or
jae
faddl
sub
jecxz
inc
orl
add
or
sbb
sub
ss
jg
pop
out
orl
incb
xor
inc
add
adc
jbe
or
dec
sbb
jbe
popa
fbld
and
adcb
mov
xor
add
mov
cli
add
xor
xchg
push
push
rcrb
or
aaa
sub
or
jbe
fimull
adc
push
jb
pop
je
pop
mov
or
or
sbb
push
aaa
adc
or
jbe
sbbb
mov
aaa
or
bound
or
dec
or
mov
cs
sarb
cmp
or
add
movntps
sub
pop
iret
or
or
inc
cs
mov
mov
incl
adc
or
push
outsb
mov
or
adc
loopne
das
push
push
stos
or
xor
sub
xor
jp,pn
sub
sbb
xor
xchg
adc
adc
fidivl
push
sub
adc
fidivs
push
add
ret
add
xor
sbb
or
add
adc
repnz
das
adc
loopne
push
daa
push
sbb
add
sbb
orl
andb
mov
mov
loopne
outsb
push
orl
adc
aaa
mov
xor
xchg
notb
xorl
and
add
inc
push
hlt
xchg
incb
and
sbb
push
inc
sub
mov
sub
inc
into
pop
ljmp
lcall
push
or
or
das
mov
sub
fdivl
push
sbb
fiadds
sbb
or
daa
cs
inc
or
xor
rclb
das
push
ljmp
jp
pop
pop
pop
or
adc
adc
cvtpi2ps
mov
mov
js,pn
popa
or
out
into
push
sub
sbb
sub
push
sbb
adc
sbb
and
dec
mov
dec
push
cs
and
inc
xor
sahf
add
bound
cmpl
mov
pop
or
sub
sub
and
fsubl
and
add
pusha
aam
filds
das
pop
orl
add
xor
mov
push
jbe
sbb
pop
data16
pop
icebp
sub
sbb
cmp
sbb
pop
inc
or
xor
push
pop
ljmp
xor
jbe
sbb
cmp
sbb
adc
and
js
into
pop
push
ds
sbbl
adc
adc
xchg
mov
xor
cmpb
mov
and
repnz
jp
add
shrl
daa
mov
mov
or
out
push
mov
xor
pusha
adcl
bound
adc
shll
xor
pop
ljmp
push
jbe
arpl
sahf
or
jbe
add
pop
or
mov
and
ds
push
push
and
push
adc
push
gs
sub
push
inc
andw
rorb
ret
jb
cmp
cwtl
cmpsb
adc
add
popa
mov
stos
adc
jne
test
push
sbb
bound
ret
mov
push
outsl
es
mov
add
add
cmp
sbb
pop
cli
adc
rcrb
push
or
xchg
lret
sub
cli
or
or
test
mov
sub
repnz
cs
mov
stos
out
cs
shrl
xor
sub
add
mov
cmpsb
xchg
mov
scas
push
ficompl
cs
mov
cs
sub
incl
aad
or
mov
insl
orl
push
push
pop
or
scas
sahf
outsb
cmp
bound
xor
mov
pop
pop
pop
sbb
or
push
add
pop
jne
adc
dec
das
mov
add
adc
xchg
mov
add
add
sub
xchg
fsubrs
xchg
roll
addl
sbb
bound
lret
pusha
pusha
stos
xor
shrb
imulb
andl
mov
sub
sbb
jno
xchg
push
adc
add
cmpsb
add
jb
mov
scas
and
adc
sub
mov
sbbl
xor
enter
jle
xor
daa
or
or
ret
loop
xchg
sbb
xor
rolb
scas
push
mov
or
xor
sbb
dec
push
add
mov
add
fimull
sbb
sub
dec
shlb
adc
bound
and
cwtl
out
inc
inc
xchg
imul
scas
add
and
or
or
js
jns
jp
jle
xchg
loope
or
out
cs
push
push
and
jnp
fidivrs
movsb
xor
dec
lcall
adc
cs
mov
or
xchg
jle
adc
inc
add
add
inc
adc
sub
testb
rcll
mov
add
jo
in
and
xchg
inc
push
aaa
xor
mov
add
test
orb
add
jo
xlat
cli
add
bound
adc
push
push
sub
push
rol
test
push
pop
inc
adc
or
test
push
or
sbb
pop
lea
xchg
push
xchg
cmp
mov
mov
xchg
ljmp
mov
sbb
call
xor
loop
dec
add
sbb
mov
stos
sbb
xorb
sub
push
mov
mov
push
or
inc
sub
insb
push
xor
pop
and
cmp
sub
or
or
and
sub
cmp
adc
popa
and
loop
fisubl
sub
push
cmp
cmp
bound
mov
cmpsb
ss
mov
dec
xor
into
adc
sbb
cmp
xor
xchg
and
insl
jo
add
mov
pop
push
cli
mov
sbb
outsb
sbb
sbb
add
inc
mov
mov
push
rcll
push
sbb
sbb
loope
or
or
and
shll
sbb
push
jmp
fimuls
mov
xchg
rolb
inc
jbe
xchg
jecxz
mov
sbb
pop
pop
pop
cmp
dec
lea
and
out
outsb
scas
mov
cmp
mov
sub
inc
mov
xchg
fidivl
mov
loopne
adc
scas
cmp
popa
xor
push
or
inc
test
loop
popa
mov
sub
xorl
push
mov
mov
add
adcl
out
fisubrl
jb
or
addr16
iret
add
sbb
mov
popf
mov
and
jne
sahf
mov
sub
sbb
add
sub
pop
cwtl
outsb
push
dec
repnz
fcmovnb
xchg
adc
sub
mov
scas
xchg
adc
cli
rorb
add
and
or
out
sbb
add
stos
mov
add
sub
mov
push
daa
pop
adc
add
and
negb
cmp
mov
sahf
sbb
sub
mov
adc
mov
in
xor
pop
sbb
push
loopne
push
cwtl
dec
cmpsb
pop
sbb
addl
xchg
sub
stos
cmpsb
lea
push
loop
jbe
or
mov
and
ret
add
inc
xchg
cmp
or
or
mov
es
sti
sbb
push
test
adc
or
into
jbe
test
push
mov
sbbb
cmp
mov
ss
jmp
xor
jo
cwtl
inc
ss
mov
bound
lret
and
into
and
cltd
ret
daa
pop
jbe
or
mov
repnz
mov
jbe
or
xor
bound
xchg
and
inc
shlb
dec
cmpsb
push
or
repnz
data16
inc
jnp
xor
adc
push
adc
es
adc
pop
push
xor
sahf
cltd
test
data16
xor
bound
popf
add
pusha
lods
ds
add
rolb
es
aaa
dec
push
or
fisubs
jo
sub
xchg
sahf
pop
xchg
rolb
sbb
into
mov
push
rcrl
jb
sub
pop
pop
sbb
jbe
sub
outsb
adc
sahf
jo
or
jbe
jbe
push
push
fcomps
mov
push
dec
xor
pop
add
sbb
inc
fdivr
loopne
push
mov
mov
mov
insl
cli
add
or
ljmp
mov
xor
xchg
or
fisubl
pop
dec
or
push
sbb
push
xchg
mov
add
push
jecxz
sahf
push
dec
xor
sub
push
lret
add
cs
adc
repnz
shl
push
sbb
lods
add
sub
sub
or
lcall
xor
jp
or
ret
sbb
addl
push
rcrl
push
dec
sahf
ds
test
mov
add
test
arpl
push
adc
mov
add
mov
add
push
and
add
or
mov
mov
sub
add
sbb
or
inc
ret
xchg
ret
ss
daa
into
adc
add
lret
jo
inc
pop
push
lods
adcl
push
fwait
push
in
xor
ljmp
jbe
aaa
add
mov
adc
push
or
add
mov
sahf
es
adc
sbb
xor
push
or
mov
mov
push
adc
bound
mov
cltd
sbb
loop
sahf
rclb
push
and
sub
xor
lcall
mov
add
or
or
adc
ss
sbb
or
test
ret
and
mov
sub
ss
xchg
and
sbb
pop
jae
or
fimuls
dec
andl
out
adc
push
lcall
xor
sbb
mov
push
or
shlb
and
bound
inc
push
jle
aaa
daa
sbbl
mov
sbb
mov
and
and
mov
push
and
push
popf
push
push
push
mov
ficoms
fimuls
rorb
sub
sub
hlt
inc
mov
xor
mov
cs
mov
xchg
adcl
fidivrl
jbe
pop
sbb
add
or
adc
aam
sub
sub
jl
loopne
adcb
or
cmp
mov
adc
add
sub
or
mov
ljmp
movsb
js
cmp
sub
jecxz
rclb
push
mov
cli
mov
mov
add
or
add
setne
mov
mov
adc
mov
xchg
out
les
xchg
sub
ret
push
scas
xchg
sbb
loop
lret
sbb
push
sbb
xor
jp
xor
pop
jle
es
xor
push
pop
mov
sub
ss
or
inc
aad
cmp
adcb
and
mov
es
and
ss
cmp
pop
xchg
xor
or
push
shrb
mov
sbb
fidivs
mov
xchg
pop
repnz
xor
mov
adc
sbb
adc
sbb
mov
test
or
bound
inc
adc
xor
sbb
or
pop
push
test
xor
sbb
ret
je
pusha
daa
sahf
sbb
mov
adc
addl
loopne
stos
sahf
aaa
fiaddl
adc
cmp
fisubl
pushf
data16
or
adc
test
or
cmp
test
inc
inc
shrl
add
es
into
or
mov
cs
cli
rorl
jo
faddp
push
xchg
and
stos
or
pop
mov
sbb
push
or
push
enter
ljmp
pop
push
add
or
ret
xchg
push
add
add
and
push
or
sbb
push
xor
or
xchg
pop
int
cmp
mov
andb
sbb
add
pusha
and
cli
cmp
or
sbb
add
sub
dec
mov
mov
add
jp
sub
push
adc
stos
loop
aaa
xor
or
and
push
xor
or
fimull
dec
out
and
dec
or
add
out
xor
and
pop
mov
loop
dec
popa
dec
fisubl
push
sub
sbb
and
add
es
iret
push
mov
add
sub
bnd
adc
mov
rolb
xchg
jo
push
and
push
cltd
sub
pop
xchg
push
add
adc
inc
sti
rorb
jb
mov
cli
inc
scas
push
adc
adc
subl
jle
xchg
jle
or
pop
pusha
push
fwait
add
scas
sub
jle
push
xorb
out
mov
adc
or
and
leave
sbbl
bound
test
sbb
adc
and
sub
cmp
push
xor
push
sub
rclb
sub
repnz
add
xor
jbe
lret
push
outsb
lcall
js
add
push
mov
add
lret
iret
fiaddl
push
sbb
push
cmp
out
jbe
mov
xchg
sbb
or
push
cmp
cmp
adc
fisubl
mov
or
repnz
int
js,pt
movsb
push
stos
adc
and
scas
pop
jbe
pop
push
lret
es
aaa
mov
adc
lret
rorb
out
push
inc
sbb
ret
sub
xor
and
push
mov
cmp
or
cmp
pop
push
cwtl
cmp
or
daa
outsb
repnz
dec
add
pushw
es
adc
push
adc
pop
pushf
shll
cmpsb
mov
dec
out
outsb
imul
jp
lret
xor
movsl
int3
fwait
push
jg
sub
and
pop
ljmp
pusha
inc
jp
push
or
leave
gs
adc
and
mov
add
mov
ljmp
pop
cmpsb
out
push
inc
push
popa
fiaddl
jb
subl
sbb
push
dec
and
inc
xchg
cmp
cli
or
push
and
mov
sub
push
cli
sub
mov
sbb
push
sbbb
add
push
and
cli
mov
or
jmp
jle
adc
jp
test
hlt
out
xchg
sbb
pop
adc
rcrb
lretw
and
sub
xor
ljmp
or
dec
or
dec
or
sub
ret
cwtl
ret
bound
or
pop
mov
or
and
mov
out
xchg
pop
js
inc
push
push
pop
cmp
jp
xor
mov
sbbl
push
add
sub
cs
and
jbe
repz
sbb
or
outsb
cld
push
sub
inc
adc
sahf
and
adc
xor
xorb
push
dec
adcb
xchg
cltd
mov
push
xor
cmpsb
jle
jb
stos
add
cmp
dec
daa
xor
xchg
into
rol
test
push
add
movsb
mov
xchg
ljmp
mov
ret
add
push
xchg
sub
and
and
adc
push
mov
fbstp
das
fiaddl
cs
std
rcrl
or
add
sbb
divb
fildl
xor
add
xor
mov
jb
xor
sahf
bound
jo
hlt
jmp
push
loop
inc
and
into
outsb
mov
sub
adc
or
jge
mov
or
and
inc
inc
or
out
adc
add
rolb
inc
dec
and
xor
xor
push
add
adc
and
lret
mov
stos
adc
sbb
jbe
adc
pusha
sbb
out
jbe
add
adcl
add
push
cmpsl
add
add
mov
lock
jbe
add
popf
xor
mov
cli
jle
mov
push
xchg
mov
into
lcall
jb
and
jle
out
ret
add
divb
into
inc
sub
sub
shr
sub
xor
pusha
outsb
pop
mov
mov
sub
loop
push
xchg
xor
dec
inc
push
lret
sbbb
mov
push
cltd
add
jb
out
and
jno
adc
push
pop
add
lret
xchg
ss
sub
js
xor
jp
push
add
xchg
loopne
lods
or
ss
xor
mov
cltd
out
add
out
sbb
jbe
add
loop
push
mov
push
pop
fidivrl
or
adc
add
sbb
movsl
popf
ja
sbb
sbb
inc
sarl
mov
push
push
and
or
cmpsl
fidivl
aaa
or
mov
cltd
fisubl
daa
and
add
add
adc
shlb
into
sub
ljmp
or
or
iret
je
jecxz
ds
or
popf
or
cmpsb
add
and
xchg
out
cmpsb
or
and
push
xor
fadds
test
popf
push
or
out
push
cmp
or
and
jbe
inc
popa
int3
int3
or
sbb
lret
movsl
jno
xchg
arpl
xor
or
cmp
lret
loop
pop
out
or
or
pop
inc
or
mov
pop
or
cs
pop
cs
or
sbb
iret
lock
jbe
sbb
mov
inc
fisubl
or
xchg
lahf
leave
add
and
or
daa
mov
push
and
or
loopne
mov
out
or
scas
fisubrl
or
add
push
mov
movb
or
pop
rorb
ja
push
ds
sbb
mov
shlb
push
or
cmp
loopne
outsl
ret
pop
or
dec
out
repnz
cs
sub
fs
in
or
or
xor
jne
inc
mov
cmp
dec
out
out
or
jae
or
mov
add
mov
or
sbb
push
testb
repnz
or
idivl
xorl
or
or
or
dec
jecxz
xchg
or
mov
or
sbb
mov
xor
push
out
mov
or
adc
ficoml
push
mov
or
adc
fldpi
sbb
or
xor
shlb
or
ds
cmp
out
and
or
les
mov
cmp
push
or
test
lret
or
or
cs
in
sub
and
and
inc
lcall
jae
or
fwait
or
and
and
out
jle
out
or
and
out
jae
pop
and
xchg
shrl
push
add
pop
jecxz
push
or
ds
xlat
dec
pop
push
aaa
or
add
arpl
test
loop
ss
das
daa
mov
or
aas
test
jno
or
push
or
out
scas
inc
push
and
lret
xchg
adc
or
pop
js
out
adc
cmp
or
scas
je
negl
ds
add
ds
mov
adc
sub
mov
adc
cmp
test
add
mov
popf
or
or
mov
into
or
or
xlat
or
cmpsl
jbe
add
and
or
cmp
sbb
daa
add
xchg
jns,pn
pop
addr16
pop
adc
xchg
in
mov
or
aaa
add
sub
mov
push
ljmp
inc
push
adc
pop
push
ret
inc
xchg
test
or
mov
rol
sub
or
push
nop
repnz
add
mov
adc
or
pop
push
pop
mov
mov
or
mov
xor
inc
sub
cs
outsl
fisubs
popf
ds
push
pop
and
inc
and
pushf
or
or
or
adcl
push
push
das
xchg
inc
inc
or
pushf
inc
or
add
cmp
lds
imul
mov
fisttpll
pop
and
or
sub
or
or
mov
adc
and
fistpll
scas
push
mov
push
adc
and
or
ret
stos
cmpsl
nop
add
push
and
push
cmp
imul
add
into
and
sub
xorb
or
out
bound
add
fcmovnb
push
cmpsl
add
or
or
test
pushf
fisttpll
addr16
push
lcall
mov
adc
sub
mov
and
add
push
xchg
push
outsb
xchg
push
xlat
movsb
xchg
cs
inc
push
ret
mov
and
mov
or
imul
push
mov
push
out
xor
rol
pushf
pop
pop
ret
add
aad
mov
add
pop
sub
push
sub
adc
dec
ret
or
es
sbb
mov
xchg
lret
jle
pop
sbb
and
mov
adc
and
sbb
lods
jl
xor
cs
iret
push
ret
jp
repz
pop
adc
aaa
out
sbbb
ret
lea
push
inc
ret
mul
and
or
jl
dec
lock
rcll
or
fidivs
rcll
cmpsl
jbe
test
daa
add
push
jo
mov
cmp
pop
push
ffree
hlt
inc
push
jb
jmp
add
cwtl
xor
or
aas
ret
imul
in
aam
mov
add
sub
push
or
adcb
adc
xchg
cmp
inc
xlat
bound
push
mov
add
push
add
pop
sbb
stos
cmp
xor
add
inc
cwtl
addr16
out
jmp
pop
or
es
add
cs
or
lret
repz
push
aas
addr16
sub
push
adc
cmpsl
pop
xchg
cltd
fisubs
int3
adc
inc
push
push
cmpsl
adc
add
xchg
push
push
xor
mov
xchg
addb
arpl
das
scas
notb
data16
xor
push
jbe
pop
cmp
xor
push
add
xchg
pop
ret
pop
sbb
dec
xchg
xchg
out
add
aam
xlat
test
daa
dec
push
pop
dec
shlb
push
pop
sub
idivb
or
imul
imul
popa
popa
push
outsb
outsb
gs
mov
imul
out
into
add
and
dec
push
adc
outsb
repnz
je
push
popa
mov
jle
outsb
es
mov
out
jne
cmp
popa
pop
gs
jns
jae
iret
repz
jp
js
scas
cmp
repz
imul
push
outsb
push
aam
cmp
fs
xchg
aaa
xchg
mov
arpl
fidivrs
xchg
jp
push
or
verw
subb
pushl
push
or
rcl
mov
das
sarb
and
das
lahf
jbe
push
jle
out
pop
sub
loope
mov
pop
rorb
ficomps
mov
xlat
mov
mov
sbb
inc
mov
mov
cmp
sbbb
movsb
rol
shlb
pop
push
pop
push
add
xor
leave
stc
shl
aaa
cmpsb
dec
dec
inc
inc
sbb
insl
in
adc
jl
dec
sub
outsl
pop
scas
testl
dec
cmp
addb
mov
in
iret
or
add
in
mov
push
out
xor
xchg
iret
pusha
push
xor
daa
add
loopne
out
add
add
add
adc
repnz
popf
sahf
cmp
aas
jg
or
jbe
jmp
pushl
pop
aas
and
aas
into
fidivs
sub
push
aas
aam
ss
fwait
das
stos
push
adc
outsb
dec
adc
pusha
or
mov
int
cmpsl
xorl
inc
and
fucomp
in
jmp
add
lods
daa
pop
dec
cltd
sbb
arpl
push
push
in
int3
ss
push
or
adc
push
xor
add
into
fsub
outsl
or
dec
xchg
push
pop
or
shlb
mov
fsubr
push
xor
inc
push
push
or
jnp
dec
pop
and
sub
push
and
pminub
mov
outsb
int3
sub
xor
gs
bound
and
push
sub
shr
sub
mov
push
cli
jns
sub
or
aaa
daa
mov
add
fbld
hlt
push
mov
int3
jle
sub
inc
xor
push
adc
cmp
and
test
insl
fwait
or
adc
pop
dec
mov
push
jb
data16
lcall
push
mov
ss
pop
mov
loopne
add
fisttps
cmc
dec
mov
cwtl
pop
and
out
inc
popa
xor
stos
sbb
bound
scas
fcmovb
xor
mov
and
pop
and
jae
or
fistpl
repz
icebp
into
cmp
or
add
repz
pushf
pop
pop
pusha
or
outsl
push
add
test
pop
cmp
cmp
ret
xlat
push
arpl
mov
dec
das
arpl
mov
xchg
ja
mov
adc
repz
addl
jp
into
out
cmp
or
and
imull
int
pop
data16
add
fdivrs
and
or
and
xchg
sbb
inc
pop
push
jnp
pushf
sbb
es
mov
pop
outsl
push
mov
int3
int3
shrb
pop
xlat
es
ss
sub
push
inc
lret
mov
dec
roll
movsl
and
mov
fcoms
ljmpw
mov
jns
add
mov
cmp
repz
int3
les
lods
movsb
pushf
xchg
mov
repz
jl
insb
fs
repz
push
dec
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
lcall
hlt
in
out
sahf
out
int3
rcrb
pushf
nop
test
sahf
out
insb
pusha
push
dec
cmp
jns
out
and
or
sahf
iret
repz
call
cwtl
cmp
repz
js
pop
push
repz
xchg
push
cmpsl
or
inc
push
inc
iret
repz
inc
inc
inc
inc
inc
dec
cmp
repz
dec
dec
dec
dec
repz
repz
dec
push
push
push
iret
repz
push
push
push
push
push
pop
imul
sbb
adc
lds
jae
je
in
inc
lcall
pop
or
repz
or
or
repz
repz
or
or
repz
add
add
add
cmp
repz
add
add
repz
repz
or
or
repz
or
or
or
fwait
mov
cmp
or
inc
loop
ljmp
sub
push
cmp
imul
pop
xor
add
test
aaa
ss
enter
xor
dec
add
test
push
add
mov
jne
das
xor
mov
cmp
and
xor
xor
xor
sub
in
aas
sbb
das
xchg
xor
xchg
xchg
xchg
aaa
ss
xchg
xor
xchg
add
mov
add
add
add
pop
fs
dec
dec
outsb
mov
pop
mulps
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
dec
dec
inc
inc
inc
inc
shrl
dec
inc
inc
mov
test
and
fdivrl
push
inc
cmp
inc
dec
push
inc
dec
inc
mov
jle
xchg
or
push
int3
cmp
jl
xchg
mov
push
mov
into
insl
sub
or
jbe
popf
mov
out
sub
and
ljmp
or
lret
test
push
mov
mov
aam
and
cmpsb
outsb
outsl
mov
push
ja
testb
incb
xor
lret
mov
fisubs
push
imul
out
pop
jne
mov
orb
mov
rolb
jl
fiaddl
mov
mov
jns
cmpsl
xor
mov
mov
cld
xchg
sti
test
sahf
out
sahf
jo
pusha
clc
dec
idivl
out
cmp
and
or
cmp
out
hlt
stos
repz
cmp
icebp
lock
out
iret
repz
fisttps
out
sub
sbb
sahf
out
cmp
jmp
stos
ljmp
movsb
call
mov
outsl
push
in
push
in
idivl
loop
push
loope
cmp
rep
loopne
fbstp
cmp
ficoms
fdivrl
jns
push
jns
test
push
fstps
fmuls
out
out
push
push
sahf
out
sahf
shrl
rcrb
rorl
cmp
repz
hlt
cmpsl
iret
fmul
repz
repz
int
int3
pushf
iret
repz
lret
jo
inc
leave
cmp
and
adc
out
dec
repz
clc
cmpsb
lds
int3
jns
sarl
ret
push
mov
jns
out
movsb
mov
jns
jl
push
jns
out
scas
mov
cmpsl
xor
mov
mov
jnp
out
mov
mov
mov
int
jns
push
mov
mov
movsb
mov
add
cmp
xor
add
movsl
jmp
jbe
mov
or
cld
rol
sub
loopne
out
mov
das
push
mov
mov
lahf
dec
mov
repz
mov
call
dec
add
sbb
mov
mov
std
xor
add
cmc
je
add
cltd
cmp
out
lret
mov
xor
lret
jecxz
mov
inc
add
mov
cmpb
mov
and
sarb
mov
shlb
xchg
sar
mov
aad
rol
rorl
or
or
mov
mov
pop
add
loopne
fildl
mov
stos
pusha
xchg
add
insb
shl
and
aas
push
sbb
leave
call
adc
repz
inc
lcall
dec
daa
push
hlt
push
jbe
mov
sub
sub
mov
or
or
pop
aas
mov
insl
popa
pop
addr16
xchg
loopne
mov
push
inc
arpl
insl
dec
dec
iret
out
rcl
sub
pop
sbb
pop
test
mov
dec
add
adc
ljmp
xlat
jecxz
aas
cmpsb
insb
ret
cmp
scas
dec
cmpsl
repz
or
ret
pop
push
mov
sarb
outsl
adc
jmp
mov
nop
popf
ss
mov
cmp
pop
daa
shll
daa
or
sub
rcr
scas
pop
or
out
or
in
aad
in
inc
fildll
sbb
xor
mov
add
inc
daa
push
lret
into
stos
add
sbb
lahf
ja
inc
lock
ja
mov
clc
aam
int3
stos
mov
das
jg
ret
lcall
fwait
data16
pop
push
push
dec
pusha
mov
lret
lock
aaa
mov
sub
push
loopne
adc
in
sbb
adc
mov
int
inc
xor
mov
mov
mov
pop
dec
mov
cmpb
fldt
pop
ret
and
jg
rorl
push
stos
cmp
mov
pop
clc
pop
sub
getsec
aam
push
xchg
jg
test
and
xlat
mov
mov
lods
xor
and
in
aaa
sbb
stos
mov
mov
mov
fmuls
mov
and
lret
push
mov
push
sub
lods
lahf
addr16
sarb
pusha
mov
pop
adc
jmp
std
mov
xchg
sbb
pop
jecxz
jnp
fcomps
and
mov
lahf
pop
or
lcall
test
mov
mov
lock
push
pop
lcall
add
adc
fwait
add
ret
xor
shlb
cs
ret
mov
sub
cli
sahf
dec
idivb
mov
imul
mov
cli
leave
cli
addr16
testb
mov
int
das
shll
jo
lret
cs
mov
mov
add
loopne
mul
jbe
into
std
push
mov
sub
cmpl
das
pop
fisubrl
dec
daa
aas
addr16
mov
pop
subl
adc
xchg
or
sarl
xchg
jg
pop
lret
aad
stos
jle
loopne
cmpsb
fs
xchg
loopne
push
loopne
xchg
loopne
push
movswl
mov
loop
les
mov
mov
push
and
js
xor
push
cmpsb
fsubs
or
lock
mov
adc
adc
jb
sar
inc
xchg
push
cmp
jne
inc
push
sti
iret
lock
leave
iret
mov
xlat
repz
add
ret
out
or
or
mov
mov
out
fdivrs
mov
adc
dec
mov
cmp
push
lock
jnp
popa
outsl
pop
das
and
add
sahf
out
push
pop
pop
pop
pop
pop
adc
pusha
popa
out
dec
xor
scas
ss
mov
sahf
test
cwtl
nop
mov
int
into
pop
enter
add
mov
pop
pop
mov
mov
ja
out
lock
fimull
adc
out
inc
fmuls
mov
gs
pop
dec
iret
aad
pop
mov
imul
das
inc
mov
adc
and
ss
and
sub
fdiv
das
les
push
aaa
cmp
push
mov
jecxz
test
mov
mov
push
sti
mov
pop
leave
push
psadbw
push
xor
add
add
mov
push
sub
sbb
and
add
scas
mov
adc
push
jnp
mov
clc
mov
and
movups
hlt
imul
pop
xor
fcomps
out
jbe
loopne
shrb
scas
enter
dec
repz
push
fcomp
mov
scas
jne
insl
add
test
nop
scas
mov
jg
cmp
mov
outsb
nop
pop
pusha
shlb
adcb
adc
jo,pn
call
mov
in
bswap
rcrb
enter
loopne
mov
ret
push
popf
jge
in
pop
xlat
iret
mov
gs
jbe
mov
mov
jg
in
pop
mov
mov
jg
fdivs
out
jp
pop
shufps
int3
mov
jg
pop
rcr
orb
mov
mov
pop
outsb
pop
rol
mov
lock
fidivrl
add
stos
pop
mov
popf
jg
outsl
mov
lods
imul
or
add
scas
push
lret
jle
pop
sub
int3
clc
xlat
stos
add
cs
adc
clc
and
dec
push
inc
inc
dec
inc
dec
add
inc
adc
out
stos
xchg
xchg
pop
push
cmp
cmp
repz
mov
repz
out
add
dec
insl
cs
dec
scas
pop
pop
push
or
les
push
xchg
or
or
aas
fadds
xchg
aas
scas
aas
push
aas
out
push
les
mov
stos
mov
mov
es
pushl
fidivrl
mov
inc
inc
pop
pop
xor
mov
add
ss
das
add
pusha
or
push
xor
xor
inc
sbb
pop
add
mov
fisubrl
xlat
pop
inc
pushf
add
cmp
sub
int
inc
int
ja
pop
and
push
or
and
sahf
push
dec
pop
outsb
shlb
add
sub
mov
repz
pop
inc
inc
mov
dec
pop
pop
and
push
inc
push
inc
jg
fsubs
ja
test
jg
mov
pop
xlat
das
mov
dec
mov
push
comiss
inc
ljmp
xor
mov
pop
fists
mov
and
push
rcrl
sti
cmp
push
dec
push
inc
inc
popa
and
cmpl
push
dec
inc
lahf
scas
mov
pop
aas
mov
inc
inc
insb
xchg
adc
sahf
add
pop
sub
cmp
jg
lea
stos
andnps
or
add
call
out
jg
inc
inc
flds
xchg
data16
rcrl
jmp
ljmp
mov
xor
sbb
daa
in
push
arpl
aas
incl
das
lds
inc
imul
dec
in
or
outsl
xchg
pusha
outsl
nop
fiaddl
jns
dec
insl
popa
xor
jne
inc
sub
push
pop
fbstp
aas
dec
dec
dec
stos
gs
fs
mov
or
lahf
push
shrb
push
dec
cmp
mov
and
cwtl
pop
push
popa
cmpsl
push
js
xchg
pop
jnp
aas
into
aas
pop
pop
push
enter
mov
in
add
inc
inc
clc
push
fcomip
shld
pcmpeqd
in
pop
pop
pop
es
aas
pop
push
cmp
push
add
adc
outsl
dec
pop
and
outsl
lods
add
cli
sub
and
sub
movl
mov
and
adc
mov
aam
jns
out
ror
enter
out
sahf
mov
mov
cmp
repz
jl
je
insb
iret
repz
push
push
cmp
repz
dec
inc
cmp
jns
ja
sub
push
sbb
add
cmp
repz
js
in
faddl
cmp
scas
add
push
jns
add
or
and
or
aaa
or
fnstsw
scas
adc
adc
mov
das
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
xchg
aaa
fdivrl
xlat
pop
sbb
add
add
jns
fisubrs
add
cmpb
cmpsb
xchg
pushf
pop
movsl
sbbl
mov
fisubl
setae
fmul
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
das
clc
std
adc
push
ficompl
push
pop
fisubrl
xor
pop
mov
rcr
fsubp
stc
jb
jle
shll
or
adc
jl
mov
or
cmp
inc
adc
adc
cmpsl
stc
loopne
adc
out
pop
sbb
sbb
repz
clc
jp
rcrb
jns
idivl
jns
js
push
cld
adc
pop
push
push
add
das
addb
cmp
adc
test
xlat
mov
or
mov
adc
ss
or
sbb
xchg
std
aas
mov
pop
insl
add
jle
dec
push
jle
testl
sbb
cmpb
mov
pop
pop
or
jns
addl
outsb
je
sbb
sahf
out
insb
sbb
out
sahf
pop
adc
push
jns
out
inc
or
jns
out
sub
and
sahf
out
sahf
and
sbb
sbb
jns
decl
adc
loop
push
clc
jge
push
adc
jns
out
sbb
push
fcoms
out
sahf
out
and
and
gs
jo
and
out
pop
mov
mov
xor
lock
xor
sub
call
mov
pop
add
sub
mov
filds
cmp
or
jb
sbb
jg
or
sahf
out
pop
cmp
aas
inc
dec
push
push
jns
out
pop
bound
cltd
out
sahf
out
mov
repz
push
or
sub
iret
repz
xchg
mov
sarl
iret
repz
testb
and
out
sahf
out
pop
jne
lcall
lcall
or
repz
ds
push
repz
repz
mov
iret
mov
movb
inc
popa
cwtl
ds
xrelease
or
add
aas
pusha
pop
xor
stos
sub
jp
pop
mov
pop
cld
and
or
xchg
inc
mov
repnz
and
scas
dec
push
add
addl
add
int
mov
ja
aaa
xchg
outsb
dec
push
add
push
jle
mov
shlb
push
ret
stos
add
enter
ss
sub
adc
push
add
sub
mov
push
add
rol
ss
push
push
popf
test
test
push
inc
jg
call
cmpsb
jmp
pop
pop
add
repnz
jb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
jb
adc
dec
js
or
mov
jp
add
repz
sbb
push
pop
ja
mov
imul
add
dec
add
add
push
sahf
ja
xor
sbb
cmpb
push
inc
shrl
sub
pop
lods
mov
xor
outsl
mov
mov
in
test
jg
test
jne
nop
xchg
cmp
add
enter
stc
nop
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
clc
lcall
lds
mov
cmpsb
lock
mov
popa
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fstps
mov
push
pusha
cli
add
int3
pushl
cltd
add
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
dec
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
decl
test
movsl
jmp
xor
aas
jge
mov
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
call
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
ja
ljmp
add
add
cmpsb
cmpsb
jb
bound
imul
in
xchg
dec
adc
push
not
ficompl
xchg
cltd
dec
adc
jae
fwait
dec
adc
mov
dec
add
dec
adc
bound
pop
push
mov
jbe
push
xlat
mov
xlat
adc
mov
pusha
inc
aad
pop
mov
xor
mov
jb
jns
add
cmp
cmp
ss
aaa
add
push
sub
aad
clc
hlt
jg
add
jg
cmp
sub
les
cmp
pop
sbb
or
xchg
add
jno
adc
add
adc
inc
lretw
xor
rclb
rolb
loopne
adc
pop
inc
aaa
xor
push
adc
movsl
push
gs
xchg
outsl
add
mov
jo
or
adc
adc
pop
inc
sbb
add
xchg
ficomps
stos
mov
popa
add
insb
push
mov
test
data16
cmpb
and
inc
outsb
and
lret
out
jle
push
dec
and
add
lock
xchg
outsb
and
cmp
add
cwtl
imul
jge
popa
popf
add
sub
pop
inc
jmp
and
sub
or
add
adc
sbb
mov
js
int3
inc
shll
mov
outsb
sahf
pop
clc
dec
mov
dec
les
sub
je
inc
xchg
xor
add
sysenter
daa
test
imull
add
ja
in
and
add
and
loop
adc
push
inc
push
out
loope
pop
cmp
push
or
or
clc
insb
int3
pop
addl
loope
sub
sbb
sbb
test
inc
test
sbb
or
sub
add
aaa
and
push
imul
inc
xchg
xor
dec
ss
cmp
icebp
mov
dec
xor
cltd
push
xor
mov
mov
push
xor
into
push
cs
test
xchg
mov
mov
loopne
loopne
loopne
push
incb
or
pop
push
inc
add
xchg
xchg
push
stos
std
or
orb
pusha
dec
jo
rcrb
push
push
mov
pop
outsb
cmp
orb
add
cmp
lock
add
or
int
mov
scas
rolb
in
insb
mov
add
dec
or
or
push
add
push
add
mov
adc
push
push
xorb
cmp
cwtl
jae
je
jne
iret
repz
jbe
ja
add
sahf
out
js
jns
addr16
out
pop
adc
adc
adc
add
add
aaa
testl
out
aas
add
push
jg
xor
and
negl
loopne
scas
pusha
cs
sarb
jns
mov
or
rcrb
outsb
lock
push
imul
cmp
mov
fadds
push
push
push
add
out
sahf
mov
enter
cmp
out
clc
sbb
pop
sbb
mov
inc
pop
out
or
pop
mov
cmp
or
jo
lahf
dec
out
mov
cwtl
mov
push
add
push
add
sub
negb
das
imul
add
and
inc
pop
enter
pusha
jo
sbbl
add
sbbl
loopne
add
in
cltd
inc
adc
inc
cs
or
inc
lods
in
mov
or
add
adcb
mov
inc
cs
nop
or
loopne
add
jb
dec
and
and
pop
enter
add
pusha
pop
and
enter
enter
mov
pop
rcl
enter
lock
pop
leave
add
pop
int3
inc
dec
pop
push
das
loopne
add
or
negl
xor
rclb
xchg
xor
stc
push
add
pushf
nop
push
xchg
bswap
adc
and
les
add
mov
pop
push
nop
adc
pop
mov
in
pushf
push
sbb
jo
enter
xchg
add
pop
fs
dec
lcall
and
ds
lock
and
pop
dec
cs
xor
or
lcall
pop
jnp
test
cmp
cwtl
les
jnp
push
jp
inc
cmp
cli
cmp
push
pushf
fs
ljmp
inc
pop
rcrb
mov
inc
push
int3
pop
dec
iret
and
dec
push
loop
mov
dec
ds
int3
push
sub
scas
cmp
jo
les
dec
push
sub
inc
mov
push
jle
call
xchg
push
push
ja
jnp
adc
push
pop
and
push
repnz
adc
test
test
test
fcoms
pop
add
inc
shrb
lcall
mov
pop
or
mov
or
inc
push
dec
cmp
cmp
add
inc
mov
jo
push
mov
mull
popa
data16
and
inc
and
xor
mov
dec
dec
pop
lcall
push
inc
push
pop
push
inc
push
dec
push
push
inc
or
out
adc
inc
sti
push
push
inc
inc
dec
adcl
pusha
fwait
push
inc
push
pop
inc
dec
imul
into
sub
pop
xor
loopne
sti
sub
jl
and
push
inc
push
inc
pop
add
fldt
and
xor
lahf
pushl
dec
inc
push
inc
inc
inc
and
and
jo
add
inc
jl
popa
mov
sub
ja
fisubrl
cmp
ss
negb
outsl
inc
insb
ss
clc
arpl
pop
push
andb
add
add
pop
and
add
push
mov
loope
inc
not
cltd
movsl
inc
pop
adc
arpl
inc
or
push
push
mov
sbb
add
dec
nop
xchg
out
popf
test
movsl
add
jno
fdivp
das
aas
enter
addb
ds
repz
jbe
jg
cmp
mov
ss
jl
js
jns
leave
repz
inc
add
push
clc
int
data16
aas
mov
loopne
idivb
mov
cld
ret
das
and
fst
insb
adc
sbb
jl
insb
mov
lcall
add
add
add
cmp
rcr
aad
push
mov
mov
jae
mov
out
pop
jns
ret
xor
sub
push
or
notl
add
insb
push
fs
dec
sahf
pusha
add
jmp
in
stos
outsb
push
clc
mov
pop
lock
in
mov
add
pop
push
fildl
in
sub
cmp
imul
rclb
sbbb
pop
enter
orb
mov
test
add
pop
pop
out
fmulp
cmp
push
push
push
dec
push
daa
xor
add
add
push
inc
movsb
mov
sarb
lock
lcall
fsubrl
clc
stos
js
insl
sar
ret
xchg
movl
scas
push
scas
aaa
adc
pop
add
add
cmpsb
enter
mov
js
sbbl
fs
ror
retw
mov
subl
mov
lcall
leave
ja
js
xchg
push
add
dec
ret
and
sub
lret
shr
mov
push
aas
das
inc
paddw
xchg
add
lret
cmpb
rorb
add
and
add
sahf
mov
test
jae
or
add
paddsb
and
rcr
mov
orb
rdmsr
xor
add
sti
jnp
jbe,pt
fistpl
add
mov
mov
push
fs
fstp
negl
mov
lcall
mov
cltd
test
lock
push
in
out
bound
pop
or
jg
lea
cmp
and
psubusb
add
jg
mov
lcall
adc
neg
pop
pop
pop
pop
pop
pop
js
nop
in
into
mov
clc
movd
fldl
push
or
mov
xor
dec
mov
or
or
push
aaa
stos
cwtl
ja
adc
or
add
fsubs
lcall
outsl
xlat
into
mov
clc
and
xchg
sub
xor
clc
ja
js
data16
inc
pop
xor
mov
mov
daa
add
outsb
ja
add
jnp
rclb
daa
daa
lahf
or
outsb
daa
out
jmp
aas
shrl
pusha
nop
xchg
xchg
xchg
or
inc
pop
pop
mov
push
push
adcb
repz
push
insl
pop
cmpb
dec
xchg
push
pop
fiaddl
sub
add
mov
aaa
js
xor
scas
add
lcall
ja
inc
shlb
scas
divb
push
pop
lods
divb
das
shll
cwtl
scas
pop
js
pop
scas
push
adc
in
lods
pop
adc
adc
das
pop
scas
or
and
fs
pop
test
pop
mov
adc
scas
sub
sub
outsl
int3
xchg
or
pop
orb
sbb
mov
stos
pop
addl
pop
mov
scas
dec
push
add
aas
adc
pusha
scas
iret
leave
repz
xchg
or
add
arpl
cli
jecxz
or
js
jp
inc
call
sbb
mov
mov
inc
pop
fnstenv
popf
lock
mov
lret
sbb
or
add
fisubl
or
inc
aaa
jmp
in
orb
js
or
jo
lock
out
int
adc
jg
push
mov
or
jo
jns
inc
mov
inc
xor
loopne
mov
bound
lret
popl
fdivrs
pop
aas
ret
mov
call
clc
jmp
or
cmp
add
pop
jbe
and
jae
scas
jg
or
popa
in
mov
mov
jo
cmp
or
xchg
mov
xor
pop
test
or
dec
outsb
and
movsb
or
aaa
cmp
or
or
mov
xchg
dec
or
sbb
or
lods
lea
shr
pusha
in
pop
xlat
pop
or
js
pusha
xchg
mov
or
or
dec
imul
or
ja
xchg
add
ss
add
jg
or
inc
cmp
or
mov
add
or
push
add
imul
mov
mov
lahf
xor
sbb
xchg
xchg
mov
inc
mov
add
pop
push
mov
iret
xlat
into
mov
pop
and
sbb
ret
or
adc
and
push
loop
scas
popf
movsb
mov
jo,pt
pop
jge
or
or
loopne
or
pop
or
push
xor
mov
iret
icebp
sahf
mov
punpcklbw
insl
pop
pop
monitor
and
add
daa
or
adc
les
or
daa
ror
adc
dec
dec
add
cs
dec
adc
dec
adc
out
aas
sbb
pusha
popl
sub
ss
pop
mov
sbbb
sbb
addl
cwtl
outsb
adc
pop
sahf
daa
cmpsb
frstor
xor
mov
mov
ficoml
mulb
lock
mov
pop
and
lock
and
add
and
xchg
addb
nop
add
pop
mov
movswl
and
ja
or
in
mov
adc
jo
push
shr
ja
jo
ja
into
xchg
mov
add
or
xor
movb
pop
or
into
jg,pt
and
popf
hlt
mov
inc
lcall
add
adc
add
jp
aaa
mov
cld
pop
sbb
xor
lea
insl
push
inc
ret
jo
xchg
pop
add
push
stc
addb
rorb
cmp
mov
lea
jb
xor
jb
sbb
rdpmc
add
pop
loop
or
push
stos
popl
ud0
out
mov
lock
pusha
dec
cmpsb
outsl
cmp
nopl
movb
mull
addb
jno
dec
sahf
add
nopl
xor
dec
in
jnp
mov
pusha
or
out
repz
idiv
or
and
testl
mov
cmp
je
ret
jle
scas
dec
and
negb
inc
and
sbb
push
push
lret
movl
outsl
mov
scas
clc
adc
data16
pop
mov
mov
pop
popl
xor
push
jg
or
ja
sbb
out
sahf
or
push
pop
add
fldl
lret
xchg
pop
iret
pop
pop
sub
push
divb
fdivrl
pop
fistps
push
cmp
jne
outsl
inc
pop
fiadds
addr16
fdivl
ficoms
sbb
sahf
xchg
cmp
mov
sarl
addr16
mov
aas
loopne
mov
jg
adcl
rcr
ja
inc
fisttps
sub
fdivs
rcrl
and
pop
clc
sbb
pop
cmpl
and
mov
inc
dec
shlb
push
jae
pop
mov
add
negl
pop
mov
dec
das
fisubrl
insl
xor
sbb
mov
ja
fisubrs
and
pop
das
into
mov
fildl
dec
outsb
jnp
gs
mov
mov
mov
das
jg
add
pop
jge
outsl
mov
fidivrs
mov
push
dec
push
das
fwait
sbb
out
mov
jbe
popa
ljmp
mov
mov
outsl
popa
das
repz
mov
addr16
popa
das
imull
lock
popa
pop
nop
mov
outsl
popa
das
jg
pop
fildl
das
pop
das
jg
ss
mov
out
mov
sbb
fcmovnb
inc
movups
sub
push
pop
add
sbb
das
mov
negl
add
sub
popa
int
lea
jmp
sbb
push
and
das
mov
xchg
push
sbb
pop
jg
sub
insb
icebp
dec
jb
divb
out
xor
xchg
das
repz
test
mov
pop
clc
pushf
and
mov
dec
sbb
sbb
mov
push
subl
arpl
pop
sub
mov
mov
mov
in
and
mov
insl
adc
out
jmp
mov
das
fwait
adc
add
daa
aas
add
incl
adc
pusha
xor
mov
push
pop
inc
mul
jmp
push
xchg
cltd
daa
or
je
sub
sub
add
jns
jae
push
push
dec
ds
jl
sub
mov
frstor
stc
repz
or
dec
xchg
and
cs
repnz
or
xacquire
cwtl
or
or
inc
jo,pt
loopne
outsl
pop
arpl
and
push
pop
mov
push
sbbb
dec
mov
ret
ret
sbb
orb
cmovo
repnz
loopne
mov
loope
dec
push
bound
jnp
cwtl
xchg
sbbb
aaa
das
xchg
push
inc
add
cmp
or
lock
push
pop
adcb
jg
jg
mov
and
movlps
insl
mov
leave
jp
jo
add
idivb
fcoms
fs
mov
add
inc
dec
or
std
idivb
add
or
mov
xchg
and
pop
popa
lods
fildl
sub
or
stos
mov
pavgw
add
pop
push
pop
pop
out
mov
xor
bound
add
xorb
xor
inc
sbb
jmp
inc
xchg
xorl
cmp
hlt
ss
out
jge
int
dec
add
outsb
cmc
aaa
add
out
cmp
add
jne
add
mov
dec
dec
stos
xchg
ljmp
dec
daa
add
push
xor
out
xchg
imul
dec
dec
pushf
fsubrs
daa
pop
pop
push
bound
push
imul
int3
scas
push
push
cmp
inc
xor
cld
pop
gs
dec
nop
lret
leave
leave
pop
add
dec
pop
sahf
out
add
pop
fcmovnbe
data16
push
push
cmpsl
fcoml
sbb
xchg
add
push
mov
push
inc
adc
xor
idiv
ficomps
or
cmpb
pop
add
push
xor
jne
push
out
mov
push
mov
mov
mov
sbb
xchg
and
mov
out
xor
add
stc
add
roll
imul
rcl
xchg
movl
or
outsb
js
mov
dec
sub
jbe
dec
push
push
cmp
sbb
xlat
cmpsl
mov
notl
add
add
dec
mov
add
loop
sub
push
or
sub
push
popa
pop
add
and
cmp
iret
xor
ljmp
ss
decl
and
xor
push
mov
pop
fisttpll
shl
scas
or
and
test
inc
fistps
addr16
and
addl
sub
mov
aas
testb
loopne
adc
and
xchg
push
add
cmp
into
inc
dec
vzeroupper
iret
xor
testb
dec
jns
pop
push
cli
stos
push
cmpl
ret
inc
add
pushf
dec
pop
mov
jbe
fs
xchg
jne,pt
mov
xchg
dec
dec
lret
jae
cmpsl
add
shll
testl
jo
stos
mov
mov
xor
inc
add
pop
dec
add
insb
push
pop
mov
mov
jo
aas
jbe
out
sbb
xor
xchg
sub
ljmp
testl
out
pop
add
jns
add
xchg
sbb
je
dec
imul
jb
xchg
push
imul
testl
jbe
lds
cld
sub
gs
cltd
sub
lcall
pop
and
ja
jle
inc
pusha
div
lret
pop
sbbb
sbb
push
pop
push
mov
push
popa
ljmp
sbb
shld
sbb
in
cmpb
push
aam
das
and
repnz
cs
imull
dec
cmp
das
pusha
or
xchg
mov
aad
inc
lock
call
adc
inc
pop
jbe
mov
mov
mov
inc
or
jo
or
cmpsb
fsts
jecxz
mov
or
add
out
cmpl
push
xlat
dec
roll
arpl
shlb
ret
cmp
jp
mov
mov
shl
andb
xchg
xchg
iret
push
rorb
mov
pop
addr16
enter
push
int3
push
sub
addb
and
sbb
cmp
push
adc
fists
xor
inc
push
jb
mov
and
inc
inc
sti
push
and
dec
mov
xchg
stos
add
ds
mov
lods
jecxz
jg
lahf
jmp
xchg
push
jg
es
fsubs
xchg
cltd
sbbb
ret
movsl
pusha
xchg
or
lcall
ficompl
test
int
jnp
loope
or
pop
inc
push
push
sbb
cwtl
jmp
jp
call
sbb
inc
add
push
jle
cmp
add
or
insl
mov
iret
imul
or
sar
and
lods
sub
fbstp
in
sub
pop
xchg
inc
enter
or
pop
loop
pop
mov
add
pop
adc
xchg
or
pop
mov
mov
cmp
hlt
pop
ret
repz
addr16
nop
les
cmp
pop
pop
and
jle
daa
push
jno
loopne
inc
ds
adc
es
inc
addr16
sub
rep
adc
push
decl
arpl
push
das
or
testl
das
xlat
add
cmp
mov
outsl
pop
jo
mov
lcall
outsl
dec
jb
and
add
addr16
fs
fwait
push
sub
jmp
sbb
ret
rcll
stos
sbb
pop
sahf
aaa
adc
enter
or
out
xchg
push
xchg
push
leave
sbb
inc
icebp
jg
push
cmp
jle
mov
cli
loop
test
mov
or
daa
add
push
insb
test
jns
jb
xchg
pop
enter
push
dec
mov
dec
jge
fs
sbbl
cmp
xchg
inc
push
pop
xchg
push
fsubp
sub
cs
test
fstl
or
hlt
sbb
ret
mov
fisttpl
int
and
mov
sub
popa
dec
pop
mov
mov
mov
mov
push
out
adc
inc
xchg
scas
mov
jbe
jbe
inc
cmp
in
rorb
mov
add
xchg
push
jge
adc
lock
movsl
outsl
xor
add
xor
jg
add
outsb
icebp
pusha
xchg
imul
pop
jb
dec
repz
or
or
into
add
inc
pop
data16
fnclex
loope
sub
sub
loopne
pop
push
clc
cmp
dec
sub
push
ret
icebp
mov
cmp
xchg
iret
test
mov
xchg
pop
or
push
sbb
sub
add
movsb
bound
adc
inc
jnp
jl
jle
das
adc
add
add
cmpsb
ss
ror
mov
outsb
push
aad
jbe
sub
test
push
mov
push
sahf
insb
mov
aaa
xchg
mov
xchg
in
dec
cmpsb
out
mov
xor
dec
gs
cmpb
pop
sbb
xor
mov
fcompl
movsl
cmp
cmp
push
sub
daa
add
out
pop
ficompl
shr
pop
lret
jp
dec
jp
cmpsl
sub
pushf
sub
inc
scas
jae,pn
mov
lret
push
cmpb
pop
ljmp
mov
nop
xchg
sbb
mov
pop
and
add
xor
push
addb
inc
std
push
orb
push
call
cwtl
lcall
jns
xchg
jbe
adc
clc
jbe
push
and
mov
cmpsb
push
push
xor
incl
imulb
rorb
lcall
fildl
sbb
shlb
pop
xchg
mov
push
bound
std
nop
mov
add
xchg
das
jle
sub
bound
xchg
imul
mov
and
fimuls
mov
inc
mov
mov
add
mov
xchg
fisubl
pop
pop
cmp
sbb
rcll
cmpsb
subb
das
inc
jl
mov
sub
dec
ja
cli
xchg
fiaddl
xchg
mov
insb
movd
mov
and
imul
and
or
or
hlt
xchg
xchg
imul
nop
outsb
push
pop
dec
movhps
pop
mov
aaa
jo
cltd
scas
mov
es
and
nop
jmp
bound
arpl
cli
pop
xor
pop
xor
ss
fdivs
in
pop
addr16
add
test
gs
push
jae
lea
pop
das
cmp
push
mov
mov
jp
cmp
sbb
and
lret
leave
ficoms
xchg
mov
push
push
out
lea
xchg
inc
ss
sub
inc
push
test
aas
and
js
jbe
lcall
outsb
xchg
pop
stc
pop
xor
mov
inc
das
mov
mov
or
stos
int
cmp
push
dec
mov
ss
enter
push
or
ljmp
sti
fidivrl
notb
mov
rcll
jne
push
or
jecxz
arpl
mov
push
sub
sbb
or
data16
jns
daa
mov
xor
lret
and
mov
dec
or
js
mov
nop
mov
das
inc
test
xchg
arpl
xor
fisubs
cmp
lock
push
movsb
rol
jb
scas
out
adc
ret
sbb
pop
addr16
jle
or
pop
das
outsl
push
add
inc
cmp
das
mov
pop
test
cmp
pop
cwtl
or
outsl
mov
jbe
push
xor
fnstsw
sub
adc
sti
pinsrw
js
add
addb
pop
imul
lret
cmp
add
sahf
adc
push
out
sub
pop
sbb
out
push
cli
pop
orl
dec
add
in
lahf
or
push
xchg
xor
cmp
rcll
orb
lret
pusha
add
das
pop
movsl
bound
sbb
xchg
stos
dec
fisttpll
add
ds
add
jb
xchg
out
push
jbe
out
jp
sbb
scas
sbb
arpl
or
push
inc
nop
xor
repnz
and
subl
ds
jmp
jo
ret
mov
mov
vphaddbd
popaw
mov
or
test
and
jmp
push
or
add
pop
and
test
xchg
inc
mov
sub
add
out
popa
loope
add
jae,pt
stos
mov
add
sub
in
sub
popf
std
inc
and
sbb
add
xor
test
mov
add
lods
inc
inc
add
xchg
xchg
push
jecxz
ljmp
pop
or
adc
inc
mov
inc
push
add
mov
sbb
punpcklbw
pop
add
pushf
andl
push
sbb
inc
in
jmp
in
outsb
fisubrl
jl
mov
push
xor
or
or
add
in
ret
mov
lock
sbb
mov
pop
inc
dec
test
in
mov
outsl
adc
mov
mov
or
mov
inc
and
fs
or
imul
push
rclb
or
daa
inc
and
out
mov
dec
dec
stos
cs
out
or
and
loope
mov
orb
add
movsl
mov
aaa
or
pop
int
jbe
jg
sub
imul
push
ret
rolb
jae
das
xchg
or
loopne
loop
addr16
dec
lcall
sub
mov
ja
push
jne
popa
jp
loop
pop
pop
arpl
jb,pn
cs
push
cmp
jle
mov
add
mov
fildl
inc
call
pop
adc
pusha
pop
lcall
xor
xor
xor
xor
enter
xor
xor
mov
xor
xor
xor
xor
mov
aaa
sahf
aaa
divb
add
aaa
cmp
push
cmp
insb
cmp
xchg
push
incl
xor
xor
xor
or
inc
pop
cmp
cmp
cmp
cmp
cmp
jg
cmpb
cmp
cmp
cmp
push
cmp
xchg
cmp
cmp
cmp
call
pop
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
adc
dec
mov
movsl
ds
fnstsw
call
aas
inc
aas
cmpb
xchg
cmc
les
xor
xor
xor
mov
xor
xor
dec
xor
push
xor
xor
mov
xor
or
pushl
xor
pop
xor
jp
xorb
xor
pushl
xchg
divl
and
xor
xor
push
xor
xchg
ss
ss
aaa
cwtl
pushl
mov
cmp
cmp
push
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
movsb
ds
lret
adc
aas
pop
aas
test
fidivl
sbb
cmp
jno
sbb
cs
addr16
xor
lahf
aas
xor
outsb
xor
jae
xchg
xchg
shll
xor
xor
clc
ljmp
xor
xor
or
push
xor
xor
xor
xor
loop
scas
xor
in
xor
pushf
aaa
jmp
inc
jmp
jnp
xchg
sub
cmp
lcall
cmp
pop
ds
mov
clc
jmp
idivb
sahf
xchg
xor
aam
cs
xor
shll
xor
xorb
inc
xor
lret
xor
xchg
mov
mov
aaa
mov
test
add
or
cmp
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
ljmp
xor
cmp
cmp
push
cmpl
and
loop
mov
imul
xchg
cmp
cmp
cmp
cmp
cmp
mov
mov
cld
mov
sub
inc
aas
xchg
aas
js
cmp
repz
xor
xor
inc
xor
dec
xor
xor
cmp
cmp
sub
mov
cmp
cmp
cmp
cmp
cmp
xchg
add
cmp
insl
cmp
adc
ds
loopne,pt
inc
aas
add
inc
aas
lret
aas
sarb
fidivrl
or
add
xor
xor
cwtl
cmp
cmp
cmp
cmp
dec
arpl
clc
cmp
push
sub
nop
add
pop
lock
xor
in
xor
jns
test
sbb
dec
xor
xor
xchg
xor
int3
aaa
shlb
aam
fdivs
fdivl
loopne
in
repz
or
mov
idivl
xor
inc
cmp
mov
xor
push
cmp
cmp
cmp
mov
cld
fbstp
out
add
jge
xchg
xor
dec
xor
hlt
lcall
adc
sbb
jae
mov
mov
stc
xor
xor
xor
xor
xor
xor
jge
xorl
lcall
cmp
sarl
cld
cmp
sar
jg
cmp
cmp
add
cmp
sub
xchg
mov
jle
cwtl
aas
mov
test
decb
cmpsb
xor
jle
ja
cld
xor
xor
ljmp
adc
sbb
inc
dec
add
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmpsl
xor
in
xor
xor
add
out
repnz
push
or
cmp
cmp
or
test
aaa
inc
clc
int3
ds
ds
ljmp
stc
aas
incl
and
xor
push
xor
xor
xor
xor
inc
aaa
push
aaa
popa
aaa
insb
aaa
lea
xchg
out
cli
jg
lock
add
push
cmp
cmp
xchg
mov
mov
repnz
outsl
cmp
dec
cmp
cmp
cmp
cmp
cmp
or
aas
addr16
aad
rcl
or
fwait
add
add
sbb
xor
in
clc
in
cmp
cmp
out
dec
cmp
cmp
dec
std
xchg
xor
lahf
and
dec
xor
xor
xor
xor
xor
cli
xor
and
xor
xor
aad
aaa
sub
push
xor
pop
xor
push
outsl
xor
add
xor
jle
xorl
jbe
xor
xor
cmp
mov
shll
xor
xor
xor
cmpsb
out
cld
jg
divb
xor
xor
xor
xor
xor
xor
or
xor
pop
xor
cli
mov
xor
xor
mov
nop
xor
call
jp
mov
xchg
shll
pop
aaa
mov
cmp
jg
ja
cmp
xchg
cmp
cmp
adc
sahf
cmp
cmp
outsl
cmp
cmp
scas
add
cmp
cmp
clc
mov
into
cmp
loop
in
cmp
clc
cmpsl
pop
xor
adc
sbb
pop
dec
sub
xor
ss
ret
ds
ds
ds
ds
ds
ds
jl
cmpl
ljmp
mov
mov
ds
dec
ds
fistpll
in
ljmp
ds
or
adc
sbb
and
daa
aas
sub
ljmp
dec
aas
push
aas
push
aas
pop
aas
pop
aas
data16
insl
aas
decl
lock
aas
cmpb
aas
nop
aas
xchg
aas
push
test
aas
mov
icebp
inc
aas
lret
aas
aam
fstpt
loope
out
jmp
lock
idivl
cs
push
mov
or
adc
sbb
and
or
scas
out
jle
xor
xor
nop
xor
jle
addr16
xor
pop
xor
addr16
push
mov
pop
mov
nop
xor
incl
mov
mov
mov
xor
xor
xor
xor
xor
xor
jp
inc
lods
sahf
adc
xor
icebp
scas
es
xor
and
xor
test
mov
jo
daa
ret
dec
xor
mov
dec
mov
push
xor
xor
xor
jle
push
sub
and
jp
mov
add
xor
add
leave
cmp
dec
cmp
cmp
cmp
hlt
sbb
aas
xor
xor
aas
cmpsb
aas
jg
jg
xor
das
out
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
mov
aas
and
and
aas
pop
pop
mov
adc
test
jl
push
push
or
xor
xor
inc
xor
cs
xor
ds
ja
mov
subb
xor
push
inc
lock
out
mov
aaa
loop
jmp
pop
cmp
cmp
cmp
jae
xchg
cmp
cmp
cmp
lock
xchg
cmp
cmp
cmp
cmp
pop
or
mov
cmp
cmp
xchg
js
outsl
pop
sub
cmp
cmp
lock
incb
stos
xor
xor
scas
scas
jg
aaa
mov
aaa
inc
cmp
push
cs
cmp
cmp
ret
push
cmp
jl
test
mov
lcall
nop
cmp
mov
cmp
cmp
sarb
cmp
cmp
cmp
fdivrs
fdivrl
loopne
in
call
cli
add
lock
cmp
cmp
out
cmp
cmp
pop
std
incl
cmp
lahf
cmp
cmp
into
sub
pop
dec
orl
sbb
xchg
popa
xlat
aas
lds
out
xor
xor
outsl
pop
mov
add
xor
aaa
jle
xchg
cmp
ret
loopne
push
ret
cmp
cmp
loope
and
pop
xchg
add
sarl
and
ljmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
mov
pop
add
pop
cmp
mov
rcrl
notb
cmp
xor
jge
xchg
xor
xor
xor
xor
adc
pop
jmp
xor
sahf
fs
and
dec
ss
push
aaa
out
aaa
adc
sbb
sub
pop
cmp
cmp
cmp
out
cmp
cmp
cmp
dec
clc
jmp
cmp
pop
cmp
cmp
aam
out
cmp
lcall
or
cmp
jge
inc
fstpt
out
je
loop
inc
adc
push
push
pop
cmp
pop
push
sbb
xor
cli
loope
pop
addb
ret
push
xor
fs
icebp
or
inc
mov
arpl
xor
xorb
and
inc
mov
xchg
cld
add
sub
andb
call
jbe
cmc
aaa
cmpl
lds
jg
sarb
add
pop
cmp
cmp
cwtl
cmp
test
lods
clc
or
mov
cmp
push
fidivrl
hlt
dec
sbb
aas
clc
aas
cld
fbld
sti
mov
xor
adc
add
cmp
mov
jno
inc
popf
pop
xor
lret
xor
xor
xor
xor
cmp
cmp
jmp
inc
push
xor
xor
xor
xor
loope
jl
xor
jl
test
mov
ljmp
mov
xor
dec
aad
fists
outsb
ss
arpl
jae
mov
pop
aaa
das
aaa
mov
sahf
cmp
pop
jge
cmp
push
sbb
push
sarb
loop
js
inc
adc
xor
fmull
push
xor
mov
adc
lock
xor
cmp
call
roll
loope
xor
movsb
mov
notb
jmp
or
and
jp
cmpb
cmp
add
cmp
inc
cmp
into
or
xchg
cmp
xchg
cmp
cmp
orb
jl
xchg
adc
les
int3
outsb
ret
loope
push
sbb
or
xor
data16
xor
xor
xor
cli
scas
xor
xchg
xorb
shl
and
lds
filds
add
dec
xor
jnp
xor
ret
mov
dec
cmp
lods
fimuls
loope
dec
insb
push
cmp
cmp
dec
jg
out
mov
fnstcw
jmp
mov
cmp
std
fists
xchg
mov
cmp
rorb
inc
ds
loopne
fwait
icebp
jne,pt
mov
aam
daa
aas
push
aas
cmpl
mov
push
push
ljmp
rorl
pop
andl
loop
lock
mov
add
xor
or
lock
xchg
push
xor
fidivrs
call
icebp
cmc
cmp
pop
xchg
cmp
cld
scas
and
cmp
cmp
cmp
pushf
ds
adc
in
adc
jae
or
xchg
out
xor
mov
dec
xor
pop
mov
lock
lahf
aaa
movsb
mov
aaa
mov
mov
mov
aaa
mov
aaa
enter
in
cmc
or
test
hlt
aaa
clc
aaa
cld
out
add
or
or
ljmp
pop
sub
sbb
sbb
and
and
dec
cmp
les
lret
cmp
cmp
cmp
cmp
jg
lea
xor
pop
push
cmp
and
sub
dec
clc
es
xor
xor
cmp
sbb
sub
clc
cld
ds
aas
repz
mov
xor
xor
xor
inc
std
xor
mov
inc
xor
xor
xor
xor
test
push
dec
mov
inc
xchg
aaa
mov
jle
decb
cmp
inc
cmp
xchg
adc
sub
add
das
push
pop
out
shlb
out
xor
clc
lahf
xor
xor
movsb
xor
xor
testb
sahf
xor
mov
cmp
cmp
cmp
jp
mov
mov
cmp
aad
fst
pop
sahf
ret
ja
push
cmp
cmp
cmp
jecxz
cmp
in
xchg
sbb
xchg
ds
cld
add
ja
push
xor
jg
jmp
scas
aas
xor
nop
xor
xor
add
xor
test
incl
mov
cs
push
cmp
cmp
fbld
sarb
jns
icebp
cmp
imul
outsl
add
pop
push
mov
imul
xor
pop
sub
cmpsl
inc
mov
cli
xor
xor
xor
xor
clc
mov
push
xor
sti
ss
adc
das
cmp
jb
outsb
inc
add
rcll
cmp
xor
cmp
mov
cmpsb
mov
jmp
inc
mov
hlt
hlt
xor
sub
lcall
inc
xor
xor
aad
divb
je
std
adc
xor
xor
lahf
inc
jno
call
xor
xchg
ss
dec
pop
aaa
outsl
clc
ljmp
cmp
insb
cmp
cmp
cmp
fdivrl
jecxz
out
shrb
cmp
xchg
cmp
cmp
cmp
mov
inc
scas
mov
fnstcw
dec
dec
lcall
mov
clc
cmp
xchg
xorb
ret
ds
into
xor
aas
and
cmpl
xor
imul
lods
xor
xchg
jle
mov
leave
xor
mov
cld
pushl
or
lods
xor
xor
jecxz
cld
xor
lods
adc
ds
mov
xor
stos
xor
jl
ss
cmp
stos
cmp
adc
lahf
cmpsl
js
mov
fidivs
xor
mov
cld
and
xor
xor
pop
movsl
add
lret
dec
lret
pop
mov
mov
loop,pn
cmp
arpl
xchg
pop
test
cmp
fsubrl
ret
adc
mov
ds
dec
lods
mov
enter
push
pop
xor
jg
repnz
xor
xor
inc
xor
sub
decl
ficompl
xor
xor
xor
push
sub
jb
jg
cmpsb
xor
test
mov
mov
out
sbbb
cmp
cmp
jge
lcall
xchg
out
into
xor
aas
call
xor
sbb
xchg
ss
int
jp
div
aaa
and
mov
ds
adc
push
cmpl
xor
xor
ds
mov
fmull
std
jg
adc
outsl
xor
xor
xor
ja
inc
dec
mov
xor
xor
xor
push
cli
incl
push
jmp
cmp
pop
ds
cs
data16
mov
adc
mov
test
lar
sub
add
sbb
xor
xor
xor
push
shlb
xor
xor
xor
cli
ja
loop
mov
lret
inc
shll
sub
cmp
std
inc
xchg
xchg
sbb
xor
ss
inc
mov
mov
js
jg
jg
incl
cmp
sub
inc
cmp
cmp
repz
rorl
test
mov
pop
xor
xor
ds
xor
or
xor
les
xchg
aaa
xor
fsts
add
roll
and
xor
test
xor
mov
jb
rolb
sbb
cmp
test
xor
dec
mov
ljmp
daa
ss
ss
pop
aaa
add
out
sub
loop
mov
cmp
cmp
dec
rcll
and
push
lcall
aas
out
fistpll
xor
mov
xor
fidivs
dec
xor
sbb
xor
mov
mov
mov
ss
scas
mov
push
fidivrl
incb
cmp
stc
cs
cmp
orb
les
add
adc
adc
sbb
inc
jmp
inc
xor
xor
xor
sbb
subb
sub
stos
aaa
pop
fisubrs
jle
lret
cmp
cmp
cmp
jle
push
xlat
and
cltd
cs
cmpsb
outsl
mov
xchg
xor
xor
inc
xchg
jns
mov
cmp
outsl
cli
aaa
inc
cmp
jo
test
cmp
jb
pop
cmp
push
lea
out
sub
out
sbbb
add
add
xor
xor
xchg
shl
shlb
pushf
xor
pop
jo
mov
pop
xor
mov
cmpsb
movsb
cmp
cmp
pop
add
cmp
cmp
and
mov
data16
add
xor
adc
sub
stos
inc
pusha
xor
dec
pop
imul
xor
mov
xor
xchg
push
lods
aaa
leave
aaa
jmp
or
and
dec
cmp
adc
lds
jp
cmp
cmp
into
xchg
call
into
stos
cmp
lret
cmp
insb
js,pt
test
mov
hlt
aad
fcmovu
cmp
xchg
lock
xchg
mov
xor
and
dec
xor
addl
into
push
mov
hlt
adc
cmp
mov
out
cs
add
adc
or
sbb
dec
sub
mov
stos
mov
shlb
clc
or
pop
xchg
cmp
cmp
jne
fldl
cmp
pop
cmp
cmp
add
aaa
loop
push
or
sbb
xor
xchg
pop
xor
xor
inc
xor
ss
ss
ss
js
aas
push
sbb
jns
inc
cmp
dec
jo
scas
cli
push
cmp
pop
cmp
cmp
jo
cmp
inc
jg
jp
cmp
inc
cmp
std
cmp
test
aam
sub
and
mov
sbb
push
fdivl
push
xor
xchg
aaa
out
adc
decb
lret
cmp
cmp
dec
push
loope
dec
mov
or
cltd
xor
es
ret
add
idivb
stos
pop
mov
into
aaa
fisttps
or
cmp
jae
push
mov
iret
adc
sub
push
movq
movsl
cmp
pop
daa
in
sarb
aas
cmp
pop
cmp
mov
out
cmp
rcl
js
cmp
cmp
out
mov
test
xchg
jo
lock
cld
aas
push
aas
xchg
mov
inc
rolb
test
int
sub
ret
xor
xor
xchg
mov
enter
xchg
or
stos
lock
xor
jb
lret
mov
shll
xor
sbb
push
ss
aaa
loopne
test
inc
scas
inc
xor
loopne
pop
sar
cmp
cmp
cli
or
jns
xorl
movsl
cmpsb
push
es
out
mov
outsb
loop
cmp
aas
movsb
mov
bound
je
mov
xor
xor
es
xor
xor
orb
call
pop
xor
lcall
pop
xor
int3
mov
lcall
mov
xor
outsl
mov
lahf
cmpsb
mov
cmp
cmp
aam
add
mov
push
adc
pop
cmp
call
repnz
cmp
pop
xor
inc
or
cmp
mov
iret
cmp
pop
mov
cmp
cmp
cmp
inc
cmp
jg
xchg
stos
mov
addb
ret
lcall
cmp
cmp
jbe
cmp
cmp
call
stos
mov
pop
cmp
jns
cmpb
arpl
cmp
add
mov
ds
addr16
ds
call
cli
push
aas
pusha
aas
push
js
cmpsl
repnz
outsl
xor
inc
jo
xchg
cmp
mov
lcall
xchg
mov
loopne
jg
mov
xor
xor
xor
mov
ret
pop
mov
xor
xor
stos
out
xor
ret
and
inc
xor
aas
aad
outsl
push
imul
xor
sub
inc
xchg
add
ss
rol
ss
ss
aaa
mov
push
sarb
jecxz
sbb
add
pop
mov
call
xor
xchg
xor
cmpsb
cmp
pop
fildll
test
lods
and
and
cmp
imul
aas
mov
leave
out
call
adc
sub
mov
mov
pop
add
xor
xor
xor
pop
xor
stos
or
mov
leave
bound
pusha
rcrl
bound
xor
cs
movsb
mov
fwait
ds
mov
sub
cmp
cmp
lret
dec
cmp
cli
inc
jne
aad
add
pop
scas
or
scas
adc
adc
pop
push
mov
lret
sahf
cmpsl
jmp
mov
jge
xor
xor
cmpsl
add
sbb
inc
dec
aas
push
filds
ljmp
xor
mov
xor
or
or
xchg
pop
or
ret
jb
sahf
lock
ss
scas
cwtl
ss
mov
pop
test
lods
fidivs
shlb
fwait
dec
lret
shlb
aam
fdivl
loopne
stos
fcmovnbe
ss
in
cmp
add
cmp
jno
inc
cmp
cmp
mov
aas
inc
outsb
je
movsb
jle
xchg
push
adc
aaa
mov
xor
sub
insl
inc
xchg
dec
scas
cmpsb
ds
xchg
mov
cmp
in
xor
nop
xor
xor
lcall
cltd
adc
push
in
add
sbb
das
xchg
inc
jne
sub
jae
mov
icebp
cmp
push
cmp
mov
push
xchg
mov
aas
jb
rclb
xor
outsl
cmpsb
icebp
mov
or
sub
push
xor
jbe
and
inc
xor
nop
jmp
pop
xor
xor
xor
xor
xchg
and
mov
push
mov
aaa
dec
aaa
pop
aaa
bound
cmpsl
aaa
mov
mov
pop
ljmp
std
cmp
cmp
jmp
push
cmp
stos
mov
cmp
sbbb
sarl
ds
push
ss
rolb
repz
sbb
mov
xor
adc
lcall
jmp
aaa
xorb
aaa
daa
mov
scas
imul
cmp
das
movb
cmp
cmp
cmp
loop
rclb
ds
mov
cmpsl
scas
adc
dec
loop
aas
lock
add
rcrb
daa
pop
shlb
faddl
in
in
xor
inc
test
cmpsb
jge
lcall
cmp
loope
push
cmp
lcall
cmp
cmp
test
xchg
cmpsl
xor
movsl
sbb
push
shlb
ss
adcb
lcall
ficompl
add
leave
mov
fiadds
sbb
xchg
cmp
push
push
xor
xor
xor
xor
xor
cmp
cmp
add
sbb
xor
lret
daa
cmp
inc
xor
ficoml
aaa
cmp
jg
cmpsb
leave
aaa
xlat
aaa
fnsave
clc
mov
cmp
cmp
cmp
push
dec
sbb
loop
add
sub
and
cmp
loop
fwait
aaa
cmpsb
outsb
sbb
sarb
ret
dec
cmp
jle
xchg
and
xchg
shll
stos
ds
push
loopne
cmpsb
pop
aas
jl
xchg
loopne
js
ss
iret
or
cli
mov
jmp
sbb
fs
push
pop
jo
je
mov
mov
pusha
lods
mov
adc
xor
jo
icebp
dec
rorb
sub
cmp
adc
mov
cs
push
jle
mov
pop
ds
sub
xchg
sbb
test
inc
aaa
rcrb
aaa
cmp
inc
scas
iret
cmp
lock
mov
push
add
pop
cmp
cmp
je
lret
imul
ret
aas
sarl
out
clc
cmp
push
xor
std
pop
mov
jg
leave
push
loop
mov
inc
out
pop
xor
adc
jge
test
jae
lock
mov
data16
and
outsl
aam
dec
loop
or
hlt
xor
cmp
pop
filds
xchg
out
or
out
rclb
jp
loop
or
xor
addl
xor
icebp
int
outsb
divb
and
sub
cwtd
cmp
cmpsb
xor
cmpsl
xchg
cmpsb
jp
test
loope
sub
rcrb
lock
dec
cmp
cmp
pop
decl
cmp
cmp
xchg
xchg
shll
add
cmp
cmp
inc
cmp
sub
aas
outsb
out
mov
inc
xchg
fcmovb
mov
mov
rolb
imul
xor
xor
xor
jle
mov
cmpsb
mov
xor
sub
xor
xor
mov
pop
out
dec
or
push
gs
test
mov
jo
iret
test
sarb
fdivrs
fdivr
sub
xlat
cmp
mov
push
xorb
cmp
pop
pop
mov
lcall
cmpb
cmp
cmp
jmp
xchg
push
cmp
cmp
ds
shll
sahf
fisubs
cmp
inc
or
rcll
fcompl
xor
or
pop
xorb
xor
jle
xchg
xor
outsb
pop
outsb
pop
je
lods
mov
mov
out
adc
movsb
xor
out
adc
xor
xor
js
push
add
lds
not
pop
pop
add
mov
mov
cmp
sbb
dec
std
cmp
sbb
sbb
imul
cmp
xchg
sbbb
out
test
test
cld
mov
xchg
test
rorl
sub
mov
cs
pop
or
cmp
cmp
cmp
push
test
lock
sub
sub
sbb
dec
mov
adc
fbld
add
fisttps
mov
xor
mov
sub
lcall
push
divl
dec
cmp
inc
ss
bound
push
cmp
ret
out
js
mov
aaa
mov
aaa
inc
mov
add
lret
xchg
jle
jb
pop
cmp
pop
cmp
mov
roll
sub
cmp
xor
jnp
mov
cmp
cmp
or
test
andl
xor
daa
stos
rcrb
xchg
jb
scas
push
movsl
outsb
push
or
xchg
push
xor
add
jne
jl
addb
inc
mov
or
scas
add
mov
push
push
loop
pop
mov
xchg
adc
and
cli
cmpsl
or
xchg
aad
repnz
clc
test
ss
pop
movsl
mov
xor
xor
xor
xor
xor
xor
fdivs
xor
test
adcb
xchg
xor
test
fsubrl
clc
xor
subb
lock
aaa
dec
aaa
or
jns
lods
push
out
aaa
das
rcr
mov
push
cmp
jns
mov
xchg
cmp
rcll
push
cmp
fistpll
out
cmp
cmp
iret
cmp
cmp
push
outsl
adc
arpl
cmp
cmp
cmp
call
ret
cmp
xlat
cmp
adc
sbb
or
add
inc
ds
mov
sub
jl
scas
jb
cmp
inc
je
add
jle
sbbl
scas
fdivrs
fistpll
and
repnz
aaa
rorb
lea
inc
xor
jbe
xchg
xor
ret
pop
sub
xor
xor
stos
jo
sub
sub
inc
frstor
pop
mov
cmp
fbld
inc
cmp
data16
mov
stos
add
jb
cmp
jo
pop
pop
fbstp
push
jp
mov
xor
mov
movsl
cs
pop
lcall
mov
cmpsb
out
sub
insb
push
add
mov
dec
xor
mov
jne
ds
insb
idiv
xor
aam
add
cmp
xchg
xchg
pop
call
xor
xor
add
mov
xchg
mov
mov
xor
xor
xor
xor
fmulp
clc
push
lods
xchg
mov
loope,pn
jmp
push
mov
cs
into
inc
xchg
mov
lds
fdivrp
xor
test
sarb
decl
in
ss
ss
aaa
sbb
sub
jmp
lock
dec
inc
addl
xor
and
add
pop
adc
push
std
jg
xor
xor
xor
pop
xorb
xchg
xor
xor
cmpsb
js
push
loopne
xor
sub
bound
bound
sbb
push
decb
cmp
aas
cmp
push
cmp
data16
ds
inc
mov
cmp
shrb
out
cli
data16
cmp
pop
cmp
test
addl
mov
jbe
cmp
push
mov
ds
jp
xlat
mov
xchg
mov
sbbb
inc
lods
aad
pop
sbbb
add
cmc
shll
push
jg
xor
xor
cmp
ja
out
xor
xor
cmp
out
pop
or
xor
push
mov
add
add
and
ljmp
or
fdivrl
add
ds
mov
push
inc
pop
cs
mov
mov
mov
mov
mov
out
aaa
bound
cmp
and
xor
test
xor
data16
bound
inc
mov
push
insb
cmp
cmp
sbb
out
adc
fdivrs
in
stc
cmp
push
cmp
pop
jge
imul
push
xor
mov
mov
adc
adc
jecxz
or
rolb
ljmp
xor
fnstenv
addr16
jb
ss
pop
mov
andl
or
sbb
sub
cs
pusha
aaa
stos
stos
ds
xchg
shl
bound
cmp
cmp
aad
icebp
cmp
push
lahf
cmpl
lahf
or
mov
mov
dec
mov
cmp
cmp
cmp
adc
sarb
mov
imul
cmpsl
sub
sbb
negb
adc
dec
cmp
jge
push
mov
mov
or
pop
pop
fsubl
sbb
and
xor
cmp
push
cli
push
jbe
xchg
cwtl
aaa
push
or
mov
xchg
cmp
cmp
fildll
lret
sbb
cmp
and
data16
nop
xlat
push
add
mov
outsl
aam
inc
in
cmp
add
pop
pop
mov
ds
push
into
aas
aam
lock
scas
sbb
push
xor
mov
inc
or
fldt
getsec
add
pop
aaa
data16
jno
jnp
xchg
xor
aaa
rorl
int3
mov
pop
mov
inc
add
sbb
cmpsb
aas
mov
lret
enter
jecxz
loopne
or
cmp
cmp
cmp
loope
in
xchg
sbb
in
ds
adcb
add
add
and
pop
jb
cmp
shlb
fiadds
sbb
xlat
pop
cmpb
cld
je
lock
xor
mov
xor
cmpsb
lahf
xor
push
xor
loop
jno
rolb
xor
push
inc
ja
loop
push
ss
sub
mov
fistpl
cmp
pop
cmpsb
push
ljmp
cmp
cmp
cmp
push
imul
and
mov
arpl
mov
subb
in
xor
addb
add
scas
mov
mov
sbb
mov
lcall
sub
mov
add
xor
mov
push
pop
push
out
nop
pop
clc
add
test
cmp
mov
and
add
mov
push
cmp
cmp
subl
lods
rol
daa
jp
pop
dec
cmp
push
xchg
mov
jl
aas
mov
mov
aas
call
mov
js
push
dec
xor
jl
adc
pushf
xchg
pop
shll
cltd
mov
add
jno
xor
int3
repnz
jmp
pop
dec
mov
adc
pop
xor
push
ss
ss
loop
inc
mov
sub
aaa
jmp
inc
xor
jns
stos
cmp
loop
cmp
out
rclb
cmp
into
or
inc
push
fdivrl
loop
fs
cld
pop
mov
std
xor
xor
xchg
cmpb
dec
push
mov
ret
xor
adc
sub
ss
fidivrs
fidivs
out
and
xor
cmp
lret
add
push
movsl
sub
adcb
mov
stos
inc
sbb
push
scas
cmp
adc
ror
mov
aaa
stos
stos
mov
cld
cmp
add
loopne
cmpsl
cli
aas
mov
mov
inc
test
stos
rcrb
test
scas
xor
mov
dec
jbe
ss
rolb
mov
lock
das
add
push
scas
andb
jle
xor
test
mov
cmpsb
push
push
ss
lret
jle
cli
pop
push
test
sub
test
aad
pop
adc
mov
or
lcall
pop
mov
mov
outsb
clc
stos
push
mov
lods
cmp
cmp
fisttps
mov
jmp
sbb
pop
xor
popa
cmp
push
pop
add
mov
mov
lcall
enter
mov
mov
mov
popf
in
adc
lock
inc
cmpsl
xchg
std
xor
jg
xor
xchg
xor
xor
xor
xor
xchg
xor
mov
rolb
xor
jl
loopne
add
xor
xchg
nop
fdivl
xchg
sbb
push
inc
add
jne
jge
test
and
aad
movsb
bound
adc
adc
xor
inc
adc
mov
test
inc
fsubl
ret
cmp
push
pop
cmp
cmp
cmp
outsb
push
rcrl
mov
inc
or
pop
inc
mov
cmp
mov
lcall
add
push
sub
notl
pop
sub
out
xor
xor
xlat
xor
cmp
out
ljmp
sti
xor
xor
add
ret
adc
add
and
xchg
les
lods
and
jle
xor
push
adc
dec
mov
pop
xor
andl
jecxz
pop
jnp
adcl
ds
xor
jp
fnstsw
add
xchg
jle,pt
stc
aaa
call
outsb
cmp
or
sub
add
xchg
outsb
testb
push
or
pop
data16
adcb
xchg
ljmp
push
lods
scas
sahf
cmp
adc
lret
inc
cld
inc
xchg
xchg
mov
mov
icebp
lds
ret
xor
sub
sub
pop
test
add
fsubrp
xor
orl
push
cmpsb
ss
call
pop
jp
sahf
adc
adc
dec
pop
cmpsb
and
movsb
push
add
fiadds
lock
sub
mov
jp
push
sub
ljmp
xchg
push
add
cmp
cmp
cmp
mov
cmp
pop
mov
addl
icebp
addr16
jg
or
xor
ret
xor
mov
inc
xor
mov
lahf
jmp
cmpsb
sbb
bound
stos
lea
mov
cmp
cmp
cmp
cmp
jle
cmp
js
inc
cmp
add
cmp
xchg
push
cmp
fidivrs
test
jne
movsl
jmpw
shll
movsl
sti
bound
mov
inc
mov
sbb
cmp
loop
ljmp
push
negb
popa
aas
mov
jno
jne
push
mov
lret
test
sbb
push
scas
adc
jbe
divb
push
xor
adc
xor
lret
xor
adc
ss
iret
push
aaa
sbb
and
add
mov
loop
mov
adc
ficoms
daa
cmp
push
adc
cmp
jb
push
cmp
sahf
fnstsw
mov
sub
sbb
cmp
test
orl
xchg
xor
stos
mov
mov
mov
inc
xor
lcall
xor
jmp
xor
mov
out
and
out
outsb
lcall
push
push
inc
sbb
stos
jb
inc
xor
outsb
jo
xchg
xor
dec
mov
xor
mov
xor
cmp
mov
in
add
cmpl
push
ljmp
mov
mov
shl
cmp
inc
js
add
cmp
pop
push
mov
cmp
test
jmp
jle
mov
jbe
xor
bound
dec
aad
stos
icebp
aaa
jecxz
xor
jae
xchg
xor
sti
xor
adc
mov
and
outsb
push
cmpsb
jp
and
push
or
fs
mov
dec
mov
jecxz
adc
or
dec
inc
mov
xchg
cmp
cmp
add
mov
in
inc
and
sub
push
inc
dec
push
cld
cmpb
mov
xor
int
pop
push
xor
xor
and
add
inc
fisubrl
sbb
pop
push
inc
and
inc
mov
stos
jno
jle
stos
cmpsb
mov
loopne
lds
shlb
mov
push
mov
faddl
dec
bound
test
xchg
cli
mov
mov
repnz
mov
inc
xor
cmp
dec
cmpsb
andl
les
sbb
cmp
cmpsl
movsl
lcall
add
xor
rclb
cmp
cmp
adc
or
mov
data16
pop
mov
cmp
mov
mov
or
out
int
cmp
pop
push
pushf
cmp
or
int
ds
push
jp
push
loopne
adc
test
stos
test
lock
inc
ss
xchg
push
mov
es
test
inc
sub
push
and
test
lcall
stos
aam
in
and
cs
out
mov
daa
xchg
ds
imul
push
sbb
movsl
xchg
jp
pop
push
je
mulb
jmp
shlb
add
ss
mov
int
pop
mov
std
ret
into
push
sub
and
inc
icebp
sbb
inc
xchg
scas
xor
cmp
mov
ss
ficompl
cmp
mov
mov
fwait
icebp
outsl
add
out
cmp
cmp
ss
cmp
cmp
cmp
push
add
dec
data16
cmpb
push
pop
push
lods
and
shll
inc
scas
push
pop
mov
xchg
jbe
pusha
inc
sbbl
xchg
loopne
cli
inc
or
adc
cmp
jae
xchg
shrb
cmp
idivl
sub
mov
push
cmpl
andb
jne
aas
ss
mov
aas
pop
or
and
xor
inc
xor
call
test
pop
push
mov
test
fsubrl
xor
dec
push
cltd
stos
push
inc
inc
and
stc
mov
cmp
jns
mov
lcall
jle
xchg
ja
push
xor
ss
ret
sbbb
cmp
or
lcall
mov
or
dec
pop
mov
leave
xchg
clc
mov
cltd
aas
mov
push
push
scas
aaa
pop
xor
mov
ret
scas
rolb
cmp
pop
push
lret
xor
xor
push
test
lods
xor
xor
jns
roll
ds
mov
mov
sub
daa
adc
sub
mov
adc
xchg
je
adc
mov
dec
cmp
push
xchg
out
xor
jno
mov
jb
mov
cli
pop
jns,pt
xchg
jo
push
mov
mov
xchg
mov
loope
or
mov
xchg
addb
jo
mov
sbb
lcallw
jp
outsb
sub
jno
test
es
scas
test
ljmp
ss
out
xchg
jno
ss
pop
jp
aaa
leave
ret
push
pop
mov
mov
cmp
ret
cmpsb
sub
bound
push
jo
rcrb
adc
sbb
popa
mov
jbe
pop
test
adc
les
mov
xor
push
das
jecxz
std
pop
scas
lods
daa
or
popa
push
sahf
popf
popf
inc
adc
in
out
adc
cmp
data16
popf
sarb
sbb
or
xor
loope
cmp
xor
insl
sahf
movsl
cli
clc
es
into
pop
add
adc
fmull
jmp
cs
cmp
ja
sub
jle
and
pop
pop
jb
jbe
inc
test
mov
or
jle
xor
jecxz
scas
nop
push
add
clc
add
mov
loopne
call
ss
mov
add
dec
cmp
stos
and
add
push
xor
cmp
pop
add
aaa
push
aaa
push
arpl
inc
stos
lcall
loopne
aaa
jl
mov
nop
aaa
xchg
add
jno
jbe
aaa
mov
or
cmp
inc
data16
push
cmp
sbb
mov
shll
inc
pop
mov
nop
cmp
lret
js
xorb
test
es
cmp
sub
cmp
mov
pusha
cmp
jo
out
inc
aaa
push
js
cmpb
push
mov
push
cwtl
out
and
add
push
imul
pop
repz
call
lock
mov
sbb
icebp
ss
mov
push
add
push
or
sbb
add
mov
inc
mov
mov
xchg
jmp
aaa
pop
aaa
pop
sahf
gs
insl
adc
xor
mov
mov
and
dec
shr
push
sbb
lock
minps
xor
and
sub
or
shlb
xor
inc
mov
push
sbb
mov
sub
push
or
lea
mov
or
adc
pop
xor
push
mov
inc
sub
dec
stos
push
lcall
imul
int3
push
cld
xor
sbb
xor
fs
jecxz
push
lods
stos
faddl
loop
inc
pop
push
mov
mov
inc
hlt
mov
test
js
ds
adc
pop
add
and
and
add
arpl
aaa
add
cmp
inc
test
xchg
or
mov
cmp
fdivl
push
inc
clc
inc
fstpl
pop
mov
movsb
les
fdivrl
clc
mov
fisubl
inc
mov
jp
jb
jp
pop
aaa
add
cmp
jp
pop
sahf
mov
bound
and
adc
inc
mov
js
xchg
xorb
mov
dec
es
aas
test
pushf
loop
aas
in
add
jnp
xlat
inc
adc
dec
xor
inc
frstor
xchg
xor
xor
sub
pop
xor
mov
jno
xor
mov
pushf
into
int3
add
movsb
xchg
pushl
xor
jno
adc
sub
pushl
cs
fdivrs
xor
dec
inc
xor
or
mov
js
sahf
add
and
cmp
or
pushf
call
mov
subb
insb
and
mov
aam
lock
mov
outsb
adcb
mov
pop
inc
dec
xor
lock
mov
rclb
shlb
shlb
xchg
and
cmp
cmp
dec
shlb
mov
dec
aam
sbb
pop
inc
or
jno
push
push
cmp
pusha
imulb
icebp
inc
mov
jo
js
jl
pop
pop
rclb
or
jp
int3
push
add
in
popl
shr
jbe
cmpsl
add
enter
ljmp
and
push
pushf
add
sub
push
outsb
je
icebp
inc
pop
mulb
fs
cmp
add
pop
loopne
in
pop
pop
int
int3
cmp
insb
sahf
mov
cmp
or
adc
aam
inc
pcmpeqb
mov
je
mov
cvttps2pi
inc
out
insb
jl
and
adc
add
pushf
movsb
sub
adc
or
dec
shr
fdiv
loopne
aaa
sbb
call
cmp
mov
fs
xor
and
sub
adc
mov
lock
mov
jne
cwtl
mov
data16
or
pop
add
sub
sub
pop
mov
nop
rep
xor
scas
mov
ljmp
fdivs
fmull
inc
ja
mov
add
dec
ljmp
shll
psrlq
sub
ja
xor
xchg
xchg
inc
loopne
mov
mov
xchg
push
test
lods
loopne
dec
mov
sub
js
push
andl
push
xchg
add
xor
outsl
add
and
xorb
fldenv
cmp
pop
aad
and
cmp
xor
je
inc
insb
xchg
inc
cmp
je
js
sbb
fstpl
cmp
lcall
push
mov
lcall
test
push
cmp
test
je
xor
fs
xchg
jne
xchg
sub
test
push
or
faddl
or
xor
xor
aas
insb
aas
push
les
pop
sbbb
addb
xorl
fistps
mov
outsb
enter
andl
rclb
lock
clc
pop
add
add
ret
in
jp
arpl
into
xchg
xor
fsub
lcall
insb
add
or
xor
rorb
int3
inc
test
or
push
stos
add
pop
test
rcrb
fcom
dec
call
cmpsb
loopne
adc
test
roll
mov
mov
mov
and
cmp
aaa
fdivrs
adc
push
mov
and
arpl
inc
cmpb
adc
hlt
jae
out
xchg
add
pop
mov
mov
loopne
inc
pop
cmp
xor
pop
out
inc
pop
push
cli
decb
cmp
inc
mov
fmuls
push
call
mov
push
clc
cmp
pop
cmp
dec
cmp
inc
cmp
and
sub
add
cmp
les
pcmpeqb
into
aam
loopne
in
call
dec
lock
cmpsb
test
or
aas
cmp
sbb
and
iret
dec
ds
ds
mov
loop
les
jo,pt
loop
lcall
nop
adc
fisubs
pop
cmp
or
or
popa
mov
inc
push
push
push
aas
or
jb
loop
mov
or
and
stos
inc
out
cmp
adc
pop
add
fs
aas
je
cwtl
mov
aam
add
adc
sbb
inc
inc
mov
sub
dec
push
mov
mov
loop
fwait
es
mov
ljmp
add
xor
fs
xchg
push
div
test
subb
push
xor
sub
lcall
lcall
mov
jno
xor
shlb
inc
and
xor
adc
mov
ss
icebp
xor
or
mov
popf
inc
inc
ss
cmp
push
pop
arpl
mov
push
pop
test
mov
outsb
lock
adc
call
or
lods
add
or
sub
xor
jp
push
test
mov
js
aam
in
je
mov
and
adc
or
add
mov
lahf
loopne
rorb
add
addb
outsb
inc
push
insb
cs
mov
out
fldt
fcmovnbe
mov
mov
mov
push
test
je
dec
or
ret
je
js
and
push
sarb
nop
add
push
inc
xlat
or
push
divb
arpl
pop
test
aaa
inc
mov
adc
xlat
or
lock
xor
inc
xor
xchg
call
inc
js
mov
aaa
push
xor
adc
into
and
push
shrb
inc
xor
cmp
jmp
notb
jecxz
push
lea
pusha
or
insb
xor
push
adcb
mov
addr16
jmp
xlat
shll
shlb
pop
push
or
push
xor
inc
test
cmp
bound
dec
call
jbe
data16
test
pushf
lock
outsb
rorl
lock
dec
nop
or
ds
loop
and
lret
sbb
inc
cmpsb
mov
ds
xor
outsb
cwtl
push
les
rolb
ljmp
inc
dec
hlt
pop
outsl
js
lods
pop
sbb
enter
sbb
and
push
sti
pushf
out
mov
or
and
sub
negb
adc
xchg
movsb
mov
rclb
rolb
fldt
das
scas
js
dec
mov
test
xlat
int3
mov
inc
rorl
addl
mov
cwtl
xchg
enter
add
pop
pop
adc
aas
pop
mov
cmp
imul
paddb
or
sbb
pop
jge
or
ljmp
fisttps
xor
xor
andb
psubusb
aam
notl
xor
or
cmpb
dec
or
pop
add
dec
sbb
cmp
outsl
jl
cwtl
aaa
int3
xchg
jp
mov
filds
test
subb
hlt
mov
fadds
call
add
lahf
pop
jg
adc
inc
lods
pop
enter
xchg
mov
mov
adc
push
loop
loopne
adc
xor
int
sub
fs
xchg
notl
or
push
nop
call
add
xor
sub
ljmp
add
inc
popf
mov
pop
lcall
jb
add
pop
jmp
or
and
movsl
addl
pop
cmp
pop
xchg
dec
mov
mov
xor
push
je
jbe
inc
mov
xchg
sbb
inc
mov
insb
mov
rcl
xor
sbb
sbb
shll
xchg
xchg
jo
inc
xchg
ds
movsb
add
fmuls
hlt
movl
mov
push
pop
bound
shrl
add
and
push
add
hlt
add
add
push
jmp
xor
inc
adc
nop
cmp
pop
dec
ljmp
pop
ljmp
add
jb
mul
fiadds
xor
pop
into
cmpsb
inc
aad
test
pop
aam
push
mov
pop
sbb
push
clc
push
mov
lret
pop
pop
pop
mov
mov
outsb
rol
clc
or
cmp
dec
jb
mov
push
test
aam
cld
sbb
push
xchg
push
or
xor
clc
test
pop
sbb
scas
je
xor
push
sub
rcll
movsb
mov
aam
call
hlt
lret
pop
pop
fnsave
xor
outsb
je
ss
jle
pop
cwtl
cmp
lock
mov
hlt
pop
sbb
mov
push
loopne
mov
push
lea
loop
mov
pushf
ljmp
push
lods
hlt
out
lret
push
lods
cmpsl
out
xor
mov
rclb
je
or
xchg
add
out
fimuls
popl
test
push
fcmovb
inc
add
rcr
lret
dec
rolb
ret
adc
mov
push
lods
loopne
add
adc
sbb
and
sub
inc
stos
test
xchg
ret
cmpsl
fadd
lock
pushf
cli
test
adc
sub
push
add
je
mov
inc
fmuls
lret
jo
stos
add
add
cli
and
mov
pushf
shrb
jo
inc
out
je
fcmovb
aam
cmpsb
arpl
xlat
sub
push
mov
mov
mov
mov
cmp
xlat
rolb
scas
push
bnd
mov
or
out
loop
out
rclb
mov
cmp
and
cmp
mov
push
nop
testb
push
mov
inc
add
push
sub
mov
cmp
jl
mov
mov
out
sti
cld
lock
shrl
pusha
out
mov
xor
out
cmpsb
out
fdivrs
xchg
add
cmpsb
and
jo
call
sub
add
in
clc
cmp
adc
jecxz
pop
loop
test
push
call
inc
movsb
dec
outsb
xchg
push
mov
ds
cmpsl
or
mov
cmp
jbe
imul
cs
js
loop
pop
jp
outsb
xor
dec
les
push
rolb
inc
adc
and
xor
jno
add
inc
subl
push
pushfw
aam
lcall
cmp
fdivl
sar
test
pop
clc
mov
jle
push
orb
dec
lret
jl
jno
insb
xlat
ljmp
in
rolb
dec
out
cmp
inc
add
mov
pushf
scas
lods
out
pop
icebp
cwtl
cmp
js
xor
sbb
xor
inc
loop
sahf
inc
jle
fst
mov
nop
xlat
loopne
mov
sub
ret
ret
push
lret
mov
into
test
jp
aad
lods
idivb
add
call
cmp
shrl
or
sti
clc
stos
sbb
add
push
out
sub
add
jo
out
fists
fbld
test
movsl
ds
loop
fcmove
test
mov
pop
out
les
out
clc
pop
sbb
xor
add
jmp
ficomps
sub
call
cmp
test
push
mov
lret
int3
add
jmp
sub
lcall
push
mov
xor
lea
inc
inc
push
cmp
pop
xor
mov
fmuls
shrl
inc
add
sub
and
sub
rolb
push
pop
je
jecxz
or
mov
push
fadds
add
adc
imull
fbld
rcr
or
mov
ss
mov
jecxz
call
jae
adc
push
jb
es
mov
in
sub
push
sub
xor
cwtl
push
jl
jecxz
adc
sub
cmp
push
bound
das
je
test
adc
mov
les
sbb
cmp
hlt
scas
cmp
push
xor
add
xchg
jl
inc
pusha
xchg
hlt
pop
and
jg
jae
sbb
or
dec
pop
arpl
lods
aam
cld
bound
scas
mov
ljmp
adc
cmp
outsb
fcompl
jg
loopne
dec
enter
cmp
mov
mov
fsubs
push
dec
ljmp
and
je
pushf
rcll
outsb
mov
aam
dec
mov
icebp
jp
push
xor
pop
insb
inc
lods
pop
pop
outsb
lods
data16
cmp
sub
sbb
or
loope
aas
push
imul
add
sub
pop
enter
dec
push
lock
stos
push
test
je
push
rol
adc
loopne
test
lods
dec
dec
sbb
stos
rolb
add
mov
pop
clc
rorl
nop
es
ret
ret
inc
xlat
push
mov
inc
nop
ljmp
lock
sbb
push
sbb
or
mov
mov
push
add
ds
cmp
sbb
lea
pop
orb
mov
pop
in
or
and
addb
repz
out
in
mov
inc
push
outsb
pushf
jge
jne
inc
les
shlb
pop
dec
or
aaa
inc
loopne
or
out
bnd
mov
jo
cwtl
and
sbb
ror
das
mov
inc
test
daa
xor
sub
leave
inc
ret
lods
cmp
adc
das
ss
daa
enter
mov
mov
adc
out
cmpsl
or
ret
ss
push
fiadds
push
dec
xchg
inc
xchg
into
rcrb
add
pop
pop
mov
xor
lds
ret
cmp
mov
pop
movsl
cmpsl
je
push
jae
xor
movsl
test
inc
lcall
mov
mov
add
xor
or
adcb
mov
cs
mov
mov
repnz
cmpsl
gs
push
add
adc
movsl
xor
or
cmpsb
idivb
or
test
fdivrp
mov
jo
mov
addb
rorb
cmp
je
push
sbb
add
push
mov
mov
push
xchg
mov
jle
inc
ficomps
test
test
pop
xchg
mov
add
rcl
inc
add
push
fs
adc
or
sub
shrd
cs
rcrb
push
push
xorl
jmp
cmp
jecxz
cmp
adcl
cmpb
mov
push
mov
and
and
out
inc
enter
lret
cmp
and
sbb
dec
ret
and
je
mov
adc
addl
mov
sbb
xchg
xchg
lret
xchg
lret
lock
add
xchg
or
jg
push
jb
pop
mov
in
mov
push
test
dec
inc
pusha
or
push
jo
das
loopne
repz
pop
rclb
fidivrl
sbb
sahf
shlb
add
jp
arpl
push
pop
nop
dec
mov
or
popf
test
cmp
dec
cmp
push
inc
nop
sbb
dec
js
xchg
negl
out
or
imull
xor
pop
out
sahf
inc
pop
add
repz
mov
mov
add
xadd
jmp
push
jle
xor
out
inc
rcl
push
mov
push
push
push
repz
mov
sbbb
sbb
pop
cmp
push
dec
push
mov
or
inc
pop
push
daa
jmp
inc
ret
sbb
loope
cmp
adc
int
add
or
repz
jle
ret
test
cmp
inc
pop
dec
dec
sub
ljmp
pop
mov
rolb
imul
or
lods
addr16
add
out
adc
add
out
cmp
sarb
daa
add
adc
push
cli
inc
dec
sbb
dec
xchg
pop
xchg
jae
jbe
mov
xchg
outsl
push
sub
and
outsl
loope
idivb
adc
les
icebp
inc
mov
lcall
xchg
sahf
cmpsb
stos
loop
sbb
sahf
ficompl
les
ds
cmpl
adc
lock
push
push
out
cli
and
test
cmp
xchg
mov
sbb
add
push
sahf
mov
loopne
clc
sti
repz
push
mov
push
rcrb
scas
xchg
push
xchg
cmp
repnz
imull
jne
mov
divb
pop
push
cli
arpl
dec
cli
idivl
xchg
push
sahf
sbb
mov
cs
lahf
cmp
or
enter
cmpsl
adc
mov
sub
push
or
xor
addr16
scas
adcb
in
mov
out
stos
add
sbb
push
dec
es
faddp
sbb
add
ljmp
sarl
ret
subl
mov
lea
cmpsb
pop
enter
enter
movsl
shlb
dec
cmp
pop
enter
push
aaa
popa
sub
xchg
popf
out
iret
outsb
xchg
test
loope
pushf
test
ficompl
dec
cmp
ds
ret
jmp
mov
jp
jae
outsl
adc
test
jne
dec
les
mov
scas
pusha
mov
mov
daa
pushf
jo
bnd
push
repz
pop
lahf
jae
imul
xor
rcrb
es
hlt
repnz
sbb
cmpb
loop
insb
loope
cmp
cmp
test
fidivl
out
stos
adc
add
or
jp
adc
sub
add
add
imul
outsl
loopne
mov
sbb
aaa
sarb
add
data16
push
pop
dec
dec
sbb
outsl
jmp
ret
or
mov
fcoml
and
ficompl
inc
xchg
js
and
sub
push
outsl
loopne
movsb
bsf
rcrl
adc
dec
loop
cmp
pop
cmc
add
mov
push
jle
inc
mov
imul
and
repnz
sarb
loop
dec
or
xchg
repz
dec
lcall
and
in
inc
syscall
andb
pop
es
js
mov
dec
popa
mov
push
pop
or
ficoml
ret
dec
xchg
cmc
mov
add
mov
pop
data16
adc
loopne
add
mov
rorb
mov
fildl
jbe
mov
add
stos
loop
and
into
and
adc
lret
or
jo
xchg
add
adc
test
loop
sub
add
hlt
sub
test
push
push
dec
out
cli
notl
and
repnz
dec
test
les
xchg
cmp
mov
mov
scas
pop
inc
and
sub
xor
xor
xchg
and
or
xorl
insl
sub
mov
ficoml
or
dec
pushf
stos
sahf
mov
movb
adc
shrb
rolb
inc
sti
repz
push
pop
jle,pt
insb
adc
jno
lret
mov
sub
xchg
add
push
push
push
or
jb
mov
hlt
and
inc
fsubrl
xchg
mov
and
das
lods
or
sbb
sub
inc
pop
sahf
orl
sub
inc
push
fwait
xchg
enter
dec
iret
inc
xchg
mov
cmp
jno
lods
or
mov
arpl
add
rorb
pop
or
mov
xor
and
mov
pushf
addr16
cs
fwait
sub
jo
cmp
cmp
mov
push
inc
sbb
push
fsubr
cs
insb
xor
into
jl
mov
add
aaa
popf
pop
add
mov
mov
add
pop
movl
scas
outsb
sarl
jo
shlb
mov
mov
dec
call
jecxz
lock
lock
add
adc
and
cmp
fisubs
ret
rorb
adc
pop
adc
rorb
inc
dec
out
js
sarb
mov
scas
clc
mov
jmp
push
clc
sahf
sub
aam
bound
shlb
sbb
pop
push
mov
enter
pop
xchg
loop
jecxz
nop
jbe
push
or
sub
mov
or
jp
call
cwtl
loop
sbb
jo
pushf
adc
adc
or
mov
mov
sbb
pop
add
cmp
xchg
pop
ffree
push
inc
cmpsl
mov
loopne
adc
sub
into
mov
clc
add
xor
or
stos
bound
add
add
insl
xor
into
mov
jp
test
inc
ficomps
sbb
xor
xor
cwtl
or
push
xor
out
mov
pop
adc
sbb
xor
sub
and
and
jmp
inc
xor
xor
xor
sbb
pop
movsl
sbb
push
outsb
jp
mov
jp
ljmp
outsl
pop
subb
nop
stos
add
das
dec
fildll
cmp
add
pop
dec
stos
sub
nop
push
add
loopne
adc
jmp
loop
dec
into
sub
shlb
daa
call
std
fstpt
enter
cltd
push
push
inc
into
mov
mov
mov
mov
mov
aam
rol
hlt
loopne
mov
popf
lods
inc
jecxz
and
push
xor
lret
lahf
lea
cwtl
push
stc
xor
int
push
cmp
js
imul
pop
mov
pop
jle
jns
out
ds
push
pop
pop
xor
ja
pop
pop
push
rclb
push
insb
ss
repz
int3
arpl
fstps
push
push
push
movsb
jo
int
mov
je
jne
js
jp
jnp
imulb
call
sahf
repnz
mov
xchg
rclb
cmpsl
insb
ss
in
lods
cs
ret
mov
ss
int
aad
jg
sbb
and
cs
xchg
mov
ja
dec
ficompl
dec
adcl
and
push
add
push
addl
inc
cmp
inc
xor
aaa
xor
inc
xor
pushl
xor
pop
movb
mov
ficoml
fimull
frstor
add
sub
sahf
int
xor
xor
or
xor
xor
xor
jne
mov
xor
sub
fwait
push
and
mov
sbb
jp
roll
incl
jge
rorl
sub
and
sub
push
fiaddl
inc
cmp
loopne
pop
push
insb
inc
ret
mov
sub
pop
aas
inc
loop
xor
arpl
mov
arpl
fs
xor
xchg
inc
pop
subl
and
jo
push
ss
or
cmp
arpl
pop
push
push
insl
mov
mov
and
add
or
add
jb
and
push
push
popa
mov
dec
add
ficoms
jl
icebp
incl
xor
xor
push
inc
push
push
dec
dec
dec
jo
std
call
dec
dec
inc
and
jle
int3
or
orl
xor
dec
mov
es
cmpb
dec
push
sub
lcall
pop
push
inc
and
sbb
jnp
add
dec
dec
inc
dec
sub
lock
sarl
and
cmp
iret
pushf
enter
add
xor
push
inc
subb
dec
push
nop
and
arpl
sub
mov
aas
mov
fidivl
mov
jne
ret
call
out
shl
aas
or
push
fldt
popa
loopne
rol
fidivl
in
orl
addr16
pop
mov
fldt
mov
test
out
mov
out
xchg
aam
in
xchg
or
je
mov
pop
shrl
mov
ja
xor
sbb
push
leave
mov
push
push
mov
fstl
or
xorl
call
or
addl
add
xor
sbb
mov
inc
jl
mov
mov
jne
push
add
cmp
leave
sub
and
add
add
lret
ja
sbb
mov
xchg
es
lods
inc
fiaddl
mov
insl
pop
and
push
orb
int
lds
adc
fisubl
mov
loop
addb
or
ss
mov
aad
adc
mov
inc
sbb
pop
push
and
dec
dec
dec
dec
dec
dec
dec
push
push
mov
pop
pop
pop
movsb
sbb
inc
inc
dec
dec
xor
stos
xchg
sub
add
inc
xor
add
dec
cltd
les
or
or
sub
mov
inc
loopne
mov
push
jo
mov
orl
imul
dec
adc
lods
bound
in
add
push
push
addl
jo
inc
lcall
xchg
lcall
xchg
push
cmp
testl
mov
cmp
repz
lods
adc
push
test
add
stc
jno
cmp
sbb
xor
fisubrl
out
push
add
in
add
add
pop
pop
repnz
pop
mov
xchg
mov
daa
das
or
es
insl
mov
add
xchg
jg
xchg
or
mov
pop
pop
insl
mov
sbb
sub
xchg
xor
push
adc
add
jns
jno
hlt
mov
inc
mov
scas
xchg
jno
pop
sbb
mov
insb
and
add
inc
add
int3
scas
mov
xor
adc
repz
rcrb
add
mov
bound
inc
xchg
jo
pop
sbb
dec
or
xor
iret
pop
sub
fcom
mov
repnz
and
add
jmp
jns
ret
pop
pop
in
ret
add
push
fldcw
sbb
ja
xor
xor
cmp
int3
xor
add
push
jb
add
or
sbb
aaa
loope
hlt
and
or
test
or
popa
pop
xor
testl
cmp
cvtdq2ps
rolb
aaa
mov
test
mov
cmp
and
iret
xor
pop
aad
sbb
rcrl
sbb
adc
incl
mov
xchg
and
push
test
filds
dec
sub
xor
enter
orb
out
adc
sbb
jmp
push
dec
inc
dec
inc
and
jl
dec
or
fcmovnb
add
add
add
add
or
pop
push
or
mov
or
or
adc
adc
push
adc
adc
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
pop
lds
xor
outsl
push
icebp
imul
add
and
sahf
add
les
pop
adc
mov
add
mov
pop
inc
mov
pop
add
fbstp
imul
add
add
push
adc
pop
and
xor
xchg
mov
rcll
bound
js
jl
sbb
hlt
daa
sub
sub
inc
sbb
add
incl
mov
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
add
push
repz
cmc
div
clc
stc
cli
scas
into
add
xorb
scas
adc
add
pop
scas
cmp
adc
jo
pop
lods
push
adc
pop
popa
jno
and
adc
mov
pop
xor
lods
or
xor
adc
loope
icebp
mov
add
xorl
scas
addb
js
fdivp
or
std
adc
mov
fisttps
inc
imul
clc
push
pop
jg
lret
mov
mov
jae
or
cmp
and
sbb
jg
dec
gs
imul
cmpsl
mov
inc
lock
decb
movsb
mov
jecxz
jg
push
data16
fstpt
mov
sub
in
jp
adc
pop
cltd
and
dec
in
xchg
lock
push
sub
lods
js
dec
das
cmp
inc
sbb
std
pop
in
add
jg
inc
cld
xor
sub
ret
or
mov
mov
cmpsb
push
inc
cmpb
rcrl
jle
sub
mov
xchg
push
dec
je
or
lahf
incl
insb
in
test
mov
mov
pop
fdivrs
xchg
incl
stc
insb
insb
addr16
jno
xlat
dec
rolb
push
inc
adc
mov
lcall
mov
jo
addl
pop
aas
call
shrb
pop
sbb
sbb
push
divl
and
add
add
mov
mov
cmp
iret
jns
loop
aam
shlb
mov
or
pop
sub
adc
cmp
lret
imul
aam
mov
ret
aam
leave
lret
leave
in
in
out
cmp
mov
mov
outsb
mov
cli
mov
out
cmp
jbe
data16
xor
fisttps
xor
jbe
bound
sub
or
ljmp
je
xor
xor
pusha
add
push
push
xchg
insl
mov
shrb
add
add
xor
mov
push
sbb
jns
out
sbb
adc
mov
adc
imul
ss
scas
std
mov
je
into
push
in
jne
jbe
add
push
test
add
jnp
add
cmp
gs
sbb
in
cmp
dec
or
adc
adc
and
es
push
bound
mov
jle
ret
mov
mov
cmp
sbb
cmp
or
jmp
loopne
cs
rcl
xor
lret
dec
cld
add
xor
mov
imul
and
nop
dec
or
push
mov
adc
mov
add
cmp
popa
sbb
enter
lcall
mov
push
or
cmp
inc
push
xchg
mov
nop
nop
dec
adc
xchg
xchg
pop
and
incl
inc
inc
inc
xchg
lret
sahf
inc
test
int3
ret
xor
pop
popa
push
dec
push
call
sub
fcmovnbe
or
insl
mov
imul
and
nop
dec
fistpl
mov
sub
ret
dec
inc
adc
popa
mov
xchg
and
and
leave
lcall
sbb
dec
dec
dec
sar
fldt
imul
imul
fimuls
jmp
xchg
addr16
mov
enter
cmp
and
pop
adc
jg
sub
inc
jle
test
xor
ljmp
decl
push
scas
mov
adc
dec
addr16
sbb
push
ss
xor
mov
sar
pushl
jb
aas
and
push
push
inc
test
scas
mov
imul
aaa
aaa
adc
jmp
jl
inc
inc
xchg
sub
lret
jmp
cli
jp
andb
sbbl
imul
enter
sub
incl
dec
cmp
ss
mov
push
push
std
sti
divb
xor
pop
sbb
and
jae
cmp
mov
ljmp
xor
push
dec
inc
push
cmp
jp
inc
clc
ljmp
jnp
jne
lret
mov
leave
loopne
mov
pop
out
lds
lds
sbb
jnp
gs
ljmp
jge
pop
test
xchg
jne
xor
ss
sub
lea
rolb
inc
scas
repnz
push
mov
dec
mov
cmp
mov
cwtl
shll
ljmp
sub
xchg
mov
jmp
cmpsl
add
jne
or
cltd
mov
test
push
mov
jmp
mov
mov
xchg
stos
mov
int3
in
push
lcall
xor
xor
lcall
jae
ret
mov
dec
or
cld
ljmp
jle
mov
mov
dec
shll
xchg
push
lcall
loope
mov
aaa
inc
push
mov
adc
push
mov
xchg
cltd
jle
lcall
lock
loope
fs
fisubs
and
xchg
sub
js
xchg
pop
test
loope
jne
push
dec
aaa
push
jl
sub
jg
adc
mov
lea
aaa
enter
cld
cld
or
mov
xor
popa
jnp
cmpsb
cld
arpl
jmp
or
je
mov
mov
push
cwtl
mov
scas
clc
call
mov
mov
xchg
js
into
cmp
clc
jns
test
lcall
fdivr
mov
xchg
cs
mov
test
add
into
ret
adc
mov
clc
aad
and
add
or
fwait
leave
daa
sbb
pusha
or
adc
enter
pushl
ret
xchg
pop
cmpsb
cwtl
mov
ret
sub
mov
bound
jno
enter
fcomip
call
cld
cwtl
and
xor
pushf
ds
cwtl
sub
sarb
sub
sub
insb
stc
mov
shll
dec
inc
std
jmp
cli
adc
aam
dec
popa
lea
sub
push
test
movsl
xlat
scas
pop
cmpsl
mov
mov
test
push
test
loop
lea
ja
dec
xchg
dec
sbb
add
jle
xor
adc
daa
cs
imul
sub
jae
ja
jmp
lret
and
js
dec
sbb
fwait
cwtl
jp
push
test
fwait
xchg
dec
jnp
jmp
mov
pushf
fidivrs
mov
fdivs
cmp
jo
les
jns
out
xchg
inc
fcomip
ljmp
std
stc
icebp
in
xchg
pop
sbb
jae
fisttps
mov
jmp
aas
cmp
sti
div
mov
mov
dec
sub
cltd
push
and
cli
sub
sbb
mov
pusha
imull
roll
add
sub
test
mov
dec
std
popa
test
sbb
imul
lcall
std
imul
jns
push
pop
push
inc
xchg
mov
push
dec
adc
lcall
sub
pop
idiv
jmp
jne
movsb
xchg
inc
dec
es
lea
adc
pusha
dec
sub
and
adc
cwtl
sbbl
pop
bound
call
je
adc
xchg
jge
pusha
movsb
int
pop
push
cmc
inc
fwait
insb
mov
xchg
out
xor
fsubrl
incb
mov
jne
adc
add
std
jmp
cwtl
sub
push
and
xlat
test
ljmp
aaa
inc
std
movsl
stos
mov
ljmp
jl
out
loopne
cli
cmc
push
mov
xlat
push
jle
filds
xor
into
xchg
loop
decl
loopne
jb
mov
adc
cs
mov
mov
inc
cmp
and
test
sub
nop
cmp
imul
ds
stos
arpl
xchg
test
inc
or
xchg
sbb
dec
out
dec
addb
pop
outsb
cmc
sub
xchg
cmc
adc
leave
bound
mov
ficomps
jge
daa
and
pop
mov
fadds
adc
loopne
out
mov
mov
es
test
push
imul
pop
lret
mov
mov
mov
stos
addr16
mov
dec
jnp
sub
aaa
sbb
push
das
clc
sbb
ljmp
pushf
js
xchg
sub
stos
stos
sbbb
repnz
pop
lods
outsb
cmpsl
ja
jl
or
pusha
mov
ljmp
adc
popa
fisubrs
leave
sub
scas
loopne
or
and
cli
pushl
push
addl
push
sub
xchg
sahf
js
and
loop
incl
cltd
lahf
dec
pop
mov
mov
jecxz
add
dec
fisubs
in
mov
dec
jo
jo
fdivrp
in
push
icebp
movsb
pop
xor
adc
pop
std
push
hlt
leave
pop
dec
jl
cmp
jne
push
ljmp
dec
jecxz
ljmp
sbbb
xor
or
fcomps
es
sahf
pushw
inc
lcall
sti
xchg
add
push
scas
mov
into
and
pushf
fmull
int
loopne
ret
jmp
cli
inc
lods
pop
push
test
jae
dec
mov
cmp
jmp
movsb
lcall
adc
dec
movsl
ret
ljmp
xor
push
std
incl
decl
cmp
pop
cmpl
cmp
add
mov
incl
aaa
cmpsb
ret
inc
sub
and
push
dec
scas
rolb
adc
pushl
lcall
movsb
into
inc
xor
sarl
les
call
movsb
roll
icebp
sub
xchg
inc
rolb
adc
nop
shll
call
fwait
aam
dec
inc
push
xchg
nop
xchg
or
add
dec
rcll
outsl
call
imul
push
mov
xor
shll
push
jg,pt
add
lock
inc
xor
or
jmp
cmpsb
and
push
out
add
pusha
addl
add
rol
inc
pop
mov
mov
andb
sbb
cmp
mov
push
or
mov
div
dec
iret
or
dec
test
aam
or
test
jmp
mov
adc
ret
daa
jno
sbb
inc
scas
pop
sub
and
imul
mov
incl
add
jno
inc
repz
push
push
jno
push
mov
ja
data16
lea
add
mov
ljmp
jb
xchg
sub
dec
stc
add
xchg
inc
mov
cmp
push
push
mov
and
dec
aaa
cld
pushl
xchg
scas
jbe
push
popf
mov
icebp
daa
into
xlat
mov
je
pop
test
mov
push
inc
into
movsb
inc
cmp
call
aad
int3
xor
push
cltd
xor
add
mov
call
cmp
add
mov
push
in
add
xchg
insl
int3
pusha
add
ljmp
push
ret
push
jne
fsubl
gs
sti
addb
decl
divb
or
lret
xchg
lods
popa
pop
xor
add
ljmp
sar
add
inc
bound
pop
dec
sti
mov
or
shlb
jno
sbb
lcall
in
imul
sar
test
mov
jns
cmp
pop
inc
sub
fiaddl
pop
sub
jecxz
das
clc
pushl
imul
and
out
sarb
mov
sbb
push
aam
aas
push
mov
mov
jno
jne
xchg
pop
int
mov
xor
ret
pop
mov
call
mov
test
sar
jle
mov
inc
xchg
mov
sbb
lcall
pop
test
pushf
xchg
icebp
jno
and
movsb
or
les
push
jns
push
lret
mov
pop
xchg
or
out
mov
inc
cmpsb
fwait
push
push
push
das
cli
cmp
das
dec
popa
dec
jne
and
dec
push
xor
sub
mov
fidivrl
xchg
ljmp
push
add
cwtl
sbbl
pusha
rclb
or
xor
and
sbb
or
pushl
cmpsl
adc
add
clc
enter
pop
pop
test
in
mov
push
call
inc
aam
xchg
out
add
sub
dec
xchg
incl
ret
add
pop
sub
inc
pop
jae
pop
xor
add
decl
mov
cmp
ds
dec
icebp
aam
outsl
adcb
cmpsl
adc
cld
push
je
add
fstps
in
movsb
daa
pop
push
stos
out
sub
cs
call
xor
cmp
data16
mov
sub
fidivl
sbb
out
sbb
shlb
push
icebp
xchg
mov
xchg
push
in
xchg
dec
inc
lds
lea
adc
cmp
mov
sbb
lods
leave
jmp
int
ja
cmp
clc
outsl
jle
xor
mov
inc
mov
sub
push
test
lock
jmp
push
fstl
ret
lock
nop
sbb
sbb
jg
fidivs
xchg
enter
inc
jbe
jl
jmp
stc
pusha
or
lcall
xchg
sbb
dec
fs
test
mov
je
xchg
inc
rol
sbb
lret
push
mov
inc
or
xchg
test
pop
imul
movsb
les
add
subl
jo
push
dec
add
jl
popa
or
popf
ss
xchg
sbb
xor
orl
sbb
xchg
dec
cmpsl
movsb
inc
imul
pusha
insl
adc
jle
mov
outsb
test
in
or
mov
jbe
call
lcall
pop
ljmp
push
cmp
dec
mov
adc
mov
std
xor
jb
push
loope
jbe
es
pop
std
push
xchg
mov
and
push
xor
ret
fbld
fwait
sbb
pusha
pop
adc
sub
cld
ljmp
jno
xor
adcb
push
dec
movsb
mov
scas
push
cmp
test
ret
enter
cmp
xor
fsubr
and
mov
cmp
pushl
pop
incl
imul
in
adc
xchg
push
pop
push
out
fdivr
pop
ja
mov
or
pushl
jle
nopl
cli
and
push
and
mov
outsl
xor
dec
adc
popw
std
lcall
ss
pop
fdivl
push
pusha
push
xchg
push
arpl
or
push
mov
xor
fs
push
add
xlat
jle
xor
add
and
loopne
pushl
dec
sub
cmp
push
aas
call
xor
jae
cmp
inc
pushf
inc
inc
popf
xchg
pop
and
add
push
test
test
call
loopne
xor
xchg
jbe
in
xchg
cmpsb
push
cmp
and
mov
sbb
xchg
pop
fs
hlt
out
sahf
sub
push
jp
mov
js
xchg
call
adc
fsubl
jne
rclb
sbbl
lcall
jae
lret
pushl
mov
xor
bound
loope
adc
mov
push
and
pushl
divl
or
inc
sbb
sub
push
bound
and
jge
hlt
push
mov
ret
xor
mov
hlt
pop
jg
cmpsl
cmp
lock
xor
or
aaa
add
adc
add
mov
mov
or
xchg
adc
pop
daa
addr16
clc
sbb
add
cwtl
jno
mov
cwtl
cmp
mov
fstpt
mov
dec
sarb
sub
inc
movsb
and
aaa
or
jo
sub
add
sub
lea
daa
fists
jno
aas
cld
and
es
sbb
sbb
imul
xor
sbb
daa
pop
movsb
pop
scas
and
and
mov
mov
inc
xlat
adc
ljmp
insb
call
mov
xchg
xchg
inc
add
push
push
es
cmp
cmp
sub
xchg
xor
hlt
push
daa
xor
in
cmc
das
cli
call
mov
not
mov
mov
push
insl
xchg
fcomps
xchg
sub
sub
call
mov
loope
popa
cld
add
mov
push
mov
and
push
mov
xor
push
cmp
pop
jo
ret
jge
mov
cmp
and
push
popa
push
data16
sub
andb
pop
in
cmpsl
mov
mov
out
mov
xor
cwtl
sbb
shlb
dec
mov
das
rolb
rolb
cmp
lea
aaa
rclb
inc
nop
dec
jl
adc
or
fcomip
mov
dec
push
or
jno
push
add
inc
cwtl
stos
dec
dec
cltd
jecxz
xchg
jecxz
or
ret
icebp
push
jo
jbe
nop
sbb
add
mov
xor
jle
sbb
mov
inc
inc
pushl
fwait
adc
and
loop
lahf
jbe
adc
ljmp
sbb
test
push
sbb
sbb
sahf
nop
pop
jns
movsl
dec
in
cltd
imul
fidivl
xor
sbb
mov
insb
jbe
jecxz
xchg
incl
adc
xor
pop
repz
jno
mov
cmp
clc
jg
mull
repnz
xchg
mov
pusha
je
call
pop
sti
icebp
jp
inc
outsb
sbb
adc
cmp
inc
outsl
jl
imul
ljmp
outsl
insl
in
std
add
jbe
xor
pushl
cmp
mov
je
jle
and
loop
lcall
sub
pop
cwtl
test
and
fwait
mov
rcrl
sbb
xchg
les
xor
and
fidivl
pop
cmc
filds
add
dec
cwtl
adc
xchg
inc
ret
mov
fwait
leave
adc
add
push
pop
sbb
arpl
ljmp
mov
add
xor
sarl
lcall
xchg
stc
xor
inc
sbb
xor
je
js
sahf
movsl
push
sbb
dec
stos
ficompl
call
test
sub
inc
xchg
mov
inc
mov
inc
mov
js
add
test
mov
push
inc
pop
test
pop
jb
ret
leave
stos
mov
stos
decl
popf
push
es
adc
xchg
ljmp
sub
inc
pop
mov
pop
es
in
push
adc
movsb
inc
subl
clc
jmp
xor
jo
push
push
cmp
mov
outsl
jne,pt
imul
lcall
xor
cmp
cmc
push
xchg
push
cmp
loope
mov
xor
pop
push
mov
mov
add
mov
push
pop
ja
loopne
scas
movsl
aaa
sbb
es
adc
xchg
mov
js
jl
dec
pushl
movsl
pop
jnp
jnp
add
mov
sbb
fisubs
ljmp
dec
and
scas
leave
pusha
js
mov
xor
push
test
andb
add
cli
add
rorb
popf
lea
jbe
pushl
add
jbe
adc
jmp
mov
popf
ja
xchg
dec
or
ljmp
cmp
inc
pop
clc
imul
push
cwtl
xor
test
stos
or
mov
outsl
fidivrl
jno
jo
mov
mov
cmp
adc
cmp
mov
lcall
adc
mov
mov
rcl
mov
jmp
mov
outsb
jmp
push
jns
cmp
and
push
jo
aad
pop
icebp
inc
mov
lcall
add
sub
xor
xchg
and
inc
inc
pop
popa
mov
imul
lcall
test
inc
pop
xor
jns
jge
inc
xor
mov
push
push
adcb
add
or
jns
mov
jno
jle
or
rcl
or
jne
in
cld
jo
xchg
ret
addl
add
fisttps
mov
rorb
and
xor
push
out
dec
sbb
mov
das
fsubs
lahf
xor
jbe
mov
xor
stos
popa
ret
mov
lods
lcall
gs
push
xor
xchg
mov
ja
mov
pop
cmp
jbe
popf
and
dec
and
mov
dec
mov
inc
dec
sub
dec
mov
dec
in
xor
mov
jl
jmp
sbb
pop
fdivrl
lods
and
push
aaa
sub
inc
sbb
mov
push
mov
xchg
and
das
cmp
mov
fs
xchg
lcall
daa
movsb
add
addr16
adc
je
cmp
jmp
xor
and
inc
sbb
cmp
and
cld
call
jbe
add
shlb
leave
mov
adc
pushl
inc
xchg
xchg
lret
aas
mov
adc
push
mov
jge
js
add
sysexit
inc
or
or
decl
mov
sbb
addl
nop
test
or
xchg
popa
mov
popfw
cwtl
loope
lock
aaa
cld
or
seto
mov
ret
xchg
idiv
fistps
inc
dec
daa
xchg
jmp
mov
dec
sbb
and
into
xchg
mov
repnz
sub
lea
and
add
les
sti
cmp
fwait
xchg
xor
rclb
les
rorl
sub
push
aaa
fwait
sub
iret
xchg
lods
orb
ljmp
adc
rcll
cmp
sbb
add
mov
nop
ljmp
jecxz
ljmp
fisubrl
jp
popa
push
and
mov
lods
notl
incl
ds
movsb
sub
push
and
xchg
inc
std
mov
inc
fbstp
mov
lods
jo
insb
mov
repnz
cs
add
inc
mov
or
xchg
mov
lock
xlat
leave
addl
shr
clc
fcomip
ficoml
mov
adc
push
call
outsl
cmp
add
adc
mov
cmp
and
push
and
mov
mov
inc
shlb
dec
insl
jge
xchg
cltd
add
inc
sub
les
xchg
in
sbb
cmp
jno
shlb
sub
cli
fcomip
pushl
mov
loope
stos
cld
fstpt
xor
or
mov
fcoml
sbb
lret
sbb
sub
ret
lea
add
aam
sar
fstp
incl
mov
iret
mov
add
int
fcoms
call
fists
in
std
fdivrp
incl
sbb
je
sbb
fsubrp
rcll
int
subl
cmp
rclb
pop
sar
rcrb
decl
jmp
shl
inc
punpcklbw
push
fdivrl
sub
xor
clc
test
lods
push
mov
push
scas
push
mov
jg
pop
mov
scas
mov
mov
pop
cmp
mov
mov
inc
test
xchg
mov
cld
pushl
lcall
cmp
cmpsl
jle
jbe
popf
pop
shlb
ror
out
clc
push
dec
in
stos
jp
in
stos
movsl
out
mov
pop
mov
inc
call
rcll
lret
bound
cmp
rclb
push
repz
add
stos
ret
paddb
mov
call
jle
push
mov
jge
pushf
aas
jle
add
incl
fnsave
fmull
adc
bound
aaa
clc
aaa
cmp
ss
out
cmp
xchg
push
fdivr
sub
outsl
jg
sahf
cs
out
sahf
scas
add
jmp
push
add
adc
push
jecxz
mov
mov
mov
sar
pop
mov
int
lret
mov
iret
inc
sub
cmpsl
icebp
mov
in
sbbl
call
adc
mov
cli
std
loopne
outsb
mov
call
shl
lcall
aad
pop
adc
push
push
add
in
push
jl
shl
pop
js
cmp
cmc
cmp
jnp
push
jl
xor
push
movb
out
cmp
mul
das
pop
xchg
ret
ljmp
in
mov
cwtl
das
add
in
in
adc
jg
cmp
lcall
jo
mov
dec
xor
pop
sub
test
cmp
repz
mov
daa
dec
dec
adc
mov
out
dec
cmp
and
decl
push
adc
rolb
mov
mov
pop
out
mov
imul
xchg
dec
and
mov
pop
push
adc
enter
cmp
fmuls
in
aaa
jbe
mov
or
insb
lahf
divb
push
test
std
push
outsb
jmp
not
int
mov
jmp
mov
cmp
stc
rcr
call
call
fs
jmp
push
in
jmp
out
iret
aam
mov
or
fnstcw
cli
lcall
add
int
out
or
sbb
mov
xor
in
adc
out
dec
sub
mov
pushf
in
jmp
push
shr
ljmp
sub
xor
jo
arpl
sub
adc
dec
incl
xor
std
loop
mov
push
shl
or
dec
inc
jg
jo
and
ret
xchg
mov
mov
testb
jno
dec
aad
incb
jbe
push
mov
incl
test
dec
inc
add
push
and
adc
pop
mov
popf
mov
pop
decl
les
sysexit
ds
sub
arpl
xor
sbb
test
int3
inc
xor
enter
and
int3
or
pop
test
rcrb
lret
push
nop
jne
aam
mov
dec
clc
pop
jmp
xchg
ret
test
scas
movsb
and
or
or
pop
cmp
popa
sbb
xor
icebp
call
mov
mov
rclb
jl
enter
lds
cwtl
cmpl
pop
jecxz
cld
incl
xchg
mov
sub
sbb
mov
inc
xchg
push
push
pushl
jge
mov
cmpsl
push
js
loopne
mov
adc
decl
mov
add
pop
cmp
add
mov
jl
ljmp
sbb
out
adc
insl
clc
cmp
fmul
pop
mov
imul
jg
fwait
aaa
mov
imul
call
ljmp
sarb
out
mov
shl
in
out
cmp
aas
push
add
ds
mov
aas
mov
clc
inc
decl
xor
jmp
scas
mov
rol
adc
and
sub
pop
fs
inc
sbb
dec
add
or
fwait
dec
dec
sbb
aam
xchg
or
adc
or
data16
addb
lock
incl
subb
stos
mov
les
sub
inc
sbb
sarl
decl
adc
mov
dec
sahf
ss
adc
aad
xchg
int
lds
hlt
mov
je
dec
sbb
test
mov
adc
decl
sbbb
mov
test
sbbl
and
call
ljmp
push
ds
shlb
and
nop
popa
mov
mov
pop
xor
mov
jne
or
pop
insl
popf
mov
push
or
jg
in
push
mov
pusha
jge
mov
cli
pusha
mov
jle
bound
lods
or
dec
lods
sbbl
push
call
sub
and
fstpt
ljmp
sub
add
fsts
popa
fidivrs
shlb
fdivrp
incl
pop
mov
sub
ja
cmp
mov
sbbb
mul
aaa
and
lea
jmp
add
push
cmp
or
cs
sbb
xchg
mov
inc
jmp
xchg
add
push
sbb
fdivs
outsb
lret
dec
xchg
jbe
out
out
decl
or
mov
cmp
jb
add
scas
push
sarb
ljmp
call
imul
inc
cs
inc
mov
scas
jo
loope
aas
jl
insb
clc
aam
outsl
insl
stc
mov
jmp
inc
das
aad
add
add
inc
inc
adc
ret
movsb
xchg
jno
push
movsb
add
call
jb
in
leave
and
and
scas
pushl
or
bound
pop
add
add
inc
sbb
jg
in
cmp
and
and
and
jno
pop
std
cmp
sarl
das
lret
jb
dec
mov
in
ja
popf
stos
lods
sbb
mov
dec
mov
loop
daa
repnz
mov
test
popf
das
xor
mov
xor
stos
mov
lcall
loope
decl
cmp
and
sbb
pop
cli
xlat
inc
and
sar
ljmp
push
xor
int3
pop
in
test
hlt
popa
or
ja
data16
rolb
arpl
loopne
rorl
lcall
jle
xor
ds
push
push
fsubrs
dec
loopne
loop
xchg
mov
xchg
clc
and
leave
decl
movb
add
cmp
cs
lcall
or
mov
and
rorl
xchg
inc
sub
xchg
and
and
call
xchg
mov
adc
arpl
pop
out
inc
adc
popa
push
xor
sbb
push
pushl
movsb
leave
or
test
rcl
xchg
loope
rolb
push
add
cmpsb
sbb
cmp
mov
push
xor
jg
aam
aad
jae
pushf
movsl
sub
fldt
aam
mov
push
outsl
jbe
fwait
xor
and
leave
or
frstor
mov
sahf
jl
or
test
sbb
push
das
psubb
jmp
and
push
cmc
movsb
cmp
test
leave
push
enter
or
aaa
lods
xor
mov
xchg
dec
fwait
pop
and
pop
ret
nop
jecxz
sbb
test
out
loopne
mov
mov
stc
shr
adc
mov
mov
fs
out
sbb
incl
pop
in
stc
cmp
push
dec
jnp
mov
or
nop
mov
hlt
sub
clc
decl
xchg
xchg
les
inc
mov
pop
or
mov
lea
mov
dec
pop
push
mov
jle
cwtl
pop
pop
lcall
incl
and
mov
cmp
and
adc
sar
dec
jg
add
mov
std
imul
adc
dec
gs
call
movsb
mov
sbb
add
mov
pop
std
loopne
add
add
push
add
stos
mov
pushl
mov
or
ds
sbb
ret
or
rclb
mov
inc
or
shrb
and
cltd
out
and
push
pop
insb
add
sbb
decl
dec
add
sub
lcall
inc
and
xchg
and
cmp
mov
pop
test
lea
lcall
fcmovnbe
icebp
xor
add
mov
xorb
sbb
xchg
inc
jecxz
jae
incl
leave
pushf
adc
or
jae
sbb
inc
inc
sub
jbe
repz
xchg
out
ja
sar
incl
loopne
mov
int3
andl
cmpsb
repnz
add
adc
scas
imul
jmp
in
bound
insb
jl
faddl
js
jo
inc
sarl
icebp
imul
adc
decl
leave
dec
xor
mov
sbb
shrb
xor
sbb
mov
incl
adc
ret
cmp
xchg
sub
dec
sbb
add
js
sub
pop
inc
fimuls
decl
and
sahf
add
xor
or
jp
mov
in
adc
pop
inc
ret
xor
and
rorl
pop
das
mov
movsl
sub
dec
xlat
inc
add
inc
add
sbb
add
mov
push
adc
inc
test
mov
or
inc
setb
js
jg
xor
clc
call
pop
add
orl
sti
lcall
aam
jp
subl
sbb
pop
mov
xlat
sbb
adc
pushl
loope
rcrb
push
arpl
jge
push
rcr
scas
cmp
or
dec
or
mov
incl
mov
fldl
pop
inc
dec
lret
mov
lods
insb
movb
lret
gs
test
xchg
icebp
mov
lods
in
sbb
divb
mov
mov
mov
stc
lods
xchg
mov
aam
xchg
fstp
jmp
faddl
xchg
cli
cmp
or
insb
mov
je
out
cli
jmp
leave
lods
test
fidivl
imul
clc
sbb
fwait
in
ljmp
fnstsw
mov
daa
pop
fdivl
pushf
ljmp
mov
ss
and
test
lret
add
sbb
xor
push
daa
cmp
pushl
xchg
or
ficompl
aam
or
dec
rcrl
add
cmp
mov
sub
aaa
std
js
adc
les
rorb
mov
mov
into
je
push
mov
jp
mov
cli
fstp
gs
sbb
adc
ljmp
js
je
mov
mov
xor
inc
jno
cmp
das
js
sbb
mov
jo
sbb
je
or
sub
dec
loope
lcall
fwait
xchg
and
test
or
adc
cmp
mov
push
iret
test
mov
mulb
push
loopne
xor
dec
loope
xor
test
or
hlt
jo
es
cmc
lcall
lods
jo
inc
test
test
or
inc
jle
lcall
jl
aad
les
orl
sahf
jge
push
add
test
sbb
add
ret
sbb
xchg
cld
cmp
dec
addb
xor
bound
dec
ss
or
decl
cli
lret
dec
adc
pushf
and
sub
pushl
call
or
movsl
pop
xchg
scas
loope
movsb
adc
in
or
bound
aad
fcomp
and
jns
ret
clc
mov
inc
and
jnp
out
popl
adc
jg
sbb
push
mov
jae
cmp
aaa
mov
or
inc
sbb
cmp
ret
sub
adc
inc
pop
xchg
add
mov
jg
mov
mov
xlat
xchg
lock
xchg
sbbb
jmp
push
or
inc
pop
mov
mov
pop
mov
xchg
and
loop
fdivr
jmp
out
xchg
push
dec
sub
xchg
sub
sbb
sbb
xor
xchg
incl
sahf
adc
xor
pop
pop
mov
aaa
jo
push
mov
negb
inc
sub
aaa
pop
mov
fs
cmp
xor
pop
movsb
aas
cli
lcall
lds
or
das
inc
cltd
aam
add
xorl
sbb
fcmovb
cmp
pushl
int3
xchg
and
sbb
push
cmp
incb
inc
jbe
mov
lock
sub
sbb
xor
and
pushl
cmp
aas
aaa
addb
sbb
adc
sbb
adcb
scas
clc
dec
clc
push
stos
insl
lock
xchg
add
mov
lods
cmp
jg
cmp
adcl
cmp
add
cmpb
jecxz
sub
mov
add
fnstenv
push
cwtl
jge
sbbl
popa
jo
cld
or
sarb
add
mov
ss
sub
push
fisubrl
in
pop
sbbb
jg
jnp
mov
dec
jne
push
mov
pop
lods
shl
dec
fldcw
fisubl
into
call
mov
add
mov
loop
jg
ret
movsb
xor
mov
dec
jmp
mov
imul
inc
jmp
jg
lds
mov
dec
sahf
ret
das
fsubl
in
lret
adc
adc
lods
and
jecxz
rcl
scas
out
fdivrs
inc
dec
pushl
add
ret
ljmp
sbb
pop
adc
jb
jge
or
andb
mov
sub
cmp
jecxz
sbb
ljmp
pop
or
dec
or
xor
cmp
icebp
xchg
loopne
jmp
push
pushf
or
sub
or
adc
jg
mov
stos
or
cwtl
sbbb
ficompl
enter
subb
push
push
mov
clc
xorb
and
fwait
add
mov
add
pushf
jg
and
and
insb
push
sarb
call
pop
add
cmp
and
cltd
mov
push
decl
xchg
push
mov
sarb
mov
sub
nop
mov
fbld
cmp
push
sbb
adcb
jne
add
movsb
pop
subb
add
xchg
das
cwtl
mov
ja
add
mov
adcl
jle
daa
or
lods
test
mov
jg
mov
and
pop
fadds
call
loop
xor
xchg
js
sbb
js
fwait
mov
das
or
sahf
fdivrl
xchg
mov
mov
add
test
aaa
add
add
or
mov
outsl
lret
inc
fdivs
sub
std
and
aam
push
push
xchg
mov
add
push
pop
sub
ljmp
mov
pop
push
dec
or
push
pop
pop
int
adc
mov
dec
lret
iret
mov
aad
or
test
or
dec
pop
adcb
mov
mov
pop
sbb
inc
push
incl
mov
cltd
add
lret
stos
incl
mov
pop
dec
loop
inc
test
or
cwtl
mov
decl
cwtl
in
mov
pop
and
push
jl
sub
sbb
jmp
mov
sahf
aaa
dec
pop
pop
and
test
cmp
rcll
lcall
jmp
and
ret
call
dec
inc
jnp
or
jnp
lods
add
mov
pop
icebp
call
movsb
lret
jge
add
pusha
mov
stos
andb
xor
xchg
aam
mov
add
sub
xchg
add
lret
cmp
lock
cld
pop
stos
or
jbe,pn
or
xchg
mov
pop
ljmp
in
mov
sub
adc
push
sub
jns
add
in
insl
call
push
orb
stos
jae
mov
ret
cmpl
mov
call
jle
pop
cmp
add
call
sbb
pop
push
orb
xchg
rolb
mov
sub
enter
mov
lret
decl
adc
inc
hlt
inc
mov
adc
dec
std
pop
xchg
call
adc
popf
test
mov
or
aaa
lcall
call
imul
leave
loopne
add
cmp
in
incl
je
pop
movsb
pop
lds
mov
iret
in
push
in
add
xchg
adc
rolb
in
cmp
cmp
add
or
imull
xchg
jg
loopne
cli
mov
adc
std
mov
fwait
rcrl
fiaddl
decb
xor
dec
xor
xor
test
call
adc
jg
mov
adc
stos
and
pop
nop
leave
in
les
sar
jbe
cwtl
ja
sbb
or
lods
xor
adc
les
decl
call
adc
dec
mov
xor
dec
add
jnp
xor
cmp
movsb
xor
leave
push
add
mov
shl
mov
and
js
stos
push
cmp
or
incl
inc
dec
push
imul
dec
add
xchg
arpl
mulb
stc
dec
mov
xchg
or
cltd
jg
popa
std
lahf
es
popa
push
pop
rcr
stos
add
adc
jg
add
pushf
adc
add
scas
cli
bound
fs
add
jecxz
push
std
mov
add
gs
mov
clc
test
add
inc
cmp
aad
bound
mov
xchg
mov
sub
jle
fistl
jg
pop
mov
subl
add
xor
cmp
mov
ret
dec
ret
lock
and
and
xchg
xchg
pushl
jo
jecxz
dec
test
xchg
adcb
mov
lcall
sbb
xor
push
out
pop
xchg
shlb
pusha
mov
mov
orl
out
cld
inc
fisttpl
mov
sar
pop
hlt
lcall
lret
enter
mov
int3
mov
push
int3
pushl
jmp
dec
cmp
inc
call
cmp
gs
push
push
pop
decl
stos
cmpb
adc
stc
mov
cwtl
push
std
lcall
jmp
push
movsl
push
inc
jmp
ficomps
jnp
add
fadds
lcall
insl
test
mov
cmp
cmp
mov
arpl
add
jbe
or
ret
sar
decl
mov
in
and
sbb
rclb
mov
and
popa
xor
outsb
push
pushl
ljmp
jns
mov
loope
inc
mov
push
mov
sar
add
fs
cld
and
pop
cld
jae
outsb
fildll
xor
call
outsb
into
ficompl
cmp
jg
test
into
lahf
mov
pusha
pop
cmp
incl
add
shl
xchg
test
add
fldl
xorb
mov
incl
out
jnp
addb
ss
push
fidivrs
pushl
hlt
adc
xor
push
xchg
stos
or
sub
andb
mov
orb
or
mov
cmc
add
mov
xchg
ds
xor
dec
push
add
jmp
mov
cmp
iret
or
out
xor
adc
xor
fidivrs
fs
fdivrl
add
dec
flds
ljmp
lcall
add
inc
enter
cmp
mov
jo
mov
xchg
aas
jge
in
jg
mov
or
pop
push
xor
sbb
add
call
mov
push
clc
mov
nop
adc
push
fistpll
push
imul
call
push
imul
out
cltd
stc
push
std
decl
pop
pop
jb
push
imul
aad
push
ljmp
stos
push
ss
sbb
dec
or
dec
mov
pop
cmc
incl
cltd
inc
xlat
fimull
jecxz
cmp
push
dec
mov
or
push
mov
xorb
test
shlb
mov
loop
fmuls
cmpsl
fstpl
cli
fmuls
inc
mov
inc
sbb
or
data16
xchg
jp
imul
sub
and
test
or
cld
adc
and
pop
sub
push
lods
call
pop
jmp
imul
xor
incl
in
inc
add
cld
rcr
pusha
pop
dec
pop
mov
pop
pop
add
pop
jne
test
add
and
xor
add
sub
and
push
dec
orb
fcomip
cmp
or
cmpsb
lock
xchg
pop
push
sub
cmp
mov
mov
es
push
add
push
call
add
xchg
stos
subb
movsb
xor
lret
pop
ficoms
test
mov
pop
insl
movsl
sub
cld
imul
xchg
xorl
clc
es
push
js
push
ljmp
rolb
inc
roll
scas
cmp
dec
test
jp
mov
lret
cmp
dec
mov
incl
push
mov
inc
jle
lods
add
int
mov
and
xchg
cmp
lahf
sbb
mov
lcall
mov
or
cld
dec
jno
iret
jno
decl
lea
shrb
scas
cli
xchg
icebp
xchg
outsb
sbb
pop
jnp
imul
adc
jp
daa
enter
push
jno
decl
call
test
xchg
data16
mov
sahf
lret
into
stos
mov
jbe
out
nop
xchg
mov
adc
xchg
push
movhps
mov
js
mov
ss
cmp
lcall
or
cmpsl
sub
popf
leave
imul
repz
mov
push
add
cltd
cmpsl
add
incl
dec
cmp
or
xorl
andl
sbbb
jno
test
add
sub
cwtl
adc
and
inc
or
add
cmp
mov
aaa
or
xchg
iret
aas
push
mov
stos
popa
stos
add
lcall
rorl
sahf
pop
jnp
push
mov
popa
cmc
das
test
clc
xor
into
data16
xor
call
sbb
or
push
mov
ljmp
mov
mov
xor
push
xchg
push
cli
cmc
inc
fidivrs
ja
ss
mov
outsl
and
add
jb
pop
sbb
jp
push
adc
xchg
sbb
mov
ljmp
lretw
xor
mov
rolb
xchg
pusha
dec
test
sti
push
loope
sbb
xchg
add
fcomip
jnp
lods
add
movsb
int3
cmp
cmp
fcomps
cmc
in
fwait
cmpsb
push
cmpsb
hlt
add
or
add
loop
std
push
loopne
repnz
push
fistpll
adc
js
add
fdivrp
lcall
mov
inc
loop
sbb
add
cmp
push
xor
and
loope
test
push
push
mov
add
imul
punpcklbw
inc
hlt
jmp
and
fimuls
roll
inc
ja
ffree
push
pop
outsl
into
sbb
repz
dec
inc
cmpsl
mov
lea
inc
mov
xchg
fdivrp
cli
ja
push
inc
scas
mov
stc
repnz
inc
xlat
pop
and
repz
xchg
scas
pop
mov
mov
repz
mov
negl
aas
cld
add
mov
push
mov
mov
sbb
mov
add
incl
add
rolb
bound
mov
rorl
push
inc
xor
rclb
scas
or
sub
in
mov
xor
xor
in
dec
mov
mov
call
cltd
add
xchg
push
push
movsl
xchg
push
dec
lcall
sbb
xchg
gs
movsb
xchg
gs
lcall
xchg
lcall
subb
lcall
test
xchg
adc
inc
sbb
push
das
or
add
jns
inc
xlat
gs
pushf
jno
adc
adc
lock
in
decl
in
xchg
cwtl
cmp
loopne
sub
lods
mov
xor
inc
pop
inc
lods
bound
call
lods
add
mov
mov
ljmp
sub
and
xor
xor
xchg
sbb
fdivr
push
cld
jmp
xchg
mov
xchg
loope
push
test
dec
movsb
aad
testl
inc
ret
mov
push
jne
push
add
dec
sbb
je
sarl
pop
loope
mov
std
pop
fnsave
push
jae
or
iret
cmp
mov
nopl
je
les
inc
mov
inc
adc
or
ror
bound
and
mov
push
adc
mov
mov
sbb
ret
xchg
sbb
or
dec
push
xchg
leave
aad
inc
jb
xor
pop
js
ja
dec
jno
pusha
inc
scas
pusha
xor
inc
iret
xor
shl
cmp
mov
and
incl
fs
sahf
xor
sbb
mov
sub
add
mov
cmp
inc
fisttpl
test
lcall
mov
fsubrl
sbb
xchg
cmpsb
es
cmp
daa
mov
ljmp
add
sub
testl
in
lea
jne
lea
sahf
jl
out
cmp
je
xor
push
pop
ljmp
cli
jg
add
mov
call
jno
mov
add
mov
mov
decl
lea
testb
cmp
dec
rcrl
lds
mov
out
xchg
cmpsb
xchg
aas
neg
jl
sub
add
inc
xor
call
add
daa
xchg
outsl
pop
stc
in
push
lret
xchg
notl
les
call
dec
divb
xchg
push
cmp
js
push
jp
cld
mov
movsb
ljmp
in
lahf
and
test
dec
lret
bound
cmp
cmpb
sub
call
dec
pop
xchg
cmp
add
bound
push
stos
xchg
jne
pop
lods
subl
push
call
cld
push
lods
popa
add
les
push
sub
pusha
lods
das
mov
or
jns
sub
nop
inc
add
dec
add
imul
test
les
cld
pop
lock
stc
enter
lock
jle
inc
pop
std
or
inc
ret
mov
pop
mov
das
xor
pop
jp
orb
pop
call
adc
sub
push
pushf
repnz
pop
shlb
lret
push
incl
test
fstps
xor
xchg
add
test
push
out
test
ret
or
add
lcall
rclb
inc
in
jb
test
mov
mov
push
xchg
ljmp
xor
dec
dec
bswap
es
in
es
sbb
jle
mov
add
aaa
outsl
adc
in
mov
jno
jbe
rorl
jno
sbb
test
enter
stc
cltd
jnp
repz
mov
icebp
cmpsl
jg
test
jae
lcall
cli
cmp
jp
fstps
push
jo
adc
jns
push
sahf
in
mov
ljmp
cli
sarb
mov
in
and
and
cmp
adc
sbb
add
sahf
hlt
pusha
mov
daa
inc
mov
mov
shll
movsl
push
dec
jg
movsb
sbb
lock
adc
divb
inc
or
mov
mov
es
lret
push
add
cmp
xchg
dec
or
push
enter
jmp
sti
in
stos
ja
push
lcall
nop
dec
mov
ret
and
push
loopne
test
rolb
data16
push
adc
call
adc
incb
add
je
sbb
rolb
cmp
dec
dec
add
sbb
push
pusha
lock
pop
mov
push
cmpb
cs
mov
and
and
ret
pushw
push
cmpsb
jmp
pusha
imul
jo
push
xor
pusha
add
hlt
incl
mov
push
adc
dec
aas
cmp
jmp
js
adc
fistpll
fidivrl
test
call
xchg
add
inc
rolb
adc
ljmp
or
sub
fldt
cmpsb
cld
data16
sub
xor
in
or
and
cmp
rorl
adc
fs
mov
mov
jmp
add
mov
sti
dec
rcll
cmp
adc
les
decl
imul
xor
mov
mov
mov
dec
arpl
out
xchg
jecxz
jb
push
or
leave
sbb
call
dec
int
ret
cmp
jbe
orl
cmp
lahf
rolb
xor
lcall
fistl
cli
sbb
inc
mov
mov
sbb
addr16
sbb
fldt
push
out
add
out
dec
movsb
test
push
incl
jbe
sub
and
and
scas
rolb
push
stc
pusha
adc
ljmp
mov
add
dec
jecxz
inc
inc
ret
push
sbb
nop
lret
dec
mov
jle
lcall
dec
lock
mov
pop
push
mov
and
hlt
jecxz
call
cmc
add
shlb
outsb
push
push
jno
add
mov
xor
ljmp
out
decl
orl
and
pop
jnp
add
jns
ljmp
ljmp
movsl
pop
imul
dec
xor
and
aam
adc
es
inc
in
mov
push
call
mov
outsl
mov
add
ret
cmp
mov
mov
push
xor
adc
stos
or
enter
clc
or
jo
cmp
ja
jo
or
rorb
cmp
mov
sub
es
lcall
pop
push
xchg
jle
adc
sub
mov
fxch
es
popa
mov
sub
jmp
dec
fsubrs
and
ja
push
xchg
xchg
jb
add
mov
jg
incl
out
cmp
fs
test
repnz
mov
mov
dec
lret
pushl
dec
adc
mov
mov
jmp
leave
enter
lret
dec
out
inc
mov
jne
call
pushf
mov
sahf
fisubrl
sub
inc
out
cmp
popf
inc
mov
int3
adc
pushl
jae
shl
cmp
fs
into
insb
ljmp
sbb
shlb
nop
jmp
in
lea
jp
and
pop
xor
ljmp
lahf
popl
dec
int
je
imul
mov
dec
adc
insl
mov
mov
stos
jno
xchg
cltd
push
rclb
ljmp
xchg
pop
movsl
stc
adc
jbe
std
lcall
popf
mov
popf
mov
push
cwtl
xchg
mov
mov
add
mov
fnstcw
sbbb
or
add
and
cmp
jb
jmp
mov
movsl
fst
cmp
mov
bswap
lret
add
mov
jno
inc
push
mov
ljmp
incl
pop
and
jo
fdivs
sbb
aam
inc
adc
imul
sub
dec
movsb
or
dec
push
jno
lret
adc
inc
add
js,pt
test
push
ss
leave
push
leave
adc
inc
or
inc
sbb
xchg
add
jne
js
jl
pop
jg
cmp
mov
ss
mov
pop
mov
sbb
fwait
mov
cli
roll
frstor
inc
pop
push
rolb
lods
inc
cs
popf
xchg
int
out
clc
cmp
xchg
fcom
nop
pop
addr16
movsb
or
aad
emms
adc
mov
add
push
lea
mov
sub
fbld
fmull
add
or
dec
jnp
sahf
in
clc
incl
andl
pop
sbb
xchg
inc
push
xchg
popa
xchg
aad
ds
into
out
push
jge
incl
fidivs
cli
sarb
aaa
adc
rolb
dec
add
inc
inc
call
mov
lcall
fdivrs
mov
out
cld
arpl
mov
add
adcb
or
adc
sbb
call
sbb
repz
push
mov
clc
test
and
cmp
imul
or
mov
add
mov
cli
test
xor
shrd
in
lcall
ljmp
fs
loopne
add
movsb
dec
out
and
add
inc
fwait
pmuludq
mov
popf
cs
add
or
out
bound
shlb
scas
sub
push
in
lds
fstpt
add
add
outsl
cli
decl
xor
push
imul
jo
sub
push
adc
inc
ljmp
lcall
pop
stos
gs
push
shlb
shll
jo
adcl
xbegin
andb
or
add
cmp
adc
or
ljmp
stos
test
or
and
pop
xor
mov
add
or
pop
ljmp
pop
cli
and
xlat
cltd
sbb
pop
arpl
fldenv
sub
pop
and
ficoml
fstpl
pop
and
and
call
sahf
fmuls
adcl
inc
into
fistpl
test
repnz
fisttps
jbe
imul
fidivl
cmp
out
and
cmp
loope
pop
hlt
imul
imul
insb
enter
test
inc
pop
push
in
ljmp
cltd
dec
jp
pop
out
sahf
jg
mov
xchg
dec
cmp
cmp
or
xchg
inc
imul
add
inc
test
lahf
mov
inc
es
clc
mov
adc
nop
or
dec
inc
jp
repz
dec
stc
mov
cmc
popa
lahf
test
pop
test
adc
insl
mov
loop
dec
cli
xor
jo
xchg
mov
or
leave
and
dec
test
rcr
hlt
jg
lcall
and
insb
out
add
cmpsb
fbld
or
pop
push
mov
jmp
fs
out
or
push
sub
daa
das
fisttpll
loopew
lods
and
scas
fisttpl
dec
dec
je
adc
push
cmp
cmp
aad
hlt
movsb
dec
stos
mov
push
movsb
jb
pop
push
ljmp
adc
mov
and
or
mov
add
sar
inc
lahf
sub
in
or
push
mov
sub
adc
ljmp
subl
pop
adc
lds
bound
sub
or
push
decl
xchg
fwait
mov
rorl
loop
lods
loopne
xchg
fcmovnu
add
push
jbe
sub
xchg
ss
cmp
sub
sbb
rcrl
mov
aam
subl
pushl
cmc
mov
jbe
inc
cmp
sbb
jl
arpl
xchg
mov
fcomip
incl
xor
xor
and
cmp
insl
inc
call
lcall
lcall
cltd
lret
scas
sahf
ljmp
fcomps
jno
test
jg
mov
jbe
rol
subl
adc
roll
push
fnstenv
ret
arpl
inc
sub
std
rcrb
dec
sbb
scas
aam
je
xchg
ss
aad
push
sbb
fs
decl
testb
enter
mov
xor
cmp
xchg
leave
mov
and
push
mov
ljmp
testb
or
stos
mov
sbb
push
dec
cld
and
mov
cli
jmp
xchg
call
movsl
pushf
add
push
test
data16
lods
decl
outsl
xor
in
aam
adc
test
scas
andl
push
pop
movsb
sbb
std
in
out
pop
call
sub
scas
mov
scas
out
outsb
pop
inc
push
or
pushl
mov
scas
adc
out
or
inc
outsl
hlt
sbb
inc
das
add
sbb
push
inc
out
sar
outsl
imull
enter
pop
sahf
rdtsc
sbb
les
inc
inc
test
mov
into
hlt
inc
arpl
stos
clc
scas
xlat
and
pop
pop
cld
and
cmpsl
mov
sarb
int
inc
in
aad
rorb
jmp
fidivrl
in
cmp
cmp
in
cmp
push
inc
xchg
xor
cmp
lcall
mov
or
cwtl
andl
dec
sub
call
jnp
test
or
inc
jecxz
pop
inc
mov
imul
out
enter
xor
movl
shl
inc
test
ds
mov
pop
adc
inc
push
repz
mov
push
lock
aad
xchg
repnz
or
ljmp
stos
mov
inc
xlat
mov
add
push
cmpsl
pop
lahf
mov
fildl
push
inc
mov
movsb
adc
testl
xor
repz
stos
jns
lods
gs
test
test
mov
lcall
nop
push
js
cld
insb
cmp
push
rorl
jb
outsl
mov
xor
call
push
cld
inc
xor
and
mov
shrl
aad
mov
incl
rorb
popaw
cmpsb
aam
push
les
jecxz
cmpsb
mov
sahf
xlat
lods
incl
fmul
push
mov
xor
incl
sub
jae
ds
sbb
outsb
stos
mov
out
push
je
aaa
jmp
incl
negb
aaa
adc
outsl
shlb
das
stc
push
enter
pop
pop
dec
aad
mov
decb
add
dec
lods
add
sbb
and
add
daa
or
fldl
faddl
js
rcrb
mov
xchg
aam
sbb
jle
cmp
decl
lcall
mov
jno
arpl
mov
or
or
sbb
cmp
into
xorl
xchg
insb
leave
sbb
xlat
mov
push
sub
xchg
inc
cmp
fistps
fwait
sub
cmp
outsb
fcompl
je
in
jmp
and
adc
push
std
call
lret
aas
fiaddl
xor
movb
outsb
mov
in
test
push
mov
decl
ds
insl
dec
fiadds
xchg
sbb
dec
mov
addr16
sbb
icebp
dec
int3
call
or
inc
pop
push
imul
dec
mov
mov
push
and
dec
lcall
add
test
pop
sub
jns
push
mov
fs
ljmp
xchg
je
xchg
mov
test
imul
imul
mov
and
pusha
add
in
adc
add
inc
cmp
or
call
mov
pop
sub
jbe
out
es
testb
inc
push
fimuls
outsl
outsl
jo
mov
adc
repnz
pop
push
push
and
aam
iret
lcall
jg
dec
cld
push
aad
jne
ret
pop
pop
and
push
test
mov
lret
jne
add
add
or
lock
ja
and
jae
push
scas
clc
call
cwtl
xchg
add
addr16
lock
movb
xor
incl
lock
jecxz
fldenv
or
ja
popf
dec
scas
add
push
jecxz
push
or
xchg
lock
aaa
push
icebp
scas
xor
outsl
inc
jne
cli
mov
ds
push
out
mov
stos
push
pop
lret
shrb
daa
adc
test
xchg
lcall
mov
mov
icebp
jb
jne
mov
in
aam
xorl
sahf
stc
out
and
or
pop
adc
test
lahf
arpl
aad
pusha
movsb
dec
call
cld
push
xchg
clc
les
cmp
dec
popa
fs
jns
js
sbb
das
mov
test
push
inc
xchg
and
repnz
cli
data16
mov
int3
cli
jg
call
shl
enter
aaa
xchg
out
jp
das
test
repz
rsm
mov
test
scas
mov
lahf
repz
sahf
hlt
outsb
arpl
je
xor
das
cmc
lds
mov
stos
xor
jae
shlb
push
push
xchg
mov
xchg
pop
ficoms
inc
in
push
jbe
or
sti
pop
sub
mov
mov
mov
or
mov
addr16
ljmp
lock
dec
aaa
push
or
xchg
push
out
mov
cli
out
imul
xor
rolb
subl
or
mov
int3
jnp
movl
cmp
or
inc
mov
cld
add
add
add
fs
mov
mov
sbb
lds
hlt
inc
es
sub
sub
push
mov
xor
jnp
jge
and
xchg
inc
push
pop
nop
incl
iret
or
push
loopne
jne
gs
push
push
into
in
push
jl
xchg
cltd
xchg
push
outsl
cli
pop
cmc
cmpsb
inc
stc
jnp
aas
lods
pop
or
dec
frstor
je
jnp
ja
lret
xor
push
push
jae
push
lods
lahf
cmc
js
jno
mov
incl
ficompl
jne
adc
dec
push
pushf
enter
sbb
pop
cmc
jmp
test
in
sahf
movl
ret
add
mov
stos
cmpl
popf
mov
xchg
mov
stos
mov
and
push
enter
out
xchg
aam
xchg
hlt
in
je
stos
pop
mov
mov
cmpsl
sub
cmp
scas
clc
lcall
aam
test
adc
scas
mov
arpl
bnd
mov
in
scas
cli
push
inc
xorl
inc
jmp
or
mov
cmp
sub
js
repz
adc
xor
cli
jecxz
inc
push
lock
or
jmp
dec
jg
inc
xchg
or
add
mov
jno
test
mov
push
mov
xchg
push
ret
nop
mov
mov
add
jp
pop
adc
andl
or
inc
mov
inc
mov
sahf
mov
inc
xchg
cmp
dec
mov
das
jg
dec
mov
out
cmpsl
push
mov
incl
mov
decl
mov
lods
push
movsl
xchg
mov
adc
add
dec
lea
sarb
call
cltd
sarb
mov
push
adc
xor
mov
xor
xchg
or
ljmp
jb
dec
pop
xor
jo
testb
sub
sbb
adc
mov
sbb
push
inc
mov
int
jbe
fstpt
fidivl
jmp
cwtl
fstpl
insl
or
pusha
imul
shlb
jl
xor
fldt
lcall
sti
je
push
and
jnp
out
call
sbb
sti
clc
fstl
jle
fucom
add
sbb
idiv
push
cmp
adc
enter
and
mov
xor
jg
roll
pushf
push
ret
add
ret
or
pop
mov
shlb
incl
add
or
adc
pusha
test
aam
and
aas
mov
and
mov
push
cld
dec
push
push
inc
mov
and
inc
mov
test
mov
push
and
ss
dec
test
push
sbb
xor
mov
mov
pushf
and
leave
and
mov
lds
lret
scas
xor
das
sbb
leave
leave
test
test
hlt
ljmp
and
mov
add
sbb
mov
lcall
lret
push
dec
and
dec
inc
push
mov
shll
inc
sbbb
test
sub
cli
or
mov
mov
mov
mov
ljmp
out
add
sub
insb
xor
imul
or
cmp
mov
push
adc
mov
jb
jmp
aaa
mov
mov
pop
fcoml
sbb
int
xchg
out
test
cmp
push
sbb
push
insb
das
lret
push
jmp
out
xor
push
fadds
not
or
mov
inc
add
mov
test
repz
shl
xchg
mov
fnstcw
pop
push
data16
add
sahf
fldenv
cmp
sbb
aas
sbbl
stc
push
aaa
cmp
arpl
inc
pushf
dec
ljmp
dec
cwtl
lahf
mov
sahf
xor
xchg
stos
adc
mov
pop
ds
shll
call
xchg
aas
xchg
lcall
and
mov
cwtl
insb
orb
pop
push
repz
jp
incl
dec
cmc
or
rol
add
lods
pop
aam
cmp
sahf
adc
mov
push
fcomip
mov
jne
sahf
lcall
push
scas
push
setle
call
cmp
mov
adc
xchg
test
adc
mov
jno
jmp
lcall
es
add
jmp
out
iret
mov
out
dec
jecxz
sti
rcrb
dec
pop
loop
xor
sub
aaa
loop
lret
dec
fucom
jle
or
mov
dec
nop
mov
ljmp
iret
jle
int3
jg
addb
xor
test
inc
mov
mov
push
in
andb
loopne
xor
push
jns
inc
sub
xchg
mov
push
jg
cltd
inc
push
test
ret
or
sahf
or
xchg
ret
inc
movsb
pop
push
sahf
or
and
enter
sbb
aas
js
sbb
pushf
loopne
cmp
cmp
mov
mov
mov
es
lcall
das
mov
dec
pop
movsl
repnz
mov
fs
jns
dec
stos
and
sub
pushl
mov
push
aaa
cmpsb
loope
movsb
push
mov
adc
push
das
push
jge
fwait
lcall
dec
ljmp
imul
cltd
xchg
nop
mov
jb
rorl
lcall
xchg
popf
adc
and
cld
sub
ljmp
popa
popa
fisttps
test
inc
sub
fwait
or
xchg
cmp
int
sub
sub
push
inc
push
dec
mov
push
repnz
or
ret
jg
cwtl
ret
ljmp
in
ss
call
pop
mov
mov
push
xchg
add
enter
xor
imul
xor
fbld
call
cmpl
mov
xor
scas
cli
xchg
cmpsl
cmp
and
test
jle
enter
xchg
scas
sti
in
or
mov
dec
decl
aam
jno
orb
dec
add
dec
inc
popa
mov
and
mov
clc
call
test
xor
push
int3
into
outsb
data16
xchg
push
addr16
pop
jge
mov
mov
cmp
sbb
pop
nop
cmp
mov
mov
adcl
decl
dec
shll
fadds
sub
ret
or
xlat
mov
inc
jle
jmp
adc
sbb
and
inc
cmp
inc
lcall
adc
pusha
push
sbb
inc
inc
cmp
dec
movsb
pushl
lods
and
ja
cmpsb
or
loopne
mov
dec
mov
xchg
lret
clc
adc
jmp
std
adc
outsl
repnz
lods
rclb
xchg
mov
test
jmp
push
lahf
inc
dec
sub
cmp
push
mov
or
sahf
and
xor
or
hlt
sbb
cld
ljmp
insb
and
inc
cmp
aad
fnsave
int3
mov
inc
sbbl
nop
inc
push
pop
jg
imul
add
aad
push
mov
lcall
pushf
rol
repz
push
sbb
repnz
cs
mov
pop
xchg
xchg
push
addr16
imul
int3
inc
adc
cs
loop
decl
fldl
iret
dec
push
data16
mov
lods
mov
adc
mov
sub
push
decl
popl
inc
jo
xor
imul
clc
pushl
dec
dec
fadd
sub
int3
cmpsb
inc
cld
adc
jnp
mov
sbb
jmp
pop
nop
inc
jbe
and
daa
jno
call
sbbb
sub
repnz
cmpsb
mov
dec
jge
ret
and
stos
and
decl
push
faddl
xchg
adc
adc
jbe
inc
lea
fisubrs
pushl
jo
test
push
rcrb
sahf
lods
xchg
jae
aaa
pop
jmp
pop
imul
hlt
call
pop
pop
mov
repnz
aas
inc
push
xchg
enter
pusha
push
inc
lret
pop
mov
jg
ljmp
cmp
pop
or
aad
dec
sbb
pop
pusha
inc
dec
pop
and
rol
fdivs
mov
int
mov
mov
pop
xor
add
jb
inc
pop
mov
dec
incl
adc
mov
mov
and
xor
add
mov
insl
xor
loopne
fmuls
sub
mov
mov
outsb
insb
in
pushl
jbe
sub
add
mov
lcall
cltd
sbb
sub
mov
sbb
insb
out
mov
pushf
dec
add
ljmp
dec
das
cmp
aam
inc
sub
mov
ljmp
enter
dec
pop
adc
mov
roll
vmread
dec
aam
roll
ficoms
inc
pusha
rcll
rol
push
clc
xor
and
jl
stos
push
cmpb
add
push
pop
iret
int3
push
fucomp
mov
pop
adc
pop
idivb
xchg
push
mov
fsubl
push
pushl
popa
int3
dec
sub
adc
andl
push
jne
andl
aad
je
mov
inc
or
sti
inc
xor
out
out
pop
stos
pushl
inc
icebp
fsub
pusha
inc
cmp
cmp
jb
push
cld
mov
dec
pop
pop
and
sub
arpl
mov
jle
add
sub
mov
sbb
add
dec
push
push
call
pusha
sti
fildl
frstor
addb
mov
mov
outsl
clc
call
cld
es
addl
xchg
pop
mov
pushf
cmp
mov
sub
pushl
ficoml
mov
hlt
ret
adc
rcll
add
fnstenv
or
incl
das
inc
ret
pop
icebp
aas
lret
or
or
add
push
cs
push
or
decl
les
or
sub
or
ja
out
ljmp
lds
lock
mov
cmp
es
add
ljmp
jg
ljmp
pop
mov
dec
iret
out
rol
fs
insb
lock
fistps
or
cld
pusha
pushl
outsb
cwtl
mov
mov
push
insb
push
ljmp
lret
dec
lret
ljmp
out
sub
inc
sbb
xchg
mov
cli
dec
inc
adc
andl
out
add
loop
adc
or
mov
push
xor
testb
add
dec
addr16
ss
sub
push
movsb
call
pop
mov
cwtl
inc
lods
js
pusha
outsl
inc
iret
lock
into
in
push
or
mov
rolb
xor
cmc
orb
push
xor
in
cmpsb
sub
fidivs
mov
int
jae
pop
xchg
insl
push
ret
dec
fidivl
or
jb
sub
stos
loope
in
push
in
inc
push
lcall
lock
fildll
insl
or
mov
fsubl
cli
fdivrp
out
or
pushf
shr
jle
arpl
push
popa
setle
test
out
inc
or
or
push
jo
decl
cli
outsl
xchg
fidivl
xchg
inc
ret
in
jg
push
iret
mov
add
in
sbb
lock
push
pushl
or
mov
in
or
jb
and
and
sub
add
add
xchg
pop
jp
das
and
or
jo
imulb
push
xchg
std
in
scas
cwtl
lock
addb
fimuls
sbb
jbe
daa
jnp
incb
daa
adcl
xchg
jl
loop
sub
incl
or
loopne
and
lret
hlt
dec
or
ljmp
xor
imul
andb
dec
cmpsb
int3
xor
fildll
lock
push
add
xchg
inc
out
andb
sbbl
lcall
icebp
cmp
jl,pt
pop
cld
scas
filds
out
xor
stos
cli
rorb
add
or
push
jmp
adc
push
xor
mov
insb
inc
sub
sub
out
push
push
push
js
push
inc
push
stos
xor
jno
scas
call
xor
adc
dec
mov
sbb
mov
pop
scas
push
pop
jecxz
jle
push
movsb
decl
add
stos
divl
das
push
fildll
test
clc
fisubl
mov
adc
rcll
inc
push
mov
jg
add
mov
je
sbb
sti
ljmp
dec
pop
mov
mov
loopne
lcall
decb
sti
mov
or
jo
pop
rolb
sarl
jge
add
xchg
and
xor
testb
ljmp
and
pusha
push
jae
jge
and
loop
vmovntps
aam
loop
or
adc
shll
mov
and
lods
cli
add
pop
mov
lcall
xchg
inc
ja
add
pusha
add
sub
decl
jecxz
lods
add
push
and
push
add
in
enter
sbb
inc
jno
dec
cmp
fdiv
incl
sbb
ljmp
bound
shl
inc
aaa
vmovshdup
add
shrb
test
inc
loopne
jo
data16
decl
dec
xchg
or
and
sub
xorb
in
popa
loop
loopne
enter
pushl
std
inc
push
inc
cvtps2pi
push
dec
clc
sbb
andl
pop
or
dec
testb
sub
test
push
pop
bound
je
cld
hlt
push
sbb
and
bound
decl
pusha
ljmp
lock
lods
imul
repnz
pusha
mov
dec
sub
les
xor
fbstp
es
inc
adc
shl
xchg
or
out
mov
ljmp
mov
imul
into
sti
mov
sbb
call
mov
fwait
push
sti
lret
mov
mov
push
jg
ljmp
imul
rolb
inc
sbbb
add
hlt
outsl
adc
inc
xor
aaa
add
decl
clc
mov
cli
clc
cli
and
repz
imul
add
je
adc
pusha
push
decl
mov
push
dec
pusha
fs
sysenter
aam
inc
loop
pop
insl
add
adc
pop
scas
loope
ss
ljmp
jbe
scas
or
inc
pop
push
dec
xor
leave
xor
sub
scas
cmpsl
jb
pop
outsl
push
popa
ljmp
pusha
xor
std
or
mov
and
xchg
test
testb
add
ret
sar
or
arpl
rorb
and
lret
push
xor
mov
addl
push
adc
adc
dec
repnz
sub
cld
jg
stos
scas
inc
test
and
jg
xor
inc
mov
pushl
push
sub
sbb
dec
daa
xor
adc
es
add
mov
add
adc
jo
inc
sub
or
pushl
pop
imul
out
push
mov
dec
rcll
xchg
xor
mov
ret
xor
sar
cwtl
or
inc
sbbb
xor
cmc
inc
jno
xchg
xor
jg
ss
add
pop
push
fcomps
sbb
push
push
push
or
adc
mov
cmp
sti
movsb
xor
les
xchg
pop
fcomip
jmp
or
pusha
mov
mov
inc
loopne
sti
andb
inc
or
dec
pop
std
movsl
mov
or
jge
arpl
xor
dec
pop
mov
rolb
pusha
sbb
xor
xsha1
cmpsb
lret
add
sbb
jg
inc
icebp
dec
or
sbb
xor
jne
nop
jmp
push
outsb
jb
mov
adc
loope
addr16
sbb
call
mov
or
push
inc
aas
lock
scas
lds
mov
xchg
hlt
jns
out
decl
in
fdivp
pop
lcall
sbb
out
mov
ljmp
insl
add
mov
pop
cmp
bound
test
xchg
insl
aam
jae
test
xor
sub
push
test
add
mov
add
pop
sub
cli
mov
pop
out
dec
ljmp
ret
roll
and
push
xor
dec
in
xchg
shll
push
fsts
jecxz
jg
decl
jbe
movsl
xor
push
stos
push
pusha
jmp
inc
push
into
pop
xor
add
rol
decl
mov
push
loopne
incl
aaa
pop
and
fisubs
mov
aaa
xor
lea
dec
jp
push
fsts
adc
or
mov
jnp
mov
or
cmp
jl
xchg
pop
decl
fnstsw
fidivrs
mov
xchg
mov
cwtl
test
add
movsb
in
push
bound
std
ljmp
data16
andb
test
add
mov
add
aaa
cld
mov
or
add
mov
ret
daa
lcall
dec
arpl
outsb
data16
add
or
sbb
cmp
clc
adc
cld
incl
xor
adcb
xor
and
pop
jg
jg
aam
fstl
mov
js
jle
jg
jns
int3
push
fdivr
ljmp
je
and
mov
je
rclb
pop
stos
mov
mov
fwait
lcall
scas
test
mov
imul
es
out
and
incl
mov
insl
push
bound
push
icebp
lods
outsb
maskmovq
notl
aaa
arpl
dec
js
mov
pop
icebp
call
aaa
jno
testl
flds
or
fsubl
outsb
enter
ja
add
nop
sti
nop
mov
sub
jmp
sbb
jbe
pslld
adc
adcb
pop
mov
push
and
and
cmpsb
push
or
dec
sub
xchg
inc
sub
les
cld
lds
mov
or
push
incl
adc
push
cmp
lcall
cmpsl
dec
push
xchg
pop
cmp
sarl
sbb
mov
sub
sbb
sub
mov
in
xchg
fcomip
mov
jnp
add
in
fs
push
mov
jg
lock
movsl
and
push
add
test
sub
mov
incl
gs
roll
adc
add
pop
shll
xor
lcall
bound
mov
mov
add
add
cmpsl
jnp
mov
xor
std
test
mov
roll
ss
inc
lock
sub
xchg
sbb
push
test
inc
push
xchg
cld
mov
cs
es
scas
fbld
cs
fwait
mov
ljmp
clc
mov
mov
pop
call
scas
aad
mov
dec
xor
dec
ljmp
and
and
push
adc
xchg
adc
sti
lock
call
das
mov
nop
or
sbb
push
popa
call
mov
and
out
push
xchg
addl
mov
decb
or
mov
sub
call
pushl
mov
jbe
inc
je
gs
dec
into
out
or
xor
push
jecxz
idiv
pop
hlt
call
subb
jns
subb
bound
mov
push
fldenv
std
stos
stc
adc
xchg
je
sti
stos
inc
push
in
add
pushf
movsl
sar
lcall
addl
repz
pop
pusha
adc
fistpl
mov
cld
scas
mov
fdivrl
icebp
lcall
in
jg
add
orb
and
and
fistps
rcrb
rclb
inc
ficomps
es
push
dec
pop
or
pop
add
jg
mov
lret
add
je
and
loop
adc
add
decl
cmpsb
push
cli
add
and
mov
jo
mov
sbb
ljmp
xor
iret
jecxz
mov
xor
cmp
leave
out
lretw
xor
mov
call
sbb
test
int3
frndint
pop
lret
mov
push
fdivr
lret
aad
imul
jne
or
scas
ret
mov
test
outsb
xchg
sbb
or
sti
pushf
popa
dec
fwait
xor
push
rol
call
lcall
loope
stc
dec
mov
in
push
jae
negl
jno
clc
jmp
fldl
cmp
or
pusha
and
jmp
sbb
dec
xchg
mov
pop
inc
adc
xchg
push
dec
push
ljmp
sub
inc
jae
fnstcw
pop
sub
insb
addr16
inc
add
and
test
pop
dec
adc
into
push
cmpsl
jge
test
negl
pop
lahf
xchg
mov
rorl
inc
pushf
fcomip
fldenv
or
and
jl
mov
scas
ja
dec
push
push
les
sbb
dec
push
or
mov
pusha
gs
xorl
pushf
sysenter
push
or
std
pop
hlt
jle
pushl
cmp
push
push
loop
push
pusha
jmp
loop
ret
sub
ljmp
clc
decl
ds
or
xor
rorb
mov
push
pushl
roll
mov
incl
and
dec
add
xchg
lahf
or
xlat
lock
jmp
ret
popf
cmp
nop
add
mov
icebp
adc
inc
movsl
sbb
imul
cmpsb
push
mov
aam
adc
aad
push
fcomps
adc
dec
call
pusha
pop
notb
and
mov
mov
addl
hlt
neg
pop
sarl
adc
pop
out
popa
ret
pusha
mov
mov
daa
mov
mov
lcall
xchg
sar
cmp
into
mov
in
inc
stos
shufps
repnz
sub
sti
jl
push
jbe
ljmp
mov
stos
fstps
insl
movsl
push
inc
or
dec
sti
cmp
loopne
jne
test
lods
xchg
stos
cli
call
pop
dec
mov
mov
stos
iret
dec
cmp
setle
inc
repz
ljmp
mov
mov
mov
dec
pop
cmp
xorb
adc
pop
add
xlat
add
mov
rcr
jne
xor
lock
icebp
lcall
inc
and
lods
mov
push
ss
decl
or
mov
sbb
clc
inc
mov
mov
dec
pop
sub
shlb
or
jne
bound
add
incl
pop
sbb
push
jmp
subb
lock
fdivs
jmp
pop
xchg
sbb
xor
inc
xchg
fs
sbb
mov
lcall
inc
orl
fsubrp
addb
xor
cwtl
pushf
jnp
cmc
enter
add
pusha
mov
ret
adc
test
sbb
xor
and
xor
dec
decl
cmp
add
bound
add
sub
push
push
das
aam
inc
pop
mov
push
pop
subb
adc
adc
sbb
pop
xor
jnp
cmp
xchg
fwait
cmp
negl
jl
clc
adc
dec
push
int
xchg
push
mov
dec
or
push
test
test
push
js
aad
push
dec
call
rorl
lods
insb
pusha
fcos
jmp
adc
out
xchg
push
sub
push
and
sub
pop
xchg
sbb
and
jmp
cmp
pop
mov
mov
mov
jp
cltd
negb
push
xchg
lcall
sbb
fadd
sbb
shll
pop
outsl
and
addr16
jp
dec
lods
call
push
ficompl
pushf
insl
lret
cmc
mov
enter
pop
jp
mov
mov
inc
in
repz
aas
jae
xor
test
icebp
or
jnp
stc
aaa
fistpll
aad
mov
push
aaa
cmp
dec
and
xchg
pop
aas
enter
aad
fldcw
and
xorl
enter
in
xchg
jmp
in
xor
movb
aam
aaa
xor
adc
lret
out
sub
rorb
cmp
cmp
call
inc
ljmp
fcoms
mov
or
xchg
xorl
xchg
xor
call
push
cwtl
sub
cltd
outsl
cwtl
imul
or
je
dec
pop
pop
loopne
add
sbb
decl
daa
jmp
sbb
les
xchg
push
inc
adc
or
mov
aas
fcmovnu
hlt
inc
testb
hlt
push
cmove
ljmp
xor
lcall
aam
pop
fwait
mov
mov
cmp
add
mov
xchg
dec
shlb
cmpsb
mov
jno,pn
lret
pop
push
xchg
lahf
lret
call
mov
arpl
jl
ljmp
and
xor
hlt
lret
add
jl
xor
popa
mov
mov
fbld
xchg
add
dec
loop
out
scas
sub
cmpsl
hlt
jmp
xchg
xor
inc
or
lcall
jnp
adc
decl
xor
dec
jbe
push
popf
xchg
sub
aaa
sbb
lcall
push
js
sub
jno
or
fistps
in
inc
lahf
movsl
jmp
fidivrl
adc
lods
imul
xlat
sbb
mov
ljmp
cli
pushl
clc
adc
sub
inc
lret
adc
ret
inc
xor
call
test
or
outsl
aaa
jp
mov
pop
cmp
cmp
dec
inc
push
push
xchg
pushf
and
mov
fcomps
decl
or
inc
push
repnz
lret
lret
push
outsb
jne
mov
adcl
mov
pop
sti
pop
call
cs
add
orb
sbb
or
ret
push
or
dec
push
add
pushl
mov
mov
ret
movsb
ljmp
sub
mulb
lods
shl
enter
mov
cmpsb
popa
shl
or
mov
jmp
xor
dec
cmp
arpl
lret
orb
ss
xor
ret
arpl
sti
or
cmp
sbb
jne
pop
sbb
fisttps
call
or
out
sbb
cmp
dec
popa
dec
dec
sbb
xchg
jmp
sbb
imul
jecxz
lea
mov
hlt
mov
mov
bound
bound
xchg
rcrl
or
adc
push
mov
outsl
call
adc
stc
push
cmp
mov
mov
stc
fcoms
xchg
cmp
xchg
clc
decl
add
mov
push
inc
scas
push
jmp
xlat
mov
inc
scas
jno
imul
mov
into
loopne
nop
arpl
or
xor
mov
and
sbb
mov
out
mov
jo
sbb
lock
push
push
mov
test
add
call
mov
adcb
cmp
sarl
sbb
cwtl
ret
dec
mov
cmp
cwtl
daa
stos
lret
pushf
jbe
cmp
in
dec
mov
ljmp
push
sbbl
add
sub
inc
mov
cmp
incb
mov
sar
pushl
and
or
lods
loopne
sub
jne
mov
jo
hlt
lods
outsl
hlt
test
lcall
push
jmp
and
and
test
jg
jnp
jbe
mov
ss
lcall
add
push
xor
les
popa
or
mov
adc
decl
popa
mov
fsts
jo
and
lods
addr16
int3
pop
or
push
adc
ljmp
cli
int3
enter
mov
push
and
enter
inc
mov
pushf
es
sti
inc
mov
ljmp
jne
push
xchg
icebp
rolb
cmp
mov
movsb
mov
rclb
add
int3
cmp
mov
pop
xchg
movsl
sbb
pop
push
cmp
mov
or
add
inc
or
loopne
jo
push
xchg
mov
push
call
movsl
cltd
hlt
loop
decl
dec
pushf
jecxz
daa
dec
jo
sub
or
cmp
test
jbe
sbb
xor
jmp
dec
mov
insb
pop
mov
adc
mov
pop
fwait
pop
push
cld
ljmp
cmp
int3
xchg
push
scas
pop
xchg
jmp
in
pop
cwtl
inc
jbe
mov
in
add
cld
outsb
in
inc
into
iret
mov
inc
sti
jne
sub
push
scas
sbb
sbb
lret
inc
sub
in
jb
inc
fcmovnu
mov
rcll
dec
stos
pop
sarl
lock
incl
popf
nop
test
icebp
popa
shll
lcall
or
sbb
cmpsb
es
arpl
xor
stc
nop
jg
mov
dec
pop
mov
lcall
push
aam
push
jl
int
stos
in
mov
jmp
fildll
decl
jmp
mov
add
pop
pop
decl
jmp
pop
or
push
iret
outsb
jmp
fmuls
mov
fnstenv
adc
mov
aam
and
fldl
hlt
xchg
push
jmp
popf
mov
xor
xchg
pusha
rcrb
loopne
cmp
dec
test
jmp
in
xchg
add
les
sbb
xor
mov
mov
pushf
je
cmpsl
cmp
incl
add
add
mov
sarb
arpl
jmp
ljmp
test
cmp
in
out
imull
mov
test
ficoml
xor
pop
add
fidivrl
adc
loopne
push
mov
ffreep
xchg
add
mov
imul
or
lcall
pop
inc
fdiv
icebp
cmp
jecxz
mov
jp
xor
mov
mov
decl
ficompl
xor
inc
daa
mov
pushl
ljmp
mov
fs
cmpsb
shll
fs
sub
inc
adc
and
fs
clc
pushl
dec
push
xor
popa
subb
push
pop
mov
jns
push
push
incl
pop
rcll
andb
je
pop
arpl
out
adc
addr16
jae
xchg
aad
cmp
pop
cmp
jns
lock
jae
adcb
je
cmp
cmp
bound
call
incl
xor
add
rcrb
aad
sahf
xchg
adc
cmp
shufps
lock
rorb
jg
test
cmp
mov
dec
mov
imul
pop
pusha
add
pop
rorb
and
les
inc
adc
ret
lds
xor
and
push
cmp
fdivl
or
cmp
daa
xchg
or
ljmp
adc
call
fiaddl
aaa
jp
jecxz
jg
call
jno
xchg
addr16
nop
push
sub
jge
jmp
xor
push
cmp
push
jle
bound
ljmp
loope
sti
add
xchg
inc
sti
add
pushl
je
mov
jg
push
sbb
dec
in
mov
push
es
ja
inc
xor
js
call
sbb
adc
jmp
sub
inc
adc
cmc
adc
xchg
inc
imul
adcl
adc
cld
lcall
dec
add
mov
js
push
jbe
xor
mov
add
repnz
and
pop
xchg
inc
addr16
call
push
icebp
ss
xor
pusha
mov
xchg
add
sub
xor
sub
and
dec
and
cmpsb
movsb
and
mov
sarl
dec
sar
pushl
dec
and
fwait
movb
bound
jo
adc
pop
cltd
aaa
add
dec
ret
hlt
dec
addr16
jmp
mov
cmp
rolb
pop
mov
imul
jg
ljmp
daa
xchg
push
or
insl
mov
push
and
inc
push
es
out
clc
xlat
jnp
mov
repnz
adc
xlat
jb
jae
add
push
ret
pop
push
xchg
pusha
adc
and
shll
push
push
stc
jbe
imul
inc
inc
sbb
decl
mov
xor
icebp
cltd
xchg
cltd
push
ja
jno
xor
sbb
pop
sti
xchg
sar
lcall
in
in
sbb
bound
xor
repz
ljmp
call
jg
movsl
xchg
jmp
lea
fs
lret
imul
pushf
pop
xor
incl
mov
sbb
jne
inc
dec
jg
cmp
push
andb
sti
mov
adc
outsl
sbb
je
dec
xchg
pop
notl
pop
pusha
sub
and
mov
out
ss
pop
repz
and
stc
inc
xor
into
stc
incl
aad
pop
adc
or
cmp
test
ret
test
push
stos
adc
xchg
das
mov
and
xchg
imul
incl
sub
add
js
pusha
or
add
sbbb
test
or
and
push
incl
sarl
nop
add
add
shlb
mov
xor
adc
dec
shl
decl
xor
or
jecxz
aad
mov
arpl
movsl
jmp
mov
ljmp
cwtl
cmp
mov
pop
add
fistl
sbb
call
pop
add
aas
add
imul
pop
xor
rcll
inc
outsl
xchg
sbb
ret
xor
incl
out
sub
loope
test
mov
adc
push
adc
sub
jl
xor
test
test
ljmp
adc
jae
aaa
jne
cmp
adc
jne
inc
sub
pushf
fs
xorl
pushl
cli
adc
lret
fnstcw
fwait
xor
pushf
mov
lods
add
stos
jns
sbb
std
call
jae
sti
cmp
gs
nop
sub
dec
std
incl
sub
xor
out
je
lahf
pop
ret
sbb
dec
or
outsb
arpl
aad
fistpll
xchg
add
add
xchg
push
ja
out
adc
ljmp
data16
nop
dec
or
and
clc
outsl
lcall
push
xorl
jecxz
and
dec
repnz
les
jo
push
mov
mov
es
and
and
adc
scas
testb
inc
add
push
mov
or
sbb
mov
sub
pop
dec
sub
ljmp
fildl
loopne
clc
jg
sbb
ret
xchg
test
pop
jno
jecxz
jnp
js
shl
pop
jp
lcall
inc
sbb
loope
stos
ja
xchg
jmp
add
pmaddwd
in
je
and
decl
outsb
popa
mov
aam
or
inc
outsl
fdiv
cwtl
ljmp
fisubs
mov
pop
jns
jns
ljmp
push
sbb
es
inc
stos
das
data16
ds
dec
sarb
and
incl
mov
fwait
ret
xchg
cmp
mov
sbb
ljmp
cmp
cwtl
popf
or
pop
in
and
clc
lods
stc
loope
gs
jecxz
pusha
mov
ss
ljmp
lods
jae
xor
enter
ss
xor
stc
cmp
bound
ljmp
and
mov
shll
jp
loopne
or
add
fstps
lock
jmp
cwtl
mov
xor
xchg
push
jp
inc
ret
cmc
and
lods
aad
mov
outsl
cli
lcall
ljmp
es
pusha
mov
push
mov
and
clc
push
or
lcall
add
decl
dec
push
and
lea
sub
jne
push
push
inc
subb
decl
shrl
mov
movsl
add
xchg
cmp
adc
and
insl
aaa
pop
ljmp
clc
cs
push
cmp
inc
test
xchg
adc
ret
fisubrl
adc
call
xor
dec
js
cmp
cmp
push
pop
push
add
dec
mov
jmp
jmp
inc
sub
mov
pushf
mov
push
andb
mov
fldt
mov
stos
ret
pop
xlat
stos
test
add
mov
sbb
mov
stos
cmpsl
icebp
inc
pop
xor
stc
or
mov
mov
sub
nop
or
pop
leave
mov
or
xchg
fmull
adcl
pop
pushl
push
fsubs
fiadds
cmp
sti
push
jmp
xor
jnp
aas
cli
pushl
mov
or
adc
add
stos
xchg
cmp
jns
addb
jns
hlt
cmp
xor
lock
pop
cmp
mov
mov
mov
cwtl
jne
push
in
call
add
or
insb
xlat
add
idivl
leave
ret
and
gs
mov
mov
pop
jl
pushf
fcoms
inc
cmp
xchg
fmull
icebp
call
es
mov
inc
mov
adc
pop
jg
sbb
and
adc
mov
ljmp
lcall
sti
mov
in
shrl
mov
jns
imul
inc
idivb
mov
vpermpd
adc
adc
sbb
lcall
cmp
adc
mov
jno
jno
ja
popf
lcall
in
jl
test
jmp
fwait
test
lds
adc
decl
mov
and
mov
mov
lds
call
adc
sahf
imul
insb
les
int
clc
inc
je
lods
arpl
scas
cwtl
sub
je
and
fbld
pusha
adc
popa
or
pop
and
and
cmp
call
xchg
adc
xchg
movsb
mov
fiaddl
cmp
and
les
cmp
xchg
adc
jns
in
in
stos
cmp
jnp
dec
adc
cmc
mov
mov
test
and
dec
fcos
jmp
mov
adcb
push
in
add
rcrl
jmp
sub
xor
ret
inc
cmp
push
inc
xchg
add
incl
iret
mov
push
lret
js
shll
shll
out
sub
loop
movsl
inc
out
dec
jmp
in
adc
lcall
and
cld
mov
push
mov
jmp
cwtl
adc
das
loopne
jge
push
outsb
loopne
push
sub
cmpsl
sub
mov
je
jle
and
daa
jo
jle
adc
pop
daa
test
aad
incl
jmp
mov
xchg
push
or
or
ss
cmpsb
mov
cmpsb
call
cmpsl
mov
inc
adc
mov
mov
in
sbbl
int3
sti
fsubrs
adc
in
cmpsb
incl
xor
imul
sub
insb
push
scas
and
mov
in
stos
scas
ficoml
inc
call
decl
add
pop
dec
cmpsl
dec
fsubrs
rcll
mov
mov
ljmp
jge
ret
dec
fsubrl
decl
and
push
push
jb
fldl
aad
add
fistl
ljmp
adc
sbb
fsubl
pop
mov
repnz
cmp
stos
pop
dec
and
idiv
inc
adc
in
imul
add
je
jmp
mov
pop
or
or
mov
pop
dec
jmp
sbb
ss
pop
scas
push
xor
cld
out
push
aas
adc
int
fdiv
stos
or
xor
or
rcrl
loopne
sbb
jo
mov
add
push
loope,pt
inc
mov
or
mov
sub
and
add
sub
loop
push
dec
scas
sub
jnp
mov
stos
jecxz
scas
mov
in
jp
movsl
mov
mov
decl
and
pushf
jne
mov
lcall
cmp
ret
lcall
cmp
out
mov
fs
movsb
sahf
xchg
mov
lock
inc
fnstcw
dec
sahf
xor
push
inc
ldmxcsr
repz
dec
push
out
pushf
daa
xchg
scas
clc
out
pushl
loopne
add
fwait
xchg
push
call
xchg
pop
fiaddl
testb
cmpsb
push
ljmp
pop
stos
neg
in
lea
xor
mov
cmpsb
imulb
outsl
inc
mov
addr16
cmp
ljmp
int3
movsb
pop
pop
rolb
loop
movsb
mov
xchg
hlt
call
fucomi
into
add
fldl
xchg
mov
fldlg2
pop
dec
adc
ficompl
dec
aas
xlat
cmpb
pop
cmc
movsb
cld
sub
sbb
ds
stc
sbb
scas
add
cld
lcall
or
cmp
sub
shll
sub
push
push
cld
neg
pop
dec
lods
add
jno
aad
cs
pop
enter
mov
sbb
push
and
daa
in
lcall
inc
sub
mov
aam
adc
icebp
aaa
jg
arpl
incl
cmc
adc
lods
outsb
lods
repnz
icebp
das
dec
loop
aaa
push
aam
mov
xchg
incl
add
inc
movl
or
adcl
jl
arpl
or
cmpl
shll
mov
push
mov
xchg
and
and
sub
sarb
out
clc
xor
dec
sbb
jno
in
repz
sahf
and
xchg
and
std
decl
add
push
add
pop
aad
jno
mov
pop
pop
pop
xor
ret
ds
ljmp
add
jnp
mov
mov
xor
fnstsw
incl
or
outsb
fadd
jo
sbb
lds
sbb
xchg
jmp
test
push
mov
aaa
adc
xchg
xchg
and
mov
shlb
test
sub
mov
call
or
mov
lret
xchg
fimull
xchg
add
std
mov
andb
sbb
inc
repz
fcomip
call
xor
popf
ljmp
dec
pop
stc
jp
in
addb
lcall
push
inc
pop
xchg
and
div
iret
jmp
lock
xchg
outsb
and
sub
cli
insb
loopne
ljmp
popa
cmp
sbb
incl
ds
rolb
js
add
sub
pop
ljmp
pop
ljmp
loope
pop
pusha
rolb
and
cltd
jecxz
mov
mov
mov
test
xchg
push
sub
mov
push
ljmp
das
mov
call
push
jae
xor
pop
call
xchg
and
jmp
adc
cmp
mov
dec
cmp
push
jae
adc
sub
or
dec
inc
mov
out
mov
mov
incl
stos
xor
mov
xchg
inc
add
mov
xor
dec
jg
in
cwtl
mov
dec
cmpsl
call
sahf
pusha
mov
sub
fwait
cmp
out
cli
jmp
xor
mov
mov
mov
cmp
mov
jg
fisubrl
sbb
pop
popa
add
shrb
mov
aaa
testb
decl
jecxz
add
iret
add
int3
mov
sbb
shlb
enter
cmp
decl
out
rcr
pusha
addb
adcl
in
lea
mov
test
sub
jnp
aaa
ljmp
call
cltd
mov
dec
cmp
xchg
xor
cli
cmpsb
stos
out
mov
jl
mov
cmp
enter
cmc
aam
jns
lahf
jg
lcall
add
xor
mov
mov
in
movsl
lcall
shr
mov
or
mov
scas
or
push
push
jno
push
hlt
inc
xchg
and
call
cld
fwait
inc
mov
jl
xchg
subb
jns
ds
pushf
or
rcll
clc
mov
lods
jl
loop
push
and
jg
aaa
lahf
mov
je
dec
dec
and
lret
fistps
sub
cltd
cmp
cmp
push
hlt
inc
sbb
add
push
cmp
popf
push
and
jmp
xor
mov
jmp
enter
pop
or
push
jnp
subl
push
push
scas
out
imul
cltd
pop
jge
jmp
stc
pop
xchg
add
stos
mov
psrld
std
addr16
xor
aas
stos
pusha
mov
movsl
decl
cvtps2pi
inc
or
in
out
popf
fists
das
jl
sbbl
repnz
add
pop
mov
jg
xor
push
cmp
add
and
mov
mov
nop
xchg
sub
add
or
testb
pusha
add
jg
mov
cwtl
orb
movl
movsb
and
jns
add
call
jle
mov
clc
or
je
mov
cmp
ffree
cmpsb
xchg
push
mov
popa
call
push
sbb
fiaddl
pop
or
test
lods
and
jnp
loopne
pop
in
push
pop
clc
adc
push
inc
pop
and
addl
sbb
cmp
sbb
sbb
xor
rcrb
adc
and
fwait
add
xor
scas
je
jg
fwait
inc
lcall
jne
pop
sbb
scas
and
jne
add
out
pushl
cwtl
mov
pop
in
dec
ja
cmp
stos
dec
leave
sub
movsl
es
and
push
repnz
aam
jmp
cmp
std
inc
cmp
fcmovnu
lods
lret
push
loope
daa
pop
lods
outsb
repnz
lcall
dec
push
fidivl
jmp
lea
inc
int3
in
sub
das
and
incl
add
hlt
orb
and
pusha
jg
bound
inc
divl
pop
mov
push
test
lahf
jb
mov
ret
mov
pusha
test
mov
and
push
pop
mov
adc
pop
addb
in
ss
inc
pop
dec
add
add
mov
push
or
decl
sub
add
dec
sbb
inc
add
in
je
cmp
and
jg
rcl
mov
mov
pop
dec
cvtps2pd
mov
cmp
fstps
fstpl
jmp
rclb
enter
adc
jge
inc
call
mov
jle
xor
xor
shlb
xchg
xchg
in
jge
ljmp
es
addl
sbb
ljmp
cli
mov
mov
lods
mov
pop
mov
mov
dec
scas
outsb
clc
call
cmp
shrb
mov
popf
sub
adc
jg
loopne
lret
pop
adc
js
test
xor
loope
dec
lret
dec
test
mov
push
or
nop
nop
test
test
push
scas
mov
stos
pop
aad
jnp
xchg
push
push
insb
popf
xor
pushl
sub
std
push
jle
push
inc
leave
mov
lret
xor
adc
pop
mov
adc
pop
jo
sbb
loope
cli
enter
hlt
repnz
xor
inc
mov
mov
mov
call
add
push
adc
jae
sub
jne
add
xor
xor
mov
lods
rclb
bound
decl
jp
inc
mov
roll
arpl
shlb
pop
add
mov
aad
dec
sbb
insl
add
sahf
dec
mov
cwtl
mov
call
int3
lock
xchg
mov
mov
mov
or
lock
push
pop
in
enter
jmp
out
jno
jns
and
repnz
push
loopne
fidivrs
dec
inc
aaa
fiaddl
cltd
int3
movsb
adc
add
jno
pushf
rol
int3
popf
roll
cmp
lock
outsl
clc
pushl
dec
pop
clc
repnz
xor
adc
cli
mov
mov
push
jae
mov
ljmp
inc
cmp
mov
cmp
out
mov
jle
mov
int3
pushl
pop
int
pop
dec
cs
cmpsl
scas
js
push
pop
aad
push
cmp
cmp
lods
xchg
jns
sti
fucomi
sbb
idivl
adc
inc
out
jl
jns
aas
sti
fwait
inc
loope
jb
jg
notb
arpl
jmp
mov
jo
ret
jge
ret
faddl
push
js
or
loopne
pop
mov
jg
pushl
mov
add
fadds
daa
xchg
and
jecxz
mov
out
xchg
mov
push
xchg
stos
cmp
aaa
push
mov
enter
xor
jg
pop
push
sbb
shl
push
add
mov
xor
mov
cli
jg
ja
jb
int3
dec
pop
mov
lret
pop
in
push
lds
lods
out
aas
jl
and
lcall
insb
mov
decl
clc
test
xor
pop
icebp
inc
add
nop
pop
es
cmp
pop
mov
cwtl
mov
sbb
jp
jo
mov
dec
lock
mov
mov
scas
mov
rclb
pop
jmp
repz
repnz
test
je
or
push
ljmp
scas
cltd
lret
mov
jne
push
fistpll
mov
push
mov
decl
loope
jns
mov
je
jnp
adc
push
lods
jb
mov
push
add
mov
adc
add
sub
or
pop
mov
dec
xchg
jg
jl
std
ljmp
cwtl
or
inc
ret
lock
and
lcall
cmp
dec
mov
or
clc
pop
sbbl
incl
mov
mov
or
jo
sbb
faddl
movsb
fisubrl
or
cmc
fwait
loopne
mov
cld
or
mov
cmp
mov
adc
clc
xor
jb
scas
mov
mov
push
arpl
clc
mov
sti
mov
push
lcall
mov
push
jno
cmp
xor
mov
or
xor
hlt
mov
cmp
cltd
adc
adc
mov
mov
in
mov
xchg
enter
in
les
sub
inc
adc
pushf
adc
ljmp
add
or
xor
mov
sbbb
mov
jmp
pushl
mov
xchg
xchg
in
sarb
pushl
push
popf
push
adc
or
dec
sub
xlat
arpl
inc
push
xor
movsb
cmp
inc
jmp
mov
push
scas
xor
adc
push
aaa
jb
out
shll
mov
lcall
sbb
push
mov
stc
scas
add
addr16
ljmp
sub
aas
add
mov
rdpmc
cmp
fmuls
cli
or
adc
decl
sarl
sub
mov
pusha
sbbl
andb
jg
rcrb
and
test
or
ja
lahf
cld
mov
ja
mov
cmp
push
in
inc
nop
cmc
fmuls
in
cmpsb
pop
push
mov
cmp
mov
and
pop
mov
sbbb
lcall
bound
insb
and
add
mov
mov
decl
aas
lock
or
xchg
jno
cmp
sbb
sub
js
mov
and
xchg
lds
test
mov
mov
push
mov
adc
pop
sub
ret
xlat
bound
inc
xchg
add
inc
lock
mov
test
mov
les
rorb
xor
push
mov
fbld
in
xchg
imul
popf
loop
xchg
inc
xchg
xchg
test
ss
dec
cmp
ljmp
mov
loope
movsl
shlb
pop
scas
cwtl
fcomps
loope
jns
mov
jg
int
daa
call
push
and
enter
shll
stc
fnstcw
lcall
shlb
icebp
xor
fisttpl
insb
or
xchg
ljmp
mov
test
call
and
mov
fiadds
sahf
cmp
mov
in
andb
and
cmpsb
ljmp
push
xchg
jmp
lock
leave
mov
sub
mov
add
add
jg
ret
in
and
les
cwtl
xor
add
push
cld
aas
repz
adcb
je
mov
sbb
insb
push
xor
lock
cmp
lret
jg
in
fadds
xor
sub
xchg
and
or
sub
sbb
xor
fistps
inc
sub
cmp
mov
inc
dec
inc
std
jg
outsl
repnz
mov
popa
xchg
adc
lods
pusha
dec
or
rorb
mov
cmp
ret
jns
cli
mov
clc
loope
in
xchg
in
cmp
and
lcall
adc
pop
inc
or
or
push
jge
or
mov
jnp
bnd
call
or
adc
cs
inc
xchg
cld
jg
inc
lcall
pusha
add
inc
imul
les
popa
lea
cmp
dec
pminub
jnp
mov
call
mov
inc
mov
loopne
and
adc
push
mov
mov
mov
adc
cwtl
xchg
stos
cltd
xor
mov
cmp
negl
adc
enter
call
sbb
fs
repz
adcb
jle
add
mov
es
mov
xchg
and
shr
and
incl
or
leave
mov
sub
or
or
dec
jmp
sub
popa
dec
ret
icebp
fdivrs
daa
mov
lds
xor
call
adc
pop
popf
popa
in
adc
loopne
mov
and
lcall
xor
popa
adc
fxch
pop
fcomps
rcl
incl
pop
shlb
inc
mov
lret
ljmp
mov
xor
lcall
mov
cli
add
rcrb
add
mov
out
es
std
inc
paddsb
pop
or
repz
call
addl
inc
sub
mov
push
mov
push
and
adc
pop
and
xchg
test
mov
incl
pop
jbe
push
add
lock
mov
mov
mov
xchg
lret
sub
dec
mov
ficomps
add
cltd
je
xchg
jae
inc
lahf
sub
gs
mov
or
decl
inc
lcall
inc
adc
test
mov
push
ds
push
cmp
mov
dec
fstpl
ds
test
or
jg
push
mov
mov
or
mov
fsubrs
enter
add
mov
mov
cld
lcall
ret
sub
inc
pop
push
dec
lret
fldenv
lods
fcom
stc
inc
cmp
dec
pushl
js
inc
int3
loopne
arpl
inc
xor
mov
adc
incl
mov
cmp
inc
or
imul
pop
in
cli
xor
push
cmp
ja
jne,pt
cmpsl
pop
int3
decl
dec
mov
das
icebp
add
sarb
or
int
les
or
mov
jge
mov
xor
and
dec
pop
rorb
push
pop
xchg
adc
pushl
mov
mov
xorb
pminsw
cmp
ret
adc
mov
add
or
stos
and
cmp
push
or
sbb
push
std
cwtl
xorb
sbbl
add
scas
add
sub
popf
mov
sahf
xor
fwait
and
jmp
pop
sub
adcl
int3
push
lret
jp
xor
inc
sub
ds
cmp
xor
mov
orb
sub
ds
add
mov
decl
in
cwtl
and
mov
setns
call
mov
sbb
sub
sub
incl
lret
sub
mov
or
rcl
xor
fwait
sarb
xor
jmp
les
imul
add
mov
jp
pop
mov
fcomip
push
std
dec
jmp
push
xchg
push
test
pushf
push
repz
mov
cmc
aaa
cld
or
cmpsb
jge
addr16
popa
dec
xchg
orb
in
push
jmp
mov
mov
xchg
js
push
add
andb
sar
incl
pop
mov
int
out
ja
xor
mov
lds
call
les
cmp
and
push
pop
mov
decl
pusha
add
aad
lods
inc
or
sbb
dec
sbb
or
lock
adc
add
jo
add
inc
mov
push
testl
inc
cs
arpl
pop
in
mov
and
jns
xor
mov
cmp
filds
das
mov
xchg
adc
mov
sbb
cmp
sub
adc
ljmp
leave
repnz
mov
lcall
push
ljmp
decl
fdivp
or
jns
sub
dec
adc
ret
movsl
pop
push
pushl
add
dec
aas
cmp
dec
loope
fabs
sbb
adc
nop
test
lcall
movsb
xor
jmp
pop
dec
mov
xor
cmp
loope
lods
add
jmp
xchg
in
push
inc
das
add
call
inc
jge
popa
stc
bound
mov
jl
das
sbb
pushl
popa
ret
mov
decl
xchg
out
sbb
dec
stos
or
andl
fisubrl
xor
mov
std
or
xchg
loopne
add
mov
sbbb
mov
mov
jmp
add
outsl
cltd
mov
and
add
cwtl
mov
lcall
test
mov
cmp
cmp
add
dec
push
aam
ljmp
mov
cmp
pop
stos
dec
sbb
xor
and
inc
add
ds
call
sbbb
mov
xor
dec
inc
mov
cltd
fldl
jae
push
mov
cli
decl
orl
adc
mov
mov
popl
out
push
and
cmp
ljmp
add
xor
cmp
mov
scas
xchg
jmp
inc
fdivrl
lock
popa
ss
pop
in
pop
add
loope
cmp
inc
movb
cmpsb
aam
mov
jge
pop
fwait
popa
ror
mov
call
pop
lret
xchg
or
cmp
repz
outsb
mov
daa
cmp
jbe
push
jg
mov
ljmp
loopne
int
or
and
paddusw
sbb
mov
call
cmp
lea
lea
call
jbe
mov
outsl
ljmp
lea
lock
insb
pop
orl
imul
add
in
xor
sbb
mov
jb
or
cwtl
cmp
bound
jg
orl
jno
ds
xchg
pop
and
sbb
add
sbb
lcall
pop
xchg
mov
dec
xchg
in
repz
jg
mov
mov
mov
frstor
inc
insb
or
js
ds
xor
push
call
in
dec
fimull
mov
pop
dec
mov
xorb
test
movsl
sbb
jg
inc
sbb
stos
sbb
push
shrl
jmp
cli
aad
mov
adc
add
dec
loopne
pop
dec
cltd
jne
mov
dec
mov
decl
sub
or
xor
outsl
aas
insb
popf
fstl
xchg
push
lret
lss
cli
push
sub
cmp
repz
rclb
das
jp
cmp
ret
ljmp
jl
sub
add
mov
or
fildl
dec
clc
push
aam
add
mov
bound
mov
sahf
adcl
bound
pushl
add
sub
sarb
pop
mov
add
imul
fsubl
lcall
xchg
stc
sbb
loop
inc
div
mov
decl
jg
fmull
mov
sbb
sar
nop
inc
call
jno
pop
jns
dec
fstl
stos
sub
and
call
test
or
fcoms
in
sub
xchg
nop
lahf
jae
mov
xlat
and
in
das
xor
loopne
sar
call
pusha
orb
sub
and
or
pcmpeqb
mov
ljmp
sbb
les
and
jecxz
and
shl
inc
mov
pushl
clc
jno
movaps
cli
jl
adc
ficoml
push
and
lcall
and
pop
dec
adcl
roll
aas
lods
bound
aam
ret
pop
cmp
push
jp
dec
ret
dec
mov
popa
mov
mov
shr
js
jbe
pushl
fcom
ret
ja
fidivl
inc
lock
shrb
push
dec
enter
push
std
decl
das
popa
rclb
loop
sub
mov
ds
pushl
push
or
jle
incl
mov
inc
in
fnstcw
es
inc
adc
mov
loopne
int
loopne
orl
int
sub
mov
or
aad
das
mov
cs
xor
xchg
jg
push
jnp
cli
jmp
out
enter
loop
fsts
lret
mull
mov
mov
ja
in
icebp
or
xor
les
push
ds
sbb
push
fwait
push
or
nop
popa
xchg
mov
nopl
and
out
imul
cmp
test
das
ret
mov
call
mov
or
xchg
loope
ds
jg
sbb
mov
push
movsb
xchg
xorl
ss
cmp
adc
mov
in
inc
enter
sbb
inc
lcall
mov
or
pushl
std
jb
leave
and
cmp
push
lock
call
inc
sbb
decl
pushf
lock
xor
jge
sbb
pop
cmpsb
jns
idiv
call
inc
cltd
jp
aad
dec
test
xchg
cmc
nop
addr16
insl
inc
push
dec
inc
mov
push
test
pushl
call
push
push
sbb
hlt
stos
scas
lods
in
repnz
push
mov
movsb
push
stos
call
pushl
mov
stos
dec
shld
sbb
in
fstps
push
lods
gs
repnz
push
sti
scas
xchg
lock
fsubs
xchg
sbb
pop
xchg
jg
imul
adc
test
cli
xchg
test
data16
insl
xor
call
daa
xor
ret
test
xor
imul
xor
push
mov
jo
mov
cmp
and
rolb
add
movsl
dec
xor
push
mov
gs
jg
inc
call
push
mov
add
mov
mov
ljmp
ss
ret
jg
cwtl
pop
and
cmpsb
mov
mov
fsubl
mov
mov
pop
push
or
lock
cltd
in
dec
push
out
jmp
mov
and
inc
dec
sbb
scas
jne
popa
mov
mov
mov
pop
ss
sbbb
or
call
lock
out
dec
mov
push
nop
call
cltd
mov
jmp
into
cli
and
pushf
pop
xchg
lar
out
xchg
xor
pop
sbb
rolb
je
inc
pop
xor
cltd
notb
pop
adc
call
icebp
sub
xor
mov
inc
push
pop
jno
xchg
push
les
mov
test
scas
decl
out
lods
leave
mov
pop
jle
les
xchg
pop
fldenv
push
mov
jne
xchg
mov
cmpsb
push
xchg
pop
in
push
pop
lea
insl
cmp
add
shrb
jmp
fimull
add
call
fstps
lahf
clc
sub
mov
or
pushl
int3
popa
aaa
mov
xorl
mov
or
repz
jo
inc
sbb
gs
cmp
outsb
sbb
pushl
int
cltd
jae
adc
cs
insb
xchg
mov
in
xor
jmp
sarl
and
std
daa
test
and
hlt
hlt
add
in
sub
loopne
je
lods
jns
lock
ljmp
sub
xchg
scas
ss
stos
jns
mov
sbb
je
mov
rol
cli
ljmp
fisubs
push
xchg
xchg
inc
lret
cmpsl
lcall
ljmp
inc
scas
add
xchg
inc
mov
aad
orb
xchg
movsb
and
nop
add
pushl
int3
mov
and
and
xchg
adc
sbb
xor
adc
add
pushl
mov
sbb
sub
or
dec
sbbl
aad
pop
mov
out
clc
addb
sub
cmp
sahf
push
push
subl
out
push
inc
jns
cmpsl
inc
pop
xchg
pushf
clc
sub
cmp
adc
gs
jl
add
dec
repnz
mov
cwtl
and
cmp
mov
push
add
jne
add
add
mov
xchg
jmp
mov
pop
fisubs
dec
and
hlt
jmp
movsl
sub
ljmp
fmul
mov
shll
and
lret
jns
dec
cltd
arpl
cltd
sub
push
fcomip
decl
call
cmpsb
in
adc
outsl
push
xchg
ret
daa
test
ret
mov
add
in
mov
push
add
dec
addb
mov
inc
data16
push
mov
xchg
xchg
data16
and
ljmp
sbb
push
push
cld
jmp
sub
loope
ret
push
ljmp
sub
in
insb
mov
mov
xor
add
jmp
xchg
push
test
jecxz
mov
sbb
dec
lcall
les
incl
push
movsb
cmp
fldl
sbb
loopne
orl
or
lret
pop
lahf
lcall
fidivs
aaa
add
xchg
ds
push
gs
lret
dec
dec
scas
mov
test
call
aad
pop
rolb
dec
loope
daa
dec
imul
mov
test
fisubrs
lock
movsl
sub
call
cmp
stc
test
push
xor
jmp
jae
out
fiadds
mov
sub
push
out
cli
mov
pushf
and
out
outsb
scas
and
add
pop
cmp
ss
sbb
or
add
mov
mov
sub
iret
or
je
inc
jmp
xor
xchg
push
sbb
loopne
jae
mov
pop
mov
push
inc
repz
mov
mov
addr16
rorl
sub
sub
decl
add
repnz
pop
sti
pop
rolb
dec
adc
xor
xor
icebp
xchg
dec
push
push
dec
nop
mov
test
lcall
enter
roll
adc
or
sahf
imul
dec
xchg
adc
ljmp
leave
dec
xchg
sub
gs
push
es
bound
or
add
incl
pop
sarl
mov
out
shll
mov
jle
and
fldcw
push
daa
and
aad
cltd
sub
popf
jno
adc
jnp
mov
ret
xor
insb
gs
ljmp
dec
rcrl
movsb
mov
xchg
fbld
loope
sub
clc
gs
jg
lret
jp
sahf
inc
xor
sahf
js
cwtl
ja
dec
pop
loop
loopne
out
pop
or
xchg
jmp
sub
jnp
mov
xor
sbb
insl
pop
cld
fwait
push
mov
push
inc
jmp
int3
loop
jg
cmc
movsb
mov
jp
loop
fcoml
std
cwtl
into
movb
pop
mov
push
iret
adc
icebp
mov
xchg
jb
push
pusha
add
push
xchg
shrl
xchg
mov
add
call
cmp
insb
pusha
hlt
pop
sbb
push
in
adc
rcrl
pop
xchg
sbb
orl
and
ficomps
pop
xchg
sbb
and
push
pop
push
pop
dec
sub
std
adc
out
adc
mov
cmp
fimuls
adc
out
xchg
rcll
sbb
scas
add
rclb
shl
add
call
cld
push
sub
jo
jmp
shll
add
inc
push
in
or
fwait
and
fcoml
fwait
cmp
fcmovnu
or
pushl
jge
call
in
or
incb
jl
or
mov
outsl
jnp
sbb
decl
insb
fidivs
and
or
fstl
in
sub
call
add
outsl
inc
sti
or
loopne
mov
cmp
sbb
or
sub
xor
push
loope
ret
arpl
orb
pop
add
sbb
inc
jnp
mov
fcoms
and
inc
adc
jo
cmpb
add
movl
faddl
mov
int3
je
add
and
jg
inc
mov
ror
add
jg
int3
sbb
xchg
mov
mov
push
outsl
clc
call
call
dec
or
sbb
js
sbb
test
push
inc
sar
jmp
dec
push
insb
inc
add
or
aad
fisttpll
loopne
fisubs
aam
adc
jb
jmp
loopne
mov
fimull
mov
jl
jecxz
popa
decl
lea
push
loope
or
cmpsb
incl
xor
enter
inc
xchg
call
nop
cmpsl
cld
and
clc
mov
rcll
sub
xor
mov
fmull
std
pop
cmp
pop
mov
lret
push
icebp
movsb
les
and
popa
clc
cmp
mov
pop
pop
dec
or
push
js
inc
and
or
jg
inc
gs
fildll
jle
lret
fs
xchg
mov
xchg
jge
push
lcall
incl
lds
stos
flds
loopne
enter
rorb
test
jno
decl
sbb
jne
ret
adc
fmull
vshufps
jo
enter
inc
aad
add
into
std
addb
loop
rcrl
xchg
popf
or
add
sahf
pop
pop
icebp
pop
test
dec
or
and
das
xchg
mov
inc
outsb
int
sbb
push
xor
rorl
aam
int3
or
push
fucomp
push
in
out
js
arpl
jecxz
sbb
lock
lods
lds
les
push
ret
incl
fwait
and
and
sahf
test
aam
inc
test
test
sar
jg
dec
xchg
cmp
cs
push
pop
in
pop
in
insl
jl
jg
pushf
testb
or
dec
mov
xor
and
sbb
inc
nop
mov
or
mov
not
and
push
inc
or
test
jbe
inc
dec
push
in
int
mov
xor
add
sbb
incl
push
loopne
mov
je
xchg
ret
clc
adc
cmpsb
dec
lret
call
fdivrs
adc
jbe
adc
xor
fists
inc
rorl
cmpsb
adc
bound
into
in
addl
mov
jge
popf
mov
pop
mov
jmp
xchg
inc
sbb
xor
sahf
and
xchg
rclb
mov
xor
adc
aad
pop
sub
mov
xchg
xlat
adc
xor
or
incl
call
inc
int3
aad
mov
push
sahf
enter
shll
jg
add
adc
in
pushf
inc
mov
adc
insl
gs
or
mov
rsqrtps
pop
lds
cs
in
ror
outsb
test
es
and
lcall
xor
fists
push
adc
push
lret
movsl
cmc
icebp
std
jmp
push
fcomps
movsl
mov
bound
fistps
pop
adcl
les
int3
call
jo
push
push
add
adc
jl
out
sbb
outsb
and
or
jo
adc
dec
add
int3
add
xchg
lret
xor
inc
push
adc
jns
inc
xchg
jmp
push
xchg
in
loopne
pop
pop
nop
sub
iret
dec
push
andb
cmp
orl
and
mov
lcall
jmp
ljmp
pushl
shll
fprem1
lds
pop
test
leave
dec
inc
lahf
mov
test
jmp
sbb
xchg
xlat
sbbl
lock
call
daa
bound
push
mov
mov
jecxz
xchg
test
adc
sbb
ljmp
in
hlt
rorb
add
dec
push
push
data16
xchg
mov
push
xchg
fld
ficoms
jmp
pushl
sub
sbb
mov
push
dec
test
or
xor
mov
sar
lcall
cmpsb
push
inc
rcll
adc
rcrl
ret
jmp
sbb
pop
loop
jg
imul
sbb
push
adc
idiv
sub
lods
sub
dec
pop
mov
xor
shr
xchg
inc
push
adc
pop
loopne
pop
mov
xor
movsb
bound
cwtl
mov
add
sub
or
ret
push
xor
lds
clc
jg
dec
inc
outsl
les
ds
sbb
movl
sahf
out
es
lcall
rclb
fldenv
xchg
popf
dec
in
lods
sbb
and
test
dec
sbb
mov
adc
xchg
sbb
dec
xor
dec
stos
xchg
jne
fst
xchg
cli
stos
mov
or
add
bound
sbb
xchg
fsubl
popa
or
push
xchg
stos
mov
roll
in
xchg
lods
loope
and
dec
scas
cmp
dec
mov
xchg
pop
outsb
dec
inc
lea
imul
jb
jmp
cmpsl
or
jo
cs
mov
icebp
cld
test
jno
mov
adc
mov
ljmp
push
push
stc
mov
sub
and
lds
inc
inc
dec
test
xlat
push
sub
inc
iret
sub
aad
xlat
jge
addb
mov
xchg
mov
aam
xchg
or
mov
adc
incl
mov
or
sti
es
add
mov
ret
enter
jmp
mov
and
movsb
out
mov
mov
mov
jmp
fadd
xchg
xchg
jb
pop
sbb
aam
adc
inc
dec
lahf
decl
sub
faddl
dec
pushf
jne
popf
pushf
lds
push
sub
repnz
pop
fimull
pop
shll
or
or
test
add
ljmp
loop
lret
lahf
push
dec
rcrl
mov
daa
insl
jmp
xchg
pop
int
loopne
or
decl
cmp
clc
adcl
out
test
ljmp
or
sti
leave
test
imul
inc
test
outsb
imul
push
sub
cli
cmp
out
lret
pushl
test
cmp
push
jo
mov
jno
xlat
pop
dec
lahf
jl
push
mov
decl
lea
xchg
movsl
out
and
dec
mov
enter
dec
test
out
adc
dec
ret
incl
push
imul
test
out
ss
pop
add
mov
push
sbb
lahf
je
add
inc
jo
mov
inc
jl
pop
xor
call
ds
add
outsl
enter
rolb
loop
push
mov
xor
std
incl
or
rcll
and
xchg
mov
mov
mov
ljmp
add
stc
mov
jecxz
das
adc
stos
stos
xor
lcall
cwtl
xchg
into
xchg
lock
or
adc
and
mov
pop
adc
aas
call
pop
jmp
or
push
mov
or
sub
sbb
call
dec
sbb
fxch
pop
sub
movsl
or
mov
cmpsl
push
or
mov
std
fsub
scas
dec
out
cs
mov
psubsb
call
pop
or
or
icebp
dec
and
jns
sub
mov
cli
adc
pushf
mov
mov
test
ds
cli
pop
shlb
mov
ljmp
outsb
sub
push
add
mov
pop
push
dec
std
add
addb
out
sar
outsl
jp
dec
jne
lcall
ja
imul
loopne
pushl
fs
inc
xor
adc
push
pusha
int3
push
push
je
mov
mov
into
pusha
xchg
insb
xor
pop
cmp
inc
pop
push
lcall
and
ljmp
mov
sbb
ljmp
adc
mov
loopne
pushf
enter
dec
adc
adc
or
and
jo
mov
cli
test
dec
cmp
or
add
push
jae
add
les
pop
inc
negl
leave
sub
and
in
icebp
sbb
inc
lahf
enter
dec
cmpsb
inc
das
rcrl
jo
pop
sub
fists
add
ret
mov
stos
fmuls
pop
out
dec
xchg
dec
cmp
jg
pop
stos
mov
xchg
push
cmp
dec
xchg
outsb
mov
push
mov
lock
fnstenv
ljmp
xor
mov
and
xchg
ja
scas
or
call
cli
mov
pop
loopne
inc
dec
test
lcall
or
hlt
fistps
mov
shld
add
jne
incl
bound
sbb
pop
icebp
lock
push
mov
dec
sbbl
or
ret
out
cmpsb
mov
mov
add
hlt
cmp
xchg
sbbl
add
mov
aas
and
mov
add
pushl
dec
mov
cltd
jno
push
out
sbb
lcall
inc
fildl
push
lret
orl
stos
adc
xchg
leave
push
fprem
mov
or
xchg
push
andl
je
testl
out
xor
sbb
adc
push
xor
mov
xchg
jg
adc
inc
pop
lret
dec
inc
clc
add
xchg
jmp
lret
adc
cltd
dec
ljmp
js
sub
adc
or
xchg
sbb
js
adc
lcall
sbb
mov
mov
into
stos
add
and
popa
mov
cltd
sti
mov
push
xchg
call
inc
xor
outsb
jmp
sbb
aad
add
pop
lods
sub
push
data16
dec
popa
inc
mul
pop
dec
in
adc
ds
es
xchg
mov
inc
xchg
rcll
lret
int3
ret
jmp
cmp
pop
cmp
add
lahf
add
ret
popa
mov
lret
inc
push
test
cmp
jg
stc
je
pop
add
add
sbb
movsb
and
sarb
or
mov
ljmp
inc
inc
cmp
pushf
pop
xor
jbe
push
lock
and
adc
mov
decl
test
adc
popf
fdivrl
sub
inc
fidivl
jecxz
xlat
mov
cmc
jbe
and
fcomip
cmc
mov
xchg
cmpsb
inc
inc
in
ljmp
xchg
call
adc
fcomip
lcall
mov
loope
outsb
shlb
or
add
sbb
test
cmpsl
sbb
inc
clc
xchg
repnz
sbb
fisttpl
adc
out
hlt
dec
dec
cmp
dec
incl
sahf
dec
sub
xor
sbb
jmp
push
add
cmp
ljmp
push
or
mov
call
xchg
orb
mov
sub
incl
pop
in
sub
push
xchg
xor
add
out
dec
test
sub
mov
incl
mov
fs
sbb
mov
ret
pop
push
pushl
cld
cmp
mov
lret
xchg
jae
lods
cwtl
sub
aas
jno
or
and
push
xchg
iret
inc
xor
add
adc
or
insb
inc
mov
imul
incl
pushf
insb
jo
icebp
popa
inc
mov
sbb
les
movq
icebp
pusha
inc
enter
push
int3
test
arpl
das
popa
pushf
clc
inc
mov
call
stc
arpl
dec
xchg
and
les
js
je
sbb
outsl
fsubl
xor
push
inc
dec
sub
or
xchg
out
xchg
push
into
cmp
idivb
push
mov
inc
inc
loopne
test
lds
shll
hlt
lock
incl
ds
push
mov
aam
pop
xchg
and
nop
dec
adc
cmp
ljmp
decl
xchg
mov
mov
lcall
push
mov
sub
jle
cli
incl
jmp
pop
inc
in
adc
xor
loope
andl
cmc
in
mov
mov
imul
mov
in
ljmp
cli
clc
out
pop
popa
mov
mov
or
sub
stc
repz
mov
std
sti
outsl
mov
ljmp
cli
jo
add
inc
xor
in
dec
mov
mov
test
fimuls
int
fsubr
inc
sub
add
adc
addl
enter
and
lcall
mov
loopne
cmp
fldl
jmp
call
cmp
lea
imul
pop
inc
add
aaa
mov
cmp
mov
ljmp
stc
loope
or
cwtl
cmp
dec
sub
xchg
xor
leave
and
pusha
mov
adc
cld
fbld
cmp
adc
ljmp
test
loop
or
lea
lcall
lods
sahf
cmp
call
aam
dec
jecxz
out
ret
popf
shlb
sub
adc
pop
mov
mov
push
sbb
stos
int3
mov
sub
pushl
pop
adc
imul
imul
jecxz
mov
pop
clc
imul
ljmp
cli
lods
movsb
popa
and
mov
lret
mov
add
icebp
sar
das
xor
mov
je
mov
push
pop
jnp
xor
call
icebp
mov
jle
push
mov
mov
cmp
mov
mov
mov
mov
mov
xchg
xchg
jns
sti
push
dec
cli
out
xchg
and
or
or
xor
pushf
jg
add
insb
lock
jge
scas
stc
mov
fimuls
call
add
ret
xlat
pusha
pop
loope
std
push
pushf
outsl
cmp
fildll
mov
add
lret
movsb
repz
mov
incl
out
xchg
addl
add
das
fadds
jmp
dec
and
and
imul
and
and
rorb
cld
test
rolb
loopne
xchg
cmp
and
fiaddl
bound
rcr
cmp
push
lods
mov
xchg
jbe
call
neg
imul
mov
subb
cli
pop
mov
xchg
stos
lcall
fdivs
rcll
adc
gs
leave
fdivs
decl
stos
mov
cmp
push
push
or
call
push
lret
iret
add
fsubr
and
dec
gs
push
out
clc
dec
push
lea
mov
jae
adc
push
add
scas
dec
fnstcw
add
pushl
loope
dec
call
add
dec
sbb
ss
orb
push
xor
jmp
rcrl
loop
cmp
cmpsb
pop
stc
mov
mov
mov
lods
add
mov
std
incl
mov
mov
dec
int
add
and
jp
mov
jne
ret
jb
aam
mov
in
xchg
add
inc
or
icebp
sub
jle
xor
ljmp
sbb
cmp
sub
pop
in
jmp
and
sbb
mov
add
fwait
fwait
xor
movsl
mov
repnz
fiadds
pushl
cmp
in
cmp
ret
mov
add
xor
sti
pop
in
mov
xchg
xchg
mov
jne
pop
mov
push
dec
push
clc
rolb
mov
ja
decl
or
cltd
lret
dec
mov
jns
lock
pushl
dec
jge
sub
mov
lock
popa
xchg
addb
rol
cmp
mov
dec
bound
or
push
das
cmp
lret
sub
push
mov
xor
mov
xchg
push
adc
call
andb
mov
inc
sbb
fisttps
in
mov
loope
push
in
movsb
ror
rorb
mov
popf
addr16
mov
loop
sub
cmpsl
xchg
jg
lock
clc
insb
mov
or
bound
or
lods
cmp
mov
push
jmp
test
fistl
in
incl
nop
jbe
sar
sbb
enter
outsl
sub
adc
jno
add
push
addl
pushl
mov
fwait
cmp
pop
xchg
add
cmp
fisubl
loope
push
jae
push
inc
mov
decl
or
add
mov
inc
push
dec
jnp
roll
adc
mov
or
inc
inc
mov
movsl
js
in
popf
das
push
or
lea
test
push
mov
hlt
sub
sahf
mov
push
inc
adc
mov
ljmp
test
mov
leave
dec
mov
rorb
dec
xlat
xor
push
lret
mov
arpl
cmpsb
ljmp
sbb
movsb
inc
mov
pop
xor
data16
out
mov
pushl
cmpsb
leave
int
sbb
and
orb
push
mov
inc
add
or
loope
xchg
jnp
cmpsb
and
fdivs
push
in
pushf
mov
or
dec
push
lock
icebp
out
inc
inc
lcall
cmp
arpl
sbb
sub
mov
xchg
mov
rcrb
pop
cmp
pop
cld
decl
mov
sbb
or
sub
adc
push
mov
jo
push
pushf
incl
add
dec
and
jecxz
aaa
bound
cwtl
xlat
rolb
incl
je
or
popf
cwtl
mov
add
and
mov
aam
and
scas
cld
lret
xchg
push
scas
call
test
pop
test
fwait
lcall
lcall
loopne
mov
jbe
loopne
xchg
sar
jmp
mov
in
push
mov
sub
mov
push
js,pt
pop
aam
add
cmp
ret
mov
out
xchg
mov
test
inc
loope
jbe
lcall
out
addr16
sti
sbb
dec
push
test
mov
mov
and
jno
sbb
decl
push
xor
cmc
mov
and
mov
in
pop
sub
popa
int3
cmp
aam
scas
movsb
sbb
in
mov
jb
push
test
mov
pop
je
rcll
out
or
out
sub
arpl
xchg
shll
dec
or
stos
out
movsb
fists
fdivp
sub
ret
cltd
or
rclb
adc
push
mov
pop
hlt
pop
andb
add
and
add
mov
and
pushl
xchg
lahf
mov
loope
fwait
ret
adc
add
test
ja
aas
lds
incl
mov
cmpsl
adc
mov
divb
lahf
mov
imul
mov
add
cmc
shlb
pop
stos
fxch
pop
int3
mov
pop
ret
adc
mov
sti
call
lds
push
push
cwtl
pop
mov
sahf
push
sub
xchg
inc
out
adc
cmc
or
out
clc
call
cs
mov
mulb
test
inc
test
xchg
fiaddl
popa
fisttps
call
stos
imull
push
xor
jb
lods
ds
sub
sbb
xchg
les
push
add
mov
imull
xchg
xor
and
repz
aas
aas
cmp
rcrl
data16
mov
stos
jnp
movsb
aaa
hlt
int
mov
hlt
dec
mov
jne
push
jmp
xor
dec
pushf
js
lods
push
jmp
ljmp
or
movsb
mov
outsl
mov
adc
inc
add
pusha
push
movb
mov
jg
lods
dec
fadd
xor
dec
jp
ljmp
xchg
out
dec
mov
add
shr
and
decl
je
orb
add
pusha
adc
add
pop
loopne
insb
rolb
daa
in
ret
int3
out
pop
cmp
ds
sub
scas
or
or
leave
sub
sub
test
pushl
cs
or
lock
fwait
add
test
dec
test
dec
in
stos
and
scas
cmpb
test
arpl
mov
in
sbb
pop
decl
add
or
mov
pop
mov
mov
das
fstpt
mov
ljmp
in
adc
cmp
dec
cmc
pushf
insl
test
jno
decl
adc
insl
rcrb
push
in
ret
dec
int
sahf
das
rcrl
dec
mov
push
loop
sub
lcall
stos
out
clc
aas
mov
inc
mov
imul
push
or
ds
add
test
stc
add
jg
add
sub
dec
cld
cmpsb
and
push
ror
imul
dec
jg
incl
or
inc
or
loopne
pushf
dec
out
lret
test
les
add
jmp
pusha
or
inc
jb
dec
jae
and
test
dec
and
pop
jo
push
push
lds
daa
lahf
dec
lret
ja
or
rorb
sarb
and
mov
incl
push
in
cmpsb
cmpsl
sub
jecxz
mov
aad
inc
icebp
xor
dec
outsb
ljmp
mov
xlat
mov
in
pop
jmp
mov
jns
loopne
rcl
subb
xchg
inc
repz
or
decl
push
sbb
inc
out
subb
or
cmp
dec
pusha
lcall
jecxz
inc
rol
sub
clc
movsl
mov
jmp
ret
sub
lahf
data16
jo
adc
xor
sahf
data16
push
fimuls
and
incl
test
and
pop
xchg
bound
cmp
aas
and
mov
adc
int3
sub
out
ljmp
cs
xor
xor
pusha
jo
test
lods
popa
xchg
xor
jmp
and
cmp
out
and
or
jb
sbb
or
test
and
scas
cli
jmp
dec
cld
xchg
jbe
dec
nop
les
lods
xchg
call
clc
mov
cmp
addb
out
mov
push
insb
and
pusha
loopne
fisubrs
leave
push
fadd
int3
sbb
sub
pop
es
xor
and
arpl
mov
xchg
cwtl
lock
subl
bound
push
shll
cmp
imul
repnz
enter
or
inc
lods
or
push
and
xor
aam
or
xchg
test
movsb
test
addl
mov
incl
sub
sbbl
cmovg
mov
inc
negb
push
mov
mov
push
pop
fisubrs
inc
imul
inc
cmp
data16
lahf
out
scas
jg
xor
dec
imul
mov
stc
xchg
testl
ljmp
loop
xchg
jae
push
push
cwtl
fs
mov
in
dec
shlb
into
xor
or
cmpsb
jmp
jae
dec
jmp
dec
icebp
sub
clc
xor
scas
loopne
add
loope
add
mov
loope
push
fildll
pop
inc
aaa
aad
dec
leave
mov
and
mov
xchg
and
sub
loop
or
scas
icebp
stos
test
pop
fimuls
addb
lods
sub
jmp
loope
clc
or
pop
cmpsl
add
outsl
ljmp
xchg
jl
sahf
mov
out
in
stos
jae
jmp
ljmp
add
out
dec
xchg
adc
lds
orb
inc
movsl
bound
and
mov
int
sub
cmp
push
sub
hlt
out
mov
and
jl
cmp
mov
add
inc
mov
push
pop
push
int
dec
mov
ret
and
fs
das
pop
and
inc
cwtl
movsb
adc
cli
pushl
rolb
shlb
push
pushl
dec
hlt
ds
or
std
mov
ss
jb
cmp
popa
cmp
mov
dec
cmp
push
lret
xor
jmp
dec
fptan
xor
dec
das
subl
jae
hlt
push
sbbb
sarb
and
fs
mov
mov
push
xchg
enter
imul
mov
jbe
mov
push
or
imul
rcll
insb
lret
imulb
insb
cltd
xchg
imul
insl
stos
pop
dec
cmp
test
xchg
jecxz
fisubl
ljmp
adc
push
cli
inc
cmp
dec
push
pop
push
or
dec
ljmp
add
dec
pop
orl
inc
xor
ja
adc
push
mov
mov
sub
pop
xchg
mov
ljmp
int3
add
mov
jle
mov
lret
pop
xor
cld
sbb
pop
pop
xchg
or
push
jp
ljmp
push
xchg
xor
lds
xchg
mov
adcb
dec
xor
push
cld
inc
or
scas
clc
call
mov
lret
or
popa
push
sub
outsl
or
lds
in
fsubrs
xor
decl
mov
jbe
popa
push
or
shlb
mov
inc
or
pop
filds
lret
stos
pop
and
jg
aam
fcompl
jo
inc
xor
test
lret
mov
addr16
push
cmpsl
nop
das
cmp
addr16
lods
loop
fbld
lock
bound
dec
mov
subb
test
ljmp
push
fs
dec
mov
fadds
push
push
push
xchg
test
xchg
jbe
popa
js
mov
pushl
jno
cs
xchg
or
xlat
push
push
cwtl
test
decl
outsb
sub
pusha
sub
pop
adc
out
dec
add
data16
imul
and
push
ljmp
inc
in
mov
adc
mov
mov
inc
clc
adc
or
mov
inc
loop
outsl
jp
call
decl
and
mov
xor
cmpsb
and
int
inc
push
mov
jmp
insb
cli
and
sub
add
in
lock
sti
fdivr
lcall
orl
test
repnz
jge
jns
les
mov
insl
mov
cmp
xchg
xor
push
xlat
aaa
xor
cmpsb
mov
sahf
mov
ljmp
icebp
add
stos
inc
push
add
mov
xor
mov
sbb
pushf
mov
fcomps
subl
sub
lret
fucomi
inc
int
addb
jle
ja
mov
jmp
xchg
lea
stc
mov
fs
push
xor
insl
decl
or
push
fdivrl
cmpsb
pushl
cld
jmp
test
pop
js
js
push
rolb
xchg
incl
xchg
jp
cmp
inc
cmp
adc
movsb
cmp
mov
xlat
or
mov
xchg
cwtl
adc
mov
test
xor
ljmp
imulb
cmp
dec
adc
nop
and
lcall
out
dec
loopne
outsl
pop
icebp
add
lret
jb
rolb
mov
inc
leave
xchg
call
dec
xor
cmp
lods
in
popa
sbb
shrb
push
rcll
filds
dec
or
icebp
inc
jne
rolb
inc
cmp
test
es
test
pop
iret
xor
inc
out
lret
out
bound
jno
js
lret
sbb
test
dec
adc
sbb
fcomip
ljmp
mov
xor
mov
xor
les
mov
std
sbb
fidivl
test
pushl
in
cmp
mov
bound
jnp
and
mov
stos
jmp
jl
pop
call
add
orl
inc
adc
cmp
sbb
or
fstps
incl
push
das
xorl
jae
mov
xor
sti
dec
subl
xor
adc
xchg
sbb
push
lods
add
inc
mov
ret
cmp
ljmp
and
aas
push
cmpsl
int3
int
sub
sub
jl
inc
fcoml
les
iret
clc
dec
cmp
push
int3
sub
dec
sbb
lock
incl
sbb
dec
js
and
xchg
push
mov
push
jne
scas
addb
inc
lods
add
imul
lcall
jb
jle
lret
add
mov
lret
jl
push
test
outsl
add
aad
sarb
and
add
call
les
inc
leave
scas
pop
xor
pop
mov
inc
mov
xchg
push
jg
push
in
adc
xor
cld
subl
incl
cmpl
push
sti
gs
jns
fstl
lock
or
jo
decl
push
out
aas
jns
jle
mov
jnp
aam
dec
inc
mov
scas
out
and
in
and
push
fcomip
cmp
cs
cmpl
inc
mov
rol
bound
pushl
sub
mov
loop
mov
mov
das
jecxz
in
idivb
mov
jg
adc
std
pop
cwtl
mov
mov
sub
clc
fidivrl
sub
sub
adc
aas
int3
mov
in
jb
imul
pop
ja
pushl
in
pusha
jae
sbb
stos
lret
inc
orps
jp
jne
xchg
dec
cmpsl
dec
aam
decl
fidivs
movlps
sub
outsb
lods
sub
loopne
cld
lahf
push
lcall
lds
sbb
test
jmp
xchg
add
ret
lock
call
xor
and
xchg
push
int3
or
incl
jmp
jb
movsb
jb
jp
les
adc
bound
dec
cmp
lods
into
xor
out
cli
add
push
test
and
repz
push
test
ja
sarb
xor
sub
inc
cmp
call
add
mov
sub
enter
lret
xor
xchg
mov
fstl
insl
dec
cmp
int
fidivrs
mov
fs
jnp
push
mov
out
rcrl
iret
and
mov
test
fistl
mov
mov
std
push
mov
loopne
ja
pop
xor
negb
addl
pushl
out
cmp
je
jl
cs
mov
leave
sub
fistl
clc
es
mov
lcall
xor
cli
mov
fdivl
fdiv
inc
inc
fnstsw
rol
loopne
mov
sub
mov
or
cld
pop
and
mov
cld
cmp
mov
sti
jno
fimuls
decl
ljmp
pop
std
mov
cld
cmpsl
filds
loope
in
xchg
xor
popa
sti
ja
fs
dec
fadd
sub
add
pop
insl
bound
mov
push
add
ljmp
shl
orl
shl
or
test
call
cmp
cwtl
shlb
push
stc
out
dec
xor
test
jb
or
push
sarb
lret
scas
std
fs
xchg
lahf
inc
pop
fcomip
pop
cld
aam
mov
push
insb
jae
jmp
in
push
filds
fadds
incl
cmp
imul
icebp
inc
xchg
mov
push
decl
inc
nop
outsb
fdivrl
sub
fistl
dec
aaa
loope
xchg
ret
das
jmp
jno
dec
mov
nop
and
adc
push
scas
or
or
or
xchg
sbb
sub
or
ds
loope
mov
mov
imul
insl
iret
sbb
dec
pavgw
or
imull
ljmp
addr16
cmp
in
mov
mov
dec
movsb
sub
sub
mov
mov
call
sti
sbb
pop
jnp
jnp
jl
mov
xchg
out
or
add
cmp
insl
jmp
mov
into
icebp
lahf
cmp
mov
mov
sar
sbbb
inc
inc
adcb
push
dec
popa
xchg
cmp
push
inc
sub
jp
jmp
or
decl
mov
repnz
sub
xor
cmp
cmp
jbe
call
inc
sub
xchg
dec
mov
adc
sub
roll
push
imul
lds
imul
adc
mov
sub
mov
push
jmp
push
ret
inc
jae
xor
imul
and
ljmp
addb
mov
add
inc
lods
mov
sbb
pusha
inc
add
out
insb
dec
sub
test
movsl
jmp
adc
push
dec
or
test
sub
loope
dec
xchg
pop
push
in
cmp
and
in
sbb
mov
add
jae
mov
incl
popa
inc
xchg
bound
sbb
and
in
mov
popf
push
sbb
scas
call
shrb
in
sub
fldt
sub
sbb
xorl
scas
jae
inc
test
mov
rolb
call
xchg
daa
push
ja
jbe
jae
jo
call
shll
push
pop
jge
mov
jle
iret
and
inc
fbld
sub
jle
xchg
test
cli
push
repnz
shll
xchg
sub
push
decl
jae
seto
sub
xor
lods
xor
xor
test
pop
ret
pop
push
sbb
inc
adc
fstps
gs
xor
xchg
lcall
addb
fsubs
lock
sbb
fldl
imul
or
jl
loopne
pushl
fldenv
gs
mov
pop
popa
xor
fbld
ljmp
add
dec
ret
sahf
jmp
push
cmp
pushf
js
call
sub
xchg
mov
inc
ljmp
add
dec
dec
pop
mov
inc
inc
sbb
mov
xchg
sub
dec
inc
leave
test
out
ss
lret
aas
in
push
incl
incl
pop
arpl
adc
pusha
rol
movsl
sub
mov
add
adc
sub
pop
incl
sbb
stos
insl
out
pop
jp
in
mov
cs
fmull
pop
call
sbb
clc
ljmp
insb
fdivrs
sbb
mov
mov
nop
jnp
cmpsl
push
sti
sbb
mov
scas
fdivrs
sbb
push
xor
or
sbb
sbb
jbe
mov
mov
pusha
fadd
sahf
adc
lds
push
adc
popa
aas
jnp
test
hlt
xor
cmp
mov
lret
mov
data16
and
pop
call
add
rcrb
add
xor
addb
adc
loopne
pop
clc
insb
loopne
and
inc
pop
out
push
icebp
lcall
add
in
insl
imul
loopne
nop
xchg
sbb
outsl
clc
fists
adc
enter
mov
sbb
loopne
sub
insl
push
lcall
push
packssdw
in
and
dec
inc
inc
rclb
pop
ror
mov
pop
lock
xchg
testb
repnz
xchg
test
sbb
dec
dec
data16
or
pushl
incl
roll
daa
ds
cmp
inc
jbe
pop
mov
andl
jns
sub
xchg
cwtl
mov
in
js
adc
adc
in
sub
daa
inc
movsl
adc
decl
adc
jnp
inc
pop
hlt
mov
dec
mov
sti
lods
jne
incl
mov
xchg
mov
mov
mov
clc
les
jae
addr16
inc
dec
jp
dec
pop
sti
and
pushf
inc
and
add
pushl
add
jo
xor
test
subl
in
pushl
cmp
cwtl
sbb
cli
and
jns
js
and
lea
jle
push
fists
pop
test
push
mov
arpl
or
arpl
test
adc
cmp
and
mov
push
mov
notl
add
ret
aas
aam
mov
cltd
adc
stos
sub
sub
sbb
sar
lcall
mov
push
and
lods
mov
imul
insl
jbe
pop
sbb
inc
cmp
or
fadd
push
sbb
jmp
cmp
or
adc
ljmp
push
mov
dec
push
loope
inc
dec
push
sub
aam
negb
sahf
adc
addb
lret
dec
mov
or
and
mov
fistpll
pop
xor
sub
adc
cld
leave
add
int3
cltd
je
sbb
pusha
add
cmp
add
push
mov
iret
mov
mov
add
jg
mov
hlt
dec
add
push
mov
inc
pop
mov
dec
out
inc
mov
loopne
into
cwtl
xor
xor
push
es
mov
fldt
push
rcll
incl
push
push
mov
arpl
push
xchg
leave
and
fs
pcmpgtw
inc
jg
adc
xor
in
addb
cltd
push
sbb
mov
ret
xchg
lock
sbb
jne
xchg
int3
sub
cmp
orl
test
inc
adc
aam
cli
xchg
mov
xor
ljmp
aad
inc
sub
and
inc
test
mov
shl
mov
flds
icebp
incl
or
add
addb
mov
xorl
cld
scas
data16
ss
lods
jno
push
imul
xchg
stos
xchg
icebp
or
movsb
jg
jmp
ss
adc
or
push
xlat
push
add
sub
nop
adcb
aaa
jbe
call
and
jmp
push
enter
insl
or
cwtl
loop
shrl
inc
lods
repnz
pop
pop
bound
bound
incl
and
stc
inc
ljmp
mov
or
adc
mov
jecxz
add
dec
or
cltd
pop
icebp
xor
pop
lahf
movsb
fs
mov
mov
mov
mov
dec
adc
aad
cmc
lods
nop
cmp
adc
cs
xchg
ljmp
int3
push
sbb
xchg
leave
or
out
out
clc
ret
cli
gs
mov
pushl
mov
imul
call
lret
pushf
sub
sarl
mov
inc
arpl
inc
enter
popa
addl
lock
rorl
inc
jecxz
and
xchg
mov
rol
call
jae
push
psllw
pop
arpl
sahf
sbb
or
frstor
cmp
sahf
nop
jle
gs
cmp
jmp
inc
mov
sbb
sbb
adc
in
addr16
add
push
subl
add
ret
fcmovu
cwtl
decl
or
xchg
ljmp
mov
ds
cmp
and
xor
sbb
jnp
scas
scas
cli
stos
jp
loop
mov
data16
fsubrs
sbb
lcall
ret
popf
stc
int3
jae
rcrl
jno
dec
push
jnp
out
inc
cli
mov
mov
mov
mov
subl
in
lcall
outsb
adc
cmp
xchg
dec
xor
popa
inc
cmp
bound
cmpsl
stos
or
push
add
popf
dec
cmpsb
inc
sub
xchg
sub
mov
sub
sbb
in
shll
push
jmp
add
cli
test
mov
pop
mov
insb
bound
call
add
inc
rol
mov
call
add
rcll
jno
cmpsb
sbb
mov
enter
in
sti
out
push
movsb
push
sbb
lcall
aas
jne
adcl
xchg
dec
dec
cld
pushl
mov
sbb
sbb
popa
sub
add
ja
cmp
xor
mov
push
sub
popa
popa
shll
add
dec
aam
push
int3
sbb
jo
pop
jecxz
cmp
je
pushl
ljmp
add
inc
sbbl
fs
add
xchg
inc
incl
ljmp
jb
push
in
pop
xchg
push
negl
pop
push
xor
in
decl
xor
adcl
xor
dec
cmp
gs
incl
add
pop
inc
inc
pop
add
xor
mov
lock
gs
pusha
inc
push
popa
ret
pop
outsb
test
push
push
aaa
mov
xchg
xchg
and
push
call
stos
enter
imul
or
jo
pop
andb
shll
mov
add
dec
sahf
adc
incl
jae
or
cs
mov
or
sub
or
ss
outsl
loopne
sub
mov
cmp
cmp
pop
adc
enter
push
pop
push
ljmp
xor
add
cmp
pop
add
pop
add
rolb
rclb
jg
pop
and
subb
les
inc
push
mov
test
mov
aas
movsb
and
pushl
icebp
nop
hlt
pop
test
jno
stc
xchg
lds
push
sbb
loope
jb
sbb
movsb
pop
pop
stc
push
lock
sahf
roll
inc
nop
leave
adc
test
sti
jae
mov
lcall
pop
xchg
les
sti
stc
push
push
fildl
add
adc
das
mov
inc
mov
sub
push
and
loopne
add
xor
jae
pusha
inc
pop
movsl
inc
and
adc
cmc
pop
repz
cmpsb
xor
bound
add
xor
jmp
and
pop
sub
push
call
gs
xchg
clc
ljmp
ds
xor
and
pop
lock
or
xchg
sti
pusha
push
jns
movlps
lcall
fadd
nop
ss
hlt
add
mov
add
add
data16
pop
ljmp
clc
pop
mov
jo
xor
xor
mov
jge
add
aad
aam
icebp
jmp
push
mov
jns
nop
out
cmc
pop
ss
mov
jp
xchg
test
decl
add
mov
scas
inc
adc
popf
je
pop
sub
adc
push
cld
call
daa
adc
jg
test
and
std
jg
cs
jl
and
roll
jl
in
lock
mov
cli
imul
and
hlt
sub
push
adc
repz
jg
inc
sbb
int3
add
mov
call
push
xor
dec
call
xchg
and
stc
mov
cmp
incb
xchg
lcall
sbb
icebp
sbb
jp
sub
sbb
xchg
jecxz
sbb
jmp
imul
je
add
testl
test
lret
insb
shll
call
mov
jae
lds
xchg
add
sub
sbb
push
mov
push
mulb
pavgb
arpl
sub
inc
mov
mov
incl
sbb
shll
cmp
push
daa
and
dec
incl
push
adc
xchg
inc
xor
cmpsl
inc
push
cwtl
loop
pushl
hlt
xchg
subl
push
add
add
jno
lods
add
dec
fs
fstpt
push
nop
add
mov
push
insb
gs
adc
fwait
sbb
push
test
add
cmpsb
push
test
scas
test
mov
imul
into
xor
pushf
mov
es
lock
jg
imul
push
shrb
js
decl
sub
shrl
ret
jp
hlt
lods
fs
adc
mov
insb
sub
mov
sub
dec
lahf
cmc
cmp
mov
cmp
push
roll
pop
movsb
adc
jg
scas
mov
pop
mov
or
mov
push
add
add
sbb
adc
loope
sub
fildl
mov
xchg
out
mov
les
mov
or
incl
or
mov
mov
mov
pop
movsl
cmpsb
lock
hlt
sti
add
js
test
jmp
xlat
adc
mov
jno
lcall
out
jo
add
cmpsb
xor
xor
pop
xor
push
cmp
sbb
aam
bound
lcall
dec
xchg
inc
pop
leave
xchg
pop
fdivs
and
movsb
xor
orl
test
fidivl
incl
pop
cmp
pop
lds
mov
gs
push
in
add
jne
inc
adc
data16
jmp
xor
aad
popf
leave
add
inc
dec
add
je
and
mov
addr16
mov
add
mov
xchg
xchg
cli
fwait
mov
das
sarb
imul
ret
cwtl
adc
scas
mov
add
push
and
fisttpll
lea
cs
jg
decl
orb
add
js
cmp
lahf
in
sahf
aam
mov
adc
xchg
ljmp
cli
lret
les
in
push
adc
add
pop
or
mov
andb
push
jge
inc
mov
push
pop
cmc
xchg
arpl
cld
xchg
mov
dec
clc
mov
pop
inc
pusha
test
les
sub
test
decl
mov
hlt
push
cltd
icebp
mov
ja
and
test
mov
cld
cmpb
inc
stos
in
sbb
cld
test
adc
mov
cmp
fdivs
adc
xchg
cmpsb
push
repnz
enter
bound
mov
fisubs
inc
cmp
adc
sbb
jmp
and
jae
or
inc
hlt
rcrl
divl
inc
xchg
xchg
repnz
pop
push
fld
fs
cmp
and
jmp
pop
mov
xor
xor
xchg
pop
stc
nop
ja
mov
aad
add
mov
stos
inc
mov
push
mov
jl
add
adc
mov
call
jl
add
sub
mov
loopne
insl
xor
fwait
mov
test
cli
mov
pop
mov
mov
movsl
xchg
inc
std
ljmp
addr16
or
jp
pop
adc
lods
movsl
xchg
push
lret
xor
les
insb
int
cltd
add
ljmp
fucomip
cmp
dec
fisttpl
jmp
mov
push
lock
mov
lcall
cmpb
je
std
xor
cmp
push
aaa
inc
ds
outsb
incl
test
adcl
dec
xor
or
decl
jno
and
mov
and
aad
pop
in
mov
jg
sbb
and
mov
push
xchg
notb
jno
ds
das
inc
add
pop
jbe
out
mov
movsl
and
ret
sbb
rolb
push
add
add
loopne
scas
shlb
gs
jno
push
sub
pop
inc
ret
or
dec
jp
inc
cmp
out
jg
test
jl
push
gs
sbb
and
je
mov
xchg
test
sahf
decl
sub
xorl
nop
jp
push
imul
out
jg
mov
js
add
dec
inc
inc
imul
andl
test
and
movsl
sti
nop
leave
popf
cld
mov
add
leave
es
lcall
mov
into
cltd
push
stos
in
fadds
push
jp
inc
pushl
test
es
pusha
sub
iret
sub
aaa
mov
lods
or
pop
inc
or
push
fcmovb
gs
ret
je
add
mov
mov
scas
pop
nop
lock
clc
fildl
mov
mov
push
adc
pop
std
inc
push
fisttps
sti
lods
je
or
cmp
mov
jbe
xor
xchg
incl
pop
sbb
xchg
test
test
or
inc
or
test
mov
fstpl
cmp
pop
sbb
mov
jb
jns,pn
xor
sbb
decl
xor
jge
push
jae
mov
inc
loope
call
mov
mov
xchg
sbb
pop
pusha
les
cmp
popf
mov
repz
sub
pop
faddl
aaa
mov
sbb
lds
inc
lcall
int3
push
aam
mov
xor
or
dec
xchg
test
push
xor
jno
cmp
std
in
adc
jo
bound
mov
pop
adc
jo
ss
ja
and
push
or
fs
and
icebp
js
adc
test
sahf
mov
add
pop
loopne
jne
bswap
rorb
push
pop
lcall
scas
pop
pop
out
pusha
xchg
cmc
pop
loop
jl
setbe
push
push
pushl
adc
adc
lret
mov
xor
fsubl
inc
dec
jo
sub
cld
cmp
add
or
sub
cmp
push
dec
dec
test
fisubrl
int
pop
pusha
jl
mov
cmpsb
and
mov
push
xor
lods
iret
jo
arpl
lret
jg
imul
decl
shrb
fldl
rolb
inc
cmpb
sub
mov
and
pusha
test
lret
jg
adc
adc
call
test
sbb
mov
stc
adc
lret
sbb
pop
jecxz
movsl
xor
or
jb
push
in
jmp
inc
sbb
jno
sbb
mov
and
arpl
test
inc
arpl
sar
jmp
loope
cmp
sbb
les
xchg
sub
xor
repz
icebp
pushl
jne
sbb
sub
cmpsl
adc
loop
or
push
imul
popa
aam
jge
xor
fbld
or
sbb
pusha
or
cmp
ret
adc
jl
mov
stos
outsb
aad
pusha
sbb
repz
fdiv
jg
jbe
cmp
mov
pop
outsb
mov
gs
testb
push
xchg
inc
movsb
dec
fisttps
testb
add
loopne
push
jmp
pop
pop
fldenv
jmp
icebp
xorb
jne
xchg
scas
pop
cltd
ljmp
loopne
adc
jmp
sub
jbe
leave
jl
movsb
adc
sbb
jg
cld
mov
add
mov
push
and
fsubr
adc
call
xor
add
notl
sbb
mov
loop
push
outsb
movsb
fisttpll
incl
add
icebp
xchg
sbb
adc
ss
std
cmpsl
cli
sti
cmp
dec
ja
test
loope
dec
jg
jns
ljmp
sub
fdivs
mov
out
cmp
xor
add
pop
xor
jne
movsl
test
imul
loop
and
push
and
xor
stos
mov
mov
pcmpeqb
stos
mov
notl
pop
arpl
loope
cmpsb
arpl
mov
addl
lods
nop
and
or
pushl
push
mov
outsb
test
mov
cmp
push
jne
adc
mov
jmp
mov
and
test
and
adc
loopne
sbb
inc
and
mov
hlt
hlt
mov
or
lcall
es
xor
jmp
inc
jg
lcall
pop
xor
leave
lcall
in
mov
ret
loope
lea
ljmp
ds
cld
add
mov
inc
pop
push
sbbb
jg
mov
sbb
mov
or
xor
test
or
or
ljmp
jmp
sub
mov
xor
xchg
mov
mov
lock
in
lcall
in
es
xchg
shl
int
cmp
sub
push
pop
mov
pop
mov
ljmp
fistps
popf
xor
xchg
push
sbb
or
test
jns
push
jb
mov
call
mov
dec
sub
sub
lock
ljmp
mov
inc
stos
mov
pushl
jnp
and
bound
adc
push
pop
lock
lods
rolb
push
insb
leave
inc
pushf
jp
sub
xchg
orb
jno
lea
jp
mov
and
cmp
rclb
sub
sub
out
adc
push
add
lea
or
out
clc
stos
clc
repnz
int3
cmp
add
add
push
dec
and
inc
cmp
cs
test
loop
ret
push
ds
mov
adc
shlb
jo
add
sar
sub
and
adc
ret
daa
pop
mov
rorb
and
mov
cld
incl
inc
bound
leave
mov
es
test
daa
push
decl
lcall
pop
mov
test
sub
xor
fsubs
cmpsb
add
je
push
push
mov
jmp
mov
in
inc
fisubl
pop
jbe
fs
fmull
mov
xlat
pop
sbb
dec
ss
scas
nop
dec
mov
es
icebp
pushl
xor
ds
shlb
jge
and
enter
ficoml
jo
lcall
xlat
push
mov
and
xchg
cmp
das
cmp
mov
lret
push
arpl
fisubs
call
lret
sarl
mov
dec
loop
inc
adc
mov
cmp
pusha
dec
mov
clc
or
and
jp
in
mov
push
mov
sbb
ret
sbb
test
sbb
js
mov
imul
into
leave
jbe
in
mov
add
ret
adc
push
lcall
stos
mov
mov
xchg
pop
xchg
mov
xchg
inc
lea
test
fildl
xchg
in
inc
push
jecxz
hlt
fwait
inc
loopne
movsb
xchg
and
xchg
mov
lcall
or
lea
pushl
ds
sbb
ljmp
inc
mov
xor
rclb
mov
jle
inc
idiv
incl
rorb
in
push
jo
in
rolb
cwtl
xor
test
std
xor
inc
mov
incl
mov
aas
je
and
popl
rcr
jnp
mov
cmp
pushl
popf
aaa
mov
sub
popf
xchg
mov
jae
adc
sub
rcl
push
or
or
mov
decb
incl
inc
jo
int
push
sbbl
xchg
iret
jg
fadd
add
aam
divb
add
jbe
decl
or
out
xorb
insb
pusha
arpl
xchg
outsl
jp
xor
lock
xchg
incb
cld
movb
notb
fs
rolb
loopne
jge
mov
data16
mov
popf
popf
test
push
xor
int3
mov
pusha
pusha
inc
scas
ljmp
cmp
add
mov
aam
test
pop
nop
sbb
adc
xchg
adc
dec
push
xchg
jp
and
std
xchg
mov
lret
inc
insb
ret
sahf
xchg
in
js
push
mov
push
cmpsb
call
and
pushf
or
and
dec
xor
xchg
cmovb
daa
mov
loope
jns
cli
and
lock
push
xor
sbbl
imulb
orl
jo
shlb
fmull
cmp
incl
adc
pusha
jle
xchg
xchg
popf
setl
dec
jbe
pushl
lods
pop
sub
xor
push
xchg
xor
outsl
mov
mov
leave
sbb
movsl
jl
mov
ljmp
repz
mov
jne
arpl
pushf
daa
cmp
cmp
fwait
jmp
aad
repnz
mov
mov
les
pop
lea
xchg
sub
jo
cmp
xor
fists
jg
sbb
stos
sub
out
push
dec
cld
aas
or
add
test
inc
repnz
mov
inc
sub
cmpsb
outsl
clc
call
ss
popa
or
fsts
bound
ret
lahf
idivb
cld
sub
call
rolb
or
dec
jp
clc
push
test
xchg
mov
adc
inc
cmc
push
outsl
clc
pop
cld
inc
pop
rolb
add
jo
push
inc
xor
push
jmp
nop
lock
xchg
pop
loope
dec
inc
cmp
in
dec
sbbb
mov
jmp
fwait
xchg
push
stc
add
mov
je
or
dec
aad
dec
repnz
push
jns
lods
or
call
sbb
aas
cli
aad
mov
mov
incl
pop
xor
push
stos
inc
orl
incl
inc
jo
call
mov
or
xchg
jmp
pop
int3
adc
orb
and
jmp
push
cmp
lahf
mov
inc
lds
inc
mov
mov
rcl
lcall
inc
imul
jl
jo
and
out
cmp
pop
clc
scas
mov
inc
call
push
test
movsl
dec
pop
push
test
mov
adc
xor
add
roll
or
mov
lret
rorl
pusha
leave
xor
or
decl
mov
adc
icebp
mov
mov
lret
aaa
dec
pop
hlt
in
dec
imul
xor
dec
jbe
insb
cmp
nopl
enter
jno
dec
pushf
mov
in
mov
pop
orb
sbb
cli
mov
das
add
or
xor
jns
and
aad
xor
dec
loop
inc
push
mov
inc
js
mov
and
loop
test
imul
mov
stos
sub
xor
and
dec
inc
and
jg
dec
notb
inc
or
dec
pop
pop
xchg
int
subb
jno
push
call
lock
lods
pop
mov
inc
cwtl
cli
xor
or
pushl
leave
cmp
inc
add
pop
sbb
jb
mov
ret
out
jp
cmp
push
xchg
push
test
xchg
adc
ljmp
xor
mov
repnz
inc
add
mov
mov
pushl
mov
movsl
idivl
int3
dec
jle
punpcklwd
ret
jno
sub
ljmp
arpl
sti
and
jo
in
loopne
in
ficomps
divb
pushl
push
std
cmp
outsl
rorb
inc
daa
bound
push
lock
rol
arpl
lcall
fistpll
xor
into
dec
and
mov
or
aam
mov
addb
insl
dec
mov
mov
jmp
pop
cmp
cmp
popf
sbb
inc
cmp
dec
jmp
test
push
add
enter
pop
inc
push
mov
incl
pop
jno
rcll
clc
xor
push
movsb
jno
adc
sbb
mov
ljmp
mov
cltd
xchg
inc
ja
mov
mov
out
pusha
call
mov
jmp
inc
jae
dec
xor
sub
leave
mov
out
pop
jns
push
xchg
sub
sbb
roll
lock
call
aam
mov
inc
xchg
call
rorl
mov
ljmp
mov
xchg
call
mov
pushl
mov
hlt
xchg
and
dec
dec
outsl
xchg
mov
ljmp
loope
in
jl
jge
fnstcw
cmp
sbb
cmp
fsub
sahf
daa
adc
fisttps
sbb
pop
enter
je
cmp
fsubr
jle
nop
into
enter
inc
punpckhbw
ds
inc
outsl
jp
aas
sti
fisubl
mov
jnp
sub
inc
js
cmp
gs
cmp
ret
xor
insb
pop
lahf
out
mov
cmpsl
jge
test
sub
fwait
add
mov
and
sbb
lret
fmull
cmpsb
orb
in
shlb
sbb
push
enter
stos
cmpsl
mov
add
movsb
sbb
movsb
xor
xor
push
mov
pop
xor
adc
addb
mov
into
mov
ret
mov
cwtl
or
cmp
mov
rclb
aas
shll
push
popa
sub
jae
xor
and
sub
jmp
push
rcr
mov
mov
push
test
mov
xor
or
lret
sbb
ljmp
add
sub
mov
les
pop
and
dec
add
loope
sbbb
out
mov
jg
sub
dec
pop
ret
fidivrl
jg
lcall
aas
jae
pop
push
jnp
shll
xchg
pop
fmull
lahf
in
std
push
scas
test
xlat
addb
test
sti
sbb
sub
dec
inc
push
in
xchg
ljmp
push
mov
pop
int3
inc
pop
les
cmpl
mov
lds
aas
pushf
inc
jg
inc
or
mov
sbb
in
or
insl
ljmp
add
popf
push
rolb
and
sub
setl
push
idivb
mov
sti
mov
add
fsubrl
mov
cltd
add
add
and
push
cmp
nop
mov
add
imul
and
push
pop
mov
xor
dec
jmp
dec
jae
mov
dec
xor
mov
push
test
inc
lcall
loope
cmp
sbb
mov
into
adc
mov
movsb
jns
incl
lods
xchg
add
cmp
adc
andl
mov
lret
push
pushl
pop
sarb
cwtl
mov
sbb
jecxz
add
jmp
adc
fdivr
xchg
loope
xchg
push
sub
cmp
dec
mov
sahf
aaa
dec
clc
lcall
into
mov
ljmp
pushl
dec
movsb
mov
lods
das
sbb
pop
mov
xlat
push
lea
add
cwtl
dec
mov
pop
and
dec
test
mov
cld
mov
mov
adc
mov
or
cmc
inc
aas
lret
sbb
pusha
and
push
call
mov
shlb
cmp
cmc
push
sahf
in
and
add
push
push
lods
lcall
xchg
jecxz
xchg
leave
mov
test
mov
ljmp
mov
cs
cmp
sbb
jmp
push
and
add
das
xchg
pusha
mov
andl
inc
lcall
jns
push
sarl
push
cmp
leave
fmuls
rcll
inc
enter
push
cld
hlt
inc
push
or
pop
cmpl
xchg
and
add
scas
sbb
mov
js
and
mov
sbb
loopne
rolb
ja
rorl
cmp
sbb
cld
sbb
xor
inc
adc
call
xchg
outsb
fisttpl
or
hlt
xchg
inc
mov
sbb
cwtl
test
inc
sti
xor
jb
int
xchg
mov
pop
fsubrs
cmp
jne
mov
push
ljmp
les
sub
fadds
leave
pop
ret
test
inc
mov
or
out
ret
inc
addr16
jg
cwtl
int3
js
int3
sbb
cmp
adc
mov
cltd
sub
or
das
mov
lods
rorl
lea
xor
cmpsl
inc
int3
scas
lahf
mov
lahf
jp
and
mov
fcoms
js
out
cli
rorb
and
pop
adc
jg
incl
push
rcl
pop
dec
into
ljmp
cmp
mov
ljmp
push
mov
and
mov
mov
enter
sub
xor
lcall
fnstcw
iret
ret
sub
sbb
test
aam
das
ror
das
sti
or
call
xor
mov
and
jns
xchg
test
ret
stos
cmp
fldenv
push
adc
incl
int3
cmp
sbb
lret
xor
mov
lods
xchg
ret
add
adc
sbbl
sbb
call
incl
adc
sbb
es
das
lock
and
lods
rcr
movsb
int
cmc
mov
das
mov
adc
mov
popa
pop
imul
cli
sub
leave
xchg
hlt
shll
adc
aam
cwtl
xor
dec
ja
push
inc
aad
mov
ljmp
mov
rcrl
xor
test
pop
scas
mov
je
jecxz
rcrl
pusha
lcall
lea
sub
cwtl
int
add
rcrl
inc
daa
sbb
push
cmp
pop
js
pop
std
incl
mov
outsb
sbb
push
fmuls
std
sbb
and
push
mov
rsqrtps
ret
in
push
popf
subl
add
mov
fdivp
sahf
int3
rolb
or
std
fcomip
inc
xor
pop
mov
in
dec
cmp
push
stos
arpl
call
or
mulb
mov
sub
mov
and
incl
jno
ljmp
dec
ss
shrl
pop
test
add
pop
mov
sbb
add
ljmp
ds
aad
subb
ficomps
ljmp
add
test
xlat
repnz
popa
repnz
xchg
push
xchg
inc
add
scas
cmp
jg
aas
and
in
cs
test
cltd
inc
xlat
sbb
mov
int3
daa
std
lcall
and
cmp
lds
sbb
lods
inc
sub
pop
in
dec
fildll
hlt
lret
rcr
aam
push
xor
orl
mov
popf
inc
aas
jp
call
lds
xorl
sbbb
sbb
push
negl
std
jmp
sbb
pop
inc
inc
jp
test
lret
mov
push
mov
repz
adc
sbb
sub
xchg
sbbl
call
addb
inc
aad
xchg
add
std
call
into
add
push
jle,pn
es
dec
pop
xchg
mov
adc
call
ffree
xchg
sub
push
nop
xor
cld
adc
pop
fsts
xor
inc
iret
pop
mov
pushl
leave
push
push
es
sbbl
or
arpl
xchg
decl
mov
movsb
mov
mov
inc
in
jp
adc
pusha
jmp
fisttpll
movsb
mov
mov
push
popa
cli
xchg
nop
popa
call
jecxz
xchg
adc
cwtl
loopne
incl
or
dec
pop
cmc
mov
in
pop
pushf
icebp
adc
lock
xor
decl
shlb
jae
aas
lea
flds
and
xchg
push
call
jl
dec
insl
ficoms
hlt
pop
sahf
aad
popf
add
mov
inc
adc
xor
mov
push
adc
adcb
aas
idivb
mov
loopne
jmp
shll
or
push
cmp
push
pop
pop
incl
mov
loopne
das
add
sub
leave
mov
test
call
incl
add
mov
std
enter
xchg
outsb
bound
add
clc
decl
adc
loope
movsb
dec
pop
xor
jnp
xor
into
and
dec
push
int3
call
mov
cli
scas
shll
cmpsl
inc
and
ljmp
pushl
sti
pop
inc
loope
xor
mov
jns
shl
sub
mov
mov
and
sahf
lahf
dec
jp
lret
dec
je
nop
rcrl
sbb
jb
loope
add
pop
pop
incl
es
sub
movsl
clc
lea
jp
aas
cmp
fnstenv
popa
out
xor
outsb
lock
es
mov
popf
lahf
cld
int
inc
ret
insl
fistl
and
dec
cmp
in
pop
adc
pushl
xchg
jp,pt
out
mov
jg
aam
adc
loope
divb
pop
popaw
adc
int3
int3
in
addr16
sbb
cmp
push
add
cltd
inc
inc
test
jp
push
cmp
scas
mov
incl
jae
dec
dec
mov
mov
add
mov
bound
jmp
sub
test
incl
sbbb
fstpl
mov
les
faddl
jecxz
pushl
push
incl
jne
lods
sbb
std
je
mov
test
ljmp
shr
rorb
inc
hlt
adc
and
pusha
cmc
push
or
scas
ja
notb
movsl
xor
fisubs
insb
push
imul
aaa
mov
mov
das
test
pusha
test
cmp
sub
incl
pop
pop
pop
pop
out
mov
sbb
popf
pop
inc
in
ss
xor
pop
enter
add
mov
cmp
xlat
enter
mov
sahf
dec
mov
outsb
mov
adc
xchg
scas
mov
call
sbb
fadd
pusha
xor
das
sub
cmp
movsl
jle
dec
mov
cmpsb
push
rep
push
lods
aad
xorb
lods
loopne
pusha
cs
adc
call
jno
int
mov
mov
ss
pop
lods
out
jbe
add
mov
sub
sbbl
dec
pop
adcb
js
xor
sbb
decl
sbb
pop
inc
sub
lret
cmp
push
imul
mov
inc
push
and
xchg
and
mov
test
ret
aam
sarb
push
call
cwtl
xchg
cmp
ljmp
xchg
jne
bound
sahf
mov
xor
movsl
sti
adc
cmp
jbe
adc
xchg
cld
loope
xchg
repnz
call
js
out
sbb
rcrb
add
add
ret
xchg
hlt
jmp
sub
add
pop
arpl
mov
aaa
std
ljmp
es
aas
lock
xchg
add
into
mov
xor
lcall
cmpsl
js
in
pop
enter
ljmp
or
enter
push
cmp
lcall
movsl
adc
jl
addr16
mov
xor
or
xchg
test
cld
decl
shll
and
int
sbb
push
outsb
and
pop
push
ljmp
or
leave
mov
pop
dec
outsl
xor
jp
mov
dec
outsb
pop
cmp
call
leave
pop
decl
inc
repz
adc
push
mov
sub
sub
add
add
dec
int
jb
lret
scas
fldl
pop
xor
call
rcrl
push
hlt
test
pop
mov
or
shll
xchg
ljmp
jge
gs
inc
gs
add
imul
ljmp
mull
inc
mov
mov
mov
enter
ret
pushl
fnstenv
jb
xchg
enter
xor
insb
repz
add
jb
aas
repnz
call
or
add
loope
sbb
out
lcall
xor
mov
xor
lock
or
aaa
fistpll
movsb
add
pushl
fistps
cmp
mov
lock
sbb
dec
imull
add
and
cmpl
jmp
jmp
ret
mov
and
push
sbb
fs
call
inc
xorl
add
aaa
outsl
pop
ret
sar
in
mov
pop
pusha
xor
loopne
jno
test
mov
sub
push
rcrb
rcrb
js
jg
call
mov
hlt
add
jo
mov
mov
int
mov
into
fwait
adc
pushl
fsubs
leave
mov
shll
mov
add
dec
shll
lods
or
scas
clc
pushl
mov
xor
push
test
lcall
in
pop
mov
cmp
ficoml
mov
fwait
sbb
push
sbb
repz
call
mov
cmp
les
icebp
pusha
sbbl
js
jno
jmp
push
mov
stc
push
les
fsubl
lds
pushw
clc
mov
ljmp
sbb
scas
in
lcall
out
fists
das
push
stos
pop
ret
xor
mov
inc
mov
adc
push
imul
es
call
or
or
mov
das
rcrb
dec
add
jo
or
subb
xchg
es
cmp
decl
gs
arpl
dec
out
mov
les
or
mov
jle
in
xchg
inc
fcomip
fstps
xchg
inc
aam
test
mov
pop
lods
andb
jbe
call
arpl
inc
push
inc
push
fs
cwtl
xchg
push
inc
xor
cmp
inc
mov
jns
mov
js
out
or
sbb
xchg
jg
jns
pop
mov
fnop
jmp
fdivrl
cmp
inc
push
call
lahf
inc
mov
push
out
mov
pushl
loopne
mov
ret
imul
fldenv
testb
movsb
xor
sbb
fisttps
lods
inc
sbb
adc
and
sbbl
adc
sub
jmp
mov
xchg
lods
imul
mov
push
fidivl
and
add
push
and
mov
pop
sbb
movsl
daa
rolb
mov
call
mov
pop
cmp
negb
vcvtpd2dqx
clc
push
mov
or
incl
pop
xchg
push
cltd
test
dec
es
adc
xor
test
movsl
into
and
decl
cli
adc
inc
sbb
pop
aam
jg
push
adc
out
xchg
mov
ljmp
jne
shlb
mov
pop
call
addr16
mov
in
jbe
push
xlat
jns
pop
incl
loope
neg
lahf
fistpl
divb
test
jmp
test
ficoms
or
cli
adc
stos
adc
pushf
hlt
jg
jo
xor
jle
loope
aam
scas
ss
je
xor
cs
shlb
jmp
movsl
inc
popf
pop
pushl
push
lea
xchg
mov
sarl
cs
int3
or
enter
aaa
ja
push
cld
loop
mov
out
add
push
lcall
or
sub
stos
in
sbb
adc
fisubrs
orb
ljmp
mov
popf
in
scas
jne
ja
ja
push
leave
cmp
xchg
into
push
push
cwtl
pushl
dec
test
xlat
xchg
mov
sahf
and
pop
lret
ss
pop
and
test
add
dec
add
inc
cmp
leave
in
xchg
test
xchg
sbb
add
push
int
shll
xlat
mov
adc
pushl
mov
ret
aam
or
shr
jl
mov
push
mov
call
test
sbb
cmp
bound
inc
mov
test
or
cmpsb
mov
xor
pop
ljmp
ret
stos
insb
into
adc
mov
pop
rol
xchg
addr16
loopne
sub
sbb
ret
clc
and
ds
push
adc
cld
adc
mov
bound
fadd
cs
in
pop
add
ffree
xor
xchg
and
pop
jbe
inc
shlb
mov
hlt
push
xchg
sub
cltd
cli
je
xor
jge
dec
inc
inc
pop
pop
outsb
sbb
sbb
dec
into
enter
mov
movsb
mov
add
repnz
and
mov
in
mov
jmp
xor
push
in
ror
or
adc
notb
jno
test
test
mov
dec
cmp
jns
insb
fs
push
je
lea
jmp
cmp
add
jle
inc
bound
mov
sub
inc
cmpsb
xacquire
pop
bound
stos
mov
inc
adc
cmp
call
mov
sub
leave
push
sbb
xor
mov
adc
jg
aaa
outsb
xor
lret
push
xchg
xchg
ss
stc
dec
js
sub
push
xchg
mov
cmp
dec
leave
andl
pushl
jecxz
addb
lds
cmp
sti
push
adc
in
imul
stos
add
hlt
mov
mov
jmp
popa
loopne
shlb
mov
sub
jno
pop
xor
ret
fs
pop
fcmovne
movsl
enter
lcall
das
pop
add
push
mov
and
outsb
jl
ljmp
sbb
cmpsl
insb
mov
dec
insb
mov
clc
xchg
cmp
movsb
rorb
cmp
nop
xor
push
jno
mov
sbb
fmull
das
inc
movsb
push
push
or
lds
pop
lock
cmpsb
clc
jg
jl
xchg
mov
dec
mov
and
adc
cmp
incl
or
xor
jp
jne,pn
sbb
adc
cmp
incl
xchg
push
unpckhps
das
js
jnp
fcompl
pop
pop
sahf
rcrl
adc
sar
or
jo
mov
mov
mov
inc
cmpsl
into
call
and
dec
fisubrl
push
iret
inc
push
es
cmpsb
lea
mov
mov
push
mov
fdiv
mov
sub
push
les
insl
sahf
inc
jg
dec
mov
test
jne
aaa
mov
lea
push
push
inc
out
shrl
test
jmp
xchg
xor
shll
outsb
pusha
or
sub
or
ljmp
iret
mov
sub
sbb
jb
dec
scas
dec
xchg
cwtl
jge
xchg
xchg
fcomip
incl
mov
jl
cmp
cmp
inc
ja
push
incl
gs
sub
dec
dec
or
adc
ror
push
call
inc
pop
rcrl
test
adc
nop
test
and
push
sti
xchg
xchg
push
mov
das
cli
lods
push
je
gs
add
cmpsl
mov
mov
mov
ljmp
outsl
ret
rclb
sbb
adc
or
test
dec
push
test
pushl
mov
mov
lods
icebp
or
imul
sbb
inc
mov
call
or
daa
cmc
outsb
ss
cmp
test
lea
cs
dec
cmpsb
jb
incl
xorl
sub
lods
mov
lea
ret
pop
sbb
lcall
pushl
cli
in
test
adc
stc
sub
jne
jno
add
xchg
incl
xor
lcall
shr
inc
lret
pushf
rcll
in
add
pusha
out
add
std
jo
aas
jp
je
push
das
inc
add
inc
in
imul
mov
push
scas
adc
sub
jbe
repnz
std
adc
pushf
fiadds
lret
mov
sub
lods
lret
test
xor
lcall
sub
insb
dec
jg
dec
pop
fsubl
scas
js
ss
xchg
mov
pop
lds
call
sbb
mov
scas
lret
repz
jmp
jbe
mov
jmp
mov
and
xchg
mov
stc
loope
dec
lods
ljmp
icebp
lock
mov
pop
sub
incl
mulb
inc
xchg
pop
out
jae
int3
cli
aaa
nop
int3
pushf
insl
xor
push
dec
and
dec
xchg
popf
lods
sbb
sbb
mov
push
out
mov
bound
ret
or
xchg
ljmp
sbb
decl
inc
call
xlat
inc
int
fsubrp
add
into
cmp
lret
filds
inc
fdivrs
iret
jns
jmp
inc
ret
rclb
shr
push
jl
sbb
int3
xor
add
inc
mov
pop
aad
inc
add
les
sahf
adc
mov
pop
xchg
loopne
lds
cld
lods
pop
xchg
add
fildl
call
cwtl
loope
or
xchg
fmuls
int3
lcall
jg
mov
add
pop
lods
mov
mov
ret
pop
cmp
cld
ljmp
inc
pop
nop
or
rorl
pop
and
stos
test
in
push
cmp
call
jle
mov
push
outsl
push
loop
or
pop
or
lcall
sahf
data16
inc
ds
xchg
sub
sbb
push
shll
negb
jg
mov
in
fmull
jp
push
or
cmc
or
enter
pushl
les
sbb
and
push
inc
xchg
stc
sub
movsb
and
sti
pushl
cld
and
rcr
std
in
pop
iret
test
sub
test
sbb
cs
ljmp
push
fmul
and
add
xchg
mov
je
inc
jmp
jmp
int3
fstpt
xchg
test
xor
orl
pop
data16
pop
lcall
push
xchg
push
fldl
inc
std
mov
adc
psrld
dec
jg
decl
out
aaa
inc
loope
push
imul
inc
mov
ljmp
mov
movl
inc
ljmp
sbb
jg
call
mov
fmull
dec
sbb
sub
int
mov
pop
aas
mov
pop
dec
aam
js
pop
or
testl
and
pop
call
xor
sbb
leave
popa
pop
imul
dec
out
mov
aam
cmp
add
sbb
and
es
adc
xchg
lcall
jmp
sub
sub
sub
and
mov
out
nop
sbb
push
xorl
cmp
inc
call
jle
arpl
jge
adc
mov
push
std
push
or
jmp
stos
test
std
inc
les
push
enter
adc
sbb
loopne
lods
mov
xchg
hlt
jg
lock
popf
mov
js
push
dec
mov
das
lods
filds
test
nop
mov
jle
pop
loopne
icebp
pop
and
mov
aad
pushf
rorb
cld
movsb
sahf
scas
pushl
dec
sbb
dec
adc
mov
adc
push
pop
jmp
pop
ljmp
decl
mov
js
jne
lea
outsl
sub
incl
popa
filds
pop
dec
outsb
fisttps
xchg
mov
rolb
ljmp
in
lcall
lds
out
pushf
std
sbb
jmp
push
pop
add
xor
add
mov
popw
adc
xchg
inc
hlt
ljmp
push
pop
or
or
out
push
mov
aad
mov
jb
pop
jne
ljmp
mov
stos
cmc
and
cltd
test
cmp
adc
push
movsl
adc
nop
inc
mov
call
fmull
sbb
jns
or
nop
es
jge
mov
dec
add
call
push
imul
les
sub
cmc
mov
mov
fsts
xchg
jbe
jnp
psubq
push
mov
add
dec
pop
xor
enter
add
paddw
add
sbb
decl
inc
adc
pop
sbb
in
dec
push
shll
bound
adc
fwait
xchg
aad
out
clc
int
mov
inc
mov
imul
sub
aad
pusha
or
cltd
arpl
decl
lock
dec
ss
in
loop
mov
inc
loope
out
js
jne
mov
jmp
mov
pop
sub
std
mov
orb
push
xor
inc
bound
es
repnz
int
and
add
cmpsb
mov
out
dec
fimuls
mov
rolb
push
push
xchg
adc
insb
loopne
movsl
dec
push
mov
lcall
mov
ftst
pop
xchg
cmpsb
and
gs
push
dec
pop
enter
mov
mov
into
fsubl
fldl
pushf
or
rcrb
sub
cld
enter
add
fnop
imul
xor
sub
push
pop
xchg
add
es
pop
lods
and
ljmp
xchg
popf
repnz
stos
push
inc
jmp
jle
jno
and
std
popf
push
incl
mov
push
xor
in
xor
cltd
cmp
lcall
ljmp
popa
pop
mov
int
leave
into
lcall
pop
jp
xorl
xorl
push
push
into
pushf
int3
jno
push
outsb
bound
faddl
cld
into
and
or
lcall
shl
push
adc
rclb
dec
stos
movsl
mulb
dec
jno
xchg
dec
pop
push
shlb
call
cld
adc
mov
iret
cwtl
bound
sbb
pop
imul
outsb
inc
jl
jge
sub
popa
adc
popf
int
inc
dec
loopne
pop
pushf
enter
xchg
pop
in
cld
call
outsb
enter
ss
and
dec
shll
and
insb
xor
xchg
push
clc
stos
in
push
lds
cs
lcall
jmp
ja
mov
push
fdiv
xchg
loopne
sbbl
dec
adc
mov
pushl
faddp
inc
xchg
fwait
cmp
cmp
sahf
push
popa
inc
sbb
push
pop
lock
adc
out
push
addr16
call
and
cmpsl
cmp
mov
adc
popf
cmp
or
mov
aaa
or
sub
sbb
cs
out
clc
add
gs
mov
in
jle
xor
outsb
loop
mov
daa
jp
mov
and
cmc
ret
decl
fmulp
loop
xchg
test
mov
mov
ljmp
das
icebp
rolb
pop
fdiv
in
push
inc
lret
movsb
fstl
cwtl
jbe
test
inc
push
sar
subb
ljmp
push
xor
pusha
or
fldl
ljmp
incl
out
jae
out
add
in
out
xor
loopne
ret
stc
lcall
lcall
pop
test
sti
out
add
mov
mov
and
adc
test
dec
and
popf
push
rorb
pop
repnz
das
xchg
je
mov
jno
dec
das
sub
mov
std
xlat
fidivrl
and
out
test
adc
inc
xchg
lcall
sahf
or
movsl
cmpsb
outsl
xchg
mov
and
inc
mov
pop
inc
nop
jne
lret
pop
add
lcall
xor
rcl
xchg
or
ljmp
xchg
and
or
xchg
int3
sbb
add
inc
cmp
sbbl
xor
aas
cmp
add
in
adc
ret
adc
sub
mov
inc
in
push
cmp
sbb
jno
cmp
ficoml
push
out
mov
jle
fstpl
add
jno
subb
sahf
add
lods
dec
pushf
push
nop
mov
pop
fs
lcall
xor
outsb
xor
pusha
repnz
cmp
je
pop
push
aam
out
push
orb
shl
pop
arpl
mov
jb
xchg
shlb
call
mov
sub
mov
dec
or
in
je
sbb
dec
mov
push
sbb
mov
xor
jno
repnz
daa
andl
imul
das
pushl
inc
sbb
sub
test
fs
je
xchg
pusha
sbb
push
or
mov
dec
inc
dec
mov
mov
cli
cwtl
je
dec
xor
inc
sub
dec
push
pop
in
aam
adc
xchg
lea
jg
dec
xor
lret
les
and
mov
ror
imulb
mov
pop
fisttpll
push
ss
ss
mov
int
mov
or
pushl
mov
jge
pop
mov
pop
dec
clc
mov
add
lret
popf
add
xchg
decl
mov
pop
decl
out
ds
and
mov
rcrl
add
call
and
pop
dec
stos
dec
pop
and
addr16
hlt
dec
inc
ljmp
xor
pushf
bound
pushl
scas
sub
adc
mov
pop
push
push
pusha
hlt
je
push
dec
push
sbb
push
fwait
jb
sub
pop
pop
jbe
mov
jne
add
push
outsl
clc
adc
call
sbb
mov
sub
xor
ja
orl
iret
hlt
fisttps
and
mov
test
mov
xor
mov
lret
sbb
inc
lcall
mov
insb
nop
add
movsb
xchg
outsl
cltd
fbstp
pushf
lods
xchg
fs
and
leave
mov
ljmp
add
loop
inc
pop
add
inc
jmp
gs
repnz
dec
xchg
jmp
dec
push
mov
je
or
fisubrl
insb
and
or
hlt
decl
jno
ss
sub
stc
fnstenv
xchg
cmpsl
jne
jmp
incl
xorb
dec
cmp
mov
jg
push
xor
mov
movsb
jbe
ljmp
jo
out
xor
adc
mov
mov
decl
push
mov
mov
lods
push
jecxz
xor
pop
test
jbe
cs
sbb
dec
push
je
scas
and
dec
sti
jg
pushl
pop
mov
dec
js
repz
mov
aaa
cmp
and
jg
jg
dec
add
icebp
test
das
sbb
outsl
xor
mov
inc
sub
movb
addr16
js
push
mov
in
jg
push
int
mov
in
pop
mov
pop
xchg
or
icebp
push
xchg
iret
jne,pt
mov
inc
hlt
xchg
mov
xchg
and
cmpsb
jp
les
addr16
sbb
outsl
mov
enter
sub
aad
sti
fiaddl
pushf
cwtl
fimull
dec
xchg
jp
call
stc
xchg
popa
in
xchg
sub
subb
cmpl
mov
add
call
cmp
mov
out
jne
pop
dec
ret
pop
into
daa
popf
or
shlb
ljmp
push
fmuls
inc
insl
fs
add
mov
cmp
mov
aas
jge
inc
jnp
dec
mov
mov
mov
cmp
sub
adc
fisttps
lcall
push
loopne,pt
mov
adc
fbld
jle
adc
std
jecxz
mov
loope
std
in
jle
pop
ds
cmp
filds
call
inc
adc
lahf
ds
mov
mov
cmpsl
cmc
and
push
inc
push
addr16
adc
push
fwait
push
les
fsubl
call
and
das
jns
mov
push
mov
andl
jecxz
cmc
mov
dec
jle
je
dec
dec
repnz
shl
or
xor
mov
inc
mov
imul
lods
and
imul
xchg
test
jge
call
jne
fistpll
add
adc
inc
adc
dec
nop
pusha
inc
addl
mov
lcall
sbb
shll
inc
mov
cmp
hlt
clc
adc
adc
jbe
call
mov
adc
pop
bound
xchg
cmp
inc
mov
mov
loop
out
mov
jp
test
jmp
aam
and
push
test
orb
rcl
jmp
scas
bound
sti
mov
pop
scas
push
mov
inc
insb
jmp
mov
pop
jns
int
pop
sub
and
in
leave
xchg
les
mov
scas
pushl
in
sbb
jecxz
cmp
mov
js
in
lcall
iret
push
adc
dec
popf
or
out
fcoms
lds
aam
or
push
or
pop
mov
fstpl
int3
sub
jmp
lock
test
outsl
js
aaa
jo
aas
dec
dec
roll
pop
jno
xlat
mov
xchg
add
jp
pop
loope
jnp
mov
inc
sub
mov
pop
movsl
loope
inc
push
jl
push
out
leave
int
testl
popa
test
or
paddb
loope
int3
dec
xchg
dec
inc
or
push
adc
and
pusha
add
ret
mov
xor
les
cmp
add
adc
cmp
pusha
in
jo
test
inc
push
sub
cld
lcall
inc
daa
and
hlt
stos
dec
sub
jl
or
mov
rorb
ljmp
mov
jecxz
sub
shlb
shrb
jg
ljmp
cmpsl
in
or
cmp
sbb
ret
or
cmpsb
mov
shrl
jmp
or
mov
dec
dec
mov
stos
add
ljmp
cmp
loope
inc
dec
xor
mov
insl
push
lods
cmp
or
mov
sbb
popa
dec
repnz
pop
mov
decl
inc
sti
xchg
mov
xor
mov
cmp
test
push
es
cmpsb
insl
cltd
cli
decl
mov
xchg
or
mov
or
sub
cmpsb
add
aas
loopne
adc
das
cmp
jecxz
cmp
fwait
lcall
mov
jne
add
icebp
imul
std
je
bsr
pop
aas
fdivrl
sar
incl
dec
mov
popa
je
sbb
aaa
out
sbb
add
mov
pushf
mov
sbb
ljmp
adc
inc
xor
xchg
jno
adc
dec
push
pop
in
popa
push
cli
jmp
cltd
inc
jbe
in
dec
mov
repz
add
data16
cmp
jmp
mov
ficoml
mov
xor
fldt
lods
lds
xor
outsb
or
push
fwait
sysexit
rorb
lods
mov
out
imul
push
lret
loop
dec
mov
sub
fcompl
push
or
sbb
jg
xlat
inc
in
aam
mov
je
mov
lret
lods
sub
out
int
jmp
mov
and
xchg
pushf
sub
pop
pop
jne
insb
or
mov
jmp
xor
jnp
add
add
leave
jl
ja
inc
andl
testb
sub
orl
insb
jmp
jg
push
mov
and
dec
popa
cld
loopne
mov
sbb
call
mov
hlt
lret
fwait
clc
aas
out
ja
loopne
aad
mov
cmp
jno
mov
fdivr
decl
rolb
mov
aaa
mov
into
and
mov
call
adc
adc
xor
fistpll
cmp
nop
dec
ss
or
mov
ljmp
and
push
scas
push
xchg
push
cli
out
dec
rorl
outsl
bound
lods
test
dec
vmwrite
incl
mov
pop
mov
xchg
mov
inc
popf
jecxz
les
inc
rcl
jle
incl
xchg
push
sbb
or
xchg
inc
cmp
sub
sbb
and
and
jmp
sarb
dec
shl
test
insb
adc
pusha
adc
xor
jmp
or
enter
jbe
sbb
push
mov
mov
arpl
ljmp
int
sbb
add
push
ret
jns
test
fldt
jg
popa
std
jp
inc
dec
jle
inc
mov
inc
adc
out
lcall
fsubp
sbb
and
jl
arpl
hlt
push
into
lds
ss
icebp
stc
out
lcall
and
jnp
ret
sahf
test
mov
leave
ja
clc
jo
jl
add
ret
inc
mov
adc
popa
or
xchg
push
sub
cltd
add
jmp
cmpl
loopne
stc
test
or
inc
cmpb
lahf
inc
out
out
push
andl
mov
scas
mov
aas
push
cmp
xor
insb
test
or
mov
popf
sbb
xor
loopne
sub
fucom
push
pop
movsl
sub
push
push
push
or
decl
add
mov
dec
mov
lds
cli
call
loope
inc
stos
lds
in
pop
pop
mov
sub
bound
ljmp
test
sbb
pushf
dec
lcall
jg
call
sub
jnp
loop
fistps
inc
in
mov
mov
mov
or
movsb
pop
lret
int3
lock
mov
mov
cld
setae
dec
fimuls
add
jle
pop
call
icebp
lcall
inc
mov
sub
dec
out
and
out
loop
ljmp
xor
sbbl
sub
ljmp
dec
add
jb
lcall
aas
xor
sti
repz
add
jnp
gs
pop
std
ljmp
xor
ljmp
jl
mov
pop
pop
mov
cmpsl
mov
mov
and
pusha
push
and
filds
adc
adc
in
roll
test
ljmp
and
test
sbb
push
jp
or
addr16
stos
pop
xor
adc
call
cmp
cmp
fwait
mov
sub
sbb
pop
sub
stos
dec
in
sbb
fcoml
xor
adc
mov
lret
loopne
and
xor
in
push
cmp
incl
sub
mov
xor
call
aas
xor
dec
xchg
mov
jmp
test
xor
mov
jmp
pop
test
jno
cmp
push
adc
mov
imul
mov
inc
imul
push
pop
mov
ljmp
stos
mov
mov
pop
aas
cli
ret
xlat
jo
cmp
mov
jmp
fdivrl
sub
fs
cmp
insb
test
mov
mov
inc
les
incl
mov
mov
fidivrl
dec
popf
push
pop
push
aam
mov
scas
js
fiadds
sub
add
subb
stos
rcrb
mov
cwtl
pop
sahf
in
jg
addl
pushf
mov
mov
int
add
divb
pop
jmp
mov
dec
sbb
pop
insb
adc
or
cmpsb
out
push
lea
call
scas
pop
sub
xchg
fs
pushf
or
mov
mov
mov
xor
pop
clc
push
in
push
sbb
xchg
pushl
xchg
stc
jl
adc
data16
cmp
sbb
pop
lsl
jecxz
imul
pop
dec
mov
lcall
push
fsts
and
push
stos
pop
hlt
or
cmp
sub
xchg
add
movsb
push
dec
pop
lock
xor
mov
into
arpl
sub
shlw
ljmp
ja
negb
aas
dec
inc
pop
leave
xor
inc
xchg
ja
dec
pop
mov
dec
mov
stos
push
xchg
sbb
enter
mov
and
sbb
mov
and
mov
add
into
jle
push
pushf
mov
push
jnp
xor
mov
cmp
lcall
dec
mov
out
movsl
jp
mov
jbe
insl
ljmp
mov
js
adc
stc
ss
jge
sub
rcr
aaa
mov
inc
incl
mov
shlb
mov
mov
stc
rcll
sbb
ljmp
loope
stos
imul
cmpsl
cmp
xchg
int
popa
mov
sti
push
mov
mov
xor
pop
das
or
std
cmp
sbb
inc
fsubl
jg
add
xchg
into
ljmp
mov
inc
out
rcr
leave
sarl
fisttpl
js
xor
mov
scas
aam
jo
fsubrl
cmp
cmp
add
jmp
xor
inc
pop
add
negb
stos
mov
clc
in
les
incl
xchg
lea
or
mov
push
data16
mov
fldcw
or
insl
test
sbbb
dec
or
fisttpll
pop
imul
mov
fistps
std
incl
insb
or
and
imul
or
push
mov
sahf
out
and
enter
aaa
decl
inc
data16
inc
daa
and
arpl
mov
scas
or
and
or
xchg
insb
imul
imul
add
mov
out
in
or
pop
push
xchg
or
es
adc
jmp
push
leave
jge
sub
es
push
adc
mov
jecxz
jecxz
and
pusha
insb
into
in
ds
test
incl
popa
aam
into
lods
into
cwtl
jb
dec
gs
jbe
inc
pop
rcl
or
ljmp
test
hlt
push
test
push
add
or
loop
or
decl
pop
in
add
mov
popa
and
cld
out
mov
dec
fdivrp
mov
sub
int
fisttps
and
nop
in
adc
cmpsb
mov
loope
push
cli
test
jl
mov
outsl
decl
rcll
sub
and
sub
sahf
mov
pop
jmp
lret
arpl
outsl
and
ljmp
fcoms
dec
and
cmp
and
sub
inc
dec
ret
adc
fisubrs
cli
fisttps
scas
adc
leave
sbb
cmp
or
fdivrl
pop
je
outsl
push
lock
sbb
aaa
jl
sti
mov
xchg
ret
decl
movsl
add
jl
outsb
adc
mov
inc
jno
jp
xchg
cmp
out
stos
js
jmp
pop
jmp
xchg
lcall
mov
lods
jecxz
push
xor
xor
rcrb
push
adc
addr16
into
cmpb
test
aad
lret
in
mov
sub
in
aad
adc
incl
out
out
adc
push
jae
je
scas
clc
mov
adc
xchg
mov
arpl
sub
mov
lahf
lock
sbb
or
outsl
fisttpl
fstps
mov
ljmp
sbb
push
xor
shrl
mov
ljmp
fiadds
fdivrl
sub
iret
xor
jns
dec
mov
fisttps
das
cli
fistpll
push
xor
mov
std
out
xchg
cli
dec
lcall
jmp
imul
push
out
loope
push
mov
mov
cmp
arpl
jg
scas
push
cld
rorb
mov
and
xchg
imulb
push
inc
mov
or
cmp
lcall
or
jmp
mov
clc
lods
sub
and
int
incl
fsubl
stos
and
push
call
in
add
sub
cmc
cmp
call
mov
sub
test
inc
mov
mov
xor
pushl
cs
lods
inc
add
dec
es
jb
mov
loope
enter
cmp
enter
scas
fsubrl
adc
fstps
inc
rorb
insl
ficoml
inc
push
loopne
jbe
and
in
repz
insl
push
es
enter
or
jecxz
inc
int3
cmp
js
adc
hlt
sub
sub
decl
int3
adc
out
out
in
adc
fldt
repz
and
cmc
dec
push
mov
jmp
in
inc
fnsave
in
out
jle
mov
aam
fisubrs
scas
ds
incl
adc
xchg
push
mov
add
jmp
xor
into
and
loopne
mov
or
cli
pushl
insb
and
scas
daa
lods
sahf
inc
sub
daa
pushf
xchg
mov
repnz
es
ljmp
push
inc
pop
xchg
aas
jo
inc
jne
inc
jns
inc
imul
mov
mov
scas
mov
jg
lods
lret
mov
ljmp
push
or
xor
mov
call
xor
mov
jno
jecxz
dec
push
lock
jg
mov
xor
sbb
push
popf
out
jmp
add
xor
sub
cld
decl
push
dec
cltd
lods
dec
mov
sub
dec
mov
or
test
jg
lcall
mov
xchg
push
push
insl
ret
sub
cmc
mov
ljmp
call
pop
in
mov
adc
xchg
js
dec
je
test
dec
jmp
call
adc
mov
andb
dec
int
push
hlt
xchg
lock
notl
push
cmc
push
ljmp
mov
mov
push
push
mov
test
data16
mov
popa
int3
sub
xor
or
push
and
mov
jmp
in
mov
push
inc
xchg
mov
mov
call
lret
pop
clc
arpl
sub
pop
mov
cmp
lods
mov
dec
imul
outsl
xlat
xor
into
aas
mov
inc
pusha
cmp
scas
clc
cmp
lahf
push
fs
push
pop
inc
pop
in
jl
mov
loopne
add
xchg
pop
popa
int
mov
enter
jnp
mov
lcall
shll
inc
stos
int3
call
and
fists
or
mov
mov
lcall
push
aaa
xor
lea
ljmp
rorb
jb
dec
dec
push
rsm
push
jbe
jae
loope
push
push
pushl
movq
mov
and
mov
divl
and
jmp
sub
xor
incl
cmpb
and
outsl
dec
sub
mulb
test
sub
pop
add
pop
repnz
cmc
lcall
jg
cmp
scas
sub
mov
xor
movb
lcall
inc
push
int
fs
into
lcall
sbb
jo
out
pusha
mov
jmp
movl
push
imul
out
inc
js
xchg
pop
xchg
gs
pop
bound
movb
and
mov
fwait
xchg
fs
mov
insl
xor
jmp
lcall
xchg
jne
rorl
lea
mov
mov
adc
fimull
xor
or
fmulp
mov
jo
and
aaa
std
and
pop
pop
jae
pop
lea
dec
lds
xor
or
jmp
mov
and
out
and
or
inc
pop
stc
jl
cmp
fmuls
jmp
fdivr
lcall
mov
lcall
inc
push
jp
or
call
push
repnz
sbb
push
xchg
cmp
ds
jne
fdivl
and
repz
cmp
test
clc
pusha
adc
sti
scas
and
fdivl
jg
sub
add
inc
mov
lcall
imul
pop
or
pushf
imul
fbld
loop
icebp
adc
cmp
pop
lock
decl
jns
into
mov
mov
jmp
clc
sub
lret
xor
sub
pop
sub
aad
dec
dec
int
xchg
cli
js
cwtl
adc
cld
rorb
popf
or
cli
lods
insl
in
fildll
stc
push
sbb
jmp
in
es
cmpsb
out
cmpsb
mov
scas
mov
or
adc
xchg
cli
out
sub
cmp
stc
jb
movsl
cmp
incl
push
outsb
lret
or
loopne
call
imul
cltd
mov
incl
xchg
ljmp
jge
sbb
jne,pt
xor
js
test
cmpsl
add
outsl
clc
outsl
cmp
push
and
insl
push
rolb
adc
fnstenv
scas
mov
mov
mov
fs
add
pop
jne
jg
dec
cmc
aaa
leave
pop
aam
cs
xor
sbbl
inc
inc
mov
call
dec
fidivl
pop
lcall
in
cli
jmp
lods
sbb
and
cli
mov
aas
lret
sub
lcall
push
shrl
jbe
int
rorl
cmc
in
mov
jmp
push
iret
sbb
mov
jp
add
sti
and
fwait
jle
pop
imull
idiv
ljmp
mov
push
addr16
adc
sub
movsl
sbb
jge
insb
loope
stc
push
inc
aad
ljmp
inc
push
ds
dec
adc
inc
inc
jle
insl
std
pushl
xchg
ss
adc
jnp
sub
lahf
scas
clc
lcall
pop
lret
mov
cmp
jp
lds
movb
mov
push
ret
cltd
sub
lds
hlt
pop
pushf
mov
mov
lds
cmp
out
in
mov
clc
mov
lret
lret
stc
or
adc
aaa
sbb
and
lret
or
lahf
or
lahf
jl
jg
mov
lret
jp
loop
test
and
pusha
sbb
ljmp
pop
mov
mov
push
mov
ljmp
inc
and
dec
and
add
adc
add
stc
popa
ret
decl
clc
roll
add
adc
jge
ret
rorb
lods
shrb
fbld
mov
mov
adc
xor
iret
xchg
scas
cmpsl
inc
subb
lods
int
mov
push
decl
cmpsb
xchg
jge
ret
dec
sub
push
jbe
fcmove
push
notb
sub
pusha
and
pushl
stos
mov
dec
inc
sub
js
scas
cli
ljmp
push
movl
sbb
aaa
jnp
jnp
add
and
add
decl
and
jge
testl
mov
out
cmp
pushf
sub
pop
inc
dec
loope
scas
aaa
bound
mov
xchg
mov
cld
jb
addl
jle,pt
ds
in
incl
in
fisubs
push
sub
in
test
sbb
pusha
ljmp
fisttpl
jge
pop
std
aad
pop
daa
mov
lret
or
iret
fcomip
fisttps
add
and
add
jo
cmc
inc
roll
mov
ljmp
sarl
aaa
std
mov
push
mov
mov
or
pop
incl
xor
dec
cmp
rcl
and
jmp
xchg
cmp
or
mov
fwait
in
xchg
mov
mov
pushf
add
inc
cwtl
xchg
dec
dec
xlat
divl
scas
xchg
repnz
leave
mov
scas
xor
js
jne
ljmp
clc
decl
aas
push
test
popa
movsb
fsubrl
push
pop
inc
fwait
mov
aaa
mov
mov
std
fldl
mov
sbb
jmp
imul
fdivr
loopne
pop
insb
lds
addl
jo
mov
pop
adc
pusha
add
lcall
mov
pop
arpl
scas
aas
pusha
inc
push
in
sub
adc
or
sahf
sarb
xlat
fistps
mov
lahf
sub
sbb
pop
insb
pop
stos
add
ljmp
adc
xor
and
add
cmp
push
and
jle
pop
mov
lock
decl
pop
adc
jbe
jecxz
ffreep
mov
xchg
into
nop
lea
cmp
or
mov
aaa
cli
inc
mov
out
xchg
and
in
xor
jne
test
push
adc
push
fwait
dec
xorl
push
movsl
xchg
sub
xor
sbbl
in
xchg
movsb
adc
cmc
sub
mov
pop
es
push
loopne
test
or
mov
sub
out
test
ljmp
imull
unpckhps
cs
clc
incl
push
stc
pushf
adc
fdivs
rolb
dec
ret
shrl
inc
fiadds
scas
pop
jle
aaa
cmc
lcall
enter
add
adc
arpl
sbb
dec
in
shl
cld
stc
push
ret
push
push
mov
pop
xchg
cmp
out
in
fidivrl
mov
mov
sub
jl
mov
sahf
jnp
fsub
fstpt
imul
fstpt
jmp
sub
stos
or
xchg
xchg
loopne
mov
xor
inc
mov
subb
sbb
cwtl
and
mov
pop
repnz
mov
ret
scas
fcomps
push
scas
bound
decl
cmp
cwtl
and
mov
dec
fs
icebp
mov
xchg
adc
mov
lret
push
pop
dec
inc
adc
sub
cmc
xchg
push
pop
jmp
adc
inc
xor
icebp
push
and
gs
dec
sub
fisubrs
sahf
jp
lds
cltd
jl
mov
int3
pushf
andb
jmp
push
dec
push
sbb
xchg
test
fcos
incl
sbb
cltd
xchg
test
sub
mov
push
pop
jno
aaa
sbb
incl
cld
adc
add
sub
pop
mov
add
mov
cwtd
std
or
pushf
xchg
test
test
lds
insb
pusha
mov
ja
pushf
aad
sbb
clc
ret
jl
icebp
icebp
ret
add
decl
xor
fdivl
hlt
pop
adc
call
and
jg
inc
or
ljmp
push
push
das
mov
cmp
adc
pusha
sar
jl
ret
daa
jo
stc
es
mov
lock
push
cli
push
popa
test
mov
decl
sbb
xchg
jl
mov
add
mov
jg
xor
sub
int3
sbb
jae
and
cmp
jl
xchg
iret
pop
mov
sbb
and
cld
call
std
pushl
sub
jp
imul
add
push
dec
jmp
adc
pushl
cmp
and
popf
inc
mov
cmpsb
push
pop
fmull
add
sbb
jg
pop
fidivs
movsb
inc
lcall
pop
inc
sahf
fcomp
fdivrl
lcall
dec
sub
or
cmpsb
sbb
mov
push
push
push
jp
ljmp
cli
mov
pop
jb
out
jp
push
pop
fwait
jle
pop
cmpsl
mov
movsl
and
pop
inc
or
jne
pop
lods
fs
xchg
imul
rcll
stos
scas
pushf
jno
imul
decl
mov
jge
rclb
cli
jnp
push
adc
insl
mov
xor
movb
add
sbb
fidivrl
cld
jmp
imul
or
pop
jno
incl
ret
jbe
mov
ret
fistpll
in
jle
fistpl
stc
pop
pop
arpl
xchg
incl
and
pop
sbb
push
push
movsb
xor
repnz
jo
mov
xchg
lods
call
int
out
sbb
iret
mov
xor
in
xchg
pushl
or
xchg
enter
sbb
xchg
mov
jo
ss
xor
in
imul
call
dec
adc
xchg
mov
in
adc
ss
dec
dec
and
std
inc
daa
xor
lea
push
rcr
inc
mov
jg
push
mov
in
mov
cmpsl
xor
mov
fs
dec
ss
pop
popf
or
push
cmp
cmp
xor
insb
xor
xchg
mov
dec
inc
je
jmp
sub
xchg
popf
stos
dec
leave
cmp
in
into
push
call
sbb
and
adc
mov
add
mov
pop
cmc
or
mov
cmc
mov
stos
lcall
cmp
mov
xchg
lahf
fstpt
push
loop
sahf
imul
ret
pop
cld
push
mov
rolb
dec
jne
or
adc
jns
cmp
mov
add
pusha
cmp
pop
roll
and
jae
xchg
cmp
pop
inc
jno
repz
daa
ljmp
mov
dec
mov
mov
pusha
inc
fstpt
inc
decl
popf
call
cmp
xchg
xchg
sub
add
in
add
and
push
mov
call
les
and
jge
sbb
sbb
and
sbb
incb
pop
cmp
add
sbb
rcrl
je
cmpsb
cmp
dec
mov
cmp
decl
dec
and
add
aad
sub
ljmp
stos
push
cmc
test
incl
hlt
movsl
and
lahf
mov
push
ljmp
decl
popa
dec
jnp
sbb
xor
es
enter
stos
xchg
outsl
inc
dec
pop
cmp
pushl
lea
test
daa
mov
mov
fwait
fwait
hlt
push
mov
incl
pop
and
lds
jb
fadd
hlt
pop
inc
mov
cmp
lcall
and
push
xchg
test
or
adc
sar
sub
add
xchg
jb
add
push
or
xor
pop
add
pushl
stos
push
shrb
pop
loop,pt
les
repz
mov
movsl
stos
pop
mov
xchg
jbe
xchg
cmp
lock
push
aaa
fadds
push
lock
push
test
jb
test
cmp
cmp
bound
jecxz
call
subl
shlb
test
roll
loopne
cmc
sti
lcall
push
fdiv
sub
sub
sub
sub
loopne
sbb
sbb
clc
inc
sub
jo
decl
fcmovne
sub
add
add
add
xor
cld
jecxz
inc
popa
cmp
pop
and
rorb
inc
xchg
xchg
jae
mov
sbb
decl
outsb
push
mov
jle
inc
and
sub
dec
xchg
push
clc
ljmp
daa
cmpsl
xor
insl
jle
pop
fisttpl
pushl
sub
sbb
mov
sbb
imul
add
int
xor
push
pop
daa
mov
jl
sbb
es
nop
insb
jbe
mov
ljmp
int
push
xchg
fs
xlat
inc
adc
sub
test
fisubs
pop
pop
fcomip
decl
lret
inc
jp
jns
lods
insb
mov
lds
pushf
sbb
data16
mov
mov
fstps
cmp
xchg
pop
testb
aaa
fisttpl
jmp
inc
fsubrs
int3
pop
dec
or
loope
clc
jp
mov
pop
jae
inc
jmp
dec
outsl
xor
sub
dec
mov
test
rolb
arpl
adc
out
jg
and
pop
into
lods
xorl
adc
adc
pop
popf
push
imul
hlt
xchg
decl
fwait
push
pop
mov
in
loopne
iret
addl
hlt
mov
rorl
push
push
inc
clc
mov
add
push
sar
xchg
push
repz
xor
stos
loope
movsl
pushl
jge
inc
scas
stc
popl
pusha
in
sbb
push
ljmp
mov
sarl
xor
inc
sub
loop
fcompl
sbb
dec
lds
push
mov
xor
jae
cmc
in
mov
incl
cmpsl
ret
dec
xorb
mov
adc
jo
jae
repz
xor
cs
lcall
ret
mov
insb
mov
jecxz
pop
mov
jmp
cmp
push
xchg
mov
movsl
sbb
lods
or
or
inc
lret
dec
mov
or
pushl
scas
dec
inc
lds
cmpsb
jbe
push
xor
xor
cmp
adc
push
mov
or
ret
outsb
cmpl
fdiv
mov
jmp
cmp
xorl
pop
mov
sti
or
jbe
movnti
mov
and
daa
shrl
loope
hlt
push
ljmp
jge
sbb
xlat
out
hlt
lods
pop
pushl
pop
lds
jg
mov
bound
call
jg
push
arpl
addr16
sbb
bound
push
and
jecxz
sub
xor
and
cs
sbbl
mov
or
mov
add
add
nop
or
subl
rolb
xchg
outsl
decl
ret
jo
dec
xor
or
and
loopne
sub
add
cmp
pop
pushl
xchg
hlt
sub
adc
fs
adc
es
adc
ss
push
mov
decl
outsl
in
xorb
inc
xchg
test
push
arpl
mov
push
sub
data16
xchg
cmp
xacquire
int3
and
push
xchg
sub
pop
test
cmp
lods
push
dec
lcall
out
fdiv
add
icebp
ljmp
sbb
dec
enter
xchg
dec
sahf
and
pop
icebp
aad
mov
out
int3
mov
lret
mov
sub
fcomip
push
adc
aad
icebp
cmc
pop
in
add
cs
jge
pop
jno
out
lock
dec
fsubrs
daa
bound
addr16
daa
jno
pop
jb
add
jmp
jle
pop
jno
decl
add
sub
mov
notb
sbb
jge
clc
inc
scas
call
mov
es
hlt
mov
add
and
aas
pusha
sbb
testl
pushl
daa
and
pop
subl
lods
rorb
add
nop
nop
lahf
lock
jnp
sbb
int3
sub
push
loopne
mov
int
std
outsl
clc
pop
adcb
or
mov
jo
cmp
add
aaa
pop
xor
or
rolb
push
testl
lock
pusha
arpl
loop
fsubrp
cli
jg
and
bnd
mov
addr16
jae
aaa
mov
shlb
incl
test
addl
push
sbb
jl
add
je
in
call
cmc
inc
or
xchg
pushf
adc
jg
pop
xchg
aam
dec
hlt
adc
out
call
pop
data16
xchg
jb
sahf
pop
sub
adc
mov
and
jno
incl
leave
movsl
imul
pop
xchg
adc
mov
lcall
sar
call
mov
mov
lret
mov
sub
cmp
sbb
pop
mov
xor
shl
decl
loopne
jecxz
add
cmpsl
jge
xlat
popa
ljmp
push
mov
mov
clc
gs
push
daa
jl
addr16
vpshufd
jg
test
loop
jo
add
inc
push
xlat
outsl
out
jge
xchg
pushf
xlat
cwtl
dec
pop
hlt
dec
sarl
fmuls
pushl
and
mov
cmp
addl
mov
call
or
dec
xchg
sbb
push
loope
xchg
sbb
or
call
or
push
rorb
mull
das
cli
call
or
jo
sub
or
shl
add
add
jg
imul
sbb
ficoml
xor
dec
ret
sub
mov
add
cmp
test
push
dec
pop
jp
xchg
push
jl
jmp
imul
movsb
push
dec
es
and
daa
fwait
lds
gs
dec
and
ljmp
sub
js
mov
mov
cwtl
movsl
sbb
jb
notl
out
js
mov
decl
lcall
mov
sbb
mov
sbb
add
xorb
inc
addb
rcrb
and
hlt
adc
out
clc
or
and
imul
leave
out
shlb
mov
adc
sbbb
jo
inc
jg
add
or
or
sbb
call
in
das
enter
sti
out
out
fcmove
outsl
into
test
sbb
sahf
call
incl
in
enter
es
addb
and
dec
mov
or
shl
dec
mov
pusha
add
lcall
mov
test
or
add
add
pop
pop
and
sar
dec
shlb
add
shrb
inc
je
cmpsl
or
stos
test
adc
loope
inc
jns
fs
dec
call
std
xchg
ja
mov
push
insl
pop
inc
or
sub
daa
cs
daa
jg
incl
pop
xchg
outsl
clc
push
pop
sbb
arpl
xor
xchg
push
push
xchg
dec
pop
mov
sbb
lret
imul
insl
push
mov
cmpsl
cltd
mov
lcall
xchg
sar
push
push
popf
sub
xchg
jp
rcll
mov
cmp
dec
pop
sahf
sar
ljmp
rclb
mov
and
loope
int
test
repnz
call
push
mov
lock
dec
push
cmpb
stos
loopne
outsb
or
sbb
aam
decl
mov
lods
jp
or
jge
push
add
push
cltd
sbb
stc
pushf
out
cmpsb
bound
inc
stos
stc
imulb
jns
lcall
je
pop
xor
lods
mov
out
ljmp
addr16
and
push
shlb
jmp
mov
decl
or
or
scas
sub
push
aaa
sub
loop
dec
fs
loope
call
jbe
pop
dec
pushw
pop
mov
push
lcall
jne
mov
xchg
adc
stc
xchg
lea
cmp
adc
push
ja
and
pop
pop
inc
cli
movsl
outsb
enter
dec
push
arpl
jbe
das
cli
jmp
xor
sarb
jns
insb
jbe
jle
mov
jb
pop
mov
xchg
arpl
adc
push
arpl
push
bound
and
add
jmp
jnp
xchg
mov
sub
test
imull
rcrl
pop
insb
popa
dec
adc
sub
stos
mov
lcall
jnp
mov
add
mov
insb
shrl
sahf
cli
sub
cmpb
incl
mov
scas
sti
dec
adc
fistpl
ljmp
adc
lret
js
mov
mov
decl
mov
xchg
pop
pop
stos
aam
mov
decl
js
imul
pop
ret
test
xor
jne
incl
lock
orb
repz
sti
or
mov
fldcw
mov
shlb
in
pop
cmp
xor
mov
xchg
add
or
jmp
xchg
cmpb
xchg
mov
sbb
mov
es
xchg
xchg
mov
pusha
inc
jb
mov
sub
cmp
xor
and
mov
mov
pop
aam
push
outsl
cli
jp
pop
inc
jno
sub
lret
adc
jno
jb
lcall
jp
imul
mov
push
or
xchg
xchg
cmpsl
stos
ret
adc
xchg
xor
lcall
test
cmpsb
sti
cmp
inc
jl
add
inc
lcall
es
jnp
ljmp
enter
lcall
popa
orb
fisubrl
sbb
pop
push
imul
leave
loope
sub
leave
cmp
sarl
inc
insl
aam
and
in
sub
dec
movsl
mov
in
aam
ret
jge
push
nop
push
or
arpl
add
jg
xorb
or
mov
xor
mov
stos
nop
stos
pop
scas
or
adcb
push
and
add
pop
fisubl
push
xor
mov
or
movb
push
adc
mov
jo
pop
lea
sub
leave
mov
std
push
jl
int3
inc
call
ljmp
sub
call
pop
popa
inc
movsb
xorl
bound
mov
das
mov
sar
call
sub
pushf
insl
mov
insb
cmp
movsl
push
mov
lcall
cld
dec
mov
ljmp
shl
imul
mov
cmc
cmpsb
xchg
fs
clc
pop
mov
xchg
decl
bound
movsb
mov
xchg
dec
int
mov
cmp
mov
ljmp
imul
cmovo
test
out
push
insb
dec
lods
mov
mov
lcall
mov
pop
rcll
call
fstl
decl
dec
aam
popa
aad
outsb
aam
out
fisttps
test
pushf
loopne
call
pmaxsw
or
aam
loope,pt
int
popf
int3
and
mov
lock
mov
lock
pop
loop
mov
fsubl
addl
nop
or
jnp
cmp
add
and
add
std
incl
jecxz
xchg
sub
or
leave
addl
or
mov
pushl
ret
mov
outsl
repnz
pop
mov
lods
insl
cmp
pop
pop
dec
movsl
pop
leave
call
lods
int
mov
imul
aaa
xchg
pop
sub
xor
gs
mov
xor
push
sub
adc
insl
cmp
js
lret
enter
std
dec
xor
mov
imul
mov
mov
lcall
repz
and
mov
mov
lods
fsub
test
lods
push
pop
loopne
pushl
add
sbb
push
mov
or
push
in
call
std
sbb
aam
movsb
pop
in
out
sub
lret
push
dec
loope
push
loope
cmp
adc
aam
lods
aam
dec
in
lret
into
loopne
jle
xchg
lods
je
leave
mov
sbb
cmpb
or
mov
adc
scas
js
or
lahf
mov
js
jns
or
test
inc
jle
mov
or
nop
add
mov
dec
and
incl
icebp
stos
lods
push
inc
adc
jno
mov
adc
mov
in
test
push
lods
or
cmp
sub
pop
sub
ficoms
inc
jmp
mov
aad
pop
test
and
adc
xor
mov
cmc
call
test
mov
mov
test
xchg
jb
cs
mov
mov
popf
jmp
jmp
jle
cmp
popa
fisttpll
leave
add
mov
lcall
push
pop
lcall
stos
inc
lahf
sbb
insl
roll
sbb
pop
mov
sbb
call
mov
bound
insl
imul
rorl
filds
clc
sbb
fdivrp
loopne
cmpsb
outsl
cli
cmp
sti
inc
clc
mov
stc
dec
fildll
dec
sbb
ljmp
loopne
pushf
inc
frstor
sahf
movsl
dec
aam
fdivl
xor
out
cmp
mov
add
add
pop
test
and
jg
mov
and
jo
sti
pop
in
sub
mov
inc
add
xor
shlb
pop
xor
inc
clc
js
pop
mull
cwtl
mov
sbb
and
je
dec
les
adc
jg
lock
insb
shlb
ja
fidivrl
pop
rcll
pop
and
imul
aaa
addl
test
sub
pop
icebp
icebp
add
femms
inc
clc
scas
jo
and
jo
mov
ljmp
lock
ret
enter
mov
insb
pushf
sbb
icebp
out
clc
mov
push
xorl
pop
lcall
dec
cltd
sub
pop
or
mov
cld
movsl
call
xor
ljmp
mov
rorl
cmp
out
fwait
xor
cmc
call
or
in
push
mov
push
pop
xchg
and
cmpsb
lahf
and
call
xlat
lahf
jo
cmp
cmpb
xor
cld
cli
adc
jno
les
jmp
movsb
lahf
adc
xor
out
adc
xor
sub
repnz
lock
jmp
pop
jne
into
cmpsl
dec
stos
out
jp
imul
inc
out
or
xor
enter
aaa
in
test
dec
imul
sahf
cmp
incl
repz
cmpsl
negl
pop
ret
dec
cmp
out
dec
xlat
xor
lret
mov
mov
in
iret
sub
icebp
movsl
dec
mov
test
arpl
lock
jp
incl
add
lock
rclb
jl
mov
std
adc
add
das
add
ret
popf
adc
xor
inc
adc
ljmp
ljmp
push
lea
js
lds
imul
push
orl
pop
push
add
push
add
dec
ds
push
fcomip
fcomip
and
sbb
pop
push
mov
ljmp
in
push
dec
xor
sub
push
ret
inc
xor
or
inc
cmp
xor
xchg
pushl
test
cmp
fs
test
shrb
and
or
push
mov
lea
ljmp
ljmp
aaa
rolb
or
or
inc
in
stos
cmpsb
stos
loop
sub
adc
mov
cmp
das
pop
stos
cs
jg
push
xor
sbb
or
call
addb
add
fimull
sar
fsubrl
insb
test
lret
int3
scas
call
scas
test
in
ljmp
rolb
sahf
sti
sub
or
aam
cmp
sub
ja
incl
pop
mov
ret
test
adc
push
neg
add
sub
std
orb
and
out
bound
jp
cmp
sbb
loope
or
xchg
pop
mov
into
add
mov
aam
lcall
hlt
sub
or
pop
mov
pop
pop
inc
fimull
lret
les
pop
enter
sbb
jmp
xor
ds
sahf
sahf
pop
mov
fbld
sbb
mov
cmp
sub
mov
xor
jnp
addb
clc
into
adc
and
rcr
and
and
nopl
jb
daa
addr16
es
push
and
sub
das
and
sub
lea
cmp
shrb
pop
cwtl
mov
jb
dec
popf
or
lods
lods
lcall
lods
mov
popf
and
incl
or
lods
scas
xorb
call
stos
sub
xchg
xor
or
cmp
cli
in
and
loope
out
adc
pop
rol
sub
cmc
fdivrp
pop
fwait
mov
call
insl
dec
repnz
jmp
jo
lds
in
adcl
or
adc
push
xor
scas
fs
ljmp
hlt
add
outsl
add
jnp
jmp
and
add
jg
mov
sbb
add
xor
lock
inc
hlt
lcall
or
ret
and
or
mov
ljmp
andb
loope
insl
mov
xchg
cld
popa
vmwrite
inc
push
mov
addl
jmp
mov
xor
or
sbb
fsubl
ljmp
insb
dec
add
xchg
jbe
mov
or
lcall
addl
mov
ljmp
mov
bound
fcmovbe
and
pusha
sub
mov
gs
and
inc
xchg
nop
jmp
mov
stc
insl
and
xchg
daa
cmp
cs
sbb
mov
outsb
jb
mov
std
xor
xchg
loopne
es
mov
test
dec
inc
ret
icebp
incl
push
sub
dec
es
dec
test
daa
push
or
rcrl
and
mov
cld
jg
loopne
xchg
dec
sarb
shlb
aas
fimull
jb
jecxz
clc
or
fbstp
sbb
cmp
loopne
jle
int3
cmp
sub
mov
inc
and
jo
test
lcall
push
mov
fdivl
cmpsb
aaa
jmp
push
outsb
sub
shrd
adc
push
orb
pop
pop
or
mov
pop
mov
add
in
push
nop
jmp
popa
fdivrs
jmp
out
adc
es
das
dec
in
add
dec
test
decl
cmc
in
inc
jno
adc
push
mov
xchg
int3
mov
cmp
adc
jmp
mov
ja
pop
xchg
pop
add
dec
jns
pop
cltd
shlb
insb
jl
rcrb
dec
mov
movsl
or
cld
or
mov
test
and
fcmovnu
notb
test
add
jmp
inc
test
test
fs
leave
sbb
loope
repz
movsb
jmp
or
xchg
movsb
into
and
lret
or
xchg
mov
gs
in
into
mov
cs
ljmp
cmpsb
lock
and
mov
and
add
sahf
lcall
push
add
inc
jae
cltd
stc
xor
fidivrs
fbld
pop
xchg
sub
cmpsb
sti
push
jmp
or
call
jns
xor
test
jecxz
popl
and
pop
mov
pusha
enter
lock
stos
pop
sub
xchg
cmpsb
adc
lods
cmpsl
pop
test
sarb
adc
call
pop
fcomip
dec
push
push
nop
shrl
xchg
xor
push
dec
push
sbb
jno
adc
jmp
xor
lock
dec
outsb
lds
dec
mov
push
mov
lock
pushl
aad
insb
pop
pop
push
add
rorb
add
ljmp
mov
or
cld
fadd
cmp
cmp
and
test
jg
incl
jno
mov
adc
add
fld
outsl
sbb
xchg
pushf
movsb
and
ja
jmp
clc
xor
cmp
xchg
mov
js
xchg
xchg
pushl
xchg
bound
jns
sub
data16
aas
sub
jmp
out
xlat
test
xchg
cmp
in
test
or
xlat
js
stos
pusha
shl
pop
xlat
clc
or
sub
xor
popa
rcrb
lock
ljmp
push
mov
mov
pop
jne
xchg
imul
lds
jg
fldt
loope
mov
mov
hlt
xchg
fwait
mov
pop
cmpsb
testl
push
mov
cmpsl
insl
insb
pop
adc
mov
mov
sahf
shlb
popa
lods
out
jo
addr16
popf
push
mov
decl
or
dec
jbe
jno
mov
lock
sbb
mov
jb
mov
clc
xor
ror
mov
ror
outsl
sub
stos
sar
in
mov
push
mov
je
sub
leave
addr16
nop
ret
inc
addb
pop
cld
mov
mov
jb
xchg
inc
push
icebp
mov
dec
test
xchg
and
pop
sub
xor
notl
jecxz
inc
cmp
iret
mov
xor
aaa
push
lods
inc
mov
cmp
mov
imul
fwait
insb
dec
mov
fisttps
jg
xor
xor
add
js
xor
add
cltd
test
inc
xor
adc
cmp
or
lea
call
stos
mov
push
xor
mov
out
test
ja
in
pop
and
fdivs
dec
pushl
add
sub
lea
pop
sbbb
lods
pop
std
mov
mov
mov
test
push
jnp
je
out
insb
lods
xor
inc
mov
std
jg
divl
mov
add
and
fildl
into
and
inc
ljmp
pop
cmp
stc
mov
xchg
dec
and
pop
loopne
mov
addl
lret
xor
or
stos
mov
xor
pop
and
sbb
pushf
sub
sbb
xchg
push
pop
adc
lcall
dec
std
pop
xchg
and
or
nop
nop
xchg
xorl
insb
jg
decl
xor
fistl
ss
mov
inc
mov
push
pushf
into
jmp
pop
mov
adc
lods
orl
mov
scas
xor
xchg
sbb
lods
aad
movsl
pop
add
sub
adc
call
jecxz
scas
mov
cmp
adc
sbb
xchg
test
cmpl
and
orb
mov
add
inc
adcb
cmp
jecxz
ret
mov
and
repnz
xchg
scas
jg
lock
cli
mov
pusha
cmpl
xor
call
fldcw
call
mov
mov
imul
mov
jbe
ljmp
mov
arpl
fstps
fcomp
mov
dec
subl
sti
movsl
xlat
repnz
lea
push
negb
dec
mov
mov
mov
lcall
adc
fwait
sub
cmp
movb
add
ret
jg
sbbb
pop
stc
sub
rclb
daa
cmpl
xor
adc
test
mov
and
cmpl
mov
inc
enter
xchg
pushf
cmp
lret
lcall
inc
shll
pusha
cmpsl
lret
ljmp
sub
rorb
push
and
mov
ret
xchg
mov
inc
out
les
cmpsl
idiv
xor
mov
cmp
aas
add
push
xor
add
lcall
mov
lock
lcall
ret
int3
or
sarb
inc
dec
and
add
loopne
or
dec
les
cmp
xor
enter
dec
xchg
ss
cmc
pop
bound
mov
clc
push
test
int3
les
subb
sbbl
sbb
sahf
xor
mov
call
imul
pop
xchg
leave
repnz
pop
hlt
mov
loope
push
clc
push
sbb
inc
mov
rcrb
pop
or
mov
cmp
cmp
pop
pop
xor
jg
hlt
fs
add
sti
orl
xchg
pop
add
inc
mov
or
push
push
cmp
incl
or
inc
dec
ret
fisubrl
xor
stos
jbe
into
filds
loop
adc
decl
iret
dec
xchg
inc
mov
inc
repz
imul
repnz
mov
repz
jg
or
mov
mov
popf
mov
stos
fmuls
push
leave
dec
lods
push
mov
or
sub
cld
or
faddl
pop
scas
sub
aaa
subb
jecxz
imul
pop
incl
lret
stos
leave
jecxz
xchg
xor
mov
or
mov
push
imull
push
dec
call
jb
mov
inc
jp
cmpsl
lret
lret
mov
stos
cmp
mov
jecxz
roll
ja
scas
je
inc
jns
jl
aaa
and
jle
aas
cltd
loop
dec
dec
lcall
dec
in
enter
pop
cmp
mov
int
mov
adc
mov
inc
repz
and
xchg
scas
push
mov
loopne
or
sbb
pop
cwtl
int3
mov
cmc
push
jo
inc
xchg
or
adc
in
mov
sar
lcall
scas
lock
cmp
mov
pop
popf
pop
adc
or
inc
std
dec
inc
andl
cmp
inc
pushf
cltd
xor
mov
mov
enter
xchg
jg
pushl
adc
and
arpl
add
ss
movsb
leave
jmp
mov
mov
jg
jle
mov
or
pushl
mov
ja
ret
je
ss
mov
popf
test
push
filds
inc
cmp
jecxz
and
sahf
push
push
mov
incl
ss
mov
mov
xchg
lret
jbe
jg
push
cmpsb
dec
and
jno
les
inc
cmpsl
pop
cmpl
pusha
call
cmpsb
push
xchg
dec
mov
cmp
mov
jmp
and
test
stos
shl
icebp
decl
mov
and
mov
mov
add
add
fbstp
cmp
or
dec
test
add
pushl
dec
and
inc
sbb
shrb
sub
sub
sbb
iret
fwait
mov
mov
sub
lds
sbb
dec
adc
mov
sub
in
mov
sub
movsl
into
inc
xchg
xor
mov
call
adc
mov
push
in
pushl
xor
jne
mov
lods
scas
fsubrl
mov
call
nop
pushf
inc
in
push
cmp
aad
and
add
pusha
call
test
lahf
or
mov
or
xchg
insb
cmp
xor
sti
inc
mov
dec
ret
and
hlt
sbb
mov
inc
xchg
iret
cmpsb
test
mov
xchg
inc
adc
incl
mov
jnp
addb
inc
inc
mov
rcll
ds
lret
fsubrl
fwait
cld
push
xlat
jp
mov
stos
xchg
xchg
scas
mov
dec
stos
fcmovu
je
adc
fiaddl
xor
mov
jmp
adc
xchg
add
scas
js
pop
clc
dec
add
and
call
pop
sub
xchg
arpl
movsl
adc
cltd
int
mov
cmp
fstpt
fistpll
push
out
sub
mov
xchg
xchg
imul
cmp
or
test
xchg
mov
and
push
mov
jb
test
ljmp
aad
cmc
shr
push
stc
and
mov
movsb
mov
mov
mov
dec
out
lods
push
cmpl
adc
dec
sbb
inc
pop
fwait
dec
ljmp
inc
mov
pop
xchg
push
cmc
arpl
outsl
std
lahf
adc
mov
xchg
fcos
lcall
insl
pop
lods
dec
insb
shlb
pop
dec
jnp
das
inc
mov
pop
xor
ds
xchg
adc
leave
dec
aaa
mov
sub
fnstenv
cmp
jmp
and
inc
push
lret
scas
sbb
rclb
jmp
dec
jecxz
fiadds
pusha
xchg
cs
decl
jnp
mov
mov
add
addl
pop
out
dec
jg
fs
mov
test
clc
push
mov
xchg
repnz
or
decl
shll
xchg
push
mov
lcall
cmp
mov
mov
pushf
movsb
cmp
pop
push
adc
mov
and
dec
pushf
outsl
cmp
decl
int
into
adc
cmp
xchg
mov
xor
sbb
incl
sbb
or
out
xor
pop
add
leave
pop
fcoms
push
les
mov
ja
stos
adc
jns
or
lods
icebp
mov
ljmp
ret
ret
test
faddl
cs
out
fidivrl
repz
rcr
jae
shl
push
jecxz
sub
jne
jg
mov
mov
mov
out
arpl
stos
daa
fs
inc
mov
incl
jle
fdivs
and
xchg
xor
lds
sbbl
call
push
int3
arpl
std
ret
dec
cli
cld
sbb
int3
adc
adc
jmp
sahf
mov
stos
stos
push
cmc
dec
xchg
lcall
in
clc
pop
pop
nop
in
mov
inc
js
push
push
xchg
or
cmp
test
add
cmp
pop
lcall
pop
xor
mov
std
mov
mov
or
pop
inc
dec
fcmovb
fimull
call
sbb
int3
test
mov
out
jmp
shlb
or
or
decl
xchg
aad
jb
lods
mov
jecxz
cmp
mov
xchg
mov
sub
jmp
xchg
lock
adc
pop
fwait
sub
jge
mov
cmp
cli
xor
bound
dec
xchg
arpl
jmp
jp
out
inc
or
dec
lods
mov
leave
idiv
decl
fcomp
ret
adc
scas
push
xchg
ret
xor
imul
mov
aad
rorl
popf
jmp
mov
cmp
cmp
out
out
ss
fcoml
decl
xor
sbb
add
mov
lcall
xchg
lds
mov
jmp
enter
test
mov
or
push
data16
ljmp
xchg
jl
xchg
and
ficompl
cmpsl
xchg
pusha
insl
mov
jno
pushw
pushl
ret
mov
sarl
mov
hlt
mov
push
lret
movsl
xchg
push
enter
out
insb
test
rcll
mov
clc
movsl
mov
aad
xor
mov
mov
push
outsl
mov
rorb
loopne
sub
call
pop
lret
push
imul
jg
mov
mov
pop
adcl
mov
pop
inc
jb
in
sahf
mov
ljmp
jne
rcl
or
jmp
clc
fwait
push
pop
cs
les
sarl
sbb
ficomps
es
test
sbb
pop
in
loopne
dec
decl
pushl
js
pop
pop
mov
es
stc
in
xor
movb
pop
es
icebp
xor
bound
faddl
pop
add
push
ja
incl
cmpsb
jno
lock
pop
mov
xchg
sbb
aas
mov
cltd
add
sbb
adc
sbb
xchg
pop
fs
sar
js
fiadds
inc
clc
iret
out
int
into
and
popf
fiaddl
data16
and
sub
adc
decl
mov
pushf
rcrl
ljmp
data16
or
push
aaa
sbb
clc
or
out
push
or
fiadds
push
dec
mov
insb
push
popa
aad
enter
lea
call
into
mov
and
js
lret
sub
das
push
outsl
fldenv
lret
pop
test
das
pop
cltd
mov
cmp
filds
decb
mov
jae
pop
push
jg
dec
pop
cmc
incl
cld
pushl
mov
push
clc
cwtl
xchg
lcall
add
pop
in
xlat
mov
mov
pushl
jmp
mov
fists
or
sbb
jecxz
cmp
adc
or
fbld
ljmp
stos
push
daa
gs
or
and
ret
not
pop
ja
mov
sbb
ja
jg
sbb
dec
aad
mov
in
mov
das
bound
ljmp
int3
fistps
orl
inc
roll
inc
inc
std
inc
test
push
incb
enter
pop
mov
xchg
fcomip
incl
jb
sub
inc
insl
pop
mov
int3
or
ljmp
leave
and
les
or
mov
mov
mov
mov
pop
cmp
jg
popa
xchg
inc
pop
push
incl
push
sbb
sub
loopne
orb
xchg
aas
movsb
dec
add
in
cmp
pop
aas
xchg
loope
jmp
add
push
adc
inc
sub
pop
push
mov
jmp
mov
mov
push
insl
lret
adc
mov
test
mov
lcall
mov
movsb
push
daa
push
les
adc
inc
mov
pop
mov
call
inc
mov
dec
js
cs
sbbb
gs
sub
decl
sub
push
test
ret
mov
xchg
das
inc
cli
pop
xchg
sub
popa
jge
icebp
and
cmp
call
adc
lods
inc
ret
mov
jne
mov
dec
xor
call
push
jnp
outsl
loopne
adc
imul
out
pop
incl
cmc
inc
mov
push
fsubrl
jns
imul
mov
call
popf
pop
lea
xchg
adc
mov
insl
shlb
jnp
ljmp
incl
sarl
sub
or
mov
push
enter
mov
loope
jg
aam
inc
inc
mov
jmp
mov
add
or
stos
enter
ret
add
mov
jl
add
inc
sbb
mov
or
incl
aas
inc
sbb
addl
xchg
add
in
into
call
cmp
ljmp
movsl
xchg
popa
xchg
dec
divb
xchg
dec
jg
ljmp
fs
jns
push
push
rorl
inc
rcl
out
jp
add
inc
push
inc
outsl
dec
hlt
inc
push
mov
movsl
sub
sbb
test
ss
rcrb
movsl
push
arpl
inc
xchg
lcall
xor
add
lds
jnp
ss
stos
bound
sbb
decl
or
dec
mov
adc
push
js
data16
or
pop
movsl
dec
test
call
adc
xor
data16
adc
jge
fcoms
add
ljmp
adc
sbb
mov
or
jo
test
scas
sbb
inc
lret
jb
cmp
hlt
lcall
mov
xchg
or
lock
movsl
stos
cmpb
lods
push
js
mov
ljmp
in
sub
mov
mov
xchg
push
cs
decl
xlat
pop
jg
cs
subl
fs
inc
test
sbb
decl
and
xchg
neg
mov
das
scas
out
mov
int
inc
jns
test
add
lcall
orb
push
pop
pop
jo
xchg
push
xchg
ret
mov
arpl
ret
ljmp
fs
xor
cmp
outsb
push
insl
mov
jae
int
call
bound
ret
push
mov
pop
cmpsl
sbb
push
adc
inc
movsl
push
pop
jl
je
lahf
dec
ljmp
mov
inc
push
push
adcb
cmpsb
push
pop
jmp
aad
data16
ljmp
call
sub
jp
pop
pop
ror
cmp
ljmp
in
mov
pop
mov
aad
nop
cmp
jecxz
pop
test
nop
push
mov
push
lcall
jle
loope
pop
lret
pop
mov
lret
js
mov
int
pushf
outsl
aam
addr16
pop
cmp
das
mov
je
cld
repz
and
movsb
add
ljmp
mov
inc
mov
jl
fwait
pop
jnp
cwtl
cmp
sbb
jg
push
xor
scas
inc
arpl
add
adc
dec
mov
jl
movsb
and
or
sbb
ljmp
cltd
sbb
ljmp
pusha
sub
vmread
mov
push
jno
dec
push
and
flds
mov
sbb
pop
jl
lds
pop
jno
cmp
mov
outsb
stc
es
decl
jne
inc
out
mov
push
jl
shll
cmp
daa
lods
jmp
out
arpl
sub
and
lahf
or
mov
adc
call
adc
mov
pop
sbb
cmp
daa
shlb
jmp
jnp
sbb
stc
fstpl
repz
out
lds
xor
xor
pusha
sbb
js
mov
call
cld
adc
push
push
punpckhbw
mov
leave
lods
aas
adc
inc
mov
sbb
arpl
les
cltd
ret
leave
mov
inc
out
imul
in
cmp
imul
icebp
je
pop
fbld
add
shll
aas
mov
pop
sub
andb
sub
sbb
out
jmp
jb
cmp
xchg
iret
inc
les
adc
dec
inc
inc
pop
xchg
call
lcall
mov
adc
ljmp
fbld
inc
insb
inc
dec
lcall
push
aam
dec
dec
sbb
movsb
dec
lds
mov
pop
ffreep
mov
pushl
leave
les
cmpsl
movsb
ljmp
rorb
and
cltd
cld
test
mov
pop
aam
cld
add
jmp
lcall
lds
mov
lret
or
push
and
enter
jns
mov
call
cmpsl
cmp
xchg
lret
mov
push
sub
insl
sub
ljmp
or
data16
sbb
adc
inc
pop
dec
jno
lcall
daa
or
stc
push
pop
sbb
in
xchg
stc
int
jle
dec
add
cmpsb
cmp
pop
pop
pop
imul
push
mov
fistpl
jbe
pop
ja
dec
testb
rclb
jns
pushf
mov
test
subl
sbb
call
sub
ret
outsl
clc
mov
sbb
and
movsl
sub
popa
mov
xchg
adc
cmp
incl
test
test
fcmovnbe
jle
rcrl
lret
and
call
insb
cmpsl
mov
sbb
lahf
and
ret
and
jne
popa
jecxz
data16
decl
mov
push
dec
jae
lret
daa
in
call
mov
mov
jne
inc
loop
jg
sti
stos
jae
aad
int3
cmp
push
pop
ftst
icebp
or
pop
imul
aaa
jl
fstpl
jne
dec
mov
rdtsc
movsl
enter
aam
ret
pop
imul
sbb
pushf
or
test
jb
pop
mov
into
repnz
jl
nop
inc
ret
lea
dec
mov
cltd
rol
ret
sbb
int3
loopne
imulb
pushf
mov
in
lcall
aas
jle
inc
mov
int3
pushf
mov
out
shlb
pusha
mov
push
xor
dec
fdivrl
lock
decl
sub
cmp
sbb
xchg
daa
lret
in
dec
push
mov
decl
adc
xor
and
mov
insl
test
mov
dec
cmpsl
and
xchg
and
mov
or
cmc
in
popa
adc
sbb
push
add
mov
jg
addb
jo
pop
sbb
rcrl
lea
ja
xchg
dec
and
ret
in
dec
rcll
in
pop
cmp
es
jo
enter
sub
cmc
dec
out
lds
dec
push
inc
jl
aam
aad
lods
stos
in
mov
mov
lds
cwtl
mov
jle
push
scas
inc
icebp
repz
sarl
out
or
cmc
dec
xchg
int
sbbl
mov
test
xchg
mov
int3
mov
dec
sahf
clc
loop
mov
lret
cld
lcall
mov
or
jmp
repz
fsubs
pusha
ljmp
cmp
and
dec
jg
mov
dec
mov
xchg
decl
xchg
cmpsb
nop
sub
mov
mov
sbb
xchg
stc
repz
mov
rcrl
idiv
pop
icebp
fcmove
pop
cmp
call
insl
pusha
add
push
mov
jbe
xchg
in
andb
mov
outsb
jne
xchg
cltd
mov
or
push
and
push
dec
jae
cmp
add
imul
push
xchg
xor
jmp
sbb
mov
mov
push
in
test
mov
cmp
mov
pop
jle
mov
lods
jmp
mov
test
dec
gs
xchg
push
fnstsw
mov
or
inc
xor
call
notb
sahf
jnp
loopne
sub
cmp
inc
add
ljmp
jo
fdivr
sub
ss
xor
rorb
adc
jecxz
inc
ret
jg
mov
mov
ja
xchg
jl
ljmp
clc
lret
push
pop
movsb
mov
aad
fnsave
movl
clc
or
xchg
sub
int
or
mov
xchg
stos
add
fstpt
push
loopne
aam
mov
cmp
jmp
clc
loopne
mov
dec
xchg
adc
pop
pushf
sub
ror
fidivrs
mov
and
inc
enter
or
adc
decl
mov
mov
add
inc
dec
push
lock
shrb
mov
jmp
xchg
pop
test
pop
hlt
imul
mov
stc
sahf
call
popa
pop
mov
cmp
and
push
cmpsl
int
pop
mov
imul
xor
ljmp
imul
aam
mov
add
cli
enter
shll
pushf
std
cmc
mov
inc
add
inc
aam
icebp
or
shlb
add
sar
pushl
sub
mov
lea
adc
inc
push
loop
insl
lcall
add
in
xchg
jne
rorb
ljmp
mov
dec
rolb
xchg
test
dec
in
pusha
cmp
dec
sbb
pop
sub
lcall
add
push
pop
mov
ljmp
clc
inc
push
add
in
jecxz
push
mov
mov
fdivr
decl
in
roll
and
sahf
inc
or
out
push
test
stos
ss
pop
test
adc
aad
sub
jg
xchg
in
xchg
cmp
sub
push
dec
scas
add
in
dec
mov
andb
arpl
mov
pusha
mov
pop
jmp
sbb
mov
jno
popf
in
add
and
cld
ret
jb
inc
into
loope
call
out
sahf
movsl
add
inc
rcll
add
push
pushf
imul
das
out
incl
or
mov
push
movsl
icebp
xchg
push
int3
cmp
test
dec
push
lcall
inc
push
test
push
mov
and
mov
pop
mov
cmp
adc
sahf
cmp
jmp
cmp
pusha
adc
and
add
cmp
lea
dec
mov
add
movsl
data16
pop
call
pop
les
inc
jecxz
pop
in
add
add
push
out
pusha
cwtl
call
dec
pop
fs
movsl
jg
push
mov
jmp
loope
rorl
push
push
sub
sbb
xchg
insb
cld
lcall
fstpl
cmp
mov
rolb
jg
and
push
mov
inc
xchg
fsts
jns
pop
push
enter
arpl
movsb
xchg
lahf
insl
sar
add
ljmp
cltd
add
push
insb
loopne
ret
push
in
adc
sbb
or
insb
rcll
cmpsb
inc
rclb
fildll
add
loopne
xchg
mov
jno
rcrl
das
outsb
and
gs
inc
hlt
incl
fisubl
pushf
xchg
push
jae
xor
mov
ljmp
gs
sub
sbb
lock
dec
inc
xlat
or
mov
jmp
imul
int
jp
psubw
aam
xchg
mov
loop
push
dec
pop
call
rcrb
js
dec
in
test
fsubrs
and
ret
imul
shlb
jg
cmp
out
pop
cwtl
outsb
cwtl
mov
and
outsl
es
je
xchg
inc
loope
and
ljmp
in
insb
adc
mov
repz
dec
adc
pop
shlb
jne
movsb
ljmp
sbb
leave
addr16
outsb
dec
das
or
shrl
and
mov
lcall
addb
xorb
inc
lods
cmp
incl
cmp
push
add
shll
adcl
push
xchg
or
loop
fs
push
test
inc
mov
push
mov
mov
cmp
mov
sarb
sbb
xchg
mov
or
fidivl
outsb
jmp
insl
push
stos
jno
stos
jge
lods
in
pop
or
lock
push
mov
inc
addr16
push
adc
call
loope
dec
test
lock
push
inc
aam
lret
add
add
out
mov
jno
inc
mov
fwait
or
mov
orb
lahf
cmp
pop
pop
lcall
insb
add
scas
loopne
les
icebp
pop
inc
in
push
dec
and
ret
std
pushl
in
jmp
lock
xchg
divb
negl
pop
pop
cmp
in
push
imul
mov
sbb
mov
fidivrs
xor
mov
and
hlt
bound
jge
aam
mov
stos
pop
xor
clc
jmp
mov
lods
imul
xchg
xor
adc
call
xor
pop
xlat
or
mov
mov
push
mov
cmpsb
mov
and
int
into
imul
ljmp
and
xor
pushf
jl
fnstsw
lcall
pushf
iret
push
les
popa
ret
call
fcomps
cwtl
adc
mov
pop
in
lret
push
mov
adc
jmp
hlt
into
sub
test
lahf
ljmp
cld
pop
pop
cmp
idiv
ljmp
lock
sbb
leave
movsb
rcl
pop
cmc
pop
pop
jge
mov
sahf
repnz
push
mov
insb
push
sub
adc
xchg
mov
xchg
sbb
xchg
call
cmp
push
mov
mov
ljmp
cli
das
cld
mov
or
mov
mov
add
push
mov
out
and
fiadds
mov
scas
sbb
pop
test
int3
mov
pushf
mov
jbe
push
incb
dec
mov
push
xchg
popa
sbb
jmp
and
cmp
into
adc
cmp
lods
cmc
push
in
lcall
adc
pop
mov
call
dec
lock
hlt
dec
fists
dec
cld
xchg
out
ljmp
inc
push
sbb
xchg
push
in
adc
out
cli
repnz
outsb
jbe
mov
and
and
insb
popa
in
decl
ljmp
jmp
sbb
sub
jno
mov
mov
dec
nop
xlat
ljmp
jne
push
jp
sbb
sbb
mov
or
xchg
fisttpll
data16
fcmovnu
jg
cmpsl
xorb
mov
add
sub
fldcw
fs
cld
or
cli
call
aaa
es
popf
js
ret
dec
hlt
push
js
pop
xor
add
jmp
std
ljmp
xor
adc
cmc
decl
fbstp
xor
xor
inc
shll
sub
pop
incl
es
out
in
xor
pusha
or
adc
xchg
scas
int
dec
leave
cmp
cmp
stos
cmp
xchg
adc
decl
loope
repnz
mov
loop
pop
adc
add
mov
mov
dec
stos
fwait
out
fs
scas
cwtl
out
cmpsl
sub
lret
cmpsl
cmpsb
mov
div
sahf
cmc
pop
adc
xorb
decl
cmp
inc
push
mov
insb
out
jns
mov
test
xor
repnz
repnz
push
ljmp
ja
movsb
inc
dec
pop
xchg
int
push
int3
scas
mov
fnstenv
ljmp
rclb
loopne
test
jno
push
jo
adc
push
mov
pushl
ret
cmp
mov
stos
lahf
push
pop
or
imul
push
ja
das
lcall
xorl
sub
jae
xor
jecxz
lods
pusha
ja
outsb
inc
icebp
test
popa
inc
xlat
cwtl
incl
insb
mov
mov
adc
adc
add
cmp
sub
cmp
int
mov
lods
sub
scas
sbb
sar
ljmp
daa
fsubs
fwait
cwtl
scas
adc
and
mov
in
xchg
jg
jmp
sbb
out
fsubrp
adc
dec
sub
inc
bound
sub
pop
cmc
dec
push
in
repz
and
pop
and
daa
mov
pop
cld
push
and
push
sbb
repnz
lcall
mov
les
lret
mov
inc
dec
pop
jb
into
daa
and
cltd
movsl
incl
mov
sar
inc
insl
push
iret
dec
jbe
ja
push
push
jns
outsl
pushf
xchg
xor
ss
xchg
pop
loopne
push
push
sub
cs
xchg
or
call
jb
movsl
cmp
dec
insb
enter
inc
vmulps
mov
xor
loop
xor
std
jns
pop
xchg
push
xchg
mov
add
fcomps
xchg
xor
cs
add
jbe
mov
adc
mov
add
and
or
mov
push
es
mov
pop
lods
incl
clc
pop
movsb
jb
sbb
push
repnz
scas
mov
mov
and
jle
cmc
aad
hlt
repz
push
jl
adc
out
lods
mov
lcall
es
jno
cli
jno
out
add
in
pop
sti
into
jmp
fdivl
enter
pushl
fsts
scas
sahf
inc
fistl
jge
loopne
adc
enter
lret
cltd
and
mov
repz
sub
xor
insb
mov
mov
cmpsl
jnp
ljmp
inc
enter
pop
push
and
xchg
mov
jg
inc
inc
repz
loop
test
jmp
xor
mov
nop
mov
push
xchg
fprem
mov
aaa
fwait
inc
repz
ficoms
add
dec
lea
xor
fdivrl
cmpb
dec
mov
dec
sbb
call
rcrl
clc
fs
adcb
in
inc
aad
imul
decl
outsb
mov
mov
xchg
test
push
shlb
sbb
pop
je
repnz
incl
movsb
pop
movsl
lret
icebp
sbb
xor
inc
das
mov
insb
push
dec
cwtl
mov
xor
ljmp
dec
jb
cli
push
add
gs
daa
cmpsl
adc
movsb
lahf
sub
push
mov
decl
cmc
xor
mov
jb
jp
dec
jo
mov
jnp
insl
sahf
ret
inc
add
fucomip
mov
xchg
cmpl
popf
cli
mov
sar
jmp
call
jecxz
jae
pop
add
xor
mov
add
lcall
adc
mov
out
mov
sbb
cmp
lea
popl
js
test
pop
addl
cmp
xchg
sbb
sbb
outsl
inc
outsb
mov
out
out
xor
in
xor
jmp
lock
mov
fbstp
pop
lock
push
out
mov
cmp
js
inc
jle
adc
incl
cld
mov
icebp
out
sub
adc
les
pop
leave
xor
mov
call
fldenv
aaa
cs
sub
sub
sbb
das
jne
sub
ljmp
lock
sbb
loop
add
cli
inc
mov
imull
fadd
loope
incl
xchg
adc
jge
enter
inc
aas
inc
or
mov
dec
out
dec
int
pop
push
jge
jecxz
adc
mov
in
ljmp
mov
inc
dec
pushl
cmp
xor
addb
push
push
mov
or
loope
fs
inc
mov
call
mov
decl
push
xchg
push
dec
shlb
adc
gs
nop
andnps
mov
and
jl
ljmp
sub
aad
xor
rcrb
call
loopne
cmp
inc
push
add
mov
dec
mov
stc
push
mov
pop
arpl
or
and
outsb
push
scas
inc
cli
xchg
stos
pop
stos
dec
lcall
jne
or
mov
cmc
mov
push
dec
xchg
and
xor
sub
xor
jmp
lcall
pop
inc
jl
js
mov
dec
mov
cmp
ljmp
xchg
pop
sub
sbb
out
xlat
mov
es
sbb
aaa
sti
push
rcrb
sbb
jb
xor
jmp
pop
pop
pop
cli
je
call
jns
out
push
imul
repnz
ja
repnz
xchg
mov
dec
jecxz
lea
cmp
lahf
mov
clc
mov
xor
js
test
xchg
ljmp
dec
adc
add
jl
ret
jl
add
das
sbb
ret
or
push
cmp
jg
inc
adc
jo
xor
lds
push
cmp
push
sbb
xchg
sbb
sti
decl
orl
push
push
push
es
inc
fsubs
xor
lret
jg
test
mov
subl
pop
loope
xchg
adc
jae
movsb
dec
mov
mov
dec
add
nop
pop
push
and
mov
int3
push
sub
mov
xchg
call
ljmp
hlt
stos
inc
icebp
jb
sub
mov
bound
in
dec
mov
mov
mov
jmp
aaa
pop
fcomi
sub
leave
clc
push
stos
rol
shr
scas
mov
movsl
cmp
fcmovnu
add
scas
cmp
mov
lock
int3
pushl
lcall
insl
mov
xor
push
jecxz
pop
cld
clc
add
aaa
pop
mov
fs
dec
mov
cmp
cmpsb
sbb
arpl
in
mov
cmp
shl
mov
mov
fucomip
mov
mov
pop
sti
cmpsb
test
pop
sahf
arpl
mov
inc
inc
push
xor
and
mov
mov
sbb
xor
or
pop
inc
xor
sub
ret
nop
dec
xor
arpl
sub
test
sbb
call
repnz
sub
mov
cmp
mov
adc
and
call
test
cmp
inc
stos
sub
stos
imul
mov
ret
dec
dec
movsb
pusha
inc
push
mov
test
lcall
pop
movsb
iret
inc
adc
push
mov
rclb
outsb
fwait
sbb
lcall
in
mov
sbb
push
push
orb
mov
sub
xor
push
aas
mov
xor
sar
ljmp
mov
por
dec
mov
mov
mov
xor
jg
push
pop
fsts
dec
mov
aaa
hlt
enter
inc
test
jbe
jne
sub
out
out
in
pop
call
int
mov
fucomp
lods
sti
scas
lcall
mov
push
cmp
cmp
xchg
add
jmp
xor
cmp
idiv
bsf
aas
add
movsl
xor
add
or
out
xchg
in
inc
and
mov
adc
inc
sbb
xorl
shrl
push
mov
shl
inc
movsb
mov
insb
subl
ficompl
cwtl
cmpsl
mov
loopne
jo
call
cld
pushl
imul
mov
rorl
mov
pushl
jmp
call
andl
and
mov
or
scas
mov
add
push
add
loopne
cmp
sbb
incb
jg
xor
dec
dec
outsb
cmc
mov
and
pop
mov
mov
sub
jmp
push
es
sub
xchg
xchg
dec
in
sub
jns
dec
jmp
xchg
cmp
lods
cmpsb
jle
mov
mov
lcall
jbe
clc
icebp
inc
ss
dec
jl
aaa
das
jns
jmp
popf
hlt
in
nop
mov
cmp
ljmp
test
je
xor
fsubp
dec
repz
cmp
mov
xor
jl
sbb
jnp
cmpsl
lods
cld
inc
int3
jle
bound
push
ja
incl
cmp
aas
cmp
aas
or
test
adc
or
jae
sub
lea
pause
in
mov
push
inc
jg
inc
sbb
lret
sahf
lret
pushl
loope
jo
shrl
xchg
lahf
mov
enter
mov
jp
cwtl
pop
push
xchg
movsl
adc
inc
pushf
dec
lcall
adc
adc
and
sub
sub
jnp
fcompl
push
ljmp
add
repnz
and
lds
mov
in
mov
shr
in
jns
lds
test
into
add
call
and
das
xor
fcmovnu
dec
mov
shrb
xor
insl
fwait
or
and
lcall
mov
adc
cmp
sub
xchg
imull
mov
decl
ss
lods
pop
jne
out
pushf
stos
pop
in
dec
sub
das
cli
lcall
out
inc
cmp
popa
and
jbe,pn
mov
push
gs
cwtl
jmp
lcall
sub
xlat
mov
imul
push
sar
sahf
out
xchg
scas
jg
mov
addr16
in
movsb
aam
stos
mov
in
loope
inc
roll
scas
xor
jg
mov
or
mov
shlb
clc
ljmp
sahf
rol
adc
fcompl
enter
jbe
movsl
jne
push
and
sbb
dec
add
cmpsl
cmp
addr16
scas
cwtl
les
shl
dec
adc
pop
xchg
push
jnp
cs
nop
mov
movsb
rorl
xor
sub
incl
mov
mov
cmp
and
mov
sbb
shrb
xor
pop
xor
push
in
xchg
vmovntps
pop
lret
jmp
popa
imul
mov
frstor
into
repz
daa
fdivrs
cmp
jae
ficomps
push
pop
mov
insb
lock
pop
or
ja
pushl
sub
pop
nop
xor
mov
call
add
pushl
nop
push
je
fists
in
add
xchg
lea
test
mov
rcr
pushf
mov
sbb
jmp
dec
jl
xor
stos
or
ss
push
add
call
inc
sub
cmp
insb
aaa
int3
loopne
cmp
hlt
xor
loop
cmp
movsb
jbe
cmp
imul
roll
arpl
sbb
cld
inc
mov
sub
xor
mov
or
sub
jmp
sbb
popf
lods
push
sub
push
std
dec
push
test
fadd
pop
test
cmpsb
push
xchg
xorb
and
pushl
jbe
scas
cltd
iret
jns
arpl
hlt
adc
pop
push
jmp
xchg
and
popf
push
shl
leave
incl
call
xchg
leave
add
stc
push
mov
adcl
sar
pushl
dec
scas
mov
jge
pop
int
push
xchg
mov
sbb
test
incl
pop
imul
aaa
add
mov
addr16
cmp
iret
push
push
scas
decl
inc
daa
lcall
outsl
jg
ret
lea
mov
addr16
dec
pop
sub
ljmp
jmp
xchg
mov
adc
dec
mov
mov
xchg
inc
dec
jmp
or
fucomp
fists
pushl
orl
cmpsl
pop
mov
int3
adc
sbb
aam
or
test
jbe
mov
or
mov
push
mov
dec
movsl
dec
inc
or
gs
test
dec
xchg
jnp
in
pop
pop
cld
pushl
ret
stos
pop
icebp
dec
jmp
cmpsb
ja
call
mov
loope
call
mov
xlat
fsubl
mulb
xchg
popa
sarl
std
jp
cmp
hlt
cmpl
push
lea
das
sub
push
jge
mov
aas
jae
dec
ljmp
in
xchg
mov
decl
push
pop
xor
push
or
bswap
aas
repz
jl
mov
rclb
ja
clc
jmp
aam
inc
mov
and
mov
jmp
inc
xchg
mov
int
xor
or
sub
jmp
dec
jo
dec
in
jno
stos
popf
push
sub
cs
fnstcw
inc
cmpsb
mov
test
pop
dec
cmpsb
mov
ljmp
dec
inc
aam
gs
mov
dec
call
or
push
mov
mov
xlat
push
cmpsl
push
addr16
or
mov
mov
jmp
mov
sub
sub
inc
inc
cs
jge
inc
jge
insl
loope
gs
nop
and
ljmp
jp
scas
repnz
scas
add
cmp
lods
lods
mov
scas
add
xchg
cmp
inc
ljmp
jge
inc
stc
xchg
scas
les
arpl
popw
inc
cmp
jecxz
lcall
bound
out
adc
add
push
fwait
enter
in
in
in
push
out
inc
pusha
inc
inc
pop
ljmp
mov
push
jnp
lahf
push
mov
loopne
jle
and
scas
add
imul
popf
incl
mov
sub
jle
lahf
push
mov
xor
adc
mov
ljmp
dec
sahf
fisubs
pop
dec
push
aam
mov
mov
test
sbb
sarb
decb
addr16
mov
and
stos
mov
int3
icebp
mov
sub
cs
sar
ljmp
loop
add
inc
mov
rcr
stos
add
jno
cmpsb
stos
mov
into
mov
fmull
pop
sbb
fsubs
xor
mov
ja
int
out
lods
jbe
enter
in
sti
call
jns
mov
jmp
push
leave
mov
pop
mov
ja
add
int3
mov
int3
jecxz
addb
dec
sub
dec
jecxz
dec
sub
adc
jle
adc
inc
sbb
arpl
jmp
in
push
cmp
push
sub
and
imul
adc
das
mov
icebp
incl
bound
pop
test
je
mov
call
jecxz
mov
lea
repnz
out
pop
inc
loopne
cs
decl
mov
xchg
insb
lea
std
ljmp
xchg
aad
cmpb
and
das
cmpsb
jo
movsb
rorb
test
add
call
mov
mov
and
loop
mov
cs
dec
push
inc
mov
testb
add
fs
sub
sbb
push
or
push
push
xor
daa
sub
call
stos
and
dec
lods
mov
cmp
ja
ljmp
fucomip
pop
lret
iret
push
cmp
jl
cmp
and
xchg
jns
cmp
outsb
cmp
clc
cli
shlb
outsl
pmaddwd
popa
data16
dec
insb
adc
add
jmp
jecxz
out
jg
dec
jecxz
addr16
sub
sub
xor
icebp
ljmp
andb
sub
jp
pushf
je
or
std
je
mov
scas
push
xchg
push
mov
and
call
mov
inc
add
cmp
push
mov
ljmp
mov
or
call
movsb
aaa
lods
movsb
ficoms
cmc
in
out
xor
movsb
call
sbb
mov
sbb
out
and
decl
lock
xchg
int
jb
sub
les
dec
fs
mov
or
cmp
xor
sub
aaa
mov
xchg
mov
testb
scas
push
negb
fidivs
xor
dec
and
xchg
sarb
loope
xchg
mov
mov
pushl
and
testb
pushf
lods
pusha
xchg
imul
cmpsb
jmp
xor
adc
stc
inc
outsb
fnsave
xor
mov
or
decl
jmp
mov
or
push
cmp
paddw
hlt
loopne
mov
and
jp
lock
incb
jle
test
dec
test
subb
inc
loopne
dec
in
sub
out
icebp
aad
adc
dec
mov
fbld
push
sbb
mov
or
sub
dec
cmpsl
push
lods
in
daa
ret
add
imul
imul
mov
or
in
xchg
mov
ljmp
nop
je
mov
or
jg
mov
inc
push
jb
jb
dec
jb
call
dec
loop
jge
mov
ret
outsb
enter
inc
incl
xor
add
lods
movsl
cmp
adc
lods
mov
dec
fbld
or
decl
lock
test
pop
inc
cmp
dec
mov
xchg
dec
cmp
or
jg
jmp
arpl
inc
mov
inc
daa
mov
xchg
xor
jge
push
adc
leave
daa
jg
call
imul
mov
inc
push
dec
push
cmpsb
inc
enter
ljmp
rorl
mov
xchg
mov
dec
and
or
lcall
inc
xchg
or
icebp
add
gs
dec
nop
shrl
loope
pop
sub
dec
mov
mov
decl
push
xchg
lea
adc
movsb
rolb
imul
hlt
ljmp
xchg
dec
add
adc
cli
sub
adc
xor
sub
pushl
enter
sbb
cs
add
mov
stos
cmpsb
ret
push
je
es
jg
xchg
and
push
dec
jns
pop
pop
daa
hlt
mov
or
sub
loopne
enter
jmp
loopne
and
dec
or
dec
cmp
push
lods
js
das
push
xchg
aaa
and
cmc
and
jmp
jle
out
es
repnz
xor
xchg
jbe
and
sti
ds
int
test
pop
push
pop
cmovb
adc
sub
xlat
out
cmpsl
ds
popa
lret
mov
repnz
mov
test
adc
add
push
in
shl
outsl
push
out
sub
pusha
or
sub
inc
nop
jo
pop
aam
pop
xlat
add
mov
loop
push
std
ljmp
insl
ret
out
push
push
cwtl
sbb
sbb
inc
push
cmp
outsl
inc
adc
ja
xchg
ret
divb
enter
cs
lods
adc
xlat
es
call
icebp
add
push
sbb
mov
jl
add
mov
xor
push
mov
add
out
aaa
dec
fnstenv
jl
mov
add
das
xor
into
sub
mov
cmp
push
cmp
incl
pushf
ja
out
ss
sbb
decl
arpl
stos
mov
jo
ljmp
dec
ds
sub
out
and
out
jle
push
gs
stos
jle
jno
xor
sti
dec
lret
into
das
sar
clc
xlat
sub
leave
dec
data16
sbb
mov
pop
inc
xchg
sub
in
push
fs
orb
push
lcall
lea
mov
lods
cmc
es
push
mov
sub
mov
ljmp
push
js
insb
xor
xchg
rcll
out
sbbl
pushf
xor
incl
pop
sub
cs
dec
xchg
jb
xchg
hlt
sub
jmp
arpl
ss
mov
dec
jb
out
lock
mov
push
shlb
jb
jo
dec
pop
or
aaa
nop
in
lds
stos
cmp
lcall
inc
or
xchg
cmp
pop
fadds
mov
movsb
jg
xchg
xor
jmp
cmp
in
xor
xor
adcb
inc
jle
data16
clc
repz
dec
mov
push
movsl
aas
shrl
mov
dec
js
test
repz
stos
pop
cmc
data16
mov
push
inc
sub
ljmp
mov
lahf
dec
sub
testb
xchg
and
daa
popa
std
mov
mov
xor
or
mov
xchg
or
xor
xchg
jno
aas
lods
push
into
notb
dec
jno
cli
dec
jmp
outsl
mov
loop
mov
xor
mov
shl
repnz
pop
clc
pushl
inc
mov
fld1
mov
call
ja
cltd
lods
jns
jo
push
jne
jecxz
pop
mov
negb
aam
dec
mov
pop
mov
int
jp
inc
cmp
nop
leave
arpl
xchg
pop
sbb
movhps
mov
test
lods
adc
jg
mov
adc
adc
arpl
push
dec
les
test
jbe
inc
dec
xchg
push
scas
sarl
insl
orl
jmp
stos
sub
out
jbe
outsb
push
or
ret
aam
jg
add
sti
push
ljmp
sahf
mov
sub
mov
cmp
lea
in
mov
sbb
jl
pop
adcb
fildll
sbb
adc
sub
call
dec
fsubrs
je
jo
cmp
cmp
out
mov
pop
fcmovnb
bound
fmuls
and
incl
dec
fmull
mov
ljmp
in
sub
dec
mov
cwtl
push
arpl
es
xlat
and
stos
mov
mov
ljmp
mov
aam
jne
jnp
cwtl
pop
loop
mov
jne
mov
push
cmp
or
cmp
data16
and
loop
jbe
test
mov
cld
ljmp
inc
es
cltd
sub
es
in
mov
incl
push
mov
xor
sbb
stos
arpl
test
mov
jmp
outsb
lods
dec
rolb
xchg
pop
js
pop
cltd
xorb
rorb
stos
loope
mov
mov
test
jp
dec
cwtl
mov
xchg
inc
sub
test
outsl
dec
incl
dec
push
push
movsl
xchg
push
pop
insl
jo
pop
xchg
scas
jno
add
imul
ljmp
push
sub
mov
xchg
insl
sahf
pop
mov
icebp
mov
push
sub
inc
push
mov
fwait
ret
aam
and
jb
add
xor
mov
cmp
imul
inc
jg
jne
mov
xchg
enter
and
in
dec
cmp
popa
jns
ret
gs
incl
leave
pop
jecxz
pop
outsb
xor
aaa
addr16
inc
and
jg
jmp
xor
sub
test
int3
movsb
cltd
hlt
jae
lret
in
adc
xchg
lcall
adc
sbb
push
lahf
scas
cmpl
or
pop
pop
ficoml
orl
xchg
test
outsb
jp
ljmp
push
push
sbb
xchg
dec
nop
xor
cwtl
rcrb
dec
lock
imul
test
pop
call
jno
lds
pusha
or
jmp
call
addr16
dec
call
movsl
insb
xchg
or
sbb
lcall
push
xor
push
loope
mov
out
pop
adc
inc
insb
jmp
std
sbbl
lds
mov
fisttps
or
ficompl
xlat
cmp
sti
dec
jp
and
daa
mov
add
scas
or
int
xchg
push
out
cmpsl
into
adc
lock
mov
ljmp
jge
mov
xor
adc
imull
xor
mov
jb
xor
xchg
sub
xchg
addr16
xchg
popf
push
andl
pop
out
stc
int
dec
and
xchg
push
mov
add
rorb
test
data16
mov
add
movsl
xchg
cmp
incl
sbb
and
imul
push
nopl
mov
adc
push
or
cmp
ds
mov
or
nop
mov
and
push
cmp
in
dec
xor
inc
mov
sbb
mov
bound
sbb
push
inc
test
xor
jg
sub
loope
xchg
sub
push
fdivr
mov
roll
repz
inc
test
jmp
push
popa
fisttpll
pop
jge
rcrb
fnstenv
repz
ljmp
mov
mov
jae
sahf
xchg
lret
mov
lcall
pop
lea
ret
jg
decl
pusha
ret
push
xlat
cmp
pusha
jle
add
pushf
xchg
sub
mov
sbb
stos
decl
mov
pushl
in
fsubs
das
rcrb
scas
mov
or
cmp
rolb
push
jle
jbe
loopne
xchg
add
adc
out
pushf
pop
js
mov
test
cmp
call
cld
imul
into
popa
bound
jl
sub
jle
add
mov
lahf
dec
pop
test
cmp
pop
inc
shl
xor
iret
adc
mov
les
call
or
repnz
add
jnp
mov
filds
loop
pop
sarl
adc
jnp
cmp
dec
push
lea
mov
push
sbb
popf
movsb
bound
push
sbb
hlt
xchg
lea
inc
lods
lock
or
push
nop
jmp
sbb
adc
decl
pop
loop
sbb
and
dec
pop
mov
es
jecxz
dec
adc
out
aam
jle
bound
and
mov
imul
inc
push
or
or
imul
pop
js
negb
pop
jp
mov
pop
lea
xlat
outsl
lcall
push
lret
mov
mov
fwait
sbb
test
sbb
lret
add
jmp
inc
mov
lods
pop
vorps
cmpsl
mov
push
cli
ja
xorl
cld
pop
ljmp
cmp
sbb
sub
sub
cs
jge
fcoml
mov
mov
pop
mov
pop
pusha
enter
jmp
cmp
decl
dec
cli
jo
and
mov
adc
pop
pop
decl
jns
and
push
mov
inc
daa
ret
mov
lcall
jbe
push
inc
jmp
es
xor
mov
int3
aas
jns
adc
aaa
jp
lcall
in
inc
imul
pushl
cli
mov
add
push
daa
leave
movsb
mov
ljmp
fsts
inc
cld
cmp
nop
lcall
cmc
fs
or
movsb
jb
push
je
xchg
ss
push
cli
push
aad
lods
xor
bound
inc
pop
fs
fidivrl
push
xchg
pop
mov
pop
pusha
xchg
insl
test
mov
in
outsl
adc
stos
mov
fisttpl
pop
loopne
xchg
push
or
js
or
insl
ret
sahf
ss
insl
int3
push
mov
inc
fsubr
enter
lcall
lods
mov
jbe
lods
jbe
pop
cmpsl
lods
mov
mov
repz
std
jo
adc
cld
mov
in
scas
and
mov
and
movsl
mov
cmp
adc
mov
xor
sbb
roll
dec
mov
sbb
sub
jp
mov
dec
add
mov
les
inc
cmp
cwtl
sub
inc
sti
nop
xchg
call
mov
sub
dec
push
add
mov
dec
jmp
aad
xor
aaa
and
decl
les
xchg
dec
jmp
pop
jns
ret
movsb
andl
ret
in
gs
jg
jnp
or
mov
adc
dec
int
xchg
inc
aaa
inc
test
jmp
ljmp
sub
pushf
pop
dec
pop
sub
push
movsb
sub
pop
ret
push
dec
jae
cli
mov
ss
jg
jmp
das
xchg
or
js
push
xchg
stos
push
bound
jecxz
clc
adc
mov
jg
push
addr16
push
sti
push
push
pop
int
aaa
lds
ljmp
into
cmp
push
sbb
out
cmp
mov
filds
dec
cmp
call
sub
add
cmp
jb
repz
adc
mov
hlt
jb
test
loopne
jle
mov
pop
mov
dec
sbb
inc
test
cmpl
std
fbstp
or
mov
and
fsubr
imul
rcl
push
data16
movsl
call
add
pusha
aam
test
pop
jmp
push
dec
sub
adc
cli
mov
lcall
sub
pop
dec
add
or
enter
mov
sbb
jg
ret
push
inc
imul
pushf
popa
shl
jns
xchg
orb
icebp
xchg
data16
push
aaa
ret
adc
leave
inc
stos
mov
push
push
popa
xchg
scas
repnz
icebp
inc
rorb
lret
mov
das
in
sbb
and
xor
cwtl
cmp
mov
mov
sbb
les
lock
ljmp
in
aam
loopne
sub
leave
and
jle
pop
insb
sbb
jg
call
cmp
cltd
mov
cmp
push
je
adc
jns
cli
pop
decl
repnz
jbe,pn
out
jbe
pop
pusha
adc
cwtl
call
ret
in
jb
xor
pusha
mov
stos
fs
out
cmpl
inc
add
pop
sar
xchg
mov
xchg
pop
xor
int
pop
leave
sbb
or
loope
pop
test
das
scas
clc
jns
xchg
inc
test
sub
rclb
xor
mov
or
cmp
lock
cs
mov
adc
sub
inc
add
xchg
jl
inc
sbb
sub
mov
incl
test
in
push
aaa
mov
push
adc
imul
cmp
bound
decl
mov
outsb
mov
pop
push
fcoms
std
pop
xchg
pop
shr
inc
cmp
popf
fcomip
ljmp
mov
imul
outsb
in
int3
mov
jbe
cmc
jg
lcall
mov
mov
in
movsl
pop
sub
roll
es
lcall
pusha
lods
jb
push
mov
rcll
fsubrl
clc
ljmp
rcrb
and
orb
pop
sub
lods
addr16
clc
pop
xchg
cmp
push
push
inc
xchg
clc
imulb
in
pop
mov
sar
jmp
xchg
sahf
cli
push
xchg
lcall
jg
popf
sar
jl
adc
movsl
xor
je
mov
in
and
adc
sarl
pop
fsubs
into
inc
lret
aas
ljmp
ret
jne
repz
aas
jnp
adc
and
pushf
xchg
adc
test
pop
icebp
in
in
adc
mov
stos
addr16
mov
pop
movsl
testb
jmp
pushl
rorl
sub
movsl
jno
xchg
mov
sbb
pop
rorl
xor
orl
mov
cmpsl
fwait
sub
or
jbe
ret
and
xchg
gs
xchg
push
ja
xchg
mov
jg
xor
push
dec
out
sbb
daa
mov
jb
into
xorb
cli
push
jmp
xchg
push
cmc
bound
clc
test
movsl
jns,pn
pop
je
filds
jb
xor
dec
jo
data16
decl
call
int3
and
adc
sbb
aam
xchg
int3
add
fwait
push
aas
mov
xor
mov
cli
mov
addl
inc
pop
add
jno
push
mov
call
repz
xchg
cmp
mulb
lds
mov
stos
jae
sti
mov
das
clc
fisubrs
jmp
and
cmc
inc
repz
mov
outsl
testb
aaa
cld
call
loop
dec
gs
xor
dec
jo
mov
push
mov
or
decl
pop
mov
pop
or
aam
xor
sub
mov
sub
ja
out
adc
lcall
inc
stos
shr
fs
sub
mov
cmpsb
mov
out
jmp
incl
out
in
sti
jnp
dec
in
sub
sti
mov
pop
std
push
inc
xor
ss
or
je
arpl
dec
leave
lcall
sbb
test
out
arpl
inc
lret
cmc
lods
xchg
mov
sar
jg
pop
int3
sub
ret
sahf
bswap
xor
xor
cmp
and
or
cli
mov
xor
add
loopne
adc
inc
jo
adc
inc
and
mov
and
jge
jb
jg
cld
xchg
jg
and
push
ss
loop
pop
cwtl
push
push
adc
les
inc
popa
adc
call
pop
in
push
and
add
adc
sub
mov
scas
mov
imul
mov
rol
mov
pop
stos
cmp
insb
pushl
adc
jb
jns
push
cmp
push
das
mov
cli
test
mov
dec
xor
sahf
outsb
cmpsb
xchg
cmp
cmpsb
ljmp
in
bound
sbb
inc
cmp
push
dec
shlb
add
xchg
adc
ss
decl
dec
add
mov
jno
andl
mov
flds
cmc
and
cmc
inc
pop
xchg
div
incl
es
rorb
sub
sarb
in
fbld
enter
adc
mov
add
sarl
bound
bound
mov
jg
push
mov
mov
and
pop
fstl
loopne
sub
xor
jae
aas
jae
or
cmpsb
cwtl
dec
or
pop
adc
xor
ja
dec
jb
and
daa
movzwl
lcall
and
add
push
sbb
inc
inc
jno
in
orb
shlb
xor
mov
jg
inc
and
xor
or
jmp
inc
rol
arpl
jecxz
xor
call
push
jmp
xchg
lds
mov
leave
inc
inc
or
mov
inc
xchg
and
movsb
jb
enter
inc
cmp
cmp
push
add
call
pop
xorb
loop
mov
sub
xchg
sbb
outsb
out
xchg
xchg
cld
incl
inc
dec
jecxz
xchg
xchg
enter
push
jns
xchg
mov
nop
pop
push
pop
push
jns
mov
movsb
xor
inc
xchg
bound
gs
cwtl
test
inc
cmpb
dec
adc
repz
loopne
mov
sub
or
jle
inc
inc
mov
xor
lcall
mov
inc
mov
ja
les
nop
mov
xor
sbb
fsts
dec
and
jae
lcall
fistpl
mov
inc
push
push
enter
cs
mov
adc
add
add
and
incl
mov
xchg
jp
or
mov
or
cs
hlt
add
es
jo
adc
or
xor
inc
and
call
aaa
pop
aad
dec
ja
adc
jno
inc
pop
sbb
inc
icebp
inc
insl
push
incl
ret
adc
in
adc
dec
sbb
in
jg
jbe
mov
pushl
xor
xorl
ja
lds
sbb
push
aas
clc
push
mov
dec
lcall
cmp
outsl
in
add
or
xor
test
test
mov
push
ds
enter
push
shlb
sub
bound
fidivs
xchg
fisubrs
pop
push
ljmp
fwait
movsl
cmp
inc
add
jae
negb
fdivp
mov
movsl
leave
add
xchg
cli
pusha
and
xor
mov
shll
loope
and
add
ds
nop
add
xchg
ds
mov
incl
fidivs
add
or
lock
decl
ja
xchg
add
cltd
ficoms
mov
xchg
push
js,pn
add
leave
pop
aas
lock
pushw
adc
sbb
and
inc
or
test
movsb
and
pop
incl
jmp
or
pop
sub
dec
push
xorb
clc
in
adc
outsl
xchg
fs
xor
sub
incl
daa
dec
adc
fs
arpl
dec
in
daa
jbe
inc
mov
ja
ds
incl
push
pop
lfs
jno
xor
insl
jno
push
mov
xchg
ja
fcomip
ljmp
adc
mov
mov
cmp
mov
cmp
jmp
push
pop
sbb
cmp
es
lock
cmp
outsb
cmpsl
icebp
insl
scas
inc
sbb
sbb
sub
xchg
cmp
ljmp
cmp
xchg
pop
mov
adc
lret
rolb
xchg
fildl
mov
cwtd
or
adc
out
jnp
mov
jnp
jg
cmc
push
and
pop
repnz
jge
lea
dec
adc
cmp
cwtl
test
aaa
call
loopne
cmp
insl
jo
dec
out
xchg
lret
mov
push
dec
add
inc
fcomip
and
adc
lods
mov
scas
jmp
aaa
cmpsb
push
jge
adc
loop
cwtl
pop
decl
stc
add
imul
int
test
lcall
inc
cwtl
enter
loopne
xchg
lret
or
ja
xor
mov
call
mov
loop
cmp
pop
adc
cmp
stos
and
dec
mov
push
test
add
cli
call
dec
es
push
pop
cmovs
fsubrs
ret
cmp
ret
jae
adc
sub
push
cmp
sub
pop
jb
and
mov
add
mov
scas
shlb
and
adc
incl
bound
cmp
push
sub
ja
mov
push
out
dec
cmp
inc
fadds
scas
fistpll
pop
xchg
je
pop
xor
lret
mov
outsb
rcll
movsl
pop
mov
cmp
xchg
jp
mov
xor
sbb
sti
frstor
int3
andl
adc
sti
mov
scas
cltd
add
lcall
adc
cmpsl
xor
fbld
ss
lcall
cmpsl
sbb
add
sarb
js
push
ret
incl
sbb
or
loopne
outsl
and
xchg
pusha
repnz
jg
jg
xor
test
adc
inc
xchg
in
fs
lock
test
enter
incl
xor
rclb
loop
out
xchg
and
push
mov
movsl
call
push
shlb
push
jne
xor
call
xor
cmp
push
or
lret
lahf
cmp
test
call
je
push
andl
je
or
xor
push
ss
lret
and
inc
xor
notb
stc
les
and
jmp
adc
xor
out
lods
insl
mov
pop
pop
aam
xor
pusha
and
sub
ja
stc
xchg
pusha
aam
fcomip
jmp
sub
pusha
mov
mov
sbb
mov
or
mov
dec
loopne
mov
sub
mov
incl
mov
cmp
mov
mov
jmp
pusha
cmp
mov
movsb
push
push
rcrb
mov
test
ja
aaa
pop
loopne
mov
idiv
jmp
dec
data16
addr16
inc
lcall
sub
pusha
xchg
xchg
in
add
pop
push
stos
or
and
aas
pop
lret
arpl
test
mov
decl
out
lea
dec
insb
mov
test
sub
adc
incl
pop
mov
inc
ss
or
adc
sub
adc
xor
dec
push
clc
es
mov
loop
test
or
outsb
adc
imul
inc
sub
int3
and
pushl
cs
ss
ret
xor
lret
xor
idiv
outsl
push
jg
push
inc
push
and
scas
push
aad
fwait
pushf
pop
sarl
sbb
incl
imul
mov
cmpsl
shrb
mov
icebp
js
mov
lcall
pusha
mov
sub
ret
mov
push
jne
mov
push
movsl
clc
mov
cmp
sub
xlat
adc
cwtl
js
ja
or
mov
adc
shrb
in
lret
cld
cmp
jle
ds
jmp
mov
mov
ljmp
in
shrl
incl
xchg
sub
or
imul
push
loope
subl
sbb
adc
sub
and
movsb
mov
lcall
test
inc
ret
fldt
stos
jno
xchg
rcll
mov
into
push
jg
pushl
lods
stos
movsl
cmp
mov
fisttps
test
cltd
es
sbb
cmpsl
dec
adc
ficompl
xor
mov
incl
lret
aad
and
xor
pop
push
inc
push
lcall
dec
push
aad
mov
ljmp
xchg
out
sub
mov
outsl
insl
sub
js
int
int
sub
pushl
sbb
loop
outsb
xlat
push
jecxz
push
insb
loope
dec
add
xor
scas
adc
ljmp
dec
mov
xchg
in
xchg
int
jnp
sti
cmp
sub
adc
mov
or
call
out
mov
cmp
mov
nop
mov
or
popf
or
add
decl
movsb
mov
repz
repz
mov
rol
hlt
and
dec
decl
sarl
stos
add
or
lea
mov
cmpsb
dec
test
jns
and
jl
fisttpl
cltd
hlt
sub
jae
mov
mov
incl
adc
repnz
cmc
jo
scas
imul
push
push
sbb
lcall
lock
or
lods
mov
sub
mov
lcall
pushf
out
dec
loopne
aas
nop
add
xchg
push
jg
mov
jmp
or
incl
mov
fisubs
cmp
pop
cli
mov
cli
push
daa
ror
lock
decl
push
adc
xor
sub
and
es
arpl
inc
adcb
adc
add
incl
or
inc
loop
in
mov
xchg
jbe
jno
fsubs
push
or
push
ja
stos
test
jns
pop
xchg
pop
mov
test
hlt
mov
mov
sbb
mov
mov
mov
mov
pop
cmc
jmp
scas
mov
mov
lock
xchg
xchg
lock
mov
pop
sbbb
xor
add
add
popl
nop
cwtl
fchs
fs
mov
mov
push
add
fcoms
xor
test
xchg
mov
or
imul
mov
mov
pop
fwait
imul
fcoms
or
mov
lock
incl
pop
fwait
in
xchg
fsubl
pop
mov
push
jns
and
das
pushf
push
cwtl
sub
mov
jg
add
les
ret
aas
sub
mov
bound
imul
out
incl
and
lods
decl
int3
popf
sbb
fildll
daa
daa
xor
xor
nop
jle
inc
inc
fcomip
call
xor
mov
inc
push
out
jecxz
loope
or
nop
jl
adc
inc
and
adc
insl
push
mov
xchg
cmp
mov
pop
ljmp
les
cltd
xlat
jns
aad
outsl
cmp
push
js
stos
xor
xlat
inc
push
rcrl
sbb
stos
push
pop
popa
sbb
add
jle
mov
call
pop
and
decl
inc
mov
push
mov
data16
xchg
jecxz
pop
sbb
sbb
pushl
cmp
dec
sbb
aam
mov
int
xor
rorb
jmp
and
sbb
jno
inc
push
test
mov
push
inc
push
aas
mov
pop
adcl
sbb
lcall
sbb
push
xchg
jecxz
movl
fldt
sub
call
lods
rcll
jle
sbb
mov
aas
or
jb
or
scas
pop
xor
cld
decl
insb
clc
push
lcall
dec
push
cmp
adc
cmp
ljmp
xchg
rol
xchg
jnp
sub
dec
and
sti
cmp
decl
outsl
mov
mov
adc
les
icebp
adc
scas
and
or
cld
outsl
add
jmp
insb
xlat
lock
pushl
cmc
ja
ljmp
out
lods
ret
loopne
jecxz
mov
enter
cmp
std
jb
nop
mov
xlat
push
aam
cmp
nopl
mov
dec
popl
fsubp
roll
or
lods
adc
jb
rorl
jmp
icebp
inc
mov
decl
mov
pop
sbbb
or
and
call
repnz
and
repnz
and
sbb
push
es
and
mov
cltd
mov
dec
and
and
sbb
jmp
les
cmp
inc
ret
dec
and
xchg
dec
mov
push
leave
xchg
or
lcall
andb
push
js
dec
xchg
clc
fldcw
je
inc
xor
sub
mov
push
aad
push
xor
aad
and
ror
xchg
sbb
imul
mov
sbb
sub
inc
push
push
cmpsb
mov
inc
test
jbe
test
xchg
fcomps
icebp
inc
decl
sub
test
adc
das
sar
insb
jge
push
mov
fcmovb
cmpsl
pop
or
mov
icebp
fsubrs
fmull
pop
enter
push
fsubrs
enter
dec
and
fistpll
jmp
rol
daa
ret
in
leave
aaa
adc
ljmp
mov
lcall
mov
mov
divl
jecxz
mov
xchg
leave
lods
lcall
push
inc
pop
dec
ds
scas
add
xchg
outsl
test
sub
scas
inc
pop
mov
mov
call
xchg
jnp
scas
cmp
mov
jecxz
mov
add
ret
jo
lock
addr16
out
push
inc
nop
mov
repnz
mov
cld
cmp
mov
push
mov
jg
cmp
rcrl
dec
rcl
and
enter
stos
mov
sub
daa
mov
mov
or
pushf
out
cmp
rolb
icebp
sub
ficomps
ljmp
test
test
test
lods
dec
dec
cmp
jl
push
cmp
xchg
push
rolb
sti
mov
cmpsb
dec
xor
or
rcrl
fstpl
test
adc
xchg
mov
sbbb
sahf
aad
pusha
mov
ljmp
push
xchg
push
xchg
push
subl
mov
push
out
cli
mov
mov
fidivl
movsb
or
xor
adc
and
out
js
mov
adc
jmp
stos
in
mov
cld
inc
adc
cmc
and
int3
inc
mov
inc
daa
rcll
lcall
or
fisttpll
xor
mov
incl
fadds
jb
push
fimull
push
mov
pusha
lods
insb
or
nop
int3
mov
jmp
popa
sbb
rcrl
or
xor
icebp
mov
mov
fucomip
ljmp
repnz
add
pushf
or
addr16
mov
call
sarb
pushl
dec
xchg
test
push
sbb
and
push
mov
hlt
and
adc
decl
adc
lret
pushf
add
inc
popa
sub
sti
sbb
add
dec
daa
sub
ljmp
fsub
sbb
and
aam
adc
dec
jns
or
dec
dec
mov
sti
decl
repnz
or
inc
or
xor
pop
add
fxam
mov
lds
ljmp
inc
sbb
add
xchg
sub
and
into
test
pop
lock
pop
push
mov
bound
ret
loopne
jb
sub
lock
test
sub
clc
in
aad
push
lea
sub
sti
rorl
jo
jb
stos
sub
mov
jmp
sbb
xor
sub
divb
or
sbb
rol
xor
aaa
aas
enter
ljmp
and
imul
mov
jle
xchg
ljmp
fs
inc
dec
outsb
aad
divb
cmp
lret
mov
mov
xor
and
insb
mov
mov
mov
sbbb
cli
incl
movsb
imul
lea
ljmp
mov
rcl
mov
inc
push
push
xchg
inc
xor
sub
aaa
incl
dec
and
fldl
mov
xchg
adc
pop
add
xor
dec
out
mov
xchg
test
imul
dec
shrl
mov
sbb
push
xlat
pop
push
out
dec
pushl
dec
pop
mov
insb
lret
jmp
mov
gs
cmp
incl
xchg
push
arpl
pop
or
iret
insb
adc
or
xchg
ret
pop
mov
add
mov
adc
aad
add
fistpll
add
mov
sahf
std
loop
add
add
xchg
or
daa
sahf
cli
fstl
jae
xor
xchg
adc
dec
xchg
jecxz
pop
fadds
and
sub
mov
dec
pop
popf
sbb
sbb
jg
dec
xchg
xchg
lock
inc
inc
mov
mov
aas
out
add
cmp
in
incl
fnstenv
pushl
push
stos
and
sub
bound
aad
and
sub
loopne
incl
outsb
pop
push
mov
test
xor
jl
push
inc
xchg
test
lea
loop
aaa
sarl
mov
push
sahf
adc
push
movsb
ljmp
mov
in
leave
rorb
cmp
cmp
gs
mov
lods
call
es
xchg
lret
imul
and
jg
mov
movsb
scas
jge
fstpl
cmp
cltd
push
jno
stos
inc
repnz
shl
ljmp
sub
test
sub
push
pop
jle
push
xor
mov
lcall
add
push
pop
push
dec
xchg
mov
pop
push
cld
jb
mov
inc
mov
lcall
iret
cmp
divl
std
call
in
call
add
ficomps
push
jl
pop
sub
popf
ret
outsb
or
jg
lret
subb
lret
rclb
xchg
jg
mov
add
mov
and
lea
cs
sti
call
adc
adc
sbb
inc
jbe
aam
insl
jmp
into
mov
sahf
xchg
xchg
or
decl
aad
push
cmp
fmull
mov
jo
out
jnp
cmp
out
mov
push
stc
addr16
jmp
imul
xor
xor
mov
lods
xor
jo
mov
mov
ljmp
repnz
sub
cmp
frstor
scas
leave
nop
mov
fistl
fs
decl
add
mov
inc
and
inc
cmpsl
jp
and
hlt
sub
imul
std
lcall
in
xchg
es
mov
jecxz
push
test
fisubs
jmp
popf
lds
int3
push
std
filds
enter
xchg
cmpsl
popa
cmc
mov
pop
cmp
cs
inc
nop
push
repnz
ja
add
xchg
sub
sub
push
jno
jp
and
decl
out
mov
sbb
sbb
mov
mov
pusha
mov
inc
divb
lcall
xchg
xor
mov
out
jns
add
inc
sbb
mov
jecxz
xor
jb
lret
je
xchg
test
test
mov
xchg
adc
scas
call
push
pop
pop
jp
xor
mov
jno
jp
icebp
ret
lds
bound
std
jmp
es
adc
imul
fldt
mov
shll
and
xchg
call
stos
mov
mov
sbbb
mov
pushl
push
xor
or
shlb
clc
pushf
stc
cmp
fidivl
into
add
adc
stos
shll
lahf
push
cmp
mov
adc
mov
sub
and
dec
movsl
popf
mov
mov
es
adc
fmuls
loope
and
decl
dec
jns
dec
jnp
es
popf
enter
mov
ret
push
call
add
cwtl
mov
arpl
call
jl
sub
mov
outsl
rolb
add
nop
lcall
adc
jmp
mov
test
call
mov
clc
or
sbb
scas
lret
pusha
xchg
add
xor
decl
leave
cwtl
inc
and
add
lock
sarb
in
sbb
dec
add
js
sti
mov
decl
stos
or
fadds
bound
lock
test
add
pop
out
clc
call
xchg
imul
icebp
sub
negb
add
test
and
call
xchg
inc
stos
das
mov
mov
lcall
repz
sbb
inc
adc
pushl
lods
and
ret
push
xchg
push
repnz
cltd
mov
or
std
incl
jl
lds
dec
leave
xor
jns
ret
sbb
inc
sbb
nop
push
add
aaa
cwtl
in
test
mov
shrl
inc
xchg
mov
sub
orl
into
lcall
lods
incl
sub
stos
push
inc
sub
fs
add
std
pusha
out
repnz
fcmovnu
mov
xorb
mov
mov
out
xchg
rcr
mov
xorb
xor
leave
out
add
shlb
mov
mov
ret
mov
pushl
sub
xchg
sbbl
xchg
popa
les
decl
lcall
cltd
mov
add
clc
add
fisttpl
lahf
inc
push
out
cwtl
stc
or
call
mov
fistpl
in
inc
xlat
sbb
jmp
cwtl
sub
jmp
jg
jmp
mov
and
xor
test
mov
stos
xchg
mov
or
std
lcall
rolb
cltd
mov
in
inc
loope
lea
inc
movsb
inc
mov
mov
cmp
enter
fcoml
pop
and
fcmovne
stc
pop
xor
inc
into
sbb
inc
xchg
push
stc
sub
xor
mov
sub
jns
dec
test
cmp
sub
cmp
mov
cwtl
lods
mov
out
js
pop
std
inc
mov
sbb
xor
cltd
outsb
inc
das
xor
mov
pop
inc
rclb
test
push
les
push
xchg
push
cmp
jecxz
mov
push
fnstenv
mov
ljmp
scas
enter
stos
popf
cmp
dec
xlat
cwtl
xchg
jb
mov
add
mov
jl
jb
add
xor
mov
stos
add
or
cli
sbb
fisttpl
cwtl
decl
sub
mov
lds
test
lret
sub
imul
lcall
jg
xor
rclb
sti
stos
cmp
js
push
cmp
and
repnz
ljmp
mov
stos
mov
daa
mov
adc
pusha
rorb
jp
stos
push
mov
pop
sbb
mov
xchg
les
enter
sbb
sbb
adc
adc
dec
push
repnz
xor
push
sbb
test
call
mov
add
in
jbe
cmp
lods
and
push
sar
mov
cmp
push
mov
daa
in
dec
dec
mov
xchg
add
dec
mov
jg
icebp
xor
cltd
call
or
mov
jmp
sub
push
add
mov
inc
faddl
xor
mov
xchg
add
pusha
adcb
sub
adc
cmp
cmp
bound
mov
adc
mov
lea
pusha
jnp
mov
add
mov
arpl
outsl
push
int
mov
call
hlt
jmp
add
leave
xchg
std
inc
mov
sub
test
pop
fmuls
fidivl
mov
outsb
inc
xor
sbb
inc
cmp
ljmp
insb
nop
cli
arpl
sub
repnz
stos
cmp
insl
shll
std
jmp
xchg
dec
xchg
xor
shrb
xchg
sub
lea
push
loope
lcall
sub
cltd
and
or
cmc
push
mov
incl
cld
dec
adc
mov
fwait
dec
popf
pop
into
dec
xor
ss
or
push
jmp
mov
xchg
xchg
aad
aad
test
in
xchg
lock
cmp
push
pop
orl
or
add
adc
pushl
imulb
inc
lret
sbb
jl
jmp
xchg
dec
rcrl
addr16
jmp
dec
pusha
adc
dec
jmp
imul
mulb
or
pop
or
ljmp
shrl
sahf
dec
jae
repnz
fnsave
stos
pop
mov
pop
stc
xor
sub
jmp
cltd
subl
adc
icebp
adc
sub
inc
push
outsl
fs
pop
jo
test
gs
mov
xor
cld
or
fdivrs
dec
mov
dec
ficoml
adc
sahf
adc
call
inc
fs
lds
sub
jg
inc
mulb
pop
mov
jne
mov
ljmp
xchg
mov
adc
cmp
mov
movsl
push
sbb
inc
idivb
sbb
icebp
cmpsb
leave
shlb
xor
mov
push
mov
ljmp
lock
les
mov
shr
xchg
dec
sbb
or
call
pushf
enter
or
mov
or
mov
fdivrs
mov
sbb
adc
jle
pop
pop
xor
icebp
cwtl
hlt
xchg
mov
cltd
push
in
dec
mov
push
sbb
rcl
xchg
cli
cmp
mov
or
xor
pop
sub
mov
jbe
xorb
ljmp
clc
mov
movsl
mov
xor
clc
mov
push
mov
jns
jge
add
fisubs
adc
xchg
lea
mov
decl
or
dec
pusha
adc
arpl
sbb
or
or
mov
mov
lcall
mull
xchg
sub
cmp
or
xor
mov
mov
lcall
mov
mov
aas
negb
adc
sub
loopne
and
mov
ljmp
loopne
sbb
rclb
dec
cs
das
and
repz
aaa
jle
pop
inc
fmul
repnz
pop
mov
adc
adc
jle
nop
push
or
cmp
loop
mov
mov
cld
cmp
xor
ljmp
mov
pushf
pop
arpl
jecxz
mov
xchg
aam
sub
fwait
add
leave
jg
jmp
test
fstpl
inc
loopne
fbstp
rorb
jmp
sbb
out
xor
imul
or
pop
sub
inc
or
push
mov
outsl
sub
inc
nop
pop
orl
push
jb
fisubs
popa
xchg
and
scas
leave
pop
pminsw
fld
push
lcall
aas
shr
pop
add
sbb
push
push
out
into
in
lods
add
insb
pop
ror
sub
gs
lods
fists
mov
jno
fistps
push
outsl
test
scas
decl
jns
pop
jns
hlt
jnp
mov
mov
push
xchg
fcompl
add
push
in
out
adc
push
cmp
xor
xor
xchg
push
out
out
mov
cmp
sub
testb
data16
icebp
outsb
outsb
cmc
incb
out
outsl
notl
in
adc
pop
inc
push
sub
imul
notb
add
movsl
fdivrs
xor
out
xchg
repz
rorb
std
push
dec
or
scas
nop
push
int
jo
cmpsl
clc
orb
mov
jg
enter
mov
sbb
or
mov
add
iret
stos
fs
cli
repz
sbb
imull
js
in
in
call
push
add
xchg
getsec
jne
call
xchg
insl
mov
jnp
sbb
fidivs
pop
jle
mov
mov
and
addr16
out
sub
ja
lock
fcomps
pop
lods
inc
mov
mov
call
cld
mov
cmp
shll
push
popa
fwait
fwait
pop
out
adc
cmp
cmp
lcall
out
sahf
jne
fsubrl
aam
sub
sbb
jmp
adcb
sub
xorl
inc
arpl
loopne
outsl
out
cmp
testb
testb
inc
mov
inc
fnstsw
xchg
lods
cmpsb
mov
int3
inc
push
loop
sub
lock
cmc
in
or
fdivl
mov
mov
out
mov
call
bound
lods
mov
jmp
ljmp
mov
pop
movsl
lea
mov
push
dec
jb
jno
jg
pushf
sbb
je
and
incl
ljmp
pusha
imul
loop
jg
int
cmp
mov
mov
pop
pushf
aas
insb
xchg
call
and
in
mov
cmp
xorl
push
fucompp
sbbl
xchg
popf
inc
push
sar
fiadds
dec
iret
je
xabort
decb
jg
incl
out
cmp
xchg
jg
dec
push
jns
or
pop
outsb
xchg
ja
mov
ror
std
sub
pop
sahf
fs
sbb
loope
mov
xor
int
call
out
and
stos
ja
jbe
sbb
jne
mov
pop
push
test
gs
out
cmp
stos
sbb
stc
adcl
jp
pop
push
pop
jmp
nop
das
jg
jo
add
lea
mov
mov
sti
adc
decl
or
clc
mov
notb
mov
dec
xchg
mov
sub
pop
out
lcall
imul
mov
out
and
pop
rcrl
int
mov
xorb
decl
or
jno
sarb
mov
jl
mov
jle
incl
inc
scas
std
out
jno
scas
push
xchg
xchg
in
mov
fdiv
jo
lahf
jmp
mov
adc
xchg
pop
stc
mov
ss
ljmp
shll
cmp
push
pushf
or
jmp
fsubl
roll
outsl
cli
jns
push
dec
or
mov
mov
cmpsl
cmpsl
jmp
pop
jg
fadds
add
nop
repnz
cs
sbb
or
mov
test
ljmp
popa
loop
mov
movsl
sbb
ret
test
and
in
loopne
inc
mov
push
push
pop
mov
movsl
dec
cwtl
push
daa
sbb
ljmp
lds
stc
mov
call
ljmp
mov
push
mov
cltd
jb
dec
cltd
rsm
bound
sub
cmp
pop
bound
cmpsl
pop
movsb
sub
out
lods
push
dec
xor
push
imul
dec
pop
xchg
jmp
shrl
loop
test
sub
ficompl
test
stos
adc
ljmp
imul
rcrb
jb
sarl
insb
call
outsb
pop
cli
jbe
shll
ss
ja
sub
push
loop
jno
push
cmp
inc
jle
adc
shll
int3
loope
mov
xchg
fcomip
rcrl
jns
pop
add
rcrl
iret
repnz
dec
fcos
lcall
and
lahf
test
push
mov
xchg
pop
testl
movsb
iret
inc
sbb
incl
jg
insl
mov
add
xor
jle
mov
enter
ja
push
lcall
xor
xchg
xchg
push
in
pusha
adc
jns
hlt
decl
lock
call
push
dec
jae
lock
into
aaa
lcall
cld
jmp
push
xchg
push
add
adc
push
push
movsl
dec
xchg
and
mov
dec
int
xchg
gs
aad
stos
dec
inc
out
pop
lcall
mov
aad
fwait
sahf
das
cli
imul
in
inc
sbb
and
mov
jne
jg
mov
daa
push
ja
pop
mov
aad
xchg
pushf
mov
jno
mov
push
pop
pop
adc
dec
xor
sbb
icebp
push
fprem
incl
push
xchg
popf
movsb
pop
dec
push
sbb
sbb
push
or
fwait
and
mov
rcrb
cmpsl
inc
aas
ljmp
mov
dec
es
scas
adc
lods
fsubr
lahf
adc
add
mov
inc
mov
sub
je
adc
cwtl
mov
pushl
mov
jb
sti
xlat
pop
mov
in
or
jns
scas
rorb
sub
clc
ljmp
ret
stos
add
stc
pop
cmp
ljmp
dec
push
in
jl
jno
ror
scas
xor
rolb
bswap
in
nop
lcall
loop
xor
call
mov
js
popa
cmpsl
sahf
jb
add
adc
cltd
xchg
decl
dec
jnp
hlt
or
cmp
insb
adc
insl
jle
inc
jnp
test
jg
test
stos
pop
or
inc
add
pop
fcompl
cmp
decl
push
push
mov
rorb
dec
or
dec
lods
xchg
sub
mov
scas
aam
scas
push
adc
jmp
mov
dec
aaa
jp
aad
test
pop
and
gs
daa
mov
dec
call
mov
movsl
adc
push
outsl
mov
lret
out
frstor
aad
lds
in
movsb
scas
push
lods
jmp
aad
mov
dec
cmp
push
mov
mov
xor
mov
loopne
mov
out
adc
lahf
in
icebp
mov
push
pop
ds
or
push
dec
mov
or
xor
bound
movsb
xchg
jp
jp
sti
in
dec
jmp
lea
andb
mov
adc
in
outsl
mov
mov
mov
fldl
aad
fisubs
movsb
jg
adc
mov
mov
add
push
xor
fimull
xchg
push
jns
repz
mov
jle
mov
xchg
or
dec
jp
xor
mov
xchg
imul
sub
lcall
in
daa
enter
test
mov
int3
and
sbb
jg
xor
test
mov
mov
cs
mov
into
add
lcall
scas
pop
xor
mov
cmp
in
pushf
out
cmpsl
jns
sbb
stos
mov
sbb
sahf
leave
mov
stc
jle
adc
fbstp
and
js
jne
mov
mov
jmp
aam
xor
popf
addr16
in
mov
mov
xchg
test
out
pop
stc
inc
insb
daa
mov
mov
loop
imul
push
sti
pop
mov
movsl
ret
movsb
ljmp
cmp
call
mov
js
mov
and
cwtl
int3
sub
inc
or
fwait
orl
pusha
ss
jecxz
mov
mov
jecxz
lcall
dec
dec
sbb
js
jbe
or
pop
les
xchg
lock
jmp
sbb
rclb
mov
call
jbe
je
mov
inc
movsb
movsl
xor
adc
pop
aas
sbb
and
pop
cmp
je
int3
mov
sub
mov
iret
push
leave
cli
test
lcall
pop
popa
loopne
mov
pusha
sub
cmp
cmp
ljmp
sbb
int
jo
inc
xchg
addr16
pop
cmc
push
nop
xchg
je
or
cmpsb
daa
cli
jmp
add
enter
or
sub
adc
push
repnz
rolb
xor
call
or
mov
mov
cwtl
inc
xor
lcall
pusha
pop
call
das
jp
xor
in
jmp
mov
mov
mov
push
push
xor
lods
data16
pushl
in
out
jbe
pop
imul
repnz
xor
push
shll
push
push
jle
push
cmp
aam
sbbl
jbe
xchg
daa
aad
jo
adc
push
inc
je
xchg
sahf
icebp
je
cmpsl
xchg
ljmp
push
sub
push
add
stos
movsb
add
stos
outsl
sbb
clc
cmp
in
fs
mov
mov
aad
daa
ret
test
mov
jmp
xchg
decl
push
psllq
int
adc
jmp
mov
jo
xchg
sbb
add
xchg
and
mov
fdiv
adc
sarl
mov
sbb
jg
jg
aad
iret
sub
jle
iret
add
leave
lret
inc
sub
std
call
xor
mov
push
in
mov
add
jle
cmp
daa
pushl
inc
xor
inc
xchg
mov
inc
fistl
lods
popl
lds
xor
or
incb
test
mov
mov
fwait
sahf
jg
cmp
dec
rcr
stc
inc
adc
jge
es
push
cltd
pop
in
or
pop
cmp
repz
xchg
mov
pop
cmp
pop
lods
mov
les
aam
mov
or
mov
and
mov
jmp
into
jae
xchg
or
cmpsl
pop
adc
fdivl
inc
fisubl
orb
jae
jmp
int
sarb
push
adc
dec
sbb
and
jbe
mov
or
repz
cld
pop
dec
dec
sbb
outsb
xchg
iret
addr16
cmp
pop
cmc
push
mov
inc
add
push
xor
pop
data16
push
in
dec
std
incl
sub
stc
cmp
iret
out
mov
jne
leave
or
or
dec
mov
fstps
jg
jl
clc
aaa
xchg
or
xor
mov
adc
movsb
cmpsl
imul
xor
pushf
mov
out
inc
dec
mov
jb
inc
jno
dec
xor
gs
mov
cmpsb
jb
pushf
pusha
sub
jno
inc
push
sti
dec
mov
lods
dec
int3
pop
fcoml
sbb
mov
popf
xor
decl
xchg
je
push
test
fdivs
incl
and
imulb
xchg
xchg
jge
daa
jbe
loope
popa
cmovs
and
mov
cmp
mov
fildll
cmc
repnz
movsl
jmp
lcall
jmp
mov
movsl
push
fsubrs
in
test
xchg
push
xchg
push
mov
faddl
adc
je
sub
xchg
or
enter
dec
movsl
lds
ja
xlat
xchg
dec
push
cli
jmp
jae
xor
xchg
cs
fsubrp
jg
adc
xchg
pushl
mov
pop
mov
xchg
outsb
les
ljmp
pop
mov
inc
lcall
push
pop
lods
loop
cs
mov
jne
js
jns
bnd
lcall
xchg
cmc
out
xchg
cmp
push
jne
push
out
xchg
mov
negl
stos
jnp
daa
push
clc
mov
pop
subb
popa
xor
jo
cs
stc
cmp
and
adc
test
out
clc
fstp
insl
rcr
or
mov
cltd
and
or
mov
adc
fcomip
les
jo
lods
cmp
inc
decl
enter
into
fmul
test
in
inc
decl
popa
mov
gs
aad
pop
insl
or
incl
enter
sbb
pop
pop
push
cmpsb
aad
push
sbb
dec
fs
pop
dec
sbb
dec
mov
inc
in
into
lods
pop
out
popa
mov
jne
popa
jge
dec
clc
adc
cmp
pusha
cld
incl
and
mov
inc
and
adc
push
cld
aad
imul
pushl
xchg
lds
xchg
cmp
lcall
sbb
iret
cmpsb
jne
mov
or
inc
xchg
icebp
leave
mov
lcall
sbb
mov
and
xchg
push
jg
incl
es
je
sbb
lods
lea
sbb
xchg
add
push
and
hlt
call
test
adc
and
or
lret
sub
loop
ljmp
cli
mov
jne
xchg
mov
loopne
lcall
jmp
add
push
dec
push
mov
cmp
jg
mov
hlt
inc
pop
sbb
ss
lock
outsb
rcrb
call
jo
aad
or
stc
test
lret
movsb
push
fistps
mov
aad
jg
stc
push
pop
adc
sahf
test
xchg
rcr
pop
mov
xor
jnp
pop
call
xchg
mov
out
mov
sti
loope
sahf
push
and
mov
or
test
lahf
dec
std
xchg
and
jno
nop
daa
ljmp
lret
fwait
add
jno
sub
pop
call
fildl
dec
adc
aad
nop
insb
ljmp
cmp
inc
pushf
nop
or
xor
sbb
popa
add
mov
pop
sbbl
pop
or
subl
dec
sbb
mov
aaa
test
add
arpl
ljmp
incb
out
popa
or
xchg
jns
cmp
or
mov
in
stc
loop
call
cld
fcompl
test
jne
ret
js
repz
pop
xor
negb
cmp
mulb
sbb
xchg
add
shll
cmp
data16
int
fistps
lcall
ljmp
and
sbb
xchg
dec
iret
pop
gs
test
je
aam
sub
mov
cmc
adc
mov
and
inc
fidivs
scas
lds
test
dec
inc
push
decl
pusha
and
cs
dec
adcl
outsb
jp
in
fdivl
mov
outsb
cmp
jge
fcoms
loopne
add
cmp
mov
fisubl
cli
pop
arpl
mov
sbb
ljmp
xchg
shlb
xchg
adcl
xor
mov
push
pop
add
clc
xchg
sbb
mov
or
add
inc
icebp
xchg
mov
jecxz
in
fcompl
bound
lret
inc
mov
scas
or
push
in
push
sbb
pop
lock
decl
or
jle
inc
pushw
sbb
sbb
pop
push
jnp
cmpsb
imul
jmp
cmpsl
and
push
lahf
push
push
les
test
lcall
push
fidivl
dec
cmp
sub
and
popa
dec
add
pop
fisubrs
cmp
inc
jne
mov
push
mov
push
or
sbb
rcrl
rclb
jecxz
decl
out
inc
xchg
js
test
test
andb
push
pusha
lcall
bound
jg
sbb
or
arpl
les
and
push
int3
sar
incl
push
sbb
push
outsl
test
cmpsb
cmp
xchg
cmp
push
dec
popa
mov
or
cmp
cmc
ljmp
pop
inc
and
xchg
call
pop
rcrb
sbb
aas
leave
pop
mov
stos
addr16
and
fwait
inc
inc
or
jg
cmp
data16
cwtl
lds
cmpsb
sub
stos
cli
lcall
inc
outsb
pushf
inc
xchg
stos
sbb
cld
adcb
mov
push
es
femms
loopne
sbb
fisubrs
mov
lcall
jbe
je
cli
push
mov
mov
dec
sub
push
mov
enter
pop
cmpsl
xchg
fstl
test
mov
fdivrl
inc
dec
adc
cwtl
cld
dec
pop
sbb
in
mov
leave
push
cmpsb
fiadds
cwtl
je
les
incl
andb
pop
mov
stos
push
test
icebp
call
xchg
test
adc
test
nop
fcom
movsl
mov
out
into
shrl
iret
flds
cmp
push
call
icebp
rcll
int
rcl
or
sti
jns
aam
mov
fisttpl
in
ljmp
mov
mov
mov
and
popf
test
pop
iret
mov
call
add
lea
cli
xchg
movsb
enter
stos
out
or
ja
in
sbb
bnd
add
insl
leave
je
dec
jne
iret
popa
lcall
mov
pop
xor
or
inc
addr16
fs
cmpsl
outsb
fcomps
mov
decl
cmp
inc
mov
fs
fisubrl
mov
xlat
call
push
xchg
lods
icebp
lcall
shll
sbb
or
fadds
fmul
mov
test
jnp
lods
adc
xchg
add
push
inc
cmc
and
pushl
cmpsb
in
and
sahf
or
fnstsw
stos
vcomiss
push
dec
mov
mov
pop
repnz
mov
ljmp
rol
add
dec
jecxz
fisttpl
pushf
sub
push
outsb
mov
jmp
decl
jmp
push
pop
in
negb
mov
ret
stos
add
repnz
jmp
les
adc
mov
mov
je
mov
mov
jmp
imul
or
sbb
and
inc
mov
mov
cld
jg
ljmp
dec
ds
test
jg
sbb
sbbb
dec
cmovns
xor
gs
addr16
rol
loope
push
incl
sub
mov
xchg
adc
cli
lock
xchg
pop
imul
jne
ljmp
sti
xor
mov
movsb
imul
mov
sbb
cltd
xchg
or
sar
das
mov
cmp
add
inc
add
sub
xchg
shrb
leave
and
sub
in
mov
js
lcall
or
jo
stos
daa
pop
mov
push
call
bound
pop
or
mov
ljmp
push
clc
adc
push
subl
js
dec
insb
push
dec
or
ljmp
sub
sub
dec
popf
lods
jp
cmp
pushf
in
sbb
call
outsl
dec
enter
pop
hlt
jge
aas
jp
pop
out
shl
add
inc
fisttpl
cmpsl
ret
sbb
cmpsb
inc
sti
inc
imul
fsts
xchg
test
outsb
jmp
adc
mov
sbb
pop
out
mov
mov
xor
rolb
and
iret
stos
imul
and
jno
dec
mov
or
imul
mov
fcomip
push
jno
adc
shr
push
roll
pop
cmpsl
sub
fimull
in
stc
xor
push
mov
adc
lods
repnz
pop
xchg
inc
and
inc
jmp
dec
cmp
sub
dec
inc
cmpsb
test
hlt
push
sub
out
repz
sub
sbb
pusha
add
icebp
incl
jge
movsb
inc
sbb
xchg
dec
decl
sub
push
and
nop
test
ss
fwait
insb
mov
call
scas
pop
lahf
fistps
jbe
xchg
inc
outsl
imul
imul
inc
pop
hlt
fdivl
mov
sub
jge
sbb
mov
bound
addr16
out
dec
push
push
jnp
mov
xchg
popa
les
shl
or
push
sub
sub
jmp
mov
out
lret
adc
test
lret
push
call
hlt
mov
out
call
addr16
rcl
sub
push
push
leave
push
mov
dec
and
mov
inc
jge
into
adc
shrb
lahf
es
nop
cli
jg
xor
jle
addr16
mov
inc
pop
shlb
inc
dec
mov
sub
xchg
mov
popf
push
inc
pop
mov
out
imul
cmp
add
xchg
inc
aas
stos
cmpsl
and
out
mov
cmc
dec
leave
adc
fwait
mov
jmp
jmp
test
aaa
cld
lcall
ja
jne
mov
or
lahf
in
popf
mov
inc
pop
and
js
push
xor
xor
xchg
mov
loope
outsl
lsl
pushl
es
arpl
mov
jb
mov
jp
out
sub
in
rcrb
das
clc
pushl
cs
pop
inc
xchg
icebp
cli
xor
dec
scas
push
lods
call
aam
into
mov
stc
pusha
fistps
xchg
inc
sub
iret
sub
jg
jg
mov
mov
lret
pop
cld
sbb
dec
pop
inc
call
es
es
fsts
sbb
sahf
es
push
je
pop
loope
aam
ljmp
cmpsl
xchg
adc
mov
mov
add
clc
decl
test
icebp
loop
imul
decl
out
push
xchg
dec
mov
mov
ret
shlb
ja
pop
pop
adc
push
sbb
outsb
mov
ljmp
icebp
cmp
in
sub
push
mov
and
icebp
int3
push
std
incl
enter
xor
popa
mov
jmp
mov
insb
hlt
sbbb
or
xchg
push
movl
pushl
adc
inc
cli
add
xchg
cmpsb
cmp
fists
cmpsb
or
ss
pop
or
insl
call
test
dec
lahf
cli
mov
add
sbb
xchg
jmp
push
mov
mov
push
push
js
mov
mov
jbe
cmpl
and
fs
or
loop
pushl
sbb
mov
xchg
pop
or
push
adc
stos
rcrl
mov
push
insl
cmp
mov
sbb
push
pop
lcall
cmp
popa
icebp
sarb
mov
and
out
dec
je
mov
cmp
mov
mov
lret
mov
lcall
cmpsb
mov
add
push
mov
inc
mov
mov
jbe
out
sub
adc
jg
add
fisttpl
cmp
mov
cmp
call
jmp
loopne
pop
jbe
insl
shr
rcll
decl
leave
int3
lret
dec
xchg
push
ss
add
mov
or
jg
popf
xchg
adc
jg
pusha
push
fsubl
sbb
cmp
cmc
xchg
add
aas
mov
popa
mov
mov
dec
clc
inc
lds
pop
adc
subb
pushl
cmp
jmp
add
jmp
jno
imul
add
adc
add
nop
jecxz
inc
cmpl
dec
popa
clc
ret
and
and
shlb
push
and
pushl
repnz
add
or
dec
xchg
or
gs
inc
sub
movsb
mov
ljmp
mov
dec
dec
and
mov
into
nop
and
cmp
mov
sub
push
imulb
mov
dec
ljmp
clc
jecxz
lret
test
stos
adc
dec
ss
lock
call
push
in
inc
xchg
xor
add
push
lea
loope
aam
push
mov
test
mov
incl
inc
or
loopne
pop
lds
adc
mov
rol
js
and
insl
add
decl
cld
xlat
sub
xchg
lahf
scas
pusha
cwtl
sbb
push
shlb
mov
mov
inc
fstpt
jbe
ss
loope
ffreep
jne
cld
fstpl
adc
das
insl
jne
lock
orl
fdivrs
aaa
jo
mov
cld
cmc
neg
mov
mov
fcompl
add
and
xchg
adc
fptan
jne
lcall
aaa
cli
pushl
push
scas
and
test
mov
and
outsl
jbe
or
shlb
or
repnz
stos
das
aam
dec
or
cmp
incl
test
or
xchg
adc
jmp
icebp
sub
mov
aaa
jl
push
outsl
addb
rclb
adc
mov
sbb
and
dec
decl
sbb
sub
push
lret
or
cmp
lahf
or
hlt
push
or
jmp
lret
dec
mov
bound
fcomip
pushl
stos
or
popf
mov
fdiv
stos
in
mov
xor
jmp
lods
push
out
cmp
loopne
je
inc
jmp
cmp
dec
aaa
jmp
decl
in
in
xor
mov
repnz
jo
jmp
enter
incl
rorl
push
jecxz
mov
or
gs
pushl
cld
nop
rcrl
ret
insb
mov
xchg
mov
int
decl
pop
push
push
int3
xchg
mov
pop
test
dec
call
dec
add
sbb
imul
cltd
adc
jl
stos
dec
mov
movsb
decl
mov
xor
rorb
sbb
dec
test
xor
sub
fistpll
fdivr
xor
lea
data16
mov
fs
dec
gs
pushl
sub
push
out
add
push
sbb
fisttpl
dec
xchg
imul
dec
mov
mov
adcl
cmp
mov
sbb
xor
xlat
mov
lret
mov
jmp
decl
shrl
inc
test
mov
int
sub
mov
shl
dec
cmp
cmp
push
pop
jno
dec
negb
xor
sti
jp
mov
dec
stos
fucom
jmp
movsb
addb
sbb
fistpl
cmp
pushf
enter
jge
sbb
mov
dec
sub
push
imul
addr16
pop
int3
mov
fsubl
sti
fildll
and
fwait
or
jg
stos
rcl
sub
shr
dec
jg
dec
mov
push
in
push
cli
jnp
lret
stos
cwtl
aaa
fcmovnb
incl
jecxz
cmp
mov
cmpsl
mov
push
lea
push
cmc
push
jmp
jle
cmp
sub
lcall
fwait
cld
shlb
pop
mov
xor
sub
or
jge
sarl
fbld
ljmp
or
jne
dec
js
lods
lds
dec
xchg
cmp
addb
call
in
movsb
pop
and
dec
pop
ret
int3
sub
stc
adc
inc
mov
call
or
cltd
add
fnstenv
sbb
jmp
pop
mov
sub
add
inc
cmpb
sbb
aad
cmp
aad
repz
into
mov
mov
enter
sub
ljmp
in
call
jnp
xchg
pop
mov
sbb
xor
addl
outsl
cmp
call
fs
test
add
and
cmp
mov
aam
and
push
sub
cld
pop
negb
pusha
and
push
pop
cmp
xchg
and
or
out
cmp
dec
push
add
cwtl
cli
loopne
es
cli
push
dec
push
inc
push
push
fimuls
in
std
dec
adc
jmp
pop
inc
mov
xlat
and
out
je
add
loopne
mov
mov
sti
adc
jb
add
add
in
dec
arpl
je
dec
pop
incl
push
sbb
push
ds
xor
add
mov
push
adc
cmp
incl
in
into
and
dec
sub
test
pop
adc
add
inc
imul
jmp
je
xor
mov
adc
decl
dec
inc
shrl
stos
inc
movsl
sub
mov
dec
lcall
incl
cmp
shll
xchg
roll
jecxz
or
inc
push
sti
std
incl
fsubr
stos
sti
mov
adc
lock
sub
sbb
pushl
mov
lret
xchg
xchg
sbb
shlb
ja
sbb
inc
adc
insb
pop
ljmp
imul
add
leave
dec
inc
not
imul
sti
xor
pusha
pop
test
aad
decl
sub
rolb
push
inc
sub
loop
mov
or
push
inc
cmp
insb
ljmp
sub
fistl
xchg
out
mov
fs
aaa
dec
and
mov
pop
dec
mov
dec
call
jmp
xor
lret
jmp
cmpsl
cmp
int3
imul
mov
dec
mov
inc
xchg
cmc
fcomip
ljmp
adc
pushf
xchg
sbb
in
push
hlt
mov
adc
notb
call
repz
push
pop
pop
fadd
and
pop
mov
leave
rcrb
xlat
or
mov
inc
sub
test
dec
fsubl
mov
add
fstpt
pop
int3
mov
jl
adc
jecxz
mov
fs
jb
mov
adc
inc
mov
inc
xor
cmp
into
dec
mov
lods
in
xchg
lcall
add
vmread
jb
or
jno
ret
dec
mov
sbb
adc
mov
jno
lods
xor
cld
push
mov
sar
lcall
push
mov
lods
jo,pn
ljmp
mov
lretw
sub
lcall
ljmp
imul
sar
std
pop
xlat
xor
aas
adc
sub
decl
stos
js
ja
mov
imull
xchg
fs
push
pop
scas
pop
xor
jl
pop
cmp
outsl
test
mov
and
mov
push
cwtl
mov
in
push
push
push
mov
jo
mulb
or
sahf
mov
inc
add
hlt
loop
and
dec
mov
clc
lret
enter
js
call
or
sub
mov
shrb
sti
enter
loopne
mov
js
push
push
sbb
call
sahf
cwtl
mov
lock
repnz
push
ja
mov
adc
mov
sarl
test
adc
push
test
dec
lahf
jnp
push
aam
out
pusha
cmpsb
lcall
cli
or
cmpsb
sbb
jno,pn
push
pop
sub
aam
enter
xchg
mov
ret
dec
cmp
sbb
dec
mov
mov
loop
pop
jg
movsb
jl
xor
popa
popa
or
inc
lods
push
outsb
adc
in
adc
ljmp
or
lret
pop
inc
dec
lods
adc
inc
inc
pop
rcrl
ja
sarl
jns
repz
jmp
fldt
ja
mov
adc
pusha
cmp
aaa
push
push
inc
scas
fs
mov
decl
in
or
jne
mov
outsb
fwait
sub
add
dec
sbb
lea
or
rep
movsb
cmp
add
repnz
sbb
jp
loopne
ljmp
je
lret
add
mov
in
outsb
insb
push
sub
das
leave
xlat
test
in
cmp
xchg
adc
sbb
fbld
add
mov
aam
push
inc
inc
adc
push
push
xchg
inc
cwtl
fs
xchg
add
repz
and
stos
or
lahf
stos
mov
int3
ror
inc
jo
and
decl
mov
fdivr
mov
inc
add
rolb
ljmp
ret
shll
and
and
in
hlt
inc
mov
mov
push
and
arpl
xor
ss
add
pop
lcall
xor
sub
lcall
dec
jecxz
in
and
add
stos
inc
xor
or
xor
dec
mov
sub
or
mov
cltd
cli
fcomip
push
jo
fimull
test
repz
dec
call
mov
sbb
shl
orb
sub
into
fsubp
mov
shrb
pop
or
cmc
andl
or
test
decl
je
cmp
lock
pop
ret
dec
xchg
jp
cmp
and
sub
push
lods
push
push
mov
lcall
inc
ss
inc
sahf
cs
es
push
imul
insl
push
dec
movsb
stos
in
and
decl
inc
xor
inc
or
mov
sub
call
ret
outsb
lcall
add
in
jmp
jmp
jmp
push
push
dec
xchg
scas
es
cmp
stos
and
xchg
sub
fcmove
and
push
xchg
mov
test
add
xor
xchg
push
inc
pusha
addl
pop
stos
daa
mov
std
pushl
icebp
adc
fnstenv
xchg
mov
sbb
dec
daa
cld
sub
rclb
iret
mov
test
ja
fwait
inc
pusha
inc
or
sub
idivb
repnz
sub
outsb
popl
mov
mov
sbbl
mov
pusha
add
lcall
das
mov
or
scas
aas
add
cmp
and
sub
adc
mov
mov
inc
ret
cmp
pop
mov
push
clc
add
jge
imul
leave
jnp
insl
xchg
shl
or
adc
and
and
ss
aas
movsb
or
push
gs
dec
and
cmpb
cwtl
nop
test
imul
add
ljmp
mov
jmp
xchg
adc
in
test
jecxz
jo
outsl
shl
cmp
fs
mov
mov
icebp
je
lock
insl
and
adc
pop
cmpsb
sub
gs
inc
mov
fs
mov
cmp
sbb
outsb
pop
lret
adc
into
dec
es
push
jno
cld
adc
cld
jb
dec
pop
jbe
mov
push
ljmp
lea
mov
scas
or
mov
rorb
push
cwtl
in
hlt
shl
pop
dec
xlat
jmp
sub
and
js
mov
add
cmpsl
cmpsl
sbb
aaa
mov
jg
xchg
ljmp
jl
push
pop
lret
outsl
dec
cmp
inc
xchg
je
jle
ret
and
jo
inc
add
scas
sbb
rol
shlb
cmp
decl
outsl
mov
clc
jmp
jecxz
jo
cwtl
jo
jmp
or
push
or
mov
inc
imul
add
lcall
or
adc
call
push
or
cli
repz
dec
test
jne
decl
sub
fisubs
mov
push
in
test
ljmp
xchg
ss
mov
loop
jo
sbb
hlt
out
add
clc
ret
icebp
ret
pusha
mov
inc
les
ljmp
mov
mov
jns
inc
jle
sbb
push
dec
mov
sahf
ljmp
hlt
movsb
jle
pop
pop
movsb
and
iret
push
inc
adc
incl
inc
cwtl
and
add
sub
ud2
int
loopne
iret
pushf
outsb
or
adc
cs
call
iret
add
lds
in
loop
and
dec
std
or
dec
nop
xchg
push
xor
call
nop
shl
mov
mulb
aas
pop
sub
jne
mov
das
test
or
call
and
cmp
aam
pop
int3
push
lock
mov
and
stos
push
sub
add
in
jp
or
pushl
inc
fsts
sbb
cs
xchg
pop
jo
mov
shlb
mov
xor
decl
incl
push
sbb
jmp
pop
insb
jno
cs
mov
or
push
lcall
sub
repz
andb
adc
lahf
mov
mov
inc
pop
incl
push
pop
daa
dec
insl
adc
call
mov
mov
insb
outsl
repz
sbb
jg
decb
jae
cmp
push
mov
adc
insl
jp
cmp
or
pop
xchg
bound
lret
xchg
andb
out
xor
jo
mov
das
fs
jmp
test
in
rcrl
test
dec
lds
jbe
jno
add
mov
cld
sub
repnz
ss
push
ret
fisttps
dec
arpl
xor
aad
outsb
inc
icebp
mov
pusha
or
xor
mov
pop
lods
xor
in
insb
xor
ret
push
sbb
mov
test
std
sub
mov
jb
ljmp
inc
in
bound
data16
and
les
out
sub
mov
enter
cmc
or
call
mov
push
lods
cmc
cmc
lcall
xor
adc
fbld
inc
movsl
jo
cmp
add
pop
or
pop
icebp
lcall
lea
and
mov
push
mov
mov
xchg
mov
test
iret
nop
ret
addr16
in
lcall
cwtl
decl
iret
push
andb
std
jb
and
mov
lods
enter
data16
jmp
adc
faddl
mov
adc
rclb
cmc
pop
xor
cmp
incl
dec
sub
jp
and
dec
shlb
mov
xchg
out
cs
sbb
dec
jmp
lcall
xor
jbe
in
pop
imul
push
xlat
negl
out
cwtl
outsb
bound
sar
call
sbb
sti
xlat
ds
hlt
mov
fbld
hlt
push
jno
or
or
push
pushl
mov
sub
outsb
xor
dec
xchg
add
push
std
add
xor
decl
dec
imull
aad
call
xor
ficoml
imull
xor
lds
mov
push
sub
clc
clc
repnz
sub
jecxz
aad
cld
mov
push
js,pn
push
jmp
clts
push
jo
dec
rorb
ljmp
outsb
mov
sbb
push
dec
jns
push
mov
jbe
fucomp
sub
add
sbb
addr16
ret
mov
outsb
fildll
arpl
mov
and
nop
sub
cmc
cld
sub
adcb
push
add
lcall
lods
push
mov
pop
or
repz
dec
fs
outsl
sbb
andl
jge
test
pushl
cld
cmpsb
xchg
enter
cmc
pushl
cmpsb
push
and
imul
lock
lcall
pusha
xor
dec
push
jo
inc
push
cmp
xor
sub
std
inc
and
cmpsb
dec
hlt
push
into
cltd
sbb
es
rcrb
ret
push
in
push
jecxz
mov
incl
dec
dec
cmpsl
es
pop
cmp
dec
aas
xor
incl
sub
push
and
mov
incl
insb
fwait
ss
ret
ror
add
inc
cwtl
push
fidivl
xchg
add
cmp
inc
and
lds
movsb
xchg
dec
xchg
cmp
mov
mov
jne
inc
bnd
add
ljmp
lock
lret
mov
imul
xor
push
loopne
add
sbb
add
add
ljmp
mov
xor
scas
mov
or
mov
jecxz
jo
dec
movsb
out
mov
or
stc
pop
cli
je
cbtw
popa
das
cmp
push
lcall
decb
ret
dec
sub
cmp
xor
outsl
dec
lcall
pop
jb
adc
jle
mov
in
xor
push
cltd
xchg
jbe,pn
enterw
push
leave
jmp
call
fildll
pushl
packssdw
lods
rol
adc
jmp
fisttps
jne
mov
pushf
bound
call
dec
test
std
movsl
fwait
insb
in
arpl
test
mov
mov
adc
jmp
push
sub
outsb
mov
sahf
jg
xchg
in
mov
pop
fwait
ljmp
push
push
popf
adc
mov
adc
int3
in
push
sub
xor
addl
pushl
enter
popa
adcl
mov
bound
add
mov
lcall
pop
mov
and
lods
jp
push
in
insb
ss
xor
mov
jmp
or
pop
jns
xchg
mov
jmp
data16
pop
jmp
add
into
mov
pushf
data16
fmulp
pop
int
mov
lahf
inc
mov
pop
inc
adc
and
stc
cmp
fcom
and
or
sbbl
je
jne
cltd
sub
sti
pop
out
ss
call
mov
shr
inc
scas
cs
push
mov
mov
lcall
sub
jno
inc
insb
inc
repnz
mov
dec
mov
mov
pusha
sbb
sbb
mov
jg
test
ss
push
mov
jo
dec
lods
pushf
mov
repz
dec
xor
pop
cli
xor
fdivrs
sti
xor
jns
mov
cmpsl
mov
add
jmp
pop
out
xor
ret
in
jne
xacquire
sub
lcall
mov
ret
data16
jmp
lds
dec
dec
push
out
mov
xchg
sub
loop
call
fs
pop
inc
andb
cmc
mov
add
or
decl
fdivrl
push
out
jp
dec
imul
adc
or
lock
mov
imul
fwait
jno
scas
jecxz
pop
dec
mov
loop
movsb
decl
mov
jno
es
mov
and
cmpsl
dec
sbb
scas
or
ret
xlat
mov
xchg
mov
cmpsb
sbb
jge
fstps
loope
fcompl
pop
push
hlt
enter
stc
mov
cmc
pusha
lcall
sarb
je
mov
repz
gs
mov
xor
jne
sbb
call
ja
cmp
cwtl
ret
mov
inc
xor
out
out
add
rorl
icebp
incl
scas
adc
ss
push
outsb
shl
es
xchg
lcall
fisttps
arpl
push
adcl
pop
xchg
xacquire
mov
jl
push
aam
jg
lcall
push
std
cmp
divl
add
fcoms
daa
mov
mov
jmp
hlt
mov
add
sarb
pop
pusha
pop
xchg
lods
repz
test
xchg
lret
or
cmc
cmp
xchg
out
lcall
lock
enter
pop
xchg
fildll
pop
dec
push
fsubrl
mov
imul
adc
jmp
adc
pop
lods
ss
cmp
gs
inc
xchg
add
pop
bound
sti
pushl
pop
movsb
clc
daa
mov
in
shll
cmp
es
test
jmp
inc
dec
and
sbb
scas
push
jge
daa
cld
fwait
loop
jg
dec
inc
fs
xorl
js
mov
mov
mov
push
mov
nop
jnp,pn
mov
jmp
icebp
cmp
lcall
inc
dec
fistpl
jae
fldt
lret
leave
imul
enter
add
xchg
incl
or
adc
and
mov
dec
js
fistpl
push
mov
jns
aam
jecxz
mov
cmpb
xchg
mov
pop
mov
call
jle
jo
shlb
add
dec
jo
ret
lahf
inc
sbb
pop
mov
daa
shlb
fwait
cs
push
xchg
adc
movsl
dec
mov
push
add
and
das
incb
xor
cmp
xorl
cli
testb
mov
mov
out
negb
adc
push
test
push
sbbb
fwait
aaa
imul
dec
ja
dec
mov
mov
fisubrl
lods
lods
addr16
not
and
aad
pusha
cmp
lcall
inc
in
and
repnz
ret
call
inc
ficoml
sbb
sub
cmp
hlt
call
rsqrtps
notb
aas
jp
push
cs
out
pop
mov
push
pusha
dec
loope
xlat
jnp
mov
rolb
cli
mov
ret
shrb
lds
into
or
popf
jae
push
pop
pusha
je
lods
xchg
je
push
sbb
loope
adc
lcall
pop
in
pop
mov
leave
xlat
xchg
xchg
cmp
add
dec
adc
mov
ss
fcomp
cli
jmp
xor
sbb
mov
adc
add
push
xor
xchg
mov
xor
fucom
call
inc
xchg
stc
mov
xchg
xchg
enter
shll
addr16
stc
and
inc
or
jmp
jmp
jge
rcrb
fnop
fs
mov
fxam
xlat
scas
and
outsb
push
mov
cli
lcall
pop
imul
out
ja
jmp
mov
ljmp
sub
pushl
loopne
jno
mov
sbb
loopne
adc
jp
sbb
into
adc
pop
mov
in
leave
push
sbb
or
shll
sbb
push
push
lahf
jl
mov
xlat
shll
adc
incl
pusha
subl
test
cmc
aaa
push
sar
inc
out
sub
xchg
scas
xchg
repnz
pushl
popa
push
adc
out
lret
scas
mov
sbb
mov
adc
sbb
add
daa
ss
pop
insl
inc
adc
fbld
pop
test
out
pushl
push
es
insb
xorl
rcr
xchg
js
lds
jb
pop
fnsave
call
aad
repnz
and
mov
pop
out
shll
lret
movsl
sbb
cmc
mov
pop
or
add
and
icebp
or
mov
cli
or
popa
mov
lcall
xchg
test
push
leave
pop
jp
mov
mov
jbe
ljmp
inc
scas
fimuls
ljmp
fcoml
inc
int3
xor
pushf
dec
or
pushl
out
push
icebp
adc
sbb
adc
in
mov
mov
out
inc
or
add
pop
aad
jp
aad
push
pop
push
paddw
dec
jnp
adc
push
push
dec
adc
test
js
jecxz
inc
push
fsubrs
les
cmp
jmp
dec
lock
xchg
into
out
push
pop
leave
mov
call
lea
xchg
sub
jns
cltd
push
popf
push
xor
insl
fisubl
jns
jl
imul
loop
aad
cmp
pop
xlat
sti
jge
gs
js
cmp
sub
pop
test
aad
mov
lcall
mov
add
ret
sbb
xlat
incl
sbb
sub
push
frstor
inc
push
push
xchg
leave
dec
in
dec
pop
push
and
jg
insl
dec
push
call
daa
scas
fwait
call
mov
arpl
mov
pushf
je
aaa
mov
leave
push
and
js
jmp
je
sbb
cmpl
inc
call
adc
fcoml
out
jle
cmp
pop
mov
or
mov
and
cmp
sub
push
sahf
inc
xchg
out
clc
or
mov
inc
test
decl
mov
imul
orl
test
xor
inc
inc
pop
pop
inc
add
jo
xor
push
mov
movl
cmp
mov
es
dec
xchg
in
pushf
es
stos
or
jb
fisttpl
imul
call
pop
or
pop
repnz
push
jb
mov
xor
into
push
jne
aam
mov
jecxz
lahf
dec
dec
cmp
jmp
mov
mov
je
push
jg
call
pop
and
dec
inc
cwtl
xchg
data16
xor
adc
mov
andb
cli
dec
ljmp
pusha
mov
scas
xor
scas
mov
fisttps
insb
sbb
push
lds
inc
sbb
lret
incl
mov
je
dec
hlt
fdivrs
test
push
xchg
xchg
mov
rcl
in
sub
and
push
jp
ds
jl
xor
call
xchg
je
pop
mov
pop
es
dec
xor
mov
iret
aaa
test
xor
orb
dec
xchg
jecxz
pop
mov
ret
addr16
call
ljmp
cltd
inc
xchg
jnp
add
punpckhdq
arpl
and
call
mov
xor
xor
scas
movb
ss
ljmp
out
popa
or
push
lods
dec
add
push
stos
fstps
imul
incl
daa
adc
jmp
xchg
sarb
mov
pushf
adc
inc
aaa
push
iret
pushf
ljmp
repz
inc
xor
adc
adc
add
addb
outsb
mov
rclb
xor
xchg
ljmp
sub
inc
movsb
add
mov
cmp
dec
notb
fmul
mov
das
mov
jmp
imul
dec
rolb
push
fnop
incl
xchg
add
aad
pop
inc
pop
mov
add
pushl
push
stos
addb
sbb
push
mov
dec
ret
addr16
and
mov
jmp
mov
ss
mov
jne
test
mov
jo
fs
xor
das
sar
stos
xor
and
add
sti
mov
insl
mov
incl
cmpsb
mov
out
dec
bswap
and
jb
jae
mov
adc
bound
or
cmp
call
cmpsb
jge
jg
aam
std
lods
test
mov
movsl
fmul
decl
jp
mov
xchg
mov
cmpsb
decl
loop
les
mov
adc
pop
cli
jp
sub
cmpsl
mov
lock
aam
cmp
js
dec
imul
ror
push
xor
outsl
xchg
xor
cli
fcoms
fndisi(8087
jnp
and
xchg
outsl
lds
push
cmpsl
push
dec
mov
jg
mov
push
loopne
jbe
push
dec
out
xchg
sub
or
mov
shr
lret
mov
in
and
mov
mov
loope
jmp
lahf
adc
xchg
cmpsb
mov
lds
stos
popa
data16
adc
push
int
sbb
insb
jne
imul
rcrl
jle
je,pn
xchg
xchg
add
jo
push
ret
inc
lret
mov
std
fdivl
movsl
or
lock
and
scas
das
mov
ss
jg
adc
lock
inc
add
ret
jge
jno
out
cmp
dec
decl
ja
std
mov
aam
test
movsl
inc
imul
arpl
popf
nop
mov
mov
xor
inc
jae
lret
mov
sbb
jg
mov
adc
call
in
aam
stos
add
mov
xchg
scas
loopne
cli
call
mov
jge
xchg
clc
repnz
xor
mov
xlat
enter
sbb
push
fsubl
mov
sbb
jge
adc
push
inc
mov
mov
movsl
int
lcall
xor
into
cltd
shrb
cwtl
jmp
mov
sbb
sbb
mov
lret
call
stc
pushf
out
imul
out
mov
inc
in
hlt
push
lahf
fsubl
xchg
mov
nop
cmp
repz
int
mov
lret
jg
push
lea
cmc
inc
jg
lahf
dec
and
sbb
call
lods
test
xor
sahf
fcomps
repz
mov
inc
and
shlb
pushf
leave
jmp
fistpll
loop
mov
and
jge
aaa
repz
add
loopne
push
fnstcw
int3
sbb
sahf
sub
mov
pop
arpl
mov
cwtl
repnz
sar
sub
inc
outsl
stos
jno
xor
xchg
pop
cmp
lcall
daa
jmp
push
jge
jb
jns
es
incl
call
mov
ret
and
in
inc
push
dec
inc
push
inc
inc
cmp
dec
add
incl
add
mov
xlat
and
sbb
rolb
jo
adc
loope
dec
les
imul
push
movsl
repz
out
mov
pop
push
push
insb
data16
adc
call
push
and
xor
dec
out
ret
sarl
and
push
pop
mov
and
push
mov
add
xchg
inc
xchg
call
dec
inc
pop
mov
mov
jae
jae
int3
xchg
sbb
nop
jae
dec
inc
adc
fildll
addl
mov
jns
out
jne
sbb
ljmp
sar
inc
mov
loop
sbb
sub
aas
mov
inc
insb
mov
into
pop
sbbb
test
lcall
gs
adc
icebp
insb
and
xor
cld
aam
cli
jg
and
ja
aam
jp
and
mov
push
dec
add
cmp
mov
aaa
cmp
outsb
and
push
fucom
js
mov
xor
and
icebp
cmp
lock
sarl
mov
cmpsb
push
sub
xor
push
bound
xorb
or
pop
push
out
out
inc
pop
adc
pop
and
test
push
addr16
pushl
subl
xchg
and
testl
ss
pushl
push
mov
mov
adc
ja
sub
cmp
out
ds
xor
out
and
leave
inc
insb
sub
add
adcb
loopne
addr16
pushl
sub
push
fimuls
mov
sub
jg
repz
push
js
shl
push
int3
adc
jecxz
movsl
push
push
iret
xchg
rcrb
js
sub
jbe
loopne
shll
jmp
mov
adc
adc
sbb
adc
incl
push
sub
push
js
xchg
incl
mov
dec
hlt
and
xor
sbb
jg
lock
dec
lcall
mov
inc
insl
sub
call
xchg
pop
int
adc
test
add
cmp
addr16
cld
sub
and
decl
pop
pop
or
sbb
jb
leave
cmpsl
sbb
adc
hlt
xchg
xchg
incl
add
mov
and
mov
xchg
jae
orl
cmpsl
xchg
aas
and
push
add
loopne
outsb
ret
add
cwtl
jne
add
push
sbb
dec
icebp
pop
fwait
les
jg
xchg
pop
cmp
scas
addb
cmp
xchg
dec
xchg
mov
fisttps
aas
xor
hlt
addl
add
test
loopne
push
inc
xchg
jmp
dec
add
shlb
push
push
inc
outsb
pop
push
mov
ss
addl
mov
rolb
mov
iret
xchg
stos
decl
lds
je
mov
cltd
rolb
lock
jg
lcall
bound
add
dec
mov
mov
stos
call
std
inc
lock
pop
xorb
pop
shll
pop
add
dec
adc
xchg
and
xchg
sar
lcall
test
imul
xchg
push
mov
sbb
push
jae
xor
cld
cmp
pop
inc
xlat
sbb
push
sbb
inc
push
lcall
fcoml
dec
test
adcb
lahf
push
stc
mov
testl
mov
ja
lcall
inc
jae
or
xchg
pop
ret
xor
icebp
sbb
xchg
jp
sbb
decl
les
adc
jo
mov
movsl
and
sbb
lcall
add
pop
xchg
push
or
in
adc
ficompl
andl
lock
pushl
fcompl
mov
inc
test
mov
pop
movsl
inc
or
dec
adc
ljmp
or
jns
ljmp
sub
add
nop
sbb
ljmp
int3
pop
and
xchg
nop
jns
mov
pop
cld
mov
push
mov
pop
shll
pop
push
stc
dec
cmpsl
inc
add
pushl
and
aas
roll
repz
add
cmp
nop
fwait
aas
lock
ljmp
cmp
sub
inc
popf
fistl
jl
mov
xor
mov
fldcw
inc
mov
pushl
xchg
xor
mov
outsl
icebp
cs
add
inc
es
addr16
add
and
filds
xor
addr16
xor
and
pop
mov
shlb
jg
sub
fnsave
cmp
js
jp
push
lods
inc
sub
lea
lods
aad
push
jae
stos
test
lcall
jmp
imul
mov
outsb
fwait
sub
testb
cmp
loopne
repz
fisubl
adcb
and
loop
pop
push
mov
ret
add
sbb
in
dec
pop
sbb
pop
gs
test
adc
ret
push
adc
dec
mov
ljmp
loopne
xchg
add
push
cmpsl
and
add
aaa
xchg
test
dec
inc
and
xchg
pushl
std
sbb
xchg
sbb
sub
out
jae
test
aas
loop
sbb
adc
repnz
jl
adc
mov
sub
dec
call
movsb
xor
sbbl
lcall
or
dec
mov
pop
repnz
fs
sbbb
xor
sbb
push
xchg
dec
inc
je
sti
hlt
jns
cmp
xchg
inc
push
jae
xchg
andb
incl
imul
jne
mov
decl
jl
mov
mov
leave
xor
clc
mov
ljmp
xchg
fildll
adc
addb
jns
in
xor
mov
sahf
xor
adc
test
add
sbb
movsl
xchg
mov
jmp
and
aam
mov
push
popa
push
hlt
xchg
pop
cld
jae
sbb
xor
ficompl
inc
dec
inc
mov
es
inc
dec
inc
mov
mov
cmp
sbb
ljmp
decl
pop
fs
or
cmp
stc
pop
into
adc
or
jg
shlb
fs
out
adc
fcoms
pop
fsubrs
pop
jmp
std
popa
jns
out
cli
lcall
xchg
shll
push
jo
ficomps
adc
inc
push
stos
jo
ljmp
movsb
mov
pop
jne
sub
sbb
sbb
and
lds
push
xor
inc
push
decl
jae
bnd
popa
adc
dec
xchg
int3
add
add
jle
ret
adc
leave
push
call
loope
ds
inc
dec
inc
nop
and
pusha
je
push
dec
ja
insl
add
jmp
mov
adc
fwait
jae
push
insb
repz
mov
inc
push
stc
sbb
ja
outsl
and
lret
xor
addl
cli
mov
incl
sbb
pushf
mov
sbb
xor
pop
jle
ljmp
mov
mov
mov
xchg
push
insb
hlt
stos
cmpsb
daa
and
lcall
sbb
aam
jmp
mov
lcall
push
ret
adc
cld
pushl
jl
mov
pop
pop
add
pusha
lret
fwait
test
sub
ficoml
test
icebp
pop
mov
fcomip
or
jae
and
aaa
push
aad
adcl
pushf
aaa
pushf
push
cmp
or
mov
or
inc
stos
fwait
and
cs
or
mov
fcomps
push
mov
inc
sti
sub
xor
stos
push
sub
jle
sub
imul
xchg
inc
or
adc
js
popa
adc
mov
fnstenv
pushf
mov
pop
inc
loope
xchg
movsl
push
inc
xchg
push
sbb
push
mov
dec
pushl
cld
pushl
cmp
jno
movsb
jns
mov
mov
dec
xchg
dec
inc
sbb
in
push
std
incl
lret
adc
pop
mov
adc
shrb
jge
mov
cld
incl
xor
add
incl
inc
addr16
repz
mov
in
mov
test
icebp
ss
xchg
xchg
sub
inc
push
pop
test
aaa
xchg
jo
cmpsl
cmp
jno
inc
mov
rcr
insb
jmp
cmp
bound
adc
aam
std
inc
adc
add
add
adc
inc
mov
enter
adc
sbb
arpl
aaa
xchg
adc
lds
stos
insl
call
roll
test
insl
icebp
push
movsb
outsb
jg
mov
mov
pop
cmpsb
dec
add
aam
daa
decl
call
inc
adc
lods
fs
jecxz
sub
push
popf
inc
mov
cmpsb
mov
ljmp
inc
int
sbb
outsb
sub
lods
pop
xchg
int
dec
jns
sub
inc
push
mov
jnp
add
jmp
fldt
js
bound
aas
std
outsb
int
addr16
pop
push
sbb
or
fidivs
mov
fwait
xchg
decl
loope
pushl
xor
dec
jb
xlat
jo
push
dec
inc
popa
testl
fisttpll
mov
loope
out
daa
mov
iret
data16
xchg
jle
push
enter
sahf
mov
push
out
orb
add
inc
or
xchg
mov
cmc
pop
lock
sub
add
ljmp
mov
mov
lock
idiv
call
xorb
fs
in
mov
lods
sub
nop
adc
mov
mov
pop
push
dec
stos
push
mov
in
mov
fisubs
xchg
adc
sarb
xchg
and
mov
sub
xchg
cs
jg
sbb
ja
outsl
fsubr
fcmovbe
and
imul
sub
incb
xchg
pushf
out
push
inc
mov
out
fistl
gs
and
lock
push
mov
pop
push
pop
push
das
outsb
sbb
cmpl
je
and
rolb
cmp
fisubs
xchg
mov
mov
scas
push
and
movsl
xor
pop
test
and
outsb
mov
stos
and
int3
les
xchg
add
stos
mov
std
adc
push
xor
xchg
icebp
ljmp
add
xchg
cmpsb
adc
dec
repnz
ja
clc
decl
push
aad
xchg
cmc
in
in
movl
lcall
aas
in
and
loop
cmp
jb
pop
or
pop
jle
jbe
xchg
dec
xor
hlt
cld
pushl
pop
subl
ja
addr16
ljmp
inc
cmp
loope
rcrl
mov
lods
stc
xchg
mov
call
or
outsl
loopne
incl
jl
push
test
mov
fwait
insb
test
out
js
mov
adc
addb
sarb
sbb
rcr
call
lods
lea
xor
mov
int
add
movsl
adc
jge
mov
call
mulb
jle
aas
xchg
sub
sbb
inc
jmp
in
mov
sub
push
mov
mov
orb
lahf
in
sub
sub
lods
fwait
ret
negb
xor
inc
or
xchg
aam
jo
rolb
loopne
sbb
and
outsl
cli
lcall
and
adc
jbe
sbb
dec
adc
sarb
mov
mov
in
call
aas
insb
scas
clc
jno
cmpb
jnp
in
add
or
mov
xchg
repnz
shrl
mov
jmp
loop
cmp
shll
lret
repz
mov
jnp
mov
pop
icebp
aaa
inc
lcall
and
mov
pushl
add
sbb
mov
push
dec
mov
add
leave
xchg
movlps
pushf
cltd
jmp
cmc
lcall
jno
sar
mov
out
decl
cmp
fdivs
mov
fnstsw
and
lret
ss
pusha
shlb
mov
lret
jo
pushl
push
and
call
add
clc
scas
subb
pop
add
imul
inc
jmp
cmpsl
pop
sbb
pushf
mov
into
mov
adc
jg
or
orl
cmpl
cwtl
and
mov
adc
and
mov
fisubrl
ret
mov
and
xor
inc
or
pop
jbe
into
scas
repz
jg
incl
mov
pop
mov
movsl
mov
mov
fists
cld
enter
jb
stos
xchg
hlt
jnp
inc
cwtl
cmp
ucomiss
nop
ljmp
sbb
mov
fisubrl
mov
mov
stos
int3
movsb
xchg
ljmp
push
movsb
jmp
stos
sub
out
sub
test
insl
xlat
fcomps
and
or
movsl
ss
or
test
in
or
jo
ljmp
inc
jne
mov
add
xor
xchg
push
sarb
in
in
test
fnstenv
cld
mov
push
lock
add
int3
cld
dec
sub
in
ljmp
pop
cmc
or
push
cmp
mov
mov
fdivrs
mov
fldcw
push
jo
cmp
aam
imul
pop
sub
shl
or
filds
cmp
adc
inc
ljmp
add
add
xor
adc
cmp
decl
in
jae
fdivrl
out
jb
dec
scas
push
pushf
mov
cmp
dec
das
rcll
cmpsl
jl
lock
jns
xchg
pop
mov
test
inc
pusha
sub
mov
out
cli
sti
mov
lcall
or
dec
sub
add
jmp
shrl
mov
int3
sbb
clc
xor
aaa
fildl
jb
lods
call
sbb
or
aaa
sub
aaa
negl
test
dec
and
dec
xor
adc
cmc
scas
clc
push
jnp
pop
arpl
mov
dec
jmp
push
add
mov
call
jmp
mov
xor
pop
je
or
ds
fisttps
mov
add
arpl
scas
xchg
add
lret
sbb
fdivrs
cld
into
fmull
mov
or
fbld
int
fistpl
jecxz
mov
dec
sarb
jno
mov
rorb
mov
pop
mov
mov
cmpl
aad
mov
push
xlat
add
ljmp
andl
int3
cmpsl
cmp
xor
js
adcb
push
adc
mov
pusha
xchg
fimull
in
sbbb
adc
and
dec
inc
sbb
xchg
test
and
adc
ret
lahf
mov
mov
and
imul
fsubr
leave
dec
jle
leave
aad
mov
mov
cmp
cli
call
cmpsb
push
ret
and
push
icebp
and
pop
inc
xchg
mov
test
cmpsl
mov
sub
test
jle
mov
xor
push
adc
dec
jl
jg
cmpsb
mov
mov
aaa
mov
add
mov
cs
outsl
clc
ljmp
cmp
add
push
inc
lods
xlat
jno
cs
popl
cld
ja
sbbb
cmp
push
sbb
ficompl
push
out
or
cmp
xchg
int3
test
or
test
and
inc
add
fwait
decl
sub
jge
inc
pop
in
push
cmp
jb
push
jg
add
imul
test
and
incl
push
inc
and
inc
and
add
mov
mov
std
loope
test
or
fcos
xorb
xlat
sbb
inc
ja
decl
sbb
dec
lret
push
es
mov
push
pop
enter
or
rcrl
decl
aam
jge
stos
pop
push
jbe
sarb
dec
sub
mov
xchg
aas
test
call
dec
push
sub
cmp
mov
mov
dec
rcr
pushf
enter
inc
outsl
add
decl
xor
push
jne
mov
dec
xchg
push
xchg
push
sub
ljmp
lcall
cmp
pop
dec
xorl
adc
into
or
or
nop
push
mov
std
and
dec
dec
jns
out
out
test
push
xlat
jns
xchg
shrl
fildll
push
adc
pop
jecxz
sahf
mov
adc
int
or
xor
push
pop
test
js
add
enter
insb
ret
add
sub
mov
jo
xor
add
loopne
push
subb
push
shrd
add
xchg
xor
out
cli
jg
aad
xor
popa
sbb
pop
mov
dec
cmpb
dec
add
int3
push
inc
leave
movsb
add
or
xchg
decl
cmp
xchg
adc
sahf
mov
test
call
lods
jp
icebp
push
pushf
popa
or
decb
imul
xchg
pusha
xor
ljmp
and
lods
xchg
mov
lds
lods
and
xchg
stos
mov
and
mov
jecxz
dec
dec
cmp
mov
addb
ljmp
daa
fisttpl
int
adc
push
dec
enter
sub
push
mov
add
jb
xchg
decl
or
movsb
lock
sub
adcl
rolb
inc
pop
bound
ljmp
inc
adc
rolb
sub
lock
jne
sbb
sub
push
orl
add
scas
xor
jo
pop
or
add
fcompl
testl
push
rolb
and
shrb
ss
xor
jmp
pusha
mov
push
inc
cmp
test
push
mov
inc
jo
ucomiss
shrl
repnz
dec
decl
stos
mov
pop
xchg
add
pusha
ss
add
icebp
pushl
xchg
inc
leave
popa
cwtl
push
mov
ds
push
xor
call
into
xlat
dec
mov
mov
stos
mov
adc
mov
or
xchg
push
pushl
cmp
sbb
pusha
xor
imul
ss
mov
cmp
mov
lea
cmp
test
xorl
movsb
add
fcomip
popa
add
jno
test
addr16
pushf
iret
mov
pushl
pop
inc
adc
pushf
pop
jb
push
pop
add
jl
pushl
pushl
inc
test
inc
rclb
and
xor
inc
call
inc
pop
mov
test
pushf
sub
cwtl
add
aam
fsubrs
sarb
rorl
movsl
jl
mov
test
inc
cmp
adc
inc
jp
jns
xchg
repnz
cmp
jmp
mov
xchg
sub
sub
sti
cltd
lahf
inc
pop
scas
shlb
dec
xchg
dec
movsl
push
add
decl
jb
mov
mov
cmpsb
or
pop
dec
sbbb
fs
adc
pushf
stc
cmc
jl
in
xor
pushf
cmpsb
mov
stos
in
and
decl
insb
mov
and
mov
scas
clc
decl
adc
sarl
pop
fstpl
mov
js
fnstsw
shlb
lcall
mov
cmp
je
call
lahf
in
mov
cli
and
and
pushl
cld
orl
adc
nop
shlb
add
js
and
ds
js
push
inc
mov
pop
or
nop
inc
pop
inc
or
sbb
pushl
roll
xor
in
arpl
out
push
xlat
cwtl
inc
xor
xchg
cmp
or
mov
inc
mov
pop
movsl
mov
shl
ret
enter
pop
xor
jp
adc
mov
ljmp
clc
call
dec
add
pop
mov
mov
daa
aas
stc
cmpsl
jb
sub
ljmp
int3
add
push
jecxz
pop
mov
fsubrs
xor
andl
xorl
and
scas
pop
jb
pop
fstpt
mov
decl
dec
pushf
push
pushf
mov
mov
or
lock
aad
daa
aaa
sti
popf
xor
adc
jl
mov
adc
icebp
inc
or
add
push
incl
insb
cmp
nop
adc
stos
cmpsb
pop
sbb
sbb
and
loope
ja
add
loope
andb
jle
push
arpl
ljmp
sbb
jo
pop
rolb
pop
cltd
mov
lods
ljmp
jnp
or
movsb
aaa
dec
incl
stos
sti
pusha
mov
xorb
out
and
sahf
mov
xor
pop
xchg
sar
arpl
test
xor
mov
add
incl
adc
cmp
xor
mov
or
or
and
incl
scas
and
mov
mov
sti
inc
mov
xor
jg
jno
add
popf
stos
sarl
stc
fwait
ds
add
ljmp
cmp
mov
jp
xchg
nop
scas
loope
addr16
xorb
or
cld
decl
sbb
xor
enter
sub
mov
dec
or
fistl
push
push
nop
test
repnz
test
fistps
mov
cmp
add
addb
push
faddl
fadds
int
mov
pushf
scas
dec
in
lods
xor
dec
push
inc
fs
mov
loop
stos
popa
cmp
mov
jmp
lods
ljmp
add
or
mov
cmc
decl
sub
stos
enter
mov
pop
mov
mov
mov
sti
or
lods
xchg
sbb
mulb
pop
inc
mov
fidivs
pop
mov
and
mov
add
jg
ja
xchg
pushf
xchg
adc
call
mov
popa
jmp
aaa
lret
test
je
into
cld
jle
dec
cwtl
test
sub
lcall
sti
or
add
test
sub
std
inc
nop
cmp
dec
loope
leave
bound
mov
rcr
pop
rorb
cmp
sbb
cltd
adc
xlat
ja
ljmp
cld
test
je
inc
cmp
popf
mov
and
js
cmpsl
mov
inc
xor
shll
hlt
mov
pop
inc
xchg
stos
movsb
fwait
mov
mov
and
pushf
mov
ljmp
adc
mov
stc
or
loope
pop
leave
or
mov
pop
xchg
incl
aam
gs
sbb
test
lods
mov
or
decl
jae
dec
lret
inc
dec
lret
adc
cmp
clc
adc
sbb
pushl
imul
imul
call
inc
daa
dec
dec
enter
ds
inc
add
ret
xor
mov
sbb
call
xchg
bound
sbb
adcb
add
sub
add
pushf
cmp
out
into
fstpl
pop
mov
jmp
stc
sub
dec
sub
inc
ret
rorl
es
xor
jmp
mov
ljmp
inc
adc
je
mov
lcall
lret
sbb
dec
or
repz
aam
inc
pop
mov
incl
inc
leave
sbb
cmp
lret
aaa
nop
js
dec
adc
cmp
incl
or
pop
scas
stos
insb
or
sub
dec
or
and
push
cli
call
loop
loope
mov
xchg
or
dec
rcrb
inc
gs
dec
loopne
mov
or
add
incl
pop
jge
cwtl
arpl
xor
sbb
subl
adc
nop
call
ljmp
es
add
add
shrb
int
cli
lret
sbb
add
decl
mov
mov
pop
push
lahf
xchg
inc
lahf
jl
pop
sub
mov
decl
mov
sbb
mov
jae
dec
xor
lea
cld
movsl
mov
dec
cld
les
lret
inc
scas
cmp
je
incl
ss
shrl
out
xor
popf
dec
mov
adc
inc
stos
jecxz
call
sbb
cmp
pmullw
fdivr
cmp
dec
mov
cwtl
popa
push
push
movsl
inc
pushl
call
push
xchg
dec
dec
rcll
xor
xor
xchg
pushf
inc
sub
inc
subl
mov
rcrl
sub
int
xor
nop
mov
stos
sub
mov
adc
incl
adc
aam
add
add
cli
mov
inc
in
daa
mov
push
popa
xor
pop
ljmp
mov
cltd
inc
clc
jecxz
int
ljmp
call
loop
negb
aaa
xchg
movsb
push
dec
mov
fcoml
test
cmp
jmp
inc
loopne
inc
mov
mov
adc
std
jg
dec
jle
mov
mov
xor
push
cmpsl
ljmp
fs
fisubrl
fimuls
lds
and
je
or
incl
mov
sbb
pop
in
add
xchg
inc
rcr
or
pop
mov
fdivrl
decl
stc
and
test
lods
dec
or
dec
dec
dec
aam
xor
add
loope
mov
and
ljmp
orl
fmull
out
ljmp
loop
popf
or
adc
xchg
lea
jmp
ret
fcomps
leave
lods
bound
shll
and
or
rcll
lcall
sti
add
lods
pop
xchg
inc
mov
scas
test
bound
lcall
push
cld
mov
mov
fistpll
cltd
inc
icebp
shrb
jg
shlb
push
push
ret
fstl
adc
ficompl
fwait
lea
mov
and
sub
jecxz
pop
pushf
sbb
outsl
dec
and
cltd
or
mov
outsb
mov
ficompl
int
sar
pop
icebp
icebp
scas
ret
lock
cs
xchg
or
xchg
inc
push
and
lods
adc
add
incl
push
xor
sub
popa
pop
xchg
cmp
lret
pop
mov
mov
pop
test
movsl
mov
in
in
mov
push
jle
sbb
add
lock
incl
arpl
in
add
adc
sub
inc
or
mov
jg
sbb
fisubrs
sub
ret
inc
cmpsl
add
adc
push
incl
popa
in
iret
sbb
push
sbb
mov
xchg
bound
int3
cmp
xchg
int3
lahf
cmp
or
jmp
dec
lods
arpl
call
sbb
inc
or
fs
and
xchg
jb
push
das
add
decl
int3
jmp
mov
inc
mov
sub
push
mov
jmp
mov
fwait
aad
adc
incl
loopne
lcall
dec
push
push
xlat
in
out
sub
test
das
nop
hlt
pushf
ljmp
sub
add
sar
das
sar
inc
inc
lcall
jo
mov
mov
in
adc
jge
xor
fcomps
popf
cmp
scas
pop
std
xor
call
sbb
ljmp
loopne
mov
clc
pop
rclb
inc
inc
mov
sahf
fs
out
push
sub
sub
pop
and
cmp
cmp
mov
inc
mov
mov
mov
cs
sub
cmp
pop
xor
stos
decl
nop
mov
pop
cmp
sbb
mov
idiv
loop
or
sbb
call
xor
test
aas
dec
and
inc
loopne
and
inc
sub
and
xchg
dec
cld
jmp
xchg
jmp
ret
fstpt
bswap
xchg
addr16
push
aad
outsb
mov
test
call
into
mov
lock
adc
and
lret
and
in
mov
sti
stc
add
rolb
dec
xor
fcomps
pushl
outsl
dec
test
out
mov
dec
adc
adc
cmp
mov
adc
mov
push
xchg
out
mov
pop
pushl
add
shll
mov
push
enter
adc
and
mov
call
call
adc
insb
repnz
xchg
lcall
into
cs
jp
iret
lcallw
inc
dec
out
js
stc
sub
pop
pusha
xchg
mov
mov
jmp
push
sbb
mov
test
mov
fmuls
pushl
push
loopne
shll
dec
fnstcw
inc
out
pop
cmp
jge
xchg
mov
decl
sbb
push
test
pop
movsb
mov
scas
cli
sbb
int
xchg
cmp
mov
xor
jae
push
in
jo
sahf
pop
or
and
insl
lcall
pop
jmp
add
or
jo
mov
cld
inc
je
add
pushl
or
mov
mov
insb
dec
leave
lods
add
js
cld
decl
and
iret
into
mov
inc
jge
lock
sbb
fisubl
adc
repz
lcall
mov
sub
icebp
jmp
mov
fstpl
sti
jecxz
cmc
leave
je
leave
lret
jns
scas
fsubrs
mov
xchg
cmpsb
mov
enter
movb
aaa
shlb
fdivrp
decl
sbb
out
aam
xchg
call
movsb
cld
add
xchg
xchg
adc
outsl
mov
fcomip
incl
push
outsl
ds
and
pop
loop
fwait
pop
mov
out
mov
ljmp
cmc
lret
aam
jp
add
roll
sub
inc
popf
sbb
js
mov
stc
daa
mov
testl
sbb
int3
flds
mov
xchg
aad
fs
lds
jne
lock
xorb
jmp
in
in
mov
sbb
add
xchg
into
outsl
cwtl
fwait
jmp
and
out
sbb
xor
call
addr16
aad
divb
popf
les
or
out
adc
mov
rorl
sbb
icebp
in
push
jbe
push
fadds
sbb
and
sub
dec
scas
sbb
int3
add
test
fisubrs
mov
aas
lcall
bound
push
sub
pop
cmp
or
xlat
popa
jns
jle
mov
mov
decl
xchg
xor
mov
out
inc
push
and
or
sbb
js
sbb
incl
mov
repnz
pop
in
adc
pop
dec
jmp
xchg
ljmp
movsl
loopne
jmp
and
ljmp
das
fwait
fs
jno
jns
dec
cli
jmp
dec
lods
mov
cmc
aas
or
fsubrs
or
ljmp
jmp
or
adc
pusha
loop
sbb
push
pop
mov
loopne
decl
lock
mov
in
add
inc
push
jb
addb
pop
test
cmp
incl
push
adc
stc
ret
in
xchg
cmp
mov
or
inc
hlt
orl
jg
mov
cmp
xor
or
adc
insb
enter
les
mov
jmp
leave
cmpsl
cmp
xchg
insl
dec
cmpsl
outsb
jmp
in
mov
incl
cld
mov
jne
rcll
pusha
sbb
test
jecxz
cwtl
jo
pushl
dec
xchg
cwtl
jg
add
movsl
adc
loope
pushf
cmp
cmp
decl
add
jge
repz
aad
pop
dec
in
push
icebp
adc
sbb
aas
mov
lcall
pop
inc
dec
fldenv
in
je
adc
inc
xchg
or
loop
nop
pop
loope
lcall
cli
xchg
sbb
jg
pop
cld
stc
push
out
shl
into
jo
cmc
testl
mov
out
jg
push
test
sbb
enter
out
mov
add
sub
mov
sbb
lcall
jae
insl
rcrb
jno
insl
push
push
gs
push
xchg
imul
inc
sbb
ljmp
fcoms
pop
lock
jl
sub
dec
cmp
pop
push
mov
adc
testb
adc
jmp
pop
sbb
mov
sbb
hlt
xchg
inc
xor
sbb
mov
push
out
jae
lds
nop
mov
jmp
movsl
movsb
pop
pop
test
xorl
xchg
lea
inc
jae
xchg
pop
xchg
xor
les
imul
jmp
dec
mov
xchg
out
test
test
sub
test
outsl
addr16
es
incl
xor
or
xchg
out
lods
or
fldenv
jmp
cld
lock
aas
ds
sbb
mov
clc
pusha
pop
js
or
lock
std
jmp
sti
popf
mov
popf
sahf
mov
popa
dec
push
or
mov
js
xchg
dec
out
mov
mov
sahf
mov
jge
jbe
push
mov
mov
pushl
xchg
out
xchg
xchg
jle
jmp
popf
inc
and
out
shll
call
pop
pop
cmp
clc
pop
insb
inc
ret
ljmp
cltd
cltd
lret
ds
add
jmp
sbb
aad
fcoms
inc
and
push
push
inc
push
inc
sbb
call
stc
add
cli
out
pop
mov
out
call
mov
insb
jne
or
ljmp
xchg
lret
add
bound
bound
jbe
inc
fcoml
push
cmp
fsubl
xchg
ss
push
cs
xor
jg
filds
push
cltd
in
xchg
lods
int
ja
ja
cmp
cmp
jo
mov
push
mov
ljmp
xor
loope
add
cmp
shr
xchg
outsb
mov
ret
adc
push
sti
fwait
dec
jecxz
mov
mov
jg
add
push
inc
adc
cld
in
mov
mov
ds
icebp
rcrl
std
cmc
enter
cli
pushl
clc
fnsave
cmp
out
ljmp
push
cmc
lds
outsl
jl
out
movsb
notb
ret
das
mov
cld
ljmp
adc
jmp
push
push
mov
mov
and
jmp
jmp
xchg
test
fwait
or
xor
adc
lcall
xor
xchg
add
sbb
ljmp
push
push
xchg
or
add
andb
mov
pop
mov
js
inc
shll
and
fwait
xor
inc
cs
xchg
dec
adc
outsl
subb
sub
mov
lahf
es
jmp
dec
lea
xchg
jp
lods
bound
push
pop
hlt
and
add
xor
mov
loop
out
mov
push
sub
sbb
jl
cmp
pop
popf
pop
add
ja
jb
shrl
and
xchg
adc
and
lcall
mov
andb
xchg
aam
movsb
or
dec
cmpsl
xchg
sahf
jl
ljmp
adc
stos
mov
push
mov
sub
pop
lret
dec
mov
decl
aaa
ja
pusha
inc
add
lea
call
shl
call
xor
jle
dec
xor
jecxz
aad
imul
fists
inc
mov
movsb
shll
xor
inc
ret
iret
mov
jae
adc
xchg
fmul
addb
xchg
rcl
sub
dec
push
lea
dec
adc
ljmp
jmp
cli
push
cmpsl
mov
inc
xor
and
xchg
or
decl
cmp
shll
rcrl
sub
in
or
cmp
decl
inc
repz
mov
repnz
xchg
lret
mov
leave
nop
mov
pop
mov
jb
lahf
add
and
and
sbb
cmpsl
sbb
call
call
xchg
dec
lods
push
jo
dec
enter
push
sub
test
jg
xchg
stos
push
stos
and
int3
adc
sub
mov
cli
incl
add
or
jb
test
fimuls
cs
mov
ljmp
mov
xor
push
xor
sbb
enter
stos
aam
loop
cmp
in
dec
sbb
push
add
movsl
call
cltd
adc
mov
jg
xor
adc
enter
adc
and
mov
jno
inc
stc
in
lods
jmp
das
clc
mov
mov
fsubl
xor
or
loop
in
xor
out
decl
cmp
mov
fdivl
in
movsb
inc
push
dec
int
push
jl
mov
push
xlat
mov
testl
scas
xchg
adc
sub
popf
xchg
test
add
incl
jmp
xor
xchg
xlat
or
xchg
and
or
adc
popa
fidivl
push
je
pushl
fldl
lea
fwait
add
std
fs
xchg
fdivrs
fs
mov
aam
cmc
push
cld
mov
int3
inc
popa
mov
in
ret
call
iret
or
sbb
ss
pop
fmull
decb
repz
jno
pop
push
sub
fs
repz
adc
and
ljmp
fadds
xlat
mov
push
mov
dec
in
or
decl
loop
xchg
fldcw
pop
pop
mov
ret
test
stos
dec
dec
lcall
scas
js
sbb
ds
sbb
xor
in
xor
lods
xacquire
xchg
ljmp
jg,pn
push
push
pop
clc
xor
ljmp
mov
push
mov
call
cmp
push
inc
shlb
add
jmp
sub
inc
pop
sbb
frstor
nop
cmp
and
fs
pop
gs
sub
ljmp
xor
xor
xchg
mov
push
ds
inc
ficoms
sbb
ja
lcall
cwtl
pop
inc
pop
inc
andb
js
inc
adc
lds
out
xor
fdivp
daa
mov
mov
data16
xchg
mov
cmp
inc
sub
in
jmp
pop
sbb
popa
jne
lods
testl
aaa
out
outsl
pop
sub
pushl
mov
in
mov
pop
sbb
mov
mov
xlat
jp
jb
jg
jmp
out
shll
leave
scas
add
pusha
pop
jnp
xor
cwtl
mov
ljmp
mov
and
add
insl
es
arpl
shrb
loope
or
mov
add
insb
jl
mov
mov
push
fisubs
mov
xor
sbb
mov
repnz
or
rolb
push
add
dec
adc
xchg
mov
into
inc
inc
push
stc
sbb
pop
and
aaa
fiadds
xor
dec
or
mov
stos
ljmp
fs
cmp
cltd
sbb
roll
mov
gs
call
aaa
or
sarl
sbb
call
cwtl
or
pusha
repnz
mov
lcall
test
ror
mov
cmp
dec
loope
xlat
outsl
in
jne
pop
xchg
mov
aas
imulb
mov
push
enter
int3
push
lods
lahf
inc
mov
decl
incl
int3
test
fildl
inc
test
adc
adc
adc
lret
add
sbb
pop
sti
jge
imull
fcomps
outsl
int3
cmpl
pop
in
ljmp
or
add
pop
sbb
pop
pusha
rclb
orl
ljmp
xor
loop
or
jns
movb
jmp
push
sbb
jp
push
lods
jmp
and
fwait
es
sahf
jp
mov
orl
push
hlt
loope
sahf
loopne
jne
jg
mov
insb
pop
mov
mov
dec
add
push
aam
dec
xorl
les
rorb
cmp
sub
mov
je
lcall
mov
push
rcrl
inc
pop
mov
mov
daa
sub
std
adc
loopne
jno
and
pop
cld
ljmp
inc
sub
aam
shlb
add
mov
or
ss
decl
mov
ss
ja
add
ja
test
cwtd
pop
dec
jmp
and
dec
inc
lock
push
sar
das
adc
adc
rorl
mov
in
and
cmc
ret
test
je
incl
add
dec
add
add
loope
lea
mov
nop
test
inc
dec
fdivr
inc
adc
in
std
xchg
dec
jno
out
adc
rcl
sbb
push
ret
fsubl
decb
fiaddl
adc
inc
push
sub
mov
imul
ds
and
and
sbb
shrb
fimull
and
test
scas
jns
test
fildll
dec
mov
inc
xchg
and
inc
test
sub
pusha
push
fs
add
icebp
roll
loopne
clc
enter
add
test
lods
mov
dec
out
pop
sub
lock
xchg
loopne
es
hlt
into
or
jo
js
hlt
inc
call
sbb
rolb
ljmp
pop
out
or
arpl
pop
gs
inc
sbbb
mov
cs
fsub
fs
in
xlat
lods
xchg
lcall
or
inc
mov
fildll
movsl
lahf
in
pop
pusha
mov
pop
add
pushl
inc
ret
push
inc
scas
popa
cmpsb
nop
vmovupd
enter
and
call
xor
and
je
aam
mov
and
push
popf
daa
pushl
mov
pushf
icebp
test
jb
pop
push
fcomps
push
push
inc
adc
fs
push
shl
incl
dec
subb
cmp
pop
or
repnz
inc
subb
jecxz
pop
xorb
add
ds
decl
fmull
aam
xor
push
jbe
inc
addb
mov
dec
push
lcall
in
mov
lds
add
hlt
call
cld
fmuls
pop
shlb
rcll
nop
mov
mov
insl
ljmp
dec
je
sbb
dec
dec
pushf
push
in
inc
in
cmp
push
adc
sub
push
sar
ljmp
nop
lock
sar
icebp
movsb
sbb
call
sub
iret
and
jnp
cmpsb
adc
jmp
insb
adc
cmp
outsb
notb
mov
xor
dec
and
ljmp
fstps
ss
data16
pop
push
test
ds
test
ficoms
xor
jp
ja
fwait
cmpb
cld
out
cmp
pop
insb
dec
cwtl
lcall
and
mov
jp
into
jle
cwtl
ret
scas
in
lods
and
test
imul
test
rorl
and
incl
sub
fs
dec
sbbl
mov
and
mov
jg
movsl
js
sub
leave
andl
xlat
fnsave
push
push
jmp
mov
jo
cmpsl
ja
xchg
dec
add
dec
in
loop
loopne
lcall
loopne
xor
sbb
jns
movsb
mov
pop
mov
pop
icebp
cwtl
popf
les
push
ljmp
jae
pop
and
dec
mov
aad
imul
pop
push
xlat
jae
xlat
sahf
fisubrs
mulb
add
call
adc
sub
movsb
cmp
xor
sub
les
les
mov
sub
inc
cmp
add
je
jmp
and
sbb
jp
ja
jecxz
jge
pop
xor
and
popa
pop
je
orl
cli
dec
and
inc
call
je
aam
inc
int3
mov
movsb
xchg
push
xchg
sbb
sbb
fstpl
sbb
mul
leave
in
dec
push
sub
stos
out
stos
dec
lods
pop
mov
aad
mov
bound
mov
push
loope
xchg
ljmp
mov
fwait
stos
sbb
mov
sbb
cwtl
cmpsl
pop
push
lcall
sub
lods
lcall
dec
push
test
jle
lahf
loop
lcall
sub
mov
ret
mov
inc
or
mov
fwait
outsb
mov
xchg
es
lcall
lret
mov
xchg
mov
pop
xor
arpl
test
mov
mov
iret
xchg
jecxz
loopne
push
push
mov
ljmp
movsl
call
imul
cli
push
mov
rcl
icebp
sub
fldenv
xchg
and
pop
std
sbb
inc
call
insl
hlt
fstpl
push
in
jecxz
in
mov
sub
and
sub
scas
inc
dec
push
lods
sub
and
rolb
jmp
cs
jo
mov
sahf
data16
fbstp
rol
repnz
ss
lea
mov
jg
sbb
cs
pop
dec
scas
insb
fs
dec
decl
push
out
and
iret
sub
ljmp
enter
mov
shlb
lret
sbb
ret
jle
sbb
fcomip
adc
push
scas
inc
aaa
push
pusha
lods
dec
call
cmp
shrb
arpl
jg
incl
push
insb
imul
or
push
adc
xchg
inc
lea
ljmp
jge
lods
push
icebp
xlat
xorl
pop
adc
xor
nop
adc
fisubrs
push
lock
decl
sahf
xchg
lret
adc
adc
mov
and
push
fldcw
ljmp
push
push
and
ss
es
pop
mov
data16
mov
sub
or
int3
xor
jo
rorb
add
lcall
mov
ljmp
lds
jae
sbb
jns
mov
cli
inc
mov
sbb
ret
decl
xchg
faddl
inc
scas
adc
sbb
xor
jl
lea
mov
pop
xlat
pop
inc
test
xchg
test
jmp
mov
push
das
clc
dec
ds
or
xchg
sub
xchg
or
not
in
pushl
xchg
divl
push
inc
stos
xchg
lods
jb
pop
add
and
bound
inc
fcmovnb
mov
pushf
sub
jnp
mov
insl
sbb
lret
inc
jb
jg
fists
popa
dec
pop
sbb
mov
dec
xchg
dec
push
mov
xor
aaa
and
jo
sbb
je
or
jg
lret
das
bnd
dec
mov
daa
mov
ret
pusha
imul
pop
lock
lcall
mov
dec
pop
out
test
push
pop
cmp
icebp
sub
sbb
sahf
fidivl
pop
sub
jg
xchg
adc
and
pop
inc
xchg
pop
or
aad
mov
xchg
xchg
push
aad
sbb
mov
xchg
push
inc
filds
add
mov
pushl
popf
push
and
imul
jbe
xor
ret
jmp
dec
dec
daa
imul
jecxz
test
xlat
adc
and
xchg
sbb
dec
scas
subl
outsb
inc
jmp
jno
dec
stc
incb
inc
insb
adc
call
jle
pop
adc
jp
mov
push
push
xor
jg
test
addl
rcll
add
inc
cltd
pop
push
rcll
test
stos
incl
push
repnz
into
mov
or
cmp
mov
cs
xor
pop
je
incb
mov
add
xchg
pushl
cmpsl
sar
pusha
xchg
filds
psubsb
shlb
out
js
andl
popa
es
dec
push
jmp
mov
xlat
lock
xlat
mov
fcomp
fs
mov
inc
xor
sti
pop
in
pop
loopne
or
and
jge
mov
sbb
jmp
test
incl
and
xchg
sub
movsb
bound
mov
push
mov
mov
pop
stos
mov
fiadds
les
push
stc
cmp
and
shlb
scas
cli
in
rolb
pop
and
dec
add
popf
jmp
mov
cmpsb
aad
inc
sub
rcl
adc
push
and
xchg
pop
arpl
pop
jo
jmp
testb
xor
test
xchg
push
jg
pushf
jl
jbe
and
das
and
dec
add
xor
popf
leave
jo
dec
out
jb
pop
pop
shlb
push
insb
jb
fiaddl
mov
idivl
test
dec
fcompl
and
mov
xor
fdivrp
pop
hlt
decl
mov
out
pop
or
mov
sub
xor
sbb
jbe
pop
push
sahf
fwait
adc
shl
popa
adc
and
je
sub
add
mov
mov
cmp
sti
mov
xchg
popf
add
push
sbb
hlt
jmp
ret
test
aad
hlt
sub
pop
js
cmp
jo
pop
jo
hlt
pop
cmc
xor
shll
mov
push
stos
pop
clc
insl
sub
dec
xchg
mov
negb
mov
sub
pop
and
decl
in
push
clc
and
lcall
cmp
insl
push
mov
cmp
mov
decl
addr16
lahf
sub
xchg
enter
push
pop
xor
sub
xchg
jnp
mov
incl
mov
ljmp
cmp
and
fwait
lret
insl
cmp
cmp
out
pop
xchg
popa
mov
pop
cld
sub
hlt
fistpll
adc
add
adc
scas
cli
fcomip
sbb
inc
jl
aaa
jg
fisttps
lods
pop
adcl
test
test
mov
in
popf
call
adc
xlat
sub
mov
sar
incl
movsb
shlb
pop
mov
mov
sub
jge
fcomip
push
ja
das
fdivr
decl
push
dec
mov
and
xchg
xchg
push
stos
sar
ljmp
sti
cmpb
aas
or
pop
cmp
xor
test
or
decl
fmul
dec
mov
adc
sub
push
mov
push
mov
inc
mov
pop
test
pop
in
sti
addr16
inc
cmp
lock
inc
addl
add
ljmp
incl
add
loopne
xchg
add
inc
adcb
add
jno
enter
push
loopne
movsl
movsb
mov
mov
and
rcl
add
or
add
push
sub
add
mov
loope
xchg
add
mov
cmpsl
or
xor
ljmp
jmp
sub
mov
pop
mov
mov
daa
xchg
sahf
cmp
stos
push
decl
sbb
arpl
dec
inc
rcl
sti
mul
dec
xchg
jg,pn
and
and
ret
rclb
cwtl
mov
pop
xchg
in
xchg
pop
inc
pusha
fldz
jecxz
sub
pop
jle
das
adc
sarb
add
jae
in
xchg
xlat
dec
fnstenv
pushf
outsl
fstpt
and
jl
notl
lea
loopne
inc
insb
call
popf
and
push
add
pusha
xlat
scas
pavgw
ljmp
sbb
decl
dec
clc
adc
and
cmc
jecxz
dec
push
cli
push
jecxz
pop
iret
xor
cli
stc
in
jo
stos
lcall
mov
inc
add
mov
jnp
test
mov
or
ljmp
xchg
sub
xor
inc
shlb
imul
mov
add
and
lret
movsb
lcall
and
jno
into
add
pop
pop
xorl
fs
mov
mov
mov
ret
push
ret
leave
xchg
or
mov
insb
jmp
mov
cmp
xchg
or
test
jbe
jno
fstl
repz
fdivrl
jmp
inc
cmp
cs
mov
cmp
insb
dec
cmp
je
outsb
sar
dec
mov
rolb
jo
mov
sub
incl
mov
and
and
dec
cmp
push
fsubr
lds
leave
jmp
stc
mov
dec
dec
mov
mov
add
sbb
cmpsl
lea
movsb
es
lods
out
dec
cmpsl
xchg
sbb
rorl
out
clc
iret
sub
ds
sub
les
movsb
test
inc
stos
push
enter
mov
push
cmpsl
cmp
icebp
inc
decl
mov
push
mov
scas
and
pop
aaa
sub
lcall
ficompl
adc
cmp
pop
stos
insb
int3
inc
cmp
mov
clc
lods
pushl
mov
shrb
xor
fidivrl
je
or
cmp
sbb
or
stc
inc
leave
inc
movsb
mov
decl
andl
xchg
inc
mov
sbb
dec
aaa
mov
sub
pop
jl
addb
incl
sbb
inc
sub
test
icebp
call
cmpsb
mov
mov
fdivl
daa
inc
popf
xchg
ret
jmp
lcall
jp
jb
mov
sbbb
pushf
incl
test
mov
lret
pop
mov
outsb
sti
insb
inc
in
pop
outsl
decl
xor
xchg
in
add
mov
jo
pop
jecxz
test
dec
idivb
xchg
test
cmp
incl
fnsave
push
in
xor
imul
jns
sti
or
inc
cmp
loop
out
stc
cmp
gs
xor
dec
xor
dec
cwtl
inc
adc
mov
mov
pop
hlt
pop
pop
jl
push
rcrb
insl
xchg
ljmp
int3
push
pop
mov
out
pop
or
push
mov
les
enter
js
nop
fwait
and
mov
loop
nop
mov
das
shlb
loop
aad
shl
daa
pop
cld
loopne
and
mov
pushl
jb
dec
mov
jle
test
rcrb
jp
and
or
sub
scas
call
nop
cltd
out
pop
inc
and
fistpl
xchg
jb
decl
mov
xchg
and
xor
inc
push
push
cmp
dec
push
jp
pop
cwtl
jae,pn
int3
inc
lea
iret
test
adc
sub
dec
sbb
cmc
incl
in
mov
popa
or
pushf
sub
sbb
add
mov
mov
pusha
lea
stc
arpl
cld
enter
pop
push
pusha
clc
cmp
push
push
cmpb
aaa
dec
mov
lods
jb
in
test
clc
or
inc
inc
outsb
jecxz
shll
mov
pop
shrb
mov
xchg
clc
push
mov
sub
mov
hlt
and
xchg
push
es
mov
push
adc
incb
and
test
ljmp
leave
dec
sbb
inc
xchg
lods
push
test
or
dec
adc
mov
loop
enter
in
xor
push
xchg
and
jmp
mov
dec
cmp
xchg
add
or
dec
mov
jnp
fistpl
outsl
mov
js
movsb
mov
cmp
cmp
mov
mov
add
mov
int
sub
and
loop
jmp
adc
dec
or
inc
mov
in
je
lret
outsl
outsb
out
movsl
cs
std
test
data16
sub
lock
jmp
sbb
or
clc
inc
sbb
dec
mov
xchg
ljmp
mov
rclb
xchg
push
int3
je
sub
xor
subb
lret
mov
outsl
jne
add
ljmp
or
adc
cwtl
aad
pop
cmp
les
xchg
scas
mov
adc
xchg
lds
aam
adc
or
fcomip
xchg
mov
test
mov
call
ljmp
push
shl
and
jae
add
xor
jb
cmc
pop
repnz
sub
xchg
sbbl
xor
stos
pushl
mov
popf
cwtl
mov
mov
push
xor
push
lahf
cld
xor
dec
jg
lock
mov
notb
in
xor
adc
mov
jmp
out
xchg
mov
dec
xor
lock
fdivp
lcall
cmp
sbb
jae
ja
push
jl
xorb
add
cmp
mov
call
add
addb
lea
adc
and
addr16
sub
bound
pop
lods
scas
push
in
decl
push
imul
mov
aad
enter
loope
aaa
push
mov
xor
pushl
movsb
mov
pop
push
mov
loop
pop
push
ljmp
pop
ljmp
in
mov
inc
ret
and
shrb
adc
fistl
inc
in
rorb
jmp
sub
mov
sbb
pushl
out
mov
adc
adc
call
icebp
fwait
inc
or
add
arpl
in
adc
fiadds
jno
lock
call
mov
das
int
push
sub
xchg
hlt
push
xor
push
incl
pusha
cmpsl
ljmp
hlt
test
pop
xchg
mov
scas
pop
mov
inc
dec
inc
dec
mov
push
adc
cmp
xchg
movsl
inc
stos
sahf
adc
jbe
lods
int
pop
jbe
jns
jp
adc
ds
jg
mov
int3
sahf
sahf
inc
insb
sbb
out
nop
mov
mov
add
jp
pop
pop
push
stos
repnz
lcall
mov
dec
cltd
mov
dec
xchg
fiadds
lds
loop
lret
dec
cs
mov
call
in
lret
xchg
cltd
hlt
and
mov
mov
mov
xlat
idivl
push
jl
jmp
loop
ds
add
mov
xchg
mov
add
lcall
xor
cmp
jl
imul
shll
movsb
cli
adc
cmpsb
jp
dec
popf
fxch
clc
hlt
cmp
pushl
movsb
and
bound
arpl
mov
in
inc
inc
mov
lcall
jp
sti
add
ja
fwait
pop
sbb
fcomp
and
sbbb
sbb
ljmp
cmp
into
in
rcr
mov
ss
xor
fcomps
ljmp
add
adc
scas
cld
in
push
jbe
jb,pn
pop
ficomps
and
xor
lret
ds
sbb
push
lret
hlt
in
jae
leave
lea
adc
push
aad
inc
aas
loope
xchg
pop
icebp
es
mov
mov
test
dec
movsb
xor
call
fwait
mov
mov
shl
sti
in
daa
xchg
or
divb
lahf
in
mov
stc
int
fdivp
pop
hlt
mov
jp
add
rolb
aaa
jcxz
mov
xchg
mov
jns
out
jg
sub
aaa
std
push
cs
sarb
jnp
ljmp
add
gs
in
js
dec
fmuls
add
adc
out
xor
and
or
ljmp
xchg
movsb
out
mov
mov
or
add
dec
lcall
cmpsb
andb
push
dec
lcall
arpl
xchg
pop
sub
jb
pop
in
test
cld
hlt
or
sar
call
nop
hlt
nop
mov
pusha
sub
ljmp
sub
jmp
or
mov
or
lret
xor
sub
jmp
es
test
sbb
into
into
cmp
xor
mov
push
cmp
push
and
and
inc
pop
push
shl
out
adc
jno
and
dec
mov
mov
lods
dec
mov
mov
sarb
cmp
mov
sbb
adc
test
push
cld
mov
addr16
dec
out
dec
add
das
dec
fmull
cmp
mov
jbe
lahf
lret
xor
jg
dec
pop
scas
incl
mov
addr16
hlt
aaa
ret
lcall
add
insl
mov
test
fadd
jmp
pop
pusha
jge
mov
xchg
insl
or
add
into
mov
int3
ja
int3
leave
or
lcall
outsb
in
dec
loop
mov
xchg
and
sub
subb
ljmp
xor
jo
jp
outsb
adc
xchg
adc
push
ljmp
out
hlt
addr16
or
dec
xchg
cli
enter
mov
add
and
call
push
repnz
shrb
inc
out
add
push
and
jbe
pusha
or
adc
adc
jns
mov
pop
jge
sub
icebp
sub
sub
adc
cld
jg
and
or
dec
icebp
adc
sbb
and
xchg
cmpsl
xor
incl
sub
mov
jmp
mov
outsb
shlb
pop
push
sbb
std
in
imul
push
repnz
mov
mov
out
push
sub
cmp
xor
jno
mov
adc
mov
pop
enter
ljmp
xor
into
dec
add
fisubrl
push
jl
and
push
ret
push
ja
mov
pushf
or
pop
cli
mov
cs
cmp
jmp
mov
ret
imul
xchg
or
jmp
or
mov
jb
cmp
sub
mov
daa
dec
adc
ljmp
or
mov
mov
add
pop
mov
add
leave
movsl
push
sub
sub
and
je
cmp
clc
decl
adc
xor
stos
adc
ljmp
adc
mov
dec
inc
cmp
inc
adc
lcall
call
sub
push
sub
push
adc
adc
mov
sub
inc
jg
aas
outsl
jb
call
loopne
and
or
into
gs
inc
and
aam
cmp
adc
inc
sbb
aas
or
je
dec
mov
je
add
int
decl
sbb
jge
mov
xchg
and
cld
decl
sbb
jno
cmc
out
inc
adc
or
jmp
iret
and
pop
hlt
lock
cmp
mov
mov
fnsave
std
hlt
pop
in
xor
bound
test
cmp
push
pop
scas
clc
aam
or
test
pop
xor
jo
mov
loop
or
lcall
out
lods
and
call
pop
sbb
enter
dec
jne
mov
push
andb
push
mov
add
fsubl
lret
xchg
je
add
incl
xchg
pop
mov
pop
cmp
mov
xor
ss
mov
pop
and
stos
xor
jmp
mov
inc
inc
jle
shr
sub
lret
div
sbb
ljmp
loop
nop
sahf
mov
xchg
nop
adc
sub
adc
pop
jmp
pop
int3
enter
incl
push
dec
dec
rcrb
lock
lret
stos
adc
cs
mov
mov
pop
jle
push
ret
xor
pop
sub
cmpsl
dec
mov
jb
push
push
xchg
or
lret
jmp
aam
or
sub
pusha
rol
in
dec
bound
dec
inc
sub
in
filds
enter
ljmp
decb
addb
lods
aam
push
and
fsubr
ds
add
mov
ljmp
xor
fldcw
mov
add
das
shlb
inc
push
js
addr16
jle
test
decl
dec
or
gs
pop
xchg
roll
push
gs
and
test
ljmp
add
dec
jp
pop
imul
lods
pusha
cmc
mov
decl
ret
test
push
inc
push
mov
testb
clc
es
inc
pop
push
setne
jmp
pop
or
test
sbb
test
add
jl
inc
nop
das
pop
rep
je
in
cmp
call
fildll
lods
push
ljmp
sbb
dec
je
add
rolb
add
incl
fiaddl
jmp
and
and
repz
jge
xor
les
clc
ljmp
shll
dec
movsb
enter
cmp
lret
and
insl
mov
shlb
lret
call
push
and
inc
add
cs
mov
cmp
out
loopne
movsl
fdivr
jg
and
adc
push
out
mov
aad
lods
incl
fdiv
arpl
pop
out
dec
pop
loope
inc
outsb
push
aas
movsb
cmpsl
push
push
je
loop
mov
jb
xor
lock
gs
bound
aaa
dec
xor
cmp
xchg
or
test
mov
xor
jne
dec
ja
lcall
ljmp
loope
popa
adc
aad
stos
jo
adc
mov
lcall
cwtl
gs
dec
dec
repnz
dec
mov
lds
imul
mov
and
cld
pushl
test
dec
mov
enter
imul
pop
int3
mov
mov
je
mov
inc
ljmp
loope
mov
arpl
inc
cmc
push
sub
scas
or
dec
std
jne
jmp
jns
adcl
call
daa
and
fstl
cmp
int
pop
jnp
je
xchg
jae
dec
cwtl
ss
rorb
mov
addl
push
test
pop
pop
sbb
mov
outsl
clc
jne
fldenv
aad
xchg
int3
icebp
repnz
jmp
add
push
stos
pop
push
das
jae
imul
inc
push
aam
push
mov
mov
inc
or
test
aam
mov
push
mov
aas
and
pop
test
in
sub
ja
in
xlat
insl
inc
out
lock
mov
movsl
mov
mov
addr16
pop
cli
cmc
js
rcr
lock
mov
pusha
out
mov
cltd
sahf
in
and
nop
jnp
jno
rolb
lcall
cmc
out
jge
xorb
mov
arpl
lahf
mov
sub
call
fwait
add
dec
addb
sar
ljmp
cld
outsb
mov
push
sub
mov
loop
or
mov
ljmp
shr
repnz
and
stos
loope
cltd
cmp
inc
imul
sti
ja
shll
pop
lods
gs
call
dec
inc
test
fnstenv
ja
icebp
sbb
xchg
xchg
cltd
test
dec
aad
jns
call
inc
repnz
push
mov
sahf
jmp
lods
xchg
inc
decl
incl
movsl
mov
stc
insb
mov
jns
repnz
push
cltd
pop
or
lods
mov
mov
incl
xor
loopne
in
cmp
mov
fimull
add
dec
outsl
jmp
xor
idivl
jmp
imul
mov
out
pop
add
fwait
jbe
cs
scas
lret
cmpsb
and
xor
lcall
lea
dec
repz
loop
or
cmp
jle
xchg
mov
ljmp
mov
mov
sti
aam
cltd
push
mov
mov
xchg
fisubrl
xchg
outsl
out
cltd
push
icebp
dec
pop
sbb
mov
movsl
jb
ja
incl
out
cmp
jmp
xor
dec
ja
fsts
cmp
push
js
inc
outsl
dec
cltd
and
loopne
in
jmp
add
xor
dec
jle
test
pusha
cli
xchg
outsl
insb
and
dec
incl
decl
arpl
aam
add
scas
and
rcrb
dec
cmp
sub
lcall
fisubl
inc
pop
push
cltd
fnstcw
ja
test
mov
call
dec
lret
lcall
test
cmp
jno
lods
ljmp
loop
xchg
enter
mov
shrb
push
mov
sbb
subb
jg
jmp
fs
xor
push
fs
sti
mov
cltd
mov
jmp
test
sbb
add
mov
or
outsb
xchg
mov
adc
mov
push
and
cmp
mov
repnz
dec
push
ljmp
call
xchg
push
or
rep
inc
push
push
jne
add
test
xor
lea
scas
xchg
mov
mov
sbb
mov
enter
dec
fidivl
cltd
pop
jns
mov
in
fs
mov
pushl
loop
arpl
sub
inc
imul
push
push
xchg
mov
jmp
das
push
sbbl
sbb
cmpsl
adc
xchg
inc
mov
and
lcall
mov
sbb
rorb
cmpsl
and
bound
out
add
mov
push
pop
xor
fnstsw
fldt
cli
rcll
pushl
fstl
popf
enter
stc
mov
out
leave
cltd
xchg
jns
cmp
push
xor
or
lcall
in
pop
leave
jne
mov
leave
leave
inc
inc
push
test
mov
call
pushf
inc
lret
adc
sbb
mov
xchg
lods
mov
subl
jb
pushf
dec
pop
test
into
or
dec
aaa
or
mov
loop
paddsb
ljmp
aaa
std
mov
push
dec
dec
cmp
sbb
fs
lret
cmp
push
mov
jo
out
push
dec
mov
cmp
out
adc
sbb
cmpl
mov
pop
in
lods
in
jl
mov
xchg
xlat
std
clc
rcrl
leave
dec
rcrl
inc
dec
imul
fldl
incl
pop
mov
pop
pop
xchg
sbb
sub
dec
jmp
decl
ja
cmp
sbb
push
pop
rcr
es
pop
mov
js
ljmp
jno
insb
add
pop
mov
stos
pop
mov
scas
xor
xor
mov
jmp
decl
adc
pop
and
xchg
js
xchg
jle
call
movsl
mov
hlt
shl
icebp
js
lea
sbb
ss
nop
and
add
and
incl
dec
nop
loopne
pop
pop
adc
call
sub
xor
jo
inc
test
mov
or
jo
add
test
pop
stos
pushf
jmp
xor
xor
or
mov
fcmovbe
cmpsb
adc
cmovbe
xchg
ljmp
lret
push
lods
pop
pop
push
mov
ljmp
int3
push
sub
lret
jo,pt
mov
pop
mov
or
scas
pop
mov
call
xchg
lock
jge
sub
mov
out
inc
mov
jg
pop
fmulp
mov
aaa
pusha
movsl
pushf
push
hlt
call
inc
mov
xor
adc
lcall
mov
cltd
mov
out
sahf
push
sub
pop
sub
mov
pop
sub
int
hlt
push
mov
arpl
sub
int
int
test
lods
cld
mov
test
call
and
andl
and
orb
xchg
insl
xchg
jmp
fs
dec
das
adc
lcall
push
cmp
adc
mov
dec
pushl
add
add
dec
pop
jbe
adc
adc
pop
out
push
cmc
lcall
push
pop
jl
cmp
inc
outsb
jle
lahf
jmp
in
adc
js
fs
mov
pop
subl
xor
mov
incl
and
inc
pop
loopne
out
xchg
fwait
jne
pop
cmpsb
mov
fimull
fisttps
inc
ds
mov
inc
das
js
sbb
push
cmpsb
outsl
pop
mov
ljmp
xor
lds
rorb
jne
daa
sahf
jb
cmp
push
imul
inc
aam
push
add
ret
jns
jne
pop
mov
data16
imul
lcall
rol
aaa
xlat
inc
adc
ja
lahf
imul
cmpsl
ljmp
cld
andl
call
dec
in
popa
test
sub
test
or
sbb
test
cwtl
mov
sar
scas
mov
dec
cltd
push
xchg
outsb
sbb
cmc
bound
jb
arpl
call
mov
xchg
sahf
pop
sbb
stos
xchg
mov
mov
mov
add
push
std
ror
outsb
mov
add
out
add
ja
ljmp
shl
xchg
inc
mov
stos
or
lea
mov
mov
mov
lcall
outsb
cld
stos
dec
xor
test
aaa
sub
loopne
xchg
cwtl
jecxz
pop
inc
pop
mov
pop
jnp
push
call
add
fsubs
rorl
lods
incl
in
je
dec
imul
lret
push
mov
notl
mov
pop
push
std
call
gs
mov
mov
mov
out
subb
pop
and
sbb
push
jl
pop
mov
inc
mov
dec
xor
mov
stos
adc
inc
mov
repnz
xor
negb
mov
idiv
push
xchg
jle
or
cmp
and
jbe
inc
sahf
mov
movsl
ds
in
mov
mov
add
into
inc
out
sti
out
cli
push
push
pop
cmc
lock
outsl
cld
push
mov
sti
hlt
push
movl
add
cmp
xchg
and
das
jb
decl
pop
dec
stos
std
cmc
pop
jo
scas
outsl
pop
sbb
js
pop
fdivs
pop
jbe
adc
stos
jg
pop
cmp
and
cld
adc
fisubl
jmp
xor
and
dec
inc
sub
inc
orl
call
jg
inc
into
cmp
inc
xor
aad
mov
xor
cmp
dec
and
push
in
or
movsl
mov
and
inc
clc
ljmp
aaa
cmp
push
pop
mov
xchg
sub
inc
hlt
nop
adc
pop
icebp
push
sbbl
inc
inc
lcall
clc
push
ret
cmpsl
mov
add
adc
insl
icebp
mov
adc
repz
and
aad
pop
xlat
push
mov
xor
cli
call
lret
movsl
jg
cld
dec
ret
adc
pop
inc
xor
add
mov
call
cwtl
xchg
cld
inc
dec
sub
pop
push
push
es
in
mov
pushl
adc
test
je
test
dec
gs
and
daa
cmp
test
dec
push
test
ret
paddusw
xchg
aas
cld
dec
adc
xchg
movaps
dec
sbb
icebp
adcb
pushl
mov
dec
dec
or
pop
xchg
sub
int3
sbb
mov
aaa
mov
sub
sbb
xor
sub
std
pushl
sub
nop
xchg
inc
ss
mov
sbb
insb
cld
in
sbb
pop
cli
jne
xchg
popa
ljmp
pushf
stos
pop
and
lret
mov
dec
cmc
outsb
pop
xchg
pusha
adc
add
in
sub
lcall
push
orl
lea
fwait
lods
xchg
loop
pop
and
pop
sbbl
xor
fwait
lret
js
xor
xchg
lods
bound
xor
ljmp
xor
dec
pushf
daa
and
xchg
pop
fisttpll
push
cmpsl
push
pusha
adc
mov
in
rorb
xchg
loop
arpl
decl
lds
nop
xchg
aam
mov
notb
lds
cmp
jge
mov
fsts
or
fcomip
inc
repnz
adc
mov
out
xor
and
jg
ljmp
scas
jmp
xlat
pop
add
xchg
adc
mov
test
cmp
je
xor
incl
push
adc
test
push
mov
xor
xchg
test
mov
imul
std
outsl
clc
fistpll
out
cmp
push
mov
lcall
and
xchg
pop
mov
cmc
or
dec
inc
cmpsb
push
mov
aas
pop
sbb
ljmp
inc
lret
dec
add
fstpl
out
adc
js
mov
add
mov
sbb
pop
fsubrp
adc
adc
std
std
mov
fcoml
call
cwtl
dec
dec
insb
insb
pop
loop
push
les
xchg
fiaddl
mov
or
mov
xchg
sbb
mov
mov
xor
add
lcall
sub
out
stc
lods
and
loop
into
data16
jg
inc
in
mov
inc
xchg
fdivl
adc
cmp
dec
stos
mov
add
out
cli
loop
addl
add
in
dec
dec
stos
dec
lea
out
push
gs
mov
ss
and
or
inc
sub
mov
rcl
cmc
mov
cmp
push
mov
mov
ret
out
jbe
cmp
lcall
decl
arpl
clc
sbb
push
xchg
adc
aam
mov
sub
xor
es
cwtl
lret
mov
aaa
std
pushl
add
sbb
mov
sub
and
clc
add
push
incl
pop
push
rorb
inc
mov
sbb
xchg
rolb
enter
dec
ljmp
adc
in
arpl
mov
test
insl
pop
and
int3
fmul
adc
mov
aad
jns
xlat
ljmp
scas
aam
pop
call
mov
fwait
cmp
fistpl
int
es
cmpsl
jl
mov
jmp
inc
inc
jl
jnp
pop
out
cmp
dec
sub
cli
data16
decl
int3
repz
sbb
pop
subl
outsl
pop
xchg
popf
push
mov
ljmp
clc
lock
cwtl
adc
ret
sbb
mov
lcall
incl
mov
mov
incl
or
fs
loope
fld
inc
in
mov
add
mov
cli
mov
mov
int
dec
mov
jbe
stos
in
cmp
jg
mov
cmc
sub
mov
mulb
adc
inc
or
cli
decl
pop
int3
jbe
int3
mov
lock
xchg
mov
jmp
imul
mov
push
add
mov
out
aaa
push
fidivs
mov
and
or
call
fwait
bound
mov
cmp
sbb
shl
cmc
or
ds
fbld
and
mov
lods
lret
sbb
cmp
jo
mov
in
stc
or
xor
xor
mov
xchg
mov
lds
loope
ljmp
lahf
push
popa
in
xchg
adc
xor
decl
repz
mov
ljmp
movsb
shrl
repz
aas
add
in
out
pop
xchg
adc
cmc
jns
cmp
xor
aaa
pusha
jbe
jmp
js
xor
ja
aaa
or
call
pusha
add
adc
pop
push
push
push
pop
fs
jne
lcall
lock
or
xchg
jle
adc
pop
xchg
push
pushf
push
adc
call
aam
sbb
cmp
add
dec
push
inc
sub
jmp
sarb
inc
add
mov
push
mov
out
inc
mov
sub
pop
pop
aad
sub
test
adc
pop
mov
jle
and
push
cmpsb
pop
cmp
lock
adc
pop
pusha
pop
inc
addr16
jbe
in
bnd
shll
sub
movsl
dec
bound
insl
mov
and
incl
and
mov
jge
pushf
mov
mov
dec
bound
jmp
cmpl
lea
lcall
test
or
xor
movsb
adc
cmc
incl
adc
fidivl
jbe
jecxz
inc
outsb
bound
push
nop
and
je
mov
addr16
int
adc
inc
push
inc
mov
xor
and
xor
out
not
aad
pop
pop
add
aam
ljmp
insb
add
pop
insb
gs
jle
or
xlat
sub
out
idivl
xchg
sbb
mov
sub
loopne
aad
push
pop
pop
mov
pop
jne
aad
fsubl
vmwrite
mov
movsb
inc
aam
mov
and
jb
hlt
sbb
inc
addr16
fcomip
mov
insb
in
mov
scas
mov
jb
adcb
or
outsl
fwait
xlat
dec
xchg
das
add
mov
jg
jo
or
add
push
pop
lret
sbb
pop
out
inc
push
sbb
dec
or
mov
imul
mov
sub
sbb
sub
mov
out
loop
std
mov
sbb
adc
inc
jge
xor
ja
data16
incl
push
jne
repz
and
push
insb
inc
in
test
pop
xor
dec
inc
pop
dec
push
add
jnp
mov
mov
mov
mov
add
cwtl
lret
js
lret
mov
jle
xchg
test
sub
ja
hlt
cmpsl
inc
cld
mov
dec
adc
mov
push
inc
inc
mov
xchg
cmp
pop
in
xchg
pop
push
pop
loope
xchg
adcl
mov
mov
jo
cmpsb
aaa
cmc
test
xchg
cs
mov
push
push
shr
sub
lcall
inc
xchg
addb
aaa
pop
inc
push
xchg
decl
jno
lcall
leave
bnd
dec
xchg
xchg
cmp
push
cmp
cmp
jmp
test
cmpsb
test
mov
cwtl
mov
sub
inc
and
pop
iret
mov
add
ljmp
push
pop
repz
mov
and
mov
test
das
clc
and
stos
xchg
xchg
jne
in
pop
cltd
jge
sbb
mov
or
call
pop
mov
adc
loope
jbe
mov
push
mov
std
sub
incl
sbb
mov
xor
iret
xor
mov
adc
std
js
inc
pop
cmp
dec
dec
cmp
push
mov
sub
mov
pop
icebp
call
push
jns
jle
add
sahf
dec
jns
mov
in
mov
ljmp
push
push
mov
or
fldenv
insl
ljmp
adc
mov
sub
mov
cmp
subl
negl
sub
adc
hlt
and
arpl
in
in
push
rclb
sbb
sar
xchg
icebp
sub
or
imul
ja
stos
popf
or
fdivl
adc
cwtl
out
rcrb
cwtl
xchg
sub
stos
lahf
leave
cmpsl
mov
mov
imul
jno
cmp
leave
adc
cmp
decl
push
pop
mov
dec
xchg
pop
in
std
and
out
cmpb
and
sbb
push
js
ret
push
cwtl
subb
pop
or
inc
popa
jae
xor
andb
push
or
push
inc
sbb
xchg
outsl
cmp
mov
ret
add
rcrb
jg
rcrb
sahf
jns
rol
jl
dec
cltd
xchg
ljmp
and
andb
push
xlat
push
daa
adc
aad
xchg
and
mov
cmc
movsl
xchg
aad
inc
push
xchg
mov
push
and
cmp
xchg
sub
dec
loopne
jl
xchg
mov
cwtl
jge
jle
clc
cmp
jmp
push
popa
stos
rclb
dec
mov
cltd
xchg
sub
incl
lret
pop
mov
cltd
ja
mov
mov
jecxz
insl
gs
jmp
pop
imul
mov
pop
js
sahf
fstps
xor
sahf
sarb
cmpsb
pop
inc
sahf
fstpt
repz
adc
insb
mov
stos
decl
mov
fcoms
movsb
mov
mov
xchg
push
jne
mov
stos
mov
cmp
test
and
sub
incl
cmpsl
cmpsl
inc
pop
or
mov
das
inc
mov
lcall
rorb
push
or
jne
leave
test
xor
repz
sti
test
sbb
dec
xor
clc
scas
clc
lcall
test
pop
sbb
and
loop
pop
xchg
mov
and
jno
xchg
add
pop
xorl
imul
stos
ds
jge
xchg
mov
pop
cltd
sub
in
call
bnd
lret
cmp
popa
jmp
mov
mov
cmp
sub
sub
les
sbb
inc
ljmp
jp
xor
cwtl
mov
fildll
adc
leave
mov
out
xchg
rorl
and
out
repnz
mov
cmp
pop
push
xor
shlb
rcrl
ljmp
clc
stos
scas
inc
sbb
mov
add
mov
andb
sbb
push
scas
push
or
xchg
jno
push
or
mov
jg
repnz
add
and
je
aas
jno
mov
incl
jno
push
shll
pop
dec
cmpsl
jnp
adc
daa
xchg
mov
adc
dec
pop
or
pushl
imul
enter
jmp
into
mov
fidivrl
pop
sbb
icebp
jnp
rep
enter
mov
fmul
movsb
leave
js
leave
pusha
sub
lret
iret
add
sbb
mov
cltd
sahf
dec
mov
sbb
jg
jmp
add
enter
push
dec
lcall
jne
xor
mov
fmul
sahf
sbb
fstpl
arpl
push
pushf
int3
sbb
nop
sbb
clc
mov
leave
fadd
ret
xlat
sub
dec
mov
mov
xchg
sbb
lock
sbb
and
scas
cli
add
push
jle
pop
inc
icebp
add
xchg
in
add
out
xchg
repz
rorl
cs
or
mov
mov
stos
gs
cld
incl
rclb
dec
mov
push
push
lcall
sub
dec
sub
testl
jns
jmp
jno
xchg
add
and
mov
sub
xchg
enter
xor
xor
ljmp
nop
lods
lods
lcall
fdivl
shll
mov
call
and
push
in
fstps
lds
lcall
sbb
out
mov
test
xor
mov
jl
jge
aad
mov
clc
mov
cld
rcrl
dec
int3
inc
cli
mov
leave
mov
int
insl
push
int
lret
pop
aam
sbb
fidivl
call
jne
add
call
mov
arpl
lcall
add
adc
push
cltd
les
out
push
xchg
push
pop
daa
sbb
jns
jmp
lods
add
mov
mov
push
xchg
ret
incb
and
mov
popa
and
push
xchg
mov
ljmp
push
xor
cmp
fs
arpl
jmp
notl
mov
pop
and
jg
frstor
das
in
sahf
cltd
cld
enter
push
sbb
xor
lcall
sub
or
leave
jne
roll
sbbb
fcoml
aaa
fs
sbb
leave
leave
clc
fbld
mov
fcos
cmp
mov
fstpt
xchg
int3
aad
fstpl
std
lret
xchg
pop
loope
imul
mov
incl
loope
in
lret
hlt
jge
mov
stos
icebp
sbb
sbb
pop
incl
lods
lret
jmp
shl
xlat
lock
adc
jecxz
cmp
fidivrl
jmp
decl
ret
xorb
into
aam
adc
ret
psubd
cmpsb
push
cmpsl
inc
xchg
jge
cltd
or
inc
icebp
and
add
pop
rolb
push
pop
cmp
lods
jmp
jbe
ret
cltd
push
rcll
mov
mov
mov
cmp
adc
icebp
cmp
sbb
push
hlt
je
push
leave
jnp
int3
insl
cwtl
sahf
sti
call
sub
add
nop
adc
fdivrl
in
pop
mov
fsubr
xchg
ljmp
xchg
mov
xchg
dec
aad
sbb
mov
pop
lcall
cmp
int3
jmp
jne
mov
push
mov
jge
or
fildll
js
loopne
adc
ljmp
dec
lcall
outsb
jnp
mov
rcrl
loope
call
dec
rcll
out
sbb
sbb
leave
pop
out
in
sbb
loop
sahf
push
mov
push
stos
icebp
jg
jecxz
sahf
loop
mov
sti
dec
jecxz
stos
xlat
call
enter
loopne
ljmp
jl
adc
in
xor
mov
test
push
adc
xchg
sarl
daa
inc
jbe
mov
or
lret
icebp
add
add
mov
les
into
dec
sbb
stos
out
loop
mov
and
sbb
cs
adc
cmp
es
dec
pop
cmp
mov
or
jmp
mov
stc
repz
repz
or
cmpsl
call
xchg
sub
inc
sahf
movsb
fidivrs
push
lds
xor
inc
nop
dec
or
mov
decl
lods
sub
pop
das
cmc
in
jnp
out
shll
int3
je
jg
inc
loopne
hlt
incl
into
fnstenv
in
daa
push
loopne
mov
dec
jl
fwait
scas
ljmp
aam
and
jmp
test
xchg
ljmp
es
aad
scas
cmpsl
cmpsb
int
test
testl
clc
mov
ficoms
ljmp
subb
out
mov
jle
adc
lret
mov
loope
sahf
out
pop
or
sahf
test
int3
or
in
dec
in
push
mov
ja
sbb
out
add
ljmp
rcrb
adc
daa
loopne
pusha
mov
shl
jle
mov
mov
sub
xchg
and
ljmp
clc
add
sbb
ss
pop
cmp
sbb
sub
scas
enter
std
fsubrs
popa
cmp
lea
mov
xor
test
fldl
cwtl
sbb
xor
sbb
inc
mov
incl
and
nop
fists
hlt
inc
mov
ret
mov
and
adc
inc
cld
jl
hlt
call
repnz
sbb
mov
inc
mov
daa
dec
inc
xor
pushl
in
jae
popf
cmp
sub
sbb
hlt
push
test
and
jmp
ds
in
push
and
scas
daa
inc
jp
icebp
les
jnp
dec
in
ret
pop
cmp
mov
sahf
js
loopne
jo
pop
xor
mov
fstpt
fwait
aaa
out
int
das
push
cmp
in
int3
mov
imul
mov
cmpsl
cli
mov
les
inc
imull
rclb
dec
dec
jnp
aam
mov
out
mov
jnp
mov
pop
lcall
push
sbb
sar
jae
shll
mov
call
ret
cmp
jo
pop
cmpb
cwtl
xor
mov
loopne
fdivs
sbb
sub
incl
insb
js
pop
mov
inc
sar
rorb
out
jecxz
mov
mov
shlb
and
or
or
mov
sti
cmpl
ret
jg
out
ss
xor
or
adc
xchg
pop
cmp
pop
jae
push
add
xor
xor
adc
inc
jno
sbb
aam
mov
cld
inc
inc
pop
lea
cmp
xor
or
dec
test
xchg
sub
movsb
mov
and
mov
cmpsb
mov
std
mov
insb
jp
cmpsb
cltd
xorb
dec
int
ljmp
xor
mov
movsl
mov
into
sbb
stos
ljmp
je
mov
add
dec
stos
scas
mov
and
lret
sub
jl
scas
push
decl
sub
add
sub
jg
sub
ss
xor
ret
xor
pop
push
int
das
dec
and
insb
push
jbe
lcall
call
rcr
lret
rcll
mov
lods
push
mov
jmp
repz
out
xor
fsubr
mov
inc
mov
cmpb
cmp
add
fisubl
and
jle
mov
cli
cmp
cld
cli
scas
mov
add
ds
nop
cmp
clc
xor
sbb
or
push
xor
nop
ret
or
jo
mov
test
call
aad
mov
cmp
and
sub
xor
or
xchg
jmp
adc
sar
mov
ds
setb
and
xor
xchg
mov
mov
enter
mov
mov
mov
in
pushl
sub
cmpsl
pushf
adc
sub
cltd
push
pushf
mov
stos
mov
mov
xchg
push
rol
or
inc
popa
lods
imul
mov
jno
or
pushl
push
out
jnp
scas
aad
jae
orl
enter
out
push
hlt
iret
xor
push
decl
bound
or
cmpsb
jecxz
cmc
popa
pop
adc
ljmp
mov
ret
xor
xor
xor
cmp
ficoms
call
jl
repz
mov
test
pushf
sarb
movsb
push
pop
int3
adc
sbb
sbb
jp
dec
mov
inc
jb
sbb
mov
jns
and
sub
repz
mov
daa
xor
jmp
sti
pop
xchg
int
cmp
les
mov
or
lcall
es
nop
push
and
or
push
adc
pop
loopne
imul
push
pushf
fs
stos
lea
fst
je
cmpsb
mov
dec
dec
cmp
inc
aad
sub
or
xorb
aaa
sub
dec
sbb
adc
mov
cmp
push
fimull
inc
xor
enter
mov
push
xchg
mov
mov
lcall
jmp
es
cmp
lea
insb
loope
add
mov
pop
add
or
js
inc
push
push
lea
orb
xor
in
mov
mov
loop
sahf
xor
fildl
push
fdivs
imul
adc
push
mov
hlt
xor
out
shlb
push
int
jmp
ds
fs
roll
xchg
pop
mov
cmpps
outsb
or
int3
rol
decl
mov
adc
push
push
in
or
fs
stos
xchg
pop
mov
cmp
xlat
ficoml
sbb
push
ret
test
cmpsl
aas
test
xchg
psrlq
daa
mov
decl
ljmp
pop
dec
loope
or
cmpsb
cmp
push
or
sbb
mov
pushl
ss
inc
sub
dec
mov
push
xchg
push
inc
pop
lret
call
mov
mov
addr16
subl
and
inc
cmp
xchg
out
test
call
dec
nop
ss
pop
jnp
loope
xchg
adc
sub
cmpsl
and
inc
leave
test
adc
push
cltd
cmp
icebp
ljmp
rorl
sti
sbb
jl
cmp
adc
sti
fcomip
push
mov
xchg
mov
push
adc
icebp
mov
sub
inc
inc
xor
add
pop
and
pusha
pop
gs
cmp
stos
int3
fsubrl
mov
nop
sbb
incl
enter
enter
adc
movsl
xchg
testb
adc
mov
cmpsb
int
sbb
pusha
decl
pop
cmpsb
leave
jne
cmpsl
jle
leave
jo
inc
push
dec
mov
fistpl
ret
add
decl
fdivp
adc
add
lret
fidivl
cmp
jae
jae
push
mov
movsb
lcall
sti
stos
lret
push
out
jb
scas
mov
sti
mov
xor
outsl
jg
das
add
jbe
fwait
pop
clc
ret
in
das
or
pop
xchg
idivl
jno
mov
push
sub
push
andl
inc
jo
sti
pop
loopne
sahf
push
ret
cmp
sub
mov
loopne
icebp
int3
pusha
mov
xchg
inc
orb
ljmp
dec
xor
jnp
gs
into
aad
push
xchg
aam
add
jmp
mov
hlt
pop
push
add
sti
push
jecxz
sarl
sbb
xchg
or
cmp
fiadds
dec
and
cmpsb
adc
call
xchg
sub
xor
pop
je
xor
cmc
and
pop
std
mov
clc
mov
cld
jg
call
mov
push
mov
adcl
xchg
and
mov
movsb
push
mov
pop
ret
popa
mov
or
xor
imul
sahf
adcb
adc
jle
adc
lods
fsubr
mov
scas
fwait
mov
das
fimuls
call
fwait
aas
repz
aad
sub
in
imul
mov
fdivl
jl
fwait
pop
nop
popa
stc
js
sahf
outsb
ljmp
ret
sbb
lods
jge
insb
ja
out
jne
orl
pushl
sub
inc
jne
fstpl
cmp
adc
test
jl
dec
mov
out
or
lret
popa
xchg
ljmp
mov
mov
and
mov
f2xm1
cwtl
sbb
jmp
lods
dec
and
lcall
aaa
popf
pop
dec
jo
sbb
pop
mov
cld
subb
out
inc
and
imul
addr16
decl
pop
mov
call
jo
mov
sub
inc
std
pushl
cwtl
sub
mov
push
xor
mov
outsb
jl
or
shlb
fucomp
mov
insl
imul
movsl
push
mov
les
lahf
jnp
insl
xchg
jne
in
jno
inc
pop
fldcw
jae
out
jb
outsl
popa
cmp
lcall
jnp
cs
pop
daa
jle
lods
dec
jl
out
cmp
arpl
das
loop
lret
repz
inc
fnstsw
xchg
dec
stc
cli
jle,pt
lods
jle
jmp
insb
rcrb
mov
jns
push
ljmp
jle
adc
icebp
adcl
mov
adc
nop
jl
push
xlat
ljmp
inc
pop
add
add
push
stos
mov
cmp
push
xchg
push
mov
and
fisttpl
mov
iret
cmp
and
pushl
in
testl
cmp
or
sarb
and
in
push
lcall
lcall
sbb
xchg
mov
stos
or
cltd
push
mov
jmp
imul
scas
xor
pop
scas
jecxz
adc
cmpsl
sbb
lods
mov
mov
rorb
lret
incl
and
imul
add
incl
sbb
jmp
ss
mov
outsl
fwait
mov
jae
push
les
ss
ljmp
sbbl
stos
mov
push
fs
mov
mov
stos
rcll
sarl
add
incl
jo
ljmp
loop
jl
call
jg
sub
adc
fsubrs
jl
xchg
sbb
sub
lcall
sti
or
sbb
or
cwtl
repz
pop
lahf
add
mov
mov
jmp
sbb
mov
xor
or
repnz
cmc
jae
lcall
jae
hlt
mov
push
popa
sub
sub
pushf
dec
pushf
sub
std
pushl
sub
mov
sub
loope
push
or
jge
xchg
mov
mov
xchg
cmpsl
mov
shrb
mov
int3
xor
int3
mov
clc
andl
rcrb
mov
add
addl
cld
mov
stos
ss
sbb
pop
cld
jg
inc
adc
inc
in
scas
insb
or
movsb
xor
and
sub
call
loop
test
loopne
sub
add
jmp
subl
adcl
decl
es
adc
dec
push
or
sub
lea
ja
cli
incl
xchg
shr
sti
or
add
pop
cld
decl
cmc
mov
arpl
pop
adc
and
cmp
lods
inc
inc
adc
lcall
cmpsb
cmp
xchg
sub
lret
rorb
mov
call
fwait
es
ret
jmp
filds
sub
mov
std
lcall
loop
jle
sbb
lret
fimull
adcb
mov
ss
and
ljmp
out
sub
sti
shlb
fbstp
andb
jo
mov
inc
sbb
xchg
inc
mov
dec
push
pushl
jl
push
add
enter
les
mov
in
ja
add
add
mov
cmp
rclb
push
mov
js
cmp
add
daa
mov
fwait
mov
xor
and
rclb
imul
mov
les
filds
ljmp
sarb
pushf
jae
and
ds
or
mov
adc
cmp
repnz
nop
mov
add
adc
xchg
xor
lods
push
xchg
add
adc
push
movsb
xor
xor
subb
xor
dec
ljmp
dec
mov
das
not
lret
pop
inc
bound
dec
imul
hlt
ss
scas
repnz
inc
sti
inc
sub
pop
icebp
inc
add
sub
mov
inc
mov
bound
incl
andb
adcb
pop
sub
pop
popa
add
mov
pop
xor
mov
xor
loopne
xor
and
or
pop
mov
inc
fcoml
sti
nop
incl
adc
inc
arpl
sti
push
mov
ret
repz
imul
cwtl
jo
nop
leave
leave
aas
pushl
sbb
add
mov
add
gs
dec
icebp
ljmp
xchg
cmpb
jnp
std
fxch
aam
jmp
imul
int3
ss
inc
inc
mov
push
out
dec
add
clc
in
aam
shrl
mov
jnp
dec
xchg
push
es
jp
out
lock
sub
add
sub
adcb
call
cmp
mov
jl
shl
pop
test
sbb
ljmp
mov
mov
lcall
pushl
ljmp
adc
mov
mov
imul
call
mov
jno
sub
sub
lods
fldenv
leave
mov
inc
popa
movsb
rcll
mov
lret
adcl
mov
aam
xor
add
icebp
cmp
dec
das
and
mov
cli
inc
std
push
outsb
add
imul
dec
inc
xor
push
cld
sbb
push
movsb
inc
dec
pusha
outsl
mov
ret
fstps
arpl
add
test
int3
es
das
sar
sub
push
mov
add
xor
sbb
sub
mov
push
dec
pop
daa
orl
sub
jmp
dec
fucomp
cltd
lea
cmp
or
cmp
pop
mov
test
xchg
sar
call
popf
cmpsb
clc
jmp
insb
shlb
and
cwtl
inc
repz
test
jmp
ret
or
jmp
push
inc
jae
and
loop
mov
mov
mov
push
mov
mov
stos
add
sub
push
mov
ds
cmc
bound
pop
lret
push
inc
call
lods
dec
mov
mov
data16
aad
pop
flds
popf
lret
sbb
stos
mov
pop
mov
push
sbb
fdivrs
clc
std
push
loope
sub
pop
lods
mov
cmp
ljmp
xchg
stos
cmp
mov
lcall
xor
cmp
cmp
jmp
out
push
pusha
insl
xchg
sti
pop
inc
test
adc
enter
out
mov
inc
lcall
or
mov
rcll
into
or
xchg
rcr
xchg
mov
test
sbb
mov
cmpsb
sub
shll
rclb
push
add
jmp
add
push
mov
adc
sub
push
orl
loope
lds
fmul
inc
ljmp
lods
popa
cmp
add
insl
aam
sbb
clc
jmp
pushl
aaa
pop
or
and
in
fnsave
imul
call
and
lcall
adc
jle
cmpb
push
lods
or
ja
movsl
xor
mov
add
jle
in
call
push
rorb
xor
push
repnz
mov
mov
sub
xor
bound
shll
pop
cwtl
cmc
lret
jbe
pop
rol
jmp
lods
cmp
int
xor
mov
mov
leave
in
fs
div
and
cmp
mov
ds
or
pushf
aam
lret
mul
push
mulb
in
sti
outsl
mov
push
mov
pop
mul
in
adcl
lods
gs
xlat
adc
lcall
pop
mov
dec
mov
mov
pop
jne
aam
jno
jmp
fnsave
jg
pushl
dec
std
lret
shlb
inc
and
mov
je
in
das
dec
and
out
dec
addr16
jmp
nop
push
rorl
lea
jnp
mov
pusha
mov
cmpl
sub
xchg
out
mov
mov
dec
ret
cli
sbbb
jmp
stos
fistpl
out
nop
cli
dec
icebp
loop
icebp
lcall
ljmp
push
lret
dec
test
jmp
lock
sub
xchg
imul
add
fs
sar
lcall
push
mov
inc
inc
push
dec
jl
sub
xlat
idiv
mov
add
popa
mov
pop
add
jmp
jge
mov
ljmp
adc
es
jg
sbb
mov
rcll
popa
je
xchg
inc
lea
pushl
and
fldcw
dec
sti
or
and
loop
notb
cwtl
sar
pushl
sbb
and
andl
inc
xorl
ja
mov
jnp
arpl
dec
jecxz
lock
jle
gs
aad
and
cmpsb
lcall
dec
xchg
subb
mov
xchg
xor
icebp
lahf
inc
ds
xchg
mov
adc
xchg
repz
jmp
pop
xchg
jae
pop
push
sbb
adc
arpl
loop
mov
xor
sub
dec
ljmp
call
push
mov
lods
add
mov
movsb
outsb
lods
outsb
pop
in
jle
out
xchg
fisubs
out
test
ljmp
stos
mov
pop
scas
push
lret
out
in
mov
iret
aam
ss
pushl
bound
imul
sarl
and
xor
add
inc
add
ljmp
mov
cmp
rcll
mov
ja
sarb
loop
xor
ja
stos
sub
cmp
cvtps2pi
movsl
lret
jg
cmp
icebp
push
es
or
or
aad
loop
and
mov
mov
sbb
stc
cwtl
cwtl
sbb
jmp
insb
mov
and
and
mov
imul
test
dec
jbe
mov
mov
leave
xlat
lret
cmc
pusha
mov
outsb
pop
mov
adc
pop
ja
pop
or
dec
jb
cmp
outsl
push
jle
repnz
in
jmp
or
aam
mov
aad
fnsave
addr16
cld
jle
mov
push
push
sbb
lock
mov
scas
pop
es
insb
push
in
sub
lock
xchg
add
jbe
or
ss
or
call
enter
insb
jl
aaa
jmp
rclb
inc
fistpll
sub
inc
or
cmc
dec
icebp
adc
or
lahf
sarb
ljmp
mov
and
pop
cltd
and
hlt
lahf
sub
cmpsb
jmp
sub
mov
mov
aas
push
cli
sbb
maskmovq
imull
sbb
clc
sbb
shlb
jns
fcomip
pushl
subb
daa
push
xlat
jne
xor
lods
push
loope
out
mull
fcomip
xchg
push
dec
andl
js
divb
dec
fiadds
pusha
add
jg
add
inc
xchg
and
fcomps
sti
test
int
jg
jo
xlat
out
xchg
das
stc
scas
mov
fs
mov
mov
adcl
pop
adc
dec
push
clc
push
add
lock
adc
out
sbb
cmp
or
add
jmp
nop
movsb
or
xchg
lcall
fistpll
ffreep
sti
cwtl
push
enter
push
add
ljmp
mov
repz
add
divl
repnz
and
inc
dec
sub
lcall
movsb
lcall
push
and
sub
lret
mov
xor
lcall
in
out
repz
clc
andb
int3
jl
iret
jae
scas
cld
lret
jg
lcall
push
sbb
addr16
adc
pop
fcoml
add
fisttpll
decl
fmull
mov
out
mov
cmp
adcl
cli
pop
pop
push
xchg
pop
sub
movsl
pop
mov
ud0
adcl
sub
jecxz
mov
mov
incl
inc
or
pop
repnz
leave
pop
cwtl
push
mov
insb
mov
in
cmpsb
jecxz
mov
adc
jmp
popa
jp
adc
mov
or
inc
pushl
and
cmp
or
xor
inc
andl
sbb
or
decl
mov
mov
test
jno
or
decl
xchg
and
sahf
in
repnz
cmp
shrb
or
shlb
inc
test
ljmp
cmp
shll
push
mov
mov
lcall
jo
lret
xlat
push
pushl
and
sub
pop
sub
insl
push
add
test
mov
cmp
pop
adc
sub
iret
xchg
xor
xchg
jg
push
movsl
mov
mov
lret
xchg
add
in
stc
xor
jmp
inc
mov
pop
or
xor
xchg
sbb
aad
divl
call
jno
fmuls
jecxz
push
popf
adc
enter
add
push
inc
dec
mov
decl
mov
repz
int3
movsl
jo
cmp
lods
pop
dec
out
jbe
psubsw
jnp
cld
ljmp
movsl
jl
lods
call
pop
sub
or
dec
cmp
pushf
inc
add
add
jbe
or
loopne
add
test
ljmp
xchg
jle
add
and
and
adc
and
and
loopne
jg
hlt
dec
xor
xor
aad
xchg
in
rorl
sbb
cmp
and
aam
dec
inc
pop
xchg
push
push
or
push
push
push
aad
bound
call
push
mov
aad
pop
movsl
cltd
sbb
popa
out
cmp
push
xchg
xchg
imul
jmp
jbe
addr16
divb
shl
cmpsb
pop
mov
jno
pop
lcall
ljmp
jmp
sbbb
mov
ret
nop
pop
push
push
aam
shrl
pushl
subb
cmpsb
test
push
adc
jb
leave
or
adc
jne
or
or
and
negl
jne
in
add
and
add
lcall
sahf
jbe
inc
fcmovbe
cli
push
jmp
jle
test
add
adc
add
jg
lcall
scas
jns
mov
sbb
imul
mov
insb
dec
sub
fldt
dec
add
mov
jo
xor
jecxz
xor
test
jecxz
cmp
adc
call
jns,pt
push
dec
and
fsubl
xchg
push
add
or
int3
xchg
pop
fs
cld
fcomip
or
and
addr16
dec
fcmovnbe
jae
and
cmp
push
dec
hlt
shll
xchg
arpl
insl
addr16
push
std
push
add
pop
ljmp
sub
pop
add
inc
add
lock
add
sbb
or
xchg
adc
lds
sbb
movsb
xor
pop
jmp
xchg
sub
cmpsb
mov
fld
mov
loope
jle
filds
push
sub
pop
shll
mov
cmp
in
popf
lret
lcall
ror
scas
sbb
call
enter
xchg
call
jo
out
sub
scas
bound
ret
adc
push
fsubl
cmp
and
call
push
cmp
mov
mov
movsl
and
and
pop
xor
sub
sub
xchg
sbb
loope
arpl
dec
mov
add
jne
shlb
pop
sub
ljmp
mov
imul
inc
xchg
aas
mov
dec
inc
pop
cmp
xlat
xchg
add
insb
mov
cmpb
and
out
clc
cld
mov
mov
jo
mov
pop
loope
pop
lahf
and
mov
lods
adc
jecxz
mov
iret
push
aad
push
push
and
jg
decl
mov
mov
push
jmp
and
out
sbb
adcb
outsl
pushl
je
inc
and
cmp
xor
pop
fsts
mov
es
or
jmp
pop
push
sbb
mov
fists
sbb
iret
js
fwait
mov
lcall
cmpb
insb
daa
aas
repnz
xchg
adc
adc
inc
loope
leave
pop
push
xchg
stos
xor
call
dec
jecxz
dec
xchg
mov
add
dec
push
cltd
mov
xlat
xchg
mov
add
shrl
call
outsl
andb
aas
sub
sub
repnz
sub
lret
std
xor
pushf
mov
ljmp
xchg
repnz
xor
nop
add
lret
test
outsb
add
adc
lcall
and
dec
mov
loopne
and
dec
loopne
inc
outsb
test
hlt
enter
mov
incl
aad
call
push
mov
jmp
sti
add
adc
mov
call
stos
pop
add
jbe
cmc
mov
push
mov
cmp
mov
cmp
cmp
shll
sbb
inc
dec
and
sbb
xchg
inc
xor
dec
negb
dec
jg
add
lret
adc
movsl
movsl
xor
gs
out
lcall
ljmp
ret
js
movsb
daa
pop
dec
cmpsb
mov
popf
and
lcall
js
gs
outsb
data16
int3
adc
push
xchg
js
into
jno
imul
loop
or
ret
or
jecxz
mov
inc
add
movsb
int
in
ret
mov
pop
pop
inc
sub
test
pop
repnz
call
scas
push
push
iret
sbb
fnstsw
jae
insl
cmpsb
adc
mov
adc
push
mov
cmp
movsl
dec
pop
jle
pop
cli
jmp
pop
insb
add
mulb
mov
ss
stos
sub
movsb
sbb
scas
xor
pop
or
shrd
sahf
xchg
dec
andl
mov
mov
sub
adc
out
sub
andb
xor
shlb
pop
test
fisubrl
arpl
xchg
out
adc
pop
jmp
inc
mov
mov
jne
in
inc
mov
pushf
xor
jl
sbb
shl
daa
mov
fisttpl
in
shrb
dec
leave
lods
push
clc
push
insl
test
clc
mov
dec
jge
dec
xor
xchg
rorl
mov
bound
bound
adc
mov
loopne
idivb
inc
add
lds
test
mov
mov
in
inc
outsl
imull
std
jmp
jne
leave
xchg
pop
rcll
ret
xchg
xor
ljmp
mov
cmpsb
and
insl
inc
test
call
movsb
rclb
push
call
dec
sarl
mov
mov
aam
clc
incl
dec
xchg
push
adc
lahf
and
cmpsl
cmp
sar
call
inc
sarb
insl
dec
ja
or
jge
daa
das
or
push
lret
push
icebp
mov
xor
push
jnp
clc
mov
adc
loopne
ds
int
push
jmp
faddl
pushl
xchg
bound
inc
sub
mov
add
mov
ficompl
jno
data16
shrb
or
decl
out
cmp
push
mov
sbb
pop
push
mov
dec
xchg
mov
pushl
cmp
jge
lahf
jg
mov
xlat
add
pop
les
sbb
sbb
sti
decl
mov
test
sbb
sub
cmp
sbb
inc
jmp
sbb
dec
jl
out
dec
ss
sbb
sub
xchg
sub
pushf
and
lods
je
je
cs
daa
decl
xor
fidivl
bound
push
fst
pop
cwtl
jl
lret
repz
jns
cmp
jmp
lcall
out
pop
xchg
ja
jle
lahf
jecxz
cs
mov
xor
mov
rclb
lcall
fstpt
mov
pop
lea
cmc
jmp
das
sbb
in
ljmp
push
in
jns
neg
mov
jo
sbb
and
xchg
out
cmp
push
sub
cmpsl
mov
xchg
cmp
jb
xor
call
mov
mov
lcall
mov
sbb
jl
jne
ja
fiadds
iret
loop
out
call
sbb
add
and
repz
cmpsl
insb
xor
inc
fs
inc
jbe
out
decl
sub
mov
jge
test
mov
loopne
call
in
int3
rorb
jae
ljmp
cmpsl
pop
push
gs
std
hlt
daa
scas
sarl
sub
fidivrs
addr16
std
fcmovnb
pop
add
add
fmuls
push
sbb
xchg
add
jb
sbbb
push
fcmovnbe
inc
call
ss
insb
dec
xorb
push
mov
mov
shrb
mov
push
test
cmp
inc
add
sbb
cmp
pop
lods
xchg
pop
mov
loopne
lcall
sbb
subl
in
cmp
xchg
into
imul
out
mov
sarb
lcall
dec
lock
inc
push
jne
dec
mov
aam
adc
enter
mov
xchg
inc
lahf
dec
ja
jmp
shlb
loope
cmp
xchg
sbb
mov
pusha
movsb
lcall
into
mov
iret
mov
es
adc
in
pop
popa
hlt
pop
std
mov
lods
int
cld
adc
mov
and
decl
out
pop
push
fldl
inc
lret
mov
jmp
mov
add
int
cwtl
aam
cli
pop
icebp
adc
or
call
imul
sar
pop
cmp
lret
scas
pop
xchg
mov
les
pop
cmp
fcoms
add
mov
push
jg
jmp
mov
incl
adc
xor
sbb
xchg
inc
lock
jg
dec
pushf
and
mov
mov
nop
cmp
arpl
stos
push
xchg
push
or
pop
shll
cmc
inc
push
test
push
gs
popf
ljmp
add
call
xchg
dec
pop
faddp
inc
movsb
and
adc
jp
popf
and
decl
jg
jge
fwait
adc
pop
sub
pusha
pushf
pop
std
and
fimull
cwtl
jg
loopne
push
mov
xlat
sbb
scas
pop
bound
add
cmpsb
dec
incl
movb
push
push
add
rolb
jno
mov
movsl
lcall
add
or
pop
jge
inc
inc
mov
jb
fcomi
jmp
push
into
xor
scas
sbb
adc
int
lock
imul
lret
xlat
dec
mov
js
popa
pop
in
nop
push
jecxz
xchg
pop
sarl
ljmp
test
ret
enter
out
push
and
icebp
rol
adc
push
adc
fisttps
inc
int3
dec
and
xor
cmp
xchg
jb
arpl
add
ja
lds
shlb
mov
mov
and
cmp
into
inc
in
push
dec
dec
in
or
incl
push
incl
jns
lahf
cmp
mov
std
cmp
and
adc
call
shll
xlat
out
shrl
addr16
ret
push
pop
sar
ljmp
data16
sbb
sbb
orb
pop
sbb
push
sub
addl
push
sbb
outsb
pop
insl
push
inc
jl
and
jmp
adc
insl
shll
inc
fidivs
jecxz
and
push
call
push
jle
sbb
enter
orl
xor
push
xchg
adc
ljmp
arpl
inc
les
pop
test
les
les
mov
push
lret
and
dec
repz
push
mov
sahf
cld
lcall
push
adc
iret
xchg
or
adc
or
jno
inc
xchg
punpckhdq
pushf
dec
sbb
popf
pop
jg
cmp
and
cmpsl
jns
sbb
incl
lods
add
push
add
aaa
popa
ret
xor
imul
inc
push
xchg
mov
ljmp
add
jne
popa
sbb
sub
xchg
cwtl
sbb
test
adc
jg
pop
mov
xchg
cmpsb
and
fidivs
cmp
inc
xchg
and
sbb
call
inc
adcb
mov
jnp
dec
pop
lods
addl
adc
inc
in
dec
loopne
mov
mov
lcall
pop
test
call
pushf
push
dec
aas
push
inc
dec
and
idiv
ljmp
dec
xchg
div
mov
hlt
adcl
jmp
mov
bound
pop
sbb
lcall
lea
and
mov
jns
sbb
mov
push
ljmp
jl
mov
fwait
dec
xchg
test
lock
stos
adcl
lcall
imul
test
rcll
sub
sbb
fsubrl
mov
mov
aad
mov
mov
jae
ljmp
das
sub
mov
push
xchg
cmp
ljmp
addb
sbb
ret
fcomip
decl
sbb
dec
insb
test
and
adc
je
cmp
inc
or
push
dec
int
or
inc
hlt
mov
dec
fnstcw
incl
or
xor
and
dec
xchg
mov
sub
mov
dec
adc
jg
mov
dec
in
pop
adc
mov
xchg
adc
loope
dec
sti
and
mov
inc
mov
nop
or
clc
jg
jb
sbb
push
mov
add
inc
sahf
push
pop
aaa
sub
ljmp
aam
mov
lahf
movsl
rcrb
adc
out
daa
mov
push
decl
sub
pop
stos
jno
mov
xchg
xor
out
gs
ss
dec
xchg
call
push
movsb
inc
pop
ljmp
pop
or
jo
dec
leave
jne
pushf
in
ljmp
sbb
pop
mov
stos
jne
and
dec
xchg
subb
test
call
clc
xchg
and
xchg
leave
outsb
lcall
popf
pop
aam
cmpsb
fs
ljmp
aad
pop
and
dec
cld
cmp
xchg
scas
add
fstps
es
and
ljmp
int
aam
aaa
movsl
out
adc
jbe
scas
in
andl
sub
add
cmp
lcall
jno
out
aad
mov
jge
sbb
shlb
fadd
rorb
push
cli
call
aad
xor
xchg
clc
jmp
out
data16
jmp
leave
adc
decl
mov
dec
adc
pushf
xchg
inc
push
and
jo
out
dec
hlt
shl
mov
cltd
mov
push
cld
int3
sbb
fwait
movsl
call
xor
sbb
dec
shrl
push
xlat
sbb
sbb
adc
or
sub
int3
int3
out
lea
hlt
pop
lcall
dec
outsl
mov
incl
dec
movsb
sbb
jp
mov
lock
sub
or
pusha
sub
sub
xchg
xchg
dec
mov
push
xchg
push
and
and
mov
je
xchg
or
ljmp
arpl
jbe
outsb
sbb
rorb
add
xor
nop
dec
dec
das
push
icebp
decl
dec
sbb
adc
inc
pop
psubw
adc
xchg
jl
add
dec
test
sub
addb
and
pop
mov
inc
xor
iret
addl
xor
pop
inc
call
sub
push
pushf
jg
xor
adc
jmp
pop
fbstp
xchg
dec
pushf
sub
sbb
jle
sub
pop
xchg
mov
jmp
hlt
adc
out
push
add
xchg
mov
inc
test
cmp
dec
xchg
cs
lcall
aam
sub
in
in
dec
dec
aaa
mov
mov
iret
clc
mov
call
sub
dec
sub
mov
mov
push
ja
mov
jmp
mov
test
sub
xor
and
and
aaa
xchg
das
and
pop
in
cs
xchg
lock
mov
fwait
jo
mov
aas
in
xchg
sbb
mov
jae
jne
in
adc
call
movb
xchg
mov
jg
in
jg
and
mov
loope
mov
cli
xchg
sarl
mov
push
sbb
pusha
mov
push
mov
aad
jb
call
call
lds
mov
cltd
test
enter
add
and
sti
ds
and
inc
jne
xor
incb
cmpsb
fsubr
dec
test
xor
lahf
xor
incl
xchg
jae
fdivp
imul
dec
mov
cmp
scas
dec
iret
call
mov
pop
testl
cmp
subl
lahf
outsb
fidivrs
sub
or
call
movb
lret
dec
sbb
or
lahf
cli
ljmp
clc
fwait
mov
sbb
cmc
les
fadds
sub
lcall
stos
repnz
fistpl
adc
movsb
inc
in
mov
dec
movsl
pusha
scas
inc
mov
pushl
push
je
rorl
in
movb
cltd
lods
adc
pop
jmp
dec
jp
into
call
xor
sti
into
mov
sub
dec
dec
mov
push
mov
inc
pop
lods
enter
lds
fisubl
pushf
cli
push
dec
shll
sbb
pop
lds
out
gs
ret
add
in
push
mov
test
and
jmp
lcall
aas
sub
mov
cmpsl
mov
cmp
dec
mov
push
les
js
imul
ja
push
mov
add
jp
mov
data16
outsb
or
mov
decl
out
lds
std
aaa
movsl
add
inc
xor
adc
lcall
test
testl
adc
incl
bound
xor
aad
xor
pusha
pusha
inc
aam
sbbb
push
xchg
mov
into
cs
mov
jg
pop
push
into
out
xchg
pop
scas
ja
or
dec
sar
incl
xchg
mov
or
sbb
and
sub
stos
int
push
call
adc
push
jo
out
inc
fistl
pop
outsb
test
fmul
cmp
lods
cmp
ss
mov
in
ret
lahf
je
fistpll
mov
je
mov
mov
pop
dec
pop
popf
outsl
aaa
fwait
call
inc
jns
xlat
je
xorl
mov
dec
ja
add
pop
int3
mov
fidivrl
mov
jns
add
mov
test
jae
fdivl
loop
scas
xor
inc
les
jb
sbb
jmp
mov
pusha
lret
xor
mov
addr16
out
inc
sub
int
in
loopne
lcall
pop
push
negb
movsb
dec
mov
das
arpl
push
dec
mov
lret
data16
fbld
fidivs
daa
int3
add
push
loopne
and
decl
dec
mov
mov
in
sbb
shrl
fwait
mov
and
addr16
jbe
xchg
push
std
sbb
adc
sub
mov
decl
mov
mov
test
xor
cwtl
dec
or
loop
bound
std
sbb
ret
out
cli
decl
je
cmp
js
lcall
push
lcall
sahf
cmp
mov
cld
pushf
das
cmp
and
cld
into
jnp
mov
int3
shr
call
adc
stc
mov
mov
pop
test
cmp
cld
inc
and
pop
outsb
push
inc
decl
pop
out
inc
xor
inc
jns
inc
pop
add
xor
lds
clc
mov
add
or
add
or
jno
incl
nop
xor
add
or
push
mov
adc
addl
mov
xor
add
shll
sahf
cmp
cli
sbb
adc
cmp
pusha
sub
rcll
dec
movsl
dec
sbb
lods
aaa
inc
xorl
pushl
in
or
mov
sub
stos
inc
sbbl
mov
sbb
outsl
fdivrp
mov
mov
pop
push
add
rorb
das
pop
rcll
call
fldcw
adc
or
in
mov
pop
sarl
xchg
int3
pop
sub
sub
mov
adc
xor
mov
adc
call
lcall
ret
fisubs
dec
outsb
sbb
inc
sub
scas
dec
cmpsl
push
jle
js
in
rcll
jp
cmp
fildll
jns
out
call
clc
jg
fnsave
fwait
ret
pop
lret
cld
jle
or
pop
out
push
cmpsl
std
les
incl
dec
lock
out
ret
cmp
sbb
lock
decl
mov
and
mov
sub
cli
sbb
les
cmp
pushl
int
imull
mov
mov
fisubl
roll
mov
ret
mov
in
cmp
add
xchg
scas
push
mov
call
xor
dec
mov
test
stos
repnz
nop
inc
sub
movsl
sub
incl
mov
mov
fsubr
sub
mov
pop
inc
rorb
cmpsl
inc
mov
ljmp
lods
adc
mov
aaa
rcrl
subl
sarl
scas
mov
stos
lods
push
mov
push
fwait
call
xor
in
mov
and
xor
or
in
xor
mov
sub
dec
add
incl
push
mov
sbb
sbb
xor
loopne
fcomp
jp
lea
inc
in
pop
xchg
ss
decl
outsb
mov
in
aam
scas
mov
rolb
jnp
in
call
cmp
ljmp
stos
mov
pop
add
jl
movsl
aaa
cmp
idivb
std
movsb
lret
scas
jp
or
or
sbb
ja
or
jecxz
pushl
and
mov
jmp
mov
ljmp
pushf
dec
xchg
xchg
add
adc
xchg
pop
jle
lds
and
inc
faddl
imulb
mov
dec
dec
stc
pop
jb
mov
lea
int3
cmp
or
sbb
ljmp
test
inc
outsl
mov
and
nop
rolb
pop
lcall
mov
stos
adc
mov
sbb
into
movsb
pusha
imul
es
jmp
mov
push
push
push
jno
jp
push
dec
adc
and
hlt
jb
mov
sbb
mov
aad
pushl
repz
addb
dec
xor
decl
lock
mov
and
in
clc
sbb
aaa
lret
ja
gs
incl
imul
insl
clc
ss
sbb
cmp
dec
popl
ljmp
addl
jge
jmp
fldt
nop
ljmp
js
out
mov
sbb
xlat
mov
mov
pop
mov
push
add
sbb
adc
rorl
inc
xchg
adc
xchg
add
lods
test
inc
aas
adc
jbe
fsts
add
test
adc
add
ljmp
inc
jl
and
insb
repz
xchg
xor
jmp
clc
mov
adc
push
fstl
inc
sbb
cld
outsl
adc
pusha
fisttps
jne
add
aaa
nop
jbe
lcall
xor
mov
pop
push
push
out
push
popf
inc
mov
sarb
call
fsts
enter
push
movsl
leave
push
cli
xor
jbe
shlb
mov
pop
xchg
inc
adc
mov
cmpsl
pop
jns
jnp
dec
into
dec
call
cmc
push
mov
ljmp
mov
and
test
ljmp
pusha
push
push
out
std
ljmp
lret
jge
mov
cld
adc
insb
mov
xchg
movsl
test
jno
adc
cmp
getsec
xchg
shr
sub
xchg
inc
push
test
jns
mov
add
sub
lea
xchg
int
mov
xor
insb
lcall
movl
push
xorb
rcrb
push
jecxz
jmp
cmp
icebp
rclb
scas
mov
jns
xchg
cli
xchg
dec
les
sbb
mov
fcmovu
movsl
add
cmp
adc
sub
mov
orl
or
unpcklps
ljmp
push
mov
jne
mov
sbb
cmp
xchg
jmp
adc
mov
xchg
add
sbb
call
lgs
jne
and
lods
inc
aad
pop
loope
mov
add
and
fildll
mov
xor
movsb
or
mov
xor
pop
cmp
mov
push
vcomisd
sahf
test
js
pushl
repz
push
adc
js
pop
xor
adcl
dec
mov
push
mov
sti
sbb
fadd
xlat
aad
arpl
adc
cwtl
xchg
add
push
shlb
xchg
and
stos
or
loopne
test
clc
outsl
cltd
loop
pop
lock
mov
or
pushl
clc
sbb
mov
pop
nop
sbb
nop
sbbb
pusha
or
jmp
xchg
cmp
and
aam
xchg
es
jl
insb
pop
pop
adc
add
call
pushl
adc
sti
xchg
mov
test
push
inc
dec
mov
inc
mov
lcall
loopne
sbb
mov
xchg
lea
xor
xor
pushf
mov
jmp
dec
in
aaa
cltd
push
test
ljmp
mov
movsb
lcall
jp
inc
adcb
lods
hlt
xchg
leave
jb
mov
test
cmp
inc
xor
ljmp
adc
jmp
push
mov
or
pop
sub
pop
ja
xlat
mov
mov
fsubrs
adc
sbb
cmp
rcr
cmp
xor
dec
mov
and
inc
call
loopne
lret
add
and
or
inc
ss
stos
dec
mov
mov
js
and
fidivrs
addb
cld
pusha
xchg
push
loopne
inc
test
cmp
or
dec
inc
loope
nop
sbb
cmp
and
push
fcmovnbe
test
inc
mov
fs
cmp
es
decb
push
ror
leave
mov
shr
addl
and
or
adc
xor
xchg
cmp
xor
std
and
mov
call
lret
adc
mov
popa
ds
add
xor
adc
pop
mov
push
pushl
dec
adc
pusha
xchg
fldenv
add
cli
xor
notl
xchg
push
stos
jbe
cmp
lock
or
or
add
mov
into
repnz
mov
cmc
xchg
js
movsl
xchg
mov
aad
test
cli
inc
dec
lahf
data16
in
or
mov
jecxz
sub
out
and
push
mov
jge
mov
shll
xlat
int3
xor
pushl
add
jmp
iret
inc
outsl
sbb
daa
sbb
adc
mov
mov
lcall
mov
pop
cmpsl
lea
test
push
jmp
je
pushl
push
pop
add
push
xchg
bound
mov
lods
sbb
xchg
fwait
mov
lcall
cmp
push
scas
adc
sahf
sub
pop
lods
pop
jge
aaa
push
and
fcomi
cwtl
inc
insb
decl
sahf
shll
mov
pop
sub
pop
push
std
jno
mov
xchg
inc
movsb
rorl
jg
stos
push
ljmp
xor
inc
add
popf
fcoms
adc
jo
les
dec
out
fiadds
ficomps
pop
pushf
lock
mov
mov
sbb
or
fistpll
mov
cmp
ja
adc
int
decl
pop
cmp
add
dec
repz
lods
adc
jmp
aaa
mov
test
in
je
ljmp
pop
gs
stos
out
jl
clc
pop
dec
jno
bound
mov
bound
mov
call
int
jg
jg
in
and
push
push
inc
push
fs
into
test
add
or
jmp
rolb
call
fcoml
ret
in
cld
and
xor
decl
lock
aas
pop
ret
xor
inc
push
addb
sarb
jmp
dec
in
mov
add
bound
mov
inc
dec
test
aas
dec
orb
lcall
testb
and
sub
add
add
mov
stos
or
movsl
sbb
push
dec
repnz
jge
and
pop
sub
lcall
and
in
push
push
inc
andps
ljmp
stos
push
arpl
push
movsl
xor
inc
loopne
ljmp
dec
mov
int
cmpsw
and
incl
jo
and
xchg
cs
or
nop
jbe
scas
and
mov
idiv
int3
and
inc
jecxz
insl
pop
shlb
mov
loopne
rolb
ljmp
lods
sahf
loop
jmp
push
push
insb
cmpsl
adc
adc
mov
loop
jp
test
decl
ret
bswap
fsubrs
fs
bound
dec
stos
jg
mov
cmp
mov
test
dec
mov
jbe
add
movb
cltd
aam
push
stos
inc
cmp
inc
aaa
cld
pop
cmc
or
add
and
clc
shrb
cmp
incl
xchg
cmpsb
mov
pusha
das
adc
mov
or
subl
and
and
in
sahf
push
or
mov
mov
incl
icebp
aaa
std
decl
rorl
stos
mov
push
cmp
xchg
ja
dec
inc
mov
lea
fisttps
movsl
or
mov
add
xchg
pusha
push
sahf
repnz
dec
add
xor
adc
mov
sub
and
mov
mov
shrb
fidivs
inc
push
cs
adc
pop
push
leave
mov
jb
sbb
jmp
xchg
push
sti
stos
pop
pusha
mov
mov
in
mov
lcall
sbb
loope
das
and
call
loope
adc
push
mov
jle
pop
fmull
mov
stos
sbb
pop
outsb
ss
dec
mov
aaa
into
loope
test
clc
incl
mov
mov
sub
arpl
add
sbb
push
sub
ljmp
mov
dec
inc
add
push
push
jmp
cld
mov
loopne
lret
xor
popf
cld
jecxz
stos
and
mov
out
rclb
ret
popf
shlb
jo
push
jg
push
or
dec
inc
pop
mov
lock
ljmp
mov
pop
je
or
and
aas
insl
mov
std
fistpl
and
add
mov
or
and
addr16
push
test
cmp
mov
xor
sbb
and
push
inc
dec
out
push
popa
push
ljmp
adcb
add
lahf
repnz
dec
lcall
push
scas
lods
test
in
mov
push
decl
arpl
jne
scas
faddl
popf
sub
jg
notb
sbb
jmp
ret
cli
xchg
idivb
rol
cmp
xchg
push
imul
aaa
cld
ss
ja
mov
test
adc
js
loopne
mov
fildl
bound
jle
adc
rcr
movsb
xchg
adc
repnz
inc
dec
divl
jno
test
pushl
add
int
adc
sbb
int3
sub
in
std
fcomip
call
push
das
or
sbb
xchg
xor
je
dec
dec
or
jl
add
mov
lahf
sub
shlb
ss
mov
add
push
lcall
call
mov
cmp
ucomiss
inc
xchg
orl
jmp
or
dec
push
and
sub
in
movb
push
fists
cmpsb
and
sub
mov
jbe
aam
jmp
mov
decl
pop
xor
hlt
and
add
push
jg
decl
ljmp
enter
sub
push
sub
call
fcompl
das
in
push
repnz
add
loopne
movsb
or
jmp
sub
push
mov
or
and
push
mov
push
inc
outsl
fldenv
sub
std
cmp
arpl
stos
sub
sbb
mov
adc
aad
sub
popf
movsb
dec
or
dec
imul
out
xchg
pop
xor
jbe
jmp
imull
or
jmp
or
gs
icebp
pop
mov
lea
decl
push
icebp
das
lds
push
stc
loop
call
std
imull
mov
push
std
dec
pusha
jbe
xchg
data16
mov
rolb
call
int3
lcall
xchg
adc
push
xor
add
lcall
add
add
cmp
loop
pushl
and
push
mov
addb
ljmp
and
pop
jp
test
and
test
les
xor
into
mov
in
shll
out
fiadds
ret
mov
mov
jg
or
loop
out
ljmp
sub
jo
inc
es
cwtl
cmp
mov
subl
add
shl
in
cmc
icebp
orb
dec
xor
xor
ud0
mov
pushf
add
or
and
adc
push
cmc
sub
mov
div
sbb
fdecstp
push
mov
ret
hlt
incl
push
jle
adc
shll
push
sub
xchg
cmp
sbb
incl
int
das
aam
loopne
push
lods
xchg
aam
adcb
dec
adc
adc
xlat
ret
mov
or
cli
mov
cmp
xlat
adc
adc
jb
call
mov
cmp
daa
xor
mov
sbb
sbb
or
lods
adc
jbe
lcall
pop
lods
mov
call
jo
push
lret
jg
insb
andb
xor
in
call
push
add
mov
mov
add
push
insl
push
addb
fistl
jbe
xchg
jecxz
jo
dec
loop
cmp
cmp
pop
pop
bound
adc
adc
ljmp
dec
dec
mov
ljmp
and
adc
pop
aas
mov
insb
add
or
mov
decl
sbb
repz
and
je
sbb
mov
ljmp
out
or
add
outsb
xchg
mov
loopne
add
add
sbb
push
sub
xor
jo
ret
je
scas
sub
jg
pushl
comiss
or
movsl
arpl
aad
mov
pop
jg
cwtl
jecxz
cwtl
leave
lods
clc
call
jg
fstps
or
mov
and
addr16
std
call
lods
js
xor
orb
push
xchg
out
fs
hlt
fiadds
loope
les
push
push
incl
jae
sub
dec
mov
mov
fwait
imul
sub
call
mov
adc
mov
fisubrl
dec
push
shll
inc
lea
mov
mov
and
sbb
jno
aam
mov
dec
ret
pusha
aaa
enter
incl
cli
push
push
add
mov
push
jecxz
sarl
or
hlt
dec
or
cli
incl
xchg
lock
inc
dec
arpl
inc
jp
dec
mov
outsl
or
ljmp
bound
jp
xlat
and
adc
notl
pop
aam
jns
add
pop
push
das
ret
adc
lea
pop
pusha
or
cld
pop
or
push
mov
mov
or
pushl
pop
popa
xor
das
cmp
push
adc
daa
movsl
shll
push
nop
test
dec
and
jmp
ljmp
stos
xchg
stc
cltd
mov
mov
jecxz
addr16
test
andl
pushl
cld
movsb
fs
mov
iret
xchg
stc
jg
mulb
push
in
jbe
jle
std
decl
clc
sahf
mov
xor
pop
ss
mov
pop
scas
cmp
sub
push
les
lcall
cltd
imul
mov
insl
fnsave
out
ret
fcmovb
inc
push
mov
mov
pushl
jp
scas
cli
mov
shlb
push
push
mov
add
inc
inc
int
movsl
jmp
or
jno
ljmp
clc
and
mov
in
inc
inc
mov
jb
mov
shll
and
pop
sar
mov
es
pushf
lcall
dec
fs
call
lock
stc
gs
je
scas
sub
int3
test
pop
gs
add
pushl
clc
lods
sti
inc
sbb
and
and
push
and
adc
call
decl
stos
dec
jp
mov
and
test
xchg
jg
sbb
je
push
in
mov
stc
sub
mov
jl
push
je
mov
jnp
js
mov
mov
leave
dec
cmp
pop
idivl
incl
mov
cltd
ret
in
sub
mov
sbb
rcrl
fisubrs
mov
aad
ret
mov
mov
jbe
jnp
incl
shll
sbb
mov
ds
fs
test
sub
or
test
js
mov
mov
sub
or
pop
lock
insb
lods
push
dec
data16
call
add
shlb
mov
push
mov
cs
shlb
ljmp
shrb
jge
and
inc
jecxz
sbb
loopne
xchg
pop
fldcw
stos
sub
add
aaa
scas
clc
sub
fsubrl
into
dec
ja
fildl
inc
cmp
or
cli
sub
fsubrl
test
sub
addr16
dec
xchg
imul
push
decl
xchg
aad
jnp
mov
sbb
push
add
mov
decl
jmp
lcall
incl
push
jnp
int
addr16
loop
sbb
sbb
out
pop
pusha
xor
gs
ficoms
jne
adc
jecxz
push
loop
mov
cmp
cmpsb
ljmp
push
lcall
cld
lret
adc
das
jg
pop
sbb
cmpsb
call
fs
push
adc
pop
lock
jmp
jle
arpl
mov
dec
dec
xchg
mov
xor
mov
aaa
sbb
inc
push
test
mov
das
push
xor
aas
pop
add
test
aaa
loopne
sub
pop
add
call
inc
mov
negl
dec
jecxz
decl
mov
and
mov
test
out
xor
jp
daa
test
fisubl
lahf
fnstenv
fidivrl
add
call
mov
nop
popa
or
mov
daa
xor
lahf
adc
loopne
jno
out
lock
jae
or
push
sub
add
inc
popa
ffreep
cmpsb
push
add
jbe
add
clc
mov
test
cld
ja
and
xlat
stc
lods
je
scas
stc
cmpsl
ljmp
sbb
mov
mov
outsl
mov
dec
pop
cli
add
cmp
push
push
loop
sbb
cmpsl
fsub
scas
xchg
jecxz
jecxz,pt
pop
sbb
cld
jmp
sbb
sti
sar
dec
je
inc
es
push
sbb
sub
pushl
addl
es
adc
or
push
roll
lock
inc
mov
cli
inc
inc
mov
les
push
lret
std
decl
cwtl
test
xor
and
jg
or
js
andb
clc
icebp
aam
shll
lcall
imul
jp
lret
add
movsl
mov
pushl
pop
pop
sbb
cli
shlb
xchg
push
outsl
test
jp
into
fnsave
add
mov
dec
jbe
pop
mov
pop
cmpsl
mov
in
cmp
daa
jle
jno
out
xchg
mov
mov
jge
xchg
add
add
pop
mov
xchg
test
cmp
cmp
int
mov
or
stos
jb
inc
jmp
lcall
loopne
fucomip
jbe
mov
enter
aas
es
nop
pop
jg
sarl
mov
out
mov
lcall
cld
stc
mov
add
push
clc
inc
inc
push
stc
js
adc
inc
shlb
stos
pushl
loopne
jo
mov
push
pop
test
movsl
add
jnp
mov
loope
or
push
dec
lds
push
dec
leave
jmp
mov
cmp
loop
xor
cmp
pop
pop
sub
ja
pop
aas
adc
popa
sbb
bound
nop
cmp
xor
pushl
cld
js
mov
push
stc
add
in
or
mov
dec
sub
inc
js
xchg
dec
inc
sub
sub
mov
out
xchg
dec
jmpw
inc
cmpsb
dec
aad
lock
fsubs
xchg
and
lcall
pushf
jbe
mov
mov
pop
jle
xor
dec
loopne
sub
sar
mov
adc
mov
push
xor
add
cmovns
and
loopne
jg
test
lret
popf
jp
mov
bound
addb
jp
loopne
mov
mov
sub
add
jo
and
xchg
and
test
in
or
lock
adc
imul
fisubl
test
jge
mov
inc
push
stos
incl
or
push
mov
push
test
sti
lcall
xor
jge
adc
push
and
and
inc
fisttpll
jns
sar
jg
pop
cmp
push
popf
loop
test
loopne
adc
js
jns
push
cmp
jge
lea
decl
ljmp
aam
sub
mov
push
inc
sub
inc
adc
decl
mov
sahf
jp
mov
das
nop
xor
inc
ss
stc
lcall
cmpsb
aad
popa
test
mov
das
dec
std
jne
push
js
arpl
cmp
aad
gs
nop
gs
stc
and
addr16
int
push
imul
pop
pushl
and
jae
mov
fistps
or
add
dec
incl
xchg
push
pop
imul
dec
push
ljmp
add
push
jmp
xor
mov
mov
add
mov
ljmp
jnp
sar
lock
cltd
pop
push
sbb
fistl
mov
xor
inc
fs
xorb
incl
xchg
mov
jnp
clc
lcall
lcall
sbb
mov
aad
mov
bound
mov
test
arpl
xchg
incl
or
dec
inc
cmpsl
orl
adc
mov
sbb
sbb
mov
mov
not
add
or
or
roll
add
cmp
sub
dec
adc
icebp
outsl
cli
das
push
mov
outsb
push
clc
shlb
dec
cli
dec
dec
inc
mov
fcoml
stos
mov
dec
sbb
xlat
loop
adc
call
push
adc
or
loop
movsb
clc
xor
push
xchg
adc
push
mov
and
insb
dec
fldt
cmp
cltd
dec
push
dec
rcll
dec
mov
sarl
jnp
push
out
ret
push
pushl
cld
incl
roll
aaa
adc
subl
sahf
outsb
jg
sbb
cmp
mov
das
rorb
pop
xor
jmp
lcall
mov
cmp
or
push
shrb
in
push
xor
inc
hlt
sub
xchg
dec
dec
xorb
fsts
mov
outsb
js
jp
or
sbb
pop
cmp
clc
xor
ret
push
clc
xchg
aas
dec
jbe
add
xor
xchg
or
cld
cmp
sbbb
test
roll
jo
adc
sahf
hlt
inc
sub
fs
cmpl
or
pusha
push
add
stos
orl
mov
mov
cmp
adc
pop
mov
sti
fsubrs
or
mov
dec
inc
sub
mov
lcall
inc
fcmovb
sub
mov
sub
les
push
into
push
mov
add
sub
xchg
insb
sahf
incl
rcl
cmp
aaa
xor
imul
into
imul
ss
call
or
je
cmp
add
outsl
or
mov
mov
imul
inc
adc
pop
dec
add
cli
stos
inc
mov
jg
andb
stos
xorb
cld
adc
lret
lcall
jmp
fs
lods
or
xchg
xchg
fcoms
sbb
jg
pushl
lret
pusha
jecxz
mov
pop
out
cli
loopne
scas
imul
pop
lock
scas
clc
pop
fsubrs
fwait
adc
add
mov
mov
add
sbb
call
arpl
pop
xchg
ret
or
mov
in
leave
adc
lock
fadds
lcall
push
or
daa
pop
call
imul
nop
arpl
pop
mov
pusha
ljmp
dec
xchg
inc
inc
push
mov
lahf
cmp
scas
inc
mov
inc
int
jnp
mov
xor
stc
in
and
jl
and
out
insb
push
mov
test
outsl
mov
fnstenv
sar
push
mov
pop
xchg
mov
or
push
sbb
push
movsl
xchg
lods
stos
ret
sbb
fcoms
ret
xor
dec
or
stos
add
arpl
sbb
push
xor
sahf
enter
dec
call
xchg
or
pop
xchg
js
or
insb
cmp
call
mov
or
insl
add
insb
sub
xor
in
jbe
push
push
loope
jae
in
test
aam
mov
jg
iret
push
movsl
push
xor
adc
or
jo
sbb
shrb
push
and
in
out
ss
or
xchg
mov
addb
ljmp
and
and
sbb
dec
lcall
aam
cld
das
jl
fbld
fcomip
out
jno
sbb
jecxz
or
movsb
add
jle
xchg
ljmp
cmc
dec
sbb
ljmp
pushf
and
mov
push
cwtl
jp
cmpsl
cwtl
cmc
xchg
pop
cmp
and
mov
push
or
pop
ret
and
inc
dec
pop
cli
push
ljmp
daa
or
add
out
popa
mov
fiadds
push
xor
pop
das
mov
fs
mov
fisubrs
pusha
inc
pop
pop
cmp
pop
mov
stos
nop
sbb
pop
sub
dec
call
jns
mov
cmp
das
lahf
jb
and
adc
pusha
test
and
call
test
in
sbb
mov
lahf
out
inc
or
and
and
inc
add
andb
jo
jg
aaa
fisubs
pop
nop
shrl
cld
fld
andb
ret
jg
jmp
call
xchg
dec
arpl
ss
dec
mov
ficoml
out
or
jmp
fcoms
inc
lock
cmc
cmpsb
sub
test
negl
out
dec
mov
adc
cmp
or
jge
lahf
pop
cmp
dec
fdecstp
test
and
jae
push
inc
sub
add
out
sbb
jmp
mov
into
jno
mov
das
je
test
sti
push
mov
pusha
imul
shll
popa
popl
and
call
adc
push
mov
sub
scas
cli
ror
fstps
xor
push
sarl
into
fisttpl
jns
add
scas
cli
jmp
push
and
or
jno
push
mov
addb
sbb
inc
clc
fdivrs
add
add
fdivp
sub
adc
jo
adc
and
cmpl
movsb
test
jae
push
xchg
pop
cmc
shrl
xor
jmp
arpl
pop
daa
and
jae
and
jae
jl
xor
movsl
push
ljmp
push
dec
subl
jne
xchg
ja
incl
inc
pop
inc
aad
out
aad
cmp
pusha
gs
aam
andb
stos
or
incl
push
pop
cmp
sbb
pop
add
mov
daa
push
mov
dec
shll
movsb
jl
xchg
and
je
data16
mov
subl
and
sub
sbb
rolb
add
mulb
hlt
idiv
das
push
xor
loop
cmp
inc
push
xchg
ret
das
fdiv
add
mov
aam
pop
xchg
cwtl
dec
imul
cmp
mov
in
sub
sbb
jle
inc
mov
negl
push
pop
inc
inc
dec
in
xorl
pusha
add
or
sbb
pusha
mov
and
push
jo
push
add
mov
dec
push
decl
cmp
and
imul
xlat
rolb
ss
dec
inc
and
adc
cmc
adcb
adc
sbb
mov
incl
addl
push
aaa
and
test
gs
or
inc
cmp
pusha
in
mov
jg
xchg
ja
cmp
push
and
andb
push
adc
inc
mov
pushl
lcall
pop
push
pusha
xor
mov
jns
call
fdivl
ljmp
outsl
mov
fbstp
pusha
cmp
sbb
fs
aaa
mov
mov
cmp
pop
sbb
mov
je
jl
pop
dec
int3
rorl
push
notb
lret
adc
jno
mov
cli
xchg
pop
pop
inc
pop
aad
dec
gs
loop
lock
jg
sbb
xchg
pop
loopne
adc
pop
dec
xchg
incb
push
bound
xor
push
xor
or
call
cld
or
repnz
add
mov
xchg
mov
lcall
add
add
rolb
mov
inc
and
gs
push
mov
lock
lcall
movsb
cwtl
jns
sbb
cmc
push
push
xchg
xchg
mov
sbb
imull
pop
and
push
xor
cmc
pop
aam
sbb
lea
push
mov
test
jmp
test
cmp
aam
sub
ljmp
imul
xchg
arpl
sbb
aam
add
jg
and
fiaddl
push
test
sbb
mov
cmpb
pushl
std
lcall
add
jb
push
cmpsl
nop
test
jg
aas
push
xchg
or
add
pop
jno
cmp
roll
adc
mov
incl
pop
push
mov
sbb
das
sbb
dec
iret
xor
mov
push
mov
incl
fiaddl
out
xchg
add
xlat
testb
sub
decl
push
sub
or
sub
add
jecxz
sbb
push
call
cmp
bound
mov
xchg
aas
jae
pop
movsl
add
push
orl
jne
pop
sub
pushl
bnd
pop
mov
push
hlt
sbbl
push
jb
and
imul
ljmp
mov
hlt
cmc
push
xchg
xor
aas
mov
mov
je
adc
decl
adc
pop
add
cmp
xchg
sub
loope
adc
pop
addl
mov
lock
outsl
leave
aaa
sahf
cmp
in
pop
xchg
sub
cld
ja
xchg
pop
xor
test
sahf
push
pop
cmpsb
sar
incl
push
cmp
in
roll
gs
negl
adc
pop
loope
xor
xchg
adc
push
pop
aam
inc
and
sbb
orl
sbb
and
test
mov
incl
inc
xor
sbb
pop
mov
jg
idiv
add
or
xchg
repnz
add
add
cmp
fdivp
shll
xchg
sbb
aad
mov
sbb
adc
add
sbb
fstl
pop
push
xorb
jne
mov
mov
jne
sub
mov
jg
and
lcall
pop
mov
pop
pop
or
decl
sub
add
jb
pop
loopne
incl
pop
xor
sahf
inc
cmpsl
sti
js
cmp
adc
adc
mov
cltd
dec
dec
cmp
movsl
add
cmp
xor
or
cmp
rcl
ljmp
pop
push
sub
fldt
xchg
popa
sub
jmp
hlt
lret
popa
repnz
xor
sbb
popa
cmp
jbe
mov
dec
incb
sub
decl
and
xchg
sub
subb
shll
icebp
outsl
jbe
sbb
inc
mov
add
xorb
adc
decl
push
lret
es
xchg
negb
jno
js
insl
fistpl
push
mov
stos
fsubl
jmp
xchg
xor
dec
push
xor
mov
push
call
lods
sub
mov
add
sbb
fistl
add
cli
push
call
and
and
hlt
mov
js
adc
add
jb
ficomps
dec
movsl
inc
test
inc
mov
or
pop
sbbl
pop
repnz
orb
shlb
pushf
xchg
cmpsb
ja
rolb
adc
add
dec
xchg
mov
mov
movsb
inc
jbe
pop
notl
pop
mov
mov
xchg
mov
pop
cmc
push
inc
inc
adc
xchg
dec
inc
adc
mov
mov
push
cmc
sbb
sbb
sbb
add
popf
xlat
daa
test
call
je
pop
nop
sarl
push
pop
adc
test
loopne
cwtl
push
gs
mov
inc
sub
lcall
call
push
sahf
or
push
jle
push
mov
mov
lcall
js
lods
inc
and
dec
mov
mov
add
stos
add
decb
adc
icebp
addr16
inc
shrb
push
xlat
lock
leave
mov
inc
and
lret
mov
xchg
outsb
sbb
xor
pop
fs
jg
stos
add
in
add
pop
jb
push
jb
add
and
pop
rcll
adc
add
lods
imul
push
clc
incl
xchg
jno
jae
add
jae
pop
cmc
or
out
cmp
and
cmpsb
mov
mov
std
or
adc
mov
idivb
pusha
pushf
mov
and
orb
movsb
inc
mov
ja
pop
or
adc
and
ljmp
lods
call
cmp
xchg
cmp
jge
and
pop
dec
popa
mov
mov
stos
or
sbb
incl
fidivl
insb
fstpt
ficomps
insl
jae
mov
imul
xchg
out
cmp
pushl
stos
es
and
add
fs
push
ss
daa
icebp
outsb
stc
jmp
and
dec
adc
repz
jb
popa
jo
mov
call
sbbb
repz
jae
mov
adc
ds
dec
mov
repz
rcl
cli
inc
lahf
xchg
enter
sbb
mov
add
jp
jle
jp
call
adc
cwtl
ret
push
aad
sti
mov
dec
xchg
movsl
add
cli
ret
cmp
call
rclb
add
mov
or
pusha
add
mov
fiaddl
jl
mov
sarl
adc
xchg
dec
and
pop
jno
adc
sbb
push
push
or
aaa
fst
pop
bound
jae
xchg
ret
in
aad
insl
jbe
and
decl
cmp
addb
pushl
pusha
outsb
insb
fcoms
xor
push
add
xchg
push
fwait
push
inc
add
add
inc
push
jnp
xlat
jnp
add
lcall
mov
mov
mov
addb
or
mov
loopne
xor
dec
push
pop
addb
test
mov
clc
jmp
scas
and
xor
push
sbb
xchg
mov
xchg
call
stc
adc
rcll
ja
int3
repnz
jecxz
ret
mov
dec
bound
add
das
clc
call
das
lret
in
sbb
fs
mov
int3
ret
xorps
lcall
call
pop
sbb
push
sbb
adc
loop
aaa
mov
out
xor
cmpsl
sub
ja
mov
adc
lcall
cmp
dec
clc
clc
add
lock
cld
jo
xor
fiadds
pushl
xlat
inc
in
mov
cmp
xor
add
nop
shrb
jg
mov
lods
cli
inc
or
pop
loop
test
loopne
fsubl
dec
sbb
mov
shll
outsl
call
mov
nop
js
cltd
inc
and
push
lea
and
and
lcall
pusha
aad
mov
fwait
in
mov
out
outsl
movsb
sbbl
jle
je
push
sub
add
insl
sbb
jno
adc
mov
dec
scas
js
test
add
popa
out
mov
cs
add
mov
cmpb
sub
scas
pop
hlt
add
testl
outsl
jo
pop
sbb
lahf
lods
out
sub
in
hlt
mov
push
push
out
scas
mov
clc
je
cltd
dec
mov
pop
xor
ror
out
mov
adcl
sahf
cmp
aad
pop
cmp
addr16
and
push
or
and
jmp
ds
outsl
sbb
sbb
xor
fdivrp
bound
and
push
add
out
cmp
inc
sbb
mov
inc
sbb
lret
in
adcb
push
test
jl
outsb
push
call
bound
out
clc
push
add
sub
jne
mov
decl
incb
adc
inc
dec
rorl
in
push
dec
pop
fsubr
sub
or
rolb
pushf
push
jle
mov
fsubrs
sub
add
push
or
sub
sub
pop
fs
push
pop
jmp
in
and
decl
cmp
mov
lea
loopne
cmp
fwait
pop
lock
aas
jo
hlt
push
pop
lea
xor
dec
adc
repnz
fadds
in
int3
fdivr
das
cli
out
add
pop
out
xor
and
in
and
out
imulb
in
push
imul
cmpsl
xchg
cmc
outsl
ss
add
loopne
jp
add
das
and
mov
xor
jne
mov
in
cmp
outsl
lods
loop
out
lcall
push
add
cmp
mov
in
aas
fldenv
sub
lahf
iret
add
pop
xor
push
clc
mov
stc
js
inc
sub
push
sti
push
adc
inc
inc
and
mov
dec
push
push
aas
loope
loope
hlt
repz
mov
decl
dec
out
aad
jmp
pop
hlt
mov
xchg
fidivs
sub
xor
jle
push
testl
sarb
test
push
sub
push
in
int
mov
incl
sub
mov
push
mov
or
sub
adc
cs
scas
and
jle
add
call
scas
cli
and
jno
push
into
inc
mov
push
jno
inc
push
or
shlb
loopne
add
rol
inc
andl
or
sar
pushl
and
dec
jo
test
jne
clc
test
and
adc
push
mov
and
call
cmp
int3
cwtl
shll
pop
dec
sub
mov
xlat
and
test
ljmp
mov
mov
pop
xchg
decl
push
adc
roll
or
test
sbb
inc
mov
js
movsl
push
xorb
test
pushf
addl
les
cmpsl
sbb
sbb
popa
enter
and
addb
mov
pop
mov
and
fcompl
mov
or
loopne
outsl
lcall
out
cltd
or
jo
mov
jb
jo
jmp
or
int3
aad
lods
inc
je
push
int
inc
jg
cmpsb
shll
add
pop
inc
scas
fdivrs
xor
inc
fstpl
insb
and
scas
dec
scas
cmp
dec
andb
mov
lock
rolb
test
xor
aam
xor
rcrl
mov
lcall
add
adc
inc
mov
cmp
lcall
lcall
xchg
cmp
leave
inc
iret
ret
add
sub
sbb
popa
or
dec
or
adc
scas
aam
xchg
je
jno
incl
mov
adc
dec
sub
popa
sbbl
ss
add
loopne,pn
and
dec
sub
mov
fdivl
xor
or
filds
or
js
test
cmp
clc
sbb
addb
inc
mov
idiv
call
adc
ljmp
add
pop
push
sub
push
cmpsb
pushl
ret
adc
xor
pop
test
sub
or
incl
ret
mov
call
inc
shll
aam
pop
xor
push
test
sbb
push
push
aad
enter
cwtl
mov
inc
insb
hlt
les
inc
or
insb
and
call
cltd
insb
mov
mov
daa
xchg
js
dec
test
or
push
add
daa
push
pushl
test
adc
cs
lahf
pop
les
or
or
add
cmpsb
jg
sub
and
dec
cmpsb
mov
sub
mov
out
cli
fwait
cli
shlb
fsubrl
or
hlt
jge
mov
mov
or
stos
mov
mov
jmp
fcmovbe
add
cwtl
and
in
mov
jmp
lcall
out
and
pop
test
add
aas
mov
clc
out
cmpsb
inc
jae
xor
lock
sbb
mov
leave
jnp
outsl
adc
sub
stos
inc
add
fcoml
mov
and
add
push
inc
sbb
pushl
mov
scas
shll
int3
jmp
dec
mov
inc
xchg
jo
or
nop
xor
mov
sti
pop
scas
lcall
xchg
push
jle
loope
xchg
jp
or
int3
pop
mov
jnp
push
shlb
pushl
cld
xor
fidivl
mov
sub
add
lcall
dec
or
clc
and
ds
stos
xchg
or
mov
push
lea
push
and
andl
call
dec
push
mov
stc
add
jge
push
aaa
xchg
je
rcrl
add
add
or
add
add
dec
push
call
mov
push
ss
mov
push
mov
mov
and
cmp
pop
pushl
jmp
push
js
sbb
inc
cmpsb
or
cwtl
jns
adc
out
les
sti
aad
push
rolb
push
or
xchg
loop
test
fs
dec
mov
pop
jns
adc
call
add
lret
into
bound
dec
mov
or
dec
cwtl
or
dec
push
add
incl
adc
subl
mov
add
loopne
add
fs
jl
ljmp
in
sub
push
xchg
mov
add
arpl
dec
mov
pop
cmp
xchg
insl
mov
pushl
les
and
popa
into
jae
test
cmc
push
xchg
inc
sbb
scas
orb
jae
adc
repz
cltd
mov
or
pusha
adc
pop
inc
mov
push
les
ja
roll
and
push
aam
mov
add
ds
loop
inc
inc
push
add
mov
mov
stc
sarb
add
jp
loope
call
pop
icebp
call
dec
xor
push
ret
rclb
cmp
shlb
nop
add
fisubrl
cmp
mov
aaa
std
imul
ss
rorl
inc
push
test
aam
pushl
mov
and
movsb
aam
outsb
adc
mov
daa
mov
aaa
std
std
fimuls
orw
mov
sub
idivl
and
fcmove
cmp
lcall
mov
test
jne
nop
or
inc
fwait
mov
inc
call
call
mov
sbb
xchg
shlb
test
adc
lret
incl
adc
jle
inc
mov
and
loopne
incl
dec
in
dec
pop
lret
mov
cli
loope
cli
xchg
adc
add
xlat
rcl
pcmpgtb
adc
mov
pushl
pop
adc
roll
cmp
or
out
pop
int
mov
add
jg
and
adcb
xor
or
push
nop
add
sub
lcall
or
mov
push
xchg
stc
add
fisubs
mov
pop
insb
pop
and
push
ljmp
mov
jo
inc
adc
xorb
sbb
push
jno
add
sub
mov
dec
aad
mov
and
adc
lock
inc
and
decl
dec
push
outsl
out
movsl
fldt
ret
xchg
mov
decl
dec
push
mov
out
cld
xchg
adc
inc
xor
dec
shll
xlat
jmp
push
xchg
push
jno
xchg
inc
xor
popa
inc
mov
pop
je
cli
push
push
xchg
or
mov
mov
push
pop
orl
cld
ljmp
pop
cmp
lock
data16
add
and
in
out
sub
and
decl
or
push
push
xor
lock
pusha
roll
inc
inc
aas
jp
xchg
pop
test
cmp
fiaddl
sbbl
sbb
aam
add
push
sbb
pop
or
std
xor
add
cmc
test
pusha
test
incl
cld
mov
add
xor
jle
add
or
push
dec
mov
jmpw
and
stos
push
jne
incl
jge
and
sub
or
daa
add
or
mov
cmc
std
movsl
mov
or
lea
jns
ret
cmp
ss
call
pop
lret
push
jbe
notl
rolb
or
outsb
testl
sub
adc
mov
and
jge
sti
fwait
push
aaa
enter
lock
ds
and
enter
test
dec
push
daa
mov
push
pop
sub
pop
enter
push
add
call
imul
cmpb
ret
mov
jg
and
dec
pop
add
push
ljmp
fstps
loopne
or
push
push
popa
or
movsb
dec
or
xorb
pop
add
call
or
out
cmpsb
inc
push
inc
out
push
addl
sbb
mov
clc
out
mov
pop
jecxz
cmp
jl
xchg
dec
movsb
repz
nop
nop
ljmp
cmp
outsb
aaa
sbb
xchg
sahf
cmp
loop
mov
or
or
lock
pushl
and
mov
imul
and
sarl
xchg
ret
xchg
adc
jno
insb
jae
int3
jecxz
sub
inc
and
jg
pusha
js
push
jno
faddp
shl
fbld
popa
inc
aas
pop
xlat
jle
dec
add
subl
jle
std
mov
jl
cli
cmp
xor
sti
xlat
mov
std
mov
ds
mov
jg
jmp
std
aad
mov
jecxz
mov
add
lcall
mov
xor
adc
sub
mov
sbbl
movsb
push
inc
jno
adc
adc
lcall
inc
jmp
mov
or
push
xchg
fcomp
rcll
jnp
decl
jo
xchg
cmp
push
imul
popa
adc
jle
mov
or
add
cmp
lcall
inc
add
pusha
xchg
adc
arpl
cmp
sbb
sub
popf
xchg
call
push
push
cwtl
orb
add
pushl
insb
or
je
sub
add
ja
pushl
repz
rclb
sub
mov
js
jle
mov
dec
test
mov
push
stos
mov
mov
add
std
fucomip
repz
ud0
negl
dec
or
pop
add
ja
push
cmp
test
mov
mov
xor
pop
sbb
lods
adc
inc
cmpsb
rclb
mov
fists
push
cwtl
mov
aad
xorb
fwait
mov
mov
dec
and
mov
lock
mov
pop
es
pop
cmp
jecxz
jmp
mov
ss
xorl
inc
test
fidivs
add
lahf
sbb
sub
cmpl
sub
or
adc
xchg
adc
inc
sbb
sub
sahf
cs
adc
sarl
xchg
pushf
xor
add
cmp
mov
push
pop
icebp
mov
add
leave
add
or
inc
or
aam
dec
cmp
dec
call
sbb
jmp
sbb
fmull
xchg
loop
out
int3
xorl
dec
mov
dec
test
dec
or
dec
scas
aam
scas
and
cli
and
jecxz
cmpsl
aam
sahf
mov
sti
leave
mov
mov
lods
int3
dec
jecxz
dec
and
sti
jo
outsl
clc
decl
mov
into
cmpsl
scas
sbb
mov
ss
mov
xor
leave
xor
sub
dec
push
repnz
enter
mov
outsl
bound
clc
out
xchg
xchg
mov
dec
stc
sar
dec
dec
xor
sub
inc
ret
movsl
lods
mov
pop
mov
mov
push
ljmp
mov
fwait
xchg
or
jae
dec
fildll
and
fsubrs
inc
cmp
fisttpll
mov
inc
ljmp
and
mov
les
jb
add
push
jg
cmpb
cmpb
test
push
cltd
xchg
sbb
sbb
pop
add
decb
cld
stos
shlb
cltd
xchg
pop
sbbb
cmp
mov
pop
or
js
adc
xchg
xor
decl
test
mov
stos
mov
scas
roll
pushl
pop
fisubl
mov
mov
repnz
cmp
lds
sbb
lcall
in
incl
xor
cs
sub
ja
xchg
fdivr
enter
icebp
ljmp
push
sbb
xor
ret
sub
inc
add
je
clc
outsl
xchg
cmp
mov
and
andl
ljmp
mov
call
jecxz
add
mov
into
enter
xor
sub
or
incl
add
repz
js
push
fmuls
rolb
cli
ljmp
and
inc
adc
or
popa
aam
mov
out
int3
xor
xchg
push
inc
aad
inc
jge
in
aam
loopne
mov
insl
pop
pop
add
xor
sbb
mov
lahf
or
lahf
roll
inc
cld
or
adc
inc
mov
adc
jg
les
int3
lret
inc
test
adc
mov
add
inc
or
pop
cltd
add
andl
int3
sbb
mov
mov
xor
xchg
sbb
or
incb
repz
xorl
test
jno
ss
mov
dec
call
xchg
sbb
jg
sub
adc
mov
push
mov
jl
dec
aaa
cld
incl
add
push
pop
mov
mov
addl
pop
add
call
fcoms
pop
xor
scas
adc
sbb
and
sub
in
ja
pushf
xchg
gs
stos
lods
sbb
les
push
adc
or
mov
pushl
xor
test
cltd
imul
out
fcomps
dec
cltd
stc
mov
cld
sbb
mov
iret
imul
mov
test
sbb
and
adcb
test
nop
clc
jg
push
loopne
add
lods
add
adc
aad
jns
pop
jns
std
decl
jle
into
rolb
ret
aad
xorb
sub
pushl
pushf
jl
fistpl
fstpt
fs
aas
xor
cltd
add
cmc
lret
xor
sarl
ljmp
jns
or
push
lods
js
js
add
adc
add
cld
fwait
decl
adc
push
rolb
les
sbbl
pop
dec
fstpl
nop
roll
add
addb
and
and
pop
cli
add
and
fsts
push
rolb
pusha
pop
out
inc
lcall
loopne
add
sub
sbb
lock
xor
jle
add
mov
test
cwtl
test
call
cld
sbb
cmp
popa
xchg
cmc
popf
adc
lds
inc
loope
ljmp
filds
cmp
cld
mov
mov
sbb
sbb
sahf
mov
or
adc
mov
xor
std
std
fs
in
add
jg
dec
ds
push
sbb
rcll
repnz
jg
icebp
jmp
stc
and
les
insl
int3
loope
push
jns
loope
incl
dec
xchg
mov
or
scas
iret
lods
or
adc
std
lret
fwait
dec
nop
popf
xchg
subl
nop
inc
and
add
and
test
arpl
jecxz
jbe
adc
pushf
fistps
pop
pop
add
pusha
add
add
mov
sub
mov
and
and
lcall
xchg
xor
xchg
sbb
sub
xorl
arpl
adc
imul
adc
or
std
push
in
jle
inc
add
cli
in
cmpl
sar
mov
mov
adcb
stos
jmp
jg
mov
inc
push
xor
mov
add
mov
add
and
push
add
lock
push
mov
add
ljmp
adc
data16
add
sbb
push
mov
inc
add
jae
adc
push
loop
jecxz
mov
ja
shlb
fwait
les
fwait
push
or
sub
fldl
fisubrl
add
shlb
sbb
sbb
sbb
cld
xor
das
clc
mov
push
insb
xchg
arpl
adc
mov
sbb
jg
inc
add
std
sbbl
add
int3
and
pop
test
lea
dec
sahf
incl
shrb
and
mov
ljmp
adc
add
cmc
fdivp
popf
add
pop
inc
add
push
aad
jmp
sahf
pushf
adc
pushl
cmp
xorl
add
push
sub
adc
pushl
push
lcall
subl
cmp
lcall
push
loopne
test
sub
ljmp
fisttpll
push
nop
imul
decl
stos
jl
mov
enter
fwait
jmp
or
inc
dec
jns
push
xor
inc
xor
bound
cwtl
adc
lock
enter
mov
into
loop
call
aad
rorb
jo,pn
add
stos
or
xchg
sub
lcall
outsl
mov
fistl
sub
mov
repnz
sub
pop
add
mov
loop
pop
push
pop
mov
ljmp
aam
shlb
jle
fldt
cwtl
shll
mov
pop
xor
and
mov
push
test
push
subb
mov
or
test
pushf
mov
pop
cwtl
mov
mov
rcrb
aad
xor
jg
cmp
or
test
outsb
mov
ret
inc
inc
push
jb
test
lea
cli
outsb
adc
push
mov
in
mov
push
adc
outsl
sub
or
call
mov
ret
xchg
adc
fmuls
cs
add
das
sub
or
test
inc
fs
push
lcall
aas
scas
lea
js
and
mov
xor
sbbb
imul
in
xchg
subb
dec
push
clc
xor
outsb
lret
cltd
mov
fwait
movsl
fcomip
xorl
insb
add
push
movsb
mov
or
test
mov
mov
in
test
loop
sub
add
outsb
sbb
or
es
sub
pusha
jmp
sbb
data16
and
je
mov
outsb
inc
lahf
lock
fstl
sahf
pop
enter
mov
adc
jg
dec
mov
adc
mov
jns
sbb
xchg
cmp
jb
call
add
call
sub
or
mov
icebp
inc
xor
pmaxsw
jmp
add
punpckldq
ss
xchg
and
loopne
into
cmp
mov
xchg
adc
cmp
in
decl
fmuls
sbb
ja
mov
in
mov
mov
ljmp
out
stos
push
add
mov
xor
mov
push
test
incl
mov
lds
mov
imul
call
and
cmp
xchg
mov
xchg
pushf
mov
lock
rorb
dec
andl
fcomip
incl
out
pop
adc
sbb
adc
fwait
loop
fwait
in
jns
jne
shlb
flds
adc
faddl
or
mov
adcl
insb
nop
jp
test
mov
es
sbb
pmovmskb
lcall
clc
je
or
fdivs
adc
adc
xchg
addl
add
mov
cmp
jg
pushf
icebp
sbb
das
pop
daa
inc
inc
popf
fdivs
xchg
popf
rol
and
std
or
loopne
pop
xor
push
xor
add
pushf
xchg
sarb
xlat
sub
xchg
pushl
and
adc
mov
mov
mov
data16
sub
jmp
in
mov
cmp
sub
mov
sahf
jp
pmaxub
les
add
xlat
mov
xchg
pop
dec
mov
push
insb
dec
adc
push
jp
xchg
shl
out
mov
fwait
incb
cmp
push
push
and
testb
xchg
and
inc
loopne
fadd
stc
ljmp
mov
lcall
xchg
lods
sbb
mov
adcb
sub
adc
and
add
sbb
sbb
inc
adc
lds
js
pushf
add
decl
mov
lcall
inc
addl
push
xor
pusha
inc
or
sahf
xchg
xchg
inc
mov
or
jno
and
mov
mov
inc
in
add
mov
cmpsl
into
push
inc
inc
mov
pop
ljmp
nop
rorl
xchg
cli
sub
push
out
pop
xor
dec
repnz
test
mov
aad
sbb
add
sub
out
and
and
mov
or
xor
js
loop
mov
xor
decl
repz
into
xchg
cmp
push
mov
sub
addr16
decl
mov
add
in
shlb
push
mov
fs
mov
cltd
sbb
rclb
mov
test
add
das
mov
inc
xchg
pushl
push
mov
xchg
mov
test
repz
sbb
addb
dec
cmp
sahf
sbb
jmp
push
jge
cmc
into
lock
adc
addl
call
pop
mov
arpl
jb
lods
rol
or
int
mov
xor
test
movsb
ret
or
cwtd
jp
std
add
mov
inc
mov
data16
mov
test
sub
mov
xor
push
aas
ret
bound
xor
orl
bound
cbtw
xchg
out
jl
push
inc
fwait
cmp
and
lods
roll
pop
je
sahf
push
bound
pop
sbbb
adc
popf
dec
lcall
jne
jno
or
mov
jp
mov
sahf
and
mov
or
adc
sbb
jecxz
push
and
imul
clc
push
jne
cmp
push
inc
add
mov
inc
inc
cmp
loopne
inc
rorb
pop
dec
add
pop
inc
nop
xor
call
fistpll
mov
nop
xor
push
rol
pop
xor
sub
adc
adc
pop
loopne
ljmp
and
test
cmp
sub
ljmp
push
adc
push
les
xor
pop
pusha
lods
nop
sbbl
mov
mov
adc
sbb
sbb
insl
pop
push
inc
sbb
and
add
mov
mov
lcall
mov
imul
jo
sub
mov
adc
cld
or
cmp
sbb
test
nop
mov
incl
lods
rolb
adc
pop
rolb
daa
dec
dec
mov
jne
push
pop
inc
adc
adc
sbb
icebp
adc
pushl
push
shll
inc
testl
jbe
data16
fdivrs
ja
pushl
mov
sbb
pushl
jbe
cwtl
and
sbb
add
inc
icebp
jmp
nop
inc
or
push
rolb
cmp
or
test
pop
xchg
sub
je
popa
push
insl
cmp
sar
rorb
lock
jnp
or
and
ljmp
push
push
je
add
xlat
xchg
sbb
xchg
mov
call
cld
adc
cmp
fadd
leave
xor
mov
daa
jecxz
push
lcall
bound
mov
sbb
ss
sbb
jmp
sub
mov
jmp
xor
jo
or
jl
inc
jmp
ret
jne
incl
inc
dec
andb
or
movsb
adc
decl
cmpsb
dec
aas
nop
loopne
lock
inc
dec
sbb
adc
inc
test
ljmp
pusha
sahf
dec
xor
and
adc
mov
data16
inc
push
test
and
xchg
jp
les
loope
inc
cld
ljmp
ror
or
cwtl
or
adc
push
clc
movsl
inc
xor
rolb
add
push
popl
int3
mov
xor
push
sbb
or
es
mov
je
nop
add
mov
adc
lcall
pop
decl
pop
js
push
mov
mov
jle
call
adc
push
rolb
add
and
hlt
or
jmp
decl
sbb
in
jne
xor
push
inc
add
mov
pusha
fldenv
pop
push
dec
and
mov
dec
les
sub
cmp
and
gs
jmp
ret
lea
and
sbbl
pop
sbb
inc
imul
push
mov
mov
hlt
mov
xor
insb
call
mov
sbb
adc
push
add
pop
lcall
inc
test
mov
push
clc
decl
jl
xchg
sbb
nop
cmp
adc
fwait
gs
xor
fildll
ret
or
call
fsubs
push
push
movsb
pop
cmp
xchg
ss
jmp
pusha
rolb
cwtl
mov
dec
xor
and
mov
ret
lcall
sub
pop
add
mov
scas
imul
pop
push
imul
fcompl
xor
pop
scas
xchg
and
and
inc
adcb
xchg
loopne
mov
test
cmpsl
adc
sarl
add
add
mov
addl
inc
in
ljmp
sbb
lahf
in
mov
push
adc
cmpsb
lock
mov
inc
cmp
inc
sbb
push
dec
adc
add
adc
add
movl
mov
push
daa
cwtl
inc
or
loopne
andb
cmp
push
fwait
ljmp
cs
push
call
popa
jle
add
fmuls
push
inc
push
pop
sub
xlat
ret
js
ds
decl
ljmp
fdivs
mov
in
mov
add
and
movsb
imul
dec
add
sub
mov
xlat
out
fcoml
loop
mov
jmp
sub
xchg
or
adc
inc
xchg
dec
loope
jo
shrl
testb
inc
xchg
daa
adc
sbb
fs
inc
daa
sbb
ljmp
push
test
mov
add
inc
dec
xchg
push
int3
inc
or
test
decl
pop
ss
rorl
cmp
adc
cwtl
clc
jle
xchg
test
jp
xor
fwait
cwtl
hlt
pop
xchg
xor
fldt
xchg
mov
pushl
adc
mov
mov
mov
push
cmp
inc
clc
sub
mov
sbb
cli
insb
fs
lcall
mov
decl
clc
mov
test
xor
mov
mov
push
mov
mov
jae
xchg
cmp
sub
xor
mov
lcall
iret
icebp
sbb
sarl
mov
loopne
into
jecxz
add
ret
or
sub
and
clc
inc
and
mov
add
xor
aam
das
adc
sbb
sub
jp
sub
cmp
clc
out
or
inc
cmp
rorl
lods
aas
pop
adcl
dec
loope
jmp
enter
lcall
mov
in
arpl
lcall
sbb
es
or
mov
ss
roll
stc
rorb
aam
les
jno
push
fwait
lods
popf
inc
mov
cmpb
xchg
or
dec
inc
fbld
jl
lods
in
gs
mov
ljmp
pop
insb
and
mov
cwtl
add
lock
test
push
enter
push
xchg
lock
xor
nop
xor
jg
pop
adc
in
sbb
rol
mov
je
cmp
jle
mov
testb
sub
rorb
into
push
inc
cwtl
xchg
loop
divl
add
scas
je
mov
lds
inc
pop
in
repnz
cwtl
test
sub
addl
or
pop
adcb
and
add
sbb
pushl
lea
mov
push
ss
dec
mov
mov
test
or
cmp
xchg
dec
call
loopne
mov
inc
sub
add
dec
neg
sbb
lcall
jae
loopne
xor
pop
sbb
mov
cmp
call
sbb
mov
mov
dec
pusha
sbb
ret
pushl
jo
and
je
jg
cwtl
fcmovnu
xchg
cli
in
movsb
cmpsl
cmp
leave
icebp
sub
pusha
and
enter
addb
mov
lcall
fidivrl
dec
neg
mov
xchg
mov
stc
test
mov
lcall
incl
addb
add
adc
rcrl
xchg
mov
mov
and
push
push
mov
aam
iret
lods
cmp
lock
es
push
xor
dec
xchg
pop
mov
mov
incl
fwait
in
pop
movsl
xchg
subb
stc
in
push
pop
push
fistl
fwait
popf
cld
adc
cli
lock
dec
shlw
inc
inc
push
dec
inc
movsl
insb
ja
call
push
push
movsl
rcl
int
push
cmpb
call
push
cld
fists
add
dec
xchg
xor
add
push
or
jecxz
sbbb
adc
cmp
push
sbbl
pushf
out
cli
lds
inc
sbb
add
adc
pop
xor
ret
adc
jmp
push
xchg
into
gs
add
mov
push
int3
popf
adc
js
sbb
inc
or
dec
pop
pop
mov
nop
ljmp
inc
push
push
imul
cmp
mov
test
ret
ret
push
popf
push
push
or
rcll
xlat
loope
enter
adc
incl
adc
adc
jo
fldenv
les
and
or
in
push
push
xor
lcall
pop
adc
and
loop
add
pop
jecxz
push
and
mov
cmp
mov
xor
outsl
aad
movsb
xor
mov
cmp
sbb
incl
popa
push
mov
shll
push
xor
sbb
aad
xchg
adc
push
add
call
mov
mov
sbb
mov
mov
inc
ficompl
or
ret
cmp
addb
pop
fadd
repz
gs
jecxz
or
fs
cmp
inc
xchg
sbb
sbb
fnstcw
aam
add
push
cwtl
dec
cltd
insl
inc
hlt
test
sar
add
test
clc
subb
inc
sub
call
fsubrs
sbb
inc
sbb
loope
nop
in
clc
adc
imul
in
je
mov
adc
add
dec
leave
lods
jmp
push
jmp
lods
adcb
add
inc
pop
or
xchg
sbb
scas
pop
lock
cmp
stos
mov
mov
outsl
loope
aaa
lea
mov
add
add
and
mov
loopne
sub
push
call
sbb
cmc
ljmp
lock
or
adc
or
mov
or
mov
scas
test
cs
outsb
mov
and
test
mov
vmovsd
or
or
xchg
mov
mov
subb
adc
or
sbb
loop
out
jo
jle
dec
add
mov
dec
cwtl
inc
cmp
mov
and
xchg
push
mov
ja
or
push
add
fmuls
ljmp
xchg
aam
dec
dec
in
mov
inc
or
rcll
lds
jmp
bound
add
or
leave
mov
leave
or
pop
shlb
inc
xor
incl
mov
xor
jecxz
std
pop
sar
adc
push
and
inc
aas
lods
call
inc
shll
incl
adc
call
enter
scas
int
out
fimuls
sub
into
or
rorl
ss
cmpl
jg
xor
or
movsb
aad
rcl
xchg
into
or
leave
push
ds
dec
push
inc
cmc
mov
icebp
pop
push
bound
cs
add
cmp
clc
call
out
dec
adcl
fcom
add
adcl
je
dec
push
pop
hlt
jb
pushf
lcall
sti
mov
mov
inc
cld
jge
pop
sub
std
cmp
imul
stc
fbstp
lcall
cmovs
in
lds
xchg
push
xchg
ficoms
pop
mov
mov
add
pushl
add
pop
test
add
jne
movsl
shr
gs
jmp
dec
aam
decl
inc
imul
mov
out
xor
pop
pop
loope
insb
nop
jb
nop
std
lcall
addb
movsb
jl
fs
std
or
and
mov
clc
sub
gs
or
insl
rclb
xor
and
push
lcall
enter
cmpl
adc
data16
or
rcrl
rcrl
dec
loopne
call
cmp
cmpsb
pop
or
push
stos
push
adc
hlt
loope
loopne
push
insb
mov
inc
clc
mov
mov
dec
push
je
dec
xchg
fiaddl
incl
cmpsl
mov
dec
push
int3
mov
rcl
add
ret
aam
add
pop
inc
cmp
fld
add
in
sbbb
sub
call
int3
adcb
dec
cwtl
or
jmp
push
es
sub
or
mov
jnp
and
jmp
pop
mov
sbb
xchg
push
sbbb
cmp
pop
mov
cmp
add
lods
fnsave
push
repnz
stos
mov
loopne
mov
js
inc
orb
int3
xchg
ror
inc
xchg
leave
or
ljmp
shlb
push
pop
jecxz
xchg
push
pop
push
inc
jno
or
inc
mov
sub
roll
xchg
mulb
mov
lcall
mov
cltd
shlb
sbb
add
sbb
inc
ss
jl,pn
push
adc
movsb
push
lcall
js
pop
nop
jne
xchg
popa
xchg
fisubl
inc
movsl
lea
lret
adc
sub
xchg
xchg
cwtl
movsb
stos
lcall
pop
cmc
ljmp
xchg
pop
mov
push
jb
mov
dec
xor
scas
jp
or
and
incl
push
cmp
jo
inc
add
add
mov
and
sbb
adc
lock
fdiv
inc
lods
add
call
decl
mov
dec
mov
stos
loope
ret
adc
push
arpl
shlb
push
or
lock
dec
jmp
or
cmpsb
xor
loope
outsl
scas
push
movsb
outsb
jno
loope
cs
in
mov
mov
insb
pushl
jbe
dec
fidivs
mov
adc
or
incl
add
xor
mov
out
dec
loop
call
xchg
cmpsb
sbb
bound
and
and
fs
mov
lds
daa
sub
cmp
ret
cs
pushl
lret
dec
dec
adc
adcl
enter
pushl
xchg
test
cmc
adc
and
inc
or
enter
loop
in
pop
int
aad
jmp
add
pushf
mov
sub
or
cmp
add
fstps
sti
inc
or
xchg
mov
or
fldcw
sub
repz
mov
jg
inc
push
jnp
test
push
add
jmp
scas
xchg
in
xor
push
ljmp
mov
hlt
jbe
lcall
lret
fs
xchg
sahf
call
outsl
xor
fisubrl
dec
lcall
rolb
loop
xor
into
stos
xchg
cld
rclb
scas
add
push
fildl
jg
decl
jb
add
push
call
push
int
adc
or
decl
xchg
mov
rcll
mov
mov
pop
xchg
adc
pop
jns
or
or
or
sbb
push
inc
jb
jg
jno
mov
in
lock
inc
pop
mov
cmpsb
hlt
fwait
arpl
push
popf
mov
mov
pop
sub
cld
or
inc
jae
xchg
mov
rolb
mov
dec
add
inc
in
pop
add
incl
lea
pop
add
movsb
loop
movsl
and
daa
lods
add
bound
arpl
idivb
incl
into
push
ss
cmpb
dec
sub
xchg
push
pop
fsubrs
int
inc
adc
inc
and
xor
xlat
orl
push
lea
xchg
mov
js
mov
hlt
fisubrl
imul
mov
mov
mov
test
adc
ljmp
adc
test
hlt
int
adc
fldenv
lahf
testb
mov
in
pushl
adc
sbb
jge
dec
leave
jmp
fcomip
push
sbb
loop
push
scas
das
js
mov
mov
jl
xchg
push
pop
pop
sar
decl
jb
push
lea
lods
cmp
aad
cli
push
xchg
adc
lock
fwait
rcrb
xchg
sti
je
or
adc
decl
push
dec
adc
sbb
addb
cs
das
pop
dec
scas
in
aad
shll
jecxz
ljmp
rol
push
cld
aam
cli
xor
mov
sbb
pusha
inc
stos
out
inc
outsl
decl
mov
push
pop
push
or
imul
or
push
add
or
or
mov
adc
sahf
sbbb
jne
push
or
mov
data16
jbe
adc
decl
pop
lret
add
rcll
insb
inc
sbb
xorl
andl
sub
call
inc
in
stos
pushf
arpl
pop
je
clc
cmc
shrl
dec
sbb
dec
sarl
or
xlat
sbb
ja
cmp
adc
dec
push
movsl
lret
pop
add
popa
pop
xor
add
out
cli
push
mov
push
xchg
mov
push
ret
pop
hlt
ret
shll
and
test
xor
dec
ljmp
or
jle
in
or
push
test
sub
leave
jmp
push
addr16
gs
add
jnp
or
gs
shrd
push
ffreep
into
sbb
add
cmp
ljmp
adc
xorl
or
xorl
inc
in
call
aas
sub
adc
cmp
and
sub
dec
decl
fs
xchg
lahf
xor
test
push
mov
add
loop
fs
fdivs
fucomip
cld
inc
rcl
scas
sub
inc
stos
into
pop
dec
push
ret
fcoml
jmp
xchg
iret
ljmp
jmp
add
adc
inc
add
inc
loopne
in
insl
ljmp
movsl
mov
pusha
dec
push
mov
mov
or
popa
and
mov
clc
push
mov
dec
stos
mov
xchg
inc
cmp
std
sub
clc
stos
sahf
xor
stos
cmpl
push
adc
mov
cli
xchg
xor
sbb
mov
dec
mov
push
shrb
adc
push
push
mov
arpl
pop
mov
sarb
lock
clc
loope
xchg
jl
dec
sub
hlt
loope
loopne
push
jg
iret
mov
add
in
jl
or
or
stc
push
int3
mov
and
xchg
es
or
subb
mov
dec
inc
push
inc
mov
inc
subb
cmpl
mov
inc
cmpb
fmul
loopne
or
test
add
orl
inc
dec
int3
test
push
int
sub
incl
insl
xchg
sbb
cmp
adc
rcll
lcall
and
mov
mov
stos
push
or
mov
pop
movsl
cmc
enter
or
xor
andb
or
into
pop
jno
outsb
xorb
cmp
std
mov
cmp
loope
xor
inc
dec
pop
roll
popl
lods
fadds
andb
pushl
xor
fsubl
loop
or
push
sbb
mov
fxtract
stos
outsl
adc
sub
jle
push
mov
mov
or
shrb
and
and
decb
lret
or
xchg
sbb
movsb
andl
repnz
pop
xchg
cmp
mov
pop
mov
sub
mov
xchg
insb
fldt
sbb
mov
xor
inc
jmp
push
call
pop
xor
cmp
inc
and
sbb
cmp
pop
mov
cmp
push
pop
ret
test
arpl
xor
pop
jmp
jg
cs
shlb
dec
clc
mov
testl
incl
sub
xor
add
or
mov
push
sbb
xchg
lods
out
cli
test
cmp
cmc
pop
add
inc
das
cmpsb
hlt
dec
adcb
add
sti
or
ss
dec
gs
jg
push
add
jl
mov
add
pushl
jecxz
ret
dec
test
add
aam
lock
cs
or
decl
push
cmp
dec
or
insb
fsub
add
test
add
push
sub
mov
or
decl
sub
dec
enter
mov
lcall
std
jg
test
andl
sub
sub
cwtl
loope
jbe
and
or
cmpsb
cmp
jle
cmpl
pop
loop
and
pushl
dec
out
add
sbb
adc
add
iret
pop
pop
inc
daa
dec
dec
je
pop
sbb
dec
xor
dec
add
mov
mov
xor
xor
pushl
adc
popa
or
test
jecxz
pop
icebp
subl
push
pop
push
lods
mov
push
popa
mov
loopne
call
mov
dec
or
icebp
push
mov
xor
add
pop
imul
xchg
and
xor
incl
xchg
dec
and
mov
cmp
inc
add
add
mov
xor
push
or
dec
sub
mov
subb
push
mov
out
rcrl
in
aaa
and
cwtl
mov
sub
dec
test
outsb
mov
sub
sbb
out
lcall
pop
ret
fcomps
dec
sub
fdivl
lods
ror
fldt
jp
mov
pop
sbb
shrl
cmpsl
mov
pop
lcall
in
test
cmp
call
cld
push
js
push
pop
mulb
inc
xchg
push
sbb
xor
xor
sbb
lcall
or
fcoms
lcall
andb
jle
mov
dec
mov
adc
andb
mov
xchg
shlb
out
movsb
dec
fsubrs
dec
or
sub
sbb
and
mov
call
push
cmp
mov
add
jb
scas
dec
add
mov
cmp
cmpsl
inc
and
xchg
mov
and
shll
mov
mov
sbb
inc
jnp
lock
mov
pop
pop
lea
in
lcall
sbb
cli
decl
jae
cwtl
bound
add
push
or
nop
daa
sbb
imul
ljmp
adc
mov
inc
pop
jecxz
inc
or
mov
or
push
test
ja
aam
xchg
xchg
ds
dec
xchg
stos
xchg
bound
mov
js
mov
bound
stos
fimuls
jo
pop
rcll
sahf
pop
cld
dec
adc
ret
mov
mov
mov
jg
or
adc
dec
push
out
orl
test
ljmp
add
cwtl
mov
pop
dec
orb
rolb
repnz
jge
mov
pop
xchg
add
rcrb
pusha
decl
mov
loop
fsts
test
jae
inc
sar
cmp
sub
lods
rcrb
mov
call
dec
pop
and
ret
std
mov
mov
xor
decl
pop
hlt
gs
inc
imul
inc
mov
sar
cwtl
jp
dec
addr16
incl
lds
pop
movsl
mov
leave
dec
imul
xor
add
and
fcmovb
data16
adc
stos
lret
cmp
aaa
pop
enter
ljmp
mov
hlt
leave
fisubl
inc
add
pushf
lods
xor
repz
and
pushl
stos
lea
xchg
dec
cmp
add
add
add
les
test
roll
pusha
add
bound
pop
or
out
nop
mov
pop
out
dec
jg
incl
pop
aaa
sahf
lds
pop
push
mov
cwtl
scas
daa
movsl
sub
xor
xor
call
sbb
pop
fisubrs
add
or
hlt
inc
push
mov
inc
aas
rolb
jae
cmp
ds
loopne
push
pop
mov
into
and
xorl
jge
test
sub
push
subl
inc
test
loope
jmp
addl
add
pop
jp
add
mov
sbb
xchg
sub
pop
mov
jbe
call
aas
push
lds
and
add
int3
rorb
dec
adcl
add
inc
add
div
add
loopne
add
ud2
inc
cmpb
adc
int3
aad
sar
add
int
pop
sbb
push
sbb
jmp
jmp
cld
loop
clc
cmp
stc
or
adc
jb
mov
movb
clc
test
pop
orb
out
or
jecxz
mov
inc
subb
int3
fisubrl
cld
es
push
lret
daa
and
mov
icebp
and
cmp
adc
push
and
test
cmp
repnz
call
dec
dec
push
mov
push
mov
sbb
nop
push
and
cld
decl
inc
movsb
mov
psadbw
xor
test
push
sbb
addr16
stos
and
icebp
cmpsb
mov
adc
jb
push
incl
adc
mov
fxch
outsl
jle
xor
mov
std
ljmp
push
or
sbb
das
rcll
in
and
push
ljmp
push
cmp
pop
fidivrl
insl
cmpsb
pop
inc
and
rolb
push
pop
hlt
call
mov
data16
in
xchg
cmpsb
adc
out
orl
out
add
push
cmp
mov
inc
sbb
pop
mov
add
add
and
test
and
shlb
bound
mov
repnz
jmp
icebp
inc
icebp
mov
push
aam
mov
aas
lds
dec
lock
add
jl
incl
inc
das
stos
or
sub
xorl
addb
insl
sbb
sar
push
stos
cmpsb
jb
movsb
dec
shl
jp
in
push
and
lcall
adc
pushf
push
sub
test
sahf
incl
push
mov
push
sub
fcomip
ljmp
or
rolb
or
dec
push
and
fwait
sbb
out
sti
testb
inc
xor
fdivrs
pushl
push
adc
sbb
dec
xor
mov
mov
out
xor
mov
fsubrl
jnp
in
popa
sub
add
mov
incl
mov
jne
push
mov
dec
and
or
push
jne
xchg
pop
andb
jnp
or
cmp
loope
xor
sub
loope
sbb
cmp
test
jp
test
dec
ss
xchg
rorb
fcomip
or
scas
int
and
ret
xor
xor
cmp
cmc
ds
imul
int
inc
icebp
je
xchg
sbb
sub
lcall
jno
dec
pop
mov
jle
push
out
and
fbld
mov
hlt
mov
cli
loope
adc
cmpsl
outsl
mov
mov
in
dec
nop
pop
aad
jecxz
sbb
push
andl
fdecstp
sbb
lods
and
pushl
push
mov
lahf
cmp
ficompl
pop
jg
inc
pop
or
add
pop
fildl
lods
leave
leave
mov
and
lcall
jg
xchg
push
inc
lcall
pop
push
out
mov
mov
push
rorl
xchg
xchg
jmp
cmpsb
pop
mov
adc
jge
test
rorb
sub
decl
inc
test
pop
mov
pop
cmpsb
push
or
dec
mov
jp
and
dec
add
movsl
in
add
and
fistps
movl
and
add
mov
push
mov
xchg
mov
mov
pusha
adc
dec
dec
adc
or
subb
add
add
popa
adc
in
decl
and
cmp
addb
adc
mov
pop
pusha
decl
and
cmp
dec
mov
push
out
scas
cmp
lret
insl
sbb
inc
mov
push
in
aaa
js
add
subb
mov
fadds
sub
sub
pop
cs
out
mov
incl
dec
andb
adc
imulb
in
es
call
mov
fimuls
cmp
adcb
inc
fmull
rorl
push
gs
mov
lcall
cmp
add
inc
sub
lods
pusha
sbb
sbbb
and
data16
cmp
and
inc
xchg
push
add
mov
loope
movsb
inc
sbb
sbb
loope
xchg
jmp
adc
loopne
icebp
inc
xchg
dec
ret
xor
pusha
sbb
rcrb
nopl
sbb
call
lcall
popa
sbb
xor
das
xor
data16
lock
pop
sbb
repnz
mov
and
iret
repnz
xor
incl
jb
outsb
out
or
and
es
into
insb
icebp
mov
dec
test
orb
cld
lcall
js
aaa
push
sbb
pop
fiaddl
das
and
cmp
enter
nop
add
cmp
call
mov
imul
shlb
stos
mov
add
mov
js
in
ljmp
xor
or
ljmp
add
jno
scas
add
out
add
or
and
in
les
and
push
movsb
or
inc
lods
aam
and
call
jns
arpl
insl
or
incl
push
jmp
push
nop
jbe
inc
cli
mov
cmp
push
or
add
repz
adc
push
loopne
xchg
or
lods
or
rolb
inc
syscall
scas
mov
mov
xchg
pusha
addl
mov
mov
imul
in
or
ret
cld
inc
or
sbb
push
lock
pushfw
repnz
and
das
clc
scas
xor
lret
mov
push
movsb
jo
arpl
and
rcll
xchg
cmp
pop
push
adc
test
outsb
cmp
pushl
cld
push
mov
in
add
out
and
pusha
inc
push
or
and
pushl
inc
push
inc
pop
and
mov
xchg
jnp
dec
fs
decl
je
pushf
into
push
leave
ret
outsb
aas
pop
and
enter
and
fmull
sbb
jmp
push
mov
data16
out
push
movsb
dec
pop
lret
clc
incl
inc
jecxz
dec
and
arpl
pushl
loopne
push
jmp
jo
dec
inc
ret
sub
jg
push
dec
test
mov
test
lret
lock
inc
mov
fdivr
jg
scas
call
push
xchg
sbb
sbb
and
sbb
xchg
jg
jl
rclb
inc
cmp
jecxz
dec
jecxz
test
xchg
dec
xor
clc
cmp
inc
cmpsb
out
sbb
imul
aam
add
or
je
mov
sbb
test
or
or
xchg
push
jg
xorl
xor
fmuls
cmp
mov
jle
jle
mov
aam
mov
pop
ljmp
call
mov
xor
mov
popa
int
loopne,pn
jo
push
push
loop
add
jbe
inc
aas
int3
dec
jl
inc
inc
jp
outsl
clc
incl
mov
ror
add
mov
aad
lds
out
xor
push
in
or
stos
push
jb
add
xor
add
mov
negb
stos
fs
into
int
scas
dec
add
roll
in
adc
call
loopne
xchg
jmp
sbb
movl
es
pop
insl
orb
addl
jae
lock
or
fnstenv
push
call
push
inc
add
mov
push
mov
fwait
lret
fcomip
punpcklwd
iret
xchg
ret
nop
dec
in
cmp
mov
push
cmp
xor
mov
add
pop
dec
mov
orb
dec
xchg
rclb
pop
clc
lcall
incl
dec
and
push
inc
ficoml
jno
imul
fldenv
jmp
mov
xchg
out
xor
sub
rorb
and
aam
stos
adcb
or
pop
into
mov
clc
sarb
xchg
dec
mov
or
outsb
sti
outsb
jmp
jo
subb
outsb
daa
pop
mov
pop
les
push
add
ja
outsl
je
jnp
jb
add
cld
sub
mov
push
cld
ljmp
xor
int3
inc
xor
jnp
jb
mov
insb
xor
mov
xchg
jne
xlat
pushl
nop
xchg
and
xchg
clc
mov
in
xchg
mov
aaa
mov
inc
mov
pop
or
mov
in
mov
mov
les
or
sbb
add
and
sbb
add
add
mov
mov
inc
lret
ret
daa
push
iret
loop
mov
cmpsb
add
loope,pt
jmp
mov
mov
inc
pusha
add
mov
roll
ljmp
or
dec
ficoml
xor
mov
mov
jmp
push
dec
sarb
stos
sbb
mov
les
mov
add
xor
add
jmp
inc
pop
pop
nop
cmp
push
and
pop
sub
or
in
cmp
mov
sbb
rclb
jo
inc
dec
xchg
xchg
dec
mov
cmp
adc
mov
adc
cld
inc
decl
sub
dec
push
mov
incl
fwait
and
fcmovbe
dec
dec
cmp
decl
movb
into
jecxz
repz
or
lcall
in
int
adc
xchg
arpl
and
shlb
lds
pushl
pop
sbb
cli
jmp
xlat
inc
pop
mov
sbb
sub
mov
jb
cmc
incl
push
xchg
and
xchg
std
mov
fwait
incb
inc
bound
or
inc
sbb
and
mov
sub
push
es
decl
popa
pop
cmp
ret
xchg
cmpsl
rclb
sti
xchg
pop
sbb
or
sub
mov
jg
inc
sbbb
add
and
lcall
and
fwait
mov
sub
fwait
bound
and
test
mov
mov
and
adc
ret
dec
add
inc
and
ss
sar
cmpsl
mov
push
fisttps
insb
ret
push
xor
pop
ss
insl
jl
cltd
faddl
jmp
shlb
sub
sbb
cmp
jg
push
sbb
mov
loop
movsl
ljmp
or
add
outsl
cmc
aas
jb
inc
mov
inc
sbb
movb
push
aas
jl
out
fimull
xchg
cmp
push
dec
xor
mov
jg
pop
mov
sub
inc
loopne
add
loopne
data16
inc
incl
jge
xor
pop
ret
cmpsb
pop
or
sbb
enter
nop
push
or
lods
shll
fsub
jg
call
dec
sub
les
dec
nop
add
push
mov
mov
lcall
test
or
ljmp
jmp
stos
hlt
les
jno
insl
xchg
mov
pop
ljmp
scas
mov
outsl
pop
dec
cmp
inc
stc
arpl
jbe
push
lret
xchg
aad
inc
mov
mov
andb
xor
inc
jno
push
add
xor
test
jne
push
jne
stc
ret
int
cld
add
jg
fmull
jno
sbbl
cltd
cwtl
pop
add
ljmp
sbb
cmp
pop
push
shlb
in
mov
fstpt
add
insb
std
mov
sbb
push
mov
mov
sub
rorb
mov
cmp
adc
sbb
iret
jnp
pop
fdivrl
dec
rol
bound
lock
mov
out
jo
or
adc
je
mov
xchg
jp
fdivr
jg
clc
cmp
mov
push
or
cmp
je
mov
add
jg
dec
rolb
mov
sub
rcrb
add
adc
sahf
or
add
cmc
cmp
fs
push
lock
int3
xor
pop
mov
xor
jle
mov
incl
mov
mulb
stos
inc
out
add
cmpb
pop
mov
xchg
mov
inc
and
push
pop
adc
mov
pop
stos
inc
push
aam
or
pop
ja
add
jmp
mov
lret
mov
adc
or
pop
push
dec
or
push
cs
mov
in
ljmp
loopne
scas
add
outsb
and
mov
mov
jle
jnp
jle
scas
enter
push
nop
sar
pop
cmc
call
jge
xlat
add
inc
enter
sub
pop
push
sub
sub
ljmp
mov
ret
mov
cmp
mov
shlb
jge
jmp
xor
pop
or
sub
mov
fldl2t
les
hlt
xchg
mov
jge
test
call
push
popf
cmp
arpl
arpl
loopne
or
call
sbb
cmp
sbb
push
enter
shlb
mov
mov
xor
jecxz
adc
loop
divb
std
das
ds
push
xchg
or
xor
xor
cmp
aaa
push
in
xor
jg
inc
sahf
fsubp
popa
jle
inc
ds
jecxz
ds
jle
aas
mov
pushl
int
sub
bound
pop
xor
imul
dec
jecxz
xor
outsl
mov
cmp
mov
mov
addr16
imul
out
addr16
das
and
mov
and
mov
add
inc
dec
adc
jle
aas
inc
out
add
xchg
lods
cmpsl
push
push
jno
cmp
lcall
rolb
push
ret
xchg
or
jp
mov
push
push
in
or
xchg
out
or
int
add
insb
cld
pop
sbb
lret
fadds
ja
push
shrl
jbe
or
dec
mov
shr
out
push
mov
inc
hlt
fistpll
mov
xchg
or
and
es
adc
aad
add
cmp
orb
clc
lods
add
insl
jmp
sbb
mov
xorb
aaa
and
jns
jbe
call
jo
jp
push
xchg
rolb
test
pop
ss
sub
push
into
jae
jecxz
inc
or
cmp
sbb
je
sbb
add
incl
dec
clc
mov
push
lahf
pop
aam
xor
lds
push
clc
pushl
sbb
inc
mov
pop
xchg
lcall
mov
push
cld
clc
repnz
orb
lret
pop
sub
pop
loopne
jno
out
and
or
roll
pushl
sub
pop
fnstsw
int
scas
pop
cmpsl
pop
and
mov
mov
cmc
lret
lods
bound
call
mov
mov
out
xchg
lock
inc
cs
xlat
ljmp
xor
sbb
xchg
pop
cs
pushf
inc
inc
mov
sahf
aas
xchg
jp
or
pushl
xchg
cmp
pop
bound
imul
repz
mull
decb
test
js
lcall
lea
dec
jmp
pop
dec
mov
mov
mov
jp
pop
daa
add
jg
orb
mov
outsb
pop
mov
cmp
or
adc
pop
ds
xchg
dec
push
decl
roll
in
ret
insl
rolb
fadd
and
sbb
xchg
rolb
les
lea
cltd
xchg
push
and
outsb
inc
jg
cmp
mov
dec
daa
js
mov
pop
adc
add
and
in
das
nop
adc
and
sub
jo
xchg
or
adc
push
mov
or
filds
jbe
leave
xor
lods
mov
mov
imul
inc
or
pop
shrb
and
and
inc
mov
les
dec
loopne
test
incl
adc
repnz
mov
inc
xor
mov
loopne
aas
ds
push
rol
jno
xchg
testb
aaa
dec
cli
ficompl
test
push
mov
les
ljmp
inc
push
sbb
mov
or
in
adc
or
jmp
adc
movsb
hlt
xchg
inc
aam
lods
dec
sub
test
imul
sti
shll
and
add
cmp
jg
test
paddsb
das
mov
mov
dec
out
xor
dec
fs
imul
pop
outsl
mov
incl
dec
sbb
icebp
popa
sahf
les
pop
nop
add
fcompl
mov
xor
divl
cld
decl
test
sub
cmp
dec
cmp
mov
mov
call
fisubs
rolb
xor
mov
rorl
cmp
movl
add
or
push
add
add
xor
sbb
xor
adc
scas
dec
out
clc
mov
hlt
ror
dec
pop
faddl
cld
and
and
jge
mov
test
and
dec
push
cmp
xchg
subb
ret
adc
loop
xchg
cmp
xor
jbe
pusha
inc
or
andl
and
mov
sub
mov
rorl
jmp
dec
and
xlat
mov
mov
outsb
ljmp
push
lea
daa
mov
ljmp
push
mov
cmp
ljmp
in
cld
mov
fs
fwait
inc
sbb
call
cltd
adc
mov
pop
push
sbb
jmp
enter
mov
inc
fcomip
pushl
or
jo
mov
cld
or
and
pop
pusha
add
cmp
mov
icebp
pushl
mov
cmpsb
pop
cmp
movsb
lock
cmp
push
mov
push
stos
out
xchg
pop
lret
bound
sbb
cs
mov
xchg
adc
mov
lcall
jbe
lcall
mov
fsubp
dec
imul
xor
mov
push
cld
jg
sbb
xor
into
imul
out
adc
shll
jg
ja
sbb
and
shll
test
outsl
inc
and
pop
cmp
mov
call
orb
cwtl
pop
xor
in
dec
sbb
test
or
fucom
insb
push
repz
sbbb
call
loopne
scas
inc
bound
mov
orl
and
xor
es
subb
inc
pushl
pop
enter
mov
sbb
or
ljmp
sub
aas
cmp
movsl
or
cld
cwtl
pop
in
movsb
cmpb
dec
push
std
decl
sub
fmull
inc
mov
xchg
and
push
test
xchg
jo
in
jecxz
call
adc
fwait
push
and
or
nop
or
stc
loope
cwtl
jnp
xor
sar
mov
or
push
sub
mov
mov
rolb
andl
sbb
push
push
in
mov
mov
or
nop
std
pop
aam
negb
and
fxch
jbe
xchg
scas
je
xor
add
xchg
or
clc
fistpll
in
xor
cmpsb
ss
jg
xchg
lcall
push
xchg
adc
nop
cld
hlt
pop
push
xor
or
test
decb
decl
jmp
dec
xchg
shrb
add
inc
xchg
imul
subl
xor
jmp
orb
cmpsb
add
xchg
adc
xchg
nop
jmp
lock
shrb
fs
sbb
dec
orb
data16
push
je
pushl
movsl
cmp
imul
sahf
add
int
pop
cmp
jae
addr16
xchg
xchg
nop
pop
cmp
adc
into
and
xor
jp
add
mov
push
or
cmpsl
inc
dec
and
stos
pop
cmpsl
jle
pusha
and
aaa
cld
outsl
call
ret
xlat
loop
add
inc
push
push
and
pop
adc
jo
fwait
inc
xor
aaa
movsb
cmp
es
sbb
stc
sbb
movsl
mov
das
mov
lods
leave
pop
dec
cld
cwtl
fdivrl
movsb
cmp
mov
shrl
call
add
inc
sub
add
push
push
fwait
shlb
xor
ret
pop
adc
jbe
or
mov
inc
cmp
sbb
and
push
jg
sub
jmp
mov
ljmp
add
pop
pop
sub
inc
pop
jmp
mov
loop
incl
aad
imul
scas
mov
inc
cld
cmp
aas
jb
add
xor
pop
add
clc
cmp
addl
lcall
ds
popa
or
sbbl
int
fdivs
call
xchg
push
ss
fidivs
repnz
addr16
out
fwait
in
out
repz
jg
xor
inc
cmpsl
mov
xchg
sbb
cli
rclb
hlt
inc
ss
decl
push
ss
jmp
pop
dec
push
mov
pushf
cmp
lods
call
loopne
decl
test
push
mov
xlat
in
pushf
push
pop
inc
jnp
aam
out
fsubrs
and
sbb
in
pop
fwait
push
and
aam
lahf
cmp
sub
out
icebp
ljmp
sbb
cpuid
orb
add
ss
decl
mov
cmp
or
add
cmpsb
out
mov
push
aas
cmp
cmpb
sub
mov
mov
fidivrs
lcall
jp
pop
pop
pushl
and
imull
dec
jge
outsl
xchg
adc
pop
mov
xor
cltd
loope
jmp
cs
bound
fadd
cs
xor
lods
outsb
or
aam
and
jno
cmp
mov
sbb
loop
jge
dec
mov
add
decb
xor
loopne
cs
add
fcoml
orl
fs
push
orl
pop
or
jg
jg
xor
fstpt
or
and
paddb
xor
ds
jae
test
sbb
mov
xchg
aas
and
lcall
or
inc
add
test
cmpsl
mov
xor
ficomps
xchg
sar
dec
lahf
into
pop
lret
into
std
sbb
or
push
lcall
cmp
cmp
inc
jmp
popa
cli
stc
xlat
sub
cmc
inc
scas
ljmp
in
clc
and
mov
stc
stos
nop
mov
mov
shll
inc
push
jge
lahf
jae
fimuls
test
cltd
add
xlat
pop
dec
mov
mov
mov
movsl
iret
int3
cmpb
pop
sbb
or
dec
mov
insb
and
sbb
sub
aad
xchg
out
mov
adc
push
jne
loopnew
inc
adc
push
adc
leave
in
incb
and
and
arpl
roll
stos
push
pop
cmp
lcall
xor
fidivs
decl
sbbl
inc
movsb
jno
je
ret
fs
decl
das
jge
iret
les
mov
std
movsl
jb
sarb
push
and
and
dec
push
pusha
addb
daa
jg
popa
call
addb
and
movsb
add
dec
aam
cmp
bound
push
leave
nop
and
test
jo
or
or
adc
daa
and
mov
jne
add
jnp
jle
out
pop
push
jmp
xchg
jns
jns
out
mov
mov
sub
mov
jmp
jp
jp
fmuls
mov
push
mov
sbb
push
or
test
sahf
mov
mov
gs
push
jp
adc
call
lods
enter
gs
push
and
pop
push
push
jbe
das
mov
jl
inc
sub
arpl
testl
sub
pop
push
push
mov
incl
xchg
inc
and
adc
mov
iret
mov
dec
test
aaa
cli
repnz
in
mulb
mov
mov
sbb
sub
dec
sbb
inc
dec
je
adc
adc
out
cli
incl
mov
xchg
xchg
sbb
and
cmp
jmp
push
adc
lcall
xor
movsb
pop
lcall
push
test
xor
mov
decl
mov
addr16
outsl
stc
adc
pushf
xor
inc
ds
add
xor
inc
inc
push
and
xor
and
test
movsl
and
add
mov
rdtsc
pop
pusha
push
xor
or
decl
add
adc
xchg
mov
stos
and
test
daa
inc
notl
inc
add
pop
mov
xchg
pop
cwtl
jb
incl
and
and
cmp
push
sub
rclb
xor
or
xchg
addr16
ret
call
daa
mov
mov
push
xchg
aaa
mov
xchg
cltd
cmp
les
fnstcw
shrb
inc
mov
sub
cwtl
enter
fdivrs
daa
lcall
loop
cmp
fnstcw
dec
cltd
mov
clc
and
lcall
cmc
lcall
sahf
cmp
push
loopne
mov
lea
xor
fwait
out
inc
xor
xchg
inc
sub
insb
mov
imul
mov
rcll
sub
cmp
out
repz
inc
ss
movsb
imulb
inc
xor
dec
add
xchg
rcl
stos
and
std
pop
ret
and
pop
mov
aam
icebp
cwtl
push
in
mov
mov
xor
jmp
repnz
sbb
dec
call
outsb
mov
jmp
mov
or
cmpb
cmp
adc
stos
adc
dec
adc
icebp
adcb
jmp
popf
cmp
pop
out
test
pushl
lcall
pop
inc
add
and
sub
bound
xchg
dec
sub
das
movsb
or
push
xor
cmp
cmp
inc
cli
jg
pusha
dec
push
shlb
add
xchg
sbb
dec
xor
stos
pushl
nop
jb
xchg
xor
cmp
xor
add
or
jnp
mov
pusha
mov
out
jmp
mov
pop
adc
fwait
lcall
adc
gs
stc
repz
push
pushf
adc
pushl
les
lcall
test
cmc
fcomip
lcall
xlat
subl
test
fwait
enter
push
lods
pop
cltd
xchg
imul
lahf
sub
cwtl
sbb
cli
mov
lock
decl
pushf
pushf
push
imul
mov
jge
andl
inc
in
sbb
mov
filds
mov
sub
cltd
push
iret
xchg
lock
sub
decl
mov
imul
stc
mov
ss
nop
scas
das
add
es
dec
adcb
pop
testb
jbe
pop
mov
popf
sbbb
stos
mov
or
sbb
sbb
jg
sti
cmp
ss
and
mov
xchg
sbb
stos
inc
mov
ja
sbb
jno
pop
xchg
adc
nop
call
jne
stos
shl
pop
pop
push
xorb
and
loopne
cs
xchg
mov
push
jp
ljmp
movsl
lock
rolb
mov
shl
test
push
je
add
dec
xor
inc
clc
test
push
and
jmp
bound
push
sub
or
push
jg
or
loop
push
loopne
cltd
adc
lcall
jnp
pop
stos
test
add
mov
lret
xor
incl
push
popa
cmpsl
cmpsl
mov
mov
cmp
sbb
cltd
dec
stos
mov
mov
lcall
pushf
xchg
cmpsl
xchg
jns
lods
jns
sbbl
cmp
pop
and
call
pop
jl
push
aam
lea
and
jg
and
xchg
pop
xor
jb
sub
pushl
hlt
lahf
faddp
imul
fsubrs
ret
mov
int
fwait
adc
jne
lcall
outsb
clc
cmp
aam
cmpsb
adc
clc
mov
das
cwtl
xor
cmp
jmp
xor
bound
push
out
mov
mov
lock
sbb
test
int
je
pop
push
xor
jb
add
lcall
add
fsubrs
pop
mov
push
jno
inc
xor
hlt
call
xor
mov
cwtl
and
fnstenv
add
mov
dec
ret
fcomip
jmp
pop
inc
cmp
pusha
and
movsl
cmpsb
mov
add
add
mov
lock
mov
and
shlb
inc
mov
cmp
xchg
ret
cmp
clc
or
xor
push
decl
mov
stos
sub
ret
arpl
mov
ja
stos
push
ss
decl
stos
imul
jmp
aas
aad
lea
incl
cmp
mov
xchg
pop
xor
lret
mov
movsb
mov
mov
push
lcall
cltd
imul
call
fwait
popa
test
lods
pop
push
mov
sub
ja
pusha
inc
add
lods
out
cmp
loop
cs
jp
inc
add
adc
shll
ret
xor
adc
leave
imul
jecxz
fidivs
xchg
lcall
inc
fcom
push
mov
adc
adc
scas
mov
push
mov
jno
sbb
ficompl
lock
and
xor
mov
mov
gs
pop
int3
enter
sbb
fisttps
or
inc
pop
push
test
bound
rcll
sbb
mov
and
incl
mov
xor
imul
mov
sub
popa
adc
cmp
cmp
nop
bound
pusha
lods
dec
jnp
mov
xchg
pop
inc
add
ja
sub
xchg
inc
clc
xchg
ljmp
cli
popf
sbb
loopne
sbb
or
ffreep
pop
int3
push
lea
mov
mov
lcall
push
jb
lds
jg
call
aaa
dec
les
pop
sub
push
test
ret
pop
push
xchg
cltd
int3
cltd
test
in
incl
jp
cli
test
jnp
popf
cwtl
dec
cltd
xchg
cltd
cwtl
fs
les
mov
sub
mov
lcall
pop
shll
gs
inc
enter
shlb
stos
push
mov
rcrb
mov
mov
inc
adc
xor
inc
leave
jle
sbb
jmp
sub
leave
clc
cmp
das
fistl
iret
cmp
mov
cld
imul
bound
fs
inc
or
jl
push
adc
incl
loope
jnp
jmp
pop
dec
sarl
test
and
mov
popa
fcmovnu
cltd
mov
lods
pop
jo
xchg
sbb
and
sbb
or
int
mov
jp
sti
dec
mov
mov
ljmp
lods
jno
sub
movsl
lea
and
and
negb
mov
xor
cmp
movsb
push
cmp
or
ret
shlb
ficoms
fsubrp
frstor
clc
and
mov
pop
inc
sub
xchg
stc
gs
push
cmp
call
loopne
sbb
dec
int3
test
jl
cmp
jb
dec
pop
lea
jg
lds
rcrl
dec
test
mov
pop
pushf
pop
popa
mov
cmp
push
cmp
push
mov
lds
loope
dec
loope
lcall
pop
mov
mov
test
push
cltd
sub
imul
idiv
mov
push
mov
cmp
daa
test
popf
enter
ss
cld
popa
mov
sarl
add
push
not
adc
adc
fadd
loop
inc
jbe
push
xchg
call
mov
out
xor
fmuls
cmpl
jp
ret
ljmp
outsb
cmp
dec
insl
sub
xchg
mov
or
out
mov
stc
fbld
push
shlb
vmovaps
mov
hlt
add
lcall
stos
fidivrl
cwtl
das
dec
mov
adc
cmp
inc
xchg
push
ret
cmp
and
andl
loop
pop
pop
xchg
pop
leave
push
sbb
push
adc
inc
aam
push
sbb
cs
mov
jmp
xor
nop
xor
repnz
adc
push
fadds
jne
cs
push
in
jle
add
je
in
fidivrl
aam
push
js
jo
inc
loop
and
loopne
xchg
add
mov
loopne
fsub
insb
sbb
das
push
pop
sbb
gs
sti
loope
jnp
sbb
inc
xor
out
mov
js
inc
push
push
adc
ljmp
lock
and
jo
push
dec
les
cwtl
adc
rcrl
fwait
andb
sbb
sub
push
xor
call
loopne
mov
insl
lods
pushf
test
dec
dec
enter
push
in
int3
loop
jmp
std
or
fs
test
inc
rcrl
hlt
lods
cwtl
or
mov
out
cld
decl
loop
mov
mov
popl
jmp
rol
push
sahf
fistpl
or
pop
or
adc
outsb
mov
mov
or
dec
lcall
js
mov
inc
add
pushl
mov
add
outsl
inc
in
mov
mov
jge
dec
aad
aas
jle
jno
scas
call
fucomp
mov
mov
outsl
jno
cmp
loopne
icebp
lcall
mov
or
and
push
mov
cltd
jecxz
jnp
cmp
push
or
inc
adc
xchg
and
mov
cli
mov
cli
sub
fs
ss
jmp
repz
mov
jmp
cwtl
mov
sub
jg
into
dec
loopne
jl
sub
in
and
sub
jg
add
mov
pop
jp
fcmovnbe
cs
icebp
int3
mov
mov
rcrb
inc
enter
cmp
pop
sub
pop
je
mov
cmpsl
and
mov
pop
or
pop
xor
out
subl
lock
jmp
mov
inc
xchg
xor
loop
jecxz
sbb
clc
mov
outsl
cli
lds
mov
lret
xchg
das
push
sub
in
andl
inc
test
test
dec
dec
sub
inc
sub
mov
add
movsb
inc
mov
adcb
jg
sub
stos
ljmp
scas
add
sub
lcall
pushl
pop
insb
pop
mov
in
pop
xlat
fstl
xchg
scas
pop
inc
std
decl
jo
lea
xchg
mov
in
enter
lcall
sub
mov
cld
xor
xchg
sahf
sbb
push
or
mov
fidivs
loop
arpl
fmuls
mov
into
xchg
add
add
jnp
mov
xchg
notl
add
cmp
ljmp
movsl
call
fisubs
outsb
clc
cmpl
movsl
cmp
in
fldenv
sahf
icebp
sub
ja
lret
fnstsw
or
jmp
adc
add
adc
adc
xor
xor
add
enter
das
add
add
xchg
add
or
adc
aaa
cld
jg
lods
dec
adc
dec
mov
mov
pop
icebp
adc
dec
rsqrtps
cmc
lcall
sbb
dec
cmp
mov
mov
addr16
xor
jmp
sbb
or
jb
adc
mov
xchg
je
cmpb
das
clc
jne
xchg
sahf
insl
dec
dec
shufps
dec
xchg
movsl
jmp
ljmp
pop
jle
xor
bound
ja
dec
dec
cmpsb
gs
addr16
pop
in
or
movsl
mov
jae
and
sbb
or
pushl
and
xor
cmp
iret
fldl
sti
jg
inc
pop
inc
mov
pop
ja
push
in
sarb
lcall
cmp
mov
ss
jbe
js
out
scas
push
push
push
call
fldcw
xor
and
sbb
mov
hlt
out
cmp
test
in
xchg
jmp
xor
inc
inc
jnp
in
mov
dec
scas
mov
pop
dec
jns
lcall
and
adc
loop
ljmp
sub
js
push
ds
lea
hlt
cmp
inc
push
cmp
stos
repnz
xchg
xchg
cmp
aaa
xor
dec
das
inc
mov
jg
sbb
sbbb
inc
xor
daa
adc
push
jne
dec
enter
jp
add
mov
ss
test
cmpsb
xchg
andl
push
cmp
dec
cmp
lds
pushl
outsb
mov
mov
sbb
xchg
mov
mov
lcall
jmp
sbb
in
sti
out
add
sti
call
jg
cmpsl
cmp
xchg
mov
nop
cmpsl
mov
mov
dec
dec
or
js
cmpsb
ret
in
ds
js
cmp
subb
lret
xchg
xchg
fdiv
clc
pop
hlt
imul
fmul
aas
inc
pop
inc
es
clc
jb
cltd
mov
sarb
jae
mov
sbb
sbb
ljmp
js,pt
pushf
test
pop
pop
jae
dec
fs
cltd
pop
push
stos
mov
cld
notb
es
call
test
xchg
ja
cmp
mov
mov
pushl
lret
out
scas
mov
dec
cmpsl
pushf
push
jbe
xor
dec
xor
xchg
scas
fadd
ljmp
clc
lcall
mov
fdivrs
mov
sbb
js
mov
dec
push
subl
dec
pop
pop
mov
sti
jmp
call
mov
shll
arpl
cmpsb
pop
pop
in
sbb
add
cmpsb
mov
fstp
xchg
xor
cmpsl
mov
mov
pushl
ret
je
scas
gs
and
pop
mov
xchg
shl
and
or
incl
jo
adc
or
inc
sar
incl
movhps
loope
xchg
cmp
call
xor
mov
lret
call
sbb
cmp
pop
push
sbb
xor
ljmp
add
ljmp
mov
sbb
call
ss
pop
jo
aad
xor
vandnps
add
pop
mov
movsl
lret
cltd
and
out
mov
mov
loop
lea
inc
outsb
fdivl
pop
lcall
and
scas
lods
add
scas
xor
ret
xchg
xchg
decl
xor
stos
shll
mov
lret
xchg
and
xchg
push
aaa
xchg
sub
mov
sbb
ljmp
outsb
outsb
push
pop
jbe
jae
pop
jg
xchg
inc
sbb
insb
adc
pusha
pop
mov
mov
out
es
jg
loope
cmc
lcall
adc
decl
repnz
mov
jo
jmp
jae
mov
mov
rol
jnp
iret
push
ja
call
mov
aad
ljmp
lods
das
sub
rcrl
mov
add
or
lcall
and
or
or
pusha
cmp
or
inc
and
lea
pusha
cltd
adc
and
mov
call
addl
addl
fisttps
mov
dec
push
add
push
cltd
call
inc
sub
push
sbb
adc
test
mov
fldenv
shll
clc
cmp
adc
inc
sub
push
out
aam
nop
insb
stos
inc
and
xchg
loope
and
dec
lea
mov
adc
in
push
pop
adc
jp
outsl
jge
and
call
call
sub
adc
les
jne
js
frstor
xchg
or
ljmp
mov
aaa
cld
jg
call
fldenv
icebp
data16
aad
xchg
mov
out
lcall
imul
dec
add
jb
sub
addl
push
les
mov
call
call
add
sbb
mov
shl
negl
insb
outsb
lret
jmp
icebp
cmpsb
in
pop
insb
and
sbb
sub
clc
push
pushf
jns
ljmp
outsl
pusha
ss
sbb
pushl
loope
pop
shll
jg
add
ljmp
push
ja
ret
outsb
lds
mov
jmp
jae
test
xor
ficoml
jmp
mov
daa
sahf
inc
aad
imul
dec
jecxz
inc
sbb
inc
jge
nop
cmp
sub
fmul
push
push
ds
cltd
xor
jne
push
or
ljmp
cmp
mov
inc
sar
ljmp
mov
testl
inc
or
jo
xor
push
ljmp
xor
dec
and
pop
sub
in
push
jg
and
decl
cld
inc
fsubrs
jo
movsb
mov
lds
dec
lahf
mov
stos
fwait
adc
pop
imul
popa
xor
push
pop
or
xchg
lahf
insb
push
adc
push
lcall
or
jmp
adc
pop
add
int3
cmp
pushf
mov
mov
ds
ljmp
out
andl
lcall
add
insb
xor
jle
in
jne
ljmp
mov
mov
inc
or
add
xchg
pop
roll
xor
pop
push
jle
mov
decl
jg
lret
orl
int3
jg
or
cs
call
sub
aaa
cld
decl
nop
and
fldl
inc
inc
lcall
ret
mov
inc
cld
pop
popa
test
ror
mov
and
dec
adc
decl
adc
push
nop
sub
ret
aaa
movsl
sub
jmp
push
lods
hlt
xchg
xchg
adc
push
cld
cmp
mov
xchg
je
movsl
xor
or
mov
push
call
ja
call
faddl
cmp
push
inc
push
movsl
sub
pop
jo
icebp
xor
xchg
movsl
inc
mov
mov
adc
aam
and
xchg
int3
gs
andb
xor
xor
icebp
jmp
sbb
loopne
push
mov
and
loop
lcall
loope
sub
pop
out
in
js
and
pushl
andb
mov
sub
cmpsl
hlt
push
dec
mov
inc
ja
leave
movsl
jo
cmp
mov
in
cmp
or
push
mov
sub
pop
out
mov
stc
sbb
jmp
jecxz
inc
mov
sti
ljmp
call
es
jnp
test
lock
iret
jl
jns
repnz
or
jg
stos
dec
ret
mov
sub
stos
xchg
xor
ljmp
xchg
mov
cmp
test
dec
jno
mov
mov
jmp
jo
or
shrb
sbb
addb
inc
movsl
sub
and
xchg
xchg
and
push
mov
cld
fcomp
out
mov
cmp
mov
mov
fildl
popa
or
add
fistpl
call
adc
xor
add
sbb
aaa
mov
xchg
push
stc
push
movsb
xchg
js
mov
inc
mov
mov
mov
stc
mov
cs
mov
sbb
and
push
cld
dec
xchg
in
pop
lods
dec
pop
inc
mov
xchg
jb
clc
out
sbb
xor
dec
dec
inc
or
fisubrl
and
mov
incl
push
call
lods
push
clc
and
fcos
data16
pop
mov
xchg
xchg
outsl
mov
sbb
pusha
add
push
jg
pushl
loope
sub
add
or
ja
jl
in
jbe
rolb
mov
ffree
push
mov
arpl
mov
subb
mov
jo
adc
lock
add
enter
enter
and
fadd
mov
jnp
test
or
mov
jmp
jb
daa
call
jmp
jmp
mov
cmp
mov
out
mov
adc
fcmovnu
mov
out
nop
lock
push
add
dec
mov
mov
incl
push
imul
gs
into
jno
cmovb
pop
push
mov
jne
movsl
or
lcall
add
lods
addb
adc
lahf
rolb
sbb
lods
mov
lock
mov
push
push
cmp
mov
mov
addb
and
or
jge
sub
push
xchg
js
clc
incl
lods
stos
pop
lea
mov
push
dec
fimull
sub
ljmp
mov
jne
jb
sub
fwait
adc
dec
jno
fcompl
ljmp
add
fs
jge
inc
lods
in
cmp
jb
mov
jmp
pop
and
sub
loopne
cli
inc
test
inc
in
sbb
cmc
decl
mov
mov
pusha
loopne
addb
mov
or
and
ja
push
incl
pop
decl
inc
push
bound
mov
adc
andl
cmp
mov
adc
lcall
pop
xor
cmpb
roll
pop
clc
mov
sbb
and
or
or
insb
xor
mov
addl
sub
stos
sbb
shrb
lock
jecxz
or
lock
mov
imul
decl
pop
pushf
pushl
out
mov
dec
push
es
lcall
sbb
das
lock
mov
jge
adc
cli
mov
aas
aad
iret
mov
test
std
cmp
or
xor
sub
imul
out
xchg
mov
cmp
jp
nop
push
jns
push
dec
inc
inc
pop
push
dec
fwait
int3
shlb
nop
ljmp
ret
mov
mov
xor
push
push
ret
pop
inc
jecxz
addb
aad
call
cld
int
mov
popf
xchg
sub
push
lea
lea
js
out
or
mov
pop
cmp
outsb
xchg
adc
xor
sarl
mov
scas
sub
xchg
call
aad
sbb
mov
bound
aas
pop
dec
pop
jp
xchg
jo
push
push
iret
jle
jg
call
arpl
mov
mov
mov
pop
or
inc
sbb
in
adc
jle
call
mov
out
and
loopne
sub
and
in
fs
repnz
test
pop
enter
lock
cld
pop
sbbb
ljmp
pop
filds
out
je
insl
pop
gs
or
bound
jg
pusha
push
add
push
incb
push
pop
push
add
shl
and
das
jmp
test
push
and
or
add
daa
pop
mov
push
mov
rorb
daa
pop
cmp
xchg
push
addb
mov
lcall
vcvtpd2psy
pop
scas
and
loope
pushl
dec
enter
dec
inc
aaa
and
jecxz
les
pusha
dec
aas
fcoms
ja
lcall
js
notb
dec
cs
popa
or
dec
dec
test
jle
dec
add
mov
out
in
jbe
jbe
cmp
sbb
xor
lcall
cmp
xchg
push
xchg
mov
mov
add
jg
inc
jns
fs
jl
sub
subl
dec
test
and
icebp
in
jmp
dec
jne
mov
xor
pop
js
aaa
loop
ljmp
jp
les
push
les
push
call
and
test
cmpsl
adc
imul
cmp
push
pusha
and
inc
jnp
xchg
push
adc
xchg
add
xor
mov
jge
pop
push
mov
dec
bound
and
push
test
lock
out
js
bound
hlt
ret
sbb
pushl
cld
and
inc
and
and
aam
sub
shrl
shll
push
aam
pop
ret
fldt
jg
mov
xorb
add
jg
rclb
add
out
add
xchg
icebp
mov
sub
test
sbb
add
ja
out
pop
push
lock
pusha
incl
mov
scas
add
or
push
test
es
enter
cld
add
repz
adc
add
sub
adc
jo
push
rolb
loopne
pop
mov
or
inc
inc
pushl
lds
and
ds
sbb
bound
loopne
jne
cmp
call
sub
push
push
das
icebp
ret
bound
popa
add
dec
in
in
clc
jb
lcall
mov
push
divl
icebp
xchg
je
mov
xor
mov
fs
incl
arpl
push
jb
xchg
ret
xor
push
outsb
mov
inc
xlat
push
mov
mov
addr16
push
jp
ret
cmp
lods
mov
mov
subl
incl
addb
lds
dec
push
inc
add
mov
inc
adc
adc
gs
incl
nop
ss
jo
jno
daa
mov
insl
and
addr16
lret
int
jl
pushl
inc
push
in
fsubrs
adc
mov
jl
pop
loop
repz
fdivl
out
xchg
push
in
push
call
cld
adc
inc
sbb
xor
inc
inc
ljmp
gs
xchg
dec
push
sbb
or
insl
and
inc
ret
test
mov
xor
mov
lds
leave
pop
pop
mov
rolb
mov
and
add
push
out
add
and
add
fs
loopne
mov
pop
pop
inc
mov
mov
add
jmp
loopne
lret
adc
dec
imul
inc
jnp
mov
nop
add
adc
aaa
shrl
cltd
sub
inc
shl
mov
cs
sub
mov
cmc
adc
loop
cmp
fbstp
cmp
out
pop
sub
dec
bound
daa
push
lcall
aas
repz
das
or
cwtl
inc
pop
insb
xchg
call
mov
ljmp
sub
andl
or
jo
pop
ss
mov
xchg
sub
xor
push
and
jl
cmp
xchg
dec
sub
add
psllw
lcall
inc
xchg
mov
cwtl
xchg
push
inc
aam
dec
add
testl
inc
xor
in
clc
fwait
scas
mov
js
push
xor
lods
sub
lods
xor
push
mov
adc
sbb
xor
pop
scas
lds
test
push
or
and
rcrb
cmp
mov
xor
push
adc
jl
push
lea
out
je
and
xchg
hlt
ljmp
addl
xor
mov
cmp
xchg
in
push
into
xor
push
sub
out
incl
pop
and
imulb
sbb
sub
sbb
mov
pop
mov
xlat
ljmp
mov
cmp
sub
xchg
pop
and
lock
pop
adc
mov
jo
push
push
pop
shrb
or
adcb
mov
fistpl
push
and
pop
into
loopne
cmp
mov
pusha
clc
call
xor
or
add
push
dec
stos
test
enter
nop
add
cmpsb
jg
test
js
adcb
cmp
pushl
inc
push
gs
dec
stos
and
xchg
jae
popa
push
xorb
add
icebp
push
in
ret
js
daa
data16
call
xchg
ja
push
addr16
cli
add
ja
push
int
push
cmc
test
or
inc
call
jp
add
jbe
sbb
roll
pop
sbb
loop
push
sbbl
and
mov
int3
cmc
mov
gs
jl
push
cld
xor
hlt
ljmp
fwait
jnp
fwait
mov
outsb
inc
sbb
mov
fildll
je
dec
enter
mov
mov
hlt
scas
mov
xor
lock
pushl
xchg
inc
adc
fwait
aam
lods
rorl
push
lock
ljmp
mov
inc
jnp
cmp
push
mov
mov
push
push
jb
fisttpl
lret
adc
jg
xor
push
sub
dec
nop
jge
rclb
mov
mov
ja
and
push
add
inc
pop
imul
lcall
aas
shll
adcl
loope
push
cld
adc
mov
add
incl
jbe
sbb
adc
pop
xor
inc
mov
jbe
jns
aas
scas
xchg
dec
negb
cmc
sbb
jp
call
or
dec
pusha
jno
adc
jl
dec
cltd
sub
lret
popa
sar
inc
lds
or
jo
lock
jb
sub
push
incb
insb
adc
stos
outsl
cli
and
jg
or
add
jo
das
test
imul
pusha
inc
mov
mov
leave
jno
adc
call
inc
push
push
cmp
andl
daa
je
mov
pushl
mov
jmp
pop
add
jno
std
movsb
aas
lret
out
sbb
or
insb
mov
sarb
or
nop
sbb
xor
je
mov
xchg
icebp
cmpsb
lcall
mov
or
es
in
lods
lds
push
arpl
cmp
std
ljmp
lods
push
loop
mov
push
and
lods
jo
xor
jnp
dec
mov
jbe
pop
jg
icebp
mov
inc
mov
inc
pop
stos
sbb
sub
pushl
jne
mov
loop
cmp
sarb
pusha
and
fwait
xchg
jns
mov
jnp
mov
in
rclb
mov
cmp
sbb
rcll
jmp
pop
sbb
scas
push
jmp
adc
cmp
cmp
call
push
cmpsl
mov
jb
aaa
aas
cmp
fsts
lds
insb
inc
inc
ljmp
push
pop
rclb
and
xor
xor
dec
jns
lahf
inc
mov
faddl
jmp
clc
pushl
mov
mov
inc
pop
push
pop
pop
xchg
mov
lret
pop
into
mov
fistpl
enter
mov
imul
push
jmp
insb
rcrb
push
add
pop
mov
jg
in
or
pusha
pusha
jns
push
and
sahf
inc
add
addb
loopne
incl
insb
push
add
cmp
ds
xor
mov
xchg
rolb
mov
lret
ljmp
cmpsb
int3
fldcw
or
pop
push
mov
jl
aam
sbb
bound
call
cmpsb
adc
fsubl
inc
xchg
mov
sbb
push
push
int3
mov
sub
out
sbb
jmp
pop
das
mov
stos
pop
mov
xchg
or
or
mov
stos
cmp
rcrl
mov
test
add
pop
sub
cli
ljmp
sbb
mov
mov
lcall
mov
test
fisubrs
in
mov
add
lods
loope
pop
mov
std
stos
xchg
js
push
loop
andb
loopne
jge
aaa
loop
mov
inc
jo
loop
jle
mov
mov
popf
cs
pop
pop
xor
pop
repnz
int
nop
ljmp
push
jno
add
fidivs
scas
xor
ret
fwait
ja
adc
test
loope
or
popf
jbe
adc
lods
adc
and
jg
gs
and
push
pushf
loope
mov
movsb
lret
inc
xor
sar
loope
pop
repnz
clc
rcrl
fs
out
add
jg
add
ljmp
clc
push
nop
insl
jg
cmp
call
decl
mov
test
lods
add
push
dec
jmp
xor
or
clc
pushl
js
jb
inc
add
mov
jo
push
add
adc
add
sbb
pusha
xorb
clc
fiadds
lcall
inc
sbb
xchg
fwait
mov
dec
inc
inc
sbb
ret
test
sbb
jg
frstor
push
aas
cli
push
cmpsl
add
mov
mov
cmp
xor
push
xor
lahf
mul
int3
in
mov
sub
aam
cltd
fcomps
adc
mov
mov
outsl
cli
incl
mov
xor
mov
xchg
dec
lret
mov
jns
pop
mov
pop
jns
ficoms
push
test
xchg
arpl
push
adc
loope
or
mov
or
add
decl
sub
inc
fwait
fwait
incl
pop
jle
xor
and
loopne
jg
incl
jnp
test
cmp
or
mov
in
scas
cmp
dec
es
inc
hlt
xor
add
decl
lock
movl
mov
mov
lret
clc
incl
add
inc
xor
jge
icebp
pushf
sbb
ret
push
cmp
sbb
movsl
inc
mov
out
scas
cmpsl
pop
xor
sub
out
push
jp
lahf
pop
in
mov
pop
mov
pop
clc
test
adc
mov
ljmp
shlb
nop
pop
out
inc
pop
xchg
push
cmpl
jle
in
out
or
imul
ja
jl
pop
xchg
push
add
and
jo
adc
mov
dec
sbb
ror
mov
es
and
xor
dec
sub
sub
shll
outsl
cwtl
inc
cs
sahf
rcll
es
jmp
jmp
cmpl
out
add
test
mov
push
out
jl
arpl
mov
pushl
in
sahf
mov
push
add
push
pop
rclb
incl
sbb
iret
cwtl
cmp
insb
mov
adc
loopne
orl
mov
sub
shll
jp
mov
xchg
es
nop
mov
scas
dec
stos
mov
xchg
lea
cmp
push
arpl
xchg
xor
sub
lock
outsb
mov
ljmp
loop
mov
or
in
xor
cld
lcall
imul
jne
jbe
pop
mov
xlat
filds
pusha
lods
pop
mov
cmpb
push
arpl
mov
or
pushf
addl
push
mov
push
fcmovb
test
bound
add
pop
sbb
mov
lods
jae
jns
jp
out
mov
push
clc
lahf
mov
in
inc
lea
xchg
ret
push
and
in
fldenv
mov
jmp
inc
pop
ret
or
scas
pop
pop
std
cld
sti
ljmp
fnstsw
fstpt
ret
and
adc
mov
and
cli
add
lock
adcl
xor
or
push
popl
inc
notb
cmp
decl
les
push
jne
les
adc
inc
sub
jecxz
dec
pop
je
ljmp
dec
pop
fldenv
push
sub
and
add
mov
rolb
sbb
inc
pushl
shr
cmpsb
or
test
flds
clc
lcall
dec
les
cmp
xchg
xor
inc
repz
xor
int
mov
incl
outsb
cmp
mov
dec
xor
adc
dec
pop
sub
cmp
or
decl
lods
cmp
ljmp
jnp
mov
mov
iret
inc
fistps
call
xchg
sub
push
dec
jne
sbb
adc
ss
addr16
pusha
inc
jmp
add
dec
pop
adc
sbb
adc
cs
ss
cmp
cmp
das
je
ret
pop
rol
pushl
scas
or
push
test
sub
push
xchg
xchg
ljmp
mov
jl
inc
call
enter
or
jmp
and
xor
mov
mov
fisubrs
mov
decl
mov
cmp
xor
or
clc
lcall
out
lret
loope
sub
cmp
les
and
ret
insb
adc
xchg
test
fidivl
movsb
insl
jnp
ss
lock
clc
jg
cs
mov
lods
inc
testb
mov
xchg
call
and
mov
mov
xchg
shl
cmp
mov
cli
in
xchg
incl
inc
or
push
ret
mov
pushf
pop
push
das
inc
add
das
or
lock
lcall
mov
es
sahf
aam
ret
insl
dec
pusha
ret
pop
decl
jb
ss
sub
lds
mov
loope
and
xor
cmpsl
pushl
cli
adc
sbb
inc
negb
inc
mov
cmp
push
cmp
movsl
mov
adc
push
sbb
xchg
cmp
jg
test
cli
xor
push
xor
iret
sub
jmp
or
fimull
and
cmc
push
push
ss
mov
push
je
push
inc
mov
xchg
push
test
out
push
notb
cmpsl
dec
movsl
stos
pop
inc
xor
xchg
pop
imul
sbb
incl
jb
lds
cmp
mov
adc
rcpps
rorl
lock
sbb
dec
or
test
sub
gs
aaa
fmull
dec
int3
inc
scas
jno
ss
jmp
xchg
imul
jl
in
cmp
mov
mov
addb
mov
sub
cmp
mov
push
jo
popl
sub
vmovlps
sbbb
push
jg
out
dec
or
lret
dec
and
loop
jmp
lock
adc
mov
mov
ret
repz
add
test
pop
add
pushl
lods
xor
data16
fimull
jno
or
sub
xor
lods
movsl
fs
pusha
or
push
inc
xchg
add
imul
fistl
fldt
push
jne
pop
std
scas
lock
call
clc
loope
fistps
addr16
std
inc
jno
movsb
cmpsb
add
push
cli
iret
add
xchg
incl
sbb
fcomp
loope
sbb
push
sbb
mov
incl
push
push
mov
and
xor
add
rcrb
cmp
decl
sbb
sub
out
repz
lods
movsb
and
das
and
clc
xlat
pop
dec
hlt
cs
lock
push
jecxz
aam
mov
sub
mov
sub
cmp
ljmp
adc
jmp
xor
test
ss
cmpsl
xorb
xchg
adc
inc
cltd
push
push
push
cmp
stos
jle
in
cld
fs
add
mov
sbb
adc
push
add
loope
sahf
sub
dec
fdiv
aad
shlw
inc
stos
push
mov
xchg
push
xor
addl
inc
sbb
cld
push
xchg
xor
call
insb
loopne
sbb
pusha
lcall
inc
les
daa
test
incl
add
inc
pop
popa
fxch
jp
popa
lcall
mov
dec
mov
sbb
sbb
aaa
cmpsb
mov
sbb
mov
dec
adc
das
dec
pop
fidivs
sbb
and
cmp
mov
clc
and
push
jle
scas
push
jp
inc
pop
push
call
lcall
fcmovbe
mov
lret
aaa
mov
mov
sub
decl
scas
sub
mov
loope
imul
cmp
cld
decl
outsb
stc
sbb
daa
repnz
xchg
cmc
mov
push
add
loop
jo
mov
incl
aas
sbb
fadd
jl
lea
mov
jae
pusha
add
and
out
dec
les
pushl
push
repz
xorb
jle
nop
cmpb
push
xchg
stos
dec
jle
dec
inc
cmp
fildll
enter
jp
notb
push
push
lcall
cmp
cmp
incl
loopne
sarl
dec
cltd
lcall
cmp
mov
out
push
sbb
adc
int
roll
call
mull
add
or
add
outsl
jge
ds
cli
xchg
cld
jmp
sub
mov
fldcw
xchg
mov
jg
sub
inc
lods
inc
adc
xchg
rorb
push
push
push
decl
es
jle
pop
pop
inc
insb
fstl
por
mov
ret
dec
jmp
popf
pop
adc
adc
gs
mov
packsswb
or
mov
mov
mov
dec
les
cmp
lea
mov
cmp
push
add
pushl
sbb
ds
mov
aaa
mov
push
lea
push
mov
xor
call
pop
repnz
test
dec
sbb
push
in
aaa
mov
or
scas
sbb
subl
cld
das
xor
push
and
test
xor
dec
fs
repnz
mov
push
mov
push
popa
scas
stos
mov
test
ljmp
test
test
or
scas
imul
jae
pop
cmp
mov
add
pushf
add
mov
xlat
adc
rcrb
cmc
xchg
adc
movsb
mov
jmp
loop
aad
or
in
xlat
repz
push
pusha
fadds
jmp
inc
cs
je
mov
fcmovnbe
xchg
pushf
dec
xchg
pusha
push
jecxz
mov
aaa
mov
je
inc
pusha
int3
pop
icebp
cmp
add
and
jg
xchg
jp
mov
js
lar
mov
mov
jbe
scas
scas
jge
mov
cltd
hlt
xchg
call
sub
jecxz
ja
or
xchg
dec
cmp
fadds
pusha
xchg
cmp
pop
sub
mov
in
scas
mov
jno
push
clc
pushl
cmp
push
ds
insb
sbb
or
ljmp
clc
lods
xor
lret
add
cmpsl
xor
in
loop
mov
incl
adc
sbb
stos
daa
pop
sbb
pop
push
repnz
add
daa
mov
cmp
jmp
sbb
fadds
pop
mov
nop
pop
ja
add
movsb
inc
jns
pusha
xchg
inc
incl
lret
loope
addl
cmp
cmp
mov
push
ret
ljmp
fisubl
icebp
jb
dec
repnz
mov
sub
enter
das
out
adc
mov
mov
bound
sub
sbb
fstl
stos
push
ljmp
jb
push
ds
mov
stos
repz
scas
sub
adc
xor
aam
and
pushl
inc
rolb
test
in
ret
test
rolb
cmpb
fadd
ja
sbb
ret
ds
ds
fucomi
ret
inc
sbb
inc
xor
add
jb
mov
pop
add
stos
xchg
push
nop
adcb
call
js
dec
les
dec
xchg
add
inc
repz
adc
add
push
push
pop
push
std
scas
add
inc
pop
in
inc
pop
lds
clc
in
mov
pop
mov
pop
fs
cmp
aam
add
sub
xchg
xor
inc
cld
sbb
fldl
stos
cli
pop
adc
add
add
xor
jg
test
fcomip
push
loope
ja
adc
xchg
sub
adc
xchg
xor
cmp
ljmp
and
cmp
xchg
mov
add
in
add
push
xchg
aaa
xchg
clc
cmpsb
rol
rclb
cmpl
dec
jecxz
decl
std
loopne
mov
lea
cmpb
jecxz
je
or
mov
and
movsb
cmp
jb
shlw
mov
push
mov
jb
sub
repnz
fcomip
push
fmuls
pop
loopne
dec
mov
test
push
mov
mov
jo
and
sbb
decl
push
dec
jae
ss
jmp
mov
inc
xchg
rorb
jg
mov
jnp
shrb
or
push
sbb
adc
ljmp
or
je
shlb
push
jl
bound
insb
pusha
mov
add
cmp
pop
cmp
mov
cwtl
mov
lcall
addl
icebp
and
decl
mov
cmpsb
pop
push
shlb
aam
cmp
decl
dec
add
rolb
nop
scas
jmp
mov
dec
jnp
xchg
sbb
sub
ss
xor
mov
adcl
notb
jo
ret
push
es
bound
filds
inc
lods
ret
push
scas
int
push
add
push
fisubl
in
outsl
decl
xchg
add
enter
loope
dec
sbb
add
sbb
mov
mov
cmp
xchg
pop
test
mov
sub
addb
push
xchg
sbb
xchg
sbb
decl
dec
les
or
fs
rcr
ljmp
into
in
iret
es
add
add
pop
sub
and
lret
call
adc
mov
pop
popf
push
xlat
pop
push
movsb
and
pusha
dec
hlt
sti
ljmp
sub
shlb
sub
into
adc
loop
lea
xorb
lods
sub
js
or
pushl
enter
popf
sub
push
inc
adc
add
jecxz
pop
andl
mov
jg
sub
cmp
mov
xchg
sbb
jecxz
sti
cmp
jecxz
cmp
aad
or
xor
mov
jmp
mov
mov
lods
adc
jl
mov
or
dec
mov
adc
cli
xchg
sub
fs
shrb
mov
jmp
cltd
sbb
cld
sub
push
push
sbb
or
mov
js
mov
add
sub
movsb
xchg
leave
and
cli
incl
sbb
inc
add
pop
cmp
daa
js
sub
sbb
cmpl
sbb
sbb
sub
js
aas
jp
sub
ret
adc
lcall
pushl
xor
mov
pop
sub
jg
inc
scas
xor
cmpsb
sub
push
clc
ljmp
cmovnp
xchg
xor
lret
stos
sbb
shlb
dec
cmp
lea
test
add
jge
ds
pop
inc
xor
stos
out
fs
out
fdivr
or
test
cmp
sbb
fadds
incl
lods
fmuls
xchg
insb
js
aad
cmp
inc
cli
scas
mov
sbb
pop
cmp
cmp
lock
sub
add
nop
les
subl
fldcw
incl
notb
add
add
fisubrl
inc
idivb
adc
inc
aam
ja
push
int
pop
std
push
rcll
ficompl
cmp
outsl
or
test
daa
clc
fisubrl
sbb
cmp
pop
add
mov
cld
das
ficoml
jg
push
sbb
js
mov
adc
jg
lea
sbb
cmp
adc
rcpps
pop
cmp
or
call
dec
dec
mov
mov
xor
loop
add
shlb
lcall
cmp
arpl
push
jnp
mov
xor
sub
xor
xorb
add
std
lcall
mov
adc
mov
ret
leave
sarl
inc
mov
or
pop
imul
sarb
inc
jne
std
fstpt
scas
mov
inc
lds
cmp
sahf
in
dec
dec
sbb
loop
mov
fmul
push
movsb
inc
lret
clc
cwtl
scas
add
pop
lcall
pop
ret
mov
aad
mov
aad
sbb
push
gs
ljmp
push
or
pusha
or
dec
sbb
or
jb
pushl
sahf
adc
inc
cmpsl
pop
fildll
add
cmp
push
and
xor
decl
mov
es
cmpsb
mov
popa
test
xlat
cli
inc
push
or
add
out
pushf
mov
pushl
aas
mov
pop
and
sub
test
or
add
cltd
clc
outsl
push
mov
xchg
shl
inc
into
pop
std
imulb
cs
bound
add
dec
subl
jecxz
add
and
dec
jmp
push
add
clc
xorl
loope
sub
loopne
jns
mov
mov
pushf
adc
push
cmp
inc
or
pop
cmc
aas
mov
das
out
pop
add
adc
mov
and
add
mov
mov
xchg
cs
or
and
incl
int
pop
fadds
aaa
outsb
jecxz
gs
push
jecxz
data16
add
push
ss
test
sbb
fldl
fwait
or
or
xchg
pushf
pushw
decl
lock
sub
gs
les
sub
dec
lret
cld
lcall
push
mov
stos
sub
push
mov
pop
adc
mov
mov
mov
pop
dec
es
mov
xchg
shlb
mov
incl
popa
xor
scas
jo
movsb
lock
pop
stos
dec
xchg
push
push
stos
mov
pushl
ret
stos
enter
sbb
leave
cld
cmp
popa
mov
and
push
cli
call
fxch
adc
xchg
pop
mov
inc
mov
subl
incl
jns
inc
rolb
lds
movsl
add
mov
std
add
decb
out
mov
lahf
outsb
add
fbld
mov
or
lret
and
jmp
lea
sub
cmp
push
loop
test
lcall
push
fidivrl
sub
pusha
mov
jns
je
inc
enter
mov
mov
jmp
fs
push
push
bound
daa
mov
mov
stos
ljmp
cli
pop
cmc
fcomi
mov
push
fs
mov
jecxz
dec
pop
test
pop
out
loop
pop
dec
adc
sub
or
add
ss
imul
dec
arpl
int3
pop
cmpb
jmp
jbe
out
and
shlb
and
adc
sahf
lock
add
add
lock
stos
adc
dec
addb
lock
xchg
ljmp
add
dec
add
test
insl
add
clc
jg
loopne
das
inc
inc
stos
insl
out
test
rclb
jg
push
xor
and
add
call
xor
outsl
and
out
incl
push
into
pop
add
incl
rcr
adc
xor
push
lock
push
pop
mov
pop
cwtl
add
mov
or
xor
adc
and
jg
mov
inc
sbb
or
or
enter
lret
sub
dec
mov
xchg
sbb
mov
out
mov
adcb
push
push
lods
pop
add
jmp
push
data16
addr16
push
xchg
jg
sbb
sbb
sbb
mov
xchg
or
dec
stos
sub
pushl
push
aam
or
mov
out
lcall
push
das
movsb
fsubrp
in
or
outsl
incl
fisubs
in
stos
xchg
mov
pop
jmp
xchg
adc
inc
pop
nop
loope
mov
or
test
sbb
add
or
paddb
lcall
std
pop
movsl
cmpsb
hlt
faddl
mov
ljmp
mov
aad
and
pushl
sbb
movsb
shrb
or
subl
decl
inc
mov
rorl
gs
repz
shl
mov
push
mov
lcall
adcb
push
mov
mov
leave
aam
std
lcall
xchg
scas
cli
call
pop
and
mov
cmpsl
and
ds
xchg
or
dec
pop
inc
cld
mov
fistpl
inc
les
add
ja
push
in
les
js
pop
call
pushl
xchg
popf
add
addb
push
sub
mov
push
fwait
xchg
sub
inc
push
test
fsubr
pop
test
aad
insb
js
mov
inc
test
incl
and
cmp
pop
pusha
push
push
pop
cmp
jl
testb
jle
mov
jb
jns
out
add
push
adc
loopne
out
sets
js
jl
jg
test
xacquire
test
sbbb
pop
dec
and
push
inc
call
js
mov
and
pop
pop
add
inc
ljmp
push
bound
daa
popa
std
xchg
add
and
ljmp
test
dec
jnp
imull
shr
jg
outsl
pop
clc
add
inc
and
js
cwtl
or
clc
push
clc
xchg
ljmp
mov
sahf
push
mov
orb
pop
or
pop
loop
push
push
out
cmp
jnp
jo
movsl
shrl
mov
dec
pop
lock
mov
sbb
test
bnd
fldl
jmp
and
jnp
int3
inc
ror
mov
xor
popa
decl
add
cwtl
ss
orl
jb
xor
pusha
out
ja
sub
xor
push
xchg
xchg
mov
jmp
xor
mov
sub
jmp
mov
sbb
divl
and
dec
cmc
cwtl
repz
xchg
jg
test
mov
subb
ds
mov
cmp
jno
push
ret
pusha
rclb
lock
sbb
pop
dec
pushf
decl
loop
xchg
sbb
adc
xchg
daa
test
pop
pop
gs
ss
rol
mov
and
xchg
rol
test
jecxz
addr16
or
test
sub
xchg
add
push
std
pop
sarb
repz
pop
mov
sub
adc
loopne
xor
fmuls
push
ljmp
mov
lret
loopne
rcrl
cmp
ljmp
and
hlt
dec
pop
xchg
push
lods
call
lock
roll
xchg
adc
or
sbb
ret
lds
xchg
out
mov
in
insl
jae
cmp
cmp
rcr
add
jo
es
decl
mov
or
fcmovb
sub
jle
sbb
int3
out
fwait
dec
outsl
sahf
and
xor
xor
ljmp
repnz
lds
rorb
jae
xor
shll
xchg
insl
lods
push
push
call
xor
outsb
fidivrs
xlat
insl
xchg
orps
pop
stos
fsub
inc
psllw
add
decl
xlat
mov
test
mov
or
fnstcw
and
dec
pop
mov
aad
push
sar
jb
je
lret
jno
call
mov
xorb
add
sbb
cmpsb
std
and
mov
ljmp
pop
pusha
test
js
add
push
adc
sbb
inc
addb
inc
add
sar
out
cli
xchg
fs
and
inc
push
adc
jmp
xchg
ret
adc
lock
jmp
pop
push
sbb
scas
mov
inc
sbb
add
inc
sbb
mov
out
and
xor
mov
pop
lcall
sbb
decl
push
dec
jmp
pop
pop
enter
test
js
leave
stos
push
mov
call
lock
push
push
mov
loope
ljmp
push
sub
add
ja
fisubl
pushl
sbb
mov
popa
sub
cmpsb
cmp
sub
pushl
mov
out
mov
xor
pop
mov
aaa
fsub
sti
sbb
jg
pop
cmc
adc
inc
sbb
xor
dec
sub
sub
push
xor
dec
add
dec
sbb
jecxz
xor
sarb
inc
pop
push
je
push
pushl
inc
and
in
rcll
je
mov
cmp
test
pop
ss
out
cli
lcall
add
sbb
xor
jne
rol
inc
xchg
push
inc
xor
adc
cmp
decl
add
adc
push
adc
add
add
adc
imul
dec
cmp
pop
jne
cmc
ss
je
ljmp
pop
sbb
push
fsubrs
xchg
popa
addl
arpl
xor
adc
adc
mov
decl
push
cmc
sub
movb
sub
add
mov
leave
out
mov
xchg
es
xchg
push
mov
mov
jmp
orb
cmpsl
icebp
or
es
cwtl
or
jo
aaa
cltd
loope
pop
cmpsl
xchg
mov
adc
decl
in
enter
adc
es
ljmp
fisttpll
loopne
out
roll
add
mov
test
out
orl
and
decl
je
or
out
or
add
xorb
xor
add
nop
subl
cmc
decl
adc
and
cmp
pop
inc
push
rcrb
shrb
mov
hlt
sbb
sbb
jns
add
mov
push
adc
add
loopne
mov
sbb
and
nop
xchg
das
cli
cmp
push
cmp
pop
mov
add
inc
dec
insb
mov
test
mov
jmp
add
adcl
cs
mov
dec
add
mov
rolb
adc
lret
mov
and
mov
mov
push
add
or
sub
lock
decl
sub
xchg
adc
cmp
leave
push
xchg
rclb
data16
lcall
inc
leave
xor
adc
adc
repnz
mov
leave
xor
jb
sbb
decl
push
aas
sub
jne
pop
loope
and
jae
mov
cld
pop
xchg
mov
or
call
mov
or
xchg
mov
jns
lods
cwtl
adc
aam
loop
arpl
sub
xrelease
and
push
sbb
dec
add
ret
sub
nop
nop
jge
jmp
xchg
mov
fwait
cld
jmp
inc
ss
adc
neg
inc
xor
jno
xchg
mov
or
sahf
addb
data16
xor
addr16
xchg
lahf
dec
lea
xchg
cmpsb
cmp
mov
test
adc
loope
sub
test
mov
lods
lea
out
xchg
xchg
mov
dec
jp,pn
or
fcoml
add
clc
xorl
cmpsb
xor
cmp
adc
std
pushl
pop
cmp
pop
inc
xchg
pop
roll
add
outsl
pop
sub
nop
inc
xor
push
adc
or
add
pushl
data16
push
fwait
and
sbb
cmc
dec
or
adc
setb
mov
pop
in
xchg
incl
fbld
and
push
pop
sar
je
rorl
sbb
pop
pusha
inc
shlb
sbb
int3
and
nop
add
sub
sbbb
inc
fbstp
pop
lds
mov
mov
clc
add
lahf
add
and
lcall
rcrl
pop
int3
loope
mov
dec
sbb
and
push
test
es
mov
jne
stos
jmp
rcrl
test
ja
shrl
in
push
pushl
test
sbbb
mov
xchg
movsb
in
icebp
cmpsb
mov
sbb
aad
pop
cs
ret
aas
xchg
repz
into
xor
add
fadds
pusha
push
and
mov
popa
cltd
inc
pop
das
fwait
js
movb
pop
pop
hlt
incl
ret
push
dec
test
dec
jp
push
mov
push
cwtl
xor
xchg
test
idiv
decl
and
sahf
aam
lods
jb
das
jmp
sbbl
add
xchg
add
cltd
sbb
xchg
sbb
sub
pushl
stc
daa
dec
jb
pop
mov
daa
jne
sub
inc
cmpsb
pop
cltd
sub
sub
ljmp
adc
frstor
push
insb
mov
loope
pusha
decl
clc
mov
or
push
pusha
dec
dec
ret
lret
add
ljmp
cltd
outsb
jle
inc
lahf
loop
cmp
cmp
rorl
pop
sbb
sub
mov
shll
or
insl
xchg
ljmp
enter
sub
push
int
rcrb
push
sub
jmp
decl
xchg
movsl
or
push
cltd
addb
in
shrb
test
dec
sub
inc
xor
sbb
ss
insl
aam
fiaddl
mov
into
sbbl
mov
pop
lcall
sbb
std
mov
dec
cmp
out
pusha
pushl
inc
xchg
je
test
mov
stos
call
orl
inc
xor
stos
stos
or
pop
test
sbb
jecxz
es
cs
bound
mov
xor
or
xchg
test
xor
lcall
pop
push
dec
add
cmp
scas
xor
or
add
loopne
cmc
test
jmp
test
add
in
es
or
das
es
in
mov
cltd
add
and
les
inc
push
dec
add
cld
incl
sbb
fs
mov
popf
push
sarl
mov
mov
mov
mov
ja
cmp
and
in
sub
ja
add
shlb
outsb
sbb
jp
ljmp
push
mov
fisubl
inc
cld
lcall
aam
inc
pop
fimull
mov
fsts
test
or
push
xchg
movsb
movsb
enter
xchg
jmp
pop
cmp
add
lret
cmp
cmp
pop
xor
mov
lock
sub
dec
mov
push
inc
idivb
call
in
leave
sub
sbb
and
rorb
shlb
mov
or
sbb
cli
jge
fs
mov
dec
jo
jns
cmp
pop
sub
lcall
xchg
fxam
push
ss
lret
mov
shlb
in
pop
add
out
test
fwait
mov
pusha
add
sbb
ret
adc
inc
roll
lea
jno
jp
adc
xchg
mov
enter
push
leave
lods
or
lods
int3
aaa
cltd
xchg
cmp
inc
mov
test
xchg
xchg
clc
incl
test
inc
xor
int3
xor
int3
and
ret
add
ljmp
cmp
or
adc
or
inc
add
add
inc
inc
ljmp
push
inc
dec
or
mov
fisttpl
inc
inc
pop
fadd
fdivrl
test
rcll
or
xchg
test
dec
pushf
cmpl
mov
add
adc
orl
jg
or
aad
jo
pop
jb
push
adc
pop
pop
xchg
xchg
adc
sbb
mov
xchg
pop
sub
pop
cs
loopne
es
pushl
and
jge
pop
lea
and
mov
add
add
pushl
in
adcb
add
and
outsb
popa
add
mov
or
cmp
adcl
shlb
sbb
rcl
pop
inc
imul
sar
fcomip
cmpsb
jge
test
pop
js
mov
add
ret
sarb
in
fcomip
dec
sbb
add
es
adc
out
sub
fldcw
mov
movsl
add
movsl
popf
lock
mov
in
mov
or
insb
push
sub
leave
bound
add
adc
adc
fimull
les
xor
inc
add
test
fucomp
ret
rorl
sub
lock
xor
orb
cmp
push
push
cmp
and
pop
push
mov
pushf
lret
xchg
jmp
outsl
and
incl
pop
lret
andb
mov
incl
les
cmpsb
or
mov
fwait
adc
dec
push
loope
dec
and
or
shlb
gs
out
sub
test
mov
fcomip
scas
add
sub
lahf
sub
inc
adc
lcall
or
lock
das
or
shl
fstpl
cwtl
xchg
lcall
or
dec
add
pop
or
or
shll
push
ret
sahf
xor
cmp
fbstp
jl
cmp
sbb
mov
cmp
or
push
incl
lods
mov
push
or
fisubl
lods
pop
inc
in
out
vpaddq
decl
aas
int3
cmpsw
roll
jo
sbb
ret
dec
or
popa
or
ret
jae
lcall
mov
int
pop
out
push
pop
sub
sbb
add
int3
inc
adc
inc
daa
cld
shrb
push
repnz
decl
lock
xor
xchg
adc
daa
mov
sub
adc
dec
outsb
xchg
mov
stos
cltd
loopne
test
js
in
cs
das
cli
fbld
and
mov
bound
mov
sbb
inc
mov
ret
js
aaa
xor
nop
fs
add
lret
ret
cmp
icebp
mov
cmp
loop
pop
orl
xor
pcmpgtb
sbb
jg
rolb
inc
push
add
cmp
xor
jmp
inc
ret
bound
adc
sub
mov
insb
clc
add
shrb
ljmp
jg
and
fs
sub
mov
add
icebp
lcall
sbbl
aad
push
xchg
ja
and
subl
mov
fistpl
mov
mov
imul
xchg
adc
aad
movsb
cmpl
add
lcall
inc
pop
je
adc
lahf
js
lret
lahf
cmpsl
enter
sbb
jmp
pusha
or
mov
movsl
xor
sbb
stos
out
cmp
sbb
idiv
stos
and
sub
lahf
and
push
mov
push
pop
pop
add
xor
or
push
push
in
mov
call
dec
testl
lods
mov
sar
aad
cs
pop
or
sbb
aaa
in
out
std
or
mov
push
cld
stos
push
movsl
mov
ret
aad
lcall
add
enter
test
test
add
add
gs
leave
fs
ljmp
addr16
cltd
or
push
mov
add
mov
inc
xor
xor
insl
rcr
mov
cli
mov
aad
mov
push
push
sbb
adc
fistpll
aad
dec
lods
add
inc
pop
cmpsb
adc
scas
cli
sub
pushf
sbbl
add
add
dec
sub
add
outsl
cli
pushl
sub
or
cltd
xchg
out
jge
roll
push
dec
push
repnz
ss
add
and
in
sbb
icebp
ljmp
inc
mov
mov
adc
add
sbb
ffreep
imul
push
mov
xor
jg
das
xchg
enter
rolb
lods
inc
xor
shll
jle
jecxz
hlt
inc
push
hlt
xor
add
and
adc
inc
ljmp
and
inc
and
inc
mov
sub
sbb
insl
pop
out
ss
lcall
xchg
pop
insb
enter
ds
jo
je
push
push
jne
aaa
call
aaa
mov
pushl
fnsave
adc
cmp
pop
imul
std
inc
imul
cmp
fistpll
add
mov
clc
dec
push
xchg
inc
inc
add
add
inc
sarl
adc
inc
sbb
fs
fildll
pop
add
add
out
xlat
mov
lret
mov
test
sub
stos
nop
mov
push
lds
mov
push
sub
pop
sbb
pusha
leave
jp
xchg
dec
xor
xor
clc
decl
rcr
repz
pop
movsl
test
lret
and
lahf
mov
ljmp
sarb
sbb
lcall
mov
mov
sbb
jo
cs
pop
cld
mov
cs
mov
mov
pop
icebp
adc
loop
pop
or
loopne
incl
ret
dec
or
push
inc
xor
dec
lds
inc
lcall
rcrl
imul
stos
adc
xchg
mov
sbb
or
clc
outsb
adcl
clc
pushl
or
inc
rcrb
inc
mov
shl
data16
and
add
pushl
dec
sbb
addr16
popa
pop
aas
or
adc
daa
adc
lods
pop
jbe
mov
sbb
push
fbstp
jecxz
lcall
lds
loope
add
pusha
inc
aas
push
push
push
das
sar
xor
rcr
rcr
in
aaa
mov
ret
scas
mov
subl
pop
push
jo
outsl
and
push
std
loop
ret
je
and
xor
or
cmpsb
or
pop
movsl
cli
stos
jbe
ds
adc
nop
mov
push
push
xor
decl
or
jnp
sub
jecxz
cmc
jl
imul
ret
jmp
inc
cmp
push
push
call
xor
daa
sbb
pop
inc
or
add
es
leave
dec
fisttpll
mov
ljmp
es
xchg
aam
mov
js
paddusb
jne
jmp
cld
push
mov
das
mov
shrl
mov
imul
or
pop
rcrl
inc
movsl
push
push
and
push
into
movsb
ret
ret
dec
dec
push
jg
fisubrs
add
ret
aas
pop
ret
push
lods
xchg
adc
mov
push
lret
rolb
push
adc
mov
orb
ficomps
or
xchg
xor
and
ljmp
push
incb
mov
imul
or
add
cwtl
lcall
jbe
not
fisubrs
jno
das
push
jbe
mov
in
in
shlb
lcall
pop
rclb
lret
push
icebp
pusha
mov
pusha
mov
ljmp
in
fwait
adc
ret
ret
cmp
lds
fwait
clc
mov
aaa
mov
inc
push
rcrl
pushl
les
gs
mov
rol
inc
adc
into
push
sub
je
pushf
int
call
outsl
cmpsb
insb
and
mov
xor
pop
jmp
shll
rol
mov
push
scas
leave
ret
mov
andb
loopne
mov
or
cmp
cmp
mov
dec
in
dec
lock
add
rcrb
repz
test
lock
sub
jecxz
sbbl
stos
incl
dec
mov
into
in
sub
mov
mov
adc
addb
aaa
xor
cmpsl
pop
lock
mov
in
inc
xor
push
sbb
subl
sbb
aam
rdmsr
pop
adc
ret
add
and
incl
clc
sub
dec
cmp
add
pop
cmp
hlt
pop
fs
scas
and
sldt
pop
inc
ds
adc
inc
out
data16
push
jmp
call
call
ret
or
ss
add
sarb
or
aas
ds
sub
xchg
or
cmp
xor
fisubl
pushf
cmpl
scas
decl
pop
adc
in
hlt
adc
push
loopne
movsl
push
xor
and
or
jbe
addb
sbb
add
pushl
push
pop
or
lods
or
fsubrs
dec
mov
gs
cmp
pusha
mov
ljmp
pusha
daa
pop
and
mov
aam
or
push
aad
mov
mov
movsl
sahf
adcb
sbbl
decl
adc
pop
mov
in
icebp
gs
mov
or
push
mov
imul
dec
and
or
push
pop
ret
xor
pop
add
adc
jmp
add
lods
xor
movsl
pop
es
cli
xor
dec
xchg
mov
in
jno
dec
cmp
inc
mov
inc
test
xor
pop
icebp
incl
pusha
pop
call
or
pusha
test
inc
in
insl
inc
jmp
mov
sub
ja
add
mov
scas
or
adc
cmp
xor
pop
cmp
cmpb
xchg
jo
adc
hlt
mov
xchg
adc
inc
data16
or
fs
dec
xchg
cmpsl
fsubrs
mov
jbe
lds
or
dec
add
add
fdivr
jno
mov
in
ret
mov
adcl
sbb
sbb
adc
lcall
add
scas
and
ret
loop
push
ss
xor
stos
jg
loope
decl
fadds
jmp
mov
push
hlt
push
add
adcb
ljmp
and
cmp
bound
inc
inc
ljmp
pop
shll
arpl
stos
pushl
pop
jns
pop
jns
ret
fsubl
ret
imul
aas
in
rorb
sbb
xor
popf
hlt
adc
jmp
push
sub
hlt
jnp
clc
cmpl
mov
and
outsl
sub
insb
add
insl
pop
mov
hlt
mov
adc
jecxz
xchg
je
push
or
push
sbb
push
mov
cs
inc
pop
sbb
push
test
pop
addr16
lcall
adcb
loopne
add
shlb
jno
mov
jae
lcall
adc
jae,pn
mov
mov
add
inc
adc
lret
dec
push
arpl
pushl
nopl
test
ljmp
sbb
ja
fsubl
push
insb
fadds
popa
inc
jl
xchg
and
fdivrs
outsb
mov
pop
mov
jmp
pop
fidivrs
fwait
mov
fbld
fdivr
jb
lcall
pop
mov
add
jne
cmp
and
es
popl
gs
fwait
fdivrp
sbb
add
cmp
dec
pusha
shrb
jne
lods
jmp
idivb
xlat
mov
sarl
cmp
fdivrl
jecxz
lcall
fnstcw
pushl
cmpb
or
ret
or
pop
xor
push
mov
ret
sbb
fidivrs
stc
shrb
daa
inc
adc
shll
dec
xchg
jp
add
jg
ljmp
mov
or
sarb
mov
rolb
mov
dec
add
pop
lods
mov
lcall
xor
add
test
cmp
call
mov
mov
bound
mov
movsb
inc
and
cwtl
and
push
cmpb
dec
adc
push
incl
lret
cwtl
inc
cltd
jg
and
push
int3
dec
shlb
or
movsl
mov
dec
fcomip
xor
jmp
xchg
add
addl
sub
sub
mov
push
scas
mov
cmp
call
out
pusha
mov
ss
lcall
fisubrl
jmp
cmp
and
mov
add
decl
push
and
loop
aad
xor
add
add
inc
stc
call
pop
jbe
orl
roll
bound
decl
js
dec
push
addr16
jo
pop
lock
sub
pop
jg
jo
or
jg
add
adc
cmp
add
rorl
stos
add
pop
call
loopne
mov
sbb
in
add
sbbl
scas
mov
add
xor
jo
popa
mov
dec
add
cmpsb
xchg
sbb
andb
sbb
stos
and
xchg
insb
mov
cmpsl
or
decl
pushf
xchg
bound
cmpsb
cmpsl
bound
push
cwtl
fstpt
mov
inc
stos
test
mov
add
fmul
mov
push
xchg
sub
imul
or
jmp
mov
jb
ret
stos
mov
push
push
cmp
ret
in
dec
mov
in
pushl
cld
into
stos
mov
es
aas
sar
fdivl
jg
lcall
in
adc
cmp
lods
mov
js
sub
lods
cmp
call
jl
loope
sub
enter
repnz
mov
shl
out
xchg
loope
or
mov
lret
popf
cmp
mov
cld
divb
pushl
ss
mov
and
push
rorl
and
movsb
mov
pop
inc
cmp
and
push
push
mov
lods
xor
or
dec
inc
mov
xchg
jecxz
call
imul
sbb
pop
pop
in
jle
out
mov
mov
movsl
lock
xchg
push
xor
lret
jg
xchg
lea
pop
add
dec
push
mov
or
mov
mov
add
lock
rcrb
shr
addb
add
cld
jecxz
call
jp
adc
dec
or
loopne
add
mov
cmp
sbb
aas
or
and
roll
ljmp
pop
bound
mov
rolb
lret
lock
sbb
inc
push
jl
and
incl
mov
add
inc
xchg
icebp
push
cs
add
jg
lods
sbb
fwait
pop
mov
lcall
rcrb
testl
xor
lret
loop
lea
in
or
inc
inc
mov
cmp
icebp
imul
add
test
ljmp
dec
xor
xchg
or
sahf
xchg
inc
and
call
mov
repnz
and
sahf
adc
dec
je
xor
je
lcall
mov
popf
in
add
push
xor
fiadds
push
popa
mov
mov
add
dec
pop
in
repnz
adc
lds
pop
imul
loop
jp
call
and
ds
mov
les
fcmovnbe
aaa
sbbl
ljmp
icebp
loopne
jae
ret
pop
incb
popf
sub
sbb
jno
sarl
int
lock
push
cmpsl
jae
and
outsl
xor
lcall
sbb
xchg
mov
cmpsl
inc
pop
sbb
xor
mov
iret
in
outsb
mov
lahf
scas
cmpsl
ja
inc
jae
lock
xchg
add
adc
out
rorl
aam
push
fisubrl
jbe
and
mov
call
or
cmp
mov
shll
mov
cmp
rol
and
aam
inc
dec
lcall
xor
pop
jp
pushl
xchg
out
shrb
push
sbb
cmp
aas
adc
sbb
and
pop
inc
mov
lcall
sti
or
mov
cmp
insl
xor
pop
lret
or
lock
scas
lret
add
decl
jmp
sub
aas
call
sbbl
ret
or
push
imul
mov
inc
dec
or
in
call
jns
shrl
jo
outsb
mov
xor
pop
fisttps
xchg
add
enter
adc
out
jae
decl
das
sbb
xchg
push
out
mov
jmp
push
adc
mov
mov
pop
cmp
and
enter
andb
jp
pop
mov
xchg
test
hlt
addr16
sub
dec
loop
ret
sbb
call
or
push
incl
bound
or
pop
push
jbe
les
push
ret
int3
lret
decl
mov
lea
insb
pop
xor
sub
pop
dec
or
mov
cwtl
shll
xchg
dec
stos
mov
incl
dec
cmp
push
adc
push
clc
lcall
xchg
lods
xchg
xor
outsb
adc
pop
in
pop
scas
xchg
dec
lahf
inc
and
das
enter
adc
ss
repz
mov
loope
mov
mov
icebp
lcall
pop
dec
insb
xor
add
inc
out
cmp
mov
iret
dec
lcall
pusha
leave
dec
mov
xchg
push
je
mov
cmp
decl
out
sbb
or
and
loope
jns
icebp
shl
jl
ja
adc
jl
outsl
clc
test
xor
jae
cmpsb
ljmp
adc
adc
test
test
sbb
mov
or
jmp
fsubrl
adc
cmp
test
and
adc
cmp
or
rolb
andb
aam
addl
loopne
pop
clc
incl
outsl
jle
sbb
nop
adc
jo
repz
outsb
xor
xor
push
and
pop
add
lock
mov
xchg
inc
shld
sbb
insl
add
add
and
cmp
jb
repnz
and
sub
scas
je
inc
adc
fidivrl
iret
fwait
incl
fwait
shl
jle
inc
or
pop
cli
ret
inc
cmp
adc
mov
incl
cmp
push
insl
pop
les
loopne
ljmp
orl
popa
ja
ljmp
cmpxchg
sbb
add
pop
add
incl
mov
adc
push
loop
xor
and
xchg
dec
mov
outsl
mov
push
cmpsb
dec
js
pushw
xor
icebp
push
ja
decl
mov
add
push
dec
lods
mov
xlat
incl
push
cmpsl
cmp
push
das
arpl
pop
out
xor
push
add
cmpsb
sbb
subb
or
push
adc
adc
xor
mov
jle
ljmp
iret
outsl
xchg
jmp
mov
jecxz
sbb
mov
fldcw
push
std
les
jae
test
mov
fcomps
pushl
fsubr
cmp
push
icebp
cwtl
mov
js
cmp
push
ds
jecxz
add
stos
mov
inc
mov
sbb
lcall
mov
lods
cmpb
inc
jo
cmp
lret
lods
mov
and
or
nop
dec
sub
pushl
jbe
sub
mov
dec
aam
push
push
mov
mov
mov
xchg
pusha
or
mov
push
pop
dec
mov
xor
jl
push
xchg
loop
aaa
sbb
or
mov
add
inc
push
mov
mov
and
cs
inc
lods
movsb
jecxz
imul
xor
sbb
xchg
sbb
push
mov
mov
int3
dec
mov
sub
popa
and
add
push
repz
jg
or
call
cld
daa
push
push
insb
pop
add
cwtl
add
ss
adc
jg
dec
xchg
pop
shr
adc
and
test
mov
sbb
in
out
inc
sarb
mov
pop
je
pop
sub
test
mov
insb
fisttpll
pusha
or
cld
stos
lcall
sbb
lock
mov
and
push
add
pushl
sub
pop
and
xchg
mov
push
outsl
cli
pushl
sbb
ret
loopne
fsub
lret
push
decl
fsub
sub
or
push
arpl
xchg
sbbb
int
mov
clc
ljmp
das
xor
mov
insl
adc
add
inc
push
push
push
lret
rcrb
mov
cs
push
clc
pop
cld
inc
ss
pop
jle
movsl
cmp
add
pusha
dec
lret
push
inc
fwait
cld
and
lret
daa
xor
cmp
cmp
incl
ret
inc
or
mov
jne
add
nop
sbb
adc
outsb
insl
aas
insb
aaa
std
mov
movsb
xlat
ss
adc
jnp
or
xor
jnp
int
cmp
cwtl
sub
inc
xor
push
fcmovu
adc
inc
out
scas
pop
ret
ret
sub
add
or
call
loopne
add
xor
sub
or
adc
loopne
xor
call
faddl
mov
add
adc
pushl
fildll
lods
dec
sbb
mov
mov
mov
push
bound
mov
bound
pop
mov
and
dec
mov
ja
decl
popa
popf
push
and
scas
popa
add
insb
cmovg
push
addr16
pushl
mov
jae
mov
mov
jmp
add
push
mov
roll
out
xchg
cwtl
ljmp
push
cld
mov
ret
loopne
into
ds
dec
and
push
out
cld
loope
pop
adc
repnz
outsb
xchg
pop
push
jp
sub
inc
sete
sub
sbb
mov
jl
insl
es
and
or
mov
sbb
lods
clc
arpl
mov
pushl
outsl
adc
imul
mov
dec
adc
push
iret
pushf
shrb
sub
subb
and
leave
outsb
movb
fwait
push
push
and
or
insl
loop
into
in
hlt
add
dec
mov
jmp
add
mov
sti
push
stos
sbb
ret
movsb
jae
out
roll
dec
add
mov
mov
dec
inc
cmp
pop
mov
mov
das
cli
pop
arpl
and
adc
push
cwtl
repnz
xchg
imul
insb
pusha
aas
or
or
add
pop
cmp
sub
jge
inc
and
xchg
xor
cmp
fcomip
xor
mov
mov
cmc
mov
add
icebp
push
fiadds
jle
push
insl
mov
sbb
fstpt
adc
loope
mov
sbb
mov
mov
ljmp
xor
mov
insl
adc
mov
pop
xchg
push
pusha
pusha
pop
int
pop
cmc
jmp
push
add
fmuls
sub
inc
js
inc
and
xchg
and
pushl
dec
out
inc
je
lods
push
cmc
push
mov
icebp
pop
es
and
andb
sbb
ljmp
out
or
and
or
pop
cmc
lcall
or
xchg
bound
push
or
push
sbb
arpl
ljmp
cwtl
and
push
lea
push
and
push
push
gs
shr
mov
pop
adc
or
push
mov
sarl
and
xchg
call
mov
push
test
or
lds
xor
add
sub
gs
and
jmp
bound
inc
sbb
lret
mov
inc
iret
xchg
cmc
fcom
sbb
adc
loop
sub
adc
pop
mov
lret
dec
mov
pop
jp,pn
mov
test
sbb
and
lahf
pusha
insl
push
out
aaa
cld
add
divb
add
arpl
jg
sub
xor
jecxz
out
dec
sub
mov
pop
rolb
and
outsb
gs
add
dec
xor
cmp
push
sub
sahf
jecxz
out
mov
mov
cmp
call
cmp
cmp
aaa
cmp
sub
xchg
scas
cli
popf
cwtl
or
repnz
loopne
lcall
fcomip
ret
repnz
mov
mov
inc
mov
xchg
push
xlat
xchg
fcmovbe
xor
add
jne
scas
mov
out
ja
daa
fcmovu
lret
mov
adc
data16
inc
jo
push
pop
pusha
jge
cs
push
jmp
out
insb
in
sbb
jg
fcompl
jl
out
push
dec
or
pop
xlat
pusha
sbb
stos
jmp
fsubrs
inc
add
shlb
imul
pop
clc
push
xor
xchg
pusha
xor
orl
daa
fadd
pop
loop
or
mov
test
mov
xchg
movsb
bound
int
xchg
and
and
adc
jmp
jle
and
add
pusha
xor
movl
lock
ljmp
bound
inc
decl
sub
mov
and
inc
dec
das
fstpt
dec
mov
lock
jmp
mov
inc
pop
and
or
inc
insb
lret
addr16
mov
lret
jle
add
idivl
pop
orb
adc
push
fldenv
inc
flds
cmpsb
xchg
adc
outsl
jno
int3
outsl
xchg
je
emms
dec
sbb
int
arpl
into
cld
push
xchg
stc
add
outsl
cltd
das
and
sub
add
scas
xor
pushl
in
or
movsb
insb
xchg
jb
sbb
loop
lds
pop
bound
xor
lcall
or
jg
andb
imul
jg
lcall
je
ss
add
in
sbb
mov
cli
jp
js
iret
ljmp
sub
call
ret
or
mov
out
jb
incl
mov
or
insl
add
mov
cmpsl
fisubl
ljmp
mov
lahf
sub
aad
mov
fiaddl
clc
dec
fiaddl
mov
and
pop
inc
pop
adc
inc
or
call
mov
xor
xor
push
inc
mov
aam
push
mov
imul
loop
jg
jp
mov
mov
loopne
and
in
jg
imul
fistl
je
loope
jg
or
lock
in
fcompl
pop
decb
mov
add
fucom
sub
es
test
es
fisubl
mov
fsubrs
push
cmovno
andb
sbb
scas
mov
lret
imul
imul
push
pop
sub
fcomip
ljmp
sub
icebp
sub
mov
push
sub
xor
mov
movb
mov
pop
mov
xchg
mov
add
ret
pop
and
sti
rorb
into
lock
fwait
push
rclb
into
xchg
mov
mov
xlat
cmp
push
and
sar
decl
pop
inc
push
push
loopne
fldt
data16
outsb
adc
pop
add
sbb
fcoml
pop
lcall
xor
mov
rclb
decl
dec
ja
jne
sbb
xor
rcrb
rcr
pop
push
dec
sbb
loope
push
pushl
mov
mov
je
shll
sti
mov
mov
add
adc
lock
aad
push
jp
sbb
cmp
stos
sbb
stos
pop
fnsave
lock
jns
jge
stos
mov
fcomp
pop
shrl
mov
daa
mov
xor
ja
sub
mov
add
xor
pop
sub
cmpl
js
imul
xor
loope
pop
inc
pavgb
push
movsb
mov
fldenv
jg
cmpsb
add
adc
add
push
stos
inc
add
repnz
sar
fcmovnbe
jp
lret
sbb
push
mov
jl
and
or
mov
fs
stos
lea
stc
lcall
cmpsl
hlt
ljmp
fs
pop
mov
mov
icebp
imul
decl
mov
inc
or
les
or
mov
sbb
dec
aam
hlt
pop
xor
in
sub
dec
sub
or
dec
and
imul
pop
hlt
add
mov
flds
ss
xor
clc
in
inc
ficompl
fcmovbe
push
and
dec
or
mov
pop
outsl
xchg
repnz
xor
outsl
clc
jmp
jno
mov
push
mov
cld
inc
dec
movb
lods
push
stos
xor
incl
or
jne
aaa
out
push
mov
bound
pop
dec
add
dec
lahf
sarb
jbe
shl
ss
xchg
int
jl
jae
jns
xchg
add
fcompl
lcall
sahf
xchg
mull
xor
filds
sub
pop
adc
mov
sub
push
inc
ljmp
arpl
shl
lds
jnp
add
push
aaa
pop
sbb
inc
mov
icebp
pushl
xor
cmpl
mov
jae
lret
push
jmp
stos
popf
cmp
xlat
cmpb
cmp
in
push
cmc
mov
push
lock
ss
lds
mov
and
add
decl
pop
in
jg
lret
xchg
sbb
sbb
push
fs
shll
mov
add
enter
incl
xchg
adc
sti
fs
shrb
push
jg
add
inc
pop
lahf
push
xor
mov
sti
in
stos
inc
and
mov
nop
xchg
pop
int3
mov
mov
fstps
addr16
ja
repz
dec
scas
mov
jnp
loopne
sub
popf
inc
addr16
or
add
fdivr
decl
ret
mov
xchg
jnp
fmull
mov
dec
mov
adc
leave
testl
push
xlat
outsl
rcr
and
mov
push
or
pop
insl
or
jle
ret
in
mov
add
loop
inc
push
popf
mov
sub
adcl
lcall
sbb
sbb
cmpsb
or
icebp
add
mov
imul
std
decl
or
in
bound
xor
movsb
out
ret
cmp
sbb
int3
dec
jecxz
lcall
pop
mov
aad
or
dec
xchg
ss
lret
push
movsl
push
cltd
push
dec
mov
cmp
stos
jbe
cmp
incl
mov
fdivs
lret
push
ret
cmc
mov
inc
fnstenv
xlat
scas
pop
mov
loope
out
sbb
sbb
cmp
pop
enter
loopne
nop
ret
pop
lret
divl
xchg
sub
js
lea
sub
imul
mov
xchg
or
lock
ljmp
out
or
fidivrl
jnp
lods
js
es
stos
ss
lods
call
add
pop
mov
sbb
jl
jmp
add
aaa
ret
fdivr
loopne
jne
ja
ds
pop
fs
and
inc
xchg
pop
pop
inc
push
adc
inc
mov
call
ret
adc
add
nop
addl
ljmp
popa
jno
pop
dec
pushf
adc
push
scas
jl
pop
mov
mov
pop
pop
mov
pop
mov
mov
rolb
lea
sub
pop
nop
jmp
push
inc
xchg
outsb
mov
mov
sbb
jo
xchg
ljmp
es
xchg
jecxz
sbb
mov
sahf
aaa
gs
daa
adc
loop
mov
jne
andb
add
cli
out
and
lock
fwait
rcr
xor
xchg
dec
jb
std
incl
ror
in
out
jns
shlb
lret
mov
mov
push
mov
or
sahf
xor
inc
dec
jp
mov
mov
inc
aam
cmp
xchg
aam
movsl
sahf
sub
pop
clc
jecxz
adc
mov
mov
aaa
dec
cmpsb
xor
and
cmp
incl
ret
clc
or
fs
or
mov
mov
clc
jg
mov
roll
sbb
les
push
adc
je
mov
adc
inc
lods
out
mov
mov
mov
or
dec
les
adc
orl
lcall
cmpsb
and
cmc
outsl
mov
rorb
ret
push
call
adc
mov
push
imul
push
pop
imul
push
outsl
or
pop
jbe
dec
mov
jmp
mov
cmc
dec
mov
add
push
leave
mov
lret
in
push
iret
je
pushl
outsl
pop
mov
pop
shll
adc
out
insb
mov
mov
movsb
decl
adc
test
or
xchg
pop
test
sub
add
or
mov
das
clc
cmp
pusha
fsubrl
rcrb
or
sbb
popf
sbb
pop
add
ja
and
incl
aam
add
jb
push
sahf
push
or
pushf
add
mov
pop
loopne
jo
push
sbb
mov
jmp
xchg
popf
fcompl
arpl
or
xorl
cmc
xlat
lds
cmp
xchg
push
xor
fcomps
in
ljmp
js
orl
adc
call
inc
lock
and
mov
mov
jecxz
loop
mov
nop
in
sub
aam
dec
or
xchg
daa
insb
out
lcall
aaa
fisttps
ljmp
ret
mov
add
lcall
loope
cmc
jo
sub
lcall
ja
xchg
mov
and
push
add
adc
jb
add
sub
adc
pop
add
aaa
cmp
dec
pop
ljmp
movsb
clc
ljmp
xor
scas
xchg
adc
push
in
jp
sbb
mov
or
incl
fadds
push
xor
data16
sbb
clc
adc
sub
xor
add
mov
or
enter
xor
adc
incl
jo
xchg
pop
inc
xchg
jns
and
lcall
loopne
sub
pop
push
cmp
mov
push
ret
loopne
mov
adc
lcall
call
in
adc
sbb
push
xchg
mov
push
rolb
pop
icebp
inc
fadds
arpl
dec
cmpsl
mov
or
addr16
and
hlt
pusha
arpl
dec
movsl
aad
jae
pushl
xor
leave
mov
xor
nop
dec
insb
pop
mov
push
or
fiaddl
cmp
xchg
std
outsb
cmovbe
out
sub
dec
decl
cmp
loopne
out
rolb
ja
add
pop
pop
inc
fistpll
sbb
sub
incl
xchg
roll
rol
sbb
cli
orb
clc
lcall
pop
pop
out
aas
xchg
pop
into
or
inc
mov
adc
inc
test
ljmp
or
pop
in
jmp
test
punpckldq
andl
xchg
jp
inc
daa
push
xchg
push
push
out
sbb
cld
enter
pop
lock
in
sub
call
or
cld
cmp
inc
js
xor
inc
or
and
jg
xchg
dec
push
push
dec
mov
push
adc
add
jge
add
rcrl
rorl
dec
mov
scas
fwait
insl
nop
inc
xchg
jo
std
lcall
or
pop
adc
adc
fs
xchg
push
jne
inc
pop
stos
pop
add
aam
xchg
rclb
xchg
aas
jmp
or
int3
rolb
rolb
orl
mov
sbbl
xor
fbld
ja
clc
roll
mov
push
nop
insb
insb
inc
or
cmp
mov
lds
xchg
pop
push
subl
nop
push
xor
xlat
incl
pusha
adc
mov
jno
mov
fsubs
out
enter
insb
cmpsl
filds
dec
or
adc
std
shll
mov
push
pop
data16
pushl
mov
lds
cs
pop
add
jl
es
xchg
xchg
lds
addb
incl
enter
and
int3
sub
cld
lret
xor
pop
dec
mov
decl
and
jmp
mov
dec
and
mov
lret
or
sub
jnp
mov
and
imul
push
and
nop
add
test
pushl
inc
xlat
or
jo
pop
dec
inc
xorb
je
mov
ljmp
jmp
pop
lret
inc
pushf
dec
add
clc
push
enter
js
sbb
mov
test
out
add
sub
or
fistl
cmp
pop
popf
and
push
loope
mov
lcall
adc
shr
inc
sbb
push
cmp
and
mov
add
mov
in
data16
and
cmpsb
cmp
scas
call
cmpsl
sub
xchg
push
mov
jne
dec
xchg
test
test
lock
jl
rorb
aam
or
jno
cmp
fstp
loopne
sarl
push
dec
jnp
sbbl
or
push
add
sbbb
into
sahf
sbb
aaa
arpl
sub
outsb
incl
rcll
mov
adc
jnp
add
scas
jns
loope
cmp
test
fldenv
cmpsl
dec
xor
pop
fs
rclb
pop
lret
cmp
cwtl
shrb
icebp
mov
es
js
imul
or
mov
loop
add
cmp
jl
cmp
mov
mov
or
loopne
cs
mov
inc
jbe
push
sbb
mov
jecxz
aas
add
lret
push
cli
es
pop
mov
sbb
mov
and
fidivrs
inc
popl
jp
test
sub
add
jmp
mov
sub
mov
xchg
jle
mov
cmpsl
sbb
or
lahf
xchg
adcb
mov
decl
sbb
pop
sbb
mov
stos
pop
sbb
mov
out
outsb
cmpsl
sti
jg
mov
out
xchg
dec
xchg
jo
cmp
jmp
xor
add
stos
gs
enter
pop
mov
add
lret
pop
pushl
shrb
clc
add
mov
addb
sti
ret
enter
rolb
xor
sbbl
add
adc
jae
xchg
sbb
mov
inc
les
ds
mov
xchg
push
push
ljmp
or
push
xor
enter
pop
hlt
lcall
imul
aad
inc
loopne
xor
jecxz
aam
mov
add
xchg
cwtl
pop
add
xchg
or
sbb
daa
clc
xor
fcmovb
jmp
imul
fldl
push
and
add
pushl
out
and
mov
jne
push
dec
and
mulb
jne
test
or
orb
sub
pop
xchg
push
and
es
sub
stc
xor
movsb
adc
xor
incl
rolb
mov
inc
sbb
add
icebp
outsl
shl
push
aaa
sub
xchg
sub
hlt
jo
xor
sti
jmp
pop
or
sub
daa
test
aam
adc
sub
xlat
pushl
add
push
pop
xor
lret
adc
ja
aas
adc
mov
sub
arpl
inc
daa
dec
push
andl
rcll
push
daa
popa
stc
cmc
pop
mull
xor
pusha
mov
xor
xor
xor
addr16
ljmp
jbe
rcrl
xchg
sub
ret
pop
xchg
rcll
pop
nop
ja
clc
jbe
inc
ja
rolb
jns
cmp
mov
mov
sbb
ret
mov
add
pop
pop
dec
mov
lcall
push
loope
add
adc
pop
lods
xor
cs
lods
imul
jno
push
jae
push
loopne
dec
adc
call
pop
shrl
sar
add
mov
outsl
in
mov
mov
lds
add
ss
cmp
enter
mov
and
cld
jg
adc
jge
gs
push
adc
push
jno
roll
and
adc
decl
aam
aaa
inc
imul
mov
shl
lahf
call
pop
push
daa
in
xchg
push
ficoms
std
cmpsl
and
jne,pt
xchg
sbb
add
insb
mov
lods
push
call
clc
roll
xor
test
mov
pushl
ret
pushw
loop
sbb
andb
cmpl
mov
call
adc
test
daa
in
pop
pop
push
aaa
xlat
jg
punpcklwd
adc
les
rcrl
add
inc
test
xchg
xchg
jns
cmp
xchg
sub
adc
push
fs
dec
mov
mov
or
pop
icebp
call
add
add
inc
pop
push
xor
adc
sqrtps
adc
ret
add
nop
push
outsb
call
loopne
xor
jo
fsubrs
popa
inc
push
mov
jae
fsubr
adc
pop
addl
mov
sbb
mov
insb
adc
leave
pop
push
in
mov
add
mov
sbb
jbe
jae
test
loop
movsb
or
jbe
mov
das
mov
mov
stos
mov
push
or
push
nop
push
aaa
scas
mov
xor
ss
icebp
mov
pop
icebp
jmp
enter
adc
cwtl
in
mov
cmp
ss
sar
lea
sub
adc
cwtl
pop
in
js
mov
call
roll
and
sbb
lods
inc
popl
test
pop
and
lods
jae
mov
js
pop
pusha
adc
push
xchg
imul
mov
add
jmp
push
push
jne
shl
fists
and
push
in
ret
push
push
push
shlb
mov
pop
clc
jmp
xor
nop
fidivs
sbb
xor
add
call
mov
hlt
inc
fadd
sub
and
sbb
add
pop
popa
adc
or
push
ss
pop
and
or
lcall
aam
mov
xchg
cmpsl
mov
xchg
jg
ja
push
adc
xchg
in
movsb
pop
dec
addl
xchg
in
mov
in
sbb
inc
pop
push
in
movsl
adc
mov
inc
ljmp
xor
notl
inc
fs
out
jo
repz
xlat
nop
test
ljmp
icebp
ljmp
inc
pop
add
test
add
addb
je
sbb
push
fnstcw
push
inc
clc
jb
sbb
addr16
dec
xchg
cmp
xchg
pop
mov
je
cmp
pop
xchg
add
incl
sbb
fwait
imul
xor
fwait
inc
ret
mov
xor
call
xor
push
pusha
les
daa
lods
mov
pop
icebp
jo
pushf
jne
cmc
fidivl
sub
add
loope
xlat
icebp
add
add
sub
jecxz
pop
sbb
ljmp
cs
push
jmp
adc
add
add
mov
rorl
int
jo
mov
xchg
jnp
inc
lahf
sub
and
mov
sbb
cmp
adc
dec
loope
repnz
push
sub
jl
mulb
xchg
add
sbb
xchg
addr16
adc
pop
mov
lcall
imul
and
ret
fnsave
lcall
adc
lcall
pop
jb
in
push
push
xchg
mov
add
mov
enter
jbe
cmp
incl
clc
xor
es
ret
shll
and
decl
and
mov
leave
push
cmp
repnz
daa
push
sub
adc
in
cmpsb
jge
xorb
dec
imul
mov
inc
xchg
lret
cmpsl
xchg
sti
cmpsb
faddl
loop
cmp
and
add
test
push
das
popf
adc
cld
outsl
sbb
jo
je
pop
push
test
out
mov
js
nop
sub
outsb
sub
sub
xor
vmovupd
mov
add
mov
pop
add
or
xchg
loope
adc
aam
push
add
add
add
push
sub
mov
jbe
je
mov
scas
les
decl
sbb
adc
mov
aam
mov
outsb
inc
clc
pushl
dec
lods
stos
jno
movb
ljmp
pop
pushf
fcoms
outsb
addr16
imul
popf
jp
jmp
shrl
mov
icebp
pusha
add
shll
fwait
incb
call
arpl
pop
push
call
push
adc
cmp
ljmp
loop
arpl
xchg
hlt
cmp
lcall
clc
cs
pop
lea
mov
dec
aaa
stos
jnp
xchg
and
cmp
lds
mov
cmp
cmp
push
cmp
sbb
cmp
push
ds
dec
adc
fs
push
jle
ret
sub
loop
inc
xchg
xchg
inc
xchg
dec
dec
add
std
idivl
push
push
sub
jmp
rolb
sbb
loopne
stos
inc
and
out
leave
jecxz
xchg
data16
mov
jge
and
xor
and
mov
push
and
push
mov
or
jmp
xor
jle
orl
sub
xchg
cltd
or
in
inc
fdivl
or
inc
and
cmp
push
sbb
mov
dec
jmp
mov
dec
sarl
or
sar
push
test
hlt
stos
rcl
mov
adc
ficomps
add
mov
jmp
ret
inc
or
rorb
add
stos
ret
in
adc
lock
int
lret
adc
sti
mov
push
jo
stos
and
clc
lcall
mov
jl
inc
repnz
lcall
jmp
fwait
mov
push
jne
push
pop
divl
mov
js
pushf
cmp
pop
mov
decb
xchg
push
test
xor
scas
loop
pushf
iret
xor
push
call
xor
mov
cli
pushf
push
jl
jg
insl
mov
add
std
lcall
add
fcmovnb
sub
mov
pusha
decl
ret
dec
or
and
cmp
mov
push
cmp
mov
insl
negb
xor
pop
mov
adc
jbe
pop
cmp
ljmp
adc
mulb
in
add
mov
add
dec
dec
gs
mov
xor
cmp
out
mov
jne
std
out
fadd
add
add
ljmp
lods
aam
xchg
enter
jecxz
sbb
xor
mov
call
clc
and
push
and
dec
mov
test
sub
jmp
fs
push
shll
sbb
add
add
sub
sub
dec
add
mov
movsl
cmpsl
inc
loopne
out
push
lods
fwait
sub
int3
fdivr
aaa
loop
mov
pushl
jb
addb
and
call
xchg
xor
mov
jmp
movups
inc
mov
cwtl
or
sub
or
into
and
pop
fcmovnu
scas
adc
decl
pop
or
nop
add
mov
add
xchg
popa
adc
pop
or
outsl
cli
sti
dec
stos
cli
pop
pop
push
mov
xor
sub
outsb
test
cmp
adc
push
xchg
in
sbb
adc
pop
subb
add
sbb
rcr
sbb
sbb
xchg
and
cmp
mov
ljmp
ss
lcall
sub
adc
mov
push
jg
push
shll
jle
jbe
pop
scas
or
rcrl
jbe
mov
jg
mov
imul
adc
clc
fistps
jmp
push
xor
mov
je
push
insl
aad
loop
lods
jb
push
or
insb
dec
lds
inc
cmpsb
jl
sbb
int
incb
cmp
daa
mov
movsb
ja
sbb
fsubl
test
cmp
push
imul
sbb
adc
push
jbe
sub
add
jmp
enter
add
cmp
cld
adc
clc
jmp
xor
push
iret
inc
fimull
test
outsb
xor
ficoml
xor
test
shrl
push
and
roll
sti
pop
stc
mov
jae
xchg
and
inc
push
push
fiaddl
inc
jae
and
lcall
out
daa
mov
ljmp
jl
cmpsb
adc
lds
and
lret
insb
mov
ljmp
inc
pop
mov
xor
dec
nop
adc
jb
ret
sbb
call
mov
leave
ret
hlt
into
adc
push
inc
pop
xor
mov
inc
stos
or
ficomps
sahf
loope
in
icebp
mov
pop
push
dec
ljmp
call
cmp
inc
std
jae
xor
into
xchg
dec
in
mov
sbb
jecxz
idiv
jne
into
rcrl
rcll
jmp
push
cs
cli
scas
out
sbb
cmpsb
pushf
sahf
push
mov
cld
pushf
je
popf
outsl
mov
pop
add
inc
cmp
fnsave
aam
add
sub
sub
mov
jle
ja
dec
clc
lds
loop
mov
inc
fcomip
sub
imul
sub
lea
dec
jno
mov
lcall
mov
adc
mulb
and
mov
add
pop
and
ljmp
push
and
mov
jmp
push
sub
pop
in
daa
jp
lret
andl
jo
aam
scas
xchg
mov
out
mov
outsl
cli
ljmp
mov
and
or
xor
add
jns
cli
les
lds
and
ljmp
mov
add
in
jnp
inc
inc
roll
loop
jmp
mov
mov
cmp
cmp
repnz
mov
leave
cmp
jp
sub
xchg
or
call
movsb
add
fisttpl
cmp
movsl
into
out
cli
inc
xchg
sub
push
loopne
outsb
add
loop
and
cld
or
fildll
or
sti
cs
dec
pop
ds
fyl2x
repnz
xchg
sub
pop
mov
cwtl
adc
xchg
shlb
push
in
pop
sbb
adc
into
xchg
es
shlb
pop
mov
lods
xchg
insb
xor
jne
lods
xchg
dec
mov
sbb
movsb
and
jg
icebp
mov
ret
movsb
in
rcr
test
arpl
sub
inc
nop
mov
les
shlb
rcl
jg
xor
push
jp
dec
cmp
lods
pop
nop
and
fs
pushl
xchg
jl
push
std
jnp
mov
imul
pushf
aaa
jg
inc
mov
call
lods
lcall
pop
sti
jbe
fnsave
mov
js
cmc
cwtl
scas
xchg
ds
icebp
pop
sahf
das
call
jno
cmp
test
push
jb
notl
hlt
inc
or
hlt
lock
fists
add
inc
and
xor
cmp
pop
pop
fcom
lahf
or
add
incl
test
dec
inc
xor
pop
jno
cld
fcomip
pop
inc
push
sub
movsb
mov
sbb
cmp
sbb
aam
inc
adc
jecxz
and
push
dec
sbb
loop
cmp
jb
and
sub
movsl
lea
push
add
les
pusha
ret
add
sbb
lea
call
test
mov
pop
adc
sbb
cmp
or
lret
sub
cmp
dec
ss
pop
imul
lods
fdivl
sub
decl
add
shll
jb
sub
call
pop
push
cwtl
repnz
dec
mov
sbb
call
mov
add
sbb
jne
enter
xor
and
lods
push
adc
insb
mov
and
add
dec
aad
in
sbb
and
push
mov
lret
mov
pop
xor
fildll
xor
pop
push
mov
mov
mov
inc
addb
subl
testb
lock
sar
jmp
jo
loopne
adc
jb
xchg
cltd
je
mov
clc
mov
aas
push
push
pop
lahf
lcall
mov
xor
xchg
or
decl
mov
sub
es
sub
iret
and
cmpsl
movsb
lcall
inc
scas
imulb
cs
or
repnz
arpl
adc
incl
ret
sbb
lret
mov
into
xor
and
insl
xor
cmp
dec
pop
add
insl
fisubl
xchg
sbb
sar
loop
stos
inc
mov
mov
mov
ljmp
cs
ljmp
ja
adc
mov
pushf
mov
xor
or
ljmp
into
mov
shl
repz
aas
sub
pop
ret
rorl
pushl
xor
sub
mov
push
or
pushf
rolb
jg
popa
inc
or
mov
mov
inc
push
dec
js
push
imul
incl
dec
sub
xorb
hlt
gs
data16
repz
jge
into
cmp
xorb
inc
mov
inc
lahf
into
cmp
fdivr
push
cmpb
movsl
xor
add
lcall
dec
cmpsb
stos
inc
xchg
cs
pop
push
add
cmp
xor
dec
push
add
dec
jp
ljmp
scas
jl
insl
mov
pop
pusha
xor
les
xor
sub
mov
mov
pop
push
dec
decl
sahf
scas
mov
dec
jl
mov
jmp
add
imul
enter
cmp
ret
ret
adc
adc
loopne
scas
call
push
cmpsb
pop
and
and
jae
dec
sbb
xchg
ljmp
les
cmp
push
sub
sbb
test
ljmp
lret
push
lret
cmp
roll
pop
xchg
adc
popf
lods
lret
lret
jg
pop
cmc
xchg
sahf
pop
insb
out
sbbb
lret
push
xor
lcall
xorb
es
call
push
xor
inc
adc
sbb
out
pushf
insb
and
sbb
or
fsubl
int
and
push
cmp
jmp
sbb
and
lock
pop
fwait
jge
dec
fidivrs
test
sbb
mov
inc
push
jb
and
les
push
lret
xchg
pop
leave
clc
aaa
std
add
push
mov
imul
jl
ds
push
js
inc
cs
push
sbbb
jg
push
mov
mov
inc
orb
mov
fcmovnb
dec
push
inc
xchg
roll
lods
sub
sbb
daa
loopne
inc
aad
shl
pusha
movsb
and
dec
cmp
jmp
dec
cmp
sahf
negb
orl
call
pop
dec
cld
add
push
dec
sar
mov
dec
push
mov
jb
sub
inc
xchg
inc
pushl
or
pop
cmp
mov
push
test
jge
dec
imul
call
movsl
pop
and
mov
mov
push
leave
mov
adc
xchg
test
nop
adc
pop
add
pusha
jge
push
mov
xchg
arpl
or
jp
pop
push
mov
inc
pop
or
call
movb
inc
outsb
dec
jno
dec
dec
mov
call
cs
pop
push
mov
xchg
dec
mov
mov
sub
and
pushl
push
nop
adc
xor
inc
popa
push
jo
sbb
xor
sub
pop
add
jl
nop
xchg
inc
dec
es
call
mov
test
sbb
inc
cmpl
sub
dec
cmp
call
push
ss
loope
insl
jno
xor
ret
bound
ljmp
mov
sbb
rep
stos
sbb
xor
jmp
sub
andl
ficoms
aaa
pop
pushf
and
ja
aam
lods
test
jne
out
fcmovnu
dec
call
in
push
mov
mov
popf
jmp
daa
jbe
inc
mov
out
fmul
in
ljmp
push
out
cmp
jnp
out
jecxz
cli
cld
push
mov
mov
out
add
xchg
inc
inc
lods
push
mov
mov
sbb
sub
cmp
mov
ljmp
or
pop
push
lcall
call
dec
pop
or
clc
ljmp
xchg
shlb
je
aam
int3
pop
sarb
leave
sar
or
dec
movsb
cltd
cwtl
stos
add
in
iret
cmp
and
xor
cli
jg
ss
aas
fadds
dec
jmp
rolb
ljmp
push
push
cmpsb
clc
in
and
cmpsb
ret
jb
sub
rcl
in
out
mov
loopne
push
pop
call
test
mov
cs
push
cwtl
cmp
xchg
adc
mov
inc
inc
xlat
decl
addr16
mov
cmp
pop
pushf
cmp
lds
push
inc
add
fstpl
es
test
shll
adc
mov
and
mov
cltd
dec
dec
mov
mov
cmp
push
movsb
dec
lahf
je
add
sbb
cmp
adc
addl
xchg
add
pushf
sbb
and
call
insl
incl
push
test
mov
adc
add
es
mov
adc
cmp
push
cmp
add
movsl
mov
mov
pop
out
imul
popa
mov
xchg
insb
mov
xchg
cmp
push
inc
cmpsb
xchg
sbb
xor
out
adc
mov
mov
push
pushf
stc
dec
pop
fidivrs
js
mov
jbe
int3
popf
lock
mov
xchg
push
sbb
mov
adc
incl
mov
je
xor
add
push
add
and
or
insb
cli
lcall
repz
lcall
repz
cmp
movsl
repz
int3
sbb
mov
mov
cwtl
sub
jg
mov
sbb
dec
gs
les
push
sub
adc
adc
pop
push
gs
daa
sub
mov
xlat
pushf
push
adc
ljmp
push
cltd
aad
decl
mov
pop
loope
pop
xor
popf
sti
jp
xor
push
decl
xor
cs
jle
push
xor
xchg
insl
xchg
jmp
inc
sub
call
cmp
mov
mov
or
or
sbb
aaa
xlat
xor
jg
pop
or
xchg
push
ljmp
cmpb
mov
lods
pop
add
jo
push
adc
jp
xchg
sbb
sub
lcall
inc
jmp
jno
mov
cltd
mov
sarl
cs
sbb
andb
lret
ljmp
sbb
daa
lock
push
push
mov
lea
push
bound
test
or
ja
rolb
and
or
mov
jmp
adc
icebp
lcall
addr16
adc
js
dec
mov
add
sub
mov
sbb
ficoms
lcall
adc
mov
dec
movsb
inc
dec
lods
cmp
mov
sbb
ud0
in
xchg
jg
cmp
push
sbb
sub
sub
das
cwtl
popf
push
lods
lcall
pushl
das
lock
lret
mov
xchg
into
or
pop
dec
xchg
out
lcall
call
lods
xor
jl
popa
test
rcll
sar
mov
incl
cmp
xor
call
cmp
mov
fsubs
call
mov
ss
add
clc
aas
push
adcl
adc
sub
mov
jg
inc
cli
xchg
scas
ficoml
sbb
xchg
sbb
pushl
or
adc
and
cmp
clc
dec
lods
pop
pop
inc
stc
sbb
push
mov
subl
hlt
and
js
enter
out
cli
jnp
call
adc
xchg
fwait
insb
andl
mov
incl
cld
sbb
xor
iret
and
fbld
lret
xor
and
push
add
sub
push
cld
sub
fwait
mov
mov
lock
and
sarb
pusha
cli
add
pushf
mov
and
mov
fcomps
cmp
scas
mov
sbb
movsb
xchg
mov
das
rorb
adc
add
mov
lahf
mov
xchg
ljmp
sub
pusha
mov
inc
or
sbb
pop
ficoml
lods
mov
js
cmpb
stos
mov
add
inc
xor
jo
inc
or
jp
mov
mov
pushl
add
push
jnp
dec
pushf
mov
xchg
inc
filds
push
in
mov
hlt
cmp
xorl
mov
mov
test
lds
nop
add
test
fnstcw
push
push
add
xchg
nop
mov
sub
cld
dec
adc
and
repz
adc
test
loop
mov
jo
sbb
or
inc
fcomip
out
mov
add
and
lret
repnz
inc
pop
stos
inc
xor
adc
xor
incl
cmp
je
mov
stos
dec
mov
pushf
mov
pop
hlt
pop
outsb
mov
fldcw
or
add
sub
push
push
adc
aaa
inc
rclb
sbb
xor
lods
mov
lds
sub
cltd
mov
imul
call
inc
ljmp
jg
jmp
jne
rcll
mov
lcall
ffreep
add
sbb
mov
inc
aaa
xchg
or
cmp
cmp
xorb
xchg
mov
mov
pushf
mov
xchg
clc
push
sbb
rcrb
sbb
mov
outsl
add
sbb
nop
jmp
popf
pushl
jg
loop
movsl
adc
mov
test
and
pop
mov
sub
and
incl
add
add
or
ss
add
movl
pushl
rcrb
cld
mov
pop
xchg
lahf
movsb
ljmp
dec
rcl
aad
push
xchg
cmp
inc
cmpsb
cmp
rorl
jmp
push
fs
fcomip
movsb
mov
mov
es
and
loope
sbb
shlb
lcall
cmp
sbb
aam
js
adc
je
in
fcompl
or
mov
mov
insb
push
pusha
in
mov
add
out
iret
adc
sbb
cld
rorb
add
aam
xchg
sbb
imul
decl
lock
push
push
arpl
sbb
mov
push
dec
loope
icebp
push
push
push
adc
leave
adc
sub
and
pop
sar
ljmp
xchg
and
pop
adc
repnz
scas
xor
adcb
and
insb
push
scas
call
dec
xchg
mov
mov
aad
sub
lods
call
mov
out
and
enter
cmp
addr16
cmp
sub
mov
adc
jns
pushl
std
add
mov
mov
test
popf
sbb
fsubr
stos
ljmp
add
mov
jp
mov
fisubl
shrb
sbb
mov
jno
cmp
lret
scas
popf
js
dec
dec
mov
mov
movsb
cmp
pop
insb
ljmp
mov
cmp
ljmp
or
or
fisttpll
and
jmp
loopne
mov
jno
popf
mov
inc
sbb
sub
pushl
mov
aaa
jne
xchg
enter
xor
push
rcrb
fcoml
enter
xchg
sar
ljmp
loope
mov
add
pop
dec
icebp
sbb
imul
call
mov
icebp
jge
repnz
cmpsl
dec
and
dec
sub
or
shl
stc
push
std
mov
ret
sub
subl
test
mov
cmpsb
decl
jo
mov
aas
ret
leave
mov
xchg
jg
nop
sub
cmpsb
loopne
lds
or
cmp
andl
jmp
push
mov
loopne,pt
xor
xor
adc
push
call
sub
pop
sub
mov
decb
push
test
sti
mov
adc
dec
sbb
add
xchg
cmc
xchg
pop
jp
push
ret
loope
xor
icebp
pop
sbb
ds
mov
sbb
add
addb
sbb
cli
ret
or
pop
mov
add
arpl
fldl
ret
call
or
shlb
cmc
pusha
gs
jp
sub
xchg
xchg
in
fcmovne
mov
mov
add
add
push
mov
xor
or
lcall
adc
loopne
shll
xchg
shll
jmp
sub
mov
xchg
fiaddl
add
call
sub
jo
scas
push
sbb
scas
in
pop
test
rclb
inc
popf
andl
or
add
mov
and
add
incl
in
sub
test
std
lcall
lcall
jg
lcall
inc
sbb
rcl
push
test
aad
add
stos
dec
adc
cmp
jae
or
popa
or
pop
push
mov
jp
inc
test
filds
fadd
lcall
dec
dec
fildll
dec
mov
or
or
cmp
jo
aad
test
add
add
inc
or
nop
call
push
mov
or
add
jno
aaa
scas
push
sub
imul
jmp
cmp
xchg
pop
push
xchg
sbb
inc
jns
add
sub
add
mov
shrl
std
xchg
lcall
mov
inc
push
popa
xchg
xchg
test
js
out
loopne
jns
or
loope
lods
cmp
jge
ret
cmp
push
call
ret
cli
and
jecxz
scas
enter
cmpsb
xchg
mov
jmp
pushf
je
xlat
ret
inc
sub
add
popa
push
pushl
cld
out
in
cmp
lret
rol
mov
inc
xchg
out
daa
dec
subb
pop
cmpl
pop
cld
pushl
ret
pop
lods
shll
xor
jp
mov
add
andb
xchg
mov
rcrl
dec
push
jmp
inc
subb
adc
fdivl
addb
add
and
fmull
mov
jle
dec
jmp
mov
adc
lock
sbb
jg
mov
addb
push
xchg
shlb
jnp
enter
pop
inc
sar
xor
sbb
je
add
sub
pushf
lahf
sub
push
push
mov
nop
pop
loopne
pop
ljmp
add
repz
fs
dec
sbb
hlt
cmp
mov
or
call
sub
dec
ja
jp
cmp
call
push
sub
and
lods
adc
jp
nop
mov
shll
xchg
popf
sub
push
push
mov
loopne
jle
fwait
les
push
xor
mov
dec
adc
ret
add
lock
dec
insb
std
add
add
adc
jb
dec
pop
adc
addr16
iret
dec
mov
test
add
xchg
leave
and
jns
sub
in
adc
mov
jg
lret
add
leave
add
cmp
mov
dec
cs
lcall
or
or
and
andb
ret
rcl
mov
outsb
imul
leave
or
jmp
xor
pop
dec
adc
ficomps
add
mov
mov
dec
js
insl
sub
testl
sbb
push
out
push
cli
decl
lcall
shll
rcrb
dec
dec
leave
push
mov
cwtl
add
call
js
cli
jne
xchg
in
xchg
cmp
call
in
rolb
adc
cs
out
aam
fsub
rcr
inc
sbb
push
out
jb
push
fisttps
push
jnp
lods
pop
cmp
cmc
jbe
sub
imul
mov
mov
adc
cwtl
sbb
repnz
xchg
lcall
push
pop
rcrl
pop
stos
push
push
std
pushl
jp
mov
mov
jo
xor
add
adcb
inc
in
mov
add
jmp
dec
call
in
pushf
out
bswap
orl
push
test
cmp
pop
add
imul
jns
push
dec
add
test
xchg
jg
lcall
mov
sbb
adc
mov
dec
pushf
outsl
cltd
lcall
jecxz
mov
or
repz
and
aas
aam
and
mov
jmp
pusha
mov
sbbl
pushl
dec
sbb
icebp
and
bound
stos
push
mov
push
imul
sub
lret
sub
in
sbb
dec
enter
add
js
mov
pop
lock
adc
rcrl
xor
lods
mov
dec
xchg
idiv
cmp
cltd
in
decl
lods
and
mov
decl
inc
inc
fsts
dec
jo
test
insb
jmp
sub
xor
in
into
loopne
aam
jne
sbb
cmp
call
es
jl
clc
outsl
test
xor
inc
insl
out
and
insb
nop
xchg
and
sbbb
rorb
add
scas
in
lahf
test
add
or
decl
and
pop
ss
dec
out
mov
fstpl
les
pop
lock
popf
es
test
inc
inc
sub
incl
daa
pop
sahf
mov
xor
inc
jle,pt
pusha
arpl
test
jmp
cs
ficompl
and
ret
pop
dec
fidivrl
add
outsb
jle
stc
stc
repz
aaa
les
mov
aaa
jg
sti
aaa
pop
lock
enter
ljmp
mov
in
or
sub
mov
lret
mov
fnstenv
sti
imulb
mov
fildl
out
js
bound
jl
mov
adc
push
pop
xlat
in
sbb
mov
das
fdivrp
lcall
mov
pop
xchg
movsl
jns
out
mov
js
adc
mov
cmp
aam
dec
mov
cmp
std
jg
loope
mov
push
fcmovnb
or
mov
xchg
pop
js
test
push
inc
jns
out
or
xchg
lea
inc
ljmp
sti
sub
or
lcall
pop
rol
mov
je
jg
sahf
lcall
mov
aam
out
mov
jmp
loopne
push
push
test
add
fcoms
or
test
sarb
sbb
inc
push
fdivp
mov
mov
xchg
aam
dec
sub
pop
mov
sbb
inc
push
or
in
aaa
inc
push
push
dec
pop
call
shlb
mov
movsb
xchg
cmp
pushl
movsb
cs
gs
aaa
mov
xchg
dec
inc
test
sbb
out
fildl
lock
xchg
push
inc
xor
adc
add
add
and
mov
imul
add
rolb
xchg
jo
call
sub
xchg
sbb
jg
sbb
sbb
sbb
sbb
out
sahf
je
test
mov
xchg
cmp
cmpl
jmp
lock
stos
minps
inc
test
decl
push
adc
inc
notb
arpl
or
xor
add
fs
and
clc
decl
into
add
insb
flds
std
pop
or
lea
ror
mov
inc
filds
mov
or
inc
imul
mov
test
aas
pop
sub
dec
ss
mov
ljmp
cmp
hlt
sub
fldl
dec
mov
lock
pushf
mov
and
imul
adc
pop
adcb
decl
pop
imul
mov
add
lcall
pop
into
testb
jg
gs
pop
xchg
or
xlat
pop
outsl
xor
sub
pop
imul
push
adc
jg
in
or
shll
adcl
xchg
aad
inc
cmp
or
call
push
xor
shlb
aaa
push
push
fidivrl
inc
fucomip
loope
inc
mov
in
jge
mov
push
add
or
icebp
sahf
jge
pusha
rorb
push
cmp
push
jecxz
mov
mov
test
rolb
adc
jl
dec
mov
xor
add
in
xchg
test
adc
cmp
fbstp
jns
sbb
add
movsb
repnz
cmpsb
lret
cmp
adc
lcall
sbb
cmc
push
push
nop
shrb
or
xchg
popf
pop
jns
in
call
je
addb
daa
inc
jg
xchg
jmp
scas
cmpsl
pushf
jp
imul
out
mov
inc
clc
cld
loopne
getsec
call
dec
or
jecxz
add
mov
xor
stc
sbb
roll
jae
fs
lcall
aad
push
ret
mov
decl
add
mov
push
mov
in
mov
push
pop
mov
lods
addr16
lret
xchg
lret
inc
sub
pop
push
inc
inc
pop
loopne
pop
sbb
push
xor
or
jecxz
or
mov
ljmp
hlt
push
xor
out
push
dec
or
fwait
pushf
xor
or
xchg
in
add
pushl
pushf
and
push
sbb
inc
sbb
mov
ret
and
rcrl
inc
scas
test
call
sub
or
inc
jbe
movsl
outsb
ror
adc
sbb
and
mov
push
std
fbstp
leave
adc
xchg
test
mov
test
pop
clc
pushl
std
push
pop
enter
and
and
fcmovnb
or
xor
push
sar
bound
mov
cmp
pop
inc
subl
call
outsb
outsb
mov
dec
mov
jno
sbb
mov
sbb
test
ljmp
shll
cwtl
sahf
push
insl
inc
dec
pop
add
pushf
out
add
mov
cmp
or
jnp
mov
jmp
and
out
cmp
push
mov
out
fsubl
adc
add
pop
add
and
das
and
jns
push
push
repz
in
pusha
and
adc
cmp
ljmp
les
push
stos
pop
mov
and
mov
and
ljmp
jne
shll
into
iret
dec
jns
dec
aaa
test
or
mov
pop
aam
add
xchg
add
cmp
mov
in
push
pop
insb
div
cmpsl
dec
sbb
mov
icebp
call
pop
in
adc
nop
or
dec
js
das
or
push
add
or
cwtl
lods
roll
push
sub
and
adc
jmp
jo
es
push
scas
jae
lods
inc
mov
and
shlb
pop
and
stos
mov
add
jmp
inc
and
push
xchg
aaa
les
ljmp
adc
sahf
xor
mov
clc
jmp
aad
jecxz
mov
mov
adc
sbb
xchg
inc
data16
movsl
pusha
inc
cmp
ljmp
ss
dec
or
cmp
aam
mov
sbb
out
call
movsl
lret
lret
dec
inc
inc
sub
mov
out
and
pushl
xor
push
push
jp
es
push
inc
inc
and
or
sbb
adc
lcall
mov
outsb
lret
in
sbb
or
outsl
fcmovbe
add
nop
in
pop
sbb
aam
into
pushf
aas
loop
jg
scas
les
stos
adc
push
dec
jmp
mov
aam
data16
lcall
mov
insb
js
push
jp
xchg
adc
cwtl
roll
stos
call
and
jns
test
rorb
sub
cmpsl
dec
stos
insb
mov
movsb
dec
in
sub
decl
into
jae
rcrl
loope
dec
push
lret
jg
je
ss
cmpsl
push
andl
sbb
jl
or
push
push
xor
cmc
je
ficoml
xor
lods
ljmp
incl
adc
es
mov
inc
cmp
sub
jno
nop
add
and
ror
mov
jmp
inc
pop
sbb
andl
in
or
sub
fldt
fs
jnp
leave
mov
cld
mov
lcall
push
or
mov
jnp
jno
mov
jle
adc
dec
or
add
push
sub
lods
adc
jnp
incl
push
adc
sarb
rcr
bnd
mov
dec
jp
ss
jg
in
ret
pop
fs
sbb
xor
or
outsl
dec
ljmp
out
call
cld
das
sub
or
les
jns
cs
pusha
sbb
nop
jmp
lock
clc
mov
sub
leave
mov
ret
and
mov
cmpsb
mov
sbb
inc
cvtdq2ps
sbb
xor
shll
add
das
enter
pop
jae
inc
nop
sbb
dec
cmp
adc
sbbb
in
imul
push
fsubrl
xorb
sub
cld
mov
icebp
jne
and
data16
push
jo
lcall
nop
repnz
test
or
jb
xchg
xor
scas
or
sbb
adc
mov
mov
inc
mov
inc
xlat
addr16
outsl
les
gs
cltd
int3
jl
and
shrl
jns
aaa
aaa
cmpb
or
aas
add
add
dec
faddl
gs
je
mov
mov
add
call
mov
jmp
and
pop
adc
dec
lahf
stos
rclb
test
mov
andb
and
mov
ficoml
xor
int3
or
or
mov
in
pop
jg
add
xor
pushl
pop
cli
xor
nop
lea
ret
arpl
lcall
lea
push
xchg
cltd
decl
push
mov
aam
clc
push
leave
lods
vmovapd
jno
test
jo
popa
adc
mov
xlat
pop
lock
add
rcll
daa
add
pop
movsb
xlat
ja
inc
ja
pop
or
js
int3
fisttps
lock
push
fdivrl
push
notb
cmp
add
xor
mov
xor
dec
int
rorb
sub
pop
sahf
lcall
incl
cmp
shlb
out
enter
ret
cld
loopne
jno
mov
sbb
mov
mov
xchg
loope
shrl
enter
adc
mov
shr
xchg
inc
cltd
dec
dec
test
dec
add
xchg
fsubl
decl
fistps
fildll
dec
cwtl
add
orb
xchg
mov
mov
ja
xor
jb
inc
rcl
dec
jge
mov
call
sahf
sahf
push
aam
popf
rcr
jmp
mov
mov
into
adc
push
xchg
jns
iret
and
xchg
fadds
rcrl
in
mov
dec
add
mov
shlb
ret
stos
sub
mov
adc
lods
push
decl
add
rclb
pop
mov
inc
push
rcrb
push
stc
imul
fcoml
or
mov
xchg
push
sbb
lcall
adc
mov
push
cmp
and
and
inc
xor
stos
pushl
cwtl
shlb
int3
adc
add
fs
cld
aam
ja
xlat
fwait
adc
xchg
insl
popa
or
or
push
xor
mov
addl
xlat
outsb
jae
push
jae
cld
lcall
bound
bound
jns
pushf
pop
push
adc
lea
jp
fdivr
outsl
lcall
iret
hlt
lds
clc
add
cmp
sub
ljmp
fnstcw
dec
mov
xor
andb
das
mov
subb
mov
ret
rol
sbbb
push
aas
jg
ret
jge
fld
leave
pop
inc
add
test
add
add
mov
dec
sbb
dec
mov
dec
add
fwait
incl
loopne
sub
and
imul
out
loope
xchg
adc
bound
pop
and
sbb
sbb
dec
sbbl
cwtl
inc
popf
enter
loopne
lods
leave
push
scas
clc
lcall
ss
push
add
mov
xchg
mov
mov
adc
cld
inc
inc
adc
fs
sbb
cmp
lcall
in
add
mov
pop
lods
push
pop
xchg
out
add
int
inc
sbbb
push
es
xor
hlt
arpl
arpl
addr16
decl
push
mov
roll
iret
adc
push
xchg
xor
push
add
insb
ljmp
cli
inc
sbb
push
data16
or
std
mov
dec
lock
sbb
pop
xor
lea
pushf
add
push
inc
fnsave
mov
mov
push
pop
int3
movsb
dec
bound
pushf
lret
call
cld
adc
int3
cld
lds
jle
sub
rorb
in
add
xor
adc
push
imul
lods
jl
pusha
xchg
or
sbb
ljmp
orb
pop
fildl
orb
sbb
sbb
pushl
and
push
in
mov
clc
cld
xchg
pop
ficompl
stc
push
jne
mov
sbb
inc
mov
lahf
inc
orb
inc
dec
in
sbb
sar
test
sbb
loop
mov
dec
cltd
data16
cmp
stos
ret
add
mov
dec
rorl
call
sub
out
xor
leave
sub
dec
mov
in
add
enter
mov
cwtl
and
enter
sahf
xchg
into
add
inc
popf
jo
mov
fisttps
push
aad
inc
xor
aaa
jp
inc
in
fidivs
jbe
pop
imul
mov
adc
mov
cmp
lods
and
jmp
mov
pop
cmpb
nop
xchg
scas
roll
xor
imul
ss
das
rclb
dec
jmp
dec
fidivrl
inc
bound
pushl
mov
add
xor
faddp
xchg
hlt
push
and
fs
pop
xchg
mov
test
dec
inc
dec
pushaw
dec
and
push
and
jns
nop
mov
jbe
in
push
xlat
arpl
cmp
mov
sub
cmc
test
mov
fdivr
pop
loopne
and
xchg
sub
in
aam
push
mov
test
sbb
lcall
push
and
cwtl
push
test
adc
or
call
sub
jo
pusha
mov
test
or
jg
mov
nop
int3
cmpsb
lods
or
call
out
hlt
mov
ljmp
inc
jge
and
in
push
dec
sbb
out
adc
jbe
stos
call
sub
shl
mov
lahf
jo
push
mov
jg
rorb
das
mov
xor
out
ds
adc
sahf
adc
inc
or
pusha
or
fwait
call
movsb
mov
mov
aas
leave
push
aam
add
out
mov
movsl
push
and
jmp
sub
mov
testb
orl
call
adc
shll
sub
out
repnz
arpl
rol
imul
jmp
pop
mov
lods
dec
lcall
ret
mov
fcomp
shll
push
std
inc
pusha
insb
mov
fdivl
push
push
and
jb
add
inc
lds
nop
jno
inc
push
iret
mov
inc
inc
in
jno
iret
sbb
mov
lods
dec
inc
push
add
in
sub
roll
rcll
outsl
mov
push
mov
push
mov
inc
movsl
push
call
das
insl
imul
sub
repnz
adc
lds
fs
xor
push
popa
inc
or
cmp
in
sbb
sti
push
mov
cli
sbb
mov
or
inc
shlb
push
nop
popa
lcall
in
in
rcll
jnp
xchg
mov
or
sub
call
nop
mov
pop
xorl
push
insl
and
and
push
sbb
mov
call
sahf
call
dec
out
pop
push
leave
pop
push
or
cld
int3
loop
add
sbb
test
lock
adc
ljmp
mov
mov
mov
filds
mov
stos
hlt
pop
pop
mov
inc
lock
rclb
jb
jg
mov
add
push
add
and
or
mov
mov
xor
stc
xchg
mov
xchg
pop
subb
popa
ret
xor
shrl
dec
cmp
test
loope
test
push
mov
xchg
push
stos
dec
sbb
mov
rcrl
jle
scas
xchg
mov
lds
adc
or
ljmp
inc
push
push
jae
push
int3
inc
xchg
and
push
adc
fs
ja
lds
jg
jmp
cltd
add
stos
sbbl
dec
in
sbb
pop
push
mov
movsb
xor
pop
lret
pop
int
dec
sahf
push
add
leave
enter
inc
adc
dec
js,pn
and
jbe
sbb
leave
push
mov
dec
std
mov
lods
mov
decl
pop
and
fmuls
sbb
incl
fsubrp
sbb
daa
lock
data16
out
icebp
lea
int3
push
ljmp
out
inc
pop
sub
das
push
jne
iret
lds
xor
sbb
fisttps
stc
push
ret
pop
call
add
pusha
andb
inc
inc
mov
fld
dec
sbb
add
cld
push
movsl
lods
mov
jae
arpl
jg
fwait
mov
clc
inc
inc
scas
adc
subl
inc
test
xchg
call
cmp
adc
jb
cmp
push
fadd
jae
sbb
pop
ss
fcomip
negb
shll
out
aad
cld
xchg
pushf
sbb
jmp
decl
je
xchg
ljmp
inc
jae
xor
cmpsl
or
fmulp
test
outsl
mov
outsl
lods
lods
xchg
pop
pop
or
gs
sbb
mov
fcomip
je
daa
push
push
dec
daa
pop
sub
or
mov
sarb
sub
in
jmp
incl
dec
or
call
pop
cmp
lods
jmp
sub
mov
clc
mov
mov
pop
mov
push
sub
fdivl
push
or
int
loope
adc
das
cli
or
cli
sbb
mov
mov
jne
pop
outsl
clc
decl
and
cs
pop
scas
aas
cmp
dec
push
xchg
inc
aad
sar
das
cli
test
add
out
out
mov
add
sbb
das
sub
mov
call
call
jmp
lods
add
fs
orb
popa
push
xor
xchg
or
ds
xor
push
cli
jmp
rol
add
adc
add
jg
inc
int3
adc
xor
ss
add
mov
or
cmp
scas
cmp
je
jg
repz
push
test
imul
test
nop
rcrl
jns
xlat
lcall
xor
lods
pop
jl
xor
in
movsl
fistpl
lahf
adc
cmp
pop
cmc
call
out
add
mov
mov
pop
xor
sbb
dec
jmp
ret
fidivl
in
pop
call
push
inc
test
push
push
sub
dec
imul
or
and
ljmp
xor
mov
dec
jg
pop
aas
mov
popf
into
pop
fwait
and
mov
lea
pushf
int
jno
jl
fcomip
jg
pop
fldenv
add
nop
icebp
repz
jle
dec
stos
jle
jp
aam
out
xor
cwtl
fs
call
cmpsb
push
fldcw
int3
push
ret
inc
pushl
xchg
or
out
jp
shll
mov
stos
xchg
inc
push
incl
cwtl
mov
xchg
out
mov
negb
out
xor
pop
icebp
fimull
push
mov
mov
cmp
cwtl
cmp
mov
sub
jmp
cmpsl
cld
rclb
sbb
mov
rolb
cmp
nop
mov
mov
adcb
add
cwtl
push
inc
test
lods
mov
arpl
pushl
fnsave
cmpl
xor
inc
inc
push
inc
js
orb
addl
dec
cmp
fbstp
pop
insb
inc
mov
jbe
aad
xchg
sbb
cld
push
sbb
imul
incl
insb
jb
aaa
das
jnp
repnz
xchg
imul
in
call
pop
int3
sti
subl
inc
adc
ret
cmpsl
mov
sub
int
add
push
jg
cmc
call
shlb
push
push
push
sbb
cmp
outsl
movsl
aas
adc
ljmp
inc
jno
xchg
sub
pop
dec
shll
add
push
insb
cmc
test
mov
inc
cmp
inc
and
sahf
or
sarb
jnp
inc
test
xchg
and
and
dec
lods
sub
cmp
adc
jo
or
xchg
and
sbb
dec
test
mov
repnz
add
cmp
push
jmp
push
inc
or
aam
rol
dec
push
outsb
inc
out
mov
sbb
sub
lret
add
pop
icebp
and
in
ret
pop
dec
mov
gs
mov
stos
in
push
sbb
mov
inc
fldt
inc
inc
rol
inc
test
mov
incl
iret
adcl
addl
cmp
pop
jb
lret
push
cs
das
clc
sub
lahf
enter
out
loopne
dec
cmp
lsl
fdivr
add
push
adc
js
repz
lcall
pop
std
mov
push
lcall
orl
sahf
std
or
pushl
push
mov
dec
sbb
filds
xor
js
xchg
sbb
imul
inc
push
sbb
push
xchg
out
or
mov
addb
pop
push
inc
sub
mov
je
imul
fcomi
roll
ret
cmp
cmpsb
nop
ljmp
out
lret
mov
sub
cmpb
jmp
lcall
xchg
jmp
rorl
sbb
mov
lret
roll
jp
pusha
clc
dec
sub
sbb
insb
sbb
mov
xor
decl
andb
sub
inc
xchg
cmp
and
adc
stc
in
jae
cmp
lods
push
dec
adc
sub
loopne
sub
shll
out
adc
cmp
mov
adc
test
into
cmp
pop
call
sarl
cmp
hlt
mov
or
mov
and
sbb
stos
jmp
inc
pop
imul
loop
test
mov
loop
jmp
cltd
movsb
or
test
pop
jecxz
inc
mov
xor
decl
gs
sub
mov
fimull
and
xchg
cld
shll
adc
pushl
pop
subb
cwtl
pop
lea
mov
sub
js
xor
or
push
inc
test
hlt
fistpl
mov
jge
test
lret
sub
jmp
jg
add
stos
inc
jl
or
cmpsl
out
push
mov
mov
mov
fs
jmp
rclb
push
add
arpl
mov
nop
scas
insl
cmpsb
test
rorb
and
mov
mov
in
dec
stos
dec
scas
mov
fucomi
cmp
mov
lcall
jg
sar
cmp
mov
jg
mov
mov
hlt
decl
mov
insb
cli
or
rol
call
mov
inc
ret
repz
popa
sbb
or
or
in
ret
push
call
incl
jae
ljmp
sub
push
mov
pop
mov
out
fidivrs
cmp
add
mov
aad
jmp
mov
sub
in
cmp
xor
xchg
pop
adc
int3
cmp
lcall
int
xor
sbb
xchg
sti
in
add
adc
ds
dec
icebp
iret
adc
int
sub
lods
cmpsl
cli
inc
xor
push
push
mov
jne
cli
mov
cld
ljmp
lock
insl
lock
lds
and
push
lods
jg
lcall
cmpl
addl
jl
add
call
ret
sub
mov
adc
cli
cmp
and
lods
outsb
test
or
and
jae
lds
push
adc
mov
dec
or
or
adc
incl
push
fxch
dec
fcoms
sbb
or
enter
xor
push
sbb
cli
jg
sbbb
pop
icebp
imul
pushf
add
jg
ljmp
adcb
xchg
cmp
lcall
cmp
jbe
lret
cmc
jmp
or
inc
push
xchg
test
pusha
add
incl
int3
out
xor
nop
pop
or
daa
popa
pop
cmp
xor
mov
sub
jmp
incl
jno
js
out
cmpsb
cmp
mov
inc
add
add
gs
pop
call
decl
and
loope
pop
test
rol
mov
sbb
cmpsl
mov
push
dec
inc
push
pop
adcb
pop
xor
sbb
and
pop
cmp
or
xchg
dec
bound
mov
jmp
push
mov
cmp
incl
addb
inc
push
movsl
adc
mov
or
add
mov
roll
inc
movl
mov
sar
ja
call
push
shll
sub
pop
mov
mov
stos
push
popa
movsl
incl
notb
pop
dec
lock
xor
sbb
rcll
pushf
subb
and
clc
jmp
pop
andl
dec
test
fdivs
lods
cmp
dec
or
cli
outsl
clc
mov
and
jns
in
jne
jle
les
xor
mov
imul
or
pop
jecxz
outsl
clc
mov
dec
inc
mov
mov
mov
loope
insb
cld
jl
cs
cmp
movsb
ret
into
inc
mov
mov
adc
ror
dec
xchg
incl
add
or
sbb
xor
jecxz
adc
jae
iret
aam
dec
xor
notb
andl
gs
insb
outsb
mov
and
push
add
mov
hlt
in
imul
popa
int
dec
sbb
and
sbb
test
push
add
cmp
enter
push
mov
decl
xor
sub
enter
rolb
leave
int3
pushf
orl
dec
loopne
and
lea
sbb
les
adc
xor
jg
push
je
hlt
push
mov
cmp
movsl
fistpll
test
sbb
cmp
ljmp
test
hlt
cwtl
sub
xor
repnz
cmp
sub
mov
mov
cmp
xchg
push
cmc
mov
repz
mov
mov
and
das
push
inc
data16
or
xor
call
inc
jge
adc
std
pop
and
test
ret
or
sbb
cmp
ljmp
dec
or
jne
push
sbb
sbb
loope
sub
dec
mov
sbb
push
and
dec
ret
add
sub
or
mov
and
and
dec
xchg
and
je
shll
movsl
js
popa
add
scas
fwait
mov
decl
fwait
or
and
inc
push
loop
out
sub
js
push
cmpsb
sub
loop
mov
and
in
add
dec
ret
call
fs
in
add
pop
mov
lret
shlb
and
rcll
jo
in
cli
jg
jmp
mov
ljmp
mov
lods
fcmove
ss
out
push
push
lret
test
jno
and
cli
or
xchg
pop
or
fnstsw
adc
push
arpl
fcmovnb
mov
push
sub
rolb
jmp
mov
push
frstor
lcall
jmp
loopne
xor
add
repz
and
hlt
cmpsb
test
xchg
sar
incl
add
mov
ffreep
sbb
ret
sbb
push
push
mov
xor
pop
xchg
pop
insb
xor
call
in
sbb
cmpsl
lock
sbb
fsubrl
cmpl
addr16
jp
fyl2xp1
mov
inc
cmp
xchg
push
jge
scas
mov
xor
dec
out
scas
ljmp
xor
adc
or
test
fdivrl
or
push
inc
push
fwait
jmp
aaa
aad
dec
shrl
popf
das
iret
cwtl
iret
lret
jp
out
aas
add
test
pop
add
push
add
push
addl
jg
and
lret
insb
adc
shlb
sub
and
pop
pop
and
psrlq
jmp
stos
frndint
mov
nop
sbb
sar
bound
mov
insb
mov
inc
ret
pushl
fisubl
imul
scas
or
xchg
cmp
push
mov
mov
out
cbtw
pushl
std
mov
scas
addr16
add
jp
or
out
sbb
insl
cld
incl
mov
dec
in
dec
data16
ret
inc
mov
in
ljmp
mov
mov
sbb
aam
cmp
xchg
incl
loopne
dec
out
inc
sub
add
inc
mov
sub
xchg
outsb
insl
bound
mov
or
push
xchg
ffreep
jmp
js
pop
pushf
mov
mov
pop
mov
and
and
lods
ret
js
cmp
jmp
sar
pushl
scas
cs
sub
mov
cmp
jl
lds
scas
pop
in
push
or
jle
mov
in
in
xor
call
out
or
stos
push
xor
nop
and
inc
test
out
pop
adc
push
xchg
fbld
mov
fisttpl
and
push
in
pop
shr
cmc
in
sub
in
into
xchg
or
xchg
ljmp
loop
out
mov
mov
and
lcall
push
fs
add
or
idiv
ljmp
add
call
cmp
insb
add
inc
or
push
add
add
ljmp
push
lea
xchg
ret
inc
enter
sub
rorl
mov
lret
lcall
jl
incl
and
inc
dec
ficompl
xor
xor
ljmp
mov
pop
push
mov
dec
inc
or
add
pop
int3
dec
test
adc
std
push
out
test
dec
dec
je
and
loope
dec
and
outsl
clc
pushl
loopne
sub
and
mov
scas
cmp
inc
aas
xchg
mov
pushl
jecxz
or
mov
ds
pushl
outsb
loop
push
inc
lcall
add
cs
push
ljmp
rorb
fiaddl
out
mov
out
or
ret
orl
ljmp
mov
ljmp
or
shrb
fnsave
in
ljmp
xchg
lods
enter
in
mov
icebp
push
push
inc
pusha
sub
les
popa
sbb
push
adc
fbld
fisubl
repnz
xchg
mov
mov
mov
ljmp
push
ficomps
mov
ficoml
sbb
hlt
lods
or
loopne
incl
inc
or
loop
jle
and
xchg
mov
xlat
xchg
pushl
and
or
es
jp
or
and
pusha
mov
dec
mov
sbb
into
inc
mov
lock
test
das
testl
clc
imul
lods
mov
xor
and
push
xchg
iret
pop
push
lock
scas
in
incl
jecxz
and
sbb
dec
mov
adc
jmp
call
ret
pushf
xor
add
scas
roll
sub
inc
push
mov
cmp
push
loopne
push
push
cld
cmpsb
and
shlb
lcall
cmp
and
sbb
mov
inc
cmp
and
push
and
into
push
loop
add
pusha
add
pushl
sbb
inc
or
lcall
lea
movl
pop
lds
add
hlt
fwait
shlb
cmp
scas
sub
sbb
lcall
push
lret
inc
sbb
xchg
mov
sub
pop
notb
sbb
dec
loopne
jp
xchg
push
adc
dec
adc
cli
sbb
loop
adc
adc
mov
add
dec
lret
add
dec
arpl
incl
add
push
sbb
sub
pop
inc
xchg
scas
pop
int
jp
push
rclb
xor
mov
icebp
or
mov
call
orl
iret
lods
pop
xchg
and
inc
inc
jmp
or
insl
cmc
fisubrl
clc
push
cmp
sar
psubw
arpl
mov
pushl
mov
loop
jo
sbb
cmp
imul
inc
ss
dec
cmp
jae
in
sti
gs
cmpsb
push
out
sub
testb
into
xor
adc
repz
inc
cmp
incl
mov
sbb
push
xchg
test
cmp
out
cwtl
mov
out
cmpb
lcall
inc
notb
outsb
nop
mov
dec
dec
inc
cltd
push
jbe
and
pushl
into
dec
inc
out
add
test
shrb
leave
fwait
outsb
test
xchg
jo
jle
and
and
ljmp
mov
mov
push
cmp
std
mov
jmp
jo
je
in
fs
mov
dec
mov
adc
sub
out
lock
sub
push
adc
jp
hlt
andl
fs
mov
xchg
mov
mov
add
shlb
loopne
fdivr
jg
jno
sbb
fsubp
push
xchg
add
adc
mov
adc
jmp
push
mov
test
mov
and
xor
ljmp
shlb
orl
int
push
mov
mov
shll
xchg
push
imul
and
xchg
inc
incl
mov
push
dec
pop
mov
jns
mov
mov
nop
pusha
or
xor
sar
jg
scas
mov
lods
cmc
mov
lods
cmp
mov
xchg
aas
and
inc
in
movsl
push
addr16
outsl
dec
scas
rorl
push
sbb
das
cli
incl
ret
mov
js
jo
inc
inc
ret
imul
add
jno
inc
std
push
and
loopne
jno
call
add
pusha
jle
adc
jecxz
and
xchg
dec
bound
in
cli
les
mov
mov
add
cmp
sub
pop
xchg
inc
mov
call
loopne
jp
xchg
cmp
out
popf
jl
arpl
xchg
push
ds
cli
add
clc
pop
mov
and
adc
dec
dec
push
outsl
movsb
hlt
outsl
fidivrs
sarb
and
or
cmpsl
push
cli
decl
sub
movsl
imul
mov
inc
push
push
incl
and
icebp
imul
xchg
inc
dec
mov
scas
test
outsb
jmp
mov
ret
adc
or
cwtl
aad
cmp
push
xor
sub
fdiv
jbe
inc
repz
int
sub
std
pushl
mov
push
ss
sbb
mov
inc
lea
mov
dec
xor
and
jbe
cmp
mov
jo
push
aad
mov
lods
data16
xchg
xchg
mov
call
orb
sub
pop
cwtl
ret
xor
rorl
movsl
mov
jns
clc
dec
push
dec
lcall
adc
call
incl
add
lahf
arpl
cwtl
xchg
inc
sbb
mov
pushf
xchg
mov
pop
or
outsl
xor
jb
addr16
push
mov
incl
sub
xor
push
or
popf
aad
loopne
movsl
js
mov
inc
adc
jg
mov
shrb
cs
or
popf
inc
andb
sub
call
jp
leave
jbe
out
mov
cmp
jmp
mov
push
decl
and
test
xchg
inc
dec
sub
jb
add
mov
fnsave
icebp
je
jp
rclb
bound
push
adc
ljmp
xor
dec
movlps
cmp
mov
decl
loop
enter
outsb
sbb
pop
xchg
sub
mov
or
into
jno
xor
add
out
fnstcw
xor
dec
inc
pop
fcomps
daa
mov
arpl
push
cmpsb
ja
adc
jnp
mov
flds
xchg
aam
xlat
lret
push
xor
and
aaa
shr
jns
insb
xor
sar
push
mov
xchg
mov
push
divl
cmp
xor
jns
inc
out
sbbb
ljmp
push
sti
cmpsb
mov
shlb
idivl
xchg
mov
and
mov
mov
push
pop
lcall
lock
pusha
ljmp
push
pushf
sub
insl
inc
loop
mov
sbb
push
jl
adc
cli
mov
jno
rclb
ss
cmc
mov
push
mov
lret
jg
fdivr
fdivrl
mov
movl
mov
push
push
mov
das
xchg
mov
sahf
push
jmp
imul
sub
fisubs
add
mov
decl
mov
addr16
pop
dec
push
sbb
xchg
ret
jno
push
fs
fistpll
xchg
ret
or
dec
jnp
xchg
mov
cmp
xor
and
adc
outsb
jae
cmp
aaa
jge
adc
aam
mov
sbb
lcall
pop
cwtl
ljmp
or
lods
add
dec
lods
xor
and
dec
mov
dec
mov
xchg
andl
rsqrtps
sbb
ljmp
xor
nop
xchg
ret
push
jo
adc
pushf
xor
mov
jl
bound
pop
or
mov
ret
and
es
cmpsb
and
in
sub
mov
decl
int
adc
fistl
push
mov
dec
cmp
imul
pop
pop
insl
mov
fwait
inc
dec
mov
lock
jge
add
mov
mov
cmpl
cmp
imul
out
cli
jl
push
xchg
rcrb
jne
hlt
sub
es
std
popa
and
test
pop
push
add
and
decb
out
and
inc
or
fistpl
cmpsl
or
mov
dec
push
push
ss
js
jmp
arpl
fsubrp
or
scas
and
push
rcl
mov
jmp
adc
push
clc
mov
ds
lret
xor
or
mov
cmp
arpl
lahf
test
leave
dec
out
fisttps
mov
test
mov
out
mov
xchg
sbb
xchg
sbb
sub
lcall
adc
insb
xchg
outsb
jecxz
mov
test
adc
cmpsb
andb
ret
adc
fsubrs
sbb
mov
shlb
cmp
clc
std
imul
bound
and
test
cmp
int
out
dec
in
lret
jns
mov
or
out
cmp
cmp
into
push
out
js
into
fwait
hlt
ljmp
xor
pop
ret
xor
fisttps
push
in
sbb
mov
mov
sub
xchg
imull
xor
pop
adc
fisubs
call
sti
cmp
mov
pusha
xchg
add
push
xchg
mov
popf
out
mov
add
xor
xchg
push
and
sarb
rclb
inc
pusha
pop
scas
push
mov
push
fadd
testb
sbb
outsb
out
lcall
push
je
mov
mov
call
decl
sbb
mov
jns
dec
loopne
mov
push
ret
dec
or
jg
or
jge
mov
int3
and
pop
dec
mov
add
fstpt
sub
call
add
add
dec
push
and
loopne
xorb
je
xchg
call
mov
jp
mov
add
shll
or
cmp
inc
sbb
sub
sbb
mov
movsb
xchg
faddl
cmc
int
jbe
push
lock
pop
add
dec
insl
pop
mov
jmp
ret
push
mov
lods
jp
stos
aas
cmp
clc
jg
jne,pt
movsb
sub
scas
pop
mov
or
mov
xchg
mov
incl
mov
insl
call
push
adc
xor
aam
push
lea
adc
sbb
dec
sbb
pop
addb
mov
lahf
clc
and
push
loop
pushl
pop
dec
or
aad
push
movsl
push
xchg
push
mov
mov
or
test
cmp
fnsave
and
repnz
jecxz
into
pop
movsl
add
adc
inc
xchg
lods
inc
je
lods
pop
pop
mov
or
mov
cmp
mov
lods
pop
scas
out
sti
inc
cs
outsl
add
xchg
jg
out
push
dec
sbb
clc
add
add
or
xor
add
adc
popa
loope
outsl
ljmp
adc
jae
aas
and
push
pop
repnz
add
jmp
test
fdivr
add
push
test
ret
lock
clc
adc
push
loop
inc
and
int3
xchg
ret
addl
cmp
mov
hlt
pop
xchg
jle
in
add
gs
jle
in
sbb
es
aam
add
jo
jns
lea
dec
add
pushl
push
push
in
fwait
aas
push
inc
push
and
cld
inc
push
test
adcb
adc
aam
aaa
addr16
and
xchg
push
sbb
or
pushl
inc
and
xor
movsl
cwtl
jle
jmp
sub
jns
jo
les
and
mov
sbb
enter
inc
or
rclb
fsts
js
xchg
dec
push
js
xchg
dec
xor
xchg
sbb
lods
je
dec
sub
stos
jb
inc
inc
dec
f2xm1
incl
stos
popa
or
adc
push
jp
dec
push
shll
add
sbb
push
cs
jg
adc
push
xchg
push
cltd
aad
insb
xchg
hlt
mov
dec
add
jno
in
sbbb
andb
inc
sbb
in
push
add
mov
scas
add
lods
mov
cwtl
arpl
ljmp
adc
inc
xchg
rcrb
xchg
data16
les
sbb
jge
pop
push
or
rcrl
movsb
jmp
inc
add
inc
ret
fisttpl
dec
mov
sbb
scas
lret
pop
decl
inc
mov
popf
pop
fnsave
outsl
int
dec
frstor
mov
lods
inc
incl
mov
aad
icebp
xchg
in
pop
cli
jg
loopne
or
out
ja
cmp
loopne
push
adc
movsb
loop
lcall
push
jg
inc
cld
loop
sbb
popa
test
mov
xchg
jecxz
jg
in
lea
in
mov
ss
or
mov
fs
call
xor
enter
stc
cmc
pop
out
pop
pop
inc
fwait
icebp
mov
dec
xchg
lcall
mov
mov
cltd
cmp
insb
push
decl
adc
cs
mov
call
mov
add
les
jmp
xchg
test
mov
in
jne
jb
fcompl
jg
dec
mov
loopne
xchg
cmp
roll
and
pushl
sub
icebp
push
shlb
sbb
push
and
pop
dec
gs
mov
mov
lcall
adc
lret
mov
sub
popa
xchg
shrb
stos
sub
xchg
xchg
jns
lcall
sbb
out
aad
mov
or
fs
movsl
jmp
pusha
cwtl
push
xor
or
jmp
pop
mov
inc
push
xor
jno
sbb
lcall
push
mov
pop
insb
mov
pusha
push
outsb
js
fwait
cmp
aaa
cmp
push
add
xor
mov
in
lcall
sub
jo
or
cli
leave
cmp
xor
jbe
clc
mov
xchg
aam
lcall
adc
pushf
in
aad
inc
leave
adc
fwait
les
xor
aaa
jg
add
add
sub
or
movsl
fistpll
mov
daa
sbb
test
test
sub
pop
dec
adc
add
inc
mov
and
and
mov
inc
js
or
mov
out
pop
add
fcmovb
or
and
mov
cmp
ja
popa
cld
inc
or
jmp
jb
addb
out
and
adc
add
xor
mov
mov
mov
shrb
inc
es
out
add
dec
xchg
dec
cmpsb
cmp
fadds
add
nop
mov
gs
jg
inc
sub
mov
cmp
mov
cli
push
pop
jp
je
xchg
mov
mov
call
push
enter
pushl
xchg
enter
mov
sub
js
mov
mov
ret
cli
inc
xor
and
inc
pusha
mov
jae
cltd
and
pop
incl
adc
sub
xchg
jne
adc
arpl
lds
fdivl
xor
mov
sub
lcall
pop
mov
add
cltd
add
lods
push
sahf
xchg
lret
ret
add
push
fs
mov
mov
xor
addl
shrb
rorb
shlb
loope
sub
mov
xorl
fcmovnu
ljmp
push
adc
push
mov
sub
sahf
scas
dec
out
jp
jl
sub
call
cld
incl
daa
nop
jne
cmp
xor
push
popa
pusha
fiadds
lds
and
lcall
sub
adc
push
and
roll
sbb
pusha
pop
sub
jecxz
inc
rolb
filds
adcb
add
addl
subl
add
xor
add
decl
pop
daa
and
imul
sub
mov
icebp
stos
call
cmp
lds
cs
xor
push
xchg
adc
xchg
inc
cmp
lcall
cli
jecxz
mov
shlb
cltd
in
xchg
adc
dec
xchg
or
incl
cmc
ja
add
xor
pop
or
scas
movsl
scas
shlw
lcall
mov
or
sbb
pop
xchg
jne
or
mov
pushl
cmpsb
xor
rorb
adc
cwtl
loope
lret
add
pop
adc
lcall
add
outsl
push
pop
loop
xor
jnp
xchg
or
sub
fisttpl
adc
mov
bound
xor
jmp
mov
hlt
incl
jae
das
fdivs
and
cmp
ss
pusha
lcall
jg
call
in
aas
adc
inc
push
jmp
and
cmpsb
pushl
dec
jbe
mov
jnp
leave
insl
pushf
dec
add
mov
lret
xchg
cmp
int3
jne
stc
aad
mov
stos
and
repz
pop
popa
add
bound
mov
lcall
fcoml
popf
push
sbb
jo
and
jb
imul
decl
sbb
or
into
xchg
sbb
rolb
push
inc
adc
mov
in
loopne
daa
xor
xor
mov
push
jns
insb
cltd
lahf
pop
push
fnstsw
push
in
je
mov
mov
ljmp
stos
sbb
enter
ret
mov
mov
int
aaa
cmpb
sub
outsl
pusha
mov
lahf
sub
sbb
popa
add
decl
push
mov
pop
inc
nop
ja
xor
inc
adc
and
and
ljmp
jg
popa
pop
push
mov
rcrl
lret
xorl
out
pushl
xchg
enter
lods
lret
stos
shll
cltd
les
loopne
mov
adc
pushl
mov
cli
push
fidivs
inc
xchg
into
lods
mov
jns
test
test
mov
call
or
push
xchg
mov
incl
push
inc
fstp
inc
fxch
push
and
ficompl
inc
jnp
cmp
ret
outsl
clc
call
aaa
cmp
es
in
xchg
sti
jmp
push
leave
jl
lahf
incl
fmul
aas
repnz
enter
ret
inc
rcrl
popf
xchg
push
arpl
pop
pop
jo
sub
add
or
add
push
and
xor
adc
ljmp
mov
adc
add
sub
ljmp
int3
mov
hlt
je
xchg
mov
inc
adc
xor
cli
jg
outsb
add
push
rolb
nop
cmp
pop
ss
decb
add
mov
cmp
and
pushl
bound
push
add
rorb
inc
mov
pop
add
dec
out
push
lock
call
pop
jae
push
outsb
cmpb
xor
and
fs
xor
push
or
pushf
ds
repz
xchg
adc
push
xor
mov
xchg
adcl
push
call
push
push
loope
leave
mov
xor
sbb
adc
sub
add
js
lcall
jno
movl
inc
mov
adc
xchg
out
jae
pushl
ljmp
leave
rcrb
in
cmp
sbb
inc
js
push
mov
sbb
call
push
hlt
rolb
push
insl
jno
dec
xchg
pop
cmpsb
ss
push
push
popa
push
jl
push
push
decl
movsl
dec
lcall
inc
inc
insb
aam
add
inc
xor
cli
sbb
pop
lret
fisttps
jecxz
js
xchg
popa
jle
inc
pop
cmp
jg
daa
adc
pop
call
lcall
shl
ss
inc
add
dec
outsl
clc
jg
mov
outsl
cli
mov
jbe
lcall
test
push
push
adc
pop
pop
repnz
cmp
add
loop
sbb
xchg
lock
out
cli
and
dec
sbb
mov
pop
inc
sub
or
sub
rolb
dec
mov
pop
or
das
sar
lock
push
aaa
loop
xor
das
pop
test
inc
and
push
fisttps
cli
je
lret
ret
shll
aaa
cmp
mov
addr16
pop
clc
incl
icebp
push
xchg
je
loope
sbb
lcall
jnp
es
cmp
xor
push
pop
call
dec
pop
adc
decl
sbb
flds
call
sar
jbe
adc
add
pop
cld
jns
testb
rcll
sub
adc
jns
xor
or
push
or
ret
incl
js
rcll
cld
xlat
sub
xchg
xchg
cmp
jmp
mov
add
add
mov
inc
sub
sbb
jg
cmp
xor
pop
adcl
push
inc
or
sub
rorl
cmp
sbb
test
jl
add
dec
adc
negb
movsl
pop
into
or
call
call
push
incb
adc
add
cmpsl
inc
ss
testl
push
cld
and
jne
ja
mov
pop
lahf
bound
xor
inc
data16
push
das
cli
pop
std
sub
pop
sbbb
mov
lds
mov
and
pushf
lock
mov
repz
add
inc
pop
dec
pusha
or
mov
push
js
cmp
leave
adc
adc
pop
or
or
test
add
jno
cmp
dec
lock
daa
test
mov
and
jo
je
add
arpl
mov
es
call
dec
push
inc
jne
xor
test
jecxz
xchg
push
shll
push
pop
fcmovnb
sbb
add
xchg
mov
push
out
mov
pop
cmpsb
xor
adc
adc
xchg
outsb
inc
outsb
es
call
adc
inc
xchg
icebp
fwait
jge
mov
inc
xor
movsb
cmp
dec
mov
adc
sbb
stc
adc
adc
mov
push
push
mov
adc
mov
cmp
es
lods
leave
xor
outsb
jno
jb
stos
movsb
roll
jo
shrb
rorl
and
lret
insb
add
js
adcb
cli
mov
push
add
pushf
daa
xor
out
rcrl
pop
push
jp
sbb
mov
gs
ss
adc
fisubs
jmp
jg
rcr
cmc
push
mov
sahf
mov
xor
mov
nop
les
or
fcoms
push
lock
cli
push
cli
mov
or
or
dec
push
pop
and
mov
mov
movsb
loopne
faddl
dec
loopne
stos
sbb
add
cmpsb
mov
loop
or
dec
movsb
pusha
daa
std
ja
call
push
mulb
mov
push
pop
or
ss
add
or
dec
pop
fisubrs
pop
cmp
in
sbb
or
es
notl
jbe
inc
ljmp
push
fs
call
cmp
add
pop
outsl
shr
sub
and
dec
mov
push
mov
in
insl
mov
inc
push
mov
sbb
test
xor
mov
adc
lcall
cmpsl
mov
xchg
pop
push
inc
out
ljmp
pushl
sub
aam
jb
sub
imul
dec
cltd
test
insb
in
fwait
lcall
mov
sub
imul
out
scas
inc
sbb
ljmp
es
stos
repz
and
nop
cmpsb
jbe
sub
ja
add
loop
pop
sub
jg
push
imul
js
inc
push
repnz
xor
and
ljmp
ss
lods
inc
cli
mov
mov
outsl
divb
dec
mov
jns
mov
cltd
ja
or
pushl
sbb
imul
mov
in
out
xchg
or
mov
inc
jb
add
push
sbb
dec
cld
push
cmp
lcall
pop
mov
and
rclb
test
mov
mov
fiaddl
pop
add
mov
popa
and
mov
data16
repnz
push
inc
jg
addb
loopne
inc
jns
push
test
xor
inc
es
lcall
inc
dec
inc
mov
loop
mov
sub
negl
mov
jmp
add
mov
movsb
js
sub
sub
inc
lods
lret
push
pop
dec
push
repnz
cmpl
cmp
imull
and
js
test
xchg
fcompl
or
lds
mov
out
jg
aas
in
mov
daa
adc
push
mov
add
scas
xor
ljmp
or
dec
and
mov
es
movsl
sbb
push
jp
mov
popf
aam
popf
out
incl
in
outsb
out
jl
xor
cltd
insb
test
cmp
int3
jl
into
ss
jmp
stos
outsb
jae
fcoml
and
cld
js
push
and
or
sub
data16
incl
push
testb
and
add
inc
cmp
fs
jecxz
lock
out
mov
dec
xor
insb
ss
sub
pop
dec
and
and
mov
mov
mov
test
icebp
mov
orb
adcb
dec
movsb
movsb
add
lret
mov
fildll
xchg
inc
inc
push
add
mov
dec
pop
je
movsl
mov
ljmp
mov
mov
sub
adc
lods
mov
sub
pop
sbb
les
inc
jp
incl
push
pusha
mov
jne
insb
rolb
cmpb
and
out
jle
xchg
adc
call
pushf
aad
popa
ja
arpl
mov
dec
sbb
push
fstl
or
aam
inc
outsl
and
shll
stos
push
sar
jg
xor
int3
repz
adc
sub
ljmp
xchg
mov
movsb
push
cld
xchg
cmp
popa
movsl
xor
out
insb
jl
lcall
sbb
sbb
push
push
nop
loope
mov
ss
push
popf
or
fnstcw
jae
push
pop
jg
loope
mov
sbb
mov
decl
aad
and
jp
mov
cmpsb
adc
fstpt
mov
fsubrs
mov
arpl
out
add
mov
mov
lock
cs
mov
add
or
sub
jbe
fisttpl
lcall
into
sub
sbb
cli
fisubrs
sbb
mov
dec
and
mov
out
or
adc
pushl
ret
call
push
inc
mov
fs
fcomip
bound
dec
mov
mov
sub
sbb
jg
add
sub
inc
sbbb
test
push
gs
lock
les
mov
hlt
lds
ja
std
decl
imul
mov
adc
mov
jecxz
lea
adc
mov
jmp
mov
xor
xor
enter
push
xlat
stos
add
pushl
add
xchg
insb
xor
xorl
sbb
cltd
adc
jl
sar
pop
loopne
xor
push
dec
out
cs
sub
lods
mov
lods
pusha
cmp
out
pop
pushf
xchg
in
stos
xlat
mov
mov
outsl
dec
sti
shl
lret
lods
cwtl
mov
call
incl
push
call
cmpsb
jp
jecxz
int3
int3
push
pop
jmp
hlt
jmp
cmp
dec
mov
add
lock
or
push
or
inc
pop
adc
add
mov
jbe
incl
and
jo
push
pop
xchg
and
mov
dec
stc
fs
dec
pusha
fsubp
pop
fdivrp
adc
adc
xor
cmp
inc
cmp
int3
call
daa
jbe
dec
js
push
push
cmp
and
lea
pop
repnz
lcall
lock
pusha
xchg
cmpsl
cs
jbe
adc
jle
sub
incl
sbb
ss
dec
les
dec
lds
sar
push
xchg
mov
fndisi(8087
and
call
fucom
sahf
int
mov
push
lcall
jnp
dec
ja
sub
jno
jle
incl
or
inc
jbe
cmp
fnstsw
inc
adc
jge
xor
push
out
xor
mov
fisttps
sbb
mov
iret
xor
dec
mov
mov
ja
mov
push
xchg
insl
mov
sbb
gs
cmp
jno
pop
call
pop
ret
pop
jecxz
cli
enter
jns
sub
xchg
mov
xor
int3
stos
jmp
inc
pop
adc
decl
mov
xchg
add
mov
xchg
fildl
incl
adc
cmpsl
sbb
testl
inc
jmp
repnz
and
rolb
jmp
adc
mov
shlb
and
pusha
sbb
and
pushl
inc
ficoms
and
mov
ss
das
out
push
orb
fists
movsb
adc
decl
dec
imul
jae
xorb
clc
mov
inc
jl
dec
mov
pop
loopne
addb
out
dec
sbb
loope
sub
lock
icebp
std
outsb
aam
cmp
xchg
push
cmp
mov
lock
mov
pusha
inc
add
sbb
cmpb
mov
dec
daa
hlt
push
outsb
fmuls
ljmp
into
adc
xchg
lea
pop
sbb
sub
push
push
cmp
xor
mov
rolb
xchg
out
mov
xchg
sub
hlt
jne
and
or
mov
outsb
cmp
fistpl
inc
mov
out
xchg
incl
lods
xor
xchg
ljmp
add
aam
aam
push
lods
dec
std
mov
clc
pop
mov
out
mov
imul
imul
je
cwtl
mov
cmp
cmc
lock
fdiv
stos
jle
adc
out
arpl
and
sub
pop
mov
ljmp
shr
fnstenv
test
sbb
imul
jmp
scas
push
jnp
fdivrs
adc
sarb
ret
enter
sbb
cmp
xchg
daa
ljmp
cmp
xchg
jmp
stos
cmp
mov
in
adc
lcall
mov
cli
jnp
loop
xorb
mov
loopne
call
add
into
cmp
sti
fidivs
mov
decl
add
pop
lock
cmp
int3
sarb
ret
or
mov
adc
rol
fimuls
lods
aaa
mov
mov
loope
sbb
mov
jl
lcall
pop
fimuls
sbb
into
hlt
nop
lea
and
push
push
leave
les
jmp
inc
lret
imul
fcomps
scas
mov
shl
sub
xor
stos
imul
push
pushl
cs
mov
and
cwtl
cmpsb
movsb
jae
sub
mov
aam
push
das
or
mov
movsb
test
scas
js
xchg
lock
or
sbb
push
dec
mov
insb
std
ljmp
lds
mov
mov
cld
xorb
aaa
popa
cld
and
mov
enter
sbbl
loope
call
add
push
pusha
jg
leave
lea
or
add
cmp
jae
loopne
lods
push
dec
es
decl
lcall
add
pushl
mov
and
cmpsl
insl
popf
int
sub
xor
sar
dec
mov
mov
les
imul
je
xchg
pop
sbb
adc
call
rolb
testb
inc
add
xlat
pop
mov
xor
or
and
decl
sarb
inc
mov
pop
add
xor
mov
mov
lahf
sub
cwtl
loop
call
push
fsubs
call
sbb
adc
mov
cmp
les
jp
repz
inc
add
inc
outsl
push
adc
jmp
ret
roll
fidivl
mov
jg
testb
in
ret
das
clc
les
in
xor
loopne
xchg
add
inc
sbb
mov
add
pushl
sbb
filds
inc
or
dec
and
int3
mov
push
adc
jge
in
mov
fwait
ja
cltd
mov
xor
les
xlat
icebp
incl
xor
add
dec
mov
push
ss
xchg
inc
iret
ljmp
call
out
rorl
add
or
pushf
sbb
mov
dec
mov
push
jae
repnz
dec
pop
xor
decl
outsl
stc
add
cli
push
jmp
push
lock
mov
push
cmpsb
rolb
cld
stos
in
les
lcall
adc
test
lods
lret
add
ljmp
dec
loope
push
les
scas
test
push
scas
xchg
xchg
and
mov
in
sbb
pop
fsubs
adc
dec
test
and
shl
ds
and
add
fstpt
or
jno
jnp
sbb
xor
cld
mov
add
inc
into
mov
addl
call
add
adc
fwait
int3
fiaddl
pop
cmp
mov
push
mov
adc
mov
decb
aaa
inc
sub
call
mov
pop
mov
and
test
ss
insl
jb
clc
xor
stc
int3
loopne
insb
or
ret
dec
mov
lcall
inc
inc
movsb
jno
es
or
pop
repz
add
or
call
nop
jnp
cmpsb
mov
cmp
xlat
mov
subb
movsl
push
rclb
incl
test
push
sbb
in
and
imul
aaa
aam
mov
push
bound
enter
xor
ljmp
push
xlat
add
pusha
xor
xchg
push
add
pop
mov
pop
pop
inc
dec
clc
fistps
outsl
xor
adc
ficoml
repnz
jmp
add
adc
out
in
cmp
ljmp
shlb
ds
mov
mov
dec
icebp
or
test
fwait
cmp
jl
or
pop
inc
or
cwtl
jle
pusha
jp
dec
imulb
xor
sub
sub
dec
dec
mov
and
cmc
sar
cltd
xchg
jg
filds
call
insl
aad
or
lods
rclb
cmpsb
hlt
jg
lods
inc
pop
push
int3
adc
sub
imul
movsl
xor
sub
psubd
and
fsub
cmp
inc
lods
arpl
push
pop
int3
inc
jg
mov
imul
push
mov
cmc
lods
outsb
push
stos
or
mov
fcom
pop
xor
ret
stos
xorl
mov
push
push
scas
cmpsb
in
cli
pop
enter
insl
addr16
and
loop
ljmp
test
adc
push
filds
shll
aas
mov
mov
xchg
cmp
into
adc
lock
shlb
addr16
adc
aas
sahf
sar
pushl
add
inc
insb
icebp
popa
gs
rcrb
hlt
js
push
in
and
adc
and
jecxz
pushl
aaa
dec
lods
clc
mov
and
sub
loopne
jg
sbb
jo
ret
push
nop
pop
fcmove
xchg
mov
pushl
ret
sbb
sbb
mov
inc
int
dec
fistpll
mov
cwtl
call
xor
add
sbb
decl
adc
adc
dec
repnz
ret
and
sub
pushf
cmpsl
cmp
decl
les
shrb
mov
xor
adc
push
cmp
and
rcll
lods
push
xchg
sub
je
fdivr
mov
xchg
pop
adc
xor
dec
push
enter
in
dec
xchg
xchg
push
mov
aas
mov
xchg
dec
cld
fsubl
mov
mov
sbb
cmpsb
xor
jmp
test
inc
push
mov
test
pop
in
push
jge
or
les
cmp
mov
or
pop
roll
sbb
cmp
fildll
sub
sahf
roll
xchg
out
cmpsl
sub
cmp
xchg
mov
in
incl
pop
jo
push
mov
mov
cmp
pop
mov
aam
dec
xor
cmc
ljmp
pop
bswap
and
leave
mov
nop
mov
test
lods
cmpsb
cmc
cmp
ret
push
or
outsl
popa
pop
int3
shll
ljmp
js
rolb
dec
fildl
mov
cmp
ds
test
push
mov
cli
xorb
jg
xchg
frstor
popf
pop
inc
movsb
outsl
jl
pop
rorl
push
cwtl
leave
andl
outsb
pushl
or
add
sub
test
lahf
and
mov
xor
pusha
jne
sub
fcoml
inc
or
sarl
fbld
in
out
movsl
cmp
les
jmp
clc
xor
dec
pushl
mov
js
or
jmp
lret
xor
xor
xor
and
mov
jp
adc
dec
cmpsb
loop
dec
cmp
mov
push
test
xchg
cmpsl
outsl
addr16
mov
movsl
sbb
dec
dec
or
add
mov
sbb
imul
fwait
and
cs
or
mov
mov
mov
pop
jp
cs
jne
jle
ljmp
lahf
cli
shll
jp
jg
enter
es
jmp
xchg
push
cmpsl
xchg
push
cs
jg
mov
cltd
or
pop
pop
xor
mov
out
loope
sbb
and
inc
std
xor
cmpb
loope
call
push
sahf
decl
push
jecxz
out
test
push
dec
imul
insb
add
imul
ljmp
in
push
dec
std
clc
jmp
popf
insb
test
xchg
iret
std
in
pop
pop
mov
lret
dec
incl
cld
incl
cmp
dec
fidivrs
das
test
xchg
pop
pop
add
jle
cmp
jne
jmp
stc
mov
sub
or
test
pop
lcall
aaa
js
mov
daa
fsts
mov
add
cmpsl
aad
cmpsl
ja
cmpsl
mov
call
and
aas
stc
popf
popf
repz
stos
mov
jae
sbb
sbb
mov
ss
xor
lcall
inc
loop
daa
cltd
fwait
mov
sub
flds
cmpsl
mov
inc
sbb
addl
decl
mov
or
orl
push
nop
jg
cli
ret
das
imul
mov
mov
cmpsl
jb
xor
mov
imul
mov
icebp
jns
adc
mov
mov
pushl
pop
orl
push
mov
jecxz
sarb
leave
xor
nop
insb
clc
mov
in
pushl
repz
dec
jmp
push
adc
lcall
enter
inc
pusha
fs
add
jmp
pusha
xchg
in
mov
mov
or
in
scas
incl
adc
repz
adc
insb
enter
addb
mov
cli
fcomip
aaa
in
push
out
test
mov
mov
incl
or
or
mov
repz
or
rcl
sub
sbb
call
orl
xor
sbb
add
lcall
sbb
mov
sub
popf
outsl
cmp
sar
jmp
jl
pop
sbb
out
push
lcall
lods
xchg
push
cld
call
inc
cmpsl
imul
popf
movsl
mov
and
popf
andb
adc
fbstp
jno
sarl
push
ret
cwtl
loop
dec
fldcw
dec
shll
jmp
mov
xor
push
mov
mov
lods
add
fimull
outsl
stos
outsl
leave
mov
adc
sub
pop
xor
fsubrs
inc
mov
inc
jl
fiaddl
xchg
adc
call
idivb
mov
pop
add
inc
int3
adc
lds
je
pop
jg
adc
movsb
dec
pop
pop
sbbl
int3
lods
sbb
int3
mov
dec
in
dec
lret
les
int3
ret
movsb
mov
add
push
add
enter
int
and
incl
pop
cmp
bound
orl
lods
sbb
call
call
call
push
rolb
loopne
jnp
sbbb
subl
icebp
inc
sbb
test
add
notl
mov
cmpl
insb
cs
mov
mov
loope
xchg
mov
inc
or
adc
sbb
scas
mov
and
pusha
add
bound
arpl
cmpsl
add
jmp
mov
scas
popa
adcb
faddl
pop
inc
mov
jno
cmp
addl
add
adc
incl
jne
mov
dec
xchg
cmp
inc
add
jecxz
or
push
push
jnp
jae
es
adc
mov
mov
pop
call
ja
adc
cwtl
xor
rcrb
sub
cmpsb
mov
imul
cmp
push
in
rorl
adc
pop
or
aas
hlt
out
mov
inc
mov
mov
clc
jmp
xchg
lret
shrb
mov
add
call
pop
sbb
out
test
and
cld
push
aas
add
les
decl
cmpsb
test
pusha
dec
iret
jl
ret
dec
int3
aam
inc
cmp
cli
jo
dec
shll
mov
les
or
dec
dec
pop
mov
fs
or
pop
ret
dec
shr
mov
and
cmp
dec
mov
loop
loop,pt
and
sbb
in
mov
mov
dec
fcmovnu
xor
clc
incl
sbb
iret
push
repnz
push
cmc
mov
add
insb
jno
mov
ljmp
divb
js
dec
std
push
mov
mov
clc
int3
jnp
andl
ljmp
xchg
fwait
pop
incl
mov
jg
scas
dec
sbb
scas
mov
mov
test
jmp
adc
or
mov
add
pop
dec
sbb
or
jmp
fadds
cltd
mov
cmpl
fadd
xor
sbb
push
cwtl
sbb
loope
insl
test
add
inc
clc
ljmp
mov
push
dec
cmpsl
inc
mov
es
lret
jne
jmp
hlt
mov
cld
inc
dec
mov
je
cmp
jo
mov
mov
xor
or
lret
ret
mov
xor
mov
mov
mov
cmpl
adc
das
nop
add
test
ds
fcmovnb
cmp
les
pop
xorl
cmp
mov
stos
fldt
int3
mov
aam
xor
dec
aad
nop
fstpt
pushl
rorb
lahf
sub
or
pop
inc
inc
push
ret
int
into
sbb
int
mov
decl
inc
into
addl
xor
xchg
pop
dec
or
dec
sub
inc
cwtl
cmp
add
std
call
mov
lahf
flds
cmp
cwtl
pop
jno
xchg
cmpl
lods
clc
ljmp
test
mov
xchg
dec
mov
testl
insb
call
incl
iret
add
andb
dec
pop
movsl
fwait
test
and
incl
adc
adc
pop
sbb
in
movsb
in
sub
add
xchg
adc
cmp
and
pop
sbb
xor
ficompl
adc
adc
pop
js
mov
push
adc
or
pop
loopne
sub
or
mov
xchg
sbb
mov
xchg
fildll
ret
adc
orb
lret
or
rcrb
pop
add
cld
sub
loope
clc
sub
insb
xor
add
mov
mov
sbb
enter
adc
xor
lcall
mov
push
pushf
or
in
sub
scas
cmp
lcall
cltd
mov
test
rorl
and
sbb
xor
outsl
xor
dec
inc
push
aaa
inc
jle
jg
cmp
add
cmp
arpl
xchg
jecxz
jbe
jbe
jecxz
xchg
jecxz,pn
ficompl
adc
inc
ds
js
insb
jo
push
sbb
enter
dec
outsb
in
rolb
sbb
insb
dec
out
lcall
adc
sahf
add
cwtl
lcall
add
and
andb
aad
rcrb
mov
push
push
sahf
aad
cmp
xchg
jno
cmc
cmc
fldl
ljmp
jmp
insb
xchg
fcomps
call
adc
pop
movsb
sub
mov
mov
fs
ljmp
ljmp
popl
add
adcl
mov
fs
and
add
fbstp
push
mov
or
add
add
xchg
jg
mov
and
cmp
das
sbb
pusha
mov
test
xor
mov
adc
sbb
hlt
jg
call
insl
fcomps
xchg
cmp
adc
sbb
add
hlt
test
test
push
dec
stc
test
popf
mov
dec
popf
int
cmpsb
loopne
mov
jmp
rorb
add
sub
or
aaa
mov
ret
jne
or
sarl
clc
call
xor
push
int
loop
mov
js
ret
jmp
dec
pop
cmp
lea
jmp
mov
xchg
std
aaa
cltd
and
adcb
mov
rclb
pusha
adc
mov
shll
les
les
jmp
aam
mov
pop
push
scas
in
dec
xor
inc
push
dec
in
scas
insb
push
ds
inc
ja
xorb
ss
ljmp
push
gs
ds
push
inc
mov
or
dec
je
enter
push
inc
ret
sub
sbb
dec
dec
call
xlat
adc
inc
inc
dec
movsb
pop
xor
or
add
cli
lcall
xchg
lcall
mov
loopne
push
xor
jae
cmc
pusha
nop
clc
inc
dec
or
cmpsb
sub
push
outsl
dec
mov
jae
or
scas
hlt
lcall
mov
jmp
jle
or
or
xlat
stc
xchg
xlat
clc
inc
mov
xor
push
jp
fistps
xor
addl
vmovupd
popf
jle
imul
mov
pop
jne
mov
pusha
adc
das
test
ss
pmulhw
decb
sub
dec
maskmovq
push
and
cmp
xchg
jg
jge,pt
popf
scas
mov
push
pop
mov
mov
orl
mov
or
xchg
loopne
adc
mov
sub
push
inc
outsl
pop
mov
mov
mov
inc
xchg
lea
mov
push
mov
sub
add
cmpb
pop
pusha
call
rcrb
mov
sbb
in
adc
jae
xchg
xor
sarb
pop
insb
jg
sub
push
xchg
hlt
imul
test
add
in
inc
xchg
in
xor
jmp
cmp
push
daa
dec
ret
mov
xor
les
mov
cmc
in
lds
adc
shl
vcvtdq2ps
aam
mov
es
and
cmp
sub
lcall
add
loopne
or
jmp
inc
xrelease
or
ljmp
outsb
clc
into
repz
cs
lret
into
in
clc
fstpl
aas
js
mov
je
add
divl
stc
jbe
sub
add
ljmp
clc
repnz
push
lods
ss
adc
mov
dec
pop
addr16
mov
lret
icebp
lcall
cmp
into
mov
scas
xchg
and
lods
pop
incl
call
cmpsb
or
xor
jb
adc
je
add
pop
mov
repnz
addb
jl
cmp
lcall
add
icebp
jle
mov
cmp
js
jp
pop
cwtl
pop
xchg
decl
and
call
daa
push
aad
sub
sub
pop
nop
jb
pushf
shlb
jno
lock
xor
scas
xchg
hlt
jmp
repz
dec
lods
push
xchg
jne
pop
lods
enter
adc
inc
or
adc
or
and
add
mov
rolb
jae
or
adc
cmp
adcl
lea
adc
outsb
mov
int
ljmp
xlat
cld
int3
out
into
dec
insb
sbb
hlt
inc
das
cmc
sarb
enter
fstpt
sub
xchg
jl
jge
scas
add
xchg
lahf
jge
enter
jg
lods
outsl
and
sbb
das
jle
clc
add
jg
loop
push
adc
psubsb
pop
add
inc
hlt
push
arpl
les
mov
jbe
fs
data16
add
fistpll
sbb
out
cli
pushl
test
xchg
sub
sub
pusha
insl
test
sbb
jmp
jmp
pop
in
pop
scas
add
sub
into
xchg
test
mov
decl
mov
inc
je
shll
or
enter
jnp
add
std
decl
je
rcrb
loopne
or
or
das
push
pop
shlb
sbb
aaa
push
cmc
jns
out
xor
lea
xor
sahf
adc
dec
sbb
xor
push
sbb
std
cltd
jae
sbb
cmp
nop
jne
int
mov
out
lods
pushl
xchg
push
fdivl
imul
mov
shrl
pop
sbb
jmp
sbb
out
cmp
lret
pop
pop
scas
pop
sbb
out
push
mov
inc
cmp
jae
mov
sub
retw
js
addr16
cmp
out
call
insl
sub
sub
push
scas
sub
mov
xor
movsl
inc
frstor
jl
lcall
mov
adc
iret
pushl
cli
cmc
ljmp
mov
xlat
scas
and
dec
add
daa
mov
jle,pt
jl
sbb
cmp
pop
push
xchg
sbb
xchg
inc
es
cmpb
loope
or
mov
gs
repnz
jno
push
push
and
loope
push
push
roll
decl
mov
push
loope
cmp
or
mov
adcb
jae
roll
or
addb
inc
or
xchg
and
rolb
ljmp
dec
cmp
sbb
lods
mov
cs
out
or
xchg
stc
insb
or
jmp
sbb
mov
flds
loop
and
js
fistps
lahf
pop
clc
flds
inc
sbb
adc
test
aaa
ficomps
xchg
mov
loope
or
loopne
xchg
fdivs
mov
test
jmp
jmp
add
mov
add
rolb
push
decl
ret
push
xor
fiaddl
add
mov
push
scas
mov
jg
sub
ljmp
pop
push
pop
sbb
inc
outsb
cli
fistl
add
ret
adc
mov
outsb
mov
xor
add
outsb
nop
ficoml
adc
jle
dec
fimull
in
adcl
mov
jne
adc
out
clc
jg
push
cmp
push
enter
add
xchg
imul
cmp
lcall
xor
enter
adc
fwait
cltd
mov
les
inc
es
mov
es
pushl
int
cmp
jnp
push
fs
mov
push
fstps
sub
pop
pop
cwtl
aad
mov
pop
jmp
jmp
xor
lret
pop
icebp
decl
iret
inc
pop
pop
or
inc
fs
jne
fwait
mov
int
jl
roll
jle
aad
mov
pop
ja
mov
push
xor
or
jmp
mov
and
cmp
mov
mov
add
outsl
inc
shrb
or
pop
decl
adc
sub
cmp
xor
push
mov
test
call
cmp
iret
movsb
add
jmp
xor
and
mov
outsw
jge
lea
push
lea
loop
pop
out
jno
dec
cmpsl
sahf
sub
jmp
and
adc
inc
test
cs
cmp
mov
in
cmpsb
inc
int3
and
fildll
call
cli
aam
mov
inc
inc
adc
mov
jns
jecxz
stos
repnz
xorl
push
fcomip
pop
sbb
xor
test
inc
scas
out
loop
cmp
push
sbb
adc
jmp
mov
pop
inc
adc
jg
and
mov
sarb
stos
and
or
pushl
mov
jns
dec
pop
loop
pushf
mov
pop
cmp
hlt
loopne
sub
ret
es
jge
jmp
std
sbb
je
or
clc
ret
loopne
pop
pusha
mov
lds
dec
pop
dec
jecxz
lret
in
addr16
mov
call
lahf
ret
clc
movsl
arpl
mov
push
adc
mov
out
fldl
xor
dec
call
inc
ss
es
xchg
fwait
rorl
push
ret
fs
dec
test
sbb
filds
push
jmp
insb
add
push
push
mov
pop
inc
nop
cli
cmp
mov
aaa
mov
sub
jmp
sbbl
fucom
aas
jnp
fs
sub
dec
imul
xor
sbb
add
into
sbb
lock
or
inc
push
lea
pushl
mov
js
xchg
daa
and
mov
xor
mov
enter
pop
ljmp
das
mov
lods
orb
adc
fcomps
nop
orb
inc
xchg
or
and
pop
push
add
loope
push
out
nop
sbbl
add
push
sub
pop
std
imul
addr16
loop
pop
stc
cli
mov
pusha
add
dec
hlt
push
jne
test
fists
fimuls
test
jmp
xchg
or
loopne
inc
aad
pop
push
inc
push
push
pop
inc
push
pushl
mov
push
das
adc
push
add
mov
or
rclb
loopne
and
loop
and
mov
dec
sarl
and
jb
or
jg
push
xor
pop
mov
idivb
mov
mov
mov
es
lea
dec
test
call
js
and
sahf
fsubrs
add
decl
xor
dec
dec
data16
das
loop
daa
mov
ja
clc
call
xorb
lcall
pusha
clc
cmp
sbb
or
dec
mov
int
xor
inc
mov
and
ljmp
loope
lret
mov
adc
cltd
int
out
dec
add
xor
mov
and
divb
or
lea
xor
mov
mov
add
cmp
pop
insl
jb
pop
ss
push
mov
jg
xchg
sahf
add
data16
jl
mov
adc
out
jl
mov
out
aad
ljmp
pop
sbb
push
sub
out
test
inc
lods
movsl
cmp
lcall
aam
and
subb
inc
mov
test
or
cltd
cld
ljmp
adc
mov
inc
xchg
jl
sub
insb
jle
adc
adc
xchg
pop
xchg
out
fisttps
cmp
cmpsb
addb
cmpsl
push
push
xchg
jle
movsl
xlat
jecxz
cmc
call
lock
push
in
rolb
push
pushf
sub
int
cld
repnz
fists
lret
cli
daa
or
fisubrl
jae
sbb
mov
jmp
mov
mov
push
sbb
inc
pop
or
andb
incl
sub
jp
stc
clc
sarb
rorl
push
or
shr
sbb
and
cwtl
xchg
out
pushl
movb
and
sub
add
ljmp
mov
pop
dec
je
mov
pop
shll
incl
fsubrs
push
insb
cmp
lods
jmp
js
out
insb
sub
add
decl
fcoms
xchg
xlat
lock
cmpsl
orl
jecxz
sbb
sbb
cwtl
iret
cmp
ss
test
clc
dec
pop
outsb
arpl
sbb
mov
fdivrl
mov
push
pop
add
mov
jo
leave
lods
loop
es
fdivl
mov
mov
bound
lret
push
sbb
fstps
outsl
pop
mov
dec
add
sub
adc
pop
divb
enter
pop
add
adc
icebp
inc
xchg
fists
cmp
into
pop
or
pushl
sub
dec
dec
cmp
sbb
outsb
sub
flds
jb
ficoml
add
sbb
inc
inc
adc
clc
mov
inc
int
bound
dec
adc
in
dec
pop
sub
rcrb
mov
cs
idivl
int
add
and
xor
jnp
movsb
jg
rcrb
loope
xor
xchg
jl
test
call
std
mov
xor
int3
adcl
ret
pop
add
jo
lods
adc
adc
clc
call
cld
push
fwait
sbb
push
and
loopne
pop
test
push
push
ud2
scas
pop
ljmp
pop
data16
push
push
enter
sub
mov
scas
ljmp
stc
ret
pop
and
or
xchg
sbb
aad
sbb
fs
les
call
jp
adc
add
int
mov
sarb
lds
inc
mov
fadd
incl
sbb
push
push
pop
test
xchg
jae
inc
cmp
pop
inc
push
test
movsl
and
ljmp
mov
vpmaddwd
outsb
adc
pop
repnz
leave
icebp
fcmovne
add
rcrb
fs
or
call
lret
imul
movsl
xchg
push
xchg
jnp
dec
aaa
popa
or
lods
fadds
lcall
push
xchg
pop
or
push
xor
clc
pushf
fst
cmp
mov
into
and
decl
popf
sbb
mov
sbb
xchg
jno
aad
or
fsubp
filds
lea
mov
adc
inc
fdivr
mov
and
and
cmpb
and
int
jmp
cmpb
rcr
pop
add
inc
sub
pop
sub
cmpl
mov
xchg
push
or
xor
xchg
or
fs
popl
je
adc
in
aaa
cld
inc
imul
add
cmp
inc
test
add
nop
adc
push
sbb
popa
pop
mov
and
stc
test
popf
aad
xor
push
and
frstor
mov
mov
sub
subl
pop
js
in
fstl
mov
push
add
adc
pop
cmc
decl
lea
in
sbb
test
call
xor
roll
addl
pop
inc
sub
lcall
adc
mov
inc
inc
enter
add
mov
push
or
cld
test
je
add
cld
inc
sbb
jge
test
test
adc
adc
push
fisttpl
cmpb
test
insl
test
mov
fbld
adc
xchg
sbb
aam
and
loopne
popa
push
stos
push
ss
iret
ror
adc
jmp
cmp
outsl
and
sbb
inc
lret
mov
leave
sar
mov
sbb
es
mov
or
and
adc
int
xchg
push
xor
jo
add
jmp
loope
pop
out
enter
pop
or
pop
dec
push
lods
inc
xchg
lcall
orl
mov
fld
insb
mov
adc
sub
pusha
dec
out
push
outsl
and
jmp
leave
dec
cwtl
sbb
inc
in
hlt
and
mov
mov
xchg
jle
imul
inc
data16
inc
adc
push
jmp
dec
adc
xor
mov
cwtl
bound
or
mov
inc
and
pusha
push
icebp
or
lock
or
ljmp
sub
cmp
dec
popa
sahf
dec
popf
lcall
divl
sub
pushf
mov
sti
xchg
push
dec
in
push
imul
movsl
sahf
in
jns
cmp
adc
or
nop
jo
test
enter
jmp
push
push
sub
enter
mov
cmpl
call
cwtl
push
push
sbb
fbstp
idiv
decl
lret
idivl
push
dec
dec
cli
imul
xor
inc
loopne
or
mov
adc
std
push
push
pop
add
mov
lahf
dec
mov
mov
dec
jg
sub
adc
mov
aam
sbb
dec
imul
mov
add
dec
sarb
in
in
mov
push
mov
mov
inc
bound
mov
dec
inc
jmp
outsl
or
pop
roll
call
pop
std
jmp
insb
into
sbb
xlat
pop
rcr
adc
loop
or
mov
int
call
xor
ror
roll
es
into
jne
arpl
pop
jge
movsl
pusha
cmp
jo
cltd
sarb
ss
sub
cwtl
cmpsb
or
pushl
cmpsb
mov
je
gs
xchg
adc
mov
test
aaa
sub
sbb
fcompl
mov
jo
jg
shll
sub
cmp
mov
popa
jmp
mov
mov
mov
loop
rorl
inc
shl
adcl
hlt
ss
inc
sbb
or
lock
ret
sub
dec
and
imul
push
mov
xchg
or
lods
sub
sub
lcall
ds
cltd
cmp
sti
in
adc
add
or
jecxz
sub
js
push
adc
push
mov
add
or
movsl
sar
and
inc
cmpl
or
scas
cli
cld
xorl
sarb
add
test
pop
sbbl
lock
clc
decl
pop
icebp
xchg
pop
cmc
xchg
mov
lcall
adc
mov
pusha
fs
sarb
mov
lcall
adc
add
cmp
std
dec
inc
fldt
rol
nop
push
mov
inc
xchg
decl
pop
stos
shrl
mov
sbb
inc
xchg
push
loop
xchg
ret
mov
add
xor
jns
adc
sub
pop
cmc
call
jno
xchg
iret
mov
rorb
movsl
lcall
cwtl
push
into
pusha
pop
xchg
fadds
outsb
sbb
inc
sbb
subb
xor
cmpsb
orb
arpl
outsl
push
fsub
les
jo
mov
movsl
lods
mov
jg
movsb
in
and
insl
mov
adc
or
jg
inc
jmp
mov
mov
test
jmp
sub
jb
out
sbb
jmp
repnz
scas
cmp
xor
push
pop
cmc
in
movsb
jo
stos
outsb
push
into
mov
xchg
xchg
in
popf
and
inc
shll
decl
xchg
sbb
jbe
pop
xor
mov
notb
add
pushl
clc
add
dec
fwait
addl
inc
cmp
xor
inc
dec
decl
jge
and
lahf
mov
jb
cmp
and
jnp
in
mov
add
push
in
fimuls
or
add
out
mov
and
add
mov
fs
pop
nop
decb
cli
push
test
inc
stos
loope
decl
mov
add
dec
scas
mov
sbb
lret
mov
inc
lods
imul
mov
fmuls
dec
adc
gs
ljmp
xchg
bound
js
mov
xor
push
aam
push
and
pop
push
mov
clc
call
es
pop
in
cmp
mov
fstpl
mov
mov
rcr
xchg
mov
out
mov
ljmp
ljmp
or
push
aam
roll
mov
inc
fldl
pop
mov
jmp
jge
cmpsb
cmp
pop
mov
sub
call
rorl
imul
sub
shlb
pop
adc
sbb
xor
jmp
xor
fcoms
mov
jmp
xchg
fistpl
int
adc
mov
decl
sub
jmp
cmp
push
cmp
pop
mov
mov
add
jl
jecxz
dec
pop
sub
xchg
sbb
mov
mov
pushl
mov
inc
xchg
call
fidivrs
sbb
or
jmp
push
xor
fisttps
lea
mov
pusha
into
adc
pop
push
std
decl
push
addb
sbb
ret
jo
movsb
xor
pop
decl
pop
icebp
jmp
inc
mov
fisttpll
or
xor
pop
int3
lock
cltd
dec
subb
push
add
add
jecxz
jp
les
lock
jbe
push
adc
mov
mov
call
adc
adc
jnp
adc
lods
insb
add
cli
mov
mov
inc
inc
inc
mov
pushl
jl
fadds
sub
pop
push
gs
inc
ljmp
sar
xchg
fdivl
std
les
pusha
mov
push
push
fld
push
inc
mov
les
jno
pusha
insb
lock
into
jmp
movsl
push
sbb
jne
fisttpl
in
data16
and
aam
sub
mov
mov
mov
mov
mov
flds
es
dec
push
lcall
into
cmp
push
stos
pop
test
mov
pop
out
out
out
ljmp
push
xor
xchg
jmp
adc
lea
add
outsb
stos
lret
mov
in
call
mov
pop
js
mov
jle
pusha
stos
adc
or
incl
and
out
pop
mov
mov
or
scas
add
xor
stos
inc
sbb
sbb
lcall
iret
push
xrelease
dec
dec
inc
leave
xorl
test
or
mov
movsb
in
inc
xor
test
xchg
xchg
add
ret
mov
leave
fidivl
xor
es
test
jg
sar
add
movsb
add
jg
in
fstps
cmp
sub
ret
or
xor
ffreep
js
adc
or
push
cld
dec
sbb
fsts
add
orl
xchg
call
inc
inc
sub
add
pop
sbb
call
cmp
mov
or
push
aad
cltd
and
push
mov
adc
dec
dec
sub
mov
jmp
sar
and
insl
mov
xor
sahf
outsb
pop
out
jg
sbb
pop
pop
sbb
repnz
pop
mov
outsl
pushf
pop
push
xchg
mov
repnz
jg
std
rcl
push
enter
popf
loop
mov
pop
sbbb
hlt
xchg
or
mov
ds
cmp
push
in
pop
add
sbb
pop
sbb
outsl
aam
popa
icebp
push
scas
mov
jg
data16
ja
fwait
mov
sbb
push
push
mov
mov
outsl
clc
call
bound
jns
out
repz
jae
cmpsb
aaa
mov
jg
insb
xchg
jg
xchg
cmp
sarb
push
idiv
push
push
sti
or
cmp
sub
push
hlt
cmp
std
ja
inc
mov
cmp
or
cmp
in
ret
fistpll
pusha
loop
les
cmp
inc
mov
add
icebp
enter
inc
call
lock
test
xchg
lock
adc
clc
das
jbe
push
incl
mov
xchg
decl
in
xchg
aaa
cmp
loop
es
arpl
inc
mov
lock
adc
sbb
movsb
out
pushl
mov
adc
dec
icebp
idivl
dec
lods
mov
xor
push
mov
push
aad
xchg
adc
sar
jg
rorb
push
imul
mov
pop
insl
pop
cli
pop
cmc
lods
sub
or
inc
adc
ja
das
xchg
dec
dec
xchg
dec
inc
sbb
out
mov
rcll
insl
push
lcall
mov
add
repz
lcall
pop
cmp
in
outsb
mov
ljmp
mov
cmpb
push
push
call
jp
add
jp
xchg
add
fdivrp
mov
loope
and
test
out
mov
cld
push
clc
incl
hlt
pushf
cmp
outsb
jl
gs
stos
push
les
adc
or
enter
mov
jl
xor
jns
mov
sti
dec
jg
sub
mov
push
ss
clc
xchg
sti
mov
xchg
sub
jmp
dec
int
xor
test
jnp
into
or
fiaddl
les
shlb
int
push
or
mov
subb
and
xor
inc
xor
mov
pop
adc
adc
insb
pop
adc
xchg
xor
dec
mov
pop
pop
jno
rolb
ljmp
lcall
aaa
sbb
iret
sub
je
mov
lcall
lock
fists
lds
in
cwtl
xor
mov
pusha
arpl
test
call
sbb
lcall
or
hlt
insl
mov
cmp
insl
mov
dec
nop
pop
not
jb
sarb
jnp
inc
loopne
vaddps
stc
repnz
or
sti
call
or
adc
mov
out
mov
jae
in
jnp
mov
pop
hlt
sbb
inc
pusha
fs
or
cmp
add
loope
or
cltd
cmp
cmp
mov
fcompl
lcall
mov
ret
in
lahf
imull
lahf
int
or
out
inc
mov
mov
cmp
je
cmp
mov
fcmovne
inc
dec
fisttpl
or
inc
das
mov
mov
cmp
push
inc
adc
inc
hlt
xor
or
nop
aaa
std
pushl
inc
or
roll
or
je
out
cmp
push
mov
mov
negb
adc
inc
adc
jno
je
inc
mov
sub
rolb
sbb
pop
add
fsubrs
dec
xor
push
mov
dec
jae
xor
fisttpll
add
xchg
mov
xor
clc
aam
incl
rorb
aam
push
add
add
adc
inc
repnz
xor
cmp
xor
xchg
ss
movsl
lahf
cmp
or
push
incl
or
cmpsb
dec
or
dec
aad
pop
and
or
dec
call
mov
rcll
cmp
aad
stos
cmp
dec
and
pop
xchg
xchg
dec
in
clc
lcall
cmpsb
adcb
lcall
jo
pop
mov
xchg
add
addl
mov
sahf
or
filds
cmpsb
jns
mov
and
insb
ljmp
add
pop
mov
or
jmp
mov
inc
shl
sub
lcall
loop
and
mov
add
mov
fidivrs
pop
lcall
loop
push
into
lahf
cltd
xchg
pop
out
lods
mov
xlat
out
ljmp
call
lcall
imul
test
std
sbb
sar
mov
rcll
insb
adc
and
sbb
push
dec
cmp
icebp
pop
mov
sbb
lock
sti
adc
test
adc
sbb
ror
das
incl
loopne
fwait
sbb
loopne
enter
mov
mov
aaa
insb
sbb
cmp
add
fisttpl
aam
or
into
ss
insl
push
add
fadds
mov
jecxz,pt
shrb
scas
out
push
jne
pushl
scas
mov
mov
out
push
push
lret
push
cmpsb
mov
dec
incl
add
mov
push
pop
xor
fisubs
sbbl
decl
and
fcoml
mov
in
pop
jmp
mov
icebp
sbb
shlb
pop
add
test
push
or
mov
jg
xchg
loopne
mov
dec
and
cmp
xor
pusha
mov
pop
mov
push
js
ret
mov
sub
pop
mov
push
jae
fsubs
add
push
push
pop
push
sbb
add
fdivr
mov
push
cltd
mov
inc
xor
call
and
or
incl
test
call
or
cs
gs
xor
shlb
movl
mov
mov
sbbl
or
call
out
mov
xor
push
rclb
mov
enter
fidivrl
sub
jno
js
pushf
dec
xchg
and
mov
inc
mov
pop
repnz
push
test
lcall
shlb
inc
shl
push
jp
test
adc
jp
adc
pop
in
cli
jmpw
jo
outsb
sub
and
lret
pushl
adc
ja
and
sub
addr16
sbb
cmp
decl
pop
incl
adc
mov
mov
aad
dec
faddl
mov
and
iret
jl
fnstcw
or
xchg
mov
push
mov
incl
and
jp
sub
add
push
inc
stc
and
sbb
cmp
cs
popf
push
sbb
adc
adc
fwait
inc
xor
mov
mov
xchg
hlt
push
add
test
dec
and
xchg
loopne
daa
mov
lcall
test
dec
push
mov
pop
pop
decl
hlt
dec
jecxz
push
subl
pushf
mov
outsl
jge
pop
pop
popa
inc
mov
pushl
mov
adc
addr16
pushl
int3
inc
inc
enter
add
xor
das
push
hlt
dec
ret
sbb
cmp
xor
ljmp
sbb
add
xchg
mov
push
dec
add
sbb
or
cmp
ljmp
or
xor
sbb
leave
cmp
jle
xchg
mov
sbb
cmp
iret
fmulp
mov
adc
cmp
test
lret
sbb
sbb
ret
and
dec
iret
jns
stos
movsb
mov
jg
and
inc
test
movsb
fcoms
sub
lret
iret
mov
cmp
pop
dec
shll
push
and
addb
imul
testl
fucomi
jl
inc
loop
cmpsb
cltd
push
and
sbb
add
popf
dec
outsl
clc
call
mov
nop
mov
test
lds
cwtl
pop
mov
std
orb
incl
adc
je
add
test
iret
movsb
dec
pop
fwait
repz
fs
adc
ret
dec
into
fldl
or
loop
out
mov
sahf
sbb
insb
cmp
xchg
xchg
jns
and
inc
add
push
leave
inc
punpckhwd
xchg
jno
add
pop
adc
push
adc
cmp
dec
popa
add
inc
mov
inc
jmp
xor
dec
xchg
sbb
xchg
push
test
and
mov
push
sbb
pop
xor
add
ds
filds
enter
ss
cltd
int3
ds
cld
add
clc
loop
mov
inc
nopl
cmp
push
xchg
lcall
xchg
adcb
dec
in
loopne
cld
mov
jb
pop
and
mov
cmc
stos
jbe
sbb
pushl
jns
orb
jl
or
add
and
ret
cwtl
push
or
jb
pop
pop
lods
pop
sub
subb
fadds
xor
sbb
shr
fisttpl
or
cmc
lds
dec
iret
sar
or
je
addr16
int
loop
adc
out
mov
jg
or
mov
or
jne
fsubrs
aaa
repnz
outsl
adc
mov
decl
cmp
pop
imul
mov
mov
xchg
lcall
mov
ss
popa
add
mov
inc
pop
das
jl
jmp
outsb
adc
jno
gs
jnp
push
pop
cli
cmpsb
mov
pop
lcall
and
pop
xchg
xchg
sub
decl
hlt
pop
lahf
clc
aam
fidivrl
xchg
in
push
mov
push
pop
enter
sahf
cmc
fldenv
or
js
rorl
out
sbbb
sbbl
inc
ds
pop
jge
add
lock
lock
call
inc
or
and
sub
pop
dec
and
test
sbb
and
xchg
mov
mov
or
repnz
lret
jge
gs
push
loop
mov
rol
hlt
mov
jp
test
inc
mov
push
xchg
fisubrl
adc
adc
hlt
dec
xlat
push
inc
mov
adc
sub
lret
push
mov
popa
or
call
test
push
mov
jmp
mov
int
adc
shll
mov
cld
pushl
jge
inc
pushaw
mov
test
ret
pushl
xchg
inc
stos
jmp
bound
fdivs
fstps
negb
pop
pop
sarl
jne
adc
dec
lcall
idiv
es
mov
int3
jno
ss
std
or
adc
out
push
cmp
andl
repnz
jo
mov
push
mov
sbb
out
jo
ds
sarb
mov
mov
addr16
mov
mov
add
test
fimuls
mov
mov
es
dec
xor
scas
inc
mov
and
clc
in
fs
inc
or
rolb
incl
add
mov
fistl
mov
ror
aas
aam
xchg
clc
jmp
lret
push
and
pop
jmp
jbe
mov
cmpsb
out
lcall
cwtl
pushf
lods
xor
es
call
or
and
arpl
sar
jle
mov
jmp
jmp
pusha
jmp
nop
enter
dec
leave
shrb
and
and
jb
icebp
lcall
cli
pop
call
xsetbv
psubsw
pextrw
scas
std
mov
sbb
incl
sbb
std
out
push
ss
sbb
rcll
jnp
adc
xor
les
or
pusha
add
out
or
pop
and
test
in
scas
addb
or
repz
pop
inc
test
aad
lcall
sub
iret
stos
nop
in
pop
shlb
into
loope
and
or
mov
stos
incl
jle
popa
sub
xchg
mov
imull
cmpsb
bound
pusha
jo
and
sarb
mov
incl
shl
mov
mov
fcom
and
shrb
movsl
lcall
push
lea
out
ret
fisubl
call
cs
cmp
aam
jno
imul
pop
sub
std
decl
xchg
test
sub
inc
mov
fwait
jo
xchg
cld
jmp
pop
dec
mov
jmp
dec
loop
add
push
add
sarl
mov
sub
or
jle
jno
adc
jmp
pop
push
es
subb
arpl
aam
push
dec
rorb
imul
movsl
add
ret
ja
lcall
cmpsb
js
out
ror
mov
xor
hlt
dec
xchg
dec
lods
push
nop
jns
dec
jmp
aaa
push
ret
lret
cmc
and
pushl
scas
je
add
mov
gs
jns
dec
ljmp
add
mov
scas
or
push
xchg
cmpsl
ljmp
cwtl
dec
sub
loop
outsb
lods
mov
adc
rcll
das
repz
sub
enter
popa
add
icebp
adc
push
xor
shr
dec
rcll
dec
ljmp
mov
and
int3
push
and
dec
or
mov
test
enter
dec
adc
shr
add
sub
in
add
enter
and
jecxz
cmp
sub
or
cmc
out
loopne
sbb
cmp
mov
popf
or
call
lahf
lcall
mov
cld
in
call
or
sbb
push
in
lcall
mov
data16
xchg
cmp
mov
lcall
mov
or
ljmp
dec
mov
nop
in
fs
in
out
jp
ret
jb
fs
lds
jmp
cld
filds
mov
inc
inc
cmp
inc
pusha
leave
outsb
fsubs
insb
or
sub
mov
lcall
out
mov
mov
arpl
push
pop
mov
xchg
popa
add
and
ja
call
add
daa
dec
jl
or
movsl
pop
pop
push
aas
mov
mov
out
insb
xchg
cmpsl
push
out
adc
decl
sbb
data16
mov
or
mov
mov
stos
rorb
repnz
repnz
xchg
or
and
push
xor
pop
incl
sbb
or
mov
xor
mov
rcrb
dec
nop
icebp
xor
adc
repz
mov
xor
pop
cs
jo
cmp
xor
xchg
adc
shll
mov
xor
adc
call
xor
or
bound
push
dec
ror
and
add
mov
movsl
adc
bound
cmp
test
cmp
iret
sub
subb
in
test
ds
hlt
cli
add
aaa
stos
repz
push
scas
repz
clc
movsb
mov
push
lods
arpl
repz
jg
xor
xchg
pushl
sbb
or
and
mov
loope
sbb
jmp
aaa
mov
cli
and
data16
sbb
test
stos
mov
add
inc
sub
dec
sar
fmuls
les
mov
mov
push
insb
dec
add
adc
dec
pushf
les
shlb
push
push
inc
or
jo
dec
cmp
loopne
filds
orl
dec
push
jno
stos
add
mov
loop
add
hlt
jno
and
insl
mov
out
and
pushl
pop
push
addr16
and
mov
xchg
lcall
sub
test
nop
lock
mov
dec
dec
mov
inc
add
or
insl
jb
push
jp
jbe
mov
cmp
call
mov
or
or
fcomip
mov
fnstenv
adc
out
mov
int3
pop
in
xor
jmp
int3
pop
data16
fstl
jmp
popa
mov
int3
test
fs
dec
sbb
lcall
scas
test
sub
daa
xchg
jb
aad
adc
xor
divl
outsl
mov
aaa
ljmp
repz
push
xor
fdivrs
icebp
xor
insb
mov
inc
mov
jo
mov
shl
mov
call
mov
shll
incl
xor
test
push
mov
pop
mov
cmp
add
mov
test
cmp
xor
mov
add
shlb
outsl
incl
adc
in
andb
pop
push
mov
cmp
cmp
or
incl
ds
lret
xchg
jne
ror
push
dec
sub
lcall
adc
outsb
sub
insl
shrb
aam
arpl
les
or
clc
add
add
push
clc
incl
decb
mov
or
dec
dec
and
xchg
or
jno
stos
gs
scas
push
push
or
loopne
inc
inc
xchg
pusha
cld
push
mov
jo
loope
je
test
jae
inc
popa
xchg
sub
add
dec
sub
inc
push
adc
mov
loopne
jl
loope
popa
adc
test
scas
clc
jl
cmp
and
cmp
mov
push
push
fs
lods
mov
sub
cmpsb
pushl
mov
sub
mov
dec
dec
mov
xchg
clc
incl
outsb
aad
insl
cmc
fadds
xchg
imul
pushl
repnz
or
or
into
and
das
or
jbe
pushl
or
cwtl
lret
mov
les
push
adc
pop
ds
xchg
inc
stc
xor
dec
call
xor
push
je
jno
dec
xor
lds
mov
add
cmpsb
sbb
sbb
dec
pop
jb
sbb
push
and
jnp
mov
sarl
cmp
in
fcomip
incl
lret
mov
and
xchg
sarl
sarl
jmp
jmp
cli
jns
loopne
test
add
mov
push
xchg
inc
push
add
sbb
add
mov
xor
xchg
fbstp
out
sbb
cmp
mov
clc
push
lcall
or
dec
sub
iret
out
sub
inc
lcall
inc
dec
scas
imul
inc
and
add
jo
cmp
scas
cli
call
fbld
sub
inc
inc
add
fwait
dec
cvtpi2ps
inc
arpl
jg
test
sub
xor
pop
mov
push
cld
push
pop
push
imul
mov
lock
xor
mov
jbe
es
loopne
dec
adc
mov
or
or
mov
mov
inc
sub
and
out
mov
push
cwtl
sub
cs
aad
lods
fistps
jecxz
lods
shl
insl
fnsave
rcl
jo
decl
lock
ljmp
mov
xchg
sub
imul
jl
push
and
add
push
mov
loopne
stos
add
and
cli
push
shlb
in
push
cmp
xchg
cmp
xor
je
push
sbb
loope
dec
xlat
je
aad
call
popa
and
mov
lea
mov
mov
push
fdivrp
pushl
lods
sub
jle
or
pop
js
mov
jle
push
cmp
repz
or
pop
cmp
sbb
fwait
dec
cld
sub
cmp
or
orb
xchg
jp
ret
sbb
fnstcw
aam
mov
add
loopne
dec
adc
adc
shll
ds
lahf
cli
add
fstps
testl
ljmp
ljmp
pushf
mov
push
movsb
ficoms
pop
fldln2
dec
push
hlt
sub
add
mov
decl
pop
movsb
mov
rol
out
insl
inc
cmc
rorb
mov
les
inc
fdivr
outsl
mov
arpl
jb
ljmp
or
ss
daa
es
ljmp
sbbb
xchg
and
jnp
push
lcall
test
inc
add
jp
adcb
jg
push
mov
mov
leave
pop
int3
mov
lods
mov
call
aam
mov
outsb
mov
xor
lods
adc
dec
sbb
cmp
jge
test
adc
outsb
lcall
and
xchg
pop
loop
lcall
rorw
xchg
frstor
pop
jmp
add
sbb
xchg
int
pop
push
xor
mov
icebp
enter
sbb
adc
outsl
lcall
enter
int3
nop
in
fcmove
xor
lret
ds
icebp
out
cmp
int3
inc
xor
add
cli
push
adc
adc
repz
test
xchg
enter
outsb
xchg
cmpps
in
cmp
xchg
cmp
adc
xor
xchg
outsl
cmp
cmp
jns
sti
cs
jecxz
ret
ret
inc
add
bound
pusha
inc
add
mov
add
or
push
xlat
cmp
pop
aad
cli
sbb
sub
lcall
adc
lock
or
in
push
mov
add
faddl
test
adc
fisttps
imul
mov
filds
shll
jno
cld
and
lock
lcall
mov
lods
movsb
add
sbb
jno
xchg
test
jl
scas
sbb
scas
push
xlat
fs
cmp
hlt
dec
ja
add
mov
mov
or
or
aad
ds
iret
sbb
sarl
int
mov
jmp
insb
jmp
nop
fxsave
in
xchg
outsb
out
jbe
jmp
add
pop
cmp
fimuls
pop
cwtl
pusha
pop
xor
loop
pushf
scas
sbb
call
imul
cmp
outsl
adc
and
xor
xorb
cld
fwait
mov
jno
ret
inc
lret
lret
lret
lret
cmpsl
jg
and
jo
out
pop
lret
cmp
test
int3
out
jl
push
mov
clc
movsl
or
out
in
xor
and
shrb
rcr
shlb
test
ljmp
cmp
insl
inc
rolb
out
test
push
xchg
shrb
push
mov
mov
iret
std
cs
inc
mov
loopne
add
dec
pop
incl
push
and
push
adc
pusha
orb
sbb
mov
lcall
cmpb
inc
es
movsb
mov
lahf
ret
xchg
shlb
call
in
xchg
sbb
inc
jo
ret
movl
test
and
cmpsl
push
cmp
add
mov
inc
ficoms
lret
cmp
pop
jo
hlt
cmpsl
add
aam
rclb
decl
enter
hlt
daa
dec
mov
jecxz
sub
or
test
test
xchg
rcrb
sbb
jmp
push
roll
mov
fbld
or
scas
arpl
or
das
cmp
dec
outsb
fidivrs
sbb
out
test
es
pop
or
xor
cmpsl
daa
lds
cli
cltd
adc
xor
pushl
lds
mov
leave
shr
ret
hlt
fcmovu
popa
jae
dec
jb
insb
je
push
push
jae
std
jmp
int3
shll
pop
mov
mov
jg
sbb
jbe
vunpcklps
sti
jbe
les
xor
pushl
xor
push
cmpb
iret
xchg
pop
jle
inc
xchg
popa
repnz
jg
cmp
sbb
incl
ret
pop
jl
movsb
js
addl
test
mov
adc
and
push
loope
mov
push
negb
mov
push
push
mov
and
cmp
les
adc
cmp
sbb
jecxz
add
mov
cmp
xchg
inc
scas
nop
inc
sbb
adc
and
aam
aaa
cld
mov
rolb
adc
xor
inc
xor
adc
icebp
incl
mov
loope
push
mov
call
das
int3
test
adc
adc
cld
or
push
addb
push
sbb
mov
incl
lahf
and
jmp
xor
adc
test
add
adc
test
pop
hlt
inc
loope
inc
sbb
xor
inc
or
gs
inc
or
in
scas
unpckhps
loop
ljmp
or
cmp
inc
sbb
pushf
push
popa
lds
decl
or
push
push
js
pop
push
rcrb
add
js
xor
decl
cmp
push
adc
xchg
mov
push
out
add
jbe
jns
jno
push
or
dec
pop
das
pop
cltd
fld
xlat
mov
jno
pop
lret
imul
push
jge
xor
call
or
pop
decl
push
and
insb
int3
jno
test
decl
mov
push
pop
outsb
mov
fcomip
lcall
pop
fstpl
mov
ja
lds
push
inc
clc
pushl
jge
jae
fimull
addl
outsl
clc
mov
mov
call
aad
inc
cmpsb
pop
jl
xchg
ss
incl
pop
or
lds
sbb
daa
pop
push
loop
xor
clc
mov
jns
call
add
decl
xor
xor
mov
cmc
jg
mov
dec
ret
pop
inc
inc
dec
mov
cmp
push
push
outsb
and
out
das
and
and
test
and
jae
std
mov
js
and
xor
call
inc
cmpsb
and
call
out
lods
and
lock
push
cmpsl
aas
adc
mov
cmp
ljmp
ljmp
hlt
add
and
mov
cltd
hlt
cmp
lds
cmc
outsl
ss
push
add
inc
lods
cli
lcall
or
xchg
add
push
ljmp
sbb
int
pop
data16
sub
icebp
cs
call
pop
or
mov
push
ljmp
test
decl
sarb
lock
add
xchg
or
push
test
add
sub
mov
xchg
pop
ds
in
or
ret
mov
popw
sbb
add
sbb
jae
xchg
imul
enter
and
fildll
pusha
imul
sbb
repnz
xchg
lods
dec
xchg
ret
call
pop
repnz
cwtl
inc
xchg
les
movsl
add
push
sarl
lea
xor
iret
sbb
nop
sbb
inc
sarb
jnp
dec
imul
aad
sub
jle
dec
and
xor
add
fimull
push
adc
xor
mov
fwait
mov
cltd
pop
mov
mov
adc
and
call
jo
xchg
mov
and
or
mov
lret
or
adc
cmp
call
or
movsl
sub
mov
xchg
aam
je
mov
movl
call
lds
sbb
out
in
adc
sahf
push
add
mov
add
rolb
inc
and
inc
xchg
aaa
xchg
mov
sbb
jns
loopne
int
in
outsb
jnp
push
inc
mov
pop
imul
push
clc
add
dec
push
psubusb
add
loopne
testb
lock
bound
clc
test
scas
scas
rcrl
xor
fdivrs
aad
jp
or
cs
pop
and
pop
test
sar
add
push
stos
fstps
push
cs
lret
aaa
add
cld
les
and
jb
fcoml
call
cld
or
fs
mov
mov
mov
pop
dec
xor
jge
inc
cmp
jmp
or
ret
mov
mov
dec
stos
stos
sbb
xchg
nop
repnz
mov
fcomip
incl
mov
inc
push
ss
lds
inc
sti
lock
orl
repnz
cmp
pop
adc
and
lret
jb
adc
movsl
es
fistpl
mov
subl
mov
mov
neg
sar
arpl
in
loopne
inc
adc
xor
clc
ljmp
dec
movsb
lcall
cmp
cmp
dec
addl
or
outsb
emms
sbb
insb
add
inc
sub
cmp
push
dec
cmp
lcall
cmp
mov
fidivrs
leave
mov
and
xor
movsb
sub
out
sub
push
dec
ljmp
and
orl
lret
enter
cwtl
and
incl
je
ss
andl
inc
or
adc
sub
mov
jns
lcall
xchg
test
push
fnstcw
call
mov
cmp
ret
sbb
icebp
dec
pop
xorb
pop
xor
jg
stos
leave
mov
mov
sahf
mov
jno
cli
sar
pop
cmc
decl
lds
mov
testl
loope
lds
imul
mov
pop
imul
xchg
movsl
push
sub
adc
adc
aad
jmp
cwtl
sub
pop
push
mov
pop
mov
pop
sub
lret
dec
out
xchg
sub
insl
push
decl
int3
adc
jae
xchg
jne
inc
or
insl
inc
sub
loope
ud0
pop
cmc
push
and
jecxz
xlat
mov
adc
bndstx
inc
call
mov
pop
js
adc
jns
dec
sti
mov
mov
call
xlat
fdivr
movsb
xchg
scas
ds
sbb
call
xchg
movsb
and
jbe
movb
lcall
daa
sbb
sbb
inc
jo
iret
or
ret
xchg
xor
adc
addr16
jg
fldenv
call
mov
lahf
push
jmp
xor
adc
cmpsb
xor
daa
and
jg
jmp
stos
dec
mov
ja
pop
sahf
imul
shll
ret
outsl
cli
jg
adcb
into
mov
mov
cmpsb
or
rorl
je
rcr
pushf
mov
das
out
pop
adc
mov
pusha
ja
js
or
mov
in
gs
jge
sub
cwtl
stos
mov
add
push
adc
fistps
stos
mov
add
inc
bnd
fcmovu
fcmovu
cmc
pushl
cmp
aad
shl
outsl
jne
mov
jp
js
sar
ljmp
push
enter
adc
xor
clc
into
scas
mov
clc
jo
xchg
inc
push
mov
ljmp
out
or
lret
ss
lock
test
cmp
fstpt
out
out
mov
dec
out
in
aam
dec
push
mov
fisttpl
iret
xchg
mov
lock
das
jg
mov
jno
push
push
js
pop
jno
sbb
sub
pusha
xor
mov
insl
rorb
jl
sbb
sub
cmp
dec
call
dec
cs
jne
push
pusha
jo
mov
pushl
inc
or
xor
xor
mov
xor
pop
pushf
push
sbb
sbb
rclb
call
sbb
push
std
xor
sbb
inc
inc
arpl
sub
mov
push
cmp
xchg
popa
je
push
push
pop
jbe
inc
cmp
mov
mov
push
and
cmpsb
adc
inc
adc
das
mov
or
in
dec
jae
lea
dec
add
mov
inc
jne
mov
in
mov
jae
mov
mov
jge
bound
addr16
push
addl
cld
jmp
insl
loope
sub
adc
xchg
and
out
add
push
js
imull
sti
mov
movsb
hlt
js
mov
mov
jg
cmp
cmp
adc
cltd
mov
fdivrs
ljmp
and
mov
dec
jg
cmp
imul
xchg
pop
addb
ljmp
rol
cmp
andl
daa
jg
in
adc
out
int3
testl
sub
and
fsub
pop
loop
jg
decl
mov
add
push
inc
mov
mov
loop
lods
add
jg
and
sbb
push
rolb
add
out
jb
or
add
jl
pushl
mov
shll
sbb
push
xorl
ds
lcall
ss
mov
sbb
sbb
dec
push
and
xor
pushl
inc
sbb
xchg
push
test
inc
cmp
add
mov
incl
dec
xchg
andl
das
sub
test
push
xchg
dec
roll
shll
push
xor
cmc
jne
push
push
mov
jnp
xchg
and
adc
jbe
les
pop
inc
mov
pop
adc
xorb
pushl
dec
push
sbb
xchg
insb
mov
daa
push
add
sub
push
and
js
jp
je
leave
repnz
fwait
xchg
aaa
xchg
in
cmp
gs
stc
loopne
subl
jg
or
add
dec
sub
jmp
cltd
add
ds
add
adc
notrack
es
sbb
cltd
pushf
cmp
sbb
mov
sub
and
and
cmp
aaa
insb
or
insl
in
jmp
adc
sarl
inc
sub
insb
mov
adc
sbb
int
dec
xchg
mov
clc
jg
ljmp
fcomps
int3
adc
ret
and
ret
pop
adc
mov
push
dec
iret
fcoms
ss
pop
sti
ja
push
rclb
lock
repnz
cmp
ja
cli
sbb
mov
hlt
jnp
adc
gs
or
ret
call
data16
xor
cltd
sbb
jae
or
sbb
or
add
add
mov
inc
out
jb
sbb
sbbb
addr16
jno
cmp
mov
cmp
gs
mov
xor
xlat
push
outsl
cwtl
push
inc
jns
pushl
cwtl
les
adc
xchg
dec
clc
inc
ja
inc
add
cwtl
pop
clc
pop
pop
decl
dec
push
roll
push
aas
sbb
gs
out
pop
xchg
pop
pop
daa
push
std
lcall
mov
dec
jg
dec
push
or
cwtl
push
jp
push
cmp
mov
push
add
in
incl
push
xor
jns
sbb
arpl
xchg
ljmp
or
xchg
jns
cwtl
jle
cmpsl
stc
mov
jg
test
mov
aaa
cld
xchg
mov
push
lea
rolb
push
mov
jno
fdivr
cltd
dec
call
lahf
sub
jae
add
je
sbb
xor
lret
fs
fcmovbe
pop
scas
dec
ds
pop
dec
xchg
cmp
push
sub
jbe
lret
adcl
ret
mov
out
adc
inc
aas
lret
sub
lcall
outsb
mov
cmp
and
fistps
push
push
rcll
in
sub
jmp
sub
lret
daa
mov
cwtl
ljmp
add
sbb
add
push
pop
icebp
leave
adc
insl
clc
pushl
and
and
mov
xor
push
pop
jae
addb
jmp
subl
cltd
inc
dec
inc
xchg
sub
mov
lock
idiv
pushl
ss
mov
push
cmpsb
pop
push
inc
sbb
sbb
mov
mov
divl
push
jmp
aaa
jb
xchg
bound
xorl
das
outsb
jo
xor
aas
mov
xchg
das
andl
movsl
cmpsb
push
mov
cmp
push
js
pop
jbe
inc
push
jnp
xchg
xor
icebp
mov
adc
loop
sub
jmp
gs
cmp
cmpsl
sbb
cmc
test
sub
imul
and
adc
jb
jne
adc
mov
loopne
mov
aam
sbbb
jg
cwtl
jb
mov
xchg
int3
jnp
cmpsl
mov
test
loop
dec
cltd
lea
jg
shll
fsubrl
rcrb
lcall
cld
sarb
push
pop
call
mov
jg
daa
insb
mov
fwait
int3
ljmp
jnp
push
lret
mov
pop
in
push
stos
hlt
and
sub
cmp
cmc
mov
mov
in
mov
fistps
aaa
jmp
add
lret
cmp
inc
repnz
pop
cli
nop
clc
jg
lret
fcoml
out
scas
or
fsub
add
lock
mov
inc
pop
jae
hlt
nop
in
mov
and
mov
mov
mov
movsb
jno
insb
inc
jmp
test
pop
sbb
xorl
shll
sbb
shll
push
xor
pop
cltd
push
nop
shll
arpl
jno
rclb
add
mov
cwtl
jae
cmpsl
jae
lret
adc
push
xchg
push
pusha
push
test
jg
pushf
pop
insb
out
inc
dec
movsb
jnp
ss
cltd
ja
dec
ret
cli
jnp
outsl
lcall
mov
popl
mov
or
jmp
xchg
jnp
imul
mov
xchg
and
rclb
fldcw
jp
fisubl
test
lds
cmpsl
jp
cmpsl
sub
jle
mov
fwait
dec
mov
xchg
mov
jmp
ja
or
test
and
jo
inc
ljmp
mov
aad
sub
mov
std
fbld
mov
shlb
mov
lret
xchg
fwait
mov
mov
mov
ljmp
clc
dec
leave
enter
negl
inc
frstor
negb
adc
jae
sarb
aas
add
mov
jmp
add
sbb
vmovntps
cmp
pop
jo
clc
jmp
mov
mov
add
inc
dec
sbb
jbe
mov
incl
cmp
fwait
xor
xchg
push
out
clc
mov
pop
pop
mov
repnz
xchg
mov
call
decl
inc
push
inc
enter
pop
xor
fisttps
xor
jne
xchg
ret
iret
push
cmp
sbb
push
sub
daa
stc
jbe
mov
decl
pop
dec
or
mov
jbe
mov
js
mov
or
or
lock
pop
mov
jg
decl
js
mov
add
mov
stos
lds
jno
cwtl
cmpb
cli
loopne
xchg
fld
dec
mov
cld
mov
test
inc
cld
mov
test
adcl
shlb
and
test
jg
sub
lods
scas
adc
cmp
and
flds
mov
mov
mov
bnd
jnp
int3
dec
sub
or
push
mov
pop
dec
lret
pop
popa
in
adc
rorl
addr16
xor
jmp
adc
jge
fwait
cltd
add
jo
xor
loope
jb
in
flds
xorb
incl
jbe
das
push
fimull
sbb
mov
pusha
sbb
mov
xchg
jg
pushl
xchg
and
xchg
ds
jnp
xchg
and
sbb
xor
imul
cmp
mov
and
pop
das
decl
iret
dec
mov
jp
nop
aas
sbb
lds
enter
nop
aaa
lds
jg
inc
cld
jae
cmpsl
mov
inc
pop
ja
sbb
adc
mov
pop
in
mov
push
and
ret
dec
cmpsb
imul
jae
les
xchg
cmp
and
mov
cmp
sub
xor
mov
xor
roll
cli
stos
lcall
push
mov
add
rcl
ljmp
pop
adc
mov
and
ficoml
mov
ljmp
leave
callw
mov
enter
shrb
ljmp
ret
lds
out
inc
mov
add
into
ljmp
cmp
sbb
push
cmp
ljmp
and
nop
insl
add
add
sbb
fnstenv
nop
and
adc
pop
rcrb
cltd
sbb
adcb
popf
scas
sbb
xchg
sbb
gs
cmp
mov
aas
test
or
mov
jnp
test
rorb
fstp
mov
incl
ret
jbe
icebp
fdivl
jl
inc
out
jbe
stc
pop
mov
cmp
dec
dec
jbe
xchg
out
ret
jmp
pop
xchg
movsl
push
cmp
outsl
clc
ret
js
shlb
ret
sbb
xchg
lock
and
shlb
push
add
imul
lock
lds
xorb
ljmp
cmp
ljmp
mov
test
fldt
fnstcw
xor
jo
dec
cmp
insb
and
mov
pop
clc
lcall
jecxz
lret
aad
mov
mov
incl
in
daa
sub
sub
sub
into
stos
incl
pushf
int
pushf
in
dec
dec
push
scas
outsb
out
hlt
jl
pop
jge
sub
lods
lcall
call
add
popa
add
push
aad
add
jmp
aaa
cld
fcom
inc
adc
add
jb
daa
and
and
pop
js
push
pop
nop
mov
lcall
add
xchg
dec
mov
loope
pop
inc
or
jmpw
sarb
pop
aas
call
pusha
sbb
lea
sub
xor
xchg
rclb
xchg
inc
push
cmp
cmp
fadds
sbb
add
jmp
push
aaa
aad
cmpl
aaa
adc
xchg
xor
or
inc
pop
inc
out
xor
mov
mov
jge
dec
mov
push
jns
mov
inc
out
jle
ret
mov
sbb
shl
dec
mov
mov
mov
jno
and
adc
fs
jg
push
out
push
ljmp
loope
imul
jl
stos
cmpsl
ds
test
sbb
mov
lea
jb
cltd
lahf
mov
scas
out
les
pop
call
cld
jmp
or
jl
adc
push
insb
xchg
aas
out
lock
out
xor
adc
ret
call
pop
insl
cmp
insb
icebp
mov
sti
fwait
int3
xor
testb
pushl
sbb
sbbl
fldt
jnp
adc
add
cs
adc
ret
mov
or
push
loop
xor
call
mov
mov
mov
lcall
push
jno
ffreep
or
mov
sbb
ret
loopne
enter
push
or
pushl
mov
mov
lods
dec
xchg
movsb
mov
es
shlb
push
pop
lds
jne
push
scas
push
pop
push
mov
outsb
inc
movsl
adc
mov
push
subl
dec
das
adc
lcall
pop
lea
mov
dec
imul
pop
std
dec
mov
ja
fdivrl
jmp
lods
sub
daa
icebp
decl
xchg
mov
fcmovnu
xor
sbb
je
fstl
or
outsl
jecxz
sub
jne
fidivl
outsl
in
insl
fnstsw
push
test
insb
repnz
pop
push
gs
inc
xchg
add
pop
mov
adc
and
test
add
jp
repnz
out
mov
sub
jge
cmp
in
inc
cmpsl
ss
incb
mov
rol
cmpsl
inc
pop
sbb
mov
pusha
es
movl
lahf
or
push
rol
or
adc
adc
js
lock
sub
and
movsb
int
pushl
cmpb
pusha
outsl
ds
jbe
popa
int3
jno
and
das
rcr
adc
mov
push
imul
leave
incl
mov
mov
xchg
mov
or
adc
xchg
or
es
imul
inc
cmp
mov
cwtl
pop
xor
cmp
orb
jmp
push
call
and
inc
or
in
rorb
or
punpckhdq
incl
add
pop
roll
jg
fiaddl
cmp
outsl
rcrb
incl
jecxz
or
sub
cmp
push
mov
mov
push
cmp
decl
es
lea
cmpsb
xchg
in
lea
or
in
xchg
sub
insb
mull
jg
dec
cld
cmp
into
repnz
loop
sti
sub
mov
push
push
sbb
jno
push
stos
xchg
lock
fcos
leave
into
insl
or
xlat
aaa
shrb
lcall
xchg
lea
loopne
fdivr
sub
mov
cmp
mov
ss
mov
decl
mov
mov
push
jbe
lea
push
popa
adc
lcall
insb
push
stc
hlt
rorl
jns
mov
mov
movsl
adc
cmpsb
jno
test
push
pop
xchg
lds
jge
mov
cmp
mov
cmp
and
push
insl
push
mov
ljmp
jl
jp
das
inc
mov
cltd
mov
push
test
loop
sbb
testb
jg
add
dec
or
jo
or
leave
xlat
sbb
testb
lcall
sub
sbb
or
les
sub
dec
test
and
add
or
jg
aaa
cld
mov
mov
fisttpll
inc
int
aaa
out
sbbb
push
incl
in
and
in
mov
add
lahf
ljmp
in
pop
fsubr
lods
mov
ljmp
cmp
ss
outsl
cmc
mov
dec
imull
jl
mov
inc
fwait
jmp
shl
push
mov
mov
xchg
inc
movd
pop
push
addb
lahf
or
test
jl
add
ret
xchg
cld
lcall
mov
popa
jns
lea
or
jle
loope
push
mov
xor
mov
ja
mov
mov
fcoms
jne
in
dec
sbb
pop
leave
test
les
adc
addr16
stos
or
addr16
jmp
jecxz
mov
mov
addb
mov
fildl
fidivl
sub
sbb
sub
push
and
mov
and
stos
push
test
xchg
jb
mov
movsb
or
fildll
add
clc
pop
and
stc
loop
jae
cmc
dec
outsl
jge
pushf
jmp
jo
cmp
sbb
cmp
xchg
lcall
jb
inc
dec
lcall
jmp
mov
mov
pop
loope
addr16
dec
movsb
and
cmp
add
cmp
orl
dec
mov
clc
out
scas
mov
call
sbbl
mov
pop
insl
push
xorps
pop
negb
orb
mov
xchg
movsl
jge
stos
fbstp
dec
pop
dec
sub
add
bound
outsb
gs
jle
aam
shr
scas
and
andb
mov
cmpsb
test
lret
decl
add
insb
sub
push
das
fs
lret
orl
pop
push
cmp
push
enter
int3
ljmp
push
push
cmp
mov
lcall
int
pop
shrl
mov
call
ds
into
adc
inc
xor
leave
add
pushl
xchg
cwtl
mov
addr16
in
flds
mov
sbb
gs
mov
jmp
shrl
cmc
mov
cmp
cmc
ljmp
in
loopne
push
in
push
fwait
dec
cwtl
cmp
mov
call
cwtl
call
push
outsl
push
adc
in
mov
fcoml
xor
icebp
jnp
xor
mov
mov
rcrb
fs
add
aas
sbb
subl
jae
xor
dec
test
dec
rorb
sbb
popf
sbb
mov
and
xchg
push
in
mov
repz
or
dec
mov
lcall
std
push
and
repz
stos
pop
jae
into
or
orl
mov
idiv
lcall
mov
mov
lcall
dec
pop
adc
pop
inc
test
xchg
cmp
repnz
push
sbb
mov
enter
pop
int
jg
sbbl
or
jb
xchg
or
sub
lcall
nop
pop
mov
inc
add
inc
lret
les
xchg
push
fildl
mov
sub
addb
cmp
push
cmp
xchg
out
xor
pop
mov
fcomip
xchg
xchg
cld
inc
clc
addr16
push
cwtl
add
out
sbb
dec
push
ror
decb
es
dec
lods
or
fnstcw
add
aam
insb
adc
aas
leave
pop
and
mov
ja
xchg
sahf
push
sbb
decl
jo
shll
or
lahf
fisubrl
orb
jp
roll
pop
cld
mov
xchg
gs
pop
nop
cmp
test
stos
int3
xor
dec
in
sbb
pop
cmp
roll
xor
call
subb
cmpsb
stos
or
out
add
jmp
push
es
repz
push
fadd
xchg
incb
adc
push
jl
mov
sbb
pop
dec
adc
push
mov
mov
repnz
jp
out
or
sti
mov
insl
xor
rolb
call
xor
imul
test
lret
fmull
pop
fmuls
arpl
add
adc
xchg
xor
ret
mov
jge
pop
cltd
mov
jno
ljmp
jmp
call
xor
test
nop
daa
aas
sbb
fadds
in
add
inc
or
cmp
jecxz
sahf
and
fisttps
adc
dec
hlt
arpl
xchg
cmp
mov
out
ljmp
mov
jp
adc
fwait
dec
enter
js
sub
inc
mov
xchg
dec
push
mov
ljmp
jns
shrb
mov
cmpsb
and
lret
dec
inc
jbe
mov
pop
stc
lcall
jmp
sub
pop
add
mov
jno
data16
jg
or
and
ds
scas
pop
mov
fwait
rcl
push
pop
xor
outsl
pushl
push
test
add
js
add
cmp
pop
ftst
adc
pushl
in
mov
cs
loope
sub
mov
and
sub
mov
jmp
jg
lock
js
mov
jns
mov
xor
les
lods
jno
lcall
repnz
ljmp
mov
sbb
inc
mov
lcall
ljmp
lahf
test
es
xor
xor
mov
jo
add
mov
push
in
mov
sti
pop
hlt
out
ss
pop
push
andl
fwait
inc
ljmp
inc
mov
popa
cmp
adc
pop
sbb
cmp
mov
pushl
pop
mov
pop
mov
int
inc
aam
mov
filds
adc
sbb
mov
cmpsb
aas
ret
push
je
and
call
cwtl
pop
mov
fimull
js
pop
orl
scas
fmull
arpl
lock
add
leave
jecxz
roll
ss
mov
mov
mov
test
jnp
mov
imul
lods
mov
int
das
into
enter
call
dec
xor
sub
fwait
mov
test
mov
mov
inc
push
imul
loop
test
xchg
push
les
jecxz
xor
mov
lcall
dec
cmp
mov
lahf
dec
mov
mov
mov
push
mov
sbb
cltd
pop
push
and
xor
dec
or
roll
sbb
es
add
stos
insb
inc
mov
push
jne
stos
mov
inc
leave
sub
rcll
push
mov
pop
je
daa
shl
pusha
and
icebp
sarl
push
mov
sub
xchg
scas
rcll
dec
and
incl
xchg
inc
sbb
mov
mov
mov
mov
or
shlb
stc
shrl
mov
stos
ret
sub
es
imul
mov
fsubrs
decl
mov
sub
sbb
andl
inc
or
ret
rorl
inc
pop
arpl
cmpsl
or
sub
push
aam
inc
or
mov
loop,pn
pop
or
sbb
rcrl
arpl
xchg
test
notb
shll
fs
scas
dec
das
loop
aas
cwtl
or
or
sbb
jne
and
or
inc
scas
xchg
adc
pop
cld
jmp
and
sbb
rorb
mov
ljmp
sbb
pmaxsw
adc
repz
cmp
fwait
mov
sub
repz
hlt
ljmp
add
lahf
repnz
push
loopne
adc
and
fisubrl
ret
ljmp
mov
dec
xor
sar
incl
sbb
xor
rol
pushf
xor
lods
shlb
xor
jmp
aam
lds
mov
cmp
mov
ret
andb
dec
jmp
ret
mov
loop
push
stos
out
jo
sahf
test
ficompl
stos
pushf
cmpsl
arpl
fptan
out
and
leave
int3
mov
imulb
dec
jmp
jns,pn
inc
jo
pop
jo
push
shrl
rolb
or
push
or
stos
mov
adc
jmp
pop
xor
cld
jg
ds
mov
push
daa
add
mov
cmp
jg
sbb
or
mov
loop
add
mov
xor
in
xor
push
lcall
imul
mov
movsb
js
mov
lret
and
mov
pop
xor
sbb
rcrl
hlt
mov
mov
sbb
jb
and
jl
pop
mov
dec
aad
decl
cli
inc
sti
stos
push
push
bound
or
aas
push
add
movsb
xchg
or
sbb
pusha
xor
xor
jp
xchg
jmp
stos
sub
std
call
mov
mov
mov
incl
in
xchg
call
dec
push
jno
leave
xchg
and
jecxz
mov
enter
jg
incl
and
sbb
aas
imul
adcl
inc
cmp
int
incl
push
incl
add
les
orl
or
mov
mov
adc
shr
cmp
pop
rcll
sbb
xor
dec
pop
mov
lock
lahf
cmp
add
movsb
adc
fmulp
daa
stos
inc
and
pusha
xchg
jge
fsubrs
mov
sti
push
cmp
out
dec
push
jg
gs
test
cmp
jle
mov
lcall
les
mov
movsb
and
push
mov
lds
dec
dec
mov
call
mov
xchg
sbb
jp
lret
xor
xor
mov
mov
pop
and
or
xorl
scas
subb
cmp
jns
sbb
fwait
mov
mov
sbb
sub
outsl
push
sbb
ljmp
inc
inc
shlb
repz
cmp
test
call
mov
dec
dec
xor
xchg
adc
adc
push
xchg
push
in
fidivs
sbb
gs
ret
mov
sub
inc
pushf
lock
call
icebp
sub
pop
mov
sub
inc
sbb
jp
rorb
rorb
fnsave
cmp
jmp
jnp
mov
hlt
ret
leave
jg
mov
stos
mov
sbb
das
jnp
pushl
mov
stos
xor
mov
and
add
test
jmp
mov
cli
xchg
add
ds
sub
xchg
jb
jle
pop
lcall
inc
inc
movsb
dec
add
push
stos
movsb
mov
jae
push
aam
jbe
ficoml
shr
adc
pop
mov
fstl
rcrb
xor
pop
cmc
dec
sbb
mov
lea
aaa
jge
push
push
lcall
pusha
mov
movsl
ljmp
rcrb
or
push
pop
sbb
fsts
pop
jp
or
cmc
sbb
sbb
mov
popa
scas
pop
adc
mov
pusha
repnz
ret
call
inc
in
sbb
mov
push
dec
mov
stos
dec
mov
loop
popf
mov
rcrb
mov
ljmp
js
push
xchg
loop
push
mov
add
js
aas
push
mov
jns
xor
xchg
and
mov
shrl
vmovdqu
rcll
adc
xor
adc
ljmp
test
stos
ss
xchg
push
shrl
xchg
nop
pop
outsb
or
push
cwtl
jo
cmp
xchg
ja
mov
bnd
insl
rcr
jno
sub
adc
jg
adc
xchg
ja
pop
adc
call
je
mov
sbb
sub
jnp
daa
loopne
mov
or
dec
mov
test
dec
cwtl
push
pop
push
inc
mov
movsb
jg
push
or
sub
mov
mov
nop
pop
mov
jnp
inc
or
pusha
cltd
xchg
sub
add
out
fstps
adc
add
mov
mov
push
add
out
clc
jg
pusha
pop
xchg
pop
cmp
cld
enter
adc
mov
scas
mov
lods
cli
jmp
loope
jbe
pop
cmpsb
and
cmp
loope
dec
popa
adc
mov
je
mov
or
xor
movsl
pop
shrb
sub
xchg
loop
lds
inc
mov
inc
cmpsb
mov
icebp
mov
jecxz
mov
popa
push
mov
or
bound
xchg
fwait
pop
adc
dec
jnp
sbb
jg
pop
sbb
shl
mov
or
cli
hlt
xchg
mov
push
stos
push
jg
or
mov
decl
xchg
mov
cmpsl
dec
cmpsb
cmp
nop
mov
xor
lahf
fadd
aas
mov
into
dec
shll
inc
imulb
mov
arpl
xchg
in
arpl
lcall
xor
sti
add
xorb
sub
pusha
cmp
lods
push
mov
clc
cmc
les
and
fmuls
mov
sbb
pop
cmc
ljmp
shrb
aam
or
mov
insl
lcall
ljmp
or
mov
inc
mov
clc
lret
push
adc
sub
dec
cmp
sub
popa
adc
addb
mov
sbb
cli
ljmp
int3
and
in
push
mov
sbb
or
push
pop
into
out
lods
decl
add
push
rcrb
bound
xchg
sub
lock
popf
sahf
mov
fs
cli
inc
dec
mov
icebp
push
and
ja
pushl
inc
shll
enter
fst
int
imul
or
clc
addr16
jae
sbb
sahf
fcomip
ljmp
dec
mov
jge
loopne
enter
jnp
test
icebp
mov
or
call
shlb
or
mov
pop
pusha
jmp
lea
and
call
mov
mov
hlt
bound
sub
inc
add
stc
mov
dec
data16
or
aad
repnz
mov
test
push
mov
fsubr
addb
mov
cwtl
mov
cmp
dec
faddl
mov
pusha
je
sub
inc
orb
ljmp
addr16
outsb
orb
fsubrp
cmp
call
cs
inc
bndldx
call
xchg
ret
adc
sahf
mov
pop
jo
les
xchg
and
dec
push
lret
pop
in
out
xor
decl
incl
imul
cld
scas
arpl
daa
hlt
in
int3
mov
dec
xor
sti
xchg
cmpsl
mov
sub
iret
inc
imul
push
mov
mov
xlat
push
adc
mov
inc
lcall
sub
mov
fisttps
or
mov
incl
outsb
clc
not
xor
mov
add
pushl
dec
jl
stos
pusha
pop
ret
pop
pop
cmpl
jb
aaa
cld
ja
xor
add
popa
xor
fmulp
ds
sbb
dec
out
push
ljmp
ret
lea
nop
cmp
sbb
sub
mov
lods
adc
test
in
das
pusha
and
call
lods
add
pop
add
outsb
sar
jl
stos
loop
cli
add
adc
xchg
outsb
shrb
jp
scas
out
in
fidivrs
out
push
mov
out
sub
mov
xchg
mov
adc
sbb
ljmp
cmpb
push
mov
fisubrs
movsl
sbb
xor
xchg
jle
fwait
jnp
imul
popa
ljmp
es
sbb
imul
loop
fsubrs
fdivr
dec
leave
pushf
or
xchg
aam
enter
xchg
aad
aaa
sub
mov
popf
aad
in
and
jle
ljmp
jbe
or
daa
and
cmp
jle
push
pop
inc
mull
jnp
incl
fisubl
adc
and
xlat
lret
add
aam
sub
les
jle
mov
testl
jmp
sbb
rorb
mov
fs
pop
jle
cmpsl
clc
dec
or
cli
ljmp
push
aam
cmpsb
stos
mov
std
fstps
stc
pop
and
scas
call
cmp
pop
cwtl
faddl
lods
inc
or
add
push
pop
mov
adc
loope
incl
data16
mov
adc
adc
xor
insb
inc
fbstp
adc
mov
jmp
inc
les
adcl
sahf
cmp
rcrb
into
push
pushf
adc
rcrl
add
push
incl
push
mov
loope
mov
addr16
test
jb
pop
mov
jno
and
xor
mov
mov
scas
pop
jg
das
mov
sub
and
sbb
pop
loop
out
loope
mov
int3
xlat
pop
push
and
sbb
mov
decl
xchg
jle
xchg
push
out
es
cld
or
xchg
shll
adc
jmp
sbb
add
jnp
fwait
add
push
loope
fwait
fwait
adc
ljmp
shlb
cs
fidivs
scas
ret
sub
repnz
cmp
je
mov
mov
bnd
jae
push
test
neg
xchg
jo
icebp
decb
clc
das
js
ljmp
sti
std
jmp
push
jl
aaa
loopne
add
fcomip
or
and
fsubs
out
fnsave
cwtl
pop
or
cmp
push
jecxz
ljmp
in
aad
mov
xchg
int
outsb
or
and
es
clc
fildll
call
call
sbb
pop
ljmp
orb
push
mov
sub
and
mov
pop
dec
xchg
adc
incl
movl
dec
xchg
pop
ret
mov
lcall
stos
mov
bound
fwait
imul
lret
sahf
outsl
mov
cli
sub
incl
adc
int
inc
gs
nop
inc
or
push
xchg
push
adc
adc
cmpsb
out
xchg
jno
jmp
jmp
pushl
sbb
xor
push
inc
fstl
inc
sarl
xchg
scas
mov
test
dec
jno
adc
rol
sbb
jmp
in
pop
xlat
xchg
pop
pop
flds
jmp
iret
add
inc
or
sbb
mov
fwait
adc
ds
pop
arpl
cltd
mov
jno
inc
and
ljmp
rcl
push
mov
fnstenv
aas
inc
xor
mov
inc
mov
nop
inc
jb
ret
or
pusha
pusha
orl
ljmp
sar
jge
xchg
or
sbb
push
jns
xchg
clc
pop
insb
incl
cmp
popa
and
cld
and
jge
and
mov
or
jg
and
lahf
test
mov
fdivrl
shl
push
xchg
fcomip
call
leave
and
and
mov
sbb
fcompl
test
jg
mov
mov
loop
in
dec
jle
fs
inc
repnz
xchg
bound
mov
lahf
jns
push
mov
and
lea
jmp
add
jns
jge
mov
addr16
jle
xor
jp
fdivr
lcall
sahf
add
cwtl
mov
cmp
call
xchg
xor
sbb
jns
ljmp
ret
pop
jmp
scas
mov
rcrb
lods
cmp
pop
push
scas
cmp
mov
jl
fisttpl
and
push
pop
rcrb
mov
dec
mov
fldt
testb
sbb
jecxz
cli
xchg
or
leave
add
jp
jmp
cwtl
lret
pop
pusha
and
add
shl
jns
sub
ja
mov
dec
repz
fisttps
cld
mov
inc
fwait
test
test
clc
mov
sbb
sbb
js
test
mov
jbe
jp
test
cmp
jmp
fabs
adc
xor
ffree
addr16
sub
adc
or
adc
popa
shlb
push
push
xchg
scas
addl
xorl
subb
and
fldl
dec
cmp
nop
add
and
and
into
inc
and
sub
dec
jns
lcall
xchg
enter
inc
lea
and
adcb
xchg
out
test
cwtl
test
and
cmp
pop
lods
decl
mov
mov
inc
or
sahf
sbb
xor
leave
lret
dec
call
clc
movsb
out
mov
shl
pop
push
pop
cwtl
clc
mov
push
movsl
leave
je
mov
sbb
cmp
loopne
push
xor
loope
inc
inc
mov
push
addb
lcall
pop
adc
and
push
cmp
iret
es
or
gs
jmp
rcrb
dec
inc
test
je
mov
into
pop
xor
pusha
or
fcomps
jle
mov
iret
faddl
incb
pop
mov
cmpsb
pop
xchg
or
push
cwtl
sar
ja
ret
orb
addb
jae
jp
add
push
inc
shll
das
pusha
jns
imul
decl
mov
int
icebp
or
loop
inc
and
xchg
push
xchg
outsl
clc
decl
sub
movsl
mov
cmp
daa
ret
ret
sub
push
and
mov
pop
int3
mov
stc
pop
mov
loop
int3
sub
das
into
cmpsl
xchg
dec
mov
aam
sbb
pushl
test
push
rcll
movsb
popa
scas
dec
popa
pop
inc
jmp
xor
mov
adc
mov
push
xor
ds
test
push
adc
loop
xlat
enter
mov
call
aaa
add
push
inc
dec
lds
pop
imul
mov
mov
sahf
dec
movsl
call
decl
xchg
je
sub
gs
loopne
cmp
dec
mov
inc
add
rclb
jg
lock
push
add
mov
pop
adc
lcall
stos
push
jo
xor
jns
rorl
jle
pop
out
mov
push
mov
xlat
cmp
push
pop
sarb
mov
mov
std
pop
in
sub
pop
into
mov
cli
mov
jg
pusha
adc
xor
jno
sahf
xchg
jno
pop
or
incl
adc
xor
fwait
or
and
xchg
jle
arpl
fwait
inc
sub
pusha
fcomps
push
xchg
fwait
mov
mov
cltd
inc
dec
xchg
ret
loopne
pushl
lock
loope
xor
test
adc
xchg
or
and
add
call
and
lret
movups
push
shll
xorl
lods
push
jecxz
sbb
decl
aam
xor
mov
imul
mov
cmp
call
leave
mov
pop
xchg
adc
or
lods
push
jle
fidivrs
arpl
dec
or
xor
fsub
cs
mov
mov
cltd
testb
and
inc
cltd
daa
inc
sbb
lods
adc
or
dec
inc
mov
xchg
jmp
fldl
icebp
ljmp
add
dec
cmpsb
mov
cld
test
clc
ljmp
movb
stc
scas
and
push
mov
push
push
xor
xlat
fcompl
inc
jp
movsl
push
outsl
test
xchg
fwait
cmpsl
lcall
or
xor
cmp
xor
icebp
xchg
test
lcall
ljmp
fs
call
pusha
rol
mov
jmp
shrb
push
xor
dec
test
decl
mov
rolb
add
sbb
mov
sub
dec
sbb
clc
sbb
shrl
and
push
jp
dec
inc
lahf
push
lcall
or
inc
mov
stos
sub
pop
xor
lock
arpl
clc
dec
add
ljmp
mov
jae
sahf
mov
jecxz
jb
mov
inc
sub
fstps
cmp
nop
jnp
mov
pushf
xor
into
lret
jle
fs
xlat
scas
or
mov
lcall
out
jno
call
std
jns
jp
xor
pop
imul
add
incl
repnz
jecxz
sbb
or
test
jmp
stos
xlat
push
add
lcall
arpl
or
lods
sar
cmp
cmp
cmp
add
xchg
pop
hlt
dec
sbb
jmp
mulb
push
cli
fldt
mov
sub
adc
aaa
push
cmp
inc
les
and
andl
mov
sbb
pushl
lds
addr16
mov
fstl
sbb
rol
jne,pn
div
or
pop
adc
jo
loop
pop
rclb
or
jmp
pop
mov
mov
subl
xor
mov
sbb
jl
inc
adc
lock
in
mov
int3
decl
aam
test
js
inc
and
lret
dec
adc
add
add
mov
int3
pushf
decl
lock
xchg
mov
pusha
adc
and
inc
int
mov
shlb
iret
les
cmp
iret
movsb
push
xchg
xor
pop
push
nop
inc
xchg
int
sub
cmp
sbbb
pop
mov
mov
mov
push
rorl
fimull
mov
push
in
decl
jno
in
dec
bound
popa
mov
pushf
sub
mov
mov
mov
lahf
mov
pop
call
dec
call
adcl
sbb
jmp
fcoml
decl
inc
lock
mov
int3
inc
and
cmpsb
inc
bound
fdivrp
pushl
es
dec
enter
inc
outsl
cmc
sbb
add
sbb
mov
jbe
clc
pushl
jp
dec
sub
mov
lods
push
add
add
xor
or
inc
movsl
lds
mov
xor
jg
or
pop
pop
mov
nop
stc
sub
add
push
push
add
fbstp
mov
inc
rorl
push
add
add
mov
dec
dec
xchg
decl
imul
xchg
lods
pop
loopne
cmc
cmovno
decl
dec
shll
or
cltd
add
leave
popf
inc
inc
stos
adc
pushl
or
pop
xchg
rcr
inc
stos
dec
push
stc
inc
push
sbb
sub
fisubl
test
call
rorl
push
aad
xor
adc
sbb
in
sbb
leave
fiaddl
aad
in
in
mov
loope
pop
daa
jne
adc
fdivr
lea
lock
sub
lcall
lcall
mov
mov
jb
mov
push
adcl
movsl
push
mov
movsb
out
push
test
add
test
aad
inc
add
stos
bound
out
pop
bound
loope
inc
xchg
bound
dec
ljmp
inc
stos
add
sub
pop
test
xchg
cs
jl
stc
fsubs
inc
lcall
sbb
data16
jg
or
mov
arpl
iret
mov
fisttps
cmpl
insb
bound
std
shl
fildl
rorb
or
andb
mov
lcall
add
inc
cmp
rorl
cwtl
jecxz
popa
rolb
pusha
add
push
pusha
xchg
arpl
loope
lds
adc
adc
loop,pt
inc
inc
mov
inc
sbb
jns
xchg
addb
cmpsb
aad
jg
xchg
jnp
sbb
dec
roll
sbb
icebp
incl
gs
xorl
mov
test
mov
inc
cmp
rcrb
fsubp
out
cli
ljmp
cli
mov
ds
popa
loope
lods
andb
sahf
adc
jl
push
adc
das
sbb
mov
and
cli
cmp
lcall
xor
sbb
leave
lea
sbb
and
shl
incl
sbb
bound
in
sahf
push
lock
mov
jle
and
and
mov
pop
into
pop
scas
or
pusha
loop
xchg
jp
scas
pop
fbstp
dec
enter
mov
stos
dec
add
pop
pushf
inc
push
pop
mov
pushl
loop,pn
add
and
lods
es
loop
rcll
mov
sbbb
add
xchg
ror
mov
inc
xor
ffreep
in
cld
data16
mov
jbe
cmpsl
jb
or
dec
push
daa
cld
ja
mov
xchg
or
lret
mov
pushl
data16
movsb
push
rcrl
aad
sbb
pushf
rorl
loope
mov
das
mov
sbb
orl
pusha
das
cli
jmp
nop
in
push
dec
dec
or
stos
adc
jno
loope
decl
sahf
and
sahf
rcrl
and
mov
push
mov
jmp
icebp
dec
mov
sbb
in
shlb
mov
dec
add
push
push
xchg
shll
mov
in
mov
jmp
and
lea
jb
ror
dec
sbb
andl
test
gs
mov
fs
xor
inc
add
xor
mov
ss
push
and
mov
jae
pushl
cld
inc
mov
test
lds
inc
lret
test
sarl
int3
inc
shr
pop
gs
ljmp
incl
test
movb
pop
or
decl
dec
sbb
out
mov
lahf
out
test
js
mov
dec
fsubrl
lcall
push
rcr
imul
jmp
mov
inc
push
incl
dec
push
push
inc
arpl
inc
sbb
xchg
fdivl
xchg
orb
pop
pop
and
jbe
inc
stos
xor
nop
dec
pushf
insb
jns
test
adc
pushf
jns
scas
sbb
or
sar
xlat
gs
or
inc
or
push
loope
and
mov
push
int3
pop
in
shr
sbb
pusha
pop
adc
ljmp
fsubs
test
and
insb
sub
aam
pop
cmpsb
call
inc
push
sbb
sub
fs
pop
test
ret
and
inc
call
lock
arpl
imul
into
stos
aam
out
bound
fnstsw
sub
mov
mov
fucompp
dec
insb
movsl
xchg
aam
pop
or
or
push
je
nop
xchg
decl
pop
ficoms
daa
inc
push
inc
clc
xchg
dec
and
mov
sub
push
fwait
sbb
in
orb
lock
mov
mov
fcmovnu
shll
jle
repnz
rcr
lods
or
insl
int
insl
inc
push
xchg
insl
orl
ljmp
outsl
ljmp
adc
sub
popf
push
fcmovnu
into
lds
in
adc
sahf
inc
xor
fisubl
pop
enter
in
aaa
data16
inc
mov
sbb
scas
cmpsb
dec
aam
insl
call
cmpsb
push
test
cs
add
sub
or
test
push
or
inc
or
or
les
nop
ja
fmuls
sbb
pop
in
fldenv
ffree
dec
xchg
jl
inc
push
push
xchg
jns
lods
mov
cld
mov
adc
cltd
push
daa
and
repnz
popf
hlt
dec
dec
jg
inc
dec
mov
dec
adc
pop
andl
pop
cmc
cld
ljmp
rcrl
or
pop
pop
jne
popf
dec
mov
lcall
jle
ret
fsubs
sub
mov
incb
push
pushl
call
mov
or
sbb
lret
ja
mov
or
or
orb
das
shlb
cmp
sbbl
jecxz
ds
pop
ret
pushl
arpl
or
inc
sbb
inc
and
or
fs
iret
andb
inc
lret
andb
inc
or
or
dec
outsl
and
dec
es
pop
hlt
cmp
jo
push
shl
mov
ss
je
mov
je
inc
and
call
dec
inc
dec
je
push
inc
inc
xor
jecxz
decl
mov
mov
inc
sub
or
or
jecxz
movb
test
jmp
fidivrs
hlt
test
decl
inc
shrl
aas
cmc
pushf
push
int3
cmc
sub
mulb
loope
jmp
mov
inc
in
adc
decb
mov
push
cmpsl
dec
cmc
xor
filds
mov
jae
and
int
lret
jo
in
lcall
pop
jge
pop
scas
sarl
sbb
aad
fbstp
dec
mov
repnz
lods
or
mov
xchg
mov
cs
adc
push
loope
fcomip
jp
mov
sbb
loop
sti
push
mov
inc
push
std
add
mov
or
adc
sbb
sbb
mov
xor
decl
call
sahf
adc
sahf
inc
shrb
loopne
lcall
in
xchg
lar
lcall
lcall
ljmp
inc
mov
fistps
push
add
aas
lcall
lock
add
or
sbb
sarl
jmp
incl
jp
mov
xchg
adc
push
ret
scas
xor
jo
scas
lcall
rcr
decl
and
cmovs
jl
add
push
sbb
test
cmp
cmpl
add
cmp
aam
in
sbb
ljmp
js
daa
add
cmpsl
js
cmpb
sbb
clc
xchg
lret
loopne
sbb
jmp
mov
add
pop
rol
jns
xchg
adc
adc
dec
outsl
cli
decl
adc
insl
jp
icebp
xor
mov
jne
popa
mov
imul
mov
iret
or
xchg
jb
shll
inc
mov
aam
pop
sti
xor
fadds
shlb
mov
ja
cmc
ficompl
xor
call
sbb
insb
push
mov
or
cltd
push
inc
es
sbb
les
xchg
adc
loop
jbe
cmp
loopne
adc
sbb
inc
scas
repnz
ljmp
mov
jmp
cli
in
sub
jge
pop
jge
aaa
adc
decl
pop
sarb
adcl
test
div
mov
mov
leave
mov
pop
fldt
jb
leave
ret
push
lcall
xchg
mov
call
pop
sbb
roll
sbb
jg
mov
mov
pop
fsubrp
inc
add
dec
pusha
lea
js
lcall
sbb
or
lret
and
mov
xchg
cwtl
add
inc
add
or
daa
jo
xor
inc
cld
xor
andb
inc
test
mov
or
es
ret
sub
dec
cmpsb
shlb
and
and
add
lock
mov
push
js
push
js
pop
inc
mov
insl
xchg
sbb
mov
es
data16
jecxz
fistpll
iret
mov
or
mov
dec
lahf
repnz
sub
xchg
scas
adc
jnp
imul
decl
idivl
pop
stos
test
sub
clc
out
pop
xor
loop
adc
clc
jg
ljmp
jb
add
push
xor
fisttps
clc
add
cwtl
jno
incl
push
xchg
jnp
lea
dec
push
sbb
add
loop
decl
imul
rol
and
hlt
mov
je
fisttpll
test
fmuls
sub
rcrb
loop
push
mov
fs
mov
test
mov
push
xor
sub
sbb
movsl
mov
jb
fwait
sbb
push
lods
popa
in
scas
shlb
xor
and
out
cli
das
test
movsl
mov
push
and
incl
je
cmc
out
rorl
mov
repz
mov
xchg
pushl
mov
adc
out
cmp
sbb
outsl
les
and
adc
inc
inc
std
mov
call
mov
inc
hlt
xor
stos
leave
adc
ja
inc
aas
incl
xchg
outsb
push
aas
and
mov
fidivl
cs
fldcw
jb
mov
mov
sbb
call
xchg
in
lea
je
adc
mov
push
pop
pop
adc
add
xor
inc
xchg
jmp
adc
xor
inc
rorl
push
cs
or
movb
push
mov
rcrl
mov
imul
cmp
sbb
cmp
mov
cmpsb
jns
dec
loope
imull
loop
inc
movb
mov
shrb
aam
push
fs
lea
xchg
mov
push
mov
pop
mov
sub
and
pop
fildl
or
push
sbb
out
add
ret
sub
ss
inc
mov
out
cmp
mov
mov
sub
mov
test
mov
lahf
pop
das
sahf
fstpt
mov
daa
jge
repnz
std
lcall
fnstsw
jg
fdivl
cli
or
adc
iret
ds
inc
mov
out
and
jg
sbb
add
add
mov
jae
mov
ljmp
in
into
mov
xor
dec
mov
pop
enter
roll
lock
jne
fisttps
xchg
dec
add
loopne
cmp
leave
daa
dec
xchg
subb
cld
nop
dec
push
test
lcall
xor
das
xchg
add
push
mov
in
bound
in
mov
aam
incl
fisubl
cmp
fidivl
dec
dec
sub
clc
sub
decl
sbb
mov
mov
leave
sbb
aad
lcall
je
dec
ja
ret
test
incl
je
mov
lcall
js
popf
pop
addr16
les
lahf
pop
sti
test
mov
icebp
aaa
sbb
mov
ljmp
and
xchg
out
addr16
stc
inc
sbb
mov
xor
aam
cmp
mov
sub
and
sahf
xor
sbb
sub
pushl
mov
pop
movsb
mov
sub
jns
loop
stos
mov
in
sub
sub
mov
jbe
pusha
mov
push
loope
push
fwait
stos
mov
push
lret
or
mov
mov
add
stos
mov
sub
roll
fs
mov
add
xchg
mov
outsb
sbb
addl
pop
dec
int
lcall
ljmp
cld
xchg
int
sbb
jb
add
mov
adc
mov
test
dec
push
xor
mov
stos
fistpl
shrb
push
aam
mov
cld
ljmp
mov
adc
mov
das
jg
fs
mov
mov
aas
movsl
adc
inc
sbb
decl
adc
push
cmp
mov
xchg
ds
mov
lock
cmp
mov
cmp
xor
or
loopne
adc
cs
lcall
cld
xor
dec
push
lea
xchg
leave
movsl
dec
in
les
dec
ljmp
call
push
or
xchg
int
test
fldcw
fdivp
sbb
pop
xor
decl
ret
in
sahf
movl
push
stc
jno
or
push
jge
or
loopne
je
incl
push
jle
loop
enter
stos
xlat
je
jge
popf
dec
cmc
or
jg
ljmp
pop
mov
and
out
ret
xorb
jg
jmp
sub
lock
cmp
mov
push
and
adc
sub
sub
lock
push
cwtl
inc
pop
xchg
sbb
pusha
push
xor
test
and
mov
or
pop
xchg
mov
push
adc
jmp
bound
lcall
dec
adc
jg
sub
xor
sub
fs
loop
jl
sub
adc
decl
xchg
xor
pop
mov
mov
jnp
hlt
pushl
jle
adc
ss
lea
loopne
adc
ss
pop
int
cltd
dec
jecxz
jo
xlat
sub
nop
mov
sbb
cwtl
inc
pushl
mov
movsbl
rolb
test
repz
cmp
sub
pushl
daa
fldl
ds
imul
sbb
push
imull
sbb
decl
int3
fidivl
mov
push
pop
add
frstpm(287
fsub
push
sbb
adc
jp
hlt
ss
push
sub
cmp
sub
adc
mov
cmpsb
pushf
xchg
xor
adc
andb
incl
pop
js
xchg
jbe
and
cmpsl
jmp
xchg
cmp
incl
pushf
xchg
call
outsb
sahf
test
lock
jne
repnz
mov
mov
fildll
jns
lret
push
jmp
or
jns
push
fiadds
out
je
rcll
mov
and
mov
pop
je
jmp
shl
fildll
orl
mov
ret
add
sbb
ljmp
je,pt
add
nop
inc
sbbb
xorl
mov
inc
sbb
popa
decl
test
and
or
and
mov
call
scas
popf
enter
cltd
lret
dec
scas
test
jmp
push
inc
fstps
inc
and
lcall
lret
mov
or
xor
xor
adc
stos
add
pop
jnp
call
insb
sbb
pop
cld
and
lea
sbb
incl
cmpl
push
movq
sub
mov
mov
adc
mov
add
loopne
xchg
fs
or
ljmp
icebp
mov
test
lea
jmp
push
ss
push
xchg
aad
inc
jo
lcall
mov
xchg
mov
popa
mov
insb
sub
sbb
xor
enter
pop
sub
mov
adc
leave
std
adc
into
fucomp
sbb
ja
lret
nop
cmp
inc
shlb
lcall
adc
out
aaa
inc
enter
sbb
and
ffree
or
inc
mov
add
sarl
xlat
jmp
jge
xor
mov
ja
cli
into
dec
inc
cmp
mov
push
xchg
clc
mov
ljmp
jne
xor
ljmp
imul
xchg
adc
incl
dec
loop
pushf
mov
dec
rolb
rorl
push
sub
mov
push
push
call
into
adc
inc
dec
inc
aas
test
aas
daa
adc
or
jl
or
stos
push
adc
pop
cmp
mov
push
pop
in
cltd
enter
cwtl
out
mov
cmpsb
fcoms
lea
movsb
mov
loope
lea
pushl
lret
sub
cwtl
push
out
adc
mov
rclb
sub
lcall
shrb
push
push
pop
mov
jno
popa
dec
sub
pop
aad
decl
mov
mov
dec
mov
or
divb
xor
xchg
xlat
lods
cli
incl
insl
pslld
or
cmp
in
sahf
sbb
sub
mov
lcall
and
cmp
mov
sbb
call
insb
sub
pop
xchg
mov
ss
in
or
test
movsb
pusha
mov
sbb
xor
cmpsb
call
rorb
aam
xor
lret
xlat
cwtl
xchg
fisttpl
in
mov
gs
flds
repnz
pusha
movsb
add
lcall
and
dec
fistl
sti
jmp
aaa
je
fdiv
cmp
mov
mov
push
std
call
cmpsl
lea
iret
sub
sahf
pop
push
xor
or
enter
push
in
cmp
jb
pop
shrl
sbb
sahf
sbb
testl
ret
jnp
xor
out
push
sub
sub
push
xor
add
icebp
or
incl
scas
xor
imull
and
and
or
mov
test
aaa
or
jge
mov
fiaddl
jmp
push
mov
das
jg
je
sub
pop
idivb
adc
int3
pop
ret
incl
push
scas
pop
pop
sbb
xchg
fstpl
push
js
out
cwtl
mov
xchg
add
insb
jb
pop
iret
iret
or
mov
insb
jnp
fstp
pop
movsb
jg
arpl
fcmovnu
shrb
in
insl
and
scas
in
xor
sub
inc
inc
cld
scas
test
in
and
lods
cmpsl
aaa
es
sub
mov
lret
mov
or
call
les
or
loop
mov
add
ror
mov
fsub
ds
xchg
pop
scas
inc
inc
inc
add
imul
out
fcomip
decl
sub
outsb
ja
and
aam
cltd
pusha
dec
inc
sub
jae
aad
pushl
jb
or
jbe
jl
bound
inc
movb
aam
inc
fcmovb
mov
into
out
mov
mov
mov
dec
lods
mov
repnz
in
dec
pop
push
jmp
dec
mov
incl
insb
or
push
jp
dec
mov
jbe
inc
mov
dec
pushf
xbegin
or
jns
ljmp
inc
dec
mov
outsb
pop
inc
and
dec
push
xchg
cld
mov
ljmp
mov
sbb
pusha
orb
mov
bound
push
push
cmp
add
mov
dec
test
adc
test
or
lock
idiv
rcl
add
mov
or
and
and
pusha
cmpsb
popa
adc
incl
cmp
and
test
in
lods
add
out
or
test
dec
or
mov
int3
mov
mov
call
jb
xlat
mov
decl
mov
mov
test
ljmp
mov
ljmp
adc
cld
call
ret
call
push
incb
mov
push
inc
nop
insb
xor
add
add
add
add
scas
jge
add
add
fildll
mov
loope
sub
pop
test
ljmp
jo
bound
shrb
inc
dec
ss
insb
mov
push
cwtl
cmp
ret
cld
pushl
add
ja
insb
sahf
into
arpl
addl
adcb
mov
ds
in
jmp
add
lret
imul
daa
mov
test
jp
out
lock
mov
shr
call
popf
negb
or
push
dec
pop
jge
call
ret
pop
mov
push
out
inc
repnz
dec
or
pop
add
mulb
push
lds
bswap
fs
xor
cli
pushl
dec
adc
push
hlt
cs
lret
mov
or
push
loop
and
adcl
out
inc
or
adc
inc
repnz
xchg
adc
push
aas
inc
add
in
mov
mov
sub
add
xor
lds
mov
hlt
jg
in
sub
and
and
insb
and
add
clc
in
cmpsb
adc
sub
lods
rcll
sahf
cs
mov
fdiv
test
in
sub
or
dec
or
test
sbb
pushl
enter
sub
adc
cs
mov
mov
inc
cli
decl
test
ret
int3
out
mov
and
push
sbb
jbe
lea
ret
pop
out
es
lret
xor
lea
mov
out
nop
and
loop
cmpsb
jmp
xor
leave
int
hlt
int
lock
mov
pop
sbb
cmp
int3
jb
incl
push
mov
sahf
mov
xchg
add
lock
rolb
mov
xchg
sarb
mov
cmp
ficompl
dec
pop
adc
call
cmp
out
fadd
add
movsb
je
decb
inc
sub
mov
icebp
aaa
push
mov
dec
movsb
aam
jecxz
push
jno
dec
incl
pop
out
call
push
call
lods
jg
gs
movsb
dec
mov
push
add
sub
decl
lock
jns
xchg
dec
sbb
dec
sub
or
into
jmp
cwtl
cmpsl
out
test
outsb
fwait
or
dec
mov
out
sbb
jl
insb
adc
ds
test
shrb
sbb
rcrl
mov
int
inc
adc
andb
adc
sub
cld
incl
hlt
mov
iret
push
test
ss
popa
and
pusha
pop
sahf
orb
gs
incl
ret
mov
rcrb
mov
or
jo
daa
mov
mov
xor
out
push
testb
imul
mov
stc
push
jno
jmp
sub
es
test
sub
loopne
xor
outsl
es
incl
ret
add
shlb
ljmp
int3
push
inc
cmpsl
and
inc
and
xor
lea
outsb
push
push
push
ret
jg
mov
rolb
hlt
scas
jp
add
adcb
dec
ja
jp
insb
cld
ljmp
aaa
mov
and
pop
test
aaa
dec
rorb
pop
or
dec
aas
and
sub
dec
push
cmpsb
cmp
xchg
mov
dec
mov
jecxz
inc
movsb
or
out
cmp
decl
cwtl
dec
sub
hlt
gs
shrb
cltd
cli
dec
dec
xor
inc
xor
xor
mov
les
jp
and
inc
mov
icebp
pushl
cmpsl
je
bnd
mov
stc
push
ja
dec
js
jo
popf
lock
push
addr16
dec
xor
lock
dec
xor
in
or
das
add
dec
test
inc
outsb
push
addr16
pop
push
push
dec
hlt
mov
data16
and
mov
add
clc
mov
inc
pop
jb
sbb
inc
pop
sbb
and
loop
adc
xorl
push
xor
adc
inc
inc
jp
das
shrb
test
movsb
jne
pushf
jp
mov
mov
or
mov
cmpb
hlt
lcall
out
loopne
mov
jge
or
push
mov
int
push
xor
cli
mov
popa
int
sub
pop
sar
pushl
jb
cmpsb
cs
push
bound
push
mov
dec
popa
pop
je
mov
bound
xorb
lods
adc
sar
int
and
sub
sub
and
jg
es
loop
sbbb
fcomps
imul
jle
pusha
cli
fistps
mov
lods
addr16
sub
jo
imul
js
aaa
cmpsb
adc
ljmp
lea
enter
cmovbe
sub
orl
and
ja
incl
outsb
outsl
add
fadds
jnp
jo
out
xor
add
sbb
lods
add
mov
xchg
inc
push
adc
jg
stos
push
or
add
outsl
mov
movb
mov
push
std
out
dec
in
std
idiv
xor
xor
and
add
sub
xor
lods
insb
movsb
out
loop
jmp
or
mov
lret
mov
insb
push
add
hlt
decl
xchg
andl
xchg
fisttps
out
movsb
stos
push
and
in
fs
pop
sub
inc
test
adc
lods
ljmp
and
push
adc
call
or
jmp
adc
mov
dec
inc
or
in
push
mov
jnp
cltd
jnp
rolb
lcall
es
loop
lea
aam
cltd
sbb
inc
mov
add
lods
mov
inc
shrl
lret
pop
por
push
fdivrl
mov
sbb
adc
mov
andb
mov
sub
pop
nop
in
mov
xchg
sbb
mov
setp
adc
cwtl
add
jne
inc
data16
pushl
inc
stos
lock
pop
and
hlt
inc
jae
xchg
fistps
or
test
icebp
loopne
jg
add
fcomip
mov
enter
pop
mov
daa
jg
ljmp
mov
or
add
insb
sub
lret
sub
rcrb
outsl
push
pusha
imul
shll
cwtl
les
jns
sub
xchg
movsl
jg
jmp
imull
dec
cs
mov
aad
push
dec
loopne
cmp
ficompl
xchg
outsb
lds
outsb
jb
stos
adc
lock
ds
push
sar
jmp
js
cmc
jb
mov
adc
xor
jno
out
add
push
or
std
incl
daa
lods
dec
mov
movsl
aad
out
loope
mov
jbe
scas
adc
pushl
loop
ret
orl
cmp
mov
data16
lcall
int
lcall
movsl
icebp
outsl
scas
aad
jae
pop
dec
int
scas
stc
mov
sub
adc
call
or
and
ljmp
jns
mov
shll
inc
mov
mov
jg,pt
or
cmp
xchg
negl
lcall
leave
xor
jmp
int
inc
inc
sub
mov
add
in
and
inc
cmc
int
pop
sbb
lcall
shr
nop/reserved
jae
sbb
iret
aam
or
lcall
inc
push
pushf
mov
xchg
repnz
outsl
mov
cmp
fld
and
sar
incl
xchg
and
xchg
dec
push
sti
je
mov
push
cmc
mov
sub
imul
dec
out
out
cli
lahf
mov
incl
fstps
ss
daa
aaa
cmp
in
jl
add
push
leave
dec
mov
gs
out
sbb
xchg
test
or
dec
enter
into
jbe
into
lret
xadd
sbb
scas
mov
pop
push
add
and
jb
shll
or
cmp
testl
inc
push
mov
sar
pushf
iret
adc
sarb
and
into
sub
shrl
filds
sbb
and
add
xor
mov
sub
lret
mov
movsl
sub
call
leave
bound
mov
sahf
sbb
ljmp
data16
xchg
lea
out
mov
sub
mov
jmp
cmp
sti
sbb
sub
mov
outsl
xor
add
call
sbb
adcl
rorb
or
mov
decl
fs
xor
loopne
neg
add
inc
xchg
xor
nop
push
push
aam
jecxz
adc
out
xor
nop
outsl
pushl
push
bswap
inc
mov
fidivl
insb
jno
scas
cli
cmp
int3
mov
push
es
lds
sub
push
mov
cli
mov
cmp
xchg
jns
ret
decl
xchg
lret
inc
imul
jl
inc
xor
push
push
add
xor
jl
les
aad
loop
cmpsl
movsb
dec
mov
add
insl
jmp
pusha
add
int
mov
push
lret
mov
popa
cli
inc
lods
rolb
mov
std
mov
call
aaa
fiaddl
cmp
xchg
psubw
lcall
pop
mov
inc
jmp
cmp
add
sub
cli
xlat
jle
ljmp
fisubl
ret
xlat
aad
xlat
and
ja
mov
test
push
push
fdivs
cmpsb
jmp
bound
cli
xchg
or
dec
jmp
mov
pop
mov
push
call
decl
xor
xor
xchg
call
testl
jmp
fsubrp
popf
xchg
stos
mov
and
xorb
mov
decl
mov
xchg
inc
inc
jl
in
jmp
incl
or
inc
cmp
xchg
popf
cmpsl
insl
xchg
or
mov
jle
fildll
in
push
ja
xor
jmp
daa
leave
sti
sbb
pop
and
sub
in
pushl
leave
popf
add
js
int3
popf
and
cmovb
nop
push
sbb
shl
sbb
call
ss
fcompl
jns
inc
cmp
call
dec
xchg
sub
call
popf
jg
lods
adc
add
and
shlb
inc
pop
call
sbb
sbb
ret
orps
stc
jae
xlat
xchg
inc
xor
push
dec
cmp
shrw
outsl
push
mov
lret
lret
sub
movsl
jnp
scas
push
or
push
sub
in
imul
pusha
movsb
cmp
or
mov
inc
jmp
dec
mov
adcb
pop
jo
into
cli
add
clc
xchg
cmp
into
jl
sub
jmp
sbb
mov
pop
nop
lods
mov
decl
add
push
mov
out
ffree
jno
loopne
mov
cmp
mov
jmp
loop
mov
fildll
inc
in
fnsave
sti
js
shlb
divl
fsub
lret
call
std
call
out
jle
mov
popa
or
sbb
loop
sub
call
push
push
sub
mov
dec
loope
adc
and
aam
push
pusha
test
lea
call
loope
inc
loop
and
mov
adc
xor
ret
lea
pushl
out
add
cmp
enter
mov
or
push
nop
cmp
call
push
mov
push
pop
push
inc
cltd
les
inc
and
ljmp
test
mov
test
xor
push
ds
cmc
adc
pop
sbb
and
rorb
mov
aam
imul
popf
leave
adc
pop
out
lock
jl
adc
inc
mov
pusha
lock
jg
incl
mov
lea
mov
dec
ljmp
lods
mov
inc
dec
jmp
dec
int
xchg
push
jb
dec
aam
xor
sahf
pop
push
mov
test
stc
adc
rolb
addr16
jmp
sbb
push
dec
and
rorl
push
dec
xchg
dec
and
jmp
mov
mov
dec
out
mov
inc
daa
adc
fldenv
push
out
arpl
popf
fnstcw
mov
push
insb
mov
out
outsl
lds
adc
test
mov
jo
xor
jg
insl
pop
jb
dec
lods
fwait
ret
jmp
loopne
imul
fstps
test
pop
xor
push
das
leave
push
xor
jo
cmpl
add
sbb
prefetchnta
add
adc
pushl
ljmp
push
adc
adc
sub
insb
mov
mov
push
jae
pushl
mov
jecxz
dec
int3
cwtl
arpl
nop
pop
jb
in
pop
or
or
ja
out
xor
cmp
call
jg
hlt
movsl
fdivrl
xchg
inc
xchg
mov
mov
pop
gs
pop
lcall
cs
push
jmp
lods
in
inc
fnstcw
jnp
add
jmp
cwtl
cmp
lahf
mov
jmp
sar
decl
mov
sahf
push
cmpsl
aaa
cmp
mov
shll
jbe
repnz
dec
mov
out
mov
xchg
jecxz
dec
xchg
pop
sti
aad
fs
and
mov
sbb
jns
xchg
mov
mov
out
stc
ljmp
call
xchg
pop
mov
in
ds
push
mov
xchg
jno
leave
xor
ror
stos
add
int
jl
xor
xchg
pop
jae
incl
cli
dec
cmp
movb
or
cmp
pop
les
sbb
aaa
cmpsb
lret
gs
mov
xor
loope
sub
xor
mov
xchg
fwait
cld
call
andb
std
jmp
andb
jbe
cmpsl
inc
insl
sub
call
out
mov
je
es
mov
mov
mov
jge
push
mov
pop
dec
pusha
add
mov
push
insl
dec
loop
xchg
mov
inc
and
or
ficoms
fistl
lcall
lcall
mov
dec
pop
dec
inc
pushf
jne
inc
xchg
les
ljmp
jmp
push
enter
lret
mov
into
xchg
xor
jmp
dec
push
pop
mov
subb
push
push
sbb
push
movsl
xchg
pop
fiadds
xchg
sub
xor
add
mov
jnp
orl
test
dec
mov
das
jg
and
jmp
repnz
and
ret
sbb
daa
push
in
cmp
aad
jo
test
mov
mov
jle
dec
out
orb
cltd
jge
lahf
popf
sub
mov
out
or
jmp
pop
imul
andl
sbbl
add
pusha
in
pop
cs
jg
fildll
or
aaa
rcl
inc
cmp
xchg
aad
lret
jmp
popa
dec
dec
sub
mov
push
sbb
or
in
mov
sbb
inc
ljmp
fcmovbe
in
and
jae
or
sbb
test
xchg
pop
jmp
xlat
pop
test
mov
mov
loop
or
cmpsb
movsb
mov
xchg
dec
mov
xchg
fildll
call
shrl
fsubl
dec
adc
call
or
sub
sub
xor
inc
rcrb
adc
cltd
sar
xchg
mov
sbb
add
and
incl
ljmp
mov
fs
cltd
lods
dec
sbb
ret
sbb
out
orb
dec
push
xor
dec
cltd
pop
push
lret
and
ljmp
cltd
jb
push
xor
sbb
inc
and
cmpsl
fwait
or
ljmp
ljmp
mov
jmp
rclb
loopne
shll
cmp
incl
jae
ljmp
aas
cmpl
xchg
dec
jecxz
jg
js
cli
scas
idiv
xor
push
inc
mov
int3
out
mov
js
stos
pop
inc
loopne
xor
loopne
lcall
ljmp
fwait
nop
into
push
movsb
ror
ja
cmp
nop
sub
inc
call
sar
jge
cmp
lods
push
push
xchg
xor
sbbb
decl
adc
insl
nop
push
and
push
cmp
test
dec
inc
shl
xor
cmp
shrb
jo
cmp
and
arpl
fidivl
dec
pop
push
or
lcall
mov
test
pop
or
xor
mov
lret
ss
scas
fucomp
xchg
push
fcoms
mov
jle
shr
and
ljmp
mov
gs
adc
data16
fmuls
gs
popf
aad
shll
xchg
aas
decl
or
gs
js
dec
cmpsb
dec
loopne
cmpsl
dec
push
lds
orl
outsb
scas
imul
jl
xchg
mov
pop
xchg
xor
push
pushf
in
push
mov
cwtl
push
or
inc
dec
ret
loope
cmp
outsb
out
jl
stos
lcall
push
mov
xlat
xchg
aaa
xor
push
jb
mov
push
adc
sahf
mov
mov
cvttps2pi
ja
rcl
add
mov
fdivrs
cmp
mov
or
add
cld
push
dec
pop
xor
xchg
cmpsl
ret
sbb
std
pop
cmc
push
push
std
mov
andl
fs
inc
sbb
adc
incl
push
push
sbb
add
push
rcl
add
test
sar
lds
cli
mov
xchg
cmp
popl
mov
sahf
das
lret
jne
adc
mov
rorb
xor
nop
ljmp
lcall
lcall
sub
cmp
jg
adcl
mov
in
push
ljmp
cmp
dec
cmpsb
and
jge
jl
popf
jmp
gs
insb
out
dec
ja
out
mov
mov
inc
out
pop
add
hlt
test
pop
outsl
add
xor
sti
fisttps
push
add
push
cltd
or
stos
mov
push
push
jmp
dec
jmp
jg
xchg
call
push
std
dec
pushf
xchg
and
lods
adcb
lcall
stos
lcall
jb
test
push
push
loopne
inc
popa
imul
push
fnstcw
mov
inc
into
outsl
jge
mov
mov
pop
ret
int3
xor
hlt
mov
loope
adc
xor
pushl
fadds
mov
in
loope
mov
mov
inc
sbb
or
inc
jg
inc
les
sub
addb
xor
sarb
daa
inc
shlb
call
mulb
addb
adc
inc
pop
es
sbb
pop
sub
jg
aaa
jo
and
adc
xchg
imul
addr16
pop
push
daa
pusha
in
inc
adc
xchg
out
adc
pop
cmp
sub
push
jne
orb
adc
xchg
cs
adc
cmp
ja
push
add
jge
push
mov
inc
imul
xorb
or
xor
movsl
push
jne
jb
mov
ja
jg
xor
cmpsl
sub
movsb
dec
sub
sub
shrl
xor
gs
ljmp
fsub
imul
jge
data16
daa
fidivl
cmp
pushl
mov
mov
jnp
pop
sub
addr16
push
xor
and
lret
push
sbb
mov
out
cmpsb
outsl
test
sbb
out
or
les
popa
add
call
mov
stc
add
adc
jo
xor
lret
mov
pop
adc
dec
inc
loopne
lcall
or
push
ljmp
add
in
jnp
and
mov
incb
imulb
mov
mov
sbb
inc
inc
arpl
arpl
outsb
pop
inc
add
or
pusha
jb
and
adc
jecxz
jne
outsl
push
xor
inc
and
pop
lock
push
je
gs
inc
pop
add
adc
loop
dec
push
pop
leave
mov
adc
jecxz
and
enter
loop
or
call
out
lcall
daa
dec
push
imul
adc
and
sbb
daa
inc
stos
rcrl
ret
xchg
adc
rcll
sub
fnstcw
pusha
push
cld
fwait
or
pop
mov
popa
cs
ljmp
mov
adc
push
sub
inc
push
and
jg
call
push
jno
jo
cmp
addl
mov
movsl
sbbb
jg
out
jbe
gs
test
mov
mov
adcl
xor
cld
mov
add
mov
decl
inc
in
mov
insl
test
xor
push
inc
call
sbb
push
or
jl
js
sub
jnp
sbb
xor
addl
push
movsb
xor
in
sbb
xor
jmp
xor
adc
push
cmova
xchg
jg
loope
inc
push
inc
scas
inc
and
fwait
aas
mov
pushl
mov
or
call
pop
loop
push
adc
inc
xchg
xchg
out
mov
add
add
call
jae
ret
xchg
and
inc
push
dec
adc
xor
lock
sub
adc
xchg
adc
dec
incl
call
leave
and
inc
mov
cmp
xchg
cmp
sbb
sbb
pop
cmp
fbstp
mulb
rcrb
lock
loopne
sbb
pop
cld
pushl
ss
cmp
sub
mov
jo
mov
imul
scas
xchg
adc
lock
lcall
jns
popa
sub
add
xor
ret
testb
or
xchg
nop
filds
iret
jb
out
xchg
rclb
jb
dec
lods
out
mov
xchg
mov
lcall
loope
mov
mov
add
sbb
loop
das
mov
jg
mull
adc
mov
das
call
pusha
jae
decl
out
call
sbb
adc
jbe
insb
sub
test
int3
pop
sbb
decl
add
fwait
test
repnz
push
hlt
push
sbb
xor
leave
ss
out
clc
inc
cmp
jbe,pn
push
aaa
xor
shlb
and
lea
test
mov
mov
incb
call
xlat
sub
es
sub
or
or
mov
jg
incl
and
add
shlb
dec
mov
jmp
decb
or
jne
insl
enter
sub
jbe
sbb
lcall
push
lahf
cs
xor
xchg
sub
imul
stos
fiaddl
decl
xor
sarl
fucomip
lods
cmp
push
jo
inc
add
cs
dec
mov
jp
push
inc
lahf
adc
repnz
or
js
mov
inc
fistl
into
mov
mov
mov
lret
and
sub
cmp
cmp
shrb
pop
out
das
sarb
mov
fs
sar
pushl
jle
insb
ja
ds
adc
ljmp
pop
sbb
notb
cmpsl
push
scas
adc
incl
inc
js
sbb
push
pop
movsb
clc
sbb
sbb
mov
cli
push
mov
mov
ljmp
mov
leave
out
mov
pop
cmp
rcr
fwait
leave
cltd
loope
and
jno
push
pushl
mov
bound
scas
fldcw
insl
loopne
or
test
stos
and
sbb
incl
dec
jecxz
mov
sub
test
decl
popa
push
inc
and
lds
inc
dec
and
mov
iret
repnz
jbe,pt
cs
push
rcll
addb
sahf
pop
pop
imul
sbb
addr16
mov
xor
mov
es
cmpb
pushl
push
inc
pop
pop
cmp
add
jp
scas
sar
mov
cmp
notl
mov
xchg
mov
psrld
sbb
jmp
inc
adc
or
and
or
stos
js
inc
popa
or
stos
mov
adc
mov
sar
adc
clc
and
sub
repnz
xor
xchg
cmp
lcall
mov
sarb
and
cltd
push
mov
mov
jg
mov
inc
add
rclb
inc
jle
xor
outsl
adc
call
mov
rcrl
pop
jmp
inc
dec
inc
sbb
xor
and
ljmp
push
mov
mulb
xchg
sbb
mov
in
mov
test
incl
dec
xchg
fwait
aam
inc
fwait
pop
mov
ficoml
jl
cmpsb
in
sub
stos
xor
incl
call
push
pop
fidivl
jae
es
ss
mov
leave
xor
push
std
push
repz
in
pop
mov
or
adc
dec
ror
mov
cmp
mov
cmp
iret
jp
shlb
test
ret
mov
push
mov
and
lret
add
stos
push
int
pop
pushf
mov
sub
scas
aam
push
mov
and
hlt
jp
cmp
scas
cmp
dec
pop
lahf
pusha
and
ljmp
xchg
mov
call
cmp
shll
imul
pop
add
call
call
xchg
or
dec
int3
pop
xchg
cmp
xor
sub
mov
pop
sbb
incl
into
cmp
in
outsb
stc
aas
push
lcall
sbb
imul
les
dec
lret
sbb
mov
jne
ljmp
mov
hlt
dec
popa
dec
and
cmp
adc
mov
jmp
cwtl
xor
push
sub
inc
sbb
sbb
xchg
movsb
add
out
pushf
mov
test
aaa
arpl
test
mov
jb
jae
push
inc
fs
subl
je
mov
std
ljmp
pushf
repz
xor
push
pop
fsubl
sub
out
cli
jg
cltd
mov
mov
xchg
jb
adc
pop
jg
ds
incl
xor
mov
imul
push
addr16
jmp
incl
adc
movsl
xor
loopne
xchg
and
lret
jp
push
ljmp
jp
add
lret
mov
mov
jg
mov
adc
scas
adc
aaa
xor
jl
add
inc
test
mov
incl
fsubs
mov
call
ja
mov
jnp
imul
lods
inc
lock
cmp
cmp
lret
sahf
int3
int
int
int
cmp
jecxz
insl
mov
sbb
cld
fildll
test
sbbl
cli
jmp
add
mov
cmp
and
xchg
outsb
pop
cmp
das
adc
jo
jl
pop
add
pop
add
hlt
out
aad
ret
std
adc
sbb
in
inc
stos
fs
and
cmp
push
inc
ret
inc
sbb
xchg
aaa
cld
pushl
jns
and
rolb
les
out
test
lods
xor
push
push
xorl
out
jo
js
sub
push
sub
jns
adc
ljmp
add
rolb
cmpsb
adc
data16
dec
lret
insl
xchg
addl
sub
pop
jne
sbb
xor
test
cs
jp
push
xor
out
lods
insl
add
nop
mov
incl
lock
fstpl
insl
xchg
popa
pop
cmp
ds
add
shrb
mov
jo
pop
lods
incl
adc
sbbl
pop
popa
jns
es
mov
aas
mov
mov
dec
push
ror
fs
decl
fisttpl
or
or
cmp
xchg
dec
test
inc
or
out
je
pop
adc
xor
fsubrl
imul
fcmovnb
imull
decl
adc
loopne
add
fnsave
pop
mov
ljmp
das
mov
jle
cmp
sub
incb
roll
sub
add
test
ja
sahf
dec
push
xorb
pushl
xor
mov
dec
aad
insl
add
mov
cmpsl
orl
mov
decl
loope
xor
jo
into
xchg
adc
ret
cmp
jp
jno
dec
xor
icebp
cmp
test
ljmp
dec
fwait
push
cmp
sahf
jge
mov
ds
jbe
test
lcall
mov
xchg
mov
in
insl
out
clc
decl
insl
lock
cwtl
sub
dec
mov
mov
mov
aad
push
cs
jmp
mov
pop
test
add
leave
push
pop
in
sub
sub
adc
push
push
pop
shlb
cmp
xchg
dec
mov
jmp
and
stc
mov
xlat
je
xchg
fdiv
outsb
and
icebp
incl
mov
adc
shlb
aam
dec
sbb
int3
jo
incl
fisubrl
or
or
jl
lcall
sbb
mov
test
cmpsb
sbb
or
mov
pop
push
leave
cmp
incl
jge
or
push
aad
sub
xor
hlt
popf
push
sbb
jno
lea
inc
jb
dec
lcall
in
mov
sub
push
ret
push
repnz
mov
dec
shrl
mov
cli
lock
cmp
pushf
and
and
loop
lods
cmp
sub
sbb
mov
and
and
jle
out
addr16
nop
les
dec
pop
repnz
push
xorl
mov
addl
push
mov
outsb
mov
ss
add
sbb
inc
and
sub
cltd
test
scas
imul
enter
mov
cli
push
xchg
xor
lahf
lds
rcll
add
jmp
enter
mov
ljmp
push
pop
dec
fs
incl
rcrb
int3
mov
ja
mov
stos
jmp
orb
push
pusha
inc
xchg
and
test
test
mov
or
pop
jno
les
aam
jg
jecxz
sbb
sbb
inc
xchg
sub
pop
mov
xchg
xlat
lods
push
mov
or
mov
pop
cmpb
ffreep
lea
call
pushf
adc
push
jecxz
mov
fisttps
jo
outsb
xor
mov
mov
ret
xchg
xchg
sbb
repnz
ljmp
adc
out
fldt
mov
mov
int
mov
imul
cld
scas
jle
jns
popa
imulb
add
and
roll
icebp
sbb
lcall
pusha
add
sub
sub
mov
mov
mov
scas
or
in
fbstp
negl
clc
jle
stc
cmp
daa
iret
cmpsb
cmp
adc
iret
scas
push
mov
enter
cmpsl
or
ret
mov
xchg
xor
lcall
xor
or
cmp
bound
xchg
mov
cmp
cmp
cld
jmp
xchg
push
pop
adc
inc
getsec
xchg
sahf
jg
push
je
and
inc
cmp
xor
xchg
inc
jmp
mov
fwait
outsb
cli
test
test
incl
mov
outsl
mov
insb
jo
leave
ficomps
negl
popa
mov
sub
add
dec
call
fprem
movsb
out
in
sbb
mov
lret
add
or
xor
sbb
pop
add
movsb
jae
xor
in
xchg
fs
add
outsb
sub
xchg
push
adc
inc
insb
add
cli
ljmp
or
cmpsb
dec
repnz
sbb
ss
jbe
insb
lret
and
je
push
mov
push
lock
ljmp
movsb
cmp
ret
pusha
shll
mov
ss
enter
test
test
sub
adc
or
ret
mov
subb
leave
int3
movsl
insb
ltr
lds
mov
popf
and
jns
cmp
mov
rcl
scas
int
in
inc
push
xor
repz
stos
cmc
out
filds
mov
add
inc
mov
decl
lock
decb
lret
cmp
fnstcw
cmp
loopne
rorb
nop
pop
cli
push
aas
sbb
outsl
cli
dec
cmp
and
lock
push
arpl
movsb
pusha
inc
or
ljmp
rolb
cmpsl
popf
jbe
push
stos
cmp
hlt
mov
cmp
push
clc
mov
incb
shr
adc
rorb
add
xchg
and
push
push
cmpsl
push
push
lock
xchg
ficoms
repnz
add
insl
push
fistpll
ja
xchg
mov
popf
sub
dec
push
add
or
xor
dec
sbb
cld
repnz
xor
pushl
mov
inc
push
out
sbb
xor
stos
push
push
or
xchg
enter
bound
test
dec
dec
call
dec
or
movsl
dec
aaa
lods
or
in
sub
ficoml
xchg
inc
jne
dec
cltd
sub
dec
xlat
dec
ljmp
iret
ds
orl
jp
sub
push
mov
push
pop
fstpl
mov
lret
sub
loopne
ljmp
fimull
mov
inc
pop
jmp
mov
enter
loopne
cs
mov
fsub
xor
sbb
addr16
xchg
pop
into
fsubrs
add
clc
sbb
add
cmp
adc
in
xchg
subl
int3
shrl
notb
jge
js
nop
mov
cltd
daa
cmp
mov
jl
mov
call
jle
arpl
lea
pop
dec
and
adc
lods
inc
pop
fisttpl
dec
cmpsb
sbb
adc
jg
pushl
and
dec
inc
mov
cmpsl
inc
shlb
inc
imul
cwtl
adc
ja
lret
cs
mov
mov
sahf
add
push
and
or
sbbl
incl
test
pushf
ds
inc
add
pushl
mov
scas
cmp
dec
cmp
bound
inc
sahf
xchg
fcomp
push
jp
sbb
pop
cmc
scas
ja
and
mov
bound
add
sub
pop
icebp
xor
ss
pop
hlt
ljmpw
dec
mov
mov
call
ret
or
ds
add
pop
add
mov
loop
sti
or
jns
clc
int
test
mov
imul
or
jnp,pt
cltd
lcall
mov
push
das
jne
outsl
pop
lcall
mov
stos
sub
inc
fmuls
jecxz
fwait
cld
out
pusha
mov
dec
cmp
inc
or
into
cmp
inc
add
adc
lcall
sbbb
xor
jns
jecxz
xchg
loopne
xchg
add
sbb
mov
adc
into
mov
pop
es
test
mov
and
scas
jg
sbb
sbb
add
sub
pop
adc
xchg
les
xor
sbb
mov
pop
mov
popf
add
jg
xchg
and
fisttpl
in
mov
pushl
ds
call
xchg
jmp
push
sbb
mov
push
inc
lret
pop
out
cmp
bound
nop
cmpsb
sub
into
dec
call
stc
sti
adc
sahf
push
pusha
in
aam
fadds
sub
daa
mov
rorl
dec
inc
sub
mov
lret
mov
mov
dec
pop
movsl
sub
pop
negb
iret
es
jge
jmp
jge
adc
sarl
pop
lods
mov
mov
addr16
or
fsts
mov
mov
in
xor
cmp
aas
and
stos
int3
push
add
fs
fildll
adcb
lods
lahf
outsb
loop
loopne
push
adc
or
js
aad
jp
sbb
pop
inc
loop
pop
adc
je
cwtl
subb
in
decl
fs
repz
adc
inc
jge
jge
ss
mov
decl
or
jnp
push
aaa
adc
sub
orl
inc
leave
pop
xor
sbb
incl
sub
adc
adc
inc
or
loop
mov
jecxz
adc
mov
popf
test
decl
dec
scas
adc
add
mov
xchg
movb
dec
push
add
mov
jne
test
jecxz
mov
dec
xor
sub
xchg
add
or
repnz
jl
rorl
insb
and
and
scas
jns
pop
mov
or
daa
adc
jbe
xor
fwait
lock
xchg
jecxz
inc
aad
clc
mov
xchg
push
push
in
dec
mov
xchg
mov
and
push
pop
and
jmp
and
notl
sarb
push
push
insb
jae
mov
sub
jg
adc
cmp
jmp
mov
out
push
or
mov
adc
cmc
or
fistps
mov
mov
inc
sbb
or
xlat
cmp
sahf
out
out
decl
and
inc
into
or
out
jno
cmp
jmp
and
loop
pop
movb
fs
pop
aas
or
icebp
sarl
movq
sub
int3
lret
mov
xchg
ret
cmp
fisubrs
adc
pop
out
mov
mov
in
js
inc
pop
js
aad
rcl
ss
mov
repnz
add
sbb
jl
mov
lcall
dec
fnsave
and
xchg
mov
mov
sub
pushl
mov
imulb
sub
lret
sub
ja
clc
loope
cmp
pop
adc
and
call
stos
push
pop
ret
dec
add
adc
adc
cltd
mov
les
notl
mov
cmp
movsb
mov
sub
or
cmp
and
xchg
hlt
pop
iret
stos
mov
pop
pop
pop
out
jnp
xor
pushl
xchg
scas
hlt
mov
pusha
xchg
mov
mov
stos
jbe
lahf
push
andb
aaa
aas
in
mov
test
jmp
notl
mov
clc
ja
shll
xchg
add
aaa
push
sub
sub
test
decl
adc
push
bound
cli
pushf
lea
lcall
adc
inc
mov
in
mov
clc
test
sbb
pop
add
mov
loop
xchg
sarl
scas
mov
or
lcall
out
sub
and
ss
sbbl
mov
mov
incl
xchg
mov
cmp
adc
jp
enter
sbb
out
loope
inc
mov
xor
sub
ds
incl
sbb
mov
je
mov
cmpl
mov
mov
es
cmp
pusha
mov
or
cmpb
adc
rol
ljmp
xchg
scas
leave
shrb
xchg
mov
lcall
fidivs
in
mov
sbb
mov
lret
mov
das
sub
jo
xchg
enter
jmp
xchg
sahf
or
adc
mov
mov
dec
or
leave
es
aaa
mov
mov
mov
daa
imul
xchg
jno
scas
push
sbb
divl
adc
ds
out
add
sti
clc
pop
push
mov
std
jmp
decb
push
movsb
shlb
jns
mov
jg
pusha
mov
popa
push
cld
orl
test
ljmp
mov
fisubl
out
dec
mov
movsb
xor
add
mov
inc
decl
adc
movsl
or
cwtl
nop
pop
add
sbb
lretw
adc
add
fimuls
xchg
orl
out
imul
push
mov
fwait
xor
rorl
mov
loopne
es
les
sub
adc
sub
inc
mov
clc
pushl
or
sbb
mov
inc
mov
adc
fwait
sbb
xor
rol
or
movsl
xchg
or
xor
cmp
fdivl
repnz
push
jbe
pop
dec
lcall
scas
loope
sahf
pop
sub
mov
scas
fmull
popf
and
push
fnstenv
sub
jmp
jge
jno
mov
fdivl
or
jns
mov
add
mov
orl
adc
ljmp
shll
push
mov
jp
fildl
mov
jnp
push
mov
decl
inc
mov
cwtl
or
push
nop
mov
out
mov
std
jae
in
mov
lods
adc
cmp
repnz
jg
add
add
cmp
and
sbb
int
insb
or
test
ja
stos
xchg
fldcw
nop
icebp
jo
adc
push
push
inc
outsb
mov
inc
mov
and
scas
mov
cmpsl
repz
sbb
mov
decl
or
xchg
nop
inc
or
sub
test
cltd
and
nop
jb
add
adc
popa
mov
cld
pop
cmp
adcb
dec
cli
adc
push
and
cld
enter
xor
and
and
and
xor
ljmp
mov
add
pushf
shlb
lods
xchg
mov
subb
mov
pop
sbb
cmp
xchg
and
lcall
jp
dec
pop
cld
mov
lret
lcall
sti
mov
stos
sahf
pop
cmp
cmp
stos
loop
mov
cmpsl
out
lcall
sub
les
inc
jne
and
jb
jnp
sbb
lcall
stc
das
add
loop
sbb
dec
adc
jge
lds
ds
decl
pop
mov
mov
push
sub
or
push
mov
sub
mov
bound
std
mov
adc
or
adc
cmp
adc
ljmp
add
ljmp
js
aam
mov
hlt
imul
lcall
xor
jmp
sub
xorb
cmp
push
scas
mov
or
xchg
movsl
les
xor
popa
inc
mov
mov
jmp
pop
lea
jnp
or
clc
push
mov
sub
jg
ret
mov
cwtl
mov
roll
sub
cltd
cmc
ljmp
and
cld
mov
ljmp
inc
or
sbb
mov
cmpsb
fidivl
dec
xor
mov
stos
in
fdivp
sub
inc
es
push
mov
es
mov
jl
in
or
mov
xor
cltd
jmp
and
bound
push
mov
decl
sub
notb
pop
pushf
mov
pop
pop
imul
jb
dec
sub
call
mov
mov
icebp
jp
notb
sub
push
sbb
mov
hlt
adc
cmp
or
gs
mov
aas
mov
addb
nop
cltd
push
xor
mov
ljmp
rcrb
daa
rorb
jge
sbb
addb
mov
sbb
cld
in
cld
in
nop
xor
push
nop
dec
and
scas
loop
or
insb
push
stos
mov
movsb
sub
jg
push
jno
pop
mov
out
cmp
dec
inc
scas
mov
mov
add
mov
hlt
sbb
aaa
ret
pushf
enter
adc
sbb
or
xor
adc
adc
push
mov
cld
pop
std
decl
pop
pushf
jb
leave
xchg
in
jno
adc
sbb
jmp
pushl
mov
mov
cmp
sbb
dec
cmp
and
cmp
adc
push
xor
call
mov
mov
and
and
nop
lret
mov
mov
clc
mov
movsb
jb
mov
lock
or
incl
ret
fdivrs
xchg
scas
popf
das
lcall
pushl
roll
or
xor
fisttps
inc
fmull
sbb
fistl
xchg
adc
leave
adcl
aam
push
cmp
sub
test
dec
std
sub
das
fwait
sub
js
addb
dec
ret
mov
sbb
adc
xchg
mov
lcall
lods
push
stos
std
inc
xor
movsl
shrl
jno
pop
lods
lret
lods
sub
pop
cmp
lcall
sbb
cmpsb
cwtl
enter
in
dec
adc
pop
das
push
fidivs
pop
xor
add
std
call
lods
cmp
cmp
xlat
jno
dec
lea
aam
int
inc
dec
sar
add
cmc
ret
xchg
adc
cmc
call
mov
mov
lea
es
out
mov
mov
push
and
jecxz
inc
das
or
enter
xchg
mov
scas
or
mov
int3
pop
pop
sub
ret
decl
adc
stos
fistpll
pop
gs
aam
fs
cmp
lcall
cli
clc
mov
clc
inc
jg
mov
es
or
cmc
cli
call
gs
jp
mov
movsb
and
xchg
cmp
out
mov
call
ret
adc
sub
inc
jnp
cltd
xchg
icebp
push
mov
lods
mov
fwait
push
push
cld
mov
fsubrl
mov
cs
orl
ret
push
lcall
adc
jo
aad
in
jmp
mov
cmp
shll
fsub
cmp
out
call
xor
arpl
adc
mov
test
or
pop
popf
inc
xchg
call
add
fwait
cmp
test
xchg
ret
dec
lret
scas
xchg
lock
xchg
inc
loope
test
in
xor
jle
jno
in
jg
push
jl
and
movsl
adc
push
in
adc
xor
test
adc
cmp
stos
inc
adc
mov
mov
enter
pop
out
fldt
cmp
fistl
incl
and
mov
xor
rsm
cmp
lds
sti
ljmp
jg
stos
xor
jns
cmc
dec
pusha
into
mov
dec
sbb
out
cli
xchg
jne
shr
jg
jg
cmp
test
jns
mov
stc
fneni(8087
pop
jb
subb
sbb
std
sub
loopne
add
mov
out
clc
fmul
mov
ret
rcr
addl
stos
and
nop
aaa
add
mov
mov
scas
jmp
call
ror
lfs
push
iret
mov
test
movsl
int3
push
sub
arpl
add
pushl
xor
movsl
imul
repnz
pop
cmp
rclb
xor
mov
or
call
mov
jecxz
cmpl
es
filds
mov
mov
pop
sahf
mov
ljmp
push
mov
or
or
fwait
incl
inc
jle
fcompl
sub
out
xor
push
inc
dec
hlt
call
push
inc
push
jb
lcall
outsb
mov
ljmp
push
ror
mov
or
mov
decl
cmpsb
scas
add
flds
mov
cmp
pushl
cld
ljmp
mov
daa
mov
mov
xchg
aaa
add
lret
pusha
in
cmp
ljmp
clc
xor
adc
mov
das
adc
adc
push
inc
pop
out
add
lcall
adc
adc
scas
mov
and
xor
scas
repnz
jmp
rolb
pushf
jmp
or
and
into
pop
mov
push
hlt
incl
dec
ficoms
xchg
mov
xchg
xchg
adc
pusha
loop
arpl
fisubrs
mov
divb
add
cmp
or
imul
lcall
fwait
xchg
add
loopne
icebp
adc
adcl
dec
pop
sbb
xor
cmp
push
push
stc
int3
jbe
mov
sbb
xor
mov
nop
jg,pn
lcall
pop
sbb
inc
sbb
repz
sahf
rorb
lds
jmp
jno
out
push
mov
sbbb
inc
pop
xchg
hlt
sbb
test
mov
aas
add
in
addb
mov
int
cwtl
pop
mov
sbb
pop
fs
jb
das
stc
push
std
incl
ja
aas
incl
movb
fildl
xlat
les
int
and
mov
mov
int
push
xchg
mov
jmp
clc
incl
ds
add
mov
test
sbb
or
ret
decl
fcmovnbe
ds
subl
je
test
xor
repz
push
push
xorb
jmp
sub
scas
inc
fs
mov
es
jno
arpl
pop
push
mov
jbe
imul
jo
jp
ljmp
mov
jbe
pop
push
cmp
ret
xchg
adc
aaa
adc
xchg
in
sbb
mov
call
in
xchg
test
icebp
add
xor
xchg
fstpl
mov
ljmp
test
mov
adc
jg
pop
dec
mov
aaa
sbb
pop
xchg
lret
ret
ljmp
pop
sub
xor
imul
shl
and
movsb
int
mov
ljmp
jg
mov
sub
imul
dec
scas
and
lahf
mov
jns
xchg
scas
mov
adc
insb
and
xchg
shll
sbb
sbb
mov
cmpsb
or
mov
jmp
mov
pop
loopne
push
pop
dec
mov
fld1
mov
cmp
in
aam
adc
hlt
pushl
pusha
rorb
aaa
jne
in
mov
decl
mov
repz
inc
insb
sbb
insl
movsb
mov
out
jg
test
shll
pop
sbb
xchg
ret
pushl
cld
lcall
sub
icebp
loop
and
fiadds
mulb
mov
pop
add
imul
xor
lcall
xchg
or
sub
cmp
mov
addr16
xchg
int3
jno
ljmp
sbb
sahf
lcall
mov
lcall
add
sahf
sbbb
inc
pop
je
xor
call
jmp
loopne
sub
and
push
pop
xor
push
push
pop
ja
mov
cwtl
out
sub
and
xchg
fldt
out
out
and
and
xchg
mov
pop
std
ljmp
mov
sub
lahf
push
sbb
push
js
xorl
push
adc
pop
gs
adc
add
loopne
xchg
lcall
mov
push
mov
mov
mov
and
aad
cmpb
arpl
negb
inc
adc
mov
sbb
mov
push
fadds
pop
jns
adc
mov
add
stc
and
gs
ss
in
cmp
ljmp
out
cmpsb
test
cltd
cmp
imul
loop
and
test
inc
mov
incl
imul
test
add
adc
push
inc
adc
xor
inc
loop
mov
jo
out
shll
dec
cmp
adc
incl
arpl
cmp
shrl
cs
pop
xchg
mov
add
or
lock
push
and
sbb
lock
hlt
dec
and
push
mov
faddl
push
dec
pop
scas
mov
movsl
lock
ljmp
orl
jmp
dec
shl
fidivrs
cltd
dec
sbb
es
out
push
push
jmp
mov
push
js
inc
loope
fnsave
repnz
sbb
add
cld
ljmp
sbb
xor
dec
aam
loopne
enter
adc
popa
nop
lea
push
xchg
ret
lret
mov
mov
push
push
xor
jae
push
jno
iret
daa
sbb
ja
jp
mov
enter
pop
shl
cmpsl
pusha
jge
jecxz
pop
jns
mov
cmp
cwtl
mov
pop
rcll
cmc
aam
inc
cli
call
ret
test
enter
jns
enter
jmp
add
mov
mov
mov
faddl
cltd
pushl
pushf
subb
in
inc
pop
nop
fs
test
stc
in
je
pop
call
gs
ss
sahf
cmp
mov
pop
jb
gs
push
jg
ljmp
cld
js
mov
dec
jecxz
sub
out
and
mov
push
inc
inc
pushf
add
and
push
dec
test
subl
fdivr
incl
sbb
hlt
fdivrl
std
lods
lods
mulb
sbb
mov
ljmp
mov
add
adc
lods
sub
cli
sub
dec
cld
incl
push
xor
inc
sub
hlt
mov
jg
jl
stos
and
adc
shlb
mov
je
add
pushf
inc
pop
mov
sub
insb
test
jg
hlt
add
mov
push
push
xlat
out
jo
bound
cmpsb
call
lcall
jb
ds
sub
pushl
dec
mov
add
add
mov
xor
dec
mov
push
leave
lret
inc
mov
dec
sbb
mov
mov
xchg
mov
fnstenv
shlb
bound
mov
push
pop
ret
aam
push
xchg
sbb
lock
in
icebp
in
sbb
cmp
push
sub
sbb
call
pop
lret
sbb
push
idiv
fbld
jge
jecxz
xorb
pop
ret
dec
xchg
mov
jle
adc
and
test
incl
pop
inc
daa
frstor
pop
xchg
adc
sbb
dec
loope
add
sbb
rcrb
in
dec
xchg
sbb
lahf
fs
jg
jae,pn
ret
xchg
stc
mov
cmp
in
cmp
loop
dec
shlb
lcall
loope
movsb
cmpsb
sti
mov
ja
fistpl
ret
push
in
xchg
out
adc
call
cmp
ja
cmp
cmpsl
and
fcomp
and
adc
jmp
mov
rclb
mov
dec
and
adc
adc
and
loopne
fildll
or
lock
dec
jb
add
les
sub
lcall
pop
add
sub
loop
addl
sub
mov
add
mov
ljmp
xchg
nop
stos
mov
mov
ljmp
adc
or
lcall
loopne
test
cmp
cwtl
addr16
mov
add
push
jno
decl
cmp
stos
xchg
mov
sbb
xchg
sbb
ljmp
outsl
push
push
rcrb
inc
ds
inc
js
shll
mov
incl
pop
mov
sub
arpl
ret
dec
and
xor
push
adc
inc
adc
nop
icebp
filds
and
or
enter
ljmp
movsl
and
out
push
sub
mov
int3
cs
jg
lea
insb
pop
sbb
mov
enter
lcall
rep
jne
fistps
adc
je
mov
mov
outsb
cmp
mov
call
int
xchg
sub
push
out
jns
dec
ret
lcall
push
ljmp
mov
fldenv
aaa
test
sarl
or
sub
add
mov
bound
mov
setge
adc
or
dec
push
add
jo
or
mov
cli
rolb
lahf
mov
mov
jp
xor
inc
jle
mov
decl
sub
add
imul
lock
call
sub
sbb
lret
and
and
dec
test
mov
xor
jns
rcl
mov
add
cmp
cmpsb
scas
and
ss
cmp
pushl
jns
and
in
popa
pop
dec
or
pop
insl
add
and
mov
push
fwait
les
add
adc
fwait
in
into
mov
sti
xor
jb
cmp
mov
sbb
inc
push
in
inc
push
ljmp
rorb
movsb
cmpsl
mov
ss
pop
scas
sbb
mov
aad
aaa
dec
movsb
mov
mov
jbe
outsl
incl
rorl
sti
push
adc
mov
pop
movsl
repnz
mov
decl
aam
mov
aaa
sub
sub
cmp
pop
sub
mov
inc
sar
movsl
add
cmp
frstor
xchg
sub
fs
loop
mov
cmpsb
pop
inc
jecxz
incl
jae
mov
std
in
int
add
mov
mov
movsb
addb
xor
int3
and
xchg
mov
or
lcall
push
test
push
dec
cmp
cmp
adc
mov
cli
sbb
lret
lds
sub
int3
movsl
pop
repz
mov
or
aad
inc
arpl
in
pop
loope
decl
inc
push
sbb
jecxz
mov
int3
dec
add
ja
adc
mov
test
std
or
rorl
add
cmc
mov
jbe
ret
xchg
mov
hlt
incl
xchg
divb
fbstp
mov
pop
adc
cmpsl
mov
jmp
or
and
or
xor
scas
test
dec
pop
mov
mov
jge
push
sar
push
xchg
dec
arpl
rorl
jno
cmp
xchg
in
xchg
fstpt
or
fisubs
mov
lret
ss
call
lcall
jno
mov
lcall
daa
mov
sar
call
mov
sub
add
inc
jle
aaa
repz
dec
loop
mov
daa
dec
out
out
leave
xchg
xchg
decl
outsl
xchg
aam
cmp
sub
scas
cltd
out
daa
jp
cmp
jp
cmpsl
ror
dec
inc
mov
sti
inc
divl
ret
test
out
cmp
pop
add
les
pusha
add
jne
pop
and
pushl
iret
mov
iret
cmc
mov
pushf
test
inc
or
jle
cmc
pop
dec
dec
lock
cmp
test
push
xchg
std
xchg
push
jle
xchg
orb
iret
mov
lods
rolb
test
call
mov
shrb
or
rcll
add
mul
test
call
test
and
pusha
or
loopne
pop
add
cltd
push
sbb
mov
outsb
jns
sbb
xor
xchg
and
add
push
fsubrl
dec
mov
lds
inc
jmp
call
mov
lods
dec
mov
mov
add
mov
mov
pop
cmp
mov
mov
in
inc
push
sub
fsubs
and
adc
ficomps
stos
or
inc
jnp
push
and
sub
push
inc
or
pop
in
mov
decl
mov
lcall
push
enter
ljmp
dec
pop
imul
xorb
jg
fwait
mov
mov
pop
dec
or
ja
adc
cmc
js
xchg
mov
aam
xchg
dec
dec
incl
mov
ja
decl
lahf
xor
arpl
xor
call
in
pop
mov
das
pop
adc
mov
mov
pop
out
cld
mov
sub
push
cmp
jecxz
orb
inc
cld
call
add
mov
lock
in
aas
mov
pop
jb
std
jg
sar
fisttpll
nop
pop
lods
adc
add
cmp
lea
out
adc
jbe
add
pop
fs
stos
fldcw
jo
push
cs
dec
outsl
fcomip
cmp
adc
inc
loope
in
call
xor
mov
inc
fdivr
inc
insl
adc
lcall
fcmovb
popf
icebp
pop
pop
aam
loopne
cmpsb
call
fisttpll
pop
sub
sbb
lds
inc
sub
mov
shr
push
xchg
pop
cs
decl
sbb
andl
js
cmp
mov
dec
sar
gs
decl
push
icebp
inc
enter
daa
push
lahf
dec
and
lea
dec
shlb
movb
movsl
out
or
push
ljmp
cmc
jmp
pop
js
xchg
dec
lock
in
std
cmc
adc
mov
dec
xchg
lods
dec
sub
testl
into
in
mov
and
jb
into
sub
dec
mov
xchg
mov
sbb
sub
lahf
ljmp
imul
jg
fdivrl
add
add
add
push
inc
inc
cs
repnz
leave
or
icebp
in
inc
shlb
and
mov
ljmp
hlt
lods
in
test
add
lods
mov
fmuls
add
inc
adc
mov
dec
mov
mov
int
subb
add
jbe
mov
adc
add
mov
cs
sbb
ljmp
les
loop
or
add
push
mov
push
call
pop
das
fmul
inc
adc
or
sbb
adc
sub
mov
push
mov
sbb
pop
mov
sbb
call
or
inc
outsl
movsl
add
dec
sbb
jg
xchg
fs
add
push
fsub
xchg
arpl
sbb
test
incl
and
gs
or
sub
xlat
cmp
and
add
ss
bound
add
cltd
xchg
sbb
ficoml
nop
movsl
and
stc
ficompl
sub
rcrl
clc
sarb
adc
in
cmpsb
dec
mov
mov
inc
mov
into
mov
dec
pushf
mov
mov
jecxz
js
jge
fwait
mov
loop
imul
inc
xchg
mov
les
es
mov
add
ljmp
incb
cmp
mov
aam
lock
mov
das
mov
pop
mov
xorb
mov
cmpxchg
cli
cwtl
iret
dec
andb
add
add
outsb
pop
sbb
loopne
pop
push
sbbb
cmp
int3
sub
jmp
sub
and
xchg
xor
test
sbbl
loop
enter
loope
push
xchg
shl
jns
add
jle
adc
inc
sarb
mov
mov
lcall
iret
jbe
enter
push
add
pop
mov
sub
push
cmpsb
in
jno
js
lcall
cwtl
xor
and
pop
adc
lcall
adc
aad
adc
push
outsl
mov
and
xchg
sahf
lcall
lods
bound
push
sbb
in
in
in
lods
stos
sbb
dec
test
mov
inc
sub
test
dec
push
fdivrp
in
ss
jmp
mov
ljmp
mov
dec
sub
test
imul
push
xchg
jns
cld
in
push
sti
aad
popf
xor
mov
mov
test
pop
jbe
pop
icebp
pushl
sbb
cmp
inc
pop
adc
mov
scas
jmp
inc
cmc
inc
cld
fbld
mov
jmp
dec
in
faddp
xor
out
or
jg
fwait
mov
idiv
or
adc
xor
cli
decl
mov
inc
and
pop
ret
loopne
and
cmpsb
scas
incl
push
mov
movsb
mov
pop
sub
xchg
pop
popa
fs
fisttps
mov
xchg
enter
outsb
xchg
pop
insb
loope
and
cli
mov
dec
iret
and
popa
pop
or
decl
mov
addb
int3
push
adc
test
es
or
cld
push
and
frstor
out
ja
sub
pop
add
std
incl
adc
imul
fisubl
fbld
sub
fcoms
jo
pop
push
mov
pop
fsubrs
leave
imul
aam
xchg
out
test
dec
shrb
adc
dec
pushfw
fs
ficompl
jmp
push
jmp
adc
push
leave
xor
fwait
fs
dec
pop
lret
mov
cmpsb
mov
mov
aam
test
pop
scas
aaa
pop
icebp
push
fisubl
fcom
insl
cmp
mov
inc
adc
mov
jl
andb
icebp
push
test
and
lods
imulb
sbb
sub
lods
pusha
daa
test
shrb
repnz
call
ja
sub
int
add
call
or
sub
inc
data16
les
fisttps
and
lret
inc
or
test
mov
dec
inc
inc
in
sub
call
call
and
int3
mov
pop
sbbb
and
clc
inc
ret
enter
push
lcall
aad
pushf
inc
lods
outsl
mov
aad
scas
mov
das
cmp
call
push
in
and
sub
loope
int
cmp
daa
repnz
cltd
cmpsl
in
xor
decl
rorb
push
fldenv
lret
mov
ljmp
add
arpl
xor
pushf
add
fadds
push
decl
insb
movsl
sbb
adc
push
loop
popf
inc
mov
sub
js
pop
mov
xchg
and
sub
mov
push
inc
xchg
mov
movsb
jmp
xchg
inc
dec
push
mov
ret
cli
les
jg
mov
add
repnz
mov
es
enter
int
mov
outsb
mov
repnz
sbb
test
dec
test
push
xor
jo
jmp
ljmp
mov
add
lret
shlb
lea
or
cs
incl
pusha
jg
inc
mov
and
sub
inc
and
sub
xor
nop
or
or
cmp
jbe
jmp
inc
sarl
sub
fldt
popa
cmc
lcall
add
fs
xchg
mov
sbb
add
pushf
cmp
lea
push
imul
sbb
hlt
sub
pop
fcomip
jmp
test
cmp
shll
sub
hlt
xchg
sub
cmpsl
mov
push
js
adc
rol
ja
shlb
incl
mov
popa
mov
push
dec
stos
sbb
insb
shll
mov
pushl
imul
idivl
stos
sub
inc
pushf
fdivr
mov
mov
sub
push
xor
fwait
xchg
mov
pop
mov
xchg
push
inc
dec
call
or
sbb
sbb
and
xor
fwait
clc
push
sub
rolb
and
sbb
and
jecxz
xchg
insl
adc
dec
shll
idivl
lock
jg
testb
xor
jb
addb
imul
mov
inc
xor
and
cwtl
movsl
push
mov
mov
aam
aaa
cld
jmp
dec
insl
fs
stos
fs
outsl
fs
cwtl
jg
pop
pop
inc
xor
loopne
xchg
incl
dec
add
ja
sub
shll
stos
jbe
test
push
lret
or
push
cltd
jnp
lds
aam
adc
fs
adc
jo
repnz
addb
ljmp
sub
mov
mov
pop
jp
pop
sub
shrl
xor
xchg
cli
ja
mov
addb
or
xchg
and
outsl
or
push
mov
call
gs
in
ds
mov
adc
imul
jp
incl
sbb
fwait
popl
pop
jne
or
popf
fdivl
inc
dec
hlt
sub
dec
addr16
push
cmp
pop
pop
xchg
mov
xor
jne
popf
lahf
jp
mov
sahf
enter
ja
xor
jno
cld
add
call
push
dec
jno
push
addb
test
and
jo
addl
cwtl
mov
decl
test
sub
add
pop
test
mov
outsb
mov
add
test
pop
and
inc
xchg
cmp
ljmp
push
lcall
das
cs
push
push
div
adc
imull
add
xor
inc
test
aam
inc
inc
lret
jns
inc
xor
dec
pop
push
xor
jae
pop
sub
sbb
sbb
xchg
out
mov
cmp
shlb
scas
dec
test
push
mov
pushl
int
sbb
aaa
shrl
es
fsubrp
arpl
call
sub
decl
lods
jnp
inc
xchg
rclb
xorb
lcall
xchg
xchg
push
shlb
int
cld
pop
pop
int
loop
filds
push
xorb
ret
lcall
fisubl
cmp
ss
ficompl
rorb
out
jecxz
push
cmc
sub
pop
cld
decl
cmp
int
fistpll
clc
ss
jnp
arpl
call
leave
push
int
dec
jecxz
arpl
sbb
dec
add
push
and
clc
sbb
out
in
ja
push
mov
into
sbb
jmp
clc
pop
adc
ret
les
ds
inc
jecxz
push
adc
xchg
in
jo
cmp
addr16
mov
add
out
pop
add
xchg
mov
and
repnz
filds
fmull
ffree
cld
add
ror
das
cli
jmp
xlat
xor
inc
and
adc
pusha
mov
cmpsl
ljmp
aas
or
es
jb
ja
sub
jmp
cld
adcl
push
sbb
mov
rclb
mov
inc
add
cltd
sbb
loope
cmp
mov
push
fwait
ja
jae
std
mov
inc
push
cmpsl
xchg
nop
dec
xchg
mov
stc
aaa
adc
mov
mov
sub
inc
inc
jbe
adc
outsb
jne
aad
in
pop
mov
hlt
call
sub
cli
ljmp
or
lods
push
xor
xchg
mov
cmp
add
lcall
das
jecxz
lds
ss
sarb
mov
pop
or
xchg
push
jnp
cmc
jecxz
jne
es
scas
call
scas
sub
jecxz
cmp
in
iret
pushf
shll
push
mov
cwtl
aaa
ja
sbb
fbstp
outsb
add
cmc
jmp
into
jge
mov
fxch
pop
mov
in
out
ljmp
dec
jle
ja
jmp
mov
icebp
jmp
mov
fucomi
test
incl
paddb
mov
mov
cmp
rcrb
mov
out
clc
arpl
ret
xchg
scas
ds
imull
andb
les
cmp
xor
out
xchg
or
inc
cmp
jns
xchg
pop
and
xchg
dec
add
nop
xor
mov
xor
call
enter
and
xchg
dec
or
mov
sbb
cmp
cmc
decl
repnz
orb
loop
push
adc
movsl
out
sbbb
push
sbb
dec
popf
pop
cs
enter
subl
mov
sub
and
out
add
add
insl
aam
inc
cs
shll
cmp
and
mov
inc
jns,pn
sub
jae
insb
cmpsb
mov
outsb
js
sub
push
dec
cli
bound
push
xchg
inc
pushl
enter
scas
xchg
test
aam
loope
orb
insb
sub
fldt
aaa
ljmp
jp
xor
xchg
sub
sbb
pop
xchg
xchg
jge
lret
out
mov
push
dec
mov
mov
std
jmp
mov
jecxz
cmp
jecxz
ret
mov
push
mov
fcomip
jg
and
mov
ds
cmpsb
fidivs
sub
sub
jmp
jecxz
ret
cld
cwtl
sar
arpl
mov
in
fidivrl
rorb
out
mov
fwait
dec
cmp
out
in
hlt
sahf
ljmp
inc
scas
add
or
inc
mov
out
loopne
das
pop
lods
and
sub
clc
stc
mov
pop
in
loop
sub
add
jg
adc
add
push
sbb
push
jecxz
pop
jge
sub
pop
push
jg
call
mov
mov
sub
pusha
outsb
mov
fildll
popa
push
int
pop
mov
cld
ljmp
clc
and
ja
cmp
mov
decl
aas
stc
jecxz
dec
sub
push
xchg
jb
cltd
rcrl
jb
pop
jl
addr16
call
xchg
cmp
adc
jns
cld
das
mov
jmp
xchg
popf
pop
popf
sub
loop
call
lret
jg
add
dec
dec
pusha
xchg
xchg
cwtl
mov
or
test
or
sub
std
pushf
adc
ljmp
or
stos
jmp
lahf
push
shll
xchg
test
decl
mov
inc
add
mov
pop
or
xchg
xchg
cld
jg
mov
pop
rcr
pop
dec
inc
or
sbb
cwtl
js
movsl
ljmp
ret
roll
xchg
in
or
fimull
stos
dec
or
incl
dec
pusha
ret
pop
and
movsb
jmp
cltd
mov
mulb
xor
xor
pop
adcl
pop
addb
or
push
dec
repz
pop
or
adc
jecxz
ljmp
rcr
inc
inc
add
push
jle
fbld
sbb
jae
xchg
xor
aam
aam
xchg
push
call
xchg
fs
adc
and
mov
arpl
fisttpl
test
pop
add
pop
add
jmp
mov
adc
pop
and
dec
call
or
or
aam
cmpsb
out
icebp
aam
hlt
mov
rcrb
xchg
mov
addb
sub
or
std
add
sbb
or
mov
incl
and
rorb
call
dec
pop
loop
sub
incl
adcb
rcrb
js
sbb
mov
cmp
outsl
and
jne
xchg
repnz
or
fcoml
pop
sbb
aam
and
xchg
inc
decl
mov
adc
adc
lds
call
jle
test
lcall
leave
arpl
push
cmp
push
pop
cmpsb
in
les
sbb
and
call
lods
movsl
sbb
or
fld
in
clc
insb
fsubrs
dec
lcall
jmp
push
and
mov
cmpsb
xor
push
add
nop
mov
stc
movsl
das
mov
nop
dec
test
jle
lret
imul
lcall
es
pop
mov
pop
clc
out
in
push
add
inc
test
aam
ja
shrb
lods
lods
pop
add
out
xor
decl
pop
insl
mov
fisttpl
test
inc
lods
stc
jno
or
mov
adc
dec
inc
xor
jmp
jg
fisubl
enter
or
and
adc
sbb
test
dec
sbb
daa
mov
pusha
jno
push
and
cli
decl
jo
mov
int
popa
add
adc
xor
loope
incb
es
call
jno
bound
sbb
pop
pop
xchg
mov
xor
outsl
pop
xor
jmp
add
cs
sbb
mov
popa
aad
cmpb
pop
andb
pop
das
outsb
rclb
enter
insb
std
lcall
and
ret
aam
adc
xor
sub
fildll
push
push
das
lock
push
addr16
jecxz
ret
pop
and
test
ret
test
decl
xor
pop
nop
das
and
pop
pop
and
lcall
fimuls
aaa
xor
cmpsl
mov
ljmp
aam
icebp
aam
push
popf
adc
xchg
pushf
jge
push
stos
aaa
jne
jge
es
call
jbe
lret
dec
pop
rcll
out
or
adc
es
call
add
sub
or
cmp
push
sub
mov
ja
jecxz
out
sahf
cmp
push
mov
outsl
xor
inc
inc
inc
push
push
pop
and
imul
xor
insb
pushf
in
insb
and
out
mov
call
push
stos
xchg
jg
clc
and
stos
xor
or
call
push
adc
add
in
loope
mov
popa
adc
adc
fwait
call
sbb
mov
add
adc
sub
popa
xchg
fwait
inc
loopne
insb
ret
pusha
aad
push
adc
std
add
testb
push
std
decl
pusha
mov
dec
outsb
jl
xchg
jbe
in
mov
fldl
ja
jb
xor
adc
xchg
add
pushf
loopne
aaa
enter
loop
mov
popl
mov
pusha
dec
xor
in
xor
dec
push
add
xchg
jno
xchg
xchg
dec
out
sbb
mov
loope
pop
or
jno
add
cwtl
jecxz
nop
pushl
cs
xlat
inc
add
push
inc
in
jle
mov
fwait
sbb
mov
add
jmp
mov
jae
fs
lock
xor
dec
mov
mov
outsb
mov
add
push
mov
fistpl
movsl
cltd
xor
and
xor
jge
ljmp
jae
movsb
cltd
mov
lods
out
cmp
add
popf
xchg
or
mov
in
aaa
or
inc
push
dec
dec
mov
or
lea
push
push
mov
ja
cmp
mov
test
test
fcmovnu
in
mov
inc
add
cmp
xlat
sub
out
sarb
pop
and
stc
adc
add
inc
adc
pushf
pop
push
insl
scas
add
shrb
pop
mov
push
mov
dec
and
js
femms
adc
icebp
push
mov
out
pop
sar
mov
lods
mov
movsb
push
icebp
add
mov
push
je
scas
idivb
test
mov
lods
add
add
out
mov
inc
test
cmp
subb
mov
mov
xchg
dec
ljmp
inc
aaa
js
sbb
aaa
testb
decl
lock
dec
and
add
mov
or
jmp
int3
ret
dec
sbbb
inc
das
subb
mov
in
ret
popa
inc
cmp
test
cmpsb
int3
inc
jmp
mov
push
push
ret
and
mov
out
fbld
inc
ljmp
and
stos
imul
mov
stos
repnz
mov
dec
call
or
stos
int3
fimuls
call
lea
xor
in
mov
mov
dec
cmp
insb
insb
adcb
repnz
fcomip
fiaddl
push
loope
movsb
pusha
mov
or
or
ss
dec
jmp
jmp
mov
fadds
mov
jle
inc
adc
mov
inc
mov
enter
dec
jecxz
sar
lret
loope
dec
inc
or
lret
xor
sub
hlt
inc
cmpsb
mov
cmpsb
add
xor
call
mov
in
lahf
push
inc
add
sbb
std
insb
in
jle
xor
enter
mov
and
gs
xchg
push
in
ljmp
mov
sub
sbb
nop
loop
rol
jle
pop
cmpsl
xor
cmpsl
xor
push
jecxz
incl
data16
cs
and
out
mov
mov
adc
call
std
jmp
sahf
ljmp
push
rolb
out
popa
jp
or
test
cld
cmc
lcall
fildl
xor
and
pusha
call
movsb
mov
xchg
inc
into
jecxz
mov
lods
lock
and
cli
out
imul
push
nop
scas
adc
orl
scas
addr16
decl
lcall
inc
or
enter
xacquire
aaa
cld
push
adc
mov
push
adc
es
fsubp
adc
cmovs
outsb
and
push
inc
mov
call
pushf
in
push
das
cli
lea
stos
dec
movntps
es
rclb
call
cld
incl
clc
mov
or
sahf
dec
fadds
adc
jmp
adc
and
add
pop
in
inc
mov
js
push
inc
xor
xchg
pop
test
jnp
mov
xchg
or
dec
icebp
sub
mov
dec
sub
or
js
mov
js
push
cmp
cmpsl
and
mov
repnz
in
mov
out
and
xor
dec
jmp
aam
push
mov
jl
xchg
mov
ljmp
xorb
lret
aaa
xchg
dec
andb
xor
movsb
movsl
ret
cmpsb
xor
pop
add
or
sub
in
stos
decb
and
mov
cmpsb
push
insl
lods
mov
maxps
push
cli
out
and
add
add
ljmp
cmp
push
outsb
inc
sbb
scas
out
inc
and
aad
sarl
fs
dec
les
xor
into
idiv
ja
adc
inc
sub
add
hlt
add
pop
dec
xchg
hlt
xchg
or
cwtl
dec
xchg
inc
jmp
pushf
cmp
adc
pushl
add
outsb
loope
mov
pop
xor
and
pusha
xor
inc
bound
icebp
jg
adc
and
adc
pop
cld
xchg
add
ss
arpl
mov
push
stos
cmpsb
add
adc
test
scas
test
jnp
and
mov
add
dec
lds
adc
das
cmpsb
inc
repz
adcb
arpl
add
aad
ljmp
stos
lods
lock
pushl
lret
test
pushl
cmpsl
lds
dec
push
mov
push
rorb
std
rorl
lahf
pushl
shrl
cld
popa
aas
fldcw
add
or
imul
inc
leave
push
adc
mov
nop
sub
adc
nop
lcall
decl
pop
shlb
adc
mov
mov
adc
das
insl
or
call
hlt
clc
xchg
push
xor
sub
je
inc
xor
push
xorb
dec
mov
and
lods
rorb
or
out
mov
xor
jg
ljmp
dec
mov
loop
xchg
in
dec
sti
pop
lcall
pop
lret
ss
mov
sub
jg
inc
jmp
out
movsb
lcall
mov
xchg
push
push
cmp
movsl
jg
jecxz
aaa
cld
loop
ss
pop
call
lcall
cmp
ljmp
incb
in
sub
popf
incb
dec
call
xor
xor
add
je
xor
dec
and
lret
lret
stos
pop
test
fcoml
cmp
aaa
xchg
jg
decl
mov
arpl
ljmp
jbe
imul
jp
call
cld
dec
mov
sub
cmpsb
push
shl
xchg
aas
fwait
sub
push
adc
or
inc
sbb
aam
stos
cmpsb
push
roll
mov
decl
clc
movsb
jb
in
sub
inc
daa
lcall
inc
pusha
adc
xchg
pop
stc
inc
mov
xor
cmp
cmc
mov
out
hlt
lods
inc
jmp
jmp
xchg
cmp
dec
cltd
inc
add
jle
inc
cmc
xchg
jae
addr16
hlt
cs
and
jbe
pushl
pushf
rclb
fs
mov
test
push
mov
incl
in
dec
sar
and
addr16
pop
clc
call
mov
and
mov
call
xor
aaa
add
pop
xor
dec
imul
xchg
inc
and
mov
mov
in
mov
mov
shl
sub
in
outsl
cli
pushl
dec
mov
or
push
int3
sub
cmp
or
mov
jb
out
add
stos
xchg
test
insl
adc
lret
mov
push
std
jmp
icebp
cli
sub
and
call
jl
mov
les
push
cmp
out
ja
ljmp
pop
jmp
outsl
lahf
xor
mov
pop
adc
ljmp
mov
jecxz
inc
push
ja
nop
divl
mov
xor
cmc
pop
xlat
mov
adc
arpl
mov
aad
lcall
pusha
jnp
cld
mov
adc
sbb
pop
push
scas
aam
fildl
ljmp
sub
dec
fucom
xor
jmp
test
addr16
ret
sub
shlb
and
xor
and
cmpb
hlt
inc
incl
aas
lods
cs
add
push
push
inc
inc
in
hlt
ret
ss
cmp
cmp
sub
shll
aaa
pop
sub
xchg
xor
sub
mov
dec
add
pushl
aaa
xor
insb
xor
add
cmp
xor
movsb
mov
in
pop
incb
inc
pop
push
xchg
mov
xor
lds
cmpl
inc
setl
or
or
xchg
es
filds
inc
cs
lock
sub
mov
and
push
sbb
mov
sub
xorb
imul
adc
fs
inc
pop
int
into
lods
repnz
jbe
daa
lret
push
mov
fildll
mov
add
and
sub
push
mov
push
lea
xor
js
jmp
xchg
cli
repnz
int3
jbe
adc
das
push
jne
add
dec
xor
push
std
pop
cmc
xor
or
divps
jg
push
call
and
sub
in
pop
add
add
mov
mov
or
mov
xchg
or
imul
roll
pop
add
or
loop
push
mov
push
subb
push
mov
inc
xor
mov
adc
add
xchg
andl
xor
imul
loop
lea
lret
ss
out
push
ja
cs
fildll
xor
lods
rcrl
xor
inc
add
lcall
pushf
xchg
nop
imul
sti
xlat
cltd
addr16
dec
xor
sarb
jo
push
fadds
out
adc
or
nop
add
in
xor
hlt
sbb
mov
jb
add
pushl
shl
push
les
pusha
movsb
mov
es
mov
push
mov
lret
ss
adc
aad
cmp
decl
jl
add
pusha
pcmpeqb
inc
repz
mov
sbb
imulb
jg
sbb
xor
jbe
lds
jb
mov
nop
aaa
data16
incl
mov
popf
ljmp
ret
ret
push
jg
xchg
or
inc
push
fildll
incl
mov
jmp
ss
adc
stos
and
cmp
es
cvtps2pd
cmpsl
in
incl
push
sub
stos
mov
add
xchg
or
push
std
mov
aam
mov
adc
dec
cmpsb
je
cs
jb
dec
xor
cmp
push
jns
fistl
mov
add
mov
aaa
push
ljmp
push
cltd
mov
xchg
sbb
insl
jb
imul
jae
lret
or
scas
jmp
leave
clc
enter
mov
daa
xlat
pop
repz
daa
std
push
mov
data16
cwtl
sti
jo
cmp
int
push
stos
int3
cmp
jecxz
cmc
decl
jno
push
mov
xor
imul
inc
cs
clc
mov
mov
lcall
pop
scas
cmovp
movsl
fwait
sti
mov
xor
add
pop
out
cli
jmp
pminsw
repz
push
mov
pop
shr
pop
pusha
ss
cli
cmp
xchg
sarl
cs
pop
cs
and
mov
lds
dec
and
in
les
addl
push
fcmovnbe
in
movsb
push
popf
psubusb
frstor
fstp
adc
popf
push
cld
cmpsb
decl
pop
jne
pop
or
pop
into
pop
or
pop
and
mov
mov
loopne
mov
push
or
call
xor
loope
push
cmp
imul
jle
imul
mov
mov
pop
addb
mov
mov
lcall
subl
nop
popf
je
adc
loope
int3
clc
or
jmp
int
insb
inc
stc
in
out
call
repnz
movsb
mov
lcall
inc
dec
cli
mov
fmull
jmp
jge
sbb
outsl
add
xchg
jmp
in
push
mov
sbb
js
add
add
xchg
movsb
das
and
mov
jmp
add
cmpsl
int
add
xchg
sub
cli
pop
jbe
ret
aad
enter
jae
pop
aad
adc
rorb
imul
pushf
or
jg
xlat
cmpsl
fs
xchg
outsl
clc
mov
adc
dec
push
popa
jp
or
insl
inc
cmp
mov
repnz
fwait
pushl
xchg
test
data16
mov
add
add
push
fcomip
push
pop
dec
jle
sbb
in
push
cmc
orb
imulb
testb
testb
notl
filds
pop
mov
sar
or
pop
in
jbe
jmp
sbb
fildl
pop
test
push
lret
lret
inc
xchg
jmp
pop
leave
out
test
xor
std
mov
xorl
sub
pop
shlb
dec
cmp
int3
pusha
mov
dec
cmp
jae
and
push
jmp
inc
into
dec
pop
add
mov
sbb
cs
shlb
pusha
inc
sub
outsl
jmp
pop
push
xor
icebp
push
mov
xchg
lcall
mov
jbe
enter
mov
das
mov
adc
mov
enter
std
call
aas
cmpsb
hlt
cmp
and
xor
call
je
arpl
sub
inc
out
clc
add
xor
mov
repz
stos
jg
cmp
xchg
imul
enter
out
mov
incl
subl
add
cmp
cmp
sbb
std
push
cld
mov
mov
pop
ljmp
cmp
mov
fldcw
mov
mov
dec
inc
jmp
pop
das
mov
fnstenv
outsl
clc
insb
fcomi
jmp
pusha
ret
data16
cmc
push
lods
mov
sub
ljmp
les
shrl
jp
adc
lock
call
jmp
shlb
js
dec
jmp
fsubl
xor
lds
mov
push
test
jne
sbb
addb
push
pop
dec
adc
and
xchg
and
jns
fwait
pop
pslld
imul
add
pushf
insb
sahf
insl
sub
cmc
pop
insl
jp
sbb
lods
es
mov
rcl
in
jg
mov
push
inc
loope
adc
and
clc
mov
lea
cwtl
mov
push
push
and
stc
arpl
pop
add
and
push
inc
add
jns
inc
push
outsb
mov
fcompl
orl
test
xor
fistps
cld
pop
or
dec
aam
dec
sub
aam
dec
sbb
xor
jns
pushf
incl
xor
xchg
jle
mov
push
mov
adc
aad
push
add
lds
adc
push
dec
cmpsl
sahf
mov
js
inc
push
addr16
adc
out
pop
outsl
mov
xchg
leave
jmp
rclb
scas
mov
xchg
lahf
pusha
add
imul
decl
mov
push
imul
fadds
cmp
mov
adc
jb
add
scas
adc
push
lods
add
pushf
xchg
xchg
pop
lods
aam
add
lcall
dec
add
lcall
jb
jp
pop
sbb
jb
dec
pop
ret
push
jb
sbb
inc
jb
sahf
inc
fs
je
add
subb
int
bound
fcomip
call
addl
xor
ss
mov
lcall
shll
jbe
insb
fbld
sub
mov
lcall
xor
lsl
popa
cmc
sub
sub
cmp
xchg
push
push
stc
push
xchg
arpl
cmpsb
fcomip
jmp
adc
push
pop
decl
sahf
adc
push
rolb
cmp
inc
mov
lret
jns
movsb
rorl
mov
repz
fbld
in
adc
lea
fcomps
push
xchg
push
inc
mov
roll
mov
dec
inc
adc
adcb
jmp
jg
jg
outsb
cmp
dec
xchg
push
mov
sti
sub
jg
les
stos
dec
and
or
leave
incl
xchg
push
pop
pop
cmp
xchg
or
xchg
xchg
adc
outsb
mov
push
ja
lcall
scas
test
mov
xor
sysret
pop
clc
aaa
jecxz
pop
add
in
out
inc
idivb
adc
lock
dec
or
fwait
xchg
stos
push
es
ljmp
ret
ljmp
inc
cmp
je
push
pop
cmp
gs
inc
and
xchg
andb
xchg
in
mov
xchg
mov
mov
sar
subl
fmul
lret
inc
out
pop
mov
test
push
pushl
cltd
dec
test
and
mov
js
lods
xor
inc
jp
push
xchg
hlt
adc
mov
lea
cmp
fisubrl
movsb
jg
mov
mulb
push
test
cmp
sbb
add
ss
movsb
dec
and
sub
ljmp
mov
cmc
lods
jno
pop
shll
out
adc
or
push
lea
add
sbb
insb
adc
out
add
loopne
movsl
mov
mov
adc
push
dec
sub
call
movsl
sub
xchg
dec
mov
loop
push
lock
gs
cwtl
jecxz
mov
pusha
insl
lock
mov
mov
inc
loop
out
pop
or
cmp
lcall
call
mov
rolb
mov
dec
out
popf
xchg
sub
aam
neg
pop
inc
movsb
lock
cmp
fwait
or
lods
fwait
enter
clc
ljmp
push
mov
inc
test
push
pushl
mov
xor
sahf
add
cmpsl
add
mov
sub
mov
and
or
inc
and
rorb
fimull
push
or
sbb
mov
mov
lds
bound
adc
dec
pop
inc
mov
add
mov
in
cld
adc
mov
xchg
jmp
call
mov
adc
cltd
dec
dec
push
frstor
mov
lea
push
mov
leave
mov
sub
insb
push
xchg
push
push
jl
mov
decl
movsb
cmc
es
loopne
leave
aaa
inc
sub
lods
imul
pop
mov
dec
jmp
sub
leave
cltd
adc
add
mov
sub
jo
adc
das
add
loop
or
push
testl
sub
cmp
ss
push
push
mov
or
cmp
nop
add
mov
incl
or
movsb
push
push
and
push
lds
dec
in
or
mov
and
faddl
push
xor
stc
mov
das
xor
or
in
and
jmp
js
and
cwtl
sub
push
fiaddl
jge
movsl
decl
push
es
repz
idiv
ss
in
dec
push
cmp
xchg
jmp
jg
fs
push
ja
jmp
adc
and
sub
cltd
int3
cmp
ljmp
jo
ret
adc
std
pushl
xor
nop
fdivrs
pop
cltd
lock
pop
sub
nop
nop
push
push
mov
test
ljmp
aad
inc
push
mov
mov
mov
lea
pop
cltd
nop
inc
xchg
call
hlt
addr16
hlt
mov
push
mov
stos
pop
shrl
mov
lcall
add
hlt
out
test
xchg
enter
fs
ljmp
push
sbb
cmp
aas
adc
jnp
inc
xor
jo
loop
mov
dec
adc
xor
jb
test
pop
dec
std
testb
ret
negb
popa
adc
sub
jl
andb
sbb
mov
jg
mov
adc
shlb
dec
stos
push
or
jmp
fidivrs
cmp
lret
pop
cmp
in
mov
jbe
or
iret
pop
mov
jg
and
mov
je
xchg
mov
push
adc
or
scas
cli
jmp
push
andl
ljmp
ljmp
add
scas
out
sbb
gs
test
sbb
decl
loopne
mov
xor
test
mov
jle
loop
sar
incl
mov
adc
jns
mov
sbb
nop
jg
mov
lods
int3
push
mov
cwtl
mov
jno
js
rcll
mov
sti
call
add
jo
sbb
or
nop
je
leave
dec
inc
mov
nop
add
loop
dec
and
push
out
cmp
cmp
and
mov
pushl
lods
roll
test
stc
xchg
dec
add
and
push
aas
ss
fwait
test
mov
in
and
cli
pop
fxtract
sahf
add
call
dec
ja
xor
push
adc
aad
jmp
mov
mov
xlat
mov
or
in
inc
sbb
popa
ja
es
outsl
jg
insb
and
shll
adc
push
jne
push
cmp
int3
adc
fdivrs
xor
dec
filds
adc
ja
les
std
xchg
test
inc
jp
decl
mov
aad
xor
ret
enter
xchg
in
or
jg
push
mov
cmp
fs
ja
sbb
testl
ja
lcall
inc
sub
jb
fisttps
cwtl
dec
dec
imul
push
xchg
pushf
xlat
aaa
std
inc
dec
call
inc
push
xchg
pusha
mulb
pushl
daa
testl
repz
inc
mov
push
hlt
push
push
ja
push
adc
jmp
mov
push
gs
dec
lods
xor
and
adc
xchg
mov
lcall
add
pop
pop
rclb
and
outsb
aaa
ljmp
or
rcrb
or
and
lds
jp
sub
test
push
sbb
dec
orb
sbb
nop
add
and
loop
xor
push
or
lcall
repnz
and
xor
lods
push
push
xchg
jp
xor
cwtl
in
push
loope
push
add
dec
push
xchg
outsb
add
jg
ret
inc
popa
xchg
stc
push
push
scas
pop
inc
mov
mov
les
jg
and
push
pop
lcall
ja
ret
fldenv
sbb
push
mov
das
mov
pop
sbb
sar
mov
lds
imulb
ds
ja
or
inc
test
cmp
and
les
jbe
push
mov
sub
idivb
sub
inc
jg
sbb
adc
inc
jnp
add
adc
cli
pop
imul
push
add
adc
xchg
ljmp
xorb
ja
daa
mov
adc
cmp
adc
mov
jle
test
pop
call
das
fsubs
mov
xchg
pop
in
pusha
ja
outsb
call
xor
push
inc
loop
incl
and
adc
enter
pop
adc
ljmp
add
xchg
dec
aam
out
call
pop
sbb
jb
xor
popa
icebp
sub
push
push
fldcw
inc
cmp
test
lock
sub
add
or
popa
rol
jo
ret
out
clc
dec
mov
rolb
mov
mov
xchg
sti
inc
jnp
inc
es
adc
push
adc
loopne
adc
push
daa
xchg
xchg
adc
adc
sbb
dec
outsb
pushf
jns
adc
sbb
jmp
movsl
sbbl
pop
shll
xor
dec
inc
xor
mov
sub
ljmp
mov
and
adc
lds
add
sbb
bound
push
adc
xor
mov
cli
lds
enter
hlt
ljmp
inc
xchg
jb
andl
imul
cld
pop
push
inc
xor
adc
jl
andl
add
adc
add
inc
lock
pushl
loope
sar
add
xchg
addl
inc
fisttpl
jae
mov
or
out
in
inc
pop
pop
mov
jg
add
push
sbbb
call
adc
add
bound
sub
repz
push
cmpsb
mov
incl
stos
cmp
push
jne
add
jmp
sbb
lock
mov
popa
mov
push
loope
cmp
roll
hlt
add
ljmp
aad
jb
or
mov
arpl
leave
out
and
mov
insb
bound
xchg
jp
xchg
adc
scas
cli
idivb
lock
loope
adc
xchg
ficoml
inc
sbb
jmp
add
add
jg
and
jb
cmpsb
xor
sbb
clc
incl
lds
xor
fsts
push
and
inc
push
enter
call
cmpl
das
pushf
push
into
xorb
inc
push
test
jae
mov
push
enter
outsl
dec
push
decl
ss
ret
and
mov
dec
ss
addr16
xor
outsl
and
jge
cmp
clc
jg
dec
aaa
jp,pn
pop
das
shll
push
pop
xchg
gs
cltd
add
je
mov
adc
pushl
enter
jg
dec
push
fwait
sub
fwait
pop
pop
add
fwait
in
jle
or
decl
gs
cmp
adc
sbb
mov
or
incl
mov
jecxz
sbb
ret
add
add
test
pop
inc
xchg
dec
sar
ja
jb
push
testl
sub
pop
push
or
call
pop
pushf
xor
cmp
sbb
cs
dec
pop
sub
xor
cltd
jg
sub
cmp
adc
or
and
jnp
outsb
out
decl
les
or
fidivrl
repz
das
mov
lahf
sub
ja
jns
push
inc
mov
push
aad
dec
sbb
cmp
mov
cmp
mov
call
cmpsb
movsb
dec
push
dec
and
cmp
dec
cmc
push
call
lds
incl
push
dec
adc
push
aad
push
cmc
movsl
bound
imul
inc
js
test
and
jmp
cld
pop
inc
push
push
cmpsb
inc
shrb
lcall
and
jg
pop
into
mov
vmread
loop
or
mov
jne
test
cli
mov
negb
add
cmp
mov
sbb
jl
adc
jno
mov
decl
xchg
cmp
mov
dec
xor
cli
xchg
aad
jmp
xor
pushf
adcb
jge
sub
mov
inc
push
pop
xchg
jno
aaa
lahf
mov
mov
sar
inc
xor
inc
mov
sub
test
aaa
loopne
push
pop
mov
adc
pop
xchg
add
gs
call
push
cmpsl
fs
adc
jp
aad
fcomps
in
cmp
and
and
imul
jmp
popa
cs
lods
enter
pop
jl
dec
mov
mov
inc
xor
mov
decl
push
push
jl
pushl
add
push
add
xor
push
dec
xor
and
push
fisttps
and
push
and
mov
mov
ss
mov
repnz
andb
fistpl
movsb
jp
pop
push
daa
out
cmp
das
push
js
mov
inc
shr
cmpsb
jno
fcomp
push
add
je
fwait
lcall
cltd
push
test
dec
mov
out
cli
jg
push
fldt
or
fs
pop
push
loopne
pop
sub
es
movsl
cmp
xor
pop
es
pop
sbb
cmp
adc
mov
jo
push
mov
adc
sahf
pop
sarl
mov
mov
lcall
sub
orb
pop
cmc
mov
jg
or
or
push
push
fidivl
xchg
sbb
cmc
and
ljmp
jns
les
scas
adc
lods
scas
xor
andl
pushl
jp
sub
and
or
cmpsl
repz
inc
pushl
push
rcrl
in
mov
adc
xchg
addr16
mov
push
xchg
adc
inc
lret
xchg
dec
sbbl
call
cmp
jb
clc
popa
lea
call
and
and
inc
push
les
daa
mov
and
rolb
mov
hlt
daa
ss
jmp
out
clc
icebp
pop
test
mov
push
inc
pop
pop
stos
aaa
xchg
pushw
icebp
inc
cmp
push
std
decl
pop
xchg
in
jne
gs
sub
jbe
jg
stos
ss
push
lods
mov
loopne
movsl
mov
mov
ljmp
add
pop
sbb
sbb
add
lret
outsl
clc
jmp
push
mov
mov
cmp
loope
imul
fcomip
jne
nop
int3
dec
and
inc
ljmp
dec
das
add
pop
test
xchg
ja
pop
icebp
or
mov
xor
jo
decl
dec
mov
push
js
xchg
jl
mov
call
popf
sahf
and
push
lock
outsl
push
cmp
xchg
sub
adc
scas
or
cmp
cmpb
incl
addl
loop
mov
bound
andb
sbb
sar
incl
xchg
shll
aaa
inc
sarb
adc
or
push
inc
xor
xchg
push
cmpb
cmp
adc
pop
mov
sbb
lret
out
mov
cmp
pop
inc
fsubrs
out
clc
int
ja
adc
mov
pushl
nop
aam
les
jns
je
mov
and
inc
sbb
inc
fucomi
test
mov
or
lock
mov
insb
subb
ficoml
sbb
cmp
bound
shll
inc
sub
adc
rolb
pop
cs
ljmp
or
jno
movsb
je
push
add
rcr
movl
fisubrl
pushl
xchg
mov
dec
inc
and
leave
sub
cltd
xchg
and
sbb
add
push
aaa
sbb
mov
out
add
incl
inc
mov
pushf
add
xchg
and
mov
fs
cmpsb
push
loop
imul
cli
jae
ss
xchg
sub
mov
inc
popa
inc
inc
dec
jmp
flds
je
and
lods
or
scas
mov
inc
shll
jl
leave
or
ljmp
movsb
xor
ret
scas
movl
dec
jle
fildll
sub
lret
mov
stos
outsb
add
aaa
sbb
cmp
aaa
or
inc
mov
mov
inc
or
xlat
cmpsl
addl
lcall
inc
cmpsb
neg
dec
mov
push
xor
in
in
or
inc
ss
jno
out
adc
pop
cmp
cwtl
pusha
ss
pop
mov
les
dec
xor
ljmp
movsb
sub
push
ljmp
ret
aam
sbb
add
jmp
fbld
inc
sahf
xchg
stos
jg
push
iret
std
jno
mov
ja
test
pop
mov
int3
mov
inc
push
test
cmp
jns
sub
sbb
or
cmc
mov
push
pop
out
cmc
pop
das
or
js
clc
mov
fisubrs
aaa
cld
incl
outsb
or
pop
and
xchg
dec
mov
jle
jp
cs
inc
ljmp
push
jae
aas
cmc
scas
pop
data16
out
and
push
adc
and
dec
pushf
cmp
jae
jmp
aad
ret
fadds
inc
lret
mov
mov
push
cmp
add
add
in
push
sub
data16
mov
adc
imul
rolb
leave
inc
call
fsubs
jmp
xor
inc
push
fildll
gs
lcall
or
mov
or
xchg
lea
into
fchs
lods
outsb
pop
adc
repz
incb
ljmp
pop
mov
jno
fisubl
cmp
inc
imul
outsl
pop
inc
std
call
mov
cmp
das
and
rorb
mov
sbb
int3
and
pop
cmp
clc
fcoml
inc
sbb
pop
inc
loop
rol
jno
mov
inc
or
jg
decl
push
push
add
inc
jae
sub
xchg
jne
sbb
cmc
sub
mov
fistpll
push
loop
loopne
imull
or
shll
inc
push
jle
mov
stos
pop
incl
push
leave
sahf
insb
jl
insl
movsb
es
push
lret
push
xor
mulb
lahf
loope
inc
lds
jge
call
out
push
insb
stos
lods
fsubr
outsb
pop
mov
orb
je
insb
in
jmp
cltd
inc
adc
addr16
jne
adc
lea
fdivrs
int3
sbbl
mov
fbld
mov
fcos
mov
loop
repnz
sbbl
xor
sub
xchg
ss
sub
and
fucomip
loopne
inc
sub
and
cmp
popf
xchg
fstpt
stos
mov
push
fsubs
sahf
dec
incl
pop
sbb
xchg
push
popl
insb
test
mov
cmp
roll
pop
cld
mov
lret
mov
pop
mov
in
push
sub
pop
push
mov
call
mov
xchg
lcall
or
adcb
pushl
mov
andl
ljmp
and
lcall
enter
lea
shlb
ss
pop
mov
iret
fidivrl
mov
pop
std
pop
mov
add
test
rorb
js
cld
push
inc
lcall
jmp
jnp
sub
shll
dec
xchg
and
jmp
and
cmp
call
pusha
rcrl
fimull
push
cmp
mov
cmc
or
arpl
stos
test
pop
jns
add
dec
jo
nop
adc
pop
dec
cld
pop
mov
mov
in
mov
in
pop
leave
jnp
jge
jns
jmp
jmp
cld
push
and
ds
xor
aas
add
fsubr
lods
scas
incl
in
sub
or
inc
xor
sti
add
stos
mov
shl
mov
mov
and
sar
call
lahf
adc
push
xchg
lds
fcmovb
add
fistpl
pushl
push
inc
sbb
sub
sti
insb
rolb
mov
sbbb
push
cmc
call
aam
rorl
rolb
add
shlb
into
lret
xor
cs
or
and
xchg
lcall
pop
push
ror
and
aaa
push
inc
sbb
add
popa
mov
mov
mov
loop
decl
scas
mov
push
test
dec
adc
jae
pushl
jne
lea
rcr
pusha
xchg
sub
stos
ljmp
je
adc
test
xchg
sub
fldt
or
xor
xchg
or
pop
mov
jo
stos
lods
mov
jg
imul
addb
fdivs
sbb
les
push
jmp
lret
and
xor
adc
push
fmuls
dec
mov
sub
sub
push
or
ljmp
xlat
fisubl
mov
imul
cmp
lea
loope
jp
cmp
incl
sub
push
jbe
fcomi
aam
dec
cmp
shlb
cmp
mov
out
mov
sti
sbb
rcr
pop
ret
mov
movsb
pcmpgtd
and
mov
jg
sub
ret
into
cltd
ret
fwait
incl
cmp
jno
xchg
notrack
fwait
inc
adc
inc
subb
cli
imul
stos
xor
add
jb
and
shl
ljmp
mov
and
pusha
test
inc
cmp
add
jb
push
xchg
enter
add
add
lea
cli
ss
xor
cmp
dec
fstps
test
dec
pushf
and
sar
outsl
mov
cmp
movsb
loopne
and
pusha
orl
jo
or
jbe
mov
push
add
pop
and
or
sub
mov
adc
int
ljmp
adc
mov
xchg
stc
sub
sub
decl
sbb
pop
out
xchg
out
mov
xor
and
sar
sub
mov
jge
adc
andb
sub
test
jg
jecxz
mov
jmp
or
cmp
inc
add
xor
jl
loopne
es
outsl
mov
aaa
cld
dec
pop
mov
cmp
pushf
xchg
jl
das
mov
mov
movsb
lahf
adc
sub
ja
pushl
sub
fxch
je
inc
sahf
or
push
test
xchg
push
mov
cmp
call
adc
jne
inc
xor
and
jge
mov
push
mov
pop
push
adc
dec
push
push
ret
fsubs
sub
mov
aaa
das
dec
inc
xorb
xor
in
mov
mov
pop
mov
inc
sbb
jg
mov
sbbb
jnp
push
add
cmp
push
je
cmp
lods
bound
push
mov
ss
mov
jne
mov
inc
dec
outsb
xorb
clc
or
xor
push
cmc
scas
jno
lcall
call
lret
lods
push
push
lahf
or
sub
je
jo
sbb
ret
adc
lcall
fimuls
xlat
repnz
addr16
pushl
scas
add
popa
xlat
inc
push
rorb
jle
jb
sub
aas
jns
movsb
jle
mov
sbb
rorb
xor
and
or
jmp
cmp
adc
jmp
outsl
pop
inc
cmp
xchg
jns
or
cmp
test
inc
negb
sub
shrb
add
cs
clc
pop
sbb
mov
pop
movsl
or
aad
and
jmp
jmp
mov
xor
jmp
and
sbbb
mov
lcall
xabort
jmp
adc
stos
push
add
imul
fists
dec
or
clc
and
enter
mov
js
incl
adc
ret
inc
push
mov
lods
and
fcomip
decl
sub
leave
rcrb
mov
pop
ljmp
lods
fistps
mov
lret
pusha
dec
push
mov
mov
ret
xchg
fptan
push
mov
in
into
shrb
lret
imul
inc
aaa
cld
cmp
cli
lret
xor
push
lods
mov
xor
les
sar
pop
test
sbb
dec
call
mov
push
in
add
inc
mov
or
inc
push
cltd
sub
mov
pop
decl
leave
enter
orl
test
es
sbb
ljmp
aas
pop
std
flds
sub
pop
test
aaa
adc
fwait
add
and
insl
sbb
movsl
scas
xchg
lea
sub
call
mov
jecxz
call
fsub
push
jecxz
and
xor
add
mov
or
cld
mov
xor
fcoms
into
mov
jle
pushf
jecxz
pop
and
sub
jecxz
sbb
cwtl
shl
fdivl
adc
ret
cmp
jp
adc
clc
dec
mov
inc
lea
jo
add
incl
jmp
cmp
xchg
cltd
xchg
push
cmpsb
adc
movsb
in
test
data16
in
sub
sub
push
cltd
aad
or
in
add
js
sahf
out
mov
inc
incl
test
add
mov
mov
ljmp
hlt
cmp
ljmp
jge
adc
push
daa
pushw
incl
and
mov
cmc
sbb
decb
xchg
out
inc
bound
mov
pushf
lds
xor
out
cltd
jns
adc
push
mov
mov
mov
mov
movsl
out
clc
sbb
jbe
mov
fcmovbe
scas
movsl
iret
call
call
rolb
or
cmpsl
cmp
pop
andb
bound
mov
icebp
push
pop
mov
push
jb
sbb
insb
insb
sbb
push
icebp
test
decl
mov
scas
jp
jo
imul
test
das
xor
push
roll
mov
push
fcomip
fists
pop
mov
dec
mov
xchg
addr16
aas
jl
mov
call
sahf
gs
sbb
sub
popa
jg
fnstenv
and
jmp
adc
int
dec
adc
mov
xor
dec
test
mov
lds
aas
cltd
sbb
pop
cwtl
cmp
dec
push
out
dec
cs
rcrl
cli
int
aam
jmp
fistl
icebp
or
outsl
mov
in
or
and
es
mov
xor
test
cmp
jmp
mov
inc
pop
mov
push
data16
getsec
xchg
mov
sub
mov
out
or
ds
call
addb
sub
sbb
hlt
and
mov
ljmp
rcl
outsl
cmp
dec
leave
sub
pop
loope
frstor
pushl
xchg
aas
push
in
dec
loope
cli
ret
pushf
and
mov
ret
lcall
scas
pop
sbb
adcb
mov
mov
pop
adc
or
inc
and
pop
pop
out
fmull
jmp
mov
cmp
lods
pop
sub
bound
shl
clc
ljmp
cmp
rolb
mov
aaa
movsb
lret
outsl
lcall
or
pop
call
mov
clc
dec
adc
lcall
scas
das
mov
push
and
push
test
add
enter
mov
mov
shlb
lea
pop
incl
dec
ss
cwtl
clc
inc
ss
incl
pop
shrb
mov
sub
and
lea
scas
add
cli
mov
repz
push
mov
inc
test
or
sub
add
mov
add
js
lcall
aaa
std
jmp
mov
leave
dec
push
inc
dec
xchg
and
ror
cmp
mov
xor
xor
cmp
scas
mov
out
mov
clc
mov
lds
sbb
fwait
cs
push
mov
sahf
xor
scas
nop
es
inc
sub
sti
and
rcrl
roll
cmp
ret
popf
and
mov
pop
pop
inc
add
aam
jmp
and
jp
jmp
xor
xchg
cmp
sub
mov
sarb
sub
push
ljmp
hlt
decl
mov
sbb
out
mov
sbb
mov
outsl
cmp
movsl
mov
mov
dec
and
pushl
jp
xchg
xchg
xor
decl
call
mov
jnp
leave
fwait
mov
dec
and
jg
lods
pop
mov
adc
dec
les
jae
lock
dec
sbbl
sbb
icebp
shrb
mov
or
cmp
subl
lock
ret
inc
mov
and
in
mov
inc
push
pop
dec
xor
jmp
mov
sbb
orb
sub
das
push
xchg
push
mov
sub
jg
xchg
pop
or
lcall
xchg
sbb
add
adc
mov
adc
jmp
jae
cmpsb
pop
fistpl
sbb
adc
cmp
mov
xchg
mov
pop
rolb
mov
and
mov
mov
bound
push
dec
ret
imul
loopne
int3
enter
or
xchg
push
or
push
fisttpl
mov
mov
mov
mov
lea
aas
dec
adc
mov
dec
jo
mov
cmpsb
xorb
mov
arpl
lcall
sub
adc
mov
shlb
xor
nop
movsb
movsl
sbb
mov
jmp
decl
sub
ret
pop
sbb
push
jne
xor
mov
nop
cmp
decl
mov
and
inc
pop
dec
movsl
dec
dec
xor
jno
sbbb
mov
call
loopne
mov
add
dec
add
xchg
ror
orl
call
cmp
lret
dec
xchg
stos
xor
jns
xchg
lods
and
mov
lahf
fucomp
xchg
lret
sbb
call
xchg
sbb
ret
insb
dec
or
mov
mov
jg
add
sahf
fs
dec
cmp
aas
fmull
in
icebp
xchg
push
cwtl
jecxz
daa
jg
push
cmp
decl
xchg
lods
mov
inc
cmpsl
fstps
jb
mov
in
mov
je
jo
shl
xor
decl
stc
adc
cltd
mull
dec
lret
cmp
or
repnz
add
cmp
mov
mov
mov
mov
cli
dec
pop
mov
xor
inc
xchg
or
popf
sbb
lcall
and
lcall
loope
fdivrs
fbld
sbb
adc
push
or
les
adc
mov
fs
popa
sub
mov
cld
cmp
jg
jge
or
ror
dec
add
and
add
inc
mov
add
mov
daa
mov
push
pop
arpl
or
xor
aas
cmp
push
xlat
mov
or
lcall
pop
push
mov
call
cmp
fnstsw
mov
add
sbb
cmpsb
cmp
xchg
cli
sbb
mov
jne
mov
jp
xlat
xor
and
rcll
pop
sbb
les
mov
jg
movl
push
in
loop
inc
mov
fistps
mov
je
arpl
jbe
cmp
andb
das
clc
jl
out
push
iret
or
mov
popl
cmp
ljmp
hlt
cltd
inc
or
les
push
cmc
ret
fistpl
lret
mov
and
scas
fcomip
stos
add
aam
mov
lret
inc
sahf
aas
icebp
stos
or
mov
or
jp
ret
movsb
push
decl
bound
movsl
pushf
call
pop
sbb
adc
aam
fcoml
jns
or
jl
addb
rolb
adc
sar
xor
ret
dec
cltd
pop
jmp
pop
loop
xchg
movsl
sbb
out
lds
lcall
push
int
inc
imul
repz
mov
mov
jmp
cwtl
mov
lahf
fisubrl
fucom
incl
and
aam
jns
or
sbb
loopne
cmp
jmp
mov
lea
push
fisttpl
push
rol
sub
fisttpll
xchg
outsb
xchg
mov
jg
andb
cmpsb
lods
inc
pushf
loope
lods
lods
fisubrl
dec
dec
shlb
cltd
lods
lods
cmp
cmp
push
in
nop
out
ret
inc
inc
push
mov
jb
aas
sbb
lods
iret
and
cmp
incl
inc
and
adc
mov
adc
cmp
sbbb
mov
in
mov
adc
test
inc
pushl
test
lds
push
hlt
xchg
mov
jno
inc
xchg
subb
mov
mov
shlb
inc
or
hlt
pop
sub
lods
jp
mov
popf
jmp
es
jmp
icebp
xlat
xchg
sbb
fsts
jecxz
jp
sub
fcom
int3
pop
push
sub
inc
in
jmp
and
push
or
sub
mov
or
push
fistpll
fdivl
pop
int3
cmp
aam
inc
push
popf
jge
xchg
loopne
xor
fldt
mov
jp
pop
fcomps
adc
dec
gs
xchg
sbb
lret
pop
movsb
fldenv
movsb
test
das
in
call
ret
mov
xchg
bound
push
leave
dec
dec
es
inc
add
mov
mov
lcall
shll
int3
push
mov
or
pushl
push
lcall
loope,pt
sbb
scas
roll
mov
jmp
cli
mov
adc
in
je
and
push
jecxz
jmp
fimuls
ja
add
xor
push
imul
sub
xchg
out
mov
mov
fs
add
movsl
in
cmc
mull
rorb
std
pop
bound
arpl
dec
ficoms
int3
in
std
jmp
jne
or
inc
outsl
movsb
sbb
ret
mov
xchg
fs
add
cs
jp
pop
je
sub
fcoms
movsl
test
push
fcmovnbe
jno
fimull
mov
pop
inc
cmp
mov
icebp
push
lahf
call
xchg
shll
sub
mov
cmp
and
adc
andl
into
incb
or
xchg
es
push
xchg
inc
int3
repnz
call
mov
insb
add
in
dec
pushl
ljmp
ret
push
dec
dec
inc
xchg
pop
push
push
pop
scas
mov
rcrb
push
inc
pushf
pushl
dec
movsb
pop
lret
insl
push
or
add
push
adc
pop
sbb
adc
sbb
adc
ja
scas
lock
adc
inc
insl
dec
push
in
aad
insl
aam
pop
sub
nop
dec
incl
pop
or
mov
sub
cld
es
mov
mov
sbbb
in
out
into
and
mov
sbb
push
cmpsl
inc
mov
icebp
sbb
sarb
call
pop
leave
adc
and
rol
sub
pop
or
jmp
scas
fbstp
mov
jl
movsb
push
or
push
cmp
lods
jae
pop
cld
mov
or
out
dec
rcrl
les
adc
cwtl
call
xchg
les
mov
fists
mov
mov
add
ret
push
cmc
cli
sbb
push
cli
mov
push
and
and
enter
mov
pop
mov
and
test
imul
loopne
xchg
jecxz
push
or
push
in
fidivrs
xor
ljmp
call
dec
mov
fcmovne
sbb
lret
cmpsl
push
fwait
popf
repz
inc
jb
sub
in
mov
lcall
ljmp
pop
fdivrl
call
dec
cmp
mov
pop
stos
adc
mov
enter
mov
xor
add
fld1
test
sub
mov
test
out
jb
loopne
cmpsb
and
xlat
adc
sub
insl
pushl
sarl
pushf
in
lods
hlt
push
mulb
test
fldenv
call
cld
sbb
mov
and
icebp
add
add
jno
sbb
imul
dec
lods
xchg
mov
ret
loopne
shll
divb
sbb
mov
xchg
minps
mov
sahf
imul
push
xor
adcl
pop
cld
sbb
push
aam
das
mov
cmp
ss
outsl
int
fsts
loope
scas
push
sub
call
loope
add
push
ja
adc
data16
popa
add
scas
and
icebp
cmpsb
clc
cmpsl
cmp
test
les
out
nop
lcall
jecxz
push
outsb
ret
test
fnstsw
sti
and
ljmp
cmp
ljmp
push
and
inc
or
cltd
mov
pushl
test
js
insl
jo
xor
jle
dec
aaa
ja
mulb
out
inc
mov
and
popf
pop
mov
dec
shll
aam
loope
fnsave
cmp
gs
incl
imul
sbb
and
mov
and
xor
mov
stos
scas
add
cmp
xchg
int3
jmp
jp
dec
movzbl
fucompp
fs
mov
flds
adc
fisubs
test
mov
fbstp
mov
scas
pop
or
orb
ret
mov
les
cmp
add
or
inc
sbb
xlat
fnsave
sub
or
lahf
sub
pushl
sub
mov
xor
decl
xor
cmp
cmp
mul
clc
call
xchg
push
fs
cmp
sahf
loopne
sbb
fcomip
mov
je
sbb
pop
stos
outsl
cld
lret
fisttpll
js
stc
pop
clc
cmp
add
pushl
cld
adc
or
outsl
sti
inc
push
lock
cmp
sahf
mov
inc
jo
aam
push
les
mov
jp
test
std
int
fs
and
push
mov
dec
push
and
jmp
push
sub
lock
orl
jo
inc
sbb
jo
mov
cmp
sub
incl
jg
sbb
mov
cmpb
sub
adc
cltd
xor
mov
lret
sub
je
add
pusha
mov
dec
cmc
cmp
pop
inc
stos
hlt
imul
push
imul
jbe
push
movsb
push
icebp
call
ret
mov
sbb
jb
push
bound
jbe
out
loop
stos
ja
mov
add
js
sbbl
dec
int3
fdivs
inc
stos
fyl2x
bound
adc
imul
arpl
lcall
movsl
add
cmp
andps
jo
add
dec
ds
cmp
and
shrb
mov
add
sub
fcoms
mov
outsl
jnp
mov
ret
call
js
loop
in
daa
outsl
mov
pop
xor
testl
test
and
cli
mov
cmp
push
add
nop
pop
es
popa
ljmp
and
pop
test
dec
mov
xchg
rorb
jno
xchg
dec
add
movsb
mov
gs
js
and
inc
in
test
cmp
inc
ss
int3
xor
ljmp
popa
test
add
inc
add
mov
cli
dec
aam
jmp
cmp
and
les
fdivr
pushl
adc
xchg
pop
push
aad
push
dec
sub
aad
push
or
dec
pop
scas
push
push
popf
add
rcr
add
push
inc
mov
dec
in
imul
lcall
xchg
test
jl
loopne
push
stos
mov
shr
inc
fistpll
mov
popa
negb
adc
add
mov
mov
lcall
add
lods
scas
sbb
push
call
pop
scas
mov
and
adcb
cs
add
aaa
ret
je
xchg
pop
insl
dec
imul
cld
stos
xchg
es
add
jg
enter
and
pop
gs
mov
test
push
jp
arpl
popa
add
fisubrl
lahf
cmpsl
push
push
lret
pushf
jmp
push
sbb
and
pop
pop
cltd
and
bound
inc
mov
decl
lea
fidivrs
inc
and
repnz
pop
mov
jle
dec
cld
sbb
loope
xchg
adc
dec
xor
sbb
xor
dec
and
ss
incl
cld
ljmp
jns
pop
inc
dec
xor
sbb
or
add
lock
loop
cld
call
pop
lds
je
sub
aad
ja
jg
inc
dec
sbb
mov
jp
inc
push
jb
pop
ja
or
lret
faddp
push
inc
cs
data16
push
cmp
sub
rcrb
in
mov
dec
scas
mov
mov
inc
lock
pop
je
fwait
scas
mov
sbb
mov
sub
adc
into
pop
lcall
ret
sub
jmp
fcmovnbe
push
push
mov
fmull
push
divb
fists
dec
push
cmpsl
scas
loop
pop
repnz
jmp
loopne
pop
sbb
cwtl
add
inc
test
pusha
inc
aad
icebp
jmp
out
fldcw
jns
stc
or
lcall
outsl
xor
jae
mov
stc
inc
adc
fisttps
mov
and
sub
outsl
jg
add
enter
cld
das
xorl
xor
es
rcrb
xchg
sub
dec
inc
fninit
call
and
addl
int
push
loop
push
shlb
cmpsl
insb
movsl
sub
or
dec
mov
mov
test
out
ljmp
mov
push
jl
lods
mov
loope
cmp
les
pop
call
sbb
inc
aam
out
sbb
rorb
jo
mov
sub
dec
aaa
mov
cltd
std
cmp
fwait
xor
fs
pop
stos
and
cmc
in
dec
sub
xor
iret
sbb
into
mov
js
call
lds
fs
pop
fistl
adc
stos
mov
imul
mov
pushf
or
and
out
or
iret
pushl
adc
jne
lods
xchg
add
call
cmpsb
je
mov
cmp
popa
pusha
je
jo
push
mov
dec
movsb
arpl
mov
jle
in
and
fcompl
push
xchg
adc
sub
inc
rcrb
push
loop
mov
orl
push
mov
lcall
or
and
sahf
movsb
xchg
popf
je
addr16
adc
sbb
incl
jne
jbe
aam
pushf
inc
dec
movsb
shll
xchg
daa
or
jmp
jb
shrl
imul
cli
pushf
out
mov
xchg
mov
ljmp
inc
cmp
xchg
sub
ret
call
pop
out
ljmp
add
into
ds
ljmp
lret
ret
push
push
clc
lcall
dec
jno
lcall
imul
mov
arpl
sub
ds
jg
clc
mov
or
add
das
push
and
rolb
scas
outsl
decl
xlat
mov
dec
cmpsb
addr16
test
aad
popf
adc
cmc
idiv
inc
ljmp
jl
repnz
mov
and
adc
loope
and
pop
cld
lock
pop
incl
mov
ljmp
mov
inc
out
movsb
test
test
jle
fwait
enter
inc
xor
incl
mov
and
inc
mov
cmp
and
or
int
xor
cwtl
mov
sbb
ljmp
test
and
test
orl
fbld
mov
fldl
aam
scas
push
test
pusha
sub
mov
cmp
cmc
push
mov
lea
sub
inc
cmp
inc
push
sub
mov
decl
scas
cmp
insb
jns
iret
jge
ss
adc
test
fnstenv
pop
jnp
and
ljmp
cmp
adc
sub
cmp
mov
xchg
ljmp
out
sti
pop
ljmp
pop
fldt
mov
test
lods
dec
lods
in
mov
adc
jg
les
pop
movsb
sub
mov
cmpsl
negl
mov
das
cli
pop
dec
mov
rcr
adc
es
decl
loopne
lds
push
out
sti
sub
mov
mov
lcall
into
jle
jle
imul
sub
and
cmp
lods
and
dec
decl
adc
data16
sbb
insl
movsl
es
adc
and
mov
adc
ljmp
push
adc
scas
cmp
out
stc
mov
mov
das
fistl
mov
mov
repnz
lret
or
mov
mov
lcall
adc
sbb
movsb
push
push
sub
daa
sbb
sbb
ljmp
jne
rolb
pop
test
and
clc
stc
or
add
push
push
push
test
sbb
dec
stos
inc
sub
lcall
sbb
mov
lcall
mov
push
es
push
sti
jl
aas
and
xchg
push
mov
jg
adc
mov
pop
lcall
jmp
in
xlat
xchg
xchg
repnz
stos
mov
adcb
outsb
push
int3
jb
xchg
sub
mov
or
shl
decl
pop
lcall
imul
inc
jmp
mov
loopew
or
jge
ficoml
rclb
push
insb
dec
cmc
mov
jg
testl
pop
add
cmc
in
fisttpll
shlb
cwtl
loop
mov
lea
aam
fdivr
push
mov
add
sbb
stos
or
pop
cmp
testl
cmpsl
sub
les
push
insl
jp
xchg
orl
sbb
nop
mov
mov
imul
pop
pop
mov
push
inc
push
xchg
test
fwait
test
push
ds
in
stos
mov
ljmp
cli
insb
or
push
stc
adc
adc
push
jl
out
mov
cld
ds
inc
lahf
and
pop
repnz
lock
fstl
pop
mov
call
mov
sti
scas
add
xor
fs
inc
out
sub
imulb
pop
dec
repz
mov
idivl
adc
call
jae
test
adc
mov
cmpsb
stos
cmc
fsubl
pop
lret
jmp
add
outsl
fsubrl
fimull
sub
add
aas
cmp
adc
ficompl
aam
adc
sbb
xor
push
pop
clc
push
cld
fwait
sahf
adc
sbb
popa
xchg
or
xchg
push
xor
repnz
stos
mov
xchg
dec
inc
dec
fdivrl
pop
sbb
rorl
push
inc
decl
stos
aam
xchg
inc
test
inc
xor
incl
adc
cmovp
in
xchg
inc
push
sbb
ficompl
lea
fimuls
popa
mov
push
or
lcall
push
mov
loop
int3
hlt
or
push
aad
pushf
cwtl
hlt
lock
pop
stos
fdivrp
decl
pop
xchg
sahf
mov
adc
call
cli
push
xchg
cmp
lcall
les
push
stc
adc
stc
sub
xchg
pop
pop
add
jge
add
adc
cltd
add
and
clc
sub
int3
mov
insb
fldl
call
mov
xchg
js
cwtl
fsubs
push
xor
int3
push
push
in
or
xor
dec
lret
mov
or
xor
incl
sub
ds
iret
das
sub
sub
dec
sar
nop
inc
fsubrs
or
or
mov
xor
movsl
jg
ror
test
shll
roll
sub
cwtl
push
dec
push
andb
cmp
adc
outsl
mov
push
sbb
in
push
inc
decl
adc
sahf
sbb
ljmp
mov
xor
jmp
and
out
jl
mov
int
in
mov
iret
roll
fs
push
push
pusha
loopne
sarl
sub
ja
popf
cmp
lret
or
fstpt
inc
or
dec
fsqrt
mov
sub
lcall
repnz
mov
push
inc
push
loop
cmp
repnz
lret
leave
and
decl
lock
push
jp
xor
movsl
pushf
and
icebp
cmp
adc
dec
int3
loop
incl
lret
cltd
push
push
loop
loope
rcrl
or
in
and
pushf
lea
test
or
pushl
dec
pop
test
xchg
popa
xor
jo
pop
cmpsl
ffree
outsb
push
mov
inc
mov
out
mov
or
adc
and
jl
popa
fmull
xchg
add
inc
push
push
add
inc
pop
mov
mov
pusha
adc
adc
jle
or
push
icebp
fsubrp
xchg
aad
loop
cltd
inc
pop
pop
int
mov
jg
mov
or
mov
or
das
int
inc
jbe
mov
xchg
sbb
mov
out
adc
inc
ds
inc
inc
adc
fimuls
mov
call
mov
pop
loopne
imul
add
call
call
sub
push
pop
push
ljmp
fdivrp
outsb
enter
cmpsb
shll
pop
aas
out
pop
ss
dec
adc
hlt
push
cld
mov
rcrb
mov
adc
jmp
cmp
sub
jmp
lret
add
sbb
call
icebp
mov
xchg
and
mov
inc
mov
sbb
ficompl
in
lcall
mov
sbb
pop
or
dec
movsb
call
inc
push
jae
pop
cmpsb
imul
push
or
sarb
movsb
cmp
xchg
xor
pop
pop
or
lret
pop
push
nop
imul
sahf
insb
rcrb
out
decl
pushf
arpl
sbb
mov
adc
mov
daa
adc
pusha
mov
or
js
lds
loopne
enter
int3
pushf
push
mov
adc
addl
and
into
ljmp
pushl
es
cmp
push
and
inc
cld
in
ja
lcall
jg
and
xchg
adc
mov
sub
in
adc
inc
enter
dec
xchg
pushl
dec
cmp
in
lret
push
mov
sti
push
test
cmp
sbb
mov
jns
mov
lret
push
outsb
fistps
xchg
mov
add
push
aaa
std
call
mov
add
shrb
gs
call
jb
inc
or
push
call
call
push
xchg
push
test
add
xor
movsl
adc
clc
shll
lret
sarb
lods
loopne
imul
pop
cmpsb
inc
in
or
mov
sub
lcall
lds
or
loopne
and
cmp
mov
dec
out
in
xchg
inc
in
sbb
push
pop
cmpsl
pushl
gs
fs
aas
or
data16
mov
pusha
sahf
push
sbbl
push
push
leave
inc
inc
fcmovu
sbb
mov
fcoms
int
test
ja
mov
out
jbe
cmp
dec
sarb
push
mov
call
shlb
mov
xor
push
cmp
dec
movsl
and
mov
insl
call
aad
hlt
gs
jo
sub
mov
lret
sub
in
dec
dec
adc
stc
call
orb
imul
mov
rcl
mov
fstpl
pop
xchg
adc
pop
dec
xor
cld
add
mov
inc
mov
xchg
pop
xchg
cld
dec
push
lods
testb
fbstp
and
in
sarl
adcb
test
imul
fsubr
int
jle
iret
test
jge
mov
ret
fs
cli
cmp
push
sbb
lcall
shl
aam
xchg
dec
aam
lods
jmp
decl
cmpsl
test
jae
mov
loopne
cmp
mov
and
incl
sbb
in
add
jnp
lret
js
sub
sarb
sub
clc
jmp
inc
enter
out
ficomps
lret
inc
ljmp
jno
iret
cmp
out
stos
add
jns
mov
dec
mov
dec
sub
lock
scas
mov
jg
cmp
push
fldenv
xor
jge,pn
xchg
fsts
leave
int3
jmp
ret
jecxz
nop
pop
pop
sbb
addr16
jno
fstpl
sbb
ljmp
dec
in
xchg
or
push
lock
into
bound
jmp
popa
or
mov
sub
and
lret
push
test
insb
adc
mov
ljmp
cs
push
aad
into
test
mul
call
into
stos
int
rorb
dec
outsb
pop
icebp
decl
sbb
push
out
mov
mov
mov
inc
sub
fldt
mov
sub
movsb
sbb
push
xchg
adc
jmp
inc
in
test
scas
add
push
call
fadds
inc
pop
clc
mov
fcomps
dec
pop
mov
push
out
js
lods
hlt
pop
mov
push
loope
adc
sahf
fstpt
inc
incl
and
or
ss
stos
cmpsb
lock
or
sub
sti
mov
xchg
push
sub
sub
outsb
call
add
fbld
lahf
in
sbb
pop
jmp
outsl
cs
out
cld
mov
sbb
fcomip
call
xchg
dec
fcomps
xchg
add
mov
and
fistps
mov
clc
incl
fxch
push
adc
aas
inc
test
inc
dec
xchg
bound
das
xlat
mov
decl
inc
lds
sarl
lea
je
push
push
sbb
sbb
and
sbb
pushl
xchg
jnp
xchg
push
or
cmpsl
sbb
aad
pop
or
jmp
add
setae
andb
addb
inc
sbb
dec
fst
out
out
xchg
sbb
or
ljmp
dec
cmp
daa
mov
adc
push
jo
jmp
sub
dec
dec
lcall
jne
jge
sub
out
flds
push
sub
lret
ss
jmp
stos
add
movaps
add
lret
xor
loope
xor
pop
insb
push
xor
fxam
xchg
pop
aas
ret
jae
sbb
mov
adc
test
rcrl
xchg
outsb
dec
push
insl
ja
push
pop
cwtl
add
decl
mov
in
sbb
mov
sbb
dec
xor
xchg
movb
test
in
add
push
mov
fs
push
pop
call
cld
repnz
mov
pop
and
cmp
shll
add
add
inc
sub
ficoml
inc
lahf
xchg
mov
jne
testb
jg
into
je
or
add
fcmovnb
and
push
xchg
lods
sub
lcall
sbbl
in
mov
cs
inc
cwtl
jae
movsb
or
ljmp
cmpsl
stos
out
dec
lret
ljmp
ljmp
mov
fildll
ror
pop
mov
jae
xor
popa
arpl
xor
sbb
jecxz
jmp
cli
sub
cmp
pushf
push
mov
jmp
addr16
addr16
cltd
mov
sbb
mov
mull
xor
mov
out
iret
ficomps
imul
dec
fadds
push
fxch
std
movsl
add
outsb
add
xchg
pop
sbb
mov
int
cmp
data16
or
pushf
lea
dec
inc
jne
adc
fdivr
call
pusha
loopne
sbb
sbb
jmp
insb
jbe
push
data16
dec
xlat
push
sti
and
ja
sbb
inc
loopne
or
shrl
fidivrl
pop
jp
mov
clc
xor
lcall
inc
shrl
stos
cmpb
sbb
jle
jo
outsb
cmp
dec
enter
dec
xchg
adc
mov
out
mov
js
sbb
pushl
sub
jmp
mov
mov
adc
das
jmp
jg
fs
or
xor
mov
mov
and
mov
ret
sbb
xchg
sbb
mov
incl
ror
insb
xchg
or
call
fcomip
jno
mov
xchg
pushl
int
xchg
loop
or
lds
aas
push
cld
adc
je
add
mov
cmovno
testb
cmp
movsb
push
call
inc
xor
stos
push
lcall
jbe
dec
pop
loopne
lods
mov
mov
xor
mov
push
idivl
jmp
dec
inc
inc
jne
lret
out
fs
aas
psubw
cmc
and
js
popa
mov
and
push
jp
add
js
inc
add
pop
test
mov
xchg
mov
mov
jle
push
out
lods
inc
incl
insl
fcoml
push
ljmp
cli
gs
adc
push
inc
int3
pop
push
movsb
aad
add
lcall
and
push
repz
loope
or
test
fwait
push
icebp
and
push
iret
addb
cmc
enter
in
scas
mov
jmp
cmpsb
mov
sub
sbb
loop
scas
imul
lret
popa
outsb
pop
cmc
pushl
and
popa
leave
dec
adc
mov
inc
inc
mov
push
xchg
incl
shrb
dec
ret
in
call
pop
inc
testl
enter
inc
addr16
pop
add
imul
and
mov
inc
cmp
xchg
mov
pop
incl
sub
sar
lcall
test
test
enter
sbbb
cmp
mov
insl
adc
xchg
arpl
mov
adc
popa
fwait
dec
ljmp
push
aam
inc
iret
inc
push
pop
push
sub
jo
push
int
push
and
mov
rclb
aam
js
fisubl
test
xchg
push
push
jmp
insl
mov
decl
fcmovb
sbb
cmpsb
xor
orb
push
dec
in
push
mov
call
pop
pop
pop
add
loopne
scas
push
sub
outsl
push
fsubs
pop
add
outsl
ret
in
pop
mov
andl
cmp
push
push
sbb
jo
ret
into
lea
xlat
cs
sbb
sbb
aas
xor
fstps
jae
xor
int
insl
mov
lcall
fmuls
push
lcall
push
push
dec
ss
sub
mov
ljmp
iret
pop
aad
jne
aad
pushf
insl
loop
lds
aaa
mov
int3
rcll
outsl
lret
sub
pop
movsb
mov
dec
aad
xchg
add
nop
jb
repnz
mov
push
hlt
in
fstps
aas
lcall
fst
ja
fidivrs
cmp
mov
leave
mov
mov
inc
add
sub
decb
cli
inc
into
mov
das
pop
cmp
xor
xor
add
sub
add
mov
ret
mov
aas
push
and
or
adc
pop
push
lds
cmp
test
mov
or
fcmovnbe
pop
pop
ja
cmpl
inc
negb
mov
jmp
or
out
loop
sub
stc
mov
popl
cmp
test
push
mov
mov
sbbb
and
ds
mov
aam
adc
xchg
incl
mov
fisubs
pop
shrb
mov
stos
or
pushf
jb
test
es
add
dec
mov
jmp
sub
inc
pop
or
or
adc
sbb
mov
and
add
icebp
or
or
jb
add
xor
lcall
in
sub
int3
out
in
mov
in
jb
inc
lret
lcall
sub
int
sbb
xchg
mov
sar
scas
mov
xor
mov
mov
iret
and
mov
jg
xchg
ja
in
sbb
insl
cs
out
xor
aaa
fnstenv
call
call
scas
mov
ds
cld
xchg
out
bound
and
aas
mov
in
inc
xadd
lcall
aas
xchg
dec
mov
mov
mov
rorl
ret
mov
push
inc
dec
fildll
loope
inc
cmovns
jb
xchg
mov
popf
popa
lcall
imul
dec
cmp
loope
push
cs
xor
mov
jmp
outsb
push
and
scas
cmp
sub
fsubs
mov
test
loop
jmp
sbb
mov
test
push
mov
cmp
outsl
cli
call
jo
das
push
insl
or
jb
stos
cwtl
dec
xchg
cmpsb
rcrb
int
pushl
test
sub
frstor
mov
xchg
int
push
cmp
mov
push
inc
stos
xor
ljmp
std
out
mov
ljmp
mov
mov
push
pop
popa
add
ja
cli
call
pop
fsubs
xchg
inc
push
in
lret
decl
imul
mov
xlat
aad
mov
pushl
cmp
faddp
jge
jp
movsl
sub
cs
dec
xchg
and
out
inc
scas
pusha
mov
lret
xchg
xor
inc
popa
ds
ret
movq
mov
out
fstps
hlt
arpl
clc
push
out
adc
lret
xor
and
pop
enter
mov
inc
add
inc
cmp
lcall
enter
dec
shll
mov
fs
fcmovu
shlb
ret
call
call
xchg
rorl
pop
int
pop
ret
sahf
adc
dec
shrl
push
das
clc
mov
xor
rcll
cmp
decl
lahf
ja
test
inc
leave
dec
js
mov
fmuls
fistl
adc
cmp
sub
xor
out
sub
add
lret
hlt
incl
leave
sbb
sbbb
pushf
push
dec
mov
jmp
test
in
into
sub
and
call
inc
adc
add
lea
dec
push
push
aam
sub
xorl
les
xchg
shll
adc
adc
pushl
push
jmp
cltd
xor
mov
mov
xchg
fdivrs
std
sbb
into
adc
fmull
sub
aad
loop
addr16
lret
jns
mov
pop
and
cli
ljmp
dec
jo
stos
dec
mov
dec
cmp
pushl
test
incl
js
aam
or
inc
and
xor
js
xchg
shrl
mov
mov
fimuls
outsb
xchg
test
adc
mov
mov
fimull
jge
cmp
xchg
pop
dec
mov
insb
dec
adc
ljmp
outsb
sbb
leave
push
inc
inc
iret
mov
lea
lcall
jo
sbbb
push
inc
lea
lret
stos
icebp
rorl
inc
mov
imulb
mov
pop
mov
jb
sbb
stos
dec
jp
xchg
and
ljmp
pushl
or
lock
jae
aad
add
adc
andb
jg
xor
arpl
push
sub
jo,pn
scas
push
sub
ud0
mov
sahf
cltd
pushw
call
mov
mov
adc
enter
lock
cld
lock
scas
lcall
lea
push
sbb
mov
mov
mov
cmp
outsl
xchg
add
aam
sub
add
cmc
mov
lods
lock
lock
nop
sahf
push
bswap
out
pop
inc
test
jmp
jmp
js
xor
inc
adc
inc
mov
sbb
mov
cmp
lock
outsb
cli
pushl
lock
testl
fcmovbe
movsb
rorl
rclb
mov
adc
add
clc
add
insl
mov
decl
in
es
push
mov
and
es
ja
sbb
ja
decl
sub
in
add
dec
push
inc
aad
and
xchg
dec
ficoms
cmp
sub
call
sahf
mov
sub
sub
movsl
and
lcall
push
xor
dec
or
xor
inc
and
repz
fwait
out
decl
into
push
mov
xchg
sbb
bound
xchg
icebp
xor
mov
and
add
in
shll
xchg
insb
mov
xchg
jp
cmp
test
mov
mov
sub
cmp
js
xor
incl
scas
push
jb
clc
push
adc
inc
rorl
mov
popf
test
pushl
mov
fisubrs
pushf
push
dec
mov
pop
lahf
int
repnz
fcomip
ljmp
bound
mov
repnz
test
pop
inc
imul
jns
loopne
add
call
push
jmp
in
pop
xor
test
mov
loope
das
js
fcoml
sub
into
insl
jmp
punpcklbw
in
cmp
fisubrs
dec
cwtl
arpl
dec
or
and
push
fiadds
sbb
and
xchg
xchg
ljmp
incl
pop
je
bound
mov
xchg
popf
mov
push
sbb
das
cli
out
lods
ljmp
sub
cmp
xlat
or
xchg
cmp
xchg
sti
xlat
imul
cs
cs
bound
pop
jmp
xlat
rcrl
cmpl
int
cli
int3
mov
mov
ficomps
mov
pop
inc
cmp
cmp
fcmovbe
jmp
std
stos
xchg
fisubrl
sub
jbe
xchg
xlat
vmread
jg
outsb
imul
shr
cmp
or
aam
jbe
iret
sbb
xor
sarl
pushl
popa
mov
mov
bound
mov
jg
xchg
arpl
or
cs
in
cs
adc
mov
ljmp
in
data16
and
faddl
or
leave
add
jb
cld
sahf
cmp
emms
xor
push
cli
out
xchg
loop
mov
push
dec
inc
jmp
inc
in
test
lahf
pop
push
pusha
or
inc
icebp
leave
jb
cmp
into
aad
lcall
sbb
mov
xchg
sbb
inc
loope
outsb
out
inc
inc
fcom
movsb
jbe
decl
cmp
push
aaa
or
hlt
gs
add
sarb
xchg
or
js
ljmp
or
push
mov
scas
mov
add
mov
xchg
inc
jl
pop
xchg
mov
fsubrl
dec
jmp
mov
jle
nop
or
jg
or
dec
ja
and
sub
js
xchg
hlt
call
inc
fisubrs
adc
pusha
pop
mov
dec
adcl
lahf
push
cmpsb
fwait
mov
cmp
stos
ret
insb
sbb
adc
lcall
sub
jmp
add
lock
call
xor
mov
jecxz
push
dec
cmc
push
imul
jbe
and
or
call
fmull
add
stos
clc
lcall
fsubp
push
mov
mov
clc
or
repnz
add
and
insl
ss
and
inc
dec
sub
lcall
lods
in
mov
and
incb
in
add
fbld
int3
add
mov
in
pushl
loop
popf
cwtl
add
call
inc
stos
xor
inc
movsb
in
mov
cld
and
test
xchg
mov
int
gs
cltd
mov
mov
inc
cmp
xorl
inc
jmp
inc
or
and
adcb
in
fisubl
sti
ljmp
popf
aam
jg
test
push
addr16
hlt
outsb
and
or
push
cmp
movsl
adc
jne
dec
or
ljmp
or
ljmp
fisubs
xchg
das
rcr
inc
dec
sub
or
jns
imul
nop
lock
and
push
rolb
mov
decl
clc
nop
bound
retw
inc
add
daa
int
orl
subb
cmp
pslld
bound
push
jecxz
adc
icebp
and
sahf
mov
dec
enter
loop
and
lret
or
leave
cld
addr16
cld
jg
dec
in
nop
ljmp
xchg
adc
test
daa
xor
jne
sub
scas
insb
punpckhbw
das
push
insb
adc
incl
incl
pop
out
push
repnz
arpl
push
push
add
pop
add
hlt
loop
int3
call
pushl
mov
xor
push
mov
cld
jno
pop
dec
in
sahf
or
add
call
mov
cmpsb
ss
pop
ret
test
call
xor
imulb
lock
scas
sbb
lahf
ss
jg
cwtl
imul
call
pmaddwd
mov
movsl
push
cmc
dec
adc
outsl
lds
jo
mov
ljmp
out
lock
add
mov
mov
test
dec
push
mov
ja
ds
mov
mov
daa
mov
shrb
adc
lods
mov
call
daa
push
adc
mov
mov
mov
cld
sbb
mov
test
jb
decb
mov
repz
sub
sbb
sub
mov
stos
pushl
dec
pusha
xorb
sub
jmp
dec
add
inc
orps
and
xor
in
cmp
in
sar
pop
das
cmp
push
repnz
pop
outsl
cs
inc
or
jl
xchg
mov
test
and
cli
push
cmp
sbbl
xor
jp
cmpb
sbb
pop
xor
cs
or
adc
je
aaa
sbb
ss
outsb
nop
sbbb
or
mov
test
and
jmp
test
pop
adc
sahf
push
cmp
jbe
add
push
dec
outsl
mov
inc
sub
stos
pop
lock
cmp
int
mov
call
fmul
xor
sub
or
aas
aad
in
nop
push
fsts
mov
or
cmp
mov
mov
xor
sbb
or
jb
fbld
mov
inc
cli
jp
loope
mov
sbb
loope
or
mov
sub
retw
out
sub
or
pop
jnp
pop
stos
cs
xor
cmp
push
stos
lcall
sub
push
stc
or
jecxz
dec
pop
inc
sub
das
cmpsl
mov
push
add
pushl
call
add
push
shl
cmp
sbb
int3
xchg
mulb
or
das
hlt
ret
rolb
imul
and
xor
sbbl
fsubrs
xchg
jo
jmp
cmp
insl
in
dec
pop
sub
in
jo
aaa
loop
pusha
inc
inc
aad
test
add
adc
jmp
fildll
jge
outsl
or
push
ds
imul
cmpsb
push
push
jns
cmp
jae
lret
xchg
es
add
call
mov
dec
jne
mov
xor
xor
ljmp
in
push
sub
sbb
or
jne
lods
and
xor
jmp
adc
dec
mov
enter
cli
into
jne
lock
or
decl
jnp
outsb
jmp
stc
or
les
int3
push
stos
pop
movl
dec
push
cmp
xor
or
in
in
xchg
repnz
mov
ljmp
andl
dec
inc
dec
pushl
mov
cmp
push
mov
out
bound
mov
pop
ljmp
sub
adc
out
int3
stos
dec
inc
jmp
sbb
dec
aas
adc
adc
mov
sbb
add
sbb
aad
adc
outsl
test
mov
test
sub
dec
xchg
fadds
lock
push
adc
and
call
xor
xchg
jle
xor
mov
push
jne
or
imul
push
dec
cltd
movsl
push
mov
jg
insl
cli
lcall
xor
ds
or
and
shlb
jns
cmp
pushl
out
lret
decl
in
movb
jbe
adc
adc
fdivl
mov
and
push
lret
in
mov
fs
shrl
push
rorl
out
sub
xchg
decl
mov
dec
xor
jb
mov
mov
dec
push
inc
fsubrs
fmull
cmp
or
dec
cld
inc
sub
mov
popa
or
jae
js
or
ljmp
dec
adc
inc
push
xor
decl
mov
sub
cmp
jbe
jecxz
adc
sub
sarl
sbb
push
adc
call
in
fwait
stos
lods
jnp
stos
in
lret
add
dec
lea
out
mov
test
pop
mov
ljmp
xlat
repz
adc
adc
pop
lock
ret
addr16
xchg
ficoml
and
mov
rcrb
xor
or
jae
push
jne
mov
sub
mov
fidivs
fbstp
jo
imul
enter
dec
adc
in
or
cmp
inc
out
imul
add
adc
and
aam
mov
jecxz
aam
pop
add
pop
fmull
js
mov
popa
mov
dec
inc
adc
loopne
call
ja
es
aam
xchg
mov
nop
test
fwait
insl
in
inc
xor
mov
pop
pusha
outsl
cli
mov
xor
shlb
shlb
or
shll
inc
mov
aam
or
sub
fcoms
je
dec
push
movsl
shll
mov
scas
dec
adc
dec
inc
or
dec
gs
mov
enter
jg
jg
ret
or
jne
inc
fidivs
jge
fnstcw
fists
cld
incl
enter
add
adc
int
and
inc
mov
negl
mov
lcall
inc
and
jnp
cltd
aas
and
inc
movb
push
outsb
out
stos
cmp
jecxz
shrl
repz
ficoms
inc
insb
sub
mov
xor
mov
out
lods
subb
outsb
ss
enter
mul
pop
fcomp
popf
incl
jp
scas
je
lret
push
sbbb
mov
lock
cld
fnstenv
popa
and
inc
in
inc
imul
mov
or
or
xchg
lods
mov
sbb
xchg
mov
lcall
fildll
sbb
jmp
mov
imul
test
pusha
gs
jg
add
outsl
cli
push
push
add
sub
and
test
add
mov
popf
mov
cmpsb
push
lods
mov
mov
mov
xchg
test
subl
pop
xor
ficoml
std
stos
adcb
incl
inc
rol
add
lea
xchg
and
movsb
insl
icebp
in
or
jmp
dec
mov
push
xor
mov
jo
mov
or
andb
jnp
dec
stc
enter
xor
adc
xchg
leave
push
and
push
je
dec
xchg
mov
adc
mov
xor
in
adc
sub
mov
aad
stos
fisubrl
ret
push
out
xchg
and
pop
add
cs
xchg
and
sub
or
sbb
in
out
and
pop
lock
or
les
mov
shlb
jecxz
mov
dec
pop
out
lret
mov
sar
es
jmp
sar
mov
cmp
lds
mov
ja
xchg
and
fbstp
and
and
add
cmc
insb
subb
push
xor
jmp
mov
sbb
mov
bound
jecxz
cld
cld
insl
sub
mov
and
adc
mov
dec
lods
sarb
popf
dec
and
out
cs
and
mov
add
fiaddl
inc
adcl
ljmp
pushf
fwait
pop
and
lock
outsl
jns
test
jbe
in
loope
mov
inc
arpl
call
and
add
cmp
and
int
mov
push
mov
js
testb
mov
je
fimull
in
pop
lods
pop
scas
sub
and
aam
cmp
repz
cmp
loopne
push
xchg
xchg
xchg
sub
mov
bound
and
sub
outsb
cmpl
cmpsb
mov
push
mov
and
rcl
outsl
jge
pop
sbb
mov
ljmp
xchg
int
fcmove
fs
xor
aad
mov
bound
repz
cs
xchg
mov
outsb
iret
push
mov
into
stc
push
mov
xchg
pop
fisubs
jle
and
ret
xchg
mov
loopne
fbld
loop
or
out
and
push
or
pop
push
sti
movsb
lcall
ljmp
es
push
jne
outsl
sub
test
jg
jo
mov
test
iret
dec
int
fbld
jge
add
pop
ljmp
and
dec
push
mov
jno
dec
rcl
cmc
or
mov
aad
int3
dec
dec
rol
pushl
std
or
xor
out
add
mov
mov
in
sbb
pop
clc
decl
mov
out
sub
mov
sti
add
aad
jmp
sahf
or
mov
xchg
lock
int
and
xchg
ficoml
or
daa
aad
and
inc
sbb
adc
and
icebp
mov
xchg
cmp
and
idiv
adc
pop
mov
jecxz
xchg
lea
and
xchg
or
push
lods
mov
call
loopne
in
push
and
test
test
xor
into
les
xor
imul
pop
pop
cs
jg
pop
sahf
ss
hlt
call
push
lods
jb
lret
xchg
stos
push
mov
mov
stos
aam
xchg
lock
cli
lret
cmp
lea
lcall
call
xor
cmp
inc
pop
fnstcw
andb
pushf
cld
incl
or
lods
flds
arpl
andb
push
lret
inc
insl
out
aam
pop
pop
arpl
call
stos
mov
xor
cmp
sahf
fbld
ficompl
jmp
in
aad
add
push
loope
and
xchg
movb
stos
xchg
mov
call
in
and
mov
inc
sbb
push
inc
sbb
mov
jnp
add
mov
and
ljmp
jnp
out
or
addr16
jno
sub
fcoms
fs
jp
aad
mov
sbb
test
dec
jno
xchg
and
incl
pop
out
cmc
mov
mov
pusha
enter
sbbl
movsl
arpl
cltd
mov
mov
incb
call
mov
dec
sub
jmp
test
gs
inc
cmp
sbb
movsb
inc
daa
mov
gs
xchg
hlt
inc
pop
jp
adc
mov
inc
jo
fsts
inc
call
and
dec
push
xor
adc
jmp
stc
adc
sahf
test
sub
mov
add
cmp
jmp
pop
xor
fcoml
lds
push
les
loop
and
xor
push
push
pop
adc
bound
sahf
sub
xchg
pop
jg
pop
pop
push
inc
cwtl
push
loopne
pushl
mov
push
push
pushf
lret
push
pop
add
inc
and
mov
push
mov
subb
ss
jl
in
adc
inc
push
jne
adc
adc
and
xchg
loope
lock
xchg
jne
or
sbb
in
or
fbstp
inc
in
decb
pop
and
test
fildl
dec
or
sub
sbb
rcll
aaa
inc
lahf
aad
bound
icebp
fcoms
or
sar
incl
imul
cmp
jg
and
mov
mov
ja
sub
push
xchg
sar
sub
cmp
pushf
push
cmp
decl
jno
shll
dec
pop
sub
pop
pop
xchg
stos
mov
subb
xchg
pop
imul
xchg
push
jno
jbe
adc
movsl
imul
xchg
ja
mov
ret
and
xchg
dec
test
push
into
hlt
rorl
cli
ljmp
nop
pop
js
and
adc
gs
xchg
incb
adc
jecxz
xchg
dec
and
mov
mov
jb
cli
push
pop
mov
aas
jbe
add
vpshlq
cli
pop
cltd
inc
movb
inc
push
cmp
call
cmp
jle
jo
or
mov
test
lods
inc
dec
dec
add
mov
ljmp
cmp
or
cltd
out
sbb
lahf
jp
movl
cmpsb
dec
inc
js
xchg
les
fiaddl
push
adc
and
sub
pop
ljmp
and
inc
lds
fistl
adc
andb
mov
call
push
in
mov
pop
in
sahf
in
dec
gs
test
pushl
add
cltd
push
mov
dec
dec
push
mov
aaa
test
mov
or
daa
jb
pop
xchg
leave
insl
sbb
popf
push
ss
inc
or
mov
cli
cmp
loope
add
dec
js
xchg
mov
sarl
add
cmpsb
xor
es
or
sahf
incl
sbb
or
addr16
dec
sub
popa
dec
cmpsb
mov
sub
sub
jmp
adc
jne
and
stos
mov
pushl
mov
aad
xor
ss
pop
lret
mov
push
jo
add
lcall
dec
inc
inc
fcmove
or
pusha
subl
pop
mov
pusha
xchg
push
fisubl
stos
decl
decb
in
and
and
jns
xchg
leave
mov
jge
pop
popf
push
test
cmpsb
xor
in
lahf
in
aas
cld
push
xor
imul
out
cmp
cmp
rcrb
test
aaa
mov
ss
ljmp
jae
push
vmread
push
insb
cltd
lea
sub
dec
lock
pop
jae
and
inc
enter
incl
cmpsl
js
sbb
xchg
jle
shll
cld
jno
test
les
fiaddl
les
sti
sub
cmp
sar
xchg
je
sbb
inc
imul
push
push
cmp
jmp
lcall
sbb
addr16
mov
jl
pop
mov
jb
sub
loop
cmpb
xchg
subl
dec
or
mov
sub
int
xchg
mov
leave
inc
xorb
mov
mov
mov
adc
add
js
mov
xchg
clc
sub
fcoml
sbb
jmp
int3
sti
int
repnz
call
or
pop
push
lds
int
adc
cld
lahf
fs
add
stos
stc
xchg
lcall
out
jge
arpl
jnp
lcall
fstps
add
sbb
cmp
lcall
jbe
data16
xchg
int
or
jl
stos
add
ja
ljmp
mov
cmp
lcall
and
sub
aad
jo
mov
pop
and
sub
lcall
inc
add
push
xchg
mov
sub
mov
decl
xchg
mov
pusha
shrb
push
cmpsl
imul
loopne
imul
idivl
bound
push
imul
rorb
cwtl
xchg
add
aaa
sbb
fadd
sbb
loop
jg
add
popf
bound
jp
nop
dec
fstl
mov
xor
repnz
lcall
sbb
or
or
cmpsb
push
jnp
out
jb
int
stc
out
ja
nop
iret
mov
jmp
cmp
mov
pop
push
mov
fbstp
mov
in
nop
inc
adc
mov
mov
sar
adc
jbe
inc
enter
repnz
sub
jnp
adc
popf
push
cmc
inc
adc
pop
fcompp
mov
add
es
cltd
jae
decl
int
test
and
xlat
inc
push
sbb
dec
stos
rcl
pusha
pushl
nop
gs
lahf
lret
mov
xor
roll
pushl
sbb
fldenv
push
out
mov
lods
leave
fsubs
push
test
outsb
cld
call
ficompl
test
dec
pop
and
in
push
fwait
mov
mov
mov
lcall
popa
mov
mov
out
push
cmp
loopne
sti
xorl
mov
cmp
xchg
xchg
or
push
cmpsl
inc
push
inc
jne
jg
and
incl
lds
sub
repnz
cmp
sub
adc
outsl
xor
imul
jbe
cltd
int3
add
add
add
cmp
lods
mov
push
sti
lods
and
loopne
test
scas
cmp
in
or
dec
and
pop
sbb
pop
mov
dec
clc
jg
inc
push
out
jns
enter
out
imul
mov
sub
dec
xor
jg
and
xchg
test
mov
mov
loope
mov
test
push
or
call
lea
enter
inc
jbe
pop
in
das
lret
pop
mov
mov
lds
fisubl
lret
rorl
ljmp
stc
aad
dec
adc
test
out
ljmp
mov
push
and
cmp
outsl
push
and
jmp
ljmp
ljmp
aam
sub
dec
insb
test
xchg
push
adc
rcll
mov
aaa
in
fcomip
out
xchg
fstps
jl
int
ret
test
xchg
pop
fimuls
fs
call
aad
pcmpeqw
mov
filds
add
push
shrb
mov
stos
cmp
mov
sub
and
fxch
loop
xchg
scas
inc
jp
mov
add
decl
ja
lds
push
mov
lds
cmc
fsts
adc
mov
inc
das
jmp
mov
mov
imul
push
sbb
gs
cmpsl
dec
inc
inc
cmp
pushl
pop
scas
shlb
lret
mov
data16
xchg
ss
add
cmpb
push
pop
es
popa
inc
mov
jns
jae
insl
je
cmc
lea
hlt
daa
leave
mov
pop
push
incl
test
es
daa
xorb
jecxz
ret
cmp
push
shll
sbb
sub
loope
pop
inc
jp
data16
cmp
sarl
push
cwtl
bound
xchg
mov
rcll
mov
jbe
outsl
pop
xchg
push
addr16
jne
fildl
filds
jl
inc
pop
notb
jge
add
mov
push
pop
call
cmp
sarl
and
mov
sbb
ja
and
loope
test
clc
in
dec
pop
xor
push
mov
ljmp
mov
je
jb
push
cs
jg
cmp
sarl
incl
push
jmp
mov
and
inc
and
pop
cld
aam
insb
add
dec
fdivl
mov
js
sbb
sub
adc
mov
sbb
sub
mov
adc
adcb
aaa
push
movsb
daa
sub
loopne
push
push
sbbl
cs
xchg
jmp
enter
js
push
insb
addr16
cwtl
mov
and
orb
cmp
adc
es
push
call
add
jae
dec
push
outsl
movsl
ja
add
mov
add
push
dec
mov
shrw
aad
popf
mov
adcl
repz
clc
xor
sbb
jnp
sub
push
dec
ja
pop
cld
jecxz
outsb
test
in
clc
popa
jge
jb
call
pop
shrb
xor
ds
jg
testb
jbe
popa
nop
add
push
loope
and
decl
ret
out
pushf
data16
jle
xchg
jo
and
or
xor
push
pop
mov
pop
mov
xchg
inc
ret
xchg
mov
aaa
adc
jo
jnp
xchg
push
push
and
sbb
lret
sub
sub
lcall
mov
jno
push
inc
push
jg
push
dec
arpl
aad
adc
mov
fildl
xor
insb
jmp
push
mov
nop
aaa
lcall
dec
jecxz
cltd
fs
dec
cwtl
fwait
jecxz
lcall
push
xchg
arpl
mov
dec
xlat
xchg
mov
push
or
xchg
xchg
sub
mov
cmp
or
adc
dec
jbe
sbb
mov
hlt
jp
push
xchg
xor
cwtl
cli
inc
sub
mov
out
sub
jecxz
fistl
jo
hlt
fs
add
add
repz
mov
rcl
call
push
add
push
xchg
push
xchg
add
mov
lcall
test
ss
adc
pop
adc
outsb
or
and
pop
add
loope
add
jbe
nop
xchg
es
lcall
lcall
jne
inc
and
mov
movsb
xor
push
pop
test
int3
and
pop
and
call
xchg
aaa
pushl
fdiv
adc
or
aam
mov
js
divl
dec
jg
add
adc
sti
scas
movsb
pop
pop
xchg
mov
lcall
ret
sbb
dec
mov
loope
sbb
dec
xor
sub
arpl
pushf
pop
lds
jg
dec
sbb
mov
out
jg
xchg
mov
mov
jae
popf
jp
xchg
xor
dec
pushf
sarl
add
mov
fs
out
sbb
imul
movsb
and
int
sub
ficoms
imul
fucomip
push
add
mov
dec
ficoms
add
add
das
cs
mov
mov
bound
sbb
lcall
loop
ljmp
in
lcall
jmp
push
and
cmp
jne
sub
sbb
cltd
mov
mov
xchg
push
pop
push
sub
fcomp
xor
jg
out
mov
imul
popf
call
push
inc
pushf
data16
push
pop
lret
jns
data16
add
clc
jmp
pop
pop
mov
sbb
inc
lods
in
sbb
add
in
push
addb
fstps
popa
jp
lds
xlat
decl
test
xor
bound
jns
mov
inc
sbb
popf
ret
stos
add
fcomip
jns
mov
add
pusha
pusha
dec
mov
jno
pop
xlat
popa
ja
aam
sbb
xchg
fcos
xchg
cwtl
sbb
or
pushl
nop
stos
push
je
scas
lock
dec
mov
test
pop
xchg
in
das
inc
xchg
ja
sar
inc
jbe
out
push
test
adc
add
jecxz
sbb
hlt
dec
dec
inc
mov
call
mov
aam
sarl
sub
cmp
sbb
inc
xor
repnz
adc
loop
imul
daa
push
and
push
jmp
xlat
ljmp
jb
sub
push
add
sti
lcall
call
cmpsb
popa
ljmp
mov
push
test
xchg
cmc
lcall
lcall
or
js
adc
leave
add
orb
push
push
sbb
ss
cmpsb
mov
or
inc
outsl
mov
cmp
or
pop
cltd
sub
fldcw
xorl
incl
cli
adc
sbb
out
mov
and
add
es
push
sbb
sub
ds
adc
jg
lcall
lret
repnz
mov
sub
cmc
test
mov
lcall
incl
cmp
shl
dec
test
xor
js
into
push
pop
jae
cli
jp
mov
push
lret
clc
and
jecxz
cmp
or
arpl
mov
adc
and
jbe
ret
sbb
in
ret
test
xchg
mov
incl
ds
cltd
popf
stc
jae
or
stos
mov
jne
nop
xor
ljmp
fwait
push
out
xchg
test
decb
popa
jns
icebp
mov
mov
jg
jmp
jp
mov
fld
sub
daa
push
jo
jp
push
jp
dec
stos
sub
push
lods
subl
jb
push
aad
pop
sti
bound
or
or
jecxz
call
xor
dec
cwtl
inc
arpl
xchg
dec
push
dec
pop
cltd
adc
and
adc
decl
mov
push
lahf
sub
jns
ljmp
jo
dec
xchg
sub
repz
cmpsb
call
adc
sbb
adc
ljmp
rclb
ret
mov
cs
stos
div
pop
repz
jg
lcall
mov
add
add
mov
xor
or
aam
pop
jo
imul
test
repnz
pop
movsb
sub
sub
fs
sub
inc
mov
pop
ret
mov
dec
xchg
jno
mov
xor
call
shll
into
cmpsb
movsb
dec
fimull
out
sbb
push
xor
pop
mov
movsl
push
stos
and
cltd
ss
lds
mov
inc
and
incl
outsl
lret
mov
dec
xchg
push
mov
clc
lcall
rorl
stos
push
xchg
and
push
fdivs
bnd
mov
adc
dec
in
jbe
test
lcall
sbb
cmp
jmp
dec
incl
adc
sahf
push
dec
lea
incl
mov
shl
jle
pusha
add
sbb
pop
mov
mov
shrb
rcrb
jbe
lret
xchg
push
lcall
sar
dec
xchg
in
jb
xchg
jl
test
pop
sbb
cmc
dec
aam
mov
adc
push
xchg
incl
push
out
xchg
int
xlat
inc
jo
popf
push
mov
xchg
fsubp
dec
ljmp
inc
mov
enter
pop
cli
cltd
pop
xchg
add
jg
xchg
mov
push
sbb
dec
insb
imul
mov
cmp
jbe
jb
sarb
cmp
cwtl
or
js
push
mov
insb
imul
mov
imul
je
jge
mov
dec
lcall
cmp
insl
jp
dec
lock
mov
arpl
mov
pop
loop
popa
mov
add
fists
cmp
jp
xchg
jge
and
es
pop
mov
cs
call
addr16
and
mov
test
mov
pop
sbb
fadd
sbb
xchg
jp
pop
push
dec
xchg
jnp
sub
jnp
scas
mov
pop
jl
xchg
mov
push
xor
mov
in
shrb
jo
ss
popf
lds
add
dec
shlb
mov
mov
mov
call
je
subb
in
xchg
ret
int3
cwtl
pop
test
imul
cmp
inc
sarb
xchg
leave
decl
pushf
push
dec
ljmp
imul
dec
inc
stos
pop
shll
mov
add
jecxz
stc
sub
loopne
movsl
repz
mov
sub
pop
shll
mov
jb
jb
dec
adc
aam
dec
cltd
adc
mov
jo
dec
push
scas
repz
mov
xchg
enter
sub
push
dec
clc
cmp
mov
jae
cmp
inc
daa
xor
lret
pop
fs
stc
sub
mov
incl
push
jmp
pop
fnstsw
jle
ret
fcomps
repnz
xchg
sub
xlat
add
loope
sbb
xor
test
xchg
mov
call
xor
mov
stc
sbb
jnp
or
add
xchg
inc
add
test
aad
ret
sub
jmp
insl
and
jne
mov
push
mov
sub
and
inc
clc
jl
aas
cld
mov
movsl
sub
out
push
and
mov
push
call
push
push
jl
xor
ds
pop
inc
ret
outsb
push
sahf
scas
cmp
cld
shlb
sbb
xor
adc
push
or
mov
arpl
sarl
sbb
sub
ljmp
xchg
lock
xchg
xor
bound
movsb
test
mov
insl
mov
inc
jp
imul
dec
lods
xchg
cmpsb
sbb
icebp
sbb
ljmp
jo
add
ljmp
lahf
in
add
sbb
mov
push
ficoms
add
pushl
dec
adc
mov
in
shrb
icebp
inc
data16
jg
ljmp
js
mov
push
adc
and
mov
icebp
incl
inc
fidivl
shr
mov
scas
pop
mov
jl
loope
cld
jecxz
cmp
dec
jb
fldcw
lahf
or
push
mov
and
pushl
aaa
pop
adc
inc
lock
add
mov
out
mov
add
lods
sub
adc
loope
jl
setbe
out
imul
mov
out
in
fstpl
dec
rol
pop
xchg
jl
nop
andb
lods
hlt
daa
je
movsl
add
out
cli
incl
imul
ljmp
notb
sub
pop
stc
ja
dec
xor
das
mov
hlt
repnz
aad
mov
lock
rorl
sti
fs
dec
add
daa
cmp
ds
aas
jne
loopne
mov
bound
sbb
mov
inc
xchg
nop
rol
push
sbb
lcall
ret
rol
sub
and
jg
int3
mov
les
push
adc
pushf
sbb
aam
mov
incl
call
sbb
cltd
adc
shll
pop
jne
add
dec
mov
jmp
cmp
and
lret
daa
insb
or
ja
push
hlt
mov
insb
dec
push
inc
call
sbb
push
jbe
rcrb
mov
mov
shlb
mov
jns
mov
das
daa
dec
and
fidivrs
stos
call
loope
pop
add
rcrl
mov
arpl
pop
lock
insb
mov
cmpsl
sarl
or
test
inc
cli
incl
inc
jge
idiv
jb
push
fwait
rclb
inc
mov
add
faddp
sbb
mov
stc
repz
mov
stc
test
jg
andl
or
shlb
das
mov
jmp
add
add
xchg
ljmp
inc
mov
push
add
or
or
mov
aas
std
sbb
adc
add
xor
ret
shll
stos
sub
xor
inc
cld
adc
jbe
add
inc
and
and
ret
adc
cmpsb
repnz
popa
cmpsb
adc
xchg
jb
ss
mov
xchg
dec
imul
sti
sub
adc
cmpsb
sbb
xor
ljmp
mov
dec
cmp
stos
das
aad
jae
daa
leave
imul
or
fs
pushl
push
push
mov
mov
fdivs
sub
adc
imul
inc
add
es
sbb
or
xchg
repnz
hlt
ret
inc
pop
repnz
call
jmp
xor
cs
call
mov
cmpsl
pusha
lret
push
mov
scas
orl
aaa
fildll
jne
pop
lods
dec
sub
or
les
out
pushf
pop
jg
shrl
mov
pop
jo
mov
and
cli
xor
xchg
std
add
outsl
shll
call
or
jg
or
ret
cld
xchg
mov
add
sbb
mov
mov
or
xor
lcall
shlb
decl
test
pop
mov
jecxz
xchg
ljmp
stos
xor
fcmovb
in
and
ds
imul
imul
jmp
jno
xor
stos
mov
fisubrl
stos
mov
lods
inc
ss
ljmp
mov
lods
sti
movsb
jo
fbstp
mov
ljmp
push
jg
call
sbb
fwait
aam
sub
aam
mov
sub
and
jmp
je
hlt
adc
sub
cmp
shrl
fstl
xor
repz
lret
pop
stos
cmp
jl
call
pop
test
scas
cmp
cmp
jle
fs
pop
or
add
stos
fs
lods
inc
inc
xlat
pop
dec
push
call
inc
nop
clc
mov
mov
pop
sub
xchg
enter
adc
rcll
outsb
fcomip
call
popl
sub
xchg
mov
and
add
cmp
enter
aam
push
insb
add
dec
divb
push
sbb
add
sbb
lcall
cmc
push
lea
push
mov
mov
dec
daa
push
shlb
dec
lret
cmp
and
xchg
add
ljmp
mov
dec
sahf
push
clc
inc
pop
fiaddl
add
xor
sbb
push
or
add
mov
or
sar
mov
and
jp
inc
xchg
mov
adc
aaa
sbb
stos
xor
leave
pop
cmp
lcall
and
imul
lods
xor
xchg
outsl
ss
cmp
sub
cli
xor
sub
push
aad
leave
cmp
cli
xchg
pop
clc
jg
mov
ljmp
fcoms
xchg
ror
ficoml
adc
dec
cmpsb
outsl
es
decl
mov
mov
cmp
ds
ljmp
stos
adc
daa
jnp
cmp
repnz
mov
add
call
shl
jecxz
dec
sub
mov
fbld
adc
imul
sar
lcall
xor
push
mov
jne
mov
call
sbb
xor
dec
loopne
std
adc
and
add
pop
gs
std
sbb
push
jg
loopne
test
xor
std
call
in
xchg
cli
xchg
sahf
int3
leave
cmp
cmp
leave
dec
push
pop
xchg
loope
movlps
or
push
sub
add
jb
sub
jecxz
shlb
add
add
or
push
mov
pcmpgtd
add
loopne
cmp
jmp
lret
icebp
in
test
push
sub
add
or
rorb
gs
paddsb
cs
aaa
dec
adc
dec
arpl
push
inc
shlb
pusha
inc
or
int
xchg
sub
es
addr16
lret
push
adc
sbb
inc
jns
rcrb
dec
xchg
lock
cmp
out
xchg
popf
pop
sbb
jne
jmp
push
pop
sbb
mov
outsb
cmp
mov
mov
mov
adc
inc
cmc
lcall
xchg
sbb
pushf
push
xchg
pop
fcompl
icebp
cmp
cmp
xchg
sub
shlb
pusha
sar
jg
cwtl
or
mov
lret
shl
sbb
dec
addr16
jg
ja
pop
mov
out
and
xchg
ret
sar
mov
lret
pushf
je
std
in
xchg
adc
mov
aam
xor
xor
cmp
loope
jb
pop
cmc
jg
push
movsb
push
xor
cs
out
mov
pop
cmc
ljmp
xor
sub
lods
loope
pop
cmp
rclb
mov
incl
add
enter
ror
test
push
mov
mov
xchg
jmp
push
or
xchg
lods
inc
xor
inc
aaa
adc
std
decl
mov
ret
dec
inc
jge
test
and
dec
sbb
shlb
mov
ljmp
push
ret
fcmovbe
movsl
in
push
test
push
mov
dec
jae
popf
and
inc
ljmp
mov
aam
scas
mov
or
mov
mov
cmp
subb
xchg
lock
jns
sub
dec
jmp
xchg
add
jle,pn
movsl
inc
pushl
jne
loop
testb
push
add
fs
mulb
lcall
xchg
push
leave
lock
lcall
add
add
outsl
cli
pop
loopne
jl
test
mov
or
jbe
aad
ud0
js
dec
mov
mov
mov
jnp
ret
xchg
ss
mov
adc
adc
call
push
movsl
inc
push
pop
mov
mov
jno
inc
imull
push
call
xchg
cmp
jbe
arpl
pop
ljmp
decl
add
cld
or
fildll
lock
decl
das
xor
iret
scas
mov
iret
lods
lret
mov
cmp
sbb
es
mov
jnp
in
dec
mov
pop
xchg
in
mov
ljmp
fisubrl
add
cmp
jge
lock
lcall
cmp
push
pop
jecxz
sarl
lcall
mov
cmpsb
fcompl
popa
mov
cmp
xchg
and
clc
dec
in
add
int3
cli
mov
lcall
jae
pop
sub
es
pushl
jecxz
les
adc
shr
das
dec
sub
push
sbb
dec
sahf
and
rorb
sbb
fisttps
mov
aad
pop
cwtl
mov
call
loop
mov
popa
or
out
sbb
jne
std
mov
mov
jmp
mov
xchg
ja
lahf
push
sbb
mov
lret
adc
pop
hlt
fwait
fiaddl
pop
sbbb
aas
xorl
jmp
xor
es
repnz
pop
in
push
xor
rorl
cs
cltd
lret
stos
pop
out
leave
and
jl
rcrl
stos
mov
sbb
lcall
mov
xchg
and
fdivr
aaa
sbb
mov
imul
cld
dec
clc
jl
push
mov
lods
and
iret
adc
cmp
cmp
jg
add
imulb
cmp
sbb
xchg
stos
cmp
mov
pushl
out
or
jle
aas
or
aas
jle
orl
cmpsl
mov
or
stc
cwtl
mov
cmp
or
xchg
xchg
pushl
pop
and
inc
cmp
mov
xchg
test
xor
cmp
stos
cmp
jg
shrb
jp
rcrl
pop
push
xor
xchg
sub
cmp
cmp
jle
fistl
jecxz
lea
sbb
sbb
jno
sar
dec
loop
mov
mov
pop
cmpb
movsl
mov
cmp
fwait
push
mov
call
dec
loop
fcomps
mov
or
ret
or
call
inc
movsb
inc
or
pushf
lret
dec
xor
enter
pushl
movsl
stc
mov
mov
call
mov
dec
mov
adc
mov
mov
sub
xor
scas
jnp
es
lcall
add
inc
vcvtps2dq
insb
inc
mov
adcb
incl
add
sahf
into
cli
mov
pop
movsb
inc
loopne
scas
js
popa
add
test
cmp
addb
add
repz
icebp
movsb
dec
jg
lods
clc
outsb
test
popa
add
xorb
filds
inc
push
cmp
jmp
inc
arpl
sub
decl
push
add
dec
les
and
inc
and
loope
cltd
popa
sbb
and
inc
mov
decl
jnp
xchg
test
and
inc
jmp
sbb
inc
sbb
cs
icebp
xor
jg
cmp
mov
les
sti
mov
cmp
or
xchg
addl
or
xchg
dec
sub
push
decl
sub
adc
jno
sub
adc
add
bound
decl
clc
mov
xchg
repz
cld
xchg
jp
lcall
mov
sub
movsb
into
cltd
and
fs
scas
add
js
ljmp
enter
lret
push
cmpsb
mov
dec
pop
sbb
mov
push
pop
push
push
or
test
decl
repnz
xchg
dec
and
add
or
sysret
fcmovnu
cmpsb
clc
cmp
dec
lcall
mov
mov
jmp
or
fcoms
push
out
cli
ljmp
dec
into
in
push
stc
dec
push
fmuls
sti
roll
xchg
mov
cli
mov
int
icebp
xchg
cwtl
jno
daa
push
sbbl
ljmp
add
mov
lock
xchg
jbe
lcall
aas
paddb
dec
testb
xchg
jp
xchg
fwait
mov
test
cmp
sti
cmpsl
cmp
orl
pusha
in
dec
or
call
cmp
cmpsb
mov
sbb
and
aam
dec
dec
push
mov
enter
movl
mov
mov
or
push
adc
shrb
cmp
lock
lret
les
ljmp
sbb
imul
dec
xor
js
cmp
xchg
fisubrs
mov
dec
mov
ljmp
dec
mov
xchg
mov
adc
test
sbb
xchg
lret
and
mov
mov
clc
inc
xchg
mov
sub
add
enter
jb
sub
mov
fnstenv
int
or
lcall
sub
mov
cltd
ss
push
cli
cwtl
mov
adc
bound
and
sar
xchg
add
stos
adc
outsl
xor
mov
movsb
push
cld
sbb
cld
incl
adc
mov
mov
daa
jle
lret
out
xor
jmp
pop
fcmovnbe
sbb
into
daa
mov
out
inc
inc
ret
shrl
inc
mov
and
cmp
push
inc
cmp
jg
or
mov
push
into
add
dec
imul
or
rcll
xchg
cmp
add
pop
sbb
mov
sbb
lods
cli
dec
mov
shll
xchg
adc
les
inc
inc
push
xchg
fldl2t
dec
cmp
ljmp
adc
add
fisubs
cltd
adc
lcall
sbb
jl
push
mov
int
sbb
pop
or
lds
or
ljmp
out
and
js
fmuls
in
adc
sub
enter
xchg
xchg
adc
cwtl
fwait
jg
inc
std
leave
mov
repz
xchg
cmp
decl
mov
jne
and
test
andb
sub
incl
popa
mov
mov
cmp
mov
mov
dec
mov
jae
sbb
sub
push
push
das
lods
and
test
dec
call
sub
movsb
pop
int3
ljmp
into
adc
xor
mov
add
mov
sub
or
ret
clc
ss
dec
lahf
lcall
fwait
stos
stos
pop
dec
stc
xor
mov
add
movsl
fdivl
sbb
pop
call
jb
mov
mov
sub
aad
and
test
xlat
jnp
cmp
cmp
sbb
push
mov
xlat
jl
push
sbb
adc
ss
mov
mov
shlb
add
ficompl
jmp
sub
mov
nop
or
dec
xchg
cmc
xchg
out
pop
xchg
dec
push
push
lcall
mov
ljmp
mov
cld
cli
pop
scas
mov
pusha
daa
dec
add
inc
jnp
js
mov
and
decl
jno
or
adc
jg
enter
pop
repnz
sub
push
dec
sar
dec
cmp
inc
mov
pop
dec
in
push
mov
pushl
xchg
cmp
dec
shlb
test
frndint
pop
je
push
ret
xchg
or
movsb
mov
ret
add
das
add
mov
push
pop
sbb
mov
repz
lea
and
mov
aaa
push
jecxz
decl
test
or
push
add
inc
sub
mov
int3
in
jae
fs
lea
or
arpl
out
jg
insb
outsb
sahf
push
cmpsb
imul
pushf
arpl
pop
cmp
mov
pop
test
xchg
es
lea
mov
or
incl
aas
push
mov
sub
loop
lods
test
push
cmp
ljmp
sub
test
sbb
adc
dec
inc
icebp
fisubrs
cmp
pop
and
stos
and
push
addb
xor
into
rorb
push
cmpsl
sub
aam
mov
lcall
cmp
sbb
aas
dec
ret
adc
cs
or
push
mov
dec
mov
test
dec
setbe
cmp
outsb
inc
clc
inc
pusha
push
in
adc
inc
and
rcrb
sarl
or
push
mov
mov
rcll
pushl
dec
icebp
mov
test
mov
js
fcomi
decl
ret
rcl
jl
je
stos
jo
mov
jecxz
mov
mov
inc
sub
out
add
xlat
out
push
push
xlat
add
js
jecxz
xor
xlat
cmp
push
nop
pop
push
xchg
mov
ficoms
jb
fmuls
mov
cmp
inc
fcomps
cmp
hlt
int3
sub
test
and
fisubrl
mov
in
xchg
pop
in
call
js
ja
adc
sub
popa
fs
pop
cmp
mov
fcomip
nop
push
fdivs
in
clc
cmp
mov
pop
das
test
mov
mov
add
adc
bndstx
push
mov
pop
fwait
cmp
mov
dec
insb
push
out
loopne
sti
fimull
inc
adc
pusha
lods
int
adc
jb
int3
adc
in
into
ds
adc
test
jmp
adc
sbbb
or
mov
inc
add
cs
or
imul
xchg
movsb
mov
std
lcall
cmpb
adc
ljmp
jl
mov
mov
jns
jmp
pusha
sbb
mov
dec
adc
cmc
ds
cmp
es
xchg
outsb
lcall
sbb
xchg
fstpl
lods
jg
and
enter
ss
je
cs
lcall
test
inc
sub
in
adc
push
xor
add
xchg
in
shl
pop
xchg
mov
sar
fbld
pop
and
enter
lcall
nop
test
push
xor
fs
jmp
sar
call
dec
sbb
and
pushf
js
xchg
in
fmuls
pop
pop
rorl
cli
in
icebp
les
push
movsb
or
or
std
jg
xchg
lahf
lret
or
scas
sub
adc
in
push
movsl
cmp
mov
es
fmuls
push
or
or
pop
add
or
test
xor
hlt
xchg
push
hlt
ljmp
std
int3
cmp
movl
into
dec
mov
ljmp
aaa
dec
stos
pop
add
jge
lahf
adc
mov
mov
jbe
mov
jmp
and
outsb
xchg
xchg
lds
jae
jbe
or
mov
mov
cs
lea
std
decl
sahf
lcall
adc
arpl
gs
pop
pop
clc
push
sar
adc
lods
out
sti
ds
jmp
mov
or
ss
cwtl
movb
loope
or
push
pushl
xchg
js
pop
pop
and
mov
add
lret
bound
jmp
push
loopne
pop
inc
xadd
sbb
xchg
jae
in
pop
adc
jmp
pop
jle
mov
pop
dec
xor
add
or
xor
repnz
xchg
js
mov
fisubrl
xchg
movl
sub
jg
dec
mov
ljmp
inc
in
es
ljmp
cmp
call
cmpsb
dec
scas
jo
xchg
leave
xor
or
xor
mov
imulb
lods
jnp
adc
into
test
lds
jg
and
js
hlt
stos
lret
adc
jge
fprem
inc
fists
xlat
enter
sarl
lds
add
incl
je
push
cmp
mov
jnp
jae
push
out
clc
jg
push
dec
imul
jmp
jl
jne
cmp
ja
cwtl
sti
addl
int
stc
call
xchg
xor
push
or
jge
lcall
cltd
outsl
ljmp
pop
pop
pop
std
jl
adc
imul
test
sahf
test
lods
movsb
mov
int3
daa
mov
call
add
push
adc
jmp
cmp
mov
negl
xor
andl
mov
xchg
sbb
push
repz
icebp
int3
sub
cmp
inc
clc
mov
ds
fs
push
jle
push
pop
ret
sbb
fcomip
xor
jle
dec
js
outsl
clc
sbb
or
push
lock
sahf
push
xchg
es
inc
scas
pop
jbe
add
jg
pop
xchg
repz
push
cwtl
xlat
jo
xor
dec
je
adc
ja
hlt
call
and
add
cmp
and
inc
cmp
frstor
jb
dec
fs
or
push
or
mov
xchg
cld
or
fs
xchg
sub
xor
shlb
mov
jmp
push
pop
jae
lret
push
xchg
mov
in
ljmp
movsb
dec
xor
sbb
push
xchg
sub
decl
pop
mov
sarb
jmp
xchg
push
and
mov
mov
andb
loopne
xchg
fcmovnb
outsb
sbb
lock
xlat
ret
jp
adc
cmp
xor
rolb
dec
loopne
sbb
into
and
movsl
cmp
xchg
in
call
add
leave
sbbb
jbe
pop
pop
les
lods
arpl
into
or
mov
decl
ljmp
nop
loopne
fldcw
cli
hlt
int3
nop
movsl
mov
hlt
in
lahf
incl
cld
fwait
push
cmp
xor
xor
aad
dec
insl
lods
jge
add
xchg
incl
sbb
test
int
adc
add
popa
add
cld
cli
icebp
out
add
adc
push
lea
dec
add
sbb
push
xor
pop
adc
ljmp
mov
mov
popa
xchg
mov
addl
pop
or
pushl
jnp
stos
fcomp
or
ja
mov
fnstsw
pop
sbb
test
movsl
xlat
test
inc
enter
add
xor
imul
roll
movsl
not
inc
pop
inc
les
inc
mov
push
ds
jl
dec
sub
fs
nop
incl
sbb
in
pop
or
jno
es
sahf
jno
clc
daa
inc
fisttpl
or
call
lds
sub
sub
adc
inc
mov
xchg
pop
or
adc
push
inc
sub
mov
push
aam
mov
dec
sub
aad
stos
pop
jns
push
jns
incl
daa
push
pop
xchg
out
mov
or
xchg
adc
sub
movb
sub
int
push
in
inc
orb
addr16
jl
out
inc
mov
push
popf
ss
outsl
mov
mov
mov
hlt
mov
fs
push
fldl
bound
mov
addb
sbbb
lcall
pop
aam
stos
lods
call
icebp
add
in
ja
push
fistps
pop
mov
dec
popa
xor
cltd
loop
xchg
fildll
fisubs
and
int3
loop
xor
pop
mov
xor
outsl
sub
cmp
mov
mov
adc
jne
loopne
lea
loop
call
mov
or
fistpl
push
cli
mov
mov
sub
cmp
mov
sbb
out
or
and
xchg
cmc
test
mov
lds
push
dec
jmp
inc
fnstsw
cmc
hlt
pop
mov
mov
in
and
dec
mov
xchg
out
stos
fs
incl
push
pushf
cmpsb
cmp
cmpsl
stos
dec
cmp
lods
mov
cli
js
aad
stos
pop
outsb
or
adc
in
fisubrl
ret
push
mov
push
cbtw
mov
and
pushl
push
mov
ficompl
inc
fnstcw
sbb
cld
notb
pop
jg
mov
outsb
rorl
push
negb
neg
lret
sahf
jl
mov
je
nop
test
jmp
das
and
jb
mov
pop
adc
in
and
outsl
and
pop
lods
incl
pop
fmuls
add
fmull
andb
or
cmp
xchg
test
dec
sub
rorb
das
add
xchg
imul
xchg
xchg
es
xor
ljmp
shll
jo
jecxz
push
jnp
call
ds
rolb
nop
jmp
push
mov
adc
xchg
loopne
xorb
mov
xchg
mov
pop
pop
insb
imul
and
inc
sub
lret
outsb
pop
ljmp
mov
dec
and
push
adc
es
rorl
dec
imul
mov
mov
test
dec
es
push
subb
incl
dec
jg
mov
popl
mov
cmp
push
pop
in
mov
ljmp
rolb
mov
fstpl
jb
push
in
adc
sub
call
xchg
mov
les
xchg
xor
repz
and
jge
decl
mov
orb
dec
lahf
idivb
out
mov
cmpsl
pushf
mov
dec
pop
rclb
add
pushl
sahf
sbb
popa
jbe
call
sub
icebp
lcall
icebp
roll
and
push
xchg
enter
mov
pop
inc
ret
std
lcall
mov
sub
sub
xchg
or
push
test
adc
mov
add
dec
cmp
push
xor
mov
jg
mov
pop
mov
movsl
dec
orb
mov
pusha
mov
or
popa
cld
mov
pop
adc
mov
jle
sbb
movsl
hlt
pop
pop
push
dec
shrb
add
test
pop
dec
cmp
dec
test
xchg
jnp
scas
cmp
incl
pushf
pusha
mov
add
js
dec
xchg
into
push
pushf
xor
jmp
bound
jb
xchg
stos
adc
call
cmp
stos
pop
lcall
xchg
rolb
lcall
xor
shlb
cld
mov
dec
jno
dec
xor
cmpsl
iret
dec
mov
fcomip
fnstsw
int3
inc
test
movsb
mov
and
call
dec
cmp
leave
outsb
shll
dec
imul
decl
fs
xchg
fld
lds
call
ret
mov
hlt
adc
mov
in
bound
jmp
dec
in
cld
addr16
pushl
inc
jnp
lret
cmp
fwait
jns
test
test
jecxz
call
rclb
sub
popf
lret
sarl
bound
ret
nop
adc
and
mov
dec
adc
xchg
mov
jmp
mov
clc
inc
sbb
mov
test
push
cwtl
rclb
scas
mov
js
mov
sub
insb
test
test
push
inc
imul
inc
imul
sbb
sbb
jle
loop
clc
inc
jg
pop
mov
imul
push
lds
movsb
jae
mov
dec
lods
push
xchg
in
clc
mov
out
gs
or
pop
les
or
ret
ljmp
add
pop
fcmovbe
inc
sbb
sbb
push
cs
sbb
rorl
xor
mov
pushl
cmpsl
lcall
idiv
ljmp
aaa
cltd
jmp
test
roll
negb
and
stos
mov
out
mov
or
incl
mov
add
and
add
or
mov
mov
data16
xchg
aaa
add
inc
add
sub
cmp
mov
ret
pop
fisubrl
test
fcoml
call
xor
or
pop
add
cmp
gs
pop
das
pxor
jg
xor
pop
clc
lds
jno
pop
aad
cmp
mov
xchg
dec
enter
xchg
jg
test
xchg
mov
mov
mov
dec
fwait
jb
inc
jp
jp
push
adc
cmc
mov
outsb
fdivp
sahf
xor
int3
mov
lcall
push
fimuls
js
xchg
jns
dec
sbb
int3
bound
xor
jg
sub
pop
ss
or
pop
pop
aad
mov
add
mov
cmp
data16
and
push
ja
repnz
cmp
icebp
lcall
hlt
inc
cltd
cmpb
mov
decb
adc
cmp
rol
sbb
add
scas
cli
sub
jmp
mov
pop
inc
js
adc
movsl
mov
ljmp
adc
sti
call
fidivrl
pop
lret
repnz
icebp
cmpsl
jg
in
adc
shlb
shlb
xor
mov
adc
call
movsb
jns
movsl
and
adc
scas
ds
pushf
mov
jp
xchg
call
das
or
xor
aam
mov
mov
cs
scas
mov
pop
decl
je
lods
cs
xor
sbb
mov
xchg
shll
pop
add
pop
je
cwtl
or
ljmp
push
aad
into
push
pop
aad
push
cmc
xor
movlhps
std
pop
sar
mov
mov
nop
es
jo
jg
sub
push
pushf
je
mov
push
js
sbb
repnz
xchg
in
int
fstps
int
decl
pop
sbb
loopne
test
push
stos
lea
std
xchg
cmp
pop
inc
sbb
mov
push
fsqrt
call
movsl
pop
jge
xchg
fst
pop
cmp
nop
fisttpll
aam
fcmovnu
int
adc
xchg
push
loope
or
cli
lcall
adc
pop
jmp
adc
push
enter
cmp
pop
xchg
fs
jg
adc
add
adc
or
mov
dec
subl
mov
and
movsb
rcrl
cli
push
mov
xor
lds
adc
push
xchg
sub
sbb
and
dec
rclb
and
cld
add
jp
or
test
pop
std
ljmp
push
int3
push
filds
sub
loop
cld
dec
ljmp
cli
xor
arpl
mov
sbb
lea
lret
hlt
push
push
sub
mov
cltd
and
lcall
test
mov
jbe
cmp
adc
rcll
jle
fildl
push
jp
xchg
mov
cmpsl
push
pop
dec
jo
call
adc
xor
aas
jne
pop
test
test
cmp
sbb
add
or
inc
rolb
adc
cmp
cmp
inc
scas
shll
fucom
scas
loopne
cwtl
roll
repnz
sbb
ljmp
shrb
fs
mov
cmp
pop
scas
cmp
jecxz
dec
pop
push
inc
sbb
or
adc
ljmp
fistl
mov
call
dec
test
or
cli
popa
pop
pusha
dec
fiaddl
cld
decl
pop
js
daa
sbb
lea
jnp
fcompl
pushf
leave
andb
jmp
xchg
icebp
or
cltd
mov
sub
lcall
add
test
out
aam
cmc
frstor
and
pop
dec
fisttpl
decl
pushf
fildl
int3
lea
pop
cltd
sbb
adc
test
jg
lock
xor
repz
test
pop
popf
mov
dec
decl
stos
fcomps
or
aas
dec
sbb
xchg
push
adc
or
and
mov
pop
cld
adc
loopne
adc
fistpl
sub
cs
ljmp
xchg
data16
int
adc
popf
jnp
and
push
cmp
and
sbb
dec
push
inc
es
incl
lret
movsb
testb
inc
out
fistl
jmp
inc
and
jbe
dec
push
dec
call
adc
in
int3
and
cmpsl
pop
xchg
cli
incl
pushf
repnz
mov
or
adc
xor
inc
lods
call
popf
daa
sti
xor
hlt
sub
push
movsl
push
adc
mov
inc
add
decl
mov
push
jne
sbb
lret
jg
jecxz
stos
int
add
decl
xor
es
cltd
int
lds
call
mov
mov
cmp
js
sub
mov
lcall
loopne
jp
or
sbb
popf
shrl
rcrl
and
adc
fldenv
push
loope
and
xchg
xchg
cltd
imul
dec
pop
adc
add
orb
outsl
ret
pusha
adc
mov
es
out
inc
aad
push
add
inc
pop
fimuls
push
call
fs
cs
ljmp
pop
leave
test
cld
jae
cmpsl
jb
sub
sbb
pop
bound
shlb
jmp
cmp
pop
hlt
and
bound
xor
pop
sub
jle
shlb
lods
fstl
insl
ljmp
test
push
push
jge
sbb
push
jg
xor
or
int3
pop
mov
cs
clc
aaa
or
movsb
movsl
test
pushl
push
sahf
pop
cltd
test
dec
xchg
outsl
repnz
push
cmc
mov
push
push
cwtl
xchg
call
lret
loopne
rolb
call
sbb
sub
and
dec
add
rolb
lods
lds
nop
movl
mov
jmp
jmp
ss
insl
xchg
movsl
lea
aad
inc
sub
fcoml
jmp
out
cmp
sub
cmp
mov
adc
cmp
inc
movsl
mov
dec
lea
jg
pushl
ret
lds
sub
dec
in
dec
mov
mov
xchg
jmp
lcall
dec
daa
xchg
popf
lret
imul
xchg
jle
pop
and
scas
or
scas
inc
popf
nop
test
push
cmp
outsl
mov
sub
sub
lret
cs
ljmp
ret
pusha
mov
or
dec
lds
push
repnz
dec
adc
and
test
or
aad
jge
nop
movsb
cmp
push
cmp
lahf
or
lods
popf
stos
hlt
lds
mov
lods
jns
adc
add
xchg
xchg
xchg
add
xchg
dec
mov
std
incl
je
jmp
inc
nop
orb
ror
push
fcomip
jg
cwtl
dec
stc
push
push
hlt
test
push
insl
stos
mov
movzbl
sbb
mov
sub
pop
or
or
je
cld
pop
ja
mov
dec
jg
jmp
stc
test
and
inc
pop
push
dec
jle
lret
pop
adc
jb
fistpll
xchg
in
jb
out
loope
push
mov
loopne
fbstp
test
rolb
push
ret
clc
popa
icebp
scas
sub
out
js
repnz
fadd
into
sub
dec
fldlg2
test
and
rol
push
call
rclb
mov
daa
arpl
mov
push
int
stos
popf
pop
or
incl
sbb
nop
loop
inc
stc
dec
adc
sbb
push
or
mov
fisubl
fisttpll
loop
out
add
scas
pop
icebp
decl
lock
xor
movsb
ficoml
lret
test
sbb
clc
push
inc
xchg
lock
clc
int3
roll
ds
mov
cmp
mov
nop
cmp
in
cwtl
movb
rorb
in
mov
or
adc
fcomip
sar
inc
push
add
cmp
nop
stos
out
dec
push
imul
in
fs
or
lcall
popa
pop
push
xor
jno
imul
loop
call
lods
sbb
mov
cmp
test
out
outsb
jecxz
aad
jecxz
outsb
imul
insl
mov
ja
push
push
das
icebp
dec
lods
icebp
jno
inc
insb
sbb
sub
pop
scas
and
ja
lcall
or
mov
loop
inc
mov
stc
mov
sbb
mov
call
into
out
movsb
in
xchg
pop
sti
sahf
or
cmp
decl
pop
add
roll
outsb
add
xchg
sub
inc
faddl
push
aad
aam
in
or
cmp
stos
xchg
shl
mov
pop
jbe
into
xchg
call
and
sbb
pusha
lret
or
rcrb
loopne
call
push
push
adc
pop
mov
sub
jae
fadds
cmc
fbstp
cmp
int
or
adc
push
mov
add
mov
jno
lcall
jno
and
sbb
push
adc
cwtl
push
pusha
cwtl
add
andl
dec
mov
inc
lods
repnz
enter
div
mov
fwait
sub
in
and
js
andb
dec
iret
scas
jns
mulb
jmp
xchg
cmc
mov
sub
lods
rcrb
das
sub
sbb
movsl
mov
adc
mov
les
aas
sub
adc
or
push
inc
add
aam
fimuls
jge
rcrb
int3
insl
ds
test
je
decl
lcall
je
cmp
sbb
das
jne
lods
sub
mov
pop
test
mov
cmpsb
pop
lret
mov
dec
jne
jno
clc
rorl
xchg
daa
xor
add
or
fimuls
stos
outsl
inc
rcrb
jbe
fwait
sar
decl
jl
xchg
jbe
xchg
xor
test
out
or
or
or
fcomip
jg
sbb
push
or
es
sbb
jmp
pop
or
repnz
ljmp
push
mov
push
cmp
sbb
xor
ljmp
sbb
je
into
jmp
xchg
and
loopne
ljmp
insl
pushf
enter
cmp
xchg
scas
or
dec
nop
std
mov
andl
mov
outsl
ja
sbb
inc
ret
sbb
in
inc
ja
jmp
lods
int3
int
xchg
rorl
js
out
aam
popf
mov
cmpsl
subb
fadd
shll
ljmp
stc
fidivrl
xlat
lcall
fidivrs
push
inc
push
mov
push
pop
sar
ljmp
push
inc
mov
mov
xor
enter
push
sub
ds
sbbb
jb
shl
sbb
and
push
pop
push
inc
jno
in
outsb
xchg
mov
pop
insb
jmp
ljmp
jmp
xchg
pop
xor
aaa
xchg
xchg
pop
jmp
cmpsb
push
outsl
mov
mov
shll
ret
jb
inc
pop
hlt
jae
fnstenv
pop
jecxz
popf
jno
mov
aad
pop
mov
scas
andl
xor
daa
daa
stos
mull
icebp
decl
fidivs
fs
fimuls
inc
leave
test
push
loope
in
adc
ja
pop
int
dec
mov
adc
cmc
mov
int3
jecxz
or
lea
out
dec
xor
call
popf
inc
mov
test
cmc
scas
movsb
in
mov
outsl
pusha
es
cmpb
jo
in
pop
call
imul
adc
clc
sbb
push
and
test
and
pusha
fwait
in
test
loop
sbb
arpl
fimuls
incl
cmp
subb
xor
movsb
mov
ljmp
sbb
xor
pushl
or
in
mov
in
jp
lcall
lock
xchg
imul
ret
dec
cld
sbb
lret
sub
lea
inc
dec
out
in
movsb
jb
test
mov
lcall
dec
pop
and
pop
push
scas
fsubrl
jl
insb
mov
push
mov
push
xor
mov
rclb
int
pop
dec
inc
sbb
repnz
or
aas
mov
faddl
lret
jle
loop
cmp
inc
sahf
inc
lret
lds
adc
pop
adc
dec
inc
cld
jg
cld
sub
test
xor
inc
test
ss
and
jg
andb
cmp
mov
pop
test
pop
mov
adc
test
mov
sbb
rclb
fisttpl
xchg
push
dec
sbb
rcrb
fwait
sti
fs
enter
mov
mov
mov
add
cmp
inc
push
mov
imull
loopne
scas
bound
cli
ljmp
clc
adc
sub
pop
je
add
pop
mov
lcall
cli
sub
fs
jno
mov
das
add
into
add
faddl
and
imul
mov
dec
jne
test
int
pop
dec
pop
repnz
outsl
pop
inc
mov
mov
cli
clc
jbe
decl
inc
les
push
xor
mov
adc
outsl
adc
dec
mov
push
out
adc
jg
add
jae
sbb
insl
push
shlb
and
popa
call
add
mov
fildll
cmp
mov
bound
sbb
xor
xor
aam
ljmp
jp
bnd
mov
iret
popf
cmp
add
movsl
dec
cltd
xor
dec
test
xor
dec
dec
push
sbb
aam
cli
xor
sbb
jp
insl
cmp
adc
push
das
scas
rorb
add
jmp
or
push
mov
xor
out
and
pop
ljmp
xor
out
pop
sar
jg
loop
sbbl
inc
mov
js
loopne
add
je
sub
insl
adc
dec
popf
and
hlt
jmp
loop
clc
cmp
jmp
push
in
into
inc
ljmp
jecxz
ss
push
jecxz
fadd
push
mov
fs
add
jbe
xchg
scas
pop
xchg
and
pushl
jmp
mov
iret
outsb
pop
cmp
ljmp
mov
mov
enter
and
mov
ljmp
test
xchg
int
aas
sahf
pop
inc
pop
inc
dec
rolb
cmp
rorl
add
call
sahf
hlt
jecxz
xor
add
mov
lahf
sub
jg
cwtl
adc
push
cmp
add
aas
add
filds
int3
mov
or
mov
lcall
loope
xchg
sbb
pushl
fcom
and
enter
rolb
es
lods
add
sub
subb
pop
dec
mov
mov
push
and
jp
sub
xchg
jb
or
jo
loope
add
test
xchg
or
mov
les
or
ljmp
sub
mov
test
call
sbb
adc
mov
test
cmp
call
xchg
push
imul
mov
movsl
adc
test
mov
cmp
std
imul
insb
jne
mov
pop
sbb
push
pop
mov
cmp
mov
lea
lret
fdivs
xor
or
movsb
fildl
icebp
inc
push
dec
negb
jmp
popf
shll
or
mov
shll
mov
aaa
sub
clc
lcall
fidivrs
and
xchg
test
lea
ret
sti
psraw
jbe
rolb
lock
test
add
ret
arpl
call
sub
aaa
into
mov
orl
sub
icebp
pop
stc
add
xchg
jg
lea
and
imul
andb
mov
cmp
cmp
sbb
xchg
ds
jg
call
call
insb
aam
xchg
pop
iret
mov
ds
cmpb
ud0
call
sub
stos
movsl
push
lds
xchg
insl
push
sub
xor
ret
call
xlat
inc
and
loop
mov
push
sbb
mov
pop
cmp
or
jl
rol
xchg
jecxz
or
adc
lods
mov
outsb
stos
ror
cmp
sbb
mov
outsl
cltd
pop
xor
fidivl
cmpsb
pop
nop
mov
outsb
pop
insb
or
jg
push
enter
sub
fwait
scas
in
repz
sub
sbb
add
mov
add
fbstp
popf
sub
clc
pushl
mov
stc
cmp
addr16
adc
out
inc
mov
mov
sti
subl
arpl
xor
incl
sub
xchg
jns
aas
add
adc
ljmp
adc
loopne
or
rcrl
or
cmp
jno
loope
push
xchg
pushf
jns
push
add
inc
cwtl
inc
and
dec
repnz
mov
xorl
sub
or
rol
orl
push
add
xor
ljmp
aas
sub
jl
mov
and
lret
jae
stos
fsub
mov
mov
pop
mov
sbb
jb
loop
inc
lcall
mov
jl
push
popa
lods
aam
enter
jne
lcall
mov
outsl
into
jmp
cltd
xchg
nop
out
and
or
dec
mov
subl
incl
mov
and
mov
xor
cmpsb
popa
and
sbb
lods
fsubr
jp
and
jmp
and
jp
fistps
mov
sbb
push
cmp
xchg
xchg
rol
and
push
jb
fildll
xor
sub
pusha
std
adc
xchg
adc
dec
pop
dec
fs
mov
jbe
fs
lcall
or
cli
dec
adc
int3
imul
adc
rcrb
adc
inc
inc
pushl
jo
mov
sub
adc
decl
icebp
xlat
xchg
andb
mov
pop
xor
add
adc
inc
std
mov
movsb
lcall
bound
push
add
sbb
data16
loope
mov
testl
fsubs
dec
gs
and
in
lret
adc
jae
mov
add
cld
ljmp
aam
cmovbe
jecxz
inc
aad
decl
jg
cmp
mov
repz
xchg
sbb
inc
scas
pop
call
pop
fadd
rorl
daa
outsl
mov
lcall
in
js
stos
int
sahf
mov
decl
dec
adcb
push
movsb
push
pop
or
or
mov
jp
mov
cld
dec
pop
decl
sub
cmc
sbb
pop
sti
xor
xchg
jmp
dec
test
dec
in
sub
sahf
in
jl
xchg
sub
das
pop
adc
mov
cltd
test
popa
notl
mov
cli
jg
pop
scas
jg,pt
lret
jl
sti
lods
or
test
decl
and
rcrb
inc
es
mov
sub
inc
test
incl
stc
xor
push
adc
inc
lea
mov
movsl
outsb
mov
stos
inc
in
inc
push
ret
js
inc
dec
insl
shrl
adc
and
movsl
sub
xchg
push
jae
out
mov
call
or
shrb
dec
incl
push
inc
mov
dec
insl
fcomps
xchg
loope
loop
fildll
pop
add
cmc
mov
mov
jecxz
jmp
inc
lods
adc
cmc
sub
mov
ljmp
cmp
adc
js
cwtl
int3
add
push
jno
add
lea
jg
inc
cmp
and
dec
lock
mov
and
dec
pusha
imul
and
adc
jnp
int
insl
push
jle
adc
pop
pop
in
sub
add
call
pop
mov
or
outsl
push
adc
xchg
xor
or
outsl
ss
push
cmp
add
mov
call
int3
cltd
push
adc
flds
adc
xchg
add
out
cli
ljmp
fdivs
push
fdivl
push
pop
or
mov
pop
cmp
dec
movb
rcl
cmp
les
lods
cmp
jge
ret
pop
out
lods
dec
pop
sbb
add
mov
repz
dec
shrl
mov
sbbl
mov
push
fiadds
push
push
int
outsb
dec
pop
mov
jmp
push
and
jmp
in
in
cmp
mov
lcall
repz
mov
push
lock
ficompl
xorb
or
cmp
stos
ss
adc
cmc
dec
mov
dec
data16
xor
in
pop
sub
add
aaa
lret
mov
push
ds
subb
xchg
jg
pusha
push
xchg
xor
or
enter
mov
mov
fdivrs
lods
push
adc
stos
mov
jo
lock
pushl
test
lcall
mov
popa
or
call
sub
add
jg
cmc
movl
mov
cmp
in
sbb
jno
push
or
or
add
aam
mov
call
test
inc
insl
lret
pop
cmp
rolb
or
jmp
scas
into
jo
fnstenv
test
inc
and
dec
push
fidivs
dec
insl
mov
fwait
xchg
mov
jmp
push
imul
scas
pusha
xchg
sub
gs
imul
lcall
es
mov
mov
testl
loop
pop
loopne
pop
mov
daa
or
nop
add
movsb
cmp
stc
sub
leave
in
push
lcall
xrelease
out
dec
outsl
outsb
xchg
jns
cmp
mov
fcmovb
mov
xchg
fstl
pop
imul
call
add
fs
add
and
mov
aam
pop
pop
xchg
aad
mov
push
push
mov
mov
enter
add
cli
js
cmp
mov
icebp
lcall
inc
xchg
cwtl
xchg
rolb
sbb
aam
add
mov
jmp
cmp
in
dec
or
call
int3
jmp
arpl
in
roll
in
sub
mov
fisubl
or
lock
jns
jg
or
mov
push
and
ljmp
test
incl
icebp
mov
jge
jl
dec
jg
test
fdivr
decl
push
les
ret
lea
scas
repnz
pop
cmp
movsb
repnz
rcr
cmp
or
inc
outsl
lret
ss
jg
lret
xor
mov
dec
negb
mull
repnz
adc
or
lcall
subb
jo
mov
mov
mov
add
add
ret
ljmp
cld
jmp
call
jno
in
punpckhdq
icebp
jg
in
outsb
push
or
sub
mov
add
pop
add
dec
xor
cmpsl
adc
imul
mov
ljmp
add
insb
ret
add
and
or
andl
cmp
into
je
jg
popa
and
andl
leave
and
scas
jns
enter
mov
call
gs
xor
sbb
dec
lock
sub
push
std
ljmp
mov
jbe
and
addb
push
xor
cs
loop
in
popa
push
or
sub
fmull
sub
jp
jle
dec
inc
js
sub
dec
or
das
adc
addl
and
std
fbld
inc
movntps
sub
mov
aas
js
mov
xor
sub
dec
xchg
adc
mov
testb
ret
jecxz
mov
or
cltd
ret
or
lret
movsl
xchg
mov
cmp
lds
mulb
sub
lock
vmovsldup
adc
jno
call
and
mov
les
clc
rcrl
adc
add
ja
ljmp
mov
pop
out
and
incl
cs
and
pop
inc
pushf
jne,pn
pop
fcoml
sub
repnz
lock
cmp
ficompl
out
stos
in
incl
inc
mov
sub
push
dec
rolb
ret
out
loopne
addr16
pushl
cld
and
dec
mov
rorb
int3
lods
dec
cltd
sub
mov
nop
fcomip
mov
out
pop
push
or
and
or
ss
movsb
or
outsb
lock
js
sub
aaa
rcll
adc
ljmp
push
and
sub
inc
jb
jle
lcall
popa
add
pop
push
jecxz
and
cmp
enter
bound
mov
in
ret
andb
scas
incl
or
js
xchg
rorb
pop
stos
push
and
outsb
arpl
frstor
lock
or
adcb
jmp
dec
dec
jmp
adc
adc
out
xor
cmpsb
fisubrs
aad
mov
cmpsl
ss
jmp
ret
add
stc
dec
ret
pop
pop
xchg
mov
loopne
loope
mov
mov
incl
sub
xchg
addr16
call
mov
jmp
ds
xor
dec
add
sbb
dec
push
or
pop
and
jle
fwait
jp
lock
loope
cmpsb
mov
call
adc
or
inc
ret
mov
dec
sub
mov
push
mov
hlt
push
loop
xchg
dec
dec
push
les
mov
sahf
xchg
inc
inc
bnd
xchg
push
mov
enter
adc
rol
inc
lcall
repz
rcll
shl
inc
mov
ret
mov
stos
mov
test
sar
jmp
ret
rcll
mov
xor
adc
mov
dec
clc
lock
jg
pop
xor
xor
repnz
dec
and
mov
add
inc
stos
or
test
subb
jecxz
test
je
lcall
repz
or
xchg
fisubl
jg
out
ds
and
and
adc
mov
xor
call
dec
movsb
cmpsb
pop
lcall
push
cwtl
dec
outsl
xchg
stos
nop
xorb
fisttps
adc
cmpsl
popa
cli
pushl
das
inc
in
idivl
push
arpl
insb
out
inc
add
push
and
icebp
insb
test
dec
sub
scas
adc
lods
xchg
cmp
popa
xor
daa
lret
repz
mov
scas
fs
cmp
lcall
mov
repnz
int3
xchg
push
xchg
inc
out
int
rclb
test
mov
or
jg
in
pop
jp
sub
out
das
push
outsb
scas
push
repnz
hlt
loop
xchg
repnz
xchg
dec
and
push
jmp
call
mov
ror
ljmp
inc
add
ret
fimuls
and
adc
test
int
pop
xor
test
mov
xchg
mov
pop
std
out
xor
pop
push
lods
cmpsb
pop
icebp
jg
jno
mov
fstl
fcoml
dec
stos
fisubl
decl
loopne
in
push
and
add
lds
cmovns
xchg
xor
ds
sbb
xor
xchg
aaa
mov
icebp
jne
add
mov
lods
jne
xlat
notb
xchg
sub
ficoms
xor
adc
stos
xor
jae
push
inc
call
sub
xor
call
pop
mov
out
cmpsb
mov
bound
decl
push
xorb
testb
adc
int
mov
outsl
decl
ljmp
mov
ljmp
mov
jmp
mov
cmp
push
inc
mov
jmp
push
fcmovnbe
inc
dec
or
add
mov
daa
sbb
in
aaa
int3
jp
ljmp
cmp
dec
rcr
cmp
cmp
or
sub
pushl
xchg
xrelease
cmp
push
xchg
cmp
jb
xlat
adc
and
sbb
decl
sub
stos
jb
and
push
mov
cmpsb
lret
dec
aas
inc
and
jae
lret
xchg
pop
jno
fwait
xor
push
xor
jno
cld
pop
and
lock
jmp
mov
jae
mov
shrb
push
xor
pop
cmp
sbb
stos
mov
decl
and
out
lods
mov
inc
sub
or
lods
int3
arpl
dec
inc
or
sar
push
mov
adc
mov
add
enter
inc
lcall
cli
pop
cmpsb
xor
scas
adc
movsb
cmpsl
jg
and
mov
sub
lcall
mov
xchg
and
das
lret
outsl
inc
xchg
mov
push
mov
jo
imul
adc
data16
cmpsb
fwait
mov
adc
sub
sahf
and
cmp
jbe
xchg
cwtl
lods
xor
int3
xor
push
and
mov
out
aaa
std
and
hlt
pushl
mov
cmp
sarl
xorb
inc
push
inc
test
fildll
push
push
icebp
sub
out
jne
popf
in
test
inc
rcll
pusha
and
call
jg
lea
int3
imul
into
jecxz
idivb
loopne
mov
imul
mov
out
xchg
push
lock
std
ljmp
hlt
inc
push
pop
stc
cmpsl
popl
mov
jae
cwtl
imul
mov
lcall
movsb
add
icebp
std
mov
shll
xchg
ja
lcall
jno
pop
xchg
pop
jnp
cmp
sbb
pop
mov
lret
mov
and
push
dec
sahf
in
stos
jns
xchg
pop
add
sub
in
rdpmc
jbe
pushf
xor
mov
rcll
mov
lcall
and
roll
xor
ficoms
inc
xchg
jne
jbe
call
fucomi
xor
and
xor
mov
and
scas
cmpl
sbb
mov
orb
popa
scas
imul
xor
call
mov
shlb
and
push
test
mov
pushl
scas
das
sub
xchg
push
pushl
std
call
imul
out
mov
push
xchg
fisubrs
adc
icebp
add
aam
inc
inc
jecxz
dec
subl
mov
aam
mov
xor
dec
lods
cld
sar
aaa
sar
fwait
lods
leave
lcall
out
xchg
cmp
hlt
jg
xor
xchg
lcall
mov
mov
imulb
xchg
sbb
loope
subb
jb
cwtl
dec
inc
ljmp
mov
mov
xchg
xchg
adc
mov
aad
hlt
pop
xchg
jns
push
dec
fdivrp
fiaddl
dec
repz
mov
bound
ret
mov
add
js
mov
push
mov
ljmp
jl
jb
adc
bound
adc
sbb
dec
stc
sar
imul
adc
mov
fs
adc
xor
adc
xchg
jmp
xor
shll
mov
iret
cmpsl
pop
in
loopne
push
cmp
sub
jns
dec
dec
cmp
jnp
or
cmpsb
sub
mov
shlb
je
cmp
pop
pop
pop
mov
jmp
add
push
cltd
pop
sbb
xchg
sbb
xor
or
aam
lods
push
push
rol
incl
jmp
fst
les
and
add
jl
mov
push
jge
xor
dec
sub
incl
cmc
pop
pushf
fwait
sub
jae
imul
popa
inc
add
fnstenv
sbb
outsb
sub
mov
dec
std
mov
mov
xchg
repnz
shll
scas
mov
and
pushl
das
incb
sbb
push
push
add
xchg
sub
push
xchg
jg
push
imulb
pusha
test
call
shrb
xchg
and
push
fnsave
sub
xorl
mov
ljmp
xchg
lret
shrl
inc
movsl
cmpsb
jecxz
sahf
dec
aam
xchg
mov
call
lods
inc
mov
fs
inc
stos
add
orb
sbb
pop
push
sbbl
std
dec
mov
add
dec
js
mov
mov
popf
xor
pop
xor
mov
push
lcall
fs
mov
movsb
test
fbld
push
xchg
mov
sbb
cmp
rcrb
test
xor
andb
lea
das
rcl
and
mov
jmp
mov
fisttpl
and
xorb
insl
scas
movzbl
sbb
imul
mov
lret
stos
call
mov
lret
xchg
mov
imul
and
xor
jg
jle
mov
dec
in
dec
test
cltd
push
lods
sti
jle
push
jnp
clc
xor
add
adc
movsl
cli
ljmp
rcl
in
inc
push
and
push
inc
fisttps
inc
xchg
lds
dec
sahf
mov
pop
mov
push
aam
out
fisubrl
shrl
call
mov
js
mov
mov
repnz
mov
subb
aad
insb
pusha
sbb
xchg
repz
aaa
in
jge
repnz
lock
and
dec
pop
call
loopne
cmpsb
fcomp
push
mov
inc
cld
leave
imul
jp
cmp
fsubrp
dec
fwait
lahf
add
lcall
push
push
jl
data16
dec
popa
xor
pop
cmp
and
and
jp
or
movsb
cmp
and
xchg
and
and
les
cwtl
push
mov
roll
call
add
adc
xorl
das
add
xchg
mov
int3
mov
decl
inc
data16
inc
rorl
mov
cld
add
sbb
repnz
xchg
xor
arpl
popf
fsts
cmp
data16
jg
fs
je
leave
xor
inc
pop
mov
fwait
hlt
inc
jg
or
sarl
add
or
mov
jl
mov
sub
xor
shll
mov
scas
mov
xlat
pop
incb
mov
mov
lret
out
jbe
ffree
jns
hlt
cmp
dec
mov
sahf
jecxz
add
xchg
xor
jl
pop
push
cmp
outsb
jmp
jp
and
or
jle
sub
fcomp
mov
ljmp
jl
div
loope
fs
pusha
inc
mov
aad
call
jns
movsl
daa
pop
jbe
mov
and
pop
push
add
pop
inc
call
out
adc
aaa
adc
sbb
loope
or
push
push
jge
dec
pushl
sbb
aad
fldl
fcom
xchg
mov
sahf
jge
sahf
js
mov
and
xchg
lea
ret
jle
cmp
ljmp
hlt
pop
pop
sahf
add
xchg
sub
aad
dec
mov
dec
cltd
adc
aaa
in
cmp
test
or
xchg
call
aam
addl
shl
aam
push
xchg
hlt
xchg
in
fs
jns
outsl
incl
js
xor
push
xchg
lcall
rcll
push
mov
or
aad
inc
adc
fdivs
nop
sub
add
sbb
jbe
mov
mov
je
xchg
pop
cltd
data16
imul
ljmp
xchg
movsb
test
movsl
outsb
mov
shr
call
sbb
mov
jmp
mov
ss
insl
ret
sbb
sbb
push
adc
pop
push
xchg
push
cmp
inc
fldenv
mov
lock
and
jnp
mov
loop
pop
sbb
cmp
das
mov
pushl
outsl
xor
repz
jbe
and
jle
inc
xor
pop
push
dec
das
xchg
sbb
inc
mov
cmp
mov
pop
jl
pop
mov
mov
js
fwait
sar
push
or
sbb
mov
jbe
cmpsl
pushf
push
mov
test
pop
sub
fs
and
xchg
mov
push
scas
cli
inc
mov
shl
mov
movsl
xchg
fwait
jnp
mov
ss
xor
int
ret
fs
insb
xchg
dec
jnp
aad
push
xor
sub
lds
das
shlb
in
jne
sbb
mov
adc
dec
xchg
adc
ret
sbb
or
cmpsl
push
cltd
push
or
scas
insb
cmp
scas
lods
aad
fistpl
mov
mov
add
pop
pop
add
cmp
insb
push
cwtl
dec
push
jmp
dec
or
mov
or
pop
ljmp
mov
mov
push
sbb
out
mov
clc
ja
icebp
xorb
jp
lret
and
mov
mov
pushl
repz
dec
outsl
jnp
jle
xor
int
xchg
decb
lret
std
adc
and
jge
data16
add
dec
nop
xor
dec
rcr
fsubs
lcall
imul
mov
loop
fmul
mov
shll
gs
adc
decl
jmp
add
mov
jp
or
adc
sub
call
lret
mov
sbb
xor
inc
in
sar
filds
mov
or
adc
jp
loope
xlat
xchg
adc
call
ret
cmp
movsb
adc
xchg
push
sbb
sub
mov
sti
sbb
ds
mov
leave
f2xm1
mov
pop
jp
sbb
enter
add
jge
jae
add
sub
in
jmp
add
jl
and
nop
or
pop
mov
sub
in
movsb
repz
ret
cmp
call
std
jno
daa
xchg
sub
add
jge
sub
in
lret
add
int3
movsb
and
test
mov
shll
les
je
mov
sti
dec
decl
mov
and
js
dec
or
push
push
xchg
lods
insl
dec
inc
int3
sbb
mov
cmp
pusha
and
jl
imul
push
add
test
mov
fdivs
push
lret
jg
lcall
xchg
lret
or
sbb
inc
dec
inc
inc
das
sar
push
add
jb
mov
test
push
jl
add
cmc
cmp
subl
ljmp
jb
xchg
test
ljmp
rorb
dec
inc
dec
push
int
out
insl
dec
dec
sbb
adc
lcall
adc
and
xor
adcl
shrb
pop
inc
dec
fs
std
call
sub
mov
insb
xchg
push
mov
xchg
das
lret
lods
inc
aaa
or
sbb
mov
test
lcall
add
push
mov
popf
xor
push
mov
fucomp
rcrb
mov
dec
mov
stc
push
push
aam
ret
jae
jl
push
dec
andb
fsts
stos
and
or
adcb
push
lcall
mov
jne
into
inc
aam
xor
adc
fmul
mov
and
cltd
inc
inc
cltd
and
dec
mov
sub
call
push
ss
xor
mov
std
jg
enter
adc
jbe
cli
xor
sub
ljmp
and
imul
insl
inc
sbb
inc
push
mov
enter
mov
ror
jmp
sub
into
stos
mov
lods
aaa
icebp
mov
sti
cmp
in
inc
or
imul
lcall
aad
dec
push
ds
jp
sbbl
outsl
outsl
andb
adc
icebp
jmp
mov
fldcw
in
and
sti
flds
mov
adc
lcall
xchg
add
bound
mov
push
pop
xchg
sub
sub
cld
xchg
pop
scas
test
xor
jmp
inc
rcr
movsl
data16
mov
iret
data16
push
cmp
insl
fcom
call
jb
pop
dec
repnz
iret
inc
leave
or
or
or
lret
inc
xchg
in
aas
incl
testl
push
fstps
sbb
int
es
xchg
subl
rorl
mov
push
cmp
incl
clc
or
mov
push
inc
cmp
outsl
movsl
incl
adc
dec
psraw
out
jg
pusha
cmp
decl
cs
jno
loopne
sahf
inc
pop
jnp
out
sub
or
arpl
lcall
dec
inc
sub
xor
and
jg
mov
or
mov
aad
push
xchg
sbb
shlb
lods
cmc
inc
mov
in
movsb
shl
sbb
out
mov
pushl
loop
gs
mov
sti
ficompl
daa
daa
fnstenv
adc
add
sbb
mul
daa
lods
call
xchg
lcall
inc
gs
dec
or
test
sar
insl
lock
imul
mov
lret
jo
aam
and
mov
jg
jmp
or
shlb
shrl
aas
mov
lods
mov
mov
adc
stos
or
fcoml
outsl
cmpsl
and
les
push
xor
cmc
fsubrl
insb
mov
lahf
int3
push
dec
sarb
push
lcall
jg
sub
fisubl
xchg
fiadds
lds
stos
push
pop
data16
js
lret
outsb
sahf
mov
scas
das
or
fsts
imul
clc
push
decl
lcall
cmp
icebp
xchg
jns
xor
mov
and
and
cmp
add
cli
enter
dec
stos
push
mov
jns
imul
sbb
aam
sbbb
shlb
into
or
cmp
out
mov
sub
xor
lahf
cmp
add
add
sbb
add
test
subl
cld
lcall
push
out
movsb
inc
int
insb
mov
cld
push
aaa
cmp
or
ljmp
lds
call
inc
stos
fistl
inc
xor
inc
cmp
pop
ljmp
aaa
ss
out
sub
sub
decl
push
shrl
jnp
xchg
pop
ret
roll
mov
pushl
cmp
and
cmc
ret
add
clc
pop
jo
imul
sbb
call
sbb
and
andl
shll
push
add
xor
push
lods
and
clc
cs
call
imul
orl
das
call
jp
mov
fnstenv
xchg
jmp
jg
inc
adc
pop
test
jg
pushf
inc
xor
adc
and
mov
stc
inc
dec
jecxz
ljmp
xchg
add
jne
addl
xchg
add
loope
icebp
jg
lods
add
imul
push
inc
imul
hlt
incl
addb
aaa
sub
icebp
call
test
inc
pop
or
jge
xlat
sub
je
fnsave
daa
pop
xchg
xchg
je
xor
cmp
add
push
movsl
mov
hlt
in
xor
mov
mov
jbe
call
loopne
pop
in
push
inc
shlb
cmp
push
push
xchg
sub
mov
loope
or
divl
mov
push
cmp
and
out
clc
sub
cmc
xor
and
xchg
xor
dec
repz
push
out
push
jmp
cmp
dec
test
fmull
ljmp
sarb
out
pop
pop
daa
aaa
ret
and
adc
movsb
push
jno
call
ljmp
jne
adc
push
pushf
dec
push
and
decl
cltd
sbbl
nop
rolb
pop
xor
inc
sub
jb
cmpb
inc
sbb
adc
pop
vhsubpd
mov
xorb
mov
inc
test
lea
push
push
dec
push
fdiv
sbb
imul
mov
sbb
movsb
sbb
adc
mov
movsl
and
mov
mov
pushl
push
mov
dec
sub
iret
enter
in
outsl
sbb
xlat
pop
and
in
lock
push
cmpb
or
or
js
out
inc
ret
jg
pushl
sub
jns
mov
add
bound
lea
mov
outsl
mov
adc
adcb
pop
xchg
in
inc
xor
xchg
jno
movsl
dec
add
xor
sar
pushl
pop
stc
dec
or
in
adc
es
loope
xchg
and
sub
lcall
cmc
and
addr16
adc
xchg
fs
dec
jg
nop
movsb
sbb
pushl
cld
add
adc
in
add
push
jb
cmp
xorl
sbb
cmp
mov
pop
inc
jg
sub
movsl
addr16
xchg
sbb
cltd
inc
mov
xchg
push
inc
jb
sbb
dec
adc
xchg
sti
imul
jbe
inc
jg
arpl
push
imul
mov
dec
fyl2x
mov
ss
jns
incl
xor
mov
movsl
addl
rcrl
mov
adc
out
jae
cmc
call
incb
adc
mov
bnd
mov
shll
clc
cltd
sub
xor
mov
andb
pop
adc
call
lods
sub
mov
sbb
popf
ss
cmp
dec
loope
cmp
push
push
xor
inc
ret
xchg
adc
js
in
in
xchg
push
repnz
or
sub
add
outsl
cli
fisttps
addl
add
loopne
push
and
pop
dec
ljmp
push
aam
xor
fdivr
lcall
cmp
cmp
cmpsl
adc
sub
test
xor
xlat
add
cmp
stos
push
call
push
mov
lahf
scas
add
xor
mov
or
push
repz
inc
mov
out
push
jg
stc
add
rcrl
inc
xabort
movsb
repnz
lcall
lods
mov
push
dec
inc
cltd
lea
lock
mov
add
das
in
cmp
arpl
cwtl
and
push
jecxz
xchg
cmp
jmp
xchg
mov
pop
jno
inc
inc
nop
pusha
nop
dec
lcall
popa
or
mov
add
mov
push
xchg
push
inc
xor
adc
adc
fdiv
xchg
sbb
xchg
adc
arpl
sub
inc
jge
pop
cmc
mov
jo
popf
inc
aam
xchg
popf
jnp
pop
lcall
pop
std
lcall
inc
pop
add
leave
ds
xchg
outsl
sub
sti
clc
divl
adc
jg
addr16
jg
add
sub
ljmp
adc
jne
loope
lcall
jecxz
into
adc
aaa
mov
pop
inc
loope
jbe
sub
mov
jne
xor
incl
add
pop
call
pusha
add
movsb
loope
aaa
xor
rolb
incl
xor
lret
ret
mov
jb
addr16
js
hlt
mov
xchg
orl
push
inc
mov
jbe
push
inc
sub
rcrl
xchg
add
and
cli
scas
push
and
lods
fldenv
sub
dec
jo
sbb
jle
xchg
jo
jo
in
stos
decl
dec
loop
movsb
shlb
pop
xor
fcomip
push
pop
je
fdivrs
call
jo
movsl
push
stos
push
test
add
decl
movsb
pop
cmp
cld
push
and
rcll
add
push
cld
pushl
repz
pop
jbe
sti
or
jne
fnstcw
mov
or
cmp
push
pop
push
out
mov
or
insb
cli
xchg
decl
ret
jmp
pop
jbe
fisubrl
stos
fcomp
cmpb
jns
push
std
ljmp
dec
lods
std
push
mov
xor
xchg
fsub
ljmp
addl
cwtl
xchg
mov
bound
mov
fcompl
out
jb
adc
fs
test
subb
test
aam
adc
push
mov
fnstcw
jmp
subb
fcomip
dec
jl
mov
dec
push
sbb
out
adc
push
sar
ljmp
and
jge
ljmp
movsl
insl
add
fistpl
dec
inc
lods
or
push
adc
dec
or
adc
repnz
mov
mov
push
cmp
inc
dec
popa
xlat
insb
jg
adc
xchg
test
mov
cld
incl
cwtl
pop
sbb
sbb
pop
pop
push
in
cmp
add
push
lods
cmp
push
scas
hlt
jg
and
sbb
shll
jp
dec
add
sub
fwait
or
mov
incl
mov
mov
or
push
jmp
mov
mov
ljmp
int3
decl
icebp
stos
lods
jo
push
ja
adc
or
popa
push
incl
hlt
xorl
and
xchg
sub
adc
pop
ljmp
add
cld
int3
and
adc
jb
adc
sub
mov
icebp
sbb
adc
mov
cmp
adc
mov
cwtl
mov
aaa
or
and
pushf
sub
adc
outsl
xor
dec
sbb
sbb
scas
and
adc
mov
mov
cmp
test
imul
lods
jb
push
add
scas
mov
inc
lahf
test
xchg
cmp
clc
lcall
fdivrl
mov
push
and
mov
and
xor
cmc
out
xor
jl
cltd
mov
sub
shr
ds
cmp
inc
incl
or
xor
jge
ret
xchg
xchg
sbb
mov
mov
or
jp
and
mov
call
pop
or
cmc
ljmp
repz
fs
stos
cvtps2pd
mov
call
fcomps
sub
mov
aad
data16
or
mov
ljmp
lcall
pop
pop
dec
loop
into
imul
pop
je
insl
sbb
mov
cmp
sbb
ja
mov
push
andb
fadds
mov
fwait
ljmp
jl
out
mov
sbb
mov
adc
sbb
pop
mov
lret
js
sbb
add
pop
mov
lcall
sbb
mov
sti
popa
or
push
pop
sub
scas
jo
repz
std
ljmp
inc
sub
enter
inc
imul
mov
mov
ljmp
jmp
arpl
ret
shrb
pop
sbb
ret
notb
cmp
lods
jbe
xchg
stos
shlb
inc
mov
stos
lret
sbb
sub
in
cs
in
cmp
push
in
cmp
mov
call
adc
mov
movsb
xor
push
push
stos
sub
jecxz
pop
lret
push
cmc
jmp
fsubp
outsb
adc
cwtl
daa
push
mov
cld
loopne
cmp
push
loopne
pop
icebp
pop
hlt
and
push
inc
out
sbb
push
iret
pop
add
ljmp
fnstcw
ss
push
cli
inc
int
xchg
push
or
idivl
mov
movsb
inc
or
shr
in
fisubl
test
push
add
pop
jl
sub
pushf
lret
data16
mov
push
inc
jae
cmpsl
lret
push
test
jns
inc
jns
push
push
cmp
stos
je
mov
call
jmp
mov
fmul
xor
std
decl
fwait
insb
pop
ds
fcomip
loope
xlat
enter
rcll
je
rcrl
mov
push
bound
jecxz
mov
rcl
mov
mov
scas
add
ds
cmpsb
push
cmp
loop
push
add
pusha
push
mov
in
adc
jg
adc
sbb
or
fsubr
push
add
mov
add
pop
ror
cmp
ret
or
push
sbb
mov
adc
xchg
test
or
mov
xor
js
fldenv
sbb
lock
gs
hlt
pop
xchg
aaa
jl
call
adc
shlb
addb
cmp
push
mov
cs
movsl
addr16
je
std
sbbb
sarl
lds
cmpsl
mov
test
adc
fdivr
xchg
mov
pop
mov
lcall
daa
sbb
cmp
ss
sti
xor
push
and
insb
mov
pop
lcall
dec
xor
aad
incl
loop
das
jmp
xchg
cs
and
mov
and
push
rcrl
or
xchg
sbb
adc
xlat
cmp
into
fisubrs
in
xchg
sub
mov
cmp
xor
fs
out
cli
fistps
mov
add
jecxz
jo
jl
out
fnstcw
sub
sub
mov
pushl
cmpsl
popf
sub
inc
xor
sbb
sbb
scas
cmpsb
pop
dec
cli
mov
mov
jecxz
add
inc
scas
push
outsb
js
jecxz
incl
sub
sbb
cltd
sub
mov
and
sub
pop
cmc
mov
lods
dec
cmp
fldpi
cli
sbb
and
push
add
call
jmp
and
mov
popf
inc
jge
inc
mov
lahf
jne
sub
out
imul
call
cmc
jmp
jnp
mov
dec
aam
sbb
inc
dec
popa
inc
cld
pop
and
dec
aas
xchg
mov
lret
adc
repz
sar
jmp
jp
dec
dec
add
popa
outsl
stc
imul
and
xor
dec
mov
jae
cmp
mov
pusha
sbb
scas
or
fsub
xchg
ret
pop
jmp
mov
in
add
cld
push
xchg
inc
cmp
sbb
push
mov
loope
stos
and
sahf
xor
pop
mov
push
lea
lcall
pop
adc
ret
cs
in
mov
xchg
dec
xchg
add
mov
xorl
pop
push
inc
test
loopne
orl
push
dec
push
xchg
sbb
and
mov
cmpl
enter
cmpsl
lea
ljmp
mov
out
dec
mov
mov
test
jne
cs
cwtl
aad
push
xchg
popa
add
mov
mov
xchg
incl
pop
mov
stos
pop
pop
js
sbb
ljmp
outsb
sbb
shrl
ljmp
mov
xor
lret
popf
xchg
sbb
mov
int
sbb
mov
arpl
mov
xchg
rcl
mov
cmp
in
or
decl
arpl
in
pop
mov
shll
or
scas
mov
ljmp
dec
outsl
and
add
imul
mov
mov
mov
mov
mov
add
lods
loopne
je
adc
inc
clc
inc
xchg
out
mov
clc
push
ret
adc
arpl
mov
bnd
push
ret
in
mov
cld
or
lcall
enter
sbb
and
adc
dec
and
movsl
ljmp
repnz
test
push
lods
and
andb
jo
test
mov
ljmp
jmp
cmp
xchg
insl
xor
or
push
xor
sub
dec
jmp
nop
nop
imul
xchg
sub
call
pushl
xor
int
test
cmovbe
inc
loop
add
sub
ljmp
hlt
int
fldcw
push
addr16
sbb
add
pop
xchg
adc
lcall
mov
call
lcall
leave
lret
rol
notb
lods
sub
ffree
pop
push
xor
pop
mov
out
rorb
inc
or
xor
push
outsl
jbe
xor
rcr
lret
mov
mov
or
mov
pop
jmp
in
push
icebp
mov
pop
xchg
insl
test
cmp
push
mov
push
inc
or
lock
cmp
ror
dec
data16
incl
mov
lret
fs
fwait
push
dec
cmpsl
cmp
std
fisubrs
hlt
es
adc
xor
ljmp
sub
dec
xor
int
mov
in
imul
shll
xor
ret
mov
cmp
out
shlb
pushf
jp
inc
mov
mov
sub
mov
jns
fisubl
roll
or
cmc
loope
sarl
lcall
arpl
jns
pop
pop
rep
mov
or
outsb
push
loop
loop
jg
push
mov
pusha
add
inc
in
push
xchg
das
fldt
cli
mov
push
push
push
mov
jbe
call
sbb
mov
jno
xchg
sarl
adc
cmc
shll
iret
jecxz
adc
jnp
mov
shlb
repz
fcomp
pop
daa
sahf
and
cmp
js
out
sub
adc
inc
xor
inc
decl
sbb
mov
jecxz
add
cli
ljmp
lds
les
mov
jg
jg
inc
jl
leave
xchg
cli
jle
sub
lea
pushl
xor
sub
and
dec
rclb
adc
xchg
vpsrlq
adc
lock
xchg
mov
in
dec
pop
or
xchg
adc
xchg
jg
addb
repz
fisttpll
cmp
mov
sub
adc
adc
push
decl
dec
push
mov
in
test
xchg
or
pop
fcos
lcall
incl
push
scas
test
stos
in
daa
jbe
sbb
add
cmpsb
ss
test
rclb
mov
mov
jmp
push
mov
mov
push
mov
mov
ljmp
ljmp
lods
loop
iret
nop
popf
or
mov
dec
jp
dec
fucomp
rol
and
lods
sub
aam
ljmp
nop
repz
ja
fs
int
test
or
call
pop
test
and
inc
test
or
nop
fs
or
mov
lock
ljmp
and
pop
xor
add
jne
popa
mov
movsl
and
xchg
insb
cld
lahf
stos
push
and
cbtw
int3
and
jne
add
mov
lcall
adc
or
sbbl
jb
sbb
mov
es
add
fs
mov
cmpl
stos
and
xor
loope
jo
mov
int3
int
xchg
sahf
outsl
orb
lcall
ficoml
iret
fsubrl
cld
mov
push
add
xchg
push
pop
arpl
vpunpckhdq
and
outsl
xchg
test
mov
movsb
movsl
repnz
lock
cld
mov
pop
repnz
mov
pop
adc
mov
or
jmp
mov
or
pop
sbb
mov
dec
sbb
mov
dec
jl
mov
nop
and
sub
pop
mov
cmp
in
nop
idivl
leave
insl
pop
xlat
sub
clc
lock
pop
jne
cld
shlb
xor
xlat
push
sbb
lcall
xchg
aad
cltd
mov
mov
es
ret
decl
mov
or
sbb
lret
mov
mov
cmpl
adc
mov
jle
dec
add
jo
xchg
mov
lds
sarb
movsb
rclb
push
ss
subb
test
shrb
mov
es
xor
add
dec
shl
cmp
inc
fs
pushl
es
or
and
sbb
cmpb
cmpsb
cwtl
sarb
ss
aaa
cmp
xchg
popa
jecxz
call
mov
test
adc
mov
sbb
mov
repnz
inc
or
cmp
pop
jmp
imul
fists
int
movsb
loope
jne
dec
mov
mov
movsb
clc
push
lcall
and
mov
dec
lret
test
mov
repnz
shlb
mov
rcll
lds
mov
lds
mov
jmp
add
nop
inc
pusha
incl
enter
notb
push
xor
pushl
jle
inc
push
ja
mov
pushf
mov
dec
test
je
adc
inc
cmp
filds
mov
in
dec
jo
pusha
add
jmp
dec
mov
lds
adc
fwait
adc
lock
daa
stc
test
imul
repz
pushf
mov
les
and
pushf
sbb
mov
sub
repnz
call
xchg
int3
add
aas
push
mov
daa
cltd
arpl
ljmp
cmp
fmull
jbe
lret
adc
push
jecxz
adc
loope
jp
sub
pop
test
jae
xor
sbb
cmpsb
pop
test
adc
outsb
stos
call
sub
pop
mov
sbb
or
push
and
or
icebp
clc
xor
xchg
xchg
push
fisttpll
pop
hlt
lcall
or
inc
push
inc
cli
cmpsb
sub
aam
mov
ds
repz
xlat
adc
clc
and
test
cmp
push
rorl
add
xchg
rol
sar
or
and
mov
jae
push
rclb
mov
imul
sbb
cli
imul
inc
or
rolb
adc
push
out
int3
mov
xchg
adc
aas
jb
jmp
adc
add
hlt
in
test
jne
incl
or
or
jmp
jg
movsb
jns
test
mov
shll
mov
jg
shll
mov
mov
lcall
sahf
jnp
or
call
jns
jne
insb
mov
fsubrl
ficomps
mov
pop
aas
sub
cmp
lcall
and
xchg
lcall
xchg
pop
stos
insb
or
adc
sbb
scas
ljmp
mov
add
sbb
xchg
popf
stos
mov
imul
decl
sbb
outsl
add
mov
sub
call
orl
jg
push
jno
loopne
jg
xchg
sbbl
repnz
sub
dec
sbb
ud0
lahf
out
mov
decl
and
dec
subl
cmp
enter
mov
js
fdivl
loop
xchg
mov
dec
or
jmp
outsb
dec
mov
push
pushf
inc
fstps
xchg
scas
dec
inc
mov
rcll
mov
pop
lock
pushf
pop
push
mov
push
push
push
sbb
mov
popa
sub
xor
or
cmp
adc
out
sbb
inc
adc
mov
out
scas
leave
enter
mov
add
mov
and
pop
fiaddl
jmp
out
push
jns
movsl
dec
xor
sub
cmp
cltd
nop
popf
cmp
mov
call
icebp
xchg
xchg
repnz
rcll
sbb
cmpb
ret
and
mov
xorb
ljmp
fwait
xchg
stc
adc
mov
mov
out
dec
pop
dec
orl
mov
mov
in
call
mov
fsubs
popf
mov
jle
ds
dec
xchg
rorb
jecxz
xor
ret
or
call
xor
sbb
mov
sbb
adcb
or
cmp
or
stos
sub
inc
scas
imul
imul
test
data16
cld
push
or
test
js
sub
mov
jno
ret
sub
ljmp
decb
xor
ljmp
imul
or
xchg
in
mov
push
cld
rcr
sub
xorb
xor
jno
fs
loop
jg
cmp
lcall
mov
mov
lret
jo
test
test
or
xchg
mov
sbb
cltd
jle
filds
mov
pop
inc
lods
cmp
loope
cmpsb
cmp
xchg
mov
xor
std
call
test
enter
adc
cmpl
int
xor
lcall
rcll
jmp
and
nop
xchg
sub
loope
cmp
mov
mov
call
mov
orl
xor
lock
sub
push
cmp
mov
cmp
push
aaa
adc
pop
sbb
or
jg
decl
call
mov
pop
pop
xorb
movsb
nop
cli
mov
xchg
adc
lahf
test
pop
xor
push
jmp
lcall
push
or
mov
jns
mov
aaa
inc
inc
add
xchg
ljmp
mov
es
pop
jl
stos
xor
stos
and
lcall
push
cmp
rcrb
mov
orl
nop
mov
decb
out
ds
cld
jmp
xchg
adc
inc
icebp
xchg
add
or
orb
sbb
fadd
call
clc
or
xor
sbb
or
ja
hlt
cmp
cmp
aaa
inc
cli
decl
sbb
aam
pushl
mov
inc
sub
inc
push
sbb
div
movsb
call
loopne
int3
adc
mov
xor
je
xchg
fimull
bound
in
mov
xor
out
mov
mov
push
adc
dec
push
std
jmp
sub
push
xchg
mov
xchg
adc
repnz
fwait
jl
dec
add
or
mov
movsl
and
inc
test
and
dec
pop
repnz
incl
ljmp
xchg
mov
and
inc
pop
xorl
jmp
mov
hlt
popa
bswap
mov
jmp
iret
cli
add
xor
ds
pop
xor
fildll
pusha
subl
clc
out
js
mov
lods
lret
adc
enter
decl
rorb
ljmp
leave
cmp
aas
push
pop
aam
test
sub
clc
cmp
out
or
std
pop
loopne
mov
dec
cmc
arpl
sub
fdivrs
fcomps
stos
cltd
push
xor
adc
or
push
inc
adc
dec
cmpsl
and
mov
cli
ljmp
push
popa
or
shrl
decl
lock
push
mov
bound
pushf
cmpsb
xor
test
add
lcall
mov
sbb
sub
xchg
adc
fiaddl
pop
push
cmp
mov
call
mov
xlat
xchg
push
mull
adc
in
stos
add
mov
clc
cmp
fstl
jmp
daa
fs
mov
sub
xor
std
sbb
mov
cmp
popf
inc
sbb
push
sbb
pushl
inc
mov
xor
aaa
push
out
add
inc
lcall
jne
add
push
stos
ret
mov
popf
mov
mov
sub
add
call
or
sub
movsb
mov
add
xchg
lods
xor
call
std
pushl
cmpsl
movsb
fmuls
stos
sbb
lret
stos
mov
sub
cmp
jg
cmc
and
lret
stos
mov
popf
jo
nop
dec
sub
roll
mov
xchg
pop
mov
xchg
cli
aad
in
loopne
das
push
mov
ljmp
scas
pusha
sbb
pop
dec
sbb
sub
or
lret
mov
jnp
ret
ret
and
cmp
imul
cmc
das
push
stc
stos
sbbb
mov
pop
sbb
pop
xchg
adc
dec
or
roll
lock
mov
inc
lret
repz
cli
ljmp
mov
jl
push
sarb
mov
add
cwtl
cmp
push
cli
pop
dec
mov
add
sti
rcrl
pop
cmp
movb
pop
add
jne
pop
fmuls
sbb
push
mov
call
fcompl
out
fs
clc
rolb
ss
xor
inc
jns
sub
cmp
lcall
sbb
push
xchg
cmp
fdivl
jp
movsb
stc
pop
outsl
push
cmp
mov
sarl
nop
hlt
decl
inc
mov
subb
mov
lahf
mov
shrb
pop
aad
inc
ljmp
daa
sarb
sbb
jg
clc
fcomip
sub
mov
hlt
mov
incl
movb
adc
ret
rcl
fdivs
pop
fs
rol
push
shl
sub
mov
movsb
movsb
sbb
dec
shll
mov
or
ljmp
fistl
test
cwtl
inc
push
stos
mov
jbe
mov
sub
test
incl
mov
les
pop
icebp
lret
mov
sub
jl
jo
pushf
loopne
pop
sub
icebp
loop
aaa
mov
rolb
push
and
scas
mov
jo
in
aad
ja
ljmp
lds
lahf
lcall
sub
lods
or
cmp
mov
cmp
lcall
sbb
inc
or
mov
stc
xchg
adc
inc
in
mov
mov
mov
inc
sub
mov
mov
ret
add
pop
push
loopne
pop
sbb
and
mov
push
pop
xor
xchg
xor
insl
mov
mov
sbb
incl
int
cltd
scas
and
adc
sbb
sub
aaa
xchg
cmp
std
movsb
int3
enter
mov
cmp
inc
insb
sbb
mov
jge
sbb
fs
jp
jg
xchg
xor
and
jg
adc
aaa
add
mov
jl
scas
repnz
jecxz
dec
adc
xchg
sbb
movsb
inc
or
fs
nop
shr
cmp
punpcklwd
or
ljmp
js
sbbl
sub
or
repnz
jnp
loopne
dec
xchg
push
xor
es
xchg
lods
pushl
fiadds
cmp
lock
ljmp
rclb
mov
cli
inc
pop
mov
push
lret
dec
loopne
mov
incl
cltd
test
sbb
ficompl
adc
enter
test
xchg
callw
dec
xor
mov
dec
lods
pop
loope
mov
call
sbb
push
repz
stc
enter
loop
mov
lock
call
xor
mov
cmp
arpl
and
add
pop
xor
call
pop
mov
jne
jecxz
sub
ljmp
push
lcall
sbb
pop
test
stc
shlb
push
cli
xor
xorb
or
std
incl
and
jmp
mov
cmp
fiadds
stos
stos
cmp
cmp
mov
mov
and
push
imul
cmpsb
and
incl
gs
nop
cmpsl
adc
mov
iret
mov
or
imul
mov
xor
cltd
jns
mov
sub
fdivrs
loop
inc
or
sbb
mov
xchg
aam
scas
pop
in
xchg
mov
bnd
cli
pop
xorb
or
pop
iret
lret
adc
and
and
push
rcll
jae
push
test
fcomip
and
jnp
push
dec
sbb
int3
push
lods
push
cli
push
ljmp
addb
inc
mov
aad
or
mov
and
decl
pushf
jb
popw
push
ss
and
and
sbb
sbbl
cld
pushl
pop
jb
lret
mov
mov
inc
xchg
mov
pop
lcall
adc
mov
jns
cmp
jmp
pop
sub
ljmp
mov
mov
sahf
push
pop
sub
jmp
jno
jmp
jecxz
fmull
pushl
jo
adc
push
dec
out
out
mov
adc
fwait
and
sahf
pushw
pusha
inc
mov
dec
jmp
add
pushl
je
pop
cld
dec
test
loope
and
mov
xor
dec
dec
stos
ret
ret
mov
lock
arpl
call
iret
cmp
les
arpl
adc
and
xlat
loopne
dec
jae
mov
adc
aaa
loop
cmpsl
jno
mov
pop
daa
dec
pop
or
pusha
jg
push
out
iret
sbb
bound
push
xchg
sbbl
sbb
stc
sub
jge
cmp
stos
notl
loopne
pushl
sbb
sub
repz
pop
pop
lds
scas
mov
das
jns
cld
incl
push
lods
or
xchg
repz
lds
xchg
pop
stc
xchg
adc
cmp
aaa
loop
xchg
inc
jl
les
push
and
sub
subb
mov
cs
insb
mov
dec
dec
mov
xchg
inc
xor
ss
mov
out
mov
mov
xchg
or
push
aaa
xor
or
push
xlat
aad
shr
js
lret
sbb
lcall
pop
pop
les
sarl
pop
rolb
std
mov
push
push
insl
cmp
jb
sub
mov
call
and
rcl
imul
je
pop
clc
arpl
sbb
bound
push
mov
pop
fidivs
lret
xchg
adc
test
shrl
cs
dec
pop
mov
test
js
decl
ljmp
adc
cld
mov
pop
or
sub
xchg
or
cltd
dec
pop
xor
sbb
or
ret
into
dec
dec
ja
call
fisttpl
popf
and
cs
lcall
fistl
addb
pop
in
mov
aam
mov
jmp
sbb
sbb
enter
jo
inc
xchg
cmpsb
push
insb
dec
mov
mov
cmp
ja
shlb
lret
cli
lahf
or
mov
std
xchg
pop
pushl
andl
jb
inc
mov
ret
push
sbb
loop
cmp
pop
jg
test
lea
sub
fimull
and
call
jp
pop
hlt
fsub
aad
xor
dec
fs
addr16
pop
js
lods
cmp
push
and
inc
dec
je
icebp
movsl
lret
pop
cmp
dec
mov
sub
lea
sar
repnz
aad
xlat
lahf
dec
jnp
stos
inc
mov
andb
scas
outsb
scas
pushf
sbb
xchg
es
incl
lcall
add
pop
clc
ljmp
xor
lret
in
jno
jns
xchg
cld
pushl
in
sbb
mov
mov
inc
inc
cmp
jl
popf
js
xchg
mov
mov
cmp
inc
sbb
fnstsw
outsb
iret
mov
cld
jp
mov
inc
cmpsb
mov
loop
andl
sbb
adc
addr16
sub
inc
and
mov
add
hlt
mov
cmp
pop
mov
dec
outsb
fistpll
std
inc
pop
pop
pushl
adc
pop
push
mov
push
push
push
inc
cmpsb
lock
ljmp
mov
js
add
xchg
fstpl
adc
or
and
mov
add
lcall
and
in
xchg
popa
inc
lods
fs
inc
push
pop
mov
call
dec
cmp
es
rcrb
sbb
cmpl
cwtl
dec
scas
call
sbb
outsb
pop
imul
push
pop
jo
cmp
dec
and
sub
mov
les
aas
or
push
and
fbld
call
mov
sbb
mov
movsl
adc
pop
adc
xchg
pushl
std
scas
pop
mov
mov
xchg
inc
xchg
sbb
fcomip
inc
and
inc
sahf
ljmp
push
add
mov
jno
lcall
inc
imul
push
pop
rolb
add
aas
mov
cld
mov
ss
push
mov
pop
sbb
fiaddl
insl
je
or
add
rol
jmp
ja
clc
fbstp
nop
dec
mov
push
dec
cmp
jg
jp
xor
or
shrl
jge
aad
pop
push
scas
add
and
ljmp
xchg
rorl
cmpl
mov
xchg
pop
xchg
fcom
mov
das
or
add
mov
adc
into
test
incl
cltd
gs
and
xchg
es
inc
ljmp
xor
pop
and
nop
inc
loope
ljmp
rclb
pop
inc
jae
jae
push
call
loopne
cmp
cld
mov
push
lret
pushf
push
dec
sub
loopne
jg
cmp
jne
cmp
pusha
xchg
fistpl
inc
push
pop
fwait
ds
test
dec
jbe
pop
adc
push
sub
stos
xor
adc
mov
push
sub
nop
inc
cmp
scas
cmp
push
sbb
or
mov
fisttpl
xchg
lods
jno
and
xchg
rcll
inc
aaa
jno
xlat
insl
or
outsb
mov
jns
inc
jbe
fs
lock
insl
jecxz
lea
jge
fidivrl
inc
ss
cwtl
rclb
incl
ss
fstp
imul
sbb
les
pop
int3
pushl
test
adc
sbb
mov
push
clc
pop
xchg
rorb
sahf
les
imul
mov
adc
jmp
sub
jae
xchg
fcomps
push
sbb
mov
scas
xchg
incl
pop
movsl
cli
sahf
js
mov
dec
subb
mov
mov
sub
dec
rcll
pushl
imul
push
lods
mov
out
daa
fisttpll
jnp
push
sbb
aad
dec
adc
mov
lcall
outsb
decl
dec
or
sub
xor
xlat
decl
fisttpll
out
mov
inc
cld
sub
fcoms
mov
call
mov
inc
sbbb
mov
aam
cmp
ret
loope
lods
sbb
xchg
xor
inc
movntps
push
leave
incl
add
dec
jb
xor
call
lret
cli
in
mov
decl
shlb
imul
sub
lods
or
aam
mov
out
mov
jb
mov
jb
rorl
cmpsb
xchg
xor
decl
stc
pusha
pusha
push
sbb
and
xor
divb
sbb
lcall
add
xchg
add
dec
xchg
dec
pop
filds
xor
dec
sbb
pushl
insl
adc
fxch
mov
adc
mov
ret
ret
stos
jl
and
sub
cmp
jns
ret
nop
fs
aam
popa
sbb
mov
inc
gs
and
push
sub
je
mov
call
mov
rorb
adc
pop
inc
pusha
inc
enter
aam
ljmp
decl
inc
test
mov
test
call
mov
decl
mov
mov
add
dec
push
ja
bnd
leave
movsb
and
xor
and
push
xor
add
int
ja
pop
sbb
movsb
das
xchg
mov
push
xor
adc
lahf
stc
xor
and
es
add
call
jne
push
or
int3
bound
pushf
mov
jl
jno
mov
repz
imul
ljmp
cwtl
sbb
and
out
and
add
aam
aaa
mov
add
adcb
hlt
incl
stos
jbe
or
inc
mov
sbb
nop
outsb
inc
dec
cli
incl
fwait
mov
addr16
mov
push
sar
mov
fcoml
in
inc
sub
sub
addr16
out
lods
adc
movsl
inc
test
mov
mov
mov
int
cmp
sub
pop
add
call
cmp
arpl
inc
ficompl
fxch
into
sbb
mov
push
out
jb
ja
cmc
stos
decl
cltd
imul
xor
or
adc
addr16
mov
add
inc
mov
stos
mov
ds
imul
inc
sbb
and
shrl
xchg
mov
mov
mov
sar
push
xchg
cmpsl
popa
push
push
sub
les
movsb
call
stos
pop
mov
xchg
sub
sarl
lods
dec
in
out
inc
loop
lock
lcall
pop
pusha
xchg
mov
mov
lods
in
ljmp
test
cs
xor
cmp
xchg
pushl
je
es
cmp
insl
cs
pop
fsts
pop
daa
or
arpl
push
je
add
mov
incl
ja
push
sarl
les
enter
lcall
jne
add
fdivrl
imul
call
out
or
push
inc
xchg
and
js
push
les
mov
push
imul
xor
sbb
cmp
sub
movsb
xchg
pop
loope
and
adc
push
or
aas
jl
mov
jmp
jg
and
pop
xchg
mov
xor
out
clc
pushl
mov
out
and
pushf
dec
icebp
adc
movsb
sub
fwait
push
int3
out
sub
lcall
inc
stos
mov
pop
pop
or
ljmp
mov
cmp
xor
lcall
decl
or
ss
or
pop
pop
push
aaa
subl
sbb
adc
jge
sub
push
ljmp
or
mov
fisttpll
mov
xor
in
sub
xor
adc
pushl
mov
xor
adcb
and
mov
jge
out
scas
xchg
xchg
clc
decl
cmp
scas
jb
loopne
loop
pop
xchg
push
cmc
and
inc
stos
add
fists
xor
addb
jg
or
dec
cs
jg
sub
dec
xchg
out
mov
je
adc
mov
push
inc
mov
je
test
mov
ret
mov
stos
into
xchg
or
mov
decl
cmc
mov
test
cld
mov
jmp
sbb
incl
js
iret
lods
push
or
pop
ljmp
loope
ret
sub
pushl
xchg
mov
adc
aad
rorb
cmp
add
fnstcw
xchg
iret
jge
jno
and
cltd
insb
loope
inc
insb
add
in
xor
adc
clc
roll
mov
ljmp
cmp
fstl
in
jne
in
dec
add
jg
add
xor
add
or
xchg
dec
mov
push
lods
sbb
rclb
stos
mov
push
mov
fsubrs
incl
lds
popa
inc
rclb
push
add
test
fstps
cmp
mov
mov
call
sbb
enter
ja
decl
sbb
push
or
loopne
xchg
jmp
pop
dec
adc
movsb
rcr
sub
and
pop
rorb
in
fwait
cwtl
aad
clc
cmp
mov
leave
inc
mov
into
sbb
mov
pop
int
leave
clc
call
mov
pop
inc
fldenv
out
push
clc
movsb
cltd
icebp
loope
icebp
imul
out
dec
rorl
adc
sbb
nop
hlt
push
fcomip
inc
pop
je
dec
jmp
push
pop
and
dec
mov
hlt
or
lret
addr16
and
jns
jg
sbb
push
jge
lret
in
test
pop
pop
mov
ret
test
jnp
aad
fadds
adc
dec
or
add
add
into
jecxz
dec
decl
and
test
inc
mov
xchg
icebp
dec
cmp
enter
incl
fwait
pop
in
sbb
jo
or
dec
mov
jmp
add
xchg
add
cmp
xchg
push
out
test
stc
xchg
adc
cltd
loop
test
jg
adc
or
xchg
xor
xchg
mov
dec
mov
fsubrp
fidivrs
mov
jns
sbb
movsb
jmp
lret
les
cltd
push
dec
add
mov
lret
xchg
cmp
inc
sub
lcall
inc
pop
in
adc
jg
nop
lock
loope
xlat
in
ror
loopne
push
incb
ljmp
hlt
or
enter
xchg
dec
adc
outsl
jl
jns
dec
je
xchg
mov
decl
jne
adc
adc
mov
sub
test
jo
icebp
sbb
test
pushl
and
insl
pop
xor
shll
fcoms
orb
xchg
jge
das
jbe
bound
push
cld
dec
mov
xchg
pop
mov
pop
adc
jmp
fcomip
push
inc
insb
mov
dec
rorl
loope
mov
nop
and
lods
decl
adc
xlat
xor
pushf
jo
mov
std
pop
pusha
push
push
out
mov
push
mov
mov
push
ds
popa
adcl
leave
push
into
push
nop
ljmp
clc
jmp
and
fistpl
test
test
mov
int
scas
clc
pushl
dec
insl
jl
dec
jb
sbb
xchg
add
out
orb
mov
adc
sbb
mov
les
dec
pop
xchg
sub
lock
cld
cli
mov
stos
or
sub
imul
stos
lret
sbb
clc
push
decl
push
aad
shll
xor
incl
mov
cmovs
fstpl
push
pop
mov
movsl
mov
andl
fwait
mov
add
xor
nop
lcall
dec
adc
sahf
adc
cmpsb
movsb
mov
cmp
fisubrl
es
sbb
or
cmpsb
bound
sti
pop
and
push
in
jb
add
bound
ficomps
add
cltd
loope
cltd
les
loop
lcall
adc
mov
pop
lahf
dec
in
adc
push
andl
arpl
pushl
jo
stos
insb
xchg
push
out
es
fcompl
sahf
push
loop
add
adc
pop
clc
push
push
cltd
mov
mov
sbb
daa
and
imul
xor
pop
or
nop
mov
xlat
dec
xor
addb
pop
mov
jg
fsubs
add
add
jnp
ljmp
nop
or
pop
std
ja
pushf
cmp
push
cmpsl
mov
subl
lcall
and
add
pop
sub
cwtl
inc
push
and
dec
push
and
jno
sahf
ds
call
cli
and
mov
pop
ds
jno
push
addr16
dec
movsl
ds
scas
inc
cmpsb
cltd
xor
mov
mov
add
or
in
test
outsb
xor
jmp
jmp
and
ret
cmp
pop
lock
fstpl
bound
jg
sbb
xchg
shl
popa
add
jbe
fnstsw
and
loope
mov
pusha
lods
inc
test
push
mov
enter
iret
test
jmp
lcall
int3
imul
decl
lods
pushf
push
orl
sbb
ljmp
add
enter
daa
and
mov
adc
or
icebp
stc
cmpsl
push
incl
cmp
push
cmpsb
es
rep
stos
mov
mov
pop
mov
or
dec
xor
and
mov
xor
xor
test
mov
and
test
dec
sar
decl
test
sbb
fimull
push
mov
loopne
push
cs
pop
pusha
dec
outsl
mov
add
cli
leave
adc
test
xchg
lcall
pushl
dec
mov
sbb
stos
sar
jg
stos
mov
test
push
push
lret
inc
or
faddl
adc
lahf
imul
lcall
pop
cs
mov
pop
sahf
jbe
mov
rcrl
dec
jge
ljmp
icebp
sub
pushf
enter
cmp
lret
mov
arpl
int
lock
mov
lods
mov
add
jecxz
xor
inc
aam
bound
icebp
mov
call
out
rolb
mov
sbb
mov
lods
jp
push
ds
aad
xchg
jg
inc
fsts
inc
sbb
popa
inc
mov
mov
cmpsl
mov
dec
mov
stos
flds
shrb
pop
and
lods
outsb
or
cmp
sbb
in
shl
add
push
and
pop
jo
popa
loop
pushl
repnz
push
popf
mov
and
xor
xchg
mov
sub
sahf
jmp
sarl
mov
mov
jbe
in
adc
loop
jg
andl
dec
inc
into
mov
xor
pop
decl
in
xchg
sbb
jle
push
add
jno
je
stos
jp
and
mov
enter
push
sub
in
inc
cmp
jle
shr
push
cmp
lea
lcall
xor
push
rcll
adc
push
xchg
clc
mov
pop
lcall
out
sbb
and
jne
inc
mov
roll
in
in
mov
idiv
lcall
into
cld
jecxz
sub
movb
inc
in
cmp
test
test
dec
xchg
mov
cmp
add
pop
iret
jb
jle
fdivrs
into
sbb
insb
jo
mov
loopne,pt
int
ja
add
mov
mov
dec
aad
jp
mov
sub
pusha
and
mov
roll
rol
add
cmp
je
add
loopne
cli
sbb
pop
popf
xchg
adc
dec
or
pop
dec
xor
mov
icebp
pop
es
sbb
decl
iret
xor
test
cmp
xor
xchg
adc
ret
leave
cmpsb
inc
jns
mov
call
in
mov
push
adc
ret
sbbb
or
adc
ljmp
mov
sub
mov
ljmp
aad
int
fldcw
frstor
and
cmp
and
sbb
shrl
imul
cmp
incl
mov
cltd
roll
mov
dec
add
outsb
and
jb
lcall
cmp
call
in
and
or
inc
dec
cmp
cwtl
mov
pop
iret
xchg
std
lcall
push
mov
repnz
jp
pop
sbb
fwait
ret
mov
ljmp
ret
ja
js
xchg
adc
ljmp
shl
inc
lods
repz
mov
cs
mov
test
fnstsw
dec
dec
call
lcall
pop
push
lods
enter
cmp
inc
clc
push
push
jne
ret
pop
stos
in
pop
les
call
dec
sub
dec
sbb
inc
adc
sbb
nop
xor
sub
lods
pusha
xor
das
outsb
hlt
add
adc
add
add
call
dec
roll
mov
and
es
ret
add
pop
dec
and
hlt
outsl
int
mov
cmpsb
stos
push
sbb
xchg
fcomps
mov
xchg
xor
jp
out
movsb
into
xor
cmp
aad
mov
ja
das
pop
ficoml
mov
jmp
addr16
pop
add
rcrb
sub
cs
ljmp
stos
popf
clc
lods
shlb
mov
jmp
xor
mov
ljmp
cmp
cmp
xchg
bound
dec
mov
jno
inc
dec
in
icebp
mov
insl
xor
pop
dec
incl
mov
psubsb
jmp
incb
push
mov
test
rolb
into
popa
pushl
mov
sbb
adc
gs
adc
jbe
fsubp
arpl
ds
mov
imul
pushl
adc
mov
shlb
bound
nop
test
dec
jmp
negl
int
gs
leave
mov
aaa
add
inc
imul
jmp
incl
cmc
adc
cs
pop
int
test
popf
dec
pop
push
sbb
movsl
shll
push
cli
jg
imul
cmpsl
mov
or
adc
cmp
add
iret
mov
rcrl
xchg
adcl
test
test
add
gs
movsl
popf
cmp
mov
lods
sub
push
jb
fimull
das
clc
jg
lods
sbb
cmc
ss
and
mul
adc
mov
lcall
mov
or
xchg
sti
insb
std
mov
nop
pop
rol
or
pop
stc
lcall
scas
cmp
cs
pop
jno
rcrb
jmp
call
cli
cmp
push
pushf
test
pop
jne
inc
pop
pop
in
test
or
jmp
cmp
mov
mov
lea
mov
flds
cmpsb
insl
add
lret
cli
or
sub
lcall
pop
adc
push
in
cmpsl
scas
xchg
mov
aas
lea
dec
cld
in
push
lock
cs
mov
jnp
add
outsb
sub
jg
xor
mov
xchg
std
ljmp
mov
jp
ja
jecxz
xlat
in
sbb
insb
lock
lret
jae
sub
loopne
dec
sbb
push
mov
ljmp
clc
dec
into
dec
pop
sar
rclb
jae
cmp
js
clc
push
pop
icebp
or
test
pushl
lods
push
neg
into
icebp
test
push
pusha
xchg
mov
pusha
xor
inc
orb
jmp
fildl
ljmp
hlt
scas
cli
call
cmpsb
push
fists
test
or
cld
fcompl
mov
test
cwtl
pop
mov
incl
add
nop
rcr
fcmovu
bound
xor
cmc
mov
cs
xor
or
incl
cmpsb
ret
jg
cmp
xchg
in
hlt
jo
cmp
cmpsb
lock
ss
mov
hlt
push
cli
adc
cmp
stos
mov
jbe
cmp
mov
or
jmp
imul
call
call
shlb
lret
orl
xchg
adc
pusha
jae
incl
into
dec
xchg
enter
jbe
outsb
xor
out
cmpsl
call
xor
xchg
add
cwtl
sbb
mov
popa
and
inc
mov
ljmp
scas
clc
call
mov
jb
sahf
or
mov
dec
xchg
das
pop
mov
ss
jmp
push
or
add
and
ret
addr16
sbb
jb
lea
call
popf
or
les
iret
stos
cwtl
js
js
imul
fcoms
int
and
cwtl
outsl
push
ret
cld
jge
and
mov
dec
push
dec
cmpsb
mov
sbb
pop
lret
mov
incl
mov
xor
mov
ja
jmp
int
insl
repnz
sbb
lcall
cs
cmc
sub
imul
mov
ret
or
xchg
fstpt
iret
mov
imul
ret
and
cmp
push
movsl
add
lret
cmp
xor
mov
jmp
cmp
cmp
inc
in
pop
js
cmp
fildll
xchg
aas
adc
lds
pop
movl
incl
push
mov
xor
sbb
mov
sbb
insl
cld
das
lock
adc
adcb
jg
sbb
add
or
push
mov
cld
lcall
ret
lds
pusha
push
notb
ret
xor
dec
and
adc
std
add
sarb
push
cmpsb
adc
push
leave
and
push
inc
sbb
or
mov
icebp
sub
xchg
shlb
int3
sahf
jp
mov
and
sub
cmp
je
pushl
and
subl
aam
imul
ret
sarl
mov
stos
mov
mov
incl
and
fwait
push
mov
xor
outsl
jp
mov
mov
shrl
loop
decl
aad
stos
jae
scas
dec
std
and
jns
lods
iret
out
decl
push
lods
aad
test
dec
push
pop
push
lahf
pop
push
cmp
sbb
pushl
xor
sub
mov
xchg
sbb
add
push
xchg
sar
jo
mov
aad
xchg
ljmp
es
popa
into
sbb
mov
ss
push
pop
mov
les
ja
adc
inc
xor
sbb
push
nop
fdivr
xor
and
loop
dec
add
cli
adc
neg
add
mov
cld
leave
mov
repnz
mov
imul
xor
inc
inc
cmc
mov
mov
mov
outsb
mov
mov
adcb
ljmp
mov
sbb
sub
sbb
mov
mov
fwait
outsb
push
fdivs
add
push
dec
stos
and
jmp
or
sbb
into
fdiv
pop
mov
ret
pushl
fwait
sub
mov
cmp
je
xor
insb
pop
xchg
es
and
pushl
sub
les
jb
and
lods
gs
dec
dec
cmp
push
int
push
fmulp
bound
lcall
scas
mov
sti
lock
sub
inc
not
faddl
inc
cmp
ljmp
cmp
testb
jmp
sbb
sub
mov
ljmp
loop
and
dec
rol
or
loopne
mov
jmp
loopne
ret
cmp
loope
test
andl
xor
xor
aas
adc
call
and
loop
lret
cmp
arpl
ret
and
addb
mov
incl
xor
mov
and
inc
cmc
test
pop
dec
lcall
enter
push
add
mov
test
pusha
pop
in
ljmp
push
movsb
push
stos
cmp
fs
push
mov
pushf
jmp
incl
iret
fidivl
movl
xchg
push
mov
push
xchg
xor
fmull
cwtl
adc
lcall
sahf
push
cmp
push
xchg
mov
in
xor
lea
inc
sbb
lods
add
ljmp
mov
popf
scas
push
xchg
and
pop
push
xlat
sub
mov
xor
cld
movsl
pop
jle
lea
out
xchg
out
nop
lcall
negl
push
sbb
jo
push
lcall
xlat
xor
lcall
jnp
mov
mov
jo
adc
inc
or
xchg
or
jg
or
loopne
sbb
fdivr
jb
cmp
inc
mov
add
mov
add
incl
fs
sbb
popa
push
test
push
orl
pop
cmpsb
xchg
cwtl
shrl
sbb
ljmp
mov
pushl
push
mov
dec
lds
xchg
mov
cmp
das
sar
mov
sbb
push
nop
shlb
cmpsl
call
ret
pop
cmp
lods
jmp
leave
xor
and
push
jge
aaa
cmpsb
jl
jg
addr16
push
mov
sub
xchg
inc
movsb
mov
jg
inc
pop
push
aas
inc
sbb
inc
test
push
push
jmp
lret
vmovntps
mov
cmp
call
adc
lods
sbb
cmpsl
adc
dec
xlat
sub
rcll
jne
rol
ljmp
ljmp
sbb
ret
andl
inc
xchg
mov
mov
hlt
adc
mov
xor
xchg
sub
pop
jp
decl
sbb
cli
adc
add
aad
das
stc
rolb
bound
bound
int
inc
insb
movhps
fsubs
push
mov
out
sub
inc
rcl
enter
es
sti
xor
sbb
fs
data16
std
decl
lds
lock
or
ds
push
incl
in
subb
in
test
pop
or
das
mov
rorb
hlt
push
ljmp
rcrb
or
xor
cmc
mov
push
jne
mov
pushl
xchg
cwtl
lods
sub
es
aad
jnp
dec
push
mov
lea
sahf
aaa
cld
call
sbb
fisttpll
jo
faddp
mov
arpl
sub
les
lcall
pop
aad
mov
shll
leave
adc
shll
mov
or
std
fsubrs
aad
mov
jp
and
sub
mov
fcomip
call
bound
add
mov
and
mov
mov
sbb
out
test
and
rcll
movsb
lods
xchg
insl
hlt
adc
call
loopne
adc
inc
outsb
pop
cltd
mov
jle
repnz
inc
pop
std
incl
ret
addr16
movb
cld
or
fistpl
sub
decl
push
fsubl
sbb
fsubs
cmp
xchg
insb
lds
mov
loopne
ljmp
adc
loopne
dec
dec
ja
fmull
jge
fucomi
data16
mov
mov
clc
jb
sahf
cmpsb
imul
pusha
std
ljmp
push
and
xchg
lods
sub
mov
js
mov
and
fbstp
adc
scas
sub
addr16
stc
xchg
and
push
push
js
add
push
dec
cmp
hlt
mov
es
pushl
movl
mov
das
and
movsl
push
add
addr16
jge
push
lahf
xchg
test
and
inc
std
outsl
xchg
or
cltd
fisubrl
outsl
mov
daa
xor
sub
or
dec
and
sbb
enter
cmp
and
fwait
scas
push
mov
and
subl
std
fcmovnbe
inc
insb
jecxz
jl
notl
xchg
mov
in
xchg
sbb
cmc
jg
insb
cmp
arpl
inc
or
das
xchg
xor
mov
dec
push
cmp
push
stos
adc
into
inc
push
leave
ja
push
mov
sbb
jecxz
inc
inc
sbb
xchg
aaa
mov
pop
xor
mov
sbb
out
stos
loop
pop
ljmp
fcom
dec
ljmp
adc
sbbl
cmp
xor
incl
stos
int3
cmp
int3
mov
and
cmp
push
das
or
jg
cmp
call
xchg
fbld
lock
ss
adc
jbe
pop
xchg
call
inc
push
add
pop
or
pushl
cmp
jbe
push
and
mov
imulb
fstpt
jne
push
jmp
cltd
mov
mov
rol
inc
out
stc
insl
mov
je
incl
gs
cmp
jno
mov
bound
popf
cmp
add
ror
iret
mov
addr16
subb
push
xor
out
mov
mov
lret
sbb
mov
js
jg
mov
call
push
pop
sub
ret
push
lret
mov
ret
xchg
stos
jmp
call
test
stos
cs
or
loop
or
repz
int
lret
ljmp
mov
dec
test
jp
inc
lcall
pusha
or
ljmp
pop
bts
fisttps
jge
fildll
push
popl
inc
push
loopne
in
lcall
push
cltd
and
ljmp
inc
das
inc
int3
jmp
xor
js
xor
out
gs
fmull
ret
or
pushl
mov
inc
adc
in
and
adc
xchg
ret
out
hlt
xchg
test
test
pop
outsb
dec
stos
adc
jbe
inc
cmpsl
je
jg
movsb
or
xchg
stos
fs
xchg
loop
mov
in
sub
in
dec
or
mov
mov
xchg
test
add
adcb
addr16
jmp
cs
mov
add
das
cs
lcall
into
lods
mov
out
out
aaa
sahf
sbb
cmpsl
mov
incb
into
inc
jb
ljmp
push
mov
jno
iret
ficoml
add
or
insb
ja
cli
push
repnz
dec
dec
inc
rorb
imul
jg
or
into
push
sub
sbb
add
mov
sub
and
mov
sbb
les
nop
and
jg
imulb
push
cmpb
data16
jg
in
jle
inc
push
test
inc
in
call
lods
in
dec
inc
push
nop
lods
clc
adc
and
inc
lds
xchg
pop
cmpsb
notl
lcall
sub
ss
les
sahf
shlb
mov
es
ret
incl
push
push
movsl
mov
inc
fiaddl
cmpsb
sub
dec
jmp
xchg
ud0
mov
gs
dec
add
xchg
and
inc
mov
sbb
jmp
pushl
pop
test
mov
loopne
pushf
xor
jbe
js
inc
sub
inc
pop
add
ljmp
movsl
sub
pop
sbb
decl
push
sub
pushf
int
fldl
imul
ret
adc
cs
shufps
arpl
pop
sub
fdivrs
or
cmpl
xchg
lldt
movsl
cli
sarl
or
add
inc
ret
push
les
clc
in
cld
movsl
add
pop
adc
xchg
data16
outsl
mov
add
push
sub
sub
mov
push
pushl
sbb
scas
js
xchg
jle
add
xor
jl
mov
pop
ror
imul
sbb
mov
ljmp
sub
mov
inc
out
fnsave
pop
jle
lock
lret
jb
mov
sbb
ret
push
aas
sbb
sbb
dec
cld
iret
iret
push
rcl
push
bound
aam
fbld
or
loopne
push
add
data16
and
mov
push
inc
test
push
adc
jno
jbe
outsb
je
adc
push
xorl
outsl
add
push
sub
add
incl
inc
lock
xor
mov
insb
loop
aam
lock
js
push
xor
inc
mov
decl
jle
int3
inc
xchg
jo
cmp
dec
repz
inc
sar
andb
push
mov
aaa
leave
je
mov
add
jg
loopne
push
sbb
jb
mov
inc
push
xor
push
push
xor
mov
outsl
call
mov
or
lret
loop
fwait
mov
lcall
lahf
push
vmovhpd
gs
lock
test
sub
xor
add
in
lock
lods
shl
add
xchg
mov
addb
adc
dec
cmp
iret
pop
incl
or
jle
imul
mov
add
xor
inc
sub
inc
in
jle
add
ja
lcall
shll
add
xchg
and
sub
mov
or
incl
push
cli
push
inc
in
out
mov
imul
push
mov
inc
lret
jb
fisubrl
insb
in
call
lock
push
xchg
insl
lock
push
decl
cmpsb
loop
xor
bnd
jb
pop
les
mov
decl
int
orl
mov
jae
int3
test
ljmp
addl
cmp
or
cwtl
add
push
lock
cs
mov
mov
inc
or
call
insb
jg
sub
sub
or
das
xchg
jecxz
cmpsl
dec
cmp
push
mov
imul
daa
mov
pop
push
cmpsb
xor
and
lret
out
cld
loop
xchg
xchg
les
shlb
cmp
pop
stc
push
and
lcall
push
lock
xor
into
jo
in
rcl
mov
stos
push
outsl
mov
orl
mov
sub
push
mov
cli
decl
push
outsb
and
fdiv
mov
adc
insl
dec
push
sbb
push
mov
add
mov
dec
test
pop
rorl
jg
imul
jecxz
cmpsb
aam
outsl
mov
arpl
sub
mov
hlt
adc
pop
decl
lock
and
jbe
sub
cmpsb
dec
addr16
lret
ds
stos
xchg
xchg
daa
push
daa
inc
xchg
pushl
in
int3
ret
negb
pushf
and
or
sub
add
push
and
xor
fs
and
les
or
imul
sahf
pop
and
or
jne
or
icebp
in
sub
or
outsl
push
out
push
pop
repnz
jg
out
test
push
cmpsl
and
sarb
mov
ja
int
call
sbb
mov
sbb
pop
cltd
ja
pushl
mov
add
sbb
cmp
inc
or
jno
cld
fistl
inc
dec
push
sbb
push
cwtl
stos
jb
xlat
pop
jecxz
jecxz
incl
stos
dec
jbe
lea
push
mov
cwtl
xchg
test
pop
cmc
mov
push
aaa
mov
incl
mov
xchg
scas
loopne
lods
lcall
imul
stos
jl
dec
pusha
sahf
dec
idiv
inc
das
insl
popa
clc
movsl
pop
cwtl
addr16
mov
cli
shlb
and
xchg
insb
jmp
mov
mov
mov
adc
xchg
sti
jb
test
test
mov
jbe
ljmp
cld
out
xor
xchg
nop
cmp
das
das
inc
add
fcomps
sub
xor
incl
insb
ja
shl
mov
xchg
push
pop
mov
or
add
jmp
call
push
push
lret
xor
dec
pop
add
aaa
add
mov
sub
push
stos
or
stos
push
shlb
addr16
push
outsb
icebp
push
lcall
jecxz
rorl
sub
push
lds
loop
pop
call
jb
mov
rcl
inc
jae
dec
call
mulb
mov
adc
mov
popa
mov
pop
jg
pop
bswap
cs
lea
imul
and
and
sub
dec
sub
sub
je
sub
jle
inc
jp
dec
popa
xchg
les
adc
imul
mov
insb
mov
xchg
fcomip
incl
test
fcoml
dec
dec
dec
lret
hlt
cwtl
lcall
pushf
cmp
repnz
hlt
in
sub
xorl
push
push
adc
insl
jmp
mov
std
decl
jmp
popf
fmuls
mov
pop
cwtl
jmp
jno
in
or
mov
shll
mov
cmc
jbe
xor
xor
push
aam
mov
mov
int
fisubrs
sar
ret
aam
imul
or
push
inc
in
xchg
xchg
mov
or
aaa
jecxz
push
test
mov
jl
test
pop
adc
fcomip
ljmp
insb
enter
mov
outsb
das
test
jl
push
ja
fmuls
js
push
pop
js
mov
xchg
pop
nop
pushl
jp
adc
xchg
iret
cmp
and
dec
inc
and
fimull
pushf
iret
dec
addl
leave
rorb
decl
pop
fiaddl
popa
mov
loopne
jae
xchg
test
ljmp
call
in
movsb
shr
dec
sub
mov
cmp
imul
int
ss
fildl
lcall
mov
push
push
jo
jbe
pushf
inc
cld
or
cld
add
push
lret
jmp
decl
je
rorb
fs
andb
popf
aam
and
out
sbb
mov
mov
dec
ja
or
sbb
pop
add
addr16
cltd
or
sbb
cmp
ret
xor
hlt
cmp
ljmp
xor
push
sbb
out
call
add
iret
fidivrl
decl
jb
incl
iret
and
mov
cld
mov
adc
js
adc
push
sar
incl
lods
les
xchg
inc
adc
cmp
jmp
xchg
je
leave
inc
push
das
push
out
sarb
bound
push
add
lea
jbe
lcall
fs
popa
out
lret
cmp
popf
pushl
scas
movsb
and
mov
dec
bound
mov
jecxz
inc
adc
lcall
adc
xchg
or
insb
push
xchg
mov
mov
xchg
push
cmpsb
aaa
adc
clc
cmpsl
lcall
shrl
push
das
call
test
scas
mov
sbb
into
or
ja
dec
sbbl
cwtl
rorl
incl
stos
aaa
into
push
scas
xchg
xchg
iret
cmpsb
test
mov
aad
xor
mov
pushl
pop
fists
dec
in
adc
jae
jbe
orb
call
out
jmp
cmpsl
int3
std
loope
push
repnz
rcrb
push
mov
sbb
pushl
mov
and
cmp
lea
xchg
scas
dec
cmp
int3
mov
jmp
test
dec
addr16
pmulhuw
pop
outsb
cmc
pusha
sub
dec
jbe
cmp
dec
jmp
pop
inc
and
sub
inc
mov
mov
sti
imul
lods
mov
xlat
cmovo
sub
push
popf
sub
add
pushl
mov
cwtl
stos
mov
xchg
shrl
outsb
fcmovu
mov
cli
loop
addl
pop
das
lock
call
and
fsubr
add
push
sti
cli
std
into
popf
push
ret
lds
outsl
xor
mov
xor
and
call
push
and
xchg
je
fnstcw
aam
mov
icebp
jge
mov
cld
incl
out
or
ret
pop
mov
outsl
stos
test
inc
js
inc
mov
fwait
jbe
pop
lret
xor
call
mov
pop
repz
pop
add
push
cld
orl
bound
movsb
jns
jnp
jle
ds
fbstp
cmp
bound
xchg
leave
adc
lret
nop
clc
aaa
inc
inc
cld
and
sub
decl
inc
pusha
or
lods
or
push
out
push
add
std
xchg
imul
dec
cld
jmp
and
in
inc
nop
loopne
addb
mov
or
stos
es
jecxz
lcall
ret
pop
push
xor
jo
bound
or
inc
out
mov
or
scas
push
es
call
mov
int3
adcb
xchg
sbb
inc
shl
sub
cli
mov
mov
mov
hlt
push
nop
sub
scas
decl
add
or
xor
or
pop
imul
pop
sub
ja
faddl
movsb
sub
push
hlt
xor
out
cli
push
mov
ficompl
xor
rorb
int3
push
jecxz
mov
bound
dec
push
cs
mov
xor
jae
sahf
punpckldq
mov
aaa
fcmovnb
push
mov
pusha
adc
add
or
dec
jecxz
xchg
mulps
outsl
enter
mov
shlb
sbb
mov
cld
mov
decl
pop
cmp
out
call
cmpsl
cld
cwtl
divl
loopne
mov
enter
ljmp
fbstp
mov
adc
and
inc
add
out
cmpsb
test
add
push
pop
push
sbb
mov
dec
es
cmpl
clc
pop
jns
add
dec
push
lcall
jbe
ret
lea
andb
mov
cmp
fisttpl
testb
mov
or
stc
fimuls
loop
and
neg
or
in
mov
icebp
test
gs
aad
cwtl
insl
insl
loopne
nop
inc
and
mov
dec
or
rcll
dec
adc
aam
dec
adc
aad
cwtl
mov
aam
repnz
dec
fcomps
imul
cmp
movsl
and
add
mov
mov
js
cmpsb
xchg
push
xchg
mov
sub
and
add
test
pop
fwait
pop
fbstp
cltd
sub
jmp
outsb
add
pop
mov
sbbb
imul
adc
imul
out
sbb
incl
insl
sbb
xchg
jb
jge
test
ss
mov
dec
mov
push
imul
jnp
stos
insl
loopne
jl
mov
or
mov
decl
push
addr16
je
loop
dec
sub
mov
xchg
xchg
loopne
js
jmp
add
cmp
mov
adc
inc
or
aaa
je
add
inc
inc
push
shr
or
sub
pop
mov
mov
out
jae
out
arpl
adc
jmp
pop
in
xor
in
push
dec
xor
add
mov
dec
push
popf
inc
aad
bound
mov
lret
push
roll
dec
ficoml
add
ljmp
les
ds
pop
popa
jmp
xchg
dec
xlat
cmpsb
mov
pushf
cmp
clc
fstl
jnp
xchg
push
sahf
mov
dec
rorb
push
aam
movl
mov
decl
push
jae
mov
test
pop
sub
xor
test
aaa
mov
stos
push
cmpsl
mov
mov
outsl
arpl
mov
call
or
adc
scas
jae
loop
sarl
outsl
mov
fdivrp
lcall
mul
or
lahf
xchg
xor
xlat
fs
and
fisttps
sti
adc
hlt
xchg
fwait
ds
push
or
pop
or
fcomps
fcomip
fcmovne
cmp
cmpl
xchg
adc
or
add
pop
pusha
in
push
pop
mov
and
inc
dec
das
mov
inc
jle
or
popf
and
dec
push
mov
and
mov
pop
push
mov
xchg
lret
in
mov
adc
xchg
and
xor
adc
ficompl
test
idivb
or
pushf
adc
jg
fistl
or
dec
mov
inc
sbb
lret
xor
dec
out
ret
inc
push
data16
push
lret
sub
imul
push
ss
fwait
mov
push
pop
dec
loopne
jbe
lret
ss
lcall
cld
orl
jle
xor
or
mov
jns
mov
ljmp
orl
les
or
loop
push
cmpsb
push
bound
xchg
shl
imul
ds
fadds
add
cmp
sbb
into
test
shll
fbld
repnz
mov
jl
push
xor
add
push
decl
sbbb
iret
pusha
cmp
mov
and
pop
stos
pop
test
rolb
cmp
push
adc
loop
stos
fisttps
aas
incl
mov
or
and
mov
mov
sbb
push
dec
and
inc
jle
push
sbb
lcall
fcomps
rorl
mov
ret
mov
push
jns
jmp
clc
lahf
push
and
lds
xor
xchg
mov
or
dec
push
data16
stos
xchg
fwait
loopne
add
pushl
jg
lret
clc
sbb
in
xchg
ret
lods
sarb
dec
mov
xor
pop
adc
xchg
jg
mov
fwait
call
scas
test
mov
lods
dec
popf
sbb
adc
add
push
push
and
lcall
dec
xchg
test
mov
or
mov
pop
ljmp
and
into
icebp
loopne
sub
and
pushf
push
std
outsl
clc
in
lret
pop
in
xor
iret
pop
push
ljmp
push
pop
decb
and
sub
adc
adc
and
or
nop
inc
mov
push
pushl
mov
lock
push
inc
adc
sub
rolb
leave
cmp
outsl
and
sbb
dec
ss
jo
adc
mov
cmp
ret
mov
in
mov
call
sub
jb
iret
sbb
int3
pop
pop
sarl
xchg
loopne,pn
jno
ficompl
mov
mov
jg
inc
ds
dec
dec
bound
dec
pop
dec
dec
bound
adc
fnstcw
call
push
jp
push
sub
lds
ds
or
jo
daa
sarl
pop
push
fs
pop
mov
pop
shrb
inc
ja
dec
jge
push
mov
jmp
mov
ss
mov
loop
outsb
ret
pop
jmp
ret
movsb
pop
imul
lcall
insb
mov
mov
fs
mov
stos
jg
cmpsl
pop
jg
stos
push
icebp
dec
ss
icebp
andl
push
daa
cmp
mov
dec
push
cmp
jmp
popa
ret
mov
mov
pushw
decl
sbb
lret
pop
nop
or
stos
movsb
roll
fwait
push
dec
and
and
sub
add
pushf
lcall
jmp
or
mov
and
mov
das
clc
lcall
pop
ja
dec
xchg
mov
xlat
pop
out
or
sbb
mov
jge
mov
jl
shlb
cli
xor
inc
or
sbb
clc
cmp
push
jae
repnz
std
mov
lds
xchg
cmc
pushl
es
adc
fdivl
sbb
aaa
ljmp
dec
sub
fs
or
les
mov
jb
pushl
or
stos
mov
loopne
push
arpl
and
decl
jecxz
and
dec
fsts
and
ljmp
iret
push
mov
insl
add
imul
fidivl
shr
xor
sub
and
lcall
pop
sti
or
jmp
pop
scas
cs
mov
cmp
stos
mov
je
in
in
cltd
iret
iret
or
dec
and
incl
inc
sub
mov
xchg
mov
add
inc
sbb
mov
data16
jle
mov
sub
jmp
mov
jle
sub
scas
and
xor
pop
adc
jmp
push
pop
mov
cmp
mov
and
lds
imul
ret
in
xchg
bound
inc
jl
adc
push
jecxz
call
das
cltd
out
out
movntps
mov
push
lcall
mov
stos
and
mov
mov
xor
dec
lea
adcb
xchg
jg
ljmp
sahf
fsubl
push
fs
add
cmp
push
xor
lcall
mov
pop
pop
mov
call
test
jb
inc
jno
je
sub
dec
push
pop
fildll
jns
pop
dec
bound
hlt
mov
imul
cmp
aas
pop
das
ds
je
adc
xor
in
sub
cmc
push
mov
xchg
sahf
negb
and
jb
jg
push
adc
and
adc
shrb
testb
xor
ljmp
and
in
sbb
add
mov
pop
decl
stc
aam
cmp
and
fs
push
push
push
jns
icebp
pusha
push
sbb
adc
sbb
push
and
jbe
xchg
daa
jns
je
sub
adc
xchg
inc
dec
jno
filds
xor
mov
and
cmp
sbb
push
push
sar
lcall
movsl
jno
cmpsb
push
xchg
push
pop
shll
inc
push
test
aaa
sbb
adc
adc
jmp
imulb
aad
js
sbb
jle
repz
in
std
incl
or
mov
jno
adc
pushf
push
js
gs
sarl
xchg
aaa
loopne
xchg
xchg
jno
dec
jge
jns
push
test
arpl
sub
pushl
add
push
sub
cmpsl
sbb
jg
out
xor
mov
xchg
and
call
add
cmp
nop
ds
stos
sarb
jo
and
fcomip
mov
cmc
dec
stc
mov
test
sbb
jmp
movb
xchg
stos
push
icebp
adc
pop
jle
push
test
push
ljmp
xor
mov
push
aaa
and
xchg
pop
add
ja
out
cli
inc
push
addl
push
loopne
adc
pusha
sahf
adc
push
fdivs
call
push
cld
jno
arpl
inc
or
and
inc
xor
rclb
sub
adc
es
pusha
inc
add
inc
jl
inc
mov
jmp
sbb
ss
mov
push
or
sbb
outsl
and
cmp
das
mov
mov
inc
icebp
sub
jnp
movsb
and
shrl
mov
cmp
xchg
sub
push
adcb
push
pushl
cmp
xchg
push
jne
sbb
push
xchg
fs
push
test
movsb
adc
jno
stc
dec
movsl
sar
incl
fs
and
and
and
pop
jmp
adc
and
ret
add
dec
call
xchg
cmc
ss
aad
loope
je
int3
adc
or
mov
std
movsb
and
add
pop
pop
mull
inc
addl
sbb
loopne
or
push
xor
mov
pop
cmp
ljmp
dec
les
lock
push
repnz
lock
lock
jmp
push
and
jecxz
dec
xor
clc
push
sub
test
mov
loopne
js
xchg
cmp
push
add
outsb
sub
pop
pop
xchg
and
mov
add
add
pop
cwtl
fs
call
inc
xchg
mov
adc
aad
addr16
pop
ja
inc
mov
mov
add
mov
push
aad
pop
sub
bound
imul
mov
inc
imul
xor
adc
imulb
adc
hlt
mov
dec
add
decl
xchg
xchg
popf
rolb
ret
fdivs
jge
sbb
pushl
sahf
movsb
jno
nop
jle
rcll
movsb
into
xor
add
and
cmp
dec
lock
mov
cwtl
in
int
andnps
dec
pop
pusha
cltd
pop
mov
inc
stos
jae
stc
cltd
sti
xor
adc
call
inc
sbb
xor
mov
or
xor
icebp
pop
xor
out
ja
jbe
dec
std
mov
lods
pop
cmpsl
fwait
sub
cld
adc
adc
pop
fmull
inc
push
ljmp
bound
push
loope
fists
and
ljmp
and
dec
add
pop
mov
cmpsl
frstor
ret
push
fs
fwait
sub
out
and
test
outsl
jg
pop
xchg
pop
push
add
stc
xor
add
mov
jg
pusha
or
pop
and
xor
pop
lock
bound
decl
adc
js
mov
adc
jno
scas
popa
sub
inc
cmp
adc
call
xchg
es
adc
xchg
inc
jmp
jg
mov
inc
sbb
jne
cmp
pop
jno
fsts
push
xchg
push
scas
mov
push
stos
xchg
xchg
xchg
cmp
mov
pushl
pop
shrl
mov
dec
lret
inc
pop
outsb
push
mov
adc
bound
mov
fisttps
inc
fmul
cmp
mov
outsb
adc
loope
inc
and
test
stos
mov
idivb
gs
or
inc
cmc
je
ret
mulb
jb
fcomip
add
pop
and
inc
mov
inc
test
pusha
es
stc
pop
or
pushl
add
pop
out
add
pusha
xor
push
mov
pop
shlb
test
lret
jecxz
jns
push
outsl
pop
jns
test
add
stos
data16
pop
outsb
inc
xor
movsb
pop
jae
add
cli
dec
adc
incl
lods
and
add
lods
es
mov
idivb
jmp
loop
frstor
lahf
call
inc
in
xchg
sub
xchg
push
xor
jmp
jae
jnp
sub
push
adc
shrl
test
shlb
inc
test
adc
adc
decl
lock
jnp
xchg
cmp
notl
sub
in
daa
mov
decl
mov
add
add
cwtl
loopne
jg
jns
ret
mov
xor
rcrl
mov
cmpsb
xor
movsb
ds
add
add
ljmp
dec
jne
xor
je
pop
pop
inc
adc
ret
js
sarl
adc
imul
xchg
lock
lds
add
sbb
inc
push
fwait
push
loopne
decl
and
xchg
scas
gs
cwtl
cld
pushl
xor
xor
dec
adc
sbb
cmp
pop
lcall
and
add
call
pop
ret
pop
sbb
push
jns
xchg
popa
outsb
ljmp
pushf
add
mov
and
inc
rcrb
incl
sbb
mov
lea
and
mov
orl
fcomip
incl
adc
ret
daa
data16
out
push
popa
adc
jmp
push
popa
adc
fs
sub
xor
mov
sub
xchg
add
incl
mov
mov
xchg
push
xor
call
addr16
cmp
lock
int3
mov
shl
sub
sbb
push
mov
mov
outsl
push
cmp
addr16
mov
cmp
pop
xor
cmp
dec
out
idivl
out
mov
push
pop
mov
or
call
inc
pusha
std
mov
jo
incl
mov
pop
mov
nop
decl
pushf
ss
mulb
xor
jecxz
ljmp
stos
in
jb
lds
test
inc
mov
adc
arpl
stos
jb
jle
out
cli
mov
popf
pop
and
les
ss
xor
sbb
pop
mov
xor
lcall
adc
lods
cmpb
jg
insb
adc
and
bound
pushl
popa
jbe
inc
jge
out
mov
push
jecxz
aaa
pop
test
mov
xchg
mov
insb
cmc
jg
lea
aaa
add
rolb
adcb
mov
sub
jl
sbb
mov
lcall
add
adc
cmp
mov
fsts
gs
add
mov
movsb
sub
cmc
ret
int3
mov
inc
ljmp
xlat
call
push
xlat
xor
lds
enter
das
mov
call
jo
and
popa
pop
outsl
add
stos
fs
or
fistps
daa
push
inc
js
pop
pcmpeqw
lcall
call
mov
inc
fwait
xchg
xor
xor
cwtl
pushf
aaa
faddp
std
fistpll
ljmp
sbb
es
jnp
xor
adc
and
call
mov
arpl
jb
push
push
adc
jbe
or
sub
inc
cmp
decl
cmpl
mov
mov
add
lret
jne
sbb
mov
inc
cmp
andb
pushf
bound
icebp
mov
jge
testb
inc
push
jno
xchg
xor
movsb
push
sub
out
jp
pop
outsl
test
lods
jp
jo
mov
jg
fiadds
xchg
insl
mov
hlt
lds
jbe
mov
jmp
lea
bound
fisubl
cmpsb
mov
cmp
mov
into
mov
fdivp
mov
ljmp
addr16
test
xor
cmp
mov
or
das
push
lock
mov
push
push
push
mov
stos
fwait
jle
lods
and
xor
mov
pop
xor
subb
sti
ret
mov
mov
test
lcall
test
movsl
inc
lods
or
or
adc
add
xorb
leave
aam
lret
mov
in
xor
cli
rorb
push
es
push
sarb
ljmp
add
sbb
jl
mov
ds
jecxz
sbb
pop
shl
call
sbb
pop
ror
xchg
cmp
loopne
jmp
fisubl
lcall
sub
pop
pushl
rclb
jle
sti
jle
leave
outsl
test
pushl
cld
push
data16
movsl
adc
cmp
push
imul
xchg
outsb
movsb
lods
lcall
sub
mov
mov
inc
cmpsb
jl
jnp
loopne
outsb
sbb
xor
mov
sbb
mov
icebp
xchg
aad
xor
add
cmp
scas
add
dec
out
sbb
dec
mov
cmpsb
in
xor
and
pop
in
cmp
ficoms
gs
rol
and
fucomi
lock
icebp
inc
movsl
fcomip
jnp
sbb
jo
subl
inc
pop
inc
mov
add
insb
rclb
hlt
xor
fistps
into
cmpsl
or
adc
adc
stos
or
lcall
test
lea
jge
fcoml
mov
frstor
sar
add
push
add
dec
push
mov
inc
cmp
pushl
iret
sub
ret
ja
aaa
mov
dec
mov
xor
test
add
lods
pop
jno
shrb
adc
xor
js
mov
ljmp
adc
pandn
pusha
shlb
xchg
jp
pushl
mov
stos
pop
mov
sub
loope
in
popf
inc
mov
dec
std
test
inc
push
js
mov
pop
arpl
or
loop
stos
roll
rcll
pop
lods
xchg
dec
cmp
aas
mov
xchg
lahf
jg
test
mov
outsb
mov
inc
push
push
mov
orb
jle
out
je
fdivl
stos
in
js
jg
incl
mov
outsl
push
addr16
lret
or
xlat
mov
ds
jecxz
inc
icebp
popf
or
push
xor
or
pop
loopne
mov
lret
cmp
cmp
loop
pushl
sub
mov
sub
xor
adc
incl
inc
sbb
sub
nop
ret
out
pop
sbb
es
or
pop
xchg
clc
push
mov
je
int3
sahf
xor
add
inc
arpl
sub
add
addl
and
rorb
inc
mov
in
lock
sbb
mov
ljmp
and
dec
movsl
or
int
jnp
mov
sbb
insl
les
inc
mov
xchg
pop
aad
adc
jg
pushf
xchg
pop
mov
inc
mov
mov
cmp
pusha
mov
sbb
xor
int3
gs
icebp
fcoml
push
into
int
repnz
push
cwtl
mov
xor
std
push
or
iret
insl
mov
mov
push
cmpsl
pop
jmp
imul
arpl
in
push
lods
pop
mov
in
dec
imulb
aad
jns
imul
aaa
jg
fistpl
mov
aad
mov
cmc
imul
cld
incl
mov
and
jp
repz
fs
xchg
mov
jmp
mov
pushl
imul
imull
mov
fs
push
imul
aam
and
xchg
and
pop
sub
or
mov
ret
sbb
and
push
cld
xorb
or
mov
sbb
cmp
pop
mov
dec
jmp
xor
sbb
decl
imul
fwait
adcb
and
jb
xor
xchg
je
or
fbld
adc
or
adcl
enter
sbb
in
push
test
mov
mov
push
jg
mov
add
fisubs
jns
lea
ljmp
sbb
gs
inc
call
cmp
incl
dec
imul
leave
cmpsl
cmp
and
int
movsl
fsubr
dec
or
push
call
mov
lcall
ds
test
mov
mov
lret
mov
jb
cld
or
das
push
or
call
sub
sbb
addb
cmp
stos
loopne
xor
push
mov
cmp
aaa
pop
xlat
sti
sub
add
or
int3
pushl
sbb
stos
xor
scas
fcoml
gs
mov
jmp
cld
mov
ljmp
into
mov
out
cmp
pop
roll
jl
push
arpl
dec
call
inc
or
dec
sub
int
sub
push
xchg
or
out
xchg
test
testb
out
test
lcall
or
mov
cs
cmp
or
push
ret
mov
adc
push
icebp
add
mov
xchg
movsl
xchg
inc
sbb
test
push
pop
js
mov
aad
inc
or
jg
pushf
cmp
adc
mov
loopne
dec
sub
xor
dec
cmp
and
sti
test
dec
repnz
stos
push
ja
imul
and
xchg
pusha
and
ja
mov
xor
dec
test
bound
add
xchg
or
fwait
dec
hlt
shrl
mov
push
xchg
mov
pop
mov
lret
incl
fistps
ljmp
stos
testb
xchg
xchg
push
sub
push
scas
aad
pop
out
ljmp
je
jnp
push
icebp
mov
scas
mov
jg
adc
mov
push
pop
and
loop
cli
and
loopne
mov
lea
xlat
fucomp
xor
and
pop
cld
repz
rolb
test
dec
add
and
fdivs
inc
jg
test
mov
movsb
pop
out
sbb
and
imul
out
and
xor
pop
jb
das
xchg
stc
lds
test
ljmp
push
or
arpl
cli
lret
pop
jg
out
aad
inc
cli
inc
int
pop
cld
outsl
mov
xor
xchg
push
divl
mov
jo
mov
mov
gs
push
ret
sbb
lea
fsts
fwait
inc
jg
lea
mov
and
pushf
push
decl
inc
out
mov
sub
mov
inc
xchg
sub
pop
popf
cltd
pop
pop
test
enter
push
enter
mov
jl
inc
pushf
xor
cmp
jg
dec
cld
xchg
dec
jae
mov
mov
shll
mov
xor
adc
mov
ljmp
add
test
mov
xor
sub
push
mov
icebp
xchg
aaa
or
cli
pushl
or
repz
loope
pop
add
lods
arpl
pop
cwtl
dec
push
test
pop
cmp
xchg
aaa
cli
pop
lea
sbb
loopne
xchg
or
and
decl
js
adc
jbe
cmpsl
in
ljmp
movsl
cmpsl
xor
jmp
sbbl
push
jge
or
sbb
mov
call
lcall
xchg
iret
scas
lret
ds
into
or
repz
negl
arpl
int3
cmp
lcall
and
imul
dec
outsl
jb
rcr
popa
incl
lret
lret
adc
inc
rolb
lcall
and
adc
mov
daa
sub
test
push
lret
and
scas
in
outsb
mov
sbb
mov
insl
loop
nop
cmpsl
js
sbb
ljmp
dec
ja
adc
adc
add
ret
lcall
scas
je
pop
push
push
xor
dec
ja
and
cmp
jecxz
loopne
arpl
xchg
push
and
xchg
push
mov
rolb
push
cmpsb
or
mov
inc
inc
ljmp
fs
lea
jecxz
mov
lea
scas
lcall
sub
xchg
adc
pop
loopne
int3
scas
test
or
fsubrs
decl
or
insb
movsl
lcall
push
movsb
inc
sub
das
js
pop
stos
add
xor
out
add
es
mov
pop
or
shrl
repnz
add
inc
mov
outsb
call
jmp
xchg
lret
ljmp
adc
xchg
into
int
lds
movsb
mov
cmp
insl
cli
mov
fiadds
mov
jnp
or
fimuls
andl
aas
movsb
push
scas
clc
sar
popa
in
sub
and
jl
xlat
or
imul
mov
ljmp
mov
jne
sub
adc
push
insl
inc
pop
xor
adc
mov
decl
pop
and
fwait
test
add
cmpsl
cmpsb
sub
push
mov
xchg
sar
incl
xchg
inc
push
cmpsl
pop
cmpsl
jl
dec
insb
stos
lret
lods
pop
and
out
js
mov
clc
repnz
gs
bound
pop
in
push
fldenv
pop
mov
pop
mov
inc
adc
jg
incl
add
jecxz
mov
mov
in
insl
shll
stos
mov
jle
test
adcb
pop
data16
mov
call
lods
loope
jp,pt
add
xchg
mov
jg
or
mov
adc
sbb
repz
jp
pusha
and
lock
shl
aaa
popa
repnz
mov
dec
sti
sub
ljmp
loop
je
xor
sbb
addr16
loop
mov
inc
mov
add
pop
into
lods
inc
decl
mov
orb
arpl
mov
das
mov
mov
in
shlb
ss
or
je
inc
pop
or
fmulp
out
jae
addr16
sub
jnp
incl
fiaddl
sub
mov
mov
cmp
mov
and
add
out
mov
inc
in
dec
dec
movb
mov
test
xchg
clc
outsl
mov
add
lods
int3
xchg
movsl
jo
mov
or
cmp
push
stos
fxch
fs
mov
dec
fwait
les
pop
shll
cld
xchg
pop
add
call
mov
mov
ja
mov
inc
push
lret
xor
clc
jecxz
push
popa
faddl
mov
ljmp
movsl
lahf
jo
imul
jmp
repz
dec
or
push
xchg
push
sti
and
call
sub
cli
lods
push
mov
mov
fstpt
and
jmp
sbb
add
push
add
ret
out
mov
mov
or
or
push
ret
clc
jmp
addr16
outsb
mov
fcmovu
or
call
mov
outsl
sbb
cmp
xor
lock
imul
and
sbb
lcall
add
sbb
hlt
pop
mov
rclb
push
stos
pop
loope
adc
mov
inc
imul
clc
rorl
fsts
xlat
push
push
jno
push
pushl
js
pop
fdivrs
mov
aam
or
ret
incl
adc
mov
and
lcall
lods
sbb
sub
or
pop
and
add
fistpl
orl
mov
mov
icebp
mov
sbb
hlt
or
add
xor
xor
cmpsb
fcoms
xchg
leave
popa
add
lods
mov
xor
cli
pop
sub
jp
or
or
shl
decl
pusha
cmp
mov
fnstcw
mov
dec
clc
imul
adc
or
bound
and
fs
jmp
sbb
es
mov
stos
es
test
adc
push
cmp
out
sub
push
lcall
fs
add
mov
jg
cwtl
subb
pop
fwait
mov
dec
das
fdivrs
adc
push
fstpt
mov
jmp
mov
enter
fdivl
in
rorl
cmp
pop
js
andl
inc
aaa
and
mov
pusha
lea
mov
in
lods
mov
jecxz
push
pop
and
adc
push
mov
test
adc
call
lcall
mov
jae
clc
lcall
lcall
andps
popa
cmp
mov
and
mov
int3
mov
ljmp
push
mov
mov
or
adc
or
cwtl
sbb
popf
dec
adc
sbb
lcall
imulb
movsl
movsb
nop
or
sbb
pop
lret
cltd
or
les
sub
decl
loopne
cmp
inc
push
xchg
pop
jb
inc
push
ret
mov
sub
mov
pushf
mov
shlb
dec
loope
lods
and
lcall
inc
or
jp
stc
xor
sahf
xchg
orb
loopne
popa
add
jo
imul
push
add
pop
jo
dec
mov
dec
jl
or
push
pushf
mov
cwtl
cmp
pop
addb
pop
clc
test
adcb
test
clc
sbb
xor
jle
lahf
lahf
mov
cld
push
cmc
jo
std
sbb
gs
push
ljmp
sar
inc
adc
lahf
or
sbb
push
sub
mov
out
shr
xchg
lahf
lcall
sub
incl
and
shlb
test
std
shrb
imul
loopne
mov
xchg
mov
adc
mov
xchg
das
or
fwait
or
imul
std
call
std
or
js
and
xchg
dec
enter
adc
test
mov
mov
or
sub
or
inc
lods
xchg
shll
and
mov
mov
jno
sar
notb
or
sar
mov
nop
mov
call
cmp
scas
sti
stos
lahf
movsb
mov
ss
fwait
cmp
adc
mov
or
jmp
xchg
fcomps
mov
mov
sbb
lods
aam
adc
sbb
cmp
icebp
pushl
int3
scas
enter
adc
xchg
loope
roll
arpl
mov
es
pop
mov
nop
sbb
jl
ret
fcomip
xchg
out
flds
outsl
faddl
cwtl
or
call
in
jg
push
push
pop
mov
cli
mov
in
or
stos
loopne
aas
repnz
das
pop
xchg
lret
faddl
push
cld
mov
inc
sbb
xchg
hlt
jg
mov
xchg
jle
repz
jns
xor
add
in
movsb
and
inc
lcall
inc
test
aad
add
lock
xchg
mov
inc
sub
movb
add
sbb
pop
decb
inc
or
lcall
mov
mov
pusha
mov
mov
incl
or
pop
sbb
enter
cld
cmp
xchg
pop
cmp
xor
mov
cli
mov
sbb
xor
push
stc
rorl
aaa
lret
add
xor
pop
cmc
outsb
stos
or
jb
in
sub
shr
sub
fsts
mov
sub
aam
adc
aas
mov
cmpsl
cmp
jb
pop
push
sub
fbld
fisttpll
rorb
sbb
xchg
shll
xchg
push
sar
jg
call
pop
jae
sub
sahf
clc
call
adc
fs
push
push
imul
mov
cmp
sub
sub
decl
add
cmpsb
cmp
mov
lcall
sbbb
jge
inc
sbb
mov
xor
pop
lcall
add
psllw
xchg
daa
js
inc
pop
hlt
aas
imul
xchg
mov
and
cmpsl
inc
push
je
jg
pusha
cmpsb
mov
mov
and
hlt
movb
xor
mov
lret
fldt
pusha
add
decl
xor
sub
jle
dec
jl
and
jmp
pop
push
inc
mov
ret
fldl
jmp
adc
decl
lcall
cld
test
outsb
outsb
popf
inc
cld
pop
bound
mov
loope
pushl
mov
in
dec
jno
aas
mov
movsb
pusha
jmp
stos
mov
jmp
adc
adc
test
jg
gs
mov
add
mov
fadds
pop
call
fnstenv
and
test
sbb
sbb
mov
aad
mov
xor
int
mov
and
lret
mov
mov
loopne
mov
cmpsb
mov
cmpsb
das
sub
jmp
loopne
inc
aad
adc
xchg
sub
sub
jp
imul
push
and
cmp
decl
aam
ud0
inc
mov
shll
and
pop
sbb
pop
sbb
jmp
mov
popa
pop
pop
shrl
popa
mov
mov
ljmp
cmp
jg
and
sti
or
rcll
repnz
xor
add
incl
enter
and
ss
out
or
add
add
shrb
jg
mov
ret
inc
lcall
xchg
mov
loope
je
pop
mov
inc
push
and
movsb
push
dec
jmp
andb
cli
dec
mov
xrelease
insb
sbb
and
sbb
leave
dec
mov
sub
enter
mov
sub
test
cmpsb
jecxz
cmpsb
arpl
decl
inc
dec
xor
int
loop
adc
clc
xlat
addl
popa
add
mov
mov
pop
mov
sbb
push
addb
fyl2x
pop
call
jecxz
jge
ss
push
ljmp
adc
xor
ljmp
mov
in
jns
in
lret
aaa
mov
dec
cwtl
loopne
mov
or
lock
rolb
rcrb
push
mov
xor
mov
out
repnz
shrl
push
cmp
mov
call
mov
rorb
or
in
mov
out
push
push
add
into
jns
push
mov
sub
cmp
fmull
stos
cmpsl
add
pop
push
pop
lock
stc
mov
add
incl
decl
add
nop
sbb
movb
mov
rorl
test
inc
loopne
mov
adcb
loop
iret
ljmp
mov
fmul
aad
pop
push
lcall
mov
call
movsl
mov
clc
nop
movsb
xchg
iret
aas
xchg
and
pop
in
test
xchg
jg
inc
or
and
push
mov
mov
fmuls
mov
and
incl
scas
rorb
cmp
xchg
adcl
pop
pop
mov
xchg
add
dec
sbb
push
cmp
xchg
lret
addb
bound
repnz
fisttps
jge
inc
repnz
movsl
xor
fsubp
pushl
or
sbb
and
movsl
pop
out
mov
cli
std
or
mov
popf
lret
push
dec
jmp
and
loop
mov
adc
and
sub
rcll
mov
add
in
xor
push
or
mov
fcomip
call
fsub
notb
sbb
pop
bound
adc
lahf
dec
jo
mov
cmc
add
ja
jmp
jle
jg
jg
or
adc
or
jo
adc
inc
fwait
subl
shll
cmpsb
sbb
insl
popa
loop
adc
mov
mov
jmp
imul
add
cwtl
ljmp
cwtl
mov
ljmp
adc
inc
sub
mov
ljmp
sub
jb
nop
inc
jl
and
inc
repnz
icebp
and
dec
jg
dec
repz
sbb
daa
lcall
fcmovb
lods
call
daa
inc
stos
sar
das
clc
aaa
jb
stos
inc
jmp
or
adc
iret
xor
lods
and
mov
jmp
rclb
inc
xchg
shll
xchg
mov
test
push
loop
mov
or
mov
add
mov
or
mov
sti
xchg
adcl
out
clc
stos
insl
mov
in
inc
push
es
pop
add
lods
push
bound
mov
stc
or
call
push
cmp
sub
adc
data16
push
div
adc
pop
cmp
cwtl
mov
clc
inc
ret
pop
cmpl
push
pop
lret
push
xor
ret
jmp
or
les
and
scas
push
leave
je
push
push
int3
fs
push
ljmp
xchg
test
out
addl
stos
scas
adc
sbb
dec
js
fwait
into
out
shrb
incl
loopne
add
xchg
adc
inc
push
andb
cmpb
jmp
mov
xor
gs
cmp
mov
test
add
lods
adc
push
xchg
xchg
lahf
mov
fstpt
mov
jg
inc
or
jns
cmp
cwtl
cmp
das
and
shrl
call
add
cltd
xor
mov
pop
loopne
aaa
gs
pop
fdivr
push
mov
or
lahf
add
and
jmp
addb
aaa
mov
pop
sub
insb
push
lea
call
cmp
bound
cmpsb
push
iret
andb
jl
xlat
movsb
std
mov
aad
sbb
ljmp
rol
cmp
loope
xchg
mov
xchg
and
dec
mov
or
pop
pop
mov
je
add
ljmp
mov
rol
sahf
jae
push
test
test
hlt
in
sub
lcall
mov
sub
xor
or
movsl
xchg
loopne
inc
scas
fwait
and
add
dec
add
lcall
xor
sub
xorb
in
xor
dec
fildll
push
mov
das
pop
add
and
mov
mov
test
sub
ljmp
mov
xchg
jo
jle
add
xor
loope
adc
and
iret
push
test
push
sub
ljmp
gs
cmpsl
into
mov
jo
add
pop
or
cmp
or
cmp
adc
xor
les
inc
fsub
subb
in
test
lcall
les
cmp
or
mov
mov
insl
fiaddl
test
icebp
inc
push
lods
cmp
and
sub
sub
xchg
xchg
dec
mov
fcomip
nop
cld
mov
cmc
dec
jge
adc
ret
incl
pop
adc
or
scas
jb
xchg
mov
push
pop
dec
call
cld
add
push
push
mov
sub
mov
sbb
pop
push
push
lods
jp
ljmp
xor
sbb
dec
mov
arpl
scas
test
div
aad
fs
insb
pop
lret
call
stos
sar
ljmp
mov
imul
mov
mov
testl
ljmp
clc
xchg
mov
adc
sarl
pop
mov
xlat
loopne
adc
icebp
testl
filds
xchg
pop
add
mov
and
lcall
mov
inc
in
jo
arpl
xor
adc
out
lahf
test
call
fisttps
adc
xor
jge
cmp
arpl
jg
hlt
add
inc
push
sbb
xchg
push
xchg
or
loopne
xor
push
xchg
cmc
sarb
addb
mov
adcl
out
push
daa
jg
ljmp
mov
push
clc
xchg
pop
lea
inc
popf
and
dec
mov
call
sbb
leave
and
hlt
adc
cwtl
and
push
inc
sbb
cmpsb
jle
inc
inc
lods
cmp
sub
call
sbb
inc
mul
jg
adcb
and
pop
js
and
jg
push
or
sbbl
adc
add
add
push
mov
rolb
mov
flds
push
add
mov
rclb
mov
push
test
sbb
pop
push
pop
push
clc
shrl
clc
lea
pop
into
inc
mov
adc
inc
ljmp
mov
push
mov
push
adc
adc
push
push
loopne
inc
xchg
incl
xchg
shll
rclb
rclb
lret
insl
leave
in
add
xor
das
jg
stos
mov
pop
inc
add
sub
pusha
xchg
cwtl
int
sub
mov
jno
loopne
adc
rolb
dec
xor
jg
mov
adc
shl
mov
cmp
shlb
nop
inc
mov
insl
roll
adc
decl
sar
inc
add
fldl
hlt
or
gs
jl
dec
rcl
jmp
fnsave
inc
xchg
pop
pop
sahf
push
call
cmpsb
sub
mov
out
loop
lods
movsb
xchg
inc
hlt
pop
add
pop
jle
out
adc
ja
ret
add
rcll
or
xchg
lahf
aas
idiv
call
mov
sti
jae
xchg
jae
in
mov
addb
mov
psubb
or
jmp
xchg
rcll
sbb
sbb
inc
xor
arpl
jg
mov
push
inc
imul
gs
daa
push
fnstcw
push
jmp
dec
loopne
dec
dec
pushl
add
jp
shrb
push
push
inc
in
call
jl
xor
ljmp
add
mov
pop
xor
xchg
call
ljmp
or
cmp
pusha
push
rol
loopne
and
cmpsb
imul
mov
out
clc
incl
loopne
and
out
push
add
mov
cmp
push
fwait
push
push
sub
mov
mov
jmp
pop
outsb
cmp
fs
lds
ret
inc
and
incl
or
daa
movsb
dec
aam
or
shlb
nop
cwtl
mov
fs
adcb
insl
xor
inc
xor
add
in
test
popa
or
movsb
inc
mov
xor
mov
mov
das
dec
sub
add
mov
jmp
aam
sub
lods
xchg
aas
jns
dec
stos
cmp
aad
lock
push
xor
adc
add
dec
insb
pusha
and
pusha
push
sbb
test
cmp
mov
dec
out
movsl
addl
mov
movsl
push
sbb
ret
adc
xchg
clc
jg
adc
xchg
add
inc
xchg
xchg
in
xor
inc
inc
pushl
cli
dec
pop
lret
or
in
adc
call
adc
in
aaa
jg
lods
jp
in
dec
cwtl
add
loop
dec
push
rcll
loopne
pushl
cltd
adc
pop
test
fistl
pop
mov
imul
inc
gs
fwait
push
adc
ja
and
lds
add
aad
xchg
lock
in
scas
js
ror
jo
mov
bound
cmp
outsb
mov
adc
sar
jmp
roll
or
pop
adc
add
cmp
fisubrl
sub
jecxz
sahf
mov
lock
out
push
das
cli
push
insb
jo
cwtl
adc
and
insb
sub
mov
xor
mov
and
sar
dec
xor
or
imul
fildll
shrl
aam
nop
mov
decl
or
out
popf
imul
push
jge
push
pop
xchg
and
mov
xchg
add
fwait
insl
pusha
push
sbb
insb
out
inc
pop
pushl
push
xorb
push
and
push
jb
and
xor
mov
pop
jp
lret
lock
sub
adc
ljmp
sbb
ds
incl
adc
sub
pusha
jo
add
xor
fwait
cmp
loopne
dec
adc
sub
rolb
mov
and
sbb
push
inc
imul
mov
es
jecxz
add
les
fisubl
sub
lods
fbstp
or
test
cmp
cmc
add
pop
or
lds
dec
push
movsb
xchg
sbb
popa
or
mov
call
pop
dec
xchg
insl
mov
rclb
addb
mov
dec
rcll
flds
daa
ss
jp
lahf
adc
test
or
xor
add
iret
scas
or
push
adc
xor
pushl
decl
clc
push
les
cmp
rcll
inc
sbb
dec
test
or
push
add
addb
mov
mov
mov
mov
cmp
and
cld
push
ret
inc
adc
cmpl
decl
shl
push
nop
incb
stos
cmp
ljmp
adc
decl
adc
jmp
inc
inc
push
cmp
imul
jge
call
test
add
test
jge
or
push
cs
shll
test
incl
and
pop
pop
jecxz
push
dec
mov
dec
jge
call
pop
pop
pop
movb
cld
lcall
fwait
mov
cmp
pop
sub
mov
or
jbe
loopne
mov
cld
inc
adc
fnstsw
and
lds
stos
add
jg
ret
pop
xor
mov
sub
sbb
add
cld
mov
xor
mov
or
aad
inc
mov
mov
dec
dec
xchg
rolb
mov
jge
addr16
out
cmp
or
jmp
nop
xorl
cmp
mov
adc
lret
inc
sub
out
cmc
in
mov
int3
inc
mov
adc
scas
sar
xchg
loope
and
in
jo
fbld
lock
mov
sbb
or
cmp
mov
mull
dec
out
cli
adc
push
iret
add
push
test
jge
jb
in
mov
mov
clc
lcall
insb
enter
mov
pop
and
sar
lret
and
popa
sar
xchg
add
xchg
sahf
leave
xchg
jg
jno
scas
cmp
jecxz
add
xchg
cmp
pushf
mov
bnd
shrb
jo
pop
pushf
xchg
lock
jae
add
push
cmp
inc
ljmp
pop
movsb
and
pop
in
pop
in
addps
xchg
das
clc
jmp
int3
cs
push
sub
mov
lods
pusha
or
clc
mov
clc
push
stc
cmp
inc
or
ret
cmp
pop
popf
add
decl
adc
push
mov
in
cli
lods
repz
idivl
push
jne
loop
cli
ja
call
std
orl
cli
scas
decl
fmul
add
sahf
add
loope
add
or
push
faddl
sbb
dec
xor
fldl
fstps
popa
enter
dec
mov
aam
cmp
add
insb
add
jne
ljmp
mov
fstpl
xor
mov
loopne
adcl
dec
adc
adc
lret
or
movsb
push
sbb
adc
bound
mov
incl
pop
or
adc
inc
andl
mov
ret
xlat
jmp
xchg
call
jge
pusha
mov
dec
xor
pop
enter
incl
mov
add
or
in
inc
arpl
nop
rorb
test
sbb
or
or
sbb
std
fwait
insb
test
fwait
imul
or
xchg
inc
lock
dec
les
jg
incl
mov
clc
push
add
je
xor
cwtl
sbb
jne
and
or
xchg
mov
rolb
adc
adc
les
dec
sbbl
cmpsb
ljmp
xor
subl
adc
orl
rclb
cli
add
pop
rol
inc
dec
enter
sarb
add
xor
cwtl
rclb
mov
adc
mov
mov
mov
pop
adc
push
inc
jns
xchg
pop
add
cld
jl
pop
rcll
call
adc
xchg
call
push
loopne
in
test
or
call
loopne
lea
scas
inc
into
shrl
subb
pusha
shrb
push
mov
pop
adc
inc
add
add
nopl
push
cld
xchg
dec
addl
push
insb
cmp
scas
loopne
inc
inc
add
outsl
dec
xor
add
fcmovne
les
mov
inc
fists
add
outsl
add
or
push
add
and
push
sub
sbb
jmp
add
add
movsl
push
or
in
dec
or
push
cs
or
push
inc
or
cmp
and
mov
mov
mov
lcall
ret
test
int
ja
rcrb
loopne
int
lods
jne
mov
call
xor
loopne
inc
add
push
adc
adc
fisttps
mov
out
mov
inc
decl
push
int3
loopne
or
xor
mov
or
in
or
ret
mov
cmpsb
mov
mov
pop
sub
in
jg
adc
in
or
push
int3
or
aam
in
adcl
rolb
stos
sbb
sub
in
sbb
xorl
fwait
or
inc
mov
fwait
or
leave
inc
dec
add
xor
inc
decb
push
shll
inc
mov
rcrl
ret
outsl
cltd
and
mov
into
xchg
lea
or
cwtl
inc
mov
aam
add
inc
sub
int
add
dec
out
pop
inc
aaa
aaa
cld
test
xor
insb
loopne
mov
cld
pop
sub
push
add
adc
pop
or
lret
clc
incl
hlt
mov
mov
sub
inc
cld
incl
sbb
mov
adc
mov
loopne
push
ja
add
insb
mov
and
pop
mov
xchg
xchg
cmp
outsl
xor
pop
and
or
dec
lock
ljmp
cli
xchg
loop
xchg
aas
andb
ljmp
adcb
fwait
push
sub
and
cli
add
cmc
inc
jo
mov
xchg
mov
push
enter
roll
jg
or
jmp
andb
sbbb
addl
lods
cmpsb
into
add
inc
fstpt
cmpsl
push
cmpsl
into
subb
adc
cmpsb
ret
mov
scas
incl
imul
into
push
data16
ljmp
push
mov
or
ljmp
adc
or
cmp
mov
jmp
es
stos
adc
mov
xchg
stos
mov
mov
loopne
addl
dec
add
mov
mov
sbb
add
and
into
lcall
popa
out
lcall
call
stos
add
dec
into
mov
adc
cmp
out
and
pop
nop
jo
inc
inc
pop
add
lcall
xchg
int3
mov
cmp
push
fadds
andb
hlt
decl
cld
or
orl
les
movsb
or
clc
jg
add
sbb
inc
sbb
cltd
or
enter
xor
adc
jg
or
cs
add
lock
push
std
incl
lcall
sbb
ret
movsl
mov
decl
lea
inc
push
dec
sbb
jo
xchg
mov
inc
sbb
sbb
fcoml
push
cmp
cmpl
sahf
adc
adc
sarl
or
mov
mov
dec
jg
xchg
es
mov
push
movsb
sar
mov
cmp
ja
addb
add
push
gs
idiv
inc
test
push
std
rol
xor
or
lret
rcr
cmpsb
enter
mov
xchg
icebp
lret
dec
sub
jo
les
scas
mov
xor
add
aaa
sar
dec
sub
daa
cmp
sub
adc
clc
push
aam
mov
xor
push
sbb
imul
sub
in
data16
pushf
fmuls
pop
adc
cmp
xchg
mov
test
int3
rorb
hlt
repnz
push
dec
jg
inc
hlt
xchg
adc
mov
jecxz
or
clc
xchg
sub
sbb
jg
sub
add
and
and
mov
movsb
push
sub
inc
add
or
jo
lret
push
jle
adc
lods
cmpsl
add
push
imul
dec
stos
imul
or
in
mov
mov
add
mov
inc
push
sub
call
test
add
mov
divl
push
sub
outsl
imul
add
lock
fisubrs
add
jl
rcr
mov
ret
push
mov
clc
call
jne
stos
xor
insl
mov
inc
jp
sub
inc
test
sub
out
cli
push
fwait
xchg
adc
movsb
imul
dec
negl
mov
ljmp
sub
xchg
stos
in
sub
enter
mov
outsl
call
std
mov
inc
push
add
cld
sbb
cmpsb
mov
or
jb
jne
pushl
cld
daa
and
sbb
aas
jl
daa
pop
inc
scas
jmp
mov
mov
mov
dec
mov
int3
lcall
mov
dec
incl
mov
or
add
test
push
xor
sarl
test
push
or
rol
push
dec
iret
inc
cmp
lret
add
xor
fdiv
scas
xor
adc
and
rolb
ljmp
mov
aam
mov
sbb
pop
sbb
adcb
push
call
or
adc
jmp
leave
lds
rorb
stos
mov
dec
enter
or
add
or
popa
test
dec
call
decl
or
popa
xor
fmul
inc
adc
adcl
mov
sbb
scas
rolb
stos
or
inc
sbb
rcr
jbe
mov
ljmp
push
test
shlb
mov
or
ljmp
mov
bnd
sti
inc
ljmp
inc
xor
mov
cmp
popa
fiaddl
mov
stos
int
shrl
push
ljmp
enter
jne
out
pop
xor
hlt
adc
pusha
ljmp
icebp
sbb
mov
ret
rcrb
push
xchg
test
sub
faddl
push
add
adc
add
aam
jo
dec
icebp
xchg
push
add
call
push
inc
dec
xchg
dec
mov
pop
sar
cld
fistpll
stos
leave
testb
inc
arpl
pop
movsb
lock
jle
inc
pop
imul
inc
popa
push
cmpsl
dec
fs
and
repnz
push
or
pop
and
sbb
or
scas
decl
ret
jb
out
mov
in
sub
mov
add
pop
mov
test
add
cmpsb
push
inc
out
mov
shlb
call
add
add
insb
inc
adc
aaa
or
out
mov
mov
out
cmp
or
std
ljmp
rol
in
fsubrs
cli
ret
add
sbb
xor
js
adc
jg
dec
cli
or
xchg
rolb
js
ret
or
and
adc
or
loopne
add
ljmp
lock
rorb
rorl
add
imul
sub
add
lret
jg
adc
lret
rolb
aaa
pop
and
clc
or
int
idivl
sub
cs
pop
mov
ror
inc
jmp
inc
adc
xchg
xor
dec
repnz
jne
test
sbb
scas
xor
push
rol
jg
inc
dec
jae
mov
addr16
xchg
outsb
outsb
or
xchg
addr16
das
push
int3
add
hlt
daa
stc
adc
int
ljmp
imul
call
jle
sbb
call
jbe
push
outsl
enter
sbb
aad
loopne
or
rol
mov
add
cli
decl
jb
repz
aaa
test
add
dec
out
mov
mov
cmp
stos
xchg
inc
jle
push
or
fcomps
pop
cmp
icebp
incl
push
dec
inc
sbb
inc
sub
sti
cmp
cli
lcall
fcomp
pop
lret
rcrb
xlat
push
inc
shlb
push
add
rcrb
fcomip
cld
inc
cs
call
inc
mov
test
sti
rcrl
adc
push
mov
lock
inc
mov
pusha
push
decl
sbb
mov
push
push
enter
incl
mov
lock
xorl
hlt
sbb
mov
incl
dec
push
lret
jecxz
mov
rcrl
cmp
lahf
hlt
dec
movsb
les
jl
pusha
mov
pop
insl
xchg
andb
push
inc
decl
outsl
rorb
mov
mulb
xor
out
incl
cld
ljmp
xor
adc
adc
outsl
adc
sub
jmp
or
jo
mov
testb
sbb
out
call
add
cmp
js
mov
dec
fisttps
pop
xor
fidivs
fdivl
add
mov
test
jg
mov
pop
mov
sbb
lods
aas
ret
addl
test
into
jo
out
cli
incl
sahf
dec
aad
inc
mov
cwtl
aas
jnp
mov
fs
test
cli
fnstsw
loop
or
push
jb
add
jmp
and
push
out
fildll
xorl
pop
or
inc
jmp
sbbl
loopne
ljmp
pop
inc
andb
dec
int
pop
push
cmp
inc
jecxz
sahf
push
sbb
inc
pusha
dec
adc
lds
sub
add
add
sbb
loop
adc
pushl
xchg
clc
cs
inc
cs
jno
gs
nop
xor
ljmp
fcomps
mov
add
add
incl
cmp
shll
xchg
pop
mov
push
orl
push
std
decl
mov
adc
sub
je
rorb
cmp
outsl
xchg
mov
je
sbb
mov
sub
imul
mov
jo
hlt
ret
lods
pushl
cmpsl
sub
insb
sbb
daa
inc
pushf
sub
sbb
or
jl
in
pop
inc
inc
cld
inc
popa
in
jno
sub
mov
or
popa
int3
push
sarl
jo
cs
ljmp
dec
jmp
jmp
fcoms
add
fdivrl
loope
lcall
sbb
jmp
icebp
sub
std
sub
pop
mov
ljmp
call
inc
cs
cmp
xor
fmuls
pop
cli
hlt
incl
mov
push
mov
into
cwtl
loop
leave
push
and
and
decl
sub
fcmove
add
mov
cld
jno
pop
call
test
xchg
mov
push
pushf
adc
je
or
push
test
loop
js
and
bound
lock
mov
xchg
inc
sbb
ljmp
jno
insb
stos
outsl
clc
mov
mov
xchg
addb
sub
xchg
inc
ja
xchg
jmp
sub
sbb
xor
aam
inc
xchg
mov
push
dec
loope
xor
sbb
push
inc
cli
pop
aaa
lcall
and
add
jge
ja
adc
hlt
sbb
jno
adc
sarb
jae
push
fcmovb
or
mov
sahf
rcl
popf
mov
mov
push
dec
ret
push
call
adc
pop
lock
jae
add
push
sub
fcomip
pop
pop
cmc
jmp
rcrl
xchg
push
std
lcall
jp
add
sbb
test
sahf
mov
sub
shll
andb
and
mov
and
push
bound
pop
cmc
call
lret
xchg
repz
xchg
push
sbb
cmp
lcall
xor
pop
sbb
lcall
imul
daa
lds
mov
mov
arpl
adc
mov
sbb
fwait
sbb
add
jg
inc
out
les
pop
out
lcall
cmp
or
mov
jl
shlb
jl
sub
js
dec
scas
jae
cmp
loop
ljmp
lods
mov
dec
out
sbb
mov
insb
rolb
mov
mov
push
add
lret
xchg
adc
out
clc
mulb
sbb
push
cmp
es
test
insb
and
fdivr
aaa
mov
add
fwait
out
mov
pop
mov
fistpl
add
icebp
inc
aaa
sub
in
aaa
cmp
fdivs
idiv
incl
sbb
inc
enter
cld
cmp
inc
pop
out
rorb
jnp
out
xor
jg
test
adc
push
test
decb
or
mov
mov
mov
dec
sbbl
js
fdiv
pop
insb
add
push
or
jmp
sbb
adc
xchg
flds
adc
scas
imul
jno
xor
pop
sbb
mov
fs
sbb
neg
jg
or
sti
rol
out
cmp
scas
lcall
int
test
push
adc
cld
mov
add
fstps
sbb
push
add
loope
int3
xchg
jg
and
inc
add
and
fisubl
inc
mov
add
cmp
push
cmc
ljmp
clc
sub
dec
dec
jnp
or
pushl
add
mov
pop
jno
pop
push
inc
cwtl
andb
push
xchg
pop
int3
cmp
cmpsb
sub
xor
out
lods
cmp
insl
mov
test
xchg
sub
dec
pop
hlt
push
lcall
fsub
or
jg
xchg
mov
and
sub
movb
jp
gs
or
cmp
jge
and
lcall
ret
test
xchg
mov
cld
roll
das
sar
sub
push
andl
inc
or
jecxz
repnz
jg
dec
or
add
or
test
addb
cmpsb
mov
add
mov
xchg
lret
rorl
pushl
test
cmpsb
add
lds
sbb
pop
insb
loope
xchg
sbb
stos
push
mov
fdivrs
inc
jl
pop
mov
fs
lds
pop
or
push
jp
xor
sbb
sbb
xchg
push
or
xor
inc
sbb
ljmp
daa
push
sbb
dec
insl
icebp
sbb
je
andb
clc
ljmp
sub
pop
outsb
addl
lcall
mov
push
aaa
mov
rorl
fldl
inc
cmp
jmp
dec
sar
mov
ljmp
jns
lea
and
cli
mov
lret
mov
jnp
roll
lret
or
incl
int3
cmpsl
cmp
cmp
jl
add
jg
test
lret
jle
call
rclb
imul
mov
or
mov
mov
popa
and
mov
stos
negb
or
lea
add
call
pop
inc
and
or
stos
push
ret
sub
mov
fwait
add
sbbl
cli
inc
aas
sub
sahf
arpl
mov
xor
inc
loop
mov
incl
addb
cmp
scas
ret
mov
cmovae
push
leave
decl
lock
scas
inc
push
cmpsb
lods
test
lods
mov
imul
dec
jns
ljmp
or
xor
xchg
xor
mov
jg
inc
sbb
sub
nop
push
seta
pop
sub
inc
or
jo
adc
mov
mov
and
out
push
lods
fildl
sbb
cmpsl
or
fadds
lds
mov
icebp
mov
xor
cwtl
nop
push
cltd
cmp
in
push
or
and
push
inc
cli
dec
or
mov
leave
cmp
icebp
scas
or
nop
nop
mov
cmp
adc
loopne
cmp
shll
adc
rcl
fsubs
jmp
test
mov
popa
or
xchg
test
mov
push
incl
dec
mov
adc
fwait
jno
mov
xorb
and
sbb
dec
adc
aad
and
pop
push
push
std
lcall
xor
push
imul
out
ret
popa
cli
lret
or
adc
insl
test
int3
inc
loopne
pop
sbb
hlt
cmp
mov
jge
fnsave
cmp
shrb
add
sub
test
xor
jecxz
xor
lock
call
sbb
cmpsb
jne
mov
xchg
repnz
call
inc
pop
and
or
iret
mov
popa
loopne
sbb
or
lock
xor
mov
inc
inc
jo
aad
enter
out
pop
sub
push
imul
inc
or
icebp
jmp
mov
or
xchg
cwtl
aas
and
test
call
fsubl
inc
sbb
add
fcomps
in
leave
call
push
out
and
incl
enter
adc
cli
or
pusha
jo
xor
lods
add
std
sub
xor
sbb
lret
ljmp
pop
and
mov
and
dec
insb
and
adc
push
imul
mov
popf
mov
push
cmp
aaa
push
call
sub
fsubr
add
in
mov
add
push
fisubrs
arpl
jg
cs
dec
sub
push
scas
inc
pop
push
addb
xor
adc
xorb
push
aad
pop
and
outsb
hlt
cltd
push
js
ss
inc
mov
and
or
push
push
mov
xchg
movsb
push
pop
lret
xor
arpl
enter
lods
fs
clc
mov
xchg
rcll
jb
sub
lahf
mov
xchg
pop
jo
sub
addl
out
icebp
push
clc
ljmp
adc
sarb
andb
addb
out
mov
dec
jns
dec
sahf
sbb
movsl
mov
mov
jae
xchg
pop
iret
adc
movsb
jmp
add
and
js
push
dec
add
pusha
dec
adc
jecxz
fs
subl
mov
add
shl
push
insl
xor
or
xor
incl
add
and
jns
sahf
sbb
loop
incl
cmp
mov
dec
call
or
jb
jecxz
ljmp
mov
add
call
cmpsb
cmp
nop
arpl
mov
or
add
subb
push
test
and
insb
jne
rcl
jecxz
adc
cmp
mov
je
test
out
incl
or
or
inc
das
in
cmpb
sbb
inc
and
mov
xchg
fadd
dec
sar
mov
and
jbe
pop
inc
cli
xchg
in
jnp
lret
inc
add
shlb
test
lock
clc
mov
stos
add
ds
push
or
push
inc
add
add
ret
je
or
sbb
and
sub
dec
mov
es
push
adc
decl
scas
or
sbbl
loop
mov
cmp
or
mov
scas
or
shrl
lret
add
or
imul
int3
test
aam
adc
or
cli
pop
dec
ljmp
xchg
mov
jmp
jo
rorl
cmp
push
inc
inc
test
push
mov
mov
cmp
decl
push
pusha
aad
push
or
rorb
mov
fmull
std
das
xor
in
add
push
aas
xor
jge
mov
push
push
jno
pop
pusha
push
lock
cmp
pop
cwtl
jno
fmull
out
inc
in
sbb
lea
xorb
std
fbstp
outsb
or
cmp
adcb
dec
and
mov
push
shrb
scas
mov
test
scas
clc
out
mov
ror
pop
pushl
divl
fwait
push
movsl
xchg
push
jmp
and
or
inc
mov
dec
inc
xchg
out
popf
fs
sub
mov
jmp
cmp
cli
xor
and
cs
into
int
subl
xor
or
imul
fldl
sbb
pop
out
or
jmp
test
xchg
ret
cmp
or
inc
movsb
call
jo
push
xor
ljmp
add
popl
jb
push
mov
in
xchg
xchg
xchg
cmp
cld
lcall
aam
mov
paddd
mov
push
and
int
call
inc
fs
jns
inc
add
inc
mov
mov
outsl
push
mov
and
and
xlat
sahf
pusha
jne
dec
xor
movl
xchg
sub
mov
mov
pop
sbbl
andb
push
xor
sub
push
sub
sbb
and
icebp
or
loopne
ficoms
push
push
sar
sbb
or
sbb
scas
or
mov
or
andb
or
mov
mov
sub
loopne
icebp
stos
cmp
mov
pusha
adc
test
int3
loop
out
cmp
or
repz
pop
and
lcall
mov
jb
push
sbb
jg
and
add
lea
aam
sbb
and
push
in
arpl
fdivrp
jg
and
addb
sbb
ret
mov
call
std
inc
lds
sub
or
pop
mov
cmp
out
mov
mov
push
enter
data16
in
out
mov
xchg
dec
lcall
loopne
mov
or
loope
insb
mov
adc
scas
cld
push
jp
adc
mov
inc
loopne
adc
mov
dec
push
shlb
lcall
dec
xor
jmp
and
outsb
test
and
mov
js
or
sarl
roll
xchg
pop
cld
movsb
inc
outsl
fsubl
cmp
fcomip
incl
call
push
xchg
inc
xor
out
cmpsb
shrb
js
shl
fs
mov
call
in
cmp
xor
and
sbb
and
ljmp
cmp
in
cmp
jle
out
or
pushf
loop
call
push
lods
jp
das
cmp
mov
mov
sub
decl
das
xchg
lret
cmp
adc
inc
stc
fisubrl
sarb
adc
push
aas
add
adc
mov
sbb
call
pop
dec
xor
sub
lcall
mov
xchg
in
rolb
loopne
dec
sub
decl
xchg
jecxz
iret
and
shlb
cmp
cwtl
roll
push
fmull
mov
push
mov
jmp
push
cmp
and
ret
adc
jg
inc
mov
test
mov
call
mov
mov
in
movsb
movlps
add
jmp
jmp
int3
repnz
dec
push
and
mov
push
icebp
movsl
cwtl
xchg
bound
int3
inc
rclb
lds
jno
sbb
popa
test
push
xor
xchg
mov
xchg
push
inc
pop
and
insb
add
xchg
mov
in
scas
pop
cmp
xchg
ss
adc
rol
pop
pop
icebp
pop
lret
xchg
pop
jg
loop
pushf
adc
push
and
insl
lock
in
inc
les
mov
test
jo
lret
xchg
hlt
adc
out
loope
xor
lcall
sub
ret
sub
data16
adc
loop
test
lds
push
xor
jle
aam
outsb
dec
pop
xor
jnp
je
jecxz
jp
xor
in
or
jg
pushf
mov
out
inc
dec
jns
mov
ljmp
imul
inc
daa
jae
sub
arpl
aad
sub
cs
pop
cmp
adc
push
in
mov
in
aaa
jle
stos
aaa
jno
rcrl
arpl
cmp
sub
ret
xchg
or
jg
or
cmp
jb
ljmp
jmp
data16
insl
or
cmc
lea
xor
dec
cld
sub
incl
fmuls
inc
mov
jmp
rclb
inc
sbb
call
xor
data16
loopne
std
adc
xchg
fisubs
xor
inc
inc
and
std
sbb
loopne
inc
cmpsb
loopne
pop
outsb
pop
add
xchg
mov
loope
mov
and
pushf
xor
push
pusha
sbb
inc
push
ret
outsl
les
call
adc
aas
outsl
scas
aaa
nop
jp
popa
jge
add
and
cli
ljmp
inc
and
inc
and
push
and
in
and
adc
negb
scas
mov
push
sub
pavgw
ret
pushl
lret
sarl
jbe
sub
sbb
out
or
fiadds
mov
icebp
mulps
adc
add
xor
clc
cltd
nop
xor
mov
sbb
mov
add
xchg
dec
mov
push
in
shrl
sar
fdivs
loopne
push
clc
stos
ret
les
sbb
and
cltd
lock
add
fisubrl
and
or
lock
ljmp
mov
int3
icebp
outsl
mull
test
adc
fs
cld
cmp
lods
and
cld
popa
push
out
mov
and
mov
or
jb
in
nop
arpl
lcall
mov
mov
adc
arpl
inc
out
or
xlat
jae
outsl
jbe
pushl
mulb
and
xchg
lea
daa
adc
mov
push
push
sub
lock
call
stc
cmp
adc
fimull
sbb
test
js
adc
out
or
sahf
mov
decl
xor
test
push
lds
lret
cmp
pop
pop
sub
xchg
jnp
mov
jmp
lock
pop
jge
cltd
xchg
cmp
push
fsts
push
lock
and
sahf
inc
cmpsb
addr16
call
lcall
je
jb
sahf
cmp
into
xor
cmp
cmp
fbld
leave
daa
add
or
cmpb
jle
push
sub
add
mov
fs
sbb
add
inc
xchg
push
push
and
cld
ror
jg
loop
sbb
adc
mov
push
mov
pop
push
pop
lock
lcall
jbe
mov
jp
add
cmp
fiadds
lods
and
jecxz
in
push
inc
inc
or
cwtl
adc
pusha
pusha
cmp
ljmp
xchg
mov
lods
roll
pusha
mov
mov
adc
mov
data16
cmp
enter
add
mov
stos
pop
inc
dec
imul
mov
adc
insl
cld
decl
mov
add
mov
lock
jmp
xchg
shl
cmp
push
jle
cmc
fwait
aaa
fs
jecxz
mov
cmp
std
insb
or
ljmp
pusha
inc
lcall
std
add
dec
bound
or
sub
mov
mov
data16
into
in
and
imul
push
pop
mov
insb
shrb
sbb
sbb
sbb
push
xchg
fwait
xor
inc
inc
add
call
pop
ret
mov
insb
and
jg
in
daa
adc
mov
inc
les
loopne
or
insb
ss
pop
outsl
mov
dec
and
incl
xchg
cwtl
and
hlt
mov
mov
into
out
in
mov
jecxz
cmp
sub
lods
xchg
sub
ret
jmp
imul
and
mov
ljmp
faddl
lock
xchg
adcb
iret
aad
jle
sbb
dec
leave
outsb
in
fwait
xchg
inc
lret
cmpxchg
cmp
stos
sarl
jg
xchg
arpl
les
fsubs
scas
fnstenv
sti
fcomip
call
push
dec
vmread
fstl
je
data16
out
push
pushf
jle
adc
rorb
and
mov
stos
jo
je
jno
mov
cld
stos
jg
inc
or
xchg
and
add
sahf
jl
stos
scas
dec
push
sbb
in
mov
in
rorb
sbb
int3
sub
xor
arpl
jle
loope
call
bound
add
add
decl
sbb
mov
decl
inc
xchg
cmp
cmp
cmp
cmp
test
push
jmp
xchg
das
mov
mov
ljmp
stc
aad
xchg
inc
ftst
dec
jns
call
sbb
or
mov
mov
xchg
loopne
jb
fdivs
and
ret
jg
sbb
mov
pop
xor
cltd
cs
shr
adcb
push
xor
pop
add
and
int3
add
push
aad
pop
or
call
enter
and
mov
inc
cmpsb
mov
inc
ret
sub
add
add
loope
inc
dec
les
cli
insl
dec
popa
jbe
push
or
push
jle
ljmp
xor
mov
arpl
sub
sub
bound
mov
hlt
mov
and
pushl
ss
dec
dec
mov
movsb
incl
lods
dec
xor
mov
bound
ret
sbb
dec
or
push
add
xor
mov
cmp
add
mov
pop
pop
inc
xor
push
inc
lds
jne
daa
call
and
std
jmp
sbb
fistpll
add
fidivl
and
sub
add
mov
add
push
fwait
mov
pop
ret
aad
fiaddl
hlt
and
ja
stos
mov
jns
add
xor
or
lahf
push
jg
xchg
fcoml
test
dec
dec
jg
mov
jnp
call
incl
inc
mul
fsubs
cmp
lock
pshufw
pop
rcrb
sarb
push
mov
clc
mov
mov
cmp
mov
or
sbb
and
mov
jo
cmp
jmp
jb
inc
push
xchg
push
test
xchg
sub
adc
mov
or
movsb
cmp
sbb
lea
xchg
dec
sbb
push
xor
or
mov
enter
test
inc
jmp
cwtl
clc
pushl
cmp
push
push
dec
push
push
dec
pop
fiaddl
ljmp
ss
mov
insb
out
inc
test
clc
fisubl
lcall
mov
xor
fs
adc
add
xchg
pop
mov
and
lock
xchg
sbb
mov
mov
sub
pusha
je
call
lret
xor
pop
mov
pop
push
test
sahf
pop
adc
test
sarl
outsl
clc
jg
enter
inc
jae
xor
pop
les
loopne
dec
adc
loopne
fcomip
into
adc
jo
aas
ret
lret
or
push
fwait
jmp
cmp
fsts
das
xor
xchg
pop
mov
push
fnstsw
mov
push
mov
arpl
pop
inc
inc
push
test
adc
mov
add
sub
data16
inc
pop
pop
jne
daa
pop
test
and
js
pop
loopne
adc
jb
add
mov
jmp
pop
sbb
insl
jno
xorb
push
cmpsl
or
sub
pop
mov
jl,pn
sub
adc
pop
mov
jo
mov
pop
imul
mov
inc
cltd
cmp
cmp
inc
cmp
inc
in
pop
push
adc
jl
and
adc
sbb
test
ljmp
mov
pop
pusha
inc
sbb
push
fidivrl
mov
adc
lahf
add
adc
addl
cmpb
and
push
clc
addl
or
inc
pop
sub
aas
xor
rcll
lock
stos
inc
push
add
xchg
dec
repnz
push
lds
aam
cmp
movsb
psubb
sahf
add
push
popa
aas
or
mov
mov
add
push
push
add
add
dec
add
into
mov
mov
inc
sub
cs
call
movsl
xchg
je
or
pusha
mov
jmp
bound
mov
call
push
cwtl
xchg
sub
or
movsl
and
dec
jmp
cmp
aam
inc
mov
fwait
pusha
stos
mov
ss
xor
xchg
ss
test
lcall
and
in
out
ja
pushl
inc
rolb
test
pop
adc
daa
jae
sbb
inc
in
invd
cmpsb
incl
cmpsb
sbb
mov
jl
sti
sar
push
bound
shlb
and
xor
iret
aas
inc
incl
lret
adc
xor
sub
add
pop
lea
repnz
aam
cmp
call
loopne
nop
mov
inc
mov
cmp
sarb
push
insb
clc
mov
mov
add
add
insb
push
ljmp
out
lds
jbe
dec
sub
push
lds
push
fcomip
xlat
add
inc
dec
mov
add
xchg
add
popf
test
dec
adc
inc
cmp
dec
push
call
cmp
xchg
pop
sbb
loopne
nop
sub
call
cmpsb
loope
daa
subl
sub
add
decl
xlat
lods
inc
addl
pop
flds
adc
sub
cltd
xchg
push
movsb
add
popa
push
adcb
in
jo
mov
sbb
mov
mov
subb
movsb
bound
std
decl
xor
popa
addb
xchg
and
push
mov
push
ljmp
push
mov
stos
aam
add
sbb
sub
cmp
mov
push
test
add
lock
mov
push
enter
call
push
wbinvd
inc
int3
iret
pop
sarl
adc
sbb
and
ljmp
adc
push
push
adc
jb
les
fucomip
or
addr16
ret
movsb
ja
test
ret
add
cmp
add
sar
or
rcrl
call
pushl
shlb
outsb
es
xor
je
loopne
cmp
mov
fldt
adc
inc
rcll
dec
stos
push
mov
pushf
sub
sbb
into
sub
out
icebp
dec
jo
sbbb
pushl
call
xchg
dec
aad
or
adc
cmp
add
test
ret
fdivs
inc
les
in
addb
jo
pop
and
pushl
adc
mov
mov
mov
pop
xchg
lea
int
add
mov
cmp
sbb
add
stos
cwtl
ss
mov
ficoml
or
push
imul
mov
leave
pop
popa
add
aaa
test
outsb
pop
lahf
push
cwtl
shlb
pushf
cmp
lock
decl
fadd
mov
mov
push
ljmp
ss
test
pushf
in
movsl
js
cmpsl
add
ljmp
mov
xchg
addb
pushf
mov
xchg
ljmp
xor
mov
popf
sbb
mov
sub
push
sub
push
scas
xchg
cmp
loope
popa
lcall
mov
movsl
add
jmp
xchg
lods
rorb
test
pushl
loop
sub
orb
roll
mov
daa
or
jge
push
fs
jecxz
leave
adc
test
lret
pop
outsl
cli
pushl
push
and
data16
adc
mov
in
mov
jmp
sbbb
mov
les
pop
inc
mov
sbb
inc
sub
test
repz
call
divb
cmp
adcb
dec
or
jle
cmp
mov
lcall
lret
hlt
xchg
movsb
adc
ret
pop
sbb
dec
mov
fisubl
shlb
sub
lcall
add
sbb
add
es
adc
sar
add
mov
incl
mov
xlat
aaa
push
fs
add
cmp
popl
sub
insb
mov
or
mov
mov
xchg
movsb
jmp
jnp
rcrl
lock
xchg
pop
push
fstps
fadds
mov
mov
or
add
jl
and
add
shl
jg
inc
inc
jmp
pusha
or
in
loopne
dec
and
loope
lcall
call
xchg
and
movsb
mov
push
mov
pusha
add
mov
mov
imul
test
mov
repnz
jp
icebp
mov
ljmp
push
daa
cmp
jo
andb
mov
pusha
iret
popa
jno
mov
mov
dec
or
mov
push
shlb
fadd
popa
or
shrb
or
call
add
add
pshufw
inc
xchg
sbb
out
mov
cmpl
mov
dec
repz
ja
imul
xchg
add
incl
push
cwtl
add
mov
xchg
mov
mov
xor
mov
pop
jnp
rclb
and
mov
incl
test
es
adc
and
in
sub
adc
in
nop
in
lods
xchg
loope
test
adc
adc
jbe
fucom
sub
mov
popa
push
repz
sbb
mov
rorb
add
dec
inc
scas
clc
mov
add
test
add
or
mov
pop
addb
mov
sbb
rcl
add
or
xor
ja
jg
adc
lret
or
xchg
and
and
push
clc
les
loope
je
lock
push
xchg
pushf
xchg
push
mov
and
lock
mov
popa
fisubs
fildll
or
rolb
in
mov
mov
inc
sahf
mov
bnd
insb
or
jno
mov
unpcklps
mov
dec
cmpsb
xor
jnp
popf
mov
js
lods
adc
ljmp
incl
xchg
sub
jno
push
xchg
push
jl
push
adc
add
testl
and
jae
push
sar
mov
or
jne
mov
aas
inc
xchg
ss
jnp
jae
call
addr16
ljmp
ds
push
les
mov
cmp
test
shll
icebp
sub
decl
pop
xchg
mov
push
mov
sbb
push
lds
jo
xor
jne
call
push
pop
adc
cmp
xor
push
push
adc
sbb
push
out
add
ds
adc
and
std
pushl
mov
daa
push
aas
pop
adc
seto
jae
pop
jg
mov
repnz
mov
int3
and
fdivr
mov
and
push
add
ss
pop
pop
ljmp
inc
sbb
repnz
bound
inc
and
jbe
sub
mov
pushl
sub
xor
xchg
adc
add
push
iret
test
rolb
adc
or
dec
rcrb
jno
jb
pop
les
jg
add
push
pop
fcmovb
push
add
mov
clc
inc
adc
lock
aas
into
roll
adc
mov
rclb
jl
and
xor
inc
and
call
dec
aaa
insl
and
jb
xor
or
push
jne
test
and
loop
mov
jp
mov
pusha
mov
test
sbb
sbbl
std
add
inc
ret
fildll
es
and
das
roll
repz
inc
jecxz
mov
popa
nop
out
scas
cwtl
and
push
sbb
sbb
std
mov
push
push
xchg
insl
dec
call
add
adc
or
jecxz
aad
jmp
cli
add
xchg
or
pop
inc
dec
push
pop
cld
push
shl
dec
dec
popa
adc
jbe
mov
fs
mov
outsb
and
mov
add
call
sub
shlb
rcrl
ret
mov
cs
sub
or
xchg
out
out
ss
popa
aas
cld
incl
cmpsb
jae
dec
pusha
or
jg
mov
add
push
loop
pop
dec
or
mov
push
pop
jns
mov
hlt
addl
incb
sub
popa
xchg
sbb
addl
jae
xchg
fbstp
dec
std
jmp
push
push
inc
adcb
jb
jge
adcb
je
daa
pop
jne
pop
jne
loopne
push
ret
add
add
pop
int3
ss
add
mov
add
push
or
insb
decl
adc
add
or
add
test
decl
mov
adc
loopne
nop
lcall
loope
or
inc
sub
lcall
jb
data16
call
pop
sbb
push
mov
add
fisubl
xchg
hlt
xor
mov
sbb
mov
xchg
shlb
orl
fistl
data16
je
jo
push
loopne
xor
or
add
fisubrl
std
fldenv
jae
inc
stos
mov
dec
adc
ret
push
sub
xchg
dec
icebp
pop
fiaddl
fs
mov
test
lods
pop
std
incl
fwait
rorl
test
scas
icebp
xor
mov
jo
je
rsqrtps
and
loope
pop
jae
push
xorb
lcall
push
inc
adc
daa
adc
divl
loopne
push
decl
or
jbe
xlat
mov
add
aad
or
mov
add
fists
sub
sub
mov
orl
jo
mov
and
and
xchg
or
into
push
sahf
lock
dec
add
push
pop
leave
bound
lcall
test
sbb
mov
jecxz
add
sbb
push
sbb
or
or
pop
cmp
push
inc
mov
pop
xchg
adc
push
add
xchg
je
cwtl
insl
push
bound
fldenv
js
cmpsl
jg
and
jmp
call
and
stos
call
pop
roll
clc
cmc
cmpb
jge
fstps
lods
cmp
xor
add
cmp
stos
invd
add
ljmp
dec
lods
sbb
jne
mov
jb
inc
lods
dec
mov
call
jne
hlt
xchg
jg
cwtl
jle
addb
pop
mov
push
adc
mov
mov
and
call
mov
es
scas
data16
xchg
and
outsl
pop
jno
cltd
push
in
xchg
in
inc
and
jo
push
mov
call
je
or
test
inc
pusha
je
incl
xor
incb
jle
push
mov
sub
adc
xor
clc
adc
pop
movsb
sub
sbb
rcrb
inc
cmp
sub
or
and
sub
xor
rcll
sub
lcall
call
jae
push
adc
cmp
mov
loopne
cli
xchg
and
ljmp
xchg
mov
fs
loopne
das
and
adc
jo
cmp
mov
cmp
sarb
loopne
roll
aam
pop
adc
and
sahf
adc
sub
cmp
mov
icebp
cli
or
sarl
pop
and
and
jo
add
and
add
add
les
add
dec
jle
aas
xchg
add
dec
xor
out
aaa
shrl
xchg
or
push
dec
enter
and
lea
pushf
dec
adc
sub
mov
inc
add
jns
in
cmp
dec
rcrb
add
cmpsl
cmpsl
push
leave
xchg
pop
mov
daa
xlat
add
push
dec
rorb
cld
pop
inc
test
addb
mov
jno
es
loopne
or
push
inc
sub
jnp
push
jge
call
pushf
pop
push
fsubp
add
sarb
imul
sub
xchg
lcall
pop
mov
or
testl
mov
sbb
mov
pop
mov
loop
fcos
incl
pusha
sar
sub
jns
ljmp
dec
dec
and
adcb
adc
xchg
pop
cli
ja
jmp
push
cmp
pop
cmp
pop
and
jbe
push
xor
jae
cmp
ret
movsl
mov
imul
sub
cmp
popa
clc
fcmovnbe
xor
xor
shlb
push
and
hlt
push
sti
call
loop
dec
mov
sbb
pop
clc
pop
lret
xor
or
clc
add
loopne
loopne
add
hlt
incl
cmp
mov
mov
sbb
and
rcll
sbb
das
nop
push
mov
sti
inc
jbe
sub
ljmp
mov
sub
das
sti
dec
das
sar
ret
push
addl
rolb
mov
xor
inc
add
dec
shrb
cmc
pop
and
sbb
dec
inc
popa
jl
nop
in
or
xchg
push
pop
mov
leave
gs
lock
shlb
cld
push
jecxz
mov
add
push
hlt
loopne
and
frstor
mov
add
or
sbb
xor
sti
ja
nop
push
mov
or
push
push
and
push
add
add
mov
jbe
xchg
cmp
add
push
cwtl
out
add
mov
movsb
xchg
lcall
mov
mov
xor
jne
cmp
mov
pop
movsl
jle
and
in
cmp
orb
adc
nop
mov
bound
adc
mov
mov
jg
pop
outsb
adc
out
push
adc
xchg
aaa
outsl
jb
push
inc
std
ljmp
inc
mov
or
add
loope
outsb
xor
ljmp
lock
jp
pop
mov
cld
lcall
mov
pop
inc
xchg
mov
mov
sub
xor
xor
xchg
push
pusha
xchg
addr16
sarl
add
cmp
daa
cmp
mov
cld
popa
jnp
arpl
fsubrl
aam
inc
sbb
lret
sar
call
lock
test
pushf
je
lcall
cwtl
mov
ret
mov
fbstp
xor
xlat
push
jl
xor
push
jg
test
push
shlb
sbbb
push
call
jb
aaa
sub
mov
ret
push
xchg
xor
mov
sub
mov
or
jnp
scas
shll
nop
les
ljmp
cmp
lcall
decl
jl
sarl
xor
pop
rorl
cmp
insb
pop
inc
clc
fwait
sub
pushf
das
jns
or
add
push
loop
xchg
mov
lods
add
xchg
adc
xchg
pop
cs
jae
jns
mov
pop
enter
dec
out
jmp
mov
mov
fcompl
es
xor
xchg
movsl
ljmp
pop
adc
xchg
addl
movsb
pop
pop
pusha
and
sti
jg
pushf
loope
push
mov
fnstsw
push
es
outsl
decl
repnz
loope
add
push
push
icebp
jne
add
scas
push
aas
push
pop
jne
add
xor
xchg
jg
nop
add
add
xchg
add
push
insl
loopne
rorl
movsb
adc
lcall
sbb
push
adc
xor
mov
mov
les
sti
sbb
xor
or
add
xor
and
push
stos
filds
jmp
xchg
mov
hlt
inc
inc
sub
clc
jmp
inc
insl
push
andl
clc
cmpsb
imul
movb
in
inc
bound
sarl
add
fstps
and
mov
push
push
xchg
jmp
shll
inc
adc
ljmp
imul
roll
int
xor
clc
pop
mov
xchg
out
xchg
out
jmp
fisubrs
clc
add
adc
jmp
push
mov
decl
ja
ret
xchg
mov
aam
jge,pt
popf
jmp
xchg
call
mov
lcall
fldl
je
ss
addr16
cwtl
push
and
push
imul
ss
cmp
dec
push
xor
fiaddl
fwait
push
push
or
cmpsb
adc
pop
dec
and
insb
pop
and
imul
mov
insb
lcall
sbb
out
jne
pop
jp
incl
inc
cmp
fistpl
jge
cmp
push
insl
cli
sub
ljmp
enter
mov
das
xor
jg
push
cmove
insl
xor
inc
ja
sub
rol
mov
xchg
sbb
xor
mov
cmc
pushl
rcl
pop
pusha
notl
orl
movsb
sub
rorb
mov
and
sahf
addb
cld
aaa
add
and
pop
inc
and
jo
pop
mov
inc
lock
xchg
mov
push
lock
cmp
mov
dec
std
lcall
icebp
les
or
xor
insb
repz
sub
pop
cltd
popa
sbb
jg
fadds
xor
jno
lods
add
push
pop
or
lcall
jmp
imul
pop
adc
push
jne
xchg
sub
aaa
jg
js
sub
and
stc
clc
call
mov
sbb
loop
stc
out
stos
ret
jno
aaa
add
movsl
pop
sub
cmp
cmp
cmpl
add
and
jge
sbb
add
mov
adc
test
mov
je
rorb
dec
add
jmp
mov
mov
or
jg
sub
jno
in
dec
push
ret
es
hlt
pop
xlat
outsl
jge
loope
inc
xlat
data16
pop
jno
jbe
rolb
rolb
and
inc
sbb
xor
pop
mov
adc
pop
out
xor
add
jmp
add
xor
test
clc
mov
jnp
jno
fildll
je
fs
sbb
jae
mov
pushf
adc
xchg
add
adc
and
cld
incl
add
mov
and
push
cwtl
jg
lock
adcb
sbb
es
cli
mov
mov
xor
jno
mov
xor
in
lret
adc
fisttpll
xor
jg
ljmp
sarb
lea
fcmovne
fwait
xchg
out
mov
mov
out
ss
inc
enter
call
push
and
mov
push
sub
mov
sub
icebp
pop
or
mov
sarl
int3
or
les
mov
fisubl
adc
pop
stos
adc
decl
or
mov
pop
sbb
pop
sbb
push
shl
scas
les
lcall
mov
fsts
ds
cld
notl
cmovo
add
pop
and
repnz
pop
int3
push
inc
nop
adc
incl
sbb
rol
ja
enter
clc
push
fistps
mov
mov
push
fmul
adc
loopne
arpl
pop
pusha
fsubrl
pop
loope
rol
sbb
pushw
test
fidivl
dec
pop
jmp
and
push
mov
xchg
push
enter
sbbl
mov
lea
in
ljmp
bound
sub
pop
cwtl
push
lret
lahf
xor
mov
push
mov
ljmp
lahf
or
sbb
iret
or
mov
loopne
mov
xchg
in
sbb
incl
pop
mov
pop
jae
dec
cmp
dec
ror
test
mov
mov
loop
lods
cmp
repnz
xor
nop
sbbl
push
clc
ljmp
or
fs
add
sbb
add
pop
jnp
jmp
pop
pusha
jnp
push
pop
pop
xor
cmp
inc
subl
mov
or
call
loopne
pop
fwait
pop
jb
add
inc
mov
pop
jne
call
push
pop
and
push
pop
jl
enter
mov
cmpsb
pop
sub
incl
and
pop
mov
imul
test
cmp
mov
leave
es
jno
lahf
fcmovb
orl
daa
loopne
xchg
sti
inc
and
sub
or
mov
sarb
popa
jl
cwtl
stc
push
repnz
ljmp
addr16
dec
lcall
mov
pushf
push
test
xor
xor
or
shlb
les
ds
xor
mov
push
rorb
sar
fisttps
shl
andl
loope
mov
cmp
sub
jmp
mov
ret
sub
lcall
das
inc
push
fstl
or
sub
aam
cmp
jne
cmp
dec
std
mov
inc
xor
nop
jbe
push
adc
or
mov
xor
sbb
pushl
out
sub
sti
or
add
xor
test
push
cld
int
adc
decl
mov
lcall
fdivr
vzeroupper
hlt
jno
sbb
add
dec
and
pop
lret
outsb
or
sbb
mov
pop
jae
xor
mov
xor
mov
dec
imul
push
xchg
mov
add
xchg
mov
jb
addr16
xchg
add
ljmp
adc
jbe
or
sub
pop
pop
data16
adc
lds
icebp
incl
int3
in
sbb
aam
aam
cmpb
fadds
sbbb
pop
rolb
insb
imul
inc
ret
mov
andl
mov
mov
xchg
sub
inc
add
mov
sub
sbb
mov
pop
adc
mov
adc
push
add
scas
sub
cmp
push
loop
arpl
mov
mov
inc
adc
ljmp
xchg
pop
sbb
arpl
sub
or
pop
mov
jb
arpl
sbb
and
sbb
and
shrl
ret
test
mov
sbb
pop
add
xchg
cmp
and
cwtl
cwtl
sub
aam
xor
dec
dec
mov
xchg
pusha
xorl
pop
js
test
loopne
mov
je
and
xchg
leave
inc
loope
xchg
inc
push
xchg
jge
ja
jns
mov
movb
sbb
popa
test
pop
pop
js
or
inc
xchg
cmp
icebp
jmp
fwait
or
cwtl
lds
dec
and
incl
mov
jl
jae
rcr
hlt
int3
inc
and
test
push
and
iret
loopne
add
lds
xchg
pop
sub
mov
mov
cmpb
incl
mov
shll
add
aam
mov
incl
xchg
add
sub
addb
jno
decl
sbb
sub
es
decl
and
mov
shll
cmp
imul
call
ljmp
clc
mov
ret
pop
cld
hlt
xor
lret
adc
sahf
in
pop
test
push
pusha
xor
or
lcall
add
pop
jecxz
and
sbb
ljmp
sub
call
adc
xchg
sbb
movsl
inc
sbb
incl
movsb
and
fsubrs
push
push
inc
pop
sbb
ljmp
inc
or
orb
inc
pop
or
mov
fs
sbb
loope
ja
dec
or
mov
mov
lods
ret
cmp
push
aaa
mov
data16
fsubrp
ja,pn
or
repnz
xchg
mov
adc
inc
jmp
dec
jo
pusha
adc
xor
test
sbb
xchg
lods
mov
orl
int
inc
or
and
xor
call
xchg
lds
jg
insl
std
dec
cwtl
sbb
aam
mov
push
pop
pushl
push
inc
pop
lock
adc
mov
dec
add
clc
decl
sbb
xchg
cmp
xchg
mov
in
js
mov
xchg
xchg
rcll
mov
xor
mov
sub
incl
dec
bound
or
sti
xor
subl
jo
jecxz
add
pushf
mov
stos
mov
jmp
stc
enter
cmp
and
test
test
fs
dec
dec
push
sub
mov
adc
cmp
or
addb
mov
bound
sbb
sbb
out
or
cwtl
jg
call
subb
loopne
dec
mov
or
and
insb
xchg
scas
mov
rorb
or
mov
sub
jmp
sub
pop
jne
mov
loop
xorl
pushf
jg
test
adc
out
add
xchg
mov
add
sub
fxch
test
test
mov
push
outsb
stos
incl
push
cli
dec
mov
inc
lock
mov
loopne
ljmp
mov
xchg
lods
out
or
push
and
lret
cmpsl
sar
mov
mov
inc
sub
mov
adcl
ss
jns
in
lock
xchg
pushf
outsb
cs
or
pop
mov
adc
out
xor
daa
fistpll
cmp
in
jp
leave
dec
repnz
add
mov
dec
pop
push
pop
test
sbb
ret
hlt
test
dec
or
loopne
inc
ss
lcall
push
or
adc
leave
mov
es
add
mov
jle
xchg
les
lcall
mov
xorb
insb
fadds
adc
call
jg
dec
in
mov
out
or
sbb
mov
pop
jnp
addr16
insb
addr16
adc
daa
fisubrl
jecxz
add
jnp
adc
ljmp
cmp
pusha
push
add
dec
stos
or
cwtl
test
dec
inc
adc
mov
and
clc
outsl
cli
sbb
mov
int
jbe
sbb
lret
shlb
imul
cmp
out
test
and
ss
ja
addl
push
jecxz
pop
ljmp
incb
stc
mov
and
jl
push
cmp
mov
scas
cli
jmp
xor
cs
push
xor
fldt
pop
in
repz
fld
cmp
lea
add
sbb
imul
ljmp
adc
or
ss
stc
push
ss
pushf
data16
imul
shlb
add
cli
nop
rclb
xchg
insl
adc
sbb
mov
cld
mov
icebp
mov
jns
outsl
lock
adc
adc
leave
and
xchg
or
outsl
xor
adc
decl
add
jge
aaa
jl
lods
xchg
jno
and
pop
icebp
or
or
sub
in
or
movsb
push
and
jl
fnstcw
xchg
dec
sbb
cwtl
mov
or
call
dec
sbb
mov
cmp
jb
out
clc
xchg
mov
xchg
cmp
mov
push
cmp
cwtl
mov
addb
add
lcall
mov
hlt
ret
insb
mov
incl
push
cmpsb
inc
xor
adc
pop
sbb
mov
fcmovu
call
xchg
les
adc
andb
sbb
sbb
pusha
add
gs
sbb
xor
or
jg
fldenv
jae
add
or
mov
xor
test
jno
in
push
or
lahf
cmp
sub
js
sub
mov
sub
rolb
mov
xchg
mov
es
call
inc
ds
jl
adcl
lcall
dec
add
add
push
lock
adc
fdivrs
xchg
repnz
ljmp
test
jl
icebp
call
cmp
add
cmp
mov
jno
aas
cmp
sar
call
mov
hlt
adc
sub
cli
mov
ja
sbb
ss
mov
ret
repnz
cmpsb
shll
dec
bound
cmp
sbb
mov
adc
cmpsb
pop
les
or
decl
mov
rclb
call
fwait
aam
mov
decl
clc
mov
ficompl
lret
rorb
mov
xchg
mov
lea
stc
mov
sti
dec
js
dec
push
fcomip
mov
inc
dec
jb
enter
je
sbb
aas
icebp
xchg
dec
loope
call
lods
dec
leave
dec
mov
lret
mov
imul
cwtl
movsl
inc
xor
sub
mov
or
mov
fs
or
fmuls
and
mov
and
inc
inc
adc
mov
and
loop
aad
incl
sarb
movsb
and
and
pop
les
int3
mov
jg
aaa
imul
int
mov
jmp
out
and
xor
inc
sbb
call
cmpl
sbb
adc
add
hlt
int3
and
stos
rol
mov
inc
decl
popa
xor
xchg
sti
lods
adc
xchg
iret
and
mov
adc
popf
xchg
hlt
js,pt
add
push
xor
xor
loope
ljmp
roll
xchg
fdivl
fcoml
adcl
subl
jne
cmp
adc
sub
pushf
cltd
or
scas
incl
fcoms
js
xor
mov
pop
loopne
idiv
mov
xor
adc
jg
cmp
sub
add
mov
sub
outsb
decl
cmp
scas
loope
and
sub
mov
pandn
pop
fadd
mov
scas
cli
incl
sub
insl
ret
inc
outsl
repnz
lret
mov
inc
push
push
push
inc
mov
in
outsb
mov
adc
aad
dec
outsb
mov
shll
das
lcall
jp,pn
xor
lahf
repnz
in
clc
stos
push
mov
mov
bswap
xor
out
pushl
aaa
repz
or
mov
and
inc
and
mov
mov
pop
enter
mov
mov
sub
xor
xor
sbb
inc
test
clc
into
and
mov
pop
sub
xchg
ss
adc
adc
ljmp
mov
pop
ljmp
dec
push
xchg
sbb
jmp
cltd
sub
in
mov
int
stc
dec
setae
lcall
inc
ja
cmp
cli
xchg
incl
js
or
sub
sahf
pop
cmpl
fadd
xor
mov
xorb
jle
cmp
cmc
movsb
push
movsw
movl
test
data16
cmp
inc
popa
pusha
mov
jmp
test
sub
push
sub
aas
js
jg
outsb
mov
int
jecxz
or
cld
mov
pop
xor
add
mov
test
jno
or
rolb
push
lods
stos
andb
sbb
sbb
pop
add
adc
ljmp
enter
shl
xor
adcl
loope
idivl
fs
call
in
sbb
lods
push
icebp
adc
xchg
push
cmp
sarl
test
or
outsl
jg
mov
popf
pop
adcl
jne
adc
fisubrl
es
adc
jb
add
inc
pop
mov
inc
test
and
mov
push
adc
mov
push
xorl
cmp
aad
pop
mov
sub
pop
fidivl
fistl
cmc
dec
cltd
pop
rolb
cmp
pushf
lcall
pushf
repnz
lds
and
insb
movsl
decl
or
mov
and
mov
scas
sarl
ss
and
ljmp
and
sbb
rclb
inc
xor
xor
mov
mov
sbb
xor
dec
mov
incl
mov
dec
mov
scas
sbb
push
cmp
jmp
mov
js
dec
rorl
movsb
push
fidivrs
imul
or
sub
inc
fwait
sub
call
adc
sbb
bound
push
push
movsb
movsb
or
adc
dec
pop
lods
push
jp
lods
mov
add
fwait
iret
aaa
jnp
pop
incl
fdivl
sub
cmp
push
jle
test
rclb
dec
outsl
cli
adc
xchg
pop
test
pop
ljmp
out
clc
lods
lcall
mov
push
add
mov
xor
stos
and
mov
add
add
cmp
add
es
add
loop
cwtl
andl
and
loop
sar
dec
jg
out
pop
pusha
add
scas
das
add
push
arpl
fistpll
or
push
add
add
xchg
inc
xor
insl
aas
mov
lret
mov
es
clc
jmp
aam
pop
cmp
xor
shrb
pop
mov
xor
adc
push
imul
hlt
fildll
cmp
in
lahf
mov
adc
dec
hlt
dec
push
cmp
sar
mov
popf
aad
mov
fcoml
xor
adc
jge
mov
iret
jge
ss
pop
hlt
incl
inc
xchg
pop
data16
push
fildll
dec
adc
pop
xchg
sbb
mov
mov
inc
mov
popa
cwtl
mov
lahf
mov
dec
std
adc
dec
jp
ficomps
cld
ljmp
ret
inc
lret
mov
insl
or
push
add
scas
add
adc
ret
jp
mov
std
inc
mov
dec
and
aad
or
test
jg
xchg
hlt
pop
xor
sbb
test
movsl
mov
mov
mov
inc
dec
sarb
in
or
or
push
add
jmp
rcll
push
mov
mov
push
adc
ret
xor
or
hlt
pushl
loope
and
or
sub
dec
jae
jne
or
aas
mov
std
add
lret
pushf
xor
dec
lock
add
cmp
inc
jae
adc
mov
or
fisttps
or
cmovb
xor
sbb
mov
je
mov
sbb
xor
lcall
fldt
pop
xor
jmp
movsl
jmp
mov
call
into
xchg
sub
pushf
into
mov
inc
repz
test
mov
fdivr
mov
push
dec
mov
mov
out
cmp
aad
in
mov
insb
mov
jecxz
push
dec
mov
call
in
jecxz
data16
mov
cld
popf
in
sahf
jg
sub
fldt
inc
adc
jle
jle
pop
scas
pushf
inc
jle
and
adc
sarl
out
aas
sbb
pop
jmp
mov
mov
test
cld
pop
xchg
cltd
mov
sarl
popf
mov
push
out
dec
aad
imulb
push
add
sub
sbbl
pop
in
sub
sub
push
cld
fmul
or
ret
call
jp
lods
popa
ret
in
push
and
sub
dec
loopne
pop
icebp
jmp
or
push
xchg
lret
lock
repnz
xor
dec
int3
call
dec
xor
rorb
stc
out
jg
or
popf
push
dec
sbb
pop
hlt
call
cmp
out
mov
adc
lcall
loop
sbb
scas
in
mul
nop
pop
andb
push
rolb
vmovdqa
sub
sub
sbb
mov
fistpl
add
jmp
pop
stc
mov
int
adc
scas
imul
dec
xor
loop
and
pop
inc
inc
jg
stc
and
stc
fs
sub
sub
int3
fstp
mov
pop
mov
andb
xlat
ds
lret
mov
in
loop
in
int
xchg
lret
mov
movntq
out
mov
clc
add
hlt
lock
lcall
hlt
repz
jmp
sahf
xor
imul
and
xor
adc
sahf
in
mov
scas
call
sbb
sbb
lcall
jno
hlt
insb
les
scas
cli
incl
jmp
lret
and
fucomip
mov
sub
or
aad
imulb
adc
push
xchg
mov
bound
jg
sbb
repz
or
or
xlat
push
mov
loopne
imul
jns
push
add
aad
int3
js
push
add
push
sbb
int
adc
add
and
sub
sbb
jg
lods
adc
ficompl
mov
lea
dec
push
je
dec
lea
xorb
jno
mov
xor
dec
jmp
jg
fyl2x
or
pusha
pop
loopne
cwtl
xor
sbb
and
orl
rolb
xor
jae
jb
jne
aaa
rclb
jg
lcall
cmpsl
pushf
pop
xchg
iret
xorl
hlt
mov
lcall
mov
hlt
pop
imul
pop
outsb
push
aaa
jnp
pop
inc
jmp
jne
incb
mov
stos
mov
push
lahf
mov
push
mov
fidivs
dec
jnp
sarb
jae
xchg
jecxz
stos
ljmp
mov
loopne
imul
sbb
cmpsb
je
pop
ljmp
xchg
sbb
mov
mov
into
lock
lcall
data16
adc
lods
mov
hlt
data16
ljmp
or
cmp
cmc
jp
not
and
add
fildll
outsl
clc
pop
cld
cmp
mov
add
mov
int3
lock
movb
decl
decl
jl
xorb
push
mov
notl
add
outsb
fst
out
mov
test
dec
jo
add
cmpsl
in
in
inc
lea
scas
pop
ror
js
call
clc
sub
pushf
cmp
sahf
mov
jns
mov
adc
adc
fld
lcall
or
mov
pop
push
push
pop
mov
mov
out
lods
and
sbb
and
setle
insl
pop
pop
js
repnz
mov
test
daa
dec
call
and
fucomi
cltd
imul
cmpsb
push
cmp
stos
movl
int
mov
push
lcall
fnstenv
ljmp
popa
leave
jle
dec
sbb
std
sbb
insl
push
stos
push
insl
lcall
das
add
lods
aam
jae
jp
xor
insb
pop
ljmp
cmp
stc
sub
xchg
lret
mov
pop
lcall
cmc
int3
lcall
cmpsb
fs
or
inc
mov
pusha
mov
fdivrp
and
jmp
xchg
pop
add
lcall
push
and
pushf
adc
ds
imul
fdivl
inc
sbb
jecxz
and
cmp
mov
filds
xchg
jg
mov
ja
inc
out
insb
mov
cmp
mov
addb
xchg
xor
adc
xchg
pop
dec
cli
inc
push
insl
push
mov
mov
jnp
fdivr
call
fistpl
out
sbb
ss
pop
sbb
jp
xchg
jmp
loope
sub
xchg
pop
addl
sbb
fsubs
push
sbb
ss
mov
incb
pop
pop
loopne
add
xor
push
inc
xchg
mov
and
sbbl
cwtl
and
nop
mov
adc
push
xchg
inc
fcoms
fcoml
ljmp
jp
fldenv
pushf
push
and
xchg
imul
cltd
add
pop
mov
inc
jne
loope
dec
inc
mov
repnz
sub
sub
sub
das
mov
adc
loopne
movsl
mov
je
dec
cmp
ret
scas
stc
movsb
pop
xor
and
jmp
enter
mov
push
dec
sub
clc
ficoml
xchg
mov
aam
cmp
pop
pop
outsl
test
sti
xchg
scas
addr16
fsubrs
pop
or
call
inc
push
or
inc
adc
enter
imul
sbb
rcrl
mov
xchg
pop
pop
mov
arpl
inc
pop
mov
mov
int
adc
jne
pop
pop
mov
loopne
push
cmp
sahf
jg
sar
pop
push
lds
and
add
inc
rclb
inc
pop
inc
add
mov
incl
jno
pushf
lret
loop
xlat
pushf
int3
out
pop
jae
vpaddd
cli
cs
clc
fst
xor
pop
xor
jb
cwtl
sub
jns
fbld
mov
push
jb
sub
mov
lcall
adc
xchg
stos
dec
mov
bound
jbe
es
popa
sarb
cmp
ljmp
fcompl
inc
in
data16
mov
sub
cmc
xchg
sbb
in
mov
pop
xchg
ss
test
pushl
sbb
cmpsb
push
dec
xchg
leave
mov
jb
sbb
adc
cli
ss
xchg
xlat
test
mov
ljmp
sbb
mov
push
add
out
and
inc
addb
jmp
roll
in
out
fisubl
dec
cli
jns
jmp
add
imul
ret
jecxz
xchg
cmp
aam
push
lcall
mov
lods
adc
sarl
pop
pop
mov
push
push
xor
pushl
cli
shll
sub
mov
cmpl
mov
pushl
jl
loop
push
xchg
push
fisubl
or
or
adc
inc
rclb
decl
add
sarl
adc
xchg
add
lea
pop
add
call
fld
cs
pushf
loop
test
push
sbb
mov
fadd
inc
gs
push
ret
in
jb
cmp
dec
mov
add
push
lods
aaa
icebp
roll
mov
mov
inc
rorl
cwtl
dec
daa
add
pop
stos
lcall
data16
jb
cltd
mov
insb
arpl
fwait
mov
rcrb
inc
mov
push
incl
es
mov
mov
subl
xor
adc
xchg
inc
mov
and
clc
sub
je,pt
inc
fisubl
push
pop
cmc
push
rolb
push
bound
inc
cwtl
call
adc
push
ja
loope
addr16
dec
fwait
int3
push
enter
and
lcall
into
lea
cld
xchg
xor
inc
and
test
out
push
ja
inc
mov
inc
je
add
jecxz
cs
mov
pushl
dec
ret
lcall
dec
push
sub
adc
mov
dec
add
addr16
icebp
test
lcall
ret
jae
imul
imul
nop
out
jnp
push
pusha
lcall
jmp
fcoml
popf
mov
mov
jle
or
add
or
mov
pushl
loope
mov
lea
cmp
pop
mov
cmp
xor
pop
pop
inc
xchg
sub
cmp
pop
sub
inc
lcall
call
cmp
mov
aas
mov
pop
cmp
push
sbbb
insb
shlb
inc
dec
orb
sub
mov
enter
dec
outsl
or
decl
lock
push
outsb
jno
push
inc
aam
mov
push
test
push
icebp
lcall
push
pop
shl
xor
stos
and
mov
adc
mov
xor
xchg
pop
orl
out
fs
enter
in
in
adc
sub
xchg
xchg
push
push
add
lret
rcrb
lret
sub
sub
or
adcb
push
mov
xor
xchg
mov
mov
xlat
icebp
adc
decl
clc
and
lahf
scas
ret
push
in
mov
jecxz
addr16
cmpb
mov
xlat
ljmp
jp
pop
shlb
push
lret
push
lcall
dec
cmp
mov
cmpsb
test
pop
aaa
subl
ret
mov
pop
mov
mov
scas
cmpsb
add
pop
adc
fwait
out
push
mov
xor
rolb
push
dec
je
inc
pusha
repz
int3
push
sub
xchg
mov
movsl
sbb
decl
bound
sbbl
lds
movsl
aad
mov
mov
or
cli
ljmp
subb
je
sbb
roll
add
in
pusha
cld
ljmp
push
mov
xchg
xchg
jg
jg
test
mov
jbe
cwtl
idivb
sub
sbb
dec
jecxz
sbb
fidivs
add
jne
shl
dec
xor
mov
lret
pop
adcb
inc
push
ds
dec
inc
add
lret
xor
xchg
addb
lea
add
call
xchg
or
add
sub
and
push
nop
xchg
xchg
sbbb
movsl
lcall
inc
and
sbb
test
dec
aas
sbb
aaa
iret
mov
sarl
cmp
dec
mov
and
rcr
pop
arpl
sub
push
jno
mov
sbb
jo
push
jb
dec
cmp
test
dec
pop
imul
repz
push
lea
push
sub
push
adc
insl
movsb
add
sub
inc
and
and
sub
cmpsl
movsb
jmp
dec
xor
lea
xor
pop
sub
std
decl
xor
lret
mov
push
push
mov
cs
sbb
mov
adc
jle
hlt
in
inc
ds
and
sbb
lods
adc
sar
loopne
cmp
xor
dec
shlb
sub
sti
stc
idivb
pop
push
inc
mov
sbb
call
push
mov
dec
dec
jae
jns
lea
pop
cmp
sub
popa
ret
popa
inc
fs
cmpsl
push
push
sbb
cmp
cmp
pop
js
iret
jns
xchg
mov
mov
sub
pushl
jecxz
cmpsl
xchg
jne
dec
scas
scas
push
cmp
or
fbstp
incl
mov
mov
test
in
lcall
mov
das
xchg
jbe
cmp
jp
subb
pop
mov
adc
cmp
inc
push
mov
inc
sub
aaa
cld
pop
mov
in
les
cmp
insl
mov
test
mov
sub
cmpsb
icebp
jg
jp
sti
mov
into
mov
decl
cmp
lcall
xor
inc
data16
hlt
push
pop
mov
daa
dec
das
sar
hlt
dec
pusha
mov
mov
std
mov
jmp
jb
jg
in
cmp
pop
aas
jae
into
xchg
mov
mov
jae
jmp
or
xor
mov
lahf
ja
mov
sarb
inc
cmp
roll
push
movsb
mov
push
jmp
jg
test
xor
push
xchg
xchg
cmc
pop
movsl
aam
scas
mov
xor
push
test
ljmp
pop
pop
loop
push
mov
mov
push
sbb
dec
iret
mov
call
mov
pop
mov
jae
xchg
xor
mov
les
sub
mov
jne
lds
sub
jne
inc
js
daa
dec
jle
lahf
popf
push
jns
incl
xchg
mov
push
mov
adc
sbb
ret
mov
xor
xchg
xchg
pop
mov
insl
movsb
cwtl
mov
mov
leave
sub
daa
sbb
mov
mov
sbb
mov
mov
test
and
enter
jg
sbb
dec
add
mov
leave
xchg
sbb
mov
incl
sbb
adc
int3
pop
pop
mov
cltd
pop
hlt
jmp
in
test
or
jle
pop
xchg
jmp
sbb
hlt
movsb
int3
sbbl
ds
scas
pusha
or
mov
mov
fdivs
lret
push
stos
fdivs
dec
and
and
jmp
mov
enter
mov
loopne
ret
pop
sub
sbb
xor
mov
xor
pushf
mov
sub
mov
push
call
movsb
int
ds
add
pop
bound
jecxz
into
add
jae
dec
push
mov
jg
cmp
add
leavew
sbb
adc
jne
inc
outsb
sbb
xor
mov
fdivrl
pop
fisttps
mov
fcomps
cwtl
push
sbb
fwait
jns
or
lods
mov
loopne
fdivrl
mov
push
in
lahf
jle
es
push
cmp
es
js
lea
adc
jg
movsl
xchg
outsb
mov
pop
mov
pushf
sbbb
clc
pop
push
or
xchg
mov
xchg
inc
clc
incl
cwtl
and
loopne
push
data16
jmp
cs
popa
test
cmpsl
loope
sbb
mov
pop
pop
sub
dec
mov
and
push
inc
or
xchg
push
pop
mov
adc
pusha
push
adc
shll
adc
bound
or
sbb
adc
pop
dec
jl
ljmp
push
cmp
mov
test
and
arpl
and
lcall
mov
adc
adc
movsb
mov
stos
test
push
jo
inc
aaa
jmp
mulb
xchg
lcall
add
add
cmp
pushl
dec
loopne
lods
mov
je
fldenv
gs
popa
addr16
dec
in
imul
addr16
in
or
cmp
movsl
inc
insl
xchg
adc
sbb
xchg
add
lcall
stos
pushf
call
ja
mov
mov
mov
mov
inc
aaa
rcl
pop
shl
dec
or
adc
xor
or
jg
jmp
cld
or
iret
sub
xor
or
jl
or
in
scas
lds
mov
movb
addb
cmc
jl
add
jle
jne
push
lret
imulb
lret
and
int3
enter
fistpll
enter
decl
aas
pop
cmp
insl
hlt
shll
pushf
repz
ja
mov
cmp
dec
mov
in
aad
roll
ja
std
inc
sbb
push
pop
and
decl
insl
mov
fdivrl
dec
mov
jae
lods
jb
jp
loop
push
ljmp
int
fdivl
or
or
add
push
push
decl
popf
inc
push
xchg
dec
repz
insb
jns
xchg
stos
jge
xor
movsl
pop
push
cmc
decl
mov
in
inc
push
xchg
mov
lods
jl
sbb
xchg
dec
incl
cmpsb
xchg
gs
sti
xchg
dec
xor
mov
jno
repz
outsl
inc
mov
or
incl
mov
pop
lock
sub
pusha
rorb
pop
in
out
pop
mov
cmp
mov
mov
or
mov
lods
lret
clc
push
add
ds
mov
jl
loop
cli
push
xchg
aaa
or
pushl
or
sarl
mov
ret
and
incl
jecxz
aad
cmpsl
xlat
lock
mov
add
cwtl
test
imul
and
sbb
mov
dec
or
pavgb
jl
rorl
leave
xor
decl
clc
adc
inc
jl
xor
sahf
clc
add
jl
push
pop
mov
dec
test
pop
cs
ljmp
or
aam
xor
pop
pop
add
mov
out
clc
decl
loope
mov
xchg
xor
jno
mov
push
insl
fs
pop
or
adc
pop
mov
adc
adc
lock
leave
dec
jb
xchg
hlt
inc
pushl
push
push
leave
or
mov
pop
leave
inc
push
loope
xchg
les
lcall
cwtl
push
test
fldenv
ja
lret
xchg
or
imul
or
ret
mov
in
cmp
lret
mov
add
xor
dec
cltd
xchg
inc
movsl
xor
cld
ljmp
out
inc
push
fwait
pop
cmp
dec
mov
inc
daa
aaa
pushl
push
cmp
xorl
sbb
fxch
in
add
out
aam
dec
lcall
push
push
sbb
jno
dec
movsb
repz
fwait
popf
sbb
jecxz
fisubs
or
mov
out
xchg
lcall
loop
je
pop
icebp
push
xchg
ljmp
push
push
sbb
jg
push
mov
idiv
and
inc
add
add
add
call
or
incb
or
nop
cmpl
shll
jmp
ds
rorb
cmp
add
adc
and
mov
and
stos
scas
mov
inc
movsb
xchg
mov
mov
ret
sbb
adc
int
add
mov
popf
xlat
mov
cmp
call
xor
call
ret
mov
mov
jnp
int3
rolb
std
ljmp
xchg
pop
inc
or
push
mov
test
aad
mov
aad
mov
call
out
and
push
mov
mov
jo
push
addr16
inc
mov
fdivr
shlb
mov
inc
insb
addr16
fcmove
adc
je
in
outsb
sbb
pop
mov
clc
incl
mov
dec
mov
sahf
test
inc
mov
or
pop
icebp
jmp
es
jns
pop
mov
outsb
cs
leave
out
lcall
rol
fsubp
pushl
xchg
rcr
pushf
jns,pn
imul
mov
popl
addl
cs
stc
pop
not
dec
es
or
mov
fcompl
ljmp
jae,pt
mov
cmpsb
and
push
sbb
stc
sbb
pop
pusha
adc
sbb
mov
bound
push
into
pushl
push
xchg
rcrb
ret
fs
pop
mov
push
sbb
lcall
push
fs
mov
dec
xchg
pop
pop
jecxz
mov
jmp
incl
push
dec
push
not
inc
mov
add
pop
mov
cmpsb
xor
push
push
aaa
xchg
ret
mov
sub
mov
add
pop
mov
pop
std
mov
push
and
ljmp
sahf
mov
push
mov
pop
mov
subb
mov
mov
mov
push
mov
fucomi
push
iret
sbb
setb
pushl
rcl
loopne
fcmovb
push
cwtl
lcall
call
std
js
adc
lcall
push
mov
sahf
xor
rorl
icebp
mov
dec
add
pop
into
fidivrs
mov
cmp
jg
cmp
imul
aam
xor
fisubrl
xchg
mov
pop
sub
fdivs
gs
jmp
fsubr
test
arpl
iret
pop
out
cmp
mov
cmp
out
jno
cmp
xchg
in
cwtl
sahf
add
jbe
dec
loopne
xchg
ret
xchg
aam
inc
cmp
cmc
ljmp
insl
in
movsl
stos
lret
mul
xchg
sbb
ljmp
rorb
or
das
push
inc
and
or
pop
jecxz
loop
jg
and
mov
pop
jae
cmp
stos
xor
fmulp
add
mov
aas
cld
inc
pop
mov
xchg
mov
push
pop
lret
mov
fmull
adc
jg
dec
xchg
mov
jmp
add
jae
or
xor
bswap
xor
daa
fistl
jl
mov
mov
pop
rcr
mov
cmc
pop
or
fs
mov
sub
mov
ja
nop
sti
adcb
test
jo
insb
gs
mov
incl
xlat
push
jmp
fs
aas
mov
fildl
cmpsb
jecxz
incl
ret
lret
sbb
dec
pushf
push
xchg
lcall
push
dec
add
in
pop
cmp
jge
mov
jnp
or
cmp
or
je
sar
incl
push
xor
aam
push
xor
mov
push
or
sbb
int3
lods
add
jnp
ljmp
dec
les
xchg
or
xor
jp
mov
mov
shll
insb
sti
mov
jge
shrb
dec
mov
fs
pop
sti
pop
or
jge
stc
sbb
pop
push
push
sar
stos
dec
jmp
ss
push
hlt
inc
scas
aad
loopnew
mov
jnp
movsb
pop
push
sub
fs
rep
adc
adcl
xor
inc
push
clc
push
dec
fdivl
jo
ja
sub
jae
data16
fsubl
sub
decl
xchg
test
adc
lret
hlt
xor
pop
or
outsl
and
xchg
xor
cmpsb
push
dec
and
xor
dec
sbb
inc
ret
pop
mov
mov
sbb
shlb
lcall
dec
clc
aaa
jecxz
les
inc
add
andl
inc
push
jl
addl
call
je
jo
jae
xchg
rcrb
dec
nop
or
mov
leave
lock
nop
popa
daa
push
adc
loop
jg
lock
push
add
or
add
add
mov
sbbb
mov
lcall
ja
mov
add
jge
popa
xchg
push
rorb
pusha
daa
fwait
jle
divb
jbe
daa
mov
ss
xchg
mov
xor
js
cmp
aam
js
ja
adc
and
incl
rorb
push
push
xor
cmp
xchg
jp
imul
pop
and
in
jle
insb
lcall
push
pop
cs
jg
out
fcoms
jne
lret
cmpsb
push
fs
pop
mov
push
mov
rcl
inc
lcall
je
add
pop
push
push
ja
mov
nop
push
les
movsb
pop
or
push
push
mov
les
loopne
cmpb
add
fs
arpl
mov
imul
mov
mov
or
clc
aam
pop
and
pop
mov
arpl
mov
callw
pop
lock
into
xchg
ret
adc
clc
pop
jb
outsb
fnstenv
inc
mov
orl
add
xchg
add
cwtl
lds
ss
or
lcall
add
jo
pop
mov
jns
fists
mov
scas
sbbl
pop
xchg
sub
sbbb
ljmp
mov
lds
push
test
ja
ss
jae
mov
ss
scas
cli
js
dec
xor
add
cwtl
int
xorb
sub
pop
js
lds
pop
cmp
inc
add
xchg
fs
mov
jne
or
aad
mov
sub
jne
je
mov
mov
lock
test
push
mov
daa
rcrb
decl
sub
add
add
fwait
xor
rolb
inc
orb
mov
inc
mov
inc
xor
test
pop
icebp
adc
dec
lcall
loopne
fistpl
adcb
mov
sub
add
lock
lods
push
idiv
mov
adc
test
aaa
lock
push
jmp
dec
push
add
add
xchg
addr16
pop
jns
adc
add
outsb
jmp
mov
push
cltd
push
scas
mov
add
ja
je
insb
push
daa
jge
testb
outsb
lret
push
into
xchg
add
cmc
mov
ret
incl
or
imul
gs
add
add
mov
inc
mov
inc
mov
movsl
rcll
jle
lds
rcll
incl
pop
ret
mov
test
into
es
pop
cmpsb
xchg
push
adc
mov
xor
call
pop
rol
mov
inc
adc
cmpsl
or
pop
lods
aad
pushl
test
pop
mov
push
pop
pop
and
xchg
imul
call
aam
loop
popa
dec
pop
push
test
mov
jmp
jmp
jo
sub
and
xchg
movsb
xchg
aam
dec
or
cmp
ret
je
cmp
ret
jno
xor
inc
sbb
sti
push
xor
test
push
xchg
cwtl
push
dec
test
jb
test
or
test
out
ljmp
and
mov
pop
sub
pushf
repz
and
enter
or
leave
sub
stos
lcall
rorb
xchg
sahf
fwait
push
push
xchg
add
inc
pusha
ljmp
insb
mov
stos
add
cltd
or
mov
lods
push
add
push
add
divb
out
test
leave
mov
and
sub
mov
sbb
loopne
push
loopne
and
cld
pushl
or
or
lahf
iret
loopne
cmpsb
cmp
mov
cmp
push
setne
cmpsb
mov
jns
jb
adc
push
mov
out
jg
jmp
movsl
aas
ss
movsl
jg
fcoms
imul
nop
and
push
adc
mov
sub
sbb
xor
dec
sbb
lcall
call
movsl
push
lret
pop
sbb
inc
test
fs
mov
jmp
into
pop
push
lcall
mov
subb
iret
push
pop
inc
mov
data16
loop
fsts
aaa
ljmp
cmp
insb
xchg
imul
xlat
push
cmp
ljmp
add
mov
pop
cwtl
sbb
jns
mov
add
ljmp
push
add
sbb
test
inc
mov
test
mov
loop
ljmp
dec
mov
pop
mov
mov
pop
or
sub
mov
test
sbb
test
inc
stos
or
pop
push
call
movsb
test
lcall
pop
sar
jmp
xlat
cmp
inc
pop
lcall
aaa
std
ljmp
cmp
mov
dec
and
xchg
clc
add
jne
nop
adc
dec
shrb
or
adc
push
add
push
lock
inc
mov
pop
loopne
shrl
loopne
mov
add
cltd
sbb
push
mov
xor
push
adc
add
jle
decl
sbb
ds
pop
mov
stos
lods
pop
and
ffreep
mov
fstpt
adc
mov
inc
es
mov
shrl
divb
xor
adc
incl
sub
xlat
mov
cmpsb
jg
je
jae
outsb
ficoml
or
stos
in
lock
or
push
and
mov
incl
addr16
aam
mov
ss
iret
cmpsb
mov
mov
cmp
leave
jne
fistl
jl
mov
je
cmp
scas
clc
jmp
decl
mov
xchg
mov
sub
xchg
test
jb
insb
jp
mov
push
mov
loopne
mov
mov
addr16
fcmovnbe
mov
dec
scas
int3
mov
flds
sahf
xor
or
rol
mov
inc
xchg
fisubl
jo
loop
or
adc
call
sar
clc
stos
je
cmp
xchg
cmp
mov
mov
inc
mov
and
mov
jb
test
popa
xor
pusha
push
lods
mov
cmp
lahf
push
dec
mov
jb
xor
decl
sti
jne
mov
cmp
loopne
ds
and
pushl
les
jecxz
hlt
or
enter
sbb
add
pop
mov
jecxz
mov
scas
scas
orl
call
jne
sub
or
add
push
jne
jecxz
and
push
add
jb
mov
pop
add
pushl
jmp
insb
rcll
lods
into
adc
lcall
pop
push
push
jmp
or
push
jbe
dec
aam
repnz
aad
arpl
inc
sub
add
bound
aad
xlat
mov
pop
fidivl
adc
enter
decl
lock
xor
mov
cmpsl
movsl
mov
test
shl
xchg
dec
sbb
jg
and
pop
int3
add
inc
push
daa
jge
xchg
mov
jb
xlat
lods
mov
jmp
clc
jl
call
mov
cmpsb
push
jmp
or
mov
dec
mov
insl
jg
sbb
push
test
mov
dec
incl
fcoml
fwait
or
mov
cmpb
mov
icebp
ljmp
sti
mov
lret
mov
adc
lds
adc
pushl
adc
pushf
mov
lahf
cli
dec
mov
sub
adc
xchg
push
xchg
xchg
lret
stc
xchg
sub
sar
divb
jne
jno
cmpsb
xor
pusha
clc
mov
pushl
jmp
iret
adc
or
sub
pop
inc
stos
cli
lods
stc
in
mov
loopne
pop
sarb
or
jno
xchg
pushl
cld
cmp
pop
fcmovnu
push
rol
adc
aam
fnsave
mov
mov
fwait
xchg
add
push
testl
add
inc
pop
inc
dec
sarw
add
push
jl
lcall
incl
jne
sbb
pop
push
inc
inc
sbb
rorb
or
mov
pop
or
push
push
add
sub
mov
add
xor
out
xor
call
cmp
inc
aaa
push
xchg
test
push
shlb
rol
lcall
and
jp
cltd
mov
inc
mov
pop
jb
jg
inc
push
inc
cmp
decl
out
in
mov
std
arpl
pop
call
sbb
jbe
out
decl
mov
std
stos
mov
inc
sti
enter
cmp
cmp
es
in
mov
cmpl
fidivs
or
and
shlb
out
cmpsb
cmpsb
daa
cmpsb
xchg
int3
cmpsb
shlb
fidivrl
xchg
lcall
cmp
mov
pop
cmp
scas
lods
xchg
mov
outsb
jbe
lret
outsb
dec
cmp
sub
clc
scas
add
add
or
or
ficoml
jmp
decb
jo
fiadds
fldl
sbb
dec
fmull
mov
ret
add
push
in
out
sub
subb
test
les
pop
into
fwait
cltd
shlb
loopne
jno
ds
inc
add
add
pop
nop
orb
inc
cmpsb
jg
call
into
add
jo
cltd
loopne
mov
mov
cmp
outsl
xor
or
aaa
fadds
sbb
cwtl
mov
add
cli
bsf
aaa
mov
jo
and
std
push
leave
cmp
or
pop
cld
mov
ja
filds
nop
lret
dec
sbb
fucomi
dec
mov
pop
dec
add
adc
test
daa
in
decl
add
fs
mov
mov
push
add
call
pop
and
push
push
insl
add
mov
ljmp
in
fisubl
jg
jbe
clc
nop
test
jbe
jnp
sub
add
fcomp
es
sub
ljmp
insl
lds
outsb
lds
or
es
outsl
cmp
xchg
pusha
mov
pushl
adc
jg
scas
jg
jl
mov
cmpsb
and
fldcw
fwait
pop
es
out
arpl
cmp
fiaddl
pushl
jnp
xor
leave
insl
jne
xchg
scas
inc
cmpl
or
loop
les
sbb
in
lret
jge
rcrb
frstor
in
add
ds
add
xlat
dec
and
inc
in
cs
jg
sub
xor
push
mov
sahf
test
jmp
cs
cli
cmp
int3
popa
dec
test
pop
stos
loope
jo
gs
enter
jecxz
xchg
leave
sub
inc
mov
inc
xor
and
pop
dec
pop
sar
add
cli
loopne
mov
or
shlb
xchg
and
jg
sub
mov
dec
test
pop
mov
xor
jne
lcall
out
add
repz
ret
test
xor
andl
jne
roll
aaa
rcl
and
mov
loop
adc
jmp
les
xor
movsl
mov
call
pop
pop
int
mov
mov
sub
jb
fnstenv
movsb
dec
push
insb
xor
movsl
pusha
add
cmp
jmp
cs
and
add
push
xchg
sar
pop
sahf
sbb
pop
xchg
pusha
adc
pop
jmp
scas
cs
shll
mov
nop
call
mov
and
or
and
mov
inc
add
pusha
pop
cmpsl
mov
fwait
jno
mov
inc
cmp
add
mov
ja
je
test
dec
pop
inc
js
loope
mov
inc
mov
jl
decl
out
orl
mov
aas
hlt
fimull
or
jg
dec
jo
mov
mov
sbb
add
adc
pop
push
cmp
repnz
cli
adc
mov
jmp
mov
pushl
mov
ds
je
mov
inc
pand
dec
setge
shr
jle
movsl
add
push
push
sarb
stos
xchg
xchg
lret
lods
or
cld
xor
int3
adc
xor
jg
push
xor
shll
pop
ljmp
orb
aaa
fsubr
orb
adc
mov
jnp
mov
pusha
jmp
sub
and
dec
xor
jmp
mov
xor
ds
int
push
xchg
dec
cmp
push
sti
cmp
push
test
pop
sub
or
sahf
mov
mov
loop
mov
and
inc
mov
adc
sar
dec
sub
dec
and
pop
ret
cmc
enter
cmp
and
and
mov
mov
xor
addl
mov
inc
or
ss
andb
jmp
cs
mov
push
popa
inc
inc
adc
clc
inc
or
jmp
andb
mov
sub
xchg
bound
and
fs
ss
mov
cmp
jmp
popa
mov
in
push
int
and
aad
push
in
mov
mov
jg
add
mov
arpl
mov
into
insl
xor
shr
stos
or
mov
or
in
inc
inc
and
jg
call
mul
inc
popa
aas
divb
std
mov
lods
fsubrp
rolb
stc
lret
outsl
mov
cld
xor
decl
ret
negb
leave
jmp
mov
inc
cmc
cli
xchg
xor
pop
test
fstpt
movsb
cmp
repz
xlat
push
popf
mov
clc
nopl
pop
int
push
cmp
sub
cmp
inc
or
inc
pop
cltd
je
shlb
loopne
call
xor
int3
loope
inc
xchg
xchg
add
cmc
int
cltd
push
xor
cmpsb
mov
xchg
or
mov
outsl
incl
add
aaa
cli
fldenv
andb
mov
lcall
loopne
jecxz
dec
dec
movsl
aam
dec
push
int
adc
lahf
xor
insl
in
aas
push
dec
pop
dec
push
xor
idiv
sub
push
adc
out
pop
les
addb
test
inc
push
and
inc
push
xchg
add
xchg
push
push
jp
ljmp
jg
imul
inc
adc
mov
in
cmp
push
dec
scas
movsl
lods
lahf
sar
lcall
orb
inc
stos
add
test
inc
test
sub
pushl
loope
mov
ret
push
mov
cs
cmp
adc
ljmp
nop
mov
movsb
pusha
adc
test
xchg
nop
add
add
or
aaa
inc
shrb
inc
ds
rorl
outsb
sbb
jg
add
mov
loope
std
mov
inc
test
inc
mov
loopne
push
lods
xor
and
call
or
ret
jo
jbe
jge
lea
imul
dec
decl
loop
or
mov
scas
jno
inc
mov
mov
addl
inc
or
mov
ds
in
inc
outsl
jmp
push
mov
cli
xor
xor
dec
lcall
inc
sub
fisubl
je
je
jecxz
not
cmp
mov
lahf
xlat
jmp
lcall
push
cltd
repz
pop
in
pop
addl
dec
pop
adc
clc
movsb
add
jg
or
sahf
icebp
or
jg
pop
jl
fdivp
lock
or
pop
xor
cmpsl
scas
inc
add
mov
popa
lock
cli
in
mov
sub
jmp
adc
or
mov
push
nop
dec
push
xchg
cli
ljmp
adc
push
pusha
inc
dec
test
mov
adc
jmp
push
stc
aad
inc
dec
stos
push
xor
push
and
push
fwait
inc
ljmp
lret
xorl
push
add
adc
aam
dec
pop
sbb
subl
call
inc
cli
pop
xchg
and
xor
call
dec
decl
jecxz
mov
daa
ljmp
lds
cmp
cwtl
mov
loope
loop
loopne
test
and
std
inc
push
jp
outsl
mov
std
decl
adc
push
xchg
sbb
and
pop
add
pusha
ss
rclb
lcall
or
incl
dec
lea
jbe
outsb
int3
nop
mov
insb
clc
cmp
int3
jae
aad
inc
outsb
lcall
and
cmc
loopne
insl
cmovb
negl
mov
inc
mov
or
mov
jecxz
iret
loope
daa
mov
rep
outsl
or
add
leave
call
and
out
xchg
jae
lcall
cmp
divb
jne
sbb
pop
add
stc
movsb
dec
xchg
cmpsl
xchg
popl
lods
mov
pushl
fcompl
faddl
cmp
pop
xlat
push
sbb
loopne
inc
add
sub
outsl
dec
pop
insl
adc
mov
jns
sbb
rcll
pop
mov
sub
push
xor
loopne
rcrl
jp
adc
test
clc
jg
enter
sbb
dec
sub
rcrb
and
aad
outsb
cli
outsb
mov
cld
jecxz
dec
dec
sub
xchg
inc
cmp
and
aad
dec
mov
pushf
mov
test
stos
xchg
mov
rcll
mov
sub
pop
nop
or
decl
daa
add
add
movsl
xor
stos
sub
adc
addr16
insl
xchg
push
shl
lcall
adc
push
dec
push
mov
and
pusha
mov
in
incl
sbb
iret
xchg
inc
inc
mov
mov
lret
incl
cwtl
sbb
and
xchg
ret
cwtl
add
inc
lea
sbb
inc
shrb
lea
mov
pusha
test
xor
js
mov
loope
in
inc
cmc
leave
pop
stc
sbbb
popf
mov
jg
cmp
mov
sarb
mov
movsl
inc
fbstp
lods
int3
shlb
ret
jae
out
mov
lcall
out
lods
push
xor
data16
cmpl
fwait
dec
adc
cmpsl
ss
jns
jecxz
hlt
incl
inc
fwait
cmp
int
mov
dec
cmp
aaa
lea
and
push
push
mov
lds
movsb
rsm
jg
ret
adc
movsl
loope
xor
jno
lret
out
or
adc
scas
lds
push
hlt
test
dec
enter
xor
loopne
xor
pop
movnti
clc
loopne
sub
in
jmp
and
outsb
sbb
add
xor
shrl
lcall
gs
sub
data16
stos
mov
pop
mov
pop
aas
inc
cmp
and
lahf
pop
or
jle
fldl
xchg
fidivs
and
jb
xchg
pop
adc
arpl
jecxz
test
or
sar
inc
sub
dec
imul
insl
pop
loope
ljmp
inc
test
iret
sti
push
loopne
adc
cmp
ljmp
add
add
cmp
rcrb
adc
sub
les
dec
and
sahf
je
jno
lea
mov
scas
fiaddl
push
ffreep
pop
mov
add
sub
fcomps
add
pop
popa
in
clc
data16
pop
cltd
pop
hlt
ja
jg
adc
imul
sbb
jmp
mov
mov
call
stc
mov
inc
xchg
xor
stc
cs
push
cmp
push
popf
div
cmpsb
dec
popa
mov
cmp
add
fnstcw
mov
pushf
xchg
imul
xor
out
push
adc
lods
mov
sbb
mov
mov
dec
loope
ljmp
inc
sbb
mov
or
pushf
adc
decl
cmp
sub
sahf
lret
inc
push
dec
adc
adc
imul
mov
jmp
test
mov
ret
fists
call
push
mov
sbb
sarb
sub
mov
cltd
adc
decl
pop
push
adc
mov
push
xor
rorl
and
call
loop
scas
mov
mov
xor
lret
mov
cmp
arpl
mov
arpl
dec
and
mov
nop
out
pop
xchg
xlat
ret
cmpsb
ljmp
repnz
adc
mov
decl
andb
mov
das
push
cmp
pop
or
shll
mov
xchg
xchg
sbb
jg
jg
sbb
inc
test
mov
dec
or
and
mov
ds
clc
push
mov
mov
mov
popl
popa
inc
insl
lcall
fs
sbb
movsb
inc
dec
movsb
imull
fcomps
and
aas
jo
sub
das
clc
incl
jo
and
push
or
roll
sbbl
add
movswl
leave
icebp
call
fdivrs
adc
mov
hlt
push
cld
lcall
adc
mov
jecxz
xchg
inc
jmp
jmp
daa
push
cmp
sub
sbb
pop
mov
mov
push
sbb
add
das
call
cmp
je
push
add
mov
das
cmp
call
add
pusha
sub
adc
xchg
cs
xor
call
cltd
push
jb
lret
sub
cwtl
sub
mov
cmc
mov
enter
or
push
cmp
jmp
mov
xchg
cmp
mov
add
xor
cmpl
sub
dec
pushf
mov
ss
dec
lods
or
call
cmpsb
or
pop
andb
imul
fstpt
dec
leave
xchg
inc
and
push
sar
into
pop
mov
jo
mov
jge
test
ror
test
cld
into
add
or
dec
orb
xor
add
adc
inc
dec
lods
pusha
fcomip
ljmp
cmp
fs
cmc
sbb
and
xor
int3
mov
xorl
incl
repz
mov
add
and
andl
test
jmp
dec
adc
test
bound
mov
jo
ss
fldl
insb
dec
sti
pushl
lods
mov
add
fldl
add
mov
sbb
orl
in
mov
add
subb
sbbb
mov
inc
pop
shrb
add
cmp
mov
inc
enter
cmp
push
fcoms
ds
das
jg
cmpsb
rclb
jl
inc
dec
mov
sub
in
inc
inc
cmc
fistps
or
or
fsts
pop
jb
xchg
adc
push
pop
sbb
std
adc
lret
push
cmp
lcall
popf
and
fstpt
test
imull
call
xor
lret
enter
int3
das
jns
fwait
and
jge
pop
adc
push
inc
add
jg
sub
sub
dec
adc
aad
ljmp
mov
xchg
ret
mov
add
push
enter
rolb
add
sbb
cmpl
sbb
int3
mov
test
sub
dec
loopne
jb
sub
dec
imul
fldenv
mov
pop
shlb
dec
mov
push
sahf
adc
xchg
inc
mov
cwtl
repnz
stc
cmpsl
mov
scas
cli
dec
fcoms
lock
add
jmp
or
mov
push
jmp
insl
in
insb
call
inc
insb
mov
ltr
call
nop
aad
cmp
add
pusha
mov
cwtl
int
xchg
insl
fnstenv
test
sub
push
push
or
or
ljmp
test
cmpb
rcrb
sarb
jge
outsl
incl
and
adc
fisubl
test
cmp
cmpsb
cmp
cmc
andl
ljmp
xor
inc
pop
scas
or
daa
ljmp
mov
sbb
mov
adc
mov
push
mov
sub
fdivl
nop
enter
les
push
add
loopne
inc
loopne
ljmp
cmp
rcrb
aam
xchg
out
shrb
lods
cmp
sub
lcall
mov
lret
dec
aam
sub
and
out
pusha
das
add
das
mov
push
cld
fimull
mov
cmp
push
mov
xchg
mov
psubd
in
lcall
hlt
add
and
lcall
mov
rclb
lock
dec
into
and
sub
pop
subb
sbb
repz
cld
push
sub
mov
or
repz
adc
lcall
adc
dec
jnp
das
mov
das
inc
add
clc
sahf
rolb
mov
ss
inc
cld
aas
fadds
shlb
adc
or
add
inc
pusha
aas
clc
and
sub
pop
sub
push
outsl
aad
nop
add
push
dec
lcall
inc
inc
mov
xlat
mov
test
stos
les
sub
push
std
jnp
stos
pmaxub
xchg
imul
push
or
lret
push
shlb
mov
pop
xor
xor
loop
enter
push
cld
mov
or
adc
mov
inc
mov
pop
or
jae
sub
add
push
cmp
fs
mov
bound
subl
bound
idiv
mov
xor
pushl
out
bound
arpl
roll
sub
sbb
adc
insb
loop
add
push
push
clc
or
xor
jle
or
test
inc
push
popa
inc
rolb
sahf
orb
push
or
in
loop
nop
add
frstor
push
orb
bound
subb
add
fs
aas
or
daa
push
jle
push
sub
in
pop
jg
ffreep
push
mov
pop
incb
pop
pop
scas
fistpl
pop
andb
pop
push
out
clc
incl
dec
fadd
mov
lds
xlat
js
pop
or
sub
push
mov
fmul
std
mov
adc
add
incl
or
int
daa
sub
mov
sbb
mov
out
adc
sub
push
mov
mov
jle
push
push
mov
mov
pushf
jne
cmpsl
call
decl
sahf
movsb
pushf
jae
cmp
pop
imul
rorb
out
hlt
into
add
popl
add
adc
scas
sbb
mov
or
idiv
aad
sbb
lock
mov
addb
push
cli
jmp
add
push
pop
push
xor
andb
pushl
int3
add
xchg
xorb
adc
cmp
cwtl
je
xlat
push
pop
xlat
pop
xchg
in
decl
stos
or
jnp
into
mov
mov
push
imul
or
jecxz
adcb
fcomi
xor
aad
cmp
xchg
or
pusha
movsl
ficomps
aad
xchg
or
jg
js
and
int3
into
insb
int3
sahf
push
sbb
into
out
or
in
iret
imulb
clc
lcall
jne
or
xor
dec
sub
jecxz
loop
js
outsb
add
mov
dec
pusha
pop
add
mov
add
cmp
fiadds
stos
fimuls
icebp
pushf
pop
xchg
sub
and
gs
jle
sub
pusha
in
enter
clc
js
rcr
out
jmp
in
push
test
js
sbb
add
ljmp
es
hlt
inc
out
pop
mov
mov
pusha
les
mov
push
out
adc
mov
in
ljmp
mov
popf
inc
insl
ret
sbb
nop
mov
push
mov
sub
decl
movsl
jmp
daa
mov
inc
mov
xor
mov
xchg
sub
or
adc
stos
mov
pop
aam
add
ret
adc
lea
and
out
jg
and
and
std
and
in
stos
fs
scas
and
jb
imul
fldt
xchg
and
cmpsl
jle
dec
xor
mov
cmp
pop
push
arpl
mov
sub
lret
mov
filds
add
scas
and
cmp
push
cmp
and
sub
call
pop
shrb
pop
fadds
repz
sub
sahf
ficompl
decl
lcall
push
pop
jle
mov
xlat
mov
mov
int3
lods
jle
cwtl
hlt
mov
repnz
add
lock
addr16
lcall
adcl
mov
loop
loopne
sub
lahf
cld
decl
mov
xor
xchg
shr
sbb
push
andb
bound
bound
testb
add
out
dec
adcb
jecxz
shlb
sub
and
xchg
cmp
add
inc
and
addb
mull
adc
das
xor
add
in
dec
fildl
adc
fadds
xchg
je
loopne
mov
in
test
aas
cwtl
test
cmp
clc
outsl
jg
jo
imul
lahf
xchg
add
loopne
lock
repnz
clc
ljmp
out
daa
push
pop
jbe
les
call
aaa
scas
imull
mov
out
xor
mov
ljmp
add
jo
ret
push
add
ljmp
adc
sysenter
jne
push
jmp
out
ljmp
push
mov
jp
adc
adc
test
nop
andl
lock
outsl
into
mov
call
pushf
imul
pop
sbb
push
push
into
dec
mov
dec
add
jb
sahf
daa
xchg
cs
push
xor
and
daa
pop
shlb
outsb
or
push
cmovle
push
cld
lahf
sti
xchg
cs
xor
push
jns
mov
pop
xor
xchg
mov
push
pushl
mov
shlb
pusha
shrb
mov
fidivrs
cmp
add
loopne
js
hlt
or
orl
imul
mov
push
std
lcall
mov
add
pushf
push
loope
cmp
outsl
pushl
or
pusha
test
sub
cld
and
stc
in
cmpsb
jmp
ljmp
icebp
push
das
inc
cld
dec
test
add
call
cmp
insl
icebp
ficoml
xor
ret
sub
xor
add
adc
cmpsb
popa
mov
popa
mov
fsubrs
xchg
lock
adc
inc
lcall
lods
fs
lcall
cwtl
dec
and
insl
andl
adc
or
pop
lcall
dec
jo
or
sbb
int3
mov
xor
addr16
jmp
mov
bound
inc
lods
ret
mov
push
jge
call
movsl
cmp
sbb
jle
int3
mov
pusha
and
dec
xor
in
in
or
shll
es
jmp
jns
mov
push
jne
mov
cmpsb
int
loope
push
dec
xchg
movsl
call
xor
xor
push
cmpsl
ljmp
clc
das
and
jmp
cmpsl
sub
pusha
pop
stos
sbb
or
in
test
jle
call
movb
ds
add
mov
mov
sbb
mov
cmpb
mov
xchg
mov
stos
ja
mov
mov
jge
repz
mov
or
mov
fistpll
xor
mov
xor
loope
incl
pop
cmovbe
pop
adc
and
cs
xor
jg
mov
adc
enter
and
jl
rolb
jg
lods
call
mov
or
xor
cmp
lret
scas
call
fldt
inc
inc
sub
sub
pop
mov
adcb
es
sar
icebp
or
or
mov
jmp
cltd
bound
xor
cmpsb
fwait
insl
mov
fmuls
xor
icebp
lcall
ds
fldt
test
push
jns
incl
lret
inc
lock
dec
cmp
call
clc
ja
ljmp
ds
or
push
cwtl
inc
mov
mov
inc
and
add
pushl
mov
rol
mov
add
push
stos
into
sbb
mov
push
mov
ljmp
in
scas
shll
insl
xor
inc
call
ficomps
sahf
or
jne
cmp
out
mov
out
adc
mov
test
enter
and
jg
jmp
decl
rcrl
cmp
or
les
xchg
andb
dec
fbld
fbstp
inc
int3
adc
xlat
adc
sbb
in
ljmp
xor
dec
and
test
mov
pop
push
shrl
jg
sub
pop
and
arpl
nop
nop
dec
pop
push
ljmp
or
dec
loope
pop
adc
and
adc
adc
nop
incl
cmp
call
insb
mov
jb
jno
adc
lock
out
clc
adc
insb
add
cmc
rolb
daa
test
ret
inc
xchg
sub
cwtl
mov
decl
ret
movsl
push
sbb
add
dec
xor
dec
aad
rclb
les
push
decl
xchg
pop
insb
aaa
in
mov
insl
aaa
sub
mov
les
sahf
stos
jbe
adc
add
jmp
push
mov
addl
push
cltd
inc
inc
or
cmp
pushl
aad
fidivs
imul
cmpsl
push
xchg
cmp
inc
pop
repz
loope
pushl
jg
xchg
add
cmp
addr16
mov
fcomip
fcomip
in
dec
es
aaa
dec
in
sub
sahf
out
cli
jmp
pop
lcall
and
clc
loop
cmp
test
push
inc
mov
lahf
xchg
xchg
in
sub
lock
jmp
pop
lods
and
cmp
mov
pop
xor
add
andb
dec
bound
push
pop
adc
lds
dec
ja
popa
or
push
cmp
push
outsb
jg
dec
inc
mov
cld
popa
or
adc
xchg
add
and
and
mov
fcomip
sbb
inc
dec
dec
mov
loopne
push
xchg
rolb
sub
push
sbb
mov
stos
mov
xchg
lods
stos
and
ljmp
lds
stos
mov
aad
and
jmp
fdivl
mov
and
pop
jne
push
xor
jne
jb
jmp
outsb
push
mov
clc
call
xor
mov
xchg
cld
in
les
andl
xor
xor
xchg
pop
dec
jg
popa
movsb
xor
arpl
mov
xchg
or
call
jmp
jno
sbb
xchg
xchg
and
adc
es
or
lcall
sub
dec
cwtl
add
roll
nop
inc
add
rolb
movsl
pop
inc
or
inc
adcb
ja
sarb
xor
push
adcb
and
dec
mov
sbb
decl
lock
or
pusha
mov
push
ret
mov
jno
and
pusha
and
aaa
loop
decl
and
adc
int
mov
inc
fiadds
add
mov
mov
cltd
ret
mov
enter
xor
dec
xor
ljmp
repz
popa
out
push
inc
push
pushl
and
call
xorb
out
dec
inc
in
push
sub
ret
inc
jns
mov
insb
xlat
cmp
push
out
add
cmp
jmp
inc
add
xor
mov
mov
jnp
test
dec
dec
dec
incl
or
and
inc
mov
fcomip
lcall
sub
dec
rcl
shl
sbb
push
scas
in
jmp
stc
aam
mov
xchg
hlt
lcall
mull
xor
bound
movsb
mov
lcall
imul
inc
js
imul
mov
mov
push
cmpsl
adc
call
pop
xor
pop
and
dec
ljmp
jmp
insl
lahf
mov
out
add
aad
push
sub
cli
movb
call
ljmp
test
subb
sub
imulb
sar
pushl
mov
xor
pop
fmull
lods
imul
pop
sbb
jo
mov
nop
cli
jmp
inc
add
push
mov
xchg
pop
mov
addl
clc
jb
aad
add
inc
dec
push
mov
call
jle
xorb
or
dec
mov
cmpsl
push
mov
jo
sbb
incl
fdivr
mov
and
inc
jbe
aas
inc
rorb
lock
adc
jmp
add
ret
and
jp
out
xchg
movsb
mov
pop
push
mov
out
leave
pop
pop
xorb
xchg
dec
mov
and
roll
out
lcall
xorb
dec
push
rcll
aam
dec
jecxz
mov
and
adc
mov
shlb
sarb
mov
adc
mov
cmp
call
pusha
loope
mov
pop
add
xchg
loope
lea
mov
incl
adc
mov
pop
mov
pop
cmc
mov
xchg
ret
xlat
inc
sub
cmp
dec
xor
fcoml
jg
movsb
push
lock
bound
addl
mov
aaa
repnz
jg
jl
and
adc
pop
insb
mov
addr16
enter
pop
or
push
or
pushl
and
lods
dec
scas
inc
mov
pop
mov
decl
decl
cmp
pop
std
push
and
mov
stos
push
dec
std
inc
mov
mov
sbb
out
push
jno
sub
lods
test
seto
pop
adc
push
movsl
hlt
decl
pushl
andl
or
fnstenv
cmp
jp
into
pop
aas
and
add
loopne
stos
inc
or
xor
adc
aam
jl
mov
loop
sub
inc
jmp
xchg
push
xchg
cli
loope
loopne
cs
adcl
add
ja
rcr
jne,pn
into
ljmp
arpl
stos
lea
and
lret
sub
stos
mov
stc
fcomps
mov
mov
in
cmp
xor
cmp
push
sbb
test
cmp
cli
inc
fmuls
and
or
inc
leave
mov
push
pop
cmc
dec
jo
xor
test
mov
mov
stos
loope
mov
fsub
adc
js
inc
aas
jl
add
xor
cs
jmp
popa
or
mov
adc
pusha
mov
adc
lods
fcomip
out
and
daa
jo
or
adc
mov
dec
inc
popa
pushf
jecxz
cmp
cli
add
mov
or
std
push
adc
xchg
and
mov
xchg
clc
xchg
sbb
std
incl
sub
xchg
adc
ror
inc
stos
out
jg
add
or
sub
aaa
movsl
or
call
xchg
aam
es
mov
incb
aaa
sub
decl
les
or
ds
clc
or
clc
incl
sbb
or
add
mov
nop
or
mov
add
adc
xchg
test
dec
or
enter
mov
stc
jl
mov
adc
sbb
add
fs
leave
cmp
pop
mov
scas
call
xchg
lcall
push
pop
push
arpl
mov
nop
mov
leave
dec
shll
incl
sbb
and
or
pop
mov
push
mov
cwtl
test
rolb
aaa
cld
inc
es
mov
ljmp
cli
dec
pop
dec
mov
rcll
dec
or
mov
fsubl
dec
push
sbb
cld
or
inc
cld
jmp
shlb
lret
adc
pop
add
ret
cli
jg
shlb
and
mov
lret
sbb
xchg
leave
pop
mov
dec
inc
xchg
mov
mov
scas
pushl
xlat
xor
fstp
or
sbb
fmuls
xchg
or
add
incl
mov
fisttps
dec
cmp
int3
ret
push
insb
push
inc
popa
dec
xor
add
add
sbb
dec
adc
ljmp
orl
scas
pop
js
sarl
add
rclb
lds
pushf
pushf
cmp
mov
push
cmp
pop
mov
add
ret
inc
xor
loopne
clc
inc
subb
pop
and
add
mov
fnstcw
inc
sbb
and
inc
push
cli
call
sahf
dec
add
fisttpll
fstp
cmp
jmp
ret
xchg
add
mov
inc
mov
add
lcall
mov
sub
pop
dec
insl
fadds
jb
add
cmp
sub
or
dec
sbb
pop
xor
orl
jo
add
or
dec
nop
ds
mov
syscall
rorb
sub
add
mov
sbb
add
paddw
push
dec
std
xor
pop
movsl
pop
xor
mov
call
pusha
mov
mov
or
fwait
mov
inc
mov
cld
and
mov
jg
rcr
push
and
leave
jb
or
hlt
call
push
mov
leave
jg
dec
pusha
inc
and
jge
decl
push
push
cwtl
les
mov
push
mov
mov
adc
mov
add
scas
xor
mov
enter
adc
jmp
mov
adc
leave
push
or
adc
mov
cld
and
shlb
loop
sbb
and
shlb
ljmp
sub
mov
fnsave
mov
cmc
xchg
popf
add
xchg
out
mov
rolb
sbb
or
adc
mov
sub
shll
insb
sbb
js
jmp
pop
clc
fdivrl
les
loopne
push
dec
sbb
inc
call
mov
daa
repnz
andb
inc
xor
add
or
hlt
inc
sbb
sarl
cmp
or
cld
scas
adc
daa
nop
rcrb
add
or
push
repnz
pop
dec
pushl
popf
test
adc
cmp
xor
es
push
popa
pop
push
adc
sti
jmp
inc
incl
adc
cwtl
cltd
xor
cwtl
mov
or
mov
add
fnstcw
xor
sub
push
mov
subl
adcb
dec
jb
in
gs
lcall
cmp
test
enter
cmp
and
sub
push
ljmp
sbb
fwait
add
dec
ljmp
mov
xchg
xchg
and
or
pop
repnz
fsubs
sbb
jl
lcall
jmp
sbb
and
iret
sti
cmp
xchg
xchg
fs
push
sbb
and
or
sarb
in
loopne
sbb
test
inc
dec
test
aad
or
mov
iret
mov
mov
gs
ljmp
data16
pushl
leave
pop
mov
cmp
push
lret
push
inc
or
or
adc
and
pop
cmc
lcall
jle
mov
jmp
cmp
fcompl
das
dec
in
mov
out
pusha
sbb
hlt
loopne,pn
jb
fdivl
adc
ljmp
frstor
popf
rclb
and
pop
jne
mov
shll
dec
pop
popf
push
cli
xchg
popa
std
jg
adc
and
jge
sarl
loop
jg
sbb
int3
add
sbb
sbb
aad
mov
fucomp
lods
and
sub
loopne
jg
jmp
rclb
sub
add
cmp
sahf
push
dec
int3
pop
dec
hlt
pop
xchg
mov
decl
jecxz
add
cmp
cmp
or
jg
cmp
pop
jns
daa
push
cs
adc
cmp
cmpl
addb
xchg
xor
clc
mov
pusha
sbb
sbbb
adc
movsb
add
jl
xor
inc
dec
add
clc
int
ljmp
and
add
les
mov
xchg
cmp
push
inc
dec
addl
out
test
jg
movsb
mov
dec
movsl
xchg
push
sbb
ljmp
loopne
mov
or
lahf
lret
sub
stos
out
bound
cld
dec
lock
cwtl
and
xchg
adc
mov
pushl
decl
cmpsb
out
mov
ljmp
mov
stos
es
hlt
xchg
fwait
incl
xchg
cmpsb
scas
ljmp
pop
push
sbb
dec
mov
xchg
jb
push
jge
jnp
sbb
decl
clc
pop
bound
mov
dec
cwtl
loope
aaa
movsb
pop
dec
inc
std
dec
stos
test
leave
mov
adc
mov
jo
mov
jg
add
inc
push
insl
lret
stos
outsl
out
push
sbb
adc
mov
das
adc
and
lret
push
lret
jb
push
lds
adc
call
cwtl
or
loop
xor
je
push
je
bound
push
sbb
xor
lcall
test
mov
push
mov
cmpsl
sahf
in
sub
cld
call
in
jmp
inc
sub
inc
adc
inc
adcb
or
add
insb
inc
sbb
lcall
sub
inc
loop
orl
dec
cmp
and
sahf
dec
test
test
std
incl
sahf
adc
adc
cmp
movsb
and
stos
jg
and
ret
xor
lock
sub
bound
les
ds
rclb
add
shrb
sbbl
push
insb
and
in
ret
cmpb
sub
call
sub
xor
dec
push
cmc
stc
fldcw
fiadds
std
outsl
push
test
cmpb
imul
xor
push
out
into
mov
xchg
stos
subb
jg
mov
dec
sub
sub
hlt
dec
push
jmp
aad
add
shll
fs
mov
xchg
bound
popa
add
call
sbb
xchg
in
cmp
stc
fcomip
jb
xchg
mov
cs
aam
cli
pop
mov
push
adc
push
mov
sti
nop
ret
xchg
addb
mov
xchg
jl
push
push
cli
adc
stos
popf
test
lcall
xor
je
mov
mov
push
ud1
xor
aad
add
mov
subb
xchg
add
or
push
fildll
dec
jae
bound
insb
pop
cmpxchg
das
pop
sarb
mov
incb
jo
push
enter
loope
sti
lcall
cmp
inc
dec
movsb
mov
fmul
lret
and
adc
sub
jle
inc
or
mov
call
fldl
sahf
add
fldl
dec
inc
sahf
fnsave
xor
incl
xorb
enter
aaa
push
inc
adc
pop
fs
iret
mov
xor
ret
rorl
add
sbb
inc
and
inc
aaa
pushf
sbbl
lock
jb
mov
es
sbb
cwtl
js
push
hlt
incl
pop
push
fsts
pusha
add
sbb
inc
mov
pushl
inc
dec
int3
ret
add
pop
add
out
lea
cmp
pop
sbb
aas
add
outsb
push
cmp
test
jmp
xchg
movsb
pop
mov
out
push
out
movb
das
cli
popf
mulb
or
or
lcall
decl
aam
add
dec
mov
and
push
lcall
fistl
pop
clc
mov
add
dec
mov
dec
mov
xchg
push
outsb
pop
arpl
js
mov
movsb
mov
dec
scas
mov
jo
sbb
xchg
sbb
pop
mov
dec
mov
pop
loopne
pop
cmc
sbb
cld
ss
lcall
mov
inc
xchg
push
cld
bound
sbb
jl
adc
sbb
xchg
push
dec
jmp
sbb
mov
inc
sarl
xchg
loope
cmp
push
add
test
xchg
lock
repnz
dec
lods
jmp
mov
add
add
in
sbb
lret
push
lods
cmp
pop
mov
das
mov
add
popf
jns
or
in
xchg
jo
test
sarl
inc
jno
loop
jp
cmpsl
loope
lcall
divl
lret
icebp
fstpt
adc
sub
bound
push
cld
fbld
sub
test
dec
xorl
fiadds
decl
outsb
or
je
rolb
sub
clc
call
fdivr
aaa
jge
sbb
jno
sub
fs
in
adc
subl
mov
and
adc
lcall
inc
mov
lods
loop
sbb
inc
out
or
sbb
lds
call
clc
xor
dec
xor
lret
xchg
sbb
jae
aas
repz
incl
adc
mov
movsl
inc
imul
imul
and
add
jmp
ret
sub
dec
ret
sbb
insb
std
mov
xor
mov
shll
push
adc
testb
jg
mov
cld
pop
movsl
clc
cvttps2pi
ljmp
mov
sub
ret
pop
rcl
scas
ret
pop
cltd
mov
jmp
inc
adc
in
cwtl
ljmp
test
cmp
xchg
mov
idivl
movsl
add
cmovle
mov
pop
dec
jg
or
je
cs
jns
scas
sub
jnp
or
jo
les
test
outsl
add
sbb
push
lahf
out
sahf
xor
fsubl
push
pop
mov
mov
sub
adc
ret
adc
xchg
xor
push
jns
frstor
daa
and
pop
loopne
sub
pop
xor
call
ss
inc
ss
pop
add
sbb
add
addl
mov
inc
pusha
not
pusha
decl
dec
add
ret
sub
ret
incl
mov
inc
and
les
push
add
jno
popa
and
rcrb
push
inc
pop
shrb
call
je
mov
scas
leave
sbb
rcr
adc
cmp
lea
cmpb
jo
add
push
pop
sbb
push
mov
fcmovnu
xchg
das
outsb
fcomps
adc
sub
es
fsts
dec
cmp
repz
decl
clc
add
lea
fists
jns
loope
adc
stc
inc
in
and
jmp
cmp
mov
test
push
inc
jmp
push
dec
mov
incl
lcall
inc
xchg
dec
jbe
mov
xchg
mov
push
xchg
push
rolb
mov
add
or
mov
mov
pop
mov
add
mov
mov
push
xchg
xchg
enter
out
shll
movsl
sub
xor
jp
adcl
mov
jp
adc
mov
mov
sub
push
xchg
inc
cmpsl
add
add
fists
cmpsl
jb
je
sub
cs
cmc
inc
clc
in
pop
shll
stc
mov
add
mov
jb
pop
xchg
scas
les
call
push
cld
cmp
call
cmpl
cltd
push
add
jo
inc
mov
mov
ljmp
and
add
ret
or
mov
inc
outsl
jg
mov
or
fdiv
ret
or
fsub
ret
and
ret
adc
es
mov
sbb
add
cmc
push
add
fs
or
in
xor
rorl
incl
lea
sub
lods
mov
mov
lret
sub
les
mov
cmp
sar
pop
jo
adc
inc
add
std
mov
rorl
loop
or
hlt
jecxz
rorb
adc
orl
clc
mov
or
jne
push
and
bound
mov
push
hlt
xor
mov
mov
push
mov
sbb
into
adc
in
push
dec
mov
inc
mov
cmp
jbe
insl
sahf
jns
mov
lcall
add
or
push
sbbl
add
negb
adc
cmp
jb
push
inc
pop
cld
mov
push
xlat
loop
sbb
call
or
push
shrb
incl
sbb
daa
dec
sbb
ljmp
incl
xchg
jle
sub
js
bound
stos
mov
stos
jns
stc
sbb
decl
push
xor
push
cmp
mov
dec
or
sub
sbb
pushl
stos
mov
repnz
imul
shrl
stos
xor
pop
gs
mov
cld
sub
pop
decl
xor
mov
in
dec
pushl
das
test
fidivl
inc
nop
sbb
add
ret
cmp
test
in
push
pop
dec
cmp
aam
pusha
mov
xor
mov
out
sub
mov
mov
fldt
mov
sarb
jnp
mov
add
dec
dec
dec
adc
clc
mov
sbb
jae
xchg
cs
push
or
int3
inc
les
outsl
jmp
jle
inc
adc
or
outsl
cld
adc
push
cmpsl
jno
pop
fmuls
lock
mov
xor
cmp
add
insb
push
leave
and
jmp
popf
jg
dec
xor
pushl
rorb
ret
xchg
jle
inc
cmp
lret
xchg
lds
insb
inc
iret
and
add
cmp
pause
cld
call
clc
std
cwtl
jge
es
rolb
adc
mov
xchg
add
icebp
mov
pop
mov
inc
int3
pusha
pop
dec
sar
push
sahf
add
or
test
jne
incl
cmp
aam
xchg
js
or
pushl
cld
test
sub
mov
xor
std
clc
add
test
add
ret
or
es
cli
daa
loopne
sub
xchg
or
sbb
push
pop
inc
shl
ss
repnz
xchg
call
outsl
and
add
inc
cmp
sub
inc
arpl
call
or
jo
and
or
adc
or
js
dec
push
xor
xor
sub
pop
xchg
ret
mov
incl
int3
add
ja
sub
jo
push
shl
inc
push
lcall
sbbb
or
pop
lock
sbb
xor
push
pop
pop
inc
xor
aaa
sti
and
or
sbb
mov
sahf
movsl
in
push
xor
sbb
imul
incl
shl
xchg
rclb
data16
outsb
insb
jae
outsb
lcall
pushf
leave
int3
fnstcw
cmp
inc
xor
push
push
mov
mov
std
call
add
leave
ret
xchg
cmp
insl
jnp,pn
adc
loope
and
push
sbb
cmpsl
mov
xchg
mov
and
or
dec
fucomp
lcall
sbb
jp,pn
aas
sbb
inc
decl
movsb
inc
cmp
int3
jmp
dec
mov
cmovns
inc
test
jmp
dec
dec
or
mull
pop
ds
push
inc
cli
or
or
out
xor
lock
pop
aas
fcmovb
stos
inc
jmp
sub
ljmp
xchg
icebp
push
and
lea
xor
adc
orb
jb
stos
jp
push
lds
sbb
jmp
pop
fdiv
pop
fdivl
iret
sub
into
jo
dec
mov
jmp
pop
xchg
ret
pushf
jg
les
iret
xor
xor
dec
bound
incl
xchg
rcr
mov
insb
scas
push
dec
pop
ss
pop
inc
rorb
cmp
das
nop
mov
dec
inc
mov
pop
aas
test
jae
shlb
adcb
inc
js
push
push
ss
jmp
push
in
or
and
inc
imul
out
jb
dec
bound
jae
rcrb
or
adc
pusha
adc
dec
insb
hlt
inc
sahf
outsb
fdivrp
call
sub
jmp
out
aaa
ret
es
in
std
incl
fmull
je
push
pop
push
inc
push
insl
xchg
mov
jno
rolb
jg
or
xlat
xchg
cmp
dec
fisubrl
inc
mov
adc
call
ficompl
lea
fsts
push
roll
jmp
adcl
jmp
mov
add
nop
daa
add
sbbl
out
or
sbb
and
ljmp
loope
mov
inc
adc
mov
jge
ret
icebp
lcall
pop
sbb
call
movsl
xchg
data16
dec
arpl
shl
into
hlt
popa
sub
or
stos
pushf
jge
and
dec
jo
xchg
decl
in
or
xchg
inc
bnd
xor
scas
test
out
rcll
adc
ljmp
or
daa
push
jp
adc
xor
sbb
fiaddl
push
mov
mov
add
push
jp
cmpsb
pop
xchg
jg
cmc
mov
cmp
cmp
add
sbb
lahf
add
lcall
mov
mov
pop
xorl
mov
out
in
mov
loope
enter
movsl
adcb
and
dec
loop
inc
clc
pop
add
or
incl
dec
adc
push
push
les
pop
subb
jae
jle
add
ffree
push
in
call
sti
mov
dec
leave
aaa
sar
xor
fisubrl
aaa
sbb
sti
xor
mov
daa
insb
je
ja
push
inc
cwtl
jno
into
jb
es
mov
add
fwait
jbe
jl
int
dec
sarb
mov
rcrl
sbb
cmp
addr16
inc
sub
cmp
mov
jbe
push
jae
dec
lcall
in
les
outsb
inc
ret
pop
push
sbb
adc
les
xchg
fisttpll
aaa
mov
mov
hlt
and
fstl
cmc
jns
mov
xlat
sub
cmp
in
dec
sbb
inc
xor
loopne
in
adc
jmp
test
xchg
cmp
and
dec
sub
mov
adcl
push
jmp
add
inc
addr16
dec
xchg
div
filds
xchg
sub
imul
pop
clc
je
into
pop
adc
movsb
fistpl
mov
mov
movsl
aaa
mov
push
inc
sub
adcl
or
js
jge
aad
and
adc
lret
imul
sbb
call
loopne
rcrl
xor
cmp
es
sub
jg
leave
rol
xchg
cmp
aad
xchg
test
jmp
mov
sar
insb
scas
jg
in
jp
ret
lods
or
dec
add
clc
pop
ja
jno
ljmp
xor
cmpl
xor
or
stos
data16
dec
in
ljmp
xor
dec
push
enter
pusha
ds
add
imul
pusha
jecxz
in
movsl
ljmp
arpl
adc
ss
ret
xor
jb
xor
cs
shlb
dec
push
cmp
mov
xor
cmp
jecxz
cmp
fildll
mov
mov
or
and
ret
ret
incl
lock
aas
or
push
orb
sbbb
out
sub
or
and
fistpll
mov
push
mov
push
into
adc
test
mov
push
dec
ljmp
inc
adc
lock
addb
dec
mov
or
or
push
mov
clc
test
test
mov
leave
mov
out
mov
jp
lcall
cs
or
cld
fs
clc
movsb
xor
xor
xchg
aam
add
out
ret
adc
leave
dec
test
cmpsl
inc
adc
int3
mov
xor
jl
adcb
mov
rorb
pop
jmp
sbb
lret
adc
loop
and
popf
adcl
sbb
sbb
mov
sbb
lcall
inc
mov
mov
add
xchg
adc
xchg
sbb
notb
loopne
pop
jmp
mov
mov
ret
movb
xchg
or
incl
in
fyl2x
push
iret
fs
sahf
add
loopne
push
add
jg
add
mov
or
jb
std
fcoms
inc
shlb
data16
loopne
ffree
or
sub
decl
mov
ljmp
je
stos
lods
push
and
cmpsl
je
jmp
das
clc
or
loop
cld
cmp
mov
adc
add
mov
movsb
add
fcoml
xor
cmp
ret
test
pushf
mov
leave
fisubs
xor
cmp
push
or
ljmp
and
mov
jo
into
fwait
cwtl
xor
nop
xchg
ljmp
imul
mov
mov
xchg
jecxz
sbb
cwtl
mov
test
imulb
outsl
in
cmpsb
insb
lcall
or
lcall
push
mov
jecxz
mov
jb
fistps
incb
push
rorb
out
inc
lock
jae
das
inc
rorb
inc
add
in
call
mov
or
xor
orb
xor
inc
xor
incl
loopne
shr
push
movsb
mov
out
cltd
stos
xor
sub
aad
jmp
ror
cvtps2pi
add
clc
pushf
decl
and
jp
in
mov
ds
xor
scas
nop
sar
decl
popf
les
xchg
or
xor
movsb
aaa
push
ja
aam
inc
cmp
addr16
mov
pop
adc
adc
imul
stc
push
ds
push
dec
int
sub
sbb
stc
pushf
cmovle
mov
int3
loopne
push
mov
cmp
inc
jmp
dec
or
ljmp
lcall
push
sahf
incl
les
lods
sub
incl
or
pop
int
sub
add
or
ljmp
jb
push
mov
call
sub
imul
xchg
sar
mov
add
bound
sahf
mov
ret
or
adc
mov
dec
ret
mov
lcall
add
js
add
and
add
cs
cli
jg
sbb
orl
mov
xor
adc
push
cmpl
loop
decl
leave
les
add
das
int3
cmp
mov
jmp
cwtl
out
mov
jmp
add
xchg
ret
in
or
incb
add
ljmp
data16
call
xchg
mov
mov
ret
or
cs
pushf
push
pushf
push
xchg
xor
int3
or
jmp
jnp
repz
jp
pop
call
bound
pop
clc
dec
or
inc
and
or
nop
pop
ret
insb
mov
push
push
cmp
lcall
stos
stos
xchg
xor
mov
mov
jg
ja,pn
adc
xor
inc
sub
loopne
mul
or
dec
cmp
outsb
inc
js
les
adc
les
out
lcall
xor
xor
sbbl
or
popa
lret
xchg
jp
xchg
subb
icebp
incl
mov
ljmp
in
outsl
test
jl
adc
call
popf
pop
sub
cmp
ljmp
inc
xor
je
dec
push
in
dec
aam
mov
xchg
in
push
std
jae
dec
pusha
cmp
lock
imul
lods
fs
add
faddl
incl
dec
lret
rorb
and
ret
mov
xchg
sahf
sub
insb
inc
and
pop
pop
sbbb
jp
or
lock
dec
sti
out
movsb
cmp
jp
sub
mov
data16
jmp
add
or
sti
xchg
push
add
sub
decl
es
shrb
lcall
mov
xor
sub
mov
mov
ficomps
mov
xor
sti
mov
adc
das
int3
cltd
mov
cmp
jge
mov
jbe
xor
arpl
insl
xchg
cmp
jg
popa
push
ret
or
ss
je
cmp
ret
out
fcomip
mov
mov
mov
pop
xchg
pop
pop
xor
das
and
out
and
mov
jge
xchg
pop
mov
dec
in
adc
inc
xor
inc
sbb
f2xm1
or
jbe
loope
mov
dec
push
xchg
jns
imul
mov
adc
mov
addl
add
out
outsb
movsl
test
mov
ror
mov
test
push
inc
pop
jb
mov
gs
push
out
nop
stos
gs
lret
mov
sub
idivb
dec
push
mov
and
decl
adc
lret
shll
decl
data16
add
andb
pushf
add
adc
push
push
inc
push
in
mov
stos
push
push
xchg
mov
mov
xor
inc
insb
xchg
jg
lcall
outsb
lret
clc
sub
fcoml
fcoms
add
outsl
cli
decl
daa
pop
mov
mov
mov
dec
cmp
outsl
mov
xor
inc
pushl
fdiv
int
mov
lcall
add
aad
jo
incl
sub
mov
cmc
insb
jg
lcall
das
push
pop
push
xchg
leave
cmp
cs
jns
xlat
sub
ljmpw
inc
std
xchg
decb
insl
xchg
test
jmp
cld
fcomip
or
ret
push
dec
sahf
pop
jp
push
add
popa
sbb
inc
xchg
in
or
sahf
or
out
shlb
jg
mov
add
decl
mov
divl
jns
push
and
add
pop
icebp
pop
lahf
push
pushf
incl
cld
scas
mov
out
imul
in
mov
movsb
add
dec
pop
sub
fs
fcomip
push
sub
out
lcall
icebp
cmc
popf
push
adc
ss
popf
dec
fdivrs
sti
out
cmp
outsl
cli
jmp
addr16
mov
xor
push
aam
push
xchg
scas
push
roll
cli
mov
push
sbb
js
add
je
jnp
mov
movsl
add
push
mov
js
lret
lret
inc
insl
cmpsb
add
push
push
les
in
orb
mov
dec
mov
hlt
mov
test
call
mov
mov
insb
movsl
adc
cli
dec
ja
mov
decl
in
add
mov
push
data16
adc
jbe
shrl
or
and
mov
add
bound
xorb
cmp
xor
dec
lcall
push
xor
in
xchg
adc
xor
inc
das
arpl
or
lret
mov
mov
hlt
call
sahf
leave
aaa
dec
add
push
outsb
movsb
ret
lcall
ret
repnz
fmuls
add
orl
pusha
pop
cld
mov
add
mov
or
mov
mov
call
loope
xchg
andb
adc
es
out
jg
insl
adc
lods
orb
add
jo
subb
pushl
adc
movsl
mov
cmc
xchg
pop
adc
jns
fisubl
cmp
jmp
push
cmp
sbb
inc
lret
xor
incl
and
incl
inc
dec
or
jbe
cmp
lcall
mov
dec
or
jp
test
jl
dec
mov
dec
dec
inc
arpl
push
daa
int
bound
jmp
sbb
call
outsl
push
mov
lret
orb
xchg
push
mov
cli
fmuls
pusha
cmpsb
and
jmp
dec
fwait
push
mov
mov
sbb
int3
iret
or
cwtl
xchg
xchg
dec
mov
xor
or
or
fisubs
jo
cmp
or
dec
xor
cmp
lock
mov
sub
add
nop
cmpxchg
sub
mulb
jnp
xor
incb
call
insb
inc
nop
cmp
imul
jecxz
cltd
incb
test
aad
cmp
dec
cltd
lods
adcl
pushf
cmpb
sti
imul
mov
jo
dec
jl
std
jg
out
movsl
orl
rcll
daa
imul
call
in
bound
jle
jp
or
or
outsb
mov
xchg
or
aad
xchg
loopne
dec
push
pop
mov
shr
hlt
lock
in
es
pop
fnstenv
testb
add
mov
pop
shr
jnp
icebp
inc
and
loope
inc
sbb
jne
incl
clc
cmp
mov
mov
movsl
or
xchg
and
push
faddp
imul
sbb
scas
addr16
data16
out
inc
cld
jmp
inc
gs
in
sbb
pop
sub
jle
inc
int3
movsl
pushw
push
mov
inc
xchg
enter
xchg
popa
scas
cmp
icebp
pop
inc
push
mov
inc
int
adc
aad
dec
mov
popf
adc
filds
pop
repnz
pop
xchg
mov
shll
adc
insl
sar
ljmp
xchg
sbb
inc
or
mov
ljmp
dec
daa
or
push
mov
scas
inc
and
sub
mov
dec
add
leave
gs
mov
push
cli
jmp
aaa
cmp
adc
adc
ss
lcall
subb
ja
push
cwtl
data16
mov
cltd
in
jmp
inc
std
repnz
jge
jecxz
adc
and
sub
or
xchg
nop
incl
fiadds
fadds
decl
inc
inc
add
inc
hlt
and
cwtl
mov
jae
or
sbb
pusha
or
aaa
mov
jmp
test
jge
cltd
jge
jb
jl
inc
scas
cmc
lds
jle
adc
out
aaa
fisubrs
or
fcomip
pop
int3
xor
loop
cmpsl
adc
mov
xchg
mov
icebp
loopne
call
xor
xchg
mov
and
xor
xorl
ret
adc
mov
sbb
xchg
cli
stos
and
sub
ss
adc
and
mov
xchg
add
repnz
cltd
push
loop
pushf
cmp
daa
into
mov
ljmp
scas
adc
sub
mov
shlb
dec
je
sar
mov
mov
dec
xchg
test
fstps
push
xchg
xor
lret
mov
jg
xor
mov
xchg
push
xchg
or
pop
adc
xlat
mov
addb
adc
call
push
inc
and
or
orb
icebp
lcall
pop
or
sub
movb
push
cmp
incl
pop
mov
sahf
push
mov
outsb
inc
sahf
xor
ror
mov
into
ss
frstor
imul
mov
pusha
std
jmp
ds
mov
mov
xlat
jb
outsl
jg
lahf
fisubrs
stc
int3
pusha
mov
out
out
pop
push
out
das
lea
mov
jmp
sbb
mov
pop
or
incl
push
imul
and
enter
cmpsl
and
jmp
icebp
mov
jl
inc
mov
loop,pn
adc
cmp
decl
loop
pop
jo
or
inc
test
adc
push
lds
cmp
mov
xchg
cmp
dec
jg
mov
and
in
sbb
inc
push
dec
inc
mov
jmp
add
mov
inc
cltd
data16
xchg
sbb
xor
push
and
insb
call
mov
data16
mov
and
or
xchg
adc
inc
xchg
call
test
xchg
mov
inc
adc
rorl
jne
roll
push
test
jge
call
adc
and
dec
mov
cmpsb
dec
add
push
push
cmp
xchg
insb
mov
mov
inc
aaa
cmp
or
and
mov
call
sub
or
xor
lcall
les
mov
outsb
mov
shr
mov
and
mov
sbb
lods
mov
or
cmp
rclb
pop
jbe
add
jo
je
mov
sbb
xchg
out
outsb
roll
std
stos
pushl
push
pop
mov
hlt
push
mov
data16
jge
inc
jg
mov
sbb
mov
rcl
negl
outsl
jg
ljmp
xchg
int
sbb
fdivl
pop
mov
jne
mov
sbb
clc
mov
push
jnp
dec
add
hlt
sub
mov
mov
enter
cli
fldcw
data16
fdivs
sbb
hlt
incl
jp
pop
sub
push
and
cwtl
insl
divl
or
cs
mov
rolb
inc
mov
mov
mov
mov
xor
fadd
pop
std
shlb
lcall
das
ss
dec
push
push
pusha
mov
ret
mov
incl
cmp
jbe
movsb
xchg
mov
arpl
xchg
data16
insb
stos
test
cltd
inc
pushf
arpl
cli
fsubr
rcrb
fidivrl
sub
sub
mov
or
mov
adc
inc
dec
movsl
mov
sub
decl
xchg
cmp
inc
adc
das
push
mov
outsl
dec
mov
sub
inc
js
xchg
adc
outsl
and
jl
adc
decl
loopne
pop
les
sub
add
int3
loopne
adc
mov
pop
les
fcomip
sbbl
adc
call
test
sbb
js
adc
lock
ljmp
ja
or
add
sub
xchg
orl
pop
incl
sub
mov
cmp
sub
xor
xor
shll
xor
mov
or
iret
mov
cvttps2pi
sbb
fcmovne
rcrl
sbb
ljmp
nop
jo
or
in
xor
incl
cmpsl
cmp
mov
adc
or
or
xchg
stc
in
cmp
ljmp
cmp
mov
jno
fs
stc
dec
inc
lret
dec
inc
or
into
sbb
dec
jmp
mov
mov
call
imul
sub
ja,pn
add
loopne
fs
fadds
test
jne
inc
lahf
nop
add
cmpsb
and
jg
jo
push
xchg
mov
sbb
and
pop
pop
daa
jge
dec
and
and
pop
clc
jmp
cli
popa
add
ret
xor
dec
jmp
pop
mov
push
aam
cmp
add
add
fwait
loop
mov
sarb
mov
mov
outsb
inc
notl
add
dec
adc
cli
adc
cmp
es
jg
pushl
shr
dec
inc
inc
inc
push
inc
out
pop
xchg
push
xchg
and
icebp
ljmp
sub
mov
arpl
dec
mov
scas
jle
push
dec
dec
sub
push
jae
aam
decl
or
arpl
loopne
stos
jp
or
stos
adc
cld
mov
ret
push
mov
inc
pop
fadd
fnstsw
nop
and
jno
inc
pop
cmc
loope
fnstenv
pop
adc
jg
add
mov
insl
inc
popa
out
mov
and
bound
jmp
adcb
inc
mov
rclb
repz
out
xchg
push
lds
std
call
sbb
add
mov
cltd
jno
repz
mov
push
xor
jne
adc
loop
out
xor
pushf
add
cli
jg
icebp
fsub
push
in
mov
scas
and
sbb
fs
cmpsb
cld
lods
sbb
pop
out
rorb
sub
push
mov
jl
in
inc
ljmp
lcall
dec
pop
fidivl
mov
dec
lret
mov
scas
mov
out
out
inc
add
hlt
jmp
lods
push
mov
mov
leave
mov
sbb
inc
and
or
incl
mov
sbb
popf
stos
sub
sub
adc
call
sbb
mov
push
fcomps
mov
scas
cld
insb
rcll
ficoml
call
lea
les
shlb
add
sbbb
orb
stos
dec
stc
adc
mov
sub
imul
movsl
pop
jle
movsb
cmp
std
mov
push
add
mov
push
sahf
jp
push
mov
rorb
or
roll
scas
fists
ljmp
mov
dec
test
fadds
pop
push
arpl
test
jmp
incl
mov
enter
push
dec
repz
movsb
xchg
push
lret
es
push
cmpsb
icebp
mov
xchg
jge
or
clc
inc
dec
xchg
pusha
outsb
andl
xchg
push
mov
mov
push
das
ja
inc
incl
xchg
pop
jecxz
cmp
inc
fs
adc
lahf
add
test
adc
sbb
loopne
pop
jmp
daa
lea
incl
inc
mov
js
xchg
xor
add
adc
sarl
cmp
ja
pop
jb
call
lods
mov
lock
int
and
or
mov
lret
jmp
fdivs
loop
fistpl
out
lods
or
ja
push
and
xchg
notb
cld
ret
pop
inc
pusha
add
roll
dec
ljmp
inc
sbb
sbb
dec
cmp
sbb
sbb
lcall
popa
cmp
jbe,pn
js
xor
cmp
and
pop
inc
stc
jg
or
inc
mov
push
add
test
ljmp
jns
adc
outsl
mov
mov
cltd
imul
inc
push
neg
test
sub
mov
xor
push
je
ss
cld
pusha
pop
mov
pusha
jl
jp
clc
inc
push
shlb
je
lock
jmp
lahf
push
call
mov
insb
mov
mov
jmp
std
add
nop
xchg
add
mov
or
outsl
ljmp
lock
ret
mov
js,pn
push
jg
sub
popa
or
mov
mov
or
dec
subb
or
jb
test
popf
mov
mov
pushf
leave
cmpsb
mov
cli
mov
dec
enter
stos
std
inc
mov
push
jmp
inc
and
jmp
in
subl
ljmp
aaa
add
dec
push
cld
gs
testb
outsl
add
sub
js
mov
push
cmpsb
icebp
mov
adc
inc
inc
out
xor
or
inc
dec
repz
mov
and
push
pop
incl
dec
adc
hlt
cmpsb
jno
cmp
push
xor
icebp
push
ss
pop
cmp
addb
and
ljmp
cli
popa
sub
add
inc
and
add
inc
push
cmp
mov
dec
ds
inc
and
cmp
jo
stc
les
inc
addr16
inc
mov
add
xor
cmp
lock
ja
daa
adc
xlat
ljmp
add
inc
dec
pop
xchg
fsubl
or
mov
cmp
imul
xchg
cwtl
data16
ljmp
xchg
rclb
movsl
sub
lods
loop
data16
popa
adc
data16
dec
mov
push
lock
decl
inc
mov
jmp
shlb
gs
adcb
notb
inc
pop
andl
cmc
jg
fdivs
add
pop
mov
push
je
into
mov
sub
lds
enter
orb
sbb
ljmp
mov
adc
xor
mov
adc
adc
mov
bound
xchg
loope
xchg
or
mov
inc
stc
push
and
jg
in
outsb
pop
add
stos
movsb
xor
jg
out
enter
adcb
pop
fiadds
lcall
shll
pushf
loopne
inc
pop
test
jb
lds
cmp
mov
xor
ja
dec
mov
outsl
std
out
jbe
push
orl
mov
mov
jo
push
cmpb
adc
add
fildll
add
add
and
stc
and
adc
xchg
jno
arpl
dec
lcall
or
dec
jp
inc
sahf
add
xchg
jb
add
lahf
roll
xor
push
sub
mov
lgs
loopne
pop
push
add
add
les
nop
decl
push
xchg
es
arpl
arpl
daa
jne
daa
pextrw
daa
shll
push
mov
add
sub
sub
and
dec
adc
lcall
cmp
adc
call
decl
adc
addb
jge
mov
mov
xchg
inc
sbb
cmc
mov
adcl
addl
dec
lds
jmp
jnp
cmc
hlt
mov
js
xor
dec
popf
lret
and
ljmp
fstps
mov
sbb
add
pop
xchg
jno
ljmp
or
jmp
add
push
insb
xchg
test
add
mov
outsl
mov
xor
xor
cmpb
call
ss
dec
loopne
nop
arpl
sbb
push
jle
jecxz
pop
ret
xchg
cmpsl
mov
cli
jecxz
dec
jbe
and
dec
sti
xchg
add
pop
xchg
sbb
jg
inc
or
sub
xor
jno
cli
cmp
xchg
and
jns
sub
adc
xchg
xor
orb
or
and
call
outsb
cmpsb
subb
lock
cli
aaa
push
jo
fadds
fstps
outsl
mov
clc
call
sbb
cltd
jno
inc
ss
outsl
sbb
and
and
jnp
addr16
cmpl
flds
je
add
mov
jecxz
xchg
push
ret
adc
shrb
fs
mov
mov
push
sbb
popa
jo
test
add
xchg
xchg
fs
data16
mov
cld
sbb
les
nop
cmp
fisubl
push
decl
add
or
push
push
ds
sub
mov
cwtl
andl
pusha
xlat
aas
popa
adc
icebp
jecxz
mov
xor
stos
sub
cltd
mov
call
jge
addr16
push
cs
out
push
inc
xchg
aaa
jns
cmp
lds
push
cld
fwait
incb
mov
int3
cltd
push
xchg
inc
mov
mov
mov
cmp
dec
inc
fsubr
lods
in
sub
mov
mov
cmp
clc
add
pop
push
out
stc
sahf
in
fstps
ljmp
stos
or
pop
adc
xchg
jne
stos
xor
scas
and
dec
sbb
cmc
adc
mov
xor
incl
jecxz
repnz
or
push
xor
mov
cmp
adc
xorb
sti
mov
sarb
cwtl
aaa
and
xchg
cmp
scas
adc
pop
dec
jmp
ret
in
or
test
xor
pop
cld
decl
clc
movsb
arpl
pop
inc
test
xor
mov
mov
outsl
xor
decl
xor
jno
dec
mov
add
push
or
add
addr16
sub
or
inc
jmp
popa
sbbb
xor
lret
dec
add
xchg
jl
and
dec
test
pop
stos
jecxz
sarl
jp
cmp
and
outsl
sbb
xor
clc
jg
mov
jne
mov
js
daa
jp
push
push
nop
or
in
mov
push
stos
popf
orb
cltd
test
clc
lret
ljmp
inc
sbb
test
js
and
inc
rorl
lods
mov
call
xchg
inc
push
movsl
push
xchg
pop
push
arpl
shrl
lcall
imul
pop
aaa
sarb
mov
jp
out
popf
shrl
jmp
ljmp
lret
cmp
enter
lahf
add
sbb
xchg
lahf
roll
xor
push
idivl
cmc
js
sbb
jo
pop
in
jbe
sbb
xchg
test
sub
incl
sub
adcl
dec
es
aaa
hlt
mov
in
push
cmp
dec
es
dec
sbb
jmp
movsb
pop
mov
out
cli
call
mov
fadd
xor
xchg
in
adc
xchg
push
pop
xchg
dec
jmp
mov
lcall
mov
movsb
call
pop
cli
inc
pop
pop
cmp
push
pop
ss
das
clc
ljmp
inc
pusha
rorb
add
mov
cmp
xchg
stos
jg
mov
enter
fisubs
arpl
incl
cld
inc
idivl
sti
in
or
dec
ja
insl
jb
nop
imul
pushl
aam
xchg
test
imul
push
movsl
mov
push
push
fbld
clc
mov
decl
adc
mov
adc
sub
sar
jbe
ret
cmp
xchg
inc
jb
or
jp
push
lds
push
inc
iret
push
lds
pop
push
mov
es
ja
jg
xlat
clc
xchg
lret
mov
lret
jp
in
lods
leave
pop
fdivrs
decl
lret
idivl
icebp
fwait
int
and
lods
mov
adc
out
xor
leave
pop
pop
and
das
imul
xchg
mov
js
fwait
or
incl
adc
imul
or
pop
inc
lcall
add
inc
or
lret
xchg
outsb
pop
arpl
incl
push
sarb
sub
and
daa
test
fistl
cld
jnp
push
daa
and
adc
mov
std
shr
movsl
ret
jp
add
stc
mov
stos
inc
sub
movsb
dec
cli
pop
dec
jl
jmp
aaa
aam
xor
cmc
inc
and
lock
and
addr16
in
push
dec
lods
addr16
push
mov
add
adc
jle
inc
add
incb
in
add
or
and
push
fbld
push
dec
out
xor
es
cli
mov
ljmp
dec
mov
pusha
push
leave
add
sub
push
push
enter
xlat
jae
mov
mov
lcall
jge
sbb
xchg
mov
adc
and
push
sarl
ds
sub
decl
stos
daa
mov
fwait
cmpb
add
sarl
xor
mov
mov
js
jnp
adcl
fcoml
mov
xchg
mov
leave
mov
xor
fcomi
push
dec
int
int
pop
or
ja
fsubrl
arpl
mov
fistps
in
ficompl
lret
inc
jge
adc
xor
std
jnp
xor
cld
xchg
incl
sbb
and
sbb
inc
sub
je
pop
or
cmp
filds
roll
adc
jmp
lods
cmp
fcomip
call
mov
cmp
cmc
xor
sbb
es
sar
xor
movsb
or
jo
fwait
inc
inc
mov
shrd
ret
xor
jno
xor
movb
cmc
mov
dec
push
ret
xchg
jbe
sbb
scas
das
sahf
andl
ds
mov
inc
push
dec
sbb
push
inc
or
pushl
aaa
push
pop
adc
jle
dec
lock
ljmp
mov
loopne
aaa
loopne
pusha
loop
imul
xchg
xchg
xchg
inc
jne
jns
js
cmc
lcall
inc
jne
jb
push
orb
mov
incl
ds
stos
pop
jbe
pop
gs
xor
jns
push
xchg
in
gs
jge
test
jbe
fidivrl
test
mov
sub
call
gs
jnp
pushf
jmp
cwtl
test
int
fsub
add
cmp
shr
adc
mov
rcrb
lds
test
in
lock
inc
xor
pop
inc
loopne
adc
ret
aam
sbb
lcall
lcall
jns
add
cld
sbb
mov
cmp
in
jbe
fisttps
loop
js
pop
mov
push
xchg
fldcw
sub
sbb
sarb
dec
jo
leave
xchg
pop
fldl
mov
sub
push
loope
loopne
outsl
clc
incl
in
aad
cmpsl
out
rcl
xchg
orl
or
and
outsb
out
in
int
pop
gs
aam
aam
cli
pop
subl
and
jmp
sahf
aad
nop
jecxz
mul
jno
and
stc
cmp
fsubs
movsl
inc
or
fstpt
cmpsl
jmp
xchg
push
cmp
cmp
dec
jne
add
dec
out
dec
enter
std
popf
jnp
jbe
daa
push
pop
sbbb
push
inc
cmc
push
out
ds
sahf
ds
stos
test
sub
loope
pushf
or
mov
incl
or
sbb
data16
test
testl
sar
lret
addr16
lcall
or
fimuls
lret
cwtl
clc
lret
sub
mov
dec
mov
insl
add
jns
mov
mov
cmp
sub
sbbb
add
imulb
fildll
mov
lods
in
das
dec
loopne
fs
jbe
xchg
imul
pop
mov
gs
jge
lcall
sbb
dec
pop
adc
fdivrl
sub
orl
adc
pop
dec
sub
cwtl
sbb
jg
pusha
in
dec
inc
adc
arpl
add
xchg
or
jg
cld
pop
rcll
mov
aaa
sub
cli
cmpsb
dec
push
cld
add
jecxz
mov
inc
xchg
push
incl
push
add
xchg
sti
sub
jno
jbe
mov
lods
pop
mov
add
js
add
lcall
leave
mov
movd
inc
mov
jo
push
mov
ss
mov
lods
xor
aam
jb
es
lcall
cmp
xchg
je
shlb
sbb
inc
push
push
dec
add
sbb
mov
fisubl
sar
lcall
mov
or
jne
sbb
xchg
pop
mov
ret
xchg
ss
jg
shrl
push
xchg
fwait
pop
out
pop
mov
dec
mov
fsubrs
fisubrl
ljmp
mov
lret
sbb
addr16
pop
mov
fldcw
mov
pop
enter
mov
cmp
frstor
pusha
loopne
add
mov
xor
lcall
or
push
mov
mov
rcrl
jo
dec
mov
jb
jb
lret
xchg
jecxz
jg
test
sbb
mov
xchg
rcll
aaa
cld
dec
mov
jmp
xchg
loop
mov
dec
lock
lods
mov
out
call
jg
cld
outsl
or
test
push
sbb
adc
or
cmp
pop
push
pop
dec
mov
cmp
rorb
mov
cmp
cmp
inc
inc
adc
fcoml
adc
push
in
cmp
adc
shlb
ds
lods
adc
pop
push
xor
out
adc
roll
outsl
mov
inc
mov
xor
adc
sarl
vandnps
decl
xor
inc
pop
ljmp
int3
cs
sub
pop
pop
push
dec
rol
and
inc
adc
sub
add
dec
sbb
jno
sbb
inc
and
ret
jmp
addl
pop
sub
icebp
pushl
sbb
test
add
pushl
call
shr
aaa
fsubl
lea
sbb
js
adc
pop
hlt
jg
js
sbbl
pop
test
add
jl,pn
decl
push
dec
movsl
xor
push
add
and
mov
cmpsl
lahf
mov
andb
and
jo
sub
sar
ljmp
insb
stos
nop
add
lods
leave
push
imulb
mov
fmul
mov
adc
sub
xor
shr
mov
repnz
dec
incl
scas
loop
rol
push
xlat
cs
orl
or
sub
ret
and
decl
xor
insb
xchg
gs
jecxz
xor
addr16
orb
sbb
jnp
push
fbld
adcb
sarl
cmp
lcall
add
cli
pushl
bsr
not
xchg
add
in
jnp
clc
pop
add
jne
test
ljmp
pop
in
push
mov
mov
add
cmc
decl
inc
push
les
fs
or
lods
incl
add
aam
out
add
push
xchg
inc
mov
inc
inc
dec
fcomip
das
clc
pushl
lds
inc
dec
adc
and
imul
jb
fisttps
add
divl
das
shl
xchg
int3
xor
push
inc
into
iret
dec
mov
push
sar
decl
push
shll
pop
xchg
ja
pop
cmp
mov
sub
and
pushl
jl
shrl
xlat
pop
ror
adc
rcll
xor
stos
add
decl
adc
nop
jle
adcl
roll
xor
dec
std
inc
mov
into
test
sub
dec
cltd
mov
sbb
add
push
inc
or
xchg
rcrb
adcb
mov
mov
inc
adc
and
mov
iret
add
or
jmp
xchg
xchg
sbb
scas
scas
xchg
jno
adc
rcrb
mov
push
stos
sbb
aad
inc
xor
mov
int3
xor
xor
arpl
in
decl
incb
xor
xchg
popa
fcompl
ljmp
int
inc
xor
mov
jl
jecxz
leave
mov
add
xchg
into
test
sbb
enter
add
sahf
and
xor
andb
imul
jae
fildll
add
int
jp
in
lods
cmp
push
sub
out
mov
push
dec
aaa
add
xchg
mov
and
mov
lret
in
inc
inc
or
icebp
mov
push
adc
notl
sbb
xchg
jns
mov
adc
movsb
test
sbb
insl
add
lret
dec
inc
or
push
subl
jo
mov
inc
cmpsl
cmp
scas
mov
movsl
les
mov
pop
pop
push
in
push
loop
lcall
xchg
sbb
out
dec
and
cmpsb
xor
sub
cli
adc
inc
ljmp
lods
test
roll
mov
fcmovne
daa
cld
and
push
ljmp
stc
imul
xchg
mov
dec
movsb
and
dec
test
cli
incl
std
jmp
test
push
sub
nop
inc
ret
sti
lea
faddl
jg
pop
test
jno
inc
pushf
inc
xchg
mov
dec
mov
loop
test
sub
cmp
push
push
adc
jno
pop
and
mov
mov
jo
fldl
add
sbb
decl
or
mov
and
lds
ds
sbb
call
mov
cltd
imul
jecxz
addr16
sbb
js
xchg
aad
mov
jecxz
sbb
stos
popf
shlb
enter
adc
cmp
adc
mov
push
shlb
add
dec
xchg
sti
cmp
pushl
movsb
icebp
mov
aad
aaa
xor
mov
in
shlb
mov
int
pushl
call
mov
dec
pop
and
lods
xchg
stc
je,pn
push
mov
pushl
sbb
mov
jo
sub
lods
int3
mov
or
adc
adc
jecxz
xor
test
jl
add
xchg
arpl
xor
jmp
or
mov
sbb
cmp
fistps
shl
xor
xchg
xchg
lcall
sahf
jle
popf
push
xchg
add
fsubrp
dec
jp
sbb
jmp
adc
mov
cmp
in
insl
sysret
lods
pop
push
sbb
ret
mov
cwtl
cwtl
je
inc
loope
lret
xchg
dec
popf
test
xchg
xchg
xchg
xchg
mov
mov
jg
pop
mov
add
enter
add
xor
das
jl
or
jo
or
cmpsb
incl
sbb
pop
leave
loop
or
stos
les
adc
lock
aas
loope
add
jl
add
jno
pop
or
decl
test
mov
das
xchg
cmp
and
std
adc
add
lds
push
inc
sbb
xor
cli
pop
bound
jle
addr16
sar
scas
mov
xchg
push
add
xchg
sbb
mov
in
into
dec
movb
divl
mov
imul
and
in
and
cld
lcall
cmpsb
xlat
inc
xor
outsb
adc
pop
sbb
inc
sbb
sub
call
xchg
std
out
add
xor
push
into
cmpsl
sub
scas
ficoms
mov
les
ficomps
pushl
push
cld
add
xbegin
mov
inc
dec
hlt
enter
xor
incl
xor
das
lock
into
inc
push
out
push
xor
and
imul
sub
xlat
jmp
jmp
hlt
dec
cltd
mov
or
xchg
dec
add
mov
dec
pop
bound
das
dec
mov
inc
and
jge
push
fcomip
sub
pop
xchg
call
in
out
dec
sub
icebp
dec
or
fbld
ljmp
js
stos
xor
dec
add
inc
ljmp
dec
les
jb
cmpsl
lock
call
inc
jns
push
jae
cmpsl
xchg
add
pop
push
leave
sti
push
mov
mov
mov
jg
data16
adc
test
inc
adc
or
mov
dec
aad
mov
mov
cmpsb
aad
mov
xor
data16
fsubl
xor
je
jg
push
mov
cmp
popl
and
in
lcall
mov
mov
sbb
aaa
cmp
rolb
mov
adc
nop
ljmp
jae
movsl
lock
popa
out
in
std
inc
rcll
pop
test
mov
pushf
les
rorb
lods
jg
and
fdivs
and
jo
movsb
mov
sbb
rcrb
icebp
lcall
out
aaa
or
and
stos
inc
cld
dec
loop
loop
add
aaa
out
loop
lods
xchg
add
inc
add
aam
mov
mov
scas
mov
mov
push
push
repnz
call
pop
hlt
shl
lahf
ucomiss
cmp
mov
xor
sbb
cli
es
daa
xchg
decl
fldenv
mov
test
push
leave
add
mov
push
sbb
mov
or
lcall
cmp
sbb
inc
mov
pop
or
push
pop
mov
inc
push
mov
cltd
sub
lcall
cmp
ret
xchg
mov
and
and
push
adc
call
leave
sub
xchg
adc
mulb
sub
pop
pop
cmc
cmp
or
call
inc
pop
sbb
cmp
jg
xor
xchg
adc
push
mov
jo
scas
push
out
dec
push
xchg
and
or
xor
jl
test
push
or
jo
aad
mov
xor
sub
push
and
mov
hlt
and
sarb
dec
sbb
jecxz
mov
pushl
adc
pop
fadds
rclb
pop
mov
sbb
dec
jle
xchg
das
adc
clc
cmp
add
fs
ds
dec
sub
das
call
xchg
pop
and
out
test
test
mov
inc
adc
ljmp
ret
addb
cmp
and
push
cmp
mov
cmp
es
push
and
inc
mov
sub
mov
sbb
and
enter
fst
lcall
dec
mov
movsl
xchg
lcall
sbb
rolb
shr
incl
add
into
cld
lret
inc
jge
scas
mov
pushl
std
pop
scas
jge
cs
inc
sub
dec
mov
lret
pushl
jmp
insl
adc
imul
ret
cltd
inc
mov
add
xor
push
adc
jge
mov
jno
adc
test
dec
add
loope
sahf
mov
xor
sti
xchg
in
out
icebp
cltd
cmp
sub
xchg
movsb
xor
xchg
sbb
icebp
pushl
mov
sub
test
bound
mov
mov
xor
jg
sbb
imul
subl
cs
sbb
ljmp
ficoml
xor
sub
add
sbb
or
inc
and
rcrb
mov
or
stos
aas
nop
stos
mull
fs
or
leavew
loopne
inc
fstpt
mov
in
xchg
ficoms
xchg
fisttps
and
mov
pusha
inc
jbe
jne
and
jnp
call
std
jmp
xor
call
in
mov
xor
mov
cld
sar
jg
stc
sti
addb
cmp
jo
test
adc
mov
push
cmp
enter
decl
pop
push
sbb
nop
sbb
sbb
add
push
cmp
cmp
aas
add
inc
std
jne
sbb
or
add
cltd
sahf
orl
adc
ljmp
je
movsb
sub
out
xlat
sbb
inc
xor
fistpl
ss
sbbl
mov
sarb
gs
test
cmp
add
jbe
mov
js
incl
test
push
lcall
aam
test
sub
mov
daa
in
cmp
nop
sbb
imul
or
scas
mov
pushf
xorl
lock
adc
jns
jmp
imul
dec
cmp
mov
adc
imul
icebp
push
jecxz
cmp
mov
decl
mov
ret
mov
gs
adc
test
popa
int
fldenv
ljmp
subb
mov
dec
lahf
rcrb
mov
rcr
jmp
lahf
aas
mov
cmp
cld
popf
fists
mov
push
add
adc
pushl
add
xor
lret
mov
andb
inc
pop
or
or
mov
faddl
jmp
sub
pushf
or
cmp
stos
pop
mov
add
sub
clc
inc
add
lock
outsb
jmp
adc
cmp
and
in
rolb
push
or
sbb
dec
test
push
and
push
mov
jmp
popf
adc
push
mov
andb
and
outsl
push
call
subl
push
dec
enter
or
sbb
cli
ljmp
xchg
popa
fcmovnb
lcall
fisttpll
fistpl
and
mov
xchg
and
and
popf
sbb
rcll
dec
mov
push
std
cmp
outsb
dec
pop
enter
add
xchg
pop
addr16
xchg
mov
sbb
stos
add
cmp
jns
dec
sub
jmp
mov
les
cs
sub
add
movsl
cmp
mov
fldl
xor
mov
pop
cmp
add
test
inc
in
sbb
hlt
sub
or
xlat
cld
dec
aad
out
jp
push
ret
test
jns
jmp
cmp
xchg
cmp
fwait
xchg
out
jne
shlb
dec
dec
clc
push
push
orb
stos
mov
mov
and
sub
in
adc
fwait
aaa
icebp
sbb
add
xchg
push
je
inc
xchg
ret
cmp
incl
into
scas
jae
mov
and
into
pop
sbb
xchg
fistpll
ljmp
xchg
enter
ret
arpl
add
test
test
stos
cwtl
add
inc
test
xchg
lods
and
cmp
mov
or
push
mov
rolb
sub
add
mov
fcomps
flds
mov
and
pop
fnstenv
fsts
gs
js
add
ss
xor
inc
push
xlat
insl
inc
stos
adc
and
push
xorb
mov
add
jbe
xor
or
aaa
rolb
mov
cmc
incl
sub
mov
cmp
lcall
rcr
aad
mov
lods
inc
jle
pop
fcompl
mov
js
enter
pushl
adc
ljmp
pop
push
testb
mov
mov
cltd
push
mov
pop
ss
jmp
pop
jle
pop
into
or
fnstsw
xchg
mov
stc
nop
fildl
fmulp
pop
fbstp
fildl
jnp
jg
pop
loope
pop
cmp
dec
dec
xor
loopne
adc
dec
adc
and
cmp
xor
push
test
gs
jp
les
stc
add
cmc
ljmp
mov
xchg
sub
data16
daa
sbb
test
popa
push
xchg
clc
pop
sub
fcomip
dec
or
mov
jg
xor
cmp
jno
xor
test
pop
push
insl
std
push
std
sbb
fimuls
adc
arpl
sub
addb
ss
mov
add
ljmp
popa
test
jmp
scas
loope
dec
pop
pushl
cltd
decb
insb
aam
adc
adc
popa
loope
fnsave
fiaddl
add
incl
into
mov
mov
out
xor
addr16
fsubrs
int
adc
jmp
in
fidivrs
xor
mov
jmp
jmp
and
inc
fwait
mov
add
scas
fcomip
ljmp
xchg
mov
jo
aas
push
jecxz
jne
and
cmp
xchg
mov
rorl
mov
inc
or
in
cltd
sbb
cmp
sar
decl
aam
insl
pop
mov
xlat
jbe
pop
pushf
insb
rorl
aad
pop
mov
cmp
sti
lcall
add
add
push
add
addr16
xchg
xchg
mov
push
pop
xor
icebp
ret
pop
and
sbb
sub
push
mov
sti
test
push
lods
ljmp
cmp
loop
inc
dec
sahf
out
addl
daa
sub
inc
push
inc
out
imul
lds
adc
xchg
sbb
call
xor
test
or
loopne
enter
xchg
dec
xor
mov
lcall
stc
adc
and
ljmp
add
jl
adc
cmp
push
inc
xor
sbb
add
lock
jl
enter
outsl
lock
add
adc
out
adc
or
decl
imul
test
icebp
mov
push
shr
sbb
popa
pop
loope
adc
clc
mov
push
xchg
push
cmc
ljmp
or
lods
jle
cld
scas
clc
fstps
lock
and
test
scas
dec
shrb
add
sbb
lock
xchg
push
lcall
ljmp
mov
xchg
test
xchg
scas
push
mov
loopne
mov
sbb
ja
mov
shl
mov
sbb
fisttps
mov
hlt
dec
rcl
push
gs
movsb
dec
in
cli
call
pop
inc
ja
dec
xchg
push
out
mov
or
inc
cwtl
inc
mov
leave
xor
addl
jg
sbb
imul
gs
fidivrs
enter
mov
imul
leave
roll
sahf
std
pop
inc
or
inc
iret
sub
xchg
sub
pushl
sbb
fstpl
xchg
lock
aam
xchg
test
adc
sahf
clc
insl
fisttps
mov
pushl
ficoms
add
xor
mov
jl
xchg
repnz
lcall
pop
stos
inc
aam
mov
push
std
xchg
cmpsl
arpl
push
or
call
rcl
mov
mov
adc
icebp
adc
push
cmp
mov
add
nop
addl
decl
push
scas
xorb
push
out
icebp
xchg
or
cli
mov
or
sbb
or
stc
mov
mov
rorb
pop
push
stos
mov
xchg
or
xor
jmp
adc
sub
pop
jmp
add
inc
repz
jb
mov
add
and
aas
ja
push
mov
sbb
jnp
je
cmp
outsl
ficoml
jne
lds
add
sar
pushl
insl
dec
xchg
mov
sarl
pop
dec
xchg
insb
call
ret
dec
jne
dec
sbb
je
push
cmc
enter
negb
inc
xchg
jg
push
aas
cwtl
cmpsl
cwtl
fdivrl
mov
pushf
popa
into
dec
int
out
ljmp
gs
arpl
or
or
adcb
dec
xchg
jbe
popa
jecxz
lret
shr
adc
mov
ljmp
xor
and
out
cmpb
xchg
idivl
sub
xchg
xlat
rcrb
sbb
lcall
jp
mov
test
adc
or
repz
hlt
pop
popl
lcall
xor
jns
push
xor
filds
call
add
cmp
popa
sbbb
or
loopne
cmp
pop
fsub
daa
add
mov
and
add
insb
or
adc
decl
push
mov
leave
mov
add
fnstenv
xchg
decl
lcall
ss
loopne
jae
mov
aas
inc
mov
cmp
jae
xor
jo
cmp
cmpsb
ret
cli
incl
jo
jmp
into
pusha
mov
aam
lcall
rcr
xlat
or
dec
stos
push
sub
ret
dec
aaa
or
incl
pop
pop
mov
push
lea
lds
jmp
push
mov
pop
adc
outsb
push
xor
mov
xor
jecxz
ds
inc
and
lcall
add
imul
jge
push
inc
sub
jge
dec
scas
insl
lods
cmp
sti
fstpl
ja
loope
dec
cmpsl
dec
insl
cmp
jae
enter
dec
fdivl
jb
in
out
arpl
mov
jl
xor
sbb
cmpsb
push
js
adc
inc
xor
mov
mov
adc
or
popf
lret
jle
adc
mov
int3
jne
popa
ljmp
orb
je
fildll
rolb
sub
and
in
sbb
adc
and
cmpb
mov
xchg
int
push
dec
fidivrs
and
je
push
sbb
arpl
sub
mov
std
jg
dec
pop
lcall
arpl
adc
outsl
push
mov
shr
movsb
xchg
mov
sbb
push
or
xchg
push
loop
sub
inc
lret
test
mov
mov
je
or
ljmp
xchg
js
mov
push
dec
pop
pop
pop
jle
addr16
clc
pop
cmpsb
adc
mov
cmp
iret
sub
call
jno
xlat
inc
jbe
rclb
or
xor
stc
adc
or
cmpsb
jb
sbb
push
push
sar
call
and
xchg
dec
lods
ljmp
xchg
dec
inc
cmp
push
mov
mov
in
test
lcall
insb
cmc
adc
mov
adcl
pop
inc
stos
rcrl
dec
dec
jnp
push
dec
sub
incl
xchg
mov
add
dec
loope
jae
lret
icebp
je
or
outsl
clc
call
pusha
outsl
int
cwtl
adc
pop
lods
xor
pop
pop
shlb
cltd
gs
dec
jg
mov
out
jo
xor
mov
lds
iret
jbe
jo
insb
sbb
lahf
lods
cmp
jo
adc
decl
popa
mov
imul
shll
dec
fidivl
inc
insb
dec
add
movsb
pop
arpl
mov
push
sahf
addb
sbb
pushl
pop
jl
test
pop
bound
xlat
pop
addb
insl
lods
add
movsl
pushl
scas
push
fldenv
sahf
pop
loop
mov
outsb
fisubrs
and
mov
jmp
enter
cs
inc
mov
stc
mov
ss
mov
loope
outsl
mov
inc
sbb
push
pushf
xor
lcall
jmp
jmp
pop
clc
pop
insl
add
mov
push
cld
ljmp
sbb
sbb
xchg
ljmp
sbbb
jns
dec
cmp
into
lret
fnstsw
sbb
adc
and
inc
inc
add
ljmp
adc
mov
add
in
mov
out
push
lods
adc
adc
rcl
aad
or
xorb
sbb
pop
call
and
mov
lds
incl
or
add
test
add
pushl
loop
in
pop
and
lds
or
pusha
inc
xor
stos
ljmp
outsb
sbb
sbb
adc
push
push
xchg
pop
ret
rorl
xor
or
push
inc
xor
lods
cmpsb
jecxz
fbld
je
leave
jle
fwait
xchg
or
mov
scas
xor
cmp
sbb
lea
sbb
pushl
jecxz
sbb
dec
js
inc
inc
sahf
bound
jp
rcrb
roll
jge
xor
add
push
mov
jl
and
inc
mov
sbb
mov
js
cli
and
repnz
or
fmull
adc
pushf
xchg
adc
addb
das
cmp
inc
adc
mov
cmp
xchg
or
fistl
sbb
outsb
mov
pop
movsb
decl
sqrtps
movsb
test
push
subl
cld
lcall
inc
xchg
repnz
lahf
xor
or
adc
mov
jg
or
test
jo
jns
rolb
fs
add
call
pop
pushf
loopne
and
cli
lcall
push
add
and
jnp
rorb
xor
cmpsb
xor
fldt
imul
test
fadds
bound
rcrb
ljmp
ljmp
add
outsl
pop
and
sub
inc
push
popf
out
xor
push
dec
push
or
mov
xor
stc
or
adc
sbb
pop
dec
cltd
stos
push
mov
movsl
push
pusha
and
insb
cld
push
xlat
repnz
or
push
push
and
incl
and
add
insb
pop
push
pushl
adc
insb
add
daa
lcall
and
push
addl
mov
outsb
lods
pushl
add
inc
push
aaa
and
lea
cmp
out
xor
push
ror
pushf
sahf
in
insb
xor
or
sbb
sub
std
adc
int
fcmove
shlb
enter
cmp
and
lods
lea
pusha
daa
push
add
mov
adc
inc
and
andl
out
mov
movsl
inc
xchg
jmp
cmp
mov
inc
and
mov
adc
call
or
jae
je
data16
xor
mov
mov
ja
stc
pop
push
decl
adc
stc
mov
outsl
hlt
mov
aaa
add
push
mov
idivl
test
push
aas
mov
lods
test
ss
lahf
test
cmp
repnz
in
pop
das
ret
or
daa
test
push
adc
in
pop
shl
add
xchg
pushl
shr
add
movsb
add
xchg
push
sbb
pop
push
ja
aam
dec
add
or
movsl
ljmp
xor
add
shl
dec
sbb
add
add
cwtl
ljmp
fs
or
sbb
bound
mov
pusha
sbb
jle
ljmp
cmpsl
jl
xchg
mov
add
loop
mov
xor
mov
push
jl
or
dec
bound
enter
data16
add
push
adc
xchg
fs
or
gs
scas
subb
lods
mov
dec
jne
popf
xchg
jno
hlt
pushl
clc
aaa
ljmp
jbe
pop
rcr
int3
mov
jecxz
scas
clc
sbb
dec
mov
jl
roll
ret
sbb
cmc
pop
fld1
jecxz
dec
jo
ljmp
jbe
in
ljmp
xlat
fildll
in
jmp
jae
push
lret
std
pushl
popf
fsubrp
adc
int
adc
mov
pushl
jb
stos
pop
mov
popa
stos
lahf
hlt
inc
adc
popf
mov
push
pop
fidivl
cmp
sub
mov
pop
xchg
js
sbb
enter
sub
adc
dec
ret
stc
les
fsubp
jp
dec
lds
das
enter
mov
pop
popf
jno
pop
pushf
rorb
push
rclb
ljmp
adc
and
mov
cmp
int
cmp
or
les
mov
decl
nop
aas
cltd
sbb
push
xchg
or
adc
jp
ret
and
loop
lcall
loop
push
mov
loopne
dec
adc
imull
stc
lcall
movsb
and
roll
pop
adc
or
stos
add
in
frstpm(287
adc
or
cmpsb
cmp
sbb
cmpl
inc
gs
lea
sbb
es
cmc
jp
mov
aas
mov
arpl
sub
pop
rcr
mov
push
fstpl
mov
outsl
pop
pop
or
pop
adc
ljmp
dec
imul
inc
mov
insb
inc
aaa
cmp
jge
sub
jo
loop
pop
loopne
mov
inc
or
xchg
pop
psubq
stc
cmp
jg
mov
push
mov
sti
push
hlt
add
test
xor
lock
mov
cmc
ffree
mov
xchg
add
aam
mov
sub
lcall
leave
popf
enter
push
sbb
test
jg
dec
xchg
mov
mov
call
push
or
mov
into
call
mov
in
fs
sbb
pop
cwtl
rol
pushf
into
roll
lock
mov
cltd
xor
int
pop
leave
gs
inc
dec
and
incl
fmull
push
test
clc
lcall
mov
mov
out
adcl
adcb
adcl
je
adc
mov
cmpsb
idiv
outsb
lcall
rolb
pop
clc
roll
dec
mov
adc
dec
popf
sub
jmp
pop
clc
lods
mov
fldcw
xchg
call
lods
or
les
mov
or
ja
add
pop
mov
or
add
shl
ficoms
nop
lret
adc
decl
pop
test
sahf
inc
inc
sahf
in
or
dec
or
sub
push
pop
pop
hlt
hlt
nop
pop
mov
test
cld
jmp
lcall
sbb
clc
jg
in
dec
mov
test
and
pop
push
popa
arpl
mov
call
addr16
lret
negb
dec
lahf
negl
xor
adcl
jmp
xor
add
sarl
and
add
fs
mov
jmp
adc
inc
loop
aas
loop
mov
in
dec
movsb
call
std
out
push
popa
pop
negb
sbb
call
inc
add
jo
and
mov
jl
int
adc
bound
push
jnp
and
and
add
push
cld
mov
fidivrs
sbb
or
or
mov
xor
mov
mov
into
movsb
fs
jle
mov
movsb
rorb
mov
out
cld
xchg
push
lcall
sbb
outsb
loopne
jg
les
jecxz
enter
js
dec
pop
lcall
and
xor
into
loope
lret
js
xchg
faddp
ljmp
movsl
xchg
cltd
fsubl
and
or
xchg
fcoml
int3
in
push
ljmp
loop
loope
rclb
outsb
xchg
lds
jp
add
jl
sbb
ljmp
movsb
or
inc
xor
es
lds
aam
dec
les
jo
mov
jg
sub
xchg
cltd
pop
stos
xchg
popf
dec
cmp
and
inc
fldt
ljmp
add
add
cltd
fildl
add
inc
dec
push
faddl
lcall
rolb
test
adc
ficoms
aad
insb
shll
mov
sbb
ljmp
lds
cmpsb
pop
or
pop
stc
nop
lret
test
dec
jo
arpl
jecxz
push
aam
movsl
pop
push
push
nop
add
xor
decl
add
sub
roll
xor
out
dec
or
push
mov
adc
cmp
xchg
hlt
imul
mov
push
test
gs
test
or
mov
fisubl
dec
movsb
mov
mov
mov
shll
jmp
and
les
push
pop
push
int
stc
push
lcall
xor
add
sub
fistpl
fcoms
jb
sbb
hlt
lds
rorb
xor
lcall
dec
or
or
push
xchg
pusha
loope
push
jmp
jmp
aas
fstpl
lea
aam
mov
shlb
mov
jecxz
pushf
push
dec
jl
mov
clc
imul
insl
push
pop
pushf
sbb
ljmp
mov
movsb
cmpsb
mov
inc
lret
and
gs
xor
fs
negb
std
pushl
or
dec
lret
sub
mov
adc
out
pop
mov
test
jo
pop
faddl
aaa
loop
add
xor
xchg
dec
std
jg
out
cld
mov
inc
xor
add
dec
lds
sbb
jg
cmp
inc
xchg
mov
and
or
add
cs
cs
jg
pop
add
or
dec
adc
pop
dec
push
cmp
fbstp
call
push
push
mov
in
and
and
shl
rcll
rolb
pushl
push
lods
test
sbb
pop
pushf
addr16
add
cmp
sbb
int3
xor
mov
mov
in
fs
jle
and
pushf
jl
xchg
imul
push
inc
out
cmp
jmp
aaa
std
ljmp
ret
mov
in
aas
repnz
push
and
movsb
or
movsb
jge
push
call
and
ret
cmpsb
or
gs
fmull
cwtl
adc
mov
push
lret
add
inc
sbb
lahf
sbb
repnz
ljmp
into
and
shlb
cld
int
jns
inc
mov
rcl
nop
sub
push
fcomip
flds
mov
lea
cltd
sbb
pusha
xchg
repnz
add
in
loop
clc
lcall
pop
adc
fisubs
adc
xchg
cmp
add
mov
add
push
cwtl
cmp
mov
jge
add
in
push
sub
push
loopne
mov
movsl
mov
mov
lcallw
xchg
jg
or
mov
in
xchg
testb
out
loop
lods
lret
cmc
pop
shrb
pop
rsqrtps
lcall
jne
add
rolb
adc
and
fadds
decl
iret
dec
and
mov
test
cmc
iret
push
test
insl
xchg
cli
mov
push
or
std
xorb
aad
cwtl
lret
push
pop
push
adc
lcall
push
popa
and
sub
add
nop
or
pop
lcall
add
or
in
imul
push
sbb
lock
repnz
stc
mov
pusha
movsb
test
mov
in
pusha
lods
inc
in
cmp
ss
dec
jnp
lods
into
adc
push
call
push
or
add
inc
push
movsb
inc
push
and
mov
test
jg
fwait
roll
pushf
arpl
sub
adc
fdivrp
jg
dec
mov
shll
mov
or
mov
mov
lcall
leave
mov
sub
cld
imul
sbb
push
push
int3
and
push
jl
js
in
ja
mov
lea
jl
xchg
enter
daa
xchg
xchg
jl
adc
fadd
fwait
add
clc
out
dec
ss
jg
orb
sbb
pop
pop
int3
dec
and
inc
enter
pop
adc
mov
dec
aam
mov
lcall
scas
mov
scas
mov
and
or
lret
data16
xchg
sbb
push
jne
test
test
jg
mov
cmp
in
mov
fucomip
pop
out
fmul
dec
popl
ljmp
incl
pop
cs
pushf
jb
jnp
sar
jnp
inc
jnp
mov
push
cmp
dec
adc
mov
fmul
insb
hlt
jg
mov
mov
int
push
inc
inc
sbb
std
or
or
mov
cmpsb
push
loopne
lret
mov
mov
mov
negb
mov
mov
addb
sbbl
in
and
pop
pop
inc
rcrb
ljmp
sbbb
int3
xor
mov
popf
cmpsb
inc
daa
dec
es
icebp
inc
jb
mov
fbstp
inc
fisubrs
mov
fcmove
fwait
stos
push
xchg
test
imulb
aas
gs
outsb
push
xor
cld
stos
dec
cs
enter
inc
jle
rcll
add
and
sbb
lcall
pop
xor
lret
and
adc
inc
push
mov
push
incl
sahf
je
xlat
cmp
push
lea
dec
test
ljmp
mov
dec
mov
jg
dec
bound
jg
stos
ret
pop
or
push
adc
ror
sbb
pop
cmp
adc
lods
sub
jo
outsb
push
mov
jno
mov
fwait
lret
mov
sub
xchg
mov
xlat
mov
sub
decb
in
push
cmp
decl
xchg
mov
lea
cmp
pusha
out
imulb
mov
in
test
frstor
frstor
lods
jne
repz
dec
in
repnz
inc
call
push
cwtl
repnz
or
push
mov
xor
outsb
lret
loope
outsl
mov
add
rolb
sti
ja
ljmp
adc
dec
bound
push
xchg
lds
add
les
add
add
call
insb
mov
cmpsb
loop
cli
pop
xchg
dec
test
push
clc
pushl
popf
cmp
ficomps
push
mov
incl
arpl
insb
xor
int
and
call
js
test
add
lock
imul
iret
cmpsb
ds
shl
xchg
adc
lods
or
inc
mov
mov
das
dec
sbb
in
add
lcall
pop
xor
sti
or
sub
push
rdtsc
sub
leave
jb
lcall
sub
into
icebp
scas
inc
xchg
and
inc
xlat
push
pop
and
lds
repnz
incl
push
jb
or
xor
out
ret
xor
out
cmp
movsl
repz
pop
xor
pop
outsb
adc
and
loop
gs
and
and
decl
sub
xchg
xor
jp
dec
jecxz
mov
lcall
lods
subl
cmp
sbb
loope
pop
rorb
fdivrl
rorl
pop
icebp
pusha
mov
mov
movsb
call
test
dec
in
push
aaa
pop
stos
push
fisttps
jbe
lods
outsb
test
lock
addr16
out
inc
push
les
rolb
add
mov
enter
and
insl
dec
call
out
push
hlt
or
hlt
fistpll
pusha
dec
mov
add
adc
incl
mov
loopne
ret
sbb
inc
push
icebp
pop
inc
ljmp
ret
faddl
add
icebp
pop
test
cmp
orb
ljmp
dec
in
push
ljmp
outsb
xchg
lahf
cli
sub
pushl
iret
aaa
aaa
xchg
jnp
mov
mov
shlb
icebp
xchg
in
loope
lods
fwait
cmpb
fsubrs
repnz
cmpsb
and
push
jp
sahf
adc
add
out
sub
ret
jb
jno,pn
aas
insl
sbb
rcl
mov
call
inc
lret
insb
push
cld
cmp
add
push
xor
testb
or
and
test
pop
lretw
push
fisubs
call
sbb
ret
inc
imul
push
mov
scas
jmp
pushl
jns
and
mov
jecxz
insb
xchg
jae
mov
gs
outsb
loop
stc
lcall
loopne
push
sub
cs
mov
ds
mov
ljmp
cmp
jno
sub
jb
outsb
mov
lcall
inc
negl
roll
fwait
popa
mov
sar
inc
sub
daa
or
les
test
push
sub
mov
rorl
and
adc
rorb
pop
rorb
sbb
sar
incl
inc
data16
adc
enter
adc
mov
lret
xchg
sub
lock
cmp
or
xor
inc
xchg
leave
or
sahf
adc
xchg
pop
cmpsb
out
mov
pop
push
pusha
adc
inc
sbb
xor
and
sbb
pop
cltd
jmp
dec
cltd
and
mov
inc
mov
mov
jo
data16
cltd
adc
push
cwtl
push
mov
ljmp
lcall
ja
fisubl
adc
idiv
inc
incl
jo
das
jb
loopne
sub
imul
lock
mov
lds
movl
pop
sbb
fwait
inc
insb
imul
nop
inc
dec
or
mov
fbld
dec
mov
imul
shlb
xchg
es
stc
sub
iret
les
jg
addb
jb
int
inc
addr16
inc
mov
mov
xchg
popf
mov
push
xchg
or
cld
incl
es
or
push
inc
test
push
fcmovbe
scas
mov
mov
mov
pop
movsl
loopne
push
ds
sbb
mov
add
sub
xchg
ds
add
and
outsb
pop
mov
mov
dec
lods
mov
xor
mov
push
sub
mov
and
mov
jl
jmp
sub
lcall
jmp
rorb
xor
sarb
cld
adc
jmp
mov
sub
sbb
mov
mov
call
inc
ret
fsubrl
sbb
lock
cmp
mov
and
lds
mov
ret
lcall
cmp
ret
add
mov
std
jg
and
or
mov
mov
loopne
hlt
add
push
xchg
adc
nop
cmpb
enter
hlt
shlb
popa
loop
incl
cmp
push
pop
add
add
sbb
cmp
insb
popl
mov
ret
adc
incl
and
cwtl
push
xor
jp
aaa
dec
ret
xchg
sbb
enter
push
sbb
data16
es
fsubrs
daa
lahf
test
sub
lcall
hlt
fsin
idiv
call
push
push
scas
cmp
xchg
loop
mov
mov
add
pop
fnstenv
dec
mov
std
mov
jnp
jmp
leave
ljmp
inc
add
into
int3
ljmp
sub
pop
inc
pop
cmp
loope
xlat
push
enter
sub
ret
xchg
xchg
jns
jns
nop
add
in
into
inc
dec
or
xor
mov
cmp
xchg
xchg
outsb
jmp
push
ret
push
repz
test
pop
sti
fmuls
adc
call
insl
stos
mov
stos
lcall
jb
sub
push
xchg
xchg
rclb
or
mov
xor
fwait
or
add
inc
maxps
repz
mov
enter
or
orl
ljmp
fistps
sarl
jmp
dec
xchg
jns
lret
or
add
iret
ljmp
fbstp
orl
fwait
pop
lods
xor
iret
rol
les
sub
outsl
cli
incl
sbb
and
jecxz
add
push
dec
not
lcall
push
adc
imul
mov
push
ret
jns
clc
xchg
in
or
add
or
shll
and
out
adc
add
adc
jb
out
in
and
loop
adc
rclb
jmp
dec
dec
cwtl
gs
push
pop
movsb
mov
inc
sahf
cmc
xchg
sbb
add
xchg
nop
xor
ljmp
xor
test
test
pop
xor
add
or
loope
pushl
js
clc
out
gs
inc
pusha
xchg
and
ljmp
arpl
lret
mov
sbb
test
int
ret
std
out
inc
cli
mov
xchg
lods
and
sub
jecxz
into
mov
push
sar
cmp
aaa
mov
ds
loop
fcomip
fistpl
pop
jl
test
and
loope
movsl
sub
lcall
incl
ljmp
mov
push
push
cwtl
cli
or
push
ljmp
jg
mov
jge
ret
test
jne
inc
call
aaa
adc
incl
jp
xchg
in
bound
adc
outsb
dec
cmp
aam
or
inc
push
repnz
pop
call
bound
inc
sbb
je
lea
jnp
fs
mov
or
call
mov
arpl
pop
xchg
xorb
ljmp
shlb
cs
sbb
dec
test
out
fstpl
mov
dec
jmp
sbbl
sub
jbe
add
repz
add
dec
inc
pushl
mov
js
push
dec
add
xchg
test
jg
and
aad
in
mov
add
stos
ret
pusha
mov
sub
aad
push
inc
enter
xor
lock
fistps
dec
fldenv
test
mov
push
and
adc
jmp
inc
mov
adc
std
mov
xchg
test
loope
mov
or
lcall
loop
xor
add
les
call
inc
adc
daa
imul
dec
inc
sbb
push
pop
imul
mov
test
lea
push
mov
shll
bound
incl
std
fcoms
push
xchg
mov
jmp
mov
hlt
xor
je
mov
jmp
aaa
insb
or
addr16
xchg
cwtl
ficoml
mov
xor
add
mov
test
mov
sub
push
xor
jne
stc
scas
mov
sub
gs
cwtd
jle
es
andb
call
cmp
mov
xchg
lea
pop
cmp
cltd
pop
lods
test
dec
or
push
call
fistpll
outsb
mov
mov
lods
je
sbb
mov
outsl
nop
movsl
mov
insb
and
and
add
test
cmpsb
in
movsl
les
adc
cmp
ljmp
sti
mov
mov
adcl
add
pusha
cmp
jle
cwtl
pop
hlt
mov
and
push
or
enter
mov
popf
mov
lret
out
into
push
inc
cli
pop
sbbl
adc
in
mov
lock
or
jp
pop
adc
repz
in
subb
push
loope
mov
dec
test
mov
ljmp
repnz
inc
push
pop
popf
add
nop
xor
add
jg
cmp
mov
or
add
testb
imul
icebp
xor
lcall
movsb
jmp
jbe
jb
sub
loopne
ljmp
inc
int
mov
mov
outsl
cli
jg
lods
lods
outsl
insl
ljmp
pusha
pop
sbb
sub
push
or
incl
fxch
pop
pop
outsl
rcll
and
stc
and
lock
clc
xchg
xchg
aas
aad
lret
fisubl
mov
xchg
add
jg
shlb
fisttpl
in
cld
mov
pop
test
add
and
movsl
shll
dec
sbb
decl
test
ja
repnz
and
outsb
adc
loopne
ret
sbb
lcall
jne
xor
cli
add
jb
pushl
imul
pop
repnz
sahf
add
cwtl
aad
or
mov
inc
mov
clc
aas
mov
lcall
push
fwait
inc
mov
mov
push
xor
push
push
push
mov
inc
xchg
cmpsl
mov
push
adc
jp
jno
jo
mov
jmp
push
mov
addr16
int3
xor
inc
push
adc
inc
jne
or
adcb
or
jb
bound
push
add
call
inc
xor
pop
imul
cli
jg
stos
data16
jge
mov
cmp
ljmp
mov
ljmp
sbb
sub
stos
out
mov
std
ljmp
xor
pop
inc
jbe
xor
sub
cli
jg
cmp
sbb
lcall
or
shr
jecxz
cld
call
hlt
int3
fs
mov
das
mov
subb
mov
jg
sub
mov
mov
cmc
pushf
insl
xchg
iret
push
mov
fdivr
sbb
mov
ljmp
jp
das
sub
cli
out
std
iret
addb
popa
in
inc
cmp
push
int3
add
movsb
xor
mov
xchg
push
xor
ds
decl
decb
sbb
incb
repnz
lock
and
jnp
push
add
mov
call
les
daa
mov
decl
dec
inc
adc
cmc
call
pushl
pusha
push
dec
and
add
loop
sub
sub
dec
mov
in
loope
and
add
add
or
outsb
push
sbb
mov
mov
pop
push
mov
jmp
test
inc
in
add
cmpsb
es
sub
push
test
lcall
push
xor
mov
and
pop
inc
mov
sbb
fildll
push
lock
mov
cmp
mov
ljmp
sub
fadds
sarl
and
mov
inc
jmp
cli
ljmp
decl
adc
int
sub
adc
mov
dec
nop
add
ss
mov
inc
cmc
cli
mov
adc
ss
bound
mov
sub
sub
xor
mov
inc
sahf
pop
pusha
sub
push
or
ret
sarb
pushl
ljmp
or
dec
sub
and
int3
scas
es
insl
lret
fbld
inc
in
aas
clc
adc
test
outsl
clc
jmp
insb
jp
pop
inc
push
adc
xchg
out
lods
mov
xchg
pop
push
cli
jg
xchg
out
stos
sub
cmp
mov
leave
decl
mov
dec
sub
xorb
xor
lcall
cld
and
call
push
and
subb
and
pusha
lcall
outsl
pop
and
mov
loopne
dec
rol
ror
jns
lret
lahf
cmpsb
outsl
scas
clc
adc
mov
es
add
hlt
rcr
add
sub
add
inc
lret
and
mov
add
in
inc
gs
adc
rclb
call
jg
sub
sub
insb
das
jno
push
out
push
and
jg
imul
and
mov
inc
inc
cmpsb
lcall
add
incl
insb
add
adc
movsl
push
ljmp
movsb
and
test
xor
jmp
bound
jge
adc
test
das
pop
loop
aaa
push
inc
mov
cld
xor
dec
aaa
decl
lea
cmp
xor
inc
dec
jo
sbb
mov
cmp
jmp
out
repz
inc
jns
in
into
jmp
mov
cmp
and
icebp
or
mov
imul
xchg
jo
mov
lret
insl
ret
ljmp
xchg
sub
rol
clc
or
movsb
inc
or
out
inc
add
add
bound
fbstp
xor
inc
fmull
scas
dec
xor
sub
jmp
movsb
inc
lds
sub
inc
xchg
cli
inc
add
dec
sahf
mov
dec
sbb
sub
add
ljmp
aam
xor
and
pop
pop
movsb
rorb
mov
arpl
ljmp
push
xor
add
test
mov
clc
decl
dec
inc
movsl
add
hlt
loop
jl
pop
dec
add
push
repz
add
lock
decl
sub
mov
rclb
inc
cmovle
pushaw
mov
lret
negb
fwait
inc
clc
or
daa
dec
add
repnz
mov
rsm
and
adcb
xor
push
jmp
in
pop
mov
or
mov
jae,pn
fisubrl
stos
and
stos
sbb
xor
hlt
and
push
fcmovb
pusha
sub
and
daa
mov
aam
sub
or
ja
ret
dec
mov
pop
rclb
stos
xor
xchg
xchg
sarb
das
iret
jo
repnz
inc
icebp
jbe
xlat
cld
out
xorb
rcll
xor
out
mov
add
out
jg
insb
xchg
mov
bound
outsb
jb
cmc
inc
pop
hlt
jno
repnz
push
add
cmpsb
ficomps
cli
push
xor
jno
fildl
add
lcall
lods
bound
sub
adc
jb
ds
dec
or
pop
xchg
mov
xchg
mov
mov
stos
ja
incl
sub
call
dec
or
push
decl
dec
ljmp
xor
test
cmp
jae
sub
mov
test
cli
mov
bound
push
xor
daa
xor
jecxz
bound
out
mov
insl
mov
fisttpl
inc
dec
andl
push
jae
sar
cs
lds
arpl
cmp
dec
pop
arpl
lcallw
xor
cmp
pop
mov
add
lds
inc
aas
push
aad
pop
out
lret
jecxz
xchg
xor
mul
or
xchg
jbe
into
loopne
out
push
push
faddl
sbbb
icebp
xor
loopne
mov
add
mov
add
out
push
add
aaa
mov
popa
jecxz
call
and
and
out
xor
incl
int
in
mov
rcll
loop
rolb
movsl
cmp
out
push
jns
pop
loop
lods
in
push
movsl
iret
mov
ds
xor
sub
push
push
dec
iret
push
addr16
mov
mov
mov
imul
jno
push
mov
test
jecxz
mov
inc
lock
les
and
lds
je
jecxz
mov
loop
pop
or
sahf
loopne
incl
dec
jle
jnp
bound
mov
dec
or
inc
sub
sarl
cmp
or
incb
xchg
int3
add
cmp
lcall
mov
sub
jecxz
dec
imul
cs
out
dec
mov
dec
je
in
dec
out
ljmp
xor
sbb
pushl
ljmp
inc
xor
arpl
outsl
and
cmpsl
and
out
dec
es
mov
decl
jp
int3
mov
push
sbb
ss
add
sbb
sub
sub
cli
jmp
cmp
add
in
outsw
dec
and
call
loopne
jmp
inc
or
dec
or
subb
jb
mov
sub
mov
or
movsl
ror
add
loope
aam
addl
jp
push
jo
rol
mov
fimull
jo
adc
stos
mov
add
add
int
push
cmc
and
push
dec
lcall
test
or
and
and
out
cwtl
gs
icebp
outsb
adc
mov
jbe
es
aam
mov
mov
dec
adc
andb
jecxz
push
jg
ljmp
adc
adc
adc
push
ljmp
insl
adcb
jge
shll
pop
movsl
dec
xorb
add
xor
loopne
lret
cltd
mov
fisttps
out
dec
pushl
sub
lahf
popa
in
adc
call
out
or
addl
ljmp
or
out
cmp
shrl
idivl
shrb
icebp
jecxz
add
insb
or
loop
mov
aaa
std
dec
sbb
repnz
xchg
adcb
lcall
pop
das
lcall
in
jmp
adc
aas
jb
push
cmpsl
data16
ret
jmp
push
clc
cmp
add
cwtl
test
getsec
bound
inc
cld
ljmp
xchg
inc
jnp
add
mov
sub
fsubs
mov
inc
push
hlt
jg
inc
enter
and
or
inc
or
cwtl
inc
out
adc
mov
pop
daa
and
movsb
lcall
sbb
data16
incl
mov
repnz
rcrl
into
cs
int3
outsl
outsl
clc
dec
stos
add
cwtl
push
push
or
and
scas
ljmp
mov
aaa
mov
xor
pop
adc
pop
out
dec
filds
or
push
test
lds
gs
dec
test
cld
pushl
xchg
push
jl
test
outsb
and
cli
jg
xor
faddp
cmc
mov
mov
xchg
push
mov
pushl
ja
mov
push
out
jbe
jmp
jns
xlat
jbe
testl
xlat
sub
dec
add
dec
mov
outsb
push
jnp
movsb
les
pushl
xchg
daa
xchg
popf
test
jl
or
xchg
mov
pop
xor
imul
test
movsb
sub
repz
lock
fcomip
jmp
sub
push
mov
mov
lret
sbb
mov
pop
sub
inc
test
cs
test
xchg
cmp
sub
mov
test
data16
pop
cmpsl
jb
call
sub
fisubrl
jg
xor
bound
cwtl
pushf
ljmp
pushl
add
and
lods
mov
dec
pusha
pop
jp
and
xor
std
imulb
sbb
ror
inc
mov
movsb
pushl
mov
lret
enter
mov
daa
cmpsb
fcmovbe
sahf
pushf
mov
mov
outsb
dec
inc
mov
rolb
clc
decl
inc
push
add
out
add
push
icebp
dec
mov
dec
add
mov
decl
jno
out
stos
insb
or
repnz
bnd
sub
pop
cld
mov
inc
inc
stos
call
push
dec
adcb
xor
xor
hlt
ljmp
sbb
shrl
lods
cmpb
mov
inc
cltd
pop
addb
ret
adc
xchg
dec
sti
js
sub
aaa
mov
mov
fmuls
pop
std
aam
pop
cmp
push
dec
outsl
mov
scas
xchg
dec
imul
pop
mov
andl
sahf
pop
fdivrs
inc
leave
jp
mov
shlb
adc
fldl
iret
mov
mov
jle
mov
hlt
inc
xchg
les
add
push
or
pushl
jne
sub
lea
cmp
mov
adc
dec
pop
inc
add
inc
loopne
in
cld
les
adc
data16
inc
mov
loopne
pop
and
loop
inc
mov
push
add
inc
sub
pushl
mov
inc
js
addr16
xchg
inc
xor
mov
hlt
jmp
andb
xchg
adc
outsl
bound
pop
cmpb
push
add
mov
ljmp
pusha
inc
push
jle
or
pop
ret
or
rorb
pop
add
push
push
nop
loopne
mov
out
sbb
jbe
cmpsl
jns
push
jmp
pusha
pop
jg
and
or
rolb
lds
ret
addl
or
int
adc
and
pop
sub
jmp
jg
sub
ljmp
test
shl
push
out
xor
adc
push
mov
jg
sub
out
and
jno
or
push
and
jmp
add
fbld
xchg
ret
lcall
sub
aad
pop
xchg
xchg
push
call
dec
mov
jbe
xlat
les
daa
pop
addb
ret
mov
lods
xchg
xchg
mov
in
xlat
adcb
pop
lcall
pusha
fwait
lods
fdivrs
js
dec
cltd
cmpsb
repz
mov
jp
lcall
pop
push
pusha
mov
cmp
lods
pop
cltd
test
mov
dec
push
jmp
xchg
xor
and
jge
insl
push
aad
xchg
cmp
xchg
scas
insb
sub
cmp
incl
lcall
mov
cld
in
cs
sub
cmp
lahf
mov
cltd
pop
or
and
or
call
push
inc
daa
test
sbb
pop
inc
int3
loope
mov
mov
mov
xor
add
dec
inc
movsl
clc
incl
sub
sub
imul
or
mov
lock
pushf
xor
cld
inc
xchg
push
out
add
orb
pusha
adc
add
call
scas
andb
push
add
sbb
decl
add
fdivs
sub
cmp
test
dec
mov
pop
ja
mov
mov
xlat
shl
xor
push
add
shlb
pop
adc
cld
mov
pop
test
cmp
push
and
lcall
mov
pop
gs
shll
mov
jg
sbb
xchg
jecxz
lret
xchg
and
mov
mov
and
fdivrl
cmpsb
push
loop
lcall
mov
repnz
lcall
xor
add
scas
jmp
cld
call
jb
inc
or
sub
mov
inc
loope
push
andb
ret
or
sar
lds
or
shl
sbbl
std
pushl
test
or
js
adcl
rolb
out
lods
dec
dec
outsl
push
sahf
push
bound
adcl
pop
mov
cld
fistps
adc
or
lcall
inc
into
lea
mov
idivb
fs
mov
pop
movsb
push
xchg
xor
movsb
inc
inc
ljmp
push
cmp
sbb
data16
incl
pop
mov
data16
dec
bound
add
mov
xchg
mov
pop
sub
cwtl
popf
xchg
cmpsb
cwtl
ljmp
jp
push
mov
push
test
adcl
fdivrs
jg
std
mov
mov
scas
mov
cmpsb
xchg
push
sub
pop
sbb
mov
pop
or
xchg
and
pop
nop
sbb
cmp
clc
add
jg
ljmp
popa
cmp
adc
aam
inc
or
out
clc
scas
add
mov
pop
cmpsb
sar
call
push
push
cmp
xchg
sbb
mov
mov
pop
jns
inc
xchg
pop
pop
mov
andb
out
mov
pop
push
add
pusha
call
cld
pop
mov
mov
add
std
cmp
call
test
cwtl
pusha
jecxz
movsl
gs
sbb
rclb
loopne
shlb
fisubl
enter
test
mov
ljmp
mov
jecxz
adc
push
mov
repz
xor
mov
popa
test
cmp
push
mov
les
sbb
addl
pushf
cld
push
lcall
je
and
je
inc
xchg
sub
mov
loope
or
inc
sbb
cmp
incl
push
mov
cmp
test
orb
push
inc
cli
sub
testl
mov
jne
inc
mov
sbb
incl
loope
insl
loop
daa
lcall
mov
jp
dec
icebp
mov
adc
imul
push
test
mov
inc
sbb
mov
cmpsb
or
inc
pop
push
xor
pushf
push
sbb
jmp
je
lock
lods
jmp
push
addr16
sahf
adc
jbe
clc
lcall
mov
sbb
or
movsl
xchg
pop
pop
pop
stc
in
cmp
mov
push
out
sub
jmp
jge
stos
add
adc
cwtl
cmp
pop
fisubl
jmp
sub
mov
or
mov
adc
sub
dec
inc
nop
adc
push
movsl
mov
add
add
ret
cwtl
imul
mov
lcall
jae,pn
in
ja
mov
mov
add
pop
xchg
mov
cwtl
push
insl
popf
or
push
dec
mov
je
jne
xlat
push
mov
xchg
stos
fs
adc
js
sub
sbb
mov
rolb
adc
rclb
sar
incl
push
inc
mov
negb
xchg
jl
sbb
inc
sbb
xor
xor
subl
jns
adc
xor
sub
cmpsl
and
pop
fs
adc
xlat
cltd
lcall
icebp
aaa
jo
imul
add
loope
mov
lahf
mov
cli
push
cld
dec
aas
push
mov
cmp
sbb
in
rorl
inc
popf
xchg
hlt
das
sahf
dec
push
mov
mov
decl
mov
xchg
loope
and
jl
xorb
pop
push
pop
into
incl
outsb
pop
xchg
mov
or
jmp
mov
enter
stos
addr16
mov
adc
ret
xchg
cmp
push
sub
mov
adc
jmp
in
and
and
ds
add
cwtl
ret
adc
push
cli
out
rclb
sbb
ljmp
divb
pop
push
push
adc
out
hlt
add
push
andl
push
lcall
mov
pop
mov
stos
test
cld
incl
movsl
and
sub
pop
mov
cmpsb
shlb
icebp
pop
or
inc
clc
ds
fisubs
pop
adc
int
mov
call
mov
add
ficoml
sub
std
ljmp
jl
push
or
movsb
or
enter
in
aam
jg
or
push
gs
ret
sub
push
mov
movsl
cmp
or
fsubrs
push
or
fmuls
pushl
mov
pop
jle
adcl
rol
pusha
push
lcall
dec
mov
sbb
or
and
sbb
addr16
cmp
push
dec
and
stos
sbb
bound
inc
cwtl
in
pushl
fldl
dec
add
mov
jge
leave
pop
stc
movsb
or
popa
adc
push
dec
mov
test
mov
push
jo
mov
jmp
bound
and
stc
lods
decl
and
mov
jle
pushw
fcomps
daa
mov
ljmp
mov
cmc
int3
lock
xor
repnz
xor
pushl
pop
push
adc
lahf
and
and
or
push
js
inc
sbb
xchg
sub
fsubrs
jle
mov
testl
ljmp
mov
test
daa
movsl
xchg
push
inc
gs
ljmp
add
ljmp
jbe
jo
pusha
cmp
xor
sub
mov
inc
pop
sub
call
adc
rcll
inc
mov
xchg
cs
insb
or
decl
lock
jmp
xor
int3
mov
pop
bound
fidivs
lods
ljmp
ret
adc
lods
or
push
sub
test
stc
add
out
xor
das
and
mov
faddl
mov
insb
and
loope
jo
and
jno
bound
inc
call
xchg
xor
xchg
adc
test
inc
add
jmp
andb
loope
addr16
nop
xor
push
lods
cmp
adc
loop
sbb
and
mov
cmp
ret
in
jl
aaa
add
push
cld
decl
out
jmp
and
add
shl
push
push
jg
add
pop
inc
mov
and
and
adc
daa
dec
mov
push
and
pop
mov
cmp
fs
sahf
std
incl
cld
push
dec
jmp
jl
dec
cmp
ss
lret
dec
inc
rorb
les
mov
dec
adc
out
mov
cs
jle
sarl
fcmovnb
sub
push
jns
xchg
test
sbb
int
jp
cli
jns
incl
ja
xchg
or
pushl
sub
dec
std
or
out
xchg
xor
les
xchg
lds
mov
push
test
leave
or
inc
fwait
stos
lock
idiv
ljmp
adc
or
push
sub
repnz
rcrl
jmp
cmp
cmc
movsl
addr16
mov
test
mov
adc
jb
ljmp
sbb
push
inc
fnsave
aaa
sbb
push
test
push
cli
push
adc
or
sbb
and
shrl
insl
movups
mov
data16
sbb
push
cmpb
pushl
and
lcall
inc
mov
idiv
sbb
negl
adc
aaa
pop
add
lret
mov
popf
fstpt
dec
sar
cmp
leave
leave
jmp
rcrb
xor
jg
xor
xchg
xor
cmc
testb
outsl
je
dec
mov
jnp
pop
idiv
mov
ljmp
add
push
cmp
and
push
and
in
push
daa
and
mov
xchg
xor
add
ss
sub
pop
fwait
xor
push
adc
cli
add
call
cli
lods
mov
mov
cmp
or
bound
bound
xorl
mov
inc
sub
cmp
dec
push
push
cld
lcall
and
loop
dec
fdivl
lock
arpl
sub
jg
add
pop
fs
out
fs
mov
sub
cmp
push
inc
outsb
dec
adc
ja
icebp
das
movsb
aaa
or
rcl
nop
add
addr16
adc
ret
decl
incl
push
inc
popa
shrl
add
das
pop
mov
cmpl
jp
push
rcrl
gs
inc
cwtl
xchg
adc
add
pop
and
jp
mov
mov
push
mov
inc
and
jg
add
xor
and
aam
lds
and
adcb
decl
xchg
adc
mov
add
pusha
add
cmc
insb
lcall
loop
mov
out
mov
add
out
out
jge
add
jmp
pop
push
jo
jg
add
data16
jle
mov
push
sbbl
outsb
push
xor
xor
out
in
mov
lock
push
rolb
nop
call
repnz
mulb
cmpl
test
add
jo
and
or
out
push
jno
ret
lods
dec
xchg
push
pop
adc
clc
call
jno
les
mov
fwait
sbbl
pusha
test
ret
add
shrl
xchg
pop
mov
adc
ljmp
push
push
push
or
and
adc
pop
test
dec
mov
dec
mov
mov
and
and
xchg
xchg
push
in
push
jge
daa
inc
mov
cli
mov
call
xchg
mov
bound
aas
push
daa
sub
mov
pop
popa
cs
xchg
inc
popa
jno
insl
in
inc
pop
jbe
jp
les
push
xor
sub
fsubs
push
insb
adcl
push
dec
adc
dec
adc
sar
mov
addr16
adc
jb
dec
mov
loop
scas
xchg
push
adc
inc
fwait
int3
adc
lock
jecxz
and
and
xor
mov
aas
data16
mov
inc
inc
xchg
mov
mov
inc
push
jl
loop
pop
sbb
mov
ja
out
stos
insl
adc
pusha
fs
loop
xor
idivl
sbb
adc
xchg
lcall
cmp
data16
lock
jmp
pop
pop
xor
lds
scas
and
call
mov
pop
or
add
pop
aad
decl
pop
push
push
dec
inc
add
xor
or
insl
int3
std
jbe
lcall
popa
jo
adc
add
pop
xor
pop
sub
shl
jo
subb
sbb
sub
xchg
push
das
add
lock
sub
nop
add
movsb
cmp
mov
adc
xlat
pop
and
cmp
mov
and
sub
push
push
xchg
dec
cltd
fdivl
adc
jbe
inc
mull
push
sar
call
xor
jb
bound
add
xchg
push
aas
nop
jb
pop
mov
adc
jae
orb
ja
subl
hlt
outsl
les
and
mov
mov
sbb
dec
les
xchg
sub
pop
pop
xchg
jp
mov
je
jbe
adc
icebp
add
inc
or
js
jne
add
adc
mov
addb
loopne
cld
or
push
xchg
test
push
add
mov
pop
sub
stos
add
add
adc
pop
add
int
adc
incl
jnp
sbbl
adc
hlt
fisttps
mov
push
sarl
cmp
fstp
and
dec
push
lods
int3
jns
mov
inc
notb
test
dec
push
xor
fcoml
jg
ja
test
js
scas
and
mov
sbb
rclb
jp
jle
aad
xchg
add
movsl
inc
dec
adc
aaa
xchg
ret
enter
js
ud0
mov
aam
pop
and
add
loope
sub
pop
sbb
sub
xor
jecxz
xor
outsl
add
cmp
pop
leave
and
cmp
jg
dec
mov
or
xchg
add
push
jmp
cmp
jb
ret
push
push
mov
jns
pop
fiaddl
jmp
pop
sub
xchg
xchg
pop
jns
inc
loopne
test
fildll
push
jmp
dec
dec
cli
and
sub
sbb
push
add
mul
xchg
adc
sub
sbb
xchg
push
cmpsl
lret
xchg
push
cmp
jmp
mov
sbbl
adc
push
pop
sub
test
adc
pusha
imul
pop
inc
shlb
jo
mov
test
xor
sub
fdivrs
aaa
mov
sub
popa
lcall
fildll
mov
test
rcrl
sub
inc
pop
ljmp
mov
add
lock
dec
fadds
dec
ljmp
out
xchg
insb
jb
shlb
fnstcw
mov
ljmp
sbb
sub
mov
add
outsl
in
mov
mov
xor
sbb
decb
pop
idivb
cwtl
call
pop
aas
pop
repz
ljmp
mov
mov
ror
sbb
sbb
cmp
aaa
dec
idivb
cmp
mov
and
fiaddl
jne
pop
mov
mov
inc
cmp
adc
xchg
push
std
out
cli
decl
adc
cmp
push
push
pop
jno
test
push
ljmp
jg
push
adcb
lods
jecxz
mulb
pushl
sbb
and
mov
cs
xchg
popa
stos
adc
mov
cltd
add
test
push
test
bound
jbe
adc
clc
notb
sbb
jmp
imul
repz
addb
orb
popa
ja
xor
test
pop
std
mov
adc
jp
push
mov
rclb
and
int
adc
fwait
inc
pushl
pop
mov
adc
pushf
std
add
sarb
sbb
fildll
jecxz
icebp
mov
xor
cmp
jl
lods
pop
pop
loopne
jmp
inc
sar
sub
repnz
fmull
or
sub
rorb
lea
sarl
push
adc
push
add
add
xchg
call
xor
lock
mov
das
sbbl
cmp
mov
add
xor
decl
rcrb
idivl
dec
dec
push
sbb
dec
ret
mov
fcomp
add
dec
imul
mov
and
or
xor
mov
cld
mov
faddp
mov
test
je
push
aaa
pusha
add
loope
mov
mov
dec
sbb
pushf
jae
test
call
daa
or
bnd
add
shlb
mov
cmpl
inc
xchg
dec
ljmp
cld
test
sub
les
ljmp
xchg
push
sbb
sbb
adc
jae
cli
lcall
or
movb
push
xchg
adc
rorb
push
push
aas
pushl
push
jno
xchg
xchg
bound
sub
add
out
gs
add
mov
fldt
mov
decl
or
leave
call
mov
lods
into
sbb
inc
jp
fisubrl
lcall
in
fsubrp
leave
mov
or
aam
adcb
stos
inc
sub
lcall
shrl
dec
xchg
mov
dec
lds
adc
add
inc
or
fsubrl
push
cmp
mov
lock
in
mov
inc
cmp
jge
mov
test
cld
fidivl
add
into
pop
mov
into
add
arpl
xor
imul
mov
repz
adc
adc
pushl
pop
mov
xor
mov
pop
iret
lock
push
rorb
mov
push
push
push
daa
mov
jnp
or
stos
mov
xchg
or
sbb
rcrl
sub
clc
push
push
mov
ficoms
xor
bound
pushl
jo
mov
and
add
prefetchwt1
or
jno
sub
das
cli
into
ret
sbb
mov
and
les
xchg
or
icebp
dec
std
aam
dec
cmp
imul
psrad
sbb
ret
fcmovb
jmp
xchg
inc
imul
adc
aam
jg
jb
ds
sub
xor
sub
inc
imulb
pop
test
inc
add
xor
adc
in
cwtl
mov
scas
aaa
xor
lds
int
mov
and
leave
out
aad
jmp
into
dec
adc
sub
je
vmovlpd
repz
nop
jmp
push
sarb
popa
sub
ljmp
inc
mov
ljmp
movsb
push
insb
movsl
sahf
ljmp
ds
mov
jmp
fsubrp
xchg
dec
jmp
incb
dec
shr
into
jmp
scas
jmp
mov
mov
mov
push
mov
dec
in
adc
int
lock
pop
sbb
hlt
mov
lods
call
les
mov
pop
out
fdivr
ljmp
xor
stos
insb
inc
and
lea
mov
push
rcrb
inc
mov
push
sbb
push
lret
mov
cld
inc
fbstp
adc
mov
psubusw
pop
jns
mov
loop
popf
movsl
xor
jecxz
ljmp
hlt
cmp
add
das
add
movl
xchg
jp
add
lcall
ret
das
xorl
inc
pop
std
adc
decl
cmp
dec
mov
popf
jecxz
sub
leave
icebp
push
scas
mov
loope
fistl
push
pop
pop
mov
lret
cmp
ljmp
hlt
inc
iret
icebp
pop
std
icebp
xor
and
cmpsb
movsl
data16
popa
pop
pop
cs
pop
nop
sar
incl
inc
push
push
sbb
xchg
cli
shrb
ja
insl
loop
xchg
jo
fs
sub
call
loope
cmp
adc
adc
aas
cmp
mull
out
fsubr
mov
dec
jno
int
call
lock
lcall
lock
and
add
xchg
rcl
stc
rolb
mov
sbb
out
shll
push
pushf
das
jge
iret
cli
sahf
jle
fcomip
cmpsl
scas
push
jle
test
sti
aad
cli
xor
sar
and
fistps
stc
test
sbb
cld
mov
mov
inc
pop
pusha
aas
pop
ret
and
and
xchg
mov
jbe
pop
sub
repz
bound
jmp
jge
out
cmc
mov
lods
inc
test
mov
imul
sub
pushf
push
popa
sbb
dec
out
push
cmp
dec
call
js
fs
mov
mov
xor
pop
adc
add
adc
cmpsb
inc
call
rclb
push
xchg
xor
mov
shlb
loop
ljmp
test
adc
xor
mov
pusha
xchg
subl
aaa
jae
mov
shll
out
in
jmp
incl
cmc
xor
or
mov
xchg
push
in
push
sub
sahf
dec
ja
and
ja
ljmp
cmp
sbb
sub
jmp
sub
shlb
mov
jnp
xchg
push
mov
jae
testb
inc
sar
sub
mov
mov
or
lcall
inc
shrl
sub
jmp
lahf
jge
dec
int
pop
sbb
jbe
scas
clc
pushl
sub
mov
aad
mov
add
sbb
fs
or
cld
shrl
cwtl
pop
ljmp
add
cltd
mov
aam
loopne
rol
sahf
ret
das
lcall
decl
push
jb
adc
movsb
cwtl
dec
jmp
lret
pop
cmp
cmc
out
dec
lahf
into
cld
call
enter
jg
jmp
hlt
lcall
pushf
or
mov
mov
or
out
and
ret
or
fdivl
ljmp
add
add
mov
daa
pusha
xor
push
inc
adc
dec
test
and
pop
hlt
ret
mov
decl
adc
pusha
icebp
or
mov
lods
rol
sbb
adc
and
mov
addb
in
lock
adc
mov
or
push
loopne
cmp
lcall
cmp
adc
mov
test
or
addl
popa
pop
adc
aaa
cld
pop
cld
insb
fadds
iret
inc
incl
inc
syscall
cli
sub
jmp
dec
sub
fsub
xor
out
pop
data16
mov
push
inc
popf
inc
xchg
sub
adc
rolb
mov
add
xchg
pop
inc
mov
and
test
mov
push
rorb
inc
clc
decl
test
in
decl
mov
adc
push
dec
mov
or
ljmp
sbb
movsb
pushf
push
jmp
dec
jmp
sub
xchg
fimull
push
mov
and
das
mov
hlt
pop
or
lret
stos
fistpll
inc
mov
cld
jb
mov
or
lret
mov
sbb
jg
orl
aaa
sbb
push
sti
ret
shrl
ret
mov
adc
mov
or
or
mov
call
lods
push
cwtl
jg
mov
xchg
stos
int
jle
scas
and
mov
fxtract
outsl
call
inc
mov
fdivrs
das
mov
repz
pop
call
and
fisttps
inc
insb
cmp
pushl
orl
fisttpl
mov
sti
sub
mov
or
shrb
mov
lret
mov
sbb
sbb
jno
adc
xchg
adc
adc
dec
sbb
aas
adc
ljmp
iret
das
setge
das
xlat
jl
sbb
adc
into
xor
ljmp
mov
in
mov
incl
xchg
mov
notl
xchg
and
addb
sub
decl
cmp
call
inc
adc
add
xor
xor
adc
int3
pusha
pushf
sbb
mov
and
push
pop
push
inc
and
bound
mov
xor
xchg
insb
push
sub
xlat
lcall
in
mov
adc
sub
and
aaa
adc
xchg
xor
and
leave
lea
and
and
xor
push
dec
add
js
pop
pop
sub
test
xchg
lret
pop
cmp
sarl
and
adc
jg
inc
pusha
outsl
sub
pop
outsb
xchg
pop
sbb
cmp
popa
ds
xchg
push
mov
imul
adc
pop
push
jno
push
push
and
pop
mov
cmp
mov
psubusw
pusha
pusha
xor
verw
mov
jae
popa
sbb
inc
lret
mov
adc
les
inc
add
lds
jae
popf
in
or
and
iret
sbb
sbb
shl
setb
push
and
pushl
cwtl
inc
movsb
and
lahf
stc
xor
cld
sbbl
inc
movsl
insb
push
rorl
adc
jmp
scas
ret
cmp
jecxz
out
pop
jno
loopne
sub
inc
lret
pop
fidivl
mov
lret
pop
loop
xchg
jmp
sbb
xchg
fs
sub
cmpsb
xor
sarb
lret
jmp
push
push
push
and
cmpsb
or
xchg
orl
cmp
pushf
pop
rolb
dec
test
adc
mov
lcall
rolb
lahf
or
popa
dec
jg
lahf
mov
lods
dec
push
out
mov
stos
call
ljmp
mov
adc
sbbb
cmp
sbb
xchg
adc
mov
sub
cli
or
ja
sub
jmp
pop
jmp
adc
adc
xor
adc
in
jmp
adc
and
xchg
add
and
or
ljmp
jg
ret
xor
sub
shlb
jg
or
clc
movsl
das
inc
pop
mov
adc
push
cmp
int3
cld
decl
cmc
inc
mov
add
or
inc
cwtl
fwait
add
bound
test
xor
pusha
or
nop
shlb
shlb
stos
in
lret
sbb
or
add
pop
xchg
xchg
imul
ljmp
xor
fcmovbe
mov
sub
sbb
push
mov
int3
fs
cmp
mov
lds
lahf
xor
loopne
adc
test
enter
cld
cmp
fwait
sub
and
dec
sub
xchg
mov
movsl
and
dec
dec
adc
out
mov
xchg
pop
push
call
in
adc
pop
inc
push
lcall
cmp
fst
cwtl
sub
ret
call
std
pop
les
mov
lcall
sub
xchg
adc
orl
xor
or
jmp
add
testb
xchg
push
ret
xchg
push
in
cmpl
or
push
stos
push
mov
lahf
inc
dec
cmp
xor
ljmp
sub
xchg
rcll
into
inc
inc
stos
sub
push
icebp
lcall
mov
cmp
fcomps
fs
ljmp
outsl
inc
fsubs
js
sub
push
mov
test
cmpb
fistpll
push
jl
imul
xor
mov
mov
add
pop
pop
or
ljmp
clc
mov
sti
stos
cltd
cwtl
push
andl
sub
push
mov
out
pop
and
push
cli
scas
xor
icebp
test
mov
ljmp
repnz
or
sbb
jb
pop
and
push
push
mov
jmp
xchg
mov
jbe
sbb
sub
pushl
shrb
lcall
and
push
adc
faddl
sbb
dec
rcrl
dec
fdivl
mov
imul
insl
inc
push
sahf
sarb
mov
mov
in
ja
sbb
repz
mov
mov
xchg
idivl
stos
and
aas
add
jmp
jp
pop
lock
pushf
je
data16
add
mov
cwtl
rcll
sbb
jl
cmpsb
cmp
inc
loope
sub
dec
and
ja
jmp
xchg
xorb
outsb
add
push
add
repnz
pushf
push
adc
lds
fdivrl
out
clc
inc
push
sub
popa
push
jle
ficoms
in
sub
push
shr
push
inc
clc
test
ljmp
add
xor
shl
sbb
adc
test
lcall
dec
sbb
movsb
inc
orl
sub
clc
ja
add
rorl
lcall
ljmp
add
lret
aad
ficompl
sub
je
add
mov
and
jg
test
fildll
int
in
mov
sbb
popf
mov
mov
or
dec
adc
xor
rorb
add
fcomip
pushl
out
insl
xchg
cmpsb
jmp
aam
data16
ss
lods
push
mov
ljmp
jg
rcrl
xchg
sbb
push
mov
loopne
cmp
mov
dec
into
mov
cld
mov
lock
movsl
xor
nop
jg
mulb
or
incl
lock
sti
aas
xchg
fucom
push
aaa
mov
mov
mov
push
cmp
aas
jae
test
mov
sbb
call
std
pop
fsubrs
hlt
aas
or
cmp
das
repz
incl
clc
lcall
xor
clc
xorb
cmp
shrl
cmp
xor
xchg
xchg
push
ljmp
into
cmp
pusha
add
push
pushf
mov
inc
jno
cs
xchg
mov
insb
andb
fcomip
jg
add
dec
xchg
jecxz
jno
xchg
adc
xchg
sbb
and
push
inc
out
dec
adc
jg
dec
xor
not
nop
or
add
repnz
in
xor
in
mov
and
fisubs
pop
sbb
add
push
jbe
sub
jo
addr16
loop
mov
or
addl
mov
mov
pop
cli
lahf
xor
movsl
jle
cmp
jg
hlt
sbb
mov
repz
xchg
inc
les
mov
mov
stos
ret
shl
stos
in
test
cwtl
sbb
lcall
rcl
jmp
mov
ljmp
add
jp
out
or
movsl
lea
mov
dec
mov
cmp
ficomps
dec
jo
inc
lret
cmp
decl
jnp
sahf
jns
cmp
push
or
xor
mov
call
pop
nop
fisttpl
jo
cs
xor
pop
sub
xor
leave
dec
lea
sub
and
rcll
mov
rcrl
xor
sbb
lcall
dec
add
popl
orl
mov
mov
inc
mov
orl
mov
fcoml
in
ds
mov
mov
jl
mov
pushf
or
add
mov
sbb
rorb
leave
add
cmpsb
rcll
das
xchg
mov
jg
pop
call
pop
jb
insb
inc
lret
nop
sbb
jg
test
enter
cmpl
mov
sbb
cld
cmp
jp
xor
cs
sbbb
add
mov
jmp
cmp
andl
pop
icebp
or
push
sub
in
mov
mov
test
dec
stc
inc
and
xchg
call
adc
sub
fsts
pop
sbb
pop
lret
out
int3
stos
repz
fidivs
ljmp
orb
cmp
stos
push
xchg
sbb
pop
mov
sbb
call
arpl
mov
addl
or
xor
xor
sbb
xchg
mov
call
mov
xorl
mov
aam
test
or
jg
sbb
xchg
push
inc
mov
fiadds
xor
mov
fs
das
mov
rol
je
shrb
or
pop
or
mov
ljmp
decl
enter
leave
and
and
orb
mov
pop
jo
dec
push
inc
mov
mov
cwtl
psllq
icebp
or
lcall
xchg
jno
das
rolb
mov
jb
mov
repz
fwait
cld
add
int
sbb
sarl
adcb
roll
dec
cli
push
loopne
sbb
push
loopne
push
aad
sbb
rcrb
movsl
push
and
sub
lret
dec
es
push
sbb
jg
jmp
push
movsl
mov
jne
das
fstl
add
cs
ljmp
push
or
add
cmpsb
or
xchg
seto
cld
rorb
dec
adc
out
clc
jmp
add
push
add
add
add
mov
adc
jno
rcrb
lock
cmpsl
sub
rcrl
fbld
push
and
outsb
cwtl
dec
test
mov
add
sbb
pop
add
ret
call
push
xchg
repz
test
int3
movsb
mov
add
jg
mov
pusha
pusha
xor
xchg
mov
fsts
sub
ljmp
mov
jecxz
jns
pop
das
adc
js
mov
dec
xchg
mov
and
movsb
dec
cltd
mov
into
pop
sub
mov
lods
add
sub
loopne
and
or
mov
cli
sub
jge
or
cmp
xchg
pushl
call
sub
fdivs
orl
ljmp
pop
and
lcall
cmp
pop
xchg
or
lods
icebp
mov
mov
dec
ds
insb
adc
inc
addl
dec
push
lock
sub
sbb
and
in
das
and
movsl
stos
add
js
adc
pushl
mov
or
cmc
add
popf
adcb
add
jg
ret
pop
inc
in
fwait
in
rol
and
and
sbb
lret
mov
jnp
cmpsb
out
inc
jnp
pop
push
pop
jecxz
jg
or
mov
add
pop
jno
add
pop
cmp
cs
lcall
pusha
cmpsb
xchg
es
ljmp
out
sbb
or
aad
xorb
inc
test
mov
push
cld
mov
mov
mov
or
enter
add
incl
sub
sbbb
pop
jnp
ret
sub
xor
push
adc
loope
xchg
cmpl
mov
inc
lods
dec
push
stos
mov
aaa
std
push
add
mov
and
dec
addr16
adc
es
sarb
push
fildl
imul
pop
mov
mov
nop
dec
mov
call
mov
push
call
sbb
cwtl
push
cld
mov
jne
insb
dec
sbb
cld
fists
ds
loop
xor
jecxz
jns
inc
xchg
out
adc
inc
incl
add
push
test
js
mov
xor
xor
and
push
sub
clc
xor
push
sbb
lods
pop
arpl
arpl
sbb
decl
and
lock
mov
mov
cmp
and
mov
add
dec
pop
hlt
mov
push
sub
xor
scas
ds
ficompl
cld
push
sbb
cmp
dec
adc
push
outsb
sbb
sar
ds
arpl
arpl
mov
je
addb
clc
inc
push
daa
enter
dec
stc
lret
test
lock
inc
fistps
push
adc
inc
outsb
cs
cmp
and
adc
xchg
adc
add
push
add
cmp
mov
mov
loop
addb
push
std
push
push
mov
xor
insb
loopne
sub
sbb
call
mov
pop
orb
cmp
pop
xchg
push
sub
and
sbb
xor
jg
xorb
push
int3
in
pop
pop
sbb
mov
rolb
rorl
in
jge
pop
popa
fstpl
ret
adc
ljmp
mov
test
jle
mov
int
mov
cmpsb
jg
mov
or
dec
or
sbb
xchg
clc
and
mov
and
xor
jg
ja
jge
mov
or
jecxz
mov
ret
sti
pop
xchg
decl
dec
fisttpl
adc
adc
sub
in
stc
mov
inc
xor
mov
ljmp
mov
movsb
mov
or
sub
mov
jecxz
and
pop
pushf
xor
sub
jnp
aad
pop
mull
sub
mov
orl
sbb
orb
xor
add
mov
and
cwtl
adcb
xor
arpl
clc
or
lds
cmp
loop
cmp
jp
jecxz
pop
adc
dec
inc
push
shll
shlb
in
dec
pop
popa
jmp
inc
push
in
push
jo
js
aaa
or
insl
fsubr
and
adc
fdivr
fwait
insl
stos
push
xor
cmp
push
adc
incl
inc
aam
cmp
xor
ds
sbb
cmp
mov
add
xchg
cmp
jg
mov
jnp
jg
outsl
inc
jge
dec
xchg
xchg
or
push
cmp
add
test
cmp
add
sbb
call
mov
sub
fs
and
sbb
dec
test
lods
fiadds
add
pop
jg
movsl
jmp
cmp
adc
jbe
mov
xor
cmp
enter
sub
mov
add
dec
xchg
pop
sbb
and
fists
and
sbb
and
mov
sarl
clc
stos
sbb
les
arpl
dec
xchg
subl
fneni(8087
add
test
int
mov
jmp
cmp
mov
lcall
push
adcb
mov
test
movb
mov
mov
fcoml
movsb
mov
sbb
lea
mov
cmp
fcomps
jg
xor
nop
mov
into
add
rorb
inc
cmp
int3
clc
mov
mov
push
jno
sbb
jb
adc
or
jg
clc
das
ss
dec
js
cmp
ds
push
sbb
and
add
lock
lcall
fcmovb
xchg
insb
lret
sahf
in
lret
into
rorl
push
mov
push
push
push
mov
es
outsl
call
push
jbe
pop
jbe
outsb
in
aam
insl
xlat
into
add
or
in
ficoml
add
insl
loopne
ljmp
ljmp
imul
add
idiv
call
push
add
push
xchg
enter
test
or
pop
sbbl
jge
call
adc
sbb
stc
xchg
inc
add
sbb
add
push
mov
js
cmp
out
ret
addb
fildll
repz
ljmp
adc
push
xchg
jge
mov
jno
stos
int3
push
mov
fisttpl
out
icebp
mov
jo
sbb
inc
aam
cmp
mov
in
fstpl
add
dec
mov
fcmovnb
dec
les
xor
lea
push
mov
dec
mov
sub
decl
sbb
sub
jb
shll
repz
call
or
mov
or
or
incb
fdivs
jp
add
mov
pop
cmc
mov
xchg
sbb
popa
sahf
sub
inc
in
cwtl
xchg
lea
mov
or
or
jl
push
lods
xchg
test
xchg
add
rcr
hlt
incl
dec
and
nop
lods
mov
mov
cld
popf
pop
and
push
push
fisttpl
cmpsb
sti
xchg
cli
sbb
push
inc
outsb
call
mov
xchg
jae
adc
hlt
in
add
scas
popf
shll
mov
mov
and
arpl
jbe
shrb
fs
orb
iret
add
js
clc
es
imul
imul
push
cmpsb
mov
add
push
add
shll
cmp
les
adc
incl
sub
aas
jp
in
sub
adc
inc
push
push
les
test
sbb
inc
jg
inc
pop
call
dec
nop
pop
sbbb
mov
popa
outsb
sarb
xor
or
and
mov
pushl
cmp
dec
loopne
es
cmp
jbe
shrb
incl
test
mov
cltd
test
lret
mov
pop
mov
xor
lock
sub
mov
in
cwtl
and
inc
mov
and
fldt
inc
push
dec
add
add
fstpl
clc
mov
rorb
xor
int3
xchg
and
jo
inc
add
lds
mov
imul
popa
mov
mov
mov
call
lcall
ret
fidivrl
movsb
push
or
pop
gs
shll
out
xchg
adc
inc
out
cld
icebp
xlat
roll
cwtl
adc
rclb
arpl
in
xlat
pusha
decl
adc
add
cmc
sbb
jge
std
fistpll
dec
mov
test
add
cli
dec
add
scas
add
lods
mov
movl
add
popa
push
jne
adc
incl
in
mov
daa
fidivrs
out
sbb
in
sbb
inc
ja
clc
js
shl
test
hlt
roll
insb
bound
mov
incl
or
jmp
adc
jp
dec
stc
in
and
pusha
jp
and
pop
test
lret
cmp
jo
pushf
je
and
pop
push
jl
test
adc
or
and
jbe
leave
mov
outsb
nop
nop
xor
mov
jg
gs
xchg
push
lret
cmp
mov
sub
decl
movsb
cmp
add
je
cmp
jle
mov
movb
and
push
pop
aam
mov
push
pop
addr16
mov
sbb
pop
lock
xchg
add
aaa
cld
mov
xor
adc
sarl
sti
jg
imul
js
add
sbb
sbb
nop
xor
push
arpl
add
jg
dec
cmp
mov
je
test
mov
pushl
addl
add
ffree
pop
push
lds
adcb
xor
loope
push
push
outsb
leave
in
nop
mov
sub
dec
sar
lcall
pop
shlb
leave
jno
mov
daa
jo
dec
jecxz
mov
jae
mov
fsubs
jge
sbb
pop
cmp
das
lret
test
inc
pop
insb
mov
out
ja
outsl
push
pop
sbb
or
cltd
and
sbb
xlat
fisttpl
rcrb
ds
xchg
jbe
insl
mov
xor
dec
mov
cmp
pop
pop
jge
sub
fcomip
and
jbe
push
sbb
fisttpl
and
cmp
ja
push
cmp
push
pop
cli
incl
pop
sbb
mov
cmp
call
sub
dec
shll
mov
cmp
or
aad
andb
jmp
inc
mov
push
out
jle
adcl
push
into
cmp
inc
xor
mov
mov
jecxz
cltd
data16
insl
jb
decl
dec
test
pushf
outsb
jle
out
push
stc
add
ja
iret
cmp
das
movsb
sbbl
movsb
popf
cmpsb
icebp
call
lcall
mov
mov
incl
cmp
pop
orb
push
test
mov
add
loopne
xchg
xchg
ss
cli
mov
mov
jl
pop
sub
sub
je
add
loop
mov
jb
sbb
dec
inc
inc
nop
adcl
pushl
push
xchg
jl
inc
or
sbbl
pop
out
stos
push
mov
loopne
cmp
add
xor
mov
mov
adc
push
mov
ret
mov
inc
sub
adcl
mov
xor
add
hlt
mov
call
rolb
ja
bound
cmp
push
data16
cltd
bound
lock
mov
pop
push
xor
sbb
jle
push
aam
push
xor
inc
aaa
dec
into
mov
decl
jl
and
jo
cmpsl
lds
or
enter
int
fwait
push
add
and
js
faddp
adc
push
shlb
xchg
mov
mov
scas
xchg
dec
fwait
pmaxub
xor
inc
or
push
and
dec
les
mov
cmpsb
decl
or
jle
mull
movsl
dec
adc
adc
adc
loop
shr
les
ret
cli
jmp
adc
inc
inc
incl
mov
cmp
cmc
sub
test
insl
int3
lock
cli
incl
loopne
ret
xchg
test
or
xchg
rol
es
jg
out
cmp
leave
fcoms
or
sub
les
jmp
jnp
jae
pop
mov
jnp
mov
mov
scas
mov
outsb
pop
test
and
push
movsb
push
gs
cld
in
hlt
jg
jp
cmpsl
ss
das
test
cmp
push
xor
orb
sarb
call
mov
and
and
and
xor
das
mov
push
call
xchg
sbb
imul
shrb
mov
mov
test
add
sub
add
inc
call
nop
movsl
jg
sahf
adc
es
push
inc
ljmp
setl
ret
mov
cmc
ds
push
or
mov
inc
sub
cmpsl
mov
test
arpl
add
or
pop
mov
xchg
add
or
out
rcrb
and
orl
test
xchg
inc
push
mov
nop
das
xor
shll
or
pushf
adc
hlt
in
cmp
pusha
mov
xor
xchg
sub
incl
stos
mov
jnp
sub
dec
mov
xchg
mov
dec
sub
test
jmp
sbb
mov
gs
pop
ss
imul
and
sbb
out
clc
in
movsb
inc
mov
jmp
jo
add
movsb
scas
add
decl
loop
xor
loop
sbb
sub
loop
jmp
jbe
inc
sbb
cmpsl
xchg
jg
dec
jl
pop
sub
cmp
jle
jne
dec
adcl
jmp
push
mov
inc
xor
push
sub
in
fs
mov
add
rorb
ljmp
jns
cs
add
or
mov
and
aam
je
mov
or
add
sar
ficoml
cmp
inc
push
add
jbe
mov
mov
bound
push
rclb
dec
bound
mov
adc
fldenv
ljmp
push
je
pop
or
rorb
bound
mov
addb
lcall
mov
rcr
cs
aad
mov
cmp
mov
mov
fs
xor
and
cmp
sub
sub
das
and
mov
inc
sbb
aam
call
mov
cmp
add
sub
ret
add
adc
mov
test
pop
and
push
or
sub
mov
add
lcall
stos
in
inc
push
pop
fadds
cmp
or
orb
decl
divl
xchg
aam
and
sbb
xchg
add
clc
int3
mov
loop
inc
inc
dec
add
fbstp
test
push
dec
xor
xor
pushf
jae
aad
js
add
stc
adc
ret
dec
in
inc
cmp
add
mov
xor
push
ret
leave
pop
xor
jmp
adc
aad
mov
cmp
out
das
les
scas
shll
inc
out
inc
inc
fwait
sbb
cwtl
inc
inc
mov
insl
hlt
sahf
jnp
xor
jmp
in
add
fstps
cmc
call
and
ret
push
mov
fcomip
call
pop
ja
push
xchg
push
mov
mov
fidivrs
pop
imul
enter
xchg
imul
mov
cmp
mov
jns
test
out
add
in
fldenv
std
call
add
jle
cmp
jg
jne
pusha
push
add
dec
cmc
mov
pop
mov
mov
sbb
gs
int3
sbb
insb
lcall
cmp
clc
mov
or
add
mov
stc
and
fcomip
and
sub
loop
sub
int3
xor
jp
inc
add
mov
insb
loope
arpl
add
mov
arpl
fsubrs
call
orl
movsl
pop
mov
pop
add
lret
cwtl
xchg
mov
mov
xchg
adc
aam
mov
sbbl
pop
icebp
push
sbb
adc
mov
mov
inc
or
push
incl
jl
push
fsubl
int3
lret
call
and
je
pop
xor
and
js
fcoml
jb
js
mov
dec
mov
int3
aad
sbb
enter
mov
je
mov
outsb
js
inc
lods
xchg
test
dec
jl
ret
dec
xchg
push
ret
mov
jo
popf
fildl
sbb
pop
cmp
rcll
filds
push
and
xchg
adc
xchg
push
js
fisttps
pushf
and
jg
mov
jg
pop
call
pop
push
cmp
jmp
pop
out
adc
pop
mov
xor
add
cmpl
lcall
mov
movsb
js
and
fmul
xor
stc
jl
and
add
scas
fdivr
lock
add
sahf
push
jmp
in
sbb
dec
lcall
in
pusha
sahf
pushf
cmpsb
pushf
cltd
sahf
cmp
xchg
lahf
clc
or
aam
ss
mov
cltd
mov
mov
enter
arpl
int3
push
out
jne
incl
hlt
jecxz
cmp
sbb
jecxz
or
xchg
mov
add
or
cmpl
lods
mov
add
stos
add
add
aad
outsl
clc
jl
lret
pop
je
push
test
fcomps
cmp
mov
lcall
or
cmp
lods
sbb
or
jg
lahf
or
les
and
cmp
les
dec
or
add
in
mov
or
les
int3
dec
jae
add
jl
push
push
dec
push
cld
call
test
lds
add
and
enter
or
cs
jle
cli
scas
pop
shrb
mov
loopne
sub
rol
push
or
and
pop
or
pusha
mov
xchg
adc
xchg
cmp
shrl
arpl
push
adc
inc
into
push
pop
icebp
call
jge
and
lea
insl
adc
cmp
pop
jae
rcrl
fnsave
mov
sbb
test
movsl
inc
jno
xlat
mov
iret
fstpl
cmp
jae
popa
outsb
cs
push
cmp
lea
pusha
orb
and
mov
pop
cmp
mov
aaa
and
mov
test
jbe
adc
pop
mov
sbb
mov
mov
cwtl
sub
dec
aas
xchg
pushf
jnp
xor
dec
aad
bound
add
jmp
sbb
lcall
in
xor
js
sahf
pusha
xchg
fwait
jge
pushf
mov
lds
and
pop
cmc
loopne
into
adc
cmc
dec
lahf
xor
xchg
jl
pop
clc
add
hlt
call
orb
mov
cmp
enter
or
sbb
adc
or
and
enter
in
mov
add
cmp
je,pt
pushf
add
sar
aaa
cmp
dec
adcb
lcall
pop
mov
xchg
in
inc
dec
ror
push
pop
icebp
inc
jl
addl
andb
sub
test
push
shrl
test
and
inc
int3
nop
mov
pop
dec
test
scas
inc
cs
add
jg
cli
dec
push
xchg
dec
cld
je
shlb
or
inc
mov
nop
mov
outsb
push
ret
push
ror
mov
xchg
pop
inc
add
mov
std
pop
hlt
les
sbbb
sbb
cwtl
xchg
adc
lods
lret
in
rorl
inc
or
data16
adc
addl
into
sub
scas
es
shrb
cli
inc
add
or
jmp
xchg
mov
hlt
bound
lods
push
mov
into
pop
xchg
rclb
decb
mov
scas
mov
adc
xchg
cmp
insb
xchg
in
pop
stos
cmp
sbb
sbb
jmp
sbb
mov
xorb
xchg
loop
sbb
lods
push
or
pushf
push
ss
or
pushl
sub
iret
test
js
cmpsb
js
into
push
pop
jle
inc
sub
sbb
decl
daa
fmull
addb
out
cmpsb
xor
inc
movsl
pop
icebp
mov
inc
and
dec
xor
sahf
mov
rolb
in
pushl
dec
addl
insl
mov
lock
and
inc
jecxz
fcomip
decl
mov
jns
sbb
prefetchnta
lock
xor
fdivrs
ljmp
rcll
addl
fildl
push
lea
cmpsb
fisttpll
call
mov
lcall
outsl
test
pop
dec
sar
inc
push
hlt
adc
sub
inc
mov
mov
cs
fstpl
clc
ljmp
inc
inc
stc
xor
mov
or
push
std
push
aaa
push
les
inc
aad
call
dec
int3
rclb
fcomip
rolb
mov
pop
movsl
push
jle
mov
jbe
xor
adc
lods
inc
loopne
sar
in
xchg
loope
add
movsl
sbb
sub
pop
cmc
out
inc
jo
into
leave
inc
daa
sub
mov
mov
cs
inc
mov
imul
lcall
adc
nop
pop
jmp
or
in
mov
fiaddl
jmp
adc
js
pop
cmp
push
or
lea
pushf
imul
sub
cmpsb
incl
shll
into
scas
flds
popf
jp
stos
adc
dec
test
mov
inc
cmp
mov
jecxz
push
jecxz
fcoms
es
ljmp
sahf
es
mov
out
and
mov
mov
scas
dec
mov
fcomip
call
add
sub
lcall
faddl
sahf
fbstp
mov
pop
cmp
adc
aam
ja
pop
cmp
jg
add
sub
pop
jae
and
adc
mov
mov
pushf
xor
push
xor
outsl
mov
int
sbb
mov
sbb
add
push
sub
incl
sahf
call
and
imul
adc
push
or
mov
add
lods
xchg
loop
pop
add
mov
jg
fwait
pop
lods
rcr
call
das
leave
pop
sbb
out
add
mov
sub
jecxz
inc
adc
ret
lods
sub
inc
cwtl
mov
or
or
daa
push
orl
pushl
cmpb
push
incb
ljmp
sarb
push
cmpl
cmpsl
mov
fcmovb
repnz
push
shll
outsl
xor
lahf
shrb
and
daa
sbb
push
mov
xchg
adc
cli
sarb
xor
int
push
daa
sbb
loop
mov
fildll
loope
cmp
mov
jb
mov
mov
adc
and
cmpsb
xor
dec
push
add
stos
imul
xchg
jmp
sub
roll
and
mov
push
pop
cmc
push
jmp
cli
mov
cmp
daa
fimuls
lods
jbe
cmpsl
mov
ret
decl
pop
inc
xchg
andb
insb
sbb
ljmp
dec
inc
xchg
adc
mov
cmpsl
push
incl
nop
mov
jno
mov
aad
sub
xchg
push
sbb
jmp
or
dec
lahf
aam
mov
icebp
fsubs
mov
adc
xlat
das
xor
xchg
cs
sarb
test
idiv
jg
testb
call
mov
call
cmpsb
call
mov
cld
enter
mov
loopne
mov
push
jae
fcompl
cmpsb
cmc
fildl
sub
mov
adc
cmp
leave
mov
add
inc
enter
push
add
mov
mov
jno
fimull
ud0
adc
inc
cmp
add
lods
jne
inc
rclb
add
jmp
repz
sub
push
mov
dec
add
mov
push
or
addl
cmc
mov
hlt
sbb
push
xchg
loopne
dec
inc
clc
mov
cli
into
inc
mov
sub
adc
decl
jmp
roll
stos
xchg
mov
ds
cmpsb
push
mov
outsb
xchg
outsl
rolb
loope
cmp
std
mov
jp
lea
push
push
xchg
and
stos
es
pushl
ds
xor
mov
clc
mov
xchg
call
xchg
xchg
lcall
icebp
pop
mov
mov
cli
dec
rcl
decl
data16
and
mov
sbb
es
xor
mov
decl
jmp
jne
pop
sub
sub
rorl
iret
roll
loopne
jo
mov
dec
fsubrs
fisttps
test
or
out
sbbb
loop
out
mov
mov
lea
pop
mov
cltd
inc
hlt
pop
popa
ret
xlat
lods
and
call
xchg
mov
enter
push
mov
ss
addr16
mov
cmp
add
cli
mov
jp
push
xchg
cmp
cld
and
lcall
cmp
cs
incl
fsubrl
subb
push
insl
mov
pop
outsb
out
negb
sbb
and
lret
or
ljmp
xor
xor
mov
adc
enter
lcall
test
or
xchg
arpl
jns
add
rolb
call
inc
push
push
xchg
jl
inc
push
push
fsubs
push
imul
add
addr16
xor
inc
or
aam
sub
insl
dec
lock
test
cmp
loop
dec
scas
stos
mov
dec
jecxz
add
and
xchg
mov
frstor
push
push
rorb
shll
sub
decl
xorl
add
jmp
jmp
lods
sbb
sbb
push
dec
es
dec
out
decl
insl
shr
jp
xchg
jmp
jno
push
bound
push
std
inc
cmc
sub
incl
adcb
jp
cmp
bound
xlat
xchg
mov
push
add
pop
call
add
mov
push
into
mov
call
loopne
stc
fsubrl
pop
mov
ljmp
xchg
js
shll
incl
jb
addr16
inc
pushf
adc
xchg
jp
add
into
jle
fdivrs
sub
mov
pop
adc
inc
and
addb
mov
js
call
mov
fwait
in
push
and
xchg
into
pusha
sti
rcll
lods
mov
cmpsl
cmp
decl
scas
push
or
sbb
cld
push
mov
sub
add
fldenv
inc
sahf
jo
psubsb
mov
or
sbb
inc
adc
pusha
add
incl
inc
lods
sbb
js
mov
test
pop
mov
sbb
test
cmp
call
mov
xorl
and
mov
inc
daa
add
ret
jmp
pop
sub
and
xchg
jb
lret
fsubl
outsb
jg
pushl
push
dec
out
je
repz
jl
xchg
shlb
or
cmp
fsts
dec
mov
xor
lods
or
xchg
fwait
in
mov
push
xchg
or
adc
or
mov
decl
aaa
sub
sbb
push
mov
cli
push
sub
xchg
sub
push
lds
xor
xchg
adc
decl
jae
fidivl
pop
xor
pop
xor
or
std
pop
and
cmp
fdivr
cmp
xor
inc
test
mov
push
push
fcomps
ret
xchg
mov
adc
lcall
mov
popf
push
mov
mov
repz
sbb
ja
les
test
add
mov
std
push
dec
ret
mov
jb
mov
push
shrb
or
shlb
std
inc
andl
loope
scas
cwtl
lret
xor
adc
nop
aas
decb
out
ss
add
ljmp
push
inc
or
xor
push
add
inc
insb
cld
cwtl
jo
or
mov
mov
daa
hlt
add
push
les
adc
pushl
xor
and
mov
cld
lock
adc
mov
ds
orb
sbb
mov
and
jmp
das
les
jecxz
and
push
orb
xor
and
cli
ljmp
mov
xor
mov
arpl
js
andl
and
dec
ljmp
lock
inc
ja
add
and
lcall
aam
dec
xor
jo
mov
out
stos
dec
xor
mov
cmc
mov
stos
enter
cli
test
jp
mov
dec
mov
sub
arpl
lret
add
mov
sbb
mov
mov
jp
ljmp
and
cmp
mov
rorl
cmpsb
scas
in
scas
cmpsl
mov
jmp
mov
bound
cmpsl
add
mov
call
sbb
lods
xor
jl
or
or
jp
sub
and
cmp
mov
inc
mov
sar
int
xlat
js
in
arpl
push
fnstcw
inc
lea
std
filds
xor
rolw
and
aas
sub
outsl
jg
int3
mov
stos
rep
mov
cmc
les
add
cmp
jg
and
xchg
and
dec
fcomi
stos
stos
jecxz
mov
add
mov
popa
in
cmovno
inc
mov
push
scas
in
sub
pushf
add
pop
nop
inc
mov
push
nop
leave
or
pusha
xchg
add
adc
shl
insb
add
cmp
rorl
iret
test
mov
pushf
jno
cmp
and
add
cmp
and
into
call
add
add
outsb
mov
shlb
pop
mov
xchg
push
lock
cmp
add
bound
adc
adc
imul
ss
subl
inc
std
lods
pusha
mov
xorb
inc
mov
movsb
pop
and
out
and
arpl
aam
inc
jge
cld
jge
xchg
and
dec
sbb
mov
clc
mov
xor
sub
pop
ljmp
sbb
mov
mov
out
pop
xchg
mov
add
das
cs
or
call
sbb
adc
adc
jb
outsl
jge
lcall
lods
push
mov
inc
push
cs
subb
pop
test
mov
sub
js
int
lock
jo
mov
fs
mov
xor
mov
pop
or
adc
mov
leave
leave
xchg
and
xchg
or
jmp
or
dec
andl
mov
leave
or
push
mov
movsb
data16
mov
dec
outsb
inc
pusha
xor
push
lods
mov
pop
dec
pushf
xor
scas
push
push
lods
add
push
loop
nop
clc
jg
dec
push
push
in
into
jae
outsl
test
sbb
ss
dec
dec
sbb
ficoms
sbb
lea
inc
inc
clc
jmp
shrb
aad
ss
cmp
inc
rclb
mov
mov
lods
inc
scas
add
xchg
cmp
push
hlt
call
add
or
cmp
push
jb
dec
es
cld
adc
adc
lcall
dec
fwait
imul
ud0
rorl
fwait
push
jmp
mov
mov
xchg
or
pushl
fildl
testl
nop
xor
repnz
or
ss
push
bound
jle
call
sahf
xchg
mov
inc
enter
or
clc
sbb
mov
pushf
push
mov
push
add
jmp
aad
sbb
add
push
fcomps
xor
and
xor
mov
jno
gs
xor
daa
push
stc
add
mov
lcall
mov
xor
push
inc
gs
add
decl
cmpsb
xor
pop
loopne
sbb
and
jne
leave
pop
pop
jb
xor
push
inc
aam
or
aaa
xor
pop
mov
xchg
jge
dec
fldenv
ja
sar
dec
or
jmp
push
mov
or
xchg
pop
rcr
push
cltd
push
rorb
ss
dec
ljmp
cltd
ret
cmp
sub
add
dec
dec
fs
pop
lock
jg
nop
lea
xchg
sahf
leave
add
aaa
cmpsb
popa
cld
das
xchg
push
dec
cs
nop
popf
lods
cmp
scas
xor
fildll
sub
stc
out
push
mov
mov
gs
or
xchg
push
ret
dec
pushl
push
mov
mov
lods
inc
push
push
in
mov
and
movsb
lea
add
call
cwtl
sbb
and
js
jo
push
xor
xchg
adc
stos
fdivrl
nop
lea
decl
inc
push
shr
mov
test
pushf
pusha
or
inc
sub
or
sub
icebp
cld
mov
or
mov
dec
or
xchg
out
arpl
iret
call
cld
jmp
add
pusha
adc
push
movb
test
or
call
lcall
sub
cmpsl
xor
push
xchg
cmp
and
adc
or
inc
decl
clc
add
scas
les
or
or
gs
popf
icebp
mov
and
insb
mov
or
pusha
push
sbb
adc
or
pop
dec
popf
xlat
push
test
popf
and
pusha
inc
andl
decl
dec
mov
out
cmp
mov
pop
add
xchg
decl
js
nop
mov
lret
push
dec
mov
inc
adc
mov
add
ljmp
icebp
xchg
push
dec
or
lock
imul
xchg
hlt
cmp
dec
push
adc
and
outsl
jmp
mov
pop
insb
loope
push
lcall
fadd
mov
cwtl
sbb
int3
aaa
stos
rorl
jg
mov
xchg
and
push
arpl
xchg
subl
sub
jmp
and
xchg
xor
push
cli
fstl
icebp
sbb
fisttps
cmp
dec
pop
dec
sbb
mov
cmpsb
sbb
repnz
push
outsb
lods
aas
and
fsqrt
cmpsl
mov
push
push
scas
adc
ret
imul
sbb
inc
mov
fst
pop
clc
lock
hlt
ret
std
pop
pushf
jl
jnp
les
jae
clc
cmc
scas
jg
xlat
pop
xchg
outsl
push
shrb
decl
sub
outsl
dec
loopne
fistps
nop
adc
inc
cmp
jl
add
popa
mov
jp
sub
jmp
aas
loop
fisttpl
push
repz
iret
add
fadds
es
daa
dec
clc
fstl
add
pop
inc
adc
mov
add
sti
sbb
add
ljmp
fs
mov
or
call
pusha
sbb
or
push
cmp
sub
and
cli
jmp
aad
sbb
jno
clc
fidivrl
test
leave
insl
jo
add
xor
pop
pop
jae
lcall
xchg
xlat
adc
scas
pop
xor
xchg
cltd
sbb
out
inc
mov
mov
cli
ds
lret
aam
cmc
cmpsl
test
inc
add
add
clc
imul
mov
sbb
mov
sbb
add
pop
sbb
pop
sti
jp
sbb
lcall
subl
xor
testb
insb
jmp
aaa
mov
cmp
std
cltd
cli
ljmp
ret
fcmove
dec
sti
fimull
mov
dec
or
mov
mov
loope
inc
mov
and
ja
add
xorl
or
cmp
pop
mov
jmp
orb
mov
ret
lcall
mov
inc
insl
inc
mov
and
in
insb
jo
data16
cmp
add
outsb
rorb
ds
int3
stos
dec
pusha
inc
inc
push
scas
mov
ljmp
push
shlb
lods
jmp
out
ljmp
mov
inc
adc
mov
or
cwtl
xchg
out
or
loopne
jb
fdivrl
mov
enter
ret
or
clc
shlb
jns
and
and
and
and
push
xor
or
in
jbe
movl
add
and
out
cmp
mov
fs
mov
ljmp
dec
sub
add
mov
addl
or
mov
test
incl
sbb
in
ja
adc
notb
xchg
cmp
ljmp
les
outsl
dec
enter
jmp
and
mov
mov
mov
pushl
adc
std
sub
lea
jge
fdivs
push
in
sbb
decl
cwtl
dec
stc
fisubs
stc
jb
or
xlat
pop
inc
ret
movsb
insl
adc
cli
sub
xchg
mov
adc
cld
test
addb
call
mov
std
bnd
and
adc
mov
sti
mov
out
insl
mov
xchg
jb
lea
xor
insb
inc
add
jg
and
mov
push
ret
push
in
and
cmp
mov
mov
or
sub
dec
syscall
jmp
popf
push
loopne
push
test
xchg
dec
and
decl
mov
call
add
imul
or
adc
nop
inc
ljmp
dec
dec
lock
inc
insb
imul
or
cltd
jmp
sbb
cld
fs
out
lock
or
clc
mov
inc
cmpsb
pusha
mov
fs
test
popf
decb
or
orb
shll
jo
movsb
outsb
dec
rolb
fwait
jecxz
adc
call
sbbb
xchg
cli
add
add
xor
pop
icebp
jmp
andb
scas
push
cmp
fisubs
inc
jae
xchg
push
dec
call
sub
sbbl
int
and
lods
es
test
popa
dec
enter
xor
push
into
adc
mov
xor
or
cmp
dec
adc
loopne
push
sub
adc
mov
mov
movsb
push
adc
mov
call
push
adc
pushl
push
std
sahf
iret
std
loopne
fcom
mov
out
jae
sti
sarl
icebp
push
inc
push
fs
push
shll
fistl
stc
adc
xor
inc
mov
inc
pop
pop
adc
dec
fimull
jg
and
pop
and
xchg
insl
sbb
push
pushl
dec
adc
pop
rolb
repnz
cmp
inc
lret
and
es
xorl
fimuls
out
test
data16
xor
mov
outsl
push
mov
and
mov
or
sbb
push
out
xchg
call
imul
test
add
mov
dec
mov
pushl
push
cmpsl
inc
push
push
mov
mov
loop
int3
insl
subb
cwtl
call
dec
fsubl
out
jmp
dec
cs
adc
cwtl
or
loope
in
mov
fistps
push
push
mov
roll
cli
mov
in
das
adc
inc
insl
sahf
dec
cmp
popf
hlt
pushl
xor
movsl
pop
out
sub
outsb
stos
push
dec
sub
hlt
bound
movsb
xchg
lds
mov
xchg
cmp
filds
dec
add
dec
add
xor
cmpsl
jle
popa
xor
pop
icebp
inc
push
sbb
lret
pushaw
jp
add
decl
mov
cmp
sbb
stos
aaa
in
mov
adc
dec
push
decl
xor
int
decb
fnstsw
les
mov
adc
loopne
test
jg
gs
add
inc
and
xor
call
inc
fisttps
ds
xchg
xor
sub
popf
and
outsl
jmp
pop
push
cmp
and
outsl
test
mulb
cmc
xlat
inc
inc
fsubs
daa
xchg
cmp
inc
push
aam
sbb
push
or
dec
popa
xor
jbe
dec
jb
mov
inc
inc
test
add
hlt
gs
mov
inc
aaa
push
xor
dec
fimull
jo
pop
stos
mov
insb
xchg
xor
fs
pushl
ds
movsb
push
fldl
mov
and
cmp
imul
add
jbe
or
or
clc
push
ret
and
mov
mov
ret
xor
rorl
int
pop
iret
dec
or
pusha
jns
call
inc
rorb
ljmp
or
mov
fbld
pop
adc
push
jno
push
fwait
push
dec
add
loope
incl
push
ds
jb
ljmp
xor
mov
dec
jmp
sub
les
add
icebp
ret
or
inc
or
pushl
or
pop
xor
dec
inc
inc
adc
loopne
addr16
or
bound
and
add
decl
mov
lret
jp
shl
mov
in
movsb
adc
subl
and
push
jl
cmp
add
push
add
mov
stc
outsb
lea
in
std
mov
inc
add
std
in
jae
test
mov
call
fistl
test
stos
insl
sti
fs
ja
div
xlat
cmp
ljmp
adc
push
inc
stc
icebp
xlat
mov
and
inc
adc
ljmp
gs
mulb
pop
es
cmp
aaa
cwtl
gs
ret
test
and
call
xchg
test
outsl
sbb
push
push
cmp
xchg
xchg
clc
bound
and
fmuls
or
dec
jb
enter
or
mov
xorb
or
pop
das
int
push
nop
incl
inc
jmp
fdivp
ret
add
test
out
sahf
movb
mov
mov
cli
decl
push
push
imul
lods
sub
jo
aam
ret
or
fs
aas
loopne
ljmp
jle
and
or
cwtl
adc
jo
ja
decl
mov
lods
leave
or
lcall
cmp
insl
mov
insb
xor
pop
and
xor
in
dec
dec
push
pop
cmp
cld
cmp
lods
cmp
ret
sbb
loopne
or
inc
mov
pushf
xlat
push
cld
into
es
fsubrs
push
testb
push
mov
lods
dec
mov
jns
and
imul
scas
cmpsb
cmpb
push
mov
pop
jnp
cld
jo
sbb
lods
jge
adc
mov
jp
inc
cmp
jmp
push
lahf
inc
testb
inc
fstl
lahf
jmp
call
insl
xor
outsl
sub
sbb
inc
das
adc
lock
lcall
dec
arpl
cs
jle
mov
pop
push
popa
xor
sub
cmp
fmull
and
mov
fcom
xchg
movsl
gs
aaa
ss
bound
mov
mov
sub
mov
ljmp
xchg
clc
mov
add
xlat
inc
cmp
outsl
nop
inc
or
hlt
mov
lcall
aas
orb
pop
stos
loopne
mov
adc
jp
addr16
in
hlt
arpl
ficoml
in
mov
test
into
or
mov
je
cmp
stos
imul
mov
push
cmpsb
dec
cmpsl
push
fwait
jg
mulb
filds
inc
fidivrs
aad
cmp
sbb
loopne
es
es
inc
push
add
mov
test
stos
call
jmp
xorl
scas
test
jo
decl
dec
mov
cltd
fidivs
lcall
jae
mov
test
add
pushf
mov
sub
clc
pop
inc
push
je
xor
fisttps
sbb
mov
xchg
cmp
and
jbe
pop
fadd
xor
xlat
inc
or
mov
jns
mov
in
jg
cld
mov
popf
std
idivl
out
std
push
xchg
out
cmp
mov
inc
mov
inc
aam
xor
inc
jg
mov
inc
adc
sbb
cmp
cli
outsl
mov
push
fs
xor
outsl
mov
test
mov
dec
and
pop
ss
mov
cmp
mov
fadd
fcmovb
xor
outsl
aam
jg
cmp
jecxz
rolb
cld
outsb
sahf
xchg
clc
mov
xchg
data16
pop
pop
and
cli
mov
pop
incl
jl
mov
cli
int3
or
mov
stos
mov
lock
lcall
pop
shl
jl
out
mov
xor
nop
filds
scas
sbb
jmp
arpl
xchg
addr16
ja
add
pop
add
mulb
loopne
mov
ljmp
push
sub
adc
push
sub
push
push
jne
inc
in
xchg
sub
mov
pushf
repnz
ret
add
sbb
test
ljmp
fbld
sbb
push
fsubs
fstps
loop
idivl
jae
popf
jnp
or
inc
xor
mov
dec
fstps
ljmp
movsb
push
add
mov
in
mov
dec
fcomi
mov
fstl
or
call
pop
aas
addr16
lret
adc
cmp
cmp
sbbb
dec
daa
push
ljmp
es
pop
jl
ja
and
clc
mov
das
ficoml
jmp
and
pop
sub
popa
scas
incl
sahf
gs
pop
test
lcall
pop
jle
lea
and
movsb
xchg
jecxz
loope
incb
push
cmp
ds
pop
fsubp
sub
cli
idivb
sub
mov
sbb
lret
pop
jge
dec
stos
cmp
xchg
mov
jnp
jecxz
imul
cs
fisubrl
repz
enter
stos
lcall
mov
jge
jmp
pop
xlat
adc
shl
xchg
jle
mov
jle
xlat
jno
repnz
jg
inc
adc
into
mov
mov
fistl
inc
aaa
repnz
cmp
mov
push
mov
xchg
cmp
scas
rcr
subb
es
or
adc
mov
xor
inc
xchg
into
jbe
mov
mov
xchg
incl
pop
push
cmp
add
out
cli
ret
insl
nop
mov
xor
pop
sar
ficoms
dec
xor
outsl
adc
jecxz
incb
cmc
lcall
inc
mov
push
in
je
push
andl
scas
sub
in
xchg
mov
inc
xchg
scas
cmp
mov
scas
imul
jo
jmp
sub
mov
xor
mov
btl
mov
mov
hlt
pushl
addl
pop
fisubrs
mov
fistpll
out
inc
stc
sub
mov
inc
mov
jge
adc
mov
dec
test
inc
and
mov
or
xor
sub
inc
test
ficoms
cmp
or
cmp
movsb
or
gs
xchg
sub
shlb
clc
ljmp
aas
fisubrl
cmp
fmull
inc
ja
loopne
adc
push
movsb
push
clc
sti
ljmp
pop
cmp
nop
inc
adc
mov
nop/reserved
jg
sub
xor
mov
adcl
pop
fcompl
fcomi
stos
xchg
mov
out
pop
adc
fidivl
cmp
xchg
cmp
pop
mov
xchg
xchg
enter
mov
lret
pushf
das
sub
call
pop
sub
push
dec
fidivl
shlb
xor
mov
outsb
lods
cmpsb
ret
decl
repz
rcrb
jb,pt
sbb
inc
add
jb
mov
ret
inc
xchg
test
add
decl
sub
jecxz
mov
cwtl
pop
out
and
adc
call
push
cmp
jb
pop
cs
xchg
pop
jle
sbb
mov
movsb
jp
aad
mov
adc
sti
clc
cltd
add
adc
daa
xchg
jecxz
add
mov
pushl
and
xor
add
xor
pop
mov
mov
incb
or
cmp
int3
sbb
pop
fmuls
mov
lcall
cmp
mov
out
add
jns
movsl
lea
dec
and
icebp
jg
push
out
and
xchg
pusha
daa
push
test
test
cld
or
cld
push
pushf
dec
mov
xor
sti
ljmp
roll
sbb
rclb
sub
jbe
jle
sub
mov
mov
in
nop
sahf
add
jne
lcall
or
xor
in
dec
aaa
jns
xchg
inc
xor
xchg
sti
pushl
jmp
inc
cmc
xor
push
xor
xor
dec
adc
shrb
pop
sub
push
jg
mov
fwait
push
aad
push
xchg
xor
call
loop
gs
cmp
jns
xchg
push
out
mov
ljmp
sub
ss
push
pusha
pushf
xchg
sbb
cltd
mov
rcrb
hlt
xlat
pop
push
cmp
mov
lcall
jmp
xchg
xchg
mov
jle
xchg
push
pop
and
lock
push
xor
into
jp
jle
jg
dec
inc
sbb
pop
pop
pop
sbb
or
outsb
cmp
sbb
iret
mov
xor
jo
mov
ljmp
popa
addr16
test
fnsave
mov
cmp
js
xlat
adc
add
popa
xor
filds
pop
sbb
test
icebp
pop
ja
lock
jbe
sub
mov
out
add
mov
sbb
dec
push
xchg
clc
jmp
xor
les
jg
cmc
mov
jl,pt
fs
mov
mov
out
push
cld
ljmp
cmpsb
lea
mov
in
aaa
jbe
xchg
sub
mov
cli
cmp
adc
jmp
arpl
cmp
push
push
loop
scas
pop
xor
lcall
gs
jne
ds
jnp
loope
xchg
jb
insl
inc
push
dec
addr16
inc
mov
outsl
popf
jne
dec
das
jmp
stos
cs
xchg
ja
les
lods
adc
mov
add
mov
jmp
int3
ljmp
cli
inc
or
jne
or
xor
shl
lcall
dec
arpl
hlt
lcall
sbb
lds
or
mov
inc
dec
xor
mov
cltd
lret
cmp
xor
xor
push
xor
andl
sbb
mov
incl
stos
sub
stos
in
jg
ljmp
and
fists
fcmovnbe
lds
jecxz
test
and
leave
fisubl
or
js
adc
add
enter
and
sub
repz
int3
push
js
xchg
int
leave
iret
test
push
dec
mov
pop
xlat
ljmp
mov
and
enter
ficompl
fnstenv
add
jl
xorl
or
adc
in
pushl
mov
insl
xchg
pop
jae
sbb
out
cmpsl
inc
pop
sub
mov
ljmp
inc
daa
bound
mov
adc
push
outsb
add
loop
sbb
push
adc
pushl
mov
bound
dec
sub
sahf
jmp
je
mov
in
add
jmp
test
inc
dec
push
jg
imul
out
mov
jg
pushl
and
push
xchg
push
mov
adc
pop
movsl
add
clc
jmp
xchg
stos
fdivp
bound
mov
sbb
jg
sub
clc
add
je
orl
enter
jp
or
std
cmp
in
icebp
add
or
jno
fwait
fcomip
lcall
xchg
mov
enter
movsb
pop
popa
or
adc
lods
test
mov
add
repnz
sub
xchg
lea
jae
stos
shlb
ja
or
fwait
incl
scas
dec
adc
push
jl
insb
jle
cwtl
ds
movsl
lcall
pop
push
aam
mov
fcmovnb
dec
lcall
xchg
mov
gs
lods
insb
ljmp
cmp
mov
inc
push
cmp
mov
stos
outsb
test
cmp
and
jbe
ljmp
loop
decl
xor
push
and
push
or
jl
imul
xor
xor
mov
mov
mov
and
shll
or
push
jl
icebp
dec
fcomip
push
sbb
inc
sub
fdivrl
mov
ljmp
push
mov
and
jmp
inc
sbb
or
ss
aad
cmc
fists
dec
int3
mov
les
jmp
xchg
jmp
and
fcoms
mov
mov
xor
shll
dec
xchg
or
pushf
int3
xor
jbe
imul
pop
push
add
stos
jle
xchg
pop
inc
jne
xorb
add
fildll
jo
lret
sub
mov
push
push
mov
and
loop
jmp
pop
xchg
xor
and
cmp
xor
in
and
lcall
data16
dec
stc
cmc
scas
mov
insb
das
or
call
clc
test
pop
lds
lods
mov
fstps
push
xchg
movsl
aad
dec
je
add
call
push
mov
gs
mov
loopne
shrl
imul
xlat
lods
jne
pop
push
jae
pushl
daa
insl
push
jmp
xor
inc
rolb
mov
test
mov
fnstcw
icebp
lcall
jmp
ds
adc
push
fs
cli
ljmp
or
adc
movsl
sbb
mov
aad
cmp
decl
mov
ds
push
add
add
leave
inc
mov
push
rclb
es
jp
fcomps
cli
sbb
les
ret
call
decl
test
sbb
jbe
mov
ret
insb
sbb
scas
xchg
cmp
pushl
std
js
or
test
stos
pop
das
mov
mov
cmp
fidivs
pushl
jge
or
jno
daa
sub
fbstp
int3
mov
cwtl
fbld
pop
call
imul
adc
sub
push
lock
call
lods
adc
dec
xchg
add
mov
sub
lcall
pop
cmc
inc
fcomps
sbb
leave
pop
cmp
mov
jae
out
inc
popa
inc
idivb
inc
mov
or
incl
rcrb
out
and
jb
mov
test
lods
scas
push
mov
pop
ljmp
push
sub
push
jecxz
rorl
mov
adc
sbb
xor
decl
mov
xlat
dec
inc
ret
scas
pop
in
sbb
pop
jp
mov
pop
lock
call
xchg
sahf
adc
mov
stos
int3
aas
scas
dec
xor
sbb
mov
call
push
popf
xchg
inc
daa
imul
mov
pop
push
mov
call
adc
outsl
clc
insl
sbb
and
fcmovbe
xchg
testb
pop
push
stos
dec
or
es
cmpsb
or
pop
nop
mov
scas
pop
dec
dec
fisubs
add
in
mov
fxch
notb
add
insl
jbe
cmp
adc
cmpsb
aam
mov
add
decl
sub
fmul
inc
es
fildll
cli
fists
cmp
jg
mov
push
test
in
popa
loope
lcall
or
adcb
add
sub
fists
and
pop
mov
adc
and
push
les
xchg
jno
ja
inc
push
sbb
lds
jmp
pop
cmpsb
sbb
mov
adc
sub
inc
fwait
push
xor
push
add
inc
dec
adc
pop
inc
push
sub
loope
dec
cmp
push
sub
inc
addr16
call
and
loope
xor
imul
test
call
or
insb
push
xor
sbb
xchg
pop
addl
gs
call
inc
inc
xor
addr16
repz
test
pop
test
lds
ret
nop
test
push
push
test
daa
xchg
in
push
addb
push
xor
and
cltd
sub
in
nop
call
sub
push
jns
xor
xchg
inc
stos
cwtl
xchg
sbb
dec
loope
lea
mov
sub
cli
and
pop
gs
mov
or
pop
imul
jp
xor
pop
imul
lds
pop
dec
dec
or
xchg
and
popa
pushl
xor
roll
iret
xchg
push
inc
adc
loop
and
push
and
pop
in
jle
ja
xlat
adc
popa
xor
and
aad
add
cmp
mov
clc
jg
sbb
jg
xlat
add
cs
clc
fstpt
xchg
adc
add
pop
leave
add
sbb
xchg
dec
inc
incl
ljmp
jae
sbb
and
outsl
clc
add
mov
cmp
sub
xor
in
sub
add
dec
call
dec
push
or
pop
ljmp
popa
and
jg
add
call
in
dec
movsb
xchg
xchg
adc
ljmp
mov
bound
xor
pop
mov
std
push
popa
push
fcoms
sub
movsb
pop
pop
xchg
xchg
sbbb
jmp
sub
inc
lods
or
mov
lahf
xchg
imul
out
clc
decl
pop
xchg
addr16
add
inc
fwait
call
ds
stc
push
push
add
mov
les
movsb
jb
mov
ljmp
mov
popf
fdivs
data16
jae
ret
popa
pop
rolb
sbb
mov
sub
sbb
inc
sub
and
mov
sub
jmp
xchg
ret
imul
dec
pop
arpl
clc
icebp
pop
out
aaa
add
and
jge
cmc
ja
hlt
jno
ret
cltd
push
sbb
xor
adc
fdivrs
test
mov
add
mov
jbe
fst
inc
fiadds
sub
daa
loope
push
or
add
push
sbb
mov
hlt
cltd
or
sub
xchg
sbb
loopne
outsb
decl
pop
mov
jbe
inc
lcall
push
outsl
test
xor
test
sbb
jmp
jbe
icebp
xchg
cmp
adc
dec
f2xm1
ja
mov
xchg
jbe
push
addr16
arpl
inc
in
ja
lcall
sub
pop
mov
dec
aam
cmpl
cmp
dec
or
out
cld
jg
js
add
cmp
mov
cmp
jp
pop
xchg
sahf
js
cmpsb
xchg
xlat
cwtl
mov
mov
xor
js
xlat
xor
mov
xchg
pusha
push
jnp
xchg
punpckldq
movsl
cmp
inc
jne
test
mov
out
adcb
jb
cwtl
push
pop
iret
rclb
test
jg
add
js
mov
mov
inc
mov
fwait
daa
add
call
stos
xchg
hlt
jl
pop
sahf
mov
mov
ljmp
popf
xlat
dec
fildll
int
pop
cmp
add
js
rorl
push
into
sar
and
and
andb
dec
push
or
add
sbb
sub
incl
and
xor
into
adc
sub
bound
or
decl
cwtl
nop
add
mov
dec
scas
or
pushl
shrb
xchg
sti
sbb
mov
cmp
popa
mov
add
add
jp
in
incl
jmp
rclb
sbb
movsl
lretw
movsb
outsl
clc
jg
mov
or
popa
dec
xchg
insb
push
cmpsb
add
push
sub
decl
jns
pop
cwtl
jp
ja
imull
mov
insl
sub
dec
cmc
incl
cltd
lcall
jb
xor
daa
jne
lcall
fists
push
mov
test
addr16
xchg
lea
popf
stos
inc
jle
lcall
decl
sub
push
cs
cmp
inc
repnz
push
ja
test
call
out
test
cmp
aad
push
sbb
incl
jecxz
ret
adc
inc
inc
cmp
mov
inc
outsb
decl
dec
push
fwait
inc
mov
adc
aaa
mov
push
movsb
and
stos
jo
ss
push
xchg
pushl
push
mov
xor
cmp
int3
leave
push
or
js
add
pushl
adc
test
repnz
lods
es
incl
push
dec
dec
pop
sbb
and
pop
incl
push
add
mov
add
adc
cld
or
jmp
lret
add
or
dec
push
arpl
lods
cmp
adc
out
cli
add
daa
push
test
ja
movl
jmp
push
push
mov
xchg
stos
shlb
pop
mov
mov
subl
push
mov
mov
lods
test
push
dec
add
call
rclb
pop
pusha
dec
mov
sar
ljmp
pop
movsl
mov
fsts
fcoms
inc
clc
mov
hlt
xchg
ljmp
push
pop
inc
add
cmp
ja
std
call
fsts
mov
cmp
scas
shll
pop
pop
test
xlat
call
xchg
mov
cmp
subb
orb
stc
fwait
adc
stos
mov
movsb
and
jnp
stc
jl
or
stos
ficoml
addr16
dec
pop
jae
inc
gs
jecxz
dec
xor
and
fistpl
insl
out
test
push
inc
lahf
loope
and
in
testb
jmp
jg
and
dec
jb
loopne
mov
scas
mov
xchg
nop
sti
ljmp
lret
scas
std
stos
mov
mov
addr16
lret
mov
push
pusha
add
call
cmp
bound
pop
add
xchg
push
cmp
test
mov
lds
sub
mov
nop
sbb
out
bound
push
call
lods
ja
jbe
es
fwait
xor
cmpsl
xchg
dec
movsb
mov
std
call
shr
pop
or
inc
call
xchg
mov
jne
sbb
ds
push
or
sti
cmpsb
jo
shrl
sbb
fisttps
inc
sub
sub
pop
loope
pop
push
std
push
push
fcomip
ljmp
mov
mov
stos
mov
or
dec
sbb
shlb
mov
decb
shrl
mov
lcall
xchg
out
mov
push
mov
adc
mov
mov
call
pushf
xor
jnp
popa
mov
inc
sar
call
xchg
enter
add
ss
jae
fmuls
push
pop
lret
jns
pop
lock
test
hlt
pop
sub
push
mov
cmc
jg
and
dec
call
cmp
and
mov
mov
xchg
leave
fmuls
inc
sbb
push
fdivp
mov
xchg
adc
lret
sbb
lcall
jmp
in
or
xor
pop
cmp
mov
sub
xor
jbe
ljmp
xchg
sbb
pop
adc
lret
xchg
mov
jnp
jns
in
cmpsl
imul
pushl
insb
mov
int
jge
cmpsb
mov
mov
push
xchg
into
pop
call
hlt
hlt
add
cwtl
xorb
inc
call
xchg
xchg
incb
xchg
jb
jne
movsb
incl
std
popf
movsb
sbb
or
sar
pop
mov
or
push
push
xor
pop
or
push
dec
test
jns
sbb
xorb
or
incl
data16
and
test
in
mov
int3
cltd
lods
dec
loopne
pop
js
rcl
lods
mov
mov
lcall
push
xor
inc
sbb
mov
test
inc
daa
add
jnp
dec
decl
or
pop
lock
add
ret
loope
mov
or
dec
pop
flds
repnz
enter
push
ret
and
or
mov
call
mov
add
and
test
les
mov
and
call
add
nop
or
nop
cmpsb
fistps
adc
xchg
pop
mov
cltd
int
sbb
mov
and
icebp
or
or
sbb
mov
rclb
sbb
outsb
and
pushl
mov
es
mov
mov
jp
xchg
hlt
mov
ss
fcompl
leave
rcll
loopne
sahf
mov
mov
mov
push
pop
cmp
sub
and
aad
xor
add
or
jns
lds
call
inc
adc
jno
aas
dec
cmp
fldcw
cmp
incl
rcrl
jmp
sbb
lods
sbb
mov
cwtl
xchg
push
loopne
and
jg
xchg
lea
lret
lock
mov
out
cmp
movsb
test
call
push
mov
add
ds
jno
decl
sub
subl
call
dec
je
dec
out
pushf
pop
add
mov
add
push
add
cli
lea
jo
stc
xchg
stos
hlt
ljmp
pushf
dec
scas
dec
rcl
jb
pop
jecxz
cmp
movsl
dec
fmuls
loop
mov
nop
dec
sub
repnz
add
pop
and
mov
into
mov
hlt
push
push
aam
dec
test
add
decl
lret
mov
xchg
push
stc
mov
fildll
popa
ret
sbb
pushl
insb
jle
daa
scas
repz
repz
sub
add
jmp
je
push
sub
int
inc
inc
cwtl
ljmp
in
imul
mov
imul
sbb
and
or
decl
mov
mov
js
fsubl
sbb
out
xchg
lods
lcall
fimuls
lods
cmp
mov
int
lcall
and
mov
mov
inc
xor
loopne
ficompl
jl
jns
pop
cmp
ret
cmp
xor
pusha
push
lods
jmp
adc
cli
add
add
test
cmpsb
lcall
xchg
cmpsl
sub
xor
les
test
cli
jg
add
push
cmp
cmp
add
leave
jbe
or
lock
rorl
jecxz
lds
fisubrl
push
jg
aad
cmp
pusha
lcall
xchg
mov
sbb
push
roll
fbld
out
addl
add
pop
dec
jmp
lcall
sbb
pop
int3
ret
mov
ret
ret
movb
stos
lret
add
adc
orb
into
fs
jb
int3
push
call
divl
adc
add
dec
shlb
ljmp
incl
jp
fstps
jge
es
cld
adc
jmp
mov
pop
popf
add
dec
pop
mov
and
inc
jl
rep
or
and
sti
lds
hlt
cmc
jmp
cmc
jne
xlat
out
xchg
das
data16
daa
inc
sbbl
fbld
adc
xchg
loope
xchg
repnz
int3
outsb
cmp
mov
test
mov
push
or
aam
push
sbb
fmul
in
flds
push
in
fldenv
sub
cmp
jmp
mov
lret
outsb
push
push
out
fsubrl
fwait
decl
push
pusha
movsb
xchg
push
outsb
lcall
out
dec
cwtl
push
jne
mov
push
xchg
dec
mov
cmc
mov
xchg
aaa
arpl
jmp
or
sti
xchg
filds
mov
mov
dec
or
or
loopne
cmc
pop
cmp
aaa
pop
sbb
add
call
lock
mov
cltd
add
pop
pop
insl
cmp
in
lret
pmulhuw
inc
pop
or
xchg
icebp
addb
imul
mov
adc
inc
sub
mov
pop
mov
leave
pushl
fwait
and
roll
sub
cmp
push
mov
or
mov
int3
mov
add
push
test
sub
xor
lret
adc
mov
rorb
aam
insl
sti
jmp
push
int
jb
orl
aam
es
jl
xchg
in
xchg
push
int
ret
adc
sbb
mov
mov
ds
cli
call
xor
dec
xchg
pusha
cmp
push
xchg
jmp
dec
and
pop
imul
stos
stos
add
xchg
push
cmp
lock
mov
xchg
adcb
and
pop
test
movsb
stos
push
hlt
cltd
mov
xchg
lcall
shlb
adc
repnz
cmc
sub
mov
lcall
sub
cld
push
dec
cmp
incl
stos
scas
decl
push
mov
pop
ret
int
xor
mov
into
push
repz
jecxz
out
add
sti
lret
xor
call
rorb
mov
mov
outsl
add
mov
xor
pop
fimuls
mov
in
xchg
hlt
mov
ljmp
mov
and
nop
mov
shll
ds
mov
ljmp
fildl
pushf
jmp
fs
inc
movsb
mov
inc
xlat
inc
std
decl
jp
ret
jo
das
jo
icebp
mov
or
push
popa
fistps
es
inc
repz
mov
ds
and
pop
push
insb
loopw
or
jg
ljmp
xor
or
or
popa
mov
mov
incl
xchg
inc
and
cld
enter
push
dec
and
cld
mov
call
ljmp
mov
cmpsl
movsb
xchg
push
addl
rorl
dec
lahf
xchg
notb
mov
jge
lret
dec
xchg
fmulp
mov
shll
jle
out
cli
pop
std
aam
cmp
pusha
arpl
add
mov
and
in
aas
clc
and
and
repnz
add
out
sbb
lods
pop
xor
sbb
rclb
sub
fbld
xchg
aam
push
es
xor
and
lcall
mov
and
adc
test
popa
and
mov
inc
push
in
dec
push
scas
add
and
stos
mov
fistpll
push
pop
inc
ret
inc
aaa
sub
adc
incl
adc
pushf
in
jl
cmp
inc
mov
mov
pop
sahf
fxch
popa
ficoms
sbb
fs
xchg
fcos
mov
jae
xor
fisttps
and
cmp
aas
and
imul
xchg
sarl
inc
adc
sub
pop
cmp
movb
movsl
jge
imul
int
dec
mov
add
xchg
loope
jmp
mov
and
push
mov
cwtl
decl
filds
movsb
rorl
sbb
add
push
std
and
pushl
pop
mov
push
cwtl
mov
xor
push
and
cmp
icebp
mov
daa
and
fldcw
inc
mov
mov
and
push
dec
cmp
xchg
cmp
dec
mov
jg
or
xchg
mov
add
pop
push
xor
inc
cmpsb
jg
cmp
xchg
push
mov
xchg
cmp
subl
and
decl
lock
mov
xchg
mov
and
insb
clc
incl
in
or
dec
stc
mov
add
adc
and
xchg
or
ret
or
add
mov
ljmp
ss
or
pop
mov
lret
push
jg
dec
cmpsb
sub
dec
mov
add
or
mov
push
jno
arpl
push
call
jmp
cwtl
loopne
int3
ljmp
push
unpckhps
mov
inc
dec
arpl
or
push
fs
jle
xor
test
push
mov
mov
rcrl
and
incl
shlb
ret
lds
cmp
pop
pop
add
es
popf
loope
loope
ljmp
data16
dec
xchg
mov
inc
pop
mov
adc
loopne
push
ljmp
pusha
lret
decb
aaa
xor
xor
fsubr
incl
adc
xchg
lret
adc
jmp
add
push
fisubl
mov
mov
fisttpl
pusha
push
sub
cmpsl
and
ljmp
les
sub
shl
ljmp
push
push
fsubrl
mov
cmp
pop
mov
fisubs
into
dec
es
jg
mov
fwait
push
push
icebp
xorb
in
cmp
xor
lcall
lds
mov
push
pop
incl
or
xor
jge
orl
mov
jge
js
sub
dec
adc
and
mov
clc
rcll
ljmp
mov
mov
lcall
rclb
xchg
sub
andl
loopne
adc
add
pop
movsl
jmp
sarl
sub
pushl
mov
push
inc
pop
add
push
push
sbb
or
push
test
cmpsb
pushl
cmp
setno
test
stc
aas
jo
gs
mov
mov
lock
ljmp
adc
mov
push
sub
into
in
cmp
shr
int3
and
addr16
rorl
jmp
xchg
jp
dec
pop
stos
negb
ss
scas
mov
pushf
pop
xlat
add
inc
fs
jbe
and
fisttps
pushl
dec
out
inc
shlb
mov
incl
cli
xor
hlt
sub
xor
push
bnd
call
jl
fcmovne
sub
mov
insl
xchg
call
loopne
dec
pop
es
dec
mov
fcoml
sub
pop
and
mov
jmp
lret
jno
pop
movsl
icebp
push
leave
mov
mov
ja
out
shll
mov
xchg
mov
inc
cmpsb
or
push
out
mov
inc
notb
test
call
pusha
stc
sbb
sbb
test
rorl
adc
bound
mov
inc
jb
jns
sub
call
dec
or
lret
add
add
add
call
insl
ljmp
sbb
cwtl
test
add
das
lods
mov
xor
imul
jmp
pushl
outsb
adc
fwait
push
push
dec
pcmpgtd
sub
iretw
aam
xchg
js
mov
adc
cmp
cltd
int
lea
inc
rolb
call
xchg
mov
sbb
mov
decb
fst
lods
lods
dec
repnz
pop
das
sub
sbb
lock
std
incl
imul
inc
cs
notb
pushw
fists
and
popf
push
inc
mov
adc
sub
mov
lods
int
out
xchg
pop
push
sub
outsl
cli
mov
hlt
xchg
dec
inc
pop
test
rcl
pop
flds
decb
out
xlat
lret
mov
mov
cltd
insl
jb
mov
add
sbb
arpl
mov
inc
cmc
push
dec
ja
xor
je
push
jg
or
adc
jae
sbb
cmp
mov
sbb
lods
add
mov
pop
sbb
decb
xchg
addps
mov
aad
sub
add
aaa
xchg
push
cli
adc
or
das
nop
add
mov
add
popa
cmp
dec
adcl
lods
lahf
icebp
mov
call
mov
xchg
mov
nop
sbbb
sub
shlb
mov
sbb
or
mov
les
mov
sbb
sub
dec
cli
cmp
imul
js
scas
cmpsb
inc
xchg
cmpsb
push
bound
sar
dec
xchg
xor
and
xor
dec
shll
adc
push
mov
mov
fcom
xor
push
pop
lcall
pushf
lods
sbb
xor
dec
sar
adc
nop
xchg
mov
out
into
push
jae
xchg
mov
cli
mov
je
mov
ret
lea
lods
int3
ret
outsl
cli
pushl
sbb
sbb
jns
cmp
cli
push
jg
dec
push
cmp
scas
sub
shll
sbb
orb
insl
cli
scas
fstps
mov
in
push
add
xchg
mov
and
or
test
jbe
inc
test
inc
gs
fnsave
push
xchg
mov
icebp
jmp
cmc
jmp
push
clc
repz
lret
lret
add
jl
insl
pop
inc
pushf
cmp
enter
mov
orb
out
enter
sti
jg
mov
cmp
rorl
dec
pop
inc
push
jp
sub
jg
push
rcrl
inc
sbb
cmp
xchg
rcrb
rcll
lea
inc
shlb
lods
wrmsr
sbb
jg
clc
sbb
stos
sarl
pop
lods
lods
pushf
sbb
adc
ror
cmp
and
cmp
push
lcall
mov
sbb
cmp
fcomip
inc
mov
xor
lret
cld
jg
cmpsb
xchg
add
sarl
xor
and
and
enter
loope
mov
inc
mov
xor
push
inc
cmp
adc
inc
inc
mov
dec
pushl
adc
shlb
and
ret
inc
xchg
or
dec
xor
ljmp
cmp
jno
push
inc
movsl
push
cmp
test
rcll
or
adc
adc
xor
mov
mov
pop
sbb
sbb
mov
sbb
cmp
inc
jno
loopne
xchg
in
sbb
inc
sub
push
lcall
add
repz
insl
mov
idiv
add
lcall
jmp
das
mov
add
andb
dec
mov
add
xchg
lcall
dec
mov
dec
lock
mov
adc
insb
mov
or
adc
hlt
pop
iret
mov
sar
pop
mov
test
lcall
jmp
or
or
adc
adc
add
mov
sub
outsl
xchg
mov
stos
sarl
jg
xor
sub
fnstenv
jmp
adc
sbb
sbb
mov
xchg
jnp
inc
pushl
movsl
cmp
adc
scas
mov
mov
lea
or
rorb
jo
inc
sarb
mov
xor
cwtl
je
rorb
aas
xor
cli
sub
dec
push
mov
lcall
cmp
lret
clc
jg
clc
lret
cmp
dec
les
or
cwtl
mov
adc
dec
mov
addb
cmp
mov
aaa
cwtl
clc
fwait
sti
lea
les
mov
hlt
popa
pushf
fdivp
jle
mov
stos
movsl
fists
out
adc
sbbl
jmp
in
mov
inc
cmpsb
mov
adc
xchg
popf
jmp
cld
mov
pop
adc
repnz
push
push
fisttpl
add
or
lcall
adc
andl
inc
dec
and
out
jae,pt
lcall
xchg
lock
sahf
adcb
or
push
mov
mov
add
cli
pop
adc
std
push
jo
add
lcall
pop
nop
push
push
jne
addb
insl
pop
aam
lcall
sub
xchg
mov
test
inc
add
jg
push
push
or
cmp
fwait
mov
roll
push
jg
call
add
mov
rorl
rcrb
fcoms
jge
popf
pop
lret
sub
shll
cltd
sub
rcll
cmp
inc
jecxz
xchg
sbb
sbb
pop
mov
lret
add
decl
sub
or
cmp
dec
imul
mov
decl
cmp
fwait
dec
shr
cltd
sbb
sahf
dec
dec
dec
dec
dec
ret
pop
lds
or
adc
call
fcmovnbe
mov
mov
push
fnstenv
sub
add
adc
int3
xchg
int
and
aam
lea
add
jnp
iret
cld
mov
inc
dec
insl
ljmp
adc
in
inc
dec
or
bound
pop
aam
mov
jl
dec
dec
ds
mov
mov
fbld
pop
in
xor
pushf
add
dec
into
call
push
addb
or
fwait
mov
mov
in
aam
addr16
fcmovnb
fstp
cli
decl
fcomps
enter
fcomip
jo
xlat
loop
add
cmp
jne
push
pop
imulb
sub
and
pushf
dec
xchg
jle
cmp
inc
and
sub
inc
sub
or
adc
dec
lret
xor
clc
inc
or
or
dec
or
fildll
and
loopne
imulb
testb
shll
lret
xchg
and
ljmp
mov
push
cmpsb
or
das
pop
or
aad
jg
outsl
test
xor
std
fs
stos
mov
jnp
jg
sub
sbb
lret
add
fcmovnb
pushl
and
cmp
xor
call
xchg
les
pop
sbb
push
pop
push
cmp
cmp
cmp
jg
decl
leave
leave
test
jns
lret
pushf
pop
pop
jno
pop
mov
int3
cmp
insl
mov
pusha
pop
xor
aam
xchg
push
rolb
jg
dec
cld
cmp
rcl
adc
jmp
cmp
call
add
sbb
dec
insb
and
call
ds
aad
movsb
icebp
ja
cli
mov
and
cld
mov
ret
fldl
fwait
js
lock
dec
out
lods
jo
lods
jg
add
fiadds
movsb
lock
push
push
mull
pop
sub
incl
mov
mov
adcl
pop
imul
xchg
xor
sti
stos
mov
testl
mov
cmp
inc
and
fmuls
add
jmp
aad
add
push
sub
call
cmp
repz
pop
into
push
movsl
xchg
loopne
pusha
out
aad
xchg
arpl
adc
stos
sub
aas
insb
cwtl
ret
les
and
pushl
dec
cmp
mov
xor
rclb
mov
popa
inc
pushf
fisubl
jne
sar
lahf
pusha
ljmp
mov
rclb
or
lret
add
mov
sub
lret
mov
sub
stos
incl
movsl
xor
pushf
pushf
push
sbb
fsub
inc
sub
enter
xor
mov
jecxz
mov
rcrb
mov
cmpsb
or
cmp
push
lcall
pop
rclb
sub
ds
xorl
subl
adc
fisubrs
sub
scas
pop
or
sub
xor
mov
and
orb
into
xorl
or
mov
lret
into
incl
push
fs
jbe
fdivl
outsl
clc
sbb
push
in
inc
fsubp
dec
enter
enter
mov
dec
mov
add
mov
adc
or
or
call
mov
add
cmp
dec
std
enter
andb
add
add
in
clc
xor
push
out
addr16
addr16
fs
pushl
sbbb
mov
and
sub
rorb
rcrl
jb
rorb
decl
mov
push
shll
pop
test
cltd
lret
lods
and
imul
loope
test
leave
inc
jnp
sbb
rcll
or
lcall
inc
xor
aad
aaa
sub
dec
push
hlt
mov
test
shrl
push
cmpsb
mov
test
lock
inc
pop
and
jg
xchg
sub
loop
lret
add
jg
add
lahf
mov
sbb
sti
xor
jae
inc
or
shlb
sub
xor
cmp
call
arpl
mov
inc
int
adc
cwtl
das
inc
sub
bound
call
pop
pop
movsl
xor
or
lods
das
dec
xchg
daa
add
icebp
ljmp
negb
push
pop
push
in
xchg
insb
lret
in
jae
pop
push
or
adc
test
mov
mov
in
xor
xor
jnp
or
pushl
xchg
jae
mov
mov
and
bound
push
xchg
ljmp
pusha
sub
call
lcall
pop
imul
cmpsb
push
loope
xchg
fstps
cmpsb
xor
stos
mov
push
xchg
scas
loope
pop
jbe
adc
xor
ljmp
or
mov
cmp
push
push
xchg
or
call
mov
outsw
mov
mov
cmp
and
mov
cmpsb
sbb
mov
sbb
call
in
cmp
test
popf
pop
insb
loope
push
adc
sbb
mov
shll
adc
mov
bound
sub
push
and
push
movsb
pop
adc
sub
shrl
clc
pushl
xor
mov
jge
faddl
jecxz
dec
call
lds
mov
or
jmp
pop
or
dec
lds
mov
xchg
scas
out
pop
push
cmpsb
mov
add
imul
decl
repnz
into
sub
xchg
mov
insb
nop
lcall
repz
enter
lret
cmp
insb
jne
insb
pop
outsb
add
jae
lahf
add
lock
mov
mov
fsubrs
test
mov
sub
fmul
je
push
push
and
insb
ficoml
inc
or
std
fists
sub
scas
push
test
jnp
loopne
cmpsb
mov
and
adc
fadds
pushf
out
sbb
cmp
incl
xchg
jl
sbb
outsl
mov
mov
ret
mov
pop
fistpl
xor
pushf
outsb
mov
mov
jmp
push
jmp
mov
sbb
push
push
out
pop
add
push
call
ss
out
mov
outsl
imull
push
mov
lcall
out
cmp
cmc
push
pop
movsl
adc
ret
cs
iret
jns
pop
ror
pop
xor
incl
jno
xor
aas
or
xor
and
dec
es
fildll
loopne
rcl
and
ds
icebp
rcll
icebp
adc
incl
out
cltd
subb
pop
sar
jae
jo
mov
pop
push
cmp
rol
add
adc
add
jmp
cwtl
or
cmp
fcos
jg
dec
shlb
mov
xchg
es
bound
cltd
repnz
xchg
add
mov
and
call
ljmp
cmp
js
sub
adc
push
cmp
ror
and
out
sbbl
repz
stos
cltd
ljmp
pop
mov
sbb
lretw
jle
fwait
or
mov
push
jl
and
add
stc
das
add
inc
daa
mov
sbb
jmp
inc
cli
loope
sbb
test
cld
jle
bound
rclb
and
jmp
scas
movsb
jmp
jne
jg
gs
lfs
outsl
rclb
mov
mov
gs
insl
push
incl
pop
ret
sbb
cmp
mov
push
clc
lock
lea
mov
orb
cmp
insl
int
xchg
cmp
add
mov
incl
add
xchg
mov
xchg
adc
sub
inc
push
or
push
xchg
xchg
jns
xchg
cmc
pop
jne
test
out
ja
loopne
mov
mov
pop
jge
sbbl
rclb
sbb
or
mov
sbbb
xchg
xor
inc
jecxz
cmp
jecxz
mov
mov
dec
mov
nop
ret
mov
cltd
add
sub
inc
cli
mov
push
imul
shlb
mov
pop
leave
push
xchg
mov
or
push
xchg
jb
cltd
movsl
inc
call
popf
adc
movsl
sbb
inc
and
rclb
lock
jmp
lods
sub
inc
dec
push
aam
sbb
mov
pop
or
dec
mov
mov
stos
daa
jne
push
stos
lods
xchg
ljmp
dec
lcall
scas
inc
std
adc
mov
faddp
pop
xchg
les
sbb
cmp
xor
pop
push
xchg
call
popa
imul
aaa
or
fsqrt
divb
clc
pop
sbb
call
mov
inc
lcall
lods
incl
dec
pop
mov
xor
xchg
add
fdivrs
repnz
out
xchg
or
add
sub
pop
pop
push
daa
xor
incl
mov
frstor
jg
sbb
inc
pop
mov
fmull
mov
ljmp
sbbb
pop
or
pop
pusha
ja
out
cmc
daa
decl
lock
fs
fs
sbb
push
ficoms
in
xchg
pop
adc
or
je
add
jmp
fcom
inc
je
popa
je
je
ret
test
ss
jb
xchg
addr16
addr16
sbb
je
jecxz
pop
stos
mov
decl
fdivl
lret
mov
call
mov
test
jns
xor
call
popa
inc
or
cmp
xchg
pusha
push
cltd
and
pop
lcall
out
gs
push
decl
movsl
xchg
dec
mov
mov
addr16
cltd
es
cmpsl
rol
pop
jl
push
cli
fucomip
mov
aam
add
and
ljmp
andl
inc
std
rcll
in
push
dec
aaa
pushf
lcall
stos
pop
push
sar
cmpsb
orb
cltd
mov
add
addr16
lcall
sarb
cmp
adc
push
repz
aas
rcll
add
pop
lcall
inc
daa
mov
addl
cwtl
sbb
int3
out
scas
jmp
lcall
lret
jo
mov
pop
andb
in
loopne
sbb
clc
xor
mov
push
mov
or
jmp
pop
loope
ret
movsb
and
fwait
jmp
xor
inc
sti
lcall
ret
call
or
pusha
push
mov
pop
add
push
xchg
mov
test
mov
adc
call
ljmp
or
inc
dec
cli
mov
rclb
sub
dec
cmpsb
inc
repz
pusha
in
jle
jg
jg
and
or
mov
sub
dec
lret
push
mov
incl
fcmovb
test
jl
outsb
inc
test
xchg
and
mov
mov
mov
ljmp
rcrb
loope
lret
nop
xor
push
push
dec
pop
insb
adcb
push
out
cli
incl
push
cmp
in
test
imul
sahf
xchg
inc
pop
sarb
mov
int3
pusha
decl
push
repnz
push
add
sahf
shl
and
sahf
stos
lret
jmp
xor
and
push
or
shrb
add
sub
js
sbbl
outsl
xchg
sub
mov
jmp
rcrl
fildll
pop
and
loope
or
call
add
jecxz
pop
dec
es
rolb
cli
fsubr
cmp
pop
mov
fildll
push
dec
inc
sbb
pop
sub
insl
sub
sbb
xor
cmp
xor
sbb
add
ja
xchg
mov
or
pusha
xlat
or
push
les
inc
sbb
or
out
jle
std
mov
mov
or
mov
es
pop
mov
movsb
sbb
ret
lahf
inc
pop
mov
jecxz
nop
test
inc
push
in
inc
inc
hlt
nop
lcall
fwait
popl
push
cmp
mov
lcall
push
cmp
je
mov
std
loopne
xchg
stc
cltd
pop
xor
pop
xor
push
test
jmp
pop
pop
pushl
mov
push
inc
xchg
inc
and
adc
rol
mov
mov
push
xchg
mov
enter
out
mov
lret
xor
and
jp
out
movsb
cmp
add
int3
dec
fcomip
sbb
or
cltd
repnz
pop
and
lret
mov
call
idiv
rorb
scas
sbb
scas
in
out
clc
pop
pop
jo
sbb
repz
inc
add
call
test
sbb
fisubs
xor
roll
add
std
jmp
movsb
add
addr16
or
rolb
arpl
inc
adc
incl
ret
jno
inc
in
loope
cmp
imul
std
out
daa
mov
incl
push
clc
sbb
lea
adc
push
rolb
jne
dec
arpl
xchg
and
pushl
int3
scas
jno
and
mov
insb
aam
mov
fwait
dec
dec
repnz
adc
mov
xchg
cmc
popa
push
hlt
sbb
push
and
out
xchg
xor
in
or
out
mov
fstpl
inc
or
push
ss
scas
gs
std
dec
push
mov
arpl
ret
inc
in
loopne
jg
decl
lret
mov
lcall
sub
shrl
sbb
out
pop
dec
addl
sub
sbbl
mov
and
clc
addb
add
fdivrl
pop
mov
jmp
movsl
mov
mov
inc
ljmp
test
dec
fidivl
inc
jg
lcall
repnz
mov
imul
outsb
int
out
jo
xchg
ljmp
push
inc
xor
pop
mov
mov
lea
popa
jo
repz
pop
loope
jg
push
shlb
cmp
and
arpl
or
jae
add
mov
les
jl
adc
mov
jno
aas
inc
cmpsb
lcall
in
cmpxchg
lock
lcall
mov
adc
push
ret
mov
mov
lcall
daa
lea
mov
popa
cltd
fcomip
pop
dec
std
add
test
inc
sub
call
pop
aam
fcomps
xchg
rcr
xor
mov
and
imul
daa
pop
jb
pop
mov
cmp
sub
push
ficomps
ret
xor
shrl
pushl
mov
call
jecxz
dec
mov
push
ret
cmp
ds
jg
add
adc
dec
inc
pop
andb
or
je
adc
test
push
and
or
aad
prefetch
pop
jnp
xchg
sub
inc
or
out
jmp
cmp
les
inc
insb
adcl
jg
insb
mov
fistps
jb
das
push
test
inc
fidivrs
repz
sbb
mov
xchg
dec
mov
fdivl
imul
shl
mov
fistpll
stos
out
imul
push
in
loop
jge
add
mov
rolb
hlt
jle
iret
rcrl
inc
add
or
cmp
in
repz
aam
sub
stc
inc
cmp
fistl
scas
faddl
jmp
mov
pusha
add
cli
mov
sbb
adcl
test
cmp
fdivr
cwtl
filds
lret
pop
fists
pop
and
inc
sbb
fstps
int3
or
or
fs
imul
or
movsb
mov
mov
popf
and
and
jmp
std
ret
xchg
dec
push
add
subb
lcall
cmp
or
jl
pusha
sub
fsubrl
pusha
lcall
add
mov
adc
inc
int
nop
rolb
lcall
sbb
add
movb
push
add
inc
addr16
movb
push
add
call
mov
in
jns
je
mov
add
push
jmp
stos
push
loop
mov
xchg
lcall
call
cltd
xor
mov
or
or
enter
sub
dec
sbb
dec
fsubr
or
sarb
fisttpl
jl
frstor
xor
mov
sahf
dec
push
lahf
inc
ja
decl
mov
dec
jb
sbb
mov
sbb
jp
pop
cmp
pop
in
rcrb
aam
out
adc
and
cmp
cmp
cmp
ljmp
push
inc
inc
loopne
dec
dec
add
negb
inc
dec
fdivrs
inc
ss
inc
jb
test
adc
sbbb
fadds
adc
std
push
inc
pusha
fcoml
icebp
mov
incl
xchg
fs
fistps
inc
shl
shll
fnstenv
fcomip
inc
adc
xchg
push
push
rolb
adc
mov
mov
rclb
push
insl
lds
mov
pushf
int3
popf
cltd
int
in
pop
mov
push
sbbl
bound
mov
and
push
stos
inc
and
sar
add
push
outsb
js
sbb
jns
add
and
adc
fisubl
mov
add
bound
push
test
test
jo
int3
sbb
rcrb
fiaddl
test
ljmp
or
addl
pop
into
stc
push
test
nop
dec
mov
pop
jmp
inc
push
xchg
int
mov
adc
adc
rorl
jbe
cwtl
insb
lret
or
xchg
ljmp
icebp
xchg
push
xor
push
mov
lods
inc
and
sbb
imul
leave
xor
leave
movsb
ja
aam
pop
ret
rorb
push
dec
mov
push
cli
inc
dec
xor
dec
mov
rclb
fmull
bound
incl
enter
decl
in
js
inc
and
adcb
mov
xchg
cwtl
aas
insl
cwtl
jg
test
mov
dec
lock
jmp
loope
mov
pop
jle
rolb
in
outsb
pop
pop
xor
mov
cmpb
cwtl
es
adc
jae
push
mov
decl
inc
cs
or
jo
ss
adc
shlb
fldl
mov
xchg
and
out
push
mov
or
call
push
inc
pop
ret
test
insl
inc
gs
jmp
outsb
fsubl
test
and
mov
jbe
scas
clc
decl
jbe
push
adc
test
cmpsb
jb
sub
sub
dec
mov
in
jg
incl
pop
lock
jp
je
cmp
add
out
shll
movsl
mov
aad
es
mov
mov
shlb
int
outsb
xchg
sbb
pushl
lcall
jmp
cld
lea
dec
mov
insb
inc
mov
push
ljmp
push
das
cli
test
call
xor
icebp
jg
filds
in
leave
cld
mov
xchg
lret
jecxz
sub
stos
jle
jp
mov
std
push
sbb
xlat
adc
pushl
cld
xchg
addb
and
dec
test
push
movsb
pop
mov
cmp
roll
movsb
mov
push
push
test
cmc
cmp
inc
xchg
pushf
dec
subl
scas
mov
sbb
incl
pop
cmpsb
jmp
shll
sub
adc
push
pop
test
call
add
decl
out
pop
dec
add
into
push
enter
push
xchg
jmp
popa
jmp
shll
inc
in
rcrl
pop
add
call
cmpsb
push
cwtl
ss
mov
insb
sahf
movsl
pop
js
ljmp
nop
popf
pop
int
jbe
rolb
call
movsb
dec
in
movsb
mov
out
push
lcall
xor
push
xlat
xor
mov
fcomip
ljmp
adc
mov
shufps
jge
fsubrs
push
flds
adc
mov
fbstp
sbb
mov
ljmp
mov
xor
outsb
add
stos
fisttps
mov
jmp
mov
add
dec
jecxz
pop
cs
dec
lcall
xlat
stc
in
jmp
jp
into
pop
pop
scas
lcall
stos
jmp
cs
inc
mov
into
jg
sbb
leave
xor
les
jl
cli
push
cmp
mov
cld
pushl
jmp
pop
imul
inc
inc
je
inc
hlt
adc
cli
add
cs
imul
outsl
mov
fmull
fdiv
sbb
jmp
cli
xchg
adc
in
clc
ret
bound
sbb
ret
fmull
out
sbb
jmp
gs
incl
les
lods
leave
push
push
add
push
rcll
adc
pop
add
lcall
and
sahf
dec
lock
out
imul
sub
fisttpll
arpl
adc
dec
and
mov
fs
fiadds
pop
mov
rcrl
int
mov
mov
inc
aam
in
cltd
cmp
pop
sar
sub
ljmp
adc
imul
mov
ljmp
ror
sbb
out
outsb
or
fisttpll
sub
decl
iret
sub
lds
push
fcmove
aad
push
insb
sub
jecxz
xor
mov
rol
jecxz
lock
fcmove
icebp
stc
lcall
loop
lea
outsb
mov
jb
dec
mov
jns
xchg
sbbb
stos
stc
rcrl
xchg
out
daa
mov
std
dec
sub
mov
js
jmp
pop
call
pop
xlat
xchg
or
mov
or
inc
mov
int
sub
incl
loopne
das
sti
rcll
out
mov
stos
dec
add
cmp
ret
movsb
adc
fstpt
aas
lcall
add
ljmp
cwtl
ffreep
adc
lcall
add
push
sti
out
cmc
ds
scas
xor
jle
movsb
sbb
repz
mov
pushl
fsubr
test
bound
xlat
mov
and
loop
pop
pop
lcall
push
pop
loopne
mov
push
lahf
aad
pop
cwtl
out
aad
mov
imul
sbb
fbld
xor
insb
xor
insb
cmpsl
pushfw
fiaddl
inc
or
inc
xor
insb
push
adc
inc
rcl
sub
fcomip
cmc
test
pop
push
xor
ret
dec
sub
popfw
jb
dec
mov
push
decl
sbb
pop
dec
dec
jns
jae
ljmp
cltd
push
mov
pop
jo
jmp
out
orl
stos
sub
adc
icebp
ficomps
movsl
cmpsb
rcr
decl
test
mov
xchg
outsl
sub
loopne
enter
fiadds
mov
or
jb
mov
pop
pushl
pop
jbe
pop
dec
fsubrp
aaa
push
xchg
movsb
fucomip
mov
fstl
fstpt
mov
xchg
pop
sub
xchg
rol
or
outsb
jmp
sbbb
push
shll
rolb
inc
fldenv
push
xchg
imulb
adcb
imul
aam
mov
jo
mov
mov
add
push
adc
sbbb
ja
push
inc
add
xorb
push
xor
call
stos
inc
jne
divl
ja
mov
cmpsl
add
inc
jno
mov
push
clc
jns
inc
in
push
add
ja
mov
loop
movsb
imul
mov
or
bound
popa
cmpsb
gs
pop
inc
add
gs
insb
push
xchg
test
xchg
xchg
inc
lock
shlb
sbb
sub
cmpsb
dec
dec
insl
inc
outsl
pop
or
fcomip
pushl
or
insb
je
and
mov
incw
and
push
or
jb
call
sub
jbe
js
xlat
adc
ret
xor
sbb
jno
jg
aad
aaa
cmp
pop
xor
pop
enter
adc
and
inc
loopne
pop
or
stc
push
adc
sbb
insl
jg
decl
push
mov
es
out
dec
mov
mov
insl
mov
icebp
or
mov
cmpsl
sub
test
dec
cmp
stos
push
sbb
dec
add
decl
jnp
mov
into
sub
call
lds
sbb
cmp
cmp
ljmp
popa
cli
dec
push
and
lret
sar
ljmp
add
lahf
cmp
mov
push
xor
mov
fdivs
daa
sub
nop
add
or
fadds
dec
mov
iret
xorb
sub
sti
mov
sti
add
ret
push
hlt
fcomip
jp
mov
xor
jg
aaa
ja
mov
mov
dec
fadds
inc
adc
dec
and
add
push
inc
leave
add
cli
push
or
arpl
adcb
and
xchg
test
call
outsb
insl
dec
mov
frstor
push
sub
outsl
clc
out
push
mov
jb
inc
imul
and
aad
int
jne
sbb
and
call
or
dec
and
cld
push
jb
sbb
xor
xor
out
mov
ljmp
mov
push
pop
rcrl
mov
ljmp
sub
insl
mov
imul
enter
jo
inc
xchg
push
jmp
ljmp
decl
insl
push
repnz
jg
leave
dec
sub
or
sbb
xor
mov
adc
pop
rcrl
in
xor
mov
cmp
cli
outsb
cmp
fs
pop
adc
mov
in
test
and
jbe
js
ljmp
in
xor
leave
jecxz
push
cmp
mov
xorl
bound
mov
cmp
test
decl
aas
cltd
sbb
aas
inc
mov
cmpb
sub
jle
or
ret
add
out
add
sub
sub
ja
movb
sub
mov
imul
lods
inc
mov
int3
rorb
repz
cli
adc
scas
outsl
scas
cs
incl
cmp
pop
xor
pop
push
mov
mov
mov
add
jns
es
add
xchg
fidivs
push
in
aas
inc
jl
jae
mov
push
pop
hlt
addl
pusha
or
sub
orl
sbb
pop
addr16
cmp
sbb
fcoms
lcall
testb
pop
fs
cwtl
dec
subb
out
sub
call
add
push
mov
js
or
andl
mov
or
sub
call
les
insb
sbb
loope
xor
incl
ficoml
push
mov
cld
sbb
roll
mov
pusha
ret
aas
mov
cmpsl
bound
or
sbb
mov
cltd
in
into
cmp
or
leave
xchg
dec
fwait
mov
popa
xlat
test
or
xor
adc
jbe
shlb
fstpt
pop
in
and
adc
scas
ljmp
mov
daa
push
outsb
pop
addl
jmp
fs
inc
inc
jnp
in
jo
cmpsl
cltd
ret
add
xor
sub
or
cli
decl
pop
clc
js
fdivr
popa
int3
xor
pop
decb
stos
cld
mov
and
imul
mov
out
xor
das
mov
adcb
inc
test
or
ljmp
or
pop
es
adc
pop
pushf
addb
dec
jno
sbb
cmp
sub
cwtl
pop
xchg
jns
inc
movsl
sbb
add
xchg
inc
subb
and
add
xchg
xchg
mov
jns
inc
adc
lods
xchg
lcall
cld
js
mov
int3
jl
pusha
imul
lds
dec
cmp
jae
sbb
rorb
push
pusha
adc
call
or
jge
adcb
push
clc
orb
clc
mov
incl
sub
sbb
and
jmp
push
in
jp
daa
mov
fbld
call
dec
inc
jmp
xchg
cmp
dec
rcll
test
lods
jmp
push
cmpsl
pop
lods
shr
sub
sahf
push
decl
test
push
cmp
inc
cmc
sbb
sub
add
pop
jmp
jae
jg
sub
aad
insl
add
std
and
cmc
test
sub
dec
pop
mov
ret
xlat
xor
sub
inc
cli
ret
int
dec
loopne
mov
pop
xorb
test
add
loop
xchg
dec
ja
orl
push
clc
push
call
xchg
cmp
mov
push
loopne
lock
cmp
je
cmp
jmp
fidivrs
test
push
inc
pop
ss
iret
cmp
mov
mov
push
imul
decl
movsb
jo
pop
mov
sar
jbe
shl
or
xchg
cmp
imul
sar
test
sub
mov
mov
pushl
ljmp
push
jecxz
dec
gs
push
push
mov
mov
rcrb
pop
decl
call
repnz
inc
cltd
int
or
sbb
push
dec
push
pop
jb
push
jp
incl
xor
xor
mov
cmp
popa
sahf
int
xchg
cmpsl
push
das
adc
mov
movsb
pushf
inc
xchg
jno
inc
or
fiadds
cmp
inc
push
xor
fwait
shrl
gs
into
sub
push
inc
roll
push
test
or
loopne
cmp
adc
cwtl
mov
lods
in
mov
mov
lret
inc
loop
cld
es
ror
dec
adc
jp
xchg
xor
aam
test
pop
sarb
mov
adc
mov
add
ret
call
inc
or
cltd
adc
ljmp
shll
xor
xchg
int3
arpl
lcall
andl
mov
incl
cltd
dec
push
loopne
xchg
mov
xor
mov
lock
xor
test
call
pop
sub
inc
notb
sub
sub
call
hlt
and
insl
hlt
sub
aaa
adc
jbe
push
in
call
cmp
clc
cltd
jae
sarb
dec
cmp
push
mov
hlt
adc
cmp
cmp
jae
jnp
inc
fildll
and
mov
popa
repnz
jmp
lods
shlb
lcall
int
cs
sub
adc
and
mov
sbb
loop
xor
shlb
dec
jecxz
sbb
test
insb
clc
adcb
mov
test
lds
cmp
adc
test
fadd
frstor
pop
and
subb
frndint
les
std
ljmp
pusha
push
dec
fwait
cmp
push
mov
push
xor
or
adc
icebp
add
inc
add
dec
ret
add
and
xor
bound
rcl
pushl
or
lods
mov
and
ss
das
xchg
icebp
jmp
adc
sahf
es
addl
in
mov
pop
dec
jmp
mov
push
dec
jmp
inc
call
subb
dec
and
push
mov
cmpl
cmp
cltd
repnz
das
jp
cs
stos
dec
cmc
mov
inc
pushf
push
mov
lcall
pop
call
test
je
test
jb
imul
imul
imul
jmp
and
mov
mov
or
mov
in
fs
rorl
call
sub
sub
nop
scas
ljmp
lcall
pop
add
in
add
mov
sbb
pusha
push
mov
mov
lods
dec
or
mov
sbb
fsubr
cmp
ljmp
dec
out
nop
test
adcl
insl
pop
std
decl
es
dec
adc
decl
pop
push
les
lock
add
pushl
scas
mov
or
and
push
mov
and
icebp
sar
mov
enter
sti
ljmp
pop
pop
mov
or
test
ljmp
mov
or
jae
frstor
add
or
add
sub
mov
dec
adc
sbb
add
push
cmp
adc
xorb
push
clc
into
cmpb
dec
jl
or
lock
jecxz
adc
das
dec
verr
shr
imul
mov
adc
sbb
pop
xor
mov
pop
and
pop
test
xchg
gs
call
sarb
push
outsb
push
jno
adc
dec
xchg
das
mov
lret
jl
xor
inc
push
cmpsb
push
add
stc
mov
mov
ret
xchg
movsb
popa
add
movsb
stos
test
jo
or
fs
cmpsb
scas
mov
adc
mov
jle
stc
stos
and
incl
inc
cld
and
mov
mov
test
gs
outsb
enter
test
mov
inc
pop
xchg
or
xchg
cmp
movsl
daa
mov
jmp
add
jle
enter
adc
scas
dec
mov
mov
pop
pop
leave
stos
mov
aam
sbb
ret
scas
pop
sub
dec
outsb
jo
sbb
add
addr16
jecxz
call
movsb
mov
or
inc
clc
or
rorb
add
cmp
dec
mov
pop
push
int3
add
pop
loop
or
or
dec
outsb
push
lahf
dec
xchg
repnz
pop
cltd
sahf
adc
loope
adc
sbb
or
lcall
mov
not
ds
cmp
movsl
call
jg
cltd
mov
test
jp
faddp
stc
sbb
decl
sub
ret
sbb
fstl
cmp
push
adc
lds
in
mov
aad
push
mov
out
xor
imul
add
pop
mov
lea
jmp
pushl
pop
jge
mov
xchg
mov
lods
push
or
loop
pop
or
sub
sar
call
insl
jbe
mov
mov
push
push
dec
aad
xchg
mov
mov
rcll
push
inc
shrb
cmp
addb
call
ret
pcmpgtb
mov
test
cmp
ret
add
sub
mov
jo
stc
leave
jecxz
cmpsl
cwtl
pop
sbb
stc
call
aam
or
cmp
adc
dec
imul
aad
and
and
mov
je
je
in
cmp
lcall
jmp
sbb
int3
adcb
adc
cmpl
std
mov
cmp
mov
adc
push
dec
sub
adc
out
ja
lds
fmull
inc
enter
imull
movsb
clc
out
xchg
call
mov
dec
clc
fucomp
mov
sbb
pusha
xchg
and
add
out
ret
movsb
ljmp
jnp
add
imul
ljmp
decl
imul
adc
jne
sub
inc
add
lcall
and
push
out
sub
push
ret
push
popa
or
test
push
jb
push
jp
adc
mov
lods
addl
add
daa
or
pusha
test
or
add
jno
les
dec
hlt
and
dec
ljmp
or
iret
dec
les
xor
xor
or
loop
enter
or
jmp
dec
nop
push
pop
push
lods
jg
or
cld
ret
sub
sahf
ret
nop
mov
jmp
push
ljmp
pop
cld
int3
xchg
inc
dec
scas
and
adcl
inc
lods
and
jmp
push
xchg
inc
shll
and
bound
or
xchg
dec
cmpsl
adc
decl
xchg
and
cmpsb
adc
adc
adc
inc
test
or
pushf
jecxz
incl
aaa
cli
test
or
addr16
addl
push
push
leave
loopne
and
ljmp
xchg
mov
sbb
mov
inc
imul
or
jg
dec
jle
call
enter
out
xchg
mov
add
sub
ret
xchg
pop
mov
repnz
add
aam
rcrb
clc
fcomip
mov
sub
cs
lret
sbb
popf
add
xchg
popa
sbb
mov
jmp
sbb
out
sub
push
jp
loope
lcall
dec
roll
adc
mov
and
mov
adc
dec
decl
push
popa
push
mov
or
push
sbb
sub
xor
mov
mov
xor
cmpsl
jmp
mov
xor
jmp
dec
push
mov
hlt
cli
sub
dec
shll
or
loopne
repnz
sbb
fs
jb
js
call
mov
dec
inc
pop
inc
cmpsb
adc
bound
loop
sahf
loope
fsubrs
incb
mov
scas
and
decl
js
sub
lock
or
xor
faddl
push
pusha
lds
cmp
lods
or
pop
hlt
xor
mov
or
loopne
and
dec
inc
push
data16
cmp
jo
call
aam
fdivrs
mov
rorb
mov
or
sahf
arpl
leave
cmp
mov
test
ret
push
daa
push
mov
insb
jb
xchg
subb
test
dec
sbb
xchg
mov
xor
mov
mov
and
push
shrl
es
rolb
dec
cmp
add
cwtl
sub
sbb
sbb
mov
xor
dec
cmp
adc
stos
pushf
dec
shll
clc
pushl
cld
mov
and
imul
mov
sahf
and
data16
test
lcall
adcb
inc
cmp
add
mov
jbe
sub
mov
or
and
loop
or
mov
xchg
inc
add
jle
jp
ljmp
xor
gs
into
enter
xor
xor
orb
out
push
sub
adc
inc
xor
mov
jo
adc
mov
sub
test
popa
cmp
jg
and
xchg
mul
aam
cli
call
mov
inc
mov
pop
mov
fildll
jno
loop
sub
into
ljmp
roll
outsl
cmpsl
dec
popf
add
bound
ljmp
adc
sub
and
push
movsl
lods
es
in
mov
aaa
nop
icebp
aaa
insb
xchg
pop
dec
aaa
cwtl
mov
xchg
icebp
mov
int
xor
clc
inc
imul
lcall
shlb
add
sbb
fisttpll
loopne
in
loopne
mov
mov
push
mov
ds
je
std
scas
imul
jo
sbb
or
call
jno
aad
insb
shll
sti
fcomip
sbb
mov
sbb
xor
or
add
shlb
jg
pop
lds
mov
popf
bound
adc
dec
data16
add
loop
dec
sahf
add
testb
cld
incl
inc
or
inc
lret
insb
dec
sub
jg
sub
hlt
gs
loopne
mov
xor
mov
pop
call
addr16
jnp
push
mov
push
and
mov
enter
dec
xor
adc
dec
pusha
cmp
bound
jg
xchg
movsb
xchg
pop
insb
imul
daa
nop
test
hlt
inc
fcoml
int
or
outsb
jno
or
pop
fs
mov
sub
adc
rorb
pop
arpl
or
mov
in
lret
cli
mov
aaa
stos
orb
enter
outsb
cld
jg
push
aaa
inc
jb
sub
xchg
adc
mov
xchg
inc
xchg
in
ret
jg
rolb
test
sub
icebp
dec
aas
jb
out
sub
xchg
inc
sbb
subb
aam
cld
cmp
ljmp
cmpsb
cmp
lret
and
out
enter
xchg
add
out
push
std
jmp
jb
cwtl
push
scas
dec
div
fsubr
jmp
roll
pop
hlt
push
pop
dec
xchg
outsb
xor
adc
and
popa
adc
sarl
cli
incl
inc
and
dec
into
arpl
rol
minps
lods
ret
add
cmp
incb
roll
mov
and
stos
ret
inc
push
xchg
inc
mov
or
js
mov
adc
je
insb
mov
addr16
push
ljmp
push
std
lock
fmull
mov
push
jecxz
div
out
out
int3
mov
adc
inc
or
das
hlt
hlt
lcall
and
xor
xor
push
sub
push
insl
mov
loop
decl
push
mov
pop
sub
stos
fcomip
movsb
in
bound
test
test
test
xor
jg
pushl
pop
shr
pop
ljmp
aam
pusha
lock
in
adc
nop
mov
ljmp
dec
adc
lcall
sbb
mov
aaa
bound
fidivl
or
hlt
addl
mov
cmp
mov
mov
leave
ffree
push
mov
call
cmp
fdivrp
fcom
push
es
jne
daa
test
push
cmp
jne
out
int
or
sub
xchg
mov
add
lcall
adc
mov
dec
inc
es
test
pop
mov
ret
dec
lods
loopne
pushl
pop
adcl
push
and
fwait
pop
inc
ret
stc
sahf
shlb
and
ljmp
sub
jl
daa
jno
jle
je
fcomps
or
mov
in
and
push
mov
and
daa
fsubs
add
cmpsb
icebp
call
mov
sub
mov
enter
ror
or
add
push
in
sub
push
jns
dec
xchg
call
mov
adc
push
rcrb
sar
lcall
test
cld
push
pop
cld
add
sub
cld
mov
outsl
sub
fs
push
jno
sarb
pop
clc
xchg
or
or
pushl
pop
ds
push
xchg
inc
mov
test
add
pop
clc
stos
pop
dec
stos
rcr
cmpsb
stos
or
scas
push
push
cli
mov
sahf
jbe
xor
or
mov
lods
mov
notl
dec
call
and
cmp
data16
inc
mov
cmp
cwtl
aad
xchg
sar
rcll
lods
pop
pop
scas
fmull
outsb
mov
call
ss
cwtl
cmpsb
aas
mov
add
fstl
xchg
xchg
xchg
xor
fdivrl
fsubrl
nop
es
inc
daa
std
and
xchg
mov
stc
stos
or
and
ljmp
imul
dec
and
fdivrl
daa
cmc
mov
outsl
decl
ficomps
sahf
pop
push
and
cmp
test
call
push
fisttps
adcl
das
clc
call
nop
test
add
or
jp
jbe
inc
inc
or
push
xor
jmp
xor
sbb
sub
movsb
insl
push
hlt
repnz
int
sti
fmuls
outsl
pop
aam
rclb
movsb
inc
test
mov
cmpsb
clc
lods
andl
lea
notl
jmp
inc
stos
cmp
cmc
lret
in
pop
add
incl
icebp
mov
xor
pop
hlt
push
or
mov
das
aaa
or
popf
ds
pop
xchg
jb
xor
fcomip
mov
scas
mov
test
out
inc
jp
jne
rcr
enter
push
mov
decb
stc
jo
xor
xchg
jmp
aaa
add
push
xor
push
push
add
cmp
orb
pop
pop
fldenv
push
inc
incl
xor
mov
inc
xchg
add
stos
mov
dec
jecxz
mov
or
fmuls
mov
mov
cmp
ja
push
sbb
cmp
mov
add
mov
shll
sbb
push
adc
and
das
std
aam
fst
and
fs
imul
inc
or
mov
or
gs
sbb
jne
cltd
orw
stos
push
fcoml
add
pushl
or
sub
sbb
mov
cltd
adc
int3
enter
cs
sbb
xor
fmuls
mov
jle
cmpsl
mov
mov
pusha
clc
jmp
out
test
popl
xor
out
inc
scas
adc
inc
push
pop
arpl
in
cmp
outsl
pop
loop
lods
jle
push
hlt
inc
les
xor
repnz
sbb
or
rcll
mov
jecxz
ljmp
cmp
movsb
rcr
jp
decl
mov
mov
es
arpl
aam
out
aam
in
cmpb
movsl
pop
pop
lcall
scas
stc
clc
dec
sbb
lcall
nop
test
lret
rcll
imul
pop
sbb
cmp
mov
dec
xchg
cmp
mov
mov
mov
mov
xchg
xchg
cmpsb
jne
or
pushl
dec
sbb
std
mov
fistpll
mov
jp
movb
jg
or
out
decb
and
inc
or
aas
pop
in
push
movsb
icebp
stc
repz
decl
adc
icebp
xchg
lock
filds
dec
fs
add
cmp
inc
or
dec
inc
cmpsl
xor
lock
lock
add
lods
sti
mov
push
pop
add
lods
inc
xor
and
mov
cmp
push
adc
pushl
push
pushf
rclb
xor
into
mov
jmp
call
pop
add
inc
pop
push
aad
mov
xor
dec
pop
loop
push
outsl
adc
jno
ljmp
aas
movsl
loopne
mov
sahf
fistpll
aad
or
ror
std
sbb
push
in
cli
jno
stc
ret
and
or
and
pushl
adc
adc
in
inc
ret
xchg
adc
xchg
inc
inc
mov
pusha
decl
and
xchg
loop
fs
das
pusha
mov
in
pop
push
dec
or
xor
xchg
pop
addr16
leave
adc
sub
mov
inc
sar
mov
pusha
nop
xchg
iret
or
inc
mov
dec
add
pushl
rclb
jbe
mov
pop
mov
in
mov
imul
les
mov
loope
pop
mov
popa
push
xchg
loope
lcall
in
ret
nop
and
cmpsb
arpl
loope
cs
inc
dec
push
out
decl
and
inc
cmpsl
inc
in
sub
push
rcl
insb
sbb
mov
jns
das
testb
lahf
outsb
jl
outsl
push
jp
rol
aad
outsb
in
mov
incl
push
jl
in
pop
mov
mov
and
dec
or
xlat
push
enter
aaa
xchg
int3
cmp
insb
mov
ud0
and
cwtl
xor
in
adc
out
pop
cmp
sub
lahf
jle
into
icebp
mov
sarb
cwtl
dec
fildll
dec
fistpl
fildll
xchg
push
add
adc
popa
inc
sbb
cs
inc
xchg
mov
mov
mov
test
pusha
adc
xchg
push
call
fisubl
or
add
push
pop
adc
int
test
add
test
dec
aaa
pop
push
and
dec
push
pop
fwait
jns
adc
popf
sbb
xor
imul
jl
jbe
lcall
add
xchg
mov
sub
fcompl
jg
fcomip
jns
mov
inc
adc
incl
add
push
and
inc
adc
ljmp
push
pop
nop
inc
cmpb
daa
inc
push
inc
movsl
adc
jns
cmpsb
push
adc
decl
hlt
hlt
adc
std
jo
aas
in
hlt
adc
movsl
mov
jecxz
or
dec
mov
lret
mov
xor
les
xor
pop
xchg
dec
and
adc
mov
test
sbbb
pop
insb
cmpsb
lds
rolb
push
or
add
clc
mov
lret
cmc
lods
pop
pop
jmp
ljmp
lcall
push
insb
jge
pop
scas
decl
cwtl
bound
nop
std
pop
push
imul
decl
test
cmc
pop
push
out
pop
mov
jp
xchg
fldenv
jbe
popa
xchg
jmp
push
cwtl
popa
jne
rcll
aad
fsubl
imul
jmp
xchg
inc
inc
sub
lods
push
xor
pushl
je
mov
xorl
and
mov
mov
jno
iret
nop
jmp
pop
xchg
scas
jmp
cmp
xchg
dec
cld
ds
adc
je
std
xor
test
icebp
ljmp
clc
cmpsb
pop
push
push
sbb
loope
and
loope
insl
xchg
inc
mov
bound
cld
jg
shl
lea
or
adc
jg
xchg
cmc
cmp
mov
and
data16
pinsrw
std
mov
ss
out
aas
or
sbb
jg
ficompl
dec
aam
movsb
dec
mov
mov
add
sub
cld
stos
push
xor
or
jns
adc
xchg
add
es
decl
fstl
shrb
or
lods
push
sbb
fdivl
fstps
add
cmpsl
fwait
pushl
lret
sti
aam
lods
jp
pop
sbb
enter
dec
in
shl
pushl
xor
inc
inc
pop
pusha
add
inc
sbb
adc
sub
loop
and
dec
cs
gs
pop
inc
ds
push
pushf
push
fiaddl
cmp
pop
lock
hlt
sub
arpl
push
jnp
sbb
mov
sbb
imul
xor
cmp
pop
ljmp
es
dec
inc
cmpb
loopne
pop
cmp
jae
mov
jb
xchg
lcall
cmp
mov
inc
or
ljmp
ret
inc
enter
sti
jb
dec
or
fs
cmp
jb
repz
sub
call
cmp
mov
in
inc
adc
data16
fwait
aaa
xchg
rorl
sub
push
jge
sti
orb
clc
incl
adc
adc
mov
pop
add
or
fisubs
cmp
decl
pusha
dec
cmp
or
mov
cmp
pop
jo
std
ljmp
pop
xor
and
loop
out
jl
cmp
int3
mov
jmp
push
daa
mov
dec
dec
mov
pusha
inc
fcoms
daa
loope
pop
cmp
decl
lods
dec
hlt
mov
mov
sbb
imull
lcall
fldcw
icebp
inc
pop
cli
xlat
push
popf
adc
add
loopne
mov
decl
cmp
inc
shll
or
repnz
popa
add
pop
mov
xlat
mov
adc
shlb
sbb
mov
insb
adc
mov
xchg
sbb
push
loope
sub
and
arpl
cmpsb
les
pushl
pop
dec
shll
cmp
xor
xchg
push
xor
inc
dec
lea
ret
test
lcall
fs
push
xchg
cwtl
adc
xchg
mov
ja
xchg
clc
dec
addr16
mov
scas
push
cmpsb
movsl
jne
jecxz
shlb
inc
sbb
or
lock
enter
loop
pushl
mov
and
or
or
daa
add
sub
das
cli
mov
add
lds
and
mov
add
enter
filds
mov
mov
ja
outsl
mov
lcall
enter
inc
dec
dec
pushf
mov
mov
mov
sbbb
lods
call
fildll
mov
mov
lret
dec
mov
sub
notb
mov
xchg
inc
mov
cli
in
outsb
js
shrl
mov
xchg
push
mov
jmp
pop
stc
mov
loopne
and
pop
ds
adc
sub
lret
xchg
mov
sub
out
jp
data16
xchg
es
xor
mov
scas
and
loope
push
add
jg
inc
push
int3
out
je
lea
dec
or
sub
fstpt
mov
mov
pop
cmp
lcall
cmp
pop
dec
inc
pop
addr16
pop
xchg
sub
data16
decl
pop
insb
das
pop
shlb
ljmp
adc
pushf
out
dec
cmp
cmp
cmc
push
std
das
mov
xchg
sub
mov
inc
xor
das
sub
lcall
fwait
mov
pop
fwait
ljmp
mov
or
call
icebp
or
mov
xchg
mov
lock
popf
push
sbb
pop
stos
or
decl
sub
jle
sbb
jne
add
jle
fwait
xchg
incl
leave
mov
pushl
add
cmp
or
jne
push
and
or
push
or
sub
mov
movd
jle
dec
pushl
and
push
decl
scas
fstpl
in
aaa
mov
ljmp
stos
xchg
and
add
mov
lret
jl
sub
jle
add
sbbl
cmp
out
dec
inc
fidivl
ds
ljmp
mov
dec
mov
xchg
mov
xor
mov
mov
mov
cld
in
and
xor
sar
ljmp
les
or
cltd
cltd
adc
add
ret
cwtl
cmpsl
arpl
jae
mov
and
std
xchg
es
push
mov
popa
cmp
mov
jl
test
jmp
lcall
cs
xor
outsl
push
sbb
dec
adc
sbb
cmc
jmp
sub
xchg
enter
add
movsb
decl
push
sub
xchg
add
xor
or
cmpsb
ss
push
mov
sarb
dec
cmp
xchg
clc
flds
icebp
mov
insl
ljmp
es
fisttps
or
push
jae
dec
iret
cld
out
aaa
call
cmpsl
xchg
cmpsb
jno
insl
aad
pop
repnz
cs
in
mov
push
icebp
fwait
cmp
cmpsb
js
outsb
jmp
and
mov
lcall
sti
xor
aam
scas
cmp
cld
cmc
xor
xor
mov
and
mov
sbb
call
call
sub
mov
adc
ja
sub
adc
mov
inc
adc
bound
add
push
xor
jb
stos
push
cld
sbb
mulb
ret
sbb
mov
das
inc
es
in
mov
call
inc
cmp
push
icebp
inc
jae
inc
inc
dec
mov
pop
test
jo
fs
pop
pop
out
je
decl
add
jecxz
xchg
gs
and
shll
clc
gs
pop
adc
test
out
loopne
pushl
arpl
and
and
jl
aaa
es
orb
push
pop
sbb
jmp
add
inc
cmp
jle
ja
jb
xchg
inc
jnp
jno
rol
cmp
in
movsl
pop
enter
call
fists
fwait
and
scas
aaa
dec
jecxz
xchg
dec
fidivl
and
aad
fiadds
aas
mov
jne
xchg
dec
pushf
xchg
imul
outsb
testl
push
ljmp
jge
daa
mov
xchg
test
pop
shlb
pop
fnstenv
and
in
inc
jge
xlat
pop
fisttpll
dec
fdivrp
incl
dec
out
xlat
jb
pop
sarl
push
push
adc
loop
decl
outsl
adc
call
das
cmp
inc
clc
out
push
push
and
mov
xor
jno
cmp
sbb
push
decl
inc
sub
inc
or
sbb
jo
cwtl
adcl
cmp
inc
fs
jecxz
jl
enter
push
pop
or
pop
xor
movsb
jae
arpl
mov
data16
push
aas
xchg
add
mov
call
add
cmpl
pop
loopne
das
inc
sbb
icebp
popa
jle
and
jbe
adc
mov
ja
arpl
pop
clc
jbe
bound
add
xchg
popa
mov
aam
dec
rcl
pop
test
cmp
je
add
pop
mov
mov
call
pop
mov
jnp
loope
mov
xchg
mov
dec
in
outsb
ja
jnp
call
std
xchg
addr16
mov
pop
add
lret
movsl
adc
push
mov
xchg
inc
test
dec
orb
mov
xorb
pop
mov
xchg
sub
fcompl
adc
mov
outsl
clc
pushl
xchg
mov
dec
sahf
and
mov
sub
pushl
push
mov
push
loope
adc
xchg
jle
mov
cmpsb
mov
inc
add
xor
clc
lcall
sbb
sub
bound
xchg
sbb
lcall
xchg
add
pop
jbe
sbb
sbb
or
ljmp
cmpl
das
inc
xchg
fs
xor
addr16
cwtl
jo
fcmovnu
cmc
dec
jne
jo
add
test
nop
sbb
and
inc
push
xchg
fs
pop
sbb
xchg
and
sub
filds
sbb
rcrb
push
test
inc
push
popa
xchg
push
inc
pop
ja
fildl
add
mov
data16
push
jmp
jmp
jbe
add
add
outsl
shll
and
stos
js
cmp
jl
sub
and
fmuls
push
add
jmp
js
push
jge
out
xor
decl
out
lahf
mov
mov
mov
data16
adcb
push
repz
lret
pop
insb
int3
xchg
movsb
int3
mov
lret
mov
mov
pop
orb
divb
in
ljmp
movsb
sub
in
cmp
adc
push
decl
mov
pop
mov
sub
popf
add
mov
popf
jne
arpl
jmp
mov
and
inc
adc
shrl
add
mov
xchg
outsl
incl
jbe
sbb
pop
data16
sbb
mov
sbb
mov
cmpb
xor
out
es
test
xchg
addr16
adc
xor
fwait
pusha
inc
dec
xor
aas
test
xchg
push
cli
jb
daa
or
popa
or
fildl
leave
clc
add
das
jne
xchg
xor
add
mov
xchg
cmp
flds
dec
push
fdivl
sbb
lea
mov
adc
adc
sub
and
xchg
and
mov
clc
xchg
mov
xchg
and
xchg
adc
stos
xchg
sbb
testl
dec
insb
pop
aas
lcall
pop
int
jbe
and
xchg
xor
pop
push
xchg
les
jnp
data16
arpl
es
insb
xchg
daa
inc
std
jmp
jge
cmpsb
movsl
push
lret
dec
xor
jnp,pt
mov
mov
aaa
mov
ficomps
ret
push
sub
cltd
cmp
popf
loop
movsl
add
test
push
cmp
loop
cli
xor
fwait
aad
adc
push
outsl
cli
mov
sub
add
outsl
or
jmp
fwait
sbb
lea
pop
pop
ret
jg
pop
notl
push
cmp
sub
ret
pop
pushf
xor
jno
cmp
xor
lret
subl
aaa
xchg
fs
jmp
mov
sahf
stos
arpl
aad
ds
adc
push
mov
xor
xor
das
pop
mov
cmp
je
test
mov
data16
jb
dec
cmp
pushl
xchg
mov
xor
xchg
xor
dec
mov
jg
ss
test
lock
adc
xchg
push
aaa
xor
dec
daa
jb
mov
mov
xchg
sub
jge
pop
and
push
and
dec
fdivl
cld
cmp
dec
cmpsl
ret
in
sub
notl
ss
xor
js
js
jnp
outsb
fwait
mov
dec
mov
dec
pop
insb
lods
fdivrs
sbb
add
test
sbb
movsl
faddp
movsb
push
sub
mov
mov
cmpsl
pop
sub
mov
adc
pushl
dec
inc
sub
jb
imul
shrb
mov
cmp
fcomip
cmp
addr16
stc
cltd
inc
xchg
mov
bound
mov
cs
fimull
sbb
nop
or
push
test
xchg
test
fisubrl
cmp
fidivl
push
push
and
adc
testb
add
ljmp
call
out
jne
adc
sbb
jne
popa
jb
cmc
lcall
arpl
notl
ds
stos
adc
xor
stc
xor
inc
es
lcall
mov
jne
xor
popa
inc
jmp
das
test
and
aaa
adc
add
jne
push
popa
cld
pop
loop
ja
mov
pop
shlb
repnz
sar
decl
jbe
shll
es
and
idiv
jmp
mov
loopne
and
push
add
popl
push
insb
mov
cmpsl
rcl
mov
call
imul
sbb
xchg
push
mov
sarb
pusha
jg
sub
imul
cs
aam
insb
mov
dec
ljmp
movsb
push
or
xchg
lahf
insb
jmp
pop
ds
inc
jno
aad
call
mov
hlt
cltd
sahf
leave
pop
fstps
lret
mov
cwtl
cmp
sbb
sub
arpl
add
jl
push
das
ret
loope
scas
test
hlt
or
pushl
sbb
push
push
outsl
jecxz
push
jo
jno
jne
inc
mov
outsl
sub
outsb
int3
mov
jno
scas
jp
std
decl
xchg
push
cli
popa
gs
xor
arpl
jae
sbb
andl
test
decl
insl
sahf
xrelease
int3
nop
pop
bound
mov
add
das
push
gs
inc
xor
decl
jb
out
dec
add
jo
sbb
push
xor
das
adc
push
jg
aaa
inc
or
das
bound
jg
lods
sbb
pop
pop
dec
push
call
jae
dec
jo
jbe
pusha
add
es
and
jg
mov
jo
mov
fcoms
mov
and
mov
mov
cmp
dec
imul
push
fcmovu
test
dec
ljmp
jge
negl
std
incl
cmp
cmpl
cmp
or
pushf
jbe
ljmp
xchg
mov
popa
cltd
shlb
and
inc
fwait
shlb
mov
mov
iret
lahf
jns
ret
aad
pop
add
ret
pop
loope
filds
out
in
mov
adc
mov
scas
cmc
mov
decl
dec
ss
addl
rcr
pusha
pop
ljmp
outsl
xchg
ljmp
jg
pushl
icebp
sbb
pop
xlat
jbe
push
daa
jbe
das
push
subl
mov
sub
mov
out
add
or
or
sbb
stos
rcll
jmp
push
aaa
or
jae
add
sbb
lahf
popl
sub
ljmp
shlb
pop
popa
sub
ds
and
adc
popa
ds
out
ss
mov
addr16
jl
ret
xlat
or
test
scas
push
and
inc
push
cmp
mov
or
incl
sti
leave
or
push
adc
push
dec
jbe
add
cmp
adc
push
iret
pop
cltd
jp
decl
leave
adc
gs
test
lret
insb
dec
loop
xchg
sub
dec
shl
pop
fcom
xchg
aad
pop
inc
inc
call
mov
xchg
cmp
repnz
dec
sbb
out
mov
fisttpl
dec
fcomip
shl
dec
sbb
ss
dec
sub
mov
shlb
mov
sahf
pushl
rorl
cmp
lahf
fs
add
cld
inc
insl
dec
mov
lcall
jmp
sarl
es
scas
jns
inc
pusha
jo,pn
and
xchg
push
adc
into
loope
incl
shlb
mov
fdivr
mov
enter
mov
arpl
popf
push
adc
arpl
addr16
js
push
clc
stc
mov
std
mov
add
mov
cwtl
pushf
jne
or
cmpl
loope
mov
xchg
push
and
fisttps
jp
loope
adc
in
jmp
addl
pushl
leave
outsl
jge
xor
sbb
ljmp
in
mov
std
push
push
clc
dec
test
pop
lock
jb
repz
lret
cmp
lret
push
loopne
outsl
mov
add
ja
mov
xchg
inc
push
loopne
and
incl
rorb
xchg
les
decb
cmp
fdivl
inc
sub
sahf
insl
rclb
jmp
inc
push
mov
in
adc
xor
mov
cmp
xor
xor
lcall
push
dec
dec
sub
cmp
in
mov
xchg
xor
jmp
and
lcall
adc
adc
fidivs
jl
xorb
adc
cltd
dec
rol
data16
add
mov
mov
add
addb
inc
out
pop
inc
in
add
sub
add
lcall
ret
or
inc
jo
mov
ljmp
xor
das
sbb
bound
ja
scas
mov
lods
or
outsl
sbb
bound
cs
lock
inc
js
ja
es
ss
cli
ljmp
jne
jo
or
sbb
addr16
sbb
outsl
mov
int
aaa
cld
dec
inc
cmc
dec
je
cmpsb
jge
inc
sub
push
iret
call
insl
sub
decl
adc
dec
push
orl
cwtl
inc
inc
mov
jg
mov
inc
mov
in
fs
push
pop
sub
push
cmpsb
dec
test
decl
gs
lods
imul
enter
es
lea
xor
insb
out
jmp
and
mov
test
fwait
jecxz
mov
push
aam
mov
dec
adc
adc
ret
xchg
gs
mov
inc
mov
lock
jle
insl
fnstenv
pop
and
fsubl
mov
and
in
xorb
stos
add
fsubr
ror
xchg
xchg
lcall
cltd
xor
cmpsb
mov
fidivs
cld
mov
in
push
pop
sub
aad
mov
push
sbb
scas
xchg
cvtps2pi
lds
nop
and
fsubp
notl
or
outsl
rorb
pop
aaa
ds
inc
mov
or
cld
lods
faddp
lods
dec
mov
add
adc
lds
loopne
dec
fisttps
std
sbb
stos
iret
mov
std
mov
xchg
add
sub
and
call
dec
inc
test
or
cmp
push
mov
std
sub
inc
cmp
pop
sub
ret
shlb
xor
lds
lds
test
push
sub
push
or
push
xor
add
jg
cli
mov
dec
mov
and
les
pop
mov
inc
incl
outsl
call
sub
ret
cmp
test
inc
or
mov
ljmp
and
cmp
mov
jo
test
and
das
jle
adc
sbb
inc
es
jmp
add
jo
repz
insb
cld
cmpsl
lcall
lcall
jmp
sub
add
xor
push
add
pushl
cli
inc
dec
jae
xor
or
pop
in
bswap
outsb
in
pushl
mov
cmp
mov
sub
push
mov
lcall
inc
repnz
lods
scas
repnz
mov
ret
lods
mov
icebp
stos
adc
les
js
pop
or
dec
in
mov
shlb
movsl
dec
jg
dec
cld
pop
hlt
aam
aaa
ffreep
divb
scas
ljmp
mov
jb
js,pn
dec
pusha
repnz
sub
mov
loop
adc
inc
jmp
cmp
mov
ret
int3
aam
lgs
fbld
loope
stc
sub
rol
cli
jbe
scas
addr16
jge
iret
inc
or
pop
call
or
pusha
or
xor
dec
rcr
sahf
jecxz
adc
adc
ljmp
rol
call
and
xchg
aam
and
push
into
push
add
cmp
push
xor
mov
xchg
inc
shlb
mov
pop
ljmp
sub
int
pop
insb
jmp
mov
mov
sub
stos
mov
adc
std
lcall
mov
adc
iret
shll
outsb
daa
lds
in
mov
shrl
jae
decl
fdivl
pop
pop
pushf
or
inc
pop
in
lret
rcl
jg
sub
fidivrl
adc
push
mov
cmc
stc
in
outsl
clc
bound
call
add
int
push
loopne
add
add
mov
jbe
xor
fdivs
out
cli
jmp
aas
loope
xlat
or
jb
lret
lahf
in
jmp
fnstcw
ljmp
mov
call
sbb
xor
xchg
add
inc
xor
sarb
std
lret
pusha
mov
lcall
imul
pushl
sarl
sub
mov
pop
push
add
and
and
adc
and
ljmp
ret
orl
or
dec
ljmp
inc
push
into
clc
jmp
jge
and
cwtl
xchg
jbe
fcompl
xchg
push
cmp
call
sbb
xor
mov
rcl
ljmp
dec
cmp
inc
cli
jmp
roll
dec
sbb
push
fmuls
mov
inc
jb
mov
addb
rcr
js
dec
and
decl
lahf
movsb
cmpsl
xor
push
mov
or
rcll
loopne
xlat
dec
adc
jmp
xorb
fldcw
mov
sub
cmp
lock
xchg
xchg
std
mov
lcall
pop
or
lcall
adc
jge
add
push
jne
push
rol
movsb
dec
pop
mov
add
out
jbe
mov
dec
lods
clc
rolb
pop
in
dec
push
js
stos
stos
add
out
rcrb
xchg
pop
and
mov
sub
test
mov
aam
push
pushl
mov
gs
mov
push
sub
bound
out
test
fwait
jecxz
dec
xor
pushl
aam
popa
hlt
adcb
data16
mov
sarl
push
pop
add
ja
cmpsl
pop
fwait
icebp
or
sbb
xchg
call
xchg
std
cwtl
push
xor
fwait
cmpsb
mov
dec
int3
inc
xchg
sarb
mov
das
or
repnz
inc
popf
mov
jecxz
jb
xor
loope
mov
xchg
sub
xor
adc
incl
xchg
add
in
bound
xchg
mov
ret
cmp
xlat
add
adc
jmp
rcrb
nop
and
inc
jmp
push
jmp
mov
mov
inc
dec
pop
inc
movsb
push
rclb
or
stos
or
cli
sbb
push
pop
pop
inc
push
daa
incl
mov
test
xor
fadd
test
sahf
aam
loope
int3
sbb
outsb
jae
mov
sub
inc
test
lods
lcall
movsl
daa
xchg
call
xchg
sub
add
imul
mov
dec
xchg
jb
mov
pop
pushl
or
xchg
sub
dec
lret
pop
pop
push
or
adc
icebp
jno
jl
jno
pop
ds
outsl
push
sub
fisubrs
jle
loope
ljmp
jge
clc
sub
jnp
jb
iret
and
adc
sbb
or
dec
bound
jae
jmp
adc
pop
ljmp
mov
add
pushl
pop
dec
ret
iret
shrb
inc
xor
or
cmp
xchg
jmp
or
jnp
je
or
out
mull
loop
or
dec
cmp
into
fs
add
jb
stos
inc
xlat
inc
in
lds
and
push
and
and
mov
movb
or
mov
js
add
or
adc
stos
sbbl
adc
mov
dec
nop
rcll
mov
aam
mov
addb
in
xlat
adc
push
mov
mov
cmp
lcall
fstp
push
sarb
xchg
mov
fwait
in
mov
insl
jo
dec
lods
fildll
xchg
add
cmc
pop
jae
incl
sbb
test
sub
enter
call
fs
enter
addr16
ljmp
cmp
sbb
or
aam
pushf
cltd
andb
push
or
sbb
call
and
adc
push
jns
push
or
neg
mov
push
fcoml
push
rcl
je
enter
jg
negb
xor
push
negl
shll
or
dec
adc
jmp
inc
pop
jmp
or
popf
push
xchg
pop
stos
movl
pushf
mov
lcall
out
das
push
xor
aad
mov
gs
jae
mov
lock
mov
das
lcall
xchg
out
or
pop
push
push
test
jg
jmp
loop
mov
leave
call
decl
mov
adc
inc
call
sub
mov
js
xchg
cs
add
ret
mov
incl
add
mulb
xor
in
add
sahf
cmp
lds
jg
lods
mov
movb
aam
inc
adc
sarb
fidivs
decl
or
and
sbb
mov
mov
in
lcall
inc
sub
inc
xorb
cmp
sbb
add
or
mov
je
or
fs
push
outsl
pop
pop
pop
pop
test
nop
lock
cmp
fdivrl
push
xchg
and
cli
mov
outsb
push
xchg
bound
in
dec
out
pop
cwtl
inc
mov
lods
scas
stc
lods
pop
push
in
test
mov
xor
cmpsl
fcomip
cmp
into
cmp
mov
or
inc
cwtl
xorb
into
popa
lret
mov
mov
test
jns
mov
cwtl
sub
push
xchg
pop
sub
ljmp
add
xor
mov
cltd
jp
or
or
std
push
jbe
cltd
lahf
mov
pop
orb
dec
cmpsb
jnp
jl
cmp
and
cmpsl
icebp
stos
aaa
stos
js
iret
cmp
or
fildll
enter
call
jecxz
and
cmp
cmp
ljmp
mov
xor
and
mov
test
inc
jp
enter
rcrl
das
leave
xor
cmp
jecxz
arpl
decl
inc
imul
into
adcb
mov
fcomps
mov
incl
mov
sub
ret
pushf
pop
inc
xor
sub
aam
ljmp
fwait
adc
rcll
enter
adc
and
addr16
pop
dec
test
or
adc
movsl
dec
dec
cmp
test
pop
cmp
dec
pushf
rolb
fnstcw
jp
les
lds
vmovupd
ljmp
fdiv
mov
into
xchg
jno
movsb
clc
add
and
mov
or
lds
mov
sbb
mov
push
adc
orb
xor
out
cli
jg
addr16
wrmsr
cmc
dec
scas
push
inc
loopne
imul
nop
sbbl
mov
mov
add
mov
cwtl
pushl
pop
sbb
mov
or
adc
add
push
inc
test
mov
and
inc
sbb
sub
sbb
test
mov
in
stos
mov
roll
jge
pop
lahf
rcll
inc
push
jmp
xor
in
and
sub
call
loopne
icebp
sub
mov
cwtl
xlat
push
popl
adc
fbld
or
das
mov
lahf
push
adc
xchg
call
xor
mov
js
scas
fsts
int3
stc
stos
incl
adc
xor
adc
cltd
xchg
xlat
imul
lds
sbb
lods
inc
loopne
cmp
mov
push
jb
mov
mov
stos
or
or
push
mov
push
pop
sbb
mov
jo
pop
xor
popa
or
movsl
adc
xor
dec
pop
add
pushl
lret
jl
fwait
sbb
xchg
cmp
sbb
mov
test
int3
xor
pop
pop
int
adc
mov
xorb
push
mov
cwtl
shrb
xor
mov
fwait
sar
pusha
ljmp
lods
int
and
nop
icebp
mov
add
add
adc
faddp
xor
sbb
push
jb
mov
pop
ljmp
jb
xor
mov
pop
mov
andb
ljmp
test
xor
jl
or
jmp
jnp
jg
lcall
mov
ds
scas
ljmp
mov
dec
dec
xchg
pop
decl
subl
push
ds
sbb
int3
cmp
adc
and
leave
add
andl
dec
sti
sub
loopne
add
mov
orl
cmp
clc
call
es
ret
dec
and
jno
xchg
mov
xorl
push
in
pop
sub
ret
mov
cmp
add
stc
dec
mov
enter
lea
xchg
adc
xchg
xor
into
lret
adc
pop
pop
cmp
adc
lcall
xor
cmp
xchg
dec
jo
loope
lcall
xor
mov
mov
dec
cmpb
or
movsb
xor
ret
fst
mov
dec
or
mov
xchg
jo
mov
or
adc
or
shlb
adc
add
xor
push
dec
mov
call
sub
push
push
mov
push
aad
adc
rolb
sbb
dec
pushl
sub
scas
insl
ret
leave
movsb
aas
cmp
mov
mul
xor
stos
lods
ljmp
jmp
dec
push
mov
add
stc
orb
adc
imul
pushl
insb
or
insb
adc
popa
decl
punpcklbw
loope
negl
call
add
mov
insl
mov
xlat
jne
mov
fcomps
out
mov
clc
or
nop
aam
call
fsts
test
mov
sarb
fdivl
mov
pusha
pop
or
call
mov
pushf
cmp
add
sub
lea
mov
cmp
cmc
jns
daa
add
push
jmp
sbb
or
ljmp
int3
mov
xchg
add
push
sbb
pop
cmp
sub
push
mov
push
std
decl
movsb
mov
icebp
inc
push
mov
call
xor
call
xor
adc
and
sub
outsl
movsb
mov
push
leave
adc
lcall
ret
adc
ljmp
mov
aas
cmc
fisubrl
int
mov
movsb
adc
dec
xchg
cmp
and
lds
cmc
mov
ret
dec
fadd
inc
fmull
in
or
cli
jmp
pop
ds
mov
push
aad
xor
xor
fcomip
jg
pop
push
sub
push
sbb
js
imul
mov
and
xlat
ljmp
xor
insb
mov
jnp
push
rorb
bound
jbe
je,pt
pop
mov
outsl
in
sub
mov
jp
inc
jl
leave
push
pop
jp
mov
sbb
ja
jg
mov
sbb
mov
lock
mov
push
push
ret
pop
fdivr
inc
sub
push
lret
push
add
xchg
loop
mov
stos
xchg
imul
inc
movsl
or
loope
pop
into
lock
xor
or
mov
cmp
sti
add
add
and
push
jb
aam
dec
push
sahf
popa
lret
loope
movsb
fdivr
sbb
repz
mov
cmp
mov
pop
xchg
mov
jb
mov
adc
xor
call
sbb
fs
or
mov
inc
add
sahf
int
mov
inc
cli
pop
pop
cltd
sub
jl
mov
xor
aam
lcall
or
and
push
sbb
inc
int3
add
xchg
mov
inc
mov
mov
popa
inc
leave
rcr
mov
ret
cmp
or
jno
xor
dec
sbb
js
mov
inc
popf
into
mov
cmp
fadd
lods
or
gs
aam
popf
enter
adc
or
mov
lds
pop
push
sub
pop
or
add
sbb
ljmp
inc
pop
movl
push
cld
test
stos
repnz
or
aas
mov
push
repnz
imul
adc
test
or
sbb
insb
insl
or
enter
add
push
sahf
sub
inc
mov
cmc
or
jmp
xchg
aaa
in
pop
fs
mov
jbe
icebp
sub
jmp
mov
js
das
sar
ja
dec
xchg
fsubrs
insb
cmp
add
mov
push
je
inc
loop
pop
nop
insb
out
rorb
push
fstpl
scas
mov
mov
and
movsl
sub
ds
rorb
pop
and
stos
inc
add
dec
incl
push
shr
push
repnz
fists
adc
or
adc
dec
pushf
and
mov
jg
mov
xor
xorl
cmpsb
test
xor
lret
cmp
xchg
roll
ljmp
cmp
mov
int3
cltd
adc
adc
data16
xor
and
ret
sbb
xchg
xor
or
imul
pop
dec
loopne
repnz
int3
cmp
ljmp
jmp
dec
jne
dec
sub
or
pop
adc
pop
pop
inc
sahf
aad
dec
mov
push
pop
shlb
dec
les
cwtl
mov
scas
js
jne
xlat
ficomps
lock
push
gs
ljmp
mov
sbb
fisubs
je
mov
incl
loopne
in
push
in
in
mov
scas
lock
fimull
rol
xlat
hlt
xchg
xlat
and
jb
ds
std
mov
gs
jns
or
push
outsb
sahf
jmp
sbb
xchg
out
jg
out
xor
outsl
add
sbb
lahf
mov
mov
sub
sbb
mov
sbb
shl
lcall
movsb
mov
nop
pcmpeqd
enter
and
nop
out
push
stos
fnstenv
in
ds
call
enter
jb
cmp
adc
pop
cmp
inc
jecxz
jno
xor
push
inc
lods
fdivl
test
fcomip
push
xor
dec
inc
ret
stos
std
ret
enter
xchg
xchg
ret
sarl
jmp
xchg
pushf
inc
cmp
cmp
jecxz
jg
dec
dec
push
mov
orl
mov
imul
imul
inc
call
in
dec
leave
arpl
arpl
or
movsl
mov
mov
pushl
push
jge
xor
or
push
movsl
cmpl
jo
call
gs
inc
or
and
xchg
jecxz
rcr
int
lock
mov
lods
push
jp
fdivs
push
jno
mov
sbb
pop
inc
cmpsl
movsb
mov
incl
fstl
jns
aaa
jns
push
les
xor
gs
aas
push
out
xchg
test
push
push
jbe
dec
fucomip
mov
out
fbstp
cmpsb
and
xchg
or
xchg
out
cmpsb
test
bound
mov
push
rcrb
fidivs
adc
xor
sbb
sti
mov
xor
lcall
call
mov
mov
cmp
pushl
mov
sbb
xchg
leave
ret
inc
test
push
inc
lcall
xchg
lret
cmp
mov
cmp
sbb
xchg
adc
fldenv
and
mov
dec
sbb
pop
adc
shlb
mov
js
in
sbb
mov
pop
xor
xor
rcrl
push
adc
mov
ss
stos
scas
and
nop
add
add
pop
and
stc
andb
and
out
pushf
pop
inc
push
mov
call
adc
xor
inc
outsb
stc
push
movsl
push
xchg
lahf
fmull
mov
inc
or
pop
pop
or
outsl
es
gs
jae
xchg
jmp
push
ret
fs
out
xchg
movsl
mov
push
xlat
push
frstor
xor
mov
xor
add
scas
nop
add
rcrb
in
jae
push
gs
jl
sti
fs
mov
int
hlt
scas
mov
notl
das
fs
push
fdivrl
mov
push
jecxz
inc
ds
andb
jmp
and
cmp
cltd
cmpsb
bound
dec
addr16
mov
sarl
sti
jg
pop
nop
sbb
cmpsl
xor
insl
inc
mov
rolb
add
sbb
push
mov
stos
ret
adc
push
add
imul
ficomps
inc
xor
ror
jbe
mov
fwait
scas
dec
or
inc
imul
push
rcr
fwait
xor
icebp
xor
jo
imul
sbb
ljmp
add
and
test
iret
pop
jle
test
into
mov
xchg
incl
cli
pushf
push
addl
mov
ljmp
nop
pop
repnz
sub
xor
mov
xchg
rcll
dec
xor
mov
xchg
loop
popf
subb
push
lds
add
and
dec
xchg
daa
mov
sub
add
and
push
popa
cwtd
pushf
ss
sbb
call
jns
or
jbe
dec
add
pop
mov
ljmp
leave
dec
xchg
push
xchg
dec
mov
mov
cltd
push
dec
outsb
pop
stc
push
daa
dec
fwait
add
adc
aad
cmpsb
cmp
addl
das
bnd
adc
lret
pop
mov
dec
xchg
loopne
pop
les
push
lock
test
rolb
add
push
call
lcall
out
out
cld
inc
mov
rorl
cmpsb
xchg
pop
or
xor
push
addr16
cld
xor
inc
lock
fcomps
jp
gs
loopne,pn
xchg
cmp
pushl
pop
cmp
push
das
mov
in
fiaddl
out
or
adc
fbld
test
stos
push
and
mov
jmp
fbld
call
hlt
call
inc
ds
call
or
jmp
daa
xchg
and
pop
sahf
sbb
cli
idiv
lcall
mov
rclb
mov
mov
test
mov
mov
sub
call
mov
and
daa
lcall
mov
cld
mov
push
inc
inc
cmp
inc
sbb
loopne
adc
incl
mov
jne
fs
lcall
lret
add
push
scas
mov
in
inc
sub
bound
lcall
ficompl
mov
xchg
lcall
xchg
mov
inc
call
insb
cmp
test
adc
jle
or
or
inc
lcall
pushl
std
adc
test
sbb
popf
sub
add
mov
inc
dec
and
sbb
mov
sbb
pop
ds
sahf
push
or
mov
sarb
push
add
hlt
push
mov
and
incl
push
insl
sbb
lods
dec
xor
adc
jo
mov
add
notb
push
dec
pop
xchg
or
inc
orl
icebp
push
inc
out
and
cltd
jo
push
das
adcb
roll
popa
fsubrl
icebp
adc
jne
adc
xor
test
xchg
or
in
es
lcall
cmp
leave
sub
repnz
daa
push
push
clc
mov
xor
push
xor
dec
cwtl
mov
cli
enter
ds
add
mov
jo
adc
shrb
jl
cli
mov
adc
aam
imul
push
leave
out
cli
mov
add
pop
dec
loope
pop
jl
and
test
out
or
pop
push
cli
sub
in
pushf
fiadds
jae
fsts
xchg
mov
test
call
pusha
js
pusha
loop
cli
int
aam
popa
loope
fidivrl
or
lea
cli
dec
cli
mov
cmpsb
scas
loop
fwait
cli
fistpll
mov
add
movsb
daa
cs
insb
mov
cld
ja
inc
pop
jp
pop
daa
lods
sub
or
mov
push
xor
pushf
mov
mov
pop
and
mov
scas
pop
std
decl
sahf
cmovge
mov
xchg
movsb
pop
in
inc
inc
xchg
call
cmpsb
or
dec
jb
jg
pop
adc
jp
gs
lods
clc
pop
test
mov
orl
movsb
add
ret
sbb
loop
cld
bound
mov
lret
jp
push
xchg
xchg
cld
mov
inc
sub
movsb
add
xor
push
add
push
in
fnstcw
xchg
sbb
adcl
addl
push
pop
mov
sub
fsubr
data16
add
pop
push
andb
mov
mov
inc
sub
add
sar
outsl
add
add
push
xor
aam
movsl
inc
stos
push
sub
imul
xlat
stos
out
ss
or
out
call
add
pop
mov
incl
mov
mov
enter
xchg
push
decl
mov
mov
or
xor
gs
mov
push
aaa
add
dec
jp
adc
add
mov
and
in
aas
in
mov
cmp
fmull
cmp
adc
in
cmp
int
push
push
mov
jmp
jle
sti
cmp
cli
lods
inc
mov
ret
mov
mov
and
and
push
jne
cld
jg
shlb
fidivl
mov
sub
sub
in
push
cwtl
sub
and
stc
xchg
pusha
jg
inc
out
inc
jmp
adc
popf
dec
js
add
or
xor
imul
xchg
cmp
andb
cmp
xchg
movsb
adc
loopne
push
add
lahf
mov
ret
inc
lods
out
out
xor
sub
inc
inc
movsb
push
dec
ljmp
lock
push
add
mov
xor
dec
pushf
incl
js
incl
dec
sahf
movsb
sub
xor
push
jb
pushl
mov
mov
push
inc
cmp
inc
jne
pop
std
ljmp
adc
or
dec
dec
inc
test
mov
adc
ds
xchg
push
fs
lcall
repnz
cmovne
loope
push
mov
inc
push
add
add
rolb
mov
lea
cmp
popa
mov
cltd
xor
lret
add
push
adc
enter
dec
and
test
insb
jl
sub
rolb
decl
adc
shll
xlat
lock
dec
sar
xchg
and
adc
daa
cwtl
mov
cwtl
decl
lea
loop
fwait
or
mov
cmp
icebp
inc
out
popa
in
test
mov
scas
outsb
push
loopne
fucomip
inc
fdivr
lock
jno
mov
ljmp
and
stc
enter
adc
mov
incb
fwait
out
out
movb
cltd
dec
dec
xchg
push
adc
ja
out
clc
jmp
es
or
arpl
inc
rolb
mov
cli
mov
or
popf
sub
xchg
dec
xorb
inc
sbb
nop
sub
sub
sbb
sar
ljmp
sub
adc
sub
sbb
mov
aaa
int
xchg
insb
inc
pop
sbb
repz
mov
nop
das
jl
mov
and
into
loopne
cmp
sbb
imul
gs
jg
cmp
mov
mov
fildll
lret
mov
mov
xor
decl
jmp
xchg
sbb
xchg
cmp
push
shlb
pop
fstps
pop
cmp
ljmp
mov
or
aad
in
out
ficoms
dec
dec
into
ja
es
ds
adc
dec
lcall
mov
fwait
sub
jnp
ret
lcall
sarl
xchg
xor
push
std
ljmp
jl
mov
sub
cltd
outsb
ja
mov
test
jnp
insb
pushf
arpl
shrb
dec
fldt
mov
push
push
ss
jo
and
out
mov
or
inc
jg
cmp
add
mov
addl
mov
jmp
cmp
jnp
xor
xchg
and
jns
sub
push
int
cmpsb
or
les
inc
pop
dec
rcl
call
jmp
lods
hlt
push
mov
stos
notb
xor
ja
mov
xor
mov
adc
jg
cli
and
cmpsl
or
andl
lods
xor
icebp
test
inc
or
cltd
mov
push
in
push
pop
in
lret
or
rcl
ljmp
dec
dec
dec
enter
sahf
push
decl
fcmovbe
inc
or
dec
mov
test
out
push
adc
xor
cmp
incl
cmp
push
dec
xchg
push
mov
xchg
xor
call
test
ljmp
push
gs
mov
test
pushl
xchg
jns
lods
cmpsb
mov
incl
rcl
pop
mov
adc
add
in
aad
fdivrp
mov
cmp
sbb
sahf
je
cmp
test
mov
pop
int
sbbb
cmpsl
aam
sub
repz
xor
fcomip
call
mov
lahf
pop
ficomps
jg
cmpb
mov
enter
aam
dec
stos
fisubrs
arpl
adc
clc
idiv
call
shlb
jb
sbb
out
shlb
shlb
jge
adc
pushl
mov
fsubr
lods
mov
lods
fisubrs
enter
sbb
call
rcrl
jae
xchg
aas
lahf
mov
jmp
jmp
clc
mov
ljmp
cli
and
repnz
adcb
cmp
mov
mov
push
aas
clc
decl
inc
sbb
leave
sbb
xchg
test
push
pop
loopne
adc
xchg
fs
xchg
enter
ljmp
fcompl
dec
std
pushf
mov
test
insl
fmuls
shr
sbb
cmpsb
add
dec
lds
sar
clc
pop
push
movsl
cld
dec
push
mov
dec
dec
fsts
sbb
pop
lcall
sbb
lret
push
sub
push
dec
test
pushl
pop
roll
fadds
js
sbb
dec
jecxz
mov
xchg
int3
data16
push
push
sbb
sahf
and
pop
lcall
mov
sahf
sbb
xor
imul
lret
mov
lods
mov
push
shll
outsb
pop
ret
lods
outsb
mov
sbb
fisttps
mov
pop
stos
fldcw
sbb
and
icebp
ljmp
cmpsb
jns
fidivs
ljmp
xchg
xchg
aad
and
lock
stos
adc
fldcw
addb
jo
push
xor
sti
fbld
adc
cmp
jecxz
mov
jg
xor
lods
pop
mov
pop
xor
push
mov
ss
mov
mov
pop
sti
fxch
cmp
leave
jg
push
shrb
lock
in
dec
bound
les
jl
add
fldl
lret
cmova
mov
ljmp
adc
cwtl
inc
xor
mull
add
decl
dec
mov
jl
add
push
inc
clc
dec
xchg
and
add
stos
xor
lcall
sbb
rcrb
call
ret
or
adc
and
pop
orl
aad
sub
popa
push
sbb
xchg
adc
push
mov
dec
mov
dec
insb
gs
xchg
adc
xor
cmpsl
stc
pop
bound
mov
sbb
mov
lock
js
adc
xchg
mov
out
mov
mov
in
jg
iret
in
andl
jg
xorb
arpl
push
jecxz
pop
daa
lret
insb
sahf
ds
cmpsl
dec
or
jg
or
xchg
xchg
xor
pop
scas
and
pop
hlt
push
fisubrs
push
ficompl
icebp
fstps
push
iret
fdivrl
fcomip
cmp
inc
fnclex
test
jne
xor
call
fs
arpl
fwait
xor
es
cmpsb
push
lock
mov
cs
mov
jge
or
mov
mov
mov
pop
hlt
mov
xchg
mov
mov
outsb
in
mov
add
decl
lea
cli
pushf
push
dec
insl
lds
hlt
movsb
cmp
and
je
xchg
test
jbe,pt
inc
jb
add
imul
sahf
add
mov
xchg
clc
and
inc
aam
movsl
lret
pusha
std
push
test
incl
mov
ret
inc
push
inc
jnp
movsb
movsb
sbb
xchg
sbb
aad
pop
incl
dec
dec
lcall
movsl
aam
scas
fadds
cli
sub
push
jne
jp
fdivrs
dec
clc
jg
fldl
xchg
pop
push
push
jp
mov
pop
hlt
mov
movsl
adc
mov
les
into
lods
test
enter
call
add
or
pop
int3
fisubrs
and
push
loop
push
pop
lret
xor
movb
pushf
xor
lea
cmp
pop
loope
sbbl
inc
sbb
add
sbb
pop
fsubrl
sub
cltd
call
test
scas
test
stos
push
pop
sbbb
loope
add
lcall
and
je
cs
xor
inc
xor
or
mov
in
mov
adc
dec
insb
inc
push
pop
jge
test
inc
das
fcomip
fisubs
xchg
xchg
fildll
loopne
pop
loop
pop
cmp
enter
jmp
adc
cmp
add
icebp
ficomps
mov
rorl
js
dec
pop
sbb
or
in
or
icebp
call
std
push
insb
xcrypt-ctr
cmpsl
fmull
inc
sub
lea
inc
test
das
cli
out
cmc
in
and
les
or
fs
add
sbb
inc
inc
inc
inc
push
add
orl
cltd
sbb
incl
je
inc
or
push
mov
inc
mov
sbb
lock
mov
dec
movsb
jo
sbb
cmp
enter
lcall
xor
in
insl
pop
nop
mov
mov
or
imulb
adc
call
and
push
push
push
mov
xchg
inc
ficoml
aam
xchg
aam
lods
roll
push
sar
incl
dec
pop
add
jne
int
lcall
stos
lcall
add
data16
add
insl
push
cs
decl
pop
add
shll
mov
mov
movsl
push
arpl
std
test
scas
es
xor
arpl
sbb
jb
shrb
pop
call
imul
repnz
rcrb
arpl
outsb
or
sub
sub
jg
xchg
or
loop
rcrw
out
mov
shrb
add
fcomip
jge
mov
push
mov
stc
push
insl
cmp
adc
out
mov
aam
cli
push
cli
rolb
cmp
fcoms
mov
mov
into
pop
adc
pop
imul
outsb
clc
ljmp
nop
or
xchg
in
push
fidivrl
lock
inc
pop
push
ljmp
jmp
mov
sub
int
jp
stos
or
je
test
bound
cwtl
push
xchg
clc
push
and
inc
mov
push
nop
and
adc
dec
lods
testl
jmp
dec
sbb
or
incl
lods
cwtl
les
je
mov
movsb
sti
cmp
inc
and
inc
fsubl
lock
fnsave
add
push
outsb
nop
push
cltd
push
rcrb
nop
bswap
xchg
push
mov
inc
mov
and
cs
popf
dec
lock
dec
cmp
mov
push
mov
push
bound
push
hlt
sub
jg
decl
inc
loopne
jmp
sub
sub
mov
pop
out
fsts
push
pushf
stos
out
cmp
cmpsl
sahf
lods
add
fidivrl
xorl
push
int
sbb
bound
aas
cld
mov
in
cltd
sbb
ljmp
lcall
mov
fcmovb
pushl
vpsubusb
pushf
insl
es
lahf
idiv
call
or
out
dec
push
adc
das
mov
adc
adc
insb
incl
pop
outsl
xor
subl
repnz
pop
outsb
stos
decl
hlt
push
push
shll
jmp
push
imul
ljmp
int
nop
xor
ljmp
scas
mov
pop
sub
cli
call
push
aad
mov
test
les
out
adc
inc
cmpsb
pop
cmp
decl
adc
and
pop
cmp
pusha
xchg
imul
add
test
mov
and
es
inc
dec
adc
call
incl
pop
add
lods
pushf
jo
leave
inc
cmp
rorb
adc
mov
lahf
aam
out
mov
int
test
jbe
int
les
xor
dec
or
int
rcr
jmp
push
dec
icebp
push
lock
rolb
pop
jno
xchg
inc
cwtl
add
pop
int3
test
test
push
scas
fbld
data16
xchg
jmp
arpl
repnz
pop
sbb
fdivrl
pop
cmp
mov
jmp
jmp
mov
pop
sti
xor
aad
loop
dec
mov
add
sbb
add
mov
mov
pushf
dec
stos
fisubrs
and
std
movsl
pop
jbe
xor
mov
mov
adc
pop
sub
cmpsb
frndint
fldcw
ljmp
insb
dec
jb
cmpsb
pop
or
shrl
out
cli
adc
sbb
inc
or
shl
sbb
nop
sub
into
aaa
int
xor
mov
fisubrl
aaa
mov
stos
adc
inc
mov
inc
or
jo,pn
dec
incl
mov
add
inc
call
pushf
or
ljmp
fimuls
dec
leave
cmpl
mov
push
decl
lock
sub
sahf
jl
cmp
jae
pushaw
push
jo
jnp
leave
test
clc
ljmp
sbb
xchg
movsb
xchg
jb
push
pop
clc
jg
push
movsb
add
sti
sbb
or
into
in
in
xchg
in
jo
cmp
pop
inc
dec
cmp
setg
adc
dec
sbb
or
nop
mov
daa
mov
push
mov
adc
mov
mov
lret
dec
cld
js
pusha
inc
push
pop
fwait
and
mov
loope
out
mov
inc
mov
mov
xor
pusha
mov
incl
mov
call
xchg
add
pop
je
sub
call
enter
cmp
jmp
outsb
mov
es
sti
push
stos
mov
jo
or
or
xchg
sbb
dec
insl
mov
scas
mov
mov
sub
xchg
aad
loope
mov
mov
lods
cltd
int
push
cmp
movsb
sarl
shl
lods
bound
test
popa
pop
ja
insb
push
test
outsl
sub
mov
add
jns
pop
stc
sbb
cmp
ss
and
filds
inc
decl
cmp
mov
scas
add
je,pt
inc
int3
arpl
and
jne
leave
scas
cmp
dec
loop
mov
add
into
std
cmp
jg
dec
xchg
sbb
push
or
xchg
jp
cmp
mov
clc
aaa
insb
dec
sbb
add
sahf
movsl
jo
mov
inc
scas
and
or
push
fbld
movsb
sarb
mov
mov
js
mov
cmp
clc
dec
inc
jl
inc
and
xchg
int
ret
or
mov
lret
adc
sub
icebp
sub
decl
pop
ss
dec
imul
mov
lret
dec
movsb
nop
push
mov
ja
jmp
pop
loope
in
dec
iret
les
jns
les
nop
dec
into
sub
mov
lods
stc
pop
pop
data16
xchg
cmpsb
fisubs
data16
out
lock
mov
dec
xor
mov
sub
jl
je
std
or
ja
and
mov
push
pop
jg
sbb
jmp
xor
out
cmp
cmp
jbe
ja
addr16
jecxz
divb
decl
jmp
scas
repz
mov
stos
mov
mov
sub
call
dec
xor
fadd
push
out
cs
xlat
je
or
add
stc
adc
in
or
mov
mov
cmp
ds
rcrb
lods
ja
cltd
xor
add
scas
ja
clc
dec
jne
jo
xchg
test
mov
inc
jecxz,pt
xchg
aas
fildll
out
cld
movsl
call
add
incl
popf
pop
je
pop
addb
dec
ds
cli
cwtl
mov
adc
incl
test
dec
sbb
ds
jle
add
sub
shlb
pop
add
sub
decl
push
pop
add
or
sbb
add
dec
sub
inc
sub
test
call
cmpb
and
cwtl
lea
aaa
cs
decl
mov
push
add
lea
xor
aam
push
sub
pushf
adc
pushf
or
bound
shl
jl
dec
add
cld
or
jl
lock
mov
xor
pop
xchg
sbb
je
lret
pop
int3
pop
mov
dec
jbe
fnstcw
mov
cld
notb
sub
lcall
cld
mov
sbb
aam
xlat
add
push
sub
mov
call
insb
inc
ljmp
je
ret
cmp
inc
pop
leave
push
data16
mov
mov
xchg
xor
xchg
mov
lcall
lret
push
stos
dec
xor
dec
imul
ffree
outsb
into
jge
clc
nop
incl
mov
ret
neg
ret
jae
push
sarb
mov
cli
out
fs
or
ljmp
xchg
adc
or
test
mov
sbb
cmp
daa
mov
pusha
js
jmp
adc
dec
and
push
push
int3
mov
mov
cmp
das
mov
sbb
pop
xor
call
loop
in
pushl
pop
jle
enter
clc
add
mov
outsl
cli
incl
nop
xchg
xchg
mov
mov
int3
test
xchg
inc
mov
filds
or
leave
jl
dec
pop
jb
adc
sbb
push
inc
sar
jb
add
test
mov
aad
and
dec
dec
xchg
idiv
incl
sbb
test
daa
in
aam
and
xorb
addb
dec
movsb
lock
mov
push
add
or
cmp
dec
movsb
push
push
pushl
inc
mov
insb
push
or
pop
push
xchg
push
xor
mov
pop
push
xor
or
incl
xchg
mov
mov
mov
mov
sub
loop
stos
jmp
aam
das
rcr
mov
mov
mov
mov
dec
push
jmp
sbb
dec
notb
sub
je
jg
movsl
add
adc
mov
xor
push
loopne
xlat
decl
and
aam
in
or
lds
pop
xchg
push
aaa
fwait
mov
cld
xchg
xor
cld
add
fiadds
add
mov
stos
sub
outsl
decl
pushf
gs
mov
cwtl
jae
into
out
cmp
decl
or
test
fisubrl
pushf
inc
pop
jmp
call
cmp
jo
push
ret
out
lods
dec
push
push
and
fstpl
test
dec
mov
addl
jae
mov
push
lcall
push
adc
xchg
cmp
lea
add
fdivr
ljmp
mov
ror
lret
push
pop
sub
jmp
pusha
pop
or
imul
pop
fists
dec
fidivl
aas
mov
mov
mov
roll
inc
loope
xchg
aam
decl
dec
shlb
rorl
sbb
call
push
dec
dec
imulb
cmp
shl
stos
mov
int3
jbe
jg
sub
gs
and
mov
mov
lods
loope
dec
cmpsb
sarb
add
es
sbb
push
cmp
das
and
push
mov
lods
mov
mov
mov
or
sub
ljmp
inc
mov
call
iret
imul
push
mov
add
lcall
add
int3
mov
cmp
test
push
gs
nop
add
jle
stos
inc
pop
cltd
mov
gs
decl
pop
pop
stc
pop
pop
xchg
dec
mov
jge
pop
or
enter
je
adc
pop
cmc
dec
xchg
orb
fsubs
mov
jbe
jns
or
pop
sbb
sarb
sbb
pusha
adc
scas
dec
jcxz
pusha
pop
mov
and
ret
add
mov
adc
insb
mov
mov
lods
inc
adc
es
xchg
dec
loopne
imul
or
pushf
push
roll
fmull
mov
decl
xchg
sub
aam
test
mov
scas
jecxz
inc
xchg
movsb
and
mov
push
je
xchg
dec
sub
pop
push
xor
jg
in
mov
movsl
je
or
adc
stos
push
pop
nop
out
push
jg
icebp
call
dec
or
xchg
xchg
hlt
adc
jp
sub
sahf
insb
cld
fildll
xor
inc
dec
addr16
inc
sahf
pop
mov
push
sub
xor
pop
loope
in
adc
and
or
inc
jecxz
lahf
lea
adc
lcall
mov
dec
inc
jb,pn
in
sbb
push
lods
xchg
and
dec
push
lods
rorl
jp
lods
and
add
dec
xchg
push
xchg
mov
jb
mov
lock
aam
imul
xor
loop
shll
pop
pop
dec
or
loopne
and
push
and
sub
add
arpl
inc
jns
push
push
ret
imul
test
mov
push
hlt
mov
xor
cltd
or
push
fwait
sar
addb
lods
in
sub
mov
call
xor
loope
int
mulb
cwtl
rclb
and
mov
shrb
adc
call
call
cmp
rorl
add
push
inc
jbe
dec
fisttpll
dec
jnp
xor
stos
xor
jmp
fimull
and
test
inc
lret
aam
in
test
xor
adc
loope
lea
sub
pop
repnz
cmpsl
cmp
insb
ljmp
push
movsb
cmpsl
xor
add
add
aam
push
pop
enter
call
std
les
data16
mov
rcl
push
xor
js
sub
lahf
or
jg
mov
inc
scas
jno
rcll
push
fsubl
cmp
ljmp
mov
xlat
and
push
test
jns
push
dec
int
push
dec
add
test
cwtl
fs
jbe,pn
fucom
mov
aad
je
loop
mov
ds
call
jl
adc
in
dec
or
movsl
push
out
aad
pusha
call
rolb
cmpsb
cmp
fwait
iret
rorb
cmp
dec
les
and
mov
adc
push
dec
test
nop
es
decl
adc
xor
adc
adc
mov
lcall
lcall
dec
or
ret
inc
imul
sbb
pop
cs
push
pushf
popa
loope
fiaddl
test
sbb
mov
inc
fsubr
dec
push
out
jg
aam
call
lds
pop
out
data16
imul
pushl
and
pop
dec
pop
loopne
push
xor
popa
mov
mov
pop
cli
gs
imul
jecxz
scas
aam
xlat
dec
cmp
cmpb
xchg
sbb
rcll
and
push
cmpsb
or
cmp
rcrl
loop
call
into
xor
inc
xor
xor
cmp
pop
sar
lcall
mov
fildl
das
sub
mov
aaa
aam
pop
mov
adc
push
pop
inc
add
push
push
daa
push
lds
stc
xor
xchg
cmp
add
lock
inc
lcall
sbb
or
xor
inc
adc
mov
cmp
lcall
mov
testl
sahf
lret
fldt
xchg
fadds
sbb
mov
mov
adc
call
outsb
icebp
sub
lcall
stos
sbb
adc
adc
cmpxchg
pushl
js
add
sbb
shlb
adc
cmp
mov
mov
mov
call
sub
mov
or
mov
jmp
mov
mov
pop
pushl
das
test
faddl
jae
xchg
sbb
and
mov
mov
pop
sbb
sbb
adc
lcall
jae
pop
aaa
push
sbb
mov
push
cmpsl
or
add
jmp
mov
lods
push
bound
add
incl
aaa
stos
mov
dec
pop
sbb
inc
xor
lcall
lods
cmp
and
roll
push
or
bnd
mov
jle
popf
paddw
aas
pop
cli
lret
inc
cmp
clc
sbb
inc
jns
cltd
popf
aas
mov
incl
mov
mov
jecxz
movsl
jnp
add
mov
mov
int3
mov
mov
or
pop
fcmovb
inc
insb
mov
add
mov
hlt
inc
or
jmp
shlb
les
push
lea
out
loope
bound
push
and
adcb
jbe
test
decl
mov
sbb
loop
jmp
mov
inc
popf
enter
test
fbld
es
into
test
sbb
jb
ret
out
imul
decl
ret
test
dec
cs
lods
dec
cs
scas
cmp
jmp
adc
cmp
mov
inc
push
scas
cs
mov
addl
add
outsb
and
mov
xor
xor
or
pop
jp
jg
scas
sub
mov
mov
jno
sahf
ret
dec
push
dec
inc
cmpsb
dec
arpl
ret
inc
xor
ret
cs
ret
sub
lods
sarb
test
add
lea
scas
insw
mov
xor
movsb
dec
add
fs
rol
dec
cmc
insb
movsb
test
cld
jmp
test
ljmp
pop
pop
sub
aaa
push
repz
das
xor
or
push
roll
mov
add
and
mov
sbb
sbb
sbbl
sar
test
jle
cmc
stc
mov
adc
stos
xor
jbe
std
mov
mov
adc
loop,pt
cmp
dec
inc
jmp
test
pushf
add
rorl
daa
in
mov
xchg
adc
and
int
dec
outsl
fsubr
in
pop
sbb
and
push
jl
push
test
cld
or
jne
fs
in
loop
inc
addr16
mov
call
sarb
sub
mov
repnz
std
ljmp
in
xchg
inc
and
gs
inc
ljmp
cmpsl
push
sti
lea
addb
idiv
or
or
inc
jp
cld
cld
sub
push
cld
push
or
sbb
dec
jo
push
inc
lds
in
lods
push
hlt
decl
in
inc
into
lds
movsb
mov
cmpsb
js
data16
add
pop
adc
push
sub
std
jmp
xchg
es
arpl
pop
or
popa
test
es
mov
enter
and
sahf
bound
incl
stos
into
add
fmuls
daa
and
adc
int
aam
add
dec
xor
xor
es
std
incl
call
jl
xchg
lret
dec
popa
push
andb
js
and
xor
jp
or
xchg
inc
out
ret
xchg
call
push
fisttpll
gs
push
fs
inc
xor
inc
mov
dec
test
sbb
inc
loopne
lcall
adc
push
cmp
xchg
cmp
repz
mov
xlat
fistps
test
add
std
stos
mov
clc
dec
cmp
ds
arpl
push
xchg
insb
testb
or
inc
fs
mov
test
lcall
and
adc
dec
movsl
shlb
xchg
adc
pushl
test
push
hlt
xorb
loope
lock
mov
int3
and
cmpb
inc
shlb
jbe
loopne
fbstp
in
dec
jb,pt
sahf
cmpsl
add
and
xor
mov
mov
cltd
inc
dec
sub
inc
adc
xchg
sub
xchg
and
adc
jnp
out
sub
fs
inc
sarl
mov
jmp
nop
punpcklwd
outsb
or
hlt
arpl
xor
push
bound
lcall
push
pop
push
pusha
daa
lcall
ret
cli
push
add
mov
jmp
das
pop
gs
dec
std
adc
xchg
dec
pop
mov
hlt
es
enter
xor
sub
out
pop
ljmp
jl
scas
pop
leave
ret
arpl
dec
xor
xor
or
outsl
clc
sbb
adc
sub
mov
iret
lock
loop
mov
cli
and
ret
mov
lods
pushf
scas
shll
test
sbb
enter
sub
or
jne
mov
rorl
imul
lcall
adc
stos
cmp
push
pop
mov
add
sti
mov
mov
pushl
inc
fbstp
push
mov
sbb
xchg
fimull
cmp
loop
inc
add
pop
icebp
fcmovnb
insl
fistpl
cs
movsb
add
fsubp
lea
lea
outsb
push
repnz
fsubl
cwtl
cld
jg
mov
popa
test
out
and
lcall
ss
push
pop
jno
sub
cmp
and
fdivs
cmp
and
into
cmp
pushl
push
je
add
sub
and
pop
loopne
pop
mov
lahf
imul
xor
loopne
lods
jb
or
cs
xchg
lcall
scas
push
les
and
inc
test
jo
push
jg
inc
push
gs
shl
dec
out
shrb
add
clc
cmpsl
push
push
bound
push
shrl
daa
nop
pusha
mov
inc
push
mov
outsb
cmp
add
or
call
std
call
cmc
outsb
popa
bound
ja
add
shrl
in
mov
fsubrl
ds
arpl
roll
add
hlt
lds
test
mov
xor
mov
ljmp
lcall
dec
fs
jae
push
and
out
mov
inc
xor
insb
ljmp
push
sbb
mov
cwtl
lret
sub
mov
jns
mov
rcl
sbb
stos
aas
ror
mov
sbbl
mov
mov
cli
mov
inc
daa
dec
arpl
cmc
call
int
push
jecxz
clc
adc
rol
aam
inc
lret
jmp
insb
dec
adc
shrb
test
jmp
dec
add
les
add
jle
dec
ljmp
je
ds
clc
jmp
ret
mov
sub
xor
mov
xor
cmpsl
rol
orl
dec
dec
mov
incl
xchg
jge
adc
mulb
add
mov
dec
and
ljmp
in
out
and
dec
mov
js
mov
sbb
fsubl
cmpsl
push
add
nop
js
add
xchg
pop
xchg
add
aad
std
shrb
clc
ja
stos
in
add
add
mov
ljmp
pop
mov
xor
push
xor
mov
adc
or
push
enter
fldcw
insb
outsl
jmp
ljmp
call
mov
fsubr
cs
cli
stos
add
add
pop
push
hlt
cmp
sahf
aad
std
call
dec
enter
sub
pop
adc
fs
decl
jg
mov
pop
orl
lods
popa
jbe
push
pop
add
xchg
addr16
fnstcw
out
add
test
shlb
and
jecxz
shll
pop
push
hlt
or
ret
mov
movsb
ds
fstl
hlt
jge
push
cmp
or
xchg
adc
dec
cmp
js
inc
pushl
in
and
and
test
in
or
inc
mov
inc
outsl
das
adc
decl
cmpl
add
cmpsl
dec
add
sbb
mov
js
inc
push
rcrb
inc
cmovl
pop
and
pop
daa
das
adc
mov
lock
mov
in
orb
into
stc
jnp
sub
push
rclb
jl
insb
cld
sub
inc
jg
push
dec
fadd
mov
ja
aaa
cmpb
out
mov
xchg
pusha
mov
cmpsl
jg
incl
lods
dec
add
mov
jmp
mov
or
xchg
aam
js
or
shrb
push
ljmp
or
and
add
and
lret
or
stos
mov
mov
lods
cmp
ljmp
lea
push
sti
inc
mov
add
sbb
xchg
iret
inc
mov
repnz
jmp
incl
xor
add
push
adc
mov
inc
subl
or
stos
cs
ljmp
adcl
cmc
mov
cmp
push
ret
pop
mov
loopne
jmp
push
fwait
mov
subps
jno
test
sub
ljmp
insb
daa
enter
push
mov
lcall
hlt
enter
fstpt
insl
fmul
add
inc
insl
imul
es
jno
lcall
sahf
or
and
repnz
arpl
out
bound
push
dec
or
mov
popf
push
xor
test
sarb
dec
mov
incl
sub
add
jmp
stos
dec
lock
xor
gs
jns
pop
les
lcall
dec
adc
jle
inc
fs
dec
lret
sub
loop
das
clc
call
insb
dec
adc
lahf
dec
lock
mov
iret
and
mov
dec
sub
add
insl
cmp
clc
mov
jp
movsl
pusha
mov
in
sbb
adc
and
inc
cs
add
in
adc
in
or
out
shrb
scas
imul
cli
pop
fidivrl
shll
push
adcl
aaa
add
mov
addb
cmp
cmc
loop
and
xchg
dec
xchg
push
or
adc
incb
mov
xchg
das
cmp
call
push
loope
xor
icebp
pop
faddl
mov
cld
sar
pop
ljmp
push
ljmp
cmpl
adc
ds
jecxz
sub
test
clc
pop
ja
les
test
push
lret
outsb
sbb
fwait
xchg
mov
inc
and
outsb
out
dec
or
mov
out
sbb
test
xchg
test
stc
loop
mov
mov
fdivrs
xchg
add
inc
sub
mov
lds
es
mov
testb
adcl
call
movsb
and
loop
mov
mov
loope
rorb
xchg
cmpsl
push
les
mov
inc
lret
aas
mov
iret
cltd
dec
test
jge
lcall
fisubrl
clc
ficompl
cmp
cmpl
ret
mov
sub
loopne
jnp
add
jns
fs
jl
testb
pusha
cmpsb
jecxz
mov
pop
ret
xorl
xor
decl
sub
scas
xchg
pop
mov
gs
and
xchg
orl
mov
fisubs
stos
xchg
add
push
jg
or
push
add
ss
mov
pusha
aaa
pop
jp
sbb
loop
ljmp
xchg
orb
mov
sahf
addr16
inc
xor
xor
mov
lock
xor
jl
rcrl
sbb
mov
cmp
add
scas
rcrb
cmp
fld
lods
aaa
lret
jmp
push
xor
sbb
decl
lret
in
adc
and
ss
adc
add
ja
cld
cmc
inc
aam
frstor
xor
popf
xchg
lds
lret
mov
dec
jae
sub
icebp
sub
sbb
test
sbb
or
pop
push
fwait
sarb
mov
decl
mov
imul
sbb
movsb
jnp
xchg
mov
cs
push
jbe
out
daa
mov
jp
mov
das
cmp
insb
dec
pop
push
mov
push
stc
pop
inc
inc
sbb
ds
jg
ljmp
push
out
add
aas
mov
stos
push
fidivrs
lcall
repnz
push
popa
insb
inc
cmp
mov
add
or
shll
jl
call
and
and
rcll
xchg
cwtl
mov
jmp
test
sbb
jg
inc
leave
nop
sub
cwtl
jno
cmpsl
push
mov
flds
inc
repnz
fs
loopne
aaa
cld
fs
xchg
xor
rorb
inc
ds
push
outsb
push
loopne
or
mov
inc
jb
or
mov
mov
xchg
inc
inc
fs
rorl
inc
in
dec
sbb
int
inc
daa
scas
lods
inc
inc
orb
or
xchg
sub
xor
sbb
jle
mov
ss
lock
push
cli
hlt
or
in
xchg
pop
lahf
add
jge
jge
mov
loopne
adc
test
or
jns
mov
xchg
xchg
call
mov
dec
or
sbb
dec
ret
fistps
jl
xchg
call
into
fdivrl
shlb
loope
xor
sar
dec
cli
fwait
rcll
and
daa
incl
lods
sub
rep
repz
scas
std
jecxz
xor
jmp
aaa
mov
push
data16
ficoms
pop
sub
inc
or
mov
cld
jg
js
aam
popa
test
pop
call
clc
lds
aad
pop
jg
movsl
sbb
cmc
in
cmp
aam
push
adc
mov
cltd
push
mov
dec
cmc
sbb
and
push
jg
and
mov
xchg
push
push
mov
and
jg
arpl
jne
push
in
push
cbtw
fidivrs
lcall
add
in
pushf
adc
mov
push
imul
jbe
pop
adc
push
adc
lods
sub
test
rorl
adc
mov
insl
stos
jbe
insb
adc
jg
xchg
cmp
pop
aad
lea
loop
nop
lcall
sub
cmp
fisubl
pop
push
mov
dec
jbe
aad
call
jns
or
pusha
bound
jb
pop
pusha
dec
pop
les
xchg
call
test
fldcw
jo
int
adc
jns
rcrl
pop
cmp
ds
jg
stc
inc
in
push
jecxz
les
insb
fldenv
inc
cmpsl
adc
push
pop
mov
cli
ljmp
arpl
aam
cltd
add
je
push
rcrb
outsb
xchg
outsb
daa
ret
cmpb
push
ficoml
pop
mov
or
sbb
icebp
icebp
or
leave
aad
out
loope
lcall
leave
lret
cltd
pushf
sbb
sbb
sbb
js
lock
lcall
repz
mov
ret
rcl
in
out
enter
and
test
and
sahf
hlt
cmp
cmpsb
nop
inc
push
pop
jne
pop
outsb
jns
pushl
sbb
push
subl
pop
cwtl
pop
rclb
call
dec
je
sub
cmp
mov
sub
ret
add
inc
pop
filds
int
popf
insl
pop
iret
inc
ja
and
movsb
lods
aaa
sub
ja
jg
xor
mov
lds
hlt
call
pop
pusha
jl
rolb
test
ljmp
test
mov
mov
in
jg
out
add
cmp
sbb
xchg
test
cwtl
or
lock
xchg
lds
je
icebp
call
or
sbb
repnz
pop
pop
cmp
jg
out
adc
aas
mov
inc
mov
mov
xor
cs
jle
inc
lcall
insl
mov
push
push
ljmp
cld
out
cmpsb
test
jl
push
pop
adc
incl
pusha
test
jmp
add
or
lods
leave
cltd
gs
xchg
mov
xchg
in
jecxz
movsb
xchg
xchg
pop
lahf
fsubs
jecxz
mov
xor
push
or
lret
lock
sbb
xor
jmp
int3
add
out
inc
sarb
sub
popa
mov
cmpsl
call
cld
aaa
push
popa
divb
test
cwtl
in
cmp
fwait
and
xchg
xor
pop
daa
cmp
orb
mov
insl
xlat
add
dec
cs
and
and
imul
call
dec
jecxz
add
mov
insl
adc
and
mov
mov
sub
jecxz
incl
mov
pavgw
and
sub
add
pop
or
sub
sbb
add
das
clc
incl
and
dec
adc
and
loope
add
flds
adc
sbb
iret
ficoml
mov
add
mov
test
adc
ret
fcmovnb
xor
nop
or
pusha
cmpsb
cltd
cli
pushl
popf
mov
cltd
aam
cmpsb
xor
ds
fwait
sub
jl
xchg
pop
inc
ss
cmpsb
ss
sub
popf
jbe
cmp
pushl
int
scas
jae
jbe
out
mov
add
add
mov
clc
hlt
jno
mov
sub
lcall
push
pop
jl
lret
pop
in
arpl
lods
lea
lret
dec
fsubs
sbb
ret
ja
clc
mov
sub
or
rcl
test
sub
call
sbb
dec
jo
xchg
mov
pop
fimuls
lcall
mov
adc
inc
dec
xchg
lods
mov
sub
repz
fidivs
insb
stos
push
adc
aam
add
adc
pop
lock
lock
push
cwtl
outsb
pop
fdiv
decl
cwtl
popf
sub
sub
jl
cmp
enter
fadd
xchg
xchg
sub
and
pop
ljmp
inc
jmp
fisubrl
mov
cmp
sbb
inc
adc
jbe
and
rcll
enter
inc
pop
adc
push
push
dec
push
mov
push
ret
insl
int
imul
sub
xchg
inc
arpl
enter
sub
sbb
add
incl
sahf
mov
xor
xchg
fiaddl
xchg
call
or
inc
inc
xchg
daa
shrb
ljmp
xchg
bound
push
add
add
decl
jbe
pop
add
subb
into
ja
lock
fucomip
xor
inc
mov
aad
into
push
adc
cmp
dec
cld
stos
xor
fistps
cld
cs
clc
lcall
xorl
mov
daa
mov
add
push
inc
lret
sarb
pop
sahf
add
push
cmpsb
mov
xchg
cmp
test
pushl
dec
inc
or
add
jle
sbb
jge
and
call
add
lds
push
mov
inc
fdiv
xchg
mov
fildll
fsts
xchg
xor
mov
insl
dec
pusha
push
lret
das
loopne
xchg
mov
decl
stos
push
inc
ljmp
inc
adc
pushl
fwait
cmp
stos
bound
sub
sbb
xor
test
mov
lock
inc
cmp
test
call
and
add
hlt
jp
call
xchg
pop
adc
xchg
lock
add
push
jae
sbb
cld
dec
test
mov
imul
mov
icebp
stos
and
dec
dec
icebp
ds
daa
cmp
inc
aaa
decl
sbb
add
push
add
pop
test
fnstcw
imul
inc
pop
or
test
inc
adc
push
loop
call
push
das
jnp
pop
call
les
mov
aas
and
pop
les
sbb
inc
fdivr
decl
outsl
cmp
sbb
sbb
lods
lcall
pop
das
or
mov
inc
lahf
stos
data16
sti
jmp
pop
inc
cmp
push
dec
or
adc
jg
hlt
loopne
pop
lret
fnsave
push
push
sub
int3
xchg
mov
xorb
inc
fldl
mov
lret
inc
mov
ljmp
icebp
call
scas
pushf
add
push
scas
pop
push
dec
and
adc
cmc
jmp
sbb
test
in
imul
push
test
data16
iret
mov
aaa
mov
cmp
push
pop
or
lcall
add
push
hlt
lret
loopne
xlat
sub
stc
and
test
scas
sbb
lcall
scas
xor
mulb
lods
jbe
xchg
call
outsl
decl
inc
or
les
mov
jb
movsl
outsb
push
imulb
mov
test
add
outsl
lret
lcall
call
ljmp
mov
call
mov
dec
push
mov
inc
mov
xor
or
insl
in
clc
lcall
data16
shrb
cmc
mov
xchg
pop
cli
mov
fld
jno
fldt
clc
int3
or
pop
pop
and
jl
mov
adc
clc
adc
adc
dec
lret
movsb
dec
cmpsb
jg
icebp
inc
push
and
xor
xor
inc
and
mov
push
or
and
push
adc
jg
push
stc
and
je
popa
inc
shrl
cmpsl
ret
adc
jne
adc
aam
xchg
aas
ljmp
or
stc
jecxz
ljmp
jb
mov
in
add
call
pushl
cld
je
movsb
adc
out
shlb
adc
push
test
adcb
mov
loopne
out
cli
or
sbb
movsb
and
or
and
insl
jb
xor
dec
shlb
inc
dec
lock
fbld
push
cmpsb
inc
arpl
ljmp
ja
inc
pmaddwd
inc
and
mov
push
call
daa
in
inc
cs
push
xor
add
cli
jns
pop
jp
pushf
xor
mov
call
shlb
mov
and
cmp
dec
test
call
lods
ss
data16
in
daa
pop
sub
mov
imul
jnp
andl
inc
inc
inc
sar
pop
inc
insl
xchg
jecxz
dec
dec
ljmp
dec
xchg
pop
xchg
and
add
add
inc
in
popl
inc
xor
cmp
push
add
jne
xor
lcall
scas
cli
xlat
pop
cld
cwtl
cmp
fcomps
test
jmp
cmp
nop
or
sbb
xstore-rng
cmpsl
orl
pop
adc
out
loope
hlt
add
pop
std
push
inc
cli
jno
dec
addl
call
push
out
add
push
mov
xchg
adc
sub
pushl
xor
xchg
sub
shrl
call
inc
adc
xchg
adc
jae
push
adc
xorl
adc
jno
sub
jecxz
inc
sub
xor
jo
addr16
pcmpgtd
xchg
sarb
es
cmp
sbb
cmp
xchg
leave
xor
xchg
rolb
iret
rcrb
test
call
xor
adc
adc
add
daa
inc
push
jg
xchg
xchg
js
push
fs
daa
add
insb
xorb
jg
outsb
and
and
addl
decl
les
stos
test
ret
nop
xchg
and
push
sub
pop
rorl
mov
fstps
push
imul
arpl
xor
inc
fwait
sub
and
lcall
ljmp
decb
pop
jge
cmpsb
and
cmp
call
jl
rolb
iret
fdivrs
test
test
nop
ret
add
leave
push
mov
xchg
and
add
out
stc
popl
xchg
sub
daa
jne
jo
movsb
mov
stc
sti
sub
aam
push
adcb
jp
loope
sar
jg
xor
xor
andb
push
mov
sub
inc
pop
aaa
adc
jne
push
or
outsl
js
fsts
movsl
ficoms
add
xor
push
inc
outsl
clc
call
push
push
inc
xchg
cmp
cmp
xchg
add
adc
push
dec
inc
and
xchg
inc
jno
sbb
lock
push
inc
je
push
data16
iret
inc
sub
call
mov
jbe
xchg
jbe
pusha
xchg
js
mov
mov
arpl
aad
in
lods
jae
xchg
mov
test
cwtl
mov
pushl
popa
xor
pop
and
in
push
fcomip
add
addb
mov
in
call
sahf
and
andb
inc
pop
sub
popf
nop
push
and
xchg
es
xchg
and
push
pop
mov
inc
aam
push
rol
xchg
and
loopne
push
push
rol
push
bound
add
mov
adc
push
mov
ret
xchg
inc
xchg
and
std
pushw
in
sbb
shll
pop
jae
push
xchg
test
and
addl
flds
sahf
out
stc
lods
lock
decl
hlt
nop
lret
mov
nop
adc
sti
imul
cltd
pop
pushl
fwait
cli
js
out
sbb
in
cltd
sub
adcb
inc
push
mov
pop
std
or
aas
mov
sub
sbb
and
loop
hlt
adc
adc
test
cmp
adc
xchg
movsl
and
pop
fs
js
out
jp
mov
fcomip
xchg
push
test
jecxz
mov
movsb
xor
cmp
es
mov
loopne
jmp
sub
ja
sbb
sub
inc
insb
xor
cmp
ja
cli
stos
push
mov
jnp
dec
sbb
fs
pushl
shlb
xchg
inc
push
rcrb
shll
adc
dec
lcall
jg
xchg
sbb
and
sub
mov
insb
add
movsl
dec
mov
xor
cmp
pop
test
mov
dec
adc
mov
test
add
sbb
sbb
testb
ljmp
xchg
negl
pop
xor
dec
and
push
outsb
jecxz
stos
fs
pop
stc
cmpl
je
pop
push
fadd
pop
loop
mov
fwait
add
mov
scas
xchg
sub
push
mov
xchg
dec
lods
rcr
lcall
jmp
adc
lods
addl
outsl
mov
xor
decl
lods
xor
sbb
sbb
jb
inc
adcl
pop
call
adc
xor
adc
imul
shll
inc
sub
es
push
sub
mov
pop
and
cmpsb
mov
jle
mov
mov
sbb
rolb
cmc
mov
jno
lea
xor
mov
movsl
cmp
addl
cmp
push
out
mov
xchg
or
sbb
jmp
mov
and
mov
cltd
add
jmp
jns
movsl
push
andl
cmpsl
push
cmpl
cmp
pop
cmp
out
dec
arpl
shll
mov
shrb
jbe
add
cmp
jmp
add
mov
cltd
addr16
fcomip
das
clc
mov
add
jl
and
xchg
cmp
and
push
rorl
pop
mov
ds
jmp
pop
sub
scas
push
leave
push
push
out
dec
subb
mov
sbb
mov
or
push
push
movaps
inc
pusha
xor
fxch
jbe
push
jmp
call
pop
test
lock
cmp
lret
xchg
jne
mov
repnz
cmp
incl
mov
inc
sub
adc
xor
subl
dec
push
ds
and
mov
or
mov
add
jne
mov
int3
add
mov
shl
xchg
push
push
push
and
lcall
insl
cltd
jo
fwait
mov
in
sub
sar
ljmp
mov
cmp
xchg
mov
sbb
ss
pushf
push
decl
dec
clc
sbb
or
in
adc
mul
dec
ljmp
enter
jle
inc
fsubrl
add
sbb
dec
jecxz
arpl
jmp
fwait
adc
inc
inc
jnp
adc
mov
imul
lcall
or
add
jo
rclb
and
inc
mov
test
mov
xor
jmp
outsl
sbb
enter
call
std
fsubs
repz
adc
test
ljmp
dec
lahf
jg
decl
or
cmpsb
sbb
aas
inc
pusha
push
adc
xchg
or
fcompl
add
sti
mov
inc
mov
xchg
int3
push
test
imul
lods
or
hlt
mov
jmp
xchg
mov
popa
push
push
adc
lcall
fstps
xchg
add
movsb
add
into
xorl
mov
addr16
xor
lods
push
movsl
push
add
dec
cli
decl
sbb
inc
pop
les
and
ljmp
int3
ret
push
xchg
ljmp
inc
pop
hlt
js
jae
jg
pop
pop
jecxz
ret
hlt
icebp
pop
jne
adc
ret
xor
pop
or
adc
dec
ss
xlat
push
std
jg
jg
push
and
pop
addr16
xchg
jbe
push
lods
dec
jecxz
add
jle
stos
or
cmp
and
int3
cmpsb
fsubrs
leave
pop
mov
sti
and
inc
jae
and
fsubrl
inc
in
fldcw
leave
lahf
jb
scas
mov
push
mov
mov
xlat
xor
ljmp
lcall
jo
sub
jecxz
pop
movsl
cld
add
idivl
fstp
xor
mov
add
push
nop
aaa
push
fisubl
or
scas
sbb
sbb
lock
mov
mov
cs
adcl
lret
cmp
mov
inc
xor
dec
rcl
leave
int3
decl
mov
dec
adc
cmp
int
push
xchg
add
xchg
ret
stos
arpl
push
stos
mov
xor
fdivr
call
jne
add
fmul
in
int
jo
mov
bound
fwait
pop
andl
loop
jg
jbe
sbbl
out
pop
mov
cs
daa
lcall
rcll
shl
jmp
mov
jge
fildll
pop
fwait
mov
and
call
fbld
pushl
push
pusha
push
pushf
cmc
test
loopne
cmp
rorl
and
lret
mov
dec
cmp
and
inc
adc
std
pop
fwait
adc
in
es
push
lcall
mov
mov
jecxz
loop
cmc
xchg
jmp
push
mov
loope
out
nop
mov
mov
mov
mov
push
adc
rorb
dec
inc
out
icebp
in
xor
adc
fldenv
pushw
cmp
mov
sbb
fmul
sbb
ljmp
dec
push
rcr
xchg
inc
push
bound
and
xor
aad
xor
mov
dec
mov
imul
jg
imul
outsl
adc
adc
xchg
std
fyl2xp1
mov
push
icebp
pop
ss
xlat
lret
repz
sub
push
xor
fldcw
call
incl
mov
into
mov
mov
insb
sbb
cld
sbb
movsl
pop
sbb
sbb
pushl
xor
mov
int
mov
xchg
mov
sbb
fbld
outsb
int
cwtl
dec
push
xlat
push
mov
scas
inc
xorl
dec
and
sti
xor
cmp
add
shrl
mov
dec
sbb
clc
inc
inc
mov
loope
add
inc
cmp
cmp
testb
or
pusha
and
cld
cmp
ss
mov
jne
loope
je
sub
push
dec
sbbl
mov
cmc
inc
aaa
lods
cmp
into
jo
xor
and
mov
ljmp
pop
lock
xor
inc
xor
stos
add
cmp
inc
lahf
mov
movsb
or
push
addb
icebp
cmpsb
pop
dec
mov
gs
pusha
push
fbstp
lcall
popa
inc
xchg
adc
inc
add
inc
or
and
popf
das
pop
mov
call
inc
cmp
enter
push
or
xchg
lcall
pop
pop
jl
call
adc
imul
out
and
jle
in
adc
int3
cld
int3
sbb
mov
pop
jo
mov
cltd
and
adc
xchg
stos
inc
xchg
push
inc
outsb
xchg
stc
inc
lods
mov
cmp
icebp
in
mov
add
fwait
push
out
add
pushf
sub
sub
push
push
addl
shll
jns
mov
inc
out
lock
daa
pusha
pop
push
imulb
dec
or
lcall
cwtl
jnp
sbbb
mov
std
lcall
scas
or
dec
push
iret
adc
push
or
add
loopne
and
getsec
jle
mov
jmp
cltd
sbb
mov
enter
dec
mov
pop
mov
clc
in
in
cmp
pushl
rcrb
jle
dec
pop
cmpsb
dec
loope
mov
and
ljmp
out
xchg
in
lock
call
push
jg
push
decb
test
and
cwtl
fisubrl
inc
std
sahf
mov
stos
das
mov
mov
stc
pop
call
xor
mov
push
nop
nop
and
mov
add
adc
test
mov
stos
out
jb
dec
mov
cmp
rcll
addl
add
cmp
mov
fisttpll
push
stos
mov
xor
das
cli
ja
xor
cld
push
push
xor
push
sbb
shlb
add
stos
push
in
or
iret
fs
cld
jg
push
sub
inc
je
inc
add
mov
xchg
sub
shlb
and
fwait
add
xchg
and
push
xchg
ret
dec
jb
pushl
xor
das
mov
call
aad
add
test
mov
ljmp
lods
and
sub
stos
push
inc
mov
sub
push
leave
push
pop
dec
pop
xchg
jmp
add
stos
lcall
add
inc
mov
loop
mov
test
incl
xchg
mov
xchg
push
imul
ds
leave
repnz
dec
ffreep
xor
aad
sarb
test
iret
loop
incl
cltd
cli
loop
add
inc
loopne
xchg
test
jle
aam
cmp
push
aad
pop
pop
mov
push
int
js
pop
iret
addl
and
aaa
rcll
cmp
sbb
pop
cwtl
cltd
xor
testb
mov
pushf
lret
or
dec
ror
lock
mov
leave
mov
add
rcrb
cmpb
sbb
and
jg
pushl
je
stos
aas
sbb
mov
enter
jmp
push
xchg
pop
or
int3
enter
xchg
adc
mov
aaa
or
mov
ljmp
les
out
and
mov
lock
mov
pushl
sub
cmp
push
or
inc
loop
rolb
or
or
repnz
ljmp
jbe
ret
pop
xchg
into
inc
in
idivl
cmpl
push
adc
jmp
out
mov
push
or
and
pop
loope
push
adc
test
mov
repnz
mov
test
leave
ficompl
enter
pop
lret
push
cld
or
ret
decl
mov
dec
jo
enter
int
jmp
push
je
dec
sub
aad
sub
ret
jmp
ljmp
pop
clc
dec
out
repnz
xor
and
sub
incl
and
loopne
jp
cmpsb
pusha
notl
int
inc
adc
push
inc
push
jg
inc
ret
add
out
mov
add
or
cmpsb
mov
add
sbb
push
sarb
movsb
jmp
addr16
cltd
shlb
xchg
sub
xorl
addr16
mov
fisubrs
std
call
sbb
and
rcr
cmp
movsb
cli
xor
addr16
jge
adc
nop
inc
aas
lock
xor
adc
adc
and
fcoml
mov
inc
rolb
in
fwait
daa
xchg
mov
jl
cmp
stc
xchg
add
loop
into
test
xor
mov
pop
in
push
jg
dec
andl
inc
mov
ds
ud0
call
ss
and
in
aas
popf
adc
ds
and
in
cwtl
lock
out
mov
inc
xchg
mov
add
mov
loope
dec
sar
mov
jl
imul
jmp
xchg
add
call
jp
ja
or
stc
inc
sub
push
push
lret
sbb
push
hlt
push
test
xor
xor
or
mov
rclb
cmp
stos
mov
repnz
jg
lret
pop
add
xlat
inc
jo
adc
aaa
adc
lcall
pop
data16
lret
xchg
push
xchg
push
push
mov
add
lcall
movsl
mov
shrb
orl
adc
filds
fiaddl
lret
jb
add
pop
data16
sub
cmpsb
adcl
adc
out
jo
outsl
jbe
xchg
rcrb
mov
orb
or
xor
lcall
sbb
mov
add
cwtl
add
call
incl
pusha
push
jae
pop
or
add
add
punpckhwd
ljmp
or
dec
mov
jo
jbe
inc
and
decl
xor
and
ss
out
adcl
arpl
popf
pop
int3
andb
ret
sbb
push
adc
pushl
sbb
and
mov
jmp
mov
decl
add
ret
mov
mov
xor
adc
mov
lcall
fdivr
xor
icebp
in
out
push
pop
mov
jg
inc
fs
dec
jle
inc
into
mov
test
lea
mov
add
inc
sub
dec
push
test
imul
mov
or
hlt
rclb
orl
jp
ljmp
xor
rcrl
call
mov
test
testl
push
sbb
stos
leave
dec
lcall
decb
xchg
cmp
cmp
add
mov
pop
bound
dec
sub
lods
jne
mov
inc
daa
scas
ficoml
mov
out
dec
adc
data16
cld
ljmp
stos
add
movsl
stos
or
jl
jo
ljmp
jmp
pop
inc
cmc
xchg
mov
pop
sbb
sbb
xchg
das
push
sub
cld
ljmp
icebp
or
loop
push
adc
add
scas
xchg
pop
pop
push
loop
cmpsb
jg
xchg
cmp
sbb
aad
xchg
pop
ja
adc
adc
sbb
and
or
sbb
xor
nop
leave
and
sbb
pushl
mov
pop
mov
inc
push
test
je
add
adc
adcb
and
jmp
addb
add
xor
or
mov
addb
adc
jns
sti
decl
ret
mov
adc
dec
hlt
in
call
mov
push
sbb
mov
adc
js
cvtpi2ps
cmpsb
add
jg
lcall
dec
push
mov
flds
mov
jmp
push
mov
cld
xor
xchg
xor
push
inc
push
mov
jecxz
dec
mov
into
xchg
incl
popf
sahf
movsb
mov
scas
fs
data16
sahf
mov
mov
fmull
gs
adc
fidivrs
jae
push
jo
sahf
or
xor
pop
mov
ret
push
inc
fwait
or
cltd
hlt
mov
das
lods
rcrl
pop
add
in
dec
sub
push
add
add
incl
clc
pusha
xchg
iret
dec
push
cld
sbb
aas
and
push
mov
call
fucom
fldenv
jle
dec
push
adc
test
sbb
xchg
sahf
push
push
xchg
push
in
or
dec
mov
subl
lods
lahf
dec
jp
push
cli
movsl
adc
pushf
pop
in
lahf
sahf
test
lock
sub
adc
and
cli
inc
mov
cmp
out
jno
push
fsubr
push
adc
dec
dec
ss
mov
mov
pushl
dec
or
loop
ljmp
jb
aad
jbe
les
inc
cmp
fcmovnu
adc
rol
incl
sub
lock
cmp
loop
pop
pop
fwait
sub
fwait
add
xchg
rolb
or
push
mov
or
push
add
xchg
mov
mov
jmp
dec
sbb
daa
inc
inc
add
cmp
incl
sbb
inc
jge
xchg
pop
sub
test
xchg
add
xchg
sub
sbbb
call
je
daa
sbb
daa
insb
pop
loop
cmpl
out
mov
cmp
incl
cwtl
add
xor
sbb
and
mov
lret
jmp
or
lahf
fwait
xchg
repnz
xor
mov
ljmp
and
xor
int3
mov
and
push
sbb
out
cli
decl
fwait
pop
dec
and
lret
add
cli
sbb
sub
in
cmp
incl
sahf
in
addb
xor
movsl
jno
push
sbb
incl
or
mov
shlb
popa
cs
inc
add
cmp
adc
sbb
pop
xchg
rcrl
in
ret
jg
adcb
xchg
enter
cltd
xchg
cmp
pop
fisttpl
loope
sbb
rorb
daa
xor
popf
lcall
adc
xchg
mov
sarb
jae
popf
enter
sahf
ficoml
lods
out
clc
call
adc
loope
mov
cli
cli
test
xor
cmp
call
sub
mov
rcll
or
or
xchg
pushl
adc
in
jecxz
and
mov
push
cwtl
aam
or
push
and
cmp
mov
cmp
aas
jo
das
and
add
mov
cli
call
jp
inc
lret
iret
xor
push
inc
xchg
jmp
cld
mov
add
pusha
xor
out
repnz
and
jmp
xor
or
sub
add
fcomps
add
push
rcrl
dec
add
fdivs
and
ja
or
xchg
loop
jg
mov
jg
pop
mov
mov
and
or
lods
xor
jb
xlat
push
mov
mov
lock
lcall
stos
sub
xor
cmp
jo
cmp
and
sub
mov
or
cltd
bts
fwait
dec
mov
jg
rorb
movsb
enter
lock
dec
adc
call
out
mov
cwtl
nop
test
lds
and
jmp
mov
add
incl
shrb
xor
dec
dec
adc
call
out
stos
addl
dec
jmp
ljmp
subl
testb
sub
andl
call
mov
xor
lock
sbb
sbb
pop
mov
mov
dec
aad
test
mov
js
sbb
dec
mov
add
jle
cmp
jmp
int3
adc
mov
lods
xor
decl
adc
rcl
iret
dec
xor
or
xchg
or
mov
ljmp
dec
adc
mov
lahf
pop
cmp
xchg
xor
lds
sub
jmp
iret
cmp
adc
push
add
bound
jmp
jo
mov
cmp
inc
jo
pop
and
xchg
ds
xchg
xor
sub
mov
cmp
mov
jae
cmp
lods
mov
jle
adc
cmc
or
add
aas
mov
stc
cli
clc
das
xorb
mov
test
jg
or
cmp
dec
and
mov
dec
or
or
incl
sbb
add
mov
adc
adcl
xor
or
push
cmpb
pshufw
dec
or
icebp
sub
inc
clc
mov
cmp
or
mov
rclb
push
mov
sbb
and
sub
cwtl
cltd
or
cs
orb
repnz
mov
test
add
adcl
decl
cmp
mov
decb
sbb
sbb
jmp
push
sbb
movsb
inc
xor
xor
mov
mov
ljmp
shll
sbb
mov
or
hlt
cmp
xor
inc
nop
clc
jmp
sbb
pushf
push
push
sbb
lods
mov
filds
lcall
jmp
shrl
sbb
pop
call
lds
xchg
stc
xchg
mov
fldenv
add
and
cmpsl
cltd
adc
mov
jb
repnz
inc
test
ljmp
sbb
push
jg
std
daa
jge
fidivl
fmuls
into
jecxz
shrb
mov
fstl
lods
stos
jecxz
adc
or
iret
clc
mov
add
cmp
jg
mov
lds
lods
and
or
mov
sub
ja
fmul
movsl
jge
cmp
push
rol
push
fucomi
inc
rolb
or
sub
mov
add
inc
sub
or
mov
cmp
push
incb
sub
push
sub
call
cld
dec
xchg
push
pusha
mov
push
dec
jae
dec
test
jp
mov
add
xchg
stos
mov
push
pushl
ss
push
int3
xor
outsb
popa
lods
std
lcall
adc
mov
mov
push
aad
xorl
nop
aad
push
fwait
sub
sub
mov
add
cli
lods
add
mov
into
and
jbe
fsts
xchg
js
fcomip
fwait
movsl
lret
scas
outsb
and
and
incl
aaa
fs
jge
cmp
mov
vorps
rcrl
cld
loop
and
sbb
xchg
jecxz
add
pushl
mov
dec
subb
lds
or
int
orb
xchg
or
cs
push
adc
fdiv
cwtl
adc
cmpl
popf
in
jecxz
call
dec
and
cmp
xchg
fcomi
or
xor
or
add
subl
clc
flds
outsb
add
incl
mov
add
shlb
js
mov
pushl
cli
sub
mov
fistpl
fisttpll
inc
add
push
test
call
add
cltd
cmpb
aad
add
dec
mov
or
push
add
jle
ja
adc
fisubl
push
mov
mov
enter
xchg
add
call
or
les
aam
add
sbb
orb
lods
test
mov
shl
ljmp
loop
iret
cli
fwait
add
add
or
xor
jg
or
je
and
mov
mov
push
out
adc
cmp
shrb
mov
dec
add
push
cld
cmp
mov
xor
call
ficomps
jbe
mov
leave
push
add
mov
movsb
push
call
fists
mov
or
aad
dec
test
cmp
push
sbb
jmp
lea
repz
adc
pushf
addl
mov
mov
mov
mov
dec
add
mov
and
xadd
mov
mov
push
mov
packsswb
std
ljmp
add
xchg
mov
test
jo
mov
incl
daa
adc
or
push
cld
pop
or
subb
jl,pt
fildll
sbb
inc
popa
jmp
adc
cmp
dec
lods
ljmp
xor
and
xchg
add
add
test
fidivrs
add
mov
test
lcall
ficomps
cmp
test
push
mov
inc
outsl
or
sub
inc
dec
sbb
mov
push
pop
shll
sub
rcl
mov
into
pushl
sub
rolb
in
mov
mov
cmpsb
test
xor
pop
arpl
rolb
test
pop
jbe
cld
or
pop
rcll
mov
mov
mov
mov
dec
sub
push
or
ja
data16
mov
ljmp
dec
jge
sub
dec
mov
addps
inc
jne
int
in
rcrb
leave
and
push
jecxz
pop
lea
in
lock
in
lods
cmp
xchg
ja
push
rorb
xchg
sub
adc
loop
xchg
push
lods
pushl
lret
inc
pop
mov
or
mov
lahf
imul
shll
sbb
jg
add
sub
mov
cmp
ljmp
add
les
fsubrs
xlat
jmp
loope
add
sub
or
fisttps
lcall
mov
outsb
jmp
push
sahf
nop
xorb
jo
mov
repz
cmpsb
call
mov
shl
dec
push
jae
xchg
mov
sub
mov
xor
cmp
xchg
lret
push
lret
or
cmp
shrb
shlb
mov
stos
add
mov
mov
es
cmp
mov
popa
cld
inc
mov
mov
jg
imulb
mov
or
sbb
add
mov
and
addb
call
or
mov
xchg
mov
and
call
rolb
repnz
mov
dec
push
imul
xchg
andb
or
jns
shlb
xchg
sub
stc
jnp
lods
decl
cmp
push
or
mov
ret
clc
addb
pop
mov
incl
jl
fs
adc
stos
clc
inc
lcall
stos
jo
add
and
sub
ljmp
cld
test
push
repz
mov
adc
decl
test
decb
xchg
daa
inc
ss
pop
add
push
mov
std
incl
ret
shrb
lcall
mov
push
mov
jg
call
sub
sbb
andl
dec
adc
enter
mov
mov
sbb
or
mov
test
movsl
movsl
dec
adc
jns
inc
inc
cmp
int3
das
repz
add
push
fs
decl
movsl
mov
jb
ljmp
lcall
jg
hlt
xor
cmp
jo
jo
int3
jbe
ds
mov
cmp
call
sub
xor
xchg
sbb
inc
push
test
mov
out
cli
mov
push
iret
pusha
xor
jno
mov
in
je
incl
mov
ficoml
mov
popa
cmc
jno
and
shl
popl
fsubl
inc
mov
outsb
mov
and
pusha
out
mov
xchg
sbb
rcrl
mov
add
add
ljmp
nop
xor
rorl
sub
nop
lcall
ja
decl
insl
imul
addr16
test
insl
and
addb
or
cmpsl
rcrb
hlt
push
dec
or
ja,pt
fcoml
push
test
sub
incl
cld
dec
ficompl
dec
or
mov
adc
lcall
cmc
cmp
mov
lahf
lea
mov
sub
fisttpll
adc
repz
mov
dec
push
ds
leave
mov
pushl
xchg
repz
mov
addr16
pushf
icebp
je
xor
pop
ret
adc
mov
sbb
inc
sbb
call
dec
cltd
test
mov
fadd
pop
and
jmp
mov
cli
inc
ret
mov
lret
or
sbb
add
sub
mov
addr16
lea
add
popf
and
call
rolb
pop
jne
fwait
leave
lods
fisttpl
je
in
jbe
ss
fistpl
loop
jbe
jbe
mov
mov
jnp
icebp
das
mov
sub
and
scas
sbb
neg
loopne
ljmp
adc
loope
cmp
fsub
xchg
jecxz
aas
mov
pop
shlb
add
jge
xor
int
xlat
pop
or
neg
jle
sbb
mov
mov
pop
clc
aad
call
push
push
ja
js
inc
mov
add
icebp
and
test
jo
int3
cmpsl
sbb
inc
in
loop
cs
push
add
inc
shlb
ret
fs
and
push
sbb
mov
cmp
hlt
pop
hlt
shlb
mov
and
dec
xor
sbb
mov
xchg
mov
push
jg
or
bound
popa
in
scas
orb
push
dec
and
sub
xor
or
out
inc
repnz
cmp
test
or
mov
inc
jge
test
sbb
xchg
or
mov
mov
mov
lcall
test
test
imul
push
imul
test
cmpsl
pop
nop
mov
push
scas
test
dec
clc
add
ljmp
outsb
outsb
and
mov
xchg
mov
mov
mov
fcoms
loope
or
dec
shr
and
js
and
call
loopne
sti
insl
mov
int3
xor
adc
shll
inc
push
es
insl
or
jle
cmp
cs
sbb
sub
lcall
pop
inc
adc
jmp
add
xor
popa
sub
mov
das
mov
decl
dec
and
pop
cmc
js
xlat
pop
sub
pop
int3
test
pusha
insb
in
aad
lcall
cltd
sub
rcrb
int
cltd
into
inc
hlt
adc
xor
adc
jg
dec
and
jne
daa
xlat
fidivl
loope
adc
jmp
add
js
int3
add
dec
add
pop
xchg
jmp
add
stos
dec
enter
out
jmp
mov
sarb
in
call
dec
loop
je
call
pop
lock
daa
mov
and
or
xchg
sarb
jg
call
lahf
mov
xchg
mov
shlb
mov
mov
xchg
ret
mov
dec
mov
les
xchg
or
pop
call
setb
repnz
sbbl
jbe
push
and
push
pushf
sub
push
pop
and
sub
stos
and
decl
inc
xchg
mov
gs
gs
push
xchg
and
inc
and
jns
and
jns
cmp
ficoml
or
and
ja
mov
mov
push
inc
rolb
mov
call
rolb
dec
sub
or
decl
scas
or
rolb
sub
aaa
sbb
add
mov
inc
push
pop
adc
ret
clc
nop
xchg
push
imul
gs
sbb
and
loope
cltd
cli
adc
mov
orl
cli
incl
inc
pop
fiaddl
push
orb
mov
mov
sub
inc
xchg
xor
les
push
adc
add
jo
mov
xchg
orb
add
test
or
inc
sbb
scas
add
cld
add
add
adc
movsl
icebp
and
add
push
mov
ljmp
sub
movsb
and
cli
outsl
test
enter
cld
add
decl
loop
push
les
inc
add
xor
xor
mov
xor
repz
jbe
sbbb
ljmp
loope
insl
pop
dec
ss
mov
popf
sbb
je
test
xchg
frstor
fucom
jbe
mov
call
dec
and
fwait
cld
xchg
daa
stos
cmp
mov
sbb
in
cmp
rcrl
stc
fs
inc
mov
les
mov
call
cmpsb
popf
jl
xchg
in
xchg
fimull
fwait
add
test
aad
pop
jne
aas
in
push
lds
test
shl
inc
adc
ljmp
cmpsb
xor
add
add
popa
push
aad
loop
dec
inc
mov
shr
cmp
xchg
filds
pop
pop
es
arpl
mov
outsl
or
jmp
out
mov
std
stos
adc
and
and
inc
inc
stc
mov
nop
and
inc
pop
inc
push
inc
pop
loope
mov
jp
ds
xor
or
loop
xchg
fsubl
adc
mov
pop
loop
xchg
jg
insl
std
lret
xchg
das
xor
mov
test
mov
pop
mov
nop
lock
and
bound
and
les
call
and
inc
dec
sbb
imul
sar
push
mov
andb
in
adc
jl
mov
pop
into
cmp
inc
jbe
jge
mov
and
push
std
pop
insl
sbb
add
inc
jb
lea
or
add
jge
inc
lds
mov
add
incl
or
ret
lods
scas
pop
xor
cld
fidivl
sbb
adc
or
inc
mov
and
mov
inc
stos
rcrl
dec
ljmp
decl
stos
sarb
xchg
sbb
mov
aaa
outsb
push
or
cmp
jae
repz
cs
adc
push
pop
into
or
test
lods
shrl
ljmp
inc
cmpsl
call
outsb
pop
aaa
cmp
pushf
aaa
sbb
pop
xchg
add
push
xor
dec
sub
outsb
es
jne
and
in
xor
jo
mov
aaa
je
clc
sbb
mov
mov
std
and
aam
ljmp
push
cmp
scas
push
dec
jo
hlt
mov
and
jne
sub
call
jae
xchg
test
add
add
add
push
sub
and
fcompl
imul
and
scas
clc
pushl
ss
rcrl
inc
push
call
jo
mov
lds
or
shl
fildll
sub
mov
lods
cmc
push
lcall
fdivs
insb
ss
cli
fcomps
cmc
mov
mov
jp
insl
popa
xchg
ljmp
cmp
jbe
mov
or
int3
cmpsb
jne
ret
sub
adc
cmpsb
mov
into
xor
js
mov
add
lock
sbb
push
outsl
and
mov
sbb
clc
adc
data16
ss
scas
jp
and
jmp
movsl
bound
addl
addb
cmp
adc
in
das
jae
mov
sbb
mov
pop
push
ljmp
insb
fs
dec
jge
mov
adc
inc
mov
adc
cmp
or
ret
cwtl
sbb
int3
and
push
call
imul
and
lock
imul
cwtl
lret
inc
call
mov
arpl
repz
popf
pop
fidivs
lret
ljmp
dec
fdivrs
and
ljmp
push
loop
cmp
pop
sub
movsl
nop
or
or
inc
push
out
xchg
sbb
scas
scas
mov
jmp
inc
leave
rorl
incb
adc
int3
xchg
xor
cmc
js
inc
loopne
fwait
dec
out
cmpl
cmp
mov
int
xor
shrl
mov
std
lods
xchg
lea
push
lock
hlt
lret
push
pop
sar
shrb
cmpsb
jmp
iret
jge
jnp
cld
fidivs
sub
adc
hlt
mov
cmp
jmp
das
dec
shll
and
addr16
mov
fst
push
push
lcall
sbb
psrlw
mov
add
mov
lahf
and
pop
jns
and
sbb
push
mov
adc
sub
aam
lock
sbb
jge
pop
nop
mov
pop
jecxz
decl
xor
mov
cwtl
inc
outsb
mov
ds
mov
mov
adc
mov
ja
pop
sbb
inc
int3
or
fcomip
dec
xor
xchg
pop
sbb
imul
xchg
fdivs
and
inc
ret
add
or
insb
jecxz
pop
mov
cmpb
jl
int3
ss
dec
roll
pop
cmp
pushf
adc
adc
inc
loop
cli
xchg
sbb
fsubrs
jne
mov
cmp
test
inc
shll
insb
or
imul
add
les
push
jb
or
inc
push
je
jmp
ljmp
sub
int3
add
mov
js
mov
jo
inc
jmp
insl
mov
sahf
jle
mov
pop
loop
fs
decl
enter
outsb
sbb
sub
lcall
call
push
xchg
jnp
xchg
xchg
jno
xchg
lea
jmp
fchs
add
cwtl
mov
mov
adc
mov
dec
sub
jo
jg
adc
rcl
idivb
cwtl
push
stc
or
jmp
clc
clc
jg
call
dec
repz
ljmp
pop
cwtl
dec
movsl
xor
ljmp
xchg
dec
cltd
aam
add
pop
test
mov
or
jmp
lcall
popf
push
sbb
mov
shrl
dec
add
sbb
dec
repnz
les
repnz
jne
mov
add
pop
ds
ljmp
dec
inc
xchg
js
incl
std
cmp
repnz
out
push
fs
movsl
or
hlt
jmp
mov
push
mov
loopne
push
sbb
pop
push
sbb
pop
mov
dec
scas
and
mov
pop
shlb
mov
lods
mov
or
pop
add
js
mov
inc
push
enter
jg
jb
push
inc
sbb
add
or
adc
sbb
add
pusha
push
pushl
dec
pusha
mov
inc
add
mov
jg
mov
mov
xor
orb
or
dec
add
jp
xchg
add
aam
sub
loope
inc
inc
add
pop
sub
sbb
hlt
subl
into
inc
and
hlt
js
sub
add
js
inc
adc
xor
add
cmp
addr16
mov
js
addr16
shll
iret
sbb
cli
decl
and
rorl
inc
hlt
mov
add
mulb
ljmp
add
je
addb
jno
lret
cmp
dec
loope
and
dec
mov
cwtl
mov
loop
fsubrs
inc
loope
dec
jmp
mov
js
enter
fdivrs
aam
push
dec
jnp
push
stc
dec
in
lea
cmp
lcall
dec
push
lcall
sahf
xor
and
inc
orl
mov
push
inc
dec
lods
fisubrl
iret
mov
lcall
sub
pushf
lods
dec
fucom
cmp
sub
lods
rcrb
call
sbb
cltd
pusha
pop
inc
sahf
or
dec
cmpsl
lods
mov
pop
icebp
sub
cmpsb
mov
and
gs
mov
add
mov
jle
mov
push
sbb
out
xchg
push
arpl
lcall
push
jb
add
call
cld
dec
push
xor
mov
and
call
xor
lahf
cmp
fisttpll
inc
fildl
lods
imul
pop
outsl
xchg
and
les
sub
les
mov
mov
psrlw
roll
pop
ss
lcall
pop
loope
push
inc
pusha
les
fadds
cmp
pop
cmp
inc
jl
or
sbb
decl
loop
or
in
xor
inc
test
addl
mov
fs
add
sbb
sub
mov
pushl
mov
or
ret
mov
movsb
or
sbb
imul
lcall
add
sub
sbb
imul
cmc
in
xchg
cli
incl
adc
xor
data16
inc
rcl
push
pop
adc
jno
shll
cwtl
cmp
outsb
sbb
aad
dec
call
test
jp
fimull
lcall
mov
inc
jns
lea
test
sbb
lcall
adc
ja
mov
sub
icebp
ljmp
inc
test
or
cmp
or
out
in
outsl
nop
bound
call
filds
scas
or
mov
sub
call
push
jge
into
jmp
sub
add
mov
outsl
cmc
sub
xor
pushl
push
cld
incl
mov
lcall
mov
add
pop
xchg
add
jg
or
and
sahf
dec
xchg
or
rcrl
or
ss
call
incb
add
data16
ljmp
inc
push
mov
lret
inc
nop
stc
sbb
sar
decl
loop
inc
adc
popa
mov
int
pop
sbb
movsl
push
push
inc
fs
call
pop
sbb
insb
test
les
pop
push
incl
and
pop
fmul
and
fmull
std
imul
push
mov
and
cmpsl
dec
ret
mov
hlt
imul
inc
xchg
ret
inc
js
inc
in
shlb
xchg
jmp
test
in
loope
movsb
and
jg
mov
and
rcrb
es
js
mov
sbb
insb
add
inc
push
push
leave
sarb
es
xor
rcrl
mov
test
mov
push
or
adc
std
sbb
mov
ljmp
dec
xor
mov
or
xchg
xor
push
nop
hlt
push
inc
cmp
add
inc
insb
or
incl
je
lock
ret
xor
ja
xchg
mov
out
into
in
ljmp
test
in
popf
sbb
or
sbb
mov
add
decl
xor
jbe
mov
mov
pop
or
insl
mov
sbbb
dec
xchg
stc
bound
ljmp
fs
jg
mov
mov
cmp
sbb
push
jge
mov
add
push
not
out
mov
fwait
pop
cmp
pushl
sub
loop
mov
xchg
fcmovb
lcall
sbb
mov
xor
pop
in
arpl
lods
movsb
xchg
or
sbb
cli
pop
jno
scas
addr16
pushf
add
adc
lret
ljmp
adcb
push
jmp
push
xchg
or
xor
push
xor
push
std
call
rolb
in
sbb
outsb
mov
ljmp
jo
repnz
stc
adc
call
jg
daa
mov
xlat
inc
hlt
inc
and
and
cmp
test
mov
lods
sbb
hlt
ljmp
clc
xchg
stc
mov
inc
cmp
add
cmp
popa
mov
lcall
orl
and
out
test
push
ds
push
xor
or
inc
jecxz
inc
or
or
lds
mov
push
xorb
lock
pop
dec
pop
ret
loope
add
movsb
add
mov
add
sbb
or
jb
mov
cmp
stos
adc
ret
pushf
rorb
andl
insl
decl
jo
insl
pusha
mov
stos
cwtl
jno
shr
dec
jge
mov
pop
jno
out
je
cmpsl
fdivp
cld
lcall
fiaddl
jae
push
cmpl
inc
cltd
xchg
movsl
adc
sub
mov
pop
icebp
aaa
outsb
sbb
pushf
sub
pop
cmp
inc
lcall
mov
aam
call
xor
nop
icebp
jb
mov
pop
sub
repz
mov
aam
jge
fmuls
and
push
out
loop
push
adc
sbb
sub
pushl
aam
and
aad
in
repnz
ljmp
orb
push
cmp
mov
arpl
incl
xor
mov
mov
push
dec
jbe
dec
in
add
aad
pop
in
cmp
xchg
int3
push
dec
pushl
lret
or
jns
js
push
pop
push
ljmp
mov
addl
and
add
mov
aaa
fwait
call
arpl
jmp
aad
jno
mov
add
int3
pusha
iret
mov
rol
xor
xor
in
sbb
clc
data16
hlt
inc
add
fsubs
push
pop
dec
lods
loope
fsubs
mov
aam
sbb
aaa
cld
outsl
adc
test
jo
cmp
lock
leave
inc
push
add
cmp
fcmovb
pop
call
or
push
test
and
mov
inc
xchg
xchg
mov
jo
pop
clc
pop
dec
pop
or
stc
int3
roll
dec
shrl
inc
add
add
adc
out
push
xor
faddl
xor
ljmp
adcl
data16
jno
add
hlt
pop
add
push
jecxz
int
clc
mov
sbb
sub
push
jo
mov
pop
fwait
inc
loop
pop
push
cmp
xchg
xor
or
incl
cmp
pop
sbbl
cmp
xor
mov
fidivrs
xchg
out
cmp
add
push
pop
dec
fcompl
dec
fisttpl
pop
aam
or
call
int3
cmp
call
sub
mov
out
adc
jp
clc
dec
mov
fs
pop
pusha
mov
out
scas
mov
lcall
and
in
cmp
cltd
jp
mov
pop
in
loopne
lock
out
inc
or
movsb
push
ds
push
fisubrs
dec
inc
xor
mov
mov
mov
ja
pop
fsubr
dec
lock
xor
decl
pop
fstl
mov
jg
repnz
in
movsb
incl
xor
mov
sub
sub
adc
pop
ja
pop
mov
inc
jp
repz
pop
enter
inc
push
ret
cmc
push
inc
aaa
push
clc
ljmp
inc
std
fwait
movsb
out
mov
insb
int
adc
outsl
outsl
decl
mov
lods
fcoml
shlb
xlat
inc
cmp
bound
mov
xorl
jnp
cmp
add
and
in
fdivrl
cmp
jge
push
js
mov
jecxz
pop
int
aam
mov
fstpl
and
inc
inc
incl
and
lods
popa
rorb
mov
add
cmp
cmp
or
add
xlat
sub
int
ljmp
add
pop
inc
ja
mov
call
flds
mov
fiadds
dec
bound
sbbl
fildll
mov
dec
or
sub
fildl
in
pop
mov
sbb
cmc
in
jae
jb
push
imul
rcr
cwtl
shll
lock
call
mov
cltd
dec
ss
inc
ljmp
add
sbb
je
mov
fldt
stos
and
sbb
shrb
xchg
scas
cli
fisttps
push
pop
pusha
mov
or
popa
ds
push
gs
incl
cld
mov
or
pop
push
je
sbb
xchg
push
push
movsb
push
inc
jl
xor
call
sbb
dec
mov
ret
push
or
or
inc
lret
add
repnz
cwtl
xchg
mov
lock
fnsave
cmc
pushl
pop
test
jmp
and
sahf
outsb
shlb
incl
dec
dec
fwait
pusha
xor
jb
push
add
rolb
incl
hlt
xchg
repnz
loopne
sub
movsl
pusha
decl
bound
scas
push
outsl
dec
cmp
add
push
pop
out
pop
movsl
imul
cltd
cwtl
xor
test
pop
movsl
dec
test
inc
add
mov
xchg
inc
mov
adc
cmpsb
or
add
sub
inc
push
xor
jg
decl
bound
adc
jns
imul
push
push
into
popa
out
cs
hlt
fsubrl
aam
ret
pop
outsl
fistpll
call
and
jg
aas
jl
shl
or
or
sub
js
mov
inc
test
lcall
add
js
out
cmpsl
dec
fildll
jmp
xor
inc
mov
fdivl
xchg
add
sub
or
inc
mov
add
mov
jp
push
dec
loope
call
lcall
popl
push
xor
or
das
in
lods
mov
or
ljmp
xor
inc
cld
mov
sbbb
jae
rclb
mov
cmpl
mov
fadd
pushl
das
and
push
add
aas
cli
hlt
push
pushl
sbb
adc
je
dec
xor
fmull
pop
add
push
out
and
jmp
add
mov
add
fs
das
pushf
nop
lret
enter
clc
mov
mov
movsb
cmpl
and
inc
inc
inc
lods
mov
push
ds
inc
stc
jo
jbe
cmp
push
pop
cli
mov
push
sbb
mov
bound
push
sub
cld
bound
and
inc
xor
mov
push
dec
push
dec
mov
pop
xchg
lcall
outsl
sub
sub
ficoml
inc
mov
movsb
xchg
clc
nop
add
je
test
clc
call
ljmp
dec
roll
mov
test
stos
popf
pop
or
xor
pushl
mov
cwtl
inc
xor
es
pusha
mov
or
inc
call
fsubl
and
push
mov
es
jg
mov
mov
or
enter
in
mov
or
call
mov
and
pop
lret
popa
addl
sahf
xor
stos
sahf
adc
sub
jmp
sbb
shrb
mov
mov
fisttps
inc
adc
sub
inc
inc
roll
cld
aaa
jl
addb
pop
mov
jb
out
mov
mov
cmp
incl
mov
ret
inc
inc
xor
ret
cmpsb
cmc
incl
xor
insb
push
add
sbb
ljmp
int3
das
mov
outsl
or
out
lret
mov
push
ret
ljmp
pop
in
pushl
inc
or
in
and
inc
ret
pop
js
cmp
mov
mov
in
push
aas
in
clc
or
push
cld
sbb
cmp
fwait
aam
add
mov
outsl
clc
jg
popf
xchg
mov
push
jmp
inc
jg
push
push
sbb
inc
mov
lcall
and
add
or
pushl
test
dec
rorb
gs
adc
jle
js
or
adcl
in
rclb
adc
nop
loop
sbbb
add
add
mov
loop
insl
lods
pop
xor
push
bound
sub
out
or
cmp
call
jne
add
std
sub
adc
enter
push
inc
add
shrb
dec
cmp
jmp
add
test
fs
jecxz
mov
and
leave
sahf
mov
mov
mov
or
pop
inc
mov
pop
adc
or
xrelease
cmpsl
mov
dec
push
dec
add
sub
imul
and
inc
mov
adc
pop
jbe
push
jbe
jmp
sbb
cmp
and
jns
ss
mov
insl
insl
push
adc
movsl
mov
cltd
out
push
cmp
cltd
add
add
lcall
inc
ud0
inc
shlb
push
imul
das
cli
incl
dec
sub
pop
inc
mov
clc
adc
jns
jo
pop
jmp
adc
les
out
scas
inc
xchg
sti
push
sbbl
xor
inc
mov
out
add
cmp
cli
gs
jg
xor
push
cmpsb
loope
movsb
dec
cltd
cs
addb
lahf
call
mov
lcall
xchg
sub
sub
mov
rorl
xchg
ret
add
scas
xchg
push
test
in
add
lcall
fs
xchg
cmp
or
loopne
lret
pusha
aam
lea
andl
mov
mov
cmpsl
xchg
dec
test
xor
cli
jo
inc
sbb
xchg
xchg
jo
and
mov
xchg
push
mov
popa
stos
jg
add
push
sahf
jl
pop
xor
dec
dec
les
mov
inc
jno
sub
pop
adc
call
mov
imul
les
adc
sbbb
jmp
es
and
test
call
sbb
mov
xchg
cwtl
adc
mov
push
pop
adc
data16
mov
cli
aaa
rol
lods
sbb
xor
sub
stos
xor
sub
cltd
xor
ret
call
add
push
insl
imul
test
aad
and
ljmp
fisubrl
lret
in
shlb
mov
inc
lock
mov
sub
cmc
int3
inc
rcr
lods
mov
iret
pop
adc
lds
cmpsb
shll
imul
pusha
dec
decl
or
xchg
cs
mov
loop
xchg
mov
es
rol
xor
imul
dec
fstl
movsl
inc
dec
pop
push
ljmp
ffree
in
loopne
xlat
pushf
imul
addb
dec
enter
sub
hlt
and
jo
mov
decl
lcall
fcoml
or
sbb
stos
xchg
dec
jmp
dec
push
add
mov
cmpsl
ds
push
push
push
xor
ss
add
add
test
frstor
pop
test
push
mov
enter
xchg
ret
mov
das
mov
mov
fildll
stos
popf
rorb
int3
outsl
clc
fisttps
pushf
mov
insl
cmp
les
repz
call
xor
mov
ret
sub
mov
lcall
push
dec
sbb
mov
adc
sbb
ljmp
push
arpl
loop
lcall
ljmp
pop
hlt
inc
dec
add
nop
pop
and
addr16
bound
inc
push
jecxz
push
add
add
mov
sbb
add
leave
fsubs
inc
jns
push
dec
mov
out
push
int
sahf
pop
or
jmp
sub
decb
jg
hlt
mov
aas
bound
lea
jg
pop
dec
dec
inc
and
sbb
mov
and
jge
or
ror
xor
or
js
push
push
cmp
popa
test
ja
push
inc
sbb
test
xchg
adc
xor
mov
into
push
jle
movsb
and
insb
xchg
inc
repz
addr16
mov
dec
cltd
cli
jns
jnp
cmpsl
repnz
xlat
call
mov
push
cmpsb
ljmp
clc
rorl
test
push
imul
stc
movsl
dec
adc
jp
gs
lds
mov
inc
sahf
cmp
xchg
push
adc
decl
ret
xchg
and
push
stos
and
and
mov
mov
dec
int3
mov
mov
push
adc
jg
loope
pop
adc
push
cmp
shl
mov
int
fistl
divl
dec
mov
test
jnp
je
sahf
in
add
es
cmp
mov
xor
addb
clc
lods
shl
fnstcw
pop
fistl
inc
test
xor
insl
dec
fs
lcall
sti
adc
push
int3
xchg
aam
inc
loopne
jmp
sub
sbb
jbe
mov
jb
dec
shlb
das
and
push
cmp
lods
xor
arpl
shll
hlt
jg
xchg
mov
in
mov
hlt
push
sbbb
push
pop
outsl
ja
dec
mov
pop
ljmp
or
adc
mov
and
inc
or
pushf
mov
add
sbb
int3
sbb
decl
js
incl
les
mov
mov
loopne,pt
xchg
ljmp
mov
xor
or
xchg
xchg
mov
or
hlt
jp
pop
int
push
xchg
cmpsl
inc
rolb
cmp
push
push
sub
lds
sub
lods
rclb
push
lcall
add
enter
lret
addr16
nop
or
notb
std
jmp
or
push
cmpsb
and
lret
lods
dec
out
jo
jge
ljmp
pop
test
xor
sub
inc
pop
xchg
mov
pop
mov
mov
add
call
mov
jg
or
stos
sbbb
rcrb
lock
and
push
inc
aam
push
sar
or
add
and
divb
fistl
add
inc
mov
sub
inc
jmp
xor
loop
jmp
xchg
and
xchg
movlhps
pop
sbb
cli
mov
aaa
call
mov
imul
or
mov
sub
add
out
mov
xchg
jb
out
pop
jg
inc
cld
les
or
sub
add
inc
fisubrl
les
inc
inc
movsb
in
outsb
inc
ss
jno
movsb
outsl
shrb
adc
rcrb
call
roll
or
inc
jo
add
sarb
jmp
movb
add
iret
cwtl
loopne
xor
insl
ljmp
sub
mov
push
jp
add
adc
xchg
pop
addr16
adc
xor
stos
mov
mov
nop
and
jl
outsb
sub
or
sbb
shrb
jle
jne
outsb
inc
mov
rcl
lock
decl
xchg
mov
dec
rorb
hlt
out
mov
mov
das
sar
repnz
and
call
cmp
bound
xor
pop
rclb
pop
lods
mov
ret
ljmp
xchg
es
gs
out
jle
loop
cmp
pop
insl
bound
shrb
add
out
imul
pop
lock
call
sub
or
or
xor
scas
push
outsl
add
stc
nop
insl
das
or
pop
jl
repnz
mov
imul
sti
add
or
adc
clc
push
test
add
cmp
loopne
sahf
shll
cmpsb
inc
mov
jbe
xlat
pop
mov
int
movsb
add
mov
imul
inc
lock
fstl
pop
or
xchg
or
jno
movsb
inc
mov
cltd
cmp
call
pop
and
repnz
inc
sub
pop
sbb
int3
or
lods
out
sub
repz
out
and
cs
call
dec
lock
sbb
jbe
mov
les
adc
lods
inc
and
inc
jae
mov
mov
test
inc
decl
mov
ljmp
mov
sahf
loop
les
cmpsl
mov
es
ljmp
jg
ror
ds
stos
out
adc
lods
mov
test
add
mov
or
cs
xor
filds
push
incl
subl
cmp
ljmp
outsb
ljmp
add
daa
jp
mov
pop
push
xor
cmp
and
and
adc
sub
data16
icebp
decl
jge
mov
ret
add
insb
test
sub
xchg
dec
cs
push
or
in
and
ret
aaa
sbb
call
icebp
push
jmp
mov
push
pop
ret
or
add
add
mov
fadds
push
mov
inc
mov
call
jae
xchg
mov
decl
or
addb
xchg
add
mov
dec
xor
cmp
call
out
into
push
es
int3
jecxz
shlb
fmuls
lea
push
xchg
jb
jns
dec
decl
loopne
push
orb
loope
lret
and
xchg
hlt
insl
inc
xor
ljmp
adc
js
les
push
and
inc
mov
mov
fsubrl
or
and
mov
ljmp
cwtl
daa
and
scas
dec
or
loope
and
jg
ret
bound
outsb
xchg
test
shll
inc
ds
into
les
push
call
mov
test
xor
out
shrb
imul
loop
dec
add
or
push
push
jp
sub
clc
decl
mov
test
ror
es
scas
dec
adc
shll
decb
repnz
lods
into
push
rclb
mov
jge
and
push
sub
movsl
push
stos
pop
ret
cmp
fwait
inc
loop
hlt
push
mov
repnz
stos
push
pop
shrl
and
sub
ret
loop
out
clc
fcomip
xchg
lock
flds
inc
lock
xor
pop
std
ljmp
inc
jne
xor
push
xchg
arpl
fs
sbb
gs
mov
xor
scas
push
bound
shlb
mov
insl
test
jbe
out
push
test
sbb
das
cmpsb
dec
fsts
int3
jmp
js
testl
sbb
jo
pushf
lret
fs
cld
out
into
cmp
sar
pop
hlt
inc
mov
aad
sbb
cmp
push
or
push
pop
ljmp
lcall
loopne
push
jno
jmp
in
cmc
lcall
inc
adc
movsb
js
push
ds
stos
add
inc
stos
test
lcall
es
pop
shl
jbe
dec
dec
xchg
adc
dec
dec
dec
dec
jns
cli
sub
decb
addr16
les
lods
aas
sti
mov
nop
dec
aas
or
ljmp
in
jbe
js
push
dec
jmp
inc
pop
in
fidivrs
out
out
cli
mov
mov
mov
xchg
insb
mov
mov
andl
pushl
mov
push
jmp
dec
lret
mov
ret
pushl
and
sbb
or
leave
int3
test
clc
ljmp
mov
push
jle
push
dec
outsl
mov
and
or
pop
cmp
pushl
subb
push
adc
movsl
mov
lds
subb
hlt
pushl
add
push
pop
push
jae
mov
mov
imul
cmpsl
adc
imul
sbb
stc
or
cmp
pop
xchg
aaa
mov
mov
pop
xchg
ljmp
sti
pushf
insl
xchg
int
cmp
lcall
cmp
sub
add
sbb
mov
clc
jmp
mov
lret
je
add
fstp
out
cmpsb
jns
add
or
call
mov
xchg
adc
dec
sub
add
push
test
call
cmp
call
mov
inc
movsb
xchg
lcall
stc
inc
and
inc
repz
cmpsl
cmpsl
pop
mov
dec
jno
and
xchg
or
push
fwait
push
int3
in
inc
leave
mov
ds
and
ljmp
dec
jl
mov
jns
aas
push
inc
and
push
or
outsb
nop
jne,pt
mov
jecxz
cmp
or
ljmp
in
mov
outsb
add
das
sub
mov
leave
xchg
or
clc
cmp
mov
lods
mov
into
mov
les
inc
insl
mov
sbb
mov
mov
sysenter
pop
xlat
fcoms
ret
sub
and
sar
jns
jp
jb
sub
mov
std
pop
mov
stos
adc
fdiv
adc
nop
sub
jg
shrl
cmc
enter
pop
ja
cmp
idiv
fists
sbb
mov
pop
and
sbb
fwait
js
int
jae
xchg
push
dec
popa
jl
js
scas
push
int3
rorl
or
inc
pop
loop
addb
in
push
adc
push
xor
push
in
cmp
movsb
fucomp
add
insb
in
xor
insb
mov
jmp
jbe
fs
in
dec
data16
daa
mov
ljmp
dec
cli
dec
push
mov
xor
scas
cmpsl
xor
outsb
dec
xor
cli
lcall
fs
fmul
add
aas
xor
jns
mov
sub
sahf
jle
lahf
adc
mov
pop
loope
pusha
nop
adc
add
sbb
mov
jge
add
pushl
ds
jb
movb
iret
mov
out
push
mov
mov
push
out
jo
sbb
add
call
and
dec
mov
sub
adc
lret
int3
xchg
in
and
pop
mov
lret
mov
xchg
out
jle
insl
aad
clc
es
mov
cli
mov
and
or
cs
sub
incl
lock
lea
imull
mov
mov
add
call
idivl
inc
mov
inc
fwait
int
cmp
fwait
xor
popf
dec
int
cltd
into
ja
into
jecxz
sbb
jl
xlat
fmul
jnp
mov
cmp
stos
out
push
mov
cmc
lods
fnstenv
ds
pushl
push
in
scas
push
sub
test
cmp
inc
add
dec
dec
ljmp
js
pushf
push
cmpb
pushf
xchg
out
xor
jp
cwtl
mov
cmp
and
inc
or
das
out
and
inc
push
xchg
shl
decl
je
mov
daa
lahf
sbb
insl
ss
repnz
daa
dec
pusha
outsb
dec
or
adc
in
inc
les
je
ljmp
pushf
fldt
mov
mov
add
jg
test
fnstcw
ljmp
int3
in
mov
cli
movb
cmp
loopne
inc
test
imul
sub
xlat
sbb
fdivp
imul
faddl
pop
nop
push
enter
and
jmp
ret
inc
out
inc
xchg
inc
jmp
rcrl
cmpsb
outsl
jnp
sub
daa
sub
mov
mov
adc
sub
and
stc
lcall
sti
inc
add
pushf
mov
test
lcall
rorb
call
jle
cltd
ds
cld
xchg
shrl
jo
adc
scas
add
mov
scas
ljmp
loopne
cmpxchg
cmp
cmp
cmp
lods
imul
push
hlt
push
dec
inc
mov
adc
dec
push
loop
lcall
hlt
incl
add
adc
movsb
sarl
inc
in
cld
pushl
je
mov
loope
jmp
enter
cli
jae
fs
inc
call
lcall
cmpsl
outsl
bound
nop
bound
mov
mov
lds
mov
sti
xchg
ja
ds
ja
xlat
les
dec
bound
lret
jbe
daa
pusha
fldl
clc
adc
jge
push
mov
loopne
adc
ljmp
data16
nop
pusha
push
or
imul
sti
scas
pop
add
push
cld
xchg
clc
xchg
incl
push
mov
push
pop
ret
stos
call
xchg
xor
fldt
ret
push
jns
ljmp
test
rolb
xor
decl
clc
adc
test
bound
or
rolb
adc
fldcw
push
daa
or
insb
or
fs
sbb
jp
sub
in
mov
cmp
pop
mov
mov
leave
mov
iret
lahf
inc
pop
sbb
xlat
pop
rol
add
or
jp
je
xor
push
mov
cmc
call
mov
test
lea
xchg
mov
xchg
mov
outsl
mov
cmp
movsb
xchg
cli
adc
mov
call
mov
or
or
pop
pushw
cwtl
stc
inc
xchg
sbb
push
pop
icebp
in
push
pop
xor
jg
and
popa
push
sub
sbbl
fwait
std
dec
addr16
shlb
sbb
jg
pop
xor
in
mov
mov
lds
cmp
adc
xchg
out
adc
insb
sbb
jg
xor
cltd
lahf
xchg
int3
jo
sub
or
stc
movsb
xchg
pop
in
ja
cmp
das
adc
pop
pusha
jle
push
and
adc
ljmp
dec
or
add
aam
clc
call
pop
sub
movl
cld
incl
pop
mov
and
pop
xor
push
xchg
mov
je
roll
mov
je
adcl
push
xchg
sbb
adc
rorb
push
sbb
inc
aad
adc
lock
and
push
inc
adc
repnz
add
mov
mov
push
outsl
adc
pushf
call
dec
les
or
push
add
pop
aad
or
adc
call
ljmp
pop
fdivrs
rcll
sbb
out
incl
sbb
pusha
pop
sub
dec
add
in
or
bound
or
sbb
popa
xchg
lods
jae
mov
jmp
lcall
sbb
inc
xchg
test
mov
fdivl
cmp
push
popf
arpl
xchg
jno
insl
jbe
insl
mov
rol
addr16
shll
imul
mov
sbb
insb
jo
imul
insb
fsubrl
pop
jbe
cld
incl
sub
mov
mov
sbb
iret
loop
in
jl
mov
sub
ficoms
xchg
jg
adc
inc
sbb
inc
in
decl
dec
cli
ret
rcrb
rclb
gs
xor
pop
or
decl
jp
xor
push
mov
popa
or
cmp
xchg
pushf
jae
or
cld
jg
mov
jl
cmc
clc
roll
or
mov
or
and
bound
mov
insl
les
inc
sbb
sub
fiaddl
ret
inc
push
mov
sub
jg
lea
out
or
popf
and
roll
repz
rorl
xchg
rolb
cli
dec
rcrl
fisttpl
std
xor
xor
pushl
decl
gs
mov
push
dec
jbe
stc
out
fbstp
xchg
cmp
cld
mov
mov
imul
jg
xchg
lods
imul
push
sub
imul
shlb
es
pusha
cmpl
mov
xchg
pop
sub
nop
push
xchg
fiadds
xchg
mov
mov
icebp
fs
inc
cmpsl
sub
inc
sbb
shll
sbb
call
loopne
mov
fisttpl
pop
repz
cltd
jg
imul
loopne
mov
mov
mov
mov
cld
mov
leave
add
jns
stos
lahf
jb
roll
push
pop
add
ja
rcr
es
filds
or
lret
sahf
xorb
pop
and
inc
dec
enter
inc
push
test
in
mov
incl
es
jmp
mov
pop
inc
test
pop
andb
or
add
adc
outsl
subb
or
out
inc
fstps
jecxz
ret
jmp
ss
jno
or
cmp
and
out
inc
call
repnz
decl
and
leave
or
xchg
test
mov
xchg
mov
cmp
lods
xchg
pop
jmp
xchg
sub
pop
mov
inc
add
jb
aad
pop
decl
or
lods
mov
in
out
daa
inc
lds
push
sbb
pushl
hlt
xchg
push
lock
into
push
outsl
inc
xchg
mov
fldl
sub
pmuludq
inc
sub
pop
push
sar
add
mov
jl
ret
lcall
jmp
jge
arpl
and
xor
leave
xor
test
pop
push
cltd
je
push
inc
incl
adc
sub
jae
aaa
cltd
sar
call
ss
enter
push
cld
sub
rol
call
outsl
xchg
loop
movsb
and
test
fs
cmp
jg
add
es
dec
adc
sar
sbb
repnz
mov
scas
adc
mov
aam
ret
ret
pop
cs
lret
out
lods
xchg
stos
stc
inc
xchg
cld
fadds
pusha
or
jmp
cwtl
outsb
movsb
push
mov
sub
cwtl
or
mov
or
xor
lcall
dec
xchg
les
and
ret
pop
loopne
in
rorb
jge
sub
push
pop
stc
cwtl
sbbl
jmp
fmul
push
pop
iret
xlat
push
cmpsl
pop
les
adc
sahf
mov
rorb
inc
repz
jo
mov
dec
jecxz
ljmp
xor
lock
and
arpl
adc
loop
xor
mov
and
lds
jg
int3
jno
sbbl
jno
fwait
movsb
jmp
cld
xchg
sub
push
and
gs
int
xor
js
or
hlt
pop
loopne
mov
push
nop
mov
lret
rclb
xor
mov
xor
dec
jle
inc
jb
dec
cli
filds
dec
xchg
or
jl
mov
or
mov
push
loope
pop
mov
or
enter
mov
movsl
xor
lcall
ljmp
gs
outsl
inc
jb
mov
mov
call
sub
roll
sti
test
aad
dec
repnz
rcrb
push
das
xor
loope
sbb
pop
test
push
test
xorb
addl
mov
cmp
add
fildl
pop
fldl
or
clc
mov
call
ret
push
cltd
out
ret
and
sbb
xor
pop
jmp
incl
repnz
inc
pusha
mov
repz
and
pushf
imul
and
cmpsb
xchg
pusha
cmp
decl
xor
push
imul
jge
dec
xorl
rorb
stos
jecxz
xchg
mov
andb
xlat
test
and
xlat
push
aad
test
cli
push
xchg
sub
jno
call
je
push
into
mov
mov
and
dec
push
pop
mov
sbb
inc
push
test
jp
clc
inc
out
jbe
xchg
shl
or
jb
inc
mov
jmp
mov
sbb
ss
call
leave
lret
xchg
scas
dec
xor
sti
push
inc
cmp
es
popl
dec
popa
out
mov
sub
scas
jmp
push
scas
or
add
nop
xchg
xor
jg
aaa
push
dec
bound
idiv
mov
je
inc
lods
xchg
add
clc
mov
cmp
cmp
iret
or
imul
ret
enter
outsl
pop
jmp
inc
push
xor
das
inc
jg
push
mov
pop
stc
loop
das
mov
push
cmpsl
dec
out
jmp
jl
rcrl
loopne
es
shl
sbb
dec
add
cmp
mov
ret
sti
insl
add
push
data16
mov
xchg
cmc
cs
dec
pushf
xchg
aam
add
push
dec
daa
pop
cli
mov
inc
mov
popa
fcmovnb
cmp
movsl
mov
bound
insb
repz
mov
hlt
icebp
outsl
jge
cmp
cmp
pushl
adc
dec
js
xacquire
std
call
imul
pop
mov
loope
cmc
aaa
dec
ret
out
mov
lcall
jge
lret
fdivs
negb
dec
dec
pop
push
clc
pop
ds
outsl
in
popf
push
lcall
add
sbb
xchg
rclb
icebp
cmp
xor
and
push
xchg
jns
adc
dec
pusha
repz
cmp
inc
sub
pop
or
jmp
jae
push
xchg
jmp
pop
or
sbb
inc
jne
mov
add
and
jecxz
ljmp
addr16
mov
repnz
mov
cmp
loope
test
push
jbe
icebp
jg
addr16
sbb
cs
and
ret
and
je
add
test
pop
add
incl
cwtl
add
adc
ret
enter
xor
push
stos
es
sub
inc
outsl
mov
or
adc
cs
cld
push
cld
inc
xchg
js
or
bound
push
dec
push
sahf
daa
incl
sub
dec
push
dec
insb
test
icebp
or
mov
insl
repnz
mov
adc
scas
jp
jmp
push
and
xchg
sub
scas
add
outsl
insb
ss
jge
sbb
jle
ss
push
jge
out
call
jg
mov
in
cmpsl
mov
pop
jle
idivl
addr16
clc
jle
cmp
jle
sarb
std
push
jg
outsl
ret
lock
sub
addb
sub
cmpsl
sbb
xchg
and
add
decl
std
jne
adc
cmp
cli
out
or
mov
daa
push
jbe
cmpb
jae
cld
fsqrt
test
add
faddl
scas
jbe
ret
push
fldenv
pop
xor
push
loop
sbb
repz
adc
lcall
jmp
imul
arpl
add
push
mov
inc
jmp
imul
add
or
mov
xor
cmp
pop
decl
xorl
shll
push
js
out
push
xorb
in
push
add
call
jno
test
push
pop
pop
pop
pop
into
aad
pop
les
call
out
inc
jl
shrb
std
ljmp
in
aad
cltd
ret
pusha
and
adc
jg
outsb
mov
cmp
pop
sbb
insb
ret
mov
push
cmp
std
jg
push
inc
outsl
sbb
jg
dec
jo
cmpsb
and
call
cmp
in
out
sbb
jl
loop
mov
adc
mov
dec
xlat
adc
ja
dec
ljmp
cli
mov
std
inc
push
dec
jg
adc
xlat
and
cli
jno
mov
fcmovnu
lea
inc
bt
cmc
lock
jo
test
jmp
adc
mov
jae
cmp
mov
cld
ja
add
and
mov
add
je
xor
mov
aaa
cmp
cmp
int
sub
adc
leave
jb
push
lcall
pop
js
ljmp
xchg
push
outsb
dec
push
pop
lahf
mov
sbb
mov
cld
jmp
lret
out
loop
mov
mov
js
push
sbb
jns
test
clc
popa
pop
out
mov
xlat
je
popa
xor
out
mov
sbb
sbb
sbb
mov
sbb
popa
dec
popa
daa
imul
xor
lret
add
std
and
push
lods
mov
notl
jge
enter
popa
add
or
aaa
ljmp
lret
scas
sub
and
mov
mov
cmpsb
lcall
fists
out
lret
xchg
je
nop
outsl
lret
push
jg
inc
orl
mov
push
cmpsb
sub
jge
mov
ret
mov
and
sbb
or
test
mov
xchg
imul
cmpsl
js
outsb
xor
mov
in
inc
dec
fidivrl
sub
fmuls
std
decl
fwait
test
mov
fwait
out
add
mov
loopne
addr16
test
xor
push
pushf
inc
xor
arpl
cmp
je
ss
call
stos
mov
add
add
and
pop
push
rorl
pusha
popf
mov
push
push
push
in
pop
jmp
and
lock
or
dec
sti
les
fnstcw
ds
pop
lahf
inc
push
addr16
incl
pusha
repz
xchg
jno
roll
and
aam
dec
sbb
add
in
mov
movsl
cli
call
push
aas
cmpsb
mov
ret
loopne
ljmp
dec
mov
addr16
sbb
sbb
mov
cltd
cmp
icebp
sbb
dec
shrl
das
clc
outsl
xor
movsl
sti
ja
pop
outsl
in
cmp
add
ljmp
mov
push
xorl
movsb
fwait
mov
and
mov
aaa
sbb
scas
jle
pusha
xor
or
jg
pushl
aad
xchg
cmpsl
sbb
notb
pop
cmp
and
arpl
shlb
mov
sbb
cmpsl
mov
inc
sahf
xchg
stos
stos
ljmp
xor
add
jl
mov
sbb
mov
test
cld
data16
lret
mov
mov
mov
mov
jmp
or
pop
xchg
leave
pop
jge
sbb
xchg
into
jle
push
out
xchg
jl
cmpsl
pop
and
pop
adc
push
hlt
mov
pushl
rorl
dec
adcl
mov
in
idivb
iret
test
sbb
out
or
test
ds
aam
mov
sub
lds
rorl
fwait
dec
or
mov
jmp
mov
test
mov
mov
aaa
pop
imul
mov
mov
push
dec
jnp
adc
cmp
xchg
das
mov
sbb
call
cmp
icebp
call
adc
dec
test
xchg
inc
and
flds
jl
ss
dec
xor
fists
cmp
xor
push
push
xchg
or
inc
sbb
xchg
add
hlt
call
dec
inc
push
pop
jno
icebp
xor
push
mov
lods
popa
add
cmp
pushl
push
jae
jle
jo
mov
inc
adc
jbe
arpl
ret
dec
xorb
add
adc
push
test
xor
mov
ret
and
mov
mov
pop
mov
jg
push
add
mov
and
jl
or
sub
int3
inc
insb
lods
push
insl
dec
jb
or
xor
jnp
sub
push
dec
jp
cmp
mov
mov
mov
jns
cmp
leave
fdivrs
xlat
cmp
adc
lcall
push
cmpb
stos
les
rcll
mov
mov
pop
hlt
push
dec
xlat
inc
sub
lods
fildl
test
sbb
incl
xchg
roll
cmp
loop
sbb
in
adc
lahf
mov
sbb
test
nop
mov
hlt
mov
sub
sbb
call
inc
in
sub
xchg
inc
xor
das
mov
imul
push
loopne
mov
lods
push
push
mov
js
movb
movsb
je
clc
fcomip
mov
loop
jle
push
shlb
adc
aad
gs
ss
mov
adc
jo
fdiv
or
inc
sub
cmp
or
and
call
xchg
xor
xchg
add
adc
sar
jmp
push
pop
lds
xchg
mov
cmpsl
loop
adc
cmp
adc
inc
pusha
ja
push
adc
aaa
or
rcrb
and
bound
jnp
leave
mov
jg
jmp
and
int
push
les
sahf
sbb
xchg
inc
popa
adc
test
pop
jle
ret
divl
push
mov
aad
adc
aad
sbb
push
mov
mov
mov
push
popf
jl
add
cmc
imul
mov
cmp
push
jle
ljmp
mov
daa
cwtl
rclb
mov
mov
clc
cwtl
jae
push
push
sub
pop
bound
add
leave
cmp
mov
ljmp
or
sbb
or
ljmp
mov
sub
xor
add
lods
lock
sbb
jb
sbb
addr16
inc
out
clc
in
push
pop
and
bnd
push
pop
gs
scas
xchg
pop
out
xchg
sar
lcall
stos
mull
push
lcall
gs
jb
xchg
xchg
fnstsw
push
xor
imul
sub
enter
jno
out
fdivrp
inc
in
ljmp
rcrl
call
add
insl
fisubrs
fiadds
xor
dec
xor
pop
fs
dec
sub
call
ret
roll
pop
cld
mov
icebp
mov
call
cmp
xchg
pop
sub
aaa
inc
inc
in
push
push
push
mov
les
cmpsb
push
outsl
ret
pop
sub
fildll
call
ret
das
rclb
adc
pusha
sbb
incl
lret
inc
adc
and
xor
cld
mov
cltd
adc
inc
mov
mov
pop
ret
movsl
pop
cmp
mov
out
out
push
pop
adc
add
js
outsb
or
insb
aad
pop
cwtl
push
and
sti
sub
mov
incl
nop
sub
imul
loope
and
js
jb
in
shll
lcall
push
lret
in
das
mov
adc
fst
jecxz
mov
push
incl
or
cwtl
inc
mov
lret
je
int
rcrl
mov
cld
pushl
pop
sub
and
lock
xor
decl
iret
aaa
nop
xorb
ret
jno
sti
les
repz
into
or
scas
adc
pop
xchg
loope
add
add
loop
sbb
jmp
std
sub
ds
add
decl
lock
cmp
xchg
dec
loopne
mov
pop
in
fildl
filds
jmp
dec
add
stos
adc
and
bound
lahf
push
xchg
leave
xor
test
decl
pushf
pop
adc
xor
adc
adc
push
dec
and
stos
roll
inc
sbb
push
cwtl
roll
adc
cs
daa
std
mov
fbld
lret
cltd
inc
jle
imul
or
dec
into
les
jl
div
or
outsl
clc
jmp
mov
stc
cwtd
mov
lret
mov
sbb
pushl
loope
jbe
and
cmp
push
xor
push
mov
jmp
orb
pop
cmpsl
and
jns
out
xchg
inc
pop
xchg
sbb
mul
fadds
call
sbbl
clc
int
mov
pop
dec
dec
mov
mov
mov
push
cld
jae
and
xchg
mov
loope
fisttps
hlt
dec
mov
jg
xchg
xchg
and
pop
mov
lret
inc
ficompl
mov
cmp
jbe
jecxz
adc
cmp
xor
mov
fadds
jecxz
pop
out
sbb
movsl
fdivrl
std
lcall
ficoml
jecxz
and
or
test
stc
insl
fdivr
mov
in
fimuls
out
scas
and
xor
sub
cmpsb
and
ljmp
outsb
inc
and
or
sbb
mov
jcxz
ljmp
sar
frstor
xorb
incb
std
arpl
mov
sbb
hlt
into
pop
adc
or
inc
or
xor
enter
inc
mov
sub
or
cmp
push
ret
adc
jecxz
xchg
mov
pop
icebp
loope
or
xor
decl
stc
xchg
and
add
and
jne
adc
add
add
aad
jbe
pusha
add
adc
imul
mov
jo
pop
mov
les
cltd
cmp
push
cwtl
fxch
aaa
inc
fidivrs
lcall
push
test
sar
jb
icebp
pop
pop
sub
push
xchg
inc
xchg
jne
jmp
decb
outsb
pusha
xor
mov
pop
push
cmc
pushf
fprem1
jecxz
cs
pop
sub
jne
jmp
inc
mov
jae
cmp
loopne
pop
mov
incl
add
xchg
insb
out
jmp
mov
sbb
pop
lds
movsl
test
pop
xchg
dec
ret
xchg
jmp
mov
rcrl
jo
sahf
aas
aaa
add
std
out
stos
mov
adc
add
pop
mov
adc
push
pusha
xor
out
inc
cmpl
scas
fnstsw
in
nop
das
inc
add
pushl
enter
adc
adc
pusha
xchg
mov
push
mov
out
sbb
xor
pusha
std
ljmp
sub
dec
mov
mov
xchg
jg
enter
lcall
mov
stos
jmp
add
or
dec
sub
xchg
adc
or
pop
push
incl
dec
xor
stos
add
repnz
or
lds
and
lahf
mov
repnz
imul
mov
lock
sbbb
mov
leave
mov
les
jp
sahf
jl
jle
jge
push
mov
call
push
push
dec
pop
shlb
daa
push
popa
std
dec
sub
and
add
pop
and
push
test
add
stos
aaa
insl
cmpsb
mov
push
or
call
imul
inc
lock
aam
stos
inc
cmp
pushf
fmuls
out
mov
ljmp
scas
repnz
into
test
stc
rorb
out
pop
push
pop
mov
inc
shll
das
push
ret
ret
insl
ret
out
sti
bound
or
and
dec
cmpb
scas
mov
sub
push
ss
mov
mov
dec
inc
movb
andl
or
add
mov
iret
mov
sti
cli
lret
call
or
imul
jle
ljmp
mov
mov
ljmp
lret
push
mov
inc
mov
or
lcall
ja
mov
mov
insb
rol
jns
adc
sub
in
sbb
or
call
adc
mov
or
jmp
xor
sahf
or
lret
cltd
test
mov
and
push
clc
pop
dec
and
mov
lds
xor
inc
inc
dec
push
cli
mov
lock
cmp
dec
dec
std
pop
pusha
inc
je
push
clc
fwait
mov
sbb
call
jb
xchg
pop
jg
jp
mov
outsl
xor
in
outsl
pop
adc
sbb
mov
xorb
jp
add
int3
aas
or
mov
pop
jg
loope
add
sub
mov
sub
in
cwtl
aam
lds
stc
dec
arpl
mov
sbb
lods
daa
aaa
nop
jbe
xor
aaa
xchg
cli
ljmp
mov
loopne
hlt
aad
adcl
xchg
or
dec
or
or
movsb
jg
out
mov
daa
adc
test
push
dec
jae
mov
gs
outsb
adc
pushf
sti
incl
in
cmp
mov
sbb
jae
push
rcrl
out
lea
pushl
pop
push
test
dec
xor
sbb
mov
push
adcl
leave
icebp
mov
hlt
call
add
nop
mov
cmp
jle
incl
nop
cmp
mov
and
decl
cmp
dec
pushf
jae
push
mov
dec
dec
jle
pushf
lcall
cmp
dec
mov
push
push
scas
dec
inc
xor
pop
je
fcom
sub
cmp
mov
inc
clc
cmp
rcrb
je
push
cmp
and
jnp
lock
mov
push
push
push
jmp
xchg
leave
sub
xor
mov
add
xchg
cmp
leave
adc
fucomip
push
add
lcall
pusha
pushf
dec
push
imull
movsb
movsb
out
jge
sbb
mov
outsb
outsb
mov
sub
xchg
std
pop
mov
ret
pop
cld
mov
and
subb
incl
lods
insl
imul
leave
cmp
lods
pop
pop
loope
mov
test
adc
movsl
xor
push
out
jb
xor
pop
enter
and
ljmp
rorl
call
or
dec
into
adc
xchg
and
fbld
sub
in
imul
loope
clc
mov
ret
das
adc
and
insb
cmp
add
push
pop
sub
test
hlt
or
or
cwtl
out
sub
push
data16
sarb
xchg
jno
push
mov
dec
jecxz
jbe
add
add
or
xor
daa
inc
and
incl
sub
sub
clc
push
and
mov
jp
push
mov
sbb
ja
lcall
call
push
pop
test
adc
in
push
cmp
into
xchg
ret
lcall
dec
enter
fidivrl
xor
gs
repnz
ds
ljmp
or
sbb
dec
dec
pop
push
fwait
andb
mov
and
movsb
pop
nop
lock
xchg
adc
in
shrb
das
movsl
cmpb
cwtl
pop
idivl
ja
incl
jmp
pop
test
std
call
fdivrp
dec
rclb
dec
xor
jg
ret
subb
lock
push
cli
aam
or
dec
icebp
lret
call
push
xchg
lds
or
orl
or
jecxz
in
push
adc
pop
push
lds
push
lds
scas
ljmp
jmp
pop
into
addl
andl
pushl
es
out
mov
adc
or
ss
shlb
push
xchg
out
adc
cmc
mov
or
repz
mov
and
mov
nop
nop
mov
push
jb
lds
jmp
sbb
in
shl
push
pop
mov
mov
lds
imul
mov
in
enter
or
adc
push
outsl
lods
add
ljmp
inc
sub
xlat
dec
imul
xor
cli
call
mov
jns
adc
lods
mov
jmp
push
xchg
stc
int3
pushf
jo
sti
and
or
push
adcb
xchg
dec
lock
pop
outsl
cli
jg
pop
sbb
mov
adc
fwait
push
ror
aam
ljmp
lods
loope
sahf
movsb
jnp
inc
inc
pop
adc
lods
call
push
fbstp
pop
rcpps
je
jg
subb
scas
and
mov
ljmp
xor
or
outsb
push
incl
and
or
in
lods
scas
test
or
sub
pop
sub
or
incl
xor
lods
xchg
or
call
out
cmp
inc
mov
int
add
pop
dec
inc
call
std
call
mov
sub
push
pop
test
lock
mov
ljmp
enter
dec
pop
movsl
inc
ficompl
mov
push
mov
mov
jb
jp
call
sbb
popa
mov
mov
movsl
scas
aas
lock
ljmp
push
cs
xchg
adc
push
add
mov
jbe
in
or
mov
xchg
mov
sub
and
push
into
mov
jno
jg
incl
mov
fxch
sahf
pop
mov
ficoms
imul
clc
jg
push
scas
in
loope
rolb
sbb
call
push
or
pop
mov
gs
dec
mov
mov
push
add
adc
mov
ljmp
mov
movsl
fmuls
or
cmp
jo
sbb
adc
clc
jle
pop
fucomi
repz
add
test
pop
jge,pt
call
ss
xor
test
idivb
push
xchg
sub
mov
fidivrs
gs
mul
mov
loop
repnz
adc
ljmp
orb
mov
mov
sub
pushl
push
xchg
xor
add
cmp
cmp
add
sub
scas
sti
cmp
mov
rorb
mov
mov
push
sub
or
add
repnz
js
into
enter
sbb
incl
nop
lea
das
ljmp
sub
scas
or
mov
icebp
mov
jns
int3
or
cmp
decl
jns
mov
xor
mov
jo
mov
orl
dec
stos
and
and
adc
lcall
stos
jmp
stos
adcl
idiv
pushf
nop
rol
and
scas
cltd
les
mov
cwtl
sar
pushl
mov
lds
outsb
push
outsb
xchg
mov
test
jo
adc
mov
xor
cs
cli
cs
adc
shlb
ret
push
jge
lret
xchg
push
ljmp
repz
jle
stc
aaa
xchg
sahf
call
jmp
outsb
incl
xchg
mov
cmp
pop
mov
cmp
pusha
mov
rcrl
mov
loop
mov
cmpl
call
inc
xchg
xchg
push
into
adc
sub
xchg
and
aaa
cmp
incl
ss
xchg
xchg
movsl
push
test
cmp
pop
insb
and
push
cwtl
sti
mov
cld
fadds
fwait
sti
mov
jae
popf
mov
sti
jo
xchg
push
jmp
decl
or
adc
rolb
sbb
push
cltd
in
sub
add
push
dec
decl
inc
push
lods
loop
lcall
or
jg
sbb
xor
cmp
and
ret
adc
adc
sahf
loope
movsl
and
nop
sbb
inc
sarl
cmp
add
push
cmpsl
inc
and
ljmp
or
les
mov
and
lret
xor
sbb
pop
xchg
and
lock
cmp
lods
inc
loope
pushl
fcom
push
mov
mov
jecxz
arpl
das
sar
sub
movsl
sub
jp
popf
stc
adc
leave
adc
sbb
push
fcomip
jmp
and
or
xchg
xchg
jmp
cmp
aas
dec
and
lcall
ds
test
jnp
or
or
lret
imul
popa
call
xchg
adc
fnsave
xor
imul
scas
pop
decl
das
xchg
js
cmpsb
add
mov
sbb
xchg
imul
sbb
push
jg
jo
std
fstps
sti
icebp
pop
and
mov
test
inc
rolb
or
or
cld
call
in
mov
in
xor
bound
mov
cltd
ror
mov
inc
or
xor
popl
mov
add
enter
cmc
sub
jns
xchg
pop
push
enter
enter
adc
outsb
shl
jo
and
clc
subb
push
ljmp
jg
stos
je
lahf
xor
mov
mov
sub
and
xor
orl
pushl
popl
mov
out
nop
adc
dec
ret
mov
ret
sbb
xchg
xchg
mov
pop
popf
or
int3
pushl
inc
inc
inc
popf
push
iret
mov
add
lods
push
jns
sarl
sbb
ljmp
ss
clc
inc
sub
sahf
lock
fcomip
adc
pushf
pushf
mov
leave
xchg
pop
icebp
xchg
xor
add
ljmp
xor
cwtl
xchg
in
dec
dec
pop
mov
pop
lock
int
aam
jnp
jl
mov
and
jnp
decl
insl
cli
or
outsb
mov
push
andl
and
decl
mov
call
pop
sbb
jge
int
inc
mov
push
in
cs
ss
xchg
iret
ficoms
or
add
jg
pop
sbb
sub
add
xchg
or
jmp
sbb
cli
clc
test
jno
rcl
mov
mov
inc
mov
test
std
stos
das
mov
into
push
mov
xor
mov
test
hlt
sub
jl
push
lcall
sbb
aam
lea
cmp
xchg
cld
decl
cmp
mov
mov
or
push
int3
into
push
xchg
lods
sbb
fstps
mov
or
out
shr
xlat
call
adc
fidivl
test
enter
fisubrl
push
lcall
fstp
lods
mov
lods
std
and
pop
cld
rcrl
xorb
dec
das
cli
fistl
pop
rcll
lods
sbb
add
mov
scas
andb
pushf
dec
loope
inc
ljmp
ljmp
pushf
test
into
dec
mov
pushf
or
jno
pusha
jmp
js
pop
adc
ljmp
push
scas
sbbl
add
ss
hlt
lds
shll
loope
jmp
rcrl
push
repnz
xor
jns
sbb
xchg
ljmp
or
add
and
in
and
ja
xlat
ljmp
enter
movsb
mov
into
lods
loopne
mov
pop
pushl
adc
cmc
pushl
add
mov
mov
cmp
mov
lock
cwtl
rorl
mov
adc
cmc
xchg
clc
mov
aad
lcall
ljmp
mov
loop
mov
push
inc
mov
or
incb
and
bswap
push
adc
in
pop
je
add
into
add
js
push
int
cwtl
lcall
ljmp
shrb
mov
cltd
pop
outsb
pop
outsb
mov
pop
clc
xchg
andb
call
pop
and
pop
or
dec
or
pop
or
bound
dec
push
test
sti
shll
call
adc
pop
das
bound
or
mov
pushl
mov
mov
adc
push
adc
pushf
cmc
and
fldenv
cmp
cmp
jmp
sbb
imul
int3
sbb
mov
push
mov
lcall
push
push
mov
les
rolb
jg
pop
sub
ror
bound
pop
pop
jg
js
mov
jp
frstor
adc
imul
mov
or
ja
mov
inc
dec
movb
add
adc
jp
ljmp
xchg
jge
and
xor
cmpb
push
sbb
inc
outsb
adc
mov
fisttps
mov
add
and
adc
push
cld
or
adc
adc
dec
ljmp
rcrl
jg
dec
mov
mov
and
sbb
pop
mulb
das
jb
push
mov
ja
aam
cmp
or
cmp
decl
cwtl
xchg
xor
or
test
cli
in
stos
and
pop
jl
dec
mov
out
cmp
or
bound
mov
test
xor
jmp
pop
sub
das
sbb
jmp
jmp
adc
cmp
sub
popa
cs
imul
movsl
sub
dec
popf
xchg
test
das
sub
or
sub
add
or
int3
inc
jmp
dec
pushf
add
outsl
cli
lcall
int
enter
call
mov
inc
sub
gs
decl
gs
movsb
sbb
notb
and
mov
movsb
or
js
mov
mov
pushl
setnp
dec
xchg
xchg
add
sahf
pop
inc
rolb
je
adc
xlat
bound
jo,pt
cld
mov
lock
xchg
mov
sbb
clc
mov
mov
stos
call
xor
and
test
mov
decb
or
mov
cmp
dec
pop
in
mov
cmp
xor
jmp
loopne
xchg
imul
sub
test
movsl
std
or
decl
jl
test
mov
idivb
mov
stos
sbb
aam
mov
sub
cwtl
mov
andb
pop
pop
test
stos
push
mov
push
scas
enter
ljmp
ljmp
insl
mov
mov
scas
pop
cmp
lcall
mov
inc
mov
pop
mov
mov
dec
or
mov
arpl
int
popa
pop
lods
push
orl
mov
int
mov
stos
xchg
inc
push
orb
pop
mov
pop
loope
pop
mov
data16
cmc
bound
pop
test
gs
ljmp
push
aad
inc
shlb
cmp
push
test
cmp
or
hlt
push
xorb
fcomip
pop
scas
int
rcll
mov
ja
repnz
lea
loop
jne
icebp
jp
imul
mov
fildll
xlat
sbb
cmp
bound
fisubrs
cs
jge
test
call
lock
popf
decb
rclb
mov
ljmp
or
jmp
cli
add
out
mov
int
and
aam
hlt
fisubs
jmp
call
adc
outsl
sti
sbb
push
ljmp
adc
pop
add
decl
inc
mov
pop
jns
xor
xchg
data16
mov
sub
bound
rorb
sub
xorl
sti
stc
jmp
iret
jo
daa
loop
push
sub
pop
add
lcall
mov
xor
cmpsb
cmpsb
ljmp
lret
add
daa
sarb
cmp
xchg
lea
movsl
aam
mov
fcompl
jnp
pop
and
js
imul
call
aad
dec
cmp
and
pop
dec
das
fidivrs
aas
jnp
pop
clc
jmp
out
enter
jne
xor
js
or
cmpsb
in
xchg
sub
jb
jns
mov
dec
mov
mov
or
js
cmp
sbb
lcall
pop
cs
cs
dec
popf
cld
or
mov
orb
push
xor
jo
or
test
fs
pushl
test
in
cmc
jne
adc
xor
pushf
int
sub
fnstenv
xchg
clc
call
adc
nop
dec
adc
sub
std
and
ret
out
cmpsl
xor
ljmp
xor
sbbl
and
ret
mov
mov
fidivrs
jge
pop
push
mov
jl
or
stc
fmuls
or
psrad
bound
sbb
fidivrl
adc
jbe
in
cmovp
bound
jg
jle
ja
aas
ljmp
jg
xor
fwait
hlt
lret
cmp
cmp
mov
pop
add
or
insb
and
sbb
mov
push
loope
cmp
sbb
lods
pop
push
dec
inc
xchg
sub
dec
inc
mov
daa
outsb
les
incl
pusha
inc
cmpsb
bswap
add
mov
js
out
mov
ljmp
nop
pop
insb
lret
push
mov
mov
add
push
sub
inc
mov
fbld
jmp
xor
inc
mov
orl
lods
scas
xchg
rorb
enter
jb
mov
mov
xor
mov
xchg
sub
inc
add
ret
shll
or
popf
lods
cld
sbb
add
jo
add
cmpsl
add
mov
pushl
add
pusha
mov
push
incl
inc
sub
test
pop
or
faddl
call
out
adc
int3
adc
outsb
fmull
sub
sub
adc
push
or
pop
int3
test
stos
sub
cmpsb
jecxz
dec
dec
ja
cmp
pushl
cs
mov
jne
and
outsb
push
repz
aam
mov
push
jno
scas
loop
js
adc
addl
push
xor
pop
mov
mov
or
jg
push
or
inc
enter
out
sbb
mov
mov
sub
cmp
xlat
sbb
pushf
mov
movsl
push
mov
lret
jp
jb
and
xor
add
add
loope
loopne
addb
or
xchg
jo
add
gs
pop
data16
popa
shlb
adc
jbe
out
loop
mov
loope
cltd
jno
test
cmp
push
or
pop
fwait
popa
cli
sbb
pop
loopne
es
js
xor
jbe
sbb
pop
ss
dec
sbb
jne
shrb
cmp
pop
std
jmp
add
sub
push
adc
inc
dec
mov
cwtl
dec
adc
dec
jmp
loope,pt
adc
insl
xchg
push
dec
call
sbb
push
roll
inc
xchg
dec
cmp
sub
dec
and
mov
adc
dec
mov
in
pop
imul
xchg
pop
push
in
push
bound
jge
test
int
push
cmp
mov
lea
push
or
leave
add
lcall
xchg
in
push
adc
nop
push
cs
cmp
sbb
fistps
fwait
jns
movsb
adc
fstl
popf
adc
dec
inc
inc
sbb
idiv
mov
insl
mov
mov
mov
ljmp
enter
data16
pushf
jb
in
movsb
sbb
stc
cmp
dec
call
clc
stos
pushl
pop
jns
and
loope
mov
mov
pushl
lods
inc
movl
mov
sub
in
push
inc
or
mov
loopne
mov
sub
pop
xchg
pop
push
repz
mov
fisttpll
cs
mov
jg
fdivs
jb
loope
sub
pop
pop
jns
leave
xchg
adcl
sbb
sub
pop
movsl
les
add
stc
cmpsb
call
push
mov
fbld
inc
ret
in
dec
call
lahf
out
lcall
shr
jb
fidivrs
xchg
lods
popf
mulb
push
sbb
pushl
cmp
mov
in
daa
repz
cmp
daa
std
mov
sbb
cmpsb
fsubl
filds
or
and
xchg
push
stos
jmp
in
lcall
incl
inc
loope
insb
inc
movb
stos
adc
push
dec
mov
das
fstps
aas
inc
push
pop
inc
or
push
xchg
testl
mov
test
jge
lret
hlt
orl
or
cli
cmp
or
jecxz
mov
inc
xor
int3
cmpsl
mov
xchg
jl
outsl
jbe
cli
das
les
ret
les
mov
lcall
and
pop
pop
in
xchg
xchg
mov
fldl
mov
pop
xchg
pop
fbld
push
fbld
add
cmp
test
ret
pop
add
sbb
add
xchg
xor
mov
or
adc
lcall
sbb
inc
sbb
jmp
mov
push
mov
xchg
hlt
sub
loopne
or
pop
dec
push
frstor
and
jae
out
dec
inc
fistps
and
imul
daa
sub
cmp
and
sub
xchg
add
pop
push
ja
shlb
jns
aad
mov
mov
jmp
test
push
sub
pop
cmp
sub
cs
cmp
popa
push
test
decl
fcmovnu
inc
adc
js
in
jl
sub
jne
ljmp
and
or
imul
incl
clc
jns
xor
cmc
ss
movsl
push
fbstp
call
inc
push
test
lods
mov
inc
enter
add
or
pusha
cld
push
rclb
mulps
mov
addl
sbb
xchg
and
mov
inc
xchg
lcall
pop
and
das
insb
xor
cs
jmp
adc
call
stos
loop
mov
bound
pop
xchg
and
imul
clc
inc
nop
outsb
pop
xchg
or
clc
stos
add
xor
adc
pop
mov
adcl
fbld
bound
orl
push
dec
mov
mov
ljmp
inc
mov
fld
mov
int
push
xchg
and
adc
out
push
and
dec
roll
or
shrl
and
fimuls
sbb
push
or
jns
cmpsb
in
push
xchg
ret
mov
or
fisubs
leave
mov
and
fbld
mov
fmulp
fcmovnu
pushf
push
inc
fidivs
or
imul
lret
loopne
or
xchg
sahf
or
roll
dec
icebp
sub
mov
sbb
test
rorl
ret
jl
sbb
cmpl
shrb
movsb
movsl
xor
lcall
loop
std
mov
inc
adc
jp
dec
adc
fcomip
outsl
pop
loope
test
pushf
adc
cli
push
adc
jecxz
xchg
incl
mov
dec
inc
aas
cwtl
les
xor
or
xchg
into
movsb
jle
bnd
nop
incl
push
dec
mov
mov
out
mov
aaa
arpl
fcomip
incl
pop
push
popa
mov
rcl
gs
xor
inc
and
mov
sub
ljmp
outsl
adcl
or
mov
pop
dec
pop
dec
mov
and
pop
adc
gs
out
clc
inc
cmpsb
mov
mov
sbb
adc
or
or
fsubs
pushl
add
adc
movsl
inc
xorl
cli
decl
jo
sbb
rorb
int3
adc
fcomip
push
xchg
xor
addr16
sbb
jbe
sahf
push
push
mov
cmpsb
ljmp
mov
jne
fxch
cmpsl
jmp
fsubrl
fucomi
ret
lock
cli
pop
cmc
lcall
fs
mov
xchg
dec
jae
xchg
sbb
and
jle
ljmp
mov
sti
jle
mov
out
jmp
fnstcw
xchg
adc
push
es
jecxz
pop
popf
dec
or
and
add
fistpl
ficompl
inc
push
mov
dec
pop
pusha
sub
es
sbb
inc
jmp
push
fisubs
xchg
xchg
iret
out
dec
call
dec
sbb
addr16
out
push
mov
lds
push
jg
incl
xchg
and
fdivrl
popa
mov
fiadds
stc
xor
mov
leave
inc
mov
popa
lds
add
push
cmp
sub
aas
mov
add
jg
pop
fldenv
jmp
cs
pusha
cmp
inc
mov
mov
mov
xor
xchg
nop
lds
das
push
enter
jbe
stos
add
mov
or
sub
add
imul
xlat
or
repnz
shl
pop
popw
sub
push
test
decl
sbb
push
xorb
fnsave
mov
aaa
xor
sarb
movsb
xor
sar
dec
and
cmp
test
xchg
popf
int
into
ficompl
mov
outsl
dec
mov
gs
mov
hlt
mov
xchg
jmp
dec
push
pushf
fcoms
cmp
cli
ret
in
leave
mov
sub
sarb
fs
jnp
in
sbb
pop
insb
jmp
pushl
push
xchg
sub
inc
mov
dec
push
push
movsb
cltd
pop
shlb
dec
add
shl
sar
enter
add
cmp
fistpll
test
out
fcomip
or
in
lods
or
into
lds
jb
popf
dec
pop
mov
or
pop
jne
movsb
mov
mov
xchg
adc
add
pop
dec
decb
cld
sbb
cmc
pop
dec
pop
sahf
les
push
mov
or
mov
cwtl
dec
adc
add
jmp
cmp
pop
movsl
dec
mov
push
dec
lds
mov
incl
push
pop
push
jge
push
sub
mov
mov
test
dec
test
sbb
push
and
add
xor
mov
jl
adc
mov
fs
incl
mov
pusha
gs
push
mov
cld
lcall
test
sub
outsb
or
jno
es
incl
cs
sbb
rcrl
in
jnp
pop
loop
push
movsl
mov
subb
push
out
aad
xchg
dec
lea
jl
aad
inc
js
and
jo
jl
push
and
call
mov
pop
jb
dec
nop
jl
sub
bound
pop
mov
mov
dec
test
das
cli
aaa
std
mov
frndint
xchg
cwtl
xchg
jbe
jecxz
xchg
dec
xor
xchg
fistpll
sarl
pop
push
loopne
cmc
push
dec
les
call
cld
jmp
cltd
dec
call
and
sarl
cmp
mov
inc
xchg
idivb
gs
add
mov
ficoms
add
and
fidivrs
fildll
test
xchg
hlt
hlt
push
roll
mov
push
test
pusha
cltd
dec
jmp
loopne
mov
inc
fcmovbe
adc
pushf
dec
adc
adc
mov
fld
rorb
pop
adc
rclb
out
decl
pusha
loopne
mov
mov
mov
popl
hlt
lret
xor
pop
mov
inc
push
loopne
sbb
insb
xorps
sti
lods
push
add
fcomps
xchg
pop
pusha
es
fcomp
fildll
inc
mov
test
pop
pusha
test
push
jge
incl
sub
gs
add
andb
xchg
cmp
inc
inc
sar
jg
dec
loop
inc
cwtl
push
out
js
sbb
leave
je
bound
jo
ret
jg
out
movsl
mov
sbb
jne
enter
iret
clc
push
xor
or
pushl
enter
inc
imul
je
jo
dec
jge
fwait
push
cs
pop
icebp
cmp
movsl
test
pop
loop
cmp
imul
fdivr
jg
test
nop
and
aam
fs
incl
ret
dec
cli
sbb
test
addb
decl
jb
add
xchg
sbb
pop
jle
aas
push
ret
out
mov
fcomip
mov
adc
push
mov
in
aam
fwait
push
pop
in
jo
sarl
sbb
lock
decl
xchg
cli
out
lods
cmpb
dec
mov
dec
je
sar
inc
femms
sbb
jbe
lret
fadds
hlt
incl
movb
jge
dec
lock
ljmp
and
dec
add
push
mov
push
add
aam
mov
movsl
add
inc
jle
loope
push
in
sub
jmp
xor
and
lcall
jg
lret
inc
sbb
mov
mov
pop
push
les
lcall
mov
jmp
out
and
lds
cli
decl
popf
stc
insb
sbb
xor
inc
cld
xchg
pop
sbb
out
add
push
addl
xlat
data16
addr16
mov
push
xchg
pusha
adc
dec
test
sbbb
out
pop
inc
call
jmp
push
lods
aad
sub
mov
enter
push
bound
std
push
and
fldt
aaa
xor
ss
jne
fldt
mov
lods
sar
jmp
lock
xchg
or
jnp
push
stos
popf
xchg
outsb
repnz
inc
xchg
mov
loope
push
insb
mov
cmp
xchg
loopne
iret
hlt
push
outsl
outsb
adc
decl
xchg
jmp
sbb
ficomps
imul
fs
repnz
add
cltd
sbb
rcll
inc
test
lcall
adc
ss
mov
or
in
push
fwait
lock
pop
cld
incl
enterw
pop
movsb
dec
push
xchg
jns
popf
dec
mov
les
pushl
add
call
push
call
jne
in
jl
mov
loope
pop
imul
xchg
push
and
sub
xchg
ror
aam
and
lds
cli
insl
adc
arpl
add
pushf
dec
pop
ror
dec
jg
decl
test
movsl
pop
mov
mov
add
sbb
add
add
iret
dec
movsb
fists
fisubrs
scas
mov
or
incl
lahf
je
adc
repnz
sahf
mov
fdivp
adc
lahf
xor
jmp
dec
lods
stos
outsl
mov
or
mov
pop
mov
push
outsb
inc
aas
fisubrs
inc
mov
fnstsw
mov
dec
lock
lea
mov
mov
cmpsl
ja
fcomip
pusha
or
mov
jle
aam
loop
cmp
popl
mov
jne
dec
in
outsb
dec
jae
shlb
inc
lods
push
out
dec
xchg
adc
cmpsl
mov
inc
imul
jl
sub
cwtl
aam
xorb
aam
std
ss
xor
ja
jbe
ljmp
neg
pusha
fs
pusha
pushf
hlt
lods
test
decl
mov
mov
in
add
mov
fs
push
fcmovb
push
lret
mov
pushf
aas
xor
lret
cmc
pop
fcoms
test
or
add
jp
add
popa
sub
lret
je
test
add
insb
in
pop
mov
jmp
call
pop
mov
cmp
inc
in
xchg
add
ss
xlat
push
out
xor
filds
dec
in
in
mov
mov
dec
inc
lcall
mov
les
lds
xchg
nop
push
lods
add
inc
push
das
push
adc
and
pusha
bound
inc
push
mov
pop
mov
fbstp
push
shlb
or
lea
pmaxub
rcrb
and
dec
test
lock
pushl
dec
cwtl
popf
mov
pusha
sub
jmp
mov
push
mov
lds
mov
je
call
enter
cmp
sti
rcrl
mov
xor
fildll
aam
lcall
call
das
fimull
and
mov
mov
xor
xor
daa
movsl
mov
pusha
xchg
es
mov
or
sbb
add
cli
adc
outsb
in
mov
add
call
sub
pop
pusha
mov
rcrb
and
insb
xchg
add
out
mov
jnp
add
call
and
call
aas
push
call
ja
mov
mov
inc
xor
sbb
xchg
cmp
cmp
rorb
xlat
pushl
xchg
sbb
enter
int3
sub
test
and
in
scas
mov
decl
pop
in
jmp
test
je
in
xchg
and
in
pop
mov
or
cmp
rcr
xchg
inc
xchg
push
adc
push
or
adc
xor
push
jmp
adc
dec
inc
pop
cmpsl
outsb
xor
faddl
lds
incl
orb
lret
push
and
mov
pop
gs
pop
mov
lcall
enter
test
adc
pushf
movsl
and
test
xor
mov
push
mov
adc
lcall
jbe
cmc
bound
repz
test
decb
ljmp
pusha
adc
or
inc
scas
.byte
.byte
xchg
.byte
fstpt
xor
ret
nop
test
jne
push
mov
test
jp
je
dec
sbb
mov
add
xor
xor
add
test
je
mov
cld
dec
es
je
and
pushl
push
je
jmp
in
dec
lea
sub
ret
or
std
cld
push
decl
shl
sub
lea
push
movl
or
push
call
adc
pop
add
mov
add
dec
jne
pushl
add
loopne
mov
mov
pop
lea
push
lea
or
ret
movsb
dec
mov
pop
add
in
mov
in
or
jmp
push
dec
push
jb
je
arpl
sti
jmp
bound
imul
add
movb
push
jmp
pop
cld
lock
push
mov
add
test
jle
add
subb
push
fnsave
mov
pop
lea
mov
inc
push
stos
push
adc
push
add
adc
or
jge
pop
sbb
jne
mov
orl
arpl
mul
push
add
sub
hlt
std
adc
sbb
adc
leave
push
int
add
pushf
fldl
fisttps
and
fstpl
pop
repz
adc
adc
xchg
push
aad
in
nop
fldl
mov
sub
jg
fsub
shl
jmp
outsb
add
fcomip
ja
dec
and
test
jne
ds
je
cmpb
lahf
mov
add
adc
or
cmpb
inc
ret
test
fwait
decb
sub
and
popa
adc
or
sbb
cmp
call
jne
sub
add
ss
jne
jl
sbb
shl
push
lods
mov
jge
adc
add
jmp
push
jecxz
add
cltd
cmpsb
pop
lods
aam
lret
les
ret
sbb
adc
push
jo
mov
pushw
fsubs
mov
pop
and
fcomps
add
mov
cmp
arpl
lods
stos
testl
xchg
hlt
mov
push
fisttps
mov
add
sub
or
mov
cld
insb
or
mov
or
cmp
mov
or
sub
lock
xor
popf
lcall
or
cli
pop
push
inc
call
push
stos
add
push
cld
push
mov
add
repnz
pop
pop
aam
or
movsb
movsl
push
sub
fmuls
insb
in
jo
call
sti
push
push
mov
pop
push
push
mov
mov
add
jg
pop
enter
je
imul
jmp
mov
cmp
jnp
add
xor
sbb
adc
out
or
test
mov
into
or
push
add
and
adc
int
jo
push
cwtl
leave
and
add
cmp
cmp
add
cmp
sete
outsl
shlb
les
dec
xchg
ds
icebp
inc
daa
bts
cltd
add
add
sub
icebp
lock
push
dec
je
pop
pop
stos
daa
test
lret
repz
dec
or
push
nop
sub
push
or
lret
pop
inc
mov
loopne
in
ss
cs
push
push
xchg
add
adcl
hlt
add
and
pop
in
stos
rorb
fadd
and
pop
dec
inc
lods
adc
pop
adc
mov
or
dec
cmpsb
pop
mov
and
add
or
mov
mov
cld
cmp
rol
add
mov
iret
xor
push
mov
pushf
push
idiv
mov
or
pop
hlt
hlt
addb
fimuls
or
or
call
xor
loopne
dec
cmpl
bnd
add
in
mov
xchg
pop
lods
sub
xor
or
push
cmp
jne
test
testb
or
clc
add
out
clc
mov
or
xor
aam
lock
mov
inc
mov
jg
jecxz
push
popa
xor
fnstcw
data16
in
lahf
mov
or
push
fldcw
fistpll
insl
inc
inc
xchg
stos
in
mov
dec
addb
fbld
fiaddl
aaa
hlt
scas
rolb
pusha
lret
mov
xchg
mov
mov
mov
dec
and
push
mov
aam
int
call
sbb
pop
cmp
mov
movsl
loopne
add
inc
hlt
int
mov
cmp
or
pop
dec
in
xor
dec
mov
mov
xor
call
outsb
sbb
scas
xor
pop
sbb
xor
mov
fildl
fstpl
sbb
fstpt
loopne
inc
loopne
fcoms
and
daa
fadds
inc
aam
push
pop
into
in
push
rol
and
adc
lcall
rcrb
leave
xchg
pop
jae
add
add
rcrb
push
xchg
lds
push
or
faddl
pusha
nop
jmp
add
xchg
fdivl
shll
rcl
enter
push
pop
enter
nop
xchg
in
les
or
mov
pushl
fldpi
add
push
dec
xor
test
movsb
rorb
pop
push
adc
pusha
sub
rclb
mov
sti
lock
or
add
leave
cmp
mov
inc
xchg
sbb
mov
test
leave
ret
cmp
dec
insl
shlb
pop
xor
enter
hlt
lock
ljmp
in
adc
adc
clc
pop
das
or
sbb
out
test
sbb
lock
enter
mov
adc
add
jg
inc
and
xor
hlt
push
add
dec
lret
xchg
out
ret
add
sub
pop
test
cmc
fisttps
xor
push
aaa
xor
jns
jnp
pop
out
push
cmp
push
sbb
pop
je
and
pop
jo
or
hlt
mov
mov
or
insb
adc
xchg
popa
push
mov
pop
movsl
out
lea
push
lock
xchg
daa
cwtl
and
jne
mov
nop
cs
rorl
xchg
or
sbb
fsubrl
xor
push
outsb
inc
add
aaa
pop
pop
mov
rep
or
insl
mov
adc
sbb
incl
cmpsb
out
add
test
call
push
push
mov
jno
sar
cmp
jg
pusha
push
push
std
and
jns
add
pop
cmp
jl
pop
mov
fmuls
add
addl
xor
fdivrl
cmpb
or
fsubrs
call
cmc
aam
fadds
mov
aam
adc
nopl
test
add
aad
push
test
fcmove
in
icebp
jmp
pop
push
mov
adc
mov
inc
fldcw
sbb
pop
fistpll
cli
adc
pop
ret
or
pop
mov
dec
or
sbb
out
adc
cmp
das
rcl
aas
cld
jae
sbb
fcomps
fildll
hlt
xor
xlat
ds
or
inc
mov
adc
pop
dec
cmp
lret
addl
push
fisubs
inc
das
lds
dec
jecxz
enter
lret
xchg
inc
sbb
pop
and
loopne
addb
dec
or
push
loopne
rcrb
xor
and
in
inc
scas
pusha
add
add
movb
push
inc
pop
mov
adc
inc
xchg
filds
adc
push
lds
pop
push
dec
insb
jne
jbe
call
outsb
call
insl
push
loopne
add
dec
push
add
incl
xor
sbb
inc
sbb
orb
and
xchg
add
pop
jb
push
shrb
test
fisttpll
and
loop
push
fdivrl
push
mov
cmp
sub
loopne
xchg
les
lcall
and
jb
xor
loopne
xchg
pop
xchg
ret
inc
sub
push
dec
addl
sub
cmpsl
lock
mov
movb
xchg
pushf
push
add
sub
mov
leave
mov
aad
shlb
ret
xchg
jne
push
or
xor
add
adc
xchg
int3
adc
les
addl
pop
sbb
orl
and
rolb
or
test
xchg
call
fwait
xor
sbb
inc
cli
push
xchg
ja
es
bound
sub
repz
loope
inc
or
jmp
adc
mov
jb
sub
or
xchg
dec
lcall
xor
add
cltd
push
cmp
add
ret
push
lods
pop
frstor
push
jnp
mov
inc
ret
sub
jecxz
sub
xchg
xchg
pop
lcall
push
pop
test
mov
ret
and
cmp
inc
mov
pop
movsb
nop
arpl
push
int3
sub
ret
popa
mov
adc
pushw
pop
nop
imul
or
add
je
push
sbb
sbb
rcll
dec
sbb
xorb
or
dec
adc
adc
fisttpl
dec
cmp
and
pop
aas
add
lods
rep
mov
fiaddl
add
dec
cld
mov
aad
cld
mov
add
sbb
fs
push
push
pop
cmp
cld
mov
xchg
cmpsb
imul
shll
adc
sbb
sub
xor
test
mov
or
sub
orb
mov
or
xchg
jo
push
cld
mov
fldl
faddl
mov
rol
mov
add
mov
popa
ds
addr16
mov
les
aad
or
jb
in
adc
sbb
mov
dec
repz
rcr
loopne
mov
bound
push
cld
lahf
fcompl
add
pop
loope
mov
movl
das
loop
inc
addr16
je
or
add
lock
jnp
subl
in
jge
scas
push
push
or
daa
push
jne
pop
xchg
jae
scas
subb
cmp
popa
scas
sbb
mov
or
sub
adc
popl
cld
imul
cwtl
in
push
and
push
mov
mov
sbb
xchg
aas
xchg
fildl
adc
push
jnp
push
hlt
cmp
aas
add
clc
push
rorl
mov
mov
inc
pop
fdivr
pop
xchg
adc
or
sbb
adc
xchg
aas
orb
or
ss
addb
lea
cmp
mov
push
jno
and
add
movsl
push
add
mov
ss
jp
call
mov
pop
pushf
stos
js
ret
pushl
push
xor
jbe
sbb
aam
mov
dec
int3
int3
add
mov
shrb
movsb
cmp
inc
outsb
dec
dec
out
mov
push
in
movsb
movsb
xchg
ret
or
cmp
xchg
imul
xchg
adc
mov
inc
mov
test
faddl
or
je
popf
insb
and
or
movsl
sub
test
je
fchs
fcompl
popf
push
sbb
push
mov
rclb
jbe
stos
jecxz
sbb
inc
pushf
pushl
inc
inc
add
add
loope
add
add
out
push
shll
adc
lock
jmp
in
ret
mov
push
push
inc
mov
es
sbb
pop
pop
pop
cmpsl
ljmp
ret
push
and
push
and
jne
mov
inc
add
mov
inc
mov
ret
pop
cs
sti
push
mov
jmp
add
jo
cld
icebp
add
fcoml
shlb
shlb
fsts
push
inc
ficompl
ret
mov
pop
pusha
stos
mov
je
add
mov
out
pop
mov
clc
mov
inc
jb
inc
add
sbb
cmp
sti
and
cmpl
xor
subl
pop
loopne
test
mov
inc
pop
les
test
xchg
mov
jb
inc
bound
movsb
rorb
test
mov
inc
add
rorl
cltd
push
or
aaa
xor
xchg
clc
or
adc
fildl
push
in
fdivl
mov
xor
push
mov
pop
dec
jno
or
sub
nop
flds
test
inc
xchg
jge
xchg
xchg
jl
xchg
mov
cld
test
jb
dec
inc
push
xor
mov
cmpb
lods
dec
sbb
adc
in
pushf
push
repnz
call
mov
testb
xchg
dec
mov
xor
ss
sbb
inc
jae
cmc
push
insb
roll
repnz
mov
adc
mov
cmp
jmp
inc
or
mov
inc
or
ljmp
and
or
adc
and
loopne
fdivs
inc
and
mov
add
roll
ljmp
or
leave
adc
fwait
rcrb
push
sbb
xchg
and
mov
aas
clc
movsb
xor
cwtl
js
inc
inc
scas
or
subl
int3
push
popf
push
and
test
sti
or
lock
lahf
in
pop
adc
adc
dec
into
push
shll
and
mov
and
fadds
xor
dec
add
nop
cmp
call
int
cli
cmp
inc
xor
rcrl
dec
mov
push
shl
and
ret
nop
loopne
and
nop
dec
fistpl
mov
and
fisubl
icebp
decl
pop
push
loope
push
mov
lret
adc
shrb
movsb
in
js
add
stos
dec
inc
sub
xchg
or
sbb
imul
aam
xchg
jl
gs
pop
lods
mov
rorb
xor
lods
movsb
movsb
fmull
mov
add
sbb
mov
jg
xor
pop
xor
ljmp
adc
mov
inc
fcoml
std
dec
xchg
push
int3
mov
add
sbb
imul
sub
mov
mov
mov
or
les
out
push
call
or
les
pop
add
dec
pop
fwait
and
push
mov
call
mov
add
adc
inc
xor
loope
pop
and
test
push
xor
pop
dec
jne
lods
sbb
fisttpll
leave
aam
xor
dec
add
lahf
adc
sbb
ss
mov
add
sarl
and
jae
and
dec
xchg
mov
fstpl
bswap
or
mov
mov
mov
mov
add
mov
inc
cmpsb
sub
lock
rolb
js
in
clc
push
cmp
add
sbb
inc
xchg
pushf
xchg
sub
add
enter
xor
leave
adc
inc
xor
mov
cmp
fs
cmpsb
inc
adc
dec
mov
push
test
push
enter
add
push
xor
jl
xchg
sub
pop
adc
pushf
cmc
add
enter
outsb
push
inc
in
push
xchg
lahf
outsb
hlt
addr16
xor
ret
repz
jne
je
or
push
add
rol
or
and
pusha
xor
sbb
stos
fs
mov
cltd
out
dec
mov
jnp
movsb
rorl
or
xor
xchg
sbb
pop
adc
leave
mov
int3
sti
icebp
dec
pusha
inc
mov
out
loopne
push
cmp
movsb
pop
adc
out
cld
mov
xor
in
mov
or
or
and
repz
cmp
dec
in
lock
outsb
ret
int3
fstl
sbb
test
or
nop
js
adc
ret
orl
bound
or
sub
sub
cld
shrb
imul
add
aad
inc
or
fildl
fstpl
fisttpll
fsubl
push
jbe
cmp
insb
in
inc
pushf
and
cmp
sub
in
sbbl
add
mov
cld
xor
push
hlt
mov
add
movsb
mov
xorb
mul
insl
popa
jmp
sbb
add
je
cmp
add
call
pusha
mov
sbb
dec
inc
fstpt
jmp
mov
dec
scas
and
jg
adc
mov
sbb
push
dec
popa
mov
ret
shll
mov
mov
orl
bound
mov
cltd
dec
scas
nop
or
hlt
pop
dec
sub
dec
nop
dec
xchg
jbe
pushl
jg
push
push
jmp
jg
xor
sbb
xchg
xor
jg
sti
add
arpl
andl
pop
dec
inc
pusha
sbb
ss
xor
cmpsb
xchg
or
orl
pusha
shrl
rcll
push
fwait
cwtl
or
inc
jb
cmp
xlat
test
or
stos
or
jmp
push
push
shl
push
push
push
repnz
push
mov
push
push
clc
sbbl
xor
cmp
clc
pop
add
xlat
insl
mov
push
and
enter
add
cmp
rclb
cli
sub
rclb
loope
shlb
rcrb
in
push
inc
mov
sti
dec
add
or
jb
and
clc
pop
push
sub
sbb
or
adc
in
and
imul
add
sbb
push
in
add
mov
add
inc
or
adc
daa
xor
es
push
cld
lea
jle
test
into
dec
insb
clc
shl
in
fs
cmpb
and
nop
xchg
es
push
and
lock
dec
cmpsb
dec
jl
or
test
push
iret
mov
or
aaa
dec
xchg
pop
adc
or
adc
or
test
mov
mov
test
add
cmp
mov
hlt
push
jge
scas
fistl
mov
movsb
push
push
je
fmuls
mov
mov
jae
shlb
push
mov
mov
mov
and
test
xchg
or
in
cmp
push
ret
xor
add
pop
or
nop
addl
or
test
mov
mov
cmp
pop
aaa
xor
cmp
sub
or
nop
or
add
xchg
push
lahf
or
push
jmp
loope
mov
mov
insb
testb
ja
add
rol
mov
sub
inc
shrb
adc
stos
imul
addb
sub
lods
jmp
mov
das
or
icebp
cmp
dec
es
xchg
and
and
pop
push
loope
dec
std
sub
xorb
popa
xor
test
mov
xchg
cs
mov
lock
pop
leave
adc
in
push
call
fadds
and
dec
push
leave
xor
mov
mov
xchg
fldenv
orl
jecxz
push
lcall
and
adc
ds
in
jo
cmp
jmp
pop
popf
cmp
in
push
aaa
inc
mov
jo
inc
dec
mov
daa
int
in
call
or
std
loopne
or
push
jnp
loopne
or
imul
add
dec
sub
jns
add
pop
stos
or
add
roll
mov
mov
and
inc
movsb
jae
stc
in
jb
xor
call
orb
outsb
test
cmpsb
pop
jbe
imul
xchg
lock
and
mov
inc
lds
push
rorl
xchg
adc
xor
and
and
test
popa
arpl
push
das
imul
xor
sbb
xchg
popa
js
in
ret
add
test
and
add
cli
add
mov
mov
adc
xor
sub
push
cmp
jb
insl
gs
push
sbb
pop
clc
rorb
jns
out
mov
les
loope
xchg
push
fnstsw
fdivr
xor
lea
push
add
icebp
add
push
rolb
dec
push
sarb
inc
xorl
inc
add
insl
movsl
stos
fcompl
xor
je
dec
and
or
mov
dec
jne
or
loopne
lods
fstl
mov
sub
add
mov
xchg
xchg
cmp
aas
cmp
clc
clc
arpl
inc
mov
dec
movsb
dec
mov
inc
inc
shrb
push
pop
hlt
pushf
or
mov
sub
mov
add
cltd
and
push
add
jmp
ljmp
add
push
test
repnz
pop
aad
hlt
loopne
push
test
mov
inc
cld
inc
lock
jo
add
inc
test
in
mov
and
filds
adcl
push
sub
xchg
insl
rcrl
ds
inc
xor
add
add
stos
push
push
add
imul
pop
jl
repnz
pop
mov
fcmovnb
shll
dec
in
pop
add
push
inc
arpl
inc
lods
mov
nop
or
out
scas
and
add
adc
push
adc
or
add
std
dec
mov
lods
pop
ret
push
popf
cmpb
es
cwtl
pop
and
jl
or
adc
stos
add
inc
inc
lcall
xor
rolb
add
mov
pop
cmp
enter
fildl
add
fsubl
and
cmp
sbb
test
lea
nop
jecxz
dec
mov
lcall
inc
in
or
add
test
pop
push
mov
adc
mov
dec
and
jne
push
imul
pop
call
mov
inc
scas
jne
or
mov
loopne
add
mov
and
loop
mov
add
push
nop
dec
dec
push
call
jmp
aam
jo
add
into
fistpll
or
cwtl
int
jns
push
lock
add
and
dec
add
sbb
or
mov
jae
jnp
or
test
imul
and
lods
sbb
adc
test
add
adc
sub
mov
push
add
cmp
inc
or
add
inc
movsl
sbb
add
push
mov
and
add
jae
movsl
popa
rolb
inc
sub
xor
add
out
and
inc
clc
pusha
andb
pop
pop
test
enter
rep
cmpl
xor
add
test
ret
or
add
sub
jmp
add
cmpl
xorl
lods
xor
sahf
xchg
add
sub
jmp
xchg
lcall
adc
pop
inc
pushf
mov
in
shll
jbe
in
add
sub
sbb
cmp
fisttpl
push
mov
push
into
inc
push
or
ja
xchg
dec
sahf
adc
add
xchg
into
add
hlt
and
sub
outsl
adc
cld
jns
or
add
inc
cmp
mov
nop
mov
sub
clc
xchg
bound
stos
popa
outsl
shll
in
cli
and
or
inc
lods
pop
rcrl
pop
xlat
jnp
icebp
xchg
jl
or
and
sbb
adc
mov
fcoml
fs
pusha
ss
and
fdivl
xor
test
loope
jp
xor
or
mov
insl
jp
lock
cmp
xchg
lea
sbbb
or
inc
mov
fcompl
push
lea
int3
nop
icebp
pop
cmp
dec
pop
test
add
rep
xchg
fimull
dec
add
sbbb
hlt
mov
push
jmp
hlt
xchg
sbb
outsb
add
cmpsb
imul
nop
add
jge
enter
enter
push
push
add
es
jp
sub
clc
mov
adc
adc
or
femms
sub
mov
pusha
inc
xor
push
mov
push
jns
xor
add
add
push
adc
pusha
leave
sarb
and
je
lods
xchg
in
pop
pop
push
or
or
jmp
aaa
arpl
push
xchg
gs
dec
mov
lahf
fsubr
fdivs
pop
jb
aas
test
pop
insl
aam
pop
sub
mov
movb
pop
push
adc
pop
sub
pop
add
adc
aaa
orb
shrb
xchg
sub
cwtl
cmp
jle
dec
cmp
dec
lcall
add
push
pop
or
and
add
xor
aam
jp
out
aad
and
adc
and
int
fisttpll
add
stc
cld
sbb
dec
or
fadds
fldl
fwait
sub
iret
inc
addr16
pop
mov
test
movaps
sub
fisubs
loope
add
daa
dec
sbb
addb
pop
and
or
nop
in
push
jns
loopne
scas
push
call
push
dec
or
add
out
inc
cmp
cmp
sbb
inc
push
sub
call
popf
das
and
movsb
push
jne
and
lea
jmp
fmull
ret
sahf
adc
mov
mov
mov
pop
mov
add
rorb
in
xchg
xor
clc
cmpsl
vcvtsi2ssl
clc
enter
xchg
add
sub
mov
adcb
xchg
popf
and
sub
or
or
adc
movsb
and
dec
xor
add
sbb
mov
inc
lret
and
dec
and
adc
mov
push
test
imul
shl
jnp
pop
sbb
dec
popf
add
sub
pop
lahf
inc
xor
inc
cmp
xchg
jo
cmp
add
lock
dec
scas
dec
ss
push
in
push
aaa
adc
add
sub
xor
and
or
add
adc
add
add
dec
pop
fadd
inc
std
stos
dec
int3
mov
xor
adc
sub
sub
sbb
stos
add
sub
dec
in
add
loopne
push
inc
jg
test
mov
pop
fcomp
push
aam
rcr
and
add
jns
add
lret
sub
fadd
add
jno
ror
movsb
ljmp
mov
xor
enter
inc
js
push
leave
mull
mov
int
xor
push
mov
out
add
xchg
sub
xor
popa
adc
xchg
sub
movb
xor
outsb
rcll
lcall
clc
test
icebp
sub
dec
movsb
dec
addr16
add
pop
scas
mov
push
mov
dec
mov
call
sub
dec
xchg
xchg
cmp
mov
lea
push
adc
aaa
jl
imul
test
add
dec
and
std
rclb
shrd
rorl
sbb
or
test
pop
add
aam
lea
inc
pop
addl
cmp
cmp
popf
xchg
loopne
insb
push
sbb
adc
fisttps
sbb
rolb
rclb
jle
mov
std
fs
movsb
mov
movsl
mov
aas
test
fld
or
movsb
test
and
nop
jbe
add
xor
out
outsl
movsl
loopne
dec
ss
add
fsubs
cld
test
mov
movsl
pop
cmpsb
pusha
andl
push
add
add
pushl
mov
shl
rclb
ret
or
fsubrs
push
push
bound
cli
push
xchg
imul
push
jne
loopne
nop
ds
outsb
sub
adcb
in
add
inc
inc
sbb
cmpsb
push
sbb
push
push
mov
and
push
add
or
sbb
pusha
push
jns
hlt
insl
adc
popa
or
mov
sbb
loopne
fsubr
sbb
add
in
popf
ret
rcl
add
push
xor
stc
pop
ljmp
xlat
push
xor
aam
fsubr
dec
add
ds
pop
shlb
jecxz
adc
sub
sbb
or
imul
test
fmuls
add
jno
subl
pushf
sbb
pop
push
and
add
lea
mov
fstpl
movsl
cmp
shr
cmp
push
cmp
sub
and
add
loopne
xchg
imul
in
and
mov
adcb
in
push
and
pop
xor
adc
or
xchg
sub
add
push
xchg
adc
cltd
add
clc
addl
cli
std
dec
adc
mov
pop
ret
nop
not
adcb
lock
jl
ljmp
push
add
push
inc
xchg
clc
xor
and
aas
in
push
pop
mov
push
or
xor
loope
or
aam
fldl
movsb
add
inc
es
add
bound
mov
lods
shlb
adcb
dec
xchg
bound
xchg
stos
movsl
loopne
or
rcrb
adc
fcmovbe
sub
adc
sbb
xor
sahf
mov
adc
movsl
addr16
or
add
sbb
sub
cmp
adc
stos
add
lods
dec
pop
mov
jecxz
addb
addr16
xchg
sub
enter
jbe
xchg
adc
das
adc
js
scas
dec
mov
inc
mov
andb
pop
lds
mov
inc
addr16
push
and
mov
and
ret
or
push
adc
inc
shrl
std
dec
mov
lods
dec
cs
ret
adc
test
xor
jg
push
fstl
rcrl
or
push
push
pop
xor
aaa
mov
pop
mov
cmp
cltd
sbb
adc
and
mov
movsl
mov
gs
dec
or
and
add
inc
fldt
or
cmp
test
iret
ficoms
jb
pop
jo
mov
and
pop
pushf
dec
bound
mov
in
or
cmp
sbb
test
sbb
cmp
cmp
add
push
movsl
mov
mov
adc
in
mov
arpl
out
adc
loop
decb
push
nop
sub
xor
push
jecxz
fiadds
and
and
inc
enter
nop
arpl
add
sub
mov
add
nop
inc
add
or
add
mov
fstpl
add
pushf
push
popf
ljmp
add
pop
aaa
or
and
dec
sub
xchg
cmp
add
mov
popa
mov
pop
sti
inc
lret
sbb
insb
mov
bound
xor
mov
cmpb
movsl
inc
mov
out
add
test
xchg
bswap
xor
add
push
loopne
std
addb
xor
mov
adc
push
push
icebp
hlt
add
fwait
cwtl
xor
add
imul
jecxz
cwtl
sbb
ret
mov
in
pop
cmp
xchg
inc
jmp
movsb
push
and
pop
popf
data16
add
call
adc
adc
add
push
sub
adc
jno
repnz
decl
sub
loop
pop
rorb
sub
mov
or
popa
sbbb
sub
xchg
push
daa
jno
inc
das
inc
dec
cs
loopne
push
mov
or
adc
aas
add
sub
xchg
fsubr
adc
stos
sub
push
add
inc
push
div
les
cwtl
mov
cltd
imul
push
push
mov
dec
or
pushf
aad
test
adc
call
in
pop
xor
xlat
in
xor
in
mov
scas
mov
andb
mov
cs
push
jne
xchg
or
movsl
add
pop
xor
mov
and
add
lock
sbb
mov
dec
les
add
mov
xchg
add
push
or
jecxz
repnz
mov
add
je
sbb
das
mov
adcb
sub
sub
mov
in
nop
or
add
scas
add
inc
cs
rorb
nop
or
and
in
insl
or
andb
cmc
icebp
mov
popa
adc
dec
adc
sub
mov
loopne
mov
push
loope
xchg
cmp
push
pop
lock
push
or
xor
dec
add
outsl
inc
gs
adcl
adc
jno
add
andb
das
loopne
xchg
add
loopne
lea
fidivs
add
add
pusha
insb
daa
inc
lock
lods
repz
gs
inc
and
sub
outsb
add
mov
pusha
pop
push
adc
dec
push
inc
or
inc
add
mov
xchg
mov
jno
push
loopne
cld
add
test
xchg
dec
and
or
add
and
hlt
or
mov
popa
test
nop
mov
sub
jne
pop
or
or
ja
in
adc
adc
scas
mov
insl
cmp
sbb
and
sbb
adc
sub
adc
lock
hlt
sub
lods
push
add
f2xm1
pop
test
jne
add
or
push
lock
mov
addr16
rcr
shll
ret
callw
imul
mov
inc
jb
lock
dec
mov
aad
mov
inc
stos
mov
lcall
sbb
aam
lock
mov
or
mov
fldenv
and
call
loopne
icebp
nop
sub
fsubs
mov
xchg
mov
xor
inc
lret
mov
rcl
nop
pop
mov
sbb
testl
add
mov
mov
or
cmp
dec
scas
test
adc
lcall
add
pop
inc
add
lock
fildl
test
and
fsubl
pop
push
mov
enter
movl
push
mov
mov
dec
sti
add
lods
mov
aaa
nop
mov
inc
xchg
leave
push
and
adc
sbbb
out
in
imul
mov
mov
daa
adc
inc
leave
xor
push
push
mov
icebp
dec
shrb
fs
jecxz
rcll
dec
out
sbb
ret
enter
mov
fsubl
push
inc
or
daa
add
pop
insl
mov
fcomps
nop
mov
lea
sarb
xchg
scas
cs
xlat
int3
aaa
xor
xchg
or
xchg
les
pop
test
or
cmp
and
cmpl
add
inc
mov
inc
loope
dec
xlat
or
dec
xchg
xor
fisttps
push
adc
sar
and
mov
test
mov
cs
xchg
add
or
nop
mov
test
fst
mov
test
repz
orb
add
fs
leave
das
arpl
xor
jns
fiadds
mov
mov
insl
lock
inc
test
loopne
cmpsb
sbb
mov
mov
shlb
insl
test
in
mov
lds
adc
mov
or
or
pop
add
push
stos
mov
cmp
cld
xor
xchg
sub
or
mov
mov
adcb
ror
push
pusha
push
dec
sbb
mov
mov
mov
pop
jae
rcl
ret
pop
int3
sub
push
mov
mov
inc
lock
fcoms
lods
ss
ja
enter
inc
or
mov
fs
add
in
adc
ss
and
jbe
or
mov
lds
cmp
inc
jmp
dec
jp
popl
test
ljmp
xchg
pop
pop
mov
push
jl
out
adc
xor
sbb
add
aad
cmp
out
adc
rolb
fld
jne
sub
lea
imul
jne
jg
iret
lods
xor
popa
rorl
ror
inc
cld
cld
int
aad
add
loopne
cmp
mov
lods
jnp
lret
adc
push
sti
and
enter
addb
push
shl
push
sbbb
push
and
cs
xlat
xor
add
sub
add
and
movb
jmp
hlt
adc
push
shrl
pop
enter
cld
or
or
stos
loopne
outsb
das
adc
in
adc
loope
and
test
push
and
mov
and
call
ret
push
inc
and
mov
cltd
mov
in
lds
cmp
sbb
hlt
shrb
test
arpl
ret
inc
mov
cmc
pop
leave
mov
mov
jmp
jl
out
push
and
adc
pop
dec
test
fstpt
push
test
push
xchg
dec
mov
mov
add
mov
mov
dec
xchg
inc
aad
add
or
mov
inc
cmp
cwtl
cmp
sar
roll
out
aam
xchg
add
sbb
pop
pop
arpl
je
das
lock
sbb
popa
xor
mov
es
fsubs
sub
aas
les
push
add
add
outsl
in
cwtl
sbbb
outsl
sti
call
dec
call
adc
loop
jl
loopne
fwait
loopne
cld
push
cmp
mov
movsl
inc
pop
jne
xchg
lods
roll
in
rorb
mov
enter
inc
enter
add
mov
bound
aas
mov
add
add
xor
pop
in
loopne
popa
inc
mov
push
sub
or
mov
test
ret
sbb
xchg
stos
test
ror
in
mov
sub
mov
and
ret
mov
fidivrl
and
fldt
shl
inc
push
sub
lcall
enter
push
jmp
xchg
and
push
inc
sbb
or
inc
xor
sub
shrb
iret
les
push
andb
adc
and
push
adc
add
movsl
sub
inc
sahf
out
inc
clc
dec
push
xor
jno
fldl
xor
adcb
push
sub
loopne
jnp
and
xchg
xor
pop
or
sub
and
and
lea
cmp
cmp
stos
pop
js
pusha
pop
pop
aam
dec
add
in
aas
push
sbb
and
dec
sbb
mov
cmp
sbb
mov
inc
test
sbb
movsb
sub
mov
call
dec
push
mov
sbb
add
sbb
sub
add
cld
xchg
rclb
loopne
fisubrl
inc
cmp
pop
mov
mov
inc
test
push
cmp
mov
dec
xchg
sbb
loopne
cmpsb
inc
or
std
adcl
mov
xchg
add
lahf
and
test
push
push
cltd
lcall
adc
push
push
ja
adc
negb
gs
push
xchg
cmpb
je
les
pusha
ljmp
jl
xor
js
loopne
scas
and
sarl
rolb
cmpsb
xor
loop
dec
xlat
test
push
js
sub
mov
inc
add
xchg
or
addb
mov
popf
pop
fdiv
int3
mov
add
sub
ret
aad
mov
jecxz
pop
push
mov
cmp
ret
mov
pop
cmpsl
jmp
pop
arpl
mov
cmpsl
or
xor
adc
add
lock
mov
iret
inc
or
es
mov
fs
stos
lods
dec
inc
test
leave
and
dec
repz
movsb
cwtl
in
mov
dec
mov
push
ficoml
add
or
pop
sub
or
push
add
movsl
hlt
sub
out
inc
pop
mov
mov
inc
out
or
sbb
outsl
or
inc
adc
dec
or
mov
add
and
push
xchg
add
loopne
add
add
and
add
push
out
loopne
push
add
test
rcl
test
cmp
lahf
or
sbb
dec
loopne
fdivs
and
adc
ljmp
add
nop
dec
push
cltd
fcomp
fmull
dec
and
sbb
dec
dec
xorb
js
fs
stos
cmp
push
mov
lock
sbb
andl
mov
sbb
cmpsb
test
bound
xchg
in
sub
mov
test
add
repz
test
jno
clc
pop
stos
movb
push
pop
hlt
xor
movsl
aas
or
mov
xlat
add
sbb
lock
mov
xlat
addr16
sbbb
sbb
push
jo
adc
jg
jo
cs
pop
lea
adc
into
jmp
in
mul
rclb
pop
cmpsb
mov
int
mov
imul
aam
pusha
fdivs
clc
sti
in
stos
cltd
repz
sbb
add
dec
addb
into
in
mov
xor
insb
or
sub
outsb
pop
dec
outsb
fmull
mov
aaa
popa
and
fmull
mov
test
mov
mov
or
lcall
inc
in
fs
or
inc
cmp
xchg
cmpsb
les
mov
or
cmp
das
sbb
or
lock
lock
sbb
adc
pop
les
ss
or
and
mov
in
data16
add
mov
nop
mov
mov
add
push
and
fcoms
adc
test
loopne
cmp
roll
mov
mov
mov
inc
test
mov
mov
mov
cwtl
fmull
nop
outsl
cmpsb
loopne
cltd
nop
test
or
test
pushf
test
js
mov
adc
rclb
xlat
in
mov
out
adcl
pushf
in
pop
or
or
dec
mov
leave
inc
pop
xchg
pop
xchg
out
or
or
pop
popa
mov
xchg
pop
imull
insb
or
xchg
das
add
pop
pop
mov
or
adc
xor
lods
incb
add
popf
lcall
push
je
sbb
sbb
popa
bound
mov
bound
sub
loopne
repnz
sbb
adc
bound
sub
cltd
push
add
mov
inc
or
add
cltd
adc
les
scas
or
xchg
adc
dec
push
and
les
stos
xchg
jo
dec
test
adc
adc
xchg
mov
enter
add
test
add
dec
stos
and
andb
push
push
mov
dec
pop
movsl
adc
imul
and
mov
rolb
in
stc
jne
test
cmp
and
clc
in
inc
popa
clts
add
inc
loope
in
jns
add
pop
push
add
int
addb
mov
xor
es
jne
imul
inc
inc
or
adc
nop
add
adc
ret
add
rcrb
or
in
adc
inc
push
or
stc
pop
cs
xor
sbb
xchg
add
icebp
fcoml
fistl
mov
mov
add
xor
or
sub
nop
in
in
sbb
xorl
dec
popa
and
add
sub
mov
add
movsl
add
rcrl
and
leave
pop
in
cmpl
mov
mov
xchg
mov
pop
test
addl
pusha
insl
stos
std
imul
jbe
test
add
mov
je
mov
or
test
loope
inc
push
repnz
fwait
pop
pop
inc
push
test
inc
inc
sub
rorb
push
push
or
cmp
xchg
add
aad
inc
xor
adc
int
add
xor
mov
or
subl
pop
xlat
inc
rcrl
test
pushf
adc
int
and
push
or
xor
push
mov
or
arpl
adc
or
push
or
scas
cli
enter
add
outsb
ljmp
and
jge
lret
sbb
call
add
in
pop
xchg
jp
add
inc
ret
add
mov
iret
or
xchg
jbe
hlt
int3
add
cwtl
sub
mov
fwait
aam
push
loopne
mov
push
xchg
push
add
pop
das
stos
adc
outsl
pop
les
jno
mov
outsl
lock
xchg
out
rorb
or
add
or
sub
rorb
inc
test
xchg
xor
rcrb
sarb
jns
mov
mov
dec
mov
and
add
cmovb
add
dec
sub
mov
movsb
or
add
mov
enter
ret
icebp
adc
repz
test
sbb
lahf
add
sbbb
iret
pop
imul
and
dec
xchg
adc
xor
push
push
popa
lea
and
sub
xorb
mov
or
lds
hlt
inc
rcll
inc
loopne
fstps
orb
add
or
rorb
mov
stos
in
in
add
icebp
mov
and
jnp
dec
and
loope
adcl
inc
roll
pop
xor
cld
xchg
push
xor
jo
and
test
inc
dec
aas
xchg
cmp
xor
mov
leave
add
testb
cmp
sub
push
inc
hlt
or
cmp
sbb
popa
and
mov
or
inc
loop
sub
fmull
inc
jae
add
movsb
mov
and
and
adc
push
xorl
addb
ret
push
sub
dec
cwtl
aas
adc
add
or
shlb
test
aam
mov
shrl
cmp
scas
xchg
cwtl
les
inc
push
mov
or
stos
and
mov
fsubr
mov
push
jo
aaa
mov
aaa
mov
sbb
mov
icebp
fdivl
and
inc
pop
add
pop
cmp
pop
in
sbb
and
loopne
push
and
inc
pop
pop
and
mov
inc
das
jge
push
div
add
dec
shlb
insl
repz
add
jge
inc
push
dec
loopne
int3
aad
mov
int3
lcall
push
dec
fsubrl
cmp
movsl
jb
pusha
cmp
movsl
sub
loope
das
inc
sub
or
sti
ret
push
jp
jge
inc
or
mov
adc
sti
xor
push
cld
fninit
push
sbb
push
daa
fdivr
sub
or
sub
aaa
dec
nop
inc
dec
sub
sub
jmp
jb
pop
cs
orb
push
sub
mov
add
add
or
inc
add
addb
clc
push
ja
mov
dec
dec
mov
das
clc
pop
test
mov
push
mov
or
and
scas
mov
mov
and
pop
not
mov
add
add
or
std
xor
fmuls
ret
arpl
mov
hlt
fnclex
cmpsb
adc
je
cmp
or
add
xchg
arpl
xor
jl
dec
mov
sarb
lock
stos
cmpsb
sbb
lds
push
push
xor
nop
add
pop
xchg
fs
ss
adc
ret
stos
out
mov
pop
jo
roll
add
das
imul
adc
adc
cli
inc
outsb
pop
ret
and
add
sbb
jne
sbb
inc
jne
pop
and
fstpl
pop
push
je
adc
push
sti
fildl
adc
cli
or
mov
xor
es
rclb
shr
loop
mov
das
cmp
scas
scas
and
or
pop
pop
je
jmp
mov
pop
xor
push
inc
outsb
popf
shll
sub
or
mov
pop
rcrl
je
inc
jno
lock
movsb
inc
insb
leave
or
mov
mov
pop
lock
sbb
push
add
mov
and
jne
lcall
push
das
pop
lcall
push
add
das
je
lods
add
es
lcall
mov
cltd
loopne
pop
loope
in
out
in
jle
jp
fucomp
inc
mov
pop
jl
fstpl
incl
test
xor
inc
in
sub
push
mov
adc
push
push
mov
fcmovnbe
lcall
mov
loop
jle
lea
fldl
fcompl
or
inc
cmp
fsubs
pop
push
add
sub
cli
fdivl
lea
and
pop
cltd
and
idiv
dec
fstp
jne
frstor
xor
outsl
cld
sbb
sbb
inc
pop
inc
call
fldl
or
fstpl
pop
sarb
push
sbb
pop
push
push
or
addr16
mov
fildll
sub
mov
add
call
pushl
je
dec
jne
xor
jmp
or
add
or
push
aad
scas
ret
cmpsl
lcall
addr16
xor
add
es
push
push
xchg
mov
imul
cs
push
addr16
sbb
mov
sbb
inc
and
jo
inc
and
sarb
jne
sub
xor
add
add
cmp
jge
jmp
sbb
out
std
fcmove
inc
inc
or
mov
jne
data16
outsb
and
add
scas
dec
jmp
push
add
mov
jmp
sbb
adc
add
andl
pop
sub
mov
jmp
jb
sti
inc
lcall
xchg
mov
fiadds
or
shld
push
or
loopne
cs
adc
mull
jmp
push
and
ss
xor
inc
icebp
imul
call
push
push
inc
pusha
mov
push
pop
adc
sbb
adc
lds
pop
push
pop
cmp
pop
push
add
push
inc
daa
push
xchg
push
add
and
das
mov
sbb
add
sahf
pop
push
pop
inc
or
mov
add
dec
sbb
inc
jl
divb
xchg
push
adc
sub
push
mov
or
mov
cmp
push
bound
or
divb
sarl
pop
xchg
mov
dec
mov
push
dec
pop
cmpsl
or
mov
push
sbb
push
iret
nop
fwait
xor
aas
aam
push
xlat
movsl
push
pop
add
add
loopne
out
push
inc
sub
dec
or
pop
adc
sub
mov
test
mov
push
and
mov
fisubs
push
ficomps
sub
mov
mov
movl
cld
idiv
ret
push
push
sbb
fs
xchg
pop
jl
dec
inc
loopne
pop
push
and
test
add
mov
lahf
inc
or
xor
jmp
add
inc
sti
mov
ret
rorb
push
fmuls
test
sbb
leave
cmc
fcos
fistpll
rorl
cmp
mov
jl
mov
cmp
jle
sbb
cmp
pop
ret
sub
push
cmp
cmp
jg
clc
fwait
jmp
xor
sub
inc
cltd
idiv
lret
add
inc
pop
scas
pop
sbb
aas
push
movsb
rolb
mov
jg
mov
add
ret
and
pushf
loope
mov
int3
sarl
enter
test
and
outsl
dec
xor
lea
pop
add
jg
jo
idivb
iret
pop
mov
mov
cmp
cmp
xor
jecxz
mov
or
cmp
sahf
shll
add
fists
sub
push
sbb
jge
add
jle
lea
cmp
jle
sub
es
sub
mov
fdivs
lea
adc
mov
mov
ret
push
leave
fists
push
ret
push
test
inc
xchg
jae
popa
push
adc
cmp
mov
repnz
movsbl
mov
mov
out
addr16
sub
cld
sub
mov
pushf
mov
inc
dec
and
es
inc
xor
xchg
adc
in
ja
loope
cmp
xchg
adc
xor
stos
stos
aaa
je
mov
sub
pop
sbb
xor
push
fistpl
dec
inc
inc
ret
dec
and
push
and
sbb
loopne
jg
xor
xlat
jne
sub
sub
jl
ss
sbb
insw
imull
lock
mov
push
jg,pn
or
pop
cmp
stc
stc
mov
subb
aam
mov
lret
cli
and
ret
nop
add
add
cmp
jl
orl
pop
loope
jne
push
push
push
push
cmp
js
mov
and
pop
mov
sub
inc
lods
pusha
cmpb
push
jmp
mov
push
cmc
into
repz
pusha
push
das
psubsb
int3
outsb
filds
inc
add
shlb
jge
pop
cld
sbb
mov
nop
mov
sbb
rolb
pop
leave
and
pop
ds
arpl
dec
push
push
mov
sub
insl
lock
sub
cld
jb
dec
cld
push
xor
mov
cmp
and
lret
std
push
jnp
mov
dec
fcomps
lods
pop
xchg
fwait
and
inc
cs
cwtl
cmp
mov
or
jp
pop
sub
mov
or
rcll
rcr
in
mov
inc
je
inc
push
inc
adc
jmp
cmpsl
xchg
cmpsl
rorb
dec
sahf
inc
pop
rorl
sbb
and
insb
mov
jp
adc
nop
or
pop
dec
out
xor
imul
add
ss
push
roll
and
mov
inc
cmp
cwtl
push
call
mov
sub
sub
jb
aas
add
jecxz
pop
and
inc
addb
xor
mov
je
cmp
xchg
dec
mov
push
xchg
inc
test
cs
pushf
test
sahf
xchg
and
push
ja
inc
push
push
gs
mov
std
mov
lods
jbe
jne
lret
mov
pop
mov
daa
bound
imul
mov
addr16
frstor
out
push
adc
js
add
mov
xor
imul
add
add
jb
xor
push
mov
pop
push
outsb
movzbw
arpl
pcmpgtd
push
sbb
inc
je
push
xchg
lret
jnp
cmp
push
mov
lods
aaa
dec
mov
dec
andb
mov
jae
movsl
push
cmp
and
prefetch
sub
or
push
addr16
jo
add
leave
fs
mov
rol
push
cmp
push
adc
ret
inc
sbb
push
dec
push
xchg
jo
dec
dec
cmovae
pop
inc
dec
dec
dec
cmp
add
loopne
mov
sbb
hlt
in
out
ret
pop
addr16
pop
sbb
sub
xchg
test
and
mov
sbb
mov
int3
push
shlb
and
and
xlat
or
pushl
mov
add
test
adc
cltd
outsl
sbb
jne
inc
ffree
imul
mov
sbb
push
cmp
adc
ret
cmp
adc
js
or
sub
push
in
inc
fisttpll
mov
mov
addr16
jmp
popa
lods
mov
or
mov
or
cmp
xor
jle
pop
mov
mov
pop
jo
mov
jmp
and
and
js
inc
cmp
nop
or
mov
cli
addl
xor
enter
loopne
scas
popa
out
lods
dec
int3
inc
jmp
movsb
push
jne
xlat
loope
cmp
adc
dec
or
mov
scas
and
fildll
clc
sbb
and
push
rcr
sub
cmp
push
je
mov
mov
adc
rorb
push
lods
adc
or
mov
stc
sub
fimull
mull
ds
add
loopne
aam
sbb
cs
add
sbb
test
dec
pop
ret
jle
push
sbb
sbbb
or
mov
push
adc
int3
jmp
xor
mov
out
sub
das
mov
jnp
adc
rorb
std
shll
cmp
je
inc
cmp
rcrl
js
dec
decl
xchg
ret
int3
jno
enter
in
lret
mov
mov
and
push
mov
test
out
in
pop
fists
cmp
mov
rcll
fimull
lock
push
shrb
cmp
and
mov
shll
aad
mov
or
int
repz
repz
mov
sbb
jne
push
in
push
xchg
rolb
cmc
cmp
stos
je
dec
mov
je
jmp
cmp
icebp
rorl
inc
loop
adcb
mov
dec
jmp
push
dec
sub
or
sbb
cmc
outsl
aas
add
les
sub
js
sub
jns
test
mov
inc
xchg
dec
adc
or
fmuls
mov
fsubl
push
aam
dec
or
fcmovbe
or
std
jb
and
sbb
mov
jno
and
mov
loop
sub
jbe
sbb
push
cltd
loop
mov
jne
push
ret
xorl
insb
xchg
int
push
test
push
push
repz
pop
mov
pop
out
adc
mov
aad
push
sbb
lds
sub
add
adc
imul
cmp
cmp
in
jge
cmpb
je
lock
call
lret
push
sub
out
add
out
lea
inc
js
ds
in
mov
arpl
shr
mov
fstps
push
pop
push
fadd
or
mov
and
cmp
sti
aad
jl
and
rep
pop
xor
pop
jb
sbb
sbb
das
orb
jp
push
jl
shr
xorl
fdivrs
jl
je
cmp
sbb
imull
insb
in
sbbb
sub
scas
inc
cld
mov
inc
cmp
pop
fcompl
loope
cmp
out
inc
mov
popa
adc
or
sbb
rcrb
or
inc
insl
loope
js
rclb
pop
hlt
rorb
lods
xor
jge
push
inc
xchg
repnz
dec
add
fnstsw
into
mov
mov
mov
pop
sbb
cwtl
sbb
fidivs
cmpsb
xchg
addl
jle
test
sarb
add
jl
push
or
push
mov
cmp
lcall
push
add
pop
add
dec
add
inc
sub
push
imul
sub
addr16
sbb
das
push
sahf
or
sbb
sub
roll
add
mov
mov
adc
jl
and
hlt
adc
dec
dec
je
mov
cmp
add
pop
repnz
jmp
mov
dec
mov
add
fucomi
pusha
mov
cmc
sub
push
cmp
idiv
test
push
sub
fdivrs
xor
cmp
jo
mov
mov
hlt
lret
mov
sbb
lea
dec
sub
push
jo
inc
add
jl
repnz
cmpl
cmp
mov
call
jl
inc
pop
or
pop
mov
fdivr
sbb
int3
mov
mov
lea
and
loop
aam
stc
es
xor
mov
lret
test
jge
sahf
sbb
sbb
and
xchg
into
je
adc
jg
dec
movsl
xor
inc
lock
cmp
js
jns
leave
jge
sub
push
loop
mov
movsl
lret
xor
pop
push
lret
jns
addr16
pop
inc
cld
cmp
mov
mov
add
mov
lock
pop
ror
movsl
call
lret
xor
shlb
fdiv
xchg
hlt
mov
mov
sbb
adc
mov
cli
inc
push
repz
xor
insl
mov
hlt
adc
and
dec
mov
add
lock
jle
je
cmp
or
push
push
push
sbb
in
jns
int
push
add
sbb
insb
jle
push
fisttps
push
int3
mov
out
jl
push
add
lods
sbb
push
fistpll
shlb
mov
mov
jl
clc
and
jmp
ljmp
jbe
inc
dec
cmpsb
std
jge
cmp
adc
dec
icebp
pop
pop
aam
mov
stos
jb
pop
dec
mov
jecxz
leave
push
mov
add
add
cmp
and
xor
mov
shrb
dec
fcom
push
push
dec
adc
mov
pop
ljmp
rclb
mov
lds
sbb
cli
sbb
cmp
shr
call
dec
sub
sbb
mov
movsb
mov
jle
or
push
push
cmpsb
sbb
jmp
mov
and
push
lods
scas
sbb
cld
rcll
ror
or
or
and
pop
and
jle
lea
push
adc
shlb
push
add
push
loop
or
movl
rorl
pop
sbb
movups
rcrl
add
xorl
push
xor
js
xchg
jb
sub
fistpl
inc
cmp
jo
xchg
push
and
mov
push
push
sbb
pop
add
push
jnp
mov
dec
enter
or
repnz
inc
imul
outsl
in
and
fdivl
movl
dec
sahf
fs
adc
inc
xor
add
sti
add
adc
test
ret
xchg
dec
or
xor
call
test
mov
inc
je
sub
jno
xor
mov
push
shll
mov
push
rcrb
fs
test
mov
ficompl
fidivrl
insb
aaa
or
int3
fnstenv
jmp
pusha
mov
imul
jle
sub
dec
sbb
add
inc
xor
jne
push
sub
loopne
jae
push
add
aas
xor
add
push
cmp
push
shl
dec
or
ret
pop
or
popf
mov
or
scas
mov
in
fisttpl
inc
lahf
xchg
mov
pop
sub
sub
ljmp
enter
fwait
cmc
ret
fistps
xor
mov
cmpl
and
mov
adc
push
imul
xchg
sbbl
repnz
pop
mov
sbb
adc
and
add
adc
push
add
aas
mov
aaa
pushf
lock
jge
lea
mov
push
sub
mov
sarb
jo
mov
mov
out
pop
xor
pop
lods
aas
andl
pop
sbb
inc
sub
mov
adc
mov
dec
or
add
test
add
ds
add
push
jne
ds
test
push
add
imul
in
outsl
push
mov
push
adc
stos
xchg
jo
xchg
adc
add
mov
sub
pop
pop
into
je
repnz
test
insl
jmp
push
add
aam
push
shl
pop
mov
xchg
push
pop
sub
jecxz
mov
mov
clc
mov
ljmp
data16
xor
push
rolb
test
push
mov
sub
cwtl
adcl
adc
dec
push
mov
imul
std
addb
ss
mov
push
push
mov
mov
xchg
mov
fiaddl
mov
jle
xor
push
mov
sub
test
push
push
push
rclb
nop
push
fcomi
ret
pop
pushf
mov
xchg
xchg
rolb
fiaddl
xchg
out
aaa
scas
repnz
mov
dec
call
fimull
adc
je
fsts
das
push
adc
inc
je
xor
cmp
mov
je
ss
sbb
mov
dec
std
ja
stos
adc
dec
mov
sub
add
jle
divl
or
xor
push
inc
cmp
push
sbb
add
rolb
push
popa
jmp
mov
xchg
mov
sbb
mov
stc
loopne
mov
pop
pop
jl
sub
dec
and
dec
movl
loope
or
push
jo
ret
cs
jb
mov
cwtl
bound
clc
test
les
push
dec
icebp
lods
loopne
aam
stc
negb
push
mov
xchg
inc
push
mov
push
xor
xchg
cmp
add
xor
lcall
mov
mov
loope
adc
push
mov
ret
in
push
inc
and
sbb
lock
inc
pop
sahf
cmp
xchg
popa
xchg
push
popa
mov
xor
dec
lods
jl
fstpl
in
add
insl
loopne
mov
add
xchg
xor
std
push
sbb
dec
je
dec
jne
insb
je
repnz
inc
push
add
add
imul
dec
je
cmp
pop
clc
dec
jne
mov
ret
das
loopne
mov
add
xor
or
adc
lea
stos
insb
fs
filds
jo
pusha
ret
lea
imul
push
inc
movhps
fdivrl
pop
push
jb
popf
hlt
xor
cmpsb
push
cmp
push
push
sarb
divb
add
jg
test
jp
movb
xor
jne
sbb
movsb
push
into
xor
scas
add
sub
shl
inc
pop
ljmp
mov
pop
push
outsl
nop
je
mov
push
push
jmp
stos
push
push
dec
cmp
cmp
push
push
xchg
std
movsl
mov
pop
cmp
jg
sub
rcll
push
in
cmp
pop
xor
sub
imul
push
mov
add
mov
lahf
in
cwtl
cmp
xor
or
adc
cmp
inc
lea
ds
dec
and
lret
cmp
add
leave
xlat
lahf
inc
cmp
xchg
and
mov
mov
cmpsl
jb
rorl
rorb
push
xchg
pop
adc
xchg
ret
insb
xchg
jnp
inc
sub
mulb
and
adc
cmp
in
cmpl
je
mov
loope
add
test
sub
out
push
or
or
mov
pop
adc
sbb
lock
pop
push
cmp
xchg
jg
pop
xor
adcb
es
push
or
ja
ja
mov
pop
xchg
outsb
mov
pop
je
jle
push
sbb
sub
mov
cmpsb
popf
decl
jmp
push
popf
cltd
bound
popf
lcall
mov
test
mov
xor
mov
jo
pop
sub
adc
insb
loope
ret
not
and
jo
push
push
or
js
xor
pop
daa
pop
cmp
out
push
loope
adc
es
add
add
leave
and
cmpb
xor
and
dec
and
movsl
adc
leave
adc
loopne
test
scas
cld
push
inc
cmp
stc
out
and
add
out
cmp
adc
js
push
out
les
jns
fstpt
sub
jo
pop
add
je
xchg
push
lock
mov
aaa
or
imul
or
fcompl
push
test
scas
inc
cs
push
push
orl
or
sbb
sti
popl
mov
push
mov
in
adc
dec
sti
pop
es
inc
call
test
pusha
sbb
jmp
cwtl
sub
push
mov
sbb
pop
cmpl
movsl
xor
dec
idivl
lea
push
mov
adc
push
xchg
pop
jbe
insl
lock
sub
stos
lea
push
xchg
push
mov
xchg
lea
insb
xor
test
pop
je
lcall
fdivrl
pop
push
dec
sub
mov
lods
add
push
cmp
cmpsb
test
xchg
loopne
sub
mov
loop
pop
inc
adc
ds
mov
les
inc
dec
add
push
cs
mov
adc
enter
or
push
dec
mov
add
add
jecxz
xor
or
in
xchg
sub
push
sbb
jle
and
sub
cld
inc
push
add
pop
mov
js
daa
and
lds
inc
dec
pop
js
insl
xor
mov
mov
ret
mov
inc
push
ret
mov
fcmovb
pop
fsubrl
xor
loop
dec
scas
mov
mov
mov
or
xchg
pop
push
js
pop
xor
addl
add
adc
bound
pop
setge
in
in
pusha
jbe
xchg
or
rcr
sbb
inc
add
aaa
pop
dec
sti
mov
add
movsl
push
mov
cli
add
adc
inc
push
cmp
pushf
clc
sahf
out
pop
mov
mov
cmp
mov
jg
fidivrs
pusha
jge
push
cld
es
push
push
jge
mov
mov
jb
inc
mov
mov
cwtl
or
aam
mov
fs
mov
shll
rcr
pop
or
les
jbe
lahf
clc
push
lods
inc
enter
iret
ds
jne
or
inc
lcall
fs
cmp
cs
mov
test
jne
inc
pop
mov
xor
jnp
ret
lret
pushl
addr16
dec
add
push
fs
jb
add
mov
mov
ret
fistpll
or
int
sbb
int
loopne
cmp
jg
imul
imul
pop
lea
ljmp
adc
jmp
int
jae
clc
cmp
loope
adc
dec
nop
outsb
jbe
xor
dec
pusha
adc
pop
loope
add
orb
or
lret
mov
push
ret
sarb
cmc
mov
pop
push
pop
mov
shl
cmpl
xor
cmp
or
je
mov
in
xchg
inc
clc
jb
lea
and
lret
sub
cltd
hlt
pop
adc
add
sar
xor
loope
decl
or
mov
xor
jo
mov
push
or
rolb
adc
and
xor
jl,pn
or
add
xchg
mov
insb
xchg
scas
repnz
cmpl
xchg
or
mov
addl
jecxz
add
push
mov
mov
add
pop
jno
jbe
int
call
fs
rcrl
sbb
push
push
push
or
or
jbe
or
cwtl
push
or
or
loop
push
jno
add
mov
xor
or
stc
or
shrb
cmpsb
and
mov
shll
cli
add
enter
fisubrl
ds
sbb
jbe
mov
xorl
mov
jle
push
push
inc
push
std
adc
inc
fstps
sti
mulb
inc
dec
sub
or
out
imul
mov
sbb
test
mov
jle
push
popa
mov
add
cwtl
push
fsubs
fistps
xchg
nop
bound
imul
or
aas
lock
push
add
fsts
dec
loopne
pushf
push
nop
sbbl
mov
mov
mov
sbb
gs
js
push
jne
xchg
mov
xor
jb
jmp
lret
dec
jns
push
aaa
outsl
xchg
mov
ja
cmp
je
aaa
in
leave
sub
xor
int3
lock
addr16
stos
cltd
inc
adc
ss
cli
jbe
cmovo
mov
dec
in
lods
xchg
or
pop
inc
add
mov
dec
leave
popa
sbb
pushf
xchg
stc
sahf
in
sbb
cmp
mov
rsqrtps
stos
lock
addr16
adc
neg
mov
lret
loope
leave
js
cwtl
adc
pop
es
les
sbb
cmp
aas
aam
out
testb
nop
lret
les
leave
ret
or
push
push
loope
mov
dec
pop
push
mov
mov
fdiv
adcb
aas
adc
xlat
sbb
pop
push
insb
push
pop
adc
fidivs
icebp
push
ja
lahf
incl
ret
movb
ss
or
sbb
push
pop
jo
sar
cmp
jge
sub
lea
stos
in
push
cli
push
push
nop
push
mov
and
cld
mov
sub
or
cmp
roll
cmp
jmp
push
xchg
inc
or
leave
push
je
shlb
fisubs
cmp
mov
iret
pop
push
insb
inc
clc
scas
mov
jns
out
dec
clc
les
jecxz
xlat
jge
jo
test
rcpps
fsubrs
iret
inc
pop
mov
js
ret
sub
sub
cmp
movsb
cmp
sub
add
push
inc
xchg
cmc
dec
insl
sub
and
repnz
mov
push
dec
cs
inc
mov
shrb
imul
inc
adc
push
add
push
push
inc
loope
mov
mov
sbb
int
test
lea
push
or
xorl
mov
mov
jne
ret
loopne
sub
js
inc
sub
mov
mov
mov
ret
pop
or
dec
sub
insb
jge
adc
xor
into
cmp
jge
shl
pusha
push
pop
xor
or
pop
adc
rclb
add
fcoms
into
push
push
or
mov
imul
dec
lahf
cld
or
rol
or
adc
icebp
out
xor
jne
mov
mov
daa
add
inc
nop
movsl
dec
and
out
mov
lea
add
ds
imul
cld
sbb
mov
aam
stos
or
test
das
mov
sbb
push
dec
insl
xor
aas
ret
pop
ss
sbb
add
and
cwtl
mov
or
mov
cmp
jne
lock
jno
pusha
mov
and
ret
cld
xchg
pop
call
insl
xchg
cli
pop
pop
or
sbbl
xor
lahf
add
in
mov
pop
xor
push
mov
and
or
outsl
inc
sbb
movsb
ds
add
dec
adc
xchg
addl
aas
or
ljmp
push
cmp
sbb
push
enter
xor
push
rcll
xchg
rclb
adc
fdiv
push
call
push
loopne
push
adc
jg
add
cli
ja
jns
adc
and
divb
cmp
out
add
push
je
test
and
addb
cmp
jl
les
xor
push
dec
jg
dec
aas
pop
or
popl
dec
lods
or
adc
mov
mov
popa
or
pop
ret
iret
ret
or
fistpll
pop
test
and
lds
ret
jae
or
xchg
xor
nop
add
fwait
cmp
sahf
sbbb
sbb
loopne
sbb
sbb
push
js
mov
cs
dec
dec
jg
xor
push
dec
push
dec
cltd
mov
mov
filds
test
sbb
adc
sbb
push
adc
sub
in
xchg
and
fiadds
add
sti
fidivs
stos
push
sbb
push
jns
idivl
notb
pop
push
gs
jae
sub
jecxz
or
xchg
push
or
imul
mov
test
dec
push
idivl
cmp
inc
shr
add
sbb
mov
pop
leave
cmpsl
mov
fsubrs
and
cmp
daa
add
sub
sub
add
push
mov
data16
nop
loop
xchg
lcall
aas
jbe
push
loopne
pop
fwait
dec
and
push
sub
sub
or
les
pop
mov
mov
dec
push
jne
xor
or
mov
mov
rcl
pop
fsubrs
jnp
sub
push
es
je
jmp
loopne
lea
sbb
nop
lods
cmp
je
inc
jmp
lea
inc
xor
and
rcll
add
loopne
push
jl,pt
and
add
mov
in
jnp
fs
arpl
mov
adc
adc
in
xor
mov
fs
add
scas
push
xor
daa
mov
or
cmp
mov
movsl
xor
adc
test
or
xor
jb
pop
sahf
adc
or
and
pop
lds
inc
inc
xor
testb
sbb
movl
lea
xor
sub
insl
lcall
data16
sub
lahf
add
mov
add
dec
sbb
push
mov
in
xor
nopl
adc
jp
inc
adc
fsubl
loopne
pop
call
xor
xorl
cmp
inc
cmpsb
inc
mov
fsubrs
xor
dec
pop
lret
inc
test
xor
sbb
loope
ljmp
xchg
fs
mov
lret
cwtl
pusha
pop
loopne
mov
sub
push
jne
pusha
or
dec
lea
push
push
adc
lods
inc
push
cld
lock
ds
lea
push
adcb
xor
leave
and
cmp
add
add
inc
cs
data16
add
dec
cmpsb
dec
xor
push
insl
outsl
push
nop
pop
inc
pop
mov
je
shlb
inc
cmp
jo
test
xchg
push
or
into
movsb
jae
dec
insb
imul
push
dec
pop
or
fstpl
popf
xor
xchg
mov
and
inc
rol
mov
insb
push
movsl
sbb
sub
loopne
addr16
inc
es
data16
add
sbb
popl
and
lds
fiaddl
dec
cmc
push
xlat
sub
adc
popf
push
jo
cmp
cmc
xor
les
and
test
add
dec
inc
addb
outsb
sarb
push
pop
push
push
jmp
dec
pop
inc
ret
test
push
push
sbb
std
or
add
in
mov
shrb
test
ret
pop
pop
shlb
scas
dec
jo
mov
adc
add
pop
aas
ret
jecxz
push
outsl
add
decb
fmuls
adc
or
push
push
pop
fs
push
push
dec
pop
fmul
ret
sbb
cmpsb
inc
je
or
insl
rol
adc
je
sub
add
ret
sbb
outsb
push
sub
loopne
or
pop
cmpsl
jnp
inc
cmpps
push
loop
lea
roll
xchg
int
out
mov
in
mov
mov
adc
sub
je
insb
push
cmp
fwait
push
push
mov
cmp
out
dec
je
add
dec
hlt
xchg
add
push
mov
pop
jmp
adc
je
or
int
out
in
add
add
add
js
or
push
xchg
fstpt
adc
adc
repz
fimuls
or
inc
inc
push
inc
test
out
andl
dec
push
adc
jg
cmp
or
push
arpl
rcr
stos
pop
iret
xchg
add
gs
nop
insb
mov
shr
push
push
inc
lods
stc
lds
xor
fsub
dec
insb
push
push
inc
js
orb
inc
push
push
out
push
lcall
sbb
xor
xor
cli
or
clc
jle
push
shlb
push
push
movb
dec
lods
xchg
out
fwait
inc
or
loopne
roll
aas
bnd
jmp
mov
xchg
ss
mov
mov
push
movsb
adc
xchg
idivb
sbb
test
mov
enter
fists
mov
ret
mul
or
loopne
or
xchg
arpl
mov
jl
sub
in
push
or
je
sub
stos
test
cmpl
loopne
in
mov
cmp
cmp
or
enter
cmpsb
or
add
popa
aam
inc
push
push
popf
cmp
jbe
xor
bound
nop
rolb
cltd
outsb
ljmp
shll
xor
lea
or
pop
add
hlt
inc
movsl
ror
push
dec
jle
or
pusha
xchg
dec
mov
jmp
inc
pop
and
push
pusha
adc
out
decl
fsubr
or
sbbl
xchg
push
in
icebp
out
push
test
pop
adc
xchg
mov
push
addb
push
test
dec
mov
mov
jecxz
jnp
and
sbb
sub
inc
xor
sub
cmp
jge
cli
test
pop
sti
pop
es
imulb
lods
xor
inc
nop
mull
popl
add
push
jmp
push
cmp
xchg
xor
push
inc
sub
dec
jae
imul
xchg
call
je
dec
sub
repz
push
sub
xor
imul
add
mov
adc
xchg
adc
repz
xchg
fucom
sub
dec
pop
pop
pop
mov
call
into
push
dec
test
sbb
inc
xchg
loopne
lds
push
int
inc
mov
add
dec
pop
cwtl
in
add
adc
lcall
fcomps
call
add
inc
insb
je
test
jbe
lret
add
jo
and
lret
sbb
mov
ret
sub
and
cmp
add
adc
push
dec
sub
adc
adc
add
dec
or
sbbl
aas
xchg
adc
push
push
push
push
rcrb
fcoml
ret
fmuls
pop
adc
daa
pop
push
dec
mov
jo
rclb
pop
xchg
roll
push
ret
lock
int3
fwait
xor
push
add
dec
pop
cmp
push
ficomps
push
test
imul
dec
fiadds
add
popf
add
push
test
jo
inc
imul
sahf
add
add
pop
mov
je
or
jnp
sahf
or
insl
pop
js
jne
add
orb
inc
scas
push
scas
outsl
push
pop
push
sti
leave
js
pop
in
or
in
mov
iret
stc
sub
lds
ret
pop
pop
or
jl
lret
insl
mov
je
lret
push
int
and
addl
sbb
and
mov
cmp
jle
jmp
test
ret
insl
and
mov
add
push
mov
arpl
adc
scas
add
movsl
add
jmp
js
sbb
mov
push
push
inc
lret
sbb
sbb
sbb
scas
sbb
mov
aad
stc
jb
test
pop
inc
clc
xchg
dec
cmp
add
and
adc
clc
adc
sub
loopne
rclb
push
jp
loop
adc
push
sbb
nop
mov
inc
and
cmp
add
pusha
add
ret
xor
sub
xchg
xchg
inc
nop
loopne
mov
and
jmp
daa
sbb
ret
mov
or
mov
sub
jmp
sbb
loopne
icebp
in
adc
data16
lds
adc
aas
add
or
lcall
push
pop
int
jns
jbe
mov
lcall
sub
dec
repz
mov
jb
adc
add
push
lcall
call
into
andb
xchg
adc
add
sbb
and
call
push
pavgw
adc
adc
adc
push
add
iret
push
in
and
push
dec
adc
sub
sbb
sub
push
push
lock
add
pop
cmp
mov
pop
dec
mov
xchg
push
pop
jo
je
sbb
in
inc
jl
sar
fwait
xor
xchg
add
or
scas
inc
orl
adc
movsl
adcb
jne
mov
and
mov
push
pusha
fdivrs
cmp
loopne
imul
pop
repnz
movsb
and
xchg
cmp
sbb
push
orl
push
gs
aam
test
movsl
notb
xchg
sbb
dec
insl
add
cs
or
stos
loop
loope
pop
pop
fistpl
fs
es
cmp
ljmp
pushf
push
mov
repz
dec
jl
mov
into
out
push
jge
push
cmpsl
stc
cmp
je
mov
sbb
int
jg
jg
movb
int3
sbb
or
add
test
or
inc
call
jne
cmp
jne
and
lods
pop
pop
and
setno
or
pop
jmp
or
aaa
sub
pop
lock
mov
les
xor
call
ja
sub
dec
cmp
mov
roll
mov
push
push
pusha
sbb
jne
push
sub
out
dec
fadds
push
enter
dec
push
movsl
push
mov
mov
push
sbb
jl
movb
sbb
xchg
pop
dec
mov
test
jo
adc
vsqrtss
add
push
outsb
iret
dec
pop
push
add
adc
popf
orl
inc
inc
sbb
sub
mov
ds
repnz
jne
nop
call
push
xor
sarb
mov
xchg
rorl
lock
out
clc
add
or
push
adcb
mov
jge
cmp
inc
clc
adc
fs
fadds
xchg
out
jno
add
dec
les
dec
test
xchg
push
mov
nop
rorl
push
aas
cs
cmp
adcl
add
pusha
mov
push
aam
jle
popl
pop
inc
mov
aam
or
lahf
or
jb
xchg
push
mov
or
jno
mov
inc
xorl
int3
nop
push
jl
outsb
adc
jmp
and
mov
push
push
push
enter
pop
call
out
call
sbbb
test
call
inc
xchg
jbe
std
cmpsb
rorl
mov
or
and
iret
add
orb
xchg
dec
jl
and
push
mov
cmp
lds
rcrb
sub
add
fistps
push
popf
rorb
and
push
inc
push
mov
adc
push
cs
arpl
insb
and
fisttpl
imul
jo,pn
mov
mov
fistl
and
dec
sub
orb
sbb
add
shlb
adc
add
dec
cmp
push
sbb
je
int3
mov
sub
adc
add
push
xchg
shl
jle
int3
inc
pop
push
lods
and
sub
push
scas
dec
cmpsl
nop
mov
iret
mov
push
lods
movl
xchg
inc
add
ret
mov
or
pop
int3
mov
adc
mov
mov
test
add
dec
cmpsl
nop
jl
inc
add
fsubr
pop
inc
dec
and
pop
ljmp
mov
lods
mov
loope
xor
pop
inc
sub
mov
xor
push
and
and
xchg
xor
ljmp
mov
pop
inc
dec
sub
push
dec
pusha
scas
or
pop
or
sbb
and
push
dec
or
out
das
fidivrl
rol
sub
sbb
add
js
mov
adc
sub
cli
inc
mov
ljmp
lret
jne
bound
out
add
sub
pop
add
push
push
add
sbb
movsb
push
fmull
movsb
fsubr
pop
jne
ret
pop
negb
jne
stos
xchg
adc
in
sub
sbb
pop
push
imul
mov
filds
out
imul
sti
pop
xchg
xchg
push
add
xorb
jg
inc
lahf
popf
add
or
push
and
sub
shlb
loop
pop
loop
das
dec
sub
jl
lahf
mov
xchg
xchg
out
sub
test
shl
push
mov
neg
mov
and
push
iret
cltd
rolb
fildl
and
ror
movsl
lods
pop
leave
push
test
bound
std
pop
iret
adc
rcrl
cmp
sbb
xchg
cmp
cmpb
scas
imul
rcrb
ret
loopne
sbb
push
adc
enter
iret
sbb
mov
sbb
icebp
pop
jmp
fs
push
clc
mov
xchg
ds
cmp
subl
push
adc
add
shrl
jo
xor
orb
sub
hlt
mov
rorb
mov
int
mov
decb
cltd
sub
outsb
data16
clc
add
xor
add
mov
push
rol
adc
add
lahf
jmp
pop
insb
mov
aam
push
sub
jmp
dec
sbb
in
pop
sbb
fistps
fisttps
cs
or
or
xchg
mov
mov
hlt
lahf
fsubs
lcall
add
sbb
push
add
cmc
lods
test
push
lret
in
add
dec
add
jnp
xchg
sbb
xor
imul
imul
push
add
lahf
inc
aaa
xor
aaa
add
pushf
cli
test
dec
jno
inc
testl
ja
pop
mov
inc
testb
mov
clc
xchg
pop
bound
adc
cmp
jge
cmp
das
cmpsl
pushf
cmp
mov
enter
pop
rcrl
add
add
or
jns
mov
incb
std
xchg
arpl
mov
insl
ret
sbb
jg
je
shlb
sbb
stc
jo
pop
pushf
add
push
pop
add
sub
pop
fwait
sbb
push
fstps
mov
fucom
push
pop
add
mov
pop
mov
in
add
icebp
sub
cld
jg
cltd
xor
fstps
arpl
sub
in
popf
insl
mov
out
jo
push
add
sub
movsb
sub
xor
xor
dec
fadd
mov
push
adc
xlat
xor
adc
lahf
push
xor
cwtl
sub
sbb
xor
test
pop
movb
sub
adc
push
into
mov
add
and
add
mov
call
inc
xor
mov
dec
dec
mov
inc
clc
popa
adc
xor
cmp
cmpsb
add
sbb
or
jb
inc
js
or
push
add
je
je
add
fs
stos
jle
je
iret
out
out
jne
sub
je
xor
loopne
mov
sub
ja
iret
mov
pop
fadds
test
inc
into
sar
insl
cmp
add
push
std
add
jo
pop
cmp
or
and
jg
pop
push
or
adc
fwait
jg
sbb
ss
sub
jmp
push
jle
jne
jbe
jmp
xor
ljmp
scas
outsl
imul
bsr
jl
js
jg
sub
jle
xlat
or
and
xor
movsl
ret
push
or
into
inc
ds
ss
sbb
dec
or
jae
dec
push
rolb
out
push
adc
jp
lock
pminsw
jmp
jg
sbb
mov
dec
or
xor
inc
xchg
sbb
dec
push
cmp
push
pop
fisubrl
mov
xchg
sub
ret
mov
cmp
mov
jle
mov
je
aaa
push
sarb
imul
pop
and
je
lds
inc
mov
arpl
cmp
mov
mov
jns
dec
popl
lea
nop
xor
and
push
out
jg
inc
cmpsl
push
and
and
sbb
loopne
shrb
js
cmp
push
or
xchg
pop
mov
data16
adc
ret
mov
mov
push
inc
dec
call
sub
rclb
pop
sub
insb
add
imul
shlb
cmp
mov
mov
mov
divb
or
inc
mov
push
sbb
mov
push
dec
add
add
icebp
clc
aas
add
jo
jle
mov
cltd
lret
pop
push
adcl
and
clc
jmp
addr16
dec
dec
insb
test
scas
shrb
clc
inc
sbb
test
pop
cmp
roll
dec
adc
adc
push
sub
dec
popl
fcoms
test
jae
mov
adc
test
rcrb
rclb
repnz
mov
rcll
pop
test
inc
cwtl
mov
mov
jg
push
pop
push
pop
mov
int3
pop
aaa
inc
lret
inc
push
push
adc
and
push
fmull
xor
pop
jne
push
in
ficoms
cmpsb
dec
mov
dec
das
sub
add
jns
inc
dec
stc
sahf
test
stos
push
adc
lahf
xchg
pop
mov
xchg
push
add
and
sub
loopne
dec
iret
pop
in
mov
inc
mov
iret
xor
sub
mov
sbb
repz
or
mov
add
fldenv
test
enter
aaa
ret
pop
pop
imul
sub
pop
addl
xchg
jle
jo
inc
jmp
ret
pop
pop
mov
or
adc
lea
mov
adc
repz
xor
lods
out
aam
in
mov
pop
data16
cmp
fwait
ss
xchg
or
add
bts
in
xor
sub
sub
insb
popf
push
pop
ds
testb
mov
pop
push
mov
sub
adc
xchg
inc
xchg
mov
loop
push
jle
repnz
ret
add
outsb
std
mov
push
add
leave
mov
ss
in
lea
jle
push
sbb
adc
ds
xor
fdivrl
and
addr16
pop
sti
test
mov
jle
insl
dec
inc
ds
adc
sbb
and
adc
inc
dec
cmp
loope
fists
repnz
pop
loop
pop
inc
ret
movsl
loope
outsl
and
adc
jg
movsb
xor
and
addb
and
jge
sub
xchg
fwait
push
xchg
adc
shlb
jmp
outsb
loop
test
jo
inc
push
and
movsb
imul
sub
outsb
mov
push
add
fwait
cli
pusha
push
adc
jne
push
loope
xchg
rcrb
sbb
pop
loopne
jo
jo
dec
fadds
or
xor
adc
inc
pushf
movsl
mov
es
std
stos
jmp
and
je
sub
je
push
into
and
popa
out
mov
add
lahf
adc
test
add
sbb
adcb
sbb
jg
add
and
xlat
fwait
push
mov
scas
xchg
add
sbb
ret
xchg
pop
pusha
insb
loope
lds
and
adc
bound
loop
mov
pushf
push
fmull
adc
jns
cmp
sub
cltd
or
ss
adc
imul
push
add
inc
es
insb
push
dec
xchg
sbb
clc
push
dec
push
fists
adc
aaa
enter
sub
and
fmuls
icebp
push
pop
push
xor
popa
pusha
fs
test
fistl
inc
inc
add
push
adc
shlb
adc
mov
and
arpl
dec
jg
jo
push
repnz
jo
and
je
adc
decl
pushf
inc
add
xchg
lods
push
push
pop
jp
dec
aaa
mov
push
and
test
scas
fwait
dec
lods
imul
cld
fwait
or
dec
mov
mov
jns
aaa
and
add
icebp
xor
mov
cmp
xor
add
cmp
pop
push
sbb
outsb
xor
xchg
lea
push
add
and
test
push
sub
adc
fists
adc
mov
cmp
push
and
out
adc
push
filds
add
jne
add
mov
pop
mov
push
iret
push
inc
mov
or
out
in
lahf
add
and
xor
inc
inc
dec
sub
inc
add
icebp
inc
and
cmp
test
inc
dec
fldenv
lea
push
mov
test
and
xchg
or
imul
push
inc
xchg
and
jp
xor
or
jbe
lods
push
pop
js
test
sbb
add
lahf
xor
pop
cmp
je
inc
jmp
test
int3
pop
push
pop
push
add
or
or
out
dec
mov
out
xchg
rorb
and
pop
test
sbb
xchg
pop
sbb
icebp
adc
cli
sbb
push
inc
bound
push
std
inc
xchg
pusha
outsb
dec
inc
dec
or
fs
arpl
popl
mov
xchg
adc
mov
idiv
mov
mov
push
xor
sbb
out
push
jmp
sbb
xor
lcall
and
sarl
stc
and
iret
repz
mov
cmp
repz
pop
das
dec
sahf
dec
call
cli
sbb
fnstsw
mov
sbb
push
add
jo
stc
pop
faddl
aam
leave
lods
movsb
sbb
pop
or
push
inc
ds
xchg
mov
and
dec
dec
nop
iret
mov
gs
xchg
push
push
pop
jbe
dec
dec
insb
aam
push
xor
orb
inc
ss
mov
jge
sub
jo
je
xor
enter
sbb
sbb
test
leave
xorb
nop
and
out
cwtl
pop
and
jb
mov
xchg
test
fdivrs
push
jb
mov
lcall
add
sahf
out
inc
jnp
popf
iret
sarl
icebp
add
cmp
repz
imul
jle
inc
js
movsb
imul
rolb
nop
xor
clc
mov
mov
cmp
xchg
ret
push
cs
mov
adc
dec
add
xchg
inc
pushf
or
xor
adc
jno
mov
jge
sub
cmpsw
push
jl
daa
add
mov
dec
dec
sub
repnz
popa
sub
add
mov
andl
imul
pop
lahf
cld
inc
cmp
cmp
je
jo
adc
repnz
and
push
xor
mov
rcrb
pop
add
sub
in
inc
cmp
popa
xor
push
or
mov
mov
inc
lods
sub
and
jl
rclb
fstps
mov
cmp
add
daa
mov
sub
ss
or
nop
arpl
shlb
add
xor
movsb
fcom
xchg
or
dec
ss
outsl
inc
or
mov
add
sbbb
test
xor
dec
jmp
icebp
movsl
loopne
mov
push
adc
cmp
lods
add
add
inc
pop
dec
and
add
pop
imul
addr16
dec
pop
leave
xchg
add
and
pop
call
mov
lcall
mov
mov
xorb
ret
dec
adc
cmp
mov
jo
jb
and
sbb
loop
jge
sub
repnz
leave
and
mov
out
lcall
ret
out
cli
sub
jmp
sbb
add
jle
push
jg
testb
lea
sub
rorb
rorb
jmp
imul
pushl
dec
clc
push
mov
mov
mov
test
xchg
les
inc
jb
pop
and
mov
xor
push
insb
or
loope
sbb
loope
mov
shlb
lods
fistpl
sarb
arpl
enter
cmp
pop
push
push
iret
inc
inc
xchg
pop
insb
add
insb
push
add
push
jp
xchg
out
dec
pusha
mov
hlt
aam
je
inc
xchg
add
or
fsubrs
into
sub
pop
fstps
hlt
shll
and
dec
add
pushf
xchg
js
push
mov
jo
js
adc
int
jg
xchg
sub
jnp
pop
cmpsl
loopne
cmpsb
clc
into
js
sarl
mov
push
lods
lea
lock
lret
std
fiaddl
jle
fstpt
push
adc
icebp
mov
js
push
fstp
fdivl
adc
sbb
testb
leave
in
sbb
adc
pushf
cmp
mov
sbb
cld
clc
sub
fildll
cltd
dec
std
mov
rcrl
xchg
add
int3
mov
popa
xchg
pop
push
daa
inc
jl
push
mov
mov
xor
jl
pop
and
out
add
push
and
push
mov
and
pop
imul
sub
cmp
lds
push
dec
mov
rcrl
in
icebp
movsl
jmp
sahf
testl
lea
pop
sahf
clc
lea
cmp
and
add
inc
and
push
xchg
xchg
sub
test
pop
jg
mov
shlb
mul
or
push
sub
push
and
popa
sbb
jl
xor
or
orb
xor
je
repnz
add
cmp
sub
mov
scas
sbb
cmpsl
inc
lock
inc
push
mov
dec
fdivs
fldl
push
mov
cs
lea
xchg
stos
pop
add
xor
fdivl
movsl
pop
add
push
pop
ret
pop
xchg
pushf
inc
push
lahf
cmp
inc
push
movb
dec
push
mov
scas
shlb
andb
in
push
pop
mov
jb
test
adc
push
jge
fldt
loope
test
stc
dec
mov
push
dec
test
fsubrl
jle
and
push
xor
jg
cltd
cmp
mov
adc
dec
mov
pop
rorb
and
mov
js
mov
dec
movsl
mov
cmp
sub
adc
xlat
dec
adc
push
push
js
jo
loop
popf
cmp
jl
add
rcrl
mov
neg
jno
xchg
xchg
mov
sarb
iret
hlt
jb
mov
mov
pushf
cltd
movsb
jge
sbb
xor
in
pop
mov
adc
sub
push
xor
pop
fs
ljmp
inc
push
push
mov
cmpsb
ja
mov
iret
inc
cld
pop
rclb
mov
cmp
jne
mov
jle
cwtl
inc
ja
filds
inc
dec
test
mov
mov
mov
push
mov
in
into
in
test
push
or
imulb
mov
nop
xlat
push
cmp
lahf
sti
ja
or
bound
leave
push
loope
or
or
imul
arpl
cmpb
sub
push
je
mov
test
xchg
adc
inc
cmpsb
nop
and
pop
xchg
mov
ret
lds
push
sbb
and
repz
mov
add
add
inc
cltd
mov
inc
loope
mov
push
outsl
bound
aad
inc
daa
popa
mov
add
ffreep
cmpsl
xchg
pop
fwait
loop
out
inc
xchg
imull
jne
outsb
adc
adc
clc
sub
and
inc
stos
inc
add
sbb
push
jnp
outsb
push
push
ds
or
mov
sbb
jns
cwtl
sub
and
mov
sub
dec
mov
mov
xor
xchg
and
adc
scas
push
jb
incb
sub
xor
sbb
fmulp
push
push
and
or
or
cmp
mov
aas
lods
lret
mov
cmp
outsl
xor
int3
jle
cmp
sub
clc
push
fwait
insb
fldenv
xchg
cmc
ss
cli
jne
or
shlb
lcall
push
dec
push
cmp
inc
mov
lahf
add
fcomip
fsubr
dec
cmp
pop
dec
cmpsb
push
push
push
dec
idivl
repz
push
dec
dec
add
inc
fidivl
dec
push
add
stos
push
repz
push
jmp
sbb
sub
adc
mov
setl
push
lock
dec
dec
dec
mov
test
mov
pop
test
lea
add
dec
or
sub
push
or
and
xor
push
or
pop
ret
pop
mov
movsl
nop
and
dec
fstl
in
and
or
xchg
aam
addr16
add
fdivr
push
jmp
or
pop
push
das
or
outsl
in
inc
pop
pop
addr16
test
dec
cmp
popf
pop
xchg
dec
xor
cmp
cs
cltd
or
pusha
adc
pop
inc
data16
or
es
cmp
inc
sub
push
dec
or
in
mov
and
or
sbb
mov
and
js
sbb
xchg
inc
adc
push
inc
fisttpll
add
and
js
inc
add
xor
xchg
add
cmp
inc
ljmp
dec
jl
mov
mov
ret
adc
mov
test
add
add
not
push
xor
or
sub
jl
push
xlat
xor
jmp
push
mov
fldenv
shrl
add
jnp
add
cmp
sbb
dec
sub
sbb
jne
mov
adc
test
adc
movsb
or
in
cmp
jne
pushf
jo
jae
mov
sbb
cltd
push
adc
mov
outsb
imul
out
in
in
scas
xchg
fiadds
xchg
dec
out
adc
mov
dec
push
push
push
imul
push
lea
mov
add
mov
mov
cmp
sub
mov
adc
cmpsb
insl
subb
or
fcoms
shrb
jo
add
push
outsl
lret
and
jo
stos
xor
and
adc
fistl
pop
or
xchg
ficompl
sub
sbb
xor
mov
lea
pop
insl
xchg
je
int3
inc
lock
and
aam
cmpsb
xor
xchg
mov
jne
cmpl
or
in
call
add
sbb
mov
dec
in
arpl
sub
stos
xchg
sbb
rclb
mov
addr16
sarl
add
sbb
arpl
or
lock
dec
xor
mov
mov
pop
and
pop
adc
add
pop
mov
mov
mov
movsl
movsb
lods
lds
cmpsb
and
test
loope
in
or
adc
xor
shll
lock
pusha
inc
je
mov
out
enter
mov
and
adc
jne
pop
lea
mov
and
adc
fdivs
pop
xorl
adc
sarb
mov
dec
xchg
adc
mov
ljmp
mov
push
jg
inc
and
add
fldenv
xor
add
adc
jne
pop
pusha
dec
loopne
or
cmp
sahf
and
sub
fsubrl
or
movsb
or
popa
dec
jb
inc
jg
mov
inc
pop
enter
pusha
mov
es
mov
std
add
pop
xor
add
adc
cld
orl
mov
mov
and
sub
imul
mov
sti
and
mov
test
enter
hlt
push
push
fs
add
inc
dec
xor
mov
add
mov
pop
cmp
loope
mov
out
rorl
sub
cltd
sub
jle
jle
ds
pop
in
lea
mov
icebp
lret
roll
out
xchg
out
inc
jb
push
adc
daa
fimull
mov
lahf
mov
dec
dec
mov
add
xchg
pop
add
xchg
lds
subl
daa
rorb
or
cmp
aaa
mov
jo
cmpsb
xchg
add
dec
inc
iret
mov
push
and
pop
cli
imul
fdivrs
pop
sbb
movsl
adc
ja
xchg
push
test
add
and
and
xchg
push
mov
fisttpl
jmp
jne
pop
in
pop
shl
pop
mov
test
xchg
sbb
sbb
cmp
in
lods
ret
or
xlat
push
mov
mov
call
ret
or
addl
add
mov
add
fdivrl
rol
ret
repnz
mov
push
adc
pop
jg
rcll
xchg
into
mov
cmp
push
sahf
mov
imul
cli
adc
jl
add
lods
mov
mov
adc
loopne
movsl
jecxz
ds
movsb
sub
loop
inc
outsb
outsb
add
outsb
lds
lret
leave
and
rclb
cmpsb
ljmp
push
mov
sub
pop
add
dec
sbb
dec
into
les
mov
pop
inc
pop
movsl
xchg
les
inc
jne
pop
nop
sarl
push
rolb
push
mov
stos
mov
pop
mov
lahf
xchg
push
aam
mov
jb
fs
pop
jecxz
jge
mov
jne
mov
imul
and
cmp
sbb
add
mov
enter
push
imul
push
sub
xor
sub
dec
or
das
out
jnp
pop
lock
dec
and
dec
push
neg
sbb
and
push
push
les
xor
jns
jmp
lds
sub
xchg
fsubr
imul
push
das
push
pop
sub
push
xor
jl
je
mov
mov
stos
jmp
or
mov
push
inc
addr16
mov
jo
add
fisttps
popl
sub
sub
adc
sbb
push
or
rcl
imul
inc
hlt
mov
dec
ret
sub
sub
adc
je
cmc
adc
jge
sub
or
xchg
test
jmp
ja
fisttpll
sub
xor
lds
pop
add
or
cmp
adc
lods
add
sub
mov
adc
dec
fsub
test
rorb
mov
sub
je
mov
push
arpl
jl
cmp
sahf
xor
pop
jmp
push
jmp
push
inc
fbld
fldt
add
mov
leave
test
push
dec
in
add
adc
adc
dec
cwtl
inc
insb
or
sub
xor
jl
in
mov
out
sar
mov
shr
add
pop
mov
imul
and
mov
outsb
jl
sbb
and
sbb
gs
add
rcll
adc
ret
jmpw
pop
loopne
mov
in
sbb
xor
shlb
ljmp
push
out
jmp
ret
mov
shrb
jnp
addr16
push
outsl
or
fs
divps
arpl
mov
cli
adcl
pusha
cmp
jno
push
nop
cli
mov
movsl
mov
sub
or
repnz
push
sub
jne
or
pop
and
or
fdivrl
xlat
mov
dec
jae
shrb
xchg
pop
push
adc
rol
into
nop
fistpll
or
dec
adcb
pop
fucomip
sahf
mov
ficoms
mov
or
pop
dec
shlb
movsl
mov
aam
sub
sbb
movsl
add
cli
cld
push
cmp
or
add
mov
jle
cmp
mov
jo
movsb
xor
add
inc
je
es
pop
sbb
push
push
aas
insb
ja
test
adc
mov
dec
dec
or
add
mov
pop
inc
push
push
inc
aaa
dec
aaa
pop
sub
mov
or
and
aas
pop
dec
jmp
dec
push
imul
adc
push
jmp
dec
and
push
xchg
and
pop
lahf
stc
test
pop
xor
or
sti
or
mov
daa
test
jp
out
xlat
sbb
push
cld
adc
fcompl
xor
push
pop
ja
cmp
mov
jge
mov
mov
jmp
sub
jmp
add
out
jecxz
mov
adc
push
add
or
outsl
push
je
lcall
cmp
lahf
add
mov
jle
aam
dec
inc
and
mov
mov
lods
int3
push
pop
push
push
push
push
popf
and
lcall
insb
and
xor
int
out
sahf
ja
push
xlat
fsub
loope
fdivs
ror
aas
or
pop
lahf
push
or
adc
iret
repz
sub
push
daa
sub
xor
loope
adc
into
lahf
mov
inc
aas
in
outsl
adc
les
lcall
xor
push
push
push
call
sbb
pop
loope
push
adc
fimull
and
cmp
movsb
cmp
je
adcl
lahf
aas
les
punpckhbw
cmpsl
push
les
mov
jb
test
ret
jmp
xchg
add
in
aas
adc
sbb
pushf
pop
addb
pop
or
pop
pop
pop
int
subl
shrl
mov
sbb
push
test
push
cwtl
rcrb
and
inc
dec
ss
mov
lret
stc
pushf
sub
sub
add
enter
into
into
lcall
sub
fists
fstp
dec
adc
sbb
or
add
jmp
sub
or
mov
loop
add
xchg
test
and
cmp
lahf
push
mov
data16
shrl
add
add
clc
fs
mov
jne
push
mov
daa
or
loope
jecxz
outsl
daa
enter
push
jne
dec
fmul
repz
mov
mov
fld
pop
mov
mov
lahf
or
repnz
xorl
adc
movsl
mov
ffreep
inc
xor
and
sbb
sub
mov
and
add
push
or
inc
push
adc
in
mov
pushf
cmpb
rcrl
xor
pop
mov
pop
jg
std
inc
or
cmp
mov
dec
add
add
rolb
adc
mov
pop
lods
and
js
call
in
push
mov
out
pop
pop
pop
pop
adc
or
dec
je
mov
push
mov
das
cs
push
jmp
inc
push
sub
loopne
mov
fs
mov
jmp
or
sahf
inc
inc
xchg
add
adc
cmpsb
jecxz
pop
add
mov
lcall
mov
dec
mov
mov
sbb
xor
lret
shrb
dec
jne
mov
push
sbb
jmp
push
mov
adc
mov
les
push
adc
jl
mov
insl
test
je
sub
cmp
mov
shl
push
cmp
add
dec
loope
or
cs
xor
xchg
dec
sub
add
test
pop
and
mov
mov
adc
or
leave
cmpsb
inc
xlat
mov
mov
mov
inc
cwtl
sbb
mov
pop
dec
lea
and
pop
push
jecxz
mov
ret
dec
imul
cmp
push
ds
ret
shrl
push
loopne
call
lock
imul
js
pop
add
adc
push
add
cltd
mov
imul
pusha
add
pop
mov
testb
add
fcompl
dec
xor
push
ficomps
or
shrd
dec
inc
push
jb
ret
jg
adc
sbb
mov
and
sbb
stc
push
mov
jl
cmp
mov
or
arpl
addb
mov
push
or
dec
ret
push
mov
out
loopne
sbb
and
pop
add
mov
add
bound
xchg
aas
bound
jl
sbb
js
jecxz
add
ficomps
aas
cs
outsb
sbb
arpl
add
fisttps
cmp
pushf
cmc
or
or
lahf
loopne
fwait
rorl
out
test
je
push
jl
repnz
dec
push
rcll
mov
jb
or
mov
pop
add
jne
and
sbb
add
add
mov
jmp
mov
sbb
mov
lret
enter
fisubrl
popf
push
cltd
test
lahf
push
xor
push
and
or
dec
push
out
xchg
mov
and
jg
mov
inc
dec
orb
xchg
or
rcr
lahf
inc
or
mov
popf
xchg
lahf
sub
xchg
sub
jl
sub
mov
fdivs
or
mov
test
sub
mov
sti
add
loope
adcb
lds
daa
shll
mov
or
dec
jle
roll
push
fisubrs
lods
decb
outsl
movsl
test
pop
mov
dec
or
or
sbb
pop
push
je
adc
jno
scas
adc
pop
inc
dec
inc
or
push
mov
dec
and
addl
sbb
mov
or
mov
ror
cmp
scas
das
adcl
roll
test
inc
mov
lahf
add
out
push
dec
or
and
shlb
and
ljmp
push
or
xor
adc
aas
lahf
lock
mov
add
add
rorb
add
xor
pop
jo
jp
ds
outsb
sbb
ds
jne
mov
fimull
add
pusha
cmp
rcr
loope
and
mov
or
lock
lcall
xchg
jne
fimull
flds
aam
inc
mov
ja
add
movsl
dec
lods
push
cmp
add
in
dec
cmp
cmp
push
imul
sub
and
push
lcall
or
xchg
add
push
mov
jbe
add
dec
adc
push
or
inc
mov
inc
mov
or
mov
lock
mov
addr16
cld
rorb
sarb
push
and
mov
aam
lods
xor
push
dec
push
push
cli
sub
in
add
cmp
ja
xchg
repz
cmp
push
sbb
pop
or
sbb
sbb
or
push
push
sbb
adc
addr16
je
loop
pop
xchg
push
enter
inc
adc
mov
push
stc
cmp
push
les
in
inc
or
jle
leave
je
adc
aaa
xchg
pop
sbb
shll
mov
adc
inc
movb
shlb
das
in
fists
test
pop
sbb
rcr
lahf
ret
repnz
andb
jb
jo
cmc
and
in
add
xor
mov
les
fwait
sbb
sbb
dec
mov
test
jg
ret
dec
scas
sbb
adc
adc
aaa
lock
adc
sub
and
add
add
int
ret
bnd
inc
push
push
push
mov
inc
and
push
fcoml
pop
cmpsb
mov
icebp
xchg
stos
adc
fwait
or
inc
dec
je
or
dec
sbb
test
add
fcmovbe
cmp
adc
mov
dec
test
push
jmp
mov
sub
push
push
leave
push
or
and
mov
imul
stc
insb
cmp
stc
inc
or
fcoml
pop
pop
adc
mov
mov
and
fsubs
bound
or
mov
add
enter
or
repz
dec
fiadds
add
or
mov
dec
adc
aas
iret
shlb
mov
dec
dec
fwait
mov
mov
rcrb
aas
push
popf
ret
and
push
dec
movsl
and
leave
add
adc
movl
pop
mov
push
enter
push
leave
mov
addl
mov
jo
sahf
mov
mov
jmp
adc
loope
sbb
add
sbb
pusha
fstl
add
jb
inc
in
test
sbb
rcl
inc
sbb
decl
enter
push
mov
xor
adc
adc
enter
dec
jo
dec
or
jg
pop
or
mov
pop
sub
mov
mov
mov
push
daa
adc
xchg
xchg
inc
fisttpll
add
push
push
mov
shlb
mov
pop
or
outsb
test
xchg
jne
mov
and
mov
inc
inc
xchg
sub
cmpl
mov
sti
mov
shll
inc
jle
data16
pop
mov
xor
fstps
rcrb
pusha
adc
add
cmp
mov
adc
add
inc
dec
pop
insl
int
mov
aas
cmp
sub
out
jl
and
call
pop
inc
cmp
pop
pop
adc
cmp
cli
push
movl
aam
xchg
fnstenv
and
pushl
in
jmp
hlt
lds
or
fmull
adc
xor
push
ffreep
cmpsb
aas
or
mov
loopne
mov
pusha
or
fwait
push
adc
test
mov
in
inc
dec
and
outsl
push
xchg
shlb
push
repnz
cmpl
test
es
test
pop
shrb
pop
xlat
ret
movsb
and
mov
inc
enter
mov
and
in
cs
mov
fcmovne
fmull
adc
inc
jb
mov
enter
sbb
and
test
push
pop
xchg
pop
stos
js
add
push
test
push
sbb
jmp
dec
fbstp
jne
nop
insb
jo
pushf
and
push
sahf
rcl
movsb
jb
mov
cmp
xchg
add
adc
xchg
mov
inc
or
sub
loopne
ret
mov
test
mov
stc
lahf
test
pop
adc
nop
movsb
fistpll
and
enter
dec
enter
shl
aad
test
jl
mov
add
pop
enter
or
mov
lock
lock
xchg
je
pusha
lea
xchg
push
aad
fs
add
sub
pusha
data16
dec
jae
rorb
push
push
jmp
and
or
lock
sbb
add
mov
and
mov
pop
lcall
add
mov
pusha
lahf
add
dec
or
mov
cmpsb
pop
cmp
pop
push
enter
push
ret
sahf
orl
in
cmpsl
inc
fbstp
inc
add
call
leave
adc
sahf
mov
and
mov
add
ret
cmp
push
fdivs
adc
or
pop
les
mov
pushf
mov
add
fdivrl
les
sub
popa
add
andl
or
dec
enter
mov
rolb
out
in
xchg
push
push
sbb
add
mov
sub
xchg
push
ja
add
mov
adc
push
sub
push
sub
pusha
sub
out
sub
loopne
mov
std
lea
lahf
int
je
sub
or
pop
incl
xchg
lret
pop
pop
shrb
mov
mov
cmp
test
jge
loopne
jle
movsl
jmp
pop
or
add
inc
cmp
jl
hlt
mov
or
pop
cmpl
ds
sub
adc
mov
or
cmp
pushf
mov
lret
out
daa
roll
inc
cmp
jmp
or
pop
add
sub
xchg
jmp
test
cld
and
cmp
jl
lahf
enter
push
push
jne
pop
push
push
mov
xor
or
inc
cmpsb
xchg
int
movsb
jge
add
cmp
jg
dec
and
adcb
movsl
add
or
int3
lock
mov
lods
pop
push
cmp
rdtsc
mov
inc
cmp
jl
push
xor
jl
mov
rcrl
shr
xor
insl
out
inc
dec
fsubr
xchg
ss
cmp
jne
mov
cmpsb
cmpsl
jl
xor
fistps
neg
sbb
xor
and
mov
add
out
pop
pop
loop
jne
inc
cmp
jl
xchg
fwait
pop
pusha
add
dec
cld
pop
mov
enter
mov
mov
cmp
imulb
sbb
outsb
shrb
jmp
jne
lret
aad
fdivl
pop
push
pop
in
pop
dec
loope
add
jl
mov
mov
sub
sbb
dec
jl
xor
inc
cs
push
add
mov
xor
sbb
out
jl
mov
push
mov
je
mov
test
inc
xor
xor
and
xchg
xor
xor
dec
ss
mov
mov
rorb
push
push
pop
pop
movl
pusha
daa
or
insb
mov
jo
je
or
rclb
pop
mov
leave
cwtl
pushf
cmp
test
mov
push
sahf
addr16
shl
enter
test
add
push
imul
fsubs
movsb
in
or
jns
movsb
push
jmp
cld
icebp
cmpb
add
or
fcomip
fs
xorl
cmp
fildll
push
sub
outsl
push
dec
pop
jns
jo
repnz
loope
aaa
loopne
pop
dec
adc
int3
ret
push
adc
movsl
add
cwtl
or
shlb
mov
push
mov
sub
push
pop
cmc
or
lret
mov
test
push
and
outsb
add
cmp
jmp
sub
push
cwtl
push
cmc
dec
push
add
cld
adcb
push
cmp
jb
add
sbb
xchg
mov
sub
inc
add
je
mov
cmp
xchg
loope
adc
add
jmp
push
inc
push
mov
inc
ret
addr16
add
pop
add
jo
cld
push
sbb
sub
sub
imul
push
imul
rcrb
xchg
fbld
imul
and
lods
testb
jns
add
adc
test
or
sbb
ret
jo
loope
jp
pushf
xchg
std
and
push
jp
mov
cmp
push
popf
sbb
push
dec
loope
mov
repz
int
ret
test
adc
adc
ret
pop
jns
mov
shrb
int3
enter
xchg
jo
push
inc
mov
ret
sub
ret
insb
jl
cmp
out
leave
push
scas
cmp
push
movsl
xchg
fs
inc
adc
fsubr
add
cwtl
mov
mov
rorl
movsl
ret
mov
imul
cmpsb
pusha
imul
sub
or
sbb
loopne
jmp
mov
je
xor
sarl
es
insl
push
push
push
xor
fsubs
mov
rolb
fdiv
mov
insb
mov
and
dec
cmp
sub
push
out
lock
sub
in
and
cmp
insb
adc
cmp
mov
arpl
xor
fidivs
pop
fs
or
mov
pusha
xchg
jg
call
fimuls
xchg
jle
push
rol
ret
loopne
inc
test
and
push
ss
inc
dec
cmp
jo
mov
pop
dec
fs
cmpxchg
pop
dec
dec
push
sub
insb
lock
inc
es
push
sbb
into
bnd
inc
dec
jbe
pop
imulb
loope
push
outsb
inc
xchg
ljmp
fadds
pusha
cmpsl
or
cmp
in
adc
push
add
xchg
test
addr16
add
fs
movsb
push
je
add
mov
daa
mov
push
je
dec
xor
data16
rorb
mov
lret
jno
or
dec
ja
xchg
mov
inc
jl
xor
popf
dec
jl
push
aaa
cmpb
mov
inc
inc
sbb
and
mov
xchg
loopne
stos
out
cmp
and
sbb
adc
mov
pop
loope
pop
repnz
add
pusha
push
call
jo
push
or
test
jo
push
sub
mov
jle
ljmp
sub
cmp
jge
mov
dec
mov
mov
or
xor
adcl
push
je
sub
inc
xchg
sbb
and
es
xchg
iret
dec
into
push
lea
mov
iret
cmp
fists
aad
ret
inc
inc
popa
inc
pop
inc
mov
cs
jle
adc
dec
test
out
pop
inc
bswap
inc
mov
roll
out
insl
adc
mov
addb
inc
hlt
xor
in
add
cmpsl
pop
jo
cmp
lods
mov
jo
mov
call
inc
ss
and
pop
in
adc
xchg
ficoms
mov
mov
pop
fisubs
sbb
cmp
popf
movl
shlb
adc
mov
bound
inc
xchg
adc
mov
nop
loop
daa
ss
mov
inc
and
movl
jl
je
ret
xchg
stc
inc
inc
fimull
sbb
movsl
jge
mov
cmp
dec
or
fsubl
sub
scas
mov
sub
pop
cmp
mov
insl
sub
push
int3
xor
mov
xchg
or
pusha
test
sbb
pop
or
mov
mov
imul
push
jo
pop
and
pop
and
jnp
sbb
test
push
sbb
hlt
or
scas
loop
sub
pop
adc
xchg
add
jo
xor
pushf
mov
add
repz
pop
ret
add
xor
addb
push
movsb
mov
mov
dec
dec
out
mov
js
adc
lea
cli
lret
inc
push
push
clc
fmull
lahf
ror
sbb
hlt
mov
cmp
dec
sbb
fidivs
outsl
mov
add
ja
fimuls
or
call
jle
xor
data16
xor
sti
mov
add
adc
xlat
int
frstor
aaa
sbb
and
movsl
sti
pop
and
sub
xor
xchg
xchg
dec
cmp
inc
dec
outsl
mov
add
movsl
jb
dec
push
pop
pop
pusha
mov
push
cmp
dec
push
jo
je
xchg
jl
sub
stos
jle
addb
nopl
xchg
cwtl
lea
movsb
cmpsb
xchg
dec
movsl
repnz
and
into
loop
and
xchg
and
push
xor
movsl
repnz
cmp
mov
dec
enter
aaa
aam
movsb
push
fcomp
loopne
pop
inc
sub
clc
cld
sahf
dec
test
jmp
repnz
or
xor
or
in
jmp
and
and
cmp
xor
cmp
inc
dec
and
pop
pop
aaa
push
test
insb
inc
sub
jo
js
test
addb
nop
xchg
xchg
inc
sub
movsb
test
test
mov
into
gs
mov
mov
add
test
cmp
dec
add
fisttpl
pop
and
sbb
inc
add
mov
dec
test
lock
cwtl
loope
mov
xor
sub
jns
cltd
dec
xchg
sti
cmp
test
std
cmpsb
je
mov
push
sbb
fwait
ljmp
and
pop
inc
and
inc
adc
jp
jmp
negb
int
fs
sub
loopne
jmp
rol
jne
das
add
pop
roll
test
cltd
pop
stos
inc
inc
testb
fdivrl
push
jae
lock
pop
sub
pop
jge
fisttps
roll
push
data16
cmpl
jg
lock
mov
fcmovbe
or
andl
gs
out
aaa
mov
movl
or
mov
xor
adc
aas
orb
inc
add
mov
test
pop
xor
insl
test
mov
sub
or
add
cwtl
xor
and
ret
je
push
ja
fsubl
and
cwtl
xor
xchg
mov
sub
fdivs
xchg
add
xchg
xchg
xchg
out
add
push
jo
dec
jo
nop
sub
push
daa
and
mov
ja
je
das
adc
cmp
pop
mov
push
hlt
cmpb
push
lock
aam
mov
test
cmpl
mov
push
in
cmp
dec
lock
orb
dec
cmp
xchg
call
push
iret
insb
in
cmp
addl
inc
movsb
xor
xchg
push
aam
rcll
adcb
arpl
shl
dec
xchg
stos
dec
mov
je
push
xchg
int3
and
idiv
pop
je
clc
clc
icebp
fdivrl
clc
pop
pop
pop
je
pop
push
push
push
nop
and
cmp
jmp
imul
cmp
mov
add
imul
add
push
push
push
and
inc
xlat
shrl
out
mov
out
insl
cmp
popa
push
cmc
jne
aad
dec
test
jl
pop
loopne
fs
leave
mov
adc
mov
je
xchg
or
add
frstor
hlt
rorb
insl
jg
jns
fiaddl
jmp
and
cmpb
nop
xchg
outsb
aas
cld
cmp
jo,pt
lcall
sbb
inc
jns,pn
or
pop
inc
cmpsb
dec
xorb
dec
rorl
mov
add
imul
in
je
xchg
test
xor
pop
mov
add
dec
add
push
test
adc
fcoml
sbb
fdivrl
test
jns
cmp
sub
jno
inc
jbe
or
sbb
mov
add
inc
or
sti
jle
add
adc
lock
mov
sbb
or
out
and
add
in
pop
push
or
bound
adc
pop
cmp
ret
jmp
xor
adc
push
mov
cmp
pop
test
lret
push
int
cwtl
mov
testl
xchg
pop
adcb
dec
ret
adc
mov
les
fsubrs
sti
pop
or
imul
dec
dec
push
lahf
sbbb
cmp
push
mov
pop
sbb
push
daa
popf
movsl
pop
inc
rcll
test
jmp
jmp
push
mov
fistps
test
and
push
pop
shl
je
in
pusha
cmp
and
mov
sub
stc
mov
sub
rorb
add
and
imul
inc
movsb
aaa
push
pop
ret
mov
adc
and
mov
mov
ds
clc
push
inc
push
or
xchg
push
push
xor
push
jno
dec
sbb
jg
add
or
addb
inc
xchg
mov
pop
adc
adc
ret
push
adc
cmpsl
adc
or
jg
call
add
ja
mov
push
inc
pop
cmpsl
push
cmp
arpl
orb
cmpl
cmp
out
jae
ljmp
xor
test
push
push
or
jl
add
in
and
and
push
or
push
js
test
leave
jbe
push
add
jo
cmp
jbe
test
test
mov
dec
push
loope
jb
jge
pusha
je
call
sbb
mov
fisttpll
xchg
xchg
mov
call
mov
xchg
insl
enter
js
aaa
jl
sub
inc
arpl
test
std
repnz
add
unpcklps
pop
jne
pop
adc
clc
aam
sbbb
add
movl
mov
push
dec
inc
sbbb
push
add
or
inc
and
or
dec
inc
cmp
jl
loope
inc
mov
ret
fstl
jb
jg
dec
aas
adc
lea
clc
xor
lcall
jg
pop
sub
mov
mov
push
dec
xchg
push
ss
mov
cmpl
pop
imul
lret
lret
or
mov
cmp
dec
push
mov
cwtl
xchg
dec
rcll
idivb
cmp
adc
ds
mov
cli
dec
push
push
push
push
jae
lcall
add
jno
shll
push
inc
repnz
dec
push
sub
sub
clc
adc
and
test
cmpsl
inc
inc
je
and
pop
addb
or
push
add
sub
mov
je
sbb
mov
add
bound
jbe
ret
jmp
cmp
sbb
inc
xchg
dec
pop
std
stos
add
push
aaa
push
cmp
jne
pop
test
push
flds
push
orb
mov
inc
mov
xchg
test
inc
in
or
push
jnp
push
rcrb
sub
and
pop
and
jl
mulb
jno
adc
push
or
sahf
shlb
call
push
test
bnd
fisttpl
popa
add
inc
loopne
or
adc
ficompl
les
cmp
mov
ss
mov
sub
fidivl
or
or
mov
adcl
in
mov
sbb
daa
or
and
push
add
xor
add
sub
and
add
xchg
fimuls
or
insl
ret
icebp
xor
push
adc
neg
repnz
arpl
inc
sahf
mov
add
mov
mov
lea
cmc
call
cmp
mov
jo
les
push
pusha
push
and
mov
ret
xchg
push
mov
mov
std
adc
sub
mov
lock
dec
sub
adc
aaa
inc
rdtsc
add
inc
ret
mov
push
push
push
les
pop
stc
int
imul
mov
push
push
add
mov
push
dec
adc
xor
xor
pop
aas
mov
push
sub
add
and
in
pop
test
or
push
push
mov
adcl
adc
add
or
bts
je
sbb
xchg
push
call
adc
xor
ret
push
outsl
mov
add
jns
inc
inc
sbbl
add
mov
push
mov
cmp
mov
sbb
push
push
jae
push
dec
jecxz
outsb
jbe
dec
sub
push
inc
add
int3
mov
pusha
mov
pop
insl
xor
mov
push
repnz
xchg
sbb
sbb
fst
xor
sbb
ret
mov
cltd
inc
bnd
lea
pop
sub
loopne
jle
insb
mov
cmp
fnsave
and
mov
adc
or
pop
push
mov
pop
pop
aad
pusha
xchg
mov
push
out
aaa
cmp
xchg
cmpsb
push
adc
enter
push
stc
notl
add
jmp
fldt
jl
je
flds
and
mov
jl
arpl
jbe
sarb
adc
jno
adc
jae
jl
adc
add
and
push
jge
mov
adc
mov
push
dec
add
divb
xchg
sub
push
push
mov
sbb
jb
add
push
sub
jge
or
mov
ret
dec
adc
add
dec
les
lods
dec
cmpsl
lahf
dec
rcl
add
adc
dec
mov
repnz
fildl
or
insb
cltd
or
fists
rolb
mov
or
cmp
cmp
sub
pop
adc
sbb
js
idivl
sbb
pop
insb
cmp
pusha
mov
imul
out
xor
jno
sbb
call
and
push
and
add
movsl
insl
mov
xchg
lahf
push
inc
adc
mov
jge
push
movsb
int3
orl
loop
dec
test
push
scas
mov
jbe
cld
sub
pop
jne
and
or
mov
jns
pop
loopne
jnp
movsl
pop
jecxz
ss
add
mov
add
clc
jns
adc
add
faddl
mov
push
inc
sbb
rcll
xchg
adc
mov
or
out
fiadds
cli
mov
cli
jge
lea
cmp
cmp
loopne
push
shlb
push
lret
popa
jle
inc
cli
inc
clc
mov
jle
push
jg
outsb
push
pop
cmpb
lea
add
push
sub
add
jno
gs
nop
nop
shrl
imul
jns
rcll
add
iret
mov
sbb
mov
sub
ljmp
loop
sahf
cld
xchg
mov
mov
xchg
push
ds
ljmp
ret
cmp
sbb
lods
adc
jne
filds
pop
or
or
mov
mov
aas
jg
sub
pop
xor
sahf
rorl
roll
das
jbe
sub
pop
xchg
dec
push
mov
cli
out
sbb
jb
xor
or
sbb
in
and
stos
js
dec
stos
sub
enter
aam
or
fsubs
fimuls
es
ficomps
sub
sub
addr16
jb
xor
or
enter
inc
and
xchg
aam
sbb
push
clc
pop
and
insb
mov
pop
sub
dec
or
mov
jmp
stos
leave
xchg
and
in
loope
out
pop
push
aaa
cmp
je
orl
sbb
rorb
xchg
and
sbb
adc
sub
or
ljmp
test
push
dec
jnp
fstl
dec
pusha
dec
sbb
incl
loopne
shlb
rorl
mov
test
and
idivl
adc
dec
cmp
sbb
fbld
lock
es
sbb
test
out
sbb
fucomip
push
inc
call
xchg
sub
push
add
push
int
add
cmp
pop
sbb
insl
add
daa
dec
dec
test
hlt
jne
push
vxorps
int3
and
pop
pop
jl
inc
cmp
xlat
xor
lock
or
mov
js
pop
ret
ror
and
fisttpll
daa
sub
in
mov
sarb
addb
mov
dec
and
mov
loop
fmuls
les
test
mov
ja
test
add
lret
pop
jo
adc
sub
and
cli
push
icebp
or
flds
jp
or
pop
xor
sbb
xchg
out
aad
incb
fistl
add
rcll
test
sub
mov
and
pop
and
cmpsl
xor
push
ljmp
cmp
iret
pop
or
fmull
punpcklbw
sbb
pop
sbb
lock
cmp
cltd
dec
sarl
inc
jmp
lea
repz
sbb
adc
push
cmp
jb
fwait
pop
add
test
sahf
push
cli
adc
and
or
push
push
fcoms
lahf
iret
or
cmp
mov
add
cld
push
add
pop
cmp
inc
mov
fadds
lock
sbb
mov
mov
mov
fs
into
daa
std
push
inc
or
jne
sbb
sbb
dec
fisttpll
imul
pop
hlt
cmp
inc
add
add
inc
enter
push
in
and
cmp
or
cmp
test
scas
push
test
sub
test
repnz
or
push
inc
mov
adc
std
in
std
sub
mov
mov
or
sbb
movsl
or
push
roll
mov
dec
into
bound
dec
and
aaa
push
cmp
nop
inc
daa
inc
out
pop
inc
inc
test
fwait
push
sub
xchg
addb
push
ljmp
loopne
push
scas
mov
jmp
adc
sub
orl
pop
nop
out
and
adc
pop
pop
xchg
and
mov
nop
push
add
daa
jmp
dec
enter
mov
inc
pop
cwtl
hlt
dec
out
lea
push
fmuls
cwtl
in
test
push
call
loopne
bound
fwait
add
outsb
jmp
insb
or
adc
stos
add
cmp
sbb
movsb
cmp
sbb
inc
or
bound
repnz
lds
or
xchg
mov
inc
mov
push
or
scas
rcl
fldenv
cmp
mov
jmp
add
jbe
cli
adc
test
mov
inc
sarb
mov
and
mov
jmp
lea
jne
mov
inc
enter
jno
xor
mov
leave
in
mov
adc
pause
test
push
mov
dec
cld
mov
mov
xchg
icebp
pop
dec
adc
adc
jne
adc
xchg
xor
cmp
lds
dec
das
cwtl
xchg
inc
test
cld
or
sbb
les
movsb
rclb
xchg
add
lret
xor
add
cmp
adc
xor
jle
dec
cmp
xor
ds
or
add
mov
int3
xor
dec
out
jne
ret
inc
xchg
sbb
mov
push
push
dec
xchg
cwtl
mov
clc
dec
jne
aaa
inc
mov
mov
add
inc
or
add
sbb
cs
inc
loope
adc
xlat
int3
rcrb
mov
ret
dec
cmp
or
push
xor
jmp
shl
mov
jnp
inc
sbb
popw
mov
sbb
cs
pop
inc
dec
push
pusha
add
or
dec
jle
call
call
mov
mov
pop
lea
jle
pusha
mov
jge
nop
mov
add
add
xlat
xchg
cmp
xchg
sbb
test
jns
movsl
inc
xchg
jmp
mov
push
jno
sub
add
push
mov
or
or
mov
insb
pusha
testb
mov
popa
mov
pop
mov
xor
fists
mov
test
or
ds
jb
add
xchg
sub
dec
pop
add
xchg
xchg
divb
pop
push
and
lock
aas
sbb
cmp
dec
sbb
test
lods
and
lret
cmp
add
and
dec
xor
test
and
sub
or
xchg
or
fadds
xchg
clc
or
and
cltd
cmp
and
je
cmp
add
pushf
add
mov
repnz
or
mov
subb
sahf
jl
test
and
mov
jbe
dec
mov
enter
cs
testb
les
enter
sbb
add
pop
das
jbe
aam
or
inc
mov
add
and
ja
and
or
call
mov
fistps
xchg
lret
movsl
popf
mov
nop
cwtl
xchg
mov
sti
cs
add
cs
lret
les
enter
add
sti
ja
cmp
mov
icebp
insb
imul
jae
adc
ret
or
arpl
and
add
adc
adc
inc
decb
inc
mov
loope
sbb
bound
xor
pop
add
and
push
and
addl
sub
or
xor
loope
dec
cmp
inc
jne
pusha
dec
rcl
fbld
insb
pop
adc
mov
pop
pop
pushf
jg
push
leave
sub
mov
and
sti
cmp
mov
adc
sub
or
call
pushf
cmpsb
add
xor
notl
pop
mov
xchg
pop
imul
pushf
inc
xorb
ret
mov
xlat
inc
sti
pop
cmp
mov
inc
cmp
jecxz
je
leave
sbbl
cmp
and
push
sbb
leave
or
jle
xchg
add
sub
fdivl
push
fmuls
enter
cmp
lods
or
cwtl
sub
add
cmp
cmp
or
nop
xchg
add
and
add
push
mov
or
and
pop
or
mov
inc
add
and
push
fsubs
mov
pop
add
push
fwait
pop
mov
lea
and
cmp
lods
ret
es
sbb
loopne
cmp
mov
push
aad
add
dec
cmpsl
xor
mov
push
add
testb
enter
or
rolb
jno
or
inc
call
sarb
test
cmp
jne
pop
and
mov
fsts
rcrl
sbb
sub
or
ficoms
mov
add
repz
cld
sarb
push
ja
dec
inc
mov
cmp
cmc
add
inc
mov
cmp
lea
lea
sub
ja
popa
out
aas
push
push
push
cmp
and
cmc
sahf
adc
bound
mov
sub
int
dec
sarl
mov
mov
sub
sarl
xchg
lods
or
or
fdivrs
imul
or
dec
mov
mov
loopne
inc
roll
or
cmp
push
add
xor
push
sub
enter
adc
adcl
dec
rorl
cltd
push
das
and
mov
pop
ja
das
mov
ror
pop
imul
xlat
cmp
test
sub
xchg
test
mov
push
dec
add
jl
and
mov
dec
insb
sbb
mov
xchg
mov
sbb
pop
and
or
jb
add
ja
aad
pop
jo
pop
cmp
je
mov
push
lods
pavgb
arpl
lods
cmpsl
aad
fmuls
adc
dec
movl
xor
add
pop
mov
andb
dec
push
or
cmpsb
xor
das
clc
lds
fwait
daa
xor
mov
pop
xchg
stos
lahf
outsb
ss
push
or
dec
adc
int3
push
jne
aam
add
enter
mov
add
add
sub
mov
xor
mov
aas
push
adc
push
dec
push
pop
push
inc
fcomp
pusha
xlat
adc
pop
lds
jl
push
sbb
adcb
pushf
rclb
sub
push
sbb
adc
dec
scas
push
push
cmp
inc
add
push
push
add
xchg
cmp
mov
pop
iret
pop
add
add
fwait
cmpsb
or
push
jl
xchg
push
push
cltd
or
jl
add
lea
cwtl
cmp
pop
iret
stos
pop
adc
cmp
gs
imul
int3
incl
fidivl
bound
dec
mov
loop
ss
adc
rorb
xchg
cmp
adc
rorb
cwtl
jo
mov
fldt
inc
pop
jne
sbb
push
push
sarb
cmpsb
push
pusha
out
push
and
mov
mov
push
repnz
mov
pop
mov
mov
adc
dec
popf
pusha
scas
ret
test
aas
in
pusha
mov
pushf
adc
insl
loopne
mov
clc
mov
cmp
add
sbb
mov
popl
jns
jp
add
push
rcrl
in
xchg
push
jecxz
addr16
mov
test
push
outsl
push
sbb
or
jl
loop
adc
sub
sbb
push
stos
push
xchg
cltd
push
add
pop
lahf
mov
lahf
test
and
cmpb
or
das
dec
lods
jo
stos
aaa
sub
jo
jl
pusha
pop
xor
and
sub
pop
sub
xchg
adc
xor
inc
negb
cmp
loopne
mov
mov
int3
icebp
mov
adc
inc
xchg
test
call
in
jle
pop
add
or
test
ret
pop
sub
inc
mov
jnp
mov
notb
into
inc
jo
jo
push
or
sub
sbb
filds
out
pop
sbb
sub
cmp
sbb
sbb
or
or
jne
jae
lea
imul
adc
jne
sub
stos
cmp
sbb
popa
call
xchg
dec
jne
push
pop
popf
stc
scas
sbb
cmp
adc
xor
in
xchg
rcll
int3
jmp
arpl
cld
xchg
movsl
cmp
push
dec
push
dec
mov
pop
or
cmp
inc
movsb
adc
pop
add
push
sar
test
mov
fnstenv
inc
and
xchg
adc
sbb
dec
cmp
sub
inc
shlb
mov
hlt
add
clc
inc
mov
sub
faddl
ret
push
sbb
mov
mov
pushf
or
sub
dec
clc
sub
je
push
ja
ffreep
jmp
data16
push
shlb
add
add
add
xchg
mov
jecxz
dec
sbb
fcoms
das
mov
out
movsl
insl
aam
mov
outsl
cmp
js
inc
xor
push
push
push
call
aaa
pop
jne
xlat
outsl
add
out
mov
pop
adc
xchg
xchg
and
jnp
fadds
jmp
leave
mov
inc
out
test
mov
aas
dec
add
popa
lea
lea
adc
movntq
pop
xor
jmp
dec
or
sub
mov
xor
arpl
and
sbbl
xor
dec
dec
ret
cmp
xlat
dec
rol
sub
or
hlt
mov
sbb
inc
fnstsw
push
shrb
sbb
dec
xor
cmp
push
adc
ss
addr16
pop
fidivrs
pusha
popa
xor
lahf
mov
lock
sbb
or
daa
or
adc
scas
add
or
jae
bound
pop
xchg
xor
mov
push
push
incl
add
daa
jmp
push
lret
xlat
or
imul
cmp
andb
push
or
sbb
add
push
cmp
jns
dec
in
inc
bound
cmp
test
in
fnstcw
aaa
aas
es
inc
push
adc
sbb
cmp
dec
aas
std
push
lret
lcall
lret
xor
xor
out
push
inc
out
fcomip
fsubs
mov
leave
sbb
repnz
push
out
fidivrs
push
inc
push
js
pushf
je
ds
inc
mov
inc
cs
jg
jmp
inc
inc
rorb
push
push
sbb
mov
adc
cmp
or
jmp
inc
ret
lock
out
loopne
xor
push
mov
out
mov
sub
shrl
test
sahf
testb
mov
in
arpl
dec
mov
pop
xlat
or
fwait
das
push
rcll
lods
push
filds
stc
mov
mov
imul
adc
lret
loope
and
sbb
jno
sub
stos
cmpl
adc
cmpsb
test
add
int3
push
push
add
aas
aaa
arpl
es
jb
add
or
nop
or
enter
pop
inc
imul
mov
xchg
adc
mov
lret
movsl
pop
or
add
fistl
sub
cwtl
or
ljmp
inc
rclb
mov
jbe
gs
dec
cmpsb
xchg
movsb
push
es
jge
push
push
mov
mov
std
in
mov
cli
mov
popa
pusha
data16
push
out
xchg
or
jecxz
and
aam
aam
hlt
ret
mov
mov
mov
es
push
xchg
or
pop
mov
jns
test
int3
mov
in
fs
cmp
movsb
test
cmp
xchg
adc
cwtl
add
xchg
pusha
shrl
and
jl
mov
pop
sbb
push
fidivs
scas
mov
sbb
data16
pop
pop
jns
scas
sub
rcr
cmpsb
jb
ss
mov
or
das
ror
push
aam
xchg
dec
adc
jmp
les
clc
mov
addr16
jne
ret
out
movsl
and
cmpsb
pop
sub
movsb
cmpb
xor
xchg
sbbb
adc
sbb
xchg
ret
dec
cmovg
test
and
or
mov
inc
jo
cmp
shrb
push
add
jmp
sbb
scas
test
movsb
in
xor
and
pop
push
sub
enter
int
lods
shll
dec
pop
data16
sub
movsb
cmp
dec
pop
sub
pop
fiaddl
sarb
sqrtps
in
aam
sub
aaa
mov
pusha
or
push
aad
add
push
es
dec
add
lea
push
gs
adcb
jle
cmp
mov
jne
mov
imul
and
clc
and
push
cmpl
mov
das
test
sbb
sbb
add
add
jnp
les
xchg
sbb
inc
test
test
jne
jmp
mov
fsub
inc
sbb
xor
decl
pusha
pop
and
int3
data16
add
bound
inc
xchg
aas
lods
negl
xchg
inc
fists
fwait
adc
rcrl
sub
fs
add
pushf
into
inc
loopnew
push
jae
aam
out
negl
jl
and
push
addr16
mov
mov
sbb
cli
add
outsb
int3
jle
or
or
xchg
cs
paddb
sti
push
scas
call
daa
in
push
mov
jae
inc
popf
cmp
or
inc
stc
std
mov
push
mov
mov
rclb
and
inc
add
test
adc
and
push
or
jmp
jp
inc
jle
mov
loop
mov
xor
dec
push
xor
stc
dec
and
and
ret
inc
pop
or
mov
orl
daa
dec
daa
mov
push
mov
dec
test
je
nop
mov
test
mov
mov
sbb
cmp
pushf
jmp
mov
cld
xor
sbb
test
idivb
mov
cmp
or
clc
add
and
pop
in
pusha
hlt
test
ret
inc
loop
jecxz
push
push
and
mov
test
mov
das
push
and
movsb
jnp
xor
fs
add
push
je
test
dec
dec
push
mov
sub
pop
dec
mov
pushf
lods
push
mov
cmp
ja
jmp
and
push
dec
xchg
fsubs
adc
add
cs
dec
mov
enter
push
sub
push
push
cmp
cmpsb
flds
mov
scas
test
in
mov
lock
dec
popa
je
sbb
popl
pusha
gs
in
icebp
cmp
and
pop
xchg
inc
sbb
mov
hlt
mov
and
dec
mov
sbb
adc
outsl
data16
and
ret
hlt
dec
and
lock
mov
xchg
or
and
cmp
sar
inc
pop
les
mov
mov
cmp
adc
adc
mov
adc
add
dec
sbb
push
dec
jne
mov
or
ss
push
rep
sbb
add
fisttpll
addl
adc
sahf
mov
sub
push
jg
stos
push
and
jo
add
push
rol
cmp
repz
repz
jle
lods
out
jl
sub
hlt
enter
adc
xor
sub
dec
mov
push
dec
cmpl
inc
or
add
or
and
repz
and
add
das
jmp
mov
push
leave
mov
dec
sub
xchg
ficompl
mov
fdivl
mov
sbb
add
or
cmp
sbb
mov
sarb
dec
and
lea
jl
movsl
add
sbb
cmp
dec
arpl
fs
cli
jge
sbb
icebp
sbb
fidivl
or
jge
xlat
pop
jl
iret
adc
lea
cmp
scas
mov
mov
xor
dec
push
push
push
jmp
xor
adc
ds
lret
inc
test
and
add
je
lea
sti
push
jp
adc
lea
pop
pop
das
mov
enter
dec
push
adc
push
xchg
out
xlat
mov
jmp
pop
jmp
push
add
push
pop
sbb
imul
push
dec
push
dec
sbb
jns
mov
xorl
pop
pusha
mov
xor
push
push
mov
add
jge
jmp
lret
add
inc
bound
xor
jmp
idivl
icebp
insb
test
jg
in
add
adc
mov
dec
neg
sbb
and
sbb
adc
push
sbb
mov
jl
lcall
add
dec
sub
fcmove
mov
lock
das
push
scas
jns
cmp
int3
stos
mov
xchg
cmpsl
test
and
lods
and
shr
sbb
mov
add
or
jno
push
pop
mov
lods
push
push
movsl
jb
rclb
scas
lods
lahf
add
push
add
js
and
cmpb
mov
lods
bswap
cmp
xorl
mov
cmp
mov
inc
hlt
out
sub
mov
push
mov
mov
push
inc
stos
jb
mov
xor
rorl
xor
clc
test
scas
push
mov
vpcmpeqw
fmull
cltd
rcrb
fldln2
daa
jnp
push
sbb
xor
jne
cmc
xor
les
add
dec
adc
dec
gs
pusha
fmull
dec
xor
cmp
pushf
pop
sub
jg
inc
ds
les
mov
sbb
dec
jg
movsb
and
out
das
test
test
icebp
jne
mov
mov
add
outsl
or
push
lock
popa
mov
cwtl
cmp
pusha
movsb
sbb
add
rcrb
mov
pop
daa
pop
mov
jne
insb
enter
scas
lds
and
dec
dec
cmp
jge
pop
and
push
mov
mov
xchg
mov
movsb
sarl
lock
add
push
loope
popf
cwtl
push
adc
loopne
push
jns
mov
or
nop
or
rcrb
inc
adc
dec
dec
ja
dec
rcl
shll
aaa
or
or
or
inc
es
call
sahf
in
pop
data16
cmp
and
cmpb
pop
xor
sub
sub
ret
pop
aam
xchg
sbb
mov
dec
test
inc
je
int
outsb
mov
loope,pn
mov
sbb
popf
mov
or
push
sub
add
test
jne
sub
sub
adc
mov
xchg
adc
cmc
xchg
mov
lods
nop
cmp
sbb
sbb
xor
jp
dec
cmc
decl
imul
jns
mov
es
xor
push
xchg
sbb
and
push
add
dec
testl
das
push
lea
pop
mov
pop
nop
cmp
cmp
push
jb
in
sbb
pop
pop
push
into
push
and
outsb
jmp
adc
lods
popa
ds
and
std
mov
jb
pop
outsl
xor
dec
cmpsl
ljmp
ds
jb
js
push
cmc
inc
in
lea
sub
scas
or
outsl
add
sbb
jp
and
jmp
jle
jg
xchg
xor
jg
shll
popf
pop
mov
inc
and
push
pusha
repnz
iret
cli
xchg
movsl
aas
or
lahf
xchg
je
adc
andl
inc
or
sbb
lahf
xchg
push
push
cmpl
je
mov
in
fdiv
cmp
xchg
cmp
popa
das
lods
lea
cmp
out
ja
push
movsl
fs
adc
push
shlb
stc
push
jne
call
dec
mov
add
jle
inc
xor
xchg
push
fcmovbe
shrb
pop
jp
xchg
gs
stos
orb
aas
and
dec
jne
pop
mov
rolb
stos
jne
lret
or
add
inc
inc
fs
les
dec
push
add
jo
cmp
pusha
popa
ljmp
cmp
or
inc
stos
daa
jle
dec
push
xchg
push
loopne
bswap
xchg
push
std
fwait
sbbb
or
inc
xor
add
and
je
add
in
add
and
push
test
mov
inc
popf
fisttpl
cmp
push
out
jb
dec
sub
das
call
cmp
ret
dec
cmp
es
lds
insb
mov
into
int
outsb
iret
or
cli
or
or
gs
js
or
mov
ret
jbe
xor
jmp
pop
push
sub
lock
stos
fisubl
cmpsl
adc
nop
psubb
mov
rcl
sub
mov
adc
ljmp
push
or
ss
dec
ret
add
es
daa
or
sbb
outsl
push
jo
mov
jne
adc
insb
inc
dec
mov
push
nop
push
testl
lds
ljmp
arpl
icebp
ficoml
je
sub
sub
jge
push
lods
cmpsb
add
sbb
add
popa
mov
movsl
add
adc
outsl
mov
add
push
xchg
add
lock
jb
or
daa
je
or
pushf
add
flds
mov
pusha
add
xor
ret
jecxz
pusha
or
mov
adc
mov
mov
test
mov
movl
shr
jmp
sub
and
inc
js
daa
mov
into
mov
jno
add
bound
lea
movsl
movsl
push
xchg
add
inc
dec
sbb
mov
push
push
pop
mov
ds
loopne,pn
xor
jmp
cmp
or
pusha
mov
rolb
sbb
mov
imul
scas
pop
sbb
sbb
mov
fcompl
in
or
fdivl
aas
pop
cwtl
js
mov
add
adc
and
sub
js
outsl
mov
jnp
mov
sub
sbb
push
call
and
loop
push
lcall
push
test
xor
xchg
xor
push
jo
ljmp
jo
ds
sub
sub
or
pop
ja
in
pop
mov
pop
pop
and
nop
insb
mov
push
mov
mov
jl
or
add
inc
cmpb
cmovo
add
add
mov
ljmp
mov
xchg
cmp
jp
movsl
lea
sub
inc
mov
sub
or
mov
jge
inc
test
dec
loop
dec
pop
lock
add
add
or
dec
sub
fwait
or
fcoms
cld
push
mov
adc
or
clc
push
aam
push
lahf
and
sbb
inc
xorl
adc
push
adc
cmpb
xchg
mov
jae
xchg
loopne
sbb
sti
add
fidivrl
enter
cltd
jmp
mov
mov
mov
daa
jns
in
pop
inc
cmp
cltd
fnstsw
fnstcw
xchg
jns
and
jnp
jbe
cmpl
adc
sarb
push
jge
mov
jl
lret
pop
inc
cltd
add
mov
push
mov
mov
pop
sub
pop
aas
sub
push
push
add
imul
fwait
pop
lea
int
bound
xor
fsubl
test
push
pop
xchg
sbb
fmuls
or
adc
push
in
fs
mov
pop
pop
pop
in
loope
add
scas
pop
sub
mov
cld
or
loop
fidivl
jge
daa
ret
call
jg
mov
sar
arpl
sub
movl
shlb
sbb
je
xor
xchg
xchg
or
or
lea
pop
test
push
or
ljmp
ds
mov
std
push
repz
rclb
push
stos
call
push
inc
dec
push
or
or
out
adcl
hlt
ret
mov
push
int3
cmp
sbb
or
and
xchg
add
or
xorb
movsl
fbstp
ds
sub
inc
cmp
mov
mov
dec
push
sub
dec
hlt
popf
test
sarl
xchg
mov
loopne
xchg
aam
and
mov
push
jge
mov
lea
add
add
pop
cwtl
dec
mov
js
fimuls
sub
lock
fisubs
sub
mov
aaa
adcb
cmpb
clc
add
cld
and
sarl
cmpsl
stos
jge,pt
adc
jbe
leave
mov
pop
test
je
jmp
ror
sub
or
cmovp
mov
pop
mov
cmp
insb
subb
sbbl
cmp
lds
rol
xorb
or
or
std
jb
dec
testl
jmp
mov
adc
xor
adc
mov
push
push
dec
ficoml
jg
xor
push
and
inc
inc
xor
or
insl
jbe
scas
dec
jne
or
sub
xchg
mov
je
push
lahf
sbb
or
push
add
or
add
adc
icebp
pop
inc
mov
lds
rolb
sbb
mov
popa
negb
ret
pop
or
mov
imul
aaa
mov
push
pop
and
adc
in
push
push
or
inc
push
jne
cmpb
push
mov
inc
mov
test
imul
jo
jo
add
inc
pop
sbbl
test
repnz
push
test
mov
jne
fbld
adc
and
test
dec
push
ffree
mov
mov
fcmovnbe
insl
mov
push
push
ret
pop
insb
lea
sahf
lret
sbb
inc
movsl
mov
or
cmp
push
push
clc
sbb
jnp
test
andps
rcll
imul
inc
and
test
xor
mov
inc
xlat
aas
test
add
fs
push
call
dec
cld
sbb
scas
add
movsl
and
jns
popa
mov
nop
call
mov
movsb
sub
push
or
push
push
lods
add
insl
out
mov
outsb
call
sbb
sub
insb
dec
loope
cmp
fdivrl
pop
push
add
or
lock
jge
testl
sbb
aam
fsub
cmp
out
mov
inc
xor
js
mov
clc
ret
xchg
push
into
and
fnstenv
push
add
bound
pop
cld
insb
pushf
fmull
aas
ljmp
jne
xchg
fadds
cmp
insl
add
das
add
outsb
or
sub
daa
inc
and
je
ds
add
int3
mov
insb
popa
les
jbe
dec
sbbl
in
cmp
loope
add
cmpsb
pop
xchg
out
popa
sub
sbb
jne
rorb
push
in
xchg
xchg
lock
fstpl
fs
or
and
bound
xor
jmp
dec
faddl
aam
push
jmp
push
push
bound
or
push
sbb
or
fistpl
rol
and
push
adc
int
scas
push
mov
pusha
xchg
pop
adc
imul
mov
inc
push
sbb
sub
mov
sub
jg
or
test
lea
lock
rorb
push
std
cmc
sbb
lods
mov
cmove
xor
push
sub
nop
ds
cld
add
xor
pop
mov
cmp
lock
sbb
jl
mov
mov
stc
das
je
movl
repz
js
in
adc
ss
negl
xchg
movsb
lahf
into
aas
lret
cmp
xchg
pop
mov
jge
sub
mov
xor
jne
or
mov
popf
xor
or
sub
movl
pop
mov
cmp
add
popa
mov
lcall
es
js
inc
inc
adc
scas
pop
pop
fsubs
adc
cmp
or
clc
js
mov
iret
fldl
insl
fiaddl
sub
sub
xor
int
jl
cmpsl
jmp
lods
pop
rcrb
scas
and
xor
lock
cmpsl
mov
out
clc
sbb
mov
xor
mov
and
add
mov
pop
push
pop
adc
xchg
pinsrw
xchg
pop
mov
xchg
jns
aam
add
inc
or
inc
add
outsb
mov
or
cmp
nop
adc
push
or
or
push
inc
scas
xor
fcomps
xor
cmp
hlt
jns
jp
add
hlt
sbb
lock
xchg
movsb
push
mov
add
cmp
xchg
andl
dec
sub
jae
inc
xchg
sbb
lds
jle
xor
mov
test
scas
jno
call
lret
pop
lods
pop
or
xor
sbb
lods
add
imul
ret
or
jge
ret
out
push
push
jle
jae
icebp
add
loopne
pop
sub
dec
pop
or
je
outsl
push
push
pop
cwtl
inc
sbb
jl
jp
jne
inc
xchg
scas
cmpb
aad
jne
dec
cmp
rclb
pop
jp
sbb
adc
xchg
ljmp
cmp
add
inc
add
iret
inc
sub
cmp
leave
xor
inc
jle
call
ret
lret
or
in
adc
xor
push
push
push
bound
or
ja
inc
xchg
dec
jne
sub
jnp
bound
in
pop
in
into
inc
ja
mov
pop
sub
mov
insb
adcb
cmpsb
jae
repnz
dec
dec
sbb
mov
mov
pop
push
push
btl
imul
xor
fs
push
mov
ss
mov
adc
sbb
dec
or
stos
jo
add
sahf
out
std
and
fiadds
add
add
push
pop
mov
push
fistpl
and
adcb
push
int3
or
add
outsb
or
push
cmp
mov
push
sarl
outsb
popa
pop
pop
js
sbb
push
pop
mov
push
push
push
push
push
push
jnp
call
add
rorl
out
jb
dec
inc
loope
in
add
adc
mov
sbb
fadds
ljmp
stos
and
in
pop
shr
pop
not
push
push
jp
lock
icebp
pop
mov
mov
push
sub
aam
lock
adc
or
insb
jge
popa
adc
bound
popl
sbb
ret
xchg
pushf
imul
pop
lret
xorb
push
addl
addr16
xchg
pop
add
add
dec
dec
pop
pop
or
adc
add
jbe
aaa
imulb
rcll
and
xchg
nop
lahf
sub
or
pushf
imul
and
mov
jg
add
xor
cmpsl
cmpsb
nop
shr
dec
out
xchg
mov
test
rorb
pop
mov
add
inc
test
ds
jns
add
aam
inc
inc
dec
sbb
fwait
jmp
pop
outsl
loop
imul
cld
cmp
mov
adc
loopne
mov
pop
xchg
fstpt
aas
jmp
jae
or
xchg
xchg
fistl
ljmp
push
ds
jp
aam
ret
clc
mov
into
sub
adc
stos
call
xor
mov
shrl
and
xor
sahf
testl
xlat
pop
lret
call
jbe
ds
dec
pop
out
jns
fistpl
test
js
jne
into
mov
push
jg
icebp
push
add
jo
js
xchg
mov
lods
xorl
mov
dec
xor
loope
mov
sbb
jmp
sbbb
adc
loope
pop
leave
test
push
mov
negl
insl
push
scas
add
cld
xor
pop
add
mov
or
mov
pusha
aad
popa
sbb
jle
sbb
sub
mov
adc
fisubrs
adc
push
dec
adc
sub
das
cmp
or
cmpl
sub
in
fmulp
clc
das
pusha
inc
mov
movsb
or
pop
inc
mov
push
imul
or
add
xchg
push
xor
enter
xchg
inc
and
pop
in
sub
jmp
pmaxub
adc
std
mov
lea
lods
add
test
push
cmp
mov
ss
pop
pop
xchg
sub
movsl
jmp
rorb
outsl
push
sbb
fcomp
cwtl
jp
into
xchg
push
popf
pusha
fnsave
adc
or
add
push
cmp
xor
push
loop
xchg
dec
jnp
lret
cmp
mov
mov
lods
add
shrb
sar
sub
add
push
ret
inc
mov
int
es
cmpl
push
add
cs
stos
lods
fisubl
jl
shlb
aam
ljmp
mov
leave
xor
test
rclb
mov
bound
faddl
add
loope
imul
addb
shrl
call
cmpsl
or
sbb
push
addb
shr
mov
push
push
fwait
ss
ficompl
jo
ljmp
aas
sbb
dec
mov
jmp
movswl
mov
sub
outsb
mov
addr16
dec
xchg
push
dec
loope
push
lahf
aad
enter
jo
push
in
fs
jp
repz
push
das
rcll
cld
fstpt
pop
add
add
add
add
fldt
jecxz
add
sbb
jl
sahf
out
pop
inc
push
pop
outsl
test
jo
enter
into
andl
push
xor
adc
pop
addl
movsb
lret
sbbb
icebp
adc
cmp
fcom
sub
inc
insb
shl
mov
mov
dec
inc
mov
xchg
push
mov
xor
jno
test
cmpsb
push
pop
orl
jl
cmp
or
push
inc
js
lret
movsb
xchg
sti
mov
mov
les
lods
mov
stc
cwtl
jp
xor
in
test
les
pusha
or
pop
pusha
adc
scas
mov
movsl
jbe
out
fs
int3
xlat
shr
xor
sbb
inc
loopne
pusha
pop
fnstsw
call
aam
mov
je
xor
fiaddl
mov
loopne
xchg
push
and
ljmp
jp
push
adc
loopne
push
std
add
lret
test
xor
pop
mov
sbb
inc
mov
add
push
pop
fisttpl
adc
push
pop
fimull
aaa
rorl
adc
cmpsb
or
pop
mul
adc
adc
push
outsb
nop
ss
adc
jmp
cmp
push
scas
pop
mov
es
pop
test
add
sti
or
dec
mov
addb
jg
fisubl
jg
push
mov
dec
mov
aam
pop
imulb
pop
xor
outsl
adc
sahf
xchg
mov
out
adcl
xchg
xor
cld
nop
pop
add
xchg
adc
in
aaa
push
mov
push
push
lret
and
popa
pop
loope
push
adc
pop
xchg
ret
mov
mov
rcrb
cli
add
mov
mov
cmpl
cmp
sub
out
sar
inc
pop
cmp
adc
sbb
xor
inc
popf
mov
or
or
mov
jmp
inc
sub
shll
push
xor
sbb
xchg
rolb
insl
sarb
xor
dec
rclb
sarl
jo
push
lret
repnz
xchg
rorb
lds
hlt
cmp
push
sahf
or
lea
cmp
push
andb
lret
dec
fistpll
adc
and
mov
mov
aas
mov
push
repnz
xor
mov
mov
jge
loope
and
and
and
mov
test
ds
mov
inc
mov
xor
push
add
push
push
dec
andl
sahf
adc
jns
dec
in
mov
xor
and
sarl
sub
cmp
sahf
call
js
jmp
sbb
je
shlb
sub
push
int
test
mov
and
sub
loop
xchg
dec
cmp
scas
dec
push
out
outsl
cmp
lea
or
pop
dec
push
push
sub
pop
lock
cmpb
bound
shlb
dec
popf
cmpsl
stos
push
mov
cli
mov
adc
and
repz
push
rolb
aaa
cwtl
sub
sbb
push
xchg
jg
mov
add
and
ds
fidivrl
lret
xchg
adc
sbb
mov
and
sub
shr
fwait
add
orb
push
lahf
call
divl
mov
add
sahf
cwtl
add
sbb
mov
or
mov
mov
sbb
cmpsl
ja
enter
adc
add
sub
mov
xchg
adc
dec
lods
cmpl
jne
test
cmp
mov
lods
out
test
faddl
sub
xchg
push
lods
cmp
das
or
push
testb
jmp
mov
pop
aam
popa
insb
test
mov
mov
ret
mov
sub
mov
clc
popa
dec
mov
iret
inc
sbb
lea
sbb
xchg
pushf
pop
rorb
jbe
fimull
mov
inc
inc
stos
dec
mov
aam
sarl
inc
xor
cmp
sub
add
sbb
lret
sbb
mov
ss
push
popa
adc
nop
mov
pop
test
and
jb
jo
mov
jbe
jp
mov
lea
adc
sbb
push
push
push
mov
push
mov
js
adc
push
mov
push
mov
stos
ss
sub
dec
fldt
and
cs
xchg
pushw
stos
and
nop
adc
dec
jmp
push
jae
mov
adc
sub
push
push
jne
inc
adc
xor
in
pop
jne
popa
leave
add
xor
js
loope
xchg
inc
pop
loop
push
pusha
add
cltd
cli
dec
pop
lods
ja
adc
sub
loopne
lock
jb
cmp
clc
mov
test
and
in
push
mov
push
mov
pop
mov
test
sub
jne
xor
adc
lea
xchg
push
xor
and
mov
xchg
add
push
push
aaa
pop
test
pop
mov
xchg
and
test
popf
cs
loope
dec
test
test
sbb
jo
pop
pop
sbb
cmp
in
sarl
test
jle
mov
mov
lret
cs
push
add
dec
push
icebp
rorb
inc
xlat
xor
adc
fs
push
sbb
ja
cmp
push
adc
aad
jnp
pop
pop
adc
addl
pop
aaa
adc
je
push
cmpsl
add
mov
daa
into
mov
cmp
fildl
push
ret
je
jg
nop
mov
les
insl
jne
fsubl
loopne
xchg
ret
push
imul
loope
jns
mov
adc
xor
jb
jl
cs
inc
push
fisttps
xchg
xchg
sbb
xor
subl
out
pop
test
ret
inc
adc
pop
inc
adcl
or
mov
pop
xor
push
nop
add
loope
mov
push
sarb
add
je
xlat
enter
pop
fiadds
and
xchg
repnz
inc
add
clc
jecxz
mov
lock
ss
inc
jmp
daa
pop
pop
jmp
sub
movswl
add
sub
xor
pusha
cmp
inc
nop
cmp
in
cmp
cmp
pop
aad
pop
test
sub
movsl
pop
arpl
xchg
sub
orl
inc
jp
sub
bound
sbb
clc
cmpl
cmp
cmp
ss
lods
add
sub
bound
dec
inc
repz
aad
loopne
xor
or
mov
and
push
and
and
fisubl
arpl
insb
add
aam
sbb
sub
scas
bound
push
push
cmp
lds
push
pop
imulb
movsb
flds
ja
shrb
cmp
mov
test
bound
cmp
sub
push
lods
cmp
pop
inc
lods
cmp
call
xchg
mov
sbb
imul
inc
inc
sub
add
xorb
pusha
in
orb
push
cmpsb
xchg
xchg
test
loop
adc
cmpsl
push
in
xchg
adc
add
push
mov
xorb
inc
cld
inc
test
xor
inc
jmp
and
lcall
lds
inc
loop
inc
cwtl
cwtl
daa
and
pop
fs
push
dec
sub
js
fildl
adc
daa
cmp
mov
or
push
test
int
adc
xor
es
insb
ds
xor
repz
mov
lea
pop
fwait
iret
fmull
mov
xchg
dec
repz
mov
or
and
mov
call
jb
cs
mov
cmpl
or
and
dec
add
insl
std
mov
sub
lock
adc
int
in
adc
cmp
add
flds
mov
idiv
and
push
mov
pushf
les
xor
out
push
xchg
loopne
inc
and
pop
sarb
fcmovb
ret
mov
mov
enter
orl
enter
ret
push
andl
aaa
sbbb
add
mov
adc
inc
adc
dec
jge
inc
add
inc
mov
cmp
add
xor
mov
out
and
loope
inc
push
add
mov
outsb
inc
inc
add
add
lret
orb
xor
jae
add
fnsave
mov
stos
mov
inc
push
addr16
stos
imul
sbb
mov
das
xor
jmp
mov
and
pusha
mov
loop
xchg
add
xchg
in
dec
movsb
add
xchg
xorl
or
add
or
mov
test
lcall
xchg
fld
mov
push
or
mov
ficomps
es
movaps
es
inc
push
push
rcll
dec
sub
sbb
or
adc
or
inc
add
pushl
movsb
ret
add
cmp
push
jle
add
and
xchg
pop
outsl
shll
jo
rorb
or
adc
xchg
xor
inc
sbb
xchg
rolb
dec
scas
push
insb
add
dec
or
xor
mov
sub
cltd
fs
push
dec
dec
inc
pop
jb
in
hlt
adc
lahf
or
add
lea
adc
cmp
rcrl
mov
push
fwait
add
shrb
es
addb
in
inc
jl
cmp
call
sbb
add
cs
testl
jb
pop
enter
sub
sub
sbb
adc
nop
orl
and
xor
in
and
inc
test
mov
inc
popf
mov
add
push
add
add
xchg
aam
push
pop
adc
sbb
dec
ljmp
xor
dec
dec
fistpll
aam
outsb
mov
pop
fadd
jnp
or
push
or
or
push
fsubr
in
sub
cmp
mov
gs
mov
and
loopne
adc
xchg
xchg
pop
inc
enter
jle
push
mov
jo
mov
nop
and
mov
push
push
sbb
out
dec
jecxz
in
mov
shrl
xor
sub
popa
test
add
pop
mov
dec
xchg
rcll
pop
cs
movsb
dec
inc
das
inc
or
fsubrs
movsl
adc
sbb
sbb
daa
jmp
ficomps
sbb
cmp
sub
sbb
cmp
out
inc
mov
fmuls
call
jbe
cmp
dec
pop
loope
cmp
leave
fcmovne
pop
or
pop
jl
mov
mov
inc
rep
je
push
fistps
and
movsb
hlt
push
mov
out
add
mov
rcrb
jo
adc
outsb
mov
mov
pushf
pop
add
movsb
xor
aas
jbe
mov
cli
dec
cmp
add
addr16
cmp
jne
mov
push
sbb
inc
sbb
and
jmp
inc
add
mov
mov
out
push
xor
subl
add
and
adc
inc
xchg
out
xor
push
pop
mov
lods
bound
clc
mov
ficoml
aad
mov
imul
sub
and
xor
xor
imulb
add
decl
mov
push
rorb
mov
nop
xor
mov
dec
scas
fs
xchg
adc
minps
jge
add
in
loopne
xchg
fisubrs
test
cmp
dec
inc
sarl
push
jno
cmp
loop
and
test
rol
dec
adc
cmp
scas
adcl
sub
test
adc
jge
jmp
das
mov
add
push
or
dec
add
adc
push
int3
push
or
cmp
shlb
ret
sbb
or
adc
dec
cwtl
lock
push
xchg
jo
je
add
dec
and
test
add
lahf
in
mov
xor
and
sub
inc
xor
sub
mulb
sbb
testl
sar
and
mov
lea
cmp
xor
inc
push
xchg
or
push
sbbb
push
xchg
ret
and
incl
pop
cmpl
add
je
andl
aam
ja
sub
or
pop
inc
inc
movsb
dec
or
inc
test
loopne
sbb
rcll
add
out
push
jne
ret
dec
push
pop
pop
stos
push
repnz
clc
dec
in
inc
and
mov
mov
jns
adc
jbe
inc
or
add
lds
pop
adc
lret
adc
test
pop
mov
shlb
shr
inc
das
lock
or
dec
clc
fcompl
lock
mov
mov
lea
and
mov
xor
add
push
sbb
movsl
aam
jae
dec
mov
mov
daa
lahf
daa
jecxz
adc
mov
lock
adc
divb
sub
or
sbb
rclb
and
xchg
mov
sahf
dec
sub
out
push
in
in
cmc
in
add
sub
mov
fs
jmp
adc
mov
inc
inc
push
or
inc
fisubrs
push
xchg
jae
lret
mov
or
pop
into
jg
mov
cmp
dec
movsl
sbb
push
cmpsb
xorl
sub
push
sbbb
test
ret
mov
cmpsl
mov
pop
xor
xor
adc
cmovno
pop
xchg
mov
int3
push
test
arpl
push
sbb
cmp
mov
daa
lret
test
lret
sbb
rcrl
sbb
jbe
sub
ja
push
mov
stos
inc
sbb
fnstsw
xchg
push
mov
dec
cmp
pop
test
imul
jne
push
jecxz
xor
movsb
xor
lds
pusha
push
xchg
jne
pop
cs
loope
int3
push
or
ror
mov
data16
int
sub
sbb
or
imul
dec
push
or
push
cmc
push
inc
sbb
repz
into
mov
je
cmpsl
add
sub
jo
sub
sub
sub
into
roll
pop
add
xor
add
adc
push
add
jb
dec
cmp
aas
jo
enter
pop
jg
sub
jg
clc
call
loopne
pushf
cmc
push
sub
stc
cwtl
sub
pop
inc
mov
ret
and
cmp
push
arpl
dec
mov
pinsrw
dec
mov
xchg
adc
and
push
push
dec
or
sub
jae
jne
or
push
aas
addb
imul
push
pop
or
jns
push
adcl
sub
lahf
pop
test
sbb
dec
adc
jp
inc
mov
and
dec
mov
out
mov
or
xor
sbbl
sbb
and
stos
fwait
mov
cmp
mov
jns
lahf
sbb
pop
add
imul
inc
int3
sbb
loopne
sbb
or
mov
push
xchg
test
push
mov
add
out
sarl
scas
sub
mov
ss
dec
cmp
aam
inc
shlb
sub
sub
bound
mov
cltd
out
adc
loope
mov
inc
dec
leave
xor
es
arpl
adc
push
xorl
lcall
inc
push
shl
jns
iret
in
pop
mov
cmpsl
stc
cmp
dec
sbbl
repz
and
mov
mov
pop
cmpsl
repz
imul
jnp
lcall
xchg
push
or
add
inc
mov
adc
mov
pusha
stos
inc
cmc
inc
and
mov
test
pop
xor
lret
xchg
and
or
mov
cmp
repnz
pusha
mov
mov
jbe
xchg
and
jge
cmpsl
es
mov
subl
dec
fs
std
je
xchg
pop
ret
cmpsl
inc
std
add
roll
and
sub
je
xchg
inc
push
mov
scas
adc
and
mov
test
add
stc
adc
fs
mov
rol
push
nop
add
int3
cmp
mov
push
out
lcall
xchg
int
jns
cmpsb
mov
das
cmp
repz
xchg
iret
repz
add
sbb
adc
out
pop
or
outsl
mov
pushf
inc
call
lock
and
add
lea
xor
sbb
pop
lods
shlb
lock
pop
loope
jge
nop
mov
or
push
cltd
add
pop
lea
test
push
cmp
and
popf
scas
test
pop
dec
push
fldl
pop
iret
lea
mov
dec
sub
cmp
outsl
mov
cmp
add
and
pop
mov
xor
ret
loope
and
outsl
inc
or
and
adcb
scas
mov
xor
adc
popf
paddb
sub
lods
inc
movsb
popf
cmp
dec
or
mov
fbld
or
mov
pop
add
clc
fldcw
mov
pusha
orl
fs
xchg
adc
pop
push
adc
inc
xchg
pop
xchg
dec
enter
add
mov
xchg
or
pop
push
push
pop
xor
add
movb
inc
dec
mov
push
adc
sub
aas
dec
dec
scas
cmpsb
cmp
test
mov
mov
leave
mov
and
shlb
pusha
andb
mov
add
dec
xor
ds
orb
push
sbb
mov
inc
cmp
xchg
dec
mov
das
loope
add
pop
pop
or
scas
loopne
fildl
sbb
popf
add
sbb
and
sub
push
ljmp
dec
adc
cmpsl
xor
addr16
mov
loopne
inc
push
dec
sbb
les
sbb
or
std
push
pop
fs
and
and
add
xchg
fiadds
or
pop
cmp
pushl
dec
test
inc
mov
dec
mov
sub
add
dec
je
push
lahf
cmpsb
jge
mov
loope
xchg
pop
xor
movsl
adc
add
push
mov
adc
call
lods
pop
or
loopne
fsubr
jb
mov
in
mov
or
jbe
lret
in
loopne
mov
push
clc
adc
and
or
popa
jmp
int3
mov
pop
push
mov
or
sub
dec
or
and
xor
mov
daa
mov
push
mov
out
popf
roll
push
rcl
loope
add
push
fcomps
in
adc
jae
loop
rclb
das
and
cmp
add
rorb
or
or
in
and
and
xor
and
sub
lds
sbb
sbb
inc
inc
mov
rorb
test
push
and
and
cmp
jecxz
shl
ds
dec
lcall
xor
xor
add
neg
mov
add
sbb
jo
sbb
enter
movb
or
orl
lds
ficoms
adc
jbe
mov
mov
jp
jg
add
testb
cmp
cmp
adcl
sub
mov
outsl
mov
sub
nop
push
mov
mov
cmp
sbb
pop
inc
scas
jge
cs
mov
cmp
mov
or
or
popl
push
rol
les
inc
push
or
adc
sti
fmulp
dec
call
dec
insb
or
push
jmp
jns
ret
popa
ret
pop
push
addb
sub
xchg
pop
into
std
push
in
cmp
lret
pop
test
nop
je
or
and
push
adc
inc
call
mov
jge
pop
and
xchg
pop
mov
movsb
mov
dec
ret
push
popf
mov
push
pop
adcb
lods
aaa
shlb
sub
adcb
inc
cld
cmp
pop
mov
or
ljmp
in
lods
sar
les
cmpsb
mov
lock
jle
mov
add
sbb
add
lods
loopne
sbb
cli
div
dec
pop
fbstp
push
mov
xchg
pop
add
add
and
shrb
add
ja
add
rcll
push
sbb
push
iret
sub
lcall
ja,pt
imul
xor
insl
push
bound
and
into
std
repnz
push
push
ror
cld
loope
pop
dec
aaa
adc
sbb
es
dec
cmpsl
mov
xchg
je
jmp
clc
pop
push
push
push
push
sub
icebp
dec
push
mov
movb
enter
sar
xor
sar
sub
sub
pusha
push
push
push
and
cli
xor
and
ljmp
lret
sbb
pushf
add
mov
add
inc
jmp
iret
in
adc
add
data16
push
push
gs
jmp
pop
clc
xor
xor
out
mov
lods
push
mov
scas
add
ret
and
xchg
in
adc
inc
outsl
push
mov
test
dec
pop
inc
lock
sbbl
subl
mov
xor
and
xor
pop
mov
ficoms
add
push
cmp
cmpsl
dec
incl
inc
sbb
dec
push
test
ret
mov
sbb
incl
jmp
pop
pop
xor
mov
xorl
aad
dec
pushf
xchg
pop
cmpsb
test
adc
add
sub
push
ss
inc
je
cli
dec
mov
icebp
and
adc
push
sarl
jp
xor
hlt
ficoms
inc
pop
sbbb
and
sub
dec
xor
push
cs
and
xchg
xchg
loopne
ja
adc
mov
jge
ret
xchg
hlt
or
das
jmp
fdivs
addl
fwait
xchg
xlat
inc
pop
sbb
loop
add
sub
mov
enter
into
imul
mov
repz
inc
inc
cmp
adc
in
mov
pusha
adc
insl
loop
test
add
pop
js
out
js
jo
insb
out
push
pusha
sub
addb
adc
adc
jmp
xchg
hlt
mov
fistl
push
push
mov
mov
pusha
adc
add
leave
jae
ret
call
mov
and
and
xchg
lock
je
add
sbb
sahf
lods
cmp
mov
mov
test
mov
orb
push
sbb
mov
dec
add
add
dec
leave
add
adc
push
adc
dec
imul
pusha
into
fildl
dec
push
pop
sbb
popa
xor
orb
cli
add
sbbb
js
dec
scas
mov
rcll
jno
sub
fwait
repnz
mov
insl
adcl
fimull
clc
adc
sarl
int
ret
pushf
mov
cmp
jg
aaa
nop
clc
sub
lock
cmpsb
leave
shlb
jle
ljmp
dec
dec
adc
xchg
and
dec
fdivrs
hlt
out
sub
dec
bound
in
fbstp
mov
cmp
add
add
cli
and
push
testl
pop
testl
jmp
ret
es
mov
push
and
xchg
scas
addr16
in
inc
ljmp
or
mov
aas
enter
add
inc
aaa
push
push
dec
lcall
mov
or
mov
cmp
adc
in
or
sbb
fsubl
cmc
les
xchg
nop
xchg
mov
pop
mov
loop
push
sub
push
cmp
mov
jb
jg
fsubs
sub
dec
jb
jo
push
push
inc
mov
xchg
cmp
pusha
add
cli
loope
icebp
add
fs
add
inc
ja
test
addl
push
lea
rcll
pop
inc
xchg
int3
xor
add
je
mov
pop
pop
mov
mov
fidivrs
adc
mov
rorb
jno
xchg
push
sub
dec
fdivl
fists
sbb
add
rcll
mov
pop
je
add
test
ret
inc
pop
je
cmp
rclb
pop
daa
add
pop
xor
cltd
js
adcl
pop
adc
adc
mov
pop
push
in
outsl
ljmp
sub
jae
imul
pop
mov
sbb
push
stc
dec
insb
dec
or
jb
or
pop
push
test
fwait
pop
push
push
bound
mov
add
sub
jo
xchg
je
push
and
dec
jnp
mov
sbb
fmuls
pop
add
dec
je
xor
mov
fstpl
int3
test
inc
outsl
nop
js
cltd
aam
cli
mov
pop
jmp
test
pop
repnz
push
push
sub
sub
std
aas
into
xchg
nop
and
xchg
mov
mov
and
xchg
or
xor
sub
jmp
fistl
loopne
lcall
push
inc
fldl
rorb
cmpl
sbb
nop
cmp
xor
mov
icebp
xchg
sub
insb
push
push
cmp
int
pop
push
mov
and
movsb
insb
adc
and
jno
push
mov
add
pop
and
cmpsl
cmpsb
push
and
inc
shl
fsubrl
dec
push
pop
cmp
ds
adc
adc
ret
sbb
scas
sub
cmpsl
add
add
or
sub
adc
adc
dec
jne
pop
pop
mov
test
std
push
clc
dec
push
sbb
dec
sbb
les
outsb
leave
leave
xchg
mov
cmpl
xor
mov
push
adc
loop
and
cmp
sub
or
push
cmp
xor
idivl
aas
movsl
push
mov
adc
in
sbb
add
or
and
out
test
pop
cmpsb
adc
sbb
call
sub
fstl
jne
sbb
dec
mov
mov
adc
shl
in
rorl
dec
xchg
nop
push
lcall
test
add
jp
pusha
mov
cmp
add
add
sub
and
cmp
jp
mov
add
add
push
or
pushf
push
pop
inc
add
push
adc
or
and
ret
sub
xchg
gs
lods
mov
push
adc
push
adc
fadds
add
mov
adc
dec
daa
inc
dec
loope
jmp
mov
or
xchg
adc
mov
hlt
outsl
loope
mov
adc
cwtl
and
push
sbb
mov
and
cltd
js
adc
jg
mov
push
sub
xchg
ss
add
sarl
push
dec
inc
mov
es
data16
ret
imul
push
xchg
add
std
mov
lods
andb
push
leave
jp,pn
sub
out
add
in
or
xchg
nop
mov
push
cmpsb
mov
mov
dec
xor
inc
sbb
pop
pop
mov
add
lds
and
lcall
push
rolb
sub
add
jae
jno
add
push
and
jno
fcomps
mov
xor
push
call
pop
flds
dec
pop
clc
mov
adc
and
lods
fcomps
push
add
adc
mov
mov
xor
lahf
fcmovnb
je
nop
lahf
adc
add
sbb
mov
xor
dec
pop
xor
scas
jl
pop
pop
call
add
test
fsts
adc
js
xor
test
or
jmp
repz
pop
adc
sbb
mov
jne
adc
mov
aas
adc
xchg
pop
cmp
or
dec
js
or
mov
cmp
jle
dec
sub
les
inc
xor
es
lea
cmp
mov
stc
fstl
in
mov
int3
es
adc
sub
or
daa
sbb
les
rcrb
popl
test
fadd
imul
add
adc
mov
inc
arpl
test
aaa
inc
test
test
inc
mov
movsb
mov
push
ljmp
insb
lea
mov
dec
inc
pop
adc
mov
fisubs
dec
sub
jge
dec
sub
mov
call
int
pop
xchg
add
shll
ss
cmp
jne
inc
loop
or
mov
jns
out
lods
in
mov
shlb
mov
mov
cmp
jle
add
push
mov
cli
rcrb
lods
mov
or
ret
fidivl
add
shrl
sub
insb
push
push
sbb
js
test
cltd
or
sbb
cmp
jmp
popf
pop
sub
pop
das
rolb
xor
sbb
pop
pop
mov
imul
fmuls
xlat
call
mov
lret
push
xchg
rorb
jmp
pop
xor
pushf
and
jmp
sbb
pushf
xor
cmp
push
push
jne
sbb
cmp
inc
hlt
adc
sbb
xor
xor
xor
subb
nop
xchg
sub
add
mov
sbb
inc
cld
lahf
and
pop
mov
stos
xchg
adc
lock
mov
ret
mov
jg
js
dec
cmp
adc
sarb
fs
enter
push
push
test
adc
pop
sarb
dec
pop
push
push
push
insl
add
cmc
int3
and
rorb
xorb
and
add
imul
je
jecxz
push
movsb
cmpb
lock
addb
pop
pop
jne
testl
dec
jne
testb
mov
shld
es
and
and
dec
sbb
movsl
lret
jo
clc
inc
sbb
dec
mov
xor
xorb
mov
aaa
mov
movsb
mov
pusha
adc
es
aaa
pop
sbb
aas
add
pop
cmp
popf
xchg
adc
fmuls
mov
add
xor
mov
in
orl
cmp
dec
xor
or
test
outsb
hlt
xchg
sbb
xchg
popf
xchg
push
xchg
xchg
sbb
pusha
xchg
push
fstpl
jne
test
rorb
jo
movsb
sbb
and
xchg
lods
adcl
jno
std
stos
xchg
jo
sbb
inc
imul
in
add
xor
aad
sub
and
insb
lods
je
lret
xor
jne
mov
pop
add
test
ss
or
mov
out
dec
push
imul
mov
add
adc
push
add
xchg
pop
pop
cld
mov
push
js
movl
sub
in
jne
pop
arpl
pop
fldcw
or
or
pop
xlat
push
push
xchg
push
mov
sub
pop
xor
add
pop
inc
in
js
push
adc
push
daa
repz
or
sub
inc
mov
jmp
sahf
inc
add
and
int3
or
push
test
out
xchg
mov
push
loop
imul
add
jne
sbb
ret
xchg
outsb
sbb
mov
pop
ljmp
or
push
sub
pop
dec
pop
sbbl
xchg
icebp
cmp
xchg
jmp
dec
ja
jb
cmp
adc
cmp
push
pop
or
inc
xchg
adc
sub
in
mov
push
or
mov
into
xchg
xor
add
pop
cmp
and
test
addr16
inc
xor
push
mov
jne
lock
or
aam
adc
nop
sub
mov
push
stos
cmpps
bound
ret
pusha
insb
push
push
dec
cmp
ljmp
pop
or
sub
fwait
push
adc
ret
into
inc
cmp
and
and
bound
stos
push
inc
sub
cmp
adc
pop
lods
push
icebp
xor
adc
iret
inc
mov
sub
mov
je
cmp
push
pop
push
loope
test
je
push
sbb
or
pop
mov
lock
mov
jle
lret
adc
pop
jbe
sbb
pop
cmp
cli
or
pop
icebp
int
inc
pop
test
and
xchg
lea
mov
adc
xchg
orl
loopew
mov
fisubs
inc
sbb
mov
pop
push
sub
mov
lret
sarl
push
adc
fisubl
xchg
test
pop
dec
pop
push
jecxz
mov
nop
add
jp
es
mov
add
dec
dec
inc
fs
fstl
push
xchg
aam
inc
push
fsubl
test
sub
add
xchg
roll
or
or
push
jg
xlat
sbb
lret
or
mov
and
add
outsb
pusha
sbbl
rep
shrl
xchg
mov
hlt
dec
int3
movsb
mov
scas
loope
sub
dec
imul
adc
int3
aaa
and
push
cmp
pop
and
jae
inc
mov
adc
jne
xchg
test
mov
fidivrs
lret
push
xlat
outsl
inc
inc
dec
fsubrs
or
adc
xchg
sub
mov
cmp
mov
or
or
or
adc
outsl
ljmp
sub
dec
stos
pop
mov
cli
adc
lock
mov
push
aam
inc
push
out
cmp
or
sub
or
fsubrs
out
rorl
or
aaa
sbbb
jo
add
xorl
inc
popf
imul
aam
add
cmpsl
pop
or
mov
sti
xor
cmp
jmp
inc
mov
les
pop
mov
adc
inc
loopne
lret
cmp
adc
and
mov
xor
mov
inc
cmpsl
cmp
push
aaa
ror
sbb
andl
xchg
test
push
imul
sub
sub
sbb
inc
push
out
sbb
ret
and
movsb
inc
mov
add
xchg
int3
std
inc
out
orb
addb
xchg
or
cmp
nop
add
cmp
inc
mov
gs
adc
ret
daa
ds
or
adc
nop
push
pop
inc
adc
andb
lret
push
xor
push
cmp
sub
test
push
sbb
jg
test
nop
leave
xchg
lock
sarb
and
or
adc
arpl
fdivp
cmp
push
xor
add
into
inc
xchg
scas
jo
and
adc
pop
add
pushf
or
adcl
mov
sub
adc
ffree
pop
add
xchg
insb
push
js
cmp
mov
rorl
js
pusha
mov
jmp
in
jne
sub
push
and
fistl
and
sbb
xchg
cmpsb
inc
lret
xchg
cmp
xchg
cmp
pop
jae
sti
push
add
pop
xchg
add
dec
mov
jmp
and
lea
sbb
add
sub
js
xor
mov
jecxz
xor
test
add
cld
les
or
push
daa
cmp
inc
push
inc
and
stc
addl
aad
dec
sub
inc
inc
cmc
imul
pop
mov
inc
push
inc
push
shlb
pop
rcrb
and
lods
cli
xor
add
push
orb
xchg
into
gs
loop
dec
mov
test
dec
dec
add
mov
sar
jne
jne
notl
pop
fldcw
sbb
and
loopne
xchg
jle
add
or
es
lock
ficompl
cli
sub
add
cmp
fdivr
outsb
add
stc
mov
add
aaa
mov
jnp,pt
sbb
push
dec
sub
inc
or
arpl
imul
mov
push
inc
add
xchg
push
out
sbb
xor
mov
icebp
mov
push
insb
mov
inc
inc
and
jo
gs
js
lods
push
jbe
xchg
add
fnstenv
or
cwtl
inc
aam
push
clc
add
xor
dec
orb
adc
xchg
inc
arpl
add
sbb
pop
adc
pop
rolb
pop
sarb
or
inc
add
fsubrs
and
adcb
adc
cltd
aad
daa
pop
and
push
adc
cmp
mov
mov
add
scas
test
push
sar
mov
cwtl
hlt
test
adc
es
cmp
cmp
inc
inc
lods
loopne
addb
adc
dec
je
inc
push
or
loopne
push
cmp
cmpsb
or
fs
sbb
subb
fcmovnbe
cmp
mov
sahf
cmpsl
sbb
and
and
and
sbb
es
sbb
or
inc
sbb
or
push
shrl
fwait
jne
or
movsl
and
push
jg
in
add
xchg
int3
loop
clc
mov
lret
mov
push
cmp
pop
leave
mov
mov
rclb
push
test
or
cwtl
shlb
shlb
dec
test
and
mov
sub
or
mov
loope
sub
aad
sbb
jbe
dec
loopne
jge
clc
cs
lea
mov
xchg
shll
in
ja
stos
repz
aaa
jne
sub
mov
pop
lock
pop
insb
push
mov
adc
xchg
cmp
mov
pop
sub
push
add
xchg
adc
adc
inc
and
and
test
dec
jo
cmp
stc
addr16
dec
lock
cmp
movsl
xchg
mov
fmul
mov
adc
inc
mov
iret
repz
jne
push
mov
sub
xor
push
rorb
dec
js
mov
xor
inc
sub
addr16
bound
mov
je
xchg
insb
or
sub
cmp
sub
outsl
and
inc
jmp
push
mov
testl
popa
popf
dec
gs
das
push
xchg
repnz
jnp
jp
negb
mov
test
inc
lock
je
sti
add
or
mov
sub
add
mov
inc
repz
add
mov
and
dec
rclb
inc
push
rolb
dec
pop
mov
push
adc
das
popf
shlb
or
or
push
popl
aaa
lods
addr16
xchg
pop
aad
repnz
inc
xor
test
lds
cmp
mov
mov
dec
mov
sbb
lods
addb
pop
dec
fs
dec
aad
push
push
inc
xor
aam
jns
pop
adc
add
push
mov
or
jmp
pop
movb
mov
cmp
lods
xchg
add
or
fs
fldl
mov
leave
dec
cmp
inc
pop
daa
jmp
lods
add
adc
movsl
dec
mov
stc
add
sbb
addr16
add
fiaddl
jl
fstl
daa
loopne
cmpsl
sbb
test
mov
add
jmp
inc
pop
daa
test
mov
push
pop
push
jg
sbb
inc
gs
mov
or
push
or
bound
push
in
push
push
inc
inc
loope
dec
ds
mov
or
and
push
adc
push
jmp
and
nop
outsl
es
fstpl
pop
ret
int3
push
sti
and
push
push
jns
mov
pop
daa
pushf
push
mov
fisttpll
mov
nop
add
cmp
add
xor
adc
jmp
dec
cwtl
sbb
push
push
jbe
add
mov
xchg
and
mov
cmpb
hlt
mov
sbb
cs
and
cs
add
cmpsl
or
jg
cwtl
sbb
lods
dec
jo
push
test
or
outsb
aad
xor
loopne
inc
scas
or
loope
fildl
std
movups
xor
lret
in
or
sub
or
xor
push
rorl
inc
adc
adc
shll
inc
test
jo
mov
mov
push
push
push
add
sub
pusha
adc
int3
cmp
fadd
mov
enter
push
rorb
sbb
jmp
sub
jl
cmp
pop
loopne
xor
jmp
call
mov
nop
fdivrs
pop
clc
cmp
movl
pop
movl
and
push
sub
inc
lcall
in
int3
movsl
jb
jl
fdivr
gs
jbe
rol
in
mov
inc
push
push
dec
mul
shl
mov
pop
imul
add
sbb
ss
mov
cmpsl
xchg
push
xor
add
dec
cmpl
in
data16
ds
hlt
fs
sbb
mov
jae
mov
add
mov
aam
push
or
enter
repz
mov
adc
adc
jnp
lret
xor
sbb
sub
pop
scas
aam
mov
dec
push
push
aam
mov
loopne
jle
fcomps
in
jns
jne
or
test
cmp
stos
xor
js
js,pt
and
out
jbe
subl
jmp
aaa
imul
push
es
xor
les
hlt
add
insl
imul
push
cmp
popf
or
call
nop
gs
sbb
lock
pop
int3
aad
push
mov
pop
cmp
add
sbb
ss
shlb
fcompl
test
pop
push
pop
pop
rclb
ds
fdivrl
adc
scas
stc
into
orl
sbb
call
adc
pop
xchg
icebp
lcall
add
pop
sbb
mov
les
gs
mov
sbb
pop
test
rcrb
sub
loop
ret
dec
xchg
add
adc
out
aam
jo
sarl
mov
int3
jb
nop
lea
movsb
lcall
push
adc
push
add
mov
pop
ja
pushf
or
inc
lock
mov
rcr
sbb
or
inc
mov
push
loopne
inc
sub
cltd
lock
push
out
xchg
mov
or
push
jge
jo
repz
push
lahf
adcl
lret
push
pop
add
and
adc
push
in
insl
jmp
adc
rorb
jle
test
and
mov
sub
push
sbb
or
scas
add
xchg
jl
daa
and
mov
jecxz
mov
cmp
or
jnp
fsubrs
or
sbb
pop
incl
xlat
jl
pop
mov
adc
test
scas
jg
pop
pop
add
add
push
shlb
imulb
pop
fwait
inc
add
stos
fwait
xor
and
and
add
or
fidivl
add
cmp
add
rolb
pop
pop
add
xor
cmp
loope
test
sbb
inc
xorl
cmpl
add
push
ret
push
nop
mov
dec
push
mov
loop
cmp
cltd
clc
std
pop
movsl
mov
cmp
jb
or
dec
jmp
sub
adc
adc
xlat
jns
pop
jg
push
or
dec
repnz
es
adc
subb
insl
in
dec
adc
mov
dec
mov
jne
mov
aam
mov
cmp
inc
add
jge
fs
fcmovne
rorb
or
je
pop
or
inc
inc
add
mov
pop
imul
jne
pop
jb
jg
jb
test
bound
pop
pop
cltd
cmp
shrb
cmp
or
and
push
inc
pop
add
mov
and
and
or
inc
lods
fmull
cltd
mov
pop
mov
cwtl
cltd
idiv
ss
dec
pop
cmp
pop
mov
xchg
or
dec
loopne
faddl
cmpb
jne
sar
mov
mov
mov
cmp
jne
cmp
jne
es
imul
xorb
or
adc
push
jle
or
nop
arpl
cmpl
fldl
arpl
add
icebp
fstpl
out
adc
mov
shl
sti
sub
incl
fmull
popa
ret
ret
add
loopne
lock
cs
adc
flds
jg
sub
clc
jmp
fmull
fcoml
sbb
or
push
mov
fcoms
jmp
inc
and
cs
dec
rolb
hlt
push
stos
and
mov
loopne
inc
inc
gs
sbb
imul
popf
push
fcomps
fldt
push
mov
shlb
leave
cmp
inc
and
mov
fdivrp
aaa
and
pop
mov
dec
daa
fistpll
mov
dec
push
orb
sbb
fisubl
popf
and
les
and
or
pop
xor
out
dec
add
sbb
jl
push
push
sbb
pop
gs
shll
xchg
lret
add
xchg
std
dec
adc
imul
inc
dec
or
ret
mov
push
ds
repnz
mov
ret
inc
inc
xchg
inc
inc
xor
mov
adc
out
cmp
xchg
lahf
ret
push
pop
scas
fs
test
xor
shlb
out
mov
bound
mov
adc
cs
popf
pop
fstps
dec
lock
daa
push
jb
mov
push
inc
loope
and
test
adc
sbb
jge
dec
mov
push
out
fnstcw
jmp
pop
xor
sub
rol
xchg
push
xor
arpl
dec
xor
add
push
cld
imul
popa
add
sub
or
adc
mov
aas
mov
pop
xor
add
cmova
fldl
cmpb
ds
call
adc
lock
mov
or
add
hlt
jl
out
andb
push
insb
add
sub
aas
inc
mov
jge
jmp
mov
mov
cmp
push
push
clc
cmp
xchg
fbstp
xor
lret
ret
and
push
and
test
mulb
je
or
pusha
and
jo
xlat
push
xor
mov
add
sub
and
mov
push
or
sahf
je
push
xor
pop
insb
mov
or
orb
jo
cmp
push
inc
imull
sarb
lcall
je
or
xchg
adc
mov
xchg
icebp
mov
clc
ljmp
inc
dec
fisubl
mov
pop
dec
push
mov
mov
dec
movsl
pop
sbb
pop
mov
ret
iret
in
mov
out
dec
push
sub
mov
xor
mov
and
aad
imul
es
enter
in
testb
adc
sbb
inc
adc
push
sbb
mov
in
and
daa
and
jmp
pop
xor
add
jle
int
mov
add
dec
movsl
and
je
imul
stos
xchg
or
jecxz
bound
and
cmpsl
pop
and
sub
mov
lret
sbb
adc
pusha
cmp
jne
cmp
jne
insb
jne
jbe
xchg
sub
pop
mov
cmp
jne
and
icebp
jne
jmp
and
push
out
mov
jl
loop
fstp
pusha
inc
pusha
push
and
mov
faddl
frstor
or
adc
ret
gs
imul
loop
pop
dec
pop
dec
add
sub
fs
or
or
xchg
into
or
stos
dec
mov
dec
sub
or
pop
sub
pop
mov
pop
adc
or
push
fisubs
or
pop
cli
adc
fwait
sub
adc
adc
mov
pop
pop
pop
pop
lea
out
mov
lds
cmp
jne
mov
ret
cmp
or
jg
pop
push
adc
sub
mov
jbe
inc
pop
popa
loope
pushl
jg
xor
inc
sub
adc
sbb
adc
popf
pop
pop
testl
nop
mov
or
push
lock
lea
jle
push
push
faddl
jge
cmp
jle
xchg
repnz
mov
add
aaa
ret
jg
pusha
sbb
mov
xor
outsb
adcl
xchg
enter
pop
rcll
cmp
mov
pop
sbbl
push
rcr
mov
inc
add
push
test
into
push
jb
fcoms
push
loope
add
cli
or
shr
sub
popf
filds
mov
les
sahf
insl
cmp
test
or
outsl
rorb
cmp
adc
pop
cmp
pop
movups
bound
dec
loopne
aam
filds
cld
cmp
jle
gs
push
push
push
sub
push
lds
test
adc
not
pop
or
pop
dec
pop
xchg
int
xor
and
shrl
xchg
in
or
aas
ret
dec
lods
jmp
cmp
and
test
ljmp
push
sub
pop
nop
dec
enter
in
in
mov
xor
loope
and
sub
mov
mov
xor
xor
andl
sub
xor
push
cmpps
push
mov
or
mov
inc
sbbb
mov
dec
jmp
xor
hlt
xchg
mov
xchg
stos
dec
imul
pop
add
aam
inc
nop
sarb
outsb
adc
mov
mov
push
push
jae
imul
je
cmp
sbb
leave
dec
add
xchg
imull
sub
notl
out
shlb
not
clc
sets
sbb
ret
and
pop
pop
cli
mov
sub
push
cmp
ds
cmc
dec
adc
xchg
push
add
int
dec
and
add
aaa
push
push
jmp
nop
or
faddp
mov
pop
ffreep
movl
push
inc
outsl
xchg
rcrb
lahf
adc
push
pop
pop
xorb
js
sub
stc
pop
je
ja
pop
mov
or
mov
mov
jmp
xor
jge
inc
pop
pop
adc
in
lock
jns,pn
jmp
std
mov
lcall
add
jmp
push
out
mov
out
cmc
sarb
mov
or
or
jl
imul
jno
dec
add
data16
cwtl
sbb
lock
pop
ror
lods
push
sub
push
or
neg
movsl
or
bound
add
sub
jl
cmp
movl
push
jg
out
or
mov
pop
aaa
and
shrl
int
dec
cmp
sub
lcall
jmp
jmp
aas
add
fwait
add
lods
add
cld
fisubrs
das
push
bound
pop
ret
mov
add
push
in
jge
clc
es
and
syscall
repnz
addr16
push
xor
or
xchg
enter
add
daa
or
add
mov
inc
daa
jbe,pn
popa
in
cmpsl
jb
dec
push
or
mov
adc
pop
mov
sub
and
orb
pop
je
pop
cmp
out
sahf
ja
cmp
ds
dec
pop
movsb
add
test
decl
dec
jo
push
cmp
mov
rclb
stos
xchg
test
and
daa
jmp
pop
cmp
jae
or
mov
call
xor
push
sbb
push
and
mov
lea
add
dec
pop
push
iret
push
add
nop
repnz
or
dec
pop
jl
adc
add
mov
mov
add
mov
and
mov
or
or
gs
inc
aaa
out
push
push
stos
xor
mov
xchg
sbbb
jp
in
mov
or
or
cmpsb
lds
lods
lods
dec
popf
mov
push
mov
pop
add
push
fdivrl
scas
or
inc
add
mov
into
jne
cmp
cmp
aas
cmp
ret
mov
and
inc
daa
pushf
pop
popl
hlt
mov
stc
pop
xchg
lret
inc
shrb
adcl
jne
cwtl
fstpt
mov
invd
adc
or
js
jne
cmp
xor
daa
ret
cmp
or
sub
add
adc
add
iret
in
cmp
or
das
xor
jae
xor
pop
sbb
cltd
std
outsb
mov
adc
sbb
sub
jo
and
pop
sahf
and
push
out
pop
jecxz
add
pusha
insl
add
sub
or
stos
or
add
es
dec
shrl
imul
and
push
lea
fmuls
aas
adc
mov
data16
adc
or
stos
lea
cmp
call
popa
cwtl
inc
push
xchg
js
cli
mov
xor
fldt
fidivrs
sbbl
out
or
push
psubb
jle
out
popa
xor
movsl
movsb
push
sub
subl
movsw
shll
mov
mov
adc
xchg
outsl
xchg
cmp
jo
inc
dec
adc
ss
inc
xchg
ret
dec
jbe
push
lods
popf
push
lock
add
add
cmp
mov
xlat
push
lock
pop
push
dec
stc
outsl
int3
pop
mov
pusha
and
and
push
push
or
jb
adc
jbe
sahf
in
xchg
je
loopne
scas
and
sbb
inc
test
shr
jo
aad
leave
push
lret
movsb
mov
push
pop
xchg
push
pop
push
dec
mov
push
jo
inc
data16
imul
sbb
mov
sbb
mov
das
mov
repnz
add
mov
xor
insl
insb
mov
push
in
push
mov
sarb
push
pop
pop
scas
mov
vpsllvq
cmp
and
int
lock
pop
or
and
jle
std
mov
sbb
sbb
cmpb
repnz
cmp
pop
push
mov
mov
mov
mov
push
inc
lar
scas
aam
dec
fimuls
decl
out
sub
adc
ret
sub
rolb
mov
jne
mov
ds
jp
int
fistl
ret
adcl
xchg
outsl
jnp
inc
in
mov
nop
movsl
imul
cmpsl
sub
call
nop
sbb
or
push
xor
inc
cli
out
cmp
outsl
movsb
mov
mov
adc
add
cmpsl
loopne
mov
add
decb
outsl
into
lock
jmp
lea
and
mov
shrl
sub
nop
lea
sti
ss
mov
push
adc
out
insl
shll
sub
hlt
in
or
lea
lcall
lea
add
mov
mov
test
dec
adc
or
add
push
jne
daa
xchg
push
es
push
sar
fisubl
xchg
int3
adc
mov
jmp
iret
mov
int3
jp
lret
leave
lods
sbb
pop
xchg
pop
pop
andb
mov
jo
cmp
adc
inc
scas
je
lea
dec
inc
mov
aad
outsl
or
ret
push
push
rolb
push
mov
mov
rcrb
sub
pusha
adcl
in
test
add
and
lea
pop
es
add
repnz
scas
adc
outsb
mov
lods
int
inc
pusha
cs
in
rcr
fstps
fwait
push
jmp
fiadds
in
ja
push
mov
shll
out
or
sbb
mov
jmp
adc
push
and
and
mov
pop
push
rcrl
xchg
add
mov
je
dec
adc
mov
int3
dec
pop
mov
mov
sbb
andb
loope
inc
dec
dec
jl
cmp
or
sti
jg
jb
mov
xor
fldt
adc
sub
jb
jbe
test
add
ucomiss
clc
clc
loop
mov
sbbl
rclb
xchg
pop
mov
test
sub
ficoms
push
sub
aad
sbb
pop
in
mov
and
cs
mov
sub
mov
add
pop
push
cmp
mov
xor
mov
mov
adc
inc
pusha
bound
dec
inc
or
mov
movsb
cmp
cmp
cltd
mov
cmpsb
or
xlat
jge
rclb
sbb
sub
adc
or
loop
fistl
adc
dec
inc
add
lahf
cmp
lret
push
fdivrs
insl
imul
and
push
ss
mov
mov
movsb
cmp
jmp
xlat
sbb
fsub
mov
das
adc
xor
push
dec
ss
push
pop
cmp
inc
sbbb
and
lret
mov
and
xor
shrb
int
mov
add
inc
jno
pop
lods
ljmp
jne
push
test
jecxz
add
iret
add
xchg
pop
dec
inc
mov
call
jno
add
cltd
subb
or
push
jmp
pop
push
addr16
sbb
cmp
fbld
xor
ret
add
push
outsl
add
mov
sub
jg
enter
sbb
out
xor
and
cmpb
xchg
jg
inc
add
pop
xchg
push
jg
sbb
jne
mov
lahf
xor
mov
dec
sbb
dec
mov
cmp
xchg
and
loopne
and
jnp
jb,pt
jmp
enter
mov
jle
loopne
push
add
cmpsl
fwait
sub
cmp
sub
add
imul
dec
sahf
es
and
sbb
dec
dec
test
dec
data16
inc
xorl
jno
sub
dec
xor
fmull
movsl
test
arpl
and
loop
pusha
rcrl
add
add
sbb
ds
rcl
lods
pop
add
mov
cwtl
cmp
add
fisttpll
scas
xor
mov
push
cmpsl
adc
cmp
pop
adc
xor
popf
jge
subl
or
dec
mov
arpl
cmp
pop
arpl
inc
mov
out
mov
sub
or
xor
adc
push
xor
into
dec
stc
adc
call
sahf
mov
add
scas
cmp
adc
push
push
sbb
jae
dec
inc
cli
push
push
xchg
xchg
or
lock
out
inc
das
cmp
jge
push
push
mov
subl
inc
scas
int
mov
push
push
lods
sbb
inc
int
inc
stos
add
dec
lods
xor
in
lret
mov
fstp
push
adc
add
pushf
pop
xchg
push
flds
cmpsl
aad
mov
add
sbb
xchg
pusha
push
test
mov
and
sub
ret
lock
test
cli
test
jle
enter
add
lcall
xor
ds
ret
int3
mov
inc
mov
mov
sub
mov
add
cmp
sub
fildll
mov
sbb
and
fsubs
arpl
mov
mov
popa
cmpl
xchg
xor
shll
mov
adcb
xor
lea
fstps
or
or
push
pop
push
add
inc
adc
xchg
inc
pop
and
pop
inc
mov
push
fcoml
add
dec
sbb
es
push
or
cmovle
or
cmp
pop
and
cmp
or
mulb
mov
ds
mov
daa
cmpsl
lock
out
cmp
sub
adc
sbb
add
out
inc
shlb
mov
insb
xor
push
mov
push
pop
jecxz
fstpt
mov
das
push
add
jnp
fcmovnbe
sub
and
and
imul
ja
push
fstpl
push
add
xor
in
add
outsb
xchg
sbb
pop
rolb
add
mov
add
leave
add
push
stos
xor
sbb
or
push
ljmp
loop
xor
or
negb
pop
inc
scas
insl
stc
sbb
jmp
mov
jmp
decb
mov
addr16
clc
inc
and
sbb
lock
mov
jne
add
or
inc
mov
daa
adc
int3
add
cld
mov
jmp
je
push
xlat
in
adc
xorb
pop
dec
pop
or
leave
add
fsts
int3
mov
incl
mov
dec
push
inc
and
bound
and
and
jnp
lea
nop
orl
out
or
gs
add
pushf
mov
pop
fadd
les
pop
jno
test
testl
sbb
jo
mov
mov
or
test
pop
xchg
and
jle
mov
ret
push
mov
mov
mov
xchg
xchg
push
out
and
dec
add
push
call
sub
push
inc
js
jge
xchg
jecxz
mov
xor
stc
or
add
loope
sbb
add
adc
xor
je
nop
mov
push
dec
lods
mov
add
fadd
pusha
arpl
xchg
sub
lcall
sarb
or
fsubl
ret
dec
mov
push
adc
inc
inc
fadd
mov
inc
mov
pop
mov
fsub
dec
mov
mov
les
sub
ficoms
or
jo
inc
pop
adc
pusha
dec
fmul
and
cmp
pop
push
testb
and
add
or
lods
and
es
push
lcall
pusha
cmc
sub
dec
mov
aas
sarb
int3
adc
shl
sub
dec
std
mov
xchg
nop
cld
lds
dec
add
call
xchg
pop
sub
xor
push
shll
add
jne
shll
add
lea
jp
dec
mov
mov
inc
sarl
into
je
aam
push
push
cmpsl
rcll
ja
aam
push
adc
mov
push
push
mov
adc
ds
mov
loopne
xor
add
add
adc
xchg
push
add
outsl
sub
push
out
jb
in
ret
jle
mov
pop
mov
lea
add
xor
cmp
sub
dec
sub
mov
out
add
sub
or
mov
cmp
sub
cmp
pushf
fdiv
loopne
cmc
pop
mov
pop
sub
out
pop
mov
xor
mov
les
dec
orl
test
cli
out
inc
stos
push
and
adc
scas
jae
jbe
ds
push
pop
push
js
add
insl
add
lods
mov
dec
les
mov
movsb
lds
mov
clc
ss
je
faddl
repz
adc
test
iret
xor
cmp
adc
jae
out
mov
out
loopne
cmc
repnz
data16
pop
push
push
and
fldt
sysret
cmpsb
adc
inc
pop
push
pop
dec
sbb
adc
dec
cld
sysexit
mov
jl
and
jp
int
jbe
dec
add
jb
or
or
mov
icebp
add
cmp
fstps
ret
dec
cli
fwait
lcall
or
movsb
dec
int
je
push
loop
adc
mov
mov
or
data16
lock
push
cmp
mov
pop
dec
imul
jle
mov
fs
pushf
clc
mov
addb
loop
sub
pop
ljmp
in
jnp
mov
mov
popa
push
add
cs
dec
fwait
pop
push
js
fiaddl
add
xchg
adc
inc
jbe
cmp
loop
mov
mov
lods
incb
sbb
sti
jne
cltd
sub
pop
lcall
rolb
and
rolb
adc
sbb
push
int3
repnz
notb
adc
repnz
xchg
push
mov
dec
add
and
js
jo
rorb
push
cltd
jno
jo
cli
push
rorl
leave
rclb
roll
add
insl
enter
adc
addb
shll
dec
fistps
pop
cmpsb
mov
incb
call
jnp
jp
cld
pushf
push
lar
aad
pop
movd
pop
inc
push
ja
sbb
inc
adc
dec
mov
sbb
push
xorl
je
mov
pop
shlb
cmp
add
sahf
push
rcr
mov
cmp
and
push
mov
out
xor
xchg
add
lock
sbb
sub
jmp
fstpt
or
fimull
add
adc
das
imul
add
lods
in
sbb
testb
xlat
cmpsl
cmp
sbb
adc
mull
mov
or
mov
sti
inc
add
loopne
sbbl
adc
or
or
es
sbb
xchg
xor
std
sbb
js
xlat
mov
push
icebp
mov
add
adc
mov
testl
rorb
lret
ret
outsb
fbstp
xor
mov
pusha
xor
movsb
push
add
or
dec
rorb
cwtl
push
cmpsb
aad
jns
dec
jmp
sbb
jle
sbb
lret
testb
insl
sbb
xor
popa
nop
adc
mov
sub
aas
inc
sub
sub
ficomps
aam
pop
inc
jns
cmp
sbbb
addb
shl
push
addl
shrb
jp
xorb
xchg
xor
nop
mov
les
add
jl
push
pop
push
xor
push
pop
sbb
cmp
hlt
mov
pop
js
xchg
pusha
pusha
push
adc
fwait
shrb
lret
mov
and
lcall
stos
sbb
es
test
jmp
mov
xchg
popa
test
scas
xor
mov
add
sub
add
rclb
xchg
sbb
or
pushf
lret
sti
adc
mov
add
add
mov
mov
inc
fisubrl
add
xchg
out
pop
movl
jecxz
xor
sub
inc
xor
inc
jl
lahf
nop
mov
lods
jg
insb
cmc
push
and
xchg
xor
out
add
insl
and
xor
bound
mov
xchg
mov
mov
call
sub
sub
arpl
fisttpl
lods
gs
add
adc
push
insb
sub
pop
jnp
cwtl
and
sub
sub
fimuls
mov
cmp
test
ss
and
sub
sbb
mov
sbb
push
lret
pop
mov
mov
std
pop
add
outsl
fs
adc
inc
sarb
ret
jle
test
pop
pop
lds
xchg
leave
mov
nop
dec
dec
test
mov
inc
clc
cmp
mov
nop
adc
sbb
cli
xor
push
in
adc
fwait
cwtl
or
movsb
and
inc
cmp
jl
mov
ficomps
divb
mov
fisttpl
push
mov
mov
push
mov
push
cmc
pusha
add
cmp
jmp
movsl
mov
nop
fadd
pop
dec
pusha
in
aaa
lock
mov
mov
and
mov
sub
cmpsb
push
test
add
sti
pop
repnz
push
lea
xor
cmpsl
cmc
add
rcrl
adc
adc
adc
dec
pop
imul
adc
mov
pop
jne
pop
in
inc
jecxz
jecxz
pop
mov
movsl
xchg
scas
sarl
mov
xor
scas
pop
jp
add
pop
jle
jmp
shl
inc
aas
sbb
out
jle
or
int
loopne
jp
cli
push
xor
push
dec
popa
fwait
popf
pop
dec
sub
je
adcl
filds
pop
cmp
jne
push
adc
enter
nop
cmp
add
add
push
jmpw
bound
lret
lods
jne
popf
lock
ret
push
pop
push
xchg
adc
sub
sbb
cmp
clc
add
test
add
je
jnp
iret
rcrb
pop
repz
xchg
mov
hlt
aad
xchg
out
add
loopne
decl
js
ja
fs
add
add
sysenter
xchg
loop
fcmovnb
sbb
or
dec
call
loop
push
xchg
cmp
je
mov
add
mov
pop
fists
dec
inc
std
pop
mov
cld
push
push
pusha
je
loopne
arpl
and
insl
inc
dec
imul
add
outsl
add
andb
or
mov
es
push
sbb
or
pop
in
push
outsl
and
fsts
je
dec
mov
and
push
sub
sub
aad
mov
fdivs
hlt
or
clc
loope
loop
lea
loopne
mov
xchg
jno
daa
neg
mov
push
mov
je
push
or
adc
push
dec
push
add
jl
outsl
pop
dec
push
inc
xor
adc
sub
test
sbb
cs
loop
mov
and
and
cs
mov
inc
xor
fisubl
insl
xor
add
rorl
push
push
test
rcrb
inc
js
mov
jmp
and
sbb
jno
adc
insb
push
pop
mov
push
dec
push
arpl
mov
jecxz
xchg
das
pusha
mov
adc
std
aad
adc
pop
mov
pop
movsb
mov
cmp
es
aas
mov
xor
out
push
push
mov
pop
push
cmp
jmp
add
or
push
dec
push
stos
jle
sub
call
scas
dec
aad
or
jl
cmp
and
xchg
cmc
ss
inc
repz
push
test
mov
popf
xchg
inc
test
inc
int
dec
add
popf
stos
jb
inc
clc
maxps
sub
jle
pop
pushl
dec
sub
mov
dec
js
je
sub
call
or
rolb
xchg
sub
jecxz
loop
ret
or
aas
in
das
sti
dec
in
and
outsb
pusha
jne
in
mov
mov
imul
xchg
cmc
mov
rolb
call
xchg
or
cmc
dec
push
jl
adc
jmp
xor
daa
add
add
and
or
das
cmc
xor
push
push
lea
and
nop
stos
movsb
pop
inc
ficompl
or
mov
popa
pusha
or
sub
jl
inc
or
lret
je
andb
xor
test
fadds
and
fxch
aaa
mov
js
andl
push
insb
test
or
imul
mov
clc
dec
pop
fstps
jne
or
cmpb
leave
imul
test
or
rorl
push
iret
sbbl
js
rorl
lret
pop
pop
out
sbb
or
popf
es
xor
lea
add
loopne
je
loopne
xchg
ret
or
sbb
fcomps
or
push
out
adc
shll
clc
movsb
jp
and
cli
mov
movsl
push
xchg
xchg
aaa
pop
shll
fisttps
test
xchg
jnp
popa
sahf
xor
ret
lahf
clc
sbb
adc
jg
push
addb
xor
pop
aam
sbbl
push
xchg
pop
les
mov
pop
sbb
ret
sub
jno
xor
or
mov
adc
lret
pop
adc
mov
mov
ss
dec
orl
push
movsl
dec
push
push
insl
mov
ficoms
repz
cli
push
jg
or
dec
lcall
out
add
xchg
or
popf
dec
dec
icebp
xor
inc
dec
lea
lods
push
pushf
and
lock
test
or
push
incb
mov
cmpw
test
push
enter
lods
fimull
push
jle
or
std
adc
push
pop
inc
test
sub
movsl
hlt
adc
mov
mov
jg
or
clc
dec
jae
sbb
sbb
in
push
fstps
sbb
sub
ret
add
pop
add
or
mov
sbb
add
xchg
pextrw
inc
pop
movsb
pusha
push
and
mov
mov
or
sbb
add
pop
cmp
jae
loopne,pt
mov
push
mov
cwtl
mov
mov
pop
test
mov
mov
inc
xor
cmc
adc
shlb
push
shlb
mov
ret
je
and
clc
mov
mov
pop
dec
sti
inc
xchg
mov
cmp
jle
cmp
add
inc
mov
mov
inc
and
pop
incl
xor
movsl
lock
lods
loop
xchg
push
sbb
test
cmc
loopne
ret
inc
adc
jne
and
je
les
mov
cmp
popa
decb
sbb
mov
aaa
mov
inc
adc
cmpb
push
xchg
scas
jo
dec
push
or
data16
inc
sahf
pop
test
call
xchg
dec
push
adc
out
push
leave
lea
adc
or
mov
jmp
inc
arpl
add
jle
inc
xchg
mov
cli
add
mov
push
and
jmp
call
cmp
cmp
je
push
add
xchg
pop
lcall
mov
je
and
mov
dec
sbb
pop
inc
push
test
clc
ret
jae
mov
adc
shr
or
jne
push
fidivl
push
in
adc
jge
dec
sbb
aad
movb
in
test
pop
add
test
lahf
insb
test
movsb
in
push
push
outsl
inc
lret
sbb
mov
sbbb
mov
into
mov
add
les
add
ljmp
push
pop
clc
out
rorb
or
inc
std
lret
rcll
xchg
les
icebp
hlt
das
dec
fadds
mov
mul
sbb
leave
dec
adc
push
push
push
call
je
sub
mov
and
add
es
fldcw
jbe
flds
push
flds
cmp
ds
cmp
add
sbb
shrb
cmp
shlb
bnd
or
push
hlt
pop
insb
lret
cmp
or
jo
arpl
incb
dec
mov
rcrl
ljmp
sub
jne
push
addl
adc
ja
mov
aam
rorl
mov
inc
sub
add
or
jecxz
sahf
imull
push
pop
pusha
fs
or
clc
dec
cmp
sbb
push
push
and
xchg
loopne
cmpsl
shrl
adc
mov
pusha
and
push
jno
and
repnz
or
test
sbbb
clc
push
lahf
loopne
dec
xor
xor
lods
adc
test
cmp
mov
xor
aad
dec
les
loopne
jnp
call
incb
xor
incl
sbb
js
cld
cli
sbb
inc
push
jne
sbb
push
xor
adc
mov
push
es
pusha
add
mov
jne
xchg
je
test
fcomps
pop
fstps
sbb
pop
out
loop
fwait
sub
sub
or
cmpsb
addl
jo
jle
mov
popa
adc
daa
fdivrl
addb
clc
mov
dec
push
shl
jbe
clc
fs
jle
push
data16
inc
dec
fbstp
push
inc
fimull
adc
push
loopne
push
mov
mov
mov
dec
loop
add
pop
out
aas
push
lcall
test
xor
rolb
pop
jb
pop
ret
jg
pop
je
cwtl
or
nop
std
mov
or
cmp
adc
shl
or
outsl
jecxz
jo
out
subb
sarb
out
mov
sbb
jge
jg
lcall
neg
cmp
jge
mov
fs
dec
cmp
and
xor
sbb
neg
cmp
outsl
dec
push
jp
pmulhuw
xlat
shr
loop,pt
inc
out
push
cmp
lock
mov
je
mov
orb
sbb
jl
adc
imul
or
push
insb
inc
mov
xor
aad
jmp
push
or
push
and
inc
xchg
cmc
push
rol
push
cltd
cmp
and
int3
jne
nop
cmp
and
jp
fwait
lock
sub
stos
setl
nop
inc
lcall
imul
xor
sbb
push
and
mov
mov
add
mov
or
orb
jge
add
jno
mov
ds
rolb
rcll
cmc
push
sbb
out
inc
lock
stc
hlt
xchg
aam
mov
add
fninit
gs
imul
cs
xorb
push
scas
into
push
sbb
push
js
addr16
fildl
sbb
add
inc
sub
repz
sarb
cmp
pop
cmp
incb
mov
bnd
pop
cmp
add
push
lods
add
cmc
sub
clc
jmp
and
mov
data16
mov
filds
sub
push
sub
push
dec
and
xchg
ljmp
cmp
sub
mov
out
push
nop
jmp
sub
push
sbb
add
and
sub
pop
test
pop
sub
adc
insb
addr16
je
cmp
dec
push
and
dec
push
adc
sub
push
sbb
mov
xor
push
and
xor
sub
dec
push
punpckhwd
popa
fsts
inc
es
xchg
mov
mov
sbb
mov
and
mov
pop
xchg
out
test
add
sub
inc
cmp
andb
and
inc
fcmovb
pop
xor
mov
add
adc
xor
pushf
xchg
push
loopne
push
fstpt
cmp
int
lock
sub
clc
pop
lahf
or
lea
lcall
mov
push
subb
dec
xchg
inc
adc
mov
pusha
add
sbb
mov
or
push
add
sub
add
inc
insb
rcrl
pop
xchg
andb
loopne
ss
inc
sub
push
mov
and
sub
cmp
in
push
adc
jnp
int
test
mov
xor
xor
inc
mov
jae
imul
in
jp
or
insb
aad
or
inc
int3
pop
fidivrl
pop
ds
sbb
add
xorb
or
loop
in
adc
or
push
bound
inc
inc
call
sbb
cmp
push
loopne
pop
push
inc
clc
inc
je
test
xorl
dec
mov
inc
daa
sub
dec
scas
mov
roll
adc
jo
mov
daa
jb
je
mov
bound
sub
fs
inc
mov
mov
mov
or
pushf
into
lock
cmp
popf
neg
xchg
movsb
adc
xchg
and
loop
push
adc
pop
mov
adc
sbb
jmp
and
scas
js
test
and
xchg
nop
pusha
pop
sub
fsubs
loope
jo
and
lds
push
inc
je
pop
mov
dec
ret
xor
mov
sub
cld
or
in
outsb
ret
jl
sbb
xchg
or
jl
je,pt
sbb
insb
clc
cmpb
imul
push
outsb
add
inc
gs
imul
or
cmp
jle
mov
cmp
push
or
add
push
push
add
jmp
lret
sub
sahf
jg
xor
dec
js
out
int
xor
rol
lea
xchg
push
lds
xchg
mov
adc
je
jle
push
or
out
aaa
mov
jge
mov
jne
cmc
and
lods
nop
sbb
pop
or
cld
js
loop
orl
sbb
ds
inc
dec
mov
pushf
sahf
xchg
xchg
inc
cmp
pusha
add
adcb
ret
loope
scas
and
insb
cmp
push
pop
cli
push
xchg
ja
add
test
aam
ret
outsl
adc
adc
dec
xchg
aam
js
sub
faddl
cmp
jne
jl
mov
mov
outsl
mov
imul
or
add
lea
sub
push
ret
inc
push
aaa
xchg
jno
ss
out
push
add
or
clc
push
push
addl
clc
lds
sbb
adc
cmp
push
push
sbb
leave
ficoms
pop
sub
jae
aas
nop
or
xchg
int
add
fs
addb
jp
mov
add
push
jo
inc
add
sub
ljmp
rcrl
or
bsf
jnp
imul
fmuls
repnz
scas
nop
push
and
cld
mov
aaa
es
push
pop
jl
cld
and
lock
out
dec
and
repnz
out
xchg
xchg
xchg
inc
mov
and
out
sbb
sti
shl
cmp
fistl
fadd
pushf
mov
inc
or
inc
loope
xorb
and
jb
ret
adc
push
inc
sarl
ret
clc
loope
jb
mov
outsl
mov
jle
inc
enter
ret
add
mov
lea
adcb
orb
mov
inc
mov
mov
jl
leave
sub
sbb
fiaddl
or
loopne
stos
push
xchg
cmp
and
inc
adc
pop
shrl
sub
jge
sub
push
pop
mov
sbb
sbb
push
xor
cmpsl
mov
push
popa
xor
aam
dec
or
and
add
xor
fsubrl
iret
jne
lcall
push
test
incl
xor
mov
fbld
and
adc
cmp
popa
clc
in
cli
scas
lret
idivl
popa
ja
neg
jl
std
inc
xchg
mov
out
xor
cmp
mov
stc
inc
nop
cmpl
sahf
jl
test
add
xor
jl
pop
xor
or
sbb
ret
xchg
xor
jecxz
out
jle
cmpsl
xchg
cwtl
jle
imul
sub
push
stc
pop
incl
add
jnp
loop
add
xchg
add
out
fwait
insl
in
push
fiaddl
inc
push
jle
rolb
int
inc
and
lahf
les
outsb
sub
pushf
sahf
cli
stos
in
cmp
lea
push
idiv
inc
mov
iret
pop
test
iret
fs
and
xor
ss
dec
cmp
test
mov
cltd
and
out
aas
or
xor
pop
mov
adc
pop
mov
pop
mov
or
mov
adc
dec
flds
lret
movsl
ficomps
push
movsb
fcmovbe
fcoms
str
or
fmuls
aad
push
cs
adcl
or
mov
adc
inc
das
sub
sbb
sbb
inc
bound
sbb
mov
xchg
jo
outsb
and
mov
data16
adc
xchg
jg
mov
jb
and
leave
and
ret
test
in
xchg
shrb
jecxz
pop
dec
insb
fsubrs
cmp
ss
add
movsb
or
push
jbe
pusha
sbb
outsl
into
movsl
fnstcw
test
pushf
pop
aaa
xor
xchg
dec
lret
adc
xchg
mov
push
mov
xor
and
inc
sub
xchg
inc
mov
push
push
jbe
push
add
push
cmpsb
dec
decb
add
or
test
aaa
jl
in
mov
jne
test
call
frstor
fisttpl
pop
add
or
dec
cmp
scas
push
add
inc
mov
xchg
pushf
dec
inc
and
aam
lock
mov
sbb
int
lock
pusha
cmpsl
ljmp
and
adc
out
push
sbb
jmp
add
or
pop
mov
add
sub
push
aad
jae
jne
add
xor
or
clc
ret
pop
push
movb
lods
or
mulb
sti
fwait
popl
adc
mov
xor
adc
pop
or
jl
sbb
mov
dec
sub
xchg
rcrb
rolb
aaa
hlt
sbb
mov
hlt
mov
data16
cltd
dec
or
mov
add
sahf
push
push
cmpsl
fidivrs
push
add
sbb
ret
jg
fs
aaa
rcrb
and
add
jecxz
cmp
pop
in
int3
xor
push
lea
push
push
xchg
jo
movsb
push
cmp
push
add
pop
sub
mov
mov
sub
fs
and
adcl
add
adc
or
rolb
outsl
addb
andl
sahf
lods
dec
inc
adc
jno
or
push
pushf
pop
pusha
cs
adc
mov
inc
push
xlat
repz
pop
js
cs
je
ror
add
test
imul
fs
das
push
fdivrs
popa
dec
cmp
xor
cmp
cmp
mov
jge
mov
mov
and
fcmovb
xor
and
movsb
pop
mov
xchg
std
add
sub
sub
pop
lods
inc
add
add
jae
mov
cmp
ja
push
push
je
rclb
adc
jge
out
orb
inc
shl
inc
add
xchg
and
pop
xor
lea
mov
movb
and
add
mov
and
imul
mov
outsb
inc
xchg
outsb
add
lods
ret
into
sub
adc
sar
aam
pop
pop
mov
clc
clc
mov
je
cmc
rcrb
push
cmp
iret
cmp
imul
test
sbb
add
add
ret
clc
adc
mov
sbb
rorl
shr
and
lret
and
in
or
fwait
cld
dec
xor
and
pop
dec
je
or
mov
adc
rcll
jmp
xchg
pop
cmp
sbb
push
push
dec
ds
dec
ret
inc
ja
loope
cld
sbb
test
lods
std
adc
jne
inc
dec
sub
fs
clc
icebp
inc
dec
int3
das
pop
aaa
ret
loopne
clc
add
shlb
and
or
test
xchg
lods
outsl
int
add
inc
xchg
call
pushf
sbb
sbb
fsubs
push
mov
mov
lea
mov
sahf
xor
adc
daa
in
sub
push
mov
addr16
enter
hlt
inc
jecxz
jnp
cmp
js
ror
loope
sbb
pop
push
fucomi
adc
fcoms
jns
rcr
dec
push
sbb
xor
mov
inc
imul
imul
push
adcb
inc
loop
mov
pop
mov
mov
ror
aad
and
stos
aam
fmull
fistpll
insb
es
test
repnz
neg
and
or
or
sbb
jns
popa
push
inc
or
imul
add
push
mov
push
xchg
int3
rolb
rolb
add
cmp
rcrl
loope
hlt
lock
mov
push
cmp
jae
push
push
cwtl
or
add
js
add
add
jne
mov
sbb
jge
outsb
xor
in
mov
dec
cmp
adc
add
and
inc
jno
adc
addr16
cmpsl
loopne
ret
movsl
leave
les
pop
dec
jmp
xor
push
pop
negl
or
cmp
cmp
adc
and
test
inc
cmp
cmp
in
in
cmpsb
cmp
movb
and
xchg
inc
sub
stos
xchg
stos
pop
popl
xchg
cmp
add
shrl
push
andl
xor
pop
sub
push
jne
push
ds
add
push
aad
movsl
shl
std
add
test
test
and
dec
fmuls
ret
lods
aas
pop
pop
xchg
jbe
jmp
loopne
sub
dec
lds
out
movsb
sub
add
lret
outsb
mov
mov
cmp
ljmp
push
jne
xor
or
mov
or
test
and
cmp
arpl
popa
push
data16
iret
clc
xor
inc
shr
mov
shrl
lret
mov
add
jp
shll
imul
rep
mov
cmp
int
jge
flds
sub
mov
pop
cmc
stc
in
mov
or
and
cmp
jmp
fwait
shrb
test
test
add
push
out
pop
add
inc
mov
or
mov
add
add
fs
push
cmpsl
insl
cmp
and
sbb
and
loopne
or
or
push
dec
jg
jns
popa
mov
push
add
dec
inc
sbb
adc
dec
int
decb
push
xor
add
inc
lock
jo
sub
mov
dec
dec
fdivrl
ret
xor
inc
xchg
in
add
sbb
push
lods
push
jo
cs
push
sbb
sbbb
popf
mov
ljmp
lret
mov
clc
test
ja
pop
adc
ret
xchg
pop
mov
imul
or
mov
in
add
cmp
or
fcoml
cmp
fsubr
and
out
push
dec
push
int3
addl
mov
lods
pop
xor
das
ret
shll
pop
ja
in
leave
adc
push
push
dec
sahf
xchg
mov
pop
data16
popf
jbe
das
push
sub
push
adc
cmp
adc
dec
shll
adc
mov
int
cli
mov
enter
fimull
dec
sub
push
or
xchg
pop
pop
push
test
xchg
mov
les
icebp
mov
xchg
add
nop
nop
push
rclb
cmpsl
cmp
xchg
cs
mov
or
test
mov
cmp
out
add
push
push
push
addr16
mov
imul
dec
adc
fadds
push
or
add
or
aam
adc
fld
adc
lock
push
and
push
adc
fildl
pop
push
and
bound
xchg
setne
sbb
pop
int3
sub
add
xchg
and
pop
arpl
sub
into
mov
push
out
push
pop
mov
dec
arpl
or
sbb
int
test
pusha
mov
dec
mov
push
aaa
sub
sub
push
and
xor
xchg
push
adc
inc
inc
adc
js
dec
adc
adcb
shrl
rep
push
lds
adc
stos
jb
nop
sub
xchg
push
mov
fwait
stc
arpl
push
pop
mov
clc
add
pop
js
ret
xor
push
imul
insb
and
sub
aam
add
ret
push
push
push
sub
rorb
adc
inc
sbb
adc
cmpsb
sbb
movsl
rcll
das
xchg
push
xchg
lods
cmp
les
or
or
lods
sbb
sbbb
adc
icebp
adc
or
adc
xor
and
xor
rcl
aam
and
inc
mov
adc
cmp
and
ret
out
push
popa
mov
and
and
hlt
inc
or
xchg
jmp
push
jo
pop
push
or
inc
pop
push
mov
push
mov
push
je
xchg
push
inc
and
xchg
xchg
pop
jp
add
je
add
push
adc
mov
xchg
movb
sub
jo
insl
shrl
and
mov
jae
vmmcall
sub
inc
insb
jae
sbbb
xchg
jae
movsl
daa
push
int3
hlt
jb
jae
movsb
popa
pop
lahf
testb
ret
adc
cmp
xchg
enter
cmp
aam
sbb
pop
and
mov
pop
dec
cmp
loope
sub
mov
orl
lock
push
dec
cmc
ret
jno
cmp
mov
mov
push
push
adc
cld
pop
inc
mov
test
mov
dec
repz
or
out
inc
mov
push
push
ja
jl
dec
or
cmp
mov
mov
js
add
test
into
mov
adc
pop
idivb
or
adc
xor
test
sub
push
and
cltd
test
pop
pop
ss
pop
sub
push
mov
push
sahf
mov
popf
add
icebp
gs
mov
addr16
add
and
sbb
dec
and
mov
jmp
popf
mov
jne
insl
inc
inc
add
adc
inc
dec
mov
xor
nop
and
xchg
inc
inc
add
movsb
test
fcomi
inc
jge
cmpb
push
mov
adc
cli
mov
adc
add
or
and
dec
cmc
xor
pop
push
imul
mov
hlt
rclb
rcr
mov
mov
add
es
adc
bound
int3
popa
xor
or
rclb
or
and
clc
rolb
aad
push
sbb
fisttps
cmpsb
sbb
and
and
adc
nop
adc
and
sub
jo
dec
sub
and
push
loopne
sarb
dec
les
loop
dec
mov
mov
inc
adc
outsb
pop
adc
push
and
mov
fmull
add
adc
movsb
lahf
pop
xor
ret
popf
dec
popf
xchg
pop
and
push
inc
dec
or
enter
mov
in
dec
cmpsb
imul
sub
or
sbb
mov
push
sbb
xor
sbb
jle
or
jne
adc
movsb
adc
sub
dec
or
or
filds
add
mov
sbb
inc
lahf
jbe
add
xor
sbb
psraw
push
ret
mov
lea
les
cmpsl
dec
movsb
push
adc
ret
inc
rorb
js
mov
mov
test
rcrb
mov
jb
dec
int3
mov
pop
cmp
cmp
dec
imul
enter
adc
inc
jmp
jnp
outsl
andb
inc
and
test
dec
xchg
jno
xchg
ds
mov
pop
shll
jle
shrb
add
dec
push
mov
cmp
jne
add
dec
nop
dec
jne
mov
pop
pop
es
fadds
adc
dec
push
cmpsl
xchg
jbe
outsl
dec
xor
pop
add
dec
add
inc
add
insl
insl
je
push
xor
push
ds
jne
pop
sub
add
dec
shr
and
cmp
mov
stc
aaa
out
iret
out
xchg
cmp
add
jne
mov
ja
cmp
bound
cmp
sbb
jne
push
or
cmp
in
jb
mov
fmuls
sbb
fisttpl
pop
add
test
push
push
mov
jo
add
inc
sbb
sub
push
jno
or
pusha
jge
test
fnstcw
loopne
jne
inc
add
xor
dec
mov
jle
test
dec
cmpsb
scas
in
aas
clc
xor
aam
sub
fsubl
mov
test
js
fs
lock
mov
cwtd
adc
fdivs
shlb
les
sub
xor
cmp
mov
add
mov
sbb
jge
jge
ret
add
mov
pop
rorb
push
lcall
adc
cmpb
jb
or
cmpl
mov
push
fidivl
or
inc
xchg
shrb
and
push
jbe
sbb
ds
js
sarl
push
push
fdivrl
push
int3
push
push
ret
cmp
je
push
jl
xlat
cmp
mov
xor
ficomps
mov
add
or
mov
aam
jge
sub
pop
pop
repnz
clc
and
stos
dec
mov
mov
dec
cmp
in
pop
mov
out
cli
jg
adc
iret
insl
pusha
cwtl
sub
push
nop
cmp
mov
arpl
jne
mov
mov
add
pop
adc
std
add
jbe
sub
add
push
scas
fdivrs
lods
imul
xchg
lods
dec
push
push
pusha
jne
call
shll
pop
das
adc
push
lcall
or
movsl
enter
mov
mov
pop
mov
dec
fs
aad
xor
icebp
stos
sahf
adc
lret
sub
sbb
push
test
in
push
fs
in
sub
in
xor
mov
pop
cmpsl
nop
xchg
int3
fistpll
lods
mov
cmp
je
jecxz
je
mov
dec
shll
push
or
adc
sbb
out
les
mov
fadds
sub
mov
mov
push
add
inc
mov
ret
mov
and
stc
and
addr16
add
push
mov
mov
adc
mov
push
mov
adc
or
lock
rorb
dec
cmp
push
mov
inc
mov
pop
rolb
mov
cmp
enter
insl
int3
js
mov
or
movsl
aam
out
add
pop
es
fucom
or
add
and
mov
sti
mov
outsl
sub
mov
popf
repnz
push
push
push
cld
pop
aaa
push
outsl
sbb
test
add
push
pop
jecxz
adc
fcomp
push
dec
and
push
mov
leave
xchg
or
cs
or
outsl
sbb
mov
mov
xor
incb
insb
sub
mov
adc
or
jle
adc
mov
cmp
mov
sar
cmp
jg
mov
xchg
shrl
shll
cmp
mov
jbe
add
jle
add
rol
movsl
sbb
fstl
outsb
sbb
addb
xchg
lock
clc
ret
loopne
adc
fldl
dec
xchg
pop
mov
jmp
push
add
inc
jl
jmp
pushf
and
push
fcomps
fcoms
pop
pop
pop
push
mov
or
adc
adc
push
lods
movsb
add
jno
repnz
movsl
je
test
sbb
pop
pop
jb
sbb
push
push
pop
jmp
sub
and
xor
int3
fidivl
orl
sub
pop
lock
and
fnsave
movsb
adc
dec
push
clc
sub
cmp
cmp
sbb
test
sub
fs
cmp
notl
or
mov
xchg
jo
cli
mov
push
sub
push
push
or
and
xor
insb
mov
es
mov
xchg
cmpsb
sbb
sbb
mov
push
dec
jecxz
nop
inc
fucomip
rolb
shrb
dec
sbb
sar
mov
test
out
adc
out
add
add
stos
arpl
or
ljmp
push
push
pop
divb
dec
add
sti
mov
ss
sbb
adc
mov
sub
push
dec
int3
jp
add
inc
add
stc
cmp
cmpb
mov
mov
shrl
mov
mov
je
mov
lods
imul
or
adc
data16
mov
inc
inc
out
xor
jmp
sub
movsl
mov
lods
xor
xor
outsb
cli
push
out
sbb
jo
loope
sub
loop
mov
dec
jecxz
adc
mov
in
pop
cmp
pop
roll
cmp
xlat
jo
sti
jmp
push
test
pop
adcb
push
js
gs
add
push
push
pusha
cs
jo
pop
mov
push
fadds
in
mov
pop
push
inc
cld
or
fcomps
lods
je
push
sub
loope
xor
pop
inc
mov
stc
xchg
lock
int
rcrb
adc
cmp
in
push
add
mov
cmp
mov
xchg
pop
mov
cli
adcb
scas
mov
aaa
mov
daa
cmp
movsl
orb
jne
add
jl
movsb
xchg
add
mov
pusha
or
or
clc
outsb
xor
and
inc
dec
and
add
pop
inc
or
push
leave
inc
cmp
and
adc
jne
jl
pushf
pop
push
or
pusha
in
dec
inc
loope
add
shr
sahf
in
sarl
in
jns
and
les
sti
push
jl
pop
cmp
test
test
add
cs
dec
pop
repz
inc
mov
sub
int3
xchg
icebp
xchg
sub
jmp
lea
inc
push
pop
adc
fistps
inc
adc
cmp
data16
add
mov
rorl
call
xor
js
data16
add
lcall
mov
add
and
jle
mov
sub
shl
jl
sub
adc
jmp
sub
push
shlb
aas
aaa
xchg
imul
add
jbe
mov
sub
inc
or
push
inc
sbb
jg
jnp
incl
cmp
dec
lret
mov
mov
mov
jo
adc
movsb
data16
repnz
add
xchg
add
xchg
lcall
daa
xor
cmp
sub
inc
mov
mov
jmp
std
lahf
and
jge
sub
into
mov
shr
push
xor
add
loopne
or
sbb
jmp
ja
inc
mov
push
stos
push
movl
adc
push
add
clc
jg
sti
movb
dec
jne
scas
cmp
insl
lahf
pop
std
sbb
aam
add
inc
rorl
cmp
stos
movsl
in
or
push
push
mov
inc
xor
inc
cmp
out
xorl
movsl
push
popa
hlt
insl
clc
adc
incl
and
jge
or
inc
sbb
sub
push
sub
leave
incb
dec
push
push
insl
adc
in
fcom
push
adc
pop
mov
cmpsb
test
inc
clc
cwtl
push
aaa
fwait
inc
and
sarl
nop
jne
and
imul
sarl
or
rol
idivb
mov
cmp
call
pop
cmc
sub
adc
int
jle
sarl
push
les
std
dec
bt
lret
and
out
out
or
jp
push
push
out
lock
mov
or
xor
into
in
adc
xor
xchg
dec
dec
lds
push
and
push
outsl
add
ret
pop
adc
adc
lcall
xor
or
cmp
sub
hlt
mov
pop
loopne
lret
dec
int
imul
sub
pop
ret
lods
push
mov
js
stos
scas
sbb
or
dec
adc
or
sti
ja
ljmp
call
and
dec
or
shll
orl
pop
rorl
lds
cmovae
xchg
lgs
pop
push
push
cmpsl
add
adc
cmp
sub
adc
mov
lcall
xor
call
jle
je
dec
or
or
xor
arpl
jo
js
push
mov
pusha
jl
movsl
pop
xchg
shl
xchg
inc
add
or
inc
mov
add
jo
mov
add
push
sbb
pop
loope
adc
xchg
pop
push
cs
insl
int3
lock
cmp
pushf
sbb
jnp
test
xor
add
xchg
outsl
das
mov
inc
xchg
xchg
adc
dec
sub
adc
adc
orl
test
jg
sub
jno
aad
add
icebp
xor
xchg
pop
push
cs
push
ljmp
pop
add
sbb
and
fnsave
dec
sub
movl
push
push
stos
adc
adc
lcall
lea
outsb
pusha
push
cmp
push
inc
je
mov
or
push
mov
fstpt
insl
mov
push
jo
bound
into
push
je
retw
fcmove
or
sbb
call
push
inc
nop
test
sbb
mov
mov
push
push
in
sti
sub
cwtl
mov
xchg
cwtl
aaa
out
add
inc
adc
clc
pop
cmp
adc
lret
clc
repz
jg
jbe
cmpl
mov
sub
xchg
push
scas
movsb
xchg
aam
clc
push
push
jae
adc
or
xchg
add
hlt
and
rcl
shr
stos
dec
add
shr
or
sbb
loop
add
mov
and
adc
or
or
decb
jae
lea
mov
adc
push
jle
pop
push
pop
mov
add
sarl
data16
jmp
pop
ret
jp
lret
mov
xor
repnz
test
sub
sub
sbb
push
lret
ss
pop
dec
insb
push
push
push
inc
in
jno
cmp
cmp
pop
ret
fcomps
push
mov
pushf
call
push
pop
adc
pop
mov
enter
stos
sub
jmp
aas
cmp
jae
xor
pusha
mov
sub
sub
out
ret
sbb
das
adc
jge
fdivs
mov
dec
std
mov
rclb
jge
mov
into
test
mov
add
sbb
jo
push
mov
mov
or
cmpsb
rcrl
shl
enter
popf
cmpsb
pop
push
or
fs
xor
cmp
push
aam
sub
cmp
fwait
cmp
push
orl
jmp
jge
mov
sub
add
jo
pusha
aas
aaa
or
or
fmuls
cmpb
inc
push
add
ljmp
sbb
xchg
mov
lret
mov
sbb
in
enter
jns,pt
fisttpll
xor
mov
adc
or
shlb
mov
or
into
rcr
sbb
mov
call
jmp
jbe
push
inc
rorl
push
xchg
sahf
test
sbb
sbb
pop
or
add
cli
int3
mov
ds
mov
hlt
sub
sbb
fs
jae
inc
and
mov
pop
adc
add
dec
lcall
or
loopne
dec
in
or
add
add
mov
xchg
test
jne
rcrb
fstp
dec
imul
loop
jae
shrb
adc
test
movsl
cmp
inc
enter
inc
mov
mov
dec
fsubp
call
mov
push
fadd
jbe
jge
clc
nop
jle
add
aas
push
imul
fcomp
add
and
adc
fsubs
and
les
cmp
pop
jge
gs
xchg
and
or
mov
mov
je
adc
and
fstpt
pop
or
ret
inc
shlb
cmp
jbe
lret
mov
cmpsl
mov
aad
push
pusha
mov
and
sbb
inc
shrl
loope
adc
xor
fbstp
jg
cmc
xchg
inc
int3
cmp
jb
mov
pusha
add
pop
mov
movsb
lods
add
stos
test
mov
pop
sub
add
add
or
nop
je
xor
inc
push
or
xchg
ljmp
insb
test
cltd
into
ds
jmp
pop
lcall
xor
xchg
mov
cmp
cmpb
adc
je
push
loope
cs
push
mov
sub
cwtl
jne
mov
fmul
negl
jae
movsb
ss
je
ds
cwtl
aam
sahf
sub
insl
cmpsl
or
shll
sbb
imull
ret
bound
inc
mov
xchg
jo
lods
loopne
dec
fs
inc
cli
add
jae
or
xor
pop
div
inc
sbb
ret
adcb
cmp
lea
xchg
mov
fwait
inc
xchg
mov
mov
mov
movsl
inc
xchg
insl
jp
repnz
add
mov
ficompl
sahf
add
push
push
or
dec
andl
jo
or
ret
jne
mov
add
fwait
add
lds
sbb
jg
mov
les
jp
ljmp
pop
cli
push
outsl
adc
dec
inc
or
push
cmp
loop
es
pop
jl
adc
or
shrl
inc
sub
dec
add
add
pop
add
sbb
adc
jg
sub
pop
mov
mov
and
mov
cmp
xchg
fdivp
loop
or
scas
out
jbe
xor
lock
out
push
cli
adcb
xchg
mov
xor
cwtl
push
push
cmp
mov
loope
cmp
je
scas
adc
mov
orl
mov
ret
add
fisttpl
rorb
sbb
dec
sub
lods
sbb
lods
enter
pop
sub
movsb
mov
cmp
xorl
pop
mov
xor
in
shll
andb
daa
lea
xchg
push
mov
in
mov
pop
xchg
add
mov
inc
or
xchg
movsl
sub
inc
mov
mov
test
jbe
mov
popa
dec
je
pushf
sub
mov
push
inc
dec
adc
cmp
inc
or
inc
adc
je
aam
cmpb
jne
aas
push
xchg
cwtl
push
jmp
and
roll
sbb
adc
in
adcb
je
xchg
adc
fadds
mov
mov
pop
mov
mov
sarl
ret
cmp
add
mov
test
je
testb
dec
mov
jp
push
add
inc
adc
fsubs
mov
out
mov
test
shl
or
xchg
lock
loopne
pop
pop
cltd
adc
orb
jle
outsb
sbb
mov
mov
mov
or
jno
push
jne
jo
push
push
fsubr
or
or
insb
lret
inc
jbe
cmp
je
or
cli
in
cwtl
movl
mov
cmp
je
scas
cmp
or
push
cmp
jae
addr16
je
mov
cmp
fcmovnb
mov
xor
add
adc
xor
jmp
mov
orl
out
std
mov
mov
jae
test
jne
sub
jg
jo
lods
sahf
cld
cmp
add
ds
mov
sub
push
addb
aam
loop
cli
mov
jnp
addl
orl
xchg
std
pop
add
pop
mov
xlat
std
cmp
out
pop
push
je
cmp
pusha
shlb
or
rcll
imul
loope
inc
enter
cmp
test
sbb
mov
mov
mov
ret
inc
add
jl
sbb
add
ljmp
dec
ss
xchg
bound
inc
add
lods
push
sub
ja
add
add
or
push
pusha
and
cwtl
test
lea
pop
push
cs
rcrb
push
clc
mov
into
repnz
sbb
pusha
ret
mov
and
sbb
pop
push
push
pop
mov
pop
mov
and
jl
ror
aam
cld
or
and
iret
push
push
inc
outsl
fiadds
cmp
enter
xor
xor
nop
or
and
insl
pop
jae
ds
mov
pop
xchg
push
or
fsts
pop
mov
xor
jbe
lcall
outsb
push
sbbb
das
push
dec
ret
cs
push
push
int3
test
or
and
dec
inc
mov
xchg
mov
je
add
loop
jecxz
stos
mov
fldl
fbld
loopne
inc
xor
aad
lret
and
add
jb
xor
push
inc
in
mov
or
push
rorl
pop
and
dec
or
mov
pop
in
je
pop
orl
nop
push
xchg
inc
mov
addl
sbbb
cltd
mov
iret
mov
add
push
cmpb
mov
stc
loope
adc
mov
adcb
cs
lcall
pop
jp
mov
inc
cltd
or
inc
or
mov
push
mov
xor
mov
ret
hlt
mov
and
mov
int3
stc
add
mov
cmpxchg
cmp
jnp
fadd
outsb
aad
int3
push
sti
arpl
push
push
inc
dec
stc
loop
inc
fadd
add
outsl
jp
mov
rolb
mov
xchg
or
test
fstpl
lret
push
dec
inc
mov
fimull
dec
push
popf
lea
mov
sbb
adc
push
push
aas
iret
jle
jnp
mov
add
add
inc
sbb
ret
pop
lds
push
pop
xchg
mov
sti
arpl
mov
xor
inc
out
jns
call
dec
imul
jl
aaa
jnp
sbb
inc
cmc
ss
jne
jmp
dec
shrl
je
orl
inc
mov
adc
and
adc
mov
call
cmp
aas
jae
mov
and
call
jmp
lods
dec
adc
add
sbb
and
mov
mov
addb
cmpsl
cmpl
ss
add
inc
jo
push
mov
arpl
ret
test
add
adc
int3
cwtl
test
adc
rol
push
jle
aam
mov
push
push
repnz
pop
sbb
mov
pop
mov
aas
add
mov
add
cli
movsl
add
ret
insb
ret
dec
or
sbb
adc
adc
cmp
popa
jo
mov
sub
testl
shrb
out
gs
jno
jge
sbb
mov
sub
mov
sbb
pop
adc
lret
inc
or
and
dec
filds
mov
or
das
pop
addb
inc
loopne
add
roll
fimuls
rorb
sub
mov
add
nop
std
jle
sbb
inc
sbb
mov
adc
int
popf
adc
fimuls
bound
push
pop
jp
mov
mov
adc
sbb
push
sbb
pop
pop
lret
mov
adc
add
sysret
lock
dec
xor
addb
sbb
hlt
jbe
adc
test
movsb
jbe
mov
arpl
push
clc
dec
jg
and
jne
push
decl
aas
add
cmp
lea
je
mov
inc
ret
inc
xchg
jp
leave
sti
mov
ret
jne
cld
mov
or
cmp
loope
nop
adc
out
or
xorb
enter
aaa
ss
lea
cmp
dec
pusha
sbb
test
and
data16
pop
pusha
or
or
mov
rol
mov
xor
shll
repnz
ret
shll
movsl
mov
loope
mov
jl
mov
ret
loop
cmc
test
sub
cmp
es
repnz
dec
cmp
inc
in
add
jne
add
or
xchg
daa
pusha
sbb
in
sahf
mov
add
aam
mov
push
insb
aad
ret
fldt
call
push
jl
dec
shll
out
icebp
adc
push
xor
cmp
add
daa
pop
jno
stos
add
roll
mov
mov
in
cmc
js
sti
push
xchg
aad
jmp
test
cmpsl
push
pop
sbb
test
shrl
cmp
add
stc
pop
aam
inc
insl
dec
dec
push
outsl
es
push
mov
outsb
jle
sub
xor
iret
dec
fistpll
test
lret
xor
or
add
adc
sub
clc
pop
fimull
dec
out
jle
in
lds
fimuls
and
call
adc
xor
dec
incb
jl
test
xchg
rclb
bound
add
and
xor
outsl
or
jl
jae
stos
pop
ror
mov
xchg
sti
add
cmp
jo
mov
cmpsl
fsubl
test
jnp
mov
insl
dec
test
push
push
mov
cmp
push
dec
add
sarl
cmpsl
add
jne
js
inc
pop
push
add
imul
lret
clc
xchg
ljmp
stc
adc
inc
stos
fisubrs
mov
pushl
and
dec
xchg
mov
push
sub
fcompl
sbb
fwait
subb
inc
mov
jg
xchg
ja
sbb
loopne
subb
xchg
push
xor
and
push
dec
addr16
aam
ret
addb
push
mov
xor
nop
adc
xchg
jbe
arpl
lods
xor
sub
aas
inc
adc
add
sbb
mov
rorb
dec
jg
icebp
push
fs
sbb
jmp
lahf
xor
mov
jg
test
or
leave
test
cmp
jge
pop
pop
outsl
rclb
dec
cmp
sbbb
jge
cltd
fwait
int3
add
into
out
add
enter
jle
xchg
pop
in
or
or
call
push
dec
inc
or
and
test
fisttpl
enter
pop
rcrl
inc
insl
pop
and
jbe
and
mov
inc
and
inc
hlt
adc
adc
clc
les
xchg
sbb
movb
inc
add
or
sub
orb
jo
inc
xchg
shll
jno
mov
mov
dec
xor
sbb
adc
sub
mov
ret
adc
sub
xchg
and
dec
pop
jmp
ret
push
add
pusha
xchg
rclb
aaa
xchg
repz
cmc
movsb
adc
adcl
sub
pop
fisubrs
and
imul
lock
mov
clc
addr16
or
cmc
std
mov
das
adc
or
rep
sahf
jp
cmp
sbb
push
and
popl
fsubl
or
idivb
cmp
aam
hlt
and
adcb
inc
mov
jge
lods
int
xchg
adc
fcmovbe
mov
xchg
sub
scas
dec
dec
inc
or
jbe
pop
adc
dec
push
push
push
or
fs
xor
mov
je
jo
push
add
jo
inc
shlb
pop
cmp
je
std
loope
cld
sub
xor
scas
mov
shlb
jl
pop
inc
jne
push
cltd
rorb
movl
call
fidivl
fadds
and
push
cmp
loope
inc
mov
push
inc
hlt
xchg
adc
xchg
lea
add
out
test
mov
xchg
xchg
pusha
rolb
xchg
jo
inc
fs
repz
xchg
clc
xor
mov
shrl
pop
or
cltd
iret
ficompl
roll
imul
jnp
int
or
push
hlt
xchg
and
adc
inc
lds
pop
in
inc
add
in
mov
and
sub
pop
mov
fdivrp
jo
dec
xor
inc
inc
daa
mov
je
inc
stos
pusha
cmp
enter
pusha
mov
or
inc
fs
jns
xlat
je
adc
adc
cmp
lds
cmpl
pop
push
add
rorb
push
push
mov
movsb
cmp
mov
fadd
push
cmp
or
xchg
jmp
dec
movsb
sbb
adc
adc
inc
cwtl
sbbl
lods
xorb
cltd
pop
int
xchg
in
in
pop
mov
add
inc
mov
push
insl
mov
or
dec
sbb
lock
pop
dec
arpl
jo
sti
push
dec
jnp
sarb
push
add
cmpsb
xor
push
adc
mov
rcl
fadds
or
add
jecxz
mov
aam
lea
mov
les
sub
push
mov
scas
xchg
push
mov
ja
jge
mov
jmp
inc
mov
imul
test
pop
mov
daa
add
add
jmp
pop
repnz
pusha
push
dec
jl
pop
enter
push
sub
mov
test
adc
cmc
fimull
lock
sbb
jl
add
add
xor
mov
pop
inc
pop
fisubrl
sbb
insb
mov
push
std
leave
cwtl
out
lcall
das
inc
push
cmp
ja
ss
inc
test
decl
cmpsl
xchg
cs
xor
sub
cmpb
or
movb
inc
and
jae
lea
adc
mov
jnp
dec
ljmp
add
adc
xchg
push
xor
subb
lods
mov
enter
imul
mov
or
pop
mov
mov
mov
adc
test
adc
pusha
mov
mov
mov
inc
mov
sub
shlb
fsubrs
sbb
mov
subb
dec
adc
enter
push
in
adcb
ret
adcb
jmp
adc
pusha
ds
xchg
adc
or
adc
lea
add
add
cli
xchg
adc
mov
cltd
insb
imul
lcall
test
sbb
int
adc
dec
mov
pop
jmp
pop
pop
sub
cmp
testl
lret
cmp
xchg
mov
addl
aaa
adc
inc
daa
xchg
xor
sub
cmp
push
or
pop
mov
add
or
imul
shll
lahf
adc
add
push
or
jg
lcall
cs
rol
in
adc
movsl
add
adc
pop
aam
or
loop
push
dec
add
mov
dec
mov
jg
pusha
or
adc
inc
pop
push
mov
push
pop
push
shll
pusha
stos
jnp
adc
add
nop
cmp
pop
iret
sbb
cmp
sti
imul
xchg
jns
incl
pop
sbb
rcl
cmp
lret
insb
sbb
inc
imul
rclb
add
push
and
pop
inc
adc
adc
pop
add
push
test
or
icebp
dec
ljmp
adc
xor
jb
pop
stos
fcoml
dec
pop
or
or
pop
or
enter
xchg
je
out
dec
test
dec
aas
test
sbbl
mov
sub
lods
int3
and
adc
adc
inc
mov
jg
pop
xor
jns
lods
mov
filds
pop
imul
ret
pop
push
and
sub
pop
xchg
sub
add
jge
cmpl
add
roll
std
pop
adc
and
es
pop
add
inc
repz
sub
test
push
dec
ljmp
jo
add
sbb
cmpb
inc
and
fldcw
mov
cs
pop
or
jbe
push
cltd
jmp
push
dec
inc
push
push
push
inc
adc
rcrb
pop
ret
sub
call
inc
in
sub
xchg
or
and
xchg
inc
adc
repnz
inc
xor
roll
sbb
or
or
cmp
adc
push
mov
add
mov
outsl
xchg
jle
aad
mov
mov
into
ret
push
je
xchg
add
push
rcll
nop
shll
pusha
call
inc
add
cmp
pop
or
mov
jnp
sbb
pushf
cltd
cmc
adc
pop
outsl
xchg
mov
sahf
sbb
pop
push
sbb
and
movsb
xor
jnp
xchg
mov
push
mov
popf
pushl
pusha
push
cwtl
dec
fs
cmp
xor
decl
mov
idiv
jg
jl
int3
xchg
mov
mov
jg
test
inc
or
mov
bound
xchg
sbb
mov
xlat
push
mov
out
pop
add
dec
fstl
sub
cmp
lea
jge
or
adc
push
push
push
sbb
je
jnp
pop
inc
adc
and
sbb
popa
psubb
jo
int3
and
in
mov
icebp
shlb
inc
lahf
add
push
add
test
mov
mov
dec
xchg
mov
insb
xchg
xchg
mov
adc
add
jmp
jne
push
add
ss
push
adc
les
test
enter
adcb
insl
loope
cwtl
and
int
and
mov
push
add
movsb
movsb
andl
call
test
repz
sub
inc
jb
pusha
push
xchg
mov
in
lock
adc
push
push
or
lea
in
push
or
mov
add
xchg
out
movsb
enter
sub
je
mov
mov
jo
mov
enter
mov
cmp
push
mov
fistpl
push
add
push
xor
mov
cltd
cli
jmp
adc
mov
cmp
lods
jb
fld
sbb
xchg
dec
jae
cmp
inc
xchg
dec
sarb
pop
or
int3
test
pop
xor
pop
push
and
pop
jle
test
adc
sbb
cmp
jle
dec
mov
xchg
aas
mov
add
mov
push
adc
push
mov
jmp
add
mov
scas
jno
fwait
xor
sub
push
mov
push
into
sub
mov
push
dec
dec
push
xchg
icebp
mov
xor
rcll
push
pop
repnz
add
lret
cmp
add
jns
mull
inc
sbb
mov
dec
sbb
sub
out
test
mov
and
dec
mov
adc
and
aam
adc
xchg
cwtl
adc
and
dec
and
cmpsb
or
out
adc
xchg
inc
insb
push
xor
inc
es
and
nop
imul
or
insl
cltd
fs
sbb
and
mov
and
push
add
mov
daa
add
into
insb
xchg
inc
outsb
daa
add
cmpl
push
adc
push
mov
pushf
adc
test
xor
cmc
jns
mov
test
jae
dec
scas
add
scas
in
das
cs
scas
in
sub
scas
in
scas
sub
sub
in
daa
es
scas
in
and
push
mov
and
jbe
push
daa
and
and
sbb
sbb
sbb
sbb
repz
push
jo
xor
mov
ret
pop
mov
lods
sbb
mov
and
cmp
daa
push
sbb
mov
pop
add
in
jecxz
pop
lret
push
test
es
daa
sub
pushf
mov
push
rolb
xchg
pop
pushf
pushf
pushf
adc
or
repnz
ds
loopne
xchg
xchg
xchg
xchg
lret
push
movsb
push
push
or
leave
leave
leave
leave
or
fisttpl
cmp
or
pop
sub
mov
and
in
push
mov
imul
leave
leave
idivl
add
ret
stos
mov
xchg
cmp
stos
je
inc
std
add
sub
push
sub
mov
inc
fs
mov
or
ljmp
lods
lahf
push
js
movl
nop
xor
mov
add
mov
mov
cmp
xor
sbb
mov
test
cmp
and
jp
and
ds
sub
addl
and
cli
lea
cmp
lea
mov
and
push
add
add
ret
and
insb
xor
push
addb
push
or
pop
sbb
mov
jnp
das
xor
push
out
sub
je
push
addl
popa
retw
lea
or
cmp
and
fbld
bnd
push
sbb
xor
adc
movsl
lods
mov
mov
sbb
adc
inc
pop
or
js
xchg
push
es
je
add
fs
sti
push
aad
push
or
cld
inc
push
fsubs
cmp
jle
push
test
push
adc
sbb
xchg
mov
add
cwtl
jp
and
inc
xchg
pop
jmp
add
shlb
xor
mov
daa
pusha
js
push
inc
les
leave
push
lock
sti
push
add
cmovnp
xchg
iret
inc
pop
sbbl
iret
jmp
int
pminsw
mov
or
add
lahf
adc
imul
cwtl
int3
cli
cs
imul
rclb
dec
sub
movsb
xor
rolb
push
rcl
pusha
and
fisubl
and
inc
imul
push
pusha
rcrl
cmp
adc
and
pop
cmp
rcrl
mov
fdivrp
cmpsl
cmp
dec
mov
add
or
xor
jo
testb
mov
mov
add
mov
jl
mov
mov
mov
loop
mov
loopne
push
push
clc
or
sub
test
fisubrl
rcrb
pop
faddl
ret
mov
rorl
call
xor
add
inc
add
inc
xor
jo
cmp
adc
push
in
push
xor
lds
mov
and
div
test
adc
pop
xor
mov
in
fldl
push
mov
stos
and
ret
inc
inc
cmpl
pop
rorl
pop
or
jo
mov
jae
xor
lock
in
xchg
loopne
push
push
jge
mov
cltd
rolb
cmp
xchg
es
cmp
xlat
sub
jl
mov
jmp
pop
cmp
or
pusha
nop
mov
jmp
lods
mov
pop
push
xchg
pop
cmp
jnp
jl
push
inc
jg
and
enter
push
lds
mov
mov
jne
xor
leave
dec
outsb
sbb
or
or
cmp
jl
cli
pop
jmp
dec
pop
ret
mov
popa
imul
clc
jmp
sub
pop
mov
mov
sub
cli
cmp
clc
subb
insb
mov
push
sbb
jmp
test
mov
nop
inc
clc
pop
push
shlb
mov
fsubrs
loop
jp
out
dec
out
cmp
cmp
jb
add
lea
sbb
push
je
adc
and
rol
push
shlb
xchg
mov
leave
cs
pop
mov
push
add
push
pop
inc
pop
lds
movsb
std
mov
cmp
jg
pop
and
add
push
fsubrs
and
xor
shrb
fldcw
addb
or
xor
add
jo
fmull
insb
mov
push
pop
push
and
in
add
or
rorl
pushf
adc
mov
cltd
jp
sahf
push
outsl
pop
mov
daa
mov
sbb
dec
push
xor
xor
push
test
cmp
xchg
xchg
adc
sub
js
push
add
fsts
lret
cmovge
aam
cmp
lret
addb
xor
out
lock
cmp
fidivrl
cmp
mov
cmp
cs
outsl
jmp
jne
gs
testl
mov
inc
mov
pop
enter
je
cmpw
mov
add
push
adc
loopne
daa
dec
push
xor
nop
es
sub
fwait
cmp
int3
add
push
cmp
pop
je
ret
lods
sbb
jecxz
inc
jge
mov
out
cmp
fnstsw
and
cmp
clc
loope
add
fldz
jno
cli
fwait
lar
arpl
adc
rol
pusha
add
inc
and
push
and
mov
adc
imul
mov
inc
je
push
jns
add
testb
xor
ret
mov
ret
aas
decb
mov
pop
and
cmp
adc
adc
mov
into
std
cmpb
push
add
fbstp
outsb
dec
leave
aad
xor
add
lea
and
fisubrs
push
or
xor
mov
mov
adc
cmp
push
in
push
sbb
adc
addr16
imul
adc
fildl
push
adc
cmc
pop
add
pop
insb
jl
cmp
fidivrl
mov
adc
xchg
test
mov
push
adc
xorb
jle
sub
jge
stc
add
mov
ds
test
cmp
or
sbbl
addb
sub
adc
xor
ret
inc
sub
sbb
or
inc
jmp
pop
push
xor
push
dec
shll
xor
xor
shll
xor
cmp
andb
loope
or
xchg
shll
cmp
dec
je
inc
insw
xor
push
jbe
pushfw
push
sbb
dec
dec
and
int
pop
pop
jg
dec
and
stc
jle
add
int3
dec
or
add
inc
jnp
dec
js
movl
adc
rcr
ja
sub
or
or
xor
cmp
pop
dec
out
dec
aas
add
daa
jmp
cs
sub
or
push
lds
xchg
cmp
filds
push
sub
push
dec
pop
je
add
dec
jnp
mov
shr
dec
insb
mov
push
pop
and
inc
adc
dec
inc
ds
mov
add
sub
add
nop
mov
shll
lods
inc
push
inc
enter
inc
add
pop
cmp
testl
push
cmpsl
jb
jmp
pop
or
lods
cmp
rorb
push
pop
ret
std
mov
lock
sahf
cmp
cmp
jne
push
add
aad
call
clc
test
outsb
hlt
xor
xor
outsb
filds
dec
adc
pop
mov
push
ss
pushf
add
cmp
test
jno
lahf
add
sbb
push
or
mov
fistpll
stos
jp
testl
stos
insl
loope
add
mov
pop
pusha
push
adc
psubusw
mov
push
push
outsb
mov
xor
ss
fdecstp
inc
adc
insb
push
insl
aas
lahf
cmp
movsb
jb
sub
mov
aaa
and
adc
fs
or
cli
test
test
dec
lea
pop
jns
xchg
sub
or
add
dec
dec
cs
int
lea
xorb
adc
fstps
xor
arpl
jle
fisubrs
aad
mov
mov
mov
aad
mov
imul
imul
cmp
xorb
sub
inc
sub
or
jle
aad
mov
push
cs
sub
addb
mov
mov
sbb
ret
xor
lock
pop
jle
push
push
in
andb
inc
cmp
ficompl
push
add
adc
ret
and
push
je
outsl
jno
leave
dec
popa
or
nop
lret
mov
pop
adc
push
and
out
aas
xor
ljmp
xor
and
dec
aas
and
popa
lcall
out
sub
and
inc
and
fmull
sbb
adc
jmp
sbb
data16
lret
fldl
lods
jmp
or
call
mov
jne
out
lea
sbb
add
cwtl
and
cmc
jg
fdivrs
or
lret
sub
jl
cmc
push
push
xchg
push
int3
jne
push
stc
mov
pop
cmp
push
push
jl
imul
inc
push
mov
ror
je
call
int
dec
jno
popa
sbb
jle
mov
or
insb
xlat
fs
sbb
scas
nop
cmc
cld
xchg
stos
fcompl
pushl
cmp
or
das
or
out
mov
cli
je
test
mov
push
jecxz
pop
call
inc
lock
adc
jl
sub
sbb
inc
inc
cmp
daa
jl
xorl
adc
pop
aam
dec
cmp
mov
flds
mov
fsubr
sti
inc
sbb
sbb
mov
enter
adc
mov
jle
sub
mov
cmpsb
in
xchg
std
sub
popl
fsubl
xor
mov
push
rcrl
and
or
xchg
andl
in
adc
nop
jl
cmp
pop
dec
pop
jl
loope
pop
xor
cmp
cmp
or
mov
add
in
sbb
sbbl
xchg
dec
push
or
bound
mov
aam
jg
adc
or
cmovno
mov
xchg
jle
inc
sbb
mov
loope
pop
mov
fstps
clc
dec
xor
mov
jo
and
adc
xor
rcrl
push
pop
test
imul
ficoml
js
dec
loop
pop
push
mov
and
int
movb
testl
adc
je
aaa
clc
sub
pop
pop
and
xor
push
mov
pop
cld
xchg
jle
mov
mov
add
testb
adc
inc
xorl
adc
sbb
mov
xor
push
repnz
lods
scas
pop
add
pop
adc
movsl
scas
push
mov
push
sarb
mov
jg
xchg
xor
cmp
push
push
daa
dec
jecxz
mov
addr16
sub
mov
mov
and
inc
sub
cmp
mov
and
or
repnz
dec
mov
xchg
pop
jae
pop
jb
push
jb
sub
hlt
xchg
xor
xchg
imul
pop
cmp
add
sbb
leave
dec
or
sbb
and
and
cmp
or
aas
adc
shrl
pop
cltd
fiaddl
inc
or
leave
cmp
add
sbb
jl
sahf
or
inc
jl
sbb
sbb
adc
push
cmp
adc
nop
addr16
out
inc
and
movsb
inc
push
cltd
sbb
add
and
bndstx
push
xchg
push
mov
fists
or
mov
cmp
xorb
sbb
mov
push
lock
daa
cmpsl
add
sahf
orb
add
ja
mov
sbb
mov
inc
shrb
cmp
or
cltd
js
hlt
push
dec
nop
inc
imul
stos
mov
dec
sti
adc
loope
pop
adcl
mov
shll
mov
add
dec
push
aad
adc
sbb
test
fists
ljmp
push
jp
js
es
jae
pushf
inc
idiv
data16
lea
pop
pushf
lea
incl
addr16
fidivs
or
sarl
pop
test
sub
cmpl
and
push
rcl
cmp
repz
add
jmp
jo
xchg
cmp
test
sbb
imul
insb
sub
inc
cmp
insb
adc
test
and
inc
imul
out
pop
dec
ds
cli
cwtl
cmc
mov
cmp
and
pop
and
fmull
outsb
into
push
pop
xchg
or
fbld
mov
loope
mov
pop
add
out
push
fsubs
add
or
push
push
push
sbb
jle
sbb
faddp
cmp
adc
mov
dec
jns
mov
or
pop
xor
jae
in
push
inc
pop
aam
jmp
cmp
mov
jl
mov
xlat
and
jge
add
jge
push
mov
int3
fidivs
in
scas
std
ljmp
enter
xor
or
or
repz
push
in
adc
adcb
adc
jb
inc
pop
mov
inc
add
aas
adc
shlb
or
movsl
addr16
lods
je
out
dec
or
xor
js
adc
sub
cltd
shlb
push
unpckhps
lahf
sbb
lahf
nop
cmp
dec
pop
jmp
rclb
sbb
mov
pop
push
sbb
push
mov
dec
leave
mov
dec
add
xor
and
cmp
mov
ss
fiadds
ret
je
inc
shlb
jo
call
dec
mov
dec
or
xchg
out
mov
sub
dec
test
inc
mov
test
dec
sarb
or
call
or
and
fsubrp
loopne
dec
mov
push
ljmp
add
xchg
pushf
rolb
mov
aas
xor
push
js
dec
mov
xor
push
pop
jnp
add
push
inc
inc
push
mov
xor
loope
sub
pop
push
fsubrs
push
dec
rorl
test
xchg
dec
jecxz
js
inc
jnp
add
xor
dec
push
push
or
shl
je
and
cmpsb
mov
sbb
sub
lds
outsl
jno
pop
mov
adc
sbb
xchg
xchg
sub
push
push
in
cs
and
dec
mov
imul
cmp
shll
repz
jnp
xorb
bound
or
cmp
inc
and
or
xor
cmp
jo
aas
pusha
mov
cwtl
pop
pop
out
jge
push
jne
enter
fsubrs
out
popa
jb
dec
dec
lea
push
ret
pop
push
insl
insb
shll
mov
sbb
shll
test
mov
mov
out
inc
inc
pushf
xor
xchg
mov
test
xchg
push
jae
dec
cmp
mov
jecxz
movb
in
xchg
add
inc
adc
adc
sarb
out
sub
xor
js
divl
sub
mov
dec
aam
jp
cmp
xchg
das
inc
mov
sub
int3
inc
out
aam
or
call
inc
cmp
push
cmp
or
push
and
int3
in
out
sub
addb
sbb
stc
cs
or
rorb
in
add
add
insb
fs
push
mov
sbb
cs
inc
sbbb
in
xor
dec
push
stc
pop
movsl
and
xor
cmpsb
and
les
movsl
bts
lods
xchg
sbb
sub
jno
popa
push
insb
add
dec
add
xor
mov
and
cmc
outsb
sub
adc
lock
pop
nop
sti
adc
cmpl
rolb
out
and
mov
testl
jle
mov
sbb
mov
push
adc
lods
clc
cmp
clc
in
dec
inc
in
mov
jge
inc
adc
clc
mov
add
mov
mov
mov
and
or
cwtl
fs
xor
add
dec
mov
dec
pushf
cmpsb
imul
insb
loope
and
push
sbb
gs
mov
push
inc
sub
jp
in
inc
push
or
iret
loope
fldenv
pop
cmpsb
jl
test
or
fs
cmp
pop
xor
cwtl
adcl
cmp
and
or
clc
jge
push
xor
add
push
inc
cltd
mov
out
jne
jno
xabort
jge
test
clc
mov
xchg
jle
push
rol
jo
fnsave
ret
ret
mov
inc
clc
cmpb
push
loopne
inc
mov
sbb
fmul
xchg
sbb
xchg
mov
shrl
inc
shl
adcb
sub
loopne
in
fildll
push
adc
jo
and
mov
jo
es
sbb
sub
jle
jg
and
or
fdivs
insl
push
or
jo
adc
js
pop
push
and
pop
test
mov
jmp
push
inc
inc
xchg
inc
mov
test
repz
cmpsl
pop
fmulp
inc
bound
push
aaa
popa
cmpsl
data16
iret
ret
mov
xor
sbb
sub
sar
andb
adc
arpl
cmp
aaa
nop
xchg
jbe
fwait
xchg
push
loop
mov
arpl
xlat
push
mov
loope
test
or
push
cmp
je
or
jnp
lds
lahf
xor
dec
js
add
xor
rcrl
addb
or
xchg
push
xorl
jns
xchg
sahf
push
lea
adc
push
push
push
sbb
push
pop
sti
mov
and
push
push
inc
filds
mov
or
stos
mov
inc
je
shrb
sarb
sub
or
rcrb
fnstenv
and
push
mov
cmp
push
mull
push
fidivl
daa
loop
pop
bound
fcoms
mov
daa
rolb
mov
and
fimull
loop
pop
cmp
subl
orl
or
aad
in
push
or
dec
jno
cmp
push
xchg
or
pop
sbb
mov
mov
jo
aas
jle
fidivl
aam
push
mov
mov
test
add
xor
adc
dec
shll
nop
cmpsb
js
pop
sbb
enter
inc
push
dec
ret
hlt
push
mov
add
push
push
add
or
add
and
fdivrs
xchg
sahf
cvtpi2ps
fdivl
rcrl
push
add
mov
xchg
add
or
mov
dec
add
cmp
js
lds
push
push
int
mov
movb
mov
pop
ret
pop
adc
xchg
jne
hlt
mov
sub
sbb
cmp
jl
cmp
mov
or
sub
add
pop
jns
aaa
or
xchg
mov
add
sarb
leave
xor
xchg
test
mov
push
jmp
mov
pop
pop
add
fs
aas
push
out
inc
and
sub
nop
dec
cmp
imul
imul
dec
bound
add
jb
jg
xchg
jne
orb
jl
sahf
das
test
push
imul
push
aad
fs
mov
int3
add
mov
in
testl
pop
subb
mov
stc
cmp
inc
sbb
gs
das
jnp
and
call
mov
or
push
enter
push
insb
jecxz
jbe
or
mov
fucomi
pop
mov
inc
ret
fildll
or
cld
shr
jmp
inc
rcl
popf
in
or
data16
std
mov
push
pusha
cmp
jge
cs
nop
ficoml
push
xchg
pusha
jmp
adc
dec
jl
lea
fcoml
lcall
ret
pop
inc
jnp
mov
scas
popa
mov
repnz
mov
pusha
fwait
movsb
pop
js
mov
xchg
jge
adcl
add
push
push
aaa
movsb
lds
pop
ror
dec
push
test
xchg
push
repnz
hlt
lds
fisttpl
mov
es
int
ds
or
in
clc
mov
ja
sub
fdivrs
inc
push
lea
outsl
cmp
mov
leave
cli
ds
decb
cmp
ljmp
jo
cmp
imul
loop
rcrl
fldenv
dec
mov
rclb
jae
nop
insb
test
mov
inc
hlt
ret
mov
and
add
fsts
adc
push
add
and
jmp
loop
ljmp
add
lahf
pop
and
jmp
xchg
int
movsl
leave
inc
push
ret
xor
call
pop
push
mov
push
nop
loope
pushf
mov
movsl
push
jp
test
fs
pop
daa
adc
adc
sbb
dec
add
inc
iret
add
insb
pusha
orl
inc
adc
rolb
xchg
push
mov
add
push
mov
jne
rolb
cltd
jne
arpl
pop
pop
ret
loopne
ds
pop
push
adc
push
xchg
je
lahf
cmp
push
cltd
clc
cltd
mov
stos
inc
es
jns
jne
sub
les
push
jnp
pop
mov
sbb
subl
adc
sti
push
inc
out
inc
sarb
mov
push
icebp
sub
pop
push
xor
mov
pop
imul
push
ja
fidivrs
movsb
xchg
js
or
shlb
in
ret
es
hlt
dec
std
test
and
es
lods
cmc
adcl
mul
pop
dec
repnz
adc
cltd
fs
xor
fs
dec
adc
xor
xor
pop
je
lea
sub
fs
fistpl
stc
mov
cltd
fs
sbb
xchg
dec
inc
push
inc
inc
sbb
sbb
jbe
mov
inc
addr16
inc
je
xchg
add
sbb
mov
cs
lret
xor
cltd
in
jb
jae
add
sbb
js
xchg
dec
les
jmp
addl
cld
and
pop
mov
rorb
add
mov
aam
sti
je
push
add
jmp
sub
rcl
cmp
mov
or
std
inc
mov
xor
mov
inc
dec
sbb
push
adc
mov
xor
push
call
loopne
mov
dec
pop
inc
repnz
jg
loopew
add
and
mov
pop
outsb
dec
sub
or
pop
push
popa
dec
cltd
sub
mov
mov
sub
add
sub
and
sub
mov
xlat
mov
dec
push
cmp
push
frstor
rclb
jecxz
lea
sub
xchg
imul
pop
imul
out
es
jecxz
pop
or
mov
sbb
jl
mov
lods
pusha
xchg
js
and
adc
mov
xor
movsb
sbb
push
js
popa
add
pop
push
out
add
iret
dec
call
sbb
adc
les
inc
mov
push
sarb
repz
xor
call
lret
stos
adc
sub
sbb
inc
push
cmp
sub
mov
repnz
lcall
mov
ljmp
add
scas
push
sub
hlt
xor
sbb
lods
mov
jmp
sbb
push
xchg
mov
add
fwait
or
and
pop
or
and
mov
ret
adc
cmp
mov
loop
dec
stos
push
and
push
mov
xchg
pop
sub
inc
clc
dec
xor
ret
les
xorl
push
sub
dec
pop
and
rcll
dec
add
cmpl
push
dec
je
and
adc
call
push
sub
jbe
mov
and
lea
and
arpl
fdivs
or
or
xor
xor
fs
xchg
ret
or
mov
ret
int
push
jmp
and
dec
xchg
inc
cmpsl
push
call
shrl
or
mov
lds
mov
mov
daa
or
ffreep
imul
xchg
fsubrl
je
dec
pop
pop
xor
push
mov
cmp
adc
mov
popa
aad
or
lret
pushw
mov
js
xchg
or
push
pop
or
insb
add
adc
fxch
in
insl
das
sbb
sub
pop
bound
cmp
xsha256
cmpsb
xlat
movsl
cmpsb
jmp
pop
cmp
xchg
dec
imul
cmp
cmp
pop
and
mov
pop
or
adc
cmp
adc
xchg
leave
ret
es
jg
cli
adc
jmp
dec
push
inc
lcall
add
jge
sub
sti
add
mov
pop
xor
xchg
mov
mov
xlat
and
pop
or
or
jo
rcr
dec
adc
rorl
imul
sbb
sub
pop
and
jne
cmp
outsb
push
xor
push
ret
sbb
sbb
test
scas
add
xchg
aas
jecxz
faddl
lea
mov
sub
mov
ret
xchg
shrb
inc
add
and
and
clc
mov
je
mov
mov
bound
fadds
subb
cwtl
adcl
outsl
insb
and
mov
push
call
mov
loopne
shlb
test
dec
push
adc
add
and
test
sbb
mov
xor
mov
push
pop
nop
jmp
test
lea
call
shll
leave
insl
mov
xor
dec
aad
loopne
lret
pusha
cltd
in
fiaddl
dec
enter
push
push
aam
add
mov
sbb
testl
xchg
pop
cmpsb
inc
add
cmp
add
lods
or
mov
insb
sahf
nop
or
sbb
inc
mov
fnstenv
cmp
mov
or
roll
je
sbb
inc
mov
adc
and
mov
dec
dec
push
movl
movsb
add
pusha
push
sbb
lcall
and
dec
das
dec
pop
arpl
xlat
jo
jl
mov
add
sbb
mov
into
pop
sbb
add
inc
imul
sub
popf
add
inc
inc
pop
adc
popa
add
jl
inc
bound
pusha
push
pushf
out
sub
les
addl
push
test
mov
jg
cmpsb
test
jmp
push
add
pop
xorl
push
push
dec
jmp
xor
sti
jp
loope
movsb
xor
push
mov
mov
cs
test
rolb
cmp
in
sbb
test
mov
fucomp
push
bswap
dec
int3
out
enter
enter
cmp
int
inc
or
cli
mov
cmpb
adc
add
pop
push
movsl
pop
xchg
rdpmc
popf
sahf
cwtl
pop
pop
mov
scas
add
mov
je
lods
adc
test
lea
dec
fwait
or
inc
push
xorl
push
dec
inc
loop
shrb
je
popa
or
push
lods
or
enter
pop
nop
lahf
lock
xchg
or
imul
push
mov
adc
mov
dec
out
jo
lods
out
imul
push
loop
jle
inc
cld
cltd
add
fimuls
dec
cmp
cmp
roll
xchg
or
pop
rcl
jl
inc
sbb
lcall
je
pop
stos
push
inc
je
jae
pop
mov
mov
mov
xchg
addl
xor
add
mov
pop
lock
lcall
ret
out
push
jecxz
sub
sarb
dec
clc
push
mov
sub
cmp
dec
inc
mov
aaa
lret
aaa
movsl
adc
imull
clc
inc
pop
ret
std
cmp
or
xor
xchg
cmp
cmp
adc
cmp
jmp
ret
sbb
add
and
add
cwtl
insb
xchg
push
ljmp
dec
mov
sub
push
cmp
xor
jecxz
out
or
adc
sub
mov
ret
hlt
jns
sbb
mov
fldpi
jge
pop
sub
adc
fldcw
adc
and
aad
xor
je
push
mov
jecxz
sbb
movsl
loope
xchg
lret
lret
fimull
cmp
cmpsl
dec
loope
and
outsb
cmp
push
sbb
mov
xchg
or
cmp
call
push
outsb
cmp
aad
clc
test
cltd
repnz
ljmp
es
add
adc
mov
jl
jmp
jle
push
and
dec
xor
mov
adc
fisubs
add
dec
mov
sub
orb
and
fwait
inc
test
scas
mov
add
adc
inc
sub
rorb
push
xchg
inc
xchg
inc
in
ja
cmp
andb
cmp
andb
pop
inc
loope
pop
jg
xchg
mov
fcmovnu
cmp
push
cmp
pop
es
fcoms
test
aas
sbb
push
mov
loop
add
int
jno
lea
adc
sbb
inc
adc
and
add
dec
xchg
add
adc
dec
pop
in
fadds
mov
inc
mov
ficompl
adc
adc
iret
movsl
adc
inc
inc
inc
add
sbb
jns
sbb
cs
stos
pop
mov
dec
push
and
and
test
dec
xor
leave
sbb
cli
dec
repnz
mov
and
and
inc
btc
test
mov
pop
adc
lcall
fxch
ret
push
mov
adc
js
mov
jmp
in
dec
mov
call
enter
les
xchg
stos
ret
push
insb
sbb
int
negb
dec
add
test
loopne
lock
adc
sbb
push
test
push
push
out
or
pop
xor
out
scas
fidivrs
cmp
jmp
or
shrl
sub
dec
push
and
add
aas
clc
sbb
das
mov
and
pop
sub
mov
push
xlat
mov
sub
push
lock
sub
xorl
stos
or
repz
add
xchg
xor
jo
jmp
dec
pop
dec
cmp
rcll
cld
dec
les
add
fisubrs
je
mov
adc
popa
xor
popa
and
jl
lods
and
jge
xchg
and
pusha
xchg
lods
icebp
xchg
sbb
add
pop
mov
mov
je
cmc
sub
and
adc
or
pop
xorb
sbb
inc
or
cmp
add
xchg
and
sbb
div
cwtl
test
sbb
aaa
lea
nop
rclb
loopne
push
cmovo
push
in
push
mov
les
in
gs
dec
dec
jmp
sbb
push
es
sub
or
popa
or
roll
jge
cmpl
repnz
and
rcll
je
je
adc
icebp
sub
add
add
movsl
mov
and
lds
movsb
fistpll
jmp
mov
mov
fcoml
inc
ret
push
sbb
sti
movsb
fstp
arpl
pop
dec
mov
xchg
push
test
or
pop
lock
or
dec
sub
cmc
loope
fadds
add
cmpsl
and
fcoml
int
ds
test
inc
adc
cmp
jmp
lock
xlat
frstor
jl
lods
sarl
xchg
jo
out
ficoms
mov
pop
add
add
push
or
sarl
decl
jne
mov
mov
add
mov
push
sbb
adc
test
or
add
xchg
and
imul
pop
adc
insl
jno
add
push
sub
dec
adc
xlat
mov
insb
inc
sub
andb
aaa
mov
sbb
inc
inc
mov
cmovg
js
rorl
ds
jb
push
fsubrl
lret
lret
mov
xlat
sahf
push
into
push
lds
jl
fcoms
cmp
lret
cwtl
pushf
cmp
adc
insb
adcl
fimull
add
jb
sbb
cmp
jae
fwait
push
les
js
push
dec
or
sub
adc
pushl
and
cwtl
mov
fsubl
jae
call
roll
js
or
mov
mov
jae
cli
loope
pop
pop
testb
mov
movsl
and
jmp
xchg
lock
aam
cmp
movsl
or
push
cmp
repz
es
mov
mov
sbb
ror
rcrb
insb
jb
or
pop
mov
movsl
mov
xchg
mov
push
or
push
adc
mov
stos
sbb
or
and
test
sub
sub
xlat
les
jmp
or
lcall
adc
xor
sub
and
pusha
sarl
jo
mov
xor
popa
xor
les
sarl
dec
sub
or
xor
mov
daa
and
fidivl
push
hlt
xchg
aad
jo
sub
movsl
ucomiss
pop
fnstsw
mov
pop
fcomp
xor
ds
push
fcmovb
pop
test
jecxz
xor
add
jl
push
xlat
jns
add
mov
call
jl
test
aad
push
lods
lds
add
mov
fdivs
inc
mov
or
jb
sbb
aaa
mov
or
push
and
push
push
add
pop
sub
test
lds
mov
inc
cmp
fs
int
pop
adc
pop
orb
adc
mov
mov
aas
and
test
mov
mov
inc
test
add
add
sbb
lock
movsb
sbb
sbb
push
sub
daa
sbb
fmul
add
bound
stos
bound
loopne
push
mov
fildl
jo
fdivr
jo
sbb
mov
add
mov
stos
sub
shll
insb
out
xchg
mov
inc
cs
jne
loopne
mov
mov
sbb
add
mov
push
subl
xchg
pop
jl
ficompl
enter
add
test
xor
push
bound
xlat
int3
outsl
imul
shlb
or
xor
push
outsb
and
or
inc
dec
mov
addl
dec
iret
push
or
rcl
pop
rol
mov
inc
faddl
cmpsb
or
pop
xchg
mulb
arpl
test
popa
pop
gs
lock
and
and
sbb
adc
dec
pop
loopne
dec
dec
sbb
into
or
sub
arpl
ret
aad
adc
mov
jae
int3
aas
idivl
and
loop
mov
cld
pop
cld
push
cmc
and
test
xchg
cs
dec
rcll
ret
adc
or
nop
inc
cmp
stc
push
in
push
push
mov
sbb
and
xor
faddl
test
test
sbb
jo
or
adc
rorb
xchg
mov
inc
popf
adcb
jbe
ss
jnp
loope
inc
in
out
inc
push
push
xor
adc
bound
or
out
dec
adc
jg
mov
or
ljmp
sbb
push
xchg
sahf
push
dec
ret
sbb
inc
popf
outsb
cwtl
inc
xor
imul
or
pop
jp
inc
add
inc
fcompl
sbb
in
call
mov
aam
pop
sbb
dec
out
rolb
jp
push
jo
fldl
xchg
les
or
sbb
mov
add
add
loope
je
and
and
dec
push
sbb
mov
popa
or
dec
in
push
push
or
dec
mov
fcomps
inc
mov
outsl
jns
cs
and
pop
and
jmp
push
and
adc
in
xor
or
mov
mov
jb
dec
jmp
xchg
mov
rdtsc
cs
push
jge
cmpsl
stos
or
dec
xchg
push
add
cmp
sbb
push
jle
dec
cld
inc
add
adc
out
add
test
inc
sub
and
and
test
adc
pop
mov
mov
out
xchg
mov
pop
aam
push
arpl
adc
insl
aas
add
pop
or
sub
cmp
adc
jl
std
add
push
or
pop
push
adc
out
mov
lock
jne
xor
cmc
test
cmpl
ja
adc
cltd
pop
inc
lods
add
imul
call
add
inc
sub
pusha
sub
sub
popf
adc
add
jae
push
loope
mov
cmp
mov
es
dec
and
addr16
icebp
and
shrl
jl
cmp
add
pushf
jge
dec
mov
pop
xchg
push
les
adc
addb
lock
shll
in
loopne
cmp
push
add
leave
xor
fisttpll
mov
pop
fbstp
or
mov
pop
fsubr
lea
sbb
add
movsb
roll
sub
mov
shll
leave
addb
add
sti
and
inc
jb
dec
xor
and
xor
std
and
daa
fwait
es
sub
je
and
fwait
fwait
inc
and
je
inc
jne
mov
lods
adc
jb
and
sbb
pusha
mov
add
scas
dec
pop
ret
pop
inc
jnp
rcl
sbb
jl
fsubl
or
orb
and
cmp
inc
les
ret
dec
sub
dec
dec
xchg
and
imul
sub
sbb
lret
cld
or
add
sahf
aaa
push
or
push
rolb
xchg
lods
xor
movups
and
jle
mov
cld
pop
inc
sub
in
mov
aaa
loop
adc
jne
and
sub
dec
ret
das
adc
add
mov
mov
xor
add
xor
pop
and
popf
mov
fcompl
push
nop
andl
cwtl
shl
and
clc
das
and
jns
mov
jmp
inc
cmp
xchg
push
jmp
das
je
outsl
test
mov
push
shl
jbe
sbb
je
and
or
popa
inc
dec
fcoms
or
mov
loopne
inc
dec
scas
jne
decb
or
cmp
dec
dec
adc
scas
push
push
cmp
fnstsw
push
push
inc
xchg
mov
pop
aad
test
hlt
or
sti
fiadds
jp
push
mov
push
and
push
mov
dec
pusha
pop
add
pop
or
or
aam
or
or
or
sub
mov
sbbb
inc
xchg
inc
adc
sub
push
jl
hlt
lods
cmp
fsubs
xchg
lret
fnstsw
mov
adc
inc
in
faddp
je
pop
pop
inc
test
adc
mov
cmpsb
sbb
dec
sbb
callw
and
sbb
and
dec
cmp
jle
cs
add
pop
mov
cmpsl
adc
cmp
pop
jae
xor
adc
push
mov
or
sbb
fsubl
jmp
aam
or
aam
nop
shrb
lea
popa
mov
cmp
xchg
mov
jge
cmp
mov
jge
cltd
dec
loop
out
sub
add
pop
cmp
in
add
xorl
dec
xchg
jo
les
adc
test
mov
je
mov
cltd
mov
testl
push
push
lds
or
mov
dec
pusha
add
mov
and
scas
dec
lret
popa
mov
movsl
cmp
pop
mov
jg
push
cmpsl
add
push
sub
sbb
pop
notb
and
sbb
out
adc
shrb
std
jecxz
sub
arpl
adc
mov
loopne
sahf
jge
mov
mov
call
add
dec
push
in
pop
jecxz
out
cmp
popa
repz
pusha
pop
pop
xchg
and
push
dec
test
dec
add
push
push
test
and
or
add
push
push
xorb
lock
testb
and
sarb
mov
icebp
add
xorb
mov
or
roll
pop
gs
mov
sbb
jo
mov
xor
xor
rcrb
nop
out
xchg
mov
sub
inc
add
push
dec
xchg
add
imul
pop
loopne
dec
pop
imul
add
dec
cmp
jne
gs
or
aas
xor
pop
xor
push
cli
fimull
mov
divb
push
sub
icebp
jne
lods
xlat
jge
insb
lea
sub
fistl
dec
jmp
lea
sbb
or
adc
rorb
jge
ret
or
xchg
pop
rcr
ret
jge
add
inc
jo
pop
call
lea
sbb
dec
push
jg
push
cs
jbe
xor
push
test
shll
pop
aaa
push
sti
sahf
clc
out
ficomps
jge
neg
pop
add
jp
inc
dec
or
insb
scas
xor
lods
inc
dec
mov
jmp
xchg
jae
insb
insb
test
adc
sarl
in
inc
or
xorb
xor
add
ret
and
dec
rcrb
xor
aad
loopne
add
enter
push
sub
push
xchg
push
arpl
adc
xor
cmp
push
sbb
pop
pop
data16
sbb
aam
mov
hlt
shlb
cmp
or
xchg
jno
inc
mov
cmc
into
add
sbb
ss
jge
mov
jge
call
das
repnz
andb
sbb
scas
roll
clc
xchg
sub
xchg
mov
jo
mov
adc
adc
mov
adc
add
out
jl
nop
lcall
inc
mov
adcb
test
imul
dec
ficomps
cltd
cmp
xchg
in
sbb
or
fists
aas
add
dec
pusha
test
add
or
movsl
or
mov
les
sahf
fs
fwait
aaa
mov
pop
jne
mov
roll
sbb
fwait
loope
in
and
fnsave
addr16
xchg
push
cmp
ret
pop
push
and
jb
movb
das
loop
mov
mov
sar
in
mov
push
jge
push
mov
xchg
test
jo
add
mov
xchg
xchg
jle
mov
and
xor
shll
push
rclb
aad
pop
fwait
les
shll
mov
cmp
adc
and
or
ljmp
popf
popf
xchg
jecxz
mov
je
incb
je
jmp
mov
aas
test
jb
inc
jne
cmp
leavew
and
lods
sbb
pop
sbb
xchg
dec
test
sub
cmc
and
xor
adc
mov
mov
mov
cmp
inc
orb
outsb
popa
cmp
xchg
lahf
mov
mov
xchg
cs
dec
and
sub
or
sub
dec
add
mov
cs
jg
cld
out
fcoms
lods
adc
xchg
arpl
mov
or
mov
rcl
imul
and
or
enter
mov
sbb
mov
pop
es
mov
pop
pop
test
mov
jle
insl
stc
jne
insb
dec
sbb
lsl
cmp
nop
pusha
addb
jp
popl
pop
out
addb
pop
inc
or
cmp
int3
inc
mov
aaa
xchg
and
sbb
adc
or
push
adc
push
mov
or
mov
mov
add
add
jl
or
cwtl
pop
movsb
xor
pushf
inc
or
push
test
mov
mov
iret
xchg
xchg
xor
in
or
add
and
aas
test
push
adc
jmp
mov
push
dec
imul
pop
sub
sbb
pop
popa
imul
inc
jl
test
push
dec
add
aad
out
mov
neg
push
push
cltd
mov
mov
sub
pop
jmp
jp
int3
rolb
orb
enter
push
ret
ret
mov
imul
or
dec
xor
pop
pop
dec
je
push
rorl
sbb
pop
and
or
scas
loopne
and
add
popa
and
push
sbb
push
enter
cmpsl
xor
addl
or
xchg
add
adc
push
cmp
push
je
and
loop
jne
ret
jmp
sbb
push
in
xor
mov
and
daa
pop
mov
shrb
push
aad
popa
jae
or
ret
rcll
dec
lea
pushl
dec
loope
push
or
add
pop
fxch
xorb
aam
inc
xchg
xchg
fists
lods
fldl
mov
push
add
pop
xchg
jle
pop
push
lahf
sbb
lret
adc
inc
dec
fsin
cwtl
dec
sbb
js
gs
push
add
mov
push
push
and
and
pop
aaa
adc
jge
push
sbb
pop
int
mov
mov
fucomip
aaa
add
add
and
cmp
fwait
xlat
or
or
mov
push
fs
pop
sub
xlat
nop
add
cmp
lret
cmovp
rclb
mov
cli
fsts
mov
ret
or
dec
out
scas
je
cmpsb
push
and
test
lods
push
pop
dec
andb
mov
or
push
loopne
jmp
cwtl
pop
push
adc
lods
adc
inc
or
cmc
jg
test
mov
pushf
scas
bndldx
dec
xlat
lods
sbb
cmp
mov
jmp
and
or
call
sub
inc
pop
xchg
test
lods
lahf
lea
inc
imul
addl
xor
incl
stos
ret
xorb
fistps
sbb
fcoms
pop
pop
movsl
out
and
shl
or
movl
adc
scas
popa
scas
xor
add
cs
mov
jnp
rcrl
pop
push
shll
es
fcmovnb
orl
orl
add
dec
xlat
insb
cmpsb
add
notb
and
add
xchg
lea
jns
or
push
in
fs
movsl
sbb
push
pop
leave
pop
bound
push
jnp
ds
pop
jne
push
mov
push
je
dec
insl
aaa
roll
push
xor
sbb
repnz
jns
fstps
inc
push
pop
dec
dec
test
push
and
loope
hlt
mov
or
sub
or
call
nop
mov
fisubs
lahf
aam
cmp
and
in
and
test
imul
pushf
cmpsb
inc
xchg
in
push
fwait
sub
mov
sub
fs
sbb
sub
rcrb
inc
int
lock
push
push
hlt
repnz
int
sub
ret
pop
dec
jecxz
insb
adc
imul
es
jmp
mov
adc
xchg
pop
push
or
and
and
xchg
dec
lods
xor
push
cmp
xchg
repnz
shlb
xor
cmp
inc
stos
fisubl
popa
int3
xchg
addr16
inc
test
ja
adc
ret
xchg
jg
fs
jo
mov
dec
jne
jno
sub
loope
sbb
lret
inc
gs
add
repnz
add
sbb
pop
lret
dec
mov
xor
int3
mov
pop
pop
xchg
test
xchg
sub
mov
cmp
or
nop
int3
loopne
add
jne
mov
fcom
sub
mov
xor
sbb
insb
push
push
aaa
and
and
add
and
jge
jbe
push
pop
jp
and
or
adc
or
pop
in
in
iret
and
inc
es
aaa
add
sahf
int3
and
rolb
cmp
insl
adc
push
lea
jl
les
ljmp
jecxz
dec
add
and
or
push
aad
lods
and
jae
inc
shrb
jge
cli
mov
inc
cmp
mov
int
es
push
fsubrs
pop
and
xor
mov
int
adc
inc
ret
add
adc
das
push
mov
cmp
jno
inc
xchg
cmpsb
xchg
cmp
nop
add
pop
xchg
movsb
insb
pop
push
inc
xchg
mov
ss
aam
rorl
sbb
push
das
lret
add
mov
dec
xchg
cli
mov
lcall
push
icebp
test
or
adc
ret
ret
test
and
sti
out
dec
sbb
jns
xchg
add
popf
nop
xchg
ret
mov
jae
adc
cs
and
fs
mov
adc
insl
test
sbb
dec
popa
inc
nop
rorl
out
or
mov
add
add
mov
jge
add
xchg
jnp
add
dec
sub
test
mov
lret
andb
movsb
faddp
cmp
pushf
mov
pop
dec
add
insl
mov
add
std
mov
sub
xchg
jl
movsl
or
dec
push
push
imul
adc
je
or
mov
je
add
dec
cmp
pop
ficomps
sub
add
mov
sbb
imul
adc
scas
pop
or
sub
imul
pusha
push
push
sbb
jo
and
sub
xor
lret
pop
dec
fisubrs
loope
push
gs
stos
add
je
push
adc
je
adc
push
nop
dec
sahf
push
rol
lods
xchg
pop
and
insb
rcrb
sahf
or
xorl
push
roll
inc
dec
rcll
sbb
adc
outsb
loop
add
jle
lcall
push
movsl
fdivl
lods
add
sbb
lock
ds
lret
jp
fucom
pop
sub
lret
push
cmp
add
andb
addr16
dec
sub
not
adc
bound
sub
insb
xor
lea
idivb
adc
add
push
mov
dec
mov
add
shr
enter
inc
rolb
mov
mov
cmp
push
xchg
sub
loope
mov
mov
into
add
sbb
adc
lock
sbb
loope
mov
lds
push
sbbl
fmuls
lds
cltd
mov
repz
test
jno
mov
sbb
pop
fstps
jo
loope
cs
cmpsl
or
dec
aas
push
lcall
and
cmc
mov
xchg
rsqrtps
and
push
inc
xor
sbb
outsl
inc
sarl
mov
push
sbb
xchg
sbb
or
leave
repz
pop
int
inc
sbb
mov
add
int
add
xor
scas
sti
je
sbb
or
das
push
push
and
bound
outsb
pop
test
addr16
cmc
mov
mov
cmp
dec
add
pushf
rcrb
cld
imul
cmp
pushf
lock
jo
xor
cmp
jl
pop
dec
pop
add
push
mov
fisubs
das
mov
mov
cmp
out
sbb
cmp
dec
mov
and
out
add
data16
sbb
mov
sub
mov
push
xor
adc
adcl
dec
xchg
aas
data16
sti
je
lods
jmp
cmp
dec
shrb
cwtl
fbld
xchg
orb
and
dec
dec
and
movd
mov
jb
dec
inc
pop
movsb
mov
add
ret
inc
adc
inc
sub
push
outsb
mov
je
jge
adc
cmp
icebp
mov
out
mov
int
ss
repnz
pop
sbb
jne
adc
in
add
add
sahf
push
stc
pop
clc
or
or
or
in
jns
or
or
adc
xchg
addr16
xor
cmp
pop
icebp
and
and
jle
sbb
xor
pop
xor
jno
fdivrs
orb
or
xor
inc
sbb
add
sti
add
ss
mov
inc
inc
xchg
iret
mov
pop
adc
mov
pop
sbb
add
nop
xorl
cmpsb
repz
lea
inc
andl
ret
rcll
push
aam
lock
sub
mov
pop
cmpsb
sahf
jbe
pop
je
pop
or
xor
or
push
or
add
test
pop
add
pop
sbb
mov
pop
xor
or
add
mov
test
call
cmp
adc
dec
mov
shl
hlt
push
gs
jle
scas
rolb
xchg
pop
insl
call
mov
or
sbb
mov
pcmpeqb
or
and
push
in
inc
and
lea
xor
movsb
inc
xor
mov
or
pushl
aam
push
imul
data16
enter
jle
cmpl
ret
ja
jb
test
repz
mov
popf
inc
jo
xor
cmp
test
inc
out
incb
dec
xchg
add
add
or
or
inc
adc
mov
or
push
das
stc
add
lcall
jl
inc
mov
aas
mov
or
ljmp
push
sbb
arpl
subb
or
mov
inc
push
push
add
sub
and
mov
mov
inc
push
lcall
xor
xorl
lds
and
xchg
mov
and
fsubs
or
sbb
shlb
adc
adc
mov
jmp
or
or
cli
adc
add
je
test
mov
mov
xorb
or
andl
add
insb
adc
arpl
mov
jmp
lahf
push
shrb
inc
dec
adcb
add
into
mov
daa
xchg
or
jp
push
cld
jne
jmp
cmp
call
add
inc
lods
add
pop
adc
fcompl
adcb
cmp
push
mov
ficoml
cmp
call
add
aam
cld
stos
fwait
and
addr16
dec
and
call
push
push
push
cld
loope
or
or
dec
xor
push
pop
test
jno
mov
pop
or
ss
dec
dec
mov
mov
ss
cmc
xchg
and
sbb
addr16
in
mov
mov
add
sbb
add
and
adc
or
and
inc
enter
add
adcb
push
cld
push
mov
ret
and
push
shr
push
in
push
push
cwtl
jle
shlb
or
adc
sbb
mov
test
pushf
sbbb
adc
inc
sbb
adc
les
fidivs
xor
fcomps
push
fadd
dec
scas
dec
aam
call
or
cmp
stc
cs
jne
movsl
mov
lea
or
fbld
or
push
xchg
push
shll
mov
lock
or
cmp
sti
hlt
andl
push
pop
mov
mov
cmp
sub
or
insb
leave
inc
les
mov
movnti
jmp
adc
jae
aam
sbb
push
leave
dec
fsubr
sbb
pop
js
pop
pushf
jge
add
arpl
pushf
mov
adc
mov
mov
push
aas
cmp
mov
rep
xor
in
mov
push
inc
inc
push
or
je
loope
push
mov
jne
cld
push
or
movsl
dec
mov
xor
jnp
cmc
dec
fiadds
iret
data16
mov
add
jecxz
push
push
in
lods
mov
lea
push
fs
cmc
insb
repz
and
sub
pop
pushf
push
mov
int3
push
jo
pop
xor
or
rclb
insl
dec
push
jns
push
or
repnz
sub
jb
mov
fildll
jmp
mov
adc
les
jb
call
xchg
es
push
mov
js
fsubr
sbb
int
mov
in
pop
cmp
pushf
and
add
imul
sub
lods
das
std
cli
je
andb
pop
dec
jo
add
push
test
push
ret
xchg
adc
or
add
cmp
js,pt
mov
mov
dec
sub
inc
in
mov
scas
pop
mov
lea
pop
cmp
cmp
das
pop
mov
or
ud1
ja
pop
xchg
loop
xchg
scas
mov
cmp
loop
nop
roll
clc
lea
movl
cli
mov
js
and
rol
pop
adc
out
ss
add
add
jns
and
das
dec
popa
stos
nop
pop
xbegin
fldl
test
xor
mov
mov
insb
sub
stos
adc
xor
rcr
ficompl
adcb
dec
rcl
jecxz
movsb
push
add
inc
mov
je
adcl
push
push
cmp
and
mov
push
push
arpl
jno
jbe
mov
adc
cmp
inc
cwtl
pop
or
dec
mov
jp
inc
xor
test
or
rol
fdivp
insb
add
sub
jbe
or
sub
pop
cmp
mov
sbb
mov
lock
mov
pop
xor
sbb
leave
aam
or
je
inc
mov
das
jge
push
jle
clc
in
shr
shlb
mov
fnstsw
call
mov
pusha
pop
les
jmp
lcall
adc
inc
rcl
loope
shll
sub
pop
pop
mov
mov
fcomps
out
add
adc
add
inc
push
push
xor
inc
loopne
loope
inc
jmp
adc
push
xchg
jne
inc
dec
stos
int3
jne
mov
shlb
pushf
cmp
fcoms
aaa
jge
inc
mov
or
cmp
and
mov
adc
cmp
pop
or
mov
jae
and
cmpsb
fwait
les
inc
in
cmp
adc
add
fistl
stos
cmp
cs
nop
push
into
cwtl
lods
cltd
iret
test
mov
mov
pushf
das
inc
leave
sub
inc
or
mov
pusha
frstor
mov
daa
adc
jmp
das
js
daa
sarb
push
inc
dec
pop
out
push
dec
pop
jbe
inc
sbb
add
adc
mov
test
push
lret
mov
inc
out
xchg
mov
daa
add
adc
movsl
inc
fmuls
cmpl
imul
or
jmp
dec
inc
test
or
push
or
and
dec
lcall
add
fs
or
mov
dec
stc
adc
test
xor
mov
loope
clc
mov
pop
and
pop
pop
idivl
inc
mov
mov
subb
pushf
xchg
sbb
jo
sbb
or
sub
push
ret
or
fists
adcb
flds
jmp
jo
add
lea
mov
lea
add
cmp
sbb
and
pusha
inc
adcl
xchg
or
pop
pop
cmp
je
call
push
data16
push
jnp
int3
fsubl
fsubrs
mov
jno
add
or
pushf
xchg
sbb
lds
jbe
sbb
movsb
dec
or
dec
lock
cltd
popf
subb
push
movsb
fcmovnb
inc
mov
fwait
cmp
cmpsl
insb
enter
xlat
scas
add
cmp
mov
adc
cmp
je
pop
add
repz
inc
dec
push
xor
leave
mov
mov
cmp
jp
incl
or
call
or
inc
in
sbb
sbb
pop
or
xorb
adc
andl
pop
inc
add
xor
bound
inc
movb
cmp
add
test
sarl
cmp
aad
les
addl
and
out
pop
inc
push
roll
sbb
lahf
add
lret
xchg
and
idivl
ret
adc
ds
mov
push
dec
cmp
in
sub
mov
les
inc
das
lcall
fimull
push
xor
xchg
mov
cmp
sbb
mov
or
mov
or
inc
push
or
fwait
mov
icebp
mov
push
push
xlat
int
jmp
gs
inc
mov
adc
rorl
cmp
or
bound
mov
popa
pop
popa
sub
pop
inc
push
sub
pushf
push
cmpsb
aam
add
fmuls
jmp
xor
or
jne
in
sub
push
fbstp
or
cld
lock
sub
push
imul
add
fidivs
push
adc
dec
mull
push
cmpb
cmpsl
rclb
add
js
lea
ss
pop
jl
push
loope
fisttpll
dec
pushf
jp
orb
popf
enter
sbb
xchg
aaa
and
repnz
inc
xchg
push
fnstsw
add
or
mov
cmpsb
xchg
cmp
push
imul
inc
pop
adc
or
adc
xor
loop
mov
ret
push
enter
sub
xchg
and
stos
or
pop
push
lods
pop
sbb
int
loope
xchg
or
aad
movsb
add
aam
icebp
xchg
scas
dec
push
cmp
mov
sub
mov
fcmovnu
mov
jl
mov
fadds
mov
daa
inc
xchg
ljmp
xor
dec
mov
push
sub
adcb
mov
add
popf
add
jecxz
loopne
jne
lods
popa
inc
popl
aaa
add
push
mov
sbb
xor
xor
inc
mov
and
in
push
lea
in
and
aaa
movsl
imul
rclb
cmpsl
je
inc
fadd
sbb
in
push
xor
adc
pusha
call
faddl
in
dec
dec
mov
roll
add
into
iret
shrb
dec
ficoml
adcl
gs
dec
lret
movsl
rcll
mov
add
mov
jge
mov
outsl
inc
push
xchg
jge
hlt
js
xlat
or
xchg
out
push
and
xlat
add
jmp
lods
loopne
xor
dec
fcompl
and
and
stc
sbb
stos
or
sub
mov
add
add
and
mov
jge
pop
inc
cmp
add
scas
hlt
jne
int
test
pop
jle
add
push
and
push
or
in
out
sarl
decl
push
jo
pop
scas
mov
push
mov
je
mov
or
jo
inc
inc
fstl
push
call
adc
adc
mov
pusha
or
movb
xchg
sbb
push
mov
add
sbb
inc
adc
loopne
mov
mov
and
inc
rorb
and
xchg
push
sarl
pop
mov
cmp
and
jb
and
lods
mov
cmp
cmp
insl
sahf
push
sub
dec
idivb
cmp
cmp
add
inc
mov
rcrb
in
dec
ja
mov
inc
sub
lret
imul
or
cwtl
mov
push
arpl
pusha
mov
cs
xor
or
fldl
fcoml
sbb
ds
mov
cmpsb
andl
cli
pop
pop
add
or
jmp
mov
xchg
and
push
cli
sub
sbb
xor
fcom
push
into
lods
xor
fs
push
outsb
mov
cmp
and
cld
push
ja
xor
push
cmp
sbb
inc
jno
jb
in
cmp
add
and
push
sub
outsb
add
and
pop
lcall
xor
push
dec
iret
xchg
stc
adc
dec
sahf
out
sub
push
repz
jb
pushf
out
fwait
mov
inc
push
cmp
sahf
das
sub
imul
jne
testb
dec
sub
popf
test
add
pop
inc
push
jle
jno
lods
or
jl
inc
adc
ss
jl
dec
sbb
ret
inc
cltd
pop
xor
sub
sbb
aam
push
dec
mov
ror
push
push
iret
add
sbb
push
cmp
or
rorl
add
adc
or
es
sub
inc
das
int
and
cld
imul
sarb
lea
add
cmp
imul
scas
inc
dec
pushf
jle
inc
mov
test
xchg
fbld
push
test
je
cmp
push
insl
jmp
jne
or
in
jae
cmp
ret
std
ljmp
push
cmp
jb
cmp
ja
add
jnp
mov
inc
test
mov
loopne
xor
xlat
add
mov
fcmovb
jmp
push
fidivrl
ret
dec
mov
call
inc
and
xchg
inc
push
lahf
dec
fisubrs
js
fs
shl
sub
and
or
push
xor
pop
sbb
ds
data16
push
cs
sbbl
les
jl
xchg
sbb
jg
adc
outsl
jge
push
mov
sub
add
sbb
icebp
mov
mov
adcl
ret
jp
mov
clc
mov
ret
mov
fcomip
lret
cmp
jmp
mov
roll
push
setp
inc
or
xorb
fldl
dec
test
add
aad
adc
and
nop
push
movsl
and
fisubl
dec
and
or
fists
push
add
mull
lret
aam
bound
push
push
imul
es
push
mov
cmp
lahf
sub
notl
mov
cld
lea
movswl
movsb
jo
movsb
or
pop
daa
or
and
add
add
inc
rolb
xchg
aam
lahf
pop
insb
das
or
push
xor
gs
mov
into
mov
lock
xchg
pop
xor
pop
add
loop
lock
aam
pop
call
xchg
ficoml
and
cmp
push
test
dec
pop
pop
das
mov
dec
into
testl
stos
jo
jae
xchg
push
rorb
popa
pusha
data16
sub
mov
mov
fistpl
inc
mov
xlat
addb
push
ss
cmp
dec
xor
dec
inc
mov
push
arpl
and
das
js
ss
rol
daa
mov
mov
dec
sbb
adcb
mov
mov
call
daa
mov
ss
pop
cmp
frstor
or
or
shlb
and
and
sbb
add
cli
rcll
inc
jp
arpl
test
mov
dec
movl
jno
mov
je
and
jmp
rclb
and
cmp
pop
cmpb
insl
mov
jae
push
xchg
jb
sti
pop
pop
scas
dec
sub
mov
pop
jo
fbstp
and
sbb
xlat
or
and
jmp
cmp
sub
movsl
mov
xchg
sub
stos
push
mov
mov
cmp
adc
scas
push
lds
sbb
das
js
sbb
adc
xchg
loopne
dec
shlb
iret
add
push
lea
and
jp
sub
sub
add
add
xchg
mov
clc
or
jbe
push
cmp
into
sbb
or
and
sbb
sbb
xor
mov
add
lods
sarl
mov
inc
add
add
or
pop
fwait
push
in
inc
mov
sub
sub
adc
jno
push
mov
push
add
adc
fdivrs
cs
es
pop
add
adcl
pop
or
push
das
int3
pop
xchg
sbb
lahf
push
inc
lods
push
mov
fadd
dec
dec
pop
xchg
or
jecxz
scas
iret
xor
or
in
nop
sbb
inc
fwait
push
mov
insl
mov
xchg
dec
sub
lea
xor
mulb
ret
push
cmp
mov
push
and
sub
push
lods
adc
cmp
ljmp
fidivrl
aam
add
push
jg
sub
inc
andb
test
mov
shll
push
and
or
mov
push
push
bound
mov
cld
cli
sub
inc
sub
add
orl
or
push
cmp
pop
adc
xchg
or
adc
xchg
test
xchg
mov
ljmp
lcall
les
xchg
loope
push
pop
shl
sarl
fs
jne
cli
clc
push
add
push
fsubl
fsubrs
icebp
call
fcmovnb
mov
or
sub
xchg
jns
dec
gs
insb
push
rclb
or
inc
push
push
cs
jmp
jnp
jbe
inc
popa
cmpl
jge
dec
add
jp
mov
or
roll
and
adc
je
add
inc
adc
push
sub
sub
pop
inc
pop
fs
daa
adc
add
xor
stc
jb
ja
fmul
inc
rclb
mov
dec
inc
sbb
push
adc
sub
cld
ret
xor
push
loopne
cmpb
jbe
push
cmp
or
mov
add
adc
decb
je
test
out
mov
cmc
mov
test
lea
int3
aam
dec
cmc
push
into
dec
popa
lods
xchg
xchg
sub
pop
cmp
jbe
adc
inc
enter
pushf
sub
add
negb
out
jno
pop
inc
inc
lcall
add
fiaddl
inc
add
pushf
movsb
sahf
inc
pop
dec
sbb
inc
fadds
jmp
mov
adc
mov
add
mov
add
mov
sbb
bound
add
mov
sub
xor
and
aas
mov
xor
fld1
pop
lods
inc
loop
add
or
adc
push
and
aad
sarl
xor
inc
push
jmp
in
inc
popf
jne
mov
inc
movl
xor
inc
lods
sbb
xlat
fdiv
and
sbb
ret
xchg
sbb
dec
or
cmpsl
push
push
xor
test
pop
int
jns
sbb
ljmp
push
inc
je
jbe
cmpsl
sbb
mov
jbe
adc
stos
movsl
call
and
dec
push
adc
and
or
xchg
popa
mov
jmp
mov
inc
mov
jp
pusha
push
icebp
adc
iret
jge
xchg
dec
mov
inc
mov
adc
inc
and
cmc
sbb
popa
cmp
ljmp
add
xor
jae
dec
inc
clc
cli
push
adc
mov
sbb
push
fadds
pop
dec
ret
leave
je
inc
or
movsl
adc
push
xchg
pop
nop
push
sbb
mov
sbb
push
ret
push
mov
xchg
cli
pop
mov
mov
push
js
sbb
xlat
push
lea
xor
imul
xchg
jl
inc
inc
loopne
mov
and
or
xor
push
inc
push
ret
jbe
fiadds
sbb
bound
shrl
andb
jmp
xor
stos
dec
notl
rorl
inc
aaa
sbb
mov
cli
lret
movl
and
movsb
hlt
push
mov
adc
lods
push
andb
add
rorl
cmp
sbb
aas
push
mov
loope
mov
mov
jmp
pop
jo
mov
fiadds
inc
mov
push
in
inc
in
test
pop
cmp
popa
add
pop
jb
add
sbb
mov
inc
mov
in
or
rorb
lret
repz
xor
adc
fsubs
push
data16
add
or
xchg
in
push
std
push
jmp
mov
mov
mov
out
push
and
pop
daa
test
rorb
sbb
les
shll
push
lds
push
sbb
aas
inc
dec
dec
push
inc
insl
or
scas
or
cmp
mov
add
or
insl
cmp
je
adc
stos
ret
cmpsb
int
loope
add
xchg
mov
sbb
ret
or
add
dec
dec
sti
xchg
test
js
stos
push
decw
and
adc
fwait
mov
push
in
filds
dec
pop
xor
sbb
sub
push
out
mov
negb
es
insb
dec
and
inc
loopne
icebp
inc
jne
push
adc
mov
jge
popa
and
xchg
inc
sbb
push
imul
lahf
mov
mov
lds
jbe
mov
sub
xchg
xchg
incl
shlb
out
pop
cmp
mov
xor
and
shlb
push
push
daa
jbe
sbb
cmp
dec
inc
std
mov
nop
adc
push
push
loop
sub
cmc
inc
int3
mov
in
syscall
dec
adc
lds
add
adc
mov
xor
scas
adc
lret
push
sub
mov
lds
jb
xchg
hlt
add
push
in
fnstsw
cmp
jne
inc
push
jo
out
mov
dec
push
leave
lods
mov
daa
mov
lret
add
pop
push
mov
mov
nop
fstp
cs
cmp
shlb
adcl
add
and
outsl
add
das
nop
int
xchg
mov
rclb
jecxz
cmp
mov
sbb
mov
and
push
push
iret
lods
dec
inc
insb
imul
sub
cmp
imul
dec
xor
add
pop
arpl
xor
push
psubd
dec
inc
pop
dec
adc
adc
int
xchg
nop
lret
fimull
adc
push
xor
inc
cmpsb
push
push
pop
and
xor
mov
pop
xchg
push
sarl
xchg
xchg
lret
gs
sahf
push
and
pusha
sarb
jno
cltd
dec
sbb
call
test
movsb
dec
push
or
aam
inc
adc
dec
fwait
push
in
adc
mov
out
mov
or
lods
int
mov
fmull
das
popa
outsb
leave
sbb
lahf
ret
in
adc
inc
ds
gs
dec
add
push
jecxz
sub
cmovp
dec
cli
or
dec
pop
inc
sub
lods
movl
xchg
leave
cmp
hlt
pop
ds
sub
sub
or
lds
xchg
ucomiss
mov
sub
push
and
xchg
inc
add
adc
pusha
andl
mov
cltd
cmp
cmp
outsl
fs
mov
pop
sub
jo
nop
inc
mov
leave
add
lret
push
mov
push
lret
push
add
adc
mov
addl
jne
sbb
jb
lea
dec
mov
push
rcrb
and
outsb
xor
add
ret
rorl
push
lret
add
xchg
pop
clc
pop
lods
hlt
mov
mov
loope
jne
push
adc
je
pop
addr16
aas
cmp
mov
cmp
ds
push
xchg
push
push
and
sub
push
mov
lock
fimull
push
push
jne
cmp
inc
xchg
ss
in
gs
rorl
call
dec
mov
pusha
iret
xchg
adc
push
dec
push
xchg
ret
popa
stos
rol
mov
movsb
call
xchg
stos
sub
or
add
dec
rolb
cmp
xchg
mov
fsubl
adcl
test
push
mov
mov
mov
push
add
inc
or
dec
sbbb
jne
cmp
mov
mov
xchg
push
test
data16
and
inc
push
movsb
cmp
add
jp
icebp
loope
gs
cs
lea
jo
dec
mov
push
gs
adc
and
jle
mov
or
jne
dec
add
rorb
rcrb
jae
push
cwtl
in
pop
outsl
sub
pop
push
repnz
xchg
push
adc
push
sahf
scas
lahf
loop
icebp
pop
insl
pushl
xor
sahf
test
cmp
cwtl
xor
and
add
popa
cmp
dec
or
jne
jb
cmp
cmp
data16
outsl
icebp
sbb
or
inc
add
bound
mov
mov
nop
cmpl
and
sub
test
xor
pop
pop
adc
jne
mov
ror
sar
xor
loope
push
ror
dec
aad
mov
sbb
outsb
adc
mov
push
jge
subl
jo
mov
arpl
bound
pop
pop
dec
add
movsb
inc
or
or
mov
jne
inc
es
or
adc
lods
insb
mov
mov
je
adc
adc
repz
mov
repz
lock
sbb
pop
adc
xor
lods
adcb
cmp
push
inc
jge
add
mov
xchg
ret
sub
hlt
push
or
shl
push
repz
dec
add
pop
and
or
add
push
aad
xchg
test
xor
cmp
xchg
icebp
adc
je
push
call
clc
repz
outsb
mov
lret
das
out
mov
xchg
mov
lock
stc
mov
push
addb
xor
add
push
pushf
mov
push
faddl
lock
dec
add
cwtl
adc
mov
push
or
pop
fists
orl
push
int3
add
enter
mov
mov
pop
mov
stc
or
lahf
jmp
add
inc
icebp
mov
jmp
push
xor
xor
add
mov
pop
jl
mov
xchg
mov
xor
mov
pop
stos
inc
mov
jg
out
add
out
pop
jo
pop
lods
mov
push
sarl
movsb
xor
add
pop
pop
add
dec
mov
push
and
test
fldcw
cmp
dec
das
popa
je
stos
push
push
imul
adc
js
adc
leave
mov
lcall
mov
mov
arpl
ret
fldcw
sub
pushf
fwait
mov
sbb
lret
dec
pop
push
adc
or
je
pop
sub
cmp
pop
call
cli
push
push
add
movsl
push
das
aad
cmp
pop
loop
dec
movsl
inc
dec
in
enter
mov
and
test
hlt
jle
mov
loop
sbbl
and
les
push
mov
mov
mov
push
mov
shrl
inc
in
dec
aas
push
popf
stos
add
cmc
movsl
movsl
or
mov
xchg
mov
inc
xor
rorl
and
mov
dec
adc
jg
repnz
and
or
push
test
and
rcrb
icebp
cmp
sub
dec
fs
rorb
mov
adc
mov
fwait
jo
lods
jne
sbbb
jbe
xor
add
jle
in
push
cs
add
push
mov
or
aas
mov
insb
pusha
cmp
or
xorb
aas
sub
mov
ffree
or
inc
dec
push
mov
and
add
test
pop
fwait
lods
out
lea
xchg
and
mov
outsb
insb
dec
sbb
loopne
mov
add
fldenv
adc
data16
push
lret
arpl
cmp
int3
and
push
inc
aad
adc
call
mov
xor
pop
mov
adc
ret
call
jb
jns
fdivl
outsb
or
add
xor
pusha
das
and
or
call
sbb
and
add
push
sbb
fnstcw
inc
adc
or
push
pop
mov
or
push
and
dec
loop
loop
pop
xchg
mov
and
fisttpl
push
push
rcrb
push
in
push
xchg
cmp
es
add
insb
adc
jbe
subb
rcl
push
inc
mov
pop
sbb
adc
push
adc
jb
nop
aas
pop
in
pop
ficompl
packssdw
adc
xor
push
movsb
inc
sbbb
sbb
mov
inc
jg
int3
pop
and
rolb
jg
push
jge
pop
cmp
movsl
mov
sub
call
mov
push
dec
dec
lods
and
push
jbe
adc
aas
out
inc
sbb
push
jo
stos
push
lods
and
cmp
orb
xchg
mov
ljmp
jg
mov
cmp
sbb
dec
fdivr
lea
pushf
lock
inc
sbb
sub
sub
add
and
icebp
pusha
adc
es
add
jmp
cmc
out
push
ss
xor
xor
push
push
test
inc
cmp
icebp
and
jo
sbb
xor
mov
sub
sub
ret
ss
pop
adc
lds
in
adc
and
add
shll
dec
sub
lds
lret
or
xchg
or
pop
cmp
cmp
add
cmpsl
sbb
fs
jo
js
ret
xchg
lods
xchg
cmp
xor
add
test
inc
adcb
or
fwait
call
xor
mov
rcl
xchg
mov
xchg
inc
inc
xchg
jo
test
add
xor
xchg
repnz
repnz
mov
popf
push
mov
mov
mov
movsb
inc
push
xchg
aam
test
push
mov
subb
jg
call
push
jg
lret
jmp
pop
push
inc
sub
push
and
test
icebp
or
shrb
push
or
inc
mov
call
cmpsb
fcomps
and
and
push
ficoms
orl
lods
or
shlb
mov
dec
pop
add
sbb
loopne
cmp
ret
sub
dec
pusha
jl
fiaddl
daa
divb
mov
sub
test
cmp
push
adc
xchg
xor
cli
push
imul
mov
xlat
and
fbstp
loope
pushf
mov
push
jecxz
mov
stos
aaa
aas
add
ret
push
inc
inc
js
xchg
or
imul
mov
js
mov
adc
or
push
loope
push
fcoml
leave
dec
aad
dec
mov
push
call
inc
call
add
push
xchg
dec
sbbb
or
adc
xchg
cmp
and
push
xor
and
xor
rcrl
dec
add
cmp
es
inc
test
pop
push
xchg
mov
shll
in
dec
or
and
pop
push
sub
push
cmc
pop
icebp
scas
and
lret
add
push
sub
push
xor
push
jmp
popf
adc
push
push
scas
dec
fbstp
dec
les
imul
ljmp
test
xchg
lock
lds
xor
mov
iret
je
add
pop
mov
lods
lahf
dec
loope
je
mov
sbb
adc
sub
pop
mov
mov
mov
cmp
adc
and
shlb
sbb
mov
cld
and
movsl
call
ja
aam
adc
cld
enter
push
mov
mov
pop
and
push
pop
shlb
cmp
or
lcall
fstpl
mov
inc
lock
js
add
xchg
add
pop
or
mov
sub
repz
mov
shll
nop
fs
jno
fwait
sub
dec
xchg
stos
push
mov
mov
je
add
aaa
adc
cs
loopne
mov
or
adc
xchg
test
dec
fbstp
push
fs
add
add
sbb
adc
clc
out
push
xor
or
dec
mov
cmp
mov
jne
inc
loopne
or
mov
das
shrl
xchg
jno
fs
jne
call
clc
sti
mov
je
xchg
hlt
cmp
testl
insb
push
push
xor
mov
or
mov
ja
jle
mov
je
adcb
pop
std
xchg
inc
and
fcoms
mov
sub
cmp
sub
stos
xchg
jo
ds
imul
jb
cmp
xchg
pop
sbb
push
or
xor
ljmpw
mov
sbb
lea
and
adc
cltd
mov
jae
mov
push
adc
xchg
mov
dec
and
fcompl
jbe
jno
mov
in
lock
insb
aaa
inc
mov
fcompl
repnz
adc
cmp
aas
jb
adc
xor
or
sub
xlat
lea
xchg
in
iret
movsb
loop
push
jns
mov
andl
xor
pop
mov
or
fcom
test
movsl
mov
sbb
mov
nop
mov
je
in
movsb
lret
in
pop
rorb
enter
or
add
leave
cmpl
adc
bound
outsl
pop
xchg
addb
pusha
insb
sub
mov
jecxz
mov
test
inc
xchg
or
add
iret
lea
sub
inc
add
cld
mov
xor
aaa
add
and
pop
xchg
add
sbb
push
outsl
dec
jne
jmp
js
lret
and
into
ret
dec
inc
and
cltd
xor
mov
aad
xor
dec
dec
sbb
imul
out
inc
or
xor
ficoml
rcr
sbb
ss
fildl
mov
cmp
add
dec
add
outsl
mov
divb
add
mov
cmp
inc
cmp
pusha
loop
push
xor
ja
cltd
das
rcrb
sbb
addr16
dec
enter
ret
mov
xor
xchg
roll
mov
adc
cwtl
jp
add
lods
push
cmp
insb
xchg
lock
add
lds
fcoms
xor
insl
mov
jp
mov
shlb
push
enter
mov
ja
mov
mov
aaa
xchg
imul
lea
loop
add
fstpt
adc
sbb
inc
mov
fbstp
jmp
xchg
scas
fists
filds
xchg
fwait
or
push
xor
jl
mov
xchg
fisubl
mov
push
test
xchg
iret
mov
es
adc
xor
nop
addl
add
sub
shll
add
xor
mov
and
call
dec
stos
popf
dec
sbb
push
test
dec
push
pop
push
dec
mov
xchg
movsb
xchg
lret
dec
mov
or
movb
ljmp
enter
sub
test
sub
pop
scas
xor
dec
test
inc
and
and
mov
movl
sub
dec
mov
add
movsl
add
call
dec
sbb
mov
sub
in
loopne
addb
xchg
test
dec
sub
out
add
pop
jno
and
adc
stos
pop
lcall
adc
lea
cmp
pop
and
pop
dec
outsl
inc
pop
push
out
cmp
sar
cmp
push
sub
dec
xchg
ss
push
and
das
jge
fisubl
leave
neg
or
packuswb
adc
cmc
xlat
stos
aas
addb
fsubr
popa
enter
enter
call
add
jo
push
movsb
xchg
and
bound
mov
push
into
push
sub
test
lods
fbld
pop
mov
mov
add
add
jmp
xor
adc
push
scas
test
shl
loope
add
and
and
sbb
push
outsl
test
adc
dec
mov
rclb
push
das
xor
lahf
mov
inc
pop
test
in
sub
ret
or
lds
and
push
cmp
push
insb
or
dec
cmp
stc
loopne
push
pushf
cmp
adc
xchg
add
xchg
adc
hlt
pop
add
movsl
addl
fs
daa
ret
orb
push
push
arpl
add
clc
mov
xchg
testb
mov
rclb
stos
imul
mov
sub
push
push
and
or
je
push
dec
mov
mov
out
dec
jo
mov
push
pop
movsl
xchg
push
mov
pop
mov
js
push
sub
push
stos
adc
inc
imul
jle
mov
addl
adc
dec
das
dec
fadds
daa
lods
pop
mov
adc
xchg
and
jne
sub
push
jmp
add
pop
jecxz
movsb
add
mov
xchg
fwait
jno
mov
lahf
xor
add
ret
mov
cmp
cmc
add
in
xor
pop
inc
enter
sbbl
les
dec
adcl
mov
sbb
xor
adc
push
je
sbb
cld
pop
or
push
dec
mov
loope
jmp
ret
inc
mov
aaa
je
add
filds
or
ljmp
cmp
addr16
jne
dec
inc
jmp
push
mov
outsl
loopne
pushf
adc
or
fisttps
aas
jae
push
jno
pop
mov
insb
rclb
or
js
addr16
mov
pop
and
cmp
or
mov
cmp
pop
lcall
sti
orb
loop
sbb
mov
fsubl
pop
in
adc
dec
xchg
add
out
mov
cmp
fldln2
cmp
je
cmp
sub
test
push
sub
inc
push
fiadds
jle
xor
fcomps
jle
mov
and
test
ja
loope
inc
shl
push
dec
insl
and
pop
and
sbb
incb
lea
cmp
jg
mov
or
clc
fwait
cmpsb
lea
jnp
jl
js
in
mov
lea
cmp
gs
lds
js
inc
jmp
je
dec
je
add
add
jp
mov
xor
scas
lock
lcall
sbb
xchg
add
pop
lret
jo
outsl
lods
clc
ret
pop
push
xchg
movsb
xchg
in
inc
sbb
out
xchg
adc
fadd
xor
dec
cmp
fldenv
enter
mov
subl
mov
mov
pop
mov
mov
pop
scas
or
pop
xchg
adc
and
push
pop
iret
pop
mov
out
loop
sub
lea
mov
mov
inc
mov
mov
addl
jge
dec
ret
cmpsb
rorb
in
mov
in
or
push
push
inc
dec
pop
cmp
repnz
pop
les
or
inc
pop
mov
loop
mov
xchg
mov
cmp
adcb
test
mov
inc
add
mov
icebp
lret
mov
cmp
mov
je
mov
mov
and
add
add
inc
ljmp
add
dec
sub
sbb
adc
rorl
sbb
mov
ror
add
add
dec
rorl
jmp
rorb
pop
adc
and
sub
rol
mov
mov
aam
jg
jmp
pop
arpl
push
cltd
std
adc
xchg
hlt
or
stc
push
aas
mov
int3
jle
sbb
pop
jnp
mov
popf
cli
ljmp
add
add
xor
in
jns
inc
lods
jle
push
jno
lahf
or
test
add
add
dec
bound
inc
mov
jne
mov
in
mov
or
add
adc
mov
mov
and
dec
mov
inc
push
or
sub
lea
mov
fisubrs
shlb
pop
pop
enter
lods
and
movsl
test
push
cmp
testl
mov
jno
push
mov
or
xor
sbb
xor
inc
pop
fcomip
scas
ljmp
adc
insl
cltd
push
adc
out
push
mov
lock
loope
lret
shlb
inc
mov
or
cmpsb
add
sbb
and
mov
cmp
cmp
or
out
sahf
jno
add
mov
sub
test
movsl
cmp
insl
add
mov
filds
mov
mov
mov
jbe
sbb
dec
sbb
push
mov
mov
enter
and
lcall
inc
imul
or
shufps
mov
lahf
add
test
je
dec
mov
adc
add
sub
inc
cli
aam
inc
lcall
adc
or
and
inc
inc
adc
or
pop
mov
mov
fistps
dec
push
fstl
inc
movb
push
and
pop
jl
pop
js
jae
ret
jp
inc
mov
inc
push
or
xchg
shlb
fs
nop
xor
mov
mov
shl
adc
cli
pop
mov
lret
cmp
flds
test
mov
ds
dec
mov
and
inc
pop
inc
les
add
xor
sub
mov
jb
outsl
jbe
xchg
pop
push
push
setne
rclb
sbb
lea
dec
lret
add
lock
mov
lret
cmp
jle
sub
dec
or
inc
and
mov
pop
dec
dec
pop
xor
dec
sub
sbb
nop
push
xlat
xor
faddp
inc
sub
sbb
inc
imul
ja
push
ss
lret
movsl
adc
inc
rcrl
mov
enter
ss
jno
add
adc
or
fsubrl
ljmp
dec
nop
sub
pop
cmc
leave
shlb
mov
add
inc
rol
jg
jmp
adc
daa
loope
lret
dec
xchg
jmp
das
lret
scas
adc
adc
aas
roll
mov
add
dec
dec
roll
push
cmpsb
jo
push
xchg
sub
dec
or
push
lods
adc
inc
loopne
push
dec
insb
pop
ljmp
adc
xchg
flds
and
pop
and
mov
xor
cmp
lods
fistl
ds
fistps
movsb
pop
test
add
xlat
int
cli
pop
cmp
pusha
mov
pop
dec
cs
scas
je
or
adc
pop
jecxz
mov
aas
or
mov
ds
pop
dec
sub
sbb
sbb
ret
pop
inc
inc
inc
pop
mov
gs
jecxz
fmull
imul
mov
sbb
stc
push
xor
loop
shl
pusha
sbb
jo
adc
jmp
adc
dec
add
sub
pusha
adc
es
mul
in
xor
shl
les
and
rol
imulb
loopne
fmuls
jne
push
std
jle
add
mov
pop
or
popa
pushf
inc
fdivrl
or
cmp
lea
repz
or
sbb
dec
inc
fs
sbb
or
xchg
out
dec
add
add
add
mov
in
xchg
and
mov
adc
cli
in
test
rolb
ret
aaa
mov
js
and
cmp
shlb
jl
ja
cwtl
or
bound
sbbb
cmp
dec
jecxz
adc
dec
sbb
clc
or
rolb
adc
ret
xchg
pusha
cmp
xor
jmp
push
pop
push
add
ret
mov
pop
subl
sub
bound
add
sbb
mov
pop
inc
or
inc
push
sbb
stc
stc
stc
rcrl
xlat
jl
inc
decl
xor
dec
jle
xchg
lcall
decb
lret
add
dec
fidivrs
cmp
add
fcoms
sub
dec
jg
cmpl
enter
ficoml
xorl
push
mov
pop
lds
mov
and
or
xchg
or
pop
xchg
sbb
popl
xor
and
or
add
jns
dec
sbb
inc
sbb
out
loope
mov
mov
and
dec
sbb
dec
scas
add
jno
xorb
lods
or
imul
repnz
and
or
dec
cmp
xlat
fcmovu
dec
mov
outsb
xor
push
xorl
sbb
add
dec
mov
jle
jmp
mov
push
out
les
jmp
ja
outsb
adc
pop
leave
movsb
lret
or
sub
jmp
mov
popa
xchg
aas
pop
push
cmp
mov
cmp
jne
shr
adc
xchg
clc
adc
arpl
jno
outsb
stos
mov
mov
and
sbb
jne
add
and
pop
roll
dec
and
loop
je
clc
fwait
addr16
sub
or
push
rorl
push
adc
jno
inc
pop
jge
jbe
adcb
jne
cmp
lcall
sub
je
mov
pop
popa
lds
test
or
jp
lea
sbbl
mov
inc
sbb
insl
or
in
add
jecxz
roll
test
stc
or
aas
sub
lcall
leave
js
add
or
push
mov
test
sbb
dec
mov
push
or
push
adc
mov
jne
push
add
xchg
inc
gs
roll
push
dec
jmp
inc
xor
xor
adc
jno
pop
sbb
jno
xor
xchg
inc
jecxz
jns
sbb
push
arpl
dec
jg
jl
add
sarl
xchg
loope
fsub
add
dec
adc
rcl
dec
jecxz
add
inc
push
dec
xchg
test
pop
push
xchg
pusha
and
fbld
int
mov
loopne
inc
xor
add
lods
les
test
les
outsl
ds
add
inc
mov
push
popa
lds
jns
cmp
les
inc
cmp
dec
dec
pop
cmpsl
or
imul
inc
negb
add
inc
sbb
mov
jmp
loope
push
adc
clc
je
mov
or
ret
push
ja
jle
lock
push
mov
das
pop
add
or
add
add
push
xchg
int3
xchg
insb
mov
cmp
push
lret
and
fcmovb
shl
pop
add
cmp
lret
or
shll
jne
pop
mov
xor
ficomps
xchg
adc
out
pusha
fldcw
cmc
add
mov
mov
and
in
push
dec
fidivs
mov
xchg
sarb
push
icebp
adc
adc
rorb
dec
call
adc
pop
sub
push
sbb
lods
sbb
pop
jo
hlt
pusha
popf
mov
fwait
or
loope
mov
shlb
loope
and
outsb
std
cmp
std
mov
jmp
test
mov
into
rclb
pushf
popa
lea
je
inc
test
xlat
outsb
loopne
mov
sub
rcll
aas
lcall
mov
dec
or
sub
mov
or
mov
xchg
or
push
adc
mov
sbbb
or
push
aam
dec
stos
and
push
add
cwtl
add
lea
popa
sub
leave
dec
adc
scas
lea
adc
outsl
sub
rorb
push
push
push
sub
mov
es
jne
mov
inc
cmp
pop
inc
mov
cltd
mov
lea
add
xchg
mov
outsl
aam
push
lock
xor
push
mov
rcll
test
jbe
push
jne
add
aaa
and
push
xchg
insl
pop
leave
xchg
test
cmpsl
cmp
adc
sti
sbb
mov
push
shll
dec
push
dec
or
movl
outsb
pop
fsubrs
and
cmpsb
mov
dec
mov
adc
sub
sub
sub
sub
xchg
mov
inc
adc
daa
shll
jmp
mov
push
mov
or
push
pop
lcall
cmovns
adc
mov
mov
jns
mov
and
cmc
fisubl
push
mov
cli
ss
push
icebp
adc
or
xchg
lret
xchg
js
xchg
jbe
pop
jmp
pop
mov
cmp
hlt
int3
dec
dec
sub
ret
test
sbbb
call
inc
imul
je
inc
cwtl
cwtl
push
push
xchg
sub
xchg
cmp
sub
pop
jb
outsb
push
sub
mov
enter
inc
cmp
sbb
jno
aas
cwtl
sahf
pop
mov
mov
rcrb
int
pushf
fadds
or
inc
lock
int3
lret
sti
xchg
into
jae
lea
gs
xor
xchg
int3
cmp
push
popa
mov
sub
dec
inc
cld
and
or
dec
loope
add
in
jnp
scas
hlt
jmp
push
inc
cld
push
push
int3
xchg
push
cmpb
inc
fwait
ds
cmp
xchg
nop
and
push
and
adc
mov
jge
shlb
mov
mov
push
and
cmpsl
and
mov
mov
ret
jl
subb
mov
cs
adc
cli
dec
mov
sub
jmp
lea
push
sub
in
adc
xchg
xor
adc
jecxz
add
testb
nop
sti
rcrb
xchg
pop
push
dec
aas
add
aas
pop
fldl
mov
jmp
push
cwtl
push
lock
mov
xor
ss
adc
enter
adc
stos
dec
stos
dec
sbb
push
sti
or
jge
push
dec
mov
and
sbb
jle
pop
mov
mov
xchg
add
sbb
sbb
pop
dec
adc
or
inc
cltd
cli
mov
and
lock
xchg
dec
sub
je
push
mov
push
jnp
cmpsl
mov
rorl
sub
mov
xchg
out
lea
mov
test
push
sbb
inc
ds
push
inc
and
sub
jl
jmp
add
and
dec
dec
push
mov
mov
mov
sub
jg
xor
and
ret
cmp
je
inc
jmp
adc
lea
clc
dec
icebp
loop
pop
xor
dec
lret
jge
cld
mov
mov
dec
dec
imul
std
aam
add
mov
xchg
lahf
push
add
cmpsb
inc
sub
push
sub
mov
pop
add
pushf
sahf
fsts
add
inc
call
test
jno
rorl
inc
add
or
jbe
pop
cld
or
xchg
rcrl
vpcmpgtw
jle
add
ret
cmpl
pusha
aas
insb
stc
add
movsl
int
rcr
inc
aam
das
push
dec
push
cmp
cmp
and
push
add
adc
lret
mull
push
inc
adc
out
in
add
mov
jbe
sub
fdivrs
loop
adc
inc
dec
cmp
add
lea
push
mov
roll
sub
add
inc
dec
mov
adc
sub
sub
cltd
or
mov
jmp
dec
pop
push
jbe
pop
mov
or
push
cs
ret
pop
mov
incb
int
outsb
lea
sarb
adc
pusha
mov
lret
cli
je
mov
sbb
xorb
push
mov
jmp
push
mov
dec
pop
adc
add
sbb
cmp
ds
mov
in
aam
enter
fmuls
es
pushf
mov
sub
lods
ljmp
mov
shr
xchg
shrl
dec
jo
movsb
jno
pop
fdivrs
mov
sub
nopl
mov
mov
inc
insl
int
mov
adc
add
fdivrs
pop
xor
insb
lret
outsl
mov
repz
jbe
test
mov
fcmovne
dec
mov
mov
andb
push
in
inc
sub
lea
movsb
lods
f2xm1
xor
push
adc
pop
xor
mov
and
mov
sub
and
mov
adc
dec
xor
mov
test
push
and
dec
adc
out
scas
and
lea
push
push
fisttpll
jecxz
lea
scas
and
xor
mov
xor
mov
mov
ss
and
popa
push
fildll
nop
and
nop
les
add
lock
cmp
push
or
cmpsb
test
mov
push
repz
rcrb
adc
nop
mov
add
rcrl
pop
jnp
pop
ja
cmp
cmp
fistl
popf
adc
sarl
sub
repnz
add
sbb
dec
add
cmc
lods
lea
in
push
add
popf
pusha
inc
dec
fistl
inc
aad
cmpb
add
outsl
mov
jge
or
push
sub
dec
sub
inc
loopne
mov
cmpl
jns
mov
jb
out
push
aad
mov
rcll
jle
sub
jno
or
mov
push
mov
fisubrs
or
push
push
dec
cmp
sub
mov
and
or
cltd
mov
and
cli
and
pushf
xor
xchg
dec
enter
enter
sub
inc
addl
push
add
push
sub
add
xchg
xor
adc
daa
fistpll
push
xchg
jo
push
push
mov
push
ss
ffreep
push
pop
adc
cltd
pop
arpl
lea
out
xlat
push
adc
dec
rclb
ficompl
fcomps
cld
cmp
adcb
scas
pop
jo
add
inc
rorb
pop
enter
push
sahf
add
dec
lea
mov
ljmp
mov
push
call
faddl
xor
jns
sbb
inc
jo
push
cmp
inc
push
jecxz
js
les
jb
and
ss
adc
popa
and
dec
inc
inc
adc
or
jne
pop
lock
cli
test
push
jmp
cmp
loopne
pop
loopne
call
xor
mov
fdivl
push
add
popa
mov
or
adc
ret
adc
mov
int3
mov
sarb
pushf
mov
or
xchg
call
mov
mov
or
pusha
packuswb
fists
cmpsb
pop
jmp
or
inc
push
enter
sub
scas
icebp
xor
inc
test
push
insb
lcall
stos
adc
dec
subb
popf
push
movsl
icebp
sbbb
ret
shll
leave
aas
xor
or
cmp
cmp
mov
sub
test
add
packuswb
push
cli
or
mov
push
shlb
or
cmp
jb
mov
sbb
cmp
stos
xorb
inc
lock
adc
adc
in
push
imul
nop
inc
jecxz
sub
adc
divl
lods
mov
lret
and
and
or
shr
mov
add
push
push
call
call
enter
shll
lret
or
xchg
or
call
clc
adc
loop
inc
scas
rorl
xlat
push
decl
outsb
or
dec
stos
jmp
jo
and
cld
fistpl
sarl
shl
or
add
and
not
and
or
sub
fldl
into
mov
push
shr
sti
sbb
or
sti
add
mov
push
lcall
mov
std
jmp
mov
decb
jl
sbb
andl
sti
nop
and
xchg
nop
jns
adc
lds
subb
xchg
lret
dec
push
adc
mov
pop
cwtl
jns
cmp
mov
inc
xor
xor
and
addl
mov
ja
sub
push
aas
push
jg
roll
cmp
dec
and
cmp
xlat
add
lock
loop
or
inc
mov
testl
out
push
ret
push
test
dec
jae
jp
mov
sbb
movups
out
lret
or
xor
icebp
add
lret
mov
pop
shr
cmp
push
iret
cmp
push
sub
lock
fucom
and
nop
imul
bound
scas
lret
fsts
dec
cmp
xchg
jno
std
push
sub
push
adc
fs
lret
add
and
ljmp
repnz
cmpsb
movups
clc
enter
cmp
and
lea
mov
push
push
aas
ds
in
or
ljmp
pusha
clc
push
fistpl
bound
sbb
pop
add
and
shlb
and
jmp
js
mov
rclb
popa
xor
je
xchg
out
aad
adc
pop
adc
jo
out
shlb
cli
je
xchg
jns
lcall
stos
mov
out
xchg
test
add
pop
mov
das
mov
and
ret
pusha
inc
mov
ret
mov
mov
push
adc
add
loope
mov
or
mov
into
jmp
movups
xchg
and
adc
cld
cmpsl
inc
daa
aad
fisubrl
mov
out
cmpsl
mov
out
push
insb
cwtl
push
or
mov
push
iret
aaa
fucomp
or
call
loope
out
and
sub
orl
pop
insb
cli
imul
ret
xchg
or
ret
push
lret
movsl
mov
dec
dec
and
push
xchg
adc
jmp
daa
int
into
pushf
sbb
adc
inc
and
int
mov
push
loope
pop
in
icebp
dec
nop
das
fldenv
decb
add
mov
out
int
pusha
dec
mov
insb
shrl
inc
stc
mov
clc
mov
or
mov
xchg
sti
pop
cmp
clc
rol
dec
mov
sub
je
imul
cmc
into
or
mov
dec
sub
adc
push
les
xor
cwtl
inc
cmp
jmp
fdivrl
fbstp
fdivs
into
mov
mov
xor
adc
pop
sub
shlb
shl
cmp
fisttpll
push
fists
and
insl
push
adc
or
shr
cmpl
xor
fs
and
push
sbb
jge
or
in
lcall
mov
xlat
xor
fisttps
stc
xor
mov
mov
lret
test
jno
lcall
mov
int
lret
pop
punpcklbw
push
xor
xor
fcomip
out
std
xor
sbb
fidivs
cld
outsb
jo
mov
cs
pop
ret
lret
xor
jle
sub
ret
ret
data16
sub
daa
mov
push
std
cmp
cmp
aad
adc
fidivl
fbstp
sub
call
add
rorl
add
cmp
cmp
aam
ljmp
jmp
sbb
cltd
gs
cmpsb
vcvtpd2dqx
into
jno
xor
jl
pop
xchg
loopne
into
jge
jg
sub
cmp
push
inc
push
mov
punpckhwd
lods
loopne
or
pop
loopne,pt
mov
sub
xchg
mov
adc
or
sahf
iret
cmp
dec
push
stc
xchg
ljmp
inc
push
or
xor
les
push
xchg
outsl
cmp
xor
stos
add
pusha
and
xor
jo
xchg
pusha
xchg
icebp
inc
sub
in
xor
adc
sbb
push
lcall
and
decb
loopne
fsubrl
int3
or
push
les
push
xchg
ret
xchg
dec
mov
call
add
push
push
insb
push
shll
and
push
sbb
and
inc
into
cld
loopne
fbstp
dec
jle
outsl
jmp
and
movsl
adc
add
sub
inc
jmp
leave
xor
dec
in
cltd
aas
adc
add
inc
addb
jns
mov
adc
dec
jmp
scas
lea
ja
cmpb
loopne
jb
jmp
cmp
out
dec
xor
sbb
loopne
movb
cld
ss
sub
shll
inc
xchg
ss
roll
popf
jmp
pop
mov
daa
mov
fimull
imul
test
mov
push
inc
or
push
mov
and
cmpsb
int3
sbb
sbb
mov
sarb
dec
adc
pop
fucomp
or
push
xor
xacquire
lahf
lods
mov
or
and
leave
xchg
push
rcrl
dec
pop
fldcw
shl
add
pop
fs
xchg
loop
add
dec
test
int3
mov
jp
es
mov
inc
dec
add
movl
or
mov
mov
mov
xor
push
sbbb
sub
mov
sub
mov
or
inc
and
push
decl
adc
adc
add
lods
add
pop
mov
pop
cmpb
pop
sbb
and
mov
loopne
or
or
je
mov
add
jmp
cs
add
cmp
mov
std
iret
push
cli
mov
xchg
push
push
sbb
push
inc
das
imul
out
adc
dec
and
sbb
imul
or
mov
cwtl
jmp
cmp
ja
sub
mov
imul
mov
ds
vmovd
pop
repnz
sti
lret
mov
aaa
ljmp
rep
jl
xchg
lock
sub
out
or
mov
addl
xor
add
xor
into
out
push
cmc
idivb
push
mov
jae
incl
jnp
sarl
in
in
ljmp
mov
push
icebp
and
mov
int
sbb
sar
lea
test
push
sahf
jne
sbb
cmc
jae
out
addb
xchg
rcll
cs
sbb
out
cmp
add
inc
pusha
inc
or
stos
mov
inc
xchg
sbb
ret
aas
adc
lods
mov
inc
ret
lea
sti
push
lock
pusha
add
mov
test
pop
test
cmp
or
dec
mov
mov
rcrl
lea
pushf
mov
jb
or
push
shlb
cmp
push
cmp
cld
lock
fcmovne
pop
push
pop
or
add
jnp
push
or
test
or
cli
sbb
test
push
adc
and
fwait
xor
push
jecxz
out
leave
cmpb
and
orl
iret
mov
cmp
shr
aas
fisttpll
mov
inc
cmp
jae
insl
xor
sbb
mov
test
xlat
ret
push
mov
mov
adc
loopne
mov
sub
sbb
xor
outsb
loopne
sub
test
push
pushf
or
xchg
or
es
jl
or
shll
xchg
add
mov
pop
ret
insl
jge
push
adc
pop
jle
jmp
push
xchg
dec
adc
mov
push
sti
add
mov
decb
shrb
inc
cmp
mov
pop
mov
xor
fildll
jnp
shlb
mov
inc
dec
or
xor
or
sbb
insl
pop
clc
test
add
dec
fwait
add
or
add
fstpl
lret
cld
push
or
call
or
and
dec
setge
sbb
push
xor
outsb
lds
data16
jl
push
mov
nop
lock
pop
in
in
ss
lods
jnp
or
push
cmpb
inc
je
adc
sub
mov
adc
cltd
mov
xchg
xor
push
cwtl
sub
outsb
arpl
lcall
lock
xor
cmp
lea
leave
push
fdivrs
lret
iret
sahf
inc
loopne
cmp
out
clc
out
test
loop
pop
ja
xchg
nop
adc
or
in
xchg
push
test
popf
push
stos
test
push
jo
mov
jle
inc
je
dec
adcl
dec
cmp
in
mov
mov
add
mov
add
inc
xchg
in
aam
mov
test
addb
bound
mov
cmp
adc
push
adc
ljmp
cmp
xor
les
push
push
pop
xor
ss
sbb
test
adc
xor
movl
shr
cmp
push
hlt
and
inc
adc
dec
data16
and
cmp
mov
push
roll
mov
jecxz
adc
repz
add
adc
icebp
nop
lock
orb
cmc
rcl
jecxz
int3
mov
test
mov
ss
enter
xor
mov
mov
jp
sub
xor
push
or
push
sbb
imul
insl
mov
xchg
sbb
pop
sub
loopne
sbb
in
inc
mov
ret
shrb
inc
mov
mov
shll
call
mov
push
jl
std
adc
dec
addl
add
aaa
shl
or
sub
les
xor
ljmp
pop
inc
loope
data16
lock
jmp
adc
es
add
aam
and
sub
push
push
loopne
add
mov
loopne
sub
fbld
ret
jne
js
icebp
je
inc
dec
mov
mov
mov
inc
scas
test
adcb
jno
mov
mov
fadd
adc
stc
adcl
jl
mov
rcr
insb
test
repnz
lea
adc
into
sub
ror
idiv
inc
adc
int3
inc
inc
mov
mov
mov
or
loopne
mov
adc
mov
sub
inc
add
dec
jne
push
fmuls
add
mov
adc
inc
loope
or
sbb
ljmp
jecxz
push
mov
sbb
cmp
push
cmp
push
lds
push
popa
pusha
pop
pop
or
mov
inc
cmp
jecxz
test
mov
xchg
icebp
mov
addb
push
add
cmpsb
push
orb
adc
pusha
sub
and
nop
jno
add
mov
inc
jecxz
mov
test
xchg
imul
cwtl
das
aam
mov
nop
add
xor
bound
pop
dec
add
mov
ss
mov
add
xor
push
jbe
pop
mov
cmp
pop
cmp
mov
jns
mov
lock
or
nop
xchg
or
or
or
movsb
push
loopne
xor
adc
das
adc
pop
adc
in
and
das
adc
adc
adc
pop
test
push
mov
outsb
add
adc
push
and
adc
add
lock
push
rclb
sbb
pushf
sub
pusha
shll
add
dec
adc
cmc
int
push
fisttpll
sbb
ds
xchg
pop
sarb
push
fisubrs
mov
xchg
shrb
repnz
dec
cs
mov
negl
push
mov
push
mov
jl
and
push
add
scas
jmp
pushw
pop
inc
sub
and
arpl
jnp
push
ss
and
push
enter
push
adc
inc
and
js
movb
pop
add
nop
add
rcr
and
popl
mov
or
xor
push
or
xchg
xorl
inc
jns
pop
or
sub
imul
xchg
lods
inc
pop
mov
and
xchg
add
and
mov
adc
jecxz
pop
push
jo
movsb
ja
pop
jl
dec
sbb
aaa
mov
adcl
xor
push
sbb
add
fmuls
push
pop
add
divb
or
pop
sti
call
jmp
push
inc
push
push
fmulp
sub
or
xchg
adc
push
mov
jbe
sbb
or
daa
sbb
imul
es
dec
add
jae
push
jp
inc
mov
xchg
jge
pop
inc
aaa
xchg
and
mov
sub
ret
dec
sbb
pop
pop
and
ret
adc
mov
mov
pop
je
fdiv
bound
test
xchg
push
or
fstpt
inc
pop
ror
and
dec
sbbl
scas
adc
jne
cmp
mov
push
add
adc
sbb
cmp
ss
sbb
and
xchg
or
xchg
mov
jg
dec
adc
mov
insb
inc
adc
mov
pop
adc
adc
jg
mov
cmp
xchg
jno
push
lea
scas
add
pop
mov
add
das
add
je
push
dec
leave
sbb
sahf
add
inc
add
cmp
and
pop
push
dec
mov
sub
pop
inc
push
dec
outsb
push
dec
lahf
pop
dec
fistpl
inc
sbb
adc
rcll
pushf
lds
and
mov
test
inc
pop
cmp
mov
mov
push
mov
addl
pop
push
push
sub
add
cmp
fbld
and
add
cmpsb
mov
and
push
aas
dec
add
mov
je
dec
jecxz
xchg
push
fistl
sbb
cld
push
sub
inc
push
mov
lock
dec
add
push
xlat
sub
xor
or
daa
mov
cmpsl
inc
cmpsb
adc
in
mov
ja
push
jl
cmp
rcll
fcmovb
and
sbb
icebp
mov
sbb
push
adc
inc
cmp
fidivl
dec
jmp
mov
jl
mov
fdivl
push
adc
push
lea
lods
lds
xor
cmp
inc
shll
and
rclb
xchg
add
iret
mov
mov
shlb
or
mov
cmpsl
lahf
jne
or
rolb
jg
les
jne
cmpb
xlat
push
pusha
mov
ds
pusha
mov
adc
fcmovbe
imul
inc
enter
and
enter
rolb
lds
inc
push
mov
mov
sub
add
sub
icebp
lret
mov
push
push
dec
inc
enter
dec
fadds
test
jecxz
loope
adc
push
sahf
jne
loopne
mov
arpl
mov
rorl
mov
test
call
mov
sbb
ret
cmp
xchg
outsb
sub
jbe
xchg
repnz
jno
and
mov
jmp
repnz
lods
and
ret
sbb
addb
ret
clc
enter
jo
jb
push
adc
jb
mov
mov
push
push
mov
outsl
jo
mov
jbe
xorl
pop
pop
mov
scas
and
mov
std
push
and
push
sbb
lahf
test
lods
pop
and
add
ret
jns
fs
xchg
rcll
adc
rcrl
daa
dec
subl
pop
stos
push
inc
xchg
popa
loop
xor
sahf
test
mov
fldt
push
arpl
lods
push
inc
and
sbb
dec
add
fdiv
call
sbb
arpl
sub
push
icebp
inc
sub
popa
pusha
nop
mov
test
xor
push
shrl
cwtl
mov
pop
push
bound
jge
bound
pusha
add
adcb
inc
adc
arpl
sbb
sub
xor
mov
cli
sub
xchg
sub
mov
push
sub
dec
mov
adc
sub
mov
adc
aas
jb
add
push
cmpsb
jge
lret
add
push
or
xchg
add
lea
bound
push
jbe
jmp
sbb
into
add
scas
mov
rcrl
add
into
push
mov
add
sub
add
int3
pop
mov
test
mov
dec
xor
mov
sbb
and
sbbb
mov
repz
bound
mov
dec
mov
aam
fiaddl
dec
nop
ja
mov
push
out
add
mov
inc
xlat
out
into
and
add
in
sti
jmp
push
jo,pt
push
push
mov
call
mov
xchg
sbb
mov
push
orb
pusha
inc
mov
sub
mov
inc
or
add
push
inc
cmp
cmp
int
je
pop
add
inc
mov
imul
or
popf
adc
pop
les
inc
push
add
fistpll
jno
das
or
leave
mov
inc
or
popa
test
xor
cmp
xchg
jb
adc
pop
push
push
xchg
orl
jo
pop
arpl
jae
sti
inc
mov
adc
pop
or
dec
inc
dec
push
xor
mov
add
insb
and
sub
xor
cli
pop
ret
bound
adc
lret
add
es
add
dec
cmpsb
xchg
jnp
mov
repz
cwtl
cmp
test
popa
fstp
or
push
add
clc
dec
dec
add
add
sahf
sbb
mov
lock
call
pop
xor
outsb
xchg
dec
inc
mov
fdivs
pushaw
or
pusha
xchg
rorb
shlb
cmp
sub
push
ss
test
cmp
iret
sarl
iret
scas
jecxz
fstps
or
and
repz
ds
pop
push
push
cmp
repz
xchg
mov
iret
mov
cs
pop
int3
and
pop
aas
inc
xor
fs
mov
repz
push
pusha
push
push
or
ja
mov
fistpl
fisubl
outsl
sub
push
fdivl
data16
and
inc
fstpt
sbb
jo
fwait
pushf
mov
xor
pushf
or
in
dec
push
or
or
enter
mov
outsb
je
sbb
xor
fsubl
addl
or
xor
add
add
mov
inc
adc
pushf
dec
inc
sub
push
dec
fdivp
sarb
sub
inc
pushf
mov
mov
mov
xor
adc
push
and
and
nop
pop
mov
push
jle
mov
xor
sub
push
repnz
add
inc
cltd
xorl
bound
lahf
pusha
push
sub
mov
ss
mov
adc
sub
cmp
adc
loop
or
loop
add
push
pop
cmp
xchg
sub
dec
or
inc
mov
add
data16
sub
inc
cwtl
cmp
dec
mov
mov
adc
pop
jmp
aam
ret
lret
sbb
lahf
cmp
push
test
xor
push
push
xchg
cmpsl
cmp
and
and
add
cltd
mov
rcrl
mov
sti
adc
inc
sub
adc
fadds
push
addr16
movsb
sbb
sahf
or
jns
jo
push
and
add
fbld
inc
add
push
loopne
pop
stc
adc
add
pop
xor
xchg
dec
add
loope
fmuls
dec
xchg
test
cs
rorb
sbb
sbb
cmc
sub
enter
mov
ret
mov
dec
fnstcw
cli
adc
mov
out
dec
lret
shrb
push
xorb
pop
xor
lahf
pop
or
mov
mov
movl
aam
test
pop
nop
in
mov
pop
mov
and
insl
and
aas
adc
popl
fs
outsl
icebp
mov
mov
and
sbb
in
xchg
ljmp
adc
xor
add
inc
and
pop
dec
push
add
or
sub
mov
pusha
sbb
jecxz
pusha
adc
fmull
xstore-rng
cmpsl
add
adc
cmp
adc
pusha
call
orl
js
test
dec
fwait
clc
mov
stos
cli
jmp
or
push
bswap
inc
push
scas
js
dec
jg
adc
rcrb
roll
fcmovnu
push
pusha
movsl
adc
pop
xor
fldpi
mov
dec
sbb
mov
lahf
fwait
push
sub
addb
jns
jnp
lea
je
cmpsl
outsl
test
test
cmp
sahf
mov
movlps
jle
movl
xor
or
lcall
mov
pusha
cli
dec
mov
lea
fcomi
lcall
push
jle
push
sbb
push
inc
clc
mov
dec
scas
lret
mov
rolb
js
add
pop
leave
inc
mov
push
je
sete
bound
mov
mov
xchg
mov
ret
pop
mov
push
es
sbb
daa
testb
or
call
or
push
nop
das
mov
andb
mov
jb
or
mov
xor
outsl
ret
andb
jno
subb
out
out
shll
pushf
std
push
add
jge
roll
sbb
add
sub
adc
add
mov
loope
pop
push
or
cwtl
jae
inc
add
xchg
cltd
push
enter
js
sbb
xor
xchg
test
call
xchg
rorb
int
rcrb
sbb
and
cmp
adc
jecxz
cmp
lahf
hlt
sbb
sarl
or
or
fiadds
mov
pop
movsb
sbb
mov
push
mov
dec
loope
push
add
in
cmp
adc
ljmp
iret
and
adc
or
rol
leave
or
ret
sbb
add
pop
or
or
push
add
lret
mov
inc
cli
sub
insb
push
push
or
xor
adc
mov
daa
lock
or
push
mov
xor
fstpt
fmul
push
test
or
or
jmp
lock
adc
out
movb
aaa
mov
gs
scas
adc
cmp
je
push
mov
dec
xchg
sub
xchg
lret
daa
iret
repz
pushf
mov
dec
mov
mov
inc
enter
out
mov
lret
pop
jns
sahf
popa
dec
dec
leave
adcl
sbb
mov
jno
cmp
ret
xchg
leave
and
mov
jo
xor
sub
and
adc
arpl
addr16
adc
fcoms
adc
push
loopne
jmp
add
enter
xor
pop
sbb
add
push
jmp
xchg
inc
icebp
adc
xor
scas
jg
add
mov
push
add
dec
sub
mov
sub
pop
andb
es
shl
mov
inc
es
neg
roll
cwtl
pop
jmp
fs
xlat
xchg
xchg
and
sti
stc
pop
or
add
movsb
shrb
adc
xorb
pop
pop
inc
sub
dec
lods
xor
pop
sbb
adc
outsb
or
push
ss
pop
cmpsl
std
lret
sbb
and
mov
inc
push
lcall
xorb
adc
lock
xor
ret
inc
cltd
add
data16
notl
jecxz
int
mov
mov
sbb
sub
sbbb
outsl
cmp
or
movsb
stos
test
add
mov
mov
cmp
lock
adc
xchg
pusha
pushl
inc
sbb
scas
fs
mov
lcall
push
jo
add
pusha
pop
xchg
insl
js
mov
jo
outsb
pusha
testb
stc
ret
sub
sbb
lcall
nop
jecxz
outsb
sub
push
cmp
fsubl
fisttpll
pop
jae
clc
adc
xor
sar
mov
insl
dec
loope
jo
sahf
mov
stos
pop
mov
xor
pop
loop
mov
xor
jno
inc
dec
add
mov
sbb
xchg
cmc
inc
inc
push
mov
daa
inc
adc
arpl
dec
sub
loope
aad
mov
out
push
add
loopne
jnp
or
mov
icebp
or
mov
cmp
cmpl
inc
jae
ljmp
insl
adc
inc
lea
xlat
xlat
out
push
addr16
movsb
negl
dec
adc
or
push
test
push
pusha
push
das
inc
lods
mov
push
push
ret
call
in
inc
xchg
xor
pusha
ss
add
and
pop
mov
sbbl
in
aas
push
ret
inc
push
xchg
popa
pop
inc
decl
jne
ret
in
or
jl
cmp
je
and
sub
mov
test
imul
pop
lds
inc
cmpsb
aas
xor
lock
push
lcall
and
addl
cmp
sbb
mov
xchg
sbb
inc
add
inc
fisttps
xor
mov
lret
push
outsb
dec
add
or
add
les
or
aam
fwait
pusha
loopne
mov
test
inc
inc
push
push
imul
out
popa
sub
subb
ret
jbe
sbbb
test
or
aad
mov
mov
or
mov
xchg
enter
mov
and
cltd
movb
cmpsl
js
ret
pop
ret
test
hlt
lea
or
xor
shl
push
sub
and
add
stc
push
adc
fidivl
fimuls
ret
pop
or
mov
or
add
pop
push
loop
or
xor
push
jns
sbb
or
push
enter
dec
dec
popf
shll
xchg
test
ficoml
jecxz
test
jg
test
inc
pop
inc
push
repz
adcl
or
add
mov
mov
xchg
dec
and
cltd
rorl
loope
mov
add
dec
lcall
fildl
sahf
fisubrl
movsl
add
mov
mov
and
inc
loopne
xchg
je
push
add
fmuls
pop
or
sbb
ret
inc
mov
les
add
aad
mov
adc
add
or
shl
iret
and
push
lds
rclb
jg
inc
pushf
mov
shrl
sub
dec
call
pop
jo
inc
sub
insl
test
or
int
testb
or
loope
add
jl
jmp
divl
inc
pusha
mov
je
fs
decb
fbld
inc
std
sub
jmp
cmp
mov
lret
add
and
pop
not
or
inc
pushf
loope
loopne
andb
sbb
rolb
push
add
in
inc
jp
pusha
pop
jp
or
add
mov
lds
xchg
sub
xor
xor
jb
mov
rorb
sbb
lods
pop
shlb
addb
les
aam
lret
and
cmp
lret
hlt
movsb
mov
sub
stos
aad
sub
add
sets
dec
and
std
pop
or
push
mov
sbb
cmp
dec
and
gs
xor
imul
mov
outsb
push
divl
mov
fwait
dec
push
adc
xchg
mov
xchg
cmpsb
jmp
icebp
int3
push
je
out
je
and
ret
pop
out
lret
adc
sbb
cmp
sub
aam
xor
int
dec
adc
mov
jb
es
nop
decl
add
and
lea
add
adc
mov
and
or
xor
into
js
fiaddl
aaa
int3
sbb
pop
adc
das
outsl
inc
into
push
sbb
imul
adc
aad
push
movsb
sub
push
mov
or
js
inc
xor
ret
jle
sbb
test
ds
mov
cmpsb
shll
and
sub
pop
xor
or
adc
dec
cmpsb
nop
lea
mov
outsb
dec
jl
mov
pop
xor
mov
dec
jle
mov
es
aas
push
dec
add
test
nop
outsl
sbbb
stos
rolb
add
movsb
mov
popa
xor
xchg
test
push
loopne
jmp
or
dec
xchg
outsb
popl
add
inc
rcrb
xchg
loope
or
pop
imul
adc
add
cli
lret
mov
or
inc
test
ret
jne
mov
insl
cli
add
or
or
sahf
mov
cmp
push
push
pusha
pop
add
or
jo
pop
push
je
ja
sbb
ret
add
jb
push
push
inc
movsl
pop
call
jmp
das
sbb
scas
sti
add
loopne
push
pop
adc
xor
or
cmp
and
xor
adc
pop
push
lods
cmc
ret
fs
out
mov
lock
inc
aad
push
jnp
xor
outsl
jns
push
loope
adc
in
lea
push
push
outsl
test
gs
xchg
subb
sti
lods
ret
test
xchg
mov
push
inc
jmp
xchg
or
mov
out
xor
sub
dec
js
push
pop
sahf
mov
out
add
fwait
xor
inc
popa
sar
lret
lret
inc
push
mov
push
mov
mov
cmp
jle
add
cld
sub
sbb
dec
jo
sbb
xchg
mov
fldpi
inc
or
cmp
mov
fs
mov
movsb
dec
and
lea
lea
mov
mov
ret
inc
cmpsl
imul
scas
mov
adc
push
xor
inc
cmp
stc
push
cmp
mov
ret
cmp
pop
mov
cld
add
mov
adc
pop
mov
addl
or
adc
orb
out
daa
testl
in
repz
push
pushf
jl
pop
or
or
jne
xchg
mov
sub
inc
mov
lea
test
rcr
enter
test
int
xor
data16
mov
xchg
sub
movsl
std
das
add
and
mov
add
shrl
test
fs
mov
mov
mov
mov
and
ljmp
add
into
xchg
dec
js
push
xor
or
sub
push
in
xor
test
fcomps
movsl
cmp
jecxz
sbb
insl
or
push
dec
nop
leave
sub
in
or
xchg
sbbl
mov
pushf
out
in
jb
xchg
pop
pop
mov
pop
push
xchg
divl
jb
insb
sbb
mov
orps
call
adc
rcr
cmp
mov
push
push
int
push
mov
push
push
xor
add
inc
push
push
std
cvtps2pd
cli
jne
sbbl
jecxz
mov
push
xor
ds
rcll
and
movsl
dec
jp
push
lea
lret
add
mov
aas
je
loope
jp
lods
pop
jae
push
shlb
fwait
xchg
mov
pop
xchg
dec
enter
xchg
jo,pt
xchg
js
push
movsl
icebp
lahf
je
daa
cs
ds
pushf
or
in
jl
dec
testl
fstpt
fs
jnp
clc
aam
push
jp
or
cmp
inc
add
pop
xchg
jb
fbld
adc
call
sub
test
add
jl
or
iret
sahf
inc
add
imul
lahf
mov
sub
test
jns
mov
sbb
add
mov
sub
cmp
imul
push
sbb
data16
dec
or
mov
scas
add
les
dec
mov
push
ret
and
fdivrs
cmp
sub
popa
imul
dec
movsb
sbb
mov
and
je
dec
push
push
jae
dec
push
pop
fistpl
outsl
cmc
aaa
add
jecxz
xchg
push
pushf
jp
inc
sub
push
mov
je
in
inc
and
add
xchg
sbb
xor
pusha
xlat
add
repz
rolb
gs
test
je
add
add
adcl
jge
add
sub
pop
out
enter
pop
push
push
sbb
pop
icebp
sub
adc
loope
test
cmp
cmc
fldt
shrb
sahf
and
lock
inc
and
adc
sub
mov
or
movsl
mov
je
mov
call
sbb
cli
add
sub
pop
push
pop
dec
movsb
nop
sbb
push
test
pusha
push
cltd
sub
mov
lea
or
mov
mov
loopne
mov
test
adc
sti
dec
pminsw
mov
sub
xor
adc
sbb
adc
clc
lcall
jne
aaa
or
insb
scas
inc
xchg
cwtl
push
inc
and
je
inc
mov
pop
enter
jno
xchg
pop
imul
mov
arpl
jbe
sahf
cwtl
sbb
femms
fnstenv
ret
push
jb
pop
xchg
testb
pop
add
stc
add
xchg
mov
jb
jmp
inc
ret
test
cmp
pusha
adc
andl
add
mov
push
in
add
dec
push
mov
add
dec
sbb
subb
mov
or
outsl
repnz
add
inc
add
stos
sub
add
add
mov
das
or
inc
xor
or
add
mov
cmpsl
stc
cld
or
clc
mov
mov
jo
jmp
add
sbb
cmc
pop
push
sub
bound
lcall
nop
mov
dec
je
xchg
cmp
xor
cld
sahf
sbb
adc
xor
xor
cmpsl
adc
add
cmp
pop
in
push
fadd
test
push
dec
mov
pop
daa
gs
ljmp
push
iret
fimull
lock
mov
inc
dec
sbb
clc
stos
or
clc
sub
cmp
push
or
dec
mov
pop
clc
out
inc
cmp
repz
out
addr16
out
adc
jns
lods
cmp
mov
mov
or
addb
fsubl
jne
in
movsl
dec
ja
pop
fdivrs
shll
sbb
dec
push
insl
lock
cmp
push
cmp
mov
insb
xchg
call
sarl
mov
scas
cmc
daa
jne
or
in
xlat
adc
shlb
mov
jmp
inc
dec
sub
roll
add
push
jecxz
or
dec
xchg
out
pop
mov
xchg
sbb
xchg
sar
and
xor
adc
jmp
sub
adc
push
lock
sub
dec
push
jmp
add
dec
lock
and
pop
pop
inc
dec
adc
imul
das
mov
ret
xlat
sbb
lock
std
sub
adc
aad
aaa
sbb
xchg
sbb
xchg
sbb
lods
adc
or
adc
push
mov
adc
les
and
cmpl
jne
sbb
imul
jb
xor
std
call
sub
push
add
add
and
mov
ljmp
xchg
subl
mov
push
imul
mov
popf
jo
add
or
push
adc
cs
jl
inc
test
call
outsl
arpl
push
into
pop
sbb
ret
push
mov
inc
jo
push
rolb
std
xor
loope
rolb
cli
push
ret
push
mov
jl
cmp
jge
or
das
mov
popa
fxch
pop
bound
inc
and
cmpsl
mov
aas
cmpl
push
dec
gs
and
lea
adc
test
pop
out
adc
into
mov
rcll
ficompl
incl
cli
clc
pop
or
push
js
mov
lock
pop
cmp
cmp
xor
movsb
sarb
std
pop
std
inc
adcb
hlt
sbb
push
inc
jge
inc
inc
out
add
push
push
sbb
ret
push
dec
sub
xchg
adc
enter
icebp
pop
sbb
fsubrs
dec
aad
mov
inc
int3
mov
jns
push
xchg
xchg
nop
stos
cltd
lahf
xor
bound
xchg
dec
push
or
ret
push
lods
sub
mov
push
mov
and
inc
push
lea
xor
push
fcmove
inc
test
or
pop
rcll
mov
sbb
mov
mov
cmp
push
xor
jg
cmp
into
inc
insb
pop
inc
add
inc
rolb
fnstsw
jmp
test
pop
sarl
adc
xor
inc
adc
mov
fstpt
pop
jne
adc
add
jl
shrl
mov
xor
stos
or
dec
push
pop
push
mov
and
fs
xchg
dec
cmpsb
rorl
fists
jo
add
ljmp
inc
add
push
sti
mov
dec
leave
loope
pop
sub
fwait
ds
inc
xor
push
movsl
xor
xor
int3
xchg
mov
nop
mov
or
sub
push
je
lret
sub
fwait
sbb
pop
movsl
ret
push
mov
negl
inc
jne
addr16
inc
push
popa
pusha
inc
imul
dec
dec
mov
jne
cmp
jecxz
jmp
sub
xchg
add
daa
nop
inc
add
cmp
test
fildll
dec
cmp
xchg
and
xchg
in
inc
orb
mov
mov
and
inc
jle
inc
inc
push
sub
and
inc
cs
adcb
fdivl
movl
loope
add
aad
and
cld
push
mov
pop
icebp
mov
adc
or
fidivrl
js
jo
dec
test
lock
cs
lea
jle
fcmovu
rcr
rol
flds
lret
sbb
push
mov
mov
out
movsl
dec
jge
shl
call
jecxz
push
mov
mov
popa
pop
xchg
andb
or
xchg
mov
outsl
add
pop
pusha
mov
inc
mov
or
xchg
mov
mov
push
in
imul
mov
sub
nop
ret
loopne
and
xor
add
fcomps
cmpsl
or
xlat
lret
test
pop
add
inc
test
cmpsl
sbb
ds
fcoms
xchg
jo
shll
inc
in
sub
sbb
inc
ds
mov
xlat
xchg
add
adc
rclb
mov
cmpsb
call
cmp
cmp
ds
sbb
xor
test
adc
jnp
or
out
imul
sbb
pop
div
leave
pusha
dec
mov
dec
adc
call
or
cmpsb
sub
stc
dec
add
inc
fistpll
dec
into
push
push
push
adc
lea
sbb
movsb
pop
repnz
add
sbb
fiaddl
ret
jle
repz
add
add
or
push
sbb
jmp
push
fs
fcompl
mov
push
int
inc
pop
sub
inc
aam
mov
mov
sbb
and
xchg
inc
or
imul
push
popa
xor
mov
sbb
cmpl
push
push
jno
dec
shr
adc
cmpsl
add
inc
dec
jl
sbb
pop
sub
arpl
cmp
addr16
gs
pop
xorl
jmp
xchg
push
xchg
inc
mov
pop
xrelease
sub
xchg
push
or
xor
inc
loope
sub
pop
inc
push
push
add
jg
add
scas
mov
loopne
jmp
pop
add
addr16
data16
into
or
adc
jo
pop
push
push
daa
sbb
xchg
inc
mov
mov
pop
or
lock
add
mov
mov
loopne
fdiv
stc
movb
shl
pop
push
sub
outsb
jo
hlt
popf
rclb
sbb
jbe
sub
xlat
push
shlb
cmp
insb
push
outsb
mov
and
cmpsb
mov
or
push
loope
roll
cmpb
add
jle
xor
nop
std
movsb
adc
xchg
dec
jmp
aaa
sub
in
pop
xchg
push
push
out
mov
lea
cmp
jne
push
cmpl
mov
mov
inc
or
mov
pop
ss
inc
adc
clc
mov
mov
push
push
inc
add
xor
std
cmp
push
subl
insb
mov
popf
push
rolb
jno
jl
rolb
jbe
mov
mov
sbb
pop
push
push
jo
fs
movsb
adc
inc
hlt
or
pop
pop
aad
jmp
mov
pop
aad
mov
rorb
add
adc
std
pop
lahf
push
shl
aam
test
loop
mov
add
shrl
mov
lea
mov
xchg
lods
movhps
add
cmp
add
dec
or
or
loope
push
jo
or
sub
inc
push
dec
lock
push
push
xor
test
or
push
xlat
loopne
push
or
dec
mov
or
pop
mov
push
mov
or
cmp
aas
out
push
sub
ss
and
in
mov
es
push
test
push
or
push
jecxz
xor
jne
adc
sarb
push
fsubs
push
ret
or
adc
xchg
push
push
adc
or
jmp
inc
and
pop
in
sub
or
dec
clc
loope
aam
pop
or
and
jb
mov
adc
add
dec
sbb
fldl
js
in
roll
rolb
daa
pop
mov
push
push
push
mov
lret
sbb
and
mov
fcoms
inc
loope
roll
lret
inc
add
repz
cwtl
sub
inc
inc
in
sub
adc
dec
roll
adc
ret
xchg
dec
in
push
icebp
push
in
addr16
pop
xchg
shll
popf
push
and
fs
inc
push
and
xchg
inc
sub
in
adc
adc
jne
les
jl
enter
inc
rolb
pop
push
in
sub
push
or
xchg
imul
push
dec
loopne
add
pop
xor
jp
push
or
push
out
push
mov
imul
jns
sub
inc
pop
push
xchg
mov
or
xor
int3
sbb
rorb
cmp
xor
dec
or
xor
mov
cld
test
adc
aas
xor
int3
pop
ret
pop
adc
je
cmp
add
cmpsl
xor
adc
je
mov
jp
lock
pushf
add
or
shlb
xor
add
sub
imul
iret
push
inc
pushf
or
mov
and
push
mov
push
or
add
adc
mov
xor
mov
fwait
dec
lret
fdivrs
add
xchg
adc
out
jge
loopne
push
sbb
ja
movsl
repz
mov
or
mov
sub
cmp
adc
sbb
sti
dec
add
mov
into
cmpb
and
push
pop
jecxz
adc
inc
test
add
sub
push
pop
or
jmp
jne
mov
push
mov
icebp
mov
adc
adc
xchg
xor
push
jns
mov
dec
lods
push
push
imul
mov
inc
adc
push
inc
sbb
inc
pop
inc
adc
sub
cmc
push
sub
jns
fsubrl
sub
adc
xchg
add
push
push
push
pusha
lcall
add
mov
adc
push
or
xor
pop
mov
sub
aas
cmc
add
dec
lret
dec
lret
pusha
pop
adc
imul
adc
xchg
popf
sub
es
add
xlat
rcll
ret
dec
add
je
pop
into
xor
jle
mov
cmp
ret
in
mov
sbb
shlb
outsl
and
cmp
and
rclb
es
lods
pop
and
fisubl
push
sbb
or
pop
cmpl
or
out
jle
push
cld
paddsw
lret
mov
adc
fstl
pop
jno
sbb
cmpb
xchg
aaa
and
pop
add
ss
dec
fstpt
xlat
sbb
inc
int
int3
push
jb
xor
add
cs
fidivl
or
loope
add
push
lcall
sub
mov
cmc
adc
jno
aam
push
mov
pop
xchg
or
xchg
pusha
ffree
orl
add
dec
xor
jae
mov
loop
push
cmp
push
push
scas
mov
sbb
es
xor
adc
outsl
pop
push
jmp
xor
jp
cmp
shl
jo
loopne
dec
mov
sub
mov
loopne
dec
rolb
xchg
or
mov
xor
bound
cltd
nop
orb
mov
jg
adc
ds
jmp
dec
test
xchg
push
mov
dec
stos
jg
or
and
push
jmp
sbb
or
mov
or
jle
fildl
dec
les
mov
pop
push
clc
pop
flds
and
or
mov
adc
sbb
pusha
and
and
add
push
aas
in
pop
out
mov
mov
ret
push
push
add
push
sub
ja
and
popa
in
or
pop
push
rdmsr
push
or
movb
and
sub
or
jbe
and
and
add
test
pop
movsb
mov
loopne
dec
push
daa
xchg
lock
push
sub
out
jo
dec
pushf
adc
jg
add
into
push
mov
mov
mov
lock
add
imul
adc
jns
pop
lds
insb
adc
jo
sbb
stos
mov
in
je
js
mov
and
mov
decb
jl
mov
add
xchg
pop
leave
adc
xor
adc
jl
ret
sbb
and
lds
add
inc
mov
sbbb
or
fcmove
pop
les
dec
loope
jae
popf
mov
dec
sub
pop
nop
sbb
and
and
enter
ret
call
adc
mov
add
mov
mov
push
cmpb
outsb
imul
lea
pop
mov
mov
sub
les
pop
ja
mov
in
add
xchg
ja
gs
subb
aam
adc
inc
mov
sbb
lahf
clc
subps
and
lea
test
ja
jmp
or
nop
jb
inc
push
or
ret
push
imul
or
adc
sbb
pop
sub
ljmp
lret
mov
rolb
adc
cmpsb
imul
pop
xor
cmp
aaa
rclb
clc
xlat
mov
mov
imul
or
jle
add
fs
mov
clc
daa
pop
test
aam
sub
cld
out
xor
xor
stc
xor
or
xchg
mov
xchg
std
mov
arpl
xor
mov
inc
sub
push
and
mov
test
xor
fadds
pusha
jbe
xor
sbb
imul
into
into
addl
sarb
add
pop
or
dec
pushf
rorb
and
dec
cmp
add
rorb
shlb
pcmpeqw
xchg
xor
subb
sbb
sbb
pop
jo
mov
notl
pop
leave
mov
push
lea
aaa
and
sahf
push
nop
jbe
add
add
jb
add
test
mov
or
adc
adc
push
std
add
cld
mov
mov
jb
inc
mov
cmpsl
movsb
mov
add
daa
shlb
xchg
rol
insl
call
mov
push
out
aad
pop
fcoms
inc
mov
pop
pop
push
xchg
sbb
jbe
push
pop
mov
dec
je
dec
jne
dec
sbb
dec
sub
jp
xchg
movsl
pop
stos
push
or
push
push
mov
dec
test
pop
pop
out
ds
cmp
add
mov
data16
sbb
adc
mov
popa
adc
out
sbb
fwait
je
pusha
jg
fsubl
inc
dec
shlb
sbb
xor
or
cmp
and
dec
pusha
push
gs
push
mov
xchg
ret
push
cmp
lea
js
xor
scas
jle
out
jg
jno
roll
lret
ret
dec
loope
add
inc
inc
push
mov
daa
sbb
adc
push
inc
add
mov
out
out
stc
push
cmc
xor
cmp
lcall
push
in
sbb
sub
out
xchg
into
push
jp
popf
cltd
dec
push
ret
dec
ficomps
movsb
cmpsl
xorb
scas
out
push
push
sarl
jp
xchg
xor
xchg
xchg
add
and
inc
or
sub
lea
sub
xchg
or
or
sub
rol
and
or
cmp
cmp
pop
jl
fmull
dec
dec
pop
out
out
inc
pusha
stos
loope
arpl
sbb
orb
jne
mov
cmp
xchg
lahf
or
mov
xchg
push
push
jge
mov
push
pop
sbb
push
jl
xlat
jg
lea
add
push
adc
out
xchg
jo
pop
lea
pop
lcall
es
out
or
loopne
add
pop
sbb
add
mov
inc
lahf
dec
addb
jo
sahf
add
cs
push
jb
cmp
pop
adc
or
add
popf
xchg
fld
test
add
mov
add
sub
cmp
adc
lahf
shrl
test
dec
adc
jo
test
dec
pop
int3
gs
xor
push
mov
mov
insl
xchg
lea
je
gs
or
cmpsb
test
dec
cmp
xlat
and
fadds
into
daa
add
rcl
lcall
cli
inc
inc
fimull
add
mov
adc
andb
jecxz
je
ss
inc
pop
ret
adc
jae
mov
incb
pusha
push
addl
jl
cli
pop
dec
fiaddl
div
rclb
or
push
jns
mov
dec
or
rcrb
fsubl
cld
xor
push
push
loopne
dec
sub
or
sub
fcoml
in
or
dec
and
add
lea
mov
push
aam
or
xchg
daa
inc
cmp
push
les
add
cmovle
roll
push
mov
adc
fidivl
std
aas
jbe
insl
adc
add
inc
inc
imul
clc
and
mov
push
cmp
sub
orb
mov
outsl
mov
adc
sbb
fidivrs
dec
adc
gs
dec
cmp
adc
adc
test
inc
mov
nop
inc
shlb
pusha
loopne
sbb
adc
sbb
jbe
or
es
arpl
orb
sbb
in
sbb
jp
mov
mov
and
mov
mov
cli
add
out
jecxz
inc
loope
inc
xchg
push
pushf
imul
or
cld
add
addb
and
call
add
lahf
mov
testb
out
mov
push
lock
inc
addl
jo
jno
mov
pop
adc
jmp
add
ja
adc
les
mov
ret
adc
cmpsb
push
jne
xchg
inc
push
fcompl
sahf
rclb
add
mov
pop
push
xchg
sar
push
lcall
pop
mov
leave
popa
std
insb
mov
dec
sub
pop
jl
mov
adc
mov
adc
fbstp
or
outsl
jne
pop
bound
sbb
xor
add
outsl
push
cmp
cmpsl
cmc
outsb
daa
fisubl
or
into
push
cmpsl
adc
or
or
adc
sub
ret
push
dec
jle
push
mov
int3
mov
nop
xor
mov
jne
test
ret
push
pop
and
lock
cmp
or
sub
ds
shlb
push
mov
jnp
and
dec
out
decb
adc
rolb
test
call
in
cmc
outsb
test
cmp
mov
cmp
jne
shrb
arpl
sub
adc
xchg
les
pop
cmp
dec
scas
cmp
adc
jp
insb
or
sbb
xor
push
jmp
add
jo
inc
xchg
mov
scas
add
inc
pop
into
add
xor
fldt
and
cmp
aaa
and
jbe
jb
push
sub
dec
dec
loopne
adcl
push
or
adcb
or
pop
cmp
je
das
xor
sbb
push
and
dec
rorb
push
xchg
pop
add
push
fimull
push
mov
cli
std
mov
push
sub
pop
je
repz
or
repnz
push
xor
push
nop
lods
inc
lds
out
push
rcrb
push
add
add
in
sbb
mov
shll
or
or
or
mov
add
xchg
add
pandn
inc
or
adc
push
sub
data16
in
pop
push
je
mov
loopne
dec
sub
mov
mov
gs
fwait
sbb
mov
inc
lock
jl
scas
mov
adc
sahf
sub
mov
sbb
xchg
add
and
les
inc
push
push
cmp
mov
ret
push
out
jmp
mov
xchg
add
mov
pop
loope
aaa
add
inc
or
cmp
ror
dec
stos
dec
add
push
sbb
cmp
pavgb
pop
cmp
fcomip
pusha
mov
nop
add
fstpl
fildl
add
inc
sbb
stos
sbb
push
addl
sub
cs
pusha
mov
inc
and
xchg
cli
add
movsl
push
out
fistpl
dec
movsb
add
daa
sbb
jbe
or
sbb
dec
sbb
fidivrl
aam
xor
fisubs
ret
es
add
stos
dec
and
add
add
mov
adc
dec
fincstp
dec
xchg
mov
or
and
jne
sbb
jns
scas
stos
add
rcr
dec
add
mov
mov
mov
cli
xchg
loop
imul
mov
lods
mov
and
dec
adc
nop
jp
loop
pop
sbb
pop
cmp
push
ss
enter
bound
add
aam
inc
add
shlb
iret
je
and
jle
fsubrs
dec
lahf
dec
adc
adc
pop
sbbb
xchg
jge,pt
pushf
xor
inc
fmuls
mov
inc
cmp
aas
mov
lret
inc
movsb
xor
rorb
xchg
push
inc
push
inc
dec
lods
or
push
cmp
insl
jl
adc
lret
movsl
scas
add
test
sub
setns
add
add
pop
xor
fcomps
das
shlb
sub
iret
or
sbb
clc
dec
out
pop
je
inc
inc
lretw
xorl
dec
shl
dec
pusha
xchg
inc
les
mov
sbb
and
lcall
pusha
repnz
outsl
cltd
add
js
sbb
mov
mov
nop
pop
mov
inc
cli
enter
xchg
inc
stc
mov
or
mov
sbb
inc
pop
popa
jnp
inc
popl
dec
cmpsb
lods
pop
mov
adc
xchg
pop
stos
sbb
mov
sbb
les
xor
mov
scas
xor
push
aas
push
mov
and
adc
inc
sub
pop
jmp
add
inc
repnz
js
dec
test
inc
xchg
fcom
arpl
nop
mov
sub
mov
addr16
js
pop
repnz
in
or
mov
sbb
and
add
cmpsb
jl
xorps
or
mov
mov
sub
sti
add
xchg
das
inc
loopne
sbb
das
cmp
movsb
xor
xchg
pushf
xorb
push
sbbl
lods
sbb
aaa
cmp
adc
cs
or
pop
insl
test
pop
mov
out
sti
jbe
sub
orb
add
inc
nop
imul
test
sbb
dec
dec
dec
inc
xor
pop
or
test
arpl
pop
fcomp
mov
xchg
push
adc
inc
ja
loope
jno
mov
jne
adc
pop
fs
clc
pop
aaa
or
orb
dec
xor
inc
add
ljmp
adc
add
pop
rorb
fisubl
sahf
cs
pop
add
hlt
adc
xchg
adc
and
aad
or
mov
jmp
jle
mov
mov
nop
sbb
or
pop
mov
out
dec
loopne
and
sbb
into
out
lods
orl
je
call
adc
mov
pop
stc
dec
jl
aas
sbb
lcall
cmp
outsl
mov
loop
dec
push
je
mov
xor
mov
sbb
push
xlat
mov
aad
aas
scas
adc
xor
ret
call
das
cmp
sub
xchg
insl
cmp
std
jg
adc
ret
test
jne
adc
and
fimull
ds
nop
arpl
jp
sbb
inc
nop
lcall
add
movlps
adc
mov
and
pop
sbbb
mov
inc
sarl
xor
scas
xchg
and
lods
fs
icebp
mov
or
adc
hlt
ret
sbbb
cmp
inc
in
push
pusha
mov
cltd
das
xchg
xchg
inc
lds
sbb
sbb
sbb
in
add
pop
sbb
sbb
add
jmp
inc
and
inc
mov
pushf
ficoms
lock
in
pop
clc
popf
loopne
dec
cmp
mov
jl
inc
ss
add
or
mov
and
rolb
fstpt
jne
pop
sub
int
lods
ljmp
pop
xor
jmp
sub
mov
loope
imul
pop
push
in
sub
push
mul
sbb
and
bound
and
xor
leave
shll
or
cmp
lea
dec
fadds
sbb
mov
pop
mov
push
adc
xchg
and
add
cmp
push
and
aad
dec
inc
not
adc
cmp
fistpll
das
shr
adc
lahf
sub
sub
adc
movsl
xchg
cmp
test
outsl
movsb
inc
xchg
add
jns
inc
sub
mov
cld
inc
mov
jne
adc
or
dec
adc
push
push
adc
xorb
lock
sbb
pop
sub
mov
nop
jae
push
xor
push
lock
ret
lahf
push
roll
lods
lahf
daa
lock
push
imul
or
cmp
jne
push
aas
cmp
push
push
cmp
lret
sbb
nop
cmp
repnz
or
adc
adc
sbb
inc
push
scas
pop
mov
nop
inc
and
inc
sub
and
mov
hlt
and
cmp
add
call
jg
push
dec
testb
les
push
lods
lock
cmpb
cmp
ret
loop
inc
jle
jg
dec
cmp
inc
push
cmp
inc
dec
jo
add
push
inc
insb
outsb
jmp
pop
pop
adc
add
or
shrb
inc
sub
mov
mov
inc
add
jmp
xchg
push
dec
sub
nop
push
mov
jl
mov
push
outsb
jbe
dec
jb
lock
adc
inc
and
in
fisttpl
mov
pop
js
jae
jnp
lea
or
adc
andb
popa
sbbb
xor
sarb
cmp
cmp
jbe
mov
cmp
push
push
addr16
xor
shlb
jae
add
ds
inc
je
aam
mov
enter
or
jae
adc
pop
mov
push
dec
ja
jne
or
mov
xchg
xor
pop
pusha
xor
add
or
push
jne
loop
iret
insb
or
mov
pop
fidivl
mov
ret
xchg
pop
jbe
dec
or
sbb
ret
lock
mov
jo
xchg
filds
mov
es
vfrczsd
cltd
ljmp
lea
push
push
stos
cmp
add
push
xchg
sub
adc
adc
push
xchg
mov
test
repz
jns
les
mov
push
aaa
push
inc
mov
fimull
test
adc
and
sub
push
jecxz
lods
xor
imul
das
jb
xor
mov
gs
imul
sbb
mov
jbe
std
xchg
mov
sar
cmpsb
add
ret
dec
jne
cmp
jb
xor
clc
rcll
aas
shl
inc
sbb
sbb
jo
sbb
dec
jmp
mov
dec
lahf
add
outsb
sti
add
test
mov
fnstcw
jmp
pop
mov
xchg
mov
jb
es
and
sub
scas
fs
dec
dec
sub
pop
or
fiadds
cmp
orl
pop
ss
call
les
pop
adc
adc
xchg
rorl
mov
addr16
movsb
repnz
dec
inc
and
mov
push
adc
mov
mov
push
push
xchg
inc
ret
and
add
lcall
sbb
cmp
xorl
dec
add
sbbb
aas
lret
divl
inc
pop
cmp
dec
adc
inc
out
pop
loop
inc
les
jle
xlat
lea
mov
pushf
sbb
mov
and
inc
jge
push
out
xor
in
and
dec
dec
cmpsb
rcrb
dec
adc
mov
sahf
pop
dec
pusha
jbe
xchg
xchg
out
ret
lret
push
add
out
out
dec
pusha
dec
lcall
inc
and
rcr
push
and
mov
sub
mov
adc
in
sbb
push
cmp
cmp
ja
mov
push
jp
pop
sbb
sbb
mov
or
loop
fnstenv
mov
mov
pop
push
inc
movsb
add
test
mov
cli
xor
cmp
jbe
mov
cmp
mov
addr16
add
push
push
mov
jae
cli
inc
mov
or
mov
mov
jle
add
sbb
sti
or
clc
sub
outsb
test
add
mov
mov
cmp
jb
xchg
icebp
and
jmp
mov
repz
adcl
roll
inc
popa
lock
and
loop
add
mov
adc
pop
mov
push
mov
add
adc
mov
iret
sub
mov
adc
mov
xor
and
movsb
mov
sbb
ja
js
inc
push
xor
push
push
lea
popa
roll
adc
jmp
mov
in
loop
or
sbb
mov
jg
lahf
sub
outsb
and
pop
and
dec
pop
xor
pop
pop
vmovshdup
and
lahf
std
jae
pop
dec
mov
fildl
jb
outsb
xor
xor
pop
cmpsl
sub
movsb
push
std
leave
sbbb
fistpl
movsl
jb
lcall
pop
xor
mov
inc
xor
jmp
push
or
jns
mov
iret
add
int3
leave
leave
mov
mov
in
sub
incl
adc
in
mov
shlb
cmp
or
jp
mov
fmuls
push
cmp
sub
jne
xchg
imul
inc
jl
push
push
push
daa
outsb
and
inc
mov
enter
cmp
loop
inc
push
pop
adc
sub
call
shrb
sbb
xor
push
addb
and
mov
xor
insb
cmp
jns
push
adc
daa
mov
call
push
pushf
xchg
mov
add
je
fwait
xchg
int3
push
dec
or
lea
jl
loope
mov
insb
pop
jg
fcmovb
or
xchg
fcompl
sub
loop
jg
push
dec
push
adc
xchg
subb
sbb
cli
aas
inc
lcall
mov
sub
or
adc
mov
ja
push
push
sbb
fsubrs
and
cmp
int3
inc
je
scas
inc
jmp
xor
movsb
bound
cmp
push
pop
fs
arpl
pop
dec
push
add
add
add
shl
pop
cmp
or
jl
adc
cmp
xchg
mov
mov
jge
fwait
into
and
pop
cld
or
rcr
mov
clc
jecxz
fistpll
push
add
sar
scas
push
mov
rcrb
mov
adc
inc
xchg
push
dec
jecxz
mov
icebp
aad
shrb
dec
add
bound
pop
scas
push
in
mov
xor
or
shld
inc
pop
loopne
mov
jne
repnz
dec
pop
adc
xor
inc
xchg
mov
outsb
js
sbb
lret
adc
outsb
jns
push
mov
adc
mov
cmp
xlat
inc
shll
add
ret
push
mov
xchg
adc
jmp
xor
mov
movsb
inc
in
dec
sbb
call
and
add
pop
cmp
jne
cmpl
jne
adc
inc
mov
adc
inc
mov
insl
and
lahf
mov
jne
cmp
in
mov
daa
cmp
jne
and
cs
js
xchg
xor
outsb
or
fmull
jl
inc
xor
loop
mov
pop
inc
movl
addr16
dec
jmp
mov
adc
cmp
pop
or
fldenv
mov
in
fs
hlt
popa
scas
dec
push
jnp
add
push
les
fsubr
pop
lock
or
jle
and
je
lds
imul
ss
pop
jmp
fucomp
or
jmp
pusha
pop
adc
fcomp
out
insb
jmp
dec
sbb
sti
lcall
aad
dec
adc
insb
jne
push
jo
mov
push
sbb
test
sbb
or
subb
push
or
adc
pop
jae
orb
insb
push
sbb
adc
dec
shr
push
push
mov
jg
daa
jmp
mov
add
fcompl
mov
jp
out
mov
xor
rcrb
fbstp
lock
call
outsb
mov
or
aas
movsb
sarb
sbb
frstor
iret
je
orl
pop
rcrb
pop
jl
loop
add
jns
pop
cmp
and
sarb
lcall
sbb
cmp
lds
mov
xor
ret
aas
and
loop
addb
mov
shlb
ret
sub
push
inc
xchg
cmpl
add
inc
ret
sti
xor
dec
or
mov
out
inc
pop
mov
pop
add
mov
addb
and
es
aas
mov
sbb
jbe
lds
pusha
and
subl
popl
add
movsb
adc
test
loop
outsl
imul
pop
cmp
cmp
pop
sbb
mov
mov
pop
mov
dec
inc
imul
xchg
adc
pop
scas
add
iret
or
xor
sbb
dec
jp
ds
stos
push
adc
loopne
testb
add
and
jp
jmp
push
call
and
push
mov
inc
xor
sbb
lods
and
imul
mov
fdivs
call
jp
sbb
jecxz
mov
push
shlb
cmp
out
mov
data16
call
mov
mov
nop
testb
data16
rcrl
pop
cmp
inc
mov
push
dec
outsl
aam
or
adc
jle
imul
and
sub
inc
inc
jmp
push
mov
jne
dec
sbb
xchg
mov
rclb
leave
js
fistl
push
add
jb
call
lcall
pop
je
jne
lea
or
incl
xchg
inc
movsb
sbb
andb
push
andl
fbld
es
test
add
or
mov
or
sub
lock
jge
out
rolb
or
loop
add
adc
sarb
std
in
or
js
adc
push
es
fadd
and
push
sbb
clc
push
scas
daa
je
icebp
or
add
dec
sbb
add
das
or
fcomip
push
pusha
and
sarb
xchg
adc
xchg
mov
mov
cmp
xor
xor
test
pop
push
mov
push
lea
or
cmp
mov
clc
scas
movsb
push
dec
add
cmpsb
xor
push
mov
mov
lcall
and
add
bound
mov
sbb
scas
mov
xor
sub
je
cmp
push
mov
sbb
loopne
sarl
shlb
and
push
push
cmp
mov
adcb
lret
and
lret
adc
xchg
push
mov
pushf
adc
push
xchg
fildl
icebp
mov
out
pop
push
notb
lea
into
lea
add
lcall
and
sub
mov
call
xor
pop
fimull
test
jnp
dec
and
or
shrb
push
or
fnstenv
sub
outsb
xlat
push
pop
sub
or
xor
dec
das
mov
add
pop
xchg
mov
mov
inc
push
push
es
mov
loop
insb
mov
hlt
sub
mov
sub
test
dec
jne
sbbl
sbb
leave
adc
cmp
xchg
test
stos
mov
jne
clc
mov
icebp
lods
or
jmp
pushf
mov
leave
cs
ret
out
jl
or
and
pop
inc
mov
xchg
dec
sbb
sbb
adc
or
mov
rcrb
aaa
mov
jle
push
mov
fdivr
lea
push
push
push
insb
add
aam
xchg
xchg
cmp
pop
jb
jb
enter
pop
jg
xorb
adc
shlb
pusha
push
pushf
adc
inc
or
inc
dec
in
add
pop
push
dec
sbb
das
and
dec
je
dec
mov
xor
xchg
push
mov
xorl
xchg
cmp
cs
inc
enter
push
adc
rorb
xorb
cmp
sub
sbbl
clc
arpl
cmpsb
mov
xor
mov
jne
push
pop
inc
push
xor
cmpsl
jmp
inc
xchg
push
out
shl
cltd
inc
sub
scas
into
in
sbb
aad
push
fdiv
inc
outsb
outsl
pushf
or
add
ret
test
adc
aas
outsb
enter
xor
mov
jl
push
sahf
sub
add
arpl
adcl
push
cs
stos
test
sbb
and
adc
imul
sbb
inc
lahf
jbe
sub
dec
clc
inc
mov
rolb
sarb
ss
adc
ja
pop
mov
push
addr16
inc
pop
test
cmp
mov
sub
sub
jbe
sbb
or
insl
pop
add
lods
cmp
add
insb
sbb
insb
inc
int3
sub
sahf
or
jmp
pop
out
cwtl
inc
out
xchg
xorl
cmp
push
loope
jl
mov
or
xorl
jle
push
fmuls
sbb
push
lcall
idivl
lods
icebp
into
and
inc
or
stos
pop
test
cmp
or
adc
cmp
test
test
mov
or
jo
stos
xor
ljmp
fadd
or
and
addr16
popf
dec
das
add
adc
and
mov
sbb
push
roll
loope
mov
in
lcall
push
jbe
or
inc
pop
pop
xchg
pop
call
out
mov
popa
dec
dec
pusha
xchg
adc
icebp
sbb
jle
je
pusha
mov
push
or
sub
xchg
and
cwtl
pop
adc
cltd
mov
and
inc
call
inc
mov
loop
orb
fisttps
push
add
pop
sbb
push
lahf
pop
dec
adc
cmp
lods
sub
and
sbb
movsb
adc
jge
lock
pop
adc
lcall
aas
push
add
les
or
adc
rclb
lock
jne
mov
and
sub
sbb
xchg
cmpsb
push
sbb
add
and
pop
push
dec
jo
or
stos
and
sahf
aam
das
mov
imul
pop
js
addb
xchg
jbe,pn
daa
nop
jne
jp
int
mov
orl
mov
dec
push
sub
pushf
icebp
fdivrl
cs
pop
add
push
adc
lea
mov
adc
loop
inc
scas
in
ja
dec
and
inc
dec
adcb
je,pt
push
in
stos
cmp
repz
cltd
jg
xor
jecxz
in
xchg
das
xchg
cmp
mov
jecxz
pop
mov
into
bound
sub
test
mov
cmc
adc
push
inc
jae
pop
add
push
xor
sbb
add
inc
inc
in
mov
dec
ret
loopne
add
popa
and
ss
sbb
cmp
cmp
ss
movsl
cmp
jb
dec
lock
xchg
dec
jmp
add
inc
sub
pop
mov
subl
push
push
ss
cmp
push
add
add
pushf
in
jge
xchg
and
loopne
idivb
xchg
out
imul
test
or
mov
inc
lea
xchg
jno
inc
inc
in
test
bnd
push
sub
and
xchg
sti
inc
xor
xchg
addr16
sub
mov
int3
mov
pop
lods
pop
mov
mov
push
jecxz
inc
mov
sub
sub
inc
push
inc
in
mov
lods
mov
fiadds
cmp
jmp
pop
add
insl
sub
les
push
ret
sub
cltd
pop
mov
xor
into
pop
movsb
add
loop
dec
in
add
es
xor
push
mov
ret
xchg
mov
adc
inc
pushf
mov
jo
inc
es
xchg
leave
ds
sbb
roll
sbb
icebp
xchg
or
and
pop
ss
sub
pop
sub
sbb
out
mov
mov
cmp
jecxz
ret
dec
pop
sbb
mov
data16
or
jle
loop
add
rcll
shlb
or
jbe
mov
mov
inc
cmp
inc
mov
inc
fisubs
xor
pop
cmc
lods
cwtl
and
mov
in
mov
loopne
sbb
js
sub
add
nop
movsl
xchg
xchg
pop
addr16
sbbb
nop
out
rcr
jle
push
xor
inc
dec
xchg
movsb
mov
dec
in
mov
dec
and
jno
dec
xor
add
push
std
inc
sub
hlt
jb
push
jl
jne
and
pop
pop
or
rorb
adc
dec
jmp
cmpsb
fidivs
sbb
movsb
sbb
sbb
push
lret
js
dec
sub
in
rolb
xchg
pop
dec
not
cmp
lds
sbb
add
pop
popf
pop
push
jmp
loopne
loope
lock
mov
popa
inc
inc
rcr
sub
movsl
inc
shl
inc
sub
xchg
push
mov
pop
fwait
jle
cmp
push
jo
cli
inc
les
add
punpckhwd
jbe
add
mov
rcl
push
mov
sbb
push
pop
arpl
dec
rolb
or
jmp
jb
in
inc
adc
jecxz
inc
adc
dec
jl
out
cmpb
out
insb
dec
sbb
lods
xor
ficoml
pop
psllw
outsb
mov
xor
dec
arpl
xchg
sbb
inc
lods
dec
lods
cwtl
push
les
push
mov
xchg
clc
es
std
pop
imul
loope
jo
sub
adc
dec
fs
and
or
int
mov
jbe,pn
xchg
and
decb
popa
in
push
and
and
test
xchg
xchg
jns
and
jno
or
xchg
xor
xchg
pop
mov
xchg
lods
push
stos
pop
inc
xchg
mov
sub
mov
add
or
or
dec
in
dec
xor
jns
imul
xor
pop
fadd
pop
dec
fldenv
pop
addr16
adc
and
adc
pop
push
out
inc
mov
jo
sbb
dec
dec
pop
inc
testl
andb
add
adcl
mov
pusha
cs
scas
mov
lahf
push
rcrb
push
pop
add
rcl
enter
jl
pop
insl
jmp
mov
dec
xlat
sbb
and
pusha
test
popf
add
xchg
cmpsb
dec
mov
pop
cmp
xor
test
pop
jo
out
rcrl
pop
mov
mov
incb
lock
rorl
pop
mov
add
jmp
arpl
ret
jp
mov
jne
int3
dec
ret
and
dec
icebp
idiv
push
dec
dec
dec
mov
push
add
shr
loopne
cli
ret
pop
orl
and
mov
inc
call
push
addb
xchg
or
inc
jo
mov
push
adc
into
out
pop
mov
add
insb
lret
jae
adc
test
add
adc
inc
das
pop
sbb
sbbb
lea
add
adc
sub
adcb
push
das
js
or
push
jo
fcmovnb
add
or
lret
push
or
xchg
dec
or
push
dec
push
sub
sub
lock
cmp
cmp
dec
gs
js
aaa
pop
dec
inc
icebp
ss
shrb
push
cmp
push
std
test
push
imul
lods
jl
cld
popa
mov
sbb
sbb
shlb
cmp
add
sbb
dec
jb
cmpsb
inc
pop
outsb
scas
sahf
lcall
pop
push
insb
data16
cmpsb
test
sbb
mov
js
and
ret
in
idiv
cwtl
test
shl
jl
xchg
je
adc
jmp
sub
mov
into
add
into
sbb
dec
or
and
mov
jl
test
adc
jl
jno
rol
fistpll
je
add
mov
or
xor
movsl
jb
adc
stos
imul
adc
add
orb
lods
mov
mov
jns
outsb
ds
lock
and
or
dec
pop
loopne
sarb
call
loopne
and
xchg
hlt
push
call
dec
jmp
aam
out
inc
sub
pop
add
daa
test
aad
jne
ljmp
jo
mov
in
call
mov
cmp
pop
loope
push
int
ds
add
and
mov
adc
or
push
rolb
clc
mov
daa
add
fdivl
lea
xchg
adc
jnp
lds
push
jnp
inc
inc
test
movsb
adc
pop
mov
push
xchg
fidivs
leave
or
sbb
cmp
add
and
pushf
hlt
sbb
sbb
adc
mov
pop
sbb
rolb
movsb
push
pop
dec
push
xor
mov
inc
sub
pop
ja
test
das
or
add
mov
pop
fstpt
jle
movb
scas
sahf
or
jg
pop
movsbl
je
or
test
add
pop
test
push
insb
add
lret
inc
cmp
je
movb
mov
loope
pop
jne
xor
idiv
inc
sbb
pushf
dec
cmpb
xchg
mov
and
mov
jo
push
mov
mov
dec
call
add
and
mov
xchg
lock
cmc
verr
mov
xor
aad
mov
movsl
mov
add
mov
and
sub
js
lea
loopne
addl
or
xor
cld
lcall
sti
lea
mov
mov
inc
dec
jne
lods
or
idivl
das
mov
xor
mov
mov
add
mov
bound
vcmpss
mov
std
sbb
mov
pop
sahf
pop
add
lea
cmp
jmp
jecxz
pop
mov
repnz
add
pop
pop
repnz
jmp
sbb
fcoms
shll
insb
loopne
movsl
mov
push
add
adc
ja
rclb
mov
dec
sbb
hlt
xor
jge
ffree
not
mov
dec
mov
loopne
ss
mov
rclb
jp
outsb
inc
sub
stos
enter
or
mov
sub
or
push
adc
adc
mov
push
lret
adc
mov
js
mov
push
mov
shl
and
push
pop
outsl
lods
mov
mov
jmp
inc
shl
xchg
pop
xchg
fwait
je
mov
ljmp
sar
popf
in
or
inc
or
push
ljmp
dec
es
xor
cmp
bound
stos
bound
popa
xor
hlt
pop
xchg
std
stos
xor
xlat
adc
rcrb
adc
lds
lahf
sub
mov
mov
xchg
insb
add
xchg
sub
sub
mov
clc
stos
ret
aas
and
loopne
loop
jge
jg
shlb
and
outsb
aas
jne
or
mov
int3
or
push
mov
or
popa
bound
dec
pop
inc
or
push
fadds
iret
or
inc
ljmp
movsl
je
mov
xor
sti
sahf
les
mov
inc
mov
movsl
push
push
int3
dec
adc
push
and
xchg
mov
add
in
movsl
shrb
shrb
fmull
adc
or
mov
xchg
mov
loopne
out
hlt
mov
cmp
adc
sahf
pushf
inc
ja
sbbl
sti
pop
cmp
lahf
xor
sbb
or
popf
outsb
lea
cmp
pop
jnp
fdivl
sbb
test
and
adc
aas
outsl
add
and
shlb
or
pop
aam
jmp
fldenv
dec
and
scas
out
jno
sahf
or
jno
dec
std
xor
sti
lods
lahf
insb
das
push
mov
dec
inc
in
jge
inc
into
xchg
xor
xchg
mov
test
cmp
push
adc
scas
test
loop
cmpsb
mov
fwait
sub
cli
frstor
or
ror
sub
mov
mov
icebp
jmp
dec
or
fldenv
sbb
int3
pop
lods
cmc
dec
loop
mov
mov
push
pusha
in
sub
and
mov
inc
mov
mov
out
incb
enter
or
sbbb
sarl
xchg
out
rcrl
rcrb
bnd
add
pop
inc
xor
xor
test
and
inc
xorl
pop
xchg
push
xchg
adc
popa
jo
lret
and
jb
xchg
sbb
sar
xor
dec
dec
mov
addr16
daa
inc
das
dec
push
mov
jo
pop
ret
xor
jmp
add
add
push
inc
sbb
cmp
push
pusha
push
sbb
rolb
and
inc
sbb
sar
push
enter
pop
sbb
sbbl
or
cmp
insb
ret
sbb
xor
add
inc
and
xchg
xor
cwtl
mov
jne
dec
cmp
es
bnd
cmpsl
scas
jb
scas
dec
pushf
lret
sbb
pop
fs
pop
or
sbbl
sbb
lods
cli
push
sbb
mov
add
adc
sub
and
sbb
fistpll
sub
inc
or
add
sbb
push
pop
test
rol
orb
rcrb
cmp
jo
addl
sbbb
je
pop
bound
jmp
or
add
insl
in
xchg
dec
and
xor
jg
pop
push
adc
mov
dec
xchg
push
adc
mov
mov
mov
add
inc
mov
or
shrb
aaa
sbb
shlb
jge
hlt
sub
inc
sbb
mov
sbb
jg
mov
lock
rol
push
sti
dec
xchg
ret
lds
push
sbb
insb
bsf
scas
loop
jmp
mov
sbbl
pop
mov
cmpl
xchg
mov
adc
jp
dec
xchg
xchg
xor
or
pop
or
jns
pop
clc
inc
out
mov
and
daa
add
mov
fwait
adc
movb
mov
push
mov
push
sahf
outsb
loop
dec
clc
aas
daa
fdivrs
lea
mov
pop
inc
sbb
adcl
nop
fstl
out
fdivrs
pushf
gs
bound
test
ljmp
jae
shll
or
push
sub
adc
xor
mov
xor
mov
xor
adc
ja
pop
adc
mov
mov
sbb
push
xor
push
or
jl
sub
cwtl
lock
imul
mov
push
or
les
push
insb
adc
rorl
scas
or
dec
cmpsl
in
dec
sbb
nop
popa
pop
daa
inc
add
mov
mov
mov
pop
push
cmp
test
inc
in
cld
test
fnstenv
idivl
std
and
int
jb
push
fs
inc
and
dec
push
jbe
shlb
lods
adc
adc
mov
and
loope
pop
hlt
xchg
adc
push
ljmp
dec
mov
sbb
sbb
pop
jp
loope
cmp
xor
add
sub
daa
push
test
push
pop
jb
jb
rcll
cmpl
pop
push
or
mov
push
into
dec
jns
xchg
mov
incl
pop
xlat
push
sbbb
andl
or
xor
shl
push
bound
shr
xchg
push
or
insl
loope
or
dec
mov
or
dec
inc
mov
jp
mov
pop
push
jno
xor
jle
test
inc
inc
in
mov
push
mov
xor
inc
aas
sbb
push
and
adc
aas
nop
arpl
ret
push
mov
mov
test
push
push
inc
or
dec
lods
ret
inc
mov
addr16
push
xchg
ret
cmp
inc
stos
xor
sub
add
fstl
cmp
imul
and
adc
clc
push
loope
sub
cmp
jg
xor
sub
cmp
sbb
out
push
sub
das
cld
popf
mov
faddp
sti
imul
mov
jne
add
jp
adc
roll
inc
stos
movl
mov
test
subb
imul
test
pop
xor
scas
cmp
push
or
push
jp
sub
cs
shrb
pop
or
sub
bound
adc
cli
dec
and
add
dec
outsl
loopne
sub
ret
rcl
repnz
pop
push
mov
xchg
push
dec
inc
push
fs
xchg
imul
add
out
enter
xlat
fbld
jl
sbb
xor
shll
loopne
mov
jl
adc
adc
popl
pop
stc
push
movsb
ret
sub
in
adc
addr16
dec
dec
cmp
shlb
or
jg
push
loop
lcall
jmp
sub
adc
xchg
movsb
pusha
clc
dec
add
mov
sub
or
or
adc
test
xor
inc
mov
scas
xor
lock
pop
inc
sbb
sub
ret
in
shrb
scas
popf
jo
sub
dec
stos
and
popf
push
imul
xor
inc
jns
pop
jns
xchg
lods
jl
mov
push
or
add
jge
mov
pop
sbb
xor
js
inc
subl
fldl
sub
add
div
mov
mov
mov
xchg
xor
mov
test
sbb
std
push
adc
cmp
call
rclb
mov
xlat
dec
aad
movsb
push
outsl
pusha
push
lea
lods
inc
cmpsb
jp
sar
and
push
mov
jns
mov
sub
add
xor
call
jmp
pop
jecxz
in
in
sub
and
mov
test
sbb
mov
sub
mov
sub
mov
cmp
mov
xchg
imul
sub
push
int3
or
inc
xor
lret
or
or
sbb
push
sub
adcb
icebp
add
adc
mov
sub
cwtl
pop
xlat
adc
jp
test
jne
lods
pop
test
shlb
int3
push
adc
shl
insb
xchg
adc
pop
clc
mov
jg
lret
shl
pop
js
dec
push
push
adc
and
push
dec
das
insb
pop
dec
xor
sub
lret
or
inc
mov
ja
cmpl
fldl
idivl
dec
sub
icebp
jge
mov
sbb
andl
mov
leave
dec
and
mov
sbb
pop
sbb
or
mov
or
lock
or
mov
test
sbb
pop
mov
push
imul
out
mov
nop
and
push
lcall
add
mov
dec
sub
incb
add
xchg
mov
mov
lods
or
dec
push
fldl
inc
mov
mov
mov
data16
stos
and
xchg
mov
test
sub
jge
push
adc
pop
dec
dec
add
push
test
pop
loope
cmp
inc
clc
dec
aam
imul
sbb
repz
lds
add
cs
test
dec
sbb
and
mov
mov
cmp
lret
lds
sbb
pop
jo
push
and
not
push
mov
mov
mov
xchg
jae
jg
nop
lods
pushf
cmp
adc
jmp
pop
mov
pushf
arpl
cli
inc
dec
lea
je
add
pop
jmp
popf
daa
cmpb
dec
inc
shll
mov
nop
mov
pop
xchg
mov
outsb
add
clc
pop
push
fdivrs
loopne
inc
inc
xchg
lock
ror
adc
lds
popf
sbb
popf
mulb
shlb
outsl
lods
imul
mov
xchg
or
and
into
inc
xchg
loop
sub
or
fistpll
clc
fmull
fstps
jl
popf
sbb
rcl
ss
aas
sub
adc
push
mov
push
pop
lds
add
push
rolb
ljmp
int
mov
mov
mov
loope
mov
dec
imul
and
sub
mov
pop
in
sbb
sbb
pop
out
jle
push
push
mov
xchg
bound
jb
das
xor
push
sbb
cmpb
sub
nop
cmpb
arpl
push
mov
inc
adc
faddl
dec
je
movsb
push
push
nop
jns
lahf
push
js
jo
dec
cmp
push
rorb
dec
xchg
pop
les
push
or
push
shrb
cmp
sub
mov
mov
insb
fiaddl
push
sbb
cmp
bswap
lret
jns
add
lods
or
lock
dec
mov
sbbb
ret
push
pop
movsb
ja
pop
mov
test
push
push
cmp
push
xchg
data16
sbb
rcrb
ss
sub
iret
push
mov
cmp
mov
cmp
dec
dec
and
mov
jo
sub
pop
push
sub
sbb
lret
mov
mov
mov
adc
jno
adc
mov
sub
fdivrl
leave
sbb
xor
pop
orb
or
xchg
or
dec
ret
pop
cmp
inc
leave
push
xorb
add
popa
xchg
mov
sub
push
fldt
cmpsl
lret
inc
push
sbb
cmp
push
pop
sub
call
and
dec
ja
mov
sub
test
lret
pop
jb
clc
jae
scas
or
pushf
adc
rcrb
xchg
lahf
mov
push
insb
dec
inc
lcall
fisubs
std
dec
push
aas
hlt
sbb
jbe
jnp
insb
pop
je
sub
sbb
stos
mov
or
mov
mov
cmp
lea
rolb
sbb
ficoml
inc
out
jo
pop
fistpll
add
pusha
pop
cmpsl
mov
push
arpl
push
daa
xchg
add
mov
push
xchg
fdivs
or
add
add
mov
outsb
or
xchg
mov
xchg
xchg
push
loop
clc
mov
je
or
or
lret
add
pop
jb
push
leave
lret
inc
jecxz
mov
in
or
arpl
inc
imul
jns
leave
mov
scas
imul
xchg
xor
lea
adcb
xchg
jne
ja
mov
cmpsb
adc
cmp
sub
pusha
add
sub
pop
lock
sbb
add
jbe
nop
mov
fs
loop
mov
sub
fimuls
xchg
pop
sub
adc
mov
push
mov
adc
pop
cmpsl
jns
xor
cmpsl
loopne
push
and
xchg
xor
and
repnz
mov
les
pmuludq
jmp
push
and
lds
dec
mov
in
push
inc
jecxz
test
add
dec
or
push
aad
push
test
jg
hlt
ret
stos
jmp
mov
pop
xor
xchg
test
ret
call
pop
jl
test
dec
adc
add
inc
adc
data16
stos
aad
xchg
mov
mov
sbb
mov
sub
lods
mov
xor
mov
les
add
xchg
jbe
mov
mov
cmp
mov
ljmp
jae
inc
sahf
inc
cmp
cmp
icebp
fwait
sbb
aad
cmpsl
sub
pop
je
xchg
jae
or
ret
inc
mov
gs
sub
mov
loope
push
jb
xchg
pop
jl
mov
dec
sub
inc
insl
cmpsb
lcall
xor
adc
ja
cmp
das
sbb
maxps
add
and
xchg
add
mov
xchg
loopne
repz
arpl
loop
mov
dec
jecxz
mov
popf
xchg
imul
andl
aad
mov
add
nop
adc
fadds
jle
mov
iret
shrl
add
and
testb
inc
cmpsl
jge
idivl
jp
imull
test
popf
xor
dec
jo
adc
jmp
arpl
daa
lock
sbb
ret
add
sbb
xchg
scas
pop
mulb
imul
fs
pop
lret
fsubrs
sub
push
cmp
cmpl
mov
fs
pop
push
sahf
pop
sbb
mov
shll
push
inc
mov
add
jb
inc
mov
xor
testb
sub
xor
push
cmpb
push
ret
ljmp
in
inc
cmp
jp
ficoms
ret
lret
push
test
out
and
rorl
push
sahf
addb
push
jl
mov
pop
add
push
and
and
mov
push
mov
xchg
sub
lret
stos
add
or
dec
rcrb
mov
adc
mov
inc
sbb
addb
or
adc
mov
sti
pop
xchg
push
ljmp
push
decb
out
mov
xchg
add
inc
sbb
dec
jne
mov
movsl
mov
pusha
push
push
das
sbb
or
sub
mov
add
jo
jle
add
pusha
push
cmp
add
and
in
or
ja
mov
xchg
mov
mov
sub
mov
pop
aaa
xor
clc
lock
fldcw
insb
cmp
or
insl
sbb
mov
add
add
mov
sti
addb
jbe
repnz
inc
pop
mov
addb
xor
jbe
mov
push
jo
push
push
push
pop
and
lcall
inc
dec
jmp
je
outsb
cmp
or
mov
mov
jnp
cmp
ret
lea
pop
pop
adc
xor
jle
mov
cmp
jp
inc
dec
jbe
insl
jne
outsl
or
mov
shll
or
clc
data16
ljmp
aam
sub
push
add
jnp
insl
adc
repnz
xchg
cmpb
add
adc
fwait
sar
adc
xor
sbb
pusha
cmp
sub
add
cmpsl
aam
dec
and
mov
jle
sub
and
add
lock
inc
jmp
sbb
adc
mov
or
dec
dec
js
sub
repnz
inc
cmc
outsl
add
bound
cmp
loopne
jp
daa
jmp
inc
mov
jl
fdiv
lret
push
dec
leave
inc
adc
adc
add
pusha
fbstp
or
xlat
leave
lret
addl
jne
adc
jmp
sti
jge
sub
pop
test
jmp
jo
inc
sbb
je
jp
or
out
pop
movsl
cmp
pusha
shlb
xchg
mov
jle
mov
adc
push
adc
mov
push
jl
iret
or
ret
adc
push
pop
daa
icebp
inc
cltd
push
es
loope
push
xchg
add
mov
mov
popa
xchg
aam
and
push
and
pop
adc
testb
pop
insb
xor
movsb
mov
pop
outsb
add
sbb
dec
mov
outsb
pushf
fcmovb
sti
test
aaa
fldt
add
mov
out
and
add
push
jmp
mov
loope
pop
mov
aad
add
sbb
aam
imul
cmpb
push
jo
fcomps
shr
les
xchg
inc
xchg
dec
test
lcall
inc
and
shlb
ds
or
mov
or
daa
cmp
push
fnstcw
or
inc
inc
rclb
xlat
test
mov
sub
add
mov
mov
js
inc
outsl
jmp
xchg
cmc
loopne
lret
jmp
cmp
jp
aam
mov
push
push
addb
repz
filds
cmp
jne
stos
add
mov
adc
mov
rcrb
std
and
cmp
cmpsl
mul
in
push
bound
add
gs
sub
repz
aaa
xor
jne
mov
adc
aas
push
and
stc
ret
push
dec
xor
loope
ss
push
add
cmpsb
int3
subb
mov
push
mov
loopne
into
push
into
sbb
sarb
mov
jge
or
ret
inc
push
mov
inc
mov
loopne
ja
dec
jne
pop
inc
mov
cltd
push
out
sub
ret
rorl
xchg
mov
and
pop
loopne
ret
add
dec
jo
inc
sub
sub
in
and
jge
and
fisttpll
jns
rorl
cmp
jae
sbb
adc
sbb
enter
lods
push
push
pop
loopne
sub
add
sbb
push
fisttpl
fistps
or
cwtl
lds
mov
dec
mov
cmp
cld
cld
xchg
leave
inc
cmc
scas
jns
fmul
mov
cmp
clc
push
mov
or
adc
pop
dec
in
add
sub
sub
mov
orb
and
mov
and
ljmp
out
mov
jecxz
push
pop
fisubrl
pop
mov
loope
mov
fwait
jnp
mov
and
dec
and
xor
int3
sbb
adc
inc
dec
dec
add
inc
sbb
pop
cmpsl
push
xor
sbbl
xchg
add
cli
dec
lods
dec
jo
cmp
popa
sbb
jbe
dec
inc
mov
je
out
push
xchg
jp
mov
push
cmp
fucom
sti
and
mov
lock
cmp
sub
inc
and
mov
adc
dec
scas
nop
sub
nop
or
xchg
adc
sbb
and
mov
orl
and
dec
je
nop
stos
mov
ret
pop
jne
add
out
mov
out
xchg
push
push
and
in
test
adc
mov
add
lea
lcall
pop
jmp
sub
aam
mov
in
jae
dec
aaa
sbb
jg
add
cmp
incl
faddl
push
adc
cmc
pop
xchg
js
shl
dec
adc
test
adc
popa
or
rorl
inc
add
push
sbb
pop
mov
iret
mov
jne
jle
xorb
cmp
cmp
push
push
pop
enter
add
or
xlat
call
testb
inc
mov
pop
inc
dec
das
popa
mov
jg
adc
popf
and
lea
je
insb
xor
sub
push
xor
sti
xchg
dec
mov
ret
mov
pop
mov
aam
adc
inc
push
push
and
mov
call
jge
xor
or
outsl
sub
sub
and
ds
outsl
jne
jae
scas
add
xor
icebp
pop
std
pop
pop
mov
arpl
add
sar
cmpsb
mov
outsl
int3
inc
mov
lea
add
push
adc
or
xor
ret
mov
add
cmp
push
xor
sub
sub
shr
mov
jge
test
dec
sub
push
testb
je
xor
call
das
adc
sub
loopne
stos
sbb
and
push
ficoml
or
data16
std
adc
cmp
mov
or
icebp
loope
cmp
cmpl
cmpsl
and
cmc
mov
das
cmp
lea
fmuls
fidivrs
cmp
pop
fcmovnu
dec
insl
jno
push
enter
or
add
stos
ret
push
jo
sbb
orl
pop
ss
lock
inc
inc
cs
pop
lea
mov
mov
mov
sahf
lahf
inc
sbb
cmp
js
call
sar
ret
test
jns
shrb
inc
inc
sub
cmp
jo
sti
pop
add
push
adc
mov
push
std
cmp
push
mov
daa
mov
cli
pop
push
into
mov
rcrb
pop
dec
push
lock
sahf
add
fiadds
xchg
xchg
pop
mov
adc
pushf
sahf
addr16
cli
pop
loope
ret
push
sbb
popf
add
jbe
sub
push
mov
and
sbb
ljmp
or
add
xchg
and
leave
cmp
inc
cmp
add
loopne
ret
mov
jle
adc
and
xor
push
add
cmp
mov
mov
inc
mov
fisttpl
mov
push
daa
cmc
aad
sbb
jl
lcall
mov
push
jge
and
sub
add
dec
mov
dec
inc
add
sub
and
add
mov
pop
add
jno
pop
cmp
push
popf
or
cli
push
dec
xchg
je
adc
iret
inc
push
pop
in
push
jo
xchg
xchg
mov
xor
jo
jne
mov
push
rorb
fists
add
rcl
popf
sub
enter
add
aad
mov
clc
out
add
dec
outsb
jg
mov
lea
mov
sub
fildl
hlt
std
mov
ss
and
inc
add
mov
jl
mov
cmp
push
push
push
sbb
lea
sub
mov
adc
dec
pop
call
pop
cli
xchg
pop
sub
or
mov
push
idivl
inc
lds
outsb
das
pusha
aaa
mov
mov
push
aad
mov
jp
jne
lea
xchg
sbb
sbb
lds
xor
call
pusha
sbb
js
int
shl
mov
je
pop
and
cmpsb
sbb
movsb
push
out
dec
mov
mov
add
sbb
sbb
xchg
pop
ret
imul
ljmp
pop
pop
mov
nopl
cmp
clc
nop
pop
push
bound
push
hlt
pop
or
cmp
cmpsb
es
add
shr
sarb
shr
and
adc
ss
mov
pop
dec
leave
add
test
ja
dec
inc
or
adc
add
and
xor
dec
push
xchg
jle
xchg
xor
add
sub
or
or
cmpsl
mov
fwait
outsl
push
sub
push
push
aam
aam
lods
sbb
hlt
mov
jbe
cmp
jp
rcll
mov
inc
shl
add
sbb
inc
push
stc
mov
or
out
loopne
cs
sub
lcall
mov
mov
mov
inc
jo
ljmp
pop
mov
dec
das
test
push
adc
jge
jne
push
sbb
adc
sub
cmpb
mov
inc
andb
push
insb
sarl
mov
jp
sar
or
decl
dec
add
cmc
pop
sub
xchg
or
out
das
add
xchg
rcll
mov
sbb
adc
mov
dec
dec
popa
sahf
mov
inc
ljmp
jp
or
dec
sarb
adc
cltd
push
sbb
loope
inc
mov
in
mov
mov
fiadds
je
mov
push
into
insl
shl
clc
fld
adc
sbb
mov
stos
lret
add
fsubs
jb
inc
loope
jg
loope
sbb
inc
inc
jg
js
in
fidivl
push
xor
insl
fwait
jg
outsl
sbb
outsb
bound
xlat
inc
aaa
pop
sbb
add
xor
xchg
cli
clc
add
js
fimull
or
jo
insl
das
stos
adc
sar
sub
fcmovnbe
cmp
and
xchg
mov
rorb
push
nop
adc
pop
ret
and
and
or
test
jecxz
jae
or
nop
cmc
add
cmpsb
mov
shl
imul
mov
mov
cmp
inc
push
sti
push
shrb
insl
mov
sub
ficomps
fisubrs
adc
int
pop
jmp
or
jmp
in
fisttps
jg
sub
jmp
cmp
jle
cmc
nop
fldl
sub
cmp
fnstsw
add
ret
ret
je
loop
aaa
mov
vgetmantss
pop
sbb
adc
pop
sub
jmp
cmp
jg
pop
xor
mov
into
cli
sub
sbb
arpl
jg
adc
sub
rcll
xor
movsb
in
adc
loopne
jle
mov
or
sub
cmp
cmpsl
xor
and
xchg
mov
jbe
cmp
mov
or
inc
inc
imul
mov
pop
inc
clc
and
push
mov
jo
mov
stos
cmp
and
sub
cs
enter
sbbb
adc
mov
call
pusha
ffreep
cmp
push
jmp
adc
js
and
js
lret
insb
sub
cli
daa
inc
ret
inc
add
push
inc
hlt
lods
lcall
lea
mov
or
clc
dec
lea
mov
pop
shl
test
sbb
mov
push
aam
xchg
aam
jmp
xchg
xor
cmp
jbe
outsb
inc
dec
jne
dec
jb
or
sub
and
jne
popf
add
bound
mov
loopne
or
shll
pop
aaa
pop
xor
push
xchg
loopne
sub
sbb
pop
cmp
push
popa
xor
dec
sti
mov
push
loopne
flds
das
jp
into
mov
cmp
mov
aaa
mov
sbb
push
outsl
pop
xorl
fildll
out
fld
jb
xor
mov
scas
pop
insb
je
dec
jo
cmpsl
sub
je
into
mov
mov
or
xor
dec
push
ud0
test
add
add
scas
call
outsb
and
insl
push
stos
add
mov
and
add
lret
xchg
xchg
in
adc
rcll
and
xchg
je
push
movswl
loope
push
mov
lahf
xor
imul
and
inc
aas
faddl
lret
inc
lcall
cmp
add
cmp
pop
cli
push
invlpg
push
add
lods
dec
push
push
or
and
nop
mov
enter
inc
push
mov
rcrl
lock
mov
mov
dec
pop
dec
cmp
jne
ret
add
imul
js
mov
insb
test
pop
mov
mov
pop
pop
repnz
adc
jmp
lock
push
mov
sub
xchg
lcall
sbb
sahf
jno
dec
xlat
push
inc
les
pop
inc
dec
xchg
loop
lock
fcomps
fdivs
xor
cmc
fidivs
add
andl
inc
roll
cmp
xor
xchg
cmc
rcrb
add
xor
in
icebp
je
or
sbb
mov
add
inc
adc
inc
lahf
std
cmp
jg
dec
cltd
mov
mov
xor
fsubrs
or
or
or
adc
mov
fistl
xchg
lock
inc
push
lea
jbe
aas
adc
adc
sbb
jle
xchg
jl
stos
xchg
int3
sar
std
sub
and
jmp
adc
cwtl
jl
sub
cmp
mov
jbe
mov
cmpb
fbld
sub
shlb
inc
sbb
pop
push
add
push
ss
inc
shrb
cmp
in
icebp
and
adc
lret
sbb
jg
push
ret
je
and
rcll
or
mov
jg
data16
rcll
pop
sub
xor
sub
push
inc
sub
ret
jle
adcl
xchg
rcl
cwtl
push
sub
lea
test
and
and
fwait
scas
mov
adc
jnp
push
inc
sbb
pusha
aad
add
sbb
cmpsb
mov
pop
inc
xor
aad
push
xor
addb
dec
scas
fnstsw
cmp
mov
invd
add
testl
jne
jg
push
push
and
add
shl
xchg
adc
sbb
or
adc
push
insb
int
subb
add
jg
out
inc
call
sub
lret
pop
cmp
imul
or
jle
jmp
pusha
arpl
inc
or
inc
or
and
scas
addl
add
add
cmp
cmp
out
or
andl
inc
or
or
fildll
jg
testl
cmp
sbb
outsb
pop
iret
shl
aam
punpckhdq
push
dec
pop
ret
push
fsubrl
nop
jne
cmpsb
inc
push
bnd
stos
xor
fidivl
xchg
adc
rorb
ret
movsl
js
shll
test
fnstsw
and
sahf
or
dec
inc
mov
cli
div
subl
jge
and
lcall
adc
xor
xlat
adc
xor
mov
add
mov
sub
out
mov
jbe
enter
aam
out
lock
lea
xor
pop
jmp
cs
addb
leave
sub
loope
xor
adc
dec
jg
cmp
negl
jo
lock
add
gs
ds
mov
add
dec
je
mov
dec
jne
dec
sub
adc
sbbb
sub
pusha
repnz
out
sbb
add
push
sub
in
sbb
iret
jle
and
aas
mov
pushf
and
lea
push
mov
adcl
rclb
pop
sub
or
add
stos
fisubrs
lea
loopne
leave
sub
sbb
mov
jbe
repnz
or
mov
gs
js
imul
sarb
or
pmaxub
sub
add
out
push
adc
and
inc
push
clc
mov
xlat
jle
mov
xor
sbb
xchg
cli
add
add
js
nop
cmp
daa
jb
nop
js
sub
es
or
js
sub
lods
mov
add
mov
mov
push
daa
push
or
xchg
push
inc
pop
mov
pop
jl
mov
mov
test
push
lahf
aaa
pusha
push
add
sbbb
or
sbb
adc
hlt
push
xor
pop
cld
mov
inc
in
repnz
and
ja
repnz
test
outsb
call
out
xor
sbbl
test
inc
push
jecxz
in
pop
push
xchg
push
or
adc
popa
or
fadds
enter
outsw
jmp
jae
add
enter
jmp
inc
mov
mov
sbb
push
cmpsb
lods
dec
fdivrs
add
sub
add
dec
dec
sahf
rclb
mov
mov
in
test
insb
sbb
cwtl
or
cmp
xor
inc
add
mov
or
adc
sbb
sub
inc
sbb
and
pop
and
daa
adc
mov
xchg
daa
jno
mov
adc
push
mov
lock
jbe
jbe
imul
aaa
in
mov
pop
mov
jae,pt
jp
outsl
fimuls
pinsrw
xchg
cmc
adc
scas
pop
xchg
out
into
popf
test
and
push
test
inc
pop
sahf
pop
mov
xchg
inc
ret
xchg
pop
pop
pop
clc
pop
enter
shrb
cmpb
cmp
push
push
pop
jle
and
or
dec
sbb
xlat
ret
mov
jecxz
jo
mov
and
std
xchg
lea
push
xchg
pushf
pop
sub
jge
inc
js
push
mov
lea
add
mov
js
push
add
enter
jo
mov
push
call
ret
lahf
stc
lret
filds
adc
and
jle
imul
lea
pop
adc
fcoml
pushf
cld
dec
push
nop
fidivrs
mov
xchg
adc
sub
cmp
push
sub
lods
xor
aam
or
mov
add
pop
add
test
pop
pop
popa
lods
out
push
js
dec
or
inc
pop
cmp
or
fcoml
call
test
in
ss
call
fcomi
rol
cmp
scas
add
shl
outsb
mov
fisubrl
mov
dec
jne
adc
jle
sti
add
add
xor
es
sbb
orb
ffree
rep
pop
jmp
add
lret
js
sahf
lea
inc
inc
sti
jmp
add
orb
cmpl
sub
andb
repz
inc
decl
mov
lds
aaa
and
sbb
mov
inc
daa
inc
sub
push
test
sub
sub
dec
or
icebp
jl
jmp
mov
sarb
push
outsb
lock
jo
dec
adc
sti
pop
shlb
jo
sbb
inc
sub
pop
and
jns
sbb
js
cmp
int
sbb
or
aam
imul
repnz
ret
out
pop
rolb
clc
insl
push
push
stos
jl
cmpsl
popa
pushf
mov
adc
sbb
jmp
loope
cmp
xchg
gs
pop
pop
fistl
jmp
popf
orb
inc
sbbl
add
ljmp
push
test
pop
cmpsl
xchg
and
scas
ret
adc
outsl
inc
cmp
sub
mov
jmp
jmp
mov
enter
jle
push
cmp
fndisi(8087
or
mov
mov
sti
xchg
add
add
mov
test
xchg
adc
insb
and
daa
pop
mov
sub
mov
leave
mov
pop
ljmp
lea
dec
js
or
bound
pop
repnz
mov
push
inc
adc
orb
inc
loopne
ret
aas
xor
mov
and
sbb
mov
movsl
lret
cs
pop
push
mov
inc
inc
sub
dec
sbb
pusha
mov
pop
xlat
add
outsl
push
scas
add
add
js
pop
rclb
jno
push
filds
loopne
loopne
adc
xchg
shlb
add
xor
js
push
cld
movsb
xor
movsb
outsl
xor
daa
sbb
mov
and
sbb
stos
mov
ds
lea
test
sbb
mov
dec
dec
adc
popa
mov
incb
or
mov
mov
lock
and
inc
xchg
mov
jle
pop
shl
mov
hlt
mov
push
mov
mov
cmp
fsub
mov
sti
add
mov
cld
pusha
xor
fs
or
mov
iret
sti
ret
mov
les
vmread
inc
adc
jmp
xor
push
test
shrl
fldenv
ja
mov
xor
mov
imul
or
mov
sbb
loop
add
fildll
add
inc
out
test
push
dec
pop
dec
adc
mov
inc
xchg
xor
into
inc
clc
ffree
and
mov
dec
aad
xchg
pop
adc
jg
adc
inc
das
add
in
dec
jp
inc
sbb
push
push
faddl
insl
flds
mov
sub
jp
xchg
jb
jne
add
aad
xor
inc
aad
mov
rcll
inc
dec
popa
sub
dec
in
test
mov
inc
and
push
sbb
push
mov
mov
mov
pop
mov
and
adc
test
or
popa
pop
fidivs
stos
movsl
jle
nop
stos
jecxz
jl
dec
adc
cs
mov
loope
add
cmpsl
sub
push
add
mov
jbe
sbb
ja
lret
add
add
xchg
daa
jmp
push
lea
repnz
push
outsb
ss
xor
rcl
inc
mov
sbb
aas
int3
adc
jbe
mov
mov
sbb
lsl
mov
dec
pop
ljmp
sbb
aaa
pop
aaa
je
inc
inc
sub
dec
mov
sahf
cmp
negl
adc
and
andl
cmp
push
xchg
sbb
arpl
inc
mov
pop
xchg
enter
inc
xchg
pop
dec
jo
add
inc
sbb
test
jo
les
aam
lcall
movsl
and
test
addl
fdivl
dec
mov
mov
push
mov
jecxz
sbb
jb
shl
add
add
or
stc
pop
add
fistpll
outsb
push
mov
sbb
push
sti
sbb
lods
adc
bound
cmpsl
mov
jo
fildl
test
pop
mov
xor
cmp
jecxz
nop
add
lock
mov
push
ret
test
ret
imul
inc
loop
dec
bound
or
pop
pop
pusha
add
rorb
js
xchg
jo
leave
fimull
inc
mov
mov
mov
dec
sub
iret
or
shll
mov
psrlq
negb
cmovl
je
inc
loop
nop
into
in
adc
jbe
add
lods
scas
mov
dec
xor
cmp
adc
add
mov
mov
push
dec
mov
shlb
cmpsb
jo
mov
je
loope
dec
cmpsl
lcall
cmp
or
jo
inc
or
push
inc
outsl
ret
add
jp
adc
jp
and
es
add
add
ret
lock
xlat
mov
fs
or
push
sub
mov
and
xor
cltd
push
push
lea
aaa
clc
ret
dec
sti
arpl
dec
imul
jbe
jne
and
adc
sti
popf
nop
loope
pop
cmp
pusha
sub
push
dec
jmp
pop
mov
fmull
push
xchg
out
jecxz
lea
sub
or
push
movsl
push
lea
fwait
test
push
mov
ret
cmp
ss
adc
mov
mov
sahf
rorl
jnp
cmp
inc
push
and
sub
push
inc
sub
xor
incb
and
sahf
xchg
pop
gs
sbb
sbb
xor
pusha
faddl
enter
or
mov
mov
add
or
popa
pop
or
inc
addl
cmp
test
data16
lock
out
mov
inc
add
lea
orl
inc
push
sub
pusha
adc
mov
lock
dec
movsb
lea
orl
cmp
lods
mov
lea
dec
clc
or
sub
adc
mov
aam
fcoml
sbb
push
jo
lea
movl
sub
xchg
mov
insb
movsb
mov
add
inc
ss
orb
in
sbb
stos
sbb
pusha
sbb
pop
nop
and
mov
jns
lea
xor
add
notb
pop
or
adc
loope
scas
and
ljmp
out
inc
push
sbb
shlb
jne,pt
mov
adc
add
mov
or
or
test
fisttpll
dec
or
in
call
clc
imul
xchg
je
xchg
and
pop
imul
negl
inc
jge
dec
cmp
fldl
imul
add
repnz
clc
adc
fadds
fsts
pop
ret
add
xor
cwtl
pop
js
les
inc
fsubr
lods
sbb
leave
cmp
adc
or
std
sbb
inc
out
jle
cmpsb
aas
sarb
pushf
cmp
jl
mov
mov
pop
inc
push
mov
inc
shlb
mov
mov
decl
dec
jns
jle
pop
fcom
mov
pop
xorb
test
xor
mov
or
sbb
xchg
pop
push
push
clc
push
das
xchg
push
add
push
jecxz
and
rcr
icebp
out
rcrb
xor
sub
xlat
or
sub
inc
and
push
add
add
shll
mov
add
add
mov
adc
insl
xor
adc
adc
sbb
mov
ljmp
mov
in
clc
push
sub
jmp
push
sbb
or
mov
xchg
inc
inc
and
pop
mov
loopne
xchg
xor
movsl
mov
int3
call
jae
push
fdivs
shrl
inc
push
inc
push
sbb
lea
xor
push
cmp
xorb
cmp
jo
sub
fdivs
inc
or
push
and
call
inc
js
inc
or
lea
lret
lahf
jmp
loope
cmp
loop
enter
and
mov
sub
inc
pop
scas
push
pop
lea
push
or
sub
and
inc
and
adc
mov
cs
out
jecxz
cmp
pop
jae
sahf
out
add
add
pushf
push
push
add
jb
out
jecxz
sub
jo
or
cli
add
or
jge
adc
je
add
stos
scas
ret
mov
mov
fadds
add
xor
mov
mov
cmp
inc
mov
fnsave
ret
subl
sub
in
cmp
and
and
jle
sbb
addr16
out
mov
pop
pusha
mov
in
adc
or
jmp
inc
mov
push
cmp
scas
cmp
shll
and
ret
das
add
sub
jne
fildl
shrb
pop
loopne
inc
pop
and
loopne
lods
mov
push
std
add
adc
cltd
jns
dec
pop
sub
pop
sub
dec
xor
repz
push
and
sahf
push
inc
xchg
popa
shl
mov
jo
and
mov
sub
test
and
mov
push
mull
shr
add
or
mov
sti
mov
and
adc
push
adc
mov
fisubl
rolb
inc
or
testb
push
sarb
imul
xor
stos
mov
xor
or
sub
jbe
adc
add
pop
jg
daa
fmuls
ss
add
mov
outsl
repnz
pusha
pop
mov
xor
mov
mov
mov
and
inc
xchg
imul
adc
ret
jbe
rcrl
dec
roll
mov
push
cmp
lahf
pop
popa
or
adcl
push
mov
sub
mov
lock
or
test
sbb
and
mov
push
push
lods
xchg
sbb
call
sbb
or
jno
add
mov
sbb
pusha
sbb
push
adc
sarb
ljmp
or
adc
adc
mov
dec
shll
push
xchg
test
pop
mov
add
mov
adc
nop
jp
scas
mov
aaa
xor
pop
sub
loope
stc
push
lret
ss
and
dec
inc
jns
or
sub
int3
lods
rolb
imul
jo
xchg
mov
pop
add
fstps
sub
add
adc
adc
xchg
xchg
mov
or
cli
sub
sbb
sbbb
fcompl
std
mov
andl
xchg
mov
ds
fidivl
or
clc
shlb
and
sbb
mov
arpl
cmp
out
mov
pop
pop
push
cmp
pop
loopne
test
cmp
dec
or
xor
stc
jg
dec
adc
pop
add
repnz
mov
add
daa
cmp
idivl
and
lcall
and
scas
jo
sub
inc
and
fisubrl
xor
pop
and
sub
xor
xor
shr
add
outsl
adcb
push
loopne
mov
adc
push
or
or
inc
add
cmp
stos
fisttps
fsts
fsts
add
movsl
mov
nop
lods
or
dec
test
pop
imul
and
adc
filds
adc
fsts
push
xor
cmp
lods
fsts
inc
jp
push
xor
sarb
ret
in
push
sti
movsb
xchg
push
xchg
fadds
xchg
cli
mov
or
jbe
fadd
pop
xor
bound
daa
popa
fbld
arpl
rcll
inc
inc
and
xchg
and
inc
pusha
adc
pop
mov
jnp
and
push
adc
lret
sbb
sbb
push
push
add
push
and
mov
push
mov
adc
sub
leave
movsb
dec
rol
pop
jp
fnstcw
or
sbb
add
and
test
pusha
outsb
in
gs
js
lea
ss
xorl
or
lret
shlb
jo
inc
imul
imul
inc
clc
or
fsubs
enter
adc
push
add
push
sub
fcmovu
push
xor
and
mov
push
aaa
fucomi
lcall
data16
cld
sti
mov
push
ds
adc
sbb
mov
mov
shll
loope
cmpsl
loope
insb
jo
lock
stos
fildll
stos
in
or
add
unpcklps
mov
cmp
add
pop
sbb
aaa
lret
aas
or
in
shll
movsl
push
push
mov
mov
mov
cmp
neg
ficompl
xor
scas
add
and
add
repnz
sahf
adc
xor
jmp
dec
mov
cmp
and
cmpl
movsb
xchg
push
lret
adc
dec
sbb
dec
push
push
push
loope
iret
fidivl
mov
or
out
push
inc
adc
mov
rol
cmc
mov
ret
imull
rclb
mov
cld
xchg
fdivrp
xchg
int
arpl
adc
sbb
push
push
lock
pop
sbb
push
mov
pusha
aam
push
loopne
scas
jbe
shlb
add
repnz
mov
fwait
dec
idivb
je
sub
out
sbb
lock
decb
cmp
jge
jmp
shl
lea
test
hlt
adc
push
lret
jo
daa
and
push
aas
push
mov
add
std
push
adc
rclb
sbb
ljmp
rcl
dec
mov
int
mov
sub
imul
add
int
and
pushf
pop
scas
stos
sub
pop
add
mov
xor
add
cmc
dec
add
insb
in
add
or
rolb
cmp
call
ss
xor
push
fs
rcll
sbb
gs
push
xor
inc
xor
inc
std
jne
test
fisubrl
dec
shl
sub
xchg
xor
jle
push
fistpll
inc
and
rcl
call
or
ss
and
and
icebp
jg
adc
mov
add
cmpl
dec
test
add
inc
test
sbb
mov
lock
add
adc
mov
adc
sub
aam
imul
dec
xor
pusha
pop
ljmp
out
mov
add
movsb
push
or
push
sub
mov
mov
xor
jl
jmp
popa
mov
sub
lds
imul
inc
dec
jp
sbb
inc
dec
fstp
dec
pop
dec
mov
push
ficoms
and
shll
call
loope
adc
and
adc
sub
packssdw
push
mov
cmp
sbb
sarb
cld
ret
pop
cli
push
add
cld
dec
movsb
lret
loop
push
and
push
push
add
addr16
push
or
cmp
adc
cmpsl
adc
or
mov
lea
lea
mov
imulb
dec
repz
adc
add
test
lret
into
push
pop
sub
cmc
or
inc
jo
xor
or
inc
and
xor
adc
jle
clc
dec
ja
test
mov
lods
repnz
testb
loopne
lea
mov
rolb
pop
xchg
ret
add
stos
aad
shrb
fistpll
xchg
test
mov
or
and
stos
jne
and
int3
pop
aaa
aad
xor
lret
daa
push
loopne
add
xor
or
nop
jle
and
adc
lea
out
cs
add
je
push
xor
dec
loopne
std
pop
pusha
dec
rorb
xor
push
add
mov
std
aad
sbbl
or
or
add
or
fwait
add
mov
pop
add
inc
orl
jmp
sub
xchg
mov
cmp
mov
repnz
sbb
xor
mov
dec
lcall
inc
fimull
repz
sbb
cmpb
dec
sub
fcmovu
cmp
jnp
hlt
xchg
clc
adc
mov
fsubs
mov
imul
mov
ljmp
dec
push
loopne
add
mov
mov
cltd
push
hlt
repnz
outsl
add
xchg
dec
add
ljmp
jmp
pusha
dec
add
dec
int
mov
sahf
mov
mov
es
je
out
test
mov
push
jmp
filds
out
push
mov
push
mov
js
in
and
push
into
mov
pop
shlb
ret
rclb
in
adc
push
push
sub
insb
sti
mov
mov
and
inc
push
pop
fucomp
lcall
fcomp
push
mov
dec
mov
aas
add
scas
and
ljmp
adc
mov
es
or
cmp
mov
sub
mov
movsb
or
mov
jl
mov
mov
aas
adc
mov
push
mov
out
or
and
mov
push
adc
or
mov
or
pusha
enter
add
in
jbe
or
mov
pop
inc
bound
xchg
daa
xor
out
pop
mov
add
dec
and
mov
inc
decb
aam
es
int3
cmp
push
push
dec
pop
dec
enter
mov
mov
pop
call
mov
das
aam
inc
add
add
fdivl
adc
dec
popf
test
orb
jge
sbb
jmp
add
lcall
xor
xor
negb
xor
inc
ret
xchg
je
jnp
arpl
mov
mov
ret
loop
pop
sbb
inc
mov
jo
push
sbb
call
jo
stc
push
push
jo
cmp
sbb
mov
push
mov
ret
or
mov
lahf
faddp
sub
push
adc
push
cmp
push
stos
test
add
in
fiadds
fdivrs
or
mov
enter
lods
jl
pop
and
sbb
dec
dec
fsubl
leave
dec
in
mov
mov
movsl
pusha
sub
and
sbb
fcoml
push
sbb
pop
or
cmc
jae
add
rorl
sub
addb
outsl
adc
jge
add
pop
ret
mov
ficoml
jp
or
jns
cmp
jbe
insl
or
dec
je
inc
aam
push
inc
ret
add
mov
sbb
cmp
push
inc
and
popf
mov
cmp
push
sub
xchg
push
dec
ss
xchg
jbe
and
lret
jl
inc
jg
push
cmp
and
sbb
push
aam
insb
dec
adc
xchg
sub
jecxz
or
xchg
push
add
test
mov
fbstp
bound
sub
cmp
add
gs
inc
adc
mov
sbb
adc
or
testl
cmc
lea
out
adc
pop
add
and
mov
and
sub
or
xor
insb
in
mov
pop
fistps
dec
popf
aad
aas
inc
pusha
dec
pop
sub
outsb
faddl
lds
nop
push
xor
mov
and
les
add
mov
pop
fldenv
adc
sbb
add
mov
and
and
sub
pop
cmp
cmp
mov
jp
dec
sub
je
inc
dec
inc
out
mov
aad
push
add
xor
inc
in
fldl
adc
cmp
arpl
jle
and
ja
pop
es
or
scas
add
sbb
js
pop
cld
stos
sbb
scas
insb
mov
xor
loop
sahf
mov
dec
addb
cld
or
add
jae
or
imul
xchg
shll
lahf
emms
ds
popf
mov
fs
inc
sbb
lds
or
jmp
inc
test
adc
xchg
sbb
pusha
aam
xchg
das
inc
push
inc
scas
pop
aas
js
cmp
fs
and
sarl
cli
add
pop
ret
pop
in
mov
and
gs
fwait
mov
push
jp
in
xor
js,pt
adcb
fistpll
subb
movsl
inc
pop
pusha
add
sbb
mov
clc
xor
pop
pop
jmp
out
mov
js
inc
test
dec
test
push
nop
enter
cmp
cltd
pop
mov
lds
push
sbb
out
cmp
cmovg
xlat
inc
divb
sub
push
jns
dec
sub
add
dec
xor
rorb
mov
lea
adc
xchg
inc
insb
ficoml
fdivs
and
jo
xchg
out
inc
or
ret
xchg
xlat
xor
cmp
inc
push
movsb
pusha
mov
cltd
lods
push
fs
mov
push
push
mov
scas
push
mov
xchg
dec
lret
xorl
push
mov
in
add
cltd
bound
sbbb
rolb
xchg
sub
addr16
clc
test
pop
psubusb
stos
dec
leave
pushf
loope
inc
xor
push
or
cmp
jmp
and
push
jmp
push
sub
pop
cmp
push
gs
cmp
inc
stos
push
inc
pop
xchg
rcrb
mov
and
add
push
add
sub
stos
mov
cmp
pop
fisttpll
cli
call
fdiv
inc
dec
add
or
pop
mov
xor
sub
jnp
loop
add
jnp
rcrb
sbb
js
fwait
adc
or
sbb
int
xchg
sbb
add
test
inc
inc
scas
mov
ja
clc
and
inc
cmpsb
int3
dec
imul
stos
sbb
add
cltd
and
add
jmp
push
mov
dec
stos
fs
xchg
enterw
adc
leave
jo
mov
test
xchg
xor
jmp
out
mov
push
push
and
mov
test
in
insl
dec
add
cmp
ficomps
xor
xchg
mov
push
ret
insb
and
ss
rcr
lcall
or
ret
jo
jne
pop
lahf
push
push
sbb
or
pop
xchg
nop
mov
and
xor
add
adc
xor
and
inc
in
loope
nop
insl
jae
mov
and
adc
test
sbb
push
pusha
pop
pusha
push
rcll
pop
lahf
in
xchg
xchg
repz
pop
inc
mov
repz
outsb
xor
push
mov
loop
aaa
xchg
pop
pop
adc
ret
mov
ret
ret
cmp
sub
enter
push
sbb
pop
mov
adc
lcall
mov
push
push
xchg
jno
movsl
movsb
or
loop
and
push
sub
add
inc
mov
lahf
jae
inc
and
test
rol
add
mov
add
sub
movsl
inc
orb
inc
add
aaa
and
sbb
sub
inc
pusha
jmp
data16
call
jae
sbb
dec
or
mov
sarl
sbb
or
sub
inc
adc
xchg
mov
and
mov
nop
clc
inc
inc
mov
sub
push
xchg
les
cmp
or
sub
sbb
adc
and
shlb
cli
orb
and
sbb
fadds
jnp
xor
in
mov
stos
int3
shlb
aas
sbb
adc
shrb
jnp
xor
lock
sbb
mov
lods
sub
add
xor
xor
pop
mov
adc
mov
xor
pop
xor
push
leave
mov
push
jecxz
addb
js
mov
sbb
push
pop
adc
divb
jmp
dec
imull
clc
mov
out
add
add
cmpsl
repnz
add
pop
or
sbb
orl
pop
repz
lock
push
push
call
popa
push
add
imul
push
mov
wrmsr
xorb
rcll
loope
mov
ja
adc
push
or
out
mov
lea
test
xchg
xor
xor
mov
push
add
insb
pop
pop
ror
sbb
xchg
and
inc
add
ss
and
cld
dec
dec
sub
sbb
mov
xor
mov
add
xor
sbb
jno
insb
aaa
pusha
cmp
xor
gs
or
adc
sub
lock
push
insb
and
sti
rolb
cs
out
mov
idivl
inc
mov
push
mov
pop
fldl
fisubrs
cmpsb
into
out
push
iret
sarl
out
stc
sbb
pop
add
faddl
aam
xor
add
dec
hlt
xchg
je
sub
xchg
repz
add
pop
sbb
add
xchg
xchg
adc
js
rolb
xchg
out
xorb
jae,pn
je
test
sbb
out
rclb
cmp
add
mov
scas
roll
shr
es
ret
pop
mov
shrb
pop
loopne
jb
pop
jb
call
enter
pop
jb
shl
andb
shlb
push
jb
lds
rolb
dec
jp
inc
pushf
dec
in
inc
call
test
jae
jge
cmp
and
jmp
jl
cli
inc
or
push
in
mov
push
faddl
aam
mov
push
ljmp
stc
andl
rorb
incb
or
test
push
les
stos
push
push
jne
xchg
jb
jmp
push
push
sahf
loopne
fcoml
push
lahf
dec
rorl
sub
test
xor
xorl
or
xor
inc
xor
pop
jmp
add
adc
add
add
pusha
ss
or
or
jmp
test
dec
loopne
and
out
xor
outsb
pop
or
sbb
sbb
or
cmp
out
jo
popa
or
jne
sub
loop
sahf
xor
cmp
daa
xchg
lcall
xor
push
jp
ret
adc
xor
push
mov
cmp
adc
or
daa
lock
movsb
sub
xchg
repz
fisubrs
xor
pop
mov
pop
cmp
adc
xor
testb
jne
movzwl
bswap
clc
add
pop
idiv
or
sarl
xchg
je
add
outsb
inc
xor
jmp
andl
cmp
mov
daa
adc
dec
push
adc
lea
adc
pusha
push
pop
fcoml
add
cmp
sub
jg,pn
pop
sti
dec
jae
in
nop
adc
cmp
insb
add
int3
cmp
sbb
out
enter
insl
adc
push
movsb
iret
aad
ja
fists
xor
inc
adc
sbb
adc
rol
sub
sbb
subb
mov
fildl
cltd
inc
xor
mov
mov
aaa
mov
rcr
pop
fstp
sbb
mov
cmp
leave
or
hlt
xchg
inc
sbb
jmp
and
jmp
repnz
subb
imul
negb
out
push
adc
inc
std
dec
adc
add
sti
push
push
or
pop
adc
add
and
popa
xor
insl
xor
scas
loopne
pop
pop
ds
js
sbb
add
push
sub
mov
es
pop
mov
adc
pop
ret
mov
cmp
hlt
sbb
in
mov
ret
mov
cli
lea
push
pop
xor
inc
lock
out
popf
sbb
add
sub
sarl
fidivrs
jae
out
lock
mov
push
popa
add
lods
push
lock
sbb
hlt
push
xorb
dec
push
mov
push
addl
test
push
cmp
idiv
cmp
push
insb
or
sbb
xchg
in
add
mov
inc
clc
pop
dec
shrb
loop
mov
add
mov
clc
add
test
mov
cs
out
or
push
xchg
addb
push
push
jno
jne
mov
fnstenv
cmpsb
repnz
sbb
lock
adc
sub
pop
lods
mov
addb
jbe
in
shll
mov
mov
push
aas
inc
inc
lods
lods
push
cmc
or
or
mov
test
adc
adc
lea
loope
fdivrp
mov
jmp
jl
pop
cltd
jp
pop
sub
movsb
ret
gs
stos
loop
add
shrb
and
cmp
push
fldl
jmp
cltd
add
mov
dec
lock
mov
pop
out
adc
clc
add
dec
push
jo
push
addr16
add
call
push
outsb
lock
loopne
fmull
pusha
shll
aam
push
and
push
sub
inc
stos
inc
dec
xchg
xor
cltd
test
fimuls
push
in
mov
inc
call
inc
loopne
or
jp
pop
mov
sti
hlt
push
pushf
pop
je
mov
adc
dec
aaa
cmp
or
push
lock
xchg
inc
adc
inc
add
out
pop
test
dec
nop
roll
xchg
in
inc
mov
jnp
sbb
add
pop
clc
fldl
and
test
sbb
test
nop
sbb
mov
idiv
jne
add
insl
pop
and
dec
pushf
push
mov
out
sti
jne
insb
jp
sub
clc
call
xchg
push
int3
adc
xchg
arpl
or
push
ror
or
inc
clc
mov
aad
adc
xchg
dec
dec
inc
mov
push
je
cmp
add
cltd
add
mov
sbb
ja
es
jecxz
pop
adc
bound
lcall
les
pop
sub
inc
cmp
pop
out
adc
adc
je
mov
or
lock
inc
add
or
xor
lahf
cwtl
jo
sti
das
jp
pushl
aam
xchg
ror
rol
cmp
pop
das
fmuls
test
add
mov
jno
inc
sub
cwtl
mov
push
add
imul
movl
xchg
lret
dec
orb
cmpsb
fisubrl
adc
nop
or
sub
sub
sub
cltd
cmp
lods
ret
aaa
dec
add
pop
adc
mov
add
pop
mov
movsl
sbb
inc
mov
cmpsb
and
inc
inc
push
sbb
and
dec
cld
xchg
dec
mov
push
mov
shlb
outsb
and
add
fdivr
mov
push
pop
add
pop
dec
push
cmpb
or
fisubs
and
cmc
or
jbe
lds
cmp
je
ds
rcrb
and
stos
out
push
mov
adc
sbb
adc
sub
sbb
rclb
pop
push
dec
push
in
cmp
push
inc
aam
push
sbb
or
xor
xor
in
or
enter
cmp
in
add
dec
push
cmpsl
fsubp
addr16
movsl
jo
or
ss
xor
fists
sbb
or
push
fnstcw
dec
fidivrs
push
jge
clc
push
inc
add
inc
jecxz
adc
adc
cmp
adc
jmp
sub
push
daa
scas
les
xchg
dec
mulb
pop
jmp
pusha
and
js
lret
shld
and
push
or
mov
loopne
daa
scas
out
das
push
rcr
cmpsl
inc
in
outsb
jle
rcll
add
lods
sarl
pop
cmpl
jb
mov
xor
and
jl
or
mov
add
mov
adc
bound
lea
movsl
add
movsl
pop
push
outsl
mov
pop
jb
sub
pop
int3
add
mov
arpl
and
and
add
sbb
ljmp
jl
lahf
sub
mov
aaa
push
movzwl
dec
das
bound
jmp
pop
pop
movsl
jmp
xor
jmp
cmp
sub
dec
cmpl
loop
jae
inc
cli
test
jge
push
and
adc
adc
pop
jge
mul
dec
add
sub
lods
push
xorb
push
pop
inc
loop
scas
inc
push
enter
mov
push
add
adc
push
enter
dec
xchg
in
push
sub
inc
pop
dec
xor
push
in
aad
or
sub
mov
mov
or
push
inc
jecxz
lret
sbb
dec
adc
ss
and
sbb
adc
xor
sbb
xor
mov
xor
sub
stos
rorb
add
sub
cmp
scas
sub
sbbl
sub
jle
xor
fs
or
mov
dec
mov
ljmp
pushf
ficoms
mov
shll
popa
je
cmp
jp
test
je
mov
inc
xchg
pushl
or
and
sbb
mov
je
int3
sbb
pop
jge
pop
orb
mov
or
movsl
or
sahf
enter
mov
nop
push
nop
or
lods
adc
insb
ficompl
dec
cmp
push
inc
inc
xchg
fldcw
push
addr16
mov
jo
fsubl
push
jmp
pop
mov
adc
adc
in
inc
inc
and
mov
cwtl
or
incb
inc
lea
push
pop
pop
pop
mov
mov
xchg
push
popa
ret
shlb
fnstsw
call
cmp
cmp
xchg
adc
pop
mov
insl
orl
sbb
push
stos
pusha
adc
scas
sub
xchg
dec
mov
rcll
imul
jb
and
jge
jmp
rolb
call
js
sbb
aad
in
movsb
xchg
lock
xlat
in
shrb
sbb
cmp
dec
pop
cmp
fisttpl
call
fcmove
popa
add
aas
mov
or
and
dec
and
mov
push
adc
add
adc
add
ret
mov
sub
cs
inc
sub
and
je
lea
sbb
hlt
xor
outsl
nop
cld
clc
in
push
mov
pop
addb
clc
jmp
mov
in
or
stos
inc
setb
lea
es
mov
pop
adc
js
push
lea
xor
and
sarb
mov
jl
cmp
adc
cmp
gs
dec
push
ds
out
adc
lcall
inc
sub
mov
and
insl
xor
repz
nop
mov
push
lock
inc
aam
xor
xchg
adc
insl
loop
sub
dec
or
jo
faddl
scas
cli
sbb
mov
cs
sub
jb
jp
into
mov
dec
insb
inc
dec
adc
movsl
push
pop
in
jo
or
xor
aam
lret
out
xor
xchg
mov
and
or
lock
lea
sub
dec
es
ss
rorb
dec
or
rorb
and
outsb
or
or
push
dec
fstps
lds
inc
and
out
xor
mov
lods
insl
call
xor
jne
dec
xchg
neg
push
inc
sbb
addl
ja
scas
inc
ljmp
add
mov
ret
add
cmp
arpl
or
and
adc
add
push
sub
nop
icebp
push
dec
cmp
and
enter
data16
and
mov
sarb
inc
adc
cld
inc
cmp
test
inc
cmp
add
adc
pop
cmp
data16
out
insl
and
inc
adc
push
mov
sahf
out
or
int3
mov
out
sbb
test
dec
mov
add
dec
aam
push
add
repnz
aam
pop
adcb
xchg
mov
jg
xor
cmp
fiadds
ficompl
pop
rcrb
pop
and
push
xchg
fsub
add
push
loope
stc
add
loop
add
movsl
insb
test
xchg
add
aad
and
ljmp
xchg
fcompl
sbb
repnz
je
cld
clc
xchg
push
int3
orb
add
xchg
stos
dec
mov
data16
push
inc
adc
mov
inc
or
inc
add
mov
addl
dec
add
cltd
jp
fsts
pusha
sub
call
push
and
xchg
add
xor
xchg
jmp
jl
ret
aad
push
jg
sti
sub
out
in
adc
iret
dec
and
js
inc
jmp
leave
push
sbb
sub
add
mov
jo
xchg
dec
in
lea
inc
dec
or
aam
js
jo
les
and
push
add
and
cmp
pop
faddp
sub
dec
xor
push
adc
imul
or
movsbl
push
rorl
and
xlat
and
inc
push
sbb
dec
push
push
xor
pop
test
xor
lea
mov
lds
ds
pop
pop
mov
popa
test
dec
dec
je
xor
inc
ret
mov
xchg
movsb
jmp
xchg
pop
movsl
add
sar
dec
femms
bts
lea
stos
stos
sub
mov
popf
mov
out
ficompl
loop
cmp
jo
andl
test
test
adc
fisttpll
or
inc
mov
mov
add
push
mov
xor
fcoms
cmp
lock
push
lahf
xchg
test
lods
push
stos
popf
lods
loopne
movsb
scas
ss
cmp
add
dec
dec
sbb
pop
cli
insl
add
gs
push
add
jge
dec
pop
ret
shl
jbe
mov
and
cmp
jecxz
pop
xor
pop
adcl
movsb
mov
fstps
sbb
loop
push
jne
xchg
xor
mov
or
jo
pop
and
out
mov
iret
add
cmpb
cmp
cmp
push
adc
das
dec
lock
pop
xorl
and
add
jbe
mov
shll
es
aas
or
lret
pop
add
add
pop
pusha
icebp
sub
sbb
cmp
push
or
sbb
xchg
test
mov
xor
xor
sbb
pop
dec
imul
in
sbb
and
insb
roll
jbe
inc
and
pop
push
stos
add
gs
stos
xor
lea
push
xchg
cmpsb
sbb
fsub
or
push
dec
out
mov
push
sbb
add
push
in
jmp
push
cltd
cwtl
pop
mov
and
cmp
pop
dec
sbb
je,pn
pop
in
inc
cmp
add
jo
jmp
cld
sbb
test
xor
mov
push
orb
fs
icebp
sarl
xor
sbb
sbb
or
cmp
jbe
jae
clc
add
adc
hlt
sti
pop
add
mov
jmp
push
pop
inc
xchg
sbb
notl
or
push
test
push
call
cs
mov
mov
add
shlb
stos
cmpsl
push
je
inc
sti
inc
adc
or
into
push
jp
sbb
mov
fnstcw
mov
push
sbb
ret
call
sub
hlt
pop
fnsave
add
test
je
xchg
add
add
jb
bound
add
pop
int
faddp
sar
std
js
sbb
in
data16
or
pop
jne
sbb
jge
mov
add
jnp
add
jmp
add
add
lret
sbb
hlt
add
dec
dec
aas
adc
or
addl
scas
icebp
sbb
addr16
mov
pop
jne
push
mov
add
push
jecxz
lods
mov
inc
fisttpl
add
or
cs
pop
dec
das
dec
stos
or
sub
push
movl
xor
dec
inc
das
fistpl
icebp
pop
mov
cwtl
jbe
adc
into
gs
je
cltd
inc
push
push
orb
enter
sub
lcall
or
addl
lea
inc
sbb
scas
xor
movsb
in
jle
lods
mov
pop
jne
cmp
clc
push
sbb
pusha
test
dec
dec
mov
jnp
rclb
mov
insl
mov
dec
into
add
dec
lods
jne
dec
jle
or
outsb
adcl
cli
mov
push
out
inc
loope
shrb
push
roll
repz
sbb
fwait
and
imul
inc
push
mov
test
int
loopne
lea
inc
cmp
fistpll
dec
bound
sub
push
push
fdivs
daa
dec
or
jmpw
sub
hlt
jne
lds
icebp
jo
mov
ret
pop
or
or
inc
pop
je
and
add
jno
push
xchg
jl
xchg
ja
into
push
push
andb
cmc
sub
mov
lods
sbb
dec
push
adc
hlt
and
movsl
push
fbstp
sbb
add
sub
push
call
add
inc
push
xchg
jno
pop
or
clc
inc
gs
dec
dec
push
clc
ss
xchg
sbb
aam
loopne
inc
loop
and
add
xor
rorb
data16
pop
lea
jmp
or
pop
outsl
mov
push
fidivl
push
je
adc
je
insb
lcall
or
cltd
adc
or
jb
xchg
inc
and
adc
mov
xchg
outsb
insb
push
jge
mov
enter
jmp
and
mov
mov
inc
adc
ret
inc
adc
aam
mov
add
and
push
cmp
xchg
std
push
push
or
aas
push
addr16
dec
bound
push
and
cld
sub
inc
clc
sahf
addl
rorl
add
pop
pop
cld
xchg
mov
push
mov
rorb
push
adc
je
cmp
dec
mov
or
xchg
js
dec
out
sbb
inc
inc
lea
mov
ret
and
xor
or
dec
arpl
cmp
mov
jmp
mov
jo
shr
xchg
cmp
mov
push
mov
ret
xor
push
cmp
adc
jo
cmp
mov
and
outsb
dec
mov
movsb
cmp
cmp
loopne
inc
int3
or
inc
cmp
push
adc
cmc
dec
shl
rclb
add
sub
mov
add
jg
clc
cmp
lock
rcrl
popf
xchg
xorb
mov
push
xchg
cmpsb
mov
adc
outsb
add
push
imul
mov
cltd
jbe
movsb
ss
cmpsb
pop
push
stos
jg
mov
sbb
sbb
lea
testb
push
mov
push
or
inc
push
dec
mov
or
rcrb
clc
lcall
shl
adcb
enter
and
mov
mov
mov
subl
pop
mov
adc
les
cmc
test
sub
dec
outsl
mov
add
sbb
push
push
je
daa
fwait
andb
mov
subl
insl
add
sub
ret
cmp
inc
pop
add
inc
out
xorb
jp
lea
jae
sub
fcmovu
add
pop
ret
je
xchg
sub
add
inc
jmp
push
jecxz
sub
adc
sbb
adc
unpckhps
or
fdivr
add
jne
int3
js
sbb
push
jo
jg
fldt
inc
and
mov
mov
push
insl
or
rorb
pop
push
enter
mov
adc
scas
fisttps
insb
sub
inc
stos
out
inc
pop
data16
sbb
xor
lock
sbbb
xchg
pop
out
adc
or
dec
sub
sub
enter
add
push
mov
aaa
push
das
jb
cmp
dec
xor
lea
xchg
and
adc
add
aam
jp
and
inc
arpl
sub
xlat
jo
mov
mov
lea
add
xchg
in
mov
jecxz
xorl
mov
ljmp
movsl
push
sbb
adc
idivl
loop
and
dec
jl
mov
movsl
mov
pop
sti
test
mov
roll
mov
lods
dec
into
mov
sub
add
push
pushf
xor
movsl
ss
icebp
xchg
sub
sub
mov
repnz
scas
or
out
inc
dec
fcomi
insl
xlat
xchg
pushf
data16
xchg
xchg
adc
pop
jae
pushf
loopne
addl
and
and
xor
xchg
mov
fcomps
ja
jle
mov
ss
aas
rolb
pop
push
ljmp
imul
and
add
xor
jle
or
ss
sub
cmp
sub
sbb
roll
into
rorb
fidivrl
mov
push
pop
imul
mov
or
add
mov
lods
dec
inc
mov
sbb
adc
dec
dec
add
push
ret
pop
mov
or
push
push
add
xchg
add
mov
and
push
andl
dec
sub
xor
jo
inc
sbb
js
test
fisubl
daa
sub
push
jnp
xchg
sbb
xchg
adc
mov
out
punpckhbw
pop
adc
rolb
enter
add
jle
rcrb
lea
int3
pop
and
in
dec
xlat
lock
fcoms
rclb
or
xchg
sbb
stc
add
js
test
sub
push
add
cmp
cmp
inc
and
mov
lahf
add
and
push
jg
mov
xchg
hlt
pusha
cwtl
cltd
fstpl
adc
adc
sbb
mov
and
pop
imul
test
adc
int3
adc
xor
jns
shll
push
or
push
dec
movsl
pop
negl
sbb
fstl
dec
aad
and
inc
dec
inc
inc
push
mov
cmp
pop
adc
xchg
adc
ret
sahf
and
cmp
lods
int
insl
lock
loopne
dec
xchg
xchg
pusha
inc
nop
mov
loopne
aaa
fisubrl
dec
sub
cmp
movsl
les
or
fsubrs
imul
dec
div
aam
rolb
push
movnti
xor
mov
frstor
jl
data16
cmc
imul
add
add
xor
scas
rorb
adc
cmp
sbb
sub
adcl
dec
pusha
sub
lea
jae
stos
and
int3
loop
pusha
or
enter
sbb
adc
jae
loopne
lods
dec
ss
fstpl
or
xor
roll
lods
xor
or
jne
push
and
lock
dec
inc
fwait
repnz
and
mov
dec
jno
je
lea
lea
or
faddl
ret
sbb
mov
inc
js
inc
push
inc
mov
movsl
add
daa
imul
mov
xor
mov
inc
shr
outsb
pusha
movsl
hlt
jo
inc
ficoms
pop
push
add
je
pop
pop
out
cmp
and
dec
pop
and
jle
insb
je
lea
add
sub
jbe
lret
stos
sub
sub
push
jns
mov
shrb
fs
aam
sub
call
sbb
out
mov
ret
rorb
jge
adcl
sbb
xchg
nop
push
push
cwtl
push
push
sub
push
cmp
jne
lahf
sub
jmp
cli
sub
lods
mov
pop
bnd
and
jl
and
sub
pusha
jge
popa
movups
xchg
js
sbb
lret
cvtps2pd
or
jmp
pop
push
mov
push
jge
xchg
jae
inc
jb
jae
lret
jae
mov
push
mov
lret
mov
fstpt
ret
jl
leave
adc
adcl
or
dec
clc
dec
nop
xorb
xorl
or
fadds
js
pop
cmp
adc
sub
adc
andb
mov
xchg
pop
cmpsl
dec
iret
ret
add
cmp
jge
sbb
cmp
push
adc
pop
or
mov
adc
ficomps
inc
sti
xor
insw
lock
fnstenv
cld
xor
sub
gs
sbb
push
ja
push
popf
adc
mov
or
je
mov
shl
lock
cmp
sarb
mov
pop
mov
ret
sub
push
dec
mov
mov
mov
movl
push
test
js
mov
cltd
mov
cwtl
add
ret
xchg
movsb
xchg
inc
inc
iret
jl
mov
xchg
mov
in
add
inc
cwtl
movsb
add
fnstenv
sti
les
push
sbb
mov
push
xchg
add
jbe
in
cmp
inc
mov
xor
mov
add
mov
inc
insl
fdivs
and
inc
fstpt
les
test
pusha
inc
loope
les
scas
scas
adc
ss
xor
mov
or
fs
aad
movsb
adc
jmp
xchg
xchg
in
push
xchg
mov
icebp
mov
dec
xchg
pusha
dec
jo
test
into
rolb
cmp
jno
xchg
fists
jno
lea
jne
inc
push
cmpb
lock
pop
testb
je
es
inc
push
push
or
pop
mov
xchg
xor
lods
jp
pop
loope
in
pusha
push
repnz
les
and
lcall
push
mov
push
ret
mov
adc
sub
push
pop
or
les
push
lock
sbb
jb
cmp
or
in
xchg
leave
nop
add
scas
inc
and
bnd
mov
aam
arpl
sbb
nop
jo
cli
fisttpll
imul
mov
mov
sarb
icebp
popf
addb
add
lock
cmp
inc
xor
in
mov
mov
jo
mov
add
pop
cmp
xor
cld
adc
mov
je
les
lret
cmp
cs
xor
cs
sbb
push
fs
add
and
pop
inc
fldcw
cmp
inc
sub
nop
cmpsb
loopne
call
pop
in
sbb
jb
call
push
sarb
orb
sbb
push
push
jns
sub
testb
adc
push
rcr
cmc
adc
or
dec
jge
pop
push
fmull
push
cmp
outsb
sbb
pop
fnsave
call
push
mov
push
ret
cmp
dec
roll
pop
xor
ror
push
push
pusha
cli
or
jp
pop
xor
push
and
add
dec
sbb
inc
insb
jo
loope
hlt
ret
and
add
push
pop
dec
adc
lock
push
sbb
mov
je
js
dec
push
jle
add
add
std
js
cmp
adc
pop
jbe
aaa
dec
stos
subl
jmp
cmp
push
lods
clc
sub
sub
clc
mov
add
xor
xchg
mov
pop
data16
es
and
fadds
scas
cld
push
aam
and
mov
and
adc
test
sahf
test
push
mov
int
jo
dec
rolb
hlt
push
aam
pop
jno
es
ror
into
add
fstps
xchg
lret
add
cli
mov
insb
negb
lods
inc
faddl
push
mov
popf
jmp
stc
in
enter
pop
mov
mov
dec
out
mov
outsl
test
mulb
js
jbe
popa
inc
in
push
jae
xor
xor
jmp
loopne
cmp
je
inc
movzwl
cmpsl
jge
mov
push
loopne
clc
push
pop
and
sub
pop
loopne
cmp
xchg
ljmp
add
leave
push
xchg
sbb
push
rcll
dec
mov
xchg
in
and
lods
jb
or
ret
mov
daa
jl
mov
push
or
cmp
cld
jl
or
in
push
and
into
pop
clc
test
pop
jecxz
ret
dec
xchg
mov
push
stos
dec
jl
jmp
enter
leave
je
pop
outsb
add
repnz
pop
das
mov
push
mov
xchg
pop
clc
xchg
sbb
mov
ret
cmp
aam
or
jmp
pusha
push
hlt
out
push
movzbl
and
cmp
mov
mov
test
push
cmp
jl
jmp
ds
mov
lret
dec
pop
pop
and
in
and
adc
jno
call
mov
or
pop
ja
popf
ret
mov
cmp
insl
imul
mov
push
jnp
inc
add
cmp
pusha
push
inc
jle
lea
cmp
push
mov
cmpl
xor
jnp
xchg
pop
aaa
clc
dec
cmpsb
outsl
cmp
cmpl
or
test
jno
jp
dec
pusha
cmp
ret
xchg
push
adc
fs
add
ror
push
mov
xor
cltd
cmp
pop
jns
int3
sbb
pop
inc
pop
jne
push
add
jo
es
cmc
shlb
clc
les
jo
push
cmp
pop
push
pop
and
add
or
ret
dec
pop
lock
pop
sub
jg
and
fwait
cmp
or
and
js
xchg
sbbb
hlt
xor
push
rclb
cmp
mov
cmovbe
sbb
addr16
adc
add
mov
test
push
pop
pop
ret
nop
test
jnp
and
sub
sbb
push
pusha
inc
out
sub
pop
ret
mov
xchg
out
push
mov
pop
inc
xor
fld
push
daa
dec
mov
xchg
vmovsldup
lret
sahf
add
cld
pop
daa
xor
and
mov
mov
lcall
sub
sti
push
and
insb
scas
push
push
push
add
into
in
faddl
adc
pop
loop
pop
jo
fadds
jo
and
ljmp
push
xchg
mov
push
jb
xchg
fs
pop
outsl
test
orb
jae
es
imul
gs
lret
cmp
pop
cs
add
dec
iret
in
add
jnp
mov
push
mov
insb
or
or
fildl
push
cli
mov
test
cmp
add
pop
xlat
xor
jo
push
das
aam
mov
mov
dec
test
and
and
pusha
insb
popa
and
mov
cmpsl
pop
add
dec
inc
fs
push
movsb
push
loope
mov
add
push
test
dec
repnz
stc
xchg
jecxz
cltd
or
and
cmp
mov
inc
xchg
in
inc
sbb
cli
jae
sub
mov
push
das
sti
add
sbb
mov
int3
adc
fnstenv
mov
cwtl
xchg
int3
hlt
jo
mov
insl
add
pop
xchg
add
adc
clc
bound
rorl
es
add
cmp
in
loope
mov
or
cmp
or
adc
adc
adc
rcll
xor
aad
mov
addb
leave
cmc
ja
push
sbb
lea
inc
repz
mov
dec
adc
addr16
dec
pop
cmp
cmp
outsl
or
rolb
inc
add
inc
or
add
hlt
outsl
dec
pop
adc
push
bound
pop
pusha
mov
aam
cmp
push
notl
pop
enter
adc
inc
push
inc
adcb
jmp
jp
push
cs
cmp
push
notb
cmpb
in
loopne
xor
mov
sbb
inc
sub
push
inc
mov
insl
and
lret
jne
xor
aad
add
mov
and
push
add
scas
and
or
and
push
dec
arpl
jbe
add
in
push
jge
rcl
pop
sub
pop
adc
jle
and
ret
mov
daa
sub
std
pop
call
mov
inc
mov
push
aam
inc
or
rclb
dec
and
fstp
push
clc
or
or
xor
sbbb
jns
daa
jl
fiaddl
sbb
add
pop
mov
loop
ret
or
loopne
sbb
add
cmp
push
loopne
sbb
push
loope
or
jecxz
push
test
cmpl
xor
or
jno
inc
insb
pop
or
rcll
push
test
pop
sub
adc
dec
adc
es
or
jmp
negl
enter
and
inc
test
push
add
dec
adc
or
mov
loopne
sbb
arpl
rclb
inc
xor
mov
xlat
mov
notb
push
arpl
mov
lret
rcrl
inc
and
insl
mov
adc
out
outsl
cmp
imul
pop
scas
test
out
adc
mov
pop
add
sub
mov
out
gs
loope
das
repnz
rol
shrl
outsl
das
loopne
sarb
jge
xchg
mov
lock
iret
loope
fimuls
add
jns
mov
inc
pop
pop
cmp
cwtl
sbb
cmc
inc
or
ss
leave
and
push
fcomps
sbb
push
or
cmp
push
mov
loopne
cmpsl
mov
mov
jne
cmc
pop
dec
sbb
dec
add
fdivrl
pop
mov
and
pop
add
xor
jl
aaa
adc
popa
mov
inc
mov
xor
fimull
es
or
xchg
xchg
insb
or
xchg
inc
xor
dec
add
push
xchg
mov
dec
pop
xchg
xor
cli
sbb
sti
mov
ja
lods
out
adcl
je
sub
add
push
clc
scas
lea
push
cltd
loopne
fmuls
sbb
sbb
jo
push
testb
sbb
shlb
push
enter
add
loopne
mov
adc
push
adc
xor
xchg
imul
sub
jl
pop
mov
pusha
loopne
lods
loope
psrad
or
jg
xchg
and
movsb
or
lret
fcoml
sbbl
push
call
cmp
lea
adc
hlt
mov
cmp
push
push
push
sbb
daa
in
mov
adcb
sub
ds
mov
mov
push
sbb
cmp
int
add
sub
aaa
and
add
inc
je
adc
lret
leave
push
adc
push
test
adc
test
push
ds
cs
mov
sub
and
fildl
inc
fstps
and
fstpl
testb
je
adc
aad
pop
add
or
mull
pusha
and
mov
adc
loopne
les
adc
pop
aam
loope
sub
jge
aaa
mov
xor
repnz
add
loopne
or
rol
loope
mov
add
cld
test
xor
cmp
ja
test
sub
pop
dec
xchg
dec
leave
xchg
lcall
and
add
test
xchg
lods
jno
shl
test
je
sub
pop
mov
push
adc
add
adc
lret
and
dec
cmpl
mov
sarb
scas
test
or
inc
lods
test
int
loopne
inc
inc
and
add
lea
add
fsub
addb
mov
xor
xchg
xchg
stos
sbbl
mov
or
dec
push
adc
dec
pop
jg
add
mov
push
rep
push
adc
push
in
clc
cld
shlb
push
xchg
int3
orb
push
stos
xchg
stos
push
sbb
and
sbb
jle
je
push
jmp
and
adc
fdivrs
insl
and
jl
mov
addr16
rorb
call
mov
xor
cmp
add
faddl
icebp
loopne
cmpsb
and
std
adc
hlt
clc
xchg
sbb
imul
loop
fisubrs
mov
push
xor
jbe
xor
pop
lea
push
pop
push
cs
or
adc
pop
or
sbb
ja
andl
and
push
or
mov
mov
inc
dec
mov
and
dec
nop
pusha
mov
pop
jle
add
test
dec
adc
stos
pop
mov
adc
or
dec
mov
add
movl
dec
cmp
inc
aaa
test
fldl
mov
mov
pop
hlt
xchg
pop
pop
push
mov
push
xor
mov
sbb
pop
dec
or
mov
test
push
lds
loope
add
in
push
in
inc
and
mov
in
mov
wbinvd
dec
pop
loope
ja
mov
incb
fcmovnbe
add
mov
repnz
inc
fimuls
mov
add
ret
add
xorl
cmp
jl
push
cmp
jnp
test
push
inc
push
pop
les
sub
leave
sbb
adc
pop
or
add
cmp
mov
sbb
or
stos
cltd
adc
in
cmp
cmp
pop
sub
cltd
inc
sub
lds
inc
adc
dec
push
out
in
sti
or
inc
xor
pop
push
sbb
fs
and
sete
jb
mov
std
push
and
mov
sti
bndldx
xchg
mov
ret
sub
mov
mov
pop
cltd
jbe
cmp
cmp
in
dec
xchg
mov
loopne
adc
mov
mov
lds
in
add
pop
push
push
mov
mov
fisubrl
jl
fmull
push
fbstp
lds
jp
pushl
xchg
inc
faddl
jmp
fists
mov
sub
pop
push
pusha
add
test
or
push
imul
mov
popa
cmpsl
mov
movsb
xorl
fs
out
push
jb
jne
sub
movsl
xchg
lods
andl
mov
add
stos
push
lea
pop
stos
loope
cli
ds
push
add
pop
pusha
add
pop
mov
dec
sub
ret
add
cmp
sub
xlat
mov
shlb
adc
ljmp
xor
xor
aas
xchg
sbb
cmp
push
lock
sbb
incl
aaa
mov
lock
je
ja
pop
push
or
push
in
adc
int3
fcomps
cmp
push
sub
xchg
iret
rorl
imul
push
int3
pop
cmp
pusha
fistpll
add
insl
dec
rorb
xor
xchg
pusha
cwtl
pop
push
pop
mov
nop
mov
push
mov
and
js
xchg
nop
add
fcoml
sub
loopne
imul
in
push
mov
mov
xlat
sub
je
dec
shlb
out
hlt
or
stos
mov
hlt
or
jno
jp
lock
orl
mov
jne
cmp
inc
mov
repnz
or
inc
or
and
pop
in
ret
mov
mov
iret
es
push
xchg
sub
mov
xchg
stc
xor
clc
xor
wbinvd
jp
mov
cld
sub
test
orb
shr
repnz
roll
jno
or
insl
sub
cmc
sub
test
je
jl
aas
out
loope
add
movb
xor
mov
andb
xor
and
inc
xor
push
pop
ljmp
push
aad
fistpll
adc
fdivrs
je
leave
and
sub
fwait
lods
lods
push
cli
jno
or
fs
pop
je
dec
shll
or
adc
jle
jae
push
outsb
push
pushl
xchg
sub
mov
mov
or
in
adcb
push
or
mov
mov
pusha
ret
fs
adc
aad
into
sub
daa
sbb
xor
neg
push
lea
or
hlt
adc
jno
push
out
pushf
pusha
sub
das
dec
orl
nop
lods
mov
popa
sub
fsts
or
mov
mov
mov
andb
lods
in
mov
mov
sub
sbb
adc
and
sub
nop
push
addb
out
jge
jb
ret
push
enter
je
pop
mov
insb
push
or
les
int3
jge
les
adc
jge
lahf
xchg
rorb
dec
xor
xchg
dec
mov
mov
mov
push
les
jle
xor
in
mov
xchg
js
mov
push
push
add
fnstcw
sub
mov
sbbb
cwtl
inc
shrb
test
adc
lods
je
xchg
xorl
jb
adc
test
pusha
dec
test
mov
mov
or
pop
sub
sub
scas
and
dec
call
cwtl
mov
stos
lret
or
jmp
icebp
xchg
push
jle
xlat
add
dec
out
jp
add
push
outsl
dec
adc
add
pop
test
sti
sahf
mov
and
popa
pop
add
loope
mov
mov
mov
jp
inc
or
out
push
or
pop
movnti
sti
push
out
inc
test
rorb
xchg
cld
sub
pushf
jp
mov
or
mov
ljmp
addl
sbb
stc
xor
xchg
xlat
int
ja
inc
test
adc
xchg
push
sub
lcall
dec
push
in
cmp
pop
xchg
fsub
push
adc
iret
add
add
sbb
imul
enter
and
cmp
ss
subb
fcompl
popa
jno
sets
adc
jnp
adc
movsl
inc
shrl
xlat
mov
call
outsb
or
gs
outsb
fs
dec
imul
mov
jge
in
daa
testl
mov
push
push
push
adc
push
xchg
popf
cmpsl
push
adcb
jl
arpl
and
or
add
add
inc
sbb
inc
cmovo
fsubrl
mov
jg
or
xchg
in
or
popf
jo
jmp
fisubrs
inc
das
cmp
mulps
sub
jbe
movb
sahf
ja
sbb
scas
adc
dec
push
in
pushf
pop
into
aam
lret
int3
lock
jmp
leave
push
aam
pop
xor
cli
fdivr
and
js
add
push
arpl
mov
gs
mov
movsb
fsts
adc
loop
adc
mov
or
xchg
in
sub
xor
or
or
iret
call
mov
push
push
mov
dec
outsb
jae
or
push
jae
hlt
jmp
mov
shrb
sbb
test
fdivrl
and
mov
fidivrl
mov
aad
addb
push
cmpsb
into
pop
sub
or
inc
and
sbb
add
inc
add
andl
jns
sub
cmp
xlat
jnp
arpl
xchg
cmp
das
test
mov
inc
dec
test
push
in
loopne
cmpsb
mov
push
sbb
mov
daa
push
mov
test
jo
fsts
lock
push
push
add
add
push
ds
outsl
and
mov
clc
jg
add
sub
and
lret
mov
xchg
or
mov
popa
std
orb
push
adc
and
lock
push
xor
pop
jne
movaps
xchg
hlt
mov
imulb
sbb
pop
xchg
dec
and
mov
xorb
cmpsb
mov
mov
push
sbb
out
pusha
cltd
or
jo
in
lods
imul
sub
outsb
sbb
cmp
jo
outsl
push
insb
adc
inc
sbb
dec
pop
dec
int3
dec
or
fbstp
dec
sbb
sbb
or
sbb
test
sbb
test
insb
xor
sbb
aad
ffreep
inc
cli
mov
test
pop
xor
mov
pop
add
test
xchg
dec
js
sbbb
cli
sahf
dec
pop
pop
fbstp
push
lock
cmp
push
sbbl
jmp
push
or
imul
aam
jle
sub
push
inc
fidivl
loop
add
xor
test
shl
mov
sbb
adc
mov
shl
add
aas
mov
adc
push
test
xchg
repnz
neg
pop
sbb
inc
decb
jne
jp
add
cltd
push
mov
dec
jmp
dec
js
aam
add
pop
mov
push
pop
and
inc
js
or
jle
jmp
mov
pop
mov
jp
hlt
rol
clc
xor
pop
lods
jmp
push
rolb
adc
les
jbe
hlt
inc
mov
mov
stos
and
fiadds
test
mov
lock
andb
push
sahf
push
xchg
out
sahf
stc
add
cmp
adc
mov
add
lods
push
inc
movsb
add
in
ss
pop
inc
adc
cmp
jb
xor
mov
xor
inc
and
adc
je
mov
or
sub
push
sbb
pop
shlb
js
dec
fdivrs
je
xchg
andb
sbb
fcoml
mov
inc
pop
dec
inc
jecxz
or
xchg
sbb
cmp
les
xchg
adc
inc
inc
push
xor
adc
push
xchg
push
mov
cmp
inc
push
je
or
jle
push
imul
add
inc
dec
cwtl
add
sbb
and
jb
cltd
inc
or
mov
cwtl
jle
or
push
or
push
cmp
push
in
jo
inc
js
cltd
pusha
mov
lods
cwtl
inc
in
push
je
adc
sbb
jl
sbb
rolb
adcb
xlat
add
pop
xor
roll
clc
add
xor
sahf
subb
push
cmp
mov
es
andl
adc
cli
pop
sub
mov
mov
movl
push
mov
ss
je
or
push
dec
cwtl
sub
hlt
add
hlt
into
mov
cmpsl
std
dec
and
and
push
xchg
xchg
sbb
sub
scas
movsl
and
or
sub
cmc
and
mov
mov
andl
xor
mov
fldl
imul
push
inc
test
mov
sub
lret
mov
js
sbb
xor
xchg
push
aaa
loope
es
lea
push
push
push
and
sub
add
call
push
ret
mov
mov
test
mov
les
arpl
lret
jmp
leave
fadds
les
std
adc
cmp
inc
pop
lods
scas
dec
pop
and
dec
xchg
xor
sbb
call
mov
jnp
pop
aam
push
test
nop
jnp
addb
dec
push
in
in
aam
roll
inc
loope
fs
lret
addl
xlat
fbstp
dec
inc
or
lock
mov
pop
inc
dec
out
adc
stos
xchg
xor
fadds
jl
mov
das
or
clc
sbb
lods
or
xor
dec
enter
cmp
repz
mov
dec
ret
dec
adc
dec
outsb
lods
sbb
es
shll
insb
xchg
dec
cs
add
fmuls
in
mov
lds
push
fstps
bound
pushf
jl
aad
imul
jb
hlt
add
adc
or
push
sarl
out
or
test
nop
push
lea
roll
in
or
inc
inc
sub
dec
cmpsl
adc
or
lock
mov
sub
insb
leave
pop
ss
xorb
mov
leave
mov
push
push
daa
dec
add
xor
outsl
dec
pop
xor
rorb
and
rclb
or
decl
pop
add
daa
dec
dec
mov
mov
or
inc
cmp
mov
aaa
aas
in
test
mov
ljmp
push
inc
xchg
lret
scas
pop
inc
dec
or
add
mov
js
mov
enter
insb
int
mov
xchg
rolb
dec
rcl
mov
fsts
jne
movswl
sub
push
mov
out
shlb
js
adc
pop
daa
xor
sub
addb
mov
mov
das
mov
add
loopne
adcb
fldz
cmp
xor
xor
inc
data16
loopne
fdivrs
adc
or
imul
adcl
cmp
sub
pop
lds
fs
adc
cs
test
pusha
aas
jo
cmpsb
clc
cmp
pop
roll
movsl
sbb
mov
jp
adc
pushf
sar
add
leave
dec
xlat
pop
xchg
inc
mov
mov
pop
or
sub
add
sub
call
mov
mov
dec
test
jbe
fld
add
fstp
jmp
cmpb
in
int
and
loopne
out
clc
jl
adc
decl
imul
rolb
cmp
fsts
sub
add
subl
dec
sub
cmp
rcrl
mov
jnp
rorl
mov
dec
ret
inc
xor
fwait
dec
mov
inc
movsl
jp
test
leave
cmp
and
lods
and
push
or
push
mov
or
jle
ret
mov
cs
aam
ret
call
shlb
mov
adc
jle
je
adc
jns
or
pop
pop
push
mov
imul
iret
inc
sbb
jo
cmp
xor
add
and
inc
add
push
mov
jl
pop
mov
arpl
sub
jb
xorb
push
mov
clc
and
mov
or
mov
sbb
dec
mov
mov
dec
andl
cmp
mov
xchg
xchg
test
jae
push
enter
mov
or
test
test
pop
xchg
pop
imul
cmp
scas
mov
movsb
into
lock
push
sbb
xlat
xlat
mov
cmpsb
cmpsl
aam
sbb
rcrb
inc
pop
sar
sbb
adc
subb
movsb
insb
imul
sub
aam
fsubp
xor
dec
das
mov
fwait
sub
cmp
push
aam
ss
bound
mov
adc
je
cmp
pop
xchg
or
jo
popa
push
test
call
push
pop
xchg
int
inc
inc
lea
inc
xchg
push
in
mov
jbe
push
pop
pop
add
mov
mov
push
insb
xchg
pop
jnp
mov
xor
push
sarb
test
pop
inc
dec
and
cmp
ss
and
popf
xchg
sbb
push
movsb
movsb
out
push
fiaddl
dec
push
dec
adc
adc
xchg
adc
adc
xchg
cmp
push
cmpsl
jne
negb
inc
addb
push
and
pop
addl
pop
pop
xchg
dec
or
push
ret
sbb
out
les
int3
add
sbb
addb
jno
inc
adc
lcall
cmp
shrb
add
pop
mov
xchg
add
sbb
cltd
dec
fiaddl
mov
jns
push
shl
fcomps
fmul
mov
clc
add
xchg
out
push
xor
adc
dec
inc
ret
add
push
mov
sub
call
xor
and
inc
sbb
adc
add
mov
and
lcall
mov
data16
adc
scas
mov
adc
lret
mov
lret
mov
dec
fisubs
rorb
sub
fwait
movsl
popf
movsl
movsl
mov
in
mov
movsl
dec
xchg
or
push
jb
mov
push
pop
mov
adc
fsub
sarb
lret
pop
mov
jb
sub
add
sbb
add
add
mov
dec
and
jnp
ficomps
mov
mov
stos
push
lcall
mov
mov
lods
scas
shl
mov
sbb
in
mov
xor
cwtl
lea
lods
jle
cmp
clc
xlat
int3
stos
mov
dec
lods
jne
xor
icebp
jno
or
push
outsl
sbb
imul
inc
dec
push
in
dec
push
dec
mov
out
pop
jg
inc
lahf
sub
aas
add
incl
cmp
mov
inc
cmp
mov
cmp
add
fst
jnp
adc
cmp
or
inc
pop
add
stos
mov
or
pusha
jno
jl
loopne
or
int3
and
mov
adc
push
repz
leave
inc
push
pop
rorl
or
add
pop
xchg
adc
mov
popa
jne
or
push
mov
pop
movsb
daa
aam
sbb
or
mov
push
outsl
sub
and
xor
sub
lea
adc
daa
push
insl
pusha
cmpl
or
push
mov
loop
lcall
or
mov
repnz
aam
shlb
test
cmp
sbb
jne
mov
fiaddl
xor
cmpb
xor
and
repz
cmc
or
and
or
repnz
aas
repnz
or
push
loope
scas
arpl
add
jno
lcall
and
sbb
push
mov
je
lock
mov
mov
mov
mov
nop
mov
push
sbb
xchg
movsl
push
test
les
inc
adc
popa
cmp
mov
test
faddl
in
adcb
testb
mov
ljmp
xor
dec
push
addr16
pop
xchg
inc
sbb
jns
sbb
push
pop
inc
jo
push
or
fdivs
enter
pop
push
add
sbb
fcomps
mov
mov
ret
push
addr16
mov
rolb
mov
and
dec
and
or
mov
cmp
test
inc
std
jnp
mov
cmc
jae
pushl
mov
in
decl
test
dec
bound
or
xchg
push
jg
add
je
sub
imul
adc
daa
xor
xor
adc
mov
or
push
add
mov
lock
add
or
lods
sub
cmp
push
and
jl
or
xlat
lock
fadds
shlb
add
loop
jge
jns
adc
ret
jmp
adcl
pushl
or
lea
adc
les
daa
pusha
mov
add
daa
add
jl
or
insb
les
sbb
std
fisttpl
movsl
adc
inc
or
cs
iret
lods
push
rcr
dec
pusha
daa
inc
sbb
pop
loope
and
jo
mov
pushf
nop
cld
xor
aaa
or
and
or
sub
enter
mov
lods
test
cmc
jecxz
insb
cmp
pop
int3
mov
pop
cmpl
add
pop
sbb
cmp
das
ret
mov
dec
xchg
rorb
pop
mov
popa
cmp
xlat
fidivl
add
add
fcoml
dec
mov
mov
lods
mov
or
pop
aas
add
jmp
sbb
dec
jmp
xor
and
outsl
mov
mov
xchg
xchg
adc
jecxz
add
sbb
adc
scas
add
and
aaa
push
push
dec
scas
jg
or
js
iret
add
xchg
xor
cmp
je
or
je
add
jo
dec
pop
mov
jle
nop
push
adc
dec
mov
or
call
adc
mov
push
movsl
dec
add
adc
out
ret
scas
inc
ds
out
sbb
add
jmp
adc
andb
push
xor
roll
add
push
inc
shrl
bound
divb
jle
ljmp
and
sub
and
push
dec
mov
sub
inc
or
lock
in
ficompl
int
mov
and
js
sbb
ss
xor
lcall
lock
push
aam
mov
push
or
bound
incl
dec
ja
movzbl
test
xor
xchg
inc
jmp
loopne
push
adc
adc
xor
mov
inc
jno
jmp
adc
pop
mov
adc
es
push
add
mov
push
mov
fcmovne
cs
jns
sti
test
pop
push
push
push
cli
push
imulb
jmp
pop
jnp
push
cltd
enter
adc
add
mov
pop
add
xchg
sbbb
inc
sub
shll
mov
mull
jecxz
push
inc
jnp
dec
je
add
sti
inc
mov
cmp
iret
out
aam
jne
or
test
and
in
push
adc
movq
jmp
es
lret
xchg
ret
ret
adcl
aaa
es
and
mov
orl
mov
and
add
and
sub
cs
push
cwtl
adc
sub
and
ret
adc
sub
push
lock
rcrb
or
xchg
inc
leave
add
sub
or
adc
pop
je
sub
je
push
or
push
mov
jmp
xchg
push
fs
pop
cmp
mov
pop
stos
mov
mulb
cmp
sub
jne
xchg
xor
inc
dec
pushw
aam
mov
cmp
or
jne
test
xor
mov
push
or
or
push
cmp
pop
push
push
es
je
out
cld
push
hlt
fsubrs
xchg
push
fstpl
sbb
or
jle
out
push
loopne
and
int3
sub
jns
sbb
cld
aad
cmp
fwait
or
popa
mulb
pop
bound
mull
jbe
or
testb
clc
mov
adc
xchg
add
addl
push
inc
mov
sbb
jp
jp
mov
rolb
incl
pusha
mov
pop
imul
pushf
cli
add
push
xchg
imul
subl
xchg
mov
in
push
cltd
push
push
jbe
and
pusha
jecxz
and
adc
jo
rorl
mov
lret
fwait
ss
ss
lods
adc
jbe
dec
and
push
cmp
in
cld
cs
test
mov
pop
and
ja
les
sbb
or
cmpsb
movsb
fs
or
or
outsl
jmp
ja
mov
inc
out
push
in
pop
aaa
popf
inc
xchg
push
xchg
add
and
adc
in
add
cmp
or
xchg
inc
xor
adc
js
in
cmp
push
psubq
inc
or
xor
add
sbb
pop
add
or
and
sbb
inc
dec
sub
ret
add
or
and
enter
add
ss
pop
sahf
add
sub
loope
ds
push
xchg
inc
or
fsubrl
sub
enter
and
ss
dec
sub
mov
js
sbb
fs
in
les
inc
loopne
inc
push
cmp
adc
pop
push
sarb
add
aam
pop
loop
test
xchg
lock
sti
pop
cmp
cmp
jne
cmp
jne
fadd
push
enter
mov
mov
dec
loop
pop
and
pop
adc
testb
jne
lret
mov
sahf
jne
mov
pop
sub
fld
aam
stos
pop
je
sub
movsl
jne
and
add
adc
fcoms
mov
adc
in
das
test
adc
dec
jbe
enter
roll
or
or
push
push
testl
lock
xlat
cwtl
push
inc
sub
lahf
push
inc
je
sub
lea
cmp
jne
test
add
ret
test
imul
popf
xchg
push
add
add
test
sbb
fcoms
fs
sub
into
push
push
sbb
pop
cmovns
je
inc
xchg
adcb
or
xor
or
sub
nop
roll
idiv
pop
dec
or
push
sbb
jnp
inc
dec
pop
mov
fsubs
je
adc
mov
dec
xor
test
mov
pop
mov
dec
mov
les
js
pop
fidivrl
add
in
popf
add
push
in
pushf
cltd
dec
mov
mov
pop
lock
gs
mul
jmp
or
roll
or
inc
jno
sub
jp
popf
test
dec
pusha
js
ss
push
cld
mov
jbe
inc
mov
adc
push
nop
or
xchg
and
add
cli
jle
shlb
aas
push
inc
cld
cmpl
or
in
je
jmp
test
sbb
push
sarb
jo
lock
xor
ljmp
pushl
js
push
outsl
movsb
ffreep
inc
and
mov
xchg
imul
pop
xor
add
fnsave
je
data16
mov
ja
lods
jo
sahf
scas
outsl
jbe
repz
dec
xor
inc
sbb
push
and
push
mov
into
and
pop
cli
xorb
mov
or
ret
mov
sbb
inc
mov
push
jno
fs
ljmp
ja
fcmovb
adc
pop
cmp
push
call
jmp
rolb
cmp
or
or
or
pop
pop
mov
add
pop
sbb
insl
add
ljmp
or
fldt
jmp
repnz
push
and
outsl
or
ljmp
push
lock
xchg
repz
int3
or
pusha
shll
inc
mull
push
mov
mov
push
rol
push
loopne
add
add
xor
add
push
adc
dec
push
adc
mov
sbb
xchg
loope
or
adc
pop
nop
movsl
push
push
xchg
jae
add
cmp
ja
je
inc
test
daa
xchg
xor
int3
lds
aad
fcoml
and
mov
cmp
data16
mov
imul
sbb
and
or
out
sar
scas
jge
movsb
xor
push
jmp
lahf
and
adc
mov
jecxz
mov
cmp
lods
sub
popa
mov
and
sub
insb
jnp
ret
addr16
dec
fmull
cmc
fs
or
daa
dec
push
xor
fiaddl
scas
out
jbe
and
jb
xor
push
xchg
mov
dec
or
mov
mov
xchg
adc
sbb
add
or
inc
dec
loope
in
cltd
dec
pop
lahf
ljmp
popa
or
jae
sbb
lret
xor
mov
data16
cmp
in
push
testb
mov
add
daa
push
adc
adc
insb
jmp
add
test
mov
fcoms
cmp
add
push
roll
mov
xchg
or
adc
sub
jge
sub
stc
pop
fcomip
or
pop
sub
js
jmp
popa
fwait
rcrb
sbb
push
push
inc
shlb
sbb
repz
ss
push
and
outsl
inc
arpl
adcl
inc
pop
sub
sbb
sbb
add
rorb
stos
sbb
adc
test
or
mov
sub
and
xor
adc
sbb
xchg
pop
rorb
mov
pop
sbb
mov
in
jnp
jae
repz
dec
faddl
aaa
test
add
fwait
push
mov
popa
pop
mov
sbb
xchg
xor
add
dec
sbb
cmp
add
cmpsl
jo
add
adc
hlt
push
cmp
and
adc
lahf
andl
sub
mov
pop
aaa
mov
flds
or
les
insl
and
mov
jb
hlt
cltd
das
add
pop
test
mov
popf
mov
xchg
lock
xor
cmp
fs
pop
scas
or
and
imul
jl
imul
nop
rclb
push
pop
push
mov
adc
movsl
fucom
add
imul
sti
pop
cmp
sbb
push
and
sbb
add
or
mov
jo
inc
mov
dec
stos
push
je
add
ss
cmp
jmp
push
sub
lahf
cltd
mov
loopne
push
pop
add
sub
adc
ljmp
xchg
rorb
lds
loop
inc
sbb
fcomps
scas
mov
xchg
xor
lret
call
mov
jbe
sarb
mov
sub
jge
sbb
pop
sti
pop
or
sarb
and
adc
mov
and
jl
jg
mov
mov
adc
adc
inc
cli
xchg
xor
adc
subb
out
sub
rolb
push
aam
push
dec
cli
push
push
push
add
pop
cmp
push
pop
and
pop
push
dec
cwtl
push
push
sbbb
ret
mov
cmpl
jmp
add
adc
or
xor
frstor
add
pop
dec
pop
cmp
xchg
mov
push
stos
out
mov
out
pop
adc
mov
add
in
cmp
mov
adc
fistl
sbb
lret
sbb
inc
ret
and
int3
add
fxch
add
adc
fldl
mov
mov
push
fstcw
addw
dec
je
test
mov
out
lock
or
mov
jp
pop
test
test
fwait
xchg
adcb
dec
fyl2x
dec
mov
pop
adc
xchg
idiv
mov
push
and
lea
das
mov
pop
rcl
insl
lret
sub
aas
or
mov
jne
inc
jmp
faddp
push
jns
sti
jno
and
lock
pop
mov
mov
xor
push
push
and
insl
gs
jns
jne
in
sbb
loop
cmp
sub
jne
jp
or
mov
push
dec
dec
fidivrl
fldl
mov
dec
pop
frstor
fldl
adc
movsl
popf
xchg
pusha
push
pop
test
pop
push
loope
xchg
pop
cmp
loop
fldl
je
testb
mov
in
pop
imull
pop
mov
fldt
je
mov
popa
xchg
fldz
and
add
xor
fld1
daa
dec
pop
or
push
test
ljmp
lods
nop
cmp
test
inc
cld
fcomp
mov
fwait
scas
jne
in
or
mov
shrl
fnstcw
add
ret
insb
mov
or
out
ss
fs
or
and
adcb
lret
add
push
dec
or
fcom
addr16
dec
idivb
mov
xor
inc
mov
stos
mov
lcall
mov
jge
mov
cmp
cmp
and
ss
cs
inc
cmpsl
imul
adcl
mov
mov
gs
sbb
inc
xor
xlat
sar
adc
fstpl
sbb
sbb
mov
inc
aaa
fsubl
in
ds
sub
sbb
pop
mov
add
mov
mov
clc
inc
jmp
test
sahf
jp
fstp
sub
push
inc
mov
cmp
lock
mov
je
mov
mov
repz
mov
je
inc
pushl
lcall
adc
pop
pop
cmc
inc
nop
mov
pop
mov
loop
mov
pop
push
daa
push
sub
sub
test
push
add
xchg
and
or
jo
shll
xchg
pop
jmp
mov
mov
fcompl
fnstsw
jne
push
jg
and
ret
and
push
lock
xchg
mov
sarb
fwait
pusha
les
adc
mov
mov
fdivrs
adc
inc
loopne
mov
jg
adc
enter
xchg
loopne
mov
mov
rcrl
adcb
sbb
mov
add
stc
inc
int
sub
push
in
pop
dec
jne
testl
clc
nop
push
shll
add
xor
orl
dec
xor
inc
jo
rclb
rcrb
sbb
dec
adc
std
mov
and
jle,pn
jo
nop
inc
in
iret
pop
ror
adcb
pop
jp
inc
loope
pop
fs
mov
je
int
or
gs
test
ljmp
and
xor
cmpsb
cmp
pop
dec
popa
or
rcr
pop
sbb
push
sbb
clc
jbe
and
cmpps
lods
push
shl
adc
es
inc
cmp
add
push
or
adc
rcrb
imul
mov
mov
or
mov
fcomps
add
jmp
iret
pop
pop
xchg
test
and
or
or
ret
mov
cmc
int3
mov
pusha
std
fcoms
nop
cmp
pop
aad
fistl
mov
adc
sbb
insb
dec
inc
adc
rol
sbb
fs
cmpsl
stc
xor
pusha
push
ret
and
rcll
lret
add
xor
cwtl
inc
das
ljmp
inc
loopne
sarl
enter
jge
out
shl
xor
stos
pop
int3
jo
jo
pop
jo
add
rcrb
jne
test
orl
and
hlt
fcomi
or
lock
and
insl
movsb
sbb
inc
and
imul
sub
repnz
pop
es
int3
add
inc
roll
pop
jnp
fcoms
pop
inc
xor
popf
cmp
ret
mov
and
divps
xchg
add
lss
or
cld
and
lret
lock
adc
jbe
pop
cmp
js
out
es
mov
jbe
jne
push
and
arpl
pushf
xchg
aad
add
add
movsl
push
dec
and
rcrb
ss
into
add
in
imul
xor
mov
add
pop
add
add
cmp
insl
in
into
call
jge
xor
dec
adc
mov
add
add
dec
mov
sub
subb
rclb
mov
ljmp
and
mov
push
jnp
dec
xlat
mov
adc
cmp
dec
lock
push
xor
movsl
pop
push
test
or
je
shrb
jb,pn
je
ret
sbb
ljmp
jl
add
ret
pop
rcll
mov
jge
and
push
adc
ret
popl
stos
and
fcoml
jns
shl
push
mov
pop
push
or
bound
or
mov
adc
or
jecxz
add
imul
cmc
push
out
mov
imul
add
movzbl
adc
sbb
lret
xor
add
cmp
inc
add
inc
jmp
cmp
push
lods
and
jp
xchg
fdivr
fldl
push
adc
or
mov
test
test
inc
sub
jl
sub
pop
xor
xchg
int3
push
fcmovnb
add
orl
aaa
inc
imul
fwait
lea
popa
jmp
movsl
in
iret
cmp
ret
jne
cld
int3
lock
pop
ret
push
xor
and
sub
push
lock
in
xor
sub
pop
lea
or
test
jo
sbb
pop
aaa
enter
adc
stos
imul
insl
mov
inc
pusha
push
jo
mov
adc
or
add
dec
mov
jo
rorl
push
add
insl
or
mov
fcompl
or
adc
push
mul
cmp
lods
inc
js
or
testl
pop
cmc
inc
subl
push
dec
cmp
add
inc
rcll
lock
push
inc
jp
test
dec
pop
clc
xchg
roll
mov
mov
push
std
mov
das
jbe
gs
xor
inc
ret
inc
mov
xchg
xchg
mov
dec
adc
add
ret
push
inc
mov
mov
ss
add
fs
pop
mov
mov
aad
cmp
pop
pop
dec
mov
daa
pop
and
invd
arpl
imul
ret
clc
mov
cmpsb
pop
hlt
lea
clc
xor
mov
fsubrs
aaa
mov
push
ficoml
xchg
or
imul
push
rclb
ret
test
sbb
int
fiadds
fisubrl
sbb
cmp
or
cmc
mov
dec
repnz
mov
add
ja
orb
sbb
fldt
jne
inc
mov
push
or
hlt
testb
push
cmpb
imul
popa
hlt
pop
outsb
int
jne
push
add
subb
or
jmp
or
orb
lock
mov
aaa
pop
push
xor
inc
mov
mov
jecxz
in
pminub
jae
sub
dec
push
sbb
sub
add
mov
inc
or
inc
ds
sub
leave
and
and
dec
sub
cs
mov
jg
out
jle
mov
inc
push
xor
mov
jmp
ljmp
shll
sbb
lock
idiv
neg
and
cmp
or
cmp
add
int3
mov
dec
dec
fsub
sbb
mov
ljmp
dec
and
add
fcompl
sbb
sbb
pop
inc
jl
push
add
ret
jns
jmp
mov
or
popa
into
add
lahf
enter
pop
adc
push
mov
addr16
push
or
lcall
pop
lahf
adc
sahf
lock
push
mov
cltd
mov
adc
or
pop
mov
js
inc
jne
pop
insb
jmp
jb
stc
lret
movsl
xor
test
mov
add
push
aam
cs
int
lea
es
adc
and
xchg
or
pop
or
lods
psubw
mov
sarl
dec
add
add
fsubrp
nop
cmpsb
nop
inc
inc
inc
inc
jg
sahf
out
add
insb
fs
out
pop
push
dec
jg
mov
repz
pop
sbb
in
in
iret
repz
lock
hlt
clc
clc
adc
cmc
cmp
cld
xchg
sbbl
cmpsb
xor
loope
xchg
jnp
mov
mov
mov
lock
nop
cmp
repz
sbb
or
je
into
jl
cld
jmp
in
cmp
xor
bound
pop
stc
sub
fcmovnu
push
cmp
pop
nop
dec
push
push
xchg
add
dec
mov
lods
push
test
xchg
mov
aas
inc
imul
add
nop
dec
add
inc
jno
push
pop
add
imul
enter
jns
in
in
push
hlt
cld
add
or
out
out
adc
subb
sbb
jns
out
sbb
adc
out
sahf
out
or
or
int
nop
add
inc
or
pop
dec
inc
sub
insb
subb
add
sub
mov
cmc
shlb
and
lock
add
orb
mov
inc
mov
adc
les
mov
ret
push
inc
or
mov
inc
test
ja
sbbb
dec
shrb
pusha
adc
repnz
sbb
xchg
cmp
dec
shlb
cmp
inc
cli
mov
or
ret
xor
imul
xchg
jae
bound
rcl
jno
rcrb
jo
mov
jg
test
or
push
sub
cmpsb
ret
fucomip
push
push
sub
cmp
xchg
loope
xlat
mov
lods
xchg
addb
jbe
add
add
xchg
je
lods
push
xor
lret
leave
clc
jle
les
mov
mov
push
mov
dec
inc
loop
jb
fistpll
xor
adc
shrd
jecxz
lock
ljmp
call
pop
or
push
movl
in
or
pop
xchg
xor
add
pusha
and
call
sarb
push
cmp
pop
popa
adc
je
pop
sub
jae
aam
fidivl
mov
in
adc
adc
or
cmp
sbb
mov
lods
cmpsl
mov
push
mov
mov
mov
imull
mov
xlat
adc
push
jne
mov
inc
daa
add
adc
ljmp
mov
out
inc
lea
inc
enter
mov
push
or
inc
cmpsl
sbb
loope
xchg
mov
xchg
mov
in
push
jne
jmp
clc
inc
test
out
in
lods
add
aas
jne
pop
cmp
jecxz
sbb
or
adcl
add
je
jne
fiadds
out
in
or
insb
xor
aam
mov
push
scas
or
mov
adcb
movsl
mov
cmpl
mov
test
push
scas
je
ljmp
mov
jmp
rcll
push
icebp
push
aam
add
mov
or
mov
rol
clc
pusha
jne
inc
test
mov
loop
jge
movsl
ss
mov
push
sbb
mov
out
pop
ret
mov
push
ficoml
pop
pop
js
pop
inc
or
inc
jp
or
aam
jmp
arpl
ret
test
dec
xchg
aam
mov
adc
out
xor
dec
dec
inc
or
mov
jne
fmull
sbb
and
inc
pop
adcb
xchg
fldenv
dec
jne
repnz
ja
and
in
lds
mov
adc
adc
in
inc
in
movsl
fidivs
sbb
add
dec
aaa
inc
mov
xor
or
in
test
pop
and
ret
pusha
jbe
inc
pop
rorb
and
popf
xchg
mov
testb
shlb
or
ja
cmpl
mov
pushf
and
jne
push
popf
mov
mov
add
and
push
daa
jo
cmpsb
jae
mov
or
mov
and
pop
in
jg
mov
daa
pop
mov
inc
ljmp
xor
sbb
pop
jle
loopne
adc
mov
mov
pop
rcll
cmp
ljmp
stos
icebp
push
incb
sbb
mov
add
data16
js
mov
orl
das
and
js
cmp
pop
add
outsl
cmpb
mov
adc
dec
and
cmp
sub
outsl
xchg
ret
clc
push
sbb
xor
or
cmp
leave
add
enter
test
insb
inc
daa
xchg
add
xchg
mov
adc
push
cld
or
repnz
add
jae
push
cmp
add
mov
nop
jmp
cmp
sub
sub
adcb
stos
add
test
adc
das
js
pop
add
aad
in
inc
pop
or
cmp
xor
cmc
xor
rcrb
fcompl
xor
mov
dec
or
mov
dec
adc
clc
popa
jl
clc
jp
push
sub
add
push
push
dec
xor
sbb
push
sub
adc
aaa
mov
pop
mov
mov
adc
push
je
add
filds
jb
mov
nop
loopne
mov
call
div
jmp
sub
xor
jge
push
add
rclb
test
add
ja
ret
pushf
hlt
daa
adc
in
inc
dec
shr
sbb
push
andb
mov
mov
cmp
sbb
mov
rcll
xchg
adc
nop
shr
mov
pop
jl
clc
jle
lret
push
push
fisubl
addl
mov
loop
jne
pop
ret
jno
enter
push
je
mov
pop
inc
cmp
je
mov
movb
js
or
cmc
loopne
rcr
sub
lock
mov
mov
test
je
and
mov
dec
scas
mov
inc
shll
fucomip
mov
mov
ret
sub
sbb
or
lret
push
pop
jmp
in
dec
mov
push
cmp
lcall
and
add
pop
cmp
mov
test
je
cmp
ja
push
pop
dec
add
mov
cmp
dec
cmp
add
inc
cmp
out
cmp
sbb
or
inc
test
dec
aam
inc
sub
movsb
stos
lea
lea
mov
ss
push
cmp
aaa
ljmp
cmp
mov
shll
or
loope
vxorps
push
adc
loope
call
stc
xor
ret
aas
jle
xor
cmp
loope
mov
sbb
or
ss
cmp
mov
test
inc
cld
cmp
je
outsb
or
je
sahf
out
sarb
and
faddl
aam
xchg
pop
push
inc
ficomps
or
cld
jo
mov
jl
sbb
mov
std
mov
gs
je
cld
jo
push
lock
int3
xor
imul
mov
cmp
add
testb
push
and
call
scas
adc
or
scas
mov
inc
jne
add
nop
adc
pop
cltd
divl
enter
mov
outsb
inc
xor
sub
ret
cmp
adc
jmp
and
mov
decb
rep
test
mov
lret
push
jl
mov
lea
sbb
add
std
fsub
mov
hlt
dec
push
stos
mov
cmp
add
push
pop
push
loop
add
shl
sub
mov
pop
lcall
inc
adc
inc
imul
mov
push
dec
pop
shl
dec
shll
and
inc
xchg
push
popa
push
inc
scas
lcall
ret
insl
leave
pop
push
fiaddl
call
rcl
rorb
les
adc
and
mov
je
arpl
in
adc
sub
adcb
or
adc
pop
pop
je
dec
icebp
cltd
mov
ds
jne
nop
dec
jmp
sbb
stos
fwait
xchg
icebp
outsl
shll
jp
cld
push
and
jmp
sbb
adc
cmp
sbb
jb
aaa
xor
xchg
lods
aad
mov
mov
fnstcw
adc
inc
and
xor
or
mov
cmp
mov
les
or
repz
inc
push
scas
cmp
repnz
scas
inc
int
push
dec
or
sbb
and
inc
jecxz
adc
pop
sarb
lock
add
sub
sub
add
sub
cmp
dec
cmp
out
mov
movsb
xchg
mov
sbb
lea
pop
aaa
mov
add
or
sbb
out
xchg
inc
cmp
and
add
inc
loop
in
sahf
sub
incl
rcll
mov
mov
sti
add
jmp
popf
and
mov
fiaddl
lahf
test
push
adc
cltd
add
mov
in
inc
cli
std
add
leave
addr16
xchg
lods
clc
pop
inc
xchg
iret
mov
test
sahf
push
repz
add
adc
lods
inc
andb
dec
add
shl
or
pop
mov
sbbl
mov
movsl
sti
lea
loope
or
aam
mov
mov
or
hlt
ljmp
clc
les
inc
cmp
sbb
and
add
jno
push
fcmovnu
xchg
sbb
or
mov
adc
pop
add
jmp
add
shlb
or
lods
dec
jns
shl
nop
dec
cwtl
cmpsb
repnz
daa
pop
fcomps
xchg
stos
adc
adc
decb
cmp
je
icebp
sub
ret
sub
popf
jmp
cmpsl
rolb
in
mov
scas
iret
cwtl
xchg
dec
adc
rcr
cli
pushf
xchg
xchg
ljmp
ret
repnz
out
sahf
lret
and
mov
pop
jns
pop
mov
lea
and
mov
loop
nop
into
scas
les
add
add
popl
jne
jbe
or
mov
dec
movsl
sub
es
or
clc
aas
cmpb
div
prefetch
pop
push
pop
pop
fistpl
leave
fistpl
and
mov
pop
hlt
fbstp
andb
in
pop
test
clc
testl
aad
and
test
loopne
xchg
cmpl
aaa
or
xorl
mov
lock
xor
jmp
and
cmp
fcompl
cld
dec
pop
cmp
jb
xchg
cmp
dec
jbe
icebp
movsl
mov
and
dec
sub
dec
pop
ds
push
dec
add
inc
jo
bound
pushf
scas
and
jbe
je
adc
and
fdivs
and
cmpsb
popf
add
call
cmp
cmp
into
sahf
push
push
xchg
lret
les
jo
push
rcll
aad
pop
jo
fdivp
jl
adc
jbe
shl
or
xchg
nopl
imul
add
in
or
mov
push
jae
ds
fs
call
repnz
mov
rolb
insl
insb
test
pmulhuw
add
ret
mov
xchg
rol
inc
xchg
sbb
punpckhdq
or
push
lea
adc
pop
pop
add
je
push
add
movsl
jecxz
lahf
cmp
inc
fwait
scas
mov
sub
xchg
sbb
arpl
adc
add
int3
push
inc
xor
pop
inc
xor
xadd
xchg
inc
push
cld
fmuls
testl
inc
sbb
adc
in
mov
jae
or
f2xm1
cmpl
inc
shrb
mov
call
pop
xorb
out
stos
xor
dec
push
or
inc
dec
mov
adc
out
lds
stos
or
ret
jbe
pusha
xor
xor
jmp
mov
mov
ret
cmp
xor
adc
cmpsl
sub
notb
dec
mov
xor
jo
xor
icebp
xor
sbb
or
add
mov
or
lahf
loopne
xchg
outsb
or
push
inc
add
sub
sub
sub
add
pop
inc
bts
jmp
std
and
push
sub
mov
ss
aaa
cmp
std
add
xor
jbe
mov
das
dec
push
stos
inc
mov
pop
add
pop
out
mov
add
or
jecxz
xor
push
out
or
notb
push
dec
shll
push
loope
data16
iret
cwtl
add
sbb
add
leave
cwtl
outsb
shll
and
pushw
arpl
cltd
pop
test
inc
pop
rolb
add
addr16
in
stos
stc
pop
call
rolb
or
cmp
pop
jge
cmp
or
and
lahf
enter
cvtps2pd
pop
mov
push
mov
scas
nop
xchg
push
daa
lock
fbstp
cltd
and
mov
xor
pop
push
sbbb
mov
xchg
dec
fistpll
mov
in
push
in
or
aam
les
fists
jmp
mov
clc
mov
cltd
fbld
in
scas
mov
divl
test
pop
nop
mov
lcall
ffreep
or
add
repz
or
push
fs
adc
cmp
je
test
sbb
mov
mov
iret
enter
or
add
inc
lret
sbb
xchg
imulb
rcl
dec
mov
sub
add
push
and
pop
push
movsb
push
or
lea
push
ret
cmp
xchg
jp
jbe
add
push
scas
loopne
sarb
sbb
rolb
test
jmp
and
lcall
or
xchg
jmp
pop
jmp
mov
jmp
sbb
subb
insl
push
mov
push
in
xchg
test
cmp
mov
cmp
mov
mov
sub
jle
pop
mov
or
cli
mov
out
pop
push
loope
or
je
sarb
rep
je
inc
dec
push
test
ficomps
or
mov
outsl
add
xor
inc
sub
mov
add
add
imul
pop
es
mov
dec
adc
mov
xor
sbb
or
stos
cli
ret
adc
std
inc
adc
xchg
fstps
sbb
or
rcr
rorb
movsl
inc
mov
xchg
mov
hlt
or
inc
shl
xlat
clc
test
int
pcmpeqw
inc
cli
push
and
scas
pop
cmp
jne
cmpb
pusha
mov
adc
imul
jbe
sub
mov
sub
cmpsl
std
push
sbb
nop
repnz
cld
dec
adc
cmc
cwtl
add
push
mov
sbb
jge
sahf
sub
and
les
neg
add
cmp
jne
sbb
out
jne
or
add
mov
mov
dec
mov
push
lds
push
mov
jecxz
push
mov
ret
jne
mov
imul
and
xor
outsb
notl
mov
and
jmp
loopne
cmp
push
fsubl
rcrl
push
xorl
push
jb
xor
jb
or
inc
in
push
insl
sbb
adc
fstl
xchg
sub
push
cmp
pop
cmp
decl
cld
jg
push
sub
add
sbbb
js
push
mov
and
adc
or
mov
pop
mov
xchg
pop
incb
lret
mov
aam
insl
mov
int3
xchg
jmp
out
fsts
cmp
pop
cltd
mov
dec
mov
inc
add
or
dec
fistpll
cltd
sub
inc
add
adc
push
add
lods
mov
jge
add
push
inc
push
pop
dec
dec
out
rolb
inc
or
inc
pop
add
pop
ljmp
adc
rol
push
inc
sbb
add
notl
mov
rol
mov
inc
fcoml
or
jg
push
decl
fchs
sub
insb
or
and
xchg
xchg
jecxz
xchg
js
and
daa
je
or
add
mov
or
add
setb
xor
pop
or
testb
in
xor
sarb
cmp
sbb
or
add
movsb
shlb
or
push
mov
daa
mov
sbb
jns
pop
mov
inc
xor
cmp
sbb
out
mov
adc
push
dec
mov
inc
sub
add
mov
cmp
jb
pop
jns
in
pop
push
loopne
fldcw
or
test
pop
je
rol
inc
dec
push
pop
stos
mov
add
and
lock
cwtl
enter
jae
loope
aam
inc
dec
and
mov
cmp
jbe
xchg
cmpsl
pop
xorl
cmpl
loopne
jbe
fidivrl
sub
movsl
adc
movsl
add
shlb
add
enter
jmp
int
push
imul
or
push
loop
dec
fdivr
and
or
cltd
in
ret
enter
dec
fstps
add
or
aas
push
add
xchg
jns
jne
jmp
adc
sbb
pop
imul
adc
adcl
add
sbb
rolb
enter
mov
xchg
mov
out
or
or
or
loopne
ret
push
into
xchg
xchg
and
ja
inc
push
xchg
dec
push
daa
or
mov
lods
and
cmp
pop
or
sub
push
or
ret
cmc
cmp
mov
lods
mov
or
push
dec
sub
add
ret
call
sbb
sub
add
rolb
sti
sub
movsl
cmp
sbb
adc
and
or
add
cmc
int
adcb
sbb
fildl
pop
xor
iret
add
or
in
inc
in
js
or
pop
cmp
lods
scas
cmp
aas
add
adc
adc
mov
sub
es
repz
jg
fisttpl
movsbl
sub
loopne
int
pop
in
or
mov
push
dec
ret
fwait
sbb
push
pop
js
dec
data16
cmp
xchg
clc
fidivrl
cmp
hlt
jb
push
pop
cmp
jbe
add
mov
lcall
add
sub
nop
dec
decl
sbb
push
sub
or
push
scas
lock
jmp
test
mov
leave
push
push
jne
into
shlb
push
add
jge
ljmp
hlt
cmp
xchg
dec
mulb
lock
movl
test
faddl
negb
sar
mov
lock
push
mov
xor
mov
push
lret
add
jno
xlat
ss
rclb
push
aad
sbb
or
add
loope
push
dec
leave
sub
inc
cmp
icebp
cmp
push
addb
ja
sub
testl
sbb
push
push
cmp
fdivrl
jb
push
jo
or
enter
cmpsb
fld
adc
inc
aaa
rorl
dec
push
pop
xor
movsb
and
in
inc
add
in
je
leave
stos
mov
ja
sbb
cld
add
push
or
fisubl
mov
adc
dec
mov
adc
push
dec
adc
xchg
test
add
ficoml
xchg
add
imul
enter
cmp
test
and
sbb
jl
lock
in
xchg
dec
pusha
mov
cmp
dec
sbb
sub
add
adc
push
sbb
rclb
inc
push
add
add
and
shl
in
sbb
imul
cmp
add
sbbl
add
pop
test
push
or
push
fnstsw
xchg
sarb
or
in
mov
jno
jg
cmp
sbb
jmp
mov
sub
jle
inc
dec
mov
loopne
mov
pop
popa
adcb
adc
outsb
or
movsl
jno
pop
push
xor
jge
fs
mov
push
and
clc
ja
push
cmpl
mov
and
mov
mov
push
in
dec
dec
inc
lret
pop
xchg
and
imul
add
cwtl
test
mov
xor
add
sub
inc
or
jbe
pusha
leave
mov
add
add
leave
sbb
pop
fcmovu
les
in
adc
test
cmpb
jbe
frstor
lock
sbb
add
jmp
add
adc
test
xchg
jmp
and
push
adc
sub
aam
test
stos
jbe
cmp
or
cmp
int
xor
sbb
mov
lock
incl
and
popa
addl
and
or
mov
dec
mov
push
jmp
scas
scas
fcomps
sbb
fdivs
sbb
fwait
idivb
push
fstpt
aaa
scas
push
cmp
je
xor
enter
or
faddl
arpl
sbb
clc
add
andb
xchg
mov
mov
movsl
inc
fsubr
jbe
add
lea
mov
test
movzbl
push
mov
mov
dec
mov
jmp
popa
aaa
add
lods
lahf
rorl
stos
lea
insl
loope
cmp
je
sbb
dec
andb
and
mov
sbb
mov
sarb
popl
jbe
inc
inc
jl
adc
push
ret
sahf
add
shll
jb
cmp
je
mov
mov
jbe
nop
jle
push
jg
movsl
movsl
pop
mov
jns
add
cwtl
fcoms
jno
inc
or
push
push
jno
mov
push
mov
jne
inc
sub
add
scas
add
cmp
orb
or
add
call
insb
orb
inc
loopne
adc
push
inc
leave
pop
mov
cld
gs
lcall
pop
in
das
dec
add
xchg
sub
and
je
or
mov
cmp
or
push
or
push
popa
shll
jecxz
xorl
movsl
lret
sahf
pop
ret
aaa
pop
outsb
mov
rolb
sub
mov
jne
jecxz
mov
fstp
dec
sub
and
mov
movb
dec
cmpsb
aaa
push
inc
repz
mov
sbb
inc
mov
inc
add
fsts
inc
inc
imulb
sbbb
pop
outsl
xor
cmpsb
xchg
adc
push
pop
inc
std
cmp
popf
mov
cmp
mov
xchg
cld
mov
xchg
pop
xor
rcl
mov
lcall
mov
mov
je
inc
out
dec
sbb
mov
jecxz
mov
aas
cmp
sub
adc
mov
jb
fs
mov
xor
xchg
pop
pop
inc
sub
mov
push
popf
test
in
outsl
cmp
and
loopne
xchg
mov
jo
lods
dec
adc
mov
lcall
loopne
add
add
add
int3
adc
push
inc
inc
jmp
xor
fs
jecxz
leave
test
push
sub
ds
sbbl
pop
loop
clc
mov
orb
decb
or
push
sub
shr
push
adc
data16
shlb
xchg
pop
call
lahf
in
push
test
mov
inc
divb
mov
js
push
pop
inc
and
call
and
mov
xchg
xchg
inc
adc
mov
inc
in
or
pop
test
or
jle
xchg
jbe
ficoml
cmp
call
loop
dec
sub
enter
mov
pop
adcl
sub
cmp
cmp
and
sub
sbbb
xchg
cmp
pop
inc
sub
pop
mov
les
rcll
push
scas
sub
push
je
or
fidivs
pop
int
shrb
adc
jnp
xor
xor
add
clc
or
pop
mov
cmp
jne
cmp
inc
push
movsb
or
cmp
je
mov
mov
nop
pop
pop
sahf
xor
mov
add
and
test
dec
cmp
ds
mov
or
inc
adc
inc
or
jbe
inc
push
jp
outsb
sbb
ja
push
je
xchg
add
mov
mov
fisubrl
mov
xor
dec
cmp
and
push
scas
cmp
je
inc
leave
dec
fld1
sub
call
push
aas
insb
xchg
jo
or
ja
movsl
loop
cmp
push
push
loopne
std
setns
pop
inc
cmpb
and
cmp
sub
push
pushl
mov
jl
add
outsb
jne
pop
decl
and
jge
add
adc
shrb
cmpsl
cmpb
adc
sbb
push
push
subl
push
inc
cld
jo
and
int3
decb
je
ja
jns
push
aas
mov
inc
xor
mov
test
mov
inc
or
dec
dec
xchg
imul
dec
mov
xor
mov
or
mov
xchg
andl
or
enter
mov
and
xor
ljmp
ss
push
addb
jl
or
sub
call
test
aad
into
sbb
int
sbb
inc
cmpl
fists
mov
testb
sahf
fistps
inc
lret
or
adc
jne
push
jmp
dec
bound
clc
nop
mov
cmp
mov
add
xchg
pushf
jns
push
add
or
push
aaa
inc
pop
jne
inc
inc
jmp
and
xchg
cmpsb
sub
ficoml
and
sub
ficoml
stos
xor
push
sbb
mov
insb
ret
jmp
mov
inc
adc
es
and
xchg
bound
add
xchg
imul
sbb
cs
sbb
pop
rcrl
push
aas
aaa
jle
mov
sub
inc
call
ja
popa
mov
andl
movsl
daa
imul
adc
mov
sarl
push
jns
shll
imul
aad
xchg
push
and
cmp
inc
add
or
push
adc
and
aaa
arpl
sbb
xchg
cmpsb
aas
push
inc
adc
push
out
and
loopne
mov
dec
data16
or
roll
cli
sar
sbb
add
and
jae
push
adc
movsb
jmp
xor
pop
testb
fcomps
dec
inc
dec
dec
jmp
addr16
push
cmp
ret
jmp
or
subb
dec
dec
or
push
je
rorb
imulb
sub
inc
aam
popf
cwtl
test
xchg
test
xchg
jp
mov
push
pop
mov
inc
jns
repnz
push
xchg
nop
xor
js
cmp
and
xchg
inc
jae
pop
push
ficoms
xorl
std
xchg
faddp
inc
add
and
aas
inc
inc
stos
imul
xchg
cmp
inc
test
repnz
adc
and
xchg
sbb
cmp
out
mov
or
movsb
cmp
mov
cwtl
daa
or
jmp
addb
shll
pusha
mov
pusha
inc
or
shlb
add
or
iret
insl
pushf
fwait
jl
push
adc
mov
dec
or
popa
std
insl
cmp
cmpsl
popa
xchg
or
push
ss
sbb
inc
popa
into
xor
mov
and
mov
ds
mov
mov
sub
inc
inc
xchg
or
cmp
jne
test
sbb
nop
push
sub
and
ret
or
cmc
sbb
jo
or
push
loope
xor
cltd
mov
leave
push
orb
test
push
pminub
adc
mov
addb
xchg
pushl
test
test
mov
mov
mov
pop
mov
dec
push
mov
lret
stos
sub
jo
fmulp
xchg
sbb
gs
push
movb
xor
sbb
pop
or
in
xor
and
ss
insb
lea
xchg
dec
aas
fldenv
adc
aam
xor
adc
gs
mov
or
add
sub
mov
adc
add
mov
mov
inc
sbb
sub
or
xchg
pop
lea
xor
cld
fcoml
sbb
sbb
dec
add
fwait
in
test
push
in
push
out
adc
push
pop
push
mov
cmp
xchg
cmp
jg
sub
mov
inc
cmp
jne
or
mov
subl
cs
jo
push
or
xor
cmp
dec
push
movsl
popf
cmp
lea
pop
mov
adc
insb
movsl
cmpsl
lock
push
es
std
jp
mov
enter
pop
cmc
push
cmpb
into
mov
jmp
repnz
or
and
cmp
xchg
movsb
stos
sbb
fimuls
call
cmpb
pop
and
test
bound
sub
ret
js
outsl
pop
mov
insl
mov
push
jne
push
jge
inc
dec
jb
in
add
add
add
fs
cmp
ljmp
inc
sub
xchg
add
and
mov
inc
mov
mov
sub
pop
popf
push
imul
andb
adc
adc
dec
dec
es
mov
xor
sbb
fstps
loopne
adc
cli
jmp
icebp
testb
rcrl
das
sub
pop
push
subb
xchg
and
fldt
jbe
xor
cmpsb
paddw
sbb
add
push
dec
push
push
rcll
stos
pusha
sti
inc
sahf
dec
and
cld
cmp
cld
je
loopne
sbb
sahf
outsl
popf
pop
outsb
dec
mov
pop
jmp
pop
push
scas
push
mov
mov
push
xlat
and
xchg
out
ficoml
mov
inc
or
sbb
dec
inc
jo
movsb
insb
add
clc
adc
js
mov
test
pop
add
lods
sbb
cli
jnp
sahf
adc
sub
push
lret
inc
sbb
push
pop
dec
rclb
pop
shrb
mov
loope
jns
gs
inc
mov
push
sbb
push
aas
mov
fs
or
bound
push
mov
adc
adc
sub
push
mov
mov
je
and
xchg
adc
and
xor
divl
xor
inc
mov
in
insb
dec
cmpb
je
cmp
mov
xor
pop
xchg
call
fldl
xchg
cs
pop
jb
icebp
cmpl
sbb
out
sbb
iret
js
dec
mov
cld
jae
imul
adc
sub
outsl
adc
inc
fists
mov
js,pn
lret
pop
sbb
or
and
push
pop
pop
jge
ss
pop
jl
lahf
shrl
pop
sub
sub
mov
jbe
xor
pushl
scas
adc
pop
sbb
xor
dec
adc
in
mov
lcall
add
ret
scas
sbb
push
movb
mov
or
dec
jle
insb
stos
dec
sbb
int3
rcrl
sbb
mov
lcall
sbb
push
cmp
insl
sbb
pushf
shlb
lods
enter
adc
inc
mov
sbb
and
dec
jns
neg
rolb
sub
xchg
adc
lods
ja
ret
adc
adc
and
pop
shlb
inc
inc
hlt
int3
push
cmpsb
shr
add
jb
ret
sbb
sub
inc
outsl
push
lds
or
adc
mov
movb
orl
adcb
xorl
ficoml
mov
insl
pop
xor
jmp
or
add
das
mov
pop
pop
nop
jbe
inc
clc
rcrl
outsl
jge
leave
add
pop
push
add
jo
pop
add
xor
or
gs
adc
push
mov
or
addl
enter
xor
dec
fsubl
add
ficoml
dec
cmp
inc
sub
dec
cmp
push
mov
xchg
or
jo
mov
and
pop
ds
adc
inc
cmp
daa
pushaw
adc
mov
lcall
sub
sub
data16
adc
inc
add
lods
ret
pushf
xchg
je
sub
xchg
and
xchg
loope
aad
jecxz
rcll
sub
inc
sub
inc
es
or
inc
movsb
int3
add
std
fisttps
in
jne
fxch
fyl2x
jmp
mov
fistpll
ljmp
call
add
add
push
mov
adc
ficomps
inc
lret
lcall
inc
std
xchg
mov
outsl
in
mov
cmp
not
mov
addr16
xchg
cmc
or
add
fldln2
inc
in
frstor
mov
loope
jne
es
inc
popa
cmp
cmp
pop
in
dec
mov
sbb
xchg
rolb
sub
fldz
mov
xchg
cmp
push
in
in
jmp
or
cmp
or
push
lock
push
orb
xchg
add
and
scas
daa
adc
lcall
fcompp
mov
mov
xor
xchg
mov
andl
ret
inc
mov
sbb
sbb
je
shrb
xchg
arpl
clc
sbb
icebp
push
or
push
lret
mov
or
movsb
jbe
lods
test
adc
data16
or
inc
addl
jmp
sub
or
mov
push
or
and
mov
jmp
mov
push
mov
sub
xor
loop
mov
pop
loopne
add
sar
rcl
shll
add
xlat
insb
and
add
jmp
int
xchg
iret
or
loopne
jg
and
rol
mov
mov
xor
in
or
pop
call
add
idiv
xlat
popa
test
ret
fstpt
or
lahf
or
inc
je
aad
or
pop
mov
movsb
pop
or
add
pop
pop
pushf
test
and
nop
frstor
add
pop
pop
inc
and
dec
popf
xchg
mov
dec
loopne
push
mov
movsb
xor
xchg
or
pop
pop
sub
hlt
adc
loopne
les
mov
pop
sbb
add
es
add
and
or
adc
inc
push
jb
push
push
or
cmovb
ss
inc
push
xor
lret
inc
sti
fwait
in
push
fldcw
test
pop
fs
loopne
nop
dec
lock
mov
cmp
and
or
sbb
sbb
decl
or
loope
pop
or
fldt
mov
test
xor
and
outsb
cmp
inc
xchg
and
pop
sbb
cltd
clc
sbb
data16
push
nop
mov
or
dec
push
gs
dec
fwait
popf
ficompl
daa
je
xlat
pop
mov
subl
cli
xchg
in
sbb
sub
add
sbb
fcompl
or
jl
movsb
jge
jmp
push
fs
mov
sahf
je
add
push
jo
js
rorb
push
sarb
pop
mov
adc
xor
push
adc
mov
jmp
insl
and
push
pop
sub
testl
pop
adc
sbb
add
adc
xor
xchg
sub
andl
mov
cwtl
lods
jmp
sub
loopne
gs
jge
mov
ss
dec
push
sub
inc
and
adc
daa
lahf
pop
cmp
mov
dec
out
adc
sahf
mov
inc
nop
cwtl
repz
roll
xorb
nop
pop
jne
and
inc
sub
xor
ret
sbb
insb
xor
add
decb
cltd
imul
cmpsb
ret
inc
mov
mov
add
pop
dec
test
scas
test
pop
insl
call
xor
movsb
jo
cmp
mov
push
rcrb
ds
inc
and
gs
push
ret
inc
popf
and
add
popa
mov
mov
mov
and
add
sbb
shll
sub
xor
sahf
adc
add
or
ficoml
loopne
int
loope
lcall
insl
xchg
dec
idivb
pop
es
add
adc
or
pop
mull
add
and
cs
add
and
mov
or
out
cmovno
mov
push
or
and
mov
lret
in
fisttpll
andl
xor
inc
fidivrl
jmp
push
mov
ds
sub
fsub
jne
add
mov
or
test
sub
enter
test
add
hlt
push
adc
pusha
sub
or
test
das
cli
pusha
mov
or
add
jbe
xor
je
inc
add
sub
push
xlat
xchg
decb
add
and
aad
iret
call
or
dec
mov
and
add
jp
mov
aaa
jecxz
sbb
or
jmp
sbb
mov
sbb
scas
setb
nop
fs
mov
fsubs
xchg
cmp
repnz
push
xchg
dec
add
adc
sbb
and
pop
cmp
pop
leave
adc
insl
pop
pop
lds
sub
lock
scas
es
adc
sti
out
lret
add
add
test
stos
push
jmp
push
lock
jmp
lcall
imul
outsl
pop
dec
add
sahf
push
and
or
or
lret
cmpsb
divl
xor
mov
and
push
popw
gs
mov
pusha
pop
push
sub
adc
lret
hlt
insl
push
dec
pop
adc
pop
fldl
fstpl
dec
inc
mov
push
and
bound
pusha
xlat
sub
je
test
mov
push
sti
pop
sub
jmp
test
push
out
or
and
xor
clc
je
push
cmp
adc
inc
mov
mov
fmull
iret
pop
push
shrl
mov
addb
add
mov
dec
test
fcomi
fisttpll
outsb
aas
stos
or
xchg
sbb
pop
dec
inc
test
orl
sarb
test
into
dec
push
and
adc
cmp
xor
inc
test
imul
and
xor
addr16
cli
push
xchg
imul
pop
fildl
clc
into
sti
or
lret
jmp
shlb
jo
mov
mov
mov
and
and
or
leave
mov
roll
lldt
insl
hlt
sbb
jo
ret
or
clc
mov
sub
insb
mov
jmp
pop
pop
je
push
and
imul
mov
or
sub
jb
pop
pop
sbb
cwtl
subb
mov
cltd
loopne
bound
mov
js
and
js
inc
lret
push
sub
test
test
push
sbb
cmp
jns
add
pop
inc
pop
push
xchg
fistpl
push
test
xor
and
dec
push
cli
lods
int3
jle
add
mov
mov
lahf
and
lret
sarb
add
pop
dec
pop
pop
mov
add
les
mov
cwtl
clc
add
aam
pop
mov
xor
jmp
leave
ss
sbb
fcmovne
push
add
mov
shl
and
les
xchg
push
push
sahf
adc
xlat
add
jo
push
mov
incb
push
stos
pop
rcrl
out
or
or
lcall
loopne
inc
lds
xchg
mov
pop
sub
sub
stc
push
add
cs
push
movb
cwtl
push
mov
sbb
ret
push
fimull
add
or
mov
aam
jb
andb
jno
insl
xor
outsl
push
jbe
push
into
negb
insb
aaa
cli
shll
adc
and
or
push
or
mov
out
gs
out
pop
mov
and
fmuls
mov
ja
push
loop
test
xchg
adc
sub
loopne
add
jp
mov
divb
loope
mov
ss
lret
or
sbb
fnclex
sbb
mov
push
mov
dec
cld
or
mov
or
cld
fwait
mov
push
or
sub
mov
fistpl
fwait
clc
adc
and
sub
push
add
sbb
int3
and
push
dec
data16
fcomps
sbbl
jmp
mov
shlb
add
push
adc
idiv
or
je
mov
orb
sbb
shlb
insb
xchg
jp
push
xchg
popa
mov
jnp
sbb
frstor
add
mov
sarb
mov
arpl
mov
pusha
mov
test
xor
popf
pop
mov
cmp
mov
mov
sbb
je
cmp
je
push
xor
mov
adc
jmp
mov
aaa
cmp
movl
jp
lods
daa
ret
push
ss
test
adc
into
or
insb
jnp
lcall
aam
cmpsl
pop
pop
imul
in
sti
fdivp
xor
or
pop
add
xor
cs
jbe
pusha
xchg
lock
dec
popf
inc
clc
xchg
jne
cld
lea
mov
jnp
fadds
rorb
sbbb
push
cli
push
mov
rorl
push
call
ljmp
adc
mov
jnp
jecxz
shlb
imul
rolb
or
push
data16
push
fsubs
jne
js
lcall
adc
lock
roll
mov
push
xor
rorb
insb
and
mov
push
add
add
jae
or
test
cli
je
fdivrp
ret
pushf
sbb
mov
cmc
sub
sbb
cmp
or
or
in
xchg
xor
xchg
clc
add
sbb
fmuls
inc
in
cmovb
sub
addb
pushf
hlt
shrl
jmp
sbb
lock
xor
stos
adc
sub
std
test
jb
into
rolb
gs
clc
jae
call
test
es
out
rcl
insl
and
add
loopne
sahf
ds
fdivs
push
int
fdivr
adc
sub
and
ret
mov
cmp
adc
xchg
out
jno
or
sbb
adc
adc
scas
insl
iret
pop
push
daa
pop
movsb
shll
lret
xchg
add
in
movsl
cwtl
adc
jge
or
das
jb
nop
and
lret
rorl
push
or
mov
jge
mov
imul
pop
jb
inc
lret
lret
int3
fs
inc
or
xchg
bound
rcl
insl
out
xor
and
int3
dec
cmp
enter
or
push
int3
xchg
adc
jge
fisubl
das
pop
enter
int
imul
cmp
or
mov
pop
mov
xor
add
in
pusha
and
dec
xor
or
mov
imul
movsl
scas
add
push
push
cmp
pop
inc
aad
and
push
xor
fistpl
xor
loopne
cmp
clc
out
lret
je
xor
pop
sahf
mov
outsl
sub
je
aam
xor
cmp
roll
or
inc
jnp
and
push
orps
sbbb
orb
addr16
add
call
xchg
jl
inc
push
add
sbb
pusha
fisttpl
ljmp
push
mov
iret
cmpsb
push
push
xor
mov
or
pop
mov
cld
clc
popf
maskmovq
mull
aaa
dec
or
jbe
inc
fimull
es
cs
jbe
in
sub
test
pop
adc
ja
test
mov
gs
ja
push
enter
or
mov
xor
hlt
dec
sub
mov
addl
or
sbb
ds
aam
sbb
dec
inc
push
adc
jb
loopne
lahf
push
push
jne
adc
mov
jb
xor
dec
jae
push
lods
xor
aas
jbe
add
add
jp
and
push
fwait
neg
loope
sub
shll
fadds
ret
inc
push
notl
add
jns
push
sbb
sub
int
clc
sbb
xor
je
xchg
mov
das
clc
insl
cs
or
mov
jg
sbb
xchg
fsts
xor
sbb
pusha
loop
inc
rcr
xor
andl
or
popl
les
pop
xor
xor
loop
cmp
xor
jbe
test
sub
sbb
rorb
pop
ret
mov
xchg
sbb
or
jns
movntq
lcall
sub
and
or
ja
dec
add
rcll
or
and
je
movsb
loopne
inc
sbb
adc
outsl
ret
leave
inc
jb
cmc
cmc
sub
imul
mov
mov
roll
insl
out
or
nop
and
add
pop
mov
mov
xor
lods
pop
dec
dec
pop
push
je
inc
pop
insl
fmul
insb
push
push
cmpl
iret
out
jne
xchg
jno
jl
lods
clc
pop
test
movsb
fists
cmc
bswap
andb
xchg
andb
incb
pop
cmp
pop
pop
pushl
test
das
add
insb
ljmp
fidivs
lods
add
jo
andb
adc
xchg
pop
pop
bound
shr
mov
sbb
or
add
mov
bound
aam
jne
inc
or
es
add
out
je
popa
mov
cmp
adc
movsb
ja
ss
test
cmovge
pushf
pop
shlb
dec
jl
jne
rol
popa
sub
jo
cmc
imul
je
push
lahf
mov
das
jecxz
in
pop
divl
cmp
cmp
or
jnp
cmp
sbbb
sbb
cmp
cmp
arpl
dec
inc
nop
cmpsl
jo
sub
test
add
jge
addr16
jno
fisttps
xor
stos
xor
dec
cmp
dec
or
in
xchg
inc
ss
xor
mov
cmp
push
sub
cmp
sub
push
orb
movsb
cld
out
sbbl
sbbl
aam
and
mov
inc
or
ret
and
stos
or
andl
xchg
andb
push
sbb
pop
adc
xchg
lahf
cs
mov
in
pop
sub
add
mov
lods
or
or
jo
push
shlb
add
jge
or
adc
sub
xchg
xor
subl
jno
add
push
mov
xlat
int3
sub
rcrl
ret
pop
hlt
xor
leave
subl
xor
xchg
rolb
ljmp
mov
adc
mov
fists
sbb
int3
push
adc
lea
sahf
jmp
cs
test
sbb
inc
roll
push
mov
push
out
enter
and
sbb
out
push
je
pop
or
std
jmp
add
mov
es
pop
out
jmp
scas
add
or
add
cwtl
adc
xor
dec
repz
or
xor
adc
jo
insw
push
or
std
sub
mov
adc
push
in
je
push
sub
data16
cmc
add
pop
outsl
push
jne
out
loop
outsb
adc
xlat
xor
jmp
test
cmp
insl
loopne
sbb
icebp
js
jbe
into
dec
inc
call
mov
and
je
js
push
vcvtps2dq
mov
jl
pop
das
xor
scas
add
push
out
aam
cmp
xor
addb
add
addl
inc
add
push
test
add
and
cmp
andl
cmp
jne
jecxz
jmp
jecxz
insb
in
bswap
adc
es
jo
mov
add
inc
jo
scas
adc
sbb
ss
mov
ret
mov
ficoml
cmp
lahf
sarb
mov
jge
or
adc
push
das
jo
pop
pushw
out
ss
movsb
fcomp
ss
adc
cmp
cmp
jg
sbb
mov
dec
mov
ret
adc
or
js
dec
and
jle
xor
arpl
aam
sbb
in
jecxz
dec
clc
inc
cmp
loope
hlt
adcl
add
mov
jg
jmp
out
in
sub
push
xlat
in
lea
jle
jns
test
push
adc
fldt
sub
xchg
mov
aad
fmull
fidivl
jl
xlat
push
add
ret
ds
cmp
xchg
sbb
lock
les
jae
cmp
jl
hlt
jg
xor
mov
hlt
jecxz
push
ljmp
pop
sub
aad
frstor
rol
adc
test
or
mov
mov
cmpb
push
or
sahf
mov
xchg
dec
sub
addl
pop
shlb
mov
testb
cltd
subb
frstor
or
test
or
data16
mov
lds
add
jo
or
sub
jl
jae
in
imul
sahf
pop
je
dec
mov
inc
hlt
jle
cmp
pop
inc
sub
add
imul
cld
pop
xor
in
iret
lods
mov
sub
test
mov
jmp
mov
insl
dec
cmc
adc
mov
sbb
jne
xchg
sub
add
loopne
js
add
rclb
pop
fldenv
int
inc
add
lods
push
sub
xchg
xor
ss
push
jmp
sub
enter
icebp
idivb
cltd
cmp
xchg
fsubs
jecxz
popa
push
and
ret
push
popa
arpl
mov
dec
inc
xor
in
ficoml
cld
mov
adc
out
adc
jo
or
pusha
dec
jo
adc
fwait
and
mov
fs
pusha
dec
inc
mov
sub
xchg
imul
jnp
or
fwait
iret
jg
jp
jo
iret
jmp
adc
icebp
in
pop
jl
pop
loopne
aas
push
sub
xchg
and
xchg
add
aam
adc
dec
ffreep
ds
push
stc
push
dec
sbb
adc
sbb
sbb
fwait
xor
inc
out
adc
push
fisubrl
imul
pusha
rorb
data16
shl
add
add
pusha
adc
jbe
loop
jmp
sbb
push
and
dec
ret
mov
adc
xor
inc
dec
shlb
and
adc
test
movsb
cmpb
cmp
inc
in
rol
adc
sbb
dec
push
shll
ret
jle
add
pop
in
push
stos
push
jmp
xor
pop
jb
mov
stos
jne
scas
mov
sahf
mov
cmp
or
neg
jmp
jae
push
imul
dec
or
or
lods
adc
add
push
lea
pusha
out
xchg
arpl
jmp
xor
jmp
aad
jno
mov
and
pop
mov
pop
add
mov
loopne
sbb
xlat
popa
ret
push
mov
ror
mov
cmp
rcll
cltd
out
int
mov
inc
sub
mov
inc
or
sbb
push
xchg
rcrl
ret
jg
mov
loope
mov
enter
xchg
inc
mov
rorb
jmp
and
sbb
test
pop
pop
in
or
push
jge
cs
cmp
je
gs
pusha
ss
gs
cs
jmp
imul
xchg
insl
mov
push
push
push
and
jmp
stos
cli
xchg
xor
push
jo
ret
pop
inc
lock
xor
mov
or
mov
xchg
mov
mov
hlt
inc
sbb
and
mov
pop
dec
test
adc
or
and
sub
xor
add
and
rolb
dec
mov
push
enter
dec
ljmp
add
fcoms
sbbb
add
in
mov
std
dec
std
sbb
push
mov
push
add
jecxz
dec
push
fsubr
jne
cmpsb
inc
or
shrb
or
inc
push
es
or
cmp
xor
int
es
add
adc
xlat
xchg
push
cmp
lret
in
test
mov
loopne
or
xchg
dec
jle
lock
cmp
add
mov
or
sbb
int3
js
or
sbb
call
or
or
xor
jle
mov
lret
or
dec
xchg
nop
pop
imul
sarb
and
imul
xor
js
out
cpuid
and
imul
inc
push
push
popa
fadds
mov
jmp
or
enter
les
push
por
push
add
js
loopne
and
adc
ret
nop
flds
dec
lock
dec
adc
pop
push
inc
xor
inc
or
mov
xor
jg
mov
gs
mov
imul
gs
mov
cmp
addr16
inc
inc
inc
mov
shl
fidivs
pushf
push
or
insl
jne
push
jmp
sbb
cmp
push
xchg
pop
or
and
xor
jecxz
push
test
aam
and
cmp
push
or
iret
jmp
or
sbb
adc
xor
mov
push
xor
mov
ss
imul
push
fstl
int
mov
adc
imul
and
adc
and
faddl
or
or
clc
or
or
jo
inc
pop
push
xor
push
push
mov
or
mulb
jno
movsb
je
pop
or
and
cmp
scas
mov
jmp
mov
xor
push
sbb
dec
mov
adc
jmp
mov
enter
scas
mov
inc
ret
mov
jns
xor
sub
sub
sbb
xlat
popa
xchg
int3
fs
out
add
xor
adc
mov
adc
shlb
inc
clc
scas
mov
dec
cmp
jbe
push
pop
stos
xor
dec
push
inc
inc
dec
jp
jae
mov
lds
jo
dec
add
pop
mov
sti
pop
inc
xor
and
jmp
lea
inc
cmp
pushf
mov
andl
insb
push
lock
add
out
insb
or
and
pusha
iret
cmc
adc
cs
and
add
pop
hlt
or
jne
and
xor
dec
pop
cmp
jbe
pop
xor
xchg
and
mov
hlt
cmp
cmp
jno
gs
jp
inc
cmp
mov
and
lock
jb
add
dec
xorl
loopne
cmp
call
lcall
add
lods
pushf
cwtl
imul
call
not
pop
roll
addr16
mov
push
pop
outsb
or
mov
push
inc
cld
std
mov
inc
mov
jae
cmpb
imul
fstpt
and
or
adc
sbb
dec
stos
push
mov
ljmp
pop
xor
js
pop
or
lock
mov
sbb
stos
insb
mov
loope
add
movsb
add
test
dec
adc
fcmovu
sti
divb
aas
gs
push
or
or
mov
scas
push
mov
dec
inc
adc
inc
add
std
mov
cmpl
addr16
jo
mov
adc
jge
test
adc
aaa
and
xchg
pop
inc
cmp
in
push
push
lcall
mov
or
jbe
cmpsl
inc
test
adc
movsl
sbbb
cmp
rcr
loope
in
adc
pusha
lret
sub
lret
scas
dec
sbb
loopne
pop
and
inc
dec
dec
sbb
push
call
lret
je
pop
dec
js
not
call
stos
call
sarl
pusha
jae
inc
mov
and
sbb
ret
adc
rolb
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
and
outsb
jmp
es
aaa
pop
out
sbb
ss
dec
xchg
negb
adc
sbb
or
add
fs
add
cmp
fadds
dec
sub
movsb
fwait
add
fldenv
mov
inc
adc
mov
jo
push
mov
fcomps
or
xchg
pushf
or
sbb
inc
ret
cmp
sub
and
or
xlat
and
mov
mov
dec
scas
into
lcall
and
pop
push
add
testl
sub
pop
pop
insb
push
stos
mov
add
aas
jle
adc
mov
loop
lcall
cmp
sub
iret
js
inc
xor
push
cmp
and
mov
decb
jne
rclb
mov
in
and
jmp
dec
sub
sub
push
pushf
push
insb
xor
arpl
add
pop
xor
xorb
imul
pop
cmp
icebp
jle
inc
ljmp
push
inc
or
cmp
lahf
cmpsb
jle
decb
jge
subb
jmp
les
or
adc
push
or
das
push
or
inc
sub
push
jnp
arpl
add
or
inc
movsb
adc
xchg
rolb
cld
data16
rolb
mov
add
insl
jl
test
or
stos
mov
add
adc
add
sub
lea
pop
add
cs
aad
and
mov
loopne
xchg
andb
xor
insl
jnp
push
adc
mov
enterw
adc
je
push
and
mov
jns
je
xor
mov
xchg
sbb
jbe
repz
test
mov
sti
nop
out
add
dec
lret
add
xorb
arpl
sahf
loopne
ret
outsb
mov
shrb
rolb
lock
in
jp
xchg
ss
dec
cmp
or
inc
sub
shl
jns
sub
pop
and
shr
push
dec
jmp
jo
pop
mov
cmp
inc
out
dec
in
mov
psubsb
cmp
movl
jmp
add
sub
sub
jmp
lock
enter
mov
add
les
dec
or
push
inc
fs
inc
test
mov
or
test
hlt
daa
ret
dec
inc
jne
or
mov
and
imul
fst
lea
sub
adc
addb
lods
jne
push
movsl
or
mov
movsb
cmp
and
out
sar
mov
xorl
inc
add
loope
sbb
push
xor
pop
pop
push
mov
pop
dec
or
mov
shll
cmpsl
or
in
test
jecxz
sub
sub
cs
call
popf
dec
or
inc
inc
and
insl
add
inc
in
mov
xor
incl
mov
jmp
mov
cmc
pop
mov
sbb
stos
int3
pop
addl
lcall
pop
insl
cmpsl
or
adc
jae
adc
es
adc
inc
lret
and
and
dec
enter
sub
mov
sub
dec
aad
inc
xor
jle
mov
sub
in
cmp
jge
jne
mov
insb
pop
xor
or
andb
and
push
jecxz
scas
pop
divb
xchg
ja
shll
aaa
xor
inc
fadds
push
xlat
andb
aam
jle
push
shlb
xlat
dec
push
in
mov
repz
ja
sub
test
pop
push
cmpsb
add
fstpt
sbb
mov
enter
rclb
rclb
push
pop
lds
lret
ret
nop
push
sub
push
lret
ret
jns
and
rorb
push
jmp
cmp
inc
into
fcompl
xlat
fs
xor
jmp
and
jle
pop
int3
mov
or
pop
push
sbb
inc
push
in
adc
ja
int3
xor
dec
add
or
mov
add
push
loop
cmp
rcr
mov
mov
push
mov
adc
jecxz
adc
lea
jmp
jl
dec
shlb
lods
fildl
mov
or
and
dec
inc
aad
mov
int3
jl
inc
shrb
adc
decb
adc
adc
jae
orb
mov
lock
sbb
sub
imul
xor
daa
jnp
cld
adc
push
das
cmp
cmove
jle
shlb
fsubl
xor
mov
mov
cmp
adc
xchg
rcll
dec
adc
pop
and
adc
push
orl
jnp
pop
popa
mov
aas
dec
cwtl
xor
aas
jae
clc
and
mov
cltd
add
and
decl
cwtl
cli
xchg
andl
xchg
or
or
or
mov
pusha
mov
inc
leave
loope
sahf
in
lods
sub
jns
es
inc
and
movsl
ret
inc
int3
or
mov
clc
mov
pusha
mov
sbb
cmp
or
jo
nop
aam
ret
add
movsb
leave
mov
add
adc
or
les
jmp
test
inc
lgs
lock
dec
pop
pop
cld
cmp
jb
mov
mov
enter
sub
ret
mov
pop
sar
or
sbb
incl
or
mov
add
and
push
xor
icebp
sub
hlt
lret
pop
call
jb
mov
dec
sub
push
je
arpl
add
xchg
sbbb
jbe
adc
shlb
stc
daa
dec
jp
fidivs
mov
loopne
jo
ror
movsb
arpl
je
push
dec
icebp
fmuls
or
test
adc
movl
or
dec
mov
or
add
cmp
adc
fnstcw
es
xorl
movsb
cmp
jb
mov
cmp
adc
adc
fimuls
test
fimuls
or
and
or
push
jbe
out
aas
ficoml
add
imul
sub
sub
out
pop
lods
mov
adc
adc
mov
in
je
movsb
xor
lods
push
jo
pop
add
mov
inc
push
mov
rorb
imul
mov
sbb
mov
leave
push
sbb
mov
xor
adc
inc
cmp
mov
push
jne
mov
mov
insl
cmp
jae
add
jmp
sbb
or
xor
fisubs
cmpb
sub
sub
push
lret
je
ljmp
sbb
pop
iret
sahf
outsb
xor
jmp
jmp
shrl
inc
shrl
push
sbb
pop
mov
call
adc
lea
rcrb
dec
add
fs
adc
mov
popa
clc
lock
inc
xor
js
xchg
push
icebp
loop
sub
lock
mov
push
mov
xchg
or
mov
test
aas
push
fdivl
jbe
add
cmp
inc
add
jmp
mov
pop
adc
add
sbbb
mov
xorl
lea
divl
imul
hlt
push
data16
or
inc
mov
repnz
add
inc
inc
lea
mov
or
push
sbb
mov
sub
ret
sub
jb
movsb
mov
scas
lods
add
jmp
outsb
push
add
andb
mov
add
imul
mov
les
clc
sbb
test
push
adcl
scas
ljmp
incb
sbb
ror
mov
add
cmpb
sahf
shr
jae
movsb
mov
lea
adc
or
insl
or
sub
mov
insl
adc
jbe
push
jmp
push
sbb
xor
push
xor
xor
mov
cmp
add
ljmp
inc
fnsave
repz
pop
sub
and
insb
jbe
adc
jo
leave
push
cli
jp
xor
adc
dec
nop
lock
mov
jne
movsl
or
ret
insl
inc
mov
inc
pop
sbb
add
or
cmpsb
ret
mov
andb
rorb
sbb
mov
pop
push
xchg
dec
push
cld
pop
pop
inc
or
xor
sub
jo
scas
adc
aam
mov
adc
sti
and
or
je
jne
divl
or
dec
je
sbb
cmpsb
test
idivl
add
and
xchg
inc
lcall
and
sbb
cld
or
jge
sub
mov
jg
jmp
lret
mov
jmp
jg,pt
clc
dec
outsb
andb
lcall
or
push
mov
mov
ja
jmp
or
adc
arpl
ss
js
add
xor
push
inc
inc
nop
std
orb
loopne
pop
lret
pusha
dec
add
cmp
pop
nop
call
lds
cmp
loope
mov
xor
inc
jmp
jg
adc
mov
pop
out
xor
adcl
jo
insb
and
mov
push
or
xor
xorb
inc
pushl
arpl
inc
or
cmp
or
xorb
call
clc
and
das
inc
inc
aam
mov
dec
ficoms
lock
adc
or
lcall
or
inc
lea
mov
add
repnz
mov
pop
push
subl
add
popa
pop
inc
sbb
ds
xchg
mov
cmpsb
xor
sti
sub
in
call
cli
mov
shrl
mov
mov
lock
mov
cli
inc
das
nop
mov
movd
fsubl
in
sub
cs
shlb
icebp
push
int
popa
sub
sbb
adc
xor
sbb
sub
xor
mov
sti
icebp
xor
jle
mov
pop
ss
aas
push
mov
cmp
clc
sbb
dec
and
pop
ret
les
adc
es
mov
adc
mov
xchg
or
ds
inc
loopne
out
xchg
popa
lock
jbe
sbb
adc
lret
cmpsl
adc
and
sub
push
or
inc
fcoms
test
pop
push
ret
push
rorb
add
mov
sbb
pop
outsb
setb
inc
mov
stos
pop
add
cmp
jbe
out
xor
add
stos
jnp
sahf
sub
fidivrl
sub
test
adc
pop
mov
movb
add
and
jle
insl
pop
add
je
or
inc
fsubrl
or
arpl
xchg
or
add
ret
or
cmp
jecxz
out
outsl
fimuls
sar
je
jne
or
inc
jnp
sbb
fidivs
inc
leave
or
push
les
je
jmp
pop
cmp
jb
enter
jmp
rdpmc
shlb
or
inc
nop
or
sbb
add
fidivl
je
aad
sbb
push
neg
leave
mov
mov
jne
bound
push
inc
jge
cmp
sub
stos
idivl
in
jle
lcall
add
mov
test
lods
pop
clc
sub
je
push
cltd
mov
jo
mov
push
clc
inc
sbb
add
xor
loopne
inc
sbb
add
jnp
pusha
xchg
jo
sbb
scas
lods
sub
inc
scas
roll
out
lods
or
call
mov
xor
hlt
or
add
jg
es
inc
sub
jmp
push
adc
add
add
and
sbb
scas
lock
add
xor
inc
mov
sti
xchg
add
cmpsb
and
ljmp
sub
mov
and
xor
cmovnp
cmp
insl
adc
xchg
js
add
cmp
mov
popa
out
dec
ss
jbe
mov
pusha
sti
loopne
dec
mov
jmp
mov
ret
sbb
push
rcll
pop
dec
out
and
sti
pusha
dec
xor
sbbb
push
rorl
push
clc
mov
xor
inc
add
push
fs
sarb
mov
mov
or
dec
add
push
mov
mov
add
add
sbb
jno
add
adc
lock
bound
pop
jge
sbb
jns
pop
sbb
or
add
add
cmpl
pop
inc
jg
gs
unpcklps
ret
dec
mov
sbbb
fs
jno
shl
fnstsw
aas
dec
insb
loop
jnp
test
add
sbb
inc
sbb
cld
scas
sub
jns
cmp
or
pop
insb
or
add
adcl
add
push
inc
lret
add
and
inc
fdivrs
cmp
mov
cmpsl
add
dec
mov
cld
rcrb
call
dec
mov
inc
test
push
xchg
std
dec
adc
clc
ss
jne
sbb
test
outsb
pop
inc
bound
insl
and
xor
lods
adc
pop
andb
popa
and
out
std
add
pusha
jle
mov
mov
push
mov
out
mov
mov
pushf
test
inc
inc
hlt
das
add
shlb
sub
mov
jl
push
inc
xchg
test
cmp
and
xor
sti
sub
ficomps
pusha
and
push
cmp
test
or
push
adc
enter
scas
push
testb
fst
push
cltd
inc
add
or
and
aam
or
insb
adc
test
xchg
je
xor
ds
jle
cmp
push
ja
imul
add
xchg
add
dec
or
jmp
mov
mov
sbb
or
loope
cld
jo
sub
ljmp
xor
sub
push
pop
pop
push
push
push
je
bswap
ja
pop
xor
and
shll
insl
std
ret
push
mov
in
sbb
cmpsl
sbb
dec
divl
ja
or
imul
ds
mov
mov
je
fadds
sbb
xorl
jg
test
sbb
add
sub
mov
mov
add
or
or
add
sub
aam
fisubl
add
dec
sub
sbb
pop
jecxz
outsl
sbb
add
ret
jp
mov
pop
mov
outsl
sbb
pushf
fcomps
mov
xor
cmp
xchg
mov
lods
in
dec
add
and
push
pusha
push
test
mov
jbe
xor
insl
sub
pusha
or
mov
sub
loopne
push
push
dec
aam
push
push
sbb
pushf
pop
or
call
inc
pop
sbb
decl
leave
adc
dec
inc
test
and
cmp
dec
mov
mov
mov
jmp
test
into
es
mov
je
lahf
idiv
push
sbbb
push
cmp
ja
add
cmp
adc
cmp
pop
clc
les
dec
jne
adc
fwait
mov
and
neg
xchg
testb
or
sbb
or
mov
jg
add
push
or
mov
je
or
push
push
loope
roll
in
ja
fs
jb
loop
or
mov
std
lret
xchg
ret
add
popa
fsubrl
dec
mov
sbb
orl
lock
xor
lods
pushf
shrb
sub
outsb
push
test
and
mov
mov
push
rcrl
mov
jb
push
mov
dec
push
mov
xor
sub
xor
dec
cs
cmpb
push
dec
pop
or
psubusb
popf
push
and
sub
mov
nop
out
cmpb
mov
or
lret
push
call
xor
js
clc
or
add
hlt
movb
rolb
addl
mov
add
lcall
test
loopne
inc
rclb
std
lahf
dec
gs
jg
je
or
pop
sti
inc
imul
or
or
jmp
pop
ss
or
jmp
add
rcr
in
sahf
les
lock
inc
bnd
pop
push
push
insb
insb
ja
or
mov
lods
imul
add
jmp
dec
push
dec
sti
cmpb
mov
push
adc
pop
rolb
adc
arpl
adc
sarl
jl
push
sbbb
fdivs
push
mov
add
xor
into
inc
add
sub
sbb
outsb
push
arpl
jnp
inc
sbb
fdivl
fucomip
mov
roll
scas
in
mov
loopne
or
mov
adc
outsl
jg
push
jge
lret
adc
fs
add
mov
mov
cmp
imul
nop
sbb
jle
dec
ret
or
push
lcall
sub
add
push
cmp
out
insl
or
lea
push
mov
imul
jne
test
addl
mov
fmuls
sub
or
or
daa
rolb
mov
mov
inc
and
in
sti
rclb
and
jne
push
pop
mov
jbe
inc
mov
inc
fcmovnb
rol
add
mov
mov
ret
sti
jbe
push
gs
xor
dec
pop
xchg
insb
push
mov
add
pop
add
sub
mov
sub
or
pop
mov
or
push
daa
inc
push
push
xchg
xor
shr
or
dec
adc
andb
cmp
movsbl
or
sbbb
out
mov
xor
loopne
jle
ljmp
js
add
mov
lcall
nop
movsw
call
adc
push
mov
and
add
imul
adc
xor
mov
inc
fcmovb
adc
outsl
inc
leave
jle
aas
pop
dec
rol
lea
popa
sbb
arpl
fdivrs
xchg
add
adc
bound
xor
mov
cmp
pop
je
in
sub
mov
xchg
pop
mov
jae
aam
xor
pop
sub
mov
subb
iret
pop
jo
iret
xor
mov
call
pushf
push
xchg
cs
std
push
cmp
pop
jne
mov
inc
push
cmpsl
push
pop
cli
fists
mov
mov
cmp
je
inc
cmp
push
in
mov
adc
push
ss
cmp
lods
shr
leave
aam
inc
mov
cmp
ja
movsb
add
add
pusha
mov
cwtl
ret
dec
ret
add
pushf
or
mov
xor
jmp
push
enter
push
pushf
or
rolb
sbb
mov
xor
inc
test
lcall
push
test
xor
mov
and
xchg
mov
enter
call
mov
adc
or
shll
xor
or
fs
aam
test
sbb
lds
popf
pop
sub
jmp
mov
fisttpl
scas
pop
ret
cmp
jbe
xor
lock
xchg
punpckhbw
cs
or
lcall
jg
lret
xorl
or
in
pop
push
sbb
mov
pushf
xchg
jne
sbb
or
fwait
test
cs
add
adc
loope
inc
jp
dec
sub
adcb
outsb
nop
or
rorb
mov
lahf
movsb
orb
cs
add
rolb
ja
push
xlat
add
pusha
adc
xchg
fstpt
lahf
add
insb
or
or
sub
adc
mov
cltd
add
adc
add
sbb
std
mov
fsubr
add
fsubl
roll
lods
neg
mov
mov
cltd
sbb
jo
cmp
jbe
insb
shl
jmp
or
pop
and
cmp
xchg
push
jno
loopne
push
mov
jl
sarb
or
je
neg
push
inc
mov
push
sub
sub
js
cmpsb
pop
jmp
ret
mov
dec
pop
data16
mov
push
or
inc
ret
lods
jns
nop
cmp
clc
cltd
sub
sbb
push
enter
insl
les
in
push
jne
push
in
outsb
test
out
push
andb
xor
mov
int
pop
dec
mov
movsl
mov
stos
mov
or
outsl
sbb
adc
jmp
inc
js
push
jle
out
bound
stc
adc
jo
mov
pop
out
pop
call
dec
add
or
insl
fisttpll
ret
lods
lcall
cmp
jle
jmp
pop
cmp
loope
lods
sub
call
push
xor
mov
mov
or
or
pop
adc
push
push
or
lock
add
clc
dec
or
dec
pop
call
lock
or
fadds
sub
enter
loope
adc
push
and
daa
outsb
mov
test
popa
testw
je
fcmove
fs
push
mov
xor
mov
adc
shl
shlb
icebp
dec
sbb
sbb
add
sub
and
push
dec
lret
jne
cltd
or
mov
jmp
aaa
xchg
fsubs
stos
or
cs
and
and
push
xchg
or
out
or
or
push
cltd
and
fs
jle
cli
sti
inc
jl
or
xchg
mov
cli
mov
xor
fs
add
loope
mov
jle
inc
push
dec
inc
jp
ret
dec
js
subb
or
mov
in
pop
lock
sbb
movsl
adc
or
enter
sbb
or
pop
dec
jle
decb
es
lea
add
jno
inc
and
push
inc
cmp
dec
xor
arpl
clc
xor
pop
jbe
mov
adc
jnp
push
out
in
push
add
and
lret
std
dec
jb
in
pop
sub
mov
xor
jbe
leave
sub
and
test
cmc
xchg
mov
lock
in
lods
mov
and
inc
loope
lock
mov
xor
push
xor
cmp
jle
shr
sbb
add
mov
insb
pop
andb
lret
xchg
pop
sbb
xchg
loope
mov
pop
scas
insl
push
sub
push
insb
inc
mov
inc
jmp
insb
in
and
cwtl
lret
xchg
add
jae
push
jmp
xor
push
mov
cmp
loope
and
mov
and
dec
out
int3
pop
push
sbb
aad
sub
popa
lds
xlat
pop
inc
outsb
or
xlat
mov
dec
sub
dec
dec
add
mov
mov
mov
mov
inc
dec
cld
ret
adc
shlb
enter
enter
lret
mov
incl
or
ds
sbb
or
loop
jnp
decl
mov
lock
arpl
mov
push
xchg
and
cmp
lods
mov
cmp
mov
fdivrl
cmp
mov
dec
adc
ja
icebp
imul
daa
inc
lcall
mov
gs
sahf
xchg
dec
lods
jle
mov
sbb
pusha
push
xor
rcrb
aas
mov
mov
js
add
sti
mov
in
cld
fsubr
jne
add
cmp
and
jnp
adc
cmp
and
inc
xor
sti
adc
cli
mov
mov
lods
pop
adc
xor
xchg
test
mov
and
mov
xchg
cmp
enter
inc
sbb
adc
mov
add
mov
daa
add
inc
push
mov
mov
imul
aaa
dec
mov
or
ret
jl
mov
jbe
es
out
push
xchg
pop
fmuls
xor
enter
mov
repz
inc
fcoms
cwtl
xor
int3
ds
sbbl
pop
js
jmp
sbb
cmp
push
pop
es
dec
mov
loopne
sbb
adc
pusha
cmp
and
adc
pop
xor
add
pop
movsb
add
push
mov
jbe
jmp
mov
jbe
lahf
or
cmp
cmp
push
mov
pop
jne
adc
mov
and
jmp
daa
push
sub
mov
fimull
mov
int3
and
xchg
ret
and
jae
in
dec
dec
jne
adc
xor
dec
das
mov
testl
aas
push
inc
push
jmp
mov
pop
sbb
fiaddl
sti
and
in
sti
pusha
xchg
mov
sbb
cmpsb
mov
sarb
mov
mov
bswap
jle
insb
pop
arpl
enter
ret
adc
jg
jo
pop
sub
xchg
jae
js
pop
pop
mov
outsl
inc
push
mov
ss
xor
or
cmp
push
outsb
jmp
sbb
lcall
adc
xchg
popf
pusha
pushf
sbb
add
push
or
imul
adc
xchg
and
add
cmp
mov
inc
sbb
push
sbb
push
push
xchg
xchg
mulb
or
or
inc
call
sbb
pushl
push
push
sub
jmp
adc
push
imul
adc
and
clc
fs
jne
sahf
or
insl
filds
andb
stc
adc
mov
rorl
rorb
jns
dec
out
int
pop
es
sbb
dec
adc
out
inc
xchg
mov
and
out
sub
mov
pop
push
sbb
pop
pop
mov
test
mov
add
push
dec
lods
sbb
cmp
popa
add
sbb
push
scas
in
add
mov
inc
push
enter
xchg
addr16
outsb
aad
pop
push
je
jnp
xchg
xchg
and
pop
push
mov
sbb
xchg
popf
insl
inc
xor
lock
pop
pop
data16
pop
cmp
scas
dec
cmp
or
das
jmp
and
or
or
or
lods
dec
ss
pop
popa
inc
pop
std
in
insl
aad
cmp
sub
out
jmp
push
gs
xlat
adc
push
xchg
push
jle
mov
xor
pop
cmpsl
jns
lahf
sbb
or
or
add
inc
js
add
add
or
lret
loopne
inc
xor
cmp
mov
jnp
push
adc
dec
in
pop
hlt
ljmp
or
cmc
lds
mov
or
int
out
mov
cmpsb
mov
jmp
insb
pop
pop
test
pop
mov
fcoml
fdivs
push
cmc
mov
adc
add
outsb
pusha
lock
and
ret
sbb
lret
mov
bswap
mov
push
je
mov
testb
or
mov
xor
add
nop
sub
imul
or
sahf
add
or
dec
adc
adc
andb
push
push
push
outsb
inc
loope
mov
sub
lret
mov
shl
not
test
outsb
and
aas
popa
es
push
mov
outsb
sbb
push
cli
and
push
rclb
ficoms
fcmovne
out
cltd
adc
cmp
sub
pop
push
mov
shll
aaa
cmp
xor
js
mov
sub
les
cmpl
add
cld
test
add
ret
pop
cltd
addr16
xlat
mov
mov
adc
and
rolb
jecxz
repnz
sbb
test
inc
push
push
sbb
sbb
pop
mov
aam
aaa
lret
and
addb
sarl
enter
stos
sbb
push
adc
ja
push
ss
sub
pop
fcmovnb
add
xor
xchg
inc
gs
or
dec
stc
dec
mov
xchg
shl
push
mov
cltd
push
out
sbbl
imul
cmc
adc
sub
not
ss
and
mov
call
dec
and
loopne
mov
mov
fidivl
xchg
hlt
push
pop
inc
outsb
lret
or
in
cld
add
or
cltd
inc
fs
or
pop
mov
popf
jg
mov
dec
or
imul
dec
dec
push
or
add
out
lahf
lods
xor
sub
outsb
add
mov
sbb
mov
cmp
sbb
sbb
out
and
gs
jecxz
dec
fstps
push
xchg
fsub
add
hlt
and
dec
xchg
xchg
xor
lods
loopne
jge
pop
jg
cs
aas
sub
push
nop
out
adc
stos
test
inc
std
daa
adc
stos
mov
cmp
jl
in
and
lea
inc
test
xlat
sub
mov
inc
push
sahf
cmp
andb
mov
add
inc
jle
sub
adc
xor
pop
or
or
dec
mov
push
incl
sub
clc
inc
ret
ret
and
mov
mov
and
out
push
loopne
cs
sbb
mov
dec
movsb
inc
rolb
dec
cltd
or
ss
mov
fs
push
fcomps
outsl
pusha
and
push
dec
adc
ss
push
or
mov
mov
jle
sahf
xor
out
sbb
jl
rolb
xor
clc
fwait
adc
out
dec
jl
cmpb
jl
sbb
adc
nop
cmp
jmp
cmpsb
xor
incl
call
push
lcall
adc
pop
push
xchg
sbb
push
mov
xor
sbb
adc
subl
xor
pop
push
rclb
mov
sahf
fimull
js
add
push
iret
mov
mov
xor
insl
adc
lcall
push
push
mov
pushf
push
cmc
pop
rcl
iret
ss
mov
push
adc
pop
enter
adc
rcrb
sub
or
fwait
cmp
sub
fildl
sbb
or
dec
dec
add
jbe
ljmp
add
data16
adc
lea
mov
mov
push
pop
or
outsb
test
adc
fs
clc
and
jmp
adc
iret
cwtl
cli
sub
dec
inc
loopne
dec
xchg
fdivl
push
sbb
arpl
fs
dec
and
adc
cltd
ret
push
dec
fldl
dec
cld
xchg
or
adc
push
leave
jmp
push
sbb
inc
sbb
loope
adc
xchg
test
lcall
mov
inc
inc
rcr
or
je
sbb
call
inc
sti
aaa
cmpsb
loope
fstpl
or
loopne
push
lds
sbb
dec
or
adc
ds
scas
and
or
push
movsl
andb
mov
ss
into
movsl
rclb
popa
cltd
inc
xor
shrb
jne
push
mov
popa
dec
cwtl
shlb
fstl
cmp
call
mov
inc
add
xchg
mov
adc
adc
xchg
and
jmp
rcrb
xchg
fsub
xchg
inc
sbb
imul
sbb
push
inc
cld
lret
and
cmp
sub
test
mov
or
dec
ja
mov
scas
dec
sub
mov
push
mov
and
and
rcl
outsb
add
lret
inc
dec
out
mov
push
add
ror
js
lock
mov
cmp
jb
cmp
jbe
inc
mov
or
movsl
jnp
popa
movsl
int
sbb
popf
xchg
sbb
psubb
imul
in
push
push
mov
and
adcb
pop
jle
shrb
adc
cmc
dec
and
mov
jge
movzwl
mov
aaa
jns
xchg
or
je
out
repz
popa
aam
cs
fsub
adc
xchg
fistpll
imul
xor
mov
push
sub
pop
xchg
loope
lods
imul
ja
sub
cmp
fmull
xor
or
icebp
dec
cwtl
repz
adc
sub
ret
shll
pusha
add
movsb
cwtl
es
adc
push
dec
sbb
cs
push
vdivps
xchg
out
push
push
xor
jno
ret
add
sbb
pop
rcrb
push
ds
fneni(8087
or
pop
jmp
in
mov
ret
dec
inc
or
and
call
xchg
js
xchg
fistl
inc
divb
jl
or
jg
adc
mov
hlt
push
and
cmp
dec
add
push
lcall
aam
xor
rclb
jle
mov
pop
jmp
or
jmp
pushf
inc
inc
loope
inc
cmp
jle
xchg
jae
imul
mov
or
push
mov
dec
inc
inc
out
sbb
adc
shlb
jnp
jg
movsl
psubq
or
dec
or
mov
cmp
jb
pop
push
sbb
inc
rcrl
testl
addb
imul
push
fsubrs
push
push
das
or
fadd
xchg
mov
dec
andb
bound
or
push
fdiv
push
jmp
adc
dec
loopne
xchg
mov
cwtl
data16
push
dec
repz
inc
cs
sbb
mov
push
popf
out
mov
loopne
push
cmpsl
adc
iret
jle
ljmp
ret
push
adcb
pop
dec
pusha
jns
cwtl
pop
inc
je
mov
adc
push
jo
sbb
movl
inc
in
popa
push
movsl
push
or
dec
adc
std
cmpsb
outsb
inc
jmp
mov
sub
sbb
mov
pusha
xchg
and
pop
pop
mov
and
or
cli
test
sub
mov
adc
mov
es
cld
mov
mov
rolb
std
shrb
push
cli
dec
roll
cmp
out
cmp
push
pop
loop
scas
ljmp
jl
incb
hlt
aas
xchg
shl
dec
inc
andb
or
dec
jmp
xor
jecxz
aaa
movsb
xchg
add
xor
imul
push
int
mov
sub
loopne
rorl
sbb
sub
cmp
xor
or
push
pop
shlb
add
and
add
aaa
loope
lret
mov
dec
mov
add
stc
ljmp
lcall
mov
or
adc
jmp
adc
add
aad
int
dec
imul
push
les
jno
aas
inc
pop
sbb
push
mov
pop
push
adc
je
cmp
out
push
mov
xor
stc
sub
inc
sub
xchg
ret
adc
enter
cmp
dec
loopne
pop
xchg
adc
popa
loop
push
adc
push
mov
hlt
js
pop
and
es
les
adc
popa
mov
fadds
add
mov
sbb
jecxz
enter
mov
pop
push
mov
js
xchg
adc
push
mov
loopne
ljmp
add
das
jp
push
daa
sbb
xchg
or
pop
shll
call
call
jmp
repz
pusha
shll
inc
clc
sbb
addr16
popa
xorl
loop
pop
dec
pop
cmp
mov
inc
jge
dec
sbb
push
not
jae
mov
xchg
inc
cmp
rclb
jae
pop
int3
popa
ret
sub
cmp
ret
push
out
xor
stos
inc
or
pop
dec
popa
mov
int3
push
lock
and
sub
pop
out
rcl
jbe
lock
xchg
mov
ja
popf
or
or
insl
cmp
pop
inc
sbb
sbb
notb
jae
dec
pop
lds
pop
testb
ficomps
scas
sbb
imul
mov
nop
clc
pusha
int
mov
hlt
dec
loope
inc
xchg
adc
lret
xor
mov
sub
shlb
adc
adc
daa
and
xchg
cs
xor
icebp
popa
add
xchg
addb
adc
xchg
push
jp
movsl
in
cmp
mov
xor
fld
adc
or
call
adc
or
jbe
mov
lea
lret
fimuls
jl
clc
and
fmul
les
push
loop
xor
or
je
fs
mov
frstor
add
pusha
ret
loop
cli
adc
xchg
mov
bound
orl
adc
cmpsb
inc
mov
mov
sahf
stos
imul
js
hlt
mov
inc
ret
pushf
test
sub
xchg
sbb
cs
loopne
loopne
cmpsb
movsb
sbb
clc
nop
fwait
add
sbb
jmp
subl
lcall
mov
or
cli
jno
push
jae
mov
mov
sbb
js
fidivs
add
inc
push
pop
adc
inc
add
mov
add
flds
dec
mov
repnz
and
rorl
cmp
push
rolb
out
add
or
mull
sbb
xor
prefetch
mov
mov
movsb
cmpb
or
jle
add
ds
mov
adc
aaa
ljmp
lret
push
jl
jg
mov
cmp
data16
cmp
mov
rcrl
es
dec
cmp
sbb
add
sub
clc
adc
mov
cs
add
xchg
push
adc
cmpsl
lahf
cmc
xor
push
aad
inc
pop
inc
lods
adc
mov
cli
lcall
cmp
mov
xor
lea
jge
movb
imul
jge
je
out
xor
sbbb
mov
inc
enter
sub
aaa
pusha
mov
test
and
push
xor
pusha
fnstenv
jp
pop
push
add
add
jmp
push
mov
shr
adc
mov
adc
cltd
test
xor
adc
test
xchg
pop
inc
or
pop
inc
and
xchg
lcall
std
xorb
pop
mov
push
sbb
cmp
push
xchg
or
or
xchg
mov
and
add
bound
adc
jp
adc
dec
mov
push
inc
sub
lret
xor
lods
xor
scas
push
inc
out
ja
sbb
mov
jne
push
jb
popa
addl
jnp
cmp
sarb
js
leave
jo
pop
pusha
fstps
adc
ret
xchg
outsl
sbb
je
loop
lea
mov
xor
or
cli
sub
xor
add
inc
sub
mov
or
pusha
ja
dec
es
mov
pop
adc
push
cs
mov
ret
jnp
pushl
mov
nop
incl
and
pop
mov
inc
pop
ds
loope
das
add
and
jg
stos
xchg
icebp
add
mov
adc
sbb
add
popa
ret
cmp
xor
xor
inc
push
stos
repz
lods
pop
adc
mov
jecxz
mov
addl
std
lea
push
aad
inc
sub
test
sbb
and
sub
adc
xchg
movsb
cmpsb
sub
push
add
xor
jo
lcall
jmp
sbb
xor
cmp
push
xor
jo
andb
pop
jmp
push
sub
and
pop
push
and
js
test
arpl
push
mov
dec
push
out
and
pop
imul
adc
pop
aam
and
in
das
push
jns
xchg
inc
push
and
movsb
test
xchg
mov
or
and
std
inc
lods
dec
push
jne
sbb
cmp
push
mov
test
test
or
mov
sub
adc
push
sahf
sub
cld
add
and
punpckhbw
sbb
sub
xor
sub
cmp
dec
jl
or
lcall
cmpsb
push
push
mov
push
mov
leave
mov
push
adc
push
jo
hlt
adc
adc
sbb
xor
lret
into
loop
repnz
sbb
pop
inc
insb
or
add
pop
aaa
mov
xor
adc
add
daa
lcall
das
dec
xchg
in
or
cld
pop
nop
je
in
add
outsb
jmp
xor
adcl
fimuls
pop
and
int3
dec
shr
shl
mov
mov
sub
jmp
ss
mov
ret
jmp
push
insl
div
or
out
shr
or
push
mov
xor
fidivs
jle
pop
and
je
mov
push
or
push
or
or
and
push
movsl
sub
movsb
mov
pop
push
mov
jns
mov
rcll
add
mov
pop
cmp
mov
addr16
out
adc
jo
inc
sub
push
roll
gs
xchg
pop
add
sarl
adc
fstps
cmp
clc
jmp
loopne
mov
or
sbb
pop
adcl
enter
xchg
pusha
cmp
call
push
movb
push
in
out
out
sahf
out
ljmp
int
sti
out
aas
xchg
push
inc
add
or
add
xchg
insb
push
sub
add
and
rorb
xor
add
add
jo
pop
data16
aad
jp
pop
jp
lea
test
imul
push
test
fs
test
inc
cld
mov
xor
and
sbb
or
lea
mov
xor
push
cmp
lods
inc
loop
sub
movzwl
mov
fdivs
sbb
adc
mov
data16
adc
mov
dec
inc
filds
xchg
imul
mov
lea
add
icebp
sub
mov
je
neg
jle
ret
jbe
pop
xchg
jge
aas
jb
in
xor
fs
testb
mov
je
in
imul
add
or
dec
sub
call
add
jbe
outsb
call
add
sbb
xor
icebp
fs
neg
sbb
jle
cmp
dec
xor
dec
je
adc
jge
sub
xchg
enter
dec
or
xor
mov
aas
mov
mov
cmpsb
push
add
add
sbb
dec
rolb
xor
jb
add
int
cmp
dec
jmp
inc
fs
incl
inc
incw
incb
sub
sub
mov
push
xchg
sbb
fwait
push
xor
pop
hlt
flds
adc
andb
shrl
jp
jbe
jne
dec
aad
xor
inc
xchg
in
ja
inc
push
fnsetpm(287
and
or
mov
sbb
jle
and
pop
cmp
or
in
dec
dec
or
add
repnz
cli
std
mov
aas
ja
dec
and
jmp
movb
ret
repnz
jo
cs
pop
push
mov
dec
out
cmp
cmp
cmp
cmp
call
pusha
xor
dec
aam
subl
or
jp
clc
mov
add
mov
fisubrs
dec
fcomps
call
adc
add
pop
shlb
push
jbe
cld
test
adc
push
pusha
fwait
shlb
subl
mov
in
movsb
enter
scas
push
or
jg
cmp
jns
cwtl
or
rolb
and
cmp
mov
in
mov
jg
or
sub
sbb
add
fdivrs
xorb
faddl
orb
dec
ljmp
ss
fsubl
int3
fsubl
test
and
inc
fdivp
inc
fiadds
adc
insl
lcall
push
or
movsl
cmp
pusha
shrb
add
push
jmp
cmp
mov
inc
fisubrs
jae
shl
pop
nop
enter
push
mov
std
adc
add
in
sbb
or
movsb
pop
mov
xor
push
jmp
and
pusha
jle
gs
or
mov
adc
inc
jmp
sub
mov
mov
or
adc
add
inc
clc
fildl
pop
ret
push
sub
stos
in
push
adc
ds
mov
lea
cmp
rorb
push
push
hlt
mov
neg
stos
pop
popa
push
fsubrl
push
movsl
por
sub
and
in
pop
or
sbb
bound
lds
mov
sub
leave
movsl
ficoml
push
sbb
cmp
xchg
hlt
adc
or
clc
add
adc
push
imulb
icebp
add
mov
or
pop
mov
mov
push
inc
adc
cmp
pop
dec
data16
sti
inc
gs
inc
mov
cmp
and
xchg
sbb
shll
mov
mov
or
xchg
sub
add
je
adc
hlt
cmpsl
mov
cmc
inc
or
xchg
mov
jb
or
inc
push
push
jmp
imul
jecxz
xor
or
dec
dec
add
sbbl
cmp
sbb
push
lock
repz
js
dec
and
dec
add
es
js
mov
xor
sbb
clc
das
pop
bound
test
mov
xchg
dec
jg
or
rorl
imul
jbe
add
out
xchg
mov
mull
xchg
not
and
inc
cmp
dec
rclb
mov
out
push
add
cmp
jecxz
mov
icebp
pop
in
sbb
sub
pop
dec
mov
adc
inc
roll
jne
push
popf
push
out
aam
cmp
jl
dec
push
or
es
jmp
cmp
mov
out
push
mov
cli
or
out
loopne
sub
gs
jmp
jno
mov
inc
sub
testb
or
frstor
sub
adc
lods
push
pop
adcl
dec
and
xor
add
jae
mov
int3
add
pop
cs
dec
xor
sub
sub
mov
add
add
loopne
sub
cli
adc
dec
or
sahf
shll
dec
or
or
ljmp
mov
or
push
mov
in
inc
mov
jb
dec
aas
flds
nop
icebp
and
mov
negb
fists
inc
aaa
xor
repnz
leave
xor
mov
xor
sub
adc
push
imul
fldpi
pop
push
std
inc
out
lock
cmp
mov
inc
mov
pop
sub
fs
dec
push
pop
es
push
jl
or
jge
pop
gs
movsbl
dec
ss
pop
xor
shlb
in
mov
mov
xor
mov
add
and
xor
cld
and
jbe
xchg
add
and
pusha
xor
out
or
aaa
jmp
jbe
or
pop
mov
shll
enter
sbb
addr16
dec
sbb
push
sub
sub
or
movsb
pusha
dec
shrl
sbb
std
add
push
clc
jl
out
jmp
push
out
adcb
push
inc
clc
divl
stc
cmpb
int
testl
addl
cmp
cmpsb
sahf
out
jmp
out
fnsave
push
std
sbb
xor
jg
xor
shll
push
dec
mov
pop
in
test
sub
scas
je
push
or
push
jmp
stos
aas
lock
pop
mov
xor
lahf
dec
or
and
xor
test
push
push
ror
inc
cmp
pop
jmp
and
mov
or
movsb
jle
jg
imul
adc
xor
pop
and
push
mov
cmp
fcoms
mov
sub
int3
lods
dec
cmp
xchg
arpl
xchg
aas
jne,pn
xchg
loopne
push
jecxz
cld
push
movsl
push
mov
add
imul
jne
lret
lret
pop
jmp
ds
mov
std
pop
sub
je
mov
daa
mov
mov
add
adc
add
je
sbb
and
arpl
sbb
lcall
test
fistpl
rcll
jne
lods
xchg
xchg
xchg
xlat
ljmp
pop
andl
adc
mov
stos
lods
xor
adc
and
jmp
mov
nop
or
sub
jae
shll
cmpsl
xor
or
rorl
add
sub
and
fcmovne
jmp
aas
loop
test
push
sbb
addb
add
dec
pushf
lods
add
inc
mov
inc
pop
sarb
mov
rcll
pop
lea
xchg
ss
les
icebp
lea
mov
jp
mov
ret
push
fldl
mov
cld
push
mov
es
rcrb
or
pop
mov
stos
mov
sub
add
es
pop
jl
sbb
push
jmp
outsl
and
xchg
and
mov
lret
mov
je
ja
in
adcl
or
cmc
shrl
bound
push
inc
bound
repnz
out
stc
adcb
jle,pn
mov
xor
push
or
test
inc
dec
pop
xchg
rorb
in
inc
adc
int
or
push
xchg
xchg
loop
xchg
push
bound
or
jge
lret
jbe
jle
gs
pop
repz
test
cmp
lock
mov
or
cmp
mov
mov
sbbb
push
sub
inc
jo
pusha
mov
test
enter
ljmp
mov
mov
push
ja
adcl
xchg
sbb
pop
push
push
inc
mov
push
mov
cmp
aam
mov
and
mov
xorb
and
jo
pop
adcb
scas
inc
inc
cwtl
mov
pop
cli
push
adc
subb
or
sahf
hlt
mov
mov
sbb
adc
adc
filds
add
lds
xor
jp
lret
mov
mov
das
aam
fisubs
out
xchg
sbb
cmpsl
imul
mov
mov
rcrb
jb
stos
xchg
rol
xchg
jae
inc
or
fbstp
mov
lods
push
push
or
das
pop
mov
push
lfs
push
pop
cmc
sbb
mov
roll
fimull
cmpsb
gs
dec
lcall
js
cmovae
in
adc
call
lods
shlb
xchg
push
mov
insb
leave
adc
rcl
pop
pop
cs
mov
loopne
inc
int
xchg
xchg
sub
xor
js
push
jnp
arpl
mov
mov
jmp
or
cmp
fnstcw
xor
add
cmpsl
sbb
fdivr
pusha
jecxz
or
mov
fldcw
cld
clc
dec
sarb
jns
testb
das
ss
mov
loopne
add
sbb
push
xorl
lea
inc
pop
rolb
add
subb
aas
and
jge
inc
jmp
or
pop
outsb
jecxz
shl
and
aaa
in
xor
push
jl,pt
ret
push
xchg
sbb
arpl
dec
pop
popa
jno
aaa
addr16
mov
les
lock
movsb
push
insb
xchg
enter
add
add
pop
mov
add
mov
xchg
mov
cmp
pushf
mov
cmp
movsl
ljmp
lret
mov
or
cmp
jb
cmp
flds
ds
fsubl
imul
sub
in
adc
sbb
cmpb
sarb
adc
or
das
mov
sub
pop
jmp
push
push
cltd
aam
pop
cmpsw
mov
push
cmc
xor
push
fidivs
pop
movl
mov
and
pop
dec
leave
mov
addb
pusha
add
add
jne
cmpsb
clc
jle
push
push
bnd
outsl
add
or
pop
movl
cli
mov
or
push
and
outsb
cwtl
aaa
push
clc
add
dec
jo
push
sub
pop
cltd
and
addb
arpl
jb
lcall
inc
cmpsb
ror
sub
dec
pop
jge
pushf
adc
je
cmp
cmpsl
lods
add
sbb
mov
arpl
or
shr
stos
mov
adc
lds
fimull
add
in
shll
cmp
sbb
xlat
jge
jns
nop
mov
test
mov
mov
js
bound
pop
push
pop
xchg
mov
xchg
xchg
dec
mull
mov
dec
push
inc
sub
insb
dec
pop
inc
add
mov
mov
cmp
cmc
jae
sub
cmp
mov
pavgb
aam
push
add
pop
adc
pop
and
orb
xchg
fs
mov
xchg
jne
sahf
sub
in
adc
xchg
xor
jp
dec
and
lea
xchg
mov
andl
setb
sbb
inc
push
mov
adc
rcrb
fdivrs
sub
test
jp
hlt
jg
movsb
add
loope
inc
push
xchg
push
fwait
pop
push
inc
or
pushf
fstps
jae
pop
jmp
xorl
rorl
dec
mov
repnz
add
xchg
add
mov
pop
mov
stos
jmp
xchg
ja
ljmp
fiadds
mov
push
push
or
or
push
inc
shlb
lcall
insl
dec
xchg
xchg
pop
stos
addl
mov
lea
cmpsl
clc
cmp
out
mov
shlb
push
xchg
shll
and
subb
push
daa
int3
cmp
mov
nop
xor
test
cld
and
notb
je
inc
imul
pop
int3
or
mov
ja
addb
push
fdivrs
or
lea
lret
dec
test
or
pop
pop
xor
orl
in
fsubrs
and
fbld
pop
lock
push
adc
jl
test
jbe
pop
test
and
pop
push
in
inc
mov
dec
dec
pop
clc
add
mov
or
fadds
jb
popf
xor
jne
sbb
and
inc
dec
add
add
inc
mov
js
ret
mov
adcl
sub
or
cmp
lods
jno
dec
incb
ja
sbb
adc
fadds
adc
add
add
dec
ds
daa
lods
inc
dec
mov
or
outsl
or
loop
or
nop
add
or
add
xchg
dec
or
push
xor
xchg
sub
cmpb
fisttpll
or
and
pop
test
test
adc
and
aam
push
sbb
push
xchg
pop
push
fmuls
or
sub
xchg
push
mov
cmp
jne
ret
sub
push
push
data16
imul
adc
pusha
or
add
mov
add
xor
enter
adc
pop
mov
icebp
shll
jnp
sub
ret
fs
add
push
mov
xor
cmpl
push
out
repz
in
enter
imul
sbb
sbb
roll
xor
inc
inc
cmp
jge
mov
cmp
xor
bound
cmp
or
icebp
ret
push
pop
pop
sbb
sub
movsl
sahf
sub
dec
dec
jae
in
js
rorb
add
aad
or
js
push
clc
push
push
rorb
ret
pop
push
dec
dec
js
xor
rclb
sbbb
arpl
jl
insl
adc
push
gs
inc
adc
insl
push
rcrb
push
add
sub
sub
pop
decb
pop
lea
rep
ds
jne
imul
clc
je
and
jae
mov
clc
inc
arpl
pop
arpl
mov
xor
mov
xor
push
mov
and
or
stc
xchg
inc
xchg
stc
jae
add
movsl
or
inc
lods
xor
push
ljmp
jge
pop
cmp
movsb
add
js
or
pop
pop
dec
inc
pop
adc
inc
sub
add
sub
or
add
cmp
or
push
arpl
dec
sub
or
call
mov
sub
dec
cmpsb
test
mov
mov
cmp
fcoms
sbb
push
pusha
xbegin
and
adc
sub
movsb
jo
pop
outsl
xchg
lods
pop
or
ds
mov
lea
push
adcb
je
cwtl
lcall
mov
pop
mov
jmp
dec
imul
sub
adc
and
es
or
pop
add
push
mov
clc
addb
sbb
adc
mov
inc
fiaddl
pusha
and
push
movb
push
enter
mov
mov
lahf
ss
xor
inc
push
adc
fisttpl
js
fwait
test
pop
adc
or
cmpsl
jno
sbb
inc
inc
movsl
in
add
jno
adc
mov
inc
sub
iret
sbb
push
cmp
les
imul
popa
and
fistpl
psllq
push
xor
push
inc
pop
in
jb
gs
imull
mov
roll
add
dec
add
sarb
mov
push
pop
jge
push
js
je
js
loop
nop
xchg
jne
xchg
sqrtps
xchg
mov
adc
xor
loop
push
push
stos
cmpl
mov
out
mov
aam
pop
es
shrb
jnp
and
fisubl
mov
ds
int
add
and
scas
mov
inc
inc
push
push
xchg
aam
add
cmpsb
fistl
test
sub
or
and
enter
testl
push
and
lods
or
enter
test
xchg
rolb
mov
add
rorl
scas
or
rolb
fs
bound
jl
push
sbb
mov
js
jp
cmp
jge
push
pushf
lock
inc
adcl
mov
mov
push
jge
out
mov
cmp
add
sbb
mov
ja
lea
xor
pushaw
rclb
fsubs
shrb
mov
xchg
dec
ret
mov
js
pop
push
add
sub
sub
mov
or
or
and
pop
add
add
or
or
sub
sub
push
pop
aaa
inc
es
push
sbb
fldt
xor
loopne
mov
mov
aad
pop
orl
insb
jno
repnz
fstps
xchg
nop
aaa
sbb
inc
pop
and
inc
push
and
dec
xor
pop
and
mov
pop
arpl
mul
add
sub
cmp
adc
aam
cs
mov
imul
push
add
adc
imul
adc
loop
iret
and
mov
sub
jmp
or
push
ljmp
cmp
push
int
adc
mov
outsl
arpl
and
ret
sub
sbb
stos
sub
ss
loope
jne
cmp
sbb
movsl
repnz
das
aad
iret
test
cmpsl
shrl
pop
jmp
lods
sub
insl
inc
sbb
xor
das
scas
and
add
sbbl
and
jno
mov
leave
lea
stos
push
fcomps
stos
and
jg
loop
mov
loopne
int
rclb
loopne
and
xchg
jg
shl
mov
sbb
lea
pop
test
inc
push
je
pop
inc
inc
popa
add
cmpb
ret
pop
pop
pop
push
dec
push
leave
mov
push
orl
in
js
dec
add
jno
pop
jnp
subb
push
icebp
and
and
ret
push
inc
icebp
xchg
pop
sbb
dec
push
inc
lds
pop
outsl
aas
inc
jecxz
inc
xchg
adc
dec
adc
ret
arpl
dec
sbb
adc
insb
sub
lods
adc
xchg
pop
jae
sub
in
stos
addl
mov
jno
add
rorb
jns
dec
sbb
sarb
nop
hlt
jl
inc
jbe
add
inc
movsb
lods
cltd
cmpsb
jp
ret
adc
add
push
adc
sub
sbb
incl
add
mov
decl
inc
xchg
data16
jmp
push
mov
jnp
inc
dec
cmp
cwtl
jmp
or
jo
inc
inc
sub
jo
cmp
adc
shlb
mov
ja
or
pop
jecxz
aaa
cmp
fs
xlat
cmp
dec
jo
xor
or
or
push
add
mov
jb
insl
mov
inc
dec
call
xchg
ds
jge
cmp
jne
test
dec
enter
mov
in
sub
mov
bound
pop
adc
pop
sbb
sahf
push
sub
rorb
xchg
into
je
stos
add
loop
mov
test
sub
and
inc
sub
push
dec
dec
mov
repz
push
mov
pop
cmp
ds
add
pop
add
xchg
sbb
add
sbb
xchg
fmuls
cld
cmp
jo
xor
pop
push
pusha
adc
ljmp
outsb
jne
inc
ret
cmp
gs
pop
fdiv
jno
dec
cmp
in
orl
mov
popf
or
mov
xor
and
scas
jae
xchg
sub
push
fwait
pop
mov
pop
cld
pop
mov
imul
ja
adc
nop
test
les
int3
pop
testb
inc
aas
lds
push
and
shll
sahf
or
lret
sbb
faddl
loopne
add
xor
xor
sbb
js
push
xor
stos
mov
and
xor
and
in
ljmp
jbe
ds
lods
inc
lahf
or
cmp
dec
ds
mov
xor
mov
pop
or
or
inc
repz
js
push
insl
ret
pop
sbb
sub
pop
ss
add
cmp
in
add
out
adc
enter
inc
dec
bound
dec
std
fwait
sub
xor
or
and
cwtl
mov
add
mov
jmp
inc
cmp
jb
insb
aam
mov
pop
sbb
xchg
adc
push
nop
add
nop
aaa
imul
dec
cmpxchg
fdivs
push
add
cmp
adc
cmp
cltd
mov
sub
je
push
inc
push
push
addr16
pop
popa
xor
inc
pop
push
testl
sub
ret
add
out
negb
and
mov
dec
popf
inc
ret
dec
les
adc
jmp
add
jmp
adc
or
inc
enter
ljmp
sahf
add
push
push
gs
cli
inc
lea
dec
and
xchg
daa
jg
pushl
jae
dec
movsl
mov
dec
clc
movsb
cmc
pop
test
dec
pop
add
mov
lea
sbb
arpl
push
mov
int3
jo
inc
push
or
adc
fs
adc
or
test
dec
call
adc
push
add
div
add
inc
hlt
adc
cmc
xchg
jo
adc
jno
sub
mov
sbb
loope
shlb
push
mov
test
cmp
sahf
outsb
xchg
cli
je
sub
repz
pop
or
push
in
andb
andb
ds
cmp
adc
pop
pop
push
sbb
mov
xor
add
mov
dec
push
stos
jge
or
add
push
add
cmpsl
ret
mov
add
jmp
lahf
xchg
mov
stos
bound
imul
or
pushl
sbb
cmp
js
jae
xchg
or
dec
inc
mov
inc
cmpsb
fildl
push
ret
cmp
jne
push
shl
jbe
iret
fdivrl
push
jne
int
loopne
add
and
rorl
loop
inc
jg
jmp
mov
adc
jnp
push
outsl
dec
push
ret
push
adc
test
pushaw
push
push
push
cmp
ss
ret
push
jne
shlb
ret
gs
push
add
dec
ret
aaa
jne
xlat
sbb
sbb
lcall
js
jle
xlat
adc
gs
and
xor
aaa
adc
push
add
stc
cmp
xorb
dec
rorb
push
mov
js
fimuls
dec
and
lock
addr16
jg
sbb
mov
adc
or
test
jmp
push
roll
push
sbb
adc
sub
push
mov
jle
mov
lods
xchg
js
and
add
inc
test
sub
test
xchg
xchg
popa
cmp
std
addr16
loope
dec
loope
mov
push
xorb
and
fisttpl
or
lcall
adc
xchg
js
mov
or
lods
fcoms
pusha
jecxz
or
xchg
stc
mov
pop
push
add
jnp
loope
mov
test
pusha
addl
push
jno
ret
leave
popa
lock
and
mov
xchg
clc
inc
and
mov
sbb
js
sub
loope
and
or
jp
sarl
insb
jmp
dec
gs
xchg
sbb
es
adc
lock
ljmp
adc
lock
dec
lods
cwtl
pop
inc
add
fadds
dec
lock
loop
xchg
icebp
push
notb
or
inc
imul
out
jns
inc
cs
loopne
test
or
sub
push
lahf
ljmp
lea
jg
pushl
mov
mov
cld
jg
sub
mov
or
roll
mov
dec
call
push
fdivr
push
ret
xchg
jb
jecxz
adc
add
sub
in
cmc
aaa
add
or
ja
mov
dec
adc
xor
sub
push
roll
inc
xor
ficoms
push
xchg
mov
lcall
push
jg
push
pop
push
push
in
mov
or
xor
and
pop
or
mov
add
mov
xor
push
imul
inc
test
push
and
xor
push
fnsave
insl
mov
push
lcall
js
and
lods
or
inc
sub
push
push
test
xor
test
add
inc
rcrl
insb
cltd
pop
shlb
mov
sbb
popa
sbb
or
mov
test
adc
inc
js
adc
test
pop
rol
push
xorb
add
sub
jmp
mov
bound
mov
orb
dec
or
mov
xor
pop
cli
xchg
mov
sbb
jmp
orl
push
insl
sbb
popaw
pop
lea
pushf
mov
xchg
enter
clc
mov
and
dec
jno
aaa
pop
inc
loopne
inc
add
xor
dec
or
inc
mov
imul
enter
mov
push
sbb
and
test
shl
cmp
loope
aad
ljmp
adc
pop
mov
dec
dec
ret
xchg
pop
add
sbb
cmovb
mov
or
pop
push
xor
cmp
daa
mov
sub
or
shlb
pop
sbb
mov
mov
mov
push
outsl
stc
mov
jnp
call
push
sbb
movsb
xor
inc
adc
lea
jg
cwtl
add
jo
outsl
ja
imul
jno
pop
inc
call
ffreep
xor
mov
rorl
sub
sub
or
inc
arpl
fwait
and
jo
mov
cmp
and
pop
dec
inc
or
push
push
js
dec
aam
mov
xor
add
xor
rcll
and
or
shll
xor
adc
lods
mov
out
mov
loop
inc
inc
xor
je
sub
sub
mov
xchg
test
jle
les
cwtl
je
cmp
add
adc
cmp
movsl
pop
or
xor
jmp
pop
or
in
jbe
mov
dec
sub
push
add
jbe
push
popf
sbb
jne
jno
inc
sahf
jbe
prefetcht0
sbb
es
xchg
inc
xlat
add
and
xor
push
push
shrb
sub
pop
mov
rcll
call
push
nop
add
xchg
xchg
add
cmpb
lock
jmp
inc
inc
lock
push
xchg
cmp
mov
xchg
sbbb
jnp
push
adc
add
inc
jo
mov
repnz
xchg
adc
lods
sub
sti
xor
fprem
push
pop
push
fcoms
adc
sub
pop
push
sub
sbb
fcomp
shrb
inc
ljmp
xchg
adc
sti
in
push
xlat
push
xor
dec
shrl
insb
dec
and
xor
adc
addr16
sbb
jb
push
sbbb
addl
and
divb
es
add
push
push
dec
test
add
sub
test
out
add
mov
imul
add
xchg
mov
cltd
adcl
sbbl
inc
pop
and
xor
dec
dec
dec
dec
add
mov
xchg
test
das
lock
lret
loope
cli
mov
pop
subb
popf
mov
sub
leave
mov
jmp
push
jmp
inc
inc
adc
inc
push
or
fdivrs
out
pop
pop
mov
mov
pop
vandpd
loopne
fcmovnbe
mov
or
or
mov
sbb
data16
data16
mov
movsb
sub
dec
sbb
push
addl
ret
cmc
add
sub
sub
imul
push
sub
roll
sub
mov
xchg
jge
push
test
jecxz
dec
jo
ret
stc
mov
xorb
inc
xor
push
and
pop
pop
add
popa
jne
xchg
mov
pop
dec
lret
xchg
test
fists
lcallw
and
dec
hlt
xor
fnsave
dec
sbb
xchg
orl
pop
lock
cli
sbb
sub
stos
xchg
mov
int
jecxz
pop
cmp
add
adcl
sub
add
mov
out
test
xor
inc
jae
add
adc
jnp
add
adc
ss
xchg
sbb
mov
pop
mov
jo
adc
mov
pop
andl
xchg
jae
sub
mov
jne
or
fdivrl
pop
pop
push
jecxz
jne
fwait
mov
adc
rolb
cmp
cld
scas
push
push
mov
ret
pop
mov
mov
jmp
mov
mov
test
pop
aaa
fcom
sub
and
rcrl
mov
lcall
test
test
lds
inc
mov
xchg
push
push
clc
add
cli
jmp
push
bound
es
pop
repnz
jne
loopne
lret
je
xchg
imul
loopne
les
sub
sbb
sbb
sbb
sub
ror
ret
jmp
lods
ja
push
sahf
mov
cwtl
or
and
add
pushf
in
mov
movsb
dec
jo
add
pusha
icebp
xor
add
xchg
mov
rol
adc
jne
nop
test
adc
call
in
jmp
jo
pop
adc
inc
push
cmpsl
pop
inc
and
call
ja
or
cwtl
adcl
sbb
test
pop
pop
pop
out
enter
cltd
cmp
and
fnstenv
mov
test
mov
mov
ficoml
mov
jno
mov
cltd
jo
and
dec
loope
iret
sub
xchg
inc
inc
push
xorps
in
dec
mov
xchg
lock
adcl
icebp
jbe,pn
mov
xchg
push
add
xchg
in
pop
ret
add
add
sbb
fs
or
or
add
je
test
out
sbb
push
mov
pushf
adc
or
or
sbb
rcrb
dec
dec
sarl
dec
lods
rcrl
js
arpl
inc
fdivp
pusha
push
les
mov
lock
mov
fbstp
pop
push
jle
adc
call
push
push
test
push
mov
dec
push
or
pop
orl
test
add
push
push
pop
cmp
je
push
push
mov
jmp
test
in
shrl
xchg
mov
stc
cmp
shlb
xchg
push
and
cmp
jne
xor
xchg
frstor
xor
pop
inc
sub
call
inc
sbb
inc
push
je
push
adc
loop
ja
repz
add
jb
out
shlb
mov
rolb
cmp
addl
popf
or
dec
sub
lahf
xchg
icebp
inc
mov
adc
or
add
loopne
imul
xor
and
mov
pop
addl
sbb
inc
sub
pop
add
ljmp
out
mov
push
out
xchg
popa
and
clc
push
dec
mov
push
add
dec
jp
fwait
inc
cmp
sub
inc
mov
mov
sub
cmp
rcll
add
dec
jecxz
fcomps
scas
adc
pop
dec
cmp
add
cmpsl
insl
in
imul
lods
xlat
mov
ret
mov
mov
hlt
inc
inc
xor
xchg
mov
ja
mov
addr16
sbbl
add
mov
push
clc
or
pop
inc
stos
cli
adc
jbe
adc
into
or
test
push
jecxz
loopne
push
xchg
ret
lea
rolb
sahf
mov
sbb
fidivl
mov
mov
lcall
lcall
mov
push
imul
add
push
jl
push
cli
imul
or
std
adc
xor
and
push
mov
add
add
orb
dec
jmp
idivb
inc
jnp
add
lods
test
jnp
jnp
mov
fs
cmpsb
jnp
add
dec
inc
jle
fidivrl
cld
push
mov
pop
enter
or
push
or
and
fdivl
push
movl
push
and
inc
push
subb
mov
fnstcw
sbb
push
mov
or
pop
leave
cmp
outsb
insb
enter
movsb
adcb
xchg
xchg
in
leave
xchg
clc
fcoml
loop
or
push
push
add
push
add
pop
xor
inc
mov
in
inc
adc
in
add
rorb
add
sbb
shll
xchg
sar
adc
push
lcall
add
mov
push
ja
mov
fsubs
cmp
jne
sbb
dec
cli
hlt
jne
push
jns
xchg
or
pop
or
jnp
stc
sti
mov
pop
pop
cmpsl
dec
out
adc
lret
sbb
inc
lods
push
cmp
ficoms
ret
xchg
adc
call
xchg
push
sbbb
push
xor
cmc
lods
gs
cmc
nop
sub
loop
dec
or
jne
arpl
pushl
jbe
sub
and
inc
loope
into
cwtl
out
add
push
jno
inc
or
pop
pop
jnp
dec
lock
sarl
nop
jno
push
js
test
xor
int3
insb
rep
arpl
or
ljmp
lahf
movb
jae
adc
nop
pop
pop
xchg
loop
insl
mov
push
pop
outsb
mov
or
sbb
and
xor
jns
mov
sbb
jne
push
push
xor
rorb
xor
push
push
out
into
clc
pop
shll
call
pop
xlat
call
cmpsb
test
bound
push
mov
cli
jnp
pop
rolb
xor
push
adc
and
fcoms
adc
movb
mov
insl
mov
lds
sub
fildll
test
jo
jecxz
or
add
les
test
dec
fs
jnp
cmp
das
adc
out
inc
dec
lcall
pop
ret
ret
add
inc
sub
fimuls
dec
mov
and
clc
ds
fdivp
pop
sbb
dec
push
xor
xor
pop
hlt
test
bound
int3
ret
sub
dec
mov
mov
xor
test
pusha
popa
call
shll
cmp
cmp
mov
cmp
mov
popf
jg
jmp
shr
push
movsb
and
adcb
in
cli
xchg
js
popl
dec
insl
add
dec
xor
mov
stos
xor
dec
jbe
sbb
dec
xor
rorb
pop
sub
jp
cmpsl
push
mov
adc
pop
push
mov
push
std
push
cmp
nop
imul
xchg
add
pop
cld
push
push
pop
push
push
subl
sub
or
xchg
push
in
jmp
mov
dec
adc
mov
sti
or
sbb
in
fdivrp
inc
or
push
push
arpl
lods
adcl
pop
mov
sub
add
fsubrl
adc
dec
mov
test
mov
cmp
mov
lcall
enter
pop
inc
cmp
jns
push
sbb
lods
out
addr16
aaa
pushl
or
cmc
xor
push
fidivs
and
and
nop
jmp
daa
adc
shll
sub
add
add
add
orl
or
sbb
jo
xor
push
mov
adc
mov
adc
inc
and
pop
adc
int3
xor
addb
add
dec
inc
mov
xor
shrl
pmaxsw
dec
mov
sub
call
and
xor
adc
push
lock
lods
imul
mov
rolb
jecxz
xchg
or
test
je
push
push
push
sahf
adc
lods
cmp
enter
cmpl
dec
stos
mov
aas
dec
inc
adc
lcall
xor
inc
xchg
push
sbb
and
xor
insl
sbb
mov
mov
sbb
mov
sub
inc
filds
lea
dec
push
and
roll
into
mov
jmp
xor
and
or
sbb
push
mov
cmp
and
cmp
xchg
movsb
jne
addr16
sub
scas
xchg
inc
je
pop
xchg
pusha
test
xor
dec
mov
lods
je
and
cmp
pushf
dec
pop
sbb
cmp
dec
test
inc
movsb
jle
jne
ljmp
xchg
inc
push
orl
shrl
ret
jae
xchg
daa
cmpb
dec
sbb
test
xor
and
movsl
xor
xchg
xchg
in
cld
cmc
clc
hlt
push
xchg
lret
call
or
push
sub
lods
xchg
jp
fcoms
sub
xor
rclb
cltd
inc
adc
xchg
push
mov
rorb
outsl
int3
mov
dec
sbb
mov
dec
mov
jne
ret
loop
test
add
adc
mov
add
lahf
xor
movl
xorl
push
fadd
nop
inc
jle
add
push
push
add
add
push
push
inc
stos
mov
stos
imul
les
adc
hlt
test
and
sbb
dec
adc
mov
dec
pop
dec
les
dec
cmp
mov
sub
nop
jno
xor
arpl
gs
aaa
hlt
clc
inc
je
inc
push
push
jne
inc
cmp
jne
cmpsl
or
or
gs
rolb
push
ja
dec
xor
call
in
int3
add
push
loope
lods
in
pop
push
and
test
test
movsb
dec
mov
mov
add
push
aam
lea
add
repnz
rcrb
sub
mov
or
mov
inc
mov
adc
mov
mov
pop
fs
stos
ficomps
aaa
or
jecxz
add
psrad
lret
loop
jle
pusha
pop
jmp
sub
push
push
mov
fwait
push
sub
add
pop
xor
add
addr16
jne
iret
add
dec
psraw
xor
sub
xchg
add
xor
jmp
daa
push
mov
xor
sub
mov
xor
push
and
test
shl
jg
mov
push
sub
mov
sub
mov
addl
adc
dec
add
dec
adc
shlb
scas
incl
push
popf
lea
loope
and
js
or
adc
add
xchg
xchg
xor
sub
sbb
jp
jmp
add
cmp
rcr
jle
pop
test
call
mov
movsb
pop
jb
jne
xchg
xchg
xchg
mov
dec
cli
or
pusha
push
enter
je
test
add
jo
mov
cs
fs
sbb
adc
adc
mov
clc
mov
sbb
dec
cmp
sub
xchg
out
dec
jmp
push
nop
dec
or
inc
xchg
jmp
mov
jbe
cltd
xchg
sbb
test
mov
rcll
or
push
xchg
ficomps
jmp
imul
xorb
mov
and
add
pop
sti
jmp
sub
stos
mov
dec
mov
push
or
push
jmp
push
loopne
jb
loopne
loope
jl
adc
mov
cmp
jo
mov
xchg
mov
rclb
jecxz
test
xchg
push
inc
cwtl
and
pop
arpl
ss
pop
xchg
or
sbb
mov
fldt
add
pop
lcall
jle
mov
push
mov
push
push
mov
and
cld
mov
mov
xor
push
sarl
mov
dec
mov
inc
pop
dec
js
pop
mov
mov
sbb
repnz
adc
adc
sbb
push
repnz
push
aaa
add
jnp
add
scas
ret
es
cmp
andb
mov
push
add
mov
pop
lock
hlt
jae
push
mov
cmp
test
dec
cmp
movsl
or
xor
mov
aad
scas
mov
xchg
push
push
sub
movsb
xor
add
or
cmp
or
int
adc
jmp
outsb
hlt
je
pop
int
pop
mov
scas
movsb
add
push
mov
push
js
dec
in
cwtl
xor
inc
jmp
xor
ret
jo
out
or
scas
loopne
rcll
add
xchg
mov
ret
pusha
loope
fadds
icebp
sub
inc
push
xchg
or
rolb
mov
nop
xchg
mov
adc
add
cmp
sbb
push
add
mulb
lcall
ja
jl
push
xchg
mov
mov
fisubl
adc
jbe
fwait
or
push
sub
sub
jmp
mov
pop
or
cmp
mov
jne
jge
or
js
push
add
sub
pop
xchg
dec
test
adc
aas
pop
pop
nop
pop
test
cmpsb
push
clc
ror
inc
jns
test
add
jle
sbb
lcall
sub
add
push
popf
orl
mov
mov
add
add
dec
or
lcall
mov
pop
xor
jmp
pusha
add
add
cmp
inc
outsl
mov
lret
cmp
push
inc
mov
mov
push
in
mov
jp
pop
fucomp
xorl
loopne
js
popl
je
icebp
scas
popf
push
sub
movsb
mov
push
arpl
orl
add
insl
jmp
adc
jo
test
sub
xorl
lahf
adc
jae
xchg
mov
push
jne
push
pop
pushf
loope
cs
mov
inc
add
rclb
inc
add
sub
je
pop
jns
sbb
pop
shlb
add
iret
das
dec
cwtl
ja
lret
movsb
inc
add
ret
mov
sbb
fstpt
shrb
lds
push
cmp
jg
fwait
enter
loopne
mov
mov
mov
xchg
jbe
add
mov
andl
or
xor
cwtl
and
push
mov
mov
sbb
mov
xchg
add
lock
pop
loopne
sbb
dec
popa
lret
push
fbstp
jg
loopne
outsb
pop
jo
leave
aam
mov
cmpsl
mov
mov
data16
push
cltd
loop
adc
ja
inc
push
aaa
adc
push
xchg
sub
xchg
xchg
sti
insb
aas
cmp
out
mov
dec
dec
or
add
in
jnp
xchg
jmp
xchg
insb
xor
jmp
jnp
hlt
adc
arpl
or
add
into
fildl
mov
adc
adc
jmp
pop
pop
add
mov
punpcklbw
or
maxps
cmp
sbb
dec
dec
out
mov
mov
jmp
sub
jne
or
jl
loopne
inc
cmp
mov
and
pop
fcomps
push
ret
iret
jmp
pop
test
inc
mov
or
mov
push
or
sub
mov
mov
cpuid
stc
data16
cmpsl
test
push
mov
add
sahf
out
xchg
and
pop
imul
xchg
stos
mov
rcl
cmpsb
inc
movsb
mov
inc
bound
daa
xchg
xchg
movsb
pop
push
cmp
idivl
push
pop
dec
and
add
loope
mov
outsb
adcl
addl
and
adc
add
sub
cmp
xor
cmp
mov
mov
jno
mov
add
and
sbb
cltd
add
pop
ds
je
fcoms
or
aaa
dec
arpl
and
mov
add
pop
imul
inc
adc
out
pop
imul
pop
xor
sahf
inc
or
or
adc
lods
inc
adc
repnz
lods
lretw
scas
or
pop
cmp
add
lcall
movsl
sti
imul
sub
push
in
rolb
push
mov
sub
out
jle
or
call
jbe
inc
dec
and
push
add
and
or
jo
xchg
sar
xor
mov
and
jbe
pop
push
movsb
lock
aam
inc
lock
repnz
call
pop
or
xorb
push
insl
lcall
sbb
cli
lods
cmp
or
sub
mov
cmc
je
add
xchg
loope
dec
ds
stos
mov
push
inc
adc
movsb
mov
inc
sub
daa
cmp
jl
lods
cs
adc
int3
dec
push
sub
scas
lods
cmc
jne
pop
xor
jne
iret
mov
jno
arpl
repz
jbe
rclb
push
push
filds
push
and
sbb
mov
ljmp
and
push
aaa
int
sbb
cltd
stc
sbb
les
push
je
cli
dec
jno
dec
push
into
jmp
mov
int
and
out
pop
lret
mov
fldl
mov
and
cs
test
lods
and
ret
mov
xchg
push
or
sahf
and
mov
pop
or
enter
adc
das
imul
push
sub
es
les
pop
inc
cmp
jmp
inc
or
and
addl
adc
or
dec
test
jno
inc
inc
mov
jle
movl
mov
dec
xchg
movb
cs
ret
inc
push
or
sbb
test
xor
and
das
fwait
mov
into
and
sahf
push
mov
pop
adcl
jno
xor
mov
scas
je
xor
mov
sbb
std
and
or
inc
inc
orb
ja
adc
fadds
adc
or
xchg
jge
dec
pusha
mov
je
addl
icebp
clc
sub
and
das
jbe
or
sbb
fcoms
aaa
or
jge
mov
and
add
push
movsb
cmovl
xor
adc
fisttpll
adc
clc
cmp
push
xor
mov
test
into
pop
je
shr
push
pop
push
cmp
adc
xchg
movsb
xor
daa
adc
addb
mov
shll
mov
andl
loopne
cltd
shrb
sbb
cmp
cmp
shlb
cmp
sub
add
or
in
mov
pop
pop
adc
and
and
push
inc
aas
popf
inc
sub
mov
add
pop
lea
jne
imul
dec
dec
push
cmpl
mov
lcall
fisubrl
adc
jg
ret
xchg
int
lds
jns
movsl
and
in
leave
sbb
andl
xor
popf
mov
and
iret
mov
xor
sbb
push
lret
pop
inc
jo
add
pop
pop
inc
fs
dec
cmpsb
mov
push
cmp
push
sbb
mov
test
xlat
xchg
test
mov
dec
and
ss
lds
adc
gs
or
inc
adc
ds
insb
imul
frstor
xor
sbb
js
add
aaa
push
jmp
mov
leave
pop
push
jae
xor
pusha
fiaddl
push
or
xor
add
fmul
fcoml
sbb
sbb
in
inc
sbb
push
orb
pop
mov
scas
inc
cmpsb
pop
leave
arpl
pop
add
mov
int3
push
jl
cmp
dec
and
or
lods
imul
xor
lret
or
cmp
add
add
popf
mov
mov
push
xchg
and
add
xor
adc
and
jle
das
and
dec
clc
add
adc
enter
mov
cli
lea
cmp
and
stc
and
aam
pop
adc
subl
mov
or
mov
mov
push
xor
sti
push
pop
cwtl
jmp
roll
pop
mov
dec
jp
icebp
int3
adc
xlat
imul
jl
notb
loope
pop
jl
xor
inc
incl
int3
or
xor
add
das
stos
adc
js
shrb
cmc
adc
push
loope
mov
lea
pop
rorl
out
sbb
push
std
and
lods
mov
jp
add
push
scas
cwtl
jne
add
dec
cmp
push
dec
mov
aam
out
or
hlt
xor
lret
mov
mov
call
shr
fs
and
or
xor
sub
ljmp
fadds
mov
push
jg
orl
fidivs
rolb
xchg
sub
mov
test
pop
fcompl
adc
orl
shll
daa
out
data16
ret
xchg
mov
sub
xor
push
call
add
sar
inc
nop
dec
push
cmp
xor
jmp
inc
hlt
push
pop
cmp
jle
repnz
push
stos
sub
cwtl
push
clc
ret
push
jmp
adc
or
adc
mov
das
xchg
sbb
add
add
dec
notl
adc
add
pop
xchg
rolb
popa
pop
nop
lock
add
and
jo
or
push
pushf
gs
arpl
inc
inc
sbb
or
jmp
xor
jle
push
out
andb
adc
testb
data16
add
orl
add
fdivr
mov
fcomp
xchg
dec
rolb
mov
data16
or
sbb
add
add
lds
xchg
shll
adcb
sbb
mov
adc
adc
clc
push
jle
push
pop
sbb
inc
scas
cs
add
pshufw
or
mov
dec
xchg
jg
scas
mov
sub
jo
or
adc
adc
outsl
rcll
adc
pop
pop
fdivrs
dec
or
es
xor
je
xchg
add
cmp
jne
loope
lods
jbe
jle
or
fwait
out
sti
les
sahf
xor
loop
jne
ss
sub
sub
dec
jle
incl
fisttps
mov
ds
repz
add
and
or
and
push
jp
mov
jnp
test
in
data16
adc
mov
idivl
sbb
and
pop
andl
inc
push
shrb
mov
and
fisttpll
out
orl
and
gs
mov
cmp
sub
imul
jno
mov
mov
push
push
fnstenv
and
ss
cmp
daa
sbb
push
insb
js
inc
loope
test
push
sbb
sbb
insl
imul
ss
xor
into
xchg
xchg
cmp
sarb
jl
and
adc
mov
imul
sbb
out
sarb
mov
lret
mov
or
adc
rclb
xor
addb
shlb
pop
pop
xor
push
xor
xor
push
push
cld
adcb
dec
mov
rcrb
addb
ret
mov
fcoml
sahf
leave
and
push
add
movb
inc
test
aam
add
mov
add
and
add
popf
xchg
dec
inc
mov
cmp
je
cmp
iret
mov
or
cmpsb
gs
add
and
sti
dec
jp
push
not
push
add
add
jbe
andb
add
aaa
hlt
add
out
or
xchg
hlt
and
sbb
andl
adc
aas
rolb
and
inc
push
aas
adc
das
out
test
jns
mov
xchg
jl
add
xorl
inc
dec
clc
xor
jns
enter
and
mov
push
cmp
aaa
ror
es
cmp
fbstp
adc
pop
xor
adcb
mov
cmpl
insb
adc
enter
add
je
push
mov
enter
mov
cmp
add
adc
adc
and
sub
dec
pop
pop
rorb
pop
incb
loopne
scas
xor
push
rolb
insl
xor
test
sahf
subl
mov
addb
ds
daa
jae
add
adc
rcrl
lcall
daa
jp
imul
pop
mov
dec
xor
sub
fimull
xor
stc
inc
dec
ret
push
xor
call
mov
pop
fmull
pop
int
add
scas
push
orl
mov
mov
sub
sahf
rcrl
pop
fwait
mov
mov
xor
pop
push
jle
mov
dec
xor
xor
xchg
jno
inc
push
jne
test
push
xchg
ret
add
jns
mov
sbb
subb
loop
jmp
rcll
inc
iret
jo
or
lock
ret
js,pt
push
ret
inc
bound
in
test
and
imul
dec
pop
mov
fcoml
jnp
sub
cwtl
sub
idivb
sbb
test
je
push
shrl
jmp
pop
test
out
sub
adc
pop
test
shll
cmovle
lahf
insb
mov
addb
mov
xchg
outsb
std
js
xor
jbe
sahf
mov
add
test
sarb
push
adc
popf
pushf
sbb
test
add
sub
pusha
mov
in
pop
sbb
mov
andb
xor
add
or
add
mov
xor
test
add
mov
popa
fstp
xor
fidivs
pop
xor
pop
cmp
stos
xor
ljmp
test
aas
push
into
inc
add
ds
and
cmp
adc
inc
sbb
sub
mov
mov
test
add
push
imul
adc
rolb
lcall
push
push
add
xor
push
out
dec
call
sub
daa
add
dec
add
or
push
cmpsl
mov
sbb
testb
loopne
xchg
and
orb
mov
add
and
aad
inc
adc
mov
dec
cwtl
shlb
cmp
xchg
insl
cmp
xor
xor
inc
add
cmp
out
js
mov
cmpl
rcrl
ljmp
fimull
insb
xchg
add
mov
rclb
sahf
sub
push
xchg
jbe
das
mov
call
xchg
dec
das
dec
pusha
add
pusha
daa
fisubl
cmpsl
or
sbb
cmp
sub
push
out
push
repnz
js
testl
mov
imul
addr16
daa
mov
loop
lods
out
pop
mov
push
insb
mov
fwait
sbb
inc
push
je
sub
je
dec
xchg
fisubrl
push
cmp
rcl
enter
add
loopne
push
jp
push
adc
xchg
xchg
fdivl
in
cmp
xor
lods
movsb
push
push
cmp
dec
insl
pop
sahf
jmp
push
mov
iret
push
icebp
or
push
xchg
cmpsl
xchg
mov
in
daa
jno
cmp
and
cmpl
xchg
or
mov
mov
dec
pusha
and
xorb
push
or
sbb
loop
sbb
sbb
shrb
cmp
cmpsb
ds
arpl
dec
cmp
fs
je
jbe
or
out
fidivs
scas
dec
inc
les
out
cmpsl
or
stos
rolb
add
sti
xor
cmp
mov
fnstcw
into
add
mov
out
inc
xchg
push
or
lcall
add
mov
mov
test
or
orb
dec
xchg
add
popf
rcll
mov
cmp
ja
fsubl
push
sub
je
push
jo,pt
add
jne
jne
cmc
test
dec
push
adc
push
xchg
pop
cmp
imul
inc
pop
jmp
sbb
imul
dec
fisubs
add
mov
add
jae
adc
cmp
push
sbb
mov
push
pop
das
jmp
int
fmuls
loopne
mov
or
add
and
sub
pop
loope
in
subb
push
xor
add
adc
cmpsl
and
jbe
push
sbb
pop
loope
xchg
loope
sbb
nop
and
pop
add
dec
push
inc
sub
push
inc
xor
xor
cwtl
and
and
out
dec
addr16
dec
xchg
rorl
movsb
addl
push
mov
mov
clc
dec
lret
adc
adc
pop
insl
or
mov
aam
dec
or
cmp
push
or
jne
in
insb
mov
jo
or
imul
adc
add
adc
jnp
arpl
andl
mov
or
sub
inc
lret
or
leave
sbb
or
mov
and
xor
add
add
imul
adc
sbb
and
sbb
bound
std
push
add
je
cmpsb
sub
mov
push
pop
push
jbe
bound
rorl
or
nop
ja
faddl
lock
add
inc
adcl
cwtl
xor
out
adc
rclb
pusha
xor
inc
jo
add
sbb
das
in
push
adc
int
fcmovnbe
add
xchg
adc
adc
fstl
pop
icebp
das
addr16
jge
shl
loop
jo
pusha
shll
loopne
nop
xchg
sbb
jne
cmp
gs
or
sbb
mov
xor
sbb
stos
push
shl
cmp
push
fnstsw
jl
mov
test
and
or
sbb
pop
mov
in
dec
inc
fiadds
pop
nop
imul
inc
sbb
add
mov
les
fistl
add
cwtl
stc
add
jmp
xor
xor
outsb
and
fwait
cmpl
push
adc
dec
sbb
add
mov
and
pop
and
int
jne
mov
test
pop
inc
pop
add
mov
decl
cmp
mov
decl
movsl
mov
js
test
cmp
adc
push
sbb
popf
xlat
add
jmp
arpl
loopne
shrb
and
add
ret
sahf
sbb
or
and
and
sete
inc
loope
cmp
mov
aas
es
cmp
or
jne
notl
cmp
je
sub
mov
push
mov
fs
hlt
imul
dec
add
adc
sbb
arpl
std
add
cmp
push
and
push
cmp
lea
adcl
sbb
cmc
rcrl
add
and
ret
enter
imul
sbb
push
pop
cmp
pop
jnp
cmp
insb
sub
jl
aam
xor
and
jbe
xor
jle
push
xchg
testl
popf
insl
or
push
nop
or
or
out
adc
mov
lods
cmp
inc
or
sub
push
pop
sub
xchg
shl
adc
icebp
sbb
push
push
push
sbb
shlb
dec
jne
ss
mov
subl
push
das
je
lds
cmp
inc
sub
mov
inc
sub
jo
andl
xchg
or
mov
cmp
inc
mov
ret
inc
mov
xchg
jge
pushf
scas
fbld
cmpsl
xchg
sbb
and
insb
xchg
add
sub
shrd
add
imul
into
cmp
and
cmpsb
fwait
or
push
stos
imul
and
fimull
dec
inc
sbb
inc
movsb
jo
and
inc
mov
jo
mov
lea
movsl
pop
jns
ret
cmpl
mov
push
push
mov
mov
pop
pop
push
adc
push
fsubl
outsl
inc
ret
dec
and
push
loopne
ret
test
mov
mov
ljmp
ficoms
ss
and
loope
aas
inc
repz
dec
popf
orl
pop
push
rcll
lret
xchg
cmp
xor
push
mov
mov
movsl
sbbl
push
int
jge
cmp
test
jae
lret
mov
adc
jmp
dec
popa
test
ficomps
inc
jecxz
je
push
fs
inc
inc
pop
pop
das
fadds
adc
pop
test
loopne
movl
and
sbb
cmpl
insb
pop
push
lods
or
pop
mov
subb
and
nop
dec
je
jg
add
push
push
fsub
xadd
mov
out
mov
add
jns
lds
ds
fwait
shlb
jg
rorb
shrl
sbb
mov
sub
mov
mov
or
push
cwtl
stos
push
mov
adc
push
data16
add
ficoms
data16
hlt
test
sub
sarb
and
or
sbb
rorl
adc
adc
es
cltd
adc
xor
rorb
lret
mov
xchg
dec
sbb
lods
inc
push
push
or
mov
jno
mov
enter
xor
in
pop
cmp
cmp
cmc
mov
rcl
dec
inc
cld
adc
inc
test
jns
outsb
fiadds
les
xchg
push
add
add
mov
push
xchg
mov
adc
jo
rorl
push
push
ds
add
aas
flds
sub
mov
out
scas
test
push
or
out
dec
daa
ja
insb
frstor
add
je
arpl
add
fidivrl
dec
lea
or
jle
or
jp
and
std
stos
insb
push
add
push
lods
dec
ds
into
dec
sarl
jmp
add
lock
dec
adc
outsb
stos
fidivl
inc
je
or
jbe
cmp
icebp
lcall
shlb
scas
lret
ds
sbb
in
or
mov
push
mov
sarb
adc
mov
lods
ja
je
insb
jne
insb
jns
imul
lcall
ficompl
jmp
push
jmp
cmp
outsl
or
xor
je
popa
pop
clc
and
into
mov
enter
sub
or
pop
bound
je
pop
inc
out
lock
jne
mov
sub
das
adc
or
int3
jp
outsb
jnp
nop
dec
and
push
jmp
sub
pop
or
sbb
push
shlb
push
sbb
adc
sahf
gs
negb
nop
into
aaa
fmul
in
mov
pop
test
outsb
sti
outsb
mov
adc
aam
jmp
icebp
push
pop
inc
cmpsl
xchg
pop
xor
sub
mov
sub
mov
adc
test
sbb
xchg
enter
cmovge
inc
mov
push
or
popa
mov
xor
inc
es
inc
jle
add
repz
push
adc
and
test
ja
cli
dec
adc
icebp
xlat
xor
sbb
lods
movsl
mov
dec
sub
or
ljmp
sub
push
lahf
push
push
movsb
push
cld
inc
sbb
pop
cmp
lahf
rol
imul
xor
jl
xor
ss
hlt
ret
jp
fnstsw
or
arpl
pop
adc
test
jne
add
test
xchg
cmp
and
ror
or
adc
xchg
inc
mov
add
adc
dec
inc
cmp
test
mov
xlat
push
mov
mov
or
dec
jnp
fwait
cli
rorb
push
sbb
lret
leave
leave
sbb
pop
dec
dec
clc
sbb
pop
into
xor
aam
popa
adc
leave
jge
loope
mov
pop
pop
jae
cmpl
mov
push
inc
adc
movsl
mov
sbb
jmp
iret
pop
pushl
shlb
hlt
push
rolb
sub
and
pop
cs
push
mov
and
pop
mov
sub
sbb
push
lret
es
les
aam
inc
sub
or
inc
or
popf
and
dec
xchg
xor
adc
sub
rolb
test
or
loop
and
test
fcomps
in
cmp
push
test
cmp
in
xbegin
ss
cmp
and
push
movsb
mov
mov
jno
pop
sbb
lcall
ret
add
ret
jmp
xor
cmp
xor
or
push
inc
or
aas
mov
in
or
mov
sub
js
adc
add
sub
ljmp
inc
dec
xor
cmpsb
add
xor
sub
mov
or
adc
mov
sub
or
push
sarb
push
add
roll
es
imul
dec
sbb
pop
or
xchg
mov
cmpsb
push
pop
cmp
mov
or
cmp
adc
cltd
mov
js
sbb
mov
ret
negb
mov
push
rolb
out
and
js
pusha
pop
pop
dec
or
roll
movsl
or
push
movsl
add
cmp
push
push
aaa
sbb
add
testl
lods
push
shlb
addb
or
rcrl
and
scas
add
inc
pop
adc
cmpsl
inc
stos
push
or
inc
jmp
div
sbb
rolb
or
mov
sub
or
inc
clc
xor
adc
xchg
cmp
cs
add
movsb
add
fldcw
cmp
ret
xchg
cmpsl
push
mov
mov
and
and
or
mov
mov
sub
les
push
adcb
fucom
je
andl
push
shld
inc
add
inc
and
ds
inc
shl
cmp
cmp
adc
dec
mov
or
popa
popf
push
stos
sbb
push
mov
add
xor
or
jmp
sub
xor
push
testl
push
or
lea
cmpb
ret
xchg
push
push
or
sbb
stos
jbe
js
fadds
pop
add
imulb
test
sub
pop
or
into
jns
sub
jbe
pop
jge
dec
push
jle
cmp
and
jp
pop
pop
push
mov
adc
pop
xor
loopne
ljmp
shr
cs
pcmpeqb
mov
and
cmp
add
fwait
cli
and
push
inc
orl
add
or
adc
dec
pushf
cmpsb
xchg
test
xor
dec
cwtl
add
shlb
wrmsr
fdivs
mov
dec
mov
lods
push
out
pop
or
and
jb
ljmp
int
xorb
sub
sub
dec
xor
shll
push
xor
enter
int
cmp
and
lods
inc
hlt
mov
or
inc
xlat
pushf
push
incb
in
paddsw
add
and
cmp
sbb
cmpl
out
push
sbb
or
imul
movb
jo
sbb
outsb
cmp
int3
cmp
push
xchg
lock
sbb
in
dec
pushf
test
pop
test
dec
pop
loopne
int3
dec
jmp
dec
xchg
jmp
add
and
pop
dec
adc
mov
and
inc
jae
inc
test
and
sbb
dec
ss
add
and
fistl
inc
and
arpl
pop
pop
or
or
push
call
test
adc
jecxz
and
and
cmp
ret
mov
aaa
addb
pop
je
push
inc
lods
adc
roll
addr16
add
mov
popa
ret
fnstenv
ds
mov
xchg
add
int
in
insb
adc
fcomps
cs
scas
mov
mov
mov
js
es
mov
inc
pop
pop
push
rcll
ss
jge
out
and
rol
inc
jmp
lret
stos
xor
rclb
sub
adc
and
dec
addr16
inc
mov
into
pop
ss
rclb
lahf
or
outsl
lea
sbb
test
jne
repz
cmpb
mov
mov
adc
shl
pop
or
aad
xchg
shll
dec
push
mov
mov
das
sbb
cmp
sbb
add
or
bound
push
mov
add
ret
or
lods
inc
xchg
or
pop
push
mov
lea
xor
nop
sub
sub
cmpsb
loopne
adc
xchg
or
rcll
xor
add
fists
jb
enter
dec
inc
or
nop
push
xchg
sbb
adc
and
jnp
pop
or
lods
inc
std
leave
sub
adc
xchg
push
adc
inc
sbb
xchg
mov
jo
and
inc
test
sub
push
ljmp
test
jmp
cmp
repz
add
push
cmpsb
ficoms
test
sbbb
in
mov
or
aad
inc
push
xor
movsb
scas
push
push
or
push
dec
or
or
xchg
jl
mov
ja
mov
rcll
rolb
pop
xchg
adc
dec
cmpsl
inc
add
aas
adc
clc
data16
push
mov
push
movsl
dec
mov
cld
and
lock
cmp
mov
ret
jbe
xchg
adc
mov
shl
or
jb
mov
xchg
enter
orb
add
pop
add
mov
shrb
adcl
and
pusha
xchg
sub
ffreep
daa
dec
or
jbe
leave
jo
xchg
leave
aam
nop
adc
addr16
xchg
and
enter
test
cwtl
adc
mov
lock
fs
addr16
sbb
add
enter
mov
lret
rcll
data16
lret
clc
ret
fnstenv
adc
pop
jp
and
jg
inc
jb
es
mov
sbb
sbb
add
imul
scas
or
xchg
xorl
mov
and
cwtl
xchg
adc
nop
sbb
aam
push
xchg
add
js
mov
movsl
test
js
inc
pop
test
and
add
clc
mov
enter
shlb
jb
inc
sbb
cli
ds
jge
and
stos
add
clc
inc
xchg
jmp
sub
xor
inc
pop
xchg
xchg
xor
sbb
sbb
push
je
push
or
testl
addr16
enter
pusha
cmp
pop
add
mov
jl
xchg
jb
mov
add
outsb
add
cs
fiaddl
sub
outsl
cmc
xchg
hlt
dec
data16
das
pop
cld
xor
fs
pop
and
call
test
or
or
jmp
sti
sbbb
add
add
inc
or
mov
sbb
les
sub
cld
and
adc
sbb
inc
mov
jbe
test
punpckhdq
orl
adc
scas
test
adc
sub
cmc
or
sub
test
xor
das
add
or
xchg
add
cltd
movsb
test
mov
pop
and
add
pop
pop
or
cmp
popa
adc
and
jle
mov
xchg
mov
inc
mov
cltd
data16
sbb
add
mov
mov
mov
repnz
leave
push
daa
xchg
in
push
push
push
pusha
sbbb
mov
jl
test
adc
add
sub
test
rol
int
nop
inc
pop
cmpsl
fsts
dec
mov
mov
add
fadds
out
dec
pusha
je
jg
sub
dec
inc
push
or
inc
mov
xor
cmp
mov
push
rolb
in
jo
dec
lret
hlt
out
adc
roll
pop
jp
sub
rcr
jae
jb
add
mov
inc
ror
add
cltd
fcoms
sub
ffree
add
inc
sub
loopne
push
dec
sahf
sbb
int3
fs
jnp
inc
xor
sub
jbe
xchg
ja
sub
push
xor
cli
das
sbb
inc
mov
xor
ret
add
clc
mov
clc
mov
jbe
aas
faddl
mov
push
rorb
xchg
cwtl
mov
adc
rclb
inc
xor
testb
pop
sbb
adc
inc
xchg
ficomps
fwait
cmp
and
mov
jp
jne
push
or
into
lahf
adc
push
push
push
adcl
dec
dec
fstpt
xchg
and
push
adc
loope
andb
pop
and
cmp
pop
mov
mov
in
sbb
sub
out
je
mov
ret
xor
sub
push
ss
mov
sub
or
daa
pusha
mov
xor
repz
call
jmp
and
push
push
lods
push
aas
sbb
sub
push
push
pop
daa
sbb
push
sbb
mov
mov
int3
aas
mov
lea
add
sbb
add
popf
into
pop
add
push
incb
mov
rclb
push
shll
mov
or
shlb
sub
sub
dec
xchg
mov
fcoms
outsb
xor
mov
jb
xchg
cld
jo
pusha
adc
test
mov
neg
sbb
cmp
pop
inc
leave
pusha
or
or
cmpsb
imul
sbb
pop
loop
pop
js
mov
or
scas
pusha
jo
and
loop
mov
push
mov
push
sub
add
push
xchg
pop
mov
in
adc
mov
repnz
mov
xchg
sub
repnz
dec
repz
enter
nop
roll
test
inc
arpl
test
add
push
mov
mov
bound
push
cmp
rorb
xchg
xchg
hlt
push
mov
nop
in
and
push
inc
and
or
push
xor
mov
add
inc
push
cmp
adc
or
je
sub
mov
shl
sbb
adc
popa
aam
lret
cmp
mov
dec
test
jecxz
fld
arpl
je
test
roll
push
sbb
jo
push
sub
pop
je
fldl
mov
push
scas
add
adc
or
inc
inc
imul
inc
pop
bound
sbb
pop
push
rolb
inc
add
in
rorb
loopne
aas
dec
xor
sub
adc
adc
jp
push
out
sbb
xchg
rcll
xchg
mov
cmp
sub
sbb
repz
sbb
push
fisttpl
negb
adc
pop
sub
xor
adc
ds
ss
xchg
addl
adc
mov
pushf
pop
xor
sarl
sub
loopne
xor
push
mov
sub
push
inc
clc
adc
adc
or
and
jmp
dec
sub
pop
add
out
cmpl
mov
repnz
sbb
mov
pop
roll
jno
fistpll
imulb
inc
addr16
ret
add
and
sub
xlat
scas
sbb
push
adc
or
xor
cmpsl
push
xchg
iret
push
movsb
xchg
fnstsw
add
mov
add
add
or
insl
mov
loopne
popa
xchg
js
sub
mov
pusha
pushf
mov
push
pop
dec
inc
test
xlat
pop
ret
movsl
dec
jecxz
pusha
dec
mov
std
pop
fisttpl
in
cmp
pop
or
les
flds
push
xchg
or
outsb
xor
repnz
clc
cli
mov
shlb
push
or
movsl
mov
pusha
mov
mov
push
insb
test
adc
add
cmp
fdivs
mov
mov
movsl
out
rclb
cmp
jp
mov
xchg
subb
add
xorl
sub
inc
fsts
push
add
lcall
mov
aam
es
into
add
jb
pop
lods
stos
mov
shlb
xchg
and
xor
xchg
hlt
je
sbb
mov
hlt
sbbb
pop
jbe
push
mov
sbb
js
push
cmp
mov
adc
lods
lret
and
pop
xlat
mov
pop
outsb
addr16
lret
js
xor
inc
xor
test
mov
and
jl
mov
inc
outsl
dec
adc
jo,pt
cmpsb
fldl
dec
mov
push
push
cmp
imul
xchg
dec
enter
iret
mov
jmp
and
loope
and
call
pusha
mov
rorl
repz
dec
movsb
xor
jg
push
push
push
or
rolb
cmp
rol
mov
idivb
orb
jo
pusha
aaa
mov
ret
xor
and
push
push
add
adc
ret
pop
xchg
sub
pusha
xchg
das
repz
inc
inc
xchg
push
xor
fmuls
test
mov
xor
mov
mov
test
rolb
adc
push
ss
jg
jmp
in
or
sbb
cli
insb
mov
hlt
out
dec
jmp
add
int3
mov
xchg
cld
dec
xor
loopne
int
test
pop
inc
dec
shrb
and
gs
imul
aam
inc
sbb
cmp
lods
or
testb
or
das
jecxz
dec
push
mov
cltd
les
xor
test
jne
sbb
loop
in
jle
adcl
adc
or
cwtl
addb
scas
cmp
and
push
jne
adc
dec
jg
mov
push
lods
inc
pop
cmp
fdivrl
je
rclb
cmp
jae
rorb
adc
scas
in
lahf
sub
jmp
andl
clc
nop
cmc
pop
dec
add
loopne
movsl
shlb
add
mov
add
es
push
add
clc
pushl
mov
sbb
or
add
mov
add
aam
adc
mov
inc
add
mov
and
push
add
mov
jae
push
pop
sub
sbb
lock
cmp
and
or
push
mov
xor
lea
loopne
cmp
fstl
sahf
lcall
jo
push
pop
or
push
movsl
clc
xchg
mov
xor
adc
pop
sbb
add
scas
and
jl
xor
imul
cmp
pop
jne
fdivr
lods
out
callw
inc
test
leave
jne
xchg
addb
test
or
into
inc
lods
xorb
adcl
fdivrp
addl
lds
xchg
fidivs
jp
sbb
cmp
add
push
icebp
cmp
pop
jmp
jnp
mov
inc
adc
fadd
sahf
repz
adc
cmpl
aaa
push
fwait
leave
lea
inc
add
mov
shlb
pop
test
push
and
das
sbb
xor
js
sarl
xor
jg
push
dec
rolb
cmp
push
rdtsc
inc
inc
cmp
jge
ljmp
mov
ljmp
outsb
add
adc
clc
xchg
cmp
pop
inc
call
push
outsb
mov
fisttpll
inc
inc
cmp
jmp
and
cmp
fisubrs
jmp
mov
xchg
push
stc
clc
jmp
and
inc
inc
push
or
insl
outsb
or
lea
cmp
push
addr16
jne
xor
out
xchg
inc
xchg
pop
and
xor
mov
mov
cltd
andb
adc
popa
in
xor
nop
mov
bound
xor
mov
sarb
xor
push
push
push
push
and
xchg
dec
xchg
add
adc
jne
push
add
in
lods
xlat
in
adc
and
jecxz
sbb
cmp
adc
mov
les
inc
pop
icebp
sub
or
add
xor
je
aam
jl
popf
and
andb
fs
inc
orb
mov
jns
fisubrl
pop
stos
mov
push
add
sub
add
gs
sub
push
add
pop
sbb
mov
add
mov
inc
not
pushl
sub
pushf
push
loopne
jne
add
xchg
adcb
lahf
push
pop
push
roll
cwtd
mov
daa
adc
pushf
bound
or
cs
jbe
add
cltd
add
dec
adc
loope
push
or
xor
testl
jne
js
xchg
in
jnp
das
jns
out
lcall
or
es
outsl
add
mov
loop
mov
adc
out
ds
dec
ds
fadd
frstor
sbb
test
loope
call
andl
jnp
popa
arpl
inc
sahf
cmpsb
lret
cmp
dec
ficoml
shrb
data16
cmp
jg
inc
ret
clc
add
inc
clc
jg
inc
jg
and
xchg
dec
daa
pop
daa
mov
cwtl
roll
ljmp
inc
aaa
inc
cwtl
and
and
sub
cmp
jecxz
in
pop
dec
jmp
fmuls
push
jne
dec
fdivr
andb
fbstp
imul
mov
push
dec
mov
inc
mov
cld
add
in
mov
mov
outsb
outsl
mov
sbb
lods
push
jns
lret
xlat
shrb
shll
leave
call
lds
dec
add
mov
test
sbb
and
mov
mov
aam
shlb
fistpll
outsb
popa
jg
lods
cld
push
push
push
sbb
sub
in
movsl
jmp
rol
and
xchg
pop
sbb
dec
xchg
mov
mov
dec
jne
lock
or
je
jo
or
int
pop
pop
jae
push
push
mov
cmpsl
sahf
add
xor
stc
adc
cmc
inc
fmuls
or
nop
jle
pop
sbb
mov
add
push
pop
add
dec
sbb
orl
adc
inc
imul
xchg
pop
sbb
or
dec
test
add
rcll
in
int
sub
je
inc
outsb
je
sub
ret
push
add
xlat
pop
push
jmp
aas
out
loopne
das
adc
in
out
inc
jne
push
sub
cmp
test
rcrl
sbb
mov
or
lods
fmul
imul
add
pop
cmc
test
push
xchg
test
push
add
je
mov
sbb
mov
mov
adc
cmpxchg
shl
add
xor
add
inc
jo
mov
jmp
add
roll
push
mov
inc
dec
dec
add
pusha
push
lods
call
das
push
fistl
sbb
add
jmp
out
sbb
jmp
mov
inc
and
pop
outsb
call
aas
sbb
cmp
js
mov
orl
loop
enter
shr
push
test
pop
or
mov
movsl
dec
repz
rol
xchg
mov
or
push
jnp
jge
push
jmp
imul
and
cwtl
push
mov
cmp
mov
daa
or
or
jmp
adc
fcoms
jb
inc
inc
mov
test
pop
aad
cmp
popa
sbb
mov
xchg
dec
or
insl
insl
addl
popa
xor
sub
xor
mov
pop
mov
or
std
dec
adc
ffreep
mov
test
push
loop
sahf
push
rorl
mov
ret
xlat
ljmp
clc
or
leave
ljmp
lock
sbb
push
gs
push
adcb
and
rcl
or
add
in
ret
sub
sub
push
dec
mov
xor
or
jge
or
mov
out
out
adc
jmp
test
jmp
lods
and
dec
add
daa
pop
xchg
add
adc
mov
fisubrl
in
or
pop
clc
push
fsts
in
or
pop
stos
test
or
nop
or
sbb
iret
and
sbb
add
cmp
cmp
inc
xorb
pop
xlat
outsb
loop
or
and
sub
daa
adc
popa
ret
aaa
push
addr16
add
adc
add
lock
pop
outsb
push
pop
dec
xor
clc
mov
inc
mov
inc
pop
mov
mov
ljmp
lcallw
sub
xchg
push
add
out
jmp
divb
jg
adcl
xor
add
loope
clc
xor
idivl
sbb
mov
sbb
add
mov
into
dec
loopne
or
insl
pop
andb
cwtl
add
rcl
ljmp
movsl
sbb
mov
and
xor
mov
and
mov
and
call
mov
ret
in
out
movsb
movb
sub
outsl
mov
xor
call
push
test
outsl
popf
mov
daa
mov
pop
xchg
and
sub
shr
jle
cld
and
inc
jae
rcrb
rcrb
out
clc
dec
and
gs
and
xor
dec
jae
jb
push
adc
cmp
in
dec
and
xor
jge
push
fldcw
sub
cwtl
iret
xchg
jne
push
pop
or
mov
arpl
push
or
jb
mov
enter
inc
mov
mov
push
or
enter
push
pushf
push
pop
stc
addr16
dec
hlt
fmuls
imul
mov
loop
dec
mov
das
dec
or
lds
sub
nop
fisttpl
shlb
push
sbb
sub
dec
pusha
aad
out
push
notb
daa
inc
ret
jmp
or
mull
or
cmp
popf
add
jg
daa
cli
or
jg
add
js
add
mov
dec
xchg
fnstsw
jge
subb
pop
imul
fidivs
pop
popa
xlat
push
js
fs
xchg
pop
iret
cwtl
cli
sti
xchg
dec
hlt
mov
aad
sti
cld
mov
lahf
adc
pop
cmp
push
das
or
jnp
xchg
nop
test
dec
rcrl
push
inc
mov
add
daa
cmp
xchg
and
stc
mov
or
lock
xor
loopne
cmp
and
sub
sbbb
leave
dec
pop
ljmp
mov
cmpsl
orl
dec
or
shll
mov
mov
pop
test
add
jge
xchg
push
sub
addr16
movsl
rcll
or
addb
inc
add
mov
lods
dec
add
jbe
shl
push
push
aas
repz
dec
int3
daa
and
iret
and
sub
in
dec
sub
mov
cs
shll
sub
mov
sub
xchg
cmp
or
mov
test
mov
sbb
and
jge
jmp
or
push
adc
ja
addb
add
std
ja
mov
inc
jle
in
xor
push
adc
mov
into
jo
or
sbb
push
call
mov
or
bound
and
sbb
test
mov
push
jl
nop
mov
addr16
sub
sbb
addb
push
and
cmpl
inc
and
add
xchg
push
pop
leave
and
sbb
sbb
clc
rcrl
and
pop
cmpl
xchg
and
lcall
push
adc
mov
fbstp
jmp
or
adc
jge
sbb
cmp
jecxz
in
and
arpl
dec
sub
lsl
ljmp
imul
ret
add
mov
dec
loopne
lea
adc
adc
and
std
cmp
out
stos
icebp
jmp
je
xor
repz
stos
cld
stc
stos
js
pusha
mov
xor
mov
adc
push
and
les
inc
in
push
adc
add
xor
rclb
push
cmp
adc
xchg
ret
cmp
add
cwtl
inc
dec
add
add
or
int3
and
out
fs
loope
sbb
cmp
in
pop
repz
or
mov
inc
mov
sbb
bound
add
stos
fcomp
cld
xchg
adc
push
xchg
adc
ret
flds
outsb
push
gs
sbbb
add
inc
les
xchg
leave
ret
add
push
fwait
jno
sbbb
lret
inc
aas
mov
and
in
js
xchg
or
push
add
mov
jb
xchg
notl
push
xchg
test
adc
add
or
and
std
push
sbb
xor
and
clc
cs
std
jge
xchg
testb
pop
sbb
add
sub
xlat
push
sbb
mov
mov
out
dec
jl
fstpl
dec
leave
push
adc
lds
adc
lds
add
es
loopne
js
add
and
fcoms
je
and
push
jecxz
xchg
push
lods
shll
mov
mov
sbb
push
out
aaa
dec
rcll
jae
mov
lods
pop
adc
out
add
cmp
sub
sub
cmp
mov
shlb
imul
pop
clc
daa
or
jecxz
loopne
shr
stc
cmp
mov
mov
pop
xchg
shlb
and
mov
dec
sub
and
inc
adc
xchg
dec
jne
xchg
sub
inc
push
and
inc
fdivrs
cmp
lock
xchg
jp
mov
add
lock
rcll
cmpsl
add
xchg
loopne
sbb
add
addr16
add
outsb
adc
xorl
xor
lods
sub
dec
aam
in
add
push
push
or
sbb
jl
mov
int3
pop
xchg
sbb
decl
cltd
sub
mov
pushf
and
or
dec
adc
enter
dec
pusha
dec
cld
mov
mov
gs
or
pop
pop
push
lock
data16
daa
les
inc
stc
add
int3
sbb
and
cmp
inc
bnd
imul
nop
mov
push
inc
les
push
adc
popf
nop
and
in
push
or
fiadds
sbb
ret
movsb
mov
add
sub
sub
in
sbb
xchg
sbb
inc
xor
push
xlat
jmp
add
dec
mov
push
fisttps
or
pop
push
push
sub
std
sahf
and
cmpb
mov
sbb
mov
orb
and
sti
negl
leave
mov
and
sbb
aaa
pushl
dec
ret
icebp
adc
or
andl
int3
jp
insl
repz
add
add
lahf
mov
in
push
ds
mov
pop
add
adc
push
cmp
mov
ds
adc
stos
push
icebp
sub
lcall
sub
sub
jno
gs
clc
xchg
xor
add
das
inc
or
jge
ret
pusha
add
sub
jl
sub
hlt
xor
or
mov
push
push
or
fisubl
test
cmp
mov
or
movsl
in
enter
push
or
mov
jecxz
jge
jbe
mov
into
js
cmp
push
enter
fsubs
lea
push
cmp
rol
cmp
cmc
sub
mov
mov
jle
out
xchg
test
jl
in
push
pop
data16
mov
jo
fstl
pop
adc
xchg
xchg
cwtl
mov
adc
test
mov
pop
inc
test
mov
rcll
shll
pop
subb
loope
orl
adc
sub
sarl
rcrl
or
xchg
mov
aaa
orl
lock
xor
cmp
mov
loope
in
adc
cs
mov
lcall
test
and
int3
add
ret
push
cwtl
lock
mov
fucomp
mov
mov
sub
fcomps
iret
sbb
rcrl
lea
push
mov
js
pop
out
addr16
adc
inc
js
mov
jl
test
es
xor
and
data16
mov
xchg
push
sarl
adc
and
arpl
loopne
jle
orb
mov
sub
mov
sbb
add
sub
iret
add
es
dec
mov
inc
push
xchg
call
or
ret
push
add
pop
xor
mov
and
xchg
dec
fwait
inc
mov
push
pusha
cmp
sub
aas
pop
insl
cmp
pop
sti
imul
mov
cld
shl
movsb
popf
int
cli
lods
sbb
jnp
xchg
inc
ret
test
out
loopne
or
add
xor
mov
adc
inc
out
dec
fnstcw
and
and
inc
push
dec
mov
xchg
setns
cmpsb
sar
out
clc
sub
inc
in
push
cwtl
and
pop
inc
pop
js
loopne
jmp
cmp
cmpsl
pop
or
int3
or
mov
int
push
lods
sti
sub
fsubr
fldt
adc
scas
movb
sbb
add
add
subb
mov
aam
inc
sbb
loop
mov
or
mov
ljmp
popf
inc
rcrb
push
jmp
or
pop
push
mov
aaa
add
jg
sub
xchg
mov
push
sbbb
inc
cmpsl
cmc
cmp
mov
adc
fildl
mov
out
orb
sbb
call
push
daa
movsb
nop
inc
nop
jbe
jle
jns
sbb
dec
mov
fsts
pop
add
lods
push
test
rolb
lods
xchg
mov
cmp
in
xor
orl
or
mov
adc
sbb
out
add
inc
mov
or
xchg
pop
ds
js
sbb
mov
dec
sti
popf
xchg
inc
aaa
out
push
icebp
enter
sbb
scas
fs
dec
jae
pop
add
xchg
push
fisubrs
nop
adc
stos
sub
arpl
push
or
enter
rorl
xchg
inc
sar
push
jecxz
out
xchg
xlat
or
orb
or
aam
pop
testb
dec
rorl
rcll
pop
push
xor
outsl
jo
rcl
rol
or
adc
adc
ja
mov
adcl
pop
push
pop
lods
add
cs
push
in
mov
sub
movsb
cmp
and
cmpsb
push
xchg
addb
inc
dec
cld
dec
clc
cmp
adc
add
cmp
xchg
xor
pop
cld
pushf
xor
and
or
mov
lock
mov
xor
push
fistps
nop
or
mov
mov
inc
in
bound
adcb
inc
es
mov
andb
in
xchg
adcl
dec
pop
push
jb
loopne
movsb
xor
mov
add
call
and
pop
mov
je
add
cmp
int
arpl
cli
or
mov
adc
and
xor
pushf
and
stos
or
pop
mov
movl
rolb
xor
or
mov
lock
lods
and
pop
or
push
push
cltd
adc
add
xor
pop
push
imul
inc
lods
lods
mov
enter
xlat
imul
adc
adc
push
sbb
xor
xor
in
add
out
out
mov
cmp
fcomp
or
dec
dec
or
testl
sub
push
in
rolb
orb
outsb
lret
imul
add
pop
sbb
inc
pop
mov
enter
pusha
or
jecxz
gs
adc
cmp
mov
cmp
pop
inc
push
icebp
pop
sbb
cmp
cmp
xor
mov
loopne
insb
cwtl
movsb
shrb
pop
push
add
pop
setne
test
pop
pop
add
daa
adc
jge
lock
roll
sub
adc
mov
add
out
mov
jne
mov
les
xor
fucom
shrl
jmp
push
push
push
mov
pop
mov
or
addr16
jne
xor
imul
mov
xlat
mov
or
jle
push
add
testl
call
clc
mov
into
push
pop
or
scas
scas
push
xchg
out
cmp
xor
out
insl
inc
divl
push
mov
nop
imul
iret
imul
mov
xor
imul
cmp
inc
arpl
jno
ljmp
sub
notb
push
mov
or
or
cmp
mov
hlt
or
andl
cmp
push
enter
pop
push
jae
xchg
ja
pushf
mov
cmp
cmp
imul
test
pop
inc
mov
test
shl
cmp
lcall
test
test
xor
push
pusha
lea
enter
ds
sub
pop
jae
inc
and
lock
push
cmp
testl
pop
xchg
push
jo
inc
inc
xor
sbb
dec
push
ds
push
push
loop
and
sub
mov
mov
and
xchg
xor
fldcw
push
test
lret
movsl
sbb
inc
sbb
push
outsl
je
dec
mov
scas
mov
lcall
insb
dec
cmp
out
dec
cs
or
push
adc
pop
sahf
test
inc
or
repnz
adc
cld
dec
mov
lock
and
and
sub
sub
call
jno
in
or
mov
dec
pushf
or
popa
das
dec
js
push
mov
fldt
push
movl
pop
lcall
dec
cmp
adc
push
jge
adc
test
outsb
lods
mov
mov
sub
push
pushf
rolb
pusha
imul
mov
xlat
stos
addl
add
cmpl
loope
je
add
in
or
dec
push
cs
push
jmp
pushf
jmp
jo
inc
sub
fisttpll
jmp
jne
incl
leave
jbe
adc
add
mov
adc
aaa
xlat
dec
xor
nop
add
inc
cmp
enter
mov
je
rorb
mov
into
test
cmp
psubsw
loopne
sbb
stos
mov
inc
xchg
add
push
or
xchg
out
mov
add
push
sub
nop
fbld
xchg
push
ds
push
jo
nop
lds
xor
and
adc
jo
sub
sbbb
lret
or
push
xchg
out
adc
fdivrl
dec
imul
rcrl
push
add
stos
push
push
lea
dec
jl
dec
test
sub
adc
adc
mov
xchg
cmp
sbb
cli
lds
or
mov
test
push
pop
das
add
jb
rclb
lock
sahf
add
push
push
push
inc
or
popa
test
scas
lods
push
or
xor
jno
or
mov
lds
xchg
cmp
add
mov
imul
or
sub
movsb
out
and
int3
inc
orl
adc
stos
out
push
jne
jmp
or
or
pop
insl
sbb
cmp
es
adc
nop
xchg
mov
inc
js
add
int
xchg
loopne
mov
lods
orl
popf
inc
lods
cmp
inc
inc
jnp
push
divb
inc
sbb
inc
push
sub
xor
enter
sbb
dec
dec
daa
adc
aam
iret
mov
pop
lahf
add
pop
push
push
mov
iret
and
ds
pop
pop
sbb
cmp
fld
mov
sahf
mov
out
sbb
ds
cmpl
push
push
outsb
mov
mov
fdivr
sbb
arpl
xchg
lret
sub
mov
mov
pop
pushl
cmc
xchg
push
or
mov
xchg
shlb
adc
mov
sbb
adc
lock
xor
fwait
stos
push
movl
xchg
shrb
or
or
fdivl
and
ret
pop
loope
popf
aad
sbb
jne
and
cmpl
ret
adc
push
mov
sub
sub
mov
pusha
and
dec
les
mov
adc
or
sbb
subb
and
stos
insl
jmp
sub
and
jbe
xchg
sub
add
mov
jnp
cwtl
inc
inc
mov
mov
mov
push
adc
add
test
pop
data16
and
out
adcl
popf
sub
add
mov
push
jp
jmp
lret
icebp
or
mov
jno
and
or
or
sub
test
push
pop
mov
fwait
loop
mov
sub
inc
mov
and
or
xor
inc
sub
popa
insb
sub
ret
sbb
jl
mov
mov
enter
push
add
outsb
and
push
sub
mov
ret
jo
lock
imul
int3
add
ss
or
sub
movsb
sub
test
int3
lret
fadds
inc
sbbb
pop
insb
sub
cs
pop
push
mov
jno
add
sbb
sbb
sub
sub
push
sbb
jo
and
xchg
outsb
sub
test
adc
pushl
cmp
jp
adc
insl
jge
jae
push
sbb
push
and
sbb
or
test
mov
int
xchg
mov
xchg
add
inc
int3
pushf
sub
inc
in
adc
stos
ficoml
out
or
and
lock
dec
xchg
push
inc
ja
and
cli
jle
lahf
mov
add
pop
mov
loopne
push
dec
testl
cmp
popa
ds
andl
mov
test
cmp
sbb
arpl
test
push
push
push
mov
jo
stos
xor
xchg
pop
push
or
inc
and
loope
orb
and
lret
fldt
add
mov
stos
dec
test
pop
fsubs
add
insl
frstor
in
ds
arpl
push
pusha
pop
adc
jb
dec
je
dec
inc
jnp
jge
cwtl
cltd
push
sbb
dec
scas
adc
add
je
sbbb
shld
jbe
ret
les
jg
idivb
or
mov
loopne
mov
stos
gs
dec
cmpsb
and
sarb
loope
push
inc
and
outsl
pop
aad
stos
popa
pushf
movsb
jne
cs
xor
jne
mov
adc
enter
les
mov
out
inc
dec
js
jne
or
call
or
mov
pop
push
movsl
push
dec
sub
xor
mov
add
adc
or
sbb
xor
add
les
pop
sub
inc
xor
sbb
cmp
pusha
xlat
mov
mov
push
test
dec
aad
jae
aam
adc
stos
testb
sub
pop
popf
adcb
sub
mov
testb
pop
mov
inc
sub
daa
call
je
aas
add
pop
fimull
outsb
add
mov
push
xor
jo
and
addr16
jmp
adc
add
and
popa
push
and
xchg
or
pop
imul
push
outsl
movb
xor
popl
cmovb
or
fnstcw
adc
or
cmp
je
ss
jge
imul
mov
or
xchg
pop
dec
jle
adc
and
inc
std
dec
mov
add
or
lock
sbb
out
cmp
scas
and
push
ret
push
fiaddl
dec
test
xchg
push
pop
mov
xchg
inc
sbb
push
pop
xchg
mov
clc
out
or
push
fcmovb
add
push
jle
jl
inc
jo
pop
and
or
lcall
and
jle
or
mov
pop
outsb
cld
das
js
sbbl
jbe
jge
mov
add
mov
xor
and
xchg
cmp
nop
gs
pop
or
fldl
fstps
and
fstpl
insl
imul
add
int3
fisubrl
xor
xchg
les
sub
fsts
push
xchg
aas
imul
loop
pop
dec
aaa
mov
in
pop
inc
and
mov
mov
xor
add
arpl
mov
push
push
sub
aad
ja
daa
fidivs
inc
push
adc
fwait
add
jmp
iret
fidivrl
mov
and
mov
jge
das
inc
adc
inc
dec
inc
add
call
add
dec
pop
sbb
ss
jne
dec
adc
xchg
mov
nop
mov
xchg
insl
lock
adc
ret
mov
roll
jb
jp
jl
inc
or
ss
push
sbb
sub
jne
addb
and
mov
call
loope
adc
xchg
push
mov
xor
test
cmp
push
sbb
sbb
dec
mov
divl
pop
or
je
dec
test
test
or
push
or
ja
push
mov
jmp
inc
jle
mov
mov
fistpl
lds
xor
lea
add
fs
mov
mov
lods
je
ds
push
lods
dec
adcb
xchg
mov
mov
xor
jb
adc
xchg
lret
cs
je
mov
out
cwtl
mov
inc
divl
adc
movsb
jmp
sub
dec
mov
cmp
inc
out
push
mov
jmp
ljmp
ss
sahf
add
es
xchg
cltd
loopne
push
xchg
lods
cmp
mov
fwait
sub
addr16
movl
stos
mov
push
lcall
push
dec
sahf
arpl
adc
sarb
sub
or
jnp
and
push
fstl
adc
and
int3
loope
fdivrs
cmpsb
add
fs
xchg
jnp
mov
hlt
lea
fistpll
add
jp
xor
push
xchg
push
test
xadd
pop
pop
imul
imulb
mov
pop
arpl
xchg
pop
dec
fldt
insb
xor
jbe
js
das
sahf
push
scas
pop
out
ret
push
push
jne
push
loop
ds
enter
pop
pop
push
xlat
or
je
popa
call
fucomp
add
neg
xchg
push
dec
add
lods
fildll
fsubs
add
cwtl
in
or
inc
mov
cmpsl
xor
shlb
cmp
sbb
add
mov
adc
iret
mov
das
bound
mov
pusha
or
or
jmp
pop
mov
add
jge
scas
ljmp
adc
test
ljmp
nop
inc
or
adc
cs
or
adc
sbb
mov
shlb
imul
cmp
ss
mov
or
mov
inc
enter
inc
js
inc
fcoms
inc
lock
stc
fnstsw
scas
mov
inc
lret
cmc
push
aam
lock
or
fdivrs
push
add
push
out
or
push
outsb
mov
mov
fidivl
add
mov
cltd
hlt
dec
jne
addb
push
es
mov
jo
push
push
mov
call
or
ja
sub
and
add
or
test
bndldx
mov
and
adc
je
je
dec
cmc
or
add
js
sub
hlt
jecxz
imul
pop
push
cmp
push
addl
xchg
outsl
lahf
jne
ret
imul
mov
and
fldl
sub
aam
xor
test
xor
dec
xor
push
mov
jmp
lods
rclb
cmp
pop
imul
cld
mov
daa
pusha
xchg
mov
jo
sub
jo
or
mov
imul
sbb
jns
jbe
cmp
loop
push
xor
pop
mov
inc
cld
sub
adcl
andb
push
dec
xor
dec
jo
adc
and
push
js
int3
xchg
repz
mov
and
xchg
andb
inc
pop
pusha
test
loopne
or
mov
and
mov
aaa
incl
add
andb
out
cmp
mov
inc
add
shl
xchg
in
lret
mov
add
cmp
sbb
popf
lods
dec
or
lcall
ret
push
sub
inc
add
or
loop
sbb
insb
push
das
dec
sbb
fcmovnb
add
sbb
mov
sub
inc
mov
and
cpuid
xor
dec
in
xchg
mov
das
xchg
or
das
adc
push
fsubr
mov
lea
and
cmp
jmp
sbb
fstps
int3
mov
xchg
cwtl
cmp
jbe
cmp
mov
add
dec
inc
adc
mov
sbb
jecxz
shll
dec
lock
dec
adc
loopne
mov
pop
rcl
adc
arpl
cmpsl
out
adc
nop
rcr
push
sub
add
pusha
imul
dec
push
add
jg
or
push
fisttpll
cmp
jmp
dec
inc
lea
sbb
rcrb
sbb
pop
and
jne
sbb
jp
por
inc
adc
and
pop
lods
jo
loop
jo
push
inc
popf
push
jns
mov
jp
jg
xchg
xchg
pop
popf
push
cmpsl
jmp
inc
add
rolb
add
test
mov
adc
xchg
das
adc
inc
or
nop
mov
push
mov
ret
call
dec
subl
ret
jg
mov
lcall
mov
jne
sahf
mov
cmp
lock
fmul
mov
sbb
adc
dec
arpl
add
call
cmp
fs
jae
and
cld
jmp
sub
clc
cmp
test
jno
push
push
mov
xor
lea
jecxz
push
rolb
lahf
pusha
cld
adc
sbbl
js
sbb
jmp
aam
test
sub
adc
or
gs
sbb
rclb
sbb
mov
daa
sbb
jne
or
xchg
pusha
dec
jb
hlt
or
mov
push
inc
jne
dec
xchg
test
add
pop
scas
movsb
stos
sub
push
or
je
les
pusha
mov
sub
adc
dec
add
dec
push
addb
push
fs
and
std
lea
mov
mov
int
jns
and
aad
push
bound
psadbw
orb
xchg
or
fiaddl
lea
add
rorb
lret
fadd
inc
cmp
ficomps
into
popf
sbb
and
push
dec
dec
addl
stc
dec
pop
adc
mov
mov
or
inc
pop
pop
pop
xchg
lock
call
sub
mov
pop
call
rol
xchg
or
scas
jno
xchg
add
popf
or
pop
loop
and
push
mov
shl
inc
xchg
xchg
test
pusha
jg
call
imul
iret
cli
mov
add
push
shlb
or
mov
test
add
sbb
js
xchg
push
and
mov
xchg
cmpb
mov
inc
push
cmp
push
cmp
aad
mulb
pop
xor
jl
out
jbe
pop
xchg
sbb
sbb
lock
iret
sbb
pusha
and
mov
movsb
sub
cmc
mov
and
push
jmp
or
xchg
adc
push
in
push
ja
jmp
push
or
mov
xchg
dec
loopne
imul
push
mov
int
push
push
roll
es
pop
pop
add
nop
test
xchg
pop
int3
xor
sub
roll
sub
inc
inc
pushf
rolb
sub
sbb
push
mov
aas
fsubr
rcll
jb
test
enter
mov
in
cmp
dec
fsubrs
mov
in
bound
cmpb
mov
mov
pop
imul
in
rolb
xor
orl
aas
adc
and
sub
dec
inc
fsubp
shl
in
sbb
aas
in
daa
and
dec
imul
inc
test
sub
cmp
add
sbb
jg
mov
andb
movsl
adc
jg
pop
push
cld
jle
test
or
pop
bound
lock
decb
dec
movsb
lahf
in
outsl
test
mov
adc
ss
fstps
mov
and
ja
cmpl
mov
sbb
sbb
dec
dec
sarl
inc
lds
cwtl
cmp
in
in
in
inc
push
in
in
in
adc
mov
in
aad
mov
push
shlb
fnsave
mov
and
mov
js
xchg
lock
fcomps
inc
mov
pop
inc
cmp
xor
nop
inc
fisttps
lcall
mov
xor
shll
sbb
cmp
jo
add
pop
xchg
xchg
mov
xor
fimuls
in
nop
sbbl
in
sub
rorb
lahf
cmp
ficomps
pop
sub
fsubrl
pop
mov
dec
dec
and
test
push
dec
mov
faddp
mov
push
fdivrs
call
fbld
cmp
mov
cmp
inc
sub
dec
inc
dec
pop
in
mov
pop
leave
mov
push
pushf
nop
out
rcrb
pop
xor
sub
add
scas
mov
aam
cmp
mov
sahf
iret
lock
mov
fisttps
jg
jmp
scas
inc
dec
xchg
and
call
mov
mov
rclb
je
dec
adc
xchg
fnstenv
in
adc
pop
cltd
mov
xor
or
aas
dec
fimull
pop
loopne
inc
push
in
sub
mov
in
in
sarb
sbb
adc
std
call
lahf
js
insb
ret
adc
inc
jo
xchg
mov
mov
rcl
ret
fbstp
mov
lahf
adc
cmp
jge
adc
mov
stc
mov
mov
mov
outsl
mov
fcompl
sbb
aam
pandn
lds
loope
xlat
rorb
jo
scas
enter
cmp
inc
out
mov
cwtl
mov
out
pop
dec
es
push
call
adc
inc
mov
xchg
push
push
pop
iret
pop
nop
push
aad
push
mov
xchg
mov
sbbb
or
loope
das
sub
and
mov
aad
mov
imul
adc
xchg
sbb
sbbl
pusha
leave
in
push
lock
in
sub
and
sbb
in
push
dec
pop
jo
push
in
test
lods
rolb
mov
or
clc
outsl
jb
add
add
and
pop
jb
pop
dec
pusha
je
pop
jb
pushf
mov
xor
sbb
inc
cs
inc
jl
es
nop
test
stc
int3
test
movsb
push
ljmp
jb
push
es
mov
sbb
das
aas
aas
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
push
jo
stc
sbb
daa
insb
sub
xchg
inc
lcall
mov
and
jg
sti
test
cmp
or
xchg
pop
cltd
xor
iret
pop
call
bound
into
lahf
scas
aam
xchg
pop
fadds
or
outsl
mov
and
sbb
xchg
fmul
add
adcb
dec
add
lds
xlat
js
or
arpl
sahf
add
mov
bound
icebp
leave
inc
pop
je
and
outsl
fiaddl
xor
push
adc
xchg
xor
pop
fs
inc
call
cmp
xchg
push
push
mov
test
mov
inc
lahf
iret
add
push
loope
or
shlb
ss
rcll
or
aam
lahf
jae
cmp
xor
pop
mov
push
rorb
aas
cs
sbb
jge
mov
xor
notl
in
inc
subb
andl
inc
mov
mov
enter
mov
dec
fisubl
add
outsl
aas
out
push
clc
fwait
xor
push
and
pushf
aas
dec
mov
adc
mov
rcll
xchg
push
sub
insl
xor
mov
mov
dec
adc
out
push
sub
pop
arpl
flds
push
popf
inc
orb
js
into
jbe
popa
dec
in
jnp
mov
or
das
popa
or
insb
enter
sbb
xchg
jg
dec
mov
outsl
push
incl
lret
mov
inc
sub
dec
clc
ds
insb
popf
inc
and
inc
test
mov
imulb
xchg
les
ljmp
adc
sahf
pop
lock
movsb
add
js
imul
pop
jnp
jne
mov
xor
mov
or
andb
bound
pop
insb
aam
popa
insl
orb
lahf
rcl
push
ljmp
lcall
push
sti
sub
test
inc
nop
aas
lret
add
push
push
and
loopne
fisttps
mov
aas
fistps
fisubrs
sub
out
mov
jmp
and
fistpll
mov
jbe
and
lock
xchg
mov
adc
mov
cmpl
add
inc
insb
aad
pusha
pop
pop
adc
mov
addr16
insb
clc
mov
inc
daa
mov
mov
lods
add
cmp
mov
ss
sub
push
add
aas
xchg
dec
mov
mov
orb
movsl
pop
push
jg
aas
pop
sbb
push
pop
dec
inc
in
push
lahf
xchg
testb
sub
mov
pusha
cmpsb
aas
mov
sub
cmpsb
pop
fdivrs
cmp
call
js
mov
and
jnp
leave
enter
sar
sub
adc
call
rcrb
in
and
sti
inc
dec
sti
loope
cmp
sub
dec
cld
in
nop
xchg
adc
in
sub
fs
adc
sbb
scas
dec
cmpsb
sbb
nop
adc
test
sub
dec
subb
cmpb
inc
pop
push
xchg
test
sbb
in
in
data16
dec
add
mov
add
les
ffreep
rcrl
lock
cmp
add
nop
add
sbb
sub
push
movsb
loopne
mov
rcrl
pop
add
xchg
aaa
pop
in
push
rcrb
or
dec
add
cmpsl
test
sarb
test
fmuls
fsubr
leave
hlt
adc
push
push
sbb
or
or
pop
repz
stos
andl
sarb
mov
and
cmp
mov
and
mov
jno
xor
dec
pop
mov
xor
mov
push
ret
lock
inc
aas
push
nop
mov
xor
aas
xor
lock
and
bswap
adc
aam
std
rorb
pop
push
or
jg
adc
cmp
mov
pop
mov
cmp
sub
or
inc
and
mov
ds
sub
das
in
cmp
lds
mov
or
adc
xor
aam
sbb
inc
mov
xor
iret
cwtl
mov
mov
inc
mov
pop
aas
out
lret
leave
mov
push
mov
add
xchg
xchg
imul
mov
out
out
lock
xchg
loop
mov
mov
pop
push
and
fistps
outsl
sti
pop
insl
pop
adc
stos
movsb
popa
pop
in
andnps
rcll
shlb
clc
jg
cmp
sub
test
mov
or
fstpt
aas
mov
nop
les
ja
pop
pop
jle
mov
outsl
add
fbstp
mov
mov
cmp
mov
push
movsb
jne
xchg
arpl
sbbl
adc
in
incl
adc
adc
insb
pushl
mov
mov
mov
test
pop
rolb
pusha
jecxz
mov
shlb
call
es
adc
nop
nop
xchg
xchg
nop
fbld
mov
adc
push
mov
fcmovnbe
call
inc
roll
mov
jle
lock
mov
mov
sarl
aas
add
sub
push
imul
dec
js
test
push
dec
in
add
dec
jg
mov
sub
push
or
pop
mov
subb
push
jno
mov
mov
pusha
lods
push
fidivl
add
mov
sub
or
push
pop
fcoms
por
push
xchg
aas
ds
mov
call
vmovups
int3
xchg
add
cmp
aas
jo
sysexit
test
insl
cwtl
aas
movsb
leave
dec
sbb
pop
scas
mov
nop
pop
shr
cmp
movsl
inc
es
and
mov
or
adc
inc
push
ret
sub
fidivrl
fadds
dec
loopne
push
call
dec
pop
js
dec
add
jb
iret
mov
sub
jecxz
mov
sbbb
out
mov
test
adc
lahf
jo
push
jns
or
jg
mov
cmp
sub
xchg
mov
jecxz
pop
pop
fldl
pop
or
fisubs
cmp
or
pop
mov
xor
dec
das
loopne
pop
xor
or
call
fwait
sbb
loopne
lock
inc
movsb
adc
push
js
push
push
pop
push
add
ret
popf
lcall
pop
and
push
mov
xor
shrl
mov
mov
fistpll
dec
in
in
in
xchg
mov
inc
in
flds
dec
mov
mov
rolb
pusha
ror
fwait
call
pop
add
push
aas
pop
fadds
mov
and
dec
ljmp
call
andb
aas
repnz
add
xchg
sub
push
call
ret
loope
add
pop
pop
mov
lds
adc
and
xchg
xchg
xchg
mov
movsb
jge
js
fucomip
in
ss
enter
mov
insb
push
int3
push
mov
mov
cmp
jo
enter
dec
or
and
dec
adc
loopne
fwait
jg
mov
mov
arpl
push
or
push
popl
mov
lock
lock
or
and
sbb
push
dec
mov
and
add
test
and
or
add
or
mov
fimuls
sub
pop
jo
jmp
dec
cmpsl
enter
cmp
bound
leave
ja
push
ret
daa
push
nop
mov
dec
or
aas
xor
mov
adc
dec
pop
pop
enter
adc
pop
int3
out
popa
sbb
loopne
sbb
out
push
add
pop
lcall
das
pop
imul
sub
int3
iret
mov
pop
mov
int3
jg
out
ss
int3
jp
fsubl
xor
or
inc
pop
scas
inc
mov
jg
int
loopne
mov
dec
into
daa
pop
test
pop
mov
or
sub
cwtl
dec
add
test
and
dec
daa
adc
cmp
nop
sub
xchg
mov
push
xchg
imul
insb
or
daa
pop
call
inc
cmp
testb
daa
adc
inc
sar
cld
push
adc
adc
ret
std
bound
rcl
cmpsb
mov
mov
daa
repnz
and
ja
shll
push
pop
enter
sub
daa
inc
andb
pop
push
xchg
into
rclb
or
add
jb
lahf
jo
cwtl
rorb
xchg
xchg
ja
bound
iret
and
shll
inc
scas
call
in
push
repnz
or
fcom
or
aam
and
aam
push
cmp
dec
pusha
stos
dec
push
ja
aam
mov
xchg
add
fcom
daa
add
sub
xchg
pop
insl
push
push
daa
js
dec
scas
ljmp
insl
xchg
pushf
sbb
dec
scas
stos
stos
call
data16
and
cmp
lahf
push
xor
inc
fsubrs
in
out
pusha
inc
pop
dec
mov
xchg
cmp
mov
lock
xchg
std
iret
jne
fistps
out
and
daa
pusha
fnstenv
jg
jg
lret
mov
daa
insl
insb
addl
lock
and
fisubrl
aaa
sbb
movsb
shlb
nop
sub
xchg
push
loop
adc
enter
sbb
cwtl
push
sub
sbb
aaa
mov
movsb
lea
iret
in
mov
add
adc
js
sub
push
sbb
out
bound
pop
dec
fidivrs
daa
jne
fcmovb
xchg
daa
rcr
clc
movsl
ss
pop
push
ljmp
enter
das
dec
and
arpl
jo
in
cwtl
lcall
rcr
xchg
dec
repnz
inc
loopne
and
daa
test
rclb
lds
mov
cmpsl
and
sub
or
movsb
and
shlb
pop
adc
xlat
push
dec
loope
jecxz
xchg
outsl
test
popf
je
pop
out
mov
subb
in
and
cmp
inc
pop
scas
mov
cmp
inc
adc
lods
insb
pushf
xchg
push
inc
dec
adc
leave
dec
rolb
jge
xchg
mov
stc
data16
xor
insl
ficompl
ja
rorb
jb
mov
mov
enter
mov
fwait
cwtl
rclb
jne
dec
sub
nop
in
push
sbb
push
cmpsl
mov
lcall
lea
sub
out
mov
cwtl
lock
call
lahf
mov
mov
or
jmp
pop
dec
das
push
jmp
fdivs
jl
pminub
push
add
push
cld
or
push
mov
inc
push
bound
adc
jnp
add
pop
aam
push
ret
stos
out
sahf
out
nop
test
repz
add
enter
cmp
mov
nop
xchg
cmp
imul
push
add
add
jle
sahf
inc
push
xor
out
fidivrs
push
xor
inc
dec
push
sahf
out
sahf
bound
nop
pushf
mov
sahf
out
enter
add
sahf
out
push
cmp
pusha
jnp
out
jb
cwtl
movsb
adc
iret
repz
add
out
or
idivl
cmp
aam
scas
lahf
out
pop
add
and
inc
push
data16
cmp
imul
push
repz
add
add
or
pop
jle
mov
outsb
push
inc
xor
out
idivl
hlt
push
incb
int3
sahf
out
sahf
mov
outsb
jns
out
pop
dec
cmp
sbb
xor
out
add
add
cmp
mov
mov
push
sahf
ja
cmp
pop
ss
push
sub
repz
cli
imul
fadd
repz
repz
mov
out
lcall
or
repz
add
mul
sarb
cmp
mov
inc
out
iret
repz
and
data16
jnp
iret
clc
cmc
or
ljmp
iret
repz
lcall
repz
inc
cmp
out
lcall
mov
scas
xchg
jle
pop
dec
jl
out
cmp
sbb
repz
not
mov
lock
repz
shll
push
push
iret
xchg
sahf
cmpsl
stc
cmp
add
adc
inc
jns
out
push
data16
lcall
mov
or
repz
repz
adc
repz
adc
pop
adc
movsb
cmp
jnp
add
add
cmpsl
andb
icebp
sar
push
lcall
ljmp
out
sahf
xor
dec
pop
insb
test
out
xchg
stos
mov
int
lock
adc
xor
repz
dec
inc
xor
jge
testl
push
loop
sahf
out
sarb
sahf
sahf
out
js
xchg
push
decb
out
scas
insb
push
pop
push
dec
cmp
sbb
repz
cli
cli
call
iret
repz
iret
repz
xchg
push
inc
ss
clc
stc
in
jns
out
fmul
shlb
test
pop
int
jns
inc
xor
push
cli
clc
call
fmul
pop
push
push
jbe
repz
mov
sahf
out
ds
sub
dec
pop
jns
out
push
in
pop
ret
out
dec
adc
loop
lock
add
cld
or
mov
push
idivb
cmpsl
stc
add
adc
xor
jns
out
pop
js
cwtl
int
jns
scas
enter
or
iret
repz
xor
fs
repz
pushf
lods
shlb
clc
or
sahf
out
sahf
xor
data16
jge
out
pushf
mov
out
lcall
decb
sahf
out
sahf
inc
es
xchg
mov
mov
push
mov
mov
add
add
int
gs
add
cmp
repz
enter
push
repnz
jbe
push
sahf
push
mov
fiaddl
or
and
lahf
out
cmpsb
rolb
dec
cmp
xor
insb
movq
mov
jbe
inc
inc
add
shl
test
mov
pop
movsb
sbb
pusha
push
pop
xchg
aas
hlt
mov
es
push
mov
xor
iret
repz
scas
scas
mov
rcrl
jmp
add
out
adc
sahf
out
sbb
sbb
out
sahf
sbb
and
out
and
sahf
out
sub
sub
out
sahf
sub
xor
out
xor
sahf
out
cmp
cmp
out
sahf
cmp
inc
jns
out
inc
inc
inc
inc
inc
out
sahf
out
dec
dec
dec
dec
sahf
out
sahf
dec
dec
dec
push
push
push
jns
out
push
push
push
push
push
out
sahf
out
pop
pop
pop
pop
sahf
out
sahf
pop
pop
pop
pusha
popa
bound
out
arpl
out
sahf
out
cmpsl
mov
aad
sarl
testl
cmp
repz
pop
jae
repz
repz
scas
mov
ds
jmp
push
pop
xor
cmp
repz
pop
data16
iret
repz
cltd
stos
mov
aad
sahf
out
cmp
std
or
out
xor
inc
dec
push
out
sahf
out
outsw
js
sahf
out
sahf
mov
xor
out
shl
hlt
add
repz
push
pop
jb
repz
xchg
lcall
add
adc
out
and
inc
push
addr16
sahf
out
mov
ja
shl
add
gs
xor
jbe
adc
in
popa
jo
adc
fs
insb
sbb
call
inc
jb
popa
je
push
outsl
outsl
insb
push
xlat
add
js
push
outsl
arpl
jae
or
and
jb
sbb
insb
outsl
mov
fcomi
divb
xor
push
imul
pop
idivb
arpl
pusha
gs
outsl
outsb
je
inc
sub
ret
in
jp
pop
push
aam
jae
lods
lret
daa
cmp
sbb
lret
out
mov
gs
gs
push
popa
jb
insl
and
pop
or
outsl
fs
pop
xor
dec
lds
push
sbb
out
in
in
insb
gs
aam
bound
in
push
imul
jbe
jns
arpl
jns
je
ja
xor
lcall
jb
mov
sbb
insb
bound
mov
xor
lock
imul
xor
fiaddl
inc
outsl
xor
jne
mov
push
cld
stos
jp
addr16
gs
adc
sbb
or
shrl
mov
push
and
popa
fldt
jne
push
jne
cmp
sbb
idivl
nop
arpl
insb
aaa
fcompl
push
imul
jbe
in
outsl
rclb
ret
push
ret
into
enter
outsl
aaa
out
push
movhlps
adc
push
mov
inc
mov
add
dec
xor
cltd
xchg
aad
ret
jnp
gs
sub
push
outsb
insl
pop
sub
popa
in
leave
mov
cmp
cmp
jb
xchg
dec
ret
push
ret
negb
ljmp
sub
push
into
xor
mov
inc
cmp
inc
inc
xchg
clc
and
or
push
popa
imul
adc
dec
bound
test
loop
xor
fs
and
sbb
pop
pusha
sbb
dec
arpl
ficoml
or
sbb
sub
inc
sub
jbe
call
mov
ret
add
mov
imul
jo
iretw
popa
jp
jae
sub
mov
pop
in
and
pusha
adc
pusha
add
jb
fistpll
add
gs
outsl
or
pop
xorl
add
sarb
jae
inc
xor
dec
dec
aas
adcb
xchg
inc
loop
mov
dec
testl
std
add
xchg
pop
push
or
jo
add
movsb
inc
int3
inc
adc
mov
dec
xor
add
or
add
fdivs
sub
pop
xor
data16
xor
clc
pushl
cmp
cmp
cmp
ss
popa
data16
arpl
xor
sub
iret
mov
mov
lret
rol
cmpsl
mov
mov
jns
inc
adc
dec
jo
push
and
out
insb
ss
push
pusha
xor
push
inc
xor
mov
dec
mov
pop
inc
push
dec
push
ja
stc
sahf
push
xor
inc
push
push
imul
xchg
inc
push
mov
fidivrs
xor
xchg
pusha
outsl
cmpsl
divl
add
sahf
imul
rclb
cmp
cmpsb
inc
mov
push
pushw
shlb
push
push
loopne
sti
mov
ds
mov
cmp
xor
divl
ja
dec
lock
js
jo
push
xchg
in
div
inc
aaa
inc
inc
sub
xor
inc
add
xor
lret
mov
xor
add
jo
or
and
ret
mov
dec
mov
and
pusha
mov
mov
xor
cmp
ss
and
bound
adc
xor
in
add
mov
into
les
mov
mov
mov
add
mov
add
iret
pop
and
inc
push
inc
inc
es
inc
idiv
rolb
stos
inc
addb
cmp
mov
mov
add
mov
nop
test
cmpsl
inc
mov
push
les
sub
ret
xchg
adc
das
xor
or
shl
mov
mov
js
mov
arpl
sbb
andb
mov
lahf
pop
push
pop
dec
sbb
cmpb
fbstp
push
dec
inc
push
jmp
xlat
mov
mov
add
loopne
daa
sbbb
jmp
cmp
andb
sub
ja
nop
mov
inc
lcall
or
or
lahf
or
jmp
pusha
scas
cmp
jmp
sbb
notl
aas
adc
xchg
mov
mov
inc
imul
js
testb
mov
cmc
jmp
add
add
aam
ja
mov
sbb
daa
sbb
push
or
cli
cld
int
lods
inc
sub
clc
push
imul
cltd
sbb
aad
xorl
popa
bound
adc
mull
subl
test
inc
mov
sub
fcomip
add
adc
mov
roll
push
adc
or
add
add
sbb
insl
insb
loop
and
xchg
push
add
daa
clc
in
add
adc
inc
add
mov
fidivrs
push
push
push
lock
pusha
ljmp
inc
andb
inc
arpl
jae
data16
mov
js
inc
push
xchg
ret
notb
jb
fs
imul
std
data16
pop
imul
je
jo
das
das
ja
cs
mov
loope
data16
jp
arpl
das
aas
jns
fs
pop
dec
push
dec
jae
push
push
outsb
and
mov
nop
cmp
pop
fdivrl
jge
call
push
lock
decl
add
dec
push
push
js
push
adc
mov
outsb
outsb
outsl
and
pop
and
and
inc
dec
push
and
std
outsl
pop
shrb
or
mov
pop
inc
roll
push
test
cli
mov
clc
dec
sbb
ds
jle
int
push
sti
push
inc
shl
ja
es
dec
jnp
push
push
push
imul
aad
push
rorb
cli
lret
rcll
jp
or
pop
or
adc
push
fmul
daa
mov
pop
jns
or
add
nop/reserved
mov
add
prefetchwt1
les
mov
ret
push
out
pusha
and
or
sub
insb
mov
call
test
adc
dec
pusha
jb,pn
popa
test
mull
dec
out
inc
cs
inc
jb
mov
sub
dec
or
mov
add
arpl
xlat
inc
inc
or
dec
mov
outsl
push
nop
lahf
push
push
inc
int3
rorb
inc
pop
sbb
mov
push
cmp
decl
pminsw
inc
dec
mov
jne
mov
sub
and
fstl
push
sahf
xchg
jns
sbb
sbb
call
adc
or
inc
add
push
push
xor
int
mov
sahf
sub
cmp
adc
adc
inc
les
call
xor
sub
sub
jae
push
mulb
and
xchg
xor
xor
mov
and
jl
adcb
adc
cmp
aas
fwait
cmp
repz
jmp
bound
call
push
rcr
add
sub
add
cs
jb
enter
push
daa
aas
enter
pop
in
je
and
fcomps
aam
out
mov
test
popaw
cmp
push
mov
adc
or
sbb
sub
xchg
test
cld
cmp
imul
fisubs
and
xor
cmp
push
sub
or
ss
mov
xchg
add
dec
inc
jns
pop
dec
ret
inc
inc
sbb
mov
jae
scas
insl
mov
mov
add
push
test
dec
ja
fildl
xchg
insb
xchg
nop
xchg
xchg
pusha
rol
jo
xchg
fs
or
pop
rorl
jne
cwtl
and
jne
vpunpcklqdq
int3
push
cmp
pop
adc
lahf
and
push
sub
inc
adc
clc
mov
inc
mov
add
xor
aas
insb
loope
gs
add
insb
mov
mov
adc
push
inc
pop
inc
shld
iret
jnp
dec
pop
push
xor
lcall
sub
add
insb
adc
dec
sahf
dec
adc
push
push
dec
mov
dec
mov
push
cmp
sbb
cltd
testb
pop
orb
daa
and
rcrb
pop
and
xor
lods
add
gs
ret
adc
outsb
imul
add
insb
cmpl
clc
popa
fs
jae
imul
aaa
pop
inc
jo
pop
arpl
rcrb
insb
dec
insb
outsl
and
arpl
pop
push
loop
inc
lods
inc
push
aaa
xor
imul
mov
bound
outsl
outsb
dec
mov
test
inc
inc
loop
clc
imul
es
xchg
les
dec
inc
dec
hlt
add
clc
sbb
mov
push
das
popa
orb
adc
and
jns
inc
outsl
add
push
sahf
addb
adc
or
enter
add
pop
pop
pop
and
xchg
xor
pop
lock
dec
push
pop
inc
jae
int
inc
mov
movsl
cli
add
add
outsb
add
loope
in
push
lock
popa
add
imul
push
push
sub
and
add
cmp
cmpsl
cli
sbb
add
add
pop
out
jge
mov
cmp
insb
ds
adc
pop
jnp
insb
imul
inc
pop
daa
mov
and
outsl
sbb
push
insl
bound
idivb
jae
jne
arpl
and
cmp
dec
es
mov
jp
inc
adc
negl
xlat
jo
je
push
jecxz
push
out
mov
dec
je
out
pop
jb
jbe
sub
insl
lahf
jbe
outsl
jo
mov
add
pop
adcl
sub
pop
pop
jo
inc
jbe
fs
ja
mov
andb
rep
dec
adc
xchg
sti
lock
jae
jb
gs
adc
adc
fwait
inc
pop
test
outsl
repz
mov
jae
sbb
lret
jno
lds
daa
out
insb
pop
fcomi
es
jle
push
outsl
pusha
dec
push
rcrl
push
or
adc
or
add
jmp
dec
mov
xorl
cmpsl
mov
xor
inc
xchg
pop
sbb
or
adc
mov
mov
in
xor
pop
data16
rorl
push
arpl
pop
inc
mov
mov
xchg
sub
arpl
cmp
scas
out
add
out
ret
ret
inc
pop
lret
popa
scas
arpl
rol
xor
mov
adc
push
jnp
out
outsb
clc
pop
outsb
jns
shrl
mov
je,pt
jae
shll
cmp
dec
rorl
add
sub
arpl
subl
fs
pop
dec
insb
jne
stos
push
notb
sahf
aaa
lock
sahf
push
arpl
cmp
mov
aaa
xor
pop
fisubrs
out
bound
mov
and
sbb
shll
add
daa
pop
push
pop
jno
fistpl
or
xor
jae
das
or
mov
out
shlb
sbb
jo
jg
les
xor
test
adc
xor
xor
and
in
xor
xor
cmp
inc
xor
push
xor
data16
jge
xor
pushf
movsb
lods
xor
inc
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
scas
jns
pushl
test
xchg
xor
xor
xor
sbb
inc
add
lock
xor
push
xor
mov
add
sarb
rol
shll
call
mov
mov
mov
in
and
ror
iret
mov
cld
mov
ja
fisttpl
mov
rol
popa
mov
clc
aad
daa
and
clc
loop
jmp
daa
and
out
adc
leave
mov
mov
shrl
iret
ljmp
mov
mull
push
jg
pop
xor
cmp
mov
rcrb
in
ljmp
mov
cs
mov
adc
in
popa
jg
sbb
cmp
out
arpl
push
arpl
jo
insl
adc
aaa
xor
popa
daa
push
fimuls
mov
outsb
sbb
add
mov
cs
movsb
xor
xor
hlt
aam
ror
idivb
sbb
sbb
mov
mov
shl
shl
sarl
mov
mov
rcr
mov
shl
pop
test
sub
ret
aam
xlat
cmp
rcl
and
adc
mov
loop
roll
push
lock
fcmovbe
xchg
pop
orl
arpl
je
inc
call
das
add
jo
xor
data16
push
test
jbe
jb
jbe
testb
nop
cmp
or
leave
jo
daa
mov
push
test
pusha
add
or
jecxz
incl
push
imul
lods
popa
mov
inc
cmp
daa
xor
push
or
mov
adc
sbb
xchg
js
add
insl
or
pop
add
pop
or
xchg
insb
insb
sub
adc
lea
mov
notb
pusha
mov
rdpmc
pop
leave
sub
xor
xor
test
add
in
sub
sahf
insb
lcall
xor
ss
sub
xchg
repnz
lods
push
jne
or
mov
adc
shl
xor
daa
andb
inc
sarb
sbbl
sbb
call
insb
sbb
inc
or
adc
jno
jle
into
dec
jbe
fiadds
sbb
lds
imul
and
dec
xchg
push
frstpm(287
mov
push
orb
xchg
adc
inc
mov
fsubs
testl
ds
leave
and
fdivp
add
inc
fsubr
outsb
adc
ret
mov
cli
pop
fmuls
dec
inc
add
and
push
daa
jno
push
enter
and
mov
in
pushf
jne
lret
push
cmpsl
inc
jne
adc
out
int3
fldt
adc
add
push
and
roll
cmc
and
or
loope
push
sub
or
inc
xchg
or
aas
test
jle
mov
and
push
scas
add
dec
add
xor
jb
jecxz
cmpsl
push
pop
and
pop
cmp
mov
inc
dec
incl
jge
enter
iret
sub
iret
cmp
mov
xor
lret
push
addl
btr
mov
or
pop
xchg
mov
mov
int
cld
mov
cmp
cmpsl
loopne
mov
aaa
ljmp
test
sub
popaw
inc
jo
cmp
pusha
xor
cld
jbe
rcll
add
in
add
shlb
cmp
sbb
fistps
movsl
xor
fs
ja
sbb
int
insb
sub
push
jmp
or
sbb
or
and
mov
mov
mov
adc
or
sbb
mov
loope
push
and
adcb
push
inc
popa
or
cmp
adc
clc
enter
mov
push
pop
adc
xor
xchg
movsl
xchg
jl
loope
adc
int
pop
sbb
in
sti
and
fisubrl
imul
or
and
push
fimull
cmp
cltd
add
adc
mov
mov
adc
dec
movsl
adc
add
mov
call
mov
std
push
mov
dec
orb
cmpsb
cmp
xlat
and
adc
jbe
sahf
inc
out
jo
inc
imul
fsubr
or
test
xchg
stos
test
in
adc
cmp
fdivl
aam
fadds
mov
cld
mov
and
push
xor
fcompl
mov
mov
rorb
dec
mov
movl
and
jmp
sub
mov
out
add
xchg
stc
lods
push
dec
sbbl
push
into
test
imul
or
cmp
loopne
cmp
mov
cmp
jns
stc
icebp
sub
sbb
push
xor
movsl
sti
fs
xor
enter
scas
push
mov
ja
adc
loop
or
inc
cmp
and
jbe
data16
bound
nop
shlb
push
test
rcll
fdiv
mov
mov
mov
pop
xchg
fsqrt
cwtl
push
push
cmp
and
adc
jnp
xor
lods
subb
mov
sub
cmp
mov
adc
mov
pop
pop
daa
call
notb
testb
ret
call
inc
pop
shl
or
orl
xchg
lret
cmpsb
xor
pop
mov
sbb
pop
js
push
add
aaa
add
xchg
test
or
mov
sub
sub
inc
jne
xchg
fs
ret
fists
out
add
pushf
rorl
add
daa
iret
mov
call
push
add
movl
nop
sub
fucomip
outsb
jae
fists
test
xchg
mov
subl
add
mov
in
loopne
and
or
ret
in
and
out
mov
jb
fisttps
add
jp
adc
cmpl
mov
and
in
jno
xor
sahf
xor
or
pop
in
cwtl
insb
ss
jns
dec
popa
lret
addr16
and
outsb
shll
sub
jmp
push
push
mov
mov
sub
out
add
add
mov
xchg
in
mov
xor
mov
push
loope
dec
movsb
jo
mov
adc
cmpsb
mov
inc
dec
loope
pop
in
lods
push
or
push
daa
pop
loop
fisubl
cwtl
inc
adc
push
ss
cmp
xor
pop
mov
and
push
scas
add
dec
mov
xchg
inc
xor
jo
loopne
jmp
add
mov
push
ficoml
repz
sub
xor
test
push
jno
lret
push
js
jmp
inc
cmp
daa
pop
and
inc
enter
push
xor
es
xchg
repz
test
pop
mov
or
pushf
call
or
dec
push
in
mov
dec
mull
push
enter
jbe
stos
lock
and
mov
fs
sahf
xchg
sub
popa
push
jb
push
popa
push
fwait
mov
popf
and
loope
or
clc
dec
pushf
dec
push
or
xlat
sbb
nop
xchg
in
dec
and
dec
dec
test
aam
mov
dec
repnz
test
loop
addr16
lock
inc
es
dec
call
xor
mov
mov
and
nop
inc
adc
jecxz
orl
adc
inc
leave
jmp
out
push
leave
mov
lods
call
or
jecxz
adc
dec
insl
dec
dec
adc
xor
jecxz
mov
inc
cmp
sbb
hlt
movsl
push
out
xor
jns
inc
lea
jnp
hlt
xlat
inc
fwait
push
call
mov
pop
scas
push
cmpsl
movsl
push
mov
es
and
mov
subb
mov
pop
cwtl
jne
xorl
dec
dec
enter
inc
imul
dec
push
sti
fs
rorb
and
xorb
mov
enter
or
inc
pmulhuw
and
inc
test
sbb
xchg
sub
rcrb
sti
inc
mov
sub
pop
lahf
jno
xchg
and
adc
fs
push
ret
add
mov
inc
dec
loope
flds
dec
add
out
cmp
pop
dec
fcoms
sbb
in
cld
jno
in
cs
clc
add
pop
cmp
je
push
inc
or
inc
loopne
inc
sub
lret
sti
add
fs
dec
xor
nop
xchg
add
das
enter
and
hlt
cmp
or
jns
jmp
sbb
inc
inc
adc
sbbl
pop
jnp
cld
push
dec
push
and
or
inc
inc
fimuls
push
in
and
in
data16
pop
xchg
xchg
sti
cltd
pop
and
mov
inc
xchg
ljmp
jae
sub
jecxz
int3
lahf
xchg
inc
pushf
xchg
in
scas
jnp
xchg
xchg
rolb
daa
call
loopne
pop
sbb
mov
mov
push
cld
cld
mov
loope
mov
pusha
out
scas
add
add
js
arpl
add
jecxz
jnp
or
sarb
cmpsl
inc
popa
aad
andb
push
in
jbe
push
jns
hlt
push
pop
hlt
test
sbb
inc
jns
xor
dec
cmpsb
dec
imul
inc
adc
leave
dec
lret
xchg
mov
jbe
xor
xchg
lock
inc
cmpsl
and
call
in
enter
inc
dec
lds
mov
or
xchg
pushf
ds
mov
daa
fs
icebp
push
ss
hlt
dec
xor
push
sarb
inc
mov
add
jo
push
cmpl
enter
movl
add
ds
inc
es
sub
cmp
das
adc
add
jmp
ds
ds
cs
or
add
cmpb
and
sub
jmp
test
in
and
icebp
scas
push
insb
adc
insb
xor
insl
push
pop
cmp
mov
sbb
adc
repnz
pop
clc
inc
lcall
sub
cltd
lods
adc
pop
rorb
dec
shrl
or
add
into
xchg
orl
leave
mov
mov
adc
mov
std
xchg
mov
xchg
lret
pop
orl
add
orl
ret
add
je
lret
push
xchg
push
ret
mov
aas
sbb
mov
cmp
hlt
mov
push
dec
adc
in
cmp
aas
lock
sbb
mov
adc
push
lods
int3
rcll
dec
lea
enter
cmp
clc
xor
cltd
rcll
jmp
clc
setge
ficomps
das
push
scas
dec
or
adcb
adc
in
cld
push
add
out
cmp
mov
push
movsl
add
cmp
inc
call
xchg
add
cmp
dec
add
or
sub
test
jne
mov
push
loope
mov
pop
pop
push
arpl
pop
popa
inc
sub
pop
cwtl
xchg
xor
cmp
fwait
add
xor
out
and
pop
jns
inc
add
out
dec
mov
lcall
add
out
mov
pop
pusha
and
sbb
aaa
rorl
or
pushf
xor
das
ds
push
push
pop
add
cmp
sub
adc
adc
push
xchg
out
jo
dec
mov
js
in
icebp
cmp
lcall
pop
rcll
mov
mov
push
imull
loope
mov
repz
mov
shll
hlt
call
addb
js
rorl
sbb
ret
iret
aaa
repz
fchs
push
adc
pop
push
add
fcompl
and
mov
push
add
push
ret
aaa
roll
sbb
cld
push
imul
sub
outsb
add
cmpsb
sbb
cmp
ffree
jmp
add
sbb
or
das
and
and
pop
jg
std
fsubrl
or
int
or
cmp
push
push
insb
roll
push
imul
and
lock
aaa
inc
or
fldl
or
mov
pushf
inc
cs
push
shrl
rol
sbb
add
mov
and
sub
roll
int3
jmp
jns
insb
aam
xor
sbb
js
pop
ret
test
mov
leave
mov
or
pop
xchg
addr16
push
xor
add
addr16
push
or
add
sbb
sub
shl
imul
rcrl
pusha
and
jb
jge
call
ds
push
roll
push
push
xor
lret
mov
repnz
push
clc
data16
xchg
lock
push
add
dec
test
adc
aam
sarl
and
push
orb
rorb
and
xor
push
or
aaa
inc
add
mov
std
or
repz
xchg
add
xor
in
testl
shrl
dec
mov
jo
jle
shrl
sub
mov
dec
pop
cmp
rorl
adc
lods
loope
sbb
xchg
adc
sbb
pop
mov
push
xlat
xor
push
outsb
inc
and
mov
add
inc
sahf
sub
xchg
mov
adcl
push
sbbb
xor
rol
flds
mov
jb
add
and
push
sub
inc
repnz
shlb
or
sbb
add
dec
push
in
xchg
leave
mov
addb
pusha
loope
shrl
movsb
push
jl
insb
push
pop
test
shr
rcrb
sbb
inc
add
xchg
dec
xor
dec
fdivs
daa
mov
das
xchg
add
and
xlat
and
mov
inc
in
and
or
pop
das
mov
dec
pop
inc
pop
and
cmpsb
imul
xor
dec
insb
and
das
add
cs
dec
pop
xchg
out
adc
test
or
roll
cmp
or
jae
push
rorl
les
lock
stc
es
pop
loopne
fcoml
xchg
jae
and
adc
jne
adc
loope
xchg
lret
sub
pop
mov
icebp
sbb
adc
insb
xchg
lods
mov
push
scas
xor
ss
loope
inc
test
and
arpl
mov
mov
sub
or
leave
or
sub
jnp
inc
scas
sub
sub
imul
mov
mov
and
pop
cmp
push
and
adc
in
jo
addr16
and
flds
pop
or
cmp
or
inc
and
and
shll
push
and
add
sbb
mov
dec
push
out
sub
inc
and
xchg
mov
push
and
add
jecxz
loope
test
inc
dec
jb
jl
or
xor
pop
pop
jo
inc
and
jo
and
mov
and
outsb
or
dec
xchg
jo
inc
mov
out
inc
and
lds
and
pusha
or
dec
iret
ds
inc
mov
and
fldenv
or
jo
mov
add
leave
mov
dec
xor
into
xor
xor
pop
jo
and
clc
push
enter
test
in
test
adc
push
add
popa
enter
and
out
xor
sbb
daa
dec
adc
rol
enter
sbb
mov
popa
into
faddl
lds
insb
sub
sub
nop
jnp
inc
or
and
pop
mov
inc
fcomps
and
sbb
sbb
xchg
popl
out
mov
and
mov
cmp
and
mov
and
push
and
or
push
and
jmp
or
sbb
add
sbb
mov
dec
add
push
and
cmpsl
scas
or
xor
cld
xchg
xchg
or
xchg
push
jo
add
sub
or
mov
dec
xor
or
cmpsb
jecxz
and
or
xor
fmul
and
icebp
mov
pop
inc
and
pusha
mov
jo
and
push
xchg
orl
dec
and
sbb
mov
and
in
lods
fisubs
leave
and
jo
fwait
and
sbb
addb
jg
push
and
sbb
inc
das
or
sbb
add
loopne
jg
pop
les
and
add
xor
movsb
xor
xor
scas
inc
es
xor
jb
xor
add
mov
les
in
and
sub
xchg
sbbl
dec
addb
daa
jmp
aaa
addl
push
lds
out
sbb
mov
shl
lds
push
enter
sbb
in
lcall
movsb
addr16
mov
pop
test
inc
and
and
and
sub
sbb
loop
loopne
xchg
inc
and
mov
outsl
lcall
adcb
ja
pop
adc
and
aas
fcomip
sub
add
nop
add
mov
add
pop
icebp
ficomps
test
pop
cmp
rcrl
lods
test
and
mov
repnz
and
enter
pop
cmp
xor
sbb
rorb
iret
dec
push
loopne
fldl
roll
add
addl
data16
cmpsl
push
mov
mov
aaa
adc
jno
ss
or
add
lea
movsb
and
cld
orb
add
in
sbb
fs
add
test
sub
shll
dec
in
cmp
mov
push
and
sbb
js
inc
and
cmpsb
sbb
push
and
test
imul
addb
sub
add
jne
clc
pop
aad
mov
leave
inc
and
or
cld
inc
and
hlt
call
xchg
xchg
inc
gs
aam
movsb
cmp
cmp
rcl
test
sbb
lahf
add
ret
or
in
push
push
fcomps
add
test
lea
imul
adcb
imul
add
cmp
cmp
push
in
cmp
ret
xlat
andl
faddp
inc
push
flds
pop
mov
jb
dec
shrl
adc
call
scas
pusha
fistl
add
pusha
add
or
and
je
insb
pop
lds
mov
subl
xor
xchg
adc
push
or
addb
push
movsb
add
or
xchg
sar
sub
add
scas
mov
adc
adc
push
and
jo
and
movsl
xor
mov
cmp
cmp
jo
push
sub
adc
sbb
and
and
and
or
and
jo
and
inc
cli
push
and
inc
mov
add
movsb
pop
xor
sub
inc
mov
or
and
push
adc
xorb
adc
or
pop
ret
jo
adc
mov
cmp
testl
adc
test
jb
cltd
jg
inc
ret
outsl
dec
mov
or
inc
and
cmp
adc
sub
adc
xlat
push
and
mov
in
leave
orb
mov
adc
sub
loope
adc
adcl
or
sub
and
orl
and
and
or
addr16
unpckhps
xchg
or
mov
cmp
pop
mov
adcl
hlt
inc
push
xor
xchg
in
rcll
andl
sub
inc
push
xchg
xor
or
xchg
inc
or
aaa
and
inc
push
dec
shrl
mov
or
xchg
add
xchg
jl
xor
sub
ret
pusha
scas
push
repnz
btr
or
mov
dec
fists
or
pusha
addl
dec
push
enter
xor
adc
push
and
stc
arpl
andl
cld
rolb
and
or
adc
ret
adc
and
add
pop
ud0
sub
sub
popf
and
insl
out
and
sub
sbb
xchg
and
jmp
pop
in
insl
testb
or
arpl
push
outsb
sub
movsl
xor
adc
and
inc
mov
sbb
or
and
pop
adc
push
and
mov
nop
test
pop
in
dec
push
enter
pop
lea
and
and
in
repz
rcll
pusha
and
movsb
cmp
add
inc
mov
and
cmp
outsl
mov
movsl
push
dec
push
add
and
adc
fmuls
pop
hlt
imul
sub
fs
or
and
xchg
pavgb
enter
cmpsb
xor
nop
add
test
outsl
add
rcrl
jl
adc
inc
popa
push
jecxz
adc
push
dec
mov
adcb
shlb
aad
lods
push
and
addl
and
add
sti
cld
addb
test
add
inc
xchg
add
mov
pop
adc
mov
mov
imul
jmp
nop
add
das
inc
and
roll
loopne
cltd
xchg
cmpb
pop
cltd
add
lds
or
sbbb
pop
add
xchg
sbb
cld
xchg
std
sbb
xchg
in
neg
push
popa
cli
jmp
dec
cmp
ffreep
dec
adc
mov
and
dec
pop
dec
clc
xchg
add
loopne
add
andl
and
inc
inc
add
pop
and
rol
xchg
mov
addl
add
add
jp
add
les
popf
push
sub
push
or
mov
frstor
add
inc
sub
mov
and
cmp
sbb
lock
sub
cmpsb
jmp
push
stos
jbe
mov
mov
filds
and
add
or
adc
jb
mov
add
sbb
ret
call
xchg
lods
call
ret
lods
push
aas
cmp
push
inc
je
add
pop
push
insb
pop
out
sub
jp
or
movsb
cmp
movsl
sub
dec
or
aam
pop
cs
enter
in
xor
mov
sbb
lcall
out
cmp
xchg
push
xchg
test
adc
push
cmc
mov
push
push
sbbb
test
and
jbe
mov
or
mov
inc
jle
dec
cmp
test
les
gs
or
test
mov
outsl
out
addb
sbb
xchg
jo
loopne
and
or
sbb
mov
mov
jo
adc
call
or
jmp
sub
sbb
xchg
js
or
pop
mov
jo
shrb
sub
icebp
test
jnp
dec
shl
jecxz
dec
push
rcl
call
push
adc
mov
add
fcomps
movl
xchg
adc
lcall
lcall
add
xchg
xchg
mov
or
dec
push
pushf
and
adc
inc
inc
dec
inc
mov
test
add
filds
or
and
shrl
les
inc
push
ret
add
or
sbb
cmpsl
xchg
adc
enter
add
add
pop
and
inc
add
lret
dec
dec
jo
call
add
fisubrs
shrl
sbb
xor
xlat
lock
xor
push
mov
nop
aam
sahf
fsubr
call
add
xchg
push
cmpsb
add
sbb
stos
adc
or
imul
stos
inc
inc
or
rorl
and
inc
pop
xchg
sub
push
xchg
sub
inc
dec
xchg
and
push
add
add
pop
and
sub
cmp
adc
mov
xor
add
push
inc
pop
push
subb
lock
push
popf
cmp
in
shll
mov
rorl
rcll
lcall
loope
add
mov
shll
loope
add
faddp
and
cwtl
and
jne
adc
mov
lods
fs
std
adc
cmp
and
xchg
or
hlt
sbb
add
and
push
ret
outsb
xchg
outsl
hlt
mov
jo
mov
sbb
cltd
and
sbb
xlat
and
shl
jne
adc
pop
loope
and
pushf
gs
loop
mov
push
push
ret
add
call
dec
ret
out
and
lock
add
pop
xor
inc
jecxz
sub
dec
rolb
pop
jmp
std
sub
push
scas
insb
inc
call
sbb
test
cwtl
push
sbb
xorb
and
cmpsb
adc
xchg
lods
and
mov
xor
or
test
jmp
jbe
lret
lea
mov
popf
dec
call
mov
and
cmp
dec
sbb
mov
cmpsb
rorb
mov
sbb
adc
jns
mov
fsubrs
adc
dec
xchg
das
pop
jo
sub
test
jbe
bound
add
push
pop
xor
xchg
popa
sbb
rorb
insb
popf
dec
pop
enter
push
rcrb
fwait
jo
adc
arpl
sbbb
push
rcll
or
pop
push
mov
cmp
pop
popf
xchg
add
cwtl
and
ljmp
mov
lods
xchg
push
ret
xor
or
lock
xchg
js
adc
add
insb
and
pop
push
jp
jnp
inc
jo
mov
shrl
adc
shlb
jg
daa
clc
inc
or
pop
xor
xchg
mov
sbb
mov
loope
push
imul
add
jo
xchg
inc
xchg
loope
mov
adc
mov
or
sub
imul
test
push
loope
loopne
adcb
inc
test
and
jae
dec
dec
and
xchg
lock
loop
test
and
ret
inc
xchg
loope
add
rclb
xor
xchg
test
loope
rclb
rclb
cmpsl
and
loopne
ljmp
loopne
sub
dec
sbb
loope
xchg
add
mov
sbb
faddl
sbbl
sub
ficoms
rorl
sbb
daa
lcall
in
push
mov
or
push
pop
loope
and
cmp
sub
faddl
dec
dec
loope
das
pop
andl
call
test
enter
sbb
or
out
rclb
push
push
cs
testb
sbb
loope
pop
adc
inc
loope
cmpb
enter
sarb
xchg
test
xchg
xchg
test
push
sahf
loope
xchg
jo
dec
lods
pop
adc
stos
loope
dec
dec
sbb
push
imul
imul
sub
popa
sbb
or
dec
push
int
dec
dec
ret
xchg
add
mov
and
add
outsb
loopne
loope
add
sub
aaa
cli
loope
dec
ret
and
and
or
jl
mov
mov
cmp
adc
in
mov
push
movsl
and
xchg
xchg
test
xchg
xchg
test
lea
lret
push
jbe
xchg
jo
mov
jo
loope
add
inc
sub
adc
loope
dec
pop
pop
icebp
inc
dec
sbb
add
loope
sub
pop
adc
int
movsl
and
dec
dec
adcb
pop
adc
add
stc
add
add
es
ret
and
xchg
xlat
or
push
xchg
andl
popf
rclb
inc
inc
popa
mov
dec
call
nop
out
je
sbb
test
smsw
sbb
push
adc
add
xor
testb
sub
push
mov
mov
dec
and
sarl
sub
adc
xchg
roll
shl
mov
xchg
and
out
push
gs
rcrl
push
ja
pop
adc
movsl
jp
stos
sub
rorl
movsb
xchg
inc
in
push
inc
jne
sub
sbb
or
adc
and
and
lcall
jae
sbb
jnp
cmp
mov
pusha
jbe
add
scas
sub
xor
int
jns
xchg
pop
scas
xor
xchg
cld
push
xchg
test
push
shrl
loopne
cmp
xchg
adc
cmp
lret
jno
iret
add
pop
adc
repnz
leave
sub
leave
add
sub
sti
lahf
stos
mov
fdivrl
inc
xor
rorl
adc
shrl
pop
mov
pop
enter
and
adcl
jle
cmp
les
mov
push
and
xchg
loopne
or
xchg
push
and
cmp
hlt
inc
out
and
test
and
mov
pop
ret
test
mov
mov
rcrb
mov
negb
adc
test
mov
add
adc
inc
mov
daa
add
lods
and
in
dec
push
fwait
xchg
fcom
fildll
aas
pop
mov
dec
pop
and
and
cmp
cltd
add
mov
add
dec
andb
inc
nop
add
cs
push
inc
push
inc
test
cmpsb
pop
push
inc
inc
sbbb
cmpsb
or
ret
jmp
jg
ret
add
fmuls
sub
jle
sbb
push
add
xchg
inc
add
adc
inc
push
nop
test
adcl
inc
jae
dec
sbb
fsts
push
into
sbb
xor
dec
ret
inc
sub
pop
or
inc
xchg
dec
loop
inc
adc
mov
ret
aas
mov
push
sub
inc
popa
pop
outsb
dec
push
call
push
inc
outsb
sub
dec
inc
inc
pop
push
inc
adc
inc
add
inc
sbb
dec
addb
and
lea
add
inc
dec
ret
mov
sahf
push
mov
out
sbb
test
or
mov
orl
sub
mov
xor
pop
and
andl
and
mul
mov
popf
cmp
and
cld
and
fcompl
sbb
inc
add
andb
adc
mov
pop
ss
je
mov
andb
addl
xor
mov
cwtl
add
dec
test
jg
pop
and
sbb
int3
add
adc
orl
mov
xchg
mov
or
enter
add
pop
enter
sub
or
cmpsl
loope
mov
add
vpsubusb
mov
pop
and
mov
loope
mov
js
mov
jno
mov
movsl
in
jmp
aad
dec
mov
andb
dec
push
sbb
jmp
dec
mov
bound
addr16
das
cmp
mov
and
andb
sbb
fmull
jmp
adc
pop
dec
aas
push
ljmp
and
pusha
loopne
and
mov
and
dec
les
cmp
push
xor
mov
dec
loop
stos
add
je
adc
sbb
mov
xchg
xchg
jo
push
dec
xchg
and
adc
das
mov
loopne
mov
dec
ret
mov
dec
mov
mov
inc
mov
loopne
and
loopne
and
and
or
pop
ss
jo
cmp
loopne
adc
rol
cmp
or
pushw
or
sbb
sub
add
popa
and
popa
aas
inc
or
test
inc
inc
add
xor
cwtl
mov
cmp
adc
dec
out
jle
and
aaa
je
imul
inc
mov
in
andb
in
sbb
jne
pop
jo
adc
lds
dec
mov
push
inc
or
call
andb
xor
pusha
das
test
mov
sarb
mov
mov
dec
ret
cld
and
and
sbb
adc
jb
and
ret
xchg
inc
add
or
add
push
and
push
inc
fwait
test
dec
mov
add
jo
push
add
stc
dec
push
add
add
and
sbb
sbb
or
rcr
mov
xchg
and
push
or
and
add
and
mov
dec
cmpb
mov
mov
stos
andb
sub
push
inc
adc
adc
push
loopne
sub
and
andb
push
and
subl
fsubs
add
test
add
loope
mov
push
adc
cmp
add
jg
push
cs
lods
mov
jmp
or
movsb
add
mov
dec
push
les
movsb
mov
data16
lret
inc
addb
mov
inc
cmp
cmpsb
ret
dec
orl
popl
jecxz
and
sbb
add
and
push
mov
cmpb
mov
add
mov
mov
cwtl
inc
dec
inc
or
and
les
xchg
es
xor
push
and
jb
dec
cmp
faddl
adcl
xorl
push
ret
sub
addb
xchg
aad
xorl
cmpsl
mov
push
and
or
nop
shrl
test
addl
and
insb
cli
push
addb
enter
adc
cwtl
push
pop
xchg
jo
cmpb
fmuls
jp
jno
push
sbbl
adc
sbbl
dec
mov
dec
cmp
pusha
adc
push
and
cmpl
mov
and
adc
addb
pop
subl
or
xchg
adcl
push
pop
stos
or
rclb
adc
inc
cwtl
subl
inc
xorl
and
outsb
dec
sbb
loope
andl
cmp
mov
imul
repz
add
nop
add
or
fsubl
aad
push
or
loope
xorl
push
orl
lahf
push
subl
cmp
push
xor
inc
mov
stc
stc
stos
inc
cmp
cmp
inc
xchg
lock
stos
xor
addb
test
or
inc
cmpb
addb
aaa
adc
cmp
sub
add
mov
jo
movsl
test
xchg
sbbb
lea
addb
push
or
push
inc
sbbl
push
jo
sbbl
in
orl
aam
and
push
adcl
out
inc
sub
in
push
or
orl
push
and
xor
sbb
loope
add
pop
and
inc
enter
add
pop
pushf
push
or
shll
adc
and
mov
add
nop
scas
ret
cli
add
dec
adc
mov
sbb
mov
push
and
sub
ljmp
sub
adcb
sbb
inc
mov
sahf
sub
adc
sbb
and
aas
loope
das
paddd
call
mov
add
outsb
sub
inc
faddp
cmp
in
jle
xchg
push
and
fldenv
inc
pusha
pop
adc
pushf
adc
lret
cmp
sbb
and
loopne
cvtpi2ps
inc
fisttpl
inc
inc
ret
push
xchg
inc
mov
inc
test
ret
sub
outsb
dec
push
fsubs
mov
pusha
mov
stos
add
dec
mov
push
loopne
dec
pop
cmp
stos
cmp
push
add
inc
stos
add
inc
push
add
out
ja
inc
add
push
sbb
mov
inc
add
add
inc
inc
out
orb
or
movsb
stos
add
cs
or
dec
sbb
cmp
call
inc
add
mov
inc
cmp
push
jmp
aaa
push
into
pop
cmp
das
and
call
adc
fsts
outsb
je
daa
inc
dec
pusha
add
push
add
pop
sub
push
push
addb
inc
push
add
inc
push
addb
sbb
add
jo
jle
sbbb
hlt
sub
cmp
fldenv
test
jge
xor
pop
pop
and
dec
push
inc
rcrb
sub
adc
adc
add
mov
mov
pop
loopne
mov
push
add
outsb
hlt
movsb
inc
and
sub
jo
adc
popa
mov
fwait
test
or
popw
push
addb
pop
insl
dec
pop
mov
mov
xchg
inc
mov
inc
sub
or
and
xchg
inc
or
add
mov
popa
hlt
movsb
jmp
mov
pop
arpl
loop
mov
or
push
pop
clc
repnz
nop
push
leave
clc
push
ret
popa
sbb
mov
mov
push
adc
dec
addb
roll
inc
cs
add
add
ret
or
loopne
insl
mov
xor
outsb
test
and
inc
inc
and
inc
push
push
inc
stos
lahf
push
addb
roll
mov
push
add
nop
shlb
adc
loope
mov
movsl
je
adc
cwtl
xor
add
pop
out
sahf
ja
bound
insb
jbe
addb
push
pop
clc
jmp
add
mov
sahf
out
es
mov
mov
xchg
out
mov
mov
and
jl
into
or
and
sbbl
xor
and
and
pushf
inc
addb
int3
sahf
outsb
subb
dec
inc
decb
lock
inc
inc
sbbl
or
xchg
lahf
mov
iret
rorb
ret
jmp
addb
push
adc
xchg
movlps
inc
imul
das
pop
rcrb
pop
sbb
mov
rcrl
cs
adc
mov
dec
addb
add
outsl
adc
imul
jg
adc
sbb
inc
ja
add
inc
push
or
flds
repnz
dec
addb
popa
sbb
or
lock
adc
loop
or
pop
mov
inc
std
in
ds
pop
xor
inc
call
inc
sbb
inc
sbb
or
add
jo
inc
fstps
xchg
pop
mov
inc
adc
popa
xor
xor
add
add
add
or
or
cwtl
inc
push
adc
xor
adc
inc
imul
or
sub
add
inc
pop
inc
adc
inc
or
and
jbe
jg
lock
push
orb
cmpsb
orb
loopne
inc
inc
xchg
inc
scas
dec
cwtl
push
jb
mov
xchg
dec
addb
jl
call
inc
cmp
push
xor
int3
cmp
add
rorb
pusha
add
mov
mov
push
push
aas
jo
mov
ja
in
and
dec
sbb
inc
mov
or
or
jbe
call
push
imul
lcall
aam
mov
or
dec
cmp
add
inc
je
add
push
bound
addb
xchg
and
add
push
pop
or
test
js
xor
adc
dec
mov
mov
aad
dec
inc
test
lcall
inc
ret
push
out
sbb
sbb
cltd
or
rolb
mov
repz
mov
cmp
adc
loope
movsl
add
adc
push
lret
arpl
add
inc
shrb
or
adc
mov
cwtl
inc
pushf
into
add
addb
addb
inc
mov
inc
adc
loope
push
sbb
jecxz
xchg
mov
push
dec
addb
add
push
movsb
inc
aad
dec
mov
addb
iret
dec
inc
adc
adc
je
xor
aas
aad
ror
out
paddusw
and
adc
inc
cmp
mov
mov
bound
push
cmp
xchg
lahf
add
sbbl
inc
adc
inc
cs
sbbb
inc
dec
sbb
cwtl
pop
pop
cmp
add
xchg
loop
inc
xor
adc
inc
add
push
pop
iret
shrl
sbb
and
insb
pop
pop
iret
adc
arpl
inc
ret
pop
push
inc
add
addl
and
loope
cwtl
inc
movsb
mov
jno
adc
dec
add
addb
dec
adc
out
inc
add
in
rolb
and
add
inc
mov
xor
add
inc
scas
dec
addb
inc
popa
aas
pop
inc
xchg
stc
adc
or
adc
popa
add
dec
jo
inc
mov
dec
roll
inc
mov
xlat
add
inc
rorb
push
les
nop
jo
add
cwtl
pop
popa
lock
or
adc
call
adc
inc
ja
fsts
stc
add
add
inc
inc
adc
shrl
nop
jo
push
inc
arpl
addl
mov
cmp
add
and
jmp
cmpsl
push
mov
mov
push
aam
loopne
adc
movsb
mov
pusha
push
push
add
push
pop
test
adc
inc
pop
cmp
add
ds
rol
punpcklwd
inc
push
and
push
inc
ret
pop
inc
xchg
scas
sbb
cmp
and
stc
cs
call
outsb
inc
cwtl
enter
push
adc
and
dec
xor
cmp
inc
add
ja
inc
xor
addb
mov
dec
inc
clc
fldl
orps
inc
addl
sbb
pop
cwtl
inc
sbb
push
and
inc
xor
adc
mov
inc
adc
rorl
mov
cwtl
sbb
inc
xchg
aas
sub
adc
pop
addb
adc
jo
and
push
pop
dec
inc
mov
add
pushf
ret
add
inc
scas
xlat
ret
inc
mov
add
test
inc
dec
inc
and
add
add
into
pop
mov
pusha
xor
add
pusha
add
xor
adc
inc
or
add
or
inc
stos
fistl
or
xor
add
cmpb
pop
mov
mov
inc
insl
or
test
shrb
mov
ss
push
sub
int3
adc
adc
or
pop
mov
cmp
test
inc
insb
mov
sub
sbb
test
mov
les
andl
push
les
mov
jmp
add
enter
ss
mov
cmp
xchg
lods
mov
sbbb
pushf
movsb
xchg
jns
sbb
call
enter
jb
nop
je
push
mov
sub
mov
and
or
sbb
jge
xor
mov
mov
add
ficoms
mov
test
enter
lahf
mov
cmp
jle
movsl
rcl
inc
inc
xor
popa
lods
test
popa
sbb
lock
mov
dec
test
adc
mov
inc
mov
push
shll
sbbl
ret
jns
adc
sbb
enter
cmpsl
mov
movsb
leave
lret
leave
lret
sarb
test
inc
in
jo
jb
imul
sbb
lods
xchg
push
and
jo
lods
or
xchg
mov
adc
xor
adc
mov
sarl
andb
fstpt
roll
ja
sbb
sbbl
xchg
sbb
addb
nop
dec
aam
xchg
lahf
add
add
mov
inc
and
dec
push
cltd
mov
push
mov
popa
push
and
mov
fldenv
mov
sub
and
sbb
or
test
push
popa
add
add
aas
mov
roll
por
add
mov
mov
inc
leave
lret
imul
imul
lock
ljmp
es
xchg
mov
xchg
pop
xor
and
jo
into
out
popf
bound
pop
lds
std
insb
inc
cmp
mov
xchg
les
xchg
or
push
insb
lahf
stc
arpl
xchg
dec
add
mov
lret
push
inc
add
adc
jo
push
inc
add
jns
add
jg
insb
inc
mov
add
mov
mov
inc
adc
mov
leave
insb
inc
mov
or
jge
je
jo
mov
loop
imul
fsubs
jo
dec
das
inc
lock
sub
aas
mov
shlb
inc
mov
cmpb
dec
insb
dec
mov
fadds
mov
sbb
mov
sbb
fistl
mov
pop
xchg
or
ret
inc
enter
pop
test
in
dec
inc
mov
xchg
andl
adc
or
cmp
jb
in
lahf
out
adc
mov
pop
lahf
or
cmp
adcl
xchg
pop
leave
add
sti
pushf
dec
insb
pop
enter
lods
dec
pop
add
and
leave
sub
push
je
popf
jmp
or
mov
in
or
fdivrs
or
cmp
jle
cwtl
cmp
aam
adc
sbb
sub
ss
sbb
je
or
out
aaa
les
cmp
loopne
sbb
fstl
xchg
movl
daa
hlt
or
push
cld
shlb
int
add
cmp
orl
or
fisttpll
adc
cmp
jb
je
sub
xor
dec
movsl
jb
cmp
inc
dec
push
jns
xchg
dec
push
notl
iret
enter
fs
add
fnsaves
inc
insb
xor
stos
je
jo
dec
js
mov
or
jns
dec
addb
mov
cmpsb
push
push
and
inc
popa
mov
inc
jbe
xchg
mov
push
cmpsl
fsubs
fwait
push
dec
or
bound
ret
test
push
dec
inc
push
fadds
xchg
popa
inc
sub
insl
or
lea
pusha
add
mov
lods
add
adc
xor
sub
sub
or
and
or
ret
popa
mov
pop
fisttpl
bound
mov
cmp
xchg
scas
dec
rcrb
mov
xlat
add
push
mulb
mov
sbb
outsb
pop
mov
sbb
xchg
mov
sub
fsubs
sub
popa
loope
mov
insl
popa
fcoml
les
add
popa
xor
out
or
xor
imul
fdivrl
push
insb
inc
mov
dec
popa
adc
adc
andl
or
ret
jns
sub
mov
or
popa
bound
ret
push
popa
fistl
out
mov
adc
test
adc
fsubl
and
andl
orb
daa
jne
outsb
dec
insb
sbb
add
fadds
repnz
sub
cmp
mov
popa
outsb
insl
fs
ss
or
adc
adc
and
js
lahf
test
push
jg
faddl
in
sub
mov
popa
mov
sbb
mov
popa
mov
sbb
mov
sub
test
xlat
pop
sbb
and
popa
pop
add
popa
movsb
mov
stos
fadds
or
or
add
jne
push
ss
lods
cld
mov
nop
mov
mov
mov
cmp
xchg
sbb
popa
fcoml
push
stos
fadds
mov
fcoms
and
lds
movsb
adc
ss
mov
test
push
mov
pop
pop
call
popa
movsb
das
mov
popa
std
mov
fadds
insl
cmp
jno
mov
test
lods
insb
inc
cmp
and
jno
inc
popa
lds
mov
dec
lds
popa
push
popf
xchg
bound
ret
push
popa
mov
sub
addb
ret
add
push
ret
rol
pop
jge
mov
popa
and
ss
mov
sbb
inc
les
sub
adc
mov
cmp
and
popa
or
inc
insb
inc
popa
ljmp
push
and
sub
out
sub
pop
sbb
add
cltd
test
popa
daa
das
or
xor
les
test
push
popa
or
pop
inc
lea
popa
mov
push
push
mov
jle
insl
or
sub
mov
cmp
xorb
scas
bound
add
je
sti
push
sub
jns
subb
mov
test
mov
mov
nop
cmp
cwtl
pushf
or
mov
jmp
mov
mov
mov
lret
enter
enter
pop
sub
ds
push
mov
dec
out
in
ds
enter
clc
cmc
sbb
pop
cld
add
or
aas
dec
pop
push
fnstcw
push
aas
adc
mov
add
or
and
sub
cmp
lea
mov
cmp
and
dec
or
and
xchg
cmp
ljmp
push
push
push
pop
pop
jmp
je
fs
dec
in
js
addb
nop
xchg
xchg
lret
cwtl
inc
sbb
push
stc
inc
sub
xchg
lret
dec
movsl
mov
mov
rcl
fmul
dec
movsl
push
fsub
in
lea
in
lock
clc
cld
movsl
mov
stc
inc
adc
or
xchg
lret
or
inc
adc
inc
adc
mov
es
movsl
push
mov
sub
cmp
inc
mov
cmp
bound
ret
adc
mov
ret
cmpsb
out
mov
dec
test
insb
popa
icebp
arpl
lds
popa
inc
mov
dec
les
popa
dec
or
or
mov
cs
popa
les
add
int
fistl
pop
pop
sahf
sbbb
or
cmp
dec
mov
loopne
xchg
popa
pop
mov
pushf
ja
or
fistl
outsb
sub
or
punpckldq
popa
loope,pn
mov
push
repnz
adc
or
mov
popa
dec
xchg
fistl
in
or
pushf
int
add
xor
popa
pusha
sub
and
xchg
loope
sbb
sub
popa
js
insb
inc
sbb
popa
dec
sbb
sbb
xor
push
dec
jo
push
addb
popa
test
add
or
push
popa
mov
fcoml
dec
fisttpll
xchg
mov
call
sbb
into
in
push
push
push
push
stos
mov
add
test
popa
shrl
and
push
cmp
inc
lret
lds
add
in
or
mov
mov
push
pop
ds
shl
jno
inc
push
rolb
inc
mov
popa
call
cltd
dec
push
inc
fildll
sbb
inc
or
bound
ret
sub
xchg
ret
aas
in
leave
mov
sub
ja
push
lds
add
adc
inc
mov
or
inc
insb
popa
aas
xchg
lea
mov
aaa
adcb
jae
sbb
xor
popa
dec
inc
js
movsb
in
jo
push
outsb
hlt
jno
mov
mov
mov
mov
fistl
adc
popa
or
mov
js
mov
jp
or
mov
lods
repnz
loopne
cmp
and
cmp
inc
sbb
inc
or
movsl
daa
insb
inc
xor
or
test
inc
popa
jne
cwtl
and
popa
add
ret
push
add
shlb
sbb
inc
sbb
dec
xor
inc
insb
popa
jnp
pop
jae
or
test
fistl
xchg
es
sbb
outsl
add
in
pop
or
xor
mov
cmp
mov
into
lods
push
xchg
daa
aaa
mov
fsubs
xchg
outsb
js
insb
inc
popa
cmpsl
sub
push
insb
inc
popa
das
nop
add
dec
or
jmp
ret
popa
push
daa
icebp
sbbb
fistps
rorb
pusha
lahf
fbstp
pop
daa
adc
and
daa
mov
popa
adc
add
lcall
enter
push
aam
cmp
arpl
mov
cmp
popa
mov
cmpb
loope
mov
xor
test
sbb
adc
scas
fadds
push
test
jnp
je
inc
jle
jl
or
movsl
stos
push
aaa
add
and
inc
add
inc
push
and
pop
daa
sub
inc
cmp
cmp
push
or
jo
insb
popa
imul
popa
scas
and
adc
adc
cmp
popa
inc
xor
jp
mov
sti
mov
add
popa
mov
movsb
inc
jmp
bound
je
cmp
ss
stos
mov
or
ss
push
push
daa
mov
aas
mov
lds
test
lcall
aas
outsl
pushf
fldt
aas
dec
scas
and
push
aas
mov
pop
rclb
adc
adc
xchg
mov
mov
xchg
fistl
into
mov
roll
dec
jp
popa
mov
pushf
dec
mov
loope
sbb
xchg
pop
shlb
popa
aad
and
cmp
lods
adc
out
jne
adc
sbb
lods
dec
test
mov
popa
or
loop
cmpsl
add
out
out
sub
fcoml
fistl
popa
enter
mov
popa
xchg
adc
popa
inc
adc
pop
mov
insb
popa
xchg
sbb
ja
pop
mov
bound
popa
mov
xchg
push
push
xchg
andb
xchg
and
fsubs
sub
mov
inc
addb
ss
sbb
adc
sub
and
xorl
punpckldq
into
and
mov
and
and
addb
sarl
sbb
inc
sbb
push
notl
inc
movsb
jl
test
stos
adcl
and
pusha
mov
rorl
rcl
inc
mov
mov
fcompl
roll
or
rol
sbb
and
shll
dec
movsl
aam
mov
shrl
shll
add
adc
insb
aaa
xor
push
rcrl
or
shll
cli
pushl
or
or
adc
lahf
sub
jae
mov
adc
es
test
xchg
adc
mov
aam
sub
scas
roll
adc
or
pushf
data16
ljmp
and
adc
or
push
shll
scas
push
fmuls
movsl
add
or
jo
ror
inc
mov
ja
xor
mov
shll
mov
test
cmp
cmpsl
das
popa
daa
xadd
push
add
adc
sbb
and
mov
add
xchg
push
nop
ret
aas
shrl
loope
rorl
or
aaa
rcrl
shrl
bound
sbb
shll
mov
ret
sahf
ficoml
out
shr
push
inc
cmp
loope
shrb
data16
mov
mov
mov
ss
push
mov
roll
xor
icebp
adc
rorl
enter
inc
jl
jl
mov
shll
pop
leave
aad
lds
shr
fmuls
rcll
xchg
xchg
int3
ficoml
outsb
mov
adc
xor
adc
daa
test
and
inc
push
xor
inc
sbb
mov
movsl
lock
add
sarl
sbb
xor
xor
popa
shll
dec
mov
lret
aad
inc
mov
add
xor
mov
mov
sbb
mov
xchg
push
ficoml
dec
rcr
fdivs
add
xor
bnd
pop
imul
sub
mov
jg
xor
adc
iret
shll
ss
adc
test
xchg
push
dec
nop
nop
or
dec
jecxz
or
ficoml
adc
lret
pop
xor
xchg
xor
push
add
jmp
shll
cmp
dec
bnd
mov
rcrl
lds
shrl
sbb
shll
or
hlt
cs
mov
inc
sbb
and
cmp
rclb
mov
sar
dec
ret
fcmovb
push
push
mov
das
inc
loope
mov
shll
stos
adc
enter
sbb
shrl
movsb
and
xchg
sbb
insl
lock
inc
or
enter
xor
or
pusha
aas
fcmovb
adc
ret
rol
icebp
jle
mov
or
rol
mov
sbb
mov
or
inc
sbb
push
shll
xor
iret
cwtl
jo
push
enter
xchg
scas
pop
inc
sbb
rcll
pop
imul
push
xor
roll
insl
or
mov
sti
and
and
das
inc
sbb
push
rorl
cmp
xchg
mov
xchg
roll
adc
rol
call
push
mov
sub
insl
or
aam
inc
mov
or
test
insl
or
test
cmp
sub
cmp
mov
call
shl
call
sbb
jmp
sub
shrl
jmp
lea
test
pop
js
insl
or
pop
jmp
movl
and
loopne
ljmp
shll
ficoml
add
shll
movl
aaa
xor
enter
adc
test
xchg
jmp
fsubrs
fsts
addb
fadds
pusha
mov
and
mov
cltd
or
and
sbb
push
in
fidivrl
and
ss
in
mov
shlb
sbb
jo
mov
pop
ret
rol
pop
dec
test
pushf
push
sbb
nop
addl
rcll
push
mov
or
add
ret
in
or
mov
rcl
sbb
repz
pop
xchg
adc
fldl
and
ficoml
dec
insb
rorl
js
addr16
push
outsb
cmp
mov
sbb
rorl
clc
data16
outsb
sbb
fdivrs
xchg
xchg
pop
mov
mov
xchg
push
shl
pop
mov
fwait
sbb
pop
mov
decl
fadd
jmp
into
xchg
sbb
ficoml
rcl
inc
xor
sti
daa
insb
sub
push
mov
call
shll
roll
cmp
jl
add
sbb
xor
mov
shrl
fbld
cmp
push
xchg
lret
leave
mov
sub
pusha
daa
daa
xchg
xchg
push
mov
adc
cmp
and
mov
or
mov
shrl
dec
sub
ret
rcll
roll
fdivrl
or
jb
mov
or
in
jb
jo
mov
pop
or
or
dec
dec
and
bound
roll
mov
shl
jb
arpl
inc
mov
imul
test
lds
aaa
push
add
jmp
test
insl
or
shll
or
sbb
adc
add
insl
rcl
sti
insl
or
inc
dec
ret
sbb
aam
addl
aam
ss
rol
sbb
aad
popl
ljmp
aad
push
push
lock
pop
mov
sub
adc
add
cli
into
dec
roll
sub
cmp
xor
adc
sbb
sub
out
xor
rcl
and
add
and
add
add
insl
or
cli
dec
or
xlat
inc
or
mov
add
insl
aaa
rcll
ss
outsl
shrb
mov
push
cld
mov
push
fcmovb
sub
xchg
mov
and
sbbb
xchg
inc
shll
rol
jns
and
jmp
push
and
das
inc
mov
sbbb
adc
fadd
push
out
pusha
mov
add
xor
add
or
js,pn
sbb
dec
push
inc
cmp
push
insl
or
mov
ljmp
roll
sbb
insl
or
dec
sub
ss
cmp
inc
mov
or
rol
mov
push
push
test
xchg
add
lea
shll
cmp
push
lea
roll
mov
pop
insl
or
mov
xchg
sbb
stc
in
cmp
adc
fstp
fdivs
test
xor
sbb
shr
and
adc
shll
testl
cmp
push
adc
insl
or
jno
sbb
addr16
mov
add
inc
shl
sub
xchg
frstor
mov
xchg
pop
test
push
test
aam
adc
add
or
fcmovb
mov
or
in
jo
pop
sbb
push
out
adc
shll
pop
xor
adc
fwait
sbb
out
push
dec
jmp
inc
sbb
test
mov
xor
adc
in
rcrl
ret
inc
mov
push
les
xchg
dec
xchg
ret
rol
xor
add
rol
push
test
movsb
mov
ss
inc
sbb
scas
roll
push
pushf
cltd
sbb
sbb
and
sub
sub
out
arpl
push
xchg
xcrypt-ofb
cmpsl
sub
push
sub
jmp
rol
push
cmp
cmp
add
or
out
rcll
ss
xor
adc
shll
inc
roll
dec
hlt
sbb
cmp
sbbl
pop
jno
push
mov
or
insl
or
lock
pop
hlt
push
sbb
xchg
pusha
xchg
insl
shll
test
lea
test
rorl
je
mov
lea
jmp
es
shrl
out
push
fistps
loopne
pusha
mov
shrl
fdivrs
xchg
shrl
aaa
into
pop
jmp
push
mov
and
fs
and
push
scas
adc
lods
pusha
xor
das
jnp
fcomp
xor
rcrl
jmp
fldln2
es
jb
cmp
and
mov
and
popa
jmp
xchg
adc
or
sub
and
adc
mov
inc
jo,pt
shr
leave
into
add
into
mull
insb
roll
and
int
xor
shll
in
inc
cmp
mov
xor
push
loope
mov
test
inc
sbb
and
push
aaa
or
shl
out
test
push
sbb
pop
roll
mov
ret
shrb
fucomp
sbb
lea
sarl
inc
sbb
adc
dec
fmuls
mov
sbb
rcrl
or
insl
or
pop
iret
or
stos
cmc
inc
loop
aad
call
adc
cli
adc
inc
ss
xor
cwtl
pop
and
rclb
mov
sub
sbb
mov
outsb
push
and
pop
inc
sbb
ficoml
rcll
or
cmp
lea
test
inc
pop
pop
movsl
les
aaa
rol
xchg
insl
or
sbb
cmp
sub
jmp
add
add
push
or
imul
adc
push
out
sahf
out
adcl
mov
es
push
jecxz
out
jns
out
sbb
and
dec
repz
and
sarl
inc
lret
xlat
push
and
fidivs
cld
pop
es
xchg
repz
mov
push
sti
ficomps
lcall
adc
test
sub
or
rcr
roll
inc
push
rol
aad
cmp
scas
push
mov
mov
add
inc
sbb
rcr
inc
or
adcb
sarl
and
aam
roll
xchg
cmp
cmp
push
xor
adc
jg
adc
or
jge
bound
adc
lods
sbbl
mov
push
mov
xor
sub
rol
fisubrl
inc
mov
sbb
test
out
inc
sbb
shll
xor
adc
push
push
adc
push
inc
shll
cmp
adc
push
pusha
js
rcl
out
ljmp
sbb
shll
roll
popf
notb
shrl
mov
in
rol
adc
xor
lods
pop
sbb
aaa
movsb
push
rcll
adc
hlt
xor
xor
sar
xor
add
ret
push
inc
jns
xchg
mov
sbb
jae
mov
outsl
mov
cmp
jmp
pusha
push
roll
cmp
sub
rcl
roll
mov
sarl
and
arpl
push
out
lea
pop
mov
mov
sbb
lds
rcrl
ret
mov
pushf
roll
popf
mov
ret
rol
adc
ror
xor
ss
lods
push
mov
and
sarl
rorl
loopne
int3
sahf
xor
lds
xor
dec
sub
aad
aam
roll
sti
push
mov
test
bound
sbb
imulb
roll
outsb
jge
cmp
mov
add
sbb
test
int
push
or
ss
inc
sbb
roll
insl
or
fisttpll
shll
test
push
jo
mov
das
ss
and
mov
inc
mov
movsl
push
and
inc
mov
mov
add
mov
add
and
jbe
sbb
shr
ret
je
int3
and
adc
or
mov
sbb
shl
ss
push
dec
sbb
push
inc
inc
sbb
shll
adc
repnz
jl
adc
aad
jecxz
push
sti
sbb
frstor
and
mov
mov
mov
movsb
shll
inc
mov
adc
shrl
shll
addl
mov
sarl
rorl
xchg
inc
cmp
popf
sbb
jnp
and
cmovbe
rorl
shlb
fcomps
fcoms
stos
inc
sbb
push
rcll
mov
sub
into
leave
xlat
sbb
xor
shll
ss
dec
imul
leave
mov
loope
mov
ja
jne
xchg
sbb
roll
scas
rol
aam
mov
mov
mov
roll
shll
push
sbb
mov
or
jbe
flds
and
sbb
jnp
inc
push
xor
adc
cmp
inc
sbb
je
mov
shll
stos
adc
xor
mov
mov
xor
push
fwait
test
xchg
addr16
orb
inc
sbb
mov
mov
fadds
pusha
rol
lahf
sbb
mov
test
xor
xchg
fs
mov
xor
adc
jp
pop
push
cmpsl
push
add
test
ret
rcrb
mov
xchg
mov
inc
test
ds
push
sbb
push
push
sahf
notl
dec
jmp
xor
shll
mov
cwtl
nop
and
dec
dec
inc
dec
dec
roll
or
roll
dec
and
and
adc
jb
add
jno
fs
push
sbb
mov
mov
js
adc
xor
sbb
push
les
add
add
roll
dec
dec
mov
add
and
cmc
aam
and
imul
mov
pop
mov
add
push
and
mov
fucomip
mov
jmp
inc
sbb
or
adc
shlb
inc
sbb
fidivrl
or
mov
or
jne
cld
inc
mov
xor
adc
shrl
sbb
jmp
pop
decb
ficoml
fdivp
xadd
in
shlb
mov
xor
xchg
fnstsw
shrl
rcll
shll
lds
pop
int
inc
sbb
ffree
rcll
lea
test
adc
adc
in
add
xor
cmpsl
jb
mov
cli
inc
sbb
in
nop/reserved
shll
mov
adc
pop
or
mov
mov
cwtl
roll
or
jnp
dec
fdivs
sbb
and
rol
cmpsb
sahf
stc
jne
jmp
sbb
inc
cmp
push
push
adc
xchg
adc
mov
aaa
rcrb
xlat
push
push
or
or
inc
fldt
push
or
insl
shll
jns
andl
insb
xchg
push
inc
cmp
sub
fisubrs
xchg
int
ss
dec
jno
cli
sbb
dec
rcll
jmp
push
loop
insl
or
pop
or
adc
adc
fcmovb
cmpsl
cmp
inc
sbb
xor
insl
roll
jns
and
nop
add
xchg
sbb
shrl
adc
sub
insb
and
sbb
xor
roll
adc
xor
xorb
imul
test
push
push
xor
adc
lods
roll
xchg
or
movsl
adc
dec
push
daa
pushf
or
loope
adc
jo
int3
pop
daa
bound
xchg
out
inc
add
xchg
push
mov
adc
vorpd
call
rolb
mov
ret
inc
sbb
inc
outsb
shrl
and
leave
in
rol
out
out
pop
pop
xor
adc
push
ror
fisttpll
pop
insl
or
and
je
jns
pusha
mov
bound
cmp
roll
insl
or
shll
pop
or
pop
dec
dec
lea
ret
and
xor
adc
and
cmp
adcl
fcmovb
xlat
imul
sbb
shr
mov
xchg
shll
imul
inc
add
insl
or
lea
test
fsubs
xor
jg
push
rcr
push
dec
leave
cmpsb
in
bound
or
roll
out
jae
stos
rorl
icebp
pop
insb
pop
xor
adc
shrb
mov
shll
inc
jo
shll
inc
enter
sbb
or
ficoml
outsb
inc
sar
adc
rcll
aas
fcmovb
push
ds
cmp
shrl
add
adc
int3
mov
aam
in
add
ficoml
rcr
lods
xor
mov
add
test
shll
mov
sub
roll
dec
mov
add
adc
push
xor
shll
mov
xchg
pop
sbbb
shll
and
sbb
mov
mov
xchg
out
xor
stos
out
repz
ds
xchg
imul
mov
push
call
push
je
into
adc
sub
mov
pop
mov
mov
or
shll
adc
push
xor
xor
outsb
adc
shrl
xor
adc
rol
test
test
stos
or
lea
ror
mov
xor
inc
les
shr
mov
xchg
mov
push
cmpsb
loope
dec
repz
adc
lock
push
mov
or
roll
lret
mov
stos
andl
lock
or
insl
or
and
dec
bound
rolb
mov
imul
sbb
sbb
roll
and
pop
or
bound
test
insl
inc
push
pop
aas
sbb
cwtl
shlb
mov
and
orl
insb
jns
loope
mov
jp
mov
sub
jne
cli
enter
push
sbb
ret
push
push
sbb
rcrb
shll
insb
dec
add
dec
inc
cmpsl
test
mov
jnp
and
cwtl
stos
adc
ss
xor
adc
jg
ret
rol
rcll
and
ficoml
in
sbb
lret
dec
insl
add
fistps
out
or
outsb
sbb
push
mov
sbb
mov
loope
sarl
inc
cmp
sbb
aaa
or
or
sub
sbb
je
or
push
cs
push
mov
loop
nop
pusha
addr16
rorl
xchg
leave
xor
mov
sbbl
jmp
pusha
push
sbb
enter
mov
rol
jns
mov
xor
sub
xchg
xor
or
mov
cmp
inc
sbb
push
adc
xor
shlb
popa
movsb
aam
dec
xchg
mov
jecxz
rol
add
mov
ficoml
add
lods
mov
out
rcll
test
add
add
cmp
stos
sub
adc
xchg
fnstsw
imul
push
pop
inc
sbb
test
popa
mov
pushf
inc
sbb
rcr
mov
pop
repnz
mov
cmp
ficoml
rcrl
or
or
lea
test
scas
sbb
roll
or
loop
push
mov
stos
sbb
mov
or
sbb
push
jns
lds
les
sarl
mov
lods
cmpsb
rcrl
cmpsb
pusha
rcrl
roll
test
sbb
ja
roll
jne
add
lahf
adc
pusha
or
push
and
adc
jmp
imulb
les
sub
mov
push
or
scas
sbb
sbb
push
sbb
mulb
shrl
jo
rcl
mov
xchg
dec
and
movsb
xchg
push
add
adc
pop
inc
in
faddp
shrl
inc
jle
push
gs
out
xchg
cmpsb
int
jl
roll
adc
scas
push
outsl
adc
mov
insl
or
and
sub
test
shlw
sbb
lret
into
pop
fisubrl
rorb
and
sbbb
adc
sbb
cmp
xchg
push
inc
shll
shr
pop
pop
adc
and
fcmovb
cmpsb
nop
inc
cmp
das
test
xchg
cld
jmp
das
adc
rcll
sarl
push
rorl
sbb
ss
mov
pop
mov
inc
negl
sbb
push
push
sbb
rcrl
mov
xor
shll
rcrl
adc
add
aas
aaa
push
pop
push
iret
sbb
shll
imul
add
ljmp
test
pop
inc
add
mov
and
and
adc
inc
test
cs
or
xchg
int3
add
roll
ret
rcr
pop
and
movsb
pusha
xchg
xchg
aad
inc
mov
ret
aam
inc
roll
inc
jo
mov
dec
add
push
or
mov
sbbb
sbb
xor
push
pop
enter
push
pop
das
stos
sub
ret
iret
xchg
and
fsubs
inc
sbb
and
into
lods
push
and
pusha
shrl
cmp
fcmovb
cmpsl
jl
shrl
cld
and
lea
add
adc
sub
pusha
movsl
hlt
pop
or
lock
and
cmc
add
insl
or
adc
sub
sbb
ret
xor
inc
xchg
mov
jns
inc
clc
jmp
xchg
scas
inc
sbb
sarl
or
sbb
loope
daa
and
ss
xchg
sbbl
rcrl
ficoml
into
sub
fcmovbe
rclb
scas
or
scas
roll
mov
sbb
rorl
roll
sbb
sbb
xchg
inc
sub
inc
mov
roll
adc
adc
add
xor
pop
mov
xor
ret
fcmovb
mov
sbb
in
inc
sbb
add
roll
addb
rorl
mov
sbbl
add
mov
repz
push
xchg
xchg
out
repz
sti
inc
adc
sub
push
imul
mov
push
insl
or
or
jl
push
rol
inc
sbb
std
add
lcall
xor
push
rorl
sbb
or
insl
sarl
ss
pusha
mov
jecxz
outsb
mov
xchg
adc
push
outsl
and
sbb
rcll
shlb
inc
rcrl
pop
nop
nop
inc
adc
rcl
jo
aad
shll
push
ficoml
push
push
shrl
or
mov
sbb
addb
push
stos
inc
fisubrs
mulb
testb
popa
push
adc
in
fmull
movsb
outsl
add
idivb
out
push
jecxz
bound
out
fxam
pop
cwtl
mov
push
push
dec
lea
jo
pop
shrl
push
jbe
mov
add
mov
out
mov
popf
jns
push
push
and
cmp
rorl
jle
inc
mov
sbb
adc
push
adc
ficoml
sar
pop
and
adc
inc
sbb
xor
inc
sbb
rcrl
pop
mov
bound
roll
and
adc
mov
xchg
sti
and
data16
jecxz
adcl
rol
mov
mov
add
cmp
mov
movsl
jb
movsl
add
adc
fwait
add
mov
roll
vphaddbw
sbb
cmp
mov
inc
xor
test
push
dec
mov
push
shrl
test
lea
add
rcrl
adc
mull
data16
and
push
ret
mov
or
or
sub
xchg
dec
jb
pusha
mov
shll
mov
ss
adc
insl
or
push
fbld
test
push
sarl
jb
push
mov
sarl
cmp
movsb
mov
and
mov
ja
imul
and
es
sub
test
or
shll
jmp
pop
call
or
ficoml
mov
push
mov
rorl
out
add
jnp
mov
ljmp
mov
pop
loope
xchg
rcrl
rorl
sar
and
add
or
inc
jmp
loopne
mov
nop
push
push
mov
test
lea
add
iret
rcrl
push
push
push
sbb
aam
inc
sarl
aaa
fs
push
sbb
ficoml
outsb
repnz
shl
lods
push
fcomps
or
adc
push
mov
es
mov
ss
leave
insl
or
jb
sbb
pop
insl
push
push
cmp
push
dec
rol
jg
xor
bound
inc
sbb
xchg
xchg
rcrl
fsubl
sbb
push
cmp
and
icebp
xor
ss
push
pop
roll
dec
insl
or
roll
add
sbbb
shl
inc
addb
push
pop
mov
shl
xor
out
loop
push
lods
push
cmp
ficoml
shl
inc
sbb
sti
adcb
cmpsl
push
sbb
dec
sbb
jg
push
insl
push
sbb
cld
sbb
cmpb
insl
or
shll
or
push
jno
insl
shll
sbb
out
imul
mov
add
sbb
xchg
pop
insl
or
rorl
push
fadds
xchg
pusha
out
push
rol
xor
ret
adc
and
add
insl
or
jmp
and
shll
xchg
inc
mov
rcll
sar
lahf
sub
in
shrb
shl
xchg
addl
shrl
lea
mov
aad
xchg
dec
arpl
pop
dec
inc
pushf
ss
jo
repnz
loope
mov
shll
sbb
mov
pop
les
mov
les
ficoml
pop
js
inc
sbb
sbb
or
roll
mov
rol
xor
cmp
sub
dec
push
and
stc
or
inc
les
push
and
das
bound
lods
adc
push
test
mov
shrl
pop
mov
roll
sbb
out
mov
roll
fcmove
mov
mov
shll
out
mov
adc
xchg
int
push
push
cmpsl
stc
xor
imul
sub
int
jns
push
xchg
cmp
shrb
push
jo
iret
repz
push
jno
cs
rorl
mov
sbb
dec
ficomps
inc
movsb
jns
flds
loope
inc
shll
rcll
add
sarl
rorb
cmpsb
pop
inc
pop
pop
cmc
jle
sbbb
rcl
nop
push
sub
pop
ficoml
xchg
push
sub
lret
or
rcll
or
xchg
popa
inc
jae
or
xor
repnz
adc
fistpl
movsb
test
adc
popa
pusha
and
pop
adc
cmp
cmp
clc
mov
in
add
jg
fidivrs
test
mov
pop
adc
mov
nop
xorl
and
push
shr
lods
loopne
loop
adc
popa
sub
pop
adc
dec
adc
andb
adc
pop
jno
sub
pop
je
popa
mov
popa
jne
adc
andb
dec
and
or
popa
mov
popa
cmp
mov
insb
add
adc
aad
movsb
push
push
push
in
xchg
add
popa
or
lcall
pop
ljmp
mov
dec
mov
push
inc
cmp
repnz
lds
push
and
mov
dec
mov
push
inc
or
cs
inc
push
cmp
sbb
dec
or
adc
je
pop
scas
or
iret
add
mov
xchg
xchg
xor
in
pop
jg
push
cmpsb
ljmp
or
cltd
andb
push
push
and
and
je
and
popa
push
cltd
jmp
and
movsb
push
inc
push
pop
lods
or
sbb
sbb
adc
mov
sbb
adc
pop
faddp
push
jno
mov
popa
mov
add
test
jg
pop
mov
or
adc
jo
adc
mov
push
popa
lahf
test
mov
cmp
frstor
subb
ret
xor
mov
es
mov
mov
popa
adc
push
enter
adc
add
jno
pusha
or
and
stos
das
pusha
nop
rolb
popa
call
es
xchg
cmp
pop
xchg
popa
mov
inc
popa
push
fdivrl
movd
popa
mov
dec
push
imul
test
sub
push
nop
ret
pop
popa
dec
sub
fcompl
or
adc
push
ja
dec
popa
subb
aaa
mov
dec
pop
adc
pop
dec
adc
dec
fbld
test
jo
mov
xchg
popa
cmp
outsb
lret
mov
and
stos
mov
test
test
sub
popa
inc
push
mov
aas
pop
or
or
push
mov
dec
adcb
scas
popa
mov
js
sbb
popa
adc
push
jno
popa
hlt
sbb
jo
xchg
add
cmp
add
xchg
and
adc
in
in
sbb
or
dec
lock
or
fsubr
inc
popa
sbb
add
rcrb
loop
and
xor
dec
adc
popa
or
xor
adc
push
cs
dec
xor
inc
jne
popa
cltd
jo
adc
popa
xchg
and
adc
and
ja
popa
loop
and
fnstcw
loop
popa
fisttpl
popa
and
mov
adc
jo
adc
inc
push
loope
push
push
rcrl
push
sbb
xchg
testl
orb
dec
popa
adc
jecxz
pop
pusha
cld
add
je
add
xorl
es
fs
sbb
pusha
adc
ret
dec
xor
test
popa
pop
pop
inc
jo
ljmp
popa
jg
sbb
scas
dec
andb
dec
adc
inc
popa
pop
adc
push
adc
adc
adc
jp
cld
loopne
aas
test
add
xorl
xchg
adcl
push
ror
shrb
jnp
shll
sbbl
call
pop
test
push
call
or
adc
inc
sub
call
push
push
or
or
sbb
mov
xchg
mov
shrb
sub
or
xchg
pop
adcl
jo
pop
int3
sbb
xchg
cld
jnp
es
fiadds
xchg
mov
scas
or
loopne
andl
ret
xchg
xorl
or
cmp
aaa
push
call
shlb
dec
sub
bound
cwtl
and
add
or
jbe
lods
pop
xor
xorl
mov
xchg
cmpsl
pop
fisubrl
stos
daa
pop
adc
add
add
add
mov
push
sbb
lcall
adc
jo
and
arpl
mov
andl
pop
add
fisubs
cltd
scas
incb
lods
push
lcall
dec
xorb
orl
xchg
and
adc
pop
xorb
bound
pushf
dec
sbb
test
repz
decl
rolb
adc
shrl
push
jmp
stos
adc
aad
mov
imul
add
subb
mov
dec
adc
ret
and
clc
mov
or
dec
rolb
cmpl
adc
push
or
jecxz
pop
or
or
or
mov
andl
and
lcall
mov
and
cmp
call
pop
add
add
cwtl
fs
add
or
sub
xorb
shll
add
orl
add
jo
cmpl
jmp
xchg
add
add
push
or
xchg
add
and
mov
repz
je
sbb
mov
dec
addb
adc
xchg
in
loopne
and
aaa
adc
orl
sub
mov
test
or
push
andl
and
mov
or
sbb
inc
push
mov
and
jno
ret
dec
add
or
and
sbbl
push
enter
adc
xchg
and
push
or
add
addl
dec
cli
daa
arpl
and
fsubl
cwtl
and
cmpl
test
mov
mov
push
aaa
xor
sbbl
xor
int
inc
mov
mov
sti
add
pusha
shll
xorl
addl
sbb
push
mov
jo
cmp
and
jns
insl
pushf
or
and
mov
and
cmp
sbb
and
cmpl
xchg
add
push
jne
dec
sbbl
push
or
or
std
add
sub
mov
xchg
addl
shrl
xor
mov
in
dec
xorb
adcl
orl
adc
pop
dec
dec
orl
sahf
jo
call
push
dec
addb
and
imul
stos
push
orl
add
cwtl
and
xchg
imul
push
scas
cmpl
inc
xor
arpl
or
imul
popf
cmpl
adc
jne
adc
xor
cmp
or
dec
adc
cmp
addl
mov
dec
adc
shlb
addl
addl
inc
test
cmpsl
jbe
test
or
cmp
dec
adc
dec
adc
pusha
gs
fbstp
ja
dec
adc
xchg
jge
sarb
fwait
es
sbbl
xorb
jp
enter
sub
test
xor
ret
cmpl
es
push
add
lret
xor
lahf
orl
or
or
dec
adc
and
or
xor
or
subl
int3
inc
xchg
add
testb
adc
roll
dec
addl
adc
and
and
mov
fildl
insb
dec
xchg
aam
xor
and
mov
mov
rcl
scas
jl
mov
jbe
xorb
jmp
lea
or
xorl
test
push
cmp
bound
jl
xlat
addl
and
and
js
addl
dec
andl
or
push
fcoms
mov
push
dec
push
shll
cld
jp
xor
orl
adc
ret
xchg
icebp
mov
adcl
add
sahf
mov
shlb
popf
dec
push
push
inc
pop
sbb
movsb
rolb
jo
orl
sbb
ficomps
xorb
fsts
mov
cmp
jle
addl
dec
xchg
adc
and
or
cmpsb
orl
add
add
pusha
setp
into
push
mov
pushf
dec
addb
and
subl
out
or
push
pop
mov
neg
in
rcll
das
and
nop
push
xchg
push
nop
pop
movsl
out
imul
push
fmull
pop
jecxz
push
add
mov
or
adc
andl
dec
adc
orb
imul
int3
inc
data16
insb
pop
add
push
xor
inc
sbb
fisubs
btrl
test
shll
ds
and
sub
loopne
xorl
and
sbb
ds
dec
adc
dec
andb
xchg
push
repnz
std
add
sbb
dec
adc
sbb
or
pusha
add
xorl
andl
sbbl
add
mov
ret
or
test
jne
add
or
dec
andb
icebp
adcb
pushf
sub
out
pop
popa
inc
loope
cwtl
cmpl
pop
pop
xchg
add
les
cmpsb
scas
mov
sbb
dec
adc
mov
ja
daa
jecxz
or
and
push
call
fcomp
ja
fsts
and
test
mov
ret
daa
addl
mov
and
jnp
or
dec
andl
xorl
inc
adcl
test
lock
sub
scas
dec
and
or
adc
adcl
xchg
xor
cwtl
and
mov
or
add
add
mov
icebp
dec
xorb
push
add
and
fstpl
and
out
push
inc
xor
jb
arpl
xchg
add
inc
adcl
iret
adcl
lods
mov
fiadds
lods
lcall
dec
adc
push
adc
dec
adc
pop
movsl
aad
in
sub
adc
ret
sarb
and
cmp
cmpl
ja
cmp
jo
clc
sbb
jo
pop
cmp
testl
xorl
adc
adc
rorb
loope
dec
push
pop
xor
rcll
add
mov
dec
adc
test
loope
xor
aad
and
shlb
or
jmp
orl
dec
add
subb
add
subl
xchg
or
dec
adc
and
and
lds
adc
and
xchg
and
jmp
mov
dec
and
cmp
dec
call
pop
shll
test
mov
xorb
sbb
hlt
mov
sbbl
inc
orl
add
andl
jp
js
xchg
and
and
jg
mov
jno
push
adc
push
sub
dec
andl
xchg
int3
add
orl
adc
jge
xor
pop
xor
orl
and
shll
xlat
and
mov
inc
adcl
sbbl
mov
ljmp
mov
or
xchg
andl
and
and
fisttps
xor
enter
jns
sub
sbb
and
dec
adcl
data16
andl
xorl
xchg
and
pop
adcl
sbbl
cmp
sbb
and
cmp
das
and
inc
push
bt
andb
lock
adc
xor
in
dec
xor
adc
lds
adcl
addl
and
testl
fisttpll
dec
xorb
xchg
add
popa
scas
cmp
adc
adc
dec
adc
xor
sbb
pop
adc
ficoms
in
hlt
xchg
mov
bound
adc
inc
add
xor
adc
div
addl
sahf
xor
mov
pop
xor
rcrb
xchg
add
sbb
repz
push
lcall
sub
pusha
and
scas
ror
orl
fsubl
nop
nop
decl
pop
fldcw
and
inc
push
loop
data16
ret
orl
data16
inc
mov
dec
cmp
aad
add
in
adc
sbbb
das
or
cwtl
daa
arpl
out
bound
inc
xor
daa
or
rorl
test
xchg
push
push
addr16
scas
orl
cwtl
and
cmp
cld
aaa
inc
xor
ret
inc
add
adcl
xchg
mov
insb
xchg
add
gs
push
push
and
adc
add
fadds
in
xorb
jns
in
add
and
call
cmp
imul
cmp
dec
add
or
push
cs
jmp
adc
mov
pusha
out
and
jo
int3
push
and
inc
faddl
mov
outsl
xchg
add
cld
arpl
in
adcl
cmp
lcall
push
sbbb
fsubrs
cmp
repnz
pusha
add
sub
ret
mov
add
push
rcr
out
cwtl
inc
or
pop
mov
popa
mov
xor
and
dec
sar
add
xor
xchg
hlt
dec
xchg
test
xchg
jo
aam
lods
pushf
repnz
leave
or
mov
sub
or
movsl
jb
jl
xor
cmp
fs
jno
lret
test
bound
and
adcl
es
ret
xor
dec
mov
shll
ret
and
mov
sbb
push
dec
dec
rcl
decb
xlat
sub
sbb
adcl
inc
sbb
fbstp
add
sub
xlat
mov
xchg
jo
rorl
jo
sbb
adc
shll
sarl
inc
mov
out
xor
cltd
xchg
add
and
pop
pop
enter
aam
leave
add
and
orb
enter
jl
xor
in
dec
add
test
add
fcomps
lods
into
add
mov
sar
inc
or
mov
idivb
call
daa
push
ret
rcll
mov
jmp
addl
and
or
xor
and
or
adcl
or
jo
mov
cmpsl
in
inc
jg
mov
fidivrs
xchg
add
or
fadd
and
loopne
outsb
dec
shll
je
xchg
sub
add
mov
test
adc
fidivrl
sub
mov
dec
lret
cmp
xor
jb
sub
add
adc
movsl
dec
shl
inc
jmp
loop
and
arpl
dec
orb
sub
loope
add
push
xchg
pusha
repz
mov
into
loope
int
dec
js
loope
sub
rcrb
loope
fwait
shl
loope
xchg
sub
xlat
sub
popf
mov
loope
je
pushf
xchg
test
sub
add
push
pop
shl
cwtl
dec
xchg
dec
jno
loope
aad
xor
mov
test
mov
lock
loope
ret
push
loope
jmp
loope
pop
push
jo
adc
loope
les
dec
adc
mov
mov
loope
jns
sbb
xchg
loope
inc
cmpsb
ret
sub
inc
loop
movsb
dec
sahf
sbb
or
mov
mov
and
xchg
loope
loope
xorl
mov
pushf
xchg
add
pusha
test
or
and
sbb
dec
jno
adc
popa
andb
test
or
push
mov
and
sub
mov
or
push
popa
dec
jge
dec
stos
dec
addb
mov
jnp
xchg
jo
int3
inc
add
inc
cltd
mov
stos
pop
push
aam
int3
inc
hlt
outsb
add
dec
adc
xchg
and
lea
push
addb
push
xor
adc
dec
adcb
pop
xchg
pusha
adc
mov
gs
sarl
add
and
int3
add
int
inc
mov
inc
dec
ret
inc
dec
cmpl
xchg
and
and
mov
sbb
test
dec
sbbb
adc
and
xchg
add
xor
pop
repz
xchg
mov
lea
mov
rcll
adc
sbb
sbb
inc
xchg
ret
push
add
cwtl
and
inc
dec
sbb
lds
xor
inc
inc
js
push
insb
xchg
and
js
and
adc
xchg
jnp
dec
loopne
pusha
xchg
inc
scas
loope
pop
xchg
inc
les
repz
dec
cmp
sub
pop
xchg
xchg
jo
inc
lcall
test
cmp
inc
out
mulb
and
xor
add
and
int
test
inc
es
fnstsw
shll
ret
dec
aam
push
inc
pop
fisttps
jo
adc
sahf
mov
movsl
push
jbe
xchg
or
adcb
int3
xchg
add
push
fs
add
int3
inc
push
inc
inc
push
xor
es
dec
ret
addb
push
mov
cmp
lcall
andb
and
fwait
mov
jl
int
test
and
fldcw
adc
stos
xchg
mov
pop
clc
and
dec
imul
jae
popa
jns
addb
fistpl
and
mov
dec
ret
jmp
xor
xor
and
inc
popa
adc
mov
add
mov
popa
xor
dec
pop
push
push
xor
popa
xchg
and
inc
sbb
sub
inc
incb
ret
jp
stc
jmp
dec
adc
faddl
cmpsb
divl
sub
xor
imull
mov
jle
imul
mov
and
cmp
and
hlt
aad
mov
sub
mov
pop
xor
inc
cmc
inc
jnp
pop
mov
inc
inc
fsubl
inc
mov
loopne
js
xor
mov
insb
iret
mov
add
push
aad
dec
inc
testl
sub
mov
es
int3
xchg
add
icebp
cmp
inc
sub
mov
push
das
cmp
jl
xchg
pusha
sets
jb
adc
mov
inc
fsubs
sbb
inc
xchg
pusha
add
sub
pop
inc
roll
fdivs
xor
xchg
adc
gs
mov
inc
mov
mov
popa
xor
inc
jmp
jo
add
dec
adc
jo
in
repnz
inc
cmp
xchg
add
xchg
inc
mov
loope
jno
push
inc
dec
adc
adc
mov
loop
sub
mov
mov
push
inc
aas
xchg
inc
mov
rorl
inc
or
and
les
and
adc
sbb
ret
nop
sbb
mov
lock
outsb
repnz
data16
lcall
add
sub
mov
and
stos
rolb
jg
imul
cwtl
and
daa
dec
ret
adc
jo
jg
cmp
jns
mov
loope
fwait
jno
inc
ret
add
add
dec
inc
mov
scas
adc
rcl
inc
pop
dec
shrl
rcll
xor
outsl
sbb
sub
les
mov
loope
cmp
cmpsb
or
mov
mov
jecxz
sbb
cwtl
and
dec
jo
adc
mov
rolb
shlb
shrl
adc
mov
inc
ror
adc
xchg
and
dec
sub
push
inc
dec
sub
and
into
test
lcall
loope
jecxz
or
mov
mov
push
mov
inc
js
push
xor
inc
xor
adc
movsl
inc
sbb
sub
sub
lods
ja
mov
repz
push
mov
pop
inc
daa
leave
jnp
inc
int
inc
mov
mov
inc
pusha
xchg
and
std
es
sub
adc
and
fiadds
lods
push
inc
loope
les
repnz
mov
inc
fnstenv
mov
les
dec
shrl
shrl
sbb
inc
ss
adc
out
inc
or
xchg
rorb
dec
adc
xlat
jp
lods
dec
adc
lods
mov
push
and
jo
inc
and
scas
test
test
test
int
inc
pop
mov
popa
sbb
mov
inc
and
and
test
or
xchg
inc
push
lahf
xchg
int
add
mov
in
push
mov
mov
mov
lcall
int
sub
and
bound
mov
popa
lock
dec
inc
and
lods
dec
rcll
cwtl
inc
mov
mov
inc
dec
adc
and
push
xor
and
js
mov
loop
into
xchg
test
lock
mov
pop
xchg
inc
inc
int
add
push
inc
dec
ret
sub
and
scas
sbb
inc
pushf
or
cli
loopne
xchg
and
pop
lcall
push
mov
dec
inc
sub
js
inc
dec
adc
and
add
jbe
adc
in
out
adc
push
int3
inc
mov
xchg
and
xor
xchg
loope
pop
xchg
inc
jmp
and
sub
add
dec
inc
std
cmpsl
pop
lahf
and
inc
jmp
push
pop
loope
adc
add
cmpsl
xor
and
add
jnp
subb
sub
outsb
sbbb
jne
pop
enter
push
insl
out
sub
mov
loope
xchg
add
je
outsb
inc
or
data16
mov
inc
jmp
xchg
add
mov
add
fbld
inc
push
mov
cwtl
and
inc
and
inc
and
mov
add
sub
inc
dec
ss
int
test
shrl
mov
inc
inc
lret
arpl
ja
xor
xchg
and
in
inc
pop
xchg
jo
mov
cmp
inc
ja
fisttps
sbbl
shll
jnp
sarl
imul
lret
test
lcall
int3
xchg
inc
sbb
pop
xchg
and
inc
in
or
lds
xchg
add
cmpsb
mov
pop
pop
add
scas
dec
adcb
xchg
or
inc
scas
sbb
and
mov
inc
clc
mov
out
push
inc
das
inc
pop
test
push
sbb
dec
sbb
inc
jbe
loope
aad
inc
sahf
xor
add
xchg
and
or
add
push
push
add
sbb
int
sarl
or
xchg
out
inc
xchg
jo
and
xor
stos
pop
inc
pop
mov
test
xor
and
mov
inc
xchg
and
andl
aad
pop
xchg
inc
mov
inc
push
xor
lods
pop
inc
push
cld
loope
cs
jno
test
push
mov
inc
push
int3
imull
and
push
and
cwtl
and
and
andb
and
mov
pusha
scas
cwtl
inc
test
or
icebp
pop
and
push
pushf
fistl
dec
mov
inc
call
inc
aaa
loopne
aam
dec
inc
loope
sbb
enter
push
mov
inc
xor
push
incb
and
xor
jl
add
out
sbb
bound
sbb
outsl
push
mov
push
jl
push
call
xor
sub
adc
fnstsw
ss
mov
add
les
cmp
and
sub
inc
sub
mov
add
push
and
les
incb
sbbl
js
xchg
or
add
dec
ret
jae
inc
and
andb
es
stos
inc
mov
push
cli
or
and
lcall
or
or
and
cmp
and
bound
inc
int3
xchg
test
and
inc
and
jmp
loop
cmpsl
cwtl
inc
or
sahf
stos
pusha
jp
mov
adc
pop
xchg
inc
rcll
dec
int3
xchg
inc
clc
cltd
and
push
mov
inc
repnz
adc
sbbb
inc
dec
ret
adc
adc
das
push
imul
pushf
and
mov
ficomps
nop
cmpl
insb
inc
sub
sbb
sbb
adc
ret
inc
xor
dec
ret
inc
adc
adcb
inc
push
push
mov
rorl
loope
mov
mov
sbb
dec
mov
pushf
cwtl
inc
cmp
or
push
inc
push
adc
and
cmp
and
rolb
inc
or
fildl
call
and
adc
and
pop
in
shrb
lock
subb
es
sbb
fwait
call
xchg
in
pop
sarb
je
pop
xchg
pusha
daa
loope
xchg
push
xchg
outsl
push
lret
jo
lds
mov
cmp
adc
inc
call
inc
add
scas
pop
xchg
adc
mov
and
dec
sub
loopne
lcall
mulb
push
inc
sub
push
xor
pop
or
xchg
jb
pop
xchg
add
xor
add
sub
stc
push
int
adc
add
cwtl
and
inc
and
data16
and
es
mov
mov
addr16
adc
inc
jmp
dec
push
dec
pop
xor
sub
js
enter
inc
shrb
inc
test
gs
inc
nop
mov
or
inc
add
and
dec
inc
xchg
and
xor
repz
out
ror
push
dec
out
repz
popa
data16
pop
stos
scas
push
mov
adc
mov
aas
pop
dec
ja
sub
inc
and
hlt
lcall
mov
sarl
mov
or
pusha
jb
add
add
je
jnp
cli
xchg
or
xchg
inc
shrl
sbb
rol
subb
inc
or
popa
sbbb
add
dec
jo
inc
fsub
adc
fimuls
mov
outsb
bound
dec
xor
adc
into
and
add
mov
sti
pop
mov
adc
dec
and
pop
bound
adc
add
daa
mov
inc
adc
ret
xchg
inc
insb
sbb
das
dec
inc
mov
pop
xchg
inc
es
and
bound
and
jmp
adc
mov
iret
jecxz
pop
mov
popa
leave
dec
inc
dec
xor
push
out
rcl
shrl
mov
aaa
int
test
sub
adc
pop
inc
dec
ret
sub
or
inc
inc
fs
pop
mov
shrl
inc
dec
adc
xor
idiv
adc
and
inc
xchg
add
dec
adc
pop
xchg
lock
push
inc
xor
outsb
and
inc
mov
rcrl
lret
pushf
inc
adc
lods
add
lea
inc
sbb
push
push
lret
push
roll
scas
and
sub
lahf
pop
mov
shl
mov
inc
sub
pop
xchg
xchg
lock
xchg
sub
test
movsl
pop
inc
int3
inc
mov
or
inc
dec
or
mov
sub
inc
push
faddl
les
aas
call
adcl
orl
sbb
mov
test
adc
jo
ret
inc
and
daa
or
cmp
dec
mov
xor
and
lods
sub
jmp
popf
xchg
jne
adc
add
or
dec
dec
jp
or
fiadds
push
add
adc
xor
dec
sbb
cmpl
mov
jo
or
ret
sbb
mov
mov
xchg
pop
push
popf
xor
mov
push
pushf
xor
or
mov
push
daa
sub
les
cmp
add
adc
push
aam
inc
mov
arpl
and
rorb
jbe
jno
sbb
push
call
lahf
xor
in
je
mov
adc
mov
into
mov
psubsb
test
fdivl
add
jbe
lret
out
or
jecxz
mov
or
sbb
aam
cld
bound
daa
or
adc
inc
les
lahf
or
loope
outsl
dec
sbb
fildl
loope
inc
cmp
or
or
inc
dec
push
and
inc
mov
test
xor
adc
and
mov
daa
or
test
adcl
jmp
jno
add
daa
or
sub
daa
or
ljmp
or
es
andl
jo
xchg
sbb
cmpsb
mov
push
and
std
or
mov
fdivl
mov
andl
xor
push
lods
push
rorb
add
mov
js
jae
je
adc
xor
sbb
adcl
sbbl
xchg
xchg
dec
sbb
inc
sbbl
loope
orl
add
or
popa
and
inc
sbbl
mov
mov
adc
add
enter
add
adc
je
xchg
lods
ret
jg
ret
mov
inc
sub
fsubs
mov
ret
and
push
inc
pop
adc
loope
ret
mov
adcb
jae
adc
jb
inc
into
in
jo
xor
call
adc
ds
cli
xor
sub
mov
mov
or
mov
adc
add
sbbl
adc
jle
dec
cmpl
pop
jns
scas
adc
xorl
addl
xchg
sbb
pop
ret
push
adc
ret
inc
ja
ret
pop
stos
cmp
popa
or
xor
data16
adcl
dec
or
loope
adcl
pop
daa
adcl
ret
cmp
data16
incb
push
das
cmp
repz
jns
mov
pop
call
and
or
loopne
fists
inc
push
pop
mov
sbb
ret
inc
jg
adc
jmp
ret
punpckhwd
scas
cmp
aam
js
cmp
xor
and
push
test
push
daa
orl
mov
cwtl
dec
add
ficoml
cmp
jp
loope
and
sbbl
lea
pop
sbb
lds
testb
or
cmp
mov
popa
xor
jne
adc
ret
je
loope
ret
sbb
addl
or
cmp
push
pop
sub
cmp
sbb
call
inc
daa
or
mov
loopne
and
addl
ret
xchg
hlt
orl
jb
ret
sbbl
dec
xorl
scas
pushf
mov
sbbl
or
or
mov
fidivrs
add
mov
rcll
rorb
addl
inc
mov
popa
or
fiaddl
sub
or
xor
decl
cltd
add
adc
push
enter
popf
xor
loopne
and
xor
pusha
mov
mov
insl
and
xorl
addl
jae
jne
or
add
ret
ret
pop
mov
dec
jo
cmpb
adc
addl
insb
movsb
mov
push
daa
or
mov
adc
enter
mov
add
test
mov
push
adcl
adc
push
sbbl
adc
cwtl
cmpsb
mov
pushf
xor
dec
xorl
popf
mov
sub
and
and
or
jo
cmp
pop
pushf
add
or
nop
add
push
loopne
jo
scas
or
xchg
or
sahf
mov
push
mov
adc
push
cmp
cmpsl
push
roll
ljmp
dec
daa
or
sub
addb
push
xor
and
push
pushf
cmpl
test
push
incb
dec
pop
and
xor
dec
testb
test
addb
adc
sbb
lahf
xor
or
shll
mov
pushf
pusha
adc
xor
fsubrs
inc
sub
sub
call
ret
shrb
add
sbb
loopne
and
mov
popa
or
pusha
les
popa
aad
and
andl
pop
sbb
test
and
test
or
xor
orb
and
addl
sbb
pop
aas
addl
addr16
cmp
popf
xor
popf
xor
xor
jo
inc
and
inc
pushf
add
test
adc
test
orl
xor
xor
out
pushf
xor
push
xorl
fcomps
ret
add
xchg
push
push
sbb
outsl
cmp
aad
jmp
sbbl
les
xchg
jno
cmp
andl
xor
loopne
pushf
or
loopne
add
loop
jmp
lds
addl
sub
push
gs
loope
aad
add
lcall
add
pop
loopne
jg
and
jnp
or
add
loop
and
push
or
xchg
in
xorl
mov
xchg
pushf
adcl
adc
rorl
mov
xor
mov
xchg
rolb
xor
adc
call
insl
sbb
and
sbb
ss
adc
test
xchg
out
mov
cmpsl
mov
mov
popa
or
push
ljmp
fcoml
sbb
pop
xor
xor
into
fnstcw
orl
adc
es
xor
or
adcb
push
ret
push
ret
js
or
adc
popa
or
lcall
bndldx
mov
popa
or
adc
int3
sbb
ret
dec
fiaddl
cwtl
outsb
pusha
xor
adcb
addl
adc
rolb
sbb
addl
loope
sub
or
ret
sti
adc
push
popf
xorl
adcl
into
mov
xchg
call
adc
popa
push
orl
xchg
push
orl
sbbl
sbbl
push
addr16
orl
or
daa
addl
fdivl
adc
or
xor
icebp
and
popf
andl
ficomps
push
in
sub
inc
or
adcl
cmp
aad
mov
popa
orl
popa
or
andl
outsb
or
ljmp
adc
sbb
popa
subb
daa
subl
subl
add
adc
inc
jno
lcall
sub
jno
adc
xchg
icebp
adc
jo
sbb
sbb
or
cmp
pop
daa
or
movl
or
cmpsl
daa
or
dec
dec
addl
add
ret
mov
gs
js
movb
loope
sbbl
pop
enter
push
jge
mov
pop
inc
scas
ljmp
popa
or
movsl
test
and
xchg
adc
cwtl
cmp
subl
repz
mov
or
lcall
sbbl
inc
daa
loopne
and
ret
adc
sbb
dec
xor
popf
xor
cmp
aas
mov
cmpl
xorl
jnp
mov
add
push
xorl
xchg
push
repnz
loop
sbb
cli
addl
popa
mov
inc
jb
orl
or
clc
jns
loopne
and
jecxz
xchg
cmp
or
and
pop
xchg
test
orl
orl
aad
push
sbbb
mov
push
dec
adc
sub
mov
orl
test
xchg
andl
adcl
add
mov
js
push
in
xchg
stos
dec
push
mov
call
adc
test
popa
adcl
test
cmp
sbb
ljmp
add
pop
orl
cmp
shll
add
dec
xor
popa
cmp
xchg
or
leave
cmp
jmp
xchg
cmpsb
pop
imul
sub
push
adcl
nop
inc
jb
jle
pop
add
inc
add
jge
adc
dec
sbb
andl
push
add
je
and
jne
mov
xchg
xor
xor
cmp
mov
jae
adc
xlat
adc
inc
sbbl
jae
sbbb
ds
dec
sbb
jne
sub
or
lock
mov
xor
jmp
loopne
xor
test
add
sbbb
and
test
adc
js
push
pop
popf
xor
xor
or
pop
stos
mov
add
mov
or
dec
nop
or
dec
lds
lea
daa
sbb
or
loop
adcl
jmp
fiaddl
xor
dec
sbb
daa
or
sbb
push
mov
mov
outsb
sbb
lds
addl
and
xchg
orl
adc
cmpb
push
mov
mov
xchg
inc
adc
jns
sub
and
fmuls
push
pop
shlb
aad
mov
and
and
jo
jo
addl
andl
push
or
daa
or
sub
dec
add
aaa
aas
mov
lret
push
mov
lods
jge
add
lds
inc
fwait
dec
in
popf
xor
sbb
lcall
data16
sbb
adc
cmp
pop
jne
ss
loope
dec
sbb
daa
or
add
or
sbb
ret
adcl
enter
mov
push
enter
lahf
call
rorb
xor
loope
clc
andl
orl
insb
lods
rorb
inc
mov
scas
push
aaa
adc
cmp
xchg
orl
mov
inc
add
orl
or
dec
roll
push
daa
adcl
xorl
orl
push
popa
subl
pusha
js
addr16
and
ret
cmp
mov
pop
mov
dec
subl
ret
nop
adc
pusha
xchg
sbbl
shlw
ret
test
add
xor
xor
xor
mov
xchg
popl
jo
xorl
cmp
ja
sub
xor
sub
test
push
xor
jnp
test
mov
inc
mov
inc
jae
mov
inc
addl
cmpsb
orl
pushf
adcl
jmp
adc
into
cmp
or
xor
add
and
sub
orl
dec
push
pop
rolb
addl
dec
orb
xor
sbb
sbb
or
pushf
insb
and
sbbl
test
ret
mov
test
sub
add
mov
jo
push
adcl
and
add
cmpl
dec
or
push
loopne
add
mov
mov
and
push
mov
and
jl
ret
and
dec
sbb
mov
popf
xor
push
aam
push
push
mov
xorl
mov
ret
addl
sub
je
xorl
adc
jbe
ss
cmc
mov
adc
cmpl
outsb
orl
push
lods
adc
xorl
rorl
adc
stos
sbb
daa
or
xchg
daa
or
add
addl
bound
orl
popa
or
mov
xor
cmp
adc
sbb
int3
andl
push
push
xorl
and
or
or
adc
lcall
pop
or
cmpsb
mov
cmp
addl
xchg
mov
test
lods
stos
imul
repnz
push
ds
daa
or
lret
test
mov
pusha
and
popa
rorl
dec
sbb
test
rol
jge
or
les
leave
pop
mov
sarl
loopne
shll
out
dec
pop
xchg
lods
loop
inc
and
and
and
loopne
and
daa
or
lock
rcll
push
add
jno
shrl
daa
or
test
popa
or
or
or
popa
mov
pop
inc
sub
xor
lahf
call
mov
dec
sbb
adc
or
mov
and
aam
rcrl
movsl
xchg
call
dec
scas
cmp
mov
adc
mov
jl
and
adc
mov
sbb
test
outsb
loope
dec
sbb
daa
or
stc
and
adc
cmp
ret
cmpsb
mov
jp
mov
push
fsubl
adcb
dec
mov
adc
ja
adc
adc
call
mov
in
xor
cmp
adc
pop
jo
cmp
mov
ret
push
mov
test
cmp
imul
add
jmp
or
dec
pushf
mov
in
adc
ds
cmp
div
cmp
lret
xchg
jno
mov
and
adc
fwait
dec
sbb
popf
xor
cmp
mov
or
mov
jo
jns
popa
or
mov
mov
mov
jl
inc
add
mov
orb
mov
data16
bound
lods
dec
sbb
test
lock
clc
sbb
cmp
jge
or
sbb
dec
enter
iret
and
addb
and
mov
test
ret
jl
add
ret
or
scas
or
and
cmp
mov
xchg
xchg
mov
mov
adcl
sbb
inc
adc
dec
sbb
jne
mov
push
out
ds
enter
adc
mov
fldl
and
or
daa
or
or
and
adcb
cmp
jbe
aas
pusha
mov
sub
inc
mov
dec
inc
dec
aam
mov
mov
sub
daa
or
push
ret
inc
xchg
pop
test
fdivl
mov
xor
loop
ffreep
rorb
inc
mov
xor
jbe
dec
rorl
mov
or
xor
dec
sbb
jle
jno
adc
add
test
or
ds
mov
int3
pusha
pushf
mov
xchg
cwtl
imul
test
dec
jno
push
xor
rorl
mov
push
daa
or
xlat
dec
cmp
test
mov
sub
insb
sbb
or
dec
and
inc
mov
daa
mov
sbb
cmpl
adc
je
mov
dec
push
fcompl
dec
loope
fs
cmp
or
or
mov
add
mov
test
mov
popf
mov
jno
mov
or
mov
adc
mov
ret
test
stos
test
cmp
out
inc
push
pushf
xor
sbbb
cmpsl
aad
dec
sbb
sbbb
push
mov
int3
mov
xchg
dec
mov
clc
fiadds
pop
je
test
aad
mov
loopne
mov
daa
or
xlat
xor
adc
daa
or
inc
mov
movsb
and
jo
cmp
testl
popa
mov
jo
or
js
or
call
subl
sbb
aaa
cmpsl
in
cmpl
pop
mov
filds
add
neg
jo
xor
lret
loop
and
into
mov
mov
mov
scas
data16
mov
cltd
inc
cmpsb
test
fcoml
nop
lock
lock
mov
pop
daa
add
pusha
pop
test
dec
dec
pop
xchg
daa
mov
mov
mov
adc
rorb
inc
mov
and
mov
movsb
pusha
mov
push
pusha
aam
push
repnz
or
mov
es
mov
adc
pushf
xor
ret
shll
mov
mov
and
stos
mov
inc
push
xor
sbb
pop
pushf
mov
cs
mov
pop
daa
mov
mov
mov
lds
mov
loop
mov
jno
mov
daa
or
push
dec
mov
jnp
fadd
or
sub
out
loop
and
ret
xchg
mov
dec
pushf
xor
ret
xor
daa
or
mov
jo
mov
jo
fildl
mov
cmp
adc
jl
ds
push
xor
cmp
call
lahf
mov
loop
and
call
ret
ja
mov
btr
call
pushf
xor
dec
sbb
daa
or
test
mov
jo
fadd
or
pop
es
loop
and
ret
outsl
pop
daa
or
push
mov
mov
loope
dec
sbb
daa
or
in
mov
inc
daa
or
mov
or
inc
je,pt
sbb
and
xchg
and
add
or
in
push
adc
cmp
jo
loopne
popa
or
ret
push
jo
xor
popa
loop
xor
push
mov
xor
popa
or
ret
mov
test
mov
or
inc
push
loope
adc
pop
daa
or
es
test
push
or
xor
cmp
negb
and
jne
mov
jmp
mov
xlat
or
scas
adc
daa
or
in
push
scas
mov
in
push
popa
mov
pop
cltd
or
test
adc
and
lret
or
jmp
mov
js
or
mov
sbb
inc
xchg
cs
mov
icebp
adc
rorb
add
cmp
mov
add
mov
lods
dec
mov
and
cld
mov
xor
xchg
inc
or
popa
or
loop
dec
jo
adc
and
jge
or
push
bound
jmp
and
mov
das
callw
xor
je
je
es
ret
push
and
adc
daa
or
cmpsb
mov
or
dec
shrb
fcoml
ds
inc
call
dec
mov
sub
mov
rorl
inc
js
mov
js
mov
dec
mov
add
js
or
loopne
and
jbe
sub
cwtl
cmp
js
aaa
rorl
mov
cmp
ret
add
call
stos
adc
xor
pop
rolb
mov
add
mov
in
and
sbb
sbb
or
dec
sbb
sub
inc
add
stos
sub
popa
mov
popa
or
call
mov
or
and
or
popa
mov
cmp
push
xor
add
or
or
dec
test
mov
and
cmp
xchg
inc
pop
inc
daa
or
jle
popa
or
or
es
adc
daa
or
scas
mov
sbb
dec
sbb
inc
push
arpl
rorb
ret
push
mov
dec
sbb
or
cmp
loopne
mov
xchg
xor
cmp
sub
stos
call
adc
dec
mov
je
mov
lds
inc
mov
pushf
xor
cmp
ja
mov
pop
dec
mov
sbb
and
test
mov
xor
lds
mov
dec
jo
adc
xor
stos
mov
xchg
test
popf
xor
adc
add
sti
mov
jecxz
mov
rcrl
mov
mov
mov
dec
sbb
or
fsubr
add
ret
loop
sahf
cmpsb
out
add
mov
ret
xor
popa
or
fisubl
push
xchg
rorb
stos
loopne
jle
cmp
mov
xchg
mov
sti
loopne
popf
xor
inc
sub
and
pop
adc
cs
cmpsl
test
cmp
cmp
mov
enter
je
adc
adc
mov
movsl
jl
mov
mov
test
mov
data16
lds
scas
pop
movl
imul
and
call
call
lea
ret
inc
mov
daa
call
mov
loopne
and
loope
mov
movsl
dec
mov
sbb
ret
dec
mov
pop
jne
push
out
out
leave
adc
popf
xor
rorl
xor
jecxz
and
test
shlb
jo
popf
mov
mov
sbb
mov
or
into
and
ret
jo
adc
pushf
bound
icebp
add
bound
imul
adc
insl
adcb
jo
mov
pop
fidivrl
inc
xchg
ret
jle
aaa
stos
adc
add
and
loop
adc
ret
mov
movl
pushf
mov
jno
mov
sbbl
sub
daa
or
outsb
mov
pop
push
xchg
push
test
inc
xor
popa
jo
pop
mov
cwtl
inc
inc
daa
or
dec
sbb
loop
mov
push
cmp
add
mov
ret
and
ret
scas
mov
inc
mov
adc
lock
and
push
mov
ret
mov
push
adc
notb
pop
add
or
push
adc
out
aas
add
ret
inc
add
inc
add
push
add
mov
add
xchg
int3
sarl
adc
sbb
rcpps
aas
pop
int3
xor
push
or
mov
xlat
add
cwtl
popa
rorl
aas
cwtl
popa
or
shl
rcrl
cmp
adc
push
mov
or
xor
roll
out
cwtl
popa
shll
shrl
pop
xor
sarl
sub
jo
lock
shrl
mov
in
sbb
push
gs
jle
push
jns
mov
data16
sbb
mov
shrl
js
rcr
lahf
ss
sbb
xchg
jle
out
inc
push
enter
jge
xchg
mov
jo
cmpb
or
rcll
pop
cmp
popa
push
out
xor
adc
cmc
jl
lock
adc
xor
roll
inc
xor
mov
push
xor
sub
roll
xor
xchg
int3
shll
sarl
aam
rcr
cmpsb
in
or
inc
loope
jl
out
jns
lds
or
in
push
jb
jl
or
xchg
add
pop
jl
adc
cmpsb
sbb
add
or
cmp
mov
xchg
out
inc
ds
adc
cli
or
xor
shll
mov
inc
int3
shll
daa
and
lds
mov
mov
lods
mov
jno
andb
repz
xor
rorb
sbb
push
xchg
adc
and
ret
roll
mov
inc
add
add
shlb
sbb
xchg
sar
sub
test
adc
rorb
int3
push
add
add
mov
rol
inc
xor
pop
xlat
or
lock
or
mov
lds
mov
sbb
add
mov
sbb
or
movsb
and
fcomps
dec
xor
imul
rorl
ret
adc
shll
dec
and
shll
loope
pusha
and
inc
jo
pop
test
xchg
or
fwait
sbb
sbbl
ja
insl
pop
xchg
adc
call
xor
outsb
xor
ret
rorl
or
or
sub
loop
cmp
iret
cs
ficomps
xchg
xor
ror
repz
xchg
push
or
xor
xor
adc
and
scas
rcl
ljmp
gs
data16
mov
leave
push
adc
jge
les
add
cwtl
popa
or
add
movsb
jns
or
mov
lcall
jecxz
add
or
rcr
fsubs
push
xor
push
and
jno
push
push
cwtl
popa
or
in
push
and
test
lods
test
inc
xor
add
popa
inc
popa
lcall
js
pop
xor
bound
out
cmp
dec
sbb
ja
cwtl
popa
or
lcall
enter
push
push
popa
or
mov
and
cs
shl
adc
ret
adc
xor
rorl
add
pusha
mov
adc
inc
rorb
xor
cmpsl
pusha
rcrl
push
and
lock
jne
out
push
and
shll
or
mov
xor
ljmp
or
add
lret
fs
popa
or
adc
mov
das
inc
call
int
cmpsl
sbb
ja
xor
cltd
sbb
mov
rorl
add
shrl
mov
scas
mov
add
or
pushf
shll
fcoml
ror
test
sbb
dec
and
aam
push
or
fldl
xor
inc
push
roll
mov
rorl
scas
fadd
or
shrl
sbb
and
pushf
or
push
sbb
dec
pop
rol
out
lock
popa
or
ret
mov
sbb
or
rcll
push
push
imul
push
dec
xchg
sub
addr16
and
jb
shll
call
sbb
add
roll
loop
sbbb
test
jmp
inc
push
rcr
jo
pusha
out
lret
icebp
stos
data16
push
cmpsl
shll
mov
lcall
aam
shll
ret
loopne
xchg
adc
cmpsl
push
jl
mov
adc
xchg
fsubr
data16
shll
sbb
adc
sub
add
jno
fisubrs
js
lea
shll
dec
fwait
cmpsb
xchg
popa
or
nop
push
xchg
jae
cmp
je
or
push
xor
adc
aaa
in
ret
adc
cmp
out
adc
sbb
ret
sarl
adc
scas
xchg
ret
or
subl
sarl
shrl
push
inc
data16
sbb
push
xchg
shll
jns
push
inc
or
lcall
rcrl
sub
aad
pop
scas
rorw
mov
mull
xor
adc
xor
push
sub
in
insl
int3
pop
jmp
popa
or
adc
or
aad
sbb
add
arpl
or
rcll
jmp
push
jo
shl
fidivrs
dec
push
xor
dec
cmp
and
xchg
sbb
adcb
shll
mov
inc
cmp
mulb
shll
popa
shl
mov
ror
test
cmp
call
int3
shll
xor
cmp
or
lcall
shrl
xchg
out
sbb
xchg
fsubrs
sub
test
jo
xor
in
in
push
xor
nop
in
fdivl
adc
sbbl
and
rcrb
mov
mov
mov
jg
fisttpl
aaa
xor
loop
lcall
loope
addr16
insb
rol
push
pop
out
sub
insb
fwait
jne
rcrl
xchg
jns
or
call
scas
rcrl
repnz
call
xor
adc
xor
adc
sbb
in
or
mov
out
loop
or
push
vpsrlw
shll
sub
ljmp
and
add
xchg
and
or
mov
and
mov
cwtl
inc
pop
fmull
test
shll
adc
pusha
mov
add
movsl
jnp
shlb
std
pop
popf
cwtl
popa
or
mov
ret
test
xor
rcll
fsubs
and
testb
or
sbb
inc
mov
mov
sub
push
push
in
pusha
cmp
xor
jg
sbb
inc
push
popa
add
insb
inc
rorl
xor
rol
or
shrl
xchg
sub
xor
adc
orb
addr16
inc
enter
popa
or
dec
xor
mov
push
loopne
int3
xor
jns
data16
cmp
push
popa
cmpsb
test
or
shlb
ror
add
xchg
bound
ret
adc
inc
jle
pop
inc
xor
addr16
xlat
or
rcll
mov
xchg
push
cmp
or
rorl
rorl
cmp
out
inc
sbb
sbb
scas
out
pop
rorb
push
mov
ret
adc
popf
je
ret
ror
push
sar
lahf
sub
mov
nop
add
rcll
sbbb
mov
sub
pusha
xchg
cmp
or
imul
add
ret
adc
sbb
shrl
roll
mov
and
xor
adc
adc
pop
outsb
xchg
fadd
shll
adc
rorl
paddusw
roll
pop
aas
imul
ret
adc
in
mull
push
xchg
or
adc
imul
cs
pop
xor
fisubl
and
or
xchg
mov
shll
mov
pop
cmp
push
ret
roll
mov
xor
out
push
inc
or
movsl
adc
rcrl
and
or
rcrb
push
and
push
push
adc
popa
or
or
xor
dec
sbb
test
inc
xor
xchg
inc
int3
xor
dec
add
int3
xor
lret
shll
test
dec
xor
xchg
sbb
rol
sbb
mov
jge
outsl
inc
pop
or
imul
pop
mov
pop
jle
out
xchg
aas
lods
fbstp
pop
xor
adc
add
imul
sub
xor
stos
push
pop
mov
mov
jle
adc
adc
xor
push
ret
push
ret
loope
add
push
xor
rorb
cwtl
rcrl
rorl
add
mov
xor
inc
cwtl
popa
or
add
ret
adc
and
rorl
rol
inc
or
inc
xor
adc
popa
rol
push
or
adc
shll
loope
call
jb
dec
fsubrs
mov
jb
dec
mov
xchg
or
push
ret
adc
imull
dec
in
pop
xor
stc
push
mov
sbbb
adc
or
inc
sub
xor
push
push
mov
int3
xor
adc
jg
shll
or
mov
rcr
out
adc
xor
ljmp
adc
fsubl
mulb
mov
dec
pop
call
pop
int
test
sbb
add
or
or
mov
or
mov
inc
imul
xor
push
ret
adc
xchg
fwait
and
adc
cmp
sbb
sub
rclb
data16
shll
popf
mov
mov
adc
add
out
adcl
adc
lcall
xor
cwtl
popa
or
sub
in
sbb
and
movsl
xchg
loope
pusha
xchg
and
inc
xor
sbb
lret
sbb
imul
fldenv
fcoml
push
push
ror
fmuls
or
or
stos
inc
pop
push
adcb
adc
aad
roll
xor
ret
shrl
sarl
int3
data16
inc
pusha
rcrl
xor
outsb
mov
xchg
shl
repz
sub
rorb
sub
sbb
popa
or
or
push
cmc
adc
xchg
data16
push
ljmp
mov
push
ljmp
sbbb
xor
lret
bts
push
aas
lods
int
add
aam
dec
lods
xor
jg
mov
xor
sbb
xchg
sub
pop
rorl
push
or
add
fadds
fwait
popa
rorl
shll
xchg
and
and
loope
mov
stos
ret
xor
or
ret
or
roll
xchg
pushf
out
or
mov
push
dec
jecxz
or
lret
inc
xchg
mov
jg
into
ja
int3
shll
ret
adc
je
or
or
cmp
subb
test
xchg
sub
jno
pop
rorb
lock
jnp
repnz
or
xchg
sahf
js
popl
xor
fimuls
push
pop
cwtl
popa
rcll
data16
jns
imul
into
dec
jp
test
sar
shlb
popa
xchg
lods
mov
pop
xorl
rcll
repz
and
jne
xchg
cwtl
push
cmp
data16
adc
sbb
inc
ret
sub
mov
ds
popa
xchg
movsb
int
push
and
mov
xchg
inc
movsl
movsl
sbb
xchg
faddl
int3
ret
adc
shl
into
out
push
xor
add
pop
xor
adc
mov
rorl
xor
ror
test
xchg
shll
or
in
push
dec
mov
data16
mov
push
push
sbb
lcall
lcall
inc
es
or
sarl
int3
xor
bound
shll
out
xor
shll
pop
pop
inc
sti
bound
lock
xor
xchg
sub
inc
xchg
rorb
or
xchg
dec
sub
popa
rcll
and
or
ret
shl
xor
out
roll
push
mov
xlat
adc
lock
int3
xor
nop
loope
mov
sti
jnp
cmp
or
push
loop
rorb
xlat
or
mov
or
mov
dec
mov
jmp
and
fisubl
addb
popa
or
sub
shrl
mov
or
ret
shrl
nop
cwtl
popa
sarl
xor
mov
popa
or
add
negb
add
add
rcll
shl
inc
int3
xor
and
rcrl
mov
jbe
inc
jo
shll
dec
or
rol
add
mov
sbb
ret
adc
dec
push
mov
push
xor
repz
and
iret
xor
dec
pop
adc
xchg
pusha
xchg
add
inc
mov
adc
jne
xor
dec
push
or
push
xchg
xor
push
xor
rcrl
jo
aaa
les
loopne
or
xchg
mov
xor
or
mov
or
divb
or
outsl
pushf
mov
outsb
cwtl
popa
shll
sbb
push
test
shll
movsl
popa
mov
popf
lcall
pop
rorw
and
rolb
or
rol
inc
sbb
rorl
add
jno
dec
sbb
inc
adc
mov
and
push
xor
shl
scas
cmp
ret
adc
aad
adc
adc
in
adc
adc
loopne
sbb
mov
sbb
push
int
shll
push
mov
test
loopne
push
movsl
dec
xor
int
add
sbb
int
add
faddl
rcll
scas
jne
add
ret
rcrl
lahf
push
ret
adc
xchg
rol
adc
or
faddp
xor
jne
mov
adc
xor
push
mov
add
lds
rcrb
shrl
fwait
bound
pop
int
test
push
pushf
out
and
rolb
jne
pop
mov
push
and
es
int
test
insl
shll
dec
push
sub
outsl
sti
pop
scas
out
xchg
popf
call
sbb
jns
and
scas
mov
rorl
mov
push
xor
icebp
pop
xchg
pushf
mov
nop
sbb
notl
rorl
xchg
rolb
adc
mov
out
fisubs
mov
cmpl
xor
es
repz
xor
cmp
rcll
jns
gs
rorl
or
jb
in
js
rorl
sahf
add
rolb
rcr
fstl
test
pop
xchg
in
xor
rol
sub
sarl
loopne
sbb
sbb
xchg
and
xor
inc
dec
lods
inc
inc
add
and
enter
test
int3
cs
xor
mov
sbb
and
shll
or
cmp
sarw
rolb
aaa
lds
shll
iret
in
ret
adc
add
push
pop
mov
lcall
into
shl
imul
xor
fimuls
test
or
or
xor
adc
add
xor
jnp
cmp
mov
popa
dec
call
sub
mov
and
pop
and
lds
ror
test
xchg
and
or
inc
int3
xor
sub
outsb
ja
bound
adc
cmc
or
push
xor
inc
pop
cmp
ret
sarl
popa
or
into
push
pop
call
xlat
arpl
and
shll
jne
add
ret
cltd
movsb
fcmove
add
inc
arpl
inc
pushf
and
or
loop
sbb
pop
sbb
add
push
mov
iret
repz
ret
push
daa
cmc
pop
mov
adc
jns
movsl
cs
push
loopne
xor
add
adcb
enter
orb
sbb
xor
and
mov
sbb
mov
cmc
mov
and
adc
or
call
inc
mov
or
pop
sbb
data16
ffree
inc
sbb
jns
and
push
aaa
cmpsl
dec
add
mov
and
or
rcr
inc
pop
aam
icebp
mov
xor
roll
cmp
inc
int
rcr
data16
cmpsb
rcrl
rol
dec
cmp
inc
or
test
or
pusha
push
inc
xchg
mov
lds
fdivl
inc
shrl
add
jecxz
jnp
xchg
sbb
rcrl
xor
or
add
mov
xor
leave
xor
pop
and
clc
push
and
in
sbb
add
andb
rcrl
inc
shll
cmp
shll
mov
and
test
mov
pop
cmp
xchg
mov
rol
dec
adc
xor
cli
cmc
xor
mov
fimull
add
and
cmp
lret
pop
inc
sbb
daa
ljmp
dec
test
xorb
dec
rorl
pop
xor
inc
mov
xor
icebp
cli
mov
rorb
sub
inc
in
inc
int3
xor
int3
mov
push
xor
adc
lods
xor
adc
cs
test
pop
into
shll
int
test
adcl
sbb
orb
lock
roll
sbb
test
or
lret
xchg
rorl
repnz
sbb
cmp
out
push
cmc
xor
rorl
shll
xor
xchg
ror
add
in
jl
sbb
cmp
out
dec
les
xchg
addl
mov
xor
adc
lock
or
stos
sbb
aad
inc
shl
nop
xor
xor
dec
cmp
pop
scas
jb
add
pop
data16
push
lret
shl
sub
xchg
pop
xor
sbb
ret
popl
test
xchg
data16
xor
adc
cmp
rol
int3
cmp
repnz
test
imul
mov
int3
shll
dec
rorb
dec
pop
xor
adc
dec
cs
xor
xchg
shl
int3
mov
push
add
or
jle
test
pop
mov
inc
and
xchg
mov
rcrl
loopne
jecxz
sbb
mov
shll
loopne
fisubl
adc
lahf
data16
adc
dec
imul
es
ret
adc
shrb
ss
scas
adc
roll
lahf
xor
or
mov
shll
dec
push
xchg
jnp
xchg
adc
outsb
daa
and
xchg
fdivl
shll
jecxz
hlt
rcrl
pusha
daa
jo
and
shl
sar
mov
xchg
fadd
or
pop
or
or
shll
popa
or
ror
add
aaa
shll
sbb
xor
inc
push
jo
or
adc
stos
pusha
xchg
cwtl
fcmovnb
sbb
inc
mov
adc
shlw
imul
inc
or
outsb
adc
push
or
cmovge
and
std
sub
imul
mov
and
shll
pop
stc
ror
test
cs
sbb
sbb
or
dec
dec
dec
xchg
pushf
out
arpl
or
shrl
int
test
rcrl
rcrl
jo
add
scas
shll
pushf
lcall
xchg
faddl
stos
pusha
sub
cwtl
rcrl
add
jmp
mov
rcll
sbbl
rorl
aad
inc
rcr
xor
push
rcll
shll
shll
rorl
pop
sub
rol
and
aam
rorl
ss
aaa
sbbb
cmp
outsl
xor
int3
roll
add
repz
inc
mov
sbb
xor
loop
test
and
mov
shl
popa
or
mov
cmpsb
dec
xchg
pop
daa
cwtl
shr
dec
and
xor
adc
xchg
test
out
sub
shll
shll
rcr
or
adc
stos
mov
pusha
xor
shrl
js
mov
rcll
ja
xor
stos
rol
or
mov
cwtl
popa
or
test
dec
mov
pusha
shll
popa
icebp
fidivrs
add
lcall
mov
popa
sarl
and
rol
inc
jo
shll
or
sbb
ret
xchg
movl
aad
adc
or
dec
or
ret
sarl
cwtl
popa
or
mov
add
xor
adc
xchg
push
pop
mov
popa
test
xor
sub
add
or
fdivr
or
faddp
or
pop
xchg
sar
sub
dec
nop
std
jmp
sbb
ret
pop
inc
mov
ss
rorl
xchg
std
loope
sbb
and
xor
push
add
pushf
mov
adc
cwtl
and
xchg
sub
ss
cmpsb
cwtl
mov
test
rcrl
shll
cmpsl
or
or
mov
xchg
jg
xchg
loopne
addr16
and
add
or
bound
mov
mov
mov
mov
mov
xor
adc
data16
jecxz
jae
shll
add
js,pt
sarl
jnp
mov
xchg
jecxz
or
js
shll
mov
xor
adc
add
iret
dec
ja
xor
mov
rcll
or
pop
or
pusha
adc
mov
xchg
jbe
adc
adc
xor
xchg
cs
mov
xlat
or
rcrl
ret
shll
daa
xchg
sub
xchg
sbb
addr16
mulb
nop
push
stos
sbb
popa
or
test
dec
roll
pusha
pusha
pusha
rcl
rcrl
rcll
or
xor
insb
lds
pop
mov
cmp
out
and
pusha
cld
lret
daa
bound
or
loope
xorb
adc
daa
orl
xor
loope
adc
cmp
cmpsl
xchg
adc
daa
mov
adc
or
cmp
push
aam
push
sub
or
loope
adc
add
add
loope
or
ret
jmp
adc
and
inc
pop
pushf
loope
or
ret
cwtl
loope
sbb
data16
sbb
sbb
and
pop
sbbb
mov
loope
adc
loope
xor
popa
mov
xor
pushf
je
xchg
pop
imul
or
push
pusha
loope
jbe
ja
xor
add
or
xchg
shl
sbb
cmpsl
cmp
pop
pop
push
jae
adc
mov
mov
xor
loope
lahf
push
push
aam
inc
loope
int3
xchg
rdpmc
adc
inc
mov
sub
pop
aad
loope
int3
pusha
add
loope
aaa
xor
and
jno
subb
cwtl
popa
or
cltd
bound
jo
push
sbb
inc
adc
insl
sbb
cmp
xor
test
sbb
inc
lods
popa
idiv
and
add
or
push
loope
mov
ret
popa
loope
pushf
es
mov
imul
frstor
dec
sbb
loope
decb
rorb
subl
jg
fwait
add
inc
add
adc
jmp
dec
jg
mov
clc
push
jo
nop
and
and
jbe
orb
in
pop
orb
stc
adc
decl
pop
push
call
mov
and
xor
imul
pop
xchg
test
adc
push
ret
adc
cmp
ret
or
stos
add
mov
dec
mov
aas
or
or
xor
pop
test
test
loope
dec
and
mov
xor
fisttps
mov
or
dec
xchg
jp
sahf
pop
stos
xchg
mov
or
fucomip
test
daa
or
mov
add
je
mov
popa
or
add
ret
or
or
mov
cmp
add
andl
xchg
xor
test
or
ret
adc
sbb
test
or
add
outsb
andl
ret
cmp
xor
out
test
and
push
sub
popa
or
xchg
add
inc
cmp
add
add
sbb
xchg
inc
rol
outsb
addb
xor
ret
add
ficoms
shrl
add
xchg
cwtl
xchg
xchg
sarb
scas
sbb
das
xchg
es
cmp
in
adc
loope
push
or
adc
aam
add
mov
mov
xchg
dec
add
mov
pushf
or
scas
xchg
add
or
lcall
inc
inc
xlat
loope
lea
push
or
pushl
xchg
adc
xchg
jmp
sub
push
add
inc
add
insb
sbbb
add
push
fsubrs
add
call
add
imulb
adcb
popa
or
push
or
add
mov
testb
push
add
jnp
or
dec
pop
aam
add
add
adc
adc
push
ret
int3
add
jg
popa
or
mov
mov
stos
add
nop
xor
sbb
push
push
add
inc
add
pop
je
push
pushf
imul
jo
and
test
aam
add
sbb
xchg
addb
rcrb
jne
push
xorb
cmp
ret
adc
adc
push
add
sbb
pop
add
ret
xchg
lods
xchg
cli
add
push
stos
add
mov
adc
xor
or
inc
sbb
js
inc
or
or
sub
aad
test
add
add
inc
rclb
loop
push
push
ret
add
dec
inc
or
push
ret
push
ret
incb
or
lods
inc
sbb
data16
pop
inc
or
sbb
add
add
loope
and
scas
push
mov
xchg
sub
jl
das
and
adc
add
sahf
adc
xor
or
aam
test
sbb
andl
add
aam
add
popa
je
add
cwtl
lcall
push
ret
scas
aam
add
pop
add
mov
test
or
stos
popa
or
and
or
xchg
ljmp
add
dec
aam
add
aad
adc
add
jne
mov
int3
mov
je
and
or
mov
test
xchg
mov
stos
add
xor
mov
xchg
bound
push
ret
push
in
adc
popa
or
mov
ret
add
sbb
sbb
add
jo
add
sbb
sbb
add
ja
xchg
cmp
jbe
sbb
in
jle
xchg
faddl
or
inc
loop
xchg
add
rolb
popa
or
scas
fwait
jno
and
mov
or
scas
xchg
push
and
add
loopne
xchg
xchg
push
outsl
subb
pop
jne
stos
popa
or
into
stos
xchg
insb
or
stos
popa
or
imul
cltd
push
add
test
inc
mov
sub
cmp
mov
sbbb
ret
in
xchg
push
aad
push
dec
jmp
or
mov
call
push
or
xchg
or
xchg
mov
add
mov
add
xchg
add
xor
cmp
xor
insl
push
cmp
or
sbb
sbb
or
lea
pop
imul
insb
push
incl
mov
add
cmp
or
cld
out
ret
popa
jae
xor
or
push
adc
and
and
orb
xchg
and
popf
dec
adc
sub
add
inc
xchg
add
in
add
stos
test
push
xchg
push
in
adc
nop
jle
push
ret
adc
push
ret
adc
push
pop
push
rolb
push
push
or
ja
or
xchg
xor
or
fldl
xor
popa
or
and
inc
mov
push
or
or
and
adc
or
add
add
push
ljmp
adc
cmp
repz
jecxz
adc
cmp
rep
jmp
subb
add
cmp
dec
inc
sbb
cli
sbb
incl
out
jmp
lods
mov
sbb
nop
lret
cmp
testb
add
add
insb
sbb
xchg
jle
ret
adc
enter
add
push
add
insb
cs
rolb
adc
shlb
xchg
adc
push
add
push
xor
xchg
idivl
pop
adc
pushw
aas
adc
jbe
adc
adc
push
ret
add
and
xor
pusha
add
cmp
push
ret
adc
sbb
call
inc
js
push
aas
loope
inc
or
xor
mov
push
or
test
insb
mov
add
or
add
xchg
dec
daa
xchg
mov
push
sbb
adc
pop
xor
cmp
push
or
sbb
add
adc
push
bound
ret
ret
add
mov
push
add
xchg
mov
ret
adc
popa
or
shrl
arpl
or
test
gs
push
ret
add
xchg
add
sub
lds
add
test
and
aam
mov
or
mov
add
push
loope
test
add
add
cmp
test
or
aad
test
out
or
sbb
mov
push
or
push
ret
adc
movsl
push
ret
adc
test
or
icebp
pusha
arpl
inc
ret
inc
xor
inc
enter
inc
aas
and
xchg
sarl
in
int3
pusha
test
test
cli
loopne
xchg
add
add
bound
jbe
pop
sub
inc
xor
add
cmpsb
nop
xchg
push
xor
add
pushf
add
sbb
inc
or
sub
add
loope
add
adc
in
inc
add
addb
add
popa
add
xor
xlat
mov
xchg
add
ret
push
and
test
jp
or
xor
stos
popa
or
lcall
cmp
sub
inc
add
adc
pop
or
mov
add
fimuls
jne
add
xor
xor
pop
mov
xchg
aas
pop
push
ret
adc
mov
inc
adc
xchg
repz
push
add
dec
cmp
ret
adc
sbb
test
or
aas
add
arpl
sub
push
add
mov
sbb
or
xor
mov
test
mov
add
jo
push
ret
pop
add
pop
mov
test
test
in
push
xchg
push
aad
push
or
adc
rcll
cmp
jmp
jb
or
mov
out
pop
add
popf
stos
popa
add
mov
aaa
cmp
push
or
push
sbbb
sbb
jo
inc
addb
sbbb
push
xor
outsb
jo
push
add
ret
cmp
or
orl
or
lea
fdivr
sub
push
sti
xchg
outsb
jmp
xor
jo
add
xchg
jge
inc
jo
mov
dec
inc
or
es
add
add
daa
sbb
cmp
mov
and
and
xchg
cli
clc
test
pusha
ret
adc
stos
add
and
inc
push
add
jbe
adc
fwait
gs
rcl
loop
stos
xchg
add
js,pn
ret
adc
dec
loop
add
outsb
push
and
lea
or
call
subb
inc
xor
aad
add
add
push
sbb
mov
add
in
inc
aam
add
out
fmull
push
ret
adc
lods
lea
add
sub
pushf
or
ds
xchg
clc
xor
jo
aam
subps
mov
add
addr16
mov
aaa
dec
and
add
aam
add
push
fs
es
lret
and
cs
add
es
xor
sarl
push
mov
add
js
push
ret
adc
sub
adc
add
sbb
pop
push
ret
add
into
scas
stos
popa
or
pop
ret
adc
dec
loopne
push
push
add
in
adc
sub
andb
mov
popa
add
inc
or
inc
or
imul
push
or
ret
adc
rorb
jo
push
add
and
sbb
push
test
bound
pop
aam
add
inc
pop
jle
andb
xor
mov
xor
pop
sbb
sbb
or
xchg
pop
cmpsb
and
inc
xor
scas
mov
cmp
xor
test
or
inc
add
add
push
pushf
stos
add
sbb
ret
adc
jne
add
xor
sbb
sbb
pop
lds
adc
stos
popa
or
jl
ret
adc
cmp
push
add
in
xchg
fcoml
lds
or
push
ret
stos
popa
or
frstor
mov
bound
es
popa
add
push
fisubrs
add
or
ficoml
adc
add
xchg
ret
ret
adc
add
push
add
ret
xor
shll
loope
xchg
sbb
add
xchg
cwtl
bound
stos
call
ret
adc
popa
or
or
inc
jns
cmpsl
test
xchg
mov
sbb
outsb
mov
ret
add
loope
and
add
dec
push
xchg
push
test
add
out
in
inc
das
push
push
je
scas
mov
add
xor
mov
pop
cmc
xchg
xor
test
or
push
dec
lahf
ljmp
xorb
repz
pop
dec
adc
aad
pop
pushf
or
ret
add
pushf
add
inc
lock
decb
daa
std
lods
push
or
mov
add
jg
scas
jnp
stos
popa
or
lcall
add
add
inc
mov
xchg
fdivl
add
adc
push
adc
inc
push
add
sahf
add
ret
add
in
pop
push
push
lcall
in
inc
push
ret
adc
xor
lea
fiaddl
fdivp
out
fsub
dec
xor
push
or
mov
sub
xchg
sub
nop
push
xor
mov
or
es
inc
jmp
adc
pop
xor
aaa
push
ret
add
and
test
mov
out
mov
sbb
popa
or
adc
adc
mov
imul
fsubl
fdivs
loope
mov
aad
lods
nop
add
inc
lds
push
push
daa
jo
nop
mov
add
push
icebp
mov
push
scas
mov
inc
cmp
dec
mov
inc
cs
or
or
jo
stos
add
add
jbe
mov
mov
or
push
ret
add
xor
popa
or
add
cmp
mov
add
or
inc
lcall
push
ret
adc
dec
mov
fsts
push
and
and
leave
cmpb
test
push
add
xchg
mov
and
stos
add
imul
pushf
xchg
push
aam
gs
test
iret
dec
add
shlb
add
divl
outsb
cmp
mov
test
add
fisttpl
pop
mov
add
add
push
popa
or
aad
int3
sbb
js
test
outsl
popa
xor
add
mov
add
int3
insl
lds
xchg
sbb
add
fsubs
add
mov
mov
or
push
nop
shr
add
ret
adc
incb
addb
push
lock
mov
pop
and
adc
in
push
add
inc
pusha
in
inc
mov
jmp
adc
inc
ljmp
push
jnp
ret
add
adc
lods
or
ret
addr16
add
xor
ljmp
or
enter
sub
add
imul
mov
gs
pop
dec
dec
xchg
mov
jge
push
or
mov
cltd
pusha
sbb
xor
or
movsl
jge
sub
subl
cmp
fwait
adc
push
rclb
add
aaa
push
ret
adc
imul
add
xchg
aaa
aad
test
inc
inc
mov
cmp
rcr
sbb
or
sub
adc
lods
aas
pop
aad
test
fnstenv
add
decl
in
je
xor
add
push
dec
pop
roll
ja
mov
push
pop
add
or
add
mov
inc
mov
stos
add
es
cmp
shlb
or
sbb
lods
mov
ret
adc
dec
add
xor
xchg
nop
dec
outsb
jo
push
add
add
sahf
add
leave
rolb
sub
popa
inc
mov
xchg
push
and
add
mov
adc
ret
adc
push
push
add
inc
rorl
add
add
add
xchg
xor
xor
or
aam
or
or
outsb
add
inc
mov
ret
adc
mov
xchg
les
adc
add
mov
mov
ret
add
push
ret
xchg
sbb
cmp
or
lock
push
rorb
add
and
add
xchg
or
or
push
rclb
push
add
dec
aad
test
or
rclb
add
xchg
outsl
pop
ret
adc
dec
ret
adc
push
push
add
sbbl
add
push
ret
jle
add
sbbb
or
cmpsb
aas
sub
loopne
arpl
rorb
daa
xchg
dec
mov
inc
and
xor
or
adc
add
inc
sub
inc
js
inc
push
pop
and
inc
xor
jmp
xor
push
inc
jo
or
mov
inc
pop
cmc
pusha
loope
and
inc
mov
inc
fwait
or
adc
les
dec
roll
and
or
adc
mov
popa
or
adc
adc
xor
xor
jl
add
xor
or
xor
push
dec
fcompl
int3
push
xor
mov
in
push
inc
add
pop
jl
aad
shrb
or
or
int3
push
push
jge
cmp
or
push
or
ret
cmc
adc
addr16
ja
into
mov
inc
mov
in
push
xor
inc
insl
jmp
sbb
int3
xor
adc
push
inc
dec
or
push
andb
ret
sbb
xchg
into
mov
data16
adc
insb
nop
dec
xor
inc
rorb
adc
add
jg
pop
enter
test
jg
xor
outsb
push
jecxz
cmpsl
jnp
data16
mov
mov
jo
cwtl
sbb
int
push
inc
inc
repnz
in
shll
rcll
adc
add
and
cwtl
cmpb
inc
push
call
xor
adc
sbb
inc
pusha
mov
rorl
xor
mov
or
les
xor
xchg
and
and
push
adc
xor
dec
inc
or
js
sbb
arpl
inc
sbb
in
int
inc
or
and
ret
lods
or
sub
stos
lods
enter
inc
mov
jo
test
aam
inc
xor
int
test
sub
pop
sub
shll
addr16
mov
imul
int
inc
mov
or
sbb
mov
sub
test
xchg
fmull
inc
popa
or
out
and
subl
adc
mov
mov
movsb
xchg
incl
pusha
xchg
inc
cmpsl
mov
test
inc
pop
cmp
inc
adc
cltd
xor
sub
sbb
inc
add
data16
xchg
and
push
enter
cmp
inc
xchg
cmp
add
inc
fisubl
mov
int
test
fsubs
xor
add
or
xor
or
and
sub
sbb
push
cwtl
popa
or
int3
xor
dec
inc
xor
add
add
inc
int3
inc
jg
mov
arpl
ret
inc
cwtl
sub
lods
inc
das
inc
clc
dec
xor
xchg
rorb
pop
and
sbbl
push
bound
popa
or
inc
data16
push
inc
or
js
dec
popa
or
inc
cmp
pop
xor
xor
lds
insl
and
or
inc
cmp
sbb
ret
adc
and
bound
sbb
mov
dec
xchg
addb
sub
sbb
sub
test
inc
dec
or
rorl
in
xchg
xor
mov
and
mov
push
xchg
sbb
jbe
inc
sub
inc
adc
inc
inc
int3
xor
bound
xchg
dec
cmp
pusha
scas
addb
scas
pushf
mov
sbb
jo
ret
adc
or
test
sbbl
or
jae
sbb
pusha
or
inc
test
ret
adc
mov
add
inc
aam
shlb
mov
andl
add
data16
or
xor
fimull
jp
push
addr16
pop
push
sub
in
jnp
push
push
xchg
stos
add
mov
lahf
inc
add
xor
inc
mov
in
add
data16
andl
add
push
mov
cmp
int3
xor
adc
ficoms
jne
xor
int3
xor
inc
xor
pop
scas
orb
xor
or
inc
add
pusha
addb
sbb
aam
inc
inc
subb
xchg
inc
popa
or
push
or
push
lcall
xor
ficoms
xor
adc
or
xor
adc
inc
les
adc
lods
jl
int
add
jecxz
dec
adc
or
inc
js
sbb
pop
dec
roll
bound
data16
cwtl
popa
or
inc
mov
mov
jg
pop
xor
inc
clc
into
sti
in
sub
mov
mov
ret
adc
push
xchg
xchg
pop
lahf
push
mov
or
sbb
push
subl
jo
inc
les
ljmp
pusha
mov
sbb
xor
shrb
int3
inc
and
sbb
mov
pop
push
ja
or
inc
enter
popa
or
add
xchg
jbe
insb
loope
sbb
or
mov
inc
push
ja
and
sar
xor
and
dec
mov
and
push
inc
push
mov
jl
outsl
aad
inc
sarl
add
push
int
test
sub
pop
enter
add
push
dec
sbbb
lock
inc
inc
clc
xor
inc
xor
xchg
int
lock
add
hlt
sbb
scas
fisttpl
xor
inc
call
xor
push
cmp
das
ss
mov
inc
push
pop
push
xor
inc
lods
data16
incb
and
lret
outsb
push
jo
xor
push
dec
push
and
xor
inc
mov
outsb
jns
mov
cmp
jne
push
mov
add
aam
inc
lock
inc
or
imul
xor
pop
xor
call
inc
subl
sbb
xor
push
insb
sub
mov
mov
rolb
inc
cmp
call
add
call
fstpl
dec
addl
adc
push
xchg
jp
outsb
xor
inc
gs
push
push
ret
adc
xor
in
popa
sarl
inc
and
push
or
js
push
inc
xchg
sbb
inc
pop
insl
jo
or
inc
adc
mov
sbb
pop
rorl
xor
data16
pop
inc
fwait
popa
or
inc
lcall
add
push
and
add
add
inc
xor
inc
sub
inc
cmp
inc
pop
inc
cmp
or
pop
mov
lds
sbbb
mov
inc
xor
adc
inc
sub
jmp
xchg
popa
add
hlt
sub
int3
lock
pusha
les
xor
fisttpll
sub
adc
sbb
mov
call
pop
adcb
sti
inc
sub
inc
sbb
addr16
mov
inc
pusha
jle
call
add
adcl
mov
inc
cmc
sbb
xor
stos
inc
mov
popa
inc
or
push
push
scas
inc
mov
aam
out
xor
jno
rorl
mov
xor
xor
xor
xchg
fmul
popa
movsb
push
ret
adc
pusha
popa
test
popa
or
xor
and
loope
cwtl
popa
dec
mov
cmpsb
sbb
popa
mov
lods
scas
cwtl
popa
popa
pop
test
xchg
popa
xchg
push
data16
repnz
ss
xor
inc
popa
sub
adc
les
add
xor
inc
out
xor
sub
cmpxchg
sbb
test
orl
xor
pop
fisubrs
push
data16
shlb
rcrb
lea
sub
loope
into
or
scas
imul
jo
lahf
popa
popa
mov
mov
xchg
push
dec
sbb
test
xor
sbb
or
ret
adc
popaw
int3
mov
ret
popa
rorb
outsb
add
rclb
ret
popa
les
pop
mov
popa
popa
add
add
or
popa
pop
or
xor
push
lock
inc
pop
int3
xor
iret
int3
xor
xor
xor
mov
es
or
or
mov
popa
push
add
popa
andb
xlat
or
cmp
test
popa
bound
sub
fnstsw
outsl
jbe
lcall
loope
xorl
shll
test
fsubrs
jbe
in
sbb
nop
adc
decb
std
jo
sub
adc
test
xchg
outsl
or
into
sahf
aaa
cwtl
popa
or
test
popa
pushf
push
testb
xor
adc
popa
xchg
pushf
out
fs
sub
call
and
pusha
dec
mov
pop
cmp
popa
mov
xchg
push
sbb
inc
sub
and
push
sti
mov
test
mov
enter
popa
or
pusha
xchg
or
popa
sbb
adc
nop
pop
xor
popa
mov
adc
or
add
add
sub
add
mov
xor
mov
aad
popa
out
mov
enter
xor
jo
popa
xor
dec
popa
data16
dec
push
dec
popa
or
mov
das
sub
popa
aam
movsb
lcall
push
popa
int
test
xchg
nop
dec
ret
adc
popa
imul
dec
arpl
cwtl
popa
or
adc
cmp
xor
jl
xchg
pop
sbb
or
mov
sbb
xchg
push
mov
insb
loope
and
add
mov
pusha
xchg
and
sbb
or
cmp
mov
inc
cld
sub
fistpll
push
rorl
int3
xor
addb
xor
adc
mov
sbb
adc
nop
mov
pop
xor
in
ret
xor
es
imul
test
pushf
out
mov
ja
mov
sbb
jnp
int3
xor
pop
movb
xor
jge
ret
adc
mov
data16
dec
mov
popa
or
sub
jmp
pop
popa
and
test
nop
out
test
xchg
les
pop
test
mov
test
sbbb
inc
push
cmp
int
popa
jno
adc
and
push
push
addl
popa
adc
mov
popa
or
or
cmpb
or
or
rorl
pop
js
ret
adc
mov
xlat
fidivl
negb
or
sbb
sbbb
sbb
dec
popa
aaa
adc
jle
and
and
add
or
aaa
pop
cwtl
popa
or
sbb
popa
popa
or
sbb
sbb
mov
add
popa
push
pusha
popa
test
add
jb
adc
xor
jo
jl
dec
fcoml
loope
adc
adc
aas
shll
popa
outsb
or
int
test
inc
xor
jl
andb
pop
add
pop
cmpsb
push
cmp
sbb
xchg
cmp
adc
pop
adc
popa
das
enter
sbb
sub
xchg
popa
lods
push
pop
popf
pop
in
aad
inc
popa
orl
mov
push
lea
xchg
xchg
mov
adc
les
loope
cs
add
test
daa
xlat
push
cmp
aam
and
or
mov
lods
pop
or
iret
insl
fisubrl
loope
sub
fidivrl
sub
jl
les
ret
and
xchg
sub
iret
leave
mov
loope
pop
js
jp
iret
leave
and
dec
sahf
fcomi
das
or
in
mov
xor
push
or
jae
leave
add
pminsw
sbb
xor
or
or
sub
xchg
pop
adc
shrb
adc
loope
das
pop
xor
loope
dec
sahf
fistl
inc
popa
mov
loope
xor
sub
pop
push
pop
add
or
push
loope
mov
call
dec
sub
xor
xchg
sbb
sbb
or
push
xchg
and
pop
xor
jg
inc
js
or
insl
imul
imul
bound
ret
loope
sbb
mov
xor
lret
in
imul
cs
out
xchg
xchg
or
frstor
inc
mov
and
fiadds
loope
imul
adc
adc
adc
adc
adc
fists
rorb
xchg
lock
loope
imul
loope
loope
and
sbb
dec
sub
and
cmp
test
push
lahf
nop
ljmp
testb
aam
mov
loope
bound
addb
call
vpmacssdqh
mov
dec
xor
pop
jmp
inc
mov
or
push
hlt
add
adc
push
loope
cmp
out
xor
test
fsubs
ds
jno
xchg
loopne
pop
rolb
loope
cmp
pop
fdivrl
inc
loope
adc
sbb
lods
adc
mov
pusha
sbb
fs
inc
cmp
xchg
loope
xor
mov
cmpsl
cmc
cmp
or
mov
outsb
mulb
ret
adc
push
loope
push
or
bound
adc
sbb
loope
shll
adc
sbb
xor
pushf
cmp
cmp
push
or
fdivrs
or
push
pop
mov
xchg
xchg
xchg
ds
adc
sbb
sbb
sbb
mov
dec
sub
or
bound
inc
sub
pushf
cmp
dec
push
bound
and
ret
or
jo
cwtl
jle
test
inc
loope
pop
sub
cmp
push
cmp
add
inc
leave
or
sub
test
or
mov
and
fiaddl
inc
loope
pop
and
cmp
mov
loope
and
jp
pushf
and
xchg
and
push
sarb
dec
inc
ljmp
pop
sbb
mov
test
or
loope
adc
xchg
mov
scas
inc
sbb
add
xchg
push
mov
xchg
loope
sbb
sbb
push
adcl
loope
fsubrl
push
sub
outsb
cs
lds
mov
adc
hlt
mov
cmpsl
bound
loope
incl
inc
or
mov
xor
cmpsl
loope
push
adc
sahf
out
add
movsb
xor
xor
stc
inc
xor
aam
mov
ja
mov
ljmp
test
inc
loopne
enter
add
add
sbbb
mov
adc
loope
addb
lahf
push
shrb
sbb
loope
pop
xor
test
dec
in
lea
dec
xor
add
test
or
inc
les
loope
dec
bound
ret
adc
clc
add
sub
loope
or
jo
loope
ret
adc
decl
or
inc
sbb
lcall
dec
fsubrl
push
ret
test
movsl
bound
loope
push
and
xchg
or
loope
mov
enter
jmp
cld
dec
lods
push
cmp
daa
aas
mov
out
push
loope
inc
mov
push
popf
sbbb
jo
mov
scas
icebp
adc
pop
or
loope
mov
loope
pop
mov
lods
lods
das
pop
push
into
ftst
dec
cmp
loopne
loope
cmp
dec
les
test
loope
add
adc
adc
sub
popa
loope
nop
call
les
sub
mov
adc
xchg
ret
in
ret
adc
sbb
inc
pusha
pop
loope
dec
scas
or
push
lds
add
fsubrl
and
and
stos
dec
and
sbb
add
arpl
xchg
push
in
adc
in
mov
xor
add
popa
or
jo
pop
std
shrb
sbb
xor
inc
js
fidivl
or
fcoms
ja
ret
popa
loope
sub
cmpsb
bound
loope
out
adc
inc
adc
loope
andb
fsubp
add
or
add
mov
out
cmp
dec
xorb
and
sbb
or
stos
add
add
cmp
loopne
decl
push
loope
inc
mov
sbb
loope
arpl
bound
ret
call
ret
mov
push
add
mov
sarl
and
pop
xor
shlb
adc
adc
ds
adc
stos
pop
pusha
dec
test
add
loope
nop
pinsrw
js
add
xchg
xor
and
mov
rorb
add
loope
lea
mov
test
and
loope
outsl
fcomp
inc
push
mov
rolb
mov
nop
dec
mov
nop
dec
sahf
inc
sub
add
jo
push
xlat
jns
jnp
push
pcmpgtd
pop
push
imul
fsubrp
nop
pop
mov
push
jns
cmc
push
add
sub
das
fsub
cmp
push
cs
or
ret
adc
popa
or
adc
loope
outsb
jo
ret
add
mov
sbb
sbb
pop
xor
loopne
out
push
or
sub
mov
add
xor
pop
enter
loopne
aad
xor
xor
mov
movsl
adc
adc
jne
stos
add
adc
sbb
shll
fsub
test
rcrl
loope
imul
xchg
sub
call
inc
or
loope
pusha
and
adc
adc
pushf
mov
adc
data16
std
inc
mov
or
xor
mov
xor
mov
cmpb
pop
lret
or
sbb
add
pop
fwait
jno
cmp
cwtl
xor
aaa
add
pop
inc
or
icebp
adc
or
or
sbb
pushl
adc
test
outsl
push
aaa
xchg
inc
jns
and
stos
lahf
shr
out
fs
pop
out
or
or
or
fdivrl
loope
int
add
cmp
pop
inc
fiadds
mov
ret
idivl
enter
mov
adc
enter
add
xchg
lret
inc
or
aas
xor
cmp
push
mov
sbb
cmpsl
cmp
cmp
xchg
loope
bound
sbb
loope
sbb
loope
pushf
pop
xchg
ja
xchg
sahf
jp
sahf
call
scas
cmpsl
adc
xor
popa
clc
adc
xor
adcl
adc
sahf
loope
mov
js
loope
or
leave
jnp
or
push
xor
inc
cmp
lock
mov
dec
or
fcomps
loope
sub
les
add
and
pop
xchg
adcl
ret
aas
add
push
bound
loope
movsl
or
or
adc
loope
pop
fsubs
lret
sub
sbb
pop
xchg
jge
mov
pop
cmp
nop
mov
loope
mov
xchg
jo
mov
loope
int
sub
movsl
mov
dec
imul
in
add
add
cwtl
push
and
popa
or
xchg
add
push
mov
loope
sbb
push
pusha
test
lret
cmp
or
bound
mov
loope
jo
sub
or
sub
dec
sbb
cmc
xlat
mov
or
push
or
push
dec
push
mov
fists
repnz
mov
loope
xchg
mov
fdivp
test
jp
sbb
push
pop
add
adc
adc
or
test
loope
jns
mov
mov
xor
pop
psubsb
or
push
push
or
js
loope
xchg
fcoml
cmp
mov
adc
jb
dec
idivl
lret
cld
add
xor
push
out
push
mov
xchg
es
add
sub
es
subl
xor
out
and
repz
stos
scas
inc
or
cmp
loope
add
add
push
adc
xor
daa
rclb
les
test
xor
orb
xchg
sbb
loope
stos
sbb
xchg
fdivrs
mov
sub
cmpsb
sub
xchg
je
push
or
mov
or
pop
pop
add
or
sbb
or
pop
cmp
stos
add
or
and
jbe
rolb
loope
or
jb
and
push
push
or
loope
ret
pop
shr
bound
inc
cmp
loope
ret
push
and
or
bound
loope
fs
lret
inc
call
xor
push
and
inc
loope
xchg
lods
and
sub
add
mov
loope
push
push
inc
or
loope
scas
imul
cmp
add
and
or
or
out
adc
loope
cmp
loopne
frstor
ret
cmp
adc
xor
fcoml
inc
mov
xor
cli
pop
sub
inc
inc
or
test
pop
xor
add
andb
cmp
and
sbb
or
push
pusha
push
and
adc
shrl
adc
push
xor
rorl
sub
loope
dec
or
popa
cmpsl
bound
ret
outsw
xchg
xchg
shrl
inc
call
dec
adc
rcll
in
dec
rorl
or
xor
add
or
adc
inc
insb
pop
clc
ljmp
mov
sbb
pop
add
rol
push
mov
xor
movsl
mov
out
int
outsb
add
lahf
mov
rorb
add
jl
mov
xchg
cmp
sbbb
push
xor
xor
lea
xchg
jp
mov
mov
xchg
dec
xchg
xor
std
aas
pusha
pop
adc
adc
adc
adc
rol
add
inc
rcll
loope
rcrl
inc
mov
ror
add
popa
and
inc
or
mov
leave
push
adc
movsl
push
push
sub
and
ret
rol
cs
or
push
dec
add
bound
rcll
fidivs
cmp
push
jp
inc
sbb
inc
inc
or
in
inc
lds
test
lea
cmpsb
je
sub
js
call
cmp
dec
mov
rorl
and
adc
rcl
test
outsb
or
dec
and
jne
fistps
shlb
adc
push
jg
add
push
pop
js
int
test
das
add
or
push
mov
adc
add
add
xor
add
cltd
push
subb
pop
adc
out
pushf
xor
adc
ret
adc
rorb
in
imul
add
inc
jecxz
test
add
std
loope
dec
lcall
pop
or
fsubrs
cmp
mov
push
pop
adc
call
inc
ds
js
add
lock
int3
xor
jae
bound
ret
loop
pop
scas
mov
aas
repnz
aam
add
stc
push
popa
push
lret
xor
loopne
data16
loopne
popa
xchg
js
add
adc
shl
mov
adc
pop
xor
int3
add
jnp
add
mov
or
push
int3
add
ret
and
loope
xor
fs
mov
add
push
pusha
xchg
add
xor
js
inc
xchg
cmp
sub
call
mulb
jg
or
xor
mov
xchg
out
pop
inc
and
add
pushf
xor
or
inc
clc
rorl
js
mov
sbb
xor
or
insl
out
or
inc
test
dec
fsubs
or
push
and
jae
add
xchg
mov
mov
inc
dec
sbb
data16
hlt
add
sub
int3
xor
or
dec
rcl
inc
push
push
lahf
add
xchg
inc
mov
adc
ss
and
jmp
or
loopne
xor
adc
push
int
sub
lds
sbb
add
adc
xor
jo
push
mov
adc
inc
push
add
xor
les
ret
adc
push
xor
testl
xchg
add
xchg
or
mov
inc
sub
add
dec
imul
rcll
or
pop
imul
or
test
add
fidivs
mov
pop
int
add
inc
xlat
or
mov
inc
add
iret
xor
inc
adc
or
xor
and
out
cwtl
popa
add
sbb
jne
sbb
or
loopne
sub
and
dec
loope
imul
or
xor
adc
shl
add
stos
pushf
xchg
add
out
inc
neg
js
sbb
addl
dec
xor
daa
push
loope
inc
add
cmp
xor
and
lock
ss
scas
dec
mov
jns
lahf
or
cmp
dec
xchg
ficomps
ret
jmp
ret
filds
jmp
fistpl
mov
dec
jg
lret
mov
fucomi
test
jecxz
fs
pop
dec
jge
repz
xchg
sbb
loope
ret
adc
loope
loope
sub
pop
xor
lret
popa
or
arpl
xchg
jno
popa
or
inc
push
popa
or
mov
mov
or
adc
xchg
xchg
test
into
mov
loope
int
jp
or
ret
loope
jb
inc
or
loope
adc
inc
xor
add
loope
in
mov
or
xor
jbe
adc
mov
je
adc
inc
cmp
push
dec
js
or
mov
inc
pop
xchg
ret
xor
and
xchg
bound
loope
sbb
adc
sbb
pusha
sub
in
loopne
push
call
sub
call
cmp
popa
adc
adc
loope
xchg
fcoml
and
sbb
sbb
or
test
mov
adc
daa
daa
dec
xacquire
inc
lea
mov
xor
mov
sub
aaa
push
or
mov
popa
loope
and
dec
xchg
orb
inc
push
mov
xlat
dec
fucomp
sbb
ret
adc
sbb
ret
pop
dec
push
pop
adc
ret
loope
xor
or
mov
push
or
push
mov
repnz
js
xor
xor
or
leave
clc
test
inc
std
cmp
loope
sbb
ret
adc
xchg
loope
or
pop
arpl
bound
ret
fsub
push
ret
adc
cmp
into
in
leave
hlt
shll
sbb
xor
bound
loope
inc
or
adc
aaa
scas
sub
sbb
popa
or
loope
adc
or
jo
fistps
inc
inc
loope
bound
ret
cmp
fmuls
add
dec
shlb
out
inc
adc
xor
scas
push
or
xor
loope
ret
adc
and
xor
rcr
test
aas
adc
adc
clc
mov
test
test
and
lds
mov
bound
mov
repnz
pop
xor
pusha
loop
push
adc
mov
add
add
popa
sbb
mov
inc
or
pop
and
mov
aaa
jno
mov
push
mov
mov
adc
les
ret
mov
xor
mov
mov
xor
or
cmp
pop
popa
or
mov
or
jnp
stos
and
adc
sbb
adc
sbb
add
jbe
mul
push
mov
roll
js
add
xor
xor
push
mov
mov
push
inc
or
mov
in
mov
push
inc
xor
stos
sbb
adcb
outsb
outsb
loopne
bound
popa
or
mov
mov
xor
mov
push
or
cmp
adc
or
fwait
test
xchg
cld
mov
push
popa
or
mov
or
xor
in
or
xor
sbb
or
jne
mov
cmp
adc
ret
mov
mov
sbb
or
subl
adc
lds
mov
insl
mov
or
jne
mov
and
add
mov
inc
mov
sbbb
xor
lea
xchg
faddl
outsb
ret
adc
sub
adc
mov
xor
sbb
pop
lds
bound
add
ret
xchg
les
or
mov
xor
and
les
mov
adc
add
mov
iret
sbb
or
dec
jmp
bound
popa
or
fwait
mulb
in
xor
xor
pop
lds
mov
push
bound
mov
xor
mov
jl
or
add
pushf
push
or
mov
or
mov
sbb
xchg
mov
and
cmp
sub
add
jb
and
mov
mov
mov
jo
mov
movsb
call
add
aaa
les
test
xor
and
jns
jmp
add
push
push
adc
add
add
bound
ret
adc
mull
icebp
in
mov
pop
mov
sub
fcoml
inc
mov
xchg
mov
xchg
xor
ret
jbe
lcall
les
bound
mov
inc
call
add
jno
or
mov
mov
xor
xchg
je
movsb
aas
movb
xor
add
mov
ret
adc
or
inc
mov
lock
fmull
adc
or
pop
adc
mov
je
popl
mov
into
push
adc
adc
int3
testl
mov
and
adc
adc
mov
pop
nop
push
test
mov
aam
mov
fdivr
or
adc
or
loope
mov
shl
pop
int3
xchg
mov
adc
adc
out
nop
pop
ret
adc
mov
ret
adc
and
add
or
adc
adc
adc
rclb
adc
mov
inc
push
xor
ds
inc
cmp
mov
sbb
aad
test
inc
mov
adc
push
fidivrs
mov
add
bound
ret
fisubl
add
stos
and
mov
add
xor
and
or
adc
mov
fdivrs
ret
add
aad
sbbb
or
xchg
mov
xor
ljmp
iret
aad
add
adc
add
adcb
mov
and
bound
and
add
pusha
ljmp
mov
xor
shll
sbb
lds
test
mov
push
adc
xor
cmp
out
mov
fmuls
mov
and
ret
adc
xor
outsl
sub
les
test
and
push
and
inc
mov
mov
popa
mov
push
push
jg
and
inc
adc
adc
pop
mov
inc
and
add
shl
push
xor
mov
mov
loope
mov
popa
or
xor
inc
dec
arpl
or
pushfw
cmpsb
andl
xadd
jge
adc
or
lock
cli
pop
pop
lods
or
call
inc
mov
sub
mov
out
lea
mov
or
inc
pop
outsb
outsl
and
inc
jb
sbb
jb
cld
add
or
leave
and
xchg
or
les
sub
and
test
inc
jo
les
mov
sbb
hlt
sub
testb
jp
jmp
addr16
inc
mov
ds
cmp
cwtl
inc
out
cmp
xor
jns
jnp
inc
push
shr
push
adc
add
ret
adc
or
push
imul
mov
xchg
mov
and
and
stos
bound
mov
lret
or
int
mov
mov
xor
rol
xor
shlb
nop
pop
add
rorb
or
stos
xchg
das
sub
adc
push
mov
sbb
or
rorb
mov
adc
nop
adc
pop
adc
call
cmp
sbb
sbb
popa
or
mov
testb
loope
mov
lock
es
jmp
adc
and
test
nop
pusha
sub
negl
xchg
mov
test
bound
addl
ret
mov
mov
push
pop
push
or
testb
sbb
adc
mov
adcl
orl
or
xor
sarl
mov
mov
orl
add
mov
loope
adc
or
xor
pusha
popf
addl
addl
mov
and
adc
lcall
fwait
sbbb
xorl
cmpsl
xor
inc
add
lds
adc
sbb
dec
movsl
insl
loopne
mov
loope
sbb
push
xor
lahf
aas
ds
inc
xor
cwtl
or
js
test
xchg
orl
add
mov
xor
popa
or
jb
cmpl
or
ret
push
or
mov
push
inc
ds
adc
or
sub
popa
or
pusha
mov
pop
adc
scas
jmp
push
sbb
test
cmp
les
test
pop
xchg
mov
or
sbbb
mov
or
inc
mov
push
call
cmp
negb
inc
xor
ret
adc
pop
xor
xchg
and
call
xor
sbbl
out
sub
addl
cmpsl
mov
sub
rolb
hlt
cli
and
and
rcrb
add
ret
adc
jp
sub
adc
sub
add
test
mov
pop
lds
add
inc
or
sbb
sbb
and
out
sub
jbe
or
or
inc
xor
mov
xchg
xor
xor
scas
cmpl
adc
mov
pop
inc
or
addl
xchg
fcoml
add
addl
andb
ret
adc
sbb
pop
lcall
mov
inc
or
xorl
add
push
add
orl
test
dec
lcall
xor
xorl
inc
inc
or
sbbl
ret
xor
sub
xchg
orl
xchg
faddl
and
add
sub
cmp
roll
subl
orl
addl
xchg
gs
sbbb
lds
addl
and
and
sbbb
lods
mov
orl
add
addl
orl
add
adc
and
inc
jo
add
pushf
outsl
lds
loopne
xor
sbb
das
xchg
andl
mov
out
inc
addl
aaa
inc
xor
test
popa
or
mov
add
ret
subl
xor
push
mov
add
subl
and
sbb
adc
xorl
addl
sbb
xchg
les
adc
bound
testb
inc
or
inc
pop
leave
shll
test
push
xorl
adc
or
bound
sbbb
sbbl
out
shlb
andb
and
and
fsubrs
and
and
xchg
andl
sbbl
inc
js
bound
or
xor
and
xchg
addl
and
subl
mov
sbb
ret
push
inc
enter
add
adc
test
or
add
adc
pushf
fcompl
arpl
addl
xchg
rolb
adc
adc
inc
popa
or
sbb
rorb
inc
jo
adcl
addl
dec
les
bound
push
xor
xchg
in
addb
push
xchg
pop
mov
add
mov
push
mov
mov
andl
lds
adc
xchg
mov
cmpl
or
inc
or
sbbl
push
push
ret
out
and
and
rep
out
rclb
adc
push
xchg
xor
mov
push
xorl
mov
mov
subl
and
ffreep
mov
adc
mov
stos
mov
andl
add
pop
mov
inc
bound
xorl
adc
in
mov
xor
out
lods
cmp
addl
popa
or
and
or
andl
mov
pop
ss
adc
or
sbb
and
add
xchg
sbb
xlat
and
pop
lds
adcl
add
pop
or
subl
popa
and
and
xor
inc
sbbl
mov
dec
sbbl
arpl
fcoms
or
js
push
and
adcl
fs
insl
or
orl
popa
or
gs
push
sub
mov
mov
test
lcall
mov
es
adc
adcl
andl
adc
or
xchg
adc
adc
pushf
movb
mov
adc
or
ret
xor
adc
subl
and
sbb
mov
or
mov
cmpb
lods
in
adc
sbb
or
inc
adc
addl
rcrl
shll
add
dec
invd
pop
outsl
inc
dec
mov
or
subb
sbb
push
xchg
popa
and
add
cmp
and
inc
mov
push
sub
and
add
or
addb
jg
or
xor
xchg
pusha
daa
mov
mov
xchg
jle
add
adc
and
sbb
jnp
popa
mov
test
popa
xor
xchg
pusha
jl
and
mov
pusha
popa
xor
xchg
or
mov
and
popa
mov
bound
andb
shll
add
popa
add
sub
adc
lcall
and
inc
jo
sub
sbb
push
push
or
cmp
mov
jbe
or
mov
popa
or
mov
add
mov
mov
sbb
roll
mov
cmp
fsts
adc
test
or
lds
mov
mov
xchg
mov
ret
sub
or
mov
and
or
andb
cmp
xor
mov
sbb
popa
or
mov
loope
mov
add
test
and
inc
lds
mov
out
add
mov
cs
nop
and
mov
or
jmp
or
add
and
mov
inc
mov
sbb
dec
jecxz
nop
sbb
mov
mov
out
mov
call
xor
dec
movsb
or
add
movsl
adc
js
push
cmp
mov
pusha
xor
sti
mov
outsb
xchg
add
jmp
fsubl
jb
mov
clc
daa
sbb
stos
addr16
out
shr
std
or
out
push
add
push
addr16
inc
pop
jp
inc
mov
ljmp
jle
outsl
pop
inc
jae
stos
je
mov
out
push
cli
mov
adc
lock
adc
cwtl
push
fs
int
sbb
mov
test
test
int3
adcl
push
sbb
inc
mov
and
or
push
and
pusha
mull
push
data16
imul
fdivl
or
and
enter
push
and
data16
test
hlt
xor
hlt
idivl
test
int3
mul
js
pop
sbb
and
lds
lock
test
testl
mov
fdivrl
les
testl
push
and
sub
adc
loop
testl
mov
negl
notl
ret
je
add
addr16
cwtl
inc
or
mull
test
arpl
int
xchg
cs
adcl
xor
and
mov
xor
mull
xor
jne
push
int
add
scas
xor
lcall
popa
enter
imul
xor
not
int3
and
sbb
cmp
cmp
hlt
ljmp
adc
push
fcmovbe
shr
pop
jo
add
insb
push
lcall
mov
jo
add
test
jo
jb
cmp
imul
inc
addb
or
lods
and
push
add
inc
or
sub
daa
or
cs
or
faddl
inc
adc
xchg
dec
adc
or
lock
adcl
or
xchg
pop
ljmp
call
and
movsl
cmp
push
lock
adc
push
jle
je
inc
pusha
push
insl
sbb
adc
push
push
push
or
fcomps
sbb
movsb
jo
and
dec
push
inc
loopne
push
push
mov
sbb
fs
adc
and
xor
pop
cs
out
or
loopne
call
add
sbb
xorl
js
dec
aam
or
pop
and
aad
inc
xor
or
or
or
push
or
and
ret
dec
call
and
lea
or
mov
cmpsb
cmp
add
sbb
loopne
and
je
sbb
xchg
sbb
out
mov
add
or
mov
loop
call
cmp
push
dec
and
and
adc
or
jo
fidivs
jno
or
xchg
lods
scas
add
je
fstpt
testb
pop
rcrl
inc
or
and
movsb
and
add
pop
xchg
rorl
add
sub
bnd
test
daa
int3
jae
movsb
leave
mov
mov
add
xchg
pop
sub
mov
push
and
inc
mov
inc
adc
inc
lods
fidivl
cwtl
test
and
mov
or
pop
shr
xor
dec
dec
or
inc
lea
pop
dec
pop
mov
movsb
push
stos
xchg
and
std
es
adc
aam
add
mov
pop
lea
jbe
aaa
mov
and
xor
mov
xorb
pop
or
movsl
pop
arpl
lahf
mov
sarl
pushf
fisttpll
inc
popa
lods
mov
idivl
sbb
dec
mov
push
mov
xchg
dec
enter
mov
lahf
into
std
cmp
int
jb
shrb
outsb
pop
pop
hlt
cmp
pop
mov
mov
inc
or
xor
ret
add
stc
call
cmp
nop
out
std
mov
fistl
loope
or
shr
push
lea
enter
add
mov
push
rclb
jmp
sub
sti
jae
movb
and
or
es
and
or
and
gs
call
pop
iret
add
mov
lock
cwtl
cs
je
push
ficoml
inc
ret
testb
ds
mov
and
je
mov
sub
rol
inc
cmp
loopne
push
push
jo,pn
mov
rorl
adcl
mov
sbb
ss
push
xor
lret
dec
rol
push
push
jl
jno
insl
sub
popf
pmuludq
push
rorl
dec
imull
adc
pop
icebp
xor
repz
lock
pusha
pop
icebp
fs
xor
xor
rolb
rolb
push
sbb
das
dec
mov
outsb
adcb
push
xchg
mov
dec
shlb
lock
and
lea
out
and
pop
and
stc
dec
mov
xchg
xchg
mov
push
js
sbb
bound
leave
push
dec
mov
xor
dec
mov
js
mov
jo
mov
idivb
mov
fucomi
mov
dec
jmp
insb
mov
push
xchg
mov
and
fsubl
shl
mov
and
fsubs
loopne
mov
sbb
in
add
xorl
mov
movsb
add
or
jmp
mov
mov
and
lahf
pop
push
pop
xorb
xchg
push
mov
std
mov
jmp
add
out
adcb
push
xchg
mov
dec
shlb
dec
add
cmp
mov
and
pop
sub
pusha
scas
mov
sub
sbb
xchg
push
mov
imul
add
lods
loope
inc
xchg
pop
jmp
mov
mov
dec
shlb
and
subl
push
loopne
dec
add
orl
push
ljmp
sbb
push
and
or
add
and
mov
mov
roll
fdivl
cmp
mov
rcrb
pop
call
cmp
adcl
mov
loopne
fcoml
sbb
and
mov
pop
scas
add
cmpsl
and
and
mov
mov
mov
or
push
mov
and
xchg
xor
pop
mov
in
mov
mov
mov
jecxz
push
add
mov
add
xchg
push
pushf
lcall
mov
pop
push
dec
mov
dec
shlb
xor
pop
sbb
rorb
imul
dec
rol
push
mov
shll
mov
jmp
adc
pusha
movl
dec
xor
xchg
xor
push
lds
cwtl
scas
and
sbb
mov
xor
push
mov
test
add
inc
mov
xchg
mov
orl
xor
xchg
push
mov
bound
mov
dec
sbb
and
xor
mov
xchg
mov
xchg
mov
dec
rolb
mov
jl
enter
dec
cmp
adc
or
and
call
imulb
test
shlb
add
mov
sub
movsb
mov
repnz
andb
xchg
movsb
mov
andl
rol
popa
adc
push
fsubrl
dec
mov
xchg
mov
test
mov
xchg
mov
nop
hlt
movsb
outsb
or
ret
add
mov
sbb
dec
mov
xor
jle
pop
xchg
xor
push
mov
mov
and
push
mov
fdivrs
dec
shl
cs
call
repnz
insb
add
sub
push
pop
add
mov
push
rorl
lret
add
sahf
imull
iret
or
push
mov
movsb
xor
sahf
out
xchg
mov
or
xchg
mov
jns
loope
push
cld
adc
mov
dec
xchg
add
fs
js
loopne
mov
pop
pop
nop
mov
test
sarb
push
or
adc
iret
repz
and
sub
xor
inc
push
into
repz
push
xchg
push
xchg
mov
outsl
orb
push
cwtl
lods
rolb
dec
mov
pop
inc
rol
sbb
pop
fcoms
mov
add
repnz
adcl
fs
sbb
inc
xor
dec
sbb
push
mov
pusha
int3
mov
outsb
repnz
iret
aas
push
push
adc
xchg
xor
adc
or
dec
dec
ret
popa
cli
out
fsubl
mov
dec
adc
and
mov
add
sbb
sbb
sbb
dec
or
dec
popa
cmp
lahf
pop
mov
nop
lea
add
push
loop
and
push
loope
inc
rolb
inc
sbb
or
pop
popa
cmp
sbb
push
popa
popa
adc
popa
mov
inc
popa
adc
mov
movsl
or
imul
rclb
rolb
ja
and
sbb
xchg
xor
rorb
dec
sbb
push
in
lds
jnp
ficoms
add
in
dec
add
sbb
aaa
dec
sbb
mov
ret
popa
mov
rol
sbb
xchg
mov
into
in
inc
popa
xchg
out
pop
xor
popa
xchg
out
adc
push
les
adc
sti
imul
mov
and
mov
popa
jae
sbb
add
outsb
rorb
push
orl
jl
cwtl
movsb
xorl
rorb
mov
mov
negb
dec
add
mov
add
mov
sbb
cmp
xchg
push
popa
pusha
pusha
inc
rol
pop
popa
clc
test
xchg
inc
dec
cmp
jmp
scas
adc
aad
xor
sbb
push
push
xlat
clc
push
adc
imul
ficompl
js
out
inc
mov
xor
adc
mov
xor
sbb
pop
mov
rorb
mov
lock
push
mov
std
popa
sub
or
das
sub
cmp
adc
shlb
push
xchg
movsb
mov
popa
int3
pop
pop
mov
dec
add
in
mov
xor
jmp
jns
or
shlb
xor
jo
out
mov
sub
mov
sbb
mov
rolb
adc
lcall
xor
push
sbb
popa
sahf
add
imul
jg
loope
push
call
mov
shlb
sbb
mov
lret
les
xchg
xor
dec
sbb
and
lret
dec
sbb
popa
xchg
xor
mov
dec
add
popa
pop
adc
or
loopne
and
in
mov
rclb
sbb
dec
push
popa
and
sbb
push
imul
mov
inc
and
sbb
push
and
inc
rolb
popa
movsb
add
js
lea
imul
jmp
and
xor
and
popa
sub
mov
int3
aas
ss
push
add
leave
ret
fsts
or
mov
and
dec
mov
mov
push
jo
aas
mov
aas
dec
aas
repz
or
push
aam
mov
cmp
les
lock
add
jmp
adc
push
lds
aas
nop
in
jb
lret
inc
lret
cwtl
lret
jnp
pop
nop
test
enter
aas
pop
shrb
push
aas
push
ja
les
aas
mov
or
iret
repz
fs
je
add
jge
fwait
aas
mov
int3
lret
aas
push
xor
add
adc
push
pop
les
aaa
fs
adc
mov
jmp
sbb
add
add
push
cmp
mov
xor
in
sbb
mov
sbb
popl
inc
push
cwtl
push
jge
sub
insl
mov
cmpsb
add
inc
add
jge
adc
add
mov
mov
mov
mov
adc
mov
aad
loopne
cmp
inc
insl
rcrb
add
rcrb
push
stc
push
stos
push
call
subl
inc
mov
sbb
cmp
rol
xlat
lock
jmp
add
adc
testb
cmp
sbb
mov
mov
mov
sub
mov
or
and
mov
rol
pop
test
mov
cmpl
imul
adc
or
adc
pop
sbb
pop
xor
sub
inc
jb
fbstp
or
mov
cmc
jo
mov
in
adc
call
cmc
xchg
out
cmp
push
cmp
call
repnz
mov
loop
adc
jo
sahf
loopne
pop
mov
cmpsb
lret
cmc
in
test
cs
cmc
test
mov
push
lret
cmc
sti
mov
shlb
cmc
cld
js
mov
xchg
test
push
inc
add
adc
jo
les
and
scas
push
insl
adc
repnz
insl
enter
mov
sbb
aaa
stos
pop
dec
sub
fldl
insl
insl
flds
je
push
insl
push
and
loope
jns
push
push
lcall
push
imul
cmp
jo
inc
mov
ljmp
shlb
cmpsb
dec
add
mov
push
shrb
mov
mov
dec
mov
pop
push
push
rolb
gs
sbb
push
mov
mov
movsb
in
push
fisubs
rol
mov
add
lods
and
repz
xor
rcrl
mov
movsl
mov
addb
xor
cmp
mov
shlb
and
movsl
imul
mov
inc
sub
xor
xchg
cmpsb
add
dec
xor
cmpsb
imul
arpl
jo
movsl
mov
jl
popa
mov
add
int3
xor
adc
mov
scas
dec
push
lcall
xor
sub
add
lds
add
ret
movntps
lods
je
movsb
sub
data16
fs
xor
mov
pop
mov
or
dec
mov
nop
push
push
lret
aam
mov
add
or
movsb
add
push
adc
inc
mov
mov
je
shr
ljmp
imul
adc
dec
and
mov
popl
nop
push
fadds
or
add
add
cmp
pop
lea
movl
rclb
cltd
or
add
add
add
test
js
int3
das
rolb
movsl
fisttpl
xor
push
dec
in
fs
xor
sbb
cmpsl
mov
dec
adc
rolb
and
adc
xchg
iret
jo
ret
dec
shrl
iret
and
dec
repz
xchg
aas
daa
or
adc
push
fimuls
inc
add
pop
xor
cwtl
loopne
jo
adc
and
pusha
push
or
repz
and
jle
and
jne
add
xor
dec
sbb
lods
mov
out
orl
and
xchg
push
outsb
adc
pushl
fidivrs
add
mov
sbb
lcall
xchg
push
inc
inc
sbb
pushl
xchg
push
out
inc
pop
dec
decl
test
aad
aas
aaa
mov
push
in
dec
movsb
cmp
lea
adc
fs
ds
test
es
pop
sub
dec
incl
and
xchg
filds
ja
or
aad
sbb
js
xchg
push
xchg
test
push
fcoml
pop
sub
xchg
push
push
cmp
cli
testl
cmp
call
dec
add
imul
add
imul
xorl
imul
xor
cltd
jl
filds
adc
push
js
mov
adc
ret
sbb
xchg
roll
xor
js
sbb
cltd
xchg
cmpsb
sbb
inc
jns
rolb
imul
add
fiaddl
enter
or
dec
cltd
jle
sbb
cltd
jae
mov
xor
dec
cltd
or
adcl
cmpl
add
test
lcall
incb
pop
inc
cltd
daa
xor
or
loopne
ljmp
xchg
add
sbbl
cmp
mov
inc
cltd
nop
rcrb
push
ret
inc
cltd
cld
in
pop
sub
nop
cltd
test
inc
lods
xlat
in
mov
outsb
add
sbb
imul
push
mov
or
nop
cltd
movsb
xorl
call
sbb
add
jbe
jo
cwtl
push
or
nop
push
pop
mov
or
popf
fstl
cmpsl
outsb
pusha
lods
and
ret
add
aam
js
call
cmp
pop
jbe
test
movsb
cltd
aam
lock
add
pop
add
jmp
shld
std
sub
or
enter
mov
xor
aam
cltd
jecxz
jl
mov
cmpl
or
inc
push
pop
inc
sub
lea
push
rol
cltd
jl
rolb
dec
add
cmp
cmp
inc
inc
cld
mov
push
dec
ficoms
add
cmp
pop
imul
add
cltd
xor
cltd
cmp
or
xchg
nop
push
fiadds
cltd
xchg
nop
push
mov
cltd
popf
xorl
or
dec
das
pushf
loop
cltd
sbb
pop
clc
and
push
sbb
jb
shr
add
mov
push
imul
mov
dec
int3
dec
xor
adc
add
dec
or
call
js
int
mov
rcr
sbb
pop
subl
inc
leave
inc
xor
fimull
jb
cmpsl
mov
pop
adc
pop
xor
cmp
mov
sub
je
call
and
inc
dec
dec
mov
divb
push
fnstsw
and
in
jp
enter
sub
xor
enter
cmp
enter
push
cmp
or
pop
mov
fstl
flds
push
les
push
jne
add
nop
cmp
or
dec
shr
adc
enter
cs
iret
jge
orl
push
mov
outsb
sbb
inc
fnsave
sbbb
and
das
rcr
adc
sbb
adc
int3
push
push
mov
sub
add
mov
fucom
adc
cmpsl
sbb
out
ret
mov
push
test
psllw
clc
jae
lea
cmpl
dec
push
inc
push
push
inc
add
push
dec
sub
pushl
xor
shr
jns
es
mov
sub
pop
es
icebp
xorb
insl
adc
xor
movsb
cmpl
mov
movsb
icebp
xor
pop
cmp
add
xchg
jb
and
shlb
insl
shr
cmp
sub
loopne
in
daa
aad
sbb
mov
inc
mov
dec
insl
jnp
rolb
or
push
jp
and
sbb
into
inc
enter
adc
shlb
cmp
orb
and
dec
lock
and
insl
pop
imul
mov
sub
or
insl
dec
add
lods
lret
mov
inc
push
inc
insl
lds
movsb
subl
insl
and
sbb
es
push
insl
or
xchg
push
dec
jbe
sbb
insl
inc
xchg
push
out
and
dec
imul
adc
or
movsb
subl
jl
loopne
mov
shll
inc
adc
rolb
adc
pop
mov
shrb
ja
inc
sbb
int3
pushf
mov
insl
out
add
gs
rorb
outsb
pop
rol
add
mov
push
pop
xchg
pop
mov
pusha
jne
dec
pop
andl
or
pop
sub
mov
cmc
or
call
mov
pop
jns
fsubl
adc
or
adcb
call
or
pop
cwtl
sbb
mov
fdivrp
push
pop
or
xchg
bound
movsl
pusha
pop
pop
xor
aam
xor
add
pop
roll
xor
outsb
gs
sbbb
imul
inc
push
mov
sbb
mov
popf
movsl
test
jo
inc
sbb
or
xchg
inc
dec
frstor
shrl
nop
pop
aad
adc
cmp
rcrb
daa
and
and
in
pop
fcomps
cltd
push
xchg
nop
rorl
add
mov
sub
or
push
sbb
xor
shrb
adc
outsb
add
test
dec
test
inc
test
subb
test
rolb
mov
jo
or
mov
pop
dec
rclb
fdivs
loopne
test
rep
das
and
xor
lret
push
aas
xchg
or
pushl
adc
test
loopne
dec
add
icebp
push
nop
test
sbb
rcr
test
mov
push
add
test
add
dec
hlt
movsb
adc
mov
adc
out
mov
insb
pop
lcall
push
sbbl
pop
test
sbb
inc
sbb
inc
into
xor
or
aaa
cltd
dec
cli
subb
and
add
push
test
cmp
push
xor
push
inc
test
addb
adc
xorb
test
sub
dec
add
pusha
push
add
mov
sub
dec
test
or
and
or
or
inc
movsl
mov
add
add
adc
test
add
daa
mov
pop
test
stc
xor
sub
dec
test
dec
test
pushf
xor
push
inc
test
call
test
inc
push
test
dec
subb
imul
cmpsl
push
push
push
add
adc
pop
pop
ret
test
add
mov
fisubl
push
add
add
or
mov
dec
add
cmpsb
and
loope
or
cld
add
cltd
int
mov
jp
ja
inc
sbb
movsl
or
add
mov
cmp
nop
push
mov
andb
add
pop
mov
add
mov
nop
push
outsb
or
adc
fcomi
pusha
xor
mov
add
in
adc
mov
int
jno
add
shrl
add
mov
push
pop
adc
mov
nop
push
mov
dec
cwtl
mov
and
and
test
push
add
cmp
add
mov
sahf
imul
insl
leave
fldl
sub
pushf
push
imul
and
mov
xchg
or
mov
rol
adc
mov
add
push
insl
sub
mov
fisubs
jno
imul
lods
jbe
fadds
ja
sbb
in
mov
push
inc
mov
andb
add
aam
mov
repnz
imul
stc
sbb
add
rolb
and
or
loopne
push
cwtl
mov
mov
in
mov
add
or
xor
mov
out
test
pop
xchg
cmpsb
popa
icebp
inc
sbb
call
sbb
mov
dec
inc
mov
cwtl
add
stos
andb
lock
inc
ror
add
shlb
mov
mov
js
cmp
or
mov
add
imul
push
add
lahf
mov
or
stos
and
pop
dec
inc
and
fcomps
adc
mov
mov
loope
or
mov
add
test
lods
push
dec
add
adc
dec
test
mov
or
dec
call
push
scas
sbbl
and
push
js
nop
mov
pop
loop
insb
xor
xchg
mov
sarb
shl
mov
add
mov
and
adc
mov
push
mov
pusha
ljmp
mov
rolb
sub
mov
adc
push
movsb
int3
mov
jo
andb
mov
sub
mov
js
adc
inc
es
xchg
rolb
mov
nop
mov
adc
mov
jo
and
inc
sbb
add
mov
rorb
pop
push
rorb
cmp
add
mov
push
push
mov
dec
add
mov
cmp
mov
xorb
push
mov
mov
xorb
loope
mov
lcall
add
mov
in
adc
add
mov
inc
mov
xor
movsb
andl
and
rol
loope
mov
add
inc
add
or
xorl
pop
jnp
or
mov
nop
push
jns
lea
pusha
daa
es
fxch
lahf
push
adc
imul
out
shlb
dec
das
jge
sbb
sub
push
lret
inc
sbb
dec
add
dec
cmp
outsb
or
cmpsb
and
inc
jge
ret
pop
out
pop
clc
cld
movsl
dec
add
les
loopne
cmpl
mov
stos
andb
mov
jge
out
pop
adc
das
cmp
int3
movsb
xorl
jo
add
add
jbe
andb
imul
pop
adc
or
cwtl
push
int
add
add
loopne
or
push
add
imul
pop
pop
cmp
hlt
cli
push
into
dec
add
add
loopne
or
push
add
imul
pop
xorl
das
push
fisttpl
sub
sti
sub
pop
cmpsb
or
aad
mov
add
mov
mov
mov
dec
add
or
fistps
es
addr16
fildl
rol
push
out
mov
lret
mov
add
shlb
ljmp
adc
inc
incl
in
jns
decb
sbb
pop
enter
and
add
mov
adc
pop
adc
adc
add
rorb
mov
pop
mov
mov
cmpsl
push
testl
test
add
rol
rorb
mov
outsl
adc
add
or
mov
and
inc
jne
test
push
loop
mov
or
jno
movsb
andl
cs
push
mov
pop
dec
dec
movsb
test
shr
jae
pushf
mov
cmp
jmp
je
push
mov
cltd
dec
push
sbb
or
xlat
pusha
or
pop
roll
mov
fucomi
fs
xlat
aad
cmc
xlat
aad
outsb
or
flds
iret
and
lcall
cmpsl
pushf
xorl
jns
xchg
mov
sbb
jns
insb
pop
rolb
and
rcr
jns
mov
scas
daa
and
push
jns
dec
add
jns
andb
shr
dec
add
add
push
movb
pusha
jo
nop
jns
xor
inc
add
sbb
or
cmpl
mov
jns
add
and
mov
sbb
sbb
dec
add
mov
rcll
rol
mov
push
pop
orb
outsl
jno
fstpt
adc
insl
and
add
dec
jns
add
jns
nop
push
in
call
imul
jns
push
ficoms
dec
imul
fs
push
add
mov
nop
push
outsb
mov
movsb
add
sbb
jns
sbb
cmp
and
cld
dec
add
or
jns
fsubrl
mov
pop
mov
or
or
and
jns
add
pop
mov
jns
add
add
xorl
loopne
sbb
or
or
or
pusha
and
and
push
xor
add
cmp
add
imul
xor
test
push
mov
xor
and
sbbl
dec
addl
sbbl
rolb
imul
or
orl
jmp
jmp
fsubs
and
mov
xchg
fsubs
push
rolb
pusha
and
push
jle
sbb
cmp
inc
xorl
or
rorb
subl
subl
mov
add
add
sbb
mov
imul
add
addb
orl
pop
and
imul
cmp
or
adc
subl
push
out
push
adc
inc
sbb
or
mov
or
inc
movsb
cmpl
imul
xchg
sbbb
push
add
cmp
sub
adc
pop
sahf
and
push
test
cmpsb
bound
and
xor
xlat
andl
adcl
sbb
inc
insl
xorl
addl
mov
mov
cmp
lds
std
xchg
jmp
call
ret
dec
push
imul
sti
inc
sbbl
xorl
xchg
xor
sub
call
xor
dec
add
adc
or
ret
mov
cwtl
ss
sub
or
stos
rolb
push
mov
addl
mov
andl
adcl
cmpl
int3
inc
jg
jg
and
decb
stos
dec
ljmp
in
dec
pop
or
inc
sbb
xorl
shlb
inc
add
and
or
sbb
dec
cmpl
subl
andl
mov
pop
subl
jo
and
inc
sbb
cmp
mov
nop
and
push
bound
nop
cmpl
sbb
or
addl
adcl
andl
push
data16
xorl
add
nop
orl
or
lock
stos
cmp
xorl
mov
sub
inc
pop
out
clc
pop
sbb
adc
jnp
cmp
call
pop
sbb
mov
adc
and
ja
nop
push
sahf
xor
dec
push
lcall
ret
lock
inc
dec
add
pop
and
inc
sbb
and
and
add
movsb
add
xorl
nop
and
mov
push
and
jae
fiadds
imul
jne
push
and
pop
loop
or
rclb
adc
jmp
xor
hlt
mov
mov
push
and
dec
or
ss
jbe
and
add
andl
movsl
inc
mov
jae
cmp
xorl
movsb
add
pusha
inc
sbb
mov
and
inc
sbb
hlt
add
rcrl
or
adc
clc
and
and
fbld
add
or
mov
jo
daa
je
xorl
jnp
and
mov
popa
lea
out
sbb
into
stos
inc
sbb
repz
adc
imul
xor
pop
sbb
fsubs
mov
and
add
or
popl
inc
sbb
and
inc
rol
sbb
xchg
push
and
and
and
and
fmull
xchg
fsubs
mov
push
and
push
pushf
pop
imul
nop
and
sbb
xor
cmp
inc
add
punpcklwd
push
sbb
and
xor
sbb
and
jne
push
test
pop
imul
orl
imul
and
inc
cmpb
and
or
dec
pusha
xor
and
jmp
stos
xorl
add
sbb
lret
popa
add
and
dec
pop
imul
sbb
mov
sub
xorl
push
inc
mov
je
jmp
sub
xchg
loope
and
js
in
or
and
ret
sbb
sbb
push
add
and
jo
inc
je
xor
mov
mov
and
daa
add
and
int3
icebp
stos
sbb
inc
jbe
add
rcl
jp
add
loope
popa
std
or
adc
and
adcb
cmp
xor
test
rol
add
mov
add
inc
movsb
out
sbb
aas
mov
movsl
inc
add
or
enter
adc
xchg
add
mov
andb
mov
lret
out
pusha
and
lds
out
orb
adc
push
adc
push
into
add
mov
aaa
push
adc
inc
movsb
sbbl
mov
push
loope
sti
adc
fcoms
and
iret
or
xchg
push
out
lock
insl
and
out
mov
or
scas
or
nop
insl
mov
in
jo
inc
sbb
pushf
and
or
and
mov
mov
ja
andl
and
or
cmp
jno
inc
movsb
out
inc
rolb
sahf
add
incb
fcomps
cwtl
adc
push
fldl
and
out
orb
adc
push
out
xor
mov
xchg
push
outsb
and
xor
add
adc
push
and
mov
jmp
mov
js
stos
int
xor
ja
inc
sbb
test
add
rol
bound
out
add
loopne
mov
sbb
push
adc
cmc
bound
push
loopne
or
jmp
call
adc
jp
add
inc
rolb
in
sub
add
out
xor
sub
or
adc
inc
sbb
out
movsb
add
adc
rorb
out
sbb
push
ficoms
test
rol
loope
out
jnp
cmpsl
std
andl
adc
lahf
out
adc
dec
push
push
mov
cmp
out
adc
inc
inc
movsb
add
mov
lods
repnz
sbbl
out
mov
mov
out
mov
push
mov
dec
and
mov
das
shll
sti
mov
cmpsb
out
inc
rolb
imul
pop
sti
dec
pusha
adc
sbb
sub
outsb
or
in
shr
std
icebp
dec
add
or
mov
or
or
out
push
scas
addb
nop
add
xchg
out
in
cmpsb
mov
pop
cmp
ret
out
and
shl
mov
outsl
lods
out
rolb
out
rolb
push
out
lock
mov
mov
jecxz
test
rolb
xchg
push
fsubl
out
fbld
and
pop
inc
out
sub
add
adc
popa
jbe
orl
cmp
dec
add
movsb
add
pop
mov
sub
mov
jnp
sbb
xchg
push
out
inc
inc
sbb
out
rol
add
or
lock
adc
imul
push
adc
subb
push
in
push
inc
out
sub
add
xchg
out
dec
add
out
add
sbbb
out
test
adc
adc
and
or
mov
push
cmp
add
mov
sti
pop
inc
icebp
adc
movsb
and
pop
push
mov
movsb
loope
movsl
and
or
inc
add
adc
mov
sub
mov
inc
inc
loope
or
push
mov
sub
in
and
push
inc
sbb
loope
xor
or
cmp
or
add
or
loope
dec
add
ljmp
sbb
xor
rclb
stos
mov
jp
rcrb
loope
mov
test
pop
pop
add
mov
arpl
add
imul
sbb
mov
dec
inc
mov
add
jl
mov
xor
and
or
xchg
loope
push
sub
inc
push
xchg
push
outsb
mov
push
adc
push
ror
sub
push
adc
jmp
movsb
and
cwtl
pusha
pusha
sub
loope
lods
inc
add
and
or
movsb
cmpl
or
inc
movsb
cmpl
add
fdivr
add
mov
add
orl
loope
inc
inc
sbb
out
mov
aaa
sbb
dec
add
cmp
dec
cmp
sbb
fsubs
and
adc
sub
adc
and
cli
mov
mov
jo
fldl
ss
push
mov
inc
loope
test
push
pop
mov
rol
dec
mov
inc
loope
sarb
or
loope
out
mov
loope
add
push
xlat
stos
rolb
and
inc
loope
or
dec
add
loope
bound
mov
mov
ss
jmp
enter
sub
and
inc
loope
roll
adc
out
adc
mov
fwait
test
shll
or
xor
adc
pop
mov
ja
sub
rol
loopne
loope
push
inc
movsb
and
dec
daa
xchg
push
into
aaa
sbb
xor
inc
adc
loopne
mov
jge
std
jae
adc
adc
inc
movsb
addl
mov
negl
inc
sbb
dec
repz
adc
jo
jg
rolb
push
inc
adc
inc
or
test
add
mov
inc
sbb
inc
inc
sbb
add
adc
fsubrl
cs
xor
insb
cmp
adc
movsb
add
push
in
add
sbb
push
sbb
iret
dec
inc
stos
dec
add
mov
iret
cli
and
imul
inc
sbb
and
je
sbb
and
mov
push
and
cltd
push
xor
addl
movsb
and
icebp
scas
shrl
addr16
inc
sbb
sbb
outsb
andl
addl
orl
loopne
call
subl
ds
mov
or
test
fisttpll
lret
rol
sub
movsb
add
push
or
pop
push
add
sub
and
inc
xchg
movsb
sub
push
xchg
push
pushf
fsubrl
and
pop
sub
popa
adc
imul
and
sub
mov
xchg
movsb
subl
dec
add
fbld
outsl
or
xor
pop
push
not
sarb
add
jle
outsl
idivl
or
mov
xchg
mov
xorb
mov
push
fdivrl
nop
cmp
inc
dec
add
je
outsl
es
out
adc
loopne
push
cmc
sub
loope
pop
mov
aaa
shrb
inc
push
imul
js
outsl
add
iret
pusha
repz
iret
loopne
popf
dec
outsb
pop
or
arpl
mov
inc
pusha
lcall
loop
fs
fisttps
outsb
dec
movsb
add
lock
dec
add
into
scas
mov
push
jno
loopne
dec
add
or
sub
and
pop
adc
and
shlb
fmuls
xchg
pop
adc
cli
lea
je
pop
cmp
outsl
or
imul
cltd
or
mov
ret
dec
arpl
or
es
fsubrl
mov
xchg
outsl
divb
outsb
push
pop
xchg
js
add
pop
lods
es
outsl
sbb
jae
mov
imul
rolb
push
loop
daa
outsl
popf
call
sbb
outsl
popf
mov
sbb
mov
ret
jle
adc
or
outsb
pusha
and
sbb
xor
mov
inc
sbb
xor
xchg
push
outsb
outsl
lock
mov
outsl
jbe
push
cmp
popf
sbb
je
jb
loop
pushf
jo
sbb
dec
add
outsb
and
jge
outsl
daa
push
sub
add
out
fadd
adc
and
nop
fcompl
sbb
sub
sbb
sbb
or
mov
push
orb
xchg
push
out
nop
pop
outsl
sarb
jnp
pop
mov
or
and
shrb
mov
dec
movsb
subl
add
inc
sbb
xchg
push
push
mov
or
dec
movsb
cmpl
fdivrl
std
shlb
outsl
insl
shlb
outsl
mov
pop
adc
pusha
jne
cwtl
sbbb
push
insb
or
jo
int3
xor
fildl
mov
and
aam
rorb
inc
adc
shl
test
jmp
cmp
mov
orb
rorb
fnstcw
dec
and
bt
jo
mov
and
movsb
add
dec
pop
inc
jmp
jo
adc
mov
aam
mov
adc
xor
sbb
xchg
and
jb
add
stos
inc
inc
or
mov
stos
mov
bound
jno
stos
push
mov
adc
sbb
inc
lret
dec
sbb
ret
pop
adc
test
or
popa
or
insb
pop
adc
dec
adc
aam
pop
jnp
dec
add
pop
pop
movsb
sbbl
xchg
rorb
dec
sbb
andl
cmp
mov
rol
mov
mov
lcall
leave
pop
push
pop
mov
inc
test
stos
pop
jbe
adc
scas
imul
loopne
pop
pop
xchg
mov
or
inc
inc
sbb
mov
xlat
pop
insl
push
pop
imul
pop
mov
inc
dec
inc
add
cwtl
stos
pop
push
roll
cmpsb
call
je
insb
shrb
rcrb
add
call
add
pop
xorl
add
pop
outsb
push
cmp
push
cwtl
or
xchg
push
pop
inc
roll
and
movsb
add
add
xor
inc
sbb
inc
add
pop
ror
push
jo
push
pop
xchg
push
pushf
icebp
into
push
push
inc
jne
stc
pop
push
out
jne
pop
push
popf
push
iret
add
xchg
pop
or
or
sbb
pop
add
adcb
xchg
push
pop
movsb
sbbl
and
pop
push
scas
aas
jmp
cmp
xchg
push
xchg
dec
test
inc
imul
rcrb
js
pop
pop
jecxz
dec
add
inc
pop
imul
pop
push
movsb
pop
stos
sbb
and
pop
movsb
sbbl
push
pop
cld
mov
pop
dec
add
sub
frstor
push
xchg
ljmp
push
pop
imul
pop
mov
sbb
sbb
leave
movsb
add
aaa
adc
movsb
shrb
dec
pop
xchg
aaa
movsl
aas
nop
or
js
or
arpl
push
call
dec
mov
pop
rolb
loope
rcrb
mov
into
in
dec
js
cmp
sbb
jmp
push
pop
mov
and
stos
pop
xchg
jo
push
je
and
out
mov
rorb
outsl
jno
pop
scas
sbbl
push
rcrb
movsb
pop
push
add
sarb
inc
mov
orb
movsb
add
adc
imul
xor
pop
movsb
pop
aad
cmpsl
mov
mov
xor
mov
adc
movsb
sbbl
pop
jno
pop
outsl
and
mov
repnz
in
pop
movsb
addl
jno
push
pop
rolb
lcall
rolb
in
mov
push
push
imul
out
ds
insb
or
xor
add
xor
out
push
dec
adc
daa
lock
and
pop
push
xor
adc
xor
test
imulb
and
mov
idivl
cmpsb
cmp
mov
dec
add
fcomps
or
adc
jmp
aaa
adc
out
pop
sbb
inc
sbb
rorb
push
push
ret
dec
ss
sbb
ja
mov
push
dec
rcrb
cmp
add
rcrb
dec
mov
ljmp
rolb
loopne
pop
jne
push
out
ret
das
add
push
or
movsb
subl
pop
pop
xor
mov
call
and
sti
inc
sbb
xor
pop
pop
movsb
pop
and
popf
adc
fwait
jne
inc
pop
xor
daa
or
fsubl
mov
imul
and
pop
add
sbb
lds
pop
mov
pop
rclb
mov
sub
rcrb
push
xor
das
xchg
adc
imul
inc
sbb
push
leave
fmuls
rcl
pop
pop
pushf
or
loop
or
add
sbb
push
inc
jno
pop
filds
nop
xchg
sbb
mov
mov
out
mov
and
pop
movsb
sbbl
xchg
xor
pop
pop
push
adc
and
das
inc
lret
aaa
inc
pop
movsb
pop
xchg
imulb
rol
stos
add
mov
dec
aam
sbb
xchg
or
dec
inc
lods
pop
imul
pusha
inc
xchg
dec
adc
movsb
pop
les
rcrb
mov
enter
xor
add
movsb
pop
shlb
out
pop
movsb
xorl
and
call
out
xor
jmp
mov
cs
xor
push
rclb
xchg
sbb
or
jns
jnp
mov
mov
pop
movsb
andl
or
stos
inc
add
dec
add
mov
popa
mov
xchg
aad
idivb
sbb
dec
fistpl
cld
loopne
jmp
xor
rolb
lock
jno
into
pop
pop
popa
clc
insl
or
idivl
pusha
ret
dec
popa
iret
xor
imul
je
mov
inc
push
pop
push
mov
lock
add
inc
sub
cmpsl
les
inc
pop
pop
movsb
add
stos
cs
popa
xchg
push
fiadds
adc
int3
rcrb
popa
mov
lds
das
imul
xchg
add
popa
jo
dec
add
callw
pop
add
imul
movsb
adc
aaa
add
xchg
cmp
mov
mov
mov
loopne
xor
push
mov
loopne
mov
and
shrb
in
fwait
cs
outsb
shrb
cmp
add
movsb
andl
mov
add
call
popa
icebp
rolb
shlb
sbb
les
aaa
les
cmp
movsb
ret
es
mov
cmp
inc
sbb
popa
imul
fcoml
popa
imul
loopne
popa
rcrb
add
aam
or
add
popa
testl
popa
dec
add
inc
movsb
add
mov
je
pop
popa
jb
xchg
push
pop
imul
cmp
stos
mov
stc
adc
mov
push
popa
cmp
push
cwtl
or
inc
sbb
add
and
imul
popa
inc
sbb
pop
dec
xchg
push
in
shlb
imul
cmp
add
add
pop
movsb
popa
ret
sub
call
popa
rolb
fdivl
pushf
cs
lock
push
out
adc
loop
or
xor
pop
xor
xchg
popa
cs
sti
cmp
xor
xchg
or
popa
and
mov
aam
jo
push
out
sbb
popa
jecxz
lcall
lock
lahf
jmp
loopne
cs
xchg
je
jl
adc
imul
jle
out
xchg
xchg
insb
mov
xor
xorb
and
faddl
cmp
adc
add
aad
pop
mov
mov
jbe
add
and
jo
push
rorl
add
sbb
mov
pop
sub
sbb
and
imul
fsubr
xchg
call
lret
out
mov
out
out
imul
push
fs
dec
add
shlb
xor
or
out
mov
add
xorl
idivl
mov
in
and
ficomps
pop
adc
adc
jbe
jo
xorb
ds
add
sub
add
jo
cmpsb
out
sbb
or
ljmp
data16
bound
adc
pushf
out
mov
and
out
cmpsb
and
mov
rolb
sbb
fwait
mov
xor
out
icebp
sub
out
movsb
xor
lcall
mov
adc
out
inc
sbb
mov
out
adc
xor
and
adc
push
push
add
je
jnp
nop
out
mov
aam
inc
add
out
mov
push
push
dec
xor
rcll
out
rcl
pop
movsb
sub
sub
ljmp
out
leave
call
out
inc
inc
imul
xor
mov
and
imul
mov
imul
add
movsb
pushf
ret
out
and
or
jo
fimuls
xor
lock
push
mov
int3
add
bound
js
out
repnz
shr
sbb
in
clc
insb
pop
outsb
int3
orb
push
out
and
add
lds
aas
add
or
das
mov
add
out
push
mov
out
aaa
popl
adc
imul
fprem1
add
jl
push
inc
js
add
out
rolb
sbb
xor
pop
and
adc
add
push
out
mov
and
xchg
and
xor
imul
dec
cmp
mov
xchg
adc
das
add
shr
scas
mov
out
and
xor
outsb
negl
and
rol
or
loopne
data16
xchg
rcrl
fdivr
push
lea
rol
and
push
adc
xchg
adc
clc
movsb
movsl
lock
subb
inc
out
enter
add
out
pop
adc
pop
xchg
and
or
out
adcl
inc
sbb
clc
xor
jo
nop
push
out
adc
stos
xorb
mov
sbb
out
push
add
rcrb
in
xor
add
xchg
dec
add
sahf
out
and
push
or
adc
test
rolb
adc
and
xor
push
mov
cmc
lret
jne
or
dec
jbe
add
dec
cmc
les
sbb
lods
pop
nop
adc
xchg
nop
push
into
mov
add
push
or
sbb
lcall
js
add
cmc
cmp
cs
sbbb
xor
das
xchg
dec
add
mov
xchg
cwtl
stos
stos
dec
fidivs
mov
xor
mov
rol
jge
enter
sub
lar
push
dec
ficoml
inc
mov
ret
call
mov
adc
out
cmp
add
dec
fsubrl
and
fsubs
and
imul
or
or
js
cmp
mov
xchg
ja
push
aam
les
push
inc
mov
mov
pusha
out
cmp
xor
and
mov
and
addb
xchg
add
xchg
fs
fwait
jb
or
out
test
out
dec
add
mov
or
leave
pusha
adc
and
lret
push
mov
add
sub
dec
add
or
in
push
add
jno
negb
or
mov
dec
push
out
imul
inc
add
sub
rcrb
subl
movsl
daa
test
and
add
cmpsb
pop
add
sub
add
out
pusha
xchg
xor
sahf
and
xor
cmp
xor
xorb
fisubl
add
add
xchg
jo
or
pop
add
sbb
lea
inc
add
sbb
nop
push
push
and
pop
dec
adc
mov
fnstenv
shll
mov
inc
inc
sbb
inc
gs
cmp
insb
dec
cmp
xor
jge
cld
xor
xorb
jo
movsb
addl
jg
cmp
push
jecxz
aaa
add
cmpsl
lods
out
inc
inc
sbb
push
cmp
inc
sbb
or
movsb
subl
shrb
pop
dec
out
xor
add
jg
pop
inc
jbe
cmpb
push
dec
cmp
or
aad
mov
out
in
push
xor
jg
dec
xchg
dec
loopne
rcll
xor
cmp
enter
nop
push
in
dec
imul
sbb
or
xchg
scas
or
cmp
mov
loopne
nop
jg
or
sbb
xorb
xor
imul
jg
inc
inc
sbb
adc
sbb
or
push
insb
jg
xchg
pop
pop
aaa
xchg
ljmp
cmp
punpckhbw
or
and
or
mov
scas
xorb
jg
add
jg
imul
or
into
sbb
jg
out
andl
add
movsb
jg
test
jg
pop
jle
add
jg
test
or
aaa
pop
jg
add
dec
sbb
or
dec
push
and
sarb
popf
or
jg
xor
add
andb
dec
add
xchg
jg
cwtl
dec
das
xor
call
test
test
mov
or
addb
add
xchg
dec
xchg
pushf
sub
and
pop
adcl
imul
xor
lahf
sbb
push
sbb
add
shrb
loopne
rcrw
bnd
mov
sbb
psubsb
sbb
sbb
sbb
sbb
or
or
add
pusha
push
sbb
cwtl
inc
sbb
jno
add
xlat
adc
out
cmp
xchg
int3
mov
mov
loopne
pop
repnz
ja
inc
js
pusha
daa
lcall
sbbb
jg
cmpsl
rcrw
rorb
mov
xchg
push
inc
add
nop
fstps
pop
adc
push
int
sbbl
xchg
test
cwtl
cs
pop
push
push
sbb
push
xchg
sub
sbb
mov
xor
pop
pop
mov
outsl
popf
movsl
inc
add
mov
lea
stos
rcrw
or
adc
push
adc
cmp
lcall
push
xor
pop
mov
mov
pop
sbb
mov
sbb
sub
sbb
les
arpl
les
les
ret
push
insl
inc
push
jp
repnz
mov
subl
repnz
adc
filds
pop
xor
push
push
add
sbb
stos
inc
cs
or
inc
add
andl
cwtl
sbb
push
sbb
enter
sbb
sub
in
jnp
mov
and
push
stc
insl
jnp
inc
dec
js
adc
sub
push
rol
cmp
jle
pop
cmp
lods
and
or
or
dec
jmp
dec
add
inc
dec
xor
mov
rorl
inc
subl
idivl
add
sbb
into
add
out
stos
inc
ret
mov
pusha
xor
addb
xchg
push
imul
iret
and
push
mov
dec
xor
inc
ret
or
xchg
adc
stos
adc
push
and
loopne
cwtl
les
inc
add
push
sbb
push
ret
mov
js
stos
pop
inc
xchg
push
in
add
push
or
shrb
shr
mov
mov
rcrl
shrb
dec
mov
dec
adc
sbb
add
fs
xchg
sub
sbb
xchg
push
out
mov
and
mov
push
pop
mov
add
xchg
push
cwtl
dec
mov
movsb
xor
pop
pop
dec
jns
xchg
dec
dec
pop
xor
mov
dec
sbb
mov
or
es
sub
call
mov
dec
sbb
shlb
and
pop
mov
dec
and
sbb
movaps
dec
or
adc
insl
add
dec
fwait
add
sbb
jo
call
push
dec
iret
insl
pop
xchg
ret
push
sbbl
rorb
push
xchg
lret
dec
cwtl
arpl
inc
dec
jns
sub
cwtl
cmc
adc
and
hlt
sbb
sub
add
mov
ds
cmpsb
jmp
sub
mov
xor
int
shrb
shr
cmpsb
dec
adc
add
jmp
add
mov
dec
outsl
mov
stc
adc
fcmovnb
xorl
add
mov
mov
sbb
adc
les
mov
jbe
adcb
dec
mov
mov
push
adc
inc
add
add
push
mov
call
dec
jne
dec
mov
clc
cwtl
ret
and
sbb
and
dec
clc
ret
inc
outsb
push
push
jb
gs
sbb
pop
pusha
les
push
cmp
dec
mov
xchg
roll
pop
mov
pop
jo
pop
ficoms
sbb
sar
push
mov
cmp
or
mov
add
sub
shll
clc
jle
mov
inc
add
imul
jp
testb
pop
out
stos
inc
mov
mov
or
in
push
push
mov
mov
cld
sbb
lahf
or
sbb
pop
push
sbb
inc
sbb
mov
inc
push
ljmp
add
mov
and
mov
push
push
mov
adc
fs
push
mov
lret
out
and
stos
adc
rol
mov
add
nop
xlat
out
cli
push
and
dec
gs
jp
xchg
push
dec
enter
out
loope
and
test
sub
adc
add
dec
push
cmp
fdivl
packssdw
push
out
stos
adc
push
mov
mov
mov
mov
mov
adc
and
mov
mov
push
dec
mov
sbb
or
adc
and
inc
mov
mov
xchg
sub
xchg
push
add
push
test
mov
jne
xchg
push
adc
inc
add
add
or
les
test
negb
cmp
xor
inc
and
adcl
push
and
mov
pop
fbstp
dec
lods
xchg
xor
inc
imul
out
hlt
sbb
or
dec
push
sar
pusha
jnp
and
ss
mov
add
mov
rorb
or
mov
xor
push
and
pusha
lds
enter
mov
push
and
rcll
mov
mov
push
mov
sbb
mov
sbb
adc
xchg
push
inc
and
xor
ret
stos
inc
add
rorb
xor
and
dec
mov
xchg
add
push
mov
pop
push
mov
loopne
mov
push
mov
or
and
mov
stos
inc
add
push
mov
addl
pop
mov
dec
jnp
je
jb
insl
adc
add
fcmovu
xchg
or
push
xchg
and
add
jo
mov
xchg
push
add
inc
cld
rorl
sub
roll
sbb
inc
clc
dec
inc
dec
subl
mov
push
mov
xor
inc
dec
or
xorl
push
and
pop
adc
adc
cmc
xor
mov
push
adc
dec
mov
cwtl
add
push
mov
inc
mov
sbb
test
push
mov
es
inc
add
or
mov
mov
mov
push
in
inc
push
iret
bound
xor
pop
pusha
test
mov
icebp
mov
mov
or
and
pop
ljmp
ret
mov
dec
ret
stc
adc
xor
push
cmpsb
mov
movsb
push
xor
mov
xchg
in
add
dec
pusha
mov
les
inc
stos
inc
add
mov
mov
mov
sub
scas
test
jg
mov
mov
adc
addb
mov
or
shll
xor
adc
sbb
dec
mov
push
movsb
add
push
adc
jo
adc
adc
orb
and
add
and
mov
add
mov
adc
push
mov
mov
add
mov
subl
mov
jne
call
mov
push
push
je
push
sbb
stos
mov
mov
push
mov
xor
inc
pop
clc
xchg
push
sbb
and
adc
aam
mov
ljmp
mov
or
cltd
add
movsl
mov
scas
push
mov
fsubrs
mov
push
mov
inc
xchg
push
mov
mov
push
imul
sbb
mov
dec
fisttpl
loopne
stos
inc
mov
call
add
xorl
ret
ret
jp
mov
cmp
mov
lods
push
frstor
jp
or
test
mov
sbb
sbb
cmp
aaa
imul
pusha
xor
push
sub
cmp
add
push
out
orb
outsb
or
das
sbb
test
adc
or
dec
add
push
mov
adc
mov
mov
adc
and
xor
push
ret
xor
pop
and
pop
mov
mov
scas
dec
xor
pop
mov
dec
xor
xchg
rorb
or
cmp
repz
and
mov
push
mov
mov
inc
add
xor
jo
rol
or
add
pusha
xor
mov
push
mov
inc
add
add
outsl
pushl
test
add
out
add
lock
dec
out
test
or
rol
pusha
sub
stc
movsb
mov
repz
stos
adc
addb
out
es
mov
mov
out
lods
and
mov
push
mov
push
mov
sub
pop
mov
add
dec
xchg
mov
in
dec
outsl
stos
inc
mov
mov
popf
nop
mov
xchg
mov
jo
mov
nop
or
inc
sbb
add
jno
push
mov
add
or
test
and
push
sahf
je
mov
add
ret
cmc
and
sbb
push
and
add
mov
mov
push
cmp
add
jnp
dec
jmp
pop
pop
push
test
fidivl
add
dec
jp
mov
push
movsb
sbb
in
inc
add
jp
or
mov
fcomp
push
mov
and
dec
jp
mov
mov
nop
xor
xor
xchg
cld
inc
mov
in
add
sbb
or
push
or
push
sbbl
mov
inc
stc
mov
push
inc
inc
lcall
call
inc
add
adcl
lock
ja
in
cmc
addb
or
jecxz
inc
and
add
test
sbb
push
xchg
push
test
add
push
adc
js
and
and
dec
or
xchg
add
jo
mov
jge
and
dec
pushf
dec
xor
stos
sub
imul
loopne
dec
or
orl
lock
popf
test
call
and
inc
add
or
xor
push
sbb
cmp
add
loopw
rolb
fsts
iret
cmp
fists
xchg
rolb
imul
mov
xor
andl
popa
das
in
mov
sub
scas
ret
sbb
mov
fnstenv
aas
pop
sbbl
dec
xor
test
sub
shlb
mov
and
mov
dec
nop
pusha
call
jnp
fbld
orl
xchg
push
push
addl
sub
test
sbb
data16
xor
pop
push
sbbl
adc
xchg
xchg
add
pop
subl
and
fisubrs
bnd
mov
pop
push
dec
test
xchg
sbb
andl
sbbl
push
inc
fiaddl
and
incl
push
dec
andl
push
and
cld
add
lock
or
xor
push
out
mov
add
push
mov
lods
inc
xorb
inc
pop
and
stos
xorl
sbb
pop
cmp
sbb
inc
cmp
ds
jmp
dec
xor
subl
roll
jb
or
add
adcl
sub
sub
sub
addl
jno
jmp
push
mov
inc
add
inc
or
add
stos
cmpl
push
lock
jnp
sbb
push
mov
dec
enter
pop
and
clc
xor
push
andl
add
inc
and
and
mov
orl
inc
or
xchg
push
andl
fisubs
push
sbb
adc
or
mov
popf
loopne
sub
xchg
jo
xchg
push
scas
dec
xor
in
in
cmp
fbld
scas
mov
push
dec
push
sub
inc
subl
push
xchg
and
push
mov
insl
sti
ds
shrb
mov
or
jmp
imul
negb
call
xchg
push
mov
adcl
in
mov
call
push
jo
pop
push
mov
pop
xchg
mov
pop
inc
or
dec
xor
call
stos
xchg
or
jns
jl
jmp
inc
add
or
sbb
or
enter
add
push
addl
xor
inc
mov
push
mov
test
add
roll
inc
mov
jo
scas
inc
add
inc
and
push
mov
dec
sub
xor
inc
addl
imul
orl
push
push
xchg
push
mov
subl
fwait
arpl
addb
lods
dec
cmp
sub
roll
movsb
subl
addl
pop
loopne
push
mov
inc
xchg
push
mov
dec
xor
cld
xorl
loopne
dec
xorl
addl
sbb
add
inc
stos
in
aam
add
dec
xor
jae
xchg
cmpsb
stos
inc
sbb
add
push
loope
pusha
and
add
movsb
sub
test
or
push
and
or
xchg
push
push
mov
xorl
mov
sbb
stos
subl
push
pusha
orb
lock
inc
add
xor
cmp
inc
and
outsb
push
pop
push
ljmp
daa
popa
xchg
repz
mov
fdivs
mov
fisubrl
adc
sbb
pop
mov
push
inc
and
push
ja
arpl
je
push
mov
xchg
subl
pop
andl
push
add
adc
roll
pop
push
mov
and
and
mov
xor
ret
lods
push
and
push
mov
cmpl
and
mov
dec
add
mov
add
xchg
pushf
xor
and
sarb
cmp
sbb
call
mov
subl
lahf
clc
dec
inc
or
inc
pusha
and
and
in
ret
inc
xchg
push
sub
rolb
or
xchg
roll
mov
xor
sbb
rcl
push
mov
pushf
rolb
sbb
sub
cs
and
cmp
adc
or
sub
sub
or
add
mov
mov
or
adcl
add
jo
subl
adcl
ja
adc
or
test
jo
sbbl
cmp
inc
and
ss
cmp
aam
insb
call
sti
loope
sub
sbb
adc
mov
call
dec
add
cmp
mulb
jmp
cmp
pusha
push
push
mov
add
adc
mov
outsb
mov
adc
das
ss
push
jns
jp
push
mov
xorl
add
jp
push
xchg
mov
adc
int
or
sbbl
or
pop
dec
xor
fsubp
out
adc
cmpsw
xor
sbb
fldcw
cmpb
add
sub
in
scas
test
stos
aas
mov
pushf
xchg
hlt
jmp
sbb
push
add
and
or
inc
andl
es
adcl
inc
lds
sbb
inc
dec
das
sub
add
sahf
out
inc
lods
adc
sbb
mov
sahf
data16
es
or
push
mov
jnp
testl
push
pop
pop
cmp
repz
arpl
mov
icebp
add
outsl
negb
dec
ja
mov
es
testl
push
or
dec
fidivl
rorb
push
out
push
push
xor
imul
push
mov
andl
adc
or
and
xor
mov
mov
mov
aad
sbb
sub
push
xchg
sbb
push
cwtl
js
push
mov
adcl
sbb
nop
cmp
shlb
aaa
sub
push
cmpl
andl
push
xchg
push
push
into
mov
dec
pop
sbb
adc
push
mov
orl
sbbl
fdivrp
jp
mov
xor
jbe
xchg
push
or
sahf
arpl
sbb
mov
sub
addb
cmpsb
sbbl
out
dec
cmp
dec
xor
ss
xor
cwtl
mov
orb
push
faddl
mov
mov
or
call
mov
rol
imul
iret
js
mov
adc
xor
fldenv
push
loopne
push
push
adc
shlb
subl
out
and
and
push
push
mov
subl
es
dec
pusha
imul
xchg
push
roll
xchg
push
push
add
and
lock
test
add
adc
rol
sbb
push
imul
adcl
orw
mov
orb
pop
mov
sub
mov
sbbl
pop
sbb
inc
add
adc
fdivrl
cmpsl
adc
pop
mov
out
and
adc
mov
add
les
gs
popa
stos
inc
andl
roll
shlb
into
mov
movswl
pop
lds
adc
stos
stos
inc
adc
mov
xor
lods
jne
push
sbb
xchg
mov
cmp
sysenter
mov
call
xchg
push
sbb
sbbl
inc
push
das
cmp
add
add
test
mov
mov
in
lcall
xchg
jl
sbb
mov
dec
loop
lahf
loopne
mov
xchg
mov
push
jo
test
mov
dec
jne
insl
es
rolb
enter
sbbl
rol
dec
mov
cs
loope
inc
and
xchg
cmpsb
sbb
dec
xor
ljmp
cmpsl
or
mov
push
xorl
dec
bound
and
xorl
mov
xor
push
xchg
push
and
xor
cs
andl
push
adcl
sbb
jo
out
adcb
orl
sbbl
or
add
cmp
push
mov
adc
sub
andl
in
inc
adc
roll
inc
and
dec
mov
or
call
jae
stos
lcall
subl
imul
and
lods
dec
xor
mov
addl
imul
pop
add
adcl
add
adc
test
subl
add
cmp
push
mov
xchg
cmp
loop
leave
mov
rol
subl
lcall
subl
and
adc
push
orl
adcl
sub
addb
adcb
loopne
sub
add
test
xor
movsb
orl
int3
negb
adc
cwtl
jo
dec
mov
dec
xor
inc
addl
pusha
orb
sbb
and
stos
inc
add
addl
push
mov
in
std
push
nop
orl
cmpl
fcoml
outsb
add
mov
and
inc
orl
rorb
sub
xchg
push
add
or
call
stos
inc
add
mov
mov
aam
test
loopne
aaa
movsb
test
or
mov
orl
add
sbbl
addl
push
addl
mov
push
subl
cmp
cmp
adcb
movsl
jb
outsb
sub
test
or
and
sub
sarb
and
and
roll
mov
jnp
rcrb
jnp
and
xchg
push
jl
mov
inc
rorb
sarl
notb
adc
or
stos
adc
scas
mov
mov
dec
sub
inc
add
or
adc
stos
adc
xor
stos
inc
adc
shll
mov
rcrb
insb
cwtl
outsl
mov
inc
and
and
mov
xor
push
mov
push
push
xchg
mov
mov
xor
xor
push
xchg
mov
int3
adc
pushf
jmp
mov
push
sbb
shrl
xorl
sarl
pop
repnz
push
adc
or
cmpb
add
gs
jns
rorb
cltd
mov
sbb
add
add
jo
dec
pop
repnz
fistpll
leave
add
pop
dec
leave
adc
sbbl
inc
add
inc
gs
jb
or
mov
sbbb
sbb
push
gs
push
push
andb
or
inc
mov
adc
adc
and
mov
pusha
add
push
gs
push
or
inc
dec
fsubrs
pop
imul
movsl
jne
xchg
push
push
cmp
adc
adc
data16
mov
sti
adc
xor
and
stos
xchg
loopne
adc
rol
xchg
mov
out
mov
xor
dec
gs
and
and
mov
mov
gs
cmpsb
dec
xor
xchg
mov
and
add
shll
inc
jo
and
or
gs
cmp
test
or
fldt
scas
sub
in
pusha
adc
gs
and
gs
adc
or
sub
and
push
mov
xlat
and
or
subl
jae
xor
xchg
ret
loop
gs
clc
mov
pusha
and
inc
pop
push
mov
dec
xor
push
sub
dec
and
and
loopne
push
sub
adc
push
pop
jp
pop
sti
int3
jl
adc
push
pop
push
xchg
push
add
jo
inc
jo
pop
dec
lret
adc
and
or
test
gs
fsubl
sub
xchg
push
loopne
test
test
push
push
rol
dec
and
push
push
out
sub
gs
adcl
sbb
sar
push
and
cmpb
sbb
sbb
gs
mov
adc
xor
sbb
gs
mov
lods
orl
es
es
daa
fwait
inc
inc
icebp
sub
lcall
gs
inc
sub
mov
js
pop
adc
cltd
test
adc
push
dec
dec
mov
push
js
cmp
adc
repz
int
fst
inc
cmp
push
inc
and
inc
or
add
dec
mov
mov
insb
sbb
ficoms
pusha
negl
sub
insb
push
push
inc
jecxz
or
or
sbb
mov
rcrb
push
xchg
test
sbb
push
pusha
adc
jo
mov
shrb
dec
dec
mov
andb
mov
push
push
stos
pop
call
fs
leave
dec
cmp
notb
or
sbb
pusha
fwait
lds
out
push
mov
or
add
push
out
pusha
adc
xor
mov
into
or
pop
mov
in
or
push
xchg
push
add
rcrb
mov
bound
or
add
out
mov
int
fisubrs
mov
movsl
sbb
into
push
inc
stos
dec
xor
rorl
nop
inc
inc
push
mov
stos
dec
dec
mov
lods
addl
pusha
adc
sbb
call
dec
clc
and
loopne
xchg
xor
fwait
inc
add
inc
jo
call
jmp
mov
cmp
sbb
mov
mov
lds
cmpsl
xchg
push
mov
xchg
les
lods
dec
adc
or
into
mov
out
bound
pop
xor
out
and
xchg
mov
sbb
test
rclb
jae
xor
add
xor
adc
jae
in
mov
movsl
and
adc
add
jnp
cmpsb
sbb
dec
mov
mov
cld
add
cmp
push
gs
sub
and
mov
mov
mov
in
cli
test
mov
sbb
stos
andb
add
dec
daa
lods
jae
adc
or
stos
daa
xor
rcl
sbb
add
dec
xor
repnz
add
or
dec
mov
rorl
sahf
dec
lods
add
xchg
xchg
push
ret
sahf
sarb
mov
fs
mov
push
mov
pop
adc
mov
ret
rorl
sub
or
sub
xor
out
js
or
fs
xor
xor
cmp
neg
xchg
or
incb
pop
push
lds
ja
fwait
mov
pop
inc
push
xchg
adc
lods
cvtps2pd
cmp
mov
pop
mov
jo
mov
outsb
sbb
and
pop
sbb
addb
in
or
sbbb
imul
jg
iret
imul
clc
pop
add
sbb
inc
adc
add
mov
movl
loopne
sub
pop
inc
add
in
add
adc
mov
mov
scas
or
outsb
sbb
adc
pop
push
push
in
inc
and
ja
mov
fcoml
addr16
or
or
cmp
call
or
leave
add
mov
xor
sbb
addl
cwtl
int3
leave
add
fstpt
loope
and
inc
mov
or
or
rolb
mov
jbe
sti
pop
inc
mov
inc
and
xor
or
rcrb
loop
push
nop
sbb
inc
cli
xor
clc
inc
cmp
xor
mov
xor
in
subl
xor
xor
aaa
cmp
mov
std
cmp
xor
out
mov
cmpsl
push
stc
push
int3
push
add
inc
jno
stc
mov
push
sbb
push
cwtl
cmp
push
adc
jmp
jmp
jo
push
mov
out
push
les
les
or
fcmovne
inc
les
mov
sbb
mulb
mov
and
dec
mov
les
mov
sub
push
mov
mov
push
shrb
pusha
add
rorl
and
add
cli
dec
push
xor
mov
mov
inc
pop
push
push
or
xor
xor
daa
rol
rcrl
mov
or
adc
jo
push
inc
xchg
push
push
aam
sbb
push
mov
in
std
mov
mov
mov
mov
xor
pusha
add
xor
rorb
lcall
mov
dec
and
cmp
mov
rol
int
clc
adc
or
pop
adc
mov
ja
and
mov
mov
mov
inc
fbstp
inc
mov
add
push
or
cmp
and
xor
push
pushf
jmp
lahf
sbb
jns
popf
repnz
call
and
in
mov
rcrb
xor
sbb
sbbl
push
mov
jnp
pop
leave
cwtl
push
addl
lahf
xor
and
mov
mov
int3
mov
sub
data16
jge
mov
xchg
push
adc
xchg
push
lahf
inc
add
add
pusha
mov
stos
call
data16
loopne
out
jns
ljmp
popf
jo
adc
add
xor
xor
push
mov
add
lahf
add
jl
dec
shr
or
xchg
push
in
jbe
or
repnz
and
sub
int
xor
dec
push
fs
pusha
pop
sbbb
lahf
pop
xchg
pushf
sub
pop
push
stos
and
or
adcb
add
xor
popa
incl
rorb
xor
loopne
and
inc
xchg
lahf
ja
mov
out
and
inc
test
and
jo
mov
lahf
cmp
or
push
add
and
lahf
inc
mov
adc
sub
mov
xor
or
or
insb
push
inc
mov
scas
mov
dec
mov
les
inc
cmp
lahf
daa
and
cmp
inc
hlt
call
inc
lahf
sar
or
and
loope
xlat
lds
cmp
mov
test
mov
dec
or
xor
inc
xor
adc
pop
and
cmpsl
aaa
dec
pop
pop
adc
mov
adc
sub
js
lahf
sbb
add
xchg
xchg
lret
xchg
je
pusha
jecxz
adc
mov
or
faddl
into
cmp
aam
mov
je
adc
test
loopne
js
xchg
sbb
jns
add
xchg
mov
enter
mov
or
sub
pusha
mov
xchg
xor
dec
xor
in
jb
jb
cmc
add
nop
or
out
mov
xor
call
or
xchg
jno
cmc
and
mov
nop
sbb
ja
adcb
ds
and
inc
xchg
and
in
sbb
roll
lahf
cmp
orb
lds
test
pop
fdivs
fst
loope
lahf
mov
in
sbb
pop
lcall
fstl
sbb
mov
xchg
mov
adc
add
in
push
mov
or
rcll
mov
and
mov
dec
xchg
adc
and
sbb
pop
sub
inc
sbb
je
cli
js
adc
inc
add
sbb
sbb
in
in
add
push
lahf
mov
mov
and
lahf
ret
mov
lahf
pop
mov
lcall
push
lahf
dec
xor
add
mov
lods
cmp
mov
pop
and
lahf
xlat
xchg
dec
xor
jbe
pop
nop
dec
adc
mov
mov
cld
rcrb
mov
dec
mov
dec
lahf
cmp
sbb
ret
inc
mov
adc
lahf
xchg
and
adc
mov
push
push
lahf
and
rorb
test
lods
fimuls
adc
lahf
loop
inc
add
lahf
and
mov
add
or
dec
mov
mov
adc
push
pop
leave
pop
pop
adc
inc
and
mov
scas
pop
adc
xchg
pop
sahf
testl
lahf
daa
adc
lahf
mov
fs
or
in
mov
cs
xchg
and
mov
cmpsb
adc
in
xchg
mov
xchg
int
fadds
es
mov
sub
xchg
pusha
adc
mov
lea
rcr
lcall
lahf
xchg
push
xor
xor
dec
add
dec
lahf
test
mov
push
inc
inc
lahf
pop
inc
and
fcoms
pushf
add
push
and
or
sahf
test
aaa
lahf
rol
sbb
add
mov
inc
lahf
dec
mov
inc
add
lea
xchg
shlb
movsb
and
lahf
push
lahf
adc
push
sahf
pop
lahf
ds
sbb
adc
push
lahf
imul
inc
add
rcrb
and
cltd
lahf
xchg
push
lahf
xor
add
andl
or
je
dec
or
and
lahf
xor
inc
mov
lahf
xchg
push
push
lahf
or
imul
sub
mov
push
or
push
adc
push
shrl
inc
lock
lods
sbb
daa
and
pop
fwait
mov
daa
mov
shll
cltd
add
and
or
sbb
daa
xchg
push
fs
mov
in
inc
mov
pop
adc
mov
stos
mov
into
push
inc
mov
mov
insl
push
xor
adc
mov
sbb
sub
or
inc
data16
sbb
subl
push
push
mov
xor
adcb
pusha
inc
loop
daa
add
add
and
jo
daa
lahf
psrad
js
cld
adc
test
adcl
inc
daa
aam
lock
inc
mov
push
stos
fwait
bound
push
mov
daa
subl
call
sbb
and
daa
and
or
roll
push
ds
rolb
daa
mov
push
pop
xchg
push
rol
cwtl
daa
push
scas
aaa
lods
add
call
mov
dec
pushf
movsb
mov
jo
addl
mov
inc
push
and
or
daa
cmp
adc
je
add
and
and
daa
inc
lret
mov
mov
pusha
test
or
add
push
inc
sub
daa
inc
mov
and
cmp
shlb
arpl
sbb
xchg
add
add
dec
xor
mov
adc
rol
sbb
or
xlat
enter
adc
jo
push
xor
in
stc
clc
jmp
sbb
cld
loope
inc
and
mov
or
sub
movsb
xor
inc
mov
cmp
pop
outsl
push
dec
sbb
inc
and
roll
and
or
daa
adc
pusha
and
xchg
outsb
push
lock
xor
or
test
and
jns
mov
xchg
push
push
sbb
dec
adc
in
pop
dec
daa
adcb
jl
outsb
dec
push
repnz
mov
sub
or
scas
mov
mov
mov
jg
and
or
daa
and
cmpb
xorl
cmpsb
mov
and
daa
pop
mov
sahf
out
dec
xor
jmp
popf
adc
inc
dec
sbb
inc
daa
dec
xor
mov
mov
shl
and
in
cmp
or
shll
mov
xor
push
clc
subb
daa
lret
add
inc
dec
pop
sbb
pop
xchg
addb
pand
daa
adc
xchg
jmp
daa
dec
xor
inc
clc
mov
das
loopne
and
cmp
mov
aaa
xchg
daa
sbb
adc
daa
lret
adc
xchg
push
adc
pop
daa
xor
cmpl
and
js
daa
and
or
sbb
lahf
push
push
dec
push
daa
push
loopne
adc
daa
divl
dec
xor
in
mov
push
jo
subb
add
xor
mov
shl
daa
xor
daa
imul
mov
daa
jns
xchg
push
mov
push
push
xlat
and
jge
adc
inc
sub
mov
and
mov
xor
lds
loopne
push
inc
rorl
faddl
push
and
or
inc
mov
xor
xchg
imul
inc
mov
pop
fmull
and
sbb
jbe
and
or
loopne
aam
mov
lods
daa
push
out
add
jnp
jne
mov
daa
out
sbb
out
mov
cmp
pop
inc
and
dec
add
andl
daa
jg
fnstenv
cwtl
ret
out
push
push
xor
cmpl
push
mov
scas
dec
xor
icebp
scas
dec
xor
add
jecxz
loopne
xchg
out
sbb
call
daa
sbb
push
jle
insb
lods
add
in
lcall
fs
adc
inc
and
daa
mov
daa
inc
and
mov
sbb
pop
push
adc
add
mov
inc
and
daa
inc
add
and
js
mov
imul
ret
jb
jb
cmp
dec
xor
shlb
mov
or
mov
mov
add
loop
jo
adc
lods
jl
test
loopne
adc
push
xchg
push
or
bound
inc
and
ret
xor
xor
pop
pop
loop
out
push
roll
push
out
inc
xor
push
pop
add
and
add
call
outsb
mov
jo
jns
sahf
ret
mov
jecxz
mov
ret
hlt
out
imul
ret
sub
rcrb
push
stc
sbb
and
mov
lret
cmp
xor
jg
sub
lods
cwtl
pop
xchg
dec
inc
and
adcb
imull
xchg
mov
insl
jo
inc
or
pop
mov
and
and
in
xchg
iret
push
xor
pop
js
lret
outsl
and
in
mov
push
inc
sub
dec
scas
push
scas
jbe
or
push
addr16
pushf
or
cmp
xchg
xor
loopne
xorl
cld
imul
or
js
cmp
lock
lock
lds
add
in
outsb
dec
mov
shll
lods
fwait
xor
mov
pop
or
outsl
sub
jnp
sub
add
lahf
pushf
lcall
or
xchg
push
ljmp
sbbl
addr16
pop
repz
push
sbb
subb
aad
add
inc
clc
fabs
mov
sub
jnp
and
repz
pusha
bound
sbb
daa
aaa
cld
push
cltd
in
mov
add
subb
mov
mov
push
mov
insl
mov
adc
enter
lods
lret
cmpb
addr16
jo
jecxz
nop
mov
movb
insl
mov
xchg
mov
sub
andb
sbb
xchg
insb
push
adc
add
test
adc
xchg
ficoml
iret
xchg
push
repz
adc
push
xor
ror
sub
test
lret
inc
pop
cmpl
nop
mov
xchg
push
addr16
mov
dec
outsb
sarl
mov
jmp
aas
das
mov
pop
lock
rclb
outsb
fld1
insl
sub
popf
shrb
and
adcl
fcoml
push
jo
fs
jno
push
fnstenv
mov
movsl
pusha
xor
cmp
mov
or
inc
mov
addl
jge
addl
adc
mov
add
inc
std
add
and
xchg
mov
inc
add
mov
or
jmp
or
mov
movsb
add
scas
dec
addr16
adcl
push
addr16
nop
jmp
cmp
mov
push
adc
or
sub
in
jns
cmp
add
mov
push
gs
fstp
bound
add
add
sti
lea
loopne
dec
rcr
daa
rolb
shlb
ret
xor
pop
std
mov
push
lds
jp
dec
mov
lock
push
sub
adc
orb
pop
adc
fs
sub
data16
inc
add
scas
cmp
inc
add
xor
sbb
je
frstor
fnstenv
pop
push
ljmp
outsb
rol
sbb
or
test
aam
clc
popl
aaa
push
adc
sbb
push
sbb
js
test
mov
fcoms
aam
js
sbb
sbb
add
and
or
into
dec
or
ljmp
scas
xchg
aaa
push
mov
or
addl
les
fstps
std
or
mov
flds
add
sbb
flds
mov
sbbl
fxch
and
outsl
adc
push
xor
nop
push
or
int3
jbe
xchg
cld
inc
lret
test
push
xor
cmp
jle
push
adc
enter
ficoms
xor
jp
push
add
cmp
jl
pop
xchg
addb
and
pop
sub
push
dec
and
fwait
xchg
sbb
or
lds
roll
push
rol
pop
and
mov
push
pop
xor
cmpsb
push
inc
inc
add
inc
pop
adc
inc
add
pop
and
pop
aas
call
adc
inc
and
cmp
pop
cmp
mov
lock
jle
adc
inc
xor
fdivrs
frstor
jp
xchg
add
inc
xor
add
fcomps
mov
lods
loop
leave
rclb
push
push
pop
xchg
mov
orb
sub
push
test
imul
sbb
cs
inc
and
mov
xor
xchg
push
mov
cmp
insb
jecxz
sub
incl
add
clc
or
in
adc
arpl
pop
pop
push
faddl
outsb
in
popf
adc
or
in
stc
push
dec
and
dec
xchg
shl
adc
or
jbe
and
adc
dec
test
cmp
inc
out
xor
je
rolb
add
jmp
dec
cmpl
sub
and
jo
enter
pusha
adc
inc
xor
xor
out
lods
or
scas
out
push
dec
pop
loop
dec
dec
xchg
out
adc
subl
rcll
out
and
and
mov
xorl
scas
sub
mov
loopne
out
subl
fcompl
jl
testw
cvtdq2ps
mov
inc
cmpsl
addl
or
pop
add
xchg
outsb
and
or
roll
push
push
sbb
out
stos
pop
sbb
mov
xor
xor
dec
add
push
pop
fidivl
inc
cld
push
outsl
jnp
pop
cmpsl
test
stos
or
test
dec
mov
push
sub
sbb
das
test
imul
fiaddl
mov
xchg
pop
add
inc
jp
fisttps
dec
jmp
sbb
xor
rolb
and
test
push
mov
enter
loope
inc
add
loope
xor
mov
mov
mov
xor
xchg
cmpsl
cmp
add
test
addl
bsf
xchg
shrb
lret
inc
add
adc
add
aad
rol
or
das
or
jae
xor
and
jg
cmp
aaa
adc
sub
jmp
mov
in
fistps
pop
mov
adc
adc
push
fmul
pop
cmp
inc
int3
jae
jae
cwtl
or
and
in
insb
push
mov
push
pop
pop
out
cwtl
test
cmpl
mov
xchg
xchg
mov
pop
or
repnz
nop
adc
jmp
pop
push
das
lahf
or
jne
sub
push
mov
inc
jo
inc
call
sub
mov
sub
or
adc
arpl
mov
push
and
pop
dec
push
sarb
in
scas
add
arpl
dec
mov
push
mov
add
add
sub
add
add
add
inc
arpl
push
mov
jo
arpl
inc
add
cmp
inc
adc
sub
cmp
arpl
pop
push
push
xor
fisubl
andl
and
xor
mov
arpl
orb
cmp
cld
add
sarb
daa
mov
push
mov
ss
dec
js
mov
mov
cmp
sbb
iret
inc
dec
or
sbb
mov
pop
les
mov
hlt
jo
cmp
rolb
xlat
mov
sbb
xor
loopne
mov
sbbl
cmp
shlb
push
rolb
lods
fidivs
xchg
and
pop
mov
fcomps
mov
insb
mov
mov
jbe
pushf
xchg
inc
icebp
ret
xor
andb
sbbl
outsl
sbb
adc
inc
jmp
dec
or
xor
pinsrw
in
sbb
push
jae
mov
mov
push
add
or
sti
mov
adc
add
pop
mov
dec
dec
jno
out
pop
dec
inc
movsl
push
and
enter
rol
or
mov
add
inc
stos
pop
adc
xchg
lcall
stos
ret
fs
rcrb
and
rolb
mov
subl
adc
dec
ficoml
pusha
jo
pop
push
jnp
push
adcl
roll
stc
sub
andb
les
and
add
cmp
mov
int
call
add
cmp
das
sub
pushf
test
je
xchg
cmp
push
add
jmp
mov
xchg
ret
or
and
xor
fadd
in
sub
xchg
fs
in
aad
in
es
shl
cmp
test
stos
scas
es
sarb
insl
call
cs
pop
add
and
adc
sbb
fwait
xchg
aad
or
call
mov
push
jmp
into
pop
add
test
fsubrs
mov
xchg
mov
inc
es
lds
inc
imul
mov
decl
sub
push
push
inc
fdivl
daa
aas
aam
mov
pop
push
test
pop
push
and
ds
call
mov
ljmp
sub
add
push
sahf
out
lock
rorb
jmp
ss
jecxz
inc
dec
adc
dec
inc
mov
in
dec
ret
aad
movsb
jle
verw
push
jns
mov
dec
lock
sahf
push
sub
pop
fsubrs
test
aam
sbb
cld
stos
mov
push
and
push
pop
stos
lods
jmp
fs
xchg
rcrb
fdivrl
cmp
call
sbb
mov
push
jmp
sub
adc
clc
cmp
test
add
out
pusha
aad
repz
and
xchg
shlb
and
mov
xorb
jg
jmp
lret
jl
pop
pusha
adc
xchg
lret
push
ret
out
sbb
fwait
adc
in
push
xchg
js
adc
jle
push
push
imul
cmp
dec
xlat
shl
mov
cmp
ja
fildll
push
add
paddusw
pinsrw
shr
jns
push
pop
dec
jbe
pop
ds
cmp
xchg
or
mov
rolb
mov
push
sub
bndldx
and
push
mov
pop
cmp
insb
inc
push
ret
in
int3
popa
cmpsb
and
movsl
jge
test
xor
pop
add
pushf
mov
push
aas
cs
nop
dec
in
rorb
push
jo
push
call
and
and
pop
lcall
sarl
sbb
scas
test
add
sub
int3
mov
inc
comiss
pop
cmp
lret
fbld
mov
sub
mov
dec
loopne
push
jne
add
shlb
pusha
addl
jmp
dec
pop
cwtl
mov
mov
fidivrs
mov
dec
xchg
iret
xorl
sub
stc
add
mov
pop
jne
xchg
fidivs
cld
cs
lds
aas
fwait
dec
ds
add
ret
jg
and
jns
daa
imul
push
aad
mul
xchg
mov
inc
dec
push
notb
adc
add
mov
test
push
cli
inc
adc
or
dec
in
mov
or
call
fiadds
adc
jmp
rolb
cmpsb
fcompl
daa
and
push
push
test
inc
sub
sub
lret
add
push
mov
dec
gs
lret
dec
or
adc
push
sbb
push
push
lods
sar
lret
add
sbb
dec
fdivl
outsb
nop
int
outsl
mov
sbb
dec
gs
jle
jo
sbb
movsb
bound
pusha
push
test
cmp
mov
in
sbb
and
cld
jl
addr16
outsb
nop
outsb
nop
sbb
mov
lret
mov
mov
mov
stos
popf
jle
push
cmp
lahf
popf
adc
cmp
xchg
lret
imul
mov
aas
in
lea
inc
sub
es
xchg
xchg
fdivrl
lock
lret
aas
xor
cli
sbb
push
adc
lret
xor
adc
movsb
xor
pop
fdivl
test
rcrb
lods
movsb
aas
fidivrs
leave
cs
sbb
outsb
nop
lods
clc
outsl
insb
aas
xor
fcomps
and
or
sbb
push
push
test
xchg
jae
sub
aas
jl
in
or
xchg
daa
scas
popf
in
and
aaa
dec
aaa
nop
sbb
mov
gs
mov
sahf
cmp
call
in
dec
sub
sub
pop
jns
sti
xchg
nop
insl
push
xor
cmp
fidivs
add
dec
cld
mov
mov
cs
pop
or
mov
mov
sub
cmp
dec
cmp
das
in
nopl
call
lahf
push
mov
or
add
pop
dec
outsb
jmp
lahf
jecxz
fadd
lret
decb
fsubr
rorl
sub
mov
das
outsb
push
adcb
push
dec
movsl
jb
mov
push
sub
mov
shlb
or
and
into
sti
dec
or
jns
scas
mov
fldl
mov
mov
scas
mov
push
add
sub
nop
mov
push
pop
imul
xchg
lret
imull
inc
or
test
fisttpll
negb
jmp
es
icebp
jl
setle
sahf
outsb
dec
cmp
cmp
mov
loope
xchg
scas
rcr
vpmacssdqh
mov
mov
mov
nop
data16
fimuls
les
pop
xchg
jle,pt
sbb
sub
popf
call
inc
movsb
mov
psraw
test
arpl
lcall
push
jge
dec
int3
adc
movsl
adc
xor
hlt
push
xchg
les
je
sub
in
fs
sbbl
les
shr
les
adc
incb
loope
jb
mov
xchg
dec
sarb
icebp
sub
stos
inc
jle
pop
dec
dec
sub
xchg
shll
sbb
rcrl
push
pusha
and
add
lcall
inc
inc
push
in
dec
mov
aaa
aam
or
nop
orl
inc
mov
loope
mov
je
pushf
hlt
std
mov
inc
cld
pushf
movsb
jmp
adc
sub
fisubrs
adc
in
xchg
mov
outsb
aaa
ds
aas
mov
js
or
ss
aas
or
cld
sbb
push
adc
je
fstp
popf
iret
dec
mov
cmp
fdivp
ja
and
nop
lods
jle
fnstcw
rolb
xchg
push
cld
pop
sti
addr16
popa
ja
dec
xor
lcall
ret
int
leave
jle
in
xor
in
sti
repnz
aaa
or
or
add
push
cli
or
or
inc
aad
or
dec
jg
rorb
imulb
lods
mov
in
pop
push
nop
aam
pop
adc
sahf
mov
scas
mov
sub
adc
push
dec
cmp
pop
sub
xchg
dec
idivl
fstps
mov
push
mov
mov
and
dec
leave
lret
or
mov
sti
jle
sub
and
test
xor
adc
enter
push
xor
and
mov
incb
aas
outsb
dec
lods
mov
lods
ds
dec
frstor
scas
es
js
jg
pop
call
cmp
sahf
sti
add
js
das
lods
icebp
pop
push
mov
testb
rclb
movsl
mov
das
cwtl
mov
xor
fdivrs
push
push
dec
sub
in
mov
xchg
pop
call
jmp
stos
push
jmp
push
mov
sub
aas
cs
push
dec
out
sub
push
dec
push
jns
std
cmp
repnz
sti
popf
pop
xchg
xchg
adcb
es
stos
aam
enter
push
iret
sub
bound
adc
in
jge
cld
push
call
imul
fildll
arpl
js
ja
add
mov
dec
push
dec
xor
adcb
pop
fsubl
lahf
int
add
lret
xchg
cli
in
out
in
cmp
roll
pop
jo
outsb
cmpsb
add
mov
jg
dec
movsb
cltd
es
cwtl
data16
fwait
push
mov
pusha
pop
lahf
enter
clc
xchg
shr
xor
adc
call
mov
out
movsl
movsb
mov
js
cld
xor
movsl
ds
pop
fidivrs
lods
push
cmpb
lret
imul
add
pop
sbb
aad
repnz
sbb
sti
add
clc
adc
lods
ds
mov
addr16
nop
ss
stc
xchg
or
adc
orb
xor
adc
jb
out
rcr
push
fstps
or
inc
or
outsb
mov
movsl
arpl
inc
xchg
cld
sub
fucom
jns
cld
jge
adc
dec
in
adc
std
push
push
mov
mov
in
test
push
sub
sub
xchg
out
repnz
push
or
mov
xchg
mov
fisttps
inc
push
repnz
mov
and
jns
lret
mov
nop
xchg
push
mov
enter
insl
mov
in
vmwrite
mov
repnz
xchg
mov
jns
inc
push
pop
mov
jne
and
scas
mov
dec
sub
pushf
in
sti
inc
jg
lods
cmpl
sahf
ret
cs
hlt
mov
mov
dec
lret
nop
lret
mov
jmp
cmp
sbb
aaa
js
jmp
sbb
lock
sahf
adcl
lret
nop
lret
push
cmp
loopne
sbb
and
pop
rclb
clc
mov
xchg
dec
dec
cmpsl
test
aas
ds
push
push
sarb
inc
mov
jae
push
in
movsl
sub
jmp
ror
repz
sub
test
xor
ja
repnz
push
mov
inc
pop
dec
sub
sub
dec
mov
ret
movsl
sarb
loopne
cmpsb
les
add
inc
ljmp
adc
or
inc
pop
or
cmp
xor
mov
jmp
jo
stos
add
sahf
inc
jg
pop
cld
ds
push
cmp
jle
shrb
add
outsl
ret
dec
push
dec
mov
push
movsl
jb
sub
aas
inc
sub
add
mov
lret
mov
aas
jg
lret
xor
adc
ja
sub
cli
adc
push
aam
repnz
rolb
enter
lods
je
push
adc
push
mov
fcmovne
sub
sbbl
icebp
hlt
adc
push
sub
mov
add
cmp
lds
insl
push
sti
sub
cltd
scas
or
movsb
or
cmp
icebp
cltd
or
add
loopne
or
or
xchg
lret
enter
rcl
dec
pop
inc
lods
fadd
sbb
sub
fistps
outsb
divb
mov
ja
leave
mov
or
mov
jg
jl
jae
sub
test
sti
mov
dec
push
jp
xor
adc
imul
ds
lret
mov
sub
cwtl
ds
dec
shlb
ja
adc
lods
sahf
xchg
out
fmuls
cmp
cmp
nop
insl
les
cmp
nop
shrl
xor
test
sahf
push
mov
add
ja
or
fadds
fdivs
rclb
mov
sub
mov
cmp
in
pop
sarb
ds
test
pusha
ja
nop
dec
clc
jbe
jg
aas
jno
nop
sub
mov
fidivrs
pop
outsb
dec
jle
push
mov
or
sbb
and
push
mov
cmp
cld
lahf
and
dec
dec
incl
dec
sbb
das
add
adcb
stc
sub
loop
movsb
xchg
mov
or
adc
add
jmp
ret
and
push
sbbl
or
fdivrs
xor
dec
cwtl
cmp
or
jl
xchg
adc
inc
pushl
shrb
pop
inc
fdivl
or
cmp
popf
inc
repnz
cmp
mov
pusha
mov
push
mov
cmp
ret
outsb
cmp
dec
popf
push
aad
fcomp
add
scas
imul
rclb
push
push
pop
ja
mov
ror
rorb
mov
fstl
push
mov
test
call
rorb
xchg
pop
or
dec
sahf
mov
mov
jmp
enter
cmp
test
mov
mov
sub
lret
out
cmp
stc
in
test
sub
arpl
rcr
cmp
movsl
push
jmp
xor
dec
addr16
js
mov
push
rclb
cmp
movsl
jb
subb
clc
cmpb
add
dec
ss
jle
out
arpl
cmp
add
popf
lds
push
stc
enter
mov
jmp
dec
sub
adc
cwtl
js
lea
je
mov
bnd
pop
add
ret
xchg
dec
sarl
loopne
add
sbb
loopne
les
dec
test
lock
jne
add
add
loopne
jmp
xchg
notb
out
fildll
ljmp
nop
into
dec
aaa
adc
mov
xchg
xor
loopne
add
ss
push
out
pusha
pop
fmull
or
pop
pop
push
sti
dec
in
jmp
ss
fdivr
jle
push
bound
jae
lahf
pushl
or
cmpsb
xchg
dec
stos
sahf
out
addr16
ja
inc
test
stc
pop
movsl
cltd
xchg
jne
mov
ret
xor
pop
add
push
sub
scas
xor
dec
add
mov
mov
and
jns
inc
mov
scas
fs
mov
scas
adc
xchg
xchg
popf
scas
scas
mov
dec
jae
mov
mov
cmp
xchg
scas
pop
scas
adc
xchg
lods
xor
mov
lods
mov
repnz
scas
sub
cld
cld
lds
adc
push
in
cmc
xor
xor
in
pusha
dec
and
push
fidivl
pusha
pusha
mov
in
lods
mov
sub
fst
pop
lret
aas
sarb
fistpll
addb
xchg
inc
add
cmovs
xchg
dec
xor
dec
mov
repz
adc
lds
adc
push
iret
mov
and
jo
jmp
fnstsw
xchg
inc
pop
insb
sbb
repz
xchg
mov
push
fiadds
repnz
adc
pop
or
xchg
aas
jl
test
andb
out
xorl
insb
xchg
fcomps
mov
push
jb
lods
dec
or
mov
push
push
cmp
fidivrs
cmp
push
ss
adc
arpl
jae
mov
pop
aas
push
fadds
add
das
mov
xor
mov
push
fcom
test
xor
fwait
in
cld
inc
in
cs
idiv
sub
adc
repnz
adc
leave
rsm
clc
push
xor
test
dec
sahf
leave
test
or
into
add
mov
cmc
movsl
sub
nop
in
icebp
cmpsb
test
xchg
flds
sbb
ret
sub
in
push
in
push
cs
inc
adc
lret
leave
in
inc
in
xchg
fildll
stc
fisubrs
xor
adc
or
sahf
xor
xor
mov
ds
pop
xchg
dec
in
imul
aas
add
sbb
in
adc
enter
or
pop
sahf
mov
das
push
fsubrs
rorb
mov
sbb
fs
das
aas
popf
ss
xor
lret
inc
mov
sub
je
in
push
sahf
daa
xlat
jne
add
mov
cmp
xor
jae
push
dec
push
mov
jg
in
subb
das
inc
lret
outsl
inc
inc
or
fneni(8087
sub
pop
or
push
out
cs
dec
gs
sbb
cmp
out
shrl
xchg
adc
cmp
lcall
daa
add
addr16
sub
jp
push
fisubrs
imulb
sub
adcl
cmpl
push
lahf
dec
cmp
and
ja
mov
push
sub
cwtl
push
xchg
mov
inc
push
sub
out
sub
inc
sahf
iret
fisubl
sub
aas
imul
lock
sahf
mov
push
test
mov
jo
push
test
clc
test
jge
dec
shlb
bound
es
fiadds
jo
jbe
push
mov
xor
cs
mov
sub
notb
push
inc
mov
outsb
jmp
mov
out
sub
clc
out
data16
push
or
incb
cmpsl
sbb
push
scas
inc
mov
xchg
notl
cmpsb
cmp
adc
mov
rcll
xchg
push
dec
clc
stc
sub
cmpsl
andl
sub
out
dec
xor
cmpsl
fst
pop
jecxz
ds
inc
daa
int
repnz
or
sbb
xor
inc
push
movsl
push
or
outsb
mov
push
push
pop
cli
bswap
clc
lea
sar
mov
sub
dec
cmp
mov
fistpll
sbb
sub
cmpsl
xor
mov
sub
mov
push
ja
and
lcall
into
and
pop
call
xchg
mov
fstps
addr16
lock
jo
cs
sbb
sbb
mov
pop
push
outsl
inc
and
sbb
push
jecxz
add
scas
sub
sbb
sub
pop
pop
clc
jnp
outsb
jmp
int3
dec
xlat
es
movsl
jb
mov
fstpl
mov
iret
lock
and
push
dec
iret
aad
jle
cmp
out
and
sub
je
push
addr16
notl
repnz
fcoms
dec
and
cmpsb
sti
sub
xchg
outsl
das
xor
ljmp
lods
je
xor
push
out
lahf
in
call
imul
inc
sub
repnz
cmp
fldenv
mov
push
test
xlat
scas
cmp
shlb
push
push
and
mov
fmulp
aam
fidivl
sub
pusha
push
sub
jb,pn
dec
test
outsb
fmul
cmp
cmc
dec
mov
sub
daa
and
sub
fmul
das
add
sti
leave
inc
ds
and
fldt
push
mov
dec
sarl
scas
icebp
nop
out
sbb
stc
inc
add
rcrb
inc
pusha
jns
loope
sub
fstp
cmp
or
popf
fists
xor
movsl
fldenv
sbb
sbb
jmp
pop
mov
dec
or
daa
add
xchg
negl
loopne
daa
adc
ret
cmp
repnz
pop
outsl
jmp
imul
daa
mov
call
sahf
test
mov
mov
adc
fwait
out
adc
fs
pop
add
inc
ja
add
push
push
push
mov
imul
push
pop
push
dec
cmp
sbb
sahf
out
ds
repnz
shrb
xchg
mov
jns
out
inc
sub
or
repz
icebp
lock
shlb
mov
pusha
repz
repz
dec
cmp
sbb
jns
iret
or
lock
jns
mov
jns
out
jp
pop
push
cmp
cmp
out
push
je
mov
imul
jmp
sahf
out
sahf
lret
pushf
mov
sahf
out
jb
push
ds
negl
xchg
push
mov
mov
mov
push
idiv
push
out
cmp
repz
les
cmp
jo
push
cwtl
push
xor
jns
out
push
or
stc
in
sarb
mov
lahf
out
sahf
cmp
and
lock
jns
repz
mov
test
out
sahf
out
jl
pop
dec
cmp
repz
outsb
jmp
push
jns
cmpsl
stc
cli
call
out
sahf
out
lcall
sahf
dec
inc
xor
lock
iret
repz
fcmove
mov
repz
iret
repz
push
inc
cmp
or
sahf
out
lcall
cmp
sarl
and
add
cmpsl
stc
clc
imul
fmul
ret
sahf
out
sahf
mov
sahf
out
sahf
pop
dec
cmp
sbb
cmp
mul
fmul
cmpb
out
into
jbe
pop
scas
push
xchg
push
mov
je
push
sahf
out
inc
cs
and
int
jns
add
in
inc
cli
xor
rorl
rolb
mov
test
mov
cmc
ss
iret
repz
push
pushf
shl
nop
sahf
cmpsl
stc
cmp
or
sbb
cmp
out
dec
pop
data16
out
sahf
out
sahf
stos
mov
sahf
fsubr
clc
or
push
sub
iret
repz
inc
push
add
lock
cmp
repz
rol
mov
repz
repz
xorb
out
stos
iret
push
adc
jle
push
loop
out
sahf
aam
lods
lcall
pop
dec
cmp
sbb
cmp
out
cli
in
call
cmp
mov
mov
iret
repz
pop
inc
xor
iret
repz
repz
hlt
in
jle
fcmove
ret
repz
movsb
push
sti
sbb
repz
repz
ds
pop
data16
repz
test
dec
mov
cmp
add
pop
jmp
dec
repz
jae
push
push
mov
stos
mov
cmp
push
sub
push
cmp
jns
out
pusha
jbe
pushf
scas
int
jns
mov
and
dec
push
xchg
in
pushw
iret
repz
jbe
push
inc
cmp
mov
adc
jmp
push
iret
repz
rol
scas
mov
repz
add
repz
mov
call
iret
jnp
es
cmp
je
sti
cmp
int3
xchg
movsb
mov
lock
add
repz
add
add
jbe
cmp
xchg
add
into
jnp
loopne
push
and
xlat
movb
into
fadds
add
inc
pusha
add
pop
sub
js
pushf
jmp
add
js
es
aam
int
insl
bound
iret
repz
repz
rcl
aam
repz
aad
xlat
fcomp
fidivrl
repz
loop
in
repz
repz
call
cmp
jmp
in
out
out
lock
repz
repnz
cmc
repz
repz
clc
stc
cli
iret
repz
sti
cld
std
incl
sahf
out
lcall
jns
out
push
pop
or
or
jns
out
or
push
setle
jns
adc
push
aaa
inc
push
repz
jp
mov
cmpsl
rcr
idivl
repz
push
push
and
inc
dec
repz
repz
imul
iret
lods
mov
sahf
out
ds
fwait
pop
sub
inc
jns
out
pop
addr16
xchg
out
sahf
out
lods
mov
jns
in
cmc
incb
pushf
cmp
repz
sbb
sub
cmp
repz
imul
add
push
ljmp
cld
inc
je
insl
gs
gs
xor
imul
sub
mov
ret
shrb
inc
outsb
jne
xor
xchg
xor
jae
out
xchg
imul
rcll
mov
or
push
inc
cmp
sbb
sbb
push
sbb
jb
inc
add
shlb
popa
pusha
aad
jg
push
inc
xor
stos
dec
mov
push
gs
pop
push
ret
inc
and
popa
xor
movsb
mov
xor
test
ret
arpl
popa
pusha
and
push
in
and
ret
xor
sub
sbb
in
sbb
and
push
mov
fs
add
adc
inc
shlb
imul
and
nop
out
push
lcall
add
jl
out
mov
pop
push
mov
xor
add
ja
xorb
jp
sbb
xor
or
add
jbe
jnp
roll
inc
adc
lock
nop
jp
out
cmp
loopne
and
push
daa
inc
adc
xor
add
mov
cmp
divb
jge
dec
lea
insl
push
dec
inc
inc
and
push
inc
push
inc
insw
adc
sti
je
fadds
add
push
push
inc
dec
add
push
add
cld
pusha
sti
push
push
push
add
push
or
icebp
sbb
fidivs
daa
out
outsb
icebp
push
jge
fucomp
out
sub
push
ret
addr16
xchg
aas
out
push
cli
add
add
add
jg
lcall
add
pop
add
add
cmp
and
add
test
inc
ret
incl
addl
jno
faddl
jae
push
cmp
jbe
and
int3
std
xor
call
dec
in
push
add
add
std
add
add
nop
in
push
inc
mov
add
decl
scas
add
cld
lret
divl
xchg
sti
cmpsl
or
std
addr16
mov
add
std
fwait
add
inc
add
incl
std
and
xor
xor
dec
xor
push
std
jo
call
add
andb
inc
sti
mov
stos
add
jmp
add
cltd
add
sbb
mov
pop
std
imul
cmp
pop
sub
out
ds
add
add
add
add
add
mov
add
add
mov
sub
mov
decl
fadds
jmp
lret
add
cld
dec
clc
mov
std
push
sbb
add
pop
add
aas
sbb
std
aam
jbe
pop
add
add
add
clc
and
fcomip
scas
push
stc
pop
pusha
add
add
pop
sub
add
stc
cmp
roll
jo
and
incl
das
push
inc
add
pop
xchg
scas
std
mov
dec
add
aad
jge
popa
std
adc
sub
xchg
decl
add
std
add
in
std
imul
cli
std
cmp
icebp
jg
pop
cld
cld
mov
enter
cmp
inc
ficoml
push
in
adcl
and
add
add
dec
pop
add
ret
incl
adc
add
arpl
add
mov
out
push
call
dec
sti
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
xchg
std
sti
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
add
add
incl
push
xor
mov
or
pop
iret
push
les
dec
push
mov
add
mov
add
or
and
shl
mov
out
fsubrp
sub
ljmp
repz
sbb
clc
insl
cmc
inc
cmc
jo
cltd
sti
mov
add
aas
fs
sbb
pusha
or
or
inc
or
push
fimuls
lahf
pmaxub
mov
or
add
ljmp
add
clc
sub
icebp
push
in
aaa
call
sub
dec
cli
or
out
mov
pop
cmc
decl
js
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
pcmpeqd
dec
mov
call
adc
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
sete
aad
add
enter
psubq
sti
imul
negb
repz
in
fsubrl
aad
fstps
icebp
xor
in
push
incb
sti
and
xlat
cld
test
or
call
ds
and
adc
adc
sbb
xchg
test
or
scas
clc
incl
or
test
hlt
cli
repnz
adc
ljmp
loop
fnstenv
iret
je
fcomp
loopne
repnz
fistpll
add
xor
test
sbb
pop
sub
outsb
push
bound
sub
decl
xor
or
push
push
or
pop
add
mov
decl
out
lahf
in
jae
je
jmp
in
ljmp
imul
decl
fadds
add
jle
add
or
pop
or
xor
sbb
cmp
pushl
fcompl
scas
sbb
push
sbbb
and
adc
or
incl
add
icebp
mov
jmp
out
shr
mov
adc
pop
in
fidivrl
test
stc
jo
or
adc
adc
xor
lcall
repz
xchg
adc
sbbb
push
mov
movl
stc
jns
loope
mov
decl
std
cmc
clc
jbe
add
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
in
aam
daa
pop
sbb
fimuls
jecxz
into
adc
adc
ds
in
call
push
daa
adc
adc
or
rolb
cld
enter
xchg
clc
imul
xor
mov
jne
es
pop
cli
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
inc
out
push
cld
js
lds
push
test
adc
push
lahf
adc
imul
ja
adc
test
imul
sub
cli
in
cld
fbstp
out
cld
idiv
loopne
add
repz
das
testl
fsubrp
xchg
out
insb
out
mov
std
push
jp
frstor
in
icebp
add
adc
adc
ljmp
fmulp
adc
adc
adc
scas
adc
lret
adc
incl
mov
stos
std
mov
stc
or
stc
sbb
push
push
sbb
out
jb
inc
repnz
stos
in
sub
jecxz
fcoml
rcr
stos
ljmp
add
movlps
push
pop
pop
loop
popa
adc
xchg
adc
sbb
std
or
inc
hlt
pop
cs
femms
or
add
or
xor
incl
cmp
mov
xlat
sti
outsl
imulb
icebp
mov
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
ljmp
lods
fdivrl
add
ljmp
push
pop
sbb
adc
xchg
cmc
jg
mov
mov
adc
push
adc
or
or
or
mov
test
aam
movsl
std
cmpsb
sti
mov
decl
in
mov
xlat
loopne
fldl
aad
ror
xlat
popf
in
call
inc
repz
or
adc
push
lock
xor
pop
sub
inc
sbb
push
xor
or
call
and
or
int3
pop
in
add
loopne
lcall
jg
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
sub
ljmp
mov
and
or
stos
pop
aad
bound
lds
adc
adc
call
jno
inc
btr
push
adc
orb
push
pusha
add
sbb
pusha
push
arpl
sar
jg
push
add
stc
and
out
out
loopne
fstps
push
push
ret
mov
out
and
and
decl
sbb
sbb
push
adc
popf
stos
je
or
stc
push
inc
adc
mov
push
ret
or
or
or
add
lock
call
fnsave
fxch
sar
insl
lds
jp
or
lcall
sbb
rcrl
rclb
adc
xlat
or
push
mov
and
inc
sbb
call
add
test
sub
push
mov
lds
pop
or
mov
and
loope
cmp
test
lds
jb
and
add
or
or
adc
adc
push
sbb
hlt
adc
xchg
or
push
sub
mov
add
call
out
add
or
or
or
mov
or
add
decb
int
inc
in
loopne
fimull
loope
cmc
cmpsb
add
mov
decl
in
xchg
cmovge
stos
or
psrlw
ss
mov
lret
or
packssdw
add
out
cli
lcall
add
sbb
mov
and
or
or
add
out
cli
sti
ret
out
push
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
decl
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
pop
call
add
cld
pop
pop
or
add
add
mov
pop
or
jle
xor
out
jbe
adc
adc
adc
repz
xor
fwait
jecxz
fsubl
les
aad
add
lcall
icebp
cmp
adc
push
adc
xchg
outsl
sbb
sub
add
add
and
fcomip
lcall
popf
inc
add
push
test
pop
adc
call
or
lods
or
in
in
jge
xchg
fsts
int3
mov
jmp
jmp
sbb
jmp
cld
lcall
push
and
and
add
sub
stos
dec
add
or
decl
lds
and
add
std
idiv
mov
or
or
out
pushf
adc
das
or
stos
mov
jecxz
loopne
fsts
push
lock
and
sub
add
sti
jmp
in
inc
repz
call
or
fimull
xor
add
push
add
rorb
or
or
push
or
aad
mov
sti
xor
loop
fucom
xlat
fmul
push
leave
pop
jmp
mov
int3
call
adc
stos
cs
pop
add
paddd
mov
in
and
leave
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
cmp
loopne
push
mov
lret
adc
adc
add
idiv
lcall
add
fldenv
ret
xchg
neg
test
dec
sub
das
xchg
ss
fcomip
jmp
movsb
mov
clc
adc
sbb
inc
loop
lock
stc
loop
and
out
call
add
add
inc
push
jmp
mov
out
dec
or
xchg
ljmp
add
fst
inc
sar
sub
ror
add
pop
sti
xor
scas
and
sahf
ljmp
pushl
adc
and
sbb
dec
std
clc
aam
in
pop
loope
lock
cli
ljmp
cmp
ss
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
and
or
add
mov
sar
mov
int3
pop
ret
push
iret
repnz
sub
jmp
inc
xor
loope
fcomip
push
add
loope
fistl
ljmp
rclb
imul
decl
adc
adc
xor
mov
mov
cmp
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
inc
mov
cmp
push
call
jg
fstpl
fcoms
pop
add
and
mov
les
cltd
adc
adc
push
clc
and
scas
mov
inc
sbb
xchg
push
inc
nop
mov
ljmp
icebp
fcmove
shrb
leave
push
mov
dec
fiaddl
clc
adc
cwtl
es
xor
cmp
in
inc
xor
fildll
or
cmp
lds
or
fs
fdivrs
into
popf
and
jle
or
pop
daa
in
xchg
and
jge
xor
adc
or
jecxz
stc
leave
les
popa
jmp
add
lcall
daa
loope
in
test
xor
cmp
call
out
inc
out
loop
in
fists
xlat
jg
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
and
mov
decl
std
adc
jno
gs
xor
test
inc
ret
ja
pop
fiadds
arpl
or
das
ret
incl
inc
inc
xor
sub
push
aas
or
adc
mov
fcmovbe
rcr
fldenv
and
notl
mov
sub
imul
pop
or
sti
stos
call
ror
cli
inc
aaa
mov
lods
in
std
call
and
xor
inc
aam
xor
pop
push
adc
call
cmp
fistl
lret
pop
iret
mov
fiadds
icebp
adc
jb
sub
xor
ljmp
or
sub
push
idivb
insb
ljmp
out
ret
or
fisttps
dec
lock
sub
cmp
inc
mov
out
ljmp
add
lods
repnz
xchg
mov
roll
dec
ror
mov
add
adc
sbb
inc
aaa
das
xor
es
ja
int3
sti
sub
and
shlb
enter
sti
sub
sahf
sbb
and
pop
ds
xor
jg
push
xor
fldl
inc
incl
adc
rcr
aam
iret
push
shlb
call
loopne
das
add
xor
xor
cmp
xor
mov
cmc
insb
in
aad
enter
inc
cld
mov
mov
mov
daa
push
sub
cmp
ret
or
cld
mov
ljmp
jo
dec
xlat
mov
mov
pop
test
xor
call
aaa
lret
xor
in
adc
ret
lcall
incl
add
lcall
sbb
sub
shl
jmp
call
mov
sbb
add
outsl
mov
jge
inc
pop
jg
lods
sub
xor
aaa
bnd
xor
in
jns
ror
stos
ret
ds
in
lcall
add
push
and
mov
lret
xor
push
push
add
add
clc
leave
out
push
call
in
shr
into
pop
iret
call
jmp
jmp
jp
sahf
ss
cmp
cmp
mov
repnz
dec
push
mov
aam
ljmp
shr
jp
je
in
sbb
sub
and
fsubrs
ja
xlat
push
mov
or
std
ret
cmc
shl
mov
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
push
adc
outsl
cmp
xlat
push
sti
or
cmc
es
int
mov
int3
or
sub
decl
jle
pop
sub
stos
aas
scas
cmp
ficompl
ret
call
ljmp
jecxz
in
fiadds
loopne
fsubl
loope
stc
push
decl
icebp
and
sub
pop
aaa
fildll
leave
sbb
dec
icebp
shl
sbb
scas
outsl
mov
rcl
jmp
ja
adc
aaa
std
inc
test
sub
sbb
or
cld
loop
ljmp
sub
cmp
fildl
neg
lcall
fisubl
jo
or
push
out
dec
ss
push
cmp
adc
pop
decl
cltd
enter
int3
mov
mov
jg
arpl
in
movsl
cmp
inc
pushl
cmp
mov
test
jb
test
imul
fmuls
lret
rcll
ljmp
sub
sub
out
fidivrl
inc
xchg
mov
repnz
loopne
iret
xor
mov
scas
and
add
xor
pop
incl
inc
xchg
jmp
pop
adc
add
out
jmp
filds
jmp
push
leave
test
fcmovne
insb
shlb
in
mov
es
inc
push
push
xor
mov
iret
pop
mov
cld
mov
stos
mov
imul
addl
xor
add
inc
mov
popf
sub
jg
jbe
mov
mov
cmpsl
jmp
arpl
cmp
push
shll
adc
inc
aad
mov
add
aaa
sub
xor
aaa
out
ss
xor
or
int3
call
shr
push
mov
mov
cmp
das
xchg
sub
inc
fdivs
or
incl
out
sub
repz
xlat
popf
flds
call
sarl
pop
mul
fisttps
xchg
push
loop
mov
test
hlt
sub
sti
std
decl
out
fimull
mov
mov
adc
adc
test
mov
xchg
push
mov
push
notb
fmul
dec
loope
iret
add
xchg
fdivs
frstor
mov
les
int3
daa
cmp
cmp
fcompl
repz
into
or
mov
lds
mov
jnp
lds
jns
repz
mov
cs
adc
aam
int3
push
repnz
or
into
aad
fnstsw
and
incl
inc
inc
dec
sahf
inc
es
pop
and
int3
roll
mov
cmpsl
les
jmp
ja
pusha
sbb
mov
pop
sbb
mov
fldl
es
fstl
jo
sbb
pushl
fs
data16
js
and
jle
sahf
inc
addr16
jo
jg
xor
adc
aad
int3
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
lea
mov
repnz
jge
pop
lret
pop
shrl
pushl
inc
int3
jne
xchg
repz
or
stc
xor
sub
inc
mov
repnz
sbb
or
mull
out
aad
into
in
mov
leave
mov
pop
call
call
dec
sub
fldl
dec
sbb
xor
push
imul
loop
sbb
loope
insb
rcll
ljmp
out
xor
popa
pushl
test
add
rcrb
fidivrs
test
fwait
ljmp
cmp
push
sti
push
jp
les
and
cmp
cmp
decl
sarb
cld
loopne
sbb
popa
sub
inc
cmp
daa
xor
mov
sub
incl
int
iret
outsb
leave
xchg
ret
test
mov
idiv
call
outsb
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
or
icebp
inc
stos
sarb
cli
decl
rcr
divb
mov
mov
dec
ds
dec
dec
dec
iret
dec
jl
lret
sbb
ljmp
pop
lock
loop
shlb
shufps
lcall
sti
fistps
dec
push
inc
fmull
stos
pop
aam
les
pop
jmp
mov
stos
leave
ljmp
inc
pop
loope
push
rcl
xor
inc
je
push
dec
xchg
inc
mov
scas
sub
adc
add
mov
push
scas
rcrb
test
lock
in
ret
ljmp
popa
sti
mov
pop
dec
sbb
rclb
dec
lahf
ds
insl
add
jecxz
lret
int
fcomip
mov
test
rorl
mov
pop
bound
mov
cmp
pop
cmc
lcall
sbb
clc
arpl
add
popf
mov
pop
inc
or
sbb
xchg
or
and
arpl
ret
inc
cli
dec
sbb
sub
push
aam
pop
mov
mov
lcall
lcall
xor
ss
fidivs
mov
jp
rcrb
adc
outsb
add
xchg
sub
aam
pop
fdivrl
rorb
mov
ljmp
push
inc
ljmp
or
out
in
fimull
cmpb
mov
in
add
cmc
sub
cmp
mov
xor
jg
imul
sahf
jmp
xchg
ficompl
clc
loope
fsubp
rolb
adc
and
xor
roll
inc
es
and
call
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
ss
or
xchg
cwtl
or
adc
or
cmp
lcall
fdivl
aad
pop
ficoml
nop
clc
adc
je
or
or
lcall
adc
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
cli
das
sar
pusha
and
cmp
pop
ljmp
mov
rorl
cmp
ljmp
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
ljmp
clc
push
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
incl
inc
pop
rol
xlat
fs
aam
addr16
add
xor
sbb
enter
out
mov
call
hlt
clc
lock
out
je
mov
dec
adc
aaa
push
cli
and
ljmp
sti
sahf
adc
das
cs
add
xor
sbb
xchg
fcmovnu
lret
inc
cmp
ljmp
repnz
mov
inc
and
sbb
pop
inc
push
mov
decl
test
test
imul
adc
mov
mov
fadds
stc
mov
or
test
sub
mov
push
jg
stos
inc
or
loopne
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
sbb
inc
or
or
or
fwait
or
mov
xchg
hlt
bnd
pushl
fisttpl
loopne
aam
push
add
push
out
and
ljmp
cld
cs
add
das
jecxz
ljmp
mov
mov
sbb
sbb
jmp
dec
wrmsr
or
add
add
add
push
adc
or
xchg
cmc
push
ds
fidivs
aad
rcl
int3
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
testb
pusha
repz
divl
adc
xor
or
incl
or
mov
or
adc
cld
dec
push
out
xchg
xchg
jmp
xlat
fbld
xlat
fldl
ror
rcrb
pop
cld
add
pushf
sbb
push
jbe
ljmp
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
mov
xchg
loopne
mov
adc
incl
lods
add
call
adc
or
mov
jp
imul
cmp
out
jmp
pop
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
adc
shrl
idiv
xor
pop
push
xchg
or
clc
repnz
out
in
ljmp
arpl
std
decl
iret
adc
push
push
adc
mov
add
cli
shl
jmp
mov
pushl
fimull
in
enter
enter
out
mov
push
insl
sub
stos
jg
push
mov
dec
xchg
cmp
add
repnz
loopne
aad
into
and
incl
out
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
sbb
xlat
icebp
call
and
inc
aam
jbe
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
cmp
dec
push
mov
inc
and
add
jmp
shr
ret
sbb
clc
fistpll
aaa
jmp
cld
add
sbb
and
out
imul
adc
pop
cld
shr
fcomip
aam
leave
rol
cltd
mov
sbb
xor
popf
lcall
cltd
cmp
push
jno
mov
jo
push
pop
xor
adc
out
imul
inc
sarl
or
es
ljmp
cmp
pushl
dec
or
gs
rorl
pop
mov
mov
cmpsl
and
sub
mov
jmp
dec
or
inc
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
loopne
ljmp
mov
fsubrp
or
ljmp
xor
ss
mov
aaa
std
ss
xor
mov
or
pusha
ljmp
stc
mov
push
mov
or
inc
mov
mov
add
pop
call
cmp
popa
inc
addr16
fwait
pop
rcll
cmp
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
jl
adc
int
mov
xor
cmp
xor
sub
and
adc
add
pushl
fcmovbe
pop
in
and
rcr
sbb
mov
cmc
inc
or
sub
or
pushl
jbe
mov
inc
add
lcall
jecxz
mov
jo
les
cmp
addr16
cmp
imul
movsl
aaa
std
sub
add
out
cmp
fstl
jg
incb
fnsave
int
insl
repz
sti
sub
adc
add
add
jmp
xchg
adc
sub
xor
mov
pop
ss
or
iret
cmp
inc
xor
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
fbstp
add
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
inc
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
js
stos
mov
mov
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
cmp
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
pushl
cltd
clc
ret
push
shll
push
xchg
ret
push
mov
jmp
jnp
ds
xchg
push
and
test
movsl
test
sarb
add
sub
decl
sarb
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
push
icebp
jmp
jecxz
imul
add
mov
jmp
ljmp
sub
push
dec
pop
add
dec
imull
mov
mov
mov
call
jno
xor
xor
shrl
popa
aas
fists
bound
mov
dec
push
out
inc
decl
pop
ds
nop
mov
jae
mov
lret
call
loopne
std
adc
pop
insb
adc
add
ljmp
sub
mov
lock
inc
leave
ljmp
lods
push
ret
add
and
sbb
call
mov
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
cwtl
decl
inc
loopne
call
adcl
xor
ficomps
ljmp
inc
clc
jp
jno
sub
aas
cmp
xchg
es
or
arpl
dec
out
rorb
flds
in
add
shrb
daa
dec
and
faddl
or
in
push
cli
xchg
lcall
in
sub
mov
out
xor
ljmp
sub
ret
add
not
repz
jl
sar
test
mov
xchg
fdivrl
decl
lock
std
and
mov
xchg
rcrb
std
jmp
lcall
or
adcl
pop
jl
imul
push
sbb
cld
sbb
adc
aaa
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
mov
test
jge
xchg
aam
in
hlt
mov
push
cmp
push
jg
call
hlt
and
das
int
lds
rolb
clc
mov
in
and
xor
sub
xor
and
das
adc
shr
ljmp
inc
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
sti
rcll
out
clc
pushl
jo
pushf
imul
insb
fldl
sbb
mov
insl
popf
lcall
pushl
lods
xchg
jmp
xchg
inc
adc
es
or
cmp
aaa
adc
push
ss
ljmp
enter
xor
loop
aad
enter
sarl
lcall
loop
loopne
call
int
mov
pop
xorb
insl
jg
jl
jo
inc
out
push
sub
decl
fistpll
pop
mov
xchg
mov
or
and
decl
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
lea
mov
mov
fs
mov
jmp
repz
or
inc
insb
dec
lcall
cmp
gs
sbb
jl
shll
test
shll
pushl
std
incl
inc
dec
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
push
jmp
inc
ds
leave
and
into
push
fildll
out
clc
icebp
shl
lods
mul
aaa
cld
jmp
jmp
clc
adc
sbb
lahf
nop
inc
hlt
inc
call
add
mov
mov
mov
lcall
sub
cmc
lcall
push
daa
pop
es
pop
cmp
mov
jbe
push
or
sbb
scas
pop
jmp
loope
xchg
icebp
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
call
data16
jae
or
and
sub
es
sub
jecxz
ja
je
xchg
int3
test
inc
lds
mov
sub
loope
sti
mov
xchg
sub
cs
and
and
sbb
lcall
sti
fwait
lock
cmp
fcmovnb
rclb
mov
outsl
pushl
or
adc
sbb
jns
aas
lcall
adc
mov
cltd
and
sub
lcall
arpl
inc
adc
add
dec
fcompl
int3
inc
lds
loopne
jmp
or
stos
sub
jmp
daa
xchg
and
pop
stos
sbb
pop
repnz
add
sti
cmp
sbb
jmp
loope
roll
leave
daa
aam
call
rclb
sbb
and
adc
and
ds
jae
std
push
lods
repnz
cli
xor
call
das
jle
cltd
pop
xchg
add
call
clc
inc
fsubl
dec
add
test
call
clc
add
add
pop
test
or
roll
mov
rcrb
jmp
add
mov
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
push
lcall
adc
push
fimuls
xor
sbb
add
into
sub
int3
xor
adc
sar
out
stc
pop
push
pop
pop
or
pop
pop
or
pop
push
fimull
or
lock
push
mov
or
std
jno
out
ffree
loope
ljmp
sbb
mov
jg
add
test
stos
andl
clc
mov
shrb
dec
adc
pop
pop
cmc
in
lods
inc
aas
push
or
rol
ret
aad
sbb
xlat
lock
or
int
push
pop
jg
out
adc
aad
mov
jmp
cmpsl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
incl
push
mov
cmp
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
xchg
pushl
std
ljmp
sbb
sbb
and
es
sub
lret
adc
insb
push
dec
insb
add
fs
push
cmp
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
lret
xor
pop
push
push
aam
shr
shrl
ret
decl
jg
pop
int3
lret
mov
addr16
iret
add
and
shlb
repnz
lcall
cli
or
add
mov
loop
jb
lcall
std
cmp
jmp
jmp
jae
mov
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
add
lcall
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
lcall
arpl
rcrl
push
lret
bound
sbb
sub
sub
dec
sub
adc
adc
push
fdivl
enter
lret
into
rolb
js
push
out
in
in
ljmp
xor
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
lcall
jbe
testl
adc
push
add
hlt
lcall
cmp
push
cwtl
cmp
inc
and
and
or
mov
das
adc
lcall
into
push
repnz
jmp
xchg
iret
in
mov
pushl
or
cmp
push
inc
pop
cmovb
and
or
ljmp
add
sbb
out
fcompl
cli
jb
sahf
sti
jecxz
lods
sbb
mov
lcall
ds
sub
in
int
mov
mov
inc
jne
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
xor
inc
xor
dec
mov
or
not
in
rolb
fdivs
xor
addr16
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
call
test
sub
cmc
mov
adc
sbb
popa
std
add
cmp
insl
or
decl
or
cmp
shl
dec
or
adc
ds
jmp
inc
dec
sub
dec
add
jmp
fldt
mov
mov
int
out
cld
pushl
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
pushl
push
and
jecxz
fnstsw
mov
cmc
mov
inc
add
push
lods
or
or
out
ljmp
jmp
sub
and
lcall
shl
mov
mov
shrb
ljmp
inc
sub
inc
jge
fwait
sbb
shrl
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
jg
mov
fdiv
movsb
std
stos
add
out
call
cmc
add
call
idiv
jb
or
xor
cmp
ja
insl
pop
cmc
decl
sbb
mov
scas
scas
mov
call
xor
xor
mov
and
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
mov
sbb
out
out
jmp
mov
hlt
pop
adc
cs
cmp
jbe
pushl
mov
pop
push
adc
dec
loop
stos
and
adc
lock
add
mov
mov
and
ljmp
pushl
lcall
iret
test
push
in
js
out
dec
add
or
adc
aam
decl
sar
lahf
repz
out
or
jge
pop
add
add
add
cli
mov
mov
in
dec
push
mov
add
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
jg
aam
push
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
jmp
sti
xor
iret
push
xor
and
mov
imul
adc
mov
cli
mov
mov
xor
sbb
outsl
in
lcall
outsb
cwtl
into
movsl
lret
pop
idivl
pop
icebp
call
movsl
sbb
or
mov
mov
sbb
sub
sub
test
sub
push
mov
push
in
push
mov
movsl
stc
pop
cli
fs
ljmp
lods
or
sbb
daa
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
out
jbe
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
dec
adc
enter
push
ss
xor
and
sahf
test
das
out
pop
out
jmp
fbld
fidivl
jecxz
call
pop
notl
or
jg
mov
out
dec
and
sbb
sbb
clc
mov
loope
in
decl
xor
hlt
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
jg
jmp
push
push
in
pop
dec
arpl
aaa
jns
mov
loopne
filds
mov
pop
enter
out
rolb
or
movq
pop
std
mov
sbb
sbb
adc
int
cmp
mov
mov
paddw
jge
test
sti
push
cmc
adc
aaa
ljmp
insb
out
jmp
push
call
fcmovne
fmul
dec
in
repnz
movlps
and
cmp
jbe
add
inc
cmp
and
pop
inc
call
jmp
cmpsb
mov
mov
add
push
or
adc
sbb
push
mov
dec
adc
mov
xchg
adc
xchg
and
call
and
mov
test
push
fsubs
out
into
mov
fstl
jmp
in
in
fnstsw
iret
out
iret
mov
ss
add
pop
dec
sub
jae
arpl
mov
in
sub
lds
lret
shlb
pop
ficomps
jbe
sbb
setge
fdivl
sahf
and
incl
jbe
and
daa
mov
and
or
cli
jecxz
xlat
nop
into
mov
decl
iret
push
icebp
loopne
jmp
repnz
dec
fcomps
push
incb
sbb
daa
cmp
call
outsb
sub
dec
subb
push
ret
in
scas
sarb
test
int
lret
mov
cmp
nop
sbb
sbb
and
sbb
jnp
jg
das
clc
adc
test
std
adc
out
ficomps
xchg
aam
incl
insl
aam
jo
jecxz
popa
jmp
out
and
pop
out
sub
lods
repz
push
repz
jp
dec
sub
stos
jmp
cmp
inc
push
inc
xchg
cmp
and
or
jle
and
pushf
mov
mov
pushl
xchg
jno
imul
and
in
xchg
jecxz
in
adc
adc
call
mov
adc
ljmp
out
xor
and
xlat
iret
fldcw
adc
lock
out
shl
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
daa
cmpsb
es
sub
loopne
jo
outsb
cli
cmp
inc
flds
jmp
dec
rcrl
mov
sbb
and
hlt
mov
stos
adc
clts
or
cmp
add
test
ja
sbb
mov
sbb
loope
and
mov
cmpsb
loopne
ficomps
in
sahf
add
or
ljmp
inc
or
mov
or
ljmp
add
int
jns
and
mov
pop
clc
int3
ljmp
dec
in
in
icebp
ljmp
adc
imul
sbb
pop
inc
imul
mul
incl
push
adc
adc
push
add
hlt
jecxz
push
fisttpll
shl
call
clc
rolb
jecxz
negb
mov
pop
pop
js
xchg
and
push
jns
mov
in
cmp
ljmp
adc
shl
cmpsb
push
and
push
es
xchg
add
out
mov
std
call
dec
into
call
data16
in
roll
nop
adc
and
pop
and
lret
lcall
dec
push
cli
sub
shl
repnz
mov
jmp
sbb
pop
pop
hlt
ljmp
into
and
lahf
loope
out
xchg
add
adc
es
cmp
adc
aad
loope
cmp
xor
push
out
sub
push
stc
push
aas
aas
shrb
push
hlt
jp
push
fistps
int
lret
fmul
sbb
push
jg
dec
xlat
and
push
jecxz
int
imul
call
ret
hlt
cwtl
add
or
adc
and
daa
push
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
call
insl
bnd
mov
cmpsb
mov
add
fldln2
push
add
mov
decl
pop
rcll
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
incl
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
aaa
decl
xor
inc
sti
cs
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
fmulp
fsubr
iret
pop
aam
out
ljmp
and
bound
cmp
sub
sti
cld
jmp
fcoml
mov
test
gs
call
jb
into
push
fiaddl
jbe
pop
lret
sar
push
les
push
repnz
add
or
scas
sub
jg
lea
rcrb
push
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
ljmp
enter
out
xor
dec
in
hlt
ftst
xchg
clc
add
loopne
decl
pop
sbb
inc
dec
inc
inc
xor
sub
fcmovu
xor
fisubs
push
int
pusha
frndint
sub
add
fs
adc
or
or
push
call
std
push
pop
decl
sub
rcrb
mov
in
fcmovnu
xor
fcomip
call
es
xchg
cld
gs
add
in
loop
sarl
stc
arpl
jmp
cwtl
sub
xchg
push
jp
mov
sbb
add
lock
shrb
or
pop
iret
js
lahf
lcall
add
sub
testl
lods
fwait
fidivrs
out
fldl
mov
jg
inc
ss
dec
pop
push
repnz
cmp
pushl
mov
cwtl
iret
std
loop
testb
push
push
lds
or
mov
aad
fchs
repnz
or
and
mov
imul
mov
cld
mov
lcall
mov
lods
lds
iret
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
sub
dec
add
sbb
or
ds
cmp
push
pop
orl
std
call
adc
stos
enter
into
inc
fldenv
mov
push
adc
adc
decl
mov
cmc
shl
loop
jp
or
inc
repz
or
and
cs
jmp
inc
sbb
pop
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
call
mov
mov
dec
sub
push
dec
or
add
ljmp
sti
mov
ljmp
cli
negl
daa
cmpsl
cld
push
add
out
clc
rorw
or
pop
testl
in
icebp
aas
loop
fcomip
loope
lock
popf
pop
sub
pop
mov
add
imulb
jmp
loop
mov
or
xchg
sbb
or
sbb
mov
adc
dec
clc
lcall
push
lock
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
sti
in
out
lock
and
sbb
sbb
add
cld
push
repnz
mov
addr16
pop
daa
fcompl
add
adc
xor
sub
decl
jbe
in
in
out
repnz
es
or
adc
or
std
fdivp
test
jmp
xor
out
mov
std
or
inc
and
incl
and
xor
call
stc
lahf
add
lock
jmp
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
mov
xchg
decl
or
adc
adc
mov
dec
sbb
add
jg
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
pop
out
out
stos
mov
cli
idiv
dec
or
sbb
sti
sbb
push
sbb
incl
data16
or
add
lret
mov
mulb
jo
out
lods
out
mov
adcb
into
out
mov
jmp
cmc
push
imull
pop
std
mov
fs
cs
xor
das
in
sub
and
xchg
pop
icebp
out
or
call
fists
fcomi
out
repnz
inc
sarl
mov
decl
adc
xor
inc
sbb
sbb
pop
fstps
insl
adc
push
lcall
jmp
insb
stc
add
enter
inc
incl
cli
pop
repnz
shl
jmp
inc
ror
leave
in
iret
or
sbb
inc
ret
inc
subb
incl
mov
notl
sarb
fldcw
jg
testb
push
adc
or
cld
mov
add
add
pop
xchg
call
sbb
adc
or
std
xor
out
mov
div
xchg
hlt
xor
lcall
std
pop
add
clc
stc
out
jmp
dec
out
shlb
jecxz
jmp
ljmp
or
and
cs
xchg
sub
and
jp
loopne
push
sti
icebp
inc
ljmp
mov
loop
jecxz
push
add
pop
mov
add
std
sbb
mov
pushl
repnz
adc
lahf
sbb
push
sbb
xor
mov
mov
mov
xchg
std
in
dec
testl
sar
jg
hlt
add
ljmp
popa
out
sar
add
add
add
xchg
lcall
jg
int3
or
adc
add
cli
imul
adc
sbb
lcall
push
adc
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
add
orb
adc
jg
lcall
sbb
adc
or
add
jg
mov
cmpsb
add
fcoms
pop
out
pop
mov
pusha
out
add
clc
fs
outsb
in
loop
ficoms
in
repnz
loopne
decl
adc
sbb
or
add
mov
pop
in
fstpt
in
stc
sar
pop
cmpsb
ljmp
call
cli
js
lock
call
insl
stc
inc
add
add
push
cwtl
aad
loope
push
sahf
notb
out
dec
clc
ljmp
add
or
push
mov
das
sbb
pop
cmp
and
mov
xchg
jns
icebp
in
out
sub
cmp
add
push
outsl
mov
or
test
sbb
lcall
in
jmp
mov
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
sub
sbbl
mov
sub
push
cmpb
divb
lcall
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
movlps
sbb
lcall
sbb
in
or
mov
xchg
out
mov
adc
test
std
mov
fwait
or
and
pushl
add
ljmp
out
jmp
adc
push
leave
clc
daa
push
push
or
or
adc
sbb
push
pop
or
xor
out
jg
lock
clc
adc
out
jmp
out
or
mov
repnz
clc
mov
movsb
jg
mov
in
add
jp
or
pop
out
add
decl
out
jmp
sub
cmpsl
add
dec
add
fs
push
mov
sub
out
add
clc
gs
ljmp
out
or
jbe
cmc
cltd
clc
push
call
inc
fwait
add
add
loopne
jbe
cmp
int3
jecxz
in
mov
pop
add
xchg
adc
inc
and
sbb
adc
add
std
mov
xchg
out
fyl2x
pop
repnz
shll
cmpsb
add
push
add
divl
pop
jge
imul
and
cltd
std
cmp
cld
jno
rorb
sub
ret
sbb
sbb
or
stos
adc
adc
outsl
inc
adc
incb
cmc
mov
jmp
repnz
repnz
out
aad
mov
int
xchg
cli
scas
stc
or
js
mov
sti
push
inc
icebp
or
out
push
cmc
lcall
pushl
pop
sbb
and
inc
and
or
add
notb
out
ljmp
in
jmp
repz
clc
xchg
jnp
inc
add
add
or
jle
and
mov
repnz
add
push
jmp
insb
setnp
push
es
sub
and
js
push
jmp
in
loopne
pushl
in
ljmp
inc
decl
sbb
test
xchg
fdivr
lcall
sub
cmp
cmc
mov
pop
dec
or
repz
adc
lcall
sbb
mov
rolb
test
inc
neg
bnd
hlt
jmp
ljmp
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
add
sbb
and
and
and
ds
aaa
sbb
sub
jnp
loope
adc
ret
out
mov
mov
push
out
fucomi
fucomp
test
ret
std
inc
add
cli
adc
addr16
adc
lcall
or
ljmp
in
repz
mov
cmc
sbb
pop
push
push
sbb
into
add
xor
lock
in
loop
fimuls
mov
sbb
clc
in
add
mov
xchg
adc
movhlps
push
or
or
push
xchg
or
sub
aas
pop
loopne
iret
sahf
jg
lret
pop
add
cs
repnz
lock
mov
repnz
inc
testb
add
pop
inc
push
test
adc
push
pushl
std
or
pop
lods
add
cli
push
icebp
and
jne
mov
hlt
jge
mov
or
decl
adc
adc
clts
cmp
fdivr
int3
mulb
in
dec
jg
pop
inc
inc
imul
in
icebp
jns
or
or
es
bound
mov
adc
push
add
sti
jl
lods
repz
lock
jnp
std
repnz
aam
push
or
ficoml
orl
add
stc
idivl
clc
sar
pop
dec
stc
stos
vprotd
or
dec
push
mov
sti
popa
stc
das
test
jmp
sub
aad
pop
push
add
decl
or
adc
fistpl
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
dec
aaa
std
incl
or
fwait
push
lock
cli
push
xor
xchg
dec
cmp
jg
in
shr
inc
cmc
add
pop
or
jbe
pop
adc
lds
nop
push
push
or
pop
rolb
xor
push
push
out
fcomip
call
add
call
imulb
jle
repz
add
add
outsb
pop
add
cli
lock
mov
out
mov
and
mov
cmc
xchg
cli
cmpsb
clc
or
cs
jg
pop
xor
adc
std
dec
push
fnstsw
pop
out
jge
pop
repz
hlt
ljmp
mov
inc
sti
das
cld
icebp
cli
inc
divl
jp
insl
idivb
or
adc
sbb
sbb
pop
sbb
adc
out
shl
psllw
out
test
sbb
hlt
mov
jp
test
mov
jbe
sahf
cmp
int3
add
add
lea
fdivrp
lock
aaa
in
jnp
stos
in
jmp
xchg
testl
cmovae
fimuls
xchg
add
mov
dec
std
pusha
hlt
sub
out
in
in
call
movl
xchg
popa
std
or
pop
movb
lods
cli
push
clc
negl
clc
jae
insl
pop
add
out
sbb
and
sbb
inc
pmulhuw
insl
call
loopne
lock
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
lods
add
clc
test
in
shl
or
decl
mov
mov
add
xor
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
call
or
prefetcht1
cmp
jecxz
jle
leave
pop
jp
dec
imull
jle
ljmp
insl
sti
sub
adc
faddl
inc
cld
mov
ljmp
idivb
ds
or
sbb
ds
pop
decl
push
add
negl
repz
in
cli
psubq
pushl
sar
xchg
stc
pop
mull
out
inc
repnz
ljmp
cmp
or
or
sub
add
cmp
test
pushl
jbe
repz
cli
add
pop
adc
xchg
or
mov
divb
repnz
add
cld
jmp
cli
inc
add
pop
or
rclb
jnp
decl
or
add
add
sti
lahf
testl
xchg
add
adc
mov
lret
adc
adc
push
mov
cli
dec
repnz
or
sti
in
lods
lock
clc
pop
subb
negb
mov
inc
cmc
iret
stc
push
cld
pop
incl
xchg
ret
es
ret
cmpsl
sbb
sbb
sbb
pushl
pop
das
stc
shr
filds
fsubrl
out
out
iret
or
push
adc
hlt
sbb
push
dec
push
mov
jle
push
clc
sub
sti
mov
push
out
sub
mov
sbb
cwtl
push
testl
mov
jmp
hlt
push
std
or
adc
or
loopne
out
mov
roll
decl
adc
push
imul
into
divl
cmc
das
bnd
pop
idiv
decl
stc
push
stc
incb
or
or
push
push
ja
dec
mov
mov
push
repz
jmp
dec
fisubl
out
lock
incl
add
sbb
pop
adc
pop
or
in
call
out
iret
add
lods
push
and
jp
nop
pop
loopne
or
push
in
jecxz
in
jmp
add
cld
pop
cmc
aaa
or
pop
sbb
loop
lea
pop
add
test
or
scas
repz
mov
cli
push
jle
sbb
add
incl
idiv
cwtl
cld
movsb
cli
cmp
mov
rorb
pop
or
or
push
or
repnz
loopne
fiaddl
in
out
fs
daa
push
sti
cmpsb
add
push
or
pop
daa
fisubs
and
sbb
cmpb
jge
stc
lock
cli
addl
mov
insl
mov
sub
jecxz
jmp
movsb
loope
in
push
mov
push
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
pop
add
jg
stc
add
add
add
add
add
push
clc
inc
hlt
loope
jecxz
out
in
call
out
push
hlt
sar
add
adc
adc
imul
mov
jns
jno
lods
fmull
clc
cmp
push
setno
rcrb
jo
push
clc
jg
call
or
cmp
std
push
notb
sar
std
insb
add
and
std
dec
cli
shl
mov
in
or
inc
jmp
push
push
lret
stc
pop
nop
add
adc
mov
call
sbb
push
mov
or
ja
lcall
sti
sahf
divb
in
push
jmp
in
out
jo
enter
mov
incl
pop
or
les
or
or
fcomip
pushl
mov
in
ljmp
movsb
hlt
inc
sti
mov
or
push
inc
int3
adc
adc
xsha1
cmpsb
or
or
add
in
cld
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
or
add
and
jo
loop
jmp
fldt
sti
ret
add
in
daa
pop
sub
push
pop
push
decb
mov
xor
sbb
testb
inc
std
jbe
ljmp
mov
stc
pop
negl
and
and
mov
out
mov
fildll
adc
and
xchg
and
and
and
ljmp
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
in
stos
mul
add
into
or
push
sbb
adc
pop
mov
jecxz
add
jg
incl
sbb
push
pop
or
jmp
out
mov
fdivrp
call
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
or
and
add
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
sbb
pop
and
mov
sub
pushl
pop
pop
push
pop
add
mov
jecxz
loopne
fists
and
loop
out
jge
and
hlt
dec
cli
sar
jg
add
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
lcall
loope
test
dec
jmp
jmp
ljmp
icebp
lock
es
idiv
fs
cld
ret
ljmp
nop
push
mov
push
adc
push
test
sbb
sbb
sbb
adc
dec
mov
shlb
jmp
lcall
sub
add
repnz
test
pusha
dec
or
or
mov
insl
adc
ret
xorb
adc
fimull
ljmpw
mov
loope
fcoml
in
in
push
add
pop
pop
xchg
push
push
adc
sbb
mov
iret
or
mov
push
cmp
div
not
clc
in
lods
std
xchg
fs
mov
jnp
sbb
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
jg
incl
cli
mov
pusha
or
sbb
sbb
sbb
dec
push
jg
ds
mov
mov
pushf
ret
repz
testl
add
addr16
fcomip
incl
add
mov
pop
fs
or
or
orl
or
call
notl
repnz
jmp
sub
sbb
mov
hlt
daa
sti
in
js
jl
jmp
pop
test
and
xchg
or
add
std
jb
pop
les
enter
pushl
or
pavgb
pop
pop
add
decb
into
inc
xorb
out
out
jmp
cmc
cmp
mov
pushl
pop
sti
or
or
xchg
or
or
pop
or
fwait
sbb
or
push
cmp
aas
addb
or
cli
xchg
clc
jg
hlt
jae
sbb
icebp
sbb
mov
push
std
jecxz
cli
decl
sub
popf
push
jns
sub
cs
sti
ds
ja
pop
push
dec
notl
repz
repnz
ljmp
dec
testb
adc
jmp
pop
icebp
incl
scas
sbb
aam
andl
and
sbb
or
sub
call
cmc
repnz
lods
out
imul
test
fwait
jl
xchg
in
mov
cmpsl
in
pop
in
mov
out
cld
rclb
or
pushl
mov
dec
sbb
and
sbb
rorl
lcall
add
mov
insb
bnd
lock
mov
in
mov
cmc
aad
data16
in
call
mov
hlt
or
adc
sbb
push
add
adc
xor
outsb
or
mov
lcall
shll
push
pushl
iret
aad
fst
out
repz
adc
cmp
inc
and
jbe
test
mov
sbb
lds
sbb
mov
dec
add
imulb
in
ss
stc
fisttps
loop
incl
in
dec
repz
movsb
adc
mov
jmp
and
test
xor
inc
sbb
or
ds
outsl
hlt
dec
out
and
das
mov
mov
out
xchg
ljmp
xlat
clc
cli
pushl
add
add
jg
push
sbb
sbb
repz
add
mov
out
jecxz
frstor
loop
mov
out
in
jne
fdivrp
cmp
mov
cmp
push
inc
jns
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
incl
or
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sbb
scas
sbb
sbb
sbb
push
sbb
adc
incl
add
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
neg
loopne
lea
fisubs
or
sar
rdpmc
adc
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
cld
in
dec
sbb
pop
or
xchg
xchg
std
arpl
push
test
out
sbb
xor
hlt
xor
ljmp
pop
jmp
roll
or
in
outsb
pushf
push
ret
pushl
or
or
nop
scas
xchg
add
add
je
ljmp
pushl
fwait
std
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
aam
dec
std
ds
add
fbstp
sbb
or
or
pop
push
push
push
and
movl
lret
ja
sbb
repz
out
add
jp
push
jmp
out
sbb
ljmp
sti
cld
decl
rclb
stos
adc
adc
adc
ljmp
and
cs
sahf
or
or
lock
sti
jbe
call
sub
cmp
sub
out
ja
pop
notb
je
ljmp
icebp
add
adc
pop
lock
sbb
sbb
sbb
pop
cmp
push
push
add
xchg
out
in
repnz
and
mov
cmp
std
jecxz
loop
loop
in
std
mov
clc
or
idiv
int3
add
dec
sbb
cmp
xchg
and
in
and
test
aaa
push
mov
mov
imulb
ljmp
sbb
add
push
jecxz
loope
loopne
loopne
call
out
cmc
test
cmc
call
sbb
and
and
les
cmp
push
ljmp
inc
sbb
stc
out
jp
cwtl
ljmp
or
cmp
pushf
jmp
pop
call
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
mov
jge
dec
pop
pop
pop
repnz
dec
int3
in
das
ljmp
clc
or
loopne
loope
outsb
out
jmp
mov
das
fdiv
std
sub
insl
mov
mov
adc
pop
adc
and
mov
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
ljmp
fisubl
ficoms
in
jmp
jg
das
push
jnp
sbb
mov
call
push
sti
push
mull
fsubs
jl
sbb
sbb
adc
std
and
add
mov
jecxz
loop
jecxz
loop
loope
in
call
in
into
icebp
xor
cmp
or
adc
ljmp
adc
sbb
push
pop
xchg
sbb
sbb
add
push
jl
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
jg
push
sub
sahf
adc
adc
adc
adc
adc
clc
lcall
pmaxub
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
addl
ja
jle
scas
out
pslld
test
incl
add
cmpb
adc
mov
and
and
pop
leave
sbb
adc
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
mov
jmp
daa
ljmp
push
std
xchg
mov
add
call
or
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
xor
lcall
out
cmc
jmp
jmp
fcomip
xor
ljmp
sar
filds
or
or
or
or
or
inc
or
or
or
or
or
pop
add
cld
dec
pop
icebp
inc
in
repz
pop
jmp
incl
out
push
repz
pop
mov
stc
mov
mov
xchg
add
pop
cmp
add
adc
sbb
and
pop
adc
jg
mov
cld
sub
out
xor
inc
lock
mull
jne
dec
negl
dec
clc
in
decl
cmp
cmc
ss
out
hlt
xor
lret
sti
and
jmp
pushf
or
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
or
call
add
clc
js
mov
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
testb
mov
cmp
sbb
or
ret
adc
ljmp
sar
bound
pop
xchg
add
std
jb
imul
cmc
in
icebp
shl
gs
icebp
inc
and
in
mov
dec
in
fucomip
mov
out
icebp
es
jo
add
xor
adc
sbb
and
es
ja
and
sbb
shll
loop
xchg
clc
adc
out
out
in
out
jmp
and
cmpsb
call
xchg
out
inc
repnz
and
testl
pusha
lcall
pop
ret
les
add
add
cmp
es
adc
hlt
mov
arpl
in
cmc
mov
mov
jnp
lds
cs
call
repnz
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
ljmp
pop
stc
push
dec
push
nop
adc
les
mov
cmp
xchg
testl
icebp
pop
icebp
call
icebp
in
in
out
shr
mov
out
ljmp
sbb
push
sub
push
or
lds
sub
and
jnp
das
clc
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
in
fdiv
stos
add
xor
sub
lock
mov
or
into
sbb
and
call
rcl
pop
daa
mov
adc
test
out
push
sub
jecxz
call
fmull
push
mov
pushl
cld
test
jle
or
adc
sbb
push
pop
hlt
jmp
sbb
xchg
in
mov
mov
fdivrp
ficoms
loopne
popf
out
jmp
insb
repz
cmpsb
mul
clc
popf
stc
dec
mov
and
inc
or
adc
pushl
fistpl
and
xchg
daa
sub
sbb
sbb
aam
lock
in
incl
cld
fildll
aam
cld
fstps
js
stc
and
icebp
incl
and
inc
adc
adc
adc
test
mov
push
adc
adc
adc
das
push
mov
cld
sti
cmc
ljmp
xor
bnd
loope
fnsave
insb
out
out
jmp
jg
sar
mov
push
in
popf
repnz
sbb
in
cmp
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
ljmp
ljmp
sub
mov
adc
push
add
push
popf
or
or
or
jmp
or
add
ss
inc
clc
sar
dec
div
stc
daa
add
add
add
mov
add
push
sti
fcomip
push
popa
lock
mov
clc
add
push
lock
or
mov
adc
adc
sbb
fucomip
testb
add
cli
in
hlt
sbb
fucomip
xor
jmp
out
push
push
cld
jmp
aas
pop
inc
or
adc
or
or
add
adc
inc
cld
aam
mov
add
and
or
push
call
add
jecxz
add
inc
repnz
cmc
inc
stc
push
cld
or
repz
clc
repnz
adc
cmp
adc
ljmp
jle
punpckhwd
or
sti
sar
xchg
negl
testl
cmc
rcll
sbb
repz
repnz
out
aam
jmp
call
mov
mov
div
sbb
sub
lock
or
in
sbb
hlt
jmp
add
and
and
and
inc
or
hlt
int3
in
mov
pop
dec
dec
or
inc
out
jmp
adc
outsl
clc
addr16
pop
cld
adc
sahf
cli
mov
decl
ljmp
fdivp
add
adc
pusha
sbb
sbb
and
add
pusha
jmp
xchg
pop
sbb
mov
adc
push
adc
sbb
cmc
loop
jecxz
out
ljmp
scas
cmc
cld
cmp
mov
or
or
or
pop
or
or
cmp
or
sbb
mov
adc
mov
or
stos
add
stc
adc
pop
ljmp
loopne
loop
in
jmp
push
dec
push
test
or
popa
std
inc
std
in
sti
cli
clc
push
idiv
push
dec
add
pop
test
xchg
cli
or
push
or
push
push
adc
incl
popa
sbb
pop
jl
cmp
aad
adc
xchg
cmc
push
out
mov
scas
add
push
jle
ds
adc
sti
jb
insl
add
push
pop
aad
mov
mov
aas
mov
add
add
pop
inc
mov
mov
loope
stc
or
or
or
mov
cmp
and
push
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
add
add
int
dec
adc
adc
stos
or
in
add
stos
pop
mov
shll
sti
mov
cld
insb
jg
add
add
add
fbstp
insb
data16
in
je
inc
in
fldl2t
out
sbb
adc
test
add
or
adc
add
das
pop
inc
mov
add
cwtl
in
out
ljmp
cld
notl
adc
adc
adc
push
push
or
add
mulb
mov
icebp
clc
mov
pushf
push
leave
or
ljmp
fwait
aam
rorb
and
sbb
sbb
ret
cli
jmp
jmp
scas
rcrb
lock
push
cld
inc
js
pop
adcb
xor
ficoml
add
jl
xchg
cli
push
stc
push
stc
outsb
in
mov
pop
push
jae
rorl
dec
or
or
lea
mov
dec
jae
movsl
cmc
mov
mov
test
inc
out
pop
out
cmpsl
lock
repnz
cld
dec
add
test
push
pop
add
mov
sti
or
test
or
or
or
jg
jmp
or
mov
outsb
aaa
cli
sti
cmp
std
decl
inc
in
cli
call
in
in
in
in
out
ljmp
dec
shl
std
jne
or
jg
sahf
sbb
sub
scas
and
ja
cmpsl
sbb
sbb
add
lock
jg
sbb
cmp
in
or
out
int
in
scas
repnz
negl
push
push
stc
sub
mov
call
imul
cmpsl
or
cmc
inc
adc
sbb
sbb
adc
or
add
inc
idiv
lcall
hlt
in
sbb
in
inc
out
mov
imull
cld
add
pop
add
add
add
add
incl
flds
arpl
mov
sar
testl
fiaddl
repnz
adcl
mov
sbb
push
popa
repz
out
imul
test
dec
jmp
test
call
mov
clc
push
stos
pusha
adc
lods
add
add
mov
lcall
hlt
repnz
repnz
lahf
negl
idiv
add
push
mov
ret
add
mov
or
or
push
mov
push
add
std
xor
xlat
cli
and
sti
pop
pusha
cld
mov
mov
out
and
cld
inc
std
leave
cld
adc
lcall
add
add
add
pop
adc
pop
or
or
jg
add
fimuls
mov
lahf
add
push
ds
std
shr
pushl
pop
stc
sbb
cmp
aas
stc
mov
and
inc
notl
clc
xor
sar
les
add
mov
add
stos
cmpsl
ljmp
inc
roll
push
or
mov
or
fildl
mov
in
mov
ja
sub
xchg
ljmp
push
aam
push
cld
sbb
cmpsb
sti
dec
cli
mov
out
cs
sbb
std
test
mov
mov
push
clc
decl
pop
jl
dec
add
ss
add
add
add
inc
decb
push
ljmp
cmp
and
repz
sbb
mov
mov
testb
js
lods
or
mov
dec
call
cld
sub
push
mov
jmp
ja
cmpsb
incl
push
jle
roll
cmc
std
push
cli
pop
sbb
mov
lcall
imul
clc
add
dec
add
or
scas
adc
mov
data16
incb
sti
xor
loop
js
push
dec
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
inc
push
incb
cmp
or
fwait
add
cs
add
add
xor
jbe
push
std
std
cmp
mov
add
ja
ret
add
add
add
add
dec
cli
jns
xor
clc
ljmp
sti
push
loope
mov
add
or
add
ljmp
jb
stc
adc
push
out
cmc
out
or
out
aad
jmp
out
mov
add
sub
mov
or
test
or
decl
movsl
or
testl
dec
or
test
add
into
sti
dec
clc
icebp
fcomip
mov
lock
mov
daa
lock
and
cmp
incl
add
mov
pop
or
lcall
or
add
add
add
pop
data16
push
add
cmpsb
inc
inc
add
cld
mov
add
mov
mov
das
std
dec
cld
stos
sti
pusha
sti
sar
xchg
lock
pop
out
out
mov
out
add
mov
add
sub
out
addb
add
push
add
pop
in
dec
dec
cli
gs
adc
das
andb
sub
lcall
pop
add
add
add
add
add
add
add
roll
add
pop
or
rcr
decl
cmpsb
mov
mov
cli
xor
pop
clc
ss
hlt
or
jle
mov
je
mov
js
mov
in
loop
mov
add
mov
mov
jp
push
stos
or
rclb
and
add
mov
sti
clc
inc
notl
cmc
xchg
addr16
testl
stc
cmc
stc
int
stc
data16
sti
lods
cld
hlt
std
js
fcomip
in
decl
jb
push
sub
rorl
xlat
jp
test
dec
or
or
add
inc
cld
psubw
int3
hlt
arpl
xchg
hlt
adc
adc
inc
cld
cmp
enter
hlt
incb
push
lock
xchg
rolb
inc
add
mov
xchg
std
cwtl
std
or
cmpsl
add
add
sti
or
or
or
pop
cmpsb
std
add
cli
mov
scas
push
std
xor
stc
insl
stc
add
mov
jmp
pop
jbe
stos
add
add
cld
test
cmp
cmc
or
repnz
repz
xchg
test
es
ljmp
cld
push
add
add
add
or
push
or
rorl
or
lcall
add
mov
decl
sbb
push
aad
ds
jg
cmc
cld
mov
testb
repz
repnz
bnd
js
or
inc
repnz
xchg
clc
fcomps
jle
cld
add
push
add
daa
fimuls
out
inc
mov
pusha
or
pop
dec
push
dec
add
add
mulb
or
fdiv
shl
jo
fidivrl
icebp
push
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
movb
movb
jg
rorl
int
or
or
aad
mov
or
or
aaa
cld
stos
push
or
add
add
decb
sbb
cmp
sub
out
pop
cli
mov
cli
or
call
std
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
or
push
std
dec
in
incl
xchg
bound
into
loop
sbb
decb
cmp
call
incb
add
rolb
add
add
add
add
jo
and
push
add
clc
xchg
pop
ljmp
cld
cli
push
cli
sbb
jmp
testl
cmpsb
push
std
pop
pop
clc
mov
xchg
cli
scas
ljmp
aaa
frstor
xor
xchg
push
rorb
iret
or
or
or
or
idiv
fwait
jbe
mov
add
dec
out
ljmp
adc
cld
mov
sti
aaa
sti
movsl
cli
adcb
jecxz
jmp
cli
xchg
cli
out
mov
xor
inc
add
or
cwtl
or
pop
ljmp
adc
sbb
cmc
mov
add
add
cltd
add
sti
xor
push
cmp
gs
cmp
lcall
add
xor
sub
add
lods
xchg
data16
test
aad
insl
call
cltd
add
popf
add
adc
call
cld
pop
sti
aad
xbegin
mull
decl
lock
jmp
das
repnz
fdivr
lods
lcall
pushf
add
add
add
jne
push
lock
in
aad
incl
xchg
and
std
idiv
inc
sti
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
cmp
inc
xchg
push
cmc
in
add
add
sti
add
inc
push
sub
xor
fiaddl
movsb
add
add
je
xchg
pop
insb
add
loope
jb
pop
add
lcall
cmpsb
cmp
cld
sub
cld
outsl
cld
push
std
pop
pushl
mov
add
push
movsb
add
add
add
add
dec
add
add
ret
or
je
add
add
add
sti
sub
fisubrl
add
mov
mov
add
cmp
call
mov
out
add
add
add
xor
lsl
add
inc
add
sbb
pop
imul
sti
pop
sti
cmp
mov
sti
imul
fs
jle
std
mov
add
jp
in
xchg
daa
sti
cli
push
or
dec
cli
lcall
ss
data16
call
inc
add
add
add
into
pop
cli
mov
es
sbb
push
add
mov
clc
add
and
adcb
add
push
push
push
cmp
std
jge
mov
and
push
out
xchg
jb
jp
add
pop
pop
and
push
sub
sub
sub
mov
dec
jmp
mov
push
fcom
in
sub
aas
movsb
push
fwait
mov
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
push
adc
add
add
decl
test
sbb
inc
add
das
add
add
lock
sub
add
add
test
mov
std
add
pop
mov
mov
sub
and
sarb
xchg
add
jg
pop
ss
fcmovbe
decb
cld
lcall
stc
idiv
push
clc
cwtl
testl
mulb
test
fincstp
mov
sti
dec
push
mov
sbb
stc
xchg
add
mov
cld
push
jg
xor
or
pop
movl
incl
add
std
movsl
cld
idiv
push
sti
push
sti
cmp
ds
push
lret
inc
ljmp
xor
xchg
outsl
sbb
and
push
aaa
add
mov
clc
add
sub
add
das
adc
add
add
add
sub
xchg
add
out
decl
push
jnp
fistps
std
pop
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
lock
decb
std
cmpsb
mov
cmp
add
add
jg
mov
add
add
scas
add
jno
lock
das
add
add
mov
add
add
sbb
pusha
pop
and
jge
bound
pop
cmp
std
jb
in
push
cmc
pop
sahf
adc
pop
add
xor
cs
cld
mov
sbb
sti
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
and
clc
cmp
stc
inc
cli
out
cli
jmp
jo
mov
cld
std
cld
loope
inc
jmp
xchg
bound
incl
push
outsl
pop
mov
jge
stos
or
and
push
mov
sub
out
mov
incl
filds
sti
and
ficomps
lcall
sti
or
clc
mov
outsb
loope
notb
fbstp
xchg
push
add
inc
push
out
add
jbe
and
add
cmpsb
out
lock
ret
cld
add
push
sti
iret
cli
pop
cli
daa
dec
jae
pop
inc
sti
out
decl
fsubrs
fscale
enter
add
add
add
incl
hlt
add
faddl
mov
aam
add
lcall
in
dec
es
jnp
cmp
icebp
jo
push
xor
pop
push
sub
adc
dec
data16
dec
mov
sar
decl
cmp
dec
lods
std
xor
sar
cld
in
sti
jl
sbb
sahf
mov
lock
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
push
jl
pop
mov
push
add
add
add
adc
test
add
push
add
sub
add
add
cld
mov
ss
jns
idiv
jno
or
cmc
sti
pop
mov
incl
outsb
fsin
and
cmp
lcall
add
inc
adc
mov
add
add
xchg
add
add
add
mov
add
pop
fwait
lea
or
and
or
cltd
decb
and
arpl
mov
pusha
outsl
cmp
pushf
add
add
add
pop
add
adc
add
faddl
add
pop
mov
add
cmp
inc
add
add
add
ret
add
pop
fdiv
and
data16
fdivr
pop
sar
sbb
lret
push
mov
fimuls
add
imul
add
fwait
inc
mov
pop
incb
incb
std
mov
std
fs
xchg
testb
fs
add
push
mov
sbb
jnp
dec
jl
subb
negb
std
cmc
stos
dec
mull
ficomps
std
xor
sub
add
fildl
and
add
adc
jne
add
sahf
leave
add
xor
gs
sti
mov
push
xor
mov
outsb
add
add
enter
mov
ljmp
out
cmpsb
push
jl
stos
std
movq
stc
or
inc
add
mov
sbb
nop
mov
push
cmc
cmpsb
incl
cld
add
add
movsb
add
jbe
outsl
test
mov
mov
lcall
adc
in
xor
repnz
jmp
adc
mov
sahf
push
ljmp
jmp
call
cmp
test
sub
add
call
cmpl
filds
cwtl
add
and
add
add
pushl
dec
clc
incl
cmpsb
mov
std
fdivr
stos
cld
xchg
cld
mov
add
pand
xor
mov
inc
push
mov
ljmp
sub
push
out
sti
lock
sub
test
insb
std
sbb
sar
mov
mov
std
xchg
decb
loop
lahf
outsb
push
add
mov
add
sbb
inc
xchg
pop
xchg
push
shlb
mov
es
sar
adc
add
insl
add
addl
add
jg
adc
cmp
mull
loop
clc
daa
pushl
cmp
clc
clc
xchg
add
add
test
add
ja
cmp
add
pop
sbb
sahf
ss
imul
arpl
pop
ficoms
pop
jle
jecxz
mov
sub
dec
adcb
lcall
lret
ret
sbb
xchg
add
cs
cmc
mov
in
mov
jg
ja
cmpsl
xchg
movb
add
bound
out
decl
out
lahf
cs
int
sahf
cld
push
pop
call
inc
cld
arpl
lcall
stos
add
inc
mov
mov
lcall
clc
insl
push
aad
dec
test
std
inc
mov
ss
sbb
out
test
pop
sub
xchg
stos
out
std
cmp
push
add
test
lret
add
xchg
push
loop
cltd
add
and
add
arpl
xor
adc
lcall
fidivs
xor
fsubr
std
mov
ja
scas
mov
popf
and
pop
pop
inc
dec
or
add
sbb
add
push
fcmovnb
stos
add
stos
stos
xchg
jo
faddl
test
lods
mov
gs
ljmp
ljmp
pushl
push
sub
xchg
sbb
sahf
mov
aas
xor
sub
add
add
test
lds
mov
add
pop
add
pop
dec
fdivr
out
push
mov
add
add
adc
dec
or
dec
popa
lock
mov
cld
mov
sarl
aad
idiv
sbb
pop
std
mov
decb
mov
xchg
out
add
xchg
xor
inc
out
loopne
fldl
ficoml
sbb
inc
decb
lret
inc
jl
pop
std
shlb
or
mov
ds
pop
sti
sti
std
sti
sub
push
cli
xchg
cld
sbb
loope
sahf
lcall
ljmp
les
inc
add
add
shlb
add
add
add
loopne
test
xchg
fiaddl
xor
leave
xor
push
sar
add
mov
push
ret
pop
mov
sar
pop
pop
es
inc
pop
out
out
pop
add
call
add
add
add
decb
mov
movsl
decl
mov
pop
mov
add
sub
movl
inc
outsb
lret
mov
sar
dec
hlt
dec
add
loop
add
xor
mov
mov
and
lods
decb
pop
outsl
push
bound
push
mov
jmp
mov
repnz
mov
call
push
lcall
sbb
or
jecxz
out
inc
mov
mov
xchg
sbb
leave
std
jle
dec
std
push
hlt
cld
enter
loop
xor
faddl
bound
push
fisubl
dec
cmp
add
xor
push
das
mov
lods
bound
into
xchg
add
scas
loop
push
incb
pop
add
add
add
shlb
add
ret
decl
iret
pop
bound
jnp
movsl
sub
or
push
add
shl
in
mov
rcr
mov
ret
rcl
shll
add
ljmp
ret
mov
jle
add
add
jle
add
push
outsb
nop
push
addl
clc
xlat
add
add
fcoms
mov
rcll
inc
xchg
fsin
cmpsl
mov
js
imul
push
pop
pop
test
pop
movb
scas
xchg
push
sbb
add
jecxz
cmp
adc
das
mov
or
imul
add
push
ljmp
loopne
sahf
cld
std
std
jp
cmp
add
cld
adc
mov
jg
mov
sbb
fcoml
inc
jp
push
inc
cmp
pop
add
sbb
out
add
add
lcall
data16
fcmovbe
inc
ficompl
mov
shl
sahf
aam
xor
repnz
xchg
sahf
xchg
stos
pop
or
scas
mov
aam
out
je
icebp
push
inc
or
add
out
push
lock
push
mov
add
loopne
cld
hlt
or
jbe
add
ss
add
shrl
xor
sub
pushl
lock
scas
lds
mul
add
add
dec
fisttps
sbb
mov
mov
stos
xchg
mov
idivb
aaa
lea
jp
ljmp
adc
jno
lods
rclb
mov
cld
add
xor
mov
je
ds
add
rol
jge
insl
xchg
loop
out
mov
loop
xor
jb
jb
outsl
lcall
iret
jp
push
scas
or
sahf
pushl
cmc
popf
mov
cs
cmp
cli
bound
data16
dec
jle
add
or
jne
js
loop
xchg
inc
outsb
aam
jmp
cmpsb
mov
in
jle
fidivl
xor
add
sbb
cmp
jg
mov
xchg
xor
jae
cmp
mov
sbbb
lock
push
lock
ret
sbb
pushf
adc
ret
aad
mov
inc
ss
push
adc
fnsave
into
divb
scas
inc
xorb
add
push
shl
aaa
inc
pushl
decl
icebp
aad
ljmp
decl
es
icebp
push
fsubrp
scas
cltd
decb
sbb
std
ss
std
cmpsl
std
cmpsb
std
vaddsubpd
je
sub
ja
lret
aas
test
jl
pop
out
mov
ret
cmp
push
mov
jmp
adc
push
test
mov
mov
popa
rolb
and
cli
loop
inc
aaa
sub
in
ljmp
and
out
adc
add
push
out
lgdtl
cmp
pop
inc
xor
es
mov
mov
mov
ljmp
rcl
cli
mov
ljmp
lret
out
cmpsb
push
loop
mov
sub
jecxz
stos
shlb
push
fiadds
lds
cmpsl
in
mov
mov
rol
jnp
fsts
cmc
mov
cli
inc
mov
gs
lock
mov
xchg
daa
ljmp
fcompl
jg,pt
inc
addr16
cmp
and
bound
adc
loope
sbb
shrl
adc
mov
or
adc
inc
cli
mov
roll
xchg
add
xchg
mov
or
inc
cmp
pslld
imul
data16
jp
fldenv
or
faddp
roll
pop
ss
popa
jo
cmc
cmpsb
outsb
xor
sahf
push
fisubs
in
iret
add
mov
scas
pusha
dec
jns
mov
xor
inc
aad
mov
out
adc
mov
bound
sarl
mov
mov
clc
dec
stos
mov
cmp
mov
stos
or
notb
dec
ret
mov
pop
js
push
lds
jp
std
sbb
je
add
add
dec
cs
and
cmp
out
adc
inc
mov
ljmp
jle
push
xchg
push
mov
sbb
loop
shlb
scas
daa
jnp
inc
test
push
mov
outsb
push
andb
clc
js
test
xchg
push
pop
ret
jns
jb
add
dec
push
xlat
inc
and
imul
sub
mov
push
inc
movsb
xchg
js
call
jge
lahf
push
xor
mov
outsl
es
push
lret
out
adc
xor
jbe
ret
negl
sbb
mov
adc
fcomi
inc
xchg
pop
mov
mov
loope
sbb
insb
push
adc
cli
nop
adc
cmp
faddl
xchg
repnz
cld
cmpsl
push
test
sbb
scas
notl
lods
lret
fadd
out
mov
push
or
hlt
aad
mov
iret
andl
sbb
adc
mov
add
sbb
cmp
push
jge
je
push
jns
mov
pop
aas
cmp
add
mov
js
jp
xchg
mov
out
xchg
and
push
push
add
mov
dec
fimull
inc
jp
add
pop
dec
dec
push
push
sahf
cli
add
push
scas
adc
sub
ds
push
add
negl
sub
jp
cmp
jl
imul
xor
sbb
aad
sub
jbe
push
aam
push
lock
inc
hlt
lret
push
sbb
outsb
mov
mov
cmpl
ss
dec
fmull
push
jmp
push
test
push
notl
and
inc
mov
bound
push
mov
sbb
pop
jg
push
xchg
adc
xor
pop
pop
stos
cmp
jecxz
mov
xchg
movsl
fidivrl
loop
ret
outsb
cli
dec
sub
sbb
mov
mov
and
jbe
jl
jge
ret
mov
push
loopne
pop
push
into
xor
cs
push
out
mov
mov
pop
sbb
je
dec
ljmp
es
or
pop
es
pop
push
orl
in
pxor
mov
xchg
cmp
and
jbe
push
pop
dec
push
or
adc
add
push
and
mov
mov
push
je
js
mov
dec
gs
pop
xchg
xor
pop
fs
jecxz
rolb
adc
sbb
inc
sarl
cwtl
ret
pop
loopne
test
test
mov
adc
jbe,pn
loope
dec
sbb
scas
mov
icebp
jno
movsb
lea
inc
and
push
mov
out
push
or
pop
in
test
ret
hlt
hlt
icebp
aad
cmpb
jbe
in
lock
addr16
push
sti
js
popf
imul
add
jl
addb
loope
iret
mov
mov
xor
cmp
add
loopne
xor
adc
out
jbe
add
repz
sbb
add
loope
pop
adc
add
jmp
loopne
mov
loop
push
and
or
cmpsl
out
into
fldcw
cmpsl
cmpsl
cwtl
push
mov
shl
loop
js
mov
es
add
mov
lods
push
fisttpl
mov
jno
push
inc
scas
push
sub
fnstsw
cli
dec
out
lcall
pop
scas
fiaddl
cmp
push
mov
das
jno
push
jo
jp
ss
mov
ja
push
push
ret
xor
jp
pop
repnz
fidivrl
or
pop
or
mov
sub
ss
inc
inc
adc
scas
inc
jbe,pn
mov
push
push
fdivrl
or
and
jno
lock
repnz
fidivs
je
loopne
divl
inc
sub
sbb
add
fstpl
leave
daa
xchg
jbe
sub
jo
test
add
js
data16
mov
ret
and
mov
dec
jmp
scas
ret
nop
inc
adc
ret
xlat
je
fcmove
outsb
ljmp
xor
aad
cmp
subb
inc
push
jnp
pop
adc
push
cs
add
sbb
ljmp
xor
mov
dec
aam
iret
inc
push
push
push
pop
faddl
and
loop
ficoms
cmp
aad
add
push
out
ret
cs
scas
or
jle
jb
lret
xchg
jecxz
inc
vdivss
inc
add
jnp
out
mov
push
push
jb
add
mov
add
inc
adc
pop
rcll
xlat
add
cs
movb
or
fcmovu
in
std
push
jbe
sahf
fimuls
sub
xchg
push
scas
jle
xchg
jbe
outsb
clc
mov
jnp
cld
and
sahf
jmp
push
loopne
std
push
inc
sti
repnz
sahf
adc
and
mov
in
mov
or
adc
adc
inc
and
ss
iret
cmp
in
out
inc
add
mov
push
neg
ret
ret
sbb
dec
out
imul
mov
mov
push
mov
push
inc
popa
rorb
inc
xchg
stc
push
out
mov
add
add
cli
data16
in
sub
ret
mov
xor
stc
adc
out
jmp
xchg
mov
mov
pop
inc
push
fwait
jnp
pop
outsb
addr16
lcall
inc
sub
and
and
addl
jmp
cld
mov
sarl
out
xor
inc
ss
fdivp
lock
add
or
jne
div
out
sub
sbb
pop
fnstsw
inc
sbb
sbb
jnp
out
or
movb
adc
ret
fwait
call
std
push
out
pop
roll
imul
jnp
loop
sbb
sub
negb
push
clc
jmp
out
not
out
popa
xor
inc
push
pop
paddusb
pop
jp
andl
out
push
push
pop
iret
xchg
ret
outsl
scas
add
add
mov
mov
add
push
cmp
xchg
dec
push
dec
adc
arpl
cmc
fcomi
sbb
dec
pop
mov
push
cmp
fbld
shll
add
mov
ja
dec
les
std
cmp
or
test
push
adc
pop
fcomi
push
idivb
sti
sub
pop
idivl
clc
aaa
fwait
add
sub
sti
aas
testb
inc
std
pusha
cmp
add
sbb
insl
pop
addl
mov
push
inc
cmovo
fistl
xchg
insb
mov
je
jo
pushf
jge
adc
gs
inc
inc
lods
add
imul
push
fdivrl
aas
aas
sbb
jp
lcall
mov
dec
cmpb
jns
add
inc
dec
dec
dec
out
mov
ret
int
jge
push
movsb
repnz
es
into
push
sub
mov
sahf
push
push
into
inc
push
ss
pop
push
cmpsb
pop
mov
insb
add
clc
adc
data16
push
shl
mov
mov
fdivs
jae
mov
mov
ja
inc
mov
mov
rcl
sub
sbb
mov
in
cmp
pop
push
jns
gs
xor
pop
inc
jb
jbe
xor
je
pop
xchg
xchg
aaa
test
jae
arpl
arpl
addr16
popa
sbb
dec
jno
jns
jne
push
mov
dec
mov
das
outsw
jb
insl
sub
or
sbb
xor
arpl
add
std
jo,pn
jo
imul
mov
push
xor
ss
outsb
mov
dec
push
pop
icebp
inc
jno
xlat
test
out
js
push
into
push
in
je
outsb
addr16
les
ljmp
idivl
mov
int3
shlb
ret
loop
rorl
mov
mov
mov
or
ret
mull
xlat
or
mov
push
dec
and
not
fbld
rcl
sbb
and
test
adc
popf
std
lret
cld
enter
addb
mov
shr
mov
rol
mov
into
stos
ret
mov
loope
mov
mov
arpl
mov
ret
test
mov
shr
mov
mov
ret
sub
mov
or
std
mov
ror
repnz
into
mov
jnp
divb
mov
enter
rcr
addr16
mov
fmul
mov
fldl
inc
mov
ret
mov
mov
lret
lock
pop
mov
in
push
xlat
aam
mov
mov
jne
les
add
shl
inc
fsubp
int3
rol
pop
or
enter
pop
mov
fiadds
stc
rcl
and
shrb
xchg
cltd
andl
pop
sbb
int
in
sti
xchg
mov
imul
sbb
in
pop
jno
int
mov
ret
enter
insl
push
outsl
xorb
repnz
out
mov
es
lock
add
bound
ficoml
cltd
pusha
mov
clc
adc
rcrb
ret
mov
ret
das
mov
xlat
stos
mov
mov
shl
in
dec
mov
mov
fmul
aad
sar
aam
iret
pusha
fidivs
or
das
repnz
sub
push
sahf
jb
sar
iret
in
mov
cmp
std
add
ljmp
mov
iret
mov
or
ret
xchg
and
cli
mov
shlb
movl
leave
iret
shrb
rclb
push
mov
and
fildl
shll
inc
mov
fdivrl
and
cmp
aad
insl
loopne
cmp
mov
and
data16
cmp
fs
xor
ja
and
and
aaa
cld
scas
mov
fs
push
push
mov
sarb
xor
das
jno
mov
xchg
fs
mov
or
jo
push
jns
lcall
and
outsb
orl
rolb
fidivrl
jne
adc
sarl
fisubrs
in
jae
ds
and
outsb
arpl
push
push
fdivr
and
shrb
sub
and
inc
ja
push
and
push
es
push
and
sbb
jo
daa
and
jl
sub
sbb
mov
cmp
mov
dec
gs
decb
inc
cmp
sub
dec
outsb
jae
popa
loopne
jae
bound
aaa
shlb
xor
sti
xor
cmp
inc
adc
inc
popa
arpl
or
fldt
addr16
add
mov
dec
fs
fwait
cmp
xchg
cmc
pop
dec
sbb
adc
jb,pt
outsb
or
inc
xchg
seto
xor
inc
jmp
inc
xor
xor
pushl
inc
cmp
xor
inc
inc
inc
inc
inc
inc
xor
cmp
inc
xor
add
inc
dec
cmpsl
ret
dec
add
xor
xor
inc
inc
inc
inc
inc
inc
jae
aas
xchg
int3
adc
inc
clc
dec
add
dec
imul
inc
mov
repz
cs
sti
gs
sub
adc
and
sub
out
pop
pop
add
inc
mov
or
lcall
adc
mov
push
add
adc
adc
push
pop
popa
push
insb
inc
loope
sbb
inc
insb
cmpsl
imul
push
lea
in
fimull
and
jmp
lock
inc
jo
and
pushl
lcall
push
into
mov
cmpb
fbstp
xor
add
pop
xor
mov
xchg
mov
adc
in
xlat
mov
in
and
ret
scas
push
dec
push
mov
sarl
push
mov
xchg
push
aas
out
fidivs
push
push
fiadds
ljmp
pop
pop
and
dec
mov
arpl
sbb
inc
popa
pop
lods
add
mov
sbbb
outsl
scas
push
cltd
jno
xchg
movsb
mov
mov
push
and
add
in
jo,pn
jecxz
out
adc
test
xor
lock
or
in
rcrb
jbe
or
xchg
shrb
pop
rolb
push
repnz
and
jl
movsb
in
fbstp
nop
pop
adc
rorb
outsl
xorb
fnstenv
loop
xchg
outsl
clc
outsl
push
pusha
and
out
or
flds
add
pop
sbb
in
mov
pop
adc
xchg
xchg
jbe
nop
cmp
push
iret
jae
mov
and
and
push
notb
jle
sbb
enter
and
pop
mov
jb
loop
xlat
dec
add
loopne
jne
sahf
das
mov
and
pop
bswap
or
stos
dec
inc
adc
stos
pop
sbb
adc
pushf
inc
xor
cmp
daa
outsl
mov
rorl
mov
rol
jno
sub
scas
dec
mov
sub
pop
mov
dec
sahf
jo
shlb
sub
adc
adc
mov
cs
inc
sti
push
mov
add
test
adc
or
inc
ret
sub
aas
dec
sub
mov
mov
adc
add
mov
jg
xchg
inc
push
enter
test
add
aas
or
add
inc
dec
es
call
lock
scas
push
or
shrb
dec
push
sub
jg
xlat
or
cltd
enter
aas
or
in
add
test
scas
or
das
sbb
mov
dec
dec
jae
pop
mov
adc
lahf
std
push
ret
jno
les
sahf
fbstp
ret
jo
cmp
inc
mov
cmp
das
sbb
xchg
les
nop
das
add
pop
push
ret
mov
js
lock
das
sub
add
cmp
adc
rol
mov
sub
add
lahf
xor
in
jns
add
mov
add
mov
cs
pusha
int3
outsl
out
push
add
outsb
and
lds
mov
int
int
inc
pop
and
cmp
outsl
adc
loope
das
pop
rolb
xor
add
roll
fwait
mov
adc
jb
pusha
sbbb
cmp
orl
add
shl
cs
and
inc
outsl
rcll
sar
mov
pusha
adc
pop
enter
aad
pop
push
aad
push
pushf
inc
lock
seto
enter
aam
aam
mov
push
jmp
adc
nop
shlb
jo,pn
pop
inc
lahf
mov
cmpsl
out
nop
adc
mov
xor
sbbl
xor
sbb
addb
adcl
xlat
push
mov
inc
scas
cmp
xor
fstl
int
pop
and
pop
add
jo
ljmp
xor
mov
adc
add
pop
or
lds
mov
inc
loopne
repz
loopne
pusha
idiv
subl
dec
xor
xor
sbb
mov
mov
shrb
loopne
fildll
ss
or
add
pop
mov
popf
push
and
add
das
pop
and
sub
adc
add
iret
nop
adc
out
inc
adc
sar
addb
sti
iret
cli
je
add
das
adc
pushl
cmove
add
adc
lock
outsl
push
in
add
outsl
js
mov
cmp
push
ds
roll
iret
pop
inc
push
fmuls
leave
push
mov
je,pn
incb
out
and
push
inc
push
outsb
push
mov
dec
fdivrs
out
shlb
cmpsb
push
cmpsl
in
add
mov
jo
rclb
dec
icebp
leave
outsl
in
insb
push
pop
bnd
xor
cmp
fnstenv
add
fwait
push
jecxz
mov
fists
cs
mov
insb
inc
mov
movsl
push
popf
fnstenv
fmul
mov
ja
in
shl
enter
negl
push
nop
pushw
cli
call
rolb
fdecstp
xor
neg
fcmovbe
push
push
imul
adc
shrl
loopne
push
rolb
das
mov
inc
push
pusha
nop
dec
inc
cmp
cmp
push
sbb
lods
repnz
fwait
negl
out
push
push
mov
jns
cmp
imulb
rcrb
stc
fcmovbe
mov
mov
xchg
push
outsb
inc
push
and
sarl
and
push
cmp
rorb
and
xadd
dec
inc
aaa
loope
jno
sbb
adc
stos
mov
push
nop
addb
add
mov
clc
in
sbb
inc
scas
addb
mov
inc
mov
pop
fbstp
scas
mov
addl
idivb
jp
out
cltd
add
inc
cmp
lahf
mov
das
sub
int
lcall
sbbl
aas
loopne
mov
sbb
push
scas
add
push
lods
xor
xor
loope
or
cmpsl
xorb
mov
add
dec
and
outsl
pop
mov
outsb
adc
add
inc
insb
pop
iret
mov
je
and
pop
das
shlb
insl
xchg
push
pop
das
loopne
pop
xor
aas
mov
jns
mov
mov
adc
sar
cmpsl
sbb
mov
mov
outsb
ja
mov
sarb
mov
dec
rorb
fs
pushf
and
jle
enter
mov
or
aam
add
stc
dec
sbb
push
mov
jbe
fisubrs
push
sbb
loopne
mov
dec
and
push
icebp
add
fiadds
adc
out
mov
push
xchg
nop
repnz
cwtl
push
pusha
fists
add
mov
push
das
lock
out
xchg
cs
out
mov
cs
cmpb
jle
inc
lock
cmpb
les
cmp
adc
lds
jp
mov
dec
je
notl
aas
inc
pop
inc
mov
jle
pop
add
rolb
outsb
cmpb
dec
push
subl
sub
mov
mov
jge
int
ds
push
pusha
add
xor
into
or
mov
aaa
shlb
push
js
pop
add
jns
outsl
and
adc
jns
and
add
add
pusha
imul
add
dec
xchg
stos
out
inc
jg
loopne
bnd
pshufw
rcrb
rorb
push
or
adc
cs
mov
push
and
mov
flds
scas
cs
pusha
fcompl
outsl
fldl
add
shl
mov
push
rcrb
jmp
add
icebp
or
xchg
dec
pop
and
pop
outsl
jmp
xor
ss
add
out
pusha
inc
add
sbb
unpcklps
push
jo
jle
das
loopne
lock
add
add
nop
aaa
add
loope
mov
loopne
fistps
les
int3
lods
rorb
sub
addr16
mov
jg
add
faddl
push
sar
in
das
push
cmp
jmp
outsl
sub
cmovo
sbb
add
test
outsb
loopne
push
push
cltd
xchg
push
jg
aas
outsl
cmpb
inc
add
jl
push
jo
out
lock
or
and
dec
mov
add
nop
cmp
pop
pop
add
sub
jge
xchg
add
pop
pop
daa
iret
xchg
mov
inc
push
mov
inc
inc
inc
cs
ja
leave
inc
adc
dec
repnz
leave
mov
push
mov
push
iret
sub
std
push
push
inc
add
setb
inc
inc
mov
dec
dec
rorb
xor
xchg
dec
add
ja
xor
pop
pusha
out
xchg
out
push
nop
push
xchg
out
xchg
push
rcrb
leave
xor
and
repnz
add
cmpsb
mov
inc
xchg
jg
aaa
push
add
fisubrs
mov
lahf
add
sbb
jno
mov
aas
dec
add
ljmp
aas
orps
repnz
push
inc
cmpsl
incl
cmp
loopne
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
cmpsl
call
xor
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
sar
mov
and
jnp
mov
adc
inc
loope
test
decl
hlt
addb
xor
inc
sub
jg
mov
mov
pop
lods
add
mov
lods
inc
das
pop
jbe
sbb
pop
stos
aas
xlat
es
scas
lahf
jo
mov
pushf
cmp
rolb
pop
cmp
fstps
test
add
decl
cmp
jo
das
lods
jg
mov
add
add
mov
add
out
and
mov
aas
loopne
add
enter
js
inc
mov
push
push
mov
stos
loope
and
pop
out
add
pusha
add
mov
test
inc
inc
test
movsb
cmp
mov
add
inc
repnz
mov
in
push
push
leave
iret
or
xchg
pushf
mov
adc
rol
shll
loopne
push
pusha
iret
inc
es
sahf
push
push
rolb
jns
cmp
shl
rcl
cmp
rcl
pusha
into
mov
stos
jne
sub
add
mov
dec
xchg
cs
add
xor
push
test
aas
adc
fists
leave
ror
push
je
rcr
outsl
jo
add
push
pop
mov
nop
call
loopne
mov
xchg
xchg
repnz
fwait
data16
mov
cwtl
add
or
lcall
or
adc
cs
repz
and
xor
iret
repz
and
adc
or
push
pop
adc
pop
je
mov
inc
and
sub
sahf
out
push
push
and
jns
out
xor
es
sahf
out
sahf
daa
cs
sahf
out
das
aaa
ds
leave
ret
xor
sbb
addb
push
push
pop
std
push
stc
icebp
push
jns
out
roll
iret
cld
clc
lock
xor
push
xor
inc
lds
push
inc
dec
sti
in
mov
fmuls
mov
and
jae
push
xor
ss
mov
sbb
push
bound
mov
inc
sub
sbb
inc
in
mov
push
and
mov
or
fwait
cltd
outsb
push
ss
andb
sbb
or
outsw
push
push
sbb
cmpsb
mov
add
push
ss
add
out
popa
dec
psubq
pushl
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
inc
imul
jnp
push
loope
pop
stos
jb
push
test
shlb
or
cmp
incl
ret
xor
bswap
aas
incl
dec
mov
jae
dec
mov
shrb
sbb
jmp
jecxz
shrl
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
decl
lret
cmp
pop
aaa
testl
dec
mov
ja
call
adc
ljmp
jmp
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
ds
incl
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
faddp
jmp
loope
shrl
bound
pop
mov
insl
popf
pop
or
mov
testb
cmp
add
dec
mov
jbe
dec
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
push
pop
cmpsb
xchg
push
test
push
pop
movsl
gs
push
add
aas
jne
daa
inc
ljmp
lcall
in
aas
repz
aas
or
mov
mov
sbb
mov
and
sbb
ljmp
mov
xor
sbbb
loopne
mov
dec
or
add
mov
sub
mov
xor
call
mov
cmpsl
movsl
mov
mov
dec
outsl
je
inc
clc
sbb
jo
jb
gs
in
add
and
mov
pop
pop
mov
add
xchg
aaa
dec
pop
or
push
mov
andl
add
dec
rclb
cmp
test
stc
scas
mov
adc
jbe
push
inc
jbe
lret
pop
loopnew
push
inc
mov
pop
sbb
pop
outsb
push
es
dec
xor
add
xor
leave
and
faddl
andl
mov
inc
scas
cmpsb
pop
push
daa
and
test
add
push
addr16
pop
and
fidivrs
sbb
push
lock
das
push
push
mov
push
je
stos
rcrb
pop
mov
push
ss
mov
std
dec
jo
fs
push
dec
adc
pop
pop
push
dec
adc
inc
inc
add
pop
jg
push
addr16
bound
sub
push
popa
call
jo
cmovg
imul
inc
rorb
nop
jb
jae
jb
inc
pusha
jbe
push
rorb
push
pop
pop
sbb
mov
push
addb
imul
insl
iret
cs
jge
sbb
dec
inc
insb
imul
jo
adc
xchg
movsb
or
out
push
inc
sub
sbb
xchg
dec
xlat
push
xchg
adc
push
push
xor
stos
testb
or
jns
out
popa
imul
or
rorl
push
or
imul
or
stos
fimuls
es
pop
lret
negb
mov
push
outsl
lahf
mov
and
xchg
lock
dec
inc
repnz
inc
test
test
stc
mov
daa
clc
push
call
rcrl
test
cmpb
mov
ss
shr
lahf
andb
mov
and
clc
mov
cs
xchg
lahf
dec
mov
sbb
pop
aam
or
enter
adc
pop
out
rolb
mov
out
add
iret
push
dec
jl
negb
cs
jne
data16
push
and
shlb
cli
insb
lock
lcall
pop
adcl
or
in
inc
mov
xchg
cmp
mov
jo
mov
pop
pop
call
pop
add
aaa
clc
dec
gs
jbe
dec
push
and
outsb
jae
mov
in
jbe
imul
inc
insb
addr16
pushf
je
popa
push
cmp
push
sbb
and
setg
fs
loopne
fwait
jl
dec
nop
jno
rcrb
push
sub
lock
ja
cs
xchg
xor
xor
xor
mov
cs
xor
xchg
mov
test
xchg
lret
cs
jl
hlt
stos
int3
add
ja
aaa
inc
out
rorb
ficoms
pushf
orb
mov
lahf
cld
imul
das
push
sbb
cmp
add
adc
add
push
fcoml
insl
sbb
cmp
fstl
mov
aad
iret
lds
dec
stos
pop
enter
pop
jle
cmp
stos
add
mov
fsubrp
dec
aam
dec
inc
data16
insb
fs
jbe
xor
daa
and
jae
fidivs
push
inc
popa
jb
daa
dec
inc
dec
inc
cld
out
or
sbb
fnsave
and
or
icebp
sub
aad
outsb
into
pop
outsb
outsw
inc
fdecstp
mov
cmp
jo
popa
jns
dec
clc
add
outsl
imul
daa
push
rcrb
popa
gs
pop
pop
mov
mov
adc
inc
push
outsl
add
insl
insb
jb
pop
inc
sub
mov
inc
fs
inc
add
mov
dec
and
xlat
xlat
pop
test
movsb
sbb
add
mov
lock
lds
dec
je
rclb
push
test
jae
js
add
outsl
dec
dec
les
mov
and
jnp
ss
push
aaa
mov
jbe
mov
jle
addr16
sub
inc
jb
jns
cmp
out
mov
outsl
sarb
lods
cs
push
loopne
inc
or
inc
mov
idivb
inc
jne
je
and
lcall
call
ss
lock
inc
jecxz
xor
jbe
xorb
ja
cs
and
fstpl
shlb
loopne
mov
ss
cs
sbb
movsb
push
mov
inc
add
incb
dec
sub
mov
lock
xor
push
ss
addr16
mov
xor
addb
scas
in
xchg
iret
mov
xchg
xor
rorl
cmc
sbbl
sahf
sub
jecxz
dec
mov
pop
and
fidivrl
sbb
sub
mov
call
outsl
push
and
andb
aam
pop
idiv
mov
popl
and
ret
sub
into
nop
jnp
push
test
nop
pop
decl
shll
sbb
cmp
mov
outsb
mov
cmp
jo
rcr
cmp
cmp
jb
sbbb
rcll
cmp
mov
push
push
push
popf
loop
inc
aaa
dec
outsb
out
mov
cwtl
jb
jo
iret
pop
loopne
mov
inc
mov
out
dec
dec
sbb
das
ficoms
aaa
divb
mov
inc
call
cli
js
gs
push
popa
addr16
or
cmp
sub
dec
inc
mov
scas
push
das
stos
or
out
insl
faddl
iret
scas
xchg
scas
lea
add
push
sub
into
scas
or
mov
xchg
sbb
rorb
lahf
inc
adc
das
outsl
jg
sbb
sahf
addr16
push
mov
pushl
jmp
xchg
add
subl
sbb
push
jp
push
pop
push
add
orl
jbe
fistl
sbb
aas
pusha
shrl
add
cs
or
push
jmp
push
mov
repnz
sbb
test
sbb
push
mov
fs
popa
jb
xchg
scas
fwait
mov
add
pop
mov
lock
divb
lods
push
sbb
inc
aam
stos
andl
pop
sbb
ja
outsb
nop
pop
push
sub
push
add
push
sbb
stos
push
or
aam
bound
add
lahf
iret
out
mov
xor
dec
adc
inc
add
push
xchg
repnz
xchg
push
mov
cmc
mov
xchg
clc
lahf
mulb
mov
inc
inc
mulb
es
add
in
mov
popf
push
inc
xor
xchg
sbb
loope
cmp
lahf
pushl
dec
jae
sbb
and
decl
mov
mov
cmp
mov
lock
mov
out
mov
push
das
arpl
call
js
je
push
je
sub
jns
push
call
dec
popa
jo
push
outsl
adc
pop
loopne
pop
out
add
adc
and
pop
das
jl
inc
or
jo
out
xlat
add
push
imul
iret
add
test
xchg
cmp
xchg
add
add
pop
push
or
outsb
push
mov
add
jle
jne
je
add
jae
lods
leave
cwtl
add
jbe
xor
inc
cmp
xor
push
push
lahf
sub
xor
mov
jle
cmp
add
into
mov
mov
mov
scas
add
movsb
add
dec
dec
dec
fildll
dec
dec
push
pop
pop
jo
shl
mov
xor
lods
sti
iret
jo
pminsw
scas
push
fs
addr16
inc
sbb
inc
pop
daa
testb
dec
mov
pop
notl
fs
mov
popa
jb
push
xchg
cmp
inc
jnp
lahf
das
dec
inc
ret
sbb
daa
mull
mov
ja
dec
movsb
test
iret
js
jge
pop
jno
cmc
push
xchg
xor
mov
cwtl
outsb
enter
jns
mov
pop
rcrb
jo
add
or
lock
cmp
cld
mov
add
dec
and
rorl
out
pop
jns
add
fs
or
dec
push
inc
cmp
or
inc
adc
gs
rclb
sub
outsl
adc
or
addr16
dec
jne
and
out
orb
incl
sub
sahf
jnp
int3
jle
bound
push
inc
push
into
pushf
jae
mov
popl
outsb
jns
jg
addr16
fcmove
fcompl
jne
xor
and
mov
push
adc
sbb
cmp
jle
and
jbe
into
outsl
pop
dec
inc
aas
pop
cmpsl
popf
xchg
sub
mov
ficoml
fistl
fmull
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
mov
inc
inc
push
inc
inc
popf
inc
or
cs
push
push
pusha
pop
pusha
das
addr16
xor
push
jb
je
fnstenv
jle
push
push
sbb
mov
mov
jbe
dec
inc
and
xchg
fstpt
xor
cmp
sub
jo
lds
push
and
dec
imul
ljmp
stos
outsb
push
and
popa
push
inc
data16
push
ja
jno
adc
in
out
add
outsl
xor
fsubs
xorb
nop
out
mov
imul
push
mov
mov
das
or
into
mov
mov
mov
outsl
jo
mov
sbb
imul
push
inc
lock
xor
inc
aaa
insl
es
mov
arpl
sbb
and
imul
pop
add
inc
jb
mov
test
std
mov
sbb
pop
xor
lahf
loope
orl
or
into
pop
pop
push
cmp
jne
jae
push
xor
or
fdivr
add
jo
cmp
and
push
xor
adc
mov
inc
sub
and
in
mov
pop
sub
inc
sbb
cmp
pusha
shll
mulb
cwtl
imul
outsb
lea
lods
jl
jle
push
inc
incl
jae
sub
or
mov
mov
ret
or
fldt
sub
add
aas
jg
xor
fimull
leave
ds
out
jg
rolb
push
mov
into
jae
jns
xor
mov
outsl
fs
push
xor
mov
fs
cmp
aas
sub
shll
bound
bswap
add
mov
lcall
jb
sub
fidivrs
inc
cmovs
jnp
xorb
sub
mov
fldcw
mov
xor
add
test
fmuls
add
xlat
jo
adc
pop
dec
sbb
sbb
pop
mov
dec
mov
dec
adc
adc
and
jnp
daa
pop
and
push
das
xchg
leave
scas
lcall
repz
push
push
pop
clc
cld
or
add
push
push
pop
add
into
inc
add
mov
cmp
add
in
push
or
iret
ficoms
push
and
add
pusha
push
ss
jo
add
inc
xchg
cmp
ja
add
sbb
aas
lods
addr16
sub
outsb
shrl
push
subb
inc
ja
sub
cwtl
dec
mov
loopne
mov
dec
jg
push
addl
addb
cmp
or
cmp
outsb
jl
adc
xor
push
inc
adc
pop
insb
jp
inc
add
mov
inc
mov
push
pop
dec
mov
xor
cs
notb
mov
jo
pop
les
test
or
clc
inc
test
test
call
xlat
in
push
pop
fs
pop
push
xor
push
dec
inc
xor
data16
dec
inc
add
out
push
das
andb
jg
dec
sbb
scas
sub
adc
scas
mov
pop
or
mov
pop
daa
movsb
pop
jb
sbb
mov
mov
add
add
add
repz
push
dec
xor
outsb
mov
sbb
nop
das
xchg
sub
call
sub
andb
mov
adc
mov
inc
subb
push
daa
sub
das
js
testl
sahf
nop
xchg
into
add
mov
lock
adc
add
xorl
add
inc
daa
js
and
cmpsl
add
outsb
xchg
push
jb
rolb
add
xchg
insl
leave
and
stc
pop
mov
loopne
jo
test
sub
cwtl
daa
pop
and
in
clc
lahf
rcr
fstpt
mov
leave
and
test
and
test
dec
test
sub
jo
sub
adc
or
add
pop
mov
shlb
mov
insl
leave
test
xchg
sbb
mov
jne
cltd
pop
xchg
jo
fdivs
clc
das
adc
bswap
mov
cwtl
xchg
sub
xchg
clc
daa
dec
push
test
ja
xchg
rcr
aaa
xor
sub
cmp
mov
outsb
pop
xchg
pop
mov
add
das
xchg
andb
xchg
enter
scas
xchg
lock
insb
pop
and
cwtl
xor
orl
stos
pop
in
mov
or
outsb
mov
lahf
xchg
cmpsb
xchg
pop
rorb
mov
mov
sub
xchg
pop
daa
stos
orb
mov
cwtl
xchg
mov
sbb
mov
cs
jbe
or
mov
xchg
nop
adc
pop
mov
orb
lahf
xchg
jb
shr
and
clc
daa
mov
add
or
push
cs
xor
push
out
push
mov
outsb
mov
cmpsl
jo
enter
and
cwtl
mov
jne
rcrb
sub
mov
daa
fmuls
mov
cmp
xchg
xor
sbb
cmp
inc
add
mov
mov
adc
subb
cltd
pusha
mov
add
adc
sub
and
das
sahf
push
mov
jmp
jb
nop
xchg
jo
jg
mov
sbb
outsb
enter
repnz
fists
mov
cmp
fldt
mov
in
mov
cmp
mov
mov
aaa
shlb
pop
enter
lahf
mov
mov
dec
popl
add
filds
pop
jl
xchg
mov
lods
movl
daa
sub
sub
mov
fistl
dec
and
nop
lock
mov
mov
mov
lods
mov
dec
fcoms
test
add
in
mov
fistl
xchg
js
nop
pop
add
js
nop
xor
mov
daa
cwtl
mov
add
scas
adc
sbb
outsl
mov
nop
xchg
cmp
or
fdivrs
sub
cmpsl
test
insb
push
shl
jmp
sub
call
es
sbb
and
daa
sarb
das
push
add
ja
daa
push
inc
testb
push
push
adc
in
sbb
shlb
test
loopne
je
sbb
push
add
pop
nop
and
imul
and
cltd
addb
xchg
pushf
sbb
clc
inc
or
pop
dec
adc
in
out
fildl
enter
dec
push
and
push
enter
mov
and
jg
fcoms
push
xchg
dec
and
push
scas
pusha
adc
dec
add
cmp
jmp
pusha
push
sbb
nop
dec
jb
loopne
xchg
sahf
out
jbe
shufps
dec
dec
dec
in
testl
rorl
pop
or
push
fcoml
cmpsl
jg
xchg
pop
pop
dec
fistl
pusha
scas
cmp
orb
xchg
push
add
fisttpll
das
mov
imul
xor
scas
nop
pop
adc
test
push
xor
jae
fisttps
out
fiaddl
punpckhbw
jo
lock
mov
nop
dec
sbb
mov
inc
ror
repz
cs
fsub
push
add
sub
stc
aas
add
out
nop
and
dec
mov
enter
lcall
xchg
sub
xchg
mov
sub
and
add
sub
push
dec
rcrb
adc
enter
cmp
add
fwait
jns
daa
push
pusha
imul
pop
out
or
mov
pop
push
pop
jbe
jb
pop
test
mov
sarb
scas
loopne
aas
mov
bound
cmpsl
pop
sub
xor
pop
dec
adc
add
fnsetpm(287
pop
pop
lcall
bound
pop
js
dec
xorl
jg
jo
adc
mov
rcr
cmpsl
out
or
fsubrl
xor
sbb
or
push
add
iret
repz
xor
add
add
repz
pop
push
js
cmp
repz
repz
mov
cmp
repz
int3
pminub
stc
cmp
repz
pop
out
sahf
cmpsl
adc
adc
adc
cs
cmp
dec
sbb
out
pop
sbb
je
jns
out
sbbb
bnd
lods
pop
ds
dec
pop
sahf
dec
sub
mov
mov
pop
dec
and
and
or
rclb
ss
mov
jb
pop
push
pop
pusha
pop
outsb
pop
enter
jl
mov
pop
sbb
jb
cmpsb
pop
mov
ret
pop
xchg
and
ficomps
pop
cli
pop
out
fmulp
or
adc
sahf
out
sahf
xor
adc
out
pop
pop
push
js
jns
out
xchg
xchg
sbb
sbb
sbb
out
int3
pop
fisubl
call
add
lock
adc
sub
fidivrl
cmpsl
push
push
pop
jo
fcomps
inc
ret
add
vmread
fildl
into
faddl
add
fcomp
inc
mov
inc
jmp
dec
pusha
xchg
fisttpl
pop
fisttps
iret
jbe
adc
and
cmp
daa
pop
and
outsb
psubsb
mov
pop
xchg
pop
and
dec
mov
fdivrs
xchg
pop
and
or
sub
or
mov
shlb
add
sahf
flds
or
pop
pop
or
iret
cmp
add
ja
daa
dec
das
pop
out
das
test
les
mov
outsl
dec
or
jb
mov
shlb
test
add
shlb
xor
add
jbe
pop
and
adc
jmp
testl
pop
in
pusha
dec
add
mov
mull
es
push
mov
jae
je
sbb
repz
mov
mov
out
dec
jo
jnp
xchg
push
aas
pushf
cmpsl
fildll
mov
lock
sbbl
dec
fwait
inc
push
cmp
jae
test
add
push
push
popa
das
pop
popa
arpl
mov
sbb
popa
jl
xchg
pop
ja
cwtl
mov
inc
dec
mov
mov
scas
nop
out
xor
dec
fs
xchg
sti
push
bound
adc
jo
push
mov
xor
dec
mov
jo
pop
mov
scas
push
daa
cmp
add
loope
aas
jno
add
clc
setae
fisubrs
scas
js
xchg
bound
nop
out
dec
push
push
call
arpl
adc
lahf
or
xor
arpl
push
mov
add
dec
jne
push
out
iret
repz
or
xchg
test
or
in
xor
rorb
fmul
inc
arpl
pop
test
aaa
mov
add
dec
dec
dec
dec
push
sub
push
insb
cmp
pop
dec
fs
mov
daa
push
test
test
dec
outsl
cwtl
inc
insb
push
cmp
dec
or
enter
mov
xchg
pop
loopne
test
fs
push
add
and
gs
adc
cmp
sub
cs
mov
pop
xor
gs
int
cmp
add
das
jbe
mov
mov
sets
mov
sub
sub
fsubs
psubsb
sub
jae
and
adc
or
pop
and
mov
inc
add
enter
cmp
data16
stos
test
lods
mov
rcrb
movaps
mov
dec
lods
pusha
shlb
js
sub
in
loopne
nop
mov
fildll
add
lods
sub
test
addr16
lods
out
or
pop
loop
add
jo
mov
dec
cwtl
inc
dec
mov
xor
shrb
jb
lock
test
dec
push
jecxz
and
cmpsb
jp
addr16
xchg
das
pop
outsl
add
mov
sub
outsl
loopne
lcall
decl
push
pop
and
sub
dec
fwait
sbb
push
push
cmp
lcall
inc
scas
pop
jo
js
cs
enter
inc
shl
mov
xor
lock
sbb
jb
adc
imul
iret
subb
dec
dec
mov
mov
jno
inc
ror
iret
xor
mov
scas
in
dec
in
cvtdq2ps
imul
in
jl
xchg
imul
imul
imul
imul
push
push
and
in
in
push
push
push
push
popf
loopne
pop
push
push
imul
out
fidivs
sbb
sahf
out
xchg
push
mov
sahf
out
mov
out
sahf
into
and
and
and
out
es
daa
add
shrl
adc
sbb
iret
repz
sub
sub
sub
inc
cs
das
pop
jmp
push
adc
mov
sub
das
imul
mov
mov
jb
imul
fldt
imul
insb
adc
or
cmp
repz
das
or
iret
repz
or
addr16
repz
jne
adcl
cmp
repz
adc
cmp
adc
into
push
enter
insb
push
mov
xchg
insb
sti
insb
push
insl
adc
dec
sbb
insl
lcall
inc
dec
add
push
sub
insl
outsl
fisttps
dec
scas
cwtl
outsl
mov
pop
enter
nop
rorb
push
enter
loopne
leave
adc
xchg
outsb
or
jb
push
pop
adc
or
jb
nop
test
iret
leave
adc
clc
out
pop
and
pop
and
out
repz
into
jno
filds
outsl
adc
add
repz
sbb
daa
push
xor
cmp
repz
or
push
repz
repz
imul
or
outsb
mov
cmp
icebp
mov
loopne
mov
int3
iret
xlat
out
loop
or
mov
dec
add
add
jo
jo
add
add
decl
fisubrl
and
or
into
jg
xorb
lds
dec
mov
pop
and
add
ror
mov
fcomp
loopne
in
in
jg
clc
pop
or
jo
cmpsl
nop
mov
sahf
xchg
fwait
adc
movntps
add
jbe
jns
dec
das
push
punpckldq
or
push
rcr
orb
cwtl
aaa
mov
pop
jg
fistl
call
in
fcomps
mov
xchg
clc
dec
adc
or
xor
jb
pop
pop
inc
loope
push
pop
jb
pop
scas
fsubs
lock
nop
enter
cwtl
jb
mov
dec
dec
rorb
scas
fcoms
jbe
pop
xchg
clc
adc
pop
stos
jno
jae
xor
fchs
dec
aas
cmp
adc
dec
mov
scas
cmp
jae
xchg
jae
push
mov
ror
out
jg
aas
mov
dec
mov
movaps
and
fdivrs
je
mov
mov
and
xor
call
push
in
xlat
cwtl
cmp
loopne,pn
xchg
push
jb
aad
jmp
daa
push
or
pop
pop
bsf
pop
nop
out
pop
or
mov
das
dec
and
orb
and
jns
xchg
pop
outsl
xor
push
in
pop
rorb
add
push
fbld
test
sti
test
or
ret
jo
dec
mov
pushf
dec
leave
xchg
mov
xchg
push
jnp
cmp
adc
inc
fimuls
adc
js
dec
xor
jne
test
adc
stos
fbld
iret
mov
xchg
mov
and
jne
dec
push
mov
mov
pusha
pop
dec
adc
imul
aas
enter
fcompl
aaa
mov
inc
jne
pusha
dec
scas
nop
dec
lock
push
enter
inc
test
push
rolb
inc
scas
fnsave
jmp
cwtl
pop
and
and
enter
jbe
inc
xchg
sub
and
push
enter
dec
orb
js
xchg
pop
xorl
mov
mov
add
sub
repz
lock
es
or
sbb
iret
push
enter
dec
push
scas
pop
sub
cmp
orb
test
mov
shlb
jae
xor
loopne
ret
pop
js
imul
mov
scas
xor
push
into
xor
or
sbb
jg
push
xor
sbbb
das
xchg
fisttpl
pop
mov
mov
fwait
outsl
pop
or
dec
dec
sbb
mov
and
js
push
leave
lret
jo
mov
loopne
add
and
mov
mov
add
les
lds
add
add
jns
shlb
xchg
lds
pinsrw
and
mov
mov
rorl
pop
sbb
das
lret
lret
fistpll
jns
xor
jns
lret
lret
lret
dec
jns
jns
jns
jns
lret
lret
lret
xchg
jns
jns
jns
lret
lret
lret
mov
jns
jns
enter
jns
jp
jp
adc
cmp
repz
adc
adc
iret
push
pop
pop
push
addr16
or
jp
in
pop
add
pop
mov
stos
mov
outsl
sub
ficoml
push
mov
das
nop
imul
outsl
inc
inc
dec
ja
inc
cmovnp
fistl
jnp
jo
mov
jnp
pop
nop
dec
push
test
loopne
mov
aaa
call
fsubrs
jecxz
out
das
stc
popl
and
push
or
jl
sbb
push
enter
andb
enter
jl
enter
pop
jo
clc
add
daa
push
nop
cwtl
push
sbb
leave
jl
out
cmc
push
psrlw
sahf
add
test
nop
out
leave
fisttps
push
add
xchg
and
pushf
pushf
pop
and
jae
popf
pushf
pushf
jle
lcall
js
jge
lret
inc
scas
lods
dec
push
lock
mov
jle
and
adc
push
lock
jmp
orb
nop
das
cwtl
jle
mov
lret
fistpll
pop
mov
dec
jo
shrb
inc
in
in
enter
test
jg
jg
xchg
pushf
pop
and
dec
dec
cmpsb
nop
int3
push
nop
pop
xchg
stos
rorl
adc
mov
sub
cs
add
sbb
push
mov
push
add
sahf
out
test
push
dec
dec
mov
adc
les
pop
mov
dec
iret
rorb
shrb
iret
fcompl
lock
repnz
dec
sbb
or
inc
sbb
or
in
mov
mov
insb
or
test
xorb
test
pop
test
jb
pop
cmpb
shlb
pop
jb
clc
clc
mov
dec
mov
mov
and
aas
push
test
nop
dec
pop
or
pop
pop
imul
push
das
cmp
enter
sub
add
mov
scas
and
in
lahf
mov
shrl
js
in
fcompl
popa
rolb
je
push
call
loopne
lods
test
mov
inc
dec
sub
je
ror
mov
rolb
stc
dec
les
pusha
mov
cmp
jae
aas
outsl
dec
adc
cmp
enter
roll
adc
out
pop
pop
jo
mov
stc
das
loopne
xor
add
cwtl
in
outsl
dec
repnz
dec
add
test
dec
sub
xchg
sub
cmp
pusha
push
in
sub
mov
aad
sub
decl
lods
cmp
pop
xchg
setl
pop
mov
add
lahf
dec
test
sub
cmp
cmp
outsb
push
sub
fdivr
loopne
dec
scas
nop
nop
clc
mov
or
loopne
and
addb
scas
nop
imul
cmp
scas
xlat
jmp
pop
jo
push
push
xchg
cmp
das
mov
jl
je
dec
scas
nop
imul
or
pop
pop
sbb
dec
in
sub
inc
loopne
adc
dec
nop
dec
nop
imul
scas
rcrb
xor
call
xchg
adc
pop
nop
dec
scas
nop
cmp
xor
dec
scas
mov
dec
jl
pop
pop
mov
push
test
cwtl
fsubs
add
sub
pop
ds
leave
adc
mov
ror
outsl
in
mov
clc
mov
test
inc
enter
fldcw
mov
decl
fisubrl
jb
je
xor
test
push
xorb
jb
test
pop
jb
pop
rclb
test
enter
test
test
adc
mov
fistl
leave
adc
aam
add
leave
fucom
ljmp
or
adc
fmull
pop
sub
lds
xchg
pop
inc
scas
in
in
mov
adc
daa
jp
fsubr
mov
popf
xchg
fsubl
jb
inc
je
adc
inc
inc
fstpl
daa
sbb
movsl
add
mov
mov
add
add
pop
movswl
adc
fidivrl
fmul
adc
loopne
daa
pop
and
push
test
enter
cmpsl
daa
sbb
mov
dec
ss
repz
sub
out
lock
dec
lcall
xchg
cmp
fidivrl
jbe
add
test
sbb
pop
jnp
shlb
lods
dec
lcall
lahf
adc
sbb
pop
jnp
ja
es
ja
es
xchg
jbe
ja
add
push
sbb
sub
insl
add
imul
sub
divl
lret
or
push
adc
sub
jne
inc
les
xchg
mov
add
rclb
insb
and
push
addb
insl
loope
jne
add
pop
add
test
mov
pushf
jb
ss
fnstsw
sbb
add
test
xchg
addr16
nop
add
jmp
pusha
mov
loopne
stc
out
orb
xor
insb
push
outsb
jge
insl
dec
jle
mov
add
clc
mov
xchg
push
inc
mov
or
xor
add
add
add
mov
sbb
jbe
in
mov
data16
mov
jne
jo
pop
jbe
inc
js
mov
fiaddl
ss
or
fchs
loopne
jne
inc
movsb
gs
add
mov
bound
std
test
dec
out
out
popa
cwtl
aas
inc
ret
mov
mov
mov
sbb
dec
aaa
popf
xor
cmp
xchg
stos
xor
add
lock
pop
rcrl
adcl
rol
dec
adc
mov
lea
inc
push
jp
push
orb
mov
orb
aad
imul
mov
dec
bound
or
aad
imul
adc
insl
pop
mov
test
xchg
gs
xor
test
jmp
lret
push
test
sbb
and
sub
fiaddl
add
sbb
or
rcrl
jbe
adc
sbb
add
or
add
mov
sbb
or
jmp
jae
movl
inc
int3
jnp
adc
jae
add
sbb
sub
cmp
or
adc
lock
mov
inc
mov
add
imul
or
insl
jo
jns
inc
add
sub
dec
add
add
outsl
push
mov
cmpb
mov
mov
roll
xchg
out
outsb
or
add
sbb
fs
add
aaa
aaa
in
outsl
jo
xor
ret
sbb
imull
jo
aam
jmp
xchg
jbe
fs
adc
sahf
and
js
add
mov
lahf
insl
sbb
or
inc
cmp
or
or
cmp
inc
lea
lret
test
adc
xlat
lcall
test
ds
lds
inc
and
mov
lret
sbb
sub
cmpsl
sbb
adc
dec
andb
mov
dec
in
cmp
push
and
add
fs
inc
inc
shl
ja
mov
cmpsl
lods
ret
pop
xchg
pop
xchg
add
jb
data16
lods
xor
xor
ds
adc
popf
jns
jl
enter
xor
inc
sbb
or
xor
icebp
inc
das
push
arpl
pop
push
adc
sbb
out
mov
cmpsb
xchg
in
sbb
mov
pop
add
and
ret
push
mov
popf
xchg
add
xchg
add
pop
jo
fisubl
sbb
je
xchg
les
cmp
mov
sbb
scas
or
outsb
movsb
adc
adc
push
sub
push
xor
pop
cltd
pop
add
cmpsl
arpl
mov
dec
out
ret
pusha
loopne
or
add
mov
mov
and
push
push
rorl
fdivr
out
xchg
dec
sti
sbb
mov
adc
mov
lds
lods
mov
cmp
je
cmp
mov
lds
sub
adc
jne
and
add
adc
rolb
gs
push
or
add
or
jg,pt
mov
pushf
cld
inc
sbb
jne
jns
mov
dec
push
add
insl
int
outsb
jae
cmp
nop
dec
mov
test
push
push
or
inc
xchg
mov
xor
pop
imul
ss
or
insb
mov
sbb
add
stos
lret
adc
pop
push
aas
pop
push
cmp
sbbb
addr16
push
loope
dec
popf
lock
incl
pop
fwait
test
out
xor
push
out
out
test
and
inc
jns
cmpsl
fbld
fs
push
push
push
xor
mov
addb
mov
adc
call
ret
pop
das
and
sbb
or
add
imul
add
int
push
lods
xor
mov
add
push
add
cs
jo
and
jns
loopne
dec
push
sub
pop
jno
xor
inc
and
push
ljmp
pusha
adcb
hlt
mov
insb
xchg
incl
jb
mov
push
test
pop
inc
sub
ja
pop
pop
sub
pop
in
popa
pop
ds
aaa
ja
dec
adc
pop
divl
or
and
push
outsl
inc
push
xorb
push
xchg
test
bound
inc
jnp
out
add
xchg
add
fcoml
es
inc
ret
in
movl
fsubp
or
sbb
fbld
or
sub
daa
or
dec
pop
pop
inc
xor
sbb
jl
xchg
daa
pop
pop
clc
or
mov
push
jl
add
sbb
mov
cmpsl
add
jb
scas
jns
mov
push
push
movsb
mov
cmp
frstor
jnp
inc
sbb
xorps
movsl
adcl
mov
loope
inc
push
sub
cs
and
adc
loopne
ja
pop
and
dec
loopne
add
inc
lods
push
jne
fadds
and
fsubs
arpl
and
ds
shll
ss
jnp
cmp
jno
out
lret
sbb
adc
push
adc
add
adc
das
inc
or
cmp
icebp
je
imul
mov
dec
daa
inc
jbe
scas
fistps
dec
jne
sbb
inc
fstl
and
ret
sbb
cmp
arpl
movsb
push
mov
daa
jo
cmp
bound
jb
mov
xor
dec
pop
sub
test
ficompl
cmpl
ja
xor
sbb
inc
js
dec
xor
cmp
jns
mov
ss
rcr
lea
mov
cltd
shlb
dec
dec
dec
dec
mov
sbb
lret
imul
cmp
rolb
cld
jl
in
mov
jg
push
dec
dec
dec
cs
push
push
sbb
adc
or
jb
or
mov
xchg
cwtl
dec
mov
and
cmp
and
push
inc
push
push
pop
sub
addb
cwtl
cmp
cmp
pop
pop
clc
or
outsl
push
dec
inc
dec
push
js
fisttpll
xchg
inc
and
fidivs
add
sarb
jmp
add
and
outsl
sbb
cmp
add
push
mull
add
les
pop
xchg
fsubrs
testl
mov
fsubs
jge
call
add
jae
lods
mov
insl
mov
loope
inc
dec
push
lret
scas
or
in
and
pop
int3
mov
xchg
jo
insb
mov
inc
pop
pop
popa
lret
rorb
es
add
ret
jbe
inc
jne
or
sbbb
add
not
jno
sub
outsl
lock
xorl
inc
jne
data16
cltd
fisubrl
fsts
lcall
popa
stc
rcr
aas
mov
add
insl
jo
mov
addr16
fwait
adc
jo
daa
pop
sub
fmul
and
outsl
fs
xchg
xchg
and
pop
and
push
test
jae
pop
into
cld
cmp
ret
or
enter
jbe
pop
mov
push
xor
mov
sub
adc
mov
pop
add
add
movsb
cmp
adc
lcall
stc
idivl
push
sub
movb
and
inc
aas
sub
cmp
aaa
add
mov
xor
inc
dec
sbb
pop
push
je
push
sub
ja
add
push
popa
pop
sbb
push
or
mov
lret
sbb
xor
addl
xor
inc
sbb
addl
js
mov
adc
push
jge
push
shl
sbb
pop
jns
adc
pusha
clc
add
cmp
inc
out
movsb
dec
xor
adc
mov
jae
bound
fsubs
or
jb
or
xor
popf
scas
lret
fstpt
ret
sbb
std
dec
or
bound
aad
xchg
xchg
movsl
in
rcrb
ficoms
idiv
mov
loope
sbb
daa
push
sub
rclb
leave
dec
andl
mov
movsl
mov
pop
xchg
push
and
adc
addb
xor
add
push
mov
out
jnp
inc
in
pop
jl
jae
inc
add
add
lock
daa
movsb
and
gs
je
cs
add
sbb
dec
push
pop
or
mov
or
jle
outsl
scas
adc
cmp
pushf
mov
jb,pt
add
outsb
imul
mov
jns
hlt
inc
sbb
out
daa
mov
in
dec
dec
in
addb
cmp
out
add
popl
xchg
cli
popf
pop
pop
sub
push
and
dec
in
add
pop
xor
ljmp
je
sti
sub
xorb
scas
insl
into
mov
inc
add
push
imul
pushl
xchg
les
jae
adc
je
call
jmp
int
cmp
rcrl
pop
mov
pop
and
sub
push
pusha
inc
pop
jmp
out
pop
sub
loopne
aas
dec
dec
or
cmpsl
add
inc
insl
nop
dec
cmp
add
and
sbb
dec
popf
mov
add
sub
jno
call
jbe
sub
pushf
or
and
xchg
imul
sbb
lea
mov
pop
push
push
jns
loopne
sbb
cli
pop
aaa
jno
shr
lcall
mov
je
mov
xchg
xchg
stos
movl
dec
and
push
dec
dec
add
arpl
add
inc
mov
in
and
repz
loop
inc
cmpsl
mov
imulb
jbe
mov
mov
mov
or
push
gs
push
ljmp
dec
cmp
and
daa
or
outsb
sbb
pop
jb
pop
fsubr
cwtl
add
jne
and
mov
push
jecxz
addr16
dec
popf
je
insl
or
mov
movsl
cmp
outsl
sbb
mov
adc
and
add
out
ss
cmp
xchg
or
rolb
or
push
insl
insl
or
daa
add
mov
sbb
cmpsl
cmp
mov
jg
or
xchg
mov
adc
lcall
mov
movsb
xor
scas
into
inc
js
mov
js
inc
add
inc
add
nop
inc
add
mov
out
dec
push
int3
inc
ss
int
xor
mov
inc
sub
push
mov
mov
fisubrl
dec
dec
lret
loopne
insb
cmp
mov
push
nop
in
lock
and
fisubrs
adc
repz
in
xor
mov
sub
out
mov
cmc
xor
mov
cmp
dec
pop
or
push
inc
dec
insb
mulb
ret
jecxz
jge
fstl
adc
aaa
and
push
xorl
or
je
leave
sbb
cmp
shrl
jmp
sahf
sbbb
dec
xor
add
jg
jmp
aam
dec
je
jecxz
scas
mov
cmpsl
int
ud0
pop
fcom
ficompl
rol
jecxz
mov
lret
into
in
stc
fbstp
lret
mov
mov
stos
pcmpgtd
pushl
mov
into
jmp
mov
mov
pop
xlat
push
mov
mov
mov
add
loopne
int
mov
into
sbb
mov
xchg
inc
pop
push
cmpsl
es
fs
ljmp
enter
lret
mov
leave
mov
ret
jmp
pop
js
test
xlat
lahf
cs
inc
push
push
xor
inc
add
push
inc
inc
push
aaa
mov
pop
jae
leave
iret
pusha
das
mov
push
mov
outsb
add
into
les
out
sub
cs
push
or
ja
sub
jl
incl
mov
xlat
mov
mov
mov
aam
movsl
xor
sbbb
cmp
pushf
jl
dec
or
sahf
cmpsl
stc
in
test
inc
je
in
dec
mov
daa
in
jmp
aad
inc
repz
cmpb
pop
dec
notb
jb
sub
daa
cmc
sub
push
jmp
jmp
jmp
sbb
aas
dec
lea
add
es
dec
ja
daa
push
nop
andb
push
or
cli
cld
add
loopne
popl
adc
inc
dec
jmp
xchg
sbb
pop
or
mov
pop
adc
push
push
andl
iret
jg
lds
in
daa
testl
push
mov
inc
cmpsl
icebp
add
cwtl
push
out
and
and
add
inc
inc
dec
inc
add
or
stc
decl
and
push
xor
add
dec
inc
adc
les
add
mov
jo
pusha
adc
mov
inc
add
add
orb
sbb
xlat
add
xchg
sbb
dec
xchg
call
mov
stos
add
add
or
inc
pop
add
mov
jmp
jmp
cmpsl
stos
jne
jne
pop
in
dec
pop
rolb
pop
add
scas
push
dec
sbb
iret
or
add
in
add
daa
adc
jmp
mov
aas
mov
add
pusha
pop
mov
inc
jb
mov
or
pusha
adc
add
pop
adc
push
andb
daa
add
push
sbb
ja
mov
jo
pusha
dec
out
add
jg
pop
add
daa
testl
push
add
add
sub
push
cmpsb
pop
inc
dec
pop
mov
jg
and
pop
mov
jmp
iret
add
daa
fiadds
add
sahf
add
add
mov
and
add
ja
sub
mov
mov
jmp
test
mov
xor
out
and
add
dec
lods
test
xchg
jo
je
cwtl
jno
and
or
jmp
roll
daa
push
add
pop
push
push
adc
adc
mov
xlat
add
ja
enter
dec
or
faddl
and
add
add
sahf
popa
idivl
btc
out
imul
jnp
iret
mov
andnps
or
mov
jns
inc
push
adc
pop
test
xchg
imul
fldt
mov
mov
jns
out
mov
xlat
scas
cmpsb
xor
pcmpgtd
push
jb
add
add
dec
jle
or
jecxz
sbb
neg
clc
xor
and
add
push
repnz
mov
rsm
add
pop
fdivs
add
pusha
in
ret
cmp
mov
pop
mov
pop
lock
clts
jg
test
sti
sbb
adcl
push
xchg
test
jnp
iret
mov
or
mov
lcall
out
idivl
mov
mov
loopne
xor
or
pop
mov
mov
add
add
fdivrp
xchg
mov
push
and
out
mov
pop
repz
push
ljmp
call
data16
negb
push
flds
roll
add
adc
add
mov
int3
sbb
fmull
mov
fidivrl
frstor
jecxz
test
loope
orb
orl
sbb
mov
scas
mov
add
push
or
mov
push
add
adc
orb
scas
je
and
testb
aad
adc
add
or
or
or
cmp
cmp
add
jne
jae
adc
repz
mov
iret
adc
ss
cs
cli
testb
mov
mov
daa
in
add
mov
inc
add
xor
add
out
nop
add
test
pop
in
mov
push
push
mov
mov
ja
sub
jo
out
sbb
add
add
pop
push
ret
dec
loope
bound
jo
cmovno
add
mov
cmpsl
addr16
xor
outsb
jp
test
jg
stc
int3
loope
test
jmp
mov
shrb
ja
push
mov
fdivs
adc
cld
rcrl
mov
lods
sub
out
repz
shl
repnz
xor
mov
lcall
and
xchg
mov
addr16
outsb
jnp
mov
test
jle
hlt
push
sbb
dec
mov
mov
mov
or
fmull
pusha
pop
inc
setnp
dec
xlat
rcr
out
not
out
mov
mov
mov
fists
jle
push
fsubrs
stc
mov
loopne
rorb
orl
test
and
xchg
out
adc
cltd
mov
mov
aad
mov
into
repz
sti
or
pop
xor
movsl
and
leave
aam
mov
ret
pop
pusha
or
jmp
ds
inc
push
jmp
clc
mulb
std
jbe
stos
xor
shlb
cmp
mov
cmpsb
add
shlb
or
into
inc
outsb
jp
ret
shr
mov
push
data16
sub
ret
or
inc
pop
xor
inc
dec
push
mov
xor
cs
push
inc
ja
push
xor
int
divl
notb
xor
and
sbb
arpl
xor
lea
call
cmp
movaps
cmp
push
les
dec
inc
pop
dec
pop
lret
insl
lock
les
aam
sbb
and
lods
or
hlt
arpl
xor
daa
mov
call
and
shll
mov
mov
inc
decl
add
test
mov
addr16
cmpsb
mov
mov
cli
or
mov
dec
mov
leave
rcrb
imul
hlt
mov
inc
cmp
into
mov
iret
mov
shrb
pop
into
shrb
jae
or
repnz
mull
pop
push
mov
incb
fsubs
xlat
mov
ss
rcr
and
addr16
pushw
push
xor
daa
sbb
push
mov
daa
aam
rcl
rclb
or
add
cmp
mov
push
add
daa
push
and
pop
lcall
push
pop
dec
inc
dec
dec
add
dec
rcrl
sti
add
shll
sub
mov
adc
mov
hlt
sub
js
fmulp
int3
in
aas
or
cmp
ss
dec
das
notb
mov
repz
lods
das
fcmovbe
stos
mov
and
cmpl
sub
negb
dec
push
sarb
ja
jns
adc
pop
ds
bswap
push
pop
dec
push
daa
add
jns
cmpsl
push
add
add
sahf
mov
push
mov
pop
cs
push
xor
adc
mov
xchg
and
pop
aad
push
mov
dec
ja
add
sahf
ja
push
add
sahf
add
lods
jns
out
or
jns
out
or
sahf
or
mov
out
adc
jns
out
adc
sahf
out
sahf
adc
insb
jns
out
sbb
fs
jns
out
sbb
sahf
out
sahf
sbb
dec
jns
out
and
inc
and
jns
out
and
xor
out
sahf
and
and
out
sub
sbb
out
sahf
out
sub
sub
sahf
out
sahf
sub
add
repz
cld
xchg
xor
xor
cmp
repz
xor
xor
iret
repz
xor
loopne
aas
daa
fsubl
fs
imul
jno
mov
dec
and
ja
jns
adc
pop
or
add
or
push
add
add
adc
mov
in
imul
gs
outsl
push
fstps
and
jmp
pop
sbb
sbb
sub
and
sub
xor
sub
sub
and
decl
push
bound
jp
outsl
sbb
sbb
sbb
push
pop
and
and
and
inc
lcall
sub
add
mov
and
orb
add
sbb
dec
scas
mov
push
sbb
sbb
and
cmp
add
or
or
or
mov
pop
sbb
jns
sbb
or
sub
mov
push
push
sub
sub
in
cmp
daa
and
fiaddl
jo
or
jge
jl
add
adc
sbb
andb
cwtl
push
add
adc
sbb
mov
push
and
and
andb
ret
adc
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
mov
fidivrs
sbb
adc
add
pop
leave
pop
sbb
inc
sbb
and
mov
stc
mov
pop
add
and
insb
fisubl
pop
sub
sbb
mov
aaa
add
add
pop
imul
and
push
and
sub
xor
pop
jb
add
sbb
in
cs
sub
xor
subb
add
lret
sub
sbbl
add
rcrl
xor
add
mov
orb
xorb
sub
cmp
and
pop
sub
xor
cmp
add
push
daa
add
add
ds
or
aaa
cmpb
adc
imul
add
adc
cmp
add
sub
cmpb
mov
and
add
sbb
inc
pop
jb
sub
add
and
ss
sbb
adc
pop
enter
and
nop
pop
pop
sbb
mov
mov
pop
aaa
inc
aaa
add
mov
dec
dec
add
add
mov
dec
orb
add
add
xchg
sbb
orb
imul
orb
dec
subb
pop
repnz
enter
aaa
push
enter
sbbb
add
sub
push
or
add
sub
push
xor
xor
push
and
sbb
scas
or
push
sbb
mov
push
push
pop
pop
daa
add
push
mov
pop
add
sub
in
insl
pop
dec
sbb
repz
xor
xor
pop
adc
in
mov
sub
pusha
sub
popa
push
add
test
insl
pop
xor
bound
fs
xor
add
ss
sbb
sbb
pop
inc
xor
push
push
sbb
add
orb
add
outsb
ss
sub
cmp
adcb
xorb
je
pusha
xchg
mov
add
jbe
sbb
js
jns
add
push
mov
add
das
add
mov
push
enter
sbbb
dec
push
ss
xor
lcall
add
sbbb
xlat
cld
testb
orb
xchg
scas
push
sbb
pusha
pop
nop
and
pop
add
outsb
in
sbb
aaa
in
cmp
xor
sub
mov
xlat
add
and
in
mov
sbb
lea
sbb
sbb
inc
push
sbb
addb
nop
adcb
and
xchg
and
scas
nop
scas
dec
xor
sub
testb
inc
sub
sbbb
add
daa
lods
dec
leave
inc
cs
mov
add
and
xchg
sbbb
pop
cltd
sbb
sub
sbb
lcall
loopne
fwait
orb
and
in
add
popf
cmp
add
lahf
sbb
mov
int
test
add
inc
mov
sbb
sbb
movsl
push
cmpsb
adcb
fisttps
repnz
sub
orb
in
out
add
xor
out
jmp
and
push
pop
lds
sbb
aaa
add
and
out
scas
subb
or
add
inc
jle
sbb
sbb
and
add
or
or
in
pusha
insl
dec
mov
sub
and
rcr
mov
das
add
or
cs
outsb
stos
pushf
sub
add
or
push
leave
add
loop
add
add
sbb
in
pop
sbb
cmpb
mov
sbb
leave
in
fmuls
mov
sub
xor
mov
divl
add
add
sbb
jg
pop
ret
adcb
add
movb
inc
faddp
add
es
lret
xchg
outsb
sub
or
add
and
into
sbb
in
popf
ss
roll
out
push
rolb
aam
add
adc
aad
xor
daa
pop
jnp
iret
es
xorb
int
dec
push
sub
orb
fdivs
jb
mov
add
push
xor
adc
sbb
and
sbb
in
jle
adc
sbb
pop
sub
xor
mov
sbb
orb
add
sbb
sti
outsl
dec
and
and
addb
add
or
pop
repz
sbb
fbld
sbb
int
add
loopne
loope
sbb
loop
pop
enter
and
imulb
cmp
sbbb
add
and
pop
pop
out
push
in
ss
orb
sub
fdivs
ljmp
sbb
popw
repnz
in
sub
pop
xor
jns
sti
add
lock
sub
sub
xor
ds
add
pop
jnp
add
xor
sub
sti
push
leave
leave
sbb
sub
sub
xor
in
lar
and
adcb
sbb
clc
jle
popf
fdivs
add
sbbb
std
mov
sbb
ss
cs
nop
or
test
sub
aaa
sub
mov
xor
xor
jmp
sarl
and
sbb
xlat
fdiv
push
add
orl
inc
and
andl
ss
add
add
and
imul
push
ss
add
adc
and
ss
orl
in
xlat
jp
push
adc
or
xor
or
or
push
sub
push
push
add
mov
enter
adcl
in
lcall
pop
das
add
addl
sbb
sbbl
roll
aaa
push
pop
aaa
or
mov
popf
pop
add
and
add
sbb
add
mov
add
and
sbb
push
sbb
sbb
xchg
or
xchg
and
cmpsb
jbe
sbb
add
ss
dec
add
xchg
or
sub
xor
daa
mov
sub
adcl
rolb
add
pop
insb
add
xchg
add
and
outsl
sub
subl
lcall
jg
cs
adc
sbb
subl
mov
cmp
sbb
orl
jnp
sub
and
and
pop
adc
sub
insl
fcomps
and
xor
xor
sbb
cmp
jb
xor
sbb
sbb
xchg
and
xchg
and
leave
inc
jb
add
sbb
xor
fwait
pusha
inc
in
sub
aaa
inc
sub
cmpl
add
imul
add
cmp
das
xor
cmp
add
or
adc
aas
and
out
xor
inc
dec
insb
pusha
adc
pop
sub
out
popf
add
sbb
or
jae
faddl
sub
jecxz
inc
orl
add
or
sbb
sub
ss
jg
pop
out
orl
incb
xor
inc
add
adc
jbe
or
dec
sbb
jbe
popa
fbld
and
adcb
mov
xor
add
mov
cli
add
xor
xchg
push
push
rcrb
or
aaa
sub
or
jbe
fimull
adc
push
jb
pop
je
pop
mov
or
or
sbb
push
aaa
adc
or
jbe
sbbb
mov
aaa
or
bound
or
dec
or
mov
cs
sarb
cmp
or
add
movntps
sub
pop
iret
or
or
inc
cs
mov
mov
incl
adc
or
push
outsb
mov
or
adc
loopne
das
push
push
stos
or
xor
sub
xor
jp,pn
sub
sbb
xor
xchg
adc
adc
fidivl
push
sub
adc
fidivs
push
add
ret
add
xor
sbb
or
add
adc
repnz
das
adc
loopne
push
daa
push
sbb
add
sbb
orl
andb
mov
mov
loopne
outsb
push
orl
adc
aaa
mov
xor
xchg
notb
xorl
and
add
inc
push
hlt
xchg
incb
and
sbb
push
inc
sub
mov
sub
inc
into
pop
ljmp
lcall
push
or
or
das
mov
sub
fdivl
push
sbb
fiadds
sbb
or
daa
cs
inc
or
xor
rclb
das
push
ljmp
jp
pop
pop
pop
or
adc
adc
cvtpi2ps
mov
mov
js,pn
popa
or
out
into
push
sub
sbb
sub
push
sbb
adc
sbb
and
dec
mov
dec
push
cs
and
inc
xor
sahf
add
bound
cmpl
mov
pop
or
sub
sub
and
fsubl
and
add
pusha
aam
filds
das
pop
orl
add
xor
mov
push
jbe
sbb
pop
data16
pop
icebp
sub
sbb
cmp
sbb
pop
inc
or
xor
push
pop
ljmp
xor
jbe
sbb
cmp
sbb
adc
and
js
into
pop
push
ds
sbbl
adc
adc
xchg
mov
xor
cmpb
mov
and
repnz
jp
add
shrl
daa
mov
mov
or
out
push
mov
xor
pusha
adcl
bound
adc
shll
xor
pop
ljmp
push
jbe
arpl
sahf
or
jbe
add
pop
or
mov
and
ds
push
push
and
push
adc
push
gs
sub
push
inc
andw
rorb
ret
jb
cmp
cwtl
cmpsb
adc
add
popa
mov
stos
adc
jne
test
push
sbb
bound
ret
mov
push
outsl
es
mov
add
add
cmp
sbb
pop
cli
adc
rcrb
push
or
xchg
lret
sub
cli
or
or
test
mov
sub
repnz
cs
mov
stos
out
cs
shrl
xor
sub
add
mov
cmpsb
xchg
mov
scas
push
ficompl
cs
mov
cs
sub
incl
aad
or
mov
insl
orl
push
push
pop
or
scas
sahf
outsb
cmp
bound
xor
mov
pop
pop
pop
sbb
or
push
add
pop
jne
adc
dec
das
mov
add
adc
xchg
mov
add
add
sub
xchg
fsubrs
xchg
roll
addl
sbb
bound
lret
pusha
pusha
stos
xor
shrb
imulb
andl
mov
sub
sbb
jno
xchg
push
adc
add
cmpsb
add
jb
mov
scas
and
adc
sub
mov
sbbl
xor
enter
jle
xor
daa
or
or
ret
loop
xchg
sbb
xor
rolb
scas
push
mov
or
xor
sbb
dec
push
add
mov
add
fimull
sbb
sub
dec
shlb
adc
bound
and
cwtl
out
inc
inc
xchg
imul
scas
add
and
or
or
js
jns
jp
jle
xchg
loope
or
out
cs
push
push
and
jnp
fidivrs
movsb
xor
dec
lcall
adc
cs
mov
or
xchg
jle
adc
inc
add
add
inc
adc
sub
testb
rcll
mov
add
jo
in
and
xchg
inc
push
aaa
xor
mov
add
test
orb
add
jo
xlat
cli
add
bound
adc
push
push
sub
push
rol
test
push
pop
inc
adc
or
test
push
or
sbb
pop
lea
xchg
push
xchg
cmp
mov
mov
xchg
ljmp
mov
sbb
call
xor
loop
dec
add
sbb
mov
stos
sbb
xorb
sub
push
mov
mov
push
or
inc
sub
insb
push
xor
pop
and
cmp
sub
or
or
and
sub
cmp
adc
popa
and
loop
fisubl
sub
push
cmp
cmp
bound
mov
cmpsb
ss
mov
dec
xor
into
adc
sbb
cmp
xor
xchg
and
insl
jo
add
mov
pop
push
cli
mov
sbb
outsb
sbb
sbb
add
inc
mov
mov
push
rcll
push
sbb
sbb
loope
or
or
and
shll
sbb
push
jmp
fimuls
mov
xchg
rolb
inc
jbe
xchg
jecxz
mov
sbb
pop
pop
pop
cmp
dec
lea
and
out
outsb
scas
mov
cmp
mov
sub
inc
mov
xchg
fidivl
mov
loopne
adc
scas
cmp
popa
xor
push
or
inc
test
loop
popa
mov
sub
xorl
push
mov
mov
add
adcl
out
fisubrl
jb
or
addr16
iret
add
sbb
mov
popf
mov
and
jne
sahf
mov
sub
sbb
add
sub
pop
cwtl
outsb
push
dec
repnz
fcmovnb
xchg
adc
sub
mov
scas
xchg
adc
cli
rorb
add
and
or
out
sbb
add
stos
mov
add
sub
mov
push
daa
pop
adc
add
and
negb
cmp
mov
sahf
sbb
sub
mov
adc
mov
in
xor
pop
sbb
push
loopne
push
cwtl
dec
cmpsb
pop
sbb
addl
xchg
sub
stos
cmpsb
lea
push
loop
jbe
or
mov
and
ret
add
inc
xchg
cmp
or
or
mov
es
sti
sbb
push
test
adc
or
into
jbe
test
push
mov
sbbb
cmp
mov
ss
jmp
xor
jo
cwtl
inc
ss
mov
bound
lret
and
into
and
cltd
ret
daa
pop
jbe
or
mov
repnz
mov
jbe
or
xor
bound
xchg
and
inc
shlb
dec
cmpsb
push
or
repnz
data16
inc
jnp
xor
adc
push
adc
es
adc
pop
push
xor
sahf
cltd
test
data16
xor
bound
popf
add
pusha
lods
ds
add
rolb
es
aaa
dec
push
or
fisubs
jo
sub
xchg
sahf
pop
xchg
rolb
sbb
into
mov
push
rcrl
jb
sub
pop
pop
sbb
jbe
sub
outsb
adc
sahf
jo
or
jbe
jbe
push
push
fcomps
mov
push
dec
xor
pop
add
sbb
inc
fdivr
loopne
push
mov
mov
mov
insl
cli
add
or
ljmp
mov
xor
xchg
or
fisubl
pop
dec
or
push
sbb
push
xchg
mov
add
push
jecxz
sahf
push
dec
xor
sub
push
lret
add
cs
adc
repnz
shl
push
sbb
lods
add
sub
sub
or
lcall
xor
jp
or
ret
sbb
addl
push
rcrl
push
dec
sahf
ds
test
mov
add
test
arpl
push
adc
mov
add
mov
add
push
and
add
or
mov
mov
sub
add
sbb
or
inc
ret
xchg
ret
ss
daa
into
adc
add
lret
jo
inc
pop
push
lods
adcl
push
fwait
push
in
xor
ljmp
jbe
aaa
add
mov
adc
push
or
add
mov
sahf
es
adc
sbb
xor
push
or
mov
mov
push
adc
bound
mov
cltd
sbb
loop
sahf
rclb
push
and
sub
xor
lcall
mov
add
or
or
adc
ss
sbb
or
test
ret
and
mov
sub
ss
xchg
and
sbb
pop
jae
or
fimuls
dec
andl
out
adc
push
lcall
xor
sbb
mov
push
or
shlb
and
bound
inc
push
jle
aaa
daa
sbbl
mov
sbb
mov
and
and
mov
push
and
push
popf
push
push
push
mov
ficoms
fimuls
rorb
sub
sub
hlt
inc
mov
xor
mov
cs
mov
xchg
adcl
fidivrl
jbe
pop
sbb
add
or
adc
aam
sub
sub
jl
loopne
adcb
or
cmp
mov
adc
add
sub
or
mov
ljmp
movsb
js
cmp
sub
jecxz
rclb
push
mov
cli
mov
mov
add
or
add
setne
mov
mov
adc
mov
xchg
out
les
xchg
sub
ret
push
scas
xchg
sbb
loop
lret
sbb
push
sbb
xor
jp
xor
pop
jle
es
xor
push
pop
mov
sub
ss
or
inc
aad
cmp
adcb
and
mov
es
and
ss
cmp
pop
xchg
xor
or
push
shrb
mov
sbb
fidivs
mov
xchg
pop
repnz
xor
mov
adc
sbb
adc
sbb
mov
test
or
bound
inc
adc
xor
sbb
or
pop
push
test
xor
sbb
ret
je
pusha
daa
sahf
sbb
mov
adc
addl
loopne
stos
sahf
aaa
fiaddl
adc
cmp
fisubl
pushf
data16
or
adc
test
or
cmp
test
inc
inc
shrl
add
es
into
or
mov
cs
cli
rorl
jo
faddp
push
xchg
and
stos
or
pop
mov
sbb
push
or
push
enter
ljmp
pop
push
add
or
ret
xchg
push
add
add
and
push
or
sbb
push
xor
or
xchg
pop
int
cmp
mov
andb
sbb
add
pusha
and
cli
cmp
or
sbb
add
sub
dec
mov
mov
add
jp
sub
push
adc
stos
loop
aaa
xor
or
and
push
xor
or
fimull
dec
out
and
dec
or
add
out
xor
and
pop
mov
loop
dec
popa
dec
fisubl
push
sub
sbb
and
add
es
iret
push
mov
add
sub
bnd
adc
mov
rolb
xchg
jo
push
and
push
cltd
sub
pop
xchg
push
add
adc
inc
sti
rorb
jb
mov
cli
inc
scas
push
adc
adc
subl
jle
xchg
jle
or
pop
pusha
push
fwait
add
scas
sub
jle
push
xorb
out
mov
adc
or
and
leave
sbbl
bound
test
sbb
adc
and
sub
cmp
push
xor
push
sub
rclb
sub
repnz
add
xor
jbe
lret
push
outsb
lcall
js
add
push
mov
add
lret
iret
fiaddl
push
sbb
push
cmp
out
jbe
mov
xchg
sbb
or
push
cmp
cmp
adc
fisubl
mov
or
repnz
int
js,pt
movsb
push
stos
adc
and
scas
pop
jbe
pop
push
lret
es
aaa
mov
adc
lret
rorb
out
push
inc
sbb
ret
sub
xor
and
push
mov
cmp
or
cmp
pop
push
cwtl
cmp
or
daa
outsb
repnz
dec
add
pushw
es
adc
push
adc
pop
pushf
shll
cmpsb
mov
dec
out
outsb
imul
jp
lret
xor
movsl
int3
fwait
push
jg
sub
and
pop
ljmp
pusha
inc
jp
push
or
leave
gs
adc
and
mov
add
mov
ljmp
pop
cmpsb
out
push
inc
push
popa
fiaddl
jb
subl
sbb
push
dec
and
inc
xchg
cmp
cli
or
push
and
mov
sub
push
cli
sub
mov
sbb
push
sbbb
add
push
and
cli
mov
or
jmp
jle
adc
jp
test
hlt
out
xchg
sbb
pop
adc
rcrb
lretw
and
sub
xor
ljmp
or
dec
or
dec
or
sub
ret
cwtl
ret
bound
or
pop
mov
or
and
mov
out
xchg
pop
js
inc
push
push
pop
cmp
jp
xor
mov
sbbl
push
add
sub
cs
and
jbe
repz
sbb
or
outsb
cld
push
sub
inc
adc
sahf
and
adc
xor
xorb
push
dec
adcb
xchg
cltd
mov
push
xor
cmpsb
jle
jb
stos
add
cmp
dec
daa
xor
xchg
into
rol
test
push
add
movsb
mov
xchg
ljmp
mov
ret
add
push
xchg
sub
and
and
adc
push
mov
fbstp
das
fiaddl
cs
std
rcrl
or
add
sbb
divb
fildl
xor
add
xor
mov
jb
xor
sahf
bound
jo
hlt
jmp
push
loop
inc
and
into
outsb
mov
sub
adc
or
jge
mov
or
and
inc
inc
or
out
adc
add
rolb
inc
dec
and
xor
xor
push
add
adc
and
lret
mov
stos
adc
sbb
jbe
adc
pusha
sbb
out
jbe
add
adcl
add
push
cmpsl
add
add
mov
lock
jbe
add
popf
xor
mov
cli
jle
mov
push
xchg
mov
into
lcall
jb
and
jle
out
ret
add
divb
into
inc
sub
sub
shr
sub
xor
pusha
outsb
pop
mov
mov
sub
loop
push
xchg
xor
dec
inc
push
lret
sbbb
mov
push
cltd
add
jb
out
and
jno
adc
push
pop
add
lret
xchg
ss
sub
js
xor
jp
push
add
xchg
loopne
lods
or
ss
xor
mov
cltd
out
add
out
sbb
jbe
add
loop
push
mov
push
pop
fidivrl
or
adc
add
sbb
movsl
popf
ja
sbb
sbb
inc
sarl
mov
push
push
and
or
cmpsl
fidivl
aaa
or
mov
cltd
fisubl
daa
and
add
add
adc
shlb
into
sub
ljmp
or
or
iret
je
jecxz
ds
or
popf
or
cmpsb
add
and
xchg
out
cmpsb
or
and
push
xor
fadds
test
popf
push
or
out
push
cmp
or
and
jbe
inc
popa
int3
int3
or
sbb
lret
movsl
jno
xchg
arpl
xor
or
cmp
lret
loop
pop
out
or
or
pop
inc
or
mov
pop
or
cs
pop
cs
or
sbb
iret
lock
jbe
sbb
mov
inc
fisubl
or
xchg
lahf
leave
add
and
or
daa
mov
push
and
or
loopne
mov
out
or
scas
fisubrl
or
add
push
mov
movb
or
pop
rorb
ja
push
ds
sbb
mov
shlb
push
or
cmp
loopne
outsl
ret
pop
or
dec
out
repnz
cs
sub
fs
in
or
or
xor
jne
inc
mov
cmp
dec
out
out
or
jae
or
mov
add
mov
or
sbb
push
testb
repnz
or
idivl
xorl
or
or
or
dec
jecxz
xchg
or
mov
or
sbb
mov
xor
push
out
mov
or
adc
ficoml
push
mov
or
adc
fldpi
sbb
or
xor
shlb
or
ds
cmp
out
and
or
les
mov
cmp
push
or
test
lret
or
or
cs
in
sub
and
and
inc
lcall
jae
or
fwait
or
and
and
out
jle
out
or
and
out
jae
pop
and
xchg
shrl
push
add
pop
jecxz
push
or
ds
xlat
dec
pop
push
aaa
or
add
arpl
test
loop
ss
das
daa
mov
or
aas
test
jno
or
push
or
out
scas
inc
push
and
lret
xchg
adc
or
pop
js
out
adc
cmp
or
scas
je
negl
ds
add
ds
mov
adc
sub
mov
adc
cmp
test
add
mov
popf
or
or
mov
into
or
or
xlat
or
cmpsl
jbe
add
and
or
cmp
sbb
daa
add
xchg
jns,pn
pop
addr16
pop
adc
xchg
in
mov
or
aaa
add
sub
mov
push
ljmp
inc
push
adc
pop
push
ret
inc
xchg
test
or
mov
rol
sub
or
push
nop
repnz
add
mov
adc
or
pop
push
pop
mov
mov
or
mov
xor
inc
sub
cs
outsl
fisubs
popf
ds
push
pop
and
inc
and
pushf
or
or
or
adcl
push
push
das
xchg
inc
inc
or
pushf
inc
or
add
cmp
lds
imul
mov
fisttpll
pop
and
or
sub
or
or
mov
adc
and
fistpll
scas
push
mov
push
adc
and
or
ret
stos
cmpsl
nop
add
push
and
push
cmp
imul
add
into
and
sub
xorb
or
out
bound
add
fcmovnb
push
cmpsl
add
or
or
test
pushf
fisttpll
addr16
push
lcall
mov
adc
sub
mov
and
add
push
xchg
push
outsb
xchg
push
xlat
movsb
xchg
cs
inc
push
ret
mov
and
mov
or
imul
push
mov
push
out
xor
rol
pushf
pop
pop
ret
add
aad
mov
add
pop
sub
push
sub
adc
dec
ret
or
es
sbb
mov
xchg
lret
jle
pop
sbb
and
mov
adc
and
sbb
lods
jl
xor
cs
iret
push
ret
jp
repz
pop
adc
aaa
out
sbbb
ret
lea
push
inc
ret
mul
and
or
jl
dec
lock
rcll
or
fidivs
rcll
cmpsl
jbe
test
daa
add
push
jo
mov
cmp
pop
push
ffree
hlt
inc
push
jb
jmp
add
cwtl
xor
or
aas
ret
imul
in
aam
mov
add
sub
push
or
adcb
adc
xchg
cmp
inc
xlat
bound
push
mov
add
push
add
pop
sbb
stos
cmp
xor
add
inc
cwtl
addr16
out
jmp
pop
or
es
add
cs
or
lret
repz
push
aas
addr16
sub
push
adc
cmpsl
pop
xchg
cltd
fisubs
int3
adc
inc
push
push
cmpsl
adc
add
xchg
push
push
xor
mov
xchg
addb
arpl
das
scas
notb
data16
xor
push
jbe
pop
cmp
xor
push
add
xchg
pop
ret
pop
sbb
dec
xchg
xchg
out
add
aam
xlat
test
daa
dec
push
pop
dec
shlb
push
pop
sub
idivb
or
imul
imul
popa
popa
push
outsb
outsb
gs
mov
imul
out
into
add
and
dec
push
adc
outsb
repnz
je
push
popa
mov
jle
outsb
es
mov
out
jne
cmp
popa
pop
gs
jns
jae
iret
repz
jp
js
scas
cmp
repz
imul
push
outsb
push
aam
cmp
fs
xchg
aaa
xchg
mov
arpl
fidivrs
xchg
jp
push
or
verw
subb
pushl
push
or
rcl
mov
das
sarb
and
das
lahf
jbe
push
jle
out
pop
sub
loope
mov
pop
rorb
ficomps
mov
xlat
mov
mov
sbb
inc
mov
mov
cmp
sbbb
movsb
rol
shlb
pop
push
pop
push
add
xor
leave
stc
shl
aaa
cmpsb
dec
dec
inc
inc
sbb
insl
in
adc
jl
dec
sub
outsl
pop
scas
testl
dec
cmp
addb
mov
in
iret
or
add
in
mov
push
out
xor
xchg
iret
pusha
push
xor
daa
add
loopne
out
add
add
add
adc
repnz
popf
sahf
cmp
aas
jg
or
jbe
jmp
pushl
pop
aas
and
aas
into
fidivs
sub
push
aas
aam
ss
fwait
das
stos
push
adc
outsb
dec
adc
pusha
or
mov
int
cmpsl
xorl
inc
and
fucomp
in
jmp
add
lods
daa
pop
dec
cltd
sbb
arpl
push
push
in
int3
ss
push
or
adc
push
xor
add
into
fsub
outsl
or
dec
xchg
push
pop
or
shlb
mov
fsubr
push
xor
inc
push
push
or
jnp
dec
pop
and
sub
push
and
pminub
mov
outsb
int3
sub
xor
gs
bound
and
push
sub
shr
sub
mov
push
cli
jns
sub
or
aaa
daa
mov
add
fbld
hlt
push
mov
int3
jle
sub
inc
xor
push
adc
cmp
and
test
insl
fwait
or
adc
pop
dec
mov
push
jb
data16
lcall
push
mov
ss
pop
mov
loopne
add
fisttps
cmc
dec
mov
cwtl
pop
and
out
inc
popa
xor
stos
sbb
bound
scas
fcmovb
xor
mov
and
pop
and
jae
or
fistpl
repz
icebp
into
cmp
or
add
repz
pushf
pop
pop
pusha
or
outsl
push
add
test
pop
cmp
cmp
ret
xlat
push
arpl
mov
dec
das
arpl
mov
xchg
ja
mov
adc
repz
addl
jp
into
out
cmp
or
and
imull
int
pop
data16
add
fdivrs
and
or
and
xchg
sbb
inc
pop
push
jnp
pushf
sbb
es
mov
pop
outsl
push
mov
int3
int3
shrb
pop
xlat
es
ss
sub
push
inc
lret
mov
dec
roll
movsl
and
mov
fcoms
ljmpw
mov
jns
add
mov
cmp
repz
int3
les
lods
movsb
pushf
xchg
mov
repz
jl
insb
fs
repz
push
dec
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
lcall
hlt
in
out
sahf
out
int3
rcrb
pushf
nop
test
sahf
out
insb
pusha
push
dec
cmp
jns
out
and
or
sahf
iret
repz
call
cwtl
cmp
repz
js
pop
push
repz
xchg
push
cmpsl
or
inc
push
inc
iret
repz
inc
inc
inc
inc
inc
dec
cmp
repz
dec
dec
dec
dec
repz
repz
dec
push
push
push
iret
repz
push
push
push
push
push
pop
imul
sbb
adc
lds
jae
je
in
inc
lcall
pop
or
repz
or
or
repz
repz
or
or
repz
add
add
add
cmp
repz
add
add
repz
repz
or
or
repz
or
or
or
fwait
mov
cmp
or
inc
loop
ljmp
sub
push
cmp
imul
pop
xor
add
test
aaa
ss
enter
xor
dec
add
test
push
add
mov
jne
das
xor
mov
cmp
and
xor
xor
xor
sub
in
aas
sbb
das
xchg
xor
xchg
xchg
xchg
aaa
ss
xchg
xor
xchg
add
mov
add
add
add
pop
fs
dec
dec
outsb
mov
pop
mulps
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
dec
dec
inc
inc
inc
inc
shrl
dec
inc
inc
mov
test
and
fdivrl
push
inc
cmp
inc
dec
push
inc
dec
inc
mov
jle
xchg
or
push
int3
cmp
jl
xchg
mov
push
mov
into
insl
sub
or
jbe
popf
mov
out
sub
and
ljmp
or
lret
test
push
mov
mov
aam
and
cmpsb
outsb
outsl
mov
push
ja
testb
incb
xor
lret
mov
fisubs
push
imul
out
pop
jne
mov
orb
mov
rolb
jl
fiaddl
mov
mov
jns
cmpsl
xor
mov
mov
cld
xchg
sti
test
sahf
out
sahf
jo
pusha
clc
dec
idivl
out
cmp
and
or
cmp
out
hlt
stos
repz
cmp
icebp
lock
out
iret
repz
fisttps
out
sub
sbb
sahf
out
cmp
jmp
stos
ljmp
movsb
call
mov
outsl
push
in
push
in
idivl
loop
push
loope
cmp
rep
loopne
fbstp
cmp
ficoms
fdivrl
jns
push
jns
test
push
fstps
fmuls
out
out
push
push
sahf
out
sahf
shrl
rcrb
rorl
cmp
repz
hlt
cmpsl
iret
fmul
repz
repz
int
int3
pushf
iret
repz
lret
jo
inc
leave
cmp
and
adc
out
dec
repz
clc
cmpsb
lds
int3
jns
sarl
ret
push
mov
jns
out
movsb
mov
jns
jl
push
jns
out
scas
mov
cmpsl
xor
mov
mov
jnp
out
mov
mov
mov
int
jns
push
mov
mov
movsb
mov
add
cmp
xor
add
movsl
jmp
jbe
mov
or
cld
rol
sub
loopne
out
mov
das
push
mov
mov
lahf
dec
mov
repz
mov
call
dec
add
sbb
mov
mov
std
xor
add
cmc
je
add
cltd
cmp
out
lret
mov
xor
lret
jecxz
mov
inc
add
mov
cmpb
mov
and
sarb
mov
shlb
xchg
sar
mov
aad
rol
rorl
or
or
mov
mov
pop
add
loopne
fildl
mov
stos
pusha
xchg
add
insb
shl
and
aas
push
sbb
leave
call
adc
repz
inc
lcall
dec
daa
push
hlt
push
jbe
mov
sub
sub
mov
or
or
pop
aas
mov
insl
popa
pop
addr16
xchg
loopne
mov
push
inc
arpl
insl
dec
dec
iret
out
rcl
sub
pop
sbb
pop
test
mov
dec
add
adc
ljmp
xlat
jecxz
aas
cmpsb
insb
ret
cmp
scas
dec
cmpsl
repz
or
ret
pop
push
mov
sarb
outsl
adc
jmp
mov
nop
popf
ss
mov
cmp
pop
daa
shll
daa
or
sub
rcr
scas
pop
or
out
or
in
aad
in
inc
fildll
sbb
xor
mov
add
inc
daa
push
lret
into
stos
add
sbb
lahf
ja
inc
lock
ja
mov
clc
aam
int3
stos
mov
das
jg
ret
lcall
fwait
data16
pop
push
push
dec
pusha
mov
lret
lock
aaa
mov
sub
push
loopne
adc
in
sbb
adc
mov
int
inc
xor
mov
mov
mov
pop
dec
mov
cmpb
fldt
pop
ret
and
jg
rorl
push
stos
cmp
mov
pop
clc
pop
sub
getsec
aam
push
xchg
jg
test
and
xlat
mov
mov
lods
xor
and
in
aaa
sbb
stos
mov
mov
mov
fmuls
mov
and
lret
push
mov
push
sub
lods
lahf
addr16
sarb
pusha
mov
pop
adc
jmp
std
mov
xchg
sbb
pop
jecxz
jnp
fcomps
and
mov
lahf
pop
or
lcall
test
mov
mov
lock
push
pop
lcall
add
adc
fwait
add
ret
xor
shlb
cs
ret
mov
sub
cli
sahf
dec
idivb
mov
imul
mov
cli
leave
cli
addr16
testb
mov
int
das
shll
jo
lret
cs
mov
mov
add
loopne
mul
jbe
into
std
push
mov
sub
cmpl
das
pop
fisubrl
dec
daa
aas
addr16
mov
pop
subl
adc
xchg
or
sarl
xchg
jg
pop
lret
aad
stos
jle
loopne
cmpsb
fs
xchg
loopne
push
loopne
xchg
loopne
push
movswl
mov
loop
les
mov
mov
push
and
js
xor
push
cmpsb
fsubs
or
lock
mov
adc
adc
jb
sar
inc
xchg
push
cmp
jne
inc
push
sti
iret
lock
leave
iret
mov
xlat
repz
add
ret
out
or
or
mov
mov
out
fdivrs
mov
adc
dec
mov
cmp
push
lock
jnp
popa
outsl
pop
das
and
add
sahf
out
push
pop
pop
pop
pop
pop
adc
pusha
popa
out
dec
xor
scas
ss
mov
sahf
test
cwtl
nop
mov
int
into
pop
enter
add
mov
pop
pop
mov
mov
ja
out
lock
fimull
adc
out
inc
fmuls
mov
gs
pop
dec
iret
aad
pop
mov
imul
das
inc
mov
adc
and
ss
and
sub
fdiv
das
les
push
aaa
cmp
push
mov
jecxz
test
mov
mov
push
sti
mov
pop
leave
push
psadbw
push
xor
add
add
mov
push
sub
sbb
and
add
scas
mov
adc
push
jnp
mov
clc
mov
and
movups
hlt
imul
pop
xor
fcomps
out
jbe
loopne
shrb
scas
enter
dec
repz
push
fcomp
mov
scas
jne
insl
add
test
nop
scas
mov
jg
cmp
mov
outsb
nop
pop
pusha
shlb
adcb
adc
jo,pn
call
mov
in
bswap
rcrb
enter
loopne
mov
ret
push
popf
jge
in
pop
xlat
iret
mov
gs
jbe
mov
mov
jg
in
pop
mov
mov
jg
fdivs
out
jp
pop
shufps
int3
mov
jg
pop
rcr
orb
mov
mov
pop
outsb
pop
rol
mov
lock
fidivrl
add
stos
pop
mov
popf
jg
outsl
mov
lods
imul
or
add
scas
push
lret
jle
pop
sub
int3
clc
xlat
stos
add
cs
adc
clc
and
dec
push
inc
inc
dec
inc
dec
add
inc
adc
out
stos
xchg
xchg
pop
push
cmp
cmp
repz
mov
repz
out
add
dec
insl
cs
dec
scas
pop
pop
push
or
les
push
xchg
or
or
aas
fadds
xchg
aas
scas
aas
push
aas
out
push
les
mov
stos
mov
mov
es
pushl
fidivrl
mov
inc
inc
pop
pop
xor
mov
add
ss
das
add
pusha
or
push
xor
xor
inc
sbb
pop
add
mov
fisubrl
xlat
pop
inc
pushf
add
cmp
sub
int
inc
int
ja
pop
and
push
or
and
sahf
push
dec
pop
outsb
shlb
add
sub
mov
repz
pop
inc
inc
mov
dec
pop
pop
and
push
inc
push
inc
jg
fsubs
ja
test
jg
mov
pop
xlat
das
mov
dec
mov
push
comiss
inc
ljmp
xor
mov
pop
fists
mov
and
push
rcrl
sti
cmp
push
dec
push
inc
inc
popa
and
cmpl
push
dec
inc
lahf
scas
mov
pop
aas
mov
inc
inc
insb
xchg
adc
sahf
add
pop
sub
cmp
jg
lea
stos
andnps
or
add
call
out
jg
inc
inc
flds
xchg
data16
rcrl
jmp
ljmp
mov
xor
sbb
daa
in
push
arpl
aas
incl
das
lds
inc
imul
dec
in
or
outsl
xchg
pusha
outsl
nop
fiaddl
jns
dec
insl
popa
xor
jne
inc
sub
push
pop
fbstp
aas
dec
dec
dec
stos
gs
fs
mov
or
lahf
push
shrb
push
dec
cmp
mov
and
cwtl
pop
push
popa
cmpsl
push
js
xchg
pop
jnp
aas
into
aas
pop
pop
push
enter
mov
in
add
inc
inc
clc
push
fcomip
shld
pcmpeqd
in
pop
pop
pop
es
aas
pop
push
cmp
push
add
adc
outsl
dec
pop
and
outsl
lods
add
cli
sub
and
sub
movl
mov
and
adc
mov
aam
jns
out
ror
enter
out
sahf
mov
mov
cmp
repz
jl
je
insb
iret
repz
push
push
cmp
repz
dec
inc
cmp
jns
ja
sub
push
sbb
add
cmp
repz
js
in
faddl
cmp
scas
add
push
jns
add
or
and
or
aaa
or
fnstsw
scas
adc
adc
mov
das
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
xchg
aaa
fdivrl
xlat
pop
sbb
add
add
jns
fisubrs
add
cmpb
cmpsb
xchg
pushf
pop
movsl
sbbl
mov
fisubl
setae
fmul
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
das
clc
std
adc
push
ficompl
push
pop
fisubrl
xor
pop
mov
rcr
fsubp
stc
jb
jle
shll
or
adc
jl
mov
or
cmp
inc
adc
adc
cmpsl
stc
loopne
adc
out
pop
sbb
sbb
repz
clc
jp
rcrb
jns
idivl
jns
js
push
cld
adc
pop
push
push
add
das
addb
cmp
adc
test
xlat
mov
or
mov
adc
ss
or
sbb
xchg
std
aas
mov
pop
insl
add
jle
dec
push
jle
testl
sbb
cmpb
mov
pop
pop
or
jns
addl
outsb
je
sbb
sahf
out
insb
sbb
out
sahf
pop
adc
push
jns
out
inc
or
jns
out
sub
and
sahf
out
sahf
and
sbb
sbb
jns
decl
adc
loop
push
clc
jge
push
adc
jns
out
sbb
push
fcoms
out
sahf
out
and
and
gs
jo
and
out
pop
mov
mov
xor
lock
xor
sub
call
mov
pop
add
sub
mov
filds
cmp
or
jb
sbb
jg
or
sahf
out
pop
cmp
aas
inc
dec
push
push
jns
out
pop
bound
cltd
out
sahf
out
mov
repz
push
or
sub
iret
repz
xchg
mov
sarl
iret
repz
testb
and
out
sahf
out
pop
jne
lcall
lcall
or
repz
ds
push
repz
repz
mov
iret
mov
movb
inc
popa
cwtl
ds
xrelease
or
add
aas
pusha
pop
xor
stos
sub
jp
pop
mov
pop
cld
and
or
xchg
inc
mov
repnz
and
scas
dec
push
add
addl
add
int
mov
ja
aaa
xchg
outsb
dec
push
add
push
jle
mov
shlb
push
ret
stos
add
enter
ss
sub
adc
push
add
sub
mov
push
add
rol
ss
push
push
popf
test
test
push
inc
jg
call
cmpsb
jmp
pop
pop
add
repnz
jb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
jb
adc
dec
js
or
mov
jp
add
repz
sbb
push
pop
ja
mov
imul
add
dec
add
add
push
sahf
ja
xor
sbb
cmpb
push
inc
shrl
sub
pop
lods
mov
xor
outsl
mov
mov
in
test
jg
test
jne
nop
xchg
cmp
add
enter
stc
nop
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
clc
lcall
lds
mov
cmpsb
lock
mov
popa
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fstps
mov
push
pusha
cli
add
int3
pushl
cltd
add
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
dec
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
decl
test
movsl
jmp
xor
aas
jge
mov
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
call
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
ja
ljmp
add
add
cmpsb
cmpsb
jb
bound
imul
in
xchg
dec
adc
push
not
ficompl
xchg
cltd
dec
adc
jae
fwait
dec
adc
mov
dec
add
dec
adc
bound
pop
push
mov
jbe
push
xlat
mov
xlat
adc
mov
pusha
inc
aad
pop
mov
xor
mov
jb
jns
add
cmp
cmp
ss
aaa
add
push
sub
aad
clc
hlt
jg
add
jg
cmp
sub
les
cmp
pop
sbb
or
xchg
add
jno
adc
add
adc
inc
lretw
xor
rclb
rolb
loopne
adc
pop
inc
aaa
xor
push
adc
movsl
push
gs
xchg
outsl
add
mov
jo
or
adc
adc
pop
inc
sbb
add
xchg
ficomps
stos
mov
popa
add
insb
push
mov
test
data16
cmpb
and
inc
outsb
and
lret
out
jle
push
dec
and
add
lock
xchg
outsb
and
cmp
add
cwtl
imul
jge
popa
popf
add
sub
pop
inc
jmp
and
sub
or
add
adc
sbb
mov
js
int3
inc
shll
mov
outsb
sahf
pop
clc
dec
mov
dec
les
sub
je
inc
xchg
xor
add
sysenter
daa
test
imull
add
ja
in
and
add
and
loop
adc
push
inc
push
out
loope
pop
cmp
push
or
or
clc
insb
int3
pop
addl
loope
sub
sbb
sbb
test
inc
test
sbb
or
sub
add
aaa
and
push
imul
inc
xchg
xor
dec
ss
cmp
icebp
mov
dec
xor
cltd
push
xor
mov
mov
push
xor
into
push
cs
test
xchg
mov
mov
loopne
loopne
loopne
push
incb
or
pop
push
inc
add
xchg
xchg
push
stos
std
or
orb
pusha
dec
jo
rcrb
push
push
mov
pop
outsb
cmp
orb
add
cmp
lock
add
or
int
mov
scas
rolb
in
insb
mov
add
dec
or
or
push
add
push
add
mov
adc
push
push
xorb
cmp
cwtl
jae
je
jne
iret
repz
jbe
ja
add
sahf
out
js
jns
addr16
out
pop
adc
adc
adc
add
add
aaa
testl
out
aas
add
push
jg
xor
and
negl
loopne
scas
pusha
cs
sarb
jns
mov
or
rcrb
outsb
lock
push
imul
cmp
mov
fadds
push
push
push
add
out
sahf
mov
enter
cmp
out
clc
sbb
pop
sbb
mov
inc
pop
out
or
pop
mov
cmp
or
jo
lahf
dec
out
mov
cwtl
mov
push
add
push
add
sub
negb
das
imul
add
and
inc
pop
enter
pusha
jo
sbbl
add
sbbl
loopne
add
in
cltd
inc
adc
inc
cs
or
inc
lods
in
mov
or
add
adcb
mov
inc
cs
nop
or
loopne
add
jb
dec
and
and
pop
enter
add
pusha
pop
and
enter
enter
mov
pop
rcl
enter
lock
pop
leave
add
pop
int3
inc
dec
pop
push
das
loopne
add
or
negl
xor
rclb
xchg
xor
stc
push
add
pushf
nop
push
xchg
bswap
adc
and
les
add
mov
pop
push
nop
adc
pop
mov
in
pushf
push
sbb
jo
enter
xchg
add
pop
fs
dec
lcall
and
ds
lock
and
pop
dec
cs
xor
or
lcall
pop
jnp
test
cmp
cwtl
les
jnp
push
jp
inc
cmp
cli
cmp
push
pushf
fs
ljmp
inc
pop
rcrb
mov
inc
push
int3
pop
dec
iret
and
dec
push
loop
mov
dec
ds
int3
push
sub
scas
cmp
jo
les
dec
push
sub
inc
mov
push
jle
call
xchg
push
push
ja
jnp
adc
push
pop
and
push
repnz
adc
test
test
test
fcoms
pop
add
inc
shrb
lcall
mov
pop
or
mov
or
inc
push
dec
cmp
cmp
add
inc
mov
jo
push
mov
mull
popa
data16
and
inc
and
xor
mov
dec
dec
pop
lcall
push
inc
push
pop
push
inc
push
dec
push
push
inc
or
out
adc
inc
sti
push
push
inc
inc
dec
adcl
pusha
fwait
push
inc
push
pop
inc
dec
imul
into
sub
pop
xor
loopne
sti
sub
jl
and
push
inc
push
inc
pop
add
fldt
and
xor
lahf
pushl
dec
inc
push
inc
inc
inc
and
and
jo
add
inc
jl
popa
mov
sub
ja
fisubrl
cmp
ss
negb
outsl
inc
insb
ss
clc
arpl
pop
push
andb
add
add
pop
and
add
push
mov
loope
inc
not
cltd
movsl
inc
pop
adc
arpl
inc
or
push
push
mov
sbb
add
dec
nop
xchg
out
popf
test
movsl
add
jno
fdivp
das
aas
enter
addb
ds
repz
jbe
jg
cmp
mov
ss
jl
js
jns
leave
repz
inc
add
push
clc
int
data16
aas
mov
loopne
idivb
mov
cld
ret
das
and
fst
insb
adc
sbb
jl
insb
mov
lcall
add
add
add
cmp
rcr
aad
push
mov
mov
jae
mov
out
pop
jns
ret
xor
sub
push
or
notl
add
insb
push
fs
dec
sahf
pusha
add
jmp
in
stos
outsb
push
clc
mov
pop
lock
in
mov
add
pop
push
fildl
in
sub
cmp
imul
rclb
sbbb
pop
enter
orb
mov
test
add
pop
pop
out
fmulp
cmp
push
push
push
dec
push
daa
xor
add
add
push
inc
movsb
mov
sarb
lock
lcall
fsubrl
clc
stos
js
insl
sar
ret
xchg
movl
scas
push
scas
aaa
adc
pop
add
add
cmpsb
enter
mov
js
sbbl
fs
ror
retw
mov
subl
mov
lcall
leave
ja
js
xchg
push
add
dec
ret
and
sub
lret
shr
mov
push
aas
das
inc
paddw
xchg
add
lret
cmpb
rorb
add
and
add
sahf
mov
test
jae
or
add
paddsb
and
rcr
mov
orb
rdmsr
xor
add
sti
jnp
jbe,pt
fistpl
add
mov
mov
push
fs
fstp
negl
mov
lcall
mov
cltd
test
lock
push
in
out
bound
pop
or
jg
lea
cmp
and
psubusb
add
jg
mov
lcall
adc
neg
pop
pop
pop
pop
pop
pop
js
nop
in
into
mov
clc
movd
fldl
push
or
mov
xor
dec
mov
or
or
push
aaa
stos
cwtl
ja
adc
or
add
fsubs
lcall
outsl
xlat
into
mov
clc
and
xchg
sub
xor
clc
ja
js
data16
inc
pop
xor
mov
mov
daa
add
outsb
ja
add
jnp
rclb
daa
daa
lahf
or
outsb
daa
out
jmp
aas
shrl
pusha
nop
xchg
xchg
xchg
or
inc
pop
pop
mov
push
push
adcb
repz
push
insl
pop
cmpb
dec
xchg
push
pop
fiaddl
sub
add
mov
aaa
js
xor
scas
add
lcall
ja
inc
shlb
scas
divb
push
pop
lods
divb
das
shll
cwtl
scas
pop
js
pop
scas
push
adc
in
lods
pop
adc
adc
das
pop
scas
or
and
fs
pop
test
pop
mov
adc
scas
sub
sub
outsl
int3
xchg
or
pop
orb
sbb
mov
stos
pop
addl
pop
mov
scas
dec
push
add
aas
adc
pusha
scas
iret
leave
repz
xchg
or
add
arpl
cli
jecxz
or
js
jp
inc
call
sbb
mov
mov
inc
pop
fnstenv
popf
lock
mov
lret
sbb
or
add
fisubl
or
inc
aaa
jmp
in
orb
js
or
jo
lock
out
int
adc
jg
push
mov
or
jo
jns
inc
mov
inc
xor
loopne
mov
bound
lret
popl
fdivrs
pop
aas
ret
mov
call
clc
jmp
or
cmp
add
pop
jbe
and
jae
scas
jg
or
popa
in
mov
mov
jo
cmp
or
xchg
mov
xor
pop
test
or
dec
outsb
and
movsb
or
aaa
cmp
or
or
mov
xchg
dec
or
sbb
or
lods
lea
shr
pusha
in
pop
xlat
pop
or
js
pusha
xchg
mov
or
or
dec
imul
or
ja
xchg
add
ss
add
jg
or
inc
cmp
or
mov
add
or
push
add
imul
mov
mov
lahf
xor
sbb
xchg
xchg
mov
inc
mov
add
pop
push
mov
iret
xlat
into
mov
pop
and
sbb
ret
or
adc
and
push
loop
scas
popf
movsb
mov
jo,pt
pop
jge
or
or
loopne
or
pop
or
push
xor
mov
iret
icebp
sahf
mov
punpcklbw
insl
pop
pop
monitor
and
add
daa
or
adc
les
or
daa
ror
adc
dec
dec
add
cs
dec
adc
dec
adc
out
aas
sbb
pusha
popl
sub
ss
pop
mov
sbbb
sbb
addl
cwtl
outsb
adc
pop
sahf
daa
cmpsb
frstor
xor
mov
mov
ficoml
mulb
lock
mov
pop
and
lock
and
add
and
xchg
addb
nop
add
pop
mov
movswl
and
ja
or
in
mov
adc
jo
push
shr
ja
jo
ja
into
xchg
mov
add
or
xor
movb
pop
or
into
jg,pt
and
popf
hlt
mov
inc
lcall
add
adc
add
jp
aaa
mov
cld
pop
sbb
xor
lea
insl
push
inc
ret
jo
xchg
pop
add
push
stc
addb
rorb
cmp
mov
lea
jb
xor
jb
sbb
rdpmc
add
pop
loop
or
push
stos
popl
ud0
out
mov
lock
pusha
dec
cmpsb
outsl
cmp
nopl
movb
mull
addb
jno
dec
sahf
add
nopl
xor
dec
in
jnp
mov
pusha
or
out
repz
idiv
or
and
testl
mov
cmp
je
ret
jle
scas
dec
and
negb
inc
and
sbb
push
push
lret
movl
outsl
mov
scas
clc
adc
data16
pop
mov
mov
pop
popl
xor
push
jg
or
ja
sbb
out
sahf
or
push
pop
add
fldl
lret
xchg
pop
iret
pop
pop
sub
push
divb
fdivrl
pop
fistps
push
cmp
jne
outsl
inc
pop
fiadds
addr16
fdivl
ficoms
sbb
sahf
xchg
cmp
mov
sarl
addr16
mov
aas
loopne
mov
jg
adcl
rcr
ja
inc
fisttps
sub
fdivs
rcrl
and
pop
clc
sbb
pop
cmpl
and
mov
inc
dec
shlb
push
jae
pop
mov
add
negl
pop
mov
dec
das
fisubrl
insl
xor
sbb
mov
ja
fisubrs
and
pop
das
into
mov
fildl
dec
outsb
jnp
gs
mov
mov
mov
das
jg
add
pop
jge
outsl
mov
fidivrs
mov
push
dec
push
das
fwait
sbb
out
mov
jbe
popa
ljmp
mov
mov
outsl
popa
das
repz
mov
addr16
popa
das
imull
lock
popa
pop
nop
mov
outsl
popa
das
jg
pop
fildl
das
pop
das
jg
ss
mov
out
mov
sbb
fcmovnb
inc
movups
sub
push
pop
add
sbb
das
mov
negl
add
sub
popa
int
lea
jmp
sbb
push
and
das
mov
xchg
push
sbb
pop
jg
sub
insb
icebp
dec
jb
divb
out
xor
xchg
das
repz
test
mov
pop
clc
pushf
and
mov
dec
sbb
sbb
mov
push
subl
arpl
pop
sub
mov
mov
mov
in
and
mov
insl
adc
out
jmp
mov
das
fwait
adc
add
daa
aas
add
incl
adc
pusha
xor
mov
push
pop
inc
mul
jmp
push
xchg
cltd
daa
or
je
sub
sub
add
jns
jae
push
push
dec
ds
jl
sub
mov
frstor
stc
repz
or
dec
xchg
and
cs
repnz
or
xacquire
cwtl
or
or
inc
jo,pt
loopne
outsl
pop
arpl
and
push
pop
mov
push
sbbb
dec
mov
ret
ret
sbb
orb
cmovo
repnz
loopne
mov
loope
dec
push
bound
jnp
cwtl
xchg
sbbb
aaa
das
xchg
push
inc
add
cmp
or
lock
push
pop
adcb
jg
jg
mov
and
movlps
insl
mov
leave
jp
jo
add
idivb
fcoms
fs
mov
add
inc
dec
or
std
idivb
add
or
mov
xchg
and
pop
popa
lods
fildl
sub
or
stos
mov
pavgw
add
pop
push
pop
pop
out
mov
xor
bound
add
xorb
xor
inc
sbb
jmp
inc
xchg
xorl
cmp
hlt
ss
out
jge
int
dec
add
outsb
cmc
aaa
add
out
cmp
add
jne
add
mov
dec
dec
stos
xchg
ljmp
dec
daa
add
push
xor
out
xchg
imul
dec
dec
pushf
fsubrs
daa
pop
pop
push
bound
push
imul
int3
scas
push
push
cmp
inc
xor
cld
pop
gs
dec
nop
lret
leave
leave
pop
add
dec
pop
sahf
out
add
pop
fcmovnbe
data16
push
push
cmpsl
fcoml
sbb
xchg
add
push
mov
push
inc
adc
xor
idiv
ficomps
or
cmpb
pop
add
push
xor
jne
push
out
mov
push
mov
mov
mov
sbb
xchg
and
mov
out
xor
add
stc
add
roll
imul
rcl
xchg
movl
or
outsb
js
mov
dec
sub
jbe
dec
push
push
cmp
sbb
xlat
cmpsl
mov
notl
add
add
dec
mov
add
loop
sub
push
or
sub
push
popa
pop
add
and
cmp
iret
xor
ljmp
ss
decl
and
xor
push
mov
pop
fisttpll
shl
scas
or
and
test
inc
fistps
addr16
and
addl
sub
mov
aas
testb
loopne
adc
and
xchg
push
add
cmp
into
inc
dec
vzeroupper
iret
xor
testb
dec
jns
pop
push
cli
stos
push
cmpl
ret
inc
add
pushf
dec
pop
mov
jbe
fs
xchg
jne,pt
mov
xchg
dec
dec
lret
jae
cmpsl
add
shll
testl
jo
stos
mov
mov
xor
inc
add
pop
dec
add
insb
push
pop
mov
mov
jo
aas
jbe
out
sbb
xor
xchg
sub
ljmp
testl
out
pop
add
jns
add
xchg
sbb
je
dec
imul
jb
xchg
push
imul
testl
jbe
lds
cld
sub
gs
cltd
sub
lcall
pop
and
ja
jle
inc
pusha
div
lret
pop
sbbb
sbb
push
pop
push
mov
push
popa
ljmp
sbb
shld
sbb
in
cmpb
push
aam
das
and
repnz
cs
imull
dec
cmp
das
pusha
or
xchg
mov
aad
inc
lock
call
adc
inc
pop
jbe
mov
mov
mov
inc
or
jo
or
cmpsb
fsts
jecxz
mov
or
add
out
cmpl
push
xlat
dec
roll
arpl
shlb
ret
cmp
jp
mov
mov
shl
andb
xchg
xchg
iret
push
rorb
mov
pop
addr16
enter
push
int3
push
sub
addb
and
sbb
cmp
push
adc
fists
xor
inc
push
jb
mov
and
inc
inc
sti
push
and
dec
mov
xchg
stos
add
ds
mov
lods
jecxz
jg
lahf
jmp
xchg
push
jg
es
fsubs
xchg
cltd
sbbb
ret
movsl
pusha
xchg
or
lcall
ficompl
test
int
jnp
loope
or
pop
inc
push
push
sbb
cwtl
jmp
jp
call
sbb
inc
add
push
jle
cmp
add
or
insl
mov
iret
imul
or
sar
and
lods
sub
fbstp
in
sub
pop
xchg
inc
enter
or
pop
loop
pop
mov
add
pop
adc
xchg
or
pop
mov
mov
cmp
hlt
pop
ret
repz
addr16
nop
les
cmp
pop
pop
and
jle
daa
push
jno
loopne
inc
ds
adc
es
inc
addr16
sub
rep
adc
push
decl
arpl
push
das
or
testl
das
xlat
add
cmp
mov
outsl
pop
jo
mov
lcall
outsl
dec
jb
and
add
addr16
fs
fwait
push
sub
jmp
sbb
ret
rcll
stos
sbb
pop
sahf
aaa
adc
enter
or
out
xchg
push
xchg
push
leave
sbb
inc
icebp
jg
push
cmp
jle
mov
cli
loop
test
mov
or
daa
add
push
insb
test
jns
jb
xchg
pop
enter
push
dec
mov
dec
jge
fs
sbbl
cmp
xchg
inc
push
pop
xchg
push
fsubp
sub
cs
test
fstl
or
hlt
sbb
ret
mov
fisttpl
int
and
mov
sub
popa
dec
pop
mov
mov
mov
mov
push
out
adc
inc
xchg
scas
mov
jbe
jbe
inc
cmp
in
rorb
mov
add
xchg
push
jge
adc
lock
movsl
outsl
xor
add
xor
jg
add
outsb
icebp
pusha
xchg
imul
pop
jb
dec
repz
or
or
into
add
inc
pop
data16
fnclex
loope
sub
sub
loopne
pop
push
clc
cmp
dec
sub
push
ret
icebp
mov
cmp
xchg
iret
test
mov
xchg
pop
or
push
sbb
sub
add
movsb
bound
adc
inc
jnp
jl
jle
das
adc
add
add
cmpsb
ss
ror
mov
outsb
push
aad
jbe
sub
test
push
mov
push
sahf
insb
mov
aaa
xchg
mov
xchg
in
dec
cmpsb
out
mov
xor
dec
gs
cmpb
pop
sbb
xor
mov
fcompl
movsl
cmp
cmp
push
sub
daa
add
out
pop
ficompl
shr
pop
lret
jp
dec
jp
cmpsl
sub
pushf
sub
inc
scas
jae,pn
mov
lret
push
cmpb
pop
ljmp
mov
nop
xchg
sbb
mov
pop
and
add
xor
push
addb
inc
std
push
orb
push
call
cwtl
lcall
jns
xchg
jbe
adc
clc
jbe
push
and
mov
cmpsb
push
push
xor
incl
imulb
rorb
lcall
fildl
sbb
shlb
pop
xchg
mov
push
bound
std
nop
mov
add
xchg
das
jle
sub
bound
xchg
imul
mov
and
fimuls
mov
inc
mov
mov
add
mov
xchg
fisubl
pop
pop
cmp
sbb
rcll
cmpsb
subb
das
inc
jl
mov
sub
dec
ja
cli
xchg
fiaddl
xchg
mov
insb
movd
mov
and
imul
and
or
or
hlt
xchg
xchg
imul
nop
outsb
push
pop
dec
movhps
pop
mov
aaa
jo
cltd
scas
mov
es
and
nop
jmp
bound
arpl
cli
pop
xor
pop
xor
ss
fdivs
in
pop
addr16
add
test
gs
push
jae
lea
pop
das
cmp
push
mov
mov
jp
cmp
sbb
and
lret
leave
ficoms
xchg
mov
push
push
out
lea
xchg
inc
ss
sub
inc
push
test
aas
and
js
jbe
lcall
outsb
xchg
pop
stc
pop
xor
mov
inc
das
mov
mov
or
stos
int
cmp
push
dec
mov
ss
enter
push
or
ljmp
sti
fidivrl
notb
mov
rcll
jne
push
or
jecxz
arpl
mov
push
sub
sbb
or
data16
jns
daa
mov
xor
lret
and
mov
dec
or
js
mov
nop
mov
das
inc
test
xchg
arpl
xor
fisubs
cmp
lock
push
movsb
rol
jb
scas
out
adc
ret
sbb
pop
addr16
jle
or
pop
das
outsl
push
add
inc
cmp
das
mov
pop
test
cmp
pop
cwtl
or
outsl
mov
jbe
push
xor
fnstsw
sub
adc
sti
pinsrw
js
add
addb
pop
imul
lret
cmp
add
sahf
adc
push
out
sub
pop
sbb
out
push
cli
pop
orl
dec
add
in
lahf
or
push
xchg
xor
cmp
rcll
orb
lret
pusha
add
das
pop
movsl
bound
sbb
xchg
stos
dec
fisttpll
add
ds
add
jb
xchg
out
push
jbe
out
jp
sbb
scas
sbb
arpl
or
push
inc
nop
xor
repnz
and
subl
ds
jmp
jo
ret
mov
mov
vphaddbd
popaw
mov
or
test
and
jmp
push
or
add
pop
and
test
xchg
inc
mov
sub
add
out
popa
loope
add
jae,pt
stos
mov
add
sub
in
sub
popf
std
inc
and
sbb
add
xor
test
mov
add
lods
inc
inc
add
xchg
xchg
push
jecxz
ljmp
pop
or
adc
inc
mov
inc
push
add
mov
sbb
punpcklbw
pop
add
pushf
andl
push
sbb
inc
in
jmp
in
outsb
fisubrl
jl
mov
push
xor
or
or
add
in
ret
mov
lock
sbb
mov
pop
inc
dec
test
in
mov
outsl
adc
mov
mov
or
mov
inc
and
fs
or
imul
push
rclb
or
daa
inc
and
out
mov
dec
dec
stos
cs
out
or
and
loope
mov
orb
add
movsl
mov
aaa
or
pop
int
jbe
jg
sub
imul
push
ret
rolb
jae
das
xchg
or
loopne
loop
addr16
dec
lcall
sub
mov
ja
push
jne
popa
jp
loop
pop
pop
arpl
jb,pn
cs
push
cmp
jle
mov
add
mov
fildl
inc
call
pop
adc
pusha
pop
lcall
xor
xor
xor
xor
enter
xor
xor
mov
xor
xor
xor
xor
mov
aaa
sahf
aaa
divb
add
aaa
cmp
push
cmp
insb
cmp
xchg
push
incl
xor
xor
xor
or
inc
pop
cmp
cmp
cmp
cmp
cmp
jg
cmpb
cmp
cmp
cmp
push
cmp
xchg
cmp
cmp
cmp
call
pop
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
adc
dec
mov
movsl
ds
fnstsw
call
aas
inc
aas
cmpb
xchg
cmc
les
xor
xor
xor
mov
xor
xor
dec
xor
push
xor
xor
mov
xor
or
pushl
xor
pop
xor
jp
xorb
xor
pushl
xchg
divl
and
xor
xor
push
xor
xchg
ss
ss
aaa
cwtl
pushl
mov
cmp
cmp
push
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
movsb
ds
lret
adc
aas
pop
aas
test
fidivl
sbb
cmp
jno
sbb
cs
addr16
xor
lahf
aas
xor
outsb
xor
jae
xchg
xchg
shll
xor
xor
clc
ljmp
xor
xor
or
push
xor
xor
xor
xor
loop
scas
xor
in
xor
pushf
aaa
jmp
inc
jmp
jnp
xchg
sub
cmp
lcall
cmp
pop
ds
mov
clc
jmp
idivb
sahf
xchg
xor
aam
cs
xor
shll
xor
xorb
inc
xor
lret
xor
xchg
mov
mov
aaa
mov
test
add
or
cmp
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
ljmp
xor
cmp
cmp
push
cmpl
and
loop
mov
imul
xchg
cmp
cmp
cmp
cmp
cmp
mov
mov
cld
mov
sub
inc
aas
xchg
aas
js
cmp
repz
xor
xor
inc
xor
dec
xor
xor
cmp
cmp
sub
mov
cmp
cmp
cmp
cmp
cmp
xchg
add
cmp
insl
cmp
adc
ds
loopne,pt
inc
aas
add
inc
aas
lret
aas
sarb
fidivrl
or
add
xor
xor
cwtl
cmp
cmp
cmp
cmp
dec
arpl
clc
cmp
push
sub
nop
add
pop
lock
xor
in
xor
jns
test
sbb
dec
xor
xor
xchg
xor
int3
aaa
shlb
aam
fdivs
fdivl
loopne
in
repz
or
mov
idivl
xor
inc
cmp
mov
xor
push
cmp
cmp
cmp
mov
cld
fbstp
out
add
jge
xchg
xor
dec
xor
hlt
lcall
adc
sbb
jae
mov
mov
stc
xor
xor
xor
xor
xor
xor
jge
xorl
lcall
cmp
sarl
cld
cmp
sar
jg
cmp
cmp
add
cmp
sub
xchg
mov
jle
cwtl
aas
mov
test
decb
cmpsb
xor
jle
ja
cld
xor
xor
ljmp
adc
sbb
inc
dec
add
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmpsl
xor
in
xor
xor
add
out
repnz
push
or
cmp
cmp
or
test
aaa
inc
clc
int3
ds
ds
ljmp
stc
aas
incl
and
xor
push
xor
xor
xor
xor
inc
aaa
push
aaa
popa
aaa
insb
aaa
lea
xchg
out
cli
jg
lock
add
push
cmp
cmp
xchg
mov
mov
repnz
outsl
cmp
dec
cmp
cmp
cmp
cmp
cmp
or
aas
addr16
aad
rcl
or
fwait
add
add
sbb
xor
in
clc
in
cmp
cmp
out
dec
cmp
cmp
dec
std
xchg
xor
lahf
and
dec
xor
xor
xor
xor
xor
cli
xor
and
xor
xor
aad
aaa
sub
push
xor
pop
xor
push
outsl
xor
add
xor
jle
xorl
jbe
xor
xor
cmp
mov
shll
xor
xor
xor
cmpsb
out
cld
jg
divb
xor
xor
xor
xor
xor
xor
or
xor
pop
xor
cli
mov
xor
xor
mov
nop
xor
call
jp
mov
xchg
shll
pop
aaa
mov
cmp
jg
ja
cmp
xchg
cmp
cmp
adc
sahf
cmp
cmp
outsl
cmp
cmp
scas
add
cmp
cmp
clc
mov
into
cmp
loop
in
cmp
clc
cmpsl
pop
xor
adc
sbb
pop
dec
sub
xor
ss
ret
ds
ds
ds
ds
ds
ds
jl
cmpl
ljmp
mov
mov
ds
dec
ds
fistpll
in
ljmp
ds
or
adc
sbb
and
daa
aas
sub
ljmp
dec
aas
push
aas
push
aas
pop
aas
pop
aas
data16
insl
aas
decl
lock
aas
cmpb
aas
nop
aas
xchg
aas
push
test
aas
mov
icebp
inc
aas
lret
aas
aam
fstpt
loope
out
jmp
lock
idivl
cs
push
mov
or
adc
sbb
and
or
scas
out
jle
xor
xor
nop
xor
jle
addr16
xor
pop
xor
addr16
push
mov
pop
mov
nop
xor
incl
mov
mov
mov
xor
xor
xor
xor
xor
xor
jp
inc
lods
sahf
adc
xor
icebp
scas
es
xor
and
xor
test
mov
jo
daa
ret
dec
xor
mov
dec
mov
push
xor
xor
xor
jle
push
sub
and
jp
mov
add
xor
add
leave
cmp
dec
cmp
cmp
cmp
hlt
sbb
aas
xor
xor
aas
cmpsb
aas
jg
jg
xor
das
out
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
mov
aas
and
and
aas
pop
pop
mov
adc
test
jl
push
push
or
xor
xor
inc
xor
cs
xor
ds
ja
mov
subb
xor
push
inc
lock
out
mov
aaa
loop
jmp
pop
cmp
cmp
cmp
jae
xchg
cmp
cmp
cmp
lock
xchg
cmp
cmp
cmp
cmp
pop
or
mov
cmp
cmp
xchg
js
outsl
pop
sub
cmp
cmp
lock
incb
stos
xor
xor
scas
scas
jg
aaa
mov
aaa
inc
cmp
push
cs
cmp
cmp
ret
push
cmp
jl
test
mov
lcall
nop
cmp
mov
cmp
cmp
sarb
cmp
cmp
cmp
fdivrs
fdivrl
loopne
in
call
cli
add
lock
cmp
cmp
out
cmp
cmp
pop
std
incl
cmp
lahf
cmp
cmp
into
sub
pop
dec
orl
sbb
xchg
popa
xlat
aas
lds
out
xor
xor
outsl
pop
mov
add
xor
aaa
jle
xchg
cmp
ret
loopne
push
ret
cmp
cmp
loope
and
pop
xchg
add
sarl
and
ljmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
mov
pop
add
pop
cmp
mov
rcrl
notb
cmp
xor
jge
xchg
xor
xor
xor
xor
adc
pop
jmp
xor
sahf
fs
and
dec
ss
push
aaa
out
aaa
adc
sbb
sub
pop
cmp
cmp
cmp
out
cmp
cmp
cmp
dec
clc
jmp
cmp
pop
cmp
cmp
aam
out
cmp
lcall
or
cmp
jge
inc
fstpt
out
je
loop
inc
adc
push
push
pop
cmp
pop
push
sbb
xor
cli
loope
pop
addb
ret
push
xor
fs
icebp
or
inc
mov
arpl
xor
xorb
and
inc
mov
xchg
cld
add
sub
andb
call
jbe
cmc
aaa
cmpl
lds
jg
sarb
add
pop
cmp
cmp
cwtl
cmp
test
lods
clc
or
mov
cmp
push
fidivrl
hlt
dec
sbb
aas
clc
aas
cld
fbld
sti
mov
xor
adc
add
cmp
mov
jno
inc
popf
pop
xor
lret
xor
xor
xor
xor
cmp
cmp
jmp
inc
push
xor
xor
xor
xor
loope
jl
xor
jl
test
mov
ljmp
mov
xor
dec
aad
fists
outsb
ss
arpl
jae
mov
pop
aaa
das
aaa
mov
sahf
cmp
pop
jge
cmp
push
sbb
push
sarb
loop
js
inc
adc
xor
fmull
push
xor
mov
adc
lock
xor
cmp
call
roll
loope
xor
movsb
mov
notb
jmp
or
and
jp
cmpb
cmp
add
cmp
inc
cmp
into
or
xchg
cmp
xchg
cmp
cmp
orb
jl
xchg
adc
les
int3
outsb
ret
loope
push
sbb
or
xor
data16
xor
xor
xor
cli
scas
xor
xchg
xorb
shl
and
lds
filds
add
dec
xor
jnp
xor
ret
mov
dec
cmp
lods
fimuls
loope
dec
insb
push
cmp
cmp
dec
jg
out
mov
fnstcw
jmp
mov
cmp
std
fists
xchg
mov
cmp
rorb
inc
ds
loopne
fwait
icebp
jne,pt
mov
aam
daa
aas
push
aas
cmpl
mov
push
push
ljmp
rorl
pop
andl
loop
lock
mov
add
xor
or
lock
xchg
push
xor
fidivrs
call
icebp
cmc
cmp
pop
xchg
cmp
cld
scas
and
cmp
cmp
cmp
pushf
ds
adc
in
adc
jae
or
xchg
out
xor
mov
dec
xor
pop
mov
lock
lahf
aaa
movsb
mov
aaa
mov
mov
mov
aaa
mov
aaa
enter
in
cmc
or
test
hlt
aaa
clc
aaa
cld
out
add
or
or
ljmp
pop
sub
sbb
sbb
and
and
dec
cmp
les
lret
cmp
cmp
cmp
cmp
jg
lea
xor
pop
push
cmp
and
sub
dec
clc
es
xor
xor
cmp
sbb
sub
clc
cld
ds
aas
repz
mov
xor
xor
xor
inc
std
xor
mov
inc
xor
xor
xor
xor
test
push
dec
mov
inc
xchg
aaa
mov
jle
decb
cmp
inc
cmp
xchg
adc
sub
add
das
push
pop
out
shlb
out
xor
clc
lahf
xor
xor
movsb
xor
xor
testb
sahf
xor
mov
cmp
cmp
cmp
jp
mov
mov
cmp
aad
fst
pop
sahf
ret
ja
push
cmp
cmp
cmp
jecxz
cmp
in
xchg
sbb
xchg
ds
cld
add
ja
push
xor
jg
jmp
scas
aas
xor
nop
xor
xor
add
xor
test
incl
mov
cs
push
cmp
cmp
fbld
sarb
jns
icebp
cmp
imul
outsl
add
pop
push
mov
imul
xor
pop
sub
cmpsl
inc
mov
cli
xor
xor
xor
xor
clc
mov
push
xor
sti
ss
adc
das
cmp
jb
outsb
inc
add
rcll
cmp
xor
cmp
mov
cmpsb
mov
jmp
inc
mov
hlt
hlt
xor
sub
lcall
inc
xor
xor
aad
divb
je
std
adc
xor
xor
lahf
inc
jno
call
xor
xchg
ss
dec
pop
aaa
outsl
clc
ljmp
cmp
insb
cmp
cmp
cmp
fdivrl
jecxz
out
shrb
cmp
xchg
cmp
cmp
cmp
mov
inc
scas
mov
fnstcw
dec
dec
lcall
mov
clc
cmp
xchg
xorb
ret
ds
into
xor
aas
and
cmpl
xor
imul
lods
xor
xchg
jle
mov
leave
xor
mov
cld
pushl
or
lods
xor
xor
jecxz
cld
xor
lods
adc
ds
mov
xor
stos
xor
jl
ss
cmp
stos
cmp
adc
lahf
cmpsl
js
mov
fidivs
xor
mov
cld
and
xor
xor
pop
movsl
add
lret
dec
lret
pop
mov
mov
loop,pn
cmp
arpl
xchg
pop
test
cmp
fsubrl
ret
adc
mov
ds
dec
lods
mov
enter
push
pop
xor
jg
repnz
xor
xor
inc
xor
sub
decl
ficompl
xor
xor
xor
push
sub
jb
jg
cmpsb
xor
test
mov
mov
out
sbbb
cmp
cmp
jge
lcall
xchg
out
into
xor
aas
call
xor
sbb
xchg
ss
int
jp
div
aaa
and
mov
ds
adc
push
cmpl
xor
xor
ds
mov
fmull
std
jg
adc
outsl
xor
xor
xor
ja
inc
dec
mov
xor
xor
xor
push
cli
incl
push
jmp
cmp
pop
ds
cs
data16
mov
adc
mov
test
lar
sub
add
sbb
xor
xor
xor
push
shlb
xor
xor
xor
cli
ja
loop
mov
lret
inc
shll
sub
cmp
std
inc
xchg
xchg
sbb
xor
ss
inc
mov
mov
js
jg
jg
incl
cmp
sub
inc
cmp
cmp
repz
rorl
test
mov
pop
xor
xor
ds
xor
or
xor
les
xchg
aaa
xor
fsts
add
roll
and
xor
test
xor
mov
jb
rolb
sbb
cmp
test
xor
dec
mov
ljmp
daa
ss
ss
pop
aaa
add
out
sub
loop
mov
cmp
cmp
dec
rcll
and
push
lcall
aas
out
fistpll
xor
mov
xor
fidivs
dec
xor
sbb
xor
mov
mov
mov
ss
scas
mov
push
fidivrl
incb
cmp
stc
cs
cmp
orb
les
add
adc
adc
sbb
inc
jmp
inc
xor
xor
xor
sbb
subb
sub
stos
aaa
pop
fisubrs
jle
lret
cmp
cmp
cmp
jle
push
xlat
and
cltd
cs
cmpsb
outsl
mov
xchg
xor
xor
inc
xchg
jns
mov
cmp
outsl
cli
aaa
inc
cmp
jo
test
cmp
jb
pop
cmp
push
lea
out
sub
out
sbbb
add
add
xor
xor
xchg
shl
shlb
pushf
xor
pop
jo
mov
pop
xor
mov
cmpsb
movsb
cmp
cmp
pop
add
cmp
cmp
and
mov
data16
add
xor
adc
sub
stos
inc
pusha
xor
dec
pop
imul
xor
mov
xor
xchg
push
lods
aaa
leave
aaa
jmp
or
and
dec
cmp
adc
lds
jp
cmp
cmp
into
xchg
call
into
stos
cmp
lret
cmp
insb
js,pt
test
mov
hlt
aad
fcmovu
cmp
xchg
lock
xchg
mov
xor
and
dec
xor
addl
into
push
mov
hlt
adc
cmp
mov
out
cs
add
adc
or
sbb
dec
sub
mov
stos
mov
shlb
clc
or
pop
xchg
cmp
cmp
jne
fldl
cmp
pop
cmp
cmp
add
aaa
loop
push
or
sbb
xor
xchg
pop
xor
xor
inc
xor
ss
ss
ss
js
aas
push
sbb
jns
inc
cmp
dec
jo
scas
cli
push
cmp
pop
cmp
cmp
jo
cmp
inc
jg
jp
cmp
inc
cmp
std
cmp
test
aam
sub
and
mov
sbb
push
fdivl
push
xor
xchg
aaa
out
adc
decb
lret
cmp
cmp
dec
push
loope
dec
mov
or
cltd
xor
es
ret
add
idivb
stos
pop
mov
into
aaa
fisttps
or
cmp
jae
push
mov
iret
adc
sub
push
movq
movsl
cmp
pop
daa
in
sarb
aas
cmp
pop
cmp
mov
out
cmp
rcl
js
cmp
cmp
out
mov
test
xchg
jo
lock
cld
aas
push
aas
xchg
mov
inc
rolb
test
int
sub
ret
xor
xor
xchg
mov
enter
xchg
or
stos
lock
xor
jb
lret
mov
shll
xor
sbb
push
ss
aaa
loopne
test
inc
scas
inc
xor
loopne
pop
sar
cmp
cmp
cli
or
jns
xorl
movsl
cmpsb
push
es
out
mov
outsb
loop
cmp
aas
movsb
mov
bound
je
mov
xor
xor
es
xor
xor
orb
call
pop
xor
lcall
pop
xor
int3
mov
lcall
mov
xor
outsl
mov
lahf
cmpsb
mov
cmp
cmp
aam
add
mov
push
adc
pop
cmp
call
repnz
cmp
pop
xor
inc
or
cmp
mov
iret
cmp
pop
mov
cmp
cmp
cmp
inc
cmp
jg
xchg
stos
mov
addb
ret
lcall
cmp
cmp
jbe
cmp
cmp
call
stos
mov
pop
cmp
jns
cmpb
arpl
cmp
add
mov
ds
addr16
ds
call
cli
push
aas
pusha
aas
push
js
cmpsl
repnz
outsl
xor
inc
jo
xchg
cmp
mov
lcall
xchg
mov
loopne
jg
mov
xor
xor
xor
mov
ret
pop
mov
xor
xor
stos
out
xor
ret
and
inc
xor
aas
aad
outsl
push
imul
xor
sub
inc
xchg
add
ss
rol
ss
ss
aaa
mov
push
sarb
jecxz
sbb
add
pop
mov
call
xor
xchg
xor
cmpsb
cmp
pop
fildll
test
lods
and
and
cmp
imul
aas
mov
leave
out
call
adc
sub
mov
mov
pop
add
xor
xor
xor
pop
xor
stos
or
mov
leave
bound
pusha
rcrl
bound
xor
cs
movsb
mov
fwait
ds
mov
sub
cmp
cmp
lret
dec
cmp
cli
inc
jne
aad
add
pop
scas
or
scas
adc
adc
pop
push
mov
lret
sahf
cmpsl
jmp
mov
jge
xor
xor
cmpsl
add
sbb
inc
dec
aas
push
filds
ljmp
xor
mov
xor
or
or
xchg
pop
or
ret
jb
sahf
lock
ss
scas
cwtl
ss
mov
pop
test
lods
fidivs
shlb
fwait
dec
lret
shlb
aam
fdivl
loopne
stos
fcmovnbe
ss
in
cmp
add
cmp
jno
inc
cmp
cmp
mov
aas
inc
outsb
je
movsb
jle
xchg
push
adc
aaa
mov
xor
sub
insl
inc
xchg
dec
scas
cmpsb
ds
xchg
mov
cmp
in
xor
nop
xor
xor
lcall
cltd
adc
push
in
add
sbb
das
xchg
inc
jne
sub
jae
mov
icebp
cmp
push
cmp
mov
push
xchg
mov
aas
jb
rclb
xor
outsl
cmpsb
icebp
mov
or
sub
push
xor
jbe
and
inc
xor
nop
jmp
pop
xor
xor
xor
xor
xchg
and
mov
push
mov
aaa
dec
aaa
pop
aaa
bound
cmpsl
aaa
mov
mov
pop
ljmp
std
cmp
cmp
jmp
push
cmp
stos
mov
cmp
sbbb
sarl
ds
push
ss
rolb
repz
sbb
mov
xor
adc
lcall
jmp
aaa
xorb
aaa
daa
mov
scas
imul
cmp
das
movb
cmp
cmp
cmp
loop
rclb
ds
mov
cmpsl
scas
adc
dec
loop
aas
lock
add
rcrb
daa
pop
shlb
faddl
in
in
xor
inc
test
cmpsb
jge
lcall
cmp
loope
push
cmp
lcall
cmp
cmp
test
xchg
cmpsl
xor
movsl
sbb
push
shlb
ss
adcb
lcall
ficompl
add
leave
mov
fiadds
sbb
xchg
cmp
push
push
xor
xor
xor
xor
xor
cmp
cmp
add
sbb
xor
lret
daa
cmp
inc
xor
ficoml
aaa
cmp
jg
cmpsb
leave
aaa
xlat
aaa
fnsave
clc
mov
cmp
cmp
cmp
push
dec
sbb
loop
add
sub
and
cmp
loop
fwait
aaa
cmpsb
outsb
sbb
sarb
ret
dec
cmp
jle
xchg
and
xchg
shll
stos
ds
push
loopne
cmpsb
pop
aas
jl
xchg
loopne
js
ss
iret
or
cli
mov
jmp
sbb
fs
push
pop
jo
je
mov
mov
pusha
lods
mov
adc
xor
jo
icebp
dec
rorb
sub
cmp
adc
mov
cs
push
jle
mov
pop
ds
sub
xchg
sbb
test
inc
aaa
rcrb
aaa
cmp
inc
scas
iret
cmp
lock
mov
push
add
pop
cmp
cmp
je
lret
imul
ret
aas
sarl
out
clc
cmp
push
xor
std
pop
mov
jg
leave
push
loop
mov
inc
out
pop
xor
adc
jge
test
jae
lock
mov
data16
and
outsl
aam
dec
loop
or
hlt
xor
cmp
pop
filds
xchg
out
or
out
rclb
jp
loop
or
xor
addl
xor
icebp
int
outsb
divb
and
sub
cwtd
cmp
cmpsb
xor
cmpsl
xchg
cmpsb
jp
test
loope
sub
rcrb
lock
dec
cmp
cmp
pop
decl
cmp
cmp
xchg
xchg
shll
add
cmp
cmp
inc
cmp
sub
aas
outsb
out
mov
inc
xchg
fcmovb
mov
mov
rolb
imul
xor
xor
xor
jle
mov
cmpsb
mov
xor
sub
xor
xor
mov
pop
out
dec
or
push
gs
test
mov
jo
iret
test
sarb
fdivrs
fdivr
sub
xlat
cmp
mov
push
xorb
cmp
pop
pop
mov
lcall
cmpb
cmp
cmp
jmp
xchg
push
cmp
cmp
ds
shll
sahf
fisubs
cmp
inc
or
rcll
fcompl
xor
or
pop
xorb
xor
jle
xchg
xor
outsb
pop
outsb
pop
je
lods
mov
mov
out
adc
movsb
xor
out
adc
xor
xor
js
push
add
lds
not
pop
pop
add
mov
mov
cmp
sbb
dec
std
cmp
sbb
sbb
imul
cmp
xchg
sbbb
out
test
test
cld
mov
xchg
test
rorl
sub
mov
cs
pop
or
cmp
cmp
cmp
push
test
lock
sub
sub
sbb
dec
mov
adc
fbld
add
fisttps
mov
xor
mov
sub
lcall
push
divl
dec
cmp
inc
ss
bound
push
cmp
ret
out
js
mov
aaa
mov
aaa
inc
mov
add
lret
xchg
jle
jb
pop
cmp
pop
cmp
mov
roll
sub
cmp
xor
jnp
mov
cmp
cmp
or
test
andl
xor
daa
stos
rcrb
xchg
jb
scas
push
movsl
outsb
push
or
xchg
push
xor
add
jne
jl
addb
inc
mov
or
scas
add
mov
push
push
loop
pop
mov
xchg
adc
and
cli
cmpsl
or
xchg
aad
repnz
clc
test
ss
pop
movsl
mov
xor
xor
xor
xor
xor
xor
fdivs
xor
test
adcb
xchg
xor
test
fsubrl
clc
xor
subb
lock
aaa
dec
aaa
or
jns
lods
push
out
aaa
das
rcr
mov
push
cmp
jns
mov
xchg
cmp
rcll
push
cmp
fistpll
out
cmp
cmp
iret
cmp
cmp
push
outsl
adc
arpl
cmp
cmp
cmp
call
ret
cmp
xlat
cmp
adc
sbb
or
add
inc
ds
mov
sub
jl
scas
jb
cmp
inc
je
add
jle
sbbl
scas
fdivrs
fistpll
and
repnz
aaa
rorb
lea
inc
xor
jbe
xchg
xor
ret
pop
sub
xor
xor
stos
jo
sub
sub
inc
frstor
pop
mov
cmp
fbld
inc
cmp
data16
mov
stos
add
jb
cmp
jo
pop
pop
fbstp
push
jp
mov
xor
mov
movsl
cs
pop
lcall
mov
cmpsb
out
sub
insb
push
add
mov
dec
xor
mov
jne
ds
insb
idiv
xor
aam
add
cmp
xchg
xchg
pop
call
xor
xor
add
mov
xchg
mov
mov
xor
xor
xor
xor
fmulp
clc
push
lods
xchg
mov
loope,pn
jmp
push
mov
cs
into
inc
xchg
mov
lds
fdivrp
xor
test
sarb
decl
in
ss
ss
aaa
sbb
sub
jmp
lock
dec
inc
addl
xor
and
add
pop
adc
push
std
jg
xor
xor
xor
pop
xorb
xchg
xor
xor
cmpsb
js
push
loopne
xor
sub
bound
bound
sbb
push
decb
cmp
aas
cmp
push
cmp
data16
ds
inc
mov
cmp
shrb
out
cli
data16
cmp
pop
cmp
test
addl
mov
jbe
cmp
push
mov
ds
jp
xlat
mov
xchg
mov
sbbb
inc
lods
aad
pop
sbbb
add
cmc
shll
push
jg
xor
xor
cmp
ja
out
xor
xor
cmp
out
pop
or
xor
push
mov
add
add
and
ljmp
or
fdivrl
add
ds
mov
push
inc
pop
cs
mov
mov
mov
mov
mov
out
aaa
bound
cmp
and
xor
test
xor
data16
bound
inc
mov
push
insb
cmp
cmp
sbb
out
adc
fdivrs
in
stc
cmp
push
cmp
pop
jge
imul
push
xor
mov
mov
adc
adc
jecxz
or
rolb
ljmp
xor
fnstenv
addr16
jb
ss
pop
mov
andl
or
sbb
sub
cs
pusha
aaa
stos
stos
ds
xchg
shl
bound
cmp
cmp
aad
icebp
cmp
push
lahf
cmpl
lahf
or
mov
mov
dec
mov
cmp
cmp
cmp
adc
sarb
mov
imul
cmpsl
sub
sbb
negb
adc
dec
cmp
jge
push
mov
mov
or
pop
pop
fsubl
sbb
and
xor
cmp
push
cli
push
jbe
xchg
cwtl
aaa
push
or
mov
xchg
cmp
cmp
fildll
lret
sbb
cmp
and
data16
nop
xlat
push
add
mov
outsl
aam
inc
in
cmp
add
pop
pop
mov
ds
push
into
aas
aam
lock
scas
sbb
push
xor
mov
inc
or
fldt
getsec
add
pop
aaa
data16
jno
jnp
xchg
xor
aaa
rorl
int3
mov
pop
mov
inc
add
sbb
cmpsb
aas
mov
lret
enter
jecxz
loopne
or
cmp
cmp
cmp
loope
in
xchg
sbb
in
ds
adcb
add
add
and
pop
jb
cmp
shlb
fiadds
sbb
xlat
pop
cmpb
cld
je
lock
xor
mov
xor
cmpsb
lahf
xor
push
xor
loop
jno
rolb
xor
push
inc
ja
loop
push
ss
sub
mov
fistpl
cmp
pop
cmpsb
push
ljmp
cmp
cmp
cmp
push
imul
and
mov
arpl
mov
subb
in
xor
addb
add
scas
mov
mov
sbb
mov
lcall
sub
mov
add
xor
mov
push
pop
push
out
nop
pop
clc
add
test
cmp
mov
and
add
mov
push
cmp
cmp
subl
lods
rol
daa
jp
pop
dec
cmp
push
xchg
mov
jl
aas
mov
mov
aas
call
mov
js
push
dec
xor
jl
adc
pushf
xchg
pop
shll
cltd
mov
add
jno
xor
int3
repnz
jmp
pop
dec
mov
adc
pop
xor
push
ss
ss
loop
inc
mov
sub
aaa
jmp
inc
xor
jns
stos
cmp
loop
cmp
out
rclb
cmp
into
or
inc
push
fdivrl
loop
fs
cld
pop
mov
std
xor
xor
xchg
cmpb
dec
push
mov
ret
xor
adc
sub
ss
fidivrs
fidivs
out
and
xor
cmp
lret
add
push
movsl
sub
adcb
mov
stos
inc
sbb
push
scas
cmp
adc
ror
mov
aaa
stos
stos
mov
cld
cmp
add
loopne
cmpsl
cli
aas
mov
mov
inc
test
stos
rcrb
test
scas
xor
mov
dec
jbe
ss
rolb
mov
lock
das
add
push
scas
andb
jle
xor
test
mov
cmpsb
push
push
ss
lret
jle
cli
pop
push
test
sub
test
aad
pop
adc
mov
or
lcall
pop
mov
mov
outsb
clc
stos
push
mov
lods
cmp
cmp
fisttps
mov
jmp
sbb
pop
xor
popa
cmp
push
pop
add
mov
mov
lcall
enter
mov
mov
mov
popf
in
adc
lock
inc
cmpsl
xchg
std
xor
jg
xor
xchg
xor
xor
xor
xor
xchg
xor
mov
rolb
xor
jl
loopne
add
xor
xchg
nop
fdivl
xchg
sbb
push
inc
add
jne
jge
test
and
aad
movsb
bound
adc
adc
xor
inc
adc
mov
test
inc
fsubl
ret
cmp
push
pop
cmp
cmp
cmp
outsb
push
rcrl
mov
inc
or
pop
inc
mov
cmp
mov
lcall
add
push
sub
notl
pop
sub
out
xor
xor
xlat
xor
cmp
out
ljmp
sti
xor
xor
add
ret
adc
add
and
xchg
les
lods
and
jle
xor
push
adc
dec
mov
pop
xor
andl
jecxz
pop
jnp
adcl
ds
xor
jp
fnstsw
add
xchg
jle,pt
stc
aaa
call
outsb
cmp
or
sub
add
xchg
outsb
testb
push
or
pop
data16
adcb
xchg
ljmp
push
lods
scas
sahf
cmp
adc
lret
inc
cld
inc
xchg
xchg
mov
mov
icebp
lds
ret
xor
sub
sub
pop
test
add
fsubrp
xor
orl
push
cmpsb
ss
call
pop
jp
sahf
adc
adc
dec
pop
cmpsb
and
movsb
push
add
fiadds
lock
sub
mov
jp
push
sub
ljmp
xchg
push
add
cmp
cmp
cmp
mov
cmp
pop
mov
addl
icebp
addr16
jg
or
xor
ret
xor
mov
inc
xor
mov
lahf
jmp
cmpsb
sbb
bound
stos
lea
mov
cmp
cmp
cmp
cmp
jle
cmp
js
inc
cmp
add
cmp
xchg
push
cmp
fidivrs
test
jne
movsl
jmpw
shll
movsl
sti
bound
mov
inc
mov
sbb
cmp
loop
ljmp
push
negb
popa
aas
mov
jno
jne
push
mov
lret
test
sbb
push
scas
adc
jbe
divb
push
xor
adc
xor
lret
xor
adc
ss
iret
push
aaa
sbb
and
add
mov
loop
mov
adc
ficoms
daa
cmp
push
adc
cmp
jb
push
cmp
sahf
fnstsw
mov
sub
sbb
cmp
test
orl
xchg
xor
stos
mov
mov
mov
inc
xor
lcall
xor
jmp
xor
mov
out
and
out
outsb
lcall
push
push
inc
sbb
stos
jb
inc
xor
outsb
jo
xchg
xor
dec
mov
xor
mov
xor
cmp
mov
in
add
cmpl
push
ljmp
mov
mov
shl
cmp
inc
js
add
cmp
pop
push
mov
cmp
test
jmp
jle
mov
jbe
xor
bound
dec
aad
stos
icebp
aaa
jecxz
xor
jae
xchg
xor
sti
xor
adc
mov
and
outsb
push
cmpsb
jp
and
push
or
fs
mov
dec
mov
jecxz
adc
or
dec
inc
mov
xchg
cmp
cmp
add
mov
in
inc
and
sub
push
inc
dec
push
cld
cmpb
mov
xor
int
pop
push
xor
xor
and
add
inc
fisubrl
sbb
pop
push
inc
and
inc
mov
stos
jno
jle
stos
cmpsb
mov
loopne
lds
shlb
mov
push
mov
faddl
dec
bound
test
xchg
cli
mov
mov
repnz
mov
inc
xor
cmp
dec
cmpsb
andl
les
sbb
cmp
cmpsl
movsl
lcall
add
xor
rclb
cmp
cmp
adc
or
mov
data16
pop
mov
cmp
mov
mov
or
out
int
cmp
pop
push
pushf
cmp
or
int
ds
push
jp
push
loopne
adc
test
stos
test
lock
inc
ss
xchg
push
mov
es
test
inc
sub
push
and
test
lcall
stos
aam
in
and
cs
out
mov
daa
xchg
ds
imul
push
sbb
movsl
xchg
jp
pop
push
je
mulb
jmp
shlb
add
ss
mov
int
pop
mov
std
ret
into
push
sub
and
inc
icebp
sbb
inc
xchg
scas
xor
cmp
mov
ss
ficompl
cmp
mov
mov
fwait
icebp
outsl
add
out
cmp
cmp
ss
cmp
cmp
cmp
push
add
dec
data16
cmpb
push
pop
push
lods
and
shll
inc
scas
push
pop
mov
xchg
jbe
pusha
inc
sbbl
xchg
loopne
cli
inc
or
adc
cmp
jae
xchg
shrb
cmp
idivl
sub
mov
push
cmpl
andb
jne
aas
ss
mov
aas
pop
or
and
xor
inc
xor
call
test
pop
push
mov
test
fsubrl
xor
dec
push
cltd
stos
push
inc
inc
and
stc
mov
cmp
jns
mov
lcall
jle
xchg
ja
push
xor
ss
ret
sbbb
cmp
or
lcall
mov
or
dec
pop
mov
leave
xchg
clc
mov
cltd
aas
mov
push
push
scas
aaa
pop
xor
mov
ret
scas
rolb
cmp
pop
push
lret
xor
xor
push
test
lods
xor
xor
jns
roll
ds
mov
mov
sub
daa
adc
sub
mov
adc
xchg
je
adc
mov
dec
cmp
push
xchg
out
xor
jno
mov
jb
mov
cli
pop
jns,pt
xchg
jo
push
mov
mov
xchg
mov
loope
or
mov
xchg
addb
jo
mov
sbb
lcallw
jp
outsb
sub
jno
test
es
scas
test
ljmp
ss
out
xchg
jno
ss
pop
jp
aaa
leave
ret
push
pop
mov
mov
cmp
ret
cmpsb
sub
bound
push
jo
rcrb
adc
sbb
popa
mov
jbe
pop
test
adc
les
mov
xor
push
das
jecxz
std
pop
scas
lods
daa
or
popa
push
sahf
popf
popf
inc
adc
in
out
adc
cmp
data16
popf
sarb
sbb
or
xor
loope
cmp
xor
insl
sahf
movsl
cli
clc
es
into
pop
add
adc
fmull
jmp
cs
cmp
ja
sub
jle
and
pop
pop
jb
jbe
inc
test
mov
or
jle
xor
jecxz
scas
nop
push
add
clc
add
mov
loopne
call
ss
mov
add
dec
cmp
stos
and
add
push
xor
cmp
pop
add
aaa
push
aaa
push
arpl
inc
stos
lcall
loopne
aaa
jl
mov
nop
aaa
xchg
add
jno
jbe
aaa
mov
or
cmp
inc
data16
push
cmp
sbb
mov
shll
inc
pop
mov
nop
cmp
lret
js
xorb
test
es
cmp
sub
cmp
mov
pusha
cmp
jo
out
inc
aaa
push
js
cmpb
push
mov
push
cwtl
out
and
add
push
imul
pop
repz
call
lock
mov
sbb
icebp
ss
mov
push
add
push
or
sbb
add
mov
inc
mov
mov
xchg
jmp
aaa
pop
aaa
pop
sahf
gs
insl
adc
xor
mov
mov
and
dec
shr
push
sbb
lock
minps
xor
and
sub
or
shlb
xor
inc
mov
push
sbb
mov
sub
push
or
lea
mov
or
adc
pop
xor
push
mov
inc
sub
dec
stos
push
lcall
imul
int3
push
cld
xor
sbb
xor
fs
jecxz
push
lods
stos
faddl
loop
inc
pop
push
mov
mov
inc
hlt
mov
test
js
ds
adc
pop
add
and
and
add
arpl
aaa
add
cmp
inc
test
xchg
or
mov
cmp
fdivl
push
inc
clc
inc
fstpl
pop
mov
movsb
les
fdivrl
clc
mov
fisubl
inc
mov
jp
jb
jp
pop
aaa
add
cmp
jp
pop
sahf
mov
bound
and
adc
inc
mov
js
xchg
xorb
mov
dec
es
aas
test
pushf
loop
aas
in
add
jnp
xlat
inc
adc
dec
xor
inc
frstor
xchg
xor
xor
sub
pop
xor
mov
jno
xor
mov
pushf
into
int3
add
movsb
xchg
pushl
xor
jno
adc
sub
pushl
cs
fdivrs
xor
dec
inc
xor
or
mov
js
sahf
add
and
cmp
or
pushf
call
mov
subb
insb
and
mov
aam
lock
mov
outsb
adcb
mov
pop
inc
dec
xor
lock
mov
rclb
shlb
shlb
xchg
and
cmp
cmp
dec
shlb
mov
dec
aam
sbb
pop
inc
or
jno
push
push
cmp
pusha
imulb
icebp
inc
mov
jo
js
jl
pop
pop
rclb
or
jp
int3
push
add
in
popl
shr
jbe
cmpsl
add
enter
ljmp
and
push
pushf
add
sub
push
outsb
je
icebp
inc
pop
mulb
fs
cmp
add
pop
loopne
in
pop
pop
int
int3
cmp
insb
sahf
mov
cmp
or
adc
aam
inc
pcmpeqb
mov
je
mov
cvttps2pi
inc
out
insb
jl
and
adc
add
pushf
movsb
sub
adc
or
dec
shr
fdiv
loopne
aaa
sbb
call
cmp
mov
fs
xor
and
sub
adc
mov
lock
mov
jne
cwtl
mov
data16
or
pop
add
sub
sub
pop
mov
nop
rep
xor
scas
mov
ljmp
fdivs
fmull
inc
ja
mov
add
dec
ljmp
shll
psrlq
sub
ja
xor
xchg
xchg
inc
loopne
mov
mov
xchg
push
test
lods
loopne
dec
mov
sub
js
push
andl
push
xchg
add
xor
outsl
add
and
xorb
fldenv
cmp
pop
aad
and
cmp
xor
je
inc
insb
xchg
inc
cmp
je
js
sbb
fstpl
cmp
lcall
push
mov
lcall
test
push
cmp
test
je
xor
fs
xchg
jne
xchg
sub
test
push
or
faddl
or
xor
xor
aas
insb
aas
push
les
pop
sbbb
addb
xorl
fistps
mov
outsb
enter
andl
rclb
lock
clc
pop
add
add
ret
in
jp
arpl
into
xchg
xor
fsub
lcall
insb
add
or
xor
rorb
int3
inc
test
or
push
stos
add
pop
test
rcrb
fcom
dec
call
cmpsb
loopne
adc
test
roll
mov
mov
mov
and
cmp
aaa
fdivrs
adc
push
mov
and
arpl
inc
cmpb
adc
hlt
jae
out
xchg
add
pop
mov
mov
loopne
inc
pop
cmp
xor
pop
out
inc
pop
push
cli
decb
cmp
inc
mov
fmuls
push
call
mov
push
clc
cmp
pop
cmp
dec
cmp
inc
cmp
and
sub
add
cmp
les
pcmpeqb
into
aam
loopne
in
call
dec
lock
cmpsb
test
or
aas
cmp
sbb
and
iret
dec
ds
ds
mov
loop
les
jo,pt
loop
lcall
nop
adc
fisubs
pop
cmp
or
or
popa
mov
inc
push
push
push
aas
or
jb
loop
mov
or
and
stos
inc
out
cmp
adc
pop
add
fs
aas
je
cwtl
mov
aam
add
adc
sbb
inc
inc
mov
sub
dec
push
mov
mov
loop
fwait
es
mov
ljmp
add
xor
fs
xchg
push
div
test
subb
push
xor
sub
lcall
lcall
mov
jno
xor
shlb
inc
and
xor
adc
mov
ss
icebp
xor
or
mov
popf
inc
inc
ss
cmp
push
pop
arpl
mov
push
pop
test
mov
outsb
lock
adc
call
or
lods
add
or
sub
xor
jp
push
test
mov
js
aam
in
je
mov
and
adc
or
add
mov
lahf
loopne
rorb
add
addb
outsb
inc
push
insb
cs
mov
out
fldt
fcmovnbe
mov
mov
mov
push
test
je
dec
or
ret
je
js
and
push
sarb
nop
add
push
inc
xlat
or
push
divb
arpl
pop
test
aaa
inc
mov
adc
xlat
or
lock
xor
inc
xor
xchg
call
inc
js
mov
aaa
push
xor
adc
into
and
push
shrb
inc
xor
cmp
jmp
notb
jecxz
push
lea
pusha
or
insb
xor
push
adcb
mov
addr16
jmp
xlat
shll
shlb
pop
push
or
push
xor
inc
test
cmp
bound
dec
call
jbe
data16
test
pushf
lock
outsb
rorl
lock
dec
nop
or
ds
loop
and
lret
sbb
inc
cmpsb
mov
ds
xor
outsb
cwtl
push
les
rolb
ljmp
inc
dec
hlt
pop
outsl
js
lods
pop
sbb
enter
sbb
and
push
sti
pushf
out
mov
or
and
sub
negb
adc
xchg
movsb
mov
rclb
rolb
fldt
das
scas
js
dec
mov
test
xlat
int3
mov
inc
rorl
addl
mov
cwtl
xchg
enter
add
pop
pop
adc
aas
pop
mov
cmp
imul
paddb
or
sbb
pop
jge
or
ljmp
fisttps
xor
xor
andb
psubusb
aam
notl
xor
or
cmpb
dec
or
pop
add
dec
sbb
cmp
outsl
jl
cwtl
aaa
int3
xchg
jp
mov
filds
test
subb
hlt
mov
fadds
call
add
lahf
pop
jg
adc
inc
lods
pop
enter
xchg
mov
mov
adc
push
loop
loopne
adc
xor
int
sub
fs
xchg
notl
or
push
nop
call
add
xor
sub
ljmp
add
inc
popf
mov
pop
lcall
jb
add
pop
jmp
or
and
movsl
addl
pop
cmp
pop
xchg
dec
mov
mov
xor
push
je
jbe
inc
mov
xchg
sbb
inc
mov
insb
mov
rcl
xor
sbb
sbb
shll
xchg
xchg
jo
inc
xchg
ds
movsb
add
fmuls
hlt
movl
mov
push
pop
bound
shrl
add
and
push
add
hlt
add
add
push
jmp
xor
inc
adc
nop
cmp
pop
dec
ljmp
pop
ljmp
add
jb
mul
fiadds
xor
pop
into
cmpsb
inc
aad
test
pop
aam
push
mov
pop
sbb
push
clc
push
mov
lret
pop
pop
pop
mov
mov
outsb
rol
clc
or
cmp
dec
jb
mov
push
test
aam
cld
sbb
push
xchg
push
or
xor
clc
test
pop
sbb
scas
je
xor
push
sub
rcll
movsb
mov
aam
call
hlt
lret
pop
pop
fnsave
xor
outsb
je
ss
jle
pop
cwtl
cmp
lock
mov
hlt
pop
sbb
mov
push
loopne
mov
push
lea
loop
mov
pushf
ljmp
push
lods
hlt
out
lret
push
lods
cmpsl
out
xor
mov
rclb
je
or
xchg
add
out
fimuls
popl
test
push
fcmovb
inc
add
rcr
lret
dec
rolb
ret
adc
mov
push
lods
loopne
add
adc
sbb
and
sub
inc
stos
test
xchg
ret
cmpsl
fadd
lock
pushf
cli
test
adc
sub
push
add
je
mov
inc
fmuls
lret
jo
stos
add
add
cli
and
mov
pushf
shrb
jo
inc
out
je
fcmovb
aam
cmpsb
arpl
xlat
sub
push
mov
mov
mov
mov
cmp
xlat
rolb
scas
push
bnd
mov
or
out
loop
out
rclb
mov
cmp
and
cmp
mov
push
nop
testb
push
mov
inc
add
push
sub
mov
cmp
jl
mov
mov
out
sti
cld
lock
shrl
pusha
out
mov
xor
out
cmpsb
out
fdivrs
xchg
add
cmpsb
and
jo
call
sub
add
in
clc
cmp
adc
jecxz
pop
loop
test
push
call
inc
movsb
dec
outsb
xchg
push
mov
ds
cmpsl
or
mov
cmp
jbe
imul
cs
js
loop
pop
jp
outsb
xor
dec
les
push
rolb
inc
adc
and
xor
jno
add
inc
subl
push
pushfw
aam
lcall
cmp
fdivl
sar
test
pop
clc
mov
jle
push
orb
dec
lret
jl
jno
insb
xlat
ljmp
in
rolb
dec
out
cmp
inc
add
mov
pushf
scas
lods
out
pop
icebp
cwtl
cmp
js
xor
sbb
xor
inc
loop
sahf
inc
jle
fst
mov
nop
xlat
loopne
mov
sub
ret
ret
push
lret
mov
into
test
jp
aad
lods
idivb
add
call
cmp
shrl
or
sti
clc
stos
sbb
add
push
out
sub
add
jo
out
fists
fbld
test
movsl
ds
loop
fcmove
test
mov
pop
out
les
out
clc
pop
sbb
xor
add
jmp
ficomps
sub
call
cmp
test
push
mov
lret
int3
add
jmp
sub
lcall
push
mov
xor
lea
inc
inc
push
cmp
pop
xor
mov
fmuls
shrl
inc
add
sub
and
sub
rolb
push
pop
je
jecxz
or
mov
push
fadds
add
adc
imull
fbld
rcr
or
mov
ss
mov
jecxz
call
jae
adc
push
jb
es
mov
in
sub
push
sub
xor
cwtl
push
jl
jecxz
adc
sub
cmp
push
bound
das
je
test
adc
mov
les
sbb
cmp
hlt
scas
cmp
push
xor
add
xchg
jl
inc
pusha
xchg
hlt
pop
and
jg
jae
sbb
or
dec
pop
arpl
lods
aam
cld
bound
scas
mov
ljmp
adc
cmp
outsb
fcompl
jg
loopne
dec
enter
cmp
mov
mov
fsubs
push
dec
ljmp
and
je
pushf
rcll
outsb
mov
aam
dec
mov
icebp
jp
push
xor
pop
insb
inc
lods
pop
pop
outsb
lods
data16
cmp
sub
sbb
or
loope
aas
push
imul
add
sub
pop
enter
dec
push
lock
stos
push
test
je
push
rol
adc
loopne
test
lods
dec
dec
sbb
stos
rolb
add
mov
pop
clc
rorl
nop
es
ret
ret
inc
xlat
push
mov
inc
nop
ljmp
lock
sbb
push
sbb
or
mov
mov
push
add
ds
cmp
sbb
lea
pop
orb
mov
pop
in
or
and
addb
repz
out
in
mov
inc
push
outsb
pushf
jge
jne
inc
les
shlb
pop
dec
or
aaa
inc
loopne
or
out
bnd
mov
jo
cwtl
and
sbb
ror
das
mov
inc
test
daa
xor
sub
leave
inc
ret
lods
cmp
adc
das
ss
daa
enter
mov
mov
adc
out
cmpsl
or
ret
ss
push
fiadds
push
dec
xchg
inc
xchg
into
rcrb
add
pop
pop
mov
xor
lds
ret
cmp
mov
pop
movsl
cmpsl
je
push
jae
xor
movsl
test
inc
lcall
mov
mov
add
xor
or
adcb
mov
cs
mov
mov
repnz
cmpsl
gs
push
add
adc
movsl
xor
or
cmpsb
idivb
or
test
fdivrp
mov
jo
mov
addb
rorb
cmp
je
push
sbb
add
push
mov
mov
push
xchg
mov
jle
inc
ficomps
test
test
pop
xchg
mov
add
rcl
inc
add
push
fs
adc
or
sub
shrd
cs
rcrb
push
push
xorl
jmp
cmp
jecxz
cmp
adcl
cmpb
mov
push
mov
and
and
out
inc
enter
lret
cmp
and
sbb
dec
ret
and
je
mov
adc
addl
mov
sbb
xchg
xchg
lret
xchg
lret
lock
add
xchg
or
jg
push
jb
pop
mov
in
mov
push
test
dec
inc
pusha
or
push
jo
das
loopne
repz
pop
rclb
fidivrl
sbb
sahf
shlb
add
jp
arpl
push
pop
nop
dec
mov
or
popf
test
cmp
dec
cmp
push
inc
nop
sbb
dec
js
xchg
negl
out
or
imull
xor
pop
out
sahf
inc
pop
add
repz
mov
mov
add
xadd
jmp
push
jle
xor
out
inc
rcl
push
mov
push
push
push
repz
mov
sbbb
sbb
pop
cmp
push
dec
push
mov
or
inc
pop
push
daa
jmp
inc
ret
sbb
loope
cmp
adc
int
add
or
repz
jle
ret
test
cmp
inc
pop
dec
dec
sub
ljmp
pop
mov
rolb
imul
or
lods
addr16
add
out
adc
add
out
cmp
sarb
daa
add
adc
push
cli
inc
dec
sbb
dec
xchg
pop
xchg
jae
jbe
mov
xchg
outsl
push
sub
and
outsl
loope
idivb
adc
les
icebp
inc
mov
lcall
xchg
sahf
cmpsb
stos
loop
sbb
sahf
ficompl
les
ds
cmpl
adc
lock
push
push
out
cli
and
test
cmp
xchg
mov
sbb
add
push
sahf
mov
loopne
clc
sti
repz
push
mov
push
rcrb
scas
xchg
push
xchg
cmp
repnz
imull
jne
mov
divb
pop
push
cli
arpl
dec
cli
idivl
xchg
push
sahf
sbb
mov
cs
lahf
cmp
or
enter
cmpsl
adc
mov
sub
push
or
xor
addr16
scas
adcb
in
mov
out
stos
add
sbb
push
dec
es
faddp
sbb
add
ljmp
sarl
ret
subl
mov
lea
cmpsb
pop
enter
enter
movsl
shlb
dec
cmp
pop
enter
push
aaa
popa
sub
xchg
popf
out
iret
outsb
xchg
test
loope
pushf
test
ficompl
dec
cmp
ds
ret
jmp
mov
jp
jae
outsl
adc
test
jne
dec
les
mov
scas
pusha
mov
mov
daa
pushf
jo
bnd
push
repz
pop
lahf
jae
imul
xor
rcrb
es
hlt
repnz
sbb
cmpb
loop
insb
loope
cmp
cmp
test
fidivl
out
stos
adc
add
or
jp
adc
sub
add
add
imul
outsl
loopne
mov
sbb
aaa
sarb
add
data16
push
pop
dec
dec
sbb
outsl
jmp
ret
or
mov
fcoml
and
ficompl
inc
xchg
js
and
sub
push
outsl
loopne
movsb
bsf
rcrl
adc
dec
loop
cmp
pop
cmc
add
mov
push
jle
inc
mov
imul
and
repnz
sarb
loop
dec
or
xchg
repz
dec
lcall
and
in
inc
syscall
andb
pop
es
js
mov
dec
popa
mov
push
pop
or
ficoml
ret
dec
xchg
cmc
mov
add
mov
pop
data16
adc
loopne
add
mov
rorb
mov
fildl
jbe
mov
add
stos
loop
and
into
and
adc
lret
or
jo
xchg
add
adc
test
loop
sub
add
hlt
sub
test
push
push
dec
out
cli
notl
and
repnz
dec
test
les
xchg
cmp
mov
mov
scas
pop
inc
and
sub
xor
xor
xchg
and
or
xorl
insl
sub
mov
ficoml
or
dec
pushf
stos
sahf
mov
movb
adc
shrb
rolb
inc
sti
repz
push
pop
jle,pt
insb
adc
jno
lret
mov
sub
xchg
add
push
push
push
or
jb
mov
hlt
and
inc
fsubrl
xchg
mov
and
das
lods
or
sbb
sub
inc
pop
sahf
orl
sub
inc
push
fwait
xchg
enter
dec
iret
inc
xchg
mov
cmp
jno
lods
or
mov
arpl
add
rorb
pop
or
mov
xor
and
mov
pushf
addr16
cs
fwait
sub
jo
cmp
cmp
mov
push
inc
sbb
push
fsubr
cs
insb
xor
into
jl
mov
add
aaa
popf
pop
add
mov
mov
add
pop
movl
scas
outsb
sarl
jo
shlb
mov
mov
dec
call
jecxz
lock
lock
add
adc
and
cmp
fisubs
ret
rorb
adc
pop
adc
rorb
inc
dec
out
js
sarb
mov
scas
clc
mov
jmp
push
clc
sahf
sub
aam
bound
shlb
sbb
pop
push
mov
enter
pop
xchg
loop
jecxz
nop
jbe
push
or
sub
mov
or
jp
call
cwtl
loop
sbb
jo
pushf
adc
adc
or
mov
mov
sbb
pop
add
cmp
xchg
pop
ffree
push
inc
cmpsl
mov
loopne
adc
sub
into
mov
clc
add
xor
or
stos
bound
add
add
insl
xor
into
mov
jp
test
inc
ficomps
sbb
xor
xor
cwtl
or
push
xor
out
mov
pop
adc
sbb
xor
sub
and
and
jmp
inc
xor
xor
xor
sbb
pop
movsl
sbb
push
outsb
jp
mov
jp
ljmp
outsl
pop
subb
nop
stos
add
das
dec
fildll
cmp
add
pop
dec
stos
sub
nop
push
add
loopne
adc
jmp
loop
dec
into
sub
shlb
daa
call
std
fstpt
enter
cltd
push
push
inc
into
mov
mov
mov
mov
mov
aam
rol
hlt
loopne
mov
popf
lods
inc
jecxz
and
push
xor
lret
lahf
lea
cwtl
push
stc
xor
int
push
cmp
js
imul
pop
mov
pop
jle
jns
out
ds
push
pop
pop
xor
ja
pop
pop
push
rclb
push
insb
ss
repz
int3
arpl
fstps
push
push
push
movsb
jo
int
mov
je
jne
js
jp
jnp
imulb
call
sahf
repnz
mov
xchg
rclb
cmpsl
insb
ss
in
lods
cs
ret
mov
ss
int
aad
jg
sbb
and
cs
xchg
mov
ja
dec
ficompl
dec
adcl
and
push
add
push
addl
inc
cmp
inc
xor
aaa
xor
inc
xor
pushl
xor
pop
movb
mov
ficoml
fimull
frstor
add
sub
sahf
int
xor
xor
or
xor
xor
xor
jne
mov
xor
sub
fwait
push
and
mov
sbb
jp
roll
incl
jge
rorl
sub
and
sub
push
fiaddl
inc
cmp
loopne
pop
push
insb
inc
ret
mov
sub
pop
aas
inc
loop
xor
arpl
mov
arpl
fs
xor
xchg
inc
pop
subl
and
jo
push
ss
or
cmp
arpl
pop
push
push
insl
mov
mov
and
add
or
add
jb
and
push
push
popa
mov
dec
add
ficoms
jl
icebp
incl
xor
xor
push
inc
push
push
dec
dec
dec
jo
std
call
dec
dec
inc
and
jle
int3
or
orl
xor
dec
mov
es
cmpb
dec
push
sub
lcall
pop
push
inc
and
sbb
jnp
add
dec
dec
inc
dec
sub
lock
sarl
and
cmp
iret
pushf
enter
add
xor
push
inc
subb
dec
push
nop
and
arpl
sub
mov
aas
mov
fidivl
mov
jne
ret
call
out
shl
aas
or
push
fldt
popa
loopne
rol
fidivl
in
orl
addr16
pop
mov
fldt
mov
test
out
mov
out
xchg
aam
in
xchg
or
je
mov
pop
shrl
mov
ja
xor
sbb
push
leave
mov
push
push
mov
fstl
or
xorl
call
or
addl
add
xor
sbb
mov
inc
jl
mov
mov
jne
push
add
cmp
leave
sub
and
add
add
lret
ja
sbb
mov
xchg
es
lods
inc
fiaddl
mov
insl
pop
and
push
orb
int
lds
adc
fisubl
mov
loop
addb
or
ss
mov
aad
adc
mov
inc
sbb
pop
push
and
dec
dec
dec
dec
dec
dec
dec
push
push
mov
pop
pop
pop
movsb
sbb
inc
inc
dec
dec
xor
stos
xchg
sub
add
inc
xor
add
dec
cltd
les
or
or
sub
mov
inc
loopne
mov
push
jo
mov
orl
imul
dec
adc
lods
bound
in
add
push
push
addl
jo
inc
lcall
xchg
lcall
xchg
push
cmp
testl
mov
cmp
repz
lods
adc
push
test
add
stc
jno
cmp
sbb
xor
fisubrl
out
push
add
in
add
add
pop
pop
repnz
pop
mov
xchg
mov
daa
das
or
es
insl
mov
add
xchg
jg
xchg
or
mov
pop
pop
insl
mov
sbb
sub
xchg
xor
push
adc
add
jns
jno
hlt
mov
inc
mov
scas
xchg
jno
pop
sbb
mov
insb
and
add
inc
add
int3
scas
mov
xor
adc
repz
rcrb
add
mov
bound
inc
xchg
jo
pop
sbb
dec
or
xor
iret
pop
sub
fcom
mov
repnz
and
add
jmp
jns
ret
pop
pop
in
ret
add
push
fldcw
sbb
ja
xor
xor
cmp
int3
xor
add
push
jb
add
or
sbb
aaa
loope
hlt
and
or
test
or
popa
pop
xor
testl
cmp
cvtdq2ps
rolb
aaa
mov
test
mov
cmp
and
iret
xor
pop
aad
sbb
rcrl
sbb
adc
incl
mov
xchg
and
push
test
filds
dec
sub
xor
enter
orb
out
adc
sbb
jmp
push
dec
inc
dec
inc
and
jl
dec
or
fcmovnb
add
add
add
add
or
pop
push
or
mov
or
or
adc
adc
push
adc
adc
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
pop
lds
xor
outsl
push
icebp
imul
add
and
sahf
add
les
pop
adc
mov
add
mov
pop
inc
mov
pop
add
fbstp
imul
add
add
push
adc
pop
and
xor
xchg
mov
rcll
bound
js
jl
sbb
hlt
daa
sub
sub
inc
sbb
add
incl
mov
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
add
push
repz
cmc
div
clc
stc
cli
scas
into
add
xorb
scas
adc
add
pop
scas
cmp
adc
jo
pop
lods
push
adc
pop
popa
jno
and
adc
mov
pop
xor
lods
or
xor
adc
loope
icebp
mov
add
xorl
scas
addb
js
fdivp
or
std
adc
mov
fisttps
inc
imul
clc
push
pop
jg
lret
mov
mov
jae
or
cmp
and
sbb
jg
dec
gs
imul
cmpsl
mov
inc
lock
decb
movsb
mov
jecxz
jg
push
data16
fstpt
mov
sub
in
jp
adc
pop
cltd
and
dec
in
xchg
lock
push
sub
lods
js
dec
das
cmp
inc
sbb
std
pop
in
add
jg
inc
cld
xor
sub
ret
or
mov
mov
cmpsb
push
inc
cmpb
rcrl
jle
sub
mov
xchg
push
dec
je
or
lahf
incl
insb
in
test
mov
mov
pop
fdivrs
xchg
incl
stc
insb
insb
addr16
jno
xlat
dec
rolb
push
inc
adc
mov
lcall
mov
jo
addl
pop
aas
call
shrb
pop
sbb
sbb
push
divl
and
add
add
mov
mov
cmp
iret
jns
loop
aam
shlb
mov
or
pop
sub
adc
cmp
lret
imul
aam
mov
ret
aam
leave
lret
leave
in
in
out
cmp
mov
mov
outsb
mov
cli
mov
out
cmp
jbe
data16
xor
fisttps
xor
jbe
bound
sub
or
ljmp
je
xor
xor
pusha
add
push
push
xchg
insl
mov
shrb
add
add
xor
mov
push
sbb
jns
out
sbb
adc
mov
adc
imul
ss
scas
std
mov
je
into
push
in
jne
jbe
add
push
test
add
jnp
add
cmp
gs
sbb
in
cmp
dec
or
adc
adc
and
es
push
bound
mov
jle
ret
mov
mov
cmp
sbb
cmp
or
jmp
loopne
cs
rcl
xor
lret
dec
cld
add
xor
mov
imul
and
nop
dec
or
push
mov
adc
mov
add
cmp
popa
sbb
enter
lcall
mov
push
or
cmp
inc
push
xchg
mov
nop
nop
dec
adc
xchg
xchg
pop
and
incl
inc
inc
inc
xchg
lret
sahf
inc
test
int3
ret
xor
pop
popa
push
dec
push
call
sub
fcmovnbe
or
insl
mov
imul
and
nop
dec
fistpl
mov
sub
ret
dec
inc
adc
popa
mov
xchg
and
and
leave
lcall
sbb
dec
dec
dec
sar
fldt
imul
imul
fimuls
jmp
xchg
addr16
mov
enter
cmp
and
pop
adc
jg
sub
inc
jle
test
xor
ljmp
decl
push
scas
mov
adc
dec
addr16
sbb
push
ss
xor
mov
sar
pushl
jb
aas
and
push
push
inc
test
scas
mov
imul
aaa
aaa
adc
jmp
jl
inc
inc
xchg
sub
lret
jmp
cli
jp
andb
sbbl
imul
enter
sub
incl
dec
cmp
ss
mov
push
push
std
sti
divb
xor
pop
sbb
and
jae
cmp
mov
ljmp
xor
push
dec
inc
push
cmp
jp
inc
clc
ljmp
jnp
jne
lret
mov
leave
loopne
mov
pop
out
lds
lds
sbb
jnp
gs
ljmp
jge
pop
test
xchg
jne
xor
ss
sub
lea
rolb
inc
scas
repnz
push
mov
dec
mov
cmp
mov
cwtl
shll
ljmp
sub
xchg
mov
jmp
cmpsl
add
jne
or
cltd
mov
test
push
mov
jmp
mov
mov
xchg
stos
mov
int3
in
push
lcall
xor
xor
lcall
jae
ret
mov
dec
or
cld
ljmp
jle
mov
mov
dec
shll
xchg
push
lcall
loope
mov
aaa
inc
push
mov
adc
push
mov
xchg
cltd
jle
lcall
lock
loope
fs
fisubs
and
xchg
sub
js
xchg
pop
test
loope
jne
push
dec
aaa
push
jl
sub
jg
adc
mov
lea
aaa
enter
cld
cld
or
mov
xor
popa
jnp
cmpsb
cld
arpl
jmp
or
je
mov
mov
push
cwtl
mov
scas
clc
call
mov
mov
xchg
js
into
cmp
clc
jns
test
lcall
fdivr
mov
xchg
cs
mov
test
add
into
ret
adc
mov
clc
aad
and
add
or
fwait
leave
daa
sbb
pusha
or
adc
enter
pushl
ret
xchg
pop
cmpsb
cwtl
mov
ret
sub
mov
bound
jno
enter
fcomip
call
cld
cwtl
and
xor
pushf
ds
cwtl
sub
sarb
sub
sub
insb
stc
mov
shll
dec
inc
std
jmp
cli
adc
aam
dec
popa
lea
sub
push
test
movsl
xlat
scas
pop
cmpsl
mov
mov
test
push
test
loop
lea
ja
dec
xchg
dec
sbb
add
jle
xor
adc
daa
cs
imul
sub
jae
ja
jmp
lret
and
js
dec
sbb
fwait
cwtl
jp
push
test
fwait
xchg
dec
jnp
jmp
mov
pushf
fidivrs
mov
fdivs
cmp
jo
les
jns
out
xchg
inc
fcomip
ljmp
std
stc
icebp
in
xchg
pop
sbb
jae
fisttps
mov
jmp
aas
cmp
sti
div
mov
mov
dec
sub
cltd
push
and
cli
sub
sbb
mov
pusha
imull
roll
add
sub
test
mov
dec
std
popa
test
sbb
imul
lcall
std
imul
jns
push
pop
push
inc
xchg
mov
push
dec
adc
lcall
sub
pop
idiv
jmp
jne
movsb
xchg
inc
dec
es
lea
adc
pusha
dec
sub
and
adc
cwtl
sbbl
pop
bound
call
je
adc
xchg
jge
pusha
movsb
int
pop
push
cmc
inc
fwait
insb
mov
xchg
out
xor
fsubrl
incb
mov
jne
adc
add
std
jmp
cwtl
sub
push
and
xlat
test
ljmp
aaa
inc
std
movsl
stos
mov
ljmp
jl
out
loopne
cli
cmc
push
mov
xlat
push
jle
filds
xor
into
xchg
loop
decl
loopne
jb
mov
adc
cs
mov
mov
inc
cmp
and
test
sub
nop
cmp
imul
ds
stos
arpl
xchg
test
inc
or
xchg
sbb
dec
out
dec
addb
pop
outsb
cmc
sub
xchg
cmc
adc
leave
bound
mov
ficomps
jge
daa
and
pop
mov
fadds
adc
loopne
out
mov
mov
es
test
push
imul
pop
lret
mov
mov
mov
stos
addr16
mov
dec
jnp
sub
aaa
sbb
push
das
clc
sbb
ljmp
pushf
js
xchg
sub
stos
stos
sbbb
repnz
pop
lods
outsb
cmpsl
ja
jl
or
pusha
mov
ljmp
adc
popa
fisubrs
leave
sub
scas
loopne
or
and
cli
pushl
push
addl
push
sub
xchg
sahf
js
and
loop
incl
cltd
lahf
dec
pop
mov
mov
jecxz
add
dec
fisubs
in
mov
dec
jo
jo
fdivrp
in
push
icebp
movsb
pop
xor
adc
pop
std
push
hlt
leave
pop
dec
jl
cmp
jne
push
ljmp
dec
jecxz
ljmp
sbbb
xor
or
fcomps
es
sahf
pushw
inc
lcall
sti
xchg
add
push
scas
mov
into
and
pushf
fmull
int
loopne
ret
jmp
cli
inc
lods
pop
push
test
jae
dec
mov
cmp
jmp
movsb
lcall
adc
dec
movsl
ret
ljmp
xor
push
std
incl
decl
cmp
pop
cmpl
cmp
add
mov
incl
aaa
cmpsb
ret
inc
sub
and
push
dec
scas
rolb
adc
pushl
lcall
movsb
into
inc
xor
sarl
les
call
movsb
roll
icebp
sub
xchg
inc
rolb
adc
nop
shll
call
fwait
aam
dec
inc
push
xchg
nop
xchg
or
add
dec
rcll
outsl
call
imul
push
mov
xor
shll
push
jg,pt
add
lock
inc
xor
or
jmp
cmpsb
and
push
out
add
pusha
addl
add
rol
inc
pop
mov
mov
andb
sbb
cmp
mov
push
or
mov
div
dec
iret
or
dec
test
aam
or
test
jmp
mov
adc
ret
daa
jno
sbb
inc
scas
pop
sub
and
imul
mov
incl
add
jno
inc
repz
push
push
jno
push
mov
ja
data16
lea
add
mov
ljmp
jb
xchg
sub
dec
stc
add
xchg
inc
mov
cmp
push
push
mov
and
dec
aaa
cld
pushl
xchg
scas
jbe
push
popf
mov
icebp
daa
into
xlat
mov
je
pop
test
mov
push
inc
into
movsb
inc
cmp
call
aad
int3
xor
push
cltd
xor
add
mov
call
cmp
add
mov
push
in
add
xchg
insl
int3
pusha
add
ljmp
push
ret
push
jne
fsubl
gs
sti
addb
decl
divb
or
lret
xchg
lods
popa
pop
xor
add
ljmp
sar
add
inc
bound
pop
dec
sti
mov
or
shlb
jno
sbb
lcall
in
imul
sar
test
mov
jns
cmp
pop
inc
sub
fiaddl
pop
sub
jecxz
das
clc
pushl
imul
and
out
sarb
mov
sbb
push
aam
aas
push
mov
mov
jno
jne
xchg
pop
int
mov
xor
ret
pop
mov
call
mov
test
sar
jle
mov
inc
xchg
mov
sbb
lcall
pop
test
pushf
xchg
icebp
jno
and
movsb
or
les
push
jns
push
lret
mov
pop
xchg
or
out
mov
inc
cmpsb
fwait
push
push
push
das
cli
cmp
das
dec
popa
dec
jne
and
dec
push
xor
sub
mov
fidivrl
xchg
ljmp
push
add
cwtl
sbbl
pusha
rclb
or
xor
and
sbb
or
pushl
cmpsl
adc
add
clc
enter
pop
pop
test
in
mov
push
call
inc
aam
xchg
out
add
sub
dec
xchg
incl
ret
add
pop
sub
inc
pop
jae
pop
xor
add
decl
mov
cmp
ds
dec
icebp
aam
outsl
adcb
cmpsl
adc
cld
push
je
add
fstps
in
movsb
daa
pop
push
stos
out
sub
cs
call
xor
cmp
data16
mov
sub
fidivl
sbb
out
sbb
shlb
push
icebp
xchg
mov
xchg
push
in
xchg
dec
inc
lds
lea
adc
cmp
mov
sbb
lods
leave
jmp
int
ja
cmp
clc
outsl
jle
xor
mov
inc
mov
sub
push
test
lock
jmp
push
fstl
ret
lock
nop
sbb
sbb
jg
fidivs
xchg
enter
inc
jbe
jl
jmp
stc
pusha
or
lcall
xchg
sbb
dec
fs
test
mov
je
xchg
inc
rol
sbb
lret
push
mov
inc
or
xchg
test
pop
imul
movsb
les
add
subl
jo
push
dec
add
jl
popa
or
popf
ss
xchg
sbb
xor
orl
sbb
xchg
dec
cmpsl
movsb
inc
imul
pusha
insl
adc
jle
mov
outsb
test
in
or
mov
jbe
call
lcall
pop
ljmp
push
cmp
dec
mov
adc
mov
std
xor
jb
push
loope
jbe
es
pop
std
push
xchg
mov
and
push
xor
ret
fbld
fwait
sbb
pusha
pop
adc
sub
cld
ljmp
jno
xor
adcb
push
dec
movsb
mov
scas
push
cmp
test
ret
enter
cmp
xor
fsubr
and
mov
cmp
pushl
pop
incl
imul
in
adc
xchg
push
pop
push
out
fdivr
pop
ja
mov
or
pushl
jle
nopl
cli
and
push
and
mov
outsl
xor
dec
adc
popw
std
lcall
ss
pop
fdivl
push
pusha
push
xchg
push
arpl
or
push
mov
xor
fs
push
add
xlat
jle
xor
add
and
loopne
pushl
dec
sub
cmp
push
aas
call
xor
jae
cmp
inc
pushf
inc
inc
popf
xchg
pop
and
add
push
test
test
call
loopne
xor
xchg
jbe
in
xchg
cmpsb
push
cmp
and
mov
sbb
xchg
pop
fs
hlt
out
sahf
sub
push
jp
mov
js
xchg
call
adc
fsubl
jne
rclb
sbbl
lcall
jae
lret
pushl
mov
xor
bound
loope
adc
mov
push
and
pushl
divl
or
inc
sbb
sub
push
bound
and
jge
hlt
push
mov
ret
xor
mov
hlt
pop
jg
cmpsl
cmp
lock
xor
or
aaa
add
adc
add
mov
mov
or
xchg
adc
pop
daa
addr16
clc
sbb
add
cwtl
jno
mov
cwtl
cmp
mov
fstpt
mov
dec
sarb
sub
inc
movsb
and
aaa
or
jo
sub
add
sub
lea
daa
fists
jno
aas
cld
and
es
sbb
sbb
imul
xor
sbb
daa
pop
movsb
pop
scas
and
and
mov
mov
inc
xlat
adc
ljmp
insb
call
mov
xchg
xchg
inc
add
push
push
es
cmp
cmp
sub
xchg
xor
hlt
push
daa
xor
in
cmc
das
cli
call
mov
not
mov
mov
push
insl
xchg
fcomps
xchg
sub
sub
call
mov
loope
popa
cld
add
mov
push
mov
and
push
mov
xor
push
cmp
pop
jo
ret
jge
mov
cmp
and
push
popa
push
data16
sub
andb
pop
in
cmpsl
mov
mov
out
mov
xor
cwtl
sbb
shlb
dec
mov
das
rolb
rolb
cmp
lea
aaa
rclb
inc
nop
dec
jl
adc
or
fcomip
mov
dec
push
or
jno
push
add
inc
cwtl
stos
dec
dec
cltd
jecxz
xchg
jecxz
or
ret
icebp
push
jo
jbe
nop
sbb
add
mov
xor
jle
sbb
mov
inc
inc
pushl
fwait
adc
and
loop
lahf
jbe
adc
ljmp
sbb
test
push
sbb
sbb
sahf
nop
pop
jns
movsl
dec
in
cltd
imul
fidivl
xor
sbb
mov
insb
jbe
jecxz
xchg
incl
adc
xor
pop
repz
jno
mov
cmp
clc
jg
mull
repnz
xchg
mov
pusha
je
call
pop
sti
icebp
jp
inc
outsb
sbb
adc
cmp
inc
outsl
jl
imul
ljmp
outsl
insl
in
std
add
jbe
xor
pushl
cmp
mov
je
jle
and
loop
lcall
sub
pop
cwtl
test
and
fwait
mov
rcrl
sbb
xchg
les
xor
and
fidivl
pop
cmc
filds
add
dec
cwtl
adc
xchg
inc
ret
mov
fwait
leave
adc
add
push
pop
sbb
arpl
ljmp
mov
add
xor
sarl
lcall
xchg
stc
xor
inc
sbb
xor
je
js
sahf
movsl
push
sbb
dec
stos
ficompl
call
test
sub
inc
xchg
mov
inc
mov
inc
mov
js
add
test
mov
push
inc
pop
test
pop
jb
ret
leave
stos
mov
stos
decl
popf
push
es
adc
xchg
ljmp
sub
inc
pop
mov
pop
es
in
push
adc
movsb
inc
subl
clc
jmp
xor
jo
push
push
cmp
mov
outsl
jne,pt
imul
lcall
xor
cmp
cmc
push
xchg
push
cmp
loope
mov
xor
pop
push
mov
mov
add
mov
push
pop
ja
loopne
scas
movsl
aaa
sbb
es
adc
xchg
mov
js
jl
dec
pushl
movsl
pop
jnp
jnp
add
mov
sbb
fisubs
ljmp
dec
and
scas
leave
pusha
js
mov
xor
push
test
andb
add
cli
add
rorb
popf
lea
jbe
pushl
add
jbe
adc
jmp
mov
popf
ja
xchg
dec
or
ljmp
cmp
inc
pop
clc
imul
push
cwtl
xor
test
stos
or
mov
outsl
fidivrl
jno
jo
mov
mov
cmp
adc
cmp
mov
lcall
adc
mov
mov
rcl
mov
jmp
mov
outsb
jmp
push
jns
cmp
and
push
jo
aad
pop
icebp
inc
mov
lcall
add
sub
xor
xchg
and
inc
inc
pop
popa
mov
imul
lcall
test
inc
pop
xor
jns
jge
inc
xor
mov
push
push
adcb
add
or
jns
mov
jno
jle
or
rcl
or
jne
in
cld
jo
xchg
ret
addl
add
fisttps
mov
rorb
and
xor
push
out
dec
sbb
mov
das
fsubs
lahf
xor
jbe
mov
xor
stos
popa
ret
mov
lods
lcall
gs
push
xor
xchg
mov
ja
mov
pop
cmp
jbe
popf
and
dec
and
mov
dec
mov
inc
dec
sub
dec
mov
dec
in
xor
mov
jl
jmp
sbb
pop
fdivrl
lods
and
push
aaa
sub
inc
sbb
mov
push
mov
xchg
and
das
cmp
mov
fs
xchg
lcall
daa
movsb
add
addr16
adc
je
cmp
jmp
xor
and
inc
sbb
cmp
and
cld
call
jbe
add
shlb
leave
mov
adc
pushl
inc
xchg
xchg
lret
aas
mov
adc
push
mov
jge
js
add
sysexit
inc
or
or
decl
mov
sbb
addl
nop
test
or
xchg
popa
mov
popfw
cwtl
loope
lock
aaa
cld
or
seto
mov
ret
xchg
idiv
fistps
inc
dec
daa
xchg
jmp
mov
dec
sbb
and
into
xchg
mov
repnz
sub
lea
and
add
les
sti
cmp
fwait
xchg
xor
rclb
les
rorl
sub
push
aaa
fwait
sub
iret
xchg
lods
orb
ljmp
adc
rcll
cmp
sbb
add
mov
nop
ljmp
jecxz
ljmp
fisubrl
jp
popa
push
and
mov
lods
notl
incl
ds
movsb
sub
push
and
xchg
inc
std
mov
inc
fbstp
mov
lods
jo
insb
mov
repnz
cs
add
inc
mov
or
xchg
mov
lock
xlat
leave
addl
shr
clc
fcomip
ficoml
mov
adc
push
call
outsl
cmp
add
adc
mov
cmp
and
push
and
mov
mov
inc
shlb
dec
insl
jge
xchg
cltd
add
inc
sub
les
xchg
in
sbb
cmp
jno
shlb
sub
cli
fcomip
pushl
mov
loope
stos
cld
fstpt
xor
or
mov
fcoml
sbb
lret
sbb
sub
ret
lea
add
aam
sar
fstp
incl
mov
iret
mov
add
int
fcoms
call
fists
in
std
fdivrp
incl
sbb
je
sbb
fsubrp
rcll
int
subl
cmp
rclb
pop
sar
rcrb
decl
jmp
shl
inc
punpcklbw
push
fdivrl
sub
xor
clc
test
lods
push
mov
push
scas
push
mov
jg
pop
mov
scas
mov
mov
pop
cmp
mov
mov
inc
test
xchg
mov
cld
pushl
lcall
cmp
cmpsl
jle
jbe
popf
pop
shlb
ror
out
clc
push
dec
in
stos
jp
in
stos
movsl
out
mov
pop
mov
inc
call
rcll
lret
bound
cmp
rclb
push
repz
add
stos
ret
paddb
mov
call
jle
push
mov
jge
pushf
aas
jle
add
incl
fnsave
fmull
adc
bound
aaa
clc
aaa
cmp
ss
out
cmp
xchg
push
fdivr
sub
outsl
jg
sahf
cs
out
sahf
scas
add
jmp
push
add
adc
push
jecxz
mov
mov
mov
sar
pop
mov
int
lret
mov
iret
inc
sub
cmpsl
icebp
mov
in
sbbl
call
adc
mov
cli
std
loopne
outsb
mov
call
shl
lcall
aad
pop
adc
push
push
add
in
push
jl
shl
pop
js
cmp
cmc
cmp
jnp
push
jl
xor
push
movb
out
cmp
mul
das
pop
xchg
ret
ljmp
in
mov
cwtl
das
add
in
in
adc
jg
cmp
lcall
jo
mov
dec
xor
pop
sub
test
cmp
repz
mov
daa
dec
dec
adc
mov
out
dec
cmp
and
decl
push
adc
rolb
mov
mov
pop
out
mov
imul
xchg
dec
and
mov
pop
push
adc
enter
cmp
fmuls
in
aaa
jbe
mov
or
insb
lahf
divb
push
test
std
push
outsb
jmp
not
int
mov
jmp
mov
cmp
stc
rcr
call
call
fs
jmp
push
in
jmp
out
iret
aam
mov
or
fnstcw
cli
lcall
add
int
out
or
sbb
mov
xor
in
adc
out
dec
sub
mov
pushf
in
jmp
push
shr
ljmp
sub
xor
jo
arpl
sub
adc
dec
incl
xor
std
loop
mov
push
shl
or
dec
inc
jg
jo
and
ret
xchg
mov
mov
testb
jno
dec
aad
incb
jbe
push
mov
incl
test
dec
inc
add
push
and
adc
pop
mov
popf
mov
pop
decl
les
sysexit
ds
sub
arpl
xor
sbb
test
int3
inc
xor
enter
and
int3
or
pop
test
rcrb
lret
push
nop
jne
aam
mov
dec
clc
pop
jmp
xchg
ret
test
scas
movsb
and
or
or
pop
cmp
popa
sbb
xor
icebp
call
mov
mov
rclb
jl
enter
lds
cwtl
cmpl
pop
jecxz
cld
incl
xchg
mov
sub
sbb
mov
inc
xchg
push
push
pushl
jge
mov
cmpsl
push
js
loopne
mov
adc
decl
mov
add
pop
cmp
add
mov
jl
ljmp
sbb
out
adc
insl
clc
cmp
fmul
pop
mov
imul
jg
fwait
aaa
mov
imul
call
ljmp
sarb
out
mov
shl
in
out
cmp
aas
push
add
ds
mov
aas
mov
clc
inc
decl
xor
jmp
scas
mov
rol
adc
and
sub
pop
fs
inc
sbb
dec
add
or
fwait
dec
dec
sbb
aam
xchg
or
adc
or
data16
addb
lock
incl
subb
stos
mov
les
sub
inc
sbb
sarl
decl
adc
mov
dec
sahf
ss
adc
aad
xchg
int
lds
hlt
mov
je
dec
sbb
test
mov
adc
decl
sbbb
mov
test
sbbl
and
call
ljmp
push
ds
shlb
and
nop
popa
mov
mov
pop
xor
mov
jne
or
pop
insl
popf
mov
push
or
jg
in
push
mov
pusha
jge
mov
cli
pusha
mov
jle
bound
lods
or
dec
lods
sbbl
push
call
sub
and
fstpt
ljmp
sub
add
fsts
popa
fidivrs
shlb
fdivrp
incl
pop
mov
sub
ja
cmp
mov
sbbb
mul
aaa
and
lea
jmp
add
push
cmp
or
cs
sbb
xchg
mov
inc
jmp
xchg
add
push
sbb
fdivs
outsb
lret
dec
xchg
jbe
out
out
decl
or
mov
cmp
jb
add
scas
push
sarb
ljmp
call
imul
inc
cs
inc
mov
scas
jo
loope
aas
jl
insb
clc
aam
outsl
insl
stc
mov
jmp
inc
das
aad
add
add
inc
inc
adc
ret
movsb
xchg
jno
push
movsb
add
call
jb
in
leave
and
and
scas
pushl
or
bound
pop
add
add
inc
sbb
jg
in
cmp
and
and
and
jno
pop
std
cmp
sarl
das
lret
jb
dec
mov
in
ja
popf
stos
lods
sbb
mov
dec
mov
loop
daa
repnz
mov
test
popf
das
xor
mov
xor
stos
mov
lcall
loope
decl
cmp
and
sbb
pop
cli
xlat
inc
and
sar
ljmp
push
xor
int3
pop
in
test
hlt
popa
or
ja
data16
rolb
arpl
loopne
rorl
lcall
jle
xor
ds
push
push
fsubrs
dec
loopne
loop
xchg
mov
xchg
clc
and
leave
decl
movb
add
cmp
cs
lcall
or
mov
and
rorl
xchg
inc
sub
xchg
and
and
call
xchg
mov
adc
arpl
pop
out
inc
adc
popa
push
xor
sbb
push
pushl
movsb
leave
or
test
rcl
xchg
loope
rolb
push
add
cmpsb
sbb
cmp
mov
push
xor
jg
aam
aad
jae
pushf
movsl
sub
fldt
aam
mov
push
outsl
jbe
fwait
xor
and
leave
or
frstor
mov
sahf
jl
or
test
sbb
push
das
psubb
jmp
and
push
cmc
movsb
cmp
test
leave
push
enter
or
aaa
lods
xor
mov
xchg
dec
fwait
pop
and
pop
ret
nop
jecxz
sbb
test
out
loopne
mov
mov
stc
shr
adc
mov
mov
fs
out
sbb
incl
pop
in
stc
cmp
push
dec
jnp
mov
or
nop
mov
hlt
sub
clc
decl
xchg
xchg
les
inc
mov
pop
or
mov
lea
mov
dec
pop
push
mov
jle
cwtl
pop
pop
lcall
incl
and
mov
cmp
and
adc
sar
dec
jg
add
mov
std
imul
adc
dec
gs
call
movsb
mov
sbb
add
mov
pop
std
loopne
add
add
push
add
stos
mov
pushl
mov
or
ds
sbb
ret
or
rclb
mov
inc
or
shrb
and
cltd
out
and
push
pop
insb
add
sbb
decl
dec
add
sub
lcall
inc
and
xchg
and
cmp
mov
pop
test
lea
lcall
fcmovnbe
icebp
xor
add
mov
xorb
sbb
xchg
inc
jecxz
jae
incl
leave
pushf
adc
or
jae
sbb
inc
inc
sub
jbe
repz
xchg
out
ja
sar
incl
loopne
mov
int3
andl
cmpsb
repnz
add
adc
scas
imul
jmp
in
bound
insb
jl
faddl
js
jo
inc
sarl
icebp
imul
adc
decl
leave
dec
xor
mov
sbb
shrb
xor
sbb
mov
incl
adc
ret
cmp
xchg
sub
dec
sbb
add
js
sub
pop
inc
fimuls
decl
and
sahf
add
xor
or
jp
mov
in
adc
pop
inc
ret
xor
and
rorl
pop
das
mov
movsl
sub
dec
xlat
inc
add
inc
add
sbb
add
mov
push
adc
inc
test
mov
or
inc
setb
js
jg
xor
clc
call
pop
add
orl
sti
lcall
aam
jp
subl
sbb
pop
mov
xlat
sbb
adc
pushl
loope
rcrb
push
arpl
jge
push
rcr
scas
cmp
or
dec
or
mov
incl
mov
fldl
pop
inc
dec
lret
mov
lods
insb
movb
lret
gs
test
xchg
icebp
mov
lods
in
sbb
divb
mov
mov
mov
stc
lods
xchg
mov
aam
xchg
fstp
jmp
faddl
xchg
cli
cmp
or
insb
mov
je
out
cli
jmp
leave
lods
test
fidivl
imul
clc
sbb
fwait
in
ljmp
fnstsw
mov
daa
pop
fdivl
pushf
ljmp
mov
ss
and
test
lret
add
sbb
xor
push
daa
cmp
pushl
xchg
or
ficompl
aam
or
dec
rcrl
add
cmp
mov
sub
aaa
std
js
adc
les
rorb
mov
mov
into
je
push
mov
jp
mov
cli
fstp
gs
sbb
adc
ljmp
js
je
mov
mov
xor
inc
jno
cmp
das
js
sbb
mov
jo
sbb
je
or
sub
dec
loope
lcall
fwait
xchg
and
test
or
adc
cmp
mov
push
iret
test
mov
mulb
push
loopne
xor
dec
loope
xor
test
or
hlt
jo
es
cmc
lcall
lods
jo
inc
test
test
or
inc
jle
lcall
jl
aad
les
orl
sahf
jge
push
add
test
sbb
add
ret
sbb
xchg
cld
cmp
dec
addb
xor
bound
dec
ss
or
decl
cli
lret
dec
adc
pushf
and
sub
pushl
call
or
movsl
pop
xchg
scas
loope
movsb
adc
in
or
bound
aad
fcomp
and
jns
ret
clc
mov
inc
and
jnp
out
popl
adc
jg
sbb
push
mov
jae
cmp
aaa
mov
or
inc
sbb
cmp
ret
sub
adc
inc
pop
xchg
add
mov
jg
mov
mov
xlat
xchg
lock
xchg
sbbb
jmp
push
or
inc
pop
mov
mov
pop
mov
xchg
and
loop
fdivr
jmp
out
xchg
push
dec
sub
xchg
sub
sbb
sbb
xor
xchg
incl
sahf
adc
xor
pop
pop
mov
aaa
jo
push
mov
negb
inc
sub
aaa
pop
mov
fs
cmp
xor
pop
movsb
aas
cli
lcall
lds
or
das
inc
cltd
aam
add
xorl
sbb
fcmovb
cmp
pushl
int3
xchg
and
sbb
push
cmp
incb
inc
jbe
mov
lock
sub
sbb
xor
and
pushl
cmp
aas
aaa
addb
sbb
adc
sbb
adcb
scas
clc
dec
clc
push
stos
insl
lock
xchg
add
mov
lods
cmp
jg
cmp
adcl
cmp
add
cmpb
jecxz
sub
mov
add
fnstenv
push
cwtl
jge
sbbl
popa
jo
cld
or
sarb
add
mov
ss
sub
push
fisubrl
in
pop
sbbb
jg
jnp
mov
dec
jne
push
mov
pop
lods
shl
dec
fldcw
fisubl
into
call
mov
add
mov
loop
jg
ret
movsb
xor
mov
dec
jmp
mov
imul
inc
jmp
jg
lds
mov
dec
sahf
ret
das
fsubl
in
lret
adc
adc
lods
and
jecxz
rcl
scas
out
fdivrs
inc
dec
pushl
add
ret
ljmp
sbb
pop
adc
jb
jge
or
andb
mov
sub
cmp
jecxz
sbb
ljmp
pop
or
dec
or
xor
cmp
icebp
xchg
loopne
jmp
push
pushf
or
sub
or
adc
jg
mov
stos
or
cwtl
sbbb
ficompl
enter
subb
push
push
mov
clc
xorb
and
fwait
add
mov
add
pushf
jg
and
and
insb
push
sarb
call
pop
add
cmp
and
cltd
mov
push
decl
xchg
push
mov
sarb
mov
sub
nop
mov
fbld
cmp
push
sbb
adcb
jne
add
movsb
pop
subb
add
xchg
das
cwtl
mov
ja
add
mov
adcl
jle
daa
or
lods
test
mov
jg
mov
and
pop
fadds
call
loop
xor
xchg
js
sbb
js
fwait
mov
das
or
sahf
fdivrl
xchg
mov
mov
add
test
aaa
add
add
or
mov
outsl
lret
inc
fdivs
sub
std
and
aam
push
push
xchg
mov
add
push
pop
sub
ljmp
mov
pop
push
dec
or
push
pop
pop
int
adc
mov
dec
lret
iret
mov
aad
or
test
or
dec
pop
adcb
mov
mov
pop
sbb
inc
push
incl
mov
cltd
add
lret
stos
incl
mov
pop
dec
loop
inc
test
or
cwtl
mov
decl
cwtl
in
mov
pop
and
push
jl
sub
sbb
jmp
mov
sahf
aaa
dec
pop
pop
and
test
cmp
rcll
lcall
jmp
and
ret
call
dec
inc
jnp
or
jnp
lods
add
mov
pop
icebp
call
movsb
lret
jge
add
pusha
mov
stos
andb
xor
xchg
aam
mov
add
sub
xchg
add
lret
cmp
lock
cld
pop
stos
or
jbe,pn
or
xchg
mov
pop
ljmp
in
mov
sub
adc
push
sub
jns
add
in
insl
call
push
orb
stos
jae
mov
ret
cmpl
mov
call
jle
pop
cmp
add
call
sbb
pop
push
orb
xchg
rolb
mov
sub
enter
mov
lret
decl
adc
inc
hlt
inc
mov
adc
dec
std
pop
xchg
call
adc
popf
test
mov
or
aaa
lcall
call
imul
leave
loopne
add
cmp
in
incl
je
pop
movsb
pop
lds
mov
iret
in
push
in
add
xchg
adc
rolb
in
cmp
cmp
add
or
imull
xchg
jg
loopne
cli
mov
adc
std
mov
fwait
rcrl
fiaddl
decb
xor
dec
xor
xor
test
call
adc
jg
mov
adc
stos
and
pop
nop
leave
in
les
sar
jbe
cwtl
ja
sbb
or
lods
xor
adc
les
decl
call
adc
dec
mov
xor
dec
add
jnp
xor
cmp
movsb
xor
leave
push
add
mov
shl
mov
and
js
stos
push
cmp
or
incl
inc
dec
push
imul
dec
add
xchg
arpl
mulb
stc
dec
mov
xchg
or
cltd
jg
popa
std
lahf
es
popa
push
pop
rcr
stos
add
adc
jg
add
pushf
adc
add
scas
cli
bound
fs
add
jecxz
push
std
mov
add
gs
mov
clc
test
add
inc
cmp
aad
bound
mov
xchg
mov
sub
jle
fistl
jg
pop
mov
subl
add
xor
cmp
mov
ret
dec
ret
lock
and
and
xchg
xchg
pushl
jo
jecxz
dec
test
xchg
adcb
mov
lcall
sbb
xor
push
out
pop
xchg
shlb
pusha
mov
mov
orl
out
cld
inc
fisttpl
mov
sar
pop
hlt
lcall
lret
enter
mov
int3
mov
push
int3
pushl
jmp
dec
cmp
inc
call
cmp
gs
push
push
pop
decl
stos
cmpb
adc
stc
mov
cwtl
push
std
lcall
jmp
push
movsl
push
inc
jmp
ficomps
jnp
add
fadds
lcall
insl
test
mov
cmp
cmp
mov
arpl
add
jbe
or
ret
sar
decl
mov
in
and
sbb
rclb
mov
and
popa
xor
outsb
push
pushl
ljmp
jns
mov
loope
inc
mov
push
mov
sar
add
fs
cld
and
pop
cld
jae
outsb
fildll
xor
call
outsb
into
ficompl
cmp
jg
test
into
lahf
mov
pusha
pop
cmp
incl
add
shl
xchg
test
add
fldl
xorb
mov
incl
out
jnp
addb
ss
push
fidivrs
pushl
hlt
adc
xor
push
xchg
stos
or
sub
andb
mov
orb
or
mov
cmc
add
mov
xchg
ds
xor
dec
push
add
jmp
mov
cmp
iret
or
out
xor
adc
xor
fidivrs
fs
fdivrl
add
dec
flds
ljmp
lcall
add
inc
enter
cmp
mov
jo
mov
xchg
aas
jge
in
jg
mov
or
pop
push
xor
sbb
add
call
mov
push
clc
mov
nop
adc
push
fistpll
push
imul
call
push
imul
out
cltd
stc
push
std
decl
pop
pop
jb
push
imul
aad
push
ljmp
stos
push
ss
sbb
dec
or
dec
mov
pop
cmc
incl
cltd
inc
xlat
fimull
jecxz
cmp
push
dec
mov
or
push
mov
xorb
test
shlb
mov
loop
fmuls
cmpsl
fstpl
cli
fmuls
inc
mov
inc
sbb
or
data16
xchg
jp
imul
sub
and
test
or
cld
adc
and
pop
sub
push
lods
call
pop
jmp
imul
xor
incl
in
inc
add
cld
rcr
pusha
pop
dec
pop
mov
pop
pop
add
pop
jne
test
add
and
xor
add
sub
and
push
dec
orb
fcomip
cmp
or
cmpsb
lock
xchg
pop
push
sub
cmp
mov
mov
es
push
add
push
call
add
xchg
stos
subb
movsb
xor
lret
pop
ficoms
test
mov
pop
insl
movsl
sub
cld
imul
xchg
xorl
clc
es
push
js
push
ljmp
rolb
inc
roll
scas
cmp
dec
test
jp
mov
lret
cmp
dec
mov
incl
push
mov
inc
jle
lods
add
int
mov
and
xchg
cmp
lahf
sbb
mov
lcall
mov
or
cld
dec
jno
iret
jno
decl
lea
shrb
scas
cli
xchg
icebp
xchg
outsb
sbb
pop
jnp
imul
adc
jp
daa
enter
push
jno
decl
call
test
xchg
data16
mov
sahf
lret
into
stos
mov
jbe
out
nop
xchg
mov
adc
xchg
push
movhps
mov
js
mov
ss
cmp
lcall
or
cmpsl
sub
popf
leave
imul
repz
mov
push
add
cltd
cmpsl
add
incl
dec
cmp
or
xorl
andl
sbbb
jno
test
add
sub
cwtl
adc
and
inc
or
add
cmp
mov
aaa
or
xchg
iret
aas
push
mov
stos
popa
stos
add
lcall
rorl
sahf
pop
jnp
push
mov
popa
cmc
das
test
clc
xor
into
data16
xor
call
sbb
or
push
mov
ljmp
mov
mov
xor
push
xchg
push
cli
cmc
inc
fidivrs
ja
ss
mov
outsl
and
add
jb
pop
sbb
jp
push
adc
xchg
sbb
mov
ljmp
lretw
xor
mov
rolb
xchg
pusha
dec
test
sti
push
loope
sbb
xchg
add
fcomip
jnp
lods
add
movsb
int3
cmp
cmp
fcomps
cmc
in
fwait
cmpsb
push
cmpsb
hlt
add
or
add
loop
std
push
loopne
repnz
push
fistpll
adc
js
add
fdivrp
lcall
mov
inc
loop
sbb
add
cmp
push
xor
and
loope
test
push
push
mov
add
imul
punpcklbw
inc
hlt
jmp
and
fimuls
roll
inc
ja
ffree
push
pop
outsl
into
sbb
repz
dec
inc
cmpsl
mov
lea
inc
mov
xchg
fdivrp
cli
ja
push
inc
scas
mov
stc
repnz
inc
xlat
pop
and
repz
xchg
scas
pop
mov
mov
repz
mov
negl
aas
cld
add
mov
push
mov
mov
sbb
mov
add
incl
add
rolb
bound
mov
rorl
push
inc
xor
rclb
scas
or
sub
in
mov
xor
xor
in
dec
mov
mov
call
cltd
add
xchg
push
push
movsl
xchg
push
dec
lcall
sbb
xchg
gs
movsb
xchg
gs
lcall
xchg
lcall
subb
lcall
test
xchg
adc
inc
sbb
push
das
or
add
jns
inc
xlat
gs
pushf
jno
adc
adc
lock
in
decl
in
xchg
cwtl
cmp
loopne
sub
lods
mov
xor
inc
pop
inc
lods
bound
call
lods
add
mov
mov
ljmp
sub
and
xor
xor
xchg
sbb
fdivr
push
cld
jmp
xchg
mov
xchg
loope
push
test
dec
movsb
aad
testl
inc
ret
mov
push
jne
push
add
dec
sbb
je
sarl
pop
loope
mov
std
pop
fnsave
push
jae
or
iret
cmp
mov
nopl
je
les
inc
mov
inc
adc
or
ror
bound
and
mov
push
adc
mov
mov
sbb
ret
xchg
sbb
or
dec
push
xchg
leave
aad
inc
jb
xor
pop
js
ja
dec
jno
pusha
inc
scas
pusha
xor
inc
iret
xor
shl
cmp
mov
and
incl
fs
sahf
xor
sbb
mov
sub
add
mov
cmp
inc
fisttpl
test
lcall
mov
fsubrl
sbb
xchg
cmpsb
es
cmp
daa
mov
ljmp
add
sub
testl
in
lea
jne
lea
sahf
jl
out
cmp
je
xor
push
pop
ljmp
cli
jg
add
mov
call
jno
mov
add
mov
mov
decl
lea
testb
cmp
dec
rcrl
lds
mov
out
xchg
cmpsb
xchg
aas
neg
jl
sub
add
inc
xor
call
add
daa
xchg
outsl
pop
stc
in
push
lret
xchg
notl
les
call
dec
divb
xchg
push
cmp
js
push
jp
cld
mov
movsb
ljmp
in
lahf
and
test
dec
lret
bound
cmp
cmpb
sub
call
dec
pop
xchg
cmp
add
bound
push
stos
xchg
jne
pop
lods
subl
push
call
cld
push
lods
popa
add
les
push
sub
pusha
lods
das
mov
or
jns
sub
nop
inc
add
dec
add
imul
test
les
cld
pop
lock
stc
enter
lock
jle
inc
pop
std
or
inc
ret
mov
pop
mov
das
xor
pop
jp
orb
pop
call
adc
sub
push
pushf
repnz
pop
shlb
lret
push
incl
test
fstps
xor
xchg
add
test
push
out
test
ret
or
add
lcall
rclb
inc
in
jb
test
mov
mov
push
xchg
ljmp
xor
dec
dec
bswap
es
in
es
sbb
jle
mov
add
aaa
outsl
adc
in
mov
jno
jbe
rorl
jno
sbb
test
enter
stc
cltd
jnp
repz
mov
icebp
cmpsl
jg
test
jae
lcall
cli
cmp
jp
fstps
push
jo
adc
jns
push
sahf
in
mov
ljmp
cli
sarb
mov
in
and
and
cmp
adc
sbb
add
sahf
hlt
pusha
mov
daa
inc
mov
mov
shll
movsl
push
dec
jg
movsb
sbb
lock
adc
divb
inc
or
mov
mov
es
lret
push
add
cmp
xchg
dec
or
push
enter
jmp
sti
in
stos
ja
push
lcall
nop
dec
mov
ret
and
push
loopne
test
rolb
data16
push
adc
call
adc
incb
add
je
sbb
rolb
cmp
dec
dec
add
sbb
push
pusha
lock
pop
mov
push
cmpb
cs
mov
and
and
ret
pushw
push
cmpsb
jmp
pusha
imul
jo
push
xor
pusha
add
hlt
incl
mov
push
adc
dec
aas
cmp
jmp
js
adc
fistpll
fidivrl
test
call
xchg
add
inc
rolb
adc
ljmp
or
sub
fldt
cmpsb
cld
data16
sub
xor
in
or
and
cmp
rorl
adc
fs
mov
mov
jmp
add
mov
sti
dec
rcll
cmp
adc
les
decl
imul
xor
mov
mov
mov
dec
arpl
out
xchg
jecxz
jb
push
or
leave
sbb
call
dec
int
ret
cmp
jbe
orl
cmp
lahf
rolb
xor
lcall
fistl
cli
sbb
inc
mov
mov
sbb
addr16
sbb
fldt
push
out
add
out
dec
movsb
test
push
incl
jbe
sub
and
and
scas
rolb
push
stc
pusha
adc
ljmp
mov
add
dec
jecxz
inc
inc
ret
push
sbb
nop
lret
dec
mov
jle
lcall
dec
lock
mov
pop
push
mov
and
hlt
jecxz
call
cmc
add
shlb
outsb
push
push
jno
add
mov
xor
ljmp
out
decl
orl
and
pop
jnp
add
jns
ljmp
ljmp
movsl
pop
imul
dec
xor
and
aam
adc
es
inc
in
mov
push
call
mov
outsl
mov
add
ret
cmp
mov
mov
push
xor
adc
stos
or
enter
clc
or
jo
cmp
ja
jo
or
rorb
cmp
mov
sub
es
lcall
pop
push
xchg
jle
adc
sub
mov
fxch
es
popa
mov
sub
jmp
dec
fsubrs
and
ja
push
xchg
xchg
jb
add
mov
jg
incl
out
cmp
fs
test
repnz
mov
mov
dec
lret
pushl
dec
adc
mov
mov
jmp
leave
enter
lret
dec
out
inc
mov
jne
call
pushf
mov
sahf
fisubrl
sub
inc
out
cmp
popf
inc
mov
int3
adc
pushl
jae
shl
cmp
fs
into
insb
ljmp
sbb
shlb
nop
jmp
in
lea
jp
and
pop
xor
ljmp
lahf
popl
dec
int
je
imul
mov
dec
adc
insl
mov
mov
stos
jno
xchg
cltd
push
rclb
ljmp
xchg
pop
movsl
stc
adc
jbe
std
lcall
popf
mov
popf
mov
push
cwtl
xchg
mov
mov
add
mov
fnstcw
sbbb
or
add
and
cmp
jb
jmp
mov
movsl
fst
cmp
mov
bswap
lret
add
mov
jno
inc
push
mov
ljmp
incl
pop
and
jo
fdivs
sbb
aam
inc
adc
imul
sub
dec
movsb
or
dec
push
jno
lret
adc
inc
add
js,pt
test
push
ss
leave
push
leave
adc
inc
or
inc
sbb
xchg
add
jne
js
jl
pop
jg
cmp
mov
ss
mov
pop
mov
sbb
fwait
mov
cli
roll
frstor
inc
pop
push
rolb
lods
inc
cs
popf
xchg
int
out
clc
cmp
xchg
fcom
nop
pop
addr16
movsb
or
aad
emms
adc
mov
add
push
lea
mov
sub
fbld
fmull
add
or
dec
jnp
sahf
in
clc
incl
andl
pop
sbb
xchg
inc
push
xchg
popa
xchg
aad
ds
into
out
push
jge
incl
fidivs
cli
sarb
aaa
adc
rolb
dec
add
inc
inc
call
mov
lcall
fdivrs
mov
out
cld
arpl
mov
add
adcb
or
adc
sbb
call
sbb
repz
push
mov
clc
test
and
cmp
imul
or
mov
add
mov
cli
test
xor
shrd
in
lcall
ljmp
fs
loopne
add
movsb
dec
out
and
add
inc
fwait
pmuludq
mov
popf
cs
add
or
out
bound
shlb
scas
sub
push
in
lds
fstpt
add
add
outsl
cli
decl
xor
push
imul
jo
sub
push
adc
inc
ljmp
lcall
pop
stos
gs
push
shlb
shll
jo
adcl
xbegin
andb
or
add
cmp
adc
or
ljmp
stos
test
or
and
pop
xor
mov
add
or
pop
ljmp
pop
cli
and
xlat
cltd
sbb
pop
arpl
fldenv
sub
pop
and
ficoml
fstpl
pop
and
and
call
sahf
fmuls
adcl
inc
into
fistpl
test
repnz
fisttps
jbe
imul
fidivl
cmp
out
and
cmp
loope
pop
hlt
imul
imul
insb
enter
test
inc
pop
push
in
ljmp
cltd
dec
jp
pop
out
sahf
jg
mov
xchg
dec
cmp
cmp
or
xchg
inc
imul
add
inc
test
lahf
mov
inc
es
clc
mov
adc
nop
or
dec
inc
jp
repz
dec
stc
mov
cmc
popa
lahf
test
pop
test
adc
insl
mov
loop
dec
cli
xor
jo
xchg
mov
or
leave
and
dec
test
rcr
hlt
jg
lcall
and
insb
out
add
cmpsb
fbld
or
pop
push
mov
jmp
fs
out
or
push
sub
daa
das
fisttpll
loopew
lods
and
scas
fisttpl
dec
dec
je
adc
push
cmp
cmp
aad
hlt
movsb
dec
stos
mov
push
movsb
jb
pop
push
ljmp
adc
mov
and
or
mov
add
sar
inc
lahf
sub
in
or
push
mov
sub
adc
ljmp
subl
pop
adc
lds
bound
sub
or
push
decl
xchg
fwait
mov
rorl
loop
lods
loopne
xchg
fcmovnu
add
push
jbe
sub
xchg
ss
cmp
sub
sbb
rcrl
mov
aam
subl
pushl
cmc
mov
jbe
inc
cmp
sbb
jl
arpl
xchg
mov
fcomip
incl
xor
xor
and
cmp
insl
inc
call
lcall
lcall
cltd
lret
scas
sahf
ljmp
fcomps
jno
test
jg
mov
jbe
rol
subl
adc
roll
push
fnstenv
ret
arpl
inc
sub
std
rcrb
dec
sbb
scas
aam
je
xchg
ss
aad
push
sbb
fs
decl
testb
enter
mov
xor
cmp
xchg
leave
mov
and
push
mov
ljmp
testb
or
stos
mov
sbb
push
dec
cld
and
mov
cli
jmp
xchg
call
movsl
pushf
add
push
test
data16
lods
decl
outsl
xor
in
aam
adc
test
scas
andl
push
pop
movsb
sbb
std
in
out
pop
call
sub
scas
mov
scas
out
outsb
pop
inc
push
or
pushl
mov
scas
adc
out
or
inc
outsl
hlt
sbb
inc
das
add
sbb
push
inc
out
sar
outsl
imull
enter
pop
sahf
rdtsc
sbb
les
inc
inc
test
mov
into
hlt
inc
arpl
stos
clc
scas
xlat
and
pop
pop
cld
and
cmpsl
mov
sarb
int
inc
in
aad
rorb
jmp
fidivrl
in
cmp
cmp
in
cmp
push
inc
xchg
xor
cmp
lcall
mov
or
cwtl
andl
dec
sub
call
jnp
test
or
inc
jecxz
pop
inc
mov
imul
out
enter
xor
movl
shl
inc
test
ds
mov
pop
adc
inc
push
repz
mov
push
lock
aad
xchg
repnz
or
ljmp
stos
mov
inc
xlat
mov
add
push
cmpsl
pop
lahf
mov
fildl
push
inc
mov
movsb
adc
testl
xor
repz
stos
jns
lods
gs
test
test
mov
lcall
nop
push
js
cld
insb
cmp
push
rorl
jb
outsl
mov
xor
call
push
cld
inc
xor
and
mov
shrl
aad
mov
incl
rorb
popaw
cmpsb
aam
push
les
jecxz
cmpsb
mov
sahf
xlat
lods
incl
fmul
push
mov
xor
incl
sub
jae
ds
sbb
outsb
stos
mov
out
push
je
aaa
jmp
incl
negb
aaa
adc
outsl
shlb
das
stc
push
enter
pop
pop
dec
aad
mov
decb
add
dec
lods
add
sbb
and
add
daa
or
fldl
faddl
js
rcrb
mov
xchg
aam
sbb
jle
cmp
decl
lcall
mov
jno
arpl
mov
or
or
sbb
cmp
into
xorl
xchg
insb
leave
sbb
xlat
mov
push
sub
xchg
inc
cmp
fistps
fwait
sub
cmp
outsb
fcompl
je
in
jmp
and
adc
push
std
call
lret
aas
fiaddl
xor
movb
outsb
mov
in
test
push
mov
decl
ds
insl
dec
fiadds
xchg
sbb
dec
mov
addr16
sbb
icebp
dec
int3
call
or
inc
pop
push
imul
dec
mov
mov
push
and
dec
lcall
add
test
pop
sub
jns
push
mov
fs
ljmp
xchg
je
xchg
mov
test
imul
imul
mov
and
pusha
add
in
adc
add
inc
cmp
or
call
mov
pop
sub
jbe
out
es
testb
inc
push
fimuls
outsl
outsl
jo
mov
adc
repnz
pop
push
push
and
aam
iret
lcall
jg
dec
cld
push
aad
jne
ret
pop
pop
and
push
test
mov
lret
jne
add
add
or
lock
ja
and
jae
push
scas
clc
call
cwtl
xchg
add
addr16
lock
movb
xor
incl
lock
jecxz
fldenv
or
ja
popf
dec
scas
add
push
jecxz
push
or
xchg
lock
aaa
push
icebp
scas
xor
outsl
inc
jne
cli
mov
ds
push
out
mov
stos
push
pop
lret
shrb
daa
adc
test
xchg
lcall
mov
mov
icebp
jb
jne
mov
in
aam
xorl
sahf
stc
out
and
or
pop
adc
test
lahf
arpl
aad
pusha
movsb
dec
call
cld
push
xchg
clc
les
cmp
dec
popa
fs
jns
js
sbb
das
mov
test
push
inc
xchg
and
repnz
cli
data16
mov
int3
cli
jg
call
shl
enter
aaa
xchg
out
jp
das
test
repz
rsm
mov
test
scas
mov
lahf
repz
sahf
hlt
outsb
arpl
je
xor
das
cmc
lds
mov
stos
xor
jae
shlb
push
push
xchg
mov
xchg
pop
ficoms
inc
in
push
jbe
or
sti
pop
sub
mov
mov
mov
or
mov
addr16
ljmp
lock
dec
aaa
push
or
xchg
push
out
mov
cli
out
imul
xor
rolb
subl
or
mov
int3
jnp
movl
cmp
or
inc
mov
cld
add
add
add
fs
mov
mov
sbb
lds
hlt
inc
es
sub
sub
push
mov
xor
jnp
jge
and
xchg
inc
push
pop
nop
incl
iret
or
push
loopne
jne
gs
push
push
into
in
push
jl
xchg
cltd
xchg
push
outsl
cli
pop
cmc
cmpsb
inc
stc
jnp
aas
lods
pop
or
dec
frstor
je
jnp
ja
lret
xor
push
push
jae
push
lods
lahf
cmc
js
jno
mov
incl
ficompl
jne
adc
dec
push
pushf
enter
sbb
pop
cmc
jmp
test
in
sahf
movl
ret
add
mov
stos
cmpl
popf
mov
xchg
mov
stos
mov
and
push
enter
out
xchg
aam
xchg
hlt
in
je
stos
pop
mov
mov
cmpsl
sub
cmp
scas
clc
lcall
aam
test
adc
scas
mov
arpl
bnd
mov
in
scas
cli
push
inc
xorl
inc
jmp
or
mov
cmp
sub
js
repz
adc
xor
cli
jecxz
inc
push
lock
or
jmp
dec
jg
inc
xchg
or
add
mov
jno
test
mov
push
mov
xchg
push
ret
nop
mov
mov
add
jp
pop
adc
andl
or
inc
mov
inc
mov
sahf
mov
inc
xchg
cmp
dec
mov
das
jg
dec
mov
out
cmpsl
push
mov
incl
mov
decl
mov
lods
push
movsl
xchg
mov
adc
add
dec
lea
sarb
call
cltd
sarb
mov
push
adc
xor
mov
xor
xchg
or
ljmp
jb
dec
pop
xor
jo
testb
sub
sbb
adc
mov
sbb
push
inc
mov
int
jbe
fstpt
fidivl
jmp
cwtl
fstpl
insl
or
pusha
imul
shlb
jl
xor
fldt
lcall
sti
je
push
and
jnp
out
call
sbb
sti
clc
fstl
jle
fucom
add
sbb
idiv
push
cmp
adc
enter
and
mov
xor
jg
roll
pushf
push
ret
add
ret
or
pop
mov
shlb
incl
add
or
adc
pusha
test
aam
and
aas
mov
and
mov
push
cld
dec
push
push
inc
mov
and
inc
mov
test
mov
push
and
ss
dec
test
push
sbb
xor
mov
mov
pushf
and
leave
and
mov
lds
lret
scas
xor
das
sbb
leave
leave
test
test
hlt
ljmp
and
mov
add
sbb
mov
lcall
lret
push
dec
and
dec
inc
push
mov
shll
inc
sbbb
test
sub
cli
or
mov
mov
mov
mov
ljmp
out
add
sub
insb
xor
imul
or
cmp
mov
push
adc
mov
jb
jmp
aaa
mov
mov
pop
fcoml
sbb
int
xchg
out
test
cmp
push
sbb
push
insb
das
lret
push
jmp
out
xor
push
fadds
not
or
mov
inc
add
mov
test
repz
shl
xchg
mov
fnstcw
pop
push
data16
add
sahf
fldenv
cmp
sbb
aas
sbbl
stc
push
aaa
cmp
arpl
inc
pushf
dec
ljmp
dec
cwtl
lahf
mov
sahf
xor
xchg
stos
adc
mov
pop
ds
shll
call
xchg
aas
xchg
lcall
and
mov
cwtl
insb
orb
pop
push
repz
jp
incl
dec
cmc
or
rol
add
lods
pop
aam
cmp
sahf
adc
mov
push
fcomip
mov
jne
sahf
lcall
push
scas
push
setle
call
cmp
mov
adc
xchg
test
adc
mov
jno
jmp
lcall
es
add
jmp
out
iret
mov
out
dec
jecxz
sti
rcrb
dec
pop
loop
xor
sub
aaa
loop
lret
dec
fucom
jle
or
mov
dec
nop
mov
ljmp
iret
jle
int3
jg
addb
xor
test
inc
mov
mov
push
in
andb
loopne
xor
push
jns
inc
sub
xchg
mov
push
jg
cltd
inc
push
test
ret
or
sahf
or
xchg
ret
inc
movsb
pop
push
sahf
or
and
enter
sbb
aas
js
sbb
pushf
loopne
cmp
cmp
mov
mov
mov
es
lcall
das
mov
dec
pop
movsl
repnz
mov
fs
jns
dec
stos
and
sub
pushl
mov
push
aaa
cmpsb
loope
movsb
push
mov
adc
push
das
push
jge
fwait
lcall
dec
ljmp
imul
cltd
xchg
nop
mov
jb
rorl
lcall
xchg
popf
adc
and
cld
sub
ljmp
popa
popa
fisttps
test
inc
sub
fwait
or
xchg
cmp
int
sub
sub
push
inc
push
dec
mov
push
repnz
or
ret
jg
cwtl
ret
ljmp
in
ss
call
pop
mov
mov
push
xchg
add
enter
xor
imul
xor
fbld
call
cmpl
mov
xor
scas
cli
xchg
cmpsl
cmp
and
test
jle
enter
xchg
scas
sti
in
or
mov
dec
decl
aam
jno
orb
dec
add
dec
inc
popa
mov
and
mov
clc
call
test
xor
push
int3
into
outsb
data16
xchg
push
addr16
pop
jge
mov
mov
cmp
sbb
pop
nop
cmp
mov
mov
adcl
decl
dec
shll
fadds
sub
ret
or
xlat
mov
inc
jle
jmp
adc
sbb
and
inc
cmp
inc
lcall
adc
pusha
push
sbb
inc
inc
cmp
dec
movsb
pushl
lods
and
ja
cmpsb
or
loopne
mov
dec
mov
xchg
lret
clc
adc
jmp
std
adc
outsl
repnz
lods
rclb
xchg
mov
test
jmp
push
lahf
inc
dec
sub
cmp
push
mov
or
sahf
and
xor
or
hlt
sbb
cld
ljmp
insb
and
inc
cmp
aad
fnsave
int3
mov
inc
sbbl
nop
inc
push
pop
jg
imul
add
aad
push
mov
lcall
pushf
rol
repz
push
sbb
repnz
cs
mov
pop
xchg
xchg
push
addr16
imul
int3
inc
adc
cs
loop
decl
fldl
iret
dec
push
data16
mov
lods
mov
adc
mov
sub
push
decl
popl
inc
jo
xor
imul
clc
pushl
dec
dec
fadd
sub
int3
cmpsb
inc
cld
adc
jnp
mov
sbb
jmp
pop
nop
inc
jbe
and
daa
jno
call
sbbb
sub
repnz
cmpsb
mov
dec
jge
ret
and
stos
and
decl
push
faddl
xchg
adc
adc
jbe
inc
lea
fisubrs
pushl
jo
test
push
rcrb
sahf
lods
xchg
jae
aaa
pop
jmp
pop
imul
hlt
call
pop
pop
mov
repnz
aas
inc
push
xchg
enter
pusha
push
inc
lret
pop
mov
jg
ljmp
cmp
pop
or
aad
dec
sbb
pop
pusha
inc
dec
pop
and
rol
fdivs
mov
int
mov
mov
pop
xor
add
jb
inc
pop
mov
dec
incl
adc
mov
mov
and
xor
add
mov
insl
xor
loopne
fmuls
sub
mov
mov
outsb
insb
in
pushl
jbe
sub
add
mov
lcall
cltd
sbb
sub
mov
sbb
insb
out
mov
pushf
dec
add
ljmp
dec
das
cmp
aam
inc
sub
mov
ljmp
enter
dec
pop
adc
mov
roll
vmread
dec
aam
roll
ficoms
inc
pusha
rcll
rol
push
clc
xor
and
jl
stos
push
cmpb
add
push
pop
iret
int3
push
fucomp
mov
pop
adc
pop
idivb
xchg
push
mov
fsubl
push
pushl
popa
int3
dec
sub
adc
andl
push
jne
andl
aad
je
mov
inc
or
sti
inc
xor
out
out
pop
stos
pushl
inc
icebp
fsub
pusha
inc
cmp
cmp
jb
push
cld
mov
dec
pop
pop
and
sub
arpl
mov
jle
add
sub
mov
sbb
add
dec
push
push
call
pusha
sti
fildl
frstor
addb
mov
mov
outsl
clc
call
cld
es
addl
xchg
pop
mov
pushf
cmp
mov
sub
pushl
ficoml
mov
hlt
ret
adc
rcll
add
fnstenv
or
incl
das
inc
ret
pop
icebp
aas
lret
or
or
add
push
cs
push
or
decl
les
or
sub
or
ja
out
ljmp
lds
lock
mov
cmp
es
add
ljmp
jg
ljmp
pop
mov
dec
iret
out
rol
fs
insb
lock
fistps
or
cld
pusha
pushl
outsb
cwtl
mov
mov
push
insb
push
ljmp
lret
dec
lret
ljmp
out
sub
inc
sbb
xchg
mov
cli
dec
inc
adc
andl
out
add
loop
adc
or
mov
push
xor
testb
add
dec
addr16
ss
sub
push
movsb
call
pop
mov
cwtl
inc
lods
js
pusha
outsl
inc
iret
lock
into
in
push
or
mov
rolb
xor
cmc
orb
push
xor
in
cmpsb
sub
fidivs
mov
int
jae
pop
xchg
insl
push
ret
dec
fidivl
or
jb
sub
stos
loope
in
push
in
inc
push
lcall
lock
fildll
insl
or
mov
fsubl
cli
fdivrp
out
or
pushf
shr
jle
arpl
push
popa
setle
test
out
inc
or
or
push
jo
decl
cli
outsl
xchg
fidivl
xchg
inc
ret
in
jg
push
iret
mov
add
in
sbb
lock
push
pushl
or
mov
in
or
jb
and
and
sub
add
add
xchg
pop
jp
das
and
or
jo
imulb
push
xchg
std
in
scas
cwtl
lock
addb
fimuls
sbb
jbe
daa
jnp
incb
daa
adcl
xchg
jl
loop
sub
incl
or
loopne
and
lret
hlt
dec
or
ljmp
xor
imul
andb
dec
cmpsb
int3
xor
fildll
lock
push
add
xchg
inc
out
andb
sbbl
lcall
icebp
cmp
jl,pt
pop
cld
scas
filds
out
xor
stos
cli
rorb
add
or
push
jmp
adc
push
xor
mov
insb
inc
sub
sub
out
push
push
push
js
push
inc
push
stos
xor
jno
scas
call
xor
adc
dec
mov
sbb
mov
pop
scas
push
pop
jecxz
jle
push
movsb
decl
add
stos
divl
das
push
fildll
test
clc
fisubl
mov
adc
rcll
inc
push
mov
jg
add
mov
je
sbb
sti
ljmp
dec
pop
mov
mov
loopne
lcall
decb
sti
mov
or
jo
pop
rolb
sarl
jge
add
xchg
and
xor
testb
ljmp
and
pusha
push
jae
jge
and
loop
vmovntps
aam
loop
or
adc
shll
mov
and
lods
cli
add
pop
mov
lcall
xchg
inc
ja
add
pusha
add
sub
decl
jecxz
lods
add
push
and
push
add
in
enter
sbb
inc
jno
dec
cmp
fdiv
incl
sbb
ljmp
bound
shl
inc
aaa
vmovshdup
add
shrb
test
inc
loopne
jo
data16
decl
dec
xchg
or
and
sub
xorb
in
popa
loop
loopne
enter
pushl
std
inc
push
inc
cvtps2pi
push
dec
clc
sbb
andl
pop
or
dec
testb
sub
test
push
pop
bound
je
cld
hlt
push
sbb
and
bound
decl
pusha
ljmp
lock
lods
imul
repnz
pusha
mov
dec
sub
les
xor
fbstp
es
inc
adc
shl
xchg
or
out
mov
ljmp
mov
imul
into
sti
mov
sbb
call
mov
fwait
push
sti
lret
mov
mov
push
jg
ljmp
imul
rolb
inc
sbbb
add
hlt
outsl
adc
inc
xor
aaa
add
decl
clc
mov
cli
clc
cli
and
repz
imul
add
je
adc
pusha
push
decl
mov
push
dec
pusha
fs
sysenter
aam
inc
loop
pop
insl
add
adc
pop
scas
loope
ss
ljmp
jbe
scas
or
inc
pop
push
dec
xor
leave
xor
sub
scas
cmpsl
jb
pop
outsl
push
popa
ljmp
pusha
xor
std
or
mov
and
xchg
test
testb
add
ret
sar
or
arpl
rorb
and
lret
push
xor
mov
addl
push
adc
adc
dec
repnz
sub
cld
jg
stos
scas
inc
test
and
jg
xor
inc
mov
pushl
push
sub
sbb
dec
daa
xor
adc
es
add
mov
add
adc
jo
inc
sub
or
pushl
pop
imul
out
push
mov
dec
rcll
xchg
xor
mov
ret
xor
sar
cwtl
or
inc
sbbb
xor
cmc
inc
jno
xchg
xor
jg
ss
add
pop
push
fcomps
sbb
push
push
push
or
adc
mov
cmp
sti
movsb
xor
les
xchg
pop
fcomip
jmp
or
pusha
mov
mov
inc
loopne
sti
andb
inc
or
dec
pop
std
movsl
mov
or
jge
arpl
xor
dec
pop
mov
rolb
pusha
sbb
xor
xsha1
cmpsb
lret
add
sbb
jg
inc
icebp
dec
or
sbb
xor
jne
nop
jmp
push
outsb
jb
mov
adc
loope
addr16
sbb
call
mov
or
push
inc
aas
lock
scas
lds
mov
xchg
hlt
jns
out
decl
in
fdivp
pop
lcall
sbb
out
mov
ljmp
insl
add
mov
pop
cmp
bound
test
xchg
insl
aam
jae
test
xor
sub
push
test
add
mov
add
pop
sub
cli
mov
pop
out
dec
ljmp
ret
roll
and
push
xor
dec
in
xchg
shll
push
fsts
jecxz
jg
decl
jbe
movsl
xor
push
stos
push
pusha
jmp
inc
push
into
pop
xor
add
rol
decl
mov
push
loopne
incl
aaa
pop
and
fisubs
mov
aaa
xor
lea
dec
jp
push
fsts
adc
or
mov
jnp
mov
or
cmp
jl
xchg
pop
decl
fnstsw
fidivrs
mov
xchg
mov
cwtl
test
add
movsb
in
push
bound
std
ljmp
data16
andb
test
add
mov
add
aaa
cld
mov
or
add
mov
ret
daa
lcall
dec
arpl
outsb
data16
add
or
sbb
cmp
clc
adc
cld
incl
xor
adcb
xor
and
pop
jg
jg
aam
fstl
mov
js
jle
jg
jns
int3
push
fdivr
ljmp
je
and
mov
je
rclb
pop
stos
mov
mov
fwait
lcall
scas
test
mov
imul
es
out
and
incl
mov
insl
push
bound
push
icebp
lods
outsb
maskmovq
notl
aaa
arpl
dec
js
mov
pop
icebp
call
aaa
jno
testl
flds
or
fsubl
outsb
enter
ja
add
nop
sti
nop
mov
sub
jmp
sbb
jbe
pslld
adc
adcb
pop
mov
push
and
and
cmpsb
push
or
dec
sub
xchg
inc
sub
les
cld
lds
mov
or
push
incl
adc
push
cmp
lcall
cmpsl
dec
push
xchg
pop
cmp
sarl
sbb
mov
sub
sbb
sub
mov
in
xchg
fcomip
mov
jnp
add
in
fs
push
mov
jg
lock
movsl
and
push
add
test
sub
mov
incl
gs
roll
adc
add
pop
shll
xor
lcall
bound
mov
mov
add
add
cmpsl
jnp
mov
xor
std
test
mov
roll
ss
inc
lock
sub
xchg
sbb
push
test
inc
push
xchg
cld
mov
cs
es
scas
fbld
cs
fwait
mov
ljmp
clc
mov
mov
pop
call
scas
aad
mov
dec
xor
dec
ljmp
and
and
push
adc
xchg
adc
sti
lock
call
das
mov
nop
or
sbb
push
popa
call
mov
and
out
push
xchg
addl
mov
decb
or
mov
sub
call
pushl
mov
jbe
inc
je
gs
dec
into
out
or
xor
push
jecxz
idiv
pop
hlt
call
subb
jns
subb
bound
mov
push
fldenv
std
stos
stc
adc
xchg
je
sti
stos
inc
push
in
add
pushf
movsl
sar
lcall
addl
repz
pop
pusha
adc
fistpl
mov
cld
scas
mov
fdivrl
icebp
lcall
in
jg
add
orb
and
and
fistps
rcrb
rclb
inc
ficomps
es
push
dec
pop
or
pop
add
jg
mov
lret
add
je
and
loop
adc
add
decl
cmpsb
push
cli
add
and
mov
jo
mov
sbb
ljmp
xor
iret
jecxz
mov
xor
cmp
leave
out
lretw
xor
mov
call
sbb
test
int3
frndint
pop
lret
mov
push
fdivr
lret
aad
imul
jne
or
scas
ret
mov
test
outsb
xchg
sbb
or
sti
pushf
popa
dec
fwait
xor
push
rol
call
lcall
loope
stc
dec
mov
in
push
jae
negl
jno
clc
jmp
fldl
cmp
or
pusha
and
jmp
sbb
dec
xchg
mov
pop
inc
adc
xchg
push
dec
push
ljmp
sub
inc
jae
fnstcw
pop
sub
insb
addr16
inc
add
and
test
pop
dec
adc
into
push
cmpsl
jge
test
negl
pop
lahf
xchg
mov
rorl
inc
pushf
fcomip
fldenv
or
and
jl
mov
scas
ja
dec
push
push
les
sbb
dec
push
or
mov
pusha
gs
xorl
pushf
sysenter
push
or
std
pop
hlt
jle
pushl
cmp
push
push
loop
push
pusha
jmp
loop
ret
sub
ljmp
clc
decl
ds
or
xor
rorb
mov
push
pushl
roll
mov
incl
and
dec
add
xchg
lahf
or
xlat
lock
jmp
ret
popf
cmp
nop
add
mov
icebp
adc
inc
movsl
sbb
imul
cmpsb
push
mov
aam
adc
aad
push
fcomps
adc
dec
call
pusha
pop
notb
and
mov
mov
addl
hlt
neg
pop
sarl
adc
pop
out
popa
ret
pusha
mov
mov
daa
mov
mov
lcall
xchg
sar
cmp
into
mov
in
inc
stos
shufps
repnz
sub
sti
jl
push
jbe
ljmp
mov
stos
fstps
insl
movsl
push
inc
or
dec
sti
cmp
loopne
jne
test
lods
xchg
stos
cli
call
pop
dec
mov
mov
stos
iret
dec
cmp
setle
inc
repz
ljmp
mov
mov
mov
dec
pop
cmp
xorb
adc
pop
add
xlat
add
mov
rcr
jne
xor
lock
icebp
lcall
inc
and
lods
mov
push
ss
decl
or
mov
sbb
clc
inc
mov
mov
dec
pop
sub
shlb
or
jne
bound
add
incl
pop
sbb
push
jmp
subb
lock
fdivs
jmp
pop
xchg
sbb
xor
inc
xchg
fs
sbb
mov
lcall
inc
orl
fsubrp
addb
xor
cwtl
pushf
jnp
cmc
enter
add
pusha
mov
ret
adc
test
sbb
xor
and
xor
dec
decl
cmp
add
bound
add
sub
push
push
das
aam
inc
pop
mov
push
pop
subb
adc
adc
sbb
pop
xor
jnp
cmp
xchg
fwait
cmp
negl
jl
clc
adc
dec
push
int
xchg
push
mov
dec
or
push
test
test
push
js
aad
push
dec
call
rorl
lods
insb
pusha
fcos
jmp
adc
out
xchg
push
sub
push
and
sub
pop
xchg
sbb
and
jmp
cmp
pop
mov
mov
mov
jp
cltd
negb
push
xchg
lcall
sbb
fadd
sbb
shll
pop
outsl
and
addr16
jp
dec
lods
call
push
ficompl
pushf
insl
lret
cmc
mov
enter
pop
jp
mov
mov
inc
in
repz
aas
jae
xor
test
icebp
or
jnp
stc
aaa
fistpll
aad
mov
push
aaa
cmp
dec
and
xchg
pop
aas
enter
aad
fldcw
and
xorl
enter
in
xchg
jmp
in
xor
movb
aam
aaa
xor
adc
lret
out
sub
rorb
cmp
cmp
call
inc
ljmp
fcoms
mov
or
xchg
xorl
xchg
xor
call
push
cwtl
sub
cltd
outsl
cwtl
imul
or
je
dec
pop
pop
loopne
add
sbb
decl
daa
jmp
sbb
les
xchg
push
inc
adc
or
mov
aas
fcmovnu
hlt
inc
testb
hlt
push
cmove
ljmp
xor
lcall
aam
pop
fwait
mov
mov
cmp
add
mov
xchg
dec
shlb
cmpsb
mov
jno,pn
lret
pop
push
xchg
lahf
lret
call
mov
arpl
jl
ljmp
and
xor
hlt
lret
add
jl
xor
popa
mov
mov
fbld
xchg
add
dec
loop
out
scas
sub
cmpsl
hlt
jmp
xchg
xor
inc
or
lcall
jnp
adc
decl
xor
dec
jbe
push
popf
xchg
sub
aaa
sbb
lcall
push
js
sub
jno
or
fistps
in
inc
lahf
movsl
jmp
fidivrl
adc
lods
imul
xlat
sbb
mov
ljmp
cli
pushl
clc
adc
sub
inc
lret
adc
ret
inc
xor
call
test
or
outsl
aaa
jp
mov
pop
cmp
cmp
dec
inc
push
push
xchg
pushf
and
mov
fcomps
decl
or
inc
push
repnz
lret
lret
push
outsb
jne
mov
adcl
mov
pop
sti
pop
call
cs
add
orb
sbb
or
ret
push
or
dec
push
add
pushl
mov
mov
ret
movsb
ljmp
sub
mulb
lods
shl
enter
mov
cmpsb
popa
shl
or
mov
jmp
xor
dec
cmp
arpl
lret
orb
ss
xor
ret
arpl
sti
or
cmp
sbb
jne
pop
sbb
fisttps
call
or
out
sbb
cmp
dec
popa
dec
dec
sbb
xchg
jmp
sbb
imul
jecxz
lea
mov
hlt
mov
mov
bound
bound
xchg
rcrl
or
adc
push
mov
outsl
call
adc
stc
push
cmp
mov
mov
stc
fcoms
xchg
cmp
xchg
clc
decl
add
mov
push
inc
scas
push
jmp
xlat
mov
inc
scas
jno
imul
mov
into
loopne
nop
arpl
or
xor
mov
and
sbb
mov
out
mov
jo
sbb
lock
push
push
mov
test
add
call
mov
adcb
cmp
sarl
sbb
cwtl
ret
dec
mov
cmp
cwtl
daa
stos
lret
pushf
jbe
cmp
in
dec
mov
ljmp
push
sbbl
add
sub
inc
mov
cmp
incb
mov
sar
pushl
and
or
lods
loopne
sub
jne
mov
jo
hlt
lods
outsl
hlt
test
lcall
push
jmp
and
and
test
jg
jnp
jbe
mov
ss
lcall
add
push
xor
les
popa
or
mov
adc
decl
popa
mov
fsts
jo
and
lods
addr16
int3
pop
or
push
adc
ljmp
cli
int3
enter
mov
push
and
enter
inc
mov
pushf
es
sti
inc
mov
ljmp
jne
push
xchg
icebp
rolb
cmp
mov
movsb
mov
rclb
add
int3
cmp
mov
pop
xchg
movsl
sbb
pop
push
cmp
mov
or
add
inc
or
loopne
jo
push
xchg
mov
push
call
movsl
cltd
hlt
loop
decl
dec
pushf
jecxz
daa
dec
jo
sub
or
cmp
test
jbe
sbb
xor
jmp
dec
mov
insb
pop
mov
adc
mov
pop
fwait
pop
push
cld
ljmp
cmp
int3
xchg
push
scas
pop
xchg
jmp
in
pop
cwtl
inc
jbe
mov
in
add
cld
outsb
in
inc
into
iret
mov
inc
sti
jne
sub
push
scas
sbb
sbb
lret
inc
sub
in
jb
inc
fcmovnu
mov
rcll
dec
stos
pop
sarl
lock
incl
popf
nop
test
icebp
popa
shll
lcall
or
sbb
cmpsb
es
arpl
xor
stc
nop
jg
mov
dec
pop
mov
lcall
push
aam
push
jl
int
stos
in
mov
jmp
fildll
decl
jmp
mov
add
pop
pop
decl
jmp
pop
or
push
iret
outsb
jmp
fmuls
mov
fnstenv
adc
mov
aam
and
fldl
hlt
xchg
push
jmp
popf
mov
xor
xchg
pusha
rcrb
loopne
cmp
dec
test
jmp
in
xchg
add
les
sbb
xor
mov
mov
pushf
je
cmpsl
cmp
incl
add
add
mov
sarb
arpl
jmp
ljmp
test
cmp
in
out
imull
mov
test
ficoml
xor
pop
add
fidivrl
adc
loopne
push
mov
ffreep
xchg
add
mov
imul
or
lcall
pop
inc
fdiv
icebp
cmp
jecxz
mov
jp
xor
mov
mov
decl
ficompl
xor
inc
daa
mov
pushl
ljmp
mov
fs
cmpsb
shll
fs
sub
inc
adc
and
fs
clc
pushl
dec
push
xor
popa
subb
push
pop
mov
jns
push
push
incl
pop
rcll
andb
je
pop
arpl
out
adc
addr16
jae
xchg
aad
cmp
pop
cmp
jns
lock
jae
adcb
je
cmp
cmp
bound
call
incl
xor
add
rcrb
aad
sahf
xchg
adc
cmp
shufps
lock
rorb
jg
test
cmp
mov
dec
mov
imul
pop
pusha
add
pop
rorb
and
les
inc
adc
ret
lds
xor
and
push
cmp
fdivl
or
cmp
daa
xchg
or
ljmp
adc
call
fiaddl
aaa
jp
jecxz
jg
call
jno
xchg
addr16
nop
push
sub
jge
jmp
xor
push
cmp
push
jle
bound
ljmp
loope
sti
add
xchg
inc
sti
add
pushl
je
mov
jg
push
sbb
dec
in
mov
push
es
ja
inc
xor
js
call
sbb
adc
jmp
sub
inc
adc
cmc
adc
xchg
inc
imul
adcl
adc
cld
lcall
dec
add
mov
js
push
jbe
xor
mov
add
repnz
and
pop
xchg
inc
addr16
call
push
icebp
ss
xor
pusha
mov
xchg
add
sub
xor
sub
and
dec
and
cmpsb
movsb
and
mov
sarl
dec
sar
pushl
dec
and
fwait
movb
bound
jo
adc
pop
cltd
aaa
add
dec
ret
hlt
dec
addr16
jmp
mov
cmp
rolb
pop
mov
imul
jg
ljmp
daa
xchg
push
or
insl
mov
push
and
inc
push
es
out
clc
xlat
jnp
mov
repnz
adc
xlat
jb
jae
add
push
ret
pop
push
xchg
pusha
adc
and
shll
push
push
stc
jbe
imul
inc
inc
sbb
decl
mov
xor
icebp
cltd
xchg
cltd
push
ja
jno
xor
sbb
pop
sti
xchg
sar
lcall
in
in
sbb
bound
xor
repz
ljmp
call
jg
movsl
xchg
jmp
lea
fs
lret
imul
pushf
pop
xor
incl
mov
sbb
jne
inc
dec
jg
cmp
push
andb
sti
mov
adc
outsl
sbb
je
dec
xchg
pop
notl
pop
pusha
sub
and
mov
out
ss
pop
repz
and
stc
inc
xor
into
stc
incl
aad
pop
adc
or
cmp
test
ret
test
push
stos
adc
xchg
das
mov
and
xchg
imul
incl
sub
add
js
pusha
or
add
sbbb
test
or
and
push
incl
sarl
nop
add
add
shlb
mov
xor
adc
dec
shl
decl
xor
or
jecxz
aad
mov
arpl
movsl
jmp
mov
ljmp
cwtl
cmp
mov
pop
add
fistl
sbb
call
pop
add
aas
add
imul
pop
xor
rcll
inc
outsl
xchg
sbb
ret
xor
incl
out
sub
loope
test
mov
adc
push
adc
sub
jl
xor
test
test
ljmp
adc
jae
aaa
jne
cmp
adc
jne
inc
sub
pushf
fs
xorl
pushl
cli
adc
lret
fnstcw
fwait
xor
pushf
mov
lods
add
stos
jns
sbb
std
call
jae
sti
cmp
gs
nop
sub
dec
std
incl
sub
xor
out
je
lahf
pop
ret
sbb
dec
or
outsb
arpl
aad
fistpll
xchg
add
add
xchg
push
ja
out
adc
ljmp
data16
nop
dec
or
and
clc
outsl
lcall
push
xorl
jecxz
and
dec
repnz
les
jo
push
mov
mov
es
and
and
adc
scas
testb
inc
add
push
mov
or
sbb
mov
sub
pop
dec
sub
ljmp
fildl
loopne
clc
jg
sbb
ret
xchg
test
pop
jno
jecxz
jnp
js
shl
pop
jp
lcall
inc
sbb
loope
stos
ja
xchg
jmp
add
pmaddwd
in
je
and
decl
outsb
popa
mov
aam
or
inc
outsl
fdiv
cwtl
ljmp
fisubs
mov
pop
jns
jns
ljmp
push
sbb
es
inc
stos
das
data16
ds
dec
sarb
and
incl
mov
fwait
ret
xchg
cmp
mov
sbb
ljmp
cmp
cwtl
popf
or
pop
in
and
clc
lods
stc
loope
gs
jecxz
pusha
mov
ss
ljmp
lods
jae
xor
enter
ss
xor
stc
cmp
bound
ljmp
and
mov
shll
jp
loopne
or
add
fstps
lock
jmp
cwtl
mov
xor
xchg
push
jp
inc
ret
cmc
and
lods
aad
mov
outsl
cli
lcall
ljmp
es
pusha
mov
push
mov
and
clc
push
or
lcall
add
decl
dec
push
and
lea
sub
jne
push
push
inc
subb
decl
shrl
mov
movsl
add
xchg
cmp
adc
and
insl
aaa
pop
ljmp
clc
cs
push
cmp
inc
test
xchg
adc
ret
fisubrl
adc
call
xor
dec
js
cmp
cmp
push
pop
push
add
dec
mov
jmp
jmp
inc
sub
mov
pushf
mov
push
andb
mov
fldt
mov
stos
ret
pop
xlat
stos
test
add
mov
sbb
mov
stos
cmpsl
icebp
inc
pop
xor
stc
or
mov
mov
sub
nop
or
pop
leave
mov
or
xchg
fmull
adcl
pop
pushl
push
fsubs
fiadds
cmp
sti
push
jmp
xor
jnp
aas
cli
pushl
mov
or
adc
add
stos
xchg
cmp
jns
addb
jns
hlt
cmp
xor
lock
pop
cmp
mov
mov
mov
cwtl
jne
push
in
call
add
or
insb
xlat
add
idivl
leave
ret
and
gs
mov
mov
pop
jl
pushf
fcoms
inc
cmp
xchg
fmull
icebp
call
es
mov
inc
mov
adc
pop
jg
sbb
and
adc
mov
ljmp
lcall
sti
mov
in
shrl
mov
jns
imul
inc
idivb
mov
vpermpd
adc
adc
sbb
lcall
cmp
adc
mov
jno
jno
ja
popf
lcall
in
jl
test
jmp
fwait
test
lds
adc
decl
mov
and
mov
mov
lds
call
adc
sahf
imul
insb
les
int
clc
inc
je
lods
arpl
scas
cwtl
sub
je
and
fbld
pusha
adc
popa
or
pop
and
and
cmp
call
xchg
adc
xchg
movsb
mov
fiaddl
cmp
and
les
cmp
xchg
adc
jns
in
in
stos
cmp
jnp
dec
adc
cmc
mov
mov
test
and
dec
fcos
jmp
mov
adcb
push
in
add
rcrl
jmp
sub
xor
ret
inc
cmp
push
inc
xchg
add
incl
iret
mov
push
lret
js
shll
shll
out
sub
loop
movsl
inc
out
dec
jmp
in
adc
lcall
and
cld
mov
push
mov
jmp
cwtl
adc
das
loopne
jge
push
outsb
loopne
push
sub
cmpsl
sub
mov
je
jle
and
daa
jo
jle
adc
pop
daa
test
aad
incl
jmp
mov
xchg
push
or
or
ss
cmpsb
mov
cmpsb
call
cmpsl
mov
inc
adc
mov
mov
in
sbbl
int3
sti
fsubrs
adc
in
cmpsb
incl
xor
imul
sub
insb
push
scas
and
mov
in
stos
scas
ficoml
inc
call
decl
add
pop
dec
cmpsl
dec
fsubrs
rcll
mov
mov
ljmp
jge
ret
dec
fsubrl
decl
and
push
push
jb
fldl
aad
add
fistl
ljmp
adc
sbb
fsubl
pop
mov
repnz
cmp
stos
pop
dec
and
idiv
inc
adc
in
imul
add
je
jmp
mov
pop
or
or
mov
pop
dec
jmp
sbb
ss
pop
scas
push
xor
cld
out
push
aas
adc
int
fdiv
stos
or
xor
or
rcrl
loopne
sbb
jo
mov
add
push
loope,pt
inc
mov
or
mov
sub
and
add
sub
loop
push
dec
scas
sub
jnp
mov
stos
jecxz
scas
mov
in
jp
movsl
mov
mov
decl
and
pushf
jne
mov
lcall
cmp
ret
lcall
cmp
out
mov
fs
movsb
sahf
xchg
mov
lock
inc
fnstcw
dec
sahf
xor
push
inc
ldmxcsr
repz
dec
push
out
pushf
daa
xchg
scas
clc
out
pushl
loopne
add
fwait
xchg
push
call
xchg
pop
fiaddl
testb
cmpsb
push
ljmp
pop
stos
neg
in
lea
xor
mov
cmpsb
imulb
outsl
inc
mov
addr16
cmp
ljmp
int3
movsb
pop
pop
rolb
loop
movsb
mov
xchg
hlt
call
fucomi
into
add
fldl
xchg
mov
fldlg2
pop
dec
adc
ficompl
dec
aas
xlat
cmpb
pop
cmc
movsb
cld
sub
sbb
ds
stc
sbb
scas
add
cld
lcall
or
cmp
sub
shll
sub
push
push
cld
neg
pop
dec
lods
add
jno
aad
cs
pop
enter
mov
sbb
push
and
daa
in
lcall
inc
sub
mov
aam
adc
icebp
aaa
jg
arpl
incl
cmc
adc
lods
outsb
lods
repnz
icebp
das
dec
loop
aaa
push
aam
mov
xchg
incl
add
inc
movl
or
adcl
jl
arpl
or
cmpl
shll
mov
push
mov
xchg
and
and
sub
sarb
out
clc
xor
dec
sbb
jno
in
repz
sahf
and
xchg
and
std
decl
add
push
add
pop
aad
jno
mov
pop
pop
pop
xor
ret
ds
ljmp
add
jnp
mov
mov
xor
fnstsw
incl
or
outsb
fadd
jo
sbb
lds
sbb
xchg
jmp
test
push
mov
aaa
adc
xchg
xchg
and
mov
shlb
test
sub
mov
call
or
mov
lret
xchg
fimull
xchg
add
std
mov
andb
sbb
inc
repz
fcomip
call
xor
popf
ljmp
dec
pop
stc
jp
in
addb
lcall
push
inc
pop
xchg
and
div
iret
jmp
lock
xchg
outsb
and
sub
cli
insb
loopne
ljmp
popa
cmp
sbb
incl
ds
rolb
js
add
sub
pop
ljmp
pop
ljmp
loope
pop
pusha
rolb
and
cltd
jecxz
mov
mov
mov
test
xchg
push
sub
mov
push
ljmp
das
mov
call
push
jae
xor
pop
call
xchg
and
jmp
adc
cmp
mov
dec
cmp
push
jae
adc
sub
or
dec
inc
mov
out
mov
mov
incl
stos
xor
mov
xchg
inc
add
mov
xor
dec
jg
in
cwtl
mov
dec
cmpsl
call
sahf
pusha
mov
sub
fwait
cmp
out
cli
jmp
xor
mov
mov
mov
cmp
mov
jg
fisubrl
sbb
pop
popa
add
shrb
mov
aaa
testb
decl
jecxz
add
iret
add
int3
mov
sbb
shlb
enter
cmp
decl
out
rcr
pusha
addb
adcl
in
lea
mov
test
sub
jnp
aaa
ljmp
call
cltd
mov
dec
cmp
xchg
xor
cli
cmpsb
stos
out
mov
jl
mov
cmp
enter
cmc
aam
jns
lahf
jg
lcall
add
xor
mov
mov
in
movsl
lcall
shr
mov
or
mov
scas
or
push
push
jno
push
hlt
inc
xchg
and
call
cld
fwait
inc
mov
jl
xchg
subb
jns
ds
pushf
or
rcll
clc
mov
lods
jl
loop
push
and
jg
aaa
lahf
mov
je
dec
dec
and
lret
fistps
sub
cltd
cmp
cmp
push
hlt
inc
sbb
add
push
cmp
popf
push
and
jmp
xor
mov
jmp
enter
pop
or
push
jnp
subl
push
push
scas
out
imul
cltd
pop
jge
jmp
stc
pop
xchg
add
stos
mov
psrld
std
addr16
xor
aas
stos
pusha
mov
movsl
decl
cvtps2pi
inc
or
in
out
popf
fists
das
jl
sbbl
repnz
add
pop
mov
jg
xor
push
cmp
add
and
mov
mov
nop
xchg
sub
add
or
testb
pusha
add
jg
mov
cwtl
orb
movl
movsb
and
jns
add
call
jle
mov
clc
or
je
mov
cmp
ffree
cmpsb
xchg
push
mov
popa
call
push
sbb
fiaddl
pop
or
test
lods
and
jnp
loopne
pop
in
push
pop
clc
adc
push
inc
pop
and
addl
sbb
cmp
sbb
sbb
xor
rcrb
adc
and
fwait
add
xor
scas
je
jg
fwait
inc
lcall
jne
pop
sbb
scas
and
jne
add
out
pushl
cwtl
mov
pop
in
dec
ja
cmp
stos
dec
leave
sub
movsl
es
and
push
repnz
aam
jmp
cmp
std
inc
cmp
fcmovnu
lods
lret
push
loope
daa
pop
lods
outsb
repnz
lcall
dec
push
fidivl
jmp
lea
inc
int3
in
sub
das
and
incl
add
hlt
orb
and
pusha
jg
bound
inc
divl
pop
mov
push
test
lahf
jb
mov
ret
mov
pusha
test
mov
and
push
pop
mov
adc
pop
addb
in
ss
inc
pop
dec
add
add
mov
push
or
decl
sub
add
dec
sbb
inc
add
in
je
cmp
and
jg
rcl
mov
mov
pop
dec
cvtps2pd
mov
cmp
fstps
fstpl
jmp
rclb
enter
adc
jge
inc
call
mov
jle
xor
xor
shlb
xchg
xchg
in
jge
ljmp
es
addl
sbb
ljmp
cli
mov
mov
lods
mov
pop
mov
mov
dec
scas
outsb
clc
call
cmp
shrb
mov
popf
sub
adc
jg
loopne
lret
pop
adc
js
test
xor
loope
dec
lret
dec
test
mov
push
or
nop
nop
test
test
push
scas
mov
stos
pop
aad
jnp
xchg
push
push
insb
popf
xor
pushl
sub
std
push
jle
push
inc
leave
mov
lret
xor
adc
pop
mov
adc
pop
jo
sbb
loope
cli
enter
hlt
repnz
xor
inc
mov
mov
mov
call
add
push
adc
jae
sub
jne
add
xor
xor
mov
lods
rclb
bound
decl
jp
inc
mov
roll
arpl
shlb
pop
add
mov
aad
dec
sbb
insl
add
sahf
dec
mov
cwtl
mov
call
int3
lock
xchg
mov
mov
mov
or
lock
push
pop
in
enter
jmp
out
jno
jns
and
repnz
push
loopne
fidivrs
dec
inc
aaa
fiaddl
cltd
int3
movsb
adc
add
jno
pushf
rol
int3
popf
roll
cmp
lock
outsl
clc
pushl
dec
pop
clc
repnz
xor
adc
cli
mov
mov
push
jae
mov
ljmp
inc
cmp
mov
cmp
out
mov
jle
mov
int3
pushl
pop
int
pop
dec
cs
cmpsl
scas
js
push
pop
aad
push
cmp
cmp
lods
xchg
jns
sti
fucomi
sbb
idivl
adc
inc
out
jl
jns
aas
sti
fwait
inc
loope
jb
jg
notb
arpl
jmp
mov
jo
ret
jge
ret
faddl
push
js
or
loopne
pop
mov
jg
pushl
mov
add
fadds
daa
xchg
and
jecxz
mov
out
xchg
mov
push
xchg
stos
cmp
aaa
push
mov
enter
xor
jg
pop
push
sbb
shl
push
add
mov
xor
mov
cli
jg
ja
jb
int3
dec
pop
mov
lret
pop
in
push
lds
lods
out
aas
jl
and
lcall
insb
mov
decl
clc
test
xor
pop
icebp
inc
add
nop
pop
es
cmp
pop
mov
cwtl
mov
sbb
jp
jo
mov
dec
lock
mov
mov
scas
mov
rclb
pop
jmp
repz
repnz
test
je
or
push
ljmp
scas
cltd
lret
mov
jne
push
fistpll
mov
push
mov
decl
loope
jns
mov
je
jnp
adc
push
lods
jb
mov
push
add
mov
adc
add
sub
or
pop
mov
dec
xchg
jg
jl
std
ljmp
cwtl
or
inc
ret
lock
and
lcall
cmp
dec
mov
or
clc
pop
sbbl
incl
mov
mov
or
jo
sbb
faddl
movsb
fisubrl
or
cmc
fwait
loopne
mov
cld
or
mov
cmp
mov
adc
clc
xor
jb
scas
mov
mov
push
arpl
clc
mov
sti
mov
push
lcall
mov
push
jno
cmp
xor
mov
or
xor
hlt
mov
cmp
cltd
adc
adc
mov
mov
in
mov
xchg
enter
in
les
sub
inc
adc
pushf
adc
ljmp
add
or
xor
mov
sbbb
mov
jmp
pushl
mov
xchg
xchg
in
sarb
pushl
push
popf
push
adc
or
dec
sub
xlat
arpl
inc
push
xor
movsb
cmp
inc
jmp
mov
push
scas
xor
adc
push
aaa
jb
out
shll
mov
lcall
sbb
push
mov
stc
scas
add
addr16
ljmp
sub
aas
add
mov
rdpmc
cmp
fmuls
cli
or
adc
decl
sarl
sub
mov
pusha
sbbl
andb
jg
rcrb
and
test
or
ja
lahf
cld
mov
ja
mov
cmp
push
in
inc
nop
cmc
fmuls
in
cmpsb
pop
push
mov
cmp
mov
and
pop
mov
sbbb
lcall
bound
insb
and
add
mov
mov
decl
aas
lock
or
xchg
jno
cmp
sbb
sub
js
mov
and
xchg
lds
test
mov
mov
push
mov
adc
pop
sub
ret
xlat
bound
inc
xchg
add
inc
lock
mov
test
mov
les
rorb
xor
push
mov
fbld
in
xchg
imul
popf
loop
xchg
inc
xchg
xchg
test
ss
dec
cmp
ljmp
mov
loope
movsl
shlb
pop
scas
cwtl
fcomps
loope
jns
mov
jg
int
daa
call
push
and
enter
shll
stc
fnstcw
lcall
shlb
icebp
xor
fisttpl
insb
or
xchg
ljmp
mov
test
call
and
mov
fiadds
sahf
cmp
mov
in
andb
and
cmpsb
ljmp
push
xchg
jmp
lock
leave
mov
sub
mov
add
add
jg
ret
in
and
les
cwtl
xor
add
push
cld
aas
repz
adcb
je
mov
sbb
insb
push
xor
lock
cmp
lret
jg
in
fadds
xor
sub
xchg
and
or
sub
sbb
xor
fistps
inc
sub
cmp
mov
inc
dec
inc
std
jg
outsl
repnz
mov
popa
xchg
adc
lods
pusha
dec
or
rorb
mov
cmp
ret
jns
cli
mov
clc
loope
in
xchg
in
cmp
and
lcall
adc
pop
inc
or
or
push
jge
or
mov
jnp
bnd
call
or
adc
cs
inc
xchg
cld
jg
inc
lcall
pusha
add
inc
imul
les
popa
lea
cmp
dec
pminub
jnp
mov
call
mov
inc
mov
loopne
and
adc
push
mov
mov
mov
adc
cwtl
xchg
stos
cltd
xor
mov
cmp
negl
adc
enter
call
sbb
fs
repz
adcb
jle
add
mov
es
mov
xchg
and
shr
and
incl
or
leave
mov
sub
or
or
dec
jmp
sub
popa
dec
ret
icebp
fdivrs
daa
mov
lds
xor
call
adc
pop
popf
popa
in
adc
loopne
mov
and
lcall
xor
popa
adc
fxch
pop
fcomps
rcl
incl
pop
shlb
inc
mov
lret
ljmp
mov
xor
lcall
mov
cli
add
rcrb
add
mov
out
es
std
inc
paddsb
pop
or
repz
call
addl
inc
sub
mov
push
mov
push
and
adc
pop
and
xchg
test
mov
incl
pop
jbe
push
add
lock
mov
mov
mov
xchg
lret
sub
dec
mov
ficomps
add
cltd
je
xchg
jae
inc
lahf
sub
gs
mov
or
decl
inc
lcall
inc
adc
test
mov
push
ds
push
cmp
mov
dec
fstpl
ds
test
or
jg
push
mov
mov
or
mov
fsubrs
enter
add
mov
mov
cld
lcall
ret
sub
inc
pop
push
dec
lret
fldenv
lods
fcom
stc
inc
cmp
dec
pushl
js
inc
int3
loopne
arpl
inc
xor
mov
adc
incl
mov
cmp
inc
or
imul
pop
in
cli
xor
push
cmp
ja
jne,pt
cmpsl
pop
int3
decl
dec
mov
das
icebp
add
sarb
or
int
les
or
mov
jge
mov
xor
and
dec
pop
rorb
push
pop
xchg
adc
pushl
mov
mov
xorb
pminsw
cmp
ret
adc
mov
add
or
stos
and
cmp
push
or
sbb
push
std
cwtl
xorb
sbbl
add
scas
add
sub
popf
mov
sahf
xor
fwait
and
jmp
pop
sub
adcl
int3
push
lret
jp
xor
inc
sub
ds
cmp
xor
mov
orb
sub
ds
add
mov
decl
in
cwtl
and
mov
setns
call
mov
sbb
sub
sub
incl
lret
sub
mov
or
rcl
xor
fwait
sarb
xor
jmp
les
imul
add
mov
jp
pop
mov
fcomip
push
std
dec
jmp
push
xchg
push
test
pushf
push
repz
mov
cmc
aaa
cld
or
cmpsb
jge
addr16
popa
dec
xchg
orb
in
push
jmp
mov
mov
xchg
js
push
add
andb
sar
incl
pop
mov
int
out
ja
xor
mov
lds
call
les
cmp
and
push
pop
mov
decl
pusha
add
aad
lods
inc
or
sbb
dec
sbb
or
lock
adc
add
jo
add
inc
mov
push
testl
inc
cs
arpl
pop
in
mov
and
jns
xor
mov
cmp
filds
das
mov
xchg
adc
mov
sbb
cmp
sub
adc
ljmp
leave
repnz
mov
lcall
push
ljmp
decl
fdivp
or
jns
sub
dec
adc
ret
movsl
pop
push
pushl
add
dec
aas
cmp
dec
loope
fabs
sbb
adc
nop
test
lcall
movsb
xor
jmp
pop
dec
mov
xor
cmp
loope
lods
add
jmp
xchg
in
push
inc
das
add
call
inc
jge
popa
stc
bound
mov
jl
das
sbb
pushl
popa
ret
mov
decl
xchg
out
sbb
dec
stos
or
andl
fisubrl
xor
mov
std
or
xchg
loopne
add
mov
sbbb
mov
mov
jmp
add
outsl
cltd
mov
and
add
cwtl
mov
lcall
test
mov
cmp
cmp
add
dec
push
aam
ljmp
mov
cmp
pop
stos
dec
sbb
xor
and
inc
add
ds
call
sbbb
mov
xor
dec
inc
mov
cltd
fldl
jae
push
mov
cli
decl
orl
adc
mov
mov
popl
out
push
and
cmp
ljmp
add
xor
cmp
mov
scas
xchg
jmp
inc
fdivrl
lock
popa
ss
pop
in
pop
add
loope
cmp
inc
movb
cmpsb
aam
mov
jge
pop
fwait
popa
ror
mov
call
pop
lret
xchg
or
cmp
repz
outsb
mov
daa
cmp
jbe
push
jg
mov
ljmp
loopne
int
or
and
paddusw
sbb
mov
call
cmp
lea
lea
call
jbe
mov
outsl
ljmp
lea
lock
insb
pop
orl
imul
add
in
xor
sbb
mov
jb
or
cwtl
cmp
bound
jg
orl
jno
ds
xchg
pop
and
sbb
add
sbb
lcall
pop
xchg
mov
dec
xchg
in
repz
jg
mov
mov
mov
frstor
inc
insb
or
js
ds
xor
push
call
in
dec
fimull
mov
pop
dec
mov
xorb
test
movsl
sbb
jg
inc
sbb
stos
sbb
push
shrl
jmp
cli
aad
mov
adc
add
dec
loopne
pop
dec
cltd
jne
mov
dec
mov
decl
sub
or
xor
outsl
aas
insb
popf
fstl
xchg
push
lret
lss
cli
push
sub
cmp
repz
rclb
das
jp
cmp
ret
ljmp
jl
sub
add
mov
or
fildl
dec
clc
push
aam
add
mov
bound
mov
sahf
adcl
bound
pushl
add
sub
sarb
pop
mov
add
imul
fsubl
lcall
xchg
stc
sbb
loop
inc
div
mov
decl
jg
fmull
mov
sbb
sar
nop
inc
call
jno
pop
jns
dec
fstl
stos
sub
and
call
test
or
fcoms
in
sub
xchg
nop
lahf
jae
mov
xlat
and
in
das
xor
loopne
sar
call
pusha
orb
sub
and
or
pcmpeqb
mov
ljmp
sbb
les
and
jecxz
and
shl
inc
mov
pushl
clc
jno
movaps
cli
jl
adc
ficoml
push
and
lcall
and
pop
dec
adcl
roll
aas
lods
bound
aam
ret
pop
cmp
push
jp
dec
ret
dec
mov
popa
mov
mov
shr
js
jbe
pushl
fcom
ret
ja
fidivl
inc
lock
shrb
push
dec
enter
push
std
decl
das
popa
rclb
loop
sub
mov
ds
pushl
push
or
jle
incl
mov
inc
in
fnstcw
es
inc
adc
mov
loopne
int
loopne
orl
int
sub
mov
or
aad
das
mov
cs
xor
xchg
jg
push
jnp
cli
jmp
out
enter
loop
fsts
lret
mull
mov
mov
ja
in
icebp
or
xor
les
push
ds
sbb
push
fwait
push
or
nop
popa
xchg
mov
nopl
and
out
imul
cmp
test
das
ret
mov
call
mov
or
xchg
loope
ds
jg
sbb
mov
push
movsb
xchg
xorl
ss
cmp
adc
mov
in
inc
enter
sbb
inc
lcall
mov
or
pushl
std
jb
leave
and
cmp
push
lock
call
inc
sbb
decl
pushf
lock
xor
jge
sbb
pop
cmpsb
jns
idiv
call
inc
cltd
jp
aad
dec
test
xchg
cmc
nop
addr16
insl
inc
push
dec
inc
mov
push
test
pushl
call
push
push
sbb
hlt
stos
scas
lods
in
repnz
push
mov
movsb
push
stos
call
pushl
mov
stos
dec
shld
sbb
in
fstps
push
lods
gs
repnz
push
sti
scas
xchg
lock
fsubs
xchg
sbb
pop
xchg
jg
imul
adc
test
cli
xchg
test
data16
insl
xor
call
daa
xor
ret
test
xor
imul
xor
push
mov
jo
mov
cmp
and
rolb
add
movsl
dec
xor
push
mov
gs
jg
inc
call
push
mov
add
mov
mov
ljmp
ss
ret
jg
cwtl
pop
and
cmpsb
mov
mov
fsubl
mov
mov
pop
push
or
lock
cltd
in
dec
push
out
jmp
mov
and
inc
dec
sbb
scas
jne
popa
mov
mov
mov
pop
ss
sbbb
or
call
lock
out
dec
mov
push
nop
call
cltd
mov
jmp
into
cli
and
pushf
pop
xchg
lar
out
xchg
xor
pop
sbb
rolb
je
inc
pop
xor
cltd
notb
pop
adc
call
icebp
sub
xor
mov
inc
push
pop
jno
xchg
push
les
mov
test
scas
decl
out
lods
leave
mov
pop
jle
les
xchg
pop
fldenv
push
mov
jne
xchg
mov
cmpsb
push
xchg
pop
in
push
pop
lea
insl
cmp
add
shrb
jmp
fimull
add
call
fstps
lahf
clc
sub
mov
or
pushl
int3
popa
aaa
mov
xorl
mov
or
repz
jo
inc
sbb
gs
cmp
outsb
sbb
pushl
int
cltd
jae
adc
cs
insb
xchg
mov
in
xor
jmp
sarl
and
std
daa
test
and
hlt
hlt
add
in
sub
loopne
je
lods
jns
lock
ljmp
sub
xchg
scas
ss
stos
jns
mov
sbb
je
mov
rol
cli
ljmp
fisubs
push
xchg
xchg
inc
lret
cmpsl
lcall
ljmp
inc
scas
add
xchg
inc
mov
aad
orb
xchg
movsb
and
nop
add
pushl
int3
mov
and
and
xchg
adc
sbb
xor
adc
add
pushl
mov
sbb
sub
or
dec
sbbl
aad
pop
mov
out
clc
addb
sub
cmp
sahf
push
push
subl
out
push
inc
jns
cmpsl
inc
pop
xchg
pushf
clc
sub
cmp
adc
gs
jl
add
dec
repnz
mov
cwtl
and
cmp
mov
push
add
jne
add
add
mov
xchg
jmp
mov
pop
fisubs
dec
and
hlt
jmp
movsl
sub
ljmp
fmul
mov
shll
and
lret
jns
dec
cltd
arpl
cltd
sub
push
fcomip
decl
call
cmpsb
in
adc
outsl
push
xchg
ret
daa
test
ret
mov
add
in
mov
push
add
dec
addb
mov
inc
data16
push
mov
xchg
xchg
data16
and
ljmp
sbb
push
push
cld
jmp
sub
loope
ret
push
ljmp
sub
in
insb
mov
mov
xor
add
jmp
xchg
push
test
jecxz
mov
sbb
dec
lcall
les
incl
push
movsb
cmp
fldl
sbb
loopne
orl
or
lret
pop
lahf
lcall
fidivs
aaa
add
xchg
ds
push
gs
lret
dec
dec
scas
mov
test
call
aad
pop
rolb
dec
loope
daa
dec
imul
mov
test
fisubrs
lock
movsl
sub
call
cmp
stc
test
push
xor
jmp
jae
out
fiadds
mov
sub
push
out
cli
mov
pushf
and
out
outsb
scas
and
add
pop
cmp
ss
sbb
or
add
mov
mov
sub
iret
or
je
inc
jmp
xor
xchg
push
sbb
loopne
jae
mov
pop
mov
push
inc
repz
mov
mov
addr16
rorl
sub
sub
decl
add
repnz
pop
sti
pop
rolb
dec
adc
xor
xor
icebp
xchg
dec
push
push
dec
nop
mov
test
lcall
enter
roll
adc
or
sahf
imul
dec
xchg
adc
ljmp
leave
dec
xchg
sub
gs
push
es
bound
or
add
incl
pop
sarl
mov
out
shll
mov
jle
and
fldcw
push
daa
and
aad
cltd
sub
popf
jno
adc
jnp
mov
ret
xor
insb
gs
ljmp
dec
rcrl
movsb
mov
xchg
fbld
loope
sub
clc
gs
jg
lret
jp
sahf
inc
xor
sahf
js
cwtl
ja
dec
pop
loop
loopne
out
pop
or
xchg
jmp
sub
jnp
mov
xor
sbb
insl
pop
cld
fwait
push
mov
push
inc
jmp
int3
loop
jg
cmc
movsb
mov
jp
loop
fcoml
std
cwtl
into
movb
pop
mov
push
iret
adc
icebp
mov
xchg
jb
push
pusha
add
push
xchg
shrl
xchg
mov
add
call
cmp
insb
pusha
hlt
pop
sbb
push
in
adc
rcrl
pop
xchg
sbb
orl
and
ficomps
pop
xchg
sbb
and
push
pop
push
pop
dec
sub
std
adc
out
adc
mov
cmp
fimuls
adc
out
xchg
rcll
sbb
scas
add
rclb
shl
add
call
cld
push
sub
jo
jmp
shll
add
inc
push
in
or
fwait
and
fcoml
fwait
cmp
fcmovnu
or
pushl
jge
call
in
or
incb
jl
or
mov
outsl
jnp
sbb
decl
insb
fidivs
and
or
fstl
in
sub
call
add
outsl
inc
sti
or
loopne
mov
cmp
sbb
or
sub
xor
push
loope
ret
arpl
orb
pop
add
sbb
inc
jnp
mov
fcoms
and
inc
adc
jo
cmpb
add
movl
faddl
mov
int3
je
add
and
jg
inc
mov
ror
add
jg
int3
sbb
xchg
mov
mov
push
outsl
clc
call
call
dec
or
sbb
js
sbb
test
push
inc
sar
jmp
dec
push
insb
inc
add
or
aad
fisttpll
loopne
fisubs
aam
adc
jb
jmp
loopne
mov
fimull
mov
jl
jecxz
popa
decl
lea
push
loope
or
cmpsb
incl
xor
enter
inc
xchg
call
nop
cmpsl
cld
and
clc
mov
rcll
sub
xor
mov
fmull
std
pop
cmp
pop
mov
lret
push
icebp
movsb
les
and
popa
clc
cmp
mov
pop
pop
dec
or
push
js
inc
and
or
jg
inc
gs
fildll
jle
lret
fs
xchg
mov
xchg
jge
push
lcall
incl
lds
stos
flds
loopne
enter
rorb
test
jno
decl
sbb
jne
ret
adc
fmull
vshufps
jo
enter
inc
aad
add
into
std
addb
loop
rcrl
xchg
popf
or
add
sahf
pop
pop
icebp
pop
test
dec
or
and
das
xchg
mov
inc
outsb
int
sbb
push
xor
rorl
aam
int3
or
push
fucomp
push
in
out
js
arpl
jecxz
sbb
lock
lods
lds
les
push
ret
incl
fwait
and
and
sahf
test
aam
inc
test
test
sar
jg
dec
xchg
cmp
cs
push
pop
in
pop
in
insl
jl
jg
pushf
testb
or
dec
mov
xor
and
sbb
inc
nop
mov
or
mov
not
and
push
inc
or
test
jbe
inc
dec
push
in
int
mov
xor
add
sbb
incl
push
loopne
mov
je
xchg
ret
clc
adc
cmpsb
dec
lret
call
fdivrs
adc
jbe
adc
xor
fists
inc
rorl
cmpsb
adc
bound
into
in
addl
mov
jge
popf
mov
pop
mov
jmp
xchg
inc
sbb
xor
sahf
and
xchg
rclb
mov
xor
adc
aad
pop
sub
mov
xchg
xlat
adc
xor
or
incl
call
inc
int3
aad
mov
push
sahf
enter
shll
jg
add
adc
in
pushf
inc
mov
adc
insl
gs
or
mov
rsqrtps
pop
lds
cs
in
ror
outsb
test
es
and
lcall
xor
fists
push
adc
push
lret
movsl
cmc
icebp
std
jmp
push
fcomps
movsl
mov
bound
fistps
pop
adcl
les
int3
call
jo
push
push
add
adc
jl
out
sbb
outsb
and
or
jo
adc
dec
add
int3
add
xchg
lret
xor
inc
push
adc
jns
inc
xchg
jmp
push
xchg
in
loopne
pop
pop
nop
sub
iret
dec
push
andb
cmp
orl
and
mov
lcall
jmp
ljmp
pushl
shll
fprem1
lds
pop
test
leave
dec
inc
lahf
mov
test
jmp
sbb
xchg
xlat
sbbl
lock
call
daa
bound
push
mov
mov
jecxz
xchg
test
adc
sbb
ljmp
in
hlt
rorb
add
dec
push
push
data16
xchg
mov
push
xchg
fld
ficoms
jmp
pushl
sub
sbb
mov
push
dec
test
or
xor
mov
sar
lcall
cmpsb
push
inc
rcll
adc
rcrl
ret
jmp
sbb
pop
loop
jg
imul
sbb
push
adc
idiv
sub
lods
sub
dec
pop
mov
xor
shr
xchg
inc
push
adc
pop
loopne
pop
mov
xor
movsb
bound
cwtl
mov
add
sub
or
ret
push
xor
lds
clc
jg
dec
inc
outsl
les
ds
sbb
movl
sahf
out
es
lcall
rclb
fldenv
xchg
popf
dec
in
lods
sbb
and
test
dec
sbb
mov
adc
xchg
sbb
dec
xor
dec
stos
xchg
jne
fst
xchg
cli
stos
mov
or
add
bound
sbb
xchg
fsubl
popa
or
push
xchg
stos
mov
roll
in
xchg
lods
loope
and
dec
scas
cmp
dec
mov
xchg
pop
outsb
dec
inc
lea
imul
jb
jmp
cmpsl
or
jo
cs
mov
icebp
cld
test
jno
mov
adc
mov
ljmp
push
push
stc
mov
sub
and
lds
inc
inc
dec
test
xlat
push
sub
inc
iret
sub
aad
xlat
jge
addb
mov
xchg
mov
aam
xchg
or
mov
adc
incl
mov
or
sti
es
add
mov
ret
enter
jmp
mov
and
movsb
out
mov
mov
mov
jmp
fadd
xchg
xchg
jb
pop
sbb
aam
adc
inc
dec
lahf
decl
sub
faddl
dec
pushf
jne
popf
pushf
lds
push
sub
repnz
pop
fimull
pop
shll
or
or
test
add
ljmp
loop
lret
lahf
push
dec
rcrl
mov
daa
insl
jmp
xchg
pop
int
loopne
or
decl
cmp
clc
adcl
out
test
ljmp
or
sti
leave
test
imul
inc
test
outsb
imul
push
sub
cli
cmp
out
lret
pushl
test
cmp
push
jo
mov
jno
xlat
pop
dec
lahf
jl
push
mov
decl
lea
xchg
movsl
out
and
dec
mov
enter
dec
test
out
adc
dec
ret
incl
push
imul
test
out
ss
pop
add
mov
push
sbb
lahf
je
add
inc
jo
mov
inc
jl
pop
xor
call
ds
add
outsl
enter
rolb
loop
push
mov
xor
std
incl
or
rcll
and
xchg
mov
mov
mov
ljmp
add
stc
mov
jecxz
das
adc
stos
stos
xor
lcall
cwtl
xchg
into
xchg
lock
or
adc
and
mov
pop
adc
aas
call
pop
jmp
or
push
mov
or
sub
sbb
call
dec
sbb
fxch
pop
sub
movsl
or
mov
cmpsl
push
or
mov
std
fsub
scas
dec
out
cs
mov
psubsb
call
pop
or
or
icebp
dec
and
jns
sub
mov
cli
adc
pushf
mov
mov
test
ds
cli
pop
shlb
mov
ljmp
outsb
sub
push
add
mov
pop
push
dec
std
add
addb
out
sar
outsl
jp
dec
jne
lcall
ja
imul
loopne
pushl
fs
inc
xor
adc
push
pusha
int3
push
push
je
mov
mov
into
pusha
xchg
insb
xor
pop
cmp
inc
pop
push
lcall
and
ljmp
mov
sbb
ljmp
adc
mov
loopne
pushf
enter
dec
adc
adc
or
and
jo
mov
cli
test
dec
cmp
or
add
push
jae
add
les
pop
inc
negl
leave
sub
and
in
icebp
sbb
inc
lahf
enter
dec
cmpsb
inc
das
rcrl
jo
pop
sub
fists
add
ret
mov
stos
fmuls
pop
out
dec
xchg
dec
cmp
jg
pop
stos
mov
xchg
push
cmp
dec
xchg
outsb
mov
push
mov
lock
fnstenv
ljmp
xor
mov
and
xchg
ja
scas
or
call
cli
mov
pop
loopne
inc
dec
test
lcall
or
hlt
fistps
mov
shld
add
jne
incl
bound
sbb
pop
icebp
lock
push
mov
dec
sbbl
or
ret
out
cmpsb
mov
mov
add
hlt
cmp
xchg
sbbl
add
mov
aas
and
mov
add
pushl
dec
mov
cltd
jno
push
out
sbb
lcall
inc
fildl
push
lret
orl
stos
adc
xchg
leave
push
fprem
mov
or
xchg
push
andl
je
testl
out
xor
sbb
adc
push
xor
mov
xchg
jg
adc
inc
pop
lret
dec
inc
clc
add
xchg
jmp
lret
adc
cltd
dec
ljmp
js
sub
adc
or
xchg
sbb
js
adc
lcall
sbb
mov
mov
into
stos
add
and
popa
mov
cltd
sti
mov
push
xchg
call
inc
xor
outsb
jmp
sbb
aad
add
pop
lods
sub
push
data16
dec
popa
inc
mul
pop
dec
in
adc
ds
es
xchg
mov
inc
xchg
rcll
lret
int3
ret
jmp
cmp
pop
cmp
add
lahf
add
ret
popa
mov
lret
inc
push
test
cmp
jg
stc
je
pop
add
add
sbb
movsb
and
sarb
or
mov
ljmp
inc
inc
cmp
pushf
pop
xor
jbe
push
lock
and
adc
mov
decl
test
adc
popf
fdivrl
sub
inc
fidivl
jecxz
xlat
mov
cmc
jbe
and
fcomip
cmc
mov
xchg
cmpsb
inc
inc
in
ljmp
xchg
call
adc
fcomip
lcall
mov
loope
outsb
shlb
or
add
sbb
test
cmpsl
sbb
inc
clc
xchg
repnz
sbb
fisttpl
adc
out
hlt
dec
dec
cmp
dec
incl
sahf
dec
sub
xor
sbb
jmp
push
add
cmp
ljmp
push
or
mov
call
xchg
orb
mov
sub
incl
pop
in
sub
push
xchg
xor
add
out
dec
test
sub
mov
incl
mov
fs
sbb
mov
ret
pop
push
pushl
cld
cmp
mov
lret
xchg
jae
lods
cwtl
sub
aas
jno
or
and
push
xchg
iret
inc
xor
add
adc
or
insb
inc
mov
imul
incl
pushf
insb
jo
icebp
popa
inc
mov
sbb
les
movq
icebp
pusha
inc
enter
push
int3
test
arpl
das
popa
pushf
clc
inc
mov
call
stc
arpl
dec
xchg
and
les
js
je
sbb
outsl
fsubl
xor
push
inc
dec
sub
or
xchg
out
xchg
push
into
cmp
idivb
push
mov
inc
inc
loopne
test
lds
shll
hlt
lock
incl
ds
push
mov
aam
pop
xchg
and
nop
dec
adc
cmp
ljmp
decl
xchg
mov
mov
lcall
push
mov
sub
jle
cli
incl
jmp
pop
inc
in
adc
xor
loope
andl
cmc
in
mov
mov
imul
mov
in
ljmp
cli
clc
out
pop
popa
mov
mov
or
sub
stc
repz
mov
std
sti
outsl
mov
ljmp
cli
jo
add
inc
xor
in
dec
mov
mov
test
fimuls
int
fsubr
inc
sub
add
adc
addl
enter
and
lcall
mov
loopne
cmp
fldl
jmp
call
cmp
lea
imul
pop
inc
add
aaa
mov
cmp
mov
ljmp
stc
loope
or
cwtl
cmp
dec
sub
xchg
xor
leave
and
pusha
mov
adc
cld
fbld
cmp
adc
ljmp
test
loop
or
lea
lcall
lods
sahf
cmp
call
aam
dec
jecxz
out
ret
popf
shlb
sub
adc
pop
mov
mov
push
sbb
stos
int3
mov
sub
pushl
pop
adc
imul
imul
jecxz
mov
pop
clc
imul
ljmp
cli
lods
movsb
popa
and
mov
lret
mov
add
icebp
sar
das
xor
mov
je
mov
push
pop
jnp
xor
call
icebp
mov
jle
push
mov
mov
cmp
mov
mov
mov
mov
mov
xchg
xchg
jns
sti
push
dec
cli
out
xchg
and
or
or
xor
pushf
jg
add
insb
lock
jge
scas
stc
mov
fimuls
call
add
ret
xlat
pusha
pop
loope
std
push
pushf
outsl
cmp
fildll
mov
add
lret
movsb
repz
mov
incl
out
xchg
addl
add
das
fadds
jmp
dec
and
and
imul
and
and
rorb
cld
test
rolb
loopne
xchg
cmp
and
fiaddl
bound
rcr
cmp
push
lods
mov
xchg
jbe
call
neg
imul
mov
subb
cli
pop
mov
xchg
stos
lcall
fdivs
rcll
adc
gs
leave
fdivs
decl
stos
mov
cmp
push
push
or
call
push
lret
iret
add
fsubr
and
dec
gs
push
out
clc
dec
push
lea
mov
jae
adc
push
add
scas
dec
fnstcw
add
pushl
loope
dec
call
add
dec
sbb
ss
orb
push
xor
jmp
rcrl
loop
cmp
cmpsb
pop
stc
mov
mov
mov
lods
add
mov
std
incl
mov
mov
dec
int
add
and
jp
mov
jne
ret
jb
aam
mov
in
xchg
add
inc
or
icebp
sub
jle
xor
ljmp
sbb
cmp
sub
pop
in
jmp
and
sbb
mov
add
fwait
fwait
xor
movsl
mov
repnz
fiadds
pushl
cmp
in
cmp
ret
mov
add
xor
sti
pop
in
mov
xchg
xchg
mov
jne
pop
mov
push
dec
push
clc
rolb
mov
ja
decl
or
cltd
lret
dec
mov
jns
lock
pushl
dec
jge
sub
mov
lock
popa
xchg
addb
rol
cmp
mov
dec
bound
or
push
das
cmp
lret
sub
push
mov
xor
mov
xchg
push
adc
call
andb
mov
inc
sbb
fisttps
in
mov
loope
push
in
movsb
ror
rorb
mov
popf
addr16
mov
loop
sub
cmpsl
xchg
jg
lock
clc
insb
mov
or
bound
or
lods
cmp
mov
push
jmp
test
fistl
in
incl
nop
jbe
sar
sbb
enter
outsl
sub
adc
jno
add
push
addl
pushl
mov
fwait
cmp
pop
xchg
add
cmp
fisubl
loope
push
jae
push
inc
mov
decl
or
add
mov
inc
push
dec
jnp
roll
adc
mov
or
inc
inc
mov
movsl
js
in
popf
das
push
or
lea
test
push
mov
hlt
sub
sahf
mov
push
inc
adc
mov
ljmp
test
mov
leave
dec
mov
rorb
dec
xlat
xor
push
lret
mov
arpl
cmpsb
ljmp
sbb
movsb
inc
mov
pop
xor
data16
out
mov
pushl
cmpsb
leave
int
sbb
and
orb
push
mov
inc
add
or
loope
xchg
jnp
cmpsb
and
fdivs
push
in
pushf
mov
or
dec
push
lock
icebp
out
inc
inc
lcall
cmp
arpl
sbb
sub
mov
xchg
mov
rcrb
pop
cmp
pop
cld
decl
mov
sbb
or
sub
adc
push
mov
jo
push
pushf
incl
add
dec
and
jecxz
aaa
bound
cwtl
xlat
rolb
incl
je
or
popf
cwtl
mov
add
and
mov
aam
and
scas
cld
lret
xchg
push
scas
call
test
pop
test
fwait
lcall
lcall
loopne
mov
jbe
loopne
xchg
sar
jmp
mov
in
push
mov
sub
mov
push
js,pt
pop
aam
add
cmp
ret
mov
out
xchg
mov
test
inc
loope
jbe
lcall
out
addr16
sti
sbb
dec
push
test
mov
mov
and
jno
sbb
decl
push
xor
cmc
mov
and
mov
in
pop
sub
popa
int3
cmp
aam
scas
movsb
sbb
in
mov
jb
push
test
mov
pop
je
rcll
out
or
out
sub
arpl
xchg
shll
dec
or
stos
out
movsb
fists
fdivp
sub
ret
cltd
or
rclb
adc
push
mov
pop
hlt
pop
andb
add
and
add
mov
and
pushl
xchg
lahf
mov
loope
fwait
ret
adc
add
test
ja
aas
lds
incl
mov
cmpsl
adc
mov
divb
lahf
mov
imul
mov
add
cmc
shlb
pop
stos
fxch
pop
int3
mov
pop
ret
adc
mov
sti
call
lds
push
push
cwtl
pop
mov
sahf
push
sub
xchg
inc
out
adc
cmc
or
out
clc
call
cs
mov
mulb
test
inc
test
xchg
fiaddl
popa
fisttps
call
stos
imull
push
xor
jb
lods
ds
sub
sbb
xchg
les
push
add
mov
imull
xchg
xor
and
repz
aas
aas
cmp
rcrl
data16
mov
stos
jnp
movsb
aaa
hlt
int
mov
hlt
dec
mov
jne
push
jmp
xor
dec
pushf
js
lods
push
jmp
ljmp
or
movsb
mov
outsl
mov
adc
inc
add
pusha
push
movb
mov
jg
lods
dec
fadd
xor
dec
jp
ljmp
xchg
out
dec
mov
add
shr
and
decl
je
orb
add
pusha
adc
add
pop
loopne
insb
rolb
daa
in
ret
int3
out
pop
cmp
ds
sub
scas
or
or
leave
sub
sub
test
pushl
cs
or
lock
fwait
add
test
dec
test
dec
in
stos
and
scas
cmpb
test
arpl
mov
in
sbb
pop
decl
add
or
mov
pop
mov
mov
das
fstpt
mov
ljmp
in
adc
cmp
dec
cmc
pushf
insl
test
jno
decl
adc
insl
rcrb
push
in
ret
dec
int
sahf
das
rcrl
dec
mov
push
loop
sub
lcall
stos
out
clc
aas
mov
inc
mov
imul
push
or
ds
add
test
stc
add
jg
add
sub
dec
cld
cmpsb
and
push
ror
imul
dec
jg
incl
or
inc
or
loopne
pushf
dec
out
lret
test
les
add
jmp
pusha
or
inc
jb
dec
jae
and
test
dec
and
pop
jo
push
push
lds
daa
lahf
dec
lret
ja
or
rorb
sarb
and
mov
incl
push
in
cmpsb
cmpsl
sub
jecxz
mov
aad
inc
icebp
xor
dec
outsb
ljmp
mov
xlat
mov
in
pop
jmp
mov
jns
loopne
rcl
subb
xchg
inc
repz
or
decl
push
sbb
inc
out
subb
or
cmp
dec
pusha
lcall
jecxz
inc
rol
sub
clc
movsl
mov
jmp
ret
sub
lahf
data16
jo
adc
xor
sahf
data16
push
fimuls
and
incl
test
and
pop
xchg
bound
cmp
aas
and
mov
adc
int3
sub
out
ljmp
cs
xor
xor
pusha
jo
test
lods
popa
xchg
xor
jmp
and
cmp
out
and
or
jb
sbb
or
test
and
scas
cli
jmp
dec
cld
xchg
jbe
dec
nop
les
lods
xchg
call
clc
mov
cmp
addb
out
mov
push
insb
and
pusha
loopne
fisubrs
leave
push
fadd
int3
sbb
sub
pop
es
xor
and
arpl
mov
xchg
cwtl
lock
subl
bound
push
shll
cmp
imul
repnz
enter
or
inc
lods
or
push
and
xor
aam
or
xchg
test
movsb
test
addl
mov
incl
sub
sbbl
cmovg
mov
inc
negb
push
mov
mov
push
pop
fisubrs
inc
imul
inc
cmp
data16
lahf
out
scas
jg
xor
dec
imul
mov
stc
xchg
testl
ljmp
loop
xchg
jae
push
push
cwtl
fs
mov
in
dec
shlb
into
xor
or
cmpsb
jmp
jae
dec
jmp
dec
icebp
sub
clc
xor
scas
loopne
add
loope
add
mov
loope
push
fildll
pop
inc
aaa
aad
dec
leave
mov
and
mov
xchg
and
sub
loop
or
scas
icebp
stos
test
pop
fimuls
addb
lods
sub
jmp
loope
clc
or
pop
cmpsl
add
outsl
ljmp
xchg
jl
sahf
mov
out
in
stos
jae
jmp
ljmp
add
out
dec
xchg
adc
lds
orb
inc
movsl
bound
and
mov
int
sub
cmp
push
sub
hlt
out
mov
and
jl
cmp
mov
add
inc
mov
push
pop
push
int
dec
mov
ret
and
fs
das
pop
and
inc
cwtl
movsb
adc
cli
pushl
rolb
shlb
push
pushl
dec
hlt
ds
or
std
mov
ss
jb
cmp
popa
cmp
mov
dec
cmp
push
lret
xor
jmp
dec
fptan
xor
dec
das
subl
jae
hlt
push
sbbb
sarb
and
fs
mov
mov
push
xchg
enter
imul
mov
jbe
mov
push
or
imul
rcll
insb
lret
imulb
insb
cltd
xchg
imul
insl
stos
pop
dec
cmp
test
xchg
jecxz
fisubl
ljmp
adc
push
cli
inc
cmp
dec
push
pop
push
or
dec
ljmp
add
dec
pop
orl
inc
xor
ja
adc
push
mov
mov
sub
pop
xchg
mov
ljmp
int3
add
mov
jle
mov
lret
pop
xor
cld
sbb
pop
pop
xchg
or
push
jp
ljmp
push
xchg
xor
lds
xchg
mov
adcb
dec
xor
push
cld
inc
or
scas
clc
call
mov
lret
or
popa
push
sub
outsl
or
lds
in
fsubrs
xor
decl
mov
jbe
popa
push
or
shlb
mov
inc
or
pop
filds
lret
stos
pop
and
jg
aam
fcompl
jo
inc
xor
test
lret
mov
addr16
push
cmpsl
nop
das
cmp
addr16
lods
loop
fbld
lock
bound
dec
mov
subb
test
ljmp
push
fs
dec
mov
fadds
push
push
push
xchg
test
xchg
jbe
popa
js
mov
pushl
jno
cs
xchg
or
xlat
push
push
cwtl
test
decl
outsb
sub
pusha
sub
pop
adc
out
dec
add
data16
imul
and
push
ljmp
inc
in
mov
adc
mov
mov
inc
clc
adc
or
mov
inc
loop
outsl
jp
call
decl
and
mov
xor
cmpsb
and
int
inc
push
mov
jmp
insb
cli
and
sub
add
in
lock
sti
fdivr
lcall
orl
test
repnz
jge
jns
les
mov
insl
mov
cmp
xchg
xor
push
xlat
aaa
xor
cmpsb
mov
sahf
mov
ljmp
icebp
add
stos
inc
push
add
mov
xor
mov
sbb
pushf
mov
fcomps
subl
sub
lret
fucomi
inc
int
addb
jle
ja
mov
jmp
xchg
lea
stc
mov
fs
push
xor
insl
decl
or
push
fdivrl
cmpsb
pushl
cld
jmp
test
pop
js
js
push
rolb
xchg
incl
xchg
jp
cmp
inc
cmp
adc
movsb
cmp
mov
xlat
or
mov
xchg
cwtl
adc
mov
test
xor
ljmp
imulb
cmp
dec
adc
nop
and
lcall
out
dec
loopne
outsl
pop
icebp
add
lret
jb
rolb
mov
inc
leave
xchg
call
dec
xor
cmp
lods
in
popa
sbb
shrb
push
rcll
filds
dec
or
icebp
inc
jne
rolb
inc
cmp
test
es
test
pop
iret
xor
inc
out
lret
out
bound
jno
js
lret
sbb
test
dec
adc
sbb
fcomip
ljmp
mov
xor
mov
xor
les
mov
std
sbb
fidivl
test
pushl
in
cmp
mov
bound
jnp
and
mov
stos
jmp
jl
pop
call
add
orl
inc
adc
cmp
sbb
or
fstps
incl
push
das
xorl
jae
mov
xor
sti
dec
subl
xor
adc
xchg
sbb
push
lods
add
inc
mov
ret
cmp
ljmp
and
aas
push
cmpsl
int3
int
sub
sub
jl
inc
fcoml
les
iret
clc
dec
cmp
push
int3
sub
dec
sbb
lock
incl
sbb
dec
js
and
xchg
push
mov
push
jne
scas
addb
inc
lods
add
imul
lcall
jb
jle
lret
add
mov
lret
jl
push
test
outsl
add
aad
sarb
and
add
call
les
inc
leave
scas
pop
xor
pop
mov
inc
mov
xchg
push
jg
push
in
adc
xor
cld
subl
incl
cmpl
push
sti
gs
jns
fstl
lock
or
jo
decl
push
out
aas
jns
jle
mov
jnp
aam
dec
inc
mov
scas
out
and
in
and
push
fcomip
cmp
cs
cmpl
inc
mov
rol
bound
pushl
sub
mov
loop
mov
mov
das
jecxz
in
idivb
mov
jg
adc
std
pop
cwtl
mov
mov
sub
clc
fidivrl
sub
sub
adc
aas
int3
mov
in
jb
imul
pop
ja
pushl
in
pusha
jae
sbb
stos
lret
inc
orps
jp
jne
xchg
dec
cmpsl
dec
aam
decl
fidivs
movlps
sub
outsb
lods
sub
loopne
cld
lahf
push
lcall
lds
sbb
test
jmp
xchg
add
ret
lock
call
xor
and
xchg
push
int3
or
incl
jmp
jb
movsb
jb
jp
les
adc
bound
dec
cmp
lods
into
xor
out
cli
add
push
test
and
repz
push
test
ja
sarb
xor
sub
inc
cmp
call
add
mov
sub
enter
lret
xor
xchg
mov
fstl
insl
dec
cmp
int
fidivrs
mov
fs
jnp
push
mov
out
rcrl
iret
and
mov
test
fistl
mov
mov
std
push
mov
loopne
ja
pop
xor
negb
addl
pushl
out
cmp
je
jl
cs
mov
leave
sub
fistl
clc
es
mov
lcall
xor
cli
mov
fdivl
fdiv
inc
inc
fnstsw
rol
loopne
mov
sub
mov
or
cld
pop
and
mov
cld
cmp
mov
sti
jno
fimuls
decl
ljmp
pop
std
mov
cld
cmpsl
filds
loope
in
xchg
xor
popa
sti
ja
fs
dec
fadd
sub
add
pop
insl
bound
mov
push
add
ljmp
shl
orl
shl
or
test
call
cmp
cwtl
shlb
push
stc
out
dec
xor
test
jb
or
push
sarb
lret
scas
std
fs
xchg
lahf
inc
pop
fcomip
pop
cld
aam
mov
push
insb
jae
jmp
in
push
filds
fadds
incl
cmp
imul
icebp
inc
xchg
mov
push
decl
inc
nop
outsb
fdivrl
sub
fistl
dec
aaa
loope
xchg
ret
das
jmp
jno
dec
mov
nop
and
adc
push
scas
or
or
or
xchg
sbb
sub
or
ds
loope
mov
mov
imul
insl
iret
sbb
dec
pavgw
or
imull
ljmp
addr16
cmp
in
mov
mov
dec
movsb
sub
sub
mov
mov
call
sti
sbb
pop
jnp
jnp
jl
mov
xchg
out
or
add
cmp
insl
jmp
mov
into
icebp
lahf
cmp
mov
mov
sar
sbbb
inc
inc
adcb
push
dec
popa
xchg
cmp
push
inc
sub
jp
jmp
or
decl
mov
repnz
sub
xor
cmp
cmp
jbe
call
inc
sub
xchg
dec
mov
adc
sub
roll
push
imul
lds
imul
adc
mov
sub
mov
push
jmp
push
ret
inc
jae
xor
imul
and
ljmp
addb
mov
add
inc
lods
mov
sbb
pusha
inc
add
out
insb
dec
sub
test
movsl
jmp
adc
push
dec
or
test
sub
loope
dec
xchg
pop
push
in
cmp
and
in
sbb
mov
add
jae
mov
incl
popa
inc
xchg
bound
sbb
and
in
mov
popf
push
sbb
scas
call
shrb
in
sub
fldt
sub
sbb
xorl
scas
jae
inc
test
mov
rolb
call
xchg
daa
push
ja
jbe
jae
jo
call
shll
push
pop
jge
mov
jle
iret
and
inc
fbld
sub
jle
xchg
test
cli
push
repnz
shll
xchg
sub
push
decl
jae
seto
sub
xor
lods
xor
xor
test
pop
ret
pop
push
sbb
inc
adc
fstps
gs
xor
xchg
lcall
addb
fsubs
lock
sbb
fldl
imul
or
jl
loopne
pushl
fldenv
gs
mov
pop
popa
xor
fbld
ljmp
add
dec
ret
sahf
jmp
push
cmp
pushf
js
call
sub
xchg
mov
inc
ljmp
add
dec
dec
pop
mov
inc
inc
sbb
mov
xchg
sub
dec
inc
leave
test
out
ss
lret
aas
in
push
incl
incl
pop
arpl
adc
pusha
rol
movsl
sub
mov
add
adc
sub
pop
incl
sbb
stos
insl
out
pop
jp
in
mov
cs
fmull
pop
call
sbb
clc
ljmp
insb
fdivrs
sbb
mov
mov
nop
jnp
cmpsl
push
sti
sbb
mov
scas
fdivrs
sbb
push
xor
or
sbb
sbb
jbe
mov
mov
pusha
fadd
sahf
adc
lds
push
adc
popa
aas
jnp
test
hlt
xor
cmp
mov
lret
mov
data16
and
pop
call
add
rcrb
add
xor
addb
adc
loopne
pop
clc
insb
loopne
and
inc
pop
out
push
icebp
lcall
add
in
insl
imul
loopne
nop
xchg
sbb
outsl
clc
fists
adc
enter
mov
sbb
loopne
sub
insl
push
lcall
push
packssdw
in
and
dec
inc
inc
rclb
pop
ror
mov
pop
lock
xchg
testb
repnz
xchg
test
sbb
dec
dec
data16
or
pushl
incl
roll
daa
ds
cmp
inc
jbe
pop
mov
andl
jns
sub
xchg
cwtl
mov
in
js
adc
adc
in
sub
daa
inc
movsl
adc
decl
adc
jnp
inc
pop
hlt
mov
dec
mov
sti
lods
jne
incl
mov
xchg
mov
mov
mov
clc
les
jae
addr16
inc
dec
jp
dec
pop
sti
and
pushf
inc
and
add
pushl
add
jo
xor
test
subl
in
pushl
cmp
cwtl
sbb
cli
and
jns
js
and
lea
jle
push
fists
pop
test
push
mov
arpl
or
arpl
test
adc
cmp
and
mov
push
mov
notl
add
ret
aas
aam
mov
cltd
adc
stos
sub
sub
sbb
sar
lcall
mov
push
and
lods
mov
imul
insl
jbe
pop
sbb
inc
cmp
or
fadd
push
sbb
jmp
cmp
or
adc
ljmp
push
mov
dec
push
loope
inc
dec
push
sub
aam
negb
sahf
adc
addb
lret
dec
mov
or
and
mov
fistpll
pop
xor
sub
adc
cld
leave
add
int3
cltd
je
sbb
pusha
add
cmp
add
push
mov
iret
mov
mov
add
jg
mov
hlt
dec
add
push
mov
inc
pop
mov
dec
out
inc
mov
loopne
into
cwtl
xor
xor
push
es
mov
fldt
push
rcll
incl
push
push
mov
arpl
push
xchg
leave
and
fs
pcmpgtw
inc
jg
adc
xor
in
addb
cltd
push
sbb
mov
ret
xchg
lock
sbb
jne
xchg
int3
sub
cmp
orl
test
inc
adc
aam
cli
xchg
mov
xor
ljmp
aad
inc
sub
and
inc
test
mov
shl
mov
flds
icebp
incl
or
add
addb
mov
xorl
cld
scas
data16
ss
lods
jno
push
imul
xchg
stos
xchg
icebp
or
movsb
jg
jmp
ss
adc
or
push
xlat
push
add
sub
nop
adcb
aaa
jbe
call
and
jmp
push
enter
insl
or
cwtl
loop
shrl
inc
lods
repnz
pop
pop
bound
bound
incl
and
stc
inc
ljmp
mov
or
adc
mov
jecxz
add
dec
or
cltd
pop
icebp
xor
pop
lahf
movsb
fs
mov
mov
mov
mov
dec
adc
aad
cmc
lods
nop
cmp
adc
cs
xchg
ljmp
int3
push
sbb
xchg
leave
or
out
out
clc
ret
cli
gs
mov
pushl
mov
imul
call
lret
pushf
sub
sarl
mov
inc
arpl
inc
enter
popa
addl
lock
rorl
inc
jecxz
and
xchg
mov
rol
call
jae
push
psllw
pop
arpl
sahf
sbb
or
frstor
cmp
sahf
nop
jle
gs
cmp
jmp
inc
mov
sbb
sbb
adc
in
addr16
add
push
subl
add
ret
fcmovu
cwtl
decl
or
xchg
ljmp
mov
ds
cmp
and
xor
sbb
jnp
scas
scas
cli
stos
jp
loop
mov
data16
fsubrs
sbb
lcall
ret
popf
stc
int3
jae
rcrl
jno
dec
push
jnp
out
inc
cli
mov
mov
mov
mov
subl
in
lcall
outsb
adc
cmp
xchg
dec
xor
popa
inc
cmp
bound
cmpsl
stos
or
push
add
popf
dec
cmpsb
inc
sub
xchg
sub
mov
sub
sbb
in
shll
push
jmp
add
cli
test
mov
pop
mov
insb
bound
call
add
inc
rol
mov
call
add
rcll
jno
cmpsb
sbb
mov
enter
in
sti
out
push
movsb
push
sbb
lcall
aas
jne
adcl
xchg
dec
dec
cld
pushl
mov
sbb
sbb
popa
sub
add
ja
cmp
xor
mov
push
sub
popa
popa
shll
add
dec
aam
push
int3
sbb
jo
pop
jecxz
cmp
je
pushl
ljmp
add
inc
sbbl
fs
add
xchg
inc
incl
ljmp
jb
push
in
pop
xchg
push
negl
pop
push
xor
in
decl
xor
adcl
xor
dec
cmp
gs
incl
add
pop
inc
inc
pop
add
xor
mov
lock
gs
pusha
inc
push
popa
ret
pop
outsb
test
push
push
aaa
mov
xchg
xchg
and
push
call
stos
enter
imul
or
jo
pop
andb
shll
mov
add
dec
sahf
adc
incl
jae
or
cs
mov
or
sub
or
ss
outsl
loopne
sub
mov
cmp
cmp
pop
adc
enter
push
pop
push
ljmp
xor
add
cmp
pop
add
pop
add
rolb
rclb
jg
pop
and
subb
les
inc
push
mov
test
mov
aas
movsb
and
pushl
icebp
nop
hlt
pop
test
jno
stc
xchg
lds
push
sbb
loope
jb
sbb
movsb
pop
pop
stc
push
lock
sahf
roll
inc
nop
leave
adc
test
sti
jae
mov
lcall
pop
xchg
les
sti
stc
push
push
fildl
add
adc
das
mov
inc
mov
sub
push
and
loopne
add
xor
jae
pusha
inc
pop
movsl
inc
and
adc
cmc
pop
repz
cmpsb
xor
bound
add
xor
jmp
and
pop
sub
push
call
gs
xchg
clc
ljmp
ds
xor
and
pop
lock
or
xchg
sti
pusha
push
jns
movlps
lcall
fadd
nop
ss
hlt
add
mov
add
add
data16
pop
ljmp
clc
pop
mov
jo
xor
xor
mov
jge
add
aad
aam
icebp
jmp
push
mov
jns
nop
out
cmc
pop
ss
mov
jp
xchg
test
decl
add
mov
scas
inc
adc
popf
je
pop
sub
adc
push
cld
call
daa
adc
jg
test
and
std
jg
cs
jl
and
roll
jl
in
lock
mov
cli
imul
and
hlt
sub
push
adc
repz
jg
inc
sbb
int3
add
mov
call
push
xor
dec
call
xchg
and
stc
mov
cmp
incb
xchg
lcall
sbb
icebp
sbb
jp
sub
sbb
xchg
jecxz
sbb
jmp
imul
je
add
testl
test
lret
insb
shll
call
mov
jae
lds
xchg
add
sub
sbb
push
mov
push
mulb
pavgb
arpl
sub
inc
mov
mov
incl
sbb
shll
cmp
push
daa
and
dec
incl
push
adc
xchg
inc
xor
cmpsl
inc
push
cwtl
loop
pushl
hlt
xchg
subl
push
add
add
jno
lods
add
dec
fs
fstpt
push
nop
add
mov
push
insb
gs
adc
fwait
sbb
push
test
add
cmpsb
push
test
scas
test
mov
imul
into
xor
pushf
mov
es
lock
jg
imul
push
shrb
js
decl
sub
shrl
ret
jp
hlt
lods
fs
adc
mov
insb
sub
mov
sub
dec
lahf
cmc
cmp
mov
cmp
push
roll
pop
movsb
adc
jg
scas
mov
pop
mov
or
mov
push
add
add
sbb
adc
loope
sub
fildl
mov
xchg
out
mov
les
mov
or
incl
or
mov
mov
mov
pop
movsl
cmpsb
lock
hlt
sti
add
js
test
jmp
xlat
adc
mov
jno
lcall
out
jo
add
cmpsb
xor
xor
pop
xor
push
cmp
sbb
aam
bound
lcall
dec
xchg
inc
pop
leave
xchg
pop
fdivs
and
movsb
xor
orl
test
fidivl
incl
pop
cmp
pop
lds
mov
gs
push
in
add
jne
inc
adc
data16
jmp
xor
aad
popf
leave
add
inc
dec
add
je
and
mov
addr16
mov
add
mov
xchg
xchg
cli
fwait
mov
das
sarb
imul
ret
cwtl
adc
scas
mov
add
push
and
fisttpll
lea
cs
jg
decl
orb
add
js
cmp
lahf
in
sahf
aam
mov
adc
xchg
ljmp
cli
lret
les
in
push
adc
add
pop
or
mov
andb
push
jge
inc
mov
push
pop
cmc
xchg
arpl
cld
xchg
mov
dec
clc
mov
pop
inc
pusha
test
les
sub
test
decl
mov
hlt
push
cltd
icebp
mov
ja
and
test
mov
cld
cmpb
inc
stos
in
sbb
cld
test
adc
mov
cmp
fdivs
adc
xchg
cmpsb
push
repnz
enter
bound
mov
fisubs
inc
cmp
adc
sbb
jmp
and
jae
or
inc
hlt
rcrl
divl
inc
xchg
xchg
repnz
pop
push
fld
fs
cmp
and
jmp
pop
mov
xor
xor
xchg
pop
stc
nop
ja
mov
aad
add
mov
stos
inc
mov
push
mov
jl
add
adc
mov
call
jl
add
sub
mov
loopne
insl
xor
fwait
mov
test
cli
mov
pop
mov
mov
movsl
xchg
inc
std
ljmp
addr16
or
jp
pop
adc
lods
movsl
xchg
push
lret
xor
les
insb
int
cltd
add
ljmp
fucomip
cmp
dec
fisttpl
jmp
mov
push
lock
mov
lcall
cmpb
je
std
xor
cmp
push
aaa
inc
ds
outsb
incl
test
adcl
dec
xor
or
decl
jno
and
mov
and
aad
pop
in
mov
jg
sbb
and
mov
push
xchg
notb
jno
ds
das
inc
add
pop
jbe
out
mov
movsl
and
ret
sbb
rolb
push
add
add
loopne
scas
shlb
gs
jno
push
sub
pop
inc
ret
or
dec
jp
inc
cmp
out
jg
test
jl
push
gs
sbb
and
je
mov
xchg
test
sahf
decl
sub
xorl
nop
jp
push
imul
out
jg
mov
js
add
dec
inc
inc
imul
andl
test
and
movsl
sti
nop
leave
popf
cld
mov
add
leave
es
lcall
mov
into
cltd
push
stos
in
fadds
push
jp
inc
pushl
test
es
pusha
sub
iret
sub
aaa
mov
lods
or
pop
inc
or
push
fcmovb
gs
ret
je
add
mov
mov
scas
pop
nop
lock
clc
fildl
mov
mov
push
adc
pop
std
inc
push
fisttps
sti
lods
je
or
cmp
mov
jbe
xor
xchg
incl
pop
sbb
xchg
test
test
or
inc
or
test
mov
fstpl
cmp
pop
sbb
mov
jb
jns,pn
xor
sbb
decl
xor
jge
push
jae
mov
inc
loope
call
mov
mov
xchg
sbb
pop
pusha
les
cmp
popf
mov
repz
sub
pop
faddl
aaa
mov
sbb
lds
inc
lcall
int3
push
aam
mov
xor
or
dec
xchg
test
push
xor
jno
cmp
std
in
adc
jo
bound
mov
pop
adc
jo
ss
ja
and
push
or
fs
and
icebp
js
adc
test
sahf
mov
add
pop
loopne
jne
bswap
rorb
push
pop
lcall
scas
pop
pop
out
pusha
xchg
cmc
pop
loop
jl
setbe
push
push
pushl
adc
adc
lret
mov
xor
fsubl
inc
dec
jo
sub
cld
cmp
add
or
sub
cmp
push
dec
dec
test
fisubrl
int
pop
pusha
jl
mov
cmpsb
and
mov
push
xor
lods
iret
jo
arpl
lret
jg
imul
decl
shrb
fldl
rolb
inc
cmpb
sub
mov
and
pusha
test
lret
jg
adc
adc
call
test
sbb
mov
stc
adc
lret
sbb
pop
jecxz
movsl
xor
or
jb
push
in
jmp
inc
sbb
jno
sbb
mov
and
arpl
test
inc
arpl
sar
jmp
loope
cmp
sbb
les
xchg
sub
xor
repz
icebp
pushl
jne
sbb
sub
cmpsl
adc
loop
or
push
imul
popa
aam
jge
xor
fbld
or
sbb
pusha
or
cmp
ret
adc
jl
mov
stos
outsb
aad
pusha
sbb
repz
fdiv
jg
jbe
cmp
mov
pop
outsb
mov
gs
testb
push
xchg
inc
movsb
dec
fisttps
testb
add
loopne
push
jmp
pop
pop
fldenv
jmp
icebp
xorb
jne
xchg
scas
pop
cltd
ljmp
loopne
adc
jmp
sub
jbe
leave
jl
movsb
adc
sbb
jg
cld
mov
add
mov
push
and
fsubr
adc
call
xor
add
notl
sbb
mov
loop
push
outsb
movsb
fisttpll
incl
add
icebp
xchg
sbb
adc
ss
std
cmpsl
cli
sti
cmp
dec
ja
test
loope
dec
jg
jns
ljmp
sub
fdivs
mov
out
cmp
xor
add
pop
xor
jne
movsl
test
imul
loop
and
push
and
xor
stos
mov
mov
pcmpeqb
stos
mov
notl
pop
arpl
loope
cmpsb
arpl
mov
addl
lods
nop
and
or
pushl
push
mov
outsb
test
mov
cmp
push
jne
adc
mov
jmp
mov
and
test
and
adc
loopne
sbb
inc
and
mov
hlt
hlt
mov
or
lcall
es
xor
jmp
inc
jg
lcall
pop
xor
leave
lcall
in
mov
ret
loope
lea
ljmp
ds
cld
add
mov
inc
pop
push
sbbb
jg
mov
sbb
mov
or
xor
test
or
or
ljmp
jmp
sub
mov
xor
xchg
mov
mov
lock
in
lcall
in
es
xchg
shl
int
cmp
sub
push
pop
mov
pop
mov
ljmp
fistps
popf
xor
xchg
push
sbb
or
test
jns
push
jb
mov
call
mov
dec
sub
sub
lock
ljmp
mov
inc
stos
mov
pushl
jnp
and
bound
adc
push
pop
lock
lods
rolb
push
insb
leave
inc
pushf
jp
sub
xchg
orb
jno
lea
jp
mov
and
cmp
rclb
sub
sub
out
adc
push
add
lea
or
out
clc
stos
clc
repnz
int3
cmp
add
add
push
dec
and
inc
cmp
cs
test
loop
ret
push
ds
mov
adc
shlb
jo
add
sar
sub
and
adc
ret
daa
pop
mov
rorb
and
mov
cld
incl
inc
bound
leave
mov
es
test
daa
push
decl
lcall
pop
mov
test
sub
xor
fsubs
cmpsb
add
je
push
push
mov
jmp
mov
in
inc
fisubl
pop
jbe
fs
fmull
mov
xlat
pop
sbb
dec
ss
scas
nop
dec
mov
es
icebp
pushl
xor
ds
shlb
jge
and
enter
ficoml
jo
lcall
xlat
push
mov
and
xchg
cmp
das
cmp
mov
lret
push
arpl
fisubs
call
lret
sarl
mov
dec
loop
inc
adc
mov
cmp
pusha
dec
mov
clc
or
and
jp
in
mov
push
mov
sbb
ret
sbb
test
sbb
js
mov
imul
into
leave
jbe
in
mov
add
ret
adc
push
lcall
stos
mov
mov
xchg
pop
xchg
mov
xchg
inc
lea
test
fildl
xchg
in
inc
push
jecxz
hlt
fwait
inc
loopne
movsb
xchg
and
xchg
mov
lcall
or
lea
pushl
ds
sbb
ljmp
inc
mov
xor
rclb
mov
jle
inc
idiv
incl
rorb
in
push
jo
in
rolb
cwtl
xor
test
std
xor
inc
mov
incl
mov
aas
je
and
popl
rcr
jnp
mov
cmp
pushl
popf
aaa
mov
sub
popf
xchg
mov
jae
adc
sub
rcl
push
or
or
mov
decb
incl
inc
jo
int
push
sbbl
xchg
iret
jg
fadd
add
aam
divb
add
jbe
decl
or
out
xorb
insb
pusha
arpl
xchg
outsl
jp
xor
lock
xchg
incb
cld
movb
notb
fs
rolb
loopne
jge
mov
data16
mov
popf
popf
test
push
xor
int3
mov
pusha
pusha
inc
scas
ljmp
cmp
add
mov
aam
test
pop
nop
sbb
adc
xchg
adc
dec
push
xchg
jp
and
std
xchg
mov
lret
inc
insb
ret
sahf
xchg
in
js
push
mov
push
cmpsb
call
and
pushf
or
and
dec
xor
xchg
cmovb
daa
mov
loope
jns
cli
and
lock
push
xor
sbbl
imulb
orl
jo
shlb
fmull
cmp
incl
adc
pusha
jle
xchg
xchg
popf
setl
dec
jbe
pushl
lods
pop
sub
xor
push
xchg
xor
outsl
mov
mov
leave
sbb
movsl
jl
mov
ljmp
repz
mov
jne
arpl
pushf
daa
cmp
cmp
fwait
jmp
aad
repnz
mov
mov
les
pop
lea
xchg
sub
jo
cmp
xor
fists
jg
sbb
stos
sub
out
push
dec
cld
aas
or
add
test
inc
repnz
mov
inc
sub
cmpsb
outsl
clc
call
ss
popa
or
fsts
bound
ret
lahf
idivb
cld
sub
call
rolb
or
dec
jp
clc
push
test
xchg
mov
adc
inc
cmc
push
outsl
clc
pop
cld
inc
pop
rolb
add
jo
push
inc
xor
push
jmp
nop
lock
xchg
pop
loope
dec
inc
cmp
in
dec
sbbb
mov
jmp
fwait
xchg
push
stc
add
mov
je
or
dec
aad
dec
repnz
push
jns
lods
or
call
sbb
aas
cli
aad
mov
mov
incl
pop
xor
push
stos
inc
orl
incl
inc
jo
call
mov
or
xchg
jmp
pop
int3
adc
orb
and
jmp
push
cmp
lahf
mov
inc
lds
inc
mov
mov
rcl
lcall
inc
imul
jl
jo
and
out
cmp
pop
clc
scas
mov
inc
call
push
test
movsl
dec
pop
push
test
mov
adc
xor
add
roll
or
mov
lret
rorl
pusha
leave
xor
or
decl
mov
adc
icebp
mov
mov
lret
aaa
dec
pop
hlt
in
dec
imul
xor
dec
jbe
insb
cmp
nopl
enter
jno
dec
pushf
mov
in
mov
pop
orb
sbb
cli
mov
das
add
or
xor
jns
and
aad
xor
dec
loop
inc
push
mov
inc
js
mov
and
loop
test
imul
mov
stos
sub
xor
and
dec
inc
and
jg
dec
notb
inc
or
dec
pop
pop
xchg
int
subb
jno
push
call
lock
lods
pop
mov
inc
cwtl
cli
xor
or
pushl
leave
cmp
inc
add
pop
sbb
jb
mov
ret
out
jp
cmp
push
xchg
push
test
xchg
adc
ljmp
xor
mov
repnz
inc
add
mov
mov
pushl
mov
movsl
idivl
int3
dec
jle
punpcklwd
ret
jno
sub
ljmp
arpl
sti
and
jo
in
loopne
in
ficomps
divb
pushl
push
std
cmp
outsl
rorb
inc
daa
bound
push
lock
rol
arpl
lcall
fistpll
xor
into
dec
and
mov
or
aam
mov
addb
insl
dec
mov
mov
jmp
pop
cmp
cmp
popf
sbb
inc
cmp
dec
jmp
test
push
add
enter
pop
inc
push
mov
incl
pop
jno
rcll
clc
xor
push
movsb
jno
adc
sbb
mov
ljmp
mov
cltd
xchg
inc
ja
mov
mov
out
pusha
call
mov
jmp
inc
jae
dec
xor
sub
leave
mov
out
pop
jns
push
xchg
sub
sbb
roll
lock
call
aam
mov
inc
xchg
call
rorl
mov
ljmp
mov
xchg
call
mov
pushl
mov
hlt
xchg
and
dec
dec
outsl
xchg
mov
ljmp
loope
in
jl
jge
fnstcw
cmp
sbb
cmp
fsub
sahf
daa
adc
fisttps
sbb
pop
enter
je
cmp
fsubr
jle
nop
into
enter
inc
punpckhbw
ds
inc
outsl
jp
aas
sti
fisubl
mov
jnp
sub
inc
js
cmp
gs
cmp
ret
xor
insb
pop
lahf
out
mov
cmpsl
jge
test
sub
fwait
add
mov
and
sbb
lret
fmull
cmpsb
orb
in
shlb
sbb
push
enter
stos
cmpsl
mov
add
movsb
sbb
movsb
xor
xor
push
mov
pop
xor
adc
addb
mov
into
mov
ret
mov
cwtl
or
cmp
mov
rclb
aas
shll
push
popa
sub
jae
xor
and
sub
jmp
push
rcr
mov
mov
push
test
mov
xor
or
lret
sbb
ljmp
add
sub
mov
les
pop
and
dec
add
loope
sbbb
out
mov
jg
sub
dec
pop
ret
fidivrl
jg
lcall
aas
jae
pop
push
jnp
shll
xchg
pop
fmull
lahf
in
std
push
scas
test
xlat
addb
test
sti
sbb
sub
dec
inc
push
in
xchg
ljmp
push
mov
pop
int3
inc
pop
les
cmpl
mov
lds
aas
pushf
inc
jg
inc
or
mov
sbb
in
or
insl
ljmp
add
popf
push
rolb
and
sub
setl
push
idivb
mov
sti
mov
add
fsubrl
mov
cltd
add
add
and
push
cmp
nop
mov
add
imul
and
push
pop
mov
xor
dec
jmp
dec
jae
mov
dec
xor
mov
push
test
inc
lcall
loope
cmp
sbb
mov
into
adc
mov
movsb
jns
incl
lods
xchg
add
cmp
adc
andl
mov
lret
push
pushl
pop
sarb
cwtl
mov
sbb
jecxz
add
jmp
adc
fdivr
xchg
loope
xchg
push
sub
cmp
dec
mov
sahf
aaa
dec
clc
lcall
into
mov
ljmp
pushl
dec
movsb
mov
lods
das
sbb
pop
mov
xlat
push
lea
add
cwtl
dec
mov
pop
and
dec
test
mov
cld
mov
mov
adc
mov
or
cmc
inc
aas
lret
sbb
pusha
and
push
call
mov
shlb
cmp
cmc
push
sahf
in
and
add
push
push
lods
lcall
xchg
jecxz
xchg
leave
mov
test
mov
ljmp
mov
cs
cmp
sbb
jmp
push
and
add
das
xchg
pusha
mov
andl
inc
lcall
jns
push
sarl
push
cmp
leave
fmuls
rcll
inc
enter
push
cld
hlt
inc
push
or
pop
cmpl
xchg
and
add
scas
sbb
mov
js
and
mov
sbb
loopne
rolb
ja
rorl
cmp
sbb
cld
sbb
xor
inc
adc
call
xchg
outsb
fisttpl
or
hlt
xchg
inc
mov
sbb
cwtl
test
inc
sti
xor
jb
int
xchg
mov
pop
fsubrs
cmp
jne
mov
push
ljmp
les
sub
fadds
leave
pop
ret
test
inc
mov
or
out
ret
inc
addr16
jg
cwtl
int3
js
int3
sbb
cmp
adc
mov
cltd
sub
or
das
mov
lods
rorl
lea
xor
cmpsl
inc
int3
scas
lahf
mov
lahf
jp
and
mov
fcoms
js
out
cli
rorb
and
pop
adc
jg
incl
push
rcl
pop
dec
into
ljmp
cmp
mov
ljmp
push
mov
and
mov
mov
enter
sub
xor
lcall
fnstcw
iret
ret
sub
sbb
test
aam
das
ror
das
sti
or
call
xor
mov
and
jns
xchg
test
ret
stos
cmp
fldenv
push
adc
incl
int3
cmp
sbb
lret
xor
mov
lods
xchg
ret
add
adc
sbbl
sbb
call
incl
adc
sbb
es
das
lock
and
lods
rcr
movsb
int
cmc
mov
das
mov
adc
mov
popa
pop
imul
cli
sub
leave
xchg
hlt
shll
adc
aam
cwtl
xor
dec
ja
push
inc
aad
mov
ljmp
mov
rcrl
xor
test
pop
scas
mov
je
jecxz
rcrl
pusha
lcall
lea
sub
cwtl
int
add
rcrl
inc
daa
sbb
push
cmp
pop
js
pop
std
incl
mov
outsb
sbb
push
fmuls
std
sbb
and
push
mov
rsqrtps
ret
in
push
popf
subl
add
mov
fdivp
sahf
int3
rolb
or
std
fcomip
inc
xor
pop
mov
in
dec
cmp
push
stos
arpl
call
or
mulb
mov
sub
mov
and
incl
jno
ljmp
dec
ss
shrl
pop
test
add
pop
mov
sbb
add
ljmp
ds
aad
subb
ficomps
ljmp
add
test
xlat
repnz
popa
repnz
xchg
push
xchg
inc
add
scas
cmp
jg
aas
and
in
cs
test
cltd
inc
xlat
sbb
mov
int3
daa
std
lcall
and
cmp
lds
sbb
lods
inc
sub
pop
in
dec
fildll
hlt
lret
rcr
aam
push
xor
orl
mov
popf
inc
aas
jp
call
lds
xorl
sbbb
sbb
push
negl
std
jmp
sbb
pop
inc
inc
jp
test
lret
mov
push
mov
repz
adc
sbb
sub
xchg
sbbl
call
addb
inc
aad
xchg
add
std
call
into
add
push
jle,pn
es
dec
pop
xchg
mov
adc
call
ffree
xchg
sub
push
nop
xor
cld
adc
pop
fsts
xor
inc
iret
pop
mov
pushl
leave
push
push
es
sbbl
or
arpl
xchg
decl
mov
movsb
mov
mov
inc
in
jp
adc
pusha
jmp
fisttpll
movsb
mov
mov
push
popa
cli
xchg
nop
popa
call
jecxz
xchg
adc
cwtl
loopne
incl
or
dec
pop
cmc
mov
in
pop
pushf
icebp
adc
lock
xor
decl
shlb
jae
aas
lea
flds
and
xchg
push
call
jl
dec
insl
ficoms
hlt
pop
sahf
aad
popf
add
mov
inc
adc
xor
mov
push
adc
adcb
aas
idivb
mov
loopne
jmp
shll
or
push
cmp
push
pop
pop
incl
mov
loopne
das
add
sub
leave
mov
test
call
incl
add
mov
std
enter
xchg
outsb
bound
add
clc
decl
adc
loope
movsb
dec
pop
xor
jnp
xor
into
and
dec
push
int3
call
mov
cli
scas
shll
cmpsl
inc
and
ljmp
pushl
sti
pop
inc
loope
xor
mov
jns
shl
sub
mov
mov
and
sahf
lahf
dec
jp
lret
dec
je
nop
rcrl
sbb
jb
loope
add
pop
pop
incl
es
sub
movsl
clc
lea
jp
aas
cmp
fnstenv
popa
out
xor
outsb
lock
es
mov
popf
lahf
cld
int
inc
ret
insl
fistl
and
dec
cmp
in
pop
adc
pushl
xchg
jp,pt
out
mov
jg
aam
adc
loope
divb
pop
popaw
adc
int3
int3
in
addr16
sbb
cmp
push
add
cltd
inc
inc
test
jp
push
cmp
scas
mov
incl
jae
dec
dec
mov
mov
add
mov
bound
jmp
sub
test
incl
sbbb
fstpl
mov
les
faddl
jecxz
pushl
push
incl
jne
lods
sbb
std
je
mov
test
ljmp
shr
rorb
inc
hlt
adc
and
pusha
cmc
push
or
scas
ja
notb
movsl
xor
fisubs
insb
push
imul
aaa
mov
mov
das
test
pusha
test
cmp
sub
incl
pop
pop
pop
pop
out
mov
sbb
popf
pop
inc
in
ss
xor
pop
enter
add
mov
cmp
xlat
enter
mov
sahf
dec
mov
outsb
mov
adc
xchg
scas
mov
call
sbb
fadd
pusha
xor
das
sub
cmp
movsl
jle
dec
mov
cmpsb
push
rep
push
lods
aad
xorb
lods
loopne
pusha
cs
adc
call
jno
int
mov
mov
ss
pop
lods
out
jbe
add
mov
sub
sbbl
dec
pop
adcb
js
xor
sbb
decl
sbb
pop
inc
sub
lret
cmp
push
imul
mov
inc
push
and
xchg
and
mov
test
ret
aam
sarb
push
call
cwtl
xchg
cmp
ljmp
xchg
jne
bound
sahf
mov
xor
movsl
sti
adc
cmp
jbe
adc
xchg
cld
loope
xchg
repnz
call
js
out
sbb
rcrb
add
add
ret
xchg
hlt
jmp
sub
add
pop
arpl
mov
aaa
std
ljmp
es
aas
lock
xchg
add
into
mov
xor
lcall
cmpsl
js
in
pop
enter
ljmp
or
enter
push
cmp
lcall
movsl
adc
jl
addr16
mov
xor
or
xchg
test
cld
decl
shll
and
int
sbb
push
outsb
and
pop
push
ljmp
or
leave
mov
pop
dec
outsl
xor
jp
mov
dec
outsb
pop
cmp
call
leave
pop
decl
inc
repz
adc
push
mov
sub
sub
add
add
dec
int
jb
lret
scas
fldl
pop
xor
call
rcrl
push
hlt
test
pop
mov
or
shll
xchg
ljmp
jge
gs
inc
gs
add
imul
ljmp
mull
inc
mov
mov
mov
enter
ret
pushl
fnstenv
jb
xchg
enter
xor
insb
repz
add
jb
aas
repnz
call
or
add
loope
sbb
out
lcall
xor
mov
xor
lock
or
aaa
fistpll
movsb
add
pushl
fistps
cmp
mov
lock
sbb
dec
imull
add
and
cmpl
jmp
jmp
ret
mov
and
push
sbb
fs
call
inc
xorl
add
aaa
outsl
pop
ret
sar
in
mov
pop
pusha
xor
loopne
jno
test
mov
sub
push
rcrb
rcrb
js
jg
call
mov
hlt
add
jo
mov
mov
int
mov
into
fwait
adc
pushl
fsubs
leave
mov
shll
mov
add
dec
shll
lods
or
scas
clc
pushl
mov
xor
push
test
lcall
in
pop
mov
cmp
ficoml
mov
fwait
sbb
push
sbb
repz
call
mov
cmp
les
icebp
pusha
sbbl
js
jno
jmp
push
mov
stc
push
les
fsubl
lds
pushw
clc
mov
ljmp
sbb
scas
in
lcall
out
fists
das
push
stos
pop
ret
xor
mov
inc
mov
adc
push
imul
es
call
or
or
mov
das
rcrb
dec
add
jo
or
subb
xchg
es
cmp
decl
gs
arpl
dec
out
mov
les
or
mov
jle
in
xchg
inc
fcomip
fstps
xchg
inc
aam
test
mov
pop
lods
andb
jbe
call
arpl
inc
push
inc
push
fs
cwtl
xchg
push
inc
xor
cmp
inc
mov
jns
mov
js
out
or
sbb
xchg
jg
jns
pop
mov
fnop
jmp
fdivrl
cmp
inc
push
call
lahf
inc
mov
push
out
mov
pushl
loopne
mov
ret
imul
fldenv
testb
movsb
xor
sbb
fisttps
lods
inc
sbb
adc
and
sbbl
adc
sub
jmp
mov
xchg
lods
imul
mov
push
fidivl
and
add
push
and
mov
pop
sbb
movsl
daa
rolb
mov
call
mov
pop
cmp
negb
vcvtpd2dqx
clc
push
mov
or
incl
pop
xchg
push
cltd
test
dec
es
adc
xor
test
movsl
into
and
decl
cli
adc
inc
sbb
pop
aam
jg
push
adc
out
xchg
mov
ljmp
jne
shlb
mov
pop
call
addr16
mov
in
jbe
push
xlat
jns
pop
incl
loope
neg
lahf
fistpl
divb
test
jmp
test
ficoms
or
cli
adc
stos
adc
pushf
hlt
jg
jo
xor
jle
loope
aam
scas
ss
je
xor
cs
shlb
jmp
movsl
inc
popf
pop
pushl
push
lea
xchg
mov
sarl
cs
int3
or
enter
aaa
ja
push
cld
loop
mov
out
add
push
lcall
or
sub
stos
in
sbb
adc
fisubrs
orb
ljmp
mov
popf
in
scas
jne
ja
ja
push
leave
cmp
xchg
into
push
push
cwtl
pushl
dec
test
xlat
xchg
mov
sahf
and
pop
lret
ss
pop
and
test
add
dec
add
inc
cmp
leave
in
xchg
test
xchg
sbb
add
push
int
shll
xlat
mov
adc
pushl
mov
ret
aam
or
shr
jl
mov
push
mov
call
test
sbb
cmp
bound
inc
mov
test
or
cmpsb
mov
xor
pop
ljmp
ret
stos
insb
into
adc
mov
pop
rol
xchg
addr16
loopne
sub
sbb
ret
clc
and
ds
push
adc
cld
adc
mov
bound
fadd
cs
in
pop
add
ffree
xor
xchg
and
pop
jbe
inc
shlb
mov
hlt
push
xchg
sub
cltd
cli
je
xor
jge
dec
inc
inc
pop
pop
outsb
sbb
sbb
dec
into
enter
mov
movsb
mov
add
repnz
and
mov
in
mov
jmp
xor
push
in
ror
or
adc
notb
jno
test
test
mov
dec
cmp
jns
insb
fs
push
je
lea
jmp
cmp
add
jle
inc
bound
mov
sub
inc
cmpsb
xacquire
pop
bound
stos
mov
inc
adc
cmp
call
mov
sub
leave
push
sbb
xor
mov
adc
jg
aaa
outsb
xor
lret
push
xchg
xchg
ss
stc
dec
js
sub
push
xchg
mov
cmp
dec
leave
andl
pushl
jecxz
addb
lds
cmp
sti
push
adc
in
imul
stos
add
hlt
mov
mov
jmp
popa
loopne
shlb
mov
sub
jno
pop
xor
ret
fs
pop
fcmovne
movsl
enter
lcall
das
pop
add
push
mov
and
outsb
jl
ljmp
sbb
cmpsl
insb
mov
dec
insb
mov
clc
xchg
cmp
movsb
rorb
cmp
nop
xor
push
jno
mov
sbb
fmull
das
inc
movsb
push
push
or
lds
pop
lock
cmpsb
clc
jg
jl
xchg
mov
dec
mov
and
adc
cmp
incl
or
xor
jp
jne,pn
sbb
adc
cmp
incl
xchg
push
unpckhps
das
js
jnp
fcompl
pop
pop
sahf
rcrl
adc
sar
or
jo
mov
mov
mov
inc
cmpsl
into
call
and
dec
fisubrl
push
iret
inc
push
es
cmpsb
lea
mov
mov
push
mov
fdiv
mov
sub
push
les
insl
sahf
inc
jg
dec
mov
test
jne
aaa
mov
lea
push
push
inc
out
shrl
test
jmp
xchg
xor
shll
outsb
pusha
or
sub
or
ljmp
iret
mov
sub
sbb
jb
dec
scas
dec
xchg
cwtl
jge
xchg
xchg
fcomip
incl
mov
jl
cmp
cmp
inc
ja
push
incl
gs
sub
dec
dec
or
adc
ror
push
call
inc
pop
rcrl
test
adc
nop
test
and
push
sti
xchg
xchg
push
mov
das
cli
lods
push
je
gs
add
cmpsl
mov
mov
mov
ljmp
outsl
ret
rclb
sbb
adc
or
test
dec
push
test
pushl
mov
mov
lods
icebp
or
imul
sbb
inc
mov
call
or
daa
cmc
outsb
ss
cmp
test
lea
cs
dec
cmpsb
jb
incl
xorl
sub
lods
mov
lea
ret
pop
sbb
lcall
pushl
cli
in
test
adc
stc
sub
jne
jno
add
xchg
incl
xor
lcall
shr
inc
lret
pushf
rcll
in
add
pusha
out
add
std
jo
aas
jp
je
push
das
inc
add
inc
in
imul
mov
push
scas
adc
sub
jbe
repnz
std
adc
pushf
fiadds
lret
mov
sub
lods
lret
test
xor
lcall
sub
insb
dec
jg
dec
pop
fsubl
scas
js
ss
xchg
mov
pop
lds
call
sbb
mov
scas
lret
repz
jmp
jbe
mov
jmp
mov
and
xchg
mov
stc
loope
dec
lods
ljmp
icebp
lock
mov
pop
sub
incl
mulb
inc
xchg
pop
out
jae
int3
cli
aaa
nop
int3
pushf
insl
xor
push
dec
and
dec
xchg
popf
lods
sbb
sbb
mov
push
out
mov
bound
ret
or
xchg
ljmp
sbb
decl
inc
call
xlat
inc
int
fsubrp
add
into
cmp
lret
filds
inc
fdivrs
iret
jns
jmp
inc
ret
rclb
shr
push
jl
sbb
int3
xor
add
inc
mov
pop
aad
inc
add
les
sahf
adc
mov
pop
xchg
loopne
lds
cld
lods
pop
xchg
add
fildl
call
cwtl
loope
or
xchg
fmuls
int3
lcall
jg
mov
add
pop
lods
mov
mov
ret
pop
cmp
cld
ljmp
inc
pop
nop
or
rorl
pop
and
stos
test
in
push
cmp
call
jle
mov
push
outsl
push
loop
or
pop
or
lcall
sahf
data16
inc
ds
xchg
sub
sbb
push
shll
negb
jg
mov
in
fmull
jp
push
or
cmc
or
enter
pushl
les
sbb
and
push
inc
xchg
stc
sub
movsb
and
sti
pushl
cld
and
rcr
std
in
pop
iret
test
sub
test
sbb
cs
ljmp
push
fmul
and
add
xchg
mov
je
inc
jmp
jmp
int3
fstpt
xchg
test
xor
orl
pop
data16
pop
lcall
push
xchg
push
fldl
inc
std
mov
adc
psrld
dec
jg
decl
out
aaa
inc
loope
push
imul
inc
mov
ljmp
mov
movl
inc
ljmp
sbb
jg
call
mov
fmull
dec
sbb
sub
int
mov
pop
aas
mov
pop
dec
aam
js
pop
or
testl
and
pop
call
xor
sbb
leave
popa
pop
imul
dec
out
mov
aam
cmp
add
sbb
and
es
adc
xchg
lcall
jmp
sub
sub
sub
and
mov
out
nop
sbb
push
xorl
cmp
inc
call
jle
arpl
jge
adc
mov
push
std
push
or
jmp
stos
test
std
inc
les
push
enter
adc
sbb
loopne
lods
mov
xchg
hlt
jg
lock
popf
mov
js
push
dec
mov
das
lods
filds
test
nop
mov
jle
pop
loopne
icebp
pop
and
mov
aad
pushf
rorb
cld
movsb
sahf
scas
pushl
dec
sbb
dec
adc
mov
adc
push
pop
jmp
pop
ljmp
decl
mov
js
jne
lea
outsl
sub
incl
popa
filds
pop
dec
outsb
fisttps
xchg
mov
rolb
ljmp
in
lcall
lds
out
pushf
std
sbb
jmp
push
pop
add
xor
add
mov
popw
adc
xchg
inc
hlt
ljmp
push
pop
or
or
out
push
mov
aad
mov
jb
pop
jne
ljmp
mov
stos
cmc
and
cltd
test
cmp
adc
push
movsl
adc
nop
inc
mov
call
fmull
sbb
jns
or
nop
es
jge
mov
dec
add
call
push
imul
les
sub
cmc
mov
mov
fsts
xchg
jbe
jnp
psubq
push
mov
add
dec
pop
xor
enter
add
paddw
add
sbb
decl
inc
adc
pop
sbb
in
dec
push
shll
bound
adc
fwait
xchg
aad
out
clc
int
mov
inc
mov
imul
sub
aad
pusha
or
cltd
arpl
decl
lock
dec
ss
in
loop
mov
inc
loope
out
js
jne
mov
jmp
mov
pop
sub
std
mov
orb
push
xor
inc
bound
es
repnz
int
and
add
cmpsb
mov
out
dec
fimuls
mov
rolb
push
push
xchg
adc
insb
loopne
movsl
dec
push
mov
lcall
mov
ftst
pop
xchg
cmpsb
and
gs
push
dec
pop
enter
mov
mov
into
fsubl
fldl
pushf
or
rcrb
sub
cld
enter
add
fnop
imul
xor
sub
push
pop
xchg
add
es
pop
lods
and
ljmp
xchg
popf
repnz
stos
push
inc
jmp
jle
jno
and
std
popf
push
incl
mov
push
xor
in
xor
cltd
cmp
lcall
ljmp
popa
pop
mov
int
leave
into
lcall
pop
jp
xorl
xorl
push
push
into
pushf
int3
jno
push
outsb
bound
faddl
cld
into
and
or
lcall
shl
push
adc
rclb
dec
stos
movsl
mulb
dec
jno
xchg
dec
pop
push
shlb
call
cld
adc
mov
iret
cwtl
bound
sbb
pop
imul
outsb
inc
jl
jge
sub
popa
adc
popf
int
inc
dec
loopne
pop
pushf
enter
xchg
pop
in
cld
call
outsb
enter
ss
and
dec
shll
and
insb
xor
xchg
push
clc
stos
in
push
lds
cs
lcall
jmp
ja
mov
push
fdiv
xchg
loopne
sbbl
dec
adc
mov
pushl
faddp
inc
xchg
fwait
cmp
cmp
sahf
push
popa
inc
sbb
push
pop
lock
adc
out
push
addr16
call
and
cmpsl
cmp
mov
adc
popf
cmp
or
mov
aaa
or
sub
sbb
cs
out
clc
add
gs
mov
in
jle
xor
outsb
loop
mov
daa
jp
mov
and
cmc
ret
decl
fmulp
loop
xchg
test
mov
mov
ljmp
das
icebp
rolb
pop
fdiv
in
push
inc
lret
movsb
fstl
cwtl
jbe
test
inc
push
sar
subb
ljmp
push
xor
pusha
or
fldl
ljmp
incl
out
jae
out
add
in
out
xor
loopne
ret
stc
lcall
lcall
pop
test
sti
out
add
mov
mov
and
adc
test
dec
and
popf
push
rorb
pop
repnz
das
xchg
je
mov
jno
dec
das
sub
mov
std
xlat
fidivrl
and
out
test
adc
inc
xchg
lcall
sahf
or
movsl
cmpsb
outsl
xchg
mov
and
inc
mov
pop
inc
nop
jne
lret
pop
add
lcall
xor
rcl
xchg
or
ljmp
xchg
and
or
xchg
int3
sbb
add
inc
cmp
sbbl
xor
aas
cmp
add
in
adc
ret
adc
sub
mov
inc
in
push
cmp
sbb
jno
cmp
ficoml
push
out
mov
jle
fstpl
add
jno
subb
sahf
add
lods
dec
pushf
push
nop
mov
pop
fs
lcall
xor
outsb
xor
pusha
repnz
cmp
je
pop
push
aam
out
push
orb
shl
pop
arpl
mov
jb
xchg
shlb
call
mov
sub
mov
dec
or
in
je
sbb
dec
mov
push
sbb
mov
xor
jno
repnz
daa
andl
imul
das
pushl
inc
sbb
sub
test
fs
je
xchg
pusha
sbb
push
or
mov
dec
inc
dec
mov
mov
cli
cwtl
je
dec
xor
inc
sub
dec
push
pop
in
aam
adc
xchg
lea
jg
dec
xor
lret
les
and
mov
ror
imulb
mov
pop
fisttpll
push
ss
ss
mov
int
mov
or
pushl
mov
jge
pop
mov
pop
dec
clc
mov
add
lret
popf
add
xchg
decl
mov
pop
decl
out
ds
and
mov
rcrl
add
call
and
pop
dec
stos
dec
pop
and
addr16
hlt
dec
inc
ljmp
xor
pushf
bound
pushl
scas
sub
adc
mov
pop
push
push
pusha
hlt
je
push
dec
push
sbb
push
fwait
jb
sub
pop
pop
jbe
mov
jne
add
push
outsl
clc
adc
call
sbb
mov
sub
xor
ja
orl
iret
hlt
fisttps
and
mov
test
mov
xor
mov
lret
sbb
inc
lcall
mov
insb
nop
add
movsb
xchg
outsl
cltd
fbstp
pushf
lods
xchg
fs
and
leave
mov
ljmp
add
loop
inc
pop
add
inc
jmp
gs
repnz
dec
xchg
jmp
dec
push
mov
je
or
fisubrl
insb
and
or
hlt
decl
jno
ss
sub
stc
fnstenv
xchg
cmpsl
jne
jmp
incl
xorb
dec
cmp
mov
jg
push
xor
mov
movsb
jbe
ljmp
jo
out
xor
adc
mov
mov
decl
push
mov
mov
lods
push
jecxz
xor
pop
test
jbe
cs
sbb
dec
push
je
scas
and
dec
sti
jg
pushl
pop
mov
dec
js
repz
mov
aaa
cmp
and
jg
jg
dec
add
icebp
test
das
sbb
outsl
xor
mov
inc
sub
movb
addr16
js
push
mov
in
jg
push
int
mov
in
pop
mov
pop
xchg
or
icebp
push
xchg
iret
jne,pt
mov
inc
hlt
xchg
mov
xchg
and
cmpsb
jp
les
addr16
sbb
outsl
mov
enter
sub
aad
sti
fiaddl
pushf
cwtl
fimull
dec
xchg
jp
call
stc
xchg
popa
in
xchg
sub
subb
cmpl
mov
add
call
cmp
mov
out
jne
pop
dec
ret
pop
into
daa
popf
or
shlb
ljmp
push
fmuls
inc
insl
fs
add
mov
cmp
mov
aas
jge
inc
jnp
dec
mov
mov
mov
cmp
sub
adc
fisttps
lcall
push
loopne,pt
mov
adc
fbld
jle
adc
std
jecxz
mov
loope
std
in
jle
pop
ds
cmp
filds
call
inc
adc
lahf
ds
mov
mov
cmpsl
cmc
and
push
inc
push
addr16
adc
push
fwait
push
les
fsubl
call
and
das
jns
mov
push
mov
andl
jecxz
cmc
mov
dec
jle
je
dec
dec
repnz
shl
or
xor
mov
inc
mov
imul
lods
and
imul
xchg
test
jge
call
jne
fistpll
add
adc
inc
adc
dec
nop
pusha
inc
addl
mov
lcall
sbb
shll
inc
mov
cmp
hlt
clc
adc
adc
jbe
call
mov
adc
pop
bound
xchg
cmp
inc
mov
mov
loop
out
mov
jp
test
jmp
aam
and
push
test
orb
rcl
jmp
scas
bound
sti
mov
pop
scas
push
mov
inc
insb
jmp
mov
pop
jns
int
pop
sub
and
in
leave
xchg
les
mov
scas
pushl
in
sbb
jecxz
cmp
mov
js
in
lcall
iret
push
adc
dec
popf
or
out
fcoms
lds
aam
or
push
or
pop
mov
fstpl
int3
sub
jmp
lock
test
outsl
js
aaa
jo
aas
dec
dec
roll
pop
jno
xlat
mov
xchg
add
jp
pop
loope
jnp
mov
inc
sub
mov
pop
movsl
loope
inc
push
jl
push
out
leave
int
testl
popa
test
or
paddb
loope
int3
dec
xchg
dec
inc
or
push
adc
and
pusha
add
ret
mov
xor
les
cmp
add
adc
cmp
pusha
in
jo
test
inc
push
sub
cld
lcall
inc
daa
and
hlt
stos
dec
sub
jl
or
mov
rorb
ljmp
mov
jecxz
sub
shlb
shrb
jg
ljmp
cmpsl
in
or
cmp
sbb
ret
or
cmpsb
mov
shrl
jmp
or
mov
dec
dec
mov
stos
add
ljmp
cmp
loope
inc
dec
xor
mov
insl
push
lods
cmp
or
mov
sbb
popa
dec
repnz
pop
mov
decl
inc
sti
xchg
mov
xor
mov
cmp
test
push
es
cmpsb
insl
cltd
cli
decl
mov
xchg
or
mov
or
sub
cmpsb
add
aas
loopne
adc
das
cmp
jecxz
cmp
fwait
lcall
mov
jne
add
icebp
imul
std
je
bsr
pop
aas
fdivrl
sar
incl
dec
mov
popa
je
sbb
aaa
out
sbb
add
mov
pushf
mov
sbb
ljmp
adc
inc
xor
xchg
jno
adc
dec
push
pop
in
popa
push
cli
jmp
cltd
inc
jbe
in
dec
mov
repz
add
data16
cmp
jmp
mov
ficoml
mov
xor
fldt
lods
lds
xor
outsb
or
push
fwait
sysexit
rorb
lods
mov
out
imul
push
lret
loop
dec
mov
sub
fcompl
push
or
sbb
jg
xlat
inc
in
aam
mov
je
mov
lret
lods
sub
out
int
jmp
mov
and
xchg
pushf
sub
pop
pop
jne
insb
or
mov
jmp
xor
jnp
add
add
leave
jl
ja
inc
andl
testb
sub
orl
insb
jmp
jg
push
mov
and
dec
popa
cld
loopne
mov
sbb
call
mov
hlt
lret
fwait
clc
aas
out
ja
loopne
aad
mov
cmp
jno
mov
fdivr
decl
rolb
mov
aaa
mov
into
and
mov
call
adc
adc
xor
fistpll
cmp
nop
dec
ss
or
mov
ljmp
and
push
scas
push
xchg
push
cli
out
dec
rorl
outsl
bound
lods
test
dec
vmwrite
incl
mov
pop
mov
xchg
mov
inc
popf
jecxz
les
inc
rcl
jle
incl
xchg
push
sbb
or
xchg
inc
cmp
sub
sbb
and
and
jmp
sarb
dec
shl
test
insb
adc
pusha
adc
xor
jmp
or
enter
jbe
sbb
push
mov
mov
arpl
ljmp
int
sbb
add
push
ret
jns
test
fldt
jg
popa
std
jp
inc
dec
jle
inc
mov
inc
adc
out
lcall
fsubp
sbb
and
jl
arpl
hlt
push
into
lds
ss
icebp
stc
out
lcall
and
jnp
ret
sahf
test
mov
leave
ja
clc
jo
jl
add
ret
inc
mov
adc
popa
or
xchg
push
sub
cltd
add
jmp
cmpl
loopne
stc
test
or
inc
cmpb
lahf
inc
out
out
push
andl
mov
scas
mov
aas
push
cmp
xor
insb
test
or
mov
popf
sbb
xor
loopne
sub
fucom
push
pop
movsl
sub
push
push
push
or
decl
add
mov
dec
mov
lds
cli
call
loope
inc
stos
lds
in
pop
pop
mov
sub
bound
ljmp
test
sbb
pushf
dec
lcall
jg
call
sub
jnp
loop
fistps
inc
in
mov
mov
mov
or
movsb
pop
lret
int3
lock
mov
mov
cld
setae
dec
fimuls
add
jle
pop
call
icebp
lcall
inc
mov
sub
dec
out
and
out
loop
ljmp
xor
sbbl
sub
ljmp
dec
add
jb
lcall
aas
xor
sti
repz
add
jnp
gs
pop
std
ljmp
xor
ljmp
jl
mov
pop
pop
mov
cmpsl
mov
mov
and
pusha
push
and
filds
adc
adc
in
roll
test
ljmp
and
test
sbb
push
jp
or
addr16
stos
pop
xor
adc
call
cmp
cmp
fwait
mov
sub
sbb
pop
sub
stos
dec
in
sbb
fcoml
xor
adc
mov
lret
loopne
and
xor
in
push
cmp
incl
sub
mov
xor
call
aas
xor
dec
xchg
mov
jmp
test
xor
mov
jmp
pop
test
jno
cmp
push
adc
mov
imul
mov
inc
imul
push
pop
mov
ljmp
stos
mov
mov
pop
aas
cli
ret
xlat
jo
cmp
mov
jmp
fdivrl
sub
fs
cmp
insb
test
mov
mov
inc
les
incl
mov
mov
fidivrl
dec
popf
push
pop
push
aam
mov
scas
js
fiadds
sub
add
subb
stos
rcrb
mov
cwtl
pop
sahf
in
jg
addl
pushf
mov
mov
int
add
divb
pop
jmp
mov
dec
sbb
pop
insb
adc
or
cmpsb
out
push
lea
call
scas
pop
sub
xchg
fs
pushf
or
mov
mov
mov
xor
pop
clc
push
in
push
sbb
xchg
pushl
xchg
stc
jl
adc
data16
cmp
sbb
pop
lsl
jecxz
imul
pop
dec
mov
lcall
push
fsts
and
push
stos
pop
hlt
or
cmp
sub
xchg
add
movsb
push
dec
pop
lock
xor
mov
into
arpl
sub
shlw
ljmp
ja
negb
aas
dec
inc
pop
leave
xor
inc
xchg
ja
dec
pop
mov
dec
mov
stos
push
xchg
sbb
enter
mov
and
sbb
mov
and
mov
add
into
jle
push
pushf
mov
push
jnp
xor
mov
cmp
lcall
dec
mov
out
movsl
jp
mov
jbe
insl
ljmp
mov
js
adc
stc
ss
jge
sub
rcr
aaa
mov
inc
incl
mov
shlb
mov
mov
stc
rcll
sbb
ljmp
loope
stos
imul
cmpsl
cmp
xchg
int
popa
mov
sti
push
mov
mov
xor
pop
das
or
std
cmp
sbb
inc
fsubl
jg
add
xchg
into
ljmp
mov
inc
out
rcr
leave
sarl
fisttpl
js
xor
mov
scas
aam
jo
fsubrl
cmp
cmp
add
jmp
xor
inc
pop
add
negb
stos
mov
clc
in
les
incl
xchg
lea
or
mov
push
data16
mov
fldcw
or
insl
test
sbbb
dec
or
fisttpll
pop
imul
mov
fistps
std
incl
insb
or
and
imul
or
push
mov
sahf
out
and
enter
aaa
decl
inc
data16
inc
daa
and
arpl
mov
scas
or
and
or
xchg
insb
imul
imul
add
mov
out
in
or
pop
push
xchg
or
es
adc
jmp
push
leave
jge
sub
es
push
adc
mov
jecxz
jecxz
and
pusha
insb
into
in
ds
test
incl
popa
aam
into
lods
into
cwtl
jb
dec
gs
jbe
inc
pop
rcl
or
ljmp
test
hlt
push
test
push
add
or
loop
or
decl
pop
in
add
mov
popa
and
cld
out
mov
dec
fdivrp
mov
sub
int
fisttps
and
nop
in
adc
cmpsb
mov
loope
push
cli
test
jl
mov
outsl
decl
rcll
sub
and
sub
sahf
mov
pop
jmp
lret
arpl
outsl
and
ljmp
fcoms
dec
and
cmp
and
sub
inc
dec
ret
adc
fisubrs
cli
fisttps
scas
adc
leave
sbb
cmp
or
fdivrl
pop
je
outsl
push
lock
sbb
aaa
jl
sti
mov
xchg
ret
decl
movsl
add
jl
outsb
adc
mov
inc
jno
jp
xchg
cmp
out
stos
js
jmp
pop
jmp
xchg
lcall
mov
lods
jecxz
push
xor
xor
rcrb
push
adc
addr16
into
cmpb
test
aad
lret
in
mov
sub
in
aad
adc
incl
out
out
adc
push
jae
je
scas
clc
mov
adc
xchg
mov
arpl
sub
mov
lahf
lock
sbb
or
outsl
fisttpl
fstps
mov
ljmp
sbb
push
xor
shrl
mov
ljmp
fiadds
fdivrl
sub
iret
xor
jns
dec
mov
fisttps
das
cli
fistpll
push
xor
mov
std
out
xchg
cli
dec
lcall
jmp
imul
push
out
loope
push
mov
mov
cmp
arpl
jg
scas
push
cld
rorb
mov
and
xchg
imulb
push
inc
mov
or
cmp
lcall
or
jmp
mov
clc
lods
sub
and
int
incl
fsubl
stos
and
push
call
in
add
sub
cmc
cmp
call
mov
sub
test
inc
mov
mov
xor
pushl
cs
lods
inc
add
dec
es
jb
mov
loope
enter
cmp
enter
scas
fsubrl
adc
fstps
inc
rorb
insl
ficoml
inc
push
loopne
jbe
and
in
repz
insl
push
es
enter
or
jecxz
inc
int3
cmp
js
adc
hlt
sub
sub
decl
int3
adc
out
out
in
adc
fldt
repz
and
cmc
dec
push
mov
jmp
in
inc
fnsave
in
out
jle
mov
aam
fisubrs
scas
ds
incl
adc
xchg
push
mov
add
jmp
xor
into
and
loopne
mov
or
cli
pushl
insb
and
scas
daa
lods
sahf
inc
sub
daa
pushf
xchg
mov
repnz
es
ljmp
push
inc
pop
xchg
aas
jo
inc
jne
inc
jns
inc
imul
mov
mov
scas
mov
jg
lods
lret
mov
ljmp
push
or
xor
mov
call
xor
mov
jno
jecxz
dec
push
lock
jg
mov
xor
sbb
push
popf
out
jmp
add
xor
sub
cld
decl
push
dec
cltd
lods
dec
mov
sub
dec
mov
or
test
jg
lcall
mov
xchg
push
push
insl
ret
sub
cmc
mov
ljmp
call
pop
in
mov
adc
xchg
js
dec
je
test
dec
jmp
call
adc
mov
andb
dec
int
push
hlt
xchg
lock
notl
push
cmc
push
ljmp
mov
mov
push
push
mov
test
data16
mov
popa
int3
sub
xor
or
push
and
mov
jmp
in
mov
push
inc
xchg
mov
mov
call
lret
pop
clc
arpl
sub
pop
mov
cmp
lods
mov
dec
imul
outsl
xlat
xor
into
aas
mov
inc
pusha
cmp
scas
clc
cmp
lahf
push
fs
push
pop
inc
pop
in
jl
mov
loopne
add
xchg
pop
popa
int
mov
enter
jnp
mov
lcall
shll
inc
stos
int3
call
and
fists
or
mov
mov
lcall
push
aaa
xor
lea
ljmp
rorb
jb
dec
dec
push
rsm
push
jbe
jae
loope
push
push
pushl
movq
mov
and
mov
divl
and
jmp
sub
xor
incl
cmpb
and
outsl
dec
sub
mulb
test
sub
pop
add
pop
repnz
cmc
lcall
jg
cmp
scas
sub
mov
xor
movb
lcall
inc
push
int
fs
into
lcall
sbb
jo
out
pusha
mov
jmp
movl
push
imul
out
inc
js
xchg
pop
xchg
gs
pop
bound
movb
and
mov
fwait
xchg
fs
mov
insl
xor
jmp
lcall
xchg
jne
rorl
lea
mov
mov
adc
fimull
xor
or
fmulp
mov
jo
and
aaa
std
and
pop
pop
jae
pop
lea
dec
lds
xor
or
jmp
mov
and
out
and
or
inc
pop
stc
jl
cmp
fmuls
jmp
fdivr
lcall
mov
lcall
inc
push
jp
or
call
push
repnz
sbb
push
xchg
cmp
ds
jne
fdivl
and
repz
cmp
test
clc
pusha
adc
sti
scas
and
fdivl
jg
sub
add
inc
mov
lcall
imul
pop
or
pushf
imul
fbld
loop
icebp
adc
cmp
pop
lock
decl
jns
into
mov
mov
jmp
clc
sub
lret
xor
sub
pop
sub
aad
dec
dec
int
xchg
cli
js
cwtl
adc
cld
rorb
popf
or
cli
lods
insl
in
fildll
stc
push
sbb
jmp
in
es
cmpsb
out
cmpsb
mov
scas
mov
or
adc
xchg
cli
out
sub
cmp
stc
jb
movsl
cmp
incl
push
outsb
lret
or
loopne
call
imul
cltd
mov
incl
xchg
ljmp
jge
sbb
jne,pt
xor
js
test
cmpsl
add
outsl
clc
outsl
cmp
push
and
insl
push
rolb
adc
fnstenv
scas
mov
mov
mov
fs
add
pop
jne
jg
dec
cmc
aaa
leave
pop
aam
cs
xor
sbbl
inc
inc
mov
call
dec
fidivl
pop
lcall
in
cli
jmp
lods
sbb
and
cli
mov
aas
lret
sub
lcall
push
shrl
jbe
int
rorl
cmc
in
mov
jmp
push
iret
sbb
mov
jp
add
sti
and
fwait
jle
pop
imull
idiv
ljmp
mov
push
addr16
adc
sub
movsl
sbb
jge
insb
loope
stc
push
inc
aad
ljmp
inc
push
ds
dec
adc
inc
inc
jle
insl
std
pushl
xchg
ss
adc
jnp
sub
lahf
scas
clc
lcall
pop
lret
mov
cmp
jp
lds
movb
mov
push
ret
cltd
sub
lds
hlt
pop
pushf
mov
mov
lds
cmp
out
in
mov
clc
mov
lret
lret
stc
or
adc
aaa
sbb
and
lret
or
lahf
or
lahf
jl
jg
mov
lret
jp
loop
test
and
pusha
sbb
ljmp
pop
mov
mov
push
mov
ljmp
inc
and
dec
and
add
adc
add
stc
popa
ret
decl
clc
roll
add
adc
jge
ret
rorb
lods
shrb
fbld
mov
mov
adc
xor
iret
xchg
scas
cmpsl
inc
subb
lods
int
mov
push
decl
cmpsb
xchg
jge
ret
dec
sub
push
jbe
fcmove
push
notb
sub
pusha
and
pushl
stos
mov
dec
inc
sub
js
scas
cli
ljmp
push
movl
sbb
aaa
jnp
jnp
add
and
add
decl
and
jge
testl
mov
out
cmp
pushf
sub
pop
inc
dec
loope
scas
aaa
bound
mov
xchg
mov
cld
jb
addl
jle,pt
ds
in
incl
in
fisubs
push
sub
in
test
sbb
pusha
ljmp
fisttpl
jge
pop
std
aad
pop
daa
mov
lret
or
iret
fcomip
fisttps
add
and
add
jo
cmc
inc
roll
mov
ljmp
sarl
aaa
std
mov
push
mov
mov
or
pop
incl
xor
dec
cmp
rcl
and
jmp
xchg
cmp
or
mov
fwait
in
xchg
mov
mov
pushf
add
inc
cwtl
xchg
dec
dec
xlat
divl
scas
xchg
repnz
leave
mov
scas
xor
js
jne
ljmp
clc
decl
aas
push
test
popa
movsb
fsubrl
push
pop
inc
fwait
mov
aaa
mov
mov
std
fldl
mov
sbb
jmp
imul
fdivr
loopne
pop
insb
lds
addl
jo
mov
pop
adc
pusha
add
lcall
mov
pop
arpl
scas
aas
pusha
inc
push
in
sub
adc
or
sahf
sarb
xlat
fistps
mov
lahf
sub
sbb
pop
insb
pop
stos
add
ljmp
adc
xor
and
add
cmp
push
and
jle
pop
mov
lock
decl
pop
adc
jbe
jecxz
ffreep
mov
xchg
into
nop
lea
cmp
or
mov
aaa
cli
inc
mov
out
xchg
and
in
xor
jne
test
push
adc
push
fwait
dec
xorl
push
movsl
xchg
sub
xor
sbbl
in
xchg
movsb
adc
cmc
sub
mov
pop
es
push
loopne
test
or
mov
sub
out
test
ljmp
imull
unpckhps
cs
clc
incl
push
stc
pushf
adc
fdivs
rolb
dec
ret
shrl
inc
fiadds
scas
pop
jle
aaa
cmc
lcall
enter
add
adc
arpl
sbb
dec
in
shl
cld
stc
push
ret
push
push
mov
pop
xchg
cmp
out
in
fidivrl
mov
mov
sub
jl
mov
sahf
jnp
fsub
fstpt
imul
fstpt
jmp
sub
stos
or
xchg
xchg
loopne
mov
xor
inc
mov
subb
sbb
cwtl
and
mov
pop
repnz
mov
ret
scas
fcomps
push
scas
bound
decl
cmp
cwtl
and
mov
dec
fs
icebp
mov
xchg
adc
mov
lret
push
pop
dec
inc
adc
sub
cmc
xchg
push
pop
jmp
adc
inc
xor
icebp
push
and
gs
dec
sub
fisubrs
sahf
jp
lds
cltd
jl
mov
int3
pushf
andb
jmp
push
dec
push
sbb
xchg
test
fcos
incl
sbb
cltd
xchg
test
sub
mov
push
pop
jno
aaa
sbb
incl
cld
adc
add
sub
pop
mov
add
mov
cwtd
std
or
pushf
xchg
test
test
lds
insb
pusha
mov
ja
pushf
aad
sbb
clc
ret
jl
icebp
icebp
ret
add
decl
xor
fdivl
hlt
pop
adc
call
and
jg
inc
or
ljmp
push
push
das
mov
cmp
adc
pusha
sar
jl
ret
daa
jo
stc
es
mov
lock
push
cli
push
popa
test
mov
decl
sbb
xchg
jl
mov
add
mov
jg
xor
sub
int3
sbb
jae
and
cmp
jl
xchg
iret
pop
mov
sbb
and
cld
call
std
pushl
sub
jp
imul
add
push
dec
jmp
adc
pushl
cmp
and
popf
inc
mov
cmpsb
push
pop
fmull
add
sbb
jg
pop
fidivs
movsb
inc
lcall
pop
inc
sahf
fcomp
fdivrl
lcall
dec
sub
or
cmpsb
sbb
mov
push
push
push
jp
ljmp
cli
mov
pop
jb
out
jp
push
pop
fwait
jle
pop
cmpsl
mov
movsl
and
pop
inc
or
jne
pop
lods
fs
xchg
imul
rcll
stos
scas
pushf
jno
imul
decl
mov
jge
rclb
cli
jnp
push
adc
insl
mov
xor
movb
add
sbb
fidivrl
cld
jmp
imul
or
pop
jno
incl
ret
jbe
mov
ret
fistpll
in
jle
fistpl
stc
pop
pop
arpl
xchg
incl
and
pop
sbb
push
push
movsb
xor
repnz
jo
mov
xchg
lods
call
int
out
sbb
iret
mov
xor
in
xchg
pushl
or
xchg
enter
sbb
xchg
mov
jo
ss
xor
in
imul
call
dec
adc
xchg
mov
in
adc
ss
dec
dec
and
std
inc
daa
xor
lea
push
rcr
inc
mov
jg
push
mov
in
mov
cmpsl
xor
mov
fs
dec
ss
pop
popf
or
push
cmp
cmp
xor
insb
xor
xchg
mov
dec
inc
je
jmp
sub
xchg
popf
stos
dec
leave
cmp
in
into
push
call
sbb
and
adc
mov
add
mov
pop
cmc
or
mov
cmc
mov
stos
lcall
cmp
mov
xchg
lahf
fstpt
push
loop
sahf
imul
ret
pop
cld
push
mov
rolb
dec
jne
or
adc
jns
cmp
mov
add
pusha
cmp
pop
roll
and
jae
xchg
cmp
pop
inc
jno
repz
daa
ljmp
mov
dec
mov
mov
pusha
inc
fstpt
inc
decl
popf
call
cmp
xchg
xchg
sub
add
in
add
and
push
mov
call
les
and
jge
sbb
sbb
and
sbb
incb
pop
cmp
add
sbb
rcrl
je
cmpsb
cmp
dec
mov
cmp
decl
dec
and
add
aad
sub
ljmp
stos
push
cmc
test
incl
hlt
movsl
and
lahf
mov
push
ljmp
decl
popa
dec
jnp
sbb
xor
es
enter
stos
xchg
outsl
inc
dec
pop
cmp
pushl
lea
test
daa
mov
mov
fwait
fwait
hlt
push
mov
incl
pop
and
lds
jb
fadd
hlt
pop
inc
mov
cmp
lcall
and
push
xchg
test
or
adc
sar
sub
add
xchg
jb
add
push
or
xor
pop
add
pushl
stos
push
shrb
pop
loop,pt
les
repz
mov
movsl
stos
pop
mov
xchg
jbe
xchg
cmp
lock
push
aaa
fadds
push
lock
push
test
jb
test
cmp
cmp
bound
jecxz
call
subl
shlb
test
roll
loopne
cmc
sti
lcall
push
fdiv
sub
sub
sub
sub
loopne
sbb
sbb
clc
inc
sub
jo
decl
fcmovne
sub
add
add
add
xor
cld
jecxz
inc
popa
cmp
pop
and
rorb
inc
xchg
xchg
jae
mov
sbb
decl
outsb
push
mov
jle
inc
and
sub
dec
xchg
push
clc
ljmp
daa
cmpsl
xor
insl
jle
pop
fisttpl
pushl
sub
sbb
mov
sbb
imul
add
int
xor
push
pop
daa
mov
jl
sbb
es
nop
insb
jbe
mov
ljmp
int
push
xchg
fs
xlat
inc
adc
sub
test
fisubs
pop
pop
fcomip
decl
lret
inc
jp
jns
lods
insb
mov
lds
pushf
sbb
data16
mov
mov
fstps
cmp
xchg
pop
testb
aaa
fisttpl
jmp
inc
fsubrs
int3
pop
dec
or
loope
clc
jp
mov
pop
jae
inc
jmp
dec
outsl
xor
sub
dec
mov
test
rolb
arpl
adc
out
jg
and
pop
into
lods
xorl
adc
adc
pop
popf
push
imul
hlt
xchg
decl
fwait
push
pop
mov
in
loopne
iret
addl
hlt
mov
rorl
push
push
inc
clc
mov
add
push
sar
xchg
push
repz
xor
stos
loope
movsl
pushl
jge
inc
scas
stc
popl
pusha
in
sbb
push
ljmp
mov
sarl
xor
inc
sub
loop
fcompl
sbb
dec
lds
push
mov
xor
jae
cmc
in
mov
incl
cmpsl
ret
dec
xorb
mov
adc
jo
jae
repz
xor
cs
lcall
ret
mov
insb
mov
jecxz
pop
mov
jmp
cmp
push
xchg
mov
movsl
sbb
lods
or
or
inc
lret
dec
mov
or
pushl
scas
dec
inc
lds
cmpsb
jbe
push
xor
xor
cmp
adc
push
mov
or
ret
outsb
cmpl
fdiv
mov
jmp
cmp
xorl
pop
mov
sti
or
jbe
movnti
mov
and
daa
shrl
loope
hlt
push
ljmp
jge
sbb
xlat
out
hlt
lods
pop
pushl
pop
lds
jg
mov
bound
call
jg
push
arpl
addr16
sbb
bound
push
and
jecxz
sub
xor
and
cs
sbbl
mov
or
mov
add
add
nop
or
subl
rolb
xchg
outsl
decl
ret
jo
dec
xor
or
and
loopne
sub
add
cmp
pop
pushl
xchg
hlt
sub
adc
fs
adc
es
adc
ss
push
mov
decl
outsl
in
xorb
inc
xchg
test
push
arpl
mov
push
sub
data16
xchg
cmp
xacquire
int3
and
push
xchg
sub
pop
test
cmp
lods
push
dec
lcall
out
fdiv
add
icebp
ljmp
sbb
dec
enter
xchg
dec
sahf
and
pop
icebp
aad
mov
out
int3
mov
lret
mov
sub
fcomip
push
adc
aad
icebp
cmc
pop
in
add
cs
jge
pop
jno
out
lock
dec
fsubrs
daa
bound
addr16
daa
jno
pop
jb
add
jmp
jle
pop
jno
decl
add
sub
mov
notb
sbb
jge
clc
inc
scas
call
mov
es
hlt
mov
add
and
aas
pusha
sbb
testl
pushl
daa
and
pop
subl
lods
rorb
add
nop
nop
lahf
lock
jnp
sbb
int3
sub
push
loopne
mov
int
std
outsl
clc
pop
adcb
or
mov
jo
cmp
add
aaa
pop
xor
or
rolb
push
testl
lock
pusha
arpl
loop
fsubrp
cli
jg
and
bnd
mov
addr16
jae
aaa
mov
shlb
incl
test
addl
push
sbb
jl
add
je
in
call
cmc
inc
or
xchg
pushf
adc
jg
pop
xchg
aam
dec
hlt
adc
out
call
pop
data16
xchg
jb
sahf
pop
sub
adc
mov
and
jno
incl
leave
movsl
imul
pop
xchg
adc
mov
lcall
sar
call
mov
mov
lret
mov
sub
cmp
sbb
pop
mov
xor
shl
decl
loopne
jecxz
add
cmpsl
jge
xlat
popa
ljmp
push
mov
mov
clc
gs
push
daa
jl
addr16
vpshufd
jg
test
loop
jo
add
inc
push
xlat
outsl
out
jge
xchg
pushf
xlat
cwtl
dec
pop
hlt
dec
sarl
fmuls
pushl
and
mov
cmp
addl
mov
call
or
dec
xchg
sbb
push
loope
xchg
sbb
or
call
or
push
rorb
mull
das
cli
call
or
jo
sub
or
shl
add
add
jg
imul
sbb
ficoml
xor
dec
ret
sub
mov
add
cmp
test
push
dec
pop
jp
xchg
push
jl
jmp
imul
movsb
push
dec
es
and
daa
fwait
lds
gs
dec
and
ljmp
sub
js
mov
mov
cwtl
movsl
sbb
jb
notl
out
js
mov
decl
lcall
mov
sbb
mov
sbb
add
xorb
inc
addb
rcrb
and
hlt
adc
out
clc
or
and
imul
leave
out
shlb
mov
adc
sbbb
jo
inc
jg
add
or
or
sbb
call
in
das
enter
sti
out
out
fcmove
outsl
into
test
sbb
sahf
call
incl
in
enter
es
addb
and
dec
mov
or
shl
dec
mov
pusha
add
lcall
mov
test
or
add
add
pop
pop
and
sar
dec
shlb
add
shrb
inc
je
cmpsl
or
stos
test
adc
loope
inc
jns
fs
dec
call
std
xchg
ja
mov
push
insl
pop
inc
or
sub
daa
cs
daa
jg
incl
pop
xchg
outsl
clc
push
pop
sbb
arpl
xor
xchg
push
push
xchg
dec
pop
mov
sbb
lret
imul
insl
push
mov
cmpsl
cltd
mov
lcall
xchg
sar
push
push
popf
sub
xchg
jp
rcll
mov
cmp
dec
pop
sahf
sar
ljmp
rclb
mov
and
loope
int
test
repnz
call
push
mov
lock
dec
push
cmpb
stos
loopne
outsb
or
sbb
aam
decl
mov
lods
jp
or
jge
push
add
push
cltd
sbb
stc
pushf
out
cmpsb
bound
inc
stos
stc
imulb
jns
lcall
je
pop
xor
lods
mov
out
ljmp
addr16
and
push
shlb
jmp
mov
decl
or
or
scas
sub
push
aaa
sub
loop
dec
fs
loope
call
jbe
pop
dec
pushw
pop
mov
push
lcall
jne
mov
xchg
adc
stc
xchg
lea
cmp
adc
push
ja
and
pop
pop
inc
cli
movsl
outsb
enter
dec
push
arpl
jbe
das
cli
jmp
xor
sarb
jns
insb
jbe
jle
mov
jb
pop
mov
xchg
arpl
adc
push
arpl
push
bound
and
add
jmp
jnp
xchg
mov
sub
test
imull
rcrl
pop
insb
popa
dec
adc
sub
stos
mov
lcall
jnp
mov
add
mov
insb
shrl
sahf
cli
sub
cmpb
incl
mov
scas
sti
dec
adc
fistpl
ljmp
adc
lret
js
mov
mov
decl
mov
xchg
pop
pop
stos
aam
mov
decl
js
imul
pop
ret
test
xor
jne
incl
lock
orb
repz
sti
or
mov
fldcw
mov
shlb
in
pop
cmp
xor
mov
xchg
add
or
jmp
xchg
cmpb
xchg
mov
sbb
mov
es
xchg
xchg
mov
pusha
inc
jb
mov
sub
cmp
xor
and
mov
mov
pop
aam
push
outsl
cli
jp
pop
inc
jno
sub
lret
adc
jno
jb
lcall
jp
imul
mov
push
or
xchg
xchg
cmpsl
stos
ret
adc
xchg
xor
lcall
test
cmpsb
sti
cmp
inc
jl
add
inc
lcall
es
jnp
ljmp
enter
lcall
popa
orb
fisubrl
sbb
pop
push
imul
leave
loope
sub
leave
cmp
sarl
inc
insl
aam
and
in
sub
dec
movsl
mov
in
aam
ret
jge
push
nop
push
or
arpl
add
jg
xorb
or
mov
xor
mov
stos
nop
stos
pop
scas
or
adcb
push
and
add
pop
fisubl
push
xor
mov
or
movb
push
adc
mov
jo
pop
lea
sub
leave
mov
std
push
jl
int3
inc
call
ljmp
sub
call
pop
popa
inc
movsb
xorl
bound
mov
das
mov
sar
call
sub
pushf
insl
mov
insb
cmp
movsl
push
mov
lcall
cld
dec
mov
ljmp
shl
imul
mov
cmc
cmpsb
xchg
fs
clc
pop
mov
xchg
decl
bound
movsb
mov
xchg
dec
int
mov
cmp
mov
ljmp
imul
cmovo
test
out
push
insb
dec
lods
mov
mov
lcall
mov
pop
rcll
call
fstl
decl
dec
aam
popa
aad
outsb
aam
out
fisttps
test
pushf
loopne
call
pmaxsw
or
aam
loope,pt
int
popf
int3
and
mov
lock
mov
lock
pop
loop
mov
fsubl
addl
nop
or
jnp
cmp
add
and
add
std
incl
jecxz
xchg
sub
or
leave
addl
or
mov
pushl
ret
mov
outsl
repnz
pop
mov
lods
insl
cmp
pop
pop
dec
movsl
pop
leave
call
lods
int
mov
imul
aaa
xchg
pop
sub
xor
gs
mov
xor
push
sub
adc
insl
cmp
js
lret
enter
std
dec
xor
mov
imul
mov
mov
lcall
repz
and
mov
mov
lods
fsub
test
lods
push
pop
loopne
pushl
add
sbb
push
mov
or
push
in
call
std
sbb
aam
movsb
pop
in
out
sub
lret
push
dec
loope
push
loope
cmp
adc
aam
lods
aam
dec
in
lret
into
loopne
jle
xchg
lods
je
leave
mov
sbb
cmpb
or
mov
adc
scas
js
or
lahf
mov
js
jns
or
test
inc
jle
mov
or
nop
add
mov
dec
and
incl
icebp
stos
lods
push
inc
adc
jno
mov
adc
mov
in
test
push
lods
or
cmp
sub
pop
sub
ficoms
inc
jmp
mov
aad
pop
test
and
adc
xor
mov
cmc
call
test
mov
mov
test
xchg
jb
cs
mov
mov
popf
jmp
jmp
jle
cmp
popa
fisttpll
leave
add
mov
lcall
push
pop
lcall
stos
inc
lahf
sbb
insl
roll
sbb
pop
mov
sbb
call
mov
bound
insl
imul
rorl
filds
clc
sbb
fdivrp
loopne
cmpsb
outsl
cli
cmp
sti
inc
clc
mov
stc
dec
fildll
dec
sbb
ljmp
loopne
pushf
inc
frstor
sahf
movsl
dec
aam
fdivl
xor
out
cmp
mov
add
add
pop
test
and
jg
mov
and
jo
sti
pop
in
sub
mov
inc
add
xor
shlb
pop
xor
inc
clc
js
pop
mull
cwtl
mov
sbb
and
je
dec
les
adc
jg
lock
insb
shlb
ja
fidivrl
pop
rcll
pop
and
imul
aaa
addl
test
sub
pop
icebp
icebp
add
femms
inc
clc
scas
jo
and
jo
mov
ljmp
lock
ret
enter
mov
insb
pushf
sbb
icebp
out
clc
mov
push
xorl
pop
lcall
dec
cltd
sub
pop
or
mov
cld
movsl
call
xor
ljmp
mov
rorl
cmp
out
fwait
xor
cmc
call
or
in
push
mov
push
pop
xchg
and
cmpsb
lahf
and
call
xlat
lahf
jo
cmp
cmpb
xor
cld
cli
adc
jno
les
jmp
movsb
lahf
adc
xor
out
adc
xor
sub
repnz
lock
jmp
pop
jne
into
cmpsl
dec
stos
out
jp
imul
inc
out
or
xor
enter
aaa
in
test
dec
imul
sahf
cmp
incl
repz
cmpsl
negl
pop
ret
dec
cmp
out
dec
xlat
xor
lret
mov
mov
in
iret
sub
icebp
movsl
dec
mov
test
arpl
lock
jp
incl
add
lock
rclb
jl
mov
std
adc
add
das
add
ret
popf
adc
xor
inc
adc
ljmp
ljmp
push
lea
js
lds
imul
push
orl
pop
push
add
push
add
dec
ds
push
fcomip
fcomip
and
sbb
pop
push
mov
ljmp
in
push
dec
xor
sub
push
ret
inc
xor
or
inc
cmp
xor
xchg
pushl
test
cmp
fs
test
shrb
and
or
push
mov
lea
ljmp
ljmp
aaa
rolb
or
or
inc
in
stos
cmpsb
stos
loop
sub
adc
mov
cmp
das
pop
stos
cs
jg
push
xor
sbb
or
call
addb
add
fimull
sar
fsubrl
insb
test
lret
int3
scas
call
scas
test
in
ljmp
rolb
sahf
sti
sub
or
aam
cmp
sub
ja
incl
pop
mov
ret
test
adc
push
neg
add
sub
std
orb
and
out
bound
jp
cmp
sbb
loope
or
xchg
pop
mov
into
add
mov
aam
lcall
hlt
sub
or
pop
mov
pop
pop
inc
fimull
lret
les
pop
enter
sbb
jmp
xor
ds
sahf
sahf
pop
mov
fbld
sbb
mov
cmp
sub
mov
xor
jnp
addb
clc
into
adc
and
rcr
and
and
nopl
jb
daa
addr16
es
push
and
sub
das
and
sub
lea
cmp
shrb
pop
cwtl
mov
jb
dec
popf
or
lods
lods
lcall
lods
mov
popf
and
incl
or
lods
scas
xorb
call
stos
sub
xchg
xor
or
cmp
cli
in
and
loope
out
adc
pop
rol
sub
cmc
fdivrp
pop
fwait
mov
call
insl
dec
repnz
jmp
jo
lds
in
adcl
or
adc
push
xor
scas
fs
ljmp
hlt
add
outsl
add
jnp
jmp
and
add
jg
mov
sbb
add
xor
lock
inc
hlt
lcall
or
ret
and
or
mov
ljmp
andb
loope
insl
mov
xchg
cld
popa
vmwrite
inc
push
mov
addl
jmp
mov
xor
or
sbb
fsubl
ljmp
insb
dec
add
xchg
jbe
mov
or
lcall
addl
mov
ljmp
mov
bound
fcmovbe
and
pusha
sub
mov
gs
and
inc
xchg
nop
jmp
mov
stc
insl
and
xchg
daa
cmp
cs
sbb
mov
outsb
jb
mov
std
xor
xchg
loopne
es
mov
test
dec
inc
ret
icebp
incl
push
sub
dec
es
dec
test
daa
push
or
rcrl
and
mov
cld
jg
loopne
xchg
dec
sarb
shlb
aas
fimull
jb
jecxz
clc
or
fbstp
sbb
cmp
loopne
jle
int3
cmp
sub
mov
inc
and
jo
test
lcall
push
mov
fdivl
cmpsb
aaa
jmp
push
outsb
sub
shrd
adc
push
orb
pop
pop
or
mov
pop
mov
add
in
push
nop
jmp
popa
fdivrs
jmp
out
adc
es
das
dec
in
add
dec
test
decl
cmc
in
inc
jno
adc
push
mov
xchg
int3
mov
cmp
adc
jmp
mov
ja
pop
xchg
pop
add
dec
jns
pop
cltd
shlb
insb
jl
rcrb
dec
mov
movsl
or
cld
or
mov
test
and
fcmovnu
notb
test
add
jmp
inc
test
test
fs
leave
sbb
loope
repz
movsb
jmp
or
xchg
movsb
into
and
lret
or
xchg
mov
gs
in
into
mov
cs
ljmp
cmpsb
lock
and
mov
and
add
sahf
lcall
push
add
inc
jae
cltd
stc
xor
fidivrs
fbld
pop
xchg
sub
cmpsb
sti
push
jmp
or
call
jns
xor
test
jecxz
popl
and
pop
mov
pusha
enter
lock
stos
pop
sub
xchg
cmpsb
adc
lods
cmpsl
pop
test
sarb
adc
call
pop
fcomip
dec
push
push
nop
shrl
xchg
xor
push
dec
push
sbb
jno
adc
jmp
xor
lock
dec
outsb
lds
dec
mov
push
mov
lock
pushl
aad
insb
pop
pop
push
add
rorb
add
ljmp
mov
or
cld
fadd
cmp
cmp
and
test
jg
incl
jno
mov
adc
add
fld
outsl
sbb
xchg
pushf
movsb
and
ja
jmp
clc
xor
cmp
xchg
mov
js
xchg
xchg
pushl
xchg
bound
jns
sub
data16
aas
sub
jmp
out
xlat
test
xchg
cmp
in
test
or
xlat
js
stos
pusha
shl
pop
xlat
clc
or
sub
xor
popa
rcrb
lock
ljmp
push
mov
mov
pop
jne
xchg
imul
lds
jg
fldt
loope
mov
mov
hlt
xchg
fwait
mov
pop
cmpsb
testl
push
mov
cmpsl
insl
insb
pop
adc
mov
mov
sahf
shlb
popa
lods
out
jo
addr16
popf
push
mov
decl
or
dec
jbe
jno
mov
lock
sbb
mov
jb
mov
clc
xor
ror
mov
ror
outsl
sub
stos
sar
in
mov
push
mov
je
sub
leave
addr16
nop
ret
inc
addb
pop
cld
mov
mov
jb
xchg
inc
push
icebp
mov
dec
test
xchg
and
pop
sub
xor
notl
jecxz
inc
cmp
iret
mov
xor
aaa
push
lods
inc
mov
cmp
mov
imul
fwait
insb
dec
mov
fisttps
jg
xor
xor
add
js
xor
add
cltd
test
inc
xor
adc
cmp
or
lea
call
stos
mov
push
xor
mov
out
test
ja
in
pop
and
fdivs
dec
pushl
add
sub
lea
pop
sbbb
lods
pop
std
mov
mov
mov
test
push
jnp
je
out
insb
lods
xor
inc
mov
std
jg
divl
mov
add
and
fildl
into
and
inc
ljmp
pop
cmp
stc
mov
xchg
dec
and
pop
loopne
mov
addl
lret
xor
or
stos
mov
xor
pop
and
sbb
pushf
sub
sbb
xchg
push
pop
adc
lcall
dec
std
pop
xchg
and
or
nop
nop
xchg
xorl
insb
jg
decl
xor
fistl
ss
mov
inc
mov
push
pushf
into
jmp
pop
mov
adc
lods
orl
mov
scas
xor
xchg
sbb
lods
aad
movsl
pop
add
sub
adc
call
jecxz
scas
mov
cmp
adc
sbb
xchg
test
cmpl
and
orb
mov
add
inc
adcb
cmp
jecxz
ret
mov
and
repnz
xchg
scas
jg
lock
cli
mov
pusha
cmpl
xor
call
fldcw
call
mov
mov
imul
mov
jbe
ljmp
mov
arpl
fstps
fcomp
mov
dec
subl
sti
movsl
xlat
repnz
lea
push
negb
dec
mov
mov
mov
lcall
adc
fwait
sub
cmp
movb
add
ret
jg
sbbb
pop
stc
sub
rclb
daa
cmpl
xor
adc
test
mov
and
cmpl
mov
inc
enter
xchg
pushf
cmp
lret
lcall
inc
shll
pusha
cmpsl
lret
ljmp
sub
rorb
push
and
mov
ret
xchg
mov
inc
out
les
cmpsl
idiv
xor
mov
cmp
aas
add
push
xor
add
lcall
mov
lock
lcall
ret
int3
or
sarb
inc
dec
and
add
loopne
or
dec
les
cmp
xor
enter
dec
xchg
ss
cmc
pop
bound
mov
clc
push
test
int3
les
subb
sbbl
sbb
sahf
xor
mov
call
imul
pop
xchg
leave
repnz
pop
hlt
mov
loope
push
clc
push
sbb
inc
mov
rcrb
pop
or
mov
cmp
cmp
pop
pop
xor
jg
hlt
fs
add
sti
orl
xchg
pop
add
inc
mov
or
push
push
cmp
incl
or
inc
dec
ret
fisubrl
xor
stos
jbe
into
filds
loop
adc
decl
iret
dec
xchg
inc
mov
inc
repz
imul
repnz
mov
repz
jg
or
mov
mov
popf
mov
stos
fmuls
push
leave
dec
lods
push
mov
or
sub
cld
or
faddl
pop
scas
sub
aaa
subb
jecxz
imul
pop
incl
lret
stos
leave
jecxz
xchg
xor
mov
or
mov
push
imull
push
dec
call
jb
mov
inc
jp
cmpsl
lret
lret
mov
stos
cmp
mov
jecxz
roll
ja
scas
je
inc
jns
jl
aaa
and
jle
aas
cltd
loop
dec
dec
lcall
dec
in
enter
pop
cmp
mov
int
mov
adc
mov
inc
repz
and
xchg
scas
push
mov
loopne
or
sbb
pop
cwtl
int3
mov
cmc
push
jo
inc
xchg
or
adc
in
mov
sar
lcall
scas
lock
cmp
mov
pop
popf
pop
adc
or
inc
std
dec
inc
andl
cmp
inc
pushf
cltd
xor
mov
mov
enter
xchg
jg
pushl
adc
and
arpl
add
ss
movsb
leave
jmp
mov
mov
jg
jle
mov
or
pushl
mov
ja
ret
je
ss
mov
popf
test
push
filds
inc
cmp
jecxz
and
sahf
push
push
mov
incl
ss
mov
mov
xchg
lret
jbe
jg
push
cmpsb
dec
and
jno
les
inc
cmpsl
pop
cmpl
pusha
call
cmpsb
push
xchg
dec
mov
cmp
mov
jmp
and
test
stos
shl
icebp
decl
mov
and
mov
mov
add
add
fbstp
cmp
or
dec
test
add
pushl
dec
and
inc
sbb
shrb
sub
sub
sbb
iret
fwait
mov
mov
sub
lds
sbb
dec
adc
mov
sub
in
mov
sub
movsl
into
inc
xchg
xor
mov
call
adc
mov
push
in
pushl
xor
jne
mov
lods
scas
fsubrl
mov
call
nop
pushf
inc
in
push
cmp
aad
and
add
pusha
call
test
lahf
or
mov
or
xchg
insb
cmp
xor
sti
inc
mov
dec
ret
and
hlt
sbb
mov
inc
xchg
iret
cmpsb
test
mov
xchg
inc
adc
incl
mov
jnp
addb
inc
inc
mov
rcll
ds
lret
fsubrl
fwait
cld
push
xlat
jp
mov
stos
xchg
xchg
scas
mov
dec
stos
fcmovu
je
adc
fiaddl
xor
mov
jmp
adc
xchg
add
scas
js
pop
clc
dec
add
and
call
pop
sub
xchg
arpl
movsl
adc
cltd
int
mov
cmp
fstpt
fistpll
push
out
sub
mov
xchg
xchg
imul
cmp
or
test
xchg
mov
and
push
mov
jb
test
ljmp
aad
cmc
shr
push
stc
and
mov
movsb
mov
mov
mov
dec
out
lods
push
cmpl
adc
dec
sbb
inc
pop
fwait
dec
ljmp
inc
mov
pop
xchg
push
cmc
arpl
outsl
std
lahf
adc
mov
xchg
fcos
lcall
insl
pop
lods
dec
insb
shlb
pop
dec
jnp
das
inc
mov
pop
xor
ds
xchg
adc
leave
dec
aaa
mov
sub
fnstenv
cmp
jmp
and
inc
push
lret
scas
sbb
rclb
jmp
dec
jecxz
fiadds
pusha
xchg
cs
decl
jnp
mov
mov
add
addl
pop
out
dec
jg
fs
mov
test
clc
push
mov
xchg
repnz
or
decl
shll
xchg
push
mov
lcall
cmp
mov
mov
pushf
movsb
cmp
pop
push
adc
mov
and
dec
pushf
outsl
cmp
decl
int
into
adc
cmp
xchg
mov
xor
sbb
incl
sbb
or
out
xor
pop
add
leave
pop
fcoms
push
les
mov
ja
stos
adc
jns
or
lods
icebp
mov
ljmp
ret
ret
test
faddl
cs
out
fidivrl
repz
rcr
jae
shl
push
jecxz
sub
jne
jg
mov
mov
mov
out
arpl
stos
daa
fs
inc
mov
incl
jle
fdivs
and
xchg
xor
lds
sbbl
call
push
int3
arpl
std
ret
dec
cli
cld
sbb
int3
adc
adc
jmp
sahf
mov
stos
stos
push
cmc
dec
xchg
lcall
in
clc
pop
pop
nop
in
mov
inc
js
push
push
xchg
or
cmp
test
add
cmp
pop
lcall
pop
xor
mov
std
mov
mov
or
pop
inc
dec
fcmovb
fimull
call
sbb
int3
test
mov
out
jmp
shlb
or
or
decl
xchg
aad
jb
lods
mov
jecxz
cmp
mov
xchg
mov
sub
jmp
xchg
lock
adc
pop
fwait
sub
jge
mov
cmp
cli
xor
bound
dec
xchg
arpl
jmp
jp
out
inc
or
dec
lods
mov
leave
idiv
decl
fcomp
ret
adc
scas
push
xchg
ret
xor
imul
mov
aad
rorl
popf
jmp
mov
cmp
cmp
out
out
ss
fcoml
decl
xor
sbb
add
mov
lcall
xchg
lds
mov
jmp
enter
test
mov
or
push
data16
ljmp
xchg
jl
xchg
and
ficompl
cmpsl
xchg
pusha
insl
mov
jno
pushw
pushl
ret
mov
sarl
mov
hlt
mov
push
lret
movsl
xchg
push
enter
out
insb
test
rcll
mov
clc
movsl
mov
aad
xor
mov
mov
push
outsl
mov
rorb
loopne
sub
call
pop
lret
push
imul
jg
mov
mov
pop
adcl
mov
pop
inc
jb
in
sahf
mov
ljmp
jne
rcl
or
jmp
clc
fwait
push
pop
cs
les
sarl
sbb
ficomps
es
test
sbb
pop
in
loopne
dec
decl
pushl
js
pop
pop
mov
es
stc
in
xor
movb
pop
es
icebp
xor
bound
faddl
pop
add
push
ja
incl
cmpsb
jno
lock
pop
mov
xchg
sbb
aas
mov
cltd
add
sbb
adc
sbb
xchg
pop
fs
sar
js
fiadds
inc
clc
iret
out
int
into
and
popf
fiaddl
data16
and
sub
adc
decl
mov
pushf
rcrl
ljmp
data16
or
push
aaa
sbb
clc
or
out
push
or
fiadds
push
dec
mov
insb
push
popa
aad
enter
lea
call
into
mov
and
js
lret
sub
das
push
outsl
fldenv
lret
pop
test
das
pop
cltd
mov
cmp
filds
decb
mov
jae
pop
push
jg
dec
pop
cmc
incl
cld
pushl
mov
push
clc
cwtl
xchg
lcall
add
pop
in
xlat
mov
mov
pushl
jmp
mov
fists
or
sbb
jecxz
cmp
adc
or
fbld
ljmp
stos
push
daa
gs
or
and
ret
not
pop
ja
mov
sbb
ja
jg
sbb
dec
aad
mov
in
mov
das
bound
ljmp
int3
fistps
orl
inc
roll
inc
inc
std
inc
test
push
incb
enter
pop
mov
xchg
fcomip
incl
jb
sub
inc
insl
pop
mov
int3
or
ljmp
leave
and
les
or
mov
mov
mov
mov
pop
cmp
jg
popa
xchg
inc
pop
push
incl
push
sbb
sub
loopne
orb
xchg
aas
movsb
dec
add
in
cmp
pop
aas
xchg
loope
jmp
add
push
adc
inc
sub
pop
push
mov
jmp
mov
mov
push
insl
lret
adc
mov
test
mov
lcall
mov
movsb
push
daa
push
les
adc
inc
mov
pop
mov
call
inc
mov
dec
js
cs
sbbb
gs
sub
decl
sub
push
test
ret
mov
xchg
das
inc
cli
pop
xchg
sub
popa
jge
icebp
and
cmp
call
adc
lods
inc
ret
mov
jne
mov
dec
xor
call
push
jnp
outsl
loopne
adc
imul
out
pop
incl
cmc
inc
mov
push
fsubrl
jns
imul
mov
call
popf
pop
lea
xchg
adc
mov
insl
shlb
jnp
ljmp
incl
sarl
sub
or
mov
push
enter
mov
loope
jg
aam
inc
inc
mov
jmp
mov
add
or
stos
enter
ret
add
mov
jl
add
inc
sbb
mov
or
incl
aas
inc
sbb
addl
xchg
add
in
into
call
cmp
ljmp
movsl
xchg
popa
xchg
dec
divb
xchg
dec
jg
ljmp
fs
jns
push
push
rorl
inc
rcl
out
jp
add
inc
push
inc
outsl
dec
hlt
inc
push
mov
movsl
sub
sbb
test
ss
rcrb
movsl
push
arpl
inc
xchg
lcall
xor
add
lds
jnp
ss
stos
bound
sbb
decl
or
dec
mov
adc
push
js
data16
or
pop
movsl
dec
test
call
adc
xor
data16
adc
jge
fcoms
add
ljmp
adc
sbb
mov
or
jo
test
scas
sbb
inc
lret
jb
cmp
hlt
lcall
mov
xchg
or
lock
movsl
stos
cmpb
lods
push
js
mov
ljmp
in
sub
mov
mov
xchg
push
cs
decl
xlat
pop
jg
cs
subl
fs
inc
test
sbb
decl
and
xchg
neg
mov
das
scas
out
mov
int
inc
jns
test
add
lcall
orb
push
pop
pop
jo
xchg
push
xchg
ret
mov
arpl
ret
ljmp
fs
xor
cmp
outsb
push
insl
mov
jae
int
call
bound
ret
push
mov
pop
cmpsl
sbb
push
adc
inc
movsl
push
pop
jl
je
lahf
dec
ljmp
mov
inc
push
push
adcb
cmpsb
push
pop
jmp
aad
data16
ljmp
call
sub
jp
pop
pop
ror
cmp
ljmp
in
mov
pop
mov
aad
nop
cmp
jecxz
pop
test
nop
push
mov
push
lcall
jle
loope
pop
lret
pop
mov
lret
js
mov
int
pushf
outsl
aam
addr16
pop
cmp
das
mov
je
cld
repz
and
movsb
add
ljmp
mov
inc
mov
jl
fwait
pop
jnp
cwtl
cmp
sbb
jg
push
xor
scas
inc
arpl
add
adc
dec
mov
jl
movsb
and
or
sbb
ljmp
cltd
sbb
ljmp
pusha
sub
vmread
mov
push
jno
dec
push
and
flds
mov
sbb
pop
jl
lds
pop
jno
cmp
mov
outsb
stc
es
decl
jne
inc
out
mov
push
jl
shll
cmp
daa
lods
jmp
out
arpl
sub
and
lahf
or
mov
adc
call
adc
mov
pop
sbb
cmp
daa
shlb
jmp
jnp
sbb
stc
fstpl
repz
out
lds
xor
xor
pusha
sbb
js
mov
call
cld
adc
push
push
punpckhbw
mov
leave
lods
aas
adc
inc
mov
sbb
arpl
les
cltd
ret
leave
mov
inc
out
imul
in
cmp
imul
icebp
je
pop
fbld
add
shll
aas
mov
pop
sub
andb
sub
sbb
out
jmp
jb
cmp
xchg
iret
inc
les
adc
dec
inc
inc
pop
xchg
call
lcall
mov
adc
ljmp
fbld
inc
insb
inc
dec
lcall
push
aam
dec
dec
sbb
movsb
dec
lds
mov
pop
ffreep
mov
pushl
leave
les
cmpsl
movsb
ljmp
rorb
and
cltd
cld
test
mov
pop
aam
cld
add
jmp
lcall
lds
mov
lret
or
push
and
enter
jns
mov
call
cmpsl
cmp
xchg
lret
mov
push
sub
insl
sub
ljmp
or
data16
sbb
adc
inc
pop
dec
jno
lcall
daa
or
stc
push
pop
sbb
in
xchg
stc
int
jle
dec
add
cmpsb
cmp
pop
pop
pop
imul
push
mov
fistpl
jbe
pop
ja
dec
testb
rclb
jns
pushf
mov
test
subl
sbb
call
sub
ret
outsl
clc
mov
sbb
and
movsl
sub
popa
mov
xchg
adc
cmp
incl
test
test
fcmovnbe
jle
rcrl
lret
and
call
insb
cmpsl
mov
sbb
lahf
and
ret
and
jne
popa
jecxz
data16
decl
mov
push
dec
jae
lret
daa
in
call
mov
mov
jne
inc
loop
jg
sti
stos
jae
aad
int3
cmp
push
pop
ftst
icebp
or
pop
imul
aaa
jl
fstpl
jne
dec
mov
rdtsc
movsl
enter
aam
ret
pop
imul
sbb
pushf
or
test
jb
pop
mov
into
repnz
jl
nop
inc
ret
lea
dec
mov
cltd
rol
ret
sbb
int3
loopne
imulb
pushf
mov
in
lcall
aas
jle
inc
mov
int3
pushf
mov
out
shlb
pusha
mov
push
xor
dec
fdivrl
lock
decl
sub
cmp
sbb
xchg
daa
lret
in
dec
push
mov
decl
adc
xor
and
mov
insl
test
mov
dec
cmpsl
and
xchg
and
mov
or
cmc
in
popa
adc
sbb
push
add
mov
jg
addb
jo
pop
sbb
rcrl
lea
ja
xchg
dec
and
ret
in
dec
rcll
in
pop
cmp
es
jo
enter
sub
cmc
dec
out
lds
dec
push
inc
jl
aam
aad
lods
stos
in
mov
mov
lds
cwtl
mov
jle
push
scas
inc
icebp
repz
sarl
out
or
cmc
dec
xchg
int
sbbl
mov
test
xchg
mov
int3
mov
dec
sahf
clc
loop
mov
lret
cld
lcall
mov
or
jmp
repz
fsubs
pusha
ljmp
cmp
and
dec
jg
mov
dec
mov
xchg
decl
xchg
cmpsb
nop
sub
mov
mov
sbb
xchg
stc
repz
mov
rcrl
idiv
pop
icebp
fcmove
pop
cmp
call
insl
pusha
add
push
mov
jbe
xchg
in
andb
mov
outsb
jne
xchg
cltd
mov
or
push
and
push
dec
jae
cmp
add
imul
push
xchg
xor
jmp
sbb
mov
mov
push
in
test
mov
cmp
mov
pop
jle
mov
lods
jmp
mov
test
dec
gs
xchg
push
fnstsw
mov
or
inc
xor
call
notb
sahf
jnp
loopne
sub
cmp
inc
add
ljmp
jo
fdivr
sub
ss
xor
rorb
adc
jecxz
inc
ret
jg
mov
mov
ja
xchg
jl
ljmp
clc
lret
push
pop
movsb
mov
aad
fnsave
movl
clc
or
xchg
sub
int
or
mov
xchg
stos
add
fstpt
push
loopne
aam
mov
cmp
jmp
clc
loopne
mov
dec
xchg
adc
pop
pushf
sub
ror
fidivrs
mov
and
inc
enter
or
adc
decl
mov
mov
add
inc
dec
push
lock
shrb
mov
jmp
xchg
pop
test
pop
hlt
imul
mov
stc
sahf
call
popa
pop
mov
cmp
and
push
cmpsl
int
pop
mov
imul
xor
ljmp
imul
aam
mov
add
cli
enter
shll
pushf
std
cmc
mov
inc
add
inc
aam
icebp
or
shlb
add
sar
pushl
sub
mov
lea
adc
inc
push
loop
insl
lcall
add
in
xchg
jne
rorb
ljmp
mov
dec
rolb
xchg
test
dec
in
pusha
cmp
dec
sbb
pop
sub
lcall
add
push
pop
mov
ljmp
clc
inc
push
add
in
jecxz
push
mov
mov
fdivr
decl
in
roll
and
sahf
inc
or
out
push
test
stos
ss
pop
test
adc
aad
sub
jg
xchg
in
xchg
cmp
sub
push
dec
scas
add
in
dec
mov
andb
arpl
mov
pusha
mov
pop
jmp
sbb
mov
jno
popf
in
add
and
cld
ret
jb
inc
into
loope
call
out
sahf
movsl
add
inc
rcll
add
push
pushf
imul
das
out
incl
or
mov
push
movsl
icebp
xchg
push
int3
cmp
test
dec
push
lcall
inc
push
test
push
mov
and
mov
pop
mov
cmp
adc
sahf
cmp
jmp
cmp
pusha
adc
and
add
cmp
lea
dec
mov
add
movsl
data16
pop
call
pop
les
inc
jecxz
pop
in
add
add
push
out
pusha
cwtl
call
dec
pop
fs
movsl
jg
push
mov
jmp
loope
rorl
push
push
sub
sbb
xchg
insb
cld
lcall
fstpl
cmp
mov
rolb
jg
and
push
mov
inc
xchg
fsts
jns
pop
push
enter
arpl
movsb
xchg
lahf
insl
sar
add
ljmp
cltd
add
push
insb
loopne
ret
push
in
adc
sbb
or
insb
rcll
cmpsb
inc
rclb
fildll
add
loopne
xchg
mov
jno
rcrl
das
outsb
and
gs
inc
hlt
incl
fisubl
pushf
xchg
push
jae
xor
mov
ljmp
gs
sub
sbb
lock
dec
inc
xlat
or
mov
jmp
imul
int
jp
psubw
aam
xchg
mov
loop
push
dec
pop
call
rcrb
js
dec
in
test
fsubrs
and
ret
imul
shlb
jg
cmp
out
pop
cwtl
outsb
cwtl
mov
and
outsl
es
je
xchg
inc
loope
and
ljmp
in
insb
adc
mov
repz
dec
adc
pop
shlb
jne
movsb
ljmp
sbb
leave
addr16
outsb
dec
das
or
shrl
and
mov
lcall
addb
xorb
inc
lods
cmp
incl
cmp
push
add
shll
adcl
push
xchg
or
loop
fs
push
test
inc
mov
push
mov
mov
cmp
mov
sarb
sbb
xchg
mov
or
fidivl
outsb
jmp
insl
push
stos
jno
stos
jge
lods
in
pop
or
lock
push
mov
inc
addr16
push
adc
call
loope
dec
test
lock
push
inc
aam
lret
add
add
out
mov
jno
inc
mov
fwait
or
mov
orb
lahf
cmp
pop
pop
lcall
insb
add
scas
loopne
les
icebp
pop
inc
in
push
dec
and
ret
std
pushl
in
jmp
lock
xchg
divb
negl
pop
pop
cmp
in
push
imul
mov
sbb
mov
fidivrs
xor
mov
and
hlt
bound
jge
aam
mov
stos
pop
xor
clc
jmp
mov
lods
imul
xchg
xor
adc
call
xor
pop
xlat
or
mov
mov
push
mov
cmpsb
mov
and
int
into
imul
ljmp
and
xor
pushf
jl
fnstsw
lcall
pushf
iret
push
les
popa
ret
call
fcomps
cwtl
adc
mov
pop
in
lret
push
mov
adc
jmp
hlt
into
sub
test
lahf
ljmp
cld
pop
pop
cmp
idiv
ljmp
lock
sbb
leave
movsb
rcl
pop
cmc
pop
pop
jge
mov
sahf
repnz
push
mov
insb
push
sub
adc
xchg
mov
xchg
sbb
xchg
call
cmp
push
mov
mov
ljmp
cli
das
cld
mov
or
mov
mov
add
push
mov
out
and
fiadds
mov
scas
sbb
pop
test
int3
mov
pushf
mov
jbe
push
incb
dec
mov
push
xchg
popa
sbb
jmp
and
cmp
into
adc
cmp
lods
cmc
push
in
lcall
adc
pop
mov
call
dec
lock
hlt
dec
fists
dec
cld
xchg
out
ljmp
inc
push
sbb
xchg
push
in
adc
out
cli
repnz
outsb
jbe
mov
and
and
insb
popa
in
decl
ljmp
jmp
sbb
sub
jno
mov
mov
dec
nop
xlat
ljmp
jne
push
jp
sbb
sbb
mov
or
xchg
fisttpll
data16
fcmovnu
jg
cmpsl
xorb
mov
add
sub
fldcw
fs
cld
or
cli
call
aaa
es
popf
js
ret
dec
hlt
push
js
pop
xor
add
jmp
std
ljmp
xor
adc
cmc
decl
fbstp
xor
xor
inc
shll
sub
pop
incl
es
out
in
xor
pusha
or
adc
xchg
scas
int
dec
leave
cmp
cmp
stos
cmp
xchg
adc
decl
loope
repnz
mov
loop
pop
adc
add
mov
mov
dec
stos
fwait
out
fs
scas
cwtl
out
cmpsl
sub
lret
cmpsl
cmpsb
mov
div
sahf
cmc
pop
adc
xorb
decl
cmp
inc
push
mov
insb
out
jns
mov
test
xor
repnz
repnz
push
ljmp
ja
movsb
inc
dec
pop
xchg
int
push
int3
scas
mov
fnstenv
ljmp
rclb
loopne
test
jno
push
jo
adc
push
mov
pushl
ret
cmp
mov
stos
lahf
push
pop
or
imul
push
ja
das
lcall
xorl
sub
jae
xor
jecxz
lods
pusha
ja
outsb
inc
icebp
test
popa
inc
xlat
cwtl
incl
insb
mov
mov
adc
adc
add
cmp
sub
cmp
int
mov
lods
sub
scas
sbb
sar
ljmp
daa
fsubs
fwait
cwtl
scas
adc
and
mov
in
xchg
jg
jmp
sbb
out
fsubrp
adc
dec
sub
inc
bound
sub
pop
cmc
dec
push
in
repz
and
pop
and
daa
mov
pop
cld
push
and
push
sbb
repnz
lcall
mov
les
lret
mov
inc
dec
pop
jb
into
daa
and
cltd
movsl
incl
mov
sar
inc
insl
push
iret
dec
jbe
ja
push
push
jns
outsl
pushf
xchg
xor
ss
xchg
pop
loopne
push
push
sub
cs
xchg
or
call
jb
movsl
cmp
dec
insb
enter
inc
vmulps
mov
xor
loop
xor
std
jns
pop
xchg
push
xchg
mov
add
fcomps
xchg
xor
cs
add
jbe
mov
adc
mov
add
and
or
mov
push
es
mov
pop
lods
incl
clc
pop
movsb
jb
sbb
push
repnz
scas
mov
mov
and
jle
cmc
aad
hlt
repz
push
jl
adc
out
lods
mov
lcall
es
jno
cli
jno
out
add
in
pop
sti
into
jmp
fdivl
enter
pushl
fsts
scas
sahf
inc
fistl
jge
loopne
adc
enter
lret
cltd
and
mov
repz
sub
xor
insb
mov
mov
cmpsl
jnp
ljmp
inc
enter
pop
push
and
xchg
mov
jg
inc
inc
repz
loop
test
jmp
xor
mov
nop
mov
push
xchg
fprem
mov
aaa
fwait
inc
repz
ficoms
add
dec
lea
xor
fdivrl
cmpb
dec
mov
dec
sbb
call
rcrl
clc
fs
adcb
in
inc
aad
imul
decl
outsb
mov
mov
xchg
test
push
shlb
sbb
pop
je
repnz
incl
movsb
pop
movsl
lret
icebp
sbb
xor
inc
das
mov
insb
push
dec
cwtl
mov
xor
ljmp
dec
jb
cli
push
add
gs
daa
cmpsl
adc
movsb
lahf
sub
push
mov
decl
cmc
xor
mov
jb
jp
dec
jo
mov
jnp
insl
sahf
ret
inc
add
fucomip
mov
xchg
cmpl
popf
cli
mov
sar
jmp
call
jecxz
jae
pop
add
xor
mov
add
lcall
adc
mov
out
mov
sbb
cmp
lea
popl
js
test
pop
addl
cmp
xchg
sbb
sbb
outsl
inc
outsb
mov
out
out
xor
in
xor
jmp
lock
mov
fbstp
pop
lock
push
out
mov
cmp
js
inc
jle
adc
incl
cld
mov
icebp
out
sub
adc
les
pop
leave
xor
mov
call
fldenv
aaa
cs
sub
sub
sbb
das
jne
sub
ljmp
lock
sbb
loop
add
cli
inc
mov
imull
fadd
loope
incl
xchg
adc
jge
enter
inc
aas
inc
or
mov
dec
out
dec
int
pop
push
jge
jecxz
adc
mov
in
ljmp
mov
inc
dec
pushl
cmp
xor
addb
push
push
mov
or
loope
fs
inc
mov
call
mov
decl
push
xchg
push
dec
shlb
adc
gs
nop
andnps
mov
and
jl
ljmp
sub
aad
xor
rcrb
call
loopne
cmp
inc
push
add
mov
dec
mov
stc
push
mov
pop
arpl
or
and
outsb
push
scas
inc
cli
xchg
stos
pop
stos
dec
lcall
jne
or
mov
cmc
mov
push
dec
xchg
and
xor
sub
xor
jmp
lcall
pop
inc
jl
js
mov
dec
mov
cmp
ljmp
xchg
pop
sub
sbb
out
xlat
mov
es
sbb
aaa
sti
push
rcrb
sbb
jb
xor
jmp
pop
pop
pop
cli
je
call
jns
out
push
imul
repnz
ja
repnz
xchg
mov
dec
jecxz
lea
cmp
lahf
mov
clc
mov
xor
js
test
xchg
ljmp
dec
adc
add
jl
ret
jl
add
das
sbb
ret
or
push
cmp
jg
inc
adc
jo
xor
lds
push
cmp
push
sbb
xchg
sbb
sti
decl
orl
push
push
push
es
inc
fsubs
xor
lret
jg
test
mov
subl
pop
loope
xchg
adc
jae
movsb
dec
mov
mov
dec
add
nop
pop
push
and
mov
int3
push
sub
mov
xchg
call
ljmp
hlt
stos
inc
icebp
jb
sub
mov
bound
in
dec
mov
mov
mov
jmp
aaa
pop
fcomi
sub
leave
clc
push
stos
rol
shr
scas
mov
movsl
cmp
fcmovnu
add
scas
cmp
mov
lock
int3
pushl
lcall
insl
mov
xor
push
jecxz
pop
cld
clc
add
aaa
pop
mov
fs
dec
mov
cmp
cmpsb
sbb
arpl
in
mov
cmp
shl
mov
mov
fucomip
mov
mov
pop
sti
cmpsb
test
pop
sahf
arpl
mov
inc
inc
push
xor
and
mov
mov
sbb
xor
or
pop
inc
xor
sub
ret
nop
dec
xor
arpl
sub
test
sbb
call
repnz
sub
mov
cmp
mov
adc
and
call
test
cmp
inc
stos
sub
stos
imul
mov
ret
dec
dec
movsb
pusha
inc
push
mov
test
lcall
pop
movsb
iret
inc
adc
push
mov
rclb
outsb
fwait
sbb
lcall
in
mov
sbb
push
push
orb
mov
sub
xor
push
aas
mov
xor
sar
ljmp
mov
por
dec
mov
mov
mov
xor
jg
push
pop
fsts
dec
mov
aaa
hlt
enter
inc
test
jbe
jne
sub
out
out
in
pop
call
int
mov
fucomp
lods
sti
scas
lcall
mov
push
cmp
cmp
xchg
add
jmp
xor
cmp
idiv
bsf
aas
add
movsl
xor
add
or
out
xchg
in
inc
and
mov
adc
inc
sbb
xorl
shrl
push
mov
shl
inc
movsb
mov
insb
subl
ficompl
cwtl
cmpsl
mov
loopne
jo
call
cld
pushl
imul
mov
rorl
mov
pushl
jmp
call
andl
and
mov
or
scas
mov
add
push
add
loopne
cmp
sbb
incb
jg
xor
dec
dec
outsb
cmc
mov
and
pop
mov
mov
sub
jmp
push
es
sub
xchg
xchg
dec
in
sub
jns
dec
jmp
xchg
cmp
lods
cmpsb
jle
mov
mov
lcall
jbe
clc
icebp
inc
ss
dec
jl
aaa
das
jns
jmp
popf
hlt
in
nop
mov
cmp
ljmp
test
je
xor
fsubp
dec
repz
cmp
mov
xor
jl
sbb
jnp
cmpsl
lods
cld
inc
int3
jle
bound
push
ja
incl
cmp
aas
cmp
aas
or
test
adc
or
jae
sub
lea
pause
in
mov
push
inc
jg
inc
sbb
lret
sahf
lret
pushl
loope
jo
shrl
xchg
lahf
mov
enter
mov
jp
cwtl
pop
push
xchg
movsl
adc
inc
pushf
dec
lcall
adc
adc
and
sub
sub
jnp
fcompl
push
ljmp
add
repnz
and
lds
mov
in
mov
shr
in
jns
lds
test
into
add
call
and
das
xor
fcmovnu
dec
mov
shrb
xor
insl
fwait
or
and
lcall
mov
adc
cmp
sub
xchg
imull
mov
decl
ss
lods
pop
jne
out
pushf
stos
pop
in
dec
sub
das
cli
lcall
out
inc
cmp
popa
and
jbe,pn
mov
push
gs
cwtl
jmp
lcall
sub
xlat
mov
imul
push
sar
sahf
out
xchg
scas
jg
mov
addr16
in
movsb
aam
stos
mov
in
loope
inc
roll
scas
xor
jg
mov
or
mov
shlb
clc
ljmp
sahf
rol
adc
fcompl
enter
jbe
movsl
jne
push
and
sbb
dec
add
cmpsl
cmp
addr16
scas
cwtl
les
shl
dec
adc
pop
xchg
push
jnp
cs
nop
mov
movsb
rorl
xor
sub
incl
mov
mov
cmp
and
mov
sbb
shrb
xor
pop
xor
push
in
xchg
vmovntps
pop
lret
jmp
popa
imul
mov
frstor
into
repz
daa
fdivrs
cmp
jae
ficomps
push
pop
mov
insb
lock
pop
or
ja
pushl
sub
pop
nop
xor
mov
call
add
pushl
nop
push
je
fists
in
add
xchg
lea
test
mov
rcr
pushf
mov
sbb
jmp
dec
jl
xor
stos
or
ss
push
add
call
inc
sub
cmp
insb
aaa
int3
loopne
cmp
hlt
xor
loop
cmp
movsb
jbe
cmp
imul
roll
arpl
sbb
cld
inc
mov
sub
xor
mov
or
sub
jmp
sbb
popf
lods
push
sub
push
std
dec
push
test
fadd
pop
test
cmpsb
push
xchg
xorb
and
pushl
jbe
scas
cltd
iret
jns
arpl
hlt
adc
pop
push
jmp
xchg
and
popf
push
shl
leave
incl
call
xchg
leave
add
stc
push
mov
adcl
sar
pushl
dec
scas
mov
jge
pop
int
push
xchg
mov
sbb
test
incl
pop
imul
aaa
add
mov
addr16
cmp
iret
push
push
scas
decl
inc
daa
lcall
outsl
jg
ret
lea
mov
addr16
dec
pop
sub
ljmp
jmp
xchg
mov
adc
dec
mov
mov
xchg
inc
dec
jmp
or
fucomp
fists
pushl
orl
cmpsl
pop
mov
int3
adc
sbb
aam
or
test
jbe
mov
or
mov
push
mov
dec
movsl
dec
inc
or
gs
test
dec
xchg
jnp
in
pop
pop
cld
pushl
ret
stos
pop
icebp
dec
jmp
cmpsb
ja
call
mov
loope
call
mov
xlat
fsubl
mulb
xchg
popa
sarl
std
jp
cmp
hlt
cmpl
push
lea
das
sub
push
jge
mov
aas
jae
dec
ljmp
in
xchg
mov
decl
push
pop
xor
push
or
bswap
aas
repz
jl
mov
rclb
ja
clc
jmp
aam
inc
mov
and
mov
jmp
inc
xchg
mov
int
xor
or
sub
jmp
dec
jo
dec
in
jno
stos
popf
push
sub
cs
fnstcw
inc
cmpsb
mov
test
pop
dec
cmpsb
mov
ljmp
dec
inc
aam
gs
mov
dec
call
or
push
mov
mov
xlat
push
cmpsl
push
addr16
or
mov
mov
jmp
mov
sub
sub
inc
inc
cs
jge
inc
jge
insl
loope
gs
nop
and
ljmp
jp
scas
repnz
scas
add
cmp
lods
lods
mov
scas
add
xchg
cmp
inc
ljmp
jge
inc
stc
xchg
scas
les
arpl
popw
inc
cmp
jecxz
lcall
bound
out
adc
add
push
fwait
enter
in
in
in
push
out
inc
pusha
inc
inc
pop
ljmp
mov
push
jnp
lahf
push
mov
loopne
jle
and
scas
add
imul
popf
incl
mov
sub
jle
lahf
push
mov
xor
adc
mov
ljmp
dec
sahf
fisubs
pop
dec
push
aam
mov
mov
test
sbb
sarb
decb
addr16
mov
and
stos
mov
int3
icebp
mov
sub
cs
sar
ljmp
loop
add
inc
mov
rcr
stos
add
jno
cmpsb
stos
mov
into
mov
fmull
pop
sbb
fsubs
xor
mov
ja
int
out
lods
jbe
enter
in
sti
call
jns
mov
jmp
push
leave
mov
pop
mov
ja
add
int3
mov
int3
jecxz
addb
dec
sub
dec
jecxz
dec
sub
adc
jle
adc
inc
sbb
arpl
jmp
in
push
cmp
push
sub
and
imul
adc
das
mov
icebp
incl
bound
pop
test
je
mov
call
jecxz
mov
lea
repnz
out
pop
inc
loopne
cs
decl
mov
xchg
insb
lea
std
ljmp
xchg
aad
cmpb
and
das
cmpsb
jo
movsb
rorb
test
add
call
mov
mov
and
loop
mov
cs
dec
push
inc
mov
testb
add
fs
sub
sbb
push
or
push
push
xor
daa
sub
call
stos
and
dec
lods
mov
cmp
ja
ljmp
fucomip
pop
lret
iret
push
cmp
jl
cmp
and
xchg
jns
cmp
outsb
cmp
clc
cli
shlb
outsl
pmaddwd
popa
data16
dec
insb
adc
add
jmp
jecxz
out
jg
dec
jecxz
addr16
sub
sub
xor
icebp
ljmp
andb
sub
jp
pushf
je
or
std
je
mov
scas
push
xchg
push
mov
and
call
mov
inc
add
cmp
push
mov
ljmp
mov
or
call
movsb
aaa
lods
movsb
ficoms
cmc
in
out
xor
movsb
call
sbb
mov
sbb
out
and
decl
lock
xchg
int
jb
sub
les
dec
fs
mov
or
cmp
xor
sub
aaa
mov
xchg
mov
testb
scas
push
negb
fidivs
xor
dec
and
xchg
sarb
loope
xchg
mov
mov
pushl
and
testb
pushf
lods
pusha
xchg
imul
cmpsb
jmp
xor
adc
stc
inc
outsb
fnsave
xor
mov
or
decl
jmp
mov
or
push
cmp
paddw
hlt
loopne
mov
and
jp
lock
incb
jle
test
dec
test
subb
inc
loopne
dec
in
sub
out
icebp
aad
adc
dec
mov
fbld
push
sbb
mov
or
sub
dec
cmpsl
push
lods
in
daa
ret
add
imul
imul
mov
or
in
xchg
mov
ljmp
nop
je
mov
or
jg
mov
inc
push
jb
jb
dec
jb
call
dec
loop
jge
mov
ret
outsb
enter
inc
incl
xor
add
lods
movsl
cmp
adc
lods
mov
dec
fbld
or
decl
lock
test
pop
inc
cmp
dec
mov
xchg
dec
cmp
or
jg
jmp
arpl
inc
mov
inc
daa
mov
xchg
xor
jge
push
adc
leave
daa
jg
call
imul
mov
inc
push
dec
push
cmpsb
inc
enter
ljmp
rorl
mov
xchg
mov
dec
and
or
lcall
inc
xchg
or
icebp
add
gs
dec
nop
shrl
loope
pop
sub
dec
mov
mov
decl
push
xchg
lea
adc
movsb
rolb
imul
hlt
ljmp
xchg
dec
add
adc
cli
sub
adc
xor
sub
pushl
enter
sbb
cs
add
mov
stos
cmpsb
ret
push
je
es
jg
xchg
and
push
dec
jns
pop
pop
daa
hlt
mov
or
sub
loopne
enter
jmp
loopne
and
dec
or
dec
cmp
push
lods
js
das
push
xchg
aaa
and
cmc
and
jmp
jle
out
es
repnz
xor
xchg
jbe
and
sti
ds
int
test
pop
push
pop
cmovb
adc
sub
xlat
out
cmpsl
ds
popa
lret
mov
repnz
mov
test
adc
add
push
in
shl
outsl
push
out
sub
pusha
or
sub
inc
nop
jo
pop
aam
pop
xlat
add
mov
loop
push
std
ljmp
insl
ret
out
push
push
cwtl
sbb
sbb
inc
push
cmp
outsl
inc
adc
ja
xchg
ret
divb
enter
cs
lods
adc
xlat
es
call
icebp
add
push
sbb
mov
jl
add
mov
xor
push
mov
add
out
aaa
dec
fnstenv
jl
mov
add
das
xor
into
sub
mov
cmp
push
cmp
incl
pushf
ja
out
ss
sbb
decl
arpl
stos
mov
jo
ljmp
dec
ds
sub
out
and
out
jle
push
gs
stos
jle
jno
xor
sti
dec
lret
into
das
sar
clc
xlat
sub
leave
dec
data16
sbb
mov
pop
inc
xchg
sub
in
push
fs
orb
push
lcall
lea
mov
lods
cmc
es
push
mov
sub
mov
ljmp
push
js
insb
xor
xchg
rcll
out
sbbl
pushf
xor
incl
pop
sub
cs
dec
xchg
jb
xchg
hlt
sub
jmp
arpl
ss
mov
dec
jb
out
lock
mov
push
shlb
jb
jo
dec
pop
or
aaa
nop
in
lds
stos
cmp
lcall
inc
or
xchg
cmp
pop
fadds
mov
movsb
jg
xchg
xor
jmp
cmp
in
xor
xor
adcb
inc
jle
data16
clc
repz
dec
mov
push
movsl
aas
shrl
mov
dec
js
test
repz
stos
pop
cmc
data16
mov
push
inc
sub
ljmp
mov
lahf
dec
sub
testb
xchg
and
daa
popa
std
mov
mov
xor
or
mov
xchg
or
xor
xchg
jno
aas
lods
push
into
notb
dec
jno
cli
dec
jmp
outsl
mov
loop
mov
xor
mov
shl
repnz
pop
clc
pushl
inc
mov
fld1
mov
call
ja
cltd
lods
jns
jo
push
jne
jecxz
pop
mov
negb
aam
dec
mov
pop
mov
int
jp
inc
cmp
nop
leave
arpl
xchg
pop
sbb
movhps
mov
test
lods
adc
jg
mov
adc
adc
arpl
push
dec
les
test
jbe
inc
dec
xchg
push
scas
sarl
insl
orl
jmp
stos
sub
out
jbe
outsb
push
or
ret
aam
jg
add
sti
push
ljmp
sahf
mov
sub
mov
cmp
lea
in
mov
sbb
jl
pop
adcb
fildll
sbb
adc
sub
call
dec
fsubrs
je
jo
cmp
cmp
out
mov
pop
fcmovnb
bound
fmuls
and
incl
dec
fmull
mov
ljmp
in
sub
dec
mov
cwtl
push
arpl
es
xlat
and
stos
mov
mov
ljmp
mov
aam
jne
jnp
cwtl
pop
loop
mov
jne
mov
push
cmp
or
cmp
data16
and
loop
jbe
test
mov
cld
ljmp
inc
es
cltd
sub
es
in
mov
incl
push
mov
xor
sbb
stos
arpl
test
mov
jmp
outsb
lods
dec
rolb
xchg
pop
js
pop
cltd
xorb
rorb
stos
loope
mov
mov
test
jp
dec
cwtl
mov
xchg
inc
sub
test
outsl
dec
incl
dec
push
push
movsl
xchg
push
pop
insl
jo
pop
xchg
scas
jno
add
imul
ljmp
push
sub
mov
xchg
insl
sahf
pop
mov
icebp
mov
push
sub
inc
push
mov
fwait
ret
aam
and
jb
add
xor
mov
cmp
imul
inc
jg
jne
mov
xchg
enter
and
in
dec
cmp
popa
jns
ret
gs
incl
leave
pop
jecxz
pop
outsb
xor
aaa
addr16
inc
and
jg
jmp
xor
sub
test
int3
movsb
cltd
hlt
jae
lret
in
adc
xchg
lcall
adc
sbb
push
lahf
scas
cmpl
or
pop
pop
ficoml
orl
xchg
test
outsb
jp
ljmp
push
push
sbb
xchg
dec
nop
xor
cwtl
rcrb
dec
lock
imul
test
pop
call
jno
lds
pusha
or
jmp
call
addr16
dec
call
movsl
insb
xchg
or
sbb
lcall
push
xor
push
loope
mov
out
pop
adc
inc
insb
jmp
std
sbbl
lds
mov
fisttps
or
ficompl
xlat
cmp
sti
dec
jp
and
daa
mov
add
scas
or
int
xchg
push
out
cmpsl
into
adc
lock
mov
ljmp
jge
mov
xor
adc
imull
xor
mov
jb
xor
xchg
sub
xchg
addr16
xchg
popf
push
andl
pop
out
stc
int
dec
and
xchg
push
mov
add
rorb
test
data16
mov
add
movsl
xchg
cmp
incl
sbb
and
imul
push
nopl
mov
adc
push
or
cmp
ds
mov
or
nop
mov
and
push
cmp
in
dec
xor
inc
mov
sbb
mov
bound
sbb
push
inc
test
xor
jg
sub
loope
xchg
sub
push
fdivr
mov
roll
repz
inc
test
jmp
push
popa
fisttpll
pop
jge
rcrb
fnstenv
repz
ljmp
mov
mov
jae
sahf
xchg
lret
mov
lcall
pop
lea
ret
jg
decl
pusha
ret
push
xlat
cmp
pusha
jle
add
pushf
xchg
sub
mov
sbb
stos
decl
mov
pushl
in
fsubs
das
rcrb
scas
mov
or
cmp
rolb
push
jle
jbe
loopne
xchg
add
adc
out
pushf
pop
js
mov
test
cmp
call
cld
imul
into
popa
bound
jl
sub
jle
add
mov
lahf
dec
pop
test
cmp
pop
inc
shl
xor
iret
adc
mov
les
call
or
repnz
add
jnp
mov
filds
loop
pop
sarl
adc
jnp
cmp
dec
push
lea
mov
push
sbb
popf
movsb
bound
push
sbb
hlt
xchg
lea
inc
lods
lock
or
push
nop
jmp
sbb
adc
decl
pop
loop
sbb
and
dec
pop
mov
es
jecxz
dec
adc
out
aam
jle
bound
and
mov
imul
inc
push
or
or
imul
pop
js
negb
pop
jp
mov
pop
lea
xlat
outsl
lcall
push
lret
mov
mov
fwait
sbb
test
sbb
lret
add
jmp
inc
mov
lods
pop
vorps
cmpsl
mov
push
cli
ja
xorl
cld
pop
ljmp
cmp
sbb
sub
sub
cs
jge
fcoml
mov
mov
pop
mov
pop
pusha
enter
jmp
cmp
decl
dec
cli
jo
and
mov
adc
pop
pop
decl
jns
and
push
mov
inc
daa
ret
mov
lcall
jbe
push
inc
jmp
es
xor
mov
int3
aas
jns
adc
aaa
jp
lcall
in
inc
imul
pushl
cli
mov
add
push
daa
leave
movsb
mov
ljmp
fsts
inc
cld
cmp
nop
lcall
cmc
fs
or
movsb
jb
push
je
xchg
ss
push
cli
push
aad
lods
xor
bound
inc
pop
fs
fidivrl
push
xchg
pop
mov
pop
pusha
xchg
insl
test
mov
in
outsl
adc
stos
mov
fisttpl
pop
loopne
xchg
push
or
js
or
insl
ret
sahf
ss
insl
int3
push
mov
inc
fsubr
enter
lcall
lods
mov
jbe
lods
jbe
pop
cmpsl
lods
mov
mov
repz
std
jo
adc
cld
mov
in
scas
and
mov
and
movsl
mov
cmp
adc
mov
xor
sbb
roll
dec
mov
sbb
sub
jp
mov
dec
add
mov
les
inc
cmp
cwtl
sub
inc
sti
nop
xchg
call
mov
sub
dec
push
add
mov
dec
jmp
aad
xor
aaa
and
decl
les
xchg
dec
jmp
pop
jns
ret
movsb
andl
ret
in
gs
jg
jnp
or
mov
adc
dec
int
xchg
inc
aaa
inc
test
jmp
ljmp
sub
pushf
pop
dec
pop
sub
push
movsb
sub
pop
ret
push
dec
jae
cli
mov
ss
jg
jmp
das
xchg
or
js
push
xchg
stos
push
bound
jecxz
clc
adc
mov
jg
push
addr16
push
sti
push
push
pop
int
aaa
lds
ljmp
into
cmp
push
sbb
out
cmp
mov
filds
dec
cmp
call
sub
add
cmp
jb
repz
adc
mov
hlt
jb
test
loopne
jle
mov
pop
mov
dec
sbb
inc
test
cmpl
std
fbstp
or
mov
and
fsubr
imul
rcl
push
data16
movsl
call
add
pusha
aam
test
pop
jmp
push
dec
sub
adc
cli
mov
lcall
sub
pop
dec
add
or
enter
mov
sbb
jg
ret
push
inc
imul
pushf
popa
shl
jns
xchg
orb
icebp
xchg
data16
push
aaa
ret
adc
leave
inc
stos
mov
push
push
popa
xchg
scas
repnz
icebp
inc
rorb
lret
mov
das
in
sbb
and
xor
cwtl
cmp
mov
mov
sbb
les
lock
ljmp
in
aam
loopne
sub
leave
and
jle
pop
insb
sbb
jg
call
cmp
cltd
mov
cmp
push
je
adc
jns
cli
pop
decl
repnz
jbe,pn
out
jbe
pop
pusha
adc
cwtl
call
ret
in
jb
xor
pusha
mov
stos
fs
out
cmpl
inc
add
pop
sar
xchg
mov
xchg
pop
xor
int
pop
leave
sbb
or
loope
pop
test
das
scas
clc
jns
xchg
inc
test
sub
rclb
xor
mov
or
cmp
lock
cs
mov
adc
sub
inc
add
xchg
jl
inc
sbb
sub
mov
incl
test
in
push
aaa
mov
push
adc
imul
cmp
bound
decl
mov
outsb
mov
pop
push
fcoms
std
pop
xchg
pop
shr
inc
cmp
popf
fcomip
ljmp
mov
imul
outsb
in
int3
mov
jbe
cmc
jg
lcall
mov
mov
in
movsl
pop
sub
roll
es
lcall
pusha
lods
jb
push
mov
rcll
fsubrl
clc
ljmp
rcrb
and
orb
pop
sub
lods
addr16
clc
pop
xchg
cmp
push
push
inc
xchg
clc
imulb
in
pop
mov
sar
jmp
xchg
sahf
cli
push
xchg
lcall
jg
popf
sar
jl
adc
movsl
xor
je
mov
in
and
adc
sarl
pop
fsubs
into
inc
lret
aas
ljmp
ret
jne
repz
aas
jnp
adc
and
pushf
xchg
adc
test
pop
icebp
in
in
adc
mov
stos
addr16
mov
pop
movsl
testb
jmp
pushl
rorl
sub
movsl
jno
xchg
mov
sbb
pop
rorl
xor
orl
mov
cmpsl
fwait
sub
or
jbe
ret
and
xchg
gs
xchg
push
ja
xchg
mov
jg
xor
push
dec
out
sbb
daa
mov
jb
into
xorb
cli
push
jmp
xchg
push
cmc
bound
clc
test
movsl
jns,pn
pop
je
filds
jb
xor
dec
jo
data16
decl
call
int3
and
adc
sbb
aam
xchg
int3
add
fwait
push
aas
mov
xor
mov
cli
mov
addl
inc
pop
add
jno
push
mov
call
repz
xchg
cmp
mulb
lds
mov
stos
jae
sti
mov
das
clc
fisubrs
jmp
and
cmc
inc
repz
mov
outsl
testb
aaa
cld
call
loop
dec
gs
xor
dec
jo
mov
push
mov
or
decl
pop
mov
pop
or
aam
xor
sub
mov
sub
ja
out
adc
lcall
inc
stos
shr
fs
sub
mov
cmpsb
mov
out
jmp
incl
out
in
sti
jnp
dec
in
sub
sti
mov
pop
std
push
inc
xor
ss
or
je
arpl
dec
leave
lcall
sbb
test
out
arpl
inc
lret
cmc
lods
xchg
mov
sar
jg
pop
int3
sub
ret
sahf
bswap
xor
xor
cmp
and
or
cli
mov
xor
add
loopne
adc
inc
jo
adc
inc
and
mov
and
jge
jb
jg
cld
xchg
jg
and
push
ss
loop
pop
cwtl
push
push
adc
les
inc
popa
adc
call
pop
in
push
and
add
adc
sub
mov
scas
mov
imul
mov
rol
mov
pop
stos
cmp
insb
pushl
adc
jb
jns
push
cmp
push
das
mov
cli
test
mov
dec
xor
sahf
outsb
cmpsb
xchg
cmp
cmpsb
ljmp
in
bound
sbb
inc
cmp
push
dec
shlb
add
xchg
adc
ss
decl
dec
add
mov
jno
andl
mov
flds
cmc
and
cmc
inc
pop
xchg
div
incl
es
rorb
sub
sarb
in
fbld
enter
adc
mov
add
sarl
bound
bound
mov
jg
push
mov
mov
and
pop
fstl
loopne
sub
xor
jae
aas
jae
or
cmpsb
cwtl
dec
or
pop
adc
xor
ja
dec
jb
and
daa
movzwl
lcall
and
add
push
sbb
inc
inc
jno
in
orb
shlb
xor
mov
jg
inc
and
xor
or
jmp
inc
rol
arpl
jecxz
xor
call
push
jmp
xchg
lds
mov
leave
inc
inc
or
mov
inc
xchg
and
movsb
jb
enter
inc
cmp
cmp
push
add
call
pop
xorb
loop
mov
sub
xchg
sbb
outsb
out
xchg
xchg
cld
incl
inc
dec
jecxz
xchg
xchg
enter
push
jns
xchg
mov
nop
pop
push
pop
push
jns
mov
movsb
xor
inc
xchg
bound
gs
cwtl
test
inc
cmpb
dec
adc
repz
loopne
mov
sub
or
jle
inc
inc
mov
xor
lcall
mov
inc
mov
ja
les
nop
mov
xor
sbb
fsts
dec
and
jae
lcall
fistpl
mov
inc
push
push
enter
cs
mov
adc
add
add
and
incl
mov
xchg
jp
or
mov
or
cs
hlt
add
es
jo
adc
or
xor
inc
and
call
aaa
pop
aad
dec
ja
adc
jno
inc
pop
sbb
inc
icebp
inc
insl
push
incl
ret
adc
in
adc
dec
sbb
in
jg
jbe
mov
pushl
xor
xorl
ja
lds
sbb
push
aas
clc
push
mov
dec
lcall
cmp
outsl
in
add
or
xor
test
test
mov
push
ds
enter
push
shlb
sub
bound
fidivs
xchg
fisubrs
pop
push
ljmp
fwait
movsl
cmp
inc
add
jae
negb
fdivp
mov
movsl
leave
add
xchg
cli
pusha
and
xor
mov
shll
loope
and
add
ds
nop
add
xchg
ds
mov
incl
fidivs
add
or
lock
decl
ja
xchg
add
cltd
ficoms
mov
xchg
push
js,pn
add
leave
pop
aas
lock
pushw
adc
sbb
and
inc
or
test
movsb
and
pop
incl
jmp
or
pop
sub
dec
push
xorb
clc
in
adc
outsl
xchg
fs
xor
sub
incl
daa
dec
adc
fs
arpl
dec
in
daa
jbe
inc
mov
ja
ds
incl
push
pop
lfs
jno
xor
insl
jno
push
mov
xchg
ja
fcomip
ljmp
adc
mov
mov
cmp
mov
cmp
jmp
push
pop
sbb
cmp
es
lock
cmp
outsb
cmpsl
icebp
insl
scas
inc
sbb
sbb
sub
xchg
cmp
ljmp
cmp
xchg
pop
mov
adc
lret
rolb
xchg
fildl
mov
cwtd
or
adc
out
jnp
mov
jnp
jg
cmc
push
and
pop
repnz
jge
lea
dec
adc
cmp
cwtl
test
aaa
call
loopne
cmp
insl
jo
dec
out
xchg
lret
mov
push
dec
add
inc
fcomip
and
adc
lods
mov
scas
jmp
aaa
cmpsb
push
jge
adc
loop
cwtl
pop
decl
stc
add
imul
int
test
lcall
inc
cwtl
enter
loopne
xchg
lret
or
ja
xor
mov
call
mov
loop
cmp
pop
adc
cmp
stos
and
dec
mov
push
test
add
cli
call
dec
es
push
pop
cmovs
fsubrs
ret
cmp
ret
jae
adc
sub
push
cmp
sub
pop
jb
and
mov
add
mov
scas
shlb
and
adc
incl
bound
cmp
push
sub
ja
mov
push
out
dec
cmp
inc
fadds
scas
fistpll
pop
xchg
je
pop
xor
lret
mov
outsb
rcll
movsl
pop
mov
cmp
xchg
jp
mov
xor
sbb
sti
frstor
int3
andl
adc
sti
mov
scas
cltd
add
lcall
adc
cmpsl
xor
fbld
ss
lcall
cmpsl
sbb
add
sarb
js
push
ret
incl
sbb
or
loopne
outsl
and
xchg
pusha
repnz
jg
jg
xor
test
adc
inc
xchg
in
fs
lock
test
enter
incl
xor
rclb
loop
out
xchg
and
push
mov
movsl
call
push
shlb
push
jne
xor
call
xor
cmp
push
or
lret
lahf
cmp
test
call
je
push
andl
je
or
xor
push
ss
lret
and
inc
xor
notb
stc
les
and
jmp
adc
xor
out
lods
insl
mov
pop
pop
aam
xor
pusha
and
sub
ja
stc
xchg
pusha
aam
fcomip
jmp
sub
pusha
mov
mov
sbb
mov
or
mov
dec
loopne
mov
sub
mov
incl
mov
cmp
mov
mov
jmp
pusha
cmp
mov
movsb
push
push
rcrb
mov
test
ja
aaa
pop
loopne
mov
idiv
jmp
dec
data16
addr16
inc
lcall
sub
pusha
xchg
xchg
in
add
pop
push
stos
or
and
aas
pop
lret
arpl
test
mov
decl
out
lea
dec
insb
mov
test
sub
adc
incl
pop
mov
inc
ss
or
adc
sub
adc
xor
dec
push
clc
es
mov
loop
test
or
outsb
adc
imul
inc
sub
int3
and
pushl
cs
ss
ret
xor
lret
xor
idiv
outsl
push
jg
push
inc
push
and
scas
push
aad
fwait
pushf
pop
sarl
sbb
incl
imul
mov
cmpsl
shrb
mov
icebp
js
mov
lcall
pusha
mov
sub
ret
mov
push
jne
mov
push
movsl
clc
mov
cmp
sub
xlat
adc
cwtl
js
ja
or
mov
adc
shrb
in
lret
cld
cmp
jle
ds
jmp
mov
mov
ljmp
in
shrl
incl
xchg
sub
or
imul
push
loope
subl
sbb
adc
sub
and
movsb
mov
lcall
test
inc
ret
fldt
stos
jno
xchg
rcll
mov
into
push
jg
pushl
lods
stos
movsl
cmp
mov
fisttps
test
cltd
es
sbb
cmpsl
dec
adc
ficompl
xor
mov
incl
lret
aad
and
xor
pop
push
inc
push
lcall
dec
push
aad
mov
ljmp
xchg
out
sub
mov
outsl
insl
sub
js
int
int
sub
pushl
sbb
loop
outsb
xlat
push
jecxz
push
insb
loope
dec
add
xor
scas
adc
ljmp
dec
mov
xchg
in
xchg
int
jnp
sti
cmp
sub
adc
mov
or
call
out
mov
cmp
mov
nop
mov
or
popf
or
add
decl
movsb
mov
repz
repz
mov
rol
hlt
and
dec
decl
sarl
stos
add
or
lea
mov
cmpsb
dec
test
jns
and
jl
fisttpl
cltd
hlt
sub
jae
mov
mov
incl
adc
repnz
cmc
jo
scas
imul
push
push
sbb
lcall
lock
or
lods
mov
sub
mov
lcall
pushf
out
dec
loopne
aas
nop
add
xchg
push
jg
mov
jmp
or
incl
mov
fisubs
cmp
pop
cli
mov
cli
push
daa
ror
lock
decl
push
adc
xor
sub
and
es
arpl
inc
adcb
adc
add
incl
or
inc
loop
in
mov
xchg
jbe
jno
fsubs
push
or
push
ja
stos
test
jns
pop
xchg
pop
mov
test
hlt
mov
mov
sbb
mov
mov
mov
mov
pop
cmc
jmp
scas
mov
mov
lock
xchg
xchg
lock
mov
pop
sbbb
xor
add
add
popl
nop
cwtl
fchs
fs
mov
mov
push
add
fcoms
xor
test
xchg
mov
or
imul
mov
mov
pop
fwait
imul
fcoms
or
mov
lock
incl
pop
fwait
in
xchg
fsubl
pop
mov
push
jns
and
das
pushf
push
cwtl
sub
mov
jg
add
les
ret
aas
sub
mov
bound
imul
out
incl
and
lods
decl
int3
popf
sbb
fildll
daa
daa
xor
xor
nop
jle
inc
inc
fcomip
call
xor
mov
inc
push
out
jecxz
loope
or
nop
jl
adc
inc
and
adc
insl
push
mov
xchg
cmp
mov
pop
ljmp
les
cltd
xlat
jns
aad
outsl
cmp
push
js
stos
xor
xlat
inc
push
rcrl
sbb
stos
push
pop
popa
sbb
add
jle
mov
call
pop
and
decl
inc
mov
push
mov
data16
xchg
jecxz
pop
sbb
sbb
pushl
cmp
dec
sbb
aam
mov
int
xor
rorb
jmp
and
sbb
jno
inc
push
test
mov
push
inc
push
aas
mov
pop
adcl
sbb
lcall
sbb
push
xchg
jecxz
movl
fldt
sub
call
lods
rcll
jle
sbb
mov
aas
or
jb
or
scas
pop
xor
cld
decl
insb
clc
push
lcall
dec
push
cmp
adc
cmp
ljmp
xchg
rol
xchg
jnp
sub
dec
and
sti
cmp
decl
outsl
mov
mov
adc
les
icebp
adc
scas
and
or
cld
outsl
add
jmp
insb
xlat
lock
pushl
cmc
ja
ljmp
out
lods
ret
loopne
jecxz
mov
enter
cmp
std
jb
nop
mov
xlat
push
aam
cmp
nopl
mov
dec
popl
fsubp
roll
or
lods
adc
jb
rorl
jmp
icebp
inc
mov
decl
mov
pop
sbbb
or
and
call
repnz
and
repnz
and
sbb
push
es
and
mov
cltd
mov
dec
and
and
sbb
jmp
les
cmp
inc
ret
dec
and
xchg
dec
mov
push
leave
xchg
or
lcall
andb
push
js
dec
xchg
clc
fldcw
je
inc
xor
sub
mov
push
aad
push
xor
aad
and
ror
xchg
sbb
imul
mov
sbb
sub
inc
push
push
cmpsb
mov
inc
test
jbe
test
xchg
fcomps
icebp
inc
decl
sub
test
adc
das
sar
insb
jge
push
mov
fcmovb
cmpsl
pop
or
mov
icebp
fsubrs
fmull
pop
enter
push
fsubrs
enter
dec
and
fistpll
jmp
rol
daa
ret
in
leave
aaa
adc
ljmp
mov
lcall
mov
mov
divl
jecxz
mov
xchg
leave
lods
lcall
push
inc
pop
dec
ds
scas
add
xchg
outsl
test
sub
scas
inc
pop
mov
mov
call
xchg
jnp
scas
cmp
mov
jecxz
mov
add
ret
jo
lock
addr16
out
push
inc
nop
mov
repnz
mov
cld
cmp
mov
push
mov
jg
cmp
rcrl
dec
rcl
and
enter
stos
mov
sub
daa
mov
mov
or
pushf
out
cmp
rolb
icebp
sub
ficomps
ljmp
test
test
test
lods
dec
dec
cmp
jl
push
cmp
xchg
push
rolb
sti
mov
cmpsb
dec
xor
or
rcrl
fstpl
test
adc
xchg
mov
sbbb
sahf
aad
pusha
mov
ljmp
push
xchg
push
xchg
push
subl
mov
push
out
cli
mov
mov
fidivl
movsb
or
xor
adc
and
out
js
mov
adc
jmp
stos
in
mov
cld
inc
adc
cmc
and
int3
inc
mov
inc
daa
rcll
lcall
or
fisttpll
xor
mov
incl
fadds
jb
push
fimull
push
mov
pusha
lods
insb
or
nop
int3
mov
jmp
popa
sbb
rcrl
or
xor
icebp
mov
mov
fucomip
ljmp
repnz
add
pushf
or
addr16
mov
call
sarb
pushl
dec
xchg
test
push
sbb
and
push
mov
hlt
and
adc
decl
adc
lret
pushf
add
inc
popa
sub
sti
sbb
add
dec
daa
sub
ljmp
fsub
sbb
and
aam
adc
dec
jns
or
dec
dec
mov
sti
decl
repnz
or
inc
or
xor
pop
add
fxam
mov
lds
ljmp
inc
sbb
add
xchg
sub
and
into
test
pop
lock
pop
push
mov
bound
ret
loopne
jb
sub
lock
test
sub
clc
in
aad
push
lea
sub
sti
rorl
jo
jb
stos
sub
mov
jmp
sbb
xor
sub
divb
or
sbb
rol
xor
aaa
aas
enter
ljmp
and
imul
mov
jle
xchg
ljmp
fs
inc
dec
outsb
aad
divb
cmp
lret
mov
mov
xor
and
insb
mov
mov
mov
sbbb
cli
incl
movsb
imul
lea
ljmp
mov
rcl
mov
inc
push
push
xchg
inc
xor
sub
aaa
incl
dec
and
fldl
mov
xchg
adc
pop
add
xor
dec
out
mov
xchg
test
imul
dec
shrl
mov
sbb
push
xlat
pop
push
out
dec
pushl
dec
pop
mov
insb
lret
jmp
mov
gs
cmp
incl
xchg
push
arpl
pop
or
iret
insb
adc
or
xchg
ret
pop
mov
add
mov
adc
aad
add
fistpll
add
mov
sahf
std
loop
add
add
xchg
or
daa
sahf
cli
fstl
jae
xor
xchg
adc
dec
xchg
jecxz
pop
fadds
and
sub
mov
dec
pop
popf
sbb
sbb
jg
dec
xchg
xchg
lock
inc
inc
mov
mov
aas
out
add
cmp
in
incl
fnstenv
pushl
push
stos
and
sub
bound
aad
and
sub
loopne
incl
outsb
pop
push
mov
test
xor
jl
push
inc
xchg
test
lea
loop
aaa
sarl
mov
push
sahf
adc
push
movsb
ljmp
mov
in
leave
rorb
cmp
cmp
gs
mov
lods
call
es
xchg
lret
imul
and
jg
mov
movsb
scas
jge
fstpl
cmp
cltd
push
jno
stos
inc
repnz
shl
ljmp
sub
test
sub
push
pop
jle
push
xor
mov
lcall
add
push
pop
push
dec
xchg
mov
pop
push
cld
jb
mov
inc
mov
lcall
iret
cmp
divl
std
call
in
call
add
ficomps
push
jl
pop
sub
popf
ret
outsb
or
jg
lret
subb
lret
rclb
xchg
jg
mov
add
mov
and
lea
cs
sti
call
adc
adc
sbb
inc
jbe
aam
insl
jmp
into
mov
sahf
xchg
xchg
or
decl
aad
push
cmp
fmull
mov
jo
out
jnp
cmp
out
mov
push
stc
addr16
jmp
imul
xor
xor
mov
lods
xor
jo
mov
mov
ljmp
repnz
sub
cmp
frstor
scas
leave
nop
mov
fistl
fs
decl
add
mov
inc
and
inc
cmpsl
jp
and
hlt
sub
imul
std
lcall
in
xchg
es
mov
jecxz
push
test
fisubs
jmp
popf
lds
int3
push
std
filds
enter
xchg
cmpsl
popa
cmc
mov
pop
cmp
cs
inc
nop
push
repnz
ja
add
xchg
sub
sub
push
jno
jp
and
decl
out
mov
sbb
sbb
mov
mov
pusha
mov
inc
divb
lcall
xchg
xor
mov
out
jns
add
inc
sbb
mov
jecxz
xor
jb
lret
je
xchg
test
test
mov
xchg
adc
scas
call
push
pop
pop
jp
xor
mov
jno
jp
icebp
ret
lds
bound
std
jmp
es
adc
imul
fldt
mov
shll
and
xchg
call
stos
mov
mov
sbbb
mov
pushl
push
xor
or
shlb
clc
pushf
stc
cmp
fidivl
into
add
adc
stos
shll
lahf
push
cmp
mov
adc
mov
sub
and
dec
movsl
popf
mov
mov
es
adc
fmuls
loope
and
decl
dec
jns
dec
jnp
es
popf
enter
mov
ret
push
call
add
cwtl
mov
arpl
call
jl
sub
mov
outsl
rolb
add
nop
lcall
adc
jmp
mov
test
call
mov
clc
or
sbb
scas
lret
pusha
xchg
add
xor
decl
leave
cwtl
inc
and
add
lock
sarb
in
sbb
dec
add
js
sti
mov
decl
stos
or
fadds
bound
lock
test
add
pop
out
clc
call
xchg
imul
icebp
sub
negb
add
test
and
call
xchg
inc
stos
das
mov
mov
lcall
repz
sbb
inc
adc
pushl
lods
and
ret
push
xchg
push
repnz
cltd
mov
or
std
incl
jl
lds
dec
leave
xor
jns
ret
sbb
inc
sbb
nop
push
add
aaa
cwtl
in
test
mov
shrl
inc
xchg
mov
sub
orl
into
lcall
lods
incl
sub
stos
push
inc
sub
fs
add
std
pusha
out
repnz
fcmovnu
mov
xorb
mov
mov
out
xchg
rcr
mov
xorb
xor
leave
out
add
shlb
mov
mov
ret
mov
pushl
sub
xchg
sbbl
xchg
popa
les
decl
lcall
cltd
mov
add
clc
add
fisttpl
lahf
inc
push
out
cwtl
stc
or
call
mov
fistpl
in
inc
xlat
sbb
jmp
cwtl
sub
jmp
jg
jmp
mov
and
xor
test
mov
stos
xchg
mov
or
std
lcall
rolb
cltd
mov
in
inc
loope
lea
inc
movsb
inc
mov
mov
cmp
enter
fcoml
pop
and
fcmovne
stc
pop
xor
inc
into
sbb
inc
xchg
push
stc
sub
xor
mov
sub
jns
dec
test
cmp
sub
cmp
mov
cwtl
lods
mov
out
js
pop
std
inc
mov
sbb
xor
cltd
outsb
inc
das
xor
mov
pop
inc
rclb
test
push
les
push
xchg
push
cmp
jecxz
mov
push
fnstenv
mov
ljmp
scas
enter
stos
popf
cmp
dec
xlat
cwtl
xchg
jb
mov
add
mov
jl
jb
add
xor
mov
stos
add
or
cli
sbb
fisttpl
cwtl
decl
sub
mov
lds
test
lret
sub
imul
lcall
jg
xor
rclb
sti
stos
cmp
js
push
cmp
and
repnz
ljmp
mov
stos
mov
daa
mov
adc
pusha
rorb
jp
stos
push
mov
pop
sbb
mov
xchg
les
enter
sbb
sbb
adc
adc
dec
push
repnz
xor
push
sbb
test
call
mov
add
in
jbe
cmp
lods
and
push
sar
mov
cmp
push
mov
daa
in
dec
dec
mov
xchg
add
dec
mov
jg
icebp
xor
cltd
call
or
mov
jmp
sub
push
add
mov
inc
faddl
xor
mov
xchg
add
pusha
adcb
sub
adc
cmp
cmp
bound
mov
adc
mov
lea
pusha
jnp
mov
add
mov
arpl
outsl
push
int
mov
call
hlt
jmp
add
leave
xchg
std
inc
mov
sub
test
pop
fmuls
fidivl
mov
outsb
inc
xor
sbb
inc
cmp
ljmp
insb
nop
cli
arpl
sub
repnz
stos
cmp
insl
shll
std
jmp
xchg
dec
xchg
xor
shrb
xchg
sub
lea
push
loope
lcall
sub
cltd
and
or
cmc
push
mov
incl
cld
dec
adc
mov
fwait
dec
popf
pop
into
dec
xor
ss
or
push
jmp
mov
xchg
xchg
aad
aad
test
in
xchg
lock
cmp
push
pop
orl
or
add
adc
pushl
imulb
inc
lret
sbb
jl
jmp
xchg
dec
rcrl
addr16
jmp
dec
pusha
adc
dec
jmp
imul
mulb
or
pop
or
ljmp
shrl
sahf
dec
jae
repnz
fnsave
stos
pop
mov
pop
stc
xor
sub
jmp
cltd
subl
adc
icebp
adc
sub
inc
push
outsl
fs
pop
jo
test
gs
mov
xor
cld
or
fdivrs
dec
mov
dec
ficoml
adc
sahf
adc
call
inc
fs
lds
sub
jg
inc
mulb
pop
mov
jne
mov
ljmp
xchg
mov
adc
cmp
mov
movsl
push
sbb
inc
idivb
sbb
icebp
cmpsb
leave
shlb
xor
mov
push
mov
ljmp
lock
les
mov
shr
xchg
dec
sbb
or
call
pushf
enter
or
mov
or
mov
fdivrs
mov
sbb
adc
jle
pop
pop
xor
icebp
cwtl
hlt
xchg
mov
cltd
push
in
dec
mov
push
sbb
rcl
xchg
cli
cmp
mov
or
xor
pop
sub
mov
jbe
xorb
ljmp
clc
mov
movsl
mov
xor
clc
mov
push
mov
jns
jge
add
fisubs
adc
xchg
lea
mov
decl
or
dec
pusha
adc
arpl
sbb
or
or
mov
mov
lcall
mull
xchg
sub
cmp
or
xor
mov
mov
lcall
mov
mov
aas
negb
adc
sub
loopne
and
mov
ljmp
loopne
sbb
rclb
dec
cs
das
and
repz
aaa
jle
pop
inc
fmul
repnz
pop
mov
adc
adc
jle
nop
push
or
cmp
loop
mov
mov
cld
cmp
xor
ljmp
mov
pushf
pop
arpl
jecxz
mov
xchg
aam
sub
fwait
add
leave
jg
jmp
test
fstpl
inc
loopne
fbstp
rorb
jmp
sbb
out
xor
imul
or
pop
sub
inc
or
push
mov
outsl
sub
inc
nop
pop
orl
push
jb
fisubs
popa
xchg
and
scas
leave
pop
pminsw
fld
push
lcall
aas
shr
pop
add
sbb
push
push
out
into
in
lods
add
insb
pop
ror
sub
gs
lods
fists
mov
jno
fistps
push
outsl
test
scas
decl
jns
pop
jns
hlt
jnp
mov
mov
push
xchg
fcompl
add
push
in
out
adc
push
cmp
xor
xor
xchg
push
out
out
mov
cmp
sub
testb
data16
icebp
outsb
outsb
cmc
incb
out
outsl
notl
in
adc
pop
inc
push
sub
imul
notb
add
movsl
fdivrs
xor
out
xchg
repz
rorb
std
push
dec
or
scas
nop
push
int
jo
cmpsl
clc
orb
mov
jg
enter
mov
sbb
or
mov
add
iret
stos
fs
cli
repz
sbb
imull
js
in
in
call
push
add
xchg
getsec
jne
call
xchg
insl
mov
jnp
sbb
fidivs
pop
jle
mov
mov
and
addr16
out
sub
ja
lock
fcomps
pop
lods
inc
mov
mov
call
cld
mov
cmp
shll
push
popa
fwait
fwait
pop
out
adc
cmp
cmp
lcall
out
sahf
jne
fsubrl
aam
sub
sbb
jmp
adcb
sub
xorl
inc
arpl
loopne
outsl
out
cmp
testb
testb
inc
mov
inc
fnstsw
xchg
lods
cmpsb
mov
int3
inc
push
loop
sub
lock
cmc
in
or
fdivl
mov
mov
out
mov
call
bound
lods
mov
jmp
ljmp
mov
pop
movsl
lea
mov
push
dec
jb
jno
jg
pushf
sbb
je
and
incl
ljmp
pusha
imul
loop
jg
int
cmp
mov
mov
pop
pushf
aas
insb
xchg
call
and
in
mov
cmp
xorl
push
fucompp
sbbl
xchg
popf
inc
push
sar
fiadds
dec
iret
je
xabort
decb
jg
incl
out
cmp
xchg
jg
dec
push
jns
or
pop
outsb
xchg
ja
mov
ror
std
sub
pop
sahf
fs
sbb
loope
mov
xor
int
call
out
and
stos
ja
jbe
sbb
jne
mov
pop
push
test
gs
out
cmp
stos
sbb
stc
adcl
jp
pop
push
pop
jmp
nop
das
jg
jo
add
lea
mov
mov
sti
adc
decl
or
clc
mov
notb
mov
dec
xchg
mov
sub
pop
out
lcall
imul
mov
out
and
pop
rcrl
int
mov
xorb
decl
or
jno
sarb
mov
jl
mov
jle
incl
inc
scas
std
out
jno
scas
push
xchg
xchg
in
mov
fdiv
jo
lahf
jmp
mov
adc
xchg
pop
stc
mov
ss
ljmp
shll
cmp
push
pushf
or
jmp
fsubl
roll
outsl
cli
jns
push
dec
or
mov
mov
cmpsl
cmpsl
jmp
pop
jg
fadds
add
nop
repnz
cs
sbb
or
mov
test
ljmp
popa
loop
mov
movsl
sbb
ret
test
and
in
loopne
inc
mov
push
push
pop
mov
movsl
dec
cwtl
push
daa
sbb
ljmp
lds
stc
mov
call
ljmp
mov
push
mov
cltd
jb
dec
cltd
rsm
bound
sub
cmp
pop
bound
cmpsl
pop
movsb
sub
out
lods
push
dec
xor
push
imul
dec
pop
xchg
jmp
shrl
loop
test
sub
ficompl
test
stos
adc
ljmp
imul
rcrb
jb
sarl
insb
call
outsb
pop
cli
jbe
shll
ss
ja
sub
push
loop
jno
push
cmp
inc
jle
adc
shll
int3
loope
mov
xchg
fcomip
rcrl
jns
pop
add
rcrl
iret
repnz
dec
fcos
lcall
and
lahf
test
push
mov
xchg
pop
testl
movsb
iret
inc
sbb
incl
jg
insl
mov
add
xor
jle
mov
enter
ja
push
lcall
xor
xchg
xchg
push
in
pusha
adc
jns
hlt
decl
lock
call
push
dec
jae
lock
into
aaa
lcall
cld
jmp
push
xchg
push
add
adc
push
push
movsl
dec
xchg
and
mov
dec
int
xchg
gs
aad
stos
dec
inc
out
pop
lcall
mov
aad
fwait
sahf
das
cli
imul
in
inc
sbb
and
mov
jne
jg
mov
daa
push
ja
pop
mov
aad
xchg
pushf
mov
jno
mov
push
pop
pop
adc
dec
xor
sbb
icebp
push
fprem
incl
push
xchg
popf
movsb
pop
dec
push
sbb
sbb
push
or
fwait
and
mov
rcrb
cmpsl
inc
aas
ljmp
mov
dec
es
scas
adc
lods
fsubr
lahf
adc
add
mov
inc
mov
sub
je
adc
cwtl
mov
pushl
mov
jb
sti
xlat
pop
mov
in
or
jns
scas
rorb
sub
clc
ljmp
ret
stos
add
stc
pop
cmp
ljmp
dec
push
in
jl
jno
ror
scas
xor
rolb
bswap
in
nop
lcall
loop
xor
call
mov
js
popa
cmpsl
sahf
jb
add
adc
cltd
xchg
decl
dec
jnp
hlt
or
cmp
insb
adc
insl
jle
inc
jnp
test
jg
test
stos
pop
or
inc
add
pop
fcompl
cmp
decl
push
push
mov
rorb
dec
or
dec
lods
xchg
sub
mov
scas
aam
scas
push
adc
jmp
mov
dec
aaa
jp
aad
test
pop
and
gs
daa
mov
dec
call
mov
movsl
adc
push
outsl
mov
lret
out
frstor
aad
lds
in
movsb
scas
push
lods
jmp
aad
mov
dec
cmp
push
mov
mov
xor
mov
loopne
mov
out
adc
lahf
in
icebp
mov
push
pop
ds
or
push
dec
mov
or
xor
bound
movsb
xchg
jp
jp
sti
in
dec
jmp
lea
andb
mov
adc
in
outsl
mov
mov
mov
fldl
aad
fisubs
movsb
jg
adc
mov
mov
add
push
xor
fimull
xchg
push
jns
repz
mov
jle
mov
xchg
or
dec
jp
xor
mov
xchg
imul
sub
lcall
in
daa
enter
test
mov
int3
and
sbb
jg
xor
test
mov
mov
cs
mov
into
add
lcall
scas
pop
xor
mov
cmp
in
pushf
out
cmpsl
jns
sbb
stos
mov
sbb
sahf
leave
mov
stc
jle
adc
fbstp
and
js
jne
mov
mov
jmp
aam
xor
popf
addr16
in
mov
mov
xchg
test
out
pop
stc
inc
insb
daa
mov
mov
loop
imul
push
sti
pop
mov
movsl
ret
movsb
ljmp
cmp
call
mov
js
mov
and
cwtl
int3
sub
inc
or
fwait
orl
pusha
ss
jecxz
mov
mov
jecxz
lcall
dec
dec
sbb
js
jbe
or
pop
les
xchg
lock
jmp
sbb
rclb
mov
call
jbe
je
mov
inc
movsb
movsl
xor
adc
pop
aas
sbb
and
pop
cmp
je
int3
mov
sub
mov
iret
push
leave
cli
test
lcall
pop
popa
loopne
mov
pusha
sub
cmp
cmp
ljmp
sbb
int
jo
inc
xchg
addr16
pop
cmc
push
nop
xchg
je
or
cmpsb
daa
cli
jmp
add
enter
or
sub
adc
push
repnz
rolb
xor
call
or
mov
mov
cwtl
inc
xor
lcall
pusha
pop
call
das
jp
xor
in
jmp
mov
mov
mov
push
push
xor
lods
data16
pushl
in
out
jbe
pop
imul
repnz
xor
push
shll
push
push
jle
push
cmp
aam
sbbl
jbe
xchg
daa
aad
jo
adc
push
inc
je
xchg
sahf
icebp
je
cmpsl
xchg
ljmp
push
sub
push
add
stos
movsb
add
stos
outsl
sbb
clc
cmp
in
fs
mov
mov
aad
daa
ret
test
mov
jmp
xchg
decl
push
psllq
int
adc
jmp
mov
jo
xchg
sbb
add
xchg
and
mov
fdiv
adc
sarl
mov
sbb
jg
jg
aad
iret
sub
jle
iret
add
leave
lret
inc
sub
std
call
xor
mov
push
in
mov
add
jle
cmp
daa
pushl
inc
xor
inc
xchg
mov
inc
fistl
lods
popl
lds
xor
or
incb
test
mov
mov
fwait
sahf
jg
cmp
dec
rcr
stc
inc
adc
jge
es
push
cltd
pop
in
or
pop
cmp
repz
xchg
mov
pop
cmp
pop
lods
mov
les
aam
mov
or
mov
and
mov
jmp
into
jae
xchg
or
cmpsl
pop
adc
fdivl
inc
fisubl
orb
jae
jmp
int
sarb
push
adc
dec
sbb
and
jbe
mov
or
repz
cld
pop
dec
dec
sbb
outsb
xchg
iret
addr16
cmp
pop
cmc
push
mov
inc
add
push
xor
pop
data16
push
in
dec
std
incl
sub
stc
cmp
iret
out
mov
jne
leave
or
or
dec
mov
fstps
jg
jl
clc
aaa
xchg
or
xor
mov
adc
movsb
cmpsl
imul
xor
pushf
mov
out
inc
dec
mov
jb
inc
jno
dec
xor
gs
mov
cmpsb
jb
pushf
pusha
sub
jno
inc
push
sti
dec
mov
lods
dec
int3
pop
fcoml
sbb
mov
popf
xor
decl
xchg
je
push
test
fdivs
incl
and
imulb
xchg
xchg
jge
daa
jbe
loope
popa
cmovs
and
mov
cmp
mov
fildll
cmc
repnz
movsl
jmp
lcall
jmp
mov
movsl
push
fsubrs
in
test
xchg
push
xchg
push
mov
faddl
adc
je
sub
xchg
or
enter
dec
movsl
lds
ja
xlat
xchg
dec
push
cli
jmp
jae
xor
xchg
cs
fsubrp
jg
adc
xchg
pushl
mov
pop
mov
xchg
outsb
les
ljmp
pop
mov
inc
lcall
push
pop
lods
loop
cs
mov
jne
js
jns
bnd
lcall
xchg
cmc
out
xchg
cmp
push
jne
push
out
xchg
mov
negl
stos
jnp
daa
push
clc
mov
pop
subb
popa
xor
jo
cs
stc
cmp
and
adc
test
out
clc
fstp
insl
rcr
or
mov
cltd
and
or
mov
adc
fcomip
les
jo
lods
cmp
inc
decl
enter
into
fmul
test
in
inc
decl
popa
mov
gs
aad
pop
insl
or
incl
enter
sbb
pop
pop
push
cmpsb
aad
push
sbb
dec
fs
pop
dec
sbb
dec
mov
inc
in
into
lods
pop
out
popa
mov
jne
popa
jge
dec
clc
adc
cmp
pusha
cld
incl
and
mov
inc
and
adc
push
cld
aad
imul
pushl
xchg
lds
xchg
cmp
lcall
sbb
iret
cmpsb
jne
mov
or
inc
xchg
icebp
leave
mov
lcall
sbb
mov
and
xchg
push
jg
incl
es
je
sbb
lods
lea
sbb
xchg
add
push
and
hlt
call
test
adc
and
or
lret
sub
loop
ljmp
cli
mov
jne
xchg
mov
loopne
lcall
jmp
add
push
dec
push
mov
cmp
jg
mov
hlt
inc
pop
sbb
ss
lock
outsb
rcrb
call
jo
aad
or
stc
test
lret
movsb
push
fistps
mov
aad
jg
stc
push
pop
adc
sahf
test
xchg
rcr
pop
mov
xor
jnp
pop
call
xchg
mov
out
mov
sti
loope
sahf
push
and
mov
or
test
lahf
dec
std
xchg
and
jno
nop
daa
ljmp
lret
fwait
add
jno
sub
pop
call
fildl
dec
adc
aad
nop
insb
ljmp
cmp
inc
pushf
nop
or
xor
sbb
popa
add
mov
pop
sbbl
pop
or
subl
dec
sbb
mov
aaa
test
add
arpl
ljmp
incb
out
popa
or
xchg
jns
cmp
or
mov
in
stc
loop
call
cld
fcompl
test
jne
ret
js
repz
pop
xor
negb
cmp
mulb
sbb
xchg
add
shll
cmp
data16
int
fistps
lcall
ljmp
and
sbb
xchg
dec
iret
pop
gs
test
je
aam
sub
mov
cmc
adc
mov
and
inc
fidivs
scas
lds
test
dec
inc
push
decl
pusha
and
cs
dec
adcl
outsb
jp
in
fdivl
mov
outsb
cmp
jge
fcoms
loopne
add
cmp
mov
fisubl
cli
pop
arpl
mov
sbb
ljmp
xchg
shlb
xchg
adcl
xor
mov
push
pop
add
clc
xchg
sbb
mov
or
add
inc
icebp
xchg
mov
jecxz
in
fcompl
bound
lret
inc
mov
scas
or
push
in
push
sbb
pop
lock
decl
or
jle
inc
pushw
sbb
sbb
pop
push
jnp
cmpsb
imul
jmp
cmpsl
and
push
lahf
push
push
les
test
lcall
push
fidivl
dec
cmp
sub
and
popa
dec
add
pop
fisubrs
cmp
inc
jne
mov
push
mov
push
or
sbb
rcrl
rclb
jecxz
decl
out
inc
xchg
js
test
test
andb
push
pusha
lcall
bound
jg
sbb
or
arpl
les
and
push
int3
sar
incl
push
sbb
push
outsl
test
cmpsb
cmp
xchg
cmp
push
dec
popa
mov
or
cmp
cmc
ljmp
pop
inc
and
xchg
call
pop
rcrb
sbb
aas
leave
pop
mov
stos
addr16
and
fwait
inc
inc
or
jg
cmp
data16
cwtl
lds
cmpsb
sub
stos
cli
lcall
inc
outsb
pushf
inc
xchg
stos
sbb
cld
adcb
mov
push
es
femms
loopne
sbb
fisubrs
mov
lcall
jbe
je
cli
push
mov
mov
dec
sub
push
mov
enter
pop
cmpsl
xchg
fstl
test
mov
fdivrl
inc
dec
adc
cwtl
cld
dec
pop
sbb
in
mov
leave
push
cmpsb
fiadds
cwtl
je
les
incl
andb
pop
mov
stos
push
test
icebp
call
xchg
test
adc
test
nop
fcom
movsl
mov
out
into
shrl
iret
flds
cmp
push
call
icebp
rcll
int
rcl
or
sti
jns
aam
mov
fisttpl
in
ljmp
mov
mov
mov
and
popf
test
pop
iret
mov
call
add
lea
cli
xchg
movsb
enter
stos
out
or
ja
in
sbb
bnd
add
insl
leave
je
dec
jne
iret
popa
lcall
mov
pop
xor
or
inc
addr16
fs
cmpsl
outsb
fcomps
mov
decl
cmp
inc
mov
fs
fisubrl
mov
xlat
call
push
xchg
lods
icebp
lcall
shll
sbb
or
fadds
fmul
mov
test
jnp
lods
adc
xchg
add
push
inc
cmc
and
pushl
cmpsb
in
and
sahf
or
fnstsw
stos
vcomiss
push
dec
mov
mov
pop
repnz
mov
ljmp
rol
add
dec
jecxz
fisttpl
pushf
sub
push
outsb
mov
jmp
decl
jmp
push
pop
in
negb
mov
ret
stos
add
repnz
jmp
les
adc
mov
mov
je
mov
mov
jmp
imul
or
sbb
and
inc
mov
mov
cld
jg
ljmp
dec
ds
test
jg
sbb
sbbb
dec
cmovns
xor
gs
addr16
rol
loope
push
incl
sub
mov
xchg
adc
cli
lock
xchg
pop
imul
jne
ljmp
sti
xor
mov
movsb
imul
mov
sbb
cltd
xchg
or
sar
das
mov
cmp
add
inc
add
sub
xchg
shrb
leave
and
sub
in
mov
js
lcall
or
jo
stos
daa
pop
mov
push
call
bound
pop
or
mov
ljmp
push
clc
adc
push
subl
js
dec
insb
push
dec
or
ljmp
sub
sub
dec
popf
lods
jp
cmp
pushf
in
sbb
call
outsl
dec
enter
pop
hlt
jge
aas
jp
pop
out
shl
add
inc
fisttpl
cmpsl
ret
sbb
cmpsb
inc
sti
inc
imul
fsts
xchg
test
outsb
jmp
adc
mov
sbb
pop
out
mov
mov
xor
rolb
and
iret
stos
imul
and
jno
dec
mov
or
imul
mov
fcomip
push
jno
adc
shr
push
roll
pop
cmpsl
sub
fimull
in
stc
xor
push
mov
adc
lods
repnz
pop
xchg
inc
and
inc
jmp
dec
cmp
sub
dec
inc
cmpsb
test
hlt
push
sub
out
repz
sub
sbb
pusha
add
icebp
incl
jge
movsb
inc
sbb
xchg
dec
decl
sub
push
and
nop
test
ss
fwait
insb
mov
call
scas
pop
lahf
fistps
jbe
xchg
inc
outsl
imul
imul
inc
pop
hlt
fdivl
mov
sub
jge
sbb
mov
bound
addr16
out
dec
push
push
jnp
mov
xchg
popa
les
shl
or
push
sub
sub
jmp
mov
out
lret
adc
test
lret
push
call
hlt
mov
out
call
addr16
rcl
sub
push
push
leave
push
mov
dec
and
mov
inc
jge
into
adc
shrb
lahf
es
nop
cli
jg
xor
jle
addr16
mov
inc
pop
shlb
inc
dec
mov
sub
xchg
mov
popf
push
inc
pop
mov
out
imul
cmp
add
xchg
inc
aas
stos
cmpsl
and
out
mov
cmc
dec
leave
adc
fwait
mov
jmp
jmp
test
aaa
cld
lcall
ja
jne
mov
or
lahf
in
popf
mov
inc
pop
and
js
push
xor
xor
xchg
mov
loope
outsl
lsl
pushl
es
arpl
mov
jb
mov
jp
out
sub
in
rcrb
das
clc
pushl
cs
pop
inc
xchg
icebp
cli
xor
dec
scas
push
lods
call
aam
into
mov
stc
pusha
fistps
xchg
inc
sub
iret
sub
jg
jg
mov
mov
lret
pop
cld
sbb
dec
pop
inc
call
es
es
fsts
sbb
sahf
es
push
je
pop
loope
aam
ljmp
cmpsl
xchg
adc
mov
mov
add
clc
decl
test
icebp
loop
imul
decl
out
push
xchg
dec
mov
mov
ret
shlb
ja
pop
pop
adc
push
sbb
outsb
mov
ljmp
icebp
cmp
in
sub
push
mov
and
icebp
int3
push
std
incl
enter
xor
popa
mov
jmp
mov
insb
hlt
sbbb
or
xchg
push
movl
pushl
adc
inc
cli
add
xchg
cmpsb
cmp
fists
cmpsb
or
ss
pop
or
insl
call
test
dec
lahf
cli
mov
add
sbb
xchg
jmp
push
mov
mov
push
push
js
mov
mov
jbe
cmpl
and
fs
or
loop
pushl
sbb
mov
xchg
pop
or
push
adc
stos
rcrl
mov
push
insl
cmp
mov
sbb
push
pop
lcall
cmp
popa
icebp
sarb
mov
and
out
dec
je
mov
cmp
mov
mov
lret
mov
lcall
cmpsb
mov
add
push
mov
inc
mov
mov
jbe
out
sub
adc
jg
add
fisttpl
cmp
mov
cmp
call
jmp
loopne
pop
jbe
insl
shr
rcll
decl
leave
int3
lret
dec
xchg
push
ss
add
mov
or
jg
popf
xchg
adc
jg
pusha
push
fsubl
sbb
cmp
cmc
xchg
add
aas
mov
popa
mov
mov
dec
clc
inc
lds
pop
adc
subb
pushl
cmp
jmp
add
jmp
jno
imul
add
adc
add
nop
jecxz
inc
cmpl
dec
popa
clc
ret
and
and
shlb
push
and
pushl
repnz
add
or
dec
xchg
or
gs
inc
sub
movsb
mov
ljmp
mov
dec
dec
and
mov
into
nop
and
cmp
mov
sub
push
imulb
mov
dec
ljmp
clc
jecxz
lret
test
stos
adc
dec
ss
lock
call
push
in
inc
xchg
xor
add
push
lea
loope
aam
push
mov
test
mov
incl
inc
or
loopne
pop
lds
adc
mov
rol
js
and
insl
add
decl
cld
xlat
sub
xchg
lahf
scas
pusha
cwtl
sbb
push
shlb
mov
mov
inc
fstpt
jbe
ss
loope
ffreep
jne
cld
fstpl
adc
das
insl
jne
lock
orl
fdivrs
aaa
jo
mov
cld
cmc
neg
mov
mov
fcompl
add
and
xchg
adc
fptan
jne
lcall
aaa
cli
pushl
push
scas
and
test
mov
and
outsl
jbe
or
shlb
or
repnz
stos
das
aam
dec
or
cmp
incl
test
or
xchg
adc
jmp
icebp
sub
mov
aaa
jl
push
outsl
addb
rclb
adc
mov
sbb
and
dec
decl
sbb
sub
push
lret
or
cmp
lahf
or
hlt
push
or
jmp
lret
dec
mov
bound
fcomip
pushl
stos
or
popf
mov
fdiv
stos
in
mov
xor
jmp
lods
push
out
cmp
loopne
je
inc
jmp
cmp
dec
aaa
jmp
decl
in
in
xor
mov
repnz
jo
jmp
enter
incl
rorl
push
jecxz
mov
or
gs
pushl
cld
nop
rcrl
ret
insb
mov
xchg
mov
int
decl
pop
push
push
int3
xchg
mov
pop
test
dec
call
dec
add
sbb
imul
cltd
adc
jl
stos
dec
mov
movsb
decl
mov
xor
rorb
sbb
dec
test
xor
sub
fistpll
fdivr
xor
lea
data16
mov
fs
dec
gs
pushl
sub
push
out
add
push
sbb
fisttpl
dec
xchg
imul
dec
mov
mov
adcl
cmp
mov
sbb
xor
xlat
mov
lret
mov
jmp
decl
shrl
inc
test
mov
int
sub
mov
shl
dec
cmp
cmp
push
pop
jno
dec
negb
xor
sti
jp
mov
dec
stos
fucom
jmp
movsb
addb
sbb
fistpl
cmp
pushf
enter
jge
sbb
mov
dec
sub
push
imul
addr16
pop
int3
mov
fsubl
sti
fildll
and
fwait
or
jg
stos
rcl
sub
shr
dec
jg
dec
mov
push
in
push
cli
jnp
lret
stos
cwtl
aaa
fcmovnb
incl
jecxz
cmp
mov
cmpsl
mov
push
lea
push
cmc
push
jmp
jle
cmp
sub
lcall
fwait
cld
shlb
pop
mov
xor
sub
or
jge
sarl
fbld
ljmp
or
jne
dec
js
lods
lds
dec
xchg
cmp
addb
call
in
movsb
pop
and
dec
pop
ret
int3
sub
stc
adc
inc
mov
call
or
cltd
add
fnstenv
sbb
jmp
pop
mov
sub
add
inc
cmpb
sbb
aad
cmp
aad
repz
into
mov
mov
enter
sub
ljmp
in
call
jnp
xchg
pop
mov
sbb
xor
addl
outsl
cmp
call
fs
test
add
and
cmp
mov
aam
and
push
sub
cld
pop
negb
pusha
and
push
pop
cmp
xchg
and
or
out
cmp
dec
push
add
cwtl
cli
loopne
es
cli
push
dec
push
inc
push
push
fimuls
in
std
dec
adc
jmp
pop
inc
mov
xlat
and
out
je
add
loopne
mov
mov
sti
adc
jb
add
add
in
dec
arpl
je
dec
pop
incl
push
sbb
push
ds
xor
add
mov
push
adc
cmp
incl
in
into
and
dec
sub
test
pop
adc
add
inc
imul
jmp
je
xor
mov
adc
decl
dec
inc
shrl
stos
inc
movsl
sub
mov
dec
lcall
incl
cmp
shll
xchg
roll
jecxz
or
inc
push
sti
std
incl
fsubr
stos
sti
mov
adc
lock
sub
sbb
pushl
mov
lret
xchg
xchg
sbb
shlb
ja
sbb
inc
adc
insb
pop
ljmp
imul
add
leave
dec
inc
not
imul
sti
xor
pusha
pop
test
aad
decl
sub
rolb
push
inc
sub
loop
mov
or
push
inc
cmp
insb
ljmp
sub
fistl
xchg
out
mov
fs
aaa
dec
and
mov
pop
dec
mov
dec
call
jmp
xor
lret
jmp
cmpsl
cmp
int3
imul
mov
dec
mov
inc
xchg
cmc
fcomip
ljmp
adc
pushf
xchg
sbb
in
push
hlt
mov
adc
notb
call
repz
push
pop
pop
fadd
and
pop
mov
leave
rcrb
xlat
or
mov
inc
sub
test
dec
fsubl
mov
add
fstpt
pop
int3
mov
jl
adc
jecxz
mov
fs
jb
mov
adc
inc
mov
inc
xor
cmp
into
dec
mov
lods
in
xchg
lcall
add
vmread
jb
or
jno
ret
dec
mov
sbb
adc
mov
jno
lods
xor
cld
push
mov
sar
lcall
push
mov
lods
jo,pn
ljmp
mov
lretw
sub
lcall
ljmp
imul
sar
std
pop
xlat
xor
aas
adc
sub
decl
stos
js
ja
mov
imull
xchg
fs
push
pop
scas
pop
xor
jl
pop
cmp
outsl
test
mov
and
mov
push
cwtl
mov
in
push
push
push
mov
jo
mulb
or
sahf
mov
inc
add
hlt
loop
and
dec
mov
clc
lret
enter
js
call
or
sub
mov
shrb
sti
enter
loopne
mov
js
push
push
sbb
call
sahf
cwtl
mov
lock
repnz
push
ja
mov
adc
mov
sarl
test
adc
push
test
dec
lahf
jnp
push
aam
out
pusha
cmpsb
lcall
cli
or
cmpsb
sbb
jno,pn
push
pop
sub
aam
enter
xchg
mov
ret
dec
cmp
sbb
dec
mov
mov
loop
pop
jg
movsb
jl
xor
popa
popa
or
inc
lods
push
outsb
adc
in
adc
ljmp
or
lret
pop
inc
dec
lods
adc
inc
inc
pop
rcrl
ja
sarl
jns
repz
jmp
fldt
ja
mov
adc
pusha
cmp
aaa
push
push
inc
scas
fs
mov
decl
in
or
jne
mov
outsb
fwait
sub
add
dec
sbb
lea
or
rep
movsb
cmp
add
repnz
sbb
jp
loopne
ljmp
je
lret
add
mov
in
outsb
insb
push
sub
das
leave
xlat
test
in
cmp
xchg
adc
sbb
fbld
add
mov
aam
push
inc
inc
adc
push
push
xchg
inc
cwtl
fs
xchg
add
repz
and
stos
or
lahf
stos
mov
int3
ror
inc
jo
and
decl
mov
fdivr
mov
inc
add
rolb
ljmp
ret
shll
and
and
in
hlt
inc
mov
mov
push
and
arpl
xor
ss
add
pop
lcall
xor
sub
lcall
dec
jecxz
in
and
add
stos
inc
xor
or
xor
dec
mov
sub
or
mov
cltd
cli
fcomip
push
jo
fimull
test
repz
dec
call
mov
sbb
shl
orb
sub
into
fsubp
mov
shrb
pop
or
cmc
andl
or
test
decl
je
cmp
lock
pop
ret
dec
xchg
jp
cmp
and
sub
push
lods
push
push
mov
lcall
inc
ss
inc
sahf
cs
es
push
imul
insl
push
dec
movsb
stos
in
and
decl
inc
xor
inc
or
mov
sub
call
ret
outsb
lcall
add
in
jmp
jmp
jmp
push
push
dec
xchg
scas
es
cmp
stos
and
xchg
sub
fcmove
and
push
xchg
mov
test
add
xor
xchg
push
inc
pusha
addl
pop
stos
daa
mov
std
pushl
icebp
adc
fnstenv
xchg
mov
sbb
dec
daa
cld
sub
rclb
iret
mov
test
ja
fwait
inc
pusha
inc
or
sub
idivb
repnz
sub
outsb
popl
mov
mov
sbbl
mov
pusha
add
lcall
das
mov
or
scas
aas
add
cmp
and
sub
adc
mov
mov
inc
ret
cmp
pop
mov
push
clc
add
jge
imul
leave
jnp
insl
xchg
shl
or
adc
and
and
ss
aas
movsb
or
push
gs
dec
and
cmpb
cwtl
nop
test
imul
add
ljmp
mov
jmp
xchg
adc
in
test
jecxz
jo
outsl
shl
cmp
fs
mov
mov
icebp
je
lock
insl
and
adc
pop
cmpsb
sub
gs
inc
mov
fs
mov
cmp
sbb
outsb
pop
lret
adc
into
dec
es
push
jno
cld
adc
cld
jb
dec
pop
jbe
mov
push
ljmp
lea
mov
scas
or
mov
rorb
push
cwtl
in
hlt
shl
pop
dec
xlat
jmp
sub
and
js
mov
add
cmpsl
cmpsl
sbb
aaa
mov
jg
xchg
ljmp
jl
push
pop
lret
outsl
dec
cmp
inc
xchg
je
jle
ret
and
jo
inc
add
scas
sbb
rol
shlb
cmp
decl
outsl
mov
clc
jmp
jecxz
jo
cwtl
jo
jmp
or
push
or
mov
inc
imul
add
lcall
or
adc
call
push
or
cli
repz
dec
test
jne
decl
sub
fisubs
mov
push
in
test
ljmp
xchg
ss
mov
loop
jo
sbb
hlt
out
add
clc
ret
icebp
ret
pusha
mov
inc
les
ljmp
mov
mov
jns
inc
jle
sbb
push
dec
mov
sahf
ljmp
hlt
movsb
jle
pop
pop
movsb
and
iret
push
inc
adc
incl
inc
cwtl
and
add
sub
ud2
int
loopne
iret
pushf
outsb
or
adc
cs
call
iret
add
lds
in
loop
and
dec
std
or
dec
nop
xchg
push
xor
call
nop
shl
mov
mulb
aas
pop
sub
jne
mov
das
test
or
call
and
cmp
aam
pop
int3
push
lock
mov
and
stos
push
sub
add
in
jp
or
pushl
inc
fsts
sbb
cs
xchg
pop
jo
mov
shlb
mov
xor
decl
incl
push
sbb
jmp
pop
insb
jno
cs
mov
or
push
lcall
sub
repz
andb
adc
lahf
mov
mov
inc
pop
incl
push
pop
daa
dec
insl
adc
call
mov
mov
insb
outsl
repz
sbb
jg
decb
jae
cmp
push
mov
adc
insl
jp
cmp
or
pop
xchg
bound
lret
xchg
andb
out
xor
jo
mov
das
fs
jmp
test
in
rcrl
test
dec
lds
jbe
jno
add
mov
cld
sub
repnz
ss
push
ret
fisttps
dec
arpl
xor
aad
outsb
inc
icebp
mov
pusha
or
xor
mov
pop
lods
xor
in
insb
xor
ret
push
sbb
mov
test
std
sub
mov
jb
ljmp
inc
in
bound
data16
and
les
out
sub
mov
enter
cmc
or
call
mov
push
lods
cmc
cmc
lcall
xor
adc
fbld
inc
movsl
jo
cmp
add
pop
or
pop
icebp
lcall
lea
and
mov
push
mov
mov
xchg
mov
test
iret
nop
ret
addr16
in
lcall
cwtl
decl
iret
push
andb
std
jb
and
mov
lods
enter
data16
jmp
adc
faddl
mov
adc
rclb
cmc
pop
xor
cmp
incl
dec
sub
jp
and
dec
shlb
mov
xchg
out
cs
sbb
dec
jmp
lcall
xor
jbe
in
pop
imul
push
xlat
negl
out
cwtl
outsb
bound
sar
call
sbb
sti
xlat
ds
hlt
mov
fbld
hlt
push
jno
or
or
push
pushl
mov
sub
outsb
xor
dec
xchg
add
push
std
add
xor
decl
dec
imull
aad
call
xor
ficoml
imull
xor
lds
mov
push
sub
clc
clc
repnz
sub
jecxz
aad
cld
mov
push
js,pn
push
jmp
clts
push
jo
dec
rorb
ljmp
outsb
mov
sbb
push
dec
jns
push
mov
jbe
fucomp
sub
add
sbb
addr16
ret
mov
outsb
fildll
arpl
mov
and
nop
sub
cmc
cld
sub
adcb
push
add
lcall
lods
push
mov
pop
or
repz
dec
fs
outsl
sbb
andl
jge
test
pushl
cld
cmpsb
xchg
enter
cmc
pushl
cmpsb
push
and
imul
lock
lcall
pusha
xor
dec
push
jo
inc
push
cmp
xor
sub
std
inc
and
cmpsb
dec
hlt
push
into
cltd
sbb
es
rcrb
ret
push
in
push
jecxz
mov
incl
dec
dec
cmpsl
es
pop
cmp
dec
aas
xor
incl
sub
push
and
mov
incl
insb
fwait
ss
ret
ror
add
inc
cwtl
push
fidivl
xchg
add
cmp
inc
and
lds
movsb
xchg
dec
xchg
cmp
mov
mov
jne
inc
bnd
add
ljmp
lock
lret
mov
imul
xor
push
loopne
add
sbb
add
add
ljmp
mov
xor
scas
mov
or
mov
jecxz
jo
dec
movsb
out
mov
or
stc
pop
cli
je
cbtw
popa
das
cmp
push
lcall
decb
ret
dec
sub
cmp
xor
outsl
dec
lcall
pop
jb
adc
jle
mov
in
xor
push
cltd
xchg
jbe,pn
enterw
push
leave
jmp
call
fildll
pushl
packssdw
lods
rol
adc
jmp
fisttps
jne
mov
pushf
bound
call
dec
test
std
movsl
fwait
insb
in
arpl
test
mov
mov
adc
jmp
push
sub
outsb
mov
sahf
jg
xchg
in
mov
pop
fwait
ljmp
push
push
popf
adc
mov
adc
int3
in
push
sub
xor
addl
pushl
enter
popa
adcl
mov
bound
add
mov
lcall
pop
mov
and
lods
jp
push
in
insb
ss
xor
mov
jmp
or
pop
jns
xchg
mov
jmp
data16
pop
jmp
add
into
mov
pushf
data16
fmulp
pop
int
mov
lahf
inc
mov
pop
inc
adc
and
stc
cmp
fcom
and
or
sbbl
je
jne
cltd
sub
sti
pop
out
ss
call
mov
shr
inc
scas
cs
push
mov
mov
lcall
sub
jno
inc
insb
inc
repnz
mov
dec
mov
mov
pusha
sbb
sbb
mov
jg
test
ss
push
mov
jo
dec
lods
pushf
mov
repz
dec
xor
pop
cli
xor
fdivrs
sti
xor
jns
mov
cmpsl
mov
add
jmp
pop
out
xor
ret
in
jne
xacquire
sub
lcall
mov
ret
data16
jmp
lds
dec
dec
push
out
mov
xchg
sub
loop
call
fs
pop
inc
andb
cmc
mov
add
or
decl
fdivrl
push
out
jp
dec
imul
adc
or
lock
mov
imul
fwait
jno
scas
jecxz
pop
dec
mov
loop
movsb
decl
mov
jno
es
mov
and
cmpsl
dec
sbb
scas
or
ret
xlat
mov
xchg
mov
cmpsb
sbb
jge
fstps
loope
fcompl
pop
push
hlt
enter
stc
mov
cmc
pusha
lcall
sarb
je
mov
repz
gs
mov
xor
jne
sbb
call
ja
cmp
cwtl
ret
mov
inc
xor
out
out
add
rorl
icebp
incl
scas
adc
ss
push
outsb
shl
es
xchg
lcall
fisttps
arpl
push
adcl
pop
xchg
xacquire
mov
jl
push
aam
jg
lcall
push
std
cmp
divl
add
fcoms
daa
mov
mov
jmp
hlt
mov
add
sarb
pop
pusha
pop
xchg
lods
repz
test
xchg
lret
or
cmc
cmp
xchg
out
lcall
lock
enter
pop
xchg
fildll
pop
dec
push
fsubrl
mov
imul
adc
jmp
adc
pop
lods
ss
cmp
gs
inc
xchg
add
pop
bound
sti
pushl
pop
movsb
clc
daa
mov
in
shll
cmp
es
test
jmp
inc
dec
and
sbb
scas
push
jge
daa
cld
fwait
loop
jg
dec
inc
fs
xorl
js
mov
mov
mov
push
mov
nop
jnp,pn
mov
jmp
icebp
cmp
lcall
inc
dec
fistpl
jae
fldt
lret
leave
imul
enter
add
xchg
incl
or
adc
and
mov
dec
js
fistpl
push
mov
jns
aam
jecxz
mov
cmpb
xchg
mov
pop
mov
call
jle
jo
shlb
add
dec
jo
ret
lahf
inc
sbb
pop
mov
daa
shlb
fwait
cs
push
xchg
adc
movsl
dec
mov
push
add
and
das
incb
xor
cmp
xorl
cli
testb
mov
mov
out
negb
adc
push
test
push
sbbb
fwait
aaa
imul
dec
ja
dec
mov
mov
fisubrl
lods
lods
addr16
not
and
aad
pusha
cmp
lcall
inc
in
and
repnz
ret
call
inc
ficoml
sbb
sub
cmp
hlt
call
rsqrtps
notb
aas
jp
push
cs
out
pop
mov
push
pusha
dec
loope
xlat
jnp
mov
rolb
cli
mov
ret
shrb
lds
into
or
popf
jae
push
pop
pusha
je
lods
xchg
je
push
sbb
loope
adc
lcall
pop
in
pop
mov
leave
xlat
xchg
xchg
cmp
add
dec
adc
mov
ss
fcomp
cli
jmp
xor
sbb
mov
adc
add
push
xor
xchg
mov
xor
fucom
call
inc
xchg
stc
mov
xchg
xchg
enter
shll
addr16
stc
and
inc
or
jmp
jmp
jge
rcrb
fnop
fs
mov
fxam
xlat
scas
and
outsb
push
mov
cli
lcall
pop
imul
out
ja
jmp
mov
ljmp
sub
pushl
loopne
jno
mov
sbb
loopne
adc
jp
sbb
into
adc
pop
mov
in
leave
push
sbb
or
shll
sbb
push
push
lahf
jl
mov
xlat
shll
adc
incl
pusha
subl
test
cmc
aaa
push
sar
inc
out
sub
xchg
scas
xchg
repnz
pushl
popa
push
adc
out
lret
scas
mov
sbb
mov
adc
sbb
add
daa
ss
pop
insl
inc
adc
fbld
pop
test
out
pushl
push
es
insb
xorl
rcr
xchg
js
lds
jb
pop
fnsave
call
aad
repnz
and
mov
pop
out
shll
lret
movsl
sbb
cmc
mov
pop
or
add
and
icebp
or
mov
cli
or
popa
mov
lcall
xchg
test
push
leave
pop
jp
mov
mov
jbe
ljmp
inc
scas
fimuls
ljmp
fcoml
inc
int3
xor
pushf
dec
or
pushl
out
push
icebp
adc
sbb
adc
in
mov
mov
out
inc
or
add
pop
aad
jp
aad
push
pop
push
paddw
dec
jnp
adc
push
push
dec
adc
test
js
jecxz
inc
push
fsubrs
les
cmp
jmp
dec
lock
xchg
into
out
push
pop
leave
mov
call
lea
xchg
sub
jns
cltd
push
popf
push
xor
insl
fisubl
jns
jl
imul
loop
aad
cmp
pop
xlat
sti
jge
gs
js
cmp
sub
pop
test
aad
mov
lcall
mov
add
ret
sbb
xlat
incl
sbb
sub
push
frstor
inc
push
push
xchg
leave
dec
in
dec
pop
push
and
jg
insl
dec
push
call
daa
scas
fwait
call
mov
arpl
mov
pushf
je
aaa
mov
leave
push
and
js
jmp
je
sbb
cmpl
inc
call
adc
fcoml
out
jle
cmp
pop
mov
or
mov
and
cmp
sub
push
sahf
inc
xchg
out
clc
or
mov
inc
test
decl
mov
imul
orl
test
xor
inc
inc
pop
pop
inc
add
jo
xor
push
mov
movl
cmp
mov
es
dec
xchg
in
pushf
es
stos
or
jb
fisttpl
imul
call
pop
or
pop
repnz
push
jb
mov
xor
into
push
jne
aam
mov
jecxz
lahf
dec
dec
cmp
jmp
mov
mov
je
push
jg
call
pop
and
dec
inc
cwtl
xchg
data16
xor
adc
mov
andb
cli
dec
ljmp
pusha
mov
scas
xor
scas
mov
fisttps
insb
sbb
push
lds
inc
sbb
lret
incl
mov
je
dec
hlt
fdivrs
test
push
xchg
xchg
mov
rcl
in
sub
and
push
jp
ds
jl
xor
call
xchg
je
pop
mov
pop
es
dec
xor
mov
iret
aaa
test
xor
orb
dec
xchg
jecxz
pop
mov
ret
addr16
call
ljmp
cltd
inc
xchg
jnp
add
punpckhdq
arpl
and
call
mov
xor
xor
scas
movb
ss
ljmp
out
popa
or
push
lods
dec
add
push
stos
fstps
imul
incl
daa
adc
jmp
xchg
sarb
mov
pushf
adc
inc
aaa
push
iret
pushf
ljmp
repz
inc
xor
adc
adc
add
addb
outsb
mov
rclb
xor
xchg
ljmp
sub
inc
movsb
add
mov
cmp
dec
notb
fmul
mov
das
mov
jmp
imul
dec
rolb
push
fnop
incl
xchg
add
aad
pop
inc
pop
mov
add
pushl
push
stos
addb
sbb
push
mov
dec
ret
addr16
and
mov
jmp
mov
ss
mov
jne
test
mov
jo
fs
xor
das
sar
stos
xor
and
add
sti
mov
insl
mov
incl
cmpsb
mov
out
dec
bswap
and
jb
jae
mov
adc
bound
or
cmp
call
cmpsb
jge
jg
aam
std
lods
test
mov
movsl
fmul
decl
jp
mov
xchg
mov
cmpsb
decl
loop
les
mov
adc
pop
cli
jp
sub
cmpsl
mov
lock
aam
cmp
js
dec
imul
ror
push
xor
outsl
xchg
xor
cli
fcoms
fndisi(8087
jnp
and
xchg
outsl
lds
push
cmpsl
push
dec
mov
jg
mov
push
loopne
jbe
push
dec
out
xchg
sub
or
mov
shr
lret
mov
in
and
mov
mov
loope
jmp
lahf
adc
xchg
cmpsb
mov
lds
stos
popa
data16
adc
push
int
sbb
insb
jne
imul
rcrl
jle
je,pn
xchg
xchg
add
jo
push
ret
inc
lret
mov
std
fdivl
movsl
or
lock
and
scas
das
mov
ss
jg
adc
lock
inc
add
ret
jge
jno
out
cmp
dec
decl
ja
std
mov
aam
test
movsl
inc
imul
arpl
popf
nop
mov
mov
xor
inc
jae
lret
mov
sbb
jg
mov
adc
call
in
aam
stos
add
mov
xchg
scas
loopne
cli
call
mov
jge
xchg
clc
repnz
xor
mov
xlat
enter
sbb
push
fsubl
mov
sbb
jge
adc
push
inc
mov
mov
movsl
int
lcall
xor
into
cltd
shrb
cwtl
jmp
mov
sbb
sbb
mov
lret
call
stc
pushf
out
imul
out
mov
inc
in
hlt
push
lahf
fsubl
xchg
mov
nop
cmp
repz
int
mov
lret
jg
push
lea
cmc
inc
jg
lahf
dec
and
sbb
call
lods
test
xor
sahf
fcomps
repz
mov
inc
and
shlb
pushf
leave
jmp
fistpll
loop
mov
and
jge
aaa
repz
add
loopne
push
fnstcw
int3
sbb
sahf
sub
mov
pop
arpl
mov
cwtl
repnz
sar
sub
inc
outsl
stos
jno
xor
xchg
pop
cmp
lcall
daa
jmp
push
jge
jb
jns
es
incl
call
mov
ret
and
in
inc
push
dec
inc
push
inc
inc
cmp
dec
add
incl
add
mov
xlat
and
sbb
rolb
jo
adc
loope
dec
les
imul
push
movsl
repz
out
mov
pop
push
push
insb
data16
adc
call
push
and
xor
dec
out
ret
sarl
and
push
pop
mov
and
push
mov
add
xchg
inc
xchg
call
dec
inc
pop
mov
mov
jae
jae
int3
xchg
sbb
nop
jae
dec
inc
adc
fildll
addl
mov
jns
out
jne
sbb
ljmp
sar
inc
mov
loop
sbb
sub
aas
mov
inc
insb
mov
into
pop
sbbb
test
lcall
gs
adc
icebp
insb
and
xor
cld
aam
cli
jg
and
ja
aam
jp
and
mov
push
dec
add
cmp
mov
aaa
cmp
outsb
and
push
fucom
js
mov
xor
and
icebp
cmp
lock
sarl
mov
cmpsb
push
sub
xor
push
bound
xorb
or
pop
push
out
out
inc
pop
adc
pop
and
test
push
addr16
pushl
subl
xchg
and
testl
ss
pushl
push
mov
mov
adc
ja
sub
cmp
out
ds
xor
out
and
leave
inc
insb
sub
add
adcb
loopne
addr16
pushl
sub
push
fimuls
mov
sub
jg
repz
push
js
shl
push
int3
adc
jecxz
movsl
push
push
iret
xchg
rcrb
js
sub
jbe
loopne
shll
jmp
mov
adc
adc
sbb
adc
incl
push
sub
push
js
xchg
incl
mov
dec
hlt
and
xor
sbb
jg
lock
dec
lcall
mov
inc
insl
sub
call
xchg
pop
int
adc
test
add
cmp
addr16
cld
sub
and
decl
pop
pop
or
sbb
jb
leave
cmpsl
sbb
adc
hlt
xchg
xchg
incl
add
mov
and
mov
xchg
jae
orl
cmpsl
xchg
aas
and
push
add
loopne
outsb
ret
add
cwtl
jne
add
push
sbb
dec
icebp
pop
fwait
les
jg
xchg
pop
cmp
scas
addb
cmp
xchg
dec
xchg
mov
fisttps
aas
xor
hlt
addl
add
test
loopne
push
inc
xchg
jmp
dec
add
shlb
push
push
inc
outsb
pop
push
mov
ss
addl
mov
rolb
mov
iret
xchg
stos
decl
lds
je
mov
cltd
rolb
lock
jg
lcall
bound
add
dec
mov
mov
stos
call
std
inc
lock
pop
xorb
pop
shll
pop
add
dec
adc
xchg
and
xchg
sar
lcall
test
imul
xchg
push
mov
sbb
push
jae
xor
cld
cmp
pop
inc
xlat
sbb
push
sbb
inc
push
lcall
fcoml
dec
test
adcb
lahf
push
stc
mov
testl
mov
ja
lcall
inc
jae
or
xchg
pop
ret
xor
icebp
sbb
xchg
jp
sbb
decl
les
adc
jo
mov
movsl
and
sbb
lcall
add
pop
xchg
push
or
in
adc
ficompl
andl
lock
pushl
fcompl
mov
inc
test
mov
pop
movsl
inc
or
dec
adc
ljmp
or
jns
ljmp
sub
add
nop
sbb
ljmp
int3
pop
and
xchg
nop
jns
mov
pop
cld
mov
push
mov
pop
shll
pop
push
stc
dec
cmpsl
inc
add
pushl
and
aas
roll
repz
add
cmp
nop
fwait
aas
lock
ljmp
cmp
sub
inc
popf
fistl
jl
mov
xor
mov
fldcw
inc
mov
pushl
xchg
xor
mov
outsl
icebp
cs
add
inc
es
addr16
add
and
filds
xor
addr16
xor
and
pop
mov
shlb
jg
sub
fnsave
cmp
js
jp
push
lods
inc
sub
lea
lods
aad
push
jae
stos
test
lcall
jmp
imul
mov
outsb
fwait
sub
testb
cmp
loopne
repz
fisubl
adcb
and
loop
pop
push
mov
ret
add
sbb
in
dec
pop
sbb
pop
gs
test
adc
ret
push
adc
dec
mov
ljmp
loopne
xchg
add
push
cmpsl
and
add
aaa
xchg
test
dec
inc
and
xchg
pushl
std
sbb
xchg
sbb
sub
out
jae
test
aas
loop
sbb
adc
repnz
jl
adc
mov
sub
dec
call
movsb
xor
sbbl
lcall
or
dec
mov
pop
repnz
fs
sbbb
xor
sbb
push
xchg
dec
inc
je
sti
hlt
jns
cmp
xchg
inc
push
jae
xchg
andb
incl
imul
jne
mov
decl
jl
mov
mov
leave
xor
clc
mov
ljmp
xchg
fildll
adc
addb
jns
in
xor
mov
sahf
xor
adc
test
add
sbb
movsl
xchg
mov
jmp
and
aam
mov
push
popa
push
hlt
xchg
pop
cld
jae
sbb
xor
ficompl
inc
dec
inc
mov
es
inc
dec
inc
mov
mov
cmp
sbb
ljmp
decl
pop
fs
or
cmp
stc
pop
into
adc
or
jg
shlb
fs
out
adc
fcoms
pop
fsubrs
pop
jmp
std
popa
jns
out
cli
lcall
xchg
shll
push
jo
ficomps
adc
inc
push
stos
jo
ljmp
movsb
mov
pop
jne
sub
sbb
sbb
and
lds
push
xor
inc
push
decl
jae
bnd
popa
adc
dec
xchg
int3
add
add
jle
ret
adc
leave
push
call
loope
ds
inc
dec
inc
nop
and
pusha
je
push
dec
ja
insl
add
jmp
mov
adc
fwait
jae
push
insb
repz
mov
inc
push
stc
sbb
ja
outsl
and
lret
xor
addl
cli
mov
incl
sbb
pushf
mov
sbb
xor
pop
jle
ljmp
mov
mov
mov
xchg
push
insb
hlt
stos
cmpsb
daa
and
lcall
sbb
aam
jmp
mov
lcall
push
ret
adc
cld
pushl
jl
mov
pop
pop
add
pusha
lret
fwait
test
sub
ficoml
test
icebp
pop
mov
fcomip
or
jae
and
aaa
push
aad
adcl
pushf
aaa
pushf
push
cmp
or
mov
or
inc
stos
fwait
and
cs
or
mov
fcomps
push
mov
inc
sti
sub
xor
stos
push
sub
jle
sub
imul
xchg
inc
or
adc
js
popa
adc
mov
fnstenv
pushf
mov
pop
inc
loope
xchg
movsl
push
inc
xchg
push
sbb
push
mov
dec
pushl
cld
pushl
cmp
jno
movsb
jns
mov
mov
dec
xchg
dec
inc
sbb
in
push
std
incl
lret
adc
pop
mov
adc
shrb
jge
mov
cld
incl
xor
add
incl
inc
addr16
repz
mov
in
mov
test
icebp
ss
xchg
xchg
sub
inc
push
pop
test
aaa
xchg
jo
cmpsl
cmp
jno
inc
mov
rcr
insb
jmp
cmp
bound
adc
aam
std
inc
adc
add
add
adc
inc
mov
enter
adc
sbb
arpl
aaa
xchg
adc
lds
stos
insl
call
roll
test
insl
icebp
push
movsb
outsb
jg
mov
mov
pop
cmpsb
dec
add
aam
daa
decl
call
inc
adc
lods
fs
jecxz
sub
push
popf
inc
mov
cmpsb
mov
ljmp
inc
int
sbb
outsb
sub
lods
pop
xchg
int
dec
jns
sub
inc
push
mov
jnp
add
jmp
fldt
js
bound
aas
std
outsb
int
addr16
pop
push
sbb
or
fidivs
mov
fwait
xchg
decl
loope
pushl
xor
dec
jb
xlat
jo
push
dec
inc
popa
testl
fisttpll
mov
loope
out
daa
mov
iret
data16
xchg
jle
push
enter
sahf
mov
push
out
orb
add
inc
or
xchg
mov
cmc
pop
lock
sub
add
ljmp
mov
mov
lock
idiv
call
xorb
fs
in
mov
lods
sub
nop
adc
mov
mov
pop
push
dec
stos
push
mov
in
mov
fisubs
xchg
adc
sarb
xchg
and
mov
sub
xchg
cs
jg
sbb
ja
outsl
fsubr
fcmovbe
and
imul
sub
incb
xchg
pushf
out
push
inc
mov
out
fistl
gs
and
lock
push
mov
pop
push
pop
push
das
outsb
sbb
cmpl
je
and
rolb
cmp
fisubs
xchg
mov
mov
scas
push
and
movsl
xor
pop
test
and
outsb
mov
stos
and
int3
les
xchg
add
stos
mov
std
adc
push
xor
xchg
icebp
ljmp
add
xchg
cmpsb
adc
dec
repnz
ja
clc
decl
push
aad
xchg
cmc
in
in
movl
lcall
aas
in
and
loop
cmp
jb
pop
or
pop
jle
jbe
xchg
dec
xor
hlt
cld
pushl
pop
subl
ja
addr16
ljmp
inc
cmp
loope
rcrl
mov
lods
stc
xchg
mov
call
or
outsl
loopne
incl
jl
push
test
mov
fwait
insb
test
out
js
mov
adc
addb
sarb
sbb
rcr
call
lods
lea
xor
mov
int
add
movsl
adc
jge
mov
call
mulb
jle
aas
xchg
sub
sbb
inc
jmp
in
mov
sub
push
mov
mov
orb
lahf
in
sub
sub
lods
fwait
ret
negb
xor
inc
or
xchg
aam
jo
rolb
loopne
sbb
and
outsl
cli
lcall
and
adc
jbe
sbb
dec
adc
sarb
mov
mov
in
call
aas
insb
scas
clc
jno
cmpb
jnp
in
add
or
mov
xchg
repnz
shrl
mov
jmp
loop
cmp
shll
lret
repz
mov
jnp
mov
pop
icebp
aaa
inc
lcall
and
mov
pushl
add
sbb
mov
push
dec
mov
add
leave
xchg
movlps
pushf
cltd
jmp
cmc
lcall
jno
sar
mov
out
decl
cmp
fdivs
mov
fnstsw
and
lret
ss
pusha
shlb
mov
lret
jo
pushl
push
and
call
add
clc
scas
subb
pop
add
imul
inc
jmp
cmpsl
pop
sbb
pushf
mov
into
mov
adc
jg
or
orl
cmpl
cwtl
and
mov
adc
and
mov
fisubrl
ret
mov
and
xor
inc
or
pop
jbe
into
scas
repz
jg
incl
mov
pop
mov
movsl
mov
mov
fists
cld
enter
jb
stos
xchg
hlt
jnp
inc
cwtl
cmp
ucomiss
nop
ljmp
sbb
mov
fisubrl
mov
mov
stos
int3
movsb
xchg
ljmp
push
movsb
jmp
stos
sub
out
sub
test
insl
xlat
fcomps
and
or
movsl
ss
or
test
in
or
jo
ljmp
inc
jne
mov
add
xor
xchg
push
sarb
in
in
test
fnstenv
cld
mov
push
lock
add
int3
cld
dec
sub
in
ljmp
pop
cmc
or
push
cmp
mov
mov
fdivrs
mov
fldcw
push
jo
cmp
aam
imul
pop
sub
shl
or
filds
cmp
adc
inc
ljmp
add
add
xor
adc
cmp
decl
in
jae
fdivrl
out
jb
dec
scas
push
pushf
mov
cmp
dec
das
rcll
cmpsl
jl
lock
jns
xchg
pop
mov
test
inc
pusha
sub
mov
out
cli
sti
mov
lcall
or
dec
sub
add
jmp
shrl
mov
int3
sbb
clc
xor
aaa
fildl
jb
lods
call
sbb
or
aaa
sub
aaa
negl
test
dec
and
dec
xor
adc
cmc
scas
clc
push
jnp
pop
arpl
mov
dec
jmp
push
add
mov
call
jmp
mov
xor
pop
je
or
ds
fisttps
mov
add
arpl
scas
xchg
add
lret
sbb
fdivrs
cld
into
fmull
mov
or
fbld
int
fistpl
jecxz
mov
dec
sarb
jno
mov
rorb
mov
pop
mov
mov
cmpl
aad
mov
push
xlat
add
ljmp
andl
int3
cmpsl
cmp
xor
js
adcb
push
adc
mov
pusha
xchg
fimull
in
sbbb
adc
and
dec
inc
sbb
xchg
test
and
adc
ret
lahf
mov
mov
and
imul
fsubr
leave
dec
jle
leave
aad
mov
mov
cmp
cli
call
cmpsb
push
ret
and
push
icebp
and
pop
inc
xchg
mov
test
cmpsl
mov
sub
test
jle
mov
xor
push
adc
dec
jl
jg
cmpsb
mov
mov
aaa
mov
add
mov
cs
outsl
clc
ljmp
cmp
add
push
inc
lods
xlat
jno
cs
popl
cld
ja
sbbb
cmp
push
sbb
ficompl
push
out
or
cmp
xchg
int3
test
or
test
and
inc
add
fwait
decl
sub
jge
inc
pop
in
push
cmp
jb
push
jg
add
imul
test
and
incl
push
inc
and
inc
and
add
mov
mov
std
loope
test
or
fcos
xorb
xlat
sbb
inc
ja
decl
sbb
dec
lret
push
es
mov
push
pop
enter
or
rcrl
decl
aam
jge
stos
pop
push
jbe
sarb
dec
sub
mov
xchg
aas
test
call
dec
push
sub
cmp
mov
mov
dec
rcr
pushf
enter
inc
outsl
add
decl
xor
push
jne
mov
dec
xchg
push
xchg
push
sub
ljmp
lcall
cmp
pop
dec
xorl
adc
into
or
or
nop
push
mov
std
and
dec
dec
jns
out
out
test
push
xlat
jns
xchg
shrl
fildll
push
adc
pop
jecxz
sahf
mov
adc
int
or
xor
push
pop
test
js
add
enter
insb
ret
add
sub
mov
jo
xor
add
loopne
push
subb
push
shrd
add
xchg
xor
out
cli
jg
aad
xor
popa
sbb
pop
mov
dec
cmpb
dec
add
int3
push
inc
leave
movsb
add
or
xchg
decl
cmp
xchg
adc
sahf
mov
test
call
lods
jp
icebp
push
pushf
popa
or
decb
imul
xchg
pusha
xor
ljmp
and
lods
xchg
mov
lds
lods
and
xchg
stos
mov
and
mov
jecxz
dec
dec
cmp
mov
addb
ljmp
daa
fisttpl
int
adc
push
dec
enter
sub
push
mov
add
jb
xchg
decl
or
movsb
lock
sub
adcl
rolb
inc
pop
bound
ljmp
inc
adc
rolb
sub
lock
jne
sbb
sub
push
orl
add
scas
xor
jo
pop
or
add
fcompl
testl
push
rolb
and
shrb
ss
xor
jmp
pusha
mov
push
inc
cmp
test
push
mov
inc
jo
ucomiss
shrl
repnz
dec
decl
stos
mov
pop
xchg
add
pusha
ss
add
icebp
pushl
xchg
inc
leave
popa
cwtl
push
mov
ds
push
xor
call
into
xlat
dec
mov
mov
stos
mov
adc
mov
or
xchg
push
pushl
cmp
sbb
pusha
xor
imul
ss
mov
cmp
mov
lea
cmp
test
xorl
movsb
add
fcomip
popa
add
jno
test
addr16
pushf
iret
mov
pushl
pop
inc
adc
pushf
pop
jb
push
pop
add
jl
pushl
pushl
inc
test
inc
rclb
and
xor
inc
call
inc
pop
mov
test
pushf
sub
cwtl
add
aam
fsubrs
sarb
rorl
movsl
jl
mov
test
inc
cmp
adc
inc
jp
jns
xchg
repnz
cmp
jmp
mov
xchg
sub
sub
sti
cltd
lahf
inc
pop
scas
shlb
dec
xchg
dec
movsl
push
add
decl
jb
mov
mov
cmpsb
or
pop
dec
sbbb
fs
adc
pushf
stc
cmc
jl
in
xor
pushf
cmpsb
mov
stos
in
and
decl
insb
mov
and
mov
scas
clc
decl
adc
sarl
pop
fstpl
mov
js
fnstsw
shlb
lcall
mov
cmp
je
call
lahf
in
mov
cli
and
and
pushl
cld
orl
adc
nop
shlb
add
js
and
ds
js
push
inc
mov
pop
or
nop
inc
pop
inc
or
sbb
pushl
roll
xor
in
arpl
out
push
xlat
cwtl
inc
xor
xchg
cmp
or
mov
inc
mov
pop
movsl
mov
shl
ret
enter
pop
xor
jp
adc
mov
ljmp
clc
call
dec
add
pop
mov
mov
daa
aas
stc
cmpsl
jb
sub
ljmp
int3
add
push
jecxz
pop
mov
fsubrs
xor
andl
xorl
and
scas
pop
jb
pop
fstpt
mov
decl
dec
pushf
push
pushf
mov
mov
or
lock
aad
daa
aaa
sti
popf
xor
adc
jl
mov
adc
icebp
inc
or
add
push
incl
insb
cmp
nop
adc
stos
cmpsb
pop
sbb
sbb
and
loope
ja
add
loope
andb
jle
push
arpl
ljmp
sbb
jo
pop
rolb
pop
cltd
mov
lods
ljmp
jnp
or
movsb
aaa
dec
incl
stos
sti
pusha
mov
xorb
out
and
sahf
mov
xor
pop
xchg
sar
arpl
test
xor
mov
add
incl
adc
cmp
xor
mov
or
or
and
incl
scas
and
mov
mov
sti
inc
mov
xor
jg
jno
add
popf
stos
sarl
stc
fwait
ds
add
ljmp
cmp
mov
jp
xchg
nop
scas
loope
addr16
xorb
or
cld
decl
sbb
xor
enter
sub
mov
dec
or
fistl
push
push
nop
test
repnz
test
fistps
mov
cmp
add
addb
push
faddl
fadds
int
mov
pushf
scas
dec
in
lods
xor
dec
push
inc
fs
mov
loop
stos
popa
cmp
mov
jmp
lods
ljmp
add
or
mov
cmc
decl
sub
stos
enter
mov
pop
mov
mov
mov
sti
or
lods
xchg
sbb
mulb
pop
inc
mov
fidivs
pop
mov
and
mov
add
jg
ja
xchg
pushf
xchg
adc
call
mov
popa
jmp
aaa
lret
test
je
into
cld
jle
dec
cwtl
test
sub
lcall
sti
or
add
test
sub
std
inc
nop
cmp
dec
loope
leave
bound
mov
rcr
pop
rorb
cmp
sbb
cltd
adc
xlat
ja
ljmp
cld
test
je
inc
cmp
popf
mov
and
js
cmpsl
mov
inc
xor
shll
hlt
mov
pop
inc
xchg
stos
movsb
fwait
mov
mov
and
pushf
mov
ljmp
adc
mov
stc
or
loope
pop
leave
or
mov
pop
xchg
incl
aam
gs
sbb
test
lods
mov
or
decl
jae
dec
lret
inc
dec
lret
adc
cmp
clc
adc
sbb
pushl
imul
imul
call
inc
daa
dec
dec
enter
ds
inc
add
ret
xor
mov
sbb
call
xchg
bound
sbb
adcb
add
sub
add
pushf
cmp
out
into
fstpl
pop
mov
jmp
stc
sub
dec
sub
inc
ret
rorl
es
xor
jmp
mov
ljmp
inc
adc
je
mov
lcall
lret
sbb
dec
or
repz
aam
inc
pop
mov
incl
inc
leave
sbb
cmp
lret
aaa
nop
js
dec
adc
cmp
incl
or
pop
scas
stos
insb
or
sub
dec
or
and
push
cli
call
loop
loope
mov
xchg
or
dec
rcrb
inc
gs
dec
loopne
mov
or
add
incl
pop
jge
cwtl
arpl
xor
sbb
subl
adc
nop
call
ljmp
es
add
add
shrb
int
cli
lret
sbb
add
decl
mov
mov
pop
push
lahf
xchg
inc
lahf
jl
pop
sub
mov
decl
mov
sbb
mov
jae
dec
xor
lea
cld
movsl
mov
dec
cld
les
lret
inc
scas
cmp
je
incl
ss
shrl
out
xor
popf
dec
mov
adc
inc
stos
jecxz
call
sbb
cmp
pmullw
fdivr
cmp
dec
mov
cwtl
popa
push
push
movsl
inc
pushl
call
push
xchg
dec
dec
rcll
xor
xor
xchg
pushf
inc
sub
inc
subl
mov
rcrl
sub
int
xor
nop
mov
stos
sub
mov
adc
incl
adc
aam
add
add
cli
mov
inc
in
daa
mov
push
popa
xor
pop
ljmp
mov
cltd
inc
clc
jecxz
int
ljmp
call
loop
negb
aaa
xchg
movsb
push
dec
mov
fcoml
test
cmp
jmp
inc
loopne
inc
mov
mov
adc
std
jg
dec
jle
mov
mov
xor
push
cmpsl
ljmp
fs
fisubrl
fimuls
lds
and
je
or
incl
mov
sbb
pop
in
add
xchg
inc
rcr
or
pop
mov
fdivrl
decl
stc
and
test
lods
dec
or
dec
dec
dec
aam
xor
add
loope
mov
and
ljmp
orl
fmull
out
ljmp
loop
popf
or
adc
xchg
lea
jmp
ret
fcomps
leave
lods
bound
shll
and
or
rcll
lcall
sti
add
lods
pop
xchg
inc
mov
scas
test
bound
lcall
push
cld
mov
mov
fistpll
cltd
inc
icebp
shrb
jg
shlb
push
push
ret
fstl
adc
ficompl
fwait
lea
mov
and
sub
jecxz
pop
pushf
sbb
outsl
dec
and
cltd
or
mov
outsb
mov
ficompl
int
sar
pop
icebp
icebp
scas
ret
lock
cs
xchg
or
xchg
inc
push
and
lods
adc
add
incl
push
xor
sub
popa
pop
xchg
cmp
lret
pop
mov
mov
pop
test
movsl
mov
in
in
mov
push
jle
sbb
add
lock
incl
arpl
in
add
adc
sub
inc
or
mov
jg
sbb
fisubrs
sub
ret
inc
cmpsl
add
adc
push
incl
popa
in
iret
sbb
push
sbb
mov
xchg
bound
int3
cmp
xchg
int3
lahf
cmp
or
jmp
dec
lods
arpl
call
sbb
inc
or
fs
and
xchg
jb
push
das
add
decl
int3
jmp
mov
inc
mov
sub
push
mov
jmp
mov
fwait
aad
adc
incl
loopne
lcall
dec
push
push
xlat
in
out
sub
test
das
nop
hlt
pushf
ljmp
sub
add
sar
das
sar
inc
inc
lcall
jo
mov
mov
in
adc
jge
xor
fcomps
popf
cmp
scas
pop
std
xor
call
sbb
ljmp
loopne
mov
clc
pop
rclb
inc
inc
mov
sahf
fs
out
push
sub
sub
pop
and
cmp
cmp
mov
inc
mov
mov
mov
cs
sub
cmp
pop
xor
stos
decl
nop
mov
pop
cmp
sbb
mov
idiv
loop
or
sbb
call
xor
test
aas
dec
and
inc
loopne
and
inc
sub
and
xchg
dec
cld
jmp
xchg
jmp
ret
fstpt
bswap
xchg
addr16
push
aad
outsb
mov
test
call
into
mov
lock
adc
and
lret
and
in
mov
sti
stc
add
rolb
dec
xor
fcomps
pushl
outsl
dec
test
out
mov
dec
adc
adc
cmp
mov
adc
mov
push
xchg
out
mov
pop
pushl
add
shll
mov
push
enter
adc
and
mov
call
call
adc
insb
repnz
xchg
lcall
into
cs
jp
iret
lcallw
inc
dec
out
js
stc
sub
pop
pusha
xchg
mov
mov
jmp
push
sbb
mov
test
mov
fmuls
pushl
push
loopne
shll
dec
fnstcw
inc
out
pop
cmp
jge
xchg
mov
decl
sbb
push
test
pop
movsb
mov
scas
cli
sbb
int
xchg
cmp
mov
xor
jae
push
in
jo
sahf
pop
or
and
insl
lcall
pop
jmp
add
or
jo
mov
cld
inc
je
add
pushl
or
mov
mov
insb
dec
leave
lods
add
js
cld
decl
and
iret
into
mov
inc
jge
lock
sbb
fisubl
adc
repz
lcall
mov
sub
icebp
jmp
mov
fstpl
sti
jecxz
cmc
leave
je
leave
lret
jns
scas
fsubrs
mov
xchg
cmpsb
mov
enter
movb
aaa
shlb
fdivrp
decl
sbb
out
aam
xchg
call
movsb
cld
add
xchg
xchg
adc
outsl
mov
fcomip
incl
push
outsl
ds
and
pop
loop
fwait
pop
mov
out
mov
ljmp
cmc
lret
aam
jp
add
roll
sub
inc
popf
sbb
js
mov
stc
daa
mov
testl
sbb
int3
flds
mov
xchg
aad
fs
lds
jne
lock
xorb
jmp
in
in
mov
sbb
add
xchg
into
outsl
cwtl
fwait
jmp
and
out
sbb
xor
call
addr16
aad
divb
popf
les
or
out
adc
mov
rorl
sbb
icebp
in
push
jbe
push
fadds
sbb
and
sub
dec
scas
sbb
int3
add
test
fisubrs
mov
aas
lcall
bound
push
sub
pop
cmp
or
xlat
popa
jns
jle
mov
mov
decl
xchg
xor
mov
out
inc
push
and
or
sbb
js
sbb
incl
mov
repnz
pop
in
adc
pop
dec
jmp
xchg
ljmp
movsl
loopne
jmp
and
ljmp
das
fwait
fs
jno
jns
dec
cli
jmp
dec
lods
mov
cmc
aas
or
fsubrs
or
ljmp
jmp
or
adc
pusha
loop
sbb
push
pop
mov
loopne
decl
lock
mov
in
add
inc
push
jb
addb
pop
test
cmp
incl
push
adc
stc
ret
in
xchg
cmp
mov
or
inc
hlt
orl
jg
mov
cmp
xor
or
adc
insb
enter
les
mov
jmp
leave
cmpsl
cmp
xchg
insl
dec
cmpsl
outsb
jmp
in
mov
incl
cld
mov
jne
rcll
pusha
sbb
test
jecxz
cwtl
jo
pushl
dec
xchg
cwtl
jg
add
movsl
adc
loope
pushf
cmp
cmp
decl
add
jge
repz
aad
pop
dec
in
push
icebp
adc
sbb
aas
mov
lcall
pop
inc
dec
fldenv
in
je
adc
inc
xchg
or
loop
nop
pop
loope
lcall
cli
xchg
sbb
jg
pop
cld
stc
push
out
shl
into
jo
cmc
testl
mov
out
jg
push
test
sbb
enter
out
mov
add
sub
mov
sbb
lcall
jae
insl
rcrb
jno
insl
push
push
gs
push
xchg
imul
inc
sbb
ljmp
fcoms
pop
lock
jl
sub
dec
cmp
pop
push
mov
adc
testb
adc
jmp
pop
sbb
mov
sbb
hlt
xchg
inc
xor
sbb
mov
push
out
jae
lds
nop
mov
jmp
movsl
movsb
pop
pop
test
xorl
xchg
lea
inc
jae
xchg
pop
xchg
xor
les
imul
jmp
dec
mov
xchg
out
test
test
sub
test
outsl
addr16
es
incl
xor
or
xchg
out
lods
or
fldenv
jmp
cld
lock
aas
ds
sbb
mov
clc
pusha
pop
js
or
lock
std
jmp
sti
popf
mov
popf
sahf
mov
popa
dec
push
or
mov
js
xchg
dec
out
mov
mov
sahf
mov
jge
jbe
push
mov
mov
pushl
xchg
out
xchg
xchg
jle
jmp
popf
inc
and
out
shll
call
pop
pop
cmp
clc
pop
insb
inc
ret
ljmp
cltd
cltd
lret
ds
add
jmp
sbb
aad
fcoms
inc
and
push
push
inc
push
inc
sbb
call
stc
add
cli
out
pop
mov
out
call
mov
insb
jne
or
ljmp
xchg
lret
add
bound
bound
jbe
inc
fcoml
push
cmp
fsubl
xchg
ss
push
cs
xor
jg
filds
push
cltd
in
xchg
lods
int
ja
ja
cmp
cmp
jo
mov
push
mov
ljmp
xor
loope
add
cmp
shr
xchg
outsb
mov
ret
adc
push
sti
fwait
dec
jecxz
mov
mov
jg
add
push
inc
adc
cld
in
mov
mov
ds
icebp
rcrl
std
cmc
enter
cli
pushl
clc
fnsave
cmp
out
ljmp
push
cmc
lds
outsl
jl
out
movsb
notb
ret
das
mov
cld
ljmp
adc
jmp
push
push
mov
mov
and
jmp
jmp
xchg
test
fwait
or
xor
adc
lcall
xor
xchg
add
sbb
ljmp
push
push
xchg
or
add
andb
mov
pop
mov
js
inc
shll
and
fwait
xor
inc
cs
xchg
dec
adc
outsl
subb
sub
mov
lahf
es
jmp
dec
lea
xchg
jp
lods
bound
push
pop
hlt
and
add
xor
mov
loop
out
mov
push
sub
sbb
jl
cmp
pop
popf
pop
add
ja
jb
shrl
and
xchg
adc
and
lcall
mov
andb
xchg
aam
movsb
or
dec
cmpsl
xchg
sahf
jl
ljmp
adc
stos
mov
push
mov
sub
pop
lret
dec
mov
decl
aaa
ja
pusha
inc
add
lea
call
shl
call
xor
jle
dec
xor
jecxz
aad
imul
fists
inc
mov
movsb
shll
xor
inc
ret
iret
mov
jae
adc
xchg
fmul
addb
xchg
rcl
sub
dec
push
lea
dec
adc
ljmp
jmp
cli
push
cmpsl
mov
inc
xor
and
xchg
or
decl
cmp
shll
rcrl
sub
in
or
cmp
decl
inc
repz
mov
repnz
xchg
lret
mov
leave
nop
mov
pop
mov
jb
lahf
add
and
and
sbb
cmpsl
sbb
call
call
xchg
dec
lods
push
jo
dec
enter
push
sub
test
jg
xchg
stos
push
stos
and
int3
adc
sub
mov
cli
incl
add
or
jb
test
fimuls
cs
mov
ljmp
mov
xor
push
xor
sbb
enter
stos
aam
loop
cmp
in
dec
sbb
push
add
movsl
call
cltd
adc
mov
jg
xor
adc
enter
adc
and
mov
jno
inc
stc
in
lods
jmp
das
clc
mov
mov
fsubl
xor
or
loop
in
xor
out
decl
cmp
mov
fdivl
in
movsb
inc
push
dec
int
push
jl
mov
push
xlat
mov
testl
scas
xchg
adc
sub
popf
xchg
test
add
incl
jmp
xor
xchg
xlat
or
xchg
and
or
adc
popa
fidivl
push
je
pushl
fldl
lea
fwait
add
std
fs
xchg
fdivrs
fs
mov
aam
cmc
push
cld
mov
int3
inc
popa
mov
in
ret
call
iret
or
sbb
ss
pop
fmull
decb
repz
jno
pop
push
sub
fs
repz
adc
and
ljmp
fadds
xlat
mov
push
mov
dec
in
or
decl
loop
xchg
fldcw
pop
pop
mov
ret
test
stos
dec
dec
lcall
scas
js
sbb
ds
sbb
xor
in
xor
lods
xacquire
xchg
ljmp
jg,pn
push
push
pop
clc
xor
ljmp
mov
push
mov
call
cmp
push
inc
shlb
add
jmp
sub
inc
pop
sbb
frstor
nop
cmp
and
fs
pop
gs
sub
ljmp
xor
xor
xchg
mov
push
ds
inc
ficoms
sbb
ja
lcall
cwtl
pop
inc
pop
inc
andb
js
inc
adc
lds
out
xor
fdivp
daa
mov
mov
data16
xchg
mov
cmp
inc
sub
in
jmp
pop
sbb
popa
jne
lods
testl
aaa
out
outsl
pop
sub
pushl
mov
in
mov
pop
sbb
mov
mov
xlat
jp
jb
jg
jmp
out
shll
leave
scas
add
pusha
pop
jnp
xor
cwtl
mov
ljmp
mov
and
add
insl
es
arpl
shrb
loope
or
mov
add
insb
jl
mov
mov
push
fisubs
mov
xor
sbb
mov
repnz
or
rolb
push
add
dec
adc
xchg
mov
into
inc
inc
push
stc
sbb
pop
and
aaa
fiadds
xor
dec
or
mov
stos
ljmp
fs
cmp
cltd
sbb
roll
mov
gs
call
aaa
or
sarl
sbb
call
cwtl
or
pusha
repnz
mov
lcall
test
ror
mov
cmp
dec
loope
xlat
outsl
in
jne
pop
xchg
mov
aas
imulb
mov
push
enter
int3
push
lods
lahf
inc
mov
decl
incl
int3
test
fildl
inc
test
adc
adc
adc
lret
add
sbb
pop
sti
jge
imull
fcomps
outsl
int3
cmpl
pop
in
ljmp
or
add
pop
sbb
pop
pusha
rclb
orl
ljmp
xor
loop
or
jns
movb
jmp
push
sbb
jp
push
lods
jmp
and
fwait
es
sahf
jp
mov
orl
push
hlt
loope
sahf
loopne
jne
jg
mov
insb
pop
mov
mov
dec
add
push
aam
dec
xorl
les
rorb
cmp
sub
mov
je
lcall
mov
push
rcrl
inc
pop
mov
mov
daa
sub
std
adc
loopne
jno
and
pop
cld
ljmp
inc
sub
aam
shlb
add
mov
or
ss
decl
mov
ss
ja
add
ja
test
cwtd
pop
dec
jmp
and
dec
inc
lock
push
sar
das
adc
adc
rorl
mov
in
and
cmc
ret
test
je
incl
add
dec
add
add
loope
lea
mov
nop
test
inc
dec
fdivr
inc
adc
in
std
xchg
dec
jno
out
adc
rcl
sbb
push
ret
fsubl
decb
fiaddl
adc
inc
push
sub
mov
imul
ds
and
and
sbb
shrb
fimull
and
test
scas
jns
test
fildll
dec
mov
inc
xchg
and
inc
test
sub
pusha
push
fs
add
icebp
roll
loopne
clc
enter
add
test
lods
mov
dec
out
pop
sub
lock
xchg
loopne
es
hlt
into
or
jo
js
hlt
inc
call
sbb
rolb
ljmp
pop
out
or
arpl
pop
gs
inc
sbbb
mov
cs
fsub
fs
in
xlat
lods
xchg
lcall
or
inc
mov
fildll
movsl
lahf
in
pop
pusha
mov
pop
add
pushl
inc
ret
push
inc
scas
popa
cmpsb
nop
vmovupd
enter
and
call
xor
and
je
aam
mov
and
push
popf
daa
pushl
mov
pushf
icebp
test
jb
pop
push
fcomps
push
push
inc
adc
fs
push
shl
incl
dec
subb
cmp
pop
or
repnz
inc
subb
jecxz
pop
xorb
add
ds
decl
fmull
aam
xor
push
jbe
inc
addb
mov
dec
push
lcall
in
mov
lds
add
hlt
call
cld
fmuls
pop
shlb
rcll
nop
mov
mov
insl
ljmp
dec
je
sbb
dec
dec
pushf
push
in
inc
in
cmp
push
adc
sub
push
sar
ljmp
nop
lock
sar
icebp
movsb
sbb
call
sub
iret
and
jnp
cmpsb
adc
jmp
insb
adc
cmp
outsb
notb
mov
xor
dec
and
ljmp
fstps
ss
data16
pop
push
test
ds
test
ficoms
xor
jp
ja
fwait
cmpb
cld
out
cmp
pop
insb
dec
cwtl
lcall
and
mov
jp
into
jle
cwtl
ret
scas
in
lods
and
test
imul
test
rorl
and
incl
sub
fs
dec
sbbl
mov
and
mov
jg
movsl
js
sub
leave
andl
xlat
fnsave
push
push
jmp
mov
jo
cmpsl
ja
xchg
dec
add
dec
in
loop
loopne
lcall
loopne
xor
sbb
jns
movsb
mov
pop
mov
pop
icebp
cwtl
popf
les
push
ljmp
jae
pop
and
dec
mov
aad
imul
pop
push
xlat
jae
xlat
sahf
fisubrs
mulb
add
call
adc
sub
movsb
cmp
xor
sub
les
les
mov
sub
inc
cmp
add
je
jmp
and
sbb
jp
ja
jecxz
jge
pop
xor
and
popa
pop
je
orl
cli
dec
and
inc
call
je
aam
inc
int3
mov
movsb
xchg
push
xchg
sbb
sbb
fstpl
sbb
mul
leave
in
dec
push
sub
stos
out
stos
dec
lods
pop
mov
aad
mov
bound
mov
push
loope
xchg
ljmp
mov
fwait
stos
sbb
mov
sbb
cwtl
cmpsl
pop
push
lcall
sub
lods
lcall
dec
push
test
jle
lahf
loop
lcall
sub
mov
ret
mov
inc
or
mov
fwait
outsb
mov
xchg
es
lcall
lret
mov
xchg
mov
pop
xor
arpl
test
mov
mov
iret
xchg
jecxz
loopne
push
push
mov
ljmp
movsl
call
imul
cli
push
mov
rcl
icebp
sub
fldenv
xchg
and
pop
std
sbb
inc
call
insl
hlt
fstpl
push
in
jecxz
in
mov
sub
and
sub
scas
inc
dec
push
lods
sub
and
rolb
jmp
cs
jo
mov
sahf
data16
fbstp
rol
repnz
ss
lea
mov
jg
sbb
cs
pop
dec
scas
insb
fs
dec
decl
push
out
and
iret
sub
ljmp
enter
mov
shlb
lret
sbb
ret
jle
sbb
fcomip
adc
push
scas
inc
aaa
push
pusha
lods
dec
call
cmp
shrb
arpl
jg
incl
push
insb
imul
or
push
adc
xchg
inc
lea
ljmp
jge
lods
push
icebp
xlat
xorl
pop
adc
xor
nop
adc
fisubrs
push
lock
decl
sahf
xchg
lret
adc
adc
mov
and
push
fldcw
ljmp
push
push
and
ss
es
pop
mov
data16
mov
sub
or
int3
xor
jo
rorb
add
lcall
mov
ljmp
lds
jae
sbb
jns
mov
cli
inc
mov
sbb
ret
decl
xchg
faddl
inc
scas
adc
sbb
xor
jl
lea
mov
pop
xlat
pop
inc
test
xchg
test
jmp
mov
push
das
clc
dec
ds
or
xchg
sub
xchg
or
not
in
pushl
xchg
divl
push
inc
stos
xchg
lods
jb
pop
add
and
bound
inc
fcmovnb
mov
pushf
sub
jnp
mov
insl
sbb
lret
inc
jb
jg
fists
popa
dec
pop
sbb
mov
dec
xchg
dec
push
mov
xor
aaa
and
jo
sbb
je
or
jg
lret
das
bnd
dec
mov
daa
mov
ret
pusha
imul
pop
lock
lcall
mov
dec
pop
out
test
push
pop
cmp
icebp
sub
sbb
sahf
fidivl
pop
sub
jg
xchg
adc
and
pop
inc
xchg
pop
or
aad
mov
xchg
xchg
push
aad
sbb
mov
xchg
push
inc
filds
add
mov
pushl
popf
push
and
imul
jbe
xor
ret
jmp
dec
dec
daa
imul
jecxz
test
xlat
adc
and
xchg
sbb
dec
scas
subl
outsb
inc
jmp
jno
dec
stc
incb
inc
insb
adc
call
jle
pop
adc
jp
mov
push
push
xor
jg
test
addl
rcll
add
inc
cltd
pop
push
rcll
test
stos
incl
push
repnz
into
mov
or
cmp
mov
cs
xor
pop
je
incb
mov
add
xchg
pushl
cmpsl
sar
pusha
xchg
filds
psubsb
shlb
out
js
andl
popa
es
dec
push
jmp
mov
xlat
lock
xlat
mov
fcomp
fs
mov
inc
xor
sti
pop
in
pop
loopne
or
and
jge
mov
sbb
jmp
test
incl
and
xchg
sub
movsb
bound
mov
push
mov
mov
pop
stos
mov
fiadds
les
push
stc
cmp
and
shlb
scas
cli
in
rolb
pop
and
dec
add
popf
jmp
mov
cmpsb
aad
inc
sub
rcl
adc
push
and
xchg
pop
arpl
pop
jo
jmp
testb
xor
test
xchg
push
jg
pushf
jl
jbe
and
das
and
dec
add
xor
popf
leave
jo
dec
out
jb
pop
pop
shlb
push
insb
jb
fiaddl
mov
idivl
test
dec
fcompl
and
mov
xor
fdivrp
pop
hlt
decl
mov
out
pop
or
mov
sub
xor
sbb
jbe
pop
push
sahf
fwait
adc
shl
popa
adc
and
je
sub
add
mov
mov
cmp
sti
mov
xchg
popf
add
push
sbb
hlt
jmp
ret
test
aad
hlt
sub
pop
js
cmp
jo
pop
jo
hlt
pop
cmc
xor
shll
mov
push
stos
pop
clc
insl
sub
dec
xchg
mov
negb
mov
sub
pop
and
decl
in
push
clc
and
lcall
cmp
insl
push
mov
cmp
mov
decl
addr16
lahf
sub
xchg
enter
push
pop
xor
sub
xchg
jnp
mov
incl
mov
ljmp
cmp
and
fwait
lret
insl
cmp
cmp
out
pop
xchg
popa
mov
pop
cld
sub
hlt
fistpll
adc
add
adc
scas
cli
fcomip
sbb
inc
jl
aaa
jg
fisttps
lods
pop
adcl
test
test
mov
in
popf
call
adc
xlat
sub
mov
sar
incl
movsb
shlb
pop
mov
mov
sub
jge
fcomip
push
ja
das
fdivr
decl
push
dec
mov
and
xchg
xchg
push
stos
sar
ljmp
sti
cmpb
aas
or
pop
cmp
xor
test
or
decl
fmul
dec
mov
adc
sub
push
mov
push
mov
inc
mov
pop
test
pop
in
sti
addr16
inc
cmp
lock
inc
addl
add
ljmp
incl
add
loopne
xchg
add
inc
adcb
add
jno
enter
push
loopne
movsl
movsb
mov
mov
and
rcl
add
or
add
push
sub
add
mov
loope
xchg
add
mov
cmpsl
or
xor
ljmp
jmp
sub
mov
pop
mov
mov
daa
xchg
sahf
cmp
stos
push
decl
sbb
arpl
dec
inc
rcl
sti
mul
dec
xchg
jg,pn
and
and
ret
rclb
cwtl
mov
pop
xchg
in
xchg
pop
inc
pusha
fldz
jecxz
sub
pop
jle
das
adc
sarb
add
jae
in
xchg
xlat
dec
fnstenv
pushf
outsl
fstpt
and
jl
notl
lea
loopne
inc
insb
call
popf
and
push
add
pusha
xlat
scas
pavgw
ljmp
sbb
decl
dec
clc
adc
and
cmc
jecxz
dec
push
cli
push
jecxz
pop
iret
xor
cli
stc
in
jo
stos
lcall
mov
inc
add
mov
jnp
test
mov
or
ljmp
xchg
sub
xor
inc
shlb
imul
mov
add
and
lret
movsb
lcall
and
jno
into
add
pop
pop
xorl
fs
mov
mov
mov
ret
push
ret
leave
xchg
or
mov
insb
jmp
mov
cmp
xchg
or
test
jbe
jno
fstl
repz
fdivrl
jmp
inc
cmp
cs
mov
cmp
insb
dec
cmp
je
outsb
sar
dec
mov
rolb
jo
mov
sub
incl
mov
and
and
dec
cmp
push
fsubr
lds
leave
jmp
stc
mov
dec
dec
mov
mov
add
sbb
cmpsl
lea
movsb
es
lods
out
dec
cmpsl
xchg
sbb
rorl
out
clc
iret
sub
ds
sub
les
movsb
test
inc
stos
push
enter
mov
push
cmpsl
cmp
icebp
inc
decl
mov
push
mov
scas
and
pop
aaa
sub
lcall
ficompl
adc
cmp
pop
stos
insb
int3
inc
cmp
mov
clc
lods
pushl
mov
shrb
xor
fidivrl
je
or
cmp
sbb
or
stc
inc
leave
inc
movsb
mov
decl
andl
xchg
inc
mov
sbb
dec
aaa
mov
sub
pop
jl
addb
incl
sbb
inc
sub
test
icebp
call
cmpsb
mov
mov
fdivl
daa
inc
popf
xchg
ret
jmp
lcall
jp
jb
mov
sbbb
pushf
incl
test
mov
lret
pop
mov
outsb
sti
insb
inc
in
pop
outsl
decl
xor
xchg
in
add
mov
jo
pop
jecxz
test
dec
idivb
xchg
test
cmp
incl
fnsave
push
in
xor
imul
jns
sti
or
inc
cmp
loop
out
stc
cmp
gs
xor
dec
xor
dec
cwtl
inc
adc
mov
mov
pop
hlt
pop
pop
jl
push
rcrb
insl
xchg
ljmp
int3
push
pop
mov
out
pop
or
push
mov
les
enter
js
nop
fwait
and
mov
loop
nop
mov
das
shlb
loop
aad
shl
daa
pop
cld
loopne
and
mov
pushl
jb
dec
mov
jle
test
rcrb
jp
and
or
sub
scas
call
nop
cltd
out
pop
inc
and
fistpl
xchg
jb
decl
mov
xchg
and
xor
inc
push
push
cmp
dec
push
jp
pop
cwtl
jae,pn
int3
inc
lea
iret
test
adc
sub
dec
sbb
cmc
incl
in
mov
popa
or
pushf
sub
sbb
add
mov
mov
pusha
lea
stc
arpl
cld
enter
pop
push
pusha
clc
cmp
push
push
cmpb
aaa
dec
mov
lods
jb
in
test
clc
or
inc
inc
outsb
jecxz
shll
mov
pop
shrb
mov
xchg
clc
push
mov
sub
mov
hlt
and
xchg
push
es
mov
push
adc
incb
and
test
ljmp
leave
dec
sbb
inc
xchg
lods
push
test
or
dec
adc
mov
loop
enter
in
xor
push
xchg
and
jmp
mov
dec
cmp
xchg
add
or
dec
mov
jnp
fistpl
outsl
mov
js
movsb
mov
cmp
cmp
mov
mov
add
mov
int
sub
and
loop
jmp
adc
dec
or
inc
mov
in
je
lret
outsl
outsb
out
movsl
cs
std
test
data16
sub
lock
jmp
sbb
or
clc
inc
sbb
dec
mov
xchg
ljmp
mov
rclb
xchg
push
int3
je
sub
xor
subb
lret
mov
outsl
jne
add
ljmp
or
adc
cwtl
aad
pop
cmp
les
xchg
scas
mov
adc
xchg
lds
aam
adc
or
fcomip
xchg
mov
test
mov
call
ljmp
push
shl
and
jae
add
xor
jb
cmc
pop
repnz
sub
xchg
sbbl
xor
stos
pushl
mov
popf
cwtl
mov
mov
push
xor
push
lahf
cld
xor
dec
jg
lock
mov
notb
in
xor
adc
mov
jmp
out
xchg
mov
dec
xor
lock
fdivp
lcall
cmp
sbb
jae
ja
push
jl
xorb
add
cmp
mov
call
add
addb
lea
adc
and
addr16
sub
bound
pop
lods
scas
push
in
decl
push
imul
mov
aad
enter
loope
aaa
push
mov
xor
pushl
movsb
mov
pop
push
mov
loop
pop
push
ljmp
pop
ljmp
in
mov
inc
ret
and
shrb
adc
fistl
inc
in
rorb
jmp
sub
mov
sbb
pushl
out
mov
adc
adc
call
icebp
fwait
inc
or
add
arpl
in
adc
fiadds
jno
lock
call
mov
das
int
push
sub
xchg
hlt
push
xor
push
incl
pusha
cmpsl
ljmp
hlt
test
pop
xchg
mov
scas
pop
mov
inc
dec
inc
dec
mov
push
adc
cmp
xchg
movsl
inc
stos
sahf
adc
jbe
lods
int
pop
jbe
jns
jp
adc
ds
jg
mov
int3
sahf
sahf
inc
insb
sbb
out
nop
mov
mov
add
jp
pop
pop
push
stos
repnz
lcall
mov
dec
cltd
mov
dec
xchg
fiadds
lds
loop
lret
dec
cs
mov
call
in
lret
xchg
cltd
hlt
and
mov
mov
mov
xlat
idivl
push
jl
jmp
loop
ds
add
mov
xchg
mov
add
lcall
xor
cmp
jl
imul
shll
movsb
cli
adc
cmpsb
jp
dec
popf
fxch
clc
hlt
cmp
pushl
movsb
and
bound
arpl
mov
in
inc
inc
mov
lcall
jp
sti
add
ja
fwait
pop
sbb
fcomp
and
sbbb
sbb
ljmp
cmp
into
in
rcr
mov
ss
xor
fcomps
ljmp
add
adc
scas
cld
in
push
jbe
jb,pn
pop
ficomps
and
xor
lret
ds
sbb
push
lret
hlt
in
jae
leave
lea
adc
push
aad
inc
aas
loope
xchg
pop
icebp
es
mov
mov
test
dec
movsb
xor
call
fwait
mov
mov
shl
sti
in
daa
xchg
or
divb
lahf
in
mov
stc
int
fdivp
pop
hlt
mov
jp
add
rolb
aaa
jcxz
mov
xchg
mov
jns
out
jg
sub
aaa
std
push
cs
sarb
jnp
ljmp
add
gs
in
js
dec
fmuls
add
adc
out
xor
and
or
ljmp
xchg
movsb
out
mov
mov
or
add
dec
lcall
cmpsb
andb
push
dec
lcall
arpl
xchg
pop
sub
jb
pop
in
test
cld
hlt
or
sar
call
nop
hlt
nop
mov
pusha
sub
ljmp
sub
jmp
or
mov
or
lret
xor
sub
jmp
es
test
sbb
into
into
cmp
xor
mov
push
cmp
push
and
and
inc
pop
push
shl
out
adc
jno
and
dec
mov
mov
lods
dec
mov
mov
sarb
cmp
mov
sbb
adc
test
push
cld
mov
addr16
dec
out
dec
add
das
dec
fmull
cmp
mov
jbe
lahf
lret
xor
jg
dec
pop
scas
incl
mov
addr16
hlt
aaa
ret
lcall
add
insl
mov
test
fadd
jmp
pop
pusha
jge
mov
xchg
insl
or
add
into
mov
int3
ja
int3
leave
or
lcall
outsb
in
dec
loop
mov
xchg
and
sub
subb
ljmp
xor
jo
jp
outsb
adc
xchg
adc
push
ljmp
out
hlt
addr16
or
dec
xchg
cli
enter
mov
add
and
call
push
repnz
shrb
inc
out
add
push
and
jbe
pusha
or
adc
adc
jns
mov
pop
jge
sub
icebp
sub
sub
adc
cld
jg
and
or
dec
icebp
adc
sbb
and
xchg
cmpsl
xor
incl
sub
mov
jmp
mov
outsb
shlb
pop
push
sbb
std
in
imul
push
repnz
mov
mov
out
push
sub
cmp
xor
jno
mov
adc
mov
pop
enter
ljmp
xor
into
dec
add
fisubrl
push
jl
and
push
ret
push
ja
mov
pushf
or
pop
cli
mov
cs
cmp
jmp
mov
ret
imul
xchg
or
jmp
or
mov
jb
cmp
sub
mov
daa
dec
adc
ljmp
or
mov
mov
add
pop
mov
add
leave
movsl
push
sub
sub
and
je
cmp
clc
decl
adc
xor
stos
adc
ljmp
adc
mov
dec
inc
cmp
inc
adc
lcall
call
sub
push
sub
push
adc
adc
mov
sub
inc
jg
aas
outsl
jb
call
loopne
and
or
into
gs
inc
and
aam
cmp
adc
inc
sbb
aas
or
je
dec
mov
je
add
int
decl
sbb
jge
mov
xchg
and
cld
decl
sbb
jno
cmc
out
inc
adc
or
jmp
iret
and
pop
hlt
lock
cmp
mov
mov
fnsave
std
hlt
pop
in
xor
bound
test
cmp
push
pop
scas
clc
aam
or
test
pop
xor
jo
mov
loop
or
lcall
out
lods
and
call
pop
sbb
enter
dec
jne
mov
push
andb
push
mov
add
fsubl
lret
xchg
je
add
incl
xchg
pop
mov
pop
cmp
mov
xor
ss
mov
pop
and
stos
xor
jmp
mov
inc
inc
jle
shr
sub
lret
div
sbb
ljmp
loop
nop
sahf
mov
xchg
nop
adc
sub
adc
pop
jmp
pop
int3
enter
incl
push
dec
dec
rcrb
lock
lret
stos
adc
cs
mov
mov
pop
jle
push
ret
xor
pop
sub
cmpsl
dec
mov
jb
push
push
xchg
or
lret
jmp
aam
or
sub
pusha
rol
in
dec
bound
dec
inc
sub
in
filds
enter
ljmp
decb
addb
lods
aam
push
and
fsubr
ds
add
mov
ljmp
xor
fldcw
mov
add
das
shlb
inc
push
js
addr16
jle
test
decl
dec
or
gs
pop
xchg
roll
push
gs
and
test
ljmp
add
dec
jp
pop
imul
lods
pusha
cmc
mov
decl
ret
test
push
inc
push
mov
testb
clc
es
inc
pop
push
setne
jmp
pop
or
test
sbb
test
add
jl
inc
nop
das
pop
rep
je
in
cmp
call
fildll
lods
push
ljmp
sbb
dec
je
add
rolb
add
incl
fiaddl
jmp
and
and
repz
jge
xor
les
clc
ljmp
shll
dec
movsb
enter
cmp
lret
and
insl
mov
shlb
lret
call
push
and
inc
add
cs
mov
cmp
out
loopne
movsl
fdivr
jg
and
adc
push
out
mov
aad
lods
incl
fdiv
arpl
pop
out
dec
pop
loope
inc
outsb
push
aas
movsb
cmpsl
push
push
je
loop
mov
jb
xor
lock
gs
bound
aaa
dec
xor
cmp
xchg
or
test
mov
xor
jne
dec
ja
lcall
ljmp
loope
popa
adc
aad
stos
jo
adc
mov
lcall
cwtl
gs
dec
dec
repnz
dec
mov
lds
imul
mov
and
cld
pushl
test
dec
mov
enter
imul
pop
int3
mov
mov
je
mov
inc
ljmp
loope
mov
arpl
inc
cmc
push
sub
scas
or
dec
std
jne
jmp
jns
adcl
call
daa
and
fstl
cmp
int
pop
jnp
je
xchg
jae
dec
cwtl
ss
rorb
mov
addl
push
test
pop
pop
sbb
mov
outsl
clc
jne
fldenv
aad
xchg
int3
icebp
repnz
jmp
add
push
stos
pop
push
das
jae
imul
inc
push
aam
push
mov
mov
inc
or
test
aam
mov
push
mov
aas
and
pop
test
in
sub
ja
in
xlat
insl
inc
out
lock
mov
movsl
mov
mov
addr16
pop
cli
cmc
js
rcr
lock
mov
pusha
out
mov
cltd
sahf
in
and
nop
jnp
jno
rolb
lcall
cmc
out
jge
xorb
mov
arpl
lahf
mov
sub
call
fwait
add
dec
addb
sar
ljmp
cld
outsb
mov
push
sub
mov
loop
or
mov
ljmp
shr
repnz
and
stos
loope
cltd
cmp
inc
imul
sti
ja
shll
pop
lods
gs
call
dec
inc
test
fnstenv
ja
icebp
sbb
xchg
xchg
cltd
test
dec
aad
jns
call
inc
repnz
push
mov
sahf
jmp
lods
xchg
inc
decl
incl
movsl
mov
stc
insb
mov
jns
repnz
push
cltd
pop
or
lods
mov
mov
incl
xor
loopne
in
cmp
mov
fimull
add
dec
outsl
jmp
xor
idivl
jmp
imul
mov
out
pop
add
fwait
jbe
cs
scas
lret
cmpsb
and
xor
lcall
lea
dec
repz
loop
or
cmp
jle
xchg
mov
ljmp
mov
mov
sti
aam
cltd
push
mov
mov
xchg
fisubrl
xchg
outsl
out
cltd
push
icebp
dec
pop
sbb
mov
movsl
jb
ja
incl
out
cmp
jmp
xor
dec
ja
fsts
cmp
push
js
inc
outsl
dec
cltd
and
loopne
in
jmp
add
xor
dec
jle
test
pusha
cli
xchg
outsl
insb
and
dec
incl
decl
arpl
aam
add
scas
and
rcrb
dec
cmp
sub
lcall
fisubl
inc
pop
push
cltd
fnstcw
ja
test
mov
call
dec
lret
lcall
test
cmp
jno
lods
ljmp
loop
xchg
enter
mov
shrb
push
mov
sbb
subb
jg
jmp
fs
xor
push
fs
sti
mov
cltd
mov
jmp
test
sbb
add
mov
or
outsb
xchg
mov
adc
mov
push
and
cmp
mov
repnz
dec
push
ljmp
call
xchg
push
or
rep
inc
push
push
jne
add
test
xor
lea
scas
xchg
mov
mov
sbb
mov
enter
dec
fidivl
cltd
pop
jns
mov
in
fs
mov
pushl
loop
arpl
sub
inc
imul
push
push
xchg
mov
jmp
das
push
sbbl
sbb
cmpsl
adc
xchg
inc
mov
and
lcall
mov
sbb
rorb
cmpsl
and
bound
out
add
mov
push
pop
xor
fnstsw
fldt
cli
rcll
pushl
fstl
popf
enter
stc
mov
out
leave
cltd
xchg
jns
cmp
push
xor
or
lcall
in
pop
leave
jne
mov
leave
leave
inc
inc
push
test
mov
call
pushf
inc
lret
adc
sbb
mov
xchg
lods
mov
subl
jb
pushf
dec
pop
test
into
or
dec
aaa
or
mov
loop
paddsb
ljmp
aaa
std
mov
push
dec
dec
cmp
sbb
fs
lret
cmp
push
mov
jo
out
push
dec
mov
cmp
out
adc
sbb
cmpl
mov
pop
in
lods
in
jl
mov
xchg
xlat
std
clc
rcrl
leave
dec
rcrl
inc
dec
imul
fldl
incl
pop
mov
pop
pop
xchg
sbb
sub
dec
jmp
decl
ja
cmp
sbb
push
pop
rcr
es
pop
mov
js
ljmp
jno
insb
add
pop
mov
stos
pop
mov
scas
xor
xor
mov
jmp
decl
adc
pop
and
xchg
js
xchg
jle
call
movsl
mov
hlt
shl
icebp
js
lea
sbb
ss
nop
and
add
and
incl
dec
nop
loopne
pop
pop
adc
call
sub
xor
jo
inc
test
mov
or
jo
add
test
pop
stos
pushf
jmp
xor
xor
or
mov
fcmovbe
cmpsb
adc
cmovbe
xchg
ljmp
lret
push
lods
pop
pop
push
mov
ljmp
int3
push
sub
lret
jo,pt
mov
pop
mov
or
scas
pop
mov
call
xchg
lock
jge
sub
mov
out
inc
mov
jg
pop
fmulp
mov
aaa
pusha
movsl
pushf
push
hlt
call
inc
mov
xor
adc
lcall
mov
cltd
mov
out
sahf
push
sub
pop
sub
mov
pop
sub
int
hlt
push
mov
arpl
sub
int
int
test
lods
cld
mov
test
call
and
andl
and
orb
xchg
insl
xchg
jmp
fs
dec
das
adc
lcall
push
cmp
adc
mov
dec
pushl
add
add
dec
pop
jbe
adc
adc
pop
out
push
cmc
lcall
push
pop
jl
cmp
inc
outsb
jle
lahf
jmp
in
adc
js
fs
mov
pop
subl
xor
mov
incl
and
inc
pop
loopne
out
xchg
fwait
jne
pop
cmpsb
mov
fimull
fisttps
inc
ds
mov
inc
das
js
sbb
push
cmpsb
outsl
pop
mov
ljmp
xor
lds
rorb
jne
daa
sahf
jb
cmp
push
imul
inc
aam
push
add
ret
jns
jne
pop
mov
data16
imul
lcall
rol
aaa
xlat
inc
adc
ja
lahf
imul
cmpsl
ljmp
cld
andl
call
dec
in
popa
test
sub
test
or
sbb
test
cwtl
mov
sar
scas
mov
dec
cltd
push
xchg
outsb
sbb
cmc
bound
jb
arpl
call
mov
xchg
sahf
pop
sbb
stos
xchg
mov
mov
mov
add
push
std
ror
outsb
mov
add
out
add
ja
ljmp
shl
xchg
inc
mov
stos
or
lea
mov
mov
mov
lcall
outsb
cld
stos
dec
xor
test
aaa
sub
loopne
xchg
cwtl
jecxz
pop
inc
pop
mov
pop
jnp
push
call
add
fsubs
rorl
lods
incl
in
je
dec
imul
lret
push
mov
notl
mov
pop
push
std
call
gs
mov
mov
mov
out
subb
pop
and
sbb
push
jl
pop
mov
inc
mov
dec
xor
mov
stos
adc
inc
mov
repnz
xor
negb
mov
idiv
push
xchg
jle
or
cmp
and
jbe
inc
sahf
mov
movsl
ds
in
mov
mov
add
into
inc
out
sti
out
cli
push
push
pop
cmc
lock
outsl
cld
push
mov
sti
hlt
push
movl
add
cmp
xchg
and
das
jb
decl
pop
dec
stos
std
cmc
pop
jo
scas
outsl
pop
sbb
js
pop
fdivs
pop
jbe
adc
stos
jg
pop
cmp
and
cld
adc
fisubl
jmp
xor
and
dec
inc
sub
inc
orl
call
jg
inc
into
cmp
inc
xor
aad
mov
xor
cmp
dec
and
push
in
or
movsl
mov
and
inc
clc
ljmp
aaa
cmp
push
pop
mov
xchg
sub
inc
hlt
nop
adc
pop
icebp
push
sbbl
inc
inc
lcall
clc
push
ret
cmpsl
mov
add
adc
insl
icebp
mov
adc
repz
and
aad
pop
xlat
push
mov
xor
cli
call
lret
movsl
jg
cld
dec
ret
adc
pop
inc
xor
add
mov
call
cwtl
xchg
cld
inc
dec
sub
pop
push
push
es
in
mov
pushl
adc
test
je
test
dec
gs
and
daa
cmp
test
dec
push
test
ret
paddusw
xchg
aas
cld
dec
adc
xchg
movaps
dec
sbb
icebp
adcb
pushl
mov
dec
dec
or
pop
xchg
sub
int3
sbb
mov
aaa
mov
sub
sbb
xor
sub
std
pushl
sub
nop
xchg
inc
ss
mov
sbb
insb
cld
in
sbb
pop
cli
jne
xchg
popa
ljmp
pushf
stos
pop
and
lret
mov
dec
cmc
outsb
pop
xchg
pusha
adc
add
in
sub
lcall
push
orl
lea
fwait
lods
xchg
loop
pop
and
pop
sbbl
xor
fwait
lret
js
xor
xchg
lods
bound
xor
ljmp
xor
dec
pushf
daa
and
xchg
pop
fisttpll
push
cmpsl
push
pusha
adc
mov
in
rorb
xchg
loop
arpl
decl
lds
nop
xchg
aam
mov
notb
lds
cmp
jge
mov
fsts
or
fcomip
inc
repnz
adc
mov
out
xor
and
jg
ljmp
scas
jmp
xlat
pop
add
xchg
adc
mov
test
cmp
je
xor
incl
push
adc
test
push
mov
xor
xchg
test
mov
imul
std
outsl
clc
fistpll
out
cmp
push
mov
lcall
and
xchg
pop
mov
cmc
or
dec
inc
cmpsb
push
mov
aas
pop
sbb
ljmp
inc
lret
dec
add
fstpl
out
adc
js
mov
add
mov
sbb
pop
fsubrp
adc
adc
std
std
mov
fcoml
call
cwtl
dec
dec
insb
insb
pop
loop
push
les
xchg
fiaddl
mov
or
mov
xchg
sbb
mov
mov
xor
add
lcall
sub
out
stc
lods
and
loop
into
data16
jg
inc
in
mov
inc
xchg
fdivl
adc
cmp
dec
stos
mov
add
out
cli
loop
addl
add
in
dec
dec
stos
dec
lea
out
push
gs
mov
ss
and
or
inc
sub
mov
rcl
cmc
mov
cmp
push
mov
mov
ret
out
jbe
cmp
lcall
decl
arpl
clc
sbb
push
xchg
adc
aam
mov
sub
xor
es
cwtl
lret
mov
aaa
std
pushl
add
sbb
mov
sub
and
clc
add
push
incl
pop
push
rorb
inc
mov
sbb
xchg
rolb
enter
dec
ljmp
adc
in
arpl
mov
test
insl
pop
and
int3
fmul
adc
mov
aad
jns
xlat
ljmp
scas
aam
pop
call
mov
fwait
cmp
fistpl
int
es
cmpsl
jl
mov
jmp
inc
inc
jl
jnp
pop
out
cmp
dec
sub
cli
data16
decl
int3
repz
sbb
pop
subl
outsl
pop
xchg
popf
push
mov
ljmp
clc
lock
cwtl
adc
ret
sbb
mov
lcall
incl
mov
mov
incl
or
fs
loope
fld
inc
in
mov
add
mov
cli
mov
mov
int
dec
mov
jbe
stos
in
cmp
jg
mov
cmc
sub
mov
mulb
adc
inc
or
cli
decl
pop
int3
jbe
int3
mov
lock
xchg
mov
jmp
imul
mov
push
add
mov
out
aaa
push
fidivs
mov
and
or
call
fwait
bound
mov
cmp
sbb
shl
cmc
or
ds
fbld
and
mov
lods
lret
sbb
cmp
jo
mov
in
stc
or
xor
xor
mov
xchg
mov
lds
loope
ljmp
lahf
push
popa
in
xchg
adc
xor
decl
repz
mov
ljmp
movsb
shrl
repz
aas
add
in
out
pop
xchg
adc
cmc
jns
cmp
xor
aaa
pusha
jbe
jmp
js
xor
ja
aaa
or
call
pusha
add
adc
pop
push
push
push
pop
fs
jne
lcall
lock
or
xchg
jle
adc
pop
xchg
push
pushf
push
adc
call
aam
sbb
cmp
add
dec
push
inc
sub
jmp
sarb
inc
add
mov
push
mov
out
inc
mov
sub
pop
pop
aad
sub
test
adc
pop
mov
jle
and
push
cmpsb
pop
cmp
lock
adc
pop
pusha
pop
inc
addr16
jbe
in
bnd
shll
sub
movsl
dec
bound
insl
mov
and
incl
and
mov
jge
pushf
mov
mov
dec
bound
jmp
cmpl
lea
lcall
test
or
xor
movsb
adc
cmc
incl
adc
fidivl
jbe
jecxz
inc
outsb
bound
push
nop
and
je
mov
addr16
int
adc
inc
push
inc
mov
xor
and
xor
out
not
aad
pop
pop
add
aam
ljmp
insb
add
pop
insb
gs
jle
or
xlat
sub
out
idivl
xchg
sbb
mov
sub
loopne
aad
push
pop
pop
mov
pop
jne
aad
fsubl
vmwrite
mov
movsb
inc
aam
mov
and
jb
hlt
sbb
inc
addr16
fcomip
mov
insb
in
mov
scas
mov
jb
adcb
or
outsl
fwait
xlat
dec
xchg
das
add
mov
jg
jo
or
add
push
pop
lret
sbb
pop
out
inc
push
sbb
dec
or
mov
imul
mov
sub
sbb
sub
mov
out
loop
std
mov
sbb
adc
inc
jge
xor
ja
data16
incl
push
jne
repz
and
push
insb
inc
in
test
pop
xor
dec
inc
pop
dec
push
add
jnp
mov
mov
mov
mov
add
cwtl
lret
js
lret
mov
jle
xchg
test
sub
ja
hlt
cmpsl
inc
cld
mov
dec
adc
mov
push
inc
inc
mov
xchg
cmp
pop
in
xchg
pop
push
pop
loope
xchg
adcl
mov
mov
jo
cmpsb
aaa
cmc
test
xchg
cs
mov
push
push
shr
sub
lcall
inc
xchg
addb
aaa
pop
inc
push
xchg
decl
jno
lcall
leave
bnd
dec
xchg
xchg
cmp
push
cmp
cmp
jmp
test
cmpsb
test
mov
cwtl
mov
sub
inc
and
pop
iret
mov
add
ljmp
push
pop
repz
mov
and
mov
test
das
clc
and
stos
xchg
xchg
jne
in
pop
cltd
jge
sbb
mov
or
call
pop
mov
adc
loope
jbe
mov
push
mov
std
sub
incl
sbb
mov
xor
iret
xor
mov
adc
std
js
inc
pop
cmp
dec
dec
cmp
push
mov
sub
mov
pop
icebp
call
push
jns
jle
add
sahf
dec
jns
mov
in
mov
ljmp
push
push
mov
or
fldenv
insl
ljmp
adc
mov
sub
mov
cmp
subl
negl
sub
adc
hlt
and
arpl
in
in
push
rclb
sbb
sar
xchg
icebp
sub
or
imul
ja
stos
popf
or
fdivl
adc
cwtl
out
rcrb
cwtl
xchg
sub
stos
lahf
leave
cmpsl
mov
mov
imul
jno
cmp
leave
adc
cmp
decl
push
pop
mov
dec
xchg
pop
in
std
and
out
cmpb
and
sbb
push
js
ret
push
cwtl
subb
pop
or
inc
popa
jae
xor
andb
push
or
push
inc
sbb
xchg
outsl
cmp
mov
ret
add
rcrb
jg
rcrb
sahf
jns
rol
jl
dec
cltd
xchg
ljmp
and
andb
push
xlat
push
daa
adc
aad
xchg
and
mov
cmc
movsl
xchg
aad
inc
push
xchg
mov
push
and
cmp
xchg
sub
dec
loopne
jl
xchg
mov
cwtl
jge
jle
clc
cmp
jmp
push
popa
stos
rclb
dec
mov
cltd
xchg
sub
incl
lret
pop
mov
cltd
ja
mov
mov
jecxz
insl
gs
jmp
pop
imul
mov
pop
js
sahf
fstps
xor
sahf
sarb
cmpsb
pop
inc
sahf
fstpt
repz
adc
insb
mov
stos
decl
mov
fcoms
movsb
mov
mov
xchg
push
jne
mov
stos
mov
cmp
test
and
sub
incl
cmpsl
cmpsl
inc
pop
or
mov
das
inc
mov
lcall
rorb
push
or
jne
leave
test
xor
repz
sti
test
sbb
dec
xor
clc
scas
clc
lcall
test
pop
sbb
and
loop
pop
xchg
mov
and
jno
xchg
add
pop
xorl
imul
stos
ds
jge
xchg
mov
pop
cltd
sub
in
call
bnd
lret
cmp
popa
jmp
mov
mov
cmp
sub
sub
les
sbb
inc
ljmp
jp
xor
cwtl
mov
fildll
adc
leave
mov
out
xchg
rorl
and
out
repnz
mov
cmp
pop
push
xor
shlb
rcrl
ljmp
clc
stos
scas
inc
sbb
mov
add
mov
andb
sbb
push
scas
push
or
xchg
jno
push
or
mov
jg
repnz
add
and
je
aas
jno
mov
incl
jno
push
shll
pop
dec
cmpsl
jnp
adc
daa
xchg
mov
adc
dec
pop
or
pushl
imul
enter
jmp
into
mov
fidivrl
pop
sbb
icebp
jnp
rep
enter
mov
fmul
movsb
leave
js
leave
pusha
sub
lret
iret
add
sbb
mov
cltd
sahf
dec
mov
sbb
jg
jmp
add
enter
push
dec
lcall
jne
xor
mov
fmul
sahf
sbb
fstpl
arpl
push
pushf
int3
sbb
nop
sbb
clc
mov
leave
fadd
ret
xlat
sub
dec
mov
mov
xchg
sbb
lock
sbb
and
scas
cli
add
push
jle
pop
inc
icebp
add
xchg
in
add
out
xchg
repz
rorl
cs
or
mov
mov
stos
gs
cld
incl
rclb
dec
mov
push
push
lcall
sub
dec
sub
testl
jns
jmp
jno
xchg
add
and
mov
sub
xchg
enter
xor
xor
ljmp
nop
lods
lods
lcall
fdivl
shll
mov
call
and
push
in
fstps
lds
lcall
sbb
out
mov
test
xor
mov
jl
jge
aad
mov
clc
mov
cld
rcrl
dec
int3
inc
cli
mov
leave
mov
int
insl
push
int
lret
pop
aam
sbb
fidivl
call
jne
add
call
mov
arpl
lcall
add
adc
push
cltd
les
out
push
xchg
push
pop
daa
sbb
jns
jmp
lods
add
mov
mov
push
xchg
ret
incb
and
mov
popa
and
push
xchg
mov
ljmp
push
xor
cmp
fs
arpl
jmp
notl
mov
pop
and
jg
frstor
das
in
sahf
cltd
cld
enter
push
sbb
xor
lcall
sub
or
leave
jne
roll
sbbb
fcoml
aaa
fs
sbb
leave
leave
clc
fbld
mov
fcos
cmp
mov
fstpt
xchg
int3
aad
fstpl
std
lret
xchg
pop
loope
imul
mov
incl
loope
in
lret
hlt
jge
mov
stos
icebp
sbb
sbb
pop
incl
lods
lret
jmp
shl
xlat
lock
adc
jecxz
cmp
fidivrl
jmp
decl
ret
xorb
into
aam
adc
ret
psubd
cmpsb
push
cmpsl
inc
xchg
jge
cltd
or
inc
icebp
and
add
pop
rolb
push
pop
cmp
lods
jmp
jbe
ret
cltd
push
rcll
mov
mov
mov
cmp
adc
icebp
cmp
sbb
push
hlt
je
push
leave
jnp
int3
insl
cwtl
sahf
sti
call
sub
add
nop
adc
fdivrl
in
pop
mov
fsubr
xchg
ljmp
xchg
mov
xchg
dec
aad
sbb
mov
pop
lcall
cmp
int3
jmp
jne
mov
push
mov
jge
or
fildll
js
loopne
adc
ljmp
dec
lcall
outsb
jnp
mov
rcrl
loope
call
dec
rcll
out
sbb
sbb
leave
pop
out
in
sbb
loop
sahf
push
mov
push
stos
icebp
jg
jecxz
sahf
loop
mov
sti
dec
jecxz
stos
xlat
call
enter
loopne
ljmp
jl
adc
in
xor
mov
test
push
adc
xchg
sarl
daa
inc
jbe
mov
or
lret
icebp
add
add
mov
les
into
dec
sbb
stos
out
loop
mov
and
sbb
cs
adc
cmp
es
dec
pop
cmp
mov
or
jmp
mov
stc
repz
repz
or
cmpsl
call
xchg
sub
inc
sahf
movsb
fidivrs
push
lds
xor
inc
nop
dec
or
mov
decl
lods
sub
pop
das
cmc
in
jnp
out
shll
int3
je
jg
inc
loopne
hlt
incl
into
fnstenv
in
daa
push
loopne
mov
dec
jl
fwait
scas
ljmp
aam
and
jmp
test
xchg
ljmp
es
aad
scas
cmpsl
cmpsb
int
test
testl
clc
mov
ficoms
ljmp
subb
out
mov
jle
adc
lret
mov
loope
sahf
out
pop
or
sahf
test
int3
or
in
dec
in
push
mov
ja
sbb
out
add
ljmp
rcrb
adc
daa
loopne
pusha
mov
shl
jle
mov
mov
sub
xchg
and
ljmp
clc
add
sbb
ss
pop
cmp
sbb
sub
scas
enter
std
fsubrs
popa
cmp
lea
mov
xor
test
fldl
cwtl
sbb
xor
sbb
inc
mov
incl
and
nop
fists
hlt
inc
mov
ret
mov
and
adc
inc
cld
jl
hlt
call
repnz
sbb
mov
inc
mov
daa
dec
inc
xor
pushl
in
jae
popf
cmp
sub
sbb
hlt
push
test
and
jmp
ds
in
push
and
scas
daa
inc
jp
icebp
les
jnp
dec
in
ret
pop
cmp
mov
sahf
js
loopne
jo
pop
xor
mov
fstpt
fwait
aaa
out
int
das
push
cmp
in
int3
mov
imul
mov
cmpsl
cli
mov
les
inc
imull
rclb
dec
dec
jnp
aam
mov
out
mov
jnp
mov
pop
lcall
push
sbb
sar
jae
shll
mov
call
ret
cmp
jo
pop
cmpb
cwtl
xor
mov
loopne
fdivs
sbb
sub
incl
insb
js
pop
mov
inc
sar
rorb
out
jecxz
mov
mov
shlb
and
or
or
mov
sti
cmpl
ret
jg
out
ss
xor
or
adc
xchg
pop
cmp
pop
jae
push
add
xor
xor
adc
inc
jno
sbb
aam
mov
cld
inc
inc
pop
lea
cmp
xor
or
dec
test
xchg
sub
movsb
mov
and
mov
cmpsb
mov
std
mov
insb
jp
cmpsb
cltd
xorb
dec
int
ljmp
xor
mov
movsl
mov
into
sbb
stos
ljmp
je
mov
add
dec
stos
scas
mov
and
lret
sub
jl
scas
push
decl
sub
add
sub
jg
sub
ss
xor
ret
xor
pop
push
int
das
dec
and
insb
push
jbe
lcall
call
rcr
lret
rcll
mov
lods
push
mov
jmp
repz
out
xor
fsubr
mov
inc
mov
cmpb
cmp
add
fisubl
and
jle
mov
cli
cmp
cld
cli
scas
mov
add
ds
nop
cmp
clc
xor
sbb
or
push
xor
nop
ret
or
jo
mov
test
call
aad
mov
cmp
and
sub
xor
or
xchg
jmp
adc
sar
mov
ds
setb
and
xor
xchg
mov
mov
enter
mov
mov
mov
in
pushl
sub
cmpsl
pushf
adc
sub
cltd
push
pushf
mov
stos
mov
mov
xchg
push
rol
or
inc
popa
lods
imul
mov
jno
or
pushl
push
out
jnp
scas
aad
jae
orl
enter
out
push
hlt
iret
xor
push
decl
bound
or
cmpsb
jecxz
cmc
popa
pop
adc
ljmp
mov
ret
xor
xor
xor
cmp
ficoms
call
jl
repz
mov
test
pushf
sarb
movsb
push
pop
int3
adc
sbb
sbb
jp
dec
mov
inc
jb
sbb
mov
jns
and
sub
repz
mov
daa
xor
jmp
sti
pop
xchg
int
cmp
les
mov
or
lcall
es
nop
push
and
or
push
adc
pop
loopne
imul
push
pushf
fs
stos
lea
fst
je
cmpsb
mov
dec
dec
cmp
inc
aad
sub
or
xorb
aaa
sub
dec
sbb
adc
mov
cmp
push
fimull
inc
xor
enter
mov
push
xchg
mov
mov
lcall
jmp
es
cmp
lea
insb
loope
add
mov
pop
add
or
js
inc
push
push
lea
orb
xor
in
mov
mov
loop
sahf
xor
fildl
push
fdivs
imul
adc
push
mov
hlt
xor
out
shlb
push
int
jmp
ds
fs
roll
xchg
pop
mov
cmpps
outsb
or
int3
rol
decl
mov
adc
push
push
in
or
fs
stos
xchg
pop
mov
cmp
xlat
ficoml
sbb
push
ret
test
cmpsl
aas
test
xchg
psrlq
daa
mov
decl
ljmp
pop
dec
loope
or
cmpsb
cmp
push
or
sbb
mov
pushl
ss
inc
sub
dec
mov
push
xchg
push
inc
pop
lret
call
mov
mov
addr16
subl
and
inc
cmp
xchg
out
test
call
dec
nop
ss
pop
jnp
loope
xchg
adc
sub
cmpsl
and
inc
leave
test
adc
push
cltd
cmp
icebp
ljmp
rorl
sti
sbb
jl
cmp
adc
sti
fcomip
push
mov
xchg
mov
push
adc
icebp
mov
sub
inc
inc
xor
add
pop
and
pusha
pop
gs
cmp
stos
int3
fsubrl
mov
nop
sbb
incl
enter
enter
adc
movsl
xchg
testb
adc
mov
cmpsb
int
sbb
pusha
decl
pop
cmpsb
leave
jne
cmpsl
jle
leave
jo
inc
push
dec
mov
fistpl
ret
add
decl
fdivp
adc
add
lret
fidivl
cmp
jae
jae
push
mov
movsb
lcall
sti
stos
lret
push
out
jb
scas
mov
sti
mov
xor
outsl
jg
das
add
jbe
fwait
pop
clc
ret
in
das
or
pop
xchg
idivl
jno
mov
push
sub
push
andl
inc
jo
sti
pop
loopne
sahf
push
ret
cmp
sub
mov
loopne
icebp
int3
pusha
mov
xchg
inc
orb
ljmp
dec
xor
jnp
gs
into
aad
push
xchg
aam
add
jmp
mov
hlt
pop
push
add
sti
push
jecxz
sarl
sbb
xchg
or
cmp
fiadds
dec
and
cmpsb
adc
call
xchg
sub
xor
pop
je
xor
cmc
and
pop
std
mov
clc
mov
cld
jg
call
mov
push
mov
adcl
xchg
and
mov
movsb
push
mov
pop
ret
popa
mov
or
xor
imul
sahf
adcb
adc
jle
adc
lods
fsubr
mov
scas
fwait
mov
das
fimuls
call
fwait
aas
repz
aad
sub
in
imul
mov
fdivl
jl
fwait
pop
nop
popa
stc
js
sahf
outsb
ljmp
ret
sbb
lods
jge
insb
ja
out
jne
orl
pushl
sub
inc
jne
fstpl
cmp
adc
test
jl
dec
mov
out
or
lret
popa
xchg
ljmp
mov
mov
and
mov
f2xm1
cwtl
sbb
jmp
lods
dec
and
lcall
aaa
popf
pop
dec
jo
sbb
pop
mov
cld
subb
out
inc
and
imul
addr16
decl
pop
mov
call
jo
mov
sub
inc
std
pushl
cwtl
sub
mov
push
xor
mov
outsb
jl
or
shlb
fucomp
mov
insl
imul
movsl
push
mov
les
lahf
jnp
insl
xchg
jne
in
jno
inc
pop
fldcw
jae
out
jb
outsl
popa
cmp
lcall
jnp
cs
pop
daa
jle
lods
dec
jl
out
cmp
arpl
das
loop
lret
repz
inc
fnstsw
xchg
dec
stc
cli
jle,pt
lods
jle
jmp
insb
rcrb
mov
jns
push
ljmp
jle
adc
icebp
adcl
mov
adc
nop
jl
push
xlat
ljmp
inc
pop
add
add
push
stos
mov
cmp
push
xchg
push
mov
and
fisttpl
mov
iret
cmp
and
pushl
in
testl
cmp
or
sarb
and
in
push
lcall
lcall
sbb
xchg
mov
stos
or
cltd
push
mov
jmp
imul
scas
xor
pop
scas
jecxz
adc
cmpsl
sbb
lods
mov
mov
rorb
lret
incl
and
imul
add
incl
sbb
jmp
ss
mov
outsl
fwait
mov
jae
push
les
ss
ljmp
sbbl
stos
mov
push
fs
mov
mov
stos
rcll
sarl
add
incl
jo
ljmp
loop
jl
call
jg
sub
adc
fsubrs
jl
xchg
sbb
sub
lcall
sti
or
sbb
or
cwtl
repz
pop
lahf
add
mov
mov
jmp
sbb
mov
xor
or
repnz
cmc
jae
lcall
jae
hlt
mov
push
popa
sub
sub
pushf
dec
pushf
sub
std
pushl
sub
mov
sub
loope
push
or
jge
xchg
mov
mov
xchg
cmpsl
mov
shrb
mov
int3
xor
int3
mov
clc
andl
rcrb
mov
add
addl
cld
mov
stos
ss
sbb
pop
cld
jg
inc
adc
inc
in
scas
insb
or
movsb
xor
and
sub
call
loop
test
loopne
sub
add
jmp
subl
adcl
decl
es
adc
dec
push
or
sub
lea
ja
cli
incl
xchg
shr
sti
or
add
pop
cld
decl
cmc
mov
arpl
pop
adc
and
cmp
lods
inc
inc
adc
lcall
cmpsb
cmp
xchg
sub
lret
rorb
mov
call
fwait
es
ret
jmp
filds
sub
mov
std
lcall
loop
jle
sbb
lret
fimull
adcb
mov
ss
and
ljmp
out
sub
sti
shlb
fbstp
andb
jo
mov
inc
sbb
xchg
inc
mov
dec
push
pushl
jl
push
add
enter
les
mov
in
ja
add
add
mov
cmp
rclb
push
mov
js
cmp
add
daa
mov
fwait
mov
xor
and
rclb
imul
mov
les
filds
ljmp
sarb
pushf
jae
and
ds
or
mov
adc
cmp
repnz
nop
mov
add
adc
xchg
xor
lods
push
xchg
add
adc
push
movsb
xor
xor
subb
xor
dec
ljmp
dec
mov
das
not
lret
pop
inc
bound
dec
imul
hlt
ss
scas
repnz
inc
sti
inc
sub
pop
icebp
inc
add
sub
mov
inc
mov
bound
incl
andb
adcb
pop
sub
pop
popa
add
mov
pop
xor
mov
xor
loopne
xor
and
or
pop
mov
inc
fcoml
sti
nop
incl
adc
inc
arpl
sti
push
mov
ret
repz
imul
cwtl
jo
nop
leave
leave
aas
pushl
sbb
add
mov
add
gs
dec
icebp
ljmp
xchg
cmpb
jnp
std
fxch
aam
jmp
imul
int3
ss
inc
inc
mov
push
out
dec
add
clc
in
aam
shrl
mov
jnp
dec
xchg
push
es
jp
out
lock
sub
add
sub
adcb
call
cmp
mov
jl
shl
pop
test
sbb
ljmp
mov
mov
lcall
pushl
ljmp
adc
mov
mov
imul
call
mov
jno
sub
sub
lods
fldenv
leave
mov
inc
popa
movsb
rcll
mov
lret
adcl
mov
aam
xor
add
icebp
cmp
dec
das
and
mov
cli
inc
std
push
outsb
add
imul
dec
inc
xor
push
cld
sbb
push
movsb
inc
dec
pusha
outsl
mov
ret
fstps
arpl
add
test
int3
es
das
sar
sub
push
mov
add
xor
sbb
sub
mov
push
dec
pop
daa
orl
sub
jmp
dec
fucomp
cltd
lea
cmp
or
cmp
pop
mov
test
xchg
sar
call
popf
cmpsb
clc
jmp
insb
shlb
and
cwtl
inc
repz
test
jmp
ret
or
jmp
push
inc
jae
and
loop
mov
mov
mov
push
mov
mov
stos
add
sub
push
mov
ds
cmc
bound
pop
lret
push
inc
call
lods
dec
mov
mov
data16
aad
pop
flds
popf
lret
sbb
stos
mov
pop
mov
push
sbb
fdivrs
clc
std
push
loope
sub
pop
lods
mov
cmp
ljmp
xchg
stos
cmp
mov
lcall
xor
cmp
cmp
jmp
out
push
pusha
insl
xchg
sti
pop
inc
test
adc
enter
out
mov
inc
lcall
or
mov
rcll
into
or
xchg
rcr
xchg
mov
test
sbb
mov
cmpsb
sub
shll
rclb
push
add
jmp
add
push
mov
adc
sub
push
orl
loope
lds
fmul
inc
ljmp
lods
popa
cmp
add
insl
aam
sbb
clc
jmp
pushl
aaa
pop
or
and
in
fnsave
imul
call
and
lcall
adc
jle
cmpb
push
lods
or
ja
movsl
xor
mov
add
jle
in
call
push
rorb
xor
push
repnz
mov
mov
sub
xor
bound
shll
pop
cwtl
cmc
lret
jbe
pop
rol
jmp
lods
cmp
int
xor
mov
mov
leave
in
fs
div
and
cmp
mov
ds
or
pushf
aam
lret
mul
push
mulb
in
sti
outsl
mov
push
mov
pop
mul
in
adcl
lods
gs
xlat
adc
lcall
pop
mov
dec
mov
mov
pop
jne
aam
jno
jmp
fnsave
jg
pushl
dec
std
lret
shlb
inc
and
mov
je
in
das
dec
and
out
dec
addr16
jmp
nop
push
rorl
lea
jnp
mov
pusha
mov
cmpl
sub
xchg
out
mov
mov
dec
ret
cli
sbbb
jmp
stos
fistpl
out
nop
cli
dec
icebp
loop
icebp
lcall
ljmp
push
lret
dec
test
jmp
lock
sub
xchg
imul
add
fs
sar
lcall
push
mov
inc
inc
push
dec
jl
sub
xlat
idiv
mov
add
popa
mov
pop
add
jmp
jge
mov
ljmp
adc
es
jg
sbb
mov
rcll
popa
je
xchg
inc
lea
pushl
and
fldcw
dec
sti
or
and
loop
notb
cwtl
sar
pushl
sbb
and
andl
inc
xorl
ja
mov
jnp
arpl
dec
jecxz
lock
jle
gs
aad
and
cmpsb
lcall
dec
xchg
subb
mov
xchg
xor
icebp
lahf
inc
ds
xchg
mov
adc
xchg
repz
jmp
pop
xchg
jae
pop
push
sbb
adc
arpl
loop
mov
xor
sub
dec
ljmp
call
push
mov
lods
add
mov
movsb
outsb
lods
outsb
pop
in
jle
out
xchg
fisubs
out
test
ljmp
stos
mov
pop
scas
push
lret
out
in
mov
iret
aam
ss
pushl
bound
imul
sarl
and
xor
add
inc
add
ljmp
mov
cmp
rcll
mov
ja
sarb
loop
xor
ja
stos
sub
cmp
cvtps2pi
movsl
lret
jg
cmp
icebp
push
es
or
or
aad
loop
and
mov
mov
sbb
stc
cwtl
cwtl
sbb
jmp
insb
mov
and
and
mov
imul
test
dec
jbe
mov
mov
leave
xlat
lret
cmc
pusha
mov
outsb
pop
mov
adc
pop
ja
pop
or
dec
jb
cmp
outsl
push
jle
repnz
in
jmp
or
aam
mov
aad
fnsave
addr16
cld
jle
mov
push
push
sbb
lock
mov
scas
pop
es
insb
push
in
sub
lock
xchg
add
jbe
or
ss
or
call
enter
insb
jl
aaa
jmp
rclb
inc
fistpll
sub
inc
or
cmc
dec
icebp
adc
or
lahf
sarb
ljmp
mov
and
pop
cltd
and
hlt
lahf
sub
cmpsb
jmp
sub
mov
mov
aas
push
cli
sbb
maskmovq
imull
sbb
clc
sbb
shlb
jns
fcomip
pushl
subb
daa
push
xlat
jne
xor
lods
push
loope
out
mull
fcomip
xchg
push
dec
andl
js
divb
dec
fiadds
pusha
add
jg
add
inc
xchg
and
fcomps
sti
test
int
jg
jo
xlat
out
xchg
das
stc
scas
mov
fs
mov
mov
adcl
pop
adc
dec
push
clc
push
add
lock
adc
out
sbb
cmp
or
add
jmp
nop
movsb
or
xchg
lcall
fistpll
ffreep
sti
cwtl
push
enter
push
add
ljmp
mov
repz
add
divl
repnz
and
inc
dec
sub
lcall
movsb
lcall
push
and
sub
lret
mov
xor
lcall
in
out
repz
clc
andb
int3
jl
iret
jae
scas
cld
lret
jg
lcall
push
sbb
addr16
adc
pop
fcoml
add
fisttpll
decl
fmull
mov
out
mov
cmp
adcl
cli
pop
pop
push
xchg
pop
sub
movsl
pop
mov
ud0
adcl
sub
jecxz
mov
mov
incl
inc
or
pop
repnz
leave
pop
cwtl
push
mov
insb
mov
in
cmpsb
jecxz
mov
adc
jmp
popa
jp
adc
mov
or
inc
pushl
and
cmp
or
xor
inc
andl
sbb
or
decl
mov
mov
test
jno
or
decl
xchg
and
sahf
in
repnz
cmp
shrb
or
shlb
inc
test
ljmp
cmp
shll
push
mov
mov
lcall
jo
lret
xlat
push
pushl
and
sub
pop
sub
insl
push
add
test
mov
cmp
pop
adc
sub
iret
xchg
xor
xchg
jg
push
movsl
mov
mov
lret
xchg
add
in
stc
xor
jmp
inc
mov
pop
or
xor
xchg
sbb
aad
divl
call
jno
fmuls
jecxz
push
popf
adc
enter
add
push
inc
dec
mov
decl
mov
repz
int3
movsl
jo
cmp
lods
pop
dec
out
jbe
psubsw
jnp
cld
ljmp
movsl
jl
lods
call
pop
sub
or
dec
cmp
pushf
inc
add
add
jbe
or
loopne
add
test
ljmp
xchg
jle
add
and
and
adc
and
and
loopne
jg
hlt
dec
xor
xor
aad
xchg
in
rorl
sbb
cmp
and
aam
dec
inc
pop
xchg
push
push
or
push
push
push
aad
bound
call
push
mov
aad
pop
movsl
cltd
sbb
popa
out
cmp
push
xchg
xchg
imul
jmp
jbe
addr16
divb
shl
cmpsb
pop
mov
jno
pop
lcall
ljmp
jmp
sbbb
mov
ret
nop
pop
push
push
aam
shrl
pushl
subb
cmpsb
test
push
adc
jb
leave
or
adc
jne
or
or
and
negl
jne
in
add
and
add
lcall
sahf
jbe
inc
fcmovbe
cli
push
jmp
jle
test
add
adc
add
jg
lcall
scas
jns
mov
sbb
imul
mov
insb
dec
sub
fldt
dec
add
mov
jo
xor
jecxz
xor
test
jecxz
cmp
adc
call
jns,pt
push
dec
and
fsubl
xchg
push
add
or
int3
xchg
pop
fs
cld
fcomip
or
and
addr16
dec
fcmovnbe
jae
and
cmp
push
dec
hlt
shll
xchg
arpl
insl
addr16
push
std
push
add
pop
ljmp
sub
pop
add
inc
add
lock
add
sbb
or
xchg
adc
lds
sbb
movsb
xor
pop
jmp
xchg
sub
cmpsb
mov
fld
mov
loope
jle
filds
push
sub
pop
shll
mov
cmp
in
popf
lret
lcall
ror
scas
sbb
call
enter
xchg
call
jo
out
sub
scas
bound
ret
adc
push
fsubl
cmp
and
call
push
cmp
mov
mov
movsl
and
and
pop
xor
sub
sub
xchg
sbb
loope
arpl
dec
mov
add
jne
shlb
pop
sub
ljmp
mov
imul
inc
xchg
aas
mov
dec
inc
pop
cmp
xlat
xchg
add
insb
mov
cmpb
and
out
clc
cld
mov
mov
jo
mov
pop
loope
pop
lahf
and
mov
lods
adc
jecxz
mov
iret
push
aad
push
push
and
jg
decl
mov
mov
push
jmp
and
out
sbb
adcb
outsl
pushl
je
inc
and
cmp
xor
pop
fsts
mov
es
or
jmp
pop
push
sbb
mov
fists
sbb
iret
js
fwait
mov
lcall
cmpb
insb
daa
aas
repnz
xchg
adc
adc
inc
loope
leave
pop
push
xchg
stos
xor
call
dec
jecxz
dec
xchg
mov
add
dec
push
cltd
mov
xlat
xchg
mov
add
shrl
call
outsl
andb
aas
sub
sub
repnz
sub
lret
std
xor
pushf
mov
ljmp
xchg
repnz
xor
nop
add
lret
test
outsb
add
adc
lcall
and
dec
mov
loopne
and
dec
loopne
inc
outsb
test
hlt
enter
mov
incl
aad
call
push
mov
jmp
sti
add
adc
mov
call
stos
pop
add
jbe
cmc
mov
push
mov
cmp
mov
cmp
cmp
shll
sbb
inc
dec
and
sbb
xchg
inc
xor
dec
negb
dec
jg
add
lret
adc
movsl
movsl
xor
gs
out
lcall
ljmp
ret
js
movsb
daa
pop
dec
cmpsb
mov
popf
and
lcall
js
gs
outsb
data16
int3
adc
push
xchg
js
into
jno
imul
loop
or
ret
or
jecxz
mov
inc
add
movsb
int
in
ret
mov
pop
pop
inc
sub
test
pop
repnz
call
scas
push
push
iret
sbb
fnstsw
jae
insl
cmpsb
adc
mov
adc
push
mov
cmp
movsl
dec
pop
jle
pop
cli
jmp
pop
insb
add
mulb
mov
ss
stos
sub
movsb
sbb
scas
xor
pop
or
shrd
sahf
xchg
dec
andl
mov
mov
sub
adc
out
sub
andb
xor
shlb
pop
test
fisubrl
arpl
xchg
out
adc
pop
jmp
inc
mov
mov
jne
in
inc
mov
pushf
xor
jl
sbb
shl
daa
mov
fisttpl
in
shrb
dec
leave
lods
push
clc
push
insl
test
clc
mov
dec
jge
dec
xor
xchg
rorl
mov
bound
bound
adc
mov
loopne
idivb
inc
add
lds
test
mov
mov
in
inc
outsl
imull
std
jmp
jne
leave
xchg
pop
rcll
ret
xchg
xor
ljmp
mov
cmpsb
and
insl
inc
test
call
movsb
rclb
push
call
dec
sarl
mov
mov
aam
clc
incl
dec
xchg
push
adc
lahf
and
cmpsl
cmp
sar
call
inc
sarb
insl
dec
ja
or
jge
daa
das
or
push
lret
push
icebp
mov
xor
push
jnp
clc
mov
adc
loopne
ds
int
push
jmp
faddl
pushl
xchg
bound
inc
sub
mov
add
mov
ficompl
jno
data16
shrb
or
decl
out
cmp
push
mov
sbb
pop
push
mov
dec
xchg
mov
pushl
cmp
jge
lahf
jg
mov
xlat
add
pop
les
sbb
sbb
sti
decl
mov
test
sbb
sub
cmp
sbb
inc
jmp
sbb
dec
jl
out
dec
ss
sbb
sub
xchg
sub
pushf
and
lods
je
je
cs
daa
decl
xor
fidivl
bound
push
fst
pop
cwtl
jl
lret
repz
jns
cmp
jmp
lcall
out
pop
xchg
ja
jle
lahf
jecxz
cs
mov
xor
mov
rclb
lcall
fstpt
mov
pop
lea
cmc
jmp
das
sbb
in
ljmp
push
in
jns
neg
mov
jo
sbb
and
xchg
out
cmp
push
sub
cmpsl
mov
xchg
cmp
jb
xor
call
mov
mov
lcall
mov
sbb
jl
jne
ja
fiadds
iret
loop
out
call
sbb
add
and
repz
cmpsl
insb
xor
inc
fs
inc
jbe
out
decl
sub
mov
jge
test
mov
loopne
call
in
int3
rorb
jae
ljmp
cmpsl
pop
push
gs
std
hlt
daa
scas
sarl
sub
fidivrs
addr16
std
fcmovnb
pop
add
add
fmuls
push
sbb
xchg
add
jb
sbbb
push
fcmovnbe
inc
call
ss
insb
dec
xorb
push
mov
mov
shrb
mov
push
test
cmp
inc
add
sbb
cmp
pop
lods
xchg
pop
mov
loopne
lcall
sbb
subl
in
cmp
xchg
into
imul
out
mov
sarb
lcall
dec
lock
inc
push
jne
dec
mov
aam
adc
enter
mov
xchg
inc
lahf
dec
ja
jmp
shlb
loope
cmp
xchg
sbb
mov
pusha
movsb
lcall
into
mov
iret
mov
es
adc
in
pop
popa
hlt
pop
std
mov
lods
int
cld
adc
mov
and
decl
out
pop
push
fldl
inc
lret
mov
jmp
mov
add
int
cwtl
aam
cli
pop
icebp
adc
or
call
imul
sar
pop
cmp
lret
scas
pop
xchg
mov
les
pop
cmp
fcoms
add
mov
push
jg
jmp
mov
incl
adc
xor
sbb
xchg
inc
lock
jg
dec
pushf
and
mov
mov
nop
cmp
arpl
stos
push
xchg
push
or
pop
shll
cmc
inc
push
test
push
gs
popf
ljmp
add
call
xchg
dec
pop
faddp
inc
movsb
and
adc
jp
popf
and
decl
jg
jge
fwait
adc
pop
sub
pusha
pushf
pop
std
and
fimull
cwtl
jg
loopne
push
mov
xlat
sbb
scas
pop
bound
add
cmpsb
dec
incl
movb
push
push
add
rolb
jno
mov
movsl
lcall
add
or
pop
jge
inc
inc
mov
jb
fcomi
jmp
push
into
xor
scas
sbb
adc
int
lock
imul
lret
xlat
dec
mov
js
popa
pop
in
nop
push
jecxz
xchg
pop
sarl
ljmp
test
ret
enter
out
push
and
icebp
rol
adc
push
adc
fisttps
inc
int3
dec
and
xor
cmp
xchg
jb
arpl
add
ja
lds
shlb
mov
mov
and
cmp
into
inc
in
push
dec
dec
in
or
incl
push
incl
jns
lahf
cmp
mov
std
cmp
and
adc
call
shll
xlat
out
shrl
addr16
ret
push
pop
sar
ljmp
data16
sbb
sbb
orb
pop
sbb
push
sub
addl
push
sbb
outsb
pop
insl
push
inc
jl
and
jmp
adc
insl
shll
inc
fidivs
jecxz
and
push
call
push
jle
sbb
enter
orl
xor
push
xchg
adc
ljmp
arpl
inc
les
pop
test
les
les
mov
push
lret
and
dec
repz
push
mov
sahf
cld
lcall
push
adc
iret
xchg
or
adc
or
jno
inc
xchg
punpckhdq
pushf
dec
sbb
popf
pop
jg
cmp
and
cmpsl
jns
sbb
incl
lods
add
push
add
aaa
popa
ret
xor
imul
inc
push
xchg
mov
ljmp
add
jne
popa
sbb
sub
xchg
cwtl
sbb
test
adc
jg
pop
mov
xchg
cmpsb
and
fidivs
cmp
inc
xchg
and
sbb
call
inc
adcb
mov
jnp
dec
pop
lods
addl
adc
inc
in
dec
loopne
mov
mov
lcall
pop
test
call
pushf
push
dec
aas
push
inc
dec
and
idiv
ljmp
dec
xchg
div
mov
hlt
adcl
jmp
mov
bound
pop
sbb
lcall
lea
and
mov
jns
sbb
mov
push
ljmp
jl
mov
fwait
dec
xchg
test
lock
stos
adcl
lcall
imul
test
rcll
sub
sbb
fsubrl
mov
mov
aad
mov
mov
jae
ljmp
das
sub
mov
push
xchg
cmp
ljmp
addb
sbb
ret
fcomip
decl
sbb
dec
insb
test
and
adc
je
cmp
inc
or
push
dec
int
or
inc
hlt
mov
dec
fnstcw
incl
or
xor
and
dec
xchg
mov
sub
mov
dec
adc
jg
mov
dec
in
pop
adc
mov
xchg
adc
loope
dec
sti
and
mov
inc
mov
nop
or
clc
jg
jb
sbb
push
mov
add
inc
sahf
push
pop
aaa
sub
ljmp
aam
mov
lahf
movsl
rcrb
adc
out
daa
mov
push
decl
sub
pop
stos
jno
mov
xchg
xor
out
gs
ss
dec
xchg
call
push
movsb
inc
pop
ljmp
pop
or
jo
dec
leave
jne
pushf
in
ljmp
sbb
pop
mov
stos
jne
and
dec
xchg
subb
test
call
clc
xchg
and
xchg
leave
outsb
lcall
popf
pop
aam
cmpsb
fs
ljmp
aad
pop
and
dec
cld
cmp
xchg
scas
add
fstps
es
and
ljmp
int
aam
aaa
movsl
out
adc
jbe
scas
in
andl
sub
add
cmp
lcall
jno
out
aad
mov
jge
sbb
shlb
fadd
rorb
push
cli
call
aad
xor
xchg
clc
jmp
out
data16
jmp
leave
adc
decl
mov
dec
adc
pushf
xchg
inc
push
and
jo
out
dec
hlt
shl
mov
cltd
mov
push
cld
int3
sbb
fwait
movsl
call
xor
sbb
dec
shrl
push
xlat
sbb
sbb
adc
or
sub
int3
int3
out
lea
hlt
pop
lcall
dec
outsl
mov
incl
dec
movsb
sbb
jp
mov
lock
sub
or
pusha
sub
sub
xchg
xchg
dec
mov
push
xchg
push
and
and
mov
je
xchg
or
ljmp
arpl
jbe
outsb
sbb
rorb
add
xor
nop
dec
dec
das
push
icebp
decl
dec
sbb
adc
inc
pop
psubw
adc
xchg
jl
add
dec
test
sub
addb
and
pop
mov
inc
xor
iret
addl
xor
pop
inc
call
sub
push
pushf
jg
xor
adc
jmp
pop
fbstp
xchg
dec
pushf
sub
sbb
jle
sub
pop
xchg
mov
jmp
hlt
adc
out
push
add
xchg
mov
inc
test
cmp
dec
xchg
cs
lcall
aam
sub
in
in
dec
dec
aaa
mov
mov
iret
clc
mov
call
sub
dec
sub
mov
mov
push
ja
mov
jmp
mov
test
sub
xor
and
and
aaa
xchg
das
and
pop
in
cs
xchg
lock
mov
fwait
jo
mov
aas
in
xchg
sbb
mov
jae
jne
in
adc
call
movb
xchg
mov
jg
in
jg
and
mov
loope
mov
cli
xchg
sarl
mov
push
sbb
pusha
mov
push
mov
aad
jb
call
call
lds
mov
cltd
test
enter
add
and
sti
ds
and
inc
jne
xor
incb
cmpsb
fsubr
dec
test
xor
lahf
xor
incl
xchg
jae
fdivp
imul
dec
mov
cmp
scas
dec
iret
call
mov
pop
testl
cmp
subl
lahf
outsb
fidivrs
sub
or
call
movb
lret
dec
sbb
or
lahf
cli
ljmp
clc
fwait
mov
sbb
cmc
les
fadds
sub
lcall
stos
repnz
fistpl
adc
movsb
inc
in
mov
dec
movsl
pusha
scas
inc
mov
pushl
push
je
rorl
in
movb
cltd
lods
adc
pop
jmp
dec
jp
into
call
xor
sti
into
mov
sub
dec
dec
mov
push
mov
inc
pop
lods
enter
lds
fisubl
pushf
cli
push
dec
shll
sbb
pop
lds
out
gs
ret
add
in
push
mov
test
and
jmp
lcall
aas
sub
mov
cmpsl
mov
cmp
dec
mov
push
les
js
imul
ja
push
mov
add
jp
mov
data16
outsb
or
mov
decl
out
lds
std
aaa
movsl
add
inc
xor
adc
lcall
test
testl
adc
incl
bound
xor
aad
xor
pusha
pusha
inc
aam
sbbb
push
xchg
mov
into
cs
mov
jg
pop
push
into
out
xchg
pop
scas
ja
or
dec
sar
incl
xchg
mov
or
sbb
and
sub
stos
int
push
call
adc
push
jo
out
inc
fistl
pop
outsb
test
fmul
cmp
lods
cmp
ss
mov
in
ret
lahf
je
fistpll
mov
je
mov
mov
pop
dec
pop
popf
outsl
aaa
fwait
call
inc
jns
xlat
je
xorl
mov
dec
ja
add
pop
int3
mov
fidivrl
mov
jns
add
mov
test
jae
fdivl
loop
scas
xor
inc
les
jb
sbb
jmp
mov
pusha
lret
xor
mov
addr16
out
inc
sub
int
in
loopne
lcall
pop
push
negb
movsb
dec
mov
das
arpl
push
dec
mov
lret
data16
fbld
fidivs
daa
int3
add
push
loopne
and
decl
dec
mov
mov
in
sbb
shrl
fwait
mov
and
addr16
jbe
xchg
push
std
sbb
adc
sub
mov
decl
mov
mov
test
xor
cwtl
dec
or
loop
bound
std
sbb
ret
out
cli
decl
je
cmp
js
lcall
push
lcall
sahf
cmp
mov
cld
pushf
das
cmp
and
cld
into
jnp
mov
int3
shr
call
adc
stc
mov
mov
pop
test
cmp
cld
inc
and
pop
outsb
push
inc
decl
pop
out
inc
xor
inc
jns
inc
pop
add
xor
lds
clc
mov
add
or
add
or
jno
incl
nop
xor
add
or
push
mov
adc
addl
mov
xor
add
shll
sahf
cmp
cli
sbb
adc
cmp
pusha
sub
rcll
dec
movsl
dec
sbb
lods
aaa
inc
xorl
pushl
in
or
mov
sub
stos
inc
sbbl
mov
sbb
outsl
fdivrp
mov
mov
pop
push
add
rorb
das
pop
rcll
call
fldcw
adc
or
in
mov
pop
sarl
xchg
int3
pop
sub
sub
mov
adc
xor
mov
adc
call
lcall
ret
fisubs
dec
outsb
sbb
inc
sub
scas
dec
cmpsl
push
jle
js
in
rcll
jp
cmp
fildll
jns
out
call
clc
jg
fnsave
fwait
ret
pop
lret
cld
jle
or
pop
out
push
cmpsl
std
les
incl
dec
lock
out
ret
cmp
sbb
lock
decl
mov
and
mov
sub
cli
sbb
les
cmp
pushl
int
imull
mov
mov
fisubl
roll
mov
ret
mov
in
cmp
add
xchg
scas
push
mov
call
xor
dec
mov
test
stos
repnz
nop
inc
sub
movsl
sub
incl
mov
mov
fsubr
sub
mov
pop
inc
rorb
cmpsl
inc
mov
ljmp
lods
adc
mov
aaa
rcrl
subl
sarl
scas
mov
stos
lods
push
mov
push
fwait
call
xor
in
mov
and
xor
or
in
xor
mov
sub
dec
add
incl
push
mov
sbb
sbb
xor
loopne
fcomp
jp
lea
inc
in
pop
xchg
ss
decl
outsb
mov
in
aam
scas
mov
rolb
jnp
in
call
cmp
ljmp
stos
mov
pop
add
jl
movsl
aaa
cmp
idivb
std
movsb
lret
scas
jp
or
or
sbb
ja
or
jecxz
pushl
and
mov
jmp
mov
ljmp
pushf
dec
xchg
xchg
add
adc
xchg
pop
jle
lds
and
inc
faddl
imulb
mov
dec
dec
stc
pop
jb
mov
lea
int3
cmp
or
sbb
ljmp
test
inc
outsl
mov
and
nop
rolb
pop
lcall
mov
stos
adc
mov
sbb
into
movsb
pusha
imul
es
jmp
mov
push
push
push
jno
jp
push
dec
adc
and
hlt
jb
mov
sbb
mov
aad
pushl
repz
addb
dec
xor
decl
lock
mov
and
in
clc
sbb
aaa
lret
ja
gs
incl
imul
insl
clc
ss
sbb
cmp
dec
popl
ljmp
addl
jge
jmp
fldt
nop
ljmp
js
out
mov
sbb
xlat
mov
mov
pop
mov
push
add
sbb
adc
rorl
inc
xchg
adc
xchg
add
lods
test
inc
aas
adc
jbe
fsts
add
test
adc
add
ljmp
inc
jl
and
insb
repz
xchg
xor
jmp
clc
mov
adc
push
fstl
inc
sbb
cld
outsl
adc
pusha
fisttps
jne
add
aaa
nop
jbe
lcall
xor
mov
pop
push
push
out
push
popf
inc
mov
sarb
call
fsts
enter
push
movsl
leave
push
cli
xor
jbe
shlb
mov
pop
xchg
inc
adc
mov
cmpsl
pop
jns
jnp
dec
into
dec
call
cmc
push
mov
ljmp
mov
and
test
ljmp
pusha
push
push
out
std
ljmp
lret
jge
mov
cld
adc
insb
mov
xchg
movsl
test
jno
adc
cmp
getsec
xchg
shr
sub
xchg
inc
push
test
jns
mov
add
sub
lea
xchg
int
mov
xor
insb
lcall
movl
push
xorb
rcrb
push
jecxz
jmp
cmp
icebp
rclb
scas
mov
jns
xchg
cli
xchg
dec
les
sbb
mov
fcmovu
movsl
add
cmp
adc
sub
mov
orl
or
unpcklps
ljmp
push
mov
jne
mov
sbb
cmp
xchg
jmp
adc
mov
xchg
add
sbb
call
lgs
jne
and
lods
inc
aad
pop
loope
mov
add
and
fildll
mov
xor
movsb
or
mov
xor
pop
cmp
mov
push
vcomisd
sahf
test
js
pushl
repz
push
adc
js
pop
xor
adcl
dec
mov
push
mov
sti
sbb
fadd
xlat
aad
arpl
adc
cwtl
xchg
add
push
shlb
xchg
and
stos
or
loopne
test
clc
outsl
cltd
loop
pop
lock
mov
or
pushl
clc
sbb
mov
pop
nop
sbb
nop
sbbb
pusha
or
jmp
xchg
cmp
and
aam
xchg
es
jl
insb
pop
pop
adc
add
call
pushl
adc
sti
xchg
mov
test
push
inc
dec
mov
inc
mov
lcall
loopne
sbb
mov
xchg
lea
xor
xor
pushf
mov
jmp
dec
in
aaa
cltd
push
test
ljmp
mov
movsb
lcall
jp
inc
adcb
lods
hlt
xchg
leave
jb
mov
test
cmp
inc
xor
ljmp
adc
jmp
push
mov
or
pop
sub
pop
ja
xlat
mov
mov
fsubrs
adc
sbb
cmp
rcr
cmp
xor
dec
mov
and
inc
call
loopne
lret
add
and
or
inc
ss
stos
dec
mov
mov
js
and
fidivrs
addb
cld
pusha
xchg
push
loopne
inc
test
cmp
or
dec
inc
loope
nop
sbb
cmp
and
push
fcmovnbe
test
inc
mov
fs
cmp
es
decb
push
ror
leave
mov
shr
addl
and
or
adc
xor
xchg
cmp
xor
std
and
mov
call
lret
adc
mov
popa
ds
add
xor
adc
pop
mov
push
pushl
dec
adc
pusha
xchg
fldenv
add
cli
xor
notl
xchg
push
stos
jbe
cmp
lock
or
or
add
mov
into
repnz
mov
cmc
xchg
js
movsl
xchg
mov
aad
test
cli
inc
dec
lahf
data16
in
or
mov
jecxz
sub
out
and
push
mov
jge
mov
shll
xlat
int3
xor
pushl
add
jmp
iret
inc
outsl
sbb
daa
sbb
adc
mov
mov
lcall
mov
pop
cmpsl
lea
test
push
jmp
je
pushl
push
pop
add
push
xchg
bound
mov
lods
sbb
xchg
fwait
mov
lcall
cmp
push
scas
adc
sahf
sub
pop
lods
pop
jge
aaa
push
and
fcomi
cwtl
inc
insb
decl
sahf
shll
mov
pop
sub
pop
push
std
jno
mov
xchg
inc
movsb
rorl
jg
stos
push
ljmp
xor
inc
add
popf
fcoms
adc
jo
les
dec
out
fiadds
ficomps
pop
pushf
lock
mov
mov
sbb
or
fistpll
mov
cmp
ja
adc
int
decl
pop
cmp
add
dec
repz
lods
adc
jmp
aaa
mov
test
in
je
ljmp
pop
gs
stos
out
jl
clc
pop
dec
jno
bound
mov
bound
mov
call
int
jg
jg
in
and
push
push
inc
push
fs
into
test
add
or
jmp
rolb
call
fcoml
ret
in
cld
and
xor
decl
lock
aas
pop
ret
xor
inc
push
addb
sarb
jmp
dec
in
mov
add
bound
mov
inc
dec
test
aas
dec
orb
lcall
testb
and
sub
add
add
mov
stos
or
movsl
sbb
push
dec
repnz
jge
and
pop
sub
lcall
and
in
push
push
inc
andps
ljmp
stos
push
arpl
push
movsl
xor
inc
loopne
ljmp
dec
mov
int
cmpsw
and
incl
jo
and
xchg
cs
or
nop
jbe
scas
and
mov
idiv
int3
and
inc
jecxz
insl
pop
shlb
mov
loopne
rolb
ljmp
lods
sahf
loop
jmp
push
push
insb
cmpsl
adc
adc
mov
loop
jp
test
decl
ret
bswap
fsubrs
fs
bound
dec
stos
jg
mov
cmp
mov
test
dec
mov
jbe
add
movb
cltd
aam
push
stos
inc
cmp
inc
aaa
cld
pop
cmc
or
add
and
clc
shrb
cmp
incl
xchg
cmpsb
mov
pusha
das
adc
mov
or
subl
and
and
in
sahf
push
or
mov
mov
incl
icebp
aaa
std
decl
rorl
stos
mov
push
cmp
xchg
ja
dec
inc
mov
lea
fisttps
movsl
or
mov
add
xchg
pusha
push
sahf
repnz
dec
add
xor
adc
mov
sub
and
mov
mov
shrb
fidivs
inc
push
cs
adc
pop
push
leave
mov
jb
sbb
jmp
xchg
push
sti
stos
pop
pusha
mov
mov
in
mov
lcall
sbb
loope
das
and
call
loope
adc
push
mov
jle
pop
fmull
mov
stos
sbb
pop
outsb
ss
dec
mov
aaa
into
loope
test
clc
incl
mov
mov
sub
arpl
add
sbb
push
sub
ljmp
mov
dec
inc
add
push
push
jmp
cld
mov
loopne
lret
xor
popf
cld
jecxz
stos
and
mov
out
rclb
ret
popf
shlb
jo
push
jg
push
or
dec
inc
pop
mov
lock
ljmp
mov
pop
je
or
and
aas
insl
mov
std
fistpl
and
add
mov
or
and
addr16
push
test
cmp
mov
xor
sbb
and
push
inc
dec
out
push
popa
push
ljmp
adcb
add
lahf
repnz
dec
lcall
push
scas
lods
test
in
mov
push
decl
arpl
jne
scas
faddl
popf
sub
jg
notb
sbb
jmp
ret
cli
xchg
idivb
rol
cmp
xchg
push
imul
aaa
cld
ss
ja
mov
test
adc
js
loopne
mov
fildl
bound
jle
adc
rcr
movsb
xchg
adc
repnz
inc
dec
divl
jno
test
pushl
add
int
adc
sbb
int3
sub
in
std
fcomip
call
push
das
or
sbb
xchg
xor
je
dec
dec
or
jl
add
mov
lahf
sub
shlb
ss
mov
add
push
lcall
call
mov
cmp
ucomiss
inc
xchg
orl
jmp
or
dec
push
and
sub
in
movb
push
fists
cmpsb
and
sub
mov
jbe
aam
jmp
mov
decl
pop
xor
hlt
and
add
push
jg
decl
ljmp
enter
sub
push
sub
call
fcompl
das
in
push
repnz
add
loopne
movsb
or
jmp
sub
push
mov
or
and
push
mov
push
inc
outsl
fldenv
sub
std
cmp
arpl
stos
sub
sbb
mov
adc
aad
sub
popf
movsb
dec
or
dec
imul
out
xchg
pop
xor
jbe
jmp
imull
or
jmp
or
gs
icebp
pop
mov
lea
decl
push
icebp
das
lds
push
stc
loop
call
std
imull
mov
push
std
dec
pusha
jbe
xchg
data16
mov
rolb
call
int3
lcall
xchg
adc
push
xor
add
lcall
add
add
cmp
loop
pushl
and
push
mov
addb
ljmp
and
pop
jp
test
and
test
les
xor
into
mov
in
shll
out
fiadds
ret
mov
mov
jg
or
loop
out
ljmp
sub
jo
inc
es
cwtl
cmp
mov
subl
add
shl
in
cmc
icebp
orb
dec
xor
xor
ud0
mov
pushf
add
or
and
adc
push
cmc
sub
mov
div
sbb
fdecstp
push
mov
ret
hlt
incl
push
jle
adc
shll
push
sub
xchg
cmp
sbb
incl
int
das
aam
loopne
push
lods
xchg
aam
adcb
dec
adc
adc
xlat
ret
mov
or
cli
mov
cmp
xlat
adc
adc
jb
call
mov
cmp
daa
xor
mov
sbb
sbb
or
lods
adc
jbe
lcall
pop
lods
mov
call
jo
push
lret
jg
insb
andb
xor
in
call
push
add
mov
mov
add
push
insl
push
addb
fistl
jbe
xchg
jecxz
jo
dec
loop
cmp
cmp
pop
pop
bound
adc
adc
ljmp
dec
dec
mov
ljmp
and
adc
pop
aas
mov
insb
add
or
mov
decl
sbb
repz
and
je
sbb
mov
ljmp
out
or
add
outsb
xchg
mov
loopne
add
add
sbb
push
sub
xor
jo
ret
je
scas
sub
jg
pushl
comiss
or
movsl
arpl
aad
mov
pop
jg
cwtl
jecxz
cwtl
leave
lods
clc
call
jg
fstps
or
mov
and
addr16
std
call
lods
js
xor
orb
push
xchg
out
fs
hlt
fiadds
loope
les
push
push
incl
jae
sub
dec
mov
mov
fwait
imul
sub
call
mov
adc
mov
fisubrl
dec
push
shll
inc
lea
mov
mov
and
sbb
jno
aam
mov
dec
ret
pusha
aaa
enter
incl
cli
push
push
add
mov
push
jecxz
sarl
or
hlt
dec
or
cli
incl
xchg
lock
inc
dec
arpl
inc
jp
dec
mov
outsl
or
ljmp
bound
jp
xlat
and
adc
notl
pop
aam
jns
add
pop
push
das
ret
adc
lea
pop
pusha
or
cld
pop
or
push
mov
mov
or
pushl
pop
popa
xor
das
cmp
push
adc
daa
movsl
shll
push
nop
test
dec
and
jmp
ljmp
stos
xchg
stc
cltd
mov
mov
jecxz
addr16
test
andl
pushl
cld
movsb
fs
mov
iret
xchg
stc
jg
mulb
push
in
jbe
jle
std
decl
clc
sahf
mov
xor
pop
ss
mov
pop
scas
cmp
sub
push
les
lcall
cltd
imul
mov
insl
fnsave
out
ret
fcmovb
inc
push
mov
mov
pushl
jp
scas
cli
mov
shlb
push
push
mov
add
inc
inc
int
movsl
jmp
or
jno
ljmp
clc
and
mov
in
inc
inc
mov
jb
mov
shll
and
pop
sar
mov
es
pushf
lcall
dec
fs
call
lock
stc
gs
je
scas
sub
int3
test
pop
gs
add
pushl
clc
lods
sti
inc
sbb
and
and
push
and
adc
call
decl
stos
dec
jp
mov
and
test
xchg
jg
sbb
je
push
in
mov
stc
sub
mov
jl
push
je
mov
jnp
js
mov
mov
leave
dec
cmp
pop
idivl
incl
mov
cltd
ret
in
sub
mov
sbb
rcrl
fisubrs
mov
aad
ret
mov
mov
jbe
jnp
incl
shll
sbb
mov
ds
fs
test
sub
or
test
js
mov
mov
sub
or
pop
lock
insb
lods
push
dec
data16
call
add
shlb
mov
push
mov
cs
shlb
ljmp
shrb
jge
and
inc
jecxz
sbb
loopne
xchg
pop
fldcw
stos
sub
add
aaa
scas
clc
sub
fsubrl
into
dec
ja
fildl
inc
cmp
or
cli
sub
fsubrl
test
sub
addr16
dec
xchg
imul
push
decl
xchg
aad
jnp
mov
sbb
push
add
mov
decl
jmp
lcall
incl
push
jnp
int
addr16
loop
sbb
sbb
out
pop
pusha
xor
gs
ficoms
jne
adc
jecxz
push
loop
mov
cmp
cmpsb
ljmp
push
lcall
cld
lret
adc
das
jg
pop
sbb
cmpsb
call
fs
push
adc
pop
lock
jmp
jle
arpl
mov
dec
dec
xchg
mov
xor
mov
aaa
sbb
inc
push
test
mov
das
push
xor
aas
pop
add
test
aaa
loopne
sub
pop
add
call
inc
mov
negl
dec
jecxz
decl
mov
and
mov
test
out
xor
jp
daa
test
fisubl
lahf
fnstenv
fidivrl
add
call
mov
nop
popa
or
mov
daa
xor
lahf
adc
loopne
jno
out
lock
jae
or
push
sub
add
inc
popa
ffreep
cmpsb
push
add
jbe
add
clc
mov
test
cld
ja
and
xlat
stc
lods
je
scas
stc
cmpsl
ljmp
sbb
mov
mov
outsl
mov
dec
pop
cli
add
cmp
push
push
loop
sbb
cmpsl
fsub
scas
xchg
jecxz
jecxz,pt
pop
sbb
cld
jmp
sbb
sti
sar
dec
je
inc
es
push
sbb
sub
pushl
addl
es
adc
or
push
roll
lock
inc
mov
cli
inc
inc
mov
les
push
lret
std
decl
cwtl
test
xor
and
jg
or
js
andb
clc
icebp
aam
shll
lcall
imul
jp
lret
add
movsl
mov
pushl
pop
pop
sbb
cli
shlb
xchg
push
outsl
test
jp
into
fnsave
add
mov
dec
jbe
pop
mov
pop
cmpsl
mov
in
cmp
daa
jle
jno
out
xchg
mov
mov
jge
xchg
add
add
pop
mov
xchg
test
cmp
cmp
int
mov
or
stos
jb
inc
jmp
lcall
loopne
fucomip
jbe
mov
enter
aas
es
nop
pop
jg
sarl
mov
out
mov
lcall
cld
stc
mov
add
push
clc
inc
inc
push
stc
js
adc
inc
shlb
stos
pushl
loopne
jo
mov
push
pop
test
movsl
add
jnp
mov
loope
or
push
dec
lds
push
dec
leave
jmp
mov
cmp
loop
xor
cmp
pop
pop
sub
ja
pop
aas
adc
popa
sbb
bound
nop
cmp
xor
pushl
cld
js
mov
push
stc
add
in
or
mov
dec
sub
inc
js
xchg
dec
inc
sub
sub
mov
out
xchg
dec
jmpw
inc
cmpsb
dec
aad
lock
fsubs
xchg
and
lcall
pushf
jbe
mov
mov
pop
jle
xor
dec
loopne
sub
sar
mov
adc
mov
push
xor
add
cmovns
and
loopne
jg
test
lret
popf
jp
mov
bound
addb
jp
loopne
mov
mov
sub
add
jo
and
xchg
and
test
in
or
lock
adc
imul
fisubl
test
jge
mov
inc
push
stos
incl
or
push
mov
push
test
sti
lcall
xor
jge
adc
push
and
and
inc
fisttpll
jns
sar
jg
pop
cmp
push
popf
loop
test
loopne
adc
js
jns
push
cmp
jge
lea
decl
ljmp
aam
sub
mov
push
inc
sub
inc
adc
decl
mov
sahf
jp
mov
das
nop
xor
inc
ss
stc
lcall
cmpsb
aad
popa
test
mov
das
dec
std
jne
push
js
arpl
cmp
aad
gs
nop
gs
stc
and
addr16
int
push
imul
pop
pushl
and
jae
mov
fistps
or
add
dec
incl
xchg
push
pop
imul
dec
push
ljmp
add
push
jmp
xor
mov
mov
add
mov
ljmp
jnp
sar
lock
cltd
pop
push
sbb
fistl
mov
xor
inc
fs
xorb
incl
xchg
mov
jnp
clc
lcall
lcall
sbb
mov
aad
mov
bound
mov
test
arpl
xchg
incl
or
dec
inc
cmpsl
orl
adc
mov
sbb
sbb
mov
mov
not
add
or
or
roll
add
cmp
sub
dec
adc
icebp
outsl
cli
das
push
mov
outsb
push
clc
shlb
dec
cli
dec
dec
inc
mov
fcoml
stos
mov
dec
sbb
xlat
loop
adc
call
push
adc
or
loop
movsb
clc
xor
push
xchg
adc
push
mov
and
insb
dec
fldt
cmp
cltd
dec
push
dec
rcll
dec
mov
sarl
jnp
push
out
ret
push
pushl
cld
incl
roll
aaa
adc
subl
sahf
outsb
jg
sbb
cmp
mov
das
rorb
pop
xor
jmp
lcall
mov
cmp
or
push
shrb
in
push
xor
inc
hlt
sub
xchg
dec
dec
xorb
fsts
mov
outsb
js
jp
or
sbb
pop
cmp
clc
xor
ret
push
clc
xchg
aas
dec
jbe
add
xor
xchg
or
cld
cmp
sbbb
test
roll
jo
adc
sahf
hlt
inc
sub
fs
cmpl
or
pusha
push
add
stos
orl
mov
mov
cmp
adc
pop
mov
sti
fsubrs
or
mov
dec
inc
sub
mov
lcall
inc
fcmovb
sub
mov
sub
les
push
into
push
mov
add
sub
xchg
insb
sahf
incl
rcl
cmp
aaa
xor
imul
into
imul
ss
call
or
je
cmp
add
outsl
or
mov
mov
imul
inc
adc
pop
dec
add
cli
stos
inc
mov
jg
andb
stos
xorb
cld
adc
lret
lcall
jmp
fs
lods
or
xchg
xchg
fcoms
sbb
jg
pushl
lret
pusha
jecxz
mov
pop
out
cli
loopne
scas
imul
pop
lock
scas
clc
pop
fsubrs
fwait
adc
add
mov
mov
add
sbb
call
arpl
pop
xchg
ret
or
mov
in
leave
adc
lock
fadds
lcall
push
or
daa
pop
call
imul
nop
arpl
pop
mov
pusha
ljmp
dec
xchg
inc
inc
push
mov
lahf
cmp
scas
inc
mov
inc
int
jnp
mov
xor
stc
in
and
jl
and
out
insb
push
mov
test
outsl
mov
fnstenv
sar
push
mov
pop
xchg
mov
or
push
sbb
push
movsl
xchg
lods
stos
ret
sbb
fcoms
ret
xor
dec
or
stos
add
arpl
sbb
push
xor
sahf
enter
dec
call
xchg
or
pop
xchg
js
or
insb
cmp
call
mov
or
insl
add
insb
sub
xor
in
jbe
push
push
loope
jae
in
test
aam
mov
jg
iret
push
movsl
push
xor
adc
or
jo
sbb
shrb
push
and
in
out
ss
or
xchg
mov
addb
ljmp
and
and
sbb
dec
lcall
aam
cld
das
jl
fbld
fcomip
out
jno
sbb
jecxz
or
movsb
add
jle
xchg
ljmp
cmc
dec
sbb
ljmp
pushf
and
mov
push
cwtl
jp
cmpsl
cwtl
cmc
xchg
pop
cmp
and
mov
push
or
pop
ret
and
inc
dec
pop
cli
push
ljmp
daa
or
add
out
popa
mov
fiadds
push
xor
pop
das
mov
fs
mov
fisubrs
pusha
inc
pop
pop
cmp
pop
mov
stos
nop
sbb
pop
sub
dec
call
jns
mov
cmp
das
lahf
jb
and
adc
pusha
test
and
call
test
in
sbb
mov
lahf
out
inc
or
and
and
inc
add
andb
jo
jg
aaa
fisubs
pop
nop
shrl
cld
fld
andb
ret
jg
jmp
call
xchg
dec
arpl
ss
dec
mov
ficoml
out
or
jmp
fcoms
inc
lock
cmc
cmpsb
sub
test
negl
out
dec
mov
adc
cmp
or
jge
lahf
pop
cmp
dec
fdecstp
test
and
jae
push
inc
sub
add
out
sbb
jmp
mov
into
jno
mov
das
je
test
sti
push
mov
pusha
imul
shll
popa
popl
and
call
adc
push
mov
sub
scas
cli
ror
fstps
xor
push
sarl
into
fisttpl
jns
add
scas
cli
jmp
push
and
or
jno
push
mov
addb
sbb
inc
clc
fdivrs
add
add
fdivp
sub
adc
jo
adc
and
cmpl
movsb
test
jae
push
xchg
pop
cmc
shrl
xor
jmp
arpl
pop
daa
and
jae
and
jae
jl
xor
movsl
push
ljmp
push
dec
subl
jne
xchg
ja
incl
inc
pop
inc
aad
out
aad
cmp
pusha
gs
aam
andb
stos
or
incl
push
pop
cmp
sbb
pop
add
mov
daa
push
mov
dec
shll
movsb
jl
xchg
and
je
data16
mov
subl
and
sub
sbb
rolb
add
mulb
hlt
idiv
das
push
xor
loop
cmp
inc
push
xchg
ret
das
fdiv
add
mov
aam
pop
xchg
cwtl
dec
imul
cmp
mov
in
sub
sbb
jle
inc
mov
negl
push
pop
inc
inc
dec
in
xorl
pusha
add
or
sbb
pusha
mov
and
push
jo
push
add
mov
dec
push
decl
cmp
and
imul
xlat
rolb
ss
dec
inc
and
adc
cmc
adcb
adc
sbb
mov
incl
addl
push
aaa
and
test
gs
or
inc
cmp
pusha
in
mov
jg
xchg
ja
cmp
push
and
andb
push
adc
inc
mov
pushl
lcall
pop
push
pusha
xor
mov
jns
call
fdivl
ljmp
outsl
mov
fbstp
pusha
cmp
sbb
fs
aaa
mov
mov
cmp
pop
sbb
mov
je
jl
pop
dec
int3
rorl
push
notb
lret
adc
jno
mov
cli
xchg
pop
pop
inc
pop
aad
dec
gs
loop
lock
jg
sbb
xchg
pop
loopne
adc
pop
dec
xchg
incb
push
bound
xor
push
xor
or
call
cld
or
repnz
add
mov
xchg
mov
lcall
add
add
rolb
mov
inc
and
gs
push
mov
lock
lcall
movsb
cwtl
jns
sbb
cmc
push
push
xchg
xchg
mov
sbb
imull
pop
and
push
xor
cmc
pop
aam
sbb
lea
push
mov
test
jmp
test
cmp
aam
sub
ljmp
imul
xchg
arpl
sbb
aam
add
jg
and
fiaddl
push
test
sbb
mov
cmpb
pushl
std
lcall
add
jb
push
cmpsl
nop
test
jg
aas
push
xchg
or
add
pop
jno
cmp
roll
adc
mov
incl
pop
push
mov
sbb
das
sbb
dec
iret
xor
mov
push
mov
incl
fiaddl
out
xchg
add
xlat
testb
sub
decl
push
sub
or
sub
add
jecxz
sbb
push
call
cmp
bound
mov
xchg
aas
jae
pop
movsl
add
push
orl
jne
pop
sub
pushl
bnd
pop
mov
push
hlt
sbbl
push
jb
and
imul
ljmp
mov
hlt
cmc
push
xchg
xor
aas
mov
mov
je
adc
decl
adc
pop
add
cmp
xchg
sub
loope
adc
pop
addl
mov
lock
outsl
leave
aaa
sahf
cmp
in
pop
xchg
sub
cld
ja
xchg
pop
xor
test
sahf
push
pop
cmpsb
sar
incl
push
cmp
in
roll
gs
negl
adc
pop
loope
xor
xchg
adc
push
pop
aam
inc
and
sbb
orl
sbb
and
test
mov
incl
inc
xor
sbb
pop
mov
jg
idiv
add
or
xchg
repnz
add
add
cmp
fdivp
shll
xchg
sbb
aad
mov
sbb
adc
add
sbb
fstl
pop
push
xorb
jne
mov
mov
jne
sub
mov
jg
and
lcall
pop
mov
pop
pop
or
decl
sub
add
jb
pop
loopne
incl
pop
xor
sahf
inc
cmpsl
sti
js
cmp
adc
adc
mov
cltd
dec
dec
cmp
movsl
add
cmp
xor
or
cmp
rcl
ljmp
pop
push
sub
fldt
xchg
popa
sub
jmp
hlt
lret
popa
repnz
xor
sbb
popa
cmp
jbe
mov
dec
incb
sub
decl
and
xchg
sub
subb
shll
icebp
outsl
jbe
sbb
inc
mov
add
xorb
adc
decl
push
lret
es
xchg
negb
jno
js
insl
fistpl
push
mov
stos
fsubl
jmp
xchg
xor
dec
push
xor
mov
push
call
lods
sub
mov
add
sbb
fistl
add
cli
push
call
and
and
hlt
mov
js
adc
add
jb
ficomps
dec
movsl
inc
test
inc
mov
or
pop
sbbl
pop
repnz
orb
shlb
pushf
xchg
cmpsb
ja
rolb
adc
add
dec
xchg
mov
mov
movsb
inc
jbe
pop
notl
pop
mov
mov
xchg
mov
pop
cmc
push
inc
inc
adc
xchg
dec
inc
adc
mov
mov
push
cmc
sbb
sbb
sbb
add
popf
xlat
daa
test
call
je
pop
nop
sarl
push
pop
adc
test
loopne
cwtl
push
gs
mov
inc
sub
lcall
call
push
sahf
or
push
jle
push
mov
mov
lcall
js
lods
inc
and
dec
mov
mov
add
stos
add
decb
adc
icebp
addr16
inc
shrb
push
xlat
lock
leave
mov
inc
and
lret
mov
xchg
outsb
sbb
xor
pop
fs
jg
stos
add
in
add
pop
jb
push
jb
add
and
pop
rcll
adc
add
lods
imul
push
clc
incl
xchg
jno
jae
add
jae
pop
cmc
or
out
cmp
and
cmpsb
mov
mov
std
or
adc
mov
idivb
pusha
pushf
mov
and
orb
movsb
inc
mov
ja
pop
or
adc
and
ljmp
lods
call
cmp
xchg
cmp
jge
and
pop
dec
popa
mov
mov
stos
or
sbb
incl
fidivl
insb
fstpt
ficomps
insl
jae
mov
imul
xchg
out
cmp
pushl
stos
es
and
add
fs
push
ss
daa
icebp
outsb
stc
jmp
and
dec
adc
repz
jb
popa
jo
mov
call
sbbb
repz
jae
mov
adc
ds
dec
mov
repz
rcl
cli
inc
lahf
xchg
enter
sbb
mov
add
jp
jle
jp
call
adc
cwtl
ret
push
aad
sti
mov
dec
xchg
movsl
add
cli
ret
cmp
call
rclb
add
mov
or
pusha
add
mov
fiaddl
jl
mov
sarl
adc
xchg
dec
and
pop
jno
adc
sbb
push
push
or
aaa
fst
pop
bound
jae
xchg
ret
in
aad
insl
jbe
and
decl
cmp
addb
pushl
pusha
outsb
insb
fcoms
xor
push
add
xchg
push
fwait
push
inc
add
add
inc
push
jnp
xlat
jnp
add
lcall
mov
mov
mov
addb
or
mov
loopne
xor
dec
push
pop
addb
test
mov
clc
jmp
scas
and
xor
push
sbb
xchg
mov
xchg
call
stc
adc
rcll
ja
int3
repnz
jecxz
ret
mov
dec
bound
add
das
clc
call
das
lret
in
sbb
fs
mov
int3
ret
xorps
lcall
call
pop
sbb
push
sbb
adc
loop
aaa
mov
out
xor
cmpsl
sub
ja
mov
adc
lcall
cmp
dec
clc
clc
add
lock
cld
jo
xor
fiadds
pushl
xlat
inc
in
mov
cmp
xor
add
nop
shrb
jg
mov
lods
cli
inc
or
pop
loop
test
loopne
fsubl
dec
sbb
mov
shll
outsl
call
mov
nop
js
cltd
inc
and
push
lea
and
and
lcall
pusha
aad
mov
fwait
in
mov
out
outsl
movsb
sbbl
jle
je
push
sub
add
insl
sbb
jno
adc
mov
dec
scas
js
test
add
popa
out
mov
cs
add
mov
cmpb
sub
scas
pop
hlt
add
testl
outsl
jo
pop
sbb
lahf
lods
out
sub
in
hlt
mov
push
push
out
scas
mov
clc
je
cltd
dec
mov
pop
xor
ror
out
mov
adcl
sahf
cmp
aad
pop
cmp
addr16
and
push
or
and
jmp
ds
outsl
sbb
sbb
xor
fdivrp
bound
and
push
add
out
cmp
inc
sbb
mov
inc
sbb
lret
in
adcb
push
test
jl
outsb
push
call
bound
out
clc
push
add
sub
jne
mov
decl
incb
adc
inc
dec
rorl
in
push
dec
pop
fsubr
sub
or
rolb
pushf
push
jle
mov
fsubrs
sub
add
push
or
sub
sub
pop
fs
push
pop
jmp
in
and
decl
cmp
mov
lea
loopne
cmp
fwait
pop
lock
aas
jo
hlt
push
pop
lea
xor
dec
adc
repnz
fadds
in
int3
fdivr
das
cli
out
add
pop
out
xor
and
in
and
out
imulb
in
push
imul
cmpsl
xchg
cmc
outsl
ss
add
loopne
jp
add
das
and
mov
xor
jne
mov
in
cmp
outsl
lods
loop
out
lcall
push
add
cmp
mov
in
aas
fldenv
sub
lahf
iret
add
pop
xor
push
clc
mov
stc
js
inc
sub
push
sti
push
adc
inc
inc
and
mov
dec
push
push
aas
loope
loope
hlt
repz
mov
decl
dec
out
aad
jmp
pop
hlt
mov
xchg
fidivs
sub
xor
jle
push
testl
sarb
test
push
sub
push
in
int
mov
incl
sub
mov
push
mov
or
sub
adc
cs
scas
and
jle
add
call
scas
cli
and
jno
push
into
inc
mov
push
jno
inc
push
or
shlb
loopne
add
rol
inc
andl
or
sar
pushl
and
dec
jo
test
jne
clc
test
and
adc
push
mov
and
call
cmp
int3
cwtl
shll
pop
dec
sub
mov
xlat
and
test
ljmp
mov
mov
pop
xchg
decl
push
adc
roll
or
test
sbb
inc
mov
js
movsl
push
xorb
test
pushf
addl
les
cmpsl
sbb
sbb
popa
enter
and
addb
mov
pop
mov
and
fcompl
mov
or
loopne
outsl
lcall
out
cltd
or
jo
mov
jb
jo
jmp
or
int3
aad
lods
inc
je
push
int
inc
jg
cmpsb
shll
add
pop
inc
scas
fdivrs
xor
inc
fstpl
insb
and
scas
dec
scas
cmp
dec
andb
mov
lock
rolb
test
xor
aam
xor
rcrl
mov
lcall
add
adc
inc
mov
cmp
lcall
lcall
xchg
cmp
leave
inc
iret
ret
add
sub
sbb
popa
or
dec
or
adc
scas
aam
xchg
je
jno
incl
mov
adc
dec
sub
popa
sbbl
ss
add
loopne,pn
and
dec
sub
mov
fdivl
xor
or
filds
or
js
test
cmp
clc
sbb
addb
inc
mov
idiv
call
adc
ljmp
add
pop
push
sub
push
cmpsb
pushl
ret
adc
xor
pop
test
sub
or
incl
ret
mov
call
inc
shll
aam
pop
xor
push
test
sbb
push
push
aad
enter
cwtl
mov
inc
insb
hlt
les
inc
or
insb
and
call
cltd
insb
mov
mov
daa
xchg
js
dec
test
or
push
add
daa
push
pushl
test
adc
cs
lahf
pop
les
or
or
add
cmpsb
jg
sub
and
dec
cmpsb
mov
sub
mov
out
cli
fwait
cli
shlb
fsubrl
or
hlt
jge
mov
mov
or
stos
mov
mov
jmp
fcmovbe
add
cwtl
and
in
mov
jmp
lcall
out
and
pop
test
add
aas
mov
clc
out
cmpsb
inc
jae
xor
lock
sbb
mov
leave
jnp
outsl
adc
sub
stos
inc
add
fcoml
mov
and
add
push
inc
sbb
pushl
mov
scas
shll
int3
jmp
dec
mov
inc
xchg
jo
or
nop
xor
mov
sti
pop
scas
lcall
xchg
push
jle
loope
xchg
jp
or
int3
pop
mov
jnp
push
shlb
pushl
cld
xor
fidivl
mov
sub
add
lcall
dec
or
clc
and
ds
stos
xchg
or
mov
push
lea
push
and
andl
call
dec
push
mov
stc
add
jge
push
aaa
xchg
je
rcrl
add
add
or
add
add
dec
push
call
mov
push
ss
mov
push
mov
mov
and
cmp
pop
pushl
jmp
push
js
sbb
inc
cmpsb
or
cwtl
jns
adc
out
les
sti
aad
push
rolb
push
or
xchg
loop
test
fs
dec
mov
pop
jns
adc
call
add
lret
into
bound
dec
mov
or
dec
cwtl
or
dec
push
add
incl
adc
subl
mov
add
loopne
add
fs
jl
ljmp
in
sub
push
xchg
mov
add
arpl
dec
mov
pop
cmp
xchg
insl
mov
pushl
les
and
popa
into
jae
test
cmc
push
xchg
inc
sbb
scas
orb
jae
adc
repz
cltd
mov
or
pusha
adc
pop
inc
mov
push
les
ja
roll
and
push
aam
mov
add
ds
loop
inc
inc
push
add
mov
mov
stc
sarb
add
jp
loope
call
pop
icebp
call
dec
xor
push
ret
rclb
cmp
shlb
nop
add
fisubrl
cmp
mov
aaa
std
imul
ss
rorl
inc
push
test
aam
pushl
mov
and
movsb
aam
outsb
adc
mov
daa
mov
aaa
std
std
fimuls
orw
mov
sub
idivl
and
fcmove
cmp
lcall
mov
test
jne
nop
or
inc
fwait
mov
inc
call
call
mov
sbb
xchg
shlb
test
adc
lret
incl
adc
jle
inc
mov
and
loopne
incl
dec
in
dec
pop
lret
mov
cli
loope
cli
xchg
adc
add
xlat
rcl
pcmpgtb
adc
mov
pushl
pop
adc
roll
cmp
or
out
pop
int
mov
add
jg
and
adcb
xor
or
push
nop
add
sub
lcall
or
mov
push
xchg
stc
add
fisubs
mov
pop
insb
pop
and
push
ljmp
mov
jo
inc
adc
xorb
sbb
push
jno
add
sub
mov
dec
aad
mov
and
adc
lock
inc
and
decl
dec
push
outsl
out
movsl
fldt
ret
xchg
mov
decl
dec
push
mov
out
cld
xchg
adc
inc
xor
dec
shll
xlat
jmp
push
xchg
push
jno
xchg
inc
xor
popa
inc
mov
pop
je
cli
push
push
xchg
or
mov
mov
push
pop
orl
cld
ljmp
pop
cmp
lock
data16
add
and
in
out
sub
and
decl
or
push
push
xor
lock
pusha
roll
inc
inc
aas
jp
xchg
pop
test
cmp
fiaddl
sbbl
sbb
aam
add
push
sbb
pop
or
std
xor
add
cmc
test
pusha
test
incl
cld
mov
add
xor
jle
add
or
push
dec
mov
jmpw
and
stos
push
jne
incl
jge
and
sub
or
daa
add
or
mov
cmc
std
movsl
mov
or
lea
jns
ret
cmp
ss
call
pop
lret
push
jbe
notl
rolb
or
outsb
testl
sub
adc
mov
and
jge
sti
fwait
push
aaa
enter
lock
ds
and
enter
test
dec
push
daa
mov
push
pop
sub
pop
enter
push
add
call
imul
cmpb
ret
mov
jg
and
dec
pop
add
push
ljmp
fstps
loopne
or
push
push
popa
or
movsb
dec
or
xorb
pop
add
call
or
out
cmpsb
inc
push
inc
out
push
addl
sbb
mov
clc
out
mov
pop
jecxz
cmp
jl
xchg
dec
movsb
repz
nop
nop
ljmp
cmp
outsb
aaa
sbb
xchg
sahf
cmp
loop
mov
or
or
lock
pushl
and
mov
imul
and
sarl
xchg
ret
xchg
adc
jno
insb
jae
int3
jecxz
sub
inc
and
jg
pusha
js
push
jno
faddp
shl
fbld
popa
inc
aas
pop
xlat
jle
dec
add
subl
jle
std
mov
jl
cli
cmp
xor
sti
xlat
mov
std
mov
ds
mov
jg
jmp
std
aad
mov
jecxz
mov
add
lcall
mov
xor
adc
sub
mov
sbbl
movsb
push
inc
jno
adc
adc
lcall
inc
jmp
mov
or
push
xchg
fcomp
rcll
jnp
decl
jo
xchg
cmp
push
imul
popa
adc
jle
mov
or
add
cmp
lcall
inc
add
pusha
xchg
adc
arpl
cmp
sbb
sub
popf
xchg
call
push
push
cwtl
orb
add
pushl
insb
or
je
sub
add
ja
pushl
repz
rclb
sub
mov
js
jle
mov
dec
test
mov
push
stos
mov
mov
add
std
fucomip
repz
ud0
negl
dec
or
pop
add
ja
push
cmp
test
mov
mov
xor
pop
sbb
lods
adc
inc
cmpsb
rclb
mov
fists
push
cwtl
mov
aad
xorb
fwait
mov
mov
dec
and
mov
lock
mov
pop
es
pop
cmp
jecxz
jmp
mov
ss
xorl
inc
test
fidivs
add
lahf
sbb
sub
cmpl
sub
or
adc
xchg
adc
inc
sbb
sub
sahf
cs
adc
sarl
xchg
pushf
xor
add
cmp
mov
push
pop
icebp
mov
add
leave
add
or
inc
or
aam
dec
cmp
dec
call
sbb
jmp
sbb
fmull
xchg
loop
out
int3
xorl
dec
mov
dec
test
dec
or
dec
scas
aam
scas
and
cli
and
jecxz
cmpsl
aam
sahf
mov
sti
leave
mov
mov
lods
int3
dec
jecxz
dec
and
sti
jo
outsl
clc
decl
mov
into
cmpsl
scas
sbb
mov
ss
mov
xor
leave
xor
sub
dec
push
repnz
enter
mov
outsl
bound
clc
out
xchg
xchg
mov
dec
stc
sar
dec
dec
xor
sub
inc
ret
movsl
lods
mov
pop
mov
mov
push
ljmp
mov
fwait
xchg
or
jae
dec
fildll
and
fsubrs
inc
cmp
fisttpll
mov
inc
ljmp
and
mov
les
jb
add
push
jg
cmpb
cmpb
test
push
cltd
xchg
sbb
sbb
pop
add
decb
cld
stos
shlb
cltd
xchg
pop
sbbb
cmp
mov
pop
or
js
adc
xchg
xor
decl
test
mov
stos
mov
scas
roll
pushl
pop
fisubl
mov
mov
repnz
cmp
lds
sbb
lcall
in
incl
xor
cs
sub
ja
xchg
fdivr
enter
icebp
ljmp
push
sbb
xor
ret
sub
inc
add
je
clc
outsl
xchg
cmp
mov
and
andl
ljmp
mov
call
jecxz
add
mov
into
enter
xor
sub
or
incl
add
repz
js
push
fmuls
rolb
cli
ljmp
and
inc
adc
or
popa
aam
mov
out
int3
xor
xchg
push
inc
aad
inc
jge
in
aam
loopne
mov
insl
pop
pop
add
xor
sbb
mov
lahf
or
lahf
roll
inc
cld
or
adc
inc
mov
adc
jg
les
int3
lret
inc
test
adc
mov
add
inc
or
pop
cltd
add
andl
int3
sbb
mov
mov
xor
xchg
sbb
or
incb
repz
xorl
test
jno
ss
mov
dec
call
xchg
sbb
jg
sub
adc
mov
push
mov
jl
dec
aaa
cld
incl
add
push
pop
mov
mov
addl
pop
add
call
fcoms
pop
xor
scas
adc
sbb
and
sub
in
ja
pushf
xchg
gs
stos
lods
sbb
les
push
adc
or
mov
pushl
xor
test
cltd
imul
out
fcomps
dec
cltd
stc
mov
cld
sbb
mov
iret
imul
mov
test
sbb
and
adcb
test
nop
clc
jg
push
loopne
add
lods
add
adc
aad
jns
pop
jns
std
decl
jle
into
rolb
ret
aad
xorb
sub
pushl
pushf
jl
fistpl
fstpt
fs
aas
xor
cltd
add
cmc
lret
xor
sarl
ljmp
jns
or
push
lods
js
js
add
adc
add
cld
fwait
decl
adc
push
rolb
les
sbbl
pop
dec
fstpl
nop
roll
add
addb
and
and
pop
cli
add
and
fsts
push
rolb
pusha
pop
out
inc
lcall
loopne
add
sub
sbb
lock
xor
jle
add
mov
test
cwtl
test
call
cld
sbb
cmp
popa
xchg
cmc
popf
adc
lds
inc
loope
ljmp
filds
cmp
cld
mov
mov
sbb
sbb
sahf
mov
or
adc
mov
xor
std
std
fs
in
add
jg
dec
ds
push
sbb
rcll
repnz
jg
icebp
jmp
stc
and
les
insl
int3
loope
push
jns
loope
incl
dec
xchg
mov
or
scas
iret
lods
or
adc
std
lret
fwait
dec
nop
popf
xchg
subl
nop
inc
and
add
and
test
arpl
jecxz
jbe
adc
pushf
fistps
pop
pop
add
pusha
add
add
mov
sub
mov
and
and
lcall
xchg
xor
xchg
sbb
sub
xorl
arpl
adc
imul
adc
or
std
push
in
jle
inc
add
cli
in
cmpl
sar
mov
mov
adcb
stos
jmp
jg
mov
inc
push
xor
mov
add
mov
add
and
push
add
lock
push
mov
add
ljmp
adc
data16
add
sbb
push
mov
inc
add
jae
adc
push
loop
jecxz
mov
ja
shlb
fwait
les
fwait
push
or
sub
fldl
fisubrl
add
shlb
sbb
sbb
sbb
cld
xor
das
clc
mov
push
insb
xchg
arpl
adc
mov
sbb
jg
inc
add
std
sbbl
add
int3
and
pop
test
lea
dec
sahf
incl
shrb
and
mov
ljmp
adc
add
cmc
fdivp
popf
add
pop
inc
add
push
aad
jmp
sahf
pushf
adc
pushl
cmp
xorl
add
push
sub
adc
pushl
push
lcall
subl
cmp
lcall
push
loopne
test
sub
ljmp
fisttpll
push
nop
imul
decl
stos
jl
mov
enter
fwait
jmp
or
inc
dec
jns
push
xor
inc
xor
bound
cwtl
adc
lock
enter
mov
into
loop
call
aad
rorb
jo,pn
add
stos
or
xchg
sub
lcall
outsl
mov
fistl
sub
mov
repnz
sub
pop
add
mov
loop
pop
push
pop
mov
ljmp
aam
shlb
jle
fldt
cwtl
shll
mov
pop
xor
and
mov
push
test
push
subb
mov
or
test
pushf
mov
pop
cwtl
mov
mov
rcrb
aad
xor
jg
cmp
or
test
outsb
mov
ret
inc
inc
push
jb
test
lea
cli
outsb
adc
push
mov
in
mov
push
adc
outsl
sub
or
call
mov
ret
xchg
adc
fmuls
cs
add
das
sub
or
test
inc
fs
push
lcall
aas
scas
lea
js
and
mov
xor
sbbb
imul
in
xchg
subb
dec
push
clc
xor
outsb
lret
cltd
mov
fwait
movsl
fcomip
xorl
insb
add
push
movsb
mov
or
test
mov
mov
in
test
loop
sub
add
outsb
sbb
or
es
sub
pusha
jmp
sbb
data16
and
je
mov
outsb
inc
lahf
lock
fstl
sahf
pop
enter
mov
adc
jg
dec
mov
adc
mov
jns
sbb
xchg
cmp
jb
call
add
call
sub
or
mov
icebp
inc
xor
pmaxsw
jmp
add
punpckldq
ss
xchg
and
loopne
into
cmp
mov
xchg
adc
cmp
in
decl
fmuls
sbb
ja
mov
in
mov
mov
ljmp
out
stos
push
add
mov
xor
mov
push
test
incl
mov
lds
mov
imul
call
and
cmp
xchg
mov
xchg
pushf
mov
lock
rorb
dec
andl
fcomip
incl
out
pop
adc
sbb
adc
fwait
loop
fwait
in
jns
jne
shlb
flds
adc
faddl
or
mov
adcl
insb
nop
jp
test
mov
es
sbb
pmovmskb
lcall
clc
je
or
fdivs
adc
adc
xchg
addl
add
mov
cmp
jg
pushf
icebp
sbb
das
pop
daa
inc
inc
popf
fdivs
xchg
popf
rol
and
std
or
loopne
pop
xor
push
xor
add
pushf
xchg
sarb
xlat
sub
xchg
pushl
and
adc
mov
mov
mov
data16
sub
jmp
in
mov
cmp
sub
mov
sahf
jp
pmaxub
les
add
xlat
mov
xchg
pop
dec
mov
push
insb
dec
adc
push
jp
xchg
shl
out
mov
fwait
incb
cmp
push
push
and
testb
xchg
and
inc
loopne
fadd
stc
ljmp
mov
lcall
xchg
lods
sbb
mov
adcb
sub
adc
and
add
sbb
sbb
inc
adc
lds
js
pushf
add
decl
mov
lcall
inc
addl
push
xor
pusha
inc
or
sahf
xchg
xchg
inc
mov
or
jno
and
mov
mov
inc
in
add
mov
cmpsl
into
push
inc
inc
mov
pop
ljmp
nop
rorl
xchg
cli
sub
push
out
pop
xor
dec
repnz
test
mov
aad
sbb
add
sub
out
and
and
mov
or
xor
js
loop
mov
xor
decl
repz
into
xchg
cmp
push
mov
sub
addr16
decl
mov
add
in
shlb
push
mov
fs
mov
cltd
sbb
rclb
mov
test
add
das
mov
inc
xchg
pushl
push
mov
xchg
mov
test
repz
sbb
addb
dec
cmp
sahf
sbb
jmp
push
jge
cmc
into
lock
adc
addl
call
pop
mov
arpl
jb
lods
rol
or
int
mov
xor
test
movsb
ret
or
cwtd
jp
std
add
mov
inc
mov
data16
mov
test
sub
mov
xor
push
aas
ret
bound
xor
orl
bound
cbtw
xchg
out
jl
push
inc
fwait
cmp
and
lods
roll
pop
je
sahf
push
bound
pop
sbbb
adc
popf
dec
lcall
jne
jno
or
mov
jp
mov
sahf
and
mov
or
adc
sbb
jecxz
push
and
imul
clc
push
jne
cmp
push
inc
add
mov
inc
inc
cmp
loopne
inc
rorb
pop
dec
add
pop
inc
nop
xor
call
fistpll
mov
nop
xor
push
rol
pop
xor
sub
adc
adc
pop
loopne
ljmp
and
test
cmp
sub
ljmp
push
adc
push
les
xor
pop
pusha
lods
nop
sbbl
mov
mov
adc
sbb
sbb
insl
pop
push
inc
sbb
and
add
mov
mov
lcall
mov
imul
jo
sub
mov
adc
cld
or
cmp
sbb
test
nop
mov
incl
lods
rolb
adc
pop
rolb
daa
dec
dec
mov
jne
push
pop
inc
adc
adc
sbb
icebp
adc
pushl
push
shll
inc
testl
jbe
data16
fdivrs
ja
pushl
mov
sbb
pushl
jbe
cwtl
and
sbb
add
inc
icebp
jmp
nop
inc
or
push
rolb
cmp
or
test
pop
xchg
sub
je
popa
push
insl
cmp
sar
rorb
lock
jnp
or
and
ljmp
push
push
je
add
xlat
xchg
sbb
xchg
mov
call
cld
adc
cmp
fadd
leave
xor
mov
daa
jecxz
push
lcall
bound
mov
sbb
ss
sbb
jmp
sub
mov
jmp
xor
jo
or
jl
inc
jmp
ret
jne
incl
inc
dec
andb
or
movsb
adc
decl
cmpsb
dec
aas
nop
loopne
lock
inc
dec
sbb
adc
inc
test
ljmp
pusha
sahf
dec
xor
and
adc
mov
data16
inc
push
test
and
xchg
jp
les
loope
inc
cld
ljmp
ror
or
cwtl
or
adc
push
clc
movsl
inc
xor
rolb
add
push
popl
int3
mov
xor
push
sbb
or
es
mov
je
nop
add
mov
adc
lcall
pop
decl
pop
js
push
mov
mov
jle
call
adc
push
rolb
add
and
hlt
or
jmp
decl
sbb
in
jne
xor
push
inc
add
mov
pusha
fldenv
pop
push
dec
and
mov
dec
les
sub
cmp
and
gs
jmp
ret
lea
and
sbbl
pop
sbb
inc
imul
push
mov
mov
hlt
mov
xor
insb
call
mov
sbb
adc
push
add
pop
lcall
inc
test
mov
push
clc
decl
jl
xchg
sbb
nop
cmp
adc
fwait
gs
xor
fildll
ret
or
call
fsubs
push
push
movsb
pop
cmp
xchg
ss
jmp
pusha
rolb
cwtl
mov
dec
xor
and
mov
ret
lcall
sub
pop
add
mov
scas
imul
pop
push
imul
fcompl
xor
pop
scas
xchg
and
and
inc
adcb
xchg
loopne
mov
test
cmpsl
adc
sarl
add
add
mov
addl
inc
in
ljmp
sbb
lahf
in
mov
push
adc
cmpsb
lock
mov
inc
cmp
inc
sbb
push
dec
adc
add
adc
add
movl
mov
push
daa
cwtl
inc
or
loopne
andb
cmp
push
fwait
ljmp
cs
push
call
popa
jle
add
fmuls
push
inc
push
pop
sub
xlat
ret
js
ds
decl
ljmp
fdivs
mov
in
mov
add
and
movsb
imul
dec
add
sub
mov
xlat
out
fcoml
loop
mov
jmp
sub
xchg
or
adc
inc
xchg
dec
loope
jo
shrl
testb
inc
xchg
daa
adc
sbb
fs
inc
daa
sbb
ljmp
push
test
mov
add
inc
dec
xchg
push
int3
inc
or
test
decl
pop
ss
rorl
cmp
adc
cwtl
clc
jle
xchg
test
jp
xor
fwait
cwtl
hlt
pop
xchg
xor
fldt
xchg
mov
pushl
adc
mov
mov
mov
push
cmp
inc
clc
sub
mov
sbb
cli
insb
fs
lcall
mov
decl
clc
mov
test
xor
mov
mov
push
mov
mov
jae
xchg
cmp
sub
xor
mov
lcall
iret
icebp
sbb
sarl
mov
loopne
into
jecxz
add
ret
or
sub
and
clc
inc
and
mov
add
xor
aam
das
adc
sbb
sub
jp
sub
cmp
clc
out
or
inc
cmp
rorl
lods
aas
pop
adcl
dec
loope
jmp
enter
lcall
mov
in
arpl
lcall
sbb
es
or
mov
ss
roll
stc
rorb
aam
les
jno
push
fwait
lods
popf
inc
mov
cmpb
xchg
or
dec
inc
fbld
jl
lods
in
gs
mov
ljmp
pop
insb
and
mov
cwtl
add
lock
test
push
enter
push
xchg
lock
xor
nop
xor
jg
pop
adc
in
sbb
rol
mov
je
cmp
jle
mov
testb
sub
rorb
into
push
inc
cwtl
xchg
loop
divl
add
scas
je
mov
lds
inc
pop
in
repnz
cwtl
test
sub
addl
or
pop
adcb
and
add
sbb
pushl
lea
mov
push
ss
dec
mov
mov
test
or
cmp
xchg
dec
call
loopne
mov
inc
sub
add
dec
neg
sbb
lcall
jae
loopne
xor
pop
sbb
mov
cmp
call
sbb
mov
mov
dec
pusha
sbb
ret
pushl
jo
and
je
jg
cwtl
fcmovnu
xchg
cli
in
movsb
cmpsl
cmp
leave
icebp
sub
pusha
and
enter
addb
mov
lcall
fidivrl
dec
neg
mov
xchg
mov
stc
test
mov
lcall
incl
addb
add
adc
rcrl
xchg
mov
mov
and
push
push
mov
aam
iret
lods
cmp
lock
es
push
xor
dec
xchg
pop
mov
mov
incl
fwait
in
pop
movsl
xchg
subb
stc
in
push
pop
push
fistl
fwait
popf
cld
adc
cli
lock
dec
shlw
inc
inc
push
dec
inc
movsl
insb
ja
call
push
push
movsl
rcl
int
push
cmpb
call
push
cld
fists
add
dec
xchg
xor
add
push
or
jecxz
sbbb
adc
cmp
push
sbbl
pushf
out
cli
lds
inc
sbb
add
adc
pop
xor
ret
adc
jmp
push
xchg
into
gs
add
mov
push
int3
popf
adc
js
sbb
inc
or
dec
pop
pop
mov
nop
ljmp
inc
push
push
imul
cmp
mov
test
ret
ret
push
popf
push
push
or
rcll
xlat
loope
enter
adc
incl
adc
adc
jo
fldenv
les
and
or
in
push
push
xor
lcall
pop
adc
and
loop
add
pop
jecxz
push
and
mov
cmp
mov
xor
outsl
aad
movsb
xor
mov
cmp
sbb
incl
popa
push
mov
shll
push
xor
sbb
aad
xchg
adc
push
add
call
mov
mov
sbb
mov
mov
inc
ficompl
or
ret
cmp
addb
pop
fadd
repz
gs
jecxz
or
fs
cmp
inc
xchg
sbb
sbb
fnstcw
aam
add
push
cwtl
dec
cltd
insl
inc
hlt
test
sar
add
test
clc
subb
inc
sub
call
fsubrs
sbb
inc
sbb
loope
nop
in
clc
adc
imul
in
je
mov
adc
add
dec
leave
lods
jmp
push
jmp
lods
adcb
add
inc
pop
or
xchg
sbb
scas
pop
lock
cmp
stos
mov
mov
outsl
loope
aaa
lea
mov
add
add
and
mov
loopne
sub
push
call
sbb
cmc
ljmp
lock
or
adc
or
mov
or
mov
scas
test
cs
outsb
mov
and
test
mov
vmovsd
or
or
xchg
mov
mov
subb
adc
or
sbb
loop
out
jo
jle
dec
add
mov
dec
cwtl
inc
cmp
mov
and
xchg
push
mov
ja
or
push
add
fmuls
ljmp
xchg
aam
dec
dec
in
mov
inc
or
rcll
lds
jmp
bound
add
or
leave
mov
leave
or
pop
shlb
inc
xor
incl
mov
xor
jecxz
std
pop
sar
adc
push
and
inc
aas
lods
call
inc
shll
incl
adc
call
enter
scas
int
out
fimuls
sub
into
or
rorl
ss
cmpl
jg
xor
or
movsb
aad
rcl
xchg
into
or
leave
push
ds
dec
push
inc
cmc
mov
icebp
pop
push
bound
cs
add
cmp
clc
call
out
dec
adcl
fcom
add
adcl
je
dec
push
pop
hlt
jb
pushf
lcall
sti
mov
mov
inc
cld
jge
pop
sub
std
cmp
imul
stc
fbstp
lcall
cmovs
in
lds
xchg
push
xchg
ficoms
pop
mov
mov
add
pushl
add
pop
test
add
jne
movsl
shr
gs
jmp
dec
aam
decl
inc
imul
mov
out
xor
pop
pop
loope
insb
nop
jb
nop
std
lcall
addb
movsb
jl
fs
std
or
and
mov
clc
sub
gs
or
insl
rclb
xor
and
push
lcall
enter
cmpl
adc
data16
or
rcrl
rcrl
dec
loopne
call
cmp
cmpsb
pop
or
push
stos
push
adc
hlt
loope
loopne
push
insb
mov
inc
clc
mov
mov
dec
push
je
dec
xchg
fiaddl
incl
cmpsl
mov
dec
push
int3
mov
rcl
add
ret
aam
add
pop
inc
cmp
fld
add
in
sbbb
sub
call
int3
adcb
dec
cwtl
or
jmp
push
es
sub
or
mov
jnp
and
jmp
pop
mov
sbb
xchg
push
sbbb
cmp
pop
mov
cmp
add
lods
fnsave
push
repnz
stos
mov
loopne
mov
js
inc
orb
int3
xchg
ror
inc
xchg
leave
or
ljmp
shlb
push
pop
jecxz
xchg
push
pop
push
inc
jno
or
inc
mov
sub
roll
xchg
mulb
mov
lcall
mov
cltd
shlb
sbb
add
sbb
inc
ss
jl,pn
push
adc
movsb
push
lcall
js
pop
nop
jne
xchg
popa
xchg
fisubl
inc
movsl
lea
lret
adc
sub
xchg
xchg
cwtl
movsb
stos
lcall
pop
cmc
ljmp
xchg
pop
mov
push
jb
mov
dec
xor
scas
jp
or
and
incl
push
cmp
jo
inc
add
add
mov
and
sbb
adc
lock
fdiv
inc
lods
add
call
decl
mov
dec
mov
stos
loope
ret
adc
push
arpl
shlb
push
or
lock
dec
jmp
or
cmpsb
xor
loope
outsl
scas
push
movsb
outsb
jno
loope
cs
in
mov
mov
insb
pushl
jbe
dec
fidivs
mov
adc
or
incl
add
xor
mov
out
dec
loop
call
xchg
cmpsb
sbb
bound
and
and
fs
mov
lds
daa
sub
cmp
ret
cs
pushl
lret
dec
dec
adc
adcl
enter
pushl
xchg
test
cmc
adc
and
inc
or
enter
loop
in
pop
int
aad
jmp
add
pushf
mov
sub
or
cmp
add
fstps
sti
inc
or
xchg
mov
or
fldcw
sub
repz
mov
jg
inc
push
jnp
test
push
add
jmp
scas
xchg
in
xor
push
ljmp
mov
hlt
jbe
lcall
lret
fs
xchg
sahf
call
outsl
xor
fisubrl
dec
lcall
rolb
loop
xor
into
stos
xchg
cld
rclb
scas
add
push
fildl
jg
decl
jb
add
push
call
push
int
adc
or
decl
xchg
mov
rcll
mov
mov
pop
xchg
adc
pop
jns
or
or
or
sbb
push
inc
jb
jg
jno
mov
in
lock
inc
pop
mov
cmpsb
hlt
fwait
arpl
push
popf
mov
mov
pop
sub
cld
or
inc
jae
xchg
mov
rolb
mov
dec
add
inc
in
pop
add
incl
lea
pop
add
movsb
loop
movsl
and
daa
lods
add
bound
arpl
idivb
incl
into
push
ss
cmpb
dec
sub
xchg
push
pop
fsubrs
int
inc
adc
inc
and
xor
xlat
orl
push
lea
xchg
mov
js
mov
hlt
fisubrl
imul
mov
mov
mov
test
adc
ljmp
adc
test
hlt
int
adc
fldenv
lahf
testb
mov
in
pushl
adc
sbb
jge
dec
leave
jmp
fcomip
push
sbb
loop
push
scas
das
js
mov
mov
jl
xchg
push
pop
pop
sar
decl
jb
push
lea
lods
cmp
aad
cli
push
xchg
adc
lock
fwait
rcrb
xchg
sti
je
or
adc
decl
push
dec
adc
sbb
addb
cs
das
pop
dec
scas
in
aad
shll
jecxz
ljmp
rol
push
cld
aam
cli
xor
mov
sbb
pusha
inc
stos
out
inc
outsl
decl
mov
push
pop
push
or
imul
or
push
add
or
or
mov
adc
sahf
sbbb
jne
push
or
mov
data16
jbe
adc
decl
pop
lret
add
rcll
insb
inc
sbb
xorl
andl
sub
call
inc
in
stos
pushf
arpl
pop
je
clc
cmc
shrl
dec
sbb
dec
sarl
or
xlat
sbb
ja
cmp
adc
dec
push
movsl
lret
pop
add
popa
pop
xor
add
out
cli
push
mov
push
xchg
mov
push
ret
pop
hlt
ret
shll
and
test
xor
dec
ljmp
or
jle
in
or
push
test
sub
leave
jmp
push
addr16
gs
add
jnp
or
gs
shrd
push
ffreep
into
sbb
add
cmp
ljmp
adc
xorl
or
xorl
inc
in
call
aas
sub
adc
cmp
and
sub
dec
decl
fs
xchg
lahf
xor
test
push
mov
add
loop
fs
fdivs
fucomip
cld
inc
rcl
scas
sub
inc
stos
into
pop
dec
push
ret
fcoml
jmp
xchg
iret
ljmp
jmp
add
adc
inc
add
inc
loopne
in
insl
ljmp
movsl
mov
pusha
dec
push
mov
mov
or
popa
and
mov
clc
push
mov
dec
stos
mov
xchg
inc
cmp
std
sub
clc
stos
sahf
xor
stos
cmpl
push
adc
mov
cli
xchg
xor
sbb
mov
dec
mov
push
shrb
adc
push
push
mov
arpl
pop
mov
sarb
lock
clc
loope
xchg
jl
dec
sub
hlt
loope
loopne
push
jg
iret
mov
add
in
jl
or
or
stc
push
int3
mov
and
xchg
es
or
subb
mov
dec
inc
push
inc
mov
inc
subb
cmpl
mov
inc
cmpb
fmul
loopne
or
test
add
orl
inc
dec
int3
test
push
int
sub
incl
insl
xchg
sbb
cmp
adc
rcll
lcall
and
mov
mov
stos
push
or
mov
pop
movsl
cmc
enter
or
xor
andb
or
into
pop
jno
outsb
xorb
cmp
std
mov
cmp
loope
xor
inc
dec
pop
roll
popl
lods
fadds
andb
pushl
xor
fsubl
loop
or
push
sbb
mov
fxtract
stos
outsl
adc
sub
jle
push
mov
mov
or
shrb
and
and
decb
lret
or
xchg
sbb
movsb
andl
repnz
pop
xchg
cmp
mov
pop
mov
sub
mov
xchg
insb
fldt
sbb
mov
xor
inc
jmp
push
call
pop
xor
cmp
inc
and
sbb
cmp
pop
mov
cmp
push
pop
ret
test
arpl
xor
pop
jmp
jg
cs
shlb
dec
clc
mov
testl
incl
sub
xor
add
or
mov
push
sbb
xchg
lods
out
cli
test
cmp
cmc
pop
add
inc
das
cmpsb
hlt
dec
adcb
add
sti
or
ss
dec
gs
jg
push
add
jl
mov
add
pushl
jecxz
ret
dec
test
add
aam
lock
cs
or
decl
push
cmp
dec
or
insb
fsub
add
test
add
push
sub
mov
or
decl
sub
dec
enter
mov
lcall
std
jg
test
andl
sub
sub
cwtl
loope
jbe
and
or
cmpsb
cmp
jle
cmpl
pop
loop
and
pushl
dec
out
add
sbb
adc
add
iret
pop
pop
inc
daa
dec
dec
je
pop
sbb
dec
xor
dec
add
mov
mov
xor
xor
pushl
adc
popa
or
test
jecxz
pop
icebp
subl
push
pop
push
lods
mov
push
popa
mov
loopne
call
mov
dec
or
icebp
push
mov
xor
add
pop
imul
xchg
and
xor
incl
xchg
dec
and
mov
cmp
inc
add
add
mov
xor
push
or
dec
sub
mov
subb
push
mov
out
rcrl
in
aaa
and
cwtl
mov
sub
dec
test
outsb
mov
sub
sbb
out
lcall
pop
ret
fcomps
dec
sub
fdivl
lods
ror
fldt
jp
mov
pop
sbb
shrl
cmpsl
mov
pop
lcall
in
test
cmp
call
cld
push
js
push
pop
mulb
inc
xchg
push
sbb
xor
xor
sbb
lcall
or
fcoms
lcall
andb
jle
mov
dec
mov
adc
andb
mov
xchg
shlb
out
movsb
dec
fsubrs
dec
or
sub
sbb
and
mov
call
push
cmp
mov
add
jb
scas
dec
add
mov
cmp
cmpsl
inc
and
xchg
mov
and
shll
mov
mov
sbb
inc
jnp
lock
mov
pop
pop
lea
in
lcall
sbb
cli
decl
jae
cwtl
bound
add
push
or
nop
daa
sbb
imul
ljmp
adc
mov
inc
pop
jecxz
inc
or
mov
or
push
test
ja
aam
xchg
xchg
ds
dec
xchg
stos
xchg
bound
mov
js
mov
bound
stos
fimuls
jo
pop
rcll
sahf
pop
cld
dec
adc
ret
mov
mov
mov
jg
or
adc
dec
push
out
orl
test
ljmp
add
cwtl
mov
pop
dec
orb
rolb
repnz
jge
mov
pop
xchg
add
rcrb
pusha
decl
mov
loop
fsts
test
jae
inc
sar
cmp
sub
lods
rcrb
mov
call
dec
pop
and
ret
std
mov
mov
xor
decl
pop
hlt
gs
inc
imul
inc
mov
sar
cwtl
jp
dec
addr16
incl
lds
pop
movsl
mov
leave
dec
imul
xor
add
and
fcmovb
data16
adc
stos
lret
cmp
aaa
pop
enter
ljmp
mov
hlt
leave
fisubl
inc
add
pushf
lods
xor
repz
and
pushl
stos
lea
xchg
dec
cmp
add
add
add
les
test
roll
pusha
add
bound
pop
or
out
nop
mov
pop
out
dec
jg
incl
pop
aaa
sahf
lds
pop
push
mov
cwtl
scas
daa
movsl
sub
xor
xor
call
sbb
pop
fisubrs
add
or
hlt
inc
push
mov
inc
aas
rolb
jae
cmp
ds
loopne
push
pop
mov
into
and
xorl
jge
test
sub
push
subl
inc
test
loope
jmp
addl
add
pop
jp
add
mov
sbb
xchg
sub
pop
mov
jbe
call
aas
push
lds
and
add
int3
rorb
dec
adcl
add
inc
add
div
add
loopne
add
ud2
inc
cmpb
adc
int3
aad
sar
add
int
pop
sbb
push
sbb
jmp
jmp
cld
loop
clc
cmp
stc
or
adc
jb
mov
movb
clc
test
pop
orb
out
or
jecxz
mov
inc
subb
int3
fisubrl
cld
es
push
lret
daa
and
mov
icebp
and
cmp
adc
push
and
test
cmp
repnz
call
dec
dec
push
mov
push
mov
sbb
nop
push
and
cld
decl
inc
movsb
mov
psadbw
xor
test
push
sbb
addr16
stos
and
icebp
cmpsb
mov
adc
jb
push
incl
adc
mov
fxch
outsl
jle
xor
mov
std
ljmp
push
or
sbb
das
rcll
in
and
push
ljmp
push
cmp
pop
fidivrl
insl
cmpsb
pop
inc
and
rolb
push
pop
hlt
call
mov
data16
in
xchg
cmpsb
adc
out
orl
out
add
push
cmp
mov
inc
sbb
pop
mov
add
add
and
test
and
shlb
bound
mov
repnz
jmp
icebp
inc
icebp
mov
push
aam
mov
aas
lds
dec
lock
add
jl
incl
inc
das
stos
or
sub
xorl
addb
insl
sbb
sar
push
stos
cmpsb
jb
movsb
dec
shl
jp
in
push
and
lcall
adc
pushf
push
sub
test
sahf
incl
push
mov
push
sub
fcomip
ljmp
or
rolb
or
dec
push
and
fwait
sbb
out
sti
testb
inc
xor
fdivrs
pushl
push
adc
sbb
dec
xor
mov
mov
out
xor
mov
fsubrl
jnp
in
popa
sub
add
mov
incl
mov
jne
push
mov
dec
and
or
push
jne
xchg
pop
andb
jnp
or
cmp
loope
xor
sub
loope
sbb
cmp
test
jp
test
dec
ss
xchg
rorb
fcomip
or
scas
int
and
ret
xor
xor
cmp
cmc
ds
imul
int
inc
icebp
je
xchg
sbb
sub
lcall
jno
dec
pop
mov
jle
push
out
and
fbld
mov
hlt
mov
cli
loope
adc
cmpsl
outsl
mov
mov
in
dec
nop
pop
aad
jecxz
sbb
push
andl
fdecstp
sbb
lods
and
pushl
push
mov
lahf
cmp
ficompl
pop
jg
inc
pop
or
add
pop
fildl
lods
leave
leave
mov
and
lcall
jg
xchg
push
inc
lcall
pop
push
out
mov
mov
push
rorl
xchg
xchg
jmp
cmpsb
pop
mov
adc
jge
test
rorb
sub
decl
inc
test
pop
mov
pop
cmpsb
push
or
dec
mov
jp
and
dec
add
movsl
in
add
and
fistps
movl
and
add
mov
push
mov
xchg
mov
mov
pusha
adc
dec
dec
adc
or
subb
add
add
popa
adc
in
decl
and
cmp
addb
adc
mov
pop
pusha
decl
and
cmp
dec
mov
push
out
scas
cmp
lret
insl
sbb
inc
mov
push
in
aaa
js
add
subb
mov
fadds
sub
sub
pop
cs
out
mov
incl
dec
andb
adc
imulb
in
es
call
mov
fimuls
cmp
adcb
inc
fmull
rorl
push
gs
mov
lcall
cmp
add
inc
sub
lods
pusha
sbb
sbbb
and
data16
cmp
and
inc
xchg
push
add
mov
loope
movsb
inc
sbb
sbb
loope
xchg
jmp
adc
loopne
icebp
inc
xchg
dec
ret
xor
pusha
sbb
rcrb
nopl
sbb
call
lcall
popa
sbb
xor
das
xor
data16
lock
pop
sbb
repnz
mov
and
iret
repnz
xor
incl
jb
outsb
out
or
and
es
into
insb
icebp
mov
dec
test
orb
cld
lcall
js
aaa
push
sbb
pop
fiaddl
das
and
cmp
enter
nop
add
cmp
call
mov
imul
shlb
stos
mov
add
mov
js
in
ljmp
xor
or
ljmp
add
jno
scas
add
out
add
or
and
in
les
and
push
movsb
or
inc
lods
aam
and
call
jns
arpl
insl
or
incl
push
jmp
push
nop
jbe
inc
cli
mov
cmp
push
or
add
repz
adc
push
loopne
xchg
or
lods
or
rolb
inc
syscall
scas
mov
mov
xchg
pusha
addl
mov
mov
imul
in
or
ret
cld
inc
or
sbb
push
lock
pushfw
repnz
and
das
clc
scas
xor
lret
mov
push
movsb
jo
arpl
and
rcll
xchg
cmp
pop
push
adc
test
outsb
cmp
pushl
cld
push
mov
in
add
out
and
pusha
inc
push
or
and
pushl
inc
push
inc
pop
and
mov
xchg
jnp
dec
fs
decl
je
pushf
into
push
leave
ret
outsb
aas
pop
and
enter
and
fmull
sbb
jmp
push
mov
data16
out
push
movsb
dec
pop
lret
clc
incl
inc
jecxz
dec
and
arpl
pushl
loopne
push
jmp
jo
dec
inc
ret
sub
jg
push
dec
test
mov
test
lret
lock
inc
mov
fdivr
jg
scas
call
push
xchg
sbb
sbb
and
sbb
xchg
jg
jl
rclb
inc
cmp
jecxz
dec
jecxz
test
xchg
dec
xor
clc
cmp
inc
cmpsb
out
sbb
imul
aam
add
or
je
mov
sbb
test
or
or
xchg
push
jg
xorl
xor
fmuls
cmp
mov
jle
jle
mov
aam
mov
pop
ljmp
call
mov
xor
mov
popa
int
loopne,pn
jo
push
push
loop
add
jbe
inc
aas
int3
dec
jl
inc
inc
jp
outsl
clc
incl
mov
ror
add
mov
aad
lds
out
xor
push
in
or
stos
push
jb
add
xor
add
mov
negb
stos
fs
into
int
scas
dec
add
roll
in
adc
call
loopne
xchg
jmp
sbb
movl
es
pop
insl
orb
addl
jae
lock
or
fnstenv
push
call
push
inc
add
mov
push
mov
fwait
lret
fcomip
punpcklwd
iret
xchg
ret
nop
dec
in
cmp
mov
push
cmp
xor
mov
add
pop
dec
mov
orb
dec
xchg
rclb
pop
clc
lcall
incl
dec
and
push
inc
ficoml
jno
imul
fldenv
jmp
mov
xchg
out
xor
sub
rorb
and
aam
stos
adcb
or
pop
into
mov
clc
sarb
xchg
dec
mov
or
outsb
sti
outsb
jmp
jo
subb
outsb
daa
pop
mov
pop
les
push
add
ja
outsl
je
jnp
jb
add
cld
sub
mov
push
cld
ljmp
xor
int3
inc
xor
jnp
jb
mov
insb
xor
mov
xchg
jne
xlat
pushl
nop
xchg
and
xchg
clc
mov
in
xchg
mov
aaa
mov
inc
mov
pop
or
mov
in
mov
mov
les
or
sbb
add
and
sbb
add
add
mov
mov
inc
lret
ret
daa
push
iret
loop
mov
cmpsb
add
loope,pt
jmp
mov
mov
inc
pusha
add
mov
roll
ljmp
or
dec
ficoml
xor
mov
mov
jmp
push
dec
sarb
stos
sbb
mov
les
mov
add
xor
add
jmp
inc
pop
pop
nop
cmp
push
and
pop
sub
or
in
cmp
mov
sbb
rclb
jo
inc
dec
xchg
xchg
dec
mov
cmp
adc
mov
adc
cld
inc
decl
sub
dec
push
mov
incl
fwait
and
fcmovbe
dec
dec
cmp
decl
movb
into
jecxz
repz
or
lcall
in
int
adc
xchg
arpl
and
shlb
lds
pushl
pop
sbb
cli
jmp
xlat
inc
pop
mov
sbb
sub
mov
jb
cmc
incl
push
xchg
and
xchg
std
mov
fwait
incb
inc
bound
or
inc
sbb
and
mov
sub
push
es
decl
popa
pop
cmp
ret
xchg
cmpsl
rclb
sti
xchg
pop
sbb
or
sub
mov
jg
inc
sbbb
add
and
lcall
and
fwait
mov
sub
fwait
bound
and
test
mov
mov
and
adc
ret
dec
add
inc
and
ss
sar
cmpsl
mov
push
fisttps
insb
ret
push
xor
pop
ss
insl
jl
cltd
faddl
jmp
shlb
sub
sbb
cmp
jg
push
sbb
mov
loop
movsl
ljmp
or
add
outsl
cmc
aas
jb
inc
mov
inc
sbb
movb
push
aas
jl
out
fimull
xchg
cmp
push
dec
xor
mov
jg
pop
mov
sub
inc
loopne
add
loopne
data16
inc
incl
jge
xor
pop
ret
cmpsb
pop
or
sbb
enter
nop
push
or
lods
shll
fsub
jg
call
dec
sub
les
dec
nop
add
push
mov
mov
lcall
test
or
ljmp
jmp
stos
hlt
les
jno
insl
xchg
mov
pop
ljmp
scas
mov
outsl
pop
dec
cmp
inc
stc
arpl
jbe
push
lret
xchg
aad
inc
mov
mov
andb
xor
inc
jno
push
add
xor
test
jne
push
jne
stc
ret
int
cld
add
jg
fmull
jno
sbbl
cltd
cwtl
pop
add
ljmp
sbb
cmp
pop
push
shlb
in
mov
fstpt
add
insb
std
mov
sbb
push
mov
mov
sub
rorb
mov
cmp
adc
sbb
iret
jnp
pop
fdivrl
dec
rol
bound
lock
mov
out
jo
or
adc
je
mov
xchg
jp
fdivr
jg
clc
cmp
mov
push
or
cmp
je
mov
add
jg
dec
rolb
mov
sub
rcrb
add
adc
sahf
or
add
cmc
cmp
fs
push
lock
int3
xor
pop
mov
xor
jle
mov
incl
mov
mulb
stos
inc
out
add
cmpb
pop
mov
xchg
mov
inc
and
push
pop
adc
mov
pop
stos
inc
push
aam
or
pop
ja
add
jmp
mov
lret
mov
adc
or
pop
push
dec
or
push
cs
mov
in
ljmp
loopne
scas
add
outsb
and
mov
mov
jle
jnp
jle
scas
enter
push
nop
sar
pop
cmc
call
jge
xlat
add
inc
enter
sub
pop
push
sub
sub
ljmp
mov
ret
mov
cmp
mov
shlb
jge
jmp
xor
pop
or
sub
mov
fldl2t
les
hlt
xchg
mov
jge
test
call
push
popf
cmp
arpl
arpl
loopne
or
call
sbb
cmp
sbb
push
enter
shlb
mov
mov
xor
jecxz
adc
loop
divb
std
das
ds
push
xchg
or
xor
xor
cmp
aaa
push
in
xor
jg
inc
sahf
fsubp
popa
jle
inc
ds
jecxz
ds
jle
aas
mov
pushl
int
sub
bound
pop
xor
imul
dec
jecxz
xor
outsl
mov
cmp
mov
mov
addr16
imul
out
addr16
das
and
mov
and
mov
add
inc
dec
adc
jle
aas
inc
out
add
xchg
lods
cmpsl
push
push
jno
cmp
lcall
rolb
push
ret
xchg
or
jp
mov
push
push
in
or
xchg
out
or
int
add
insb
cld
pop
sbb
lret
fadds
ja
push
shrl
jbe
or
dec
mov
shr
out
push
mov
inc
hlt
fistpll
mov
xchg
or
and
es
adc
aad
add
cmp
orb
clc
lods
add
insl
jmp
sbb
mov
xorb
aaa
and
jns
jbe
call
jo
jp
push
xchg
rolb
test
pop
ss
sub
push
into
jae
jecxz
inc
or
cmp
sbb
je
sbb
add
incl
dec
clc
mov
push
lahf
pop
aam
xor
lds
push
clc
pushl
sbb
inc
mov
pop
xchg
lcall
mov
push
cld
clc
repnz
orb
lret
pop
sub
pop
loopne
jno
out
and
or
roll
pushl
sub
pop
fnstsw
int
scas
pop
cmpsl
pop
and
mov
mov
cmc
lret
lods
bound
call
mov
mov
out
xchg
lock
inc
cs
xlat
ljmp
xor
sbb
xchg
pop
cs
pushf
inc
inc
mov
sahf
aas
xchg
jp
or
pushl
xchg
cmp
pop
bound
imul
repz
mull
decb
test
js
lcall
lea
dec
jmp
pop
dec
mov
mov
mov
jp
pop
daa
add
jg
orb
mov
outsb
pop
mov
cmp
or
adc
pop
ds
xchg
dec
push
decl
roll
in
ret
insl
rolb
fadd
and
sbb
xchg
rolb
les
lea
cltd
xchg
push
and
outsb
inc
jg
cmp
mov
dec
daa
js
mov
pop
adc
add
and
in
das
nop
adc
and
sub
jo
xchg
or
adc
push
mov
or
filds
jbe
leave
xor
lods
mov
mov
imul
inc
or
pop
shrb
and
and
inc
mov
les
dec
loopne
test
incl
adc
repnz
mov
inc
xor
mov
loopne
aas
ds
push
rol
jno
xchg
testb
aaa
dec
cli
ficompl
test
push
mov
les
ljmp
inc
push
sbb
mov
or
in
adc
or
jmp
adc
movsb
hlt
xchg
inc
aam
lods
dec
sub
test
imul
sti
shll
and
add
cmp
jg
test
paddsb
das
mov
mov
dec
out
xor
dec
fs
imul
pop
outsl
mov
incl
dec
sbb
icebp
popa
sahf
les
pop
nop
add
fcompl
mov
xor
divl
cld
decl
test
sub
cmp
dec
cmp
mov
mov
call
fisubs
rolb
xor
mov
rorl
cmp
movl
add
or
push
add
add
xor
sbb
xor
adc
scas
dec
out
clc
mov
hlt
ror
dec
pop
faddl
cld
and
and
jge
mov
test
and
dec
push
cmp
xchg
subb
ret
adc
loop
xchg
cmp
xor
jbe
pusha
inc
or
andl
and
mov
sub
mov
rorl
jmp
dec
and
xlat
mov
mov
outsb
ljmp
push
lea
daa
mov
ljmp
push
mov
cmp
ljmp
in
cld
mov
fs
fwait
inc
sbb
call
cltd
adc
mov
pop
push
sbb
jmp
enter
mov
inc
fcomip
pushl
or
jo
mov
cld
or
and
pop
pusha
add
cmp
mov
icebp
pushl
mov
cmpsb
pop
cmp
movsb
lock
cmp
push
mov
push
stos
out
xchg
pop
lret
bound
sbb
cs
mov
xchg
adc
mov
lcall
jbe
lcall
mov
fsubp
dec
imul
xor
mov
push
cld
jg
sbb
xor
into
imul
out
adc
shll
jg
ja
sbb
and
shll
test
outsl
inc
and
pop
cmp
mov
call
orb
cwtl
pop
xor
in
dec
sbb
test
or
fucom
insb
push
repz
sbbb
call
loopne
scas
inc
bound
mov
orl
and
xor
es
subb
inc
pushl
pop
enter
mov
sbb
or
ljmp
sub
aas
cmp
movsl
or
cld
cwtl
pop
in
movsb
cmpb
dec
push
std
decl
sub
fmull
inc
mov
xchg
and
push
test
xchg
jo
in
jecxz
call
adc
fwait
push
and
or
nop
or
stc
loope
cwtl
jnp
xor
sar
mov
or
push
sub
mov
mov
rolb
andl
sbb
push
push
in
mov
mov
or
nop
std
pop
aam
negb
and
fxch
jbe
xchg
scas
je
xor
add
xchg
or
clc
fistpll
in
xor
cmpsb
ss
jg
xchg
lcall
push
xchg
adc
nop
cld
hlt
pop
push
xor
or
test
decb
decl
jmp
dec
xchg
shrb
add
inc
xchg
imul
subl
xor
jmp
orb
cmpsb
add
xchg
adc
xchg
nop
jmp
lock
shrb
fs
sbb
dec
orb
data16
push
je
pushl
movsl
cmp
imul
sahf
add
int
pop
cmp
jae
addr16
xchg
xchg
nop
pop
cmp
adc
into
and
xor
jp
add
mov
push
or
cmpsl
inc
dec
and
stos
pop
cmpsl
jle
pusha
and
aaa
cld
outsl
call
ret
xlat
loop
add
inc
push
push
and
pop
adc
jo
fwait
inc
xor
aaa
movsb
cmp
es
sbb
stc
sbb
movsl
mov
das
mov
lods
leave
pop
dec
cld
cwtl
fdivrl
movsb
cmp
mov
shrl
call
add
inc
sub
add
push
push
fwait
shlb
xor
ret
pop
adc
jbe
or
mov
inc
cmp
sbb
and
push
jg
sub
jmp
mov
ljmp
add
pop
pop
sub
inc
pop
jmp
mov
loop
incl
aad
imul
scas
mov
inc
cld
cmp
aas
jb
add
xor
pop
add
clc
cmp
addl
lcall
ds
popa
or
sbbl
int
fdivs
call
xchg
push
ss
fidivs
repnz
addr16
out
fwait
in
out
repz
jg
xor
inc
cmpsl
mov
xchg
sbb
cli
rclb
hlt
inc
ss
decl
push
ss
jmp
pop
dec
push
mov
pushf
cmp
lods
call
loopne
decl
test
push
mov
xlat
in
pushf
push
pop
inc
jnp
aam
out
fsubrs
and
sbb
in
pop
fwait
push
and
aam
lahf
cmp
sub
out
icebp
ljmp
sbb
cpuid
orb
add
ss
decl
mov
cmp
or
add
cmpsb
out
mov
push
aas
cmp
cmpb
sub
mov
mov
fidivrs
lcall
jp
pop
pop
pushl
and
imull
dec
jge
outsl
xchg
adc
pop
mov
xor
cltd
loope
jmp
cs
bound
fadd
cs
xor
lods
outsb
or
aam
and
jno
cmp
mov
sbb
loop
jge
dec
mov
add
decb
xor
loopne
cs
add
fcoml
orl
fs
push
orl
pop
or
jg
jg
xor
fstpt
or
and
paddb
xor
ds
jae
test
sbb
mov
xchg
aas
and
lcall
or
inc
add
test
cmpsl
mov
xor
ficomps
xchg
sar
dec
lahf
into
pop
lret
into
std
sbb
or
push
lcall
cmp
cmp
inc
jmp
popa
cli
stc
xlat
sub
cmc
inc
scas
ljmp
in
clc
and
mov
stc
stos
nop
mov
mov
shll
inc
push
jge
lahf
jae
fimuls
test
cltd
add
xlat
pop
dec
mov
mov
mov
movsl
iret
int3
cmpb
pop
sbb
or
dec
mov
insb
and
sbb
sub
aad
xchg
out
mov
adc
push
jne
loopnew
inc
adc
push
adc
leave
in
incb
and
and
arpl
roll
stos
push
pop
cmp
lcall
xor
fidivs
decl
sbbl
inc
movsb
jno
je
ret
fs
decl
das
jge
iret
les
mov
std
movsl
jb
sarb
push
and
and
dec
push
pusha
addb
daa
jg
popa
call
addb
and
movsb
add
dec
aam
cmp
bound
push
leave
nop
and
test
jo
or
or
adc
daa
and
mov
jne
add
jnp
jle
out
pop
push
jmp
xchg
jns
jns
out
mov
mov
sub
mov
jmp
jp
jp
fmuls
mov
push
mov
sbb
push
or
test
sahf
mov
mov
gs
push
jp
adc
call
lods
enter
gs
push
and
pop
push
push
jbe
das
mov
jl
inc
sub
arpl
testl
sub
pop
push
push
mov
incl
xchg
inc
and
adc
mov
iret
mov
dec
test
aaa
cli
repnz
in
mulb
mov
mov
sbb
sub
dec
sbb
inc
dec
je
adc
adc
out
cli
incl
mov
xchg
xchg
sbb
and
cmp
jmp
push
adc
lcall
xor
movsb
pop
lcall
push
test
xor
mov
decl
mov
addr16
outsl
stc
adc
pushf
xor
inc
ds
add
xor
inc
inc
push
and
xor
and
test
movsl
and
add
mov
rdtsc
pop
pusha
push
xor
or
decl
add
adc
xchg
mov
stos
and
test
daa
inc
notl
inc
add
pop
mov
xchg
pop
cwtl
jb
incl
and
and
cmp
push
sub
rclb
xor
or
xchg
addr16
ret
call
daa
mov
mov
push
xchg
aaa
mov
xchg
cltd
cmp
les
fnstcw
shrb
inc
mov
sub
cwtl
enter
fdivrs
daa
lcall
loop
cmp
fnstcw
dec
cltd
mov
clc
and
lcall
cmc
lcall
sahf
cmp
push
loopne
mov
lea
xor
fwait
out
inc
xor
xchg
inc
sub
insb
mov
imul
mov
rcll
sub
cmp
out
repz
inc
ss
movsb
imulb
inc
xor
dec
add
xchg
rcl
stos
and
std
pop
ret
and
pop
mov
aam
icebp
cwtl
push
in
mov
mov
xor
jmp
repnz
sbb
dec
call
outsb
mov
jmp
mov
or
cmpb
cmp
adc
stos
adc
dec
adc
icebp
adcb
jmp
popf
cmp
pop
out
test
pushl
lcall
pop
inc
add
and
sub
bound
xchg
dec
sub
das
movsb
or
push
xor
cmp
cmp
inc
cli
jg
pusha
dec
push
shlb
add
xchg
sbb
dec
xor
stos
pushl
nop
jb
xchg
xor
cmp
xor
add
or
jnp
mov
pusha
mov
out
jmp
mov
pop
adc
fwait
lcall
adc
gs
stc
repz
push
pushf
adc
pushl
les
lcall
test
cmc
fcomip
lcall
xlat
subl
test
fwait
enter
push
lods
pop
cltd
xchg
imul
lahf
sub
cwtl
sbb
cli
mov
lock
decl
pushf
pushf
push
imul
mov
jge
andl
inc
in
sbb
mov
filds
mov
sub
cltd
push
iret
xchg
lock
sub
decl
mov
imul
stc
mov
ss
nop
scas
das
add
es
dec
adcb
pop
testb
jbe
pop
mov
popf
sbbb
stos
mov
or
sbb
sbb
jg
sti
cmp
ss
and
mov
xchg
sbb
stos
inc
mov
ja
sbb
jno
pop
xchg
adc
nop
call
jne
stos
shl
pop
pop
push
xorb
and
loopne
cs
xchg
mov
push
jp
ljmp
movsl
lock
rolb
mov
shl
test
push
je
add
dec
xor
inc
clc
test
push
and
jmp
bound
push
sub
or
push
jg
or
loop
push
loopne
cltd
adc
lcall
jnp
pop
stos
test
add
mov
lret
xor
incl
push
popa
cmpsl
cmpsl
mov
mov
cmp
sbb
cltd
dec
stos
mov
mov
lcall
pushf
xchg
cmpsl
xchg
jns
lods
jns
sbbl
cmp
pop
and
call
pop
jl
push
aam
lea
and
jg
and
xchg
pop
xor
jb
sub
pushl
hlt
lahf
faddp
imul
fsubrs
ret
mov
int
fwait
adc
jne
lcall
outsb
clc
cmp
aam
cmpsb
adc
clc
mov
das
cwtl
xor
cmp
jmp
xor
bound
push
out
mov
mov
lock
sbb
test
int
je
pop
push
xor
jb
add
lcall
add
fsubrs
pop
mov
push
jno
inc
xor
hlt
call
xor
mov
cwtl
and
fnstenv
add
mov
dec
ret
fcomip
jmp
pop
inc
cmp
pusha
and
movsl
cmpsb
mov
add
add
mov
lock
mov
and
shlb
inc
mov
cmp
xchg
ret
cmp
clc
or
xor
push
decl
mov
stos
sub
ret
arpl
mov
ja
stos
push
ss
decl
stos
imul
jmp
aas
aad
lea
incl
cmp
mov
xchg
pop
xor
lret
mov
movsb
mov
mov
push
lcall
cltd
imul
call
fwait
popa
test
lods
pop
push
mov
sub
ja
pusha
inc
add
lods
out
cmp
loop
cs
jp
inc
add
adc
shll
ret
xor
adc
leave
imul
jecxz
fidivs
xchg
lcall
inc
fcom
push
mov
adc
adc
scas
mov
push
mov
jno
sbb
ficompl
lock
and
xor
mov
mov
gs
pop
int3
enter
sbb
fisttps
or
inc
pop
push
test
bound
rcll
sbb
mov
and
incl
mov
xor
imul
mov
sub
popa
adc
cmp
cmp
nop
bound
pusha
lods
dec
jnp
mov
xchg
pop
inc
add
ja
sub
xchg
inc
clc
xchg
ljmp
cli
popf
sbb
loopne
sbb
or
ffreep
pop
int3
push
lea
mov
mov
lcall
push
jb
lds
jg
call
aaa
dec
les
pop
sub
push
test
ret
pop
push
xchg
cltd
int3
cltd
test
in
incl
jp
cli
test
jnp
popf
cwtl
dec
cltd
xchg
cltd
cwtl
fs
les
mov
sub
mov
lcall
pop
shll
gs
inc
enter
shlb
stos
push
mov
rcrb
mov
mov
inc
adc
xor
inc
leave
jle
sbb
jmp
sub
leave
clc
cmp
das
fistl
iret
cmp
mov
cld
imul
bound
fs
inc
or
jl
push
adc
incl
loope
jnp
jmp
pop
dec
sarl
test
and
mov
popa
fcmovnu
cltd
mov
lods
pop
jo
xchg
sbb
and
sbb
or
int
mov
jp
sti
dec
mov
mov
ljmp
lods
jno
sub
movsl
lea
and
and
negb
mov
xor
cmp
movsb
push
cmp
or
ret
shlb
ficoms
fsubrp
frstor
clc
and
mov
pop
inc
sub
xchg
stc
gs
push
cmp
call
loopne
sbb
dec
int3
test
jl
cmp
jb
dec
pop
lea
jg
lds
rcrl
dec
test
mov
pop
pushf
pop
popa
mov
cmp
push
cmp
push
mov
lds
loope
dec
loope
lcall
pop
mov
mov
test
push
cltd
sub
imul
idiv
mov
push
mov
cmp
daa
test
popf
enter
ss
cld
popa
mov
sarl
add
push
not
adc
adc
fadd
loop
inc
jbe
push
xchg
call
mov
out
xor
fmuls
cmpl
jp
ret
ljmp
outsb
cmp
dec
insl
sub
xchg
mov
or
out
mov
stc
fbld
push
shlb
vmovaps
mov
hlt
add
lcall
stos
fidivrl
cwtl
das
dec
mov
adc
cmp
inc
xchg
push
ret
cmp
and
andl
loop
pop
pop
xchg
pop
leave
push
sbb
push
adc
inc
aam
push
sbb
cs
mov
jmp
xor
nop
xor
repnz
adc
push
fadds
jne
cs
push
in
jle
add
je
in
fidivrl
aam
push
js
jo
inc
loop
and
loopne
xchg
add
mov
loopne
fsub
insb
sbb
das
push
pop
sbb
gs
sti
loope
jnp
sbb
inc
xor
out
mov
js
inc
push
push
adc
ljmp
lock
and
jo
push
dec
les
cwtl
adc
rcrl
fwait
andb
sbb
sub
push
xor
call
loopne
mov
insl
lods
pushf
test
dec
dec
enter
push
in
int3
loop
jmp
std
or
fs
test
inc
rcrl
hlt
lods
cwtl
or
mov
out
cld
decl
loop
mov
mov
popl
jmp
rol
push
sahf
fistpl
or
pop
or
adc
outsb
mov
mov
or
dec
lcall
js
mov
inc
add
pushl
mov
add
outsl
inc
in
mov
mov
jge
dec
aad
aas
jle
jno
scas
call
fucomp
mov
mov
outsl
jno
cmp
loopne
icebp
lcall
mov
or
and
push
mov
cltd
jecxz
jnp
cmp
push
or
inc
adc
xchg
and
mov
cli
mov
cli
sub
fs
ss
jmp
repz
mov
jmp
cwtl
mov
sub
jg
into
dec
loopne
jl
sub
in
and
sub
jg
add
mov
pop
jp
fcmovnbe
cs
icebp
int3
mov
mov
rcrb
inc
enter
cmp
pop
sub
pop
je
mov
cmpsl
and
mov
pop
or
pop
xor
out
subl
lock
jmp
mov
inc
xchg
xor
loop
jecxz
sbb
clc
mov
outsl
cli
lds
mov
lret
xchg
das
push
sub
in
andl
inc
test
test
dec
dec
sub
inc
sub
mov
add
movsb
inc
mov
adcb
jg
sub
stos
ljmp
scas
add
sub
lcall
pushl
pop
insb
pop
mov
in
pop
xlat
fstl
xchg
scas
pop
inc
std
decl
jo
lea
xchg
mov
in
enter
lcall
sub
mov
cld
xor
xchg
sahf
sbb
push
or
mov
fidivs
loop
arpl
fmuls
mov
into
xchg
add
add
jnp
mov
xchg
notl
add
cmp
ljmp
movsl
call
fisubs
outsb
clc
cmpl
movsl
cmp
in
fldenv
sahf
icebp
sub
ja
lret
fnstsw
or
jmp
adc
add
adc
adc
xor
xor
add
enter
das
add
add
xchg
add
or
adc
aaa
cld
jg
lods
dec
adc
dec
mov
mov
pop
icebp
adc
dec
rsqrtps
cmc
lcall
sbb
dec
cmp
mov
mov
addr16
xor
jmp
sbb
or
jb
adc
mov
xchg
je
cmpb
das
clc
jne
xchg
sahf
insl
dec
dec
shufps
dec
xchg
movsl
jmp
ljmp
pop
jle
xor
bound
ja
dec
dec
cmpsb
gs
addr16
pop
in
or
movsl
mov
jae
and
sbb
or
pushl
and
xor
cmp
iret
fldl
sti
jg
inc
pop
inc
mov
pop
ja
push
in
sarb
lcall
cmp
mov
ss
jbe
js
out
scas
push
push
push
call
fldcw
xor
and
sbb
mov
hlt
out
cmp
test
in
xchg
jmp
xor
inc
inc
jnp
in
mov
dec
scas
mov
pop
dec
jns
lcall
and
adc
loop
ljmp
sub
js
push
ds
lea
hlt
cmp
inc
push
cmp
stos
repnz
xchg
xchg
cmp
aaa
xor
dec
das
inc
mov
jg
sbb
sbbb
inc
xor
daa
adc
push
jne
dec
enter
jp
add
mov
ss
test
cmpsb
xchg
andl
push
cmp
dec
cmp
lds
pushl
outsb
mov
mov
sbb
xchg
mov
mov
lcall
jmp
sbb
in
sti
out
add
sti
call
jg
cmpsl
cmp
xchg
mov
nop
cmpsl
mov
mov
dec
dec
or
js
cmpsb
ret
in
ds
js
cmp
subb
lret
xchg
xchg
fdiv
clc
pop
hlt
imul
fmul
aas
inc
pop
inc
es
clc
jb
cltd
mov
sarb
jae
mov
sbb
sbb
ljmp
js,pt
pushf
test
pop
pop
jae
dec
fs
cltd
pop
push
stos
mov
cld
notb
es
call
test
xchg
ja
cmp
mov
mov
pushl
lret
out
scas
mov
dec
cmpsl
pushf
push
jbe
xor
dec
xor
xchg
scas
fadd
ljmp
clc
lcall
mov
fdivrs
mov
sbb
js
mov
dec
push
subl
dec
pop
pop
mov
sti
jmp
call
mov
shll
arpl
cmpsb
pop
pop
in
sbb
add
cmpsb
mov
fstp
xchg
xor
cmpsl
mov
mov
pushl
ret
je
scas
gs
and
pop
mov
xchg
shl
and
or
incl
jo
adc
or
inc
sar
incl
movhps
loope
xchg
cmp
call
xor
mov
lret
call
sbb
cmp
pop
push
sbb
xor
ljmp
add
ljmp
mov
sbb
call
ss
pop
jo
aad
xor
vandnps
add
pop
mov
movsl
lret
cltd
and
out
mov
mov
loop
lea
inc
outsb
fdivl
pop
lcall
and
scas
lods
add
scas
xor
ret
xchg
xchg
decl
xor
stos
shll
mov
lret
xchg
and
xchg
push
aaa
xchg
sub
mov
sbb
ljmp
outsb
outsb
push
pop
jbe
jae
pop
jg
xchg
inc
sbb
insb
adc
pusha
pop
mov
mov
out
es
jg
loope
cmc
lcall
adc
decl
repnz
mov
jo
jmp
jae
mov
mov
rol
jnp
iret
push
ja
call
mov
aad
ljmp
lods
das
sub
rcrl
mov
add
or
lcall
and
or
or
pusha
cmp
or
inc
and
lea
pusha
cltd
adc
and
mov
call
addl
addl
fisttps
mov
dec
push
add
push
cltd
call
inc
sub
push
sbb
adc
test
mov
fldenv
shll
clc
cmp
adc
inc
sub
push
out
aam
nop
insb
stos
inc
and
xchg
loope
and
dec
lea
mov
adc
in
push
pop
adc
jp
outsl
jge
and
call
call
sub
adc
les
jne
js
frstor
xchg
or
ljmp
mov
aaa
cld
jg
call
fldenv
icebp
data16
aad
xchg
mov
out
lcall
imul
dec
add
jb
sub
addl
push
les
mov
call
call
add
sbb
mov
shl
negl
insb
outsb
lret
jmp
icebp
cmpsb
in
pop
insb
and
sbb
sub
clc
push
pushf
jns
ljmp
outsl
pusha
ss
sbb
pushl
loope
pop
shll
jg
add
ljmp
push
ja
ret
outsb
lds
mov
jmp
jae
test
xor
ficoml
jmp
mov
daa
sahf
inc
aad
imul
dec
jecxz
inc
sbb
inc
jge
nop
cmp
sub
fmul
push
push
ds
cltd
xor
jne
push
or
ljmp
cmp
mov
inc
sar
ljmp
mov
testl
inc
or
jo
xor
push
ljmp
xor
dec
and
pop
sub
in
push
jg
and
decl
cld
inc
fsubrs
jo
movsb
mov
lds
dec
lahf
mov
stos
fwait
adc
pop
imul
popa
xor
push
pop
or
xchg
lahf
insb
push
adc
push
lcall
or
jmp
adc
pop
add
int3
cmp
pushf
mov
mov
ds
ljmp
out
andl
lcall
add
insb
xor
jle
in
jne
ljmp
mov
mov
inc
or
add
xchg
pop
roll
xor
pop
push
jle
mov
decl
jg
lret
orl
int3
jg
or
cs
call
sub
aaa
cld
decl
nop
and
fldl
inc
inc
lcall
ret
mov
inc
cld
pop
popa
test
ror
mov
and
dec
adc
decl
adc
push
nop
sub
ret
aaa
movsl
sub
jmp
push
lods
hlt
xchg
xchg
adc
push
cld
cmp
mov
xchg
je
movsl
xor
or
mov
push
call
ja
call
faddl
cmp
push
inc
push
movsl
sub
pop
jo
icebp
xor
xchg
movsl
inc
mov
mov
adc
aam
and
xchg
int3
gs
andb
xor
xor
icebp
jmp
sbb
loopne
push
mov
and
loop
lcall
loope
sub
pop
out
in
js
and
pushl
andb
mov
sub
cmpsl
hlt
push
dec
mov
inc
ja
leave
movsl
jo
cmp
mov
in
cmp
or
push
mov
sub
pop
out
mov
stc
sbb
jmp
jecxz
inc
mov
sti
ljmp
call
es
jnp
test
lock
iret
jl
jns
repnz
or
jg
stos
dec
ret
mov
sub
stos
xchg
xor
ljmp
xchg
mov
cmp
test
dec
jno
mov
mov
jmp
jo
or
shrb
sbb
addb
inc
movsl
sub
and
xchg
xchg
and
push
mov
cld
fcomp
out
mov
cmp
mov
mov
fildl
popa
or
add
fistpl
call
adc
xor
add
sbb
aaa
mov
xchg
push
stc
push
movsb
xchg
js
mov
inc
mov
mov
mov
stc
mov
cs
mov
sbb
and
push
cld
dec
xchg
in
pop
lods
dec
pop
inc
mov
xchg
jb
clc
out
sbb
xor
dec
dec
inc
or
fisubrl
and
mov
incl
push
call
lods
push
clc
and
fcos
data16
pop
mov
xchg
xchg
outsl
mov
sbb
pusha
add
push
jg
pushl
loope
sub
add
or
ja
jl
in
jbe
rolb
mov
ffree
push
mov
arpl
mov
subb
mov
jo
adc
lock
add
enter
enter
and
fadd
mov
jnp
test
or
mov
jmp
jb
daa
call
jmp
jmp
mov
cmp
mov
out
mov
adc
fcmovnu
mov
out
nop
lock
push
add
dec
mov
mov
incl
push
imul
gs
into
jno
cmovb
pop
push
mov
jne
movsl
or
lcall
add
lods
addb
adc
lahf
rolb
sbb
lods
mov
lock
mov
push
push
cmp
mov
mov
addb
and
or
jge
sub
push
xchg
js
clc
incl
lods
stos
pop
lea
mov
push
dec
fimull
sub
ljmp
mov
jne
jb
sub
fwait
adc
dec
jno
fcompl
ljmp
add
fs
jge
inc
lods
in
cmp
jb
mov
jmp
pop
and
sub
loopne
cli
inc
test
inc
in
sbb
cmc
decl
mov
mov
pusha
loopne
addb
mov
or
and
ja
push
incl
pop
decl
inc
push
bound
mov
adc
andl
cmp
mov
adc
lcall
pop
xor
cmpb
roll
pop
clc
mov
sbb
and
or
or
insb
xor
mov
addl
sub
stos
sbb
shrb
lock
jecxz
or
lock
mov
imul
decl
pop
pushf
pushl
out
mov
dec
push
es
lcall
sbb
das
lock
mov
jge
adc
cli
mov
aas
aad
iret
mov
test
std
cmp
or
xor
sub
imul
out
xchg
mov
cmp
jp
nop
push
jns
push
dec
inc
inc
pop
push
dec
fwait
int3
shlb
nop
ljmp
ret
mov
mov
xor
push
push
ret
pop
inc
jecxz
addb
aad
call
cld
int
mov
popf
xchg
sub
push
lea
lea
js
out
or
mov
pop
cmp
outsb
xchg
adc
xor
sarl
mov
scas
sub
xchg
call
aad
sbb
mov
bound
aas
pop
dec
pop
jp
xchg
jo
push
push
iret
jle
jg
call
arpl
mov
mov
mov
pop
or
inc
sbb
in
adc
jle
call
mov
out
and
loopne
sub
and
in
fs
repnz
test
pop
enter
lock
cld
pop
sbbb
ljmp
pop
filds
out
je
insl
pop
gs
or
bound
jg
pusha
push
add
push
incb
push
pop
push
add
shl
and
das
jmp
test
push
and
or
add
daa
pop
mov
push
mov
rorb
daa
pop
cmp
xchg
push
addb
mov
lcall
vcvtpd2psy
pop
scas
and
loope
pushl
dec
enter
dec
inc
aaa
and
jecxz
les
pusha
dec
aas
fcoms
ja
lcall
js
notb
dec
cs
popa
or
dec
dec
test
jle
dec
add
mov
out
in
jbe
jbe
cmp
sbb
xor
lcall
cmp
xchg
push
xchg
mov
mov
add
jg
inc
jns
fs
jl
sub
subl
dec
test
and
icebp
in
jmp
dec
jne
mov
xor
pop
js
aaa
loop
ljmp
jp
les
push
les
push
call
and
test
cmpsl
adc
imul
cmp
push
pusha
and
inc
jnp
xchg
push
adc
xchg
add
xor
mov
jge
pop
push
mov
dec
bound
and
push
test
lock
out
js
bound
hlt
ret
sbb
pushl
cld
and
inc
and
and
aam
sub
shrl
shll
push
aam
pop
ret
fldt
jg
mov
xorb
add
jg
rclb
add
out
add
xchg
icebp
mov
sub
test
sbb
add
ja
out
pop
push
lock
pusha
incl
mov
scas
add
or
push
test
es
enter
cld
add
repz
adc
add
sub
adc
jo
push
rolb
loopne
pop
mov
or
inc
inc
pushl
lds
and
ds
sbb
bound
loopne
jne
cmp
call
sub
push
push
das
icebp
ret
bound
popa
add
dec
in
in
clc
jb
lcall
mov
push
divl
icebp
xchg
je
mov
xor
mov
fs
incl
arpl
push
jb
xchg
ret
xor
push
outsb
mov
inc
xlat
push
mov
mov
addr16
push
jp
ret
cmp
lods
mov
mov
subl
incl
addb
lds
dec
push
inc
add
mov
inc
adc
adc
gs
incl
nop
ss
jo
jno
daa
mov
insl
and
addr16
lret
int
jl
pushl
inc
push
in
fsubrs
adc
mov
jl
pop
loop
repz
fdivl
out
xchg
push
in
push
call
cld
adc
inc
sbb
xor
inc
inc
ljmp
gs
xchg
dec
push
sbb
or
insl
and
inc
ret
test
mov
xor
mov
lds
leave
pop
pop
mov
rolb
mov
and
add
push
out
add
and
add
fs
loopne
mov
pop
pop
inc
mov
mov
add
jmp
loopne
lret
adc
dec
imul
inc
jnp
mov
nop
add
adc
aaa
shrl
cltd
sub
inc
shl
mov
cs
sub
mov
cmc
adc
loop
cmp
fbstp
cmp
out
pop
sub
dec
bound
daa
push
lcall
aas
repz
das
or
cwtl
inc
pop
insb
xchg
call
mov
ljmp
sub
andl
or
jo
pop
ss
mov
xchg
sub
xor
push
and
jl
cmp
xchg
dec
sub
add
psllw
lcall
inc
xchg
mov
cwtl
xchg
push
inc
aam
dec
add
testl
inc
xor
in
clc
fwait
scas
mov
js
push
xor
lods
sub
lods
xor
push
mov
adc
sbb
xor
pop
scas
lds
test
push
or
and
rcrb
cmp
mov
xor
push
adc
jl
push
lea
out
je
and
xchg
hlt
ljmp
addl
xor
mov
cmp
xchg
in
push
into
xor
push
sub
out
incl
pop
and
imulb
sbb
sub
sbb
mov
pop
mov
xlat
ljmp
mov
cmp
sub
xchg
pop
and
lock
pop
adc
mov
jo
push
push
pop
shrb
or
adcb
mov
fistpl
push
and
pop
into
loopne
cmp
mov
pusha
clc
call
xor
or
add
push
dec
stos
test
enter
nop
add
cmpsb
jg
test
js
adcb
cmp
pushl
inc
push
gs
dec
stos
and
xchg
jae
popa
push
xorb
add
icebp
push
in
ret
js
daa
data16
call
xchg
ja
push
addr16
cli
add
ja
push
int
push
cmc
test
or
inc
call
jp
add
jbe
sbb
roll
pop
sbb
loop
push
sbbl
and
mov
int3
cmc
mov
gs
jl
push
cld
xor
hlt
ljmp
fwait
jnp
fwait
mov
outsb
inc
sbb
mov
fildll
je
dec
enter
mov
mov
hlt
scas
mov
xor
lock
pushl
xchg
inc
adc
fwait
aam
lods
rorl
push
lock
ljmp
mov
inc
jnp
cmp
push
mov
mov
push
push
jb
fisttpl
lret
adc
jg
xor
push
sub
dec
nop
jge
rclb
mov
mov
ja
and
push
add
inc
pop
imul
lcall
aas
shll
adcl
loope
push
cld
adc
mov
add
incl
jbe
sbb
adc
pop
xor
inc
mov
jbe
jns
aas
scas
xchg
dec
negb
cmc
sbb
jp
call
or
dec
pusha
jno
adc
jl
dec
cltd
sub
lret
popa
sar
inc
lds
or
jo
lock
jb
sub
push
incb
insb
adc
stos
outsl
cli
and
jg
or
add
jo
das
test
imul
pusha
inc
mov
mov
leave
jno
adc
call
inc
push
push
cmp
andl
daa
je
mov
pushl
mov
jmp
pop
add
jno
std
movsb
aas
lret
out
sbb
or
insb
mov
sarb
or
nop
sbb
xor
je
mov
xchg
icebp
cmpsb
lcall
mov
or
es
in
lods
lds
push
arpl
cmp
std
ljmp
lods
push
loop
mov
push
and
lods
jo
xor
jnp
dec
mov
jbe
pop
jg
icebp
mov
inc
mov
inc
pop
stos
sbb
sub
pushl
jne
mov
loop
cmp
sarb
pusha
and
fwait
xchg
jns
mov
jnp
mov
in
rclb
mov
cmp
sbb
rcll
jmp
pop
sbb
scas
push
jmp
adc
cmp
cmp
call
push
cmpsl
mov
jb
aaa
aas
cmp
fsts
lds
insb
inc
inc
ljmp
push
pop
rclb
and
xor
xor
dec
jns
lahf
inc
mov
faddl
jmp
clc
pushl
mov
mov
inc
pop
push
pop
pop
xchg
mov
lret
pop
into
mov
fistpl
enter
mov
imul
push
jmp
insb
rcrb
push
add
pop
mov
jg
in
or
pusha
pusha
jns
push
and
sahf
inc
add
addb
loopne
incl
insb
push
add
cmp
ds
xor
mov
xchg
rolb
mov
lret
ljmp
cmpsb
int3
fldcw
or
pop
push
mov
jl
aam
sbb
bound
call
cmpsb
adc
fsubl
inc
xchg
mov
sbb
push
push
int3
mov
sub
out
sbb
jmp
pop
das
mov
stos
pop
mov
xchg
or
or
mov
stos
cmp
rcrl
mov
test
add
pop
sub
cli
ljmp
sbb
mov
mov
lcall
mov
test
fisubrs
in
mov
add
lods
loope
pop
mov
std
stos
xchg
js
push
loop
andb
loopne
jge
aaa
loop
mov
inc
jo
loop
jle
mov
mov
popf
cs
pop
pop
xor
pop
repnz
int
nop
ljmp
push
jno
add
fidivs
scas
xor
ret
fwait
ja
adc
test
loope
or
popf
jbe
adc
lods
adc
and
jg
gs
and
push
pushf
loope
mov
movsb
lret
inc
xor
sar
loope
pop
repnz
clc
rcrl
fs
out
add
jg
add
ljmp
clc
push
nop
insl
jg
cmp
call
decl
mov
test
lods
add
push
dec
jmp
xor
or
clc
pushl
js
jb
inc
add
mov
jo
push
add
adc
add
sbb
pusha
xorb
clc
fiadds
lcall
inc
sbb
xchg
fwait
mov
dec
inc
inc
sbb
ret
test
sbb
jg
frstor
push
aas
cli
push
cmpsl
add
mov
mov
cmp
xor
push
xor
lahf
mul
int3
in
mov
sub
aam
cltd
fcomps
adc
mov
mov
outsl
cli
incl
mov
xor
mov
xchg
dec
lret
mov
jns
pop
mov
pop
jns
ficoms
push
test
xchg
arpl
push
adc
loope
or
mov
or
add
decl
sub
inc
fwait
fwait
incl
pop
jle
xor
and
loopne
jg
incl
jnp
test
cmp
or
mov
in
scas
cmp
dec
es
inc
hlt
xor
add
decl
lock
movl
mov
mov
lret
clc
incl
add
inc
xor
jge
icebp
pushf
sbb
ret
push
cmp
sbb
movsl
inc
mov
out
scas
cmpsl
pop
xor
sub
out
push
jp
lahf
pop
in
mov
pop
mov
pop
clc
test
adc
mov
ljmp
shlb
nop
pop
out
inc
pop
xchg
push
cmpl
jle
in
out
or
imul
ja
jl
pop
xchg
push
add
and
jo
adc
mov
dec
sbb
ror
mov
es
and
xor
dec
sub
sub
shll
outsl
cwtl
inc
cs
sahf
rcll
es
jmp
jmp
cmpl
out
add
test
mov
push
out
jl
arpl
mov
pushl
in
sahf
mov
push
add
push
pop
rclb
incl
sbb
iret
cwtl
cmp
insb
mov
adc
loopne
orl
mov
sub
shll
jp
mov
xchg
es
nop
mov
scas
dec
stos
mov
xchg
lea
cmp
push
arpl
xchg
xor
sub
lock
outsb
mov
ljmp
loop
mov
or
in
xor
cld
lcall
imul
jne
jbe
pop
mov
xlat
filds
pusha
lods
pop
mov
cmpb
push
arpl
mov
or
pushf
addl
push
mov
push
fcmovb
test
bound
add
pop
sbb
mov
lods
jae
jns
jp
out
mov
push
clc
lahf
mov
in
inc
lea
xchg
ret
push
and
in
fldenv
mov
jmp
inc
pop
ret
or
scas
pop
pop
std
cld
sti
ljmp
fnstsw
fstpt
ret
and
adc
mov
and
cli
add
lock
adcl
xor
or
push
popl
inc
notb
cmp
decl
les
push
jne
les
adc
inc
sub
jecxz
dec
pop
je
ljmp
dec
pop
fldenv
push
sub
and
add
mov
rolb
sbb
inc
pushl
shr
cmpsb
or
test
flds
clc
lcall
dec
les
cmp
xchg
xor
inc
repz
xor
int
mov
incl
outsb
cmp
mov
dec
xor
adc
dec
pop
sub
cmp
or
decl
lods
cmp
ljmp
jnp
mov
mov
iret
inc
fistps
call
xchg
sub
push
dec
jne
sbb
adc
ss
addr16
pusha
inc
jmp
add
dec
pop
adc
sbb
adc
cs
ss
cmp
cmp
das
je
ret
pop
rol
pushl
scas
or
push
test
sub
push
xchg
xchg
ljmp
mov
jl
inc
call
enter
or
jmp
and
xor
mov
mov
fisubrs
mov
decl
mov
cmp
xor
or
clc
lcall
out
lret
loope
sub
cmp
les
and
ret
insb
adc
xchg
test
fidivl
movsb
insl
jnp
ss
lock
clc
jg
cs
mov
lods
inc
testb
mov
xchg
call
and
mov
mov
xchg
shl
cmp
mov
cli
in
xchg
incl
inc
or
push
ret
mov
pushf
pop
push
das
inc
add
das
or
lock
lcall
mov
es
sahf
aam
ret
insl
dec
pusha
ret
pop
decl
jb
ss
sub
lds
mov
loope
and
xor
cmpsl
pushl
cli
adc
sbb
inc
negb
inc
mov
cmp
push
cmp
movsl
mov
adc
push
sbb
xchg
cmp
jg
test
cli
xor
push
xor
iret
sub
jmp
or
fimull
and
cmc
push
push
ss
mov
push
je
push
inc
mov
xchg
push
test
out
push
notb
cmpsl
dec
movsl
stos
pop
inc
xor
xchg
pop
imul
sbb
incl
jb
lds
cmp
mov
adc
rcpps
rorl
lock
sbb
dec
or
test
sub
gs
aaa
fmull
dec
int3
inc
scas
jno
ss
jmp
xchg
imul
jl
in
cmp
mov
mov
addb
mov
sub
cmp
mov
push
jo
popl
sub
vmovlps
sbbb
push
jg
out
dec
or
lret
dec
and
loop
jmp
lock
adc
mov
mov
ret
repz
add
test
pop
add
pushl
lods
xor
data16
fimull
jno
or
sub
xor
lods
movsl
fs
pusha
or
push
inc
xchg
add
imul
fistl
fldt
push
jne
pop
std
scas
lock
call
clc
loope
fistps
addr16
std
inc
jno
movsb
cmpsb
add
push
cli
iret
add
xchg
incl
sbb
fcomp
loope
sbb
push
sbb
mov
incl
push
push
mov
and
xor
add
rcrb
cmp
decl
sbb
sub
out
repz
lods
movsb
and
das
and
clc
xlat
pop
dec
hlt
cs
lock
push
jecxz
aam
mov
sub
mov
sub
cmp
ljmp
adc
jmp
xor
test
ss
cmpsl
xorb
xchg
adc
inc
cltd
push
push
push
cmp
stos
jle
in
cld
fs
add
mov
sbb
adc
push
add
loope
sahf
sub
dec
fdiv
aad
shlw
inc
stos
push
mov
xchg
push
xor
addl
inc
sbb
cld
push
xchg
xor
call
insb
loopne
sbb
pusha
lcall
inc
les
daa
test
incl
add
inc
pop
popa
fxch
jp
popa
lcall
mov
dec
mov
sbb
sbb
aaa
cmpsb
mov
sbb
mov
dec
adc
das
dec
pop
fidivs
sbb
and
cmp
mov
clc
and
push
jle
scas
push
jp
inc
pop
push
call
lcall
fcmovbe
mov
lret
aaa
mov
mov
sub
decl
scas
sub
mov
loope
imul
cmp
cld
decl
outsb
stc
sbb
daa
repnz
xchg
cmc
mov
push
add
loop
jo
mov
incl
aas
sbb
fadd
jl
lea
mov
jae
pusha
add
and
out
dec
les
pushl
push
repz
xorb
jle
nop
cmpb
push
xchg
stos
dec
jle
dec
inc
cmp
fildll
enter
jp
notb
push
push
lcall
cmp
cmp
incl
loopne
sarl
dec
cltd
lcall
cmp
mov
out
push
sbb
adc
int
roll
call
mull
add
or
add
outsl
jge
ds
cli
xchg
cld
jmp
sub
mov
fldcw
xchg
mov
jg
sub
inc
lods
inc
adc
xchg
rorb
push
push
push
decl
es
jle
pop
pop
inc
insb
fstl
por
mov
ret
dec
jmp
popf
pop
adc
adc
gs
mov
packsswb
or
mov
mov
mov
dec
les
cmp
lea
mov
cmp
push
add
pushl
sbb
ds
mov
aaa
mov
push
lea
push
mov
xor
call
pop
repnz
test
dec
sbb
push
in
aaa
mov
or
scas
sbb
subl
cld
das
xor
push
and
test
xor
dec
fs
repnz
mov
push
mov
push
popa
scas
stos
mov
test
ljmp
test
test
or
scas
imul
jae
pop
cmp
mov
add
pushf
add
mov
xlat
adc
rcrb
cmc
xchg
adc
movsb
mov
jmp
loop
aad
or
in
xlat
repz
push
pusha
fadds
jmp
inc
cs
je
mov
fcmovnbe
xchg
pushf
dec
xchg
pusha
push
jecxz
mov
aaa
mov
je
inc
pusha
int3
pop
icebp
cmp
add
and
jg
xchg
jp
mov
js
lar
mov
mov
jbe
scas
scas
jge
mov
cltd
hlt
xchg
call
sub
jecxz
ja
or
xchg
dec
cmp
fadds
pusha
xchg
cmp
pop
sub
mov
in
scas
mov
jno
push
clc
pushl
cmp
push
ds
insb
sbb
or
ljmp
clc
lods
xor
lret
add
cmpsl
xor
in
loop
mov
incl
adc
sbb
stos
daa
pop
sbb
pop
push
repnz
add
daa
mov
cmp
jmp
sbb
fadds
pop
mov
nop
pop
ja
add
movsb
inc
jns
pusha
xchg
inc
incl
lret
loope
addl
cmp
cmp
mov
push
ret
ljmp
fisubl
icebp
jb
dec
repnz
mov
sub
enter
das
out
adc
mov
mov
bound
sub
sbb
fstl
stos
push
ljmp
jb
push
ds
mov
stos
repz
scas
sub
adc
xor
aam
and
pushl
inc
rolb
test
in
ret
test
rolb
cmpb
fadd
ja
sbb
ret
ds
ds
fucomi
ret
inc
sbb
inc
xor
add
jb
mov
pop
add
stos
xchg
push
nop
adcb
call
js
dec
les
dec
xchg
add
inc
repz
adc
add
push
push
pop
push
std
scas
add
inc
pop
in
inc
pop
lds
clc
in
mov
pop
mov
pop
fs
cmp
aam
add
sub
xchg
xor
inc
cld
sbb
fldl
stos
cli
pop
adc
add
add
xor
jg
test
fcomip
push
loope
ja
adc
xchg
sub
adc
xchg
xor
cmp
ljmp
and
cmp
xchg
mov
add
in
add
push
xchg
aaa
xchg
clc
cmpsb
rol
rclb
cmpl
dec
jecxz
decl
std
loopne
mov
lea
cmpb
jecxz
je
or
mov
and
movsb
cmp
jb
shlw
mov
push
mov
jb
sub
repnz
fcomip
push
fmuls
pop
loopne
dec
mov
test
push
mov
mov
jo
and
sbb
decl
push
dec
jae
ss
jmp
mov
inc
xchg
rorb
jg
mov
jnp
shrb
or
push
sbb
adc
ljmp
or
je
shlb
push
jl
bound
insb
pusha
mov
add
cmp
pop
cmp
mov
cwtl
mov
lcall
addl
icebp
and
decl
mov
cmpsb
pop
push
shlb
aam
cmp
decl
dec
add
rolb
nop
scas
jmp
mov
dec
jnp
xchg
sbb
sub
ss
xor
mov
adcl
notb
jo
ret
push
es
bound
filds
inc
lods
ret
push
scas
int
push
add
push
fisubl
in
outsl
decl
xchg
add
enter
loope
dec
sbb
add
sbb
mov
mov
cmp
xchg
pop
test
mov
sub
addb
push
xchg
sbb
xchg
sbb
decl
dec
les
or
fs
rcr
ljmp
into
in
iret
es
add
add
pop
sub
and
lret
call
adc
mov
pop
popf
push
xlat
pop
push
movsb
and
pusha
dec
hlt
sti
ljmp
sub
shlb
sub
into
adc
loop
lea
xorb
lods
sub
js
or
pushl
enter
popf
sub
push
inc
adc
add
jecxz
pop
andl
mov
jg
sub
cmp
mov
xchg
sbb
jecxz
sti
cmp
jecxz
cmp
aad
or
xor
mov
jmp
mov
mov
lods
adc
jl
mov
or
dec
mov
adc
cli
xchg
sub
fs
shrb
mov
jmp
cltd
sbb
cld
sub
push
push
sbb
or
mov
js
mov
add
sub
movsb
xchg
leave
and
cli
incl
sbb
inc
add
pop
cmp
daa
js
sub
sbb
cmpl
sbb
sbb
sub
js
aas
jp
sub
ret
adc
lcall
pushl
xor
mov
pop
sub
jg
inc
scas
xor
cmpsb
sub
push
clc
ljmp
cmovnp
xchg
xor
lret
stos
sbb
shlb
dec
cmp
lea
test
add
jge
ds
pop
inc
xor
stos
out
fs
out
fdivr
or
test
cmp
sbb
fadds
incl
lods
fmuls
xchg
insb
js
aad
cmp
inc
cli
scas
mov
sbb
pop
cmp
cmp
lock
sub
add
nop
les
subl
fldcw
incl
notb
add
add
fisubrl
inc
idivb
adc
inc
aam
ja
push
int
pop
std
push
rcll
ficompl
cmp
outsl
or
test
daa
clc
fisubrl
sbb
cmp
pop
add
mov
cld
das
ficoml
jg
push
sbb
js
mov
adc
jg
lea
sbb
cmp
adc
rcpps
pop
cmp
or
call
dec
dec
mov
mov
xor
loop
add
shlb
lcall
cmp
arpl
push
jnp
mov
xor
sub
xor
xorb
add
std
lcall
mov
adc
mov
ret
leave
sarl
inc
mov
or
pop
imul
sarb
inc
jne
std
fstpt
scas
mov
inc
lds
cmp
sahf
in
dec
dec
sbb
loop
mov
fmul
push
movsb
inc
lret
clc
cwtl
scas
add
pop
lcall
pop
ret
mov
aad
mov
aad
sbb
push
gs
ljmp
push
or
pusha
or
dec
sbb
or
jb
pushl
sahf
adc
inc
cmpsl
pop
fildll
add
cmp
push
and
xor
decl
mov
es
cmpsb
mov
popa
test
xlat
cli
inc
push
or
add
out
pushf
mov
pushl
aas
mov
pop
and
sub
test
or
add
cltd
clc
outsl
push
mov
xchg
shl
inc
into
pop
std
imulb
cs
bound
add
dec
subl
jecxz
add
and
dec
jmp
push
add
clc
xorl
loope
sub
loopne
jns
mov
mov
pushf
adc
push
cmp
inc
or
pop
cmc
aas
mov
das
out
pop
add
adc
mov
and
add
mov
mov
xchg
cs
or
and
incl
int
pop
fadds
aaa
outsb
jecxz
gs
push
jecxz
data16
add
push
ss
test
sbb
fldl
fwait
or
or
xchg
pushf
pushw
decl
lock
sub
gs
les
sub
dec
lret
cld
lcall
push
mov
stos
sub
push
mov
pop
adc
mov
mov
mov
pop
dec
es
mov
xchg
shlb
mov
incl
popa
xor
scas
jo
movsb
lock
pop
stos
dec
xchg
push
push
stos
mov
pushl
ret
stos
enter
sbb
leave
cld
cmp
popa
mov
and
push
cli
call
fxch
adc
xchg
pop
mov
inc
mov
subl
incl
jns
inc
rolb
lds
movsl
add
mov
std
add
decb
out
mov
lahf
outsb
add
fbld
mov
or
lret
and
jmp
lea
sub
cmp
push
loop
test
lcall
push
fidivrl
sub
pusha
mov
jns
je
inc
enter
mov
mov
jmp
fs
push
push
bound
daa
mov
mov
stos
ljmp
cli
pop
cmc
fcomi
mov
push
fs
mov
jecxz
dec
pop
test
pop
out
loop
pop
dec
adc
sub
or
add
ss
imul
dec
arpl
int3
pop
cmpb
jmp
jbe
out
and
shlb
and
adc
sahf
lock
add
add
lock
stos
adc
dec
addb
lock
xchg
ljmp
add
dec
add
test
insl
add
clc
jg
loopne
das
inc
inc
stos
insl
out
test
rclb
jg
push
xor
and
add
call
xor
outsl
and
out
incl
push
into
pop
add
incl
rcr
adc
xor
push
lock
push
pop
mov
pop
cwtl
add
mov
or
xor
adc
and
jg
mov
inc
sbb
or
or
enter
lret
sub
dec
mov
xchg
sbb
mov
out
mov
adcb
push
push
lods
pop
add
jmp
push
data16
addr16
push
xchg
jg
sbb
sbb
sbb
mov
xchg
or
dec
stos
sub
pushl
push
aam
or
mov
out
lcall
push
das
movsb
fsubrp
in
or
outsl
incl
fisubs
in
stos
xchg
mov
pop
jmp
xchg
adc
inc
pop
nop
loope
mov
or
test
sbb
add
or
paddb
lcall
std
pop
movsl
cmpsb
hlt
faddl
mov
ljmp
mov
aad
and
pushl
sbb
movsb
shrb
or
subl
decl
inc
mov
rorl
gs
repz
shl
mov
push
mov
lcall
adcb
push
mov
mov
leave
aam
std
lcall
xchg
scas
cli
call
pop
and
mov
cmpsl
and
ds
xchg
or
dec
pop
inc
cld
mov
fistpl
inc
les
add
ja
push
in
les
js
pop
call
pushl
xchg
popf
add
addb
push
sub
mov
push
fwait
xchg
sub
inc
push
test
fsubr
pop
test
aad
insb
js
mov
inc
test
incl
and
cmp
pop
pusha
push
push
pop
cmp
jl
testb
jle
mov
jb
jns
out
add
push
adc
loopne
out
sets
js
jl
jg
test
xacquire
test
sbbb
pop
dec
and
push
inc
call
js
mov
and
pop
pop
add
inc
ljmp
push
bound
daa
popa
std
xchg
add
and
ljmp
test
dec
jnp
imull
shr
jg
outsl
pop
clc
add
inc
and
js
cwtl
or
clc
push
clc
xchg
ljmp
mov
sahf
push
mov
orb
pop
or
pop
loop
push
push
out
cmp
jnp
jo
movsl
shrl
mov
dec
pop
lock
mov
sbb
test
bnd
fldl
jmp
and
jnp
int3
inc
ror
mov
xor
popa
decl
add
cwtl
ss
orl
jb
xor
pusha
out
ja
sub
xor
push
xchg
xchg
mov
jmp
xor
mov
sub
jmp
mov
sbb
divl
and
dec
cmc
cwtl
repz
xchg
jg
test
mov
subb
ds
mov
cmp
jno
push
ret
pusha
rclb
lock
sbb
pop
dec
pushf
decl
loop
xchg
sbb
adc
xchg
daa
test
pop
pop
gs
ss
rol
mov
and
xchg
rol
test
jecxz
addr16
or
test
sub
xchg
add
push
std
pop
sarb
repz
pop
mov
sub
adc
loopne
xor
fmuls
push
ljmp
mov
lret
loopne
rcrl
cmp
ljmp
and
hlt
dec
pop
xchg
push
lods
call
lock
roll
xchg
adc
or
sbb
ret
lds
xchg
out
mov
in
insl
jae
cmp
cmp
rcr
add
jo
es
decl
mov
or
fcmovb
sub
jle
sbb
int3
out
fwait
dec
outsl
sahf
and
xor
xor
ljmp
repnz
lds
rorb
jae
xor
shll
xchg
insl
lods
push
push
call
xor
outsb
fidivrs
xlat
insl
xchg
orps
pop
stos
fsub
inc
psllw
add
decl
xlat
mov
test
mov
or
fnstcw
and
dec
pop
mov
aad
push
sar
jb
je
lret
jno
call
mov
xorb
add
sbb
cmpsb
std
and
mov
ljmp
pop
pusha
test
js
add
push
adc
sbb
inc
addb
inc
add
sar
out
cli
xchg
fs
and
inc
push
adc
jmp
xchg
ret
adc
lock
jmp
pop
push
sbb
scas
mov
inc
sbb
add
inc
sbb
mov
out
and
xor
mov
pop
lcall
sbb
decl
push
dec
jmp
pop
pop
enter
test
js
leave
stos
push
mov
call
lock
push
push
mov
loope
ljmp
push
sub
add
ja
fisubl
pushl
sbb
mov
popa
sub
cmpsb
cmp
sub
pushl
mov
out
mov
xor
pop
mov
aaa
fsub
sti
sbb
jg
pop
cmc
adc
inc
sbb
xor
dec
sub
sub
push
xor
dec
add
dec
sbb
jecxz
xor
sarb
inc
pop
push
je
push
pushl
inc
and
in
rcll
je
mov
cmp
test
pop
ss
out
cli
lcall
add
sbb
xor
jne
rol
inc
xchg
push
inc
xor
adc
cmp
decl
add
adc
push
adc
add
add
adc
imul
dec
cmp
pop
jne
cmc
ss
je
ljmp
pop
sbb
push
fsubrs
xchg
popa
addl
arpl
xor
adc
adc
mov
decl
push
cmc
sub
movb
sub
add
mov
leave
out
mov
xchg
es
xchg
push
mov
mov
jmp
orb
cmpsl
icebp
or
es
cwtl
or
jo
aaa
cltd
loope
pop
cmpsl
xchg
mov
adc
decl
in
enter
adc
es
ljmp
fisttpll
loopne
out
roll
add
mov
test
out
orl
and
decl
je
or
out
or
add
xorb
xor
add
nop
subl
cmc
decl
adc
and
cmp
pop
inc
push
rcrb
shrb
mov
hlt
sbb
sbb
jns
add
mov
push
adc
add
loopne
mov
sbb
and
nop
xchg
das
cli
cmp
push
cmp
pop
mov
add
inc
dec
insb
mov
test
mov
jmp
add
adcl
cs
mov
dec
add
mov
rolb
adc
lret
mov
and
mov
mov
push
add
or
sub
lock
decl
sub
xchg
adc
cmp
leave
push
xchg
rclb
data16
lcall
inc
leave
xor
adc
adc
repnz
mov
leave
xor
jb
sbb
decl
push
aas
sub
jne
pop
loope
and
jae
mov
cld
pop
xchg
mov
or
call
mov
or
xchg
mov
jns
lods
cwtl
adc
aam
loop
arpl
sub
xrelease
and
push
sbb
dec
add
ret
sub
nop
nop
jge
jmp
xchg
mov
fwait
cld
jmp
inc
ss
adc
neg
inc
xor
jno
xchg
mov
or
sahf
addb
data16
xor
addr16
xchg
lahf
dec
lea
xchg
cmpsb
cmp
mov
test
adc
loope
sub
test
mov
lods
lea
out
xchg
xchg
mov
dec
jp,pn
or
fcoml
add
clc
xorl
cmpsb
xor
cmp
adc
std
pushl
pop
cmp
pop
inc
xchg
pop
roll
add
outsl
pop
sub
nop
inc
xor
push
adc
or
add
pushl
data16
push
fwait
and
sbb
cmc
dec
or
adc
setb
mov
pop
in
xchg
incl
fbld
and
push
pop
sar
je
rorl
sbb
pop
pusha
inc
shlb
sbb
int3
and
nop
add
sub
sbbb
inc
fbstp
pop
lds
mov
mov
clc
add
lahf
add
and
lcall
rcrl
pop
int3
loope
mov
dec
sbb
and
push
test
es
mov
jne
stos
jmp
rcrl
test
ja
shrl
in
push
pushl
test
sbbb
mov
xchg
movsb
in
icebp
cmpsb
mov
sbb
aad
pop
cs
ret
aas
xchg
repz
into
xor
add
fadds
pusha
push
and
mov
popa
cltd
inc
pop
das
fwait
js
movb
pop
pop
hlt
incl
ret
push
dec
test
dec
jp
push
mov
push
cwtl
xor
xchg
test
idiv
decl
and
sahf
aam
lods
jb
das
jmp
sbbl
add
xchg
add
cltd
sbb
xchg
sbb
sub
pushl
stc
daa
dec
jb
pop
mov
daa
jne
sub
inc
cmpsb
pop
cltd
sub
sub
ljmp
adc
frstor
push
insb
mov
loope
pusha
decl
clc
mov
or
push
pusha
dec
dec
ret
lret
add
ljmp
cltd
outsb
jle
inc
lahf
loop
cmp
cmp
rorl
pop
sbb
sub
mov
shll
or
insl
xchg
ljmp
enter
sub
push
int
rcrb
push
sub
jmp
decl
xchg
movsl
or
push
cltd
addb
in
shrb
test
dec
sub
inc
xor
sbb
ss
insl
aam
fiaddl
mov
into
sbbl
mov
pop
lcall
sbb
std
mov
dec
cmp
out
pusha
pushl
inc
xchg
je
test
mov
stos
call
orl
inc
xor
stos
stos
or
pop
test
sbb
jecxz
es
cs
bound
mov
xor
or
xchg
test
xor
lcall
pop
push
dec
add
cmp
scas
xor
or
add
loopne
cmc
test
jmp
test
add
in
es
or
das
es
in
mov
cltd
add
and
les
inc
push
dec
add
cld
incl
sbb
fs
mov
popf
push
sarl
mov
mov
mov
mov
ja
cmp
and
in
sub
ja
add
shlb
outsb
sbb
jp
ljmp
push
mov
fisubl
inc
cld
lcall
aam
inc
pop
fimull
mov
fsts
test
or
push
xchg
movsb
movsb
enter
xchg
jmp
pop
cmp
add
lret
cmp
cmp
pop
xor
mov
lock
sub
dec
mov
push
inc
idivb
call
in
leave
sub
sbb
and
rorb
shlb
mov
or
sbb
cli
jge
fs
mov
dec
jo
jns
cmp
pop
sub
lcall
xchg
fxam
push
ss
lret
mov
shlb
in
pop
add
out
test
fwait
mov
pusha
add
sbb
ret
adc
inc
roll
lea
jno
jp
adc
xchg
mov
enter
push
leave
lods
or
lods
int3
aaa
cltd
xchg
cmp
inc
mov
test
xchg
xchg
clc
incl
test
inc
xor
int3
xor
int3
and
ret
add
ljmp
cmp
or
adc
or
inc
add
add
inc
inc
ljmp
push
inc
dec
or
mov
fisttpl
inc
inc
pop
fadd
fdivrl
test
rcll
or
xchg
test
dec
pushf
cmpl
mov
add
adc
orl
jg
or
aad
jo
pop
jb
push
adc
pop
pop
xchg
xchg
adc
sbb
mov
xchg
pop
sub
pop
cs
loopne
es
pushl
and
jge
pop
lea
and
mov
add
add
pushl
in
adcb
add
and
outsb
popa
add
mov
or
cmp
adcl
shlb
sbb
rcl
pop
inc
imul
sar
fcomip
cmpsb
jge
test
pop
js
mov
add
ret
sarb
in
fcomip
dec
sbb
add
es
adc
out
sub
fldcw
mov
movsl
add
movsl
popf
lock
mov
in
mov
or
insb
push
sub
leave
bound
add
adc
adc
fimull
les
xor
inc
add
test
fucomp
ret
rorl
sub
lock
xor
orb
cmp
push
push
cmp
and
pop
push
mov
pushf
lret
xchg
jmp
outsl
and
incl
pop
lret
andb
mov
incl
les
cmpsb
or
mov
fwait
adc
dec
push
loope
dec
and
or
shlb
gs
out
sub
test
mov
fcomip
scas
add
sub
lahf
sub
inc
adc
lcall
or
lock
das
or
shl
fstpl
cwtl
xchg
lcall
or
dec
add
pop
or
or
shll
push
ret
sahf
xor
cmp
fbstp
jl
cmp
sbb
mov
cmp
or
push
incl
lods
mov
push
or
fisubl
lods
pop
inc
in
out
vpaddq
decl
aas
int3
cmpsw
roll
jo
sbb
ret
dec
or
popa
or
ret
jae
lcall
mov
int
pop
out
push
pop
sub
sbb
add
int3
inc
adc
inc
daa
cld
shrb
push
repnz
decl
lock
xor
xchg
adc
daa
mov
sub
adc
dec
outsb
xchg
mov
stos
cltd
loopne
test
js
in
cs
das
cli
fbld
and
mov
bound
mov
sbb
inc
mov
ret
js
aaa
xor
nop
fs
add
lret
ret
cmp
icebp
mov
cmp
loop
pop
orl
xor
pcmpgtb
sbb
jg
rolb
inc
push
add
cmp
xor
jmp
inc
ret
bound
adc
sub
mov
insb
clc
add
shrb
ljmp
jg
and
fs
sub
mov
add
icebp
lcall
sbbl
aad
push
xchg
ja
and
subl
mov
fistpl
mov
mov
imul
xchg
adc
aad
movsb
cmpl
add
lcall
inc
pop
je
adc
lahf
js
lret
lahf
cmpsl
enter
sbb
jmp
pusha
or
mov
movsl
xor
sbb
stos
out
cmp
sbb
idiv
stos
and
sub
lahf
and
push
mov
push
pop
pop
add
xor
or
push
push
in
mov
call
dec
testl
lods
mov
sar
aad
cs
pop
or
sbb
aaa
in
out
std
or
mov
push
cld
stos
push
movsl
mov
ret
aad
lcall
add
enter
test
test
add
add
gs
leave
fs
ljmp
addr16
cltd
or
push
mov
add
mov
inc
xor
xor
insl
rcr
mov
cli
mov
aad
mov
push
push
sbb
adc
fistpll
aad
dec
lods
add
inc
pop
cmpsb
adc
scas
cli
sub
pushf
sbbl
add
add
dec
sub
add
outsl
cli
pushl
sub
or
cltd
xchg
out
jge
roll
push
dec
push
repnz
ss
add
and
in
sbb
icebp
ljmp
inc
mov
mov
adc
add
sbb
ffreep
imul
push
mov
xor
jg
das
xchg
enter
rolb
lods
inc
xor
shll
jle
jecxz
hlt
inc
push
hlt
xor
add
and
adc
inc
ljmp
and
inc
and
inc
mov
sub
sbb
insl
pop
out
ss
lcall
xchg
pop
insb
enter
ds
jo
je
push
push
jne
aaa
call
aaa
mov
pushl
fnsave
adc
cmp
pop
imul
std
inc
imul
cmp
fistpll
add
mov
clc
dec
push
xchg
inc
inc
add
add
inc
sarl
adc
inc
sbb
fs
fildll
pop
add
add
out
xlat
mov
lret
mov
test
sub
stos
nop
mov
push
lds
mov
push
sub
pop
sbb
pusha
leave
jp
xchg
dec
xor
xor
clc
decl
rcr
repz
pop
movsl
test
lret
and
lahf
mov
ljmp
sarb
sbb
lcall
mov
mov
sbb
jo
cs
pop
cld
mov
cs
mov
mov
pop
icebp
adc
loop
pop
or
loopne
incl
ret
dec
or
push
inc
xor
dec
lds
inc
lcall
rcrl
imul
stos
adc
xchg
mov
sbb
or
clc
outsb
adcl
clc
pushl
or
inc
rcrb
inc
mov
shl
data16
and
add
pushl
dec
sbb
addr16
popa
pop
aas
or
adc
daa
adc
lods
pop
jbe
mov
sbb
push
fbstp
jecxz
lcall
lds
loope
add
pusha
inc
aas
push
push
push
das
sar
xor
rcr
rcr
in
aaa
mov
ret
scas
mov
subl
pop
push
jo
outsl
and
push
std
loop
ret
je
and
xor
or
cmpsb
or
pop
movsl
cli
stos
jbe
ds
adc
nop
mov
push
push
xor
decl
or
jnp
sub
jecxz
cmc
jl
imul
ret
jmp
inc
cmp
push
push
call
xor
daa
sbb
pop
inc
or
add
es
leave
dec
fisttpll
mov
ljmp
es
xchg
aam
mov
js
paddusb
jne
jmp
cld
push
mov
das
mov
shrl
mov
imul
or
pop
rcrl
inc
movsl
push
push
and
push
into
movsb
ret
ret
dec
dec
push
jg
fisubrs
add
ret
aas
pop
ret
push
lods
xchg
adc
mov
push
lret
rolb
push
adc
mov
orb
ficomps
or
xchg
xor
and
ljmp
push
incb
mov
imul
or
add
cwtl
lcall
jbe
not
fisubrs
jno
das
push
jbe
mov
in
in
shlb
lcall
pop
rclb
lret
push
icebp
pusha
mov
pusha
mov
ljmp
in
fwait
adc
ret
ret
cmp
lds
fwait
clc
mov
aaa
mov
inc
push
rcrl
pushl
les
gs
mov
rol
inc
adc
into
push
sub
je
pushf
int
call
outsl
cmpsb
insb
and
mov
xor
pop
jmp
shll
rol
mov
push
scas
leave
ret
mov
andb
loopne
mov
or
cmp
cmp
mov
dec
in
dec
lock
add
rcrb
repz
test
lock
sub
jecxz
sbbl
stos
incl
dec
mov
into
in
sub
mov
mov
adc
addb
aaa
xor
cmpsl
pop
lock
mov
in
inc
xor
push
sbb
subl
sbb
aam
rdmsr
pop
adc
ret
add
and
incl
clc
sub
dec
cmp
add
pop
cmp
hlt
pop
fs
scas
and
sldt
pop
inc
ds
adc
inc
out
data16
push
jmp
call
call
ret
or
ss
add
sarb
or
aas
ds
sub
xchg
or
cmp
xor
fisubl
pushf
cmpl
scas
decl
pop
adc
in
hlt
adc
push
loopne
movsl
push
xor
and
or
jbe
addb
sbb
add
pushl
push
pop
or
lods
or
fsubrs
dec
mov
gs
cmp
pusha
mov
ljmp
pusha
daa
pop
and
mov
aam
or
push
aad
mov
mov
movsl
sahf
adcb
sbbl
decl
adc
pop
mov
in
icebp
gs
mov
or
push
mov
imul
dec
and
or
push
pop
ret
xor
pop
add
adc
jmp
add
lods
xor
movsl
pop
es
cli
xor
dec
xchg
mov
in
jno
dec
cmp
inc
mov
inc
test
xor
pop
icebp
incl
pusha
pop
call
or
pusha
test
inc
in
insl
inc
jmp
mov
sub
ja
add
mov
scas
or
adc
cmp
xor
pop
cmp
cmpb
xchg
jo
adc
hlt
mov
xchg
adc
inc
data16
or
fs
dec
xchg
cmpsl
fsubrs
mov
jbe
lds
or
dec
add
add
fdivr
jno
mov
in
ret
mov
adcl
sbb
sbb
adc
lcall
add
scas
and
ret
loop
push
ss
xor
stos
jg
loope
decl
fadds
jmp
mov
push
hlt
push
add
adcb
ljmp
and
cmp
bound
inc
inc
ljmp
pop
shll
arpl
stos
pushl
pop
jns
pop
jns
ret
fsubl
ret
imul
aas
in
rorb
sbb
xor
popf
hlt
adc
jmp
push
sub
hlt
jnp
clc
cmpl
mov
and
outsl
sub
insb
add
insl
pop
mov
hlt
mov
adc
jecxz
xchg
je
push
or
push
sbb
push
mov
cs
inc
pop
sbb
push
test
pop
addr16
lcall
adcb
loopne
add
shlb
jno
mov
jae
lcall
adc
jae,pn
mov
mov
add
inc
adc
lret
dec
push
arpl
pushl
nopl
test
ljmp
sbb
ja
fsubl
push
insb
fadds
popa
inc
jl
xchg
and
fdivrs
outsb
mov
pop
mov
jmp
pop
fidivrs
fwait
mov
fbld
fdivr
jb
lcall
pop
mov
add
jne
cmp
and
es
popl
gs
fwait
fdivrp
sbb
add
cmp
dec
pusha
shrb
jne
lods
jmp
idivb
xlat
mov
sarl
cmp
fdivrl
jecxz
lcall
fnstcw
pushl
cmpb
or
ret
or
pop
xor
push
mov
ret
sbb
fidivrs
stc
shrb
daa
inc
adc
shll
dec
xchg
jp
add
jg
ljmp
mov
or
sarb
mov
rolb
mov
dec
add
pop
lods
mov
lcall
xor
add
test
cmp
call
mov
mov
bound
mov
movsb
inc
and
cwtl
and
push
cmpb
dec
adc
push
incl
lret
cwtl
inc
cltd
jg
and
push
int3
dec
shlb
or
movsl
mov
dec
fcomip
xor
jmp
xchg
add
addl
sub
sub
mov
push
scas
mov
cmp
call
out
pusha
mov
ss
lcall
fisubrl
jmp
cmp
and
mov
add
decl
push
and
loop
aad
xor
add
add
inc
stc
call
pop
jbe
orl
roll
bound
decl
js
dec
push
addr16
jo
pop
lock
sub
pop
jg
jo
or
jg
add
adc
cmp
add
rorl
stos
add
pop
call
loopne
mov
sbb
in
add
sbbl
scas
mov
add
xor
jo
popa
mov
dec
add
cmpsb
xchg
sbb
andb
sbb
stos
and
xchg
insb
mov
cmpsl
or
decl
pushf
xchg
bound
cmpsb
cmpsl
bound
push
cwtl
fstpt
mov
inc
stos
test
mov
add
fmul
mov
push
xchg
sub
imul
or
jmp
mov
jb
ret
stos
mov
push
push
cmp
ret
in
dec
mov
in
pushl
cld
into
stos
mov
es
aas
sar
fdivl
jg
lcall
in
adc
cmp
lods
mov
js
sub
lods
cmp
call
jl
loope
sub
enter
repnz
mov
shl
out
xchg
loope
or
mov
lret
popf
cmp
mov
cld
divb
pushl
ss
mov
and
push
rorl
and
movsb
mov
pop
inc
cmp
and
push
push
mov
lods
xor
or
dec
inc
mov
xchg
jecxz
call
imul
sbb
pop
pop
in
jle
out
mov
mov
movsl
lock
xchg
push
xor
lret
jg
xchg
lea
pop
add
dec
push
mov
or
mov
mov
add
lock
rcrb
shr
addb
add
cld
jecxz
call
jp
adc
dec
or
loopne
add
mov
cmp
sbb
aas
or
and
roll
ljmp
pop
bound
mov
rolb
lret
lock
sbb
inc
push
jl
and
incl
mov
add
inc
xchg
icebp
push
cs
add
jg
lods
sbb
fwait
pop
mov
lcall
rcrb
testl
xor
lret
loop
lea
in
or
inc
inc
mov
cmp
icebp
imul
add
test
ljmp
dec
xor
xchg
or
sahf
xchg
inc
and
call
mov
repnz
and
sahf
adc
dec
je
xor
je
lcall
mov
popf
in
add
push
xor
fiadds
push
popa
mov
mov
add
dec
pop
in
repnz
adc
lds
pop
imul
loop
jp
call
and
ds
mov
les
fcmovnbe
aaa
sbbl
ljmp
icebp
loopne
jae
ret
pop
incb
popf
sub
sbb
jno
sarl
int
lock
push
cmpsl
jae
and
outsl
xor
lcall
sbb
xchg
mov
cmpsl
inc
pop
sbb
xor
mov
iret
in
outsb
mov
lahf
scas
cmpsl
ja
inc
jae
lock
xchg
add
adc
out
rorl
aam
push
fisubrl
jbe
and
mov
call
or
cmp
mov
shll
mov
cmp
rol
and
aam
inc
dec
lcall
xor
pop
jp
pushl
xchg
out
shrb
push
sbb
cmp
aas
adc
sbb
and
pop
inc
mov
lcall
sti
or
mov
cmp
insl
xor
pop
lret
or
lock
scas
lret
add
decl
jmp
sub
aas
call
sbbl
ret
or
push
imul
mov
inc
dec
or
in
call
jns
shrl
jo
outsb
mov
xor
pop
fisttps
xchg
add
enter
adc
out
jae
decl
das
sbb
xchg
push
out
mov
jmp
push
adc
mov
mov
pop
cmp
and
enter
andb
jp
pop
mov
xchg
test
hlt
addr16
sub
dec
loop
ret
sbb
call
or
push
incl
bound
or
pop
push
jbe
les
push
ret
int3
lret
decl
mov
lea
insb
pop
xor
sub
pop
dec
or
mov
cwtl
shll
xchg
dec
stos
mov
incl
dec
cmp
push
adc
push
clc
lcall
xchg
lods
xchg
xor
outsb
adc
pop
in
pop
scas
xchg
dec
lahf
inc
and
das
enter
adc
ss
repz
mov
loope
mov
mov
icebp
lcall
pop
dec
insb
xor
add
inc
out
cmp
mov
iret
dec
lcall
pusha
leave
dec
mov
xchg
push
je
mov
cmp
decl
out
sbb
or
and
loope
jns
icebp
shl
jl
ja
adc
jl
outsl
clc
test
xor
jae
cmpsb
ljmp
adc
adc
test
test
sbb
mov
or
jmp
fsubrl
adc
cmp
test
and
adc
cmp
or
rolb
andb
aam
addl
loopne
pop
clc
incl
outsl
jle
sbb
nop
adc
jo
repz
outsb
xor
xor
push
and
pop
add
lock
mov
xchg
inc
shld
sbb
insl
add
add
and
cmp
jb
repnz
and
sub
scas
je
inc
adc
fidivrl
iret
fwait
incl
fwait
shl
jle
inc
or
pop
cli
ret
inc
cmp
adc
mov
incl
cmp
push
insl
pop
les
loopne
ljmp
orl
popa
ja
ljmp
cmpxchg
sbb
add
pop
add
incl
mov
adc
push
loop
xor
and
xchg
dec
mov
outsl
mov
push
cmpsb
dec
js
pushw
xor
icebp
push
ja
decl
mov
add
push
dec
lods
mov
xlat
incl
push
cmpsl
cmp
push
das
arpl
pop
out
xor
push
add
cmpsb
sbb
subb
or
push
adc
adc
xor
mov
jle
ljmp
iret
outsl
xchg
jmp
mov
jecxz
sbb
mov
fldcw
push
std
les
jae
test
mov
fcomps
pushl
fsubr
cmp
push
icebp
cwtl
mov
js
cmp
push
ds
jecxz
add
stos
mov
inc
mov
sbb
lcall
mov
lods
cmpb
inc
jo
cmp
lret
lods
mov
and
or
nop
dec
sub
pushl
jbe
sub
mov
dec
aam
push
push
mov
mov
mov
xchg
pusha
or
mov
push
pop
dec
mov
xor
jl
push
xchg
loop
aaa
sbb
or
mov
add
inc
push
mov
mov
and
cs
inc
lods
movsb
jecxz
imul
xor
sbb
xchg
sbb
push
mov
mov
int3
dec
mov
sub
popa
and
add
push
repz
jg
or
call
cld
daa
push
push
insb
pop
add
cwtl
add
ss
adc
jg
dec
xchg
pop
shr
adc
and
test
mov
sbb
in
out
inc
sarb
mov
pop
je
pop
sub
test
mov
insb
fisttpll
pusha
or
cld
stos
lcall
sbb
lock
mov
and
push
add
pushl
sub
pop
and
xchg
mov
push
outsl
cli
pushl
sbb
ret
loopne
fsub
lret
push
decl
fsub
sub
or
push
arpl
xchg
sbbb
int
mov
clc
ljmp
das
xor
mov
insl
adc
add
inc
push
push
push
lret
rcrb
mov
cs
push
clc
pop
cld
inc
ss
pop
jle
movsl
cmp
add
pusha
dec
lret
push
inc
fwait
cld
and
lret
daa
xor
cmp
cmp
incl
ret
inc
or
mov
jne
add
nop
sbb
adc
outsb
insl
aas
insb
aaa
std
mov
movsb
xlat
ss
adc
jnp
or
xor
jnp
int
cmp
cwtl
sub
inc
xor
push
fcmovu
adc
inc
out
scas
pop
ret
ret
sub
add
or
call
loopne
add
xor
sub
or
adc
loopne
xor
call
faddl
mov
add
adc
pushl
fildll
lods
dec
sbb
mov
mov
mov
push
bound
mov
bound
pop
mov
and
dec
mov
ja
decl
popa
popf
push
and
scas
popa
add
insb
cmovg
push
addr16
pushl
mov
jae
mov
mov
jmp
add
push
mov
roll
out
xchg
cwtl
ljmp
push
cld
mov
ret
loopne
into
ds
dec
and
push
out
cld
loope
pop
adc
repnz
outsb
xchg
pop
push
jp
sub
inc
sete
sub
sbb
mov
jl
insl
es
and
or
mov
sbb
lods
clc
arpl
mov
pushl
outsl
adc
imul
mov
dec
adc
push
iret
pushf
shrb
sub
subb
and
leave
outsb
movb
fwait
push
push
and
or
insl
loop
into
in
hlt
add
dec
mov
jmp
add
mov
sti
push
stos
sbb
ret
movsb
jae
out
roll
dec
add
mov
mov
dec
inc
cmp
pop
mov
mov
das
cli
pop
arpl
and
adc
push
cwtl
repnz
xchg
imul
insb
pusha
aas
or
or
add
pop
cmp
sub
jge
inc
and
xchg
xor
cmp
fcomip
xor
mov
mov
cmc
mov
add
icebp
push
fiadds
jle
push
insl
mov
sbb
fstpt
adc
loope
mov
sbb
mov
mov
ljmp
xor
mov
insl
adc
mov
pop
xchg
push
pusha
pusha
pop
int
pop
cmc
jmp
push
add
fmuls
sub
inc
js
inc
and
xchg
and
pushl
dec
out
inc
je
lods
push
cmc
push
mov
icebp
pop
es
and
andb
sbb
ljmp
out
or
and
or
pop
cmc
lcall
or
xchg
bound
push
or
push
sbb
arpl
ljmp
cwtl
and
push
lea
push
and
push
push
gs
shr
mov
pop
adc
or
push
mov
sarl
and
xchg
call
mov
push
test
or
lds
xor
add
sub
gs
and
jmp
bound
inc
sbb
lret
mov
inc
iret
xchg
cmc
fcom
sbb
adc
loop
sub
adc
pop
mov
lret
dec
mov
pop
jp,pn
mov
test
sbb
and
lahf
pusha
insl
push
out
aaa
cld
add
divb
add
arpl
jg
sub
xor
jecxz
out
dec
sub
mov
pop
rolb
and
outsb
gs
add
dec
xor
cmp
push
sub
sahf
jecxz
out
mov
mov
cmp
call
cmp
cmp
aaa
cmp
sub
xchg
scas
cli
popf
cwtl
or
repnz
loopne
lcall
fcomip
ret
repnz
mov
mov
inc
mov
xchg
push
xlat
xchg
fcmovbe
xor
add
jne
scas
mov
out
ja
daa
fcmovu
lret
mov
adc
data16
inc
jo
push
pop
pusha
jge
cs
push
jmp
out
insb
in
sbb
jg
fcompl
jl
out
push
dec
or
pop
xlat
pusha
sbb
stos
jmp
fsubrs
inc
add
shlb
imul
pop
clc
push
xor
xchg
pusha
xor
orl
daa
fadd
pop
loop
or
mov
test
mov
xchg
movsb
bound
int
xchg
and
and
adc
jmp
jle
and
add
pusha
xor
movl
lock
ljmp
bound
inc
decl
sub
mov
and
inc
dec
das
fstpt
dec
mov
lock
jmp
mov
inc
pop
and
or
inc
insb
lret
addr16
mov
lret
jle
add
idivl
pop
orb
adc
push
fldenv
inc
flds
cmpsb
xchg
adc
outsl
jno
int3
outsl
xchg
je
emms
dec
sbb
int
arpl
into
cld
push
xchg
stc
add
outsl
cltd
das
and
sub
add
scas
xor
pushl
in
or
movsb
insb
xchg
jb
sbb
loop
lds
pop
bound
xor
lcall
or
jg
andb
imul
jg
lcall
je
ss
add
in
sbb
mov
cli
jp
js
iret
ljmp
sub
call
ret
or
mov
out
jb
incl
mov
or
insl
add
mov
cmpsl
fisubl
ljmp
mov
lahf
sub
aad
mov
fiaddl
clc
dec
fiaddl
mov
and
pop
inc
pop
adc
inc
or
call
mov
xor
xor
push
inc
mov
aam
push
mov
imul
loop
jg
jp
mov
mov
loopne
and
in
jg
imul
fistl
je
loope
jg
or
lock
in
fcompl
pop
decb
mov
add
fucom
sub
es
test
es
fisubl
mov
fsubrs
push
cmovno
andb
sbb
scas
mov
lret
imul
imul
push
pop
sub
fcomip
ljmp
sub
icebp
sub
mov
push
sub
xor
mov
movb
mov
pop
mov
xchg
mov
add
ret
pop
and
sti
rorb
into
lock
fwait
push
rclb
into
xchg
mov
mov
xlat
cmp
push
and
sar
decl
pop
inc
push
push
loopne
fldt
data16
outsb
adc
pop
add
sbb
fcoml
pop
lcall
xor
mov
rclb
decl
dec
ja
jne
sbb
xor
rcrb
rcr
pop
push
dec
sbb
loope
push
pushl
mov
mov
je
shll
sti
mov
mov
add
adc
lock
aad
push
jp
sbb
cmp
stos
sbb
stos
pop
fnsave
lock
jns
jge
stos
mov
fcomp
pop
shrl
mov
daa
mov
xor
ja
sub
mov
add
xor
pop
sub
cmpl
js
imul
xor
loope
pop
inc
pavgb
push
movsb
mov
fldenv
jg
cmpsb
add
adc
add
push
stos
inc
add
repnz
sar
fcmovnbe
jp
lret
sbb
push
mov
jl
and
or
mov
fs
stos
lea
stc
lcall
cmpsl
hlt
ljmp
fs
pop
mov
mov
icebp
imul
decl
mov
inc
or
les
or
mov
sbb
dec
aam
hlt
pop
xor
in
sub
dec
sub
or
dec
and
imul
pop
hlt
add
mov
flds
ss
xor
clc
in
inc
ficompl
fcmovbe
push
and
dec
or
mov
pop
outsl
xchg
repnz
xor
outsl
clc
jmp
jno
mov
push
mov
cld
inc
dec
movb
lods
push
stos
xor
incl
or
jne
aaa
out
push
mov
bound
pop
dec
add
dec
lahf
sarb
jbe
shl
ss
xchg
int
jl
jae
jns
xchg
add
fcompl
lcall
sahf
xchg
mull
xor
filds
sub
pop
adc
mov
sub
push
inc
ljmp
arpl
shl
lds
jnp
add
push
aaa
pop
sbb
inc
mov
icebp
pushl
xor
cmpl
mov
jae
lret
push
jmp
stos
popf
cmp
xlat
cmpb
cmp
in
push
cmc
mov
push
lock
ss
lds
mov
and
add
decl
pop
in
jg
lret
xchg
sbb
sbb
push
fs
shll
mov
add
enter
incl
xchg
adc
sti
fs
shrb
push
jg
add
inc
pop
lahf
push
xor
mov
sti
in
stos
inc
and
mov
nop
xchg
pop
int3
mov
mov
fstps
addr16
ja
repz
dec
scas
mov
jnp
loopne
sub
popf
inc
addr16
or
add
fdivr
decl
ret
mov
xchg
jnp
fmull
mov
dec
mov
adc
leave
testl
push
xlat
outsl
rcr
and
mov
push
or
pop
insl
or
jle
ret
in
mov
add
loop
inc
push
popf
mov
sub
adcl
lcall
sbb
sbb
cmpsb
or
icebp
add
mov
imul
std
decl
or
in
bound
xor
movsb
out
ret
cmp
sbb
int3
dec
jecxz
lcall
pop
mov
aad
or
dec
xchg
ss
lret
push
movsl
push
cltd
push
dec
mov
cmp
stos
jbe
cmp
incl
mov
fdivs
lret
push
ret
cmc
mov
inc
fnstenv
xlat
scas
pop
mov
loope
out
sbb
sbb
cmp
pop
enter
loopne
nop
ret
pop
lret
divl
xchg
sub
js
lea
sub
imul
mov
xchg
or
lock
ljmp
out
or
fidivrl
jnp
lods
js
es
stos
ss
lods
call
add
pop
mov
sbb
jl
jmp
add
aaa
ret
fdivr
loopne
jne
ja
ds
pop
fs
and
inc
xchg
pop
pop
inc
push
adc
inc
mov
call
ret
adc
add
nop
addl
ljmp
popa
jno
pop
dec
pushf
adc
push
scas
jl
pop
mov
mov
pop
pop
mov
pop
mov
mov
rolb
lea
sub
pop
nop
jmp
push
inc
xchg
outsb
mov
mov
sbb
jo
xchg
ljmp
es
xchg
jecxz
sbb
mov
sahf
aaa
gs
daa
adc
loop
mov
jne
andb
add
cli
out
and
lock
fwait
rcr
xor
xchg
dec
jb
std
incl
ror
in
out
jns
shlb
lret
mov
mov
push
mov
or
sahf
xor
inc
dec
jp
mov
mov
inc
aam
cmp
xchg
aam
movsl
sahf
sub
pop
clc
jecxz
adc
mov
mov
aaa
dec
cmpsb
xor
and
cmp
incl
ret
clc
or
fs
or
mov
mov
clc
jg
mov
roll
sbb
les
push
adc
je
mov
adc
inc
lods
out
mov
mov
mov
or
dec
les
adc
orl
lcall
cmpsb
and
cmc
outsl
mov
rorb
ret
push
call
adc
mov
push
imul
push
pop
imul
push
outsl
or
pop
jbe
dec
mov
jmp
mov
cmc
dec
mov
add
push
leave
mov
lret
in
push
iret
je
pushl
outsl
pop
mov
pop
shll
adc
out
insb
mov
mov
movsb
decl
adc
test
or
xchg
pop
test
sub
add
or
mov
das
clc
cmp
pusha
fsubrl
rcrb
or
sbb
popf
sbb
pop
add
ja
and
incl
aam
add
jb
push
sahf
push
or
pushf
add
mov
pop
loopne
jo
push
sbb
mov
jmp
xchg
popf
fcompl
arpl
or
xorl
cmc
xlat
lds
cmp
xchg
push
xor
fcomps
in
ljmp
js
orl
adc
call
inc
lock
and
mov
mov
jecxz
loop
mov
nop
in
sub
aam
dec
or
xchg
daa
insb
out
lcall
aaa
fisttps
ljmp
ret
mov
add
lcall
loope
cmc
jo
sub
lcall
ja
xchg
mov
and
push
add
adc
jb
add
sub
adc
pop
add
aaa
cmp
dec
pop
ljmp
movsb
clc
ljmp
xor
scas
xchg
adc
push
in
jp
sbb
mov
or
incl
fadds
push
xor
data16
sbb
clc
adc
sub
xor
add
mov
or
enter
xor
adc
incl
jo
xchg
pop
inc
xchg
jns
and
lcall
loopne
sub
pop
push
cmp
mov
push
ret
loopne
mov
adc
lcall
call
in
adc
sbb
push
xchg
mov
push
rolb
pop
icebp
inc
fadds
arpl
dec
cmpsl
mov
or
addr16
and
hlt
pusha
arpl
dec
movsl
aad
jae
pushl
xor
leave
mov
xor
nop
dec
insb
pop
mov
push
or
fiaddl
cmp
xchg
std
outsb
cmovbe
out
sub
dec
decl
cmp
loopne
out
rolb
ja
add
pop
pop
inc
fistpll
sbb
sub
incl
xchg
roll
rol
sbb
cli
orb
clc
lcall
pop
pop
out
aas
xchg
pop
into
or
inc
mov
adc
inc
test
ljmp
or
pop
in
jmp
test
punpckldq
andl
xchg
jp
inc
daa
push
xchg
push
push
out
sbb
cld
enter
pop
lock
in
sub
call
or
cld
cmp
inc
js
xor
inc
or
and
jg
xchg
dec
push
push
dec
mov
push
adc
add
jge
add
rcrl
rorl
dec
mov
scas
fwait
insl
nop
inc
xchg
jo
std
lcall
or
pop
adc
adc
fs
xchg
push
jne
inc
pop
stos
pop
add
aam
xchg
rclb
xchg
aas
jmp
or
int3
rolb
rolb
orl
mov
sbbl
xor
fbld
ja
clc
roll
mov
push
nop
insb
insb
inc
or
cmp
mov
lds
xchg
pop
push
subl
nop
push
xor
xlat
incl
pusha
adc
mov
jno
mov
fsubs
out
enter
insb
cmpsl
filds
dec
or
adc
std
shll
mov
push
pop
data16
pushl
mov
lds
cs
pop
add
jl
es
xchg
xchg
lds
addb
incl
enter
and
int3
sub
cld
lret
xor
pop
dec
mov
decl
and
jmp
mov
dec
and
mov
lret
or
sub
jnp
mov
and
imul
push
and
nop
add
test
pushl
inc
xlat
or
jo
pop
dec
inc
xorb
je
mov
ljmp
jmp
pop
lret
inc
pushf
dec
add
clc
push
enter
js
sbb
mov
test
out
add
sub
or
fistl
cmp
pop
popf
and
push
loope
mov
lcall
adc
shr
inc
sbb
push
cmp
and
mov
add
mov
in
data16
and
cmpsb
cmp
scas
call
cmpsl
sub
xchg
push
mov
jne
dec
xchg
test
test
lock
jl
rorb
aam
or
jno
cmp
fstp
loopne
sarl
push
dec
jnp
sbbl
or
push
add
sbbb
into
sahf
sbb
aaa
arpl
sub
outsb
incl
rcll
mov
adc
jnp
add
scas
jns
loope
cmp
test
fldenv
cmpsl
dec
xor
pop
fs
rclb
pop
lret
cmp
cwtl
shrb
icebp
mov
es
js
imul
or
mov
loop
add
cmp
jl
cmp
mov
mov
or
loopne
cs
mov
inc
jbe
push
sbb
mov
jecxz
aas
add
lret
push
cli
es
pop
mov
sbb
mov
and
fidivrs
inc
popl
jp
test
sub
add
jmp
mov
sub
mov
xchg
jle
mov
cmpsl
sbb
or
lahf
xchg
adcb
mov
decl
sbb
pop
sbb
mov
stos
pop
sbb
mov
out
outsb
cmpsl
sti
jg
mov
out
xchg
dec
xchg
jo
cmp
jmp
xor
add
stos
gs
enter
pop
mov
add
lret
pop
pushl
shrb
clc
add
mov
addb
sti
ret
enter
rolb
xor
sbbl
add
adc
jae
xchg
sbb
mov
inc
les
ds
mov
xchg
push
push
ljmp
or
push
xor
enter
pop
hlt
lcall
imul
aad
inc
loopne
xor
jecxz
aam
mov
add
xchg
cwtl
pop
add
xchg
or
sbb
daa
clc
xor
fcmovb
jmp
imul
fldl
push
and
add
pushl
out
and
mov
jne
push
dec
and
mulb
jne
test
or
orb
sub
pop
xchg
push
and
es
sub
stc
xor
movsb
adc
xor
incl
rolb
mov
inc
sbb
add
icebp
outsl
shl
push
aaa
sub
xchg
sub
hlt
jo
xor
sti
jmp
pop
or
sub
daa
test
aam
adc
sub
xlat
pushl
add
push
pop
xor
lret
adc
ja
aas
adc
mov
sub
arpl
inc
daa
dec
push
andl
rcll
push
daa
popa
stc
cmc
pop
mull
xor
pusha
mov
xor
xor
xor
addr16
ljmp
jbe
rcrl
xchg
sub
ret
pop
xchg
rcll
pop
nop
ja
clc
jbe
inc
ja
rolb
jns
cmp
mov
mov
sbb
ret
mov
add
pop
pop
dec
mov
lcall
push
loope
add
adc
pop
lods
xor
cs
lods
imul
jno
push
jae
push
loopne
dec
adc
call
pop
shrl
sar
add
mov
outsl
in
mov
mov
lds
add
ss
cmp
enter
mov
and
cld
jg
adc
jge
gs
push
adc
push
jno
roll
and
adc
decl
aam
aaa
inc
imul
mov
shl
lahf
call
pop
push
daa
in
xchg
push
ficoms
std
cmpsl
and
jne,pt
xchg
sbb
add
insb
mov
lods
push
call
clc
roll
xor
test
mov
pushl
ret
pushw
loop
sbb
andb
cmpl
mov
call
adc
test
daa
in
pop
pop
push
aaa
xlat
jg
punpcklwd
adc
les
rcrl
add
inc
test
xchg
xchg
jns
cmp
xchg
sub
adc
push
fs
dec
mov
mov
or
pop
icebp
call
add
add
inc
pop
push
xor
adc
sqrtps
adc
ret
add
nop
push
outsb
call
loopne
xor
jo
fsubrs
popa
inc
push
mov
jae
fsubr
adc
pop
addl
mov
sbb
mov
insb
adc
leave
pop
push
in
mov
add
mov
sbb
jbe
jae
test
loop
movsb
or
jbe
mov
das
mov
mov
stos
mov
push
or
push
nop
push
aaa
scas
mov
xor
ss
icebp
mov
pop
icebp
jmp
enter
adc
cwtl
in
mov
cmp
ss
sar
lea
sub
adc
cwtl
pop
in
js
mov
call
roll
and
sbb
lods
inc
popl
test
pop
and
lods
jae
mov
js
pop
pusha
adc
push
xchg
imul
mov
add
jmp
push
push
jne
shl
fists
and
push
in
ret
push
push
push
shlb
mov
pop
clc
jmp
xor
nop
fidivs
sbb
xor
add
call
mov
hlt
inc
fadd
sub
and
sbb
add
pop
popa
adc
or
push
ss
pop
and
or
lcall
aam
mov
xchg
cmpsl
mov
xchg
jg
ja
push
adc
xchg
in
movsb
pop
dec
addl
xchg
in
mov
in
sbb
inc
pop
push
in
movsl
adc
mov
inc
ljmp
xor
notl
inc
fs
out
jo
repz
xlat
nop
test
ljmp
icebp
ljmp
inc
pop
add
test
add
addb
je
sbb
push
fnstcw
push
inc
clc
jb
sbb
addr16
dec
xchg
cmp
xchg
pop
mov
je
cmp
pop
xchg
add
incl
sbb
fwait
imul
xor
fwait
inc
ret
mov
xor
call
xor
push
pusha
les
daa
lods
mov
pop
icebp
jo
pushf
jne
cmc
fidivl
sub
add
loope
xlat
icebp
add
add
sub
jecxz
pop
sbb
ljmp
cs
push
jmp
adc
add
add
mov
rorl
int
jo
mov
xchg
jnp
inc
lahf
sub
and
mov
sbb
cmp
adc
dec
loope
repnz
push
sub
jl
mulb
xchg
add
sbb
xchg
addr16
adc
pop
mov
lcall
imul
and
ret
fnsave
lcall
adc
lcall
pop
jb
in
push
push
xchg
mov
add
mov
enter
jbe
cmp
incl
clc
xor
es
ret
shll
and
decl
and
mov
leave
push
cmp
repnz
daa
push
sub
adc
in
cmpsb
jge
xorb
dec
imul
mov
inc
xchg
lret
cmpsl
xchg
sti
cmpsb
faddl
loop
cmp
and
add
test
push
das
popf
adc
cld
outsl
sbb
jo
je
pop
push
test
out
mov
js
nop
sub
outsb
sub
sub
xor
vmovupd
mov
add
mov
pop
add
or
xchg
loope
adc
aam
push
add
add
add
push
sub
mov
jbe
je
mov
scas
les
decl
sbb
adc
mov
aam
mov
outsb
inc
clc
pushl
dec
lods
stos
jno
movb
ljmp
pop
pushf
fcoms
outsb
addr16
imul
popf
jp
jmp
shrl
mov
icebp
pusha
add
shll
fwait
incb
call
arpl
pop
push
call
push
adc
cmp
ljmp
loop
arpl
xchg
hlt
cmp
lcall
clc
cs
pop
lea
mov
dec
aaa
stos
jnp
xchg
and
cmp
lds
mov
cmp
cmp
push
cmp
sbb
cmp
push
ds
dec
adc
fs
push
jle
ret
sub
loop
inc
xchg
xchg
inc
xchg
dec
dec
add
std
idivl
push
push
sub
jmp
rolb
sbb
loopne
stos
inc
and
out
leave
jecxz
xchg
data16
mov
jge
and
xor
and
mov
push
and
push
mov
or
jmp
xor
jle
orl
sub
xchg
cltd
or
in
inc
fdivl
or
inc
and
cmp
push
sbb
mov
dec
jmp
mov
dec
sarl
or
sar
push
test
hlt
stos
rcl
mov
adc
ficomps
add
mov
jmp
ret
inc
or
rorb
add
stos
ret
in
adc
lock
int
lret
adc
sti
mov
push
jo
stos
and
clc
lcall
mov
jl
inc
repnz
lcall
jmp
fwait
mov
push
jne
push
pop
divl
mov
js
pushf
cmp
pop
mov
decb
xchg
push
test
xor
scas
loop
pushf
iret
xor
push
call
xor
mov
cli
pushf
push
jl
jg
insl
mov
add
std
lcall
add
fcmovnb
sub
mov
pusha
decl
ret
dec
or
and
cmp
mov
push
cmp
mov
insl
negb
xor
pop
mov
adc
jbe
pop
cmp
ljmp
adc
mulb
in
add
mov
add
dec
dec
gs
mov
xor
cmp
out
mov
jne
std
out
fadd
add
add
ljmp
lods
aam
xchg
enter
jecxz
sbb
xor
mov
call
clc
and
push
and
dec
mov
test
sub
jmp
fs
push
shll
sbb
add
add
sub
sub
dec
add
mov
movsl
cmpsl
inc
loopne
out
push
lods
fwait
sub
int3
fdivr
aaa
loop
mov
pushl
jb
addb
and
call
xchg
xor
mov
jmp
movups
inc
mov
cwtl
or
sub
or
into
and
pop
fcmovnu
scas
adc
decl
pop
or
nop
add
mov
add
xchg
popa
adc
pop
or
outsl
cli
sti
dec
stos
cli
pop
pop
push
mov
xor
sub
outsb
test
cmp
adc
push
xchg
in
sbb
adc
pop
subb
add
sbb
rcr
sbb
sbb
xchg
and
cmp
mov
ljmp
ss
lcall
sub
adc
mov
push
jg
push
shll
jle
jbe
pop
scas
or
rcrl
jbe
mov
jg
mov
imul
adc
clc
fistps
jmp
push
xor
mov
je
push
insl
aad
loop
lods
jb
push
or
insb
dec
lds
inc
cmpsb
jl
sbb
int
incb
cmp
daa
mov
movsb
ja
sbb
fsubl
test
cmp
push
imul
sbb
adc
push
jbe
sub
add
jmp
enter
add
cmp
cld
adc
clc
jmp
xor
push
iret
inc
fimull
test
outsb
xor
ficoml
xor
test
shrl
push
and
roll
sti
pop
stc
mov
jae
xchg
and
inc
push
push
fiaddl
inc
jae
and
lcall
out
daa
mov
ljmp
jl
cmpsb
adc
lds
and
lret
insb
mov
ljmp
inc
pop
mov
xor
dec
nop
adc
jb
ret
sbb
call
mov
leave
ret
hlt
into
adc
push
inc
pop
xor
mov
inc
stos
or
ficomps
sahf
loope
in
icebp
mov
pop
push
dec
ljmp
call
cmp
inc
std
jae
xor
into
xchg
dec
in
mov
sbb
jecxz
idiv
jne
into
rcrl
rcll
jmp
push
cs
cli
scas
out
sbb
cmpsb
pushf
sahf
push
mov
cld
pushf
je
popf
outsl
mov
pop
add
inc
cmp
fnsave
aam
add
sub
sub
mov
jle
ja
dec
clc
lds
loop
mov
inc
fcomip
sub
imul
sub
lea
dec
jno
mov
lcall
mov
adc
mulb
and
mov
add
pop
and
ljmp
push
and
mov
jmp
push
sub
pop
in
daa
jp
lret
andl
jo
aam
scas
xchg
mov
out
mov
outsl
cli
ljmp
mov
and
or
xor
add
jns
cli
les
lds
and
ljmp
mov
add
in
jnp
inc
inc
roll
loop
jmp
mov
mov
cmp
cmp
repnz
mov
leave
cmp
jp
sub
xchg
or
call
movsb
add
fisttpl
cmp
movsl
into
out
cli
inc
xchg
sub
push
loopne
outsb
add
loop
and
cld
or
fildll
or
sti
cs
dec
pop
ds
fyl2x
repnz
xchg
sub
pop
mov
cwtl
adc
xchg
shlb
push
in
pop
sbb
adc
into
xchg
es
shlb
pop
mov
lods
xchg
insb
xor
jne
lods
xchg
dec
mov
sbb
movsb
and
jg
icebp
mov
ret
movsb
in
rcr
test
arpl
sub
inc
nop
mov
les
shlb
rcl
jg
xor
push
jp
dec
cmp
lods
pop
nop
and
fs
pushl
xchg
jl
push
std
jnp
mov
imul
pushf
aaa
jg
inc
mov
call
lods
lcall
pop
sti
jbe
fnsave
mov
js
cmc
cwtl
scas
xchg
ds
icebp
pop
sahf
das
call
jno
cmp
test
push
jb
notl
hlt
inc
or
hlt
lock
fists
add
inc
and
xor
cmp
pop
pop
fcom
lahf
or
add
incl
test
dec
inc
xor
pop
jno
cld
fcomip
pop
inc
push
sub
movsb
mov
sbb
cmp
sbb
aam
inc
adc
jecxz
and
push
dec
sbb
loop
cmp
jb
and
sub
movsl
lea
push
add
les
pusha
ret
add
sbb
lea
call
test
mov
pop
adc
sbb
cmp
or
lret
sub
cmp
dec
ss
pop
imul
lods
fdivl
sub
decl
add
shll
jb
sub
call
pop
push
cwtl
repnz
dec
mov
sbb
call
mov
add
sbb
jne
enter
xor
and
lods
push
adc
insb
mov
and
add
dec
aad
in
sbb
and
push
mov
lret
mov
pop
xor
fildll
xor
pop
push
mov
mov
mov
inc
addb
subl
testb
lock
sar
jmp
jo
loopne
adc
jb
xchg
cltd
je
mov
clc
mov
aas
push
push
pop
lahf
lcall
mov
xor
xchg
or
decl
mov
sub
es
sub
iret
and
cmpsl
movsb
lcall
inc
scas
imulb
cs
or
repnz
arpl
adc
incl
ret
sbb
lret
mov
into
xor
and
insl
xor
cmp
dec
pop
add
insl
fisubl
xchg
sbb
sar
loop
stos
inc
mov
mov
mov
ljmp
cs
ljmp
ja
adc
mov
pushf
mov
xor
or
ljmp
into
mov
shl
repz
aas
sub
pop
ret
rorl
pushl
xor
sub
mov
push
or
pushf
rolb
jg
popa
inc
or
mov
mov
inc
push
dec
js
push
imul
incl
dec
sub
xorb
hlt
gs
data16
repz
jge
into
cmp
xorb
inc
mov
inc
lahf
into
cmp
fdivr
push
cmpb
movsl
xor
add
lcall
dec
cmpsb
stos
inc
xchg
cs
pop
push
add
cmp
xor
dec
push
add
dec
jp
ljmp
scas
jl
insl
mov
pop
pusha
xor
les
xor
sub
mov
mov
pop
push
dec
decl
sahf
scas
mov
dec
jl
mov
jmp
add
imul
enter
cmp
ret
ret
adc
adc
loopne
scas
call
push
cmpsb
pop
and
and
jae
dec
sbb
xchg
ljmp
les
cmp
push
sub
sbb
test
ljmp
lret
push
lret
cmp
roll
pop
xchg
adc
popf
lods
lret
lret
jg
pop
cmc
xchg
sahf
pop
insb
out
sbbb
lret
push
xor
lcall
xorb
es
call
push
xor
inc
adc
sbb
out
pushf
insb
and
sbb
or
fsubl
int
and
push
cmp
jmp
sbb
and
lock
pop
fwait
jge
dec
fidivrs
test
sbb
mov
inc
push
jb
and
les
push
lret
xchg
pop
leave
clc
aaa
std
add
push
mov
imul
jl
ds
push
js
inc
cs
push
sbbb
jg
push
mov
mov
inc
orb
mov
fcmovnb
dec
push
inc
xchg
roll
lods
sub
sbb
daa
loopne
inc
aad
shl
pusha
movsb
and
dec
cmp
jmp
dec
cmp
sahf
negb
orl
call
pop
dec
cld
add
push
dec
sar
mov
dec
push
mov
jb
sub
inc
xchg
inc
pushl
or
pop
cmp
mov
push
test
jge
dec
imul
call
movsl
pop
and
mov
mov
push
leave
mov
adc
xchg
test
nop
adc
pop
add
pusha
jge
push
mov
xchg
arpl
or
jp
pop
push
mov
inc
pop
or
call
movb
inc
outsb
dec
jno
dec
dec
mov
call
cs
pop
push
mov
xchg
dec
mov
mov
sub
and
pushl
push
nop
adc
xor
inc
popa
push
jo
sbb
xor
sub
pop
add
jl
nop
xchg
inc
dec
es
call
mov
test
sbb
inc
cmpl
sub
dec
cmp
call
push
ss
loope
insl
jno
xor
ret
bound
ljmp
mov
sbb
rep
stos
sbb
xor
jmp
sub
andl
ficoms
aaa
pop
pushf
and
ja
aam
lods
test
jne
out
fcmovnu
dec
call
in
push
mov
mov
popf
jmp
daa
jbe
inc
mov
out
fmul
in
ljmp
push
out
cmp
jnp
out
jecxz
cli
cld
push
mov
mov
out
add
xchg
inc
inc
lods
push
mov
mov
sbb
sub
cmp
mov
ljmp
or
pop
push
lcall
call
dec
pop
or
clc
ljmp
xchg
shlb
je
aam
int3
pop
sarb
leave
sar
or
dec
movsb
cltd
cwtl
stos
add
in
iret
cmp
and
xor
cli
jg
ss
aas
fadds
dec
jmp
rolb
ljmp
push
push
cmpsb
clc
in
and
cmpsb
ret
jb
sub
rcl
in
out
mov
loopne
push
pop
call
test
mov
cs
push
cwtl
cmp
xchg
adc
mov
inc
inc
xlat
decl
addr16
mov
cmp
pop
pushf
cmp
lds
push
inc
add
fstpl
es
test
shll
adc
mov
and
mov
cltd
dec
dec
mov
mov
cmp
push
movsb
dec
lahf
je
add
sbb
cmp
adc
addl
xchg
add
pushf
sbb
and
call
insl
incl
push
test
mov
adc
add
es
mov
adc
cmp
push
cmp
add
movsl
mov
mov
pop
out
imul
popa
mov
xchg
insb
mov
xchg
cmp
push
inc
cmpsb
xchg
sbb
xor
out
adc
mov
mov
push
pushf
stc
dec
pop
fidivrs
js
mov
jbe
int3
popf
lock
mov
xchg
push
sbb
mov
adc
incl
mov
je
xor
add
push
add
and
or
insb
cli
lcall
repz
lcall
repz
cmp
movsl
repz
int3
sbb
mov
mov
cwtl
sub
jg
mov
sbb
dec
gs
les
push
sub
adc
adc
pop
push
gs
daa
sub
mov
xlat
pushf
push
adc
ljmp
push
cltd
aad
decl
mov
pop
loope
pop
xor
popf
sti
jp
xor
push
decl
xor
cs
jle
push
xor
xchg
insl
xchg
jmp
inc
sub
call
cmp
mov
mov
or
or
sbb
aaa
xlat
xor
jg
pop
or
xchg
push
ljmp
cmpb
mov
lods
pop
add
jo
push
adc
jp
xchg
sbb
sub
lcall
inc
jmp
jno
mov
cltd
mov
sarl
cs
sbb
andb
lret
ljmp
sbb
daa
lock
push
push
mov
lea
push
bound
test
or
ja
rolb
and
or
mov
jmp
adc
icebp
lcall
addr16
adc
js
dec
mov
add
sub
mov
sbb
ficoms
lcall
adc
mov
dec
movsb
inc
dec
lods
cmp
mov
sbb
ud0
in
xchg
jg
cmp
push
sbb
sub
sub
das
cwtl
popf
push
lods
lcall
pushl
das
lock
lret
mov
xchg
into
or
pop
dec
xchg
out
lcall
call
lods
xor
jl
popa
test
rcll
sar
mov
incl
cmp
xor
call
cmp
mov
fsubs
call
mov
ss
add
clc
aas
push
adcl
adc
sub
mov
jg
inc
cli
xchg
scas
ficoml
sbb
xchg
sbb
pushl
or
adc
and
cmp
clc
dec
lods
pop
pop
inc
stc
sbb
push
mov
subl
hlt
and
js
enter
out
cli
jnp
call
adc
xchg
fwait
insb
andl
mov
incl
cld
sbb
xor
iret
and
fbld
lret
xor
and
push
add
sub
push
cld
sub
fwait
mov
mov
lock
and
sarb
pusha
cli
add
pushf
mov
and
mov
fcomps
cmp
scas
mov
sbb
movsb
xchg
mov
das
rorb
adc
add
mov
lahf
mov
xchg
ljmp
sub
pusha
mov
inc
or
sbb
pop
ficoml
lods
mov
js
cmpb
stos
mov
add
inc
xor
jo
inc
or
jp
mov
mov
pushl
add
push
jnp
dec
pushf
mov
xchg
inc
filds
push
in
mov
hlt
cmp
xorl
mov
mov
test
lds
nop
add
test
fnstcw
push
push
add
xchg
nop
mov
sub
cld
dec
adc
and
repz
adc
test
loop
mov
jo
sbb
or
inc
fcomip
out
mov
add
and
lret
repnz
inc
pop
stos
inc
xor
adc
xor
incl
cmp
je
mov
stos
dec
mov
pushf
mov
pop
hlt
pop
outsb
mov
fldcw
or
add
sub
push
push
adc
aaa
inc
rclb
sbb
xor
lods
mov
lds
sub
cltd
mov
imul
call
inc
ljmp
jg
jmp
jne
rcll
mov
lcall
ffreep
add
sbb
mov
inc
aaa
xchg
or
cmp
cmp
xorb
xchg
mov
mov
pushf
mov
xchg
clc
push
sbb
rcrb
sbb
mov
outsl
add
sbb
nop
jmp
popf
pushl
jg
loop
movsl
adc
mov
test
and
pop
mov
sub
and
incl
add
add
or
ss
add
movl
pushl
rcrb
cld
mov
pop
xchg
lahf
movsb
ljmp
dec
rcl
aad
push
xchg
cmp
inc
cmpsb
cmp
rorl
jmp
push
fs
fcomip
movsb
mov
mov
es
and
loope
sbb
shlb
lcall
cmp
sbb
aam
js
adc
je
in
fcompl
or
mov
mov
insb
push
pusha
in
mov
add
out
iret
adc
sbb
cld
rorb
add
aam
xchg
sbb
imul
decl
lock
push
push
arpl
sbb
mov
push
dec
loope
icebp
push
push
push
adc
leave
adc
sub
and
pop
sar
ljmp
xchg
and
pop
adc
repnz
scas
xor
adcb
and
insb
push
scas
call
dec
xchg
mov
mov
aad
sub
lods
call
mov
out
and
enter
cmp
addr16
cmp
sub
mov
adc
jns
pushl
std
add
mov
mov
test
popf
sbb
fsubr
stos
ljmp
add
mov
jp
mov
fisubl
shrb
sbb
mov
jno
cmp
lret
scas
popf
js
dec
dec
mov
mov
movsb
cmp
pop
insb
ljmp
mov
cmp
ljmp
or
or
fisttpll
and
jmp
loopne
mov
jno
popf
mov
inc
sbb
sub
pushl
mov
aaa
jne
xchg
enter
xor
push
rcrb
fcoml
enter
xchg
sar
ljmp
loope
mov
add
pop
dec
icebp
sbb
imul
call
mov
icebp
jge
repnz
cmpsl
dec
and
dec
sub
or
shl
stc
push
std
mov
ret
sub
subl
test
mov
cmpsb
decl
jo
mov
aas
ret
leave
mov
xchg
jg
nop
sub
cmpsb
loopne
lds
or
cmp
andl
jmp
push
mov
loopne,pt
xor
xor
adc
push
call
sub
pop
sub
mov
decb
push
test
sti
mov
adc
dec
sbb
add
xchg
cmc
xchg
pop
jp
push
ret
loope
xor
icebp
pop
sbb
ds
mov
sbb
add
addb
sbb
cli
ret
or
pop
mov
add
arpl
fldl
ret
call
or
shlb
cmc
pusha
gs
jp
sub
xchg
xchg
in
fcmovne
mov
mov
add
add
push
mov
xor
or
lcall
adc
loopne
shll
xchg
shll
jmp
sub
mov
xchg
fiaddl
add
call
sub
jo
scas
push
sbb
scas
in
pop
test
rclb
inc
popf
andl
or
add
mov
and
add
incl
in
sub
test
std
lcall
lcall
jg
lcall
inc
sbb
rcl
push
test
aad
add
stos
dec
adc
cmp
jae
or
popa
or
pop
push
mov
jp
inc
test
filds
fadd
lcall
dec
dec
fildll
dec
mov
or
or
cmp
jo
aad
test
add
add
inc
or
nop
call
push
mov
or
add
jno
aaa
scas
push
sub
imul
jmp
cmp
xchg
pop
push
xchg
sbb
inc
jns
add
sub
add
mov
shrl
std
xchg
lcall
mov
inc
push
popa
xchg
xchg
test
js
out
loopne
jns
or
loope
lods
cmp
jge
ret
cmp
push
call
ret
cli
and
jecxz
scas
enter
cmpsb
xchg
mov
jmp
pushf
je
xlat
ret
inc
sub
add
popa
push
pushl
cld
out
in
cmp
lret
rol
mov
inc
xchg
out
daa
dec
subb
pop
cmpl
pop
cld
pushl
ret
pop
lods
shll
xor
jp
mov
add
andb
xchg
mov
rcrl
dec
push
jmp
inc
subb
adc
fdivl
addb
add
and
fmull
mov
jle
dec
jmp
mov
adc
lock
sbb
jg
mov
addb
push
xchg
shlb
jnp
enter
pop
inc
sar
xor
sbb
je
add
sub
pushf
lahf
sub
push
push
mov
nop
pop
loopne
pop
ljmp
add
repz
fs
dec
sbb
hlt
cmp
mov
or
call
sub
dec
ja
jp
cmp
call
push
sub
and
lods
adc
jp
nop
mov
shll
xchg
popf
sub
push
push
mov
loopne
jle
fwait
les
push
xor
mov
dec
adc
ret
add
lock
dec
insb
std
add
add
adc
jb
dec
pop
adc
addr16
iret
dec
mov
test
add
xchg
leave
and
jns
sub
in
adc
mov
jg
lret
add
leave
add
cmp
mov
dec
cs
lcall
or
or
and
andb
ret
rcl
mov
outsb
imul
leave
or
jmp
xor
pop
dec
adc
ficomps
add
mov
mov
dec
js
insl
sub
testl
sbb
push
out
push
cli
decl
lcall
shll
rcrb
dec
dec
leave
push
mov
cwtl
add
call
js
cli
jne
xchg
in
xchg
cmp
call
in
rolb
adc
cs
out
aam
fsub
rcr
inc
sbb
push
out
jb
push
fisttps
push
jnp
lods
pop
cmp
cmc
jbe
sub
imul
mov
mov
adc
cwtl
sbb
repnz
xchg
lcall
push
pop
rcrl
pop
stos
push
push
std
pushl
jp
mov
mov
jo
xor
add
adcb
inc
in
mov
add
jmp
dec
call
in
pushf
out
bswap
orl
push
test
cmp
pop
add
imul
jns
push
dec
add
test
xchg
jg
lcall
mov
sbb
adc
mov
dec
pushf
outsl
cltd
lcall
jecxz
mov
or
repz
and
aas
aam
and
mov
jmp
pusha
mov
sbbl
pushl
dec
sbb
icebp
and
bound
stos
push
mov
push
imul
sub
lret
sub
in
sbb
dec
enter
add
js
mov
pop
lock
adc
rcrl
xor
lods
mov
dec
xchg
idiv
cmp
cltd
in
decl
lods
and
mov
decl
inc
inc
fsts
dec
jo
test
insb
jmp
sub
xor
in
into
loopne
aam
jne
sbb
cmp
call
es
jl
clc
outsl
test
xor
inc
insl
out
and
insb
nop
xchg
and
sbbb
rorb
add
scas
in
lahf
test
add
or
decl
and
pop
ss
dec
out
mov
fstpl
les
pop
lock
popf
es
test
inc
inc
sub
incl
daa
pop
sahf
mov
xor
inc
jle,pt
pusha
arpl
test
jmp
cs
ficompl
and
ret
pop
dec
fidivrl
add
outsb
jle
stc
stc
repz
aaa
les
mov
aaa
jg
sti
aaa
pop
lock
enter
ljmp
mov
in
or
sub
mov
lret
mov
fnstenv
sti
imulb
mov
fildl
out
js
bound
jl
mov
adc
push
pop
xlat
in
sbb
mov
das
fdivrp
lcall
mov
pop
xchg
movsl
jns
out
mov
js
adc
mov
cmp
aam
dec
mov
cmp
std
jg
loope
mov
push
fcmovnb
or
mov
xchg
pop
js
test
push
inc
jns
out
or
xchg
lea
inc
ljmp
sti
sub
or
lcall
pop
rol
mov
je
jg
sahf
lcall
mov
aam
out
mov
jmp
loopne
push
push
test
add
fcoms
or
test
sarb
sbb
inc
push
fdivp
mov
mov
xchg
aam
dec
sub
pop
mov
sbb
inc
push
or
in
aaa
inc
push
push
dec
pop
call
shlb
mov
movsb
xchg
cmp
pushl
movsb
cs
gs
aaa
mov
xchg
dec
inc
test
sbb
out
fildl
lock
xchg
push
inc
xor
adc
add
add
and
mov
imul
add
rolb
xchg
jo
call
sub
xchg
sbb
jg
sbb
sbb
sbb
sbb
out
sahf
je
test
mov
xchg
cmp
cmpl
jmp
lock
stos
minps
inc
test
decl
push
adc
inc
notb
arpl
or
xor
add
fs
and
clc
decl
into
add
insb
flds
std
pop
or
lea
ror
mov
inc
filds
mov
or
inc
imul
mov
test
aas
pop
sub
dec
ss
mov
ljmp
cmp
hlt
sub
fldl
dec
mov
lock
pushf
mov
and
imul
adc
pop
adcb
decl
pop
imul
mov
add
lcall
pop
into
testb
jg
gs
pop
xchg
or
xlat
pop
outsl
xor
sub
pop
imul
push
adc
jg
in
or
shll
adcl
xchg
aad
inc
cmp
or
call
push
xor
shlb
aaa
push
push
fidivrl
inc
fucomip
loope
inc
mov
in
jge
mov
push
add
or
icebp
sahf
jge
pusha
rorb
push
cmp
push
jecxz
mov
mov
test
rolb
adc
jl
dec
mov
xor
add
in
xchg
test
adc
cmp
fbstp
jns
sbb
add
movsb
repnz
cmpsb
lret
cmp
adc
lcall
sbb
cmc
push
push
nop
shrb
or
xchg
popf
pop
jns
in
call
je
addb
daa
inc
jg
xchg
jmp
scas
cmpsl
pushf
jp
imul
out
mov
inc
clc
cld
loopne
getsec
call
dec
or
jecxz
add
mov
xor
stc
sbb
roll
jae
fs
lcall
aad
push
ret
mov
decl
add
mov
push
mov
in
mov
push
pop
mov
lods
addr16
lret
xchg
lret
inc
sub
pop
push
inc
inc
pop
loopne
pop
sbb
push
xor
or
jecxz
or
mov
ljmp
hlt
push
xor
out
push
dec
or
fwait
pushf
xor
or
xchg
in
add
pushl
pushf
and
push
sbb
inc
sbb
mov
ret
and
rcrl
inc
scas
test
call
sub
or
inc
jbe
movsl
outsb
ror
adc
sbb
and
mov
push
std
fbstp
leave
adc
xchg
test
mov
test
pop
clc
pushl
std
push
pop
enter
and
and
fcmovnb
or
xor
push
sar
bound
mov
cmp
pop
inc
subl
call
outsb
outsb
mov
dec
mov
jno
sbb
mov
sbb
test
ljmp
shll
cwtl
sahf
push
insl
inc
dec
pop
add
pushf
out
add
mov
cmp
or
jnp
mov
jmp
and
out
cmp
push
mov
out
fsubl
adc
add
pop
add
and
das
and
jns
push
push
repz
in
pusha
and
adc
cmp
ljmp
les
push
stos
pop
mov
and
mov
and
ljmp
jne
shll
into
iret
dec
jns
dec
aaa
test
or
mov
pop
aam
add
xchg
add
cmp
mov
in
push
pop
insb
div
cmpsl
dec
sbb
mov
icebp
call
pop
in
adc
nop
or
dec
js
das
or
push
add
or
cwtl
lods
roll
push
sub
and
adc
jmp
jo
es
push
scas
jae
lods
inc
mov
and
shlb
pop
and
stos
mov
add
jmp
inc
and
push
xchg
aaa
les
ljmp
adc
sahf
xor
mov
clc
jmp
aad
jecxz
mov
mov
adc
sbb
xchg
inc
data16
movsl
pusha
inc
cmp
ljmp
ss
dec
or
cmp
aam
mov
sbb
out
call
movsl
lret
lret
dec
inc
inc
sub
mov
out
and
pushl
xor
push
push
jp
es
push
inc
inc
and
or
sbb
adc
lcall
mov
outsb
lret
in
sbb
or
outsl
fcmovbe
add
nop
in
pop
sbb
aam
into
pushf
aas
loop
jg
scas
les
stos
adc
push
dec
jmp
mov
aam
data16
lcall
mov
insb
js
push
jp
xchg
adc
cwtl
roll
stos
call
and
jns
test
rorb
sub
cmpsl
dec
stos
insb
mov
movsb
dec
in
sub
decl
into
jae
rcrl
loope
dec
push
lret
jg
je
ss
cmpsl
push
andl
sbb
jl
or
push
push
xor
cmc
je
ficoml
xor
lods
ljmp
incl
adc
es
mov
inc
cmp
sub
jno
nop
add
and
ror
mov
jmp
inc
pop
sbb
andl
in
or
sub
fldt
fs
jnp
leave
mov
cld
mov
lcall
push
or
mov
jnp
jno
mov
jle
adc
dec
or
add
push
sub
lods
adc
jnp
incl
push
adc
sarb
rcr
bnd
mov
dec
jp
ss
jg
in
ret
pop
fs
sbb
xor
or
outsl
dec
ljmp
out
call
cld
das
sub
or
les
jns
cs
pusha
sbb
nop
jmp
lock
clc
mov
sub
leave
mov
ret
and
mov
cmpsb
mov
sbb
inc
cvtdq2ps
sbb
xor
shll
add
das
enter
pop
jae
inc
nop
sbb
dec
cmp
adc
sbbb
in
imul
push
fsubrl
xorb
sub
cld
mov
icebp
jne
and
data16
push
jo
lcall
nop
repnz
test
or
jb
xchg
xor
scas
or
sbb
adc
mov
mov
inc
mov
inc
xlat
addr16
outsl
les
gs
cltd
int3
jl
and
shrl
jns
aaa
aaa
cmpb
or
aas
add
add
dec
faddl
gs
je
mov
mov
add
call
mov
jmp
and
pop
adc
dec
lahf
stos
rclb
test
mov
andb
and
mov
ficoml
xor
int3
or
or
mov
in
pop
jg
add
xor
pushl
pop
cli
xor
nop
lea
ret
arpl
lcall
lea
push
xchg
cltd
decl
push
mov
aam
clc
push
leave
lods
vmovapd
jno
test
jo
popa
adc
mov
xlat
pop
lock
add
rcll
daa
add
pop
movsb
xlat
ja
inc
ja
pop
or
js
int3
fisttps
lock
push
fdivrl
push
notb
cmp
add
xor
mov
xor
dec
int
rorb
sub
pop
sahf
lcall
incl
cmp
shlb
out
enter
ret
cld
loopne
jno
mov
sbb
mov
mov
xchg
loope
shrl
enter
adc
mov
shr
xchg
inc
cltd
dec
dec
test
dec
add
xchg
fsubl
decl
fistps
fildll
dec
cwtl
add
orb
xchg
mov
mov
ja
xor
jb
inc
rcl
dec
jge
mov
call
sahf
sahf
push
aam
popf
rcr
jmp
mov
mov
into
adc
push
xchg
jns
iret
and
xchg
fadds
rcrl
in
mov
dec
add
mov
shlb
ret
stos
sub
mov
adc
lods
push
decl
add
rclb
pop
mov
inc
push
rcrb
push
stc
imul
fcoml
or
mov
xchg
push
sbb
lcall
adc
mov
push
cmp
and
and
inc
xor
stos
pushl
cwtl
shlb
int3
adc
add
fs
cld
aam
ja
xlat
fwait
adc
xchg
insl
popa
or
or
push
xor
mov
addl
xlat
outsb
jae
push
jae
cld
lcall
bound
bound
jns
pushf
pop
push
adc
lea
jp
fdivr
outsl
lcall
iret
hlt
lds
clc
add
cmp
sub
ljmp
fnstcw
dec
mov
xor
andb
das
mov
subb
mov
ret
rol
sbbb
push
aas
jg
ret
jge
fld
leave
pop
inc
add
test
add
add
mov
dec
sbb
dec
mov
dec
add
fwait
incl
loopne
sub
and
imul
out
loope
xchg
adc
bound
pop
and
sbb
sbb
dec
sbbl
cwtl
inc
popf
enter
loopne
lods
leave
push
scas
clc
lcall
ss
push
add
mov
xchg
mov
mov
adc
cld
inc
inc
adc
fs
sbb
cmp
lcall
in
add
mov
pop
lods
push
pop
xchg
out
add
int
inc
sbbb
push
es
xor
hlt
arpl
arpl
addr16
decl
push
mov
roll
iret
adc
push
xchg
xor
push
add
insb
ljmp
cli
inc
sbb
push
data16
or
std
mov
dec
lock
sbb
pop
xor
lea
pushf
add
push
inc
fnsave
mov
mov
push
pop
int3
movsb
dec
bound
pushf
lret
call
cld
adc
int3
cld
lds
jle
sub
rorb
in
add
xor
adc
push
imul
lods
jl
pusha
xchg
or
sbb
ljmp
orb
pop
fildl
orb
sbb
sbb
pushl
and
push
in
mov
clc
cld
xchg
pop
ficompl
stc
push
jne
mov
sbb
inc
mov
lahf
inc
orb
inc
dec
in
sbb
sar
test
sbb
loop
mov
dec
cltd
data16
cmp
stos
ret
add
mov
dec
rorl
call
sub
out
xor
leave
sub
dec
mov
in
add
enter
mov
cwtl
and
enter
sahf
xchg
into
add
inc
popf
jo
mov
fisttps
push
aad
inc
xor
aaa
jp
inc
in
fidivs
jbe
pop
imul
mov
adc
mov
cmp
lods
and
jmp
mov
pop
cmpb
nop
xchg
scas
roll
xor
imul
ss
das
rclb
dec
jmp
dec
fidivrl
inc
bound
pushl
mov
add
xor
faddp
xchg
hlt
push
and
fs
pop
xchg
mov
test
dec
inc
dec
pushaw
dec
and
push
and
jns
nop
mov
jbe
in
push
xlat
arpl
cmp
mov
sub
cmc
test
mov
fdivr
pop
loopne
and
xchg
sub
in
aam
push
mov
test
sbb
lcall
push
and
cwtl
push
test
adc
or
call
sub
jo
pusha
mov
test
or
jg
mov
nop
int3
cmpsb
lods
or
call
out
hlt
mov
ljmp
inc
jge
and
in
push
dec
sbb
out
adc
jbe
stos
call
sub
shl
mov
lahf
jo
push
mov
jg
rorb
das
mov
xor
out
ds
adc
sahf
adc
inc
or
pusha
or
fwait
call
movsb
mov
mov
aas
leave
push
aam
add
out
mov
movsl
push
and
jmp
sub
mov
testb
orl
call
adc
shll
sub
out
repnz
arpl
rol
imul
jmp
pop
mov
lods
dec
lcall
ret
mov
fcomp
shll
push
std
inc
pusha
insb
mov
fdivl
push
push
and
jb
add
inc
lds
nop
jno
inc
push
iret
mov
inc
inc
in
jno
iret
sbb
mov
lods
dec
inc
push
add
in
sub
roll
rcll
outsl
mov
push
mov
push
mov
inc
movsl
push
call
das
insl
imul
sub
repnz
adc
lds
fs
xor
push
popa
inc
or
cmp
in
sbb
sti
push
mov
cli
sbb
mov
or
inc
shlb
push
nop
popa
lcall
in
in
rcll
jnp
xchg
mov
or
sub
call
nop
mov
pop
xorl
push
insl
and
and
push
sbb
mov
call
sahf
call
dec
out
pop
push
leave
pop
push
or
cld
int3
loop
add
sbb
test
lock
adc
ljmp
mov
mov
mov
filds
mov
stos
hlt
pop
pop
mov
inc
lock
rclb
jb
jg
mov
add
push
add
and
or
mov
mov
xor
stc
xchg
mov
xchg
pop
subb
popa
ret
xor
shrl
dec
cmp
test
loope
test
push
mov
xchg
push
stos
dec
sbb
mov
rcrl
jle
scas
xchg
mov
lds
adc
or
ljmp
inc
push
push
jae
push
int3
inc
xchg
and
push
adc
fs
ja
lds
jg
jmp
cltd
add
stos
sbbl
dec
in
sbb
pop
push
mov
movsb
xor
pop
lret
pop
int
dec
sahf
push
add
leave
enter
inc
adc
dec
js,pn
and
jbe
sbb
leave
push
mov
dec
std
mov
lods
mov
decl
pop
and
fmuls
sbb
incl
fsubrp
sbb
daa
lock
data16
out
icebp
lea
int3
push
ljmp
out
inc
pop
sub
das
push
jne
iret
lds
xor
sbb
fisttps
stc
push
ret
pop
call
add
pusha
andb
inc
inc
mov
fld
dec
sbb
add
cld
push
movsl
lods
mov
jae
arpl
jg
fwait
mov
clc
inc
inc
scas
adc
subl
inc
test
xchg
call
cmp
adc
jb
cmp
push
fadd
jae
sbb
pop
ss
fcomip
negb
shll
out
aad
cld
xchg
pushf
sbb
jmp
decl
je
xchg
ljmp
inc
jae
xor
cmpsl
or
fmulp
test
outsl
mov
outsl
lods
lods
xchg
pop
pop
or
gs
sbb
mov
fcomip
je
daa
push
push
dec
daa
pop
sub
or
mov
sarb
sub
in
jmp
incl
dec
or
call
pop
cmp
lods
jmp
sub
mov
clc
mov
mov
pop
mov
push
sub
fdivl
push
or
int
loope
adc
das
cli
or
cli
sbb
mov
mov
jne
pop
outsl
clc
decl
and
cs
pop
scas
aas
cmp
dec
push
xchg
inc
aad
sar
das
cli
test
add
out
out
mov
add
sbb
das
sub
mov
call
call
jmp
lods
add
fs
orb
popa
push
xor
xchg
or
ds
xor
push
cli
jmp
rol
add
adc
add
jg
inc
int3
adc
xor
ss
add
mov
or
cmp
scas
cmp
je
jg
repz
push
test
imul
test
nop
rcrl
jns
xlat
lcall
xor
lods
pop
jl
xor
in
movsl
fistpl
lahf
adc
cmp
pop
cmc
call
out
add
mov
mov
pop
xor
sbb
dec
jmp
ret
fidivl
in
pop
call
push
inc
test
push
push
sub
dec
imul
or
and
ljmp
xor
mov
dec
jg
pop
aas
mov
popf
into
pop
fwait
and
mov
lea
pushf
int
jno
jl
fcomip
jg
pop
fldenv
add
nop
icebp
repz
jle
dec
stos
jle
jp
aam
out
xor
cwtl
fs
call
cmpsb
push
fldcw
int3
push
ret
inc
pushl
xchg
or
out
jp
shll
mov
stos
xchg
inc
push
incl
cwtl
mov
xchg
out
mov
negb
out
xor
pop
icebp
fimull
push
mov
mov
cmp
cwtl
cmp
mov
sub
jmp
cmpsl
cld
rclb
sbb
mov
rolb
cmp
nop
mov
mov
adcb
add
cwtl
push
inc
test
lods
mov
arpl
pushl
fnsave
cmpl
xor
inc
inc
push
inc
js
orb
addl
dec
cmp
fbstp
pop
insb
inc
mov
jbe
aad
xchg
sbb
cld
push
sbb
imul
incl
insb
jb
aaa
das
jnp
repnz
xchg
imul
in
call
pop
int3
sti
subl
inc
adc
ret
cmpsl
mov
sub
int
add
push
jg
cmc
call
shlb
push
push
push
sbb
cmp
outsl
movsl
aas
adc
ljmp
inc
jno
xchg
sub
pop
dec
shll
add
push
insb
cmc
test
mov
inc
cmp
inc
and
sahf
or
sarb
jnp
inc
test
xchg
and
and
dec
lods
sub
cmp
adc
jo
or
xchg
and
sbb
dec
test
mov
repnz
add
cmp
push
jmp
push
inc
or
aam
rol
dec
push
outsb
inc
out
mov
sbb
sub
lret
add
pop
icebp
and
in
ret
pop
dec
mov
gs
mov
stos
in
push
sbb
mov
inc
fldt
inc
inc
rol
inc
test
mov
incl
iret
adcl
addl
cmp
pop
jb
lret
push
cs
das
clc
sub
lahf
enter
out
loopne
dec
cmp
lsl
fdivr
add
push
adc
js
repz
lcall
pop
std
mov
push
lcall
orl
sahf
std
or
pushl
push
mov
dec
sbb
filds
xor
js
xchg
sbb
imul
inc
push
sbb
push
xchg
out
or
mov
addb
pop
push
inc
sub
mov
je
imul
fcomi
roll
ret
cmp
cmpsb
nop
ljmp
out
lret
mov
sub
cmpb
jmp
lcall
xchg
jmp
rorl
sbb
mov
lret
roll
jp
pusha
clc
dec
sub
sbb
insb
sbb
mov
xor
decl
andb
sub
inc
xchg
cmp
and
adc
stc
in
jae
cmp
lods
push
dec
adc
sub
loopne
sub
shll
out
adc
cmp
mov
adc
test
into
cmp
pop
call
sarl
cmp
hlt
mov
or
mov
and
sbb
stos
jmp
inc
pop
imul
loop
test
mov
loop
jmp
cltd
movsb
or
test
pop
jecxz
inc
mov
xor
decl
gs
sub
mov
fimull
and
xchg
cld
shll
adc
pushl
pop
subb
cwtl
pop
lea
mov
sub
js
xor
or
push
inc
test
hlt
fistpl
mov
jge
test
lret
sub
jmp
jg
add
stos
inc
jl
or
cmpsl
out
push
mov
mov
mov
fs
jmp
rclb
push
add
arpl
mov
nop
scas
insl
cmpsb
test
rorb
and
mov
mov
in
dec
stos
dec
scas
mov
fucomi
cmp
mov
lcall
jg
sar
cmp
mov
jg
mov
mov
hlt
decl
mov
insb
cli
or
rol
call
mov
inc
ret
repz
popa
sbb
or
or
in
ret
push
call
incl
jae
ljmp
sub
push
mov
pop
mov
out
fidivrs
cmp
add
mov
aad
jmp
mov
sub
in
cmp
xor
xchg
pop
adc
int3
cmp
lcall
int
xor
sbb
xchg
sti
in
add
adc
ds
dec
icebp
iret
adc
int
sub
lods
cmpsl
cli
inc
xor
push
push
mov
jne
cli
mov
cld
ljmp
lock
insl
lock
lds
and
push
lods
jg
lcall
cmpl
addl
jl
add
call
ret
sub
mov
adc
cli
cmp
and
lods
outsb
test
or
and
jae
lds
push
adc
mov
dec
or
or
adc
incl
push
fxch
dec
fcoms
sbb
or
enter
xor
push
sbb
cli
jg
sbbb
pop
icebp
imul
pushf
add
jg
ljmp
adcb
xchg
cmp
lcall
cmp
jbe
lret
cmc
jmp
or
inc
push
xchg
test
pusha
add
incl
int3
out
xor
nop
pop
or
daa
popa
pop
cmp
xor
mov
sub
jmp
incl
jno
js
out
cmpsb
cmp
mov
inc
add
add
gs
pop
call
decl
and
loope
pop
test
rol
mov
sbb
cmpsl
mov
push
dec
inc
push
pop
adcb
pop
xor
sbb
and
pop
cmp
or
xchg
dec
bound
mov
jmp
push
mov
cmp
incl
addb
inc
push
movsl
adc
mov
or
add
mov
roll
inc
movl
mov
sar
ja
call
push
shll
sub
pop
mov
mov
stos
push
popa
movsl
incl
notb
pop
dec
lock
xor
sbb
rcll
pushf
subb
and
clc
jmp
pop
andl
dec
test
fdivs
lods
cmp
dec
or
cli
outsl
clc
mov
and
jns
in
jne
jle
les
xor
mov
imul
or
pop
jecxz
outsl
clc
mov
dec
inc
mov
mov
mov
loope
insb
cld
jl
cs
cmp
movsb
ret
into
inc
mov
mov
adc
ror
dec
xchg
incl
add
or
sbb
xor
jecxz
adc
jae
iret
aam
dec
xor
notb
andl
gs
insb
outsb
mov
and
push
add
mov
hlt
in
imul
popa
int
dec
sbb
and
sbb
test
push
add
cmp
enter
push
mov
decl
xor
sub
enter
rolb
leave
int3
pushf
orl
dec
loopne
and
lea
sbb
les
adc
xor
jg
push
je
hlt
push
mov
cmp
movsl
fistpll
test
sbb
cmp
ljmp
test
hlt
cwtl
sub
xor
repnz
cmp
sub
mov
mov
cmp
xchg
push
cmc
mov
repz
mov
mov
and
das
push
inc
data16
or
xor
call
inc
jge
adc
std
pop
and
test
ret
or
sbb
cmp
ljmp
dec
or
jne
push
sbb
sbb
loope
sub
dec
mov
sbb
push
and
dec
ret
add
sub
or
mov
and
and
dec
xchg
and
je
shll
movsl
js
popa
add
scas
fwait
mov
decl
fwait
or
and
inc
push
loop
out
sub
js
push
cmpsb
sub
loop
mov
and
in
add
dec
ret
call
fs
in
add
pop
mov
lret
shlb
and
rcll
jo
in
cli
jg
jmp
mov
ljmp
mov
lods
fcmove
ss
out
push
push
lret
test
jno
and
cli
or
xchg
pop
or
fnstsw
adc
push
arpl
fcmovnb
mov
push
sub
rolb
jmp
mov
push
frstor
lcall
jmp
loopne
xor
add
repz
and
hlt
cmpsb
test
xchg
sar
incl
add
mov
ffreep
sbb
ret
sbb
push
push
mov
xor
pop
xchg
pop
insb
xor
call
in
sbb
cmpsl
lock
sbb
fsubrl
cmpl
addr16
jp
fyl2xp1
mov
inc
cmp
xchg
push
jge
scas
mov
xor
dec
out
scas
ljmp
xor
adc
or
test
fdivrl
or
push
inc
push
fwait
jmp
aaa
aad
dec
shrl
popf
das
iret
cwtl
iret
lret
jp
out
aas
add
test
pop
add
push
add
push
addl
jg
and
lret
insb
adc
shlb
sub
and
pop
pop
and
psrlq
jmp
stos
frndint
mov
nop
sbb
sar
bound
mov
insb
mov
inc
ret
pushl
fisubl
imul
scas
or
xchg
cmp
push
mov
mov
out
cbtw
pushl
std
mov
scas
addr16
add
jp
or
out
sbb
insl
cld
incl
mov
dec
in
dec
data16
ret
inc
mov
in
ljmp
mov
mov
sbb
aam
cmp
xchg
incl
loopne
dec
out
inc
sub
add
inc
mov
sub
xchg
outsb
insl
bound
mov
or
push
xchg
ffreep
jmp
js
pop
pushf
mov
mov
pop
mov
and
and
lods
ret
js
cmp
jmp
sar
pushl
scas
cs
sub
mov
cmp
jl
lds
scas
pop
in
push
or
jle
mov
in
in
xor
call
out
or
stos
push
xor
nop
and
inc
test
out
pop
adc
push
xchg
fbld
mov
fisttpl
and
push
in
pop
shr
cmc
in
sub
in
into
xchg
or
xchg
ljmp
loop
out
mov
mov
and
lcall
push
fs
add
or
idiv
ljmp
add
call
cmp
insb
add
inc
or
push
add
add
ljmp
push
lea
xchg
ret
inc
enter
sub
rorl
mov
lret
lcall
jl
incl
and
inc
dec
ficompl
xor
xor
ljmp
mov
pop
push
mov
dec
inc
or
add
pop
int3
dec
test
adc
std
push
out
test
dec
dec
je
and
loope
dec
and
outsl
clc
pushl
loopne
sub
and
mov
scas
cmp
inc
aas
xchg
mov
pushl
jecxz
or
mov
ds
pushl
outsb
loop
push
inc
lcall
add
cs
push
ljmp
rorb
fiaddl
out
mov
out
or
ret
orl
ljmp
mov
ljmp
or
shrb
fnsave
in
ljmp
xchg
lods
enter
in
mov
icebp
push
push
inc
pusha
sub
les
popa
sbb
push
adc
fbld
fisubl
repnz
xchg
mov
mov
mov
ljmp
push
ficomps
mov
ficoml
sbb
hlt
lods
or
loopne
incl
inc
or
loop
jle
and
xchg
mov
xlat
xchg
pushl
and
or
es
jp
or
and
pusha
mov
dec
mov
sbb
into
inc
mov
lock
test
das
testl
clc
imul
lods
mov
xor
and
push
xchg
iret
pop
push
lock
scas
in
incl
jecxz
and
sbb
dec
mov
adc
jmp
call
ret
pushf
xor
add
scas
roll
sub
inc
push
mov
cmp
push
loopne
push
push
cld
cmpsb
and
shlb
lcall
cmp
and
sbb
mov
inc
cmp
and
push
and
into
push
loop
add
pusha
add
pushl
sbb
inc
or
lcall
lea
movl
pop
lds
add
hlt
fwait
shlb
cmp
scas
sub
sbb
lcall
push
lret
inc
sbb
xchg
mov
sub
pop
notb
sbb
dec
loopne
jp
xchg
push
adc
dec
adc
cli
sbb
loop
adc
adc
mov
add
dec
lret
add
dec
arpl
incl
add
push
sbb
sub
pop
inc
xchg
scas
pop
int
jp
push
rclb
xor
mov
icebp
or
mov
call
orl
iret
lods
pop
xchg
and
inc
inc
jmp
or
insl
cmc
fisubrl
clc
push
cmp
sar
psubw
arpl
mov
pushl
mov
loop
jo
sbb
cmp
imul
inc
ss
dec
cmp
jae
in
sti
gs
cmpsb
push
out
sub
testb
into
xor
adc
repz
inc
cmp
incl
mov
sbb
push
xchg
test
cmp
out
cwtl
mov
out
cmpb
lcall
inc
notb
outsb
nop
mov
dec
dec
inc
cltd
push
jbe
and
pushl
into
dec
inc
out
add
test
shrb
leave
fwait
outsb
test
xchg
jo
jle
and
and
ljmp
mov
mov
push
cmp
std
mov
jmp
jo
je
in
fs
mov
dec
mov
adc
sub
out
lock
sub
push
adc
jp
hlt
andl
fs
mov
xchg
mov
mov
add
shlb
loopne
fdivr
jg
jno
sbb
fsubp
push
xchg
add
adc
mov
adc
jmp
push
mov
test
mov
and
xor
ljmp
shlb
orl
int
push
mov
mov
shll
xchg
push
imul
and
xchg
inc
incl
mov
push
dec
pop
mov
jns
mov
mov
nop
pusha
or
xor
sar
jg
scas
mov
lods
cmc
mov
lods
cmp
mov
xchg
aas
and
inc
in
movsl
push
addr16
outsl
dec
scas
rorl
push
sbb
das
cli
incl
ret
mov
js
jo
inc
inc
ret
imul
add
jno
inc
std
push
and
loopne
jno
call
add
pusha
jle
adc
jecxz
and
xchg
dec
bound
in
cli
les
mov
mov
add
cmp
sub
pop
xchg
inc
mov
call
loopne
jp
xchg
cmp
out
popf
jl
arpl
xchg
push
ds
cli
add
clc
pop
mov
and
adc
dec
dec
push
outsl
movsb
hlt
outsl
fidivrs
sarb
and
or
cmpsl
push
cli
decl
sub
movsl
imul
mov
inc
push
push
incl
and
icebp
imul
xchg
inc
dec
mov
scas
test
outsb
jmp
mov
ret
adc
or
cwtl
aad
cmp
push
xor
sub
fdiv
jbe
inc
repz
int
sub
std
pushl
mov
push
ss
sbb
mov
inc
lea
mov
dec
xor
and
jbe
cmp
mov
jo
push
aad
mov
lods
data16
xchg
xchg
mov
call
orb
sub
pop
cwtl
ret
xor
rorl
movsl
mov
jns
clc
dec
push
dec
lcall
adc
call
incl
add
lahf
arpl
cwtl
xchg
inc
sbb
mov
pushf
xchg
mov
pop
or
outsl
xor
jb
addr16
push
mov
incl
sub
xor
push
or
popf
aad
loopne
movsl
js
mov
inc
adc
jg
mov
shrb
cs
or
popf
inc
andb
sub
call
jp
leave
jbe
out
mov
cmp
jmp
mov
push
decl
and
test
xchg
inc
dec
sub
jb
add
mov
fnsave
icebp
je
jp
rclb
bound
push
adc
ljmp
xor
dec
movlps
cmp
mov
decl
loop
enter
outsb
sbb
pop
xchg
sub
mov
or
into
jno
xor
add
out
fnstcw
xor
dec
inc
pop
fcomps
daa
mov
arpl
push
cmpsb
ja
adc
jnp
mov
flds
xchg
aam
xlat
lret
push
xor
and
aaa
shr
jns
insb
xor
sar
push
mov
xchg
mov
push
divl
cmp
xor
jns
inc
out
sbbb
ljmp
push
sti
cmpsb
mov
shlb
idivl
xchg
mov
and
mov
mov
push
pop
lcall
lock
pusha
ljmp
push
pushf
sub
insl
inc
loop
mov
sbb
push
jl
adc
cli
mov
jno
rclb
ss
cmc
mov
push
mov
lret
jg
fdivr
fdivrl
mov
movl
mov
push
push
mov
das
xchg
mov
sahf
push
jmp
imul
sub
fisubs
add
mov
decl
mov
addr16
pop
dec
push
sbb
xchg
ret
jno
push
fs
fistpll
xchg
ret
or
dec
jnp
xchg
mov
cmp
xor
and
adc
outsb
jae
cmp
aaa
jge
adc
aam
mov
sbb
lcall
pop
cwtl
ljmp
or
lods
add
dec
lods
xor
and
dec
mov
dec
mov
xchg
andl
rsqrtps
sbb
ljmp
xor
nop
xchg
ret
push
jo
adc
pushf
xor
mov
jl
bound
pop
or
mov
ret
and
es
cmpsb
and
in
sub
mov
decl
int
adc
fistl
push
mov
dec
cmp
imul
pop
pop
insl
mov
fwait
inc
dec
mov
lock
jge
add
mov
mov
cmpl
cmp
imul
out
cli
jl
push
xchg
rcrb
jne
hlt
sub
es
std
popa
and
test
pop
push
add
and
decb
out
and
inc
or
fistpl
cmpsl
or
mov
dec
push
push
ss
js
jmp
arpl
fsubrp
or
scas
and
push
rcl
mov
jmp
adc
push
clc
mov
ds
lret
xor
or
mov
cmp
arpl
lahf
test
leave
dec
out
fisttps
mov
test
mov
out
mov
xchg
sbb
xchg
sbb
sub
lcall
adc
insb
xchg
outsb
jecxz
mov
test
adc
cmpsb
andb
ret
adc
fsubrs
sbb
mov
shlb
cmp
clc
std
imul
bound
and
test
cmp
int
out
dec
in
lret
jns
mov
or
out
cmp
cmp
into
push
out
js
into
fwait
hlt
ljmp
xor
pop
ret
xor
fisttps
push
in
sbb
mov
mov
sub
xchg
imull
xor
pop
adc
fisubs
call
sti
cmp
mov
pusha
xchg
add
push
xchg
mov
popf
out
mov
add
xor
xchg
push
and
sarb
rclb
inc
pusha
pop
scas
push
mov
push
fadd
testb
sbb
outsb
out
lcall
push
je
mov
mov
call
decl
sbb
mov
jns
dec
loopne
mov
push
ret
dec
or
jg
or
jge
mov
int3
and
pop
dec
mov
add
fstpt
sub
call
add
add
dec
push
and
loopne
xorb
je
xchg
call
mov
jp
mov
add
shll
or
cmp
inc
sbb
sub
sbb
mov
movsb
xchg
faddl
cmc
int
jbe
push
lock
pop
add
dec
insl
pop
mov
jmp
ret
push
mov
lods
jp
stos
aas
cmp
clc
jg
jne,pt
movsb
sub
scas
pop
mov
or
mov
xchg
mov
incl
mov
insl
call
push
adc
xor
aam
push
lea
adc
sbb
dec
sbb
pop
addb
mov
lahf
clc
and
push
loop
pushl
pop
dec
or
aad
push
movsl
push
xchg
push
mov
mov
or
test
cmp
fnsave
and
repnz
jecxz
into
pop
movsl
add
adc
inc
xchg
lods
inc
je
lods
pop
pop
mov
or
mov
cmp
mov
lods
pop
scas
out
sti
inc
cs
outsl
add
xchg
jg
out
push
dec
sbb
clc
add
add
or
xor
add
adc
popa
loope
outsl
ljmp
adc
jae
aas
and
push
pop
repnz
add
jmp
test
fdivr
add
push
test
ret
lock
clc
adc
push
loop
inc
and
int3
xchg
ret
addl
cmp
mov
hlt
pop
xchg
jle
in
add
gs
jle
in
sbb
es
aam
add
jo
jns
lea
dec
add
pushl
push
push
in
fwait
aas
push
inc
push
and
cld
inc
push
test
adcb
adc
aam
aaa
addr16
and
xchg
push
sbb
or
pushl
inc
and
xor
movsl
cwtl
jle
jmp
sub
jns
jo
les
and
mov
sbb
enter
inc
or
rclb
fsts
js
xchg
dec
push
js
xchg
dec
xor
xchg
sbb
lods
je
dec
sub
stos
jb
inc
inc
dec
f2xm1
incl
stos
popa
or
adc
push
jp
dec
push
shll
add
sbb
push
cs
jg
adc
push
xchg
push
cltd
aad
insb
xchg
hlt
mov
dec
add
jno
in
sbbb
andb
inc
sbb
in
push
add
mov
scas
add
lods
mov
cwtl
arpl
ljmp
adc
inc
xchg
rcrb
xchg
data16
les
sbb
jge
pop
push
or
rcrl
movsb
jmp
inc
add
inc
ret
fisttpl
dec
mov
sbb
scas
lret
pop
decl
inc
mov
popf
pop
fnsave
outsl
int
dec
frstor
mov
lods
inc
incl
mov
aad
icebp
xchg
in
pop
cli
jg
loopne
or
out
ja
cmp
loopne
push
adc
movsb
loop
lcall
push
jg
inc
cld
loop
sbb
popa
test
mov
xchg
jecxz
jg
in
lea
in
mov
ss
or
mov
fs
call
xor
enter
stc
cmc
pop
out
pop
pop
inc
fwait
icebp
mov
dec
xchg
lcall
mov
mov
cltd
cmp
insb
push
decl
adc
cs
mov
call
mov
add
les
jmp
xchg
test
mov
in
jne
jb
fcompl
jg
dec
mov
loopne
xchg
cmp
roll
and
pushl
sub
icebp
push
shlb
sbb
push
and
pop
dec
gs
mov
mov
lcall
adc
lret
mov
sub
popa
xchg
shrb
stos
sub
xchg
xchg
jns
lcall
sbb
out
aad
mov
or
fs
movsl
jmp
pusha
cwtl
push
xor
or
jmp
pop
mov
inc
push
xor
jno
sbb
lcall
push
mov
pop
insb
mov
pusha
push
outsb
js
fwait
cmp
aaa
cmp
push
add
xor
mov
in
lcall
sub
jo
or
cli
leave
cmp
xor
jbe
clc
mov
xchg
aam
lcall
adc
pushf
in
aad
inc
leave
adc
fwait
les
xor
aaa
jg
add
add
sub
or
movsl
fistpll
mov
daa
sbb
test
test
sub
pop
dec
adc
add
inc
mov
and
and
mov
inc
js
or
mov
out
pop
add
fcmovb
or
and
mov
cmp
ja
popa
cld
inc
or
jmp
jb
addb
out
and
adc
add
xor
mov
mov
mov
shrb
inc
es
out
add
dec
xchg
dec
cmpsb
cmp
fadds
add
nop
mov
gs
jg
inc
sub
mov
cmp
mov
cli
push
pop
jp
je
xchg
mov
mov
call
push
enter
pushl
xchg
enter
mov
sub
js
mov
mov
ret
cli
inc
xor
and
inc
pusha
mov
jae
cltd
and
pop
incl
adc
sub
xchg
jne
adc
arpl
lds
fdivl
xor
mov
sub
lcall
pop
mov
add
cltd
add
lods
push
sahf
xchg
lret
ret
add
push
fs
mov
mov
xor
addl
shrb
rorb
shlb
loope
sub
mov
xorl
fcmovnu
ljmp
push
adc
push
mov
sub
sahf
scas
dec
out
jp
jl
sub
call
cld
incl
daa
nop
jne
cmp
xor
push
popa
pusha
fiadds
lds
and
lcall
sub
adc
push
and
roll
sbb
pusha
pop
sub
jecxz
inc
rolb
filds
adcb
add
addl
subl
add
xor
add
decl
pop
daa
and
imul
sub
mov
icebp
stos
call
cmp
lds
cs
xor
push
xchg
adc
xchg
inc
cmp
lcall
cli
jecxz
mov
shlb
cltd
in
xchg
adc
dec
xchg
or
incl
cmc
ja
add
xor
pop
or
scas
movsl
scas
shlw
lcall
mov
or
sbb
pop
xchg
jne
or
mov
pushl
cmpsb
xor
rorb
adc
cwtl
loope
lret
add
pop
adc
lcall
add
outsl
push
pop
loop
xor
jnp
xchg
or
sub
fisttpl
adc
mov
bound
xor
jmp
mov
hlt
incl
jae
das
fdivs
and
cmp
ss
pusha
lcall
jg
call
in
aas
adc
inc
push
jmp
and
cmpsb
pushl
dec
jbe
mov
jnp
leave
insl
pushf
dec
add
mov
lret
xchg
cmp
int3
jne
stc
aad
mov
stos
and
repz
pop
popa
add
bound
mov
lcall
fcoml
popf
push
sbb
jo
and
jb
imul
decl
sbb
or
into
xchg
sbb
rolb
push
inc
adc
mov
in
loopne
daa
xor
xor
mov
push
jns
insb
cltd
lahf
pop
push
fnstsw
push
in
je
mov
mov
ljmp
stos
sbb
enter
ret
mov
mov
int
aaa
cmpb
sub
outsl
pusha
mov
lahf
sub
sbb
popa
add
decl
push
mov
pop
inc
nop
ja
xor
inc
adc
and
and
ljmp
jg
popa
pop
push
mov
rcrl
lret
xorl
out
pushl
xchg
enter
lods
lret
stos
shll
cltd
les
loopne
mov
adc
pushl
mov
cli
push
fidivs
inc
xchg
into
lods
mov
jns
test
test
mov
call
or
push
xchg
mov
incl
push
inc
fstp
inc
fxch
push
and
ficompl
inc
jnp
cmp
ret
outsl
clc
call
aaa
cmp
es
in
xchg
sti
jmp
push
leave
jl
lahf
incl
fmul
aas
repnz
enter
ret
inc
rcrl
popf
xchg
push
arpl
pop
pop
jo
sub
add
or
add
push
and
xor
adc
ljmp
mov
adc
add
sub
ljmp
int3
mov
hlt
je
xchg
mov
inc
adc
xor
cli
jg
outsb
add
push
rolb
nop
cmp
pop
ss
decb
add
mov
cmp
and
pushl
bound
push
add
rorb
inc
mov
pop
add
dec
out
push
lock
call
pop
jae
push
outsb
cmpb
xor
and
fs
xor
push
or
pushf
ds
repz
xchg
adc
push
xor
mov
xchg
adcl
push
call
push
push
loope
leave
mov
xor
sbb
adc
sub
add
js
lcall
jno
movl
inc
mov
adc
xchg
out
jae
pushl
ljmp
leave
rcrb
in
cmp
sbb
inc
js
push
mov
sbb
call
push
hlt
rolb
push
insl
jno
dec
xchg
pop
cmpsb
ss
push
push
popa
push
jl
push
push
decl
movsl
dec
lcall
inc
inc
insb
aam
add
inc
xor
cli
sbb
pop
lret
fisttps
jecxz
js
xchg
popa
jle
inc
pop
cmp
jg
daa
adc
pop
call
lcall
shl
ss
inc
add
dec
outsl
clc
jg
mov
outsl
cli
mov
jbe
lcall
test
push
push
adc
pop
pop
repnz
cmp
add
loop
sbb
xchg
lock
out
cli
and
dec
sbb
mov
pop
inc
sub
or
sub
rolb
dec
mov
pop
or
das
sar
lock
push
aaa
loop
xor
das
pop
test
inc
and
push
fisttps
cli
je
lret
ret
shll
aaa
cmp
mov
addr16
pop
clc
incl
icebp
push
xchg
je
loope
sbb
lcall
jnp
es
cmp
xor
push
pop
call
dec
pop
adc
decl
sbb
flds
call
sar
jbe
adc
add
pop
cld
jns
testb
rcll
sub
adc
jns
xor
or
push
or
ret
incl
js
rcll
cld
xlat
sub
xchg
xchg
cmp
jmp
mov
add
add
mov
inc
sub
sbb
jg
cmp
xor
pop
adcl
push
inc
or
sub
rorl
cmp
sbb
test
jl
add
dec
adc
negb
movsl
pop
into
or
call
call
push
incb
adc
add
cmpsl
inc
ss
testl
push
cld
and
jne
ja
mov
pop
lahf
bound
xor
inc
data16
push
das
cli
pop
std
sub
pop
sbbb
mov
lds
mov
and
pushf
lock
mov
repz
add
inc
pop
dec
pusha
or
mov
push
js
cmp
leave
adc
adc
pop
or
or
test
add
jno
cmp
dec
lock
daa
test
mov
and
jo
je
add
arpl
mov
es
call
dec
push
inc
jne
xor
test
jecxz
xchg
push
shll
push
pop
fcmovnb
sbb
add
xchg
mov
push
out
mov
pop
cmpsb
xor
adc
adc
xchg
outsb
inc
outsb
es
call
adc
inc
xchg
icebp
fwait
jge
mov
inc
xor
movsb
cmp
dec
mov
adc
sbb
stc
adc
adc
mov
push
push
mov
adc
mov
cmp
es
lods
leave
xor
outsb
jno
jb
stos
movsb
roll
jo
shrb
rorl
and
lret
insb
add
js
adcb
cli
mov
push
add
pushf
daa
xor
out
rcrl
pop
push
jp
sbb
mov
gs
ss
adc
fisubs
jmp
jg
rcr
cmc
push
mov
sahf
mov
xor
mov
nop
les
or
fcoms
push
lock
cli
push
cli
mov
or
or
dec
push
pop
and
mov
mov
movsb
loopne
faddl
dec
loopne
stos
sbb
add
cmpsb
mov
loop
or
dec
movsb
pusha
daa
std
ja
call
push
mulb
mov
push
pop
or
ss
add
or
dec
pop
fisubrs
pop
cmp
in
sbb
or
es
notl
jbe
inc
ljmp
push
fs
call
cmp
add
pop
outsl
shr
sub
and
dec
mov
push
mov
in
insl
mov
inc
push
mov
sbb
test
xor
mov
adc
lcall
cmpsl
mov
xchg
pop
push
inc
out
ljmp
pushl
sub
aam
jb
sub
imul
dec
cltd
test
insb
in
fwait
lcall
mov
sub
imul
out
scas
inc
sbb
ljmp
es
stos
repz
and
nop
cmpsb
jbe
sub
ja
add
loop
pop
sub
jg
push
imul
js
inc
push
repnz
xor
and
ljmp
ss
lods
inc
cli
mov
mov
outsl
divb
dec
mov
jns
mov
cltd
ja
or
pushl
sbb
imul
mov
in
out
xchg
or
mov
inc
jb
add
push
sbb
dec
cld
push
cmp
lcall
pop
mov
and
rclb
test
mov
mov
fiaddl
pop
add
mov
popa
and
mov
data16
repnz
push
inc
jg
addb
loopne
inc
jns
push
test
xor
inc
es
lcall
inc
dec
inc
mov
loop
mov
sub
negl
mov
jmp
add
mov
movsb
js
sub
sub
inc
lods
lret
push
pop
dec
push
repnz
cmpl
cmp
imull
and
js
test
xchg
fcompl
or
lds
mov
out
jg
aas
in
mov
daa
adc
push
mov
add
scas
xor
ljmp
or
dec
and
mov
es
movsl
sbb
push
jp
mov
popf
aam
popf
out
incl
in
outsb
out
jl
xor
cltd
insb
test
cmp
int3
jl
into
ss
jmp
stos
outsb
jae
fcoml
and
cld
js
push
and
or
sub
data16
incl
push
testb
and
add
inc
cmp
fs
jecxz
lock
out
mov
dec
xor
insb
ss
sub
pop
dec
and
and
mov
mov
mov
test
icebp
mov
orb
adcb
dec
movsb
movsb
add
lret
mov
fildll
xchg
inc
inc
push
add
mov
dec
pop
je
movsl
mov
ljmp
mov
mov
sub
adc
lods
mov
sub
pop
sbb
les
inc
jp
incl
push
pusha
mov
jne
insb
rolb
cmpb
and
out
jle
xchg
adc
call
pushf
aad
popa
ja
arpl
mov
dec
sbb
push
fstl
or
aam
inc
outsl
and
shll
stos
push
sar
jg
xor
int3
repz
adc
sub
ljmp
xchg
mov
movsb
push
cld
xchg
cmp
popa
movsl
xor
out
insb
jl
lcall
sbb
sbb
push
push
nop
loope
mov
ss
push
popf
or
fnstcw
jae
push
pop
jg
loope
mov
sbb
mov
decl
aad
and
jp
mov
cmpsb
adc
fstpt
mov
fsubrs
mov
arpl
out
add
mov
mov
lock
cs
mov
add
or
sub
jbe
fisttpl
lcall
into
sub
sbb
cli
fisubrs
sbb
mov
dec
and
mov
out
or
adc
pushl
ret
call
push
inc
mov
fs
fcomip
bound
dec
mov
mov
sub
sbb
jg
add
sub
inc
sbbb
test
push
gs
lock
les
mov
hlt
lds
ja
std
decl
imul
mov
adc
mov
jecxz
lea
adc
mov
jmp
mov
xor
xor
enter
push
xlat
stos
add
pushl
add
xchg
insb
xor
xorl
sbb
cltd
adc
jl
sar
pop
loopne
xor
push
dec
out
cs
sub
lods
mov
lods
pusha
cmp
out
pop
pushf
xchg
in
stos
xlat
mov
mov
outsl
dec
sti
shl
lret
lods
cwtl
mov
call
incl
push
call
cmpsb
jp
jecxz
int3
int3
push
pop
jmp
hlt
jmp
cmp
dec
mov
add
lock
or
push
or
inc
pop
adc
add
mov
jbe
incl
and
jo
push
pop
xchg
and
mov
dec
stc
fs
dec
pusha
fsubp
pop
fdivrp
adc
adc
xor
cmp
inc
cmp
int3
call
daa
jbe
dec
js
push
push
cmp
and
lea
pop
repnz
lcall
lock
pusha
xchg
cmpsl
cs
jbe
adc
jle
sub
incl
sbb
ss
dec
les
dec
lds
sar
push
xchg
mov
fndisi(8087
and
call
fucom
sahf
int
mov
push
lcall
jnp
dec
ja
sub
jno
jle
incl
or
inc
jbe
cmp
fnstsw
inc
adc
jge
xor
push
out
xor
mov
fisttps
sbb
mov
iret
xor
dec
mov
mov
ja
mov
push
xchg
insl
mov
sbb
gs
cmp
jno
pop
call
pop
ret
pop
jecxz
cli
enter
jns
sub
xchg
mov
xor
int3
stos
jmp
inc
pop
adc
decl
mov
xchg
add
mov
xchg
fildl
incl
adc
cmpsl
sbb
testl
inc
jmp
repnz
and
rolb
jmp
adc
mov
shlb
and
pusha
sbb
and
pushl
inc
ficoms
and
mov
ss
das
out
push
orb
fists
movsb
adc
decl
dec
imul
jae
xorb
clc
mov
inc
jl
dec
mov
pop
loopne
addb
out
dec
sbb
loope
sub
lock
icebp
std
outsb
aam
cmp
xchg
push
cmp
mov
lock
mov
pusha
inc
add
sbb
cmpb
mov
dec
daa
hlt
push
outsb
fmuls
ljmp
into
adc
xchg
lea
pop
sbb
sub
push
push
cmp
xor
mov
rolb
xchg
out
mov
xchg
sub
hlt
jne
and
or
mov
outsb
cmp
fistpl
inc
mov
out
xchg
incl
lods
xor
xchg
ljmp
add
aam
aam
push
lods
dec
std
mov
clc
pop
mov
out
mov
imul
imul
je
cwtl
mov
cmp
cmc
lock
fdiv
stos
jle
adc
out
arpl
and
sub
pop
mov
ljmp
shr
fnstenv
test
sbb
imul
jmp
scas
push
jnp
fdivrs
adc
sarb
ret
enter
sbb
cmp
xchg
daa
ljmp
cmp
xchg
jmp
stos
cmp
mov
in
adc
lcall
mov
cli
jnp
loop
xorb
mov
loopne
call
add
into
cmp
sti
fidivs
mov
decl
add
pop
lock
cmp
int3
sarb
ret
or
mov
adc
rol
fimuls
lods
aaa
mov
mov
loope
sbb
mov
jl
lcall
pop
fimuls
sbb
into
hlt
nop
lea
and
push
push
leave
les
jmp
inc
lret
imul
fcomps
scas
mov
shl
sub
xor
stos
imul
push
pushl
cs
mov
and
cwtl
cmpsb
movsb
jae
sub
mov
aam
push
das
or
mov
movsb
test
scas
js
xchg
lock
or
sbb
push
dec
mov
insb
std
ljmp
lds
mov
mov
cld
xorb
aaa
popa
cld
and
mov
enter
sbbl
loope
call
add
push
pusha
jg
leave
lea
or
add
cmp
jae
loopne
lods
push
dec
es
decl
lcall
add
pushl
mov
and
cmpsl
insl
popf
int
sub
xor
sar
dec
mov
mov
les
imul
je
xchg
pop
sbb
adc
call
rolb
testb
inc
add
xlat
pop
mov
xor
or
and
decl
sarb
inc
mov
pop
add
xor
mov
mov
lahf
sub
cwtl
loop
call
push
fsubs
call
sbb
adc
mov
cmp
les
jp
repz
inc
add
inc
outsl
push
adc
jmp
ret
roll
fidivl
mov
jg
testb
in
ret
das
clc
les
in
xor
loopne
xchg
add
inc
sbb
mov
add
pushl
sbb
filds
inc
or
dec
and
int3
mov
push
adc
jge
in
mov
fwait
ja
cltd
mov
xor
les
xlat
icebp
incl
xor
add
dec
mov
push
ss
xchg
inc
iret
ljmp
call
out
rorl
add
or
pushf
sbb
mov
dec
mov
push
jae
repnz
dec
pop
xor
decl
outsl
stc
add
cli
push
jmp
push
lock
mov
push
cmpsb
rolb
cld
stos
in
les
lcall
adc
test
lods
lret
add
ljmp
dec
loope
push
les
scas
test
push
scas
xchg
xchg
and
mov
in
sbb
pop
fsubs
adc
dec
test
and
shl
ds
and
add
fstpt
or
jno
jnp
sbb
xor
cld
mov
add
inc
into
mov
addl
call
add
adc
fwait
int3
fiaddl
pop
cmp
mov
push
mov
adc
mov
decb
aaa
inc
sub
call
mov
pop
mov
and
test
ss
insl
jb
clc
xor
stc
int3
loopne
insb
or
ret
dec
mov
lcall
inc
inc
movsb
jno
es
or
pop
repz
add
or
call
nop
jnp
cmpsb
mov
cmp
xlat
mov
subb
movsl
push
rclb
incl
test
push
sbb
in
and
imul
aaa
aam
mov
push
bound
enter
xor
ljmp
push
xlat
add
pusha
xor
xchg
push
add
pop
mov
pop
pop
inc
dec
clc
fistps
outsl
xor
adc
ficoml
repnz
jmp
add
adc
out
in
cmp
ljmp
shlb
ds
mov
mov
dec
icebp
or
test
fwait
cmp
jl
or
pop
inc
or
cwtl
jle
pusha
jp
dec
imulb
xor
sub
sub
dec
dec
mov
and
cmc
sar
cltd
xchg
jg
filds
call
insl
aad
or
lods
rclb
cmpsb
hlt
jg
lods
inc
pop
push
int3
adc
sub
imul
movsl
xor
sub
psubd
and
fsub
cmp
inc
lods
arpl
push
pop
int3
inc
jg
mov
imul
push
mov
cmc
lods
outsb
push
stos
or
mov
fcom
pop
xor
ret
stos
xorl
mov
push
push
scas
cmpsb
in
cli
pop
enter
insl
addr16
and
loop
ljmp
test
adc
push
filds
shll
aas
mov
mov
xchg
cmp
into
adc
lock
shlb
addr16
adc
aas
sahf
sar
pushl
add
inc
insb
icebp
popa
gs
rcrb
hlt
js
push
in
and
adc
and
jecxz
pushl
aaa
dec
lods
clc
mov
and
sub
loopne
jg
sbb
jo
ret
push
nop
pop
fcmove
xchg
mov
pushl
ret
sbb
sbb
mov
inc
int
dec
fistpll
mov
cwtl
call
xor
add
sbb
decl
adc
adc
dec
repnz
ret
and
sub
pushf
cmpsl
cmp
decl
les
shrb
mov
xor
adc
push
cmp
and
rcll
lods
push
xchg
sub
je
fdivr
mov
xchg
pop
adc
xor
dec
push
enter
in
dec
xchg
xchg
push
mov
aas
mov
xchg
dec
cld
fsubl
mov
mov
sbb
cmpsb
xor
jmp
test
inc
push
mov
test
pop
in
push
jge
or
les
cmp
mov
or
pop
roll
sbb
cmp
fildll
sub
sahf
roll
xchg
out
cmpsl
sub
cmp
xchg
mov
in
incl
pop
jo
push
mov
mov
cmp
pop
mov
aam
dec
xor
cmc
ljmp
pop
bswap
and
leave
mov
nop
mov
test
lods
cmpsb
cmc
cmp
ret
push
or
outsl
popa
pop
int3
shll
ljmp
js
rolb
dec
fildl
mov
cmp
ds
test
push
mov
cli
xorb
jg
xchg
frstor
popf
pop
inc
movsb
outsl
jl
pop
rorl
push
cwtl
leave
andl
outsb
pushl
or
add
sub
test
lahf
and
mov
xor
pusha
jne
sub
fcoml
inc
or
sarl
fbld
in
out
movsl
cmp
les
jmp
clc
xor
dec
pushl
mov
js
or
jmp
lret
xor
xor
xor
and
mov
jp
adc
dec
cmpsb
loop
dec
cmp
mov
push
test
xchg
cmpsl
outsl
addr16
mov
movsl
sbb
dec
dec
or
add
mov
sbb
imul
fwait
and
cs
or
mov
mov
mov
pop
jp
cs
jne
jle
ljmp
lahf
cli
shll
jp
jg
enter
es
jmp
xchg
push
cmpsl
xchg
push
cs
jg
mov
cltd
or
pop
pop
xor
mov
out
loope
sbb
and
inc
std
xor
cmpb
loope
call
push
sahf
decl
push
jecxz
out
test
push
dec
imul
insb
add
imul
ljmp
in
push
dec
std
clc
jmp
popf
insb
test
xchg
iret
std
in
pop
pop
mov
lret
dec
incl
cld
incl
cmp
dec
fidivrs
das
test
xchg
pop
pop
add
jle
cmp
jne
jmp
stc
mov
sub
or
test
pop
lcall
aaa
js
mov
daa
fsts
mov
add
cmpsl
aad
cmpsl
ja
cmpsl
mov
call
and
aas
stc
popf
popf
repz
stos
mov
jae
sbb
sbb
mov
ss
xor
lcall
inc
loop
daa
cltd
fwait
mov
sub
flds
cmpsl
mov
inc
sbb
addl
decl
mov
or
orl
push
nop
jg
cli
ret
das
imul
mov
mov
cmpsl
jb
xor
mov
imul
mov
icebp
jns
adc
mov
mov
pushl
pop
orl
push
mov
jecxz
sarb
leave
xor
nop
insb
clc
mov
in
pushl
repz
dec
jmp
push
adc
lcall
enter
inc
pusha
fs
add
jmp
pusha
xchg
in
mov
mov
or
in
scas
incl
adc
repz
adc
insb
enter
addb
mov
cli
fcomip
aaa
in
push
out
test
mov
mov
incl
or
or
mov
repz
or
rcl
sub
sbb
call
orl
xor
sbb
add
lcall
sbb
mov
sub
popf
outsl
cmp
sar
jmp
jl
pop
sbb
out
push
lcall
lods
xchg
push
cld
call
inc
cmpsl
imul
popf
movsl
mov
and
popf
andb
adc
fbstp
jno
sarl
push
ret
cwtl
loop
dec
fldcw
dec
shll
jmp
mov
xor
push
mov
mov
lods
add
fimull
outsl
stos
outsl
leave
mov
adc
sub
pop
xor
fsubrs
inc
mov
inc
jl
fiaddl
xchg
adc
call
idivb
mov
pop
add
inc
int3
adc
lds
je
pop
jg
adc
movsb
dec
pop
pop
sbbl
int3
lods
sbb
int3
mov
dec
in
dec
lret
les
int3
ret
movsb
mov
add
push
add
enter
int
and
incl
pop
cmp
bound
orl
lods
sbb
call
call
call
push
rolb
loopne
jnp
sbbb
subl
icebp
inc
sbb
test
add
notl
mov
cmpl
insb
cs
mov
mov
loope
xchg
mov
inc
or
adc
sbb
scas
mov
and
pusha
add
bound
arpl
cmpsl
add
jmp
mov
scas
popa
adcb
faddl
pop
inc
mov
jno
cmp
addl
add
adc
incl
jne
mov
dec
xchg
cmp
inc
add
jecxz
or
push
push
jnp
jae
es
adc
mov
mov
pop
call
ja
adc
cwtl
xor
rcrb
sub
cmpsb
mov
imul
cmp
push
in
rorl
adc
pop
or
aas
hlt
out
mov
inc
mov
mov
clc
jmp
xchg
lret
shrb
mov
add
call
pop
sbb
out
test
and
cld
push
aas
add
les
decl
cmpsb
test
pusha
dec
iret
jl
ret
dec
int3
aam
inc
cmp
cli
jo
dec
shll
mov
les
or
dec
dec
pop
mov
fs
or
pop
ret
dec
shr
mov
and
cmp
dec
mov
loop
loop,pt
and
sbb
in
mov
mov
dec
fcmovnu
xor
clc
incl
sbb
iret
push
repnz
push
cmc
mov
add
insb
jno
mov
ljmp
divb
js
dec
std
push
mov
mov
clc
int3
jnp
andl
ljmp
xchg
fwait
pop
incl
mov
jg
scas
dec
sbb
scas
mov
mov
test
jmp
adc
or
mov
add
pop
dec
sbb
or
jmp
fadds
cltd
mov
cmpl
fadd
xor
sbb
push
cwtl
sbb
loope
insl
test
add
inc
clc
ljmp
mov
push
dec
cmpsl
inc
mov
es
lret
jne
jmp
hlt
mov
cld
inc
dec
mov
je
cmp
jo
mov
mov
xor
or
lret
ret
mov
xor
mov
mov
mov
cmpl
adc
das
nop
add
test
ds
fcmovnb
cmp
les
pop
xorl
cmp
mov
stos
fldt
int3
mov
aam
xor
dec
aad
nop
fstpt
pushl
rorb
lahf
sub
or
pop
inc
inc
push
ret
int
into
sbb
int
mov
decl
inc
into
addl
xor
xchg
pop
dec
or
dec
sub
inc
cwtl
cmp
add
std
call
mov
lahf
flds
cmp
cwtl
pop
jno
xchg
cmpl
lods
clc
ljmp
test
mov
xchg
dec
mov
testl
insb
call
incl
iret
add
andb
dec
pop
movsl
fwait
test
and
incl
adc
adc
pop
sbb
in
movsb
in
sub
add
xchg
adc
cmp
and
pop
sbb
xor
ficompl
adc
adc
pop
js
mov
push
adc
or
pop
loopne
sub
or
mov
xchg
sbb
mov
xchg
fildll
ret
adc
orb
lret
or
rcrb
pop
add
cld
sub
loope
clc
sub
insb
xor
add
mov
mov
sbb
enter
adc
xor
lcall
mov
push
pushf
or
in
sub
scas
cmp
lcall
cltd
mov
test
rorl
and
sbb
xor
outsl
xor
dec
inc
push
aaa
inc
jle
jg
cmp
add
cmp
arpl
xchg
jecxz
jbe
jbe
jecxz
xchg
jecxz,pn
ficompl
adc
inc
ds
js
insb
jo
push
sbb
enter
dec
outsb
in
rolb
sbb
insb
dec
out
lcall
adc
sahf
add
cwtl
lcall
add
and
andb
aad
rcrb
mov
push
push
sahf
aad
cmp
xchg
jno
cmc
cmc
fldl
ljmp
jmp
insb
xchg
fcomps
call
adc
pop
movsb
sub
mov
mov
fs
ljmp
ljmp
popl
add
adcl
mov
fs
and
add
fbstp
push
mov
or
add
add
xchg
jg
mov
and
cmp
das
sbb
pusha
mov
test
xor
mov
adc
sbb
hlt
jg
call
insl
fcomps
xchg
cmp
adc
sbb
add
hlt
test
test
push
dec
stc
test
popf
mov
dec
popf
int
cmpsb
loopne
mov
jmp
rorb
add
sub
or
aaa
mov
ret
jne
or
sarl
clc
call
xor
push
int
loop
mov
js
ret
jmp
dec
pop
cmp
lea
jmp
mov
xchg
std
aaa
cltd
and
adcb
mov
rclb
pusha
adc
mov
shll
les
les
jmp
aam
mov
pop
push
scas
in
dec
xor
inc
push
dec
in
scas
insb
push
ds
inc
ja
xorb
ss
ljmp
push
gs
ds
push
inc
mov
or
dec
je
enter
push
inc
ret
sub
sbb
dec
dec
call
xlat
adc
inc
inc
dec
movsb
pop
xor
or
add
cli
lcall
xchg
lcall
mov
loopne
push
xor
jae
cmc
pusha
nop
clc
inc
dec
or
cmpsb
sub
push
outsl
dec
mov
jae
or
scas
hlt
lcall
mov
jmp
jle
or
or
xlat
stc
xchg
xlat
clc
inc
mov
xor
push
jp
fistps
xor
addl
vmovupd
popf
jle
imul
mov
pop
jne
mov
pusha
adc
das
test
ss
pmulhw
decb
sub
dec
maskmovq
push
and
cmp
xchg
jg
jge,pt
popf
scas
mov
push
pop
mov
mov
orl
mov
or
xchg
loopne
adc
mov
sub
push
inc
outsl
pop
mov
mov
mov
inc
xchg
lea
mov
push
mov
sub
add
cmpb
pop
pusha
call
rcrb
mov
sbb
in
adc
jae
xchg
xor
sarb
pop
insb
jg
sub
push
xchg
hlt
imul
test
add
in
inc
xchg
in
xor
jmp
cmp
push
daa
dec
ret
mov
xor
les
mov
cmc
in
lds
adc
shl
vcvtdq2ps
aam
mov
es
and
cmp
sub
lcall
add
loopne
or
jmp
inc
xrelease
or
ljmp
outsb
clc
into
repz
cs
lret
into
in
clc
fstpl
aas
js
mov
je
add
divl
stc
jbe
sub
add
ljmp
clc
repnz
push
lods
ss
adc
mov
dec
pop
addr16
mov
lret
icebp
lcall
cmp
into
mov
scas
xchg
and
lods
pop
incl
call
cmpsb
or
xor
jb
adc
je
add
pop
mov
repnz
addb
jl
cmp
lcall
add
icebp
jle
mov
cmp
js
jp
pop
cwtl
pop
xchg
decl
and
call
daa
push
aad
sub
sub
pop
nop
jb
pushf
shlb
jno
lock
xor
scas
xchg
hlt
jmp
repz
dec
lods
push
xchg
jne
pop
lods
enter
adc
inc
or
adc
or
and
add
mov
rolb
jae
or
adc
cmp
adcl
lea
adc
outsb
mov
int
ljmp
xlat
cld
int3
out
into
dec
insb
sbb
hlt
inc
das
cmc
sarb
enter
fstpt
sub
xchg
jl
jge
scas
add
xchg
lahf
jge
enter
jg
lods
outsl
and
sbb
das
jle
clc
add
jg
loop
push
adc
psubsb
pop
add
inc
hlt
push
arpl
les
mov
jbe
fs
data16
add
fistpll
sbb
out
cli
pushl
test
xchg
sub
sub
pusha
insl
test
sbb
jmp
jmp
pop
in
pop
scas
add
sub
into
xchg
test
mov
decl
mov
inc
je
shll
or
enter
jnp
add
std
decl
je
rcrb
loopne
or
or
das
push
pop
shlb
sbb
aaa
push
cmc
jns
out
xor
lea
xor
sahf
adc
dec
sbb
xor
push
sbb
std
cltd
jae
sbb
cmp
nop
jne
int
mov
out
lods
pushl
xchg
push
fdivl
imul
mov
shrl
pop
sbb
jmp
sbb
out
cmp
lret
pop
pop
scas
pop
sbb
out
push
mov
inc
cmp
jae
mov
sub
retw
js
addr16
cmp
out
call
insl
sub
sub
push
scas
sub
mov
xor
movsl
inc
frstor
jl
lcall
mov
adc
iret
pushl
cli
cmc
ljmp
mov
xlat
scas
and
dec
add
daa
mov
jle,pt
jl
sbb
cmp
pop
push
xchg
sbb
xchg
inc
es
cmpb
loope
or
mov
gs
repnz
jno
push
push
and
loope
push
push
roll
decl
mov
push
loope
cmp
or
mov
adcb
jae
roll
or
addb
inc
or
xchg
and
rolb
ljmp
dec
cmp
sbb
lods
mov
cs
out
or
xchg
stc
insb
or
jmp
sbb
mov
flds
loop
and
js
fistps
lahf
pop
clc
flds
inc
sbb
adc
test
aaa
ficomps
xchg
mov
loope
or
loopne
xchg
fdivs
mov
test
jmp
jmp
add
mov
add
rolb
push
decl
ret
push
xor
fiaddl
add
mov
push
scas
mov
jg
sub
ljmp
pop
push
pop
sbb
inc
outsb
cli
fistl
add
ret
adc
mov
outsb
mov
xor
add
outsb
nop
ficoml
adc
jle
dec
fimull
in
adcl
mov
jne
adc
out
clc
jg
push
cmp
push
enter
add
xchg
imul
cmp
lcall
xor
enter
adc
fwait
cltd
mov
les
inc
es
mov
es
pushl
int
cmp
jnp
push
fs
mov
push
fstps
sub
pop
pop
cwtl
aad
mov
pop
jmp
jmp
xor
lret
pop
icebp
decl
iret
inc
pop
pop
or
inc
fs
jne
fwait
mov
int
jl
roll
jle
aad
mov
pop
ja
mov
push
xor
or
jmp
mov
and
cmp
mov
mov
add
outsl
inc
shrb
or
pop
decl
adc
sub
cmp
xor
push
mov
test
call
cmp
iret
movsb
add
jmp
xor
and
mov
outsw
jge
lea
push
lea
loop
pop
out
jno
dec
cmpsl
sahf
sub
jmp
and
adc
inc
test
cs
cmp
mov
in
cmpsb
inc
int3
and
fildll
call
cli
aam
mov
inc
inc
adc
mov
jns
jecxz
stos
repnz
xorl
push
fcomip
pop
sbb
xor
test
inc
scas
out
loop
cmp
push
sbb
adc
jmp
mov
pop
inc
adc
jg
and
mov
sarb
stos
and
or
pushl
mov
jns
dec
pop
loop
pushf
mov
pop
cmp
hlt
loopne
sub
ret
es
jge
jmp
std
sbb
je
or
clc
ret
loopne
pop
pusha
mov
lds
dec
pop
dec
jecxz
lret
in
addr16
mov
call
lahf
ret
clc
movsl
arpl
mov
push
adc
mov
out
fldl
xor
dec
call
inc
ss
es
xchg
fwait
rorl
push
ret
fs
dec
test
sbb
filds
push
jmp
insb
add
push
push
mov
pop
inc
nop
cli
cmp
mov
aaa
mov
sub
jmp
sbbl
fucom
aas
jnp
fs
sub
dec
imul
xor
sbb
add
into
sbb
lock
or
inc
push
lea
pushl
mov
js
xchg
daa
and
mov
xor
mov
enter
pop
ljmp
das
mov
lods
orb
adc
fcomps
nop
orb
inc
xchg
or
and
pop
push
add
loope
push
out
nop
sbbl
add
push
sub
pop
std
imul
addr16
loop
pop
stc
cli
mov
pusha
add
dec
hlt
push
jne
test
fists
fimuls
test
jmp
xchg
or
loopne
inc
aad
pop
push
inc
push
push
pop
inc
push
pushl
mov
push
das
adc
push
add
mov
or
rclb
loopne
and
loop
and
mov
dec
sarl
and
jb
or
jg
push
xor
pop
mov
idivb
mov
mov
mov
es
lea
dec
test
call
js
and
sahf
fsubrs
add
decl
xor
dec
dec
data16
das
loop
daa
mov
ja
clc
call
xorb
lcall
pusha
clc
cmp
sbb
or
dec
mov
int
xor
inc
mov
and
ljmp
loope
lret
mov
adc
cltd
int
out
dec
add
xor
mov
and
divb
or
lea
xor
mov
mov
add
cmp
pop
insl
jb
pop
ss
push
mov
jg
xchg
sahf
add
data16
jl
mov
adc
out
jl
mov
out
aad
ljmp
pop
sbb
push
sub
out
test
inc
lods
movsl
cmp
lcall
aam
and
subb
inc
mov
test
or
cltd
cld
ljmp
adc
mov
inc
xchg
jl
sub
insb
jle
adc
adc
xchg
pop
xchg
out
fisttps
cmp
cmpsb
addb
cmpsl
push
push
xchg
jle
movsl
xlat
jecxz
cmc
call
lock
push
in
rolb
push
pushf
sub
int
cld
repnz
fists
lret
cli
daa
or
fisubrl
jae
sbb
mov
jmp
mov
mov
push
sbb
inc
pop
or
andb
incl
sub
jp
stc
clc
sarb
rorl
push
or
shr
sbb
and
cwtl
xchg
out
pushl
movb
and
sub
add
ljmp
mov
pop
dec
je
mov
pop
shll
incl
fsubrs
push
insb
cmp
lods
jmp
js
out
insb
sub
add
decl
fcoms
xchg
xlat
lock
cmpsl
orl
jecxz
sbb
sbb
cwtl
iret
cmp
ss
test
clc
dec
pop
outsb
arpl
sbb
mov
fdivrl
mov
push
pop
add
mov
jo
leave
lods
loop
es
fdivl
mov
mov
bound
lret
push
sbb
fstps
outsl
pop
mov
dec
add
sub
adc
pop
divb
enter
pop
add
adc
icebp
inc
xchg
fists
cmp
into
pop
or
pushl
sub
dec
dec
cmp
sbb
outsb
sub
flds
jb
ficoml
add
sbb
inc
inc
adc
clc
mov
inc
int
bound
dec
adc
in
dec
pop
sub
rcrb
mov
cs
idivl
int
add
and
xor
jnp
movsb
jg
rcrb
loope
xor
xchg
jl
test
call
std
mov
xor
int3
adcl
ret
pop
add
jo
lods
adc
adc
clc
call
cld
push
fwait
sbb
push
and
loopne
pop
test
push
push
ud2
scas
pop
ljmp
pop
data16
push
push
enter
sub
mov
scas
ljmp
stc
ret
pop
and
or
xchg
sbb
aad
sbb
fs
les
call
jp
adc
add
int
mov
sarb
lds
inc
mov
fadd
incl
sbb
push
push
pop
test
xchg
jae
inc
cmp
pop
inc
push
test
movsl
and
ljmp
mov
vpmaddwd
outsb
adc
pop
repnz
leave
icebp
fcmovne
add
rcrb
fs
or
call
lret
imul
movsl
xchg
push
xchg
jnp
dec
aaa
popa
or
lods
fadds
lcall
push
xchg
pop
or
push
xor
clc
pushf
fst
cmp
mov
into
and
decl
popf
sbb
mov
sbb
xchg
jno
aad
or
fsubp
filds
lea
mov
adc
inc
fdivr
mov
and
and
cmpb
and
int
jmp
cmpb
rcr
pop
add
inc
sub
pop
sub
cmpl
mov
xchg
push
or
xor
xchg
or
fs
popl
je
adc
in
aaa
cld
inc
imul
add
cmp
inc
test
add
nop
adc
push
sbb
popa
pop
mov
and
stc
test
popf
aad
xor
push
and
frstor
mov
mov
sub
subl
pop
js
in
fstl
mov
push
add
adc
pop
cmc
decl
lea
in
sbb
test
call
xor
roll
addl
pop
inc
sub
lcall
adc
mov
inc
inc
enter
add
mov
push
or
cld
test
je
add
cld
inc
sbb
jge
test
test
adc
adc
push
fisttpl
cmpb
test
insl
test
mov
fbld
adc
xchg
sbb
aam
and
loopne
popa
push
stos
push
ss
iret
ror
adc
jmp
cmp
outsl
and
sbb
inc
lret
mov
leave
sar
mov
sbb
es
mov
or
and
adc
int
xchg
push
xor
jo
add
jmp
loope
pop
out
enter
pop
or
pop
dec
push
lods
inc
xchg
lcall
orl
mov
fld
insb
mov
adc
sub
pusha
dec
out
push
outsl
and
jmp
leave
dec
cwtl
sbb
inc
in
hlt
and
mov
mov
xchg
jle
imul
inc
data16
inc
adc
push
jmp
dec
adc
xor
mov
cwtl
bound
or
mov
inc
and
pusha
push
icebp
or
lock
or
ljmp
sub
cmp
dec
popa
sahf
dec
popf
lcall
divl
sub
pushf
mov
sti
xchg
push
dec
in
push
imul
movsl
sahf
in
jns
cmp
adc
or
nop
jo
test
enter
jmp
push
push
sub
enter
mov
cmpl
call
cwtl
push
push
sbb
fbstp
idiv
decl
lret
idivl
push
dec
dec
cli
imul
xor
inc
loopne
or
mov
adc
std
push
push
pop
add
mov
lahf
dec
mov
mov
dec
jg
sub
adc
mov
aam
sbb
dec
imul
mov
add
dec
sarb
in
in
mov
push
mov
mov
inc
bound
mov
dec
inc
jmp
outsl
or
pop
roll
call
pop
std
jmp
insb
into
sbb
xlat
pop
rcr
adc
loop
or
mov
int
call
xor
ror
roll
es
into
jne
arpl
pop
jge
movsl
pusha
cmp
jo
cltd
sarb
ss
sub
cwtl
cmpsb
or
pushl
cmpsb
mov
je
gs
xchg
adc
mov
test
aaa
sub
sbb
fcompl
mov
jo
jg
shll
sub
cmp
mov
popa
jmp
mov
mov
mov
loop
rorl
inc
shl
adcl
hlt
ss
inc
sbb
or
lock
ret
sub
dec
and
imul
push
mov
xchg
or
lods
sub
sub
lcall
ds
cltd
cmp
sti
in
adc
add
or
jecxz
sub
js
push
adc
push
mov
add
or
movsl
sar
and
inc
cmpl
or
scas
cli
cld
xorl
sarb
add
test
pop
sbbl
lock
clc
decl
pop
icebp
xchg
pop
cmc
xchg
mov
lcall
adc
mov
pusha
fs
sarb
mov
lcall
adc
add
cmp
std
dec
inc
fldt
rol
nop
push
mov
inc
xchg
decl
pop
stos
shrl
mov
sbb
inc
xchg
push
loop
xchg
ret
mov
add
xor
jns
adc
sub
pop
cmc
call
jno
xchg
iret
mov
rorb
movsl
lcall
cwtl
push
into
pusha
pop
xchg
fadds
outsb
sbb
inc
sbb
subb
xor
cmpsb
orb
arpl
outsl
push
fsub
les
jo
mov
movsl
lods
mov
jg
movsb
in
and
insl
mov
adc
or
jg
inc
jmp
mov
mov
test
jmp
sub
jb
out
sbb
jmp
repnz
scas
cmp
xor
push
pop
cmc
in
movsb
jo
stos
outsb
push
into
mov
xchg
xchg
in
popf
and
inc
shll
decl
xchg
sbb
jbe
pop
xor
mov
notb
add
pushl
clc
add
dec
fwait
addl
inc
cmp
xor
inc
dec
decl
jge
and
lahf
mov
jb
cmp
and
jnp
in
mov
add
push
in
fimuls
or
add
out
mov
and
add
mov
fs
pop
nop
decb
cli
push
test
inc
stos
loope
decl
mov
add
dec
scas
mov
sbb
lret
mov
inc
lods
imul
mov
fmuls
dec
adc
gs
ljmp
xchg
bound
js
mov
xor
push
aam
push
and
pop
push
mov
clc
call
es
pop
in
cmp
mov
fstpl
mov
mov
rcr
xchg
mov
out
mov
ljmp
ljmp
or
push
aam
roll
mov
inc
fldl
pop
mov
jmp
jge
cmpsb
cmp
pop
mov
sub
call
rorl
imul
sub
shlb
pop
adc
sbb
xor
jmp
xor
fcoms
mov
jmp
xchg
fistpl
int
adc
mov
decl
sub
jmp
cmp
push
cmp
pop
mov
mov
add
jl
jecxz
dec
pop
sub
xchg
sbb
mov
mov
pushl
mov
inc
xchg
call
fidivrs
sbb
or
jmp
push
xor
fisttps
lea
mov
pusha
into
adc
pop
push
std
decl
push
addb
sbb
ret
jo
movsb
xor
pop
decl
pop
icebp
jmp
inc
mov
fisttpll
or
xor
pop
int3
lock
cltd
dec
subb
push
add
add
jecxz
jp
les
lock
jbe
push
adc
mov
mov
call
adc
adc
jnp
adc
lods
insb
add
cli
mov
mov
inc
inc
inc
mov
pushl
jl
fadds
sub
pop
push
gs
inc
ljmp
sar
xchg
fdivl
std
les
pusha
mov
push
push
fld
push
inc
mov
les
jno
pusha
insb
lock
into
jmp
movsl
push
sbb
jne
fisttpl
in
data16
and
aam
sub
mov
mov
mov
mov
mov
flds
es
dec
push
lcall
into
cmp
push
stos
pop
test
mov
pop
out
out
out
ljmp
push
xor
xchg
jmp
adc
lea
add
outsb
stos
lret
mov
in
call
mov
pop
js
mov
jle
pusha
stos
adc
or
incl
and
out
pop
mov
mov
or
scas
add
xor
stos
inc
sbb
sbb
lcall
iret
push
xrelease
dec
dec
inc
leave
xorl
test
or
mov
movsb
in
inc
xor
test
xchg
xchg
add
ret
mov
leave
fidivl
xor
es
test
jg
sar
add
movsb
add
jg
in
fstps
cmp
sub
ret
or
xor
ffreep
js
adc
or
push
cld
dec
sbb
fsts
add
orl
xchg
call
inc
inc
sub
add
pop
sbb
call
cmp
mov
or
push
aad
cltd
and
push
mov
adc
dec
dec
sub
mov
jmp
sar
and
insl
mov
xor
sahf
outsb
pop
out
jg
sbb
pop
pop
sbb
repnz
pop
mov
outsl
pushf
pop
push
xchg
mov
repnz
jg
std
rcl
push
enter
popf
loop
mov
pop
sbbb
hlt
xchg
or
mov
ds
cmp
push
in
pop
add
sbb
pop
sbb
outsl
aam
popa
icebp
push
scas
mov
jg
data16
ja
fwait
mov
sbb
push
push
mov
mov
outsl
clc
call
bound
jns
out
repz
jae
cmpsb
aaa
mov
jg
insb
xchg
jg
xchg
cmp
sarb
push
idiv
push
push
sti
or
cmp
sub
push
hlt
cmp
std
ja
inc
mov
cmp
or
cmp
in
ret
fistpll
pusha
loop
les
cmp
inc
mov
add
icebp
enter
inc
call
lock
test
xchg
lock
adc
clc
das
jbe
push
incl
mov
xchg
decl
in
xchg
aaa
cmp
loop
es
arpl
inc
mov
lock
adc
sbb
movsb
out
pushl
mov
adc
dec
icebp
idivl
dec
lods
mov
xor
push
mov
push
aad
xchg
adc
sar
jg
rorb
push
imul
mov
pop
insl
pop
cli
pop
cmc
lods
sub
or
inc
adc
ja
das
xchg
dec
dec
xchg
dec
inc
sbb
out
mov
rcll
insl
push
lcall
mov
add
repz
lcall
pop
cmp
in
outsb
mov
ljmp
mov
cmpb
push
push
call
jp
add
jp
xchg
add
fdivrp
mov
loope
and
test
out
mov
cld
push
clc
incl
hlt
pushf
cmp
outsb
jl
gs
stos
push
les
adc
or
enter
mov
jl
xor
jns
mov
sti
dec
jg
sub
mov
push
ss
clc
xchg
sti
mov
xchg
sub
jmp
dec
int
xor
test
jnp
into
or
fiaddl
les
shlb
int
push
or
mov
subb
and
xor
inc
xor
mov
pop
adc
adc
insb
pop
adc
xchg
xor
dec
mov
pop
pop
jno
rolb
ljmp
lcall
aaa
sbb
iret
sub
je
mov
lcall
lock
fists
lds
in
cwtl
xor
mov
pusha
arpl
test
call
sbb
lcall
or
hlt
insl
mov
cmp
insl
mov
dec
nop
pop
not
jb
sarb
jnp
inc
loopne
vaddps
stc
repnz
or
sti
call
or
adc
mov
out
mov
jae
in
jnp
mov
pop
hlt
sbb
inc
pusha
fs
or
cmp
add
loope
or
cltd
cmp
cmp
mov
fcompl
lcall
mov
ret
in
lahf
imull
lahf
int
or
out
inc
mov
mov
cmp
je
cmp
mov
fcmovne
inc
dec
fisttpl
or
inc
das
mov
mov
cmp
push
inc
adc
inc
hlt
xor
or
nop
aaa
std
pushl
inc
or
roll
or
je
out
cmp
push
mov
mov
negb
adc
inc
adc
jno
je
inc
mov
sub
rolb
sbb
pop
add
fsubrs
dec
xor
push
mov
dec
jae
xor
fisttpll
add
xchg
mov
xor
clc
aam
incl
rorb
aam
push
add
add
adc
inc
repnz
xor
cmp
xor
xchg
ss
movsl
lahf
cmp
or
push
incl
or
cmpsb
dec
or
dec
aad
pop
and
or
dec
call
mov
rcll
cmp
aad
stos
cmp
dec
and
pop
xchg
xchg
dec
in
clc
lcall
cmpsb
adcb
lcall
jo
pop
mov
xchg
add
addl
mov
sahf
or
filds
cmpsb
jns
mov
and
insb
ljmp
add
pop
mov
or
jmp
mov
inc
shl
sub
lcall
loop
and
mov
add
mov
fidivrs
pop
lcall
loop
push
into
lahf
cltd
xchg
pop
out
lods
mov
xlat
out
ljmp
call
lcall
imul
test
std
sbb
sar
mov
rcll
insb
adc
and
sbb
push
dec
cmp
icebp
pop
mov
sbb
lock
sti
adc
test
adc
sbb
ror
das
incl
loopne
fwait
sbb
loopne
enter
mov
mov
aaa
insb
sbb
cmp
add
fisttpl
aam
or
into
ss
insl
push
add
fadds
mov
jecxz,pt
shrb
scas
out
push
jne
pushl
scas
mov
mov
out
push
push
lret
push
cmpsb
mov
dec
incl
add
mov
push
pop
xor
fisubs
sbbl
decl
and
fcoml
mov
in
pop
jmp
mov
icebp
sbb
shlb
pop
add
test
push
or
mov
jg
xchg
loopne
mov
dec
and
cmp
xor
pusha
mov
pop
mov
push
js
ret
mov
sub
pop
mov
push
jae
fsubs
add
push
push
pop
push
sbb
add
fdivr
mov
push
cltd
mov
inc
xor
call
and
or
incl
test
call
or
cs
gs
xor
shlb
movl
mov
mov
sbbl
or
call
out
mov
xor
push
rclb
mov
enter
fidivrl
sub
jno
js
pushf
dec
xchg
and
mov
inc
mov
pop
repnz
push
test
lcall
shlb
inc
shl
push
jp
test
adc
jp
adc
pop
in
cli
jmpw
jo
outsb
sub
and
lret
pushl
adc
ja
and
sub
addr16
sbb
cmp
decl
pop
incl
adc
mov
mov
aad
dec
faddl
mov
and
iret
jl
fnstcw
or
xchg
mov
push
mov
incl
and
jp
sub
add
push
inc
stc
and
sbb
cmp
cs
popf
push
sbb
adc
adc
fwait
inc
xor
mov
mov
xchg
hlt
push
add
test
dec
and
xchg
loopne
daa
mov
lcall
test
dec
push
mov
pop
pop
decl
hlt
dec
jecxz
push
subl
pushf
mov
outsl
jge
pop
pop
popa
inc
mov
pushl
mov
adc
addr16
pushl
int3
inc
inc
enter
add
xor
das
push
hlt
dec
ret
sbb
cmp
xor
ljmp
sbb
add
xchg
mov
push
dec
add
sbb
or
cmp
ljmp
or
xor
sbb
leave
cmp
jle
xchg
mov
sbb
cmp
iret
fmulp
mov
adc
cmp
test
lret
sbb
sbb
ret
and
dec
iret
jns
stos
movsb
mov
jg
and
inc
test
movsb
fcoms
sub
lret
iret
mov
cmp
pop
dec
shll
push
and
addb
imul
testl
fucomi
jl
inc
loop
cmpsb
cltd
push
and
sbb
add
popf
dec
outsl
clc
call
mov
nop
mov
test
lds
cwtl
pop
mov
std
orb
incl
adc
je
add
test
iret
movsb
dec
pop
fwait
repz
fs
adc
ret
dec
into
fldl
or
loop
out
mov
sahf
sbb
insb
cmp
xchg
xchg
jns
and
inc
add
push
leave
inc
punpckhwd
xchg
jno
add
pop
adc
push
adc
cmp
dec
popa
add
inc
mov
inc
jmp
xor
dec
xchg
sbb
xchg
push
test
and
mov
push
sbb
pop
xor
add
ds
filds
enter
ss
cltd
int3
ds
cld
add
clc
loop
mov
inc
nopl
cmp
push
xchg
lcall
xchg
adcb
dec
in
loopne
cld
mov
jb
pop
and
mov
cmc
stos
jbe
sbb
pushl
jns
orb
jl
or
add
and
ret
cwtl
push
or
jb
pop
pop
lods
pop
sub
subb
fadds
xor
sbb
shr
fisttpl
or
cmc
lds
dec
iret
sar
or
je
addr16
int
loop
adc
out
mov
jg
or
mov
or
jne
fsubrs
aaa
repnz
outsl
adc
mov
decl
cmp
pop
imul
mov
mov
xchg
lcall
mov
ss
popa
add
mov
inc
pop
das
jl
jmp
outsb
adc
jno
gs
jnp
push
pop
cli
cmpsb
mov
pop
lcall
and
pop
xchg
xchg
sub
decl
hlt
pop
lahf
clc
aam
fidivrl
xchg
in
push
mov
push
pop
enter
sahf
cmc
fldenv
or
js
rorl
out
sbbb
sbbl
inc
ds
pop
jge
add
lock
lock
call
inc
or
and
sub
pop
dec
and
test
sbb
and
xchg
mov
mov
or
repnz
lret
jge
gs
push
loop
mov
rol
hlt
mov
jp
test
inc
mov
push
xchg
fisubrl
adc
adc
hlt
dec
xlat
push
inc
mov
adc
sub
lret
push
mov
popa
or
call
test
push
mov
jmp
mov
int
adc
shll
mov
cld
pushl
jge
inc
pushaw
mov
test
ret
pushl
xchg
inc
stos
jmp
bound
fdivs
fstps
negb
pop
pop
sarl
jne
adc
dec
lcall
idiv
es
mov
int3
jno
ss
std
or
adc
out
push
cmp
andl
repnz
jo
mov
push
mov
sbb
out
jo
ds
sarb
mov
mov
addr16
mov
mov
add
test
fimuls
mov
mov
es
dec
xor
scas
inc
mov
and
clc
in
fs
inc
or
rolb
incl
add
mov
fistl
mov
ror
aas
aam
xchg
clc
jmp
lret
push
and
pop
jmp
jbe
mov
cmpsb
out
lcall
cwtl
pushf
lods
xor
es
call
or
and
arpl
sar
jle
mov
jmp
jmp
pusha
jmp
nop
enter
dec
leave
shrb
and
and
jb
icebp
lcall
cli
pop
call
xsetbv
psubsw
pextrw
scas
std
mov
sbb
incl
sbb
std
out
push
ss
sbb
rcll
jnp
adc
xor
les
or
pusha
add
out
or
pop
and
test
in
scas
addb
or
repz
pop
inc
test
aad
lcall
sub
iret
stos
nop
in
pop
shlb
into
loope
and
or
mov
stos
incl
jle
popa
sub
xchg
mov
imull
cmpsb
bound
pusha
jo
and
sarb
mov
incl
shl
mov
mov
fcom
and
shrb
movsl
lcall
push
lea
out
ret
fisubl
call
cs
cmp
aam
jno
imul
pop
sub
std
decl
xchg
test
sub
inc
mov
fwait
jo
xchg
cld
jmp
pop
dec
mov
jmp
dec
loop
add
push
add
sarl
mov
sub
or
jle
jno
adc
jmp
pop
push
es
subb
arpl
aam
push
dec
rorb
imul
movsl
add
ret
ja
lcall
cmpsb
js
out
ror
mov
xor
hlt
dec
xchg
dec
lods
push
nop
jns
dec
jmp
aaa
push
ret
lret
cmc
and
pushl
scas
je
add
mov
gs
jns
dec
ljmp
add
mov
scas
or
push
xchg
cmpsl
ljmp
cwtl
dec
sub
loop
outsb
lods
mov
adc
rcll
das
repz
sub
enter
popa
add
icebp
adc
push
xor
shr
dec
rcll
dec
ljmp
mov
and
int3
push
and
dec
or
mov
test
enter
dec
adc
shr
add
sub
in
add
enter
and
jecxz
cmp
sub
or
cmc
out
loopne
sbb
cmp
mov
popf
or
call
lahf
lcall
mov
cld
in
call
or
sbb
push
in
lcall
mov
data16
xchg
cmp
mov
lcall
mov
or
ljmp
dec
mov
nop
in
fs
in
out
jp
ret
jb
fs
lds
jmp
cld
filds
mov
inc
inc
cmp
inc
pusha
leave
outsb
fsubs
insb
or
sub
mov
lcall
out
mov
mov
arpl
push
pop
mov
xchg
popa
add
and
ja
call
add
daa
dec
jl
or
movsl
pop
pop
push
aas
mov
mov
out
insb
xchg
cmpsl
push
out
adc
decl
sbb
data16
mov
or
mov
mov
stos
rorb
repnz
repnz
xchg
or
and
push
xor
pop
incl
sbb
or
mov
xor
mov
rcrb
dec
nop
icebp
xor
adc
repz
mov
xor
pop
cs
jo
cmp
xor
xchg
adc
shll
mov
xor
adc
call
xor
or
bound
push
dec
ror
and
add
mov
movsl
adc
bound
cmp
test
cmp
iret
sub
subb
in
test
ds
hlt
cli
add
aaa
stos
repz
push
scas
repz
clc
movsb
mov
push
lods
arpl
repz
jg
xor
xchg
pushl
sbb
or
and
mov
loope
sbb
jmp
aaa
mov
cli
and
data16
sbb
test
stos
mov
add
inc
sub
dec
sar
fmuls
les
mov
mov
push
insb
dec
add
adc
dec
pushf
les
shlb
push
push
inc
or
jo
dec
cmp
loopne
filds
orl
dec
push
jno
stos
add
mov
loop
add
hlt
jno
and
insl
mov
out
and
pushl
pop
push
addr16
and
mov
xchg
lcall
sub
test
nop
lock
mov
dec
dec
mov
inc
add
or
insl
jb
push
jp
jbe
mov
cmp
call
mov
or
or
fcomip
mov
fnstenv
adc
out
mov
int3
pop
in
xor
jmp
int3
pop
data16
fstl
jmp
popa
mov
int3
test
fs
dec
sbb
lcall
scas
test
sub
daa
xchg
jb
aad
adc
xor
divl
outsl
mov
aaa
ljmp
repz
push
xor
fdivrs
icebp
xor
insb
mov
inc
mov
jo
mov
shl
mov
call
mov
shll
incl
xor
test
push
mov
pop
mov
cmp
add
mov
test
cmp
xor
mov
add
shlb
outsl
incl
adc
in
andb
pop
push
mov
cmp
cmp
or
incl
ds
lret
xchg
jne
ror
push
dec
sub
lcall
adc
outsb
sub
insl
shrb
aam
arpl
les
or
clc
add
add
push
clc
incl
decb
mov
or
dec
dec
and
xchg
or
jno
stos
gs
scas
push
push
or
loopne
inc
inc
xchg
pusha
cld
push
mov
jo
loope
je
test
jae
inc
popa
xchg
sub
add
dec
sub
inc
push
adc
mov
loopne
jl
loope
popa
adc
test
scas
clc
jl
cmp
and
cmp
mov
push
push
fs
lods
mov
sub
cmpsb
pushl
mov
sub
mov
dec
dec
mov
xchg
clc
incl
outsb
aad
insl
cmc
fadds
xchg
imul
pushl
repnz
or
or
into
and
das
or
jbe
pushl
or
cwtl
lret
mov
les
push
adc
pop
ds
xchg
inc
stc
xor
dec
call
xor
push
je
jno
dec
xor
lds
mov
add
cmpsb
sbb
sbb
dec
pop
jb
sbb
push
and
jnp
mov
sarl
cmp
in
fcomip
incl
lret
mov
and
xchg
sarl
sarl
jmp
jmp
cli
jns
loopne
test
add
mov
push
xchg
inc
push
add
sbb
add
mov
xor
xchg
fbstp
out
sbb
cmp
mov
clc
push
lcall
or
dec
sub
iret
out
sub
inc
lcall
inc
dec
scas
imul
inc
and
add
jo
cmp
scas
cli
call
fbld
sub
inc
inc
add
fwait
dec
cvtpi2ps
inc
arpl
jg
test
sub
xor
pop
mov
push
cld
push
pop
push
imul
mov
lock
xor
mov
jbe
es
loopne
dec
adc
mov
or
or
mov
mov
inc
sub
and
out
mov
push
cwtl
sub
cs
aad
lods
fistps
jecxz
lods
shl
insl
fnsave
rcl
jo
decl
lock
ljmp
mov
xchg
sub
imul
jl
push
and
add
push
mov
loopne
stos
add
and
cli
push
shlb
in
push
cmp
xchg
cmp
xor
je
push
sbb
loope
dec
xlat
je
aad
call
popa
and
mov
lea
mov
mov
push
fdivrp
pushl
lods
sub
jle
or
pop
js
mov
jle
push
cmp
repz
or
pop
cmp
sbb
fwait
dec
cld
sub
cmp
or
orb
xchg
jp
ret
sbb
fnstcw
aam
mov
add
loopne
dec
adc
adc
shll
ds
lahf
cli
add
fstps
testl
ljmp
ljmp
pushf
mov
push
movsb
ficoms
pop
fldln2
dec
push
hlt
sub
add
mov
decl
pop
movsb
mov
rol
out
insl
inc
cmc
rorb
mov
les
inc
fdivr
outsl
mov
arpl
jb
ljmp
or
ss
daa
es
ljmp
sbbb
xchg
and
jnp
push
lcall
test
inc
add
jp
adcb
jg
push
mov
mov
leave
pop
int3
mov
lods
mov
call
aam
mov
outsb
mov
xor
lods
adc
dec
sbb
cmp
jge
test
adc
outsb
lcall
and
xchg
pop
loop
lcall
rorw
xchg
frstor
pop
jmp
add
sbb
xchg
int
pop
push
xor
mov
icebp
enter
sbb
adc
outsl
lcall
enter
int3
nop
in
fcmove
xor
lret
ds
icebp
out
cmp
int3
inc
xor
add
cli
push
adc
adc
repz
test
xchg
enter
outsb
xchg
cmpps
in
cmp
xchg
cmp
adc
xor
xchg
outsl
cmp
cmp
jns
sti
cs
jecxz
ret
ret
inc
add
bound
pusha
inc
add
mov
add
or
push
xlat
cmp
pop
aad
cli
sbb
sub
lcall
adc
lock
or
in
push
mov
add
faddl
test
adc
fisttps
imul
mov
filds
shll
jno
cld
and
lock
lcall
mov
lods
movsb
add
sbb
jno
xchg
test
jl
scas
sbb
scas
push
xlat
fs
cmp
hlt
dec
ja
add
mov
mov
or
or
aad
ds
iret
sbb
sarl
int
mov
jmp
insb
jmp
nop
fxsave
in
xchg
outsb
out
jbe
jmp
add
pop
cmp
fimuls
pop
cwtl
pusha
pop
xor
loop
pushf
scas
sbb
call
imul
cmp
outsl
adc
and
xor
xorb
cld
fwait
mov
jno
ret
inc
lret
lret
lret
lret
cmpsl
jg
and
jo
out
pop
lret
cmp
test
int3
out
jl
push
mov
clc
movsl
or
out
in
xor
and
shrb
rcr
shlb
test
ljmp
cmp
insl
inc
rolb
out
test
push
xchg
shrb
push
mov
mov
iret
std
cs
inc
mov
loopne
add
dec
pop
incl
push
and
push
adc
pusha
orb
sbb
mov
lcall
cmpb
inc
es
movsb
mov
lahf
ret
xchg
shlb
call
in
xchg
sbb
inc
jo
ret
movl
test
and
cmpsl
push
cmp
add
mov
inc
ficoms
lret
cmp
pop
jo
hlt
cmpsl
add
aam
rclb
decl
enter
hlt
daa
dec
mov
jecxz
sub
or
test
test
xchg
rcrb
sbb
jmp
push
roll
mov
fbld
or
scas
arpl
or
das
cmp
dec
outsb
fidivrs
sbb
out
test
es
pop
or
xor
cmpsl
daa
lds
cli
cltd
adc
xor
pushl
lds
mov
leave
shr
ret
hlt
fcmovu
popa
jae
dec
jb
insb
je
push
push
jae
std
jmp
int3
shll
pop
mov
mov
jg
sbb
jbe
vunpcklps
sti
jbe
les
xor
pushl
xor
push
cmpb
iret
xchg
pop
jle
inc
xchg
popa
repnz
jg
cmp
sbb
incl
ret
pop
jl
movsb
js
addl
test
mov
adc
and
push
loope
mov
push
negb
mov
push
push
mov
and
cmp
les
adc
cmp
sbb
jecxz
add
mov
cmp
xchg
inc
scas
nop
inc
sbb
adc
and
aam
aaa
cld
mov
rolb
adc
xor
inc
xor
adc
icebp
incl
mov
loope
push
mov
call
das
int3
test
adc
adc
cld
or
push
addb
push
sbb
mov
incl
lahf
and
jmp
xor
adc
test
add
adc
test
pop
hlt
inc
loope
inc
sbb
xor
inc
or
gs
inc
or
in
scas
unpckhps
loop
ljmp
or
cmp
inc
sbb
pushf
push
popa
lds
decl
or
push
push
js
pop
push
rcrb
add
js
xor
decl
cmp
push
adc
xchg
mov
push
out
add
jbe
jns
jno
push
or
dec
pop
das
pop
cltd
fld
xlat
mov
jno
pop
lret
imul
push
jge
xor
call
or
pop
decl
push
and
insb
int3
jno
test
decl
mov
push
pop
outsb
mov
fcomip
lcall
pop
fstpl
mov
ja
lds
push
inc
clc
pushl
jge
jae
fimull
addl
outsl
clc
mov
mov
call
aad
inc
cmpsb
pop
jl
xchg
ss
incl
pop
or
lds
sbb
daa
pop
push
loop
xor
clc
mov
jns
call
add
decl
xor
xor
mov
cmc
jg
mov
dec
ret
pop
inc
inc
dec
mov
cmp
push
push
outsb
and
out
das
and
and
test
and
jae
std
mov
js
and
xor
call
inc
cmpsb
and
call
out
lods
and
lock
push
cmpsl
aas
adc
mov
cmp
ljmp
ljmp
hlt
add
and
mov
cltd
hlt
cmp
lds
cmc
outsl
ss
push
add
inc
lods
cli
lcall
or
xchg
add
push
ljmp
sbb
int
pop
data16
sub
icebp
cs
call
pop
or
mov
push
ljmp
test
decl
sarb
lock
add
xchg
or
push
test
add
sub
mov
xchg
pop
ds
in
or
ret
mov
popw
sbb
add
sbb
jae
xchg
imul
enter
and
fildll
pusha
imul
sbb
repnz
xchg
lods
dec
xchg
ret
call
pop
repnz
cwtl
inc
xchg
les
movsl
add
push
sarl
lea
xor
iret
sbb
nop
sbb
inc
sarb
jnp
dec
imul
aad
sub
jle
dec
and
xor
add
fimull
push
adc
xor
mov
fwait
mov
cltd
pop
mov
mov
adc
and
call
jo
xchg
mov
and
or
mov
lret
or
adc
cmp
call
or
movsl
sub
mov
xchg
aam
je
mov
movl
call
lds
sbb
out
in
adc
sahf
push
add
mov
add
rolb
inc
and
inc
xchg
aaa
xchg
mov
sbb
jns
loopne
int
in
outsb
jnp
push
inc
mov
pop
imul
push
clc
add
dec
push
psubusb
add
loopne
testb
lock
bound
clc
test
scas
scas
rcrl
xor
fdivrs
aad
jp
or
cs
pop
and
pop
test
sar
add
push
stos
fstps
push
cs
lret
aaa
add
cld
les
and
jb
fcoml
call
cld
or
fs
mov
mov
mov
pop
dec
xor
jge
inc
cmp
jmp
or
ret
mov
mov
dec
stos
stos
sbb
xchg
nop
repnz
mov
fcomip
incl
mov
inc
push
ss
lds
inc
sti
lock
orl
repnz
cmp
pop
adc
and
lret
jb
adc
movsl
es
fistpl
mov
subl
mov
mov
neg
sar
arpl
in
loopne
inc
adc
xor
clc
ljmp
dec
movsb
lcall
cmp
cmp
dec
addl
or
outsb
emms
sbb
insb
add
inc
sub
cmp
push
dec
cmp
lcall
cmp
mov
fidivrs
leave
mov
and
xor
movsb
sub
out
sub
push
dec
ljmp
and
orl
lret
enter
cwtl
and
incl
je
ss
andl
inc
or
adc
sub
mov
jns
lcall
xchg
test
push
fnstcw
call
mov
cmp
ret
sbb
icebp
dec
pop
xorb
pop
xor
jg
stos
leave
mov
mov
sahf
mov
jno
cli
sar
pop
cmc
decl
lds
mov
testl
loope
lds
imul
mov
pop
imul
xchg
movsl
push
sub
adc
adc
aad
jmp
cwtl
sub
pop
push
mov
pop
mov
pop
sub
lret
dec
out
xchg
sub
insl
push
decl
int3
adc
jae
xchg
jne
inc
or
insl
inc
sub
loope
ud0
pop
cmc
push
and
jecxz
xlat
mov
adc
bndstx
inc
call
mov
pop
js
adc
jns
dec
sti
mov
mov
call
xlat
fdivr
movsb
xchg
scas
ds
sbb
call
xchg
movsb
and
jbe
movb
lcall
daa
sbb
sbb
inc
jo
iret
or
ret
xchg
xor
adc
addr16
jg
fldenv
call
mov
lahf
push
jmp
xor
adc
cmpsb
xor
daa
and
jg
jmp
stos
dec
mov
ja
pop
sahf
imul
shll
ret
outsl
cli
jg
adcb
into
mov
mov
cmpsb
or
rorl
je
rcr
pushf
mov
das
out
pop
adc
mov
pusha
ja
js
or
mov
in
gs
jge
sub
cwtl
stos
mov
add
push
adc
fistps
stos
mov
add
inc
bnd
fcmovu
fcmovu
cmc
pushl
cmp
aad
shl
outsl
jne
mov
jp
js
sar
ljmp
push
enter
adc
xor
clc
into
scas
mov
clc
jo
xchg
inc
push
mov
ljmp
out
or
lret
ss
lock
test
cmp
fstpt
out
out
mov
dec
out
in
aam
dec
push
mov
fisttpl
iret
xchg
mov
lock
das
jg
mov
jno
push
push
js
pop
jno
sbb
sub
pusha
xor
mov
insl
rorb
jl
sbb
sub
cmp
dec
call
dec
cs
jne
push
pusha
jo
mov
pushl
inc
or
xor
xor
mov
xor
pop
pushf
push
sbb
sbb
rclb
call
sbb
push
std
xor
sbb
inc
inc
arpl
sub
mov
push
cmp
xchg
popa
je
push
push
pop
jbe
inc
cmp
mov
mov
push
and
cmpsb
adc
inc
adc
das
mov
or
in
dec
jae
lea
dec
add
mov
inc
jne
mov
in
mov
jae
mov
mov
jge
bound
addr16
push
addl
cld
jmp
insl
loope
sub
adc
xchg
and
out
add
push
js
imull
sti
mov
movsb
hlt
js
mov
mov
jg
cmp
cmp
adc
cltd
mov
fdivrs
ljmp
and
mov
dec
jg
cmp
imul
xchg
pop
addb
ljmp
rol
cmp
andl
daa
jg
in
adc
out
int3
testl
sub
and
fsub
pop
loop
jg
decl
mov
add
push
inc
mov
mov
loop
lods
add
jg
and
sbb
push
rolb
add
out
jb
or
add
jl
pushl
mov
shll
sbb
push
xorl
ds
lcall
ss
mov
sbb
sbb
dec
push
and
xor
pushl
inc
sbb
xchg
push
test
inc
cmp
add
mov
incl
dec
xchg
andl
das
sub
test
push
xchg
dec
roll
shll
push
xor
cmc
jne
push
push
mov
jnp
xchg
and
adc
jbe
les
pop
inc
mov
pop
adc
xorb
pushl
dec
push
sbb
xchg
insb
mov
daa
push
add
sub
push
and
js
jp
je
leave
repnz
fwait
xchg
aaa
xchg
in
cmp
gs
stc
loopne
subl
jg
or
add
dec
sub
jmp
cltd
add
ds
add
adc
notrack
es
sbb
cltd
pushf
cmp
sbb
mov
sub
and
and
cmp
aaa
insb
or
insl
in
jmp
adc
sarl
inc
sub
insb
mov
adc
sbb
int
dec
xchg
mov
clc
jg
ljmp
fcomps
int3
adc
ret
and
ret
pop
adc
mov
push
dec
iret
fcoms
ss
pop
sti
ja
push
rclb
lock
repnz
cmp
ja
cli
sbb
mov
hlt
jnp
adc
gs
or
ret
call
data16
xor
cltd
sbb
jae
or
sbb
or
add
add
mov
inc
out
jb
sbb
sbbb
addr16
jno
cmp
mov
cmp
gs
mov
xor
xlat
push
outsl
cwtl
push
inc
jns
pushl
cwtl
les
adc
xchg
dec
clc
inc
ja
inc
add
cwtl
pop
clc
pop
pop
decl
dec
push
roll
push
aas
sbb
gs
out
pop
xchg
pop
pop
daa
push
std
lcall
mov
dec
jg
dec
push
or
cwtl
push
jp
push
cmp
mov
push
add
in
incl
push
xor
jns
sbb
arpl
xchg
ljmp
or
xchg
jns
cwtl
jle
cmpsl
stc
mov
jg
test
mov
aaa
cld
xchg
mov
push
lea
rolb
push
mov
jno
fdivr
cltd
dec
call
lahf
sub
jae
add
je
sbb
xor
lret
fs
fcmovbe
pop
scas
dec
ds
pop
dec
xchg
cmp
push
sub
jbe
lret
adcl
ret
mov
out
adc
inc
aas
lret
sub
lcall
outsb
mov
cmp
and
fistps
push
push
rcll
in
sub
jmp
sub
lret
daa
mov
cwtl
ljmp
add
sbb
add
push
pop
icebp
leave
adc
insl
clc
pushl
and
and
mov
xor
push
pop
jae
addb
jmp
subl
cltd
inc
dec
inc
xchg
sub
mov
lock
idiv
pushl
ss
mov
push
cmpsb
pop
push
inc
sbb
sbb
mov
mov
divl
push
jmp
aaa
jb
xchg
bound
xorl
das
outsb
jo
xor
aas
mov
xchg
das
andl
movsl
cmpsb
push
mov
cmp
push
js
pop
jbe
inc
push
jnp
xchg
xor
icebp
mov
adc
loop
sub
jmp
gs
cmp
cmpsl
sbb
cmc
test
sub
imul
and
adc
jb
jne
adc
mov
loopne
mov
aam
sbbb
jg
cwtl
jb
mov
xchg
int3
jnp
cmpsl
mov
test
loop
dec
cltd
lea
jg
shll
fsubrl
rcrb
lcall
cld
sarb
push
pop
call
mov
jg
daa
insb
mov
fwait
int3
ljmp
jnp
push
lret
mov
pop
in
push
stos
hlt
and
sub
cmp
cmc
mov
mov
in
mov
fistps
aaa
jmp
add
lret
cmp
inc
repnz
pop
cli
nop
clc
jg
lret
fcoml
out
scas
or
fsub
add
lock
mov
inc
pop
jae
hlt
nop
in
mov
and
mov
mov
mov
movsb
jno
insb
inc
jmp
test
pop
sbb
xorl
shll
sbb
shll
push
xor
pop
cltd
push
nop
shll
arpl
jno
rclb
add
mov
cwtl
jae
cmpsl
jae
lret
adc
push
xchg
push
pusha
push
test
jg
pushf
pop
insb
out
inc
dec
movsb
jnp
ss
cltd
ja
dec
ret
cli
jnp
outsl
lcall
mov
popl
mov
or
jmp
xchg
jnp
imul
mov
xchg
and
rclb
fldcw
jp
fisubl
test
lds
cmpsl
jp
cmpsl
sub
jle
mov
fwait
dec
mov
xchg
mov
jmp
ja
or
test
and
jo
inc
ljmp
mov
aad
sub
mov
std
fbld
mov
shlb
mov
lret
xchg
fwait
mov
mov
mov
ljmp
clc
dec
leave
enter
negl
inc
frstor
negb
adc
jae
sarb
aas
add
mov
jmp
add
sbb
vmovntps
cmp
pop
jo
clc
jmp
mov
mov
add
inc
dec
sbb
jbe
mov
incl
cmp
fwait
xor
xchg
push
out
clc
mov
pop
pop
mov
repnz
xchg
mov
call
decl
inc
push
inc
enter
pop
xor
fisttps
xor
jne
xchg
ret
iret
push
cmp
sbb
push
sub
daa
stc
jbe
mov
decl
pop
dec
or
mov
jbe
mov
js
mov
or
or
lock
pop
mov
jg
decl
js
mov
add
mov
stos
lds
jno
cwtl
cmpb
cli
loopne
xchg
fld
dec
mov
cld
mov
test
inc
cld
mov
test
adcl
shlb
and
test
jg
sub
lods
scas
adc
cmp
and
flds
mov
mov
mov
bnd
jnp
int3
dec
sub
or
push
mov
pop
dec
lret
pop
popa
in
adc
rorl
addr16
xor
jmp
adc
jge
fwait
cltd
add
jo
xor
loope
jb
in
flds
xorb
incl
jbe
das
push
fimull
sbb
mov
pusha
sbb
mov
xchg
jg
pushl
xchg
and
xchg
ds
jnp
xchg
and
sbb
xor
imul
cmp
mov
and
pop
das
decl
iret
dec
mov
jp
nop
aas
sbb
lds
enter
nop
aaa
lds
jg
inc
cld
jae
cmpsl
mov
inc
pop
ja
sbb
adc
mov
pop
in
mov
push
and
ret
dec
cmpsb
imul
jae
les
xchg
cmp
and
mov
cmp
sub
xor
mov
xor
roll
cli
stos
lcall
push
mov
add
rcl
ljmp
pop
adc
mov
and
ficoml
mov
ljmp
leave
callw
mov
enter
shrb
ljmp
ret
lds
out
inc
mov
add
into
ljmp
cmp
sbb
push
cmp
ljmp
and
nop
insl
add
add
sbb
fnstenv
nop
and
adc
pop
rcrb
cltd
sbb
adcb
popf
scas
sbb
xchg
sbb
gs
cmp
mov
aas
test
or
mov
jnp
test
rorb
fstp
mov
incl
ret
jbe
icebp
fdivl
jl
inc
out
jbe
stc
pop
mov
cmp
dec
dec
jbe
xchg
out
ret
jmp
pop
xchg
movsl
push
cmp
outsl
clc
ret
js
shlb
ret
sbb
xchg
lock
and
shlb
push
add
imul
lock
lds
xorb
ljmp
cmp
ljmp
mov
test
fldt
fnstcw
xor
jo
dec
cmp
insb
and
mov
pop
clc
lcall
jecxz
lret
aad
mov
mov
incl
in
daa
sub
sub
sub
into
stos
incl
pushf
int
pushf
in
dec
dec
push
scas
outsb
out
hlt
jl
pop
jge
sub
lods
lcall
call
add
popa
add
push
aad
add
jmp
aaa
cld
fcom
inc
adc
add
jb
daa
and
and
pop
js
push
pop
nop
mov
lcall
add
xchg
dec
mov
loope
pop
inc
or
jmpw
sarb
pop
aas
call
pusha
sbb
lea
sub
xor
xchg
rclb
xchg
inc
push
cmp
cmp
fadds
sbb
add
jmp
push
aaa
aad
cmpl
aaa
adc
xchg
xor
or
inc
pop
inc
out
xor
mov
mov
jge
dec
mov
push
jns
mov
inc
out
jle
ret
mov
sbb
shl
dec
mov
mov
mov
jno
and
adc
fs
jg
push
out
push
ljmp
loope
imul
jl
stos
cmpsl
ds
test
sbb
mov
lea
jb
cltd
lahf
mov
scas
out
les
pop
call
cld
jmp
or
jl
adc
push
insb
xchg
aas
out
lock
out
xor
adc
ret
call
pop
insl
cmp
insb
icebp
mov
sti
fwait
int3
xor
testb
pushl
sbb
sbbl
fldt
jnp
adc
add
cs
adc
ret
mov
or
push
loop
xor
call
mov
mov
mov
lcall
push
jno
ffreep
or
mov
sbb
ret
loopne
enter
push
or
pushl
mov
mov
lods
dec
xchg
movsb
mov
es
shlb
push
pop
lds
jne
push
scas
push
pop
push
mov
outsb
inc
movsl
adc
mov
push
subl
dec
das
adc
lcall
pop
lea
mov
dec
imul
pop
std
dec
mov
ja
fdivrl
jmp
lods
sub
daa
icebp
decl
xchg
mov
fcmovnu
xor
sbb
je
fstl
or
outsl
jecxz
sub
jne
fidivl
outsl
in
insl
fnstsw
push
test
insb
repnz
pop
push
gs
inc
xchg
add
pop
mov
adc
and
test
add
jp
repnz
out
mov
sub
jge
cmp
in
inc
cmpsl
ss
incb
mov
rol
cmpsl
inc
pop
sbb
mov
pusha
es
movl
lahf
or
push
rol
or
adc
adc
js
lock
sub
and
movsb
int
pushl
cmpb
pusha
outsl
ds
jbe
popa
int3
jno
and
das
rcr
adc
mov
push
imul
leave
incl
mov
mov
xchg
mov
or
adc
xchg
or
es
imul
inc
cmp
mov
cwtl
pop
xor
cmp
orb
jmp
push
call
and
inc
or
in
rorb
or
punpckhdq
incl
add
pop
roll
jg
fiaddl
cmp
outsl
rcrb
incl
jecxz
or
sub
cmp
push
mov
mov
push
cmp
decl
es
lea
cmpsb
xchg
in
lea
or
in
xchg
sub
insb
mull
jg
dec
cld
cmp
into
repnz
loop
sti
sub
mov
push
push
sbb
jno
push
stos
xchg
lock
fcos
leave
into
insl
or
xlat
aaa
shrb
lcall
xchg
lea
loopne
fdivr
sub
mov
cmp
mov
ss
mov
decl
mov
mov
push
jbe
lea
push
popa
adc
lcall
insb
push
stc
hlt
rorl
jns
mov
mov
movsl
adc
cmpsb
jno
test
push
pop
xchg
lds
jge
mov
cmp
mov
cmp
and
push
insl
push
mov
ljmp
jl
jp
das
inc
mov
cltd
mov
push
test
loop
sbb
testb
jg
add
dec
or
jo
or
leave
xlat
sbb
testb
lcall
sub
sbb
or
les
sub
dec
test
and
add
or
jg
aaa
cld
mov
mov
fisttpll
inc
int
aaa
out
sbbb
push
incl
in
and
in
mov
add
lahf
ljmp
in
pop
fsubr
lods
mov
ljmp
cmp
ss
outsl
cmc
mov
dec
imull
jl
mov
inc
fwait
jmp
shl
push
mov
mov
xchg
inc
movd
pop
push
addb
lahf
or
test
jl
add
ret
xchg
cld
lcall
mov
popa
jns
lea
or
jle
loope
push
mov
xor
mov
ja
mov
mov
fcoms
jne
in
dec
sbb
pop
leave
test
les
adc
addr16
stos
or
addr16
jmp
jecxz
mov
mov
addb
mov
fildl
fidivl
sub
sbb
sub
push
and
mov
and
stos
push
test
xchg
jb
mov
movsb
or
fildll
add
clc
pop
and
stc
loop
jae
cmc
dec
outsl
jge
pushf
jmp
jo
cmp
sbb
cmp
xchg
lcall
jb
inc
dec
lcall
jmp
mov
mov
pop
loope
addr16
dec
movsb
and
cmp
add
cmp
orl
dec
mov
clc
out
scas
mov
call
sbbl
mov
pop
insl
push
xorps
pop
negb
orb
mov
xchg
movsl
jge
stos
fbstp
dec
pop
dec
sub
add
bound
outsb
gs
jle
aam
shr
scas
and
andb
mov
cmpsb
test
lret
decl
add
insb
sub
push
das
fs
lret
orl
pop
push
cmp
push
enter
int3
ljmp
push
push
cmp
mov
lcall
int
pop
shrl
mov
call
ds
into
adc
inc
xor
leave
add
pushl
xchg
cwtl
mov
addr16
in
flds
mov
sbb
gs
mov
jmp
shrl
cmc
mov
cmp
cmc
ljmp
in
loopne
push
in
push
fwait
dec
cwtl
cmp
mov
call
cwtl
call
push
outsl
push
adc
in
mov
fcoml
xor
icebp
jnp
xor
mov
mov
rcrb
fs
add
aas
sbb
subl
jae
xor
dec
test
dec
rorb
sbb
popf
sbb
mov
and
xchg
push
in
mov
repz
or
dec
mov
lcall
std
push
and
repz
stos
pop
jae
into
or
orl
mov
idiv
lcall
mov
mov
lcall
dec
pop
adc
pop
inc
test
xchg
cmp
repnz
push
sbb
mov
enter
pop
int
jg
sbbl
or
jb
xchg
or
sub
lcall
nop
pop
mov
inc
add
inc
lret
les
xchg
push
fildl
mov
sub
addb
cmp
push
cmp
xchg
out
xor
pop
mov
fcomip
xchg
xchg
cld
inc
clc
addr16
push
cwtl
add
out
sbb
dec
push
ror
decb
es
dec
lods
or
fnstcw
add
aam
insb
adc
aas
leave
pop
and
mov
ja
xchg
sahf
push
sbb
decl
jo
shll
or
lahf
fisubrl
orb
jp
roll
pop
cld
mov
xchg
gs
pop
nop
cmp
test
stos
int3
xor
dec
in
sbb
pop
cmp
roll
xor
call
subb
cmpsb
stos
or
out
add
jmp
push
es
repz
push
fadd
xchg
incb
adc
push
jl
mov
sbb
pop
dec
adc
push
mov
mov
repnz
jp
out
or
sti
mov
insl
xor
rolb
call
xor
imul
test
lret
fmull
pop
fmuls
arpl
add
adc
xchg
xor
ret
mov
jge
pop
cltd
mov
jno
ljmp
jmp
call
xor
test
nop
daa
aas
sbb
fadds
in
add
inc
or
cmp
jecxz
sahf
and
fisttps
adc
dec
hlt
arpl
xchg
cmp
mov
out
ljmp
mov
jp
adc
fwait
dec
enter
js
sub
inc
mov
xchg
dec
push
mov
ljmp
jns
shrb
mov
cmpsb
and
lret
dec
inc
jbe
mov
pop
stc
lcall
jmp
sub
pop
add
mov
jno
data16
jg
or
and
ds
scas
pop
mov
fwait
rcl
push
pop
xor
outsl
pushl
push
test
add
js
add
cmp
pop
ftst
adc
pushl
in
mov
cs
loope
sub
mov
and
sub
mov
jmp
jg
lock
js
mov
jns
mov
xor
les
lods
jno
lcall
repnz
ljmp
mov
sbb
inc
mov
lcall
ljmp
lahf
test
es
xor
xor
mov
jo
add
mov
push
in
mov
sti
pop
hlt
out
ss
pop
push
andl
fwait
inc
ljmp
inc
mov
popa
cmp
adc
pop
sbb
cmp
mov
pushl
pop
mov
pop
mov
int
inc
aam
mov
filds
adc
sbb
mov
cmpsb
aas
ret
push
je
and
call
cwtl
pop
mov
fimull
js
pop
orl
scas
fmull
arpl
lock
add
leave
jecxz
roll
ss
mov
mov
mov
test
jnp
mov
imul
lods
mov
int
das
into
enter
call
dec
xor
sub
fwait
mov
test
mov
mov
inc
push
imul
loop
test
xchg
push
les
jecxz
xor
mov
lcall
dec
cmp
mov
lahf
dec
mov
mov
mov
push
mov
sbb
cltd
pop
push
and
xor
dec
or
roll
sbb
es
add
stos
insb
inc
mov
push
jne
stos
mov
inc
leave
sub
rcll
push
mov
pop
je
daa
shl
pusha
and
icebp
sarl
push
mov
sub
xchg
scas
rcll
dec
and
incl
xchg
inc
sbb
mov
mov
mov
mov
or
shlb
stc
shrl
mov
stos
ret
sub
es
imul
mov
fsubrs
decl
mov
sub
sbb
andl
inc
or
ret
rorl
inc
pop
arpl
cmpsl
or
sub
push
aam
inc
or
mov
loop,pn
pop
or
sbb
rcrl
arpl
xchg
test
notb
shll
fs
scas
dec
das
loop
aas
cwtl
or
or
sbb
jne
and
or
inc
scas
xchg
adc
pop
cld
jmp
and
sbb
rorb
mov
ljmp
sbb
pmaxsw
adc
repz
cmp
fwait
mov
sub
repz
hlt
ljmp
add
lahf
repnz
push
loopne
adc
and
fisubrl
ret
ljmp
mov
dec
xor
sar
incl
sbb
xor
rol
pushf
xor
lods
shlb
xor
jmp
aam
lds
mov
cmp
mov
ret
andb
dec
jmp
ret
mov
loop
push
stos
out
jo
sahf
test
ficompl
stos
pushf
cmpsl
arpl
fptan
out
and
leave
int3
mov
imulb
dec
jmp
jns,pn
inc
jo
pop
jo
push
shrl
rolb
or
push
or
stos
mov
adc
jmp
pop
xor
cld
jg
ds
mov
push
daa
add
mov
cmp
jg
sbb
or
mov
loop
add
mov
xor
in
xor
push
lcall
imul
mov
movsb
js
mov
lret
and
mov
pop
xor
sbb
rcrl
hlt
mov
mov
sbb
jb
and
jl
pop
mov
dec
aad
decl
cli
inc
sti
stos
push
push
bound
or
aas
push
add
movsb
xchg
or
sbb
pusha
xor
xor
jp
xchg
jmp
stos
sub
std
call
mov
mov
mov
incl
in
xchg
call
dec
push
jno
leave
xchg
and
jecxz
mov
enter
jg
incl
and
sbb
aas
imul
adcl
inc
cmp
int
incl
push
incl
add
les
orl
or
mov
mov
adc
shr
cmp
pop
rcll
sbb
xor
dec
pop
mov
lock
lahf
cmp
add
movsb
adc
fmulp
daa
stos
inc
and
pusha
xchg
jge
fsubrs
mov
sti
push
cmp
out
dec
push
jg
gs
test
cmp
jle
mov
lcall
les
mov
movsb
and
push
mov
lds
dec
dec
mov
call
mov
xchg
sbb
jp
lret
xor
xor
mov
mov
pop
and
or
xorl
scas
subb
cmp
jns
sbb
fwait
mov
mov
sbb
sub
outsl
push
sbb
ljmp
inc
inc
shlb
repz
cmp
test
call
mov
dec
dec
xor
xchg
adc
adc
push
xchg
push
in
fidivs
sbb
gs
ret
mov
sub
inc
pushf
lock
call
icebp
sub
pop
mov
sub
inc
sbb
jp
rorb
rorb
fnsave
cmp
jmp
jnp
mov
hlt
ret
leave
jg
mov
stos
mov
sbb
das
jnp
pushl
mov
stos
xor
mov
and
add
test
jmp
mov
cli
xchg
add
ds
sub
xchg
jb
jle
pop
lcall
inc
inc
movsb
dec
add
push
stos
movsb
mov
jae
push
aam
jbe
ficoml
shr
adc
pop
mov
fstl
rcrb
xor
pop
cmc
dec
sbb
mov
lea
aaa
jge
push
push
lcall
pusha
mov
movsl
ljmp
rcrb
or
push
pop
sbb
fsts
pop
jp
or
cmc
sbb
sbb
mov
popa
scas
pop
adc
mov
pusha
repnz
ret
call
inc
in
sbb
mov
push
dec
mov
stos
dec
mov
loop
popf
mov
rcrb
mov
ljmp
js
push
xchg
loop
push
mov
add
js
aas
push
mov
jns
xor
xchg
and
mov
shrl
vmovdqu
rcll
adc
xor
adc
ljmp
test
stos
ss
xchg
push
shrl
xchg
nop
pop
outsb
or
push
cwtl
jo
cmp
xchg
ja
mov
bnd
insl
rcr
jno
sub
adc
jg
adc
xchg
ja
pop
adc
call
je
mov
sbb
sub
jnp
daa
loopne
mov
or
dec
mov
test
dec
cwtl
push
pop
push
inc
mov
movsb
jg
push
or
sub
mov
mov
nop
pop
mov
jnp
inc
or
pusha
cltd
xchg
sub
add
out
fstps
adc
add
mov
mov
push
add
out
clc
jg
pusha
pop
xchg
pop
cmp
cld
enter
adc
mov
scas
mov
lods
cli
jmp
loope
jbe
pop
cmpsb
and
cmp
loope
dec
popa
adc
mov
je
mov
or
xor
movsl
pop
shrb
sub
xchg
loop
lds
inc
mov
inc
cmpsb
mov
icebp
mov
jecxz
mov
popa
push
mov
or
bound
xchg
fwait
pop
adc
dec
jnp
sbb
jg
pop
sbb
shl
mov
or
cli
hlt
xchg
mov
push
stos
push
jg
or
mov
decl
xchg
mov
cmpsl
dec
cmpsb
cmp
nop
mov
xor
lahf
fadd
aas
mov
into
dec
shll
inc
imulb
mov
arpl
xchg
in
arpl
lcall
xor
sti
add
xorb
sub
pusha
cmp
lods
push
mov
clc
cmc
les
and
fmuls
mov
sbb
pop
cmc
ljmp
shrb
aam
or
mov
insl
lcall
ljmp
or
mov
inc
mov
clc
lret
push
adc
sub
dec
cmp
sub
popa
adc
addb
mov
sbb
cli
ljmp
int3
and
in
push
mov
sbb
or
push
pop
into
out
lods
decl
add
push
rcrb
bound
xchg
sub
lock
popf
sahf
mov
fs
cli
inc
dec
mov
icebp
push
and
ja
pushl
inc
shll
enter
fst
int
imul
or
clc
addr16
jae
sbb
sahf
fcomip
ljmp
dec
mov
jge
loopne
enter
jnp
test
icebp
mov
or
call
shlb
or
mov
pop
pusha
jmp
lea
and
call
mov
mov
hlt
bound
sub
inc
add
stc
mov
dec
data16
or
aad
repnz
mov
test
push
mov
fsubr
addb
mov
cwtl
mov
cmp
dec
faddl
mov
pusha
je
sub
inc
orb
ljmp
addr16
outsb
orb
fsubrp
cmp
call
cs
inc
bndldx
call
xchg
ret
adc
sahf
mov
pop
jo
les
xchg
and
dec
push
lret
pop
in
out
xor
decl
incl
imul
cld
scas
arpl
daa
hlt
in
int3
mov
dec
xor
sti
xchg
cmpsl
mov
sub
iret
inc
imul
push
mov
mov
xlat
push
adc
mov
inc
lcall
sub
mov
fisttps
or
mov
incl
outsb
clc
not
xor
mov
add
pushl
dec
jl
stos
pusha
pop
ret
pop
pop
cmpl
jb
aaa
cld
ja
xor
add
popa
xor
fmulp
ds
sbb
dec
out
push
ljmp
ret
lea
nop
cmp
sbb
sub
mov
lods
adc
test
in
das
pusha
and
call
lods
add
pop
add
outsb
sar
jl
stos
loop
cli
add
adc
xchg
outsb
shrb
jp
scas
out
in
fidivrs
out
push
mov
out
sub
mov
xchg
mov
adc
sbb
ljmp
cmpb
push
mov
fisubrs
movsl
sbb
xor
xchg
jle
fwait
jnp
imul
popa
ljmp
es
sbb
imul
loop
fsubrs
fdivr
dec
leave
pushf
or
xchg
aam
enter
xchg
aad
aaa
sub
mov
popf
aad
in
and
jle
ljmp
jbe
or
daa
and
cmp
jle
push
pop
inc
mull
jnp
incl
fisubl
adc
and
xlat
lret
add
aam
sub
les
jle
mov
testl
jmp
sbb
rorb
mov
fs
pop
jle
cmpsl
clc
dec
or
cli
ljmp
push
aam
cmpsb
stos
mov
std
fstps
stc
pop
and
scas
call
cmp
pop
cwtl
faddl
lods
inc
or
add
push
pop
mov
adc
loope
incl
data16
mov
adc
adc
xor
insb
inc
fbstp
adc
mov
jmp
inc
les
adcl
sahf
cmp
rcrb
into
push
pushf
adc
rcrl
add
push
incl
push
mov
loope
mov
addr16
test
jb
pop
mov
jno
and
xor
mov
mov
scas
pop
jg
das
mov
sub
and
sbb
pop
loop
out
loope
mov
int3
xlat
pop
push
and
sbb
mov
decl
xchg
jle
xchg
push
out
es
cld
or
xchg
shll
adc
jmp
sbb
add
jnp
fwait
add
push
loope
fwait
fwait
adc
ljmp
shlb
cs
fidivs
scas
ret
sub
repnz
cmp
je
mov
mov
bnd
jae
push
test
neg
xchg
jo
icebp
decb
clc
das
js
ljmp
sti
std
jmp
push
jl
aaa
loopne
add
fcomip
or
and
fsubs
out
fnsave
cwtl
pop
or
cmp
push
jecxz
ljmp
in
aad
mov
xchg
int
outsb
or
and
es
clc
fildll
call
call
sbb
pop
ljmp
orb
push
mov
sub
and
mov
pop
dec
xchg
adc
incl
movl
dec
xchg
pop
ret
mov
lcall
stos
mov
bound
fwait
imul
lret
sahf
outsl
mov
cli
sub
incl
adc
int
inc
gs
nop
inc
or
push
xchg
push
adc
adc
cmpsb
out
xchg
jno
jmp
jmp
pushl
sbb
xor
push
inc
fstl
inc
sarl
xchg
scas
mov
test
dec
jno
adc
rol
sbb
jmp
in
pop
xlat
xchg
pop
pop
flds
jmp
iret
add
inc
or
sbb
mov
fwait
adc
ds
pop
arpl
cltd
mov
jno
inc
and
ljmp
rcl
push
mov
fnstenv
aas
inc
xor
mov
inc
mov
nop
inc
jb
ret
or
pusha
pusha
orl
ljmp
sar
jge
xchg
or
sbb
push
jns
xchg
clc
pop
insb
incl
cmp
popa
and
cld
and
jge
and
mov
or
jg
and
lahf
test
mov
fdivrl
shl
push
xchg
fcomip
call
leave
and
and
mov
sbb
fcompl
test
jg
mov
mov
loop
in
dec
jle
fs
inc
repnz
xchg
bound
mov
lahf
jns
push
mov
and
lea
jmp
add
jns
jge
mov
addr16
jle
xor
jp
fdivr
lcall
sahf
add
cwtl
mov
cmp
call
xchg
xor
sbb
jns
ljmp
ret
pop
jmp
scas
mov
rcrb
lods
cmp
pop
push
scas
cmp
mov
jl
fisttpl
and
push
pop
rcrb
mov
dec
mov
fldt
testb
sbb
jecxz
cli
xchg
or
leave
add
jp
jmp
cwtl
lret
pop
pusha
and
add
shl
jns
sub
ja
mov
dec
repz
fisttps
cld
mov
inc
fwait
test
test
clc
mov
sbb
sbb
js
test
mov
jbe
jp
test
cmp
jmp
fabs
adc
xor
ffree
addr16
sub
adc
or
adc
popa
shlb
push
push
xchg
scas
addl
xorl
subb
and
fldl
dec
cmp
nop
add
and
and
into
inc
and
sub
dec
jns
lcall
xchg
enter
inc
lea
and
adcb
xchg
out
test
cwtl
test
and
cmp
pop
lods
decl
mov
mov
inc
or
sahf
sbb
xor
leave
lret
dec
call
clc
movsb
out
mov
shl
pop
push
pop
cwtl
clc
mov
push
movsl
leave
je
mov
sbb
cmp
loopne
push
xor
loope
inc
inc
mov
push
addb
lcall
pop
adc
and
push
cmp
iret
es
or
gs
jmp
rcrb
dec
inc
test
je
mov
into
pop
xor
pusha
or
fcomps
jle
mov
iret
faddl
incb
pop
mov
cmpsb
pop
xchg
or
push
cwtl
sar
ja
ret
orb
addb
jae
jp
add
push
inc
shll
das
pusha
jns
imul
decl
mov
int
icebp
or
loop
inc
and
xchg
push
xchg
outsl
clc
decl
sub
movsl
mov
cmp
daa
ret
ret
sub
push
and
mov
pop
int3
mov
stc
pop
mov
loop
int3
sub
das
into
cmpsl
xchg
dec
mov
aam
sbb
pushl
test
push
rcll
movsb
popa
scas
dec
popa
pop
inc
jmp
xor
mov
adc
mov
push
xor
ds
test
push
adc
loop
xlat
enter
mov
call
aaa
add
push
inc
dec
lds
pop
imul
mov
mov
sahf
dec
movsl
call
decl
xchg
je
sub
gs
loopne
cmp
dec
mov
inc
add
rclb
jg
lock
push
add
mov
pop
adc
lcall
stos
push
jo
xor
jns
rorl
jle
pop
out
mov
push
mov
xlat
cmp
push
pop
sarb
mov
mov
std
pop
in
sub
pop
into
mov
cli
mov
jg
pusha
adc
xor
jno
sahf
xchg
jno
pop
or
incl
adc
xor
fwait
or
and
xchg
jle
arpl
fwait
inc
sub
pusha
fcomps
push
xchg
fwait
mov
mov
cltd
inc
dec
xchg
ret
loopne
pushl
lock
loope
xor
test
adc
xchg
or
and
add
call
and
lret
movups
push
shll
xorl
lods
push
jecxz
sbb
decl
aam
xor
mov
imul
mov
cmp
call
leave
mov
pop
xchg
adc
or
lods
push
jle
fidivrs
arpl
dec
or
xor
fsub
cs
mov
mov
cltd
testb
and
inc
cltd
daa
inc
sbb
lods
adc
or
dec
inc
mov
xchg
jmp
fldl
icebp
ljmp
add
dec
cmpsb
mov
cld
test
clc
ljmp
movb
stc
scas
and
push
mov
push
push
xor
xlat
fcompl
inc
jp
movsl
push
outsl
test
xchg
fwait
cmpsl
lcall
or
xor
cmp
xor
icebp
xchg
test
lcall
ljmp
fs
call
pusha
rol
mov
jmp
shrb
push
xor
dec
test
decl
mov
rolb
add
sbb
mov
sub
dec
sbb
clc
sbb
shrl
and
push
jp
dec
inc
lahf
push
lcall
or
inc
mov
stos
sub
pop
xor
lock
arpl
clc
dec
add
ljmp
mov
jae
sahf
mov
jecxz
jb
mov
inc
sub
fstps
cmp
nop
jnp
mov
pushf
xor
into
lret
jle
fs
xlat
scas
or
mov
lcall
out
jno
call
std
jns
jp
xor
pop
imul
add
incl
repnz
jecxz
sbb
or
test
jmp
stos
xlat
push
add
lcall
arpl
or
lods
sar
cmp
cmp
cmp
add
xchg
pop
hlt
dec
sbb
jmp
mulb
push
cli
fldt
mov
sub
adc
aaa
push
cmp
inc
les
and
andl
mov
sbb
pushl
lds
addr16
mov
fstl
sbb
rol
jne,pn
div
or
pop
adc
jo
loop
pop
rclb
or
jmp
pop
mov
mov
subl
xor
mov
sbb
jl
inc
adc
lock
in
mov
int3
decl
aam
test
js
inc
and
lret
dec
adc
add
add
mov
int3
pushf
decl
lock
xchg
mov
pusha
adc
and
inc
int
mov
shlb
iret
les
cmp
iret
movsb
push
xchg
xor
pop
push
nop
inc
xchg
int
sub
cmp
sbbb
pop
mov
mov
mov
push
rorl
fimull
mov
push
in
decl
jno
in
dec
bound
popa
mov
pushf
sub
mov
mov
mov
lahf
mov
pop
call
dec
call
adcl
sbb
jmp
fcoml
decl
inc
lock
mov
int3
inc
and
cmpsb
inc
bound
fdivrp
pushl
es
dec
enter
inc
outsl
cmc
sbb
add
sbb
mov
jbe
clc
pushl
jp
dec
sub
mov
lods
push
add
add
xor
or
inc
movsl
lds
mov
xor
jg
or
pop
pop
mov
nop
stc
sub
add
push
push
add
fbstp
mov
inc
rorl
push
add
add
mov
dec
dec
xchg
decl
imul
xchg
lods
pop
loopne
cmc
cmovno
decl
dec
shll
or
cltd
add
leave
popf
inc
inc
stos
adc
pushl
or
pop
xchg
rcr
inc
stos
dec
push
stc
inc
push
sbb
sub
fisubl
test
call
rorl
push
aad
xor
adc
sbb
in
sbb
leave
fiaddl
aad
in
in
mov
loope
pop
daa
jne
adc
fdivr
lea
lock
sub
lcall
lcall
mov
mov
jb
mov
push
adcl
movsl
push
mov
movsb
out
push
test
add
test
aad
inc
add
stos
bound
out
pop
bound
loope
inc
xchg
bound
dec
ljmp
inc
stos
add
sub
pop
test
xchg
cs
jl
stc
fsubs
inc
lcall
sbb
data16
jg
or
mov
arpl
iret
mov
fisttps
cmpl
insb
bound
std
shl
fildl
rorb
or
andb
mov
lcall
add
inc
cmp
rorl
cwtl
jecxz
popa
rolb
pusha
add
push
pusha
xchg
arpl
loope
lds
adc
adc
loop,pt
inc
inc
mov
inc
sbb
jns
xchg
addb
cmpsb
aad
jg
xchg
jnp
sbb
dec
roll
sbb
icebp
incl
gs
xorl
mov
test
mov
inc
cmp
rcrb
fsubp
out
cli
ljmp
cli
mov
ds
popa
loope
lods
andb
sahf
adc
jl
push
adc
das
sbb
mov
and
cli
cmp
lcall
xor
sbb
leave
lea
sbb
and
shl
incl
sbb
bound
in
sahf
push
lock
mov
jle
and
and
mov
pop
into
pop
scas
or
pusha
loop
xchg
jp
scas
pop
fbstp
dec
enter
mov
stos
dec
add
pop
pushf
inc
push
pop
mov
pushl
loop,pn
add
and
lods
es
loop
rcll
mov
sbbb
add
xchg
ror
mov
inc
xor
ffreep
in
cld
data16
mov
jbe
cmpsl
jb
or
dec
push
daa
cld
ja
mov
xchg
or
lret
mov
pushl
data16
movsb
push
rcrl
aad
sbb
pushf
rorl
loope
mov
das
mov
sbb
orl
pusha
das
cli
jmp
nop
in
push
dec
dec
or
stos
adc
jno
loope
decl
sahf
and
sahf
rcrl
and
mov
push
mov
jmp
icebp
dec
mov
sbb
in
shlb
mov
dec
add
push
push
xchg
shll
mov
in
mov
jmp
and
lea
jb
ror
dec
sbb
andl
test
gs
mov
fs
xor
inc
add
xor
mov
ss
push
and
mov
jae
pushl
cld
inc
mov
test
lds
inc
lret
test
sarl
int3
inc
shr
pop
gs
ljmp
incl
test
movb
pop
or
decl
dec
sbb
out
mov
lahf
out
test
js
mov
dec
fsubrl
lcall
push
rcr
imul
jmp
mov
inc
push
incl
dec
push
push
inc
arpl
inc
sbb
xchg
fdivl
xchg
orb
pop
pop
and
jbe
inc
stos
xor
nop
dec
pushf
insb
jns
test
adc
pushf
jns
scas
sbb
or
sar
xlat
gs
or
inc
or
push
loope
and
mov
push
int3
pop
in
shr
sbb
pusha
pop
adc
ljmp
fsubs
test
and
insb
sub
aam
pop
cmpsb
call
inc
push
sbb
sub
fs
pop
test
ret
and
inc
call
lock
arpl
imul
into
stos
aam
out
bound
fnstsw
sub
mov
mov
fucompp
dec
insb
movsl
xchg
aam
pop
or
or
push
je
nop
xchg
decl
pop
ficoms
daa
inc
push
inc
clc
xchg
dec
and
mov
sub
push
fwait
sbb
in
orb
lock
mov
mov
fcmovnu
shll
jle
repnz
rcr
lods
or
insl
int
insl
inc
push
xchg
insl
orl
ljmp
outsl
ljmp
adc
sub
popf
push
fcmovnu
into
lds
in
adc
sahf
inc
xor
fisubl
pop
enter
in
aaa
data16
inc
mov
sbb
scas
cmpsb
dec
aam
insl
call
cmpsb
push
test
cs
add
sub
or
test
push
or
inc
or
or
les
nop
ja
fmuls
sbb
pop
in
fldenv
ffree
dec
xchg
jl
inc
push
push
xchg
jns
lods
mov
cld
mov
adc
cltd
push
daa
and
repnz
popf
hlt
dec
dec
jg
inc
dec
mov
dec
adc
pop
andl
pop
cmc
cld
ljmp
rcrl
or
pop
pop
jne
popf
dec
mov
lcall
jle
ret
fsubs
sub
mov
incb
push
pushl
call
mov
or
sbb
lret
ja
mov
or
or
orb
das
shlb
cmp
sbbl
jecxz
ds
pop
ret
pushl
arpl
or
inc
sbb
inc
and
or
fs
iret
andb
inc
lret
andb
inc
or
or
dec
outsl
and
dec
es
pop
hlt
cmp
jo
push
shl
mov
ss
je
mov
je
inc
and
call
dec
inc
dec
je
push
inc
inc
xor
jecxz
decl
mov
mov
inc
sub
or
or
jecxz
movb
test
jmp
fidivrs
hlt
test
decl
inc
shrl
aas
cmc
pushf
push
int3
cmc
sub
mulb
loope
jmp
mov
inc
in
adc
decb
mov
push
cmpsl
dec
cmc
xor
filds
mov
jae
and
int
lret
jo
in
lcall
pop
jge
pop
scas
sarl
sbb
aad
fbstp
dec
mov
repnz
lods
or
mov
xchg
mov
cs
adc
push
loope
fcomip
jp
mov
sbb
loop
sti
push
mov
inc
push
std
add
mov
or
adc
sbb
sbb
mov
xor
decl
call
sahf
adc
sahf
inc
shrb
loopne
lcall
in
xchg
lar
lcall
lcall
ljmp
inc
mov
fistps
push
add
aas
lcall
lock
add
or
sbb
sarl
jmp
incl
jp
mov
xchg
adc
push
ret
scas
xor
jo
scas
lcall
rcr
decl
and
cmovs
jl
add
push
sbb
test
cmp
cmpl
add
cmp
aam
in
sbb
ljmp
js
daa
add
cmpsl
js
cmpb
sbb
clc
xchg
lret
loopne
sbb
jmp
mov
add
pop
rol
jns
xchg
adc
adc
dec
outsl
cli
decl
adc
insl
jp
icebp
xor
mov
jne
popa
mov
imul
mov
iret
or
xchg
jb
shll
inc
mov
aam
pop
sti
xor
fadds
shlb
mov
ja
cmc
ficompl
xor
call
sbb
insb
push
mov
or
cltd
push
inc
es
sbb
les
xchg
adc
loop
jbe
cmp
loopne
adc
sbb
inc
scas
repnz
ljmp
mov
jmp
cli
in
sub
jge
pop
jge
aaa
adc
decl
pop
sarb
adcl
test
div
mov
mov
leave
mov
pop
fldt
jb
leave
ret
push
lcall
xchg
mov
call
pop
sbb
roll
sbb
jg
mov
mov
pop
fsubrp
inc
add
dec
pusha
lea
js
lcall
sbb
or
lret
and
mov
xchg
cwtl
add
inc
add
or
daa
jo
xor
inc
cld
xor
andb
inc
test
mov
or
es
ret
sub
dec
cmpsb
shlb
and
and
add
lock
mov
push
js
push
js
pop
inc
mov
insl
xchg
sbb
mov
es
data16
jecxz
fistpll
iret
mov
or
mov
dec
lahf
repnz
sub
xchg
scas
adc
jnp
imul
decl
idivl
pop
stos
test
sub
clc
out
pop
xor
loop
adc
clc
jg
ljmp
jb
add
push
xor
fisttps
clc
add
cwtl
jno
incl
push
xchg
jnp
lea
dec
push
sbb
add
loop
decl
imul
rol
and
hlt
mov
je
fisttpll
test
fmuls
sub
rcrb
loop
push
mov
fs
mov
test
mov
push
xor
sub
sbb
movsl
mov
jb
fwait
sbb
push
lods
popa
in
scas
shlb
xor
and
out
cli
das
test
movsl
mov
push
and
incl
je
cmc
out
rorl
mov
repz
mov
xchg
pushl
mov
adc
out
cmp
sbb
outsl
les
and
adc
inc
inc
std
mov
call
mov
inc
hlt
xor
stos
leave
adc
ja
inc
aas
incl
xchg
outsb
push
aas
and
mov
fidivl
cs
fldcw
jb
mov
mov
sbb
call
xchg
in
lea
je
adc
mov
push
pop
pop
adc
add
xor
inc
xchg
jmp
adc
xor
inc
rorl
push
cs
or
movb
push
mov
rcrl
mov
imul
cmp
sbb
cmp
mov
cmpsb
jns
dec
loope
imull
loop
inc
movb
mov
shrb
aam
push
fs
lea
xchg
mov
push
mov
pop
mov
sub
and
pop
fildl
or
push
sbb
out
add
ret
sub
ss
inc
mov
out
cmp
mov
mov
sub
mov
test
mov
lahf
pop
das
sahf
fstpt
mov
daa
jge
repnz
std
lcall
fnstsw
jg
fdivl
cli
or
adc
iret
ds
inc
mov
out
and
jg
sbb
add
add
mov
jae
mov
ljmp
in
into
mov
xor
dec
mov
pop
enter
roll
lock
jne
fisttps
xchg
dec
add
loopne
cmp
leave
daa
dec
xchg
subb
cld
nop
dec
push
test
lcall
xor
das
xchg
add
push
mov
in
bound
in
mov
aam
incl
fisubl
cmp
fidivl
dec
dec
sub
clc
sub
decl
sbb
mov
mov
leave
sbb
aad
lcall
je
dec
ja
ret
test
incl
je
mov
lcall
js
popf
pop
addr16
les
lahf
pop
sti
test
mov
icebp
aaa
sbb
mov
ljmp
and
xchg
out
addr16
stc
inc
sbb
mov
xor
aam
cmp
mov
sub
and
sahf
xor
sbb
sub
pushl
mov
pop
movsb
mov
sub
jns
loop
stos
mov
in
sub
sub
mov
jbe
pusha
mov
push
loope
push
fwait
stos
mov
push
lret
or
mov
mov
add
stos
mov
sub
roll
fs
mov
add
xchg
mov
outsb
sbb
addl
pop
dec
int
lcall
ljmp
cld
xchg
int
sbb
jb
add
mov
adc
mov
test
dec
push
xor
mov
stos
fistpl
shrb
push
aam
mov
cld
ljmp
mov
adc
mov
das
jg
fs
mov
mov
aas
movsl
adc
inc
sbb
decl
adc
push
cmp
mov
xchg
ds
mov
lock
cmp
mov
cmp
xor
or
loopne
adc
cs
lcall
cld
xor
dec
push
lea
xchg
leave
movsl
dec
in
les
dec
ljmp
call
push
or
xchg
int
test
fldcw
fdivp
sbb
pop
xor
decl
ret
in
sahf
movl
push
stc
jno
or
push
jge
or
loopne
je
incl
push
jle
loop
enter
stos
xlat
je
jge
popf
dec
cmc
or
jg
ljmp
pop
mov
and
out
ret
xorb
jg
jmp
sub
lock
cmp
mov
push
and
adc
sub
sub
lock
push
cwtl
inc
pop
xchg
sbb
pusha
push
xor
test
and
mov
or
pop
xchg
mov
push
adc
jmp
bound
lcall
dec
adc
jg
sub
xor
sub
fs
loop
jl
sub
adc
decl
xchg
xor
pop
mov
mov
jnp
hlt
pushl
jle
adc
ss
lea
loopne
adc
ss
pop
int
cltd
dec
jecxz
jo
xlat
sub
nop
mov
sbb
cwtl
inc
pushl
mov
movsbl
rolb
test
repz
cmp
sub
pushl
daa
fldl
ds
imul
sbb
push
imull
sbb
decl
int3
fidivl
mov
push
pop
add
frstpm(287
fsub
push
sbb
adc
jp
hlt
ss
push
sub
cmp
sub
adc
mov
cmpsb
pushf
xchg
xor
adc
andb
incl
pop
js
xchg
jbe
and
cmpsl
jmp
xchg
cmp
incl
pushf
xchg
call
outsb
sahf
test
lock
jne
repnz
mov
mov
fildll
jns
lret
push
jmp
or
jns
push
fiadds
out
je
rcll
mov
and
mov
pop
je
jmp
shl
fildll
orl
mov
ret
add
sbb
ljmp
je,pt
add
nop
inc
sbbb
xorl
mov
inc
sbb
popa
decl
test
and
or
and
mov
call
scas
popf
enter
cltd
lret
dec
scas
test
jmp
push
inc
fstps
inc
and
lcall
lret
mov
or
xor
xor
adc
stos
add
pop
jnp
call
insb
sbb
pop
cld
and
lea
sbb
incl
cmpl
push
movq
sub
mov
mov
adc
mov
add
loopne
xchg
fs
or
ljmp
icebp
mov
test
lea
jmp
push
ss
push
xchg
aad
inc
jo
lcall
mov
xchg
mov
popa
mov
insb
sub
sbb
xor
enter
pop
sub
mov
adc
leave
std
adc
into
fucomp
sbb
ja
lret
nop
cmp
inc
shlb
lcall
adc
out
aaa
inc
enter
sbb
and
ffree
or
inc
mov
add
sarl
xlat
jmp
jge
xor
mov
ja
cli
into
dec
inc
cmp
mov
push
xchg
clc
mov
ljmp
jne
xor
ljmp
imul
xchg
adc
incl
dec
loop
pushf
mov
dec
rolb
rorl
push
sub
mov
push
push
call
into
adc
inc
dec
inc
aas
test
aas
daa
adc
or
jl
or
stos
push
adc
pop
cmp
mov
push
pop
in
cltd
enter
cwtl
out
mov
cmpsb
fcoms
lea
movsb
mov
loope
lea
pushl
lret
sub
cwtl
push
out
adc
mov
rclb
sub
lcall
shrb
push
push
pop
mov
jno
popa
dec
sub
pop
aad
decl
mov
mov
dec
mov
or
divb
xor
xchg
xlat
lods
cli
incl
insl
pslld
or
cmp
in
sahf
sbb
sub
mov
lcall
and
cmp
mov
sbb
call
insb
sub
pop
xchg
mov
ss
in
or
test
movsb
pusha
mov
sbb
xor
cmpsb
call
rorb
aam
xor
lret
xlat
cwtl
xchg
fisttpl
in
mov
gs
flds
repnz
pusha
movsb
add
lcall
and
dec
fistl
sti
jmp
aaa
je
fdiv
cmp
mov
mov
push
std
call
cmpsl
lea
iret
sub
sahf
pop
push
xor
or
enter
push
in
cmp
jb
pop
shrl
sbb
sahf
sbb
testl
ret
jnp
xor
out
push
sub
sub
push
xor
add
icebp
or
incl
scas
xor
imull
and
and
or
mov
test
aaa
or
jge
mov
fiaddl
jmp
push
mov
das
jg
je
sub
pop
idivb
adc
int3
pop
ret
incl
push
scas
pop
pop
sbb
xchg
fstpl
push
js
out
cwtl
mov
xchg
add
insb
jb
pop
iret
iret
or
mov
insb
jnp
fstp
pop
movsb
jg
arpl
fcmovnu
shrb
in
insl
and
scas
in
xor
sub
inc
inc
cld
scas
test
in
and
lods
cmpsl
aaa
es
sub
mov
lret
mov
or
call
les
or
loop
mov
add
ror
mov
fsub
ds
xchg
pop
scas
inc
inc
inc
add
imul
out
fcomip
decl
sub
outsb
ja
and
aam
cltd
pusha
dec
inc
sub
jae
aad
pushl
jb
or
jbe
jl
bound
inc
movb
aam
inc
fcmovb
mov
into
out
mov
mov
mov
dec
lods
mov
repnz
in
dec
pop
push
jmp
dec
mov
incl
insb
or
push
jp
dec
mov
jbe
inc
mov
dec
pushf
xbegin
or
jns
ljmp
inc
dec
mov
outsb
pop
inc
and
dec
push
xchg
cld
mov
ljmp
mov
sbb
pusha
orb
mov
bound
push
push
cmp
add
mov
dec
test
adc
test
or
lock
idiv
rcl
add
mov
or
and
and
pusha
cmpsb
popa
adc
incl
cmp
and
test
in
lods
add
out
or
test
dec
or
mov
int3
mov
mov
call
jb
xlat
mov
decl
mov
mov
test
ljmp
mov
ljmp
adc
cld
call
ret
call
push
incb
mov
push
inc
nop
insb
xor
add
add
add
add
scas
jge
add
add
fildll
mov
loope
sub
pop
test
ljmp
jo
bound
shrb
inc
dec
ss
insb
mov
push
cwtl
cmp
ret
cld
pushl
add
ja
insb
sahf
into
arpl
addl
adcb
mov
ds
in
jmp
add
lret
imul
daa
mov
test
jp
out
lock
mov
shr
call
popf
negb
or
push
dec
pop
jge
call
ret
pop
mov
push
out
inc
repnz
dec
or
pop
add
mulb
push
lds
bswap
fs
xor
cli
pushl
dec
adc
push
hlt
cs
lret
mov
or
push
loop
and
adcl
out
inc
or
adc
inc
repnz
xchg
adc
push
aas
inc
add
in
mov
mov
sub
add
xor
lds
mov
hlt
jg
in
sub
and
and
insb
and
add
clc
in
cmpsb
adc
sub
lods
rcll
sahf
cs
mov
fdiv
test
in
sub
or
dec
or
test
sbb
pushl
enter
sub
adc
cs
mov
mov
inc
cli
decl
test
ret
int3
out
mov
and
push
sbb
jbe
lea
ret
pop
out
es
lret
xor
lea
mov
out
nop
and
loop
cmpsb
jmp
xor
leave
int
hlt
int
lock
mov
pop
sbb
cmp
int3
jb
incl
push
mov
sahf
mov
xchg
add
lock
rolb
mov
xchg
sarb
mov
cmp
ficompl
dec
pop
adc
call
cmp
out
fadd
add
movsb
je
decb
inc
sub
mov
icebp
aaa
push
mov
dec
movsb
aam
jecxz
push
jno
dec
incl
pop
out
call
push
call
lods
jg
gs
movsb
dec
mov
push
add
sub
decl
lock
jns
xchg
dec
sbb
dec
sub
or
into
jmp
cwtl
cmpsl
out
test
outsb
fwait
or
dec
mov
out
sbb
jl
insb
adc
ds
test
shrb
sbb
rcrl
mov
int
inc
adc
andb
adc
sub
cld
incl
hlt
mov
iret
push
test
ss
popa
and
pusha
pop
sahf
orb
gs
incl
ret
mov
rcrb
mov
or
jo
daa
mov
mov
xor
out
push
testb
imul
mov
stc
push
jno
jmp
sub
es
test
sub
loopne
xor
outsl
es
incl
ret
add
shlb
ljmp
int3
push
inc
cmpsl
and
inc
and
xor
lea
outsb
push
push
push
ret
jg
mov
rolb
hlt
scas
jp
add
adcb
dec
ja
jp
insb
cld
ljmp
aaa
mov
and
pop
test
aaa
dec
rorb
pop
or
dec
aas
and
sub
dec
push
cmpsb
cmp
xchg
mov
dec
mov
jecxz
inc
movsb
or
out
cmp
decl
cwtl
dec
sub
hlt
gs
shrb
cltd
cli
dec
dec
xor
inc
xor
xor
mov
les
jp
and
inc
mov
icebp
pushl
cmpsl
je
bnd
mov
stc
push
ja
dec
js
jo
popf
lock
push
addr16
dec
xor
lock
dec
xor
in
or
das
add
dec
test
inc
outsb
push
addr16
pop
push
push
dec
hlt
mov
data16
and
mov
add
clc
mov
inc
pop
jb
sbb
inc
pop
sbb
and
loop
adc
xorl
push
xor
adc
inc
inc
jp
das
shrb
test
movsb
jne
pushf
jp
mov
mov
or
mov
cmpb
hlt
lcall
out
loopne
mov
jge
or
push
mov
int
push
xor
cli
mov
popa
int
sub
pop
sar
pushl
jb
cmpsb
cs
push
bound
push
mov
dec
popa
pop
je
mov
bound
xorb
lods
adc
sar
int
and
sub
sub
and
jg
es
loop
sbbb
fcomps
imul
jle
pusha
cli
fistps
mov
lods
addr16
sub
jo
imul
js
aaa
cmpsb
adc
ljmp
lea
enter
cmovbe
sub
orl
and
ja
incl
outsb
outsl
add
fadds
jnp
jo
out
xor
add
sbb
lods
add
mov
xchg
inc
push
adc
jg
stos
push
or
add
outsl
mov
movb
mov
push
std
out
dec
in
std
idiv
xor
xor
and
add
sub
xor
lods
insb
movsb
out
loop
jmp
or
mov
lret
mov
insb
push
add
hlt
decl
xchg
andl
xchg
fisttps
out
movsb
stos
push
and
in
fs
pop
sub
inc
test
adc
lods
ljmp
and
push
adc
call
or
jmp
adc
mov
dec
inc
or
in
push
mov
jnp
cltd
jnp
rolb
lcall
es
loop
lea
aam
cltd
sbb
inc
mov
add
lods
mov
inc
shrl
lret
pop
por
push
fdivrl
mov
sbb
adc
mov
andb
mov
sub
pop
nop
in
mov
xchg
sbb
mov
setp
adc
cwtl
add
jne
inc
data16
pushl
inc
stos
lock
pop
and
hlt
inc
jae
xchg
fistps
or
test
icebp
loopne
jg
add
fcomip
mov
enter
pop
mov
daa
jg
ljmp
mov
or
add
insb
sub
lret
sub
rcrb
outsl
push
pusha
imul
shll
cwtl
les
jns
sub
xchg
movsl
jg
jmp
imull
dec
cs
mov
aad
push
dec
loopne
cmp
ficompl
xchg
outsb
lds
outsb
jb
stos
adc
lock
ds
push
sar
jmp
js
cmc
jb
mov
adc
xor
jno
out
add
push
or
std
incl
daa
lods
dec
mov
movsl
aad
out
loope
mov
jbe
scas
adc
pushl
loop
ret
orl
cmp
mov
data16
lcall
int
lcall
movsl
icebp
outsl
scas
aad
jae
pop
dec
int
scas
stc
mov
sub
adc
call
or
and
ljmp
jns
mov
shll
inc
mov
mov
jg,pt
or
cmp
xchg
negl
lcall
leave
xor
jmp
int
inc
inc
sub
mov
add
in
and
inc
cmc
int
pop
sbb
lcall
shr
nop/reserved
jae
sbb
iret
aam
or
lcall
inc
push
pushf
mov
xchg
repnz
outsl
mov
cmp
fld
and
sar
incl
xchg
and
xchg
dec
push
sti
je
mov
push
cmc
mov
sub
imul
dec
out
out
cli
lahf
mov
incl
fstps
ss
daa
aaa
cmp
in
jl
add
push
leave
dec
mov
gs
out
sbb
xchg
test
or
dec
enter
into
jbe
into
lret
xadd
sbb
scas
mov
pop
push
add
and
jb
shll
or
cmp
testl
inc
push
mov
sar
pushf
iret
adc
sarb
and
into
sub
shrl
filds
sbb
and
add
xor
mov
sub
lret
mov
movsl
sub
call
leave
bound
mov
sahf
sbb
ljmp
data16
xchg
lea
out
mov
sub
mov
jmp
cmp
sti
sbb
sub
mov
outsl
xor
add
call
sbb
adcl
rorb
or
mov
decl
fs
xor
loopne
neg
add
inc
xchg
xor
nop
push
push
aam
jecxz
adc
out
xor
nop
outsl
pushl
push
bswap
inc
mov
fidivl
insb
jno
scas
cli
cmp
int3
mov
push
es
lds
sub
push
mov
cli
mov
cmp
xchg
jns
ret
decl
xchg
lret
inc
imul
jl
inc
xor
push
push
add
xor
jl
les
aad
loop
cmpsl
movsb
dec
mov
add
insl
jmp
pusha
add
int
mov
push
lret
mov
popa
cli
inc
lods
rolb
mov
std
mov
call
aaa
fiaddl
cmp
xchg
psubw
lcall
pop
mov
inc
jmp
cmp
add
sub
cli
xlat
jle
ljmp
fisubl
ret
xlat
aad
xlat
and
ja
mov
test
push
push
fdivs
cmpsb
jmp
bound
cli
xchg
or
dec
jmp
mov
pop
mov
push
call
decl
xor
xor
xchg
call
testl
jmp
fsubrp
popf
xchg
stos
mov
and
xorb
mov
decl
mov
xchg
inc
inc
jl
in
jmp
incl
or
inc
cmp
xchg
popf
cmpsl
insl
xchg
or
mov
jle
fildll
in
push
ja
xor
jmp
daa
leave
sti
sbb
pop
and
sub
in
pushl
leave
popf
add
js
int3
popf
and
cmovb
nop
push
sbb
shl
sbb
call
ss
fcompl
jns
inc
cmp
call
dec
xchg
sub
call
popf
jg
lods
adc
add
and
shlb
inc
pop
call
sbb
sbb
ret
orps
stc
jae
xlat
xchg
inc
xor
push
dec
cmp
shrw
outsl
push
mov
lret
lret
sub
movsl
jnp
scas
push
or
push
sub
in
imul
pusha
movsb
cmp
or
mov
inc
jmp
dec
mov
adcb
pop
jo
into
cli
add
clc
xchg
cmp
into
jl
sub
jmp
sbb
mov
pop
nop
lods
mov
decl
add
push
mov
out
ffree
jno
loopne
mov
cmp
mov
jmp
loop
mov
fildll
inc
in
fnsave
sti
js
shlb
divl
fsub
lret
call
std
call
out
jle
mov
popa
or
sbb
loop
sub
call
push
push
sub
mov
dec
loope
adc
and
aam
push
pusha
test
lea
call
loope
inc
loop
and
mov
adc
xor
ret
lea
pushl
out
add
cmp
enter
mov
or
push
nop
cmp
call
push
mov
push
pop
push
inc
cltd
les
inc
and
ljmp
test
mov
test
xor
push
ds
cmc
adc
pop
sbb
and
rorb
mov
aam
imul
popf
leave
adc
pop
out
lock
jl
adc
inc
mov
pusha
lock
jg
incl
mov
lea
mov
dec
ljmp
lods
mov
inc
dec
jmp
dec
int
xchg
push
jb
dec
aam
xor
sahf
pop
push
mov
test
stc
adc
rolb
addr16
jmp
sbb
push
dec
and
rorl
push
dec
xchg
dec
and
jmp
mov
mov
dec
out
mov
inc
daa
adc
fldenv
push
out
arpl
popf
fnstcw
mov
push
insb
mov
out
outsl
lds
adc
test
mov
jo
xor
jg
insl
pop
jb
dec
lods
fwait
ret
jmp
loopne
imul
fstps
test
pop
xor
push
das
leave
push
xor
jo
cmpl
add
sbb
prefetchnta
add
adc
pushl
ljmp
push
adc
adc
sub
insb
mov
mov
push
jae
pushl
mov
jecxz
dec
int3
cwtl
arpl
nop
pop
jb
in
pop
or
or
ja
out
xor
cmp
call
jg
hlt
movsl
fdivrl
xchg
inc
xchg
mov
mov
pop
gs
pop
lcall
cs
push
jmp
lods
in
inc
fnstcw
jnp
add
jmp
cwtl
cmp
lahf
mov
jmp
sar
decl
mov
sahf
push
cmpsl
aaa
cmp
mov
shll
jbe
repnz
dec
mov
out
mov
xchg
jecxz
dec
xchg
pop
sti
aad
fs
and
mov
sbb
jns
xchg
mov
mov
out
stc
ljmp
call
xchg
pop
mov
in
ds
push
mov
xchg
jno
leave
xor
ror
stos
add
int
jl
xor
xchg
pop
jae
incl
cli
dec
cmp
movb
or
cmp
pop
les
sbb
aaa
cmpsb
lret
gs
mov
xor
loope
sub
xor
mov
xchg
fwait
cld
call
andb
std
jmp
andb
jbe
cmpsl
inc
insl
sub
call
out
mov
je
es
mov
mov
mov
jge
push
mov
pop
dec
pusha
add
mov
push
insl
dec
loop
xchg
mov
inc
and
or
ficoms
fistl
lcall
lcall
mov
dec
pop
dec
inc
pushf
jne
inc
xchg
les
ljmp
jmp
push
enter
lret
mov
into
xchg
xor
jmp
dec
push
pop
mov
subb
push
push
sbb
push
movsl
xchg
pop
fiadds
xchg
sub
xor
add
mov
jnp
orl
test
dec
mov
das
jg
and
jmp
repnz
and
ret
sbb
daa
push
in
cmp
aad
jo
test
mov
mov
jle
dec
out
orb
cltd
jge
lahf
popf
sub
mov
out
or
jmp
pop
imul
andl
sbbl
add
pusha
in
pop
cs
jg
fildll
or
aaa
rcl
inc
cmp
xchg
aad
lret
jmp
popa
dec
dec
sub
mov
push
sbb
or
in
mov
sbb
inc
ljmp
fcmovbe
in
and
jae
or
sbb
test
xchg
pop
jmp
xlat
pop
test
mov
mov
loop
or
cmpsb
movsb
mov
xchg
dec
mov
xchg
fildll
call
shrl
fsubl
dec
adc
call
or
sub
sub
xor
inc
rcrb
adc
cltd
sar
xchg
mov
sbb
add
and
incl
ljmp
mov
fs
cltd
lods
dec
sbb
ret
sbb
out
orb
dec
push
xor
dec
cltd
pop
push
lret
and
ljmp
cltd
jb
push
xor
sbb
inc
and
cmpsl
fwait
or
ljmp
ljmp
mov
jmp
rclb
loopne
shll
cmp
incl
jae
ljmp
aas
cmpl
xchg
dec
jecxz
jg
js
cli
scas
idiv
xor
push
inc
mov
int3
out
mov
js
stos
pop
inc
loopne
xor
loopne
lcall
ljmp
fwait
nop
into
push
movsb
ror
ja
cmp
nop
sub
inc
call
sar
jge
cmp
lods
push
push
xchg
xor
sbbb
decl
adc
insl
nop
push
and
push
cmp
test
dec
inc
shl
xor
cmp
shrb
jo
cmp
and
arpl
fidivl
dec
pop
push
or
lcall
mov
test
pop
or
xor
mov
lret
ss
scas
fucomp
xchg
push
fcoms
mov
jle
shr
and
ljmp
mov
gs
adc
data16
fmuls
gs
popf
aad
shll
xchg
aas
decl
or
gs
js
dec
cmpsb
dec
loopne
cmpsl
dec
push
lds
orl
outsb
scas
imul
jl
xchg
mov
pop
xchg
xor
push
pushf
in
push
mov
cwtl
push
or
inc
dec
ret
loope
cmp
outsb
out
jl
stos
lcall
push
mov
xlat
xchg
aaa
xor
push
jb
mov
push
adc
sahf
mov
mov
cvttps2pi
ja
rcl
add
mov
fdivrs
cmp
mov
or
add
cld
push
dec
pop
xor
xchg
cmpsl
ret
sbb
std
pop
cmc
push
push
std
mov
andl
fs
inc
sbb
adc
incl
push
push
sbb
add
push
rcl
add
test
sar
lds
cli
mov
xchg
cmp
popl
mov
sahf
das
lret
jne
adc
mov
rorb
xor
nop
ljmp
lcall
lcall
sub
cmp
jg
adcl
mov
in
push
ljmp
cmp
dec
cmpsb
and
jge
jl
popf
jmp
gs
insb
out
dec
ja
out
mov
mov
inc
out
pop
add
hlt
test
pop
outsl
add
xor
sti
fisttps
push
add
push
cltd
or
stos
mov
push
push
jmp
dec
jmp
jg
xchg
call
push
std
dec
pushf
xchg
and
lods
adcb
lcall
stos
lcall
jb
test
push
push
loopne
inc
popa
imul
push
fnstcw
mov
inc
into
outsl
jge
mov
mov
pop
ret
int3
xor
hlt
mov
loope
adc
xor
pushl
fadds
mov
in
loope
mov
mov
inc
sbb
or
inc
jg
inc
les
sub
addb
xor
sarb
daa
inc
shlb
call
mulb
addb
adc
inc
pop
es
sbb
pop
sub
jg
aaa
jo
and
adc
xchg
imul
addr16
pop
push
daa
pusha
in
inc
adc
xchg
out
adc
pop
cmp
sub
push
jne
orb
adc
xchg
cs
adc
cmp
ja
push
add
jge
push
mov
inc
imul
xorb
or
xor
movsl
push
jne
jb
mov
ja
jg
xor
cmpsl
sub
movsb
dec
sub
sub
shrl
xor
gs
ljmp
fsub
imul
jge
data16
daa
fidivl
cmp
pushl
mov
mov
jnp
pop
sub
addr16
push
xor
and
lret
push
sbb
mov
out
cmpsb
outsl
test
sbb
out
or
les
popa
add
call
mov
stc
add
adc
jo
xor
lret
mov
pop
adc
dec
inc
loopne
lcall
or
push
ljmp
add
in
jnp
and
mov
incb
imulb
mov
mov
sbb
inc
inc
arpl
arpl
outsb
pop
inc
add
or
pusha
jb
and
adc
jecxz
jne
outsl
push
xor
inc
and
pop
lock
push
je
gs
inc
pop
add
adc
loop
dec
push
pop
leave
mov
adc
jecxz
and
enter
loop
or
call
out
lcall
daa
dec
push
imul
adc
and
sbb
daa
inc
stos
rcrl
ret
xchg
adc
rcll
sub
fnstcw
pusha
push
cld
fwait
or
pop
mov
popa
cs
ljmp
mov
adc
push
sub
inc
push
and
jg
call
push
jno
jo
cmp
addl
mov
movsl
sbbb
jg
out
jbe
gs
test
mov
mov
adcl
xor
cld
mov
add
mov
decl
inc
in
mov
insl
test
xor
push
inc
call
sbb
push
or
jl
js
sub
jnp
sbb
xor
addl
push
movsb
xor
in
sbb
xor
jmp
xor
adc
push
cmova
xchg
jg
loope
inc
push
inc
scas
inc
and
fwait
aas
mov
pushl
mov
or
call
pop
loop
push
adc
inc
xchg
xchg
out
mov
add
add
call
jae
ret
xchg
and
inc
push
dec
adc
xor
lock
sub
adc
xchg
adc
dec
incl
call
leave
and
inc
mov
cmp
xchg
cmp
sbb
sbb
pop
cmp
fbstp
mulb
rcrb
lock
loopne
sbb
pop
cld
pushl
ss
cmp
sub
mov
jo
mov
imul
scas
xchg
adc
lock
lcall
jns
popa
sub
add
xor
ret
testb
or
xchg
nop
filds
iret
jb
out
xchg
rclb
jb
dec
lods
out
mov
xchg
mov
lcall
loope
mov
mov
add
sbb
loop
das
mov
jg
mull
adc
mov
das
call
pusha
jae
decl
out
call
sbb
adc
jbe
insb
sub
test
int3
pop
sbb
decl
add
fwait
test
repnz
push
hlt
push
sbb
xor
leave
ss
out
clc
inc
cmp
jbe,pn
push
aaa
xor
shlb
and
lea
test
mov
mov
incb
call
xlat
sub
es
sub
or
or
mov
jg
incl
and
add
shlb
dec
mov
jmp
decb
or
jne
insl
enter
sub
jbe
sbb
lcall
push
lahf
cs
xor
xchg
sub
imul
stos
fiaddl
decl
xor
sarl
fucomip
lods
cmp
push
jo
inc
add
cs
dec
mov
jp
push
inc
lahf
adc
repnz
or
js
mov
inc
fistl
into
mov
mov
mov
lret
and
sub
cmp
cmp
shrb
pop
out
das
sarb
mov
fs
sar
pushl
jle
insb
ja
ds
adc
ljmp
pop
sbb
notb
cmpsl
push
scas
adc
incl
inc
js
sbb
push
pop
movsb
clc
sbb
sbb
mov
cli
push
mov
mov
ljmp
mov
leave
out
mov
pop
cmp
rcr
fwait
leave
cltd
loope
and
jno
push
pushl
mov
bound
scas
fldcw
insl
loopne
or
test
stos
and
sbb
incl
dec
jecxz
mov
sub
test
decl
popa
push
inc
and
lds
inc
dec
and
mov
iret
repnz
jbe,pt
cs
push
rcll
addb
sahf
pop
pop
imul
sbb
addr16
mov
xor
mov
es
cmpb
pushl
push
inc
pop
pop
cmp
add
jp
scas
sar
mov
cmp
notl
mov
xchg
mov
psrld
sbb
jmp
inc
adc
or
and
or
stos
js
inc
popa
or
stos
mov
adc
mov
sar
adc
clc
and
sub
repnz
xor
xchg
cmp
lcall
mov
sarb
and
cltd
push
mov
mov
jg
mov
inc
add
rclb
inc
jle
xor
outsl
adc
call
mov
rcrl
pop
jmp
inc
dec
inc
sbb
xor
and
ljmp
push
mov
mulb
xchg
sbb
mov
in
mov
test
incl
dec
xchg
fwait
aam
inc
fwait
pop
mov
ficoml
jl
cmpsb
in
sub
stos
xor
incl
call
push
pop
fidivl
jae
es
ss
mov
leave
xor
push
std
push
repz
in
pop
mov
or
adc
dec
ror
mov
cmp
mov
cmp
iret
jp
shlb
test
ret
mov
push
mov
and
lret
add
stos
push
int
pop
pushf
mov
sub
scas
aam
push
mov
and
hlt
jp
cmp
scas
cmp
dec
pop
lahf
pusha
and
ljmp
xchg
mov
call
cmp
shll
imul
pop
add
call
call
xchg
or
dec
int3
pop
xchg
cmp
xor
sub
mov
pop
sbb
incl
into
cmp
in
outsb
stc
aas
push
lcall
sbb
imul
les
dec
lret
sbb
mov
jne
ljmp
mov
hlt
dec
popa
dec
and
cmp
adc
mov
jmp
cwtl
xor
push
sub
inc
sbb
sbb
xchg
movsb
add
out
pushf
mov
test
aaa
arpl
test
mov
jb
jae
push
inc
fs
subl
je
mov
std
ljmp
pushf
repz
xor
push
pop
fsubl
sub
out
cli
jg
cltd
mov
mov
xchg
jb
adc
pop
jg
ds
incl
xor
mov
imul
push
addr16
jmp
incl
adc
movsl
xor
loopne
xchg
and
lret
jp
push
ljmp
jp
add
lret
mov
mov
jg
mov
adc
scas
adc
aaa
xor
jl
add
inc
test
mov
incl
fsubs
mov
call
ja
mov
jnp
imul
lods
inc
lock
cmp
cmp
lret
sahf
int3
int
int
int
cmp
jecxz
insl
mov
sbb
cld
fildll
test
sbbl
cli
jmp
add
mov
cmp
and
xchg
outsb
pop
cmp
das
adc
jo
jl
pop
add
pop
add
hlt
out
aad
ret
std
adc
sbb
in
inc
stos
fs
and
cmp
push
inc
ret
inc
sbb
xchg
aaa
cld
pushl
jns
and
rolb
les
out
test
lods
xor
push
push
xorl
out
jo
js
sub
push
sub
jns
adc
ljmp
add
rolb
cmpsb
adc
data16
dec
lret
insl
xchg
addl
sub
pop
jne
sbb
xor
test
cs
jp
push
xor
out
lods
insl
add
nop
mov
incl
lock
fstpl
insl
xchg
popa
pop
cmp
ds
add
shrb
mov
jo
pop
lods
incl
adc
sbbl
pop
popa
jns
es
mov
aas
mov
mov
dec
push
ror
fs
decl
fisttpl
or
or
cmp
xchg
dec
test
inc
or
out
je
pop
adc
xor
fsubrl
imul
fcmovnb
imull
decl
adc
loopne
add
fnsave
pop
mov
ljmp
das
mov
jle
cmp
sub
incb
roll
sub
add
test
ja
sahf
dec
push
xorb
pushl
xor
mov
dec
aad
insl
add
mov
cmpsl
orl
mov
decl
loope
xor
jo
into
xchg
adc
ret
cmp
jp
jno
dec
xor
icebp
cmp
test
ljmp
dec
fwait
push
cmp
sahf
jge
mov
ds
jbe
test
lcall
mov
xchg
mov
in
insl
out
clc
decl
insl
lock
cwtl
sub
dec
mov
mov
mov
aad
push
cs
jmp
mov
pop
test
add
leave
push
pop
in
sub
sub
adc
push
push
pop
shlb
cmp
xchg
dec
mov
jmp
and
stc
mov
xlat
je
xchg
fdiv
outsb
and
icebp
incl
mov
adc
shlb
aam
dec
sbb
int3
jo
incl
fisubrl
or
or
jl
lcall
sbb
mov
test
cmpsb
sbb
or
mov
pop
push
leave
cmp
incl
jge
or
push
aad
sub
xor
hlt
popf
push
sbb
jno
lea
inc
jb
dec
lcall
in
mov
sub
push
ret
push
repnz
mov
dec
shrl
mov
cli
lock
cmp
pushf
and
and
loop
lods
cmp
sub
sbb
mov
and
and
jle
out
addr16
nop
les
dec
pop
repnz
push
xorl
mov
addl
push
mov
outsb
mov
ss
add
sbb
inc
and
sub
cltd
test
scas
imul
enter
mov
cli
push
xchg
xor
lahf
lds
rcll
add
jmp
enter
mov
ljmp
push
pop
dec
fs
incl
rcrb
int3
mov
ja
mov
stos
jmp
orb
push
pusha
inc
xchg
and
test
test
mov
or
pop
jno
les
aam
jg
jecxz
sbb
sbb
inc
xchg
sub
pop
mov
xchg
xlat
lods
push
mov
or
mov
pop
cmpb
ffreep
lea
call
pushf
adc
push
jecxz
mov
fisttps
jo
outsb
xor
mov
mov
ret
xchg
xchg
sbb
repnz
ljmp
adc
out
fldt
mov
mov
int
mov
imul
cld
scas
jle
jns
popa
imulb
add
and
roll
icebp
sbb
lcall
pusha
add
sub
sub
mov
mov
mov
scas
or
in
fbstp
negl
clc
jle
stc
cmp
daa
iret
cmpsb
cmp
adc
iret
scas
push
mov
enter
cmpsl
or
ret
mov
xchg
xor
lcall
xor
or
cmp
bound
xchg
mov
cmp
cmp
cld
jmp
xchg
push
pop
adc
inc
getsec
xchg
sahf
jg
push
je
and
inc
cmp
xor
xchg
inc
jmp
mov
fwait
outsb
cli
test
test
incl
mov
outsl
mov
insb
jo
leave
ficomps
negl
popa
mov
sub
add
dec
call
fprem
movsb
out
in
sbb
mov
lret
add
or
xor
sbb
pop
add
movsb
jae
xor
in
xchg
fs
add
outsb
sub
xchg
push
adc
inc
insb
add
cli
ljmp
or
cmpsb
dec
repnz
sbb
ss
jbe
insb
lret
and
je
push
mov
push
lock
ljmp
movsb
cmp
ret
pusha
shll
mov
ss
enter
test
test
sub
adc
or
ret
mov
subb
leave
int3
movsl
insb
ltr
lds
mov
popf
and
jns
cmp
mov
rcl
scas
int
in
inc
push
xor
repz
stos
cmc
out
filds
mov
add
inc
mov
decl
lock
decb
lret
cmp
fnstcw
cmp
loopne
rorb
nop
pop
cli
push
aas
sbb
outsl
cli
dec
cmp
and
lock
push
arpl
movsb
pusha
inc
or
ljmp
rolb
cmpsl
popf
jbe
push
stos
cmp
hlt
mov
cmp
push
clc
mov
incb
shr
adc
rorb
add
xchg
and
push
push
cmpsl
push
push
lock
xchg
ficoms
repnz
add
insl
push
fistpll
ja
xchg
mov
popf
sub
dec
push
add
or
xor
dec
sbb
cld
repnz
xor
pushl
mov
inc
push
out
sbb
xor
stos
push
push
or
xchg
enter
bound
test
dec
dec
call
dec
or
movsl
dec
aaa
lods
or
in
sub
ficoml
xchg
inc
jne
dec
cltd
sub
dec
xlat
dec
ljmp
iret
ds
orl
jp
sub
push
mov
push
pop
fstpl
mov
lret
sub
loopne
ljmp
fimull
mov
inc
pop
jmp
mov
enter
loopne
cs
mov
fsub
xor
sbb
addr16
xchg
pop
into
fsubrs
add
clc
sbb
add
cmp
adc
in
xchg
subl
int3
shrl
notb
jge
js
nop
mov
cltd
daa
cmp
mov
jl
mov
call
jle
arpl
lea
pop
dec
and
adc
lods
inc
pop
fisttpl
dec
cmpsb
sbb
adc
jg
pushl
and
dec
inc
mov
cmpsl
inc
shlb
inc
imul
cwtl
adc
ja
lret
cs
mov
mov
sahf
add
push
and
or
sbbl
incl
test
pushf
ds
inc
add
pushl
mov
scas
cmp
dec
cmp
bound
inc
sahf
xchg
fcomp
push
jp
sbb
pop
cmc
scas
ja
and
mov
bound
add
sub
pop
icebp
xor
ss
pop
hlt
ljmpw
dec
mov
mov
call
ret
or
ds
add
pop
add
mov
loop
sti
or
jns
clc
int
test
mov
imul
or
jnp,pt
cltd
lcall
mov
push
das
jne
outsl
pop
lcall
mov
stos
sub
inc
fmuls
jecxz
fwait
cld
out
pusha
mov
dec
cmp
inc
or
into
cmp
inc
add
adc
lcall
sbbb
xor
jns
jecxz
xchg
loopne
xchg
add
sbb
mov
adc
into
mov
pop
es
test
mov
and
scas
jg
sbb
sbb
add
sub
pop
adc
xchg
les
xor
sbb
mov
pop
mov
popf
add
jg
xchg
and
fisttpl
in
mov
pushl
ds
call
xchg
jmp
push
sbb
mov
push
inc
lret
pop
out
cmp
bound
nop
cmpsb
sub
into
dec
call
stc
sti
adc
sahf
push
pusha
in
aam
fadds
sub
daa
mov
rorl
dec
inc
sub
mov
lret
mov
mov
dec
pop
movsl
sub
pop
negb
iret
es
jge
jmp
jge
adc
sarl
pop
lods
mov
mov
addr16
or
fsts
mov
mov
in
xor
cmp
aas
and
stos
int3
push
add
fs
fildll
adcb
lods
lahf
outsb
loop
loopne
push
adc
or
js
aad
jp
sbb
pop
inc
loop
pop
adc
je
cwtl
subb
in
decl
fs
repz
adc
inc
jge
jge
ss
mov
decl
or
jnp
push
aaa
adc
sub
orl
inc
leave
pop
xor
sbb
incl
sub
adc
adc
inc
or
loop
mov
jecxz
adc
mov
popf
test
decl
dec
scas
adc
add
mov
xchg
movb
dec
push
add
mov
jne
test
jecxz
mov
dec
xor
sub
xchg
add
or
repnz
jl
rorl
insb
and
and
scas
jns
pop
mov
or
daa
adc
jbe
xor
fwait
lock
xchg
jecxz
inc
aad
clc
mov
xchg
push
push
in
dec
mov
xchg
mov
and
push
pop
and
jmp
and
notl
sarb
push
push
insb
jae
mov
sub
jg
adc
cmp
jmp
mov
out
push
or
mov
adc
cmc
or
fistps
mov
mov
inc
sbb
or
xlat
cmp
sahf
out
out
decl
and
inc
into
or
out
jno
cmp
jmp
and
loop
pop
movb
fs
pop
aas
or
icebp
sarl
movq
sub
int3
lret
mov
xchg
ret
cmp
fisubrs
adc
pop
out
mov
mov
in
js
inc
pop
js
aad
rcl
ss
mov
repnz
add
sbb
jl
mov
lcall
dec
fnsave
and
xchg
mov
mov
sub
pushl
mov
imulb
sub
lret
sub
ja
clc
loope
cmp
pop
adc
and
call
stos
push
pop
ret
dec
add
adc
adc
cltd
mov
les
notl
mov
cmp
movsb
mov
sub
or
cmp
and
xchg
hlt
pop
iret
stos
mov
pop
pop
pop
out
jnp
xor
pushl
xchg
scas
hlt
mov
pusha
xchg
mov
mov
stos
jbe
lahf
push
andb
aaa
aas
in
mov
test
jmp
notl
mov
clc
ja
shll
xchg
add
aaa
push
sub
sub
test
decl
adc
push
bound
cli
pushf
lea
lcall
adc
inc
mov
in
mov
clc
test
sbb
pop
add
mov
loop
xchg
sarl
scas
mov
or
lcall
out
sub
and
ss
sbbl
mov
mov
incl
xchg
mov
cmp
adc
jp
enter
sbb
out
loope
inc
mov
xor
sub
ds
incl
sbb
mov
je
mov
cmpl
mov
mov
es
cmp
pusha
mov
or
cmpb
adc
rol
ljmp
xchg
scas
leave
shrb
xchg
mov
lcall
fidivs
in
mov
sbb
mov
lret
mov
das
sub
jo
xchg
enter
jmp
xchg
sahf
or
adc
mov
mov
dec
or
leave
es
aaa
mov
mov
mov
daa
imul
xchg
jno
scas
push
sbb
divl
adc
ds
out
add
sti
clc
pop
push
mov
std
jmp
decb
push
movsb
shlb
jns
mov
jg
pusha
mov
popa
push
cld
orl
test
ljmp
mov
fisubl
out
dec
mov
movsb
xor
add
mov
inc
decl
adc
movsl
or
cwtl
nop
pop
add
sbb
lretw
adc
add
fimuls
xchg
orl
out
imul
push
mov
fwait
xor
rorl
mov
loopne
es
les
sub
adc
sub
inc
mov
clc
pushl
or
sbb
mov
inc
mov
adc
fwait
sbb
xor
rol
or
movsl
xchg
or
xor
cmp
fdivl
repnz
push
jbe
pop
dec
lcall
scas
loope
sahf
pop
sub
mov
scas
fmull
popf
and
push
fnstenv
sub
jmp
jge
jno
mov
fdivl
or
jns
mov
add
mov
orl
adc
ljmp
shll
push
mov
jp
fildl
mov
jnp
push
mov
decl
inc
mov
cwtl
or
push
nop
mov
out
mov
std
jae
in
mov
lods
adc
cmp
repnz
jg
add
add
cmp
and
sbb
int
insb
or
test
ja
stos
xchg
fldcw
nop
icebp
jo
adc
push
push
inc
outsb
mov
inc
mov
and
scas
mov
cmpsl
repz
sbb
mov
decl
or
xchg
nop
inc
or
sub
test
cltd
and
nop
jb
add
adc
popa
mov
cld
pop
cmp
adcb
dec
cli
adc
push
and
cld
enter
xor
and
and
and
xor
ljmp
mov
add
pushf
shlb
lods
xchg
mov
subb
mov
pop
sbb
cmp
xchg
and
lcall
jp
dec
pop
cld
mov
lret
lcall
sti
mov
stos
sahf
pop
cmp
cmp
stos
loop
mov
cmpsl
out
lcall
sub
les
inc
jne
and
jb
jnp
sbb
lcall
stc
das
add
loop
sbb
dec
adc
jge
lds
ds
decl
pop
mov
mov
push
sub
or
push
mov
sub
mov
bound
std
mov
adc
or
adc
cmp
adc
ljmp
add
ljmp
js
aam
mov
hlt
imul
lcall
xor
jmp
sub
xorb
cmp
push
scas
mov
or
xchg
movsl
les
xor
popa
inc
mov
mov
jmp
pop
lea
jnp
or
clc
push
mov
sub
jg
ret
mov
cwtl
mov
roll
sub
cltd
cmc
ljmp
and
cld
mov
ljmp
inc
or
sbb
mov
cmpsb
fidivl
dec
xor
mov
stos
in
fdivp
sub
inc
es
push
mov
es
mov
jl
in
or
mov
xor
cltd
jmp
and
bound
push
mov
decl
sub
notb
pop
pushf
mov
pop
pop
imul
jb
dec
sub
call
mov
mov
icebp
jp
notb
sub
push
sbb
mov
hlt
adc
cmp
or
gs
mov
aas
mov
addb
nop
cltd
push
xor
mov
ljmp
rcrb
daa
rorb
jge
sbb
addb
mov
sbb
cld
in
cld
in
nop
xor
push
nop
dec
and
scas
loop
or
insb
push
stos
mov
movsb
sub
jg
push
jno
pop
mov
out
cmp
dec
inc
scas
mov
mov
add
mov
hlt
sbb
aaa
ret
pushf
enter
adc
sbb
or
xor
adc
adc
push
mov
cld
pop
std
decl
pop
pushf
jb
leave
xchg
in
jno
adc
sbb
jmp
pushl
mov
mov
cmp
sbb
dec
cmp
and
cmp
adc
push
xor
call
mov
mov
and
and
nop
lret
mov
mov
clc
mov
movsb
jb
mov
lock
or
incl
ret
fdivrs
xchg
scas
popf
das
lcall
pushl
roll
or
xor
fisttps
inc
fmull
sbb
fistl
xchg
adc
leave
adcl
aam
push
cmp
sub
test
dec
std
sub
das
fwait
sub
js
addb
dec
ret
mov
sbb
adc
xchg
mov
lcall
lods
push
stos
std
inc
xor
movsl
shrl
jno
pop
lods
lret
lods
sub
pop
cmp
lcall
sbb
cmpsb
cwtl
enter
in
dec
adc
pop
das
push
fidivs
pop
xor
add
std
call
lods
cmp
cmp
xlat
jno
dec
lea
aam
int
inc
dec
sar
add
cmc
ret
xchg
adc
cmc
call
mov
mov
lea
es
out
mov
mov
push
and
jecxz
inc
das
or
enter
xchg
mov
scas
or
mov
int3
pop
pop
sub
ret
decl
adc
stos
fistpll
pop
gs
aam
fs
cmp
lcall
cli
clc
mov
clc
inc
jg
mov
es
or
cmc
cli
call
gs
jp
mov
movsb
and
xchg
cmp
out
mov
call
ret
adc
sub
inc
jnp
cltd
xchg
icebp
push
mov
lods
mov
fwait
push
push
cld
mov
fsubrl
mov
cs
orl
ret
push
lcall
adc
jo
aad
in
jmp
mov
cmp
shll
fsub
cmp
out
call
xor
arpl
adc
mov
test
or
pop
popf
inc
xchg
call
add
fwait
cmp
test
xchg
ret
dec
lret
scas
xchg
lock
xchg
inc
loope
test
in
xor
jle
jno
in
jg
push
jl
and
movsl
adc
push
in
adc
xor
test
adc
cmp
stos
inc
adc
mov
mov
enter
pop
out
fldt
cmp
fistl
incl
and
mov
xor
rsm
cmp
lds
sti
ljmp
jg
stos
xor
jns
cmc
dec
pusha
into
mov
dec
sbb
out
cli
xchg
jne
shr
jg
jg
cmp
test
jns
mov
stc
fneni(8087
pop
jb
subb
sbb
std
sub
loopne
add
mov
out
clc
fmul
mov
ret
rcr
addl
stos
and
nop
aaa
add
mov
mov
scas
jmp
call
ror
lfs
push
iret
mov
test
movsl
int3
push
sub
arpl
add
pushl
xor
movsl
imul
repnz
pop
cmp
rclb
xor
mov
or
call
mov
jecxz
cmpl
es
filds
mov
mov
pop
sahf
mov
ljmp
push
mov
or
or
fwait
incl
inc
jle
fcompl
sub
out
xor
push
inc
dec
hlt
call
push
inc
push
jb
lcall
outsb
mov
ljmp
push
ror
mov
or
mov
decl
cmpsb
scas
add
flds
mov
cmp
pushl
cld
ljmp
mov
daa
mov
mov
xchg
aaa
add
lret
pusha
in
cmp
ljmp
clc
xor
adc
mov
das
adc
adc
push
inc
pop
out
add
lcall
adc
adc
scas
mov
and
xor
scas
repnz
jmp
rolb
pushf
jmp
or
and
into
pop
mov
push
hlt
incl
dec
ficoms
xchg
mov
xchg
xchg
adc
pusha
loop
arpl
fisubrs
mov
divb
add
cmp
or
imul
lcall
fwait
xchg
add
loopne
icebp
adc
adcl
dec
pop
sbb
xor
cmp
push
push
stc
int3
jbe
mov
sbb
xor
mov
nop
jg,pn
lcall
pop
sbb
inc
sbb
repz
sahf
rorb
lds
jmp
jno
out
push
mov
sbbb
inc
pop
xchg
hlt
sbb
test
mov
aas
add
in
addb
mov
int
cwtl
pop
mov
sbb
pop
fs
jb
das
stc
push
std
incl
ja
aas
incl
movb
fildl
xlat
les
int
and
mov
mov
int
push
xchg
mov
jmp
clc
incl
ds
add
mov
test
sbb
or
ret
decl
fcmovnbe
ds
subl
je
test
xor
repz
push
push
xorb
jmp
sub
scas
inc
fs
mov
es
jno
arpl
pop
push
mov
jbe
imul
jo
jp
ljmp
mov
jbe
pop
push
cmp
ret
xchg
adc
aaa
adc
xchg
in
sbb
mov
call
in
xchg
test
icebp
add
xor
xchg
fstpl
mov
ljmp
test
mov
adc
jg
pop
dec
mov
aaa
sbb
pop
xchg
lret
ret
ljmp
pop
sub
xor
imul
shl
and
movsb
int
mov
ljmp
jg
mov
sub
imul
dec
scas
and
lahf
mov
jns
xchg
scas
mov
adc
insb
and
xchg
shll
sbb
sbb
mov
cmpsb
or
mov
jmp
mov
pop
loopne
push
pop
dec
mov
fld1
mov
cmp
in
aam
adc
hlt
pushl
pusha
rorb
aaa
jne
in
mov
decl
mov
repz
inc
insb
sbb
insl
movsb
mov
out
jg
test
shll
pop
sbb
xchg
ret
pushl
cld
lcall
sub
icebp
loop
and
fiadds
mulb
mov
pop
add
imul
xor
lcall
xchg
or
sub
cmp
mov
addr16
xchg
int3
jno
ljmp
sbb
sahf
lcall
mov
lcall
add
sahf
sbbb
inc
pop
je
xor
call
jmp
loopne
sub
and
push
pop
xor
push
push
pop
ja
mov
cwtl
out
sub
and
xchg
fldt
out
out
and
and
xchg
mov
pop
std
ljmp
mov
sub
lahf
push
sbb
push
js
xorl
push
adc
pop
gs
adc
add
loopne
xchg
lcall
mov
push
mov
mov
mov
and
aad
cmpb
arpl
negb
inc
adc
mov
sbb
mov
push
fadds
pop
jns
adc
mov
add
stc
and
gs
ss
in
cmp
ljmp
out
cmpsb
test
cltd
cmp
imul
loop
and
test
inc
mov
incl
imul
test
add
adc
push
inc
adc
xor
inc
loop
mov
jo
out
shll
dec
cmp
adc
incl
arpl
cmp
shrl
cs
pop
xchg
mov
add
or
lock
push
and
sbb
lock
hlt
dec
and
push
mov
faddl
push
dec
pop
scas
mov
movsl
lock
ljmp
orl
jmp
dec
shl
fidivrs
cltd
dec
sbb
es
out
push
push
jmp
mov
push
js
inc
loope
fnsave
repnz
sbb
add
cld
ljmp
sbb
xor
dec
aam
loopne
enter
adc
popa
nop
lea
push
xchg
ret
lret
mov
mov
push
push
xor
jae
push
jno
iret
daa
sbb
ja
jp
mov
enter
pop
shl
cmpsl
pusha
jge
jecxz
pop
jns
mov
cmp
cwtl
mov
pop
rcll
cmc
aam
inc
cli
call
ret
test
enter
jns
enter
jmp
add
mov
mov
mov
faddl
cltd
pushl
pushf
subb
in
inc
pop
nop
fs
test
stc
in
je
pop
call
gs
ss
sahf
cmp
mov
pop
jb
gs
push
jg
ljmp
cld
js
mov
dec
jecxz
sub
out
and
mov
push
inc
inc
pushf
add
and
push
dec
test
subl
fdivr
incl
sbb
hlt
fdivrl
std
lods
lods
mulb
sbb
mov
ljmp
mov
add
adc
lods
sub
cli
sub
dec
cld
incl
push
xor
inc
sub
hlt
mov
jg
jl
stos
and
adc
shlb
mov
je
add
pushf
inc
pop
mov
sub
insb
test
jg
hlt
add
mov
push
push
xlat
out
jo
bound
cmpsb
call
lcall
jb
ds
sub
pushl
dec
mov
add
add
mov
xor
dec
mov
push
leave
lret
inc
mov
dec
sbb
mov
mov
xchg
mov
fnstenv
shlb
bound
mov
push
pop
ret
aam
push
xchg
sbb
lock
in
icebp
in
sbb
cmp
push
sub
sbb
call
pop
lret
sbb
push
idiv
fbld
jge
jecxz
xorb
pop
ret
dec
xchg
mov
jle
adc
and
test
incl
pop
inc
daa
frstor
pop
xchg
adc
sbb
dec
loope
add
sbb
rcrb
in
dec
xchg
sbb
lahf
fs
jg
jae,pn
ret
xchg
stc
mov
cmp
in
cmp
loop
dec
shlb
lcall
loope
movsb
cmpsb
sti
mov
ja
fistpl
ret
push
in
xchg
out
adc
call
cmp
ja
cmp
cmpsl
and
fcomp
and
adc
jmp
mov
rclb
mov
dec
and
adc
adc
and
loopne
fildll
or
lock
dec
jb
add
les
sub
lcall
pop
add
sub
loop
addl
sub
mov
add
mov
ljmp
xchg
nop
stos
mov
mov
ljmp
adc
or
lcall
loopne
test
cmp
cwtl
addr16
mov
add
push
jno
decl
cmp
stos
xchg
mov
sbb
xchg
sbb
ljmp
outsl
push
push
rcrb
inc
ds
inc
js
shll
mov
incl
pop
mov
sub
arpl
ret
dec
and
xor
push
adc
inc
adc
nop
icebp
filds
and
or
enter
ljmp
movsl
and
out
push
sub
mov
int3
cs
jg
lea
insb
pop
sbb
mov
enter
lcall
rep
jne
fistps
adc
je
mov
mov
outsb
cmp
mov
call
int
xchg
sub
push
out
jns
dec
ret
lcall
push
ljmp
mov
fldenv
aaa
test
sarl
or
sub
add
mov
bound
mov
setge
adc
or
dec
push
add
jo
or
mov
cli
rolb
lahf
mov
mov
jp
xor
inc
jle
mov
decl
sub
add
imul
lock
call
sub
sbb
lret
and
and
dec
test
mov
xor
jns
rcl
mov
add
cmp
cmpsb
scas
and
ss
cmp
pushl
jns
and
in
popa
pop
dec
or
pop
insl
add
and
mov
push
fwait
les
add
adc
fwait
in
into
mov
sti
xor
jb
cmp
mov
sbb
inc
push
in
inc
push
ljmp
rorb
movsb
cmpsl
mov
ss
pop
scas
sbb
mov
aad
aaa
dec
movsb
mov
mov
jbe
outsl
incl
rorl
sti
push
adc
mov
pop
movsl
repnz
mov
decl
aam
mov
aaa
sub
sub
cmp
pop
sub
mov
inc
sar
movsl
add
cmp
frstor
xchg
sub
fs
loop
mov
cmpsb
pop
inc
jecxz
incl
jae
mov
std
in
int
add
mov
mov
movsb
addb
xor
int3
and
xchg
mov
or
lcall
push
test
push
dec
cmp
cmp
adc
mov
cli
sbb
lret
lds
sub
int3
movsl
pop
repz
mov
or
aad
inc
arpl
in
pop
loope
decl
inc
push
sbb
jecxz
mov
int3
dec
add
ja
adc
mov
test
std
or
rorl
add
cmc
mov
jbe
ret
xchg
mov
hlt
incl
xchg
divb
fbstp
mov
pop
adc
cmpsl
mov
jmp
or
and
or
xor
scas
test
dec
pop
mov
mov
jge
push
sar
push
xchg
dec
arpl
rorl
jno
cmp
xchg
in
xchg
fstpt
or
fisubs
mov
lret
ss
call
lcall
jno
mov
lcall
daa
mov
sar
call
mov
sub
add
inc
jle
aaa
repz
dec
loop
mov
daa
dec
out
out
leave
xchg
xchg
decl
outsl
xchg
aam
cmp
sub
scas
cltd
out
daa
jp
cmp
jp
cmpsl
ror
dec
inc
mov
sti
inc
divl
ret
test
out
cmp
pop
add
les
pusha
add
jne
pop
and
pushl
iret
mov
iret
cmc
mov
pushf
test
inc
or
jle
cmc
pop
dec
dec
lock
cmp
test
push
xchg
std
xchg
push
jle
xchg
orb
iret
mov
lods
rolb
test
call
mov
shrb
or
rcll
add
mul
test
call
test
and
pusha
or
loopne
pop
add
cltd
push
sbb
mov
outsb
jns
sbb
xor
xchg
and
add
push
fsubrl
dec
mov
lds
inc
jmp
call
mov
lods
dec
mov
mov
add
mov
mov
pop
cmp
mov
mov
in
inc
push
sub
fsubs
and
adc
ficomps
stos
or
inc
jnp
push
and
sub
push
inc
or
pop
in
mov
decl
mov
lcall
push
enter
ljmp
dec
pop
imul
xorb
jg
fwait
mov
mov
pop
dec
or
ja
adc
cmc
js
xchg
mov
aam
xchg
dec
dec
incl
mov
ja
decl
lahf
xor
arpl
xor
call
in
pop
mov
das
pop
adc
mov
mov
pop
out
cld
mov
sub
push
cmp
jecxz
orb
inc
cld
call
add
mov
lock
in
aas
mov
pop
jb
std
jg
sar
fisttpll
nop
pop
lods
adc
add
cmp
lea
out
adc
jbe
add
pop
fs
stos
fldcw
jo
push
cs
dec
outsl
fcomip
cmp
adc
inc
loope
in
call
xor
mov
inc
fdivr
inc
insl
adc
lcall
fcmovb
popf
icebp
pop
pop
aam
loopne
cmpsb
call
fisttpll
pop
sub
sbb
lds
inc
sub
mov
shr
push
xchg
pop
cs
decl
sbb
andl
js
cmp
mov
dec
sar
gs
decl
push
icebp
inc
enter
daa
push
lahf
dec
and
lea
dec
shlb
movb
movsl
out
or
push
ljmp
cmc
jmp
pop
js
xchg
dec
lock
in
std
cmc
adc
mov
dec
xchg
lods
dec
sub
testl
into
in
mov
and
jb
into
sub
dec
mov
xchg
mov
sbb
sub
lahf
ljmp
imul
jg
fdivrl
add
add
add
push
inc
inc
cs
repnz
leave
or
icebp
in
inc
shlb
and
mov
ljmp
hlt
lods
in
test
add
lods
mov
fmuls
add
inc
adc
mov
dec
mov
mov
int
subb
add
jbe
mov
adc
add
mov
cs
sbb
ljmp
les
loop
or
add
push
mov
push
call
pop
das
fmul
inc
adc
or
sbb
adc
sub
mov
push
mov
sbb
pop
mov
sbb
call
or
inc
outsl
movsl
add
dec
sbb
jg
xchg
fs
add
push
fsub
xchg
arpl
sbb
test
incl
and
gs
or
sub
xlat
cmp
and
add
ss
bound
add
cltd
xchg
sbb
ficoml
nop
movsl
and
stc
ficompl
sub
rcrl
clc
sarb
adc
in
cmpsb
dec
mov
mov
inc
mov
into
mov
dec
pushf
mov
mov
jecxz
js
jge
fwait
mov
loop
imul
inc
xchg
mov
les
es
mov
add
ljmp
incb
cmp
mov
aam
lock
mov
das
mov
pop
mov
xorb
mov
cmpxchg
cli
cwtl
iret
dec
andb
add
add
outsb
pop
sbb
loopne
pop
push
sbbb
cmp
int3
sub
jmp
sub
and
xchg
xor
test
sbbl
loop
enter
loope
push
xchg
shl
jns
add
jle
adc
inc
sarb
mov
mov
lcall
iret
jbe
enter
push
add
pop
mov
sub
push
cmpsb
in
jno
js
lcall
cwtl
xor
and
pop
adc
lcall
adc
aad
adc
push
outsl
mov
and
xchg
sahf
lcall
lods
bound
push
sbb
in
in
in
lods
stos
sbb
dec
test
mov
inc
sub
test
dec
push
fdivrp
in
ss
jmp
mov
ljmp
mov
dec
sub
test
imul
push
xchg
jns
cld
in
push
sti
aad
popf
xor
mov
mov
test
pop
jbe
pop
icebp
pushl
sbb
cmp
inc
pop
adc
mov
scas
jmp
inc
cmc
inc
cld
fbld
mov
jmp
dec
in
faddp
xor
out
or
jg
fwait
mov
idiv
or
adc
xor
cli
decl
mov
inc
and
pop
ret
loopne
and
cmpsb
scas
incl
push
mov
movsb
mov
pop
sub
xchg
pop
popa
fs
fisttps
mov
xchg
enter
outsb
xchg
pop
insb
loope
and
cli
mov
dec
iret
and
popa
pop
or
decl
mov
addb
int3
push
adc
test
es
or
cld
push
and
frstor
out
ja
sub
pop
add
std
incl
adc
imul
fisubl
fbld
sub
fcoms
jo
pop
push
mov
pop
fsubrs
leave
imul
aam
xchg
out
test
dec
shrb
adc
dec
pushfw
fs
ficompl
jmp
push
jmp
adc
push
leave
xor
fwait
fs
dec
pop
lret
mov
cmpsb
mov
mov
aam
test
pop
scas
aaa
pop
icebp
push
fisubl
fcom
insl
cmp
mov
inc
adc
mov
jl
andb
icebp
push
test
and
lods
imulb
sbb
sub
lods
pusha
daa
test
shrb
repnz
call
ja
sub
int
add
call
or
sub
inc
data16
les
fisttps
and
lret
inc
or
test
mov
dec
inc
inc
in
sub
call
call
and
int3
mov
pop
sbbb
and
clc
inc
ret
enter
push
lcall
aad
pushf
inc
lods
outsl
mov
aad
scas
mov
das
cmp
call
push
in
and
sub
loope
int
cmp
daa
repnz
cltd
cmpsl
in
xor
decl
rorb
push
fldenv
lret
mov
ljmp
add
arpl
xor
pushf
add
fadds
push
decl
insb
movsl
sbb
adc
push
loop
popf
inc
mov
sub
js
pop
mov
xchg
and
sub
mov
push
inc
xchg
mov
movsb
jmp
xchg
inc
dec
push
mov
ret
cli
les
jg
mov
add
repnz
mov
es
enter
int
mov
outsb
mov
repnz
sbb
test
dec
test
push
xor
jo
jmp
ljmp
mov
add
lret
shlb
lea
or
cs
incl
pusha
jg
inc
mov
and
sub
inc
and
sub
xor
nop
or
or
cmp
jbe
jmp
inc
sarl
sub
fldt
popa
cmc
lcall
add
fs
xchg
mov
sbb
add
pushf
cmp
lea
push
imul
sbb
hlt
sub
pop
fcomip
jmp
test
cmp
shll
sub
hlt
xchg
sub
cmpsl
mov
push
js
adc
rol
ja
shlb
incl
mov
popa
mov
push
dec
stos
sbb
insb
shll
mov
pushl
imul
idivl
stos
sub
inc
pushf
fdivr
mov
mov
sub
push
xor
fwait
xchg
mov
pop
mov
xchg
push
inc
dec
call
or
sbb
sbb
and
xor
fwait
clc
push
sub
rolb
and
sbb
and
jecxz
xchg
insl
adc
dec
shll
idivl
lock
jg
testb
xor
jb
addb
imul
mov
inc
xor
and
cwtl
movsl
push
mov
mov
aam
aaa
cld
jmp
dec
insl
fs
stos
fs
outsl
fs
cwtl
jg
pop
pop
inc
xor
loopne
xchg
incl
dec
add
ja
sub
shll
stos
jbe
test
push
lret
or
push
cltd
jnp
lds
aam
adc
fs
adc
jo
repnz
addb
ljmp
sub
mov
mov
pop
jp
pop
sub
shrl
xor
xchg
cli
ja
mov
addb
or
xchg
and
outsl
or
push
mov
call
gs
in
ds
mov
adc
imul
jp
incl
sbb
fwait
popl
pop
jne
or
popf
fdivl
inc
dec
hlt
sub
dec
addr16
push
cmp
pop
pop
xchg
mov
xor
jne
popf
lahf
jp
mov
sahf
enter
ja
xor
jno
cld
add
call
push
dec
jno
push
addb
test
and
jo
addl
cwtl
mov
decl
test
sub
add
pop
test
mov
outsb
mov
add
test
pop
and
inc
xchg
cmp
ljmp
push
lcall
das
cs
push
push
div
adc
imull
add
xor
inc
test
aam
inc
inc
lret
jns
inc
xor
dec
pop
push
xor
jae
pop
sub
sbb
sbb
xchg
out
mov
cmp
shlb
scas
dec
test
push
mov
pushl
int
sbb
aaa
shrl
es
fsubrp
arpl
call
sub
decl
lods
jnp
inc
xchg
rclb
xorb
lcall
xchg
xchg
push
shlb
int
cld
pop
pop
int
loop
filds
push
xorb
ret
lcall
fisubl
cmp
ss
ficompl
rorb
out
jecxz
push
cmc
sub
pop
cld
decl
cmp
int
fistpll
clc
ss
jnp
arpl
call
leave
push
int
dec
jecxz
arpl
sbb
dec
add
push
and
clc
sbb
out
in
ja
push
mov
into
sbb
jmp
clc
pop
adc
ret
les
ds
inc
jecxz
push
adc
xchg
in
jo
cmp
addr16
mov
add
out
pop
add
xchg
mov
and
repnz
filds
fmull
ffree
cld
add
ror
das
cli
jmp
xlat
xor
inc
and
adc
pusha
mov
cmpsl
ljmp
aas
or
es
jb
ja
sub
jmp
cld
adcl
push
sbb
mov
rclb
mov
inc
add
cltd
sbb
loope
cmp
mov
push
fwait
ja
jae
std
mov
inc
push
cmpsl
xchg
nop
dec
xchg
mov
stc
aaa
adc
mov
mov
sub
inc
inc
jbe
adc
outsb
jne
aad
in
pop
mov
hlt
call
sub
cli
ljmp
or
lods
push
xor
xchg
mov
cmp
add
lcall
das
jecxz
lds
ss
sarb
mov
pop
or
xchg
push
jnp
cmc
jecxz
jne
es
scas
call
scas
sub
jecxz
cmp
in
iret
pushf
shll
push
mov
cwtl
aaa
ja
sbb
fbstp
outsb
add
cmc
jmp
into
jge
mov
fxch
pop
mov
in
out
ljmp
dec
jle
ja
jmp
mov
icebp
jmp
mov
fucomi
test
incl
paddb
mov
mov
cmp
rcrb
mov
out
clc
arpl
ret
xchg
scas
ds
imull
andb
les
cmp
xor
out
xchg
or
inc
cmp
jns
xchg
pop
and
xchg
dec
add
nop
xor
mov
xor
call
enter
and
xchg
dec
or
mov
sbb
cmp
cmc
decl
repnz
orb
loop
push
adc
movsl
out
sbbb
push
sbb
dec
popf
pop
cs
enter
subl
mov
sub
and
out
add
add
insl
aam
inc
cs
shll
cmp
and
mov
inc
jns,pn
sub
jae
insb
cmpsb
mov
outsb
js
sub
push
dec
cli
bound
push
xchg
inc
pushl
enter
scas
xchg
test
aam
loope
orb
insb
sub
fldt
aaa
ljmp
jp
xor
xchg
sub
sbb
pop
xchg
xchg
jge
lret
out
mov
push
dec
mov
mov
std
jmp
mov
jecxz
cmp
jecxz
ret
mov
push
mov
fcomip
jg
and
mov
ds
cmpsb
fidivs
sub
sub
jmp
jecxz
ret
cld
cwtl
sar
arpl
mov
in
fidivrl
rorb
out
mov
fwait
dec
cmp
out
in
hlt
sahf
ljmp
inc
scas
add
or
inc
mov
out
loopne
das
pop
lods
and
sub
clc
stc
mov
pop
in
loop
sub
add
jg
adc
add
push
sbb
push
jecxz
pop
jge
sub
pop
push
jg
call
mov
mov
sub
pusha
outsb
mov
fildll
popa
push
int
pop
mov
cld
ljmp
clc
and
ja
cmp
mov
decl
aas
stc
jecxz
dec
sub
push
xchg
jb
cltd
rcrl
jb
pop
jl
addr16
call
xchg
cmp
adc
jns
cld
das
mov
jmp
xchg
popf
pop
popf
sub
loop
call
lret
jg
add
dec
dec
pusha
xchg
xchg
cwtl
mov
or
test
or
sub
std
pushf
adc
ljmp
or
stos
jmp
lahf
push
shll
xchg
test
decl
mov
inc
add
mov
pop
or
xchg
xchg
cld
jg
mov
pop
rcr
pop
dec
inc
or
sbb
cwtl
js
movsl
ljmp
ret
roll
xchg
in
or
fimull
stos
dec
or
incl
dec
pusha
ret
pop
and
movsb
jmp
cltd
mov
mulb
xor
xor
pop
adcl
pop
addb
or
push
dec
repz
pop
or
adc
jecxz
ljmp
rcr
inc
inc
add
push
jle
fbld
sbb
jae
xchg
xor
aam
aam
xchg
push
call
xchg
fs
adc
and
mov
arpl
fisttpl
test
pop
add
pop
add
jmp
mov
adc
pop
and
dec
call
or
or
aam
cmpsb
out
icebp
aam
hlt
mov
rcrb
xchg
mov
addb
sub
or
std
add
sbb
or
mov
incl
and
rorb
call
dec
pop
loop
sub
incl
adcb
rcrb
js
sbb
mov
cmp
outsl
and
jne
xchg
repnz
or
fcoml
pop
sbb
aam
and
xchg
inc
decl
mov
adc
adc
lds
call
jle
test
lcall
leave
arpl
push
cmp
push
pop
cmpsb
in
les
sbb
and
call
lods
movsl
sbb
or
fld
in
clc
insb
fsubrs
dec
lcall
jmp
push
and
mov
cmpsb
xor
push
add
nop
mov
stc
movsl
das
mov
nop
dec
test
jle
lret
imul
lcall
es
pop
mov
pop
clc
out
in
push
add
inc
test
aam
ja
shrb
lods
lods
pop
add
out
xor
decl
pop
insl
mov
fisttpl
test
inc
lods
stc
jno
or
mov
adc
dec
inc
xor
jmp
jg
fisubl
enter
or
and
adc
sbb
test
dec
sbb
daa
mov
pusha
jno
push
and
cli
decl
jo
mov
int
popa
add
adc
xor
loope
incb
es
call
jno
bound
sbb
pop
pop
xchg
mov
xor
outsl
pop
xor
jmp
add
cs
sbb
mov
popa
aad
cmpb
pop
andb
pop
das
outsb
rclb
enter
insb
std
lcall
and
ret
aam
adc
xor
sub
fildll
push
push
das
lock
push
addr16
jecxz
ret
pop
and
test
ret
test
decl
xor
pop
nop
das
and
pop
pop
and
lcall
fimuls
aaa
xor
cmpsl
mov
ljmp
aam
icebp
aam
push
popf
adc
xchg
pushf
jge
push
stos
aaa
jne
jge
es
call
jbe
lret
dec
pop
rcll
out
or
adc
es
call
add
sub
or
cmp
push
sub
mov
ja
jecxz
out
sahf
cmp
push
mov
outsl
xor
inc
inc
inc
push
push
pop
and
imul
xor
insb
pushf
in
insb
and
out
mov
call
push
stos
xchg
jg
clc
and
stos
xor
or
call
push
adc
add
in
loope
mov
popa
adc
adc
fwait
call
sbb
mov
add
adc
sub
popa
xchg
fwait
inc
loopne
insb
ret
pusha
aad
push
adc
std
add
testb
push
std
decl
pusha
mov
dec
outsb
jl
xchg
jbe
in
mov
fldl
ja
jb
xor
adc
xchg
add
pushf
loopne
aaa
enter
loop
mov
popl
mov
pusha
dec
xor
in
xor
dec
push
add
xchg
jno
xchg
xchg
dec
out
sbb
mov
loope
pop
or
jno
add
cwtl
jecxz
nop
pushl
cs
xlat
inc
add
push
inc
in
jle
mov
fwait
sbb
mov
add
jmp
mov
jae
fs
lock
xor
dec
mov
mov
outsb
mov
add
push
mov
fistpl
movsl
cltd
xor
and
xor
jge
ljmp
jae
movsb
cltd
mov
lods
out
cmp
add
popf
xchg
or
mov
in
aaa
or
inc
push
dec
dec
mov
or
lea
push
push
mov
ja
cmp
mov
test
test
fcmovnu
in
mov
inc
add
cmp
xlat
sub
out
sarb
pop
and
stc
adc
add
inc
adc
pushf
pop
push
insl
scas
add
shrb
pop
mov
push
mov
dec
and
js
femms
adc
icebp
push
mov
out
pop
sar
mov
lods
mov
movsb
push
icebp
add
mov
push
je
scas
idivb
test
mov
lods
add
add
out
mov
inc
test
cmp
subb
mov
mov
xchg
dec
ljmp
inc
aaa
js
sbb
aaa
testb
decl
lock
dec
and
add
mov
or
jmp
int3
ret
dec
sbbb
inc
das
subb
mov
in
ret
popa
inc
cmp
test
cmpsb
int3
inc
jmp
mov
push
push
ret
and
mov
out
fbld
inc
ljmp
and
stos
imul
mov
stos
repnz
mov
dec
call
or
stos
int3
fimuls
call
lea
xor
in
mov
mov
dec
cmp
insb
insb
adcb
repnz
fcomip
fiaddl
push
loope
movsb
pusha
mov
or
or
ss
dec
jmp
jmp
mov
fadds
mov
jle
inc
adc
mov
inc
mov
enter
dec
jecxz
sar
lret
loope
dec
inc
or
lret
xor
sub
hlt
inc
cmpsb
mov
cmpsb
add
xor
call
mov
in
lahf
push
inc
add
sbb
std
insb
in
jle
xor
enter
mov
and
gs
xchg
push
in
ljmp
mov
sub
sbb
nop
loop
rol
jle
pop
cmpsl
xor
cmpsl
xor
push
jecxz
incl
data16
cs
and
out
mov
mov
adc
call
std
jmp
sahf
ljmp
push
rolb
out
popa
jp
or
test
cld
cmc
lcall
fildl
xor
and
pusha
call
movsb
mov
xchg
inc
into
jecxz
mov
lods
lock
and
cli
out
imul
push
nop
scas
adc
orl
scas
addr16
decl
lcall
inc
or
enter
xacquire
aaa
cld
push
adc
mov
push
adc
es
fsubp
adc
cmovs
outsb
and
push
inc
mov
call
pushf
in
push
das
cli
lea
stos
dec
movntps
es
rclb
call
cld
incl
clc
mov
or
sahf
dec
fadds
adc
jmp
adc
and
add
pop
in
inc
mov
js
push
inc
xor
xchg
pop
test
jnp
mov
xchg
or
dec
icebp
sub
mov
dec
sub
or
js
mov
js
push
cmp
cmpsl
and
mov
repnz
in
mov
out
and
xor
dec
jmp
aam
push
mov
jl
xchg
mov
ljmp
xorb
lret
aaa
xchg
dec
andb
xor
movsb
movsl
ret
cmpsb
xor
pop
add
or
sub
in
stos
decb
and
mov
cmpsb
push
insl
lods
mov
maxps
push
cli
out
and
add
add
ljmp
cmp
push
outsb
inc
sbb
scas
out
inc
and
aad
sarl
fs
dec
les
xor
into
idiv
ja
adc
inc
sub
add
hlt
add
pop
dec
xchg
hlt
xchg
or
cwtl
dec
xchg
inc
jmp
pushf
cmp
adc
pushl
add
outsb
loope
mov
pop
xor
and
pusha
xor
inc
bound
icebp
jg
adc
and
adc
pop
cld
xchg
add
ss
arpl
mov
push
stos
cmpsb
add
adc
test
scas
test
jnp
and
mov
add
dec
lds
adc
das
cmpsb
inc
repz
adcb
arpl
add
aad
ljmp
stos
lods
lock
pushl
lret
test
pushl
cmpsl
lds
dec
push
mov
push
rorb
std
rorl
lahf
pushl
shrl
cld
popa
aas
fldcw
add
or
imul
inc
leave
push
adc
mov
nop
sub
adc
nop
lcall
decl
pop
shlb
adc
mov
mov
adc
das
insl
or
call
hlt
clc
xchg
push
xor
sub
je
inc
xor
push
xorb
dec
mov
and
lods
rorb
or
out
mov
xor
jg
ljmp
dec
mov
loop
xchg
in
dec
sti
pop
lcall
pop
lret
ss
mov
sub
jg
inc
jmp
out
movsb
lcall
mov
xchg
push
push
cmp
movsl
jg
jecxz
aaa
cld
loop
ss
pop
call
lcall
cmp
ljmp
incb
in
sub
popf
incb
dec
call
xor
xor
add
je
xor
dec
and
lret
lret
stos
pop
test
fcoml
cmp
aaa
xchg
jg
decl
mov
arpl
ljmp
jbe
imul
jp
call
cld
dec
mov
sub
cmpsb
push
shl
xchg
aas
fwait
sub
push
adc
or
inc
sbb
aam
stos
cmpsb
push
roll
mov
decl
clc
movsb
jb
in
sub
inc
daa
lcall
inc
pusha
adc
xchg
pop
stc
inc
mov
xor
cmp
cmc
mov
out
hlt
lods
inc
jmp
jmp
xchg
cmp
dec
cltd
inc
add
jle
inc
cmc
xchg
jae
addr16
hlt
cs
and
jbe
pushl
pushf
rclb
fs
mov
test
push
mov
incl
in
dec
sar
and
addr16
pop
clc
call
mov
and
mov
call
xor
aaa
add
pop
xor
dec
imul
xchg
inc
and
mov
mov
in
mov
mov
shl
sub
in
outsl
cli
pushl
dec
mov
or
push
int3
sub
cmp
or
mov
jb
out
add
stos
xchg
test
insl
adc
lret
mov
push
std
jmp
icebp
cli
sub
and
call
jl
mov
les
push
cmp
out
ja
ljmp
pop
jmp
outsl
lahf
xor
mov
pop
adc
ljmp
mov
jecxz
inc
push
ja
nop
divl
mov
xor
cmc
pop
xlat
mov
adc
arpl
mov
aad
lcall
pusha
jnp
cld
mov
adc
sbb
pop
push
scas
aam
fildl
ljmp
sub
dec
fucom
xor
jmp
test
addr16
ret
sub
shlb
and
xor
and
cmpb
hlt
inc
incl
aas
lods
cs
add
push
push
inc
inc
in
hlt
ret
ss
cmp
cmp
sub
shll
aaa
pop
sub
xchg
xor
sub
mov
dec
add
pushl
aaa
xor
insb
xor
add
cmp
xor
movsb
mov
in
pop
incb
inc
pop
push
xchg
mov
xor
lds
cmpl
inc
setl
or
or
xchg
es
filds
inc
cs
lock
sub
mov
and
push
sbb
mov
sub
xorb
imul
adc
fs
inc
pop
int
into
lods
repnz
jbe
daa
lret
push
mov
fildll
mov
add
and
sub
push
mov
push
lea
xor
js
jmp
xchg
cli
repnz
int3
jbe
adc
das
push
jne
add
dec
xor
push
std
pop
cmc
xor
or
divps
jg
push
call
and
sub
in
pop
add
add
mov
mov
or
mov
xchg
or
imul
roll
pop
add
or
loop
push
mov
push
subb
push
mov
inc
xor
mov
adc
add
xchg
andl
xor
imul
loop
lea
lret
ss
out
push
ja
cs
fildll
xor
lods
rcrl
xor
inc
add
lcall
pushf
xchg
nop
imul
sti
xlat
cltd
addr16
dec
xor
sarb
jo
push
fadds
out
adc
or
nop
add
in
xor
hlt
sbb
mov
jb
add
pushl
shl
push
les
pusha
movsb
mov
es
mov
push
mov
lret
ss
adc
aad
cmp
decl
jl
add
pusha
pcmpeqb
inc
repz
mov
sbb
imulb
jg
sbb
xor
jbe
lds
jb
mov
nop
aaa
data16
incl
mov
popf
ljmp
ret
ret
push
jg
xchg
or
inc
push
fildll
incl
mov
jmp
ss
adc
stos
and
cmp
es
cvtps2pd
cmpsl
in
incl
push
sub
stos
mov
add
xchg
or
push
std
mov
aam
mov
adc
dec
cmpsb
je
cs
jb
dec
xor
cmp
push
jns
fistl
mov
add
mov
aaa
push
ljmp
push
cltd
mov
xchg
sbb
insl
jb
imul
jae
lret
or
scas
jmp
leave
clc
enter
mov
daa
xlat
pop
repz
daa
std
push
mov
data16
cwtl
sti
jo
cmp
int
push
stos
int3
cmp
jecxz
cmc
decl
jno
push
mov
xor
imul
inc
cs
clc
mov
mov
lcall
pop
scas
cmovp
movsl
fwait
sti
mov
xor
add
pop
out
cli
jmp
pminsw
repz
push
mov
pop
shr
pop
pusha
ss
cli
cmp
xchg
sarl
cs
pop
cs
and
mov
lds
dec
and
in
les
addl
push
fcmovnbe
in
movsb
push
popf
psubusb
frstor
fstp
adc
popf
push
cld
cmpsb
decl
pop
jne
pop
or
pop
into
pop
or
pop
and
mov
mov
loopne
mov
push
or
call
xor
loope
push
cmp
imul
jle
imul
mov
mov
pop
addb
mov
mov
lcall
subl
nop
popf
je
adc
loope
int3
clc
or
jmp
int
insb
inc
stc
in
out
call
repnz
movsb
mov
lcall
inc
dec
cli
mov
fmull
jmp
jge
sbb
outsl
add
xchg
jmp
in
push
mov
sbb
js
add
add
xchg
movsb
das
and
mov
jmp
add
cmpsl
int
add
xchg
sub
cli
pop
jbe
ret
aad
enter
jae
pop
aad
adc
rorb
imul
pushf
or
jg
xlat
cmpsl
fs
xchg
outsl
clc
mov
adc
dec
push
popa
jp
or
insl
inc
cmp
mov
repnz
fwait
pushl
xchg
test
data16
mov
add
add
push
fcomip
push
pop
dec
jle
sbb
in
push
cmc
orb
imulb
testb
testb
notl
filds
pop
mov
sar
or
pop
in
jbe
jmp
sbb
fildl
pop
test
push
lret
lret
inc
xchg
jmp
pop
leave
out
test
xor
std
mov
xorl
sub
pop
shlb
dec
cmp
int3
pusha
mov
dec
cmp
jae
and
push
jmp
inc
into
dec
pop
add
mov
sbb
cs
shlb
pusha
inc
sub
outsl
jmp
pop
push
xor
icebp
push
mov
xchg
lcall
mov
jbe
enter
mov
das
mov
adc
mov
enter
std
call
aas
cmpsb
hlt
cmp
and
xor
call
je
arpl
sub
inc
out
clc
add
xor
mov
repz
stos
jg
cmp
xchg
imul
enter
out
mov
incl
subl
add
cmp
cmp
sbb
std
push
cld
mov
mov
pop
ljmp
cmp
mov
fldcw
mov
mov
dec
inc
jmp
pop
das
mov
fnstenv
outsl
clc
insb
fcomi
jmp
pusha
ret
data16
cmc
push
lods
mov
sub
ljmp
les
shrl
jp
adc
lock
call
jmp
shlb
js
dec
jmp
fsubl
xor
lds
mov
push
test
jne
sbb
addb
push
pop
dec
adc
and
xchg
and
jns
fwait
pop
pslld
imul
add
pushf
insb
sahf
insl
sub
cmc
pop
insl
jp
sbb
lods
es
mov
rcl
in
jg
mov
push
inc
loope
adc
and
clc
mov
lea
cwtl
mov
push
push
and
stc
arpl
pop
add
and
push
inc
add
jns
inc
push
outsb
mov
fcompl
orl
test
xor
fistps
cld
pop
or
dec
aam
dec
sub
aam
dec
sbb
xor
jns
pushf
incl
xor
xchg
jle
mov
push
mov
adc
aad
push
add
lds
adc
push
dec
cmpsl
sahf
mov
js
inc
push
addr16
adc
out
pop
outsl
mov
xchg
leave
jmp
rclb
scas
mov
xchg
lahf
pusha
add
imul
decl
mov
push
imul
fadds
cmp
mov
adc
jb
add
scas
adc
push
lods
add
pushf
xchg
xchg
pop
lods
aam
add
lcall
dec
add
lcall
jb
jp
pop
sbb
jb
dec
pop
ret
push
jb
sbb
inc
jb
sahf
inc
fs
je
add
subb
int
bound
fcomip
call
addl
xor
ss
mov
lcall
shll
jbe
insb
fbld
sub
mov
lcall
xor
lsl
popa
cmc
sub
sub
cmp
xchg
push
push
stc
push
xchg
arpl
cmpsb
fcomip
jmp
adc
push
pop
decl
sahf
adc
push
rolb
cmp
inc
mov
lret
jns
movsb
rorl
mov
repz
fbld
in
adc
lea
fcomps
push
xchg
push
inc
mov
roll
mov
dec
inc
adc
adcb
jmp
jg
jg
outsb
cmp
dec
xchg
push
mov
sti
sub
jg
les
stos
dec
and
or
leave
incl
xchg
push
pop
pop
cmp
xchg
or
xchg
xchg
adc
outsb
mov
push
ja
lcall
scas
test
mov
xor
sysret
pop
clc
aaa
jecxz
pop
add
in
out
inc
idivb
adc
lock
dec
or
fwait
xchg
stos
push
es
ljmp
ret
ljmp
inc
cmp
je
push
pop
cmp
gs
inc
and
xchg
andb
xchg
in
mov
xchg
mov
mov
sar
subl
fmul
lret
inc
out
pop
mov
test
push
pushl
cltd
dec
test
and
mov
js
lods
xor
inc
jp
push
xchg
hlt
adc
mov
lea
cmp
fisubrl
movsb
jg
mov
mulb
push
test
cmp
sbb
add
ss
movsb
dec
and
sub
ljmp
mov
cmc
lods
jno
pop
shll
out
adc
or
push
lea
add
sbb
insb
adc
out
add
loopne
movsl
mov
mov
adc
push
dec
sub
call
movsl
sub
xchg
dec
mov
loop
push
lock
gs
cwtl
jecxz
mov
pusha
insl
lock
mov
mov
inc
loop
out
pop
or
cmp
lcall
call
mov
rolb
mov
dec
out
popf
xchg
sub
aam
neg
pop
inc
movsb
lock
cmp
fwait
or
lods
fwait
enter
clc
ljmp
push
mov
inc
test
push
pushl
mov
xor
sahf
add
cmpsl
add
mov
sub
mov
and
or
inc
and
rorb
fimull
push
or
sbb
mov
mov
lds
bound
adc
dec
pop
inc
mov
add
mov
in
cld
adc
mov
xchg
jmp
call
mov
adc
cltd
dec
dec
push
frstor
mov
lea
push
mov
leave
mov
sub
insb
push
xchg
push
push
jl
mov
decl
movsb
cmc
es
loopne
leave
aaa
inc
sub
lods
imul
pop
mov
dec
jmp
sub
leave
cltd
adc
add
mov
sub
jo
adc
das
add
loop
or
push
testl
sub
cmp
ss
push
push
mov
or
cmp
nop
add
mov
incl
or
movsb
push
push
and
push
lds
dec
in
or
mov
and
faddl
push
xor
stc
mov
das
xor
or
in
and
jmp
js
and
cwtl
sub
push
fiaddl
jge
movsl
decl
push
es
repz
idiv
ss
in
dec
push
cmp
xchg
jmp
jg
fs
push
ja
jmp
adc
and
sub
cltd
int3
cmp
ljmp
jo
ret
adc
std
pushl
xor
nop
fdivrs
pop
cltd
lock
pop
sub
nop
nop
push
push
mov
test
ljmp
aad
inc
push
mov
mov
mov
lea
pop
cltd
nop
inc
xchg
call
hlt
addr16
hlt
mov
push
mov
stos
pop
shrl
mov
lcall
add
hlt
out
test
xchg
enter
fs
ljmp
push
sbb
cmp
aas
adc
jnp
inc
xor
jo
loop
mov
dec
adc
xor
jb
test
pop
dec
std
testb
ret
negb
popa
adc
sub
jl
andb
sbb
mov
jg
mov
adc
shlb
dec
stos
push
or
jmp
fidivrs
cmp
lret
pop
cmp
in
mov
jbe
or
iret
pop
mov
jg
and
mov
je
xchg
mov
push
adc
or
scas
cli
jmp
push
andl
ljmp
ljmp
add
scas
out
sbb
gs
test
sbb
decl
loopne
mov
xor
test
mov
jle
loop
sar
incl
mov
adc
jns
mov
sbb
nop
jg
mov
lods
int3
push
mov
cwtl
mov
jno
js
rcll
mov
sti
call
add
jo
sbb
or
nop
je
leave
dec
inc
mov
nop
add
loop
dec
and
push
out
cmp
cmp
and
mov
pushl
lods
roll
test
stc
xchg
dec
add
and
push
aas
ss
fwait
test
mov
in
and
cli
pop
fxtract
sahf
add
call
dec
ja
xor
push
adc
aad
jmp
mov
mov
xlat
mov
or
in
inc
sbb
popa
ja
es
outsl
jg
insb
and
shll
adc
push
jne
push
cmp
int3
adc
fdivrs
xor
dec
filds
adc
ja
les
std
xchg
test
inc
jp
decl
mov
aad
xor
ret
enter
xchg
in
or
jg
push
mov
cmp
fs
ja
sbb
testl
ja
lcall
inc
sub
jb
fisttps
cwtl
dec
dec
imul
push
xchg
pushf
xlat
aaa
std
inc
dec
call
inc
push
xchg
pusha
mulb
pushl
daa
testl
repz
inc
mov
push
hlt
push
push
ja
push
adc
jmp
mov
push
gs
dec
lods
xor
and
adc
xchg
mov
lcall
add
pop
pop
rclb
and
outsb
aaa
ljmp
or
rcrb
or
and
lds
jp
sub
test
push
sbb
dec
orb
sbb
nop
add
and
loop
xor
push
or
lcall
repnz
and
xor
lods
push
push
xchg
jp
xor
cwtl
in
push
loope
push
add
dec
push
xchg
outsb
add
jg
ret
inc
popa
xchg
stc
push
push
scas
pop
inc
mov
mov
les
jg
and
push
pop
lcall
ja
ret
fldenv
sbb
push
mov
das
mov
pop
sbb
sar
mov
lds
imulb
ds
ja
or
inc
test
cmp
and
les
jbe
push
mov
sub
idivb
sub
inc
jg
sbb
adc
inc
jnp
add
adc
cli
pop
imul
push
add
adc
xchg
ljmp
xorb
ja
daa
mov
adc
cmp
adc
mov
jle
test
pop
call
das
fsubs
mov
xchg
pop
in
pusha
ja
outsb
call
xor
push
inc
loop
incl
and
adc
enter
pop
adc
ljmp
add
xchg
dec
aam
out
call
pop
sbb
jb
xor
popa
icebp
sub
push
push
fldcw
inc
cmp
test
lock
sub
add
or
popa
rol
jo
ret
out
clc
dec
mov
rolb
mov
mov
xchg
sti
inc
jnp
inc
es
adc
push
adc
loopne
adc
push
daa
xchg
xchg
adc
adc
sbb
dec
outsb
pushf
jns
adc
sbb
jmp
movsl
sbbl
pop
shll
xor
dec
inc
xor
mov
sub
ljmp
mov
and
adc
lds
add
sbb
bound
push
adc
xor
mov
cli
lds
enter
hlt
ljmp
inc
xchg
jb
andl
imul
cld
pop
push
inc
xor
adc
jl
andl
add
adc
add
inc
lock
pushl
loope
sar
add
xchg
addl
inc
fisttpl
jae
mov
or
out
in
inc
pop
pop
mov
jg
add
push
sbbb
call
adc
add
bound
sub
repz
push
cmpsb
mov
incl
stos
cmp
push
jne
add
jmp
sbb
lock
mov
popa
mov
push
loope
cmp
roll
hlt
add
ljmp
aad
jb
or
mov
arpl
leave
out
and
mov
insb
bound
xchg
jp
xchg
adc
scas
cli
idivb
lock
loope
adc
xchg
ficoml
inc
sbb
jmp
add
add
jg
and
jb
cmpsb
xor
sbb
clc
incl
lds
xor
fsts
push
and
inc
push
enter
call
cmpl
das
pushf
push
into
xorb
inc
push
test
jae
mov
push
enter
outsl
dec
push
decl
ss
ret
and
mov
dec
ss
addr16
xor
outsl
and
jge
cmp
clc
jg
dec
aaa
jp,pn
pop
das
shll
push
pop
xchg
gs
cltd
add
je
mov
adc
pushl
enter
jg
dec
push
fwait
sub
fwait
pop
pop
add
fwait
in
jle
or
decl
gs
cmp
adc
sbb
mov
or
incl
mov
jecxz
sbb
ret
add
add
test
pop
inc
xchg
dec
sar
ja
jb
push
testl
sub
pop
push
or
call
pop
pushf
xor
cmp
sbb
cs
dec
pop
sub
xor
cltd
jg
sub
cmp
adc
or
and
jnp
outsb
out
decl
les
or
fidivrl
repz
das
mov
lahf
sub
ja
jns
push
inc
mov
push
aad
dec
sbb
cmp
mov
cmp
mov
call
cmpsb
movsb
dec
push
dec
and
cmp
dec
cmc
push
call
lds
incl
push
dec
adc
push
aad
push
cmc
movsl
bound
imul
inc
js
test
and
jmp
cld
pop
inc
push
push
cmpsb
inc
shrb
lcall
and
jg
pop
into
mov
vmread
loop
or
mov
jne
test
cli
mov
negb
add
cmp
mov
sbb
jl
adc
jno
mov
decl
xchg
cmp
mov
dec
xor
cli
xchg
aad
jmp
xor
pushf
adcb
jge
sub
mov
inc
push
pop
xchg
jno
aaa
lahf
mov
mov
sar
inc
xor
inc
mov
sub
test
aaa
loopne
push
pop
mov
adc
pop
xchg
add
gs
call
push
cmpsl
fs
adc
jp
aad
fcomps
in
cmp
and
and
imul
jmp
popa
cs
lods
enter
pop
jl
dec
mov
mov
inc
xor
mov
decl
push
push
jl
pushl
add
push
add
xor
push
dec
xor
and
push
fisttps
and
push
and
mov
mov
ss
mov
repnz
andb
fistpl
movsb
jp
pop
push
daa
out
cmp
das
push
js
mov
inc
shr
cmpsb
jno
fcomp
push
add
je
fwait
lcall
cltd
push
test
dec
mov
out
cli
jg
push
fldt
or
fs
pop
push
loopne
pop
sub
es
movsl
cmp
xor
pop
es
pop
sbb
cmp
adc
mov
jo
push
mov
adc
sahf
pop
sarl
mov
mov
lcall
sub
orb
pop
cmc
mov
jg
or
or
push
push
fidivl
xchg
sbb
cmc
and
ljmp
jns
les
scas
adc
lods
scas
xor
andl
pushl
jp
sub
and
or
cmpsl
repz
inc
pushl
push
rcrl
in
mov
adc
xchg
addr16
mov
push
xchg
adc
inc
lret
xchg
dec
sbbl
call
cmp
jb
clc
popa
lea
call
and
and
inc
push
les
daa
mov
and
rolb
mov
hlt
daa
ss
jmp
out
clc
icebp
pop
test
mov
push
inc
pop
pop
stos
aaa
xchg
pushw
icebp
inc
cmp
push
std
decl
pop
xchg
in
jne
gs
sub
jbe
jg
stos
ss
push
lods
mov
loopne
movsl
mov
mov
ljmp
add
pop
sbb
sbb
add
lret
outsl
clc
jmp
push
mov
mov
cmp
loope
imul
fcomip
jne
nop
int3
dec
and
inc
ljmp
dec
das
add
pop
test
xchg
ja
pop
icebp
or
mov
xor
jo
decl
dec
mov
push
js
xchg
jl
mov
call
popf
sahf
and
push
lock
outsl
push
cmp
xchg
sub
adc
scas
or
cmp
cmpb
incl
addl
loop
mov
bound
andb
sbb
sar
incl
xchg
shll
aaa
inc
sarb
adc
or
push
inc
xor
xchg
push
cmpb
cmp
adc
pop
mov
sbb
lret
out
mov
cmp
pop
inc
fsubrs
out
clc
int
ja
adc
mov
pushl
nop
aam
les
jns
je
mov
and
inc
sbb
inc
fucomi
test
mov
or
lock
mov
insb
subb
ficoml
sbb
cmp
bound
shll
inc
sub
adc
rolb
pop
cs
ljmp
or
jno
movsb
je
push
add
rcr
movl
fisubrl
pushl
xchg
mov
dec
inc
and
leave
sub
cltd
xchg
and
sbb
add
push
aaa
sbb
mov
out
add
incl
inc
mov
pushf
add
xchg
and
mov
fs
cmpsb
push
loop
imul
cli
jae
ss
xchg
sub
mov
inc
popa
inc
inc
dec
jmp
flds
je
and
lods
or
scas
mov
inc
shll
jl
leave
or
ljmp
movsb
xor
ret
scas
movl
dec
jle
fildll
sub
lret
mov
stos
outsb
add
aaa
sbb
cmp
aaa
or
inc
mov
mov
inc
or
xlat
cmpsl
addl
lcall
inc
cmpsb
neg
dec
mov
push
xor
in
in
or
inc
ss
jno
out
adc
pop
cmp
cwtl
pusha
ss
pop
mov
les
dec
xor
ljmp
movsb
sub
push
ljmp
ret
aam
sbb
add
jmp
fbld
inc
sahf
xchg
stos
jg
push
iret
std
jno
mov
ja
test
pop
mov
int3
mov
inc
push
test
cmp
jns
sub
sbb
or
cmc
mov
push
pop
out
cmc
pop
das
or
js
clc
mov
fisubrs
aaa
cld
incl
outsb
or
pop
and
xchg
dec
mov
jle
jp
cs
inc
ljmp
push
jae
aas
cmc
scas
pop
data16
out
and
push
adc
and
dec
pushf
cmp
jae
jmp
aad
ret
fadds
inc
lret
mov
mov
push
cmp
add
add
in
push
sub
data16
mov
adc
imul
rolb
leave
inc
call
fsubs
jmp
xor
inc
push
fildll
gs
lcall
or
mov
or
xchg
lea
into
fchs
lods
outsb
pop
adc
repz
incb
ljmp
pop
mov
jno
fisubl
cmp
inc
imul
outsl
pop
inc
std
call
mov
cmp
das
and
rorb
mov
sbb
int3
and
pop
cmp
clc
fcoml
inc
sbb
pop
inc
loop
rol
jno
mov
inc
or
jg
decl
push
push
add
inc
jae
sub
xchg
jne
sbb
cmc
sub
mov
fistpll
push
loop
loopne
imull
or
shll
inc
push
jle
mov
stos
pop
incl
push
leave
sahf
insb
jl
insl
movsb
es
push
lret
push
xor
mulb
lahf
loope
inc
lds
jge
call
out
push
insb
stos
lods
fsubr
outsb
pop
mov
orb
je
insb
in
jmp
cltd
inc
adc
addr16
jne
adc
lea
fdivrs
int3
sbbl
mov
fbld
mov
fcos
mov
loop
repnz
sbbl
xor
sub
xchg
ss
sub
and
fucomip
loopne
inc
sub
and
cmp
popf
xchg
fstpt
stos
mov
push
fsubs
sahf
dec
incl
pop
sbb
xchg
push
popl
insb
test
mov
cmp
roll
pop
cld
mov
lret
mov
pop
mov
in
push
sub
pop
push
mov
call
mov
xchg
lcall
or
adcb
pushl
mov
andl
ljmp
and
lcall
enter
lea
shlb
ss
pop
mov
iret
fidivrl
mov
pop
std
pop
mov
add
test
rorb
js
cld
push
inc
lcall
jmp
jnp
sub
shll
dec
xchg
and
jmp
and
cmp
call
pusha
rcrl
fimull
push
cmp
mov
cmc
or
arpl
stos
test
pop
jns
add
dec
jo
nop
adc
pop
dec
cld
pop
mov
mov
in
mov
in
pop
leave
jnp
jge
jns
jmp
jmp
cld
push
and
ds
xor
aas
add
fsubr
lods
scas
incl
in
sub
or
inc
xor
sti
add
stos
mov
shl
mov
mov
and
sar
call
lahf
adc
push
xchg
lds
fcmovb
add
fistpl
pushl
push
inc
sbb
sub
sti
insb
rolb
mov
sbbb
push
cmc
call
aam
rorl
rolb
add
shlb
into
lret
xor
cs
or
and
xchg
lcall
pop
push
ror
and
aaa
push
inc
sbb
add
popa
mov
mov
mov
loop
decl
scas
mov
push
test
dec
adc
jae
pushl
jne
lea
rcr
pusha
xchg
sub
stos
ljmp
je
adc
test
xchg
sub
fldt
or
xor
xchg
or
pop
mov
jo
stos
lods
mov
jg
imul
addb
fdivs
sbb
les
push
jmp
lret
and
xor
adc
push
fmuls
dec
mov
sub
sub
push
or
ljmp
xlat
fisubl
mov
imul
cmp
lea
loope
jp
cmp
incl
sub
push
jbe
fcomi
aam
dec
cmp
shlb
cmp
mov
out
mov
sti
sbb
rcr
pop
ret
mov
movsb
pcmpgtd
and
mov
jg
sub
ret
into
cltd
ret
fwait
incl
cmp
jno
xchg
notrack
fwait
inc
adc
inc
subb
cli
imul
stos
xor
add
jb
and
shl
ljmp
mov
and
pusha
test
inc
cmp
add
jb
push
xchg
enter
add
add
lea
cli
ss
xor
cmp
dec
fstps
test
dec
pushf
and
sar
outsl
mov
cmp
movsb
loopne
and
pusha
orl
jo
or
jbe
mov
push
add
pop
and
or
sub
mov
adc
int
ljmp
adc
mov
xchg
stc
sub
sub
decl
sbb
pop
out
xchg
out
mov
xor
and
sar
sub
mov
jge
adc
andb
sub
test
jg
jecxz
mov
jmp
or
cmp
inc
add
xor
jl
loopne
es
outsl
mov
aaa
cld
dec
pop
mov
cmp
pushf
xchg
jl
das
mov
mov
movsb
lahf
adc
sub
ja
pushl
sub
fxch
je
inc
sahf
or
push
test
xchg
push
mov
cmp
call
adc
jne
inc
xor
and
jge
mov
push
mov
pop
push
adc
dec
push
push
ret
fsubs
sub
mov
aaa
das
dec
inc
xorb
xor
in
mov
mov
pop
mov
inc
sbb
jg
mov
sbbb
jnp
push
add
cmp
push
je
cmp
lods
bound
push
mov
ss
mov
jne
mov
inc
dec
outsb
xorb
clc
or
xor
push
cmc
scas
jno
lcall
call
lret
lods
push
push
lahf
or
sub
je
jo
sbb
ret
adc
lcall
fimuls
xlat
repnz
addr16
pushl
scas
add
popa
xlat
inc
push
rorb
jle
jb
sub
aas
jns
movsb
jle
mov
sbb
rorb
xor
and
or
jmp
cmp
adc
jmp
outsl
pop
inc
cmp
xchg
jns
or
cmp
test
inc
negb
sub
shrb
add
cs
clc
pop
sbb
mov
pop
movsl
or
aad
and
jmp
jmp
mov
xor
jmp
and
sbbb
mov
lcall
xabort
jmp
adc
stos
push
add
imul
fists
dec
or
clc
and
enter
mov
js
incl
adc
ret
inc
push
mov
lods
and
fcomip
decl
sub
leave
rcrb
mov
pop
ljmp
lods
fistps
mov
lret
pusha
dec
push
mov
mov
ret
xchg
fptan
push
mov
in
into
shrb
lret
imul
inc
aaa
cld
cmp
cli
lret
xor
push
lods
mov
xor
les
sar
pop
test
sbb
dec
call
mov
push
in
add
inc
mov
or
inc
push
cltd
sub
mov
pop
decl
leave
enter
orl
test
es
sbb
ljmp
aas
pop
std
flds
sub
pop
test
aaa
adc
fwait
add
and
insl
sbb
movsl
scas
xchg
lea
sub
call
mov
jecxz
call
fsub
push
jecxz
and
xor
add
mov
or
cld
mov
xor
fcoms
into
mov
jle
pushf
jecxz
pop
and
sub
jecxz
sbb
cwtl
shl
fdivl
adc
ret
cmp
jp
adc
clc
dec
mov
inc
lea
jo
add
incl
jmp
cmp
xchg
cltd
xchg
push
cmpsb
adc
movsb
in
test
data16
in
sub
sub
push
cltd
aad
or
in
add
js
sahf
out
mov
inc
incl
test
add
mov
mov
ljmp
hlt
cmp
ljmp
jge
adc
push
daa
pushw
incl
and
mov
cmc
sbb
decb
xchg
out
inc
bound
mov
pushf
lds
xor
out
cltd
jns
adc
push
mov
mov
mov
mov
movsl
out
clc
sbb
jbe
mov
fcmovbe
scas
movsl
iret
call
call
rolb
or
cmpsl
cmp
pop
andb
bound
mov
icebp
push
pop
mov
push
jb
sbb
insb
insb
sbb
push
icebp
test
decl
mov
scas
jp
jo
imul
test
das
xor
push
roll
mov
push
fcomip
fists
pop
mov
dec
mov
xchg
addr16
aas
jl
mov
call
sahf
gs
sbb
sub
popa
jg
fnstenv
and
jmp
adc
int
dec
adc
mov
xor
dec
test
mov
lds
aas
cltd
sbb
pop
cwtl
cmp
dec
push
out
dec
cs
rcrl
cli
int
aam
jmp
fistl
icebp
or
outsl
mov
in
or
and
es
mov
xor
test
cmp
jmp
mov
inc
pop
mov
push
data16
getsec
xchg
mov
sub
mov
out
or
ds
call
addb
sub
sbb
hlt
and
mov
ljmp
rcl
outsl
cmp
dec
leave
sub
pop
loope
frstor
pushl
xchg
aas
push
in
dec
loope
cli
ret
pushf
and
mov
ret
lcall
scas
pop
sbb
adcb
mov
mov
pop
adc
or
inc
and
pop
pop
out
fmull
jmp
mov
cmp
lods
pop
sub
bound
shl
clc
ljmp
cmp
rolb
mov
aaa
movsb
lret
outsl
lcall
or
pop
call
mov
clc
dec
adc
lcall
scas
das
mov
push
and
push
test
add
enter
mov
mov
shlb
lea
pop
incl
dec
ss
cwtl
clc
inc
ss
incl
pop
shrb
mov
sub
and
lea
scas
add
cli
mov
repz
push
mov
inc
test
or
sub
add
mov
add
js
lcall
aaa
std
jmp
mov
leave
dec
push
inc
dec
xchg
and
ror
cmp
mov
xor
xor
cmp
scas
mov
out
mov
clc
mov
lds
sbb
fwait
cs
push
mov
sahf
xor
scas
nop
es
inc
sub
sti
and
rcrl
roll
cmp
ret
popf
and
mov
pop
pop
inc
add
aam
jmp
and
jp
jmp
xor
xchg
cmp
sub
mov
sarb
sub
push
ljmp
hlt
decl
mov
sbb
out
mov
sbb
mov
outsl
cmp
movsl
mov
mov
dec
and
pushl
jp
xchg
xchg
xor
decl
call
mov
jnp
leave
fwait
mov
dec
and
jg
lods
pop
mov
adc
dec
les
jae
lock
dec
sbbl
sbb
icebp
shrb
mov
or
cmp
subl
lock
ret
inc
mov
and
in
mov
inc
push
pop
dec
xor
jmp
mov
sbb
orb
sub
das
push
xchg
push
mov
sub
jg
xchg
pop
or
lcall
xchg
sbb
add
adc
mov
adc
jmp
jae
cmpsb
pop
fistpl
sbb
adc
cmp
mov
xchg
mov
pop
rolb
mov
and
mov
mov
bound
push
dec
ret
imul
loopne
int3
enter
or
xchg
push
or
push
fisttpl
mov
mov
mov
mov
lea
aas
dec
adc
mov
dec
jo
mov
cmpsb
xorb
mov
arpl
lcall
sub
adc
mov
shlb
xor
nop
movsb
movsl
sbb
mov
jmp
decl
sub
ret
pop
sbb
push
jne
xor
mov
nop
cmp
decl
mov
and
inc
pop
dec
movsl
dec
dec
xor
jno
sbbb
mov
call
loopne
mov
add
dec
add
xchg
ror
orl
call
cmp
lret
dec
xchg
stos
xor
jns
xchg
lods
and
mov
lahf
fucomp
xchg
lret
sbb
call
xchg
sbb
ret
insb
dec
or
mov
mov
jg
add
sahf
fs
dec
cmp
aas
fmull
in
icebp
xchg
push
cwtl
jecxz
daa
jg
push
cmp
decl
xchg
lods
mov
inc
cmpsl
fstps
jb
mov
in
mov
je
jo
shl
xor
decl
stc
adc
cltd
mull
dec
lret
cmp
or
repnz
add
cmp
mov
mov
mov
mov
cli
dec
pop
mov
xor
inc
xchg
or
popf
sbb
lcall
and
lcall
loope
fdivrs
fbld
sbb
adc
push
or
les
adc
mov
fs
popa
sub
mov
cld
cmp
jg
jge
or
ror
dec
add
and
add
inc
mov
add
mov
daa
mov
push
pop
arpl
or
xor
aas
cmp
push
xlat
mov
or
lcall
pop
push
mov
call
cmp
fnstsw
mov
add
sbb
cmpsb
cmp
xchg
cli
sbb
mov
jne
mov
jp
xlat
xor
and
rcll
pop
sbb
les
mov
jg
movl
push
in
loop
inc
mov
fistps
mov
je
arpl
jbe
cmp
andb
das
clc
jl
out
push
iret
or
mov
popl
cmp
ljmp
hlt
cltd
inc
or
les
push
cmc
ret
fistpl
lret
mov
and
scas
fcomip
stos
add
aam
mov
lret
inc
sahf
aas
icebp
stos
or
mov
or
jp
ret
movsb
push
decl
bound
movsl
pushf
call
pop
sbb
adc
aam
fcoml
jns
or
jl
addb
rolb
adc
sar
xor
ret
dec
cltd
pop
jmp
pop
loop
xchg
movsl
sbb
out
lds
lcall
push
int
inc
imul
repz
mov
mov
jmp
cwtl
mov
lahf
fisubrl
fucom
incl
and
aam
jns
or
sbb
loopne
cmp
jmp
mov
lea
push
fisttpl
push
rol
sub
fisttpll
xchg
outsb
xchg
mov
jg
andb
cmpsb
lods
inc
pushf
loope
lods
lods
fisubrl
dec
dec
shlb
cltd
lods
lods
cmp
cmp
push
in
nop
out
ret
inc
inc
push
mov
jb
aas
sbb
lods
iret
and
cmp
incl
inc
and
adc
mov
adc
cmp
sbbb
mov
in
mov
adc
test
inc
pushl
test
lds
push
hlt
xchg
mov
jno
inc
xchg
subb
mov
mov
shlb
inc
or
hlt
pop
sub
lods
jp
mov
popf
jmp
es
jmp
icebp
xlat
xchg
sbb
fsts
jecxz
jp
sub
fcom
int3
pop
push
sub
inc
in
jmp
and
push
or
sub
mov
or
push
fistpll
fdivl
pop
int3
cmp
aam
inc
push
popf
jge
xchg
loopne
xor
fldt
mov
jp
pop
fcomps
adc
dec
gs
xchg
sbb
lret
pop
movsb
fldenv
movsb
test
das
in
call
ret
mov
xchg
bound
push
leave
dec
dec
es
inc
add
mov
mov
lcall
shll
int3
push
mov
or
pushl
push
lcall
loope,pt
sbb
scas
roll
mov
jmp
cli
mov
adc
in
je
and
push
jecxz
jmp
fimuls
ja
add
xor
push
imul
sub
xchg
out
mov
mov
fs
add
movsl
in
cmc
mull
rorb
std
pop
bound
arpl
dec
ficoms
int3
in
std
jmp
jne
or
inc
outsl
movsb
sbb
ret
mov
xchg
fs
add
cs
jp
pop
je
sub
fcoms
movsl
test
push
fcmovnbe
jno
fimull
mov
pop
inc
cmp
mov
icebp
push
lahf
call
xchg
shll
sub
mov
cmp
and
adc
andl
into
incb
or
xchg
es
push
xchg
inc
int3
repnz
call
mov
insb
add
in
dec
pushl
ljmp
ret
push
dec
dec
inc
xchg
pop
push
push
pop
scas
mov
rcrb
push
inc
pushf
pushl
dec
movsb
pop
lret
insl
push
or
add
push
adc
pop
sbb
adc
sbb
adc
ja
scas
lock
adc
inc
insl
dec
push
in
aad
insl
aam
pop
sub
nop
dec
incl
pop
or
mov
sub
cld
es
mov
mov
sbbb
in
out
into
and
mov
sbb
push
cmpsl
inc
mov
icebp
sbb
sarb
call
pop
leave
adc
and
rol
sub
pop
or
jmp
scas
fbstp
mov
jl
movsb
push
or
push
cmp
lods
jae
pop
cld
mov
or
out
dec
rcrl
les
adc
cwtl
call
xchg
les
mov
fists
mov
mov
add
ret
push
cmc
cli
sbb
push
cli
mov
push
and
and
enter
mov
pop
mov
and
test
imul
loopne
xchg
jecxz
push
or
push
in
fidivrs
xor
ljmp
call
dec
mov
fcmovne
sbb
lret
cmpsl
push
fwait
popf
repz
inc
jb
sub
in
mov
lcall
ljmp
pop
fdivrl
call
dec
cmp
mov
pop
stos
adc
mov
enter
mov
xor
add
fld1
test
sub
mov
test
out
jb
loopne
cmpsb
and
xlat
adc
sub
insl
pushl
sarl
pushf
in
lods
hlt
push
mulb
test
fldenv
call
cld
sbb
mov
and
icebp
add
add
jno
sbb
imul
dec
lods
xchg
mov
ret
loopne
shll
divb
sbb
mov
xchg
minps
mov
sahf
imul
push
xor
adcl
pop
cld
sbb
push
aam
das
mov
cmp
ss
outsl
int
fsts
loope
scas
push
sub
call
loope
add
push
ja
adc
data16
popa
add
scas
and
icebp
cmpsb
clc
cmpsl
cmp
test
les
out
nop
lcall
jecxz
push
outsb
ret
test
fnstsw
sti
and
ljmp
cmp
ljmp
push
and
inc
or
cltd
mov
pushl
test
js
insl
jo
xor
jle
dec
aaa
ja
mulb
out
inc
mov
and
popf
pop
mov
dec
shll
aam
loope
fnsave
cmp
gs
incl
imul
sbb
and
mov
and
xor
mov
stos
scas
add
cmp
xchg
int3
jmp
jp
dec
movzbl
fucompp
fs
mov
flds
adc
fisubs
test
mov
fbstp
mov
scas
pop
or
orb
ret
mov
les
cmp
add
or
inc
sbb
xlat
fnsave
sub
or
lahf
sub
pushl
sub
mov
xor
decl
xor
cmp
cmp
mul
clc
call
xchg
push
fs
cmp
sahf
loopne
sbb
fcomip
mov
je
sbb
pop
stos
outsl
cld
lret
fisttpll
js
stc
pop
clc
cmp
add
pushl
cld
adc
or
outsl
sti
inc
push
lock
cmp
sahf
mov
inc
jo
aam
push
les
mov
jp
test
std
int
fs
and
push
mov
dec
push
and
jmp
push
sub
lock
orl
jo
inc
sbb
jo
mov
cmp
sub
incl
jg
sbb
mov
cmpb
sub
adc
cltd
xor
mov
lret
sub
je
add
pusha
mov
dec
cmc
cmp
pop
inc
stos
hlt
imul
push
imul
jbe
push
movsb
push
icebp
call
ret
mov
sbb
jb
push
bound
jbe
out
loop
stos
ja
mov
add
js
sbbl
dec
int3
fdivs
inc
stos
fyl2x
bound
adc
imul
arpl
lcall
movsl
add
cmp
andps
jo
add
dec
ds
cmp
and
shrb
mov
add
sub
fcoms
mov
outsl
jnp
mov
ret
call
js
loop
in
daa
outsl
mov
pop
xor
testl
test
and
cli
mov
cmp
push
add
nop
pop
es
popa
ljmp
and
pop
test
dec
mov
xchg
rorb
jno
xchg
dec
add
movsb
mov
gs
js
and
inc
in
test
cmp
inc
ss
int3
xor
ljmp
popa
test
add
inc
add
mov
cli
dec
aam
jmp
cmp
and
les
fdivr
pushl
adc
xchg
pop
push
aad
push
dec
sub
aad
push
or
dec
pop
scas
push
push
popf
add
rcr
add
push
inc
mov
dec
in
imul
lcall
xchg
test
jl
loopne
push
stos
mov
shr
inc
fistpll
mov
popa
negb
adc
add
mov
mov
lcall
add
lods
scas
sbb
push
call
pop
scas
mov
and
adcb
cs
add
aaa
ret
je
xchg
pop
insl
dec
imul
cld
stos
xchg
es
add
jg
enter
and
pop
gs
mov
test
push
jp
arpl
popa
add
fisubrl
lahf
cmpsl
push
push
lret
pushf
jmp
push
sbb
and
pop
pop
cltd
and
bound
inc
mov
decl
lea
fidivrs
inc
and
repnz
pop
mov
jle
dec
cld
sbb
loope
xchg
adc
dec
xor
sbb
xor
dec
and
ss
incl
cld
ljmp
jns
pop
inc
dec
xor
sbb
or
add
lock
loop
cld
call
pop
lds
je
sub
aad
ja
jg
inc
dec
sbb
mov
jp
inc
push
jb
pop
ja
or
lret
faddp
push
inc
cs
data16
push
cmp
sub
rcrb
in
mov
dec
scas
mov
mov
inc
lock
pop
je
fwait
scas
mov
sbb
mov
sub
adc
into
pop
lcall
ret
sub
jmp
fcmovnbe
push
push
mov
fmull
push
divb
fists
dec
push
cmpsl
scas
loop
pop
repnz
jmp
loopne
pop
sbb
cwtl
add
inc
test
pusha
inc
aad
icebp
jmp
out
fldcw
jns
stc
or
lcall
outsl
xor
jae
mov
stc
inc
adc
fisttps
mov
and
sub
outsl
jg
add
enter
cld
das
xorl
xor
es
rcrb
xchg
sub
dec
inc
fninit
call
and
addl
int
push
loop
push
shlb
cmpsl
insb
movsl
sub
or
dec
mov
mov
test
out
ljmp
mov
push
jl
lods
mov
loope
cmp
les
pop
call
sbb
inc
aam
out
sbb
rorb
jo
mov
sub
dec
aaa
mov
cltd
std
cmp
fwait
xor
fs
pop
stos
and
cmc
in
dec
sub
xor
iret
sbb
into
mov
js
call
lds
fs
pop
fistl
adc
stos
mov
imul
mov
pushf
or
and
out
or
iret
pushl
adc
jne
lods
xchg
add
call
cmpsb
je
mov
cmp
popa
pusha
je
jo
push
mov
dec
movsb
arpl
mov
jle
in
and
fcompl
push
xchg
adc
sub
inc
rcrb
push
loop
mov
orl
push
mov
lcall
or
and
sahf
movsb
xchg
popf
je
addr16
adc
sbb
incl
jne
jbe
aam
pushf
inc
dec
movsb
shll
xchg
daa
or
jmp
jb
shrl
imul
cli
pushf
out
mov
xchg
mov
ljmp
inc
cmp
xchg
sub
ret
call
pop
out
ljmp
add
into
ds
ljmp
lret
ret
push
push
clc
lcall
dec
jno
lcall
imul
mov
arpl
sub
ds
jg
clc
mov
or
add
das
push
and
rolb
scas
outsl
decl
xlat
mov
dec
cmpsb
addr16
test
aad
popf
adc
cmc
idiv
inc
ljmp
jl
repnz
mov
and
adc
loope
and
pop
cld
lock
pop
incl
mov
ljmp
mov
inc
out
movsb
test
test
jle
fwait
enter
inc
xor
incl
mov
and
inc
mov
cmp
and
or
int
xor
cwtl
mov
sbb
ljmp
test
and
test
orl
fbld
mov
fldl
aam
scas
push
test
pusha
sub
mov
cmp
cmc
push
mov
lea
sub
inc
cmp
inc
push
sub
mov
decl
scas
cmp
insb
jns
iret
jge
ss
adc
test
fnstenv
pop
jnp
and
ljmp
cmp
adc
sub
cmp
mov
xchg
ljmp
out
sti
pop
ljmp
pop
fldt
mov
test
lods
dec
lods
in
mov
adc
jg
les
pop
movsb
sub
mov
cmpsl
negl
mov
das
cli
pop
dec
mov
rcr
adc
es
decl
loopne
lds
push
out
sti
sub
mov
mov
lcall
into
jle
jle
imul
sub
and
cmp
lods
and
dec
decl
adc
data16
sbb
insl
movsl
es
adc
and
mov
adc
ljmp
push
adc
scas
cmp
out
stc
mov
mov
das
fistl
mov
mov
repnz
lret
or
mov
mov
lcall
adc
sbb
movsb
push
push
sub
daa
sbb
sbb
ljmp
jne
rolb
pop
test
and
clc
stc
or
add
push
push
push
test
sbb
dec
stos
inc
sub
lcall
sbb
mov
lcall
mov
push
es
push
sti
jl
aas
and
xchg
push
mov
jg
adc
mov
pop
lcall
jmp
in
xlat
xchg
xchg
repnz
stos
mov
adcb
outsb
push
int3
jb
xchg
sub
mov
or
shl
decl
pop
lcall
imul
inc
jmp
mov
loopew
or
jge
ficoml
rclb
push
insb
dec
cmc
mov
jg
testl
pop
add
cmc
in
fisttpll
shlb
cwtl
loop
mov
lea
aam
fdivr
push
mov
add
sbb
stos
or
pop
cmp
testl
cmpsl
sub
les
push
insl
jp
xchg
orl
sbb
nop
mov
mov
imul
pop
pop
mov
push
inc
push
xchg
test
fwait
test
push
ds
in
stos
mov
ljmp
cli
insb
or
push
stc
adc
adc
push
jl
out
mov
cld
ds
inc
lahf
and
pop
repnz
lock
fstl
pop
mov
call
mov
sti
scas
add
xor
fs
inc
out
sub
imulb
pop
dec
repz
mov
idivl
adc
call
jae
test
adc
mov
cmpsb
stos
cmc
fsubl
pop
lret
jmp
add
outsl
fsubrl
fimull
sub
add
aas
cmp
adc
ficompl
aam
adc
sbb
xor
push
pop
clc
push
cld
fwait
sahf
adc
sbb
popa
xchg
or
xchg
push
xor
repnz
stos
mov
xchg
dec
inc
dec
fdivrl
pop
sbb
rorl
push
inc
decl
stos
aam
xchg
inc
test
inc
xor
incl
adc
cmovp
in
xchg
inc
push
sbb
ficompl
lea
fimuls
popa
mov
push
or
lcall
push
mov
loop
int3
hlt
or
push
aad
pushf
cwtl
hlt
lock
pop
stos
fdivrp
decl
pop
xchg
sahf
mov
adc
call
cli
push
xchg
cmp
lcall
les
push
stc
adc
stc
sub
xchg
pop
pop
add
jge
add
adc
cltd
add
and
clc
sub
int3
mov
insb
fldl
call
mov
xchg
js
cwtl
fsubs
push
xor
int3
push
push
in
or
xor
dec
lret
mov
or
xor
incl
sub
ds
iret
das
sub
sub
dec
sar
nop
inc
fsubrs
or
or
mov
xor
movsl
jg
ror
test
shll
roll
sub
cwtl
push
dec
push
andb
cmp
adc
outsl
mov
push
sbb
in
push
inc
decl
adc
sahf
sbb
ljmp
mov
xor
jmp
and
out
jl
mov
int
in
mov
iret
roll
fs
push
push
pusha
loopne
sarl
sub
ja
popf
cmp
lret
or
fstpt
inc
or
dec
fsqrt
mov
sub
lcall
repnz
mov
push
inc
push
loop
cmp
repnz
lret
leave
and
decl
lock
push
jp
xor
movsl
pushf
and
icebp
cmp
adc
dec
int3
loop
incl
lret
cltd
push
push
loop
loope
rcrl
or
in
and
pushf
lea
test
or
pushl
dec
pop
test
xchg
popa
xor
jo
pop
cmpsl
ffree
outsb
push
mov
inc
mov
out
mov
or
adc
and
jl
popa
fmull
xchg
add
inc
push
push
add
inc
pop
mov
mov
pusha
adc
adc
jle
or
push
icebp
fsubrp
xchg
aad
loop
cltd
inc
pop
pop
int
mov
jg
mov
or
mov
or
das
int
inc
jbe
mov
xchg
sbb
mov
out
adc
inc
ds
inc
inc
adc
fimuls
mov
call
mov
pop
loopne
imul
add
call
call
sub
push
pop
push
ljmp
fdivrp
outsb
enter
cmpsb
shll
pop
aas
out
pop
ss
dec
adc
hlt
push
cld
mov
rcrb
mov
adc
jmp
cmp
sub
jmp
lret
add
sbb
call
icebp
mov
xchg
and
mov
inc
mov
sbb
ficompl
in
lcall
mov
sbb
pop
or
dec
movsb
call
inc
push
jae
pop
cmpsb
imul
push
or
sarb
movsb
cmp
xchg
xor
pop
pop
or
lret
pop
push
nop
imul
sahf
insb
rcrb
out
decl
pushf
arpl
sbb
mov
adc
mov
daa
adc
pusha
mov
or
js
lds
loopne
enter
int3
pushf
push
mov
adc
addl
and
into
ljmp
pushl
es
cmp
push
and
inc
cld
in
ja
lcall
jg
and
xchg
adc
mov
sub
in
adc
inc
enter
dec
xchg
pushl
dec
cmp
in
lret
push
mov
sti
push
test
cmp
sbb
mov
jns
mov
lret
push
outsb
fistps
xchg
mov
add
push
aaa
std
call
mov
add
shrb
gs
call
jb
inc
or
push
call
call
push
xchg
push
test
add
xor
movsl
adc
clc
shll
lret
sarb
lods
loopne
imul
pop
cmpsb
inc
in
or
mov
sub
lcall
lds
or
loopne
and
cmp
mov
dec
out
in
xchg
inc
in
sbb
push
pop
cmpsl
pushl
gs
fs
aas
or
data16
mov
pusha
sahf
push
sbbl
push
push
leave
inc
inc
fcmovu
sbb
mov
fcoms
int
test
ja
mov
out
jbe
cmp
dec
sarb
push
mov
call
shlb
mov
xor
push
cmp
dec
movsl
and
mov
insl
call
aad
hlt
gs
jo
sub
mov
lret
sub
in
dec
dec
adc
stc
call
orb
imul
mov
rcl
mov
fstpl
pop
xchg
adc
pop
dec
xor
cld
add
mov
inc
mov
xchg
pop
xchg
cld
dec
push
lods
testb
fbstp
and
in
sarl
adcb
test
imul
fsubr
int
jle
iret
test
jge
mov
ret
fs
cli
cmp
push
sbb
lcall
shl
aam
xchg
dec
aam
lods
jmp
decl
cmpsl
test
jae
mov
loopne
cmp
mov
and
incl
sbb
in
add
jnp
lret
js
sub
sarb
sub
clc
jmp
inc
enter
out
ficomps
lret
inc
ljmp
jno
iret
cmp
out
stos
add
jns
mov
dec
mov
dec
sub
lock
scas
mov
jg
cmp
push
fldenv
xor
jge,pn
xchg
fsts
leave
int3
jmp
ret
jecxz
nop
pop
pop
sbb
addr16
jno
fstpl
sbb
ljmp
dec
in
xchg
or
push
lock
into
bound
jmp
popa
or
mov
sub
and
lret
push
test
insb
adc
mov
ljmp
cs
push
aad
into
test
mul
call
into
stos
int
rorb
dec
outsb
pop
icebp
decl
sbb
push
out
mov
mov
mov
inc
sub
fldt
mov
sub
movsb
sbb
push
xchg
adc
jmp
inc
in
test
scas
add
push
call
fadds
inc
pop
clc
mov
fcomps
dec
pop
mov
push
out
js
lods
hlt
pop
mov
push
loope
adc
sahf
fstpt
inc
incl
and
or
ss
stos
cmpsb
lock
or
sub
sti
mov
xchg
push
sub
sub
outsb
call
add
fbld
lahf
in
sbb
pop
jmp
outsl
cs
out
cld
mov
sbb
fcomip
call
xchg
dec
fcomps
xchg
add
mov
and
fistps
mov
clc
incl
fxch
push
adc
aas
inc
test
inc
dec
xchg
bound
das
xlat
mov
decl
inc
lds
sarl
lea
je
push
push
sbb
sbb
and
sbb
pushl
xchg
jnp
xchg
push
or
cmpsl
sbb
aad
pop
or
jmp
add
setae
andb
addb
inc
sbb
dec
fst
out
out
xchg
sbb
or
ljmp
dec
cmp
daa
mov
adc
push
jo
jmp
sub
dec
dec
lcall
jne
jge
sub
out
flds
push
sub
lret
ss
jmp
stos
add
movaps
add
lret
xor
loope
xor
pop
insb
push
xor
fxam
xchg
pop
aas
ret
jae
sbb
mov
adc
test
rcrl
xchg
outsb
dec
push
insl
ja
push
pop
cwtl
add
decl
mov
in
sbb
mov
sbb
dec
xor
xchg
movb
test
in
add
push
mov
fs
push
pop
call
cld
repnz
mov
pop
and
cmp
shll
add
add
inc
sub
ficoml
inc
lahf
xchg
mov
jne
testb
jg
into
je
or
add
fcmovnb
and
push
xchg
lods
sub
lcall
sbbl
in
mov
cs
inc
cwtl
jae
movsb
or
ljmp
cmpsl
stos
out
dec
lret
ljmp
ljmp
mov
fildll
ror
pop
mov
jae
xor
popa
arpl
xor
sbb
jecxz
jmp
cli
sub
cmp
pushf
push
mov
jmp
addr16
addr16
cltd
mov
sbb
mov
mull
xor
mov
out
iret
ficomps
imul
dec
fadds
push
fxch
std
movsl
add
outsb
add
xchg
pop
sbb
mov
int
cmp
data16
or
pushf
lea
dec
inc
jne
adc
fdivr
call
pusha
loopne
sbb
sbb
jmp
insb
jbe
push
data16
dec
xlat
push
sti
and
ja
sbb
inc
loopne
or
shrl
fidivrl
pop
jp
mov
clc
xor
lcall
inc
shrl
stos
cmpb
sbb
jle
jo
outsb
cmp
dec
enter
dec
xchg
adc
mov
out
mov
js
sbb
pushl
sub
jmp
mov
mov
adc
das
jmp
jg
fs
or
xor
mov
mov
and
mov
ret
sbb
xchg
sbb
mov
incl
ror
insb
xchg
or
call
fcomip
jno
mov
xchg
pushl
int
xchg
loop
or
lds
aas
push
cld
adc
je
add
mov
cmovno
testb
cmp
movsb
push
call
inc
xor
stos
push
lcall
jbe
dec
pop
loopne
lods
mov
mov
xor
mov
push
idivl
jmp
dec
inc
inc
jne
lret
out
fs
aas
psubw
cmc
and
js
popa
mov
and
push
jp
add
js
inc
add
pop
test
mov
xchg
mov
mov
jle
push
out
lods
inc
incl
insl
fcoml
push
ljmp
cli
gs
adc
push
inc
int3
pop
push
movsb
aad
add
lcall
and
push
repz
loope
or
test
fwait
push
icebp
and
push
iret
addb
cmc
enter
in
scas
mov
jmp
cmpsb
mov
sub
sbb
loop
scas
imul
lret
popa
outsb
pop
cmc
pushl
and
popa
leave
dec
adc
mov
inc
inc
mov
push
xchg
incl
shrb
dec
ret
in
call
pop
inc
testl
enter
inc
addr16
pop
add
imul
and
mov
inc
cmp
xchg
mov
pop
incl
sub
sar
lcall
test
test
enter
sbbb
cmp
mov
insl
adc
xchg
arpl
mov
adc
popa
fwait
dec
ljmp
push
aam
inc
iret
inc
push
pop
push
sub
jo
push
int
push
and
mov
rclb
aam
js
fisubl
test
xchg
push
push
jmp
insl
mov
decl
fcmovb
sbb
cmpsb
xor
orb
push
dec
in
push
mov
call
pop
pop
pop
add
loopne
scas
push
sub
outsl
push
fsubs
pop
add
outsl
ret
in
pop
mov
andl
cmp
push
push
sbb
jo
ret
into
lea
xlat
cs
sbb
sbb
aas
xor
fstps
jae
xor
int
insl
mov
lcall
fmuls
push
lcall
push
push
dec
ss
sub
mov
ljmp
iret
pop
aad
jne
aad
pushf
insl
loop
lds
aaa
mov
int3
rcll
outsl
lret
sub
pop
movsb
mov
dec
aad
xchg
add
nop
jb
repnz
mov
push
hlt
in
fstps
aas
lcall
fst
ja
fidivrs
cmp
mov
leave
mov
mov
inc
add
sub
decb
cli
inc
into
mov
das
pop
cmp
xor
xor
add
sub
add
mov
ret
mov
aas
push
and
or
adc
pop
push
lds
cmp
test
mov
or
fcmovnbe
pop
pop
ja
cmpl
inc
negb
mov
jmp
or
out
loop
sub
stc
mov
popl
cmp
test
push
mov
mov
sbbb
and
ds
mov
aam
adc
xchg
incl
mov
fisubs
pop
shrb
mov
stos
or
pushf
jb
test
es
add
dec
mov
jmp
sub
inc
pop
or
or
adc
sbb
mov
and
add
icebp
or
or
jb
add
xor
lcall
in
sub
int3
out
in
mov
in
jb
inc
lret
lcall
sub
int
sbb
xchg
mov
sar
scas
mov
xor
mov
mov
iret
and
mov
jg
xchg
ja
in
sbb
insl
cs
out
xor
aaa
fnstenv
call
call
scas
mov
ds
cld
xchg
out
bound
and
aas
mov
in
inc
xadd
lcall
aas
xchg
dec
mov
mov
mov
rorl
ret
mov
push
inc
dec
fildll
loope
inc
cmovns
jb
xchg
mov
popf
popa
lcall
imul
dec
cmp
loope
push
cs
xor
mov
jmp
outsb
push
and
scas
cmp
sub
fsubs
mov
test
loop
jmp
sbb
mov
test
push
mov
cmp
outsl
cli
call
jo
das
push
insl
or
jb
stos
cwtl
dec
xchg
cmpsb
rcrb
int
pushl
test
sub
frstor
mov
xchg
int
push
cmp
mov
push
inc
stos
xor
ljmp
std
out
mov
ljmp
mov
mov
push
pop
popa
add
ja
cli
call
pop
fsubs
xchg
inc
push
in
lret
decl
imul
mov
xlat
aad
mov
pushl
cmp
faddp
jge
jp
movsl
sub
cs
dec
xchg
and
out
inc
scas
pusha
mov
lret
xchg
xor
inc
popa
ds
ret
movq
mov
out
fstps
hlt
arpl
clc
push
out
adc
lret
xor
and
pop
enter
mov
inc
add
inc
cmp
lcall
enter
dec
shll
mov
fs
fcmovu
shlb
ret
call
call
xchg
rorl
pop
int
pop
ret
sahf
adc
dec
shrl
push
das
clc
mov
xor
rcll
cmp
decl
lahf
ja
test
inc
leave
dec
js
mov
fmuls
fistl
adc
cmp
sub
xor
out
sub
add
lret
hlt
incl
leave
sbb
sbbb
pushf
push
dec
mov
jmp
test
in
into
sub
and
call
inc
adc
add
lea
dec
push
push
aam
sub
xorl
les
xchg
shll
adc
adc
pushl
push
jmp
cltd
xor
mov
mov
xchg
fdivrs
std
sbb
into
adc
fmull
sub
aad
loop
addr16
lret
jns
mov
pop
and
cli
ljmp
dec
jo
stos
dec
mov
dec
cmp
pushl
test
incl
js
aam
or
inc
and
xor
js
xchg
shrl
mov
mov
fimuls
outsb
xchg
test
adc
mov
mov
fimull
jge
cmp
xchg
pop
dec
mov
insb
dec
adc
ljmp
outsb
sbb
leave
push
inc
inc
iret
mov
lea
lcall
jo
sbbb
push
inc
lea
lret
stos
icebp
rorl
inc
mov
imulb
mov
pop
mov
jb
sbb
stos
dec
jp
xchg
and
ljmp
pushl
or
lock
jae
aad
add
adc
andb
jg
xor
arpl
push
sub
jo,pn
scas
push
sub
ud0
mov
sahf
cltd
pushw
call
mov
mov
adc
enter
lock
cld
lock
scas
lcall
lea
push
sbb
mov
mov
mov
cmp
outsl
xchg
add
aam
sub
add
cmc
mov
lods
lock
lock
nop
sahf
push
bswap
out
pop
inc
test
jmp
jmp
js
xor
inc
adc
inc
mov
sbb
mov
cmp
lock
outsb
cli
pushl
lock
testl
fcmovbe
movsb
rorl
rclb
mov
adc
add
clc
add
insl
mov
decl
in
es
push
mov
and
es
ja
sbb
ja
decl
sub
in
add
dec
push
inc
aad
and
xchg
dec
ficoms
cmp
sub
call
sahf
mov
sub
sub
movsl
and
lcall
push
xor
dec
or
xor
inc
and
repz
fwait
out
decl
into
push
mov
xchg
sbb
bound
xchg
icebp
xor
mov
and
add
in
shll
xchg
insb
mov
xchg
jp
cmp
test
mov
mov
sub
cmp
js
xor
incl
scas
push
jb
clc
push
adc
inc
rorl
mov
popf
test
pushl
mov
fisubrs
pushf
push
dec
mov
pop
lahf
int
repnz
fcomip
ljmp
bound
mov
repnz
test
pop
inc
imul
jns
loopne
add
call
push
jmp
in
pop
xor
test
mov
loope
das
js
fcoml
sub
into
insl
jmp
punpcklbw
in
cmp
fisubrs
dec
cwtl
arpl
dec
or
and
push
fiadds
sbb
and
xchg
xchg
ljmp
incl
pop
je
bound
mov
xchg
popf
mov
push
sbb
das
cli
out
lods
ljmp
sub
cmp
xlat
or
xchg
cmp
xchg
sti
xlat
imul
cs
cs
bound
pop
jmp
xlat
rcrl
cmpl
int
cli
int3
mov
mov
ficomps
mov
pop
inc
cmp
cmp
fcmovbe
jmp
std
stos
xchg
fisubrl
sub
jbe
xchg
xlat
vmread
jg
outsb
imul
shr
cmp
or
aam
jbe
iret
sbb
xor
sarl
pushl
popa
mov
mov
bound
mov
jg
xchg
arpl
or
cs
in
cs
adc
mov
ljmp
in
data16
and
faddl
or
leave
add
jb
cld
sahf
cmp
emms
xor
push
cli
out
xchg
loop
mov
push
dec
inc
jmp
inc
in
test
lahf
pop
push
pusha
or
inc
icebp
leave
jb
cmp
into
aad
lcall
sbb
mov
xchg
sbb
inc
loope
outsb
out
inc
inc
fcom
movsb
jbe
decl
cmp
push
aaa
or
hlt
gs
add
sarb
xchg
or
js
ljmp
or
push
mov
scas
mov
add
mov
xchg
inc
jl
pop
xchg
mov
fsubrl
dec
jmp
mov
jle
nop
or
jg
or
dec
ja
and
sub
js
xchg
hlt
call
inc
fisubrs
adc
pusha
pop
mov
dec
adcl
lahf
push
cmpsb
fwait
mov
cmp
stos
ret
insb
sbb
adc
lcall
sub
jmp
add
lock
call
xor
mov
jecxz
push
dec
cmc
push
imul
jbe
and
or
call
fmull
add
stos
clc
lcall
fsubp
push
mov
mov
clc
or
repnz
add
and
insl
ss
and
inc
dec
sub
lcall
lods
in
mov
and
incb
in
add
fbld
int3
add
mov
in
pushl
loop
popf
cwtl
add
call
inc
stos
xor
inc
movsb
in
mov
cld
and
test
xchg
mov
int
gs
cltd
mov
mov
inc
cmp
xorl
inc
jmp
inc
or
and
adcb
in
fisubl
sti
ljmp
popf
aam
jg
test
push
addr16
hlt
outsb
and
or
push
cmp
movsl
adc
jne
dec
or
ljmp
or
ljmp
fisubs
xchg
das
rcr
inc
dec
sub
or
jns
imul
nop
lock
and
push
rolb
mov
decl
clc
nop
bound
retw
inc
add
daa
int
orl
subb
cmp
pslld
bound
push
jecxz
adc
icebp
and
sahf
mov
dec
enter
loop
and
lret
or
leave
cld
addr16
cld
jg
dec
in
nop
ljmp
xchg
adc
test
daa
xor
jne
sub
scas
insb
punpckhbw
das
push
insb
adc
incl
incl
pop
out
push
repnz
arpl
push
push
add
pop
add
hlt
loop
int3
call
pushl
mov
xor
push
mov
cld
jno
pop
dec
in
sahf
or
add
call
mov
cmpsb
ss
pop
ret
test
call
xor
imulb
lock
scas
sbb
lahf
ss
jg
cwtl
imul
call
pmaddwd
mov
movsl
push
cmc
dec
adc
outsl
lds
jo
mov
ljmp
out
lock
add
mov
mov
test
dec
push
mov
ja
ds
mov
mov
daa
mov
shrb
adc
lods
mov
call
daa
push
adc
mov
mov
mov
cld
sbb
mov
test
jb
decb
mov
repz
sub
sbb
sub
mov
stos
pushl
dec
pusha
xorb
sub
jmp
dec
add
inc
orps
and
xor
in
cmp
in
sar
pop
das
cmp
push
repnz
pop
outsl
cs
inc
or
jl
xchg
mov
test
and
cli
push
cmp
sbbl
xor
jp
cmpb
sbb
pop
xor
cs
or
adc
je
aaa
sbb
ss
outsb
nop
sbbb
or
mov
test
and
jmp
test
pop
adc
sahf
push
cmp
jbe
add
push
dec
outsl
mov
inc
sub
stos
pop
lock
cmp
int
mov
call
fmul
xor
sub
or
aas
aad
in
nop
push
fsts
mov
or
cmp
mov
mov
xor
sbb
or
jb
fbld
mov
inc
cli
jp
loope
mov
sbb
loope
or
mov
sub
retw
out
sub
or
pop
jnp
pop
stos
cs
xor
cmp
push
stos
lcall
sub
push
stc
or
jecxz
dec
pop
inc
sub
das
cmpsl
mov
push
add
pushl
call
add
push
shl
cmp
sbb
int3
xchg
mulb
or
das
hlt
ret
rolb
imul
and
xor
sbbl
fsubrs
xchg
jo
jmp
cmp
insl
in
dec
pop
sub
in
jo
aaa
loop
pusha
inc
inc
aad
test
add
adc
jmp
fildll
jge
outsl
or
push
ds
imul
cmpsb
push
push
jns
cmp
jae
lret
xchg
es
add
call
mov
dec
jne
mov
xor
xor
ljmp
in
push
sub
sbb
or
jne
lods
and
xor
jmp
adc
dec
mov
enter
cli
into
jne
lock
or
decl
jnp
outsb
jmp
stc
or
les
int3
push
stos
pop
movl
dec
push
cmp
xor
or
in
in
xchg
repnz
mov
ljmp
andl
dec
inc
dec
pushl
mov
cmp
push
mov
out
bound
mov
pop
ljmp
sub
adc
out
int3
stos
dec
inc
jmp
sbb
dec
aas
adc
adc
mov
sbb
add
sbb
aad
adc
outsl
test
mov
test
sub
dec
xchg
fadds
lock
push
adc
and
call
xor
xchg
jle
xor
mov
push
jne
or
imul
push
dec
cltd
movsl
push
mov
jg
insl
cli
lcall
xor
ds
or
and
shlb
jns
cmp
pushl
out
lret
decl
in
movb
jbe
adc
adc
fdivl
mov
and
push
lret
in
mov
fs
shrl
push
rorl
out
sub
xchg
decl
mov
dec
xor
jb
mov
mov
dec
push
inc
fsubrs
fmull
cmp
or
dec
cld
inc
sub
mov
popa
or
jae
js
or
ljmp
dec
adc
inc
push
xor
decl
mov
sub
cmp
jbe
jecxz
adc
sub
sarl
sbb
push
adc
call
in
fwait
stos
lods
jnp
stos
in
lret
add
dec
lea
out
mov
test
pop
mov
ljmp
xlat
repz
adc
adc
pop
lock
ret
addr16
xchg
ficoml
and
mov
rcrb
xor
or
jae
push
jne
mov
sub
mov
fidivs
fbstp
jo
imul
enter
dec
adc
in
or
cmp
inc
out
imul
add
adc
and
aam
mov
jecxz
aam
pop
add
pop
fmull
js
mov
popa
mov
dec
inc
adc
loopne
call
ja
es
aam
xchg
mov
nop
test
fwait
insl
in
inc
xor
mov
pop
pusha
outsl
cli
mov
xor
shlb
shlb
or
shll
inc
mov
aam
or
sub
fcoms
je
dec
push
movsl
shll
mov
scas
dec
adc
dec
inc
or
dec
gs
mov
enter
jg
jg
ret
or
jne
inc
fidivs
jge
fnstcw
fists
cld
incl
enter
add
adc
int
and
inc
mov
negl
mov
lcall
inc
and
jnp
cltd
aas
and
inc
movb
push
outsb
out
stos
cmp
jecxz
shrl
repz
ficoms
inc
insb
sub
mov
xor
mov
out
lods
subb
outsb
ss
enter
mul
pop
fcomp
popf
incl
jp
scas
je
lret
push
sbbb
mov
lock
cld
fnstenv
popa
and
inc
in
inc
imul
mov
or
or
xchg
lods
mov
sbb
xchg
mov
lcall
fildll
sbb
jmp
mov
imul
test
pusha
gs
jg
add
outsl
cli
push
push
add
sub
and
test
add
mov
popf
mov
cmpsb
push
lods
mov
mov
mov
xchg
test
subl
pop
xor
ficoml
std
stos
adcb
incl
inc
rol
add
lea
xchg
and
movsb
insl
icebp
in
or
jmp
dec
mov
push
xor
mov
jo
mov
or
andb
jnp
dec
stc
enter
xor
adc
xchg
leave
push
and
push
je
dec
xchg
mov
adc
mov
xor
in
adc
sub
mov
aad
stos
fisubrl
ret
push
out
xchg
and
pop
add
cs
xchg
and
sub
or
sbb
in
out
and
pop
lock
or
les
mov
shlb
jecxz
mov
dec
pop
out
lret
mov
sar
es
jmp
sar
mov
cmp
lds
mov
ja
xchg
and
fbstp
and
and
add
cmc
insb
subb
push
xor
jmp
mov
sbb
mov
bound
jecxz
cld
cld
insl
sub
mov
and
adc
mov
dec
lods
sarb
popf
dec
and
out
cs
and
mov
add
fiaddl
inc
adcl
ljmp
pushf
fwait
pop
and
lock
outsl
jns
test
jbe
in
loope
mov
inc
arpl
call
and
add
cmp
and
int
mov
push
mov
js
testb
mov
je
fimull
in
pop
lods
pop
scas
sub
and
aam
cmp
repz
cmp
loopne
push
xchg
xchg
xchg
sub
mov
bound
and
sub
outsb
cmpl
cmpsb
mov
push
mov
and
rcl
outsl
jge
pop
sbb
mov
ljmp
xchg
int
fcmove
fs
xor
aad
mov
bound
repz
cs
xchg
mov
outsb
iret
push
mov
into
stc
push
mov
xchg
pop
fisubs
jle
and
ret
xchg
mov
loopne
fbld
loop
or
out
and
push
or
pop
push
sti
movsb
lcall
ljmp
es
push
jne
outsl
sub
test
jg
jo
mov
test
iret
dec
int
fbld
jge
add
pop
ljmp
and
dec
push
mov
jno
dec
rcl
cmc
or
mov
aad
int3
dec
dec
rol
pushl
std
or
xor
out
add
mov
mov
in
sbb
pop
clc
decl
mov
out
sub
mov
sti
add
aad
jmp
sahf
or
mov
xchg
lock
int
and
xchg
ficoml
or
daa
aad
and
inc
sbb
adc
and
icebp
mov
xchg
cmp
and
idiv
adc
pop
mov
jecxz
xchg
lea
and
xchg
or
push
lods
mov
call
loopne
in
push
and
test
test
xor
into
les
xor
imul
pop
pop
cs
jg
pop
sahf
ss
hlt
call
push
lods
jb
lret
xchg
stos
push
mov
mov
stos
aam
xchg
lock
cli
lret
cmp
lea
lcall
call
xor
cmp
inc
pop
fnstcw
andb
pushf
cld
incl
or
lods
flds
arpl
andb
push
lret
inc
insl
out
aam
pop
pop
arpl
call
stos
mov
xor
cmp
sahf
fbld
ficompl
jmp
in
aad
add
push
loope
and
xchg
movb
stos
xchg
mov
call
in
and
mov
inc
sbb
push
inc
sbb
mov
jnp
add
mov
and
ljmp
jnp
out
or
addr16
jno
sub
fcoms
fs
jp
aad
mov
sbb
test
dec
jno
xchg
and
incl
pop
out
cmc
mov
mov
pusha
enter
sbbl
movsl
arpl
cltd
mov
mov
incb
call
mov
dec
sub
jmp
test
gs
inc
cmp
sbb
movsb
inc
daa
mov
gs
xchg
hlt
inc
pop
jp
adc
mov
inc
jo
fsts
inc
call
and
dec
push
xor
adc
jmp
stc
adc
sahf
test
sub
mov
add
cmp
jmp
pop
xor
fcoml
lds
push
les
loop
and
xor
push
push
pop
adc
bound
sahf
sub
xchg
pop
jg
pop
pop
push
inc
cwtl
push
loopne
pushl
mov
push
push
pushf
lret
push
pop
add
inc
and
mov
push
mov
subb
ss
jl
in
adc
inc
push
jne
adc
adc
and
xchg
loope
lock
xchg
jne
or
sbb
in
or
fbstp
inc
in
decb
pop
and
test
fildl
dec
or
sub
sbb
rcll
aaa
inc
lahf
aad
bound
icebp
fcoms
or
sar
incl
imul
cmp
jg
and
mov
mov
ja
sub
push
xchg
sar
sub
cmp
pushf
push
cmp
decl
jno
shll
dec
pop
sub
pop
pop
xchg
stos
mov
subb
xchg
pop
imul
xchg
push
jno
jbe
adc
movsl
imul
xchg
ja
mov
ret
and
xchg
dec
test
push
into
hlt
rorl
cli
ljmp
nop
pop
js
and
adc
gs
xchg
incb
adc
jecxz
xchg
dec
and
mov
mov
jb
cli
push
pop
mov
aas
jbe
add
vpshlq
cli
pop
cltd
inc
movb
inc
push
cmp
call
cmp
jle
jo
or
mov
test
lods
inc
dec
dec
add
mov
ljmp
cmp
or
cltd
out
sbb
lahf
jp
movl
cmpsb
dec
inc
js
xchg
les
fiaddl
push
adc
and
sub
pop
ljmp
and
inc
lds
fistl
adc
andb
mov
call
push
in
mov
pop
in
sahf
in
dec
gs
test
pushl
add
cltd
push
mov
dec
dec
push
mov
aaa
test
mov
or
daa
jb
pop
xchg
leave
insl
sbb
popf
push
ss
inc
or
mov
cli
cmp
loope
add
dec
js
xchg
mov
sarl
add
cmpsb
xor
es
or
sahf
incl
sbb
or
addr16
dec
sub
popa
dec
cmpsb
mov
sub
sub
jmp
adc
jne
and
stos
mov
pushl
mov
aad
xor
ss
pop
lret
mov
push
jo
add
lcall
dec
inc
inc
fcmove
or
pusha
subl
pop
mov
pusha
xchg
push
fisubl
stos
decl
decb
in
and
and
jns
xchg
leave
mov
jge
pop
popf
push
test
cmpsb
xor
in
lahf
in
aas
cld
push
xor
imul
out
cmp
cmp
rcrb
test
aaa
mov
ss
ljmp
jae
push
vmread
push
insb
cltd
lea
sub
dec
lock
pop
jae
and
inc
enter
incl
cmpsl
js
sbb
xchg
jle
shll
cld
jno
test
les
fiaddl
les
sti
sub
cmp
sar
xchg
je
sbb
inc
imul
push
push
cmp
jmp
lcall
sbb
addr16
mov
jl
pop
mov
jb
sub
loop
cmpb
xchg
subl
dec
or
mov
sub
int
xchg
mov
leave
inc
xorb
mov
mov
mov
adc
add
js
mov
xchg
clc
sub
fcoml
sbb
jmp
int3
sti
int
repnz
call
or
pop
push
lds
int
adc
cld
lahf
fs
add
stos
stc
xchg
lcall
out
jge
arpl
jnp
lcall
fstps
add
sbb
cmp
lcall
jbe
data16
xchg
int
or
jl
stos
add
ja
ljmp
mov
cmp
lcall
and
sub
aad
jo
mov
pop
and
sub
lcall
inc
add
push
xchg
mov
sub
mov
decl
xchg
mov
pusha
shrb
push
cmpsl
imul
loopne
imul
idivl
bound
push
imul
rorb
cwtl
xchg
add
aaa
sbb
fadd
sbb
loop
jg
add
popf
bound
jp
nop
dec
fstl
mov
xor
repnz
lcall
sbb
or
or
cmpsb
push
jnp
out
jb
int
stc
out
ja
nop
iret
mov
jmp
cmp
mov
pop
push
mov
fbstp
mov
in
nop
inc
adc
mov
mov
sar
adc
jbe
inc
enter
repnz
sub
jnp
adc
popf
push
cmc
inc
adc
pop
fcompp
mov
add
es
cltd
jae
decl
int
test
and
xlat
inc
push
sbb
dec
stos
rcl
pusha
pushl
nop
gs
lahf
lret
mov
xor
roll
pushl
sbb
fldenv
push
out
mov
lods
leave
fsubs
push
test
outsb
cld
call
ficompl
test
dec
pop
and
in
push
fwait
mov
mov
mov
lcall
popa
mov
mov
out
push
cmp
loopne
sti
xorl
mov
cmp
xchg
xchg
or
push
cmpsl
inc
push
inc
jne
jg
and
incl
lds
sub
repnz
cmp
sub
adc
outsl
xor
imul
jbe
cltd
int3
add
add
add
cmp
lods
mov
push
sti
lods
and
loopne
test
scas
cmp
in
or
dec
and
pop
sbb
pop
mov
dec
clc
jg
inc
push
out
jns
enter
out
imul
mov
sub
dec
xor
jg
and
xchg
test
mov
mov
loope
mov
test
push
or
call
lea
enter
inc
jbe
pop
in
das
lret
pop
mov
mov
lds
fisubl
lret
rorl
ljmp
stc
aad
dec
adc
test
out
ljmp
mov
push
and
cmp
outsl
push
and
jmp
ljmp
ljmp
aam
sub
dec
insb
test
xchg
push
adc
rcll
mov
aaa
in
fcomip
out
xchg
fstps
jl
int
ret
test
xchg
pop
fimuls
fs
call
aad
pcmpeqw
mov
filds
add
push
shrb
mov
stos
cmp
mov
sub
and
fxch
loop
xchg
scas
inc
jp
mov
add
decl
ja
lds
push
mov
lds
cmc
fsts
adc
mov
inc
das
jmp
mov
mov
imul
push
sbb
gs
cmpsl
dec
inc
inc
cmp
pushl
pop
scas
shlb
lret
mov
data16
xchg
ss
add
cmpb
push
pop
es
popa
inc
mov
jns
jae
insl
je
cmc
lea
hlt
daa
leave
mov
pop
push
incl
test
es
daa
xorb
jecxz
ret
cmp
push
shll
sbb
sub
loope
pop
inc
jp
data16
cmp
sarl
push
cwtl
bound
xchg
mov
rcll
mov
jbe
outsl
pop
xchg
push
addr16
jne
fildl
filds
jl
inc
pop
notb
jge
add
mov
push
pop
call
cmp
sarl
and
mov
sbb
ja
and
loope
test
clc
in
dec
pop
xor
push
mov
ljmp
mov
je
jb
push
cs
jg
cmp
sarl
incl
push
jmp
mov
and
inc
and
pop
cld
aam
insb
add
dec
fdivl
mov
js
sbb
sub
adc
mov
sbb
sub
mov
adc
adcb
aaa
push
movsb
daa
sub
loopne
push
push
sbbl
cs
xchg
jmp
enter
js
push
insb
addr16
cwtl
mov
and
orb
cmp
adc
es
push
call
add
jae
dec
push
outsl
movsl
ja
add
mov
add
push
dec
mov
shrw
aad
popf
mov
adcl
repz
clc
xor
sbb
jnp
sub
push
dec
ja
pop
cld
jecxz
outsb
test
in
clc
popa
jge
jb
call
pop
shrb
xor
ds
jg
testb
jbe
popa
nop
add
push
loope
and
decl
ret
out
pushf
data16
jle
xchg
jo
and
or
xor
push
pop
mov
pop
mov
xchg
inc
ret
xchg
mov
aaa
adc
jo
jnp
xchg
push
push
and
sbb
lret
sub
sub
lcall
mov
jno
push
inc
push
jg
push
dec
arpl
aad
adc
mov
fildl
xor
insb
jmp
push
mov
nop
aaa
lcall
dec
jecxz
cltd
fs
dec
cwtl
fwait
jecxz
lcall
push
xchg
arpl
mov
dec
xlat
xchg
mov
push
or
xchg
xchg
sub
mov
cmp
or
adc
dec
jbe
sbb
mov
hlt
jp
push
xchg
xor
cwtl
cli
inc
sub
mov
out
sub
jecxz
fistl
jo
hlt
fs
add
add
repz
mov
rcl
call
push
add
push
xchg
push
xchg
add
mov
lcall
test
ss
adc
pop
adc
outsb
or
and
pop
add
loope
add
jbe
nop
xchg
es
lcall
lcall
jne
inc
and
mov
movsb
xor
push
pop
test
int3
and
pop
and
call
xchg
aaa
pushl
fdiv
adc
or
aam
mov
js
divl
dec
jg
add
adc
sti
scas
movsb
pop
pop
xchg
mov
lcall
ret
sbb
dec
mov
loope
sbb
dec
xor
sub
arpl
pushf
pop
lds
jg
dec
sbb
mov
out
jg
xchg
mov
mov
jae
popf
jp
xchg
xor
dec
pushf
sarl
add
mov
fs
out
sbb
imul
movsb
and
int
sub
ficoms
imul
fucomip
push
add
mov
dec
ficoms
add
add
das
cs
mov
mov
bound
sbb
lcall
loop
ljmp
in
lcall
jmp
push
and
cmp
jne
sub
sbb
cltd
mov
mov
xchg
push
pop
push
sub
fcomp
xor
jg
out
mov
imul
popf
call
push
inc
pushf
data16
push
pop
lret
jns
data16
add
clc
jmp
pop
pop
mov
sbb
inc
lods
in
sbb
add
in
push
addb
fstps
popa
jp
lds
xlat
decl
test
xor
bound
jns
mov
inc
sbb
popf
ret
stos
add
fcomip
jns
mov
add
pusha
pusha
dec
mov
jno
pop
xlat
popa
ja
aam
sbb
xchg
fcos
xchg
cwtl
sbb
or
pushl
nop
stos
push
je
scas
lock
dec
mov
test
pop
xchg
in
das
inc
xchg
ja
sar
inc
jbe
out
push
test
adc
add
jecxz
sbb
hlt
dec
dec
inc
mov
call
mov
aam
sarl
sub
cmp
sbb
inc
xor
repnz
adc
loop
imul
daa
push
and
push
jmp
xlat
ljmp
jb
sub
push
add
sti
lcall
call
cmpsb
popa
ljmp
mov
push
test
xchg
cmc
lcall
lcall
or
js
adc
leave
add
orb
push
push
sbb
ss
cmpsb
mov
or
inc
outsl
mov
cmp
or
pop
cltd
sub
fldcw
xorl
incl
cli
adc
sbb
out
mov
and
add
es
push
sbb
sub
ds
adc
jg
lcall
lret
repnz
mov
sub
cmc
test
mov
lcall
incl
cmp
shl
dec
test
xor
js
into
push
pop
jae
cli
jp
mov
push
lret
clc
and
jecxz
cmp
or
arpl
mov
adc
and
jbe
ret
sbb
in
ret
test
xchg
mov
incl
ds
cltd
popf
stc
jae
or
stos
mov
jne
nop
xor
ljmp
fwait
push
out
xchg
test
decb
popa
jns
icebp
mov
mov
jg
jmp
jp
mov
fld
sub
daa
push
jo
jp
push
jp
dec
stos
sub
push
lods
subl
jb
push
aad
pop
sti
bound
or
or
jecxz
call
xor
dec
cwtl
inc
arpl
xchg
dec
push
dec
pop
cltd
adc
and
adc
decl
mov
push
lahf
sub
jns
ljmp
jo
dec
xchg
sub
repz
cmpsb
call
adc
sbb
adc
ljmp
rclb
ret
mov
cs
stos
div
pop
repz
jg
lcall
mov
add
add
mov
xor
or
aam
pop
jo
imul
test
repnz
pop
movsb
sub
sub
fs
sub
inc
mov
pop
ret
mov
dec
xchg
jno
mov
xor
call
shll
into
cmpsb
movsb
dec
fimull
out
sbb
push
xor
pop
mov
movsl
push
stos
and
cltd
ss
lds
mov
inc
and
incl
outsl
lret
mov
dec
xchg
push
mov
clc
lcall
rorl
stos
push
xchg
and
push
fdivs
bnd
mov
adc
dec
in
jbe
test
lcall
sbb
cmp
jmp
dec
incl
adc
sahf
push
dec
lea
incl
mov
shl
jle
pusha
add
sbb
pop
mov
mov
shrb
rcrb
jbe
lret
xchg
push
lcall
sar
dec
xchg
in
jb
xchg
jl
test
pop
sbb
cmc
dec
aam
mov
adc
push
xchg
incl
push
out
xchg
int
xlat
inc
jo
popf
push
mov
xchg
fsubp
dec
ljmp
inc
mov
enter
pop
cli
cltd
pop
xchg
add
jg
xchg
mov
push
sbb
dec
insb
imul
mov
cmp
jbe
jb
sarb
cmp
cwtl
or
js
push
mov
insb
imul
mov
imul
je
jge
mov
dec
lcall
cmp
insl
jp
dec
lock
mov
arpl
mov
pop
loop
popa
mov
add
fists
cmp
jp
xchg
jge
and
es
pop
mov
cs
call
addr16
and
mov
test
mov
pop
sbb
fadd
sbb
xchg
jp
pop
push
dec
xchg
jnp
sub
jnp
scas
mov
pop
jl
xchg
mov
push
xor
mov
in
shrb
jo
ss
popf
lds
add
dec
shlb
mov
mov
mov
call
je
subb
in
xchg
ret
int3
cwtl
pop
test
imul
cmp
inc
sarb
xchg
leave
decl
pushf
push
dec
ljmp
imul
dec
inc
stos
pop
shll
mov
add
jecxz
stc
sub
loopne
movsl
repz
mov
sub
pop
shll
mov
jb
jb
dec
adc
aam
dec
cltd
adc
mov
jo
dec
push
scas
repz
mov
xchg
enter
sub
push
dec
clc
cmp
mov
jae
cmp
inc
daa
xor
lret
pop
fs
stc
sub
mov
incl
push
jmp
pop
fnstsw
jle
ret
fcomps
repnz
xchg
sub
xlat
add
loope
sbb
xor
test
xchg
mov
call
xor
mov
stc
sbb
jnp
or
add
xchg
inc
add
test
aad
ret
sub
jmp
insl
and
jne
mov
push
mov
sub
and
inc
clc
jl
aas
cld
mov
movsl
sub
out
push
and
mov
push
call
push
push
jl
xor
ds
pop
inc
ret
outsb
push
sahf
scas
cmp
cld
shlb
sbb
xor
adc
push
or
mov
arpl
sarl
sbb
sub
ljmp
xchg
lock
xchg
xor
bound
movsb
test
mov
insl
mov
inc
jp
imul
dec
lods
xchg
cmpsb
sbb
icebp
sbb
ljmp
jo
add
ljmp
lahf
in
add
sbb
mov
push
ficoms
add
pushl
dec
adc
mov
in
shrb
icebp
inc
data16
jg
ljmp
js
mov
push
adc
and
mov
icebp
incl
inc
fidivl
shr
mov
scas
pop
mov
jl
loope
cld
jecxz
cmp
dec
jb
fldcw
lahf
or
push
mov
and
pushl
aaa
pop
adc
inc
lock
add
mov
out
mov
add
lods
sub
adc
loope
jl
setbe
out
imul
mov
out
in
fstpl
dec
rol
pop
xchg
jl
nop
andb
lods
hlt
daa
je
movsl
add
out
cli
incl
imul
ljmp
notb
sub
pop
stc
ja
dec
xor
das
mov
hlt
repnz
aad
mov
lock
rorl
sti
fs
dec
add
daa
cmp
ds
aas
jne
loopne
mov
bound
sbb
mov
inc
xchg
nop
rol
push
sbb
lcall
ret
rol
sub
and
jg
int3
mov
les
push
adc
pushf
sbb
aam
mov
incl
call
sbb
cltd
adc
shll
pop
jne
add
dec
mov
jmp
cmp
and
lret
daa
insb
or
ja
push
hlt
mov
insb
dec
push
inc
call
sbb
push
jbe
rcrb
mov
mov
shlb
mov
jns
mov
das
daa
dec
and
fidivrs
stos
call
loope
pop
add
rcrl
mov
arpl
pop
lock
insb
mov
cmpsl
sarl
or
test
inc
cli
incl
inc
jge
idiv
jb
push
fwait
rclb
inc
mov
add
faddp
sbb
mov
stc
repz
mov
stc
test
jg
andl
or
shlb
das
mov
jmp
add
add
xchg
ljmp
inc
mov
push
add
or
or
mov
aas
std
sbb
adc
add
xor
ret
shll
stos
sub
xor
inc
cld
adc
jbe
add
inc
and
and
ret
adc
cmpsb
repnz
popa
cmpsb
adc
xchg
jb
ss
mov
xchg
dec
imul
sti
sub
adc
cmpsb
sbb
xor
ljmp
mov
dec
cmp
stos
das
aad
jae
daa
leave
imul
or
fs
pushl
push
push
mov
mov
fdivs
sub
adc
imul
inc
add
es
sbb
or
xchg
repnz
hlt
ret
inc
pop
repnz
call
jmp
xor
cs
call
mov
cmpsl
pusha
lret
push
mov
scas
orl
aaa
fildll
jne
pop
lods
dec
sub
or
les
out
pushf
pop
jg
shrl
mov
pop
jo
mov
and
cli
xor
xchg
std
add
outsl
shll
call
or
jg
or
ret
cld
xchg
mov
add
sbb
mov
mov
or
xor
lcall
shlb
decl
test
pop
mov
jecxz
xchg
ljmp
stos
xor
fcmovb
in
and
ds
imul
imul
jmp
jno
xor
stos
mov
fisubrl
stos
mov
lods
inc
ss
ljmp
mov
lods
sti
movsb
jo
fbstp
mov
ljmp
push
jg
call
sbb
fwait
aam
sub
aam
mov
sub
and
jmp
je
hlt
adc
sub
cmp
shrl
fstl
xor
repz
lret
pop
stos
cmp
jl
call
pop
test
scas
cmp
cmp
jle
fs
pop
or
add
stos
fs
lods
inc
inc
xlat
pop
dec
push
call
inc
nop
clc
mov
mov
pop
sub
xchg
enter
adc
rcll
outsb
fcomip
call
popl
sub
xchg
mov
and
add
cmp
enter
aam
push
insb
add
dec
divb
push
sbb
add
sbb
lcall
cmc
push
lea
push
mov
mov
dec
daa
push
shlb
dec
lret
cmp
and
xchg
add
ljmp
mov
dec
sahf
push
clc
inc
pop
fiaddl
add
xor
sbb
push
or
add
mov
or
sar
mov
and
jp
inc
xchg
mov
adc
aaa
sbb
stos
xor
leave
pop
cmp
lcall
and
imul
lods
xor
xchg
outsl
ss
cmp
sub
cli
xor
sub
push
aad
leave
cmp
cli
xchg
pop
clc
jg
mov
ljmp
fcoms
xchg
ror
ficoml
adc
dec
cmpsb
outsl
es
decl
mov
mov
cmp
ds
ljmp
stos
adc
daa
jnp
cmp
repnz
mov
add
call
shl
jecxz
dec
sub
mov
fbld
adc
imul
sar
lcall
xor
push
mov
jne
mov
call
sbb
xor
dec
loopne
std
adc
and
add
pop
gs
std
sbb
push
jg
loopne
test
xor
std
call
in
xchg
cli
xchg
sahf
int3
leave
cmp
cmp
leave
dec
push
pop
xchg
loope
movlps
or
push
sub
add
jb
sub
jecxz
shlb
add
add
or
push
mov
pcmpgtd
add
loopne
cmp
jmp
lret
icebp
in
test
push
sub
add
or
rorb
gs
paddsb
cs
aaa
dec
adc
dec
arpl
push
inc
shlb
pusha
inc
or
int
xchg
sub
es
addr16
lret
push
adc
sbb
inc
jns
rcrb
dec
xchg
lock
cmp
out
xchg
popf
pop
sbb
jne
jmp
push
pop
sbb
mov
outsb
cmp
mov
mov
mov
adc
inc
cmc
lcall
xchg
sbb
pushf
push
xchg
pop
fcompl
icebp
cmp
cmp
xchg
sub
shlb
pusha
sar
jg
cwtl
or
mov
lret
shl
sbb
dec
addr16
jg
ja
pop
mov
out
and
xchg
ret
sar
mov
lret
pushf
je
std
in
xchg
adc
mov
aam
xor
xor
cmp
loope
jb
pop
cmc
jg
push
movsb
push
xor
cs
out
mov
pop
cmc
ljmp
xor
sub
lods
loope
pop
cmp
rclb
mov
incl
add
enter
ror
test
push
mov
mov
xchg
jmp
push
or
xchg
lods
inc
xor
inc
aaa
adc
std
decl
mov
ret
dec
inc
jge
test
and
dec
sbb
shlb
mov
ljmp
push
ret
fcmovbe
movsl
in
push
test
push
mov
dec
jae
popf
and
inc
ljmp
mov
aam
scas
mov
or
mov
mov
cmp
subb
xchg
lock
jns
sub
dec
jmp
xchg
add
jle,pn
movsl
inc
pushl
jne
loop
testb
push
add
fs
mulb
lcall
xchg
push
leave
lock
lcall
add
add
outsl
cli
pop
loopne
jl
test
mov
or
jbe
aad
ud0
js
dec
mov
mov
mov
jnp
ret
xchg
ss
mov
adc
adc
call
push
movsl
inc
push
pop
mov
mov
jno
inc
imull
push
call
xchg
cmp
jbe
arpl
pop
ljmp
decl
add
cld
or
fildll
lock
decl
das
xor
iret
scas
mov
iret
lods
lret
mov
cmp
sbb
es
mov
jnp
in
dec
mov
pop
xchg
in
mov
ljmp
fisubrl
add
cmp
jge
lock
lcall
cmp
push
pop
jecxz
sarl
lcall
mov
cmpsb
fcompl
popa
mov
cmp
xchg
and
clc
dec
in
add
int3
cli
mov
lcall
jae
pop
sub
es
pushl
jecxz
les
adc
shr
das
dec
sub
push
sbb
dec
sahf
and
rorb
sbb
fisttps
mov
aad
pop
cwtl
mov
call
loop
mov
popa
or
out
sbb
jne
std
mov
mov
jmp
mov
xchg
ja
lahf
push
sbb
mov
lret
adc
pop
hlt
fwait
fiaddl
pop
sbbb
aas
xorl
jmp
xor
es
repnz
pop
in
push
xor
rorl
cs
cltd
lret
stos
pop
out
leave
and
jl
rcrl
stos
mov
sbb
lcall
mov
xchg
and
fdivr
aaa
sbb
mov
imul
cld
dec
clc
jl
push
mov
lods
and
iret
adc
cmp
cmp
jg
add
imulb
cmp
sbb
xchg
stos
cmp
mov
pushl
out
or
jle
aas
or
aas
jle
orl
cmpsl
mov
or
stc
cwtl
mov
cmp
or
xchg
xchg
pushl
pop
and
inc
cmp
mov
xchg
test
xor
cmp
stos
cmp
jg
shrb
jp
rcrl
pop
push
xor
xchg
sub
cmp
cmp
jle
fistl
jecxz
lea
sbb
sbb
jno
sar
dec
loop
mov
mov
pop
cmpb
movsl
mov
cmp
fwait
push
mov
call
dec
loop
fcomps
mov
or
ret
or
call
inc
movsb
inc
or
pushf
lret
dec
xor
enter
pushl
movsl
stc
mov
mov
call
mov
dec
mov
adc
mov
mov
sub
xor
scas
jnp
es
lcall
add
inc
vcvtps2dq
insb
inc
mov
adcb
incl
add
sahf
into
cli
mov
pop
movsb
inc
loopne
scas
js
popa
add
test
cmp
addb
add
repz
icebp
movsb
dec
jg
lods
clc
outsb
test
popa
add
xorb
filds
inc
push
cmp
jmp
inc
arpl
sub
decl
push
add
dec
les
and
inc
and
loope
cltd
popa
sbb
and
inc
mov
decl
jnp
xchg
test
and
inc
jmp
sbb
inc
sbb
cs
icebp
xor
jg
cmp
mov
les
sti
mov
cmp
or
xchg
addl
or
xchg
dec
sub
push
decl
sub
adc
jno
sub
adc
add
bound
decl
clc
mov
xchg
repz
cld
xchg
jp
lcall
mov
sub
movsb
into
cltd
and
fs
scas
add
js
ljmp
enter
lret
push
cmpsb
mov
dec
pop
sbb
mov
push
pop
push
push
or
test
decl
repnz
xchg
dec
and
add
or
sysret
fcmovnu
cmpsb
clc
cmp
dec
lcall
mov
mov
jmp
or
fcoms
push
out
cli
ljmp
dec
into
in
push
stc
dec
push
fmuls
sti
roll
xchg
mov
cli
mov
int
icebp
xchg
cwtl
jno
daa
push
sbbl
ljmp
add
mov
lock
xchg
jbe
lcall
aas
paddb
dec
testb
xchg
jp
xchg
fwait
mov
test
cmp
sti
cmpsl
cmp
orl
pusha
in
dec
or
call
cmp
cmpsb
mov
sbb
and
aam
dec
dec
push
mov
enter
movl
mov
mov
or
push
adc
shrb
cmp
lock
lret
les
ljmp
sbb
imul
dec
xor
js
cmp
xchg
fisubrs
mov
dec
mov
ljmp
dec
mov
xchg
mov
adc
test
sbb
xchg
lret
and
mov
mov
clc
inc
xchg
mov
sub
add
enter
jb
sub
mov
fnstenv
int
or
lcall
sub
mov
cltd
ss
push
cli
cwtl
mov
adc
bound
and
sar
xchg
add
stos
adc
outsl
xor
mov
movsb
push
cld
sbb
cld
incl
adc
mov
mov
daa
jle
lret
out
xor
jmp
pop
fcmovnbe
sbb
into
daa
mov
out
inc
inc
ret
shrl
inc
mov
and
cmp
push
inc
cmp
jg
or
mov
push
into
add
dec
imul
or
rcll
xchg
cmp
add
pop
sbb
mov
sbb
lods
cli
dec
mov
shll
xchg
adc
les
inc
inc
push
xchg
fldl2t
dec
cmp
ljmp
adc
add
fisubs
cltd
adc
lcall
sbb
jl
push
mov
int
sbb
pop
or
lds
or
ljmp
out
and
js
fmuls
in
adc
sub
enter
xchg
xchg
adc
cwtl
fwait
jg
inc
std
leave
mov
repz
xchg
cmp
decl
mov
jne
and
test
andb
sub
incl
popa
mov
mov
cmp
mov
mov
dec
mov
jae
sbb
sub
push
push
das
lods
and
test
dec
call
sub
movsb
pop
int3
ljmp
into
adc
xor
mov
add
mov
sub
or
ret
clc
ss
dec
lahf
lcall
fwait
stos
stos
pop
dec
stc
xor
mov
add
movsl
fdivl
sbb
pop
call
jb
mov
mov
sub
aad
and
test
xlat
jnp
cmp
cmp
sbb
push
mov
xlat
jl
push
sbb
adc
ss
mov
mov
shlb
add
ficompl
jmp
sub
mov
nop
or
dec
xchg
cmc
xchg
out
pop
xchg
dec
push
push
lcall
mov
ljmp
mov
cld
cli
pop
scas
mov
pusha
daa
dec
add
inc
jnp
js
mov
and
decl
jno
or
adc
jg
enter
pop
repnz
sub
push
dec
sar
dec
cmp
inc
mov
pop
dec
in
push
mov
pushl
xchg
cmp
dec
shlb
test
frndint
pop
je
push
ret
xchg
or
movsb
mov
ret
add
das
add
mov
push
pop
sbb
mov
repz
lea
and
mov
aaa
push
jecxz
decl
test
or
push
add
inc
sub
mov
int3
in
jae
fs
lea
or
arpl
out
jg
insb
outsb
sahf
push
cmpsb
imul
pushf
arpl
pop
cmp
mov
pop
test
xchg
es
lea
mov
or
incl
aas
push
mov
sub
loop
lods
test
push
cmp
ljmp
sub
test
sbb
adc
dec
inc
icebp
fisubrs
cmp
pop
and
stos
and
push
addb
xor
into
rorb
push
cmpsl
sub
aam
mov
lcall
cmp
sbb
aas
dec
ret
adc
cs
or
push
mov
dec
mov
test
dec
setbe
cmp
outsb
inc
clc
inc
pusha
push
in
adc
inc
and
rcrb
sarl
or
push
mov
mov
rcll
pushl
dec
icebp
mov
test
mov
js
fcomi
decl
ret
rcl
jl
je
stos
jo
mov
jecxz
mov
mov
inc
sub
out
add
xlat
out
push
push
xlat
add
js
jecxz
xor
xlat
cmp
push
nop
pop
push
xchg
mov
ficoms
jb
fmuls
mov
cmp
inc
fcomps
cmp
hlt
int3
sub
test
and
fisubrl
mov
in
xchg
pop
in
call
js
ja
adc
sub
popa
fs
pop
cmp
mov
fcomip
nop
push
fdivs
in
clc
cmp
mov
pop
das
test
mov
mov
add
adc
bndstx
push
mov
pop
fwait
cmp
mov
dec
insb
push
out
loopne
sti
fimull
inc
adc
pusha
lods
int
adc
jb
int3
adc
in
into
ds
adc
test
jmp
adc
sbbb
or
mov
inc
add
cs
or
imul
xchg
movsb
mov
std
lcall
cmpb
adc
ljmp
jl
mov
mov
jns
jmp
pusha
sbb
mov
dec
adc
cmc
ds
cmp
es
xchg
outsb
lcall
sbb
xchg
fstpl
lods
jg
and
enter
ss
je
cs
lcall
test
inc
sub
in
adc
push
xor
add
xchg
in
shl
pop
xchg
mov
sar
fbld
pop
and
enter
lcall
nop
test
push
xor
fs
jmp
sar
call
dec
sbb
and
pushf
js
xchg
in
fmuls
pop
pop
rorl
cli
in
icebp
les
push
movsb
or
or
std
jg
xchg
lahf
lret
or
scas
sub
adc
in
push
movsl
cmp
mov
es
fmuls
push
or
or
pop
add
or
test
xor
hlt
xchg
push
hlt
ljmp
std
int3
cmp
movl
into
dec
mov
ljmp
aaa
dec
stos
pop
add
jge
lahf
adc
mov
mov
jbe
mov
jmp
and
outsb
xchg
xchg
lds
jae
jbe
or
mov
mov
cs
lea
std
decl
sahf
lcall
adc
arpl
gs
pop
pop
clc
push
sar
adc
lods
out
sti
ds
jmp
mov
or
ss
cwtl
movb
loope
or
push
pushl
xchg
js
pop
pop
and
mov
add
lret
bound
jmp
push
loopne
pop
inc
xadd
sbb
xchg
jae
in
pop
adc
jmp
pop
jle
mov
pop
dec
xor
add
or
xor
repnz
xchg
js
mov
fisubrl
xchg
movl
sub
jg
dec
mov
ljmp
inc
in
es
ljmp
cmp
call
cmpsb
dec
scas
jo
xchg
leave
xor
or
xor
mov
imulb
lods
jnp
adc
into
test
lds
jg
and
js
hlt
stos
lret
adc
jge
fprem
inc
fists
xlat
enter
sarl
lds
add
incl
je
push
cmp
mov
jnp
jae
push
out
clc
jg
push
dec
imul
jmp
jl
jne
cmp
ja
cwtl
sti
addl
int
stc
call
xchg
xor
push
or
jge
lcall
cltd
outsl
ljmp
pop
pop
pop
std
jl
adc
imul
test
sahf
test
lods
movsb
mov
int3
daa
mov
call
add
push
adc
jmp
cmp
mov
negl
xor
andl
mov
xchg
sbb
push
repz
icebp
int3
sub
cmp
inc
clc
mov
ds
fs
push
jle
push
pop
ret
sbb
fcomip
xor
jle
dec
js
outsl
clc
sbb
or
push
lock
sahf
push
xchg
es
inc
scas
pop
jbe
add
jg
pop
xchg
repz
push
cwtl
xlat
jo
xor
dec
je
adc
ja
hlt
call
and
add
cmp
and
inc
cmp
frstor
jb
dec
fs
or
push
or
mov
xchg
cld
or
fs
xchg
sub
xor
shlb
mov
jmp
push
pop
jae
lret
push
xchg
mov
in
ljmp
movsb
dec
xor
sbb
push
xchg
sub
decl
pop
mov
sarb
jmp
xchg
push
and
mov
mov
andb
loopne
xchg
fcmovnb
outsb
sbb
lock
xlat
ret
jp
adc
cmp
xor
rolb
dec
loopne
sbb
into
and
movsl
cmp
xchg
in
call
add
leave
sbbb
jbe
pop
pop
les
lods
arpl
into
or
mov
decl
ljmp
nop
loopne
fldcw
cli
hlt
int3
nop
movsl
mov
hlt
in
lahf
incl
cld
fwait
push
cmp
xor
xor
aad
dec
insl
lods
jge
add
xchg
incl
sbb
test
int
adc
add
popa
add
cld
cli
icebp
out
add
adc
push
lea
dec
add
sbb
push
xor
pop
adc
ljmp
mov
mov
popa
xchg
mov
addl
pop
or
pushl
jnp
stos
fcomp
or
ja
mov
fnstsw
pop
sbb
test
movsl
xlat
test
inc
enter
add
xor
imul
roll
movsl
not
inc
pop
inc
les
inc
mov
push
ds
jl
dec
sub
fs
nop
incl
sbb
in
pop
or
jno
es
sahf
jno
clc
daa
inc
fisttpl
or
call
lds
sub
sub
adc
inc
mov
xchg
pop
or
adc
push
inc
sub
mov
push
aam
mov
dec
sub
aad
stos
pop
jns
push
jns
incl
daa
push
pop
xchg
out
mov
or
xchg
adc
sub
movb
sub
int
push
in
inc
orb
addr16
jl
out
inc
mov
push
popf
ss
outsl
mov
mov
mov
hlt
mov
fs
push
fldl
bound
mov
addb
sbbb
lcall
pop
aam
stos
lods
call
icebp
add
in
ja
push
fistps
pop
mov
dec
popa
xor
cltd
loop
xchg
fildll
fisubs
and
int3
loop
xor
pop
mov
xor
outsl
sub
cmp
mov
mov
adc
jne
loopne
lea
loop
call
mov
or
fistpl
push
cli
mov
mov
sub
cmp
mov
sbb
out
or
and
xchg
cmc
test
mov
lds
push
dec
jmp
inc
fnstsw
cmc
hlt
pop
mov
mov
in
and
dec
mov
xchg
out
stos
fs
incl
push
pushf
cmpsb
cmp
cmpsl
stos
dec
cmp
lods
mov
cli
js
aad
stos
pop
outsb
or
adc
in
fisubrl
ret
push
mov
push
cbtw
mov
and
pushl
push
mov
ficompl
inc
fnstcw
sbb
cld
notb
pop
jg
mov
outsb
rorl
push
negb
neg
lret
sahf
jl
mov
je
nop
test
jmp
das
and
jb
mov
pop
adc
in
and
outsl
and
pop
lods
incl
pop
fmuls
add
fmull
andb
or
cmp
xchg
test
dec
sub
rorb
das
add
xchg
imul
xchg
xchg
es
xor
ljmp
shll
jo
jecxz
push
jnp
call
ds
rolb
nop
jmp
push
mov
adc
xchg
loopne
xorb
mov
xchg
mov
pop
pop
insb
imul
and
inc
sub
lret
outsb
pop
ljmp
mov
dec
and
push
adc
es
rorl
dec
imul
mov
mov
test
dec
es
push
subb
incl
dec
jg
mov
popl
mov
cmp
push
pop
in
mov
ljmp
rolb
mov
fstpl
jb
push
in
adc
sub
call
xchg
mov
les
xchg
xor
repz
and
jge
decl
mov
orb
dec
lahf
idivb
out
mov
cmpsl
pushf
mov
dec
pop
rclb
add
pushl
sahf
sbb
popa
jbe
call
sub
icebp
lcall
icebp
roll
and
push
xchg
enter
mov
pop
inc
ret
std
lcall
mov
sub
sub
xchg
or
push
test
adc
mov
add
dec
cmp
push
xor
mov
jg
mov
pop
mov
movsl
dec
orb
mov
pusha
mov
or
popa
cld
mov
pop
adc
mov
jle
sbb
movsl
hlt
pop
pop
push
dec
shrb
add
test
pop
dec
cmp
dec
test
xchg
jnp
scas
cmp
incl
pushf
pusha
mov
add
js
dec
xchg
into
push
pushf
xor
jmp
bound
jb
xchg
stos
adc
call
cmp
stos
pop
lcall
xchg
rolb
lcall
xor
shlb
cld
mov
dec
jno
dec
xor
cmpsl
iret
dec
mov
fcomip
fnstsw
int3
inc
test
movsb
mov
and
call
dec
cmp
leave
outsb
shll
dec
imul
decl
fs
xchg
fld
lds
call
ret
mov
hlt
adc
mov
in
bound
jmp
dec
in
cld
addr16
pushl
inc
jnp
lret
cmp
fwait
jns
test
test
jecxz
call
rclb
sub
popf
lret
sarl
bound
ret
nop
adc
and
mov
dec
adc
xchg
mov
jmp
mov
clc
inc
sbb
mov
test
push
cwtl
rclb
scas
mov
js
mov
sub
insb
test
test
push
inc
imul
inc
imul
sbb
sbb
jle
loop
clc
inc
jg
pop
mov
imul
push
lds
movsb
jae
mov
dec
lods
push
xchg
in
clc
mov
out
gs
or
pop
les
or
ret
ljmp
add
pop
fcmovbe
inc
sbb
sbb
push
cs
sbb
rorl
xor
mov
pushl
cmpsl
lcall
idiv
ljmp
aaa
cltd
jmp
test
roll
negb
and
stos
mov
out
mov
or
incl
mov
add
and
add
or
mov
mov
data16
xchg
aaa
add
inc
add
sub
cmp
mov
ret
pop
fisubrl
test
fcoml
call
xor
or
pop
add
cmp
gs
pop
das
pxor
jg
xor
pop
clc
lds
jno
pop
aad
cmp
mov
xchg
dec
enter
xchg
jg
test
xchg
mov
mov
mov
dec
fwait
jb
inc
jp
jp
push
adc
cmc
mov
outsb
fdivp
sahf
xor
int3
mov
lcall
push
fimuls
js
xchg
jns
dec
sbb
int3
bound
xor
jg
sub
pop
ss
or
pop
pop
aad
mov
add
mov
cmp
data16
and
push
ja
repnz
cmp
icebp
lcall
hlt
inc
cltd
cmpb
mov
decb
adc
cmp
rol
sbb
add
scas
cli
sub
jmp
mov
pop
inc
js
adc
movsl
mov
ljmp
adc
sti
call
fidivrl
pop
lret
repnz
icebp
cmpsl
jg
in
adc
shlb
shlb
xor
mov
adc
call
movsb
jns
movsl
and
adc
scas
ds
pushf
mov
jp
xchg
call
das
or
xor
aam
mov
mov
cs
scas
mov
pop
decl
je
lods
cs
xor
sbb
mov
xchg
shll
pop
add
pop
je
cwtl
or
ljmp
push
aad
into
push
pop
aad
push
cmc
xor
movlhps
std
pop
sar
mov
mov
nop
es
jo
jg
sub
push
pushf
je
mov
push
js
sbb
repnz
xchg
in
int
fstps
int
decl
pop
sbb
loopne
test
push
stos
lea
std
xchg
cmp
pop
inc
sbb
mov
push
fsqrt
call
movsl
pop
jge
xchg
fst
pop
cmp
nop
fisttpll
aam
fcmovnu
int
adc
xchg
push
loope
or
cli
lcall
adc
pop
jmp
adc
push
enter
cmp
pop
xchg
fs
jg
adc
add
adc
or
mov
dec
subl
mov
and
movsb
rcrl
cli
push
mov
xor
lds
adc
push
xchg
sub
sbb
and
dec
rclb
and
cld
add
jp
or
test
pop
std
ljmp
push
int3
push
filds
sub
loop
cld
dec
ljmp
cli
xor
arpl
mov
sbb
lea
lret
hlt
push
push
sub
mov
cltd
and
lcall
test
mov
jbe
cmp
adc
rcll
jle
fildl
push
jp
xchg
mov
cmpsl
push
pop
dec
jo
call
adc
xor
aas
jne
pop
test
test
cmp
sbb
add
or
inc
rolb
adc
cmp
cmp
inc
scas
shll
fucom
scas
loopne
cwtl
roll
repnz
sbb
ljmp
shrb
fs
mov
cmp
pop
scas
cmp
jecxz
dec
pop
push
inc
sbb
or
adc
ljmp
fistl
mov
call
dec
test
or
cli
popa
pop
pusha
dec
fiaddl
cld
decl
pop
js
daa
sbb
lea
jnp
fcompl
pushf
leave
andb
jmp
xchg
icebp
or
cltd
mov
sub
lcall
add
test
out
aam
cmc
frstor
and
pop
dec
fisttpl
decl
pushf
fildl
int3
lea
pop
cltd
sbb
adc
test
jg
lock
xor
repz
test
pop
popf
mov
dec
decl
stos
fcomps
or
aas
dec
sbb
xchg
push
adc
or
and
mov
pop
cld
adc
loopne
adc
fistpl
sub
cs
ljmp
xchg
data16
int
adc
popf
jnp
and
push
cmp
and
sbb
dec
push
inc
es
incl
lret
movsb
testb
inc
out
fistl
jmp
inc
and
jbe
dec
push
dec
call
adc
in
int3
and
cmpsl
pop
xchg
cli
incl
pushf
repnz
mov
or
adc
xor
inc
lods
call
popf
daa
sti
xor
hlt
sub
push
movsl
push
adc
mov
inc
add
decl
mov
push
jne
sbb
lret
jg
jecxz
stos
int
add
decl
xor
es
cltd
int
lds
call
mov
mov
cmp
js
sub
mov
lcall
loopne
jp
or
sbb
popf
shrl
rcrl
and
adc
fldenv
push
loope
and
xchg
xchg
cltd
imul
dec
pop
adc
add
orb
outsl
ret
pusha
adc
mov
es
out
inc
aad
push
add
inc
pop
fimuls
push
call
fs
cs
ljmp
pop
leave
test
cld
jae
cmpsl
jb
sub
sbb
pop
bound
shlb
jmp
cmp
pop
hlt
and
bound
xor
pop
sub
jle
shlb
lods
fstl
insl
ljmp
test
push
push
jge
sbb
push
jg
xor
or
int3
pop
mov
cs
clc
aaa
or
movsb
movsl
test
pushl
push
sahf
pop
cltd
test
dec
xchg
outsl
repnz
push
cmc
mov
push
push
cwtl
xchg
call
lret
loopne
rolb
call
sbb
sub
and
dec
add
rolb
lods
lds
nop
movl
mov
jmp
jmp
ss
insl
xchg
movsl
lea
aad
inc
sub
fcoml
jmp
out
cmp
sub
cmp
mov
adc
cmp
inc
movsl
mov
dec
lea
jg
pushl
ret
lds
sub
dec
in
dec
mov
mov
xchg
jmp
lcall
dec
daa
xchg
popf
lret
imul
xchg
jle
pop
and
scas
or
scas
inc
popf
nop
test
push
cmp
outsl
mov
sub
sub
lret
cs
ljmp
ret
pusha
mov
or
dec
lds
push
repnz
dec
adc
and
test
or
aad
jge
nop
movsb
cmp
push
cmp
lahf
or
lods
popf
stos
hlt
lds
mov
lods
jns
adc
add
xchg
xchg
xchg
add
xchg
dec
mov
std
incl
je
jmp
inc
nop
orb
ror
push
fcomip
jg
cwtl
dec
stc
push
push
hlt
test
push
insl
stos
mov
movzbl
sbb
mov
sub
pop
or
or
je
cld
pop
ja
mov
dec
jg
jmp
stc
test
and
inc
pop
push
dec
jle
lret
pop
adc
jb
fistpll
xchg
in
jb
out
loope
push
mov
loopne
fbstp
test
rolb
push
ret
clc
popa
icebp
scas
sub
out
js
repnz
fadd
into
sub
dec
fldlg2
test
and
rol
push
call
rclb
mov
daa
arpl
mov
push
int
stos
popf
pop
or
incl
sbb
nop
loop
inc
stc
dec
adc
sbb
push
or
mov
fisubl
fisttpll
loop
out
add
scas
pop
icebp
decl
lock
xor
movsb
ficoml
lret
test
sbb
clc
push
inc
xchg
lock
clc
int3
roll
ds
mov
cmp
mov
nop
cmp
in
cwtl
movb
rorb
in
mov
or
adc
fcomip
sar
inc
push
add
cmp
nop
stos
out
dec
push
imul
in
fs
or
lcall
popa
pop
push
xor
jno
imul
loop
call
lods
sbb
mov
cmp
test
out
outsb
jecxz
aad
jecxz
outsb
imul
insl
mov
ja
push
push
das
icebp
dec
lods
icebp
jno
inc
insb
sbb
sub
pop
scas
and
ja
lcall
or
mov
loop
inc
mov
stc
mov
sbb
mov
call
into
out
movsb
in
xchg
pop
sti
sahf
or
cmp
decl
pop
add
roll
outsb
add
xchg
sub
inc
faddl
push
aad
aam
in
or
cmp
stos
xchg
shl
mov
pop
jbe
into
xchg
call
and
sbb
pusha
lret
or
rcrb
loopne
call
push
push
adc
pop
mov
sub
jae
fadds
cmc
fbstp
cmp
int
or
adc
push
mov
add
mov
jno
lcall
jno
and
sbb
push
adc
cwtl
push
pusha
cwtl
add
andl
dec
mov
inc
lods
repnz
enter
div
mov
fwait
sub
in
and
js
andb
dec
iret
scas
jns
mulb
jmp
xchg
cmc
mov
sub
lods
rcrb
das
sub
sbb
movsl
mov
adc
mov
les
aas
sub
adc
or
push
inc
add
aam
fimuls
jge
rcrb
int3
insl
ds
test
je
decl
lcall
je
cmp
sbb
das
jne
lods
sub
mov
pop
test
mov
cmpsb
pop
lret
mov
dec
jne
jno
clc
rorl
xchg
daa
xor
add
or
fimuls
stos
outsl
inc
rcrb
jbe
fwait
sar
decl
jl
xchg
jbe
xchg
xor
test
out
or
or
or
fcomip
jg
sbb
push
or
es
sbb
jmp
pop
or
repnz
ljmp
push
mov
push
cmp
sbb
xor
ljmp
sbb
je
into
jmp
xchg
and
loopne
ljmp
insl
pushf
enter
cmp
xchg
scas
or
dec
nop
std
mov
andl
mov
outsl
ja
sbb
inc
ret
sbb
in
inc
ja
jmp
lods
int3
int
xchg
rorl
js
out
aam
popf
mov
cmpsl
subb
fadd
shll
ljmp
stc
fidivrl
xlat
lcall
fidivrs
push
inc
push
mov
push
pop
sar
ljmp
push
inc
mov
mov
xor
enter
push
sub
ds
sbbb
jb
shl
sbb
and
push
pop
push
inc
jno
in
outsb
xchg
mov
pop
insb
jmp
ljmp
jmp
xchg
pop
xor
aaa
xchg
xchg
pop
jmp
cmpsb
push
outsl
mov
mov
shll
ret
jb
inc
pop
hlt
jae
fnstenv
pop
jecxz
popf
jno
mov
aad
pop
mov
scas
andl
xor
daa
daa
stos
mull
icebp
decl
fidivs
fs
fimuls
inc
leave
test
push
loope
in
adc
ja
pop
int
dec
mov
adc
cmc
mov
int3
jecxz
or
lea
out
dec
xor
call
popf
inc
mov
test
cmc
scas
movsb
in
mov
outsl
pusha
es
cmpb
jo
in
pop
call
imul
adc
clc
sbb
push
and
test
and
pusha
fwait
in
test
loop
sbb
arpl
fimuls
incl
cmp
subb
xor
movsb
mov
ljmp
sbb
xor
pushl
or
in
mov
in
jp
lcall
lock
xchg
imul
ret
dec
cld
sbb
lret
sub
lea
inc
dec
out
in
movsb
jb
test
mov
lcall
dec
pop
and
pop
push
scas
fsubrl
jl
insb
mov
push
mov
push
xor
mov
rclb
int
pop
dec
inc
sbb
repnz
or
aas
mov
faddl
lret
jle
loop
cmp
inc
sahf
inc
lret
lds
adc
pop
adc
dec
inc
cld
jg
cld
sub
test
xor
inc
test
ss
and
jg
andb
cmp
mov
pop
test
pop
mov
adc
test
mov
sbb
rclb
fisttpl
xchg
push
dec
sbb
rcrb
fwait
sti
fs
enter
mov
mov
mov
add
cmp
inc
push
mov
imull
loopne
scas
bound
cli
ljmp
clc
adc
sub
pop
je
add
pop
mov
lcall
cli
sub
fs
jno
mov
das
add
into
add
faddl
and
imul
mov
dec
jne
test
int
pop
dec
pop
repnz
outsl
pop
inc
mov
mov
cli
clc
jbe
decl
inc
les
push
xor
mov
adc
outsl
adc
dec
mov
push
out
adc
jg
add
jae
sbb
insl
push
shlb
and
popa
call
add
mov
fildll
cmp
mov
bound
sbb
xor
xor
aam
ljmp
jp
bnd
mov
iret
popf
cmp
add
movsl
dec
cltd
xor
dec
test
xor
dec
dec
push
sbb
aam
cli
xor
sbb
jp
insl
cmp
adc
push
das
scas
rorb
add
jmp
or
push
mov
xor
out
and
pop
ljmp
xor
out
pop
sar
jg
loop
sbbl
inc
mov
js
loopne
add
je
sub
insl
adc
dec
popf
and
hlt
jmp
loop
clc
cmp
jmp
push
in
into
inc
ljmp
jecxz
ss
push
jecxz
fadd
push
mov
fs
add
jbe
xchg
scas
pop
xchg
and
pushl
jmp
mov
iret
outsb
pop
cmp
ljmp
mov
mov
enter
and
mov
ljmp
test
xchg
int
aas
sahf
pop
inc
pop
inc
dec
rolb
cmp
rorl
add
call
sahf
hlt
jecxz
xor
add
mov
lahf
sub
jg
cwtl
adc
push
cmp
add
aas
add
filds
int3
mov
or
mov
lcall
loope
xchg
sbb
pushl
fcom
and
enter
rolb
es
lods
add
sub
subb
pop
dec
mov
mov
push
and
jp
sub
xchg
jb
or
jo
loope
add
test
xchg
or
mov
les
or
ljmp
sub
mov
test
call
sbb
adc
mov
test
cmp
call
xchg
push
imul
mov
movsl
adc
test
mov
cmp
std
imul
insb
jne
mov
pop
sbb
push
pop
mov
cmp
mov
lea
lret
fdivs
xor
or
movsb
fildl
icebp
inc
push
dec
negb
jmp
popf
shll
or
mov
shll
mov
aaa
sub
clc
lcall
fidivrs
and
xchg
test
lea
ret
sti
psraw
jbe
rolb
lock
test
add
ret
arpl
call
sub
aaa
into
mov
orl
sub
icebp
pop
stc
add
xchg
jg
lea
and
imul
andb
mov
cmp
cmp
sbb
xchg
ds
jg
call
call
insb
aam
xchg
pop
iret
mov
ds
cmpb
ud0
call
sub
stos
movsl
push
lds
xchg
insl
push
sub
xor
ret
call
xlat
inc
and
loop
mov
push
sbb
mov
pop
cmp
or
jl
rol
xchg
jecxz
or
adc
lods
mov
outsb
stos
ror
cmp
sbb
mov
outsl
cltd
pop
xor
fidivl
cmpsb
pop
nop
mov
outsb
pop
insb
or
jg
push
enter
sub
fwait
scas
in
repz
sub
sbb
add
mov
add
fbstp
popf
sub
clc
pushl
mov
stc
cmp
addr16
adc
out
inc
mov
mov
sti
subl
arpl
xor
incl
sub
xchg
jns
aas
add
adc
ljmp
adc
loopne
or
rcrl
or
cmp
jno
loope
push
xchg
pushf
jns
push
add
inc
cwtl
inc
and
dec
repnz
mov
xorl
sub
or
rol
orl
push
add
xor
ljmp
aas
sub
jl
mov
and
lret
jae
stos
fsub
mov
mov
pop
mov
sbb
jb
loop
inc
lcall
mov
jl
push
popa
lods
aam
enter
jne
lcall
mov
outsl
into
jmp
cltd
xchg
nop
out
and
or
dec
mov
subl
incl
mov
and
mov
xor
cmpsb
popa
and
sbb
lods
fsubr
jp
and
jmp
and
jp
fistps
mov
sbb
push
cmp
xchg
xchg
rol
and
push
jb
fildll
xor
sub
pusha
std
adc
xchg
adc
dec
pop
dec
fs
mov
jbe
fs
lcall
or
cli
dec
adc
int3
imul
adc
rcrb
adc
inc
inc
pushl
jo
mov
sub
adc
decl
icebp
xlat
xchg
andb
mov
pop
xor
add
adc
inc
std
mov
movsb
lcall
bound
push
add
sbb
data16
loope
mov
testl
fsubs
dec
gs
and
in
lret
adc
jae
mov
add
cld
ljmp
aam
cmovbe
jecxz
inc
aad
decl
jg
cmp
mov
repz
xchg
sbb
inc
scas
pop
call
pop
fadd
rorl
daa
outsl
mov
lcall
in
js
stos
int
sahf
mov
decl
dec
adcb
push
movsb
push
pop
or
or
mov
jp
mov
cld
dec
pop
decl
sub
cmc
sbb
pop
sti
xor
xchg
jmp
dec
test
dec
in
sub
sahf
in
jl
xchg
sub
das
pop
adc
mov
cltd
test
popa
notl
mov
cli
jg
pop
scas
jg,pt
lret
jl
sti
lods
or
test
decl
and
rcrb
inc
es
mov
sub
inc
test
incl
stc
xor
push
adc
inc
lea
mov
movsl
outsb
mov
stos
inc
in
inc
push
ret
js
inc
dec
insl
shrl
adc
and
movsl
sub
xchg
push
jae
out
mov
call
or
shrb
dec
incl
push
inc
mov
dec
insl
fcomps
xchg
loope
loop
fildll
pop
add
cmc
mov
mov
jecxz
jmp
inc
lods
adc
cmc
sub
mov
ljmp
cmp
adc
js
cwtl
int3
add
push
jno
add
lea
jg
inc
cmp
and
dec
lock
mov
and
dec
pusha
imul
and
adc
jnp
int
insl
push
jle
adc
pop
pop
in
sub
add
call
pop
mov
or
outsl
push
adc
xchg
xor
or
outsl
ss
push
cmp
add
mov
call
int3
cltd
push
adc
flds
adc
xchg
add
out
cli
ljmp
fdivs
push
fdivl
push
pop
or
mov
pop
cmp
dec
movb
rcl
cmp
les
lods
cmp
jge
ret
pop
out
lods
dec
pop
sbb
add
mov
repz
dec
shrl
mov
sbbl
mov
push
fiadds
push
push
int
outsb
dec
pop
mov
jmp
push
and
jmp
in
in
cmp
mov
lcall
repz
mov
push
lock
ficompl
xorb
or
cmp
stos
ss
adc
cmc
dec
mov
dec
data16
xor
in
pop
sub
add
aaa
lret
mov
push
ds
subb
xchg
jg
pusha
push
xchg
xor
or
enter
mov
mov
fdivrs
lods
push
adc
stos
mov
jo
lock
pushl
test
lcall
mov
popa
or
call
sub
add
jg
cmc
movl
mov
cmp
in
sbb
jno
push
or
or
add
aam
mov
call
test
inc
insl
lret
pop
cmp
rolb
or
jmp
scas
into
jo
fnstenv
test
inc
and
dec
push
fidivs
dec
insl
mov
fwait
xchg
mov
jmp
push
imul
scas
pusha
xchg
sub
gs
imul
lcall
es
mov
mov
testl
loop
pop
loopne
pop
mov
daa
or
nop
add
movsb
cmp
stc
sub
leave
in
push
lcall
xrelease
out
dec
outsl
outsb
xchg
jns
cmp
mov
fcmovb
mov
xchg
fstl
pop
imul
call
add
fs
add
and
mov
aam
pop
pop
xchg
aad
mov
push
push
mov
mov
enter
add
cli
js
cmp
mov
icebp
lcall
inc
xchg
cwtl
xchg
rolb
sbb
aam
add
mov
jmp
cmp
in
dec
or
call
int3
jmp
arpl
in
roll
in
sub
mov
fisubl
or
lock
jns
jg
or
mov
push
and
ljmp
test
incl
icebp
mov
jge
jl
dec
jg
test
fdivr
decl
push
les
ret
lea
scas
repnz
pop
cmp
movsb
repnz
rcr
cmp
or
inc
outsl
lret
ss
jg
lret
xor
mov
dec
negb
mull
repnz
adc
or
lcall
subb
jo
mov
mov
mov
add
add
ret
ljmp
cld
jmp
call
jno
in
punpckhdq
icebp
jg
in
outsb
push
or
sub
mov
add
pop
add
dec
xor
cmpsl
adc
imul
mov
ljmp
add
insb
ret
add
and
or
andl
cmp
into
je
jg
popa
and
andl
leave
and
scas
jns
enter
mov
call
gs
xor
sbb
dec
lock
sub
push
std
ljmp
mov
jbe
and
addb
push
xor
cs
loop
in
popa
push
or
sub
fmull
sub
jp
jle
dec
inc
js
sub
dec
or
das
adc
addl
and
std
fbld
inc
movntps
sub
mov
aas
js
mov
xor
sub
dec
xchg
adc
mov
testb
ret
jecxz
mov
or
cltd
ret
or
lret
movsl
xchg
mov
cmp
lds
mulb
sub
lock
vmovsldup
adc
jno
call
and
mov
les
clc
rcrl
adc
add
ja
ljmp
mov
pop
out
and
incl
cs
and
pop
inc
pushf
jne,pn
pop
fcoml
sub
repnz
lock
cmp
ficompl
out
stos
in
incl
inc
mov
sub
push
dec
rolb
ret
out
loopne
addr16
pushl
cld
and
dec
mov
rorb
int3
lods
dec
cltd
sub
mov
nop
fcomip
mov
out
pop
push
or
and
or
ss
movsb
or
outsb
lock
js
sub
aaa
rcll
adc
ljmp
push
and
sub
inc
jb
jle
lcall
popa
add
pop
push
jecxz
and
cmp
enter
bound
mov
in
ret
andb
scas
incl
or
js
xchg
rorb
pop
stos
push
and
outsb
arpl
frstor
lock
or
adcb
jmp
dec
dec
jmp
adc
adc
out
xor
cmpsb
fisubrs
aad
mov
cmpsl
ss
jmp
ret
add
stc
dec
ret
pop
pop
xchg
mov
loopne
loope
mov
mov
incl
sub
xchg
addr16
call
mov
jmp
ds
xor
dec
add
sbb
dec
push
or
pop
and
jle
fwait
jp
lock
loope
cmpsb
mov
call
adc
or
inc
ret
mov
dec
sub
mov
push
mov
hlt
push
loop
xchg
dec
dec
push
les
mov
sahf
xchg
inc
inc
bnd
xchg
push
mov
enter
adc
rol
inc
lcall
repz
rcll
shl
inc
mov
ret
mov
stos
mov
test
sar
jmp
ret
rcll
mov
xor
adc
mov
dec
clc
lock
jg
pop
xor
xor
repnz
dec
and
mov
add
inc
stos
or
test
subb
jecxz
test
je
lcall
repz
or
xchg
fisubl
jg
out
ds
and
and
adc
mov
xor
call
dec
movsb
cmpsb
pop
lcall
push
cwtl
dec
outsl
xchg
stos
nop
xorb
fisttps
adc
cmpsl
popa
cli
pushl
das
inc
in
idivl
push
arpl
insb
out
inc
add
push
and
icebp
insb
test
dec
sub
scas
adc
lods
xchg
cmp
popa
xor
daa
lret
repz
mov
scas
fs
cmp
lcall
mov
repnz
int3
xchg
push
xchg
inc
out
int
rclb
test
mov
or
jg
in
pop
jp
sub
out
das
push
outsb
scas
push
repnz
hlt
loop
xchg
repnz
xchg
dec
and
push
jmp
call
mov
ror
ljmp
inc
add
ret
fimuls
and
adc
test
int
pop
xor
test
mov
xchg
mov
pop
std
out
xor
pop
push
lods
cmpsb
pop
icebp
jg
jno
mov
fstl
fcoml
dec
stos
fisubl
decl
loopne
in
push
and
add
lds
cmovns
xchg
xor
ds
sbb
xor
xchg
aaa
mov
icebp
jne
add
mov
lods
jne
xlat
notb
xchg
sub
ficoms
xor
adc
stos
xor
jae
push
inc
call
sub
xor
call
pop
mov
out
cmpsb
mov
bound
decl
push
xorb
testb
adc
int
mov
outsl
decl
ljmp
mov
ljmp
mov
jmp
mov
cmp
push
inc
mov
jmp
push
fcmovnbe
inc
dec
or
add
mov
daa
sbb
in
aaa
int3
jp
ljmp
cmp
dec
rcr
cmp
cmp
or
sub
pushl
xchg
xrelease
cmp
push
xchg
cmp
jb
xlat
adc
and
sbb
decl
sub
stos
jb
and
push
mov
cmpsb
lret
dec
aas
inc
and
jae
lret
xchg
pop
jno
fwait
xor
push
xor
jno
cld
pop
and
lock
jmp
mov
jae
mov
shrb
push
xor
pop
cmp
sbb
stos
mov
decl
and
out
lods
mov
inc
sub
or
lods
int3
arpl
dec
inc
or
sar
push
mov
adc
mov
add
enter
inc
lcall
cli
pop
cmpsb
xor
scas
adc
movsb
cmpsl
jg
and
mov
sub
lcall
mov
xchg
and
das
lret
outsl
inc
xchg
mov
push
mov
jo
imul
adc
data16
cmpsb
fwait
mov
adc
sub
sahf
and
cmp
jbe
xchg
cwtl
lods
xor
int3
xor
push
and
mov
out
aaa
std
and
hlt
pushl
mov
cmp
sarl
xorb
inc
push
inc
test
fildll
push
push
icebp
sub
out
jne
popf
in
test
inc
rcll
pusha
and
call
jg
lea
int3
imul
into
jecxz
idivb
loopne
mov
imul
mov
out
xchg
push
lock
std
ljmp
hlt
inc
push
pop
stc
cmpsl
popl
mov
jae
cwtl
imul
mov
lcall
movsb
add
icebp
std
mov
shll
xchg
ja
lcall
jno
pop
xchg
pop
jnp
cmp
sbb
pop
mov
lret
mov
and
push
dec
sahf
in
stos
jns
xchg
pop
add
sub
in
rdpmc
jbe
pushf
xor
mov
rcll
mov
lcall
and
roll
xor
ficoms
inc
xchg
jne
jbe
call
fucomi
xor
and
xor
mov
and
scas
cmpl
sbb
mov
orb
popa
scas
imul
xor
call
mov
shlb
and
push
test
mov
pushl
scas
das
sub
xchg
push
pushl
std
call
imul
out
mov
push
xchg
fisubrs
adc
icebp
add
aam
inc
inc
jecxz
dec
subl
mov
aam
mov
xor
dec
lods
cld
sar
aaa
sar
fwait
lods
leave
lcall
out
xchg
cmp
hlt
jg
xor
xchg
lcall
mov
mov
imulb
xchg
sbb
loope
subb
jb
cwtl
dec
inc
ljmp
mov
mov
xchg
xchg
adc
mov
aad
hlt
pop
xchg
jns
push
dec
fdivrp
fiaddl
dec
repz
mov
bound
ret
mov
add
js
mov
push
mov
ljmp
jl
jb
adc
bound
adc
sbb
dec
stc
sar
imul
adc
mov
fs
adc
xor
adc
xchg
jmp
xor
shll
mov
iret
cmpsl
pop
in
loopne
push
cmp
sub
jns
dec
dec
cmp
jnp
or
cmpsb
sub
mov
shlb
je
cmp
pop
pop
pop
mov
jmp
add
push
cltd
pop
sbb
xchg
sbb
xor
or
aam
lods
push
push
rol
incl
jmp
fst
les
and
add
jl
mov
push
jge
xor
dec
sub
incl
cmc
pop
pushf
fwait
sub
jae
imul
popa
inc
add
fnstenv
sbb
outsb
sub
mov
dec
std
mov
mov
xchg
repnz
shll
scas
mov
and
pushl
das
incb
sbb
push
push
add
xchg
sub
push
xchg
jg
push
imulb
pusha
test
call
shrb
xchg
and
push
fnsave
sub
xorl
mov
ljmp
xchg
lret
shrl
inc
movsl
cmpsb
jecxz
sahf
dec
aam
xchg
mov
call
lods
inc
mov
fs
inc
stos
add
orb
sbb
pop
push
sbbl
std
dec
mov
add
dec
js
mov
mov
popf
xor
pop
xor
mov
push
lcall
fs
mov
movsb
test
fbld
push
xchg
mov
sbb
cmp
rcrb
test
xor
andb
lea
das
rcl
and
mov
jmp
mov
fisttpl
and
xorb
insl
scas
movzbl
sbb
imul
mov
lret
stos
call
mov
lret
xchg
mov
imul
and
xor
jg
jle
mov
dec
in
dec
test
cltd
push
lods
sti
jle
push
jnp
clc
xor
add
adc
movsl
cli
ljmp
rcl
in
inc
push
and
push
inc
fisttps
inc
xchg
lds
dec
sahf
mov
pop
mov
push
aam
out
fisubrl
shrl
call
mov
js
mov
mov
repnz
mov
subb
aad
insb
pusha
sbb
xchg
repz
aaa
in
jge
repnz
lock
and
dec
pop
call
loopne
cmpsb
fcomp
push
mov
inc
cld
leave
imul
jp
cmp
fsubrp
dec
fwait
lahf
add
lcall
push
push
jl
data16
dec
popa
xor
pop
cmp
and
and
jp
or
movsb
cmp
and
xchg
and
and
les
cwtl
push
mov
roll
call
add
adc
xorl
das
add
xchg
mov
int3
mov
decl
inc
data16
inc
rorl
mov
cld
add
sbb
repnz
xchg
xor
arpl
popf
fsts
cmp
data16
jg
fs
je
leave
xor
inc
pop
mov
fwait
hlt
inc
jg
or
sarl
add
or
mov
jl
mov
sub
xor
shll
mov
scas
mov
xlat
pop
incb
mov
mov
lret
out
jbe
ffree
jns
hlt
cmp
dec
mov
sahf
jecxz
add
xchg
xor
jl
pop
push
cmp
outsb
jmp
jp
and
or
jle
sub
fcomp
mov
ljmp
jl
div
loope
fs
pusha
inc
mov
aad
call
jns
movsl
daa
pop
jbe
mov
and
pop
push
add
pop
inc
call
out
adc
aaa
adc
sbb
loope
or
push
push
jge
dec
pushl
sbb
aad
fldl
fcom
xchg
mov
sahf
jge
sahf
js
mov
and
xchg
lea
ret
jle
cmp
ljmp
hlt
pop
pop
sahf
add
xchg
sub
aad
dec
mov
dec
cltd
adc
aaa
in
cmp
test
or
xchg
call
aam
addl
shl
aam
push
xchg
hlt
xchg
in
fs
jns
outsl
incl
js
xor
push
xchg
lcall
rcll
push
mov
or
aad
inc
adc
fdivs
nop
sub
add
sbb
jbe
mov
mov
je
xchg
pop
cltd
data16
imul
ljmp
xchg
movsb
test
movsl
outsb
mov
shr
call
sbb
mov
jmp
mov
ss
insl
ret
sbb
sbb
push
adc
pop
push
xchg
push
cmp
inc
fldenv
mov
lock
and
jnp
mov
loop
pop
sbb
cmp
das
mov
pushl
outsl
xor
repz
jbe
and
jle
inc
xor
pop
push
dec
das
xchg
sbb
inc
mov
cmp
mov
pop
jl
pop
mov
mov
js
fwait
sar
push
or
sbb
mov
jbe
cmpsl
pushf
push
mov
test
pop
sub
fs
and
xchg
mov
push
scas
cli
inc
mov
shl
mov
movsl
xchg
fwait
jnp
mov
ss
xor
int
ret
fs
insb
xchg
dec
jnp
aad
push
xor
sub
lds
das
shlb
in
jne
sbb
mov
adc
dec
xchg
adc
ret
sbb
or
cmpsl
push
cltd
push
or
scas
insb
cmp
scas
lods
aad
fistpl
mov
mov
add
pop
pop
add
cmp
insb
push
cwtl
dec
push
jmp
dec
or
mov
or
pop
ljmp
mov
mov
push
sbb
out
mov
clc
ja
icebp
xorb
jp
lret
and
mov
mov
pushl
repz
dec
outsl
jnp
jle
xor
int
xchg
decb
lret
std
adc
and
jge
data16
add
dec
nop
xor
dec
rcr
fsubs
lcall
imul
mov
loop
fmul
mov
shll
gs
adc
decl
jmp
add
mov
jp
or
adc
sub
call
lret
mov
sbb
xor
inc
in
sar
filds
mov
or
adc
jp
loope
xlat
xchg
adc
call
ret
cmp
movsb
adc
xchg
push
sbb
sub
mov
sti
sbb
ds
mov
leave
f2xm1
mov
pop
jp
sbb
enter
add
jge
jae
add
sub
in
jmp
add
jl
and
nop
or
pop
mov
sub
in
movsb
repz
ret
cmp
call
std
jno
daa
xchg
sub
add
jge
sub
in
lret
add
int3
movsb
and
test
mov
shll
les
je
mov
sti
dec
decl
mov
and
js
dec
or
push
push
xchg
lods
insl
dec
inc
int3
sbb
mov
cmp
pusha
and
jl
imul
push
add
test
mov
fdivs
push
lret
jg
lcall
xchg
lret
or
sbb
inc
dec
inc
inc
das
sar
push
add
jb
mov
test
push
jl
add
cmc
cmp
subl
ljmp
jb
xchg
test
ljmp
rorb
dec
inc
dec
push
int
out
insl
dec
dec
sbb
adc
lcall
adc
and
xor
adcl
shrb
pop
inc
dec
fs
std
call
sub
mov
insb
xchg
push
mov
xchg
das
lret
lods
inc
aaa
or
sbb
mov
test
lcall
add
push
mov
popf
xor
push
mov
fucomp
rcrb
mov
dec
mov
stc
push
push
aam
ret
jae
jl
push
dec
andb
fsts
stos
and
or
adcb
push
lcall
mov
jne
into
inc
aam
xor
adc
fmul
mov
and
cltd
inc
inc
cltd
and
dec
mov
sub
call
push
ss
xor
mov
std
jg
enter
adc
jbe
cli
xor
sub
ljmp
and
imul
insl
inc
sbb
inc
push
mov
enter
mov
ror
jmp
sub
into
stos
mov
lods
aaa
icebp
mov
sti
cmp
in
inc
or
imul
lcall
aad
dec
push
ds
jp
sbbl
outsl
outsl
andb
adc
icebp
jmp
mov
fldcw
in
and
sti
flds
mov
adc
lcall
xchg
add
bound
mov
push
pop
xchg
sub
sub
cld
xchg
pop
scas
test
xor
jmp
inc
rcr
movsl
data16
mov
iret
data16
push
cmp
insl
fcom
call
jb
pop
dec
repnz
iret
inc
leave
or
or
or
lret
inc
xchg
in
aas
incl
testl
push
fstps
sbb
int
es
xchg
subl
rorl
mov
push
cmp
incl
clc
or
mov
push
inc
cmp
outsl
movsl
incl
adc
dec
psraw
out
jg
pusha
cmp
decl
cs
jno
loopne
sahf
inc
pop
jnp
out
sub
or
arpl
lcall
dec
inc
sub
xor
and
jg
mov
or
mov
aad
push
xchg
sbb
shlb
lods
cmc
inc
mov
in
movsb
shl
sbb
out
mov
pushl
loop
gs
mov
sti
ficompl
daa
daa
fnstenv
adc
add
sbb
mul
daa
lods
call
xchg
lcall
inc
gs
dec
or
test
sar
insl
lock
imul
mov
lret
jo
aam
and
mov
jg
jmp
or
shlb
shrl
aas
mov
lods
mov
mov
adc
stos
or
fcoml
outsl
cmpsl
and
les
push
xor
cmc
fsubrl
insb
mov
lahf
int3
push
dec
sarb
push
lcall
jg
sub
fisubl
xchg
fiadds
lds
stos
push
pop
data16
js
lret
outsb
sahf
mov
scas
das
or
fsts
imul
clc
push
decl
lcall
cmp
icebp
xchg
jns
xor
mov
and
and
cmp
add
cli
enter
dec
stos
push
mov
jns
imul
sbb
aam
sbbb
shlb
into
or
cmp
out
mov
sub
xor
lahf
cmp
add
add
sbb
add
test
subl
cld
lcall
push
out
movsb
inc
int
insb
mov
cld
push
aaa
cmp
or
ljmp
lds
call
inc
stos
fistl
inc
xor
inc
cmp
pop
ljmp
aaa
ss
out
sub
sub
decl
push
shrl
jnp
xchg
pop
ret
roll
mov
pushl
cmp
and
cmc
ret
add
clc
pop
jo
imul
sbb
call
sbb
and
andl
shll
push
add
xor
push
lods
and
clc
cs
call
imul
orl
das
call
jp
mov
fnstenv
xchg
jmp
jg
inc
adc
pop
test
jg
pushf
inc
xor
adc
and
mov
stc
inc
dec
jecxz
ljmp
xchg
add
jne
addl
xchg
add
loope
icebp
jg
lods
add
imul
push
inc
imul
hlt
incl
addb
aaa
sub
icebp
call
test
inc
pop
or
jge
xlat
sub
je
fnsave
daa
pop
xchg
xchg
je
xor
cmp
add
push
movsl
mov
hlt
in
xor
mov
mov
jbe
call
loopne
pop
in
push
inc
shlb
cmp
push
push
xchg
sub
mov
loope
or
divl
mov
push
cmp
and
out
clc
sub
cmc
xor
and
xchg
xor
dec
repz
push
out
push
jmp
cmp
dec
test
fmull
ljmp
sarb
out
pop
pop
daa
aaa
ret
and
adc
movsb
push
jno
call
ljmp
jne
adc
push
pushf
dec
push
and
decl
cltd
sbbl
nop
rolb
pop
xor
inc
sub
jb
cmpb
inc
sbb
adc
pop
vhsubpd
mov
xorb
mov
inc
test
lea
push
push
dec
push
fdiv
sbb
imul
mov
sbb
movsb
sbb
adc
mov
movsl
and
mov
mov
pushl
push
mov
dec
sub
iret
enter
in
outsl
sbb
xlat
pop
and
in
lock
push
cmpb
or
or
js
out
inc
ret
jg
pushl
sub
jns
mov
add
bound
lea
mov
outsl
mov
adc
adcb
pop
xchg
in
inc
xor
xchg
jno
movsl
dec
add
xor
sar
pushl
pop
stc
dec
or
in
adc
es
loope
xchg
and
sub
lcall
cmc
and
addr16
adc
xchg
fs
dec
jg
nop
movsb
sbb
pushl
cld
add
adc
in
add
push
jb
cmp
xorl
sbb
cmp
mov
pop
inc
jg
sub
movsl
addr16
xchg
sbb
cltd
inc
mov
xchg
push
inc
jb
sbb
dec
adc
xchg
sti
imul
jbe
inc
jg
arpl
push
imul
mov
dec
fyl2x
mov
ss
jns
incl
xor
mov
movsl
addl
rcrl
mov
adc
out
jae
cmc
call
incb
adc
mov
bnd
mov
shll
clc
cltd
sub
xor
mov
andb
pop
adc
call
lods
sub
mov
sbb
popf
ss
cmp
dec
loope
cmp
push
push
xor
inc
ret
xchg
adc
js
in
in
xchg
push
repnz
or
sub
add
outsl
cli
fisttps
addl
add
loopne
push
and
pop
dec
ljmp
push
aam
xor
fdivr
lcall
cmp
cmp
cmpsl
adc
sub
test
xor
xlat
add
cmp
stos
push
call
push
mov
lahf
scas
add
xor
mov
or
push
repz
inc
mov
out
push
jg
stc
add
rcrl
inc
xabort
movsb
repnz
lcall
lods
mov
push
dec
inc
cltd
lea
lock
mov
add
das
in
cmp
arpl
cwtl
and
push
jecxz
xchg
cmp
jmp
xchg
mov
pop
jno
inc
inc
nop
pusha
nop
dec
lcall
popa
or
mov
add
mov
push
xchg
push
inc
xor
adc
adc
fdiv
xchg
sbb
xchg
adc
arpl
sub
inc
jge
pop
cmc
mov
jo
popf
inc
aam
xchg
popf
jnp
pop
lcall
pop
std
lcall
inc
pop
add
leave
ds
xchg
outsl
sub
sti
clc
divl
adc
jg
addr16
jg
add
sub
ljmp
adc
jne
loope
lcall
jecxz
into
adc
aaa
mov
pop
inc
loope
jbe
sub
mov
jne
xor
incl
add
pop
call
pusha
add
movsb
loope
aaa
xor
rolb
incl
xor
lret
ret
mov
jb
addr16
js
hlt
mov
xchg
orl
push
inc
mov
jbe
push
inc
sub
rcrl
xchg
add
and
cli
scas
push
and
lods
fldenv
sub
dec
jo
sbb
jle
xchg
jo
jo
in
stos
decl
dec
loop
movsb
shlb
pop
xor
fcomip
push
pop
je
fdivrs
call
jo
movsl
push
stos
push
test
add
decl
movsb
pop
cmp
cld
push
and
rcll
add
push
cld
pushl
repz
pop
jbe
sti
or
jne
fnstcw
mov
or
cmp
push
pop
push
out
mov
or
insb
cli
xchg
decl
ret
jmp
pop
jbe
fisubrl
stos
fcomp
cmpb
jns
push
std
ljmp
dec
lods
std
push
mov
xor
xchg
fsub
ljmp
addl
cwtl
xchg
mov
bound
mov
fcompl
out
jb
adc
fs
test
subb
test
aam
adc
push
mov
fnstcw
jmp
subb
fcomip
dec
jl
mov
dec
push
sbb
out
adc
push
sar
ljmp
and
jge
ljmp
movsl
insl
add
fistpl
dec
inc
lods
or
push
adc
dec
or
adc
repnz
mov
mov
push
cmp
inc
dec
popa
xlat
insb
jg
adc
xchg
test
mov
cld
incl
cwtl
pop
sbb
sbb
pop
pop
push
in
cmp
add
push
lods
cmp
push
scas
hlt
jg
and
sbb
shll
jp
dec
add
sub
fwait
or
mov
incl
mov
mov
or
push
jmp
mov
mov
ljmp
int3
decl
icebp
stos
lods
jo
push
ja
adc
or
popa
push
incl
hlt
xorl
and
xchg
sub
adc
pop
ljmp
add
cld
int3
and
adc
jb
adc
sub
mov
icebp
sbb
adc
mov
cmp
adc
mov
cwtl
mov
aaa
or
and
pushf
sub
adc
outsl
xor
dec
sbb
sbb
scas
and
adc
mov
mov
cmp
test
imul
lods
jb
push
add
scas
mov
inc
lahf
test
xchg
cmp
clc
lcall
fdivrl
mov
push
and
mov
and
xor
cmc
out
xor
jl
cltd
mov
sub
shr
ds
cmp
inc
incl
or
xor
jge
ret
xchg
xchg
sbb
mov
mov
or
jp
and
mov
call
pop
or
cmc
ljmp
repz
fs
stos
cvtps2pd
mov
call
fcomps
sub
mov
aad
data16
or
mov
ljmp
lcall
pop
pop
dec
loop
into
imul
pop
je
insl
sbb
mov
cmp
sbb
ja
mov
push
andb
fadds
mov
fwait
ljmp
jl
out
mov
sbb
mov
adc
sbb
pop
mov
lret
js
sbb
add
pop
mov
lcall
sbb
mov
sti
popa
or
push
pop
sub
scas
jo
repz
std
ljmp
inc
sub
enter
inc
imul
mov
mov
ljmp
jmp
arpl
ret
shrb
pop
sbb
ret
notb
cmp
lods
jbe
xchg
stos
shlb
inc
mov
stos
lret
sbb
sub
in
cs
in
cmp
push
in
cmp
mov
call
adc
mov
movsb
xor
push
push
stos
sub
jecxz
pop
lret
push
cmc
jmp
fsubp
outsb
adc
cwtl
daa
push
mov
cld
loopne
cmp
push
loopne
pop
icebp
pop
hlt
and
push
inc
out
sbb
push
iret
pop
add
ljmp
fnstcw
ss
push
cli
inc
int
xchg
push
or
idivl
mov
movsb
inc
or
shr
in
fisubl
test
push
add
pop
jl
sub
pushf
lret
data16
mov
push
inc
jae
cmpsl
lret
push
test
jns
inc
jns
push
push
cmp
stos
je
mov
call
jmp
mov
fmul
xor
std
decl
fwait
insb
pop
ds
fcomip
loope
xlat
enter
rcll
je
rcrl
mov
push
bound
jecxz
mov
rcl
mov
mov
scas
add
ds
cmpsb
push
cmp
loop
push
add
pusha
push
mov
in
adc
jg
adc
sbb
or
fsubr
push
add
mov
add
pop
ror
cmp
ret
or
push
sbb
mov
adc
xchg
test
or
mov
xor
js
fldenv
sbb
lock
gs
hlt
pop
xchg
aaa
jl
call
adc
shlb
addb
cmp
push
mov
cs
movsl
addr16
je
std
sbbb
sarl
lds
cmpsl
mov
test
adc
fdivr
xchg
mov
pop
mov
lcall
daa
sbb
cmp
ss
sti
xor
push
and
insb
mov
pop
lcall
dec
xor
aad
incl
loop
das
jmp
xchg
cs
and
mov
and
push
rcrl
or
xchg
sbb
adc
xlat
cmp
into
fisubrs
in
xchg
sub
mov
cmp
xor
fs
out
cli
fistps
mov
add
jecxz
jo
jl
out
fnstcw
sub
sub
mov
pushl
cmpsl
popf
sub
inc
xor
sbb
sbb
scas
cmpsb
pop
dec
cli
mov
mov
jecxz
add
inc
scas
push
outsb
js
jecxz
incl
sub
sbb
cltd
sub
mov
and
sub
pop
cmc
mov
lods
dec
cmp
fldpi
cli
sbb
and
push
add
call
jmp
and
mov
popf
inc
jge
inc
mov
lahf
jne
sub
out
imul
call
cmc
jmp
jnp
mov
dec
aam
sbb
inc
dec
popa
inc
cld
pop
and
dec
aas
xchg
mov
lret
adc
repz
sar
jmp
jp
dec
dec
add
popa
outsl
stc
imul
and
xor
dec
mov
jae
cmp
mov
pusha
sbb
scas
or
fsub
xchg
ret
pop
jmp
mov
in
add
cld
push
xchg
inc
cmp
sbb
push
mov
loope
stos
and
sahf
xor
pop
mov
push
lea
lcall
pop
adc
ret
cs
in
mov
xchg
dec
xchg
add
mov
xorl
pop
push
inc
test
loopne
orl
push
dec
push
xchg
sbb
and
mov
cmpl
enter
cmpsl
lea
ljmp
mov
out
dec
mov
mov
test
jne
cs
cwtl
aad
push
xchg
popa
add
mov
mov
xchg
incl
pop
mov
stos
pop
pop
js
sbb
ljmp
outsb
sbb
shrl
ljmp
mov
xor
lret
popf
xchg
sbb
mov
int
sbb
mov
arpl
mov
xchg
rcl
mov
cmp
in
or
decl
arpl
in
pop
mov
shll
or
scas
mov
ljmp
dec
outsl
and
add
imul
mov
mov
mov
mov
mov
add
lods
loopne
je
adc
inc
clc
inc
xchg
out
mov
clc
push
ret
adc
arpl
mov
bnd
push
ret
in
mov
cld
or
lcall
enter
sbb
and
adc
dec
and
movsl
ljmp
repnz
test
push
lods
and
andb
jo
test
mov
ljmp
jmp
cmp
xchg
insl
xor
or
push
xor
sub
dec
jmp
nop
nop
imul
xchg
sub
call
pushl
xor
int
test
cmovbe
inc
loop
add
sub
ljmp
hlt
int
fldcw
push
addr16
sbb
add
pop
xchg
adc
lcall
mov
call
lcall
leave
lret
rol
notb
lods
sub
ffree
pop
push
xor
pop
mov
out
rorb
inc
or
xor
push
outsl
jbe
xor
rcr
lret
mov
mov
or
mov
pop
jmp
in
push
icebp
mov
pop
xchg
insl
test
cmp
push
mov
push
inc
or
lock
cmp
ror
dec
data16
incl
mov
lret
fs
fwait
push
dec
cmpsl
cmp
std
fisubrs
hlt
es
adc
xor
ljmp
sub
dec
xor
int
mov
in
imul
shll
xor
ret
mov
cmp
out
shlb
pushf
jp
inc
mov
mov
sub
mov
jns
fisubl
roll
or
cmc
loope
sarl
lcall
arpl
jns
pop
pop
rep
mov
or
outsb
push
loop
loop
jg
push
mov
pusha
add
inc
in
push
xchg
das
fldt
cli
mov
push
push
push
mov
jbe
call
sbb
mov
jno
xchg
sarl
adc
cmc
shll
iret
jecxz
adc
jnp
mov
shlb
repz
fcomp
pop
daa
sahf
and
cmp
js
out
sub
adc
inc
xor
inc
decl
sbb
mov
jecxz
add
cli
ljmp
lds
les
mov
jg
jg
inc
jl
leave
xchg
cli
jle
sub
lea
pushl
xor
sub
and
dec
rclb
adc
xchg
vpsrlq
adc
lock
xchg
mov
in
dec
pop
or
xchg
adc
xchg
jg
addb
repz
fisttpll
cmp
mov
sub
adc
adc
push
decl
dec
push
mov
in
test
xchg
or
pop
fcos
lcall
incl
push
scas
test
stos
in
daa
jbe
sbb
add
cmpsb
ss
test
rclb
mov
mov
jmp
push
mov
mov
push
mov
mov
ljmp
ljmp
lods
loop
iret
nop
popf
or
mov
dec
jp
dec
fucomp
rol
and
lods
sub
aam
ljmp
nop
repz
ja
fs
int
test
or
call
pop
test
and
inc
test
or
nop
fs
or
mov
lock
ljmp
and
pop
xor
add
jne
popa
mov
movsl
and
xchg
insb
cld
lahf
stos
push
and
cbtw
int3
and
jne
add
mov
lcall
adc
or
sbbl
jb
sbb
mov
es
add
fs
mov
cmpl
stos
and
xor
loope
jo
mov
int3
int
xchg
sahf
outsl
orb
lcall
ficoml
iret
fsubrl
cld
mov
push
add
xchg
push
pop
arpl
vpunpckhdq
and
outsl
xchg
test
mov
movsb
movsl
repnz
lock
cld
mov
pop
repnz
mov
pop
adc
mov
or
jmp
mov
or
pop
sbb
mov
dec
sbb
mov
dec
jl
mov
nop
and
sub
pop
mov
cmp
in
nop
idivl
leave
insl
pop
xlat
sub
clc
lock
pop
jne
cld
shlb
xor
xlat
push
sbb
lcall
xchg
aad
cltd
mov
mov
es
ret
decl
mov
or
sbb
lret
mov
mov
cmpl
adc
mov
jle
dec
add
jo
xchg
mov
lds
sarb
movsb
rclb
push
ss
subb
test
shrb
mov
es
xor
add
dec
shl
cmp
inc
fs
pushl
es
or
and
sbb
cmpb
cmpsb
cwtl
sarb
ss
aaa
cmp
xchg
popa
jecxz
call
mov
test
adc
mov
sbb
mov
repnz
inc
or
cmp
pop
jmp
imul
fists
int
movsb
loope
jne
dec
mov
mov
movsb
clc
push
lcall
and
mov
dec
lret
test
mov
repnz
shlb
mov
rcll
lds
mov
lds
mov
jmp
add
nop
inc
pusha
incl
enter
notb
push
xor
pushl
jle
inc
push
ja
mov
pushf
mov
dec
test
je
adc
inc
cmp
filds
mov
in
dec
jo
pusha
add
jmp
dec
mov
lds
adc
fwait
adc
lock
daa
stc
test
imul
repz
pushf
mov
les
and
pushf
sbb
mov
sub
repnz
call
xchg
int3
add
aas
push
mov
daa
cltd
arpl
ljmp
cmp
fmull
jbe
lret
adc
push
jecxz
adc
loope
jp
sub
pop
test
jae
xor
sbb
cmpsb
pop
test
adc
outsb
stos
call
sub
pop
mov
sbb
or
push
and
or
icebp
clc
xor
xchg
xchg
push
fisttpll
pop
hlt
lcall
or
inc
push
inc
cli
cmpsb
sub
aam
mov
ds
repz
xlat
adc
clc
and
test
cmp
push
rorl
add
xchg
rol
sar
or
and
mov
jae
push
rclb
mov
imul
sbb
cli
imul
inc
or
rolb
adc
push
out
int3
mov
xchg
adc
aas
jb
jmp
adc
add
hlt
in
test
jne
incl
or
or
jmp
jg
movsb
jns
test
mov
shll
mov
jg
shll
mov
mov
lcall
sahf
jnp
or
call
jns
jne
insb
mov
fsubrl
ficomps
mov
pop
aas
sub
cmp
lcall
and
xchg
lcall
xchg
pop
stos
insb
or
adc
sbb
scas
ljmp
mov
add
sbb
xchg
popf
stos
mov
imul
decl
sbb
outsl
add
mov
sub
call
orl
jg
push
jno
loopne
jg
xchg
sbbl
repnz
sub
dec
sbb
ud0
lahf
out
mov
decl
and
dec
subl
cmp
enter
mov
js
fdivl
loop
xchg
mov
dec
or
jmp
outsb
dec
mov
push
pushf
inc
fstps
xchg
scas
dec
inc
mov
rcll
mov
pop
lock
pushf
pop
push
mov
push
push
push
sbb
mov
popa
sub
xor
or
cmp
adc
out
sbb
inc
adc
mov
out
scas
leave
enter
mov
add
mov
and
pop
fiaddl
jmp
out
push
jns
movsl
dec
xor
sub
cmp
cltd
nop
popf
cmp
mov
call
icebp
xchg
xchg
repnz
rcll
sbb
cmpb
ret
and
mov
xorb
ljmp
fwait
xchg
stc
adc
mov
mov
out
dec
pop
dec
orl
mov
mov
in
call
mov
fsubs
popf
mov
jle
ds
dec
xchg
rorb
jecxz
xor
ret
or
call
xor
sbb
mov
sbb
adcb
or
cmp
or
stos
sub
inc
scas
imul
imul
test
data16
cld
push
or
test
js
sub
mov
jno
ret
sub
ljmp
decb
xor
ljmp
imul
or
xchg
in
mov
push
cld
rcr
sub
xorb
xor
jno
fs
loop
jg
cmp
lcall
mov
mov
lret
jo
test
test
or
xchg
mov
sbb
cltd
jle
filds
mov
pop
inc
lods
cmp
loope
cmpsb
cmp
xchg
mov
xor
std
call
test
enter
adc
cmpl
int
xor
lcall
rcll
jmp
and
nop
xchg
sub
loope
cmp
mov
mov
call
mov
orl
xor
lock
sub
push
cmp
mov
cmp
push
aaa
adc
pop
sbb
or
jg
decl
call
mov
pop
pop
xorb
movsb
nop
cli
mov
xchg
adc
lahf
test
pop
xor
push
jmp
lcall
push
or
mov
jns
mov
aaa
inc
inc
add
xchg
ljmp
mov
es
pop
jl
stos
xor
stos
and
lcall
push
cmp
rcrb
mov
orl
nop
mov
decb
out
ds
cld
jmp
xchg
adc
inc
icebp
xchg
add
or
orb
sbb
fadd
call
clc
or
xor
sbb
or
ja
hlt
cmp
cmp
aaa
inc
cli
decl
sbb
aam
pushl
mov
inc
sub
inc
push
sbb
div
movsb
call
loopne
int3
adc
mov
xor
je
xchg
fimull
bound
in
mov
xor
out
mov
mov
push
adc
dec
push
std
jmp
sub
push
xchg
mov
xchg
adc
repnz
fwait
jl
dec
add
or
mov
movsl
and
inc
test
and
dec
pop
repnz
incl
ljmp
xchg
mov
and
inc
pop
xorl
jmp
mov
hlt
popa
bswap
mov
jmp
iret
cli
add
xor
ds
pop
xor
fildll
pusha
subl
clc
out
js
mov
lods
lret
adc
enter
decl
rorb
ljmp
leave
cmp
aas
push
pop
aam
test
sub
clc
cmp
out
or
std
pop
loopne
mov
dec
cmc
arpl
sub
fdivrs
fcomps
stos
cltd
push
xor
adc
or
push
inc
adc
dec
cmpsl
and
mov
cli
ljmp
push
popa
or
shrl
decl
lock
push
mov
bound
pushf
cmpsb
xor
test
add
lcall
mov
sbb
sub
xchg
adc
fiaddl
pop
push
cmp
mov
call
mov
xlat
xchg
push
mull
adc
in
stos
add
mov
clc
cmp
fstl
jmp
daa
fs
mov
sub
xor
std
sbb
mov
cmp
popf
inc
sbb
push
sbb
pushl
inc
mov
xor
aaa
push
out
add
inc
lcall
jne
add
push
stos
ret
mov
popf
mov
mov
sub
add
call
or
sub
movsb
mov
add
xchg
lods
xor
call
std
pushl
cmpsl
movsb
fmuls
stos
sbb
lret
stos
mov
sub
cmp
jg
cmc
and
lret
stos
mov
popf
jo
nop
dec
sub
roll
mov
xchg
pop
mov
xchg
cli
aad
in
loopne
das
push
mov
ljmp
scas
pusha
sbb
pop
dec
sbb
sub
or
lret
mov
jnp
ret
ret
and
cmp
imul
cmc
das
push
stc
stos
sbbb
mov
pop
sbb
pop
xchg
adc
dec
or
roll
lock
mov
inc
lret
repz
cli
ljmp
mov
jl
push
sarb
mov
add
cwtl
cmp
push
cli
pop
dec
mov
add
sti
rcrl
pop
cmp
movb
pop
add
jne
pop
fmuls
sbb
push
mov
call
fcompl
out
fs
clc
rolb
ss
xor
inc
jns
sub
cmp
lcall
sbb
push
xchg
cmp
fdivl
jp
movsb
stc
pop
outsl
push
cmp
mov
sarl
nop
hlt
decl
inc
mov
subb
mov
lahf
mov
shrb
pop
aad
inc
ljmp
daa
sarb
sbb
jg
clc
fcomip
sub
mov
hlt
mov
incl
movb
adc
ret
rcl
fdivs
pop
fs
rol
push
shl
sub
mov
movsb
movsb
sbb
dec
shll
mov
or
ljmp
fistl
test
cwtl
inc
push
stos
mov
jbe
mov
sub
test
incl
mov
les
pop
icebp
lret
mov
sub
jl
jo
pushf
loopne
pop
sub
icebp
loop
aaa
mov
rolb
push
and
scas
mov
jo
in
aad
ja
ljmp
lds
lahf
lcall
sub
lods
or
cmp
mov
cmp
lcall
sbb
inc
or
mov
stc
xchg
adc
inc
in
mov
mov
mov
inc
sub
mov
mov
ret
add
pop
push
loopne
pop
sbb
and
mov
push
pop
xor
xchg
xor
insl
mov
mov
sbb
incl
int
cltd
scas
and
adc
sbb
sub
aaa
xchg
cmp
std
movsb
int3
enter
mov
cmp
inc
insb
sbb
mov
jge
sbb
fs
jp
jg
xchg
xor
and
jg
adc
aaa
add
mov
jl
scas
repnz
jecxz
dec
adc
xchg
sbb
movsb
inc
or
fs
nop
shr
cmp
punpcklwd
or
ljmp
js
sbbl
sub
or
repnz
jnp
loopne
dec
xchg
push
xor
es
xchg
lods
pushl
fiadds
cmp
lock
ljmp
rclb
mov
cli
inc
pop
mov
push
lret
dec
loopne
mov
incl
cltd
test
sbb
ficompl
adc
enter
test
xchg
callw
dec
xor
mov
dec
lods
pop
loope
mov
call
sbb
push
repz
stc
enter
loop
mov
lock
call
xor
mov
cmp
arpl
and
add
pop
xor
call
pop
mov
jne
jecxz
sub
ljmp
push
lcall
sbb
pop
test
stc
shlb
push
cli
xor
xorb
or
std
incl
and
jmp
mov
cmp
fiadds
stos
stos
cmp
cmp
mov
mov
and
push
imul
cmpsb
and
incl
gs
nop
cmpsl
adc
mov
iret
mov
or
imul
mov
xor
cltd
jns
mov
sub
fdivrs
loop
inc
or
sbb
mov
xchg
aam
scas
pop
in
xchg
mov
bnd
cli
pop
xorb
or
pop
iret
lret
adc
and
and
push
rcll
jae
push
test
fcomip
and
jnp
push
dec
sbb
int3
push
lods
push
cli
push
ljmp
addb
inc
mov
aad
or
mov
and
decl
pushf
jb
popw
push
ss
and
and
sbb
sbbl
cld
pushl
pop
jb
lret
mov
mov
inc
xchg
mov
pop
lcall
adc
mov
jns
cmp
jmp
pop
sub
ljmp
mov
mov
sahf
push
pop
sub
jmp
jno
jmp
jecxz
fmull
pushl
jo
adc
push
dec
out
out
mov
adc
fwait
and
sahf
pushw
pusha
inc
mov
dec
jmp
add
pushl
je
pop
cld
dec
test
loope
and
mov
xor
dec
dec
stos
ret
ret
mov
lock
arpl
call
iret
cmp
les
arpl
adc
and
xlat
loopne
dec
jae
mov
adc
aaa
loop
cmpsl
jno
mov
pop
daa
dec
pop
or
pusha
jg
push
out
iret
sbb
bound
push
xchg
sbbl
sbb
stc
sub
jge
cmp
stos
notl
loopne
pushl
sbb
sub
repz
pop
pop
lds
scas
mov
das
jns
cld
incl
push
lods
or
xchg
repz
lds
xchg
pop
stc
xchg
adc
cmp
aaa
loop
xchg
inc
jl
les
push
and
sub
subb
mov
cs
insb
mov
dec
dec
mov
xchg
inc
xor
ss
mov
out
mov
mov
xchg
or
push
aaa
xor
or
push
xlat
aad
shr
js
lret
sbb
lcall
pop
pop
les
sarl
pop
rolb
std
mov
push
push
insl
cmp
jb
sub
mov
call
and
rcl
imul
je
pop
clc
arpl
sbb
bound
push
mov
pop
fidivs
lret
xchg
adc
test
shrl
cs
dec
pop
mov
test
js
decl
ljmp
adc
cld
mov
pop
or
sub
xchg
or
cltd
dec
pop
xor
sbb
or
ret
into
dec
dec
ja
call
fisttpl
popf
and
cs
lcall
fistl
addb
pop
in
mov
aam
mov
jmp
sbb
sbb
enter
jo
inc
xchg
cmpsb
push
insb
dec
mov
mov
cmp
ja
shlb
lret
cli
lahf
or
mov
std
xchg
pop
pushl
andl
jb
inc
mov
ret
push
sbb
loop
cmp
pop
jg
test
lea
sub
fimull
and
call
jp
pop
hlt
fsub
aad
xor
dec
fs
addr16
pop
js
lods
cmp
push
and
inc
dec
je
icebp
movsl
lret
pop
cmp
dec
mov
sub
lea
sar
repnz
aad
xlat
lahf
dec
jnp
stos
inc
mov
andb
scas
outsb
scas
pushf
sbb
xchg
es
incl
lcall
add
pop
clc
ljmp
xor
lret
in
jno
jns
xchg
cld
pushl
in
sbb
mov
mov
inc
inc
cmp
jl
popf
js
xchg
mov
mov
cmp
inc
sbb
fnstsw
outsb
iret
mov
cld
jp
mov
inc
cmpsb
mov
loop
andl
sbb
adc
addr16
sub
inc
and
mov
add
hlt
mov
cmp
pop
mov
dec
outsb
fistpll
std
inc
pop
pop
pushl
adc
pop
push
mov
push
push
push
inc
cmpsb
lock
ljmp
mov
js
add
xchg
fstpl
adc
or
and
mov
add
lcall
and
in
xchg
popa
inc
lods
fs
inc
push
pop
mov
call
dec
cmp
es
rcrb
sbb
cmpl
cwtl
dec
scas
call
sbb
outsb
pop
imul
push
pop
jo
cmp
dec
and
sub
mov
les
aas
or
push
and
fbld
call
mov
sbb
mov
movsl
adc
pop
adc
xchg
pushl
std
scas
pop
mov
mov
xchg
inc
xchg
sbb
fcomip
inc
and
inc
sahf
ljmp
push
add
mov
jno
lcall
inc
imul
push
pop
rolb
add
aas
mov
cld
mov
ss
push
mov
pop
sbb
fiaddl
insl
je
or
add
rol
jmp
ja
clc
fbstp
nop
dec
mov
push
dec
cmp
jg
jp
xor
or
shrl
jge
aad
pop
push
scas
add
and
ljmp
xchg
rorl
cmpl
mov
xchg
pop
xchg
fcom
mov
das
or
add
mov
adc
into
test
incl
cltd
gs
and
xchg
es
inc
ljmp
xor
pop
and
nop
inc
loope
ljmp
rclb
pop
inc
jae
jae
push
call
loopne
cmp
cld
mov
push
lret
pushf
push
dec
sub
loopne
jg
cmp
jne
cmp
pusha
xchg
fistpl
inc
push
pop
fwait
ds
test
dec
jbe
pop
adc
push
sub
stos
xor
adc
mov
push
sub
nop
inc
cmp
scas
cmp
push
sbb
or
mov
fisttpl
xchg
lods
jno
and
xchg
rcll
inc
aaa
jno
xlat
insl
or
outsb
mov
jns
inc
jbe
fs
lock
insl
jecxz
lea
jge
fidivrl
inc
ss
cwtl
rclb
incl
ss
fstp
imul
sbb
les
pop
int3
pushl
test
adc
sbb
mov
push
clc
pop
xchg
rorb
sahf
les
imul
mov
adc
jmp
sub
jae
xchg
fcomps
push
sbb
mov
scas
xchg
incl
pop
movsl
cli
sahf
js
mov
dec
subb
mov
mov
sub
dec
rcll
pushl
imul
push
lods
mov
out
daa
fisttpll
jnp
push
sbb
aad
dec
adc
mov
lcall
outsb
decl
dec
or
sub
xor
xlat
decl
fisttpll
out
mov
inc
cld
sub
fcoms
mov
call
mov
inc
sbbb
mov
aam
cmp
ret
loope
lods
sbb
xchg
xor
inc
movntps
push
leave
incl
add
dec
jb
xor
call
lret
cli
in
mov
decl
shlb
imul
sub
lods
or
aam
mov
out
mov
jb
mov
jb
rorl
cmpsb
xchg
xor
decl
stc
pusha
pusha
push
sbb
and
xor
divb
sbb
lcall
add
xchg
add
dec
xchg
dec
pop
filds
xor
dec
sbb
pushl
insl
adc
fxch
mov
adc
mov
ret
ret
stos
jl
and
sub
cmp
jns
ret
nop
fs
aam
popa
sbb
mov
inc
gs
and
push
sub
je
mov
call
mov
rorb
adc
pop
inc
pusha
inc
enter
aam
ljmp
decl
inc
test
mov
test
call
mov
decl
mov
mov
add
dec
push
ja
bnd
leave
movsb
and
xor
and
push
xor
add
int
ja
pop
sbb
movsb
das
xchg
mov
push
xor
adc
lahf
stc
xor
and
es
add
call
jne
push
or
int3
bound
pushf
mov
jl
jno
mov
repz
imul
ljmp
cwtl
sbb
and
out
and
add
aam
aaa
mov
add
adcb
hlt
incl
stos
jbe
or
inc
mov
sbb
nop
outsb
inc
dec
cli
incl
fwait
mov
addr16
mov
push
sar
mov
fcoml
in
inc
sub
sub
addr16
out
lods
adc
movsl
inc
test
mov
mov
mov
int
cmp
sub
pop
add
call
cmp
arpl
inc
ficompl
fxch
into
sbb
mov
push
out
jb
ja
cmc
stos
decl
cltd
imul
xor
or
adc
addr16
mov
add
inc
mov
stos
mov
ds
imul
inc
sbb
and
shrl
xchg
mov
mov
mov
sar
push
xchg
cmpsl
popa
push
push
sub
les
movsb
call
stos
pop
mov
xchg
sub
sarl
lods
dec
in
out
inc
loop
lock
lcall
pop
pusha
xchg
mov
mov
lods
in
ljmp
test
cs
xor
cmp
xchg
pushl
je
es
cmp
insl
cs
pop
fsts
pop
daa
or
arpl
push
je
add
mov
incl
ja
push
sarl
les
enter
lcall
jne
add
fdivrl
imul
call
out
or
push
inc
xchg
and
js
push
les
mov
push
imul
xor
sbb
cmp
sub
movsb
xchg
pop
loope
and
adc
push
or
aas
jl
mov
jmp
jg
and
pop
xchg
mov
xor
out
clc
pushl
mov
out
and
pushf
dec
icebp
adc
movsb
sub
fwait
push
int3
out
sub
lcall
inc
stos
mov
pop
pop
or
ljmp
mov
cmp
xor
lcall
decl
or
ss
or
pop
pop
push
aaa
subl
sbb
adc
jge
sub
push
ljmp
or
mov
fisttpll
mov
xor
in
sub
xor
adc
pushl
mov
xor
adcb
and
mov
jge
out
scas
xchg
xchg
clc
decl
cmp
scas
jb
loopne
loop
pop
xchg
push
cmc
and
inc
stos
add
fists
xor
addb
jg
or
dec
cs
jg
sub
dec
xchg
out
mov
je
adc
mov
push
inc
mov
je
test
mov
ret
mov
stos
into
xchg
or
mov
decl
cmc
mov
test
cld
mov
jmp
sbb
incl
js
iret
lods
push
or
pop
ljmp
loope
ret
sub
pushl
xchg
mov
adc
aad
rorb
cmp
add
fnstcw
xchg
iret
jge
jno
and
cltd
insb
loope
inc
insb
add
in
xor
adc
clc
roll
mov
ljmp
cmp
fstl
in
jne
in
dec
add
jg
add
xor
add
or
xchg
dec
mov
push
lods
sbb
rclb
stos
mov
push
mov
fsubrs
incl
lds
popa
inc
rclb
push
add
test
fstps
cmp
mov
mov
call
sbb
enter
ja
decl
sbb
push
or
loopne
xchg
jmp
pop
dec
adc
movsb
rcr
sub
and
pop
rorb
in
fwait
cwtl
aad
clc
cmp
mov
leave
inc
mov
into
sbb
mov
pop
int
leave
clc
call
mov
pop
inc
fldenv
out
push
clc
movsb
cltd
icebp
loope
icebp
imul
out
dec
rorl
adc
sbb
nop
hlt
push
fcomip
inc
pop
je
dec
jmp
push
pop
and
dec
mov
hlt
or
lret
addr16
and
jns
jg
sbb
push
jge
lret
in
test
pop
pop
mov
ret
test
jnp
aad
fadds
adc
dec
or
add
add
into
jecxz
dec
decl
and
test
inc
mov
xchg
icebp
dec
cmp
enter
incl
fwait
pop
in
sbb
jo
or
dec
mov
jmp
add
xchg
add
cmp
xchg
push
out
test
stc
xchg
adc
cltd
loop
test
jg
adc
or
xchg
xor
xchg
mov
dec
mov
fsubrp
fidivrs
mov
jns
sbb
movsb
jmp
lret
les
cltd
push
dec
add
mov
lret
xchg
cmp
inc
sub
lcall
inc
pop
in
adc
jg
nop
lock
loope
xlat
in
ror
loopne
push
incb
ljmp
hlt
or
enter
xchg
dec
adc
outsl
jl
jns
dec
je
xchg
mov
decl
jne
adc
adc
mov
sub
test
jo
icebp
sbb
test
pushl
and
insl
pop
xor
shll
fcoms
orb
xchg
jge
das
jbe
bound
push
cld
dec
mov
xchg
pop
mov
pop
adc
jmp
fcomip
push
inc
insb
mov
dec
rorl
loope
mov
nop
and
lods
decl
adc
xlat
xor
pushf
jo
mov
std
pop
pusha
push
push
out
mov
push
mov
mov
push
ds
popa
adcl
leave
push
into
push
nop
ljmp
clc
jmp
and
fistpl
test
test
mov
int
scas
clc
pushl
dec
insl
jl
dec
jb
sbb
xchg
add
out
orb
mov
adc
sbb
mov
les
dec
pop
xchg
sub
lock
cld
cli
mov
stos
or
sub
imul
stos
lret
sbb
clc
push
decl
push
aad
shll
xor
incl
mov
cmovs
fstpl
push
pop
mov
movsl
mov
andl
fwait
mov
add
xor
nop
lcall
dec
adc
sahf
adc
cmpsb
movsb
mov
cmp
fisubrl
es
sbb
or
cmpsb
bound
sti
pop
and
push
in
jb
add
bound
ficomps
add
cltd
loope
cltd
les
loop
lcall
adc
mov
pop
lahf
dec
in
adc
push
andl
arpl
pushl
jo
stos
insb
xchg
push
out
es
fcompl
sahf
push
loop
add
adc
pop
clc
push
push
cltd
mov
mov
sbb
daa
and
imul
xor
pop
or
nop
mov
xlat
dec
xor
addb
pop
mov
jg
fsubs
add
add
jnp
ljmp
nop
or
pop
std
ja
pushf
cmp
push
cmpsl
mov
subl
lcall
and
add
pop
sub
cwtl
inc
push
and
dec
push
and
jno
sahf
ds
call
cli
and
mov
pop
ds
jno
push
addr16
dec
movsl
ds
scas
inc
cmpsb
cltd
xor
mov
mov
add
or
in
test
outsb
xor
jmp
jmp
and
ret
cmp
pop
lock
fstpl
bound
jg
sbb
xchg
shl
popa
add
jbe
fnstsw
and
loope
mov
pusha
lods
inc
test
push
mov
enter
iret
test
jmp
lcall
int3
imul
decl
lods
pushf
push
orl
sbb
ljmp
add
enter
daa
and
mov
adc
or
icebp
stc
cmpsl
push
incl
cmp
push
cmpsb
es
rep
stos
mov
mov
pop
mov
or
dec
xor
and
mov
xor
xor
test
mov
and
test
dec
sar
decl
test
sbb
fimull
push
mov
loopne
push
cs
pop
pusha
dec
outsl
mov
add
cli
leave
adc
test
xchg
lcall
pushl
dec
mov
sbb
stos
sar
jg
stos
mov
test
push
push
lret
inc
or
faddl
adc
lahf
imul
lcall
pop
cs
mov
pop
sahf
jbe
mov
rcrl
dec
jge
ljmp
icebp
sub
pushf
enter
cmp
lret
mov
arpl
int
lock
mov
lods
mov
add
jecxz
xor
inc
aam
bound
icebp
mov
call
out
rolb
mov
sbb
mov
lods
jp
push
ds
aad
xchg
jg
inc
fsts
inc
sbb
popa
inc
mov
mov
cmpsl
mov
dec
mov
stos
flds
shrb
pop
and
lods
outsb
or
cmp
sbb
in
shl
add
push
and
pop
jo
popa
loop
pushl
repnz
push
popf
mov
and
xor
xchg
mov
sub
sahf
jmp
sarl
mov
mov
jbe
in
adc
loop
jg
andl
dec
inc
into
mov
xor
pop
decl
in
xchg
sbb
jle
push
add
jno
je
stos
jp
and
mov
enter
push
sub
in
inc
cmp
jle
shr
push
cmp
lea
lcall
xor
push
rcll
adc
push
xchg
clc
mov
pop
lcall
out
sbb
and
jne
inc
mov
roll
in
in
mov
idiv
lcall
into
cld
jecxz
sub
movb
inc
in
cmp
test
test
dec
xchg
mov
cmp
add
pop
iret
jb
jle
fdivrs
into
sbb
insb
jo
mov
loopne,pt
int
ja
add
mov
mov
dec
aad
jp
mov
sub
pusha
and
mov
roll
rol
add
cmp
je
add
loopne
cli
sbb
pop
popf
xchg
adc
dec
or
pop
dec
xor
mov
icebp
pop
es
sbb
decl
iret
xor
test
cmp
xor
xchg
adc
ret
leave
cmpsb
inc
jns
mov
call
in
mov
push
adc
ret
sbbb
or
adc
ljmp
mov
sub
mov
ljmp
aad
int
fldcw
frstor
and
cmp
and
sbb
shrl
imul
cmp
incl
mov
cltd
roll
mov
dec
add
outsb
and
jb
lcall
cmp
call
in
and
or
inc
dec
cmp
cwtl
mov
pop
iret
xchg
std
lcall
push
mov
repnz
jp
pop
sbb
fwait
ret
mov
ljmp
ret
ja
js
xchg
adc
ljmp
shl
inc
lods
repz
mov
cs
mov
test
fnstsw
dec
dec
call
lcall
pop
push
lods
enter
cmp
inc
clc
push
push
jne
ret
pop
stos
in
pop
les
call
dec
sub
dec
sbb
inc
adc
sbb
nop
xor
sub
lods
pusha
xor
das
outsb
hlt
add
adc
add
add
call
dec
roll
mov
and
es
ret
add
pop
dec
and
hlt
outsl
int
mov
cmpsb
stos
push
sbb
xchg
fcomps
mov
xchg
xor
jp
out
movsb
into
xor
cmp
aad
mov
ja
das
pop
ficoml
mov
jmp
addr16
pop
add
rcrb
sub
cs
ljmp
stos
popf
clc
lods
shlb
mov
jmp
xor
mov
ljmp
cmp
cmp
xchg
bound
dec
mov
jno
inc
dec
in
icebp
mov
insl
xor
pop
dec
incl
mov
psubsb
jmp
incb
push
mov
test
rolb
into
popa
pushl
mov
sbb
adc
gs
adc
jbe
fsubp
arpl
ds
mov
imul
pushl
adc
mov
shlb
bound
nop
test
dec
jmp
negl
int
gs
leave
mov
aaa
add
inc
imul
jmp
incl
cmc
adc
cs
pop
int
test
popf
dec
pop
push
sbb
movsl
shll
push
cli
jg
imul
cmpsl
mov
or
adc
cmp
add
iret
mov
rcrl
xchg
adcl
test
test
add
gs
movsl
popf
cmp
mov
lods
sub
push
jb
fimull
das
clc
jg
lods
sbb
cmc
ss
and
mul
adc
mov
lcall
mov
or
xchg
sti
insb
std
mov
nop
pop
rol
or
pop
stc
lcall
scas
cmp
cs
pop
jno
rcrb
jmp
call
cli
cmp
push
pushf
test
pop
jne
inc
pop
pop
in
test
or
jmp
cmp
mov
mov
lea
mov
flds
cmpsb
insl
add
lret
cli
or
sub
lcall
pop
adc
push
in
cmpsl
scas
xchg
mov
aas
lea
dec
cld
in
push
lock
cs
mov
jnp
add
outsb
sub
jg
xor
mov
xchg
std
ljmp
mov
jp
ja
jecxz
xlat
in
sbb
insb
lock
lret
jae
sub
loopne
dec
sbb
push
mov
ljmp
clc
dec
into
dec
pop
sar
rclb
jae
cmp
js
clc
push
pop
icebp
or
test
pushl
lods
push
neg
into
icebp
test
push
pusha
xchg
mov
pusha
xor
inc
orb
jmp
fildl
ljmp
hlt
scas
cli
call
cmpsb
push
fists
test
or
cld
fcompl
mov
test
cwtl
pop
mov
incl
add
nop
rcr
fcmovu
bound
xor
cmc
mov
cs
xor
or
incl
cmpsb
ret
jg
cmp
xchg
in
hlt
jo
cmp
cmpsb
lock
ss
mov
hlt
push
cli
adc
cmp
stos
mov
jbe
cmp
mov
or
jmp
imul
call
call
shlb
lret
orl
xchg
adc
pusha
jae
incl
into
dec
xchg
enter
jbe
outsb
xor
out
cmpsl
call
xor
xchg
add
cwtl
sbb
mov
popa
and
inc
mov
ljmp
scas
clc
call
mov
jb
sahf
or
mov
dec
xchg
das
pop
mov
ss
jmp
push
or
add
and
ret
addr16
sbb
jb
lea
call
popf
or
les
iret
stos
cwtl
js
js
imul
fcoms
int
and
cwtl
outsl
push
ret
cld
jge
and
mov
dec
push
dec
cmpsb
mov
sbb
pop
lret
mov
incl
mov
xor
mov
ja
jmp
int
insl
repnz
sbb
lcall
cs
cmc
sub
imul
mov
ret
or
xchg
fstpt
iret
mov
imul
ret
and
cmp
push
movsl
add
lret
cmp
xor
mov
jmp
cmp
cmp
inc
in
pop
js
cmp
fildll
xchg
aas
adc
lds
pop
movl
incl
push
mov
xor
sbb
mov
sbb
insl
cld
das
lock
adc
adcb
jg
sbb
add
or
push
mov
cld
lcall
ret
lds
pusha
push
notb
ret
xor
dec
and
adc
std
add
sarb
push
cmpsb
adc
push
leave
and
push
inc
sbb
or
mov
icebp
sub
xchg
shlb
int3
sahf
jp
mov
and
sub
cmp
je
pushl
and
subl
aam
imul
ret
sarl
mov
stos
mov
mov
incl
and
fwait
push
mov
xor
outsl
jp
mov
mov
shrl
loop
decl
aad
stos
jae
scas
dec
std
and
jns
lods
iret
out
decl
push
lods
aad
test
dec
push
pop
push
lahf
pop
push
cmp
sbb
pushl
xor
sub
mov
xchg
sbb
add
push
xchg
sar
jo
mov
aad
xchg
ljmp
es
popa
into
sbb
mov
ss
push
pop
mov
les
ja
adc
inc
xor
sbb
push
nop
fdivr
xor
and
loop
dec
add
cli
adc
neg
add
mov
cld
leave
mov
repnz
mov
imul
xor
inc
inc
cmc
mov
mov
mov
outsb
mov
mov
adcb
ljmp
mov
sbb
sub
sbb
mov
mov
fwait
outsb
push
fdivs
add
push
dec
stos
and
jmp
or
sbb
into
fdiv
pop
mov
ret
pushl
fwait
sub
mov
cmp
je
xor
insb
pop
xchg
es
and
pushl
sub
les
jb
and
lods
gs
dec
dec
cmp
push
int
push
fmulp
bound
lcall
scas
mov
sti
lock
sub
inc
not
faddl
inc
cmp
ljmp
cmp
testb
jmp
sbb
sub
mov
ljmp
loop
and
dec
rol
or
loopne
mov
jmp
loopne
ret
cmp
loope
test
andl
xor
xor
aas
adc
call
and
loop
lret
cmp
arpl
ret
and
addb
mov
incl
xor
mov
and
inc
cmc
test
pop
dec
lcall
enter
push
add
mov
test
pusha
pop
in
ljmp
push
movsb
push
stos
cmp
fs
push
mov
pushf
jmp
incl
iret
fidivl
movl
xchg
push
mov
push
xchg
xor
fmull
cwtl
adc
lcall
sahf
push
cmp
push
xchg
mov
in
xor
lea
inc
sbb
lods
add
ljmp
mov
popf
scas
push
xchg
and
pop
push
xlat
sub
mov
xor
cld
movsl
pop
jle
lea
out
xchg
out
nop
lcall
negl
push
sbb
jo
push
lcall
xlat
xor
lcall
jnp
mov
mov
jo
adc
inc
or
xchg
or
jg
or
loopne
sbb
fdivr
jb
cmp
inc
mov
add
mov
add
incl
fs
sbb
popa
push
test
push
orl
pop
cmpsb
xchg
cwtl
shrl
sbb
ljmp
mov
pushl
push
mov
dec
lds
xchg
mov
cmp
das
sar
mov
sbb
push
nop
shlb
cmpsl
call
ret
pop
cmp
lods
jmp
leave
xor
and
push
jge
aaa
cmpsb
jl
jg
addr16
push
mov
sub
xchg
inc
movsb
mov
jg
inc
pop
push
aas
inc
sbb
inc
test
push
push
jmp
lret
vmovntps
mov
cmp
call
adc
lods
sbb
cmpsl
adc
dec
xlat
sub
rcll
jne
rol
ljmp
ljmp
sbb
ret
andl
inc
xchg
mov
mov
hlt
adc
mov
xor
xchg
sub
pop
jp
decl
sbb
cli
adc
add
aad
das
stc
rolb
bound
bound
int
inc
insb
movhps
fsubs
push
mov
out
sub
inc
rcl
enter
es
sti
xor
sbb
fs
data16
std
decl
lds
lock
or
ds
push
incl
in
subb
in
test
pop
or
das
mov
rorb
hlt
push
ljmp
rcrb
or
xor
cmc
mov
push
jne
mov
pushl
xchg
cwtl
lods
sub
es
aad
jnp
dec
push
mov
lea
sahf
aaa
cld
call
sbb
fisttpll
jo
faddp
mov
arpl
sub
les
lcall
pop
aad
mov
shll
leave
adc
shll
mov
or
std
fsubrs
aad
mov
jp
and
sub
mov
fcomip
call
bound
add
mov
and
mov
mov
sbb
out
test
and
rcll
movsb
lods
xchg
insl
hlt
adc
call
loopne
adc
inc
outsb
pop
cltd
mov
jle
repnz
inc
pop
std
incl
ret
addr16
movb
cld
or
fistpl
sub
decl
push
fsubl
sbb
fsubs
cmp
xchg
insb
lds
mov
loopne
ljmp
adc
loopne
dec
dec
ja
fmull
jge
fucomi
data16
mov
mov
clc
jb
sahf
cmpsb
imul
pusha
std
ljmp
push
and
xchg
lods
sub
mov
js
mov
and
fbstp
adc
scas
sub
addr16
stc
xchg
and
push
push
js
add
push
dec
cmp
hlt
mov
es
pushl
movl
mov
das
and
movsl
push
add
addr16
jge
push
lahf
xchg
test
and
inc
std
outsl
xchg
or
cltd
fisubrl
outsl
mov
daa
xor
sub
or
dec
and
sbb
enter
cmp
and
fwait
scas
push
mov
and
subl
std
fcmovnbe
inc
insb
jecxz
jl
notl
xchg
mov
in
xchg
sbb
cmc
jg
insb
cmp
arpl
inc
or
das
xchg
xor
mov
dec
push
cmp
push
stos
adc
into
inc
push
leave
ja
push
mov
sbb
jecxz
inc
inc
sbb
xchg
aaa
mov
pop
xor
mov
sbb
out
stos
loop
pop
ljmp
fcom
dec
ljmp
adc
sbbl
cmp
xor
incl
stos
int3
cmp
int3
mov
and
cmp
push
das
or
jg
cmp
call
xchg
fbld
lock
ss
adc
jbe
pop
xchg
call
inc
push
add
pop
or
pushl
cmp
jbe
push
and
mov
imulb
fstpt
jne
push
jmp
cltd
mov
mov
rol
inc
out
stc
insl
mov
je
incl
gs
cmp
jno
mov
bound
popf
cmp
add
ror
iret
mov
addr16
subb
push
xor
out
mov
mov
lret
sbb
mov
js
jg
mov
call
push
pop
sub
ret
push
lret
mov
ret
xchg
stos
jmp
call
test
stos
cs
or
loop
or
repz
int
lret
ljmp
mov
dec
test
jp
inc
lcall
pusha
or
ljmp
pop
bts
fisttps
jge
fildll
push
popl
inc
push
loopne
in
lcall
push
cltd
and
ljmp
inc
das
inc
int3
jmp
xor
js
xor
out
gs
fmull
ret
or
pushl
mov
inc
adc
in
and
adc
xchg
ret
out
hlt
xchg
test
test
pop
outsb
dec
stos
adc
jbe
inc
cmpsl
je
jg
movsb
or
xchg
stos
fs
xchg
loop
mov
in
sub
in
dec
or
mov
mov
xchg
test
add
adcb
addr16
jmp
cs
mov
add
das
cs
lcall
into
lods
mov
out
out
aaa
sahf
sbb
cmpsl
mov
incb
into
inc
jb
ljmp
push
mov
jno
iret
ficoml
add
or
insb
ja
cli
push
repnz
dec
dec
inc
rorb
imul
jg
or
into
push
sub
sbb
add
mov
sub
and
mov
sbb
les
nop
and
jg
imulb
push
cmpb
data16
jg
in
jle
inc
push
test
inc
in
call
lods
in
dec
inc
push
nop
lods
clc
adc
and
inc
lds
xchg
pop
cmpsb
notl
lcall
sub
ss
les
sahf
shlb
mov
es
ret
incl
push
push
movsl
mov
inc
fiaddl
cmpsb
sub
dec
jmp
xchg
ud0
mov
gs
dec
add
xchg
and
inc
mov
sbb
jmp
pushl
pop
test
mov
loopne
pushf
xor
jbe
js
inc
sub
inc
pop
add
ljmp
movsl
sub
pop
sbb
decl
push
sub
pushf
int
fldl
imul
ret
adc
cs
shufps
arpl
pop
sub
fdivrs
or
cmpl
xchg
lldt
movsl
cli
sarl
or
add
inc
ret
push
les
clc
in
cld
movsl
add
pop
adc
xchg
data16
outsl
mov
add
push
sub
sub
mov
push
pushl
sbb
scas
js
xchg
jle
add
xor
jl
mov
pop
ror
imul
sbb
mov
ljmp
sub
mov
inc
out
fnsave
pop
jle
lock
lret
jb
mov
sbb
ret
push
aas
sbb
sbb
dec
cld
iret
iret
push
rcl
push
bound
aam
fbld
or
loopne
push
add
data16
and
mov
push
inc
test
push
adc
jno
jbe
outsb
je
adc
push
xorl
outsl
add
push
sub
add
incl
inc
lock
xor
mov
insb
loop
aam
lock
js
push
xor
inc
mov
decl
jle
int3
inc
xchg
jo
cmp
dec
repz
inc
sar
andb
push
mov
aaa
leave
je
mov
add
jg
loopne
push
sbb
jb
mov
inc
push
xor
push
push
xor
mov
outsl
call
mov
or
lret
loop
fwait
mov
lcall
lahf
push
vmovhpd
gs
lock
test
sub
xor
add
in
lock
lods
shl
add
xchg
mov
addb
adc
dec
cmp
iret
pop
incl
or
jle
imul
mov
add
xor
inc
sub
inc
in
jle
add
ja
lcall
shll
add
xchg
and
sub
mov
or
incl
push
cli
push
inc
in
out
mov
imul
push
mov
inc
lret
jb
fisubrl
insb
in
call
lock
push
xchg
insl
lock
push
decl
cmpsb
loop
xor
bnd
jb
pop
les
mov
decl
int
orl
mov
jae
int3
test
ljmp
addl
cmp
or
cwtl
add
push
lock
cs
mov
mov
inc
or
call
insb
jg
sub
sub
or
das
xchg
jecxz
cmpsl
dec
cmp
push
mov
imul
daa
mov
pop
push
cmpsb
xor
and
lret
out
cld
loop
xchg
xchg
les
shlb
cmp
pop
stc
push
and
lcall
push
lock
xor
into
jo
in
rcl
mov
stos
push
outsl
mov
orl
mov
sub
push
mov
cli
decl
push
outsb
and
fdiv
mov
adc
insl
dec
push
sbb
push
mov
add
mov
dec
test
pop
rorl
jg
imul
jecxz
cmpsb
aam
outsl
mov
arpl
sub
mov
hlt
adc
pop
decl
lock
and
jbe
sub
cmpsb
dec
addr16
lret
ds
stos
xchg
xchg
daa
push
daa
inc
xchg
pushl
in
int3
ret
negb
pushf
and
or
sub
add
push
and
xor
fs
and
les
or
imul
sahf
pop
and
or
jne
or
icebp
in
sub
or
outsl
push
out
push
pop
repnz
jg
out
test
push
cmpsl
and
sarb
mov
ja
int
call
sbb
mov
sbb
pop
cltd
ja
pushl
mov
add
sbb
cmp
inc
or
jno
cld
fistl
inc
dec
push
sbb
push
cwtl
stos
jb
xlat
pop
jecxz
jecxz
incl
stos
dec
jbe
lea
push
mov
cwtl
xchg
test
pop
cmc
mov
push
aaa
mov
incl
mov
xchg
scas
loopne
lods
lcall
imul
stos
jl
dec
pusha
sahf
dec
idiv
inc
das
insl
popa
clc
movsl
pop
cwtl
addr16
mov
cli
shlb
and
xchg
insb
jmp
mov
mov
mov
adc
xchg
sti
jb
test
test
mov
jbe
ljmp
cld
out
xor
xchg
nop
cmp
das
das
inc
add
fcomps
sub
xor
incl
insb
ja
shl
mov
xchg
push
pop
mov
or
add
jmp
call
push
push
lret
xor
dec
pop
add
aaa
add
mov
sub
push
stos
or
stos
push
shlb
addr16
push
outsb
icebp
push
lcall
jecxz
rorl
sub
push
lds
loop
pop
call
jb
mov
rcl
inc
jae
dec
call
mulb
mov
adc
mov
popa
mov
pop
jg
pop
bswap
cs
lea
imul
and
and
sub
dec
sub
sub
je
sub
jle
inc
jp
dec
popa
xchg
les
adc
imul
mov
insb
mov
xchg
fcomip
incl
test
fcoml
dec
dec
dec
lret
hlt
cwtl
lcall
pushf
cmp
repnz
hlt
in
sub
xorl
push
push
adc
insl
jmp
mov
std
decl
jmp
popf
fmuls
mov
pop
cwtl
jmp
jno
in
or
mov
shll
mov
cmc
jbe
xor
xor
push
aam
mov
mov
int
fisubrs
sar
ret
aam
imul
or
push
inc
in
xchg
xchg
mov
or
aaa
jecxz
push
test
mov
jl
test
pop
adc
fcomip
ljmp
insb
enter
mov
outsb
das
test
jl
push
ja
fmuls
js
push
pop
js
mov
xchg
pop
nop
pushl
jp
adc
xchg
iret
cmp
and
dec
inc
and
fimull
pushf
iret
dec
addl
leave
rorb
decl
pop
fiaddl
popa
mov
loopne
jae
xchg
test
ljmp
call
in
movsb
shr
dec
sub
mov
cmp
imul
int
ss
fildl
lcall
mov
push
push
jo
jbe
pushf
inc
cld
or
cld
add
push
lret
jmp
decl
je
rorb
fs
andb
popf
aam
and
out
sbb
mov
mov
dec
ja
or
sbb
pop
add
addr16
cltd
or
sbb
cmp
ret
xor
hlt
cmp
ljmp
xor
push
sbb
out
call
add
iret
fidivrl
decl
jb
incl
iret
and
mov
cld
mov
adc
js
adc
push
sar
incl
lods
les
xchg
inc
adc
cmp
jmp
xchg
je
leave
inc
push
das
push
out
sarb
bound
push
add
lea
jbe
lcall
fs
popa
out
lret
cmp
popf
pushl
scas
movsb
and
mov
dec
bound
mov
jecxz
inc
adc
lcall
adc
xchg
or
insb
push
xchg
mov
mov
xchg
push
cmpsb
aaa
adc
clc
cmpsl
lcall
shrl
push
das
call
test
scas
mov
sbb
into
or
ja
dec
sbbl
cwtl
rorl
incl
stos
aaa
into
push
scas
xchg
xchg
iret
cmpsb
test
mov
aad
xor
mov
pushl
pop
fists
dec
in
adc
jae
jbe
orb
call
out
jmp
cmpsl
int3
std
loope
push
repnz
rcrb
push
mov
sbb
pushl
mov
and
cmp
lea
xchg
scas
dec
cmp
int3
mov
jmp
test
dec
addr16
pmulhuw
pop
outsb
cmc
pusha
sub
dec
jbe
cmp
dec
jmp
pop
inc
and
sub
inc
mov
mov
sti
imul
lods
mov
xlat
cmovo
sub
push
popf
sub
add
pushl
mov
cwtl
stos
mov
xchg
shrl
outsb
fcmovu
mov
cli
loop
addl
pop
das
lock
call
and
fsubr
add
push
sti
cli
std
into
popf
push
ret
lds
outsl
xor
mov
xor
and
call
push
and
xchg
je
fnstcw
aam
mov
icebp
jge
mov
cld
incl
out
or
ret
pop
mov
outsl
stos
test
inc
js
inc
mov
fwait
jbe
pop
lret
xor
call
mov
pop
repz
pop
add
push
cld
orl
bound
movsb
jns
jnp
jle
ds
fbstp
cmp
bound
xchg
leave
adc
lret
nop
clc
aaa
inc
inc
cld
and
sub
decl
inc
pusha
or
lods
or
push
out
push
add
std
xchg
imul
dec
cld
jmp
and
in
inc
nop
loopne
addb
mov
or
stos
es
jecxz
lcall
ret
pop
push
xor
jo
bound
or
inc
out
mov
or
scas
push
es
call
mov
int3
adcb
xchg
sbb
inc
shl
sub
cli
mov
mov
mov
hlt
push
nop
sub
scas
decl
add
or
xor
or
pop
imul
pop
sub
ja
faddl
movsb
sub
push
hlt
xor
out
cli
push
mov
ficompl
xor
rorb
int3
push
jecxz
mov
bound
dec
push
cs
mov
xor
jae
sahf
punpckldq
mov
aaa
fcmovnb
push
mov
pusha
adc
add
or
dec
jecxz
xchg
mulps
outsl
enter
mov
shlb
sbb
mov
cld
mov
decl
pop
cmp
out
call
cmpsl
cld
cwtl
divl
loopne
mov
enter
ljmp
fbstp
mov
adc
and
inc
add
out
cmpsb
test
add
push
pop
push
sbb
mov
dec
es
cmpl
clc
pop
jns
add
dec
push
lcall
jbe
ret
lea
andb
mov
cmp
fisttpl
testb
mov
or
stc
fimuls
loop
and
neg
or
in
mov
icebp
test
gs
aad
cwtl
insl
insl
loopne
nop
inc
and
mov
dec
or
rcll
dec
adc
aam
dec
adc
aad
cwtl
mov
aam
repnz
dec
fcomps
imul
cmp
movsl
and
add
mov
mov
js
cmpsb
xchg
push
xchg
mov
sub
and
add
test
pop
fwait
pop
fbstp
cltd
sub
jmp
outsb
add
pop
mov
sbbb
imul
adc
imul
out
sbb
incl
insl
sbb
xchg
jb
jge
test
ss
mov
dec
mov
push
imul
jnp
stos
insl
loopne
jl
mov
or
mov
decl
push
addr16
je
loop
dec
sub
mov
xchg
xchg
loopne
js
jmp
add
cmp
mov
adc
inc
or
aaa
je
add
inc
inc
push
shr
or
sub
pop
mov
mov
out
jae
out
arpl
adc
jmp
pop
in
xor
in
push
dec
xor
add
mov
dec
push
popf
inc
aad
bound
mov
lret
push
roll
dec
ficoml
add
ljmp
les
ds
pop
popa
jmp
xchg
dec
xlat
cmpsb
mov
pushf
cmp
clc
fstl
jnp
xchg
push
sahf
mov
dec
rorb
push
aam
movl
mov
decl
push
jae
mov
test
pop
sub
xor
test
aaa
mov
stos
push
cmpsl
mov
mov
outsl
arpl
mov
call
or
adc
scas
jae
loop
sarl
outsl
mov
fdivrp
lcall
mul
or
lahf
xchg
xor
xlat
fs
and
fisttps
sti
adc
hlt
xchg
fwait
ds
push
or
pop
or
fcomps
fcomip
fcmovne
cmp
cmpl
xchg
adc
or
add
pop
pusha
in
push
pop
mov
and
inc
dec
das
mov
inc
jle
or
popf
and
dec
push
mov
and
mov
pop
push
mov
xchg
lret
in
mov
adc
xchg
and
xor
adc
ficompl
test
idivb
or
pushf
adc
jg
fistl
or
dec
mov
inc
sbb
lret
xor
dec
out
ret
inc
push
data16
push
lret
sub
imul
push
ss
fwait
mov
push
pop
dec
loopne
jbe
lret
ss
lcall
cld
orl
jle
xor
or
mov
jns
mov
ljmp
orl
les
or
loop
push
cmpsb
push
bound
xchg
shl
imul
ds
fadds
add
cmp
sbb
into
test
shll
fbld
repnz
mov
jl
push
xor
add
push
decl
sbbb
iret
pusha
cmp
mov
and
pop
stos
pop
test
rolb
cmp
push
adc
loop
stos
fisttps
aas
incl
mov
or
and
mov
mov
sbb
push
dec
and
inc
jle
push
sbb
lcall
fcomps
rorl
mov
ret
mov
push
jns
jmp
clc
lahf
push
and
lds
xor
xchg
mov
or
dec
push
data16
stos
xchg
fwait
loopne
add
pushl
jg
lret
clc
sbb
in
xchg
ret
lods
sarb
dec
mov
xor
pop
adc
xchg
jg
mov
fwait
call
scas
test
mov
lods
dec
popf
sbb
adc
add
push
push
and
lcall
dec
xchg
test
mov
or
mov
pop
ljmp
and
into
icebp
loopne
sub
and
pushf
push
std
outsl
clc
in
lret
pop
in
xor
iret
pop
push
ljmp
push
pop
decb
and
sub
adc
adc
and
or
nop
inc
mov
push
pushl
mov
lock
push
inc
adc
sub
rolb
leave
cmp
outsl
and
sbb
dec
ss
jo
adc
mov
cmp
ret
mov
in
mov
call
sub
jb
iret
sbb
int3
pop
pop
sarl
xchg
loopne,pn
jno
ficompl
mov
mov
jg
inc
ds
dec
dec
bound
dec
pop
dec
dec
bound
adc
fnstcw
call
push
jp
push
sub
lds
ds
or
jo
daa
sarl
pop
push
fs
pop
mov
pop
shrb
inc
ja
dec
jge
push
mov
jmp
mov
ss
mov
loop
outsb
ret
pop
jmp
ret
movsb
pop
imul
lcall
insb
mov
mov
fs
mov
stos
jg
cmpsl
pop
jg
stos
push
icebp
dec
ss
icebp
andl
push
daa
cmp
mov
dec
push
cmp
jmp
popa
ret
mov
mov
pushw
decl
sbb
lret
pop
nop
or
stos
movsb
roll
fwait
push
dec
and
and
sub
add
pushf
lcall
jmp
or
mov
and
mov
das
clc
lcall
pop
ja
dec
xchg
mov
xlat
pop
out
or
sbb
mov
jge
mov
jl
shlb
cli
xor
inc
or
sbb
clc
cmp
push
jae
repnz
std
mov
lds
xchg
cmc
pushl
es
adc
fdivl
sbb
aaa
ljmp
dec
sub
fs
or
les
mov
jb
pushl
or
stos
mov
loopne
push
arpl
and
decl
jecxz
and
dec
fsts
and
ljmp
iret
push
mov
insl
add
imul
fidivl
shr
xor
sub
and
lcall
pop
sti
or
jmp
pop
scas
cs
mov
cmp
stos
mov
je
in
in
cltd
iret
iret
or
dec
and
incl
inc
sub
mov
xchg
mov
add
inc
sbb
mov
data16
jle
mov
sub
jmp
mov
jle
sub
scas
and
xor
pop
adc
jmp
push
pop
mov
cmp
mov
and
lds
imul
ret
in
xchg
bound
inc
jl
adc
push
jecxz
call
das
cltd
out
out
movntps
mov
push
lcall
mov
stos
and
mov
mov
xor
dec
lea
adcb
xchg
jg
ljmp
sahf
fsubl
push
fs
add
cmp
push
xor
lcall
mov
pop
pop
mov
call
test
jb
inc
jno
je
sub
dec
push
pop
fildll
jns
pop
dec
bound
hlt
mov
imul
cmp
aas
pop
das
ds
je
adc
xor
in
sub
cmc
push
mov
xchg
sahf
negb
and
jb
jg
push
adc
and
adc
shrb
testb
xor
ljmp
and
in
sbb
add
mov
pop
decl
stc
aam
cmp
and
fs
push
push
push
jns
icebp
pusha
push
sbb
adc
sbb
push
and
jbe
xchg
daa
jns
je
sub
adc
xchg
inc
dec
jno
filds
xor
mov
and
cmp
sbb
push
push
sar
lcall
movsl
jno
cmpsb
push
xchg
push
pop
shll
inc
push
test
aaa
sbb
adc
adc
jmp
imulb
aad
js
sbb
jle
repz
in
std
incl
or
mov
jno
adc
pushf
push
js
gs
sarl
xchg
aaa
loopne
xchg
xchg
jno
dec
jge
jns
push
test
arpl
sub
pushl
add
push
sub
cmpsl
sbb
jg
out
xor
mov
xchg
and
call
add
cmp
nop
ds
stos
sarb
jo
and
fcomip
mov
cmc
dec
stc
mov
test
sbb
jmp
movb
xchg
stos
push
icebp
adc
pop
jle
push
test
push
ljmp
xor
mov
push
aaa
and
xchg
pop
add
ja
out
cli
inc
push
addl
push
loopne
adc
pusha
sahf
adc
push
fdivs
call
push
cld
jno
arpl
inc
or
and
inc
xor
rclb
sub
adc
es
pusha
inc
add
inc
jl
inc
mov
jmp
sbb
ss
mov
push
or
sbb
outsl
and
cmp
das
mov
mov
inc
icebp
sub
jnp
movsb
and
shrl
mov
cmp
xchg
sub
push
adcb
push
pushl
cmp
xchg
push
jne
sbb
push
xchg
fs
push
test
movsb
adc
jno
stc
dec
movsl
sar
incl
fs
and
and
and
pop
jmp
adc
and
ret
add
dec
call
xchg
cmc
ss
aad
loope
je
int3
adc
or
mov
std
movsb
and
add
pop
pop
mull
inc
addl
sbb
loopne
or
push
xor
mov
pop
cmp
ljmp
dec
les
lock
push
repnz
lock
lock
jmp
push
and
jecxz
dec
xor
clc
push
sub
test
mov
loopne
js
xchg
cmp
push
add
outsb
sub
pop
pop
xchg
and
mov
add
add
pop
cwtl
fs
call
inc
xchg
mov
adc
aad
addr16
pop
ja
inc
mov
mov
add
mov
push
aad
pop
sub
bound
imul
mov
inc
imul
xor
adc
imulb
adc
hlt
mov
dec
add
decl
xchg
xchg
popf
rolb
ret
fdivs
jge
sbb
pushl
sahf
movsb
jno
nop
jle
rcll
movsb
into
xor
add
and
cmp
dec
lock
mov
cwtl
in
int
andnps
dec
pop
pusha
cltd
pop
mov
inc
stos
jae
stc
cltd
sti
xor
adc
call
inc
sbb
xor
mov
or
xor
icebp
pop
xor
out
ja
jbe
dec
std
mov
lods
pop
cmpsl
fwait
sub
cld
adc
adc
pop
fmull
inc
push
ljmp
bound
push
loope
fists
and
ljmp
and
dec
add
pop
mov
cmpsl
frstor
ret
push
fs
fwait
sub
out
and
test
outsl
jg
pop
xchg
pop
push
add
stc
xor
add
mov
jg
pusha
or
pop
and
xor
pop
lock
bound
decl
adc
js
mov
adc
jno
scas
popa
sub
inc
cmp
adc
call
xchg
es
adc
xchg
inc
jmp
jg
mov
inc
sbb
jne
cmp
pop
jno
fsts
push
xchg
push
scas
mov
push
stos
xchg
xchg
xchg
cmp
mov
pushl
pop
shrl
mov
dec
lret
inc
pop
outsb
push
mov
adc
bound
mov
fisttps
inc
fmul
cmp
mov
outsb
adc
loope
inc
and
test
stos
mov
idivb
gs
or
inc
cmc
je
ret
mulb
jb
fcomip
add
pop
and
inc
mov
inc
test
pusha
es
stc
pop
or
pushl
add
pop
out
add
pusha
xor
push
mov
pop
shlb
test
lret
jecxz
jns
push
outsl
pop
jns
test
add
stos
data16
pop
outsb
inc
xor
movsb
pop
jae
add
cli
dec
adc
incl
lods
and
add
lods
es
mov
idivb
jmp
loop
frstor
lahf
call
inc
in
xchg
sub
xchg
push
xor
jmp
jae
jnp
sub
push
adc
shrl
test
shlb
inc
test
adc
adc
decl
lock
jnp
xchg
cmp
notl
sub
in
daa
mov
decl
mov
add
add
cwtl
loopne
jg
jns
ret
mov
xor
rcrl
mov
cmpsb
xor
movsb
ds
add
add
ljmp
dec
jne
xor
je
pop
pop
inc
adc
ret
js
sarl
adc
imul
xchg
lock
lds
add
sbb
inc
push
fwait
push
loopne
decl
and
xchg
scas
gs
cwtl
cld
pushl
xor
xor
dec
adc
sbb
cmp
pop
lcall
and
add
call
pop
ret
pop
sbb
push
jns
xchg
popa
outsb
ljmp
pushf
add
mov
and
inc
rcrb
incl
sbb
mov
lea
and
mov
orl
fcomip
incl
adc
ret
daa
data16
out
push
popa
adc
jmp
push
popa
adc
fs
sub
xor
mov
sub
xchg
add
incl
mov
mov
xchg
push
xor
call
addr16
cmp
lock
int3
mov
shl
sub
sbb
push
mov
mov
outsl
push
cmp
addr16
mov
cmp
pop
xor
cmp
dec
out
idivl
out
mov
push
pop
mov
or
call
inc
pusha
std
mov
jo
incl
mov
pop
mov
nop
decl
pushf
ss
mulb
xor
jecxz
ljmp
stos
in
jb
lds
test
inc
mov
adc
arpl
stos
jb
jle
out
cli
mov
popf
pop
and
les
ss
xor
sbb
pop
mov
xor
lcall
adc
lods
cmpb
jg
insb
adc
and
bound
pushl
popa
jbe
inc
jge
out
mov
push
jecxz
aaa
pop
test
mov
xchg
mov
insb
cmc
jg
lea
aaa
add
rolb
adcb
mov
sub
jl
sbb
mov
lcall
add
adc
cmp
mov
fsts
gs
add
mov
movsb
sub
cmc
ret
int3
mov
inc
ljmp
xlat
call
push
xlat
xor
lds
enter
das
mov
call
jo
and
popa
pop
outsl
add
stos
fs
or
fistps
daa
push
inc
js
pop
pcmpeqw
lcall
call
mov
inc
fwait
xchg
xor
xor
cwtl
pushf
aaa
faddp
std
fistpll
ljmp
sbb
es
jnp
xor
adc
and
call
mov
arpl
jb
push
push
adc
jbe
or
sub
inc
cmp
decl
cmpl
mov
mov
add
lret
jne
sbb
mov
inc
cmp
andb
pushf
bound
icebp
mov
jge
testb
inc
push
jno
xchg
xor
movsb
push
sub
out
jp
pop
outsl
test
lods
jp
jo
mov
jg
fiadds
xchg
insl
mov
hlt
lds
jbe
mov
jmp
lea
bound
fisubl
cmpsb
mov
cmp
mov
into
mov
fdivp
mov
ljmp
addr16
test
xor
cmp
mov
or
das
push
lock
mov
push
push
push
mov
stos
fwait
jle
lods
and
xor
mov
pop
xor
subb
sti
ret
mov
mov
test
lcall
test
movsl
inc
lods
or
or
adc
add
xorb
leave
aam
lret
mov
in
xor
cli
rorb
push
es
push
sarb
ljmp
add
sbb
jl
mov
ds
jecxz
sbb
pop
shl
call
sbb
pop
ror
xchg
cmp
loopne
jmp
fisubl
lcall
sub
pop
pushl
rclb
jle
sti
jle
leave
outsl
test
pushl
cld
push
data16
movsl
adc
cmp
push
imul
xchg
outsb
movsb
lods
lcall
sub
mov
mov
inc
cmpsb
jl
jnp
loopne
outsb
sbb
xor
mov
sbb
mov
icebp
xchg
aad
xor
add
cmp
scas
add
dec
out
sbb
dec
mov
cmpsb
in
xor
and
pop
in
cmp
ficoms
gs
rol
and
fucomi
lock
icebp
inc
movsl
fcomip
jnp
sbb
jo
subl
inc
pop
inc
mov
add
insb
rclb
hlt
xor
fistps
into
cmpsl
or
adc
adc
stos
or
lcall
test
lea
jge
fcoml
mov
frstor
sar
add
push
add
dec
push
mov
inc
cmp
pushl
iret
sub
ret
ja
aaa
mov
dec
mov
xor
test
add
lods
pop
jno
shrb
adc
xor
js
mov
ljmp
adc
pandn
pusha
shlb
xchg
jp
pushl
mov
stos
pop
mov
sub
loope
in
popf
inc
mov
dec
std
test
inc
push
js
mov
pop
arpl
or
loop
stos
roll
rcll
pop
lods
xchg
dec
cmp
aas
mov
xchg
lahf
jg
test
mov
outsb
mov
inc
push
push
mov
orb
jle
out
je
fdivl
stos
in
js
jg
incl
mov
outsl
push
addr16
lret
or
xlat
mov
ds
jecxz
inc
icebp
popf
or
push
xor
or
pop
loopne
mov
lret
cmp
cmp
loop
pushl
sub
mov
sub
xor
adc
incl
inc
sbb
sub
nop
ret
out
pop
sbb
es
or
pop
xchg
clc
push
mov
je
int3
sahf
xor
add
inc
arpl
sub
add
addl
and
rorb
inc
mov
in
lock
sbb
mov
ljmp
and
dec
movsl
or
int
jnp
mov
sbb
insl
les
inc
mov
xchg
pop
aad
adc
jg
pushf
xchg
pop
mov
inc
mov
mov
cmp
pusha
mov
sbb
xor
int3
gs
icebp
fcoml
push
into
int
repnz
push
cwtl
mov
xor
std
push
or
iret
insl
mov
mov
push
cmpsl
pop
jmp
imul
arpl
in
push
lods
pop
mov
in
dec
imulb
aad
jns
imul
aaa
jg
fistpl
mov
aad
mov
cmc
imul
cld
incl
mov
and
jp
repz
fs
xchg
mov
jmp
mov
pushl
imul
imull
mov
fs
push
imul
aam
and
xchg
and
pop
sub
or
mov
ret
sbb
and
push
cld
xorb
or
mov
sbb
cmp
pop
mov
dec
jmp
xor
sbb
decl
imul
fwait
adcb
and
jb
xor
xchg
je
or
fbld
adc
or
adcl
enter
sbb
in
push
test
mov
mov
push
jg
mov
add
fisubs
jns
lea
ljmp
sbb
gs
inc
call
cmp
incl
dec
imul
leave
cmpsl
cmp
and
int
movsl
fsubr
dec
or
push
call
mov
lcall
ds
test
mov
mov
lret
mov
jb
cld
or
das
push
or
call
sub
sbb
addb
cmp
stos
loopne
xor
push
mov
cmp
aaa
pop
xlat
sti
sub
add
or
int3
pushl
sbb
stos
xor
scas
fcoml
gs
mov
jmp
cld
mov
ljmp
into
mov
out
cmp
pop
roll
jl
push
arpl
dec
call
inc
or
dec
sub
int
sub
push
xchg
or
out
xchg
test
testb
out
test
lcall
or
mov
cs
cmp
or
push
ret
mov
adc
push
icebp
add
mov
xchg
movsl
xchg
inc
sbb
test
push
pop
js
mov
aad
inc
or
jg
pushf
cmp
adc
mov
loopne
dec
sub
xor
dec
cmp
and
sti
test
dec
repnz
stos
push
ja
imul
and
xchg
pusha
and
ja
mov
xor
dec
test
bound
add
xchg
or
fwait
dec
hlt
shrl
mov
push
xchg
mov
pop
mov
lret
incl
fistps
ljmp
stos
testb
xchg
xchg
push
sub
push
scas
aad
pop
out
ljmp
je
jnp
push
icebp
mov
scas
mov
jg
adc
mov
push
pop
and
loop
cli
and
loopne
mov
lea
xlat
fucomp
xor
and
pop
cld
repz
rolb
test
dec
add
and
fdivs
inc
jg
test
mov
movsb
pop
out
sbb
and
imul
out
and
xor
pop
jb
das
xchg
stc
lds
test
ljmp
push
or
arpl
cli
lret
pop
jg
out
aad
inc
cli
inc
int
pop
cld
outsl
mov
xor
xchg
push
divl
mov
jo
mov
mov
gs
push
ret
sbb
lea
fsts
fwait
inc
jg
lea
mov
and
pushf
push
decl
inc
out
mov
sub
mov
inc
xchg
sub
pop
popf
cltd
pop
pop
test
enter
push
enter
mov
jl
inc
pushf
xor
cmp
jg
dec
cld
xchg
dec
jae
mov
mov
shll
mov
xor
adc
mov
ljmp
add
test
mov
xor
sub
push
mov
icebp
xchg
aaa
or
cli
pushl
or
repz
loope
pop
add
lods
arpl
pop
cwtl
dec
push
test
pop
cmp
xchg
aaa
cli
pop
lea
sbb
loopne
xchg
or
and
decl
js
adc
jbe
cmpsl
in
ljmp
movsl
cmpsl
xor
jmp
sbbl
push
jge
or
sbb
mov
call
lcall
xchg
iret
scas
lret
ds
into
or
repz
negl
arpl
int3
cmp
lcall
and
imul
dec
outsl
jb
rcr
popa
incl
lret
lret
adc
inc
rolb
lcall
and
adc
mov
daa
sub
test
push
lret
and
scas
in
outsb
mov
sbb
mov
insl
loop
nop
cmpsl
js
sbb
ljmp
dec
ja
adc
adc
add
ret
lcall
scas
je
pop
push
push
xor
dec
ja
and
cmp
jecxz
loopne
arpl
xchg
push
and
xchg
push
mov
rolb
push
cmpsb
or
mov
inc
inc
ljmp
fs
lea
jecxz
mov
lea
scas
lcall
sub
xchg
adc
pop
loopne
int3
scas
test
or
fsubrs
decl
or
insb
movsl
lcall
push
movsb
inc
sub
das
js
pop
stos
add
xor
out
add
es
mov
pop
or
shrl
repnz
add
inc
mov
outsb
call
jmp
xchg
lret
ljmp
adc
xchg
into
int
lds
movsb
mov
cmp
insl
cli
mov
fiadds
mov
jnp
or
fimuls
andl
aas
movsb
push
scas
clc
sar
popa
in
sub
and
jl
xlat
or
imul
mov
ljmp
mov
jne
sub
adc
push
insl
inc
pop
xor
adc
mov
decl
pop
and
fwait
test
add
cmpsl
cmpsb
sub
push
mov
xchg
sar
incl
xchg
inc
push
cmpsl
pop
cmpsl
jl
dec
insb
stos
lret
lods
pop
and
out
js
mov
clc
repnz
gs
bound
pop
in
push
fldenv
pop
mov
pop
mov
inc
adc
jg
incl
add
jecxz
mov
mov
in
insl
shll
stos
mov
jle
test
adcb
pop
data16
mov
call
lods
loope
jp,pt
add
xchg
mov
jg
or
mov
adc
sbb
repz
jp
pusha
and
lock
shl
aaa
popa
repnz
mov
dec
sti
sub
ljmp
loop
je
xor
sbb
addr16
loop
mov
inc
mov
add
pop
into
lods
inc
decl
mov
orb
arpl
mov
das
mov
mov
in
shlb
ss
or
je
inc
pop
or
fmulp
out
jae
addr16
sub
jnp
incl
fiaddl
sub
mov
mov
cmp
mov
and
add
out
mov
inc
in
dec
dec
movb
mov
test
xchg
clc
outsl
mov
add
lods
int3
xchg
movsl
jo
mov
or
cmp
push
stos
fxch
fs
mov
dec
fwait
les
pop
shll
cld
xchg
pop
add
call
mov
mov
ja
mov
inc
push
lret
xor
clc
jecxz
push
popa
faddl
mov
ljmp
movsl
lahf
jo
imul
jmp
repz
dec
or
push
xchg
push
sti
and
call
sub
cli
lods
push
mov
mov
fstpt
and
jmp
sbb
add
push
add
ret
out
mov
mov
or
or
push
ret
clc
jmp
addr16
outsb
mov
fcmovu
or
call
mov
outsl
sbb
cmp
xor
lock
imul
and
sbb
lcall
add
sbb
hlt
pop
mov
rclb
push
stos
pop
loope
adc
mov
inc
imul
clc
rorl
fsts
xlat
push
push
jno
push
pushl
js
pop
fdivrs
mov
aam
or
ret
incl
adc
mov
and
lcall
lods
sbb
sub
or
pop
and
add
fistpl
orl
mov
mov
icebp
mov
sbb
hlt
or
add
xor
xor
cmpsb
fcoms
xchg
leave
popa
add
lods
mov
xor
cli
pop
sub
jp
or
or
shl
decl
pusha
cmp
mov
fnstcw
mov
dec
clc
imul
adc
or
bound
and
fs
jmp
sbb
es
mov
stos
es
test
adc
push
cmp
out
sub
push
lcall
fs
add
mov
jg
cwtl
subb
pop
fwait
mov
dec
das
fdivrs
adc
push
fstpt
mov
jmp
mov
enter
fdivl
in
rorl
cmp
pop
js
andl
inc
aaa
and
mov
pusha
lea
mov
in
lods
mov
jecxz
push
pop
and
adc
push
mov
test
adc
call
lcall
mov
jae
clc
lcall
lcall
andps
popa
cmp
mov
and
mov
int3
mov
ljmp
push
mov
mov
or
adc
or
cwtl
sbb
popf
dec
adc
sbb
lcall
imulb
movsl
movsb
nop
or
sbb
pop
lret
cltd
or
les
sub
decl
loopne
cmp
inc
push
xchg
pop
jb
inc
push
ret
mov
sub
mov
pushf
mov
shlb
dec
loope
lods
and
lcall
inc
or
jp
stc
xor
sahf
xchg
orb
loopne
popa
add
jo
imul
push
add
pop
jo
dec
mov
dec
jl
or
push
pushf
mov
cwtl
cmp
pop
addb
pop
clc
test
adcb
test
clc
sbb
xor
jle
lahf
lahf
mov
cld
push
cmc
jo
std
sbb
gs
push
ljmp
sar
inc
adc
lahf
or
sbb
push
sub
mov
out
shr
xchg
lahf
lcall
sub
incl
and
shlb
test
std
shrb
imul
loopne
mov
xchg
mov
adc
mov
xchg
das
or
fwait
or
imul
std
call
std
or
js
and
xchg
dec
enter
adc
test
mov
mov
or
sub
or
inc
lods
xchg
shll
and
mov
mov
jno
sar
notb
or
sar
mov
nop
mov
call
cmp
scas
sti
stos
lahf
movsb
mov
ss
fwait
cmp
adc
mov
or
jmp
xchg
fcomps
mov
mov
sbb
lods
aam
adc
sbb
cmp
icebp
pushl
int3
scas
enter
adc
xchg
loope
roll
arpl
mov
es
pop
mov
nop
sbb
jl
ret
fcomip
xchg
out
flds
outsl
faddl
cwtl
or
call
in
jg
push
push
pop
mov
cli
mov
in
or
stos
loopne
aas
repnz
das
pop
xchg
lret
faddl
push
cld
mov
inc
sbb
xchg
hlt
jg
mov
xchg
jle
repz
jns
xor
add
in
movsb
and
inc
lcall
inc
test
aad
add
lock
xchg
mov
inc
sub
movb
add
sbb
pop
decb
inc
or
lcall
mov
mov
pusha
mov
mov
incl
or
pop
sbb
enter
cld
cmp
xchg
pop
cmp
xor
mov
cli
mov
sbb
xor
push
stc
rorl
aaa
lret
add
xor
pop
cmc
outsb
stos
or
jb
in
sub
shr
sub
fsts
mov
sub
aam
adc
aas
mov
cmpsl
cmp
jb
pop
push
sub
fbld
fisttpll
rorb
sbb
xchg
shll
xchg
push
sar
jg
call
pop
jae
sub
sahf
clc
call
adc
fs
push
push
imul
mov
cmp
sub
sub
decl
add
cmpsb
cmp
mov
lcall
sbbb
jge
inc
sbb
mov
xor
pop
lcall
add
psllw
xchg
daa
js
inc
pop
hlt
aas
imul
xchg
mov
and
cmpsl
inc
push
je
jg
pusha
cmpsb
mov
mov
and
hlt
movb
xor
mov
lret
fldt
pusha
add
decl
xor
sub
jle
dec
jl
and
jmp
pop
push
inc
mov
ret
fldl
jmp
adc
decl
lcall
cld
test
outsb
outsb
popf
inc
cld
pop
bound
mov
loope
pushl
mov
in
dec
jno
aas
mov
movsb
pusha
jmp
stos
mov
jmp
adc
adc
test
jg
gs
mov
add
mov
fadds
pop
call
fnstenv
and
test
sbb
sbb
mov
aad
mov
xor
int
mov
and
lret
mov
mov
loopne
mov
cmpsb
mov
cmpsb
das
sub
jmp
loopne
inc
aad
adc
xchg
sub
sub
jp
imul
push
and
cmp
decl
aam
ud0
inc
mov
shll
and
pop
sbb
pop
sbb
jmp
mov
popa
pop
pop
shrl
popa
mov
mov
ljmp
cmp
jg
and
sti
or
rcll
repnz
xor
add
incl
enter
and
ss
out
or
add
add
shrb
jg
mov
ret
inc
lcall
xchg
mov
loope
je
pop
mov
inc
push
and
movsb
push
dec
jmp
andb
cli
dec
mov
xrelease
insb
sbb
and
sbb
leave
dec
mov
sub
enter
mov
sub
test
cmpsb
jecxz
cmpsb
arpl
decl
inc
dec
xor
int
loop
adc
clc
xlat
addl
popa
add
mov
mov
pop
mov
sbb
push
addb
fyl2x
pop
call
jecxz
jge
ss
push
ljmp
adc
xor
ljmp
mov
in
jns
in
lret
aaa
mov
dec
cwtl
loopne
mov
or
lock
rolb
rcrb
push
mov
xor
mov
out
repnz
shrl
push
cmp
mov
call
mov
rorb
or
in
mov
out
push
push
add
into
jns
push
mov
sub
cmp
fmull
stos
cmpsl
add
pop
push
pop
lock
stc
mov
add
incl
decl
add
nop
sbb
movb
mov
rorl
test
inc
loopne
mov
adcb
loop
iret
ljmp
mov
fmul
aad
pop
push
lcall
mov
call
movsl
mov
clc
nop
movsb
xchg
iret
aas
xchg
and
pop
in
test
xchg
jg
inc
or
and
push
mov
mov
fmuls
mov
and
incl
scas
rorb
cmp
xchg
adcl
pop
pop
mov
xchg
add
dec
sbb
push
cmp
xchg
lret
addb
bound
repnz
fisttps
jge
inc
repnz
movsl
xor
fsubp
pushl
or
sbb
and
movsl
pop
out
mov
cli
std
or
mov
popf
lret
push
dec
jmp
and
loop
mov
adc
and
sub
rcll
mov
add
in
xor
push
or
mov
fcomip
call
fsub
notb
sbb
pop
bound
adc
lahf
dec
jo
mov
cmc
add
ja
jmp
jle
jg
jg
or
adc
or
jo
adc
inc
fwait
subl
shll
cmpsb
sbb
insl
popa
loop
adc
mov
mov
jmp
imul
add
cwtl
ljmp
cwtl
mov
ljmp
adc
inc
sub
mov
ljmp
sub
jb
nop
inc
jl
and
inc
repnz
icebp
and
dec
jg
dec
repz
sbb
daa
lcall
fcmovb
lods
call
daa
inc
stos
sar
das
clc
aaa
jb
stos
inc
jmp
or
adc
iret
xor
lods
and
mov
jmp
rclb
inc
xchg
shll
xchg
mov
test
push
loop
mov
or
mov
add
mov
or
mov
sti
xchg
adcl
out
clc
stos
insl
mov
in
inc
push
es
pop
add
lods
push
bound
mov
stc
or
call
push
cmp
sub
adc
data16
push
div
adc
pop
cmp
cwtl
mov
clc
inc
ret
pop
cmpl
push
pop
lret
push
xor
ret
jmp
or
les
and
scas
push
leave
je
push
push
int3
fs
push
ljmp
xchg
test
out
addl
stos
scas
adc
sbb
dec
js
fwait
into
out
shrb
incl
loopne
add
xchg
adc
inc
push
andb
cmpb
jmp
mov
xor
gs
cmp
mov
test
add
lods
adc
push
xchg
xchg
lahf
mov
fstpt
mov
jg
inc
or
jns
cmp
cwtl
cmp
das
and
shrl
call
add
cltd
xor
mov
pop
loopne
aaa
gs
pop
fdivr
push
mov
or
lahf
add
and
jmp
addb
aaa
mov
pop
sub
insb
push
lea
call
cmp
bound
cmpsb
push
iret
andb
jl
xlat
movsb
std
mov
aad
sbb
ljmp
rol
cmp
loope
xchg
mov
xchg
and
dec
mov
or
pop
pop
mov
je
add
ljmp
mov
rol
sahf
jae
push
test
test
hlt
in
sub
lcall
mov
sub
xor
or
movsl
xchg
loopne
inc
scas
fwait
and
add
dec
add
lcall
xor
sub
xorb
in
xor
dec
fildll
push
mov
das
pop
add
and
mov
mov
test
sub
ljmp
mov
xchg
jo
jle
add
xor
loope
adc
and
iret
push
test
push
sub
ljmp
gs
cmpsl
into
mov
jo
add
pop
or
cmp
or
cmp
adc
xor
les
inc
fsub
subb
in
test
lcall
les
cmp
or
mov
mov
insl
fiaddl
test
icebp
inc
push
lods
cmp
and
sub
sub
xchg
xchg
dec
mov
fcomip
nop
cld
mov
cmc
dec
jge
adc
ret
incl
pop
adc
or
scas
jb
xchg
mov
push
pop
dec
call
cld
add
push
push
mov
sub
mov
sbb
pop
push
push
lods
jp
ljmp
xor
sbb
dec
mov
arpl
scas
test
div
aad
fs
insb
pop
lret
call
stos
sar
ljmp
mov
imul
mov
mov
testl
ljmp
clc
xchg
mov
adc
sarl
pop
mov
xlat
loopne
adc
icebp
testl
filds
xchg
pop
add
mov
and
lcall
mov
inc
in
jo
arpl
xor
adc
out
lahf
test
call
fisttps
adc
xor
jge
cmp
arpl
jg
hlt
add
inc
push
sbb
xchg
push
xchg
or
loopne
xor
push
xchg
cmc
sarb
addb
mov
adcl
out
push
daa
jg
ljmp
mov
push
clc
xchg
pop
lea
inc
popf
and
dec
mov
call
sbb
leave
and
hlt
adc
cwtl
and
push
inc
sbb
cmpsb
jle
inc
inc
lods
cmp
sub
call
sbb
inc
mul
jg
adcb
and
pop
js
and
jg
push
or
sbbl
adc
add
add
push
mov
rolb
mov
flds
push
add
mov
rclb
mov
push
test
sbb
pop
push
pop
push
clc
shrl
clc
lea
pop
into
inc
mov
adc
inc
ljmp
mov
push
mov
push
adc
adc
push
push
loopne
inc
xchg
incl
xchg
shll
rclb
rclb
lret
insl
leave
in
add
xor
das
jg
stos
mov
pop
inc
add
sub
pusha
xchg
cwtl
int
sub
mov
jno
loopne
adc
rolb
dec
xor
jg
mov
adc
shl
mov
cmp
shlb
nop
inc
mov
insl
roll
adc
decl
sar
inc
add
fldl
hlt
or
gs
jl
dec
rcl
jmp
fnsave
inc
xchg
pop
pop
sahf
push
call
cmpsb
sub
mov
out
loop
lods
movsb
xchg
inc
hlt
pop
add
pop
jle
out
adc
ja
ret
add
rcll
or
xchg
lahf
aas
idiv
call
mov
sti
jae
xchg
jae
in
mov
addb
mov
psubb
or
jmp
xchg
rcll
sbb
sbb
inc
xor
arpl
jg
mov
push
inc
imul
gs
daa
push
fnstcw
push
jmp
dec
loopne
dec
dec
pushl
add
jp
shrb
push
push
inc
in
call
jl
xor
ljmp
add
mov
pop
xor
xchg
call
ljmp
or
cmp
pusha
push
rol
loopne
and
cmpsb
imul
mov
out
clc
incl
loopne
and
out
push
add
mov
cmp
push
fwait
push
push
sub
mov
mov
jmp
pop
outsb
cmp
fs
lds
ret
inc
and
incl
or
daa
movsb
dec
aam
or
shlb
nop
cwtl
mov
fs
adcb
insl
xor
inc
xor
add
in
test
popa
or
movsb
inc
mov
xor
mov
mov
das
dec
sub
add
mov
jmp
aam
sub
lods
xchg
aas
jns
dec
stos
cmp
aad
lock
push
xor
adc
add
dec
insb
pusha
and
pusha
push
sbb
test
cmp
mov
dec
out
movsl
addl
mov
movsl
push
sbb
ret
adc
xchg
clc
jg
adc
xchg
add
inc
xchg
xchg
in
xor
inc
inc
pushl
cli
dec
pop
lret
or
in
adc
call
adc
in
aaa
jg
lods
jp
in
dec
cwtl
add
loop
dec
push
rcll
loopne
pushl
cltd
adc
pop
test
fistl
pop
mov
imul
inc
gs
fwait
push
adc
ja
and
lds
add
aad
xchg
lock
in
scas
js
ror
jo
mov
bound
cmp
outsb
mov
adc
sar
jmp
roll
or
pop
adc
add
cmp
fisubrl
sub
jecxz
sahf
mov
lock
out
push
das
cli
push
insb
jo
cwtl
adc
and
insb
sub
mov
xor
mov
and
sar
dec
xor
or
imul
fildll
shrl
aam
nop
mov
decl
or
out
popf
imul
push
jge
push
pop
xchg
and
mov
xchg
add
fwait
insl
pusha
push
sbb
insb
out
inc
pop
pushl
push
xorb
push
and
push
jb
and
xor
mov
pop
jp
lret
lock
sub
adc
ljmp
sbb
ds
incl
adc
sub
pusha
jo
add
xor
fwait
cmp
loopne
dec
adc
sub
rolb
mov
and
sbb
push
inc
imul
mov
es
jecxz
add
les
fisubl
sub
lods
fbstp
or
test
cmp
cmc
add
pop
or
lds
dec
push
movsb
xchg
sbb
popa
or
mov
call
pop
dec
xchg
insl
mov
rclb
addb
mov
dec
rcll
flds
daa
ss
jp
lahf
adc
test
or
xor
add
iret
scas
or
push
adc
xor
pushl
decl
clc
push
les
cmp
rcll
inc
sbb
dec
test
or
push
add
addb
mov
mov
mov
mov
cmp
and
cld
push
ret
inc
adc
cmpl
decl
shl
push
nop
incb
stos
cmp
ljmp
adc
decl
adc
jmp
inc
inc
push
cmp
imul
jge
call
test
add
test
jge
or
push
cs
shll
test
incl
and
pop
pop
jecxz
push
dec
mov
dec
jge
call
pop
pop
pop
movb
cld
lcall
fwait
mov
cmp
pop
sub
mov
or
jbe
loopne
mov
cld
inc
adc
fnstsw
and
lds
stos
add
jg
ret
pop
xor
mov
sub
sbb
add
cld
mov
xor
mov
or
aad
inc
mov
mov
dec
dec
xchg
rolb
mov
jge
addr16
out
cmp
or
jmp
nop
xorl
cmp
mov
adc
lret
inc
sub
out
cmc
in
mov
int3
inc
mov
adc
scas
sar
xchg
loope
and
in
jo
fbld
lock
mov
sbb
or
cmp
mov
mull
dec
out
cli
adc
push
iret
add
push
test
jge
jb
in
mov
mov
clc
lcall
insb
enter
mov
pop
and
sar
lret
and
popa
sar
xchg
add
xchg
sahf
leave
xchg
jg
jno
scas
cmp
jecxz
add
xchg
cmp
pushf
mov
bnd
shrb
jo
pop
pushf
xchg
lock
jae
add
push
cmp
inc
ljmp
pop
movsb
and
pop
in
pop
in
addps
xchg
das
clc
jmp
int3
cs
push
sub
mov
lods
pusha
or
clc
mov
clc
push
stc
cmp
inc
or
ret
cmp
pop
popf
add
decl
adc
push
mov
in
cli
lods
repz
idivl
push
jne
loop
cli
ja
call
std
orl
cli
scas
decl
fmul
add
sahf
add
loope
add
or
push
faddl
sbb
dec
xor
fldl
fstps
popa
enter
dec
mov
aam
cmp
add
insb
add
jne
ljmp
mov
fstpl
xor
mov
loopne
adcl
dec
adc
adc
lret
or
movsb
push
sbb
adc
bound
mov
incl
pop
or
adc
inc
andl
mov
ret
xlat
jmp
xchg
call
jge
pusha
mov
dec
xor
pop
enter
incl
mov
add
or
in
inc
arpl
nop
rorb
test
sbb
or
or
sbb
std
fwait
insb
test
fwait
imul
or
xchg
inc
lock
dec
les
jg
incl
mov
clc
push
add
je
xor
cwtl
sbb
jne
and
or
xchg
mov
rolb
adc
adc
les
dec
sbbl
cmpsb
ljmp
xor
subl
adc
orl
rclb
cli
add
pop
rol
inc
dec
enter
sarb
add
xor
cwtl
rclb
mov
adc
mov
mov
mov
pop
adc
push
inc
jns
xchg
pop
add
cld
jl
pop
rcll
call
adc
xchg
call
push
loopne
in
test
or
call
loopne
lea
scas
inc
into
shrl
subb
pusha
shrb
push
mov
pop
adc
inc
add
add
nopl
push
cld
xchg
dec
addl
push
insb
cmp
scas
loopne
inc
inc
add
outsl
dec
xor
add
fcmovne
les
mov
inc
fists
add
outsl
add
or
push
add
and
push
sub
sbb
jmp
add
add
movsl
push
or
in
dec
or
push
cs
or
push
inc
or
cmp
and
mov
mov
mov
lcall
ret
test
int
ja
rcrb
loopne
int
lods
jne
mov
call
xor
loopne
inc
add
push
adc
adc
fisttps
mov
out
mov
inc
decl
push
int3
loopne
or
xor
mov
or
in
or
ret
mov
cmpsb
mov
mov
pop
sub
in
jg
adc
in
or
push
int3
or
aam
in
adcl
rolb
stos
sbb
sub
in
sbb
xorl
fwait
or
inc
mov
fwait
or
leave
inc
dec
add
xor
inc
decb
push
shll
inc
mov
rcrl
ret
outsl
cltd
and
mov
into
xchg
lea
or
cwtl
inc
mov
aam
add
inc
sub
int
add
dec
out
pop
inc
aaa
aaa
cld
test
xor
insb
loopne
mov
cld
pop
sub
push
add
adc
pop
or
lret
clc
incl
hlt
mov
mov
sub
inc
cld
incl
sbb
mov
adc
mov
loopne
push
ja
add
insb
mov
and
pop
mov
xchg
xchg
cmp
outsl
xor
pop
and
or
dec
lock
ljmp
cli
xchg
loop
xchg
aas
andb
ljmp
adcb
fwait
push
sub
and
cli
add
cmc
inc
jo
mov
xchg
mov
push
enter
roll
jg
or
jmp
andb
sbbb
addl
lods
cmpsb
into
add
inc
fstpt
cmpsl
push
cmpsl
into
subb
adc
cmpsb
ret
mov
scas
incl
imul
into
push
data16
ljmp
push
mov
or
ljmp
adc
or
cmp
mov
jmp
es
stos
adc
mov
xchg
stos
mov
mov
loopne
addl
dec
add
mov
mov
sbb
add
and
into
lcall
popa
out
lcall
call
stos
add
dec
into
mov
adc
cmp
out
and
pop
nop
jo
inc
inc
pop
add
lcall
xchg
int3
mov
cmp
push
fadds
andb
hlt
decl
cld
or
orl
les
movsb
or
clc
jg
add
sbb
inc
sbb
cltd
or
enter
xor
adc
jg
or
cs
add
lock
push
std
incl
lcall
sbb
ret
movsl
mov
decl
lea
inc
push
dec
sbb
jo
xchg
mov
inc
sbb
sbb
fcoml
push
cmp
cmpl
sahf
adc
adc
sarl
or
mov
mov
dec
jg
xchg
es
mov
push
movsb
sar
mov
cmp
ja
addb
add
push
gs
idiv
inc
test
push
std
rol
xor
or
lret
rcr
cmpsb
enter
mov
xchg
icebp
lret
dec
sub
jo
les
scas
mov
xor
add
aaa
sar
dec
sub
daa
cmp
sub
adc
clc
push
aam
mov
xor
push
sbb
imul
sub
in
data16
pushf
fmuls
pop
adc
cmp
xchg
mov
test
int3
rorb
hlt
repnz
push
dec
jg
inc
hlt
xchg
adc
mov
jecxz
or
clc
xchg
sub
sbb
jg
sub
add
and
and
mov
movsb
push
sub
inc
add
or
jo
lret
push
jle
adc
lods
cmpsl
add
push
imul
dec
stos
imul
or
in
mov
mov
add
mov
inc
push
sub
call
test
add
mov
divl
push
sub
outsl
imul
add
lock
fisubrs
add
jl
rcr
mov
ret
push
mov
clc
call
jne
stos
xor
insl
mov
inc
jp
sub
inc
test
sub
out
cli
push
fwait
xchg
adc
movsb
imul
dec
negl
mov
ljmp
sub
xchg
stos
in
sub
enter
mov
outsl
call
std
mov
inc
push
add
cld
sbb
cmpsb
mov
or
jb
jne
pushl
cld
daa
and
sbb
aas
jl
daa
pop
inc
scas
jmp
mov
mov
mov
dec
mov
int3
lcall
mov
dec
incl
mov
or
add
test
push
xor
sarl
test
push
or
rol
push
dec
iret
inc
cmp
lret
add
xor
fdiv
scas
xor
adc
and
rolb
ljmp
mov
aam
mov
sbb
pop
sbb
adcb
push
call
or
adc
jmp
leave
lds
rorb
stos
mov
dec
enter
or
add
or
popa
test
dec
call
decl
or
popa
xor
fmul
inc
adc
adcl
mov
sbb
scas
rolb
stos
or
inc
sbb
rcr
jbe
mov
ljmp
push
test
shlb
mov
or
ljmp
mov
bnd
sti
inc
ljmp
inc
xor
mov
cmp
popa
fiaddl
mov
stos
int
shrl
push
ljmp
enter
jne
out
pop
xor
hlt
adc
pusha
ljmp
icebp
sbb
mov
ret
rcrb
push
xchg
test
sub
faddl
push
add
adc
add
aam
jo
dec
icebp
xchg
push
add
call
push
inc
dec
xchg
dec
mov
pop
sar
cld
fistpll
stos
leave
testb
inc
arpl
pop
movsb
lock
jle
inc
pop
imul
inc
popa
push
cmpsl
dec
fs
and
repnz
push
or
pop
and
sbb
or
scas
decl
ret
jb
out
mov
in
sub
mov
add
pop
mov
test
add
cmpsb
push
inc
out
mov
shlb
call
add
add
insb
inc
adc
aaa
or
out
mov
mov
out
cmp
or
std
ljmp
rol
in
fsubrs
cli
ret
add
sbb
xor
js
adc
jg
dec
cli
or
xchg
rolb
js
ret
or
and
adc
or
loopne
add
ljmp
lock
rorb
rorl
add
imul
sub
add
lret
jg
adc
lret
rolb
aaa
pop
and
clc
or
int
idivl
sub
cs
pop
mov
ror
inc
jmp
inc
adc
xchg
xor
dec
repnz
jne
test
sbb
scas
xor
push
rol
jg
inc
dec
jae
mov
addr16
xchg
outsb
outsb
or
xchg
addr16
das
push
int3
add
hlt
daa
stc
adc
int
ljmp
imul
call
jle
sbb
call
jbe
push
outsl
enter
sbb
aad
loopne
or
rol
mov
add
cli
decl
jb
repz
aaa
test
add
dec
out
mov
mov
cmp
stos
xchg
inc
jle
push
or
fcomps
pop
cmp
icebp
incl
push
dec
inc
sbb
inc
sub
sti
cmp
cli
lcall
fcomp
pop
lret
rcrb
xlat
push
inc
shlb
push
add
rcrb
fcomip
cld
inc
cs
call
inc
mov
test
sti
rcrl
adc
push
mov
lock
inc
mov
pusha
push
decl
sbb
mov
push
push
enter
incl
mov
lock
xorl
hlt
sbb
mov
incl
dec
push
lret
jecxz
mov
rcrl
cmp
lahf
hlt
dec
movsb
les
jl
pusha
mov
pop
insl
xchg
andb
push
inc
decl
outsl
rorb
mov
mulb
xor
out
incl
cld
ljmp
xor
adc
adc
outsl
adc
sub
jmp
or
jo
mov
testb
sbb
out
call
add
cmp
js
mov
dec
fisttps
pop
xor
fidivs
fdivl
add
mov
test
jg
mov
pop
mov
sbb
lods
aas
ret
addl
test
into
jo
out
cli
incl
sahf
dec
aad
inc
mov
cwtl
aas
jnp
mov
fs
test
cli
fnstsw
loop
or
push
jb
add
jmp
and
push
out
fildll
xorl
pop
or
inc
jmp
sbbl
loopne
ljmp
pop
inc
andb
dec
int
pop
push
cmp
inc
jecxz
sahf
push
sbb
inc
pusha
dec
adc
lds
sub
add
add
sbb
loop
adc
pushl
xchg
clc
cs
inc
cs
jno
gs
nop
xor
ljmp
fcomps
mov
add
add
incl
cmp
shll
xchg
pop
mov
push
orl
push
std
decl
mov
adc
sub
je
rorb
cmp
outsl
xchg
mov
je
sbb
mov
sub
imul
mov
jo
hlt
ret
lods
pushl
cmpsl
sub
insb
sbb
daa
inc
pushf
sub
sbb
or
jl
in
pop
inc
inc
cld
inc
popa
in
jno
sub
mov
or
popa
int3
push
sarl
jo
cs
ljmp
dec
jmp
jmp
fcoms
add
fdivrl
loope
lcall
sbb
jmp
icebp
sub
std
sub
pop
mov
ljmp
call
inc
cs
cmp
xor
fmuls
pop
cli
hlt
incl
mov
push
mov
into
cwtl
loop
leave
push
and
and
decl
sub
fcmove
add
mov
cld
jno
pop
call
test
xchg
mov
push
pushf
adc
je
or
push
test
loop
js
and
bound
lock
mov
xchg
inc
sbb
ljmp
jno
insb
stos
outsl
clc
mov
mov
xchg
addb
sub
xchg
inc
ja
xchg
jmp
sub
sbb
xor
aam
inc
xchg
mov
push
dec
loope
xor
sbb
push
inc
cli
pop
aaa
lcall
and
add
jge
ja
adc
hlt
sbb
jno
adc
sarb
jae
push
fcmovb
or
mov
sahf
rcl
popf
mov
mov
push
dec
ret
push
call
adc
pop
lock
jae
add
push
sub
fcomip
pop
pop
cmc
jmp
rcrl
xchg
push
std
lcall
jp
add
sbb
test
sahf
mov
sub
shll
andb
and
mov
and
push
bound
pop
cmc
call
lret
xchg
repz
xchg
push
sbb
cmp
lcall
xor
pop
sbb
lcall
imul
daa
lds
mov
mov
arpl
adc
mov
sbb
fwait
sbb
add
jg
inc
out
les
pop
out
lcall
cmp
or
mov
jl
shlb
jl
sub
js
dec
scas
jae
cmp
loop
ljmp
lods
mov
dec
out
sbb
mov
insb
rolb
mov
mov
push
add
lret
xchg
adc
out
clc
mulb
sbb
push
cmp
es
test
insb
and
fdivr
aaa
mov
add
fwait
out
mov
pop
mov
fistpl
add
icebp
inc
aaa
sub
in
aaa
cmp
fdivs
idiv
incl
sbb
inc
enter
cld
cmp
inc
pop
out
rorb
jnp
out
xor
jg
test
adc
push
test
decb
or
mov
mov
mov
dec
sbbl
js
fdiv
pop
insb
add
push
or
jmp
sbb
adc
xchg
flds
adc
scas
imul
jno
xor
pop
sbb
mov
fs
sbb
neg
jg
or
sti
rol
out
cmp
scas
lcall
int
test
push
adc
cld
mov
add
fstps
sbb
push
add
loope
int3
xchg
jg
and
inc
add
and
fisubl
inc
mov
add
cmp
push
cmc
ljmp
clc
sub
dec
dec
jnp
or
pushl
add
mov
pop
jno
pop
push
inc
cwtl
andb
push
xchg
pop
int3
cmp
cmpsb
sub
xor
out
lods
cmp
insl
mov
test
xchg
sub
dec
pop
hlt
push
lcall
fsub
or
jg
xchg
mov
and
sub
movb
jp
gs
or
cmp
jge
and
lcall
ret
test
xchg
mov
cld
roll
das
sar
sub
push
andl
inc
or
jecxz
repnz
jg
dec
or
add
or
test
addb
cmpsb
mov
add
mov
xchg
lret
rorl
pushl
test
cmpsb
add
lds
sbb
pop
insb
loope
xchg
sbb
stos
push
mov
fdivrs
inc
jl
pop
mov
fs
lds
pop
or
push
jp
xor
sbb
sbb
xchg
push
or
xor
inc
sbb
ljmp
daa
push
sbb
dec
insl
icebp
sbb
je
andb
clc
ljmp
sub
pop
outsb
addl
lcall
mov
push
aaa
mov
rorl
fldl
inc
cmp
jmp
dec
sar
mov
ljmp
jns
lea
and
cli
mov
lret
mov
jnp
roll
lret
or
incl
int3
cmpsl
cmp
cmp
jl
add
jg
test
lret
jle
call
rclb
imul
mov
or
mov
mov
popa
and
mov
stos
negb
or
lea
add
call
pop
inc
and
or
stos
push
ret
sub
mov
fwait
add
sbbl
cli
inc
aas
sub
sahf
arpl
mov
xor
inc
loop
mov
incl
addb
cmp
scas
ret
mov
cmovae
push
leave
decl
lock
scas
inc
push
cmpsb
lods
test
lods
mov
imul
dec
jns
ljmp
or
xor
xchg
xor
mov
jg
inc
sbb
sub
nop
push
seta
pop
sub
inc
or
jo
adc
mov
mov
and
out
push
lods
fildl
sbb
cmpsl
or
fadds
lds
mov
icebp
mov
xor
cwtl
nop
push
cltd
cmp
in
push
or
and
push
inc
cli
dec
or
mov
leave
cmp
icebp
scas
or
nop
nop
mov
cmp
adc
loopne
cmp
shll
adc
rcl
fsubs
jmp
test
mov
popa
or
xchg
test
mov
push
incl
dec
mov
adc
fwait
jno
mov
xorb
and
sbb
dec
adc
aad
and
pop
push
push
std
lcall
xor
push
imul
out
ret
popa
cli
lret
or
adc
insl
test
int3
inc
loopne
pop
sbb
hlt
cmp
mov
jge
fnsave
cmp
shrb
add
sub
test
xor
jecxz
xor
lock
call
sbb
cmpsb
jne
mov
xchg
repnz
call
inc
pop
and
or
iret
mov
popa
loopne
sbb
or
lock
xor
mov
inc
inc
jo
aad
enter
out
pop
sub
push
imul
inc
or
icebp
jmp
mov
or
xchg
cwtl
aas
and
test
call
fsubl
inc
sbb
add
fcomps
in
leave
call
push
out
and
incl
enter
adc
cli
or
pusha
jo
xor
lods
add
std
sub
xor
sbb
lret
ljmp
pop
and
mov
and
dec
insb
and
adc
push
imul
mov
popf
mov
push
cmp
aaa
push
call
sub
fsubr
add
in
mov
add
push
fisubrs
arpl
jg
cs
dec
sub
push
scas
inc
pop
push
addb
xor
adc
xorb
push
aad
pop
and
outsb
hlt
cltd
push
js
ss
inc
mov
and
or
push
push
mov
xchg
movsb
push
pop
lret
xor
arpl
enter
lods
fs
clc
mov
xchg
rcll
jb
sub
lahf
mov
xchg
pop
jo
sub
addl
out
icebp
push
clc
ljmp
adc
sarb
andb
addb
out
mov
dec
jns
dec
sahf
sbb
movsl
mov
mov
jae
xchg
pop
iret
adc
movsb
jmp
add
and
js
push
dec
add
pusha
dec
adc
jecxz
fs
subl
mov
add
shl
push
insl
xor
or
xor
incl
add
and
jns
sahf
sbb
loop
incl
cmp
mov
dec
call
or
jb
jecxz
ljmp
mov
add
call
cmpsb
cmp
nop
arpl
mov
or
add
subb
push
test
and
insb
jne
rcl
jecxz
adc
cmp
mov
je
test
out
incl
or
or
inc
das
in
cmpb
sbb
inc
and
mov
xchg
fadd
dec
sar
mov
and
jbe
pop
inc
cli
xchg
in
jnp
lret
inc
add
shlb
test
lock
clc
mov
stos
add
ds
push
or
push
inc
add
add
ret
je
or
sbb
and
sub
dec
mov
es
push
adc
decl
scas
or
sbbl
loop
mov
cmp
or
mov
scas
or
shrl
lret
add
or
imul
int3
test
aam
adc
or
cli
pop
dec
ljmp
xchg
mov
jmp
jo
rorl
cmp
push
inc
inc
test
push
mov
mov
cmp
decl
push
pusha
aad
push
or
rorb
mov
fmull
std
das
xor
in
add
push
aas
xor
jge
mov
push
push
jno
pop
pusha
push
lock
cmp
pop
cwtl
jno
fmull
out
inc
in
sbb
lea
xorb
std
fbstp
outsb
or
cmp
adcb
dec
and
mov
push
shrb
scas
mov
test
scas
clc
out
mov
ror
pop
pushl
divl
fwait
push
movsl
xchg
push
jmp
and
or
inc
mov
dec
inc
xchg
out
popf
fs
sub
mov
jmp
cmp
cli
xor
and
cs
into
int
subl
xor
or
imul
fldl
sbb
pop
out
or
jmp
test
xchg
ret
cmp
or
inc
movsb
call
jo
push
xor
ljmp
add
popl
jb
push
mov
in
xchg
xchg
xchg
cmp
cld
lcall
aam
mov
paddd
mov
push
and
int
call
inc
fs
jns
inc
add
inc
mov
mov
outsl
push
mov
and
and
xlat
sahf
pusha
jne
dec
xor
movl
xchg
sub
mov
mov
pop
sbbl
andb
push
xor
sub
push
sub
sbb
and
icebp
or
loopne
ficoms
push
push
sar
sbb
or
sbb
scas
or
mov
or
andb
or
mov
mov
sub
loopne
icebp
stos
cmp
mov
pusha
adc
test
int3
loop
out
cmp
or
repz
pop
and
lcall
mov
jb
push
sbb
jg
and
add
lea
aam
sbb
and
push
in
arpl
fdivrp
jg
and
addb
sbb
ret
mov
call
std
inc
lds
sub
or
pop
mov
cmp
out
mov
mov
push
enter
data16
in
out
mov
xchg
dec
lcall
loopne
mov
or
loope
insb
mov
adc
scas
cld
push
jp
adc
mov
inc
loopne
adc
mov
dec
push
shlb
lcall
dec
xor
jmp
and
outsb
test
and
mov
js
or
sarl
roll
xchg
pop
cld
movsb
inc
outsl
fsubl
cmp
fcomip
incl
call
push
xchg
inc
xor
out
cmpsb
shrb
js
shl
fs
mov
call
in
cmp
xor
and
sbb
and
ljmp
cmp
in
cmp
jle
out
or
pushf
loop
call
push
lods
jp
das
cmp
mov
mov
sub
decl
das
xchg
lret
cmp
adc
inc
stc
fisubrl
sarb
adc
push
aas
add
adc
mov
sbb
call
pop
dec
xor
sub
lcall
mov
xchg
in
rolb
loopne
dec
sub
decl
xchg
jecxz
iret
and
shlb
cmp
cwtl
roll
push
fmull
mov
push
mov
jmp
push
cmp
and
ret
adc
jg
inc
mov
test
mov
call
mov
mov
in
movsb
movlps
add
jmp
jmp
int3
repnz
dec
push
and
mov
push
icebp
movsl
cwtl
xchg
bound
int3
inc
rclb
lds
jno
sbb
popa
test
push
xor
xchg
mov
xchg
push
inc
pop
and
insb
add
xchg
mov
in
scas
pop
cmp
xchg
ss
adc
rol
pop
pop
icebp
pop
lret
xchg
pop
jg
loop
pushf
adc
push
and
insl
lock
in
inc
les
mov
test
jo
lret
xchg
hlt
adc
out
loope
xor
lcall
sub
ret
sub
data16
adc
loop
test
lds
push
xor
jle
aam
outsb
dec
pop
xor
jnp
je
jecxz
jp
xor
in
or
jg
pushf
mov
out
inc
dec
jns
mov
ljmp
imul
inc
daa
jae
sub
arpl
aad
sub
cs
pop
cmp
adc
push
in
mov
in
aaa
jle
stos
aaa
jno
rcrl
arpl
cmp
sub
ret
xchg
or
jg
or
cmp
jb
ljmp
jmp
data16
insl
or
cmc
lea
xor
dec
cld
sub
incl
fmuls
inc
mov
jmp
rclb
inc
sbb
call
xor
data16
loopne
std
adc
xchg
fisubs
xor
inc
inc
and
std
sbb
loopne
inc
cmpsb
loopne
pop
outsb
pop
add
xchg
mov
loope
mov
and
pushf
xor
push
pusha
sbb
inc
push
ret
outsl
les
call
adc
aas
outsl
scas
aaa
nop
jp
popa
jge
add
and
cli
ljmp
inc
and
inc
and
push
and
in
and
adc
negb
scas
mov
push
sub
pavgw
ret
pushl
lret
sarl
jbe
sub
sbb
out
or
fiadds
mov
icebp
mulps
adc
add
xor
clc
cltd
nop
xor
mov
sbb
mov
add
xchg
dec
mov
push
in
shrl
sar
fdivs
loopne
push
clc
stos
ret
les
sbb
and
cltd
lock
add
fisubrl
and
or
lock
ljmp
mov
int3
icebp
outsl
mull
test
adc
fs
cld
cmp
lods
and
cld
popa
push
out
mov
and
mov
or
jb
in
nop
arpl
lcall
mov
mov
adc
arpl
inc
out
or
xlat
jae
outsl
jbe
pushl
mulb
and
xchg
lea
daa
adc
mov
push
push
sub
lock
call
stc
cmp
adc
fimull
sbb
test
js
adc
out
or
sahf
mov
decl
xor
test
push
lds
lret
cmp
pop
pop
sub
xchg
jnp
mov
jmp
lock
pop
jge
cltd
xchg
cmp
push
fsts
push
lock
and
sahf
inc
cmpsb
addr16
call
lcall
je
jb
sahf
cmp
into
xor
cmp
cmp
fbld
leave
daa
add
or
cmpb
jle
push
sub
add
mov
fs
sbb
add
inc
xchg
push
push
and
cld
ror
jg
loop
sbb
adc
mov
push
mov
pop
push
pop
lock
lcall
jbe
mov
jp
add
cmp
fiadds
lods
and
jecxz
in
push
inc
inc
or
cwtl
adc
pusha
pusha
cmp
ljmp
xchg
mov
lods
roll
pusha
mov
mov
adc
mov
data16
cmp
enter
add
mov
stos
pop
inc
dec
imul
mov
adc
insl
cld
decl
mov
add
mov
lock
jmp
xchg
shl
cmp
push
jle
cmc
fwait
aaa
fs
jecxz
mov
cmp
std
insb
or
ljmp
pusha
inc
lcall
std
add
dec
bound
or
sub
mov
mov
data16
into
in
and
imul
push
pop
mov
insb
shrb
sbb
sbb
sbb
push
xchg
fwait
xor
inc
inc
add
call
pop
ret
mov
insb
and
jg
in
daa
adc
mov
inc
les
loopne
or
insb
ss
pop
outsl
mov
dec
and
incl
xchg
cwtl
and
hlt
mov
mov
into
out
in
mov
jecxz
cmp
sub
lods
xchg
sub
ret
jmp
imul
and
mov
ljmp
faddl
lock
xchg
adcb
iret
aad
jle
sbb
dec
leave
outsb
in
fwait
xchg
inc
lret
cmpxchg
cmp
stos
sarl
jg
xchg
arpl
les
fsubs
scas
fnstenv
sti
fcomip
call
push
dec
vmread
fstl
je
data16
out
push
pushf
jle
adc
rorb
and
mov
stos
jo
je
jno
mov
cld
stos
jg
inc
or
xchg
and
add
sahf
jl
stos
scas
dec
push
sbb
in
mov
in
rorb
sbb
int3
sub
xor
arpl
jle
loope
call
bound
add
add
decl
sbb
mov
decl
inc
xchg
cmp
cmp
cmp
cmp
test
push
jmp
xchg
das
mov
mov
ljmp
stc
aad
xchg
inc
ftst
dec
jns
call
sbb
or
mov
mov
xchg
loopne
jb
fdivs
and
ret
jg
sbb
mov
pop
xor
cltd
cs
shr
adcb
push
xor
pop
add
and
int3
add
push
aad
pop
or
call
enter
and
mov
inc
cmpsb
mov
inc
ret
sub
add
add
loope
inc
dec
les
cli
insl
dec
popa
jbe
push
or
push
jle
ljmp
xor
mov
arpl
sub
sub
bound
mov
hlt
mov
and
pushl
ss
dec
dec
mov
movsb
incl
lods
dec
xor
mov
bound
ret
sbb
dec
or
push
add
xor
mov
cmp
add
mov
pop
pop
inc
xor
push
inc
lds
jne
daa
call
and
std
jmp
sbb
fistpll
add
fidivl
and
sub
add
mov
add
push
fwait
mov
pop
ret
aad
fiaddl
hlt
and
ja
stos
mov
jns
add
xor
or
lahf
push
jg
xchg
fcoml
test
dec
dec
jg
mov
jnp
call
incl
inc
mul
fsubs
cmp
lock
pshufw
pop
rcrb
sarb
push
mov
clc
mov
mov
cmp
mov
or
sbb
and
mov
jo
cmp
jmp
jb
inc
push
xchg
push
test
xchg
sub
adc
mov
or
movsb
cmp
sbb
lea
xchg
dec
sbb
push
xor
or
mov
enter
test
inc
jmp
cwtl
clc
pushl
cmp
push
push
dec
push
push
dec
pop
fiaddl
ljmp
ss
mov
insb
out
inc
test
clc
fisubl
lcall
mov
xor
fs
adc
add
xchg
pop
mov
and
lock
xchg
sbb
mov
mov
sub
pusha
je
call
lret
xor
pop
mov
pop
push
test
sahf
pop
adc
test
sarl
outsl
clc
jg
enter
inc
jae
xor
pop
les
loopne
dec
adc
loopne
fcomip
into
adc
jo
aas
ret
lret
or
push
fwait
jmp
cmp
fsts
das
xor
xchg
pop
mov
push
fnstsw
mov
push
mov
arpl
pop
inc
inc
push
test
adc
mov
add
sub
data16
inc
pop
pop
jne
daa
pop
test
and
js
pop
loopne
adc
jb
add
mov
jmp
pop
sbb
insl
jno
xorb
push
cmpsl
or
sub
pop
mov
jl,pn
sub
adc
pop
mov
jo
mov
pop
imul
mov
inc
cltd
cmp
cmp
inc
cmp
inc
in
pop
push
adc
jl
and
adc
sbb
test
ljmp
mov
pop
pusha
inc
sbb
push
fidivrl
mov
adc
lahf
add
adc
addl
cmpb
and
push
clc
addl
or
inc
pop
sub
aas
xor
rcll
lock
stos
inc
push
add
xchg
dec
repnz
push
lds
aam
cmp
movsb
psubb
sahf
add
push
popa
aas
or
mov
mov
add
push
push
add
add
dec
add
into
mov
mov
inc
sub
cs
call
movsl
xchg
je
or
pusha
mov
jmp
bound
mov
call
push
cwtl
xchg
sub
or
movsl
and
dec
jmp
cmp
aam
inc
mov
fwait
pusha
stos
mov
ss
xor
xchg
ss
test
lcall
and
in
out
ja
pushl
inc
rolb
test
pop
adc
daa
jae
sbb
inc
in
invd
cmpsb
incl
cmpsb
sbb
mov
jl
sti
sar
push
bound
shlb
and
xor
iret
aas
inc
incl
lret
adc
xor
sub
add
pop
lea
repnz
aam
cmp
call
loopne
nop
mov
inc
mov
cmp
sarb
push
insb
clc
mov
mov
add
add
insb
push
ljmp
out
lds
jbe
dec
sub
push
lds
push
fcomip
xlat
add
inc
dec
mov
add
xchg
add
popf
test
dec
adc
inc
cmp
dec
push
call
cmp
xchg
pop
sbb
loopne
nop
sub
call
cmpsb
loope
daa
subl
sub
add
decl
xlat
lods
inc
addl
pop
flds
adc
sub
cltd
xchg
push
movsb
add
popa
push
adcb
in
jo
mov
sbb
mov
mov
subb
movsb
bound
std
decl
xor
popa
addb
xchg
and
push
mov
push
ljmp
push
mov
stos
aam
add
sbb
sub
cmp
mov
push
test
add
lock
mov
push
enter
call
push
wbinvd
inc
int3
iret
pop
sarl
adc
sbb
and
ljmp
adc
push
push
adc
jb
les
fucomip
or
addr16
ret
movsb
ja
test
ret
add
cmp
add
sar
or
rcrl
call
pushl
shlb
outsb
es
xor
je
loopne
cmp
mov
fldt
adc
inc
rcll
dec
stos
push
mov
pushf
sub
sbb
into
sub
out
icebp
dec
jo
sbbb
pushl
call
xchg
dec
aad
or
adc
cmp
add
test
ret
fdivs
inc
les
in
addb
jo
pop
and
pushl
adc
mov
mov
mov
pop
xchg
lea
int
add
mov
cmp
sbb
add
stos
cwtl
ss
mov
ficoml
or
push
imul
mov
leave
pop
popa
add
aaa
test
outsb
pop
lahf
push
cwtl
shlb
pushf
cmp
lock
decl
fadd
mov
mov
push
ljmp
ss
test
pushf
in
movsl
js
cmpsl
add
ljmp
mov
xchg
addb
pushf
mov
xchg
ljmp
xor
mov
popf
sbb
mov
sub
push
sub
push
scas
xchg
cmp
loope
popa
lcall
mov
movsl
add
jmp
xchg
lods
rorb
test
pushl
loop
sub
orb
roll
mov
daa
or
jge
push
fs
jecxz
leave
adc
test
lret
pop
outsl
cli
pushl
push
and
data16
adc
mov
in
mov
jmp
sbbb
mov
les
pop
inc
mov
sbb
inc
sub
test
repz
call
divb
cmp
adcb
dec
or
jle
cmp
mov
lcall
lret
hlt
xchg
movsb
adc
ret
pop
sbb
dec
mov
fisubl
shlb
sub
lcall
add
sbb
add
es
adc
sar
add
mov
incl
mov
xlat
aaa
push
fs
add
cmp
popl
sub
insb
mov
or
mov
mov
xchg
movsb
jmp
jnp
rcrl
lock
xchg
pop
push
fstps
fadds
mov
mov
or
add
jl
and
add
shl
jg
inc
inc
jmp
pusha
or
in
loopne
dec
and
loope
lcall
call
xchg
and
movsb
mov
push
mov
pusha
add
mov
mov
imul
test
mov
repnz
jp
icebp
mov
ljmp
push
daa
cmp
jo
andb
mov
pusha
iret
popa
jno
mov
mov
dec
or
mov
push
shlb
fadd
popa
or
shrb
or
call
add
add
pshufw
inc
xchg
sbb
out
mov
cmpl
mov
dec
repz
ja
imul
xchg
add
incl
push
cwtl
add
mov
xchg
mov
mov
xor
mov
pop
jnp
rclb
and
mov
incl
test
es
adc
and
in
sub
adc
in
nop
in
lods
xchg
loope
test
adc
adc
jbe
fucom
sub
mov
popa
push
repz
sbb
mov
rorb
add
dec
inc
scas
clc
mov
add
test
add
or
mov
pop
addb
mov
sbb
rcl
add
or
xor
ja
jg
adc
lret
or
xchg
and
and
push
clc
les
loope
je
lock
push
xchg
pushf
xchg
push
mov
and
lock
mov
popa
fisubs
fildll
or
rolb
in
mov
mov
inc
sahf
mov
bnd
insb
or
jno
mov
unpcklps
mov
dec
cmpsb
xor
jnp
popf
mov
js
lods
adc
ljmp
incl
xchg
sub
jno
push
xchg
push
jl
push
adc
add
testl
and
jae
push
sar
mov
or
jne
mov
aas
inc
xchg
ss
jnp
jae
call
addr16
ljmp
ds
push
les
mov
cmp
test
shll
icebp
sub
decl
pop
xchg
mov
push
mov
sbb
push
lds
jo
xor
jne
call
push
pop
adc
cmp
xor
push
push
adc
sbb
push
out
add
ds
adc
and
std
pushl
mov
daa
push
aas
pop
adc
seto
jae
pop
jg
mov
repnz
mov
int3
and
fdivr
mov
and
push
add
ss
pop
pop
ljmp
inc
sbb
repnz
bound
inc
and
jbe
sub
mov
pushl
sub
xor
xchg
adc
add
push
iret
test
rolb
adc
or
dec
rcrb
jno
jb
pop
les
jg
add
push
pop
fcmovb
push
add
mov
clc
inc
adc
lock
aas
into
roll
adc
mov
rclb
jl
and
xor
inc
and
call
dec
aaa
insl
and
jb
xor
or
push
jne
test
and
loop
mov
jp
mov
pusha
mov
test
sbb
sbbl
std
add
inc
ret
fildll
es
and
das
roll
repz
inc
jecxz
mov
popa
nop
out
scas
cwtl
and
push
sbb
sbb
std
mov
push
push
xchg
insl
dec
call
add
adc
or
jecxz
aad
jmp
cli
add
xchg
or
pop
inc
dec
push
pop
cld
push
shl
dec
dec
popa
adc
jbe
mov
fs
mov
outsb
and
mov
add
call
sub
shlb
rcrl
ret
mov
cs
sub
or
xchg
out
out
ss
popa
aas
cld
incl
cmpsb
jae
dec
pusha
or
jg
mov
add
push
loop
pop
dec
or
mov
push
pop
jns
mov
hlt
addl
incb
sub
popa
xchg
sbb
addl
jae
xchg
fbstp
dec
std
jmp
push
push
inc
adcb
jb
jge
adcb
je
daa
pop
jne
pop
jne
loopne
push
ret
add
add
pop
int3
ss
add
mov
add
push
or
insb
decl
adc
add
or
add
test
decl
mov
adc
loopne
nop
lcall
loope
or
inc
sub
lcall
jb
data16
call
pop
sbb
push
mov
add
fisubl
xchg
hlt
xor
mov
sbb
mov
xchg
shlb
orl
fistl
data16
je
jo
push
loopne
xor
or
add
fisubrl
std
fldenv
jae
inc
stos
mov
dec
adc
ret
push
sub
xchg
dec
icebp
pop
fiaddl
fs
mov
test
lods
pop
std
incl
fwait
rorl
test
scas
icebp
xor
mov
jo
je
rsqrtps
and
loope
pop
jae
push
xorb
lcall
push
inc
adc
daa
adc
divl
loopne
push
decl
or
jbe
xlat
mov
add
aad
or
mov
add
fists
sub
sub
mov
orl
jo
mov
and
and
xchg
or
into
push
sahf
lock
dec
add
push
pop
leave
bound
lcall
test
sbb
mov
jecxz
add
sbb
push
sbb
or
or
pop
cmp
push
inc
mov
pop
xchg
adc
push
add
xchg
je
cwtl
insl
push
bound
fldenv
js
cmpsl
jg
and
jmp
call
and
stos
call
pop
roll
clc
cmc
cmpb
jge
fstps
lods
cmp
xor
add
cmp
stos
invd
add
ljmp
dec
lods
sbb
jne
mov
jb
inc
lods
dec
mov
call
jne
hlt
xchg
jg
cwtl
jle
addb
pop
mov
push
adc
mov
mov
and
call
mov
es
scas
data16
xchg
and
outsl
pop
jno
cltd
push
in
xchg
in
inc
and
jo
push
mov
call
je
or
test
inc
pusha
je
incl
xor
incb
jle
push
mov
sub
adc
xor
clc
adc
pop
movsb
sub
sbb
rcrb
inc
cmp
sub
or
and
sub
xor
rcll
sub
lcall
call
jae
push
adc
cmp
mov
loopne
cli
xchg
and
ljmp
xchg
mov
fs
loopne
das
and
adc
jo
cmp
mov
cmp
sarb
loopne
roll
aam
pop
adc
and
sahf
adc
sub
cmp
mov
icebp
cli
or
sarl
pop
and
and
jo
add
and
add
add
les
add
dec
jle
aas
xchg
add
dec
xor
out
aaa
shrl
xchg
or
push
dec
enter
and
lea
pushf
dec
adc
sub
mov
inc
add
jns
in
cmp
dec
rcrb
add
cmpsl
cmpsl
push
leave
xchg
pop
mov
daa
xlat
add
push
dec
rorb
cld
pop
inc
test
addb
mov
jno
es
loopne
or
push
inc
sub
jnp
push
jge
call
pushf
pop
push
fsubp
add
sarb
imul
sub
xchg
lcall
pop
mov
or
testl
mov
sbb
mov
pop
mov
loop
fcos
incl
pusha
sar
sub
jns
ljmp
dec
dec
and
adcb
adc
xchg
pop
cli
ja
jmp
push
cmp
pop
cmp
pop
and
jbe
push
xor
jae
cmp
ret
movsl
mov
imul
sub
cmp
popa
clc
fcmovnbe
xor
xor
shlb
push
and
hlt
push
sti
call
loop
dec
mov
sbb
pop
clc
pop
lret
xor
or
clc
add
loopne
loopne
add
hlt
incl
cmp
mov
mov
sbb
and
rcll
sbb
das
nop
push
mov
sti
inc
jbe
sub
ljmp
mov
sub
das
sti
dec
das
sar
ret
push
addl
rolb
mov
xor
inc
add
dec
shrb
cmc
pop
and
sbb
dec
inc
popa
jl
nop
in
or
xchg
push
pop
mov
leave
gs
lock
shlb
cld
push
jecxz
mov
add
push
hlt
loopne
and
frstor
mov
add
or
sbb
xor
sti
ja
nop
push
mov
or
push
push
and
push
add
add
mov
jbe
xchg
cmp
add
push
cwtl
out
add
mov
movsb
xchg
lcall
mov
mov
xor
jne
cmp
mov
pop
movsl
jle
and
in
cmp
orb
adc
nop
mov
bound
adc
mov
mov
jg
pop
outsb
adc
out
push
adc
xchg
aaa
outsl
jb
push
inc
std
ljmp
inc
mov
or
add
loope
outsb
xor
ljmp
lock
jp
pop
mov
cld
lcall
mov
pop
inc
xchg
mov
mov
sub
xor
xor
xchg
push
pusha
xchg
addr16
sarl
add
cmp
daa
cmp
mov
cld
popa
jnp
arpl
fsubrl
aam
inc
sbb
lret
sar
call
lock
test
pushf
je
lcall
cwtl
mov
ret
mov
fbstp
xor
xlat
push
jl
xor
push
jg
test
push
shlb
sbbb
push
call
jb
aaa
sub
mov
ret
push
xchg
xor
mov
sub
mov
or
jnp
scas
shll
nop
les
ljmp
cmp
lcall
decl
jl
sarl
xor
pop
rorl
cmp
insb
pop
inc
clc
fwait
sub
pushf
das
jns
or
add
push
loop
xchg
mov
lods
add
xchg
adc
xchg
pop
cs
jae
jns
mov
pop
enter
dec
out
jmp
mov
mov
fcompl
es
xor
xchg
movsl
ljmp
pop
adc
xchg
addl
movsb
pop
pop
pusha
and
sti
jg
pushf
loope
push
mov
fnstsw
push
es
outsl
decl
repnz
loope
add
push
push
icebp
jne
add
scas
push
aas
push
pop
jne
add
xor
xchg
jg
nop
add
add
xchg
add
push
insl
loopne
rorl
movsb
adc
lcall
sbb
push
adc
xor
mov
mov
les
sti
sbb
xor
or
add
xor
and
push
stos
filds
jmp
xchg
mov
hlt
inc
inc
sub
clc
jmp
inc
insl
push
andl
clc
cmpsb
imul
movb
in
inc
bound
sarl
add
fstps
and
mov
push
push
xchg
jmp
shll
inc
adc
ljmp
imul
roll
int
xor
clc
pop
mov
xchg
out
xchg
out
jmp
fisubrs
clc
add
adc
jmp
push
mov
decl
ja
ret
xchg
mov
aam
jge,pt
popf
jmp
xchg
call
mov
lcall
fldl
je
ss
addr16
cwtl
push
and
push
imul
ss
cmp
dec
push
xor
fiaddl
fwait
push
push
or
cmpsb
adc
pop
dec
and
insb
pop
and
imul
mov
insb
lcall
sbb
out
jne
pop
jp
incl
inc
cmp
fistpl
jge
cmp
push
insl
cli
sub
ljmp
enter
mov
das
xor
jg
push
cmove
insl
xor
inc
ja
sub
rol
mov
xchg
sbb
xor
mov
cmc
pushl
rcl
pop
pusha
notl
orl
movsb
sub
rorb
mov
and
sahf
addb
cld
aaa
add
and
pop
inc
and
jo
pop
mov
inc
lock
xchg
mov
push
lock
cmp
mov
dec
std
lcall
icebp
les
or
xor
insb
repz
sub
pop
cltd
popa
sbb
jg
fadds
xor
jno
lods
add
push
pop
or
lcall
jmp
imul
pop
adc
push
jne
xchg
sub
aaa
jg
js
sub
and
stc
clc
call
mov
sbb
loop
stc
out
stos
ret
jno
aaa
add
movsl
pop
sub
cmp
cmp
cmpl
add
and
jge
sbb
add
mov
adc
test
mov
je
rorb
dec
add
jmp
mov
mov
or
jg
sub
jno
in
dec
push
ret
es
hlt
pop
xlat
outsl
jge
loope
inc
xlat
data16
pop
jno
jbe
rolb
rolb
and
inc
sbb
xor
pop
mov
adc
pop
out
xor
add
jmp
add
xor
test
clc
mov
jnp
jno
fildll
je
fs
sbb
jae
mov
pushf
adc
xchg
add
adc
and
cld
incl
add
mov
and
push
cwtl
jg
lock
adcb
sbb
es
cli
mov
mov
xor
jno
mov
xor
in
lret
adc
fisttpll
xor
jg
ljmp
sarb
lea
fcmovne
fwait
xchg
out
mov
mov
out
ss
inc
enter
call
push
and
mov
push
sub
mov
sub
icebp
pop
or
mov
sarl
int3
or
les
mov
fisubl
adc
pop
stos
adc
decl
or
mov
pop
sbb
pop
sbb
push
shl
scas
les
lcall
mov
fsts
ds
cld
notl
cmovo
add
pop
and
repnz
pop
int3
push
inc
nop
adc
incl
sbb
rol
ja
enter
clc
push
fistps
mov
mov
push
fmul
adc
loopne
arpl
pop
pusha
fsubrl
pop
loope
rol
sbb
pushw
test
fidivl
dec
pop
jmp
and
push
mov
xchg
push
enter
sbbl
mov
lea
in
ljmp
bound
sub
pop
cwtl
push
lret
lahf
xor
mov
push
mov
ljmp
lahf
or
sbb
iret
or
mov
loopne
mov
xchg
in
sbb
incl
pop
mov
pop
jae
dec
cmp
dec
ror
test
mov
mov
loop
lods
cmp
repnz
xor
nop
sbbl
push
clc
ljmp
or
fs
add
sbb
add
pop
jnp
jmp
pop
pusha
jnp
push
pop
pop
xor
cmp
inc
subl
mov
or
call
loopne
pop
fwait
pop
jb
add
inc
mov
pop
jne
call
push
pop
and
push
pop
jl
enter
mov
cmpsb
pop
sub
incl
and
pop
mov
imul
test
cmp
mov
leave
es
jno
lahf
fcmovb
orl
daa
loopne
xchg
sti
inc
and
sub
or
mov
sarb
popa
jl
cwtl
stc
push
repnz
ljmp
addr16
dec
lcall
mov
pushf
push
test
xor
xor
or
shlb
les
ds
xor
mov
push
rorb
sar
fisttps
shl
andl
loope
mov
cmp
sub
jmp
mov
ret
sub
lcall
das
inc
push
fstl
or
sub
aam
cmp
jne
cmp
dec
std
mov
inc
xor
nop
jbe
push
adc
or
mov
xor
sbb
pushl
out
sub
sti
or
add
xor
test
push
cld
int
adc
decl
mov
lcall
fdivr
vzeroupper
hlt
jno
sbb
add
dec
and
pop
lret
outsb
or
sbb
mov
pop
jae
xor
mov
xor
mov
dec
imul
push
xchg
mov
add
xchg
mov
jb
addr16
xchg
add
ljmp
adc
jbe
or
sub
pop
pop
data16
adc
lds
icebp
incl
int3
in
sbb
aam
aam
cmpb
fadds
sbbb
pop
rolb
insb
imul
inc
ret
mov
andl
mov
mov
xchg
sub
inc
add
mov
sub
sbb
mov
pop
adc
mov
adc
push
add
scas
sub
cmp
push
loop
arpl
mov
mov
inc
adc
ljmp
xchg
pop
sbb
arpl
sub
or
pop
mov
jb
arpl
sbb
and
sbb
and
shrl
ret
test
mov
sbb
pop
add
xchg
cmp
and
cwtl
cwtl
sub
aam
xor
dec
dec
mov
xchg
pusha
xorl
pop
js
test
loopne
mov
je
and
xchg
leave
inc
loope
xchg
inc
push
xchg
jge
ja
jns
mov
movb
sbb
popa
test
pop
pop
js
or
inc
xchg
cmp
icebp
jmp
fwait
or
cwtl
lds
dec
and
incl
mov
jl
jae
rcr
hlt
int3
inc
and
test
push
and
iret
loopne
add
lds
xchg
pop
sub
mov
mov
cmpb
incl
mov
shll
add
aam
mov
incl
xchg
add
sub
addb
jno
decl
sbb
sub
es
decl
and
mov
shll
cmp
imul
call
ljmp
clc
mov
ret
pop
cld
hlt
xor
lret
adc
sahf
in
pop
test
push
pusha
xor
or
lcall
add
pop
jecxz
and
sbb
ljmp
sub
call
adc
xchg
sbb
movsl
inc
sbb
incl
movsb
and
fsubrs
push
push
inc
pop
sbb
ljmp
inc
or
orb
inc
pop
or
mov
fs
sbb
loope
ja
dec
or
mov
mov
lods
ret
cmp
push
aaa
mov
data16
fsubrp
ja,pn
or
repnz
xchg
mov
adc
inc
jmp
dec
jo
pusha
adc
xor
test
sbb
xchg
lods
mov
orl
int
inc
or
and
xor
call
xchg
lds
jg
insl
std
dec
cwtl
sbb
aam
mov
push
pop
pushl
push
inc
pop
lock
adc
mov
dec
add
clc
decl
sbb
xchg
cmp
xchg
mov
in
js
mov
xchg
xchg
rcll
mov
xor
mov
sub
incl
dec
bound
or
sti
xor
subl
jo
jecxz
add
pushf
mov
stos
mov
jmp
stc
enter
cmp
and
test
test
fs
dec
dec
push
sub
mov
adc
cmp
or
addb
mov
bound
sbb
sbb
out
or
cwtl
jg
call
subb
loopne
dec
mov
or
and
insb
xchg
scas
mov
rorb
or
mov
sub
jmp
sub
pop
jne
mov
loop
xorl
pushf
jg
test
adc
out
add
xchg
mov
add
sub
fxch
test
test
mov
push
outsb
stos
incl
push
cli
dec
mov
inc
lock
mov
loopne
ljmp
mov
xchg
lods
out
or
push
and
lret
cmpsl
sar
mov
mov
inc
sub
mov
adcl
ss
jns
in
lock
xchg
pushf
outsb
cs
or
pop
mov
adc
out
xor
daa
fistpll
cmp
in
jp
leave
dec
repnz
add
mov
dec
pop
push
pop
test
sbb
ret
hlt
test
dec
or
loopne
inc
ss
lcall
push
or
adc
leave
mov
es
add
mov
jle
xchg
les
lcall
mov
xorb
insb
fadds
adc
call
jg
dec
in
mov
out
or
sbb
mov
pop
jnp
addr16
insb
addr16
adc
daa
fisubrl
jecxz
add
jnp
adc
ljmp
cmp
pusha
push
add
dec
stos
or
cwtl
test
dec
inc
adc
mov
and
clc
outsl
cli
sbb
mov
int
jbe
sbb
lret
shlb
imul
cmp
out
test
and
ss
ja
addl
push
jecxz
pop
ljmp
incb
stc
mov
and
jl
push
cmp
mov
scas
cli
jmp
xor
cs
push
xor
fldt
pop
in
repz
fld
cmp
lea
add
sbb
imul
ljmp
adc
or
ss
stc
push
ss
pushf
data16
imul
shlb
add
cli
nop
rclb
xchg
insl
adc
sbb
mov
cld
mov
icebp
mov
jns
outsl
lock
adc
adc
leave
and
xchg
or
outsl
xor
adc
decl
add
jge
aaa
jl
lods
xchg
jno
and
pop
icebp
or
or
sub
in
or
movsb
push
and
jl
fnstcw
xchg
dec
sbb
cwtl
mov
or
call
dec
sbb
mov
cmp
jb
out
clc
xchg
mov
xchg
cmp
mov
push
cmp
cwtl
mov
addb
add
lcall
mov
hlt
ret
insb
mov
incl
push
cmpsb
inc
xor
adc
pop
sbb
mov
fcmovu
call
xchg
les
adc
andb
sbb
sbb
pusha
add
gs
sbb
xor
or
jg
fldenv
jae
add
or
mov
xor
test
jno
in
push
or
lahf
cmp
sub
js
sub
mov
sub
rolb
mov
xchg
mov
es
call
inc
ds
jl
adcl
lcall
dec
add
add
push
lock
adc
fdivrs
xchg
repnz
ljmp
test
jl
icebp
call
cmp
add
cmp
mov
jno
aas
cmp
sar
call
mov
hlt
adc
sub
cli
mov
ja
sbb
ss
mov
ret
repnz
cmpsb
shll
dec
bound
cmp
sbb
mov
adc
cmpsb
pop
les
or
decl
mov
rclb
call
fwait
aam
mov
decl
clc
mov
ficompl
lret
rorb
mov
xchg
mov
lea
stc
mov
sti
dec
js
dec
push
fcomip
mov
inc
dec
jb
enter
je
sbb
aas
icebp
xchg
dec
loope
call
lods
dec
leave
dec
mov
lret
mov
imul
cwtl
movsl
inc
xor
sub
mov
or
mov
fs
or
fmuls
and
mov
and
inc
inc
adc
mov
and
loop
aad
incl
sarb
movsb
and
and
pop
les
int3
mov
jg
aaa
imul
int
mov
jmp
out
and
xor
inc
sbb
call
cmpl
sbb
adc
add
hlt
int3
and
stos
rol
mov
inc
decl
popa
xor
xchg
sti
lods
adc
xchg
iret
and
mov
adc
popf
xchg
hlt
js,pt
add
push
xor
xor
loope
ljmp
roll
xchg
fdivl
fcoml
adcl
subl
jne
cmp
adc
sub
pushf
cltd
or
scas
incl
fcoms
js
xor
mov
pop
loopne
idiv
mov
xor
adc
jg
cmp
sub
add
mov
sub
outsb
decl
cmp
scas
loope
and
sub
mov
pandn
pop
fadd
mov
scas
cli
incl
sub
insl
ret
inc
outsl
repnz
lret
mov
inc
push
push
push
inc
mov
in
outsb
mov
adc
aad
dec
outsb
mov
shll
das
lcall
jp,pn
xor
lahf
repnz
in
clc
stos
push
mov
mov
bswap
xor
out
pushl
aaa
repz
or
mov
and
inc
and
mov
mov
pop
enter
mov
mov
sub
xor
xor
sbb
inc
test
clc
into
and
mov
pop
sub
xchg
ss
adc
adc
ljmp
mov
pop
ljmp
dec
push
xchg
sbb
jmp
cltd
sub
in
mov
int
stc
dec
setae
lcall
inc
ja
cmp
cli
xchg
incl
js
or
sub
sahf
pop
cmpl
fadd
xor
mov
xorb
jle
cmp
cmc
movsb
push
movsw
movl
test
data16
cmp
inc
popa
pusha
mov
jmp
test
sub
push
sub
aas
js
jg
outsb
mov
int
jecxz
or
cld
mov
pop
xor
add
mov
test
jno
or
rolb
push
lods
stos
andb
sbb
sbb
pop
add
adc
ljmp
enter
shl
xor
adcl
loope
idivl
fs
call
in
sbb
lods
push
icebp
adc
xchg
push
cmp
sarl
test
or
outsl
jg
mov
popf
pop
adcl
jne
adc
fisubrl
es
adc
jb
add
inc
pop
mov
inc
test
and
mov
push
adc
mov
push
xorl
cmp
aad
pop
mov
sub
pop
fidivl
fistl
cmc
dec
cltd
pop
rolb
cmp
pushf
lcall
pushf
repnz
lds
and
insb
movsl
decl
or
mov
and
mov
scas
sarl
ss
and
ljmp
and
sbb
rclb
inc
xor
xor
mov
mov
sbb
xor
dec
mov
incl
mov
dec
mov
scas
sbb
push
cmp
jmp
mov
js
dec
rorl
movsb
push
fidivrs
imul
or
sub
inc
fwait
sub
call
adc
sbb
bound
push
push
movsb
movsb
or
adc
dec
pop
lods
push
jp
lods
mov
add
fwait
iret
aaa
jnp
pop
incl
fdivl
sub
cmp
push
jle
test
rclb
dec
outsl
cli
adc
xchg
pop
test
pop
ljmp
out
clc
lods
lcall
mov
push
add
mov
xor
stos
and
mov
add
add
cmp
add
es
add
loop
cwtl
andl
and
loop
sar
dec
jg
out
pop
pusha
add
scas
das
add
push
arpl
fistpll
or
push
add
add
xchg
inc
xor
insl
aas
mov
lret
mov
es
clc
jmp
aam
pop
cmp
xor
shrb
pop
mov
xor
adc
push
imul
hlt
fildll
cmp
in
lahf
mov
adc
dec
hlt
dec
push
cmp
sar
mov
popf
aad
mov
fcoml
xor
adc
jge
mov
iret
jge
ss
pop
hlt
incl
inc
xchg
pop
data16
push
fildll
dec
adc
pop
xchg
sbb
mov
mov
inc
mov
popa
cwtl
mov
lahf
mov
dec
std
adc
dec
jp
ficomps
cld
ljmp
ret
inc
lret
mov
insl
or
push
add
scas
add
adc
ret
jp
mov
std
inc
mov
dec
and
aad
or
test
jg
xchg
hlt
pop
xor
sbb
test
movsl
mov
mov
mov
inc
dec
sarb
in
or
or
push
add
jmp
rcll
push
mov
mov
push
adc
ret
xor
or
hlt
pushl
loope
and
or
sub
dec
jae
jne
or
aas
mov
std
add
lret
pushf
xor
dec
lock
add
cmp
inc
jae
adc
mov
or
fisttps
or
cmovb
xor
sbb
mov
je
mov
sbb
xor
lcall
fldt
pop
xor
jmp
movsl
jmp
mov
call
into
xchg
sub
pushf
into
mov
inc
repz
test
mov
fdivr
mov
push
dec
mov
mov
out
cmp
aad
in
mov
insb
mov
jecxz
push
dec
mov
call
in
jecxz
data16
mov
cld
popf
in
sahf
jg
sub
fldt
inc
adc
jle
jle
pop
scas
pushf
inc
jle
and
adc
sarl
out
aas
sbb
pop
jmp
mov
mov
test
cld
pop
xchg
cltd
mov
sarl
popf
mov
push
out
dec
aad
imulb
push
add
sub
sbbl
pop
in
sub
sub
push
cld
fmul
or
ret
call
jp
lods
popa
ret
in
push
and
sub
dec
loopne
pop
icebp
jmp
or
push
xchg
lret
lock
repnz
xor
dec
int3
call
dec
xor
rorb
stc
out
jg
or
popf
push
dec
sbb
pop
hlt
call
cmp
out
mov
adc
lcall
loop
sbb
scas
in
mul
nop
pop
andb
push
rolb
vmovdqa
sub
sub
sbb
mov
fistpl
add
jmp
pop
stc
mov
int
adc
scas
imul
dec
xor
loop
and
pop
inc
inc
jg
stc
and
stc
fs
sub
sub
int3
fstp
mov
pop
mov
andb
xlat
ds
lret
mov
in
loop
in
int
xchg
lret
mov
movntq
out
mov
clc
add
hlt
lock
lcall
hlt
repz
jmp
sahf
xor
imul
and
xor
adc
sahf
in
mov
scas
call
sbb
sbb
lcall
jno
hlt
insb
les
scas
cli
incl
jmp
lret
and
fucomip
mov
sub
or
aad
imulb
adc
push
xchg
mov
bound
jg
sbb
repz
or
or
xlat
push
mov
loopne
imul
jns
push
add
aad
int3
js
push
add
push
sbb
int
adc
add
and
sub
sbb
jg
lods
adc
ficompl
mov
lea
dec
push
je
dec
lea
xorb
jno
mov
xor
dec
jmp
jg
fyl2x
or
pusha
pop
loopne
cwtl
xor
sbb
and
orl
rolb
xor
jae
jb
jne
aaa
rclb
jg
lcall
cmpsl
pushf
pop
xchg
iret
xorl
hlt
mov
lcall
mov
hlt
pop
imul
pop
outsb
push
aaa
jnp
pop
inc
jmp
jne
incb
mov
stos
mov
push
lahf
mov
push
mov
fidivs
dec
jnp
sarb
jae
xchg
jecxz
stos
ljmp
mov
loopne
imul
sbb
cmpsb
je
pop
ljmp
xchg
sbb
mov
mov
into
lock
lcall
data16
adc
lods
mov
hlt
data16
ljmp
or
cmp
cmc
jp
not
and
add
fildll
outsl
clc
pop
cld
cmp
mov
add
mov
int3
lock
movb
decl
decl
jl
xorb
push
mov
notl
add
outsb
fst
out
mov
test
dec
jo
add
cmpsl
in
in
inc
lea
scas
pop
ror
js
call
clc
sub
pushf
cmp
sahf
mov
jns
mov
adc
adc
fld
lcall
or
mov
pop
push
push
pop
mov
mov
out
lods
and
sbb
and
setle
insl
pop
pop
js
repnz
mov
test
daa
dec
call
and
fucomi
cltd
imul
cmpsb
push
cmp
stos
movl
int
mov
push
lcall
fnstenv
ljmp
popa
leave
jle
dec
sbb
std
sbb
insl
push
stos
push
insl
lcall
das
add
lods
aam
jae
jp
xor
insb
pop
ljmp
cmp
stc
sub
xchg
lret
mov
pop
lcall
cmc
int3
lcall
cmpsb
fs
or
inc
mov
pusha
mov
fdivrp
and
jmp
xchg
pop
add
lcall
push
and
pushf
adc
ds
imul
fdivl
inc
sbb
jecxz
and
cmp
mov
filds
xchg
jg
mov
ja
inc
out
insb
mov
cmp
mov
addb
xchg
xor
adc
xchg
pop
dec
cli
inc
push
insl
push
mov
mov
jnp
fdivr
call
fistpl
out
sbb
ss
pop
sbb
jp
xchg
jmp
loope
sub
xchg
pop
addl
sbb
fsubs
push
sbb
ss
mov
incb
pop
pop
loopne
add
xor
push
inc
xchg
mov
and
sbbl
cwtl
and
nop
mov
adc
push
xchg
inc
fcoms
fcoml
ljmp
jp
fldenv
pushf
push
and
xchg
imul
cltd
add
pop
mov
inc
jne
loope
dec
inc
mov
repnz
sub
sub
sub
das
mov
adc
loopne
movsl
mov
je
dec
cmp
ret
scas
stc
movsb
pop
xor
and
jmp
enter
mov
push
dec
sub
clc
ficoml
xchg
mov
aam
cmp
pop
pop
outsl
test
sti
xchg
scas
addr16
fsubrs
pop
or
call
inc
push
or
inc
adc
enter
imul
sbb
rcrl
mov
xchg
pop
pop
mov
arpl
inc
pop
mov
mov
int
adc
jne
pop
pop
mov
loopne
push
cmp
sahf
jg
sar
pop
push
lds
and
add
inc
rclb
inc
pop
inc
add
mov
incl
jno
pushf
lret
loop
xlat
pushf
int3
out
pop
jae
vpaddd
cli
cs
clc
fst
xor
pop
xor
jb
cwtl
sub
jns
fbld
mov
push
jb
sub
mov
lcall
adc
xchg
stos
dec
mov
bound
jbe
es
popa
sarb
cmp
ljmp
fcompl
inc
in
data16
mov
sub
cmc
xchg
sbb
in
mov
pop
xchg
ss
test
pushl
sbb
cmpsb
push
dec
xchg
leave
mov
jb
sbb
adc
cli
ss
xchg
xlat
test
mov
ljmp
sbb
mov
push
add
out
and
inc
addb
jmp
roll
in
out
fisubl
dec
cli
jns
jmp
add
imul
ret
jecxz
xchg
cmp
aam
push
lcall
mov
lods
adc
sarl
pop
pop
mov
push
push
xor
pushl
cli
shll
sub
mov
cmpl
mov
pushl
jl
loop
push
xchg
push
fisubl
or
or
adc
inc
rclb
decl
add
sarl
adc
xchg
add
lea
pop
add
call
fld
cs
pushf
loop
test
push
sbb
mov
fadd
inc
gs
push
ret
in
jb
cmp
dec
mov
add
push
lods
aaa
icebp
roll
mov
mov
inc
rorl
cwtl
dec
daa
add
pop
stos
lcall
data16
jb
cltd
mov
insb
arpl
fwait
mov
rcrb
inc
mov
push
incl
es
mov
mov
subl
xor
adc
xchg
inc
mov
and
clc
sub
je,pt
inc
fisubl
push
pop
cmc
push
rolb
push
bound
inc
cwtl
call
adc
push
ja
loope
addr16
dec
fwait
int3
push
enter
and
lcall
into
lea
cld
xchg
xor
inc
and
test
out
push
ja
inc
mov
inc
je
add
jecxz
cs
mov
pushl
dec
ret
lcall
dec
push
sub
adc
mov
dec
add
addr16
icebp
test
lcall
ret
jae
imul
imul
nop
out
jnp
push
pusha
lcall
jmp
fcoml
popf
mov
mov
jle
or
add
or
mov
pushl
loope
mov
lea
cmp
pop
mov
cmp
xor
pop
pop
inc
xchg
sub
cmp
pop
sub
inc
lcall
call
cmp
mov
aas
mov
pop
cmp
push
sbbb
insb
shlb
inc
dec
orb
sub
mov
enter
dec
outsl
or
decl
lock
push
outsb
jno
push
inc
aam
mov
push
test
push
icebp
lcall
push
pop
shl
xor
stos
and
mov
adc
mov
xor
xchg
pop
orl
out
fs
enter
in
in
adc
sub
xchg
xchg
push
push
add
lret
rcrb
lret
sub
sub
or
adcb
push
mov
xor
xchg
mov
mov
xlat
icebp
adc
decl
clc
and
lahf
scas
ret
push
in
mov
jecxz
addr16
cmpb
mov
xlat
ljmp
jp
pop
shlb
push
lret
push
lcall
dec
cmp
mov
cmpsb
test
pop
aaa
subl
ret
mov
pop
mov
mov
scas
cmpsb
add
pop
adc
fwait
out
push
mov
xor
rolb
push
dec
je
inc
pusha
repz
int3
push
sub
xchg
mov
movsl
sbb
decl
bound
sbbl
lds
movsl
aad
mov
mov
or
cli
ljmp
subb
je
sbb
roll
add
in
pusha
cld
ljmp
push
mov
xchg
xchg
jg
jg
test
mov
jbe
cwtl
idivb
sub
sbb
dec
jecxz
sbb
fidivs
add
jne
shl
dec
xor
mov
lret
pop
adcb
inc
push
ds
dec
inc
add
lret
xor
xchg
addb
lea
add
call
xchg
or
add
sub
and
push
nop
xchg
xchg
sbbb
movsl
lcall
inc
and
sbb
test
dec
aas
sbb
aaa
iret
mov
sarl
cmp
dec
mov
and
rcr
pop
arpl
sub
push
jno
mov
sbb
jo
push
jb
dec
cmp
test
dec
pop
imul
repz
push
lea
push
sub
push
adc
insl
movsb
add
sub
inc
and
and
sub
cmpsl
movsb
jmp
dec
xor
lea
xor
pop
sub
std
decl
xor
lret
mov
push
push
mov
cs
sbb
mov
adc
jle
hlt
in
inc
ds
and
sbb
lods
adc
sar
loopne
cmp
xor
dec
shlb
sub
sti
stc
idivb
pop
push
inc
mov
sbb
call
push
mov
dec
dec
jae
jns
lea
pop
cmp
sub
popa
ret
popa
inc
fs
cmpsl
push
push
sbb
cmp
cmp
pop
js
iret
jns
xchg
mov
mov
sub
pushl
jecxz
cmpsl
xchg
jne
dec
scas
scas
push
cmp
or
fbstp
incl
mov
mov
test
in
lcall
mov
das
xchg
jbe
cmp
jp
subb
pop
mov
adc
cmp
inc
push
mov
inc
sub
aaa
cld
pop
mov
in
les
cmp
insl
mov
test
mov
sub
cmpsb
icebp
jg
jp
sti
mov
into
mov
decl
cmp
lcall
xor
inc
data16
hlt
push
pop
mov
daa
dec
das
sar
hlt
dec
pusha
mov
mov
std
mov
jmp
jb
jg
in
cmp
pop
aas
jae
into
xchg
mov
mov
jae
jmp
or
xor
mov
lahf
ja
mov
sarb
inc
cmp
roll
push
movsb
mov
push
jmp
jg
test
xor
push
xchg
xchg
cmc
pop
movsl
aam
scas
mov
xor
push
test
ljmp
pop
pop
loop
push
mov
mov
push
sbb
dec
iret
mov
call
mov
pop
mov
jae
xchg
xor
mov
les
sub
mov
jne
lds
sub
jne
inc
js
daa
dec
jle
lahf
popf
push
jns
incl
xchg
mov
push
mov
adc
sbb
ret
mov
xor
xchg
xchg
pop
mov
insl
movsb
cwtl
mov
mov
leave
sub
daa
sbb
mov
mov
sbb
mov
mov
test
and
enter
jg
sbb
dec
add
mov
leave
xchg
sbb
mov
incl
sbb
adc
int3
pop
pop
mov
cltd
pop
hlt
jmp
in
test
or
jle
pop
xchg
jmp
sbb
hlt
movsb
int3
sbbl
ds
scas
pusha
or
mov
mov
fdivs
lret
push
stos
fdivs
dec
and
and
jmp
mov
enter
mov
loopne
ret
pop
sub
sbb
xor
mov
xor
pushf
mov
sub
mov
push
call
movsb
int
ds
add
pop
bound
jecxz
into
add
jae
dec
push
mov
jg
cmp
add
leavew
sbb
adc
jne
inc
outsb
sbb
xor
mov
fdivrl
pop
fisttps
mov
fcomps
cwtl
push
sbb
fwait
jns
or
lods
mov
loopne
fdivrl
mov
push
in
lahf
jle
es
push
cmp
es
js
lea
adc
jg
movsl
xchg
outsb
mov
pop
mov
pushf
sbbb
clc
pop
push
or
xchg
mov
xchg
inc
clc
incl
cwtl
and
loopne
push
data16
jmp
cs
popa
test
cmpsl
loope
sbb
mov
pop
pop
sub
dec
mov
and
push
inc
or
xchg
push
pop
mov
adc
pusha
push
adc
shll
adc
bound
or
sbb
adc
pop
dec
jl
ljmp
push
cmp
mov
test
and
arpl
and
lcall
mov
adc
adc
movsb
mov
stos
test
push
jo
inc
aaa
jmp
mulb
xchg
lcall
add
add
cmp
pushl
dec
loopne
lods
mov
je
fldenv
gs
popa
addr16
dec
in
imul
addr16
in
or
cmp
movsl
inc
insl
xchg
adc
sbb
xchg
add
lcall
stos
pushf
call
ja
mov
mov
mov
mov
inc
aaa
rcl
pop
shl
dec
or
adc
xor
or
jg
jmp
cld
or
iret
sub
xor
or
jl
or
in
scas
lds
mov
movb
addb
cmc
jl
add
jle
jne
push
lret
imulb
lret
and
int3
enter
fistpll
enter
decl
aas
pop
cmp
insl
hlt
shll
pushf
repz
ja
mov
cmp
dec
mov
in
aad
roll
ja
std
inc
sbb
push
pop
and
decl
insl
mov
fdivrl
dec
mov
jae
lods
jb
jp
loop
push
ljmp
int
fdivl
or
or
add
push
push
decl
popf
inc
push
xchg
dec
repz
insb
jns
xchg
stos
jge
xor
movsl
pop
push
cmc
decl
mov
in
inc
push
xchg
mov
lods
jl
sbb
xchg
dec
incl
cmpsb
xchg
gs
sti
xchg
dec
xor
mov
jno
repz
outsl
inc
mov
or
incl
mov
pop
lock
sub
pusha
rorb
pop
in
out
pop
mov
cmp
mov
mov
or
mov
lods
lret
clc
push
add
ds
mov
jl
loop
cli
push
xchg
aaa
or
pushl
or
sarl
mov
ret
and
incl
jecxz
aad
cmpsl
xlat
lock
mov
add
cwtl
test
imul
and
sbb
mov
dec
or
pavgb
jl
rorl
leave
xor
decl
clc
adc
inc
jl
xor
sahf
clc
add
jl
push
pop
mov
dec
test
pop
cs
ljmp
or
aam
xor
pop
pop
add
mov
out
clc
decl
loope
mov
xchg
xor
jno
mov
push
insl
fs
pop
or
adc
pop
mov
adc
adc
lock
leave
dec
jb
xchg
hlt
inc
pushl
push
push
leave
or
mov
pop
leave
inc
push
loope
xchg
les
lcall
cwtl
push
test
fldenv
ja
lret
xchg
or
imul
or
ret
mov
in
cmp
lret
mov
add
xor
dec
cltd
xchg
inc
movsl
xor
cld
ljmp
out
inc
push
fwait
pop
cmp
dec
mov
inc
daa
aaa
pushl
push
cmp
xorl
sbb
fxch
in
add
out
aam
dec
lcall
push
push
sbb
jno
dec
movsb
repz
fwait
popf
sbb
jecxz
fisubs
or
mov
out
xchg
lcall
loop
je
pop
icebp
push
xchg
ljmp
push
push
sbb
jg
push
mov
idiv
and
inc
add
add
add
call
or
incb
or
nop
cmpl
shll
jmp
ds
rorb
cmp
add
adc
and
mov
and
stos
scas
mov
inc
movsb
xchg
mov
mov
ret
sbb
adc
int
add
mov
popf
xlat
mov
cmp
call
xor
call
ret
mov
mov
jnp
int3
rolb
std
ljmp
xchg
pop
inc
or
push
mov
test
aad
mov
aad
mov
call
out
and
push
mov
mov
jo
push
addr16
inc
mov
fdivr
shlb
mov
inc
insb
addr16
fcmove
adc
je
in
outsb
sbb
pop
mov
clc
incl
mov
dec
mov
sahf
test
inc
mov
or
pop
icebp
jmp
es
jns
pop
mov
outsb
cs
leave
out
lcall
rol
fsubp
pushl
xchg
rcr
pushf
jns,pn
imul
mov
popl
addl
cs
stc
pop
not
dec
es
or
mov
fcompl
ljmp
jae,pt
mov
cmpsb
and
push
sbb
stc
sbb
pop
pusha
adc
sbb
mov
bound
push
into
pushl
push
xchg
rcrb
ret
fs
pop
mov
push
sbb
lcall
push
fs
mov
dec
xchg
pop
pop
jecxz
mov
jmp
incl
push
dec
push
not
inc
mov
add
pop
mov
cmpsb
xor
push
push
aaa
xchg
ret
mov
sub
mov
add
pop
mov
pop
std
mov
push
and
ljmp
sahf
mov
push
mov
pop
mov
subb
mov
mov
mov
push
mov
fucomi
push
iret
sbb
setb
pushl
rcl
loopne
fcmovb
push
cwtl
lcall
call
std
js
adc
lcall
push
mov
sahf
xor
rorl
icebp
mov
dec
add
pop
into
fidivrs
mov
cmp
jg
cmp
imul
aam
xor
fisubrl
xchg
mov
pop
sub
fdivs
gs
jmp
fsubr
test
arpl
iret
pop
out
cmp
mov
cmp
out
jno
cmp
xchg
in
cwtl
sahf
add
jbe
dec
loopne
xchg
ret
xchg
aam
inc
cmp
cmc
ljmp
insl
in
movsl
stos
lret
mul
xchg
sbb
ljmp
rorb
or
das
push
inc
and
or
pop
jecxz
loop
jg
and
mov
pop
jae
cmp
stos
xor
fmulp
add
mov
aas
cld
inc
pop
mov
xchg
mov
push
pop
lret
mov
fmull
adc
jg
dec
xchg
mov
jmp
add
jae
or
xor
bswap
xor
daa
fistl
jl
mov
mov
pop
rcr
mov
cmc
pop
or
fs
mov
sub
mov
ja
nop
sti
adcb
test
jo
insb
gs
mov
incl
xlat
push
jmp
fs
aas
mov
fildl
cmpsb
jecxz
incl
ret
lret
sbb
dec
pushf
push
xchg
lcall
push
dec
add
in
pop
cmp
jge
mov
jnp
or
cmp
or
je
sar
incl
push
xor
aam
push
xor
mov
push
or
sbb
int3
lods
add
jnp
ljmp
dec
les
xchg
or
xor
jp
mov
mov
shll
insb
sti
mov
jge
shrb
dec
mov
fs
pop
sti
pop
or
jge
stc
sbb
pop
push
push
sar
stos
dec
jmp
ss
push
hlt
inc
scas
aad
loopnew
mov
jnp
movsb
pop
push
sub
fs
rep
adc
adcl
xor
inc
push
clc
push
dec
fdivl
jo
ja
sub
jae
data16
fsubl
sub
decl
xchg
test
adc
lret
hlt
xor
pop
or
outsl
and
xchg
xor
cmpsb
push
dec
and
xor
dec
sbb
inc
ret
pop
mov
mov
sbb
shlb
lcall
dec
clc
aaa
jecxz
les
inc
add
andl
inc
push
jl
addl
call
je
jo
jae
xchg
rcrb
dec
nop
or
mov
leave
lock
nop
popa
daa
push
adc
loop
jg
lock
push
add
or
add
add
mov
sbbb
mov
lcall
ja
mov
add
jge
popa
xchg
push
rorb
pusha
daa
fwait
jle
divb
jbe
daa
mov
ss
xchg
mov
xor
js
cmp
aam
js
ja
adc
and
incl
rorb
push
push
xor
cmp
xchg
jp
imul
pop
and
in
jle
insb
lcall
push
pop
cs
jg
out
fcoms
jne
lret
cmpsb
push
fs
pop
mov
push
mov
rcl
inc
lcall
je
add
pop
push
push
ja
mov
nop
push
les
movsb
pop
or
push
push
mov
les
loopne
cmpb
add
fs
arpl
mov
imul
mov
mov
or
clc
aam
pop
and
pop
mov
arpl
mov
callw
pop
lock
into
xchg
ret
adc
clc
pop
jb
outsb
fnstenv
inc
mov
orl
add
xchg
add
cwtl
lds
ss
or
lcall
add
jo
pop
mov
jns
fists
mov
scas
sbbl
pop
xchg
sub
sbbb
ljmp
mov
lds
push
test
ja
ss
jae
mov
ss
scas
cli
js
dec
xor
add
cwtl
int
xorb
sub
pop
js
lds
pop
cmp
inc
add
xchg
fs
mov
jne
or
aad
mov
sub
jne
je
mov
mov
lock
test
push
mov
daa
rcrb
decl
sub
add
add
fwait
xor
rolb
inc
orb
mov
inc
mov
inc
xor
test
pop
icebp
adc
dec
lcall
loopne
fistpl
adcb
mov
sub
add
lock
lods
push
idiv
mov
adc
test
aaa
lock
push
jmp
dec
push
add
add
xchg
addr16
pop
jns
adc
add
outsb
jmp
mov
push
cltd
push
scas
mov
add
ja
je
insb
push
daa
jge
testb
outsb
lret
push
into
xchg
add
cmc
mov
ret
incl
or
imul
gs
add
add
mov
inc
mov
inc
mov
movsl
rcll
jle
lds
rcll
incl
pop
ret
mov
test
into
es
pop
cmpsb
xchg
push
adc
mov
xor
call
pop
rol
mov
inc
adc
cmpsl
or
pop
lods
aad
pushl
test
pop
mov
push
pop
pop
and
xchg
imul
call
aam
loop
popa
dec
pop
push
test
mov
jmp
jmp
jo
sub
and
xchg
movsb
xchg
aam
dec
or
cmp
ret
je
cmp
ret
jno
xor
inc
sbb
sti
push
xor
test
push
xchg
cwtl
push
dec
test
jb
test
or
test
out
ljmp
and
mov
pop
sub
pushf
repz
and
enter
or
leave
sub
stos
lcall
rorb
xchg
sahf
fwait
push
push
xchg
add
inc
pusha
ljmp
insb
mov
stos
add
cltd
or
mov
lods
push
add
push
add
divb
out
test
leave
mov
and
sub
mov
sbb
loopne
push
loopne
and
cld
pushl
or
or
lahf
iret
loopne
cmpsb
cmp
mov
cmp
push
setne
cmpsb
mov
jns
jb
adc
push
mov
out
jg
jmp
movsl
aas
ss
movsl
jg
fcoms
imul
nop
and
push
adc
mov
sub
sbb
xor
dec
sbb
lcall
call
movsl
push
lret
pop
sbb
inc
test
fs
mov
jmp
into
pop
push
lcall
mov
subb
iret
push
pop
inc
mov
data16
loop
fsts
aaa
ljmp
cmp
insb
xchg
imul
xlat
push
cmp
ljmp
add
mov
pop
cwtl
sbb
jns
mov
add
ljmp
push
add
sbb
test
inc
mov
test
mov
loop
ljmp
dec
mov
pop
mov
mov
pop
or
sub
mov
test
sbb
test
inc
stos
or
pop
push
call
movsb
test
lcall
pop
sar
jmp
xlat
cmp
inc
pop
lcall
aaa
std
ljmp
cmp
mov
dec
and
xchg
clc
add
jne
nop
adc
dec
shrb
or
adc
push
add
push
lock
inc
mov
pop
loopne
shrl
loopne
mov
add
cltd
sbb
push
mov
xor
push
adc
add
jle
decl
sbb
ds
pop
mov
stos
lods
pop
and
ffreep
mov
fstpt
adc
mov
inc
es
mov
shrl
divb
xor
adc
incl
sub
xlat
mov
cmpsb
jg
je
jae
outsb
ficoml
or
stos
in
lock
or
push
and
mov
incl
addr16
aam
mov
ss
iret
cmpsb
mov
mov
cmp
leave
jne
fistl
jl
mov
je
cmp
scas
clc
jmp
decl
mov
xchg
mov
sub
xchg
test
jb
insb
jp
mov
push
mov
loopne
mov
mov
addr16
fcmovnbe
mov
dec
scas
int3
mov
flds
sahf
xor
or
rol
mov
inc
xchg
fisubl
jo
loop
or
adc
call
sar
clc
stos
je
cmp
xchg
cmp
mov
mov
inc
mov
and
mov
jb
test
popa
xor
pusha
push
lods
mov
cmp
lahf
push
dec
mov
jb
xor
decl
sti
jne
mov
cmp
loopne
ds
and
pushl
les
jecxz
hlt
or
enter
sbb
add
pop
mov
jecxz
mov
scas
scas
orl
call
jne
sub
or
add
push
jne
jecxz
and
push
add
jb
mov
pop
add
pushl
jmp
insb
rcll
lods
into
adc
lcall
pop
push
push
jmp
or
push
jbe
dec
aam
repnz
aad
arpl
inc
sub
add
bound
aad
xlat
mov
pop
fidivl
adc
enter
decl
lock
xor
mov
cmpsl
movsl
mov
test
shl
xchg
dec
sbb
jg
and
pop
int3
add
inc
push
daa
jge
xchg
mov
jb
xlat
lods
mov
jmp
clc
jl
call
mov
cmpsb
push
jmp
or
mov
dec
mov
insl
jg
sbb
push
test
mov
dec
incl
fcoml
fwait
or
mov
cmpb
mov
icebp
ljmp
sti
mov
lret
mov
adc
lds
adc
pushl
adc
pushf
mov
lahf
cli
dec
mov
sub
adc
xchg
push
xchg
xchg
lret
stc
xchg
sub
sar
divb
jne
jno
cmpsb
xor
pusha
clc
mov
pushl
jmp
iret
adc
or
sub
pop
inc
stos
cli
lods
stc
in
mov
loopne
pop
sarb
or
jno
xchg
pushl
cld
cmp
pop
fcmovnu
push
rol
adc
aam
fnsave
mov
mov
fwait
xchg
add
push
testl
add
inc
pop
inc
dec
sarw
add
push
jl
lcall
incl
jne
sbb
pop
push
inc
inc
sbb
rorb
or
mov
pop
or
push
push
add
sub
mov
add
xor
out
xor
call
cmp
inc
aaa
push
xchg
test
push
shlb
rol
lcall
and
jp
cltd
mov
inc
mov
pop
jb
jg
inc
push
inc
cmp
decl
out
in
mov
std
arpl
pop
call
sbb
jbe
out
decl
mov
std
stos
mov
inc
sti
enter
cmp
cmp
es
in
mov
cmpl
fidivs
or
and
shlb
out
cmpsb
cmpsb
daa
cmpsb
xchg
int3
cmpsb
shlb
fidivrl
xchg
lcall
cmp
mov
pop
cmp
scas
lods
xchg
mov
outsb
jbe
lret
outsb
dec
cmp
sub
clc
scas
add
add
or
or
ficoml
jmp
decb
jo
fiadds
fldl
sbb
dec
fmull
mov
ret
add
push
in
out
sub
subb
test
les
pop
into
fwait
cltd
shlb
loopne
jno
ds
inc
add
add
pop
nop
orb
inc
cmpsb
jg
call
into
add
jo
cltd
loopne
mov
mov
cmp
outsl
xor
or
aaa
fadds
sbb
cwtl
mov
add
cli
bsf
aaa
mov
jo
and
std
push
leave
cmp
or
pop
cld
mov
ja
filds
nop
lret
dec
sbb
fucomi
dec
mov
pop
dec
add
adc
test
daa
in
decl
add
fs
mov
mov
push
add
call
pop
and
push
push
insl
add
mov
ljmp
in
fisubl
jg
jbe
clc
nop
test
jbe
jnp
sub
add
fcomp
es
sub
ljmp
insl
lds
outsb
lds
or
es
outsl
cmp
xchg
pusha
mov
pushl
adc
jg
scas
jg
jl
mov
cmpsb
and
fldcw
fwait
pop
es
out
arpl
cmp
fiaddl
pushl
jnp
xor
leave
insl
jne
xchg
scas
inc
cmpl
or
loop
les
sbb
in
lret
jge
rcrb
frstor
in
add
ds
add
xlat
dec
and
inc
in
cs
jg
sub
xor
push
mov
sahf
test
jmp
cs
cli
cmp
int3
popa
dec
test
pop
stos
loope
jo
gs
enter
jecxz
xchg
leave
sub
inc
mov
inc
xor
and
pop
dec
pop
sar
add
cli
loopne
mov
or
shlb
xchg
and
jg
sub
mov
dec
test
pop
mov
xor
jne
lcall
out
add
repz
ret
test
xor
andl
jne
roll
aaa
rcl
and
mov
loop
adc
jmp
les
xor
movsl
mov
call
pop
pop
int
mov
mov
sub
jb
fnstenv
movsb
dec
push
insb
xor
movsl
pusha
add
cmp
jmp
cs
and
add
push
xchg
sar
pop
sahf
sbb
pop
xchg
pusha
adc
pop
jmp
scas
cs
shll
mov
nop
call
mov
and
or
and
mov
inc
add
pusha
pop
cmpsl
mov
fwait
jno
mov
inc
cmp
add
mov
ja
je
test
dec
pop
inc
js
loope
mov
inc
mov
jl
decl
out
orl
mov
aas
hlt
fimull
or
jg
dec
jo
mov
mov
sbb
add
adc
pop
push
cmp
repnz
cli
adc
mov
jmp
mov
pushl
mov
ds
je
mov
inc
pand
dec
setge
shr
jle
movsl
add
push
push
sarb
stos
xchg
xchg
lret
lods
or
cld
xor
int3
adc
xor
jg
push
xor
shll
pop
ljmp
orb
aaa
fsubr
orb
adc
mov
jnp
mov
pusha
jmp
sub
and
dec
xor
jmp
mov
xor
ds
int
push
xchg
dec
cmp
push
sti
cmp
push
test
pop
sub
or
sahf
mov
mov
loop
mov
and
inc
mov
adc
sar
dec
sub
dec
and
pop
ret
cmc
enter
cmp
and
and
mov
mov
xor
addl
mov
inc
or
ss
andb
jmp
cs
mov
push
popa
inc
inc
adc
clc
inc
or
jmp
andb
mov
sub
xchg
bound
and
fs
ss
mov
cmp
jmp
popa
mov
in
push
int
and
aad
push
in
mov
mov
jg
add
mov
arpl
mov
into
insl
xor
shr
stos
or
mov
or
in
inc
inc
and
jg
call
mul
inc
popa
aas
divb
std
mov
lods
fsubrp
rolb
stc
lret
outsl
mov
cld
xor
decl
ret
negb
leave
jmp
mov
inc
cmc
cli
xchg
xor
pop
test
fstpt
movsb
cmp
repz
xlat
push
popf
mov
clc
nopl
pop
int
push
cmp
sub
cmp
inc
or
inc
pop
cltd
je
shlb
loopne
call
xor
int3
loope
inc
xchg
xchg
add
cmc
int
cltd
push
xor
cmpsb
mov
xchg
or
mov
outsl
incl
add
aaa
cli
fldenv
andb
mov
lcall
loopne
jecxz
dec
dec
movsl
aam
dec
push
int
adc
lahf
xor
insl
in
aas
push
dec
pop
dec
push
xor
idiv
sub
push
adc
out
pop
les
addb
test
inc
push
and
inc
push
xchg
add
xchg
push
push
jp
ljmp
jg
imul
inc
adc
mov
in
cmp
push
dec
scas
movsl
lods
lahf
sar
lcall
orb
inc
stos
add
test
inc
test
sub
pushl
loope
mov
ret
push
mov
cs
cmp
adc
ljmp
nop
mov
movsb
pusha
adc
test
xchg
nop
add
add
or
aaa
inc
shrb
inc
ds
rorl
outsb
sbb
jg
add
mov
loope
std
mov
inc
test
inc
mov
loopne
push
lods
xor
and
call
or
ret
jo
jbe
jge
lea
imul
dec
decl
loop
or
mov
scas
jno
inc
mov
mov
addl
inc
or
mov
ds
in
inc
outsl
jmp
push
mov
cli
xor
xor
dec
lcall
inc
sub
fisubl
je
je
jecxz
not
cmp
mov
lahf
xlat
jmp
lcall
push
cltd
repz
pop
in
pop
addl
dec
pop
adc
clc
movsb
add
jg
or
sahf
icebp
or
jg
pop
jl
fdivp
lock
or
pop
xor
cmpsl
scas
inc
add
mov
popa
lock
cli
in
mov
sub
jmp
adc
or
mov
push
nop
dec
push
xchg
cli
ljmp
adc
push
pusha
inc
dec
test
mov
adc
jmp
push
stc
aad
inc
dec
stos
push
xor
push
and
push
fwait
inc
ljmp
lret
xorl
push
add
adc
aam
dec
pop
sbb
subl
call
inc
cli
pop
xchg
and
xor
call
dec
decl
jecxz
mov
daa
ljmp
lds
cmp
cwtl
mov
loope
loop
loopne
test
and
std
inc
push
jp
outsl
mov
std
decl
adc
push
xchg
sbb
and
pop
add
pusha
ss
rclb
lcall
or
incl
dec
lea
jbe
outsb
int3
nop
mov
insb
clc
cmp
int3
jae
aad
inc
outsb
lcall
and
cmc
loopne
insl
cmovb
negl
mov
inc
mov
or
mov
jecxz
iret
loope
daa
mov
rep
outsl
or
add
leave
call
and
out
xchg
jae
lcall
cmp
divb
jne
sbb
pop
add
stc
movsb
dec
xchg
cmpsl
xchg
popl
lods
mov
pushl
fcompl
faddl
cmp
pop
xlat
push
sbb
loopne
inc
add
sub
outsl
dec
pop
insl
adc
mov
jns
sbb
rcll
pop
mov
sub
push
xor
loopne
rcrl
jp
adc
test
clc
jg
enter
sbb
dec
sub
rcrb
and
aad
outsb
cli
outsb
mov
cld
jecxz
dec
dec
sub
xchg
inc
cmp
and
aad
dec
mov
pushf
mov
test
stos
xchg
mov
rcll
mov
sub
pop
nop
or
decl
daa
add
add
movsl
xor
stos
sub
adc
addr16
insl
xchg
push
shl
lcall
adc
push
dec
push
mov
and
pusha
mov
in
incl
sbb
iret
xchg
inc
inc
mov
mov
lret
incl
cwtl
sbb
and
xchg
ret
cwtl
add
inc
lea
sbb
inc
shrb
lea
mov
pusha
test
xor
js
mov
loope
in
inc
cmc
leave
pop
stc
sbbb
popf
mov
jg
cmp
mov
sarb
mov
movsl
inc
fbstp
lods
int3
shlb
ret
jae
out
mov
lcall
out
lods
push
xor
data16
cmpl
fwait
dec
adc
cmpsl
ss
jns
jecxz
hlt
incl
inc
fwait
cmp
int
mov
dec
cmp
aaa
lea
and
push
push
mov
lds
movsb
rsm
jg
ret
adc
movsl
loope
xor
jno
lret
out
or
adc
scas
lds
push
hlt
test
dec
enter
xor
loopne
xor
pop
movnti
clc
loopne
sub
in
jmp
and
outsb
sbb
add
xor
shrl
lcall
gs
sub
data16
stos
mov
pop
mov
pop
aas
inc
cmp
and
lahf
pop
or
jle
fldl
xchg
fidivs
and
jb
xchg
pop
adc
arpl
jecxz
test
or
sar
inc
sub
dec
imul
insl
pop
loope
ljmp
inc
test
iret
sti
push
loopne
adc
cmp
ljmp
add
add
cmp
rcrb
adc
sub
les
dec
and
sahf
je
jno
lea
mov
scas
fiaddl
push
ffreep
pop
mov
add
sub
fcomps
add
pop
popa
in
clc
data16
pop
cltd
pop
hlt
ja
jg
adc
imul
sbb
jmp
mov
mov
call
stc
mov
inc
xchg
xor
stc
cs
push
cmp
push
popf
div
cmpsb
dec
popa
mov
cmp
add
fnstcw
mov
pushf
xchg
imul
xor
out
push
adc
lods
mov
sbb
mov
mov
dec
loope
ljmp
inc
sbb
mov
or
pushf
adc
decl
cmp
sub
sahf
lret
inc
push
dec
adc
adc
imul
mov
jmp
test
mov
ret
fists
call
push
mov
sbb
sarb
sub
mov
cltd
adc
decl
pop
push
adc
mov
push
xor
rorl
and
call
loop
scas
mov
mov
xor
lret
mov
cmp
arpl
mov
arpl
dec
and
mov
nop
out
pop
xchg
xlat
ret
cmpsb
ljmp
repnz
adc
mov
decl
andb
mov
das
push
cmp
pop
or
shll
mov
xchg
xchg
sbb
jg
jg
sbb
inc
test
mov
dec
or
and
mov
ds
clc
push
mov
mov
mov
popl
popa
inc
insl
lcall
fs
sbb
movsb
inc
dec
movsb
imull
fcomps
and
aas
jo
sub
das
clc
incl
jo
and
push
or
roll
sbbl
add
movswl
leave
icebp
call
fdivrs
adc
mov
hlt
push
cld
lcall
adc
mov
jecxz
xchg
inc
jmp
jmp
daa
push
cmp
sub
sbb
pop
mov
mov
push
sbb
add
das
call
cmp
je
push
add
mov
das
cmp
call
add
pusha
sub
adc
xchg
cs
xor
call
cltd
push
jb
lret
sub
cwtl
sub
mov
cmc
mov
enter
or
push
cmp
jmp
mov
xchg
cmp
mov
add
xor
cmpl
sub
dec
pushf
mov
ss
dec
lods
or
call
cmpsb
or
pop
andb
imul
fstpt
dec
leave
xchg
inc
and
push
sar
into
pop
mov
jo
mov
jge
test
ror
test
cld
into
add
or
dec
orb
xor
add
adc
inc
dec
lods
pusha
fcomip
ljmp
cmp
fs
cmc
sbb
and
xor
int3
mov
xorl
incl
repz
mov
add
and
andl
test
jmp
dec
adc
test
bound
mov
jo
ss
fldl
insb
dec
sti
pushl
lods
mov
add
fldl
add
mov
sbb
orl
in
mov
add
subb
sbbb
mov
inc
pop
shrb
add
cmp
mov
inc
enter
cmp
push
fcoms
ds
das
jg
cmpsb
rclb
jl
inc
dec
mov
sub
in
inc
inc
cmc
fistps
or
or
fsts
pop
jb
xchg
adc
push
pop
sbb
std
adc
lret
push
cmp
lcall
popf
and
fstpt
test
imull
call
xor
lret
enter
int3
das
jns
fwait
and
jge
pop
adc
push
inc
add
jg
sub
sub
dec
adc
aad
ljmp
mov
xchg
ret
mov
add
push
enter
rolb
add
sbb
cmpl
sbb
int3
mov
test
sub
dec
loopne
jb
sub
dec
imul
fldenv
mov
pop
shlb
dec
mov
push
sahf
adc
xchg
inc
mov
cwtl
repnz
stc
cmpsl
mov
scas
cli
dec
fcoms
lock
add
jmp
or
mov
push
jmp
insl
in
insb
call
inc
insb
mov
ltr
call
nop
aad
cmp
add
pusha
mov
cwtl
int
xchg
insl
fnstenv
test
sub
push
push
or
or
ljmp
test
cmpb
rcrb
sarb
jge
outsl
incl
and
adc
fisubl
test
cmp
cmpsb
cmp
cmc
andl
ljmp
xor
inc
pop
scas
or
daa
ljmp
mov
sbb
mov
adc
mov
push
mov
sub
fdivl
nop
enter
les
push
add
loopne
inc
loopne
ljmp
cmp
rcrb
aam
xchg
out
shrb
lods
cmp
sub
lcall
mov
lret
dec
aam
sub
and
out
pusha
das
add
das
mov
push
cld
fimull
mov
cmp
push
mov
xchg
mov
psubd
in
lcall
hlt
add
and
lcall
mov
rclb
lock
dec
into
and
sub
pop
subb
sbb
repz
cld
push
sub
mov
or
repz
adc
lcall
adc
dec
jnp
das
mov
das
inc
add
clc
sahf
rolb
mov
ss
inc
cld
aas
fadds
shlb
adc
or
add
inc
pusha
aas
clc
and
sub
pop
sub
push
outsl
aad
nop
add
push
dec
lcall
inc
inc
mov
xlat
mov
test
stos
les
sub
push
std
jnp
stos
pmaxub
xchg
imul
push
or
lret
push
shlb
mov
pop
xor
xor
loop
enter
push
cld
mov
or
adc
mov
inc
mov
pop
or
jae
sub
add
push
cmp
fs
mov
bound
subl
bound
idiv
mov
xor
pushl
out
bound
arpl
roll
sub
sbb
adc
insb
loop
add
push
push
clc
or
xor
jle
or
test
inc
push
popa
inc
rolb
sahf
orb
push
or
in
loop
nop
add
frstor
push
orb
bound
subb
add
fs
aas
or
daa
push
jle
push
sub
in
pop
jg
ffreep
push
mov
pop
incb
pop
pop
scas
fistpl
pop
andb
pop
push
out
clc
incl
dec
fadd
mov
lds
xlat
js
pop
or
sub
push
mov
fmul
std
mov
adc
add
incl
or
int
daa
sub
mov
sbb
mov
out
adc
sub
push
mov
mov
jle
push
push
mov
mov
pushf
jne
cmpsl
call
decl
sahf
movsb
pushf
jae
cmp
pop
imul
rorb
out
hlt
into
add
popl
add
adc
scas
sbb
mov
or
idiv
aad
sbb
lock
mov
addb
push
cli
jmp
add
push
pop
push
xor
andb
pushl
int3
add
xchg
xorb
adc
cmp
cwtl
je
xlat
push
pop
xlat
pop
xchg
in
decl
stos
or
jnp
into
mov
mov
push
imul
or
jecxz
adcb
fcomi
xor
aad
cmp
xchg
or
pusha
movsl
ficomps
aad
xchg
or
jg
js
and
int3
into
insb
int3
sahf
push
sbb
into
out
or
in
iret
imulb
clc
lcall
jne
or
xor
dec
sub
jecxz
loop
js
outsb
add
mov
dec
pusha
pop
add
mov
add
cmp
fiadds
stos
fimuls
icebp
pushf
pop
xchg
sub
and
gs
jle
sub
pusha
in
enter
clc
js
rcr
out
jmp
in
push
test
js
sbb
add
ljmp
es
hlt
inc
out
pop
mov
mov
pusha
les
mov
push
out
adc
mov
in
ljmp
mov
popf
inc
insl
ret
sbb
nop
mov
push
mov
sub
decl
movsl
jmp
daa
mov
inc
mov
xor
mov
xchg
sub
or
adc
stos
mov
pop
aam
add
ret
adc
lea
and
out
jg
and
and
std
and
in
stos
fs
scas
and
jb
imul
fldt
xchg
and
cmpsl
jle
dec
xor
mov
cmp
pop
push
arpl
mov
sub
lret
mov
filds
add
scas
and
cmp
push
cmp
and
sub
call
pop
shrb
pop
fadds
repz
sub
sahf
ficompl
decl
lcall
push
pop
jle
mov
xlat
mov
mov
int3
lods
jle
cwtl
hlt
mov
repnz
add
lock
addr16
lcall
adcl
mov
loop
loopne
sub
lahf
cld
decl
mov
xor
xchg
shr
sbb
push
andb
bound
bound
testb
add
out
dec
adcb
jecxz
shlb
sub
and
xchg
cmp
add
inc
and
addb
mull
adc
das
xor
add
in
dec
fildl
adc
fadds
xchg
je
loopne
mov
in
test
aas
cwtl
test
cmp
clc
outsl
jg
jo
imul
lahf
xchg
add
loopne
lock
repnz
clc
ljmp
out
daa
push
pop
jbe
les
call
aaa
scas
imull
mov
out
xor
mov
ljmp
add
jo
ret
push
add
ljmp
adc
sysenter
jne
push
jmp
out
ljmp
push
mov
jp
adc
adc
test
nop
andl
lock
outsl
into
mov
call
pushf
imul
pop
sbb
push
push
into
dec
mov
dec
add
jb
sahf
daa
xchg
cs
push
xor
and
daa
pop
shlb
outsb
or
push
cmovle
push
cld
lahf
sti
xchg
cs
xor
push
jns
mov
pop
xor
xchg
mov
push
pushl
mov
shlb
pusha
shrb
mov
fidivrs
cmp
add
loopne
js
hlt
or
orl
imul
mov
push
std
lcall
mov
add
pushf
push
loope
cmp
outsl
pushl
or
pusha
test
sub
cld
and
stc
in
cmpsb
jmp
ljmp
icebp
push
das
inc
cld
dec
test
add
call
cmp
insl
icebp
ficoml
xor
ret
sub
xor
add
adc
cmpsb
popa
mov
popa
mov
fsubrs
xchg
lock
adc
inc
lcall
lods
fs
lcall
cwtl
dec
and
insl
andl
adc
or
pop
lcall
dec
jo
or
sbb
int3
mov
xor
addr16
jmp
mov
bound
inc
lods
ret
mov
push
jge
call
movsl
cmp
sbb
jle
int3
mov
pusha
and
dec
xor
in
in
or
shll
es
jmp
jns
mov
push
jne
mov
cmpsb
int
loope
push
dec
xchg
movsl
call
xor
xor
push
cmpsl
ljmp
clc
das
and
jmp
cmpsl
sub
pusha
pop
stos
sbb
or
in
test
jle
call
movb
ds
add
mov
mov
sbb
mov
cmpb
mov
xchg
mov
stos
ja
mov
mov
jge
repz
mov
or
mov
fistpll
xor
mov
xor
loope
incl
pop
cmovbe
pop
adc
and
cs
xor
jg
mov
adc
enter
and
jl
rolb
jg
lods
call
mov
or
xor
cmp
lret
scas
call
fldt
inc
inc
sub
sub
pop
mov
adcb
es
sar
icebp
or
or
mov
jmp
cltd
bound
xor
cmpsb
fwait
insl
mov
fmuls
xor
icebp
lcall
ds
fldt
test
push
jns
incl
lret
inc
lock
dec
cmp
call
clc
ja
ljmp
ds
or
push
cwtl
inc
mov
mov
inc
and
add
pushl
mov
rol
mov
add
push
stos
into
sbb
mov
push
mov
ljmp
in
scas
shll
insl
xor
inc
call
ficomps
sahf
or
jne
cmp
out
mov
out
adc
mov
test
enter
and
jg
jmp
decl
rcrl
cmp
or
les
xchg
andb
dec
fbld
fbstp
inc
int3
adc
xlat
adc
sbb
in
ljmp
xor
dec
and
test
mov
pop
push
shrl
jg
sub
pop
and
arpl
nop
nop
dec
pop
push
ljmp
or
dec
loope
pop
adc
and
adc
adc
nop
incl
cmp
call
insb
mov
jb
jno
adc
lock
out
clc
adc
insb
add
cmc
rolb
daa
test
ret
inc
xchg
sub
cwtl
mov
decl
ret
movsl
push
sbb
add
dec
xor
dec
aad
rclb
les
push
decl
xchg
pop
insb
aaa
in
mov
insl
aaa
sub
mov
les
sahf
stos
jbe
adc
add
jmp
push
mov
addl
push
cltd
inc
inc
or
cmp
pushl
aad
fidivs
imul
cmpsl
push
xchg
cmp
inc
pop
repz
loope
pushl
jg
xchg
add
cmp
addr16
mov
fcomip
fcomip
in
dec
es
aaa
dec
in
sub
sahf
out
cli
jmp
pop
lcall
and
clc
loop
cmp
test
push
inc
mov
lahf
xchg
xchg
in
sub
lock
jmp
pop
lods
and
cmp
mov
pop
xor
add
andb
dec
bound
push
pop
adc
lds
dec
ja
popa
or
push
cmp
push
outsb
jg
dec
inc
mov
cld
popa
or
adc
xchg
add
and
and
mov
fcomip
sbb
inc
dec
dec
mov
loopne
push
xchg
rolb
sub
push
sbb
mov
stos
mov
xchg
lods
stos
and
ljmp
lds
stos
mov
aad
and
jmp
fdivl
mov
and
pop
jne
push
xor
jne
jb
jmp
outsb
push
mov
clc
call
xor
mov
xchg
cld
in
les
andl
xor
xor
xchg
pop
dec
jg
popa
movsb
xor
arpl
mov
xchg
or
call
jmp
jno
sbb
xchg
xchg
and
adc
es
or
lcall
sub
dec
cwtl
add
roll
nop
inc
add
rolb
movsl
pop
inc
or
inc
adcb
ja
sarb
xor
push
adcb
and
dec
mov
sbb
decl
lock
or
pusha
mov
push
ret
mov
jno
and
pusha
and
aaa
loop
decl
and
adc
int
mov
inc
fiadds
add
mov
mov
cltd
ret
mov
enter
xor
dec
xor
ljmp
repz
popa
out
push
inc
push
pushl
and
call
xorb
out
dec
inc
in
push
sub
ret
inc
jns
mov
insb
xlat
cmp
push
out
add
cmp
jmp
inc
add
xor
mov
mov
jnp
test
dec
dec
dec
incl
or
and
inc
mov
fcomip
lcall
sub
dec
rcl
shl
sbb
push
scas
in
jmp
stc
aam
mov
xchg
hlt
lcall
mull
xor
bound
movsb
mov
lcall
imul
inc
js
imul
mov
mov
push
cmpsl
adc
call
pop
xor
pop
and
dec
ljmp
jmp
insl
lahf
mov
out
add
aad
push
sub
cli
movb
call
ljmp
test
subb
sub
imulb
sar
pushl
mov
xor
pop
fmull
lods
imul
pop
sbb
jo
mov
nop
cli
jmp
inc
add
push
mov
xchg
pop
mov
addl
clc
jb
aad
add
inc
dec
push
mov
call
jle
xorb
or
dec
mov
cmpsl
push
mov
jo
sbb
incl
fdivr
mov
and
inc
jbe
aas
inc
rorb
lock
adc
jmp
add
ret
and
jp
out
xchg
movsb
mov
pop
push
mov
out
leave
pop
pop
xorb
xchg
dec
mov
and
roll
out
lcall
xorb
dec
push
rcll
aam
dec
jecxz
mov
and
adc
mov
shlb
sarb
mov
adc
mov
cmp
call
pusha
loope
mov
pop
add
xchg
loope
lea
mov
incl
adc
mov
pop
mov
pop
cmc
mov
xchg
ret
xlat
inc
sub
cmp
dec
xor
fcoml
jg
movsb
push
lock
bound
addl
mov
aaa
repnz
jg
jl
and
adc
pop
insb
mov
addr16
enter
pop
or
push
or
pushl
and
lods
dec
scas
inc
mov
pop
mov
decl
decl
cmp
pop
std
push
and
mov
stos
push
dec
std
inc
mov
mov
sbb
out
push
jno
sub
lods
test
seto
pop
adc
push
movsl
hlt
decl
pushl
andl
or
fnstenv
cmp
jp
into
pop
aas
and
add
loopne
stos
inc
or
xor
adc
aam
jl
mov
loop
sub
inc
jmp
xchg
push
xchg
cli
loope
loopne
cs
adcl
add
ja
rcr
jne,pn
into
ljmp
arpl
stos
lea
and
lret
sub
stos
mov
stc
fcomps
mov
mov
in
cmp
xor
cmp
push
sbb
test
cmp
cli
inc
fmuls
and
or
inc
leave
mov
push
pop
cmc
dec
jo
xor
test
mov
mov
stos
loope
mov
fsub
adc
js
inc
aas
jl
add
xor
cs
jmp
popa
or
mov
adc
pusha
mov
adc
lods
fcomip
out
and
daa
jo
or
adc
mov
dec
inc
popa
pushf
jecxz
cmp
cli
add
mov
or
std
push
adc
xchg
and
mov
xchg
clc
xchg
sbb
std
incl
sub
xchg
adc
ror
inc
stos
out
jg
add
or
sub
aaa
movsl
or
call
xchg
aam
es
mov
incb
aaa
sub
decl
les
or
ds
clc
or
clc
incl
sbb
or
add
mov
nop
or
mov
add
adc
xchg
test
dec
or
enter
mov
stc
jl
mov
adc
sbb
add
fs
leave
cmp
pop
mov
scas
call
xchg
lcall
push
pop
push
arpl
mov
nop
mov
leave
dec
shll
incl
sbb
and
or
pop
mov
push
mov
cwtl
test
rolb
aaa
cld
inc
es
mov
ljmp
cli
dec
pop
dec
mov
rcll
dec
or
mov
fsubl
dec
push
sbb
cld
or
inc
cld
jmp
shlb
lret
adc
pop
add
ret
cli
jg
shlb
and
mov
lret
sbb
xchg
leave
pop
mov
dec
inc
xchg
mov
mov
scas
pushl
xlat
xor
fstp
or
sbb
fmuls
xchg
or
add
incl
mov
fisttps
dec
cmp
int3
ret
push
insb
push
inc
popa
dec
xor
add
add
sbb
dec
adc
ljmp
orl
scas
pop
js
sarl
add
rclb
lds
pushf
pushf
cmp
mov
push
cmp
pop
mov
add
ret
inc
xor
loopne
clc
inc
subb
pop
and
add
mov
fnstcw
inc
sbb
and
inc
push
cli
call
sahf
dec
add
fisttpll
fstp
cmp
jmp
ret
xchg
add
mov
inc
mov
add
lcall
mov
sub
pop
dec
insl
fadds
jb
add
cmp
sub
or
dec
sbb
pop
xor
orl
jo
add
or
dec
nop
ds
mov
syscall
rorb
sub
add
mov
sbb
add
paddw
push
dec
std
xor
pop
movsl
pop
xor
mov
call
pusha
mov
mov
or
fwait
mov
inc
mov
cld
and
mov
jg
rcr
push
and
leave
jb
or
hlt
call
push
mov
leave
jg
dec
pusha
inc
and
jge
decl
push
push
cwtl
les
mov
push
mov
mov
adc
mov
add
scas
xor
mov
enter
adc
jmp
mov
adc
leave
push
or
adc
mov
cld
and
shlb
loop
sbb
and
shlb
ljmp
sub
mov
fnsave
mov
cmc
xchg
popf
add
xchg
out
mov
rolb
sbb
or
adc
mov
sub
shll
insb
sbb
js
jmp
pop
clc
fdivrl
les
loopne
push
dec
sbb
inc
call
mov
daa
repnz
andb
inc
xor
add
or
hlt
inc
sbb
sarl
cmp
or
cld
scas
adc
daa
nop
rcrb
add
or
push
repnz
pop
dec
pushl
popf
test
adc
cmp
xor
es
push
popa
pop
push
adc
sti
jmp
inc
incl
adc
cwtl
cltd
xor
cwtl
mov
or
mov
add
fnstcw
xor
sub
push
mov
subl
adcb
dec
jb
in
gs
lcall
cmp
test
enter
cmp
and
sub
push
ljmp
sbb
fwait
add
dec
ljmp
mov
xchg
xchg
and
or
pop
repnz
fsubs
sbb
jl
lcall
jmp
sbb
and
iret
sti
cmp
xchg
xchg
fs
push
sbb
and
or
sarb
in
loopne
sbb
test
inc
dec
test
aad
or
mov
iret
mov
mov
gs
ljmp
data16
pushl
leave
pop
mov
cmp
push
lret
push
inc
or
or
adc
and
pop
cmc
lcall
jle
mov
jmp
cmp
fcompl
das
dec
in
mov
out
pusha
sbb
hlt
loopne,pn
jb
fdivl
adc
ljmp
frstor
popf
rclb
and
pop
jne
mov
shll
dec
pop
popf
push
cli
xchg
popa
std
jg
adc
and
jge
sarl
loop
jg
sbb
int3
add
sbb
sbb
aad
mov
fucomp
lods
and
sub
loopne
jg
jmp
rclb
sub
add
cmp
sahf
push
dec
int3
pop
dec
hlt
pop
xchg
mov
decl
jecxz
add
cmp
cmp
or
jg
cmp
pop
jns
daa
push
cs
adc
cmp
cmpl
addb
xchg
xor
clc
mov
pusha
sbb
sbbb
adc
movsb
add
jl
xor
inc
dec
add
clc
int
ljmp
and
add
les
mov
xchg
cmp
push
inc
dec
addl
out
test
jg
movsb
mov
dec
movsl
xchg
push
sbb
ljmp
loopne
mov
or
lahf
lret
sub
stos
out
bound
cld
dec
lock
cwtl
and
xchg
adc
mov
pushl
decl
cmpsb
out
mov
ljmp
mov
stos
es
hlt
xchg
fwait
incl
xchg
cmpsb
scas
ljmp
pop
push
sbb
dec
mov
xchg
jb
push
jge
jnp
sbb
decl
clc
pop
bound
mov
dec
cwtl
loope
aaa
movsb
pop
dec
inc
std
dec
stos
test
leave
mov
adc
mov
jo
mov
jg
add
inc
push
insl
lret
stos
outsl
out
push
sbb
adc
mov
das
adc
and
lret
push
lret
jb
push
lds
adc
call
cwtl
or
loop
xor
je
push
je
bound
push
sbb
xor
lcall
test
mov
push
mov
cmpsl
sahf
in
sub
cld
call
in
jmp
inc
sub
inc
adc
inc
adcb
or
add
insb
inc
sbb
lcall
sub
inc
loop
orl
dec
cmp
and
sahf
dec
test
test
std
incl
sahf
adc
adc
cmp
movsb
and
stos
jg
and
ret
xor
lock
sub
bound
les
ds
rclb
add
shrb
sbbl
push
insb
and
in
ret
cmpb
sub
call
sub
xor
dec
push
cmc
stc
fldcw
fiadds
std
outsl
push
test
cmpb
imul
xor
push
out
into
mov
xchg
stos
subb
jg
mov
dec
sub
sub
hlt
dec
push
jmp
aad
add
shll
fs
mov
xchg
bound
popa
add
call
sbb
xchg
in
cmp
stc
fcomip
jb
xchg
mov
cs
aam
cli
pop
mov
push
adc
push
mov
sti
nop
ret
xchg
addb
mov
xchg
jl
push
push
cli
adc
stos
popf
test
lcall
xor
je
mov
mov
push
ud1
xor
aad
add
mov
subb
xchg
add
or
push
fildll
dec
jae
bound
insb
pop
cmpxchg
das
pop
sarb
mov
incb
jo
push
enter
loope
sti
lcall
cmp
inc
dec
movsb
mov
fmul
lret
and
adc
sub
jle
inc
or
mov
call
fldl
sahf
add
fldl
dec
inc
sahf
fnsave
xor
incl
xorb
enter
aaa
push
inc
adc
pop
fs
iret
mov
xor
ret
rorl
add
sbb
inc
and
inc
aaa
pushf
sbbl
lock
jb
mov
es
sbb
cwtl
js
push
hlt
incl
pop
push
fsts
pusha
add
sbb
inc
mov
pushl
inc
dec
int3
ret
add
pop
add
out
lea
cmp
pop
sbb
aas
add
outsb
push
cmp
test
jmp
xchg
movsb
pop
mov
out
push
out
movb
das
cli
popf
mulb
or
or
lcall
decl
aam
add
dec
mov
and
push
lcall
fistl
pop
clc
mov
add
dec
mov
dec
mov
xchg
push
outsb
pop
arpl
js
mov
movsb
mov
dec
scas
mov
jo
sbb
xchg
sbb
pop
mov
dec
mov
pop
loopne
pop
cmc
sbb
cld
ss
lcall
mov
inc
xchg
push
cld
bound
sbb
jl
adc
sbb
xchg
push
dec
jmp
sbb
mov
inc
sarl
xchg
loope
cmp
push
add
test
xchg
lock
repnz
dec
lods
jmp
mov
add
add
in
sbb
lret
push
lods
cmp
pop
mov
das
mov
add
popf
jns
or
in
xchg
jo
test
sarl
inc
jno
loop
jp
cmpsl
loope
lcall
divl
lret
icebp
fstpt
adc
sub
bound
push
cld
fbld
sub
test
dec
xorl
fiadds
decl
outsb
or
je
rolb
sub
clc
call
fdivr
aaa
jge
sbb
jno
sub
fs
in
adc
subl
mov
and
adc
lcall
inc
mov
lods
loop
sbb
inc
out
or
sbb
lds
call
clc
xor
dec
xor
lret
xchg
sbb
jae
aas
repz
incl
adc
mov
movsl
inc
imul
imul
and
add
jmp
ret
sub
dec
ret
sbb
insb
std
mov
xor
mov
shll
push
adc
testb
jg
mov
cld
pop
movsl
clc
cvttps2pi
ljmp
mov
sub
ret
pop
rcl
scas
ret
pop
cltd
mov
jmp
inc
adc
in
cwtl
ljmp
test
cmp
xchg
mov
idivl
movsl
add
cmovle
mov
pop
dec
jg
or
je
cs
jns
scas
sub
jnp
or
jo
les
test
outsl
add
sbb
push
lahf
out
sahf
xor
fsubl
push
pop
mov
mov
sub
adc
ret
adc
xchg
xor
push
jns
frstor
daa
and
pop
loopne
sub
pop
xor
call
ss
inc
ss
pop
add
sbb
add
addl
mov
inc
pusha
not
pusha
decl
dec
add
ret
sub
ret
incl
mov
inc
and
les
push
add
jno
popa
and
rcrb
push
inc
pop
shrb
call
je
mov
scas
leave
sbb
rcr
adc
cmp
lea
cmpb
jo
add
push
pop
sbb
push
mov
fcmovnu
xchg
das
outsb
fcomps
adc
sub
es
fsts
dec
cmp
repz
decl
clc
add
lea
fists
jns
loope
adc
stc
inc
in
and
jmp
cmp
mov
test
push
inc
jmp
push
dec
mov
incl
lcall
inc
xchg
dec
jbe
mov
xchg
mov
push
xchg
push
rolb
mov
add
or
mov
mov
pop
mov
add
mov
mov
push
xchg
xchg
enter
out
shll
movsl
sub
xor
jp
adcl
mov
jp
adc
mov
mov
sub
push
xchg
inc
cmpsl
add
add
fists
cmpsl
jb
je
sub
cs
cmc
inc
clc
in
pop
shll
stc
mov
add
mov
jb
pop
xchg
scas
les
call
push
cld
cmp
call
cmpl
cltd
push
add
jo
inc
mov
mov
ljmp
and
add
ret
or
mov
inc
outsl
jg
mov
or
fdiv
ret
or
fsub
ret
and
ret
adc
es
mov
sbb
add
cmc
push
add
fs
or
in
xor
rorl
incl
lea
sub
lods
mov
mov
lret
sub
les
mov
cmp
sar
pop
jo
adc
inc
add
std
mov
rorl
loop
or
hlt
jecxz
rorb
adc
orl
clc
mov
or
jne
push
and
bound
mov
push
hlt
xor
mov
mov
push
mov
sbb
into
adc
in
push
dec
mov
inc
mov
cmp
jbe
insl
sahf
jns
mov
lcall
add
or
push
sbbl
add
negb
adc
cmp
jb
push
inc
pop
cld
mov
push
xlat
loop
sbb
call
or
push
shrb
incl
sbb
daa
dec
sbb
ljmp
incl
xchg
jle
sub
js
bound
stos
mov
stos
jns
stc
sbb
decl
push
xor
push
cmp
mov
dec
or
sub
sbb
pushl
stos
mov
repnz
imul
shrl
stos
xor
pop
gs
mov
cld
sub
pop
decl
xor
mov
in
dec
pushl
das
test
fidivl
inc
nop
sbb
add
ret
cmp
test
in
push
pop
dec
cmp
aam
pusha
mov
xor
mov
out
sub
mov
mov
fldt
mov
sarb
jnp
mov
add
dec
dec
dec
adc
clc
mov
sbb
jae
xchg
cs
push
or
int3
inc
les
outsl
jmp
jle
inc
adc
or
outsl
cld
adc
push
cmpsl
jno
pop
fmuls
lock
mov
xor
cmp
add
insb
push
leave
and
jmp
popf
jg
dec
xor
pushl
rorb
ret
xchg
jle
inc
cmp
lret
xchg
lds
insb
inc
iret
and
add
cmp
pause
cld
call
clc
std
cwtl
jge
es
rolb
adc
mov
xchg
add
icebp
mov
pop
mov
inc
int3
pusha
pop
dec
sar
push
sahf
add
or
test
jne
incl
cmp
aam
xchg
js
or
pushl
cld
test
sub
mov
xor
std
clc
add
test
add
ret
or
es
cli
daa
loopne
sub
xchg
or
sbb
push
pop
inc
shl
ss
repnz
xchg
call
outsl
and
add
inc
cmp
sub
inc
arpl
call
or
jo
and
or
adc
or
js
dec
push
xor
xor
sub
pop
xchg
ret
mov
incl
int3
add
ja
sub
jo
push
shl
inc
push
lcall
sbbb
or
pop
lock
sbb
xor
push
pop
pop
inc
xor
aaa
sti
and
or
sbb
mov
sahf
movsl
in
push
xor
sbb
imul
incl
shl
xchg
rclb
data16
outsb
insb
jae
outsb
lcall
pushf
leave
int3
fnstcw
cmp
inc
xor
push
push
mov
mov
std
call
add
leave
ret
xchg
cmp
insl
jnp,pn
adc
loope
and
push
sbb
cmpsl
mov
xchg
mov
and
or
dec
fucomp
lcall
sbb
jp,pn
aas
sbb
inc
decl
movsb
inc
cmp
int3
jmp
dec
mov
cmovns
inc
test
jmp
dec
dec
or
mull
pop
ds
push
inc
cli
or
or
out
xor
lock
pop
aas
fcmovb
stos
inc
jmp
sub
ljmp
xchg
icebp
push
and
lea
xor
adc
orb
jb
stos
jp
push
lds
sbb
jmp
pop
fdiv
pop
fdivl
iret
sub
into
jo
dec
mov
jmp
pop
xchg
ret
pushf
jg
les
iret
xor
xor
dec
bound
incl
xchg
rcr
mov
insb
scas
push
dec
pop
ss
pop
inc
rorb
cmp
das
nop
mov
dec
inc
mov
pop
aas
test
jae
shlb
adcb
inc
js
push
push
ss
jmp
push
in
or
and
inc
imul
out
jb
dec
bound
jae
rcrb
or
adc
pusha
adc
dec
insb
hlt
inc
sahf
outsb
fdivrp
call
sub
jmp
out
aaa
ret
es
in
std
incl
fmull
je
push
pop
push
inc
push
insl
xchg
mov
jno
rolb
jg
or
xlat
xchg
cmp
dec
fisubrl
inc
mov
adc
call
ficompl
lea
fsts
push
roll
jmp
adcl
jmp
mov
add
nop
daa
add
sbbl
out
or
sbb
and
ljmp
loope
mov
inc
adc
mov
jge
ret
icebp
lcall
pop
sbb
call
movsl
xchg
data16
dec
arpl
shl
into
hlt
popa
sub
or
stos
pushf
jge
and
dec
jo
xchg
decl
in
or
xchg
inc
bnd
xor
scas
test
out
rcll
adc
ljmp
or
daa
push
jp
adc
xor
sbb
fiaddl
push
mov
mov
add
push
jp
cmpsb
pop
xchg
jg
cmc
mov
cmp
cmp
add
sbb
lahf
add
lcall
mov
mov
pop
xorl
mov
out
in
mov
loope
enter
movsl
adcb
and
dec
loop
inc
clc
pop
add
or
incl
dec
adc
push
push
les
pop
subb
jae
jle
add
ffree
push
in
call
sti
mov
dec
leave
aaa
sar
xor
fisubrl
aaa
sbb
sti
xor
mov
daa
insb
je
ja
push
inc
cwtl
jno
into
jb
es
mov
add
fwait
jbe
jl
int
dec
sarb
mov
rcrl
sbb
cmp
addr16
inc
sub
cmp
mov
jbe
push
jae
dec
lcall
in
les
outsb
inc
ret
pop
push
sbb
adc
les
xchg
fisttpll
aaa
mov
mov
hlt
and
fstl
cmc
jns
mov
xlat
sub
cmp
in
dec
sbb
inc
xor
loopne
in
adc
jmp
test
xchg
cmp
and
dec
sub
mov
adcl
push
jmp
add
inc
addr16
dec
xchg
div
filds
xchg
sub
imul
pop
clc
je
into
pop
adc
movsb
fistpl
mov
mov
movsl
aaa
mov
push
inc
sub
adcl
or
js
jge
aad
and
adc
lret
imul
sbb
call
loopne
rcrl
xor
cmp
es
sub
jg
leave
rol
xchg
cmp
aad
xchg
test
jmp
mov
sar
insb
scas
jg
in
jp
ret
lods
or
dec
add
clc
pop
ja
jno
ljmp
xor
cmpl
xor
or
stos
data16
dec
in
ljmp
xor
dec
push
enter
pusha
ds
add
imul
pusha
jecxz
in
movsl
ljmp
arpl
adc
ss
ret
xor
jb
xor
cs
shlb
dec
push
cmp
mov
xor
cmp
jecxz
cmp
fildll
mov
mov
or
and
ret
ret
incl
lock
aas
or
push
orb
sbbb
out
sub
or
and
fistpll
mov
push
mov
push
into
adc
test
mov
push
dec
ljmp
inc
adc
lock
addb
dec
mov
or
or
push
mov
clc
test
test
mov
leave
mov
out
mov
jp
lcall
cs
or
cld
fs
clc
movsb
xor
xor
xchg
aam
add
out
ret
adc
leave
dec
test
cmpsl
inc
adc
int3
mov
xor
jl
adcb
mov
rorb
pop
jmp
sbb
lret
adc
loop
and
popf
adcl
sbb
sbb
mov
sbb
lcall
inc
mov
mov
add
xchg
adc
xchg
sbb
notb
loopne
pop
jmp
mov
mov
ret
movb
xchg
or
incl
in
fyl2x
push
iret
fs
sahf
add
loopne
push
add
jg
add
mov
or
jb
std
fcoms
inc
shlb
data16
loopne
ffree
or
sub
decl
mov
ljmp
je
stos
lods
push
and
cmpsl
je
jmp
das
clc
or
loop
cld
cmp
mov
adc
add
mov
movsb
add
fcoml
xor
cmp
ret
test
pushf
mov
leave
fisubs
xor
cmp
push
or
ljmp
and
mov
jo
into
fwait
cwtl
xor
nop
xchg
ljmp
imul
mov
mov
xchg
jecxz
sbb
cwtl
mov
test
imulb
outsl
in
cmpsb
insb
lcall
or
lcall
push
mov
jecxz
mov
jb
fistps
incb
push
rorb
out
inc
lock
jae
das
inc
rorb
inc
add
in
call
mov
or
xor
orb
xor
inc
xor
incl
loopne
shr
push
movsb
mov
out
cltd
stos
xor
sub
aad
jmp
ror
cvtps2pi
add
clc
pushf
decl
and
jp
in
mov
ds
xor
scas
nop
sar
decl
popf
les
xchg
or
xor
movsb
aaa
push
ja
aam
inc
cmp
addr16
mov
pop
adc
adc
imul
stc
push
ds
push
dec
int
sub
sbb
stc
pushf
cmovle
mov
int3
loopne
push
mov
cmp
inc
jmp
dec
or
ljmp
lcall
push
sahf
incl
les
lods
sub
incl
or
pop
int
sub
add
or
ljmp
jb
push
mov
call
sub
imul
xchg
sar
mov
add
bound
sahf
mov
ret
or
adc
mov
dec
ret
mov
lcall
add
js
add
and
add
cs
cli
jg
sbb
orl
mov
xor
adc
push
cmpl
loop
decl
leave
les
add
das
int3
cmp
mov
jmp
cwtl
out
mov
jmp
add
xchg
ret
in
or
incb
add
ljmp
data16
call
xchg
mov
mov
ret
or
cs
pushf
push
pushf
push
xchg
xor
int3
or
jmp
jnp
repz
jp
pop
call
bound
pop
clc
dec
or
inc
and
or
nop
pop
ret
insb
mov
push
push
cmp
lcall
stos
stos
xchg
xor
mov
mov
jg
ja,pn
adc
xor
inc
sub
loopne
mul
or
dec
cmp
outsb
inc
js
les
adc
les
out
lcall
xor
xor
sbbl
or
popa
lret
xchg
jp
xchg
subb
icebp
incl
mov
ljmp
in
outsl
test
jl
adc
call
popf
pop
sub
cmp
ljmp
inc
xor
je
dec
push
in
dec
aam
mov
xchg
in
push
std
jae
dec
pusha
cmp
lock
imul
lods
fs
add
faddl
incl
dec
lret
rorb
and
ret
mov
xchg
sahf
sub
insb
inc
and
pop
pop
sbbb
jp
or
lock
dec
sti
out
movsb
cmp
jp
sub
mov
data16
jmp
add
or
sti
xchg
push
add
sub
decl
es
shrb
lcall
mov
xor
sub
mov
mov
ficomps
mov
xor
sti
mov
adc
das
int3
cltd
mov
cmp
jge
mov
jbe
xor
arpl
insl
xchg
cmp
jg
popa
push
ret
or
ss
je
cmp
ret
out
fcomip
mov
mov
mov
pop
xchg
pop
pop
xor
das
and
out
and
mov
jge
xchg
pop
mov
dec
in
adc
inc
xor
inc
sbb
f2xm1
or
jbe
loope
mov
dec
push
xchg
jns
imul
mov
adc
mov
addl
add
out
outsb
movsl
test
mov
ror
mov
test
push
inc
pop
jb
mov
gs
push
out
nop
stos
gs
lret
mov
sub
idivb
dec
push
mov
and
decl
adc
lret
shll
decl
data16
add
andb
pushf
add
adc
push
push
inc
push
in
mov
stos
push
push
xchg
mov
mov
xor
inc
insb
xchg
jg
lcall
outsb
lret
clc
sub
fcoml
fcoms
add
outsl
cli
decl
daa
pop
mov
mov
mov
dec
cmp
outsl
mov
xor
inc
pushl
fdiv
int
mov
lcall
add
aad
jo
incl
sub
mov
cmc
insb
jg
lcall
das
push
pop
push
xchg
leave
cmp
cs
jns
xlat
sub
ljmpw
inc
std
xchg
decb
insl
xchg
test
jmp
cld
fcomip
or
ret
push
dec
sahf
pop
jp
push
add
popa
sbb
inc
xchg
in
or
sahf
or
out
shlb
jg
mov
add
decl
mov
divl
jns
push
and
add
pop
icebp
pop
lahf
push
pushf
incl
cld
scas
mov
out
imul
in
mov
movsb
add
dec
pop
sub
fs
fcomip
push
sub
out
lcall
icebp
cmc
popf
push
adc
ss
popf
dec
fdivrs
sti
out
cmp
outsl
cli
jmp
addr16
mov
xor
push
aam
push
xchg
scas
push
roll
cli
mov
push
sbb
js
add
je
jnp
mov
movsl
add
push
mov
js
lret
lret
inc
insl
cmpsb
add
push
push
les
in
orb
mov
dec
mov
hlt
mov
test
call
mov
mov
insb
movsl
adc
cli
dec
ja
mov
decl
in
add
mov
push
data16
adc
jbe
shrl
or
and
mov
add
bound
xorb
cmp
xor
dec
lcall
push
xor
in
xchg
adc
xor
inc
das
arpl
or
lret
mov
mov
hlt
call
sahf
leave
aaa
dec
add
push
outsb
movsb
ret
lcall
ret
repnz
fmuls
add
orl
pusha
pop
cld
mov
add
mov
or
mov
mov
call
loope
xchg
andb
adc
es
out
jg
insl
adc
lods
orb
add
jo
subb
pushl
adc
movsl
mov
cmc
xchg
pop
adc
jns
fisubl
cmp
jmp
push
cmp
sbb
inc
lret
xor
incl
and
incl
inc
dec
or
jbe
cmp
lcall
mov
dec
or
jp
test
jl
dec
mov
dec
dec
inc
arpl
push
daa
int
bound
jmp
sbb
call
outsl
push
mov
lret
orb
xchg
push
mov
cli
fmuls
pusha
cmpsb
and
jmp
dec
fwait
push
mov
mov
sbb
int3
iret
or
cwtl
xchg
xchg
dec
mov
xor
or
or
fisubs
jo
cmp
or
dec
xor
cmp
lock
mov
sub
add
nop
cmpxchg
sub
mulb
jnp
xor
incb
call
insb
inc
nop
cmp
imul
jecxz
cltd
incb
test
aad
cmp
dec
cltd
lods
adcl
pushf
cmpb
sti
imul
mov
jo
dec
jl
std
jg
out
movsl
orl
rcll
daa
imul
call
in
bound
jle
jp
or
or
outsb
mov
xchg
or
aad
xchg
loopne
dec
push
pop
mov
shr
hlt
lock
in
es
pop
fnstenv
testb
add
mov
pop
shr
jnp
icebp
inc
and
loope
inc
sbb
jne
incl
clc
cmp
mov
mov
movsl
or
xchg
and
push
faddp
imul
sbb
scas
addr16
data16
out
inc
cld
jmp
inc
gs
in
sbb
pop
sub
jle
inc
int3
movsl
pushw
push
mov
inc
xchg
enter
xchg
popa
scas
cmp
icebp
pop
inc
push
mov
inc
int
adc
aad
dec
mov
popf
adc
filds
pop
repnz
pop
xchg
mov
shll
adc
insl
sar
ljmp
xchg
sbb
inc
or
mov
ljmp
dec
daa
or
push
mov
scas
inc
and
sub
mov
dec
add
leave
gs
mov
push
cli
jmp
aaa
cmp
adc
adc
ss
lcall
subb
ja
push
cwtl
data16
mov
cltd
in
jmp
inc
std
repnz
jge
jecxz
adc
and
sub
or
xchg
nop
incl
fiadds
fadds
decl
inc
inc
add
inc
hlt
and
cwtl
mov
jae
or
sbb
pusha
or
aaa
mov
jmp
test
jge
cltd
jge
jb
jl
inc
scas
cmc
lds
jle
adc
out
aaa
fisubrs
or
fcomip
pop
int3
xor
loop
cmpsl
adc
mov
xchg
mov
icebp
loopne
call
xor
xchg
mov
and
xor
xorl
ret
adc
mov
sbb
xchg
cli
stos
and
sub
ss
adc
and
mov
xchg
add
repnz
cltd
push
loop
pushf
cmp
daa
into
mov
ljmp
scas
adc
sub
mov
shlb
dec
je
sar
mov
mov
dec
xchg
test
fstps
push
xchg
xor
lret
mov
jg
xor
mov
xchg
push
xchg
or
pop
adc
xlat
mov
addb
adc
call
push
inc
and
or
orb
icebp
lcall
pop
or
sub
movb
push
cmp
incl
pop
mov
sahf
push
mov
outsb
inc
sahf
xor
ror
mov
into
ss
frstor
imul
mov
pusha
std
jmp
ds
mov
mov
xlat
jb
outsl
jg
lahf
fisubrs
stc
int3
pusha
mov
out
out
pop
push
out
das
lea
mov
jmp
sbb
mov
pop
or
incl
push
imul
and
enter
cmpsl
and
jmp
icebp
mov
jl
inc
mov
loop,pn
adc
cmp
decl
loop
pop
jo
or
inc
test
adc
push
lds
cmp
mov
xchg
cmp
dec
jg
mov
and
in
sbb
inc
push
dec
inc
mov
jmp
add
mov
inc
cltd
data16
xchg
sbb
xor
push
and
insb
call
mov
data16
mov
and
or
xchg
adc
inc
xchg
call
test
xchg
mov
inc
adc
rorl
jne
roll
push
test
jge
call
adc
and
dec
mov
cmpsb
dec
add
push
push
cmp
xchg
insb
mov
mov
inc
aaa
cmp
or
and
mov
call
sub
or
xor
lcall
les
mov
outsb
mov
shr
mov
and
mov
sbb
lods
mov
or
cmp
rclb
pop
jbe
add
jo
je
mov
sbb
xchg
out
outsb
roll
std
stos
pushl
push
pop
mov
hlt
push
mov
data16
jge
inc
jg
mov
sbb
mov
rcl
negl
outsl
jg
ljmp
xchg
int
sbb
fdivl
pop
mov
jne
mov
sbb
clc
mov
push
jnp
dec
add
hlt
sub
mov
mov
enter
cli
fldcw
data16
fdivs
sbb
hlt
incl
jp
pop
sub
push
and
cwtl
insl
divl
or
cs
mov
rolb
inc
mov
mov
mov
mov
xor
fadd
pop
std
shlb
lcall
das
ss
dec
push
push
pusha
mov
ret
mov
incl
cmp
jbe
movsb
xchg
mov
arpl
xchg
data16
insb
stos
test
cltd
inc
pushf
arpl
cli
fsubr
rcrb
fidivrl
sub
sub
mov
or
mov
adc
inc
dec
movsl
mov
sub
decl
xchg
cmp
inc
adc
das
push
mov
outsl
dec
mov
sub
inc
js
xchg
adc
outsl
and
jl
adc
decl
loopne
pop
les
sub
add
int3
loopne
adc
mov
pop
les
fcomip
sbbl
adc
call
test
sbb
js
adc
lock
ljmp
ja
or
add
sub
xchg
orl
pop
incl
sub
mov
cmp
sub
xor
xor
shll
xor
mov
or
iret
mov
cvttps2pi
sbb
fcmovne
rcrl
sbb
ljmp
nop
jo
or
in
xor
incl
cmpsl
cmp
mov
adc
or
or
xchg
stc
in
cmp
ljmp
cmp
mov
jno
fs
stc
dec
inc
lret
dec
inc
or
into
sbb
dec
jmp
mov
mov
call
imul
sub
ja,pn
add
loopne
fs
fadds
test
jne
inc
lahf
nop
add
cmpsb
and
jg
jo
push
xchg
mov
sbb
and
pop
pop
daa
jge
dec
and
and
pop
clc
jmp
cli
popa
add
ret
xor
dec
jmp
pop
mov
push
aam
cmp
add
add
fwait
loop
mov
sarb
mov
mov
outsb
inc
notl
add
dec
adc
cli
adc
cmp
es
jg
pushl
shr
dec
inc
inc
inc
push
inc
out
pop
xchg
push
xchg
and
icebp
ljmp
sub
mov
arpl
dec
mov
scas
jle
push
dec
dec
sub
push
jae
aam
decl
or
arpl
loopne
stos
jp
or
stos
adc
cld
mov
ret
push
mov
inc
pop
fadd
fnstsw
nop
and
jno
inc
pop
cmc
loope
fnstenv
pop
adc
jg
add
mov
insl
inc
popa
out
mov
and
bound
jmp
adcb
inc
mov
rclb
repz
out
xchg
push
lds
std
call
sbb
add
mov
cltd
jno
repz
mov
push
xor
jne
adc
loop
out
xor
pushf
add
cli
jg
icebp
fsub
push
in
mov
scas
and
sbb
fs
cmpsb
cld
lods
sbb
pop
out
rorb
sub
push
mov
jl
in
inc
ljmp
lcall
dec
pop
fidivl
mov
dec
lret
mov
scas
mov
out
out
inc
add
hlt
jmp
lods
push
mov
mov
leave
mov
sbb
inc
and
or
incl
mov
sbb
popf
stos
sub
sub
adc
call
sbb
mov
push
fcomps
mov
scas
cld
insb
rcll
ficoml
call
lea
les
shlb
add
sbbb
orb
stos
dec
stc
adc
mov
sub
imul
movsl
pop
jle
movsb
cmp
std
mov
push
add
mov
push
sahf
jp
push
mov
rorb
or
roll
scas
fists
ljmp
mov
dec
test
fadds
pop
push
arpl
test
jmp
incl
mov
enter
push
dec
repz
movsb
xchg
push
lret
es
push
cmpsb
icebp
mov
xchg
jge
or
clc
inc
dec
xchg
pusha
outsb
andl
xchg
push
mov
mov
push
das
ja
inc
incl
xchg
pop
jecxz
cmp
inc
fs
adc
lahf
add
test
adc
sbb
loopne
pop
jmp
daa
lea
incl
inc
mov
js
xchg
xor
add
adc
sarl
cmp
ja
pop
jb
call
lods
mov
lock
int
and
or
mov
lret
jmp
fdivs
loop
fistpl
out
lods
or
ja
push
and
xchg
notb
cld
ret
pop
inc
pusha
add
roll
dec
ljmp
inc
sbb
sbb
dec
cmp
sbb
sbb
lcall
popa
cmp
jbe,pn
js
xor
cmp
and
pop
inc
stc
jg
or
inc
mov
push
add
test
ljmp
jns
adc
outsl
mov
mov
cltd
imul
inc
push
neg
test
sub
mov
xor
push
je
ss
cld
pusha
pop
mov
pusha
jl
jp
clc
inc
push
shlb
je
lock
jmp
lahf
push
call
mov
insb
mov
mov
jmp
std
add
nop
xchg
add
mov
or
outsl
ljmp
lock
ret
mov
js,pn
push
jg
sub
popa
or
mov
mov
or
dec
subb
or
jb
test
popf
mov
mov
pushf
leave
cmpsb
mov
cli
mov
dec
enter
stos
std
inc
mov
push
jmp
inc
and
jmp
in
subl
ljmp
aaa
add
dec
push
cld
gs
testb
outsl
add
sub
js
mov
push
cmpsb
icebp
mov
adc
inc
inc
out
xor
or
inc
dec
repz
mov
and
push
pop
incl
dec
adc
hlt
cmpsb
jno
cmp
push
xor
icebp
push
ss
pop
cmp
addb
and
ljmp
cli
popa
sub
add
inc
and
add
inc
push
cmp
mov
dec
ds
inc
and
cmp
jo
stc
les
inc
addr16
inc
mov
add
xor
cmp
lock
ja
daa
adc
xlat
ljmp
add
inc
dec
pop
xchg
fsubl
or
mov
cmp
imul
xchg
cwtl
data16
ljmp
xchg
rclb
movsl
sub
lods
loop
data16
popa
adc
data16
dec
mov
push
lock
decl
inc
mov
jmp
shlb
gs
adcb
notb
inc
pop
andl
cmc
jg
fdivs
add
pop
mov
push
je
into
mov
sub
lds
enter
orb
sbb
ljmp
mov
adc
xor
mov
adc
adc
mov
bound
xchg
loope
xchg
or
mov
inc
stc
push
and
jg
in
outsb
pop
add
stos
movsb
xor
jg
out
enter
adcb
pop
fiadds
lcall
shll
pushf
loopne
inc
pop
test
jb
lds
cmp
mov
xor
ja
dec
mov
outsl
std
out
jbe
push
orl
mov
mov
jo
push
cmpb
adc
add
fildll
add
add
and
stc
and
adc
xchg
jno
arpl
dec
lcall
or
dec
jp
inc
sahf
add
xchg
jb
add
lahf
roll
xor
push
sub
mov
lgs
loopne
pop
push
add
add
les
nop
decl
push
xchg
es
arpl
arpl
daa
jne
daa
pextrw
daa
shll
push
mov
add
sub
sub
and
dec
adc
lcall
cmp
adc
call
decl
adc
addb
jge
mov
mov
xchg
inc
sbb
cmc
mov
adcl
addl
dec
lds
jmp
jnp
cmc
hlt
mov
js
xor
dec
popf
lret
and
ljmp
fstps
mov
sbb
add
pop
xchg
jno
ljmp
or
jmp
add
push
insb
xchg
test
add
mov
outsl
mov
xor
xor
cmpb
call
ss
dec
loopne
nop
arpl
sbb
push
jle
jecxz
pop
ret
xchg
cmpsl
mov
cli
jecxz
dec
jbe
and
dec
sti
xchg
add
pop
xchg
sbb
jg
inc
or
sub
xor
jno
cli
cmp
xchg
and
jns
sub
adc
xchg
xor
orb
or
and
call
outsb
cmpsb
subb
lock
cli
aaa
push
jo
fadds
fstps
outsl
mov
clc
call
sbb
cltd
jno
inc
ss
outsl
sbb
and
and
jnp
addr16
cmpl
flds
je
add
mov
jecxz
xchg
push
ret
adc
shrb
fs
mov
mov
push
sbb
popa
jo
test
add
xchg
xchg
fs
data16
mov
cld
sbb
les
nop
cmp
fisubl
push
decl
add
or
push
push
ds
sub
mov
cwtl
andl
pusha
xlat
aas
popa
adc
icebp
jecxz
mov
xor
stos
sub
cltd
mov
call
jge
addr16
push
cs
out
push
inc
xchg
aaa
jns
cmp
lds
push
cld
fwait
incb
mov
int3
cltd
push
xchg
inc
mov
mov
mov
cmp
dec
inc
fsubr
lods
in
sub
mov
mov
cmp
clc
add
pop
push
out
stc
sahf
in
fstps
ljmp
stos
or
pop
adc
xchg
jne
stos
xor
scas
and
dec
sbb
cmc
adc
mov
xor
incl
jecxz
repnz
or
push
xor
mov
cmp
adc
xorb
sti
mov
sarb
cwtl
aaa
and
xchg
cmp
scas
adc
pop
dec
jmp
ret
in
or
test
xor
pop
cld
decl
clc
movsb
arpl
pop
inc
test
xor
mov
mov
outsl
xor
decl
xor
jno
dec
mov
add
push
or
add
addr16
sub
or
inc
jmp
popa
sbbb
xor
lret
dec
add
xchg
jl
and
dec
test
pop
stos
jecxz
sarl
jp
cmp
and
outsl
sbb
xor
clc
jg
mov
jne
mov
js
daa
jp
push
push
nop
or
in
mov
push
stos
popf
orb
cltd
test
clc
lret
ljmp
inc
sbb
test
js
and
inc
rorl
lods
mov
call
xchg
inc
push
movsl
push
xchg
pop
push
arpl
shrl
lcall
imul
pop
aaa
sarb
mov
jp
out
popf
shrl
jmp
ljmp
lret
cmp
enter
lahf
add
sbb
xchg
lahf
roll
xor
push
idivl
cmc
js
sbb
jo
pop
in
jbe
sbb
xchg
test
sub
incl
sub
adcl
dec
es
aaa
hlt
mov
in
push
cmp
dec
es
dec
sbb
jmp
movsb
pop
mov
out
cli
call
mov
fadd
xor
xchg
in
adc
xchg
push
pop
xchg
dec
jmp
mov
lcall
mov
movsb
call
pop
cli
inc
pop
pop
cmp
push
pop
ss
das
clc
ljmp
inc
pusha
rorb
add
mov
cmp
xchg
stos
jg
mov
enter
fisubs
arpl
incl
cld
inc
idivl
sti
in
or
dec
ja
insl
jb
nop
imul
pushl
aam
xchg
test
imul
push
movsl
mov
push
push
fbld
clc
mov
decl
adc
mov
adc
sub
sar
jbe
ret
cmp
xchg
inc
jb
or
jp
push
lds
push
inc
iret
push
lds
pop
push
mov
es
ja
jg
xlat
clc
xchg
lret
mov
lret
jp
in
lods
leave
pop
fdivrs
decl
lret
idivl
icebp
fwait
int
and
lods
mov
adc
out
xor
leave
pop
pop
and
das
imul
xchg
mov
js
fwait
or
incl
adc
imul
or
pop
inc
lcall
add
inc
or
lret
xchg
outsb
pop
arpl
incl
push
sarb
sub
and
daa
test
fistl
cld
jnp
push
daa
and
adc
mov
std
shr
movsl
ret
jp
add
stc
mov
stos
inc
sub
movsb
dec
cli
pop
dec
jl
jmp
aaa
aam
xor
cmc
inc
and
lock
and
addr16
in
push
dec
lods
addr16
push
mov
add
adc
jle
inc
add
incb
in
add
or
and
push
fbld
push
dec
out
xor
es
cli
mov
ljmp
dec
mov
pusha
push
leave
add
sub
push
push
enter
xlat
jae
mov
mov
lcall
jge
sbb
xchg
mov
adc
and
push
sarl
ds
sub
decl
stos
daa
mov
fwait
cmpb
add
sarl
xor
mov
mov
js
jnp
adcl
fcoml
mov
xchg
mov
leave
mov
xor
fcomi
push
dec
int
int
pop
or
ja
fsubrl
arpl
mov
fistps
in
ficompl
lret
inc
jge
adc
xor
std
jnp
xor
cld
xchg
incl
sbb
and
sbb
inc
sub
je
pop
or
cmp
filds
roll
adc
jmp
lods
cmp
fcomip
call
mov
cmp
cmc
xor
sbb
es
sar
xor
movsb
or
jo
fwait
inc
inc
mov
shrd
ret
xor
jno
xor
movb
cmc
mov
dec
push
ret
xchg
jbe
sbb
scas
das
sahf
andl
ds
mov
inc
push
dec
sbb
push
inc
or
pushl
aaa
push
pop
adc
jle
dec
lock
ljmp
mov
loopne
aaa
loopne
pusha
loop
imul
xchg
xchg
xchg
inc
jne
jns
js
cmc
lcall
inc
jne
jb
push
orb
mov
incl
ds
stos
pop
jbe
pop
gs
xor
jns
push
xchg
in
gs
jge
test
jbe
fidivrl
test
mov
sub
call
gs
jnp
pushf
jmp
cwtl
test
int
fsub
add
cmp
shr
adc
mov
rcrb
lds
test
in
lock
inc
xor
pop
inc
loopne
adc
ret
aam
sbb
lcall
lcall
jns
add
cld
sbb
mov
cmp
in
jbe
fisttps
loop
js
pop
mov
push
xchg
fldcw
sub
sbb
sarb
dec
jo
leave
xchg
pop
fldl
mov
sub
push
loope
loopne
outsl
clc
incl
in
aad
cmpsl
out
rcl
xchg
orl
or
and
outsb
out
in
int
pop
gs
aam
aam
cli
pop
subl
and
jmp
sahf
aad
nop
jecxz
mul
jno
and
stc
cmp
fsubs
movsl
inc
or
fstpt
cmpsl
jmp
xchg
push
cmp
cmp
dec
jne
add
dec
out
dec
enter
std
popf
jnp
jbe
daa
push
pop
sbbb
push
inc
cmc
push
out
ds
sahf
ds
stos
test
sub
loope
pushf
or
mov
incl
or
sbb
data16
test
testl
sar
lret
addr16
lcall
or
fimuls
lret
cwtl
clc
lret
sub
mov
dec
mov
insl
add
jns
mov
mov
cmp
sub
sbbb
add
imulb
fildll
mov
lods
in
das
dec
loopne
fs
jbe
xchg
imul
pop
mov
gs
jge
lcall
sbb
dec
pop
adc
fdivrl
sub
orl
adc
pop
dec
sub
cwtl
sbb
jg
pusha
in
dec
inc
adc
arpl
add
xchg
or
jg
cld
pop
rcll
mov
aaa
sub
cli
cmpsb
dec
push
cld
add
jecxz
mov
inc
xchg
push
incl
push
add
xchg
sti
sub
jno
jbe
mov
lods
pop
mov
add
js
add
lcall
leave
mov
movd
inc
mov
jo
push
mov
ss
mov
lods
xor
aam
jb
es
lcall
cmp
xchg
je
shlb
sbb
inc
push
push
dec
add
sbb
mov
fisubl
sar
lcall
mov
or
jne
sbb
xchg
pop
mov
ret
xchg
ss
jg
shrl
push
xchg
fwait
pop
out
pop
mov
dec
mov
fsubrs
fisubrl
ljmp
mov
lret
sbb
addr16
pop
mov
fldcw
mov
pop
enter
mov
cmp
frstor
pusha
loopne
add
mov
xor
lcall
or
push
mov
mov
rcrl
jo
dec
mov
jb
jb
lret
xchg
jecxz
jg
test
sbb
mov
xchg
rcll
aaa
cld
dec
mov
jmp
xchg
loop
mov
dec
lock
lods
mov
out
call
jg
cld
outsl
or
test
push
sbb
adc
or
cmp
pop
push
pop
dec
mov
cmp
rorb
mov
cmp
cmp
inc
inc
adc
fcoml
adc
push
in
cmp
adc
shlb
ds
lods
adc
pop
push
xor
out
adc
roll
outsl
mov
inc
mov
xor
adc
sarl
vandnps
decl
xor
inc
pop
ljmp
int3
cs
sub
pop
pop
push
dec
rol
and
inc
adc
sub
add
dec
sbb
jno
sbb
inc
and
ret
jmp
addl
pop
sub
icebp
pushl
sbb
test
add
pushl
call
shr
aaa
fsubl
lea
sbb
js
adc
pop
hlt
jg
js
sbbl
pop
test
add
jl,pn
decl
push
dec
movsl
xor
push
add
and
mov
cmpsl
lahf
mov
andb
and
jo
sub
sar
ljmp
insb
stos
nop
add
lods
leave
push
imulb
mov
fmul
mov
adc
sub
xor
shr
mov
repnz
dec
incl
scas
loop
rol
push
xlat
cs
orl
or
sub
ret
and
decl
xor
insb
xchg
gs
jecxz
xor
addr16
orb
sbb
jnp
push
fbld
adcb
sarl
cmp
lcall
add
cli
pushl
bsr
not
xchg
add
in
jnp
clc
pop
add
jne
test
ljmp
pop
in
push
mov
mov
add
cmc
decl
inc
push
les
fs
or
lods
incl
add
aam
out
add
push
xchg
inc
mov
inc
inc
dec
fcomip
das
clc
pushl
lds
inc
dec
adc
and
imul
jb
fisttps
add
divl
das
shl
xchg
int3
xor
push
inc
into
iret
dec
mov
push
sar
decl
push
shll
pop
xchg
ja
pop
cmp
mov
sub
and
pushl
jl
shrl
xlat
pop
ror
adc
rcll
xor
stos
add
decl
adc
nop
jle
adcl
roll
xor
dec
std
inc
mov
into
test
sub
dec
cltd
mov
sbb
add
push
inc
or
xchg
rcrb
adcb
mov
mov
inc
adc
and
mov
iret
add
or
jmp
xchg
xchg
sbb
scas
scas
xchg
jno
adc
rcrb
mov
push
stos
sbb
aad
inc
xor
mov
int3
xor
xor
arpl
in
decl
incb
xor
xchg
popa
fcompl
ljmp
int
inc
xor
mov
jl
jecxz
leave
mov
add
xchg
into
test
sbb
enter
add
sahf
and
xor
andb
imul
jae
fildll
add
int
jp
in
lods
cmp
push
sub
out
mov
push
dec
aaa
add
xchg
mov
and
mov
lret
in
inc
inc
or
icebp
mov
push
adc
notl
sbb
xchg
jns
mov
adc
movsb
test
sbb
insl
add
lret
dec
inc
or
push
subl
jo
mov
inc
cmpsl
cmp
scas
mov
movsl
les
mov
pop
pop
push
in
push
loop
lcall
xchg
sbb
out
dec
and
cmpsb
xor
sub
cli
adc
inc
ljmp
lods
test
roll
mov
fcmovne
daa
cld
and
push
ljmp
stc
imul
xchg
mov
dec
movsb
and
dec
test
cli
incl
std
jmp
test
push
sub
nop
inc
ret
sti
lea
faddl
jg
pop
test
jno
inc
pushf
inc
xchg
mov
dec
mov
loop
test
sub
cmp
push
push
adc
jno
pop
and
mov
mov
jo
fldl
add
sbb
decl
or
mov
and
lds
ds
sbb
call
mov
cltd
imul
jecxz
addr16
sbb
js
xchg
aad
mov
jecxz
sbb
stos
popf
shlb
enter
adc
cmp
adc
mov
push
shlb
add
dec
xchg
sti
cmp
pushl
movsb
icebp
mov
aad
aaa
xor
mov
in
shlb
mov
int
pushl
call
mov
dec
pop
and
lods
xchg
stc
je,pn
push
mov
pushl
sbb
mov
jo
sub
lods
int3
mov
or
adc
adc
jecxz
xor
test
jl
add
xchg
arpl
xor
jmp
or
mov
sbb
cmp
fistps
shl
xor
xchg
xchg
lcall
sahf
jle
popf
push
xchg
add
fsubrp
dec
jp
sbb
jmp
adc
mov
cmp
in
insl
sysret
lods
pop
push
sbb
ret
mov
cwtl
cwtl
je
inc
loope
lret
xchg
dec
popf
test
xchg
xchg
xchg
xchg
mov
mov
jg
pop
mov
add
enter
add
xor
das
jl
or
jo
or
cmpsb
incl
sbb
pop
leave
loop
or
stos
les
adc
lock
aas
loope
add
jl
add
jno
pop
or
decl
test
mov
das
xchg
cmp
and
std
adc
add
lds
push
inc
sbb
xor
cli
pop
bound
jle
addr16
sar
scas
mov
xchg
push
add
xchg
sbb
mov
in
into
dec
movb
divl
mov
imul
and
in
and
cld
lcall
cmpsb
xlat
inc
xor
outsb
adc
pop
sbb
inc
sbb
sub
call
xchg
std
out
add
xor
push
into
cmpsl
sub
scas
ficoms
mov
les
ficomps
pushl
push
cld
add
xbegin
mov
inc
dec
hlt
enter
xor
incl
xor
das
lock
into
inc
push
out
push
xor
and
imul
sub
xlat
jmp
jmp
hlt
dec
cltd
mov
or
xchg
dec
add
mov
dec
pop
bound
das
dec
mov
inc
and
jge
push
fcomip
sub
pop
xchg
call
in
out
dec
sub
icebp
dec
or
fbld
ljmp
js
stos
xor
dec
add
inc
ljmp
dec
les
jb
cmpsl
lock
call
inc
jns
push
jae
cmpsl
xchg
add
pop
push
leave
sti
push
mov
mov
mov
jg
data16
adc
test
inc
adc
or
mov
dec
aad
mov
mov
cmpsb
aad
mov
xor
data16
fsubl
xor
je
jg
push
mov
cmp
popl
and
in
lcall
mov
mov
sbb
aaa
cmp
rolb
mov
adc
nop
ljmp
jae
movsl
lock
popa
out
in
std
inc
rcll
pop
test
mov
pushf
les
rorb
lods
jg
and
fdivs
and
jo
movsb
mov
sbb
rcrb
icebp
lcall
out
aaa
or
and
stos
inc
cld
dec
loop
loop
add
aaa
out
loop
lods
xchg
add
inc
add
aam
mov
mov
scas
mov
mov
push
push
repnz
call
pop
hlt
shl
lahf
ucomiss
cmp
mov
xor
sbb
cli
es
daa
xchg
decl
fldenv
mov
test
push
leave
add
mov
push
sbb
mov
or
lcall
cmp
sbb
inc
mov
pop
or
push
pop
mov
inc
push
mov
cltd
sub
lcall
cmp
ret
xchg
mov
and
and
push
adc
call
leave
sub
xchg
adc
mulb
sub
pop
pop
cmc
cmp
or
call
inc
pop
sbb
cmp
jg
xor
xchg
adc
push
mov
jo
scas
push
out
dec
push
xchg
and
or
xor
jl
test
push
or
jo
aad
mov
xor
sub
push
and
mov
hlt
and
sarb
dec
sbb
jecxz
mov
pushl
adc
pop
fadds
rclb
pop
mov
sbb
dec
jle
xchg
das
adc
clc
cmp
add
fs
ds
dec
sub
das
call
xchg
pop
and
out
test
test
mov
inc
adc
ljmp
ret
addb
cmp
and
push
cmp
mov
cmp
es
push
and
inc
mov
sub
mov
sbb
and
enter
fst
lcall
dec
mov
movsl
xchg
lcall
sbb
rolb
shr
incl
add
into
cld
lret
inc
jge
scas
mov
pushl
std
pop
scas
jge
cs
inc
sub
dec
mov
lret
pushl
jmp
insl
adc
imul
ret
cltd
inc
mov
add
xor
push
adc
jge
mov
jno
adc
test
dec
add
loope
sahf
mov
xor
sti
xchg
in
out
icebp
cltd
cmp
sub
xchg
movsb
xor
xchg
sbb
icebp
pushl
mov
sub
test
bound
mov
mov
xor
jg
sbb
imul
subl
cs
sbb
ljmp
ficoml
xor
sub
add
sbb
or
inc
and
rcrb
mov
or
stos
aas
nop
stos
mull
fs
or
leavew
loopne
inc
fstpt
mov
in
xchg
ficoms
xchg
fisttps
and
mov
pusha
inc
jbe
jne
and
jnp
call
std
jmp
xor
call
in
mov
xor
mov
cld
sar
jg
stc
sti
addb
cmp
jo
test
adc
mov
push
cmp
enter
decl
pop
push
sbb
nop
sbb
sbb
add
push
cmp
cmp
aas
add
inc
std
jne
sbb
or
add
cltd
sahf
orl
adc
ljmp
je
movsb
sub
out
xlat
sbb
inc
xor
fistpl
ss
sbbl
mov
sarb
gs
test
cmp
add
jbe
mov
js
incl
test
push
lcall
aam
test
sub
mov
daa
in
cmp
nop
sbb
imul
or
scas
mov
pushf
xorl
lock
adc
jns
jmp
imul
dec
cmp
mov
adc
imul
icebp
push
jecxz
cmp
mov
decl
mov
ret
mov
gs
adc
test
popa
int
fldenv
ljmp
subb
mov
dec
lahf
rcrb
mov
rcr
jmp
lahf
aas
mov
cmp
cld
popf
fists
mov
push
add
adc
pushl
add
xor
lret
mov
andb
inc
pop
or
or
mov
faddl
jmp
sub
pushf
or
cmp
stos
pop
mov
add
sub
clc
inc
add
lock
outsb
jmp
adc
cmp
and
in
rolb
push
or
sbb
dec
test
push
and
push
mov
jmp
popf
adc
push
mov
andb
and
outsl
push
call
subl
push
dec
enter
or
sbb
cli
ljmp
xchg
popa
fcmovnb
lcall
fisttpll
fistpl
and
mov
xchg
and
and
popf
sbb
rcll
dec
mov
push
std
cmp
outsb
dec
pop
enter
add
xchg
pop
addr16
xchg
mov
sbb
stos
add
cmp
jns
dec
sub
jmp
mov
les
cs
sub
add
movsl
cmp
mov
fldl
xor
mov
pop
cmp
add
test
inc
in
sbb
hlt
sub
or
xlat
cld
dec
aad
out
jp
push
ret
test
jns
jmp
cmp
xchg
cmp
fwait
xchg
out
jne
shlb
dec
dec
clc
push
push
orb
stos
mov
mov
and
sub
in
adc
fwait
aaa
icebp
sbb
add
xchg
push
je
inc
xchg
ret
cmp
incl
into
scas
jae
mov
and
into
pop
sbb
xchg
fistpll
ljmp
xchg
enter
ret
arpl
add
test
test
stos
cwtl
add
inc
test
xchg
lods
and
cmp
mov
or
push
mov
rolb
sub
add
mov
fcomps
flds
mov
and
pop
fnstenv
fsts
gs
js
add
ss
xor
inc
push
xlat
insl
inc
stos
adc
and
push
xorb
mov
add
jbe
xor
or
aaa
rolb
mov
cmc
incl
sub
mov
cmp
lcall
rcr
aad
mov
lods
inc
jle
pop
fcompl
mov
js
enter
pushl
adc
ljmp
pop
push
testb
mov
mov
cltd
push
mov
pop
ss
jmp
pop
jle
pop
into
or
fnstsw
xchg
mov
stc
nop
fildl
fmulp
pop
fbstp
fildl
jnp
jg
pop
loope
pop
cmp
dec
dec
xor
loopne
adc
dec
adc
and
cmp
xor
push
test
gs
jp
les
stc
add
cmc
ljmp
mov
xchg
sub
data16
daa
sbb
test
popa
push
xchg
clc
pop
sub
fcomip
dec
or
mov
jg
xor
cmp
jno
xor
test
pop
push
insl
std
push
std
sbb
fimuls
adc
arpl
sub
addb
ss
mov
add
ljmp
popa
test
jmp
scas
loope
dec
pop
pushl
cltd
decb
insb
aam
adc
adc
popa
loope
fnsave
fiaddl
add
incl
into
mov
mov
out
xor
addr16
fsubrs
int
adc
jmp
in
fidivrs
xor
mov
jmp
jmp
and
inc
fwait
mov
add
scas
fcomip
ljmp
xchg
mov
jo
aas
push
jecxz
jne
and
cmp
xchg
mov
rorl
mov
inc
or
in
cltd
sbb
cmp
sar
decl
aam
insl
pop
mov
xlat
jbe
pop
pushf
insb
rorl
aad
pop
mov
cmp
sti
lcall
add
add
push
add
addr16
xchg
xchg
mov
push
pop
xor
icebp
ret
pop
and
sbb
sub
push
mov
sti
test
push
lods
ljmp
cmp
loop
inc
dec
sahf
out
addl
daa
sub
inc
push
inc
out
imul
lds
adc
xchg
sbb
call
xor
test
or
loopne
enter
xchg
dec
xor
mov
lcall
stc
adc
and
ljmp
add
jl
adc
cmp
push
inc
xor
sbb
add
lock
jl
enter
outsl
lock
add
adc
out
adc
or
decl
imul
test
icebp
mov
push
shr
sbb
popa
pop
loope
adc
clc
mov
push
xchg
push
cmc
ljmp
or
lods
jle
cld
scas
clc
fstps
lock
and
test
scas
dec
shrb
add
sbb
lock
xchg
push
lcall
ljmp
mov
xchg
test
xchg
scas
push
mov
loopne
mov
sbb
ja
mov
shl
mov
sbb
fisttps
mov
hlt
dec
rcl
push
gs
movsb
dec
in
cli
call
pop
inc
ja
dec
xchg
push
out
mov
or
inc
cwtl
inc
mov
leave
xor
addl
jg
sbb
imul
gs
fidivrs
enter
mov
imul
leave
roll
sahf
std
pop
inc
or
inc
iret
sub
xchg
sub
pushl
sbb
fstpl
xchg
lock
aam
xchg
test
adc
sahf
clc
insl
fisttps
mov
pushl
ficoms
add
xor
mov
jl
xchg
repnz
lcall
pop
stos
inc
aam
mov
push
std
xchg
cmpsl
arpl
push
or
call
rcl
mov
mov
adc
icebp
adc
push
cmp
mov
add
nop
addl
decl
push
scas
xorb
push
out
icebp
xchg
or
cli
mov
or
sbb
or
stc
mov
mov
rorb
pop
push
stos
mov
xchg
or
xor
jmp
adc
sub
pop
jmp
add
inc
repz
jb
mov
add
and
aas
ja
push
mov
sbb
jnp
je
cmp
outsl
ficoml
jne
lds
add
sar
pushl
insl
dec
xchg
mov
sarl
pop
dec
xchg
insb
call
ret
dec
jne
dec
sbb
je
push
cmc
enter
negb
inc
xchg
jg
push
aas
cwtl
cmpsl
cwtl
fdivrl
mov
pushf
popa
into
dec
int
out
ljmp
gs
arpl
or
or
adcb
dec
xchg
jbe
popa
jecxz
lret
shr
adc
mov
ljmp
xor
and
out
cmpb
xchg
idivl
sub
xchg
xlat
rcrb
sbb
lcall
jp
mov
test
adc
or
repz
hlt
pop
popl
lcall
xor
jns
push
xor
filds
call
add
cmp
popa
sbbb
or
loopne
cmp
pop
fsub
daa
add
mov
and
add
insb
or
adc
decl
push
mov
leave
mov
add
fnstenv
xchg
decl
lcall
ss
loopne
jae
mov
aas
inc
mov
cmp
jae
xor
jo
cmp
cmpsb
ret
cli
incl
jo
jmp
into
pusha
mov
aam
lcall
rcr
xlat
or
dec
stos
push
sub
ret
dec
aaa
or
incl
pop
pop
mov
push
lea
lds
jmp
push
mov
pop
adc
outsb
push
xor
mov
xor
jecxz
ds
inc
and
lcall
add
imul
jge
push
inc
sub
jge
dec
scas
insl
lods
cmp
sti
fstpl
ja
loope
dec
cmpsl
dec
insl
cmp
jae
enter
dec
fdivl
jb
in
out
arpl
mov
jl
xor
sbb
cmpsb
push
js
adc
inc
xor
mov
mov
adc
or
popf
lret
jle
adc
mov
int3
jne
popa
ljmp
orb
je
fildll
rolb
sub
and
in
sbb
adc
and
cmpb
mov
xchg
int
push
dec
fidivrs
and
je
push
sbb
arpl
sub
mov
std
jg
dec
pop
lcall
arpl
adc
outsl
push
mov
shr
movsb
xchg
mov
sbb
push
or
xchg
push
loop
sub
inc
lret
test
mov
mov
je
or
ljmp
xchg
js
mov
push
dec
pop
pop
pop
jle
addr16
clc
pop
cmpsb
adc
mov
cmp
iret
sub
call
jno
xlat
inc
jbe
rclb
or
xor
stc
adc
or
cmpsb
jb
sbb
push
push
sar
call
and
xchg
dec
lods
ljmp
xchg
dec
inc
cmp
push
mov
mov
in
test
lcall
insb
cmc
adc
mov
adcl
pop
inc
stos
rcrl
dec
dec
jnp
push
dec
sub
incl
xchg
mov
add
dec
loope
jae
lret
icebp
je
or
outsl
clc
call
pusha
outsl
int
cwtl
adc
pop
lods
xor
pop
pop
shlb
cltd
gs
dec
jg
mov
out
jo
xor
mov
lds
iret
jbe
jo
insb
sbb
lahf
lods
cmp
jo
adc
decl
popa
mov
imul
shll
dec
fidivl
inc
insb
dec
add
movsb
pop
arpl
mov
push
sahf
addb
sbb
pushl
pop
jl
test
pop
bound
xlat
pop
addb
insl
lods
add
movsl
pushl
scas
push
fldenv
sahf
pop
loop
mov
outsb
fisubrs
and
mov
jmp
enter
cs
inc
mov
stc
mov
ss
mov
loope
outsl
mov
inc
sbb
push
pushf
xor
lcall
jmp
jmp
pop
clc
pop
insl
add
mov
push
cld
ljmp
sbb
sbb
xchg
ljmp
sbbb
jns
dec
cmp
into
lret
fnstsw
sbb
adc
and
inc
inc
add
ljmp
adc
mov
add
in
mov
out
push
lods
adc
adc
rcl
aad
or
xorb
sbb
pop
call
and
mov
lds
incl
or
add
test
add
pushl
loop
in
pop
and
lds
or
pusha
inc
xor
stos
ljmp
outsb
sbb
sbb
adc
push
push
xchg
pop
ret
rorl
xor
or
push
inc
xor
lods
cmpsb
jecxz
fbld
je
leave
jle
fwait
xchg
or
mov
scas
xor
cmp
sbb
lea
sbb
pushl
jecxz
sbb
dec
js
inc
inc
sahf
bound
jp
rcrb
roll
jge
xor
add
push
mov
jl
and
inc
mov
sbb
mov
js
cli
and
repnz
or
fmull
adc
pushf
xchg
adc
addb
das
cmp
inc
adc
mov
cmp
xchg
or
fistl
sbb
outsb
mov
pop
movsb
decl
sqrtps
movsb
test
push
subl
cld
lcall
inc
xchg
repnz
lahf
xor
or
adc
mov
jg
or
test
jo
jns
rolb
fs
add
call
pop
pushf
loopne
and
cli
lcall
push
add
and
jnp
rorb
xor
cmpsb
xor
fldt
imul
test
fadds
bound
rcrb
ljmp
ljmp
add
outsl
pop
and
sub
inc
push
popf
out
xor
push
dec
push
or
mov
xor
stc
or
adc
sbb
pop
dec
cltd
stos
push
mov
movsl
push
pusha
and
insb
cld
push
xlat
repnz
or
push
push
and
incl
and
add
insb
pop
push
pushl
adc
insb
add
daa
lcall
and
push
addl
mov
outsb
lods
pushl
add
inc
push
aaa
and
lea
cmp
out
xor
push
ror
pushf
sahf
in
insb
xor
or
sbb
sub
std
adc
int
fcmove
shlb
enter
cmp
and
lods
lea
pusha
daa
push
add
mov
adc
inc
and
andl
out
mov
movsl
inc
xchg
jmp
cmp
mov
inc
and
mov
adc
call
or
jae
je
data16
xor
mov
mov
ja
stc
pop
push
decl
adc
stc
mov
outsl
hlt
mov
aaa
add
push
mov
idivl
test
push
aas
mov
lods
test
ss
lahf
test
cmp
repnz
in
pop
das
ret
or
daa
test
push
adc
in
pop
shl
add
xchg
pushl
shr
add
movsb
add
xchg
push
sbb
pop
push
ja
aam
dec
add
or
movsl
ljmp
xor
add
shl
dec
sbb
add
add
cwtl
ljmp
fs
or
sbb
bound
mov
pusha
sbb
jle
ljmp
cmpsl
jl
xchg
mov
add
loop
mov
xor
mov
push
jl
or
dec
bound
enter
data16
add
push
adc
xchg
fs
or
gs
scas
subb
lods
mov
dec
jne
popf
xchg
jno
hlt
pushl
clc
aaa
ljmp
jbe
pop
rcr
int3
mov
jecxz
scas
clc
sbb
dec
mov
jl
roll
ret
sbb
cmc
pop
fld1
jecxz
dec
jo
ljmp
jbe
in
ljmp
xlat
fildll
in
jmp
jae
push
lret
std
pushl
popf
fsubrp
adc
int
adc
mov
pushl
jb
stos
pop
mov
popa
stos
lahf
hlt
inc
adc
popf
mov
push
pop
fidivl
cmp
sub
mov
pop
xchg
js
sbb
enter
sub
adc
dec
ret
stc
les
fsubp
jp
dec
lds
das
enter
mov
pop
popf
jno
pop
pushf
rorb
push
rclb
ljmp
adc
and
mov
cmp
int
cmp
or
les
mov
decl
nop
aas
cltd
sbb
push
xchg
or
adc
jp
ret
and
loop
lcall
loop
push
mov
loopne
dec
adc
imull
stc
lcall
movsb
and
roll
pop
adc
or
stos
add
in
frstpm(287
adc
or
cmpsb
cmp
sbb
cmpl
inc
gs
lea
sbb
es
cmc
jp
mov
aas
mov
arpl
sub
pop
rcr
mov
push
fstpl
mov
outsl
pop
pop
or
pop
adc
ljmp
dec
imul
inc
mov
insb
inc
aaa
cmp
jge
sub
jo
loop
pop
loopne
mov
inc
or
xchg
pop
psubq
stc
cmp
jg
mov
push
mov
sti
push
hlt
add
test
xor
lock
mov
cmc
ffree
mov
xchg
add
aam
mov
sub
lcall
leave
popf
enter
push
sbb
test
jg
dec
xchg
mov
mov
call
push
or
mov
into
call
mov
in
fs
sbb
pop
cwtl
rol
pushf
into
roll
lock
mov
cltd
xor
int
pop
leave
gs
inc
dec
and
incl
fmull
push
test
clc
lcall
mov
mov
out
adcl
adcb
adcl
je
adc
mov
cmpsb
idiv
outsb
lcall
rolb
pop
clc
roll
dec
mov
adc
dec
popf
sub
jmp
pop
clc
lods
mov
fldcw
xchg
call
lods
or
les
mov
or
ja
add
pop
mov
or
add
shl
ficoms
nop
lret
adc
decl
pop
test
sahf
inc
inc
sahf
in
or
dec
or
sub
push
pop
pop
hlt
hlt
nop
pop
mov
test
cld
jmp
lcall
sbb
clc
jg
in
dec
mov
test
and
pop
push
popa
arpl
mov
call
addr16
lret
negb
dec
lahf
negl
xor
adcl
jmp
xor
add
sarl
and
add
fs
mov
jmp
adc
inc
loop
aas
loop
mov
in
dec
movsb
call
std
out
push
popa
pop
negb
sbb
call
inc
add
jo
and
mov
jl
int
adc
bound
push
jnp
and
and
add
push
cld
mov
fidivrs
sbb
or
or
mov
xor
mov
mov
into
movsb
fs
jle
mov
movsb
rorb
mov
out
cld
xchg
push
lcall
sbb
outsb
loopne
jg
les
jecxz
enter
js
dec
pop
lcall
and
xor
into
loope
lret
js
xchg
faddp
ljmp
movsl
xchg
cltd
fsubl
and
or
xchg
fcoml
int3
in
push
ljmp
loop
loope
rclb
outsb
xchg
lds
jp
add
jl
sbb
ljmp
movsb
or
inc
xor
es
lds
aam
dec
les
jo
mov
jg
sub
xchg
cltd
pop
stos
xchg
popf
dec
cmp
and
inc
fldt
ljmp
add
add
cltd
fildl
add
inc
dec
push
faddl
lcall
rolb
test
adc
ficoms
aad
insb
shll
mov
sbb
ljmp
lds
cmpsb
pop
or
pop
stc
nop
lret
test
dec
jo
arpl
jecxz
push
aam
movsl
pop
push
push
nop
add
xor
decl
add
sub
roll
xor
out
dec
or
push
mov
adc
cmp
xchg
hlt
imul
mov
push
test
gs
test
or
mov
fisubl
dec
movsb
mov
mov
mov
shll
jmp
and
les
push
pop
push
int
stc
push
lcall
xor
add
sub
fistpl
fcoms
jb
sbb
hlt
lds
rorb
xor
lcall
dec
or
or
push
xchg
pusha
loope
push
jmp
jmp
aas
fstpl
lea
aam
mov
shlb
mov
jecxz
pushf
push
dec
jl
mov
clc
imul
insl
push
pop
pushf
sbb
ljmp
mov
movsb
cmpsb
mov
inc
lret
and
gs
xor
fs
negb
std
pushl
or
dec
lret
sub
mov
adc
out
pop
mov
test
jo
pop
faddl
aaa
loop
add
xor
xchg
dec
std
jg
out
cld
mov
inc
xor
add
dec
lds
sbb
jg
cmp
inc
xchg
mov
and
or
add
cs
cs
jg
pop
add
or
dec
adc
pop
dec
push
cmp
fbstp
call
push
push
mov
in
and
and
shl
rcll
rolb
pushl
push
lods
test
sbb
pop
pushf
addr16
add
cmp
sbb
int3
xor
mov
mov
in
fs
jle
and
pushf
jl
xchg
imul
push
inc
out
cmp
jmp
aaa
std
ljmp
ret
mov
in
aas
repnz
push
and
movsb
or
movsb
jge
push
call
and
ret
cmpsb
or
gs
fmull
cwtl
adc
mov
push
lret
add
inc
sbb
lahf
sbb
repnz
ljmp
into
and
shlb
cld
int
jns
inc
mov
rcl
nop
sub
push
fcomip
flds
mov
lea
cltd
sbb
pusha
xchg
repnz
add
in
loop
clc
lcall
pop
adc
fisubs
adc
xchg
cmp
add
mov
add
push
cwtl
cmp
mov
jge
add
in
push
sub
push
loopne
mov
movsl
mov
mov
lcallw
xchg
jg
or
mov
in
xchg
testb
out
loop
lods
lret
cmc
pop
shrb
pop
rsqrtps
lcall
jne
add
rolb
adc
and
fadds
decl
iret
dec
and
mov
test
cmc
iret
push
test
insl
xchg
cli
mov
push
or
std
xorb
aad
cwtl
lret
push
pop
push
adc
lcall
push
popa
and
sub
add
nop
or
pop
lcall
add
or
in
imul
push
sbb
lock
repnz
stc
mov
pusha
movsb
test
mov
in
pusha
lods
inc
in
cmp
ss
dec
jnp
lods
into
adc
push
call
push
or
add
inc
push
movsb
inc
push
and
mov
test
jg
fwait
roll
pushf
arpl
sub
adc
fdivrp
jg
dec
mov
shll
mov
or
mov
mov
lcall
leave
mov
sub
cld
imul
sbb
push
push
int3
and
push
jl
js
in
ja
mov
lea
jl
xchg
enter
daa
xchg
xchg
jl
adc
fadd
fwait
add
clc
out
dec
ss
jg
orb
sbb
pop
pop
int3
dec
and
inc
enter
pop
adc
mov
dec
aam
mov
lcall
scas
mov
scas
mov
and
or
lret
data16
xchg
sbb
push
jne
test
test
jg
mov
cmp
in
mov
fucomip
pop
out
fmul
dec
popl
ljmp
incl
pop
cs
pushf
jb
jnp
sar
jnp
inc
jnp
mov
push
cmp
dec
adc
mov
fmul
insb
hlt
jg
mov
mov
int
push
inc
inc
sbb
std
or
or
mov
cmpsb
push
loopne
lret
mov
mov
mov
negb
mov
mov
addb
sbbl
in
and
pop
pop
inc
rcrb
ljmp
sbbb
int3
xor
mov
popf
cmpsb
inc
daa
dec
es
icebp
inc
jb
mov
fbstp
inc
fisubrs
mov
fcmove
fwait
stos
push
xchg
test
imulb
aas
gs
outsb
push
xor
cld
stos
dec
cs
enter
inc
jle
rcll
add
and
sbb
lcall
pop
xor
lret
and
adc
inc
push
mov
push
incl
sahf
je
xlat
cmp
push
lea
dec
test
ljmp
mov
dec
mov
jg
dec
bound
jg
stos
ret
pop
or
push
adc
ror
sbb
pop
cmp
adc
lods
sub
jo
outsb
push
mov
jno
mov
fwait
lret
mov
sub
xchg
mov
xlat
mov
sub
decb
in
push
cmp
decl
xchg
mov
lea
cmp
pusha
out
imulb
mov
in
test
frstor
frstor
lods
jne
repz
dec
in
repnz
inc
call
push
cwtl
repnz
or
push
mov
xor
outsb
lret
loope
outsl
mov
add
rolb
sti
ja
ljmp
adc
dec
bound
push
xchg
lds
add
les
add
add
call
insb
mov
cmpsb
loop
cli
pop
xchg
dec
test
push
clc
pushl
popf
cmp
ficomps
push
mov
incl
arpl
insb
xor
int
and
call
js
test
add
lock
imul
iret
cmpsb
ds
shl
xchg
adc
lods
or
inc
mov
mov
das
dec
sbb
in
add
lcall
pop
xor
sti
or
sub
push
rdtsc
sub
leave
jb
lcall
sub
into
icebp
scas
inc
xchg
and
inc
xlat
push
pop
and
lds
repnz
incl
push
jb
or
xor
out
ret
xor
out
cmp
movsl
repz
pop
xor
pop
outsb
adc
and
loop
gs
and
and
decl
sub
xchg
xor
jp
dec
jecxz
mov
lcall
lods
subl
cmp
sbb
loope
pop
rorb
fdivrl
rorl
pop
icebp
pusha
mov
mov
movsb
call
test
dec
in
push
aaa
pop
stos
push
fisttps
jbe
lods
outsb
test
lock
addr16
out
inc
push
les
rolb
add
mov
enter
and
insl
dec
call
out
push
hlt
or
hlt
fistpll
pusha
dec
mov
add
adc
incl
mov
loopne
ret
sbb
inc
push
icebp
pop
inc
ljmp
ret
faddl
add
icebp
pop
test
cmp
orb
ljmp
dec
in
push
ljmp
outsb
xchg
lahf
cli
sub
pushl
iret
aaa
aaa
xchg
jnp
mov
mov
shlb
icebp
xchg
in
loope
lods
fwait
cmpb
fsubrs
repnz
cmpsb
and
push
jp
sahf
adc
add
out
sub
ret
jb
jno,pn
aas
insl
sbb
rcl
mov
call
inc
lret
insb
push
cld
cmp
add
push
xor
testb
or
and
test
pop
lretw
push
fisubs
call
sbb
ret
inc
imul
push
mov
scas
jmp
pushl
jns
and
mov
jecxz
insb
xchg
jae
mov
gs
outsb
loop
stc
lcall
loopne
push
sub
cs
mov
ds
mov
ljmp
cmp
jno
sub
jb
outsb
mov
lcall
inc
negl
roll
fwait
popa
mov
sar
inc
sub
daa
or
les
test
push
sub
mov
rorl
and
adc
rorb
pop
rorb
sbb
sar
incl
inc
data16
adc
enter
adc
mov
lret
xchg
sub
lock
cmp
or
xor
inc
xchg
leave
or
sahf
adc
xchg
pop
cmpsb
out
mov
pop
push
pusha
adc
inc
sbb
xor
and
sbb
pop
cltd
jmp
dec
cltd
and
mov
inc
mov
mov
jo
data16
cltd
adc
push
cwtl
push
mov
ljmp
lcall
ja
fisubl
adc
idiv
inc
incl
jo
das
jb
loopne
sub
imul
lock
mov
lds
movl
pop
sbb
fwait
inc
insb
imul
nop
inc
dec
or
mov
fbld
dec
mov
imul
shlb
xchg
es
stc
sub
iret
les
jg
addb
jb
int
inc
addr16
inc
mov
mov
xchg
popf
mov
push
xchg
or
cld
incl
es
or
push
inc
test
push
fcmovbe
scas
mov
mov
mov
pop
movsl
loopne
push
ds
sbb
mov
add
sub
xchg
ds
add
and
outsb
pop
mov
mov
dec
lods
mov
xor
mov
push
sub
mov
and
mov
jl
jmp
sub
lcall
jmp
rorb
xor
sarb
cld
adc
jmp
mov
sub
sbb
mov
mov
call
inc
ret
fsubrl
sbb
lock
cmp
mov
and
lds
mov
ret
lcall
cmp
ret
add
mov
std
jg
and
or
mov
mov
loopne
hlt
add
push
xchg
adc
nop
cmpb
enter
hlt
shlb
popa
loop
incl
cmp
push
pop
add
add
sbb
cmp
insb
popl
mov
ret
adc
incl
and
cwtl
push
xor
jp
aaa
dec
ret
xchg
sbb
enter
push
sbb
data16
es
fsubrs
daa
lahf
test
sub
lcall
hlt
fsin
idiv
call
push
push
scas
cmp
xchg
loop
mov
mov
add
pop
fnstenv
dec
mov
std
mov
jnp
jmp
leave
ljmp
inc
add
into
int3
ljmp
sub
pop
inc
pop
cmp
loope
xlat
push
enter
sub
ret
xchg
xchg
jns
jns
nop
add
in
into
inc
dec
or
xor
mov
cmp
xchg
xchg
outsb
jmp
push
ret
push
repz
test
pop
sti
fmuls
adc
call
insl
stos
mov
stos
lcall
jb
sub
push
xchg
xchg
rclb
or
mov
xor
fwait
or
add
inc
maxps
repz
mov
enter
or
orl
ljmp
fistps
sarl
jmp
dec
xchg
jns
lret
or
add
iret
ljmp
fbstp
orl
fwait
pop
lods
xor
iret
rol
les
sub
outsl
cli
incl
sbb
and
jecxz
add
push
dec
not
lcall
push
adc
imul
mov
push
ret
jns
clc
xchg
in
or
add
or
shll
and
out
adc
add
adc
jb
out
in
and
loop
adc
rclb
jmp
dec
dec
cwtl
gs
push
pop
movsb
mov
inc
sahf
cmc
xchg
sbb
add
xchg
nop
xor
ljmp
xor
test
test
pop
xor
add
or
loope
pushl
js
clc
out
gs
inc
pusha
xchg
and
ljmp
arpl
lret
mov
sbb
test
int
ret
std
out
inc
cli
mov
xchg
lods
and
sub
jecxz
into
mov
push
sar
cmp
aaa
mov
ds
loop
fcomip
fistpl
pop
jl
test
and
loope
movsl
sub
lcall
incl
ljmp
mov
push
push
cwtl
cli
or
push
ljmp
jg
mov
jge
ret
test
jne
inc
call
aaa
adc
incl
jp
xchg
in
bound
adc
outsb
dec
cmp
aam
or
inc
push
repnz
pop
call
bound
inc
sbb
je
lea
jnp
fs
mov
or
call
mov
arpl
pop
xchg
xorb
ljmp
shlb
cs
sbb
dec
test
out
fstpl
mov
dec
jmp
sbbl
sub
jbe
add
repz
add
dec
inc
pushl
mov
js
push
dec
add
xchg
test
jg
and
aad
in
mov
add
stos
ret
pusha
mov
sub
aad
push
inc
enter
xor
lock
fistps
dec
fldenv
test
mov
push
and
adc
jmp
inc
mov
adc
std
mov
xchg
test
loope
mov
or
lcall
loop
xor
add
les
call
inc
adc
daa
imul
dec
inc
sbb
push
pop
imul
mov
test
lea
push
mov
shll
bound
incl
std
fcoms
push
xchg
mov
jmp
mov
hlt
xor
je
mov
jmp
aaa
insb
or
addr16
xchg
cwtl
ficoml
mov
xor
add
mov
test
mov
sub
push
xor
jne
stc
scas
mov
sub
gs
cwtd
jle
es
andb
call
cmp
mov
xchg
lea
pop
cmp
cltd
pop
lods
test
dec
or
push
call
fistpll
outsb
mov
mov
lods
je
sbb
mov
outsl
nop
movsl
mov
insb
and
and
add
test
cmpsb
in
movsl
les
adc
cmp
ljmp
sti
mov
mov
adcl
add
pusha
cmp
jle
cwtl
pop
hlt
mov
and
push
or
enter
mov
popf
mov
lret
out
into
push
inc
cli
pop
sbbl
adc
in
mov
lock
or
jp
pop
adc
repz
in
subb
push
loope
mov
dec
test
mov
ljmp
repnz
inc
push
pop
popf
add
nop
xor
add
jg
cmp
mov
or
add
testb
imul
icebp
xor
lcall
movsb
jmp
jbe
jb
sub
loopne
ljmp
inc
int
mov
mov
outsl
cli
jg
lods
lods
outsl
insl
ljmp
pusha
pop
sbb
sub
push
or
incl
fxch
pop
pop
outsl
rcll
and
stc
and
lock
clc
xchg
xchg
aas
aad
lret
fisubl
mov
xchg
add
jg
shlb
fisttpl
in
cld
mov
pop
test
add
and
movsl
shll
dec
sbb
decl
test
ja
repnz
and
outsb
adc
loopne
ret
sbb
lcall
jne
xor
cli
add
jb
pushl
imul
pop
repnz
sahf
add
cwtl
aad
or
mov
inc
mov
clc
aas
mov
lcall
push
fwait
inc
mov
mov
push
xor
push
push
push
mov
inc
xchg
cmpsl
mov
push
adc
jp
jno
jo
mov
jmp
push
mov
addr16
int3
xor
inc
push
adc
inc
jne
or
adcb
or
jb
bound
push
add
call
inc
xor
pop
imul
cli
jg
stos
data16
jge
mov
cmp
ljmp
mov
ljmp
sbb
sub
stos
out
mov
std
ljmp
xor
pop
inc
jbe
xor
sub
cli
jg
cmp
sbb
lcall
or
shr
jecxz
cld
call
hlt
int3
fs
mov
das
mov
subb
mov
jg
sub
mov
mov
cmc
pushf
insl
xchg
iret
push
mov
fdivr
sbb
mov
ljmp
jp
das
sub
cli
out
std
iret
addb
popa
in
inc
cmp
push
int3
add
movsb
xor
mov
xchg
push
xor
ds
decl
decb
sbb
incb
repnz
lock
and
jnp
push
add
mov
call
les
daa
mov
decl
dec
inc
adc
cmc
call
pushl
pusha
push
dec
and
add
loop
sub
sub
dec
mov
in
loope
and
add
add
or
outsb
push
sbb
mov
mov
pop
push
mov
jmp
test
inc
in
add
cmpsb
es
sub
push
test
lcall
push
xor
mov
and
pop
inc
mov
sbb
fildll
push
lock
mov
cmp
mov
ljmp
sub
fadds
sarl
and
mov
inc
jmp
cli
ljmp
decl
adc
int
sub
adc
mov
dec
nop
add
ss
mov
inc
cmc
cli
mov
adc
ss
bound
mov
sub
sub
xor
mov
inc
sahf
pop
pusha
sub
push
or
ret
sarb
pushl
ljmp
or
dec
sub
and
int3
scas
es
insl
lret
fbld
inc
in
aas
clc
adc
test
outsl
clc
jmp
insb
jp
pop
inc
push
adc
xchg
out
lods
mov
xchg
pop
push
cli
jg
xchg
out
stos
sub
cmp
mov
leave
decl
mov
dec
sub
xorb
xor
lcall
cld
and
call
push
and
subb
and
pusha
lcall
outsl
pop
and
mov
loopne
dec
rol
ror
jns
lret
lahf
cmpsb
outsl
scas
clc
adc
mov
es
add
hlt
rcr
add
sub
add
inc
lret
and
mov
add
in
inc
gs
adc
rclb
call
jg
sub
sub
insb
das
jno
push
out
push
and
jg
imul
and
mov
inc
inc
cmpsb
lcall
add
incl
insb
add
adc
movsl
push
ljmp
movsb
and
test
xor
jmp
bound
jge
adc
test
das
pop
loop
aaa
push
inc
mov
cld
xor
dec
aaa
decl
lea
cmp
xor
inc
dec
jo
sbb
mov
cmp
jmp
out
repz
inc
jns
in
into
jmp
mov
cmp
and
icebp
or
mov
imul
xchg
jo
mov
lret
insl
ret
ljmp
xchg
sub
rol
clc
or
movsb
inc
or
out
inc
add
add
bound
fbstp
xor
inc
fmull
scas
dec
xor
sub
jmp
movsb
inc
lds
sub
inc
xchg
cli
inc
add
dec
sahf
mov
dec
sbb
sub
add
ljmp
aam
xor
and
pop
pop
movsb
rorb
mov
arpl
ljmp
push
xor
add
test
mov
clc
decl
dec
inc
movsl
add
hlt
loop
jl
pop
dec
add
push
repz
add
lock
decl
sub
mov
rclb
inc
cmovle
pushaw
mov
lret
negb
fwait
inc
clc
or
daa
dec
add
repnz
mov
rsm
and
adcb
xor
push
jmp
in
pop
mov
or
mov
jae,pn
fisubrl
stos
and
stos
sbb
xor
hlt
and
push
fcmovb
pusha
sub
and
daa
mov
aam
sub
or
ja
ret
dec
mov
pop
rclb
stos
xor
xchg
xchg
sarb
das
iret
jo
repnz
inc
icebp
jbe
xlat
cld
out
xorb
rcll
xor
out
mov
add
out
jg
insb
xchg
mov
bound
outsb
jb
cmc
inc
pop
hlt
jno
repnz
push
add
cmpsb
ficomps
cli
push
xor
jno
fildl
add
lcall
lods
bound
sub
adc
jb
ds
dec
or
pop
xchg
mov
xchg
mov
mov
stos
ja
incl
sub
call
dec
or
push
decl
dec
ljmp
xor
test
cmp
jae
sub
mov
test
cli
mov
bound
push
xor
daa
xor
jecxz
bound
out
mov
insl
mov
fisttpl
inc
dec
andl
push
jae
sar
cs
lds
arpl
cmp
dec
pop
arpl
lcallw
xor
cmp
pop
mov
add
lds
inc
aas
push
aad
pop
out
lret
jecxz
xchg
xor
mul
or
xchg
jbe
into
loopne
out
push
push
faddl
sbbb
icebp
xor
loopne
mov
add
mov
add
out
push
add
aaa
mov
popa
jecxz
call
and
and
out
xor
incl
int
in
mov
rcll
loop
rolb
movsl
cmp
out
push
jns
pop
loop
lods
in
push
movsl
iret
mov
ds
xor
sub
push
push
dec
iret
push
addr16
mov
mov
mov
imul
jno
push
mov
test
jecxz
mov
inc
lock
les
and
lds
je
jecxz
mov
loop
pop
or
sahf
loopne
incl
dec
jle
jnp
bound
mov
dec
or
inc
sub
sarl
cmp
or
incb
xchg
int3
add
cmp
lcall
mov
sub
jecxz
dec
imul
cs
out
dec
mov
dec
je
in
dec
out
ljmp
xor
sbb
pushl
ljmp
inc
xor
arpl
outsl
and
cmpsl
and
out
dec
es
mov
decl
jp
int3
mov
push
sbb
ss
add
sbb
sub
sub
cli
jmp
cmp
add
in
outsw
dec
and
call
loopne
jmp
inc
or
dec
or
subb
jb
mov
sub
mov
or
movsl
ror
add
loope
aam
addl
jp
push
jo
rol
mov
fimull
jo
adc
stos
mov
add
add
int
push
cmc
and
push
dec
lcall
test
or
and
and
out
cwtl
gs
icebp
outsb
adc
mov
jbe
es
aam
mov
mov
dec
adc
andb
jecxz
push
jg
ljmp
adc
adc
adc
push
ljmp
insl
adcb
jge
shll
pop
movsl
dec
xorb
add
xor
loopne
lret
cltd
mov
fisttps
out
dec
pushl
sub
lahf
popa
in
adc
call
out
or
addl
ljmp
or
out
cmp
shrl
idivl
shrb
icebp
jecxz
add
insb
or
loop
mov
aaa
std
dec
sbb
repnz
xchg
adcb
lcall
pop
das
lcall
in
jmp
adc
aas
jb
push
cmpsl
data16
ret
jmp
push
clc
cmp
add
cwtl
test
getsec
bound
inc
cld
ljmp
xchg
inc
jnp
add
mov
sub
fsubs
mov
inc
push
hlt
jg
inc
enter
and
or
inc
or
cwtl
inc
out
adc
mov
pop
daa
and
movsb
lcall
sbb
data16
incl
mov
repnz
rcrl
into
cs
int3
outsl
outsl
clc
dec
stos
add
cwtl
push
push
or
and
scas
ljmp
mov
aaa
mov
xor
pop
adc
pop
out
dec
filds
or
push
test
lds
gs
dec
test
cld
pushl
xchg
push
jl
test
outsb
and
cli
jg
xor
faddp
cmc
mov
mov
xchg
push
mov
pushl
ja
mov
push
out
jbe
jmp
jns
xlat
jbe
testl
xlat
sub
dec
add
dec
mov
outsb
push
jnp
movsb
les
pushl
xchg
daa
xchg
popf
test
jl
or
xchg
mov
pop
xor
imul
test
movsb
sub
repz
lock
fcomip
jmp
sub
push
mov
mov
lret
sbb
mov
pop
sub
inc
test
cs
test
xchg
cmp
sub
mov
test
data16
pop
cmpsl
jb
call
sub
fisubrl
jg
xor
bound
cwtl
pushf
ljmp
pushl
add
and
lods
mov
dec
pusha
pop
jp
and
xor
std
imulb
sbb
ror
inc
mov
movsb
pushl
mov
lret
enter
mov
daa
cmpsb
fcmovbe
sahf
pushf
mov
mov
outsb
dec
inc
mov
rolb
clc
decl
inc
push
add
out
add
push
icebp
dec
mov
dec
add
mov
decl
jno
out
stos
insb
or
repnz
bnd
sub
pop
cld
mov
inc
inc
stos
call
push
dec
adcb
xor
xor
hlt
ljmp
sbb
shrl
lods
cmpb
mov
inc
cltd
pop
addb
ret
adc
xchg
dec
sti
js
sub
aaa
mov
mov
fmuls
pop
std
aam
pop
cmp
push
dec
outsl
mov
scas
xchg
dec
imul
pop
mov
andl
sahf
pop
fdivrs
inc
leave
jp
mov
shlb
adc
fldl
iret
mov
mov
jle
mov
hlt
inc
xchg
les
add
push
or
pushl
jne
sub
lea
cmp
mov
adc
dec
pop
inc
add
inc
loopne
in
cld
les
adc
data16
inc
mov
loopne
pop
and
loop
inc
mov
push
add
inc
sub
pushl
mov
inc
js
addr16
xchg
inc
xor
mov
hlt
jmp
andb
xchg
adc
outsl
bound
pop
cmpb
push
add
mov
ljmp
pusha
inc
push
jle
or
pop
ret
or
rorb
pop
add
push
push
nop
loopne
mov
out
sbb
jbe
cmpsl
jns
push
jmp
pusha
pop
jg
and
or
rolb
lds
ret
addl
or
int
adc
and
pop
sub
jmp
jg
sub
ljmp
test
shl
push
out
xor
adc
push
mov
jg
sub
out
and
jno
or
push
and
jmp
add
fbld
xchg
ret
lcall
sub
aad
pop
xchg
xchg
push
call
dec
mov
jbe
xlat
les
daa
pop
addb
ret
mov
lods
xchg
xchg
mov
in
xlat
adcb
pop
lcall
pusha
fwait
lods
fdivrs
js
dec
cltd
cmpsb
repz
mov
jp
lcall
pop
push
pusha
mov
cmp
lods
pop
cltd
test
mov
dec
push
jmp
xchg
xor
and
jge
insl
push
aad
xchg
cmp
xchg
scas
insb
sub
cmp
incl
lcall
mov
cld
in
cs
sub
cmp
lahf
mov
cltd
pop
or
and
or
call
push
inc
daa
test
sbb
pop
inc
int3
loope
mov
mov
mov
xor
add
dec
inc
movsl
clc
incl
sub
sub
imul
or
mov
lock
pushf
xor
cld
inc
xchg
push
out
add
orb
pusha
adc
add
call
scas
andb
push
add
sbb
decl
add
fdivs
sub
cmp
test
dec
mov
pop
ja
mov
mov
xlat
shl
xor
push
add
shlb
pop
adc
cld
mov
pop
test
cmp
push
and
lcall
mov
pop
gs
shll
mov
jg
sbb
xchg
jecxz
lret
xchg
and
mov
mov
and
fdivrl
cmpsb
push
loop
lcall
mov
repnz
lcall
xor
add
scas
jmp
cld
call
jb
inc
or
sub
mov
inc
loope
push
andb
ret
or
sar
lds
or
shl
sbbl
std
pushl
test
or
js
adcl
rolb
out
lods
dec
dec
outsl
push
sahf
push
bound
adcl
pop
mov
cld
fistps
adc
or
lcall
inc
into
lea
mov
idivb
fs
mov
pop
movsb
push
xchg
xor
movsb
inc
inc
ljmp
push
cmp
sbb
data16
incl
pop
mov
data16
dec
bound
add
mov
xchg
mov
pop
sub
cwtl
popf
xchg
cmpsb
cwtl
ljmp
jp
push
mov
push
test
adcl
fdivrs
jg
std
mov
mov
scas
mov
cmpsb
xchg
push
sub
pop
sbb
mov
pop
or
xchg
and
pop
nop
sbb
cmp
clc
add
jg
ljmp
popa
cmp
adc
aam
inc
or
out
clc
scas
add
mov
pop
cmpsb
sar
call
push
push
cmp
xchg
sbb
mov
mov
pop
jns
inc
xchg
pop
pop
mov
andb
out
mov
pop
push
add
pusha
call
cld
pop
mov
mov
add
std
cmp
call
test
cwtl
pusha
jecxz
movsl
gs
sbb
rclb
loopne
shlb
fisubl
enter
test
mov
ljmp
mov
jecxz
adc
push
mov
repz
xor
mov
popa
test
cmp
push
mov
les
sbb
addl
pushf
cld
push
lcall
je
and
je
inc
xchg
sub
mov
loope
or
inc
sbb
cmp
incl
push
mov
cmp
test
orb
push
inc
cli
sub
testl
mov
jne
inc
mov
sbb
incl
loope
insl
loop
daa
lcall
mov
jp
dec
icebp
mov
adc
imul
push
test
mov
inc
sbb
mov
cmpsb
or
inc
pop
push
xor
pushf
push
sbb
jmp
je
lock
lods
jmp
push
addr16
sahf
adc
jbe
clc
lcall
mov
sbb
or
movsl
xchg
pop
pop
pop
stc
in
cmp
mov
push
out
sub
jmp
jge
stos
add
adc
cwtl
cmp
pop
fisubl
jmp
sub
mov
or
mov
adc
sub
dec
inc
nop
adc
push
movsl
mov
add
add
ret
cwtl
imul
mov
lcall
jae,pn
in
ja
mov
mov
add
pop
xchg
mov
cwtl
push
insl
popf
or
push
dec
mov
je
jne
xlat
push
mov
xchg
stos
fs
adc
js
sub
sbb
mov
rolb
adc
rclb
sar
incl
push
inc
mov
negb
xchg
jl
sbb
inc
sbb
xor
xor
subl
jns
adc
xor
sub
cmpsl
and
pop
fs
adc
xlat
cltd
lcall
icebp
aaa
jo
imul
add
loope
mov
lahf
mov
cli
push
cld
dec
aas
push
mov
cmp
sbb
in
rorl
inc
popf
xchg
hlt
das
sahf
dec
push
mov
mov
decl
mov
xchg
loope
and
jl
xorb
pop
push
pop
into
incl
outsb
pop
xchg
mov
or
jmp
mov
enter
stos
addr16
mov
adc
ret
xchg
cmp
push
sub
mov
adc
jmp
in
and
and
ds
add
cwtl
ret
adc
push
cli
out
rclb
sbb
ljmp
divb
pop
push
push
adc
out
hlt
add
push
andl
push
lcall
mov
pop
mov
stos
test
cld
incl
movsl
and
sub
pop
mov
cmpsb
shlb
icebp
pop
or
inc
clc
ds
fisubs
pop
adc
int
mov
call
mov
add
ficoml
sub
std
ljmp
jl
push
or
movsb
or
enter
in
aam
jg
or
push
gs
ret
sub
push
mov
movsl
cmp
or
fsubrs
push
or
fmuls
pushl
mov
pop
jle
adcl
rol
pusha
push
lcall
dec
mov
sbb
or
and
sbb
addr16
cmp
push
dec
and
stos
sbb
bound
inc
cwtl
in
pushl
fldl
dec
add
mov
jge
leave
pop
stc
movsb
or
popa
adc
push
dec
mov
test
mov
push
jo
mov
jmp
bound
and
stc
lods
decl
and
mov
jle
pushw
fcomps
daa
mov
ljmp
mov
cmc
int3
lock
xor
repnz
xor
pushl
pop
push
adc
lahf
and
and
or
push
js
inc
sbb
xchg
sub
fsubrs
jle
mov
testl
ljmp
mov
test
daa
movsl
xchg
push
inc
gs
ljmp
add
ljmp
jbe
jo
pusha
cmp
xor
sub
mov
inc
pop
sub
call
adc
rcll
inc
mov
xchg
cs
insb
or
decl
lock
jmp
xor
int3
mov
pop
bound
fidivs
lods
ljmp
ret
adc
lods
or
push
sub
test
stc
add
out
xor
das
and
mov
faddl
mov
insb
and
loope
jo
and
jno
bound
inc
call
xchg
xor
xchg
adc
test
inc
add
jmp
andb
loope
addr16
nop
xor
push
lods
cmp
adc
loop
sbb
and
mov
cmp
ret
in
jl
aaa
add
push
cld
decl
out
jmp
and
add
shl
push
push
jg
add
pop
inc
mov
and
and
adc
daa
dec
mov
push
and
pop
mov
cmp
fs
sahf
std
incl
cld
push
dec
jmp
jl
dec
cmp
ss
lret
dec
inc
rorb
les
mov
dec
adc
out
mov
cs
jle
sarl
fcmovnb
sub
push
jns
xchg
test
sbb
int
jp
cli
jns
incl
ja
xchg
or
pushl
sub
dec
std
or
out
xchg
xor
les
xchg
lds
mov
push
test
leave
or
inc
fwait
stos
lock
idiv
ljmp
adc
or
push
sub
repnz
rcrl
jmp
cmp
cmc
movsl
addr16
mov
test
mov
adc
jb
ljmp
sbb
push
inc
fnsave
aaa
sbb
push
test
push
cli
push
adc
or
sbb
and
shrl
insl
movups
mov
data16
sbb
push
cmpb
pushl
and
lcall
inc
mov
idiv
sbb
negl
adc
aaa
pop
add
lret
mov
popf
fstpt
dec
sar
cmp
leave
leave
jmp
rcrb
xor
jg
xor
xchg
xor
cmc
testb
outsl
je
dec
mov
jnp
pop
idiv
mov
ljmp
add
push
cmp
and
push
and
in
push
daa
and
mov
xchg
xor
add
ss
sub
pop
fwait
xor
push
adc
cli
add
call
cli
lods
mov
mov
cmp
or
bound
bound
xorl
mov
inc
sub
cmp
dec
push
push
cld
lcall
and
loop
dec
fdivl
lock
arpl
sub
jg
add
pop
fs
out
fs
mov
sub
cmp
push
inc
outsb
dec
adc
ja
icebp
das
movsb
aaa
or
rcl
nop
add
addr16
adc
ret
decl
incl
push
inc
popa
shrl
add
das
pop
mov
cmpl
jp
push
rcrl
gs
inc
cwtl
xchg
adc
add
pop
and
jp
mov
mov
push
mov
inc
and
jg
add
xor
and
aam
lds
and
adcb
decl
xchg
adc
mov
add
pusha
add
cmc
insb
lcall
loop
mov
out
mov
add
out
out
jge
add
jmp
pop
push
jo
jg
add
data16
jle
mov
push
sbbl
outsb
push
xor
xor
out
in
mov
lock
push
rolb
nop
call
repnz
mulb
cmpl
test
add
jo
and
or
out
push
jno
ret
lods
dec
xchg
push
pop
adc
clc
call
jno
les
mov
fwait
sbbl
pusha
test
ret
add
shrl
xchg
pop
mov
adc
ljmp
push
push
push
or
and
adc
pop
test
dec
mov
dec
mov
mov
and
and
xchg
xchg
push
in
push
jge
daa
inc
mov
cli
mov
call
xchg
mov
bound
aas
push
daa
sub
mov
pop
popa
cs
xchg
inc
popa
jno
insl
in
inc
pop
jbe
jp
les
push
xor
sub
fsubs
push
insb
adcl
push
dec
adc
dec
adc
sar
mov
addr16
adc
jb
dec
mov
loop
scas
xchg
push
adc
inc
fwait
int3
adc
lock
jecxz
and
and
xor
mov
aas
data16
mov
inc
inc
xchg
mov
mov
inc
push
jl
loop
pop
sbb
mov
ja
out
stos
insl
adc
pusha
fs
loop
xor
idivl
sbb
adc
xchg
lcall
cmp
data16
lock
jmp
pop
pop
xor
lds
scas
and
call
mov
pop
or
add
pop
aad
decl
pop
push
push
dec
inc
add
xor
or
insl
int3
std
jbe
lcall
popa
jo
adc
add
pop
xor
pop
sub
shl
jo
subb
sbb
sub
xchg
push
das
add
lock
sub
nop
add
movsb
cmp
mov
adc
xlat
pop
and
cmp
mov
and
sub
push
push
xchg
dec
cltd
fdivl
adc
jbe
inc
mull
push
sar
call
xor
jb
bound
add
xchg
push
aas
nop
jb
pop
mov
adc
jae
orb
ja
subl
hlt
outsl
les
and
mov
mov
sbb
dec
les
xchg
sub
pop
pop
xchg
jp
mov
je
jbe
adc
icebp
add
inc
or
js
jne
add
adc
mov
addb
loopne
cld
or
push
xchg
test
push
add
mov
pop
sub
stos
add
add
adc
pop
add
int
adc
incl
jnp
sbbl
adc
hlt
fisttps
mov
push
sarl
cmp
fstp
and
dec
push
lods
int3
jns
mov
inc
notb
test
dec
push
xor
fcoml
jg
ja
test
js
scas
and
mov
sbb
rclb
jp
jle
aad
xchg
add
movsl
inc
dec
adc
aaa
xchg
ret
enter
js
ud0
mov
aam
pop
and
add
loope
sub
pop
sbb
sub
xor
jecxz
xor
outsl
add
cmp
pop
leave
and
cmp
jg
dec
mov
or
xchg
add
push
jmp
cmp
jb
ret
push
push
mov
jns
pop
fiaddl
jmp
pop
sub
xchg
xchg
pop
jns
inc
loopne
test
fildll
push
jmp
dec
dec
cli
and
sub
sbb
push
add
mul
xchg
adc
sub
sbb
xchg
push
cmpsl
lret
xchg
push
cmp
jmp
mov
sbbl
adc
push
pop
sub
test
adc
pusha
imul
pop
inc
shlb
jo
mov
test
xor
sub
fdivrs
aaa
mov
sub
popa
lcall
fildll
mov
test
rcrl
sub
inc
pop
ljmp
mov
add
lock
dec
fadds
dec
ljmp
out
xchg
insb
jb
shlb
fnstcw
mov
ljmp
sbb
sub
mov
add
outsl
in
mov
mov
xor
sbb
decb
pop
idivb
cwtl
call
pop
aas
pop
repz
ljmp
mov
mov
ror
sbb
sbb
cmp
aaa
dec
idivb
cmp
mov
and
fiaddl
jne
pop
mov
mov
inc
cmp
adc
xchg
push
std
out
cli
decl
adc
cmp
push
push
pop
jno
test
push
ljmp
jg
push
adcb
lods
jecxz
mulb
pushl
sbb
and
mov
cs
xchg
popa
stos
adc
mov
cltd
add
test
push
test
bound
jbe
adc
clc
notb
sbb
jmp
imul
repz
addb
orb
popa
ja
xor
test
pop
std
mov
adc
jp
push
mov
rclb
and
int
adc
fwait
inc
pushl
pop
mov
adc
pushf
std
add
sarb
sbb
fildll
jecxz
icebp
mov
xor
cmp
jl
lods
pop
pop
loopne
jmp
inc
sar
sub
repnz
fmull
or
sub
rorb
lea
sarl
push
adc
push
add
add
xchg
call
xor
lock
mov
das
sbbl
cmp
mov
add
xor
decl
rcrb
idivl
dec
dec
push
sbb
dec
ret
mov
fcomp
add
dec
imul
mov
and
or
xor
mov
cld
mov
faddp
mov
test
je
push
aaa
pusha
add
loope
mov
mov
dec
sbb
pushf
jae
test
call
daa
or
bnd
add
shlb
mov
cmpl
inc
xchg
dec
ljmp
cld
test
sub
les
ljmp
xchg
push
sbb
sbb
adc
jae
cli
lcall
or
movb
push
xchg
adc
rorb
push
push
aas
pushl
push
jno
xchg
xchg
bound
sub
add
out
gs
add
mov
fldt
mov
decl
or
leave
call
mov
lods
into
sbb
inc
jp
fisubrl
lcall
in
fsubrp
leave
mov
or
aam
adcb
stos
inc
sub
lcall
shrl
dec
xchg
mov
dec
lds
adc
add
inc
or
fsubrl
push
cmp
mov
lock
in
mov
inc
cmp
jge
mov
test
cld
fidivl
add
into
pop
mov
into
add
arpl
xor
imul
mov
repz
adc
adc
pushl
pop
mov
xor
mov
pop
iret
lock
push
rorb
mov
push
push
push
daa
mov
jnp
or
stos
mov
xchg
or
sbb
rcrl
sub
clc
push
push
mov
ficoms
xor
bound
pushl
jo
mov
and
add
prefetchwt1
or
jno
sub
das
cli
into
ret
sbb
mov
and
les
xchg
or
icebp
dec
std
aam
dec
cmp
imul
psrad
sbb
ret
fcmovb
jmp
xchg
inc
imul
adc
aam
jg
jb
ds
sub
xor
sub
inc
imulb
pop
test
inc
add
xor
adc
in
cwtl
mov
scas
aaa
xor
lds
int
mov
and
leave
out
aad
jmp
into
dec
adc
sub
je
vmovlpd
repz
nop
jmp
push
sarb
popa
sub
ljmp
inc
mov
ljmp
movsb
push
insb
movsl
sahf
ljmp
ds
mov
jmp
fsubrp
xchg
dec
jmp
incb
dec
shr
into
jmp
scas
jmp
mov
mov
mov
push
mov
dec
in
adc
int
lock
pop
sbb
hlt
mov
lods
call
les
mov
pop
out
fdivr
ljmp
xor
stos
insb
inc
and
lea
mov
push
rcrb
inc
mov
push
sbb
push
lret
mov
cld
inc
fbstp
adc
mov
psubusw
pop
jns
mov
loop
popf
movsl
xor
jecxz
ljmp
hlt
cmp
add
das
add
movl
xchg
jp
add
lcall
ret
das
xorl
inc
pop
std
adc
decl
cmp
dec
mov
popf
jecxz
sub
leave
icebp
push
scas
mov
loope
fistl
push
pop
pop
mov
lret
cmp
ljmp
hlt
inc
iret
icebp
pop
std
icebp
xor
and
cmpsb
movsl
data16
popa
pop
pop
cs
pop
nop
sar
incl
inc
push
push
sbb
xchg
cli
shrb
ja
insl
loop
xchg
jo
fs
sub
call
loope
cmp
adc
adc
aas
cmp
mull
out
fsubr
mov
dec
jno
int
call
lock
lcall
lock
and
add
xchg
rcl
stc
rolb
mov
sbb
out
shll
push
pushf
das
jge
iret
cli
sahf
jle
fcomip
cmpsl
scas
push
jle
test
sti
aad
cli
xor
sar
and
fistps
stc
test
sbb
cld
mov
mov
inc
pop
pusha
aas
pop
ret
and
and
xchg
mov
jbe
pop
sub
repz
bound
jmp
jge
out
cmc
mov
lods
inc
test
mov
imul
sub
pushf
push
popa
sbb
dec
out
push
cmp
dec
call
js
fs
mov
mov
xor
pop
adc
add
adc
cmpsb
inc
call
rclb
push
xchg
xor
mov
shlb
loop
ljmp
test
adc
xor
mov
pusha
xchg
subl
aaa
jae
mov
shll
out
in
jmp
incl
cmc
xor
or
mov
xchg
push
in
push
sub
sahf
dec
ja
and
ja
ljmp
cmp
sbb
sub
jmp
sub
shlb
mov
jnp
xchg
push
mov
jae
testb
inc
sar
sub
mov
mov
or
lcall
inc
shrl
sub
jmp
lahf
jge
dec
int
pop
sbb
jbe
scas
clc
pushl
sub
mov
aad
mov
add
sbb
fs
or
cld
shrl
cwtl
pop
ljmp
add
cltd
mov
aam
loopne
rol
sahf
ret
das
lcall
decl
push
jb
adc
movsb
cwtl
dec
jmp
lret
pop
cmp
cmc
out
dec
lahf
into
cld
call
enter
jg
jmp
hlt
lcall
pushf
or
mov
mov
or
out
and
ret
or
fdivl
ljmp
add
add
mov
daa
pusha
xor
push
inc
adc
dec
test
and
pop
hlt
ret
mov
decl
adc
pusha
icebp
or
mov
lods
rol
sbb
adc
and
mov
addb
in
lock
adc
mov
or
push
loopne
cmp
lcall
cmp
adc
mov
test
or
addl
popa
pop
adc
aaa
cld
pop
cld
insb
fadds
iret
inc
incl
inc
syscall
cli
sub
jmp
dec
sub
fsub
xor
out
pop
data16
mov
push
inc
popf
inc
xchg
sub
adc
rolb
mov
add
xchg
pop
inc
mov
and
test
mov
push
rorb
inc
clc
decl
test
in
decl
mov
adc
push
dec
mov
or
ljmp
sbb
movsb
pushf
push
jmp
dec
jmp
sub
xchg
fimull
push
mov
and
das
mov
hlt
pop
or
lret
stos
fistpll
inc
mov
cld
jb
mov
or
lret
mov
sbb
jg
orl
aaa
sbb
push
sti
ret
shrl
ret
mov
adc
mov
or
or
mov
call
lods
push
cwtl
jg
mov
xchg
stos
int
jle
scas
and
mov
fxtract
outsl
call
inc
mov
fdivrs
das
mov
repz
pop
call
and
fisttps
inc
insb
cmp
pushl
orl
fisttpl
mov
sti
sub
mov
or
shrb
mov
lret
mov
sbb
sbb
jno
adc
xchg
adc
adc
dec
sbb
aas
adc
ljmp
iret
das
setge
das
xlat
jl
sbb
adc
into
xor
ljmp
mov
in
mov
incl
xchg
mov
notl
xchg
and
addb
sub
decl
cmp
call
inc
adc
add
xor
xor
adc
int3
pusha
pushf
sbb
mov
and
push
pop
push
inc
and
bound
mov
xor
xchg
insb
push
sub
xlat
lcall
in
mov
adc
sub
and
aaa
adc
xchg
xor
and
leave
lea
and
and
xor
push
dec
add
js
pop
pop
sub
test
xchg
lret
pop
cmp
sarl
and
adc
jg
inc
pusha
outsl
sub
pop
outsb
xchg
pop
sbb
cmp
popa
ds
xchg
push
mov
imul
adc
pop
push
jno
push
push
and
pop
mov
cmp
mov
psubusw
pusha
pusha
xor
verw
mov
jae
popa
sbb
inc
lret
mov
adc
les
inc
add
lds
jae
popf
in
or
and
iret
sbb
sbb
shl
setb
push
and
pushl
cwtl
inc
movsb
and
lahf
stc
xor
cld
sbbl
inc
movsl
insb
push
rorl
adc
jmp
scas
ret
cmp
jecxz
out
pop
jno
loopne
sub
inc
lret
pop
fidivl
mov
lret
pop
loop
xchg
jmp
sbb
xchg
fs
sub
cmpsb
xor
sarb
lret
jmp
push
push
push
and
cmpsb
or
xchg
orl
cmp
pushf
pop
rolb
dec
test
adc
mov
lcall
rolb
lahf
or
popa
dec
jg
lahf
mov
lods
dec
push
out
mov
stos
call
ljmp
mov
adc
sbbb
cmp
sbb
xchg
adc
mov
sub
cli
or
ja
sub
jmp
pop
jmp
adc
adc
xor
adc
in
jmp
adc
and
xchg
add
and
or
ljmp
jg
ret
xor
sub
shlb
jg
or
clc
movsl
das
inc
pop
mov
adc
push
cmp
int3
cld
decl
cmc
inc
mov
add
or
inc
cwtl
fwait
add
bound
test
xor
pusha
or
nop
shlb
shlb
stos
in
lret
sbb
or
add
pop
xchg
xchg
imul
ljmp
xor
fcmovbe
mov
sub
sbb
push
mov
int3
fs
cmp
mov
lds
lahf
xor
loopne
adc
test
enter
cld
cmp
fwait
sub
and
dec
sub
xchg
mov
movsl
and
dec
dec
adc
out
mov
xchg
pop
push
call
in
adc
pop
inc
push
lcall
cmp
fst
cwtl
sub
ret
call
std
pop
les
mov
lcall
sub
xchg
adc
orl
xor
or
jmp
add
testb
xchg
push
ret
xchg
push
in
cmpl
or
push
stos
push
mov
lahf
inc
dec
cmp
xor
ljmp
sub
xchg
rcll
into
inc
inc
stos
sub
push
icebp
lcall
mov
cmp
fcomps
fs
ljmp
outsl
inc
fsubs
js
sub
push
mov
test
cmpb
fistpll
push
jl
imul
xor
mov
mov
add
pop
pop
or
ljmp
clc
mov
sti
stos
cltd
cwtl
push
andl
sub
push
mov
out
pop
and
push
cli
scas
xor
icebp
test
mov
ljmp
repnz
or
sbb
jb
pop
and
push
push
mov
jmp
xchg
mov
jbe
sbb
sub
pushl
shrb
lcall
and
push
adc
faddl
sbb
dec
rcrl
dec
fdivl
mov
imul
insl
inc
push
sahf
sarb
mov
mov
in
ja
sbb
repz
mov
mov
xchg
idivl
stos
and
aas
add
jmp
jp
pop
lock
pushf
je
data16
add
mov
cwtl
rcll
sbb
jl
cmpsb
cmp
inc
loope
sub
dec
and
ja
jmp
xchg
xorb
outsb
add
push
add
repnz
pushf
push
adc
lds
fdivrl
out
clc
inc
push
sub
popa
push
jle
ficoms
in
sub
push
shr
push
inc
clc
test
ljmp
add
xor
shl
sbb
adc
test
lcall
dec
sbb
movsb
inc
orl
sub
clc
ja
add
rorl
lcall
ljmp
add
lret
aad
ficompl
sub
je
add
mov
and
jg
test
fildll
int
in
mov
sbb
popf
mov
mov
or
dec
adc
xor
rorb
add
fcomip
pushl
out
insl
xchg
cmpsb
jmp
aam
data16
ss
lods
push
mov
ljmp
jg
rcrl
xchg
sbb
push
mov
loopne
cmp
mov
dec
into
mov
cld
mov
lock
movsl
xor
nop
jg
mulb
or
incl
lock
sti
aas
xchg
fucom
push
aaa
mov
mov
mov
push
cmp
aas
jae
test
mov
sbb
call
std
pop
fsubrs
hlt
aas
or
cmp
das
repz
incl
clc
lcall
xor
clc
xorb
cmp
shrl
cmp
xor
xchg
xchg
push
ljmp
into
cmp
pusha
add
push
pushf
mov
inc
jno
cs
xchg
mov
insb
andb
fcomip
jg
add
dec
xchg
jecxz
jno
xchg
adc
xchg
sbb
and
push
inc
out
dec
adc
jg
dec
xor
not
nop
or
add
repnz
in
xor
in
mov
and
fisubs
pop
sbb
add
push
jbe
sub
jo
addr16
loop
mov
or
addl
mov
mov
pop
cli
lahf
xor
movsl
jle
cmp
jg
hlt
sbb
mov
repz
xchg
inc
les
mov
mov
stos
ret
shl
stos
in
test
cwtl
sbb
lcall
rcl
jmp
mov
ljmp
add
jp
out
or
movsl
lea
mov
dec
mov
cmp
ficomps
dec
jo
inc
lret
cmp
decl
jnp
sahf
jns
cmp
push
or
xor
mov
call
pop
nop
fisttpl
jo
cs
xor
pop
sub
xor
leave
dec
lea
sub
and
rcll
mov
rcrl
xor
sbb
lcall
dec
add
popl
orl
mov
mov
inc
mov
orl
mov
fcoml
in
ds
mov
mov
jl
mov
pushf
or
add
mov
sbb
rorb
leave
add
cmpsb
rcll
das
xchg
mov
jg
pop
call
pop
jb
insb
inc
lret
nop
sbb
jg
test
enter
cmpl
mov
sbb
cld
cmp
jp
xor
cs
sbbb
add
mov
jmp
cmp
andl
pop
icebp
or
push
sub
in
mov
mov
test
dec
stc
inc
and
xchg
call
adc
sub
fsts
pop
sbb
pop
lret
out
int3
stos
repz
fidivs
ljmp
orb
cmp
stos
push
xchg
sbb
pop
mov
sbb
call
arpl
mov
addl
or
xor
xor
sbb
xchg
mov
call
mov
xorl
mov
aam
test
or
jg
sbb
xchg
push
inc
mov
fiadds
xor
mov
fs
das
mov
rol
je
shrb
or
pop
or
mov
ljmp
decl
enter
leave
and
and
orb
mov
pop
jo
dec
push
inc
mov
mov
cwtl
psllq
icebp
or
lcall
xchg
jno
das
rolb
mov
jb
mov
repz
fwait
cld
add
int
sbb
sarl
adcb
roll
dec
cli
push
loopne
sbb
push
loopne
push
aad
sbb
rcrb
movsl
push
and
sub
lret
dec
es
push
sbb
jg
jmp
push
movsl
mov
jne
das
fstl
add
cs
ljmp
push
or
add
cmpsb
or
xchg
seto
cld
rorb
dec
adc
out
clc
jmp
add
push
add
add
add
mov
adc
jno
rcrb
lock
cmpsl
sub
rcrl
fbld
push
and
outsb
cwtl
dec
test
mov
add
sbb
pop
add
ret
call
push
xchg
repz
test
int3
movsb
mov
add
jg
mov
pusha
pusha
xor
xchg
mov
fsts
sub
ljmp
mov
jecxz
jns
pop
das
adc
js
mov
dec
xchg
mov
and
movsb
dec
cltd
mov
into
pop
sub
mov
lods
add
sub
loopne
and
or
mov
cli
sub
jge
or
cmp
xchg
pushl
call
sub
fdivs
orl
ljmp
pop
and
lcall
cmp
pop
xchg
or
lods
icebp
mov
mov
dec
ds
insb
adc
inc
addl
dec
push
lock
sub
sbb
and
in
das
and
movsl
stos
add
js
adc
pushl
mov
or
cmc
add
popf
adcb
add
jg
ret
pop
inc
in
fwait
in
rol
and
and
sbb
lret
mov
jnp
cmpsb
out
inc
jnp
pop
push
pop
jecxz
jg
or
mov
add
pop
jno
add
pop
cmp
cs
lcall
pusha
cmpsb
xchg
es
ljmp
out
sbb
or
aad
xorb
inc
test
mov
push
cld
mov
mov
mov
or
enter
add
incl
sub
sbbb
pop
jnp
ret
sub
xor
push
adc
loope
xchg
cmpl
mov
inc
lods
dec
push
stos
mov
aaa
std
push
add
mov
and
dec
addr16
adc
es
sarb
push
fildl
imul
pop
mov
mov
nop
dec
mov
call
mov
push
call
sbb
cwtl
push
cld
mov
jne
insb
dec
sbb
cld
fists
ds
loop
xor
jecxz
jns
inc
xchg
out
adc
inc
incl
add
push
test
js
mov
xor
xor
and
push
sub
clc
xor
push
sbb
lods
pop
arpl
arpl
sbb
decl
and
lock
mov
mov
cmp
and
mov
add
dec
pop
hlt
mov
push
sub
xor
scas
ds
ficompl
cld
push
sbb
cmp
dec
adc
push
outsb
sbb
sar
ds
arpl
arpl
mov
je
addb
clc
inc
push
daa
enter
dec
stc
lret
test
lock
inc
fistps
push
adc
inc
outsb
cs
cmp
and
adc
xchg
adc
add
push
add
cmp
mov
mov
loop
addb
push
std
push
push
mov
xor
insb
loopne
sub
sbb
call
mov
pop
orb
cmp
pop
xchg
push
sub
and
sbb
xor
jg
xorb
push
int3
in
pop
pop
sbb
mov
rolb
rorl
in
jge
pop
popa
fstpl
ret
adc
ljmp
mov
test
jle
mov
int
mov
cmpsb
jg
mov
or
dec
or
sbb
xchg
clc
and
mov
and
xor
jg
ja
jge
mov
or
jecxz
mov
ret
sti
pop
xchg
decl
dec
fisttpl
adc
adc
sub
in
stc
mov
inc
xor
mov
ljmp
mov
movsb
mov
or
sub
mov
jecxz
and
pop
pushf
xor
sub
jnp
aad
pop
mull
sub
mov
orl
sbb
orb
xor
add
mov
and
cwtl
adcb
xor
arpl
clc
or
lds
cmp
loop
cmp
jp
jecxz
pop
adc
dec
inc
push
shll
shlb
in
dec
pop
popa
jmp
inc
push
in
push
jo
js
aaa
or
insl
fsubr
and
adc
fdivr
fwait
insl
stos
push
xor
cmp
push
adc
incl
inc
aam
cmp
xor
ds
sbb
cmp
mov
add
xchg
cmp
jg
mov
jnp
jg
outsl
inc
jge
dec
xchg
xchg
or
push
cmp
add
test
cmp
add
sbb
call
mov
sub
fs
and
sbb
dec
test
lods
fiadds
add
pop
jg
movsl
jmp
cmp
adc
jbe
mov
xor
cmp
enter
sub
mov
add
dec
xchg
pop
sbb
and
fists
and
sbb
and
mov
sarl
clc
stos
sbb
les
arpl
dec
xchg
subl
fneni(8087
add
test
int
mov
jmp
cmp
mov
lcall
push
adcb
mov
test
movb
mov
mov
fcoml
movsb
mov
sbb
lea
mov
cmp
fcomps
jg
xor
nop
mov
into
add
rorb
inc
cmp
int3
clc
mov
mov
push
jno
sbb
jb
adc
or
jg
clc
das
ss
dec
js
cmp
ds
push
sbb
and
add
lock
lcall
fcmovb
xchg
insb
lret
sahf
in
lret
into
rorl
push
mov
push
push
push
mov
es
outsl
call
push
jbe
pop
jbe
outsb
in
aam
insl
xlat
into
add
or
in
ficoml
add
insl
loopne
ljmp
ljmp
imul
add
idiv
call
push
add
push
xchg
enter
test
or
pop
sbbl
jge
call
adc
sbb
stc
xchg
inc
add
sbb
add
push
mov
js
cmp
out
ret
addb
fildll
repz
ljmp
adc
push
xchg
jge
mov
jno
stos
int3
push
mov
fisttpl
out
icebp
mov
jo
sbb
inc
aam
cmp
mov
in
fstpl
add
dec
mov
fcmovnb
dec
les
xor
lea
push
mov
dec
mov
sub
decl
sbb
sub
jb
shll
repz
call
or
mov
or
or
incb
fdivs
jp
add
mov
pop
cmc
mov
xchg
sbb
popa
sahf
sub
inc
in
cwtl
xchg
lea
mov
or
or
jl
push
lods
xchg
test
xchg
add
rcr
hlt
incl
dec
and
nop
lods
mov
mov
cld
popf
pop
and
push
push
fisttpl
cmpsb
sti
xchg
cli
sbb
push
inc
outsb
call
mov
xchg
jae
adc
hlt
in
add
scas
popf
shll
mov
mov
and
arpl
jbe
shrb
fs
orb
iret
add
js
clc
es
imul
imul
push
cmpsb
mov
add
push
add
shll
cmp
les
adc
incl
sub
aas
jp
in
sub
adc
inc
push
push
les
test
sbb
inc
jg
inc
pop
call
dec
nop
pop
sbbb
mov
popa
outsb
sarb
xor
or
and
mov
pushl
cmp
dec
loopne
es
cmp
jbe
shrb
incl
test
mov
cltd
test
lret
mov
pop
mov
xor
lock
sub
mov
in
cwtl
and
inc
mov
and
fldt
inc
push
dec
add
add
fstpl
clc
mov
rorb
xor
int3
xchg
and
jo
inc
add
lds
mov
imul
popa
mov
mov
mov
call
lcall
ret
fidivrl
movsb
push
or
pop
gs
shll
out
xchg
adc
inc
out
cld
icebp
xlat
roll
cwtl
adc
rclb
arpl
in
xlat
pusha
decl
adc
add
cmc
sbb
jge
std
fistpll
dec
mov
test
add
cli
dec
add
scas
add
lods
mov
movl
add
popa
push
jne
adc
incl
in
mov
daa
fidivrs
out
sbb
in
sbb
inc
ja
clc
js
shl
test
hlt
roll
insb
bound
mov
incl
or
jmp
adc
jp
dec
stc
in
and
pusha
jp
and
pop
test
lret
cmp
jo
pushf
je
and
pop
push
jl
test
adc
or
and
jbe
leave
mov
outsb
nop
nop
xor
mov
jg
gs
xchg
push
lret
cmp
mov
sub
decl
movsb
cmp
add
je
cmp
jle
mov
movb
and
push
pop
aam
mov
push
pop
addr16
mov
sbb
pop
lock
xchg
add
aaa
cld
mov
xor
adc
sarl
sti
jg
imul
js
add
sbb
sbb
nop
xor
push
arpl
add
jg
dec
cmp
mov
je
test
mov
pushl
addl
add
ffree
pop
push
lds
adcb
xor
loope
push
push
outsb
leave
in
nop
mov
sub
dec
sar
lcall
pop
shlb
leave
jno
mov
daa
jo
dec
jecxz
mov
jae
mov
fsubs
jge
sbb
pop
cmp
das
lret
test
inc
pop
insb
mov
out
ja
outsl
push
pop
sbb
or
cltd
and
sbb
xlat
fisttpl
rcrb
ds
xchg
jbe
insl
mov
xor
dec
mov
cmp
pop
pop
jge
sub
fcomip
and
jbe
push
sbb
fisttpl
and
cmp
ja
push
cmp
push
pop
cli
incl
pop
sbb
mov
cmp
call
sub
dec
shll
mov
cmp
or
aad
andb
jmp
inc
mov
push
out
jle
adcl
push
into
cmp
inc
xor
mov
mov
jecxz
cltd
data16
insl
jb
decl
dec
test
pushf
outsb
jle
out
push
stc
add
ja
iret
cmp
das
movsb
sbbl
movsb
popf
cmpsb
icebp
call
lcall
mov
mov
incl
cmp
pop
orb
push
test
mov
add
loopne
xchg
xchg
ss
cli
mov
mov
jl
pop
sub
sub
je
add
loop
mov
jb
sbb
dec
inc
inc
nop
adcl
pushl
push
xchg
jl
inc
or
sbbl
pop
out
stos
push
mov
loopne
cmp
add
xor
mov
mov
adc
push
mov
ret
mov
inc
sub
adcl
mov
xor
add
hlt
mov
call
rolb
ja
bound
cmp
push
data16
cltd
bound
lock
mov
pop
push
xor
sbb
jle
push
aam
push
xor
inc
aaa
dec
into
mov
decl
jl
and
jo
cmpsl
lds
or
enter
int
fwait
push
add
and
js
faddp
adc
push
shlb
xchg
mov
mov
scas
xchg
dec
fwait
pmaxub
xor
inc
or
push
and
dec
les
mov
cmpsb
decl
or
jle
mull
movsl
dec
adc
adc
adc
loop
shr
les
ret
cli
jmp
adc
inc
inc
incl
mov
cmp
cmc
sub
test
insl
int3
lock
cli
incl
loopne
ret
xchg
test
or
xchg
rol
es
jg
out
cmp
leave
fcoms
or
sub
les
jmp
jnp
jae
pop
mov
jnp
mov
mov
scas
mov
outsb
pop
test
and
push
movsb
push
gs
cld
in
hlt
jg
jp
cmpsl
ss
das
test
cmp
push
xor
orb
sarb
call
mov
and
and
and
xor
das
mov
push
call
xchg
sbb
imul
shrb
mov
mov
test
add
sub
add
inc
call
nop
movsl
jg
sahf
adc
es
push
inc
ljmp
setl
ret
mov
cmc
ds
push
or
mov
inc
sub
cmpsl
mov
test
arpl
add
or
pop
mov
xchg
add
or
out
rcrb
and
orl
test
xchg
inc
push
mov
nop
das
xor
shll
or
pushf
adc
hlt
in
cmp
pusha
mov
xor
xchg
sub
incl
stos
mov
jnp
sub
dec
mov
xchg
mov
dec
sub
test
jmp
sbb
mov
gs
pop
ss
imul
and
sbb
out
clc
in
movsb
inc
mov
jmp
jo
add
movsb
scas
add
decl
loop
xor
loop
sbb
sub
loop
jmp
jbe
inc
sbb
cmpsl
xchg
jg
dec
jl
pop
sub
cmp
jle
jne
dec
adcl
jmp
push
mov
inc
xor
push
sub
in
fs
mov
add
rorb
ljmp
jns
cs
add
or
mov
and
aam
je
mov
or
add
sar
ficoml
cmp
inc
push
add
jbe
mov
mov
bound
push
rclb
dec
bound
mov
adc
fldenv
ljmp
push
je
pop
or
rorb
bound
mov
addb
lcall
mov
rcr
cs
aad
mov
cmp
mov
mov
fs
xor
and
cmp
sub
sub
das
and
mov
inc
sbb
aam
call
mov
cmp
add
sub
ret
add
adc
mov
test
pop
and
push
or
sub
mov
add
lcall
stos
in
inc
push
pop
fadds
cmp
or
orb
decl
divl
xchg
aam
and
sbb
xchg
add
clc
int3
mov
loop
inc
inc
dec
add
fbstp
test
push
dec
xor
xor
pushf
jae
aad
js
add
stc
adc
ret
dec
in
inc
cmp
add
mov
xor
push
ret
leave
pop
xor
jmp
adc
aad
mov
cmp
out
das
les
scas
shll
inc
out
inc
inc
fwait
sbb
cwtl
inc
inc
mov
insl
hlt
sahf
jnp
xor
jmp
in
add
fstps
cmc
call
and
ret
push
mov
fcomip
call
pop
ja
push
xchg
push
mov
mov
fidivrs
pop
imul
enter
xchg
imul
mov
cmp
mov
jns
test
out
add
in
fldenv
std
call
add
jle
cmp
jg
jne
pusha
push
add
dec
cmc
mov
pop
mov
mov
sbb
gs
int3
sbb
insb
lcall
cmp
clc
mov
or
add
mov
stc
and
fcomip
and
sub
loop
sub
int3
xor
jp
inc
add
mov
insb
loope
arpl
add
mov
arpl
fsubrs
call
orl
movsl
pop
mov
pop
add
lret
cwtl
xchg
mov
mov
xchg
adc
aam
mov
sbbl
pop
icebp
push
sbb
adc
mov
mov
inc
or
push
incl
jl
push
fsubl
int3
lret
call
and
je
pop
xor
and
js
fcoml
jb
js
mov
dec
mov
int3
aad
sbb
enter
mov
je
mov
outsb
js
inc
lods
xchg
test
dec
jl
ret
dec
xchg
push
ret
mov
jo
popf
fildl
sbb
pop
cmp
rcll
filds
push
and
xchg
adc
xchg
push
js
fisttps
pushf
and
jg
mov
jg
pop
call
pop
push
cmp
jmp
pop
out
adc
pop
mov
xor
add
cmpl
lcall
mov
movsb
js
and
fmul
xor
stc
jl
and
add
scas
fdivr
lock
add
sahf
push
jmp
in
sbb
dec
lcall
in
pusha
sahf
pushf
cmpsb
pushf
cltd
sahf
cmp
xchg
lahf
clc
or
aam
ss
mov
cltd
mov
mov
enter
arpl
int3
push
out
jne
incl
hlt
jecxz
cmp
sbb
jecxz
or
xchg
mov
add
or
cmpl
lods
mov
add
stos
add
add
aad
outsl
clc
jl
lret
pop
je
push
test
fcomps
cmp
mov
lcall
or
cmp
lods
sbb
or
jg
lahf
or
les
and
cmp
les
dec
or
add
in
mov
or
les
int3
dec
jae
add
jl
push
push
dec
push
cld
call
test
lds
add
and
enter
or
cs
jle
cli
scas
pop
shrb
mov
loopne
sub
rol
push
or
and
pop
or
pusha
mov
xchg
adc
xchg
cmp
shrl
arpl
push
adc
inc
into
push
pop
icebp
call
jge
and
lea
insl
adc
cmp
pop
jae
rcrl
fnsave
mov
sbb
test
movsl
inc
jno
xlat
mov
iret
fstpl
cmp
jae
popa
outsb
cs
push
cmp
lea
pusha
orb
and
mov
pop
cmp
mov
aaa
and
mov
test
jbe
adc
pop
mov
sbb
mov
mov
cwtl
sub
dec
aas
xchg
pushf
jnp
xor
dec
aad
bound
add
jmp
sbb
lcall
in
xor
js
sahf
pusha
xchg
fwait
jge
pushf
mov
lds
and
pop
cmc
loopne
into
adc
cmc
dec
lahf
xor
xchg
jl
pop
clc
add
hlt
call
orb
mov
cmp
enter
or
sbb
adc
or
and
enter
in
mov
add
cmp
je,pt
pushf
add
sar
aaa
cmp
dec
adcb
lcall
pop
mov
xchg
in
inc
dec
ror
push
pop
icebp
inc
jl
addl
andb
sub
test
push
shrl
test
and
inc
int3
nop
mov
pop
dec
test
scas
inc
cs
add
jg
cli
dec
push
xchg
dec
cld
je
shlb
or
inc
mov
nop
mov
outsb
push
ret
push
ror
mov
xchg
pop
inc
add
mov
std
pop
hlt
les
sbbb
sbb
cwtl
xchg
adc
lods
lret
in
rorl
inc
or
data16
adc
addl
into
sub
scas
es
shrb
cli
inc
add
or
jmp
xchg
mov
hlt
bound
lods
push
mov
into
pop
xchg
rclb
decb
mov
scas
mov
adc
xchg
cmp
insb
xchg
in
pop
stos
cmp
sbb
sbb
jmp
sbb
mov
xorb
xchg
loop
sbb
lods
push
or
pushf
push
ss
or
pushl
sub
iret
test
js
cmpsb
js
into
push
pop
jle
inc
sub
sbb
decl
daa
fmull
addb
out
cmpsb
xor
inc
movsl
pop
icebp
mov
inc
and
dec
xor
sahf
mov
rolb
in
pushl
dec
addl
insl
mov
lock
and
inc
jecxz
fcomip
decl
mov
jns
sbb
prefetchnta
lock
xor
fdivrs
ljmp
rcll
addl
fildl
push
lea
cmpsb
fisttpll
call
mov
lcall
outsl
test
pop
dec
sar
inc
push
hlt
adc
sub
inc
mov
mov
cs
fstpl
clc
ljmp
inc
inc
stc
xor
mov
or
push
std
push
aaa
push
les
inc
aad
call
dec
int3
rclb
fcomip
rolb
mov
pop
movsl
push
jle
mov
jbe
xor
adc
lods
inc
loopne
sar
in
xchg
loope
add
movsl
sbb
sub
pop
cmc
out
inc
jo
into
leave
inc
daa
sub
mov
mov
cs
inc
mov
imul
lcall
adc
nop
pop
jmp
or
in
mov
fiaddl
jmp
adc
js
pop
cmp
push
or
lea
pushf
imul
sub
cmpsb
incl
shll
into
scas
flds
popf
jp
stos
adc
dec
test
mov
inc
cmp
mov
jecxz
push
jecxz
fcoms
es
ljmp
sahf
es
mov
out
and
mov
mov
scas
dec
mov
fcomip
call
add
sub
lcall
faddl
sahf
fbstp
mov
pop
cmp
adc
aam
ja
pop
cmp
jg
add
sub
pop
jae
and
adc
mov
mov
pushf
xor
push
xor
outsl
mov
int
sbb
mov
sbb
add
push
sub
incl
sahf
call
and
imul
adc
push
or
mov
add
lods
xchg
loop
pop
add
mov
jg
fwait
pop
lods
rcr
call
das
leave
pop
sbb
out
add
mov
sub
jecxz
inc
adc
ret
lods
sub
inc
cwtl
mov
or
or
daa
push
orl
pushl
cmpb
push
incb
ljmp
sarb
push
cmpl
cmpsl
mov
fcmovb
repnz
push
shll
outsl
xor
lahf
shrb
and
daa
sbb
push
mov
xchg
adc
cli
sarb
xor
int
push
daa
sbb
loop
mov
fildll
loope
cmp
mov
jb
mov
mov
adc
and
cmpsb
xor
dec
push
add
stos
imul
xchg
jmp
sub
roll
and
mov
push
pop
cmc
push
jmp
cli
mov
cmp
daa
fimuls
lods
jbe
cmpsl
mov
ret
decl
pop
inc
xchg
andb
insb
sbb
ljmp
dec
inc
xchg
adc
mov
cmpsl
push
incl
nop
mov
jno
mov
aad
sub
xchg
push
sbb
jmp
or
dec
lahf
aam
mov
icebp
fsubs
mov
adc
xlat
das
xor
xchg
cs
sarb
test
idiv
jg
testb
call
mov
call
cmpsb
call
mov
cld
enter
mov
loopne
mov
push
jae
fcompl
cmpsb
cmc
fildl
sub
mov
adc
cmp
leave
mov
add
inc
enter
push
add
mov
mov
jno
fimull
ud0
adc
inc
cmp
add
lods
jne
inc
rclb
add
jmp
repz
sub
push
mov
dec
add
mov
push
or
addl
cmc
mov
hlt
sbb
push
xchg
loopne
dec
inc
clc
mov
cli
into
inc
mov
sub
adc
decl
jmp
roll
stos
xchg
mov
ds
cmpsb
push
mov
outsb
xchg
outsl
rolb
loope
cmp
std
mov
jp
lea
push
push
xchg
and
stos
es
pushl
ds
xor
mov
clc
mov
xchg
call
xchg
xchg
lcall
icebp
pop
mov
mov
cli
dec
rcl
decl
data16
and
mov
sbb
es
xor
mov
decl
jmp
jne
pop
sub
sub
rorl
iret
roll
loopne
jo
mov
dec
fsubrs
fisttps
test
or
out
sbbb
loop
out
mov
mov
lea
pop
mov
cltd
inc
hlt
pop
popa
ret
xlat
lods
and
call
xchg
mov
enter
push
mov
ss
addr16
mov
cmp
add
cli
mov
jp
push
xchg
cmp
cld
and
lcall
cmp
cs
incl
fsubrl
subb
push
insl
mov
pop
outsb
out
negb
sbb
and
lret
or
ljmp
xor
xor
mov
adc
enter
lcall
test
or
xchg
arpl
jns
add
rolb
call
inc
push
push
xchg
jl
inc
push
push
fsubs
push
imul
add
addr16
xor
inc
or
aam
sub
insl
dec
lock
test
cmp
loop
dec
scas
stos
mov
dec
jecxz
add
and
xchg
mov
frstor
push
push
rorb
shll
sub
decl
xorl
add
jmp
jmp
lods
sbb
sbb
push
dec
es
dec
out
decl
insl
shr
jp
xchg
jmp
jno
push
bound
push
std
inc
cmc
sub
incl
adcb
jp
cmp
bound
xlat
xchg
mov
push
add
pop
call
add
mov
push
into
mov
call
loopne
stc
fsubrl
pop
mov
ljmp
xchg
js
shll
incl
jb
addr16
inc
pushf
adc
xchg
jp
add
into
jle
fdivrs
sub
mov
pop
adc
inc
and
addb
mov
js
call
mov
fwait
in
push
and
xchg
into
pusha
sti
rcll
lods
mov
cmpsl
cmp
decl
scas
push
or
sbb
cld
push
mov
sub
add
fldenv
inc
sahf
jo
psubsb
mov
or
sbb
inc
adc
pusha
add
incl
inc
lods
sbb
js
mov
test
pop
mov
sbb
test
cmp
call
mov
xorl
and
mov
inc
daa
add
ret
jmp
pop
sub
and
xchg
jb
lret
fsubl
outsb
jg
pushl
push
dec
out
je
repz
jl
xchg
shlb
or
cmp
fsts
dec
mov
xor
lods
or
xchg
fwait
in
mov
push
xchg
or
adc
or
mov
decl
aaa
sub
sbb
push
mov
cli
push
sub
xchg
sub
push
lds
xor
xchg
adc
decl
jae
fidivl
pop
xor
pop
xor
or
std
pop
and
cmp
fdivr
cmp
xor
inc
test
mov
push
push
fcomps
ret
xchg
mov
adc
lcall
mov
popf
push
mov
mov
repz
sbb
ja
les
test
add
mov
std
push
dec
ret
mov
jb
mov
push
shrb
or
shlb
std
inc
andl
loope
scas
cwtl
lret
xor
adc
nop
aas
decb
out
ss
add
ljmp
push
inc
or
xor
push
add
inc
insb
cld
cwtl
jo
or
mov
mov
daa
hlt
add
push
les
adc
pushl
xor
and
mov
cld
lock
adc
mov
ds
orb
sbb
mov
and
jmp
das
les
jecxz
and
push
orb
xor
and
cli
ljmp
mov
xor
mov
arpl
js
andl
and
dec
ljmp
lock
inc
ja
add
and
lcall
aam
dec
xor
jo
mov
out
stos
dec
xor
mov
cmc
mov
stos
enter
cli
test
jp
mov
dec
mov
sub
arpl
lret
add
mov
sbb
mov
mov
jp
ljmp
and
cmp
mov
rorl
cmpsb
scas
in
scas
cmpsl
mov
jmp
mov
bound
cmpsl
add
mov
call
sbb
lods
xor
jl
or
or
jp
sub
and
cmp
mov
inc
mov
sar
int
xlat
js
in
arpl
push
fnstcw
inc
lea
std
filds
xor
rolw
and
aas
sub
outsl
jg
int3
mov
stos
rep
mov
cmc
les
add
cmp
jg
and
xchg
and
dec
fcomi
stos
stos
jecxz
mov
add
mov
popa
in
cmovno
inc
mov
push
scas
in
sub
pushf
add
pop
nop
inc
mov
push
nop
leave
or
pusha
xchg
add
adc
shl
insb
add
cmp
rorl
iret
test
mov
pushf
jno
cmp
and
add
cmp
and
into
call
add
add
outsb
mov
shlb
pop
mov
xchg
push
lock
cmp
add
bound
adc
adc
imul
ss
subl
inc
std
lods
pusha
mov
xorb
inc
mov
movsb
pop
and
out
and
arpl
aam
inc
jge
cld
jge
xchg
and
dec
sbb
mov
clc
mov
xor
sub
pop
ljmp
sbb
mov
mov
out
pop
xchg
mov
add
das
cs
or
call
sbb
adc
adc
jb
outsl
jge
lcall
lods
push
mov
inc
push
cs
subb
pop
test
mov
sub
js
int
lock
jo
mov
fs
mov
xor
mov
pop
or
adc
mov
leave
leave
xchg
and
xchg
or
jmp
or
dec
andl
mov
leave
or
push
mov
movsb
data16
mov
dec
outsb
inc
pusha
xor
push
lods
mov
pop
dec
pushf
xor
scas
push
push
lods
add
push
loop
nop
clc
jg
dec
push
push
in
into
jae
outsl
test
sbb
ss
dec
dec
sbb
ficoms
sbb
lea
inc
inc
clc
jmp
shrb
aad
ss
cmp
inc
rclb
mov
mov
lods
inc
scas
add
xchg
cmp
push
hlt
call
add
or
cmp
push
jb
dec
es
cld
adc
adc
lcall
dec
fwait
imul
ud0
rorl
fwait
push
jmp
mov
mov
xchg
or
pushl
fildl
testl
nop
xor
repnz
or
ss
push
bound
jle
call
sahf
xchg
mov
inc
enter
or
clc
sbb
mov
pushf
push
mov
push
add
jmp
aad
sbb
add
push
fcomps
xor
and
xor
mov
jno
gs
xor
daa
push
stc
add
mov
lcall
mov
xor
push
inc
gs
add
decl
cmpsb
xor
pop
loopne
sbb
and
jne
leave
pop
pop
jb
xor
push
inc
aam
or
aaa
xor
pop
mov
xchg
jge
dec
fldenv
ja
sar
dec
or
jmp
push
mov
or
xchg
pop
rcr
push
cltd
push
rorb
ss
dec
ljmp
cltd
ret
cmp
sub
add
dec
dec
fs
pop
lock
jg
nop
lea
xchg
sahf
leave
add
aaa
cmpsb
popa
cld
das
xchg
push
dec
cs
nop
popf
lods
cmp
scas
xor
fildll
sub
stc
out
push
mov
mov
gs
or
xchg
push
ret
dec
pushl
push
mov
mov
lods
inc
push
push
in
mov
and
movsb
lea
add
call
cwtl
sbb
and
js
jo
push
xor
xchg
adc
stos
fdivrl
nop
lea
decl
inc
push
shr
mov
test
pushf
pusha
or
inc
sub
or
sub
icebp
cld
mov
or
mov
dec
or
xchg
out
arpl
iret
call
cld
jmp
add
pusha
adc
push
movb
test
or
call
lcall
sub
cmpsl
xor
push
xchg
cmp
and
adc
or
inc
decl
clc
add
scas
les
or
or
gs
popf
icebp
mov
and
insb
mov
or
pusha
push
sbb
adc
or
pop
dec
popf
xlat
push
test
popf
and
pusha
inc
andl
decl
dec
mov
out
cmp
mov
pop
add
xchg
decl
js
nop
mov
lret
push
dec
mov
inc
adc
mov
add
ljmp
icebp
xchg
push
dec
or
lock
imul
xchg
hlt
cmp
dec
push
adc
and
outsl
jmp
mov
pop
insb
loope
push
lcall
fadd
mov
cwtl
sbb
int3
aaa
stos
rorl
jg
mov
xchg
and
push
arpl
xchg
subl
sub
jmp
and
xchg
xor
push
cli
fstl
icebp
sbb
fisttps
cmp
dec
pop
dec
sbb
mov
cmpsb
sbb
repnz
push
outsb
lods
aas
and
fsqrt
cmpsl
mov
push
push
scas
adc
ret
imul
sbb
inc
mov
fst
pop
clc
lock
hlt
ret
std
pop
pushf
jl
jnp
les
jae
clc
cmc
scas
jg
xlat
pop
xchg
outsl
push
shrb
decl
sub
outsl
dec
loopne
fistps
nop
adc
inc
cmp
jl
add
popa
mov
jp
sub
jmp
aas
loop
fisttpl
push
repz
iret
add
fadds
es
daa
dec
clc
fstl
add
pop
inc
adc
mov
add
sti
sbb
add
ljmp
fs
mov
or
call
pusha
sbb
or
push
cmp
sub
and
cli
jmp
aad
sbb
jno
clc
fidivrl
test
leave
insl
jo
add
xor
pop
pop
jae
lcall
xchg
xlat
adc
scas
pop
xor
xchg
cltd
sbb
out
inc
mov
mov
cli
ds
lret
aam
cmc
cmpsl
test
inc
add
add
clc
imul
mov
sbb
mov
sbb
add
pop
sbb
pop
sti
jp
sbb
lcall
subl
xor
testb
insb
jmp
aaa
mov
cmp
std
cltd
cli
ljmp
ret
fcmove
dec
sti
fimull
mov
dec
or
mov
mov
loope
inc
mov
and
ja
add
xorl
or
cmp
pop
mov
jmp
orb
mov
ret
lcall
mov
inc
insl
inc
mov
and
in
insb
jo
data16
cmp
add
outsb
rorb
ds
int3
stos
dec
pusha
inc
inc
push
scas
mov
ljmp
push
shlb
lods
jmp
out
ljmp
mov
inc
adc
mov
or
cwtl
xchg
out
or
loopne
jb
fdivrl
mov
enter
ret
or
clc
shlb
jns
and
and
and
and
push
xor
or
in
jbe
movl
add
and
out
cmp
mov
fs
mov
ljmp
dec
sub
add
mov
addl
or
mov
test
incl
sbb
in
ja
adc
notb
xchg
cmp
ljmp
les
outsl
dec
enter
jmp
and
mov
mov
mov
pushl
adc
std
sub
lea
jge
fdivs
push
in
sbb
decl
cwtl
dec
stc
fisubs
stc
jb
or
xlat
pop
inc
ret
movsb
insl
adc
cli
sub
xchg
mov
adc
cld
test
addb
call
mov
std
bnd
and
adc
mov
sti
mov
out
insl
mov
xchg
jb
lea
xor
insb
inc
add
jg
and
mov
push
ret
push
in
and
cmp
mov
mov
or
sub
dec
syscall
jmp
popf
push
loopne
push
test
xchg
dec
and
decl
mov
call
add
imul
or
adc
nop
inc
ljmp
dec
dec
lock
inc
insb
imul
or
cltd
jmp
sbb
cld
fs
out
lock
or
clc
mov
inc
cmpsb
pusha
mov
fs
test
popf
decb
or
orb
shll
jo
movsb
outsb
dec
rolb
fwait
jecxz
adc
call
sbbb
xchg
cli
add
add
xor
pop
icebp
jmp
andb
scas
push
cmp
fisubs
inc
jae
xchg
push
dec
call
sub
sbbl
int
and
lods
es
test
popa
dec
enter
xor
push
into
adc
mov
xor
or
cmp
dec
adc
loopne
push
sub
adc
mov
mov
movsb
push
adc
mov
call
push
adc
pushl
push
std
sahf
iret
std
loopne
fcom
mov
out
jae
sti
sarl
icebp
push
inc
push
fs
push
shll
fistl
stc
adc
xor
inc
mov
inc
pop
pop
adc
dec
fimull
jg
and
pop
and
xchg
insl
sbb
push
pushl
dec
adc
pop
rolb
repnz
cmp
inc
lret
and
es
xorl
fimuls
out
test
data16
xor
mov
outsl
push
mov
and
mov
or
sbb
push
out
xchg
call
imul
test
add
mov
dec
mov
pushl
push
cmpsl
inc
push
push
mov
mov
loop
int3
insl
subb
cwtl
call
dec
fsubl
out
jmp
dec
cs
adc
cwtl
or
loope
in
mov
fistps
push
push
mov
roll
cli
mov
in
das
adc
inc
insl
sahf
dec
cmp
popf
hlt
pushl
xor
movsl
pop
out
sub
outsb
stos
push
dec
sub
hlt
bound
movsb
xchg
lds
mov
xchg
cmp
filds
dec
add
dec
add
xor
cmpsl
jle
popa
xor
pop
icebp
inc
push
sbb
lret
pushaw
jp
add
decl
mov
cmp
sbb
stos
aaa
in
mov
adc
dec
push
decl
xor
int
decb
fnstsw
les
mov
adc
loopne
test
jg
gs
add
inc
and
xor
call
inc
fisttps
ds
xchg
xor
sub
popf
and
outsl
jmp
pop
push
cmp
and
outsl
test
mulb
cmc
xlat
inc
inc
fsubs
daa
xchg
cmp
inc
push
aam
sbb
push
or
dec
popa
xor
jbe
dec
jb
mov
inc
inc
test
add
hlt
gs
mov
inc
aaa
push
xor
dec
fimull
jo
pop
stos
mov
insb
xchg
xor
fs
pushl
ds
movsb
push
fldl
mov
and
cmp
imul
add
jbe
or
or
clc
push
ret
and
mov
mov
ret
xor
rorl
int
pop
iret
dec
or
pusha
jns
call
inc
rorb
ljmp
or
mov
fbld
pop
adc
push
jno
push
fwait
push
dec
add
loope
incl
push
ds
jb
ljmp
xor
mov
dec
jmp
sub
les
add
icebp
ret
or
inc
or
pushl
or
pop
xor
dec
inc
inc
adc
loopne
addr16
or
bound
and
add
decl
mov
lret
jp
shl
mov
in
movsb
adc
subl
and
push
jl
cmp
add
push
add
mov
stc
outsb
lea
in
std
mov
inc
add
std
in
jae
test
mov
call
fistl
test
stos
insl
sti
fs
ja
div
xlat
cmp
ljmp
adc
push
inc
stc
icebp
xlat
mov
and
inc
adc
ljmp
gs
mulb
pop
es
cmp
aaa
cwtl
gs
ret
test
and
call
xchg
test
outsl
sbb
push
push
cmp
xchg
xchg
clc
bound
and
fmuls
or
dec
jb
enter
or
mov
xorb
or
pop
das
int
push
nop
incl
inc
jmp
fdivp
ret
add
test
out
sahf
movb
mov
mov
cli
decl
push
push
imul
lods
sub
jo
aam
ret
or
fs
aas
loopne
ljmp
jle
and
or
cwtl
adc
jo
ja
decl
mov
lods
leave
or
lcall
cmp
insl
mov
insb
xor
pop
and
xor
in
dec
dec
push
pop
cmp
cld
cmp
lods
cmp
ret
sbb
loopne
or
inc
mov
pushf
xlat
push
cld
into
es
fsubrs
push
testb
push
mov
lods
dec
mov
jns
and
imul
scas
cmpsb
cmpb
push
mov
pop
jnp
cld
jo
sbb
lods
jge
adc
mov
jp
inc
cmp
jmp
push
lahf
inc
testb
inc
fstl
lahf
jmp
call
insl
xor
outsl
sub
sbb
inc
das
adc
lock
lcall
dec
arpl
cs
jle
mov
pop
push
popa
xor
sub
cmp
fmull
and
mov
fcom
xchg
movsl
gs
aaa
ss
bound
mov
mov
sub
mov
ljmp
xchg
clc
mov
add
xlat
inc
cmp
outsl
nop
inc
or
hlt
mov
lcall
aas
orb
pop
stos
loopne
mov
adc
jp
addr16
in
hlt
arpl
ficoml
in
mov
test
into
or
mov
je
cmp
stos
imul
mov
push
cmpsb
dec
cmpsl
push
fwait
jg
mulb
filds
inc
fidivrs
aad
cmp
sbb
loopne
es
es
inc
push
add
mov
test
stos
call
jmp
xorl
scas
test
jo
decl
dec
mov
cltd
fidivs
lcall
jae
mov
test
add
pushf
mov
sub
clc
pop
inc
push
je
xor
fisttps
sbb
mov
xchg
cmp
and
jbe
pop
fadd
xor
xlat
inc
or
mov
jns
mov
in
jg
cld
mov
popf
std
idivl
out
std
push
xchg
out
cmp
mov
inc
mov
inc
aam
xor
inc
jg
mov
inc
adc
sbb
cmp
cli
outsl
mov
push
fs
xor
outsl
mov
test
mov
dec
and
pop
ss
mov
cmp
mov
fadd
fcmovb
xor
outsl
aam
jg
cmp
jecxz
rolb
cld
outsb
sahf
xchg
clc
mov
xchg
data16
pop
pop
and
cli
mov
pop
incl
jl
mov
cli
int3
or
mov
stos
mov
lock
lcall
pop
shl
jl
out
mov
xor
nop
filds
scas
sbb
jmp
arpl
xchg
addr16
ja
add
pop
add
mulb
loopne
mov
ljmp
push
sub
adc
push
sub
push
push
jne
inc
in
xchg
sub
mov
pushf
repnz
ret
add
sbb
test
ljmp
fbld
sbb
push
fsubs
fstps
loop
idivl
jae
popf
jnp
or
inc
xor
mov
dec
fstps
ljmp
movsb
push
add
mov
in
mov
dec
fcomi
mov
fstl
or
call
pop
aas
addr16
lret
adc
cmp
cmp
sbbb
dec
daa
push
ljmp
es
pop
jl
ja
and
clc
mov
das
ficoml
jmp
and
pop
sub
popa
scas
incl
sahf
gs
pop
test
lcall
pop
jle
lea
and
movsb
xchg
jecxz
loope
incb
push
cmp
ds
pop
fsubp
sub
cli
idivb
sub
mov
sbb
lret
pop
jge
dec
stos
cmp
xchg
mov
jnp
jecxz
imul
cs
fisubrl
repz
enter
stos
lcall
mov
jge
jmp
pop
xlat
adc
shl
xchg
jle
mov
jle
xlat
jno
repnz
jg
inc
adc
into
mov
mov
fistl
inc
aaa
repnz
cmp
mov
push
mov
xchg
cmp
scas
rcr
subb
es
or
adc
mov
xor
inc
xchg
into
jbe
mov
mov
xchg
incl
pop
push
cmp
add
out
cli
ret
insl
nop
mov
xor
pop
sar
ficoms
dec
xor
outsl
adc
jecxz
incb
cmc
lcall
inc
mov
push
in
je
push
andl
scas
sub
in
xchg
mov
inc
xchg
scas
cmp
mov
scas
imul
jo
jmp
sub
mov
xor
mov
btl
mov
mov
hlt
pushl
addl
pop
fisubrs
mov
fistpll
out
inc
stc
sub
mov
inc
mov
jge
adc
mov
dec
test
inc
and
mov
or
xor
sub
inc
test
ficoms
cmp
or
cmp
movsb
or
gs
xchg
sub
shlb
clc
ljmp
aas
fisubrl
cmp
fmull
inc
ja
loopne
adc
push
movsb
push
clc
sti
ljmp
pop
cmp
nop
inc
adc
mov
nop/reserved
jg
sub
xor
mov
adcl
pop
fcompl
fcomi
stos
xchg
mov
out
pop
adc
fidivl
cmp
xchg
cmp
pop
mov
xchg
xchg
enter
mov
lret
pushf
das
sub
call
pop
sub
push
dec
fidivl
shlb
xor
mov
outsb
lods
cmpsb
ret
decl
repz
rcrb
jb,pt
sbb
inc
add
jb
mov
ret
inc
xchg
test
add
decl
sub
jecxz
mov
cwtl
pop
out
and
adc
call
push
cmp
jb
pop
cs
xchg
pop
jle
sbb
mov
movsb
jp
aad
mov
adc
sti
clc
cltd
add
adc
daa
xchg
jecxz
add
mov
pushl
and
xor
add
xor
pop
mov
mov
incb
or
cmp
int3
sbb
pop
fmuls
mov
lcall
cmp
mov
out
add
jns
movsl
lea
dec
and
icebp
jg
push
out
and
xchg
pusha
daa
push
test
test
cld
or
cld
push
pushf
dec
mov
xor
sti
ljmp
roll
sbb
rclb
sub
jbe
jle
sub
mov
mov
in
nop
sahf
add
jne
lcall
or
xor
in
dec
aaa
jns
xchg
inc
xor
xchg
sti
pushl
jmp
inc
cmc
xor
push
xor
xor
dec
adc
shrb
pop
sub
push
jg
mov
fwait
push
aad
push
xchg
xor
call
loop
gs
cmp
jns
xchg
push
out
mov
ljmp
sub
ss
push
pusha
pushf
xchg
sbb
cltd
mov
rcrb
hlt
xlat
pop
push
cmp
mov
lcall
jmp
xchg
xchg
mov
jle
xchg
push
pop
and
lock
push
xor
into
jp
jle
jg
dec
inc
sbb
pop
pop
pop
sbb
or
outsb
cmp
sbb
iret
mov
xor
jo
mov
ljmp
popa
addr16
test
fnsave
mov
cmp
js
xlat
adc
add
popa
xor
filds
pop
sbb
test
icebp
pop
ja
lock
jbe
sub
mov
out
add
mov
sbb
dec
push
xchg
clc
jmp
xor
les
jg
cmc
mov
jl,pt
fs
mov
mov
out
push
cld
ljmp
cmpsb
lea
mov
in
aaa
jbe
xchg
sub
mov
cli
cmp
adc
jmp
arpl
cmp
push
push
loop
scas
pop
xor
lcall
gs
jne
ds
jnp
loope
xchg
jb
insl
inc
push
dec
addr16
inc
mov
outsl
popf
jne
dec
das
jmp
stos
cs
xchg
ja
les
lods
adc
mov
add
mov
jmp
int3
ljmp
cli
inc
or
jne
or
xor
shl
lcall
dec
arpl
hlt
lcall
sbb
lds
or
mov
inc
dec
xor
mov
cltd
lret
cmp
xor
xor
push
xor
andl
sbb
mov
incl
stos
sub
stos
in
jg
ljmp
and
fists
fcmovnbe
lds
jecxz
test
and
leave
fisubl
or
js
adc
add
enter
and
sub
repz
int3
push
js
xchg
int
leave
iret
test
push
dec
mov
pop
xlat
ljmp
mov
and
enter
ficompl
fnstenv
add
jl
xorl
or
adc
in
pushl
mov
insl
xchg
pop
jae
sbb
out
cmpsl
inc
pop
sub
mov
ljmp
inc
daa
bound
mov
adc
push
outsb
add
loop
sbb
push
adc
pushl
mov
bound
dec
sub
sahf
jmp
je
mov
in
add
jmp
test
inc
dec
push
jg
imul
out
mov
jg
pushl
and
push
xchg
push
mov
adc
pop
movsl
add
clc
jmp
xchg
stos
fdivp
bound
mov
sbb
jg
sub
clc
add
je
orl
enter
jp
or
std
cmp
in
icebp
add
or
jno
fwait
fcomip
lcall
xchg
mov
enter
movsb
pop
popa
or
adc
lods
test
mov
add
repnz
sub
xchg
lea
jae
stos
shlb
ja
or
fwait
incl
scas
dec
adc
push
jl
insb
jle
cwtl
ds
movsl
lcall
pop
push
aam
mov
fcmovnb
dec
lcall
xchg
mov
gs
lods
insb
ljmp
cmp
mov
inc
push
cmp
mov
stos
outsb
test
cmp
and
jbe
ljmp
loop
decl
xor
push
and
push
or
jl
imul
xor
xor
mov
mov
mov
and
shll
or
push
jl
icebp
dec
fcomip
push
sbb
inc
sub
fdivrl
mov
ljmp
push
mov
and
jmp
inc
sbb
or
ss
aad
cmc
fists
dec
int3
mov
les
jmp
xchg
jmp
and
fcoms
mov
mov
xor
shll
dec
xchg
or
pushf
int3
xor
jbe
imul
pop
push
add
stos
jle
xchg
pop
inc
jne
xorb
add
fildll
jo
lret
sub
mov
push
push
mov
and
loop
jmp
pop
xchg
xor
and
cmp
xor
in
and
lcall
data16
dec
stc
cmc
scas
mov
insb
das
or
call
clc
test
pop
lds
lods
mov
fstps
push
xchg
movsl
aad
dec
je
add
call
push
mov
gs
mov
loopne
shrl
imul
xlat
lods
jne
pop
push
jae
pushl
daa
insl
push
jmp
xor
inc
rolb
mov
test
mov
fnstcw
icebp
lcall
jmp
ds
adc
push
fs
cli
ljmp
or
adc
movsl
sbb
mov
aad
cmp
decl
mov
ds
push
add
add
leave
inc
mov
push
rclb
es
jp
fcomps
cli
sbb
les
ret
call
decl
test
sbb
jbe
mov
ret
insb
sbb
scas
xchg
cmp
pushl
std
js
or
test
stos
pop
das
mov
mov
cmp
fidivs
pushl
jge
or
jno
daa
sub
fbstp
int3
mov
cwtl
fbld
pop
call
imul
adc
sub
push
lock
call
lods
adc
dec
xchg
add
mov
sub
lcall
pop
cmc
inc
fcomps
sbb
leave
pop
cmp
mov
jae
out
inc
popa
inc
idivb
inc
mov
or
incl
rcrb
out
and
jb
mov
test
lods
scas
push
mov
pop
ljmp
push
sub
push
jecxz
rorl
mov
adc
sbb
xor
decl
mov
xlat
dec
inc
ret
scas
pop
in
sbb
pop
jp
mov
pop
lock
call
xchg
sahf
adc
mov
stos
int3
aas
scas
dec
xor
sbb
mov
call
push
popf
xchg
inc
daa
imul
mov
pop
push
mov
call
adc
outsl
clc
insl
sbb
and
fcmovbe
xchg
testb
pop
push
stos
dec
or
es
cmpsb
or
pop
nop
mov
scas
pop
dec
dec
fisubs
add
in
mov
fxch
notb
add
insl
jbe
cmp
adc
cmpsb
aam
mov
add
decl
sub
fmul
inc
es
fildll
cli
fists
cmp
jg
mov
push
test
in
popa
loope
lcall
or
adcb
add
sub
fists
and
pop
mov
adc
and
push
les
xchg
jno
ja
inc
push
sbb
lds
jmp
pop
cmpsb
sbb
mov
adc
sub
inc
fwait
push
xor
push
add
inc
dec
adc
pop
inc
push
sub
loope
dec
cmp
push
sub
inc
addr16
call
and
loope
xor
imul
test
call
or
insb
push
xor
sbb
xchg
pop
addl
gs
call
inc
inc
xor
addr16
repz
test
pop
test
lds
ret
nop
test
push
push
test
daa
xchg
in
push
addb
push
xor
and
cltd
sub
in
nop
call
sub
push
jns
xor
xchg
inc
stos
cwtl
xchg
sbb
dec
loope
lea
mov
sub
cli
and
pop
gs
mov
or
pop
imul
jp
xor
pop
imul
lds
pop
dec
dec
or
xchg
and
popa
pushl
xor
roll
iret
xchg
push
inc
adc
loop
and
push
and
pop
in
jle
ja
xlat
adc
popa
xor
and
aad
add
cmp
mov
clc
jg
sbb
jg
xlat
add
cs
clc
fstpt
xchg
adc
add
pop
leave
add
sbb
xchg
dec
inc
incl
ljmp
jae
sbb
and
outsl
clc
add
mov
cmp
sub
xor
in
sub
add
dec
call
dec
push
or
pop
ljmp
popa
and
jg
add
call
in
dec
movsb
xchg
xchg
adc
ljmp
mov
bound
xor
pop
mov
std
push
popa
push
fcoms
sub
movsb
pop
pop
xchg
xchg
sbbb
jmp
sub
inc
lods
or
mov
lahf
xchg
imul
out
clc
decl
pop
xchg
addr16
add
inc
fwait
call
ds
stc
push
push
add
mov
les
movsb
jb
mov
ljmp
mov
popf
fdivs
data16
jae
ret
popa
pop
rolb
sbb
mov
sub
sbb
inc
sub
and
mov
sub
jmp
xchg
ret
imul
dec
pop
arpl
clc
icebp
pop
out
aaa
add
and
jge
cmc
ja
hlt
jno
ret
cltd
push
sbb
xor
adc
fdivrs
test
mov
add
mov
jbe
fst
inc
fiadds
sub
daa
loope
push
or
add
push
sbb
mov
hlt
cltd
or
sub
xchg
sbb
loopne
outsb
decl
pop
mov
jbe
inc
lcall
push
outsl
test
xor
test
sbb
jmp
jbe
icebp
xchg
cmp
adc
dec
f2xm1
ja
mov
xchg
jbe
push
addr16
arpl
inc
in
ja
lcall
sub
pop
mov
dec
aam
cmpl
cmp
dec
or
out
cld
jg
js
add
cmp
mov
cmp
jp
pop
xchg
sahf
js
cmpsb
xchg
xlat
cwtl
mov
mov
xor
js
xlat
xor
mov
xchg
pusha
push
jnp
xchg
punpckldq
movsl
cmp
inc
jne
test
mov
out
adcb
jb
cwtl
push
pop
iret
rclb
test
jg
add
js
mov
mov
inc
mov
fwait
daa
add
call
stos
xchg
hlt
jl
pop
sahf
mov
mov
ljmp
popf
xlat
dec
fildll
int
pop
cmp
add
js
rorl
push
into
sar
and
and
andb
dec
push
or
add
sbb
sub
incl
and
xor
into
adc
sub
bound
or
decl
cwtl
nop
add
mov
dec
scas
or
pushl
shrb
xchg
sti
sbb
mov
cmp
popa
mov
add
add
jp
in
incl
jmp
rclb
sbb
movsl
lretw
movsb
outsl
clc
jg
mov
or
popa
dec
xchg
insb
push
cmpsb
add
push
sub
decl
jns
pop
cwtl
jp
ja
imull
mov
insl
sub
dec
cmc
incl
cltd
lcall
jb
xor
daa
jne
lcall
fists
push
mov
test
addr16
xchg
lea
popf
stos
inc
jle
lcall
decl
sub
push
cs
cmp
inc
repnz
push
ja
test
call
out
test
cmp
aad
push
sbb
incl
jecxz
ret
adc
inc
inc
cmp
mov
inc
outsb
decl
dec
push
fwait
inc
mov
adc
aaa
mov
push
movsb
and
stos
jo
ss
push
xchg
pushl
push
mov
xor
cmp
int3
leave
push
or
js
add
pushl
adc
test
repnz
lods
es
incl
push
dec
dec
pop
sbb
and
pop
incl
push
add
mov
add
adc
cld
or
jmp
lret
add
or
dec
push
arpl
lods
cmp
adc
out
cli
add
daa
push
test
ja
movl
jmp
push
push
mov
xchg
stos
shlb
pop
mov
mov
subl
push
mov
mov
lods
test
push
dec
add
call
rclb
pop
pusha
dec
mov
sar
ljmp
pop
movsl
mov
fsts
fcoms
inc
clc
mov
hlt
xchg
ljmp
push
pop
inc
add
cmp
ja
std
call
fsts
mov
cmp
scas
shll
pop
pop
test
xlat
call
xchg
mov
cmp
subb
orb
stc
fwait
adc
stos
mov
movsb
and
jnp
stc
jl
or
stos
ficoml
addr16
dec
pop
jae
inc
gs
jecxz
dec
xor
and
fistpl
insl
out
test
push
inc
lahf
loope
and
in
testb
jmp
jg
and
dec
jb
loopne
mov
scas
mov
xchg
nop
sti
ljmp
lret
scas
std
stos
mov
mov
addr16
lret
mov
push
pusha
add
call
cmp
bound
pop
add
xchg
push
cmp
test
mov
lds
sub
mov
nop
sbb
out
bound
push
call
lods
ja
jbe
es
fwait
xor
cmpsl
xchg
dec
movsb
mov
std
call
shr
pop
or
inc
call
xchg
mov
jne
sbb
ds
push
or
sti
cmpsb
jo
shrl
sbb
fisttps
inc
sub
sub
pop
loope
pop
push
std
push
push
fcomip
ljmp
mov
mov
stos
mov
or
dec
sbb
shlb
mov
decb
shrl
mov
lcall
xchg
out
mov
push
mov
adc
mov
mov
call
pushf
xor
jnp
popa
mov
inc
sar
call
xchg
enter
add
ss
jae
fmuls
push
pop
lret
jns
pop
lock
test
hlt
pop
sub
push
mov
cmc
jg
and
dec
call
cmp
and
mov
mov
xchg
leave
fmuls
inc
sbb
push
fdivp
mov
xchg
adc
lret
sbb
lcall
jmp
in
or
xor
pop
cmp
mov
sub
xor
jbe
ljmp
xchg
sbb
pop
adc
lret
xchg
mov
jnp
jns
in
cmpsl
imul
pushl
insb
mov
int
jge
cmpsb
mov
mov
push
xchg
into
pop
call
hlt
hlt
add
cwtl
xorb
inc
call
xchg
xchg
incb
xchg
jb
jne
movsb
incl
std
popf
movsb
sbb
or
sar
pop
mov
or
push
push
xor
pop
or
push
dec
test
jns
sbb
xorb
or
incl
data16
and
test
in
mov
int3
cltd
lods
dec
loopne
pop
js
rcl
lods
mov
mov
lcall
push
xor
inc
sbb
mov
test
inc
daa
add
jnp
dec
decl
or
pop
lock
add
ret
loope
mov
or
dec
pop
flds
repnz
enter
push
ret
and
or
mov
call
mov
add
and
test
les
mov
and
call
add
nop
or
nop
cmpsb
fistps
adc
xchg
pop
mov
cltd
int
sbb
mov
and
icebp
or
or
sbb
mov
rclb
sbb
outsb
and
pushl
mov
es
mov
mov
jp
xchg
hlt
mov
ss
fcompl
leave
rcll
loopne
sahf
mov
mov
mov
push
pop
cmp
sub
and
aad
xor
add
or
jns
lds
call
inc
adc
jno
aas
dec
cmp
fldcw
cmp
incl
rcrl
jmp
sbb
lods
sbb
mov
cwtl
xchg
push
loopne
and
jg
xchg
lea
lret
lock
mov
out
cmp
movsb
test
call
push
mov
add
ds
jno
decl
sub
subl
call
dec
je
dec
out
pushf
pop
add
mov
add
push
add
cli
lea
jo
stc
xchg
stos
hlt
ljmp
pushf
dec
scas
dec
rcl
jb
pop
jecxz
cmp
movsl
dec
fmuls
loop
mov
nop
dec
sub
repnz
add
pop
and
mov
into
mov
hlt
push
push
aam
dec
test
add
decl
lret
mov
xchg
push
stc
mov
fildll
popa
ret
sbb
pushl
insb
jle
daa
scas
repz
repz
sub
add
jmp
je
push
sub
int
inc
inc
cwtl
ljmp
in
imul
mov
imul
sbb
and
or
decl
mov
mov
js
fsubl
sbb
out
xchg
lods
lcall
fimuls
lods
cmp
mov
int
lcall
and
mov
mov
inc
xor
loopne
ficompl
jl
jns
pop
cmp
ret
cmp
xor
pusha
push
lods
jmp
adc
cli
add
add
test
cmpsb
lcall
xchg
cmpsl
sub
xor
les
test
cli
jg
add
push
cmp
cmp
add
leave
jbe
or
lock
rorl
jecxz
lds
fisubrl
push
jg
aad
cmp
pusha
lcall
xchg
mov
sbb
push
roll
fbld
out
addl
add
pop
dec
jmp
lcall
sbb
pop
int3
ret
mov
ret
ret
movb
stos
lret
add
adc
orb
into
fs
jb
int3
push
call
divl
adc
add
dec
shlb
ljmp
incl
jp
fstps
jge
es
cld
adc
jmp
mov
pop
popf
add
dec
pop
mov
and
inc
jl
rep
or
and
sti
lds
hlt
cmc
jmp
cmc
jne
xlat
out
xchg
das
data16
daa
inc
sbbl
fbld
adc
xchg
loope
xchg
repnz
int3
outsb
cmp
mov
test
mov
push
or
aam
push
sbb
fmul
in
flds
push
in
fldenv
sub
cmp
jmp
mov
lret
outsb
push
push
out
fsubrl
fwait
decl
push
pusha
movsb
xchg
push
outsb
lcall
out
dec
cwtl
push
jne
mov
push
xchg
dec
mov
cmc
mov
xchg
aaa
arpl
jmp
or
sti
xchg
filds
mov
mov
dec
or
or
loopne
cmc
pop
cmp
aaa
pop
sbb
add
call
lock
mov
cltd
add
pop
pop
insl
cmp
in
lret
pmulhuw
inc
pop
or
xchg
icebp
addb
imul
mov
adc
inc
sub
mov
pop
mov
leave
pushl
fwait
and
roll
sub
cmp
push
mov
or
mov
int3
mov
add
push
test
sub
xor
lret
adc
mov
rorb
aam
insl
sti
jmp
push
int
jb
orl
aam
es
jl
xchg
in
xchg
push
int
ret
adc
sbb
mov
mov
ds
cli
call
xor
dec
xchg
pusha
cmp
push
xchg
jmp
dec
and
pop
imul
stos
stos
add
xchg
push
cmp
lock
mov
xchg
adcb
and
pop
test
movsb
stos
push
hlt
cltd
mov
xchg
lcall
shlb
adc
repnz
cmc
sub
mov
lcall
sub
cld
push
dec
cmp
incl
stos
scas
decl
push
mov
pop
ret
int
xor
mov
into
push
repz
jecxz
out
add
sti
lret
xor
call
rorb
mov
mov
outsl
add
mov
xor
pop
fimuls
mov
in
xchg
hlt
mov
ljmp
mov
and
nop
mov
shll
ds
mov
ljmp
fildl
pushf
jmp
fs
inc
movsb
mov
inc
xlat
inc
std
decl
jp
ret
jo
das
jo
icebp
mov
or
push
popa
fistps
es
inc
repz
mov
ds
and
pop
push
insb
loopw
or
jg
ljmp
xor
or
or
popa
mov
mov
incl
xchg
inc
and
cld
enter
push
dec
and
cld
mov
call
ljmp
mov
cmpsl
movsb
xchg
push
addl
rorl
dec
lahf
xchg
notb
mov
jge
lret
dec
xchg
fmulp
mov
shll
jle
out
cli
pop
std
aam
cmp
pusha
arpl
add
mov
and
in
aas
clc
and
and
repnz
add
out
sbb
lods
pop
xor
sbb
rclb
sub
fbld
xchg
aam
push
es
xor
and
lcall
mov
and
adc
test
popa
and
mov
inc
push
in
dec
push
scas
add
and
stos
mov
fistpll
push
pop
inc
ret
inc
aaa
sub
adc
incl
adc
pushf
in
jl
cmp
inc
mov
mov
pop
sahf
fxch
popa
ficoms
sbb
fs
xchg
fcos
mov
jae
xor
fisttps
and
cmp
aas
and
imul
xchg
sarl
inc
adc
sub
pop
cmp
movb
movsl
jge
imul
int
dec
mov
add
xchg
loope
jmp
mov
and
push
mov
cwtl
decl
filds
movsb
rorl
sbb
add
push
std
and
pushl
pop
mov
push
cwtl
mov
xor
push
and
cmp
icebp
mov
daa
and
fldcw
inc
mov
mov
and
push
dec
cmp
xchg
cmp
dec
mov
jg
or
xchg
mov
add
pop
push
xor
inc
cmpsb
jg
cmp
xchg
push
mov
xchg
cmp
subl
and
decl
lock
mov
xchg
mov
and
insb
clc
incl
in
or
dec
stc
mov
add
adc
and
xchg
or
ret
or
add
mov
ljmp
ss
or
pop
mov
lret
push
jg
dec
cmpsb
sub
dec
mov
add
or
mov
push
jno
arpl
push
call
jmp
cwtl
loopne
int3
ljmp
push
unpckhps
mov
inc
dec
arpl
or
push
fs
jle
xor
test
push
mov
mov
rcrl
and
incl
shlb
ret
lds
cmp
pop
pop
add
es
popf
loope
loope
ljmp
data16
dec
xchg
mov
inc
pop
mov
adc
loopne
push
ljmp
pusha
lret
decb
aaa
xor
xor
fsubr
incl
adc
xchg
lret
adc
jmp
add
push
fisubl
mov
mov
fisttpl
pusha
push
sub
cmpsl
and
ljmp
les
sub
shl
ljmp
push
push
fsubrl
mov
cmp
pop
mov
fisubs
into
dec
es
jg
mov
fwait
push
push
icebp
xorb
in
cmp
xor
lcall
lds
mov
push
pop
incl
or
xor
jge
orl
mov
jge
js
sub
dec
adc
and
mov
clc
rcll
ljmp
mov
mov
lcall
rclb
xchg
sub
andl
loopne
adc
add
pop
movsl
jmp
sarl
sub
pushl
mov
push
inc
pop
add
push
push
sbb
or
push
test
cmpsb
pushl
cmp
setno
test
stc
aas
jo
gs
mov
mov
lock
ljmp
adc
mov
push
sub
into
in
cmp
shr
int3
and
addr16
rorl
jmp
xchg
jp
dec
pop
stos
negb
ss
scas
mov
pushf
pop
xlat
add
inc
fs
jbe
and
fisttps
pushl
dec
out
inc
shlb
mov
incl
cli
xor
hlt
sub
xor
push
bnd
call
jl
fcmovne
sub
mov
insl
xchg
call
loopne
dec
pop
es
dec
mov
fcoml
sub
pop
and
mov
jmp
lret
jno
pop
movsl
icebp
push
leave
mov
mov
ja
out
shll
mov
xchg
mov
inc
cmpsb
or
push
out
mov
inc
notb
test
call
pusha
stc
sbb
sbb
test
rorl
adc
bound
mov
inc
jb
jns
sub
call
dec
or
lret
add
add
add
call
insl
ljmp
sbb
cwtl
test
add
das
lods
mov
xor
imul
jmp
pushl
outsb
adc
fwait
push
push
dec
pcmpgtd
sub
iretw
aam
xchg
js
mov
adc
cmp
cltd
int
lea
inc
rolb
call
xchg
mov
sbb
mov
decb
fst
lods
lods
dec
repnz
pop
das
sub
sbb
lock
std
incl
imul
inc
cs
notb
pushw
fists
and
popf
push
inc
mov
adc
sub
mov
lods
int
out
xchg
pop
push
sub
outsl
cli
mov
hlt
xchg
dec
inc
pop
test
rcl
pop
flds
decb
out
xlat
lret
mov
mov
cltd
insl
jb
mov
add
sbb
arpl
mov
inc
cmc
push
dec
ja
xor
je
push
jg
or
adc
jae
sbb
cmp
mov
sbb
lods
add
mov
pop
sbb
decb
xchg
addps
mov
aad
sub
add
aaa
xchg
push
cli
adc
or
das
nop
add
mov
add
popa
cmp
dec
adcl
lods
lahf
icebp
mov
call
mov
xchg
mov
nop
sbbb
sub
shlb
mov
sbb
or
mov
les
mov
sbb
sub
dec
cli
cmp
imul
js
scas
cmpsb
inc
xchg
cmpsb
push
bound
sar
dec
xchg
xor
and
xor
dec
shll
adc
push
mov
mov
fcom
xor
push
pop
lcall
pushf
lods
sbb
xor
dec
sar
adc
nop
xchg
mov
out
into
push
jae
xchg
mov
cli
mov
je
mov
ret
lea
lods
int3
ret
outsl
cli
pushl
sbb
sbb
jns
cmp
cli
push
jg
dec
push
cmp
scas
sub
shll
sbb
orb
insl
cli
scas
fstps
mov
in
push
add
xchg
mov
and
or
test
jbe
inc
test
inc
gs
fnsave
push
xchg
mov
icebp
jmp
cmc
jmp
push
clc
repz
lret
lret
add
jl
insl
pop
inc
pushf
cmp
enter
mov
orb
out
enter
sti
jg
mov
cmp
rorl
dec
pop
inc
push
jp
sub
jg
push
rcrl
inc
sbb
cmp
xchg
rcrb
rcll
lea
inc
shlb
lods
wrmsr
sbb
jg
clc
sbb
stos
sarl
pop
lods
lods
pushf
sbb
adc
ror
cmp
and
cmp
push
lcall
mov
sbb
cmp
fcomip
inc
mov
xor
lret
cld
jg
cmpsb
xchg
add
sarl
xor
and
and
enter
loope
mov
inc
mov
xor
push
inc
cmp
adc
inc
inc
mov
dec
pushl
adc
shlb
and
ret
inc
xchg
or
dec
xor
ljmp
cmp
jno
push
inc
movsl
push
cmp
test
rcll
or
adc
adc
xor
mov
mov
pop
sbb
sbb
mov
sbb
cmp
inc
jno
loopne
xchg
in
sbb
inc
sub
push
lcall
add
repz
insl
mov
idiv
add
lcall
jmp
das
mov
add
andb
dec
mov
add
xchg
lcall
dec
mov
dec
lock
mov
adc
insb
mov
or
adc
hlt
pop
iret
mov
sar
pop
mov
test
lcall
jmp
or
or
adc
adc
add
mov
sub
outsl
xchg
mov
stos
sarl
jg
xor
sub
fnstenv
jmp
adc
sbb
sbb
mov
xchg
jnp
inc
pushl
movsl
cmp
adc
scas
mov
mov
lea
or
rorb
jo
inc
sarb
mov
xor
cwtl
je
rorb
aas
xor
cli
sub
dec
push
mov
lcall
cmp
lret
clc
jg
clc
lret
cmp
dec
les
or
cwtl
mov
adc
dec
mov
addb
cmp
mov
aaa
cwtl
clc
fwait
sti
lea
les
mov
hlt
popa
pushf
fdivp
jle
mov
stos
movsl
fists
out
adc
sbbl
jmp
in
mov
inc
cmpsb
mov
adc
xchg
popf
jmp
cld
mov
pop
adc
repnz
push
push
fisttpl
add
or
lcall
adc
andl
inc
dec
and
out
jae,pt
lcall
xchg
lock
sahf
adcb
or
push
mov
mov
add
cli
pop
adc
std
push
jo
add
lcall
pop
nop
push
push
jne
addb
insl
pop
aam
lcall
sub
xchg
mov
test
inc
add
jg
push
push
or
cmp
fwait
mov
roll
push
jg
call
add
mov
rorl
rcrb
fcoms
jge
popf
pop
lret
sub
shll
cltd
sub
rcll
cmp
inc
jecxz
xchg
sbb
sbb
pop
mov
lret
add
decl
sub
or
cmp
dec
imul
mov
decl
cmp
fwait
dec
shr
cltd
sbb
sahf
dec
dec
dec
dec
dec
ret
pop
lds
or
adc
call
fcmovnbe
mov
mov
push
fnstenv
sub
add
adc
int3
xchg
int
and
aam
lea
add
jnp
iret
cld
mov
inc
dec
insl
ljmp
adc
in
inc
dec
or
bound
pop
aam
mov
jl
dec
dec
ds
mov
mov
fbld
pop
in
xor
pushf
add
dec
into
call
push
addb
or
fwait
mov
mov
in
aam
addr16
fcmovnb
fstp
cli
decl
fcomps
enter
fcomip
jo
xlat
loop
add
cmp
jne
push
pop
imulb
sub
and
pushf
dec
xchg
jle
cmp
inc
and
sub
inc
sub
or
adc
dec
lret
xor
clc
inc
or
or
dec
or
fildll
and
loopne
imulb
testb
shll
lret
xchg
and
ljmp
mov
push
cmpsb
or
das
pop
or
aad
jg
outsl
test
xor
std
fs
stos
mov
jnp
jg
sub
sbb
lret
add
fcmovnb
pushl
and
cmp
xor
call
xchg
les
pop
sbb
push
pop
push
cmp
cmp
cmp
jg
decl
leave
leave
test
jns
lret
pushf
pop
pop
jno
pop
mov
int3
cmp
insl
mov
pusha
pop
xor
aam
xchg
push
rolb
jg
dec
cld
cmp
rcl
adc
jmp
cmp
call
add
sbb
dec
insb
and
call
ds
aad
movsb
icebp
ja
cli
mov
and
cld
mov
ret
fldl
fwait
js
lock
dec
out
lods
jo
lods
jg
add
fiadds
movsb
lock
push
push
mull
pop
sub
incl
mov
mov
adcl
pop
imul
xchg
xor
sti
stos
mov
testl
mov
cmp
inc
and
fmuls
add
jmp
aad
add
push
sub
call
cmp
repz
pop
into
push
movsl
xchg
loopne
pusha
out
aad
xchg
arpl
adc
stos
sub
aas
insb
cwtl
ret
les
and
pushl
dec
cmp
mov
xor
rclb
mov
popa
inc
pushf
fisubl
jne
sar
lahf
pusha
ljmp
mov
rclb
or
lret
add
mov
sub
lret
mov
sub
stos
incl
movsl
xor
pushf
pushf
push
sbb
fsub
inc
sub
enter
xor
mov
jecxz
mov
rcrb
mov
cmpsb
or
cmp
push
lcall
pop
rclb
sub
ds
xorl
subl
adc
fisubrs
sub
scas
pop
or
sub
xor
mov
and
orb
into
xorl
or
mov
lret
into
incl
push
fs
jbe
fdivl
outsl
clc
sbb
push
in
inc
fsubp
dec
enter
enter
mov
dec
mov
add
mov
adc
or
or
call
mov
add
cmp
dec
std
enter
andb
add
add
in
clc
xor
push
out
addr16
addr16
fs
pushl
sbbb
mov
and
sub
rorb
rcrl
jb
rorb
decl
mov
push
shll
pop
test
cltd
lret
lods
and
imul
loope
test
leave
inc
jnp
sbb
rcll
or
lcall
inc
xor
aad
aaa
sub
dec
push
hlt
mov
test
shrl
push
cmpsb
mov
test
lock
inc
pop
and
jg
xchg
sub
loop
lret
add
jg
add
lahf
mov
sbb
sti
xor
jae
inc
or
shlb
sub
xor
cmp
call
arpl
mov
inc
int
adc
cwtl
das
inc
sub
bound
call
pop
pop
movsl
xor
or
lods
das
dec
xchg
daa
add
icebp
ljmp
negb
push
pop
push
in
xchg
insb
lret
in
jae
pop
push
or
adc
test
mov
mov
in
xor
xor
jnp
or
pushl
xchg
jae
mov
mov
and
bound
push
xchg
ljmp
pusha
sub
call
lcall
pop
imul
cmpsb
push
loope
xchg
fstps
cmpsb
xor
stos
mov
push
xchg
scas
loope
pop
jbe
adc
xor
ljmp
or
mov
cmp
push
push
xchg
or
call
mov
outsw
mov
mov
cmp
and
mov
cmpsb
sbb
mov
sbb
call
in
cmp
test
popf
pop
insb
loope
push
adc
sbb
mov
shll
adc
mov
bound
sub
push
and
push
movsb
pop
adc
sub
shrl
clc
pushl
xor
mov
jge
faddl
jecxz
dec
call
lds
mov
or
jmp
pop
or
dec
lds
mov
xchg
scas
out
pop
push
cmpsb
mov
add
imul
decl
repnz
into
sub
xchg
mov
insb
nop
lcall
repz
enter
lret
cmp
insb
jne
insb
pop
outsb
add
jae
lahf
add
lock
mov
mov
fsubrs
test
mov
sub
fmul
je
push
push
and
insb
ficoml
inc
or
std
fists
sub
scas
push
test
jnp
loopne
cmpsb
mov
and
adc
fadds
pushf
out
sbb
cmp
incl
xchg
jl
sbb
outsl
mov
mov
ret
mov
pop
fistpl
xor
pushf
outsb
mov
mov
jmp
push
jmp
mov
sbb
push
push
out
pop
add
push
call
ss
out
mov
outsl
imull
push
mov
lcall
out
cmp
cmc
push
pop
movsl
adc
ret
cs
iret
jns
pop
ror
pop
xor
incl
jno
xor
aas
or
xor
and
dec
es
fildll
loopne
rcl
and
ds
icebp
rcll
icebp
adc
incl
out
cltd
subb
pop
sar
jae
jo
mov
pop
push
cmp
rol
add
adc
add
jmp
cwtl
or
cmp
fcos
jg
dec
shlb
mov
xchg
es
bound
cltd
repnz
xchg
add
mov
and
call
ljmp
cmp
js
sub
adc
push
cmp
ror
and
out
sbbl
repz
stos
cltd
ljmp
pop
mov
sbb
lretw
jle
fwait
or
mov
push
jl
and
add
stc
das
add
inc
daa
mov
sbb
jmp
inc
cli
loope
sbb
test
cld
jle
bound
rclb
and
jmp
scas
movsb
jmp
jne
jg
gs
lfs
outsl
rclb
mov
mov
gs
insl
push
incl
pop
ret
sbb
cmp
mov
push
clc
lock
lea
mov
orb
cmp
insl
int
xchg
cmp
add
mov
incl
add
xchg
mov
xchg
adc
sub
inc
push
or
push
xchg
xchg
jns
xchg
cmc
pop
jne
test
out
ja
loopne
mov
mov
pop
jge
sbbl
rclb
sbb
or
mov
sbbb
xchg
xor
inc
jecxz
cmp
jecxz
mov
mov
dec
mov
nop
ret
mov
cltd
add
sub
inc
cli
mov
push
imul
shlb
mov
pop
leave
push
xchg
mov
or
push
xchg
jb
cltd
movsl
inc
call
popf
adc
movsl
sbb
inc
and
rclb
lock
jmp
lods
sub
inc
dec
push
aam
sbb
mov
pop
or
dec
mov
mov
stos
daa
jne
push
stos
lods
xchg
ljmp
dec
lcall
scas
inc
std
adc
mov
faddp
pop
xchg
les
sbb
cmp
xor
pop
push
xchg
call
popa
imul
aaa
or
fsqrt
divb
clc
pop
sbb
call
mov
inc
lcall
lods
incl
dec
pop
mov
xor
xchg
add
fdivrs
repnz
out
xchg
or
add
sub
pop
pop
push
daa
xor
incl
mov
frstor
jg
sbb
inc
pop
mov
fmull
mov
ljmp
sbbb
pop
or
pop
pusha
ja
out
cmc
daa
decl
lock
fs
fs
sbb
push
ficoms
in
xchg
pop
adc
or
je
add
jmp
fcom
inc
je
popa
je
je
ret
test
ss
jb
xchg
addr16
addr16
sbb
je
jecxz
pop
stos
mov
decl
fdivl
lret
mov
call
mov
test
jns
xor
call
popa
inc
or
cmp
xchg
pusha
push
cltd
and
pop
lcall
out
gs
push
decl
movsl
xchg
dec
mov
mov
addr16
cltd
es
cmpsl
rol
pop
jl
push
cli
fucomip
mov
aam
add
and
ljmp
andl
inc
std
rcll
in
push
dec
aaa
pushf
lcall
stos
pop
push
sar
cmpsb
orb
cltd
mov
add
addr16
lcall
sarb
cmp
adc
push
repz
aas
rcll
add
pop
lcall
inc
daa
mov
addl
cwtl
sbb
int3
out
scas
jmp
lcall
lret
jo
mov
pop
andb
in
loopne
sbb
clc
xor
mov
push
mov
or
jmp
pop
loope
ret
movsb
and
fwait
jmp
xor
inc
sti
lcall
ret
call
or
pusha
push
mov
pop
add
push
xchg
mov
test
mov
adc
call
ljmp
or
inc
dec
cli
mov
rclb
sub
dec
cmpsb
inc
repz
pusha
in
jle
jg
jg
and
or
mov
sub
dec
lret
push
mov
incl
fcmovb
test
jl
outsb
inc
test
xchg
and
mov
mov
mov
ljmp
rcrb
loope
lret
nop
xor
push
push
dec
pop
insb
adcb
push
out
cli
incl
push
cmp
in
test
imul
sahf
xchg
inc
pop
sarb
mov
int3
pusha
decl
push
repnz
push
add
sahf
shl
and
sahf
stos
lret
jmp
xor
and
push
or
shrb
add
sub
js
sbbl
outsl
xchg
sub
mov
jmp
rcrl
fildll
pop
and
loope
or
call
add
jecxz
pop
dec
es
rolb
cli
fsubr
cmp
pop
mov
fildll
push
dec
inc
sbb
pop
sub
insl
sub
sbb
xor
cmp
xor
sbb
add
ja
xchg
mov
or
pusha
xlat
or
push
les
inc
sbb
or
out
jle
std
mov
mov
or
mov
es
pop
mov
movsb
sbb
ret
lahf
inc
pop
mov
jecxz
nop
test
inc
push
in
inc
inc
hlt
nop
lcall
fwait
popl
push
cmp
mov
lcall
push
cmp
je
mov
std
loopne
xchg
stc
cltd
pop
xor
pop
xor
push
test
jmp
pop
pop
pushl
mov
push
inc
xchg
inc
and
adc
rol
mov
mov
push
xchg
mov
enter
out
mov
lret
xor
and
jp
out
movsb
cmp
add
int3
dec
fcomip
sbb
or
cltd
repnz
pop
and
lret
mov
call
idiv
rorb
scas
sbb
scas
in
out
clc
pop
pop
jo
sbb
repz
inc
add
call
test
sbb
fisubs
xor
roll
add
std
jmp
movsb
add
addr16
or
rolb
arpl
inc
adc
incl
ret
jno
inc
in
loope
cmp
imul
std
out
daa
mov
incl
push
clc
sbb
lea
adc
push
rolb
jne
dec
arpl
xchg
and
pushl
int3
scas
jno
and
mov
insb
aam
mov
fwait
dec
dec
repnz
adc
mov
xchg
cmc
popa
push
hlt
sbb
push
and
out
xchg
xor
in
or
out
mov
fstpl
inc
or
push
ss
scas
gs
std
dec
push
mov
arpl
ret
inc
in
loopne
jg
decl
lret
mov
lcall
sub
shrl
sbb
out
pop
dec
addl
sub
sbbl
mov
and
clc
addb
add
fdivrl
pop
mov
jmp
movsl
mov
mov
inc
ljmp
test
dec
fidivl
inc
jg
lcall
repnz
mov
imul
outsb
int
out
jo
xchg
ljmp
push
inc
xor
pop
mov
mov
lea
popa
jo
repz
pop
loope
jg
push
shlb
cmp
and
arpl
or
jae
add
mov
les
jl
adc
mov
jno
aas
inc
cmpsb
lcall
in
cmpxchg
lock
lcall
mov
adc
push
ret
mov
mov
lcall
daa
lea
mov
popa
cltd
fcomip
pop
dec
std
add
test
inc
sub
call
pop
aam
fcomps
xchg
rcr
xor
mov
and
imul
daa
pop
jb
pop
mov
cmp
sub
push
ficomps
ret
xor
shrl
pushl
mov
call
jecxz
dec
mov
push
ret
cmp
ds
jg
add
adc
dec
inc
pop
andb
or
je
adc
test
push
and
or
aad
prefetch
pop
jnp
xchg
sub
inc
or
out
jmp
cmp
les
inc
insb
adcl
jg
insb
mov
fistps
jb
das
push
test
inc
fidivrs
repz
sbb
mov
xchg
dec
mov
fdivl
imul
shl
mov
fistpll
stos
out
imul
push
in
loop
jge
add
mov
rolb
hlt
jle
iret
rcrl
inc
add
or
cmp
in
repz
aam
sub
stc
inc
cmp
fistl
scas
faddl
jmp
mov
pusha
add
cli
mov
sbb
adcl
test
cmp
fdivr
cwtl
filds
lret
pop
fists
pop
and
inc
sbb
fstps
int3
or
or
fs
imul
or
movsb
mov
mov
popf
and
and
jmp
std
ret
xchg
dec
push
add
subb
lcall
cmp
or
jl
pusha
sub
fsubrl
pusha
lcall
add
mov
adc
inc
int
nop
rolb
lcall
sbb
add
movb
push
add
inc
addr16
movb
push
add
call
mov
in
jns
je
mov
add
push
jmp
stos
push
loop
mov
xchg
lcall
call
cltd
xor
mov
or
or
enter
sub
dec
sbb
dec
fsubr
or
sarb
fisttpl
jl
frstor
xor
mov
sahf
dec
push
lahf
inc
ja
decl
mov
dec
jb
sbb
mov
sbb
jp
pop
cmp
pop
in
rcrb
aam
out
adc
and
cmp
cmp
cmp
ljmp
push
inc
inc
loopne
dec
dec
add
negb
inc
dec
fdivrs
inc
ss
inc
jb
test
adc
sbbb
fadds
adc
std
push
inc
pusha
fcoml
icebp
mov
incl
xchg
fs
fistps
inc
shl
shll
fnstenv
fcomip
inc
adc
xchg
push
push
rolb
adc
mov
mov
rclb
push
insl
lds
mov
pushf
int3
popf
cltd
int
in
pop
mov
push
sbbl
bound
mov
and
push
stos
inc
and
sar
add
push
outsb
js
sbb
jns
add
and
adc
fisubl
mov
add
bound
push
test
test
jo
int3
sbb
rcrb
fiaddl
test
ljmp
or
addl
pop
into
stc
push
test
nop
dec
mov
pop
jmp
inc
push
xchg
int
mov
adc
adc
rorl
jbe
cwtl
insb
lret
or
xchg
ljmp
icebp
xchg
push
xor
push
mov
lods
inc
and
sbb
imul
leave
xor
leave
movsb
ja
aam
pop
ret
rorb
push
dec
mov
push
cli
inc
dec
xor
dec
mov
rclb
fmull
bound
incl
enter
decl
in
js
inc
and
adcb
mov
xchg
cwtl
aas
insl
cwtl
jg
test
mov
dec
lock
jmp
loope
mov
pop
jle
rolb
in
outsb
pop
pop
xor
mov
cmpb
cwtl
es
adc
jae
push
mov
decl
inc
cs
or
jo
ss
adc
shlb
fldl
mov
xchg
and
out
push
mov
or
call
push
inc
pop
ret
test
insl
inc
gs
jmp
outsb
fsubl
test
and
mov
jbe
scas
clc
decl
jbe
push
adc
test
cmpsb
jb
sub
sub
dec
mov
in
jg
incl
pop
lock
jp
je
cmp
add
out
shll
movsl
mov
aad
es
mov
mov
shlb
int
outsb
xchg
sbb
pushl
lcall
jmp
cld
lea
dec
mov
insb
inc
mov
push
ljmp
push
das
cli
test
call
xor
icebp
jg
filds
in
leave
cld
mov
xchg
lret
jecxz
sub
stos
jle
jp
mov
std
push
sbb
xlat
adc
pushl
cld
xchg
addb
and
dec
test
push
movsb
pop
mov
cmp
roll
movsb
mov
push
push
test
cmc
cmp
inc
xchg
pushf
dec
subl
scas
mov
sbb
incl
pop
cmpsb
jmp
shll
sub
adc
push
pop
test
call
add
decl
out
pop
dec
add
into
push
enter
push
xchg
jmp
popa
jmp
shll
inc
in
rcrl
pop
add
call
cmpsb
push
cwtl
ss
mov
insb
sahf
movsl
pop
js
ljmp
nop
popf
pop
int
jbe
rolb
call
movsb
dec
in
movsb
mov
out
push
lcall
xor
push
xlat
xor
mov
fcomip
ljmp
adc
mov
shufps
jge
fsubrs
push
flds
adc
mov
fbstp
sbb
mov
ljmp
mov
xor
outsb
add
stos
fisttps
mov
jmp
mov
add
dec
jecxz
pop
cs
dec
lcall
xlat
stc
in
jmp
jp
into
pop
pop
scas
lcall
stos
jmp
cs
inc
mov
into
jg
sbb
leave
xor
les
jl
cli
push
cmp
mov
cld
pushl
jmp
pop
imul
inc
inc
je
inc
hlt
adc
cli
add
cs
imul
outsl
mov
fmull
fdiv
sbb
jmp
cli
xchg
adc
in
clc
ret
bound
sbb
ret
fmull
out
sbb
jmp
gs
incl
les
lods
leave
push
push
add
push
rcll
adc
pop
add
lcall
and
sahf
dec
lock
out
imul
sub
fisttpll
arpl
adc
dec
and
mov
fs
fiadds
pop
mov
rcrl
int
mov
mov
inc
aam
in
cltd
cmp
pop
sar
sub
ljmp
adc
imul
mov
ljmp
ror
sbb
out
outsb
or
fisttpll
sub
decl
iret
sub
lds
push
fcmove
aad
push
insb
sub
jecxz
xor
mov
rol
jecxz
lock
fcmove
icebp
stc
lcall
loop
lea
outsb
mov
jb
dec
mov
jns
xchg
sbbb
stos
stc
rcrl
xchg
out
daa
mov
std
dec
sub
mov
js
jmp
pop
call
pop
xlat
xchg
or
mov
or
inc
mov
int
sub
incl
loopne
das
sti
rcll
out
mov
stos
dec
add
cmp
ret
movsb
adc
fstpt
aas
lcall
add
ljmp
cwtl
ffreep
adc
lcall
add
push
sti
out
cmc
ds
scas
xor
jle
movsb
sbb
repz
mov
pushl
fsubr
test
bound
xlat
mov
and
loop
pop
pop
lcall
push
pop
loopne
mov
push
lahf
aad
pop
cwtl
out
aad
mov
imul
sbb
fbld
xor
insb
xor
insb
cmpsl
pushfw
fiaddl
inc
or
inc
xor
insb
push
adc
inc
rcl
sub
fcomip
cmc
test
pop
push
xor
ret
dec
sub
popfw
jb
dec
mov
push
decl
sbb
pop
dec
dec
jns
jae
ljmp
cltd
push
mov
pop
jo
jmp
out
orl
stos
sub
adc
icebp
ficomps
movsl
cmpsb
rcr
decl
test
mov
xchg
outsl
sub
loopne
enter
fiadds
mov
or
jb
mov
pop
pushl
pop
jbe
pop
dec
fsubrp
aaa
push
xchg
movsb
fucomip
mov
fstl
fstpt
mov
xchg
pop
sub
xchg
rol
or
outsb
jmp
sbbb
push
shll
rolb
inc
fldenv
push
xchg
imulb
adcb
imul
aam
mov
jo
mov
mov
add
push
adc
sbbb
ja
push
inc
add
xorb
push
xor
call
stos
inc
jne
divl
ja
mov
cmpsl
add
inc
jno
mov
push
clc
jns
inc
in
push
add
ja
mov
loop
movsb
imul
mov
or
bound
popa
cmpsb
gs
pop
inc
add
gs
insb
push
xchg
test
xchg
xchg
inc
lock
shlb
sbb
sub
cmpsb
dec
dec
insl
inc
outsl
pop
or
fcomip
pushl
or
insb
je
and
mov
incw
and
push
or
jb
call
sub
jbe
js
xlat
adc
ret
xor
sbb
jno
jg
aad
aaa
cmp
pop
xor
pop
enter
adc
and
inc
loopne
pop
or
stc
push
adc
sbb
insl
jg
decl
push
mov
es
out
dec
mov
mov
insl
mov
icebp
or
mov
cmpsl
sub
test
dec
cmp
stos
push
sbb
dec
add
decl
jnp
mov
into
sub
call
lds
sbb
cmp
cmp
ljmp
popa
cli
dec
push
and
lret
sar
ljmp
add
lahf
cmp
mov
push
xor
mov
fdivs
daa
sub
nop
add
or
fadds
dec
mov
iret
xorb
sub
sti
mov
sti
add
ret
push
hlt
fcomip
jp
mov
xor
jg
aaa
ja
mov
mov
dec
fadds
inc
adc
dec
and
add
push
inc
leave
add
cli
push
or
arpl
adcb
and
xchg
test
call
outsb
insl
dec
mov
frstor
push
sub
outsl
clc
out
push
mov
jb
inc
imul
and
aad
int
jne
sbb
and
call
or
dec
and
cld
push
jb
sbb
xor
xor
out
mov
ljmp
mov
push
pop
rcrl
mov
ljmp
sub
insl
mov
imul
enter
jo
inc
xchg
push
jmp
ljmp
decl
insl
push
repnz
jg
leave
dec
sub
or
sbb
xor
mov
adc
pop
rcrl
in
xor
mov
cmp
cli
outsb
cmp
fs
pop
adc
mov
in
test
and
jbe
js
ljmp
in
xor
leave
jecxz
push
cmp
mov
xorl
bound
mov
cmp
test
decl
aas
cltd
sbb
aas
inc
mov
cmpb
sub
jle
or
ret
add
out
add
sub
sub
ja
movb
sub
mov
imul
lods
inc
mov
int3
rorb
repz
cli
adc
scas
outsl
scas
cs
incl
cmp
pop
xor
pop
push
mov
mov
mov
add
jns
es
add
xchg
fidivs
push
in
aas
inc
jl
jae
mov
push
pop
hlt
addl
pusha
or
sub
orl
sbb
pop
addr16
cmp
sbb
fcoms
lcall
testb
pop
fs
cwtl
dec
subb
out
sub
call
add
push
mov
js
or
andl
mov
or
sub
call
les
insb
sbb
loope
xor
incl
ficoml
push
mov
cld
sbb
roll
mov
pusha
ret
aas
mov
cmpsl
bound
or
sbb
mov
cltd
in
into
cmp
or
leave
xchg
dec
fwait
mov
popa
xlat
test
or
xor
adc
jbe
shlb
fstpt
pop
in
and
adc
scas
ljmp
mov
daa
push
outsb
pop
addl
jmp
fs
inc
inc
jnp
in
jo
cmpsl
cltd
ret
add
xor
sub
or
cli
decl
pop
clc
js
fdivr
popa
int3
xor
pop
decb
stos
cld
mov
and
imul
mov
out
xor
das
mov
adcb
inc
test
or
ljmp
or
pop
es
adc
pop
pushf
addb
dec
jno
sbb
cmp
sub
cwtl
pop
xchg
jns
inc
movsl
sbb
add
xchg
inc
subb
and
add
xchg
xchg
mov
jns
inc
adc
lods
xchg
lcall
cld
js
mov
int3
jl
pusha
imul
lds
dec
cmp
jae
sbb
rorb
push
pusha
adc
call
or
jge
adcb
push
clc
orb
clc
mov
incl
sub
sbb
and
jmp
push
in
jp
daa
mov
fbld
call
dec
inc
jmp
xchg
cmp
dec
rcll
test
lods
jmp
push
cmpsl
pop
lods
shr
sub
sahf
push
decl
test
push
cmp
inc
cmc
sbb
sub
add
pop
jmp
jae
jg
sub
aad
insl
add
std
and
cmc
test
sub
dec
pop
mov
ret
xlat
xor
sub
inc
cli
ret
int
dec
loopne
mov
pop
xorb
test
add
loop
xchg
dec
ja
orl
push
clc
push
call
xchg
cmp
mov
push
loopne
lock
cmp
je
cmp
jmp
fidivrs
test
push
inc
pop
ss
iret
cmp
mov
mov
push
imul
decl
movsb
jo
pop
mov
sar
jbe
shl
or
xchg
cmp
imul
sar
test
sub
mov
mov
pushl
ljmp
push
jecxz
dec
gs
push
push
mov
mov
rcrb
pop
decl
call
repnz
inc
cltd
int
or
sbb
push
dec
push
pop
jb
push
jp
incl
xor
xor
mov
cmp
popa
sahf
int
xchg
cmpsl
push
das
adc
mov
movsb
pushf
inc
xchg
jno
inc
or
fiadds
cmp
inc
push
xor
fwait
shrl
gs
into
sub
push
inc
roll
push
test
or
loopne
cmp
adc
cwtl
mov
lods
in
mov
mov
lret
inc
loop
cld
es
ror
dec
adc
jp
xchg
xor
aam
test
pop
sarb
mov
adc
mov
add
ret
call
inc
or
cltd
adc
ljmp
shll
xor
xchg
int3
arpl
lcall
andl
mov
incl
cltd
dec
push
loopne
xchg
mov
xor
mov
lock
xor
test
call
pop
sub
inc
notb
sub
sub
call
hlt
and
insl
hlt
sub
aaa
adc
jbe
push
in
call
cmp
clc
cltd
jae
sarb
dec
cmp
push
mov
hlt
adc
cmp
cmp
jae
jnp
inc
fildll
and
mov
popa
repnz
jmp
lods
shlb
lcall
int
cs
sub
adc
and
mov
sbb
loop
xor
shlb
dec
jecxz
sbb
test
insb
clc
adcb
mov
test
lds
cmp
adc
test
fadd
frstor
pop
and
subb
frndint
les
std
ljmp
pusha
push
dec
fwait
cmp
push
mov
push
xor
or
adc
icebp
add
inc
add
dec
ret
add
and
xor
bound
rcl
pushl
or
lods
mov
and
ss
das
xchg
icebp
jmp
adc
sahf
es
addl
in
mov
pop
dec
jmp
mov
push
dec
jmp
inc
call
subb
dec
and
push
mov
cmpl
cmp
cltd
repnz
das
jp
cs
stos
dec
cmc
mov
inc
pushf
push
mov
lcall
pop
call
test
je
test
jb
imul
imul
imul
jmp
and
mov
mov
or
mov
in
fs
rorl
call
sub
sub
nop
scas
ljmp
lcall
pop
add
in
add
mov
sbb
pusha
push
mov
mov
lods
dec
or
mov
sbb
fsubr
cmp
ljmp
dec
out
nop
test
adcl
insl
pop
std
decl
es
dec
adc
decl
pop
push
les
lock
add
pushl
scas
mov
or
and
push
mov
and
icebp
sar
mov
enter
sti
ljmp
pop
pop
mov
or
test
ljmp
mov
or
jae
frstor
add
or
add
sub
mov
dec
adc
sbb
add
push
cmp
adc
xorb
push
clc
into
cmpb
dec
jl
or
lock
jecxz
adc
das
dec
verr
shr
imul
mov
adc
sbb
pop
xor
mov
pop
and
pop
test
xchg
gs
call
sarb
push
outsb
push
jno
adc
dec
xchg
das
mov
lret
jl
xor
inc
push
cmpsb
push
add
stc
mov
mov
ret
xchg
movsb
popa
add
movsb
stos
test
jo
or
fs
cmpsb
scas
mov
adc
mov
jle
stc
stos
and
incl
inc
cld
and
mov
mov
test
gs
outsb
enter
test
mov
inc
pop
xchg
or
xchg
cmp
movsl
daa
mov
jmp
add
jle
enter
adc
scas
dec
mov
mov
pop
pop
leave
stos
mov
aam
sbb
ret
scas
pop
sub
dec
outsb
jo
sbb
add
addr16
jecxz
call
movsb
mov
or
inc
clc
or
rorb
add
cmp
dec
mov
pop
push
int3
add
pop
loop
or
or
dec
outsb
push
lahf
dec
xchg
repnz
pop
cltd
sahf
adc
loope
adc
sbb
or
lcall
mov
not
ds
cmp
movsl
call
jg
cltd
mov
test
jp
faddp
stc
sbb
decl
sub
ret
sbb
fstl
cmp
push
adc
lds
in
mov
aad
push
mov
out
xor
imul
add
pop
mov
lea
jmp
pushl
pop
jge
mov
xchg
mov
lods
push
or
loop
pop
or
sub
sar
call
insl
jbe
mov
mov
push
push
dec
aad
xchg
mov
mov
rcll
push
inc
shrb
cmp
addb
call
ret
pcmpgtb
mov
test
cmp
ret
add
sub
mov
jo
stc
leave
jecxz
cmpsl
cwtl
pop
sbb
stc
call
aam
or
cmp
adc
dec
imul
aad
and
and
mov
je
je
in
cmp
lcall
jmp
sbb
int3
adcb
adc
cmpl
std
mov
cmp
mov
adc
push
dec
sub
adc
out
ja
lds
fmull
inc
enter
imull
movsb
clc
out
xchg
call
mov
dec
clc
fucomp
mov
sbb
pusha
xchg
and
add
out
ret
movsb
ljmp
jnp
add
imul
ljmp
decl
imul
adc
jne
sub
inc
add
lcall
and
push
out
sub
push
ret
push
popa
or
test
push
jb
push
jp
adc
mov
lods
addl
add
daa
or
pusha
test
or
add
jno
les
dec
hlt
and
dec
ljmp
or
iret
dec
les
xor
xor
or
loop
enter
or
jmp
dec
nop
push
pop
push
lods
jg
or
cld
ret
sub
sahf
ret
nop
mov
jmp
push
ljmp
pop
cld
int3
xchg
inc
dec
scas
and
adcl
inc
lods
and
jmp
push
xchg
inc
shll
and
bound
or
xchg
dec
cmpsl
adc
decl
xchg
and
cmpsb
adc
adc
adc
inc
test
or
pushf
jecxz
incl
aaa
cli
test
or
addr16
addl
push
push
leave
loopne
and
ljmp
xchg
mov
sbb
mov
inc
imul
or
jg
dec
jle
call
enter
out
xchg
mov
add
sub
ret
xchg
pop
mov
repnz
add
aam
rcrb
clc
fcomip
mov
sub
cs
lret
sbb
popf
add
xchg
popa
sbb
mov
jmp
sbb
out
sub
push
jp
loope
lcall
dec
roll
adc
mov
and
mov
adc
dec
decl
push
popa
push
mov
or
push
sbb
sub
xor
mov
mov
xor
cmpsl
jmp
mov
xor
jmp
dec
push
mov
hlt
cli
sub
dec
shll
or
loopne
repnz
sbb
fs
jb
js
call
mov
dec
inc
pop
inc
cmpsb
adc
bound
loop
sahf
loope
fsubrs
incb
mov
scas
and
decl
js
sub
lock
or
xor
faddl
push
pusha
lds
cmp
lods
or
pop
hlt
xor
mov
or
loopne
and
dec
inc
push
data16
cmp
jo
call
aam
fdivrs
mov
rorb
mov
or
sahf
arpl
leave
cmp
mov
test
ret
push
daa
push
mov
insb
jb
xchg
subb
test
dec
sbb
xchg
mov
xor
mov
mov
and
push
shrl
es
rolb
dec
cmp
add
cwtl
sub
sbb
sbb
mov
xor
dec
cmp
adc
stos
pushf
dec
shll
clc
pushl
cld
mov
and
imul
mov
sahf
and
data16
test
lcall
adcb
inc
cmp
add
mov
jbe
sub
mov
or
and
loop
or
mov
xchg
inc
add
jle
jp
ljmp
xor
gs
into
enter
xor
xor
orb
out
push
sub
adc
inc
xor
mov
jo
adc
mov
sub
test
popa
cmp
jg
and
xchg
mul
aam
cli
call
mov
inc
mov
pop
mov
fildll
jno
loop
sub
into
ljmp
roll
outsl
cmpsl
dec
popf
add
bound
ljmp
adc
sub
and
push
movsl
lods
es
in
mov
aaa
nop
icebp
aaa
insb
xchg
pop
dec
aaa
cwtl
mov
xchg
icebp
mov
int
xor
clc
inc
imul
lcall
shlb
add
sbb
fisttpll
loopne
in
loopne
mov
mov
push
mov
ds
je
std
scas
imul
jo
sbb
or
call
jno
aad
insb
shll
sti
fcomip
sbb
mov
sbb
xor
or
add
shlb
jg
pop
lds
mov
popf
bound
adc
dec
data16
add
loop
dec
sahf
add
testb
cld
incl
inc
or
inc
lret
insb
dec
sub
jg
sub
hlt
gs
loopne
mov
xor
mov
pop
call
addr16
jnp
push
mov
push
and
mov
enter
dec
xor
adc
dec
pusha
cmp
bound
jg
xchg
movsb
xchg
pop
insb
imul
daa
nop
test
hlt
inc
fcoml
int
or
outsb
jno
or
pop
fs
mov
sub
adc
rorb
pop
arpl
or
mov
in
lret
cli
mov
aaa
stos
orb
enter
outsb
cld
jg
push
aaa
inc
jb
sub
xchg
adc
mov
xchg
inc
xchg
in
ret
jg
rolb
test
sub
icebp
dec
aas
jb
out
sub
xchg
inc
sbb
subb
aam
cld
cmp
ljmp
cmpsb
cmp
lret
and
out
enter
xchg
add
out
push
std
jmp
jb
cwtl
push
scas
dec
div
fsubr
jmp
roll
pop
hlt
push
pop
dec
xchg
outsb
xor
adc
and
popa
adc
sarl
cli
incl
inc
and
dec
into
arpl
rol
minps
lods
ret
add
cmp
incb
roll
mov
and
stos
ret
inc
push
xchg
inc
mov
or
js
mov
adc
je
insb
mov
addr16
push
ljmp
push
std
lock
fmull
mov
push
jecxz
div
out
out
int3
mov
adc
inc
or
das
hlt
hlt
lcall
and
xor
xor
push
sub
push
insl
mov
loop
decl
push
mov
pop
sub
stos
fcomip
movsb
in
bound
test
test
test
xor
jg
pushl
pop
shr
pop
ljmp
aam
pusha
lock
in
adc
nop
mov
ljmp
dec
adc
lcall
sbb
mov
aaa
bound
fidivl
or
hlt
addl
mov
cmp
mov
mov
leave
ffree
push
mov
call
cmp
fdivrp
fcom
push
es
jne
daa
test
push
cmp
jne
out
int
or
sub
xchg
mov
add
lcall
adc
mov
dec
inc
es
test
pop
mov
ret
dec
lods
loopne
pushl
pop
adcl
push
and
fwait
pop
inc
ret
stc
sahf
shlb
and
ljmp
sub
jl
daa
jno
jle
je
fcomps
or
mov
in
and
push
mov
and
daa
fsubs
add
cmpsb
icebp
call
mov
sub
mov
enter
ror
or
add
push
in
sub
push
jns
dec
xchg
call
mov
adc
push
rcrb
sar
lcall
test
cld
push
pop
cld
add
sub
cld
mov
outsl
sub
fs
push
jno
sarb
pop
clc
xchg
or
or
pushl
pop
ds
push
xchg
inc
mov
test
add
pop
clc
stos
pop
dec
stos
rcr
cmpsb
stos
or
scas
push
push
cli
mov
sahf
jbe
xor
or
mov
lods
mov
notl
dec
call
and
cmp
data16
inc
mov
cmp
cwtl
aad
xchg
sar
rcll
lods
pop
pop
scas
fmull
outsb
mov
call
ss
cwtl
cmpsb
aas
mov
add
fstl
xchg
xchg
xchg
xor
fdivrl
fsubrl
nop
es
inc
daa
std
and
xchg
mov
stc
stos
or
and
ljmp
imul
dec
and
fdivrl
daa
cmc
mov
outsl
decl
ficomps
sahf
pop
push
and
cmp
test
call
push
fisttps
adcl
das
clc
call
nop
test
add
or
jp
jbe
inc
inc
or
push
xor
jmp
xor
sbb
sub
movsb
insl
push
hlt
repnz
int
sti
fmuls
outsl
pop
aam
rclb
movsb
inc
test
mov
cmpsb
clc
lods
andl
lea
notl
jmp
inc
stos
cmp
cmc
lret
in
pop
add
incl
icebp
mov
xor
pop
hlt
push
or
mov
das
aaa
or
popf
ds
pop
xchg
jb
xor
fcomip
mov
scas
mov
test
out
inc
jp
jne
rcr
enter
push
mov
decb
stc
jo
xor
xchg
jmp
aaa
add
push
xor
push
push
add
cmp
orb
pop
pop
fldenv
push
inc
incl
xor
mov
inc
xchg
add
stos
mov
dec
jecxz
mov
or
fmuls
mov
mov
cmp
ja
push
sbb
cmp
mov
add
mov
shll
sbb
push
adc
and
das
std
aam
fst
and
fs
imul
inc
or
mov
or
gs
sbb
jne
cltd
orw
stos
push
fcoml
add
pushl
or
sub
sbb
mov
cltd
adc
int3
enter
cs
sbb
xor
fmuls
mov
jle
cmpsl
mov
mov
pusha
clc
jmp
out
test
popl
xor
out
inc
scas
adc
inc
push
pop
arpl
in
cmp
outsl
pop
loop
lods
jle
push
hlt
inc
les
xor
repnz
sbb
or
rcll
mov
jecxz
ljmp
cmp
movsb
rcr
jp
decl
mov
mov
es
arpl
aam
out
aam
in
cmpb
movsl
pop
pop
lcall
scas
stc
clc
dec
sbb
lcall
nop
test
lret
rcll
imul
pop
sbb
cmp
mov
dec
xchg
cmp
mov
mov
mov
mov
xchg
xchg
cmpsb
jne
or
pushl
dec
sbb
std
mov
fistpll
mov
jp
movb
jg
or
out
decb
and
inc
or
aas
pop
in
push
movsb
icebp
stc
repz
decl
adc
icebp
xchg
lock
filds
dec
fs
add
cmp
inc
or
dec
inc
cmpsl
xor
lock
lock
add
lods
sti
mov
push
pop
add
lods
inc
xor
and
mov
cmp
push
adc
pushl
push
pushf
rclb
xor
into
mov
jmp
call
pop
add
inc
pop
push
aad
mov
xor
dec
pop
loop
push
outsl
adc
jno
ljmp
aas
movsl
loopne
mov
sahf
fistpll
aad
or
ror
std
sbb
push
in
cli
jno
stc
ret
and
or
and
pushl
adc
adc
in
inc
ret
xchg
adc
xchg
inc
inc
mov
pusha
decl
and
xchg
loop
fs
das
pusha
mov
in
pop
push
dec
or
xor
xchg
pop
addr16
leave
adc
sub
mov
inc
sar
mov
pusha
nop
xchg
iret
or
inc
mov
dec
add
pushl
rclb
jbe
mov
pop
mov
in
mov
imul
les
mov
loope
pop
mov
popa
push
xchg
loope
lcall
in
ret
nop
and
cmpsb
arpl
loope
cs
inc
dec
push
out
decl
and
inc
cmpsl
inc
in
sub
push
rcl
insb
sbb
mov
jns
das
testb
lahf
outsb
jl
outsl
push
jp
rol
aad
outsb
in
mov
incl
push
jl
in
pop
mov
mov
and
dec
or
xlat
push
enter
aaa
xchg
int3
cmp
insb
mov
ud0
and
cwtl
xor
in
adc
out
pop
cmp
sub
lahf
jle
into
icebp
mov
sarb
cwtl
dec
fildll
dec
fistpl
fildll
xchg
push
add
adc
popa
inc
sbb
cs
inc
xchg
mov
mov
mov
test
pusha
adc
xchg
push
call
fisubl
or
add
push
pop
adc
int
test
add
test
dec
aaa
pop
push
and
dec
push
pop
fwait
jns
adc
popf
sbb
xor
imul
jl
jbe
lcall
add
xchg
mov
sub
fcompl
jg
fcomip
jns
mov
inc
adc
incl
add
push
and
inc
adc
ljmp
push
pop
nop
inc
cmpb
daa
inc
push
inc
movsl
adc
jns
cmpsb
push
adc
decl
hlt
hlt
adc
std
jo
aas
in
hlt
adc
movsl
mov
jecxz
or
dec
mov
lret
mov
xor
les
xor
pop
xchg
dec
and
adc
mov
test
sbbb
pop
insb
cmpsb
lds
rolb
push
or
add
clc
mov
lret
cmc
lods
pop
pop
jmp
ljmp
lcall
push
insb
jge
pop
scas
decl
cwtl
bound
nop
std
pop
push
imul
decl
test
cmc
pop
push
out
pop
mov
jp
xchg
fldenv
jbe
popa
xchg
jmp
push
cwtl
popa
jne
rcll
aad
fsubl
imul
jmp
xchg
inc
inc
sub
lods
push
xor
pushl
je
mov
xorl
and
mov
mov
jno
iret
nop
jmp
pop
xchg
scas
jmp
cmp
xchg
dec
cld
ds
adc
je
std
xor
test
icebp
ljmp
clc
cmpsb
pop
push
push
sbb
loope
and
loope
insl
xchg
inc
mov
bound
cld
jg
shl
lea
or
adc
jg
xchg
cmc
cmp
mov
and
data16
pinsrw
std
mov
ss
out
aas
or
sbb
jg
ficompl
dec
aam
movsb
dec
mov
mov
add
sub
cld
stos
push
xor
or
jns
adc
xchg
add
es
decl
fstl
shrb
or
lods
push
sbb
fdivl
fstps
add
cmpsl
fwait
pushl
lret
sti
aam
lods
jp
pop
sbb
enter
dec
in
shl
pushl
xor
inc
inc
pop
pusha
add
inc
sbb
adc
sub
loop
and
dec
cs
gs
pop
inc
ds
push
pushf
push
fiaddl
cmp
pop
lock
hlt
sub
arpl
push
jnp
sbb
mov
sbb
imul
xor
cmp
pop
ljmp
es
dec
inc
cmpb
loopne
pop
cmp
jae
mov
jb
xchg
lcall
cmp
mov
inc
or
ljmp
ret
inc
enter
sti
jb
dec
or
fs
cmp
jb
repz
sub
call
cmp
mov
in
inc
adc
data16
fwait
aaa
xchg
rorl
sub
push
jge
sti
orb
clc
incl
adc
adc
mov
pop
add
or
fisubs
cmp
decl
pusha
dec
cmp
or
mov
cmp
pop
jo
std
ljmp
pop
xor
and
loop
out
jl
cmp
int3
mov
jmp
push
daa
mov
dec
dec
mov
pusha
inc
fcoms
daa
loope
pop
cmp
decl
lods
dec
hlt
mov
mov
sbb
imull
lcall
fldcw
icebp
inc
pop
cli
xlat
push
popf
adc
add
loopne
mov
decl
cmp
inc
shll
or
repnz
popa
add
pop
mov
xlat
mov
adc
shlb
sbb
mov
insb
adc
mov
xchg
sbb
push
loope
sub
and
arpl
cmpsb
les
pushl
pop
dec
shll
cmp
xor
xchg
push
xor
inc
dec
lea
ret
test
lcall
fs
push
xchg
cwtl
adc
xchg
mov
ja
xchg
clc
dec
addr16
mov
scas
push
cmpsb
movsl
jne
jecxz
shlb
inc
sbb
or
lock
enter
loop
pushl
mov
and
or
or
daa
add
sub
das
cli
mov
add
lds
and
mov
add
enter
filds
mov
mov
ja
outsl
mov
lcall
enter
inc
dec
dec
pushf
mov
mov
mov
sbbb
lods
call
fildll
mov
mov
lret
dec
mov
sub
notb
mov
xchg
inc
mov
cli
in
outsb
js
shrl
mov
xchg
push
mov
jmp
pop
stc
mov
loopne
and
pop
ds
adc
sub
lret
xchg
mov
sub
out
jp
data16
xchg
es
xor
mov
scas
and
loope
push
add
jg
inc
push
int3
out
je
lea
dec
or
sub
fstpt
mov
mov
pop
cmp
lcall
cmp
pop
dec
inc
pop
addr16
pop
xchg
sub
data16
decl
pop
insb
das
pop
shlb
ljmp
adc
pushf
out
dec
cmp
cmp
cmc
push
std
das
mov
xchg
sub
mov
inc
xor
das
sub
lcall
fwait
mov
pop
fwait
ljmp
mov
or
call
icebp
or
mov
xchg
mov
lock
popf
push
sbb
pop
stos
or
decl
sub
jle
sbb
jne
add
jle
fwait
xchg
incl
leave
mov
pushl
add
cmp
or
jne
push
and
or
push
or
sub
mov
movd
jle
dec
pushl
and
push
decl
scas
fstpl
in
aaa
mov
ljmp
stos
xchg
and
add
mov
lret
jl
sub
jle
add
sbbl
cmp
out
dec
inc
fidivl
ds
ljmp
mov
dec
mov
xchg
mov
xor
mov
mov
mov
cld
in
and
xor
sar
ljmp
les
or
cltd
cltd
adc
add
ret
cwtl
cmpsl
arpl
jae
mov
and
std
xchg
es
push
mov
popa
cmp
mov
jl
test
jmp
lcall
cs
xor
outsl
push
sbb
dec
adc
sbb
cmc
jmp
sub
xchg
enter
add
movsb
decl
push
sub
xchg
add
xor
or
cmpsb
ss
push
mov
sarb
dec
cmp
xchg
clc
flds
icebp
mov
insl
ljmp
es
fisttps
or
push
jae
dec
iret
cld
out
aaa
call
cmpsl
xchg
cmpsb
jno
insl
aad
pop
repnz
cs
in
mov
push
icebp
fwait
cmp
cmpsb
js
outsb
jmp
and
mov
lcall
sti
xor
aam
scas
cmp
cld
cmc
xor
xor
mov
and
mov
sbb
call
call
sub
mov
adc
ja
sub
adc
mov
inc
adc
bound
add
push
xor
jb
stos
push
cld
sbb
mulb
ret
sbb
mov
das
inc
es
in
mov
call
inc
cmp
push
icebp
inc
jae
inc
inc
dec
mov
pop
test
jo
fs
pop
pop
out
je
decl
add
jecxz
xchg
gs
and
shll
clc
gs
pop
adc
test
out
loopne
pushl
arpl
and
and
jl
aaa
es
orb
push
pop
sbb
jmp
add
inc
cmp
jle
ja
jb
xchg
inc
jnp
jno
rol
cmp
in
movsl
pop
enter
call
fists
fwait
and
scas
aaa
dec
jecxz
xchg
dec
fidivl
and
aad
fiadds
aas
mov
jne
xchg
dec
pushf
xchg
imul
outsb
testl
push
ljmp
jge
daa
mov
xchg
test
pop
shlb
pop
fnstenv
and
in
inc
jge
xlat
pop
fisttpll
dec
fdivrp
incl
dec
out
xlat
jb
pop
sarl
push
push
adc
loop
decl
outsl
adc
call
das
cmp
inc
clc
out
push
push
and
mov
xor
jno
cmp
sbb
push
decl
inc
sub
inc
or
sbb
jo
cwtl
adcl
cmp
inc
fs
jecxz
jl
enter
push
pop
or
pop
xor
movsb
jae
arpl
mov
data16
push
aas
xchg
add
mov
call
add
cmpl
pop
loopne
das
inc
sbb
icebp
popa
jle
and
jbe
adc
mov
ja
arpl
pop
clc
jbe
bound
add
xchg
popa
mov
aam
dec
rcl
pop
test
cmp
je
add
pop
mov
mov
call
pop
mov
jnp
loope
mov
xchg
mov
dec
in
outsb
ja
jnp
call
std
xchg
addr16
mov
pop
add
lret
movsl
adc
push
mov
xchg
inc
test
dec
orb
mov
xorb
pop
mov
xchg
sub
fcompl
adc
mov
outsl
clc
pushl
xchg
mov
dec
sahf
and
mov
sub
pushl
push
mov
push
loope
adc
xchg
jle
mov
cmpsb
mov
inc
add
xor
clc
lcall
sbb
sub
bound
xchg
sbb
lcall
xchg
add
pop
jbe
sbb
sbb
or
ljmp
cmpl
das
inc
xchg
fs
xor
addr16
cwtl
jo
fcmovnu
cmc
dec
jne
jo
add
test
nop
sbb
and
inc
push
xchg
fs
pop
sbb
xchg
and
sub
filds
sbb
rcrb
push
test
inc
push
popa
xchg
push
inc
pop
ja
fildl
add
mov
data16
push
jmp
jmp
jbe
add
add
outsl
shll
and
stos
js
cmp
jl
sub
and
fmuls
push
add
jmp
js
push
jge
out
xor
decl
out
lahf
mov
mov
mov
data16
adcb
push
repz
lret
pop
insb
int3
xchg
movsb
int3
mov
lret
mov
mov
pop
orb
divb
in
ljmp
movsb
sub
in
cmp
adc
push
decl
mov
pop
mov
sub
popf
add
mov
popf
jne
arpl
jmp
mov
and
inc
adc
shrl
add
mov
xchg
outsl
incl
jbe
sbb
pop
data16
sbb
mov
sbb
mov
cmpb
xor
out
es
test
xchg
addr16
adc
xor
fwait
pusha
inc
dec
xor
aas
test
xchg
push
cli
jb
daa
or
popa
or
fildl
leave
clc
add
das
jne
xchg
xor
add
mov
xchg
cmp
flds
dec
push
fdivl
sbb
lea
mov
adc
adc
sub
and
xchg
and
mov
clc
xchg
mov
xchg
and
xchg
adc
stos
xchg
sbb
testl
dec
insb
pop
aas
lcall
pop
int
jbe
and
xchg
xor
pop
push
xchg
les
jnp
data16
arpl
es
insb
xchg
daa
inc
std
jmp
jge
cmpsb
movsl
push
lret
dec
xor
jnp,pt
mov
mov
aaa
mov
ficomps
ret
push
sub
cltd
cmp
popf
loop
movsl
add
test
push
cmp
loop
cli
xor
fwait
aad
adc
push
outsl
cli
mov
sub
add
outsl
or
jmp
fwait
sbb
lea
pop
pop
ret
jg
pop
notl
push
cmp
sub
ret
pop
pushf
xor
jno
cmp
xor
lret
subl
aaa
xchg
fs
jmp
mov
sahf
stos
arpl
aad
ds
adc
push
mov
xor
xor
das
pop
mov
cmp
je
test
mov
data16
jb
dec
cmp
pushl
xchg
mov
xor
xchg
xor
dec
mov
jg
ss
test
lock
adc
xchg
push
aaa
xor
dec
daa
jb
mov
mov
xchg
sub
jge
pop
and
push
and
dec
fdivl
cld
cmp
dec
cmpsl
ret
in
sub
notl
ss
xor
js
js
jnp
outsb
fwait
mov
dec
mov
dec
pop
insb
lods
fdivrs
sbb
add
test
sbb
movsl
faddp
movsb
push
sub
mov
mov
cmpsl
pop
sub
mov
adc
pushl
dec
inc
sub
jb
imul
shrb
mov
cmp
fcomip
cmp
addr16
stc
cltd
inc
xchg
mov
bound
mov
cs
fimull
sbb
nop
or
push
test
xchg
test
fisubrl
cmp
fidivl
push
push
and
adc
testb
add
ljmp
call
out
jne
adc
sbb
jne
popa
jb
cmc
lcall
arpl
notl
ds
stos
adc
xor
stc
xor
inc
es
lcall
mov
jne
xor
popa
inc
jmp
das
test
and
aaa
adc
add
jne
push
popa
cld
pop
loop
ja
mov
pop
shlb
repnz
sar
decl
jbe
shll
es
and
idiv
jmp
mov
loopne
and
push
add
popl
push
insb
mov
cmpsl
rcl
mov
call
imul
sbb
xchg
push
mov
sarb
pusha
jg
sub
imul
cs
aam
insb
mov
dec
ljmp
movsb
push
or
xchg
lahf
insb
jmp
pop
ds
inc
jno
aad
call
mov
hlt
cltd
sahf
leave
pop
fstps
lret
mov
cwtl
cmp
sbb
sub
arpl
add
jl
push
das
ret
loope
scas
test
hlt
or
pushl
sbb
push
push
outsl
jecxz
push
jo
jno
jne
inc
mov
outsl
sub
outsb
int3
mov
jno
scas
jp
std
decl
xchg
push
cli
popa
gs
xor
arpl
jae
sbb
andl
test
decl
insl
sahf
xrelease
int3
nop
pop
bound
mov
add
das
push
gs
inc
xor
decl
jb
out
dec
add
jo
sbb
push
xor
das
adc
push
jg
aaa
inc
or
das
bound
jg
lods
sbb
pop
pop
dec
push
call
jae
dec
jo
jbe
pusha
add
es
and
jg
mov
jo
mov
fcoms
mov
and
mov
mov
cmp
dec
imul
push
fcmovu
test
dec
ljmp
jge
negl
std
incl
cmp
cmpl
cmp
or
pushf
jbe
ljmp
xchg
mov
popa
cltd
shlb
and
inc
fwait
shlb
mov
mov
iret
lahf
jns
ret
aad
pop
add
ret
pop
loope
filds
out
in
mov
adc
mov
scas
cmc
mov
decl
dec
ss
addl
rcr
pusha
pop
ljmp
outsl
xchg
ljmp
jg
pushl
icebp
sbb
pop
xlat
jbe
push
daa
jbe
das
push
subl
mov
sub
mov
out
add
or
or
sbb
stos
rcll
jmp
push
aaa
or
jae
add
sbb
lahf
popl
sub
ljmp
shlb
pop
popa
sub
ds
and
adc
popa
ds
out
ss
mov
addr16
jl
ret
xlat
or
test
scas
push
and
inc
push
cmp
mov
or
incl
sti
leave
or
push
adc
push
dec
jbe
add
cmp
adc
push
iret
pop
cltd
jp
decl
leave
adc
gs
test
lret
insb
dec
loop
xchg
sub
dec
shl
pop
fcom
xchg
aad
pop
inc
inc
call
mov
xchg
cmp
repnz
dec
sbb
out
mov
fisttpl
dec
fcomip
shl
dec
sbb
ss
dec
sub
mov
shlb
mov
sahf
pushl
rorl
cmp
lahf
fs
add
cld
inc
insl
dec
mov
lcall
jmp
sarl
es
scas
jns
inc
pusha
jo,pn
and
xchg
push
adc
into
loope
incl
shlb
mov
fdivr
mov
enter
mov
arpl
popf
push
adc
arpl
addr16
js
push
clc
stc
mov
std
mov
add
mov
cwtl
pushf
jne
or
cmpl
loope
mov
xchg
push
and
fisttps
jp
loope
adc
in
jmp
addl
pushl
leave
outsl
jge
xor
sbb
ljmp
in
mov
std
push
push
clc
dec
test
pop
lock
jb
repz
lret
cmp
lret
push
loopne
outsl
mov
add
ja
mov
xchg
inc
push
loopne
and
incl
rorb
xchg
les
decb
cmp
fdivl
inc
sub
sahf
insl
rclb
jmp
inc
push
mov
in
adc
xor
mov
cmp
xor
xor
lcall
push
dec
dec
sub
cmp
in
mov
xchg
xor
jmp
and
lcall
adc
adc
fidivs
jl
xorb
adc
cltd
dec
rol
data16
add
mov
mov
add
addb
inc
out
pop
inc
in
add
sub
add
lcall
ret
or
inc
jo
mov
ljmp
xor
das
sbb
bound
ja
scas
mov
lods
or
outsl
sbb
bound
cs
lock
inc
js
ja
es
ss
cli
ljmp
jne
jo
or
sbb
addr16
sbb
outsl
mov
int
aaa
cld
dec
inc
cmc
dec
je
cmpsb
jge
inc
sub
push
iret
call
insl
sub
decl
adc
dec
push
orl
cwtl
inc
inc
mov
jg
mov
inc
mov
in
fs
push
pop
sub
push
cmpsb
dec
test
decl
gs
lods
imul
enter
es
lea
xor
insb
out
jmp
and
mov
test
fwait
jecxz
mov
push
aam
mov
dec
adc
adc
ret
xchg
gs
mov
inc
mov
lock
jle
insl
fnstenv
pop
and
fsubl
mov
and
in
xorb
stos
add
fsubr
ror
xchg
xchg
lcall
cltd
xor
cmpsb
mov
fidivs
cld
mov
in
push
pop
sub
aad
mov
push
sbb
scas
xchg
cvtps2pi
lds
nop
and
fsubp
notl
or
outsl
rorb
pop
aaa
ds
inc
mov
or
cld
lods
faddp
lods
dec
mov
add
adc
lds
loopne
dec
fisttps
std
sbb
stos
iret
mov
std
mov
xchg
add
sub
and
call
dec
inc
test
or
cmp
push
mov
std
sub
inc
cmp
pop
sub
ret
shlb
xor
lds
lds
test
push
sub
push
or
push
xor
add
jg
cli
mov
dec
mov
and
les
pop
mov
inc
incl
outsl
call
sub
ret
cmp
test
inc
or
mov
ljmp
and
cmp
mov
jo
test
and
das
jle
adc
sbb
inc
es
jmp
add
jo
repz
insb
cld
cmpsl
lcall
lcall
jmp
sub
add
xor
push
add
pushl
cli
inc
dec
jae
xor
or
pop
in
bswap
outsb
in
pushl
mov
cmp
mov
sub
push
mov
lcall
inc
repnz
lods
scas
repnz
mov
ret
lods
mov
icebp
stos
adc
les
js
pop
or
dec
in
mov
shlb
movsl
dec
jg
dec
cld
pop
hlt
aam
aaa
ffreep
divb
scas
ljmp
mov
jb
js,pn
dec
pusha
repnz
sub
mov
loop
adc
inc
jmp
cmp
mov
ret
int3
aam
lgs
fbld
loope
stc
sub
rol
cli
jbe
scas
addr16
jge
iret
inc
or
pop
call
or
pusha
or
xor
dec
rcr
sahf
jecxz
adc
adc
ljmp
rol
call
and
xchg
aam
and
push
into
push
add
cmp
push
xor
mov
xchg
inc
shlb
mov
pop
ljmp
sub
int
pop
insb
jmp
mov
mov
sub
stos
mov
adc
std
lcall
mov
adc
iret
shll
outsb
daa
lds
in
mov
shrl
jae
decl
fdivl
pop
pop
pushf
or
inc
pop
in
lret
rcl
jg
sub
fidivrl
adc
push
mov
cmc
stc
in
outsl
clc
bound
call
add
int
push
loopne
add
add
mov
jbe
xor
fdivs
out
cli
jmp
aas
loope
xlat
or
jb
lret
lahf
in
jmp
fnstcw
ljmp
mov
call
sbb
xor
xchg
add
inc
xor
sarb
std
lret
pusha
mov
lcall
imul
pushl
sarl
sub
mov
pop
push
add
and
and
adc
and
ljmp
ret
orl
or
dec
ljmp
inc
push
into
clc
jmp
jge
and
cwtl
xchg
jbe
fcompl
xchg
push
cmp
call
sbb
xor
mov
rcl
ljmp
dec
cmp
inc
cli
jmp
roll
dec
sbb
push
fmuls
mov
inc
jb
mov
addb
rcr
js
dec
and
decl
lahf
movsb
cmpsl
xor
push
mov
or
rcll
loopne
xlat
dec
adc
jmp
xorb
fldcw
mov
sub
cmp
lock
xchg
xchg
std
mov
lcall
pop
or
lcall
adc
jge
add
push
jne
push
rol
movsb
dec
pop
mov
add
out
jbe
mov
dec
lods
clc
rolb
pop
in
dec
push
js
stos
stos
add
out
rcrb
xchg
pop
and
mov
sub
test
mov
aam
push
pushl
mov
gs
mov
push
sub
bound
out
test
fwait
jecxz
dec
xor
pushl
aam
popa
hlt
adcb
data16
mov
sarl
push
pop
add
ja
cmpsl
pop
fwait
icebp
or
sbb
xchg
call
xchg
std
cwtl
push
xor
fwait
cmpsb
mov
dec
int3
inc
xchg
sarb
mov
das
or
repnz
inc
popf
mov
jecxz
jb
xor
loope
mov
xchg
sub
xor
adc
incl
xchg
add
in
bound
xchg
mov
ret
cmp
xlat
add
adc
jmp
rcrb
nop
and
inc
jmp
push
jmp
mov
mov
inc
dec
pop
inc
movsb
push
rclb
or
stos
or
cli
sbb
push
pop
pop
inc
push
daa
incl
mov
test
xor
fadd
test
sahf
aam
loope
int3
sbb
outsb
jae
mov
sub
inc
test
lods
lcall
movsl
daa
xchg
call
xchg
sub
add
imul
mov
dec
xchg
jb
mov
pop
pushl
or
xchg
sub
dec
lret
pop
pop
push
or
adc
icebp
jno
jl
jno
pop
ds
outsl
push
sub
fisubrs
jle
loope
ljmp
jge
clc
sub
jnp
jb
iret
and
adc
sbb
or
dec
bound
jae
jmp
adc
pop
ljmp
mov
add
pushl
pop
dec
ret
iret
shrb
inc
xor
or
cmp
xchg
jmp
or
jnp
je
or
out
mull
loop
or
dec
cmp
into
fs
add
jb
stos
inc
xlat
inc
in
lds
and
push
and
and
mov
movb
or
mov
js
add
or
adc
stos
sbbl
adc
mov
dec
nop
rcll
mov
aam
mov
addb
in
xlat
adc
push
mov
mov
cmp
lcall
fstp
push
sarb
xchg
mov
fwait
in
mov
insl
jo
dec
lods
fildll
xchg
add
cmc
pop
jae
incl
sbb
test
sub
enter
call
fs
enter
addr16
ljmp
cmp
sbb
or
aam
pushf
cltd
andb
push
or
sbb
call
and
adc
push
jns
push
or
neg
mov
push
fcoml
push
rcl
je
enter
jg
negb
xor
push
negl
shll
or
dec
adc
jmp
inc
pop
jmp
or
popf
push
xchg
pop
stos
movl
pushf
mov
lcall
out
das
push
xor
aad
mov
gs
jae
mov
lock
mov
das
lcall
xchg
out
or
pop
push
push
test
jg
jmp
loop
mov
leave
call
decl
mov
adc
inc
call
sub
mov
js
xchg
cs
add
ret
mov
incl
add
mulb
xor
in
add
sahf
cmp
lds
jg
lods
mov
movb
aam
inc
adc
sarb
fidivs
decl
or
and
sbb
mov
mov
in
lcall
inc
sub
inc
xorb
cmp
sbb
add
or
mov
je
or
fs
push
outsl
pop
pop
pop
pop
test
nop
lock
cmp
fdivrl
push
xchg
and
cli
mov
outsb
push
xchg
bound
in
dec
out
pop
cwtl
inc
mov
lods
scas
stc
lods
pop
push
in
test
mov
xor
cmpsl
fcomip
cmp
into
cmp
mov
or
inc
cwtl
xorb
into
popa
lret
mov
mov
test
jns
mov
cwtl
sub
push
xchg
pop
sub
ljmp
add
xor
mov
cltd
jp
or
or
std
push
jbe
cltd
lahf
mov
pop
orb
dec
cmpsb
jnp
jl
cmp
and
cmpsl
icebp
stos
aaa
stos
js
iret
cmp
or
fildll
enter
call
jecxz
and
cmp
cmp
ljmp
mov
xor
and
mov
test
inc
jp
enter
rcrl
das
leave
xor
cmp
jecxz
arpl
decl
inc
imul
into
adcb
mov
fcomps
mov
incl
mov
sub
ret
pushf
pop
inc
xor
sub
aam
ljmp
fwait
adc
rcll
enter
adc
and
addr16
pop
dec
test
or
adc
movsl
dec
dec
cmp
test
pop
cmp
dec
pushf
rolb
fnstcw
jp
les
lds
vmovupd
ljmp
fdiv
mov
into
xchg
jno
movsb
clc
add
and
mov
or
lds
mov
sbb
mov
push
adc
orb
xor
out
cli
jg
addr16
wrmsr
cmc
dec
scas
push
inc
loopne
imul
nop
sbbl
mov
mov
add
mov
cwtl
pushl
pop
sbb
mov
or
adc
add
push
inc
test
mov
and
inc
sbb
sub
sbb
test
mov
in
stos
mov
roll
jge
pop
lahf
rcll
inc
push
jmp
xor
in
and
sub
call
loopne
icebp
sub
mov
cwtl
xlat
push
popl
adc
fbld
or
das
mov
lahf
push
adc
xchg
call
xor
mov
js
scas
fsts
int3
stc
stos
incl
adc
xor
adc
cltd
xchg
xlat
imul
lds
sbb
lods
inc
loopne
cmp
mov
push
jb
mov
mov
stos
or
or
push
mov
push
pop
sbb
mov
jo
pop
xor
popa
or
movsl
adc
xor
dec
pop
add
pushl
lret
jl
fwait
sbb
xchg
cmp
sbb
mov
test
int3
xor
pop
pop
int
adc
mov
xorb
push
mov
cwtl
shrb
xor
mov
fwait
sar
pusha
ljmp
lods
int
and
nop
icebp
mov
add
add
adc
faddp
xor
sbb
push
jb
mov
pop
ljmp
jb
xor
mov
pop
mov
andb
ljmp
test
xor
jl
or
jmp
jnp
jg
lcall
mov
ds
scas
ljmp
mov
dec
dec
xchg
pop
decl
subl
push
ds
sbb
int3
cmp
adc
and
leave
add
andl
dec
sti
sub
loopne
add
mov
orl
cmp
clc
call
es
ret
dec
and
jno
xchg
mov
xorl
push
in
pop
sub
ret
mov
cmp
add
stc
dec
mov
enter
lea
xchg
adc
xchg
xor
into
lret
adc
pop
pop
cmp
adc
lcall
xor
cmp
xchg
dec
jo
loope
lcall
xor
mov
mov
dec
cmpb
or
movsb
xor
ret
fst
mov
dec
or
mov
xchg
jo
mov
or
adc
or
shlb
adc
add
xor
push
dec
mov
call
sub
push
push
mov
push
aad
adc
rolb
sbb
dec
pushl
sub
scas
insl
ret
leave
movsb
aas
cmp
mov
mul
xor
stos
lods
ljmp
jmp
dec
push
mov
add
stc
orb
adc
imul
pushl
insb
or
insb
adc
popa
decl
punpcklbw
loope
negl
call
add
mov
insl
mov
xlat
jne
mov
fcomps
out
mov
clc
or
nop
aam
call
fsts
test
mov
sarb
fdivl
mov
pusha
pop
or
call
mov
pushf
cmp
add
sub
lea
mov
cmp
cmc
jns
daa
add
push
jmp
sbb
or
ljmp
int3
mov
xchg
add
push
sbb
pop
cmp
sub
push
mov
push
std
decl
movsb
mov
icebp
inc
push
mov
call
xor
call
xor
adc
and
sub
outsl
movsb
mov
push
leave
adc
lcall
ret
adc
ljmp
mov
aas
cmc
fisubrl
int
mov
movsb
adc
dec
xchg
cmp
and
lds
cmc
mov
ret
dec
fadd
inc
fmull
in
or
cli
jmp
pop
ds
mov
push
aad
xor
xor
fcomip
jg
pop
push
sub
push
sbb
js
imul
mov
and
xlat
ljmp
xor
insb
mov
jnp
push
rorb
bound
jbe
je,pt
pop
mov
outsl
in
sub
mov
jp
inc
jl
leave
push
pop
jp
mov
sbb
ja
jg
mov
sbb
mov
lock
mov
push
push
ret
pop
fdivr
inc
sub
push
lret
push
add
xchg
loop
mov
stos
xchg
imul
inc
movsl
or
loope
pop
into
lock
xor
or
mov
cmp
sti
add
add
and
push
jb
aam
dec
push
sahf
popa
lret
loope
movsb
fdivr
sbb
repz
mov
cmp
mov
pop
xchg
mov
jb
mov
adc
xor
call
sbb
fs
or
mov
inc
add
sahf
int
mov
inc
cli
pop
pop
cltd
sub
jl
mov
xor
aam
lcall
or
and
push
sbb
inc
int3
add
xchg
mov
inc
mov
mov
popa
inc
leave
rcr
mov
ret
cmp
or
jno
xor
dec
sbb
js
mov
inc
popf
into
mov
cmp
fadd
lods
or
gs
aam
popf
enter
adc
or
mov
lds
pop
push
sub
pop
or
add
sbb
ljmp
inc
pop
movl
push
cld
test
stos
repnz
or
aas
mov
push
repnz
imul
adc
test
or
sbb
insb
insl
or
enter
add
push
sahf
sub
inc
mov
cmc
or
jmp
xchg
aaa
in
pop
fs
mov
jbe
icebp
sub
jmp
mov
js
das
sar
ja
dec
xchg
fsubrs
insb
cmp
add
mov
push
je
inc
loop
pop
nop
insb
out
rorb
push
fstpl
scas
mov
mov
and
movsl
sub
ds
rorb
pop
and
stos
inc
add
dec
incl
push
shr
push
repnz
fists
adc
or
adc
dec
pushf
and
mov
jg
mov
xor
xorl
cmpsb
test
xor
lret
cmp
xchg
roll
ljmp
cmp
mov
int3
cltd
adc
adc
data16
xor
and
ret
sbb
xchg
xor
or
imul
pop
dec
loopne
repnz
int3
cmp
ljmp
jmp
dec
jne
dec
sub
or
pop
adc
pop
pop
inc
sahf
aad
dec
mov
push
pop
shlb
dec
les
cwtl
mov
scas
js
jne
xlat
ficomps
lock
push
gs
ljmp
mov
sbb
fisubs
je
mov
incl
loopne
in
push
in
in
mov
scas
lock
fimull
rol
xlat
hlt
xchg
xlat
and
jb
ds
std
mov
gs
jns
or
push
outsb
sahf
jmp
sbb
xchg
out
jg
out
xor
outsl
add
sbb
lahf
mov
mov
sub
sbb
mov
sbb
shl
lcall
movsb
mov
nop
pcmpeqd
enter
and
nop
out
push
stos
fnstenv
in
ds
call
enter
jb
cmp
adc
pop
cmp
inc
jecxz
jno
xor
push
inc
lods
fdivl
test
fcomip
push
xor
dec
inc
ret
stos
std
ret
enter
xchg
xchg
ret
sarl
jmp
xchg
pushf
inc
cmp
cmp
jecxz
jg
dec
dec
push
mov
orl
mov
imul
imul
inc
call
in
dec
leave
arpl
arpl
or
movsl
mov
mov
pushl
push
jge
xor
or
push
movsl
cmpl
jo
call
gs
inc
or
and
xchg
jecxz
rcr
int
lock
mov
lods
push
jp
fdivs
push
jno
mov
sbb
pop
inc
cmpsl
movsb
mov
incl
fstl
jns
aaa
jns
push
les
xor
gs
aas
push
out
xchg
test
push
push
jbe
dec
fucomip
mov
out
fbstp
cmpsb
and
xchg
or
xchg
out
cmpsb
test
bound
mov
push
rcrb
fidivs
adc
xor
sbb
sti
mov
xor
lcall
call
mov
mov
cmp
pushl
mov
sbb
xchg
leave
ret
inc
test
push
inc
lcall
xchg
lret
cmp
mov
cmp
sbb
xchg
adc
fldenv
and
mov
dec
sbb
pop
adc
shlb
mov
js
in
sbb
mov
pop
xor
xor
rcrl
push
adc
mov
ss
stos
scas
and
nop
add
add
pop
and
stc
andb
and
out
pushf
pop
inc
push
mov
call
adc
xor
inc
outsb
stc
push
movsl
push
xchg
lahf
fmull
mov
inc
or
pop
pop
or
outsl
es
gs
jae
xchg
jmp
push
ret
fs
out
xchg
movsl
mov
push
xlat
push
frstor
xor
mov
xor
add
scas
nop
add
rcrb
in
jae
push
gs
jl
sti
fs
mov
int
hlt
scas
mov
notl
das
fs
push
fdivrl
mov
push
jecxz
inc
ds
andb
jmp
and
cmp
cltd
cmpsb
bound
dec
addr16
mov
sarl
sti
jg
pop
nop
sbb
cmpsl
xor
insl
inc
mov
rolb
add
sbb
push
mov
stos
ret
adc
push
add
imul
ficomps
inc
xor
ror
jbe
mov
fwait
scas
dec
or
inc
imul
push
rcr
fwait
xor
icebp
xor
jo
imul
sbb
ljmp
add
and
test
iret
pop
jle
test
into
mov
xchg
incl
cli
pushf
push
addl
mov
ljmp
nop
pop
repnz
sub
xor
mov
xchg
rcll
dec
xor
mov
xchg
loop
popf
subb
push
lds
add
and
dec
xchg
daa
mov
sub
add
and
push
popa
cwtd
pushf
ss
sbb
call
jns
or
jbe
dec
add
pop
mov
ljmp
leave
dec
xchg
push
xchg
dec
mov
mov
cltd
push
dec
outsb
pop
stc
push
daa
dec
fwait
add
adc
aad
cmpsb
cmp
addl
das
bnd
adc
lret
pop
mov
dec
xchg
loopne
pop
les
push
lock
test
rolb
add
push
call
lcall
out
out
cld
inc
mov
rorl
cmpsb
xchg
pop
or
xor
push
addr16
cld
xor
inc
lock
fcomps
jp
gs
loopne,pn
xchg
cmp
pushl
pop
cmp
push
das
mov
in
fiaddl
out
or
adc
fbld
test
stos
push
and
mov
jmp
fbld
call
hlt
call
inc
ds
call
or
jmp
daa
xchg
and
pop
sahf
sbb
cli
idiv
lcall
mov
rclb
mov
mov
test
mov
mov
sub
call
mov
and
daa
lcall
mov
cld
mov
push
inc
inc
cmp
inc
sbb
loopne
adc
incl
mov
jne
fs
lcall
lret
add
push
scas
mov
in
inc
sub
bound
lcall
ficompl
mov
xchg
lcall
xchg
mov
inc
call
insb
cmp
test
adc
jle
or
or
inc
lcall
pushl
std
adc
test
sbb
popf
sub
add
mov
inc
dec
and
sbb
mov
sbb
pop
ds
sahf
push
or
mov
sarb
push
add
hlt
push
mov
and
incl
push
insl
sbb
lods
dec
xor
adc
jo
mov
add
notb
push
dec
pop
xchg
or
inc
orl
icebp
push
inc
out
and
cltd
jo
push
das
adcb
roll
popa
fsubrl
icebp
adc
jne
adc
xor
test
xchg
or
in
es
lcall
cmp
leave
sub
repnz
daa
push
push
clc
mov
xor
push
xor
dec
cwtl
mov
cli
enter
ds
add
mov
jo
adc
shrb
jl
cli
mov
adc
aam
imul
push
leave
out
cli
mov
add
pop
dec
loope
pop
jl
and
test
out
or
pop
push
cli
sub
in
pushf
fiadds
jae
fsts
xchg
mov
test
call
pusha
js
pusha
loop
cli
int
aam
popa
loope
fidivrl
or
lea
cli
dec
cli
mov
cmpsb
scas
loop
fwait
cli
fistpll
mov
add
movsb
daa
cs
insb
mov
cld
ja
inc
pop
jp
pop
daa
lods
sub
or
mov
push
xor
pushf
mov
mov
pop
and
mov
scas
pop
std
decl
sahf
cmovge
mov
xchg
movsb
pop
in
inc
inc
xchg
call
cmpsb
or
dec
jb
jg
pop
adc
jp
gs
lods
clc
pop
test
mov
orl
movsb
add
ret
sbb
loop
cld
bound
mov
lret
jp
push
xchg
xchg
cld
mov
inc
sub
movsb
add
xor
push
add
push
in
fnstcw
xchg
sbb
adcl
addl
push
pop
mov
sub
fsubr
data16
add
pop
push
andb
mov
mov
inc
sub
add
sar
outsl
add
add
push
xor
aam
movsl
inc
stos
push
sub
imul
xlat
stos
out
ss
or
out
call
add
pop
mov
incl
mov
mov
enter
xchg
push
decl
mov
mov
or
xor
gs
mov
push
aaa
add
dec
jp
adc
add
mov
and
in
aas
in
mov
cmp
fmull
cmp
adc
in
cmp
int
push
push
mov
jmp
jle
sti
cmp
cli
lods
inc
mov
ret
mov
mov
and
and
push
jne
cld
jg
shlb
fidivl
mov
sub
sub
in
push
cwtl
sub
and
stc
xchg
pusha
jg
inc
out
inc
jmp
adc
popf
dec
js
add
or
xor
imul
xchg
cmp
andb
cmp
xchg
movsb
adc
loopne
push
add
lahf
mov
ret
inc
lods
out
out
xor
sub
inc
inc
movsb
push
dec
ljmp
lock
push
add
mov
xor
dec
pushf
incl
js
incl
dec
sahf
movsb
sub
xor
push
jb
pushl
mov
mov
push
inc
cmp
inc
jne
pop
std
ljmp
adc
or
dec
dec
inc
test
mov
adc
ds
xchg
push
fs
lcall
repnz
cmovne
loope
push
mov
inc
push
add
add
rolb
mov
lea
cmp
popa
mov
cltd
xor
lret
add
push
adc
enter
dec
and
test
insb
jl
sub
rolb
decl
adc
shll
xlat
lock
dec
sar
xchg
and
adc
daa
cwtl
mov
cwtl
decl
lea
loop
fwait
or
mov
cmp
icebp
inc
out
popa
in
test
mov
scas
outsb
push
loopne
fucomip
inc
fdivr
lock
jno
mov
ljmp
and
stc
enter
adc
mov
incb
fwait
out
out
movb
cltd
dec
dec
xchg
push
adc
ja
out
clc
jmp
es
or
arpl
inc
rolb
mov
cli
mov
or
popf
sub
xchg
dec
xorb
inc
sbb
nop
sub
sub
sbb
sar
ljmp
sub
adc
sub
sbb
mov
aaa
int
xchg
insb
inc
pop
sbb
repz
mov
nop
das
jl
mov
and
into
loopne
cmp
sbb
imul
gs
jg
cmp
mov
mov
fildll
lret
mov
mov
xor
decl
jmp
xchg
sbb
xchg
cmp
push
shlb
pop
fstps
pop
cmp
ljmp
mov
or
aad
in
out
ficoms
dec
dec
into
ja
es
ds
adc
dec
lcall
mov
fwait
sub
jnp
ret
lcall
sarl
xchg
xor
push
std
ljmp
jl
mov
sub
cltd
outsb
ja
mov
test
jnp
insb
pushf
arpl
shrb
dec
fldt
mov
push
push
ss
jo
and
out
mov
or
inc
jg
cmp
add
mov
addl
mov
jmp
cmp
jnp
xor
xchg
and
jns
sub
push
int
cmpsb
or
les
inc
pop
dec
rcl
call
jmp
lods
hlt
push
mov
stos
notb
xor
ja
mov
xor
mov
adc
jg
cli
and
cmpsl
or
andl
lods
xor
icebp
test
inc
or
cltd
mov
push
in
push
pop
in
lret
or
rcl
ljmp
dec
dec
dec
enter
sahf
push
decl
fcmovbe
inc
or
dec
mov
test
out
push
adc
xor
cmp
incl
cmp
push
dec
xchg
push
mov
xchg
xor
call
test
ljmp
push
gs
mov
test
pushl
xchg
jns
lods
cmpsb
mov
incl
rcl
pop
mov
adc
add
in
aad
fdivrp
mov
cmp
sbb
sahf
je
cmp
test
mov
pop
int
sbbb
cmpsl
aam
sub
repz
xor
fcomip
call
mov
lahf
pop
ficomps
jg
cmpb
mov
enter
aam
dec
stos
fisubrs
arpl
adc
clc
idiv
call
shlb
jb
sbb
out
shlb
shlb
jge
adc
pushl
mov
fsubr
lods
mov
lods
fisubrs
enter
sbb
call
rcrl
jae
xchg
aas
lahf
mov
jmp
jmp
clc
mov
ljmp
cli
and
repnz
adcb
cmp
mov
mov
push
aas
clc
decl
inc
sbb
leave
sbb
xchg
test
push
pop
loopne
adc
xchg
fs
xchg
enter
ljmp
fcompl
dec
std
pushf
mov
test
insl
fmuls
shr
sbb
cmpsb
add
dec
lds
sar
clc
pop
push
movsl
cld
dec
push
mov
dec
dec
fsts
sbb
pop
lcall
sbb
lret
push
sub
push
dec
test
pushl
pop
roll
fadds
js
sbb
dec
jecxz
mov
xchg
int3
data16
push
push
sbb
sahf
and
pop
lcall
mov
sahf
sbb
xor
imul
lret
mov
lods
mov
push
shll
outsb
pop
ret
lods
outsb
mov
sbb
fisttps
mov
pop
stos
fldcw
sbb
and
icebp
ljmp
cmpsb
jns
fidivs
ljmp
xchg
xchg
aad
and
lock
stos
adc
fldcw
addb
jo
push
xor
sti
fbld
adc
cmp
jecxz
mov
jg
xor
lods
pop
mov
pop
xor
push
mov
ss
mov
mov
pop
sti
fxch
cmp
leave
jg
push
shrb
lock
in
dec
bound
les
jl
add
fldl
lret
cmova
mov
ljmp
adc
cwtl
inc
xor
mull
add
decl
dec
mov
jl
add
push
inc
clc
dec
xchg
and
add
stos
xor
lcall
sbb
rcrb
call
ret
or
adc
and
pop
orl
aad
sub
popa
push
sbb
xchg
adc
push
mov
dec
mov
dec
insb
gs
xchg
adc
xor
cmpsl
stc
pop
bound
mov
sbb
mov
lock
js
adc
xchg
mov
out
mov
mov
in
jg
iret
in
andl
jg
xorb
arpl
push
jecxz
pop
daa
lret
insb
sahf
ds
cmpsl
dec
or
jg
or
xchg
xchg
xor
pop
scas
and
pop
hlt
push
fisubrs
push
ficompl
icebp
fstps
push
iret
fdivrl
fcomip
cmp
inc
fnclex
test
jne
xor
call
fs
arpl
fwait
xor
es
cmpsb
push
lock
mov
cs
mov
jge
or
mov
mov
mov
pop
hlt
mov
xchg
mov
mov
outsb
in
mov
add
decl
lea
cli
pushf
push
dec
insl
lds
hlt
movsb
cmp
and
je
xchg
test
jbe,pt
inc
jb
add
imul
sahf
add
mov
xchg
clc
and
inc
aam
movsl
lret
pusha
std
push
test
incl
mov
ret
inc
push
inc
jnp
movsb
movsb
sbb
xchg
sbb
aad
pop
incl
dec
dec
lcall
movsl
aam
scas
fadds
cli
sub
push
jne
jp
fdivrs
dec
clc
jg
fldl
xchg
pop
push
push
jp
mov
pop
hlt
mov
movsl
adc
mov
les
into
lods
test
enter
call
add
or
pop
int3
fisubrs
and
push
loop
push
pop
lret
xor
movb
pushf
xor
lea
cmp
pop
loope
sbbl
inc
sbb
add
sbb
pop
fsubrl
sub
cltd
call
test
scas
test
stos
push
pop
sbbb
loope
add
lcall
and
je
cs
xor
inc
xor
or
mov
in
mov
adc
dec
insb
inc
push
pop
jge
test
inc
das
fcomip
fisubs
xchg
xchg
fildll
loopne
pop
loop
pop
cmp
enter
jmp
adc
cmp
add
icebp
ficomps
mov
rorl
js
dec
pop
sbb
or
in
or
icebp
call
std
push
insb
xcrypt-ctr
cmpsl
fmull
inc
sub
lea
inc
test
das
cli
out
cmc
in
and
les
or
fs
add
sbb
inc
inc
inc
inc
push
add
orl
cltd
sbb
incl
je
inc
or
push
mov
inc
mov
sbb
lock
mov
dec
movsb
jo
sbb
cmp
enter
lcall
xor
in
insl
pop
nop
mov
mov
or
imulb
adc
call
and
push
push
push
mov
xchg
inc
ficoml
aam
xchg
aam
lods
roll
push
sar
incl
dec
pop
add
jne
int
lcall
stos
lcall
add
data16
add
insl
push
cs
decl
pop
add
shll
mov
mov
movsl
push
arpl
std
test
scas
es
xor
arpl
sbb
jb
shrb
pop
call
imul
repnz
rcrb
arpl
outsb
or
sub
sub
jg
xchg
or
loop
rcrw
out
mov
shrb
add
fcomip
jge
mov
push
mov
stc
push
insl
cmp
adc
out
mov
aam
cli
push
cli
rolb
cmp
fcoms
mov
mov
into
pop
adc
pop
imul
outsb
clc
ljmp
nop
or
xchg
in
push
fidivrl
lock
inc
pop
push
ljmp
jmp
mov
sub
int
jp
stos
or
je
test
bound
cwtl
push
xchg
clc
push
and
inc
mov
push
nop
and
adc
dec
lods
testl
jmp
dec
sbb
or
incl
lods
cwtl
les
je
mov
movsb
sti
cmp
inc
and
inc
fsubl
lock
fnsave
add
push
outsb
nop
push
cltd
push
rcrb
nop
bswap
xchg
push
mov
inc
mov
and
cs
popf
dec
lock
dec
cmp
mov
push
mov
push
bound
push
hlt
sub
jg
decl
inc
loopne
jmp
sub
sub
mov
pop
out
fsts
push
pushf
stos
out
cmp
cmpsl
sahf
lods
add
fidivrl
xorl
push
int
sbb
bound
aas
cld
mov
in
cltd
sbb
ljmp
lcall
mov
fcmovb
pushl
vpsubusb
pushf
insl
es
lahf
idiv
call
or
out
dec
push
adc
das
mov
adc
adc
insb
incl
pop
outsl
xor
subl
repnz
pop
outsb
stos
decl
hlt
push
push
shll
jmp
push
imul
ljmp
int
nop
xor
ljmp
scas
mov
pop
sub
cli
call
push
aad
mov
test
les
out
adc
inc
cmpsb
pop
cmp
decl
adc
and
pop
cmp
pusha
xchg
imul
add
test
mov
and
es
inc
dec
adc
call
incl
pop
add
lods
pushf
jo
leave
inc
cmp
rorb
adc
mov
lahf
aam
out
mov
int
test
jbe
int
les
xor
dec
or
int
rcr
jmp
push
dec
icebp
push
lock
rolb
pop
jno
xchg
inc
cwtl
add
pop
int3
test
test
push
scas
fbld
data16
xchg
jmp
arpl
repnz
pop
sbb
fdivrl
pop
cmp
mov
jmp
jmp
mov
pop
sti
xor
aad
loop
dec
mov
add
sbb
add
mov
mov
pushf
dec
stos
fisubrs
and
std
movsl
pop
jbe
xor
mov
mov
adc
pop
sub
cmpsb
frndint
fldcw
ljmp
insb
dec
jb
cmpsb
pop
or
shrl
out
cli
adc
sbb
inc
or
shl
sbb
nop
sub
into
aaa
int
xor
mov
fisubrl
aaa
mov
stos
adc
inc
mov
inc
or
jo,pn
dec
incl
mov
add
inc
call
pushf
or
ljmp
fimuls
dec
leave
cmpl
mov
push
decl
lock
sub
sahf
jl
cmp
jae
pushaw
push
jo
jnp
leave
test
clc
ljmp
sbb
xchg
movsb
xchg
jb
push
pop
clc
jg
push
movsb
add
sti
sbb
or
into
in
in
xchg
in
jo
cmp
pop
inc
dec
cmp
setg
adc
dec
sbb
or
nop
mov
daa
mov
push
mov
adc
mov
mov
lret
dec
cld
js
pusha
inc
push
pop
fwait
and
mov
loope
out
mov
inc
mov
mov
xor
pusha
mov
incl
mov
call
xchg
add
pop
je
sub
call
enter
cmp
jmp
outsb
mov
es
sti
push
stos
mov
jo
or
or
xchg
sbb
dec
insl
mov
scas
mov
mov
sub
xchg
aad
loope
mov
mov
lods
cltd
int
push
cmp
movsb
sarl
shl
lods
bound
test
popa
pop
ja
insb
push
test
outsl
sub
mov
add
jns
pop
stc
sbb
cmp
ss
and
filds
inc
decl
cmp
mov
scas
add
je,pt
inc
int3
arpl
and
jne
leave
scas
cmp
dec
loop
mov
add
into
std
cmp
jg
dec
xchg
sbb
push
or
xchg
jp
cmp
mov
clc
aaa
insb
dec
sbb
add
sahf
movsl
jo
mov
inc
scas
and
or
push
fbld
movsb
sarb
mov
mov
js
mov
cmp
clc
dec
inc
jl
inc
and
xchg
int
ret
or
mov
lret
adc
sub
icebp
sub
decl
pop
ss
dec
imul
mov
lret
dec
movsb
nop
push
mov
ja
jmp
pop
loope
in
dec
iret
les
jns
les
nop
dec
into
sub
mov
lods
stc
pop
pop
data16
xchg
cmpsb
fisubs
data16
out
lock
mov
dec
xor
mov
sub
jl
je
std
or
ja
and
mov
push
pop
jg
sbb
jmp
xor
out
cmp
cmp
jbe
ja
addr16
jecxz
divb
decl
jmp
scas
repz
mov
stos
mov
mov
sub
call
dec
xor
fadd
push
out
cs
xlat
je
or
add
stc
adc
in
or
mov
mov
cmp
ds
rcrb
lods
ja
cltd
xor
add
scas
ja
clc
dec
jne
jo
xchg
test
mov
inc
jecxz,pt
xchg
aas
fildll
out
cld
movsl
call
add
incl
popf
pop
je
pop
addb
dec
ds
cli
cwtl
mov
adc
incl
test
dec
sbb
ds
jle
add
sub
shlb
pop
add
sub
decl
push
pop
add
or
sbb
add
dec
sub
inc
sub
test
call
cmpb
and
cwtl
lea
aaa
cs
decl
mov
push
add
lea
xor
aam
push
sub
pushf
adc
pushf
or
bound
shl
jl
dec
add
cld
or
jl
lock
mov
xor
pop
xchg
sbb
je
lret
pop
int3
pop
mov
dec
jbe
fnstcw
mov
cld
notb
sub
lcall
cld
mov
sbb
aam
xlat
add
push
sub
mov
call
insb
inc
ljmp
je
ret
cmp
inc
pop
leave
push
data16
mov
mov
xchg
xor
xchg
mov
lcall
lret
push
stos
dec
xor
dec
imul
ffree
outsb
into
jge
clc
nop
incl
mov
ret
neg
ret
jae
push
sarb
mov
cli
out
fs
or
ljmp
xchg
adc
or
test
mov
sbb
cmp
daa
mov
pusha
js
jmp
adc
dec
and
push
push
int3
mov
mov
cmp
das
mov
sbb
pop
xor
call
loop
in
pushl
pop
jle
enter
clc
add
mov
outsl
cli
incl
nop
xchg
xchg
mov
mov
int3
test
xchg
inc
mov
filds
or
leave
jl
dec
pop
jb
adc
sbb
push
inc
sar
jb
add
test
mov
aad
and
dec
dec
xchg
idiv
incl
sbb
test
daa
in
aam
and
xorb
addb
dec
movsb
lock
mov
push
add
or
cmp
dec
movsb
push
push
pushl
inc
mov
insb
push
or
pop
push
xchg
push
xor
mov
pop
push
xor
or
incl
xchg
mov
mov
mov
mov
sub
loop
stos
jmp
aam
das
rcr
mov
mov
mov
mov
dec
push
jmp
sbb
dec
notb
sub
je
jg
movsl
add
adc
mov
xor
push
loopne
xlat
decl
and
aam
in
or
lds
pop
xchg
push
aaa
fwait
mov
cld
xchg
xor
cld
add
fiadds
add
mov
stos
sub
outsl
decl
pushf
gs
mov
cwtl
jae
into
out
cmp
decl
or
test
fisubrl
pushf
inc
pop
jmp
call
cmp
jo
push
ret
out
lods
dec
push
push
and
fstpl
test
dec
mov
addl
jae
mov
push
lcall
push
adc
xchg
cmp
lea
add
fdivr
ljmp
mov
ror
lret
push
pop
sub
jmp
pusha
pop
or
imul
pop
fists
dec
fidivl
aas
mov
mov
mov
roll
inc
loope
xchg
aam
decl
dec
shlb
rorl
sbb
call
push
dec
dec
imulb
cmp
shl
stos
mov
int3
jbe
jg
sub
gs
and
mov
mov
lods
loope
dec
cmpsb
sarb
add
es
sbb
push
cmp
das
and
push
mov
lods
mov
mov
mov
or
sub
ljmp
inc
mov
call
iret
imul
push
mov
add
lcall
add
int3
mov
cmp
test
push
gs
nop
add
jle
stos
inc
pop
cltd
mov
gs
decl
pop
pop
stc
pop
pop
xchg
dec
mov
jge
pop
or
enter
je
adc
pop
cmc
dec
xchg
orb
fsubs
mov
jbe
jns
or
pop
sbb
sarb
sbb
pusha
adc
scas
dec
jcxz
pusha
pop
mov
and
ret
add
mov
adc
insb
mov
mov
lods
inc
adc
es
xchg
dec
loopne
imul
or
pushf
push
roll
fmull
mov
decl
xchg
sub
aam
test
mov
scas
jecxz
inc
xchg
movsb
and
mov
push
je
xchg
dec
sub
pop
push
xor
jg
in
mov
movsl
je
or
adc
stos
push
pop
nop
out
push
jg
icebp
call
dec
or
xchg
xchg
hlt
adc
jp
sub
sahf
insb
cld
fildll
xor
inc
dec
addr16
inc
sahf
pop
mov
push
sub
xor
pop
loope
in
adc
and
or
inc
jecxz
lahf
lea
adc
lcall
mov
dec
inc
jb,pn
in
sbb
push
lods
xchg
and
dec
push
lods
rorl
jp
lods
and
add
dec
xchg
push
xchg
mov
jb
mov
lock
aam
imul
xor
loop
shll
pop
pop
dec
or
loopne
and
push
and
sub
add
arpl
inc
jns
push
push
ret
imul
test
mov
push
hlt
mov
xor
cltd
or
push
fwait
sar
addb
lods
in
sub
mov
call
xor
loope
int
mulb
cwtl
rclb
and
mov
shrb
adc
call
call
cmp
rorl
add
push
inc
jbe
dec
fisttpll
dec
jnp
xor
stos
xor
jmp
fimull
and
test
inc
lret
aam
in
test
xor
adc
loope
lea
sub
pop
repnz
cmpsl
cmp
insb
ljmp
push
movsb
cmpsl
xor
add
add
aam
push
pop
enter
call
std
les
data16
mov
rcl
push
xor
js
sub
lahf
or
jg
mov
inc
scas
jno
rcll
push
fsubl
cmp
ljmp
mov
xlat
and
push
test
jns
push
dec
int
push
dec
add
test
cwtl
fs
jbe,pn
fucom
mov
aad
je
loop
mov
ds
call
jl
adc
in
dec
or
movsl
push
out
aad
pusha
call
rolb
cmpsb
cmp
fwait
iret
rorb
cmp
dec
les
and
mov
adc
push
dec
test
nop
es
decl
adc
xor
adc
adc
mov
lcall
lcall
dec
or
ret
inc
imul
sbb
pop
cs
push
pushf
popa
loope
fiaddl
test
sbb
mov
inc
fsubr
dec
push
out
jg
aam
call
lds
pop
out
data16
imul
pushl
and
pop
dec
pop
loopne
push
xor
popa
mov
mov
pop
cli
gs
imul
jecxz
scas
aam
xlat
dec
cmp
cmpb
xchg
sbb
rcll
and
push
cmpsb
or
cmp
rcrl
loop
call
into
xor
inc
xor
xor
cmp
pop
sar
lcall
mov
fildl
das
sub
mov
aaa
aam
pop
mov
adc
push
pop
inc
add
push
push
daa
push
lds
stc
xor
xchg
cmp
add
lock
inc
lcall
sbb
or
xor
inc
adc
mov
cmp
lcall
mov
testl
sahf
lret
fldt
xchg
fadds
sbb
mov
mov
adc
call
outsb
icebp
sub
lcall
stos
sbb
adc
adc
cmpxchg
pushl
js
add
sbb
shlb
adc
cmp
mov
mov
mov
call
sub
mov
or
mov
jmp
mov
mov
pop
pushl
das
test
faddl
jae
xchg
sbb
and
mov
mov
pop
sbb
sbb
adc
lcall
jae
pop
aaa
push
sbb
mov
push
cmpsl
or
add
jmp
mov
lods
push
bound
add
incl
aaa
stos
mov
dec
pop
sbb
inc
xor
lcall
lods
cmp
and
roll
push
or
bnd
mov
jle
popf
paddw
aas
pop
cli
lret
inc
cmp
clc
sbb
inc
jns
cltd
popf
aas
mov
incl
mov
mov
jecxz
movsl
jnp
add
mov
mov
int3
mov
mov
or
pop
fcmovb
inc
insb
mov
add
mov
hlt
inc
or
jmp
shlb
les
push
lea
out
loope
bound
push
and
adcb
jbe
test
decl
mov
sbb
loop
jmp
mov
inc
popf
enter
test
fbld
es
into
test
sbb
jb
ret
out
imul
decl
ret
test
dec
cs
lods
dec
cs
scas
cmp
jmp
adc
cmp
mov
inc
push
scas
cs
mov
addl
add
outsb
and
mov
xor
xor
or
pop
jp
jg
scas
sub
mov
mov
jno
sahf
ret
dec
push
dec
inc
cmpsb
dec
arpl
ret
inc
xor
ret
cs
ret
sub
lods
sarb
test
add
lea
scas
insw
mov
xor
movsb
dec
add
fs
rol
dec
cmc
insb
movsb
test
cld
jmp
test
ljmp
pop
pop
sub
aaa
push
repz
das
xor
or
push
roll
mov
add
and
mov
sbb
sbb
sbbl
sar
test
jle
cmc
stc
mov
adc
stos
xor
jbe
std
mov
mov
adc
loop,pt
cmp
dec
inc
jmp
test
pushf
add
rorl
daa
in
mov
xchg
adc
and
int
dec
outsl
fsubr
in
pop
sbb
and
push
jl
push
test
cld
or
jne
fs
in
loop
inc
addr16
mov
call
sarb
sub
mov
repnz
std
ljmp
in
xchg
inc
and
gs
inc
ljmp
cmpsl
push
sti
lea
addb
idiv
or
or
inc
jp
cld
cld
sub
push
cld
push
or
sbb
dec
jo
push
inc
lds
in
lods
push
hlt
decl
in
inc
into
lds
movsb
mov
cmpsb
js
data16
add
pop
adc
push
sub
std
jmp
xchg
es
arpl
pop
or
popa
test
es
mov
enter
and
sahf
bound
incl
stos
into
add
fmuls
daa
and
adc
int
aam
add
dec
xor
xor
es
std
incl
call
jl
xchg
lret
dec
popa
push
andb
js
and
xor
jp
or
xchg
inc
out
ret
xchg
call
push
fisttpll
gs
push
fs
inc
xor
inc
mov
dec
test
sbb
inc
loopne
lcall
adc
push
cmp
xchg
cmp
repz
mov
xlat
fistps
test
add
std
stos
mov
clc
dec
cmp
ds
arpl
push
xchg
insb
testb
or
inc
fs
mov
test
lcall
and
adc
dec
movsl
shlb
xchg
adc
pushl
test
push
hlt
xorb
loope
lock
mov
int3
and
cmpb
inc
shlb
jbe
loopne
fbstp
in
dec
jb,pt
sahf
cmpsl
add
and
xor
mov
mov
cltd
inc
dec
sub
inc
adc
xchg
sub
xchg
and
adc
jnp
out
sub
fs
inc
sarl
mov
jmp
nop
punpcklwd
outsb
or
hlt
arpl
xor
push
bound
lcall
push
pop
push
pusha
daa
lcall
ret
cli
push
add
mov
jmp
das
pop
gs
dec
std
adc
xchg
dec
pop
mov
hlt
es
enter
xor
sub
out
pop
ljmp
jl
scas
pop
leave
ret
arpl
dec
xor
xor
or
outsl
clc
sbb
adc
sub
mov
iret
lock
loop
mov
cli
and
ret
mov
lods
pushf
scas
shll
test
sbb
enter
sub
or
jne
mov
rorl
imul
lcall
adc
stos
cmp
push
pop
mov
add
sti
mov
mov
pushl
inc
fbstp
push
mov
sbb
xchg
fimull
cmp
loop
inc
add
pop
icebp
fcmovnb
insl
fistpl
cs
movsb
add
fsubp
lea
lea
outsb
push
repnz
fsubl
cwtl
cld
jg
mov
popa
test
out
and
lcall
ss
push
pop
jno
sub
cmp
and
fdivs
cmp
and
into
cmp
pushl
push
je
add
sub
and
pop
loopne
pop
mov
lahf
imul
xor
loopne
lods
jb
or
cs
xchg
lcall
scas
push
les
and
inc
test
jo
push
jg
inc
push
gs
shl
dec
out
shrb
add
clc
cmpsl
push
push
bound
push
shrl
daa
nop
pusha
mov
inc
push
mov
outsb
cmp
add
or
call
std
call
cmc
outsb
popa
bound
ja
add
shrl
in
mov
fsubrl
ds
arpl
roll
add
hlt
lds
test
mov
xor
mov
ljmp
lcall
dec
fs
jae
push
and
out
mov
inc
xor
insb
ljmp
push
sbb
mov
cwtl
lret
sub
mov
jns
mov
rcl
sbb
stos
aas
ror
mov
sbbl
mov
mov
cli
mov
inc
daa
dec
arpl
cmc
call
int
push
jecxz
clc
adc
rol
aam
inc
lret
jmp
insb
dec
adc
shrb
test
jmp
dec
add
les
add
jle
dec
ljmp
je
ds
clc
jmp
ret
mov
sub
xor
mov
xor
cmpsl
rol
orl
dec
dec
mov
incl
xchg
jge
adc
mulb
add
mov
dec
and
ljmp
in
out
and
dec
mov
js
mov
sbb
fsubl
cmpsl
push
add
nop
js
add
xchg
pop
xchg
add
aad
std
shrb
clc
ja
stos
in
add
add
mov
ljmp
pop
mov
xor
push
xor
mov
adc
or
push
enter
fldcw
insb
outsl
jmp
ljmp
call
mov
fsubr
cs
cli
stos
add
add
pop
push
hlt
cmp
sahf
aad
std
call
dec
enter
sub
pop
adc
fs
decl
jg
mov
pop
orl
lods
popa
jbe
push
pop
add
xchg
addr16
fnstcw
out
add
test
shlb
and
jecxz
shll
pop
push
hlt
or
ret
mov
movsb
ds
fstl
hlt
jge
push
cmp
or
xchg
adc
dec
cmp
js
inc
pushl
in
and
and
test
in
or
inc
mov
inc
outsl
das
adc
decl
cmpl
add
cmpsl
dec
add
sbb
mov
js
inc
push
rcrb
inc
cmovl
pop
and
pop
daa
das
adc
mov
lock
mov
in
orb
into
stc
jnp
sub
push
rclb
jl
insb
cld
sub
inc
jg
push
dec
fadd
mov
ja
aaa
cmpb
out
mov
xchg
pusha
mov
cmpsl
jg
incl
lods
dec
add
mov
jmp
mov
or
xchg
aam
js
or
shrb
push
ljmp
or
and
add
and
lret
or
stos
mov
mov
lods
cmp
ljmp
lea
push
sti
inc
mov
add
sbb
xchg
iret
inc
mov
repnz
jmp
incl
xor
add
push
adc
mov
inc
subl
or
stos
cs
ljmp
adcl
cmc
mov
cmp
push
ret
pop
mov
loopne
jmp
push
fwait
mov
subps
jno
test
sub
ljmp
insb
daa
enter
push
mov
lcall
hlt
enter
fstpt
insl
fmul
add
inc
insl
imul
es
jno
lcall
sahf
or
and
repnz
arpl
out
bound
push
dec
or
mov
popf
push
xor
test
sarb
dec
mov
incl
sub
add
jmp
stos
dec
lock
xor
gs
jns
pop
les
lcall
dec
adc
jle
inc
fs
dec
lret
sub
loop
das
clc
call
insb
dec
adc
lahf
dec
lock
mov
iret
and
mov
dec
sub
add
insl
cmp
clc
mov
jp
movsl
pusha
mov
in
sbb
adc
and
inc
cs
add
in
adc
in
or
out
shrb
scas
imul
cli
pop
fidivrl
shll
push
adcl
aaa
add
mov
addb
cmp
cmc
loop
and
xchg
dec
xchg
push
or
adc
incb
mov
xchg
das
cmp
call
push
loope
xor
icebp
pop
faddl
mov
cld
sar
pop
ljmp
push
ljmp
cmpl
adc
ds
jecxz
sub
test
clc
pop
ja
les
test
push
lret
outsb
sbb
fwait
xchg
mov
inc
and
outsb
out
dec
or
mov
out
sbb
test
xchg
test
stc
loop
mov
mov
fdivrs
xchg
add
inc
sub
mov
lds
es
mov
testb
adcl
call
movsb
and
loop
mov
mov
loope
rorb
xchg
cmpsl
push
les
mov
inc
lret
aas
mov
iret
cltd
dec
test
jge
lcall
fisubrl
clc
ficompl
cmp
cmpl
ret
mov
sub
loopne
jnp
add
jns
fs
jl
testb
pusha
cmpsb
jecxz
mov
pop
ret
xorl
xor
decl
sub
scas
xchg
pop
mov
gs
and
xchg
orl
mov
fisubs
stos
xchg
add
push
jg
or
push
add
ss
mov
pusha
aaa
pop
jp
sbb
loop
ljmp
xchg
orb
mov
sahf
addr16
inc
xor
xor
mov
lock
xor
jl
rcrl
sbb
mov
cmp
add
scas
rcrb
cmp
fld
lods
aaa
lret
jmp
push
xor
sbb
decl
lret
in
adc
and
ss
adc
add
ja
cld
cmc
inc
aam
frstor
xor
popf
xchg
lds
lret
mov
dec
jae
sub
icebp
sub
sbb
test
sbb
or
pop
push
fwait
sarb
mov
decl
mov
imul
sbb
movsb
jnp
xchg
mov
cs
push
jbe
out
daa
mov
jp
mov
das
cmp
insb
dec
pop
push
mov
push
stc
pop
inc
inc
sbb
ds
jg
ljmp
push
out
add
aas
mov
stos
push
fidivrs
lcall
repnz
push
popa
insb
inc
cmp
mov
add
or
shll
jl
call
and
and
rcll
xchg
cwtl
mov
jmp
test
sbb
jg
inc
leave
nop
sub
cwtl
jno
cmpsl
push
mov
flds
inc
repnz
fs
loopne
aaa
cld
fs
xchg
xor
rorb
inc
ds
push
outsb
push
loopne
or
mov
inc
jb
or
mov
mov
xchg
inc
inc
fs
rorl
inc
in
dec
sbb
int
inc
daa
scas
lods
inc
inc
orb
or
xchg
sub
xor
sbb
jle
mov
ss
lock
push
cli
hlt
or
in
xchg
pop
lahf
add
jge
jge
mov
loopne
adc
test
or
jns
mov
xchg
xchg
call
mov
dec
or
sbb
dec
ret
fistps
jl
xchg
call
into
fdivrl
shlb
loope
xor
sar
dec
cli
fwait
rcll
and
daa
incl
lods
sub
rep
repz
scas
std
jecxz
xor
jmp
aaa
mov
push
data16
ficoms
pop
sub
inc
or
mov
cld
jg
js
aam
popa
test
pop
call
clc
lds
aad
pop
jg
movsl
sbb
cmc
in
cmp
aam
push
adc
mov
cltd
push
mov
dec
cmc
sbb
and
push
jg
and
mov
xchg
push
push
mov
and
jg
arpl
jne
push
in
push
cbtw
fidivrs
lcall
add
in
pushf
adc
mov
push
imul
jbe
pop
adc
push
adc
lods
sub
test
rorl
adc
mov
insl
stos
jbe
insb
adc
jg
xchg
cmp
pop
aad
lea
loop
nop
lcall
sub
cmp
fisubl
pop
push
mov
dec
jbe
aad
call
jns
or
pusha
bound
jb
pop
pusha
dec
pop
les
xchg
call
test
fldcw
jo
int
adc
jns
rcrl
pop
cmp
ds
jg
stc
inc
in
push
jecxz
les
insb
fldenv
inc
cmpsl
adc
push
pop
mov
cli
ljmp
arpl
aam
cltd
add
je
push
rcrb
outsb
xchg
outsb
daa
ret
cmpb
push
ficoml
pop
mov
or
sbb
icebp
icebp
or
leave
aad
out
loope
lcall
leave
lret
cltd
pushf
sbb
sbb
sbb
js
lock
lcall
repz
mov
ret
rcl
in
out
enter
and
test
and
sahf
hlt
cmp
cmpsb
nop
inc
push
pop
jne
pop
outsb
jns
pushl
sbb
push
subl
pop
cwtl
pop
rclb
call
dec
je
sub
cmp
mov
sub
ret
add
inc
pop
filds
int
popf
insl
pop
iret
inc
ja
and
movsb
lods
aaa
sub
ja
jg
xor
mov
lds
hlt
call
pop
pusha
jl
rolb
test
ljmp
test
mov
mov
in
jg
out
add
cmp
sbb
xchg
test
cwtl
or
lock
xchg
lds
je
icebp
call
or
sbb
repnz
pop
pop
cmp
jg
out
adc
aas
mov
inc
mov
mov
xor
cs
jle
inc
lcall
insl
mov
push
push
ljmp
cld
out
cmpsb
test
jl
push
pop
adc
incl
pusha
test
jmp
add
or
lods
leave
cltd
gs
xchg
mov
xchg
in
jecxz
movsb
xchg
xchg
pop
lahf
fsubs
jecxz
mov
xor
push
or
lret
lock
sbb
xor
jmp
int3
add
out
inc
sarb
sub
popa
mov
cmpsl
call
cld
aaa
push
popa
divb
test
cwtl
in
cmp
fwait
and
xchg
xor
pop
daa
cmp
orb
mov
insl
xlat
add
dec
cs
and
and
imul
call
dec
jecxz
add
mov
insl
adc
and
mov
mov
sub
jecxz
incl
mov
pavgw
and
sub
add
pop
or
sub
sbb
add
das
clc
incl
and
dec
adc
and
loope
add
flds
adc
sbb
iret
ficoml
mov
add
mov
test
adc
ret
fcmovnb
xor
nop
or
pusha
cmpsb
cltd
cli
pushl
popf
mov
cltd
aam
cmpsb
xor
ds
fwait
sub
jl
xchg
pop
inc
ss
cmpsb
ss
sub
popf
jbe
cmp
pushl
int
scas
jae
jbe
out
mov
add
add
mov
clc
hlt
jno
mov
sub
lcall
push
pop
jl
lret
pop
in
arpl
lods
lea
lret
dec
fsubs
sbb
ret
ja
clc
mov
sub
or
rcl
test
sub
call
sbb
dec
jo
xchg
mov
pop
fimuls
lcall
mov
adc
inc
dec
xchg
lods
mov
sub
repz
fidivs
insb
stos
push
adc
aam
add
adc
pop
lock
lock
push
cwtl
outsb
pop
fdiv
decl
cwtl
popf
sub
sub
jl
cmp
enter
fadd
xchg
xchg
sub
and
pop
ljmp
inc
jmp
fisubrl
mov
cmp
sbb
inc
adc
jbe
and
rcll
enter
inc
pop
adc
push
push
dec
push
mov
push
ret
insl
int
imul
sub
xchg
inc
arpl
enter
sub
sbb
add
incl
sahf
mov
xor
xchg
fiaddl
xchg
call
or
inc
inc
xchg
daa
shrb
ljmp
xchg
bound
push
add
add
decl
jbe
pop
add
subb
into
ja
lock
fucomip
xor
inc
mov
aad
into
push
adc
cmp
dec
cld
stos
xor
fistps
cld
cs
clc
lcall
xorl
mov
daa
mov
add
push
inc
lret
sarb
pop
sahf
add
push
cmpsb
mov
xchg
cmp
test
pushl
dec
inc
or
add
jle
sbb
jge
and
call
add
lds
push
mov
inc
fdiv
xchg
mov
fildll
fsts
xchg
xor
mov
insl
dec
pusha
push
lret
das
loopne
xchg
mov
decl
stos
push
inc
ljmp
inc
adc
pushl
fwait
cmp
stos
bound
sub
sbb
xor
test
mov
lock
inc
cmp
test
call
and
add
hlt
jp
call
xchg
pop
adc
xchg
lock
add
push
jae
sbb
cld
dec
test
mov
imul
mov
icebp
stos
and
dec
dec
icebp
ds
daa
cmp
inc
aaa
decl
sbb
add
push
add
pop
test
fnstcw
imul
inc
pop
or
test
inc
adc
push
loop
call
push
das
jnp
pop
call
les
mov
aas
and
pop
les
sbb
inc
fdivr
decl
outsl
cmp
sbb
sbb
lods
lcall
pop
das
or
mov
inc
lahf
stos
data16
sti
jmp
pop
inc
cmp
push
dec
or
adc
jg
hlt
loopne
pop
lret
fnsave
push
push
sub
int3
xchg
mov
xorb
inc
fldl
mov
lret
inc
mov
ljmp
icebp
call
scas
pushf
add
push
scas
pop
push
dec
and
adc
cmc
jmp
sbb
test
in
imul
push
test
data16
iret
mov
aaa
mov
cmp
push
pop
or
lcall
add
push
hlt
lret
loopne
xlat
sub
stc
and
test
scas
sbb
lcall
scas
xor
mulb
lods
jbe
xchg
call
outsl
decl
inc
or
les
mov
jb
movsl
outsb
push
imulb
mov
test
add
outsl
lret
lcall
call
ljmp
mov
call
mov
dec
push
mov
inc
mov
xor
or
insl
in
clc
lcall
data16
shrb
cmc
mov
xchg
pop
cli
mov
fld
jno
fldt
clc
int3
or
pop
pop
and
jl
mov
adc
clc
adc
adc
dec
lret
movsb
dec
cmpsb
jg
icebp
inc
push
and
xor
xor
inc
and
mov
push
or
and
push
adc
jg
push
stc
and
je
popa
inc
shrl
cmpsl
ret
adc
jne
adc
aam
xchg
aas
ljmp
or
stc
jecxz
ljmp
jb
mov
in
add
call
pushl
cld
je
movsb
adc
out
shlb
adc
push
test
adcb
mov
loopne
out
cli
or
sbb
movsb
and
or
and
insl
jb
xor
dec
shlb
inc
dec
lock
fbld
push
cmpsb
inc
arpl
ljmp
ja
inc
pmaddwd
inc
and
mov
push
call
daa
in
inc
cs
push
xor
add
cli
jns
pop
jp
pushf
xor
mov
call
shlb
mov
and
cmp
dec
test
call
lods
ss
data16
in
daa
pop
sub
mov
imul
jnp
andl
inc
inc
inc
sar
pop
inc
insl
xchg
jecxz
dec
dec
ljmp
dec
xchg
pop
xchg
and
add
add
inc
in
popl
inc
xor
cmp
push
add
jne
xor
lcall
scas
cli
xlat
pop
cld
cwtl
cmp
fcomps
test
jmp
cmp
nop
or
sbb
xstore-rng
cmpsl
orl
pop
adc
out
loope
hlt
add
pop
std
push
inc
cli
jno
dec
addl
call
push
out
add
push
mov
xchg
adc
sub
pushl
xor
xchg
sub
shrl
call
inc
adc
xchg
adc
jae
push
adc
xorl
adc
jno
sub
jecxz
inc
sub
xor
jo
addr16
pcmpgtd
xchg
sarb
es
cmp
sbb
cmp
xchg
leave
xor
xchg
rolb
iret
rcrb
test
call
xor
adc
adc
add
daa
inc
push
jg
xchg
xchg
js
push
fs
daa
add
insb
xorb
jg
outsb
and
and
addl
decl
les
stos
test
ret
nop
xchg
and
push
sub
pop
rorl
mov
fstps
push
imul
arpl
xor
inc
fwait
sub
and
lcall
ljmp
decb
pop
jge
cmpsb
and
cmp
call
jl
rolb
iret
fdivrs
test
test
nop
ret
add
leave
push
mov
xchg
and
add
out
stc
popl
xchg
sub
daa
jne
jo
movsb
mov
stc
sti
sub
aam
push
adcb
jp
loope
sar
jg
xor
xor
andb
push
mov
sub
inc
pop
aaa
adc
jne
push
or
outsl
js
fsts
movsl
ficoms
add
xor
push
inc
outsl
clc
call
push
push
inc
xchg
cmp
cmp
xchg
add
adc
push
dec
inc
and
xchg
inc
jno
sbb
lock
push
inc
je
push
data16
iret
inc
sub
call
mov
jbe
xchg
jbe
pusha
xchg
js
mov
mov
arpl
aad
in
lods
jae
xchg
mov
test
cwtl
mov
pushl
popa
xor
pop
and
in
push
fcomip
add
addb
mov
in
call
sahf
and
andb
inc
pop
sub
popf
nop
push
and
xchg
es
xchg
and
push
pop
mov
inc
aam
push
rol
xchg
and
loopne
push
push
rol
push
bound
add
mov
adc
push
mov
ret
xchg
inc
xchg
and
std
pushw
in
sbb
shll
pop
jae
push
xchg
test
and
addl
flds
sahf
out
stc
lods
lock
decl
hlt
nop
lret
mov
nop
adc
sti
imul
cltd
pop
pushl
fwait
cli
js
out
sbb
in
cltd
sub
adcb
inc
push
mov
pop
std
or
aas
mov
sub
sbb
and
loop
hlt
adc
adc
test
cmp
adc
xchg
movsl
and
pop
fs
js
out
jp
mov
fcomip
xchg
push
test
jecxz
mov
movsb
xor
cmp
es
mov
loopne
jmp
sub
ja
sbb
sub
inc
insb
xor
cmp
ja
cli
stos
push
mov
jnp
dec
sbb
fs
pushl
shlb
xchg
inc
push
rcrb
shll
adc
dec
lcall
jg
xchg
sbb
and
sub
mov
insb
add
movsl
dec
mov
xor
cmp
pop
test
mov
dec
adc
mov
test
add
sbb
sbb
testb
ljmp
xchg
negl
pop
xor
dec
and
push
outsb
jecxz
stos
fs
pop
stc
cmpl
je
pop
push
fadd
pop
loop
mov
fwait
add
mov
scas
xchg
sub
push
mov
xchg
dec
lods
rcr
lcall
jmp
adc
lods
addl
outsl
mov
xor
decl
lods
xor
sbb
sbb
jb
inc
adcl
pop
call
adc
xor
adc
imul
shll
inc
sub
es
push
sub
mov
pop
and
cmpsb
mov
jle
mov
mov
sbb
rolb
cmc
mov
jno
lea
xor
mov
movsl
cmp
addl
cmp
push
out
mov
xchg
or
sbb
jmp
mov
and
mov
cltd
add
jmp
jns
movsl
push
andl
cmpsl
push
cmpl
cmp
pop
cmp
out
dec
arpl
shll
mov
shrb
jbe
add
cmp
jmp
add
mov
cltd
addr16
fcomip
das
clc
mov
add
jl
and
xchg
cmp
and
push
rorl
pop
mov
ds
jmp
pop
sub
scas
push
leave
push
push
out
dec
subb
mov
sbb
mov
or
push
push
movaps
inc
pusha
xor
fxch
jbe
push
jmp
call
pop
test
lock
cmp
lret
xchg
jne
mov
repnz
cmp
incl
mov
inc
sub
adc
xor
subl
dec
push
ds
and
mov
or
mov
add
jne
mov
int3
add
mov
shl
xchg
push
push
push
and
lcall
insl
cltd
jo
fwait
mov
in
sub
sar
ljmp
mov
cmp
xchg
mov
sbb
ss
pushf
push
decl
dec
clc
sbb
or
in
adc
mul
dec
ljmp
enter
jle
inc
fsubrl
add
sbb
dec
jecxz
arpl
jmp
fwait
adc
inc
inc
jnp
adc
mov
imul
lcall
or
add
jo
rclb
and
inc
mov
test
mov
xor
jmp
outsl
sbb
enter
call
std
fsubs
repz
adc
test
ljmp
dec
lahf
jg
decl
or
cmpsb
sbb
aas
inc
pusha
push
adc
xchg
or
fcompl
add
sti
mov
inc
mov
xchg
int3
push
test
imul
lods
or
hlt
mov
jmp
xchg
mov
popa
push
push
adc
lcall
fstps
xchg
add
movsb
add
into
xorl
mov
addr16
xor
lods
push
movsl
push
add
dec
cli
decl
sbb
inc
pop
les
and
ljmp
int3
ret
push
xchg
ljmp
inc
pop
hlt
js
jae
jg
pop
pop
jecxz
ret
hlt
icebp
pop
jne
adc
ret
xor
pop
or
adc
dec
ss
xlat
push
std
jg
jg
push
and
pop
addr16
xchg
jbe
push
lods
dec
jecxz
add
jle
stos
or
cmp
and
int3
cmpsb
fsubrs
leave
pop
mov
sti
and
inc
jae
and
fsubrl
inc
in
fldcw
leave
lahf
jb
scas
mov
push
mov
mov
xlat
xor
ljmp
lcall
jo
sub
jecxz
pop
movsl
cld
add
idivl
fstp
xor
mov
add
push
nop
aaa
push
fisubl
or
scas
sbb
sbb
lock
mov
mov
cs
adcl
lret
cmp
mov
inc
xor
dec
rcl
leave
int3
decl
mov
dec
adc
cmp
int
push
xchg
add
xchg
ret
stos
arpl
push
stos
mov
xor
fdivr
call
jne
add
fmul
in
int
jo
mov
bound
fwait
pop
andl
loop
jg
jbe
sbbl
out
pop
mov
cs
daa
lcall
rcll
shl
jmp
mov
jge
fildll
pop
fwait
mov
and
call
fbld
pushl
push
pusha
push
pushf
cmc
test
loopne
cmp
rorl
and
lret
mov
dec
cmp
and
inc
adc
std
pop
fwait
adc
in
es
push
lcall
mov
mov
jecxz
loop
cmc
xchg
jmp
push
mov
loope
out
nop
mov
mov
mov
mov
push
adc
rorb
dec
inc
out
icebp
in
xor
adc
fldenv
pushw
cmp
mov
sbb
fmul
sbb
ljmp
dec
push
rcr
xchg
inc
push
bound
and
xor
aad
xor
mov
dec
mov
imul
jg
imul
outsl
adc
adc
xchg
std
fyl2xp1
mov
push
icebp
pop
ss
xlat
lret
repz
sub
push
xor
fldcw
call
incl
mov
into
mov
mov
insb
sbb
cld
sbb
movsl
pop
sbb
sbb
pushl
xor
mov
int
mov
xchg
mov
sbb
fbld
outsb
int
cwtl
dec
push
xlat
push
mov
scas
inc
xorl
dec
and
sti
xor
cmp
add
shrl
mov
dec
sbb
clc
inc
inc
mov
loope
add
inc
cmp
cmp
testb
or
pusha
and
cld
cmp
ss
mov
jne
loope
je
sub
push
dec
sbbl
mov
cmc
inc
aaa
lods
cmp
into
jo
xor
and
mov
ljmp
pop
lock
xor
inc
xor
stos
add
cmp
inc
lahf
mov
movsb
or
push
addb
icebp
cmpsb
pop
dec
mov
gs
pusha
push
fbstp
lcall
popa
inc
xchg
adc
inc
add
inc
or
and
popf
das
pop
mov
call
inc
cmp
enter
push
or
xchg
lcall
pop
pop
jl
call
adc
imul
out
and
jle
in
adc
int3
cld
int3
sbb
mov
pop
jo
mov
cltd
and
adc
xchg
stos
inc
xchg
push
inc
outsb
xchg
stc
inc
lods
mov
cmp
icebp
in
mov
add
fwait
push
out
add
pushf
sub
sub
push
push
addl
shll
jns
mov
inc
out
lock
daa
pusha
pop
push
imulb
dec
or
lcall
cwtl
jnp
sbbb
mov
std
lcall
scas
or
dec
push
iret
adc
push
or
add
loopne
and
getsec
jle
mov
jmp
cltd
sbb
mov
enter
dec
mov
pop
mov
clc
in
in
cmp
pushl
rcrb
jle
dec
pop
cmpsb
dec
loope
mov
and
ljmp
out
xchg
in
lock
call
push
jg
push
decb
test
and
cwtl
fisubrl
inc
std
sahf
mov
stos
das
mov
mov
stc
pop
call
xor
mov
push
nop
nop
and
mov
add
adc
test
mov
stos
out
jb
dec
mov
cmp
rcll
addl
add
cmp
mov
fisttpll
push
stos
mov
xor
das
cli
ja
xor
cld
push
push
xor
push
sbb
shlb
add
stos
push
in
or
iret
fs
cld
jg
push
sub
inc
je
inc
add
mov
xchg
sub
shlb
and
fwait
add
xchg
and
push
xchg
ret
dec
jb
pushl
xor
das
mov
call
aad
add
test
mov
ljmp
lods
and
sub
stos
push
inc
mov
sub
push
leave
push
pop
dec
pop
xchg
jmp
add
stos
lcall
add
inc
mov
loop
mov
test
incl
xchg
mov
xchg
push
imul
ds
leave
repnz
dec
ffreep
xor
aad
sarb
test
iret
loop
incl
cltd
cli
loop
add
inc
loopne
xchg
test
jle
aam
cmp
push
aad
pop
pop
mov
push
int
js
pop
iret
addl
and
aaa
rcll
cmp
sbb
pop
cwtl
cltd
xor
testb
mov
pushf
lret
or
dec
ror
lock
mov
leave
mov
add
rcrb
cmpb
sbb
and
jg
pushl
je
stos
aas
sbb
mov
enter
jmp
push
xchg
pop
or
int3
enter
xchg
adc
mov
aaa
or
mov
ljmp
les
out
and
mov
lock
mov
pushl
sub
cmp
push
or
inc
loop
rolb
or
or
repnz
ljmp
jbe
ret
pop
xchg
into
inc
in
idivl
cmpl
push
adc
jmp
out
mov
push
or
and
pop
loope
push
adc
test
mov
repnz
mov
test
leave
ficompl
enter
pop
lret
push
cld
or
ret
decl
mov
dec
jo
enter
int
jmp
push
je
dec
sub
aad
sub
ret
jmp
ljmp
pop
clc
dec
out
repnz
xor
and
sub
incl
and
loopne
jp
cmpsb
pusha
notl
int
inc
adc
push
inc
push
jg
inc
ret
add
out
mov
add
or
cmpsb
mov
add
sbb
push
sarb
movsb
jmp
addr16
cltd
shlb
xchg
sub
xorl
addr16
mov
fisubrs
std
call
sbb
and
rcr
cmp
movsb
cli
xor
addr16
jge
adc
nop
inc
aas
lock
xor
adc
adc
and
fcoml
mov
inc
rolb
in
fwait
daa
xchg
mov
jl
cmp
stc
xchg
add
loop
into
test
xor
mov
pop
in
push
jg
dec
andl
inc
mov
ds
ud0
call
ss
and
in
aas
popf
adc
ds
and
in
cwtl
lock
out
mov
inc
xchg
mov
add
mov
loope
dec
sar
mov
jl
imul
jmp
xchg
add
call
jp
ja
or
stc
inc
sub
push
push
lret
sbb
push
hlt
push
test
xor
xor
or
mov
rclb
cmp
stos
mov
repnz
jg
lret
pop
add
xlat
inc
jo
adc
aaa
adc
lcall
pop
data16
lret
xchg
push
xchg
push
push
mov
add
lcall
movsl
mov
shrb
orl
adc
filds
fiaddl
lret
jb
add
pop
data16
sub
cmpsb
adcl
adc
out
jo
outsl
jbe
xchg
rcrb
mov
orb
or
xor
lcall
sbb
mov
add
cwtl
add
call
incl
pusha
push
jae
pop
or
add
add
punpckhwd
ljmp
or
dec
mov
jo
jbe
inc
and
decl
xor
and
ss
out
adcl
arpl
popf
pop
int3
andb
ret
sbb
push
adc
pushl
sbb
and
mov
jmp
mov
decl
add
ret
mov
mov
xor
adc
mov
lcall
fdivr
xor
icebp
in
out
push
pop
mov
jg
inc
fs
dec
jle
inc
into
mov
test
lea
mov
add
inc
sub
dec
push
test
imul
mov
or
hlt
rclb
orl
jp
ljmp
xor
rcrl
call
mov
test
testl
push
sbb
stos
leave
dec
lcall
decb
xchg
cmp
cmp
add
mov
pop
bound
dec
sub
lods
jne
mov
inc
daa
scas
ficoml
mov
out
dec
adc
data16
cld
ljmp
stos
add
movsl
stos
or
jl
jo
ljmp
jmp
pop
inc
cmc
xchg
mov
pop
sbb
sbb
xchg
das
push
sub
cld
ljmp
icebp
or
loop
push
adc
add
scas
xchg
pop
pop
push
loop
cmpsb
jg
xchg
cmp
sbb
aad
xchg
pop
ja
adc
adc
sbb
and
or
sbb
xor
nop
leave
and
sbb
pushl
mov
pop
mov
inc
push
test
je
add
adc
adcb
and
jmp
addb
add
xor
or
mov
addb
adc
jns
sti
decl
ret
mov
adc
dec
hlt
in
call
mov
push
sbb
mov
adc
js
cvtpi2ps
cmpsb
add
jg
lcall
dec
push
mov
flds
mov
jmp
push
mov
cld
xor
xchg
xor
push
inc
push
mov
jecxz
dec
mov
into
xchg
incl
popf
sahf
movsb
mov
scas
fs
data16
sahf
mov
mov
fmull
gs
adc
fidivrs
jae
push
jo
sahf
or
xor
pop
mov
ret
push
inc
fwait
or
cltd
hlt
mov
das
lods
rcrl
pop
add
in
dec
sub
push
add
add
incl
clc
pusha
xchg
iret
dec
push
cld
sbb
aas
and
push
mov
call
fucom
fldenv
jle
dec
push
adc
test
sbb
xchg
sahf
push
push
xchg
push
in
or
dec
mov
subl
lods
lahf
dec
jp
push
cli
movsl
adc
pushf
pop
in
lahf
sahf
test
lock
sub
adc
and
cli
inc
mov
cmp
out
jno
push
fsubr
push
adc
dec
dec
ss
mov
mov
pushl
dec
or
loop
ljmp
jb
aad
jbe
les
inc
cmp
fcmovnu
adc
rol
incl
sub
lock
cmp
loop
pop
pop
fwait
sub
fwait
add
xchg
rolb
or
push
mov
or
push
add
xchg
mov
mov
jmp
dec
sbb
daa
inc
inc
add
cmp
incl
sbb
inc
jge
xchg
pop
sub
test
xchg
add
xchg
sub
sbbb
call
je
daa
sbb
daa
insb
pop
loop
cmpl
out
mov
cmp
incl
cwtl
add
xor
sbb
and
mov
lret
jmp
or
lahf
fwait
xchg
repnz
xor
mov
ljmp
and
xor
int3
mov
and
push
sbb
out
cli
decl
fwait
pop
dec
and
lret
add
cli
sbb
sub
in
cmp
incl
sahf
in
addb
xor
movsl
jno
push
sbb
incl
or
mov
shlb
popa
cs
inc
add
cmp
adc
sbb
pop
xchg
rcrl
in
ret
jg
adcb
xchg
enter
cltd
xchg
cmp
pop
fisttpl
loope
sbb
rorb
daa
xor
popf
lcall
adc
xchg
mov
sarb
jae
popf
enter
sahf
ficoml
lods
out
clc
call
adc
loope
mov
cli
cli
test
xor
cmp
call
sub
mov
rcll
or
or
xchg
pushl
adc
in
jecxz
and
mov
push
cwtl
aam
or
push
and
cmp
mov
cmp
aas
jo
das
and
add
mov
cli
call
jp
inc
lret
iret
xor
push
inc
xchg
jmp
cld
mov
add
pusha
xor
out
repnz
and
jmp
xor
or
sub
add
fcomps
add
push
rcrl
dec
add
fdivs
and
ja
or
xchg
loop
jg
mov
jg
pop
mov
mov
and
or
lods
xor
jb
xlat
push
mov
mov
lock
lcall
stos
sub
xor
cmp
jo
cmp
and
sub
mov
or
cltd
bts
fwait
dec
mov
jg
rorb
movsb
enter
lock
dec
adc
call
out
mov
cwtl
nop
test
lds
and
jmp
mov
add
incl
shrb
xor
dec
dec
adc
call
out
stos
addl
dec
jmp
ljmp
subl
testb
sub
andl
call
mov
xor
lock
sbb
sbb
pop
mov
mov
dec
aad
test
mov
js
sbb
dec
mov
add
jle
cmp
jmp
int3
adc
mov
lods
xor
decl
adc
rcl
iret
dec
xor
or
xchg
or
mov
ljmp
dec
adc
mov
lahf
pop
cmp
xchg
xor
lds
sub
jmp
iret
cmp
adc
push
add
bound
jmp
jo
mov
cmp
inc
jo
pop
and
xchg
ds
xchg
xor
sub
mov
cmp
mov
jae
cmp
lods
mov
jle
adc
cmc
or
add
aas
mov
stc
cli
clc
das
xorb
mov
test
jg
or
cmp
dec
and
mov
dec
or
or
incl
sbb
add
mov
adc
adcl
xor
or
push
cmpb
pshufw
dec
or
icebp
sub
inc
clc
mov
cmp
or
mov
rclb
push
mov
sbb
and
sub
cwtl
cltd
or
cs
orb
repnz
mov
test
add
adcl
decl
cmp
mov
decb
sbb
sbb
jmp
push
sbb
movsb
inc
xor
xor
mov
mov
ljmp
shll
sbb
mov
or
hlt
cmp
xor
inc
nop
clc
jmp
sbb
pushf
push
push
sbb
lods
mov
filds
lcall
jmp
shrl
sbb
pop
call
lds
xchg
stc
xchg
mov
fldenv
add
and
cmpsl
cltd
adc
mov
jb
repnz
inc
test
ljmp
sbb
push
jg
std
daa
jge
fidivl
fmuls
into
jecxz
shrb
mov
fstl
lods
stos
jecxz
adc
or
iret
clc
mov
add
cmp
jg
mov
lds
lods
and
or
mov
sub
ja
fmul
movsl
jge
cmp
push
rol
push
fucomi
inc
rolb
or
sub
mov
add
inc
sub
or
mov
cmp
push
incb
sub
push
sub
call
cld
dec
xchg
push
pusha
mov
push
dec
jae
dec
test
jp
mov
add
xchg
stos
mov
push
pushl
ss
push
int3
xor
outsb
popa
lods
std
lcall
adc
mov
mov
push
aad
xorl
nop
aad
push
fwait
sub
sub
mov
add
cli
lods
add
mov
into
and
jbe
fsts
xchg
js
fcomip
fwait
movsl
lret
scas
outsb
and
and
incl
aaa
fs
jge
cmp
mov
vorps
rcrl
cld
loop
and
sbb
xchg
jecxz
add
pushl
mov
dec
subb
lds
or
int
orb
xchg
or
cs
push
adc
fdiv
cwtl
adc
cmpl
popf
in
jecxz
call
dec
and
cmp
xchg
fcomi
or
xor
or
add
subl
clc
flds
outsb
add
incl
mov
add
shlb
js
mov
pushl
cli
sub
mov
fistpl
fisttpll
inc
add
push
test
call
add
cltd
cmpb
aad
add
dec
mov
or
push
add
jle
ja
adc
fisubl
push
mov
mov
enter
xchg
add
call
or
les
aam
add
sbb
orb
lods
test
mov
shl
ljmp
loop
iret
cli
fwait
add
add
or
xor
jg
or
je
and
mov
mov
push
out
adc
cmp
shrb
mov
dec
add
push
cld
cmp
mov
xor
call
ficomps
jbe
mov
leave
push
add
mov
movsb
push
call
fists
mov
or
aad
dec
test
cmp
push
sbb
jmp
lea
repz
adc
pushf
addl
mov
mov
mov
mov
dec
add
mov
and
xadd
mov
mov
push
mov
packsswb
std
ljmp
add
xchg
mov
test
jo
mov
incl
daa
adc
or
push
cld
pop
or
subb
jl,pt
fildll
sbb
inc
popa
jmp
adc
cmp
dec
lods
ljmp
xor
and
xchg
add
add
test
fidivrs
add
mov
test
lcall
ficomps
cmp
test
push
mov
inc
outsl
or
sub
inc
dec
sbb
mov
push
pop
shll
sub
rcl
mov
into
pushl
sub
rolb
in
mov
mov
cmpsb
test
xor
pop
arpl
rolb
test
pop
jbe
cld
or
pop
rcll
mov
mov
mov
mov
dec
sub
push
or
ja
data16
mov
ljmp
dec
jge
sub
dec
mov
addps
inc
jne
int
in
rcrb
leave
and
push
jecxz
pop
lea
in
lock
in
lods
cmp
xchg
ja
push
rorb
xchg
sub
adc
loop
xchg
push
lods
pushl
lret
inc
pop
mov
or
mov
lahf
imul
shll
sbb
jg
add
sub
mov
cmp
ljmp
add
les
fsubrs
xlat
jmp
loope
add
sub
or
fisttps
lcall
mov
outsb
jmp
push
sahf
nop
xorb
jo
mov
repz
cmpsb
call
mov
shl
dec
push
jae
xchg
mov
sub
mov
xor
cmp
xchg
lret
push
lret
or
cmp
shrb
shlb
mov
stos
add
mov
mov
es
cmp
mov
popa
cld
inc
mov
mov
jg
imulb
mov
or
sbb
add
mov
and
addb
call
or
mov
xchg
mov
and
call
rolb
repnz
mov
dec
push
imul
xchg
andb
or
jns
shlb
xchg
sub
stc
jnp
lods
decl
cmp
push
or
mov
ret
clc
addb
pop
mov
incl
jl
fs
adc
stos
clc
inc
lcall
stos
jo
add
and
sub
ljmp
cld
test
push
repz
mov
adc
decl
test
decb
xchg
daa
inc
ss
pop
add
push
mov
std
incl
ret
shrb
lcall
mov
push
mov
jg
call
sub
sbb
andl
dec
adc
enter
mov
mov
sbb
or
mov
test
movsl
movsl
dec
adc
jns
inc
inc
cmp
int3
das
repz
add
push
fs
decl
movsl
mov
jb
ljmp
lcall
jg
hlt
xor
cmp
jo
jo
int3
jbe
ds
mov
cmp
call
sub
xor
xchg
sbb
inc
push
test
mov
out
cli
mov
push
iret
pusha
xor
jno
mov
in
je
incl
mov
ficoml
mov
popa
cmc
jno
and
shl
popl
fsubl
inc
mov
outsb
mov
and
pusha
out
mov
xchg
sbb
rcrl
mov
add
add
ljmp
nop
xor
rorl
sub
nop
lcall
ja
decl
insl
imul
addr16
test
insl
and
addb
or
cmpsl
rcrb
hlt
push
dec
or
ja,pt
fcoml
push
test
sub
incl
cld
dec
ficompl
dec
or
mov
adc
lcall
cmc
cmp
mov
lahf
lea
mov
sub
fisttpll
adc
repz
mov
dec
push
ds
leave
mov
pushl
xchg
repz
mov
addr16
pushf
icebp
je
xor
pop
ret
adc
mov
sbb
inc
sbb
call
dec
cltd
test
mov
fadd
pop
and
jmp
mov
cli
inc
ret
mov
lret
or
sbb
add
sub
mov
addr16
lea
add
popf
and
call
rolb
pop
jne
fwait
leave
lods
fisttpl
je
in
jbe
ss
fistpl
loop
jbe
jbe
mov
mov
jnp
icebp
das
mov
sub
and
scas
sbb
neg
loopne
ljmp
adc
loope
cmp
fsub
xchg
jecxz
aas
mov
pop
shlb
add
jge
xor
int
xlat
pop
or
neg
jle
sbb
mov
mov
pop
clc
aad
call
push
push
ja
js
inc
mov
add
icebp
and
test
jo
int3
cmpsl
sbb
inc
in
loop
cs
push
add
inc
shlb
ret
fs
and
push
sbb
mov
cmp
hlt
pop
hlt
shlb
mov
and
dec
xor
sbb
mov
xchg
mov
push
jg
or
bound
popa
in
scas
orb
push
dec
and
sub
xor
or
out
inc
repnz
cmp
test
or
mov
inc
jge
test
sbb
xchg
or
mov
mov
mov
lcall
test
test
imul
push
imul
test
cmpsl
pop
nop
mov
push
scas
test
dec
clc
add
ljmp
outsb
outsb
and
mov
xchg
mov
mov
mov
fcoms
loope
or
dec
shr
and
js
and
call
loopne
sti
insl
mov
int3
xor
adc
shll
inc
push
es
insl
or
jle
cmp
cs
sbb
sub
lcall
pop
inc
adc
jmp
add
xor
popa
sub
mov
das
mov
decl
dec
and
pop
cmc
js
xlat
pop
sub
pop
int3
test
pusha
insb
in
aad
lcall
cltd
sub
rcrb
int
cltd
into
inc
hlt
adc
xor
adc
jg
dec
and
jne
daa
xlat
fidivl
loope
adc
jmp
add
js
int3
add
dec
add
pop
xchg
jmp
add
stos
dec
enter
out
jmp
mov
sarb
in
call
dec
loop
je
call
pop
lock
daa
mov
and
or
xchg
sarb
jg
call
lahf
mov
xchg
mov
shlb
mov
mov
xchg
ret
mov
dec
mov
les
xchg
or
pop
call
setb
repnz
sbbl
jbe
push
and
push
pushf
sub
push
pop
and
sub
stos
and
decl
inc
xchg
mov
gs
gs
push
xchg
and
inc
and
jns
and
jns
cmp
ficoml
or
and
ja
mov
mov
push
inc
rolb
mov
call
rolb
dec
sub
or
decl
scas
or
rolb
sub
aaa
sbb
add
mov
inc
push
pop
adc
ret
clc
nop
xchg
push
imul
gs
sbb
and
loope
cltd
cli
adc
mov
orl
cli
incl
inc
pop
fiaddl
push
orb
mov
mov
sub
inc
xchg
xor
les
push
adc
add
jo
mov
xchg
orb
add
test
or
inc
sbb
scas
add
cld
add
add
adc
movsl
icebp
and
add
push
mov
ljmp
sub
movsb
and
cli
outsl
test
enter
cld
add
decl
loop
push
les
inc
add
xor
xor
mov
xor
repz
jbe
sbbb
ljmp
loope
insl
pop
dec
ss
mov
popf
sbb
je
test
xchg
frstor
fucom
jbe
mov
call
dec
and
fwait
cld
xchg
daa
stos
cmp
mov
sbb
in
cmp
rcrl
stc
fs
inc
mov
les
mov
call
cmpsb
popf
jl
xchg
in
xchg
fimull
fwait
add
test
aad
pop
jne
aas
in
push
lds
test
shl
inc
adc
ljmp
cmpsb
xor
add
add
popa
push
aad
loop
dec
inc
mov
shr
cmp
xchg
filds
pop
pop
es
arpl
mov
outsl
or
jmp
out
mov
std
stos
adc
and
and
inc
inc
stc
mov
nop
and
inc
pop
inc
push
inc
pop
loope
mov
jp
ds
xor
or
loop
xchg
fsubl
adc
mov
pop
loop
xchg
jg
insl
std
lret
xchg
das
xor
mov
test
mov
pop
mov
nop
lock
and
bound
and
les
call
and
inc
dec
sbb
imul
sar
push
mov
andb
in
adc
jl
mov
pop
into
cmp
inc
jbe
jge
mov
and
push
std
pop
insl
sbb
add
inc
jb
lea
or
add
jge
inc
lds
mov
add
incl
or
ret
lods
scas
pop
xor
cld
fidivl
sbb
adc
or
inc
mov
and
mov
inc
stos
rcrl
dec
ljmp
decl
stos
sarb
xchg
sbb
mov
aaa
outsb
push
or
cmp
jae
repz
cs
adc
push
pop
into
or
test
lods
shrl
ljmp
inc
cmpsl
call
outsb
pop
aaa
cmp
pushf
aaa
sbb
pop
xchg
add
push
xor
dec
sub
outsb
es
jne
and
in
xor
jo
mov
aaa
je
clc
sbb
mov
mov
std
and
aam
ljmp
push
cmp
scas
push
dec
jo
hlt
mov
and
jne
sub
call
jae
xchg
test
add
add
add
push
sub
and
fcompl
imul
and
scas
clc
pushl
ss
rcrl
inc
push
call
jo
mov
lds
or
shl
fildll
sub
mov
lods
cmc
push
lcall
fdivs
insb
ss
cli
fcomps
cmc
mov
mov
jp
insl
popa
xchg
ljmp
cmp
jbe
mov
or
int3
cmpsb
jne
ret
sub
adc
cmpsb
mov
into
xor
js
mov
add
lock
sbb
push
outsl
and
mov
sbb
clc
adc
data16
ss
scas
jp
and
jmp
movsl
bound
addl
addb
cmp
adc
in
das
jae
mov
sbb
mov
pop
push
ljmp
insb
fs
dec
jge
mov
adc
inc
mov
adc
cmp
or
ret
cwtl
sbb
int3
and
push
call
imul
and
lock
imul
cwtl
lret
inc
call
mov
arpl
repz
popf
pop
fidivs
lret
ljmp
dec
fdivrs
and
ljmp
push
loop
cmp
pop
sub
movsl
nop
or
or
inc
push
out
xchg
sbb
scas
scas
mov
jmp
inc
leave
rorl
incb
adc
int3
xchg
xor
cmc
js
inc
loopne
fwait
dec
out
cmpl
cmp
mov
int
xor
shrl
mov
std
lods
xchg
lea
push
lock
hlt
lret
push
pop
sar
shrb
cmpsb
jmp
iret
jge
jnp
cld
fidivs
sub
adc
hlt
mov
cmp
jmp
das
dec
shll
and
addr16
mov
fst
push
push
lcall
sbb
psrlw
mov
add
mov
lahf
and
pop
jns
and
sbb
push
mov
adc
sub
aam
lock
sbb
jge
pop
nop
mov
pop
jecxz
decl
xor
mov
cwtl
inc
outsb
mov
ds
mov
mov
adc
mov
ja
pop
sbb
inc
int3
or
fcomip
dec
xor
xchg
pop
sbb
imul
xchg
fdivs
and
inc
ret
add
or
insb
jecxz
pop
mov
cmpb
jl
int3
ss
dec
roll
pop
cmp
pushf
adc
adc
inc
loop
cli
xchg
sbb
fsubrs
jne
mov
cmp
test
inc
shll
insb
or
imul
add
les
push
jb
or
inc
push
je
jmp
ljmp
sub
int3
add
mov
js
mov
jo
inc
jmp
insl
mov
sahf
jle
mov
pop
loop
fs
decl
enter
outsb
sbb
sub
lcall
call
push
xchg
jnp
xchg
xchg
jno
xchg
lea
jmp
fchs
add
cwtl
mov
mov
adc
mov
dec
sub
jo
jg
adc
rcl
idivb
cwtl
push
stc
or
jmp
clc
clc
jg
call
dec
repz
ljmp
pop
cwtl
dec
movsl
xor
ljmp
xchg
dec
cltd
aam
add
pop
test
mov
or
jmp
lcall
popf
push
sbb
mov
shrl
dec
add
sbb
dec
repnz
les
repnz
jne
mov
add
pop
ds
ljmp
dec
inc
xchg
js
incl
std
cmp
repnz
out
push
fs
movsl
or
hlt
jmp
mov
push
mov
loopne
push
sbb
pop
push
sbb
pop
mov
dec
scas
and
mov
pop
shlb
mov
lods
mov
or
pop
add
js
mov
inc
push
enter
jg
jb
push
inc
sbb
add
or
adc
sbb
add
pusha
push
pushl
dec
pusha
mov
inc
add
mov
jg
mov
mov
xor
orb
or
dec
add
jp
xchg
add
aam
sub
loope
inc
inc
add
pop
sub
sbb
hlt
subl
into
inc
and
hlt
js
sub
add
js
inc
adc
xor
add
cmp
addr16
mov
js
addr16
shll
iret
sbb
cli
decl
and
rorl
inc
hlt
mov
add
mulb
ljmp
add
je
addb
jno
lret
cmp
dec
loope
and
dec
mov
cwtl
mov
loop
fsubrs
inc
loope
dec
jmp
mov
js
enter
fdivrs
aam
push
dec
jnp
push
stc
dec
in
lea
cmp
lcall
dec
push
lcall
sahf
xor
and
inc
orl
mov
push
inc
dec
lods
fisubrl
iret
mov
lcall
sub
pushf
lods
dec
fucom
cmp
sub
lods
rcrb
call
sbb
cltd
pusha
pop
inc
sahf
or
dec
cmpsl
lods
mov
pop
icebp
sub
cmpsb
mov
and
gs
mov
add
mov
jle
mov
push
sbb
out
xchg
push
arpl
lcall
push
jb
add
call
cld
dec
push
xor
mov
and
call
xor
lahf
cmp
fisttpll
inc
fildl
lods
imul
pop
outsl
xchg
and
les
sub
les
mov
mov
psrlw
roll
pop
ss
lcall
pop
loope
push
inc
pusha
les
fadds
cmp
pop
cmp
inc
jl
or
sbb
decl
loop
or
in
xor
inc
test
addl
mov
fs
add
sbb
sub
mov
pushl
mov
or
ret
mov
movsb
or
sbb
imul
lcall
add
sub
sbb
imul
cmc
in
xchg
cli
incl
adc
xor
data16
inc
rcl
push
pop
adc
jno
shll
cwtl
cmp
outsb
sbb
aad
dec
call
test
jp
fimull
lcall
mov
inc
jns
lea
test
sbb
lcall
adc
ja
mov
sub
icebp
ljmp
inc
test
or
cmp
or
out
in
outsl
nop
bound
call
filds
scas
or
mov
sub
call
push
jge
into
jmp
sub
add
mov
outsl
cmc
sub
xor
pushl
push
cld
incl
mov
lcall
mov
add
pop
xchg
add
jg
or
and
sahf
dec
xchg
or
rcrl
or
ss
call
incb
add
data16
ljmp
inc
push
mov
lret
inc
nop
stc
sbb
sar
decl
loop
inc
adc
popa
mov
int
pop
sbb
movsl
push
push
inc
fs
call
pop
sbb
insb
test
les
pop
push
incl
and
pop
fmul
and
fmull
std
imul
push
mov
and
cmpsl
dec
ret
mov
hlt
imul
inc
xchg
ret
inc
js
inc
in
shlb
xchg
jmp
test
in
loope
movsb
and
jg
mov
and
rcrb
es
js
mov
sbb
insb
add
inc
push
push
leave
sarb
es
xor
rcrl
mov
test
mov
push
or
adc
std
sbb
mov
ljmp
dec
xor
mov
or
xchg
xor
push
nop
hlt
push
inc
cmp
add
inc
insb
or
incl
je
lock
ret
xor
ja
xchg
mov
out
into
in
ljmp
test
in
popf
sbb
or
sbb
mov
add
decl
xor
jbe
mov
mov
pop
or
insl
mov
sbbb
dec
xchg
stc
bound
ljmp
fs
jg
mov
mov
cmp
sbb
push
jge
mov
add
push
not
out
mov
fwait
pop
cmp
pushl
sub
loop
mov
xchg
fcmovb
lcall
sbb
mov
xor
pop
in
arpl
lods
movsb
xchg
or
sbb
cli
pop
jno
scas
addr16
pushf
add
adc
lret
ljmp
adcb
push
jmp
push
xchg
or
xor
push
xor
push
std
call
rolb
in
sbb
outsb
mov
ljmp
jo
repnz
stc
adc
call
jg
daa
mov
xlat
inc
hlt
inc
and
and
cmp
test
mov
lods
sbb
hlt
ljmp
clc
xchg
stc
mov
inc
cmp
add
cmp
popa
mov
lcall
orl
and
out
test
push
ds
push
xor
or
inc
jecxz
inc
or
or
lds
mov
push
xorb
lock
pop
dec
pop
ret
loope
add
movsb
add
mov
add
sbb
or
jb
mov
cmp
stos
adc
ret
pushf
rorb
andl
insl
decl
jo
insl
pusha
mov
stos
cwtl
jno
shr
dec
jge
mov
pop
jno
out
je
cmpsl
fdivp
cld
lcall
fiaddl
jae
push
cmpl
inc
cltd
xchg
movsl
adc
sub
mov
pop
icebp
aaa
outsb
sbb
pushf
sub
pop
cmp
inc
lcall
mov
aam
call
xor
nop
icebp
jb
mov
pop
sub
repz
mov
aam
jge
fmuls
and
push
out
loop
push
adc
sbb
sub
pushl
aam
and
aad
in
repnz
ljmp
orb
push
cmp
mov
arpl
incl
xor
mov
mov
push
dec
jbe
dec
in
add
aad
pop
in
cmp
xchg
int3
push
dec
pushl
lret
or
jns
js
push
pop
push
ljmp
mov
addl
and
add
mov
aaa
fwait
call
arpl
jmp
aad
jno
mov
add
int3
pusha
iret
mov
rol
xor
xor
in
sbb
clc
data16
hlt
inc
add
fsubs
push
pop
dec
lods
loope
fsubs
mov
aam
sbb
aaa
cld
outsl
adc
test
jo
cmp
lock
leave
inc
push
add
cmp
fcmovb
pop
call
or
push
test
and
mov
inc
xchg
xchg
mov
jo
pop
clc
pop
dec
pop
or
stc
int3
roll
dec
shrl
inc
add
add
adc
out
push
xor
faddl
xor
ljmp
adcl
data16
jno
add
hlt
pop
add
push
jecxz
int
clc
mov
sbb
sub
push
jo
mov
pop
fwait
inc
loop
pop
push
cmp
xchg
xor
or
incl
cmp
pop
sbbl
cmp
xor
mov
fidivrs
xchg
out
cmp
add
push
pop
dec
fcompl
dec
fisttpl
pop
aam
or
call
int3
cmp
call
sub
mov
out
adc
jp
clc
dec
mov
fs
pop
pusha
mov
out
scas
mov
lcall
and
in
cmp
cltd
jp
mov
pop
in
loopne
lock
out
inc
or
movsb
push
ds
push
fisubrs
dec
inc
xor
mov
mov
mov
ja
pop
fsubr
dec
lock
xor
decl
pop
fstl
mov
jg
repnz
in
movsb
incl
xor
mov
sub
sub
adc
pop
ja
pop
mov
inc
jp
repz
pop
enter
inc
push
ret
cmc
push
inc
aaa
push
clc
ljmp
inc
std
fwait
movsb
out
mov
insb
int
adc
outsl
outsl
decl
mov
lods
fcoml
shlb
xlat
inc
cmp
bound
mov
xorl
jnp
cmp
add
and
in
fdivrl
cmp
jge
push
js
mov
jecxz
pop
int
aam
mov
fstpl
and
inc
inc
incl
and
lods
popa
rorb
mov
add
cmp
cmp
or
add
xlat
sub
int
ljmp
add
pop
inc
ja
mov
call
flds
mov
fiadds
dec
bound
sbbl
fildll
mov
dec
or
sub
fildl
in
pop
mov
sbb
cmc
in
jae
jb
push
imul
rcr
cwtl
shll
lock
call
mov
cltd
dec
ss
inc
ljmp
add
sbb
je
mov
fldt
stos
and
sbb
shrb
xchg
scas
cli
fisttps
push
pop
pusha
mov
or
popa
ds
push
gs
incl
cld
mov
or
pop
push
je
sbb
xchg
push
push
movsb
push
inc
jl
xor
call
sbb
dec
mov
ret
push
or
or
inc
lret
add
repnz
cwtl
xchg
mov
lock
fnsave
cmc
pushl
pop
test
jmp
and
sahf
outsb
shlb
incl
dec
dec
fwait
pusha
xor
jb
push
add
rolb
incl
hlt
xchg
repnz
loopne
sub
movsl
pusha
decl
bound
scas
push
outsl
dec
cmp
add
push
pop
out
pop
movsl
imul
cltd
cwtl
xor
test
pop
movsl
dec
test
inc
add
mov
xchg
inc
mov
adc
cmpsb
or
add
sub
inc
push
xor
jg
decl
bound
adc
jns
imul
push
push
into
popa
out
cs
hlt
fsubrl
aam
ret
pop
outsl
fistpll
call
and
jg
aas
jl
shl
or
or
sub
js
mov
inc
test
lcall
add
js
out
cmpsl
dec
fildll
jmp
xor
inc
mov
fdivl
xchg
add
sub
or
inc
mov
add
mov
jp
push
dec
loope
call
lcall
popl
push
xor
or
das
in
lods
mov
or
ljmp
xor
inc
cld
mov
sbbb
jae
rclb
mov
cmpl
mov
fadd
pushl
das
and
push
add
aas
cli
hlt
push
pushl
sbb
adc
je
dec
xor
fmull
pop
add
push
out
and
jmp
add
mov
add
fs
das
pushf
nop
lret
enter
clc
mov
mov
movsb
cmpl
and
inc
inc
inc
lods
mov
push
ds
inc
stc
jo
jbe
cmp
push
pop
cli
mov
push
sbb
mov
bound
push
sub
cld
bound
and
inc
xor
mov
push
dec
push
dec
mov
pop
xchg
lcall
outsl
sub
sub
ficoml
inc
mov
movsb
xchg
clc
nop
add
je
test
clc
call
ljmp
dec
roll
mov
test
stos
popf
pop
or
xor
pushl
mov
cwtl
inc
xor
es
pusha
mov
or
inc
call
fsubl
and
push
mov
es
jg
mov
mov
or
enter
in
mov
or
call
mov
and
pop
lret
popa
addl
sahf
xor
stos
sahf
adc
sub
jmp
sbb
shrb
mov
mov
fisttps
inc
adc
sub
inc
inc
roll
cld
aaa
jl
addb
pop
mov
jb
out
mov
mov
cmp
incl
mov
ret
inc
inc
xor
ret
cmpsb
cmc
incl
xor
insb
push
add
sbb
ljmp
int3
das
mov
outsl
or
out
lret
mov
push
ret
ljmp
pop
in
pushl
inc
or
in
and
inc
ret
pop
js
cmp
mov
mov
in
push
aas
in
clc
or
push
cld
sbb
cmp
fwait
aam
add
mov
outsl
clc
jg
popf
xchg
mov
push
jmp
inc
jg
push
push
sbb
inc
mov
lcall
and
add
or
pushl
test
dec
rorb
gs
adc
jle
js
or
adcl
in
rclb
adc
nop
loop
sbbb
add
add
mov
loop
insl
lods
pop
xor
push
bound
sub
out
or
cmp
call
jne
add
std
sub
adc
enter
push
inc
add
shrb
dec
cmp
jmp
add
test
fs
jecxz
mov
and
leave
sahf
mov
mov
mov
or
pop
inc
mov
pop
adc
or
xrelease
cmpsl
mov
dec
push
dec
add
sub
imul
and
inc
mov
adc
pop
jbe
push
jbe
jmp
sbb
cmp
and
jns
ss
mov
insl
insl
push
adc
movsl
mov
cltd
out
push
cmp
cltd
add
add
lcall
inc
ud0
inc
shlb
push
imul
das
cli
incl
dec
sub
pop
inc
mov
clc
adc
jns
jo
pop
jmp
adc
les
out
scas
inc
xchg
sti
push
sbbl
xor
inc
mov
out
add
cmp
cli
gs
jg
xor
push
cmpsb
loope
movsb
dec
cltd
cs
addb
lahf
call
mov
lcall
xchg
sub
sub
mov
rorl
xchg
ret
add
scas
xchg
push
test
in
add
lcall
fs
xchg
cmp
or
loopne
lret
pusha
aam
lea
andl
mov
mov
cmpsl
xchg
dec
test
xor
cli
jo
inc
sbb
xchg
xchg
jo
and
mov
xchg
push
mov
popa
stos
jg
add
push
sahf
jl
pop
xor
dec
dec
les
mov
inc
jno
sub
pop
adc
call
mov
imul
les
adc
sbbb
jmp
es
and
test
call
sbb
mov
xchg
cwtl
adc
mov
push
pop
adc
data16
mov
cli
aaa
rol
lods
sbb
xor
sub
stos
xor
sub
cltd
xor
ret
call
add
push
insl
imul
test
aad
and
ljmp
fisubrl
lret
in
shlb
mov
inc
lock
mov
sub
cmc
int3
inc
rcr
lods
mov
iret
pop
adc
lds
cmpsb
shll
imul
pusha
dec
decl
or
xchg
cs
mov
loop
xchg
mov
es
rol
xor
imul
dec
fstl
movsl
inc
dec
pop
push
ljmp
ffree
in
loopne
xlat
pushf
imul
addb
dec
enter
sub
hlt
and
jo
mov
decl
lcall
fcoml
or
sbb
stos
xchg
dec
jmp
dec
push
add
mov
cmpsl
ds
push
push
push
xor
ss
add
add
test
frstor
pop
test
push
mov
enter
xchg
ret
mov
das
mov
mov
fildll
stos
popf
rorb
int3
outsl
clc
fisttps
pushf
mov
insl
cmp
les
repz
call
xor
mov
ret
sub
mov
lcall
push
dec
sbb
mov
adc
sbb
ljmp
push
arpl
loop
lcall
ljmp
pop
hlt
inc
dec
add
nop
pop
and
addr16
bound
inc
push
jecxz
push
add
add
mov
sbb
add
leave
fsubs
inc
jns
push
dec
mov
out
push
int
sahf
pop
or
jmp
sub
decb
jg
hlt
mov
aas
bound
lea
jg
pop
dec
dec
inc
and
sbb
mov
and
jge
or
ror
xor
or
js
push
push
cmp
popa
test
ja
push
inc
sbb
test
xchg
adc
xor
mov
into
push
jle
movsb
and
insb
xchg
inc
repz
addr16
mov
dec
cltd
cli
jns
jnp
cmpsl
repnz
xlat
call
mov
push
cmpsb
ljmp
clc
rorl
test
push
imul
stc
movsl
dec
adc
jp
gs
lds
mov
inc
sahf
cmp
xchg
push
adc
decl
ret
xchg
and
push
stos
and
and
mov
mov
dec
int3
mov
mov
push
adc
jg
loope
pop
adc
push
cmp
shl
mov
int
fistl
divl
dec
mov
test
jnp
je
sahf
in
add
es
cmp
mov
xor
addb
clc
lods
shl
fnstcw
pop
fistl
inc
test
xor
insl
dec
fs
lcall
sti
adc
push
int3
xchg
aam
inc
loopne
jmp
sub
sbb
jbe
mov
jb
dec
shlb
das
and
push
cmp
lods
xor
arpl
shll
hlt
jg
xchg
mov
in
mov
hlt
push
sbbb
push
pop
outsl
ja
dec
mov
pop
ljmp
or
adc
mov
and
inc
or
pushf
mov
add
sbb
int3
sbb
decl
js
incl
les
mov
mov
loopne,pt
xchg
ljmp
mov
xor
or
xchg
xchg
mov
or
hlt
jp
pop
int
push
xchg
cmpsl
inc
rolb
cmp
push
push
sub
lds
sub
lods
rclb
push
lcall
add
enter
lret
addr16
nop
or
notb
std
jmp
or
push
cmpsb
and
lret
lods
dec
out
jo
jge
ljmp
pop
test
xor
sub
inc
pop
xchg
mov
pop
mov
mov
add
call
mov
jg
or
stos
sbbb
rcrb
lock
and
push
inc
aam
push
sar
or
add
and
divb
fistl
add
inc
mov
sub
inc
jmp
xor
loop
jmp
xchg
and
xchg
movlhps
pop
sbb
cli
mov
aaa
call
mov
imul
or
mov
sub
add
out
mov
xchg
jb
out
pop
jg
inc
cld
les
or
sub
add
inc
fisubrl
les
inc
inc
movsb
in
outsb
inc
ss
jno
movsb
outsl
shrb
adc
rcrb
call
roll
or
inc
jo
add
sarb
jmp
movb
add
iret
cwtl
loopne
xor
insl
ljmp
sub
mov
push
jp
add
adc
xchg
pop
addr16
adc
xor
stos
mov
mov
nop
and
jl
outsb
sub
or
sbb
shrb
jle
jne
outsb
inc
mov
rcl
lock
decl
xchg
mov
dec
rorb
hlt
out
mov
mov
das
sar
repnz
and
call
cmp
bound
xor
pop
rclb
pop
lods
mov
ret
ljmp
xchg
es
gs
out
jle
loop
cmp
pop
insl
bound
shrb
add
out
imul
pop
lock
call
sub
or
or
xor
scas
push
outsl
add
stc
nop
insl
das
or
pop
jl
repnz
mov
imul
sti
add
or
adc
clc
push
test
add
cmp
loopne
sahf
shll
cmpsb
inc
mov
jbe
xlat
pop
mov
int
movsb
add
mov
imul
inc
lock
fstl
pop
or
xchg
or
jno
movsb
inc
mov
cltd
cmp
call
pop
and
repnz
inc
sub
pop
sbb
int3
or
lods
out
sub
repz
out
and
cs
call
dec
lock
sbb
jbe
mov
les
adc
lods
inc
and
inc
jae
mov
mov
test
inc
decl
mov
ljmp
mov
sahf
loop
les
cmpsl
mov
es
ljmp
jg
ror
ds
stos
out
adc
lods
mov
test
add
mov
or
cs
xor
filds
push
incl
subl
cmp
ljmp
outsb
ljmp
add
daa
jp
mov
pop
push
xor
cmp
and
and
adc
sub
data16
icebp
decl
jge
mov
ret
add
insb
test
sub
xchg
dec
cs
push
or
in
and
ret
aaa
sbb
call
icebp
push
jmp
mov
push
pop
ret
or
add
add
mov
fadds
push
mov
inc
mov
call
jae
xchg
mov
decl
or
addb
xchg
add
mov
dec
xor
cmp
call
out
into
push
es
int3
jecxz
shlb
fmuls
lea
push
xchg
jb
jns
dec
decl
loopne
push
orb
loope
lret
and
xchg
hlt
insl
inc
xor
ljmp
adc
js
les
push
and
inc
mov
mov
fsubrl
or
and
mov
ljmp
cwtl
daa
and
scas
dec
or
loope
and
jg
ret
bound
outsb
xchg
test
shll
inc
ds
into
les
push
call
mov
test
xor
out
shrb
imul
loop
dec
add
or
push
push
jp
sub
clc
decl
mov
test
ror
es
scas
dec
adc
shll
decb
repnz
lods
into
push
rclb
mov
jge
and
push
sub
movsl
push
stos
pop
ret
cmp
fwait
inc
loop
hlt
push
mov
repnz
stos
push
pop
shrl
and
sub
ret
loop
out
clc
fcomip
xchg
lock
flds
inc
lock
xor
pop
std
ljmp
inc
jne
xor
push
xchg
arpl
fs
sbb
gs
mov
xor
scas
push
bound
shlb
mov
insl
test
jbe
out
push
test
sbb
das
cmpsb
dec
fsts
int3
jmp
js
testl
sbb
jo
pushf
lret
fs
cld
out
into
cmp
sar
pop
hlt
inc
mov
aad
sbb
cmp
push
or
push
pop
ljmp
lcall
loopne
push
jno
jmp
in
cmc
lcall
inc
adc
movsb
js
push
ds
stos
add
inc
stos
test
lcall
es
pop
shl
jbe
dec
dec
xchg
adc
dec
dec
dec
dec
jns
cli
sub
decb
addr16
les
lods
aas
sti
mov
nop
dec
aas
or
ljmp
in
jbe
js
push
dec
jmp
inc
pop
in
fidivrs
out
out
cli
mov
mov
mov
xchg
insb
mov
mov
andl
pushl
mov
push
jmp
dec
lret
mov
ret
pushl
and
sbb
or
leave
int3
test
clc
ljmp
mov
push
jle
push
dec
outsl
mov
and
or
pop
cmp
pushl
subb
push
adc
movsl
mov
lds
subb
hlt
pushl
add
push
pop
push
jae
mov
mov
imul
cmpsl
adc
imul
sbb
stc
or
cmp
pop
xchg
aaa
mov
mov
pop
xchg
ljmp
sti
pushf
insl
xchg
int
cmp
lcall
cmp
sub
add
sbb
mov
clc
jmp
mov
lret
je
add
fstp
out
cmpsb
jns
add
or
call
mov
xchg
adc
dec
sub
add
push
test
call
cmp
call
mov
inc
movsb
xchg
lcall
stc
inc
and
inc
repz
cmpsl
cmpsl
pop
mov
dec
jno
and
xchg
or
push
fwait
push
int3
in
inc
leave
mov
ds
and
ljmp
dec
jl
mov
jns
aas
push
inc
and
push
or
outsb
nop
jne,pt
mov
jecxz
cmp
or
ljmp
in
mov
outsb
add
das
sub
mov
leave
xchg
or
clc
cmp
mov
lods
mov
into
mov
les
inc
insl
mov
sbb
mov
mov
sysenter
pop
xlat
fcoms
ret
sub
and
sar
jns
jp
jb
sub
mov
std
pop
mov
stos
adc
fdiv
adc
nop
sub
jg
shrl
cmc
enter
pop
ja
cmp
idiv
fists
sbb
mov
pop
and
sbb
fwait
js
int
jae
xchg
push
dec
popa
jl
js
scas
push
int3
rorl
or
inc
pop
loop
addb
in
push
adc
push
xor
push
in
cmp
movsb
fucomp
add
insb
in
xor
insb
mov
jmp
jbe
fs
in
dec
data16
daa
mov
ljmp
dec
cli
dec
push
mov
xor
scas
cmpsl
xor
outsb
dec
xor
cli
lcall
fs
fmul
add
aas
xor
jns
mov
sub
sahf
jle
lahf
adc
mov
pop
loope
pusha
nop
adc
add
sbb
mov
jge
add
pushl
ds
jb
movb
iret
mov
out
push
mov
mov
push
out
jo
sbb
add
call
and
dec
mov
sub
adc
lret
int3
xchg
in
and
pop
mov
lret
mov
xchg
out
jle
insl
aad
clc
es
mov
cli
mov
and
or
cs
sub
incl
lock
lea
imull
mov
mov
add
call
idivl
inc
mov
inc
fwait
int
cmp
fwait
xor
popf
dec
int
cltd
into
ja
into
jecxz
sbb
jl
xlat
fmul
jnp
mov
cmp
stos
out
push
mov
cmc
lods
fnstenv
ds
pushl
push
in
scas
push
sub
test
cmp
inc
add
dec
dec
ljmp
js
pushf
push
cmpb
pushf
xchg
out
xor
jp
cwtl
mov
cmp
and
inc
or
das
out
and
inc
push
xchg
shl
decl
je
mov
daa
lahf
sbb
insl
ss
repnz
daa
dec
pusha
outsb
dec
or
adc
in
inc
les
je
ljmp
pushf
fldt
mov
mov
add
jg
test
fnstcw
ljmp
int3
in
mov
cli
movb
cmp
loopne
inc
test
imul
sub
xlat
sbb
fdivp
imul
faddl
pop
nop
push
enter
and
jmp
ret
inc
out
inc
xchg
inc
jmp
rcrl
cmpsb
outsl
jnp
sub
daa
sub
mov
mov
adc
sub
and
stc
lcall
sti
inc
add
pushf
mov
test
lcall
rorb
call
jle
cltd
ds
cld
xchg
shrl
jo
adc
scas
add
mov
scas
ljmp
loopne
cmpxchg
cmp
cmp
cmp
lods
imul
push
hlt
push
dec
inc
mov
adc
dec
push
loop
lcall
hlt
incl
add
adc
movsb
sarl
inc
in
cld
pushl
je
mov
loope
jmp
enter
cli
jae
fs
inc
call
lcall
cmpsl
outsl
bound
nop
bound
mov
mov
lds
mov
sti
xchg
ja
ds
ja
xlat
les
dec
bound
lret
jbe
daa
pusha
fldl
clc
adc
jge
push
mov
loopne
adc
ljmp
data16
nop
pusha
push
or
imul
sti
scas
pop
add
push
cld
xchg
clc
xchg
incl
push
mov
push
pop
ret
stos
call
xchg
xor
fldt
ret
push
jns
ljmp
test
rolb
xor
decl
clc
adc
test
bound
or
rolb
adc
fldcw
push
daa
or
insb
or
fs
sbb
jp
sub
in
mov
cmp
pop
mov
mov
leave
mov
iret
lahf
inc
pop
sbb
xlat
pop
rol
add
or
jp
je
xor
push
mov
cmc
call
mov
test
lea
xchg
mov
xchg
mov
outsl
mov
cmp
movsb
xchg
cli
adc
mov
call
mov
or
or
pop
pushw
cwtl
stc
inc
xchg
sbb
push
pop
icebp
in
push
pop
xor
jg
and
popa
push
sub
sbbl
fwait
std
dec
addr16
shlb
sbb
jg
pop
xor
in
mov
mov
lds
cmp
adc
xchg
out
adc
insb
sbb
jg
xor
cltd
lahf
xchg
int3
jo
sub
or
stc
movsb
xchg
pop
in
ja
cmp
das
adc
pop
pusha
jle
push
and
adc
ljmp
dec
or
add
aam
clc
call
pop
sub
movl
cld
incl
pop
mov
and
pop
xor
push
xchg
mov
je
roll
mov
je
adcl
push
xchg
sbb
adc
rorb
push
sbb
inc
aad
adc
lock
and
push
inc
adc
repnz
add
mov
mov
push
outsl
adc
pushf
call
dec
les
or
push
add
pop
aad
or
adc
call
ljmp
pop
fdivrs
rcll
sbb
out
incl
sbb
pusha
pop
sub
dec
add
in
or
bound
or
sbb
popa
xchg
lods
jae
mov
jmp
lcall
sbb
inc
xchg
test
mov
fdivl
cmp
push
popf
arpl
xchg
jno
insl
jbe
insl
mov
rol
addr16
shll
imul
mov
sbb
insb
jo
imul
insb
fsubrl
pop
jbe
cld
incl
sub
mov
mov
sbb
iret
loop
in
jl
mov
sub
ficoms
xchg
jg
adc
inc
sbb
inc
in
decl
dec
cli
ret
rcrb
rclb
gs
xor
pop
or
decl
jp
xor
push
mov
popa
or
cmp
xchg
pushf
jae
or
cld
jg
mov
jl
cmc
clc
roll
or
mov
or
and
bound
mov
insl
les
inc
sbb
sub
fiaddl
ret
inc
push
mov
sub
jg
lea
out
or
popf
and
roll
repz
rorl
xchg
rolb
cli
dec
rcrl
fisttpl
std
xor
xor
pushl
decl
gs
mov
push
dec
jbe
stc
out
fbstp
xchg
cmp
cld
mov
mov
imul
jg
xchg
lods
imul
push
sub
imul
shlb
es
pusha
cmpl
mov
xchg
pop
sub
nop
push
xchg
fiadds
xchg
mov
mov
icebp
fs
inc
cmpsl
sub
inc
sbb
shll
sbb
call
loopne
mov
fisttpl
pop
repz
cltd
jg
imul
loopne
mov
mov
mov
mov
cld
mov
leave
add
jns
stos
lahf
jb
roll
push
pop
add
ja
rcr
es
filds
or
lret
sahf
xorb
pop
and
inc
dec
enter
inc
push
test
in
mov
incl
es
jmp
mov
pop
inc
test
pop
andb
or
add
adc
outsl
subb
or
out
inc
fstps
jecxz
ret
jmp
ss
jno
or
cmp
and
out
inc
call
repnz
decl
and
leave
or
xchg
test
mov
xchg
mov
cmp
lods
xchg
pop
jmp
xchg
sub
pop
mov
inc
add
jb
aad
pop
decl
or
lods
mov
in
out
daa
inc
lds
push
sbb
pushl
hlt
xchg
push
lock
into
push
outsl
inc
xchg
mov
fldl
sub
pmuludq
inc
sub
pop
push
sar
add
mov
jl
ret
lcall
jmp
jge
arpl
and
xor
leave
xor
test
pop
push
cltd
je
push
inc
incl
adc
sub
jae
aaa
cltd
sar
call
ss
enter
push
cld
sub
rol
call
outsl
xchg
loop
movsb
and
test
fs
cmp
jg
add
es
dec
adc
sar
sbb
repnz
mov
scas
adc
mov
aam
ret
ret
pop
cs
lret
out
lods
xchg
stos
stc
inc
xchg
cld
fadds
pusha
or
jmp
cwtl
outsb
movsb
push
mov
sub
cwtl
or
mov
or
xor
lcall
dec
xchg
les
and
ret
pop
loopne
in
rorb
jge
sub
push
pop
stc
cwtl
sbbl
jmp
fmul
push
pop
iret
xlat
push
cmpsl
pop
les
adc
sahf
mov
rorb
inc
repz
jo
mov
dec
jecxz
ljmp
xor
lock
and
arpl
adc
loop
xor
mov
and
lds
jg
int3
jno
sbbl
jno
fwait
movsb
jmp
cld
xchg
sub
push
and
gs
int
xor
js
or
hlt
pop
loopne
mov
push
nop
mov
lret
rclb
xor
mov
xor
dec
jle
inc
jb
dec
cli
filds
dec
xchg
or
jl
mov
or
mov
push
loope
pop
mov
or
enter
mov
movsl
xor
lcall
ljmp
gs
outsl
inc
jb
mov
mov
call
sub
roll
sti
test
aad
dec
repnz
rcrb
push
das
xor
loope
sbb
pop
test
push
test
xorb
addl
mov
cmp
add
fildl
pop
fldl
or
clc
mov
call
ret
push
cltd
out
ret
and
sbb
xor
pop
jmp
incl
repnz
inc
pusha
mov
repz
and
pushf
imul
and
cmpsb
xchg
pusha
cmp
decl
xor
push
imul
jge
dec
xorl
rorb
stos
jecxz
xchg
mov
andb
xlat
test
and
xlat
push
aad
test
cli
push
xchg
sub
jno
call
je
push
into
mov
mov
and
dec
push
pop
mov
sbb
inc
push
test
jp
clc
inc
out
jbe
xchg
shl
or
jb
inc
mov
jmp
mov
sbb
ss
call
leave
lret
xchg
scas
dec
xor
sti
push
inc
cmp
es
popl
dec
popa
out
mov
sub
scas
jmp
push
scas
or
add
nop
xchg
xor
jg
aaa
push
dec
bound
idiv
mov
je
inc
lods
xchg
add
clc
mov
cmp
cmp
iret
or
imul
ret
enter
outsl
pop
jmp
inc
push
xor
das
inc
jg
push
mov
pop
stc
loop
das
mov
push
cmpsl
dec
out
jmp
jl
rcrl
loopne
es
shl
sbb
dec
add
cmp
mov
ret
sti
insl
add
push
data16
mov
xchg
cmc
cs
dec
pushf
xchg
aam
add
push
dec
daa
pop
cli
mov
inc
mov
popa
fcmovnb
cmp
movsl
mov
bound
insb
repz
mov
hlt
icebp
outsl
jge
cmp
cmp
pushl
adc
dec
js
xacquire
std
call
imul
pop
mov
loope
cmc
aaa
dec
ret
out
mov
lcall
jge
lret
fdivs
negb
dec
dec
pop
push
clc
pop
ds
outsl
in
popf
push
lcall
add
sbb
xchg
rclb
icebp
cmp
xor
and
push
xchg
jns
adc
dec
pusha
repz
cmp
inc
sub
pop
or
jmp
jae
push
xchg
jmp
pop
or
sbb
inc
jne
mov
add
and
jecxz
ljmp
addr16
mov
repnz
mov
cmp
loope
test
push
jbe
icebp
jg
addr16
sbb
cs
and
ret
and
je
add
test
pop
add
incl
cwtl
add
adc
ret
enter
xor
push
stos
es
sub
inc
outsl
mov
or
adc
cs
cld
push
cld
inc
xchg
js
or
bound
push
dec
push
sahf
daa
incl
sub
dec
push
dec
insb
test
icebp
or
mov
insl
repnz
mov
adc
scas
jp
jmp
push
and
xchg
sub
scas
add
outsl
insb
ss
jge
sbb
jle
ss
push
jge
out
call
jg
mov
in
cmpsl
mov
pop
jle
idivl
addr16
clc
jle
cmp
jle
sarb
std
push
jg
outsl
ret
lock
sub
addb
sub
cmpsl
sbb
xchg
and
add
decl
std
jne
adc
cmp
cli
out
or
mov
daa
push
jbe
cmpb
jae
cld
fsqrt
test
add
faddl
scas
jbe
ret
push
fldenv
pop
xor
push
loop
sbb
repz
adc
lcall
jmp
imul
arpl
add
push
mov
inc
jmp
imul
add
or
mov
xor
cmp
pop
decl
xorl
shll
push
js
out
push
xorb
in
push
add
call
jno
test
push
pop
pop
pop
pop
into
aad
pop
les
call
out
inc
jl
shrb
std
ljmp
in
aad
cltd
ret
pusha
and
adc
jg
outsb
mov
cmp
pop
sbb
insb
ret
mov
push
cmp
std
jg
push
inc
outsl
sbb
jg
dec
jo
cmpsb
and
call
cmp
in
out
sbb
jl
loop
mov
adc
mov
dec
xlat
adc
ja
dec
ljmp
cli
mov
std
inc
push
dec
jg
adc
xlat
and
cli
jno
mov
fcmovnu
lea
inc
bt
cmc
lock
jo
test
jmp
adc
mov
jae
cmp
mov
cld
ja
add
and
mov
add
je
xor
mov
aaa
cmp
cmp
int
sub
adc
leave
jb
push
lcall
pop
js
ljmp
xchg
push
outsb
dec
push
pop
lahf
mov
sbb
mov
cld
jmp
lret
out
loop
mov
mov
js
push
sbb
jns
test
clc
popa
pop
out
mov
xlat
je
popa
xor
out
mov
sbb
sbb
sbb
mov
sbb
popa
dec
popa
daa
imul
xor
lret
add
std
and
push
lods
mov
notl
jge
enter
popa
add
or
aaa
ljmp
lret
scas
sub
and
mov
mov
cmpsb
lcall
fists
out
lret
xchg
je
nop
outsl
lret
push
jg
inc
orl
mov
push
cmpsb
sub
jge
mov
ret
mov
and
sbb
or
test
mov
xchg
imul
cmpsl
js
outsb
xor
mov
in
inc
dec
fidivrl
sub
fmuls
std
decl
fwait
test
mov
fwait
out
add
mov
loopne
addr16
test
xor
push
pushf
inc
xor
arpl
cmp
je
ss
call
stos
mov
add
add
and
pop
push
rorl
pusha
popf
mov
push
push
push
in
pop
jmp
and
lock
or
dec
sti
les
fnstcw
ds
pop
lahf
inc
push
addr16
incl
pusha
repz
xchg
jno
roll
and
aam
dec
sbb
add
in
mov
movsl
cli
call
push
aas
cmpsb
mov
ret
loopne
ljmp
dec
mov
addr16
sbb
sbb
mov
cltd
cmp
icebp
sbb
dec
shrl
das
clc
outsl
xor
movsl
sti
ja
pop
outsl
in
cmp
add
ljmp
mov
push
xorl
movsb
fwait
mov
and
mov
aaa
sbb
scas
jle
pusha
xor
or
jg
pushl
aad
xchg
cmpsl
sbb
notb
pop
cmp
and
arpl
shlb
mov
sbb
cmpsl
mov
inc
sahf
xchg
stos
stos
ljmp
xor
add
jl
mov
sbb
mov
test
cld
data16
lret
mov
mov
mov
mov
jmp
or
pop
xchg
leave
pop
jge
sbb
xchg
into
jle
push
out
xchg
jl
cmpsl
pop
and
pop
adc
push
hlt
mov
pushl
rorl
dec
adcl
mov
in
idivb
iret
test
sbb
out
or
test
ds
aam
mov
sub
lds
rorl
fwait
dec
or
mov
jmp
mov
test
mov
mov
aaa
pop
imul
mov
mov
push
dec
jnp
adc
cmp
xchg
das
mov
sbb
call
cmp
icebp
call
adc
dec
test
xchg
inc
and
flds
jl
ss
dec
xor
fists
cmp
xor
push
push
xchg
or
inc
sbb
xchg
add
hlt
call
dec
inc
push
pop
jno
icebp
xor
push
mov
lods
popa
add
cmp
pushl
push
jae
jle
jo
mov
inc
adc
jbe
arpl
ret
dec
xorb
add
adc
push
test
xor
mov
ret
and
mov
mov
pop
mov
jg
push
add
mov
and
jl
or
sub
int3
inc
insb
lods
push
insl
dec
jb
or
xor
jnp
sub
push
dec
jp
cmp
mov
mov
mov
jns
cmp
leave
fdivrs
xlat
cmp
adc
lcall
push
cmpb
stos
les
rcll
mov
mov
pop
hlt
push
dec
xlat
inc
sub
lods
fildl
test
sbb
incl
xchg
roll
cmp
loop
sbb
in
adc
lahf
mov
sbb
test
nop
mov
hlt
mov
sub
sbb
call
inc
in
sub
xchg
inc
xor
das
mov
imul
push
loopne
mov
lods
push
push
mov
js
movb
movsb
je
clc
fcomip
mov
loop
jle
push
shlb
adc
aad
gs
ss
mov
adc
jo
fdiv
or
inc
sub
cmp
or
and
call
xchg
xor
xchg
add
adc
sar
jmp
push
pop
lds
xchg
mov
cmpsl
loop
adc
cmp
adc
inc
pusha
ja
push
adc
aaa
or
rcrb
and
bound
jnp
leave
mov
jg
jmp
and
int
push
les
sahf
sbb
xchg
inc
popa
adc
test
pop
jle
ret
divl
push
mov
aad
adc
aad
sbb
push
mov
mov
mov
push
popf
jl
add
cmc
imul
mov
cmp
push
jle
ljmp
mov
daa
cwtl
rclb
mov
mov
clc
cwtl
jae
push
push
sub
pop
bound
add
leave
cmp
mov
ljmp
or
sbb
or
ljmp
mov
sub
xor
add
lods
lock
sbb
jb
sbb
addr16
inc
out
clc
in
push
pop
and
bnd
push
pop
gs
scas
xchg
pop
out
xchg
sar
lcall
stos
mull
push
lcall
gs
jb
xchg
xchg
fnstsw
push
xor
imul
sub
enter
jno
out
fdivrp
inc
in
ljmp
rcrl
call
add
insl
fisubrs
fiadds
xor
dec
xor
pop
fs
dec
sub
call
ret
roll
pop
cld
mov
icebp
mov
call
cmp
xchg
pop
sub
aaa
inc
inc
in
push
push
push
mov
les
cmpsb
push
outsl
ret
pop
sub
fildll
call
ret
das
rclb
adc
pusha
sbb
incl
lret
inc
adc
and
xor
cld
mov
cltd
adc
inc
mov
mov
pop
ret
movsl
pop
cmp
mov
out
out
push
pop
adc
add
js
outsb
or
insb
aad
pop
cwtl
push
and
sti
sub
mov
incl
nop
sub
imul
loope
and
js
jb
in
shll
lcall
push
lret
in
das
mov
adc
fst
jecxz
mov
push
incl
or
cwtl
inc
mov
lret
je
int
rcrl
mov
cld
pushl
pop
sub
and
lock
xor
decl
iret
aaa
nop
xorb
ret
jno
sti
les
repz
into
or
scas
adc
pop
xchg
loope
add
add
loop
sbb
jmp
std
sub
ds
add
decl
lock
cmp
xchg
dec
loopne
mov
pop
in
fildl
filds
jmp
dec
add
stos
adc
and
bound
lahf
push
xchg
leave
xor
test
decl
pushf
pop
adc
xor
adc
adc
push
dec
and
stos
roll
inc
sbb
push
cwtl
roll
adc
cs
daa
std
mov
fbld
lret
cltd
inc
jle
imul
or
dec
into
les
jl
div
or
outsl
clc
jmp
mov
stc
cwtd
mov
lret
mov
sbb
pushl
loope
jbe
and
cmp
push
xor
push
mov
jmp
orb
pop
cmpsl
and
jns
out
xchg
inc
pop
xchg
sbb
mul
fadds
call
sbbl
clc
int
mov
pop
dec
dec
mov
mov
mov
push
cld
jae
and
xchg
mov
loope
fisttps
hlt
dec
mov
jg
xchg
xchg
and
pop
mov
lret
inc
ficompl
mov
cmp
jbe
jecxz
adc
cmp
xor
mov
fadds
jecxz
pop
out
sbb
movsl
fdivrl
std
lcall
ficoml
jecxz
and
or
test
stc
insl
fdivr
mov
in
fimuls
out
scas
and
xor
sub
cmpsb
and
ljmp
outsb
inc
and
or
sbb
mov
jcxz
ljmp
sar
frstor
xorb
incb
std
arpl
mov
sbb
hlt
into
pop
adc
or
inc
or
xor
enter
inc
mov
sub
or
cmp
push
ret
adc
jecxz
xchg
mov
pop
icebp
loope
or
xor
decl
stc
xchg
and
add
and
jne
adc
add
add
aad
jbe
pusha
add
adc
imul
mov
jo
pop
mov
les
cltd
cmp
push
cwtl
fxch
aaa
inc
fidivrs
lcall
push
test
sar
jb
icebp
pop
pop
sub
push
xchg
inc
xchg
jne
jmp
decb
outsb
pusha
xor
mov
pop
push
cmc
pushf
fprem1
jecxz
cs
pop
sub
jne
jmp
inc
mov
jae
cmp
loopne
pop
mov
incl
add
xchg
insb
out
jmp
mov
sbb
pop
lds
movsl
test
pop
xchg
dec
ret
xchg
jmp
mov
rcrl
jo
sahf
aas
aaa
add
std
out
stos
mov
adc
add
pop
mov
adc
push
pusha
xor
out
inc
cmpl
scas
fnstsw
in
nop
das
inc
add
pushl
enter
adc
adc
pusha
xchg
mov
push
mov
out
sbb
xor
pusha
std
ljmp
sub
dec
mov
mov
xchg
jg
enter
lcall
mov
stos
jmp
add
or
dec
sub
xchg
adc
or
pop
push
incl
dec
xor
stos
add
repnz
or
lds
and
lahf
mov
repnz
imul
mov
lock
sbbb
mov
leave
mov
les
jp
sahf
jl
jle
jge
push
mov
call
push
push
dec
pop
shlb
daa
push
popa
std
dec
sub
and
add
pop
and
push
test
add
stos
aaa
insl
cmpsb
mov
push
or
call
imul
inc
lock
aam
stos
inc
cmp
pushf
fmuls
out
mov
ljmp
scas
repnz
into
test
stc
rorb
out
pop
push
pop
mov
inc
shll
das
push
ret
ret
insl
ret
out
sti
bound
or
and
dec
cmpb
scas
mov
sub
push
ss
mov
mov
dec
inc
movb
andl
or
add
mov
iret
mov
sti
cli
lret
call
or
imul
jle
ljmp
mov
mov
ljmp
lret
push
mov
inc
mov
or
lcall
ja
mov
mov
insb
rol
jns
adc
sub
in
sbb
or
call
adc
mov
or
jmp
xor
sahf
or
lret
cltd
test
mov
and
push
clc
pop
dec
and
mov
lds
xor
inc
inc
dec
push
cli
mov
lock
cmp
dec
dec
std
pop
pusha
inc
je
push
clc
fwait
mov
sbb
call
jb
xchg
pop
jg
jp
mov
outsl
xor
in
outsl
pop
adc
sbb
mov
xorb
jp
add
int3
aas
or
mov
pop
jg
loope
add
sub
mov
sub
in
cwtl
aam
lds
stc
dec
arpl
mov
sbb
lods
daa
aaa
nop
jbe
xor
aaa
xchg
cli
ljmp
mov
loopne
hlt
aad
adcl
xchg
or
dec
or
or
movsb
jg
out
mov
daa
adc
test
push
dec
jae
mov
gs
outsb
adc
pushf
sti
incl
in
cmp
mov
sbb
jae
push
rcrl
out
lea
pushl
pop
push
test
dec
xor
sbb
mov
push
adcl
leave
icebp
mov
hlt
call
add
nop
mov
cmp
jle
incl
nop
cmp
mov
and
decl
cmp
dec
pushf
jae
push
mov
dec
dec
jle
pushf
lcall
cmp
dec
mov
push
push
scas
dec
inc
xor
pop
je
fcom
sub
cmp
mov
inc
clc
cmp
rcrb
je
push
cmp
and
jnp
lock
mov
push
push
push
jmp
xchg
leave
sub
xor
mov
add
xchg
cmp
leave
adc
fucomip
push
add
lcall
pusha
pushf
dec
push
imull
movsb
movsb
out
jge
sbb
mov
outsb
outsb
mov
sub
xchg
std
pop
mov
ret
pop
cld
mov
and
subb
incl
lods
insl
imul
leave
cmp
lods
pop
pop
loope
mov
test
adc
movsl
xor
push
out
jb
xor
pop
enter
and
ljmp
rorl
call
or
dec
into
adc
xchg
and
fbld
sub
in
imul
loope
clc
mov
ret
das
adc
and
insb
cmp
add
push
pop
sub
test
hlt
or
or
cwtl
out
sub
push
data16
sarb
xchg
jno
push
mov
dec
jecxz
jbe
add
add
or
xor
daa
inc
and
incl
sub
sub
clc
push
and
mov
jp
push
mov
sbb
ja
lcall
call
push
pop
test
adc
in
push
cmp
into
xchg
ret
lcall
dec
enter
fidivrl
xor
gs
repnz
ds
ljmp
or
sbb
dec
dec
pop
push
fwait
andb
mov
and
movsb
pop
nop
lock
xchg
adc
in
shrb
das
movsl
cmpb
cwtl
pop
idivl
ja
incl
jmp
pop
test
std
call
fdivrp
dec
rclb
dec
xor
jg
ret
subb
lock
push
cli
aam
or
dec
icebp
lret
call
push
xchg
lds
or
orl
or
jecxz
in
push
adc
pop
push
lds
push
lds
scas
ljmp
jmp
pop
into
addl
andl
pushl
es
out
mov
adc
or
ss
shlb
push
xchg
out
adc
cmc
mov
or
repz
mov
and
mov
nop
nop
mov
push
jb
lds
jmp
sbb
in
shl
push
pop
mov
mov
lds
imul
mov
in
enter
or
adc
push
outsl
lods
add
ljmp
inc
sub
xlat
dec
imul
xor
cli
call
mov
jns
adc
lods
mov
jmp
push
xchg
stc
int3
pushf
jo
sti
and
or
push
adcb
xchg
dec
lock
pop
outsl
cli
jg
pop
sbb
mov
adc
fwait
push
ror
aam
ljmp
lods
loope
sahf
movsb
jnp
inc
inc
pop
adc
lods
call
push
fbstp
pop
rcpps
je
jg
subb
scas
and
mov
ljmp
xor
or
outsb
push
incl
and
or
in
lods
scas
test
or
sub
pop
sub
or
incl
xor
lods
xchg
or
call
out
cmp
inc
mov
int
add
pop
dec
inc
call
std
call
mov
sub
push
pop
test
lock
mov
ljmp
enter
dec
pop
movsl
inc
ficompl
mov
push
mov
mov
jb
jp
call
sbb
popa
mov
mov
movsl
scas
aas
lock
ljmp
push
cs
xchg
adc
push
add
mov
jbe
in
or
mov
xchg
mov
sub
and
push
into
mov
jno
jg
incl
mov
fxch
sahf
pop
mov
ficoms
imul
clc
jg
push
scas
in
loope
rolb
sbb
call
push
or
pop
mov
gs
dec
mov
mov
push
add
adc
mov
ljmp
mov
movsl
fmuls
or
cmp
jo
sbb
adc
clc
jle
pop
fucomi
repz
add
test
pop
jge,pt
call
ss
xor
test
idivb
push
xchg
sub
mov
fidivrs
gs
mul
mov
loop
repnz
adc
ljmp
orb
mov
mov
sub
pushl
push
xchg
xor
add
cmp
cmp
add
sub
scas
sti
cmp
mov
rorb
mov
mov
push
sub
or
add
repnz
js
into
enter
sbb
incl
nop
lea
das
ljmp
sub
scas
or
mov
icebp
mov
jns
int3
or
cmp
decl
jns
mov
xor
mov
jo
mov
orl
dec
stos
and
and
adc
lcall
stos
jmp
stos
adcl
idiv
pushf
nop
rol
and
scas
cltd
les
mov
cwtl
sar
pushl
mov
lds
outsb
push
outsb
xchg
mov
test
jo
adc
mov
xor
cs
cli
cs
adc
shlb
ret
push
jge
lret
xchg
push
ljmp
repz
jle
stc
aaa
xchg
sahf
call
jmp
outsb
incl
xchg
mov
cmp
pop
mov
cmp
pusha
mov
rcrl
mov
loop
mov
cmpl
call
inc
xchg
xchg
push
into
adc
sub
xchg
and
aaa
cmp
incl
ss
xchg
xchg
movsl
push
test
cmp
pop
insb
and
push
cwtl
sti
mov
cld
fadds
fwait
sti
mov
jae
popf
mov
sti
jo
xchg
push
jmp
decl
or
adc
rolb
sbb
push
cltd
in
sub
add
push
dec
decl
inc
push
lods
loop
lcall
or
jg
sbb
xor
cmp
and
ret
adc
adc
sahf
loope
movsl
and
nop
sbb
inc
sarl
cmp
add
push
cmpsl
inc
and
ljmp
or
les
mov
and
lret
xor
sbb
pop
xchg
and
lock
cmp
lods
inc
loope
pushl
fcom
push
mov
mov
jecxz
arpl
das
sar
sub
movsl
sub
jp
popf
stc
adc
leave
adc
sbb
push
fcomip
jmp
and
or
xchg
xchg
jmp
cmp
aas
dec
and
lcall
ds
test
jnp
or
or
lret
imul
popa
call
xchg
adc
fnsave
xor
imul
scas
pop
decl
das
xchg
js
cmpsb
add
mov
sbb
xchg
imul
sbb
push
jg
jo
std
fstps
sti
icebp
pop
and
mov
test
inc
rolb
or
or
cld
call
in
mov
in
xor
bound
mov
cltd
ror
mov
inc
or
xor
popl
mov
add
enter
cmc
sub
jns
xchg
pop
push
enter
enter
adc
outsb
shl
jo
and
clc
subb
push
ljmp
jg
stos
je
lahf
xor
mov
mov
sub
and
xor
orl
pushl
popl
mov
out
nop
adc
dec
ret
mov
ret
sbb
xchg
xchg
mov
pop
popf
or
int3
pushl
inc
inc
inc
popf
push
iret
mov
add
lods
push
jns
sarl
sbb
ljmp
ss
clc
inc
sub
sahf
lock
fcomip
adc
pushf
pushf
mov
leave
xchg
pop
icebp
xchg
xor
add
ljmp
xor
cwtl
xchg
in
dec
dec
pop
mov
pop
lock
int
aam
jnp
jl
mov
and
jnp
decl
insl
cli
or
outsb
mov
push
andl
and
decl
mov
call
pop
sbb
jge
int
inc
mov
push
in
cs
ss
xchg
iret
ficoms
or
add
jg
pop
sbb
sub
add
xchg
or
jmp
sbb
cli
clc
test
jno
rcl
mov
mov
inc
mov
test
std
stos
das
mov
into
push
mov
xor
mov
test
hlt
sub
jl
push
lcall
sbb
aam
lea
cmp
xchg
cld
decl
cmp
mov
mov
or
push
int3
into
push
xchg
lods
sbb
fstps
mov
or
out
shr
xlat
call
adc
fidivl
test
enter
fisubrl
push
lcall
fstp
lods
mov
lods
std
and
pop
cld
rcrl
xorb
dec
das
cli
fistl
pop
rcll
lods
sbb
add
mov
scas
andb
pushf
dec
loope
inc
ljmp
ljmp
pushf
test
into
dec
mov
pushf
or
jno
pusha
jmp
js
pop
adc
ljmp
push
scas
sbbl
add
ss
hlt
lds
shll
loope
jmp
rcrl
push
repnz
xor
jns
sbb
xchg
ljmp
or
add
and
in
and
ja
xlat
ljmp
enter
movsb
mov
into
lods
loopne
mov
pop
pushl
adc
cmc
pushl
add
mov
mov
cmp
mov
lock
cwtl
rorl
mov
adc
cmc
xchg
clc
mov
aad
lcall
ljmp
mov
loop
mov
push
inc
mov
or
incb
and
bswap
push
adc
in
pop
je
add
into
add
js
push
int
cwtl
lcall
ljmp
shrb
mov
cltd
pop
outsb
pop
outsb
mov
pop
clc
xchg
andb
call
pop
and
pop
or
dec
or
pop
or
bound
dec
push
test
sti
shll
call
adc
pop
das
bound
or
mov
pushl
mov
mov
adc
push
adc
pushf
cmc
and
fldenv
cmp
cmp
jmp
sbb
imul
int3
sbb
mov
push
mov
lcall
push
push
mov
les
rolb
jg
pop
sub
ror
bound
pop
pop
jg
js
mov
jp
frstor
adc
imul
mov
or
ja
mov
inc
dec
movb
add
adc
jp
ljmp
xchg
jge
and
xor
cmpb
push
sbb
inc
outsb
adc
mov
fisttps
mov
add
and
adc
push
cld
or
adc
adc
dec
ljmp
rcrl
jg
dec
mov
mov
and
sbb
pop
mulb
das
jb
push
mov
ja
aam
cmp
or
cmp
decl
cwtl
xchg
xor
or
test
cli
in
stos
and
pop
jl
dec
mov
out
cmp
or
bound
mov
test
xor
jmp
pop
sub
das
sbb
jmp
jmp
adc
cmp
sub
popa
cs
imul
movsl
sub
dec
popf
xchg
test
das
sub
or
sub
add
or
int3
inc
jmp
dec
pushf
add
outsl
cli
lcall
int
enter
call
mov
inc
sub
gs
decl
gs
movsb
sbb
notb
and
mov
movsb
or
js
mov
mov
pushl
setnp
dec
xchg
xchg
add
sahf
pop
inc
rolb
je
adc
xlat
bound
jo,pt
cld
mov
lock
xchg
mov
sbb
clc
mov
mov
stos
call
xor
and
test
mov
decb
or
mov
cmp
dec
pop
in
mov
cmp
xor
jmp
loopne
xchg
imul
sub
test
movsl
std
or
decl
jl
test
mov
idivb
mov
stos
sbb
aam
mov
sub
cwtl
mov
andb
pop
pop
test
stos
push
mov
push
scas
enter
ljmp
ljmp
insl
mov
mov
scas
pop
cmp
lcall
mov
inc
mov
pop
mov
mov
dec
or
mov
arpl
int
popa
pop
lods
push
orl
mov
int
mov
stos
xchg
inc
push
orb
pop
mov
pop
loope
pop
mov
data16
cmc
bound
pop
test
gs
ljmp
push
aad
inc
shlb
cmp
push
test
cmp
or
hlt
push
xorb
fcomip
pop
scas
int
rcll
mov
ja
repnz
lea
loop
jne
icebp
jp
imul
mov
fildll
xlat
sbb
cmp
bound
fisubrs
cs
jge
test
call
lock
popf
decb
rclb
mov
ljmp
or
jmp
cli
add
out
mov
int
and
aam
hlt
fisubs
jmp
call
adc
outsl
sti
sbb
push
ljmp
adc
pop
add
decl
inc
mov
pop
jns
xor
xchg
data16
mov
sub
bound
rorb
sub
xorl
sti
stc
jmp
iret
jo
daa
loop
push
sub
pop
add
lcall
mov
xor
cmpsb
cmpsb
ljmp
lret
add
daa
sarb
cmp
xchg
lea
movsl
aam
mov
fcompl
jnp
pop
and
js
imul
call
aad
dec
cmp
and
pop
dec
das
fidivrs
aas
jnp
pop
clc
jmp
out
enter
jne
xor
js
or
cmpsb
in
xchg
sub
jb
jns
mov
dec
mov
mov
or
js
cmp
sbb
lcall
pop
cs
cs
dec
popf
cld
or
mov
orb
push
xor
jo
or
test
fs
pushl
test
in
cmc
jne
adc
xor
pushf
int
sub
fnstenv
xchg
clc
call
adc
nop
dec
adc
sub
std
and
ret
out
cmpsl
xor
ljmp
xor
sbbl
and
ret
mov
mov
fidivrs
jge
pop
push
mov
jl
or
stc
fmuls
or
psrad
bound
sbb
fidivrl
adc
jbe
in
cmovp
bound
jg
jle
ja
aas
ljmp
jg
xor
fwait
hlt
lret
cmp
cmp
mov
pop
add
or
insb
and
sbb
mov
push
loope
cmp
sbb
lods
pop
push
dec
inc
xchg
sub
dec
inc
mov
daa
outsb
les
incl
pusha
inc
cmpsb
bswap
add
mov
js
out
mov
ljmp
nop
pop
insb
lret
push
mov
mov
add
push
sub
inc
mov
fbld
jmp
xor
inc
mov
orl
lods
scas
xchg
rorb
enter
jb
mov
mov
xor
mov
xchg
sub
inc
add
ret
shll
or
popf
lods
cld
sbb
add
jo
add
cmpsl
add
mov
pushl
add
pusha
mov
push
incl
inc
sub
test
pop
or
faddl
call
out
adc
int3
adc
outsb
fmull
sub
sub
adc
push
or
pop
int3
test
stos
sub
cmpsb
jecxz
dec
dec
ja
cmp
pushl
cs
mov
jne
and
outsb
push
repz
aam
mov
push
jno
scas
loop
js
adc
addl
push
xor
pop
mov
mov
or
jg
push
or
inc
enter
out
sbb
mov
mov
sub
cmp
xlat
sbb
pushf
mov
movsl
push
mov
lret
jp
jb
and
xor
add
add
loope
loopne
addb
or
xchg
jo
add
gs
pop
data16
popa
shlb
adc
jbe
out
loop
mov
loope
cltd
jno
test
cmp
push
or
pop
fwait
popa
cli
sbb
pop
loopne
es
js
xor
jbe
sbb
pop
ss
dec
sbb
jne
shrb
cmp
pop
std
jmp
add
sub
push
adc
inc
dec
mov
cwtl
dec
adc
dec
jmp
loope,pt
adc
insl
xchg
push
dec
call
sbb
push
roll
inc
xchg
dec
cmp
sub
dec
and
mov
adc
dec
mov
in
pop
imul
xchg
pop
push
in
push
bound
jge
test
int
push
cmp
mov
lea
push
or
leave
add
lcall
xchg
in
push
adc
nop
push
cs
cmp
sbb
fistps
fwait
jns
movsb
adc
fstl
popf
adc
dec
inc
inc
sbb
idiv
mov
insl
mov
mov
mov
ljmp
enter
data16
pushf
jb
in
movsb
sbb
stc
cmp
dec
call
clc
stos
pushl
pop
jns
and
loope
mov
mov
pushl
lods
inc
movl
mov
sub
in
push
inc
or
mov
loopne
mov
sub
pop
xchg
pop
push
repz
mov
fisttpll
cs
mov
jg
fdivs
jb
loope
sub
pop
pop
jns
leave
xchg
adcl
sbb
sub
pop
movsl
les
add
stc
cmpsb
call
push
mov
fbld
inc
ret
in
dec
call
lahf
out
lcall
shr
jb
fidivrs
xchg
lods
popf
mulb
push
sbb
pushl
cmp
mov
in
daa
repz
cmp
daa
std
mov
sbb
cmpsb
fsubl
filds
or
and
xchg
push
stos
jmp
in
lcall
incl
inc
loope
insb
inc
movb
stos
adc
push
dec
mov
das
fstps
aas
inc
push
pop
inc
or
push
xchg
testl
mov
test
jge
lret
hlt
orl
or
cli
cmp
or
jecxz
mov
inc
xor
int3
cmpsl
mov
xchg
jl
outsl
jbe
cli
das
les
ret
les
mov
lcall
and
pop
pop
in
xchg
xchg
mov
fldl
mov
pop
xchg
pop
fbld
push
fbld
add
cmp
test
ret
pop
add
sbb
add
xchg
xor
mov
or
adc
lcall
sbb
inc
sbb
jmp
mov
push
mov
xchg
hlt
sub
loopne
or
pop
dec
push
frstor
and
jae
out
dec
inc
fistps
and
imul
daa
sub
cmp
and
sub
xchg
add
pop
push
ja
shlb
jns
aad
mov
mov
jmp
test
push
sub
pop
cmp
sub
cs
cmp
popa
push
test
decl
fcmovnu
inc
adc
js
in
jl
sub
jne
ljmp
and
or
imul
incl
clc
jns
xor
cmc
ss
movsl
push
fbstp
call
inc
push
test
lods
mov
inc
enter
add
or
pusha
cld
push
rclb
mulps
mov
addl
sbb
xchg
and
mov
inc
xchg
lcall
pop
and
das
insb
xor
cs
jmp
adc
call
stos
loop
mov
bound
pop
xchg
and
imul
clc
inc
nop
outsb
pop
xchg
or
clc
stos
add
xor
adc
pop
mov
adcl
fbld
bound
orl
push
dec
mov
mov
ljmp
inc
mov
fld
mov
int
push
xchg
and
adc
out
push
and
dec
roll
or
shrl
and
fimuls
sbb
push
or
jns
cmpsb
in
push
xchg
ret
mov
or
fisubs
leave
mov
and
fbld
mov
fmulp
fcmovnu
pushf
push
inc
fidivs
or
imul
lret
loopne
or
xchg
sahf
or
roll
dec
icebp
sub
mov
sbb
test
rorl
ret
jl
sbb
cmpl
shrb
movsb
movsl
xor
lcall
loop
std
mov
inc
adc
jp
dec
adc
fcomip
outsl
pop
loope
test
pushf
adc
cli
push
adc
jecxz
xchg
incl
mov
dec
inc
aas
cwtl
les
xor
or
xchg
into
movsb
jle
bnd
nop
incl
push
dec
mov
mov
out
mov
aaa
arpl
fcomip
incl
pop
push
popa
mov
rcl
gs
xor
inc
and
mov
sub
ljmp
outsl
adcl
or
mov
pop
dec
pop
dec
mov
and
pop
adc
gs
out
clc
inc
cmpsb
mov
mov
sbb
adc
or
or
fsubs
pushl
add
adc
movsl
inc
xorl
cli
decl
jo
sbb
rorb
int3
adc
fcomip
push
xchg
xor
addr16
sbb
jbe
sahf
push
push
mov
cmpsb
ljmp
mov
jne
fxch
cmpsl
jmp
fsubrl
fucomi
ret
lock
cli
pop
cmc
lcall
fs
mov
xchg
dec
jae
xchg
sbb
and
jle
ljmp
mov
sti
jle
mov
out
jmp
fnstcw
xchg
adc
push
es
jecxz
pop
popf
dec
or
and
add
fistpl
ficompl
inc
push
mov
dec
pop
pusha
sub
es
sbb
inc
jmp
push
fisubs
xchg
xchg
iret
out
dec
call
dec
sbb
addr16
out
push
mov
lds
push
jg
incl
xchg
and
fdivrl
popa
mov
fiadds
stc
xor
mov
leave
inc
mov
popa
lds
add
push
cmp
sub
aas
mov
add
jg
pop
fldenv
jmp
cs
pusha
cmp
inc
mov
mov
mov
xor
xchg
nop
lds
das
push
enter
jbe
stos
add
mov
or
sub
add
imul
xlat
or
repnz
shl
pop
popw
sub
push
test
decl
sbb
push
xorb
fnsave
mov
aaa
xor
sarb
movsb
xor
sar
dec
and
cmp
test
xchg
popf
int
into
ficompl
mov
outsl
dec
mov
gs
mov
hlt
mov
xchg
jmp
dec
push
pushf
fcoms
cmp
cli
ret
in
leave
mov
sub
sarb
fs
jnp
in
sbb
pop
insb
jmp
pushl
push
xchg
sub
inc
mov
dec
push
push
movsb
cltd
pop
shlb
dec
add
shl
sar
enter
add
cmp
fistpll
test
out
fcomip
or
in
lods
or
into
lds
jb
popf
dec
pop
mov
or
pop
jne
movsb
mov
mov
xchg
adc
add
pop
dec
decb
cld
sbb
cmc
pop
dec
pop
sahf
les
push
mov
or
mov
cwtl
dec
adc
add
jmp
cmp
pop
movsl
dec
mov
push
dec
lds
mov
incl
push
pop
push
jge
push
sub
mov
mov
test
dec
test
sbb
push
and
add
xor
mov
jl
adc
mov
fs
incl
mov
pusha
gs
push
mov
cld
lcall
test
sub
outsb
or
jno
es
incl
cs
sbb
rcrl
in
jnp
pop
loop
push
movsl
mov
subb
push
out
aad
xchg
dec
lea
jl
aad
inc
js
and
jo
jl
push
and
call
mov
pop
jb
dec
nop
jl
sub
bound
pop
mov
mov
dec
test
das
cli
aaa
std
mov
frndint
xchg
cwtl
xchg
jbe
jecxz
xchg
dec
xor
xchg
fistpll
sarl
pop
push
loopne
cmc
push
dec
les
call
cld
jmp
cltd
dec
call
and
sarl
cmp
mov
inc
xchg
idivb
gs
add
mov
ficoms
add
and
fidivrs
fildll
test
xchg
hlt
hlt
push
roll
mov
push
test
pusha
cltd
dec
jmp
loopne
mov
inc
fcmovbe
adc
pushf
dec
adc
adc
mov
fld
rorb
pop
adc
rclb
out
decl
pusha
loopne
mov
mov
mov
popl
hlt
lret
xor
pop
mov
inc
push
loopne
sbb
insb
xorps
sti
lods
push
add
fcomps
xchg
pop
pusha
es
fcomp
fildll
inc
mov
test
pop
pusha
test
push
jge
incl
sub
gs
add
andb
xchg
cmp
inc
inc
sar
jg
dec
loop
inc
cwtl
push
out
js
sbb
leave
je
bound
jo
ret
jg
out
movsl
mov
sbb
jne
enter
iret
clc
push
xor
or
pushl
enter
inc
imul
je
jo
dec
jge
fwait
push
cs
pop
icebp
cmp
movsl
test
pop
loop
cmp
imul
fdivr
jg
test
nop
and
aam
fs
incl
ret
dec
cli
sbb
test
addb
decl
jb
add
xchg
sbb
pop
jle
aas
push
ret
out
mov
fcomip
mov
adc
push
mov
in
aam
fwait
push
pop
in
jo
sarl
sbb
lock
decl
xchg
cli
out
lods
cmpb
dec
mov
dec
je
sar
inc
femms
sbb
jbe
lret
fadds
hlt
incl
movb
jge
dec
lock
ljmp
and
dec
add
push
mov
push
add
aam
mov
movsl
add
inc
jle
loope
push
in
sub
jmp
xor
and
lcall
jg
lret
inc
sbb
mov
mov
pop
push
les
lcall
mov
jmp
out
and
lds
cli
decl
popf
stc
insb
sbb
xor
inc
cld
xchg
pop
sbb
out
add
push
addl
xlat
data16
addr16
mov
push
xchg
pusha
adc
dec
test
sbbb
out
pop
inc
call
jmp
push
lods
aad
sub
mov
enter
push
bound
std
push
and
fldt
aaa
xor
ss
jne
fldt
mov
lods
sar
jmp
lock
xchg
or
jnp
push
stos
popf
xchg
outsb
repnz
inc
xchg
mov
loope
push
insb
mov
cmp
xchg
loopne
iret
hlt
push
outsl
outsb
adc
decl
xchg
jmp
sbb
ficomps
imul
fs
repnz
add
cltd
sbb
rcll
inc
test
lcall
adc
ss
mov
or
in
push
fwait
lock
pop
cld
incl
enterw
pop
movsb
dec
push
xchg
jns
popf
dec
mov
les
pushl
add
call
push
call
jne
in
jl
mov
loope
pop
imul
xchg
push
and
sub
xchg
ror
aam
and
lds
cli
insl
adc
arpl
add
pushf
dec
pop
ror
dec
jg
decl
test
movsl
pop
mov
mov
add
sbb
add
add
iret
dec
movsb
fists
fisubrs
scas
mov
or
incl
lahf
je
adc
repnz
sahf
mov
fdivp
adc
lahf
xor
jmp
dec
lods
stos
outsl
mov
or
mov
pop
mov
push
outsb
inc
aas
fisubrs
inc
mov
fnstsw
mov
dec
lock
lea
mov
mov
cmpsl
ja
fcomip
pusha
or
mov
jle
aam
loop
cmp
popl
mov
jne
dec
in
outsb
dec
jae
shlb
inc
lods
push
out
dec
xchg
adc
cmpsl
mov
inc
imul
jl
sub
cwtl
aam
xorb
aam
std
ss
xor
ja
jbe
ljmp
neg
pusha
fs
pusha
pushf
hlt
lods
test
decl
mov
mov
in
add
mov
fs
push
fcmovb
push
lret
mov
pushf
aas
xor
lret
cmc
pop
fcoms
test
or
add
jp
add
popa
sub
lret
je
test
add
insb
in
pop
mov
jmp
call
pop
mov
cmp
inc
in
xchg
add
ss
xlat
push
out
xor
filds
dec
in
in
mov
mov
dec
inc
lcall
mov
les
lds
xchg
nop
push
lods
add
inc
push
das
push
adc
and
pusha
bound
inc
push
mov
pop
mov
fbstp
push
shlb
or
lea
pmaxub
rcrb
and
dec
test
lock
pushl
dec
cwtl
popf
mov
pusha
sub
jmp
mov
push
mov
lds
mov
je
call
enter
cmp
sti
rcrl
mov
xor
fildll
aam
lcall
call
das
fimull
and
mov
mov
xor
xor
daa
movsl
mov
pusha
xchg
es
mov
or
sbb
add
cli
adc
outsb
in
mov
add
call
sub
pop
pusha
mov
rcrb
and
insb
xchg
add
out
mov
jnp
add
call
and
call
aas
push
call
ja
mov
mov
inc
xor
sbb
xchg
cmp
cmp
rorb
xlat
pushl
xchg
sbb
enter
int3
sub
test
and
in
scas
mov
decl
pop
in
jmp
test
je
in
xchg
and
in
pop
mov
or
cmp
rcr
xchg
inc
xchg
push
adc
push
or
adc
xor
push
jmp
adc
dec
inc
pop
cmpsl
outsb
xor
faddl
lds
incl
orb
lret
push
and
mov
pop
gs
pop
mov
lcall
enter
test
adc
pushf
movsl
and
test
xor
mov
push
mov
adc
lcall
jbe
cmc
bound
repz
test
decb
ljmp
pusha
adc
or
inc
scas
mov
xor
pop
std
decl
xchg
dec
add
sbb
or
test
iret
lcall
add
test
sub
push
xor
jbe
into
jmp
aaa
push
lods
imul
popa
cmpsl
mov
jne
xor
or
call
decl
sub
daa
xor
fnsave
ljmp
shll
mov
sbbb
dec
addb
lret
pushf
push
data16
jae
inc
cwtl
bnd
pop
fdivr
aaa
mov
mov
cmpsb
cmpsb
and
mov
lcall
ja
or
adc
in
xor
jmp
sar
push
faddl
clc
adc
insl
xchg
mov
loope
cld
pushl
and
lock
dec
mov
repz
or
dec
sarb
call
cmp
mov
hlt
push
jmp
int3
inc
shl
push
stc
mov
imul
add
xchg
iret
mov
ljmp
mov
push
push
push
insb
cltd
pop
mov
dec
and
lcall
push
push
cmp
into
test
sbb
mov
xchg
orb
or
fcoms
cmp
xor
insb
push
mov
fs
xchg
mov
call
sbbb
sbb
cmp
cmp
cmp
es
jmp
xor
sbb
cld
sahf
stos
mov
xor
pop
leave
cli
xor
stos
jl
jmp
mov
jge
inc
mov
js
mov
sbb
dec
in
movsb
mov
in
clc
or
out
in
mov
mov
sbb
inc
incl
roll
pop
inc
mov
or
jbe
xchg
or
and
ljmp
je
xor
adc
mov
in
sub
ljmp
loop
data16
dec
icebp
adc
pusha
add
clc
jp
push
push
insb
jb
call
stos
imul
mov
mov
jg
sbb
xor
dec
cmp
xor
mov
movsb
and
insb
mov
and
inc
push
int3
or
cmp
mov
mov
int
fists
fidivrs
jl
push
dec
int
js
mov
adc
popf
jmp
mov
bound
push
sub
aad
ffreep
or
jg
mov
push
rcll
inc
es
dec
aad
std
xchg
push
inc
cmc
jle
pop
jmp
or
sarl
lods
sub
sbb
inc
in
addb
push
jmp
mov
outsb
sbb
or
test
lcall
mov
xor
stos
testb
stos
lahf
mov
fwait
sbb
pop
jp
dec
mov
sti
mov
or
call
adc
push
pop
mov
lock
or
stc
dec
pop
mov
mov
fimuls
loop
xchg
pop
cwtl
mov
push
xor
jmp
in
stc
xchg
or
pop
cmpsl
rcll
es
mov
enter
gs
mov
pop
in
sbb
mov
or
jnp
int3
adc
push
pop
adc
mov
jo
xchg
mov
mov
in
or
subb
mov
lock
mov
jmp
ret
sbb
or
add
cwtl
inc
loope
inc
inc
pop
cmp
call
xlat
inc
cmp
pop
mov
sub
adc
push
xchg
pop
and
mov
movsl
xchg
or
lods
and
adc
adc
add
mov
ret
out
lahf
xchg
dec
stc
mov
hlt
jg
ljmp
movsl
push
aas
lock
push
inc
cs
shrb
rcrb
inc
jecxz
decl
xchg
insl
dec
jbe
xchg
push
jo
das
pop
daa
sub
or
mov
mov
bound
faddl
ffreep
sbb
sti
jbe
insb
fdiv
and
in
inc
or
jg
pusha
cmp
lock
rcll
cli
cmp
push
cmp
jns
mov
in
pop
outsl
or
mov
ljmp
cltd
jne
fdiv
in
sbb
aam
in
ljmp
jp
or
shll
add
and
push
mov
and
rol
dec
jmp
arpl
jmp
push
jle
xor
cwtl
xor
lds
pop
add
scas
aas
call
or
ret
and
mov
popa
call
dec
roll
in
iret
aas
xor
and
sbb
mov
or
or
inc
pop
cld
mov
call
loop
sbb
sarb
lods
mov
rclb
adc
mov
push
inc
lock
adc
hlt
adc
inc
add
inc
movsb
or
call
mov
jb
lds
ret
adc
movsb
arpl
mov
roll
jp
xor
arpl
or
and
out
movsb
gs
mov
sbb
jl
ret
test
jmp
loop
inc
add
xor
loop
clc
and
rorl
or
mov
mov
incl
push
and
mov
pop
rorl
nop
mov
inc
sarl
rclb
push
cld
cmp
mov
and
push
les
dec
lds
rorl
stos
call
push
xor
imul
lcall
ljmp
add
fwait
ljmp
mov
xor
sub
mov
adc
stos
das
mov
mov
lcall
in
push
push
fdiv
mov
xlat
mov
add
add
insb
xor
dec
mov
jg
jecxz
jle
mov
shll
push
pop
aaa
out
xor
ljmp
fucomi
lea
lret
xor
or
insl
arpl
sub
stos
mov
mov
jmp
insl
gs
xor
ret
sub
cmc
fsubs
shr
ds
inc
mov
xchg
das
addr16
xor
add
std
pushl
pop
sbb
int3
lock
xor
add
rclb
aaa
je
or
add
jecxz
mov
sbb
clc
mov
add
xor
push
and
mov
mov
lcall
jmp
adc
sahf
xchg
add
sarb
push
leave
or
inc
sub
cli
fisttpl
fmul
and
mov
popa
hlt
enter
add
clc
fbld
ror
sar
sbb
xchg
cmp
xchg
hlt
pop
fwait
gs
decl
hlt
dec
lods
hlt
push
push
push
adc
sbb
call
mov
inc
xchg
ret
mov
pop
push
cmpsb
push
mov
push
pop
mov
cltd
clc
lcall
jno
test
inc
pop
into
dec
dec
and
push
lcall
adc
sub
mov
push
sub
addl
xchg
dec
pop
adc
movsb
lret
pop
cmp
pusha
mov
imul
scas
es
sub
pushl
pushf
popa
xchg
sbb
cmpsb
mov
mov
lret
pop
fsubl
ds
jg,pn
lea
dec
arpl
add
add
dec
inc
test
pop
loopne
or
inc
lcall
lret
pop
pusha
inc
in
cmp
pop
clc
outsl
and
rorl
push
mov
call
sbb
dec
dec
pop
inc
xor
das
dec
xor
cmp
shll
call
rcr
dec
nop
and
out
adc
rorl
cmc
test
jle
push
lahf
mov
iret
std
ljmp
clc
decl
mov
or
sbb
mov
dec
js
add
data16
incl
jge
adc
es
xadd
xchg
lret
mov
inc
adc
mov
mov
popa
mov
call
sub
jbe
jp
fistps
lahf
sub
into
and
and
mov
or
lcall
lahf
lret
jle
inc
rorb
pop
pop
sbb
sub
hlt
push
or
shlb
and
sub
fisttps
loop
sub
es
pop
mov
mov
mov
jmp
ja
rcrb
jmp
imul
mov
dec
push
lock
bound
cmpsl
add
xchg
sub
cmp
inc
cld
addb
sbb
lret
daa
xor
adc
pop
cmp
stos
dec
inc
fdivr
jg
add
inc
adc
or
or
mov
incl
add
call
ljmp
pop
or
std
lcall
mov
or
movsb
shlb
adc
decl
push
ret
cltd
mov
fmull
sbb
mov
xchg
cltd
lods
xor
cmp
cmp
lds
adc
fsts
jge
xchg
popl
mov
rorb
pop
clc
cmp
or
pushl
rolb
loopne,pt
adc
in
and
sahf
cmc
test
xchg
pop
mov
pop
dec
test
xchg
aad
add
lods
pushl
push
inc
cmc
insl
outsl
mov
mov
mov
test
xor
adc
gs
push
mov
pushl
xchg
sbb
je
lret
in
enter
rcll
cmp
dec
inc
in
mov
rcrl
jg
call
call
cmp
mov
pop
and
in
or
mov
push
push
cld
or
push
and
jnp
sbbb
jl
inc
clc
lcall
cli
rcrl
xchg
or
jg
push
cmp
adc
and
xchg
or
repnz
push
dec
inc
insl
in
or
push
pop
cli
jns
decl
pushf
test
mov
mov
mov
aad
jmp
and
outsl
jp
icebp
jmp
lahf
mov
cmpsb
nop
add
call
daa
and
push
in
mov
mov
mov
cmpsb
pop
in
xor
inc
sub
add
lock
incl
inc
dec
hlt
lret
xchg
xor
sbb
xchg
addr16
mov
pusha
fldl
and
pop
sub
test
xchg
xabort
mov
or
dec
stos
sbb
es
ljmp
inc
loope
xor
pop
ss
pop
xor
mov
mov
push
repnz
xor
sub
jmp
push
hlt
add
inc
in
sub
or
or
jb
or
add
jnp
fisttpl
out
push
sti
icebp
and
xor
out
jbe
xor
loop
mov
or
int
call
jg
hlt
mov
mov
xchg
loopne
frstor
in
cld
cmpsb
jbe
outsl
sub
xchg
jmp
lcall
xor
inc
ret
insb
in
and
cltd
rdtsc
mov
push
popa
or
push
adc
call
mov
jb
cmp
cmp
ja
ljmp
xchg
pop
xor
loope
popf
add
loope
sub
xchg
adc
ficomps
scas
mov
aad
mov
cwtl
adc
je
sbb
cmp
clc
orb
incl
inc
ja
push
jb
jp
push
loopne
push
leave
rcll
push
mov
outsb
xor
scas
clc
call
sub
test
or
insb
mov
mov
jnp
ja
decl
or
test
or
mov
test
movsb
ljmp
stos
incl
lods
dec
push
cmp
inc
icebp
push
cltd
dec
rclb
ss
jno
int
dec
inc
mov
mov
ds
out
bound
or
ljmp
cmc
xchg
xchg
jmp
and
movsb
fnstsw
lret
inc
lods
imul
ljmp
push
adc
dec
mov
push
ljmp
jne
pusha
lods
push
mov
popa
dec
jbe
rolb
xchg
cmp
mov
sbb
inc
imul
clc
inc
or
icebp
sysenter
imul
jo
jae
mov
stos
mov
dec
adc
mov
pop
enter
jns
xchg
xlat
cwtl
cld
mov
loop
jo
xchg
mov
jae
inc
outsl
jg
push
jno
insl
ja
inc
test
dec
incl
inc
mov
js
inc
js
in
call
and
stos
outsl
mov
into
icebp
mov
outsb
and
adc
ret
in
outsb
lock
cs
push
lcall
mov
enter
cltd
out
or
jb
cltd
push
cmpsl
jo
ret
xchg
jnp
inc
pop
adc
jmp
cmp
lret
int3
push
test
test
mov
movsl
xor
sub
xor
lcall
loop
sub
add
sbb
addr16
mov
in
ret
adc
in
fmull
subb
subl
mov
cmc
mov
inc
es
inc
pop
mov
nop
bound
loop
jle
xchg
stos
movsb
mov
data16
sub
sub
enter
sub
adc
int3
pop
lret
sbb
dec
ljmp
call
lret
rolb
jmp
ret
cwtl
movsb
xor
mov
sub
and
in
js
adc
lods
insb
inc
hlt
inc
stos
mov
xor
test
ret
shll
in
xor
imul
out
add
adc
dec
push
loopne
fimull
adc
add
les
pop
lcall
jg
or
js
std
aam
xchg
cmp
mov
int3
mov
jb
and
jmp
fwait
out
fdiv
xchg
stos
in
insl
in
push
movsb
inc
adc
popf
call
jns
inc
fldl
mov
hlt
mov
inc
fs
xor
dec
bound
cmp
and
inc
inc
decl
mov
add
lcall
push
add
les
or
jmp
adc
mov
pushl
inc
loopne
add
dec
mov
pop
loop
faddl
rorb
sub
incl
insb
and
lret
mov
sub
jo
jg
push
lods
insb
cmp
and
loop
sbb
pop
decl
jecxz
lret
sbb
rcl
pushl
add
movb
shlb
call
pop
mov
jl
and
add
mov
xor
mov
dec
inc
push
lock
sbb
or
jecxz
incl
stos
bound
ljmp
cld
xchg
fwait
pop
xor
mov
pop
push
or
repz
pushl
rcrb
es
loope
orb
scas
and
pop
rclb
sar
pop
adc
ljmp
into
imul
decl
sub
icebp
ss
inc
nop
jp
mov
or
sub
repz
sbb
pop
dec
xchg
imul
mov
add
mov
push
shlb
mov
xchg
mov
insb
sbb
add
test
loopne
mov
imul
adc
pushl
in
jo
loopne
and
and
fldl
clc
jg
in
jno
lock
ds
or
jo
jno
sbb
lcall
dec
dec
xchg
imul
adc
sub
sub
test
ljmp
pushl
into
jp
nop
jb
mov
or
cmp
les
int3
and
jbe
pop
icebp
lcall
dec
loopne
jo
push
dec
test
lahf
or
push
call
sub
ljmp
test
enter
shrb
add
mov
mov
adc
or
push
js
jg
mov
shrb
lds
addr16
stos
gs
pop
inc
xor
andb
lret
or
pushl
pop
icebp
adc
adc
test
inc
imul
mov
jo
les
push
cmp
call
popa
and
pop
inc
push
stc
adc
dec
adc
and
jg
test
in
lods
push
jecxz
xchg
in
stos
popl
push
call
cld
push
adc
xor
sub
mov
sahf
shrb
arpl
push
jecxz
dec
fidivrs
ss
push
xchg
stc
mov
mov
inc
mov
inc
ss
mov
dec
mov
mov
call
repz
add
sti
lret
xlat
inc
cmp
daa
aas
leave
dec
xor
lret
jo
sahf
lods
ds
jno
lds
push
mov
inc
pushf
fisttps
enter
movsb
outsb
hlt
pop
daa
inc
adc
decl
jmp
cmp
mov
or
xor
out
int3
jmp
xchg
js
mov
es
out
rclb
adc
cmpsl
test
or
es
iret
and
mov
mov
outsl
clc
dec
fadds
push
mov
hlt
jbe
test
cmpsb
and
mov
cli
ret
ljmp
mov
mov
inc
lods
push
dec
cmp
adc
mov
push
xor
subb
xor
push
xor
aaa
cwtl
int3
lcall
mov
pop
pop
xor
ljmp
int3
dec
xor
push
pop
ret
add
push
add
int3
lods
and
or
xor
int3
or
pop
lock
push
pushw
roll
jecxz
mov
ljmp
push
fs
pop
gs
aad
mov
je
ja
inc
mov
mov
add
pusha
ljmp
mov
jne
pop
add
das
push
in
hlt
scas
hlt
dec
ret
and
fwait
gs
mov
pop
inc
mov
lds
incl
cs
xchg
push
add
mov
xor
inc
xor
push
cmp
xor
dec
cmp
pop
lret
insl
sbb
ret
outsb
pusha
sbb
jmp
data16
xor
add
loop
es
sub
lcall
pop
out
cmp
sarb
mov
adc
inc
or
pop
jbe
mov
dec
adc
xor
shlb
ret
movsb
dec
cld
decl
repz
xor
outsb
pop
clc
lcall
push
movsb
js
add
lret
push
rorb
addl
ljmp
dec
push
arpl
clc
inc
xor
je
jb
push
inc
xchg
cli
imul
dec
or
xor
push
call
xor
js
dec
shr
fs
out
fcomps
inc
add
test
out
push
and
sub
xchg
mov
lahf
pop
mov
ret
rclb
ds
add
mov
nop
cmp
mov
xor
inc
mov
adcl
xchg
and
lcall
push
or
xchg
add
jo
aad
rcrl
cld
decl
stos
ret
push
sbb
jle
mov
xchg
pop
decl
mov
jae
sbb
cmp
xchg
xchg
add
inc
jae
call
sub
xchg
sub
clc
sbb
and
mov
and
test
fildll
or
out
mov
ret
loop
mov
icebp
jb
lret
mov
decl
aam
ret
mov
xor
jge
aaa
push
jg
jmp
sbb
cmp
bound
into
mov
xor
incl
cs
xlat
cmp
and
mov
and
int
xchg
dec
movsl
imul
inc
leave
es
cmc
pop
and
push
cli
mov
into
bound
sub
sub
ljmp
add
int
dec
mov
xchg
lahf
decl
xchg
push
push
inc
out
les
loop
je
mov
repnz
aam
jmp
add
movsb
aas
cmp
jl
add
mov
and
or
pop
and
test
cmp
and
incl
add
andl
dec
cmpl
jmp
inc
bnd
xor
jg
dec
std
push
push
mov
mov
dec
mov
or
jmp
fs
push
add
clc
add
outsb
roll
cli
daa
and
aam
mov
lds
or
jg
mov
out
sbb
adc
sub
mov
jle
jg
xchg
mov
xchg
xchg
in
dec
dec
jae
xor
ja
sbb
int3
jae
fistpl
or
cmp
scas
das
sti
mov
dec
xchg
cmp
in
jo
decl
adc
shl
jle
stc
xor
jl
ja
add
test
bound
xor
or
cmp
dec
xor
mov
jcxz
cmpl
xor
sbb
add
bound
ljmp
scas
mov
mov
pop
popf
iret
popf
int
adc
xchg
adc
fiadds
add
aam
pop
dec
xor
lret
mov
sub
test
inc
pop
jo
nop
cwtl
out
arpl
sub
pop
sub
fcompl
mov
fcomip
out
xchg
dec
xchg
ss
inc
inc
movsb
lret
dec
js
fs
sbb
mov
adc
xchg
jbe
xchg
mov
sbb
clc
jo
sub
shrb
daa
outsb
inc
call
jp
test
in
cmp
pushl
out
mov
jnp
xorb
and
test
mov
clc
pop
popa
mov
subb
adc
addb
aad
cmc
insb
push
cmp
jae
loope
xchg
or
lret
sbb
pop
jno
cmp
or
mov
fadds
into
data16
push
mov
cltd
pop
inc
pop
cld
lds
cld
push
sub
and
popf
push
lds
sti
lods
pop
pop
jmp
jecxz
lret
sar
test
jbe
sbb
cwtl
jg
jnp
mov
incl
lea
and
aam
push
pop
popa
fwait
cmp
mov
sub
ret
in
inc
cmp
lods
fwait
ss
mov
push
xchg
jo
mov
call
sub
shlb
adc
or
and
enter
imul
insb
fs
mov
dec
inc
push
inc
jo,pn
call
cmp
je
aaa
pusha
cld
dec
daa
inc
int
lcall
mov
icebp
or
and
inc
jb
add
inc
inc
lods
test
sbb
inc
and
pop
and
addb
cmp
dec
cmp
xchg
adc
outsb
dec
mov
aam
rolb
dec
rolb
or
inc
out
ja
sub
adc
mov
cmp
mov
mov
mov
push
add
push
adc
cmp
ljmp
loopne
or
scas
dec
mov
cs
or
call
xor
and
imul
lret
mov
stc
dec
int
scas
nop
sbb
aas
stc
hlt
mov
nop
call
clc
jl
notb
lcall
jae
sbb
jle
inc
call
dec
push
inc
mov
adc
insb
cmp
push
xchg
jne
cltd
in
inc
call
mov
divps
imul
and
aad
test
push
push
fbld
xchg
xor
fs
cld
lcall
adc
jge
dec
or
push
add
mov
fsts
std
pushl
sbb
hlt
sub
or
inc
sbb
push
leave
mov
pushf
gs
dec
movsl
decl
xchg
fucomp
insl
dec
sub
out
xor
call
mov
test
inc
decb
jbe
movsl
pushl
pop
mov
dec
fcompl
incb
add
mov
mov
in
in
cmpsb
and
inc
adc
inc
incl
dec
jo
fucom
in
add
add
adcb
or
mov
xchg
xchg
mov
loopne
fcom
int3
mov
adc
dec
or
pusha
add
xchg
jmp
push
movsb
rorb
enter
gs
jge
push
cld
dec
shll
push
out
sub
dec
cwtl
mov
imul
adc
cltd
adcb
pusha
fisubs
arpl
add
sub
mov
lods
fnstenv
jbe
mov
fcmovnbe
cmp
clc
mov
sub
mov
call
mov
mov
cmp
dec
xchg
cmp
mov
popf
push
lds
rcrb
inc
add
ljmp
jp
subl
cmpsl
mov
ja
mov
lret
lcall
push
out
xchg
lea
xchg
out
push
into
pushf
dec
or
dec
adc
out
in
cmc
ficomps
jbe
mov
insl
pop
into
shl
rcrl
pop
cmp
fisttpl
pusha
lahf
xchg
sbb
js
loopne
cmp
pop
hlt
mov
movsl
adc
jecxz
clc
mov
fcomp
jl
cltd
push
pop
imul
rorb
mov
call
add
pop
fcoms
popa
mov
jle
xchg
push
push
scas
call
and
jp
jbe
pusha
xor
test
adc
lock
es
add
inc
pop
je
nop
rclb
out
mov
mov
xor
pop
fs
inc
les
dec
or
and
xchg
mov
incl
or
cwtl
andl
shlb
pop
jo
call
mov
lea
movsl
sbb
lea
mov
stos
nop
xchg
push
pop
test
cmpsl
je
cli
push
rclb
cmp
sar
call
lcall
dec
xchg
nop
sbb
sub
mov
inc
xchg
fimuls
cmpsb
lea
ljmp
lods
cmp
jecxz
mov
pop
cwtl
mov
scas
sub
call
loopne
int
xchg
cmp
popf
lea
dec
cmp
mov
and
cli
or
add
push
fnstenv
aaa
xor
ljmp
push
mov
pop
loop
ds
call
dec
and
pop
fsubs
cwtl
mov
dec
ds
fnstcw
pop
negb
shll
push
aad
xor
xchg
sub
call
cli
pushf
jbe
jbe
addl
pop
sub
negl
in
hlt
int
cmpsl
pop
jle
mov
sub
sub
and
jge
cmc
ja
into
std
sub
negl
pusha
enter
jmp
pop
iret
cli
jl
mov
scas
jge
pop
outsb
cli
dec
and
dec
dec
nop
or
outsl
rolb
in
fstl
xchg
clc
js
rol
pop
imul
and
test
ljmp
ljmp
imul
mov
loop
or
pop
fs
das
mov
clc
loop
sbb
incl
push
inc
xchg
add
shl
imul
addr16
cmpsb
mov
scas
clc
incl
cmpsb
pushf
insl
into
sub
mov
cltd
insb
inc
in
popf
push
lock
dec
sahf
addb
inc
cltd
xor
call
sbb
arpl
daa
sbb
mov
mov
in
mov
sbb
out
mov
test
scas
cli
lods
hlt
push
test
stos
les
mov
inc
mov
xchg
inc
sahf
lods
out
clc
mov
mov
and
mov
mov
pop
inc
scas
mov
scas
sub
dec
pushf
push
nop
inc
adc
jmp
mov
cmc
cltd
cmpsl
add
pop
fstps
push
cmp
xchg
pop
shll
cs
lods
inc
pop
repnz
inc
decl
adc
cld
push
add
add
and
mov
imul
xor
jmp
unpckhps
xchg
loopne
daa
cmp
iret
ja
jecxz
stc
and
ds
sbbl
add
xchg
sar
mov
jno
orl
pop
or
mov
sahf
test
dec
and
in
mov
mov
sub
mov
push
cmp
pop
mov
fidivrl
xor
std
sbb
mov
add
jmp
outsb
sbb
push
pushf
lods
sar
incl
or
daa
gs
xchg
mov
dec
call
xchg
inc
dec
jg
adc
cwtl
fdivl
sbb
adc
dec
aam
std
fwait
push
xchg
mov
push
shll
ret
sub
popa
and
incl
in
ss
ljmp
or
and
out
std
sbb
push
push
ja
in
inc
cmpsl
mov
lods
dec
fwait
stos
adc
cs
dec
xor
stos
pushf
sarl
scas
test
clc
pushl
sub
pop
sub
outsl
bound
decl
fs
push
adc
lcall
sbb
push
inc
div
fldt
xchg
lods
push
mov
mov
xchg
jmp
adc
jno
pop
cmp
adc
add
push
mov
push
jb
ljmp
or
mov
xor
inc
mov
xchg
scas
pop
pop
xchg
cmp
adc
or
jg
mov
sub
cmpsl
adc
sbb
insl
inc
cmp
int
jbe
cltd
enter
outsl
clc
add
jae
sbb
mov
cmp
iret
sbb
inc
cmp
sub
decl
lcall
pop
xchg
sbb
cmc
into
inc
mov
scas
test
rcl
popa
std
lcall
rorl
add
xchg
test
fbstp
pop
loopne
and
mov
cltd
es
dec
lret
dec
jns
lds
xchg
call
sbb
pushf
sub
mov
push
sbb
dec
into
je
stos
decl
ljmp
mov
lret
aad
mov
sub
mov
jno
fildll
incl
sahf
adc
stos
mov
xchg
jmp
int3
scas
addb
scas
push
or
orb
sar
pushl
call
dec
push
jge
push
sarl
dec
je
or
cltd
pop
sbb
bound
lcall
inc
xchg
pop
inc
push
andb
imul
push
mov
adc
fdivrs
test
add
adc
push
jo
bound
mov
cs
ljmp
popa
or
inc
xchg
xchg
xor
jp
dec
add
add
xor
imul
pop
dec
jle
hlt
ja
clc
inc
xchg
xchg
add
test
and
dec
lcall
mov
rclb
dec
jp
push
mov
lods
cmp
mov
enter
arpl
cli
ljmp
pushf
fistl
popa
ret
push
pop
fistpl
outsb
push
pop
fwait
repz
loopne
es
outsb
clc
fcomip
outsb
add
mov
js
cli
xor
int3
jns
dec
lods
push
aam
pushl
inc
fwait
push
and
iret
sbb
xchg
subb
nop
fsubr
js
mov
mov
into
sub
add
fstpt
sub
push
hlt
inc
add
jg
fs
xchg
and
cmpsl
sbb
jae
xchg
sbb
mull
inc
stos
enter
movsb
push
decb
sahf
pop
daa
cwtl
mov
movsl
out
jbe
movsl
jmp
xchg
push
sbb
inc
adc
inc
cmp
movsl
roll
mov
jb
mov
scas
cmp
pushf
xchg
jb
addb
dec
mov
pop
call
sub
inc
xlat
dec
addl
sub
ret
mov
xorl
inc
xchg
push
aas
data16
je
outsl
pushl
push
jle
mov
push
insb
popa
or
sbb
inc
jb
jecxz
into
loope
punpckhwd
jno
mov
ljmp
cmp
push
test
pusha
push
xor
sub
sbb
sub
leave
xchg
rcrb
ja
call
sub
dec
and
cmp
xchg
xor
bound
sbb
jne
sar
data16
inc
decl
inc
adcb
mov
jbe
push
cmc
repz
aad
pop
rol
mov
sahf
jns
addr16
js
dec
ss
dec
call
out
pop
mov
pushf
push
mov
nop
pop
mov
xor
fidivl
stos
push
movsb
popfw
repz
decl
lea
in
lcall
push
adc
xor
aas
stos
pop
and
fcomip
sbb
pop
inc
ret
fs
pop
or
jg
inc
add
sti
sub
xor
mov
int3
xchg
sub
mov
pushf
loopne
scas
jno
sahf
insl
out
mov
xor
pop
sarl
push
divl
test
jecxz
mov
lock
cli
jbe
fldl
ret
xchg
dec
xor
decl
jnp
repnz
sub
daa
mulb
dec
rolb
ljmp
and
out
ret
and
cli
mov
mov
inc
pop
mov
adc
in
jmp
or
and
jle
movsb
jb
mov
inc
jno
lret
xchg
ljmp
and
mov
sbb
arpl
out
push
movsb
pop
pop
ret
pushl
cld
test
inc
repz
mov
outsb
mov
push
xchg
sbb
ja
inc
gs
ret
sub
or
std
sbb
adc
sarl
xor
and
lods
shll
xor
push
inc
push
test
adc
jae
mov
pop
je
dec
addl
xor
icebp
incl
jl
sbb
xor
movsl
addr16
scas
mov
bound
insl
ss
xchg
cmpsb
push
mov
sbb
pop
incl
mov
inc
rcrl
repz
inc
lods
xor
inc
push
fstl
push
mov
pop
adc
sub
mov
adc
movsl
mov
pop
mov
pop
repnz
sti
test
jae
fildl
lcall
jmp
lcall
scas
inc
and
es
push
xor
call
cmp
and
rcrb
mov
adc
and
jmp
dec
jmp
sub
push
pop
fisubl
lods
mov
in
outsl
ficompl
xchg
cmp
adc
jb
incl
outsb
loope
sub
push
sub
dec
aad
dec
mov
and
mov
mov
call
sub
and
or
pop
sub
addr16
pop
push
jae
lock
mov
add
and
fs
push
sub
inc
pop
clc
aaa
add
push
ss
sub
inc
mov
arpl
cmpl
inc
daa
xchg
aaa
add
push
push
mov
push
cwtl
add
ja
ljmp
dec
out
sti
jb
adc
test
push
jne
cmp
pop
sbb
push
enter
sbb
ljmp
mov
dec
sbb
adc
push
cld
jg
outsl
add
xchg
jl
shrl
push
std
or
ja
jecxz
pusha
arpl
icebp
lcall
mov
sub
mov
sbb
ljmp
lds
ja
push
sbb
add
fadds
mov
pushl
dec
mov
adc
inc
jno
xchg
push
dec
cli
lcall
pop
cmpsb
popa
sub
dec
xor
jge
adc
add
push
jle
cmp
cmp
icebp
popa
insl
cmpb
repz
cli
xchg
mov
push
jno
aam
inc
aas
or
in
pusha
hlt
add
rolb
and
je
dec
and
popa
xchg
pop
scas
push
cmp
mov
pop
xlat
aas
xchg
add
mov
sub
inc
pop
icebp
idivb
jo
es
mov
sub
pusha
fcoml
movsl
xor
leave
xchg
adc
push
clc
outsl
mov
pop
incb
cmp
inc
xchg
clc
pop
ds
pop
fcmovu
pushl
mov
add
sbbl
mov
mov
jbe
notl
pop
adc
inc
decl
adc
pop
cmp
push
dec
out
das
mov
jns
test
adc
dec
cmp
push
ljmp
xchg
enter
adc
pop
mov
pop
mov
ljmp
xor
adc
sbb
mov
sub
orl
xor
ret
push
mov
xchg
addl
pop
xor
cmp
xor
jg
test
mov
rorl
rorl
jg
lods
popa
xor
and
js
and
imul
mov
pop
xchg
scas
jo
push
and
cmp
out
cmp
mov
lcall
push
and
aad
inc
nop
lods
movsb
jo
or
sbb
mov
sbb
add
call
lds
mov
jg
test
loop
in
loop
cmp
lea
ljmp
adc
jmp
daa
jmp
push
lcall
and
cmc
lcall
adc
mov
mov
fcmovnb
sub
pop
lds
and
pop
std
jmp
push
mov
repz
xor
lahf
rcll
adc
add
mov
lods
xchg
add
ljmp
push
xchg
mov
add
call
arpl
add
cs
incl
cmp
in
inc
ja
jbe
subl
addl
jmp
cs
sbb
jne
stc
xchg
cmp
push
dec
jno
incl
jbe
add
jb
aam
sbb
mov
popa
add
add
push
push
xchg
push
add
pop
cmpsb
push
cs
jo
data16
xor
notl
stos
xchg
and
outsl
mov
ja
xchg
xchg
xchg
cltd
inc
jecxz
xchg
js
dec
aam
ret
xor
mov
sbb
js
mov
push
cli
xchg
dec
mov
push
inc
adc
xor
dec
je
push
mov
mov
add
ljmp
xchg
mov
pop
ret
shll
sub
decl
cmp
xor
xor
add
bound
lock
lcall
dec
jmp
jns
push
mov
outsb
decl
movsb
outsl
xlat
sub
jl,pt
lods
xchg
testb
pop
sar
call
loop
ds
ret
dec
dec
in
pusha
and
push
rcrb
inc
dec
jmp
mov
and
sub
ret
sbb
sub
jmp
fidivl
and
and
inc
popa
mov
out
adc
in
pop
xor
popa
mov
dec
mov
incl
xlat
mov
or
data16
adcb
mov
aad
jecxz
inc
stc
subb
xchg
add
js
push
adc
cld
jmp
movsb
add
mov
ja
inc
je
cli
jg
out
mov
mov
inc
xchg
mov
ljmp
fisubl
pop
ljmp
mov
enter
xorb
pop
hlt
mov
js
xor
inc
fldt
mov
test
mov
jmp
cmpsl
xor
sbb
xchg
sbb
cltd
ret
inc
lret
and
and
push
lret
inc
sar
jg
push
xor
or
jmp
mov
pop
and
xor
and
jg
xor
and
dec
fisttpl
sbb
jae
add
adc
pushl
sarb
ret
mov
jg
dec
jl
and
and
test
push
decl
pop
pop
adc
dec
ret
movsb
lods
call
add
dec
loopne
clc
sub
xor
stos
add
lcall
mov
and
jecxz
rcrb
xchg
bound
and
pop
sub
outsb
in
call
inc
jb
adc
adc
rorb
and
jmp
or
ljmp
sbb
pop
add
sub
inc
fs
cmp
shlb
push
inc
pop
jl
das
sbb
dec
mov
sbb
xor
push
adc
shlb
ret
incl
ja
inc
aad
cmp
int
test
cmp
or
adcl
xor
call
cmpsl
retw
xor
les
int
add
inc
into
idivb
pop
imul
ljmp
and
push
into
loop
jg
inc
push
aam
mov
pop
ret
xor
sbbl
push
xchg
add
mov
push
aaa
xchg
mov
pop
popa
dec
cltd
mov
mov
es
outsb
xchg
and
inc
pop
pushl
std
xchg
pusha
mov
int
pop
imul
xchg
xchg
jmp
mov
fwait
out
mov
jg
inc
push
adc
sub
outsl
into
cmp
pop
fs
and
xor
mov
mov
push
pop
andb
cmc
xchg
repnz
jbe
pop
pusha
jbe
daa
pop
adc
dec
pop
in
test
sub
hlt
adc
arpl
cmp
je
xor
ja
dec
in
fstpt
add
xor
repz
dec
fldt
daa
or
jl
or
into
inc
pop
mov
jno
shlb
iret
xor
cmp
std
mov
lret
int
stos
int
pop
mov
sbb
arpl
lock
jns
xchg
ret
lcall
pop
dec
xchg
pop
stos
push
push
push
sbb
out
mov
pop
xor
outsl
push
cld
movsb
fcmovnbe
iret
jae
xchg
mov
and
jl
fistpll
xor
loope
lcall
in
jl
mov
jge
xchg
xor
dec
mov
aaa
cmp
das
pop
inc
add
repnz
ja
in
pop
jge
inc
aas
push
lods
push
mov
in
sbb
adc
sbb
xchg
outsl
cli
pop
pop
xchg
adc
push
mov
xchg
mov
ljmp
imul
mov
fldcw
jp
in
incl
pop
ds
mov
mov
stos
mov
lods
jle
and
sarb
ljmp
lret
pop
mov
xor
stc
cmp
adc
loope
lcall
sti
stos
or
jbe
mulb
cltd
sbbl
enter
pop
xchg
xor
mov
or
lcall
sti
bound
push
jne
push
jecxz
adc
jmp
popa
push
jbe
hlt
call
and
pop
gs
inc
mov
out
push
dec
cmp
xchg
adc
xchg
push
rclb
sbb
mov
adc
inc
test
inc
sbb
push
fildll
insb
xor
cld
lods
cwtl
xchg
js
shr
pop
imul
jg
inc
out
iret
push
pushf
push
je
addr16
mov
dec
xor
mov
scas
push
sbb
jbe
call
ret
ja
adc
adc
adc
cltd
mov
pop
mov
sbb
pop
jle
dec
mov
es
out
mov
or
jae
mov
fldt
call
decl
mov
xchg
repz
lcall
inc
jo
ret
insb
inc
dec
or
cmp
sbb
lea
add
mov
xor
xchg
aam
xor
insl
inc
pop
test
rcrb
adc
fstps
loopne
mov
adc
out
clc
mov
test
shl
pusha
lcall
mov
and
incl
es
int3
xor
ds
leave
mov
dec
daa
mov
call
call
mov
test
sub
dec
inc
jno
mov
jg
ror
jae
fmull
adc
pop
xor
sbb
data16
sbb
cmp
sbb
pop
cld
pushl
fiadds
pop
xchg
inc
js
adc
out
insb
push
mov
jg
in
sub
shrb
lock
xchg
inc
xchg
iret
dec
adc
out
push
call
jp
imul
out
insl
fisttps
jns
mov
ljmp
sbb
outsl
jmp
cmp
and
loope
out
xchg
and
rol
adc
and
lock
xchg
sahf
push
std
jmp
insb
cld
adc
pop
pushf
lret
jb
shlb
insl
mov
lcall
jge
jns
int
scas
stos
stc
insl
xor
lods
jp
mov
xchg
sub
pop
and
test
xor
mov
icebp
xor
dec
stc
orb
call
incl
loop
shrl
sbb
rcll
and
mov
leave
xchg
hlt
decl
int
cmp
or
int3
xchg
inc
mov
inc
mov
inc
es
push
mov
jecxz
mov
cmpsl
push
xchg
dec
mov
pushl
jl
or
sub
dec
rolb
mov
rcrl
fdivrl
imul
fcmovnb
cmpsl
dec
insb
idiv
movsl
adc
or
call
mov
push
xor
jbe
add
pop
mov
pop
repz
pop
cmp
fimull
stos
push
lcall
push
pop
cli
sub
xchg
jb
push
mov
fnstenv
pusha
fbstp
call
mov
fcomps
mov
dec
shlb
mov
sub
out
clc
je
roll
mov
aaa
das
test
stc
js
lret
jmp
pusha
cmp
ficoms
mov
jae
push
incl
mov
pop
ret
cmp
pop
and
pop
scas
mov
mov
decl
int3
inc
cmpsb
in
leave
mov
cmp
mov
das
inc
cld
loop
arpl
or
or
xor
and
pushl
xchg
lods
adc
mulb
ljmp
push
movsb
push
sub
add
mov
add
rorb
mov
inc
aas
out
xor
std
mov
test
cmp
in
in
and
mov
mov
push
cmp
mov
and
loope
add
dec
dec
mov
dec
mov
ficoml
xchg
mov
nop
decl
test
xchg
pop
sub
sbb
jo
dec
lea
mov
pop
cmp
scas
ljmp
enter
stos
xor
add
test
sbb
call
call
push
or
pop
inc
sub
and
mov
cmpsb
push
int3
pusha
mov
aam
pop
ja
lcall
jmp
dec
sub
lods
push
shrl
sub
movsb
inc
sub
mov
stos
jmp
mov
cmp
mov
mov
lea
mov
roll
insb
inc
lods
fbstp
inc
lock
or
lods
nop
sub
aad
mov
ljmp
cwtl
aaa
pop
fdivrs
sub
in
xor
pop
stos
es
sti
ljmp
push
xor
inc
stos
xlat
sub
hlt
stc
add
or
cmp
jg
sub
inc
jmp
lret
pop
mov
cmp
adc
pop
mov
mov
icebp
sbbl
mov
mov
in
mov
mov
outsl
out
lret
push
nop
mov
jecxz
sub
rolb
sub
xchg
lods
sbb
ljmp
jl
sbb
lcall
adc
mov
push
call
cld
pushl
je
inc
mov
cs
pusha
das
add
call
and
add
xor
rcl
push
adc
imul
pushl
and
mov
cmp
adc
arpl
sbb
cld
adc
dec
mov
ret
mov
jb
outsb
xlat
cmc
push
mov
jg
or
mov
and
hlt
cmpb
add
cmpsb
cli
lcall
push
in
mov
xchg
dec
ficoml
pop
jge
xchg
xor
push
popa
pop
jle
lock
repnz
popf
ss
in
out
add
cld
addr16
fimuls
hlt
incl
sub
ret
les
push
movsb
xor
jnp
xor
adc
mov
pop
push
add
jnp
sub
add
scas
iret
pop
mov
mov
add
ss
aaa
adc
cli
mov
sbb
cmp
mov
imul
inc
xchg
xchg
daa
fs
jbe
adc
es
dec
xchg
jns
xor
repnz
inc
int
adc
and
addr16
stos
mov
movsb
lahf
cmovo
or
push
inc
nop
cmp
sub
cmp
sbb
xor
fsubs
push
mov
dec
or
outsl
add
add
in
sub
add
incb
cmp
cltd
xchg
or
call
xchg
push
cmp
adc
push
sub
cwtl
pop
arpl
pusha
xlat
mov
cmp
xchg
xchg
mov
mov
or
jecxz
movsb
dec
cmp
or
pop
jmp
add
dec
loope
clc
pushl
mov
std
imul
xchg
adc
xchg
xchg
daa
addr16
mov
pop
ljmp
call
popa
ja
popa
enter
sub
push
push
xor
push
movsl
and
call
or
inc
dec
push
les
dec
lret
cs
inc
dec
cmp
ja
mov
cvtps2pd
ret
rolb
xchg
clc
pop
std
sbb
lods
pop
out
jb
shlb
aaa
pushl
aas
sti
mov
pop
icebp
lret
pop
add
or
stc
push
or
lcall
call
cwtl
mov
lds
roll
je
cld
sub
push
sub
lods
incl
xchg
pop
aam
dec
rorb
aam
stos
mov
pop
inc
push
push
mov
jg
js
test
xchg
fistps
xchg
bswap
push
sbb
cli
addb
sub
jbe
jmp
sub
popa
pop
or
clc
push
mov
inc
stos
dec
in
push
stc
mov
push
inc
xor
test
daa
icebp
lcall
dec
adc
mov
xlat
out
push
test
adcl
jg
sbb
scas
pusha
insb
adc
xchg
inc
ljmp
mov
fidivrl
sub
and
out
xchg
pushl
scas
or
dec
inc
mov
pop
int
js
mov
cmpsl
dec
sbb
mov
js
xlat
pop
mov
push
jne
adc
bound
and
add
dec
int3
lcall
sbb
and
pushf
xor
mov
jae
in
mov
xchg
xor
push
xor
cmp
push
adc
mov
jb
ja
xchg
push
xchg
mov
inc
ret
aam
add
mov
sbb
aas
sub
jmp
in
push
pop
and
aas
mov
hlt
ss
int3
pushl
adc
stos
lret
jae
sbbl
dec
rcl
pusha
add
mov
mov
ljmp
stos
movsb
sub
pop
or
aad
mov
incl
sahf
sbb
cmp
adc
ss
jge
lods
arpl
loop
pop
pop
imul
imul
xchg
sarb
sbb
inc
gs
negb
stos
decl
cmpsl
xor
inc
or
inc
inc
xor
into
jno
sarb
mov
lcall
call
jle
test
adc
dec
xchg
ret
ljmp
loope
pusha
std
decl
mov
inc
jecxz
add
jg
ss
ss
cmp
sbb
lcall
mov
aam
das
inc
adc
dec
fs
pop
cmp
call
movsl
rclb
sahf
aas
cltd
scas
scas
push
jno
sbb
cmc
jmp
or
dec
or
lcall
sbb
dec
nop
sub
out
int3
inc
xor
pushl
adc
adc
pop
pushl
out
jle
rcll
push
xchg
xor
pop
rcrb
ds
mov
dec
push
lcall
xor
xlat
pop
xchg
ljmp
lods
dec
jle
adc
loopne
cld
sub
mov
rclb
cs
add
das
push
and
pusha
nop
adc
pop
dec
add
decl
inc
test
mov
sahf
xor
inc
sar
es
data16
dec
push
inc
adc
pop
pushf
loop
jmp
jbe
int3
push
sub
rcrl
idivb
ja
jae
fwait
cwtl
es
jg
icebp
lea
hlt
adc
add
ds
adc
std
lcall
rorl
scas
mov
mov
dec
int
std
rorb
ljmp
ja
inc
outsl
cmpsl
rcll
or
cwtl
or
push
cmpsb
and
in
xor
xchg
sbb
and
mov
inc
mov
nop
xor
in
cmp
xchg
lods
insb
jp
inc
and
fstps
xor
incl
ljmp
push
dec
cmp
pushl
out
repnz
rorl
push
pusha
cmpl
in
rorb
lock
cmp
pop
in
outsb
sbb
xor
or
jb
push
jae
mov
push
arpl
mov
mov
ss
decl
jp
or
loop
pop
xchg
mov
mov
popa
ret
decl
add
sub
shrl
test
test
orb
mov
cs
push
mov
add
add
mov
jmp
mov
xor
xor
and
push
icebp
mov
adc
dec
mov
leave
xor
int3
xor
pop
imul
inc
sbb
stos
ljmp
sahf
jnp
cwtl
xchg
xor
mov
inc
mov
dec
add
cmp
mov
push
jmp
movsl
xor
and
cmp
xor
inc
aas
inc
mov
adc
daa
push
or
call
inc
jb
int3
lret
mov
sbbb
adc
xorl
jecxz
mov
xchg
in
bound
icebp
cmp
adc
fldenv
jno
push
dec
pop
mov
and
sub
or
mov
aaa
jp
and
sbb
mov
lods
popf
dec
sub
sub
repnz
mov
sbb
loope
addr16
or
xor
insl
xchg
lock
call
rcrb
rcrb
mov
sub
jmp
scas
lock
jb
jbe
mov
mov
xor
pop
aas
ret
xchg
aas
cwtl
pop
push
fmull
or
sub
adc
pushf
pop
aad
or
sbb
sarl
add
dec
cmp
test
or
inc
clc
mov
cld
push
sbb
call
inc
sar
mov
setne
sbb
mov
rcrl
adc
and
pop
sub
lods
loop
sbb
jb
div
ljmp
fwait
sbb
cmp
mov
nop
sbb
leave
cltd
repnz
adc
or
or
sub
cmpsl
fwait
inc
cmpsb
addl
pop
ret
leave
lcall
loop
or
repz
and
and
mov
cld
add
push
xor
pop
addl
add
insb
sbb
inc
inc
adc
xchg
jb
xor
cmp
inc
cld
nop
sbb
sub
movsl
mov
fwait
mov
shll
mov
loopne
sbb
mov
xor
or
adcb
fdivrs
clc
sub
lcall
int3
mov
pop
jecxz
xchg
and
add
bound
ljmp
sub
xor
mov
mov
xor
push
mov
mov
inc
cli
mov
or
outsb
pushf
das
jle
xor
ljmp
ljmp
jnp
fcoml
mov
outsl
aam
or
xor
inc
jp
lea
clc
mov
cwtl
add
xchg
imul
cld
xor
push
pusha
lcall
ljmp
or
clc
and
mov
ficompl
in
sub
cmp
xchg
sbb
sbb
jp
out
pop
push
jge
add
stos
cli
enter
clc
push
sub
fwait
les
je
and
mov
lcall
pmulhuw
test
jo
mov
ret
mov
sub
xchg
je
sub
scas
leave
xchg
lcall
cmpsb
data16
jp
stos
hlt
sar
andb
mov
lcall
xor
inc
inc
inc
ret
arpl
daa
mov
mov
fsts
arpl
jmp
popf
fstps
sub
loop
mov
int3
dec
mov
rorl
adc
hlt
ljmp
mov
sub
movsb
iret
movsb
fwait
enter
dec
sbb
xchg
adc
dec
mov
insb
adc
repnz
xor
in
xor
jne
cs
test
jmp
mov
repnz
jnp
xchg
lds
jle
std
and
add
pushl
rolb
mov
lret
push
sbb
call
dec
mov
fcoms
scas
cli
jg
enter
sarb
stc
add
pop
mov
std
jp
xchg
jp
mov
frstor
hlt
or
cmp
scas
xchg
hlt
mov
popa
ljmp
mov
xchg
xchg
push
inc
leave
decb
stos
cwtl
loope
add
add
dec
pop
clc
mov
pop
stos
xchg
cmp
int3
ljmp
adc
push
push
test
cmp
enter
stos
or
add
dec
mov
mov
xor
push
insb
shll
mov
jb
dec
add
push
clc
decl
ds
std
enter
xor
ljmp
cmp
fdivs
or
lahf
sbb
ret
dec
cmp
pop
sbbl
call
dec
adc
jp
shll
mov
cmp
inc
cli
movsb
dec
push
shl
mov
ret
incl
ds
adc
and
mov
ret
sub
add
int3
ret
mov
dec
xchg
mov
or
subl
call
inc
das
aam
aaa
js
aam
inc
aaa
mov
pop
jns
dec
testl
dec
push
orb
xorl
das
add
mov
mov
push
adc
andb
cmp
lds
mov
add
mov
or
pop
lret
sar
push
decl
or
mov
jb
cmpsl
add
cltd
lcall
adc
call
roll
dec
lahf
adc
arpl
call
jecxz
jge
or
mov
leave
hlt
jl
jno
xlat
add
sbb
mov
adc
inc
icebp
xor
stc
sbb
push
jmp
cmp
cmpsb
int3
xchg
adc
shlb
xor
push
out
mov
xchg
jmpw
adc
add
and
dec
inc
pop
sub
push
xchg
add
push
aas
pop
xchg
adc
movsb
mov
ds
lcall
and
int3
xor
fstpl
mov
es
dec
mov
stos
push
fdivs
pop
pop
push
loope
adc
loope
mov
xchg
push
adc
movsb
mov
into
inc
cmp
adc
push
repnz
decl
jb
jne
bound
add
aam
mov
jl
aam
repnz
pop
mov
pushl
mov
loop
movl
xchg
das
enter
ljmp
pushl
cmp
out
aaa
into
sbb
xor
pop
loopne
nop
jae
in
sar
push
lock
enter
or
call
and
dec
add
xor
add
std
jmp
mov
adc
pop
dec
repz
sbb
rolb
je
add
decl
hlt
sub
cli
aaa
cld
outsl
ds
cli
mov
fdivrp
mov
lods
stos
mov
call
adc
ficoms
mov
and
paddsb
mov
add
and
and
call
jno
xchg
and
cmp
ret
or
inc
cld
cwtl
xor
or
lcall
loopne
and
xor
and
mov
adc
dec
mov
push
sbb
pop
shll
decl
fwait
mov
push
push
and
test
dec
fstps
fldcw
stc
and
jb
jl
lret
lret
fstps
out
pushf
mov
mov
loop
cli
fildll
pop
mov
push
fucomi
aas
and
jmp
mov
je
stc
test
iret
test
lcall
test
ljmp
test
icebp
loop
mov
dec
jmp
xchg
out
inc
add
arpl
sub
jecxz
pop
inc
je
add
out
mov
xor
inc
push
sbb
iret
out
clc
pushl
xchg
popa
je
test
enter
dec
dec
jecxz
lar
pop
fwait
ljmp
test
mov
smsw
dec
adc
pushl
xchg
or
fmulp
jmp
push
mov
lcall
xor
mov
jg
movsb
xchg
inc
xor
mov
xchg
in
call
sub
jmp
gs
lret
fldcw
fldcw
mov
call
loope
incl
cmp
mov
or
push
fisubrl
leave
add
push
andl
lret
popf
push
cmc
and
out
push
mov
mov
jg
jbe
jo
mov
je
jae
mov
push
scas
gs
mov
mov
cmp
xchg
jg
push
fs
imul
out
loopne
int
pushl
sbb
scas
subl
pop
jecxz
imul
add
rcll
call
in
call
or
xlat
push
jecxz
fistps
sbb
push
sbb
push
and
fwait
inc
push
call
jecxz
and
negl
pop
addr16
jecxz
mov
scas
mov
push
in
sub
lcall
or
loopne
pushf
imul
mov
mov
xchg
insb
movsl
hlt
sbb
push
frstor
test
iret
mov
adc
mov
call
insb
cmpsb
cmp
repnz
pop
lret
in
dec
dec
push
sub
xchg
jg
and
insl
sbb
push
xor
cs
stos
fwait
ret
cmp
lods
pusha
aad
out
divl
test
mov
sub
ja
pop
and
cmp
add
adc
jecxz
cmp
or
fcmove
fnstenv
fimull
ljmp
sbb
imul
fwait
cmpsl
mov
mov
mov
aaa
and
or
pushl
into
sti
jno
xchg
incb
xor
bound
lret
xor
clc
jle
ljmp
imul
mov
xor
into
xchg
test
add
xchg
sbb
ljmp
fisubrl
in
fs
out
xchg
test
outsl
sub
inc
push
lahf
jnp
gs
fisttpll
cld
xlat
push
jmp
or
xor
cmp
dec
jbe
mov
jno
push
pop
popf
sub
pop
jg
fs
xchg
arpl
and
xor
mov
jno
rol
fsubp
icebp
pop
inc
mov
dec
test
inc
mov
add
add
imul
shrl
fbld
mov
add
fbstp
inc
jno
js
popa
stos
add
mov
push
dec
loop
fistps
cs
dec
nop
popf
inc
xchg
sub
stos
in
fs
sub
mov
inc
and
lods
gs
cltd
incl
andl
cmp
cmovg
loopne
inc
inc
and
xor
es
mov
imul
mov
mov
xchg
lea
mov
cmc
push
out
or
das
cli
lcall
xor
pop
insl
outsl
or
jne
mov
pop
lds
aaa
lods
call
subl
es
lret
ret
push
icebp
push
or
jg
nop
xorb
js
mov
sub
cs
call
push
xchg
cmpsl
push
incl
jo
faddp
adc
fisttpll
jge
xchg
stos
mov
dec
out
sbb
pop
roll
nop
cld
outsl
cli
jg
cmp
iret
in
fs
clc
add
mov
mov
xor
call
loopne
add
les
pop
mov
jno
mov
ja
dec
adcb
daa
shl
loop
cs
cmp
pop
xor
adc
int3
mov
jno
add
inc
jae
lcall
mov
test
mov
sbb
push
sbb
sbb
popf
push
pop
call
or
test
pop
jle
cmc
add
lret
in
inc
xchg
mov
mov
add
or
xchg
xorl
inc
xor
jecxz
rcrb
inc
out
lcall
sbbl
xchg
or
inc
cltd
mov
call
inc
inc
and
ljmp
pusha
mov
movsb
stos
push
jge
test
roll
mov
mov
in
fnstenv
pop
push
fistps
loope
inc
add
in
fidivrs
inc
aaa
scas
loopne
lods
ja
shl
lock
push
hlt
cmp
sbb
mov
fcmove
jmp
stos
enter
pop
adc
mov
rcrb
pop
sbbl
movsl
mov
mov
mov
call
cli
jg
push
and
mov
and
out
ljmp
mov
pop
insl
rcrb
pop
dec
icebp
fldcw
pop
push
loop
dec
out
incl
lret
clc
out
dec
lcall
mov
or
mov
mov
sbb
pop
add
dec
and
jg
test
or
popa
xchg
dec
lods
add
dec
or
js
arpl
dec
icebp
inc
add
shrl
mov
xchg
mov
jg
mov
mov
clc
lahf
mov
ss
popa
test
orb
out
and
nop
aaa
dec
call
adc
inc
movl
sbb
cmp
and
adc
bound
clc
sub
and
xchg
ljmp
dec
xchg
xchg
pop
fs
push
and
rolb
rcll
jmp
add
push
xchg
pop
out
push
push
dec
adc
lds
adc
jg
lcall
push
xor
incl
js
cmp
inc
aad
push
push
jne
or
popa
fadds
pop
push
add
lcall
fsts
push
stos
sbb
fidivl
jg
mov
outsb
int
in
mov
popa
xchg
pop
xchg
pop
es
bound
fldt
pop
mov
adc
call
mov
lods
insb
loopne
in
push
push
stc
out
aad
ljmp
mov
xor
js
cmp
sbb
shlb
jp
int
pop
jne
cmp
nop
scas
cwtl
pop
sbb
pop
ret
test
stos
inc
mov
dec
jns
imul
inc
sbb
decl
enter
inc
xchg
nop
sbbl
adc
sar
xchg
dec
roll
orb
add
fildl
clc
pop
ds
hlt
fidivrl
clc
jg
jmp
xor
lea
sbb
call
sub
push
fistps
cmp
bound
and
or
xor
xchg
jbe
dec
rolb
pop
inc
pop
cwtl
bound
pushl
rorl
fmull
ss
add
inc
add
sub
xchg
fisubrs
mov
incl
cld
push
inc
jne
les
sub
insb
sbb
push
push
test
int
ljmp
push
pop
dec
xchg
jp
cli
dec
mov
or
pusha
dec
imul
mov
cmp
scas
les
stos
cwtl
mov
fdivrl
sbb
dec
sbb
lret
pop
arpl
in
mov
out
clc
outsl
roll
in
jnp
popa
fdivl
ret
mov
scas
sub
call
lahf
xchg
mov
neg
jo
cwtl
mov
das
pop
mov
jp
pop
insb
xor
lcall
imul
xchg
inc
andb
jge
cmp
sbb
xor
jge
add
push
jb
add
xchg
adcl
lret
and
test
mov
xchg
bound
lods
inc
adc
fmuls
pop
pusha
jecxz
cmp
insl
sub
mov
mov
mov
loope
insl
fs
lcall
or
rcrb
pop
sbb
jmp
ret
jl
dec
mov
subb
out
add
add
pop
or
push
roll
add
imul
add
jl
enter
cmpsb
dec
or
xchg
dec
incl
aam
das
pop
push
jge
sub
jo
inc
adc
aam
insb
adc
xor
aam
decl
cmpsb
sub
test
dec
and
push
stos
inc
adc
cmpsl
repnz
pop
sbb
or
leave
rorb
mov
mov
push
ljmp
cmc
loop
aaa
std
call
je
popf
sub
inc
xchg
pop
and
xchg
lret
icebp
scas
push
dec
mov
xchg
xchg
pushl
push
xchg
fs
mulb
pusha
stos
sbb
cld
adc
adc
dec
negb
pop
push
ljmp
shrb
pushf
mov
add
daa
jl
rorb
aaa
ds
cli
call
daa
popa
or
test
pop
aaa
pop
aam
outsb
cmp
push
daa
mov
or
out
pushf
adc
movsb
cmpsb
addl
pop
inc
push
add
arpl
adc
jp
outsl
mov
incl
loope
push
lds
sbb
lea
adc
ljmp
xor
and
pop
cwtl
xor
push
lea
inc
lret
cli
sub
leave
imul
lea
mov
ljmp
xor
dec
push
inc
cmp
push
cmp
xor
in
mov
rorb
mov
ljmp
and
add
jbe
sarl
pop
stc
shlb
sub
rcll
jmp
shrb
lcall
insl
gs
mov
shrb
les
data16
mov
mov
incl
lcall
out
sub
push
mov
dec
dec
decl
push
and
js
mov
add
sbb
inc
mov
pop
adc
dec
add
decl
jns
sub
pop
loope
ret
and
sbb
daa
ss
loope
cld
enter
inc
ja
jmp
lea
inc
loope
jmp
mov
loopne
outsb
lds
into
xchg
mov
xchg
pushl
cmp
xor
add
push
sub
xchg
dec
lret
inc
adc
lcall
icebp
or
push
add
mov
aaa
arpl
fimull
sbbl
mov
rcl
mov
or
cmp
test
and
dec
inc
mov
bound
mov
adcl
movsb
lcall
adc
pop
inc
dec
shlb
addl
sarb
jne
pop
or
lods
jmp
in
in
repnz
scas
pushf
mov
ja
out
pusha
fwait
repnz
sarl
xchg
cmpsb
fisttpl
cltd
push
sub
lock
mov
ss
pushl
rclb
out
ret
mov
push
cli
or
fldcw
js
repz
cmp
fildll
inc
mov
movsb
xor
dec
adc
mov
mov
mov
or
decl
lock
xchg
jb
mov
cmp
mov
loop
lahf
mov
mov
mov
pop
shll
daa
dec
pop
push
mov
or
xchg
sbb
mov
mov
sbb
lock
xor
push
or
hlt
movsb
outsb
lock
inc
insb
ss
fs
and
cli
push
fsts
mov
and
inc
pushl
les
xchg
mov
mov
cmc
fcomip
mov
add
push
push
lret
mov
pop
xchg
mov
sarl
call
jmp
jnp
decl
xchg
dec
aad
cmpl
inc
pop
ss
sbb
push
aas
pop
out
clc
lcall
test
and
andb
push
mov
or
xor
jecxz
cld
adcb
ja
dec
pop
imul
fwait
outsl
cmp
subb
jb
mov
push
stos
cmp
jg
sub
out
data16
xchg
scas
lods
inc
call
sbbb
xor
inc
mov
inc
ljmp
scas
pop
jle
xor
mov
dec
mov
pop
into
mov
jmp
mov
into
out
mov
jmp
out
push
aaa
mov
pop
fwait
mov
cli
shrb
or
incl
jmp
inc
push
lock
adc
das
and
xor
fstpt
push
leave
addb
dec
stc
jno
pop
ljmp
outsb
mov
lret
add
cmp
adc
out
dec
jae
andb
shlb
fiaddl
test
xchg
int
insl
sar
cltd
movb
nop
adc
pushf
mov
pop
cwtl
fsub
out
push
lcall
mov
inc
enter
aam
add
pusha
enter
cwtl
xor
sarb
stc
repz
es
ljmp
cmp
mov
or
int
inc
mov
cwtl
inc
jle
add
movsl
fwait
jg
shlb
sbb
adc
daa
xchg
sbb
hlt
clc
call
mov
mov
adc
mov
pusha
or
push
pop
pop
push
data16
rcrb
pusha
fmuls
clc
pop
addl
incl
sub
test
dec
shrl
push
imul
rcr
call
int3
sahf
jne
cmc
js
cmpsb
movsl
jmp
ljmp
js
mov
cltd
xchg
xchg
dec
cmpsb
popa
inc
xor
xchg
push
sbb
inc
loop
xlat
stos
add
stos
and
nop
jno
dec
mov
dec
and
in
aaa
addl
or
les
and
jg
dec
or
lret
push
add
clc
or
clc
cmc
pop
adc
cmpsb
mov
dec
adcb
rclb
dec
lea
or
push
cwtl
addb
push
pop
dec
stc
andb
mov
notb
pop
push
sub
std
adc
cwtl
nop
adc
mov
sbb
cld
movb
shlb
push
cltd
pop
fildl
inc
push
jle
les
dec
jl
js
xchg
mov
std
xor
pushf
test
aad
pop
xchg
aad
jg
gs
daa
jge
push
mov
arpl
mov
push
push
repnz
pop
inc
fs
fpatan
sub
or
or
sub
mov
incl
lds
popf
mov
xor
stos
call
adcb
loope
test
add
pop
push
dec
push
add
sbb
decl
cmpsl
and
ficomps
orb
pushl
or
add
mov
in
fstp
adc
or
rol
push
fldl
mov
and
clc
out
mov
popf
popa
jp
inc
inc
jmp
mov
dec
xchg
roll
rcl
test
xchg
je
adc
cwtl
mov
fcomps
push
push
xchg
mov
loop
cmp
repz
inc
mov
subb
mov
in
mov
push
adc
aam
incl
clc
loop
movsb
fistpl
std
in
sbbl
hlt
xor
inc
lcall
filds
dec
pop
aad
mov
mov
add
xor
jmp
cli
dec
xchg
movsb
xchg
lret
push
pushf
rcrb
inc
dec
js
and
mov
idiv
jg
pop
ljmp
pushf
test
ds
or
xor
and
inc
sub
sbb
fs
lock
jg
xor
mov
fldcw
cltd
mov
xchg
aas
sbb
pop
or
mov
adc
xor
psrld
popf
jo
movsb
cmp
ds
and
shlb
mov
mov
push
es
loope
push
jbe
sbb
cli
jg
pop
xchg
lcall
jl
adc
fmul
jge
loope
das
fdivr
push
pushf
shlb
fsubl
pop
cli
dec
fstpl
addb
adc
mov
push
dec
gs
mov
bound
faddl
pop
loop
push
pop
movsb
nop
outsb
mov
mov
outsl
clc
mov
and
push
adcb
push
pop
sub
aaa
cld
mov
dec
push
sub
cwtl
mov
or
mov
iret
or
dec
cmp
jge
or
push
xor
push
pop
fisttps
rcrb
jecxz
mov
adc
pop
imul
mov
push
and
add
mov
lock
jmp
imul
or
outsl
decb
push
push
jno
or
mov
mov
lods
push
inc
ds
or
mov
arpl
lcall
push
aas
ljmp
pop
shrl
pop
mov
js
mov
loope
faddp
in
dec
test
movsl
adc
inc
leave
push
test
adc
mov
ret
dec
jp
inc
jmp
xchg
xchg
lds
int3
rcr
xchg
mov
lcall
jmp
popa
in
lcall
mov
cmpsb
frstor
pop
outsl
imul
inc
adc
and
dec
in
add
adc
incl
enter
push
test
xchg
pop
ret
call
cltd
rolb
xor
incl
int3
pop
sub
adc
cli
imul
leave
nop
inc
fmul
mov
loope
decl
lods
es
out
xchg
mov
decl
dec
outsb
mov
xor
pop
shrb
decl
adc
push
insb
bnd
cmp
fstpl
jmp
cmpsl
jno
mov
fnsave
test
push
out
cmpsl
adc
or
popa
nop
clc
mov
in
push
cs
aad
dec
sub
enter
sub
xchg
out
ljmp
arpl
fistl
pop
or
aaa
sub
jg
iret
insb
push
mov
xchg
sub
xor
insl
xchg
fcomip
jg
fs
lcall
lods
jl
cmp
rolb
sub
push
std
xchg
add
clc
loopne
incl
dec
pop
sub
inc
shrl
outsb
lret
lret
mov
cmp
decl
push
test
fsubrl
lods
aam
xchg
imul
lahf
pop
out
cs
xchg
adc
pushl
mov
mov
or
inc
lcall
fs
mov
imul
fcomip
add
and
mov
and
aaa
adc
mov
or
rorl
mov
jmp
es
push
fsubrs
insb
lahf
mov
jo
gs
push
mov
cmpsb
call
push
jo
inc
or
cmp
jp,pt
or
rorl
cmpsb
inc
sub
and
movsb
in
and
mov
clc
pushl
movsl
into
addb
in
fildll
loop
xchg
push
in
fistpll
or
orb
jmp
int3
push
data16
jo
and
sarb
pop
pop
cli
or
data16
mov
or
arpl
call
fdivrl
add
rcr
mov
andb
cmp
or
incl
pop
call
cmpsl
aaa
and
xchg
stos
mov
jg
sbb
sahf
and
sub
push
shrb
aam
mov
stos
push
sbb
fdivr
lcall
bound
sub
add
mov
fcomps
sub
or
add
add
mov
xor
cli
lret
outsl
aam
mov
fstl
xchg
cmp
mov
mov
jg
and
xchg
rorb
ss
in
fcoml
fcomip
clc
test
mov
sub
push
dec
pop
dec
iret
add
mov
ss
sar
scas
clc
decl
mov
lret
test
inc
sub
push
ss
mov
dec
pop
add
sbb
cli
das
push
sahf
mov
mov
sbb
pop
push
clc
addr16
xchg
in
popa
xor
jae
test
jmp
aaa
push
sub
in
pop
or
adc
repz
inc
mov
lock
cltd
xor
icebp
fwait
loopne
cs
movsb
dec
dec
nop
push
ljmp
cmp
cmpsl
stos
scas
jno
scas
or
mov
mov
in
jge
xchg
add
and
decl
adc
out
xchg
push
popa
dec
xacquire
movsl
mov
inc
dec
into
scas
pop
bound
leave
and
outsb
hlt
stos
dec
std
nop
fisubs
inc
loop
or
cld
fwait
adc
adc
out
xlat
mov
mov
pushl
xor
aaa
std
int3
lea
fildl
mov
cmp
addl
or
icebp
or
add
ja
ret
in
add
push
push
les
arpl
inc
pop
jnp
aas
or
and
call
cld
in
iret
push
out
aaa
dec
ljmpw
sbb
es
jae
push
lret
push
call
out
in
fimull
out
out
cmp
xchg
add
add
lods
stos
xchg
aaa
sub
sbb
mov
pushl
push
mov
movsl
addr16
jns
ss
fwait
cmp
cmp
adc
addr16
les
lods
dec
push
test
icebp
push
dec
orb
mov
call
mov
int3
fwait
call
adc
jne
sbb
mov
inc
imul
jecxz
sbb
push
call
ljmp
push
and
test
and
lods
adc
lea
call
mov
mov
rorl
cmp
mov
lret
insb
cmp
xchg
mov
lret
mov
sub
dec
mov
jns
ljmp
es
dec
leave
xor
es
pop
push
fdiv
bound
out
add
sbb
xor
clc
jmp
pop
aam
add
jecxz
in
xor
pop
fwait
cli
pop
fadds
mov
loopne
sub
inc
loopne
shr
xchg
or
lcall
push
bound
nop
pop
sub
adc
stos
mov
out
mov
fs
ret
es
mov
inc
adc
push
adc
insb
sub
sub
sub
inc
out
cmp
loope
adc
add
out
jno
jno
mov
movsl
mov
mov
sbb
hlt
test
aaa
mov
pop
adc
jno
xchg
insl
cld
call
adc
dec
mull
sbb
clc
mov
lahf
pop
xlat
nop
pop
leave
aam
cli
fimull
sub
js
call
jo
inc
mov
test
push
sub
dec
call
std
cltd
cli
lds
ljmp
sbb
fsubs
cltd
xchg
mov
sub
mov
sub
popa
cld
das
arpl
xor
mov
lret
xchg
and
inc
popf
mov
jne
loop
xor
sbb
incl
xchg
imul
jmp
iret
mov
pusha
dec
jae
mov
mov
out
pop
inc
loopne
mov
je
push
loop
iret
jae
aad
ljmp
xchg
iret
xchg
loopne
stc
inc
ret
mov
repnz
xchg
xor
sti
sub
cmp
jns
test
xlat
add
and
or
icebp
push
std
ljmp
daa
mov
sahf
aaa
jp
mov
push
lcall
mov
fiaddl
xchg
pop
and
dec
cs
add
push
int
mov
mov
hlt
sub
in
movsl
enter
and
dec
in
jl
cmc
les
sbb
lea
repnz
pop
xor
insb
xchg
scas
xchg
xchg
enter
das
xchg
mov
rcll
push
cmp
jmp
add
in
xor
adc
test
and
sbb
pop
cmp
pushl
sub
add
mov
add
jmp
pop
in
xor
inc
sub
cmp
popa
xchg
jmp
stos
addr16
in
lcall
cmp
outsl
jns
adc
sbb
aaa
dec
xchg
jmp
arpl
rolb
mov
and
jmp
jmp
jle
hlt
ss
cmp
dec
shll
std
mov
pop
adc
inc
pushf
decl
insb
je
out
mov
ljmp
jnp
push
dec
addb
mov
cmp
pushl
add
insb
fs
sbb
sahf
pop
into
enter
xchg
test
lahf
aam
ljmp
mov
add
mov
cmp
push
ret
xor
push
inc
inc
push
push
or
or
iret
roll
mov
or
decl
dec
add
dec
ret
mov
stc
sbb
add
add
addl
and
pop
mov
es
fwait
xor
rcl
push
push
adc
aas
gs
push
jge
nop
and
xchg
imul
sub
push
movsl
xor
inc
in
test
mov
rcrl
jp
sub
scas
dec
lock
jg
xchg
movsl
push
or
sub
daa
pop
jge
lods
test
mov
mov
and
ljmp
int3
jb
pop
and
addr16
lret
aam
call
cltd
ljmp
testb
or
lock
ficomps
test
mov
aam
jnp
jmp
leave
ds
pop
mov
aam
mov
or
fdivs
out
cmp
lods
pushl
push
xchg
aas
sahf
jl
repz
pusha
dec
pop
pop
cmp
push
out
loope
xchg
outsl
xchg
cld
jecxz
gs
pop
cli
jle
cmp
mov
outsl
add
inc
clc
call
clc
adc
xor
stos
dec
add
xchg
loopne,pt
xorl
or
loopne
push
cmp
addl
sub
stc
push
movsb
dec
or
sub
add
clc
filds
adc
cli
in
ret
add
pushl
inc
test
lea
push
and
mov
push
cli
ret
inc
lcall
jg
fs
ret
and
and
and
movsb
das
xchg
call
and
sub
mov
fisttps
xor
sub
lret
or
cmp
push
add
aas
out
scas
int
imul
jle
fnsave
or
cmp
xor
cld
dec
stos
jmp
and
ss
sbb
push
incl
aad
sub
xor
sub
lods
cmp
loopne
pushl
int
fildl
mov
lret
dec
xor
fistl
cmp
lcall
adc
scas
mov
push
frstor
xor
cmp
push
sub
xchg
sbb
pusha
lods
mov
fmul
jle
insl
cmp
fsubrs
call
fisttpll
adc
ds
xor
mov
or
ja
xchg
inc
sub
test
jg
enter
mov
cmp
push
jno
js
add
fdivp
in
push
mov
inc
testl
pop
ds
pusha
stc
cld
fwait
loopne
xor
cs
test
mov
or
push
pop
pusha
mov
nop
or
fisubrl
lea
cmpsb
movsb
decl
lret
fs
stos
lcall
xor
ljmp
sbb
mov
ret
iret
stos
and
cli
dec
lret
mov
push
lods
pop
xor
decl
pushf
fs
lods
out
stos
out
mov
mov
mov
call
das
dec
inc
pop
jl
mov
inc
mov
xchg
mov
and
pushl
cmpsb
jge
jp
xor
mov
scas
inc
xchg
cmpsl
pop
popa
cmpsl
lods
xor
bt
fdivr
mov
jmp
dec
jge
lds
xchg
xchg
dec
lods
push
ss
sub
push
cmp
xchg
push
xor
mov
leave
xlat
clc
inc
testl
mov
jg
es
jno
sbb
inc
pop
shl
push
in
mov
jp
mov
subps
sbb
pop
divb
jg
add
lea
inc
sti
enter
insl
in
xchg
adc
cld
push
movsl
insb
cwtl
sar
incl
and
mov
and
enter
test
inc
or
jg
dec
adc
nop
xchg
mov
add
jno
or
nop
xor
outsl
push
jmp
jb
pop
sub
incl
aaa
inc
insb
push
jno
and
pop
push
push
jbe
ret
imulb
fcompl
lds
shrl
push
fists
call
jmp
lahf
cwtl
jne
stos
or
loop
mov
popl
incl
decb
enter
xchg
cwtl
gs
xor
dec
push
lcall
lock
pop
inc
out
repz
mov
enter
ljmp
adc
inc
sub
xor
repz
sub
loop
push
mov
popf
pop
inc
mov
pop
test
aas
xchg
lods
sub
inc
push
pop
icebp
dec
call
push
pusha
jbe
cmp
daa
mov
incl
xor
hlt
sahf
cli
add
sub
mov
ljmp
clc
loope
xor
jle
adc
sarb
data16
fisubrs
insb
jb
sahf
and
cld
xchg
push
xchg
sbb
jl
dec
dec
and
roll
or
dec
inc
dec
clc
incl
xorb
dec
inc
cmpsb
add
incl
push
jnp
add
mov
dec
out
daa
fcmovbe
mov
fisubl
in
cmp
je
fcmovu
push
push
fsubrs
mov
mov
ficoms
mov
dec
lcall
call
mov
sbb
sbb
dec
imul
fsub
aam
cmp
sarl
lcall
add
decl
scas
pop
xchg
test
and
rcll
mov
nop
test
push
out
sub
mov
adc
inc
int
jmp
out
xchg
pushl
rcl
std
push
add
dec
push
dec
das
xor
xchg
pop
push
xchg
mov
lcall
fmull
jo
cmp
dec
bswap
stos
jle
add
incl
pop
ss
jns
push
ljmp
ljmp
dec
repz
xchg
arpl
push
pop
lea
clc
mov
leave
inc
add
pop
xor
iret
or
pop
jg
xor
sahf
xor
pop
incb
js
adcl
push
repz
push
outsl
adc
fs
xchg
adc
jmp
xchg
dec
adc
arpl
rol
push
mov
test
out
add
movsb
subl
xor
push
cli
testb
mov
lcall
int
outsb
sahf
jno
dec
clc
dec
sbb
repnz
ss
loopne
inc
call
sbb
cwtl
lret
incb
dec
jge
pop
dec
scas
insl
push
imul
mov
nop
decl
push
push
inc
push
fnstsw
xchg
mov
loop
fisttpll
jmp
movsb
in
pop
pusha
int3
das
mov
mov
pop
stc
stos
call
ja
jge
xchg
push
sbb
mov
or
xchg
or
test
ljmp
sub
les
xor
inc
jbe
mov
sbb
daa
cmp
aas
hlt
insl
push
cltd
repnz
call
sub
shr
xorl
inc
sbb
xchg
mov
mov
rolb
add
ljmp
dec
pop
inc
adc
movl
mov
mov
stos
inc
scas
xchg
into
push
jo
or
adc
dec
pop
sub
pop
jg
lock
pushl
mov
jne
scas
push
jb
inc
scas
lods
mov
sbb
mov
push
push
ret
jo
xchg
in
mov
les
and
ss
sub
in
iret
sub
and
jmp
popf
cmp
fldenv
sub
lea
mov
fstpt
mov
mov
cli
movl
incl
outsl
fs
insb
mov
clc
call
xchg
cmp
mov
dec
dec
dec
dec
cmp
jns
rcrb
xchg
jae
outsl
cli
ja
lods
lret
sub
rorl
bound
adc
movsb
cmp
push
fsubs
push
and
or
test
adc
pop
les
je
mov
outsl
and
dec
add
xchg
xchg
clc
jmp
popa
mov
mov
sbb
repnz
fstps
scas
lret
call
rorb
cmp
dec
ljmp
cli
mov
stos
pop
push
or
lahf
pusha
jne
enter
test
mov
mov
cmp
push
inc
jp
mov
pop
xchg
pop
sbb
mov
std
test
mov
push
cmpsl
sar
inc
or
popa
cmc
or
je
ret
loop
lds
jae
jp
loopne
jg
adc
xor
imul
mov
cmp
xorb
icebp
jg
mov
adc
pushw
jne
adc
cmp
outsl
and
mov
xor
jb
stc
test
jmp
rol
insb
and
pop
sbb
lods
popl
iret
mov
jg
incl
cli
add
clc
rolb
xchg
and
xor
jg
ljmp
xchg
lret
or
or
cmpsb
insl
rcrb
add
cmp
decl
xor
or
into
insl
orb
sub
out
outsb
dec
sub
movsb
jg
data16
fnstcw
aam
inc
ljmp
in
aad
mov
add
dec
mov
push
decl
lods
ljmp
lret
out
dec
mov
push
call
lods
push
sub
and
and
dec
cmp
or
mov
pop
das
inc
cmp
jmp
jmp
loop
mov
or
bound
les
ds
push
jmp
repz
dec
subb
shl
es
push
imul
adc
fiadds
xchg
mov
decl
inc
shlb
popf
imul
sti
push
xchg
lret
xchg
jg
jmp
and
sbbb
and
and
fs
mov
mov
push
inc
lcall
mov
fs
out
inc
loop
ja
jecxz
pop
ret
mov
test
sub
fbld
sarb
pop
lods
fsubr
inc
sub
jg
mov
outsl
xor
xor
movsl
xor
fsubl
es
repnz
out
cli
outsl
mov
xor
insb
stos
pushl
std
repnz
mov
mov
lret
xor
ljmp
jl
jmp
sub
test
inc
fdivrp
and
mov
mov
rorb
das
clc
or
add
xchg
add
or
sarb
loop
pushf
push
shl
nop
jg
les
adc
adc
sub
pushl
inc
faddl
mov
les
out
add
ret
push
dec
adc
shll
addr16
pushf
lock
rcrb
idivl
call
lods
xor
ret
push
xchg
mov
xor
nop
mov
sar
movsb
cmpsb
ds
or
or
fwait
movsl
pop
jae
cmp
es
dec
pop
dec
in
xor
decl
outsl
int
icebp
push
movsb
mov
int
stos
push
test
push
das
decl
lock
dec
or
cmpsb
push
sbb
push
inc
xor
decl
fsubrs
sahf
scas
sbb
movsb
xchg
adc
test
cmc
dec
push
mov
jbe
aad
imul
repz
mov
push
xor
data16
incl
cmp
jmp
mov
mov
pusha
decl
mov
cmc
int3
arpl
push
iret
and
call
jmp
imul
in
sub
cli
mov
or
leave
mov
insl
mov
add
or
bound
inc
imul
movsl
and
pusha
or
lock
je
and
test
call
lds
mov
loope
add
les
lcall
and
and
xchg
sub
sub
adc
xor
and
mov
mov
idivb
cmpsl
xchg
xor
cmp
mov
sub
mov
pop
rcll
std
mov
dec
ret
ss
sbb
dec
movsb
jno
cmp
sub
outsb
sbb
into
cwtl
jecxz
loopne
lock
icebp
sbb
dec
xchg
dec
add
xlat
int3
mov
pusha
inc
jg
cmpsl
mov
or
mov
aad
nop
in
and
sbb
or
or
je,pt
ljmp
je
aaa
out
pop
aam
sbb
xor
cmp
mov
jo
lret
ds
icebp
decl
inc
mov
inc
lret
out
or
cmp
sub
andb
push
inc
out
and
bound
scas
cmpsb
push
jl
sub
adc
sub
inc
lock
call
ret
mov
and
push
mov
xor
inc
sub
and
ret
call
xor
sar
jg
cld
adc
in
sub
inc
ret
enter
xor
fwait
jl
ret
dec
ss
dec
dec
pop
movsb
push
and
mov
js
icebp
ljmp
lods
or
jo
scas
lea
lar
mov
inc
xchg
mov
mov
sub
mov
out
and
push
stos
dec
push
mov
enter
insb
xchg
or
popf
push
mov
popa
call
mov
sub
ss
adc
adc
iret
push
add
or
fcomp
push
cmp
pop
fs
movsb
or
aam
pop
lret
cltd
push
adc
xor
jg
lcall
xchg
in
cmp
push
sarb
fwait
nop
lret
hlt
enter
clc
ja
inc
repnz
subl
sub
push
leave
enter
shlb
out
push
cs
ljmp
adc
es
outsb
cmp
mov
sub
ljmp
into
sub
xor
dec
pop
and
pop
inc
adc
xchg
mov
mov
cmpsb
jnp
aam
cmp
pop
stos
dec
insb
xor
jmp
outsb
mov
pop
mov
xor
stos
pop
mov
cmp
mov
xor
push
xlat
mov
wrmsr
sub
negb
ljmp
test
push
pop
jo
out
push
mov
push
mov
cmp
ljmp
fwait
sub
mov
out
sub
dec
mov
add
add
mov
mov
movsb
and
push
mov
xor
adc
aas
lods
push
push
shr
adc
loop
sub
ljmp
inc
mov
fldenv
out
movsb
gs
sub
adc
pop
lret
adcb
lcall
rorb
jg
push
sub
lock
fcoms
push
cmc
dec
pause
push
mov
lods
cmp
and
out
and
out
sti
cld
int3
ds
and
mov
call
push
dec
daa
imul
insb
inc
dec
rol
pop
push
jecxz
cmpsl
jb
aaa
cld
decl
imul
adc
cs
push
dec
xor
lahf
inc
sub
ljmp
mov
inc
and
and
mov
jbe
lds
call
mov
xor
repz
push
sub
fcmove
jb
mov
movsb
cli
outsb
pop
jmp
mov
sti
push
pop
cmp
sbb
sub
cmc
sbb
pop
sub
push
fstl
flds
stos
out
shrl
mov
xor
sar
scas
adc
inc
inc
stos
xlat
jp
ret
arpl
dec
inc
push
push
push
push
inc
incl
inc
leave
fs
jl
lock
jecxz
inc
mulb
jmp
xchg
decl
xchg
mov
add
pop
seta
jo
xor
imul
inc
shlb
ljmp
pop
adcl
das
xor
lcall
lret
pop
adc
cmp
daa
cwtl
repnz
ret
lods
loopne
mov
inc
out
mov
push
insl
enter
add
mov
mov
add
imul
inc
fdivrs
sub
pusha
push
dec
hlt
je
cmp
mov
adc
test
push
lret
jp
jns
fs
sbb
sbb
inc
adc
mov
stos
or
call
jl
pop
mov
pop
or
fsub
inc
mov
lcall
test
push
mov
cs
stos
aam
or
pop
push
inc
mov
enter
popf
cmpb
hlt
mov
rorb
pushl
loope
jb
std
int
or
xorb
lds
and
push
loope
stc
data16
pop
inc
push
mov
adc
lret
daa
mov
mov
sbb
lds
in
js
push
es
mov
mov
mov
sub
scas
leave
mov
fcomip
mov
add
mov
or
loop
xchg
mov
mov
jmp
push
cwtl
lods
and
xchg
stos
cmp
or
scas
das
lods
dec
inc
xor
dec
and
js
xchg
data16
mov
enter
dec
es
sub
sti
pop
inc
jg
inc
mov
xor
pop
xor
push
incl
shr
xor
rclb
pop
outsb
call
clc
bnd
out
mov
mov
pop
pop
loop
fisubs
mov
jo
dec
hlt
push
das
add
incl
cld
mov
in
mov
outsb
jne
scas
ss
ret
outsl
xchg
test
push
das
cmpsl
mov
or
ljmp
enter
inc
pusha
repnz
jecxz
jne
adc
sub
xor
xchg
int3
int3
cmp
movsb
daa
nop
cmp
pop
subb
popf
xor
testl
push
mov
inc
mov
ljmp
dec
in
xchg
push
dec
mov
push
push
jae
cmpsb
in
insl
addr16
popa
dec
test
fisttps
cmp
mov
stos
add
sub
mov
les
decl
or
push
sbb
jp
adc
jg
xor
cli
cmp
out
xchg
std
scas
push
push
clc
ja
les
outsl
inc
inc
dec
add
mov
lcall
adc
repz
mov
leave
pop
call
push
xor
stos
mov
lret
mov
dec
pushf
movsl
xor
lcall
mov
stc
mov
lret
add
xchg
or
jmp
mov
inc
mov
mov
fcomip
xchg
popa
arpl
rorb
push
movsb
pop
or
mov
mov
jmp
mov
aaa
push
push
daa
cmpsl
das
cmp
rolb
jmp
aaa
es
data16
sbb
jmp
or
dec
xor
dec
jl
cmp
lret
call
fwait
test
or
daa
es
lds
leave
add
lret
jnp
jecxz
das
ret
jmp
add
add
enter
test
daa
arpl
cs
cmp
sub
cmp
sub
cltd
add
out
jae
fs
mov
and
pushf
lods
and
das
js
bound
call
popf
jle
les
lods
xor
sub
mov
mov
ljmp
mov
xorl
scas
mov
rcrb
lock
sbb
dec
jmp
test
repnz
adc
icebp
or
lcall
icebp
xor
push
mov
lea
xor
mov
mov
xor
push
pop
mov
sbb
rcr
add
cmp
cmp
add
fbld
scas
cmpsb
aas
test
xor
jp
and
rclb
daa
ret
jmp
mov
or
insb
cmp
xchg
in
xor
aaa
loope
jge
out
arpl
sar
jg
inc
andb
popf
inc
cmp
cwtl
cwtl
ret
xor
setne
jmp
lcall
dec
std
push
popf
xor
xor
dec
call
and
decl
lret
cld
or
incl
xchg
in
push
hlt
loop
std
repz
outsb
push
out
cmp
idivl
sar
out
add
push
or
jne
xor
jnp
and
int
pop
lcall
movsbl
jg
aam
inc
push
mov
push
inc
in
shlb
inc
sbb
pushl
push
cwtl
cltd
out
pushf
dec
je
jns
cmp
ljmp
inc
loope
fadds
es
jmp
js
outsb
dec
cmc
mov
jns
pop
jmp
and
mov
mov
and
xor
push
pop
add
add
dec
pushf
dec
mov
lds
sbb
mov
aam
mov
fs
add
mov
hlt
shrb
and
lret
pop
incl
adc
aam
xchg
add
cmp
nop
arpl
or
and
lret
add
lret
push
xchg
jge
lods
pop
mov
cmp
jmp
cmp
cwtl
lar
inc
int3
incl
rorl
sar
incl
js
stos
mov
adc
cwtl
test
rcll
mov
push
sub
out
aam
jb
aas
imull
das
cmpb
inc
shll
cli
fldcw
ljmp
dec
movsl
cld
cmp
iretw
pusha
movsb
enter
hlt
loopne
popf
jg
cli
jge
mov
push
sahf
cmpl
aam
and
into
sbb
ljmp
dec
scas
jbe
pop
mov
in
dec
addr16
outsb
cmp
dec
loope
bound
pop
mov
das
mov
jns
jnp
jle
lock
fbstp
sarl
jg
outsl
fndisi(8087
or
incl
cli
lds
addr16
sub
js
adc
inc
lods
lcall
dec
push
sbbb
lds
adc
dec
popa
test
sbb
adcl
push
xor
jmp
adc
test
lea
mov
aam
xorb
pop
nop
orb
mov
xor
add
inc
sub
movsb
xchg
add
dec
or
rclb
ss
xchg
add
inc
leave
sbb
sbb
gs
out
je
je
pop
push
pusha
shlb
decl
cwtl
adc
lods
test
push
gs
test
dec
ds
xchg
dec
aas
decl
jmp
pusha
inc
dec
cmp
test
adc
aad
adc
ficompl
cli
call
cmp
loope
dec
pop
in
test
leave
test
test
cs
push
inc
xor
out
cmpb
mov
xchg
jp
and
mov
pop
bound
and
arpl
xchg
xor
pop
mov
cmpsb
xchg
hlt
out
ja
jns
sbb
mov
dec
inc
sti
cwtl
adc
in
or
fdivrs
inc
cmp
jo,pn
mov
lahf
push
sbb
out
jmp
mov
outsl
in
test
jns
pop
dec
lock
jae
adc
das
clc
ljmp
lock
fiadds
daa
iret
push
scas
adc
enter
fisubl
push
push
mov
call
jge
popa
push
xchg
jns
push
sbb
and
movsl
or
or
arpl
and
mov
lock
cmp
rcrb
sti
out
dec
into
push
and
arpl
xchg
std
jne
dec
gs
and
xor
mov
cmc
or
lock
jg
sub
in
push
scas
sbb
leave
cmpsb
inc
add
xchg
adc
ljmp
aam
lahf
inc
bound
test
dec
cmp
push
out
inc
cmpsl
lea
decl
cli
adc
push
pop
fwait
jb
iret
into
dec
dec
push
test
sbb
nop
and
test
ljmp
jnp
inc
dec
mov
out
cmpsl
test
inc
inc
sbb
xchg
sar
push
adc
push
std
sbb
or
mov
jb
and
decl
push
rolb
fwait
scas
add
jp
call
fwait
dec
cmc
mov
ror
pop
scas
outsb
cmc
push
imulb
mov
add
out
lret
jg
pop
xchg
ds
movsl
lods
into
js
jge
stc
int
sbb
jmp
pop
repz
adc
cmp
and
movsl
dec
std
pushl
cld
rorl
arpl
add
jg
cltd
imulb
sub
pop
into
cmp
mov
or
jp
jae
cmp
pushl
stos
push
loop
mov
adc
or
pop
xor
lcall
mov
lods
mov
test
and
loop
je
xor
in
scas
imul
scas
lds
or
dec
add
nop
push
xor
hlt
ljmp
inc
xor
adc
mov
adc
pop
cs
inc
inc
cmp
cmp
daa
cmpsb
ret
mov
lds
sub
or
aaa
std
ljmp
mov
ja
adc
or
inc
test
jg
or
int3
mov
in
lret
cltd
adc
sbb
rcrb
inc
jg
xor
sbb
mov
in
adc
mov
dec
orl
jp
ret
pushl
mov
das
frndint
cmp
cli
repnz
sbb
inc
pop
xor
or
jmp
js
sarb
adcl
decl
rcl
jle
dec
ja
ss
adc
xadd
rcl
mov
lock
repnz
mov
incl
pushf
test
and
or
lea
popa
ror
xorb
sub
jmp
jne
add
push
mov
mov
pop
loope
inc
cltd
adc
es
and
push
lcall
icebp
lcall
test
sbb
xor
in
mov
xchg
inc
pop
sar
aad
pop
and
aad
mov
push
sbb
cld
push
inc
mov
sub
and
jno
mov
pop
lds
mov
mov
es
imul
push
daa
movsl
mov
in
dec
xchg
jl
push
rcr
add
mov
test
or
mov
les
and
clc
sbb
bound
in
cmc
inc
cltd
or
outsb
je
out
dec
push
dec
adc
xchg
rcrl
cmpb
lcall
inc
push
adc
leave
sar
lcall
sub
addb
xorb
loopne
dec
mov
push
or
imul
jg
adc
pushf
in
es
mov
les
xchg
popf
pusha
dec
out
cmp
bound
out
enter
fcmovu
add
data16
inc
out
cmp
ljmp
dec
sub
and
mov
cmc
sar
mov
pop
pop
cmp
add
add
shll
int3
cmp
ss
dec
jne
cmpsb
mov
jmp
mov
popa
test
mov
in
in
es
sti
jg
xchg
push
inc
sub
movsl
dec
mov
mov
frstor
fwait
popa
jmp
jle
mov
enter
jo
push
lcall
mov
lds
mov
sahf
pop
mov
lret
imul
out
clc
lcall
lcall
dec
dec
pop
sub
jno
dec
in
inc
add
mov
es
push
or
pusha
lahf
test
pop
cltd
jae
adc
adc
push
and
repnz
call
dec
xor
sbb
inc
push
sti
adc
xchg
jns
xor
pop
pop
and
insl
mov
xor
fcmovnu
sti
pushl
shr
push
jl
adc
into
lds
pop
cmp
fwait
loop
aad
je
incl
mov
pop
or
rcr
ljmp
dec
push
cmc
add
popa
pop
xchg
insl
push
mov
js
xor
mov
mov
cld
repz
lcall
call
add
dec
pop
std
jo
into
testl
cs
cli
adc
ret
rclb
pushf
mov
and
jmp
pop
cli
cmp
push
repz
notb
outsb
out
sbb
sbb
dec
or
aas
aad
fdivrs
inc
daa
out
inc
inc
dec
loop
aaa
push
adc
fildll
push
sbb
cmp
or
ljmp
insb
loop
pop
inc
sub
icebp
lcall
dec
loop
mov
mov
lcall
mov
mov
ja
sbbb
and
jp
mov
mov
xor
push
dec
bound
xchg
shr
mov
jecxz
mov
inc
insb
pop
inc
jmp
xchg
inc
or
nop
cmp
call
add
int3
xlat
add
sub
loopne
fcmove
mov
mov
inc
std
inc
aad
dec
ss
insl
ljmp
push
mov
ds
icebp
mov
add
push
int3
sti
mov
cmp
cmc
pop
add
sti
xor
jnp
sar
mov
es
push
sub
mov
ror
xor
incl
cld
jl
pop
push
movsl
mov
int3
xor
and
fstl
jecxz
mov
idiv
decl
loop
jbe
mull
std
test
mul
arpl
mov
pop
inc
fists
pushl
cld
bnd
shll
jb
lds
xor
push
inc
push
outsb
or
ljmp
sbb
int
jle
cmpsb
pop
ja
xor
aas
adc
stos
add
ljmp
ss
push
testb
gs
jl
fs
sbb
bound
adc
xchg
push
jp
inc
ja
outsb
xchg
and
pop
xchg
js
filds
cli
nop
inc
cli
shlb
jge
pop
and
pop
add
cmpsb
call
subb
jg
mov
mov
jl
ja
mov
arpl
cmp
jbe
inc
addr16
mov
sbb
addr16
mov
imul
jmp
imul
xchg
cmpsb
cmp
pop
push
adc
mulb
add
push
bound
test
incl
and
add
lcall
push
add
xor
adc
test
inc
lret
add
cmc
rorb
add
test
sti
ret
gs
in
xchg
insl
add
dec
add
aas
in
add
into
xchg
dec
jl
call
sub
sub
sbb
push
scas
push
xor
and
out
mov
sbb
ret
jo
out
into
cmc
add
daa
pop
into
les
iret
jmp
pop
xor
push
xor
pop
mov
mov
cmp
daa
jg
inc
arpl
decl
inc
jg
bound
inc
inc
cmp
arpl
cmpsb
xchg
popa
push
dec
dec
mov
dec
cli
sbb
ss
push
cmp
loop
mov
adc
jbe
inc
incl
clc
aam
and
and
push
dec
cld
incl
sbb
movups
push
fadds
mov
jne
incl
add
add
and
mov
adc
adc
inc
xor
adc
fildll
nop
add
xchg
cmp
jbe
call
subb
daa
cmp
outsl
testl
ljmp
jno
pop
jae
jg
adc
pop
ja
adc
sub
xchg
push
out
xchg
push
and
inc
xchg
mov
fwait
jmp
mov
jns
xor
sti
add
xor
add
in
dec
add
insl
enter
in
out
inc
xor
xchg
xor
xor
dec
cmpsb
popa
insl
adc
inc
mov
mov
incl
cs
adc
xor
js
cwtl
inc
mov
xchg
adc
inc
xchg
hlt
xor
pushl
add
jns
and
leave
cld
lods
loope
cmpsb
pop
sub
dec
pop
dec
call
jge
hlt
sbb
popa
sbb
jl
push
dec
mov
inc
dec
decl
jo
ret
jg
inc
jno
clc
cmp
sub
mov
or
ret
ss
push
nop
cmp
jmp
cld
enter
pop
jecxz
sti
sbb
xchg
decl
mov
ficoms
fdivrl
fwait
mov
rcll
imul
incl
lock
shll
je
push
popa
add
outsl
push
and
cltd
inc
adc
dec
jle
jbe
movsl
cmp
pushl
test
dec
push
cmp
push
ja
cmp
jno
mov
sub
test
push
add
test
mov
jbe
cmp
pushl
imul
add
rcrb
imul
testb
fisttps
incl
xchg
stc
jae
jae
bound
jae
stc
jmp
outsl
cltd
xchg
fisubl
sbb
mov
lock
lret
divb
int3
icebp
sbb
sub
incl
adc
sbb
lock
in
imul
xchg
aad
xor
mov
push
dec
xor
sbb
xor
pusha
pusha
int
cmp
insl
iret
add
popa
loope
dec
loopne
mov
inc
push
jb
push
xchg
xor
test
call
popa
or
mov
adc
daa
jle
jg
xor
ss
aaa
push
dec
push
nop
add
test
sub
cmc
ss
inc
scas
nop
mov
sti
js
pop
jns
mov
fcomip
stos
pushl
mov
test
or
sahf
jp
cmp
and
jmp
rcll
add
add
dec
and
lea
mov
pop
adc
sbb
or
test
push
divb
psraw
dec
add
xchg
jbe
adc
les
mov
sub
xchg
pop
xchg
xor
scas
sub
in
outsl
push
jbe
test
ljmp
jl
xchg
insb
cli
jg
lcall
out
mov
mov
xchg
lret
sub
cmpsl
cmpsl
cmp
mov
sbb
imul
sbb
cwtl
in
loope
call
pushf
mov
lcall
adc
int
cs
outsb
add
xchg
sub
ret
aad
inc
pop
mov
pop
inc
fwait
sub
ss
outsl
mov
push
roll
les
jnp
cli
dec
jnp
mov
adc
cmpsb
nop
mov
sub
and
ret
fwait
scas
cmpsb
mov
pushl
arpl
idivl
repnz
jno
test
dec
icebp
push
push
mov
cmp
and
pop
pop
je
aaa
mov
xorl
pop
and
pop
std
ja
jno
out
call
outsl
push
fucompp
cmp
cltd
push
je
inc
js
stos
mov
loope
jmp
jns
ret
popa
mov
mov
cli
mov
rcll
jp
or
dec
repnz
enter
test
out
add
pop
gs
cmpsb
repnz
push
jmp
nop
test
scas
std
sbb
or
imull
mov
cmp
out
ficoml
mov
pushl
outsl
jb
in
scas
fisubrl
testl
adc
or
sbb
mov
sub
std
cmp
leave
add
push
jmp
out
jmp
dec
cli
sbb
mov
adc
hlt
and
jmp
and
and
mov
movsl
fiadds
call
sub
push
cmp
inc
mov
pusha
outsl
mov
xchg
cmpl
mov
mov
std
push
xor
or
add
cld
and
dec
mov
pusha
outsl
repz
push
add
fistps
das
mov
jecxz
and
mov
inc
cltd
xchg
ret
push
mov
add
lret
ret
hlt
scas
les
mov
xor
xchg
sbbl
ljmp
aaa
push
stos
mov
adc
push
dec
cli
out
repnz
dec
shl
xor
push
lods
movsb
inc
push
dec
cmpb
and
inc
mov
and
inc
cmp
pop
fucomp
mov
adc
mov
adc
pusha
orb
pushl
bound
dec
lods
pop
roll
jbe
pop
xchg
jge
lret
addr16
mov
cltd
lret
aam
xchg
sub
cmc
jmp
mov
dec
mov
lock
out
add
jmp
push
cld
jg
push
es
loop
sbb
pop
inc
push
je
inc
mov
loop
push
jecxz
mov
ljmp
cmp
imul
mov
inc
call
insb
or
shl
pop
sbb
jmp
loopne
inc
ret
es
mov
ret
repz
pushl
mov
push
add
and
sbb
xchg
sbb
lcall
jle
mov
pop
pushf
aas
adc
xchg
pop
and
test
test
sar
lcall
cwtl
lea
push
popf
insl
and
fildll
cld
sbb
adc
xor
mov
fstpt
lret
xchg
cmp
loope
call
and
inc
lea
push
js
add
jmp
stos
cld
scas
cmp
adc
pop
mov
dec
push
scas
mov
pop
mov
pop
dec
add
sub
jb
call
bound
push
sub
stos
xlat
dec
pop
mov
lret
lret
out
ljmp
jne
mov
push
mov
dec
xchg
ficomps
or
ret
ficoms
call
out
inc
mov
iret
push
int
xor
xchg
call
sbb
ds
add
cmpl
aam
aas
and
cmpl
mov
xor
mov
sub
daa
xchg
ret
fcmove
xor
faddl
push
inc
add
xor
adc
xor
rorl
ds
lcall
pushl
xchg
sub
xchg
ss
daa
sbb
sub
rorb
dec
and
or
add
lcall
and
aaa
jg
or
xchg
or
aam
decl
lea
sbb
adc
lds
push
add
jns
jle
aam
sub
ljmp
and
roll
jo
pop
pusha
fdivrl
stos
cltd
jbe
adc
xlat
mov
inc
pop
lahf
push
je
test
and
sbb
mov
sti
nop
enter
es
decl
aam
addr16
jp
sub
pop
je
jne
push
ja
call
sbb
adc
xlat
ja
cmp
popf
imulb
fcmove
lods
mov
stc
add
push
sub
out
fdiv
sbb
dec
or
incl
pop
cmp
loope
jmp
mov
cmp
jmp
ss
jmp
stc
add
jmp
test
push
jae
enter
mov
loop
inc
fistpl
push
mov
pop
mov
or
ljmp
add
nop
jnp
shrl
add
dec
ret
push
push
dec
add
data16
pop
cmpb
stc
ja
mov
dec
cmpl
xor
xchg
popf
test
insl
jg
sub
repz
push
addr16
movsb
mov
es
in
mov
popf
lret
ret
or
mov
adc
inc
mov
cmp
adc
popa
shl
pop
jo
mov
mov
add
insb
add
movsb
sub
or
adc
leave
xchg
movsb
test
sbb
mov
scas
and
or
push
orl
jno
sbb
imul
test
or
lods
aad
ljmp
lret
adc
lock
sub
sbb
mov
call
jl
cs
ror
mov
icebp
and
pop
fnstenv
dec
push
jae
lret
dec
mov
sbb
call
negl
mov
cli
pushl
pop
push
xchg
push
outsb
ds
insb
in
pop
int3
push
aas
ljmp
push
lret
jmp
fdivs
mov
mov
in
dec
pop
jnp
sub
xor
fcomip
push
push
loop
sbbb
popf
repnz
inc
push
mov
lea
mov
sbb
jmp
cld
pop
and
mov
sub
testl
dec
testl
dec
pop
scas
ds
or
ljmp
or
pop
push
idivl
add
jmp
fs
cmpl
in
addb
bound
mov
fistpll
lods
outsl
call
cmp
mov
push
rolb
push
nop
xchg
nop
xchg
and
inc
repnz
sub
xor
jle
addr16
xlat
cmp
sar
ja
ret
jo
test
cmp
inc
jge
add
jmp
loop
pop
icebp
sti
cs
dec
in
inc
pop
cld
lcall
dec
movswl
mov
fiadds
pop
aas
xchg
test
ss
pop
out
dec
mov
aad
stos
xlat
sbb
push
outsl
enter
lods
out
fists
inc
pop
testl
adc
movsl
pusha
or
push
lahf
sbb
adc
lret
mov
data16
xor
xor
int3
xor
or
push
cld
lock
sbb
inc
and
mov
add
pop
cmc
pushl
loop
mov
nop
call
dec
pushf
pushl
lret
hlt
aam
xor
mov
mov
xchg
and
adc
inc
mov
adc
sub
sub
mov
mov
inc
mov
lods
scas
gs
dec
call
pop
and
lret
ss
push
rcrb
cmp
sub
mov
repnz
cmc
jmp
movsl
sub
mov
or
sub
dec
dec
js
cltd
mov
adc
or
leave
mov
je
lcall
adc
push
sarb
gs
cmpsb
dec
mov
jne
out
fcomi
outsl
loopne
jg
pushl
dec
imul
scas
push
movb
into
stc
push
adc
lret
aaa
cld
decl
mov
out
mov
icebp
jecxz
aas
out
jle
jo
fbld
pop
ficompl
mov
std
xchg
loopne
incl
aam
cmp
mov
push
insl
mov
adc
mov
nop
pop
lods
xor
mov
in
ret
fildl
test
sarb
cmp
jg
inc
xor
inc
adc
sub
ret
mov
pop
mov
jecxz
clc
inc
dec
inc
cmp
xchg
and
inc
adc
and
adcb
andl
xor
lcall
adc
adcb
es
rorb
and
sub
mov
xor
pop
loopne
xor
mov
mov
mov
jg
inc
inc
enter
mov
sub
push
dec
lcall
loopne
test
std
pop
cmp
cmpsl
sbb
mov
popf
push
dec
hlt
cmpsb
stos
mov
push
dec
jmp
int
and
fistps
ljmp
shr
inc
adc
decl
mov
mov
or
push
mov
int
cli
dec
adc
das
cli
dec
call
nop
push
fs
leave
bound
sub
into
xchg
divb
xlat
bound
decl
mov
dec
sbb
imul
cmp
fsubs
std
sbb
mov
scas
or
inc
nop
mov
xchg
mov
fimuls
rcll
in
scas
or
push
sbb
decl
pop
inc
mov
mov
mov
jecxz
int
js
mov
lock
or
or
cmpsb
dec
xor
les
mov
in
mov
std
fldt
or
repz
sub
out
cmp
lock
sbb
repnz
sbbl
sbb
call
xchg
and
cltd
in
leave
mov
inc
push
daa
lret
movsb
dec
dec
mov
clc
jmp
push
mov
stos
and
inc
fcoml
loopne
cmp
cld
test
lret
or
inc
iret
lcall
inc
or
ljmp
and
je
and
mov
in
and
cli
sub
dec
pop
cmp
daa
mov
xor
xchg
je
std
pushl
aad
adc
rorb
lods
das
pop
jg
lods
lds
or
lcall
ss
pop
cld
lcall
bound
push
repz
lods
mov
inc
lods
pop
mulb
dec
mov
adc
sub
jg
sub
cld
repz
xor
xchg
and
pop
cmc
xchg
into
pop
ret
add
mov
add
in
sub
push
inc
mov
scas
lcall
jae
mov
lock
sahf
pushf
add
cwtl
call
imul
jl
xlat
cli
inc
jecxz
fisubrl
and
push
imul
and
dec
or
fldcw
das
cli
xchg
cmp
mov
inc
xor
mov
mov
pop
stos
sbb
ljmp
cmp
or
fsubrl
fidivrl
xor
in
jne
dec
xchg
sahf
or
into
inc
test
ljmp
out
sub
insl
adc
sbb
xor
mov
lret
shlb
jg
test
test
mov
in
test
pushf
pushf
loope
bound
les
jl
nop
lods
xchg
ret
cltd
dec
push
mov
xchg
leave
lods
xchg
cli
mov
lock
sbb
jae
inc
push
incl
es
push
leave
or
mov
ficoms
and
dec
jb
jns
leave
aad
lcall
mov
mov
imul
xchg
pop
into
xchg
sub
push
mov
push
fs
popa
cmpsb
xor
lret
decl
decl
push
sub
jecxz
lahf
cli
call
or
iret
sbb
lahf
jg
or
hlt
rol
xor
cltd
rolb
ljmp
or
movsb
iret
shll
sbb
mov
xor
jmp
sub
push
mov
push
rolb
add
mov
cwtl
rorb
js
mov
mov
ret
sbb
sahf
cmc
xchg
inc
add
iret
mov
in
sbb
jle
mov
mov
inc
mov
rol
imul
sbb
inc
scas
dec
shrl
sub
mov
inc
ds
rorl
adc
xchg
cmpsb
mov
cld
xchg
fidivrl
movsl
and
inc
mov
xchg
pop
push
sub
and
jmp
ss
std
lcall
nop
ret
push
and
lahf
nop
sub
sbb
dec
ret
js
shll
outsl
xchg
cmp
in
jle
mov
sub
ret
mov
add
mov
push
out
mov
cmpsb
pop
loopne
aad
mov
in
out
and
cltd
ljmp
gs
cmp
jmp
sub
mov
arpl
call
cld
push
cwtl
ror
es
xor
in
out
fcom
popf
sar
int
jb
pop
cli
pusha
ja
call
loopne
bnd
stc
in
pop
push
cmpsl
cmp
add
jnp
dec
xor
cli
or
add
cmpsb
xor
movb
fcomp
dec
mov
arpl
arpl
cmp
push
xor
enter
cmp
mov
sub
fsts
adc
fwait
cmc
mov
adc
lock
fistl
ret
adc
dec
cpuid
push
cmp
test
cwtl
push
out
and
incl
js
outsb
inc
in
push
test
or
and
mov
shrl
jmp
inc
push
mov
add
and
ljmp
mov
push
or
push
pop
mov
or
and
mov
adc
arpl
and
mov
adc
jg
or
push
dec
or
aaa
movsl
test
jno
mov
or
aaa
mov
xchg
push
push
in
leave
stos
mov
lcall
lret
mov
and
fisubl
pop
cs
pushl
movsl
cmc
push
xchg
push
mov
lret
sub
sbbb
ds
nop
mov
pop
cwtl
loop
jmp
mov
or
lcall
or
add
aam
testb
jnp
cli
decl
cwtl
add
leave
jmp
pop
lods
and
xchg
mov
ljmp
cmp
in
loopne
push
mov
mov
ja
add
andb
push
std
xchg
pop
dec
xchg
mov
and
pushf
and
cli
incl
clc
inc
jmp
adc
mull
cmp
bound
jge
inc
inc
lods
fiaddl
mov
push
adc
loopne
popf
pop
lea
sbb
std
call
sbbl
mov
cmp
aad
mov
jl
push
leave
insl
adc
pop
xchg
mov
dec
inc
movsb
inc
mov
sbb
jg
dec
and
add
push
insb
push
call
push
adcb
xchg
rorl
call
pop
jb
out
adc
pop
add
cmc
sub
or
in
shrl
adc
adc
test
cmp
jecxz
xor
sub
pushl
and
adc
fisubrs
push
lret
ret
jne
xchg
incl
add
data16
pushf
sub
mov
and
or
mov
mov
dec
cmp
sub
ljmp
repz
test
mov
jnp
pop
jmp
rorl
cmp
push
and
cmc
mov
xchg
mov
dec
mov
je
add
insl
xor
imul
clc
clc
and
inc
popa
mov
push
xor
aam
cmp
out
cmpl
xor
push
xchg
lods
stos
inc
inc
pop
or
cmp
dec
ljmp
mov
insl
push
inc
sahf
pop
clc
jmp
sub
mov
xchg
mov
pop
xor
cld
pop
rorb
and
sbb
ljmp
mov
sbb
mov
fs
ret
or
xchg
pop
cltd
ret
adc
pusha
adc
push
pushl
xchg
jge
pop
fnstenvs
dec
mov
lock
dec
mov
mov
jg
and
pop
push
jecxz
cs
pop
mov
xchg
ret
xor
mov
inc
sti
inc
fbstp
fcomp
or
call
loop
sub
xor
push
scas
idivl
sbb
pop
sub
inc
scas
jno
popl
ljmp
adc
lcall
xchg
mov
rclb
sbb
andb
and
ret
dec
pop
jmp
aaa
in
sbb
adc
sub
stos
push
jo
sub
sbb
or
lcall
and
rcll
push
movsb
xchg
stos
fisttps
mov
fwait
mov
sbb
pushl
pop
popa
and
popf
das
mov
mov
fwait
mov
mov
and
jl
xor
pop
loop
sar
jg
mov
ljmp
fwait
rolb
fs
sub
mov
adc
pushl
mov
call
cmpsl
dec
sbb
pop
mov
popf
push
lock
cld
ljmp
mov
cmp
sub
pop
mov
inc
mov
mov
add
xchg
imul
pushl
xor
jbe
cmpsl
jl
sbb
or
xor
or
inc
and
pushl
rcll
test
sbb
pop
aad
sub
add
aaa
repz
ficompl
sbb
testb
cmpsl
jge
cmpl
lret
xchg
xor
push
jge
jg
inc
or
xchg
cwtl
cmovae
lea
stos
adc
scas
sbb
mov
inc
push
sub
push
in
sub
jno
and
xor
inc
dec
add
pushl
mov
cmp
jl
mov
mov
cmp
cmp
dec
aas
cmpsl
rorb
movsl
add
mov
ret
xchg
xorl
mov
movsb
push
rcrb
int3
mov
jo
jg
inc
insb
mov
lret
lods
test
and
insb
adc
xor
mov
cwtl
les
dec
mov
inc
loopne
xor
or
sbb
push
push
movsb
fdiv
std
out
mov
pusha
mov
push
inc
jne
pop
fwait
add
call
cmpsb
xchg
add
or
and
incl
or
cmp
dec
dec
xchg
push
pop
divb
daa
jno
leave
fisubrl
cmp
test
xchg
cmp
pop
jae
icebp
clc
lods
or
decl
mov
pop
mov
cltd
sarl
test
cltd
add
mov
cmp
lret
xor
adc
sbb
test
icebp
or
mov
cmp
lret
stos
or
rclb
dec
mov
lods
incl
inc
push
hlt
mov
dec
dec
adc
mov
pushf
push
mov
mov
int3
mov
add
xor
sub
rorb
inc
mov
mov
movsb
pop
dec
cmp
mov
jnp
dec
adc
inc
fwait
sbbb
xchg
cmpsl
mov
popf
stos
sbb
lcall
mov
xor
sbb
push
or
push
leave
adc
test
xor
sar
lcall
mov
mov
int
jmp
cmp
mov
dec
lods
leave
sar
cmp
das
mov
aas
cmp
inc
ret
or
or
adc
sbb
lcall
or
dec
test
mov
icebp
adc
cwtl
enter
sar
mov
sahf
popa
dec
lahf
xlat
push
enter
jb
nop
inc
insb
clc
lcall
pop
stc
xchg
aad
mov
pop
stos
lahf
cli
push
xchg
aam
xor
jp
mov
cmp
adcl
inc
and
jne
hlt
call
jb
test
add
mov
sbbb
lcall
pop
sahf
fisttpl
xor
in
sub
inc
mov
jb
dec
mov
jge
decl
or
insb
or
and
call
add
in
in
mov
sbb
mov
daa
cli
or
mov
adcl
sub
sbb
rclb
dec
mov
repnz
xchg
xor
and
fimuls
lcall
jle
adc
ficoml
adc
mov
sbb
nop
sbb
clc
or
ljmp
mov
dec
cmp
and
into
dec
mov
cld
decl
leave
or
rcll
xchg
mov
xchg
ja
cmp
lret
cmc
or
dec
test
icebp
or
loopne
jno
xchg
mov
rorl
push
xor
repnz
mov
jmp
dec
mov
pop
cmp
cld
cmpsb
and
inc
mov
inc
lods
or
cmpl
cmp
add
push
rorl
jo
punpcklbw
stc
xor
push
and
fimull
fildll
adc
pop
inc
mov
iret
cmp
dec
xchg
mov
call
cmp
fxch
and
fcmovbe
xchg
call
arpl
addb
xor
roll
push
adc
fbstp
push
adc
test
mov
pop
and
cmp
aam
adcl
push
xor
xchg
nop
add
pop
adc
daa
adc
sbb
jecxz
jns
adc
sti
sbb
cmp
inc
loopne
push
mov
ljmp
push
xchg
cmp
cld
sub
xorl
mov
mov
push
adc
mov
cli
or
popf
lcall
mov
insb
ficoml
in
dec
test
or
xor
lods
dec
adc
or
ljmp
mov
mov
mov
movsl
js
dec
jno
fdivr
sub
call
std
imul
jmp
shll
dec
push
enter
je
jmp
cltd
mov
push
iret
stc
inc
lret
fdivr
and
sub
pop
xchg
pushl
xchg
into
cwtl
lret
faddl
movsl
mov
leave
scas
lahf
xchg
and
incl
and
ds
xchg
jbe
and
shld
lahf
adc
fldt
nop
push
push
fmull
push
cmp
adc
sbb
in
pushl
scas
in
in
sub
mov
mov
xor
sti
and
lahf
add
ja
decl
jl
test
cmp
cld
scas
cli
sub
push
mov
icebp
xor
das
popf
mov
pushl
sbb
sub
or
xorb
xlat
dec
cmp
inc
orb
dec
jg
mov
lret
jp
sbb
int
lods
pop
jmp
shlb
push
sub
and
cmpsb
out
jmp
dec
in
pop
or
fs
push
sbb
addr16
lcall
push
fbld
inc
pop
dec
mov
stos
lcall
mov
mov
and
and
ficomps
lcall
pop
and
cmpsl
repz
in
or
dec
adc
js
adc
cld
fwait
pop
and
shlb
sbbl
sub
loope
add
call
sbb
orl
repz
cwtl
and
mov
arpl
mov
cmp
add
pusha
fnstcw
in
jbe
ja
or
and
fisubs
dec
push
cli
data16
xchg
sbb
mov
jbe
ss
sbb
test
test
mov
lds
mov
shrb
sbb
mov
enter
in
repz
loopne
popf
inc
aad
lcall
fldcw
pop
push
imul
adc
mov
dec
jg
popa
jge
into
aaa
or
mov
icebp
pushl
and
lods
mov
sub
or
inc
adc
lret
fists
decl
call
fcoml
sbb
dec
jns
icebp
cli
jmp
into
icebp
test
ljmp
add
jge
leave
add
ljmp
jle
rol
rorb
mov
cmp
leave
in
or
mov
xorb
ljmp
xchg
fwait
mov
add
sub
pop
cwtl
xor
dec
push
sbb
mov
pushl
and
xchg
lret
mov
fs
in
shlb
into
out
nop
inc
mov
inc
or
pop
jb,pt
push
sbb
add
test
fdivrs
ljmp
add
mov
pop
mov
lcall
sub
sbb
pushf
or
sti
inc
and
int
jl
cmc
sub
mov
iret
insb
push
pushl
stos
xchg
xchg
or
or
xchg
gs
sbb
mov
cld
sbb
mov
fiaddl
ret
out
xchg
inc
mov
lods
mov
sar
lcall
push
xor
sub
in
and
ljmp
inc
in
imul
inc
xchg
adc
push
pop
pushl
sar
inc
lret
mov
test
clc
xorl
push
call
jno
inc
aam
pop
ljmp
ret
out
lcall
lahf
in
mov
add
gs
mov
inc
cmovge
mov
inc
inc
lret
scas
loope
addl
popa
aaa
push
mov
call
mov
in
xor
pop
pushl
aaa
mov
call
fwait
adcb
jecxz
cmp
adc
adc
gs
repz
mov
jo
mov
mov
out
add
cwtl
jo
pushf
sub
gs
icebp
std
xor
adc
push
push
shlb
mov
mov
inc
xor
mov
sub
mov
inc
pop
mov
fcmovb
push
out
ja
xor
fistpll
lods
and
popa
mov
cmp
add
adc
outsl
movsb
enter
sarl
and
push
and
fcomps
sbb
sahf
cmp
or
fiaddl
mov
insl
mov
decl
push
enter
pop
imul
adc
pop
adc
adc
jmp
jo
mov
clc
leave
mov
jmp
into
nop
adc
jns
xchg
inc
or
pop
or
sarb
fisubrs
pop
ret
cli
loope
cltd
clc
loopne
call
xor
jecxz
jmp
imul
push
pop
out
add
lcall
fs
out
sub
jl
ds
push
adc
cltd
fistps
adc
pusha
cld
pop
pop
mov
in
ret
push
pop
pop
test
pushl
sub
push
mov
xchg
stos
pop
cmp
adc
leave
mov
shll
scas
call
cmp
adc
xor
adc
pop
insb
push
outsl
fbstp
sub
or
mov
push
outsb
cmpsb
loopne
pushl
loope
loope
mov
fs
push
loopne
add
pop
mov
adc
fistpl
mov
test
scas
addb
add
mov
stos
dec
push
movsl
dec
jns
jns
rorl
rorl
and
icebp
pop
popa
ss
jp
sub
out
xor
jl
jae
cmc
jae
fstpt
idiv
scas
xchg
test
cld
pop
adc
lock
pop
adc
lock
sbb
adc
push
rcrb
es
ret
add
add
rolb
push
enter
push
mov
orb
mov
add
repnz
sub
push
fsubrs
inc
rorl
mov
xchg
lcall
imul
fisubrl
test
jns
jno
xchg
or
mov
stos
mov
ret
mov
mov
shll
xor
add
lahf
xor
scas
jge
push
es
lcall
add
movsl
add
mov
arpl
mov
call
xchg
bound
shlb
mov
or
jl
in
stc
xor
stos
sub
xor
iret
mov
mov
pop
pop
mov
mov
enter
scas
adc
jge
xchg
mov
and
int
dec
xchg
jb
dec
jae
rcrb
sbb
movsl
pop
push
jle
cmp
rcrl
andb
xchg
repz
jmp
ljmp
icebp
in
repnz
push
xchg
jg
shll
and
adc
lods
out
jns
add
and
fcomps
inc
jmp
sbb
cmpsl
popa
dec
cli
push
stc
pop
loope
in
add
mov
push
cld
inc
adc
mov
lea
cmp
mov
jle
out
arpl
idiv
add
test
mov
stc
cmp
loopne
test
mov
call
dec
xor
stc
fs
xor
gs
pop
popa
aad
push
aas
push
movsb
xchg
cwtl
pop
fldenv
inc
push
fisttps
aam
dec
add
out
push
leave
cmp
inc
or
xchg
xor
xchg
adc
push
or
or
inc
adc
in
inc
jmp
fsts
xadd
xchg
sbb
push
inc
test
hlt
jmp
fwait
add
push
pushf
je
xchg
sbb
xchg
jg
test
xchg
push
dec
pop
sbb
or
cmpsb
pop
int
filds
mov
push
mov
call
pop
dec
aad
test
sbb
pusha
add
and
dec
das
subb
lea
in
movsb
jne
fsubrl
adc
cmp
push
push
pop
sbb
sbb
shlb
hlt
insl
cmpsl
popf
outsl
cmc
push
inc
xchg
sbb
jb
xchg
pushl
aaa
sbb
jbe
stc
push
out
ja
out
push
fsubrl
jo
cmp
xor
daa
jg
sub
orb
mov
icebp
mov
xchg
dec
lahf
shrb
loope
inc
repz
cwtl
pop
aam
sar
cld
loopne
and
xchg
insb
ds
inc
and
pop
jl
inc
pushf
das
and
lret
jg
imul
xchg
inc
cmp
aad
in
add
dec
sub
movsb
xchg
dec
ljmp
pop
or
inc
pop
popf
not
mov
xchg
adc
call
inc
xchg
test
and
mov
cmpsl
push
outsb
lcall
fcos
add
jecxz
pop
mov
inc
pop
in
insb
popa
int3
add
add
out
sub
test
push
inc
cmp
cwtl
push
or
lcall
loop
sbb
or
dec
pop
lret
pop
or
cmpsb
call
ljmp
cmp
ret
es
pop
jbe
dec
fisubl
cmc
call
roll
es
std
xchg
sub
push
jg
add
jae
pop
mov
ljmp
pushf
in
lock
pop
lret
mov
pushl
push
xor
mov
sbb
cmp
jnp
mov
call
add
xor
pushl
hlt
or
popa
mov
mov
cmp
xchg
add
xchg
mov
fld
sbb
cwtl
jp
pushl
add
add
adc
mov
rcrl
mov
mov
inc
push
rclb
and
adc
cmp
andb
or
rcll
sub
ret
rcll
xchg
les
add
xchg
mov
pushl
pushf
enter
movsb
cmp
imul
inc
mov
mov
jg
push
cmp
mov
push
jle
mov
fsubr
scas
xchg
lahf
mov
and
dec
nop
decl
cmp
addb
mov
mov
mov
dec
and
rol
daa
adc
sbb
adc
cmp
cmpsb
incl
dec
dec
mov
dec
and
mov
loopne
fs
jae
stos
push
in
xor
push
pusha
mov
lcall
sbb
imul
xorb
jge
loopne
and
pop
incl
bound
aas
imul
std
push
or
movsl
mov
push
dec
or
sbb
dec
mov
pushl
xor
iretw
repnz
ljmp
or
jmp
push
cli
sbb
ds
cmp
rcrl
lcall
lock
scas
pushw
adc
loope
adc
mov
ficoml
and
pushl
and
sbb
test
mov
das
cld
jg
ret
les
xor
ficoml
mov
outsb
fcompl
xchg
mov
inc
dec
pushl
inc
out
and
les
and
or
xchg
mov
or
adc
incl
xor
dec
ret
dec
jle
cmpsb
pushf
loop
daa
test
add
mov
and
dec
and
inc
add
or
pushl
jb
push
jbe
mov
fistpll
fwait
nop
outsb
push
sub
sbb
aad
pushf
inc
adc
or
xor
push
push
jns
adc
cmc
inc
cmp
adc
in
xor
jmp
mov
fcmove
aad
pushf
cmpsl
xchg
inc
jg
pop
mov
xchg
arpl
inc
mov
das
rol
or
jo
push
cmc
fdivl
jns
mov
push
add
pop
jno
and
ljmp
pshufw
jecxz
repz
mov
loope
or
inc
repnz
lods
mov
inc
push
or
mov
push
or
adc
incl
das
lds
je
xor
mov
adc
push
pop
mov
mov
xchg
sbb
sar
incl
push
orb
nop
les
push
push
adc
jo
call
inc
les
ds
inc
push
sbb
jecxz
adc
pop
ljmp
enter
jns
hlt
push
in
es
in
scas
xchg
pop
add
fcmove
dec
cmc
cmc
mov
pushl
popf
inc
lret
into
pop
ljmp
daa
addl
test
movsl
cld
ret
or
inc
lea
aaa
jge
incb
insl
rcl
sub
sahf
push
rclb
ret
lcall
mov
ret
sub
aaa
dec
jnp
and
xor
scas
enter
cmpsl
xlat
cmp
lods
inc
pushl
lret
add
jmp
jne
scas
add
lods
ljmp
jp
pop
lods
int
sbb
pop
out
aad
adc
push
push
or
clc
call
sbb
add
mov
aad
pushl
loopne
lret
mulb
shr
push
pop
shr
call
ljmp
ljmp
xchg
push
lcallw
xchg
movsb
cmc
inc
inc
aad
bnd
aam
ss
pop
fmuls
push
pop
aas
xchg
inc
jae
mov
incl
inc
icebp
cmp
mov
movl
clc
jg
nop
mov
sbb
fs
jge
mov
cmp
pushl
push
arpl
xor
sbb
and
incl
dec
lods
jl
inc
push
dec
or
test
pop
pop
insl
pop
mov
push
int3
inc
dec
mov
aaa
dec
cmp
movsl
push
mov
pop
bound
out
andb
push
xor
ds
add
and
adc
push
test
push
inc
loope
call
mov
mov
adc
mov
mov
mov
or
lcall
mov
dec
add
cmp
xor
addr16
mov
mov
jge
inc
daa
push
loope
mov
push
cld
filds
hlt
inc
mov
jle
push
add
and
jnp
popf
pushf
movsb
in
pushl
aaa
pushf
stos
mov
jb
ret
pushf
adc
fcomip
lcall
adc
shrb
inc
mov
dec
sahf
shr
xchg
mov
hlt
call
mov
adc
mov
decl
sbb
mov
sahf
bound
and
shll
jmp
and
test
out
lcall
sbb
xor
cltd
and
aam
pop
aad
int
lds
mov
enter
int3
nop
gs
pop
icebp
fcoml
push
iret
fstl
pop
inc
dec
lahf
loopne
stos
in
sbb
lea
lcall
adc
add
or
and
dec
or
sbb
aam
ljmp
inc
sarb
inc
pushf
test
jno
popa
inc
decl
sbb
xor
lret
sar
cmp
pop
mov
repz
mov
or
clc
adc
in
filds
pop
popa
loop
scas
push
mov
test
negb
outsb
lds
cmc
test
adc
pop
pop
xlat
insb
movsb
inc
add
sti
jmp
dec
in
leave
mov
fs
lcall
jno
pop
push
push
xor
pushl
jb
mov
js
nop
jbe
push
mov
xchg
push
xchg
mov
pop
in
pushl
or
add
aam
adc
cmc
xchg
jns
mov
jns
pop
sahf
int
mov
rorl
imul
rorl
pop
sbb
pop
sub
jg
mov
xchg
call
std
fisttps
xchg
clc
xchg
sbb
nop
push
sub
jae
mov
mov
loope
rcr
push
push
shrb
push
or
call
enter
jne
adc
or
in
push
add
sbb
aad
rorl
cmp
pusha
mov
jg
popa
cld
sahf
inc
xchg
popa
inc
iret
ficomps
or
push
sub
mov
inc
in
add
pop
adc
test
mov
fimull
lock
jmp
aam
sbb
pop
arpl
ss
loopne
push
ljmp
jo
dec
test
mov
lods
xchg
ljmp
fs
jl
adc
xor
outsl
dec
and
jmp
cmpsb
and
in
ss
test
adc
dec
inc
stos
mov
jbe
sbb
ljmp
dec
pop
cmp
iret
movsb
pop
sbb
cmp
mov
dec
shrb
add
xchg
lods
cmp
sbb
incl
cmc
push
andl
test
mov
nop
sub
push
mov
pop
cmp
pop
cmc
dec
mov
loop
js
mov
jp
inc
sub
rorl
pop
cmc
incl
or
in
xchg
pusha
inc
inc
mov
jg
pop
push
dec
dec
cmc
in
sbb
jb
lcall
hlt
xchg
mov
movsl
dec
fdivs
sbb
xor
mov
lock
fcomps
lods
xchg
pop
pop
popa
lea
or
mov
cmp
xchg
mov
out
inc
adc
mov
iret
mov
adc
pop
cwtl
sbb
aas
mov
mov
icebp
add
in
int
jmp
enter
sahf
cmp
add
or
or
add
fmull
scas
ljmp
add
inc
push
in
test
jne
sub
movsl
dec
imul
in
call
adcb
shll
lret
mov
sbb
mov
call
cwtl
loopne
ss
inc
stos
lods
sbb
pop
in
or
jg
fidivs
shrb
pushl
xchg
inc
test
add
ljmp
nop
jge
adc
je
cld
mov
insb
inc
xlat
add
ret
lcall
push
gs
inc
mov
sarb
dec
ljmp
mov
and
shrl
sub
mov
adc
mov
pop
pop
aad
call
inc
mov
dec
bound
cmpsb
pop
rclb
cwtl
in
hlt
inc
mov
adc
fisttps
sub
push
or
xchg
or
je
pop
dec
add
sbb
orl
fs
jno
rcll
pushf
mov
aad
cwtl
fsubl
lods
ljmp
xor
adc
sub
jecxz
stos
pop
mov
lret
sbb
std
xchg
inc
sub
shrl
cld
pusha
flds
inc
mov
push
push
or
dec
cld
push
jno
or
loope
js
adc
js
in
mov
sbb
addr16
push
inc
xchg
push
mov
or
xchg
decl
dec
xchg
cltd
mov
dec
push
ficoms
jmp
jl
xor
jecxz
decl
jmp
stos
cmc
or
fcoms
rol
out
loope
push
or
or
js
loop
adc
insb
dec
xchg
push
inc
mov
ljmp
sar
nop
push
inc
push
add
out
or
pop
out
or
cmpsl
test
mov
mov
and
das
pop
or
push
into
dec
sahf
push
adc
das
jb
push
sub
push
dec
incl
je
addb
insb
leave
dec
fcoml
or
sbb
jp
push
pop
dec
cltd
jp
mov
cld
jg
test
insb
adc
and
movsl
insb
adc
sbb
lcall
sbb
jno
jge
sbb
or
sar
ret
inc
mov
mov
decl
pop
or
mov
lods
push
in
inc
mov
lcall
enter
sbbb
sub
mov
and
inc
test
idiv
mov
pop
and
in
in
shl
faddl
add
add
jno
lahf
and
sub
out
clc
stos
movsb
call
push
mov
decl
dec
shr
sbb
mov
dec
jle
iret
add
loopne
lcall
jmp
pushf
loopne
shll
imul
jne
nop
mov
roll
pop
push
cli
in
cmp
mov
xlat
push
fstl
add
cli
and
or
rol
inc
or
rorb
sub
sub
cmp
loop
int
out
mov
test
jo
shrl
or
push
xchg
scas
and
mov
pop
or
sbb
mov
test
test
or
pusha
sbb
sbb
mov
inc
adc
mov
add
mov
pop
fnstcw
mov
jmp
fs
ror
outsl
cmpsb
outsl
outsb
jo
aam
dec
lcall
mov
cmc
int3
lret
sub
cltd
lds
filds
test
mov
out
dec
lods
popf
jns
adc
xor
dec
call
stos
dec
pop
or
jne
push
inc
mov
xor
mov
inc
into
popa
out
movsl
fiadds
loope
les
icebp
mov
mov
sub
in
hlt
in
cmpsl
popa
adc
outsb
or
mov
adc
cmc
fisubrs
jo
call
notb
xlat
hlt
add
outsb
and
cmp
pop
in
fldcw
cmp
dec
pushf
lahf
push
push
sbb
inc
insb
or
pop
pushl
xchg
pushl
cmp
adc
clc
lret
xor
xlat
mov
lock
enter
or
incl
and
xchg
popf
pop
push
and
in
mov
enter
decl
adc
xchg
outsb
gs
ds
mov
nop
fldl
fldt
and
xchg
rcll
cmp
data16
push
popa
sub
dec
ljmp
in
or
push
data16
scas
lea
sarb
fdivl
fldl
cwtl
jno
in
fmull
lcall
xor
jns
ja
cltd
pop
call
adc
jge
fcomp
lcall
in
xor
dec
jb
lock
pop
lret
icebp
dec
jg
mov
call
and
cmp
cmp
lds
decl
sub
aam
jmp
mov
sbb
pushl
pusha
shrl
sahf
mov
sub
mull
push
sub
call
sub
mov
or
adc
ret
rol
or
incl
inc
insb
inc
test
es
sarl
fisttpll
std
lcall
dec
scas
xchg
aam
icebp
jo
nop
inc
mov
bound
mov
cltd
add
loop
call
sub
aad
test
xchg
cwtl
pop
sahf
out
sub
cwtl
das
add
sbb
fistps
jecxz
and
lahf
mov
iret
xchg
hlt
mov
decl
outsb
imulb
ljmp
add
cmpsl
mov
imul
inc
popf
loop
sbb
sbb
faddl
and
test
stos
ds
into
ja
or
int3
cld
pop
mov
movsb
xchg
out
adc
sar
add
or
lret
jmp
call
shll
jnp
stos
lods
adc
cs
or
ds
push
loop
iret
xchg
ja
lcall
sbb
push
sahf
xor
fdivrs
pop
sbb
fidivl
outsl
lcall
lds
ret
mov
xor
xlat
jae
adc
ret
sub
sub
push
ljmp
call
mov
xor
popa
call
cmp
adcb
xchg
jmp
call
call
int3
dec
daa
xchg
fs
orl
scas
js
popa
or
ljmp
into
in
sti
movsl
sub
rcl
test
mov
les
out
xchg
aaa
jae
stos
pop
rcrl
mov
fisttpll
gs
xlat
xor
fistl
pop
cltd
cld
out
decb
cwtl
xchg
pushf
lods
cmp
cmc
pop
ds
jmp
or
mov
adc
cmp
test
ljmp
in
push
fiadds
inc
xchg
xchg
loopne
rclb
inc
outsb
addr16
jge
ljmp
fiaddl
jno
push
ja
shlb
add
dec
outsb
outsb
dec
cmp
add
decl
packuswb
and
adc
out
insl
jge
jle
pop
bound
cmpb
mov
lret
pushf
or
in
xor
call
aam
xchg
adc
mov
ljmp
enter
adc
inc
fildll
ret
rorb
rorl
jle
frndint
test
and
mov
test
jp
mov
out
clc
mov
xchg
push
jmp
dec
xor
incl
cld
ljmp
pop
dec
pop
popl
mov
jno
subl
bound
adc
mov
shrl
add
shlb
lock
sbb
popf
bound
mov
pushf
sub
notl
adc
cld
fsubp
rclb
push
call
sub
fwait
or
xor
cmp
mov
cmp
pop
mov
loop
adc
jecxz
cmp
xchg
sub
dec
fdiv
or
callw
rol
inc
rcrb
loopne
sub
cmp
cmpsl
mov
sahf
dec
lret
outsl
insl
scas
inc
fists
adc
sbb
jmp
pop
cltd
js
lods
fcoms
mov
xchg
jmp
add
sub
sbb
push
cmp
cmp
xchg
fdivl
test
dec
inc
push
dec
pop
push
jbe
mov
out
mov
inc
mov
push
bnd
ret
shl
loop
push
shrl
ljmp
pusha
xchg
jge
mov
mov
je
mov
push
jg
jne
or
bound
cmpb
dec
mov
mov
insb
dec
or
out
and
xchg
leave
sbb
cmp
das
pop
mov
xor
dec
jae
pop
sbb
les
mov
call
daa
push
lahf
jo
push
jle
stc
int
jno
add
inc
enter
shll
loope
mov
and
mov
cmpsb
fsts
scas
and
jmp
push
aam
ficoml
arpl
test
jb
js
repz
add
sub
xchg
jl
and
or
inc
mov
in
xchg
mov
adc
pop
mov
ljmp
and
push
or
sbb
or
nop
sbb
stos
mov
ret
and
sbb
mov
scas
test
decl
cmp
les
loop
mov
dec
hlt
in
call
jbe
jo
stos
push
lahf
push
cwtl
pop
xchg
call
outsb
popf
or
jmp
dec
neg
adc
pop
movsb
rolb
xchg
out
cli
jg
cmp
lds
sub
or
xorb
pop
add
sub
decl
xlat
jno
add
mov
in
push
jecxz
mov
roll
and
call
push
cli
jge
push
inc
fwait
sbb
hlt
push
sbb
cli
push
adc
push
call
inc
loop
pusha
cmp
jmp
jmp
or
xor
pop
xor
testl
push
jnp
adc
call
mov
sarb
out
pop
dec
mov
rolb
jmp
or
rep
mov
aaa
add
sub
cmovb
lock
mov
out
push
mov
or
cmp
idivl
mov
pop
adc
cli
call
sbb
icebp
cmp
add
push
subl
cli
jmp
sub
into
mov
mov
lret
and
cli
jnp
decl
inc
mov
push
and
enter
xchg
shrb
jl
ret
loop
lret
jnp,pn
mov
and
or
pushl
xor
mov
and
xchg
xchg
lret
sbb
nop
ret
lock
call
dec
xchg
add
lea
loop
and
out
cli
pushl
pusha
pushl
inc
or
dec
int
loope
push
aam
adc
leave
or
das
pop
add
push
push
mov
add
push
and
ljmp
mov
scas
lods
inc
lret
sub
mov
add
bound
mov
or
adcb
mov
xor
scas
mov
shlb
xor
or
push
mov
mov
sahf
sbb
lcall
or
fcmovnu
adc
ffreep
adc
aas
lock
roll
out
mov
jmp
out
hlt
leave
mov
mul
xor
mov
pop
jb
inc
xchg
in
mov
ret
stos
mov
pop
pop
xor
mov
daa
cli
lock
or
scas
pop
nop
leave
stos
sub
loop
sbb
xchg
sbb
fidivl
pushf
sbb
mov
les
dec
cld
outsb
cmp
jmp
cmp
dec
inc
outsb
enter
inc
sub
mov
inc
insb
adc
mov
stos
sbb
decl
and
adc
sahf
rorl
scas
xchg
mov
xor
push
cli
or
mov
nop
loop
mov
fs
clc
inc
and
and
lret
les
jmp
and
enter
mov
lock
in
call
inc
inc
je
dec
xrelease
xchg
push
bound
rcrb
insl
or
xchg
dec
cwtl
jp
and
call
sub
xor
into
mov
test
jg
push
push
stos
mov
test
pop
or
loope
insl
sub
pop
les
decl
xchg
scas
imul
mov
sub
cli
ljmp
mov
pop
add
sub
addr16
mov
lock
xor
jmp
and
xchg
adc
jp
xor
decl
mov
cmc
clc
xchg
or
test
inc
loop
incl
subl
lcall
and
inc
or
fcmovb
lcall
stc
and
xor
and
ja
out
cli
pushl
testb
daa
adc
rorb
hlt
xor
sbb
lods
xchg
adc
insb
std
ljmp
nop
notl
sbb
inc
pop
mov
bound
push
dec
outsb
outsl
rorl
ljmp
fcomip
dec
add
fwait
mov
jle
push
push
add
into
daa
sbb
mov
adc
in
or
lcall
adc
fwait
stos
or
xchg
mov
inc
pop
std
dec
or
xchg
dec
and
sbb
cmpsl
pusha
push
in
mov
fnsave
push
sbb
and
xchg
cmpsb
loope,pn
dec
lcall
mov
cmp
and
push
ret
stos
push
jne
dec
std
inc
sub
aad
ds
je
test
jae
test
repz
arpl
jmp
test
mov
movb
gs
xor
call
sub
xchg
dec
mov
jno
xor
push
loopne
dec
jae
divb
pop
cmpsl
imul
jmp
in
outsl
je
iret
fstpl
dec
subb
inc
xchg
inc
adc
add
je
fwait
xchg
mov
int3
adcl
fldcw
sbb
sub
or
sbb
lret
loop
nop
mov
adc
mov
or
pop
aas
xor
push
mov
dec
push
push
rorl
cltd
shl
sbb
mov
loop
lea
xchg
pushf
adc
dec
lods
popf
insl
test
ljmp
mov
xchg
and
mov
xchg
in
xchg
mov
rorl
mov
xchg
imul
call
aaa
xor
dec
loop
xchg
cmp
imul
dec
mov
stos
insl
ljmp
mov
cmp
or
adc
jmp
jp
leave
xchg
and
xchg
lahf
pop
pushl
push
jbe
mov
xchg
lds
push
ja
jg
pusha
les
jnp
pusha
and
pop
fwait
mov
pop
lds
mov
decl
in
mov
dec
lods
jbe
dec
fbld
mov
sub
outsl
popa
bound
mov
popf
jb
call
lcall
pop
out
inc
lcall
aam
pop
nop
mov
inc
js
xor
lods
lea
mov
pusha
in
fs
insb
divb
cs
mov
filds
and
mov
mov
enter
repnz
hlt
cmp
js
pop
and
scas
push
and
sbb
decl
les
dec
adc
aam
xor
fwait
cli
imul
cltd
mov
adc
cmc
add
out
xchg
mov
mov
lcall
les
dec
stos
mov
adc
lea
and
adc
call
pop
imul
movsl
xchg
mov
push
pushl
movsb
and
decl
dec
aam
inc
out
jno
mov
and
mov
decl
sub
ss
orl
cmpsb
push
cld
lcall
or
es
clc
cmp
adc
ficoml
out
pushf
movsb
and
ftst
rolb
mov
xor
test
call
dec
aad
xchg
xchg
mov
sub
dec
int
mov
lcall
es
call
add
repnz
pop
inc
ret
jbe,pt
xlat
xor
inc
cltd
jne
xchg
jno
pop
scas
in
in
or
shlb
hlt
sbb
in
call
pop
imul
call
out
rcrb
xor
aam
sub
call
ret
inc
call
stos
push
sbb
hlt
or
mov
outsl
cmp
dec
push
mov
pushl
lcall
jno
loopne
inc
or
or
sub
lds
cmp
movsl
aas
andb
inc
movsb
mov
data16
nop
mov
lods
stos
dec
nop
xchg
push
mov
dec
addr16
adc
aad
cmpsb
jb
incl
je
movsl
les
pop
hlt
jns
nop
cs
jmp
xor
cmp
stos
cmp
and
outsb
cmpsl
dec
sbb
xchg
mov
movsl
enter
fidivs
fadd
rcrl
lahf
es
bound
sar
pop
sub
jp
pop
xchg
mov
xor
add
pop
push
sub
cmp
ljmp
sub
gs
xor
outsl
adcl
mov
push
pop
pop
adc
idiv
ljmp
mov
loope
in
out
adc
enter
std
out
add
xchg
imul
add
in
pop
loopne
fstl
scas
xchg
mov
inc
mov
jmp
xor
incl
push
push
push
cmp
cmp
out
pushl
nop
cmpxchg
ficoml
stc
adc
cmc
lcall
add
enter
dec
pop
sbb
faddl
and
out
into
adc
in
jge
popa
mov
mov
and
pushf
or
pushl
mov
leave
inc
xchg
loopne
outsb
xor
dec
inc
pushf
inc
out
mov
mov
cs
dec
insb
cmp
push
insl
into
nop
ret
xor
dec
mov
jmp
lock
rorb
dec
lcall
into
mov
or
and
sbb
rol
inc
lea
jmp
adc
sbb
out
or
pop
addr16
or
repnz
dec
pushl
inc
subb
lcall
sub
pop
daa
xor
mov
fisttps
add
mov
sub
or
aad
and
pop
push
insl
pop
mov
or
es
xor
test
out
out
leave
pop
push
iret
jle
mov
in
decl
fwait
xchg
movsl
xor
bsr
into
jmp
or
repz
inc
in
testb
mov
and
xchg
psubq
cli
jg
pushl
jno
into
out
addb
stos
or
scas
cmp
ljmp
xor
cmp
inc
adc
hlt
decl
pushaw
in
ret
ss
lea
icebp
mov
cmp
test
hlt
outsl
call
cmpsb
sub
lret
dec
lods
add
add
push
inc
movb
mov
or
outsb
push
outsb
push
cli
sbbl
stos
jg
push
push
xor
lcall
das
push
call
jmp
out
jmp
mov
dec
cmp
sub
mov
xor
arpl
lcall
or
ja
loopne
int3
adc
mov
insl
add
push
or
and
dec
xchg
mov
adc
mov
out
add
fmull
icebp
pop
lock
add
add
in
mov
sub
and
mov
or
lret
aad
nop
cltd
dec
or
aam
das
mov
iret
jg
lock
cs
mov
pop
and
sar
jmp
notb
mov
mov
or
repnz
jge
dec
pop
pop
xorl
cli
xor
push
and
cmp
movsl
cmp
sub
sub
xchg
mov
add
popa
cwtl
ljmp
and
ljmp
adc
dec
inc
jbe
xor
stos
sbb
xchg
push
xchg
mov
push
push
test
sti
in
data16
mov
mov
das
pinsrw
hlt
sbb
mov
mov
call
std
clc
xchg
push
mov
sti
push
dec
sbb
lea
push
fisttpll
leave
mov
inc
cli
decl
sbb
push
lcall
test
add
pop
inc
push
pushf
pop
mov
in
jg
insb
push
xchg
cs
and
push
repnz
mov
push
push
xchg
mov
repnz
or
sub
sub
imul
mov
jmp
add
add
jns
ds
bound
xchg
push
push
dec
sbb
cwtl
inc
lcall
pusha
lods
imul
jge
mov
and
insl
xchg
aad
or
mov
sbb
and
mov
mov
in
stos
inc
mov
arpl
add
int
push
std
dec
fidivl
out
mov
push
pop
out
mov
stos
sub
lods
lds
pop
jmp
jecxz
inc
adcl
inc
pop
in
sub
cmp
mov
out
ljmp
inc
test
xchg
mov
xor
loopne
push
xchg
loop
enter
mov
rcrb
mov
in
subb
pushl
xchg
inc
dec
mov
out
mov
call
lock
rorb
adc
call
fimuls
leave
dec
movsb
add
mov
lods
add
push
and
rclb
ret
call
and
push
call
adc
xchg
jno
lods
in
mov
push
push
or
jmp
testl
mov
adc
pop
int3
mov
mov
insb
or
ja
push
ljmp
rorb
mov
sub
cmp
push
pop
push
lcall
addb
andb
adc
pop
mov
aam
addr16
sub
or
and
cs
pop
movsb
loopne
repnz
loop
sbb
add
jle
inc
pop
cmpsb
stos
data16
ret
decl
cltd
shrb
fninit
pop
clc
imul
adc
pushf
push
mov
iret
pop
mov
dec
mov
mov
add
movsb
mov
aas
push
mov
xchg
push
nop
out
repz
aaa
mov
push
push
push
mov
adc
jp
xor
test
jo
fcomip
test
stos
adc
ror
and
adc
adc
mov
cli
ret
shl
incb
adc
xchg
sub
or
in
int
inc
jae
int3
or
leave
repnz
sbb
dec
jmp
mov
test
jne
stos
rcrl
rorl
ja
cli
sub
jbe
dec
push
cmp
cld
pushl
xor
and
push
cwtl
sub
or
jg
rcrb
sbb
push
js
out
dec
ret
add
fsubr
ljmp
dec
lods
add
adc
aad
pop
lcall
or
sbb
insl
push
mov
push
jl
ljmp
movsb
and
and
addr16
pop
int
shl
xor
imul
dec
hlt
repz
jno
aam
popf
pushl
pusha
sahf
in
jg
dec
cmpb
bound
aaa
mov
fmull
mov
stos
test
xor
pop
aas
into
lea
icebp
incl
pop
mov
addl
bound
cmp
mov
push
lods
jecxz
ret
adcl
insl
imul
mov
push
notb
jnp
and
cmp
push
or
ljmp
call
add
popf
push
pop
dec
arpl
into
enter
mov
inc
shrb
fs
sub
lcall
cmp
ljmp
ret
cmpsb
jno
test
jecxz
decl
or
mov
dec
and
cmp
jo
jo
jne
mov
pushl
mov
jmp
lret
inc
loop
mov
ja
subb
or
add
xchg
mov
incl
cmp
xchg
lock
fimuls
es
ja
cld
mov
push
jl
or
push
pop
push
gs
scas
outsb
dec
push
call
cmp
add
aad
or
ret
mov
jle
mov
sub
jno
decl
and
stc
loopne
test
sub
push
and
inc
stc
bound
cmc
int3
inc
xlat
mov
popa
movnti
or
clc
dec
bound
push
cmp
ljmp
mov
hlt
lea
hlt
cmpb
adc
decl
mov
dec
mov
add
test
dec
dec
mov
inc
pushl
mov
mov
pop
xchg
mov
and
push
push
dec
dec
add
or
inc
icebp
jecxz
dec
test
test
mov
or
xor
mov
mov
incl
push
sub
outsl
sub
mov
mov
lcall
xchg
jmp
sarb
jmp
mov
and
xor
loope
push
and
mov
inc
or
jbe
pop
aas
or
cmp
out
pop
inc
xor
adc
pushl
lods
pop
jmp
cltd
scas
pop
test
adc
movsl
or
inc
push
js
data16
push
int
ss
sbb
inc
add
daa
push
jecxz
and
cmp
xor
dec
mov
mov
es
pop
sub
jno
int3
inc
cmpb
out
hlt
pop
and
xchg
push
or
mov
jg
ljmp
or
mov
dec
clc
lods
stc
hlt
add
sbb
clc
mov
incl
mov
cmp
xor
add
pop
int3
addl
mov
pushf
push
dec
mov
ret
js
cmp
push
push
es
adc
sub
fwait
and
sub
cvtps2pd
jmp
loop
mov
push
leave
push
insb
cmpsb
xor
dec
mov
push
push
mov
add
lods
mov
jns
sub
leave
jo
cwtl
mov
xchg
decl
mov
jae
or
sub
push
sub
sarl
mov
mov
aaa
out
push
mov
rorb
incl
cld
lret
cmp
sahf
adc
mov
or
fisubl
sbb
cld
jno
and
scas
pusha
and
movsb
sub
aaa
mov
rcll
push
xor
inc
pop
mov
sbb
int3
push
jnp
xchg
fildl
push
push
aam
fucomi
gs
add
ret
or
in
rcl
inc
andl
scas
xchg
mov
sbbl
cmp
pop
dec
inc
jb
xor
je
push
dec
lret
movsl
iret
incl
mov
insb
arpl
mov
out
repnz
iret
jbe
adc
cmpsb
pushl
push
gs
adc
mov
push
imul
dec
cmpl
jne
and
cmp
sahf
dec
and
push
mov
xchg
adc
test
lcall
scas
dec
dec
pop
imul
pop
lods
lods
insb
jb
mov
stos
movsb
cmc
lcall
push
xor
mov
movsl
aas
cmp
movsl
movsl
lcall
std
jbe,pn
into
mov
or
and
mov
inc
dec
dec
aam
and
adcb
cwtl
push
xlat
and
ljmp
ljmp
mov
and
sti
int
sub
mov
call
add
xchg
inc
push
jle
mov
rcrb
jle
out
xor
addr16
popf
xor
push
xlat
pop
arpl
cmp
pop
push
pushl
out
lcall
pop
aad
cmp
xchg
sub
ljmp
inc
aas
ljmp
shr
mov
movsb
mov
ret
push
jl
cmc
lcall
sti
mov
dec
outsl
test
fdivrp
sbb
lds
fadds
cmp
or
lcall
push
testl
xchg
push
imul
sbb
outsb
out
xchg
push
call
add
and
lea
mov
call
clc
shl
outsb
jmp
mov
cld
sahf
cs
pop
movsl
into
ljmp
mov
imul
xchg
and
lcall
pop
mov
loop
and
clc
push
or
pusha
out
cmp
int
or
js
ret
out
push
mov
xchg
jl
mov
mov
mov
js
lds
sub
and
bound
dec
xchg
xchg
dec
shl
jb
les
mov
and
sahf
mulb
mov
or
pushl
lock
jl
dec
jge
mov
inc
fwait
lcall
sarb
pop
pusha
pop
negb
imul
pushf
sbbl
cmp
mov
mov
cmp
inc
mov
lret
call
call
cmp
mov
jle
mov
inc
pusha
or
inc
sbb
inc
call
inc
insl
xchg
cli
incl
mov
add
jp
and
and
sub
ror
inc
add
mov
mov
addr16
adcl
sbb
call
add
jecxz
xor
xchg
outsb
sbb
and
jnp
push
lahf
push
xor
or
incl
out
xchg
mov
outsb
out
mov
push
sbb
in
mov
and
and
or
test
call
dec
adc
xchg
sahf
xchg
stos
popf
and
loopne
xchg
lds
sbb
insb
mov
push
sub
adc
imull
out
cli
lcall
std
mov
or
mov
pop
or
cmp
lcall
sub
add
cltd
adc
lods
rorb
iret
xor
dec
inc
mov
pushl
push
add
xchg
and
jl
std
in
sbb
adc
mov
ficoml
pop
sbb
xor
cltd
mov
jg
incl
lds
mov
cwtl
add
dec
and
or
insb
test
daa
mov
out
je
fiadds
mov
mov
lret
pop
aaa
or
subl
mov
fldenv
add
push
mov
inc
or
test
or
cmp
add
adc
mov
add
sbb
or
push
ljmp
orl
add
xor
scas
sub
loop
or
add
jno
inc
push
adc
ljmp
roll
push
stc
nop
mov
fildl
test
xchg
xor
inc
ljmp
pusha
rclb
inc
xchg
fldenv
xchg
xor
insb
push
jno
cmp
hlt
push
fwait
nop
mov
adc
sahf
mov
in
adc
outsl
xchg
sbb
addr16
add
sbbb
pusha
and
push
pop
popf
je
ss
mov
lock
decl
push
dec
aam
dec
sub
in
dec
sub
imul
push
pop
push
ljmp
dec
xchg
call
jmp
adc
xor
sbb
push
test
add
lds
push
ljmp
int3
push
push
push
add
adc
outsl
add
popf
sbb
adc
call
push
in
adc
cwtl
arpl
fs
mov
arpl
loop
cltd
ja
dec
mov
sbb
pushl
pushaw
jge
aad
add
sbb
addb
or
sbb
cmp
test
clc
and
pop
add
addr16
adcl
jle
add
mov
jbe
jge
shlb
and
les
dec
pop
sbb
mov
ror
jle
fstpl
aam
mov
jmp
dec
pop
dec
xchg
sar
out
and
jecxz
sbb
inc
or
mov
pop
es
mov
sub
mov
and
xor
call
push
shlb
nop
pop
xor
xchg
cmp
xor
mov
lcall
adc
jg
mov
jle
call
stc
js
sub
sbb
lods
orb
pop
sahf
mov
ljmp
sub
mov
stc
in
cmp
push
out
scas
mov
loop
add
xchg
ficompl
add
loop
lahf
cs
dec
aas
mov
stos
mov
addr16
hlt
sub
popf
add
mov
cmp
pop
dec
xor
jp
inc
cmc
adc
movsb
push
sbb
mov
add
jne
sbb
mov
ljmp
inc
mov
icebp
xchg
adc
mov
lcall
pop
scas
xchg
xchg
mov
xor
sub
cwtl
or
push
or
out
fldenv
or
or
inc
xchg
test
push
or
outsl
mov
outsb
inc
inc
outsl
mov
mov
rol
decl
mov
ret
adc
loop
lods
cmc
mov
sub
inc
mov
cs
jg
push
inc
mov
xorl
pop
xchg
jmp
hlt
out
add
xor
sbb
call
mov
adc
mov
in
int
test
inc
lret
shlb
cmp
add
loope
fcomip
scas
lret
and
lock
push
xchg
push
mov
add
mov
pushf
repnz
decl
or
movsb
sub
jno
inc
push
ret
in
adc
lods
ljmp
and
xor
out
cli
mov
inc
xchg
and
or
call
pop
sbb
ss
sub
pushl
sub
aad
shr
fld
dec
inc
jp
mov
je
es
push
gs
mov
lcall
dec
inc
cltd
sbb
dec
adc
jg
dec
cltd
out
push
adc
mov
jbe
ds
pusha
movsb
push
push
jmp
sub
ds
jae
mov
incb
sub
push
stos
or
lock
add
outsl
clc
cmpsl
das
test
neg
lret
andl
xchg
pop
cmpl
mov
out
xchg
rcr
ret
sbb
adc
jo
push
xor
adc
mov
inc
mov
mov
cmp
jno
dec
test
sbb
inc
sub
loop
cmp
cwtl
es
cld
mov
mov
cmp
push
test
jno
dec
popf
out
test
jno
jle
ljmp
cmpsb
lods
xchg
imul
insb
sar
incl
insb
jbe
sbb
xlat
dec
inc
dec
add
inc
nop
jo
es
pusha
mov
pushl
or
adc
test
test
test
dec
jo
lcall
adc
loope
mov
lcall
sbb
dec
jb
adc
shl
inc
inc
mov
cld
decl
mov
cwtl
mov
scas
mov
stos
adc
ficoms
jb
inc
xchg
je
push
cmp
aad
jb
addr16
adc
cmp
sbb
fnstenv
int
mov
jmp
dec
mov
push
roll
pushf
movsl
adc
dec
add
and
mov
mov
pop
outsl
jno
and
repnz
movsl
push
pop
inc
out
jg
imul
cld
gs
into
or
lcall
or
ret
ret
jb
jne
ljmp
lcall
js
ret
and
mov
lods
xor
and
mov
fiadds
aaa
xor
ljmp
and
incw
bnd
mov
outsl
clc
push
inc
ret
pop
cs
xor
fiadds
push
or
ljmp
pop
inc
dec
and
pop
cli
mov
xchg
icebp
popa
out
stos
call
loopne
or
inc
sub
add
dec
push
inc
xchg
rorb
scas
aas
jae
sbb
dec
or
lock
sbb
adc
mov
pop
xchg
test
mov
into
adc
rcll
decl
sbb
xchg
adc
lds
sub
addb
addl
dec
rolb
popa
fldt
test
incl
std
sub
lret
or
leave
dec
and
sbbb
scas
je
or
and
dec
inc
loopw
cmp
call
cltd
add
sub
lods
repnz
mov
cmpsl
pushf
in
pop
xchg
or
jp
cmpsl
stos
dec
loope
inc
shl
and
addr16
cmp
fcompl
dec
fldl
ficoms
repnz
fcoml
push
adc
mov
mov
lahf
jae
sar
outsl
push
cwtl
and
repnz
mov
push
fdivr
ret
jno
push
pop
push
mov
mov
cmpsb
filds
adc
sbb
dec
mov
push
js
js
cs
clc
fxch
mov
or
out
cmp
test
pushl
and
mov
pop
and
rol
or
xor
aaa
or
jne
dec
jb
lahf
mov
ds
decl
aas
add
dec
int
enter
pop
pushf
push
sub
fwait
mov
jnp
pop
pushf
sub
push
out
mov
aaa
std
pop
dec
sub
push
bound
jne
addr16
jg
mov
mov
ss
xor
mov
mov
enter
loopne
pop
lock
fldcw
ds
push
dec
punpckhdq
stc
mov
mov
dec
decl
ja
bound
mov
subb
add
push
push
lods
xchg
cmp
dec
mov
pop
xchg
add
and
imul
out
push
jmp
scas
xchg
sub
push
dec
pop
push
mov
push
adc
mov
mov
cmp
mov
push
lret
das
movsl
ljmp
mov
push
jb
xchg
xor
fisubrs
cmp
sub
push
sar
mov
push
sub
int3
fs
cmpsb
ljmp
in
dec
inc
mov
in
imul
in
or
or
sbb
scas
sub
filds
inc
loop
dec
push
icebp
loope
loopne
push
jg
jmp
inc
jae
jmp
jne
roll
popa
adc
sbb
xor
inc
jb
push
incl
push
sub
repz
xchg
filds
add
xor
gs
push
push
jg
call
arpl
mov
inc
lds
xor
xor
sbb
adc
lahf
shrl
mov
fcomip
out
ret
sbb
jae
add
ret
pop
das
sar
lods
push
xor
call
sbb
pop
imul
fcmovb
arpl
ret
clc
loope
mov
decl
bound
pop
pusha
shll
jbe
add
mov
int3
xchg
and
add
or
or
mov
ljmp
movb
xor
inc
pop
adc
xor
and
cmp
je
cmpb
pop
je
and
jmp
andb
data16
sarb
sub
adc
add
rorl
adc
inc
push
xor
aaa
in
cmpsl
xchg
mov
insb
test
push
jo
cwtl
mov
test
cmp
mov
xchg
daa
cmp
cmp
shrl
call
rorb
rorl
outsb
repz
dec
cmp
sub
shrl
cld
je
pop
xchg
pop
add
jg
into
xor
mov
incb
cmp
ret
sub
out
or
push
js
jno
mov
pop
call
jbe
xorb
adc
sbb
das
in
sbb
push
sbb
and
loopne
fwait
lcall
rcll
leave
popa
cmp
out
xor
call
xchg
adc
mov
mov
xorb
aaa
mov
sub
sti
decl
push
ss
or
aam
push
push
mov
xor
sbb
and
sub
clc
jmp
add
push
call
pop
xchg
and
ja
mov
jle
ss
sbb
ss
addl
lret
or
mov
or
mov
xchg
mov
push
push
jbe
push
fbld
les
pop
jge
xor
cmp
add
mov
imul
push
or
cmp
scas
push
test
cmp
and
aam
popf
xchg
pop
cmpsb
lods
lcall
jg
daa
xchg
test
jg
insb
pop
cmp
dec
or
mov
and
sub
imul
pushl
loop
addb
inc
mov
imul
inc
inc
outsl
push
push
pop
fists
adc
test
vdivsd
mov
aad
sub
incl
pop
out
xor
cmpsl
pmulhuw
decl
subb
adc
rclb
xor
cmp
jno
cld
call
xchg
out
dec
movl
nop
inc
jg
or
orl
pop
in
add
rcrl
and
je
jbe
mov
xchg
sub
push
shrb
jmp
sbb
mov
and
sub
cmp
mov
aaa
or
call
xchg
jno
sbb
mov
pusha
out
lock
inc
test
push
push
pop
pushf
xchg
xchg
loopne
jmp
jbe
mov
jno
aas
pop
xchg
and
xchg
outsl
ljmp
insb
fdivp
xchg
xor
mov
lds
xor
dec
jecxz
adcl
mov
xchg
push
rorb
jl
dec
adc
xchg
mov
ljmp
cmp
adc
jl
fstl
lods
xlat
daa
stos
daa
adc
cmp
jecxz
or
call
xor
pop
push
shll
mov
mov
adc
and
aaa
xchg
push
mov
call
push
cs
outsb
inc
dec
adc
lcall
jmp
pop
cmp
cltd
jl
mov
adc
dec
dec
ds
add
aaa
lret
cmp
sub
ret
ds
data16
ret
pop
mov
fists
adc
pop
dec
pop
loope
push
sarl
sbb
fsubrp
add
xor
push
out
scas
and
sub
popa
outsl
jno
fdivl
xor
jmp
subb
in
mov
clc
sbb
push
mov
mov
sbb
jg
sub
sbb
shl
scas
pop
jmp
sbb
sbb
sbb
ljmp
inc
xchg
hlt
jl
mov
in
mov
and
pop
hlt
inc
inc
aaa
test
add
xor
insl
rolb
gs
mov
add
mov
mov
outsl
and
jp
adc
cld
aaa
mov
aaa
rcrw
pop
mov
and
decl
xchg
jb
xchg
xor
inc
push
inc
pop
mov
pop
jo
leave
clc
mov
stos
and
or
shlb
jne
bound
lock
inc
adc
cmp
cltd
cmpsl
out
test
cmp
test
mov
pop
mov
jne
mov
adc
add
andl
lods
ljmp
addr16
leave
inc
sub
jge
scas
dec
imull
and
aaa
or
ljmp
orb
lcall
sbb
pushl
push
cmp
daa
rolb
sbb
cmp
outsl
flds
pushl
sub
push
outsb
ss
push
loopne
sub
push
or
sub
adc
jl
jmp
je
in
inc
lahf
adc
int3
fcomps
fdivrs
cmpsb
jg
and
rep
sbb
incl
lcall
xor
cli
das
or
cltd
das
adc
loope
sbb
addl
stos
outsb
lcall
sbb
xor
cmp
mov
in
xchg
jg
fcomps
mov
insl
sarb
insl
jo
adc
sbb
add
insb
xor
lock
jmp
aad
xchg
rcll
xor
jbe
sbb
jb
push
or
add
push
cld
out
xchg
shlb
hlt
movsb
pop
sbb
stos
mov
inc
and
xor
inc
add
cmpsb
decl
lcall
mov
cltd
call
dec
mov
pop
mov
mov
xor
aaa
mov
push
sarb
lcall
sbb
ret
cmp
pop
jle
push
dec
fists
loop
subb
rorb
pusha
or
call
enter
xchg
adc
fisttps
dec
mov
jnp
xchg
jl
add
lods
ret
cmp
xor
mov
out
adc
push
in
sub
xchg
add
lea
sub
adc
dec
cmp
les
notl
jg
sub
out
ret
sbb
jp
ljmp
fimuls
xor
popa
mov
xor
jg
decb
dec
inc
xor
shr
inc
sbb
sbb
sbb
xchg
xor
sbb
lcall
sub
add
jb
bound
mov
dec
das
es
push
xor
sub
sub
adc
push
cmp
jmp
lods
pop
fs
gs
clc
xchg
push
arpl
ja
pushl
ds
mov
push
mov
xchg
int3
es
and
fadds
incl
icebp
sbb
cli
add
divl
or
inc
retw
aaa
cld
bound
mov
and
inc
jl
cmp
xchg
mov
fldl
inc
int3
les
rol
rorb
mov
mov
adc
and
and
pushl
mov
cwtl
fwait
cmc
es
adc
aad
cmpsl
dec
add
add
mov
pop
sarl
cmp
pop
outsl
lret
jmp
sub
outsb
fnstcw
jl
cwtl
pop
in
xlat
jl
lcall
incl
popf
dec
sub
js
add
push
shrl
mov
outsb
xchg
arpl
std
outsl
mov
adc
pop
jg
push
mov
jle
imul
insb
jg
mov
aas
lods
cmp
pop
mov
out
cli
mov
lcall
and
lahf
fmulp
int3
hlt
fnstcw
jno
jmp
call
scas
xchg
jno
xor
jle
adc
call
test
xchg
iret
subl
call
cmc
lret
pusha
xor
gs
aam
cmp
inc
ror
pop
lret
fiaddl
xchg
xchg
and
lcall
and
ja
roll
push
sub
xor
lcall
ljmp
mov
stos
jg
sub
arpl
in
push
ss
mov
jmp
shlb
daa
daa
je
cmp
test
push
faddl
mov
pop
mul
std
jmp
xor
mov
mov
es
sub
sahf
negl
bound
call
cmp
add
or
pop
into
push
insb
sbb
loope
cmp
fmuls
inc
jl
jb
je
aaa
fsub
jns
insl
outsb
mov
and
cld
cmpsl
adc
adcb
aam
pop
jmp
adc
int3
stos
xlat
aaa
clc
inc
pop
bound
pop
xchg
imul
add
push
dec
sub
sub
dec
push
mov
and
jmp
dec
pusha
cs
aad
stos
ret
push
sbb
outsl
cli
cmc
adc
sub
loope
adc
jb
test
call
inc
inc
call
xchg
rcr
stos
scas
push
jno
cwtl
xchg
inc
fnstenv
repnz
jmp
cs
shrb
push
sbb
dec
inc
xchg
xchg
lods
jbe
adc
jecxz
push
aaa
jne
pushl
stos
test
mov
mov
xor
rcr
je
popf
shlb
cmp
fisttps
sbb
ror
adc
mov
or
mov
rcrb
or
call
ss
or
jg
mov
sbb
or
ja
cmpsb
dec
rorb
lea
inc
ret
movsb
icebp
fildll
pop
lcall
dec
add
hlt
call
add
pusha
add
and
cmpsb
xchg
sar
inc
push
xchg
cwtl
shlb
mov
insl
into
aam
scas
dec
inc
xorb
jg
mov
mov
test
xchg
xor
xor
js
jge
clc
incl
sbbl
jge
add
mov
mov
xlat
jmp
rclb
leave
cltd
jl
and
pop
outsb
leave
test
cld
lea
out
mov
push
enter
cmpsb
pushf
adc
add
jecxz
lods
rclb
or
rorb
xchg
adc
lods
sahf
scas
mov
fbstp
lods
cld
inc
or
push
idivb
nop
inc
decl
mov
int
nop
adc
ljmp
in
ret
lcall
adc
mov
jo
incl
les
lahf
inc
fdivrl
out
popa
into
sub
inc
fisttps
mov
adcl
jo
add
push
loopne
test
adc
sbb
sbb
inc
imul
mov
dec
xchg
mov
loopne
jo
and
xchg
xchg
xchg
pop
lcall
cmp
mov
or
adcb
insb
or
jle
cmp
mov
mov
mov
incl
shrb
pop
pop
stos
jmp
stos
ret
push
enter
and
mov
adc
pusha
push
jnp
das
add
sbb
and
xor
mov
xchg
or
arpl
dec
cld
xchg
sbb
push
pop
cmp
cmc
incl
add
and
xchg
and
push
adc
call
xor
cmp
mov
adc
inc
lea
lret
rorb
sysret
mov
inc
out
cmp
xor
and
les
xor
mov
dec
xchg
adc
aaa
cmp
out
dec
sub
ljmp
cmpb
shl
dec
xorl
dec
ret
add
sub
adc
mov
mov
sbb
adc
inc
jb
es
lret
push
sub
push
push
mov
sub
push
gs
fsubr
xchg
test
cmc
in
aad
dec
sarl
fidivrs
cmp
lea
fists
call
sbb
mov
or
fisttpl
aas
xchg
fidivrl
lock
out
packsswb
gs
jo
clc
add
lods
pusha
ds
insb
mov
jbe
ss
orb
ficompl
cli
dec
mov
push
sub
mov
out
mov
insb
ror
mov
mov
add
mov
aaa
add
cmc
test
push
call
jl
mov
mov
xor
popa
xor
xor
add
dec
mov
add
add
ds
mov
ret
and
loop
push
adc
mov
mov
and
push
mov
inc
adc
add
clc
jmp
orb
lcall
sbb
movsl
xchg
cmp
call
jge
enter
dec
add
cmp
loop
daa
push
pop
dec
mov
inc
sub
or
dec
push
dec
cmpl
je
dec
ds
incl
in
or
rol
stos
xorl
orb
push
xor
mov
xor
xchg
pop
xor
or
jmp
dec
mov
call
andb
sbb
test
stos
fsts
mov
ljmp
adc
jmp
hlt
rorl
mov
test
cli
jmp
sbb
lods
cltd
mov
sbb
sbb
push
mov
mov
cmpsb
cmc
das
cmp
stos
pop
pslld
loope
mov
ficoms
sub
js
cs
or
mov
lret
mov
pop
or
xor
mov
mov
bound
xchg
cmp
icebp
lcall
jg
inc
mov
inc
sbb
mov
out
cmp
jle
cmp
fcmovu
pop
stos
icebp
daa
and
shr
dec
std
notb
mov
clc
cmp
fwait
cmp
cmp
fisubrs
inc
sbb
ljmp
jmp
jmp
jb
scas
lcall
out
sbb
movsb
pushf
xchg
dec
and
int3
das
dec
mov
pushf
lock
in
in
pop
adc
or
mov
jae
and
inc
inc
decl
mov
cmpsb
push
pusha
popa
adcb
std
fdivl
push
pop
jg
incl
loop
shll
lret
stos
enter
std
push
movsl
push
xor
mov
sar
call
cmp
js
mov
cmpsb
arpl
call
mov
aam
mov
push
xchg
jl
pop
push
dec
push
sbb
aad
enter
push
dec
es
pop
xchg
push
out
push
push
jne
gs
jmp
mov
or
lods
je
and
decl
aaa
xchg
mov
mov
scas
mov
xchg
add
int3
mov
mov
jb
adc
add
sub
push
lock
xchg
and
xchg
fildll
sbb
mov
add
data16
and
lds
mov
inc
ret
pop
jp
adc
and
iret
xchg
push
or
andb
inc
incl
cld
dec
cmp
pushf
add
lods
inc
js
mov
in
out
movsb
test
push
add
xchg
push
adc
sub
push
ljmp
pop
stc
jmp
lret
and
push
xor
cmp
cltd
or
fisttps
xchg
sub
push
inc
cmp
or
mov
leave
cmp
jp
adc
call
push
loopne
pop
mov
mov
inc
sbb
call
jecxz
xor
and
mov
sub
add
sub
push
jo
aad
repnz
mov
or
ljmp
cld
cld
mov
mov
push
clc
adc
jp
aas
ds
sub
jb
ljmp
add
movsl
addb
enter
dec
es
jmp
shrl
pop
and
fcomip
dec
subb
call
mov
iret
cmc
daa
push
sbb
jl
xor
pop
sahf
bound
or
lock
pop
inc
adc
dec
sub
or
cmp
dec
das
lods
or
add
mov
bound
and
mov
ljmp
pop
leave
lret
xchg
ljmp
cmpsb
mov
dec
inc
and
movsb
jmp
push
or
push
aas
popa
push
dec
lret
call
push
lret
inc
sbb
arpl
fwait
clc
lods
cmp
mov
insb
xor
add
pushl
std
pop
inc
xchg
frstor
fs
lds
ds
cmp
call
frstor
xor
in
lcall
imul
pop
cwtl
call
fstl
xchg
cmp
xchg
adc
dec
loope
add
in
jl
inc
sahf
dec
xchg
or
fistpl
and
inc
xchg
clc
decl
mov
fmull
jg
sub
in
outsl
clc
add
pop
jo
aam
cmp
jb
pop
jno
push
and
pushl
shlb
push
lcall
adc
jno
sub
xchg
pushf
inc
pop
shlb
frstor
lcall
outsl
xchg
pop
bound
lods
jno
xor
adc
pushf
adc
das
andb
mov
dec
fcoms
fcomip
decl
push
gs
and
cmp
fiaddl
inc
or
adc
sbb
movsb
loop
xor
hlt
cmpsb
mov
popa
je
out
add
jmp
enter
dec
cmp
sub
mov
incl
sub
push
and
cmc
rcrl
adc
lock
pop
mov
adc
ljmp
icebp
bound
cltd
mov
xorl
decl
into
std
mov
xchg
add
push
push
mov
ljmp
xchg
aaa
and
push
inc
shrl
fsts
push
lds
lock
gs
adc
mov
lret
push
sbb
sbb
rorb
push
mov
mov
ljmp
lret
fwait
cmp
repnz
mov
adc
mov
mov
in
das
cli
ljmp
mov
adc
mov
imul
cmp
lods
adc
leave
push
std
cmp
repnz
jns
adc
lea
dec
sub
lcall
ret
fcoml
icebp
popa
add
pusha
add
sbb
rorl
mov
sbb
fildll
jb
pusha
mov
scas
sub
and
add
adc
ljmp
clc
dec
sar
or
cmp
popa
das
and
jl
mov
movsl
mov
insb
outsb
ss
loop
dec
dec
ret
add
mov
nop
push
hlt
push
mov
sbb
mov
into
clc
divl
cmp
dec
jne
jge
mov
sbb
cmp
add
pop
push
pop
test
sub
and
call
and
call
mov
lea
pop
mov
or
gs
mov
imul
xchg
imul
lret
addb
scas
xor
popf
call
pop
inc
xchg
mov
xor
jae
sbb
cmp
or
out
stc
cmp
and
jg
movsl
sub
sahf
mov
lods
fwait
jae
add
add
dec
add
cli
pushl
repnz
fadds
mov
nop
lcall
add
in
je
lds
mov
xchg
aaa
mov
dec
cli
mov
aam
inc
push
xor
in
push
add
jb
sti
sbb
and
push
out
jg
mov
add
and
adc
subb
je
and
call
xchg
test
sbb
xor
add
ljmp
mov
or
adc
and
test
testb
mov
adc
leave
shl
stos
nop
mov
in
sarl
jmp
mov
adc
cltd
xchg
bound
mov
adc
add
xchg
cwtl
cmp
loopne
clc
jmp
es
xchg
inc
mov
or
adc
push
dec
shll
pushl
dec
xchg
rcr
and
push
mov
mov
mov
push
cltd
and
cmpsb
enter
incl
and
or
insl
fsts
dec
adc
mov
subb
add
mov
xchg
scas
mov
mov
lcall
adc
add
and
mov
lcall
daa
repnz
xorb
cmc
cmc
mov
cmp
sub
xchg
ljmp
add
mov
clc
movsb
dec
repnz
sbb
cmp
movsl
or
sbb
adc
shll
xor
sbb
dec
sbb
and
sbb
jno
decl
rolb
or
pop
mov
imul
push
fldcw
jmp
jns
cltd
jecxz
out
sbb
cmp
mov
mov
ss
aam
cld
or
sbb
inc
call
out
mov
int3
sub
mov
filds
xor
adc
insb
rolb
or
add
incl
test
es
or
sub
or
outsl
clc
mov
push
shll
or
jmp
push
jmp
add
fcomip
inc
shr
push
xchg
inc
xchg
pop
sub
popf
xchg
lock
pop
jno
fisttps
pop
lahf
push
or
ret
sbb
in
or
xchg
sahf
dec
jmp
das
sar
clc
loope
add
sbb
add
mov
scas
nop
push
jg
and
movsl
or
mov
mov
test
mov
mov
lahf
gs
pushf
imul
cmp
inc
xchg
repnz
xchg
js
mov
sub
das
mov
cmp
ret
mov
and
and
and
inc
lcall
xchg
mov
loope
mov
lahf
cmp
loopne
sbb
movsb
mov
fimull
pop
and
stos
and
mov
out
cli
cli
sub
mov
mov
xchg
push
add
mov
ja
cli
incl
cmp
add
or
add
jmp
shrl
mov
mov
bound
fcos
jg
pop
and
xchg
pop
mov
or
imul
mov
mov
add
xchg
mov
addb
pop
adc
sub
xor
repz
enter
imul
call
fiaddl
subb
sar
mov
incl
add
call
into
sub
sub
outsl
mov
outsb
jge
lcall
incl
aam
in
sub
arpl
stos
rorb
orb
fwait
or
xor
inc
jno
sti
hlt
or
lock
sub
jecxz
jmp
adc
incl
mov
or
cwtl
mov
sbbl
imul
mov
xor
imul
mov
add
mov
push
arpl
movsb
sub
adc
sub
mov
lcall
aam
mov
or
movnti
sub
push
mov
inc
loop
push
movsb
clc
inc
xchg
leave
add
mov
cmp
rorb
add
rolb
push
sub
push
xor
adc
mov
push
xor
call
and
mov
in
and
sbb
testb
or
add
call
lcall
inc
fwait
decl
lcall
ljmp
stc
fmuls
les
int
lcall
sbb
les
add
in
test
repnz
and
test
ljmp
fwait
shr
sub
push
mov
and
loopne
mov
roll
das
cli
pushl
outsb
fs
dec
xor
jb
xor
cmpsb
icebp
push
xorl
incl
or
push
xor
cmp
and
jne
popf
xor
and
fists
aas
leave
mov
lods
push
jne
jae
lahf
inc
cmp
inc
rorl
and
icebp
aas
sub
out
sbb
mov
sbb
lret
inc
lods
fsubrs
xchg
nop
adc
aad
rorb
and
lds
icebp
mov
jge
xchg
xchg
xor
arpl
jmp
cwtl
cmp
jno
add
loopne
mov
leave
stos
or
add
lcall
push
cmp
or
dec
pop
jp
jg
pushl
sbb
jmp
hlt
jnp
test
cwtl
pop
test
dec
jg
sbb
rcll
xchg
dec
rcrb
sub
mov
mov
cli
outsl
mov
add
imul
enter
popa
loop
out
in
shlb
call
pushl
mov
shlb
mov
xor
scas
clc
sbb
shrb
xor
call
inc
dec
idivl
cmc
push
push
ljmp
or
push
jp
ljmp
lds
jmp
inc
xlat
lret
repnz
push
ret
call
mov
rcl
lods
fdivrp
stos
decb
lcall
popa
mov
sbbb
stos
dec
pop
push
lcall
dec
push
add
and
andl
aaa
imul
sbb
clc
mov
pop
adc
pop
subb
add
aas
cld
sti
bound
mov
fdivs
aaa
adc
sub
add
pop
xchg
mov
xchg
dec
sarl
lods
xor
jno
jnp
mov
fbstp
cmc
jge
hlt
into
hlt
fldl
stc
inc
and
std
adc
nop
js
pop
and
xorb
pusha
shrl
add
inc
jl
sbb
pop
xor
pusha
pusha
jl
pusha
rcrb
orl
pushl
mov
into
mov
adc
stc
mov
xor
mov
ret
jbe
loope
xchg
and
push
mov
xchg
in
jg
jg
sbb
xchg
pop
mov
add
cmpl
mov
or
pusha
popa
or
fidivs
loop
push
popa
into
pop
or
inc
mov
add
xor
mov
aas
push
jae
adc
add
ljmp
sar
mov
mov
flds
adc
and
push
cwtl
mov
push
sti
or
cmp
and
ret
xchg
imul
mov
cltd
mov
outsb
sub
fwait
inc
adc
mov
fcmovbe
out
sub
mov
ret
pop
sub
loopne
shrl
push
xor
pushl
enter
mov
int3
mov
mov
mov
inc
sbbl
mov
sbb
jns
push
jecxz
lea
push
inc
movsl
push
or
lea
pusha
mov
call
rcrb
pop
sub
movsb
dec
and
clc
xchg
xor
gs
pop
loopne
mov
sbb
jno
dec
inc
xchg
and
add
pop
cld
decl
and
roll
dec
fidivrs
outsb
add
mov
or
sbbl
call
sti
lods
jmp
add
dec
dec
cltd
xorb
fs
jecxz
ljmp
mov
stc
loopne
push
sub
add
xor
repnz
sbb
inc
lds
mov
mov
sub
add
fadds
sbbl
orb
imul
mov
mov
inc
mov
sbb
mov
add
add
cmp
into
sbb
inc
ljmp
icebp
adc
push
ljmp
enter
jecxz
mov
cmp
or
fisubrs
scas
ret
jg
les
or
scas
jnp
add
sub
repz
jg
in
xor
fwait
arpl
xor
arpl
pushf
lods
pop
lcall
fimull
xchg
pop
test
shlb
or
in
sbb
fisubrl
mov
xchg
sbb
idiv
mov
lret
pop
cltd
ret
and
nop
cmp
xor
inc
cwtl
push
rcl
out
mov
ljmp
push
xor
xor
fwait
pop
lods
sbb
xor
inc
cmpsl
lcall
ljmp
in
call
shl
push
sbb
fs
inc
lea
cld
ljmp
push
ret
inc
add
in
in
nop
mov
mov
mov
aaa
cmc
in
adc
daa
push
add
loopne
gs
popf
test
pop
sub
push
or
jo
push
jo
fwait
push
xchg
out
mov
jbe
es
xor
mov
call
loopne
insb
sbb
dec
loope
jge
rolb
cmp
scas
clc
mov
lcall
xor
decb
or
sahf
nop
cmp
push
adc
pusha
or
push
mov
aas
cwtl
fadds
cmpsb
xor
sbb
mov
inc
inc
in
psubusb
mov
dec
push
cmp
movb
mov
and
jb
out
nop
mov
out
sbb
decl
lds
mov
adc
add
nop
or
mov
xchg
imul
xchg
push
cmpb
lea
cli
adc
cmpsb
orl
sarb
jp
inc
lret
push
sub
fistl
iret
push
ffree
js
pop
sub
aaa
jbe
pop
sbb
adc
sub
and
cld
pushl
xchg
pop
mov
sar
insb
in
in
mov
cmp
push
scas
sbb
out
cmpsl
test
aas
and
imul
call
mov
push
mov
sbb
or
add
mov
lcall
lods
adc
stc
pusha
fyl2xp1
fsubr
add
subb
mov
add
mov
data16
push
sub
sbb
sbb
fbstp
add
sbb
push
notl
xorb
lret
pop
inc
jno
mov
pop
sbb
out
inc
dec
and
add
int3
push
xorl
sub
sub
add
test
xchg
xor
outsl
cli
flds
lock
addb
cmpsb
js
jno
cmpb
iret
js
dec
icebp
jg
ljmp
das
jno
push
mov
sbb
aas
inc
subb
lcall
arpl
push
loop
mov
push
repz
fnstenv
cwtl
cs
adc
and
adc
cmp
xchg
add
cmpsb
pop
add
pop
decl
jno
xorl
gs
inc
out
mov
out
mov
daa
dec
fistpl
inc
sbb
popl
or
and
xor
adc
pusha
sti
mov
mov
jnp
cmp
or
nop
in
sbb
inc
jmp
or
mov
in
outsl
sub
in
jnp
pop
push
nop
call
add
ss
sti
sbb
loope
cltd
decl
and
jge
sub
mov
or
sahf
in
mov
call
mov
cwtl
inc
xorb
inc
int
lret
cmp
push
outsl
clc
lcall
xchg
fcompl
or
movsb
lock
jg
adc
lret
out
aam
pushl
lds
shll
fmuls
ret
lock
mov
int3
repz
sbbb
sbb
or
or
sar
nop
dec
lock
mov
pop
in
orb
pop
clc
mov
popa
lret
push
pusha
and
fadds
call
dec
lret
adc
addl
or
inc
adcl
cmp
ljmp
and
xchg
pop
gs
mov
adc
add
test
sub
push
cvtpi2ps
cltd
push
enter
add
add
xchg
ret
sbb
mov
lcall
or
mov
push
add
sbb
orb
scas
pop
or
adc
add
and
cmp
decl
negl
inc
mov
xor
sub
imul
and
ret
fisubl
xor
push
clc
mov
mov
mov
cwtl
jmp
aaa
mov
inc
hlt
ljmp
enter
xchg
adcb
add
sub
cmc
and
xchg
fimuls
mov
push
and
les
loopne
push
mov
push
add
or
inc
pop
bound
loopne
jp
inc
in
test
and
xor
xor
incl
inc
adc
jns
andb
dec
mov
inc
sbb
xchg
loope
add
and
es
test
outsb
sbb
stos
jmp
cmp
push
movsb
jns
jl
popa
add
jb
mov
daa
ret
xchg
push
test
inc
loop
pop
adc
aad
push
xchg
push
fidivs
mov
cmp
sbb
dec
sbb
jmp
mov
and
push
xor
pushf
and
pop
popf
jb
mov
jns
add
xor
mov
loopne
sbb
lahf
fcoms
dec
sub
test
add
ljmp
mov
mov
xor
xor
shr
aaa
scas
ficoms
popa
std
jmp
jp
mov
dec
mov
push
popf
nop
clc
inc
fnstcw
mov
mov
and
out
or
xchg
jbe
and
adc
adc
and
xchg
push
inc
popa
inc
inc
adc
push
roll
andb
cmc
adc
stc
out
add
je
sbb
push
pop
insl
imul
inc
dec
popa
inc
sbb
pushf
cld
ja
cli
jo
sub
test
adc
rclb
pop
push
add
mov
mov
push
pop
addr16
sbb
mov
ljmp
add
icebp
je
mov
pop
push
repnz
xor
adc
mov
inc
push
rorl
hlt
iret
fdivrp
incl
mov
in
lea
test
test
enter
aam
mov
or
nop
push
or
xchg
jl
call
in
sbb
adc
hlt
push
mov
scas
mov
arpl
mov
fcomip
lcall
cmpsb
push
call
out
xor
push
clc
pusha
std
hlt
pop
inc
aas
or
incl
lock
fwait
js
test
cli
pop
inc
inc
movsl
ljmp
pop
insl
xchg
mov
jmp
js
pop
jg
jo
xchg
in
loop
incl
movq
icebp
out
ss
fs
mov
bound
fisubrs
test
mov
out
inc
jo
inc
or
clc
loopne
jne
push
shll
push
ds
ss
mov
fndisi(8087
out
xchg
xor
scas
fldenv
mov
fistpll
arpl
rcr
adc
stos
jmp
mov
add
mov
cmc
gs
sub
mov
xor
call
lock
cmpsl
ret
push
sbb
add
je
inc
and
incl
fisubrs
xor
loop
add
xchg
ss
call
sahf
mov
and
xor
mov
int
mov
or
xchg
inc
mov
add
pop
push
push
add
dec
push
push
nop
cmp
jg
pushf
add
test
add
pop
test
mov
in
arpl
inc
push
xchg
pop
push
mov
inc
decl
or
es
jg
arpl
fcmovbe
push
cmp
icebp
push
jle
push
cmp
xor
loope
sbb
add
push
fisttps
pop
call
mov
mov
int
filds
mov
xor
jnp
orl
jmp
sub
data16
sub
sbb
mov
dec
push
iret
andb
and
pusha
add
rorb
pop
xor
adcb
daa
loope
xor
addr16
inc
into
push
jmp
nop
sbb
ret
mov
push
rcll
sbb
cmp
pusha
add
clc
jnp
pop
pop
negb
lcall
loop
add
jo
add
addl
out
push
lea
sub
mov
leave
shr
ja
popf
or
fs
sub
and
inc
sbb
push
clc
stos
incl
fs
mov
and
sbb
pushl
lret
pop
adc
shl
dec
lret
push
mul
cmp
decl
popa
or
sub
mov
inc
clc
mov
adc
inc
pop
pop
mov
pop
and
xor
pop
xor
lods
sbb
push
bound
jb
sbbl
mov
in
loop
pushl
enter
lret
mov
stos
test
xor
mov
dec
std
loopne
ret
push
lock
adc
mov
jp
add
test
je
push
decl
mov
inc
adc
enter
pop
fsubs
add
add
jno
adc
rclb
and
std
aas
push
shl
xchg
movb
nop
mov
xor
cmp
and
pusha
adc
leave
sub
sub
xchg
mov
stos
and
push
imul
push
leave
movsb
ds
popa
mov
mov
jmp
jmp
adc
cwtl
lods
ljmp
cmp
mov
pop
js
jne
pop
nop
fimuls
gs
xlat
push
push
and
lcall
fcmovnu
dec
or
nop
xchg
dec
inc
push
or
sbb
test
dec
mov
gs
mov
call
pusha
xchg
jl
lock
sbb
int
ret
dec
push
out
cld
lock
sub
sbb
sub
sbb
add
xchg
std
out
and
rolb
call
xor
push
or
aaa
mov
xor
xor
out
xor
mov
les
push
mov
sbb
stos
incb
scas
fnstenv
mov
cmp
add
sbb
in
cmp
cli
ja
push
lock
test
int3
ds
hlt
test
cmp
mov
incl
jae
push
sbb
mov
xlat
cmpsl
fsubrs
ja
pop
lret
jo
jg
stos
rolb
clc
sub
sub
pshufw
pop
mov
or
jo
pop
orb
xorb
adc
pop
mov
mov
sti
js
push
add
mov
jp,pt
imul
sbb
mov
mov
sbb
jp
cmp
mov
mov
xchg
jg
jg
out
jp
jbe
cltd
int
loopne
pop
ret
mov
in
shrl
ljmp
mov
call
pop
shr
pop
aaa
mov
push
movsl
test
aam
mov
ljmp
loopne
adc
push
and
or
pushf
or
cmp
aad
inc
mov
mov
fsubs
mov
sbb
dec
les
imul
pop
lea
pop
inc
add
aas
adc
addr16
dec
in
push
add
call
testb
cmp
stos
jno
add
adc
mov
mov
sub
xlat
mov
icebp
pop
inc
mov
add
dec
jl
sub
incl
pushl
fwait
and
fwait
dec
adc
mov
jg
or
sub
xor
js
push
jns
ret
sub
mov
dec
cmp
incl
jns
lret
push
dec
push
andl
lock
das
insb
and
xchg
call
xchg
jbe
jmp
sub
sbb
call
enter
adc
lret
add
or
pusha
cmpl
decl
xchg
xlat
mov
cmp
andl
loop
adc
pop
jge
pushl
xor
paddd
inc
pushf
jbe
dec
jg
or
dec
lds
mov
sub
jg
and
dec
gs
mov
loop
popf
or
fiaddl
ret
cmc
pop
adc
test
jg
test
notb
std
pop
inc
loop
cmpsb
cld
sub
cmp
ja
cmp
jg
adc
ljmp
pusha
add
test
pop
call
xor
inc
incb
loopne
jg
pop
add
add
and
dec
mov
lcall
or
cmp
outsb
push
inc
mov
sahf
push
cli
fldt
inc
push
cs
xor
les
pop
sbb
push
data16
mov
push
popa
adc
or
mov
sar
ret
mov
push
addr16
fwait
xchg
xchg
xlat
xchg
lods
sbb
dec
dec
pop
inc
insl
or
les
pop
add
xchg
and
or
xchg
sbb
mov
incl
and
dec
fs
dec
xchg
adc
loope
into
dec
adc
add
cmpb
dec
cmp
in
sbb
jne
pop
push
lahf
adc
pop
hlt
lods
dec
or
pop
popa
subl
jmp
enter
imull
add
adcb
or
xchg
fists
stos
mov
inc
fcompl
cmp
push
inc
popf
and
mov
inc
inc
dec
mov
mov
mov
or
dec
shrl
aam
icebp
sbb
adcl
push
adc
adc
inc
sub
xor
pop
addl
xchg
adcb
aam
add
and
lods
add
mov
jg
mov
inc
jecxz
add
mov
xor
ss
inc
and
adc
push
mov
shll
inc
out
call
push
cmc
cltd
adc
add
pop
shll
or
push
mov
stc
lods
adc
or
jne
pop
cltd
cmc
adc
dec
stc
pushf
inc
out
js
pop
lcall
aam
mov
sahf
sub
stc
rcrb
pop
fdiv
add
mov
movsb
pushl
add
sbb
cld
mov
or
test
sbb
xor
jg
jle
adc
filds
lcall
cld
fcomip
xchg
pop
dec
cltd
add
push
movsb
fadds
push
and
rorl
inc
ja
dec
pushf
and
adc
mov
or
mov
pop
mov
hlt
pop
adc
loopne
add
pop
into
and
ljmp
gs
and
pusha
sbb
ljmp
jmp
mov
incl
gs
lahf
popa
lcall
inc
pop
divps
xor
cld
sarl
push
ret
mov
fwait
call
mov
push
jge
push
xchg
mov
xchg
add
push
sub
nop
push
rolb
pop
mov
les
insl
popf
loope
push
fdivs
in
je
les
sbb
ret
or
iret
decb
mov
aas
add
push
rcll
fcomip
fwait
outsb
add
and
jp
mov
addr16
or
aaa
dec
dec
add
xor
shr
clc
dec
stos
int3
orb
mov
pushl
sub
loopne
into
xchg
inc
inc
test
sub
jne
fisubl
fdivr
add
push
mov
dec
subl
mov
pop
xor
push
xor
add
js
test
xorb
jl
add
fsubp
mov
xor
or
ds
inc
add
or
lods
add
or
push
fcmove
pop
sbb
call
xor
adc
adc
add
or
insb
inc
xchg
mov
xchg
stos
push
jge
lcall
mov
cmp
enter
rolb
sub
inc
jge
pop
out
add
cmc
mov
mov
clc
inc
dec
or
adc
lcall
sub
pop
add
sbb
push
add
pop
push
fs
scas
inc
pop
push
test
add
mov
add
and
jo
rorb
adc
pushl
cmp
stos
dec
and
scas
push
push
or
into
push
stc
cmpb
rcrb
sbb
sbb
inc
dec
mov
pop
cld
decl
aam
dec
insl
rorl
insb
jbe
pushf
es
xchg
bound
pusha
jno
adc
mov
rclb
push
xor
dec
xorb
or
cli
incl
mov
jmp
cmp
jmp
jno
ljmp
sub
bound
push
push
xchg
adcl
lock
sub
lret
enter
shrb
hlt
incl
cld
jmp
mov
dec
cwtl
sub
pushl
es
push
imul
nop
cmp
les
xchg
sar
ret
inc
xor
or
mov
jge
add
inc
aas
je
fldt
jle
dec
fs
dec
call
add
fcompl
pop
cmp
pushl
inc
inc
xchg
pop
mov
lods
dec
aam
or
in
xor
pop
cmp
call
push
mov
dec
or
sbb
insb
adc
paddsb
ss
in
test
in
shrb
movb
in
cs
dec
jl
popf
adc
adc
inc
or
mov
cld
pop
cmpl
fisubrs
mov
gs
fsubrs
xor
fcmovb
xchg
movsb
sbb
push
add
xor
add
and
pop
fcomip
pop
xor
hlt
xorl
sub
arpl
shrb
xorb
jmp
ss
outsb
sub
sbb
inc
cs
pop
jmp
add
sbb
mov
jg
pushl
mov
in
fs
out
sarl
jns
xchg
std
mov
mov
in
or
daa
testb
mov
scas
dec
fwait
sub
pop
rcrl
call
mov
adcl
cmpsb
adc
clc
into
push
dec
test
inc
jp
inc
andl
inc
push
incl
fildll
add
enter
and
cld
shlb
jmp
pop
push
mov
xor
sub
mov
inc
dec
test
mov
mov
sbb
lret
dec
loop
jne
mov
stos
push
addb
and
std
mov
and
icebp
das
sbb
xchg
adc
or
sbb
xchg
jmp
xchg
sub
icebp
testb
xor
mov
sub
fcoml
fadd
adc
lcall
movsb
xor
sbb
jmp
out
fistpl
push
insl
or
jns
push
or
jmp
mov
mov
sbb
jle
mov
and
loopne
incl
adc
or
pushf
mov
mov
aam
shlb
mov
cmpsb
pushf
xor
pop
or
adc
inc
cmp
cli
inc
ss
cmp
pop
and
adc
xchg
pop
push
insb
shll
or
hlt
pop
in
sar
push
xchg
sbb
sbb
nop
bound
mov
pop
fiaddl
out
pop
loope
xor
push
pop
cmc
call
xchg
loopne
xor
jae
sub
adc
andl
ljmp
adc
xchg
sbb
subl
fimuls
add
mov
cwtl
cmp
or
imul
add
mov
or
adc
stos
fstpl
fdivs
add
and
cmc
call
jl
repnz
jo
insl
loopne
dec
fsubl
das
sahf
out
push
movsb
jne
jmp
add
test
lds
clc
cmp
mov
ljmp
sarb
jmp
and
lods
sbb
and
or
add
sbbb
leave
orl
sub
adcl
pop
andl
jno
lcall
sbb
aam
pop
push
add
aad
adc
cmp
cmp
xchg
push
std
rcll
inc
adc
push
dec
push
std
inc
insb
add
ffree
add
sub
inc
movsb
call
lcall
mov
or
and
jmp
xor
push
inc
mov
outsl
imul
push
add
or
adc
cmp
hlt
pop
rcll
cli
es
push
sbb
push
cmc
mov
aaa
push
cli
js
loope
jmp
sbb
sbb
dec
pop
lods
std
mov
nop
or
call
bound
add
push
cld
sbb
cmpl
pop
sbb
sti
pusha
shl
orb
addr16
dec
clc
sub
aad
lcall
addr16
sub
jg
bound
stos
notl
int3
aad
add
imul
fldenv
pop
xchg
pop
lds
jg
or
add
outsl
hlt
sub
lahf
je
jge
push
sub
lret
push
lock
adc
mov
jecxz
popf
je
pop
cli
sub
ret
ret
out
xor
std
pushl
sub
cmp
add
mov
arpl
adc
sub
push
inc
adc
mov
sbb
inc
ja
test
ss
inc
fmuls
inc
enter
incl
mov
push
mov
shll
adc
fs
pushl
ljmp
xor
rol
imul
xchg
xchg
popa
out
jl
filds
iret
or
fcomip
cmp
test
xchg
pop
add
scas
stos
push
in
xor
pop
add
lea
mov
test
in
int
outsl
jle
rorl
xor
push
test
pop
pop
dec
fisubrl
movsl
push
cltd
popl
cld
inc
test
sbb
jge
ljmp
hlt
mov
negb
imul
dec
adc
dec
add
fldcw
xchg
jmp
out
decl
js
ret
mov
inc
mov
imulb
adcl
push
dec
hlt
jmp
xchg
test
enter
insb
add
mov
jmp
push
popa
pusha
mov
outsb
or
insb
adc
cwtl
fdivr
inc
adc
sahf
push
fcompl
pushl
inc
pop
pop
adc
bnd
cvttps2pi
push
imul
push
fsubs
mov
ja
cwtl
push
imul
sub
aad
xchg
ja
add
mov
mov
dec
inc
mov
add
ja
shl
jg
jl
out
xchg
push
mov
push
dec
leave
popa
lds
inc
and
cmp
xchg
ds
ljmp
jg
testb
adcl
mov
add
cmpl
lock
cs
mov
inc
add
hlt
dec
dec
add
jl
jp
and
repnz
dec
xchg
dec
loop
subb
pop
mov
cld
cmpsb
decl
loope
mov
inc
sbb
popf
jbe
scas
cli
incl
jle
dec
ja
and
pop
xor
sahf
cmc
cmpb
push
call
mov
inc
test
clc
inc
push
pop
jo
cmc
mov
shrb
mov
gs
loopne
add
outsb
test
loop
sbb
decl
nop
push
or
stos
insl
andl
mov
dec
mov
mov
ljmp
adc
ret
push
xor
nop
adc
cmpsl
sbb
push
movsb
das
sbb
sub
outsl
inc
jp
fistpl
cmp
mov
loopne
out
lahf
sbb
jg
mov
test
cmp
sti
inc
dec
scas
push
xchg
xchg
testb
clc
jmp
cmpsl
mov
xor
adc
sub
sbb
sbb
aaa
ret
cmp
mov
sbb
mov
or
hlt
incl
bound
xor
rclb
ja
inc
adcl
inc
mov
or
pop
mov
push
add
decl
aaa
arpl
mov
adc
inc
sub
sbb
mov
xor
add
jg
inc
xchg
or
cs
mov
cld
fsts
inc
fstps
pop
and
push
lods
outsl
jg
sti
mov
rcrb
lcall
add
pop
sti
decb
outsl
dec
inc
mov
pop
push
mov
jb
frstor
call
sbb
and
call
insb
lds
test
inc
mov
imul
dec
adcb
mov
imul
push
jg
inc
test
ljmp
lcall
xor
rolb
fs
mov
mov
in
fs
nop
and
cld
jmp
je
dec
mov
xorl
jg
loopne
icebp
or
xor
fdivrs
jg
call
xor
xor
jae
adc
lods
shl
add
adc
lret
and
cmp
cmp
cwtl
shlb
push
hlt
cmp
and
orl
cmp
mov
add
add
fildll
test
and
pop
aaa
lret
and
orb
and
stos
std
frstor
sub
add
orl
sbb
ret
cmp
mov
decl
mov
and
mov
inc
or
mov
add
clc
jmp
loopne
repnz
mov
add
decl
mov
xor
pop
or
adc
into
sub
dec
test
mov
mov
rorb
pushl
pop
gs
and
xchg
rcl
mov
sbb
rolb
sub
nop
dec
cli
cwtl
cmp
jg
add
inc
sbb
loopne
movsl
and
and
in
test
divb
vmovsldup
mov
sub
jg
test
pop
aas
mov
or
xchg
dec
cld
or
jae
outsl
and
enter
jle
stos
jno
adc
cmp
repnz
jg
call
mov
test
sub
mov
sub
mov
push
scas
stos
lods
mov
or
or
dec
mov
inc
sub
mov
subl
jb
or
shrb
mov
lea
clc
outsl
add
cwtl
test
jbe
mov
add
or
aas
outsb
incb
push
mov
or
es
mov
jmp
lods
push
push
dec
mov
cmp
test
push
sar
sbb
and
adc
mov
xchg
inc
adc
add
dec
mov
lcall
add
in
aad
sbb
scas
clc
pushl
adc
sahf
fisttpll
mov
xchg
pusha
sbbb
sub
mov
inc
push
mov
xchg
mov
jle
jo
call
aam
hlt
hlt
inc
das
aas
testl
adc
sar
call
mov
and
dec
pushl
lods
or
inc
or
ja
into
cmpl
and
out
loop
test
les
mov
fbstp
shrl
aas
faddl
movsl
jae
xor
push
jg
jae
scas
sbb
sete
rclb
cmp
dec
mov
cmp
jg
decl
push
inc
outsl
sbb
or
ret
sbb
xchg
dec
mov
pop
inc
andb
xchg
pop
push
and
dec
imul
mov
pop
loopne
add
sbb
enter
test
incl
mov
inc
adc
and
xchg
adc
lret
cli
adc
push
test
push
or
inc
lods
inc
iret
adc
push
test
push
test
out
xchg
cwtl
sub
or
pop
ljmp
and
loopne
shlb
mov
popa
lock
adc
addr16
mov
add
sub
inc
shlb
mov
and
adc
incl
sub
mov
inc
add
jp
pop
mov
cmp
inc
adc
and
xor
adcl
adc
xor
jo
dec
xchg
cmc
jmp
cwtl
enter
add
rsqrtps
xorl
repnz
sbb
lcall
faddl
dec
cs
jb
arpl
mov
dec
cmp
dec
test
lods
rclb
enter
mov
fcoms
and
push
mov
rol
incl
push
inc
adc
mov
test
test
lock
dec
div
cltd
pop
mov
push
jns
fistpll
imul
int
mov
add
cwtl
loop
subb
aam
cmpsb
aaa
xor
arpl
mov
test
mov
orl
sub
test
out
cmp
inc
jns
clc
call
test
stc
push
add
and
pop
out
adc
mov
mov
and
je
sub
push
or
addb
loopne
inc
push
and
push
xchg
call
inc
pushl
cmpl
push
inc
sbb
test
jo
push
sub
call
movsl
ds
sarl
testl
dec
jne
lods
mov
stos
dec
pop
js
decl
aas
in
ret
pop
jne
inc
add
enter
mov
js
bound
add
inc
or
push
pusha
inc
insb
push
xchg
cld
cwtl
stos
sbbl
and
and
jns
mov
nop
pushl
clc
xchg
mov
push
pop
pop
push
jge
mov
push
mov
push
mov
jg
pop
sub
inc
mov
xchg
add
cld
decl
stos
clc
adc
shlb
ret
mov
pop
loope
test
jg
inc
and
xchg
adc
lods
xchg
and
mov
sbb
dec
add
or
adc
lock
pushl
insb
add
fchs
iret
dec
mov
popa
pop
rolb
dec
push
add
insb
sub
movsb
pusha
decl
out
mov
or
enter
into
popa
or
rcll
xchg
mov
push
shll
popa
add
cld
push
cwtl
aam
xor
out
insb
in
imul
mov
push
pushf
in
push
and
icebp
jg
outsl
and
add
mov
xor
in
mov
cmpb
rclb
cld
iret
add
dec
shll
add
es
mov
fdivs
test
data16
sbb
mov
test
data16
mov
dec
and
pop
jne
mov
scas
xchg
cmp
cli
rcrb
adc
rorl
clc
cld
call
xorb
push
ljmp
aas
fs
pop
xchg
and
jg
inc
add
dec
dec
or
sbb
add
sbbl
mov
pop
cs
inc
inc
std
dec
pushf
mov
movsb
stos
loop
jmp
pop
add
decl
xchg
sar
or
xchg
sbb
push
jl
inc
adc
subl
pop
sub
mov
add
cmp
pop
sub
bnd
hlt
jp
test
shll
imul
inc
add
aad
pop
push
or
lds
mov
xchg
mov
call
xor
inc
repz
adc
rcll
mov
add
fcomip
lds
mov
pop
xchg
sub
or
cmpsl
and
jg
nop
dec
aas
mov
sub
cltd
aad
mov
sub
and
or
daa
mov
cmpsb
orb
nop
lret
mov
adc
fdivp
call
into
xor
adc
insl
mov
cmp
xor
pushl
clc
jne
jl
add
dec
aaa
add
jno
xorl
inc
or
decl
push
mov
fdivl
cmp
lods
addb
lret
mov
into
loope
decl
std
daa
and
lock
mov
cmp
nop
and
scas
outsl
mov
pop
loop
pusha
sbbl
outsl
mov
andb
rcrb
mov
cmp
sbb
add
and
and
iret
inc
adc
inc
test
ds
ljmp
sub
aam
add
fs
inc
int
pop
rolb
jb
addl
ljmp
cld
sbb
in
dec
sbb
jmp
cmpsl
and
cmpsl
push
arpl
out
adc
add
mov
cmp
out
lods
rcll
js
ds
mov
add
inc
jecxz
decl
jle
ret
mov
loopne
inc
cmpsl
pop
push
pop
push
sbb
inc
mov
push
idiv
mov
into
adc
call
faddl
daa
stos
mov
nop
lock
fbld
bound
pusha
imul
decl
or
movsl
loope
mov
mov
cmp
mov
fs
loopne
sbb
lcall
mov
call
shrb
adc
fsubrp
int
fcmovnu
pushf
adc
fs
mov
testb
ds
inc
push
add
loopne
loopne
enter
and
es
cmp
and
jle
mov
add
shr
add
and
jmp
dec
and
mov
mov
lds
push
shl
dec
push
and
call
ret
push
pushl
pusha
add
sub
and
clc
jg
inc
mov
mov
sbb
mov
std
das
sar
or
ljmp
scas
imul
pushl
les
mov
out
ljmp
inc
int3
aad
decl
les
imul
sub
push
je
lds
cmp
mov
idiv
jg
lcall
and
ret
xorl
dec
sbbl
out
sbb
mov
cs
icebp
aam
add
sbb
imul
push
lret
cmp
inc
jb
jmp
sbb
aam
push
and
mov
cmpb
incl
sub
pop
stc
xchg
pop
and
add
adc
or
jo
push
xchg
inc
or
or
add
inc
and
rolb
clc
and
shlb
stc
mov
adc
cmp
mov
cli
cmpsb
scas
jl
inc
movsl
or
rorl
or
mov
inc
cmp
int3
addr16
bound
decl
ljmp
les
cmpsb
stos
shr
les
add
cmp
in
ljmp
mov
movl
in
ret
test
ret
push
hlt
add
mov
andb
orb
sahf
jb
adc
and
sub
stos
or
ljmp
clc
int3
and
call
lcall
push
mov
nop
push
push
dec
push
lods
add
and
sub
in
push
in
hlt
fiadds
ds
inc
inc
jbe
push
mulb
loopne
movl
out
test
fnstsw
push
mov
push
scas
lock
mov
popa
or
std
and
xchg
cmp
inc
mov
jg
pop
nop
imul
scas
push
push
cmp
push
lret
mov
jle
or
je
fsubr
mov
test
and
or
lret
test
sub
fprem
and
inc
rclb
dec
jb
lcall
jmp
mov
movsl
cs
xchg
xor
es
incl
out
fadd
sub
outsb
sbb
out
sub
call
push
test
daa
fiaddl
cli
mov
mov
in
scas
arpl
pop
adc
call
and
push
adc
mov
cld
sbbb
inc
xor
and
xor
mov
push
fisubl
ret
repz
and
je
sbb
loope
add
repnz
sbb
sub
and
pop
lock
mov
cmp
jb
sbb
inc
or
or
lret
add
cltd
pusha
rcrb
push
dec
cltd
je
incl
cmp
inc
fdivl
aaa
adc
aam
and
jb
xor
inc
dec
lods
adc
ljmp
cli
sbb
sub
and
jle
leave
add
test
mov
mov
hlt
sub
inc
or
dec
into
jo
call
lret
sar
adc
xchg
aaa
xchg
outsl
clc
jg
int
cmp
mov
xchg
fs
lret
ljmp
mov
subb
mov
xor
insl
jle
sub
fwait
loopne
cmpsl
mov
lods
sub
add
out
dec
loop
push
or
mov
ret
add
aas
mov
into
push
cli
ljmp
push
jb
out
mov
inc
pop
push
pop
mov
daa
inc
addr16
push
jp
subb
lea
movsb
sub
decl
incl
or
dec
jecxz
cmpsb
sub
dec
xor
xchg
inc
stos
fs
mov
mov
test
xor
sub
cmc
nop
cmp
jmp
sbb
xchg
cmpsb
lea
movsb
dec
test
lods
test
cwtl
push
sub
or
push
or
inc
xor
call
rorl
adc
ja
and
add
sub
mov
and
repz
push
outsl
popa
insb
add
mov
insb
inc
jns
or
dec
test
inc
add
jb
inc
cmp
and
add
push
sbb
xor
je
sub
sbb
movb
jbe
pop
and
insb
and
sub
aam
jp
cmp
pushf
dec
or
and
into
xchg
cmc
jg
cmpsb
mov
mov
je
cmp
or
ljmp
icebp
push
add
add
adc
jne
test
and
shlb
sahf
and
loopne
xor
dec
push
xchg
adc
sub
pusha
cmp
ljmp
inc
stc
arpl
movsb
or
inc
insl
and
shll
ljmp
add
pusha
pop
loopne
push
dec
out
decb
jge
test
roll
ljmp
repnz
pop
adc
fcoms
imul
jmp
dec
imul
les
sub
es
add
test
push
push
or
out
and
imul
lret
mov
imul
inc
jl
dec
push
in
jo
xor
jg
jg
pushl
add
xor
and
ret
fcompl
ret
cmp
xor
push
mov
dec
xor
nop
js
xor
inc
cmp
and
pushf
lds
mov
mov
clc
pop
xor
gs
ljmp
int3
daa
sub
xchg
xor
inc
aad
add
scas
cs
dec
xor
into
je
cs
fs
jmp
or
mov
xor
incl
add
cmp
jbe
xor
sbb
jmp
decl
sarb
loopne
xchg
adcb
imul
inc
adc
popa
mov
es
cli
cmpsb
mov
dec
mov
ljmp
pusha
addb
dec
mov
add
aas
movsb
leave
cmp
lods
cmp
pusha
inc
push
push
push
fidivs
outsb
lods
sbbl
mov
sbb
or
nop
jmp
inc
or
mov
xor
scas
or
dec
nop
imulb
xchg
mov
call
cmc
lods
pusha
mov
das
pop
ljmp
hlt
inc
push
loop
push
movsb
add
sarl
rcrb
and
stos
lcall
sub
and
dec
mov
iret
xchg
clc
jg
mov
out
clc
xchg
nop
mov
pop
clts
popa
stos
loopne
enter
mov
pop
aam
inc
pop
lods
lea
imulb
xchg
jnp
inc
sub
bound
aaa
adc
adc
cwtl
and
mov
decl
xlat
xchg
push
xchg
test
arpl
lock
mov
jne
cmp
lret
test
cmp
or
or
pop
push
and
ljmp
ja
lods
or
mov
clc
call
mov
push
mov
inc
jge
mov
call
sarb
jl
inc
pusha
pop
xchg
mov
xor
test
mov
jp
test
mov
loope
jae
jmp
mov
outsb
lea
stos
aad
nop
je
in
mov
push
or
fwait
cmpsl
dec
adc
fadds
rol
sbbb
jle
nop
xchg
adc
xchg
xor
jbe
mov
mov
and
fwait
push
std
cmpsb
sbb
data16
sub
sbb
xor
notb
roll
lcall
in
aaa
dec
inc
lahf
aam
insb
pusha
bound
inc
fwait
cmp
movsb
divb
cmpsb
push
or
aam
add
clc
push
xor
in
xor
xor
pop
jle
out
and
ja
pop
mov
cmp
incl
pop
and
or
ds
andb
push
or
mov
arpl
clc
fs
rolb
orb
outsl
enter
les
sub
cmpsl
gs
xor
es
lods
test
ljmp
lock
stos
aaa
scas
or
mov
daa
sarb
je
add
call
dec
lods
fnstenv
out
cs
xchg
sub
stos
sub
outsl
mov
mov
jae
adc
mov
add
movsb
pop
jae
mov
add
add
xor
lds
sbb
lds
sub
jg
es
add
cmpsl
and
pop
lahf
orb
js
sub
add
jg
adcb
fmull
pop
icebp
cmp
or
sarl
adc
incl
cmpsb
cmp
cltd
and
imul
sub
sub
mov
decl
push
and
mov
and
jl
add
push
and
stos
fwait
addb
test
dec
mov
pop
lcall
jmp
push
shlb
in
fmuls
icebp
xor
stc
inc
xor
adc
sti
adc
sbb
sub
xchg
nop
jno
inc
dec
jnp
fwait
inc
pop
and
pop
rcrl
push
and
cmp
add
sub
xchg
lods
add
xor
call
js
ret
push
ljmp
popa
and
ret
decl
push
jbe
push
dec
out
xchg
mov
data16
cld
push
mov
stos
movsb
mov
inc
mov
stc
stos
arpl
dec
insb
frstor
mov
push
in
adc
or
lock
mov
pushf
cmp
and
mov
scas
cmp
mov
adc
cld
jl
movsl
jecxz
jmp
jg
lock
or
les
jle
mov
and
fnstcw
ficoms
hlt
sub
push
call
push
incb
shlb
add
jl
movsl
cs
in
sti
push
xor
popa
jp
mov
jbe
and
rorl
adc
hlt
decl
push
inc
xor
mov
sarb
xchg
inc
fldenv
into
cmp
fists
enter
lret
nop
jnp
sbb
fistps
lds
add
ljmp
pop
cmp
xor
push
cmp
cmc
int3
scas
cmp
mul
pop
lea
lret
lock
call
addr16
mov
scas
ret
movsl
and
sbb
push
add
and
jg
loop
mul
add
sub
lods
xchg
inc
or
dec
xchg
pop
lcall
add
mov
out
stos
and
cmp
inc
mov
cmpsb
and
incl
mov
add
or
pop
std
es
sahf
inc
inc
push
inc
inc
pop
fbstp
mov
jno
je
inc
hlt
repnz
cmp
jmp
push
incl
fwait
lods
sub
jg
lcall
test
ljmp
push
daa
xchg
in
ffreep
mov
incl
mov
movsb
cmp
das
xor
dec
or
and
adc
and
mov
mov
or
sbb
add
push
shlb
add
add
test
or
add
jbe
sbb
pop
xchg
icebp
xchg
mov
sbb
sarb
bound
mov
and
mov
cmp
add
mov
pusha
mov
sbb
or
and
add
sub
mov
xchg
daa
pop
mov
push
pop
push
scas
push
mov
fisubl
popa
inc
enter
sahf
fdivr
add
lcall
or
xchg
das
push
push
bound
outsb
push
sub
test
ljmp
jl
mov
or
sbb
xchg
mov
xlat
ret
rcr
or
addr16
pop
xor
jbe
jne
or
fbld
sbb
bound
scas
pop
sbb
int3
clc
lods
pop
addr16
mov
xchg
and
jle
sbbb
mov
mov
testb
cwtl
jno
add
incl
mov
shll
mov
es
mov
or
dec
pushl
adc
fcoms
jno
rorl
push
sbb
rorl
cmp
xchg
mov
xor
dec
and
pop
std
push
pop
jb
cwtl
leave
js
pop
daa
stos
push
es
mov
inc
adc
and
cmp
inc
add
dec
loope
push
and
mov
les
aaa
in
orl
or
push
in
xor
andl
xor
pushf
lock
mov
dec
in
cmp
pop
push
dec
or
loopne
nop
jb,pt
mov
roll
xor
les
push
incl
cmp
dec
cmp
incl
jmp
add
test
cmpsb
push
jecxz
pushf
push
std
jg
inc
stos
adc
and
inc
cwtl
sbb
add
add
mov
shrb
and
sub
inc
xor
pop
adc
mov
lock
inc
dec
mov
sub
cmp
push
inc
sbb
adc
fstpt
test
dec
lds
loope
addr16
dec
mov
pushf
xor
das
clc
pushf
jne
and
dec
sarb
inc
lret
cmp
mov
sbb
push
add
pop
sub
inc
pop
mov
ret
rol
aaa
jo
ds
inc
dec
mov
pop
pop
cmp
fbld
pop
inc
call
gs
xlat
adc
push
add
inc
mov
clc
shll
cmp
in
pushf
add
xor
ds
in
aaa
fchs
and
ret
adc
loope
pop
sub
mov
incl
add
inc
sbb
pop
mov
add
cmp
push
pushl
jbe
sbb
fs
cmp
fiadds
xchg
loopne
in
cmpsb
lahf
jle
loopne
lcall
fdivl
cmpsl
sbb
adc
adc
mov
ficoms
ss
fmull
pop
test
sub
jbe
jl
mov
ljmp
inc
inc
add
add
adc
js
out
insl
pop
mov
lcall
jae
push
cld
pushf
dec
imul
cmp
clc
pop
xchg
addr16
mov
and
cs
out
cltd
mov
scas
cli
mov
sub
orl
or
jg
dec
shrb
test
cmp
pop
jg
call
hlt
pop
mov
pusha
or
aaa
pop
lock
dec
fcomps
ja
subl
fildl
lock
inc
pop
decl
lods
xchg
movsl
ljmp
pop
xchg
add
stos
push
adc
adc
js
xchg
jg
je
adc
aad
rcl
add
clc
or
cli
xchg
test
and
mov
inc
test
stos
rorl
inc
sbbb
push
pop
mov
call
sub
adcl
and
out
clc
or
shll
mov
xor
pop
repz
insl
ljmp
xor
jge
fs
dec
movsb
push
outsb
hlt
daa
sub
pusha
cmp
inc
push
nop
xor
jg
inc
cmp
aam
and
add
add
xor
cmp
push
push
mov
incl
push
lock
adc
icebp
movsb
fs
out
or
popa
pushw
addl
jo
or
movsb
cmp
lds
test
rclb
mov
or
push
cmp
xchg
lock
mov
or
push
fdivrs
nop
call
in
push
cmp
addr16
imul
out
inc
xor
mov
mov
frstor
sbb
das
mov
outsl
push
add
push
cmp
in
sbb
and
jmp
pop
xchg
ss
mov
fsub
pop
lock
lret
jb
or
push
and
lahf
pop
or
call
repnz
cld
jg
cmpsl
dec
xchg
int
push
lret
sbb
gs
iret
loope
mov
or
xchg
mov
pop
add
sarb
pop
jg
dec
xchg
and
insb
popa
or
sub
enter
add
mov
rcrb
mov
lock
mov
sbb
add
cli
mov
subb
adc
incl
lcall
and
in
jo
adc
inc
movsl
xlat
fnsetpm(287
xor
inc
lcall
ret
mov
push
inc
enter
mov
and
nop
ljmp
xor
push
mov
push
adc
mov
push
push
arpl
andl
adc
fwait
rolb
dec
mov
inc
test
push
push
sbb
scas
pop
loope
sub
ss
cld
xor
jb
popa
add
cmp
adc
xchg
gs
test
cmp
xor
xor
jecxz
mov
pop
hlt
jae
out
dec
xor
lcall
cmpsl
iret
ror
cmp
add
repnz
movsb
or
jmp
xchg
jecxz
dec
adc
arpl
leave
addr16
sub
mov
xor
in
jg
dec
in
mov
jo
xlat
aas
mov
idiv
pushl
loopne
mov
sbb
shl
add
nop
mov
stc
pop
jbe
sub
in
test
call
imul
roll
dec
loopne
mov
dec
stc
jecxz
pop
xchg
test
mov
dec
jb
es
mov
cmc
out
test
xor
sahf
loope
incl
inc
loopne
mov
push
xchg
icebp
iret
dec
scas
xor
lcall
mov
scas
sbb
and
jns
dec
xchg
cli
pushl
add
mov
push
jmp
mov
cmp
pop
arpl
push
jne
pop
xchg
pusha
or
hlt
jo
mov
call
or
testl
outsb
xor
insb
xor
and
fisttpl
repnz
rcrl
add
add
add
jo
push
mov
cmpl
fdivl
mov
sub
xor
flds
inc
nop
clc
ljmp
fstl
imul
xchg
cmp
incl
adc
and
xchg
mov
mov
in
adc
or
push
xor
dec
addr16
inc
push
mov
mov
push
test
add
sub
stos
mov
cmp
idiv
or
loope
and
mov
fisttps
fildl
or
mov
cmpb
addl
dec
inc
or
push
add
sub
mov
ljmp
xorl
ljmp
dec
xor
dec
jo,pt
stos
mov
mov
jg
pusha
sbb
fnstcw
add
jae
push
imul
sub
xor
mov
mov
pop
sbb
pop
lods
ljmp
ret
decl
xor
sti
push
push
cmpsb
bound
cmp
cmp
push
in
std
call
stc
dec
stos
andb
mov
jb
or
sti
inc
xchg
negb
mov
in
loopne
popf
scas
imul
ret
jge
mov
inc
or
jp
pop
out
cmpsb
decl
clc
popa
leave
dec
ss
loopne
aas
sahf
cmp
cmp
mov
shl
lret
and
inc
enter
ret
push
jl
or
aaa
rol
out
xchg
shlb
mov
cli
hlt
xor
mov
hlt
push
mov
arpl
and
push
lock
int
icebp
mov
inc
fstp
cmpsb
inc
cmc
pop
jbe
pop
cmc
call
hlt
xchg
rcrb
jbe
inc
add
cmp
push
nop
xor
insl
inc
pushl
add
outsb
push
insb
or
push
inc
rolb
pop
cmp
and
inc
cmp
adc
jbe
ds
imul
les
push
in
add
inc
pop
movsl
subb
insb
mov
add
es
sbb
ss
shrb
xor
hlt
hlt
fs
and
incl
push
push
pop
into
mov
lock
pop
inc
in
insl
aam
pop
push
pextrw
inc
and
and
pop
outsl
nop
movsb
jg
pusha
cmp
add
jno
pop
stos
sbbl
or
or
outsl
ret
pop
sahf
movsl
add
xacquire
inc
lock
xor
or
pop
jno
sub
sub
ja
pop
push
cli
mov
ss
ljmp
inc
inc
in
sbb
inc
dec
test
and
addb
jne
imul
loopne
shll
jmp
inc
insb
call
or
mov
sbb
sub
inc
es
xor
inc
add
pop
lret
push
sbb
je
out
mov
das
hlt
bound
xchg
popa
sub
outsl
movsb
or
fs
xor
adc
adc
mov
mov
add
xchg
mov
or
adc
gs
loopne
jp
add
dec
dec
icebp
push
push
sbb
call
adc
jo
or
xlat
push
xor
hlt
es
outsl
pop
xor
adc
push
adc
add
ss
xchg
in
cmpb
xchg
push
subl
xor
add
clc
jg
cltd
xchg
inc
jno
shlb
jno
xchg
and
push
mov
pushf
pop
jl
xchg
xchg
pop
inc
mov
or
cmp
int3
orb
xchg
xor
push
aaa
push
cmp
cmp
jnp
popa
xchg
sbb
jmp
xchg
inc
cltd
xchg
and
pusha
add
push
es
andb
pushl
cmp
icebp
jge
rorl
icebp
data16
popl
mov
sbb
add
add
add
loopne
insl
adc
mov
mov
rcl
pushl
adc
cmp
xchg
cmp
repz
add
xchg
add
pop
pushf
imul
addb
cltd
pop
daa
add
add
mov
decl
cmpsb
sarl
test
aas
test
pop
in
wrmsr
jo
out
xorb
nop
push
flds
add
mov
sub
dec
shlb
adc
and
idiv
mov
js
test
pop
cwtl
pop
dec
mov
pusha
rolb
jo
xor
loop
adc
nopl
jb
loop
pop
sbb
jne
icebp
rorb
pop
mov
pop
and
dec
aam
dec
add
xchg
inc
jle
add
jb
cltd
sub
and
bound
lret
mov
add
decl
push
jae
inc
inc
lock
and
xchg
rcrl
popf
and
dec
inc
mov
xor
mov
stos
call
mov
aam
addr16
lea
bound
mov
mov
xchg
adc
loope
xor
call
fists
sbb
jp
pop
sub
bound
xchg
mov
inc
sbb
pop
incl
int3
aam
xor
pop
inc
mov
add
inc
adc
add
mov
jmp
add
jae
dec
insl
loopne
mov
in
arpl
mov
leave
xchg
and
adc
aas
adcl
loopne
stc
adc
adc
add
inc
adc
cmpsb
data16
cmpsb
xor
call
sub
add
or
adc
jnp
add
icebp
pop
imul
cmpsb
arpl
jecxz
inc
mov
mov
test
xchg
fs
jp
gs
pop
mov
and
xlat
test
lock
xchg
test
out
sbb
xchg
sbb
xchg
push
aad
loope
sbb
mov
add
fs
cmpb
xor
push
lahf
mov
inc
sub
dec
push
nop
xor
cld
jg
or
dec
push
rolb
inc
lret
ds
jg
or
pop
push
push
and
xchg
sbbb
mov
pop
xor
add
js
xchg
sbb
push
xor
arpl
push
mov
test
sub
divb
jo
push
stos
imul
call
adc
inc
outsl
hlt
inc
dec
pusha
mov
xor
in
inc
xchg
xor
cli
mov
mov
fdivs
ret
fcos
mov
rcl
shlb
mov
sbb
out
sub
mov
movsl
jb
ret
inc
xchg
pop
rcrl
add
sub
ficompl
push
mov
testl
pop
pusha
or
clc
jae
clc
mov
xor
inc
mov
mov
repz
and
sbb
outsl
popf
mov
shl
pop
lret
push
clc
pop
aam
dec
pop
enter
sbb
pushl
lret
ja
lret
aaa
push
scas
push
movsl
aad
pop
popa
xor
mov
push
cmp
adc
decl
xchg
push
out
mov
xchg
push
lret
xor
flds
dec
jno
mov
xor
adc
add
out
add
xchg
mov
jle
xor
sbb
mov
ret
jg
data16
nop
test
jo
dec
test
xchg
int
ret
push
scas
jnp
jbe
pop
mov
jmp
jg
pop
mov
xchg
sti
jb
mov
sub
mov
mov
cli
ljmp
mov
pop
mov
xchg
outsb
and
sub
xchg
cmp
sbb
sub
out
ss
rolb
mov
jo
pop
rorb
imul
mov
and
cmove
jnp
xor
mov
lods
mov
cwtl
dec
xor
inc
aad
push
ret
add
add
mov
or
sbb
and
loope
divl
mov
addb
add
inc
mov
inc
pop
mov
pop
es
into
and
and
aaa
rcl
inc
scas
adc
decl
mov
ja
jo
mov
fwait
jmp
sbb
inc
jmp
add
rcrl
jecxz
sahf
int3
js
outsb
mov
jno
fbld
into
hlt
les
sub
add
pop
ss
adc
fmuls
leave
or
inc
add
mov
outsb
push
cli
sub
adc
or
int3
xacquire
xor
mov
xchg
or
repnz
decl
push
inc
mov
sbb
repnz
mov
add
enter
sbb
sar
lcall
xchg
cltd
jmp
add
xchg
out
jecxz
jmp
add
inc
mov
mov
dec
divl
jne
ljmp
sub
mov
ret
sub
repz
andb
sub
pop
and
lret
xor
xchg
orl
inc
push
dec
jp
call
push
adc
mov
sar
pop
lock
int
fcomip
fdivrl
int
loope
loopne
adc
jp,pn
iret
or
fistpll
lcall
int3
into
pop
mov
repz
lock
loope
adc
jg
cmpsb
in
adc
and
xor
cltd
mov
data16
fidivrs
pushl
or
sbb
inc
ret
test
decl
or
sarl
inc
ret
dec
jmp
dec
stos
sbb
lcall
jnp
dec
push
add
fmuls
and
mov
fnsave
inc
jns
sub
xor
jg
sahf
xor
sbb
sbb
scas
add
cmp
scas
cli
mov
fiadds
add
adc
pop
cmp
loopne
aaa
and
and
ljmp
jns
bound
adc
inc
cld
jo
and
dec
je
dec
cmp
cmc
push
inc
cmpsb
pusha
xor
sbbb
or
add
into
jb
xchg
mov
push
sub
cmp
and
pop
hlt
inc
shrb
mov
call
inc
mov
add
popf
les
sbb
mov
incl
cld
pop
push
call
mov
in
in
xchg
xchg
jne
ret
call
gs
pop
fidivl
and
in
xchg
cmp
inc
cmpb
xlat
addl
pop
inc
sbb
imul
xor
cmpb
lcall
sub
enter
inc
mov
and
lret
fdivl
bound
cmp
jb
cld
hlt
ljmp
and
sbb
pop
xchg
ja
push
ja
inc
ja
mov
add
stos
in
mov
nop
push
les
cld
ljmp
loopne,pn
sub
std
mov
dec
mov
fisttpl
push
or
rcr
add
adc
int
adc
adc
inc
jl
int3
mov
jecxz
dec
loopne
loope
lock
fcomip
loop
outsb
lcall
loop
loop,pn
ret
or
jg
ja
adc
xor
sbb
test
sbb
movsl
mov
bound
push
lds
mov
sarl
in
ret
sbb
or
leave
mov
and
ljmp
push
jno
popf
lods
fsts
out
and
ds
cmc
inc
sub
cld
repz
lds
push
es
mov
cld
mov
sete
xor
xor
sbb
scas
imul
lret
mov
or
lcall
mov
les
adc
insb
jbe
mov
lret
pop
cli
mov
cmp
mov
call
and
dec
jo
sbb
mov
xchg
lock
jg
pop
pop
popf
cmpsb
push
add
push
sub
jb
popf
inc
ss
rolb
dec
push
mov
mov
pop
cmp
cmpsb
es
or
mov
add
pusha
ljmp
popf
jae
mov
xlat
gs
ret
data16
incl
fiaddl
in
aam
mov
lods
in
sbb
adc
rcrb
nop
les
cs
decl
adc
js
mov
aam
in
inc
jp
jl
xor
ljmp
xor
xchg
xor
jae
iret
lods
and
sbb
cmp
ljmp
xchg
shrb
add
xchg
icebp
imul
js
in
mov
aaa
nop
cli
mov
and
mov
or
ljmp
repnz
pusha
dec
cmpsb
in
xor
xor
xchg
or
mov
decl
aaa
lahf
xor
push
inc
aas
hlt
sub
xor
inc
jg
jb
hlt
dec
iret
hlt
dec
scas
hlt
push
pushl
mov
es
and
or
push
pop
or
arpl
clc
pushl
mov
sbb
sbb
and
dec
cmp
call
cmp
jg
push
outsb
and
lds
inc
cmp
lcall
xchg
sarl
sbb
lock
cltd
xchg
sahf
mov
mov
jp
push
call
add
sub
adc
push
pusha
vmread
xchg
call
xor
std
stc
mov
jmp
add
jmp
call
cvtpi2ps
jg
sub
pop
mov
jns
cld
jns
lcall
xlat
add
jmp
mov
loopne
mov
xchg
or
add
popl
into
aas
mov
pop
decl
push
cld
xchg
shlb
jo
add
pop
lret
mov
mov
jbe
lds
mov
dec
das
hlt
addr16
or
and
insb
push
sbb
jecxz
push
nop
and
fnsave
xchg
adc
add
adc
lock
loop
rsqrtps
je
dec
call
pop
push
push
dec
cltd
or
les
jl
jns
mov
cmp
fimull
arpl
xchg
fcmovb
shl
in
lcall
dec
loopne
popf
pop
shr
lret
dec
mov
call
or
xchg
test
shrl
mov
add
mov
dec
std
mov
pop
mov
add
popa
out
imul
out
pop
mov
adc
lcall
sub
lds
mov
add
dec
mov
mov
ror
jns
pusha
int
cmp
mov
aam
push
shl
sbb
out
push
mov
add
cltd
push
decl
rclb
shrl
addr16
loopne
repz
outsb
pop
test
xor
adc
cmp
xchg
subps
add
insl
movl
in
mov
jmp
lret
push
out
out
fistps
push
subb
add
movsb
xor
aas
decb
inc
nop
sar
std
pushl
cld
bound
insb
push
adc
jp
push
and
mov
rorb
pop
cmpsb
js
pusha
lods
loopne
sub
lcall
orl
into
and
sub
mov
in
inc
and
push
or
in
mov
cmp
es
xor
sub
pop
add
loopne
rolb
cmp
pusha
dec
xor
test
xchg
js
incl
fidivl
push
pop
pop
dec
mov
icebp
rolb
pushl
xchg
ret
clc
imul
inc
or
inc
or
dec
mov
lcall
dec
push
orb
add
mov
add
lahf
pusha
aam
bound
in
push
cld
ja
push
popf
push
aad
xor
into
mov
and
in
aaa
sub
jg
or
adc
push
sub
push
scas
sbb
shll
or
stos
adc
cmp
clc
clc
add
cwtl
pop
xchg
mov
int3
popf
out
and
jmp
outsl
cmp
or
filds
jge
mov
mov
call
pop
ljmp
ja
rcll
pop
sub
adc
mov
and
pop
xor
mov
sbb
fcomip
decl
xchg
dec
push
sub
jecxz
test
jecxz
orl
cmc
incl
movsb
and
scas
xor
push
mov
xchg
lock
adc
imul
repnz
add
add
sbb
inc
mov
push
cmp
ficomps
shlb
pop
dec
sub
lcall
mov
push
lahf
mov
hlt
outsl
ljmp
test
sub
mov
xchg
dec
pop
jb
xor
push
cld
cltd
in
loopne
addr16
jb
mov
dec
xchg
adc
and
insb
ror
es
test
pushl
sbb
inc
fnsetpm(287
and
fsubs
pop
repnz
lcall
mov
popa
movsl
mov
fwait
mov
int
pop
mov
or
enter
aam
fs
mov
jmp
and
js
adc
mov
push
xor
mov
dec
mov
pop
inc
loopne
outsb
std
pop
stos
stos
mov
pop
movsl
jl
adc
mov
lret
in
rcrb
dec
popf
push
pop
lret
or
dec
out
loopne
and
adc
cli
jl
mov
cmp
test
adc
jbe
ret
xor
je
pop
test
test
push
xlat
ret
int3
lcall
dec
adc
mov
fadd
and
pop
ret
xor
fdivl
and
or
lock
cmp
pushl
pop
mov
xchg
xchg
insb
inc
shll
nop
pop
mov
push
pop
dec
fisubs
jg
mov
xor
jae
jl
and
int3
pop
cmp
add
xor
loop
cmp
push
lea
cmp
popa
jecxz
sahf
das
sub
add
movsb
push
push
test
cmp
dec
xor
cld
mov
mov
lea
sub
mov
lret
push
dec
nop
sbb
jg
dec
loop
or
add
sub
sarl
repnz
gs
jecxz
cli
jg
jecxz
jo
sub
jae
ret
fildl
test
dec
sub
mov
push
inc
test
pushf
adcb
push
mov
loope
fldcw
sub
xor
xlat
add
add
jl
stos
or
add
xchg
adc
mov
cmp
dec
icebp
les
movsb
mov
push
xor
incl
add
xchg
jmp
or
push
xchg
cld
test
aas
sub
dec
jg
bound
cld
sahf
push
sub
push
add
push
mov
xchg
adc
and
add
es
push
inc
sbb
decl
push
iret
repnz
pushf
or
cmpsl
out
shlb
sbb
out
fsubrs
arpl
inc
sub
or
cli
lcall
popa
sub
xlat
push
jp
lahf
jne
xchg
ror
nop
cmp
movsb
push
ret
add
icebp
sub
xor
out
cli
jl
decl
pop
mov
cmc
and
jmp
call
jb,pt
and
iret
push
mov
xchg
in
dec
push
mov
sbb
mov
inc
test
ret
arpl
add
test
jno
stos
fwait
sub
decl
out
mov
jge
dec
mov
pushf
inc
mov
cmp
adc
mov
cmp
jmp
xor
std
sbb
ss
imul
out
andb
pop
adc
sbb
push
mov
rclb
pop
mov
pushf
jbe
and
call
jp
dec
neg
mov
add
sub
adc
and
push
jmp
sub
fsubrl
pushf
rcr
jg
rorb
push
mov
xlat
mov
pushl
dec
xor
adc
jo
add
mov
adc
pop
jge
incl
xor
out
hlt
add
mov
inc
jmp
cmp
sbb
and
addl
ud0
adc
adc
lods
sahf
pop
je
sbb
dec
nop
and
jg
insb
and
lods
inc
movsl
dec
push
xchg
pushl
mov
dec
loopne
mov
scas
xor
pop
out
xchg
ret
mov
pop
push
incl
xor
scas
xchg
xor
mov
mov
adc
xchg
mov
insw
and
call
into
insb
div
fwait
mov
mov
mov
incl
sub
add
movsb
call
sarb
cs
lcall
sbb
dec
mov
mov
dec
jbe
push
movsb
cli
icebp
dec
aad
bound
xchg
cmp
inc
xchg
cld
cmpsb
push
stos
ds
int
ret
mov
lret
ror
jg
push
sub
and
addr16
xor
sarb
mov
jo
sbb
jno
aas
cmp
adc
ljmp
mov
push
cmp
js
lahf
lock
ljmp
or
jb
lcall
mov
nop
xchg
xchg
and
orl
adc
xor
adc
movsb
lock
sbb
push
pop
hlt
call
arpl
xor
or
sub
mov
xchg
adc
mov
clc
mov
movsb
rol
shll
pop
pop
xchg
and
stos
into
imul
pop
loopne
ss
xchg
hlt
xchg
dec
js
roll
lods
pop
xchg
mov
cmp
scas
dec
xchg
movsb
mov
add
jbe
fistpll
lds
push
cmp
adc
jp
xor
add
mov
syscall
jl
push
push
lcall
mov
ss
jmp
or
cmp
add
cwtl
pop
in
addr16
mov
and
cmovae
add
pop
lock
decl
fdivrs
mov
divl
push
inc
lock
enter
lods
jns
pop
pop
daa
mov
mov
in
test
lock
jmp
xchg
cmpsl
cld
inc
insb
std
push
xchg
daa
and
outsl
cmc
rcrb
sbb
in
mov
loope
inc
mov
iret
jnp
repnz
mov
mov
cld
jmp
outsb
xchg
xchg
inc
rclb
xor
dec
xchg
scas
pop
gs
test
je
hlt
addr16
fstl
adc
rcrb
jo
sbb
or
fcoms
lcall
incl
xchg
jnp
pop
icebp
stos
sub
jo
loope
sub
mov
stos
test
decl
sbb
xchg
outsl
mov
call
in
lcall
sbb
sub
ss
xchg
loope
push
mov
mov
mov
xor
mov
nop
rcrl
dec
das
adc
mov
call
adc
and
pushf
and
rclb
in
cmp
mov
sbb
cmc
lret
mov
cli
stos
das
xor
xor
inc
fadds
sbbb
push
mov
js
dec
pushl
clc
adc
cmpl
pusha
xor
rcrl
es
clc
cmp
mov
inc
pop
clc
cmp
push
sbb
pop
mov
mov
dec
ret
push
push
adc
test
in
mov
movsb
ret
incl
or
mov
mov
sarl
adc
xor
fdivrl
mov
and
ss
jg
stos
mov
mov
dec
inc
push
push
dec
sub
mov
loopne,pt
shlb
push
xor
imul
cmp
cmp
mov
lea
lahf
es
push
imul
push
add
inc
mov
cmc
incl
mov
pushf
xchg
xor
mov
mov
call
or
jmp
mov
pop
shl
cmp
xorb
push
jmp
int3
leave
ss
rol
and
sub
mov
mov
pop
and
mov
mov
inc
xchg
test
imull
sub
aas
lock
nop
rcrl
scas
pop
jp
lods
cltd
aaa
incb
lock
mov
lcall
lcall
and
jle
and
in
shr
scas
add
das
and
inc
mov
jge
inc
into
add
dec
test
fcomip
call
inc
popf
xchg
dec
daa
punpckhbw
sbb
sbb
fbstp
icebp
xorb
fistpl
mov
lods
fdivrl
in
cmpsb
add
andb
ret
and
xchg
cmpb
mov
test
sbb
mov
push
das
xor
mov
and
mov
incl
or
icebp
push
and
test
jl
jno
mov
push
aam
jmp
insl
adc
test
sbb
popa
xchg
add
or
mov
push
sub
mov
inc
insl
cmp
push
pop
rolb
out
adcl
inc
mov
fiaddl
add
push
mov
dec
cmpsb
pop
fisubs
ljmp
push
cmp
inc
or
andb
and
dec
and
scas
adc
cmp
sbb
jecxz
jg
push
and
cltd
imul
call
ljmp
icebp
jle
dec
loop
popa
mov
mov
rcl
imul
add
test
dec
sub
sub
ficoms
cmpsl
pop
xchg
lea
aaa
mov
dec
jg
es
xchg
jbe
inc
test
in
mov
and
lcall
add
or
dec
push
pop
sub
fnstenv
push
mov
pusha
xchg
push
movsl
in
push
pop
adc
cmp
adc
add
es
sub
sbb
jl
insb
push
jmp
adc
dec
mov
xchg
add
dec
push
jno
xorl
mov
popa
jecxz
das
call
das
jo
jo
mov
mov
addl
sbb
pop
and
mov
fcomip
hlt
lds
mov
push
icebp
aam
stos
push
leave
mov
scas
out
lahf
or
lcall
pop
aad
mov
mov
mov
test
insb
sarb
iret
jl
fimuls
add
xchg
xor
lock
sbb
push
adc
push
in
into
xor
dec
and
cli
xchg
xor
incl
xor
dec
out
insb
or
subl
jbe
cmp
xor
mov
std
xorl
mov
mov
xchg
fmuls
call
add
mov
aam
pop
cltd
pushf
nop
fmuls
dec
xchg
rorb
in
mov
sbb
push
xchg
and
xor
enter
js
dec
add
decl
mov
lcall
repnz
mov
xlat
lcall
scas
nop
and
in
mov
mov
mov
fstps
cld
mov
xor
fcom
xchg
push
xchg
dec
pop
push
and
pop
xchg
aam
pushf
lcall
fs
aas
fdivr
das
cli
incl
add
inc
ret
sbb
jo
aad
xchg
imul
icebp
inc
xchg
sub
push
sbb
jmp
cmp
cmp
das
lock
leave
scas
mov
out
and
movsb
push
lds
insl
xor
jbe
pop
addr16
shll
lds
mov
dec
mov
dec
and
std
jmp
jecxz
movsl
push
jp
fstps
int
les
in
push
sub
push
fcoml
int3
push
rolb
into
lds
sub
ret
int
mov
dec
xchg
loop
into
push
push
sub
iret
inc
dec
es
fbld
pusha
or
sub
lahf
js
or
in
orl
pop
std
push
and
mov
imul
xchg
fsubl
cmp
mov
sbb
mov
inc
shl
xor
ljmp
int3
in
call
pop
xor
lods
add
add
sbb
nop
lret
and
mov
std
pushl
or
and
les
cltd
adc
mov
cmpsb
int3
roll
and
scas
push
pop
scas
ljmp
and
outsl
mov
repnz
pop
adc
sub
push
xor
test
fbld
mov
shrl
movsb
pop
call
incl
add
mov
aaa
mov
cmp
int3
mov
sar
andb
cmp
push
mov
and
mov
repnz
rcl
cld
pop
push
add
rorb
or
and
aam
pushf
xchg
xchg
add
filds
ja
rclb
int
mov
repnz
hlt
iret
dec
xchg
push
test
dec
or
or
dec
or
push
pop
sub
xor
mov
lds
dec
fistps
pop
int3
fisttpll
hlt
add
outsl
push
add
call
icebp
in
pushl
pop
out
je
je
call
sbb
movsb
sub
sub
xor
clc
ret
test
add
stc
adc
fcmovb
mov
push
ret
mov
mov
je
inc
shr
mov
add
sub
pushl
pushf
les
sbb
mov
cwtl
or
decl
push
loope
mov
mov
in
xchg
dec
jp
adc
adc
sarb
in
loop
push
test
or
dec
loopne
les
inc
pushf
pop
scas
call
negl
jmp
add
pop
inc
bound
dec
push
sahf
or
pop
daa
xchg
push
lcall
xor
add
or
lds
dec
pusha
add
es
fisttps
mov
fwait
push
es
int
je
mov
ljmp
leave
arpl
inc
fcompl
jle
hlt
jmp
fs
jmp
adc
lret
outsl
je
lock
fsubrl
fbstp
aad
pop
xchg
insb
dec
es
flds
xor
fwait
sbb
mov
or
mov
ret
jecxz
mov
xchg
adc
mull
dec
decl
bound
ljmp
pop
loope
sub
call
xchg
call
ret
call
pop
lcall
clc
sbb
and
lods
pushl
nop
xchg
leave
sbb
cmpsb
or
push
jae
or
adc
dec
stos
in
cs
shl
ljmp
jae
es
fwait
enter
stc
pushw
jb
mov
mov
lds
dec
iret
je
xor
incl
mov
mov
and
sbb
das
cmpsb
andb
std
ficomps
pop
and
lock
lock
stos
fildll
xchg
mov
push
iret
push
xor
pop
test
into
mov
lea
inc
arpl
push
push
dec
mov
pop
inc
ljmp
cmpsb
add
movsl
out
test
cmpsb
lods
data16
fs
pop
idiv
mov
push
daa
mov
aam
or
insb
movsl
aad
inc
xor
jl
fcomip
ljmp
pushf
xor
lods
int3
ljmp
mov
jmp
push
stos
mov
sub
popf
push
notl
push
sbb
mov
pushf
push
ja
jmp
xor
add
sbb
xchg
jg
iret
pop
in
test
lcall
xor
cmpsb
dec
add
out
fucomi
push
aad
popf
int
xor
mov
lcall
pop
scas
xchg
test
imul
movsl
outsb
icebp
ss
or
xor
adc
cld
dec
dec
pop
out
jne
dec
adc
and
xchg
ds
and
sbb
subl
mulb
pop
lcall
xor
or
daa
bound
jbe
aas
jbe
fistps
lcall
gs
imulb
rclb
sbb
or
mov
filds
add
push
mov
push
btcl
ljmp
add
icebp
insb
pop
nop
outsb
inc
in
pop
dec
jbe
pop
adc
hlt
stos
mov
cmp
testb
fs
dec
dec
push
jnp
iret
hlt
push
and
arpl
repnz
cmpsl
mov
push
outsl
mov
repnz
je
and
mov
dec
int
push
xchg
push
insb
negl
pop
mov
shrb
call
loopne
mov
cld
mov
push
mov
add
stc
roll
push
or
push
mov
jae
lret
xchg
dec
sbb
push
jp
icebp
mov
lds
fbstp
repnz
lcall
fsts
incl
jb
xchg
xor
jmp
jnp
outsb
xchg
enter
sbb
aam
mov
push
movsb
clc
push
mov
add
movb
or
mov
daa
iret
movsb
cmc
push
cltd
je
test
xchg
cmc
lcall
sbb
adc
loopne
jne
xor
mov
dec
int3
ljmp
sub
rorl
xor
sbb
bound
push
aad
ud0
push
icebp
adc
cmp
sub
pop
repnz
aad
je
cs
jle
dec
decl
push
inc
mov
dec
jno
ja
adc
jl
jno
cmc
pop
incl
cld
lcall
movb
xor
clc
dec
mov
enter
inc
in
fsubp
jg
mov
push
adc
mov
or
js
cmp
jb
xchg
int3
cld
pushf
sub
fisubrs
decl
repnz
jb
xor
hlt
cli
movsb
and
ljmp
mov
addl
adc
shlb
push
std
jmp
cltd
pusha
push
adc
in
lock
ret
xchg
fmull
daa
push
mov
movsl
or
mov
fs
adc
repnz
shll
add
jne
dec
inc
mov
dec
out
push
test
pop
hlt
test
and
adc
ret
cwtl
sbb
mov
jge
leave
push
push
arpl
ljmp
cmp
or
mov
or
in
mov
out
mov
jp
insl
cltd
add
imul
or
js
or
add
cmp
loopne
sbb
jbe
movb
movsb
dec
cmpsl
push
mov
clc
ljmp
mov
add
or
jl
cmp
out
inc
xchg
and
lret
push
dec
clc
lods
enter
enter
jle
add
jg
fiaddl
mov
cmp
in
test
xchg
test
dec
mov
jl
jge
montmul
cmpsb
ljmp
jne
xchg
lods
cmp
jp
or
mov
dec
jae
imul
and
es
push
push
pushl
fidivl
in
out
adc
inc
mov
jp
cli
das
xchg
mov
cli
icebp
mov
data16
and
cltd
dec
bound
sahf
jb
add
jg
fbld
xchg
add
xchg
sbb
mov
push
sub
pusha
orl
test
mov
cmp
outsb
sbb
les
jbe
and
mov
movsb
push
push
mov
call
adc
inc
icebp
test
rol
push
inc
sub
xor
inc
adc
push
insl
xor
inc
adc
pushl
push
sbb
adc
sub
xchg
daa
cmpsl
add
nop
ja
pop
dec
mov
imul
incl
inc
push
sbb
cmc
stos
stos
inc
shrl
stos
sbb
mov
pop
js
imul
pop
mov
aad
push
mov
xchg
dec
mov
ss
and
inc
inc
add
fldt
call
rol
and
and
pop
mov
and
lods
pop
int
lret
xlat
push
dec
add
add
loopne
xor
or
mov
adc
jo
outsl
bound
add
mov
lret
inc
adc
and
xlat
adc
and
pop
add
andb
sbb
cmp
dec
pop
dec
repnz
push
xchg
add
add
dec
loop
mov
add
adc
mov
pop
mov
push
out
push
fs
adc
sub
nop
ss
inc
add
xor
test
sbb
cmpsb
loopne
and
mov
dec
push
mov
xchg
jmp
cmp
cmpl
sbbb
pop
imul
xor
inc
mov
cltd
nop
lea
inc
xor
aad
sub
mov
imul
call
cmpsb
xchg
mov
pop
icebp
shlb
mov
lcall
mov
movsl
mov
mov
inc
add
xor
push
leave
lock
cmpb
add
or
outsl
fbstp
dec
addb
jnp
int
mov
jns,pn
push
add
ds
jnp
sbb
inc
addl
push
add
repz
cmc
es
aad
jae
xchg
push
mov
add
push
sub
pop
adcb
ret
scas
or
movl
popa
push
adc
cmp
push
nop
xchg
cs
out
add
lock
and
lea
jo
add
lea
xor
mov
fucomp
adc
mov
andl
lods
xor
lods
and
scas
adc
xchg
pusha
cmpsl
sub
jo
mov
cmp
push
enter
xchg
add
jns
fsts
xchg
addb
lcall
nop
jbe
pop
repnz
sub
mov
cmp
sub
pop
xchg
cmpsb
mov
mov
push
adc
mov
subb
adc
dec
adc
es
test
add
add
pop
cld
mov
pop
incl
or
ret
pop
dec
and
and
pushf
mov
push
and
lret
add
out
pop
scas
rcrb
movsb
scas
das
mov
push
pusha
insl
loopne
pop
addr16
push
sti
xor
inc
iret
nop
add
mov
int3
dec
rorl
in
int
into
ds
cmp
pop
shlb
adc
adc
ror
nop
daa
nop
add
iret
and
addb
outsl
push
jne
fs
cs
adc
add
xor
shrb
push
add
cmp
loopne
inc
das
clc
incl
sar
aad
jae
pusha
dec
xchg
mov
inc
jo,pn
js
iret
rcrb
mov
outsl
add
int3
pop
enter
or
aad
add
nop
fildl
aam
imul
std
or
pminub
mov
fbld
sbbl
xor
fcoml
add
pop
add
rcr
popl
das
add
pop
pusha
add
sbb
pop
outsl
imul
lock
lock
xorb
pop
cmpsb
jae
jnp
fildll
jo
lea
leave
add
call
rorb
outsl
and
mov
nop
jmp
cmp
fimull
stos
add
outsl
inc
ljmp
lahf
jo
sub
hlt
scas
add
cmp
shlb
notl
add
and
cmovo
daa
nop
jmp
ljmp
mov
sbbl
in
push
cwtl
inc
or
mov
das
or
icebp
lahf
pop
loopne
repnz
mov
push
repnz
sbb
add
inc
xchg
add
inc
dec
push
pushf
add
jg
out
stc
cmp
out
sahf
cmpsl
cmp
sub
out
js
enter
cmc
lock
fsubl
nop
adc
nop
das
add
or
add
cmp
enter
cmp
rcrb
fdivrp
add
cltd
ljmp
test
shlb
daa
nop
pop
and
add
mov
cmpb
or
mov
inc
mov
inc
dec
cli
adc
inc
xor
add
dec
adc
movsb
cmp
push
rorb
adc
or
outsl
dec
call
addb
and
enter
pusha
js
add
adc
nop
adc
adc
push
xor
jo
pop
add
std
es
add
pop
lcall
loopne
ret
push
lahf
je
loopne
mov
stos
or
sarl
scas
or
lock
pop
push
adc
fcomps
lahf
rcrb
outsl
pusha
sub
sbb
sbb
cmp
test
cwtl
dec
mov
add
outsl
or
cmp
pusha
jae
cs
xchg
push
ret
je
sbbb
and
pusha
iret
sbb
pop
es
adc
and
inc
sub
sub
ds
call
shrb
insb
ss
push
push
sbb
cmpb
ret
lea
repnz
push
repz
mov
jle
mov
push
pop
mov
xchg
push
sahf
test
sahf
jle
mov
shrl
cwtl
movsl
ss
xor
add
adc
ss
cmc
out
lahf
push
stc
jmp
lock
stos
stos
xlat
push
xchg
ret
or
inc
xchg
pusha
xchg
inc
nop
shlb
cs
add
cwtl
push
xchg
push
leave
orb
loopne
add
xorb
mov
mov
rorb
outsb
and
inc
dec
leave
add
mov
xchg
or
xchg
mov
cmpsb
scas
andb
lock
ja
jmp
push
jmp
sbb
and
add
lods
sub
xor
and
inc
repz
jo
nop
shl
pop
loopne
sbb
aaa
inc
nop
ret
filds
enter
pusha
dec
stc
mov
push
pusha
jae
lret
outsb
pop
push
pushf
lock
mov
lret
test
roll
xchg
pop
pop
push
push
add
push
and
inc
shl
push
sbb
push
or
push
xor
or
mov
mov
cmp
shrb
push
inc
das
and
icebp
divl
add
inc
push
xchg
popf
push
scas
cmp
xor
mov
enter
and
scas
rcrb
stos
add
or
lock
sbb
int
lahf
mov
fstl
add
into
xchg
inc
jne
ja
popf
and
das
mov
or
add
iret
shl
popa
jo
pop
adc
pop
xchg
or
pusha
mov
xchg
mov
dec
out
fs
add
outsl
mov
inc
adc
scas
and
push
xor
mov
inc
adc
sbb
pop
rcl
mov
mov
push
add
dec
sub
decl
pop
and
inc
jg
or
call
sub
inc
movsl
outsb
or
scas
jmp
pop
lea
mov
push
add
push
or
loopne
ret
rorb
or
pop
or
pop
dec
inc
mov
push
inc
pop
dec
add
popl
inc
bswap
lahf
add
cmpsl
xor
call
loop
nop
pop
decl
nop
or
dec
add
sub
insl
rcrl
sub
add
mov
pop
int
xor
mov
pop
rolb
sub
bound
add
inc
push
mov
and
mov
and
fstpl
cmpl
mov
fldt
outsb
sub
movsl
push
and
mov
or
add
rclb
cwtl
or
fildll
push
mov
inc
mov
push
loopne
inc
je
push
add
sbb
push
push
mov
mov
outsb
push
pusha
mov
clc
mov
adc
sbb
aad
xchg
inc
outsl
push
loope
dec
pop
add
scas
add
inc
lahf
pusha
xchg
fcoml
cmp
out
loopne
hlt
stos
add
cmp
cmp
pop
sbb
xor
inc
pop
ja
adc
lock
das
push
push
or
or
push
pop
cmp
cs
add
pop
inc
dec
or
add
adc
and
add
inc
pop
fiaddl
adc
inc
mov
or
insb
sbb
cmp
lock
add
adc
out
scas
fwait
adcb
shlb
aam
idiv
sbbl
push
adc
aaa
lock
insb
xor
dec
xor
mov
cmpsl
or
lock
jg
mov
jbe
inc
roll
mov
adc
ja
icebp
add
inc
xor
mov
xor
in
das
pusha
scas
movsb
jns
jno
loopne
outsl
adc
inc
shrb
sub
ljmp
and
and
mov
ss
jae
shlb
jle
inc
push
pushf
inc
push
fcoms
jo
dec
inc
test
enter
lcall
fwait
inc
mov
outsb
push
ret
inc
outsl
fcoms
in
test
leave
inc
das
in
leave
jae
pop
popa
pop
popa
xchg
cmp
scas
inc
inc
lock
inc
cs
mov
xchg
mov
dec
cs
mov
push
push
adc
fisubrl
int3
das
inc
inc
xchg
xchg
out
inc
dec
dec
jo
xchg
xchg
out
dec
mov
xchg
dec
rcrb
leave
leave
xor
add
push
push
xor
leave
jae
push
pusha
pop
leave
jae
leave
pop
shlb
adc
adc
inc
mov
call
addb
xor
aas
cmp
shrl
push
add
pop
inc
popa
insb
test
push
pop
jg
push
cmp
lahf
add
mov
push
fistps
sbb
loopne
aas
pop
fwait
inc
push
shl
das
pop
in
pop
or
pop
mov
pop
lahf
adc
inc
das
fldt
cmp
jo
pop
out
jae
dec
mov
fstpl
mov
call
pop
cmp
jo
mov
out
nop
pop
mov
out
adc
loop
aas
cmpb
pop
invd
sbb
js
lock
das
in
or
inc
pop
add
lock
pop
rcrb
nop
hlt
inc
insb
faddl
mov
lock
add
pusha
repz
and
shr
jg
push
and
xchg
das
and
add
scas
dec
mov
loopne
iret
enter
xor
xor
and
inc
push
cmc
nop
cmc
add
pop
mov
lock
iret
imul
and
je
lahf
mov
add
sub
rorb
inc
outsl
out
mov
or
adc
sub
sbb
outsb
mov
cs
pop
xor
cmpsb
shrb
out
xor
add
jo
cmp
je
outsl
adc
pop
fcomip
inc
adc
pop
push
sbb
push
mov
add
pop
mov
rolb
push
add
inc
mov
add
pop
xor
cmpsl
mov
aas
add
inc
xchg
xor
push
push
dec
and
mov
fildll
adc
inc
pop
xor
add
pusha
add
jo
aad
cmp
add
mov
and
add
push
cld
int3
push
jnp
bound
xlat
ljmp
jns
dec
insb
clc
loopne
scas
nop
xchg
aaa
imul
lahf
shrb
or
push
dec
test
scas
fmul
jae
call
cmpsb
fmuls
jmp
lock
mov
fdivs
mov
sbb
scas
pop
lahf
rorb
inc
fcomp
adc
adc
inc
add
jb
aam
es
push
and
inc
add
iret
loopne
mov
loope
fisttpll
push
rcr
dec
sti
sahf
inc
mov
add
adcb
sbb
rcr
sbb
inc
mov
leave
pop
adc
arpl
test
and
int
mov
mov
mov
aaa
cld
sbb
mov
inc
jo
push
or
scas
int
adc
loop
clc
fsin
outsb
popa
stc
push
mov
xor
test
loope
shll
dec
mov
adc
nop
xchg
rolb
dec
in
in
add
daa
pop
or
fs
ficoml
fs
pop
dec
cmp
iret
push
push
push
mov
mov
lret
sahf
outsb
and
rol
call
xchg
push
cmpl
shrb
rolb
cmp
lret
int
gs
dec
int3
sbb
shr
sub
js
cmp
dec
mov
pushf
inc
mov
jno
mov
push
jp
into
cmpsb
icebp
icebp
das
and
fidivrs
mov
pop
in
push
in
push
sub
repz
pop
push
jno
cmpsl
js
sbb
jo
mov
dec
das
stc
pushf
mov
adc
inc
inc
and
add
popl
and
xchg
loopne
popf
cmp
dec
or
push
pop
movb
insb
sub
xchg
xor
dec
dec
jg
and
sbb
cmp
adc
xor
leave
xor
mov
dec
adc
orb
pop
add
dec
js,pn
xchg
adc
mov
rcrl
inc
dec
sub
dec
sbb
lea
push
roll
dec
mov
fcomps
leave
mov
push
cmp
imul
and
sub
shrl
mov
fildl
lcall
fidivrs
fwait
dec
mov
filds
pop
push
push
data16
out
cmpsl
sub
mov
insl
sub
iret
dec
loop
and
js
cld
enter
push
mov
xor
rorl
scas
cmpsl
lret
inc
ds
sbbb
nop
test
cmpsl
cmp
jo
push
repnz
out
fistl
mov
inc
cs
inc
pop
ds
or
jp
cmc
pop
push
sub
sbb
jmp
mov
orb
sbb
push
aas
aad
fdivrs
out
fmulp
mov
push
mov
add
xchg
insb
dec
aam
xor
mov
jne
ss
cltd
scas
inc
add
jo
inc
nop
inc
pop
pop
imul
test
addl
add
ljmp
xchg
notl
or
dec
jo
xchg
lahf
push
prefetch
ja
jl
dec
addr16
daa
jo
mov
inc
mov
das
xor
add
xor
mov
gs
cs
shlb
xadd
and
mov
cmpl
enter
out
out
int3
mov
cs
mov
jne
ss
cwtl
dec
rcrb
jnp
stos
pop
adc
or
pop
pop
or
jnp
sub
das
mov
scas
pop
cwtl
mov
stos
mov
add
adc
rolb
or
add
cmp
xor
enter
lea
mov
xlat
fcomps
insl
and
push
test
imul
or
dec
mov
mov
fistpll
aaa
into
addr16
xor
nop
jle
xor
iret
inc
movsl
loopne
dec
inc
imul
shrd
fildll
cmp
ss
insb
es
cwtl
aas
and
jno
dec
rorb
add
dec
loopne
into
and
or
imul
jle
push
mov
sbb
iret
inc
jbe
jo
mov
mov
aas
ficompl
dec
insb
jle
dec
dec
adc
stc
inc
sbbb
stc
xchg
mov
mulb
pop
test
test
push
and
into
clc
cmp
inc
push
nop
cmpsl
inc
jg
incl
cmp
sub
mov
int3
lahf
sub
sahf
sub
fs
int3
mov
dec
add
repnz
and
add
scas
adc
xchg
and
mov
and
sbb
xor
lock
cli
test
cs
and
xor
add
xor
outsb
data16
push
cmpsl
jns
enter
mov
lods
push
std
inc
and
cmpsl
cwtl
pop
repnz
mulb
mov
int
sbb
cmp
clc
adc
roll
pxor
cs
dec
cwtl
cs
gs
adcl
dec
pop
cmp
arpl
bound
out
sbb
adc
jnp
or
in
xchg
add
sbb
xchg
fimuls
addb
cs
into
adcb
jo
out
xchg
mov
call
adc
mov
iret
mov
pop
dec
mov
and
mov
mov
mov
aaa
add
push
and
and
sbb
cmp
pop
lcall
or
jg
adc
push
jo
sti
orb
jno
pop
repz
aas
enter
outsl
sbb
cmp
inc
rclb
jno
xchg
cmc
clc
add
inc
xchg
das
sub
jbe
adc
ja
add
xor
pop
add
cmp
sahf
add
test
popf
lcall
pop
xchg
scas
iret
jmp
ds
leave
je
scas
rorb
sbb
jns
andl
sbb
jo
negl
pop
jo
scas
push
push
scas
rcrb
rol
sbb
inc
mov
add
mov
insb
aam
add
mov
dec
pop
je
mov
xchg
push
pop
incl
outsl
js
pop
in
loop
push
adc
cs
icebp
xor
mov
pop
repz
ljmp
in
aam
movq
jae
sbb
mov
sbb
adc
cmpsb
sbb
jns
stc
push
pushf
push
cmc
fmul
pop
xchg
jns
pop
pusha
pushl
fwait
es
push
scas
pop
mov
mov
fldl
mov
jecxz
shlb
cs
pop
xorb
ss
ss
and
mov
cmp
or
jns
mov
jbe
push
inc
xor
push
imul
inc
sub
cmpsb
and
push
or
inc
aas
aaa
push
or
sub
push
lahf
cmpsb
mov
jg
outsb
pop
mov
sub
call
push
jmp
test
add
add
out
dec
lcall
out
stos
out
jmp
scas
push
test
shll
mov
addl
scas
das
test
sbb
adc
add
je
adc
dec
pop
push
inc
xor
inc
lahf
sub
pop
mov
mov
aas
push
add
mov
call
rol
std
sub
ja
jo
js
rcrb
into
cmc
repz
cwtl
loopne
pop
jle
pop
mov
adc
pop
pop
mov
dec
ss
push
loopne
inc
leave
int
out
sbb
mov
push
sub
pop
jnp
mov
std
testl
adc
iret
repz
xor
shll
stos
add
out
sub
inc
sub
mov
add
push
adc
push
add
sub
nop
mov
ret
dec
fiaddl
jmp
add
daa
stc
sahf
addl
dec
es
mov
movsb
sbb
shlb
orl
decl
out
popaw
out
data16
jnp
sti
push
into
cs
sub
out
fwait
add
js
cmpsl
stc
xor
jmp
or
stos
orb
and
sub
dec
mov
loope
add
stos
adcb
push
add
sub
inc
pop
ja
rcl
push
or
cmpsl
clc
js
mov
test
dec
jg
aas
dec
add
inc
inc
inc
clc
mov
dec
jns
or
sub
sbb
or
decb
das
pop
xchg
sbb
inc
mov
es
jp
xor
sub
ja,pn
leave
jnp
pop
fs
mov
sub
fdivrs
jecxz
lds
xchg
movsl
mov
inc
mov
sbb
jae
sbb
and
adcl
rcrb
or
mov
fisubrl
jnp
orb
orb
dec
or
cmpsl
and
mov
test
xchg
lcall
pop
cmc
bound
inc
and
jo
into
push
and
add
push
outsb
bound
pop
ja
push
adc
add
add
or
jns
inc
orb
adc
enter
movsl
cmpsb
subl
loopne
mov
les
rcl
push
shlb
fcomps
jge
sub
pop
pop
push
adc
adc
out
mov
and
iret
repz
notl
and
jge
lcall
and
repz
cmpsl
push
scas
js
push
ror
iret
sarl
std
cmp
mov
sub
fnstcw
andb
pop
sbb
mov
lcall
and
pop
aaa
leave
imulb
pop
jl
mov
cli
push
int
jns
push
pop
push
jbe
loopne
pop
imul
push
js
push
xchg
cmpsl
shlb
inc
rdpmc
xor
leave
imulb
cmp
jle
adc
fs
bound
mov
leave
movsb
push
mov
outsl
lahf
xlat
jl
jecxz
fdivrs
je
dec
push
bound
add
cmp
sbb
mov
into
cli
iret
repz
push
pmaxub
sub
ds
idivb
das
ljmp
iret
sarl
cmp
jg
xchg
sub
and
testb
mov
cmpsl
push
xchg
je
push
or
dec
loopne
mov
sbb
xchg
scas
mov
into
push
mov
xor
out
mov
fldl
add
js
and
popa
outsb
and
and
mov
enter
dec
mov
pop
cmpb
das
push
outsb
imul
mov
adc
sbb
inc
push
cs
and
lret
out
jae
gs
jg
fs
arpl
adc
adc
jbe
outsl
orb
test
mov
mov
adc
mov
pop
mov
jp
jns
pop
push
push
push
or
sub
adc
push
xorb
and
jbe
dec
shrl
iret
sarl
jg
js
lcall
push
mov
xor
movswl
scas
outsb
adcb
jae
xchg
cwtl
popa
mov
icebp
cs
fisttps
add
and
sub
mov
and
int
sbb
in
push
in
pusha
rcrb
add
push
pop
xlat
mov
xor
or
bound
mov
sbb
jo
outsl
arpl
pop
push
je
add
in
negb
fldl
xor
es
dec
lcall
xor
xorl
aas
or
arpl
xor
jnp
mov
mov
mov
sub
sub
aaa
imul
aaa
sti
das
add
clc
inc
jne
mov
sbb
aaa
xor
les
jge
inc
sub
aaa
aaa
dec
imul
not
push
roll
mov
in
inc
mov
xor
mov
imul
fisubl
fnsave
fdivrs
jae
and
sub
and
sarl
mov
pushf
in
dec
push
push
test
add
sahf
cltd
loopne
push
push
cmp
mov
fdivp
push
clc
or
xor
aam
aaa
or
das
js
inc
ja
sub
push
inc
outsl
or
mov
aas
test
adc
ja
cmpsb
cmove
push
push
cmp
fcomps
xlat
dec
mov
adc
push
mov
push
mov
sub
and
mov
push
xor
int3
dec
dec
fists
xor
in
inc
es
arpl
jp
and
pop
mov
out
out
aaa
jnp
scas
sub
pop
or
adc
dec
in
fwait
fs
jmp
jmp
push
int3
jmp
popa
testl
cwtl
push
das
push
fistpl
pop
outsl
xchg
out
sbb
in
out
push
push
pop
dec
lock
push
sti
mov
or
pop
subb
dec
or
push
outsl
ss
insl
sbb
pop
movb
add
sbb
xor
dec
push
jg
mov
fcomps
adc
and
ss
xor
jge
outsl
xor
pop
es
daa
dec
test
cmovno
and
aaa
xchg
lcall
and
adc
mov
loopne
loop
and
out
pop
into
in
ja
int
cmp
or
xchg
jl
decb
mov
fisttpl
ss
cmp
mov
mov
sbb
test
xor
cmp
sbb
sbb
das
jbe
mov
aas
lahf
adc
in
aad
lock
iret
fidivrs
or
clc
loope
loopne
sbb
push
inc
inc
jbe,pn
in
adc
in
sbbl
cmp
jecxz
ds
dec
mov
rcll
sbb
fadds
inc
sub
aas
lret
push
das
add
sbbl
add
jb
pop
and
pop
and
enter
add
or
enter
enter
movups
adc
enter
adc
jb
pop
and
pop
and
enter
inc
arpl
inc
xchg
mov
xor
das
add
cmp
in
add
enter
add
cmp
pop
push
aas
sbb
rcrl
jno
add
add
bound
add
add
jo
das
clc
int
adc
xchg
cmp
shrb
add
add
or
push
add
jns
add
arpl
sarb
mov
fs
xchg
xor
add
pop
jo
mov
and
repnz
mov
mov
lahf
add
shll
xchg
daa
mov
xor
and
testl
fstl
lahf
enter
push
inc
lahf
push
xchg
call
in
gs
shll
pop
in
adc
aas
or
xchg
mov
sbb
sbb
or
xor
test
ret
pop
mov
mov
cmpl
data16
sub
and
sbbb
addr16
mov
mov
xchg
mov
pop
in
cwtl
outsl
dec
test
insb
or
jg
addr16
pop
xchg
scas
mov
in
repnz
push
in
dec
daa
sbb
fbstp
pop
mov
push
mov
dec
cs
inc
enter
jne
xchg
clc
daa
pusha
sarb
cwtl
inc
dec
adc
jo
inc
cmp
and
and
imul
outsl
and
daa
iret
cmpb
and
scas
clc
outsb
loopne
jbe
jb
out
adc
and
push
repnz
out
dec
push
pop
mov
pusha
scas
xchg
js
rcr
add
cmpb
mov
and
add
rolb
loopne
inc
lahf
or
fisubrs
dec
and
xor
pop
rorl
daa
sbb
pop
imul
jne
scas
xchg
mov
in
enter
nop
pop
loopne
mov
insb
dec
and
daa
mov
scas
pusha
js
mov
xchg
nop
daa
mov
nop
insb
lahf
xchg
enter
daa
loopne
iret
or
fistl
xor
clc
in
mov
mov
sub
rclb
add
xchg
mov
shrb
out
test
push
out
push
out
fmuls
xchg
push
ror
fistl
cmp
or
jo
jo
sub
lahf
nop
inc
scas
nop
or
fcoms
adc
fldl
outsl
adc
sub
outsl
pop
inc
outsl
sub
xlat
fldt
cmp
clc
shrb
pusha
outsl
js
xchg
or
rcr
mov
outsb
frstor
enter
lahf
cmp
mov
fcomps
xchg
jo
sub
pop
sarl
add
or
punpckhbw
jo
in
mov
xchg
add
fsubrs
shlb
insb
stos
outsl
fsubrs
xchg
pop
enter
xor
outsl
mov
xchg
dec
daa
rcl
pop
lds
mov
xchg
push
repnz
fdivrs
cmpsl
add
jmp
call
adc
sub
cmp
add
push
aam
ds
mov
daa
out
js
cmp
les
nop
jb
add
xchg
mov
shlb
or
ljmp
loopne
roll
lcall
test
xchg
icebp
jbe
daa
cwtl
aam
jae
outsb
mov
lahf
xchg
or
pop
shrb
aas
loopne
or
adc
or
jbe
xchg
daa
sbb
lahf
fldl
nop
pusha
js
mov
mov
mov
sub
daa
adc
sub
inc
iret
add
jne
icebp
jbe
xchg
xor
mov
or
pop
jne
lahf
xchg
push
loope
andb
aad
test
mov
mov
sbb
or
repnz
add
cs
mov
push
and
pop
adc
into
clc
out
push
daa
xchg
andb
jnp
jbe
rcrb
shlb
test
add
enter
pavgb
stos
xor
nop
xlat
inc
push
sub
mov
ja
mov
jnp
das
xchg
jo
cmp
jg
mov
lahf
jo
fdivrl
jo
xchg
push
jg
push
ja
xchg
pop
push
das
sbb
nop
or
xlat
js
jne
lods
lahf
xchg
lock
xlat
pop
sarb
sbb
call
daa
or
jns
outsb
dec
scas
jns
cmp
sub
dec
and
or
pusha
jns
and
mov
dec
aas
and
mov
mov
loopne
enter
aas
clc
cmp
outsb
adc
xchg
adc
mov
add
ds
jo
push
or
ja
daa
rclb
inc
lahf
cmpb
fdivrl
lahf
fcomps
adc
in
ret
lods
clc
daa
clc
fistps
fldenv
jnp
and
outsb
mov
sbb
daa
dec
fwait
mov
fnstcw
outsb
fwait
mov
xchg
jg
fbld
js
push
xchg
shlb
cwtl
fldcw
mov
mov
xchg
pop
sub
daa
call
iret
or
js
nop
or
pusha
jl
xchg
adc
pop
mov
enter
loopne
clc
pusha
sbb
dec
lahf
test
in
mov
lahf
dec
jge
pushf
mov
mov
cmpb
lahf
das
sbb
xchg
fildl
adc
call
xchg
pushf
add
adc
cmp
cmp
push
lahf
and
pop
xchg
push
pop
insb
mov
mov
or
mov
add
addr16
inc
setg
incl
daa
or
daa
adc
pop
sub
and
push
ljmp
jg
test
xchg
mov
outsb
inc
pop
outsl
mov
mov
push
psubusb
inc
xor
lahf
lock
add
jo
dec
adc
outsb
sub
push
mov
xchg
rclb
push
and
push
pushl
int
outsb
nop
addb
mov
inc
or
push
cmpsl
loopne
fstpl
inc
enter
and
outsl
xchg
daa
rcr
pop
jmp
fwait
xchg
xorl
daa
dec
arpl
xlat
adc
xlat
inc
mov
inc
dec
dec
xchg
divb
cwtl
dec
rolb
pop
xchg
xchg
pop
lock
popf
orb
popf
pop
or
and
fmull
push
enter
adcb
xchg
sub
leave
sbb
pop
xor
lods
cmp
dec
jg
lock
sbb
addb
pop
and
enter
nop
xorl
inc
dec
call
in
fucomip
into
cmp
clc
sbb
inc
or
lahf
or
xor
xchg
and
leave
adc
nop
inc
es
test
dec
pusha
scas
mov
jg
cld
outsl
inc
mov
and
test
mov
mov
enter
enter
enter
test
inc
or
inc
or
mov
mov
xchg
add
scas
fmuls
ljmp
leave
adc
push
rorl
scas
or
mov
loopne
loopne
inc
in
xchg
and
inc
adc
inc
fucomi
ss
inc
cmp
outsl
in
repz
or
jno
mov
xchg
in
mov
in
mov
push
cmc
or
and
xor
inc
leave
sub
jb
mov
push
inc
ljmp
lea
mov
jo
mov
dec
fcoms
bound
mov
out
mov
and
outsb
popl
and
lahf
fisttpl
dec
adc
pusha
mov
fdivs
nop
pop
xor
fmulp
pmaxub
inc
inc
outsl
add
pop
sahf
add
in
jns
add
mov
xchg
mov
pushf
je
mov
mov
lds
dec
rorl
iret
xor
jbe
clts
dec
push
add
outsb
daa
daa
daa
and
aaa
dec
inc
rcr
repz
pop
dec
pop
das
arpl
leave
lret
jecxz
lock
mov
dec
and
sbb
push
mov
adc
dec
rclb
aad
bswap
cmpsl
outsl
mov
outsl
lock
pop
sbb
test
dec
sbb
cmpsb
nop
xchg
adc
dec
push
inc
push
mov
pcmpgtd
jno
lahf
jl
out
jns
test
nop
adc
dec
or
rcr
cmpsl
shr
fimuls
add
popf
cmp
hlt
das
decl
dec
outsl
sbb
decl
lods
dec
dec
push
cmp
add
cwtl
nop
dec
cwtl
add
int
inc
push
jbe
pop
mov
fnstsw
rorb
xor
push
fucom
or
sahf
xor
sahf
xlat
cmpsl
and
add
cmp
inc
dec
sub
jb
pop
orb
leave
pusha
dec
mov
or
inc
decl
orb
mov
xor
pop
or
jb
dec
repnz
pop
jb
pop
rolb
inc
pop
jb
pusha
and
addb
mov
sbb
rorb
in
loopne
pop
or
xor
dec
dec
mov
xchg
mov
dec
push
dec
daa
daa
mov
pop
sub
xor
inc
ret
mov
lea
dec
inc
xchg
outsl
jmp
mov
pop
push
in
adc
bound
mov
dec
cs
outsl
shr
stos
xchg
fsubrl
xchg
iret
dec
shrb
dec
lcall
dec
add
bound
dec
xchg
xor
dec
push
dec
scas
push
push
enter
outsw
and
daa
mov
sahf
out
out
push
add
add
out
faddl
ljmp
or
dec
or
cmp
repz
or
or
repz
dec
cvtps2pd
iret
repz
push
adc
repz
adc
adc
repz
mov
repz
fcomps
out
hlt
sbb
push
sbb
sbb
jns
sub
cmp
fisttpll
cmp
xchg
dec
punpckhbw
xor
scas
xchg
scas
dec
xchg
jae
sub
cmp
push
mov
les
push
enter
loopne
out
push
cld
push
sbb
jb
or
push
es
xor
xchg
and
inc
push
push
push
pop
push
cmp
enter
push
mov
push
and
sbb
push
mov
rclb
in
xchg
push
fcoml
push
clc
push
cmp
sbb
push
push
adc
sbb
sbb
cmp
repz
repz
pop
pop
and
jbe
pushf
mov
jle
das
push
mov
pop
push
cwtl
jbe
jbe
outsl
enter
xor
filds
sub
mov
xchg
insl
pusha
pop
jg
mov
dec
inc
pop
fcomps
or
dec
and
xor
cmpsb
nop
xchg
push
movups
fdivrs
sbb
cwtl
fistl
rclb
aaa
or
jmp
fimull
mov
in
sub
xchg
sarb
push
leave
lret
arpl
add
cmp
rclb
xor
xchg
sbb
mov
sub
inc
dec
push
inc
push
push
das
pop
enter
pand
push
icebp
push
jmp
je
stc
push
add
imul
outsb
pushl
push
decl
push
or
outsb
outsl
stos
fstl
mov
repz
adc
adc
out
mov
cwtl
roll
mov
inc
popl
sub
dec
push
pop
ss
add
jb
mov
jo
out
mov
setns
add
out
sahf
movsb
add
cwtl
add
jns
pop
iret
aad
fsubrs
inc
inc
cmpsb
cwtl
aas
push
push
push
mov
mov
push
pop
xor
lahf
or
test
push
pop
dec
sahf
ja
arpl
add
cmp
repz
xchg
push
mov
iret
repz
leave
adc
bswap
push
pushf
xchg
clc
call
aaa
jb
mov
fwait
iret
push
sub
dec
dec
dec
sahf
add
ds
push
dec
and
dec
pop
pop
push
mov
orb
sahf
add
enter
insb
pushf
pop
outsl
mov
dec
out
loopne
or
pushf
adc
pop
dec
inc
leave
adc
inc
mov
pusha
test
mov
xlat
pushf
push
scas
call
in
sub
popf
scas
rcr
sahf
fldt
out
das
stc
add
mov
mulps
pop
jb
mov
cwtl
adc
shl
lods
loop
pop
decl
xchg
adc
or
sbb
jbe
pop
ror
mov
sahf
rolb
pop
repz
dec
fisttps
jmp
repz
les
subb
jo
sarb
pop
inc
pop
dec
je
cltd
and
and
sahf
aas
pop
ja
daa
js
pop
aas
es
xor
out
call
push
add
inc
pop
or
scas
pop
lahf
jae
push
js
jle
pop
decl
mov
js
xchg
sub
or
mov
xchg
clc
add
push
add
sbb
out
scas
fsubs
popl
cmp
pop
mov
mov
dec
add
mov
add
iret
mov
rorb
or
scas
nop
push
cmc
adc
mov
add
sub
xchg
dec
pop
pop
mov
pop
jnp
inc
out
mov
pushf
cmpsl
out
jbe
mov
sbb
addr16
decl
ljmp
cwtl
dec
mov
sbb
add
adc
mov
call
fisttpl
clc
jg
push
xchg
bound
pop
lcall
enter
dec
test
in
jns
add
leave
leave
in
js
orl
cs
sbb
mov
mov
xchg
xchg
arpl
scas
in
test
bound
lock
orl
movsb
jg
das
gs
bnd
inc
cmp
cmp
pop
sbb
movsb
jns
pop
add
aas
mov
or
xor
or
jo
and
clc
insl
push
movsl
movntps
das
pushf
pushf
pop
mov
outsl
ror
or
outsl
lock
dec
hlt
mov
lcall
pop
out
dec
mov
cmpsb
pop
xor
pop
push
pop
pushf
cmp
pop
ljmp
aad
adc
lcall
in
adc
sub
xchg
mov
sub
clc
loopne
call
and
nop
cmpsl
add
pop
dec
enter
cmpsl
and
pusha
notb
movsl
inc
iret
nop
sub
cmp
or
fldenv
push
pop
cmpsb
iret
xor
out
push
scas
packssdw
jbe
pop
pop
pop
pop
andl
pusha
pop
pop
pop
pop
lods
pusha
mov
pusha
repnz
pop
pop
fldenv
pusha
fucomip
pusha
cmp
repnz
pusha
add
sbb
cmp
repz
adc
adc
repz
cmp
inc
adc
repz
pop
push
add
lcall
xchg
jns
out
sbb
out
sahf
cmpsl
push
mov
mov
jns
and
and
out
sahf
out
jmp
sarl
or
adc
cmp
sub
sub
repz
repz
dec
sub
push
bound
insl
xor
xor
and
das
inc
mov
shll
in
xchg
and
jmp
stc
bound
aaa
jb
arpl
out
sahf
out
or
or
sahf
out
sahf
or
ja
sahf
out
adc
jns
out
adc
jns
adc
out
pusha
test
ljmp
jb
or
and
and
fs
fs
inc
scas
movsl
nop
stos
dec
xor
xchg
dec
rclb
cmpsb
fs
push
sub
ljmp
lret
ficoml
loopne
cmp
sub
call
or
in
mov
mov
xorb
fmuls
sub
nop
out
loopne
sub
addr16
das
xor
out
scas
push
data16
xchg
and
data16
aaa
data16
jb
dec
pop
data16
andb
outsb
data16
incl
lcallw
fucomi
in
mov
scas
faddl
out
repnz
das
repnz
adc
jp
cmp
addr16
lds
lcall
testl
push
mov
dec
mull
nop
out
mov
pop
jo
dec
fdivrs
add
push
push
jge
xchg
and
ja
cmp
add
pop
das
lods
mov
outsb
jg
icebp
jbe
cwtl
push
push
dec
jg
jg
adc
pushl
cs
inc
pop
and
imul
enter
mov
push
enter
imul
pusha
push
pop
pop
sub
ljmp
mov
mov
lcall
dec
js
sub
mov
push
mov
ja
icebp
jbe
push
ja
and
pop
ja
pop
popl
dec
pop
insl
addr16
dec
mov
inc
subb
aas
xchg
mov
pop
mov
sarb
add
inc
cmpsb
cmp
loopne
packssdw
and
or
dec
cmpsb
in
mov
push
jecxz
xor
and
cmp
xor
in
dec
outsb
mov
call
ss
in
jo
push
adc
cmp
leave
ja
out
daa
cmp
push
aas
xchg
sub
xor
sub
push
mov
mov
mov
outsl
nop
popa
aaa
and
loop
cli
push
fildll
mov
rol
daa
sub
lock
inc
jmp
daa
stc
dec
in
pop
inc
xor
xchg
mov
clc
shrb
pop
inc
inc
aas
xchg
fsubl
test
rcrb
loope
insb
scas
fcomp
ja
mov
mov
incl
leave
lret
sbb
inc
arpl
movsl
sbb
inc
nop
ss
pushf
cmpsb
pop
pop
inc
fbstp
into
fwait
mul
nop
das
inc
aas
fcompl
inc
jns
or
pushl
mov
test
nop
dec
jb
pop
jb
jo
pop
xor
imul
scas
enter
push
enter
insl
or
leave
cmp
mov
mov
js
test
push
enter
insl
dec
scas
pop
or
pop
mov
adc
jo
ret
pop
into
insl
in
mov
adc
or
add
and
outsb
pop
das
pop
in
or
pusha
lcall
mov
cmp
loopne
test
rolb
test
outsb
ljmp
fisubrs
cltd
notb
mov
mov
in
inc
dec
mov
ret
loopne
xor
subb
pop
push
imul
push
lahf
das
pop
cmp
mov
mov
bt
cmp
jl
sbb
inc
mov
shrb
and
outsl
nop
cmp
lds
jb
mov
dec
push
and
mov
push
jmp
iret
in
sbb
dec
xchg
inc
sbb
mov
mov
jo
jo
jo
jo
mov
mov
jo
jo
mov
shll
fnsave
mov
stc
jo
jno
jno
iret
mov
adc
cmp
repz
adc
xchg
push
ja
cmpb
jno
aam
mov
jbe
xchg
mov
loopne
subb
mov
setno
push
pushf
cmp
xlat
outsb
wrmsr
outsl
jo
rcl
out
cvtdq2ps
jb
mov
or
jb
scas
nop
sub
inc
dec
cmpsb
nop
mov
decw
call
fcomi
paddd
or
dec
scas
pop
and
sub
scas
nop
mov
scas
nop
shlb
jae
jbe
lds
scas
scas
sub
daa
mov
mov
cltd
inc
push
sahf
pop
shlb
dec
cmc
push
psraw
in
sahf
add
xor
xchg
imull
ret
je
and
lret
enter
dec
je
xchg
xchg
sub
lahf
jo
mov
xchg
xchg
orl
push
sbb
shlb
and
push
dec
addb
dec
scas
nop
dec
test
nop
dec
scas
nop
rolb
test
pusha
push
and
jno
mov
nop
adc
push
das
test
call
cltd
mov
pop
mov
pop
loopne
enter
test
jbe
ret
adc
jbe
ret
in
ret
inc
dec
jbe
or
push
ret
jbe
gs
jbe
jbe
sub
adcl
leave
mov
sahf
add
call
scas
popf
lock
sbb
sub
jno
inc
and
dec
les
xchg
sub
push
inc
setl
pop
mov
nop
fistpll
mov
xadd
cltd
push
leave
enter
lds
vpunpcklbw
outsl
cmp
jne
inc
fisttps
wrmsr
mov
je
adc
scas
loopne
jb
test
adc
lds
cltd
inc
mov
fnsave
pop
mov
push
call
mov
nop
dec
dec
scas
cmp
enter
fs
cmp
daa
push
nop
cmpsl
xchg
cwtl
mov
mov
pop
mov
mov
iret
cmp
ja
cwtl
push
js
jbe
adc
mov
push
int
dec
call
xor
pop
pop
mov
pop
iret
nop
dec
rclb
fcomps
ror
in
lock
call
or
adc
sbb
or
in
mov
mov
push
or
jb
pop
xor
test
js
pop
jb
int3
mov
loopne
hlt
leave
mov
ror
ror
enter
lock
lret
jmp
jnp
dec
pop
xorb
xor
pusha
cmpsb
insb
pop
and
jge
push
sub
roll
add
iret
fsubs
pushf
in
mov
scas
fsubl
mov
int3
or
inc
mov
int3
dec
int3
sbb
jl
mov
js
pop
or
nop
mov
in
pop
outsb
jb
clc
enter
jo
int
out
aam
int
repnz
in
popf
inc
int
jnp
into
adc
lods
add
fsubr
outsl
mov
pop
mov
enter
into
scas
cmp
add
adc
sahf
scas
shlb
add
mov
into
xchg
sub
outsl
nop
dec
cld
xor
sub
mov
jns
adc
or
mov
pusha
adcb
dec
add
paddsw
mov
lods
dec
or
rol
mov
adc
fsubrl
pusha
hlt
decl
or
sbb
ficoml
loopne
push
in
mov
dec
or
call
test
rcrl
fwait
imulb
scas
mov
dec
jnp
adc
pop
mov
movsb
pushf
mov
and
dec
adc
pop
and
add
fcoms
jle
ficoml
scas
nop
xor
xchg
sub
mov
xchg
sub
ror
adc
orb
adc
push
xchg
xchg
dec
mov
mov
movq
aam
inc
test
ja
ja
cmp
clc
out
add
leave
leave
int3
aad
call
and
push
push
lahf
dec
pop
scas
nop
dec
pop
or
sbb
scas
nop
dec
test
nop
dec
scas
nop
rolb
enter
and
insb
and
or
push
enter
push
enter
sarb
cmp
enter
mov
xor
push
insb
xchg
push
sarb
dec
in
cmp
jg
in
jg
and
adc
mov
xor
mov
out
fsubr
or
aad
adcb
call
fildll
xor
add
dec
push
setb
in
pop
scas
mov
nop
aas
lock
inc
xlat
arpl
add
inc
rolb
jb
in
or
sbb
xor
inc
push
rcll
inc
scas
pusha
fdivs
cs
pushf
mov
nop
or
mov
nop
mov
in
daa
std
inc
cmp
inc
adc
fcoml
in
pop
lea
clc
dec
addl
fsts
and
push
jg
inc
ljmp
mov
mov
xor
inc
fiaddl
sbb
inc
outsl
inc
pop
pushf
xchg
xor
add
xchg
push
inc
iret
pusha
fisubl
lcall
sub
xor
outsb
aaa
iret
mov
xchg
iret
call
cmp
ficoml
fildl
push
push
cmp
out
pop
xor
outsl
in
mov
outsl
fsub
mov
xchg
pop
mov
adc
xchg
adc
cmpsl
scas
lock
faddl
add
pop
jo
and
cmp
dec
cmp
enter
dec
test
dec
dec
test
fsubl
inc
push
jnp
arpl
add
adc
xchg
pushf
xchg
adc
fldl
pop
lods
pop
and
push
cmp
adc
cmpsl
push
das
inc
cs
enter
rorl
cmp
xchg
lds
es
lahf
maxps
or
enter
mov
xor
fisttps
orl
xor
sbb
sbbl
mov
test
pop
mov
insb
loopne
andl
enter
loopne
loopne
rclb
loopne
and
lods
cwtl
adc
iret
scas
shlb
dec
test
scas
jbe
daa
mov
add
in
out
pop
and
pop
js
jb
adc
pop
cmp
push
lea
inc
loope
loope
adc
and
fcomps
cwtl
jl
outsl
sar
es
pop
call
in
pop
enter
adcl
outsl
sbb
adcl
loop
xchg
arpl
jl
inc
scas
jo
adc
fisubrs
fcoms
test
enter
sbb
sub
push
enter
test
pop
or
dec
pop
add
pop
cwtl
js
test
or
les
lcall
cmp
push
in
pop
mov
adc
mov
js
punpcklbw
dec
mov
push
cmp
push
rcr
in
cmp
pop
ret
loopne
mov
inc
jmp
scas
xchg
or
in
pusha
ds
and
scas
adc
test
inc
add
dec
jb
jns
addl
jbe
jb
push
sti
lahf
cmp
mov
fcmovne
call
packsswb
mov
pop
test
pop
test
pop
test
out
pushf
dec
mov
pop
mov
loope
iret
iret
cmp
fisttps
dec
aad
dec
pusha
filds
push
nop
dec
mov
adc
lock
sub
add
loopne
xchg
sub
sbb
sub
sub
inc
dec
cmpsb
scas
pusha
jo
cmp
enter
or
inc
sub
dec
adc
and
cmp
mov
stc
pusha
inc
scas
push
js
call
scas
imul
call
push
xchg
mov
jmp
mov
jmp
imul
cs
scas
xchg
test
push
add
aas
mov
and
add
daa
push
jb
push
adc
push
fwait
xchg
add
lahf
lock
push
xor
adc
dec
sahf
xchg
add
repz
and
sub
fists
jo
insb
jo
jo
cli
sti
addr16
inc
push
dec
sbb
push
and
inc
dec
jne
adc
shl
bound
xchg
int
and
sub
nop
adc
push
and
push
sub
add
xchg
adc
dec
push
push
je
or
je
cmp
push
ss
mov
or
fmull
insl
mov
es
sbb
in
sbb
mov
test
push
cmpsb
aaa
testl
frstor
in
adc
sub
out
mov
push
add
inc
into
imul
pusha
rclb
push
iret
imul
mov
sahf
data16
cmp
lret
add
jmp
arpl
push
cmp
xchg
fildl
and
lods
and
dec
jnp
mov
jl
dec
bound
xchg
xchg
insb
cmpsl
insl
mov
push
xor
aaa
push
das
cmp
sbb
dec
aaa
mov
shlb
add
repz
push
adc
ret
sub
sti
mov
inc
neg
and
repz
lret
or
popf
pop
add
adcb
fidivrl
adc
pushf
aas
push
sub
mov
imul
and
andl
sub
mov
xchg
inc
push
or
pop
mov
mov
pop
lret
roll
mov
adc
inc
rclb
cmp
jb
jmp
lahf
ja
imulb
pop
leave
mov
idiv
daa
mov
pop
jmp
jmp
add
aas
xchg
orl
dec
push
mov
and
int3
lea
jmp
daa
mov
leave
rcll
or
cli
cld
sbb
loopne
addr16
adc
inc
add
push
sbb
pop
or
loope
adc
test
orl
add
notl
or
push
add
inc
out
jno
add
or
add
mov
lret
outsl
dec
inc
test
push
inc
imul
fs
shl
testl
mov
xor
loopne
icebp
mov
sub
sbb
push
sbb
and
adc
sbbb
pusha
dec
jmp
movl
das
xchg
adc
stos
pop
outsb
push
subb
add
add
inc
adc
inc
mov
mov
jmp
mov
cmpsl
push
inc
push
lcall
dec
push
mov
pop
daa
cmc
sbb
scas
push
xchg
push
push
addr16
xorb
paddsb
cmp
in
daa
test
jne
dec
mov
mov
aas
mov
inc
add
pop
lods
push
xchg
pushf
sahf
mov
add
inc
outsl
pop
add
je
push
pop
mov
out
push
test
aas
out
pop
push
ja
and
and
xchg
adc
pop
push
sbb
and
daa
das
add
add
sub
push
divb
cmpb
in
mov
xor
xor
daa
adc
rorl
ja
push
add
sahf
add
insb
add
add
xor
xchg
das
add
jo
xchg
data16
adc
adc
scas
cmp
jmp
add
xor
add
je
out
out
pop
add
mov
pop
push
iret
mov
cmpsb
data16
lahf
or
inc
xchg
push
jmp
inc
adc
daa
inc
or
daa
pop
sbb
dec
and
mov
stos
lahf
cmpsl
adc
mov
sub
push
adc
shrb
add
inc
adc
scas
push
cmpsl
out
ret
push
ds
inc
scas
pop
bound
mov
or
push
xor
xor
inc
xor
ljmp
mov
xor
add
inc
xchg
scas
cmp
movsb
test
sysret
fs
dec
sbb
inc
mov
roll
in
sti
push
adc
inc
mov
add
add
add
movsl
push
cli
testb
add
push
pop
xchg
les
test
call
jo
inc
clc
daa
in
and
js
mov
dec
shlb
mov
pop
adc
decb
add
movsb
out
sahf
xlat
push
cwtl
push
mov
add
inc
sbb
insl
jae
je
jae
jne
test
xor
sub
insl
cmp
loop
in
pushf
and
or
add
adc
add
addr16
sbb
pop
or
adc
stos
test
add
and
adc
repnz
inc
clc
mov
sbbb
pop
pushf
adcl
mov
orb
push
push
push
insb
mov
mov
inc
add
ljmp
inc
push
in
push
xor
inc
add
stos
rorb
jns
out
mov
out
sahf
out
mov
lods
or
or
out
pushf
or
or
out
nop
jl
sahf
mov
test
adcb
sahf
out
jl
js
je
jns
out
jo
insb
sbb
sbb
sbb
out
pop
sbb
sbb
out
push
pop
dec
and
and
and
out
cmp
xor
sub
jns
out
and
and
sahf
out
sahf
sbb
sbb
adc
jns
out
adc
sub
out
add
add
cmpsl
jge
cld
test
hlt
out
sahf
out
lock
xor
call
pusha
and
push
dec
test
add
cmpsb
push
push
mov
outsb
repz
repz
mov
iret
repz
js
push
iret
repz
inc
cmp
sub
cmp
repz
adc
add
jns
out
mov
call
jns
fcom
ror
enter
out
sarb
out
mov
out
sahf
cmpb
pop
push
jns
out
inc
cmp
adc
cmp
out
cld
scas
lock
iret
repz
int3
shlb
cmp
fs
inc
xor
ds
repz
add
scas
mov
in
leave
sub
cmp
loopne
sahf
test
cmpsb
push
push
enter
repz
fadds
inc
rol
sahf
adc
scas
pop
sahf
out
lods
mov
std
inc
cld
jns
out
xor
and
adc
jl
out
add
call
cmp
fdiv
cmc
lods
hlt
cmp
repz
repz
je
jae
repz
lock
out
fistpll
out
push
out
enter
in
out
sahf
out
jmp
ljmp
inc
call
sarb
cmp
in
push
in
iret
jae
repz
loop
push
loope
cmp
repz
sub
adc
jns
cmpsl
stc
hlt
mov
jns
jnp
fstpt
fidivrl
fstps
jns
fmuls
or
xchg
out
aad
in
mov
repz
enter
test
cmp
repz
iret
jl
fs
repz
int3
cmp
out
ds
adc
in
leave
fcomps
mov
cwtl
out
jns
jnp
lahf
push
les
jns
repz
push
ret
push
push
shl
sahf
out
mov
jne
sahf
mov
out
mov
push
mov
iret
repz
xchg
mov
push
mov
mov
sahf
idivl
mov
sbb
cmpsl
push
mov
mov
mov
adc
pushf
mov
repz
dec
jo
out
pop
push
iret
repz
dec
inc
cmp
sub
aam
fidivrl
sbb
or
jo
jle
or
call
push
sbb
loopne
add
mov
push
jnp
xor
ja
adc
ss
xlat
fiadds
mov
adc
lar
mov
movups
mov
pop
loopne
mov
loopne
push
in
imul
add
mov
nop
inc
pop
mov
cmp
sub
pop
mov
sub
jno
imul
adc
pop
adc
mov
sbb
dec
fs
je
movsb
jbe
inc
push
outsb
mov
mov
add
pusha
dec
xchg
sbb
fadds
mov
nop
lods
je
aaa
sahf
mov
dec
mov
sub
xchg
pop
add
fstl
and
aam
into
lods
push
pop
movsb
mov
pushf
cmp
dec
sub
testl
mov
pop
pop
sbbb
push
fwait
nop
outsl
pusha
add
lods
lret
in
shll
dec
daa
lahf
lock
test
dec
stc
pop
in
dec
mov
ror
mov
daa
dec
fadd
sub
movw
push
pop
addr16
push
cs
pop
mov
inc
es
cmp
jns
in
sub
jns
dec
sahf
sbb
cmp
jmp
hlt
jnp
dec
sahf
call
push
sahf
divl
test
jo
leave
out
ja
add
xor
lds
push
in
push
les
clc
jl
jo
add
jns
test
xor
sub
push
inc
adc
incl
rol
xlat
not
fiaddl
adc
mov
mov
inc
rol
scas
or
ljmp
mov
inc
popa
sbb
fs
xlat
mov
int3
cmc
jae
shlb
sbb
push
das
dec
fadd
int
shlb
rcrl
sbb
in
out
mov
cmp
insb
sub
inc
fimull
or
inc
mulb
ror
aam
mov
mov
out
mov
add
ret
out
fcom
mov
mov
fs
xor
hlt
rcl
enter
into
stos
aad
mov
rcl
jnp
in
pop
sub
mov
stos
xlat
aam
mov
mov
mov
jg
testb
lcall
mov
mov
lea
std
mov
out
out
mov
enter
cli
mov
dec
data16
imul
jmp
fbld
xlat
out
shlb
divb
enter
or
popa
fidivrl
fbld
push
fs
add
xchg
outsl
loop
jno
bound
cmc
pop
imul
mov
mov
mov
sti
mov
push
ja
fs
push
mov
and
xchg
mov
mov
pop
mov
add
pop
imul
mov
iret
lock
int3
rol
mov
daa
shr
push
inc
rcrl
xlat
movsb
or
sub
cld
push
or
cmpsb
shrl
sub
sarb
cmpsb
push
cmp
pop
ret
mov
and
iret
push
push
pusha
insl
mov
mov
repz
faddl
outsl
subb
lea
mov
ds
or
inc
lret
int
loop
daa
cltd
mov
ret
mov
pushf
push
shr
adc
or
data16
push
mov
iret
out
mov
add
mov
xchg
or
sbb
dec
out
lock
push
outsl
mov
add
dec
scas
mov
stos
in
dec
test
xchg
mov
rolb
lret
imul
push
jnp
aas
cmpsl
filds
fs
cwtl
fiaddl
out
inc
mov
xchg
and
ljmp
jle
out
int
notl
mov
shrb
dec
adc
jmp
xor
movsl
mov
rclb
and
outsl
out
cli
aas
mov
fdivrl
vrcpss
dec
popa
loop
push
ljmp
mov
mov
push
mov
vpsubq
cmpsl
out
stos
mov
inc
fs
pop
push
mov
mov
addl
ret
dec
and
daa
mov
loop
mov
add
sbb
pop
inc
mov
push
aas
in
push
ret
pop
repz
popa
and
lret
subl
xchg
sub
sub
aas
and
xchg
outsl
pop
pushf
dec
inc
mov
lahf
jae
lahf
movsb
lea
or
loop
adc
dec
push
xchg
ret
cmp
or
jecxz
mov
fwait
outsb
pop
scas
mov
xchg
pop
stos
xor
mov
mov
in
xchg
cs
ficompl
xchg
ds
push
ret
or
xlat
roll
jae
mov
imul
add
mov
mov
add
cmp
and
mov
les
gs
push
add
pop
xchg
cmpsl
push
cwtl
movl
sbb
outsl
or
dec
dec
push
or
push
push
add
and
lock
add
outsl
daa
cltd
add
dec
sbb
shlb
add
sub
pop
stos
dec
sbb
in
cltd
mov
push
das
dec
sbb
std
aas
add
aas
ss
dec
loop
aas
out
insl
lods
xchg
mov
or
mov
lods
es
ja
fcoms
jne
in
cltd
mov
test
in
fisubl
add
adc
nop
pop
mov
in
pusha
mov
les
pop
das
mov
cmp
xchg
in
das
dec
sbb
xlat
aas
sbb
xchg
stos
dec
pop
aas
imul
sbb
test
das
rcll
xchg
ss
mov
movsb
lea
push
outsl
xlat
das
insl
push
xchg
ss
outsl
push
xor
push
adc
and
xlat
push
nop
or
push
addl
not
movsb
rorb
sub
les
and
pop
push
addr16
xor
mov
lcall
in
aas
adc
xchg
ss
in
xor
in
loopne
in
push
mov
into
nop
mov
test
mov
test
sbb
mov
pusha
push
sbb
aas
inc
jo
movsb
sub
aas
pop
ljmp
rol
sub
cmova
mov
aaa
imul
push
test
shlb
pop
iret
adc
movsb
inc
jg
jb
fidivs
hlt
inc
iret
inc
sbb
frstor
or
shrl
insl
add
xchg
sub
mov
lods
outsb
lods
aas
sbb
fwait
lods
aas
mov
mov
stos
fwait
mov
fisttps
andl
outsl
stos
loopne
lahf
aas
dec
outsb
insb
int
or
push
push
dec
sbb
push
mov
pop
pop
aas
push
xor
adc
or
jo
jb
inc
out
jbe
adc
push
fstpt
mov
fdivl
mov
jo
and
dec
and
add
aas
sbb
push
add
dec
dec
push
sbb
or
inc
sbb
aas
xchg
scas
cmp
fidivrl
dec
arpl
outsb
jb,pt
jo
sbb
jmp
test
fs
fbld
fs
and
pusha
pop
outsl
outsl
xchg
adc
das
push
gs
nop
adc
bndstx
or
add
pop
aas
adc
aad
jmp
inc
xchg
das
mov
push
add
je
sbb
aas
das
push
dec
addr16
imul
movb
cltd
or
dec
lahf
repz
inc
mov
cmp
jae
aas
inc
push
insl
test
xor
cmp
mov
popf
lahf
inc
insb
jnp
enter
lahf
mov
inc
dec
aas
mov
pusha
xor
aas
addb
push
fistpll
ss
outsl
dec
mov
stos
pop
test
dec
mov
xchg
bound
jae
adc
cmp
aas
adc
lahf
add
sbb
xor
insl
popl
lahf
adc
aas
push
dec
dec
pop
and
mov
das
ret
or
sub
scas
jbe
or
cmpsl
and
add
bound
bound
aaa
add
adc
mov
pop
add
jnp
imul
imul
aam
dec
push
ret
push
lahf
ret
ret
popf
ret
aas
inc
mov
arpl
jg
imul
vmread
sbb
lahf
cs
push
lds
jg
jo
xlat
cmpsb
rolb
mov
es
out
lods
push
test
mov
pushf
cwtl
nop
mov
je
pusha
pop
push
push
dec
cmp
repz
inc
inc
cmp
repz
repz
sub
and
repnz
sbb
or
clc
push
push
iret
repz
lock
cmp
mov
cwtl
nop
push
fwait
ss
aas
dec
push
ss
inc
imul
inc
mov
ja
hlt
insl
addb
pop
mov
repz
and
cmp
repz
rclb
mov
cmp
adc
sbb
lock
out
lcall
jns
out
pop
js
jns
cmp
out
sub
outsb
and
in
testl
jo
ss
lock
add
push
jb
shlb
mov
cmovb
outsb
sbb
sahf
out
sub
and
sahf
out
sahf
sbb
adc
or
cmp
out
add
cld
pop
pmuludq
cmp
repz
add
cmp
loopne
fsubl
fmuls
iret
repz
or
adc
repz
sbb
iret
test
mov
iret
repz
and
repz
loop
cmpl
ds
outsb
cli
push
incl
out
sahf
push
sbb
ds
pop
jns
out
pop
jp
sahf
scas
repz
out
shr
repnz
iret
repz
es
jb
xchg
cmp
repz
mov
loop
jns
cmpsl
stc
push
aad
xor
sahf
out
xchg
jns
adc
sub
cmp
repz
arpl
mov
mov
loop
xlat
pop
out
sahf
out
es
pop
jb
add
add
pusha
add
adc
pop
pusha
aas
imul
out
sub
push
jmp
push
add
pop
xor
pop
push
insl
ficompl
push
lds
leave
add
inc
ss
mov
pop
add
mov
pop
fisubs
pop
add
push
pop
fidivl
mov
subb
inc
int3
cmpsb
or
push
push
fstp
pusha
add
xchg
add
insb
push
push
test
addb
adc
adc
nop
push
add
add
xorl
and
adc
inc
push
add
sub
sbb
andb
dec
xor
add
adc
jge
inc
enter
data16
xor
or
inc
leave
jno
push
add
lods
adc
daa
inc
jmp
or
add
rolb
add
movsl
scas
adc
jno
xchg
adc
xor
add
add
sub
imul
add
outsl
imul
xchg
inc
and
mov
add
lods
adc
and
pusha
mov
push
add
mov
xchg
dec
sub
dec
adc
dec
stos
adc
add
int
sbb
mov
mov
loopne
xchg
loope
add
adcl
adc
add
lds
outsb
mov
push
sub
mov
inc
cmc
popa
ret
push
subb
pop
mov
adc
sub
add
imul
jmp
add
aaa
inc
arpl
add
mov
add
add
and
or
inc
imul
add
add
adc
xor
not
pusha
lcall
add
push
movsl
xchg
mov
xchg
push
sbb
add
imul
sbb
movsl
rcl
dec
ljmp
out
pop
addl
push
movsl
add
rorb
call
inc
cmp
or
movsl
mov
push
shrb
lods
adc
pop
shll
imul
cmp
and
sub
ja
inc
pusha
or
sbb
mov
mov
jge
push
ss
xor
pop
mov
mov
sbb
jmp
sbb
pop
or
xchg
inc
imul
push
sbb
push
push
xor
add
xchg
loopne
or
mov
add
insb
sbb
jmp
lods
js
push
add
xchg
jbe
adc
or
or
mov
movsl
mulb
and
sub
sub
push
loopne
sti
add
and
or
cmp
sbb
fsubrs
jge
adc
sub
pusha
sbb
outsl
jo
inc
mov
xchg
bound
pop
bound
pop
mov
imul
test
icebp
dec
jae
xchg
push
movsl
mov
popa
push
dec
stos
push
sub
push
int
sbbl
mov
adc
adc
sbb
testb
mov
pop
sahf
sub
sub
adc
adc
adc
mov
push
inc
incl
adc
iret
mov
mov
ror
add
cmp
das
cmp
dec
fwait
xchg
aas
int
push
sbb
jne
mov
add
mov
add
inc
xor
jae
and
test
and
add
sub
dec
push
add
sub
adc
or
mov
pop
adc
out
add
xchg
mov
movsl
xchg
mov
or
xor
push
fstpt
adc
movsl
std
xor
adc
mov
adc
mov
add
aaa
inc
imul
loope
inc
jge
adc
add
push
xlat
mov
adc
test
adc
push
inc
adcl
loope
mov
mov
sbb
adc
int
push
daa
inc
imul
pop
pop
adcl
dec
jbe
adc
bound
outsl
adc
and
imul
and
insl
pop
pop
shl
adc
push
sbb
sub
mov
sub
insb
dec
inc
sbb
scas
adc
xchg
mov
cmpsl
rorl
jae
imul
push
xor
scas
cmp
mov
mov
push
scas
mov
or
dec
mov
loope
sub
jb
rol
xor
cmp
je
push
lret
xchg
or
sbb
into
mov
pop
cmp
dec
xchg
cmp
gs
and
push
jb
hlt
sub
mov
jbe
imul
cs
inc
ss
dec
loopne
mov
add
dec
jae
xor
sub
pop
rorl
cmpsb
popa
int
and
cmp
sbb
dec
xchg
pop
jnp
movsb
xor
dec
push
jp
mov
push
mov
sbb
jo
jno
faddl
lods
or
or
or
mov
imul
int
cmpsb
adc
movsb
add
mov
int
cmpsb
lar
mov
je
xchg
repnz
add
add
adc
dec
add
push
or
mov
dec
jecxz
mov
mov
jmp
insb
push
or
and
gs
loope
shlb
adc
and
sub
mov
jmp
imul
pop
pop
sbb
xor
push
push
adc
add
adc
xchg
outsl
rclb
push
insl
add
sbb
sub
inc
imul
sbb
push
movsl
inc
inc
imul
add
or
movsl
mov
add
rclb
push
adc
sbb
scas
jmp
rclb
in
inc
xchg
adc
xchg
arpl
std
pop
push
fsubs
pop
subb
sub
mov
jae
fbstp
and
int
movsl
jecxz
sub
pop
cltd
mov
and
inc
inc
dec
adc
inc
sub
sbb
bound
orb
rorl
xchg
test
dec
dec
push
dec
mov
nop
push
jmp
push
or
pop
adc
cwtl
arpl
inc
or
dec
xor
arpl
leave
inc
lea
movsl
adc
add
sub
mov
addl
mov
dec
mov
repz
mov
pop
lret
aad
jo
xchg
or
daa
inc
inc
movsl
or
and
pusha
push
jns
mov
mov
and
push
mov
outsb
lds
and
rcrb
mov
xor
mov
outsl
mov
mov
jb
push
test
mov
fiaddl
xor
sar
jo
leave
inc
mov
cmp
push
add
sub
push
sub
adc
add
xchg
outsb
shrl
jmp
fwait
insl
sbb
jmp
adc
jmp
add
xor
inc
adc
jnp
xchg
ret
and
sbb
mov
add
mov
cmp
dec
inc
sub
imul
cmp
ds
movsl
jne
popf
scas
xor
dec
add
imul
inc
iret
sbb
and
jg
nop
mov
adc
insl
in
xor
inc
mov
or
outsb
adcb
xor
or
add
dec
push
add
mov
test
push
push
testl
cmc
pop
stos
lcall
gs
int
lods
sbb
xchg
popf
push
mov
xorl
fsubrs
movsb
mov
xor
mov
or
ror
push
dec
push
sbb
lret
and
leave
fsubrl
mov
or
mov
push
mov
sbb
add
loope
inc
dec
scas
and
outsl
out
and
test
daa
pop
cmpsb
cmp
lret
cmc
stos
or
xchg
int3
mov
mov
pop
inc
imul
and
and
outsl
addr16
xchg
scas
push
popf
add
mov
xor
lea
add
mov
scas
bound
rcl
pop
pop
jmp
pop
mov
adc
push
sbbl
add
pop
inc
xchg
push
fistpl
adc
cmp
jne
jb
clc
jmp
mov
je
xchg
add
mov
lahf
add
das
jne
add
add
addb
int
shrb
js
nop
sub
dec
push
cmpb
and
push
dec
jne
jg
sub
fsubr
sbb
push
rolb
pop
les
push
mov
shll
xlat
or
adcb
nop
pcmpeqw
mov
addb
cs
cmp
ret
rorl
mov
add
and
dec
dec
and
sub
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
