mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
scas
jle
push
inc
scas
clc
int3
jmp
and
or
pop
pop
mov
adc
add
mov
loop
fistpll
inc
movaps
add
and
iret
or
or
dec
lret
in
mov
dec
rcrb
call
mov
cltd
push
pop
xchg
xor
inc
jl
inc
adc
jp
push
lods
lret
sub
sbbb
xchg
lock
push
sub
and
cltd
popa
popf
mov
fidivl
xor
cmp
pop
and
inc
lret
pop
push
dec
jg
jmp
popf
aaa
rcl
int3
daa
jg
sti
cli
js
sbb
ja
mov
scas
cmp
mov
outsl
in
repz
mov
loop
xchg
mov
mov
sub
dec
lret
mov
add
out
mov
pop
jnp
jmp
xor
sbb
xlat
xchg
push
cltd
cwtl
dec
arpl
add
jmp
das
cwtl
xor
and
aas
sbb
inc
pop
inc
int
jns
popf
dec
sti
dec
jp
fisubl
jecxz
fiaddl
and
mov
in
mov
loope
idivl
lahf
scas
xchg
dec
jbe
frstor
add
icebp
inc
sbb
in
lea
jae
jae
and
mov
movb
jne
mov
pop
push
mov
cmp
sbb
dec
mov
lret
add
sub
mov
repz
lret
add
dec
lds
rcll
sbb
inc
sub
pop
sti
sub
in
bound
cmp
idivl
sti
and
clc
std
push
mov
gs
xchg
sub
and
cltd
loopne
or
mov
mov
adc
add
cmp
cld
add
mov
cmp
and
ffree
pop
sti
lcall
int3
xor
mov
in
shll
mov
subl
test
add
xor
imul
imul
xor
cs
popa
inc
xchg
ljmp
xor
insl
or
mov
pop
rclb
mov
jle
push
pop
scas
adc
out
loop
scas
inc
sub
mov
inc
jge
gs
js
sbb
sbb
dec
test
test
or
cmp
cmp
fs
scas
add
jnp
shll
cmp
sti
inc
int3
mov
xor
push
lock
jo
popf
pop
push
adc
push
xchg
bound
adc
je
sbb
mov
mov
addb
fs
and
adc
xchg
or
std
add
xor
jge
jg
jp
rorl
push
pop
or
add
add
es
mov
or
sub
ss
cmp
test
mov
fs
push
andb
inc
outsb
dec
jge
mov
in
in
inc
sbb
dec
movaps
arpl
outsl
mov
bnd
xchg
sbb
xlat
mov
pop
sub
lds
fldt
and
xchg
pop
mov
mov
xor
rol
mov
adc
gs
add
rorl
test
es
cmp
mov
inc
repnz
stos
or
ret
in
gs
or
into
test
clc
adc
fdivrs
push
mov
lea
lds
inc
sbb
jns
into
xorb
push
pusha
dec
sarb
fwait
xchg
mov
ja
call
and
jb
js
cmp
mov
scas
fcmovu
sub
sarl
add
daa
or
sub
shll
data16
jl
xchg
cli
jne
js
stos
xchg
aaa
addl
das
loopne
sbb
test
js
loop
imul
or
stos
xor
fistps
loope
sub
pop
incl
aad
cli
inc
xor
stos
sbb
jo
fisttpll
sub
xchg
fistl
or
cmp
adc
scas
std
je
sub
std
iret
sbb
mov
sub
cli
cs
push
mov
fs
leave
push
aaa
sbb
mov
jmp
sub
jp,pn
movl
mov
je
or
test
in
int
jp
popa
lcall
xchg
and
cs
mov
cmp
loope
push
notb
cmp
mov
pop
mov
cmp
out
sahf
mov
dec
lahf
stos
lcall
je
ret
dec
into
les
shll
lods
nop
push
xlat
adc
or
cmp
or
orb
push
inc
repz
test
mov
and
into
int
pop
or
aam
ret
out
out
sbb
sbb
mov
imul
sub
call
out
push
add
push
pop
sub
push
stos
or
lods
aad
jbe
shlb
add
mov
stos
or
inc
pop
push
test
xlat
out
cltd
subb
test
and
jle
xor
push
adc
test
fldl
fs
dec
xor
add
fsts
ret
notb
jmp
xor
lret
popaw
sbb
stos
jb
adc
imul
pop
push
js
xchg
movsb
and
jb
out
pop
xchg
inc
push
fldl
or
cmp
aas
testb
jno
shlb
xor
mov
or
inc
mov
cli
aam
jns
out
push
pop
mov
fimuls
inc
push
push
and
jae
jno
sub
sbb
outsl
mov
inc
sbb
lret
lret
repnz
inc
cwtl
sbb
fs
cmp
inc
jb
cmp
test
xchg
in
addr16
add
adc
or
mov
mov
dec
in
ret
idivb
stc
dec
sahf
sarl
push
fists
push
sti
pop
mov
loop
js
lds
pop
jno
mov
xor
jnp
pop
xor
adc
mov
ret
cwtl
jecxz
roll
leave
out
fdivl
jp
shll
mov
dec
nop
shlb
sub
xor
inc
mov
clc
or
dec
in
adc
jnp
outsb
push
stc
xchg
aas
push
je
jmp
movsb
mov
jge
sbb
ljmp
jecxz
mov
mov
je
test
addr16
mov
cli
and
dec
divb
push
shrl
push
cmp
push
cwtl
fisttpl
xchg
add
filds
cmp
dec
inc
fs
movsb
xchg
add
mov
movsb
pushf
pop
mov
das
jns
xchg
test
jbe
xor
add
cmp
rcrb
ss
mov
jecxz
lods
stos
mov
and
les
int3
out
jle
ss
loope
lock
cld
lret
mov
jge
fistpll
out
inc
aas
adc
test
xor
pushf
push
mov
cmp
push
xchg
fsts
aam
adc
mov
stos
push
jne
mov
lcall
sbb
push
gs
out
add
and
xchg
movsb
pop
shrl
pop
into
mov
xchg
test
and
test
or
adcl
fnsave
push
xorb
les
xchg
sub
out
inc
adc
dec
sub
loop
cmp
inc
loop
pushf
mov
test
test
das
and
aaa
mov
les
les
ficomps
cmc
shlb
daa
addr16
popa
clc
hlt
xor
cmp
shll
xchg
inc
outsb
pusha
adc
loop
nop
dec
mov
dec
mov
test
inc
xor
test
cmc
mov
xlat
out
dec
dec
aaa
sbb
aad
mov
jl
hlt
mov
add
sarl
nop
int
pop
lock
push
inc
ret
mov
inc
dec
sbb
lahf
mov
sbb
into
xchg
negl
jle
pop
jle
jbe
je
dec
xchg
shrl
jmp
cmp
shrl
sbb
scas
xchg
add
adc
in
pop
jno
lods
clc
and
xchg
lds
out
and
pop
mov
xchg
in
lcall
ds
dec
push
inc
jae
rorb
js
and
sbb
scas
popa
aas
pop
lahf
sub
popa
das
bound
and
lret
inc
mov
int
mov
jae
ja
push
mov
jmp
fmul
inc
jo
leave
outsl
jns
or
leave
adc
dec
popf
js
in
int
addr16
xor
cmp
mov
cli
pop
sbb
mov
jecxz
xorb
jmp
mov
mov
jecxz
fstl
dec
popa
ljmp
cmpsb
add
or
arpl
lahf
or
cltd
jl
or
mov
mov
xor
sbb
shll
cmpl
cli
jge
sub
push
pop
or
lret
test
loope
adc
jg
aaa
xchg
mov
inc
inc
in
ficoml
inc
daa
nop
test
daa
mov
lods
pop
loop
outsl
stc
and
xor
xchg
ljmp
leave
popa
scas
out
imul
sbb
clc
sbb
lret
sti
test
andl
jecxz
mov
dec
jmp
out
or
jmp
loopne
dec
adc
or
jl
jl
dec
shl
inc
fists
jnp
jle
sbb
jns
adc
xlat
add
lods
into
rol
popa
add
jg
and
jo
cmc
icebp
sbb
and
lods
mov
and
pushf
pop
mull
mov
jb
insl
mov
cld
out
fcoml
adc
icebp
rcr
sbb
test
push
sbb
fdivrs
xlat
pusha
das
sahf
jecxz
mov
sbb
fcoms
xchg
data16
andl
xchg
adc
imul
call
cmc
push
int3
cmp
enter
out
inc
dec
adc
add
fwait
push
idivb
adc
out
sub
push
mov
inc
lret
addb
lods
jp
xchg
dec
roll
pop
dec
xchg
adc
mov
shrb
addl
lahf
mov
movsl
or
push
lock
pop
in
dec
dec
dec
sub
dec
sub
cmp
insb
pop
icebp
dec
scas
mov
adc
loop
fdivrs
mov
sbb
sbb
mov
loope
or
imul
insl
cmp
cmp
push
scas
imul
leave
jae
das
out
test
mov
popf
mov
shr
push
cmpsb
jecxz
inc
mov
mov
scas
dec
and
sbb
dec
mov
or
xchg
add
loop
push
daa
mov
fdivs
add
and
mov
jmp
call
xor
jno
in
adc
ret
aam
cs
pop
hlt
loope
rorb
and
int3
jbe
mov
in
dec
pop
mov
nop
pop
dec
popf
pop
pop
xor
pop
repz
out
in
jg
in
stos
jl,pn
adc
loop
adc
mov
lahf
inc
push
sbb
clc
jg
cli
push
lods
test
scas
mov
and
push
push
int3
mov
pushf
cmp
adcl
add
fimull
jbe
pusha
inc
xor
and
arpl
inc
xor
adc
push
icebp
add
cmpsb
shll
adc
ret
icebp
outsb
sub
and
mov
scas
push
push
cmpsl
js
pop
and
mov
outsl
dec
ja
jnp
pusha
xchg
cmpb
test
clc
sbbl
dec
in
outsb
cs
mov
repz
sub
sub
cmpl
cmp
jp
sub
sub
jmp
jl
mov
scas
int3
and
shll
xor
shrb
and
sub
fldl
icebp
imul
mov
jge
push
or
mov
rol
jns
cmp
jmp
jecxz
xor
decl
cmp
cmp
aad
les
mov
sub
or
add
scas
lret
inc
cmp
ja
test
and
sti
mov
cmc
dec
out
rcrb
cmp
pop
and
and
fdivp
push
push
idivl
or
out
push
jl
cmp
sbb
jns
repz
xchg
push
xchg
cmpsl
loopne
dec
xor
mov
ljmp
or
in
mov
xor
insl
cld
scas
ret
dec
xor
sub
decb
and
addl
mov
jp
mov
xchg
adc
rorl
and
adc
mov
inc
xor
jge
clc
or
cwtl
cmc
lds
push
sbb
xor
lahf
ss
or
mov
adc
push
inc
lahf
inc
mulb
push
outsb
sub
enter
inc
out
jno
popa
push
jne
jnp
out
xor
out
outsl
add
pop
jnp
cmp
push
push
mov
inc
add
sub
and
cmpsl
aad
cwtl
cld
and
xchg
ljmp
cld
or
mov
popa
loopne
mov
pop
mov
pop
push
lods
test
icebp
orb
insb
test
stc
sahf
jg
scas
and
in
adc
movsl
pop
jno
mov
xchg
dec
pop
daa
das
xchg
scas
sub
jbe
cmp
notb
fucomi
cwtl
fwait
je
push
or
cmp
arpl
sub
and
sub
pushf
out
gs
insb
sub
jl
test
pop
cmpsl
xchg
cmpsl
js,pt
pop
fsts
scas
sub
pop
insb
push
mov
mov
lret
and
shlb
pop
rcll
sti
icebp
xchg
push
add
or
out
div
sti
pusha
fisubl
jl
in
pop
fwait
rolb
sub
nop
xor
out
fbstp
mov
mov
enter
outsb
push
pusha
mov
ljmp
push
std
pop
xchg
add
or
pop
sub
jae
ljmp
jns
mov
cmp
nop
xorb
mov
mov
jmp
outsb
push
inc
lret
sub
aad
add
jg
mov
mov
ret
adc
jb
mul
adc
fldl
loopne
dec
cwtl
or
jecxz
outsl
leave
out
push
add
jo
sti
push
sbb
roll
lcall
push
seta
cmpsb
mov
mov
mov
mov
shl
fnstenv
popf
xlat
push
arpl
repnz
mov
sti
mov
jne
mov
mov
fdivrl
roll
xchg
lahf
inc
gs
and
pop
shll
enter
movsl
hlt
add
inc
dec
xor
jb
cmc
nop
pop
add
ffreep
push
mov
sub
or
mov
mov
cli
adc
mov
call
xor
mov
fidivl
mov
ljmp
fwait
dec
movsl
inc
mov
aad
insb
idivl
or
mov
sbb
mov
test
jecxz
cs
dec
add
adc
lock
test
fimull
mov
mov
std
push
sbb
ffreep
adc
and
push
call
and
xor
push
lods
bound
mov
mov
xor
out
mov
imul
in
mov
mov
add
gs
gs
nop
mov
jne,pn
cld
dec
sbb
xchg
subb
lret
or
or
sti
aaa
adc
orl
fsubrl
test
pusha
test
mov
mov
fcompl
cmp
rcll
jne
int3
adc
xor
add
cmp
negl
pop
fidivrl
mov
nop
out
dec
push
jl
xchg
out
out
mov
lds
mov
or
addb
or
mov
inc
inc
dec
shrb
mov
mov
outsl
jne
adc
cmpsl
aas
mov
cmp
jnp
bnd
inc
dec
shl
lds
imul
lea
or
mov
mov
popf
pop
lahf
mov
jge
sarl
mov
in
adc
nop
jmp
lcall
fisubrs
inc
ljmp
daa
push
addl
aad
mov
aaa
mov
dec
pop
mov
sbb
sbb
add
rcr
pusha
add
aam
pop
cltd
out
aam
sbb
adc
and
lahf
and
push
xchg
ja
mov
jl
pusha
xchg
fistps
sbb
cs
or
xlat
pop
mov
iret
dec
xchg
xchg
push
xchg
cli
imul
jns
push
mov
sti
pop
mov
lret
sbb
adc
inc
sbb
adc
lods
xorb
jge
cltd
jo
pusha
jle
push
repnz
dec
inc
adc
jb
out
xchg
stos
das
cmpsl
stos
dec
jle
and
leave
insl
jns
test
mov
iret
xchg
add
loop
dec
sub
or
mov
and
xchg
shrb
inc
in
inc
cmp
cmpsl
divl
push
icebp
xchg
fs
sbb
push
stos
and
add
pop
jmp
mov
adc
fdivrs
out
inc
cs
push
cld
in
sbb
lock
cmp
push
sbb
jl
ret
jp
stos
push
roll
mov
fldenv
pop
xor
mov
jne
aad
and
out
stos
jo
repnz
mov
aas
xor
bndldx
fadds
pop
xchg
cmp
xchg
test
cli
sarl
push
in
pop
mov
les
cli
xchg
stos
call
stos
test
hlt
test
out
lds
dec
shl
push
xchg
pop
nop
aam
stos
adc
ror
sbb
lret
enter
fcmovne
popa
adc
sub
xorl
cld
xor
and
cs
xchg
xor
sbb
and
push
mov
test
movb
jno
xchg
sub
push
pop
push
or
adc
adc
or
mov
rcrl
filds
fimuls
xor
fldcw
in
divl
xlat
dec
push
inc
mov
and
sti
fs
fsubl
arpl
jnp
xchg
in
add
adc
xchg
pop
test
jge
cmp
stos
pusha
pop
in
add
fmuls
sbbl
sub
in
sub
movsl
jge
pop
outsl
and
pop
push
lahf
push
gs
jmp
cwtl
clc
inc
push
mov
dec
loope
nop
daa
push
xchg
mov
push
cwtl
pop
cmp
int
sbb
jge
cmpsl
xor
mov
sbb
popa
xchg
cltd
je
ror
insl
xlat
incl
cs
mov
pop
xlat
fildl
mov
mov
std
shrb
cmp
mov
shlb
pop
sbb
lock
adc
or
inc
xlat
and
cmp
jge
jmp
add
mov
sbb
cmp
pop
mov
jb
mov
xchg
xor
inc
adc
pop
les
outsl
arpl
add
xor
pop
ja
mov
daa
dec
push
imul
stc
mov
xor
nop
push
xor
fmuls
push
sarb
dec
jb
mov
mov
jno
jg
popf
insb
outsb
sub
outsb
jmp
flds
icebp
fs
jl
nop
in
mov
frstor
inc
mov
lret
xor
jno
jecxz
cwtl
push
das
mov
xchg
loopne
dec
or
repz
jmp
stc
icebp
add
sub
dec
lahf
xor
arpl
sub
and
aaa
in
jle
dec
lcall
mov
sub
mov
clc
dec
xlat
mov
test
mov
xchg
sub
xchg
jb
lret
mov
sub
xor
add
sub
add
or
mov
repz
test
mov
sti
add
cmc
fdivs
sbb
push
adc
jle
dec
data16
scas
adc
dec
pop
adc
insb
jb
pop
cwtl
int
cltd
enter
mov
lret
jmp
push
xorl
loop
dec
mov
dec
cltd
xor
jae
cmp
adc
jecxz
push
inc
sub
sahf
jp
xor
xchg
inc
ret
jo
mov
in
fs
cs
or
inc
int3
imul
insb
push
jnp
add
push
inc
push
popa
adc
pusha
arpl
or
mov
push
cli
icebp
adc
push
ss
dec
add
shrl
or
imul
leave
push
push
push
and
es
aad
cmpsb
inc
jnp
insb
cltd
mov
inc
add
jbe
shl
cmpsb
cs
mov
adc
lret
sahf
push
push
mov
jno
push
and
int
xlat
and
lds
dec
xchg
dec
icebp
repnz
fsubrp
mov
adc
adc
jecxz
lds
aam
jp
sub
test
out
insl
sbb
pushl
pop
inc
jne
hlt
test
mov
int
sbb
ret
cmp
cmp
nop
jge
arpl
fsubrl
lret
mov
mov
lret
sub
pop
and
call
push
dec
xor
adc
jcxz
mov
jecxz
fistl
movsb
push
xchg
mov
jmp
aaa
rol
jp
lods
adc
mov
mov
sbb
adc
and
mov
and
add
pop
adc
and
xchg
loopne
inc
dec
insb
insl
roll
mov
sub
adc
sahf
inc
adc
ja
cld
lds
add
inc
mov
cltd
xchg
xor
mov
icebp
in
clc
outsl
mov
lods
add
stos
pop
pop
mov
pusha
imulb
es
jne
lock
imul
pop
repnz
sub
popw
stos
pusha
jle
push
in
hlt
jg
stos
sub
or
insb
xchg
leave
cs
pop
rcll
mov
clc
push
rclb
imul
dec
in
sub
and
inc
out
cmp
mov
mov
fstpl
sbb
xor
movsl
sub
or
ficoml
xlat
popf
lret
sub
lods
inc
xchg
push
xchg
repz
add
test
add
push
sbb
pop
sub
ficoml
jns
mov
pop
shll
das
aam
sub
out
jno
lea
gs
and
push
addr16
xor
roll
int3
lahf
inc
xchg
rep
shr
fsubs
fwait
out
popa
or
pop
cli
mov
push
mov
jecxz
xchg
lcall
mov
shrb
or
leave
ss
pushf
pop
xchg
les
pop
xor
cmpsl
jp
adc
loopne
adc
mov
mulb
xor
xchg
outsb
pop
lock
inc
xchg
push
add
dec
lea
push
shrb
int3
movsb
pusha
in
or
inc
jmp
stc
mov
push
movsl
shll
jno
int3
dec
cmp
ret
pop
je
mov
lret
dec
push
fmull
pusha
sub
dec
and
loopne
data16
cli
stc
fsubl
and
mov
or
pusha
shll
es
aaa
fdivl
std
out
stos
or
adc
sahf
dec
lret
jno
mov
pop
shrb
xchg
clc
aam
lahf
imul
jle
scas
fadd
shl
jecxz
lods
fdivs
cmpsb
into
mov
fs
cmp
cli
loopne
xchg
in
dec
inc
ja
sarb
sub
add
add
xchg
inc
dec
pop
ss
jae
movsb
cs
or
jnp
lcall
outsb
inc
rcr
lods
pop
add
fs
outsl
cs
fwait
arpl
movsl
fldt
and
and
js
inc
inc
ret
cmc
adc
mov
pop
mov
fwait
jp
and
sub
push
mov
sahf
arpl
aam
out
jb
aas
push
jp
jns
std
fwait
mov
popf
inc
push
test
dec
xlat
inc
ficoml
fildll
je
jnp
movsl
dec
xor
rcrl
mov
jns
mov
push
mov
cmp
cmp
enter
or
jle
xchg
dec
js
lahf
out
mov
je
jg
pop
fcompl
fucomip
push
mov
aaa
mov
into
stos
sbb
leave
xchg
pop
and
fs
hlt
pusha
pusha
push
push
adc
sbb
lahf
xor
cmp
in
stos
jp
dec
jb
fsubr
sbb
pushf
and
jg
insb
pop
xor
xor
push
and
add
fs
pusha
iret
pushf
ud0
and
leave
sub
sbb
cmp
inc
daa
inc
push
jmp
xchg
sub
fld1
frstor
scas
xor
jge
sbb
loope
mov
mov
gs
inc
lods
cmpl
leave
mov
fsts
mov
cmp
jmp
daa
pop
int
dec
jge
das
in
pop
lret
sub
and
adc
pusha
iret
dec
popa
add
cld
sbb
js
dec
and
cmp
ret
int
and
jp
xchg
loope
xchg
out
cli
xor
sub
mov
mov
imul
push
adc
jmp
jnp
xchg
xchg
add
inc
das
inc
mov
mov
mov
sbb
cmp
add
xchg
cs
int3
fcomps
mov
jne
divl
rorb
loop
xchg
inc
hlt
out
pop
push
arpl
sahf
arpl
mov
pop
orl
gs
ret
xchg
inc
cmp
stc
mov
sbb
push
andb
push
lahf
sbb
mov
xor
int3
lock
testb
notb
shll
xchg
aad
mov
or
inc
jns
aam
dec
jmp
or
push
pop
fwait
scas
pop
pushl
push
push
enter
js
inc
pushf
adc
add
sbb
sub
test
jecxz
pop
push
lea
xchg
outsl
loop
decl
lahf
cmpsl
mov
insl
lds
in
sarl
push
and
sub
dec
push
repz
lahf
dec
repz
dec
jmp
dec
or
insb
xchg
out
push
aad
xchg
lcall
xor
aas
xchg
hlt
add
mov
cltd
ret
push
xchg
fisubrs
fs
cmp
push
and
incb
xchg
aam
push
push
add
xchg
in
in
mov
inc
or
cmp
sbb
push
pop
ret
je
mov
pushf
cmp
addr16
mov
inc
fdivl
sbb
mov
dec
jno
adc
adc
pop
fldcw
sahf
subb
xchg
std
movsb
rcrl
icebp
inc
ret
scas
mov
bound
mov
add
inc
out
into
inc
jo
pushf
jno
cli
arpl
mov
sbb
mov
jp
mov
shll
in
scas
push
mov
fstl
mov
inc
and
mov
ret
stos
mov
fisttpll
xor
decb
dec
shll
mov
pop
out
dec
mov
ret
inc
imul
mov
xchg
fcomps
repnz
dec
ficompl
insb
add
and
and
mov
xor
inc
aas
ret
enter
cmp
mov
popf
push
cmpsb
fstps
push
dec
cmp
xchg
jo
fstpt
out
pusha
xor
shlb
mov
or
movsl
sub
and
loopne
mov
jns
dec
pop
stos
jb
mov
daa
das
push
add
loopne
mov
shll
into
pop
test
push
repnz
cmp
shr
xchg
jecxz
inc
cmpsb
call
inc
enter
push
mov
xor
dec
pushf
shl
aad
es
rclb
pusha
ds
xor
mov
inc
xchg
mov
cwtl
mov
data16
aaa
popl
pop
or
mov
mov
mov
xchg
add
gs
in
iret
int
loope
notb
mov
out
push
nop
loopne
and
xchg
subb
and
inc
ret
xor
lds
sub
test
lret
sahf
inc
les
je
inc
pop
cmp
cwtl
mov
xchg
mov
ret
mov
shlb
aad
shlb
add
pop
lods
insb
inc
xchg
sub
sub
test
sbb
dec
pop
jp
rorb
jge
lods
test
sbb
aad
les
inc
std
jp
jb
mov
sbb
std
dec
inc
addl
cvtdq2ps
mov
fbld
or
bound
adc
std
pop
sahf
imul
lods
fisttps
jg
pop
jle
daa
push
sbb
out
jle
cld
jae
icebp
xchg
lea
pop
mov
fstpl
inc
bound
lds
inc
sub
sbb
or
push
inc
pop
xchg
out
data16
clc
mov
push
sub
js
and
cmp
fdivr
mov
icebp
inc
push
jo
js
cmp
or
int3
fs
mov
cmp
jbe
mov
mov
push
lods
or
in
and
cmc
dec
sahf
cs
stos
out
lahf
lea
pushf
jns
mov
inc
xor
aam
test
mov
ss
jecxz
and
clc
cmp
and
sub
or
cmp
repz
xor
das
xchg
test
cmc
sbb
fcmovnbe
mov
pusha
shl
dec
sub
adc
sbb
xlat
adc
mov
push
xchg
mov
sbbl
mov
push
cmp
jae
pop
inc
mov
imul
sbb
mov
into
sbb
mov
icebp
outsl
or
cli
inc
insl
and
adc
add
lds
push
sbb
sahf
mov
jo
mov
pop
addr16
push
push
repnz
and
sti
repz
ret
nop
add
clc
mov
push
jg
daa
xor
sbb
and
jl
lods
and
inc
adc
mov
push
stos
push
jns
fdivs
mov
and
xchg
out
lahf
dec
xor
mov
pop
pop
inc
pop
xor
inc
adc
and
cmp
jb
dec
xchg
mov
cmc
adc
cmc
outsl
das
lret
scas
inc
push
push
sbb
adc
adc
pop
popf
cmpsl
and
mov
popf
mov
out
sub
xchg
mov
add
mov
push
aam
fildll
jle
pop
imul
mov
fsts
dec
push
mov
jb
pop
or
pop
or
inc
fisubrl
fs
sbb
sti
pop
mov
clc
add
cmpsb
mov
cmp
fwait
dec
clc
mov
jp
or
adcl
loope
cmpsb
ja
dec
sub
lods
cmp
xchg
cmpsb
and
mov
lods
cmp
aad
out
cld
mov
out
mov
add
add
ret
ss
je
jl
and
jbe
push
dec
pusha
sbb
add
loope
aad
les
lret
lods
test
cs
jg
in
aam
ja
pop
pushl
loope
pop
dec
ja
adc
icebp
xor
mov
scas
or
out
pop
adc
or
fisubs
ret
inc
nop
andl
push
pushf
jmp
sti
out
sbb
fidivrl
inc
pushf
pop
loope
xchg
daa
sub
sti
js
mov
outsl
jp
sbb
or
push
jmp
in
enter
jns
mov
testb
aas
outsl
cmp
and
mov
sarl
push
test
cli
loop
inc
adc
jge
sti
ljmp
mov
scas
dec
adc
adc
popf
aad
mov
pop
adc
xor
call
fisttps
or
inc
je
push
jnp
adc
dec
xor
dec
loop
add
adc
xchg
pop
jg
pop
fdivs
pop
pop
outsb
mov
push
add
nop
pop
jl
xor
inc
aaa
mov
mov
into
sarb
sbb
sbb
adc
les
push
and
push
pop
sbb
fstpl
push
pop
sbb
les
ret
dec
xor
dec
pop
dec
sbb
adc
sub
mov
lcall
pusha
mov
sbb
push
sti
movd
lods
mov
popf
dec
loopne
jecxz
xchg
les
pop
ljmp
jge
mov
mov
push
in
mov
ret
pop
outsb
push
add
push
mov
nop
test
xor
fists
add
les
cmp
mov
lret
cmpsl
jmp
jb
addb
lret
push
int3
mov
andb
mov
ds
push
je
xchg
pop
and
repz
mov
mov
xor
mov
or
cwtl
imulb
andl
sub
enter
jg
call
cmp
push
repnz
and
lods
mov
pop
sub
push
mov
cs
push
stos
mov
add
xor
pushf
div
aaa
mov
cmp
into
mov
stos
lods
push
ficoms
mov
xchg
gs
imul
inc
enter
or
das
arpl
mov
push
inc
lods
insl
aas
jno
aam
mov
add
add
and
loopne
pop
pop
and
pop
jecxz
pop
bound
notl
outsb
js
xchg
xchg
xor
ds
insb
xchg
movsl
fisttpl
pop
push
lret
mov
jne
xchg
in
stc
cld
imul
cmp
aaa
and
jl
mov
add
or
sub
iret
aam
sbb
cld
mov
cmp
sbb
inc
loopne
and
popa
cmp
xchg
rclb
rol
pop
popf
and
sbb
popf
mov
fmuls
adc
sub
inc
movsb
out
pop
xchg
push
jecxz
adc
mov
arpl
fmulp
repz
dec
imulb
mov
fs
sub
jmp
clc
mov
ss
xchg
test
in
outsb
sbb
xchg
fcmovbe
into
loop
fwait
out
mov
xor
cmp
sbb
bound
and
lods
xor
sbb
mov
mov
sarb
cmp
dec
fisubrs
mov
push
mov
xchg
movl
shll
add
jnp
je
push
sub
dec
sub
testl
inc
and
adc
popaw
mov
lods
sbbb
or
aam
sbb
cmp
sbb
iret
xor
sbbl
cltd
push
ficoms
out
mov
fmuls
add
mov
stos
lahf
jge
imul
push
or
out
rorl
pusha
ljmp
or
lahf
pop
mov
scas
mov
pop
jo
ret
add
or
mov
sbb
cmpsb
scas
outsb
repz
adc
dec
xchg
inc
int3
ffree
mov
popa
xchg
sbb
dec
dec
ret
jmp
xor
fnsave
and
movsb
jg
and
dec
aaa
push
out
mov
std
rol
dec
subl
out
dec
out
dec
movsl
ja
mov
out
addr16
push
inc
cmpsl
rolb
sbb
aam
pushf
jno
mov
dec
int
int3
xchg
enter
sbb
jae
mov
nop
dec
lods
out
loopne
mov
fdivrl
lret
test
rcrl
cld
sbb
push
fbstp
inc
mov
idivb
mov
xor
vpand
jmp
addr16
cltd
mov
xlat
es
movq
xor
mov
ds
mov
mov
cmp
mov
scas
iret
fadds
dec
out
and
cld
test
pop
sub
inc
lahf
lcall
inc
xlat
xor
pop
out
xchg
adc
nop
mov
fcoms
xor
stos
stc
mov
popa
rep
test
inc
cltd
outsb
add
add
movsl
inc
cmp
shl
js
jmp
sbb
fucomp
dec
push
cmc
ficomps
xchg
loopne
cmp
inc
add
cli
adc
jg
sti
cmp
stos
mov
ret
pop
je
lock
out
xor
std
push
cltd
inc
mov
push
push
push
jecxz
xor
invd
and
lock
ficoml
lret
push
push
lret
iret
xchg
or
addr16
jl
lahf
lock
mov
pop
cmp
or
inc
lods
jmp
cmp
cmp
fbld
lods
enter
data16
les
sub
and
imul
sub
data16
cwtl
sbb
sub
lods
mov
mov
ret
idiv
out
xor
push
jnp
outsb
mov
sbb
xchg
push
into
test
loop
add
test
test
xlat
xlat
addl
xlat
sbb
push
mov
or
int3
lea
xor
lds
fdivp
cmpsl
adc
iret
jnp
test
or
fdivl
sbb
sbb
lods
popa
push
stos
lahf
mov
jbe
mov
inc
ljmp
adc
and
cld
push
mov
pop
mov
inc
xchg
lods
sbb
push
adc
cmp
and
loop
and
out
add
jg
sub
xchg
pop
dec
mov
mov
mov
fstpl
popa
iret
ds
sub
and
sub
ljmp
push
push
cmpsb
or
mov
cwtl
rcrb
mov
notl
sub
jne
ljmp
rcll
fstps
cs
dec
orl
icebp
in
xor
add
in
adc
xor
fistpl
dec
sbb
sbbb
testb
stc
inc
and
mov
mov
pop
lock
mov
clc
jns
loopne
imul
push
push
push
jne
mov
test
push
js
stos
pop
inc
mov
stos
add
or
in
xor
dec
push
std
insb
pop
out
aad
pop
jl
pop
add
add
add
jmp
rorl
sbb
pop
inc
leave
mov
shll
mov
xchg
sahf
sbb
cmp
adc
inc
inc
cmpsl
insl
punpckhbw
mov
mov
xchg
ss
mov
pop
pop
insl
test
sub
mov
xchg
daa
nop
fdivs
xorl
loopne
mov
cmpsl
cmp
lods
jecxz
icebp
cwtl
les
mov
call
push
dec
das
aas
pop
pop
adcb
pusha
pop
and
das
xchg
lods
test
xor
ficoms
mov
dec
push
cmp
insl
mov
loopne
jb
fists
adc
rclb
sbb
inc
mov
repnz
cmpl
int3
inc
push
inc
push
jnp
arpl
pop
jo
xor
add
xchg
scas
fwait
push
cltd
fcmovne
sub
mov
cmp
popa
mov
addl
rolb
test
push
jnp
fmul
fld
mov
std
jne
cmp
fldlg2
lock
fwait
pop
out
add
sbb
mov
fwait
jecxz
fadd
jmp
xchg
in
cmp
mov
cmp
loopne
xchg
ljmp
cmpsb
cmp
ret
mov
fs
fdivs
inc
out
xor
cs
jo
or
das
jnp
xor
sub
lock
xchg
icebp
mov
mov
add
jp
shll
push
loop
xchg
idivl
rolb
pusha
lock
or
mov
insb
push
ljmp
mov
mov
sahf
inc
or
fs
jnp
imul
jle
das
cld
cmp
gs
fdivrl
and
mov
ds
lcall
jae
loope
jnp
rcr
push
aad
repnz
lret
sub
mov
stos
imul
rcrb
popa
or
jno
jl
out
xchg
or
fadds
stos
scas
and
mov
cwtl
hlt
pop
fadds
xor
fs
push
cmc
add
arpl
jl
data16
mov
stos
pop
sbb
es
mov
les
lods
cmp
insb
ljmp
push
xchg
lods
gs
push
loop
fisubs
xchg
xchg
into
pusha
push
sbb
out
inc
pop
fadds
jle
adc
addr16
or
pop
test
push
or
cmc
xor
sub
sbb
idiv
pushf
negl
fimull
inc
push
js
pop
or
push
jp
test
cmp
jp
mov
sbb
sbb
and
jo
and
push
mov
addr16
data16
mov
jge
fsubrs
aam
mov
mov
jno
dec
xchg
mov
xchg
jne
cwtl
sbb
and
divl
sub
mov
lds
test
out
in
sbb
sub
fnstenv
pop
or
and
nop
lock
sub
inc
outsb
repz
adc
pop
mov
push
jl
or
cmp
jb
movsl
cwtl
cli
fwait
or
pop
lret
jg
cltd
insb
sbb
and
sub
add
lcall
mov
sub
xchg
adc
loopne
loop
or
jns
jle
fsin
movsb
sub
test
lret
push
cwtl
xlat
cmc
add
mov
sbb
sti
cmp
dec
sbb
int
insl
pop
aaa
adc
aas
div
mov
test
add
xchg
cmp
rcll
push
push
iret
sub
data16
and
es
cmc
lcall
pusha
adc
pop
or
dec
movsb
jmp
jp
push
mov
mov
leave
repz
jecxz
inc
not
int
lret
ret
das
and
in
dec
mov
mov
xchg
pushf
aaa
add
mov
fisttps
imul
sbb
xorl
xchg
cld
fldln2
aas
cs
mov
daa
fwait
sbb
outsl
clc
stc
std
dec
sub
dec
or
inc
arpl
movsb
leave
sbb
or
insl
fiaddl
jecxz
mov
cmp
dec
mov
jle
sbb
icebp
sti
sbb
sub
nop
sub
inc
or
in
cltd
lds
cld
jl
inc
lea
pop
pop
jmp
inc
aam
cmp
hlt
out
inc
cmpsl
or
int
lock
xor
jp
sub
loope
stos
cmc
fwait
into
mov
lds
ljmp
fdivrl
xor
out
add
pop
sub
or
sub
mov
es
imul
insl
inc
sub
insl
xor
jl
std
pop
jbe
xor
sbb
repnz
scas
mov
mov
ljmp
sbb
xchg
ret
in
ss
push
into
dec
mov
test
ds
imul
dec
push
pop
ret
bswap
enter
adc
pop
dec
push
das
repz
roll
adc
negl
pop
ds
cld
or
popf
arpl
and
sbb
add
xchg
jmp
dec
scas
or
daa
sub
outsb
xor
and
or
pop
imul
paddsb
in
insb
clc
jno
xlat
ret
jp
flds
aas
push
lock
xchg
mov
add
push
inc
jb
push
xchg
outsl
push
xor
push
leave
jb
push
movsb
outsl
outsb
cmp
xor
hlt
rcl
mov
lods
xor
sti
cmp
aad
dec
push
andl
bound
cmp
push
cmpsb
cld
xlat
pop
sub
sub
mov
jecxz
repnz
mov
out
cmpsb
adc
mov
inc
sub
push
dec
out
mov
adc
cmp
sti
dec
iret
xchg
push
and
incb
call
or
imul
mov
jne
push
int
pop
repz
mov
mov
push
mov
and
mov
cwtl
cmp
jb
int3
sahf
pop
ja
dec
fwait
in
xchg
sarl
mov
pop
sahf
mov
je
inc
dec
jae
inc
outsb
sahf
sub
daa
stc
and
xlat
jo
xor
adc
mov
mov
insb
imul
aaa
arpl
xor
mov
jo
and
inc
and
lcall
leave
adc
fidivrl
xor
mov
icebp
insb
and
pop
add
and
loope
or
jne
push
outsb
aam
inc
arpl
shll
cmp
jp
mov
rorl
pop
ret
icebp
and
aad
adc
adc
jns
mov
xor
lret
shlb
adc
add
xchg
add
lret
xchg
mov
sbb
cmc
icebp
xchg
ret
mov
lret
lret
test
rolb
out
or
dec
adc
and
pop
push
out
sub
inc
or
inc
push
sub
repz
out
rcll
sbb
das
xlat
pop
pop
sub
mov
lods
loope
inc
seta
faddl
push
std
mov
cld
inc
adc
jge
xchg
and
je
add
popf
outsl
cmpsb
js
popa
sub
insb
xlat
sbb
in
or
cli
test
test
jg
mov
test
mov
in
iret
mov
std
pop
jge
call
inc
addb
div
rolb
scas
imul
bound
loop
jne
mov
dec
jb
dec
pop
cltd
inc
mov
push
cmp
jo
stos
andb
jl
mov
jne
out
adc
xor
xchg
iret
push
mov
xchg
popa
les
and
cmc
fbld
mov
lods
mov
pushf
bound
imul
sbb
aaa
insb
cmp
ja
movsl
lcallw
bound
mov
adc
mov
xchg
pop
out
add
cmc
test
sub
and
pushf
pop
or
xchg
mov
neg
ds
je
jno
loop
adc
jns
cmp
xlat
push
out
or
outsb
push
and
adc
mov
imul
repnz
mov
cmpsl
imul
in
ret
or
cli
scas
movsl
in
xor
cld
cs
lret
add
dec
jg
repnz
or
movsb
xchg
dec
xchg
fcmovbe
jnp
fs
call
hlt
in
pop
clc
mov
lds
xchg
popa
xor
insb
into
jecxz
shl
push
ficoms
incb
dec
xlat
sub
jnp
stos
push
adc
andl
aaa
pop
faddp
mov
jo
shlb
test
sub
jge
inc
gs
cmp
dec
cmp
stc
mov
sarb
or
testb
ret
rorl
fucomp
xchg
xor
test
sbb
in
push
pop
lahf
xchg
and
mov
mov
lock
aas
fists
or
subb
mov
mov
jno
pop
in
cmp
cmpsl
fcoms
ret
sub
xchg
dec
into
cmp
rcrl
dec
aaa
inc
out
jp
out
mov
popa
push
movsl
popf
sub
xor
lcall
mov
dec
pop
aad
out
mov
pop
xor
jmp
push
enter
cmpsb
leave
jmp
dec
jnp
sub
ss
outsb
or
repz
mov
gs
nop
mov
ljmp
js
mov
loop
das
pop
loopne
arpl
dec
adc
out
int3
xor
dec
push
fs
enter
aaa
inc
and
repnz
std
out
jae
sbb
fnstenv
xor
mov
es
cltd
outsb
push
or
xchg
dec
lret
xor
rcr
and
and
mov
leave
jl
insl
sbb
and
jecxz
insl
imul
mov
xchg
into
fmul
sub
ljmp
push
add
cltd
aas
inc
mov
rclb
hlt
adc
pop
cmp
inc
ljmp
pop
xor
sub
in
sti
mov
inc
adc
int
stos
sub
add
dec
jns
and
lods
ret
fmull
out
cwtl
xor
int3
movsb
lret
lahf
jmp
shll
es
mull
ret
xor
shlb
aas
cs
pushf
rorl
mov
pop
sub
mov
fwait
lock
lcall
in
dec
mov
out
lea
cmp
repnz
push
mov
push
pop
xchg
aaa
pop
ret
in
dec
notl
bound
xchg
loope
andb
int
sbb
lcall
mov
js
ljmp
push
adc
xor
stc
add
push
or
ficoms
cmp
iret
adc
je
add
push
cli
sbb
cmovno
repz
mov
adc
xor
stos
lret
xchg
fiadds
jecxz
pop
jno
mov
scas
mov
mov
shrb
rorl
pop
adc
loopne
mov
in
adc
sbb
xchg
lahf
stos
std
fcoms
lods
popf
jmp
movsb
xchg
in
jnp
cltd
sbb
cmp
je
dec
pop
push
cmp
ret
jnp
popa
std
je
rcr
xor
jbe
pop
mov
mov
out
cltd
cmp
xchg
adc
in
arpl
push
sbb
sub
cmpsl
pop
fimull
hlt
sbb
repnz
lock
jmp
fistl
dec
hlt
or
nop
icebp
shlb
and
js
pop
xlat
call
pushf
pop
out
jle
xor
xchg
ffree
outsl
lea
sub
sti
test
aam
scas
sub
lea
xor
fs
cmpsl
add
loope
fstpt
aam
pop
fdivs
push
xor
out
xchg
cld
sub
mov
ja
dec
push
into
cmp
sbb
mov
scas
mov
mov
repnz
nop
inc
scas
bound
mov
mov
pshufw
bnd
sbb
sarb
hlt
movsb
or
clc
arpl
clc
sbb
insl
mov
and
dec
or
leave
jb
inc
mov
arpl
outsb
fistl
dec
out
add
out
mov
inc
xor
mov
add
ja
add
dec
hlt
inc
cs
imul
icebp
jg
cld
inc
hlt
mov
push
into
push
jg
sbbl
dec
cmpsb
incb
outsl
xchg
and
cmp
shrb
push
bound
xchg
repnz
or
push
jmp
or
jns
mov
push
ficoms
xchg
mov
sub
or
push
fadds
lret
scas
sbb
mov
pop
fisttps
push
int3
mov
mov
outsl
or
xchg
jle
pop
or
arpl
cs
sub
sub
push
les
xor
ss
sbb
mov
adc
pop
outsb
or
jmp
popa
outsl
lcall
jne
out
adc
xchg
ret
mov
in
in
popa
repnz
aaa
out
push
int3
push
jo
push
mov
dec
xchg
out
test
sbb
cmc
xor
icebp
lcall
mov
jbe
je
out
pushf
ret
ds
je
scas
add
sbb
xor
mov
jae
lods
inc
jno
xchg
inc
lret
sbb
jl
inc
mov
inc
cwtl
and
je
xor
mov
aas
mov
xchg
insb
lods
jnp
push
jns
int
shr
lods
dec
inc
and
cmc
lods
rclb
adc
jmp
stc
jmp
or
fcmovbe
mov
jg
aam
xorb
mov
sbb
adc
aad
sub
popf
jno
testb
icebp
adc
movsl
sub
push
pop
jno
shrl
mov
cs
hlt
jno
mov
dec
xor
pop
out
pop
ljmp
insb
add
inc
mov
or
and
mov
push
mov
adc
movsb
test
jnp
jb
mov
cltd
push
popf
pop
aam
cmp
test
loopne
ja
in
mov
rorl
xchg
push
hlt
movsb
xchg
mov
mov
pop
imul
jae
inc
sbb
pop
lock
bound
dec
sbb
push
loope
arpl
mov
sub
xchg
lret
adc
mov
fstl
pop
dec
pushf
lods
jb
push
inc
inc
cmp
or
xchg
sub
mov
nop
lea
test
aam
popa
push
aad
ja
mulps
stos
cmc
das
pop
data16
adc
adc
push
sbb
pop
stc
and
mov
push
subb
loopne
fnsave
in
mov
or
dec
pusha
inc
imul
pop
or
inc
call
and
sub
call
inc
ret
cmpb
sub
xor
mov
hlt
sbb
and
sub
mov
and
inc
aad
in
dec
in
fistl
xchg
inc
inc
shlb
cmp
mov
jno
dec
inc
sub
das
inc
sar
mov
stos
je
mov
outsb
or
aas
or
pop
mov
les
mov
mov
iret
lds
lret
in
and
outsl
shlb
out
dec
out
bound
sbb
mov
testl
addr16
jecxz
xchg
in
cmpsl
jo
in
les
dec
push
stos
fcoms
dec
ret
loopne
inc
out
mov
gs
and
fsts
pop
js
push
orb
cltd
xor
xchg
int
xchg
add
cltd
sub
mov
xchg
iret
push
push
xchg
movsb
movsb
test
xchg
xor
cmovle
xor
arpl
hlt
xchg
es
inc
push
mov
call
cmp
nop
mov
and
mov
inc
popw
testb
pop
lret
insw
dec
push
in
jg
mov
dec
int3
dec
sarl
sub
and
les
aas
das
lret
xor
lret
mov
aas
ja
sub
pop
push
jns
out
push
cli
mov
dec
scas
fisttpl
pop
mov
sub
mov
dec
xchg
cmp
or
mov
ret
rcl
fisttpll
hlt
mov
mov
pop
and
fadd
jmp
movzbl
cmpsb
jmp
xor
aas
adc
gs
push
aam
xchg
mov
mov
scas
or
mov
adc
orl
mov
mov
mov
js
icebp
fisttps
clc
add
mov
pusha
or
lock
js
lea
lea
sbb
mov
fdivrl
cld
lret
test
xor
lret
dec
or
xor
add
sbb
test
sbb
jle
push
mov
daa
inc
sub
enter
call
push
mov
ja
dec
mov
lahf
loope
rorb
pop
mov
into
inc
push
outsl
outsl
aad
dec
mov
mov
loopne
stos
pop
pop
mov
and
lahf
movsl
insb
gs
jne
add
ret
or
adc
inc
mov
mov
jo
push
out
xor
aad
push
mov
inc
sbb
jmp
enter
js
lods
cmpsl
xchg
outsb
mov
mov
sbbb
push
mov
xchg
push
xchg
les
push
sbb
ret
inc
inc
call
mov
mov
sti
push
lret
mov
nop
cltd
stos
ret
mov
addb
xor
mov
mov
int
inc
scas
mov
insl
in
stc
pop
pop
mov
leave
jbe
dec
gs
xor
xor
xor
push
popa
inc
call
cmpsb
aaa
roll
xor
pop
cmp
sub
popf
icebp
jp
dec
adc
mov
aad
dec
decl
xor
or
js
sub
inc
and
pop
inc
data16
jae
lahf
in
scas
std
jmp
mov
subb
push
fs
int
dec
mov
lock
sahf
call
sub
push
decl
inc
lret
and
mov
pop
out
pop
pop
cmc
cmpsb
jmp
loop
rclb
aam
insb
cmp
out
sbb
in
jne
fs
lock
adc
movsb
sahf
dec
sahf
cs
jecxz
cs
push
xchg
dec
cmpsl
aad
scas
mov
adc
clc
rorl
shlb
xchg
sub
add
movsb
ds
sub
lds
mov
insl
popf
sub
xchg
and
es
aam
pop
mov
or
or
pop
push
mov
and
lea
gs
jno
jo
test
mov
push
jb
sahf
push
push
pop
lods
push
mov
rorb
sbb
test
pop
lds
xchg
inc
leave
pop
or
cmc
hlt
xchg
test
pop
sbb
daa
dec
insl
fs
pop
mov
out
jne
mov
xchg
in
data16
pop
xchg
jb,pt
add
cmp
xor
ss
inc
push
inc
adcb
std
repz
cmpsl
lret
popf
sbb
cmpsb
cmp
pop
mov
mov
movsb
inc
incl
rorl
imul
lds
push
lods
test
jge
mov
add
ret
les
out
test
or
inc
and
aad
mov
imul
adc
mov
jnp
mov
add
push
pop
lret
push
inc
mov
lahf
inc
inc
pop
cmp
std
mov
aad
xor
clc
push
or
mov
out
cmp
iret
xchg
adcl
lock
movsl
pcmpeqb
push
cmp
in
mov
sbb
repnz
in
call
adc
mov
out
imul
loopne
jecxz
jbe
push
cmpsl
xchg
pop
cltd
push
cmovnp
orl
jle
jmp
push
mov
out
pop
ds
insb
adc
popl
pop
mov
push
and
and
stc
call
shlb
stos
xchg
cmp
scas
addr16
or
cltd
outsb
dec
sbb
shrl
jmp
hlt
cwtl
pop
cmp
clc
mov
mov
icebp
pop
leave
dec
bound
mov
and
cmp
sub
roll
outsb
leave
jns
pop
lea
push
arpl
dec
test
add
sub
xor
sbb
jmp
popa
ret
lret
sbb
cmpsl
in
outsb
scas
arpl
cmp
jge
cmp
cs
outsl
xor
lahf
pop
icebp
testb
lahf
gs
aaa
cmpsb
cmp
cmpsb
xor
pop
les
jns
jo
cmpsb
xchg
insl
notb
icebp
sahf
sub
mov
push
pshufw
bound
sbb
sbb
sbbb
out
repnz
mov
pop
in
xchg
sbb
xor
and
push
xor
test
enter
xchg
sbb
clc
add
fs
icebp
test
lahf
push
sbb
or
bound
jl
or
cmp
rcr
subb
jmp
fwait
dec
loopne
inc
sub
or
push
mov
rolb
fildl
popf
mov
out
outsl
outsl
std
adc
test
push
jne
xchg
sti
mov
xchg
cs
sbb
fsubl
aaa
movb
push
pop
push
push
rcll
add
imul
call
out
jne
jecxz
push
roll
fidivl
lods
cmc
out
or
jge
bsr
sbb
out
cmp
cmpsb
lock
mov
xchg
push
sub
add
lcall
cli
pop
lock
nop
sub
in
jg
dec
insb
aad
cltd
inc
inc
cmp
pop
push
sti
loopne
std
pminsw
sbbl
jnp
ret
mov
push
add
push
or
movsl
jg
mov
adc
std
sbb
popf
repnz
push
mov
lret
xchg
enter
sti
leave
cltd
mov
mov
sti
popf
popa
icebp
mov
jmp
in
xchg
stos
inc
dec
dec
test
popf
insb
xor
out
xor
insl
sub
mov
inc
and
add
je
ret
fcmovnu
popf
insl
shrb
push
aaa
lods
mov
or
mov
sub
push
sahf
int
sarl
mov
stos
sbb
sbb
xor
mov
xor
sbb
std
xor
sub
jbe
fidivl
bound
mov
add
inc
adc
push
aam
or
dec
push
sbb
dec
cltd
inc
popf
jbe
inc
push
fldenv
mov
xchg
mov
and
sbb
inc
repz
int
sti
and
adc
sbb
sub
pop
mov
mov
fmull
push
cwtl
int
pop
mov
popa
sub
inc
push
fwait
jae
js
shrb
cli
sti
loop
sbbl
test
mov
imul
sub
lock
shll
sbb
scas
adc
adc
push
nop
aas
pushf
push
imul
addb
mov
int
pusha
repnz
stc
push
mov
xor
fsubrl
in
cmpl
dec
jp
mov
push
xchg
push
sbb
lret
ljmp
rcrl
adc
call
mov
add
adc
fcoms
inc
or
xor
pop
jbe
sbb
dec
in
hlt
data16
and
inc
test
pop
jo
jb
push
mov
push
mov
mov
scas
xchg
push
sub
mov
cmp
bnd
in
add
push
in
lret
es
push
adc
dec
lret
pop
dec
scas
loope
mov
cmpsl
cwtl
xlat
inc
iret
add
mov
orb
add
mov
xor
movsb
inc
out
cmc
inc
sub
or
and
sub
lret
push
fwait
adc
pop
scas
jle
ja
xchg
in
fdivrl
cs
pop
pop
cmp
data16
sbb
pop
or
jns
cmpsl
test
cmpl
mov
jmp
add
imul
sub
es
aas
xchg
mov
test
dec
iret
rolb
fucomp
repnz
add
inc
xchg
ret
repnz
push
xor
inc
xor
loope
lds
insb
push
jecxz
push
xchg
xchg
fstp
pop
jmp
and
out
jb
or
loope
push
flds
push
xchg
ja
call
push
ja
ja
push
imul
sub
jne
ss
movsl
adc
imulb
mov
insl
in
dec
cmp
jl
push
pop
stc
pop
in
clc
fbstp
jb
or
addl
lds
xchg
lcall
or
cmp
jp
ja
mov
enter
cmp
jge
lea
xor
test
jno
inc
inc
stos
in
arpl
mov
cmpsl
mov
shrl
dec
pop
fidivl
int
fdivs
mov
sbbl
push
pop
rclb
out
orb
adc
repnz
xchg
mov
inc
and
inc
inc
push
into
mov
popf
cmp
fldl
fidivrs
add
std
filds
and
dec
lahf
scas
iret
jl
fldt
lret
push
scas
jbe
xchg
test
mov
push
mov
sbb
pop
push
test
add
xor
mov
call
and
ret
and
ljmp
sub
sbb
adc
test
repz
in
scas
push
lods
jne
aas
pusha
testl
sbb
cld
push
push
mov
mov
xor
dec
in
cmpsl
cmp
inc
mov
sub
pop
xor
fdivp
in
inc
sti
jne
mov
sahf
movsb
and
xchg
pop
stc
mov
jle
pop
pop
jge
out
push
or
xchg
mov
shrb
mov
xchg
arpl
sbb
out
insl
cvtdq2ps
jmp
push
scas
ds
cli
mov
aad
sbb
sbb
cmpsb
dec
pop
push
pmuludq
lods
aam
js
stc
jle
int3
cmp
ds
je
scas
aad
lret
cmp
inc
jae
push
add
xchg
call
stos
rcrl
jns
lock
icebp
mov
mov
push
rorb
cmp
hlt
xchg
jp
loopne
sbb
push
outsl
ret
cmp
into
xor
add
je
sti
xchg
stc
lcall
in
fimuls
lods
xor
call
std
or
pop
stos
lods
or
xchg
stos
push
divl
dec
adcl
sbb
aaa
inc
pushf
bound
push
cs
xchg
add
mov
adc
fcomps
rcr
shrb
mov
cld
fildl
or
xchg
aam
mov
ja
jmp
and
aas
xor
dec
xchg
repz
pop
pop
add
push
clc
jbe
xchg
nop
sbb
and
pop
mov
imul
testb
jle
popf
dec
ret
add
xchg
dec
and
and
mov
jp
jno
repz
cmpsb
ds
xchg
movsb
mov
xor
dec
cwtl
jne
pop
add
ret
iret
jo
leave
jl
es
sbb
aad
pop
pushf
jbe
inc
dec
mov
xor
shr
hlt
std
lcall
ds
jb
adc
pop
sarb
mov
das
shl
les
adc
popa
mov
sahf
dec
mov
add
xor
mov
clc
or
jl
test
cmp
cmc
pop
pop
repnz
aad
loope
add
imul
push
imul
mov
into
mov
xor
push
dec
stos
cmc
lcall
outsl
pop
ljmp
mov
mov
cs
or
lret
popa
lret
insl
sahf
stc
cwtl
xor
pusha
mov
lods
mov
pop
sarb
out
ss
aam
shlb
xor
mov
sub
loop
xor
sbb
jge
jbe
lods
call
or
add
mov
pop
pop
push
jbe
jo
fwait
jnp
sbb
dec
sub
xchg
cli
push
iret
pop
sub
inc
add
lret
push
andb
fdiv
call
dec
repnz
mov
sub
xchg
repz
inc
xor
mov
mov
xlat
repz
inc
jg
lods
cld
sarb
ficoms
pushf
cld
lods
ret
jge
out
mov
ficompl
mov
push
xchg
iret
adc
add
sub
sarl
adc
xchg
sub
or
movsl
cmp
std
fwait
sub
out
mov
xor
mov
jo
nop
cmp
mov
or
sarb
jmp
adc
sti
lock
popf
hlt
dec
test
fbstp
or
mov
xchg
adc
test
adc
pop
jns
jmp
in
push
insw
fwait
mov
cmpsl
mov
stc
fnstcw
mov
jp
add
out
dec
bound
and
fcmovb
inc
jmp
subb
cmp
in
push
dec
push
dec
sbbb
mov
pop
pop
popf
pop
xchg
sti
push
xor
sbb
mov
inc
popa
mov
cmp
in
stos
imul
and
sub
dec
adc
inc
pop
push
fnclex
dec
cltd
cmpl
jp
lcall
in
movsb
mov
pop
add
rcrb
jns
add
xor
or
pop
lods
imul
add
pusha
or
cmp
das
and
inc
adc
movsl
int3
inc
mov
dec
gs
mov
lods
adc
orb
dec
inc
add
aaa
jno
fadds
pop
push
mov
int
addl
daa
inc
test
cmpsl
or
push
outsl
xchg
jl
dec
addr16
fwait
sub
cmp
cwtl
mov
data16
sbb
pop
lret
stc
mov
lods
xor
imulb
dec
mov
sbb
or
cmp
inc
mov
nop
xlat
push
jbe
pop
add
shl
pop
pushf
xchg
mov
into
mov
rcl
hlt
mov
fldt
repnz
lahf
xchg
jbe
cmp
xchg
inc
and
sub
mov
icebp
js
and
lahf
xchg
das
sub
xor
cmp
scas
lret
stc
or
mov
ret
cmp
cmp
gs
adc
cmp
in
lcall
out
inc
inc
mov
in
jns
cwtd
and
jmp
pop
mov
dec
jno
xchg
cltd
pop
cmc
push
xchg
pusha
mov
rclb
lretw
xlat
lock
inc
clc
mov
pop
dec
arpl
push
rcrb
sub
adc
cmp
jbe
repnz
add
add
push
or
xchg
push
mov
jnp
mov
and
dec
jle
xchg
insb
fxch
mov
and
xchg
fidivl
stc
push
shll
mov
xchg
xor
mov
pop
je
push
fbstp
loop
and
inc
add
mov
clc
mov
imul
cld
into
push
cmpsl
imul
cs
adc
pop
cwtl
inc
xchg
in
or
dec
adc
pop
in
add
mov
mov
stos
xchg
xor
dec
jno
bound
pop
sahf
fnsave
movsb
and
or
sti
cli
xchg
lods
das
inc
mov
imul
adc
psubd
fbld
aam
dec
sbb
std
lds
arpl
mov
dec
outsl
xchg
sahf
dec
and
add
xchg
stos
jno
jo
cltd
scas
xchg
mov
lods
push
jecxz
sub
cld
movsl
mov
inc
pop
imul
mov
sbb
jg
loope
addr16
adc
pop
add
jne
leave
mov
jns
cmc
and
add
and
mov
pop
bound
insl
jno
push
inc
jno
mov
xchg
cmpsl
inc
clc
mov
popf
jmp
fcmovne
ret
mov
js
int
fwait
mov
aaa
cwtl
testb
xor
mov
inc
faddl
jb
push
sub
sbb
cmp
dec
sub
and
lret
test
xchg
das
inc
scas
lods
sub
cmp
js
out
fmuls
push
bound
cmp
sbb
inc
imul
dec
rorb
out
les
in
inc
sbb
dec
shll
and
pop
xchg
lods
xchg
fiadds
cmp
fistpl
bound
inc
clc
insb
mov
aaa
scas
jmp
fstl
ss
jnp
mov
pop
or
pop
mov
out
stc
mov
jnp
out
dec
add
lcall
cmc
idivb
stos
fbstp
jns
push
push
jo
dec
xchg
pop
push
mov
push
out
adcl
out
lods
lret
out
mov
lret
push
jne
popf
cmp
inc
into
add
dec
dec
fwait
mov
sub
addr16
dec
aad
mov
adc
jbe
mov
mov
and
jge
mov
push
into
sub
and
push
cmp
negb
and
lods
outsl
mov
mov
mov
mov
inc
gs
out
int3
lret
lods
in
adcb
subl
cli
test
mov
mov
jecxz
test
lea
loop
pop
mov
fisttpl
mov
test
les
int3
pop
xor
cld
lahf
daa
sub
jp
bound
nop
lds
dec
cmc
mov
repz
adc
push
cmp
cmp
jg
or
jecxz
addr16
and
nop
les
jnp
stc
mov
sar
pusha
and
les
xor
inc
stos
xlat
mov
push
pop
pop
sub
mov
aad
and
or
push
outsb
cltd
fisubs
mov
xor
xchg
mov
adc
xchg
mov
lret
sbb
dec
mov
xchg
int
add
dec
imul
cs
popa
ja
repz
mov
sbb
js
dec
push
sbb
sar
sub
loop
sarl
test
xchg
cld
inc
je
jbe
mov
mov
ret
mov
push
push
sub
lcall
insl
sub
imul
sahf
mov
ja
sub
insb
les
lds
sahf
popa
xorb
push
xchg
dec
roll
test
rorl
jecxz
daa
clc
lcall
jo
dec
scas
or
pop
lret
add
fadds
xchg
xlat
lds
out
out
lahf
xor
sub
mov
bound
xor
fnstenv
js
add
mov
repz
cmpsb
dec
dec
cmp
pusha
in
dec
jno
xchg
mov
mov
dec
jg
cwtl
enter
jns
inc
mov
lods
mov
out
pop
nop
mov
mov
pusha
xchg
imul
aas
data16
or
icebp
push
or
jnp
cmpsb
jmp
pop
inc
mov
sti
sbb
and
mov
imul
loopne
mov
sbbl
stos
push
ret
das
cmp
pop
adc
fdivrs
jg
dec
cmp
fs
mov
sbb
push
sub
out
mov
xor
das
adc
adc
mov
cmp
cmpsb
imul
xlat
je
cmpsl
xchg
lcall
cmpsl
inc
fs
movsl
into
mov
fldenv
icebp
fsubrl
mov
or
cmp
xchg
pop
xor
jns
dec
out
push
out
mov
or
push
out
or
mov
dec
xor
push
sub
je
xchg
cltd
call
stos
mov
mov
sbb
addr16
lds
int
out
fisubs
mov
sub
adc
mov
pop
xchg
cli
ss
xchg
dec
repz
arpl
daa
cmp
add
arpl
lea
dec
pop
adcb
shlb
xchg
sub
push
adc
mov
jo
pop
shlb
fistps
aas
leave
mov
push
es
fisubs
cltd
sub
out
sbb
jno
lock
pop
mov
mov
loop
js
pusha
dec
aad
mov
stos
mov
or
xchg
lods
xor
jl
xor
or
js
mov
inc
xchg
lods
push
fsubrp
mov
add
imul
jmp
jns
insb
out
sahf
add
call
loope
pusha
or
add
in
movsl
mov
sub
cltd
xchg
mov
cli
pop
popa
jmp
lock
jbe
push
pop
movsl
ss
mov
lods
mov
dec
sbb
push
pushf
dec
icebp
or
sub
jmp
adc
enter
dec
and
push
mov
ds
fcompl
popf
sbb
data16
pop
cmp
out
jge
cli
stos
or
test
push
push
jnp
cld
jp
adc
pop
jne
aad
push
in
pop
push
jecxz
dec
sub
dec
sub
mov
ss
ja
in
jg
repnz
dec
ja
call
push
or
mov
pop
insb
leave
test
cmp
lea
mov
xchg
js
mov
popa
push
in
jmp
stc
imul
xchg
aad
sbb
and
push
sub
mov
dec
sarb
pop
pusha
stc
cmp
add
lret
dec
lods
xorl
mov
mov
mov
ss
fmulp
pop
xchg
pop
out
ret
fst
mov
mov
or
movsb
in
push
or
aad
sar
push
aam
sbb
std
adc
cmc
mov
lret
add
and
xchg
out
cltd
sti
cmp
mov
rclb
cmp
cmpsl
inc
fdivrp
and
sub
sbb
arpl
mov
fdivrl
das
dec
cmp
mov
mov
jo
orl
icebp
movsl
arpl
popa
js
mov
mov
std
push
mov
jno
enter
ret
mov
mov
mov
jge
aam
xor
add
push
dec
and
xchg
int
push
mov
mov
aaa
inc
add
cltd
outsb
sbb
mov
mov
xor
sbb
or
sbbb
dec
shl
jp,pt
xor
xchg
loop
loope
cwtl
sbb
xchg
nop
in
mov
mov
pop
inc
pop
adc
push
filds
dec
shlb
dec
lret
mov
pop
repz
sbb
push
push
sti
int
jle
div
fcmovnu
jo
cmp
aas
pop
push
and
mov
push
outsb
mov
std
stos
scas
push
daa
push
xchg
xchg
or
mov
jmp
xchg
jl
sbb
jecxz
aad
insl
icebp
push
hlt
inc
mov
loop
cs
test
sub
test
push
nop
xchg
or
jbe
pop
sbb
arpl
inc
mov
call
adc
mov
or
int3
pushf
mov
push
sub
jnp
int
subl
test
push
ljmp
mov
mov
mov
push
test
cmp
sbb
xchg
inc
mov
pop
xchg
jp
scas
in
xor
insl
inc
dec
or
test
xchg
shll
and
repz
jge
jmp
notl
and
ret
mov
fldenv
pop
xchg
ficoms
rcrl
or
dec
ds
push
iret
scas
pop
adc
xchg
lahf
and
and
clc
jbe
or
mov
je
cmp
cmp
inc
int3
or
sub
stos
in
je
pop
sub
xor
shl
sbb
insb
out
ds
dec
sbbb
jne
lods
pusha
loopne
dec
arpl
addr16
ja
jle
xchg
in
loopne
roll
sub
add
push
pop
enter
fadd
sub
xchg
or
into
jne
dec
and
imul
negb
insl
xor
mov
jb
pop
push
xchg
movsl
jecxz
mov
mov
mov
xchg
mov
mov
add
push
push
scas
rclb
mov
call
and
rclb
jno
xlat
scas
rol
or
cli
dec
aaa
ror
xor
ja
add
repnz
or
scas
setg
mov
fldenv
lret
hlt
cmp
inc
cli
addr16
into
insl
rolb
movsb
out
sub
dec
out
bound
adcb
lret
mov
pop
leave
popf
mov
lahf
mov
hlt
cmp
add
mov
outsl
jg
mov
call
repnz
test
add
jnp
mov
nop
push
fidivrl
add
mov
or
xor
ret
xor
pushf
std
fwait
jne
and
xchg
push
or
mov
or
rorl
ret
mov
sbb
imull
jo
lods
iret
out
jmp
popf
inc
adcb
sub
inc
pusha
push
xor
bound
lahf
popf
mov
insl
xor
push
jmp
data16
mov
dec
into
call
outsl
lret
jl
jo
mov
cltd
and
jno
jns
inc
popf
rolb
cli
xchg
pop
cld
inc
cmp
sub
call
push
es
cltd
out
inc
sub
cmp
sub
pop
cli
mov
adc
jns
adc
popf
inc
jg
stos
mov
inc
in
daa
add
pop
sub
notl
je
mov
jg
pop
idivl
lret
inc
mov
adc
sahf
sbb
push
aas
xchg
addr16
mov
mov
ds
inc
inc
jnp
push
dec
leave
fsubrs
ret
mov
aad
ret
mov
ds
push
cmpsb
cmp
push
xor
add
lds
test
and
xor
popa
test
adc
cli
jbe
push
int
mov
jge
mov
in
adc
inc
fcoml
jp
inc
xchg
popa
jae
pop
pop
fidivl
repz
mov
shlb
inc
mov
std
lock
pusha
fcoms
ljmp
sub
cmc
in
inc
and
rclb
push
pushf
shl
mov
int
popf
pop
adc
mov
add
inc
int
test
movsb
inc
adc
hlt
jl
lret
mov
xor
mov
out
test
add
mov
mov
das
push
out
xchg
ret
test
inc
shll
gs
mov
sub
inc
sub
mov
mov
cltd
xchg
je
mov
pop
push
inc
mov
gs
jo
inc
fnsave
stc
push
inc
cmc
cmp
ret
or
adc
pop
mov
mov
rcll
rclb
lret
orb
sub
mov
xchg
cltd
loop
daa
pop
xchg
pop
add
mov
push
mov
mov
adc
inc
out
mov
xchg
fadds
shll
push
insl
fcmovb
add
fdivr
lahf
add
dec
jge
shl
outsb
mov
mov
push
iret
mov
push
cmpsb
mov
fxch
inc
jns
or
cmp
xchg
xchg
xchg
es
cmp
xchg
lods
je
leave
and
cmc
cli
cli
jae
fcmovb
in
popa
popa
sub
pop
jns
xor
cmp
dec
mov
das
and
push
pop
cmc
cld
dec
fdiv
jae
xchg
pushf
jmp
push
cs
ljmp
push
pop
lods
mov
pop
cmpsl
sub
js
imul
ss
mov
or
add
mov
inc
outsb
jmp
pop
push
dec
out
movsl
and
dec
rcll
test
pop
jns
cmp
das
ret
dec
cltd
pop
in
out
mov
mov
adc
icebp
shll
push
loopne
popf
jb
xchg
mov
lds
or
mov
fldt
cmp
and
adc
in
test
negb
xor
push
dec
xchg
mov
shl
jge
sbb
and
loope
push
push
movsb
mov
add
aaa
or
in
jmp
imul
mov
mov
pushf
inc
mov
call
push
sbb
call
es
sbb
push
popf
orb
imul
push
mov
add
inc
inc
sbb
mov
xchg
aaa
jg
out
mov
loopne
lock
nop
loopne
add
lahf
outsl
mov
in
mov
rolb
repnz
mov
pop
add
cmpsb
shrl
inc
fiaddl
push
push
insl
push
fs
mov
or
sti
out
add
in
out
neg
push
gs
lea
xchg
mov
repnz
sbb
jb
rcrl
dec
leave
outsb
cmpsl
or
fisttpl
cmc
jae
push
gs
mov
js
mov
loop
dec
cwtl
cmp
lret
add
aad
sbb
xchg
inc
adc
outsb
xor
adc
fnstcw
sysret
mov
iret
mov
outsb
jecxz
sub
mov
ficoms
mov
ret
xchg
das
add
adc
or
adc
mov
inc
adc
or
or
in
es
mov
sbb
push
loopne
fdivr
mov
fsubrl
add
add
push
nop
test
out
jne
fstl
jmp
sub
test
jge
lods
fistpl
iret
jl
cmp
addr16
fsts
inc
or
inc
xor
stos
inc
pop
inc
or
adc
into
push
fs
mov
mov
and
stos
dec
xchg
inc
jecxz
pop
subb
jg
repnz
mov
and
xor
add
mov
lds
arpl
shrl
mov
jge
xchg
mov
add
scas
aam
pop
jg
sbb
xlat
and
push
pop
fiaddl
lret
dec
xor
ja
hlt
rolb
cwtl
cmpsb
mov
imull
jl
test
push
shrb
jle
movsl
fnstcw
outsb
inc
fldt
xlat
sbb
xchg
test
mov
inc
pop
mov
paddsw
mov
add
fcmovu
lret
sbb
cli
testb
adc
ret
or
es
mov
mov
fucompp
out
push
mov
jae
cwtl
rclb
ljmp
xchg
jge
jl
xchg
sbb
mov
sbb
xchg
xor
fstps
rcrb
jo
je
inc
jne
lods
cmpb
iret
and
andb
test
jecxz
add
pop
out
adc
mov
arpl
insb
mov
sbb
ror
push
xchg
push
pop
jg
pop
dec
es
ljmp
ror
xchg
mov
push
push
adc
cmp
xor
push
fisubl
xchg
movsb
or
arpl
scas
mov
jns
cmpsl
push
gs
jae
pushf
lcall
sub
or
pop
or
ds
fiadds
xor
push
push
test
add
shrb
jne
fsubrl
jno
cld
xor
push
sbb
mov
sarb
inc
pop
jns
int3
js
outsb
cld
aas
jecxz
xor
aaa
sub
jne
in
pop
in
loope
xor
movsl
movsb
push
mov
jne
add
mov
pusha
push
inc
mov
clc
fwait
push
data16
rorb
xor
inc
je
xchg
cli
and
adc
inc
xchg
push
push
rorb
movsb
dec
dec
int
push
inc
xchg
outsb
xchg
inc
idivl
xchg
cli
dec
sbb
out
and
jge
jg
jecxz
addr16
js
pop
add
sub
fbld
dec
mov
and
test
cld
mov
push
ja
push
int3
mov
mov
in
out
iret
mov
jb
out
xchg
xlat
call
add
mov
mov
sti
xchg
cwtl
cmpsl
lds
dec
iret
add
push
push
daa
inc
pop
out
jne
add
pusha
push
movsb
xchg
gs
inc
pop
jp
jle
fxch
cltd
mov
test
mov
enter
sub
fisubrl
or
push
stos
cmp
fidivrs
dec
rolb
aaa
or
jo
or
mov
push
xchg
cmp
jo
adcl
pop
pop
cmp
sub
xchg
aas
scas
adc
mov
fs
mov
push
es
or
int3
pushf
jns
xchg
inc
add
pop
sbb
lret
iret
sub
out
xchg
mov
in
cltd
and
loopne
aam
xchg
add
shll
iret
xchg
jne
inc
call
xor
icebp
dec
mov
ljmp
push
js
clc
shrb
push
inc
loopne
arpl
sar
push
mov
je
sbb
pushf
xor
mov
mov
inc
push
and
mov
dec
rorl
out
cmp
pop
mov
iret
clc
andb
movsl
cmp
int
inc
pop
cmp
mov
add
xchg
out
daa
pusha
pop
xchg
mov
push
test
cmp
adcb
fdivrl
mov
cli
or
lahf
mov
inc
out
mov
pop
lret
daa
insb
cmp
mov
xchg
in
pop
sbb
jb
jne
mov
jmp
and
rolb
xor
mov
outsb
out
ret
jp
aam
leave
or
push
clc
xchg
cmp
jns
psllw
mov
fyl2x
sahf
lahf
sub
pop
iret
mov
or
mov
fistl
cmp
push
in
insl
stc
mov
mov
in
mov
jne
iret
outsl
pusha
pop
addr16
ret
jmp
push
xor
or
mov
cmp
cmpsl
pop
into
test
addr16
mov
mov
lcall
popf
mov
xchg
stos
inc
dec
push
mov
fwait
lret
neg
xchg
sub
inc
rcrb
jne
fiadds
sub
outsl
imul
dec
rcr
xor
addl
mov
push
jmp
cmp
push
adc
lods
lret
adc
or
into
or
imul
jns
xchg
sahf
xor
pushf
cltd
ret
enter
cmc
movsb
adc
adc
mov
pop
mov
mov
sbbl
xor
mov
dec
out
out
insb
mov
xchg
mov
sub
xchg
cwtl
xlat
inc
stos
in
sbb
pop
and
jge
dec
popf
mov
fs
mov
mov
and
mov
dec
cmpsl
dec
cwtl
push
and
mov
cmpsl
adc
xchg
add
pop
negl
fwait
daa
cwtl
repz
lret
and
mov
ret
cld
mov
pop
movl
push
sub
sbb
mov
mov
imul
test
int3
mov
iret
enter
xor
mov
jb
mov
pop
inc
mov
sbb
mov
aad
imul
je
movsl
lcall
and
fmuls
or
sarb
cmp
xor
push
mov
xor
add
out
xor
cmp
shl
jmp
je
mov
sub
sub
into
in
out
ljmp
lods
xchg
mov
mov
xchg
adc
or
cmpsl
and
shlb
pop
mov
sub
xchg
xor
daa
pop
popa
jp
icebp
rcll
mov
fldcw
and
dec
sbb
inc
enter
sub
rcr
loop
xor
lcall
loopne
std
shr
lods
xor
xchg
hlt
sbb
inc
or
in
ffree
and
imul
xchg
stos
lds
xchg
jbe
mov
into
mov
loope
push
sbb
xchg
add
dec
cmc
and
shl
adc
loope
and
or
ficomps
mov
xchg
lahf
sbb
mov
scas
push
push
and
insl
mov
fwait
push
pop
add
sti
into
loope
xor
stc
or
sti
ret
jge
lret
sbb
add
fsubl
call
jmp
inc
xor
dec
xchg
mov
jbe
or
sbb
mov
inc
lret
dec
stos
mov
add
push
cltd
test
mov
or
mov
pop
cmp
aas
loope
pop
dec
dec
xchg
inc
mov
jmp
dec
add
xchg
xor
scas
lahf
inc
js
xor
mov
sbb
or
xor
movsb
lret
into
add
jnp
cmp
add
sbb
into
enter
iret
xor
sahf
push
push
inc
cmp
xchg
sbb
pop
les
xadd
inc
idiv
inc
in
leave
or
stos
adc
adc
dec
xor
in
jbe
mov
and
dec
adc
dec
dec
pop
icebp
mov
dec
jmp
clc
inc
inc
sahf
popa
and
std
int
je
push
test
cld
and
xchg
je
sub
loop
mov
movsl
in
in
hlt
mov
test
dec
aaa
addr16
dec
movlhps
lock
xorl
jns
jmp
fnstenv
inc
adc
out
push
shll
mov
nop
out
lahf
test
jnp
inc
out
and
cmc
icebp
out
xor
enter
aam
push
xor
lods
sub
mov
popf
add
cmp
pushf
add
push
and
lcall
leave
xor
ja
cmovb
jo
outsl
in
jecxz
pop
shlb
std
pushf
inc
mov
mov
inc
lds
adc
cmpsl
sbb
sbb
add
add
jnp
imul
xchg
es
and
ljmp
pusha
loopne
sbb
arpl
sbb
push
test
and
das
jb
xchg
bnd
out
out
adc
push
aad
pusha
lret
dec
cltd
mov
adc
sub
insb
add
std
push
out
jne
in
stc
pop
test
mov
push
push
inc
insl
jb
mov
jl
popf
inc
pop
dec
xor
jnp
fcoms
outsl
mov
pop
sbb
adc
addr16
mov
jg
xchg
popf
xchg
push
adc
outsl
mov
pop
adc
insb
test
push
insb
jae
addb
sub
jo
jecxz
push
ja
sub
inc
ljmp
inc
cmpl
push
stos
xor
jmp
push
xchg
push
outsb
in
push
sbb
xlat
push
pop
mov
pop
mov
sub
add
jae
gs
lds
pop
or
and
aaa
aaa
adc
leave
ret
xchg
push
dec
imul
insl
push
mov
pusha
push
push
insl
push
pop
adc
call
cmp
cli
bound
dec
lcall
stos
xchg
cwtl
sub
divl
inc
lahf
and
sbb
sub
cmp
jbe
pop
int
mov
loop
movsb
sbb
pop
sbb
jecxz
scas
aas
movsb
xchg
fcoms
jae
popf
aam
lods
les
std
add
fdivs
dec
aam
mov
mov
or
dec
popa
or
sub
mov
pusha
iret
jg
sbb
mov
das
dec
adc
fsubr
sub
sub
jae
inc
fidivs
or
xor
cmpsb
jbe
mov
or
jmp
pop
pop
jno
test
mov
pop
stc
imul
popf
in
xchg
push
pop
xchg
mov
mov
ljmp
xchg
pop
addr16
scas
jg
xchg
loop
out
xchg
jno
cltd
mov
repz
fimull
adc
scas
push
push
inc
lods
mov
pop
inc
cmp
dec
and
lret
out
leave
cs
aad
and
sub
test
xlat
mov
mov
sbb
loope
gs
inc
cmp
outsb
cmp
test
push
arpl
pop
mov
adc
fucomp
es
jl
cmpsl
mov
pop
or
mov
xchg
xchg
icebp
inc
xchg
push
push
or
daa
test
lds
icebp
movsb
or
xchg
outsb
sbb
or
cmpsl
mov
xchg
jp
xchg
imul
in
outsb
push
mov
mov
xor
fimull
cmp
in
cltd
jg
pop
movsl
sbb
pop
popa
enter
inc
add
xchg
stos
fistpll
or
xchg
test
pop
test
mov
xor
push
test
fidivl
xchg
repz
scas
popa
jbe
dec
xorb
ret
mov
sub
nop
inc
rcr
add
mov
push
lea
xchg
stos
xchg
fimuls
adc
test
add
hlt
cmpsl
mov
outsl
imul
gs
sbb
sbb
sar
rol
aad
int3
in
inc
inc
sbb
enter
int3
mov
xchg
jns
sub
inc
add
addr16
insl
dec
scas
dec
xchg
pop
je
cmp
jecxz
pushf
aaa
sbb
addb
adc
outsl
mov
fiaddl
test
imul
test
andl
jg
outsl
pop
mov
sbb
es
aam
mov
add
sub
cmp
or
inc
mov
push
sarb
lods
inc
jge
push
mov
out
imul
jp
lahf
and
scas
mov
imul
pop
mov
repnz
fxch
cli
in
mov
push
ss
mov
add
and
xchg
lods
and
add
cmp
lcall
pop
xchg
loope
or
aam
mov
xor
ss
mov
daa
mov
movsb
in
cmp
test
dec
lds
ret
inc
ljmp
adc
adc
frstor
push
mov
sub
lea
xor
pop
lahf
mov
adc
icebp
push
outsl
int3
cmp
mov
pop
fcomip
shll
sahf
mov
push
mov
mov
fsts
adc
push
or
push
mov
sub
dec
decl
and
cmp
sbb
scas
stos
adc
arpl
imul
popa
adc
or
dec
mov
ljmp
scas
and
mov
iret
add
rorb
mov
insb
imul
into
mov
pop
adc
jnp
dec
or
mov
insl
sahf
outsb
pushf
xor
hlt
popf
xchg
push
in
jne
jo
jo
fsts
push
xchg
adcl
push
pushf
bound
movsb
cwtl
in
dec
jnp
out
dec
fisttpll
mov
std
jge
adc
mov
jne
out
imul
mov
push
lahf
mov
int
pop
popa
aam
fsubrl
stos
xor
sbb
xor
sbb
xchg
addr16
scas
inc
mov
rol
xchg
stos
xor
xchg
adc
xchg
jp
daa
hlt
pop
out
aas
jge
sbb
movsb
cmpsl
pop
jge
notl
inc
mov
popf
fldl
cmp
mov
add
roll
repz
mov
sbb
lods
push
mov
mov
iret
popf
sub
pusha
sub
addr16
sub
add
dec
dec
push
ficomps
test
pop
adc
pop
jecxz
or
repnz
xchg
mov
loope
jbe
jne
shr
sub
lret
push
es
repz
pop
and
shll
dec
cmp
cld
push
jle
mov
outsl
jae
nop
sbb
mov
xor
pop
cld
imul
push
jb
gs
fldz
pusha
insl
fwait
stc
mov
std
ljmp
cmpsl
outsl
sub
dec
movsb
adc
add
jmp
adc
pop
push
outsb
xor
loopne
and
jbe
add
rclb
or
mov
gs
jne
pop
pop
xor
fistps
iret
fcmovb
cld
in
aad
mov
gs
cmp
pop
or
sahf
in
mov
fs
aam
add
mov
mov
dec
out
stos
xor
mov
add
imul
out
scas
mov
sbb
loop
push
mov
fsubrp
rcrb
jecxz
inc
in
and
lock
roll
loopne
cld
mov
jb
test
loope
fldl
andl
push
test
sti
pop
push
cmpsb
fwait
push
jno
aam
js
or
inc
xchg
adc
test
loope
push
es
adc
sub
mov
fimuls
cmp
jno
divb
out
cmpl
scas
push
xchg
cld
xor
xlat
and
sub
mov
sahf
mov
add
xrelease
or
std
sub
mov
pop
inc
je
mov
pop
dec
jnp
xor
dec
scas
cs
lods
cmpsb
imul
adc
enter
out
scas
fidivrs
mov
or
mov
mov
insb
xchg
jmp
xor
je
stc
imul
sti
pop
pop
push
jle
in
dec
lods
call
sti
xchg
andb
mov
ds
loope
pop
mov
leave
add
adc
dec
jns
jge
cmp
push
pop
imul
sub
mov
ds
add
push
fimull
xchg
mov
call
adc
fxch
sahf
push
ljmp
mov
mov
adc
mov
ret
mov
mov
pop
outsl
pop
shlb
sub
popa
adc
ss
cmp
inc
lret
mulb
movsb
sbb
fldl
test
xchg
das
push
mov
leave
fldcw
mov
pop
mov
cmpsb
out
adc
icebp
fcoms
stc
test
jg
xchg
pusha
ja
imul
in
shlb
stc
insl
cmp
enter
loop
mov
mov
mov
loop
mov
add
aad
pop
xchg
imul
push
scas
push
xchg
imul
ss
cld
or
out
loope
or
xchg
xchg
js
mov
mov
fdivl
lods
ret
cmpsb
xlat
and
xchg
push
pop
push
cmp
pop
add
jp
test
pop
sub
scas
add
xchg
lret
or
xchg
out
pop
xchg
pop
add
lods
and
push
out
push
jmp
dec
mov
xchg
sbbb
push
mov
pop
mov
sbb
adc
sbb
dec
push
test
andl
inc
xchg
fs
int
cmp
mov
push
adc
jl
cs
in
adc
sub
mov
pop
sbb
cli
jne
popa
xchg
or
push
inc
mov
inc
mov
stos
out
pushl
push
adc
sub
and
aaa
push
mov
adc
fdivs
jl
cmp
inc
aam
cmp
jno
cmp
adc
popf
cmp
pushf
insl
repz
pop
imul
xor
sub
xor
jge
ficomps
push
inc
repnz
lret
jmp
add
pop
xchg
imul
stc
rcrb
jg
push
add
sbbl
addb
enter
sahf
and
jno
mulb
and
mov
lret
ja
hlt
or
lret
nop
nop
add
int
sahf
and
int
xchg
loopne
cmp
xchg
adc
aaa
dec
lock
mov
xchg
inc
addr16
cmp
pop
imul
cmp
sbb
mov
icebp
pop
adc
test
fistpl
fsubs
mov
test
mov
adc
ficomps
mov
iret
sub
lcall
add
mov
xchg
push
in
jbe
xorl
into
sub
jo
popl
pop
mov
sbb
ss
or
cmpsl
fldenv
jecxz
fsubs
ljmp
out
push
jmp
dec
out
sub
xchg
loope
pop
test
inc
divb
mov
idivb
mov
popf
xor
cmp
xchg
fisubl
cmp
bound
lock
outsl
sbb
iret
orl
stc
rep
or
push
mov
movsb
popf
cltd
faddl
mov
and
inc
les
push
lret
ret
mov
jnp
movsl
or
inc
popa
ret
xchg
mov
jge
xchg
push
outsl
loop
std
scas
or
out
mov
sbb
sbb
gs
out
push
ja
test
and
int3
gs
xor
cltd
mov
fstps
dec
ja
test
stos
mov
arpl
and
mov
lods
cmp
jb
filds
call
mov
aas
add
ret
dec
adc
sub
inc
mov
push
mov
inc
cs
inc
lea
mov
xchg
or
lds
push
sbb
xor
push
mov
mov
jmp
cmp
xchg
fisubs
repz
mov
imul
outsb
adc
das
mov
mov
fdiv
jbe
mov
add
daa
icebp
movsl
inc
repnz
jp
mov
mov
mov
fwait
lock
jg
push
pop
lds
xlat
mov
sbb
psubsw
xchg
mov
fimull
rclb
mov
xchg
mov
jg
lods
outsb
push
sub
xchg
icebp
jb
dec
outsb
loop
mov
mov
xchg
std
and
push
es
sub
mov
aam
sbb
pop
pop
lret
fsub
pushf
insb
cmp
test
pop
mov
jne
lods
pop
pop
test
std
push
dec
add
fs
xlat
shlb
jle
xlat
pushf
in
sbb
xor
sarl
movsl
push
xor
aad
bound
repz
call
es
mov
mov
fsubs
outsl
movsl
pushf
push
movsl
jo
lret
movsb
mov
shll
xchg
push
js
cmp
out
and
mov
or
fistpll
dec
add
pop
xchg
mov
in
sub
pop
lret
leave
add
daa
xorb
mov
adc
push
adc
loop
int
scas
lret
test
dec
jle
les
jnp
or
push
sti
lret
xchg
aas
cmp
mov
dec
pop
fiadds
jo
mov
mov
out
sti
jne
nop
imulb
pushf
stos
jbe
pop
test
stos
mov
movsb
sub
inc
sub
test
call
pushf
jns
cli
in
xchg
jb
mov
mov
inc
add
nop
push
mov
pop
dec
jne
fs
cmp
mov
dec
pushl
and
aas
int
jne
or
cmp
pop
xor
dec
add
and
adc
push
out
adc
dec
dec
stc
jbe
sarl
sbb
or
sti
push
cld
pop
repnz
pop
nop
out
lret
cmpsl
repz
xor
add
cmp
fdivl
ds
and
lahf
sbb
xchg
into
sub
incl
lcall
ljmp
adc
or
jmp
pop
inc
push
sub
call
push
test
aaa
js
pop
jne
xor
mov
nop
daa
xlat
pop
jb
pop
sub
cli
mov
adc
pop
sub
push
jne
dec
or
adc
daa
jp
dec
test
dec
outsl
sub
movsb
int3
loope
insb
test
lcall
popf
aas
loop
xchg
movsb
dec
sbb
pop
or
bound
dec
lock
or
push
cmpsb
and
push
mov
xchg
sbb
sub
test
imul
ret
push
push
inc
sbb
arpl
icebp
add
or
xchg
aas
shll
mov
shlb
sub
ss
mov
fwait
pop
jge
lret
out
push
pop
icebp
divl
pop
mov
out
jp
sub
xchg
mov
lea
cwtl
add
add
push
mov
bound
shl
mov
clc
pop
add
pop
les
in
xor
xor
enter
int3
lahf
pop
mov
or
jl
repnz
sub
ror
xchg
inc
cmp
adc
inc
xchg
mov
sbb
xchg
popa
in
push
lods
pop
fstpl
cmp
inc
scas
clc
xor
imul
int3
outsl
jecxz
movsl
imul
inc
stos
insb
mov
pop
or
xlat
movsb
and
andl
inc
std
add
pop
cmp
sbb
lahf
jno
nop
xor
mov
lahf
xchg
iret
pop
add
fwait
jbe
dec
and
lds
shlb
je
imul
mov
bound
out
mov
cltd
rorb
insb
inc
cmp
adc
push
out
dec
lds
ficompl
add
jg,pn
movnti
les
sbb
ret
add
and
jmp
negl
je
negb
push
ljmp
or
mov
ret
je
cmc
lcall
xchg
clc
pop
aad
jg
iret
popf
mov
les
enter
outsb
in
in
std
popf
mov
push
jbe
aaa
in
mov
out
cwtl
jle
sbbl
cmp
jp
punpckhbw
adc
out
mov
out
filds
pop
xchg
adc
sbb
lahf
jns
insl
into
fs
mov
out
push
mov
lock
sbb
movsl
inc
jnp
daa
subl
pushf
mov
dec
pop
xor
xchg
cwtl
xor
lcall
xor
leave
out
lcall
push
cltd
jmp
jmp
cmc
icebp
push
jp
lcall
in
pushl
shlb
dec
std
cmpsl
mov
test
xchg
sub
add
andl
dec
or
adc
aad
jno
pop
ret
and
sbb
addr16
jl
test
sub
leave
adc
mov
shl
or
mov
sbb
lret
adc
jb
push
lret
jnp
mov
add
iret
xorb
enter
xor
add
inc
int
fildl
arpl
lret
jo
sbb
movsb
out
ds
scas
push
in
out
out
subb
mov
xchg
iret
in
enter
and
mov
lods
and
movsb
push
cmp
xchg
and
leave
and
ror
mov
enter
mov
xchg
mov
xlat
sub
xorl
cmp
mov
in
mov
es
popa
push
repz
stc
adc
jb
outsl
or
jp
sub
popf
in
daa
testl
ror
cmp
repnz
adc
pop
into
not
test
jmp
xor
stos
ret
and
inc
sbb
jp
daa
push
lcall
mov
mov
sub
icebp
mov
xor
gs
aas
xchg
push
lret
cli
jne
sbb
stc
mov
pop
fdivr
and
jbe
pop
aad
push
inc
mov
pop
xchg
mov
sbb
vmwrite
les
fiadds
in
push
iret
mov
mov
fwait
pushf
popa
push
nop
andl
lret
mov
xor
mov
push
xchg
std
test
jle
mov
fcompl
cwtl
mov
sub
call
lods
neg
dec
dec
fwait
adc
call
inc
es
xchg
mov
jle
cmpl
pop
cmp
sbb
and
cmpsl
jne
mov
imul
outsb
test
adc
and
and
push
xchg
add
pop
xchg
es
xchg
aam
aam
inc
lahf
fstps
outsb
dec
sub
jecxz
sti
ret
enter
mov
aam
jae
mov
push
dec
ret
fldcw
aas
cmp
dec
xor
push
cmpsl
movsb
dec
push
test
mov
js
xor
or
leave
imul
jnp
jno
imul
nop
bound
xchg
xchg
ja
xchg
mov
aaa
mov
and
adc
in
jl
mov
shlb
imul
sub
inc
out
mov
call
popa
sbb
out
stos
loopne
inc
insl
mov
sbb
or
or
jbe
pop
out
dec
scas
repnz
and
sbb
jp
and
jo
lods
pop
cmc
sbb
xchg
or
sub
ret
cmp
or
aam
adc
or
pop
sub
mov
mov
adc
iret
lds
test
stos
mov
add
outsb
push
jb
jmp
ljmp
pop
mov
ret
push
sbb
imul
into
xchg
inc
pop
je
in
mov
jp
adc
pop
xchg
insl
sbb
xchg
ja
mov
dec
fidivl
xchg
es
push
pop
xchg
push
popf
imul
mov
xor
outsl
mov
stos
mov
pop
in
xor
dec
jnp
ja
pop
pusha
ljmp
hlt
xchg
xor
and
xchg
js
xor
xchg
lock
pop
push
or
pop
mov
nop
mov
inc
cmp
lods
jne
push
inc
add
fsubs
test
add
mov
dec
or
inc
hlt
outsb
sbb
cmp
xchg
mov
dec
push
lods
jne
jne
sub
stc
jg
inc
leave
fucom
out
lea
in
xor
loope
cmp
cmp
inc
adc
mov
push
fcmovu
push
out
test
xchg
push
add
loopne
shrb
and
jb
adc
mov
inc
into
fcoms
jb
sarl
jbe
dec
xchg
out
push
mov
ret
outsb
outsb
inc
mov
jbe
pop
cwtl
xchg
and
mov
mov
cmp
sbb
stc
addb
test
clc
mov
and
call
sbb
insl
mov
sbb
mov
sarb
mov
cmpsb
pop
leave
shlb
jle
sub
in
and
jg
inc
stos
sbb
sarb
adc
and
sbb
das
out
push
push
loope
pop
fdivp
cmp
sub
jns
mov
mov
jle
xor
and
shlb
stos
dec
inc
xchg
mov
dec
lcall
fmuls
xchg
roll
mov
push
shl
fildl
sbb
and
mov
fldenv
jmp
mov
es
mov
mov
repz
mov
fwait
pop
fwait
shlb
xchg
fwait
mov
loop
push
push
adcb
hlt
je
stos
in
nop
mov
and
xchg
lock
jle
and
mov
es
sbb
das
jae
ljmp
faddp
mov
xchg
mov
dec
das
fs
cli
dec
lods
jmp
in
mov
xchg
ret
hlt
pop
mov
pop
mov
push
adc
test
fcoms
adc
clc
jmp
cmp
mov
movsb
xor
or
pop
das
nop
mov
imul
in
and
out
rclb
stos
mov
imul
enter
out
pop
cmp
mov
cmpsb
pusha
inc
rcr
pop
outsl
imul
jl
sbb
push
push
push
mov
fstpt
lret
pushf
dec
sub
adc
cmp
inc
lods
imul
nop
xchg
jbe
out
not
out
orl
imul
or
jmp
push
mov
push
jg
inc
insl
xlat
hlt
pop
push
loopne
insb
cs
pop
sub
rcrb
cmp
mov
mov
cmpsb
mov
mov
addr16
and
lret
mov
sub
loope
pop
jge
adc
in
lahf
sub
or
addr16
out
or
cltd
in
cmp
jns
scas
adc
mov
push
add
sub
push
pop
test
fs
mov
cmp
sti
add
out
repnz
push
mov
mov
xor
mov
jl
outsb
sbbl
adc
jmp
dec
shrb
lea
pushf
sbbl
push
sbb
jno
ds
push
lahf
pop
aaa
sub
in
fadds
cmp
clc
xchg
icebp
and
mov
mov
stos
aaa
xchg
sbb
inc
dec
mov
daa
mov
sahf
cld
inc
cmpsb
jno
mov
jg
or
out
popf
outsb
or
xlat
mov
repz
shlb
sbb
repnz
push
mov
test
pusha
xchg
push
repnz
addb
jmp
sbb
or
or
mov
inc
insb
mov
js
orb
das
jno
cli
jo
insb
cmp
repz
movsb
leave
mov
in
mov
adc
cmp
mov
jns
repz
shll
into
hlt
xchg
ss
and
jns
push
mov
lahf
mov
orb
and
sbb
lods
scas
ja
inc
out
dec
or
or
or
xchg
add
sahf
pop
aas
mov
jle
jb
insl
lret
or
out
pop
mov
jbe
shlb
shlb
stc
or
add
jns
mov
add
sub
sarb
insl
adc
fsubl
loope
stos
test
pop
shll
lcall
inc
sbb
je
jmp
and
adc
es
clc
sysexit
ret
inc
sti
cmp
xor
cwtl
sub
out
loope
movsb
vpcmpgtd
inc
lds
jmp
jo
push
cld
fimull
loop
mov
jns
jnp
sub
cmp
sub
jl
or
adcb
iret
cli
jle
lcall
imul
jae
out
xchg
out
mov
das
int3
or
test
xlat
mov
gs
pop
mov
in
xchg
inc
xor
jle
xor
insb
pop
jl
stos
or
repz
inc
xor
movsl
andb
mov
outsb
mov
mov
fistps
les
add
add
repnz
dec
std
cmpsb
pop
stc
cs
lret
or
fwait
mov
xlat
push
arpl
test
sub
repz
repnz
in
or
add
add
cmp
sbb
jecxz
cmp
clc
and
and
cmp
jb
jno
cmp
fimull
notl
and
dec
mov
loope
or
sub
jno
int3
inc
jg
ja
in
out
rcr
pop
shll
push
jge
es
mov
loop
fucom
daa
cli
out
mov
xchg
aas
jb
xchg
bound
sbb
cli
xlat
shll
shrl
loop
pop
test
iret
xchg
mov
inc
mov
lods
cmp
data16
bound
lcall
js
adc
mov
sahf
cld
mov
mov
add
roll
mov
ffree
xchg
adc
movsl
jle
dec
mov
adc
ret
outsb
pop
jbe
outsl
scas
into
hlt
inc
and
jmp
xchg
scas
stc
mov
loop
and
out
xchg
fadds
imull
call
xadd
and
lret
sar
pusha
mov
pusha
push
or
xchg
add
cli
xor
icebp
cmpsb
dec
int
mov
sub
in
js
loop
mov
popa
mul
clc
mov
xchg
fsubs
jb
nop
sub
pop
out
or
icebp
push
sbb
addb
and
jge
add
xchg
mov
in
scas
and
stos
xchg
mull
aaa
add
cmc
xor
add
out
pop
rcll
fwait
stc
mov
cmpsb
and
aaa
ret
xchg
popa
pop
pop
fs
test
subb
inc
push
fsubrl
or
jl
add
outsl
sub
pop
mov
gs
bound
cld
inc
inc
mov
xor
cld
push
cmp
and
jge
es
pusha
popf
cli
jns
adc
div
out
push
or
pop
lret
mov
mov
dec
filds
lock
xchg
mov
push
lret
fcomps
mov
dec
sbb
lret
mov
pop
and
inc
jbe
fdivrs
xchg
lock
hlt
adc
pop
loope,pt
xor
dec
pop
sub
dec
push
addr16
int
mov
push
sub
and
out
mov
add
add
add
addb
stos
fs
out
addr16
inc
sub
fxch
loopne
pop
pop
dec
fisttps
mov
cli
std
scas
jp
push
fbld
or
dec
xlat
sets
call
fcoml
sbb
sbb
lret
and
pop
sub
or
fdivrl
movsb
adc
test
pop
add
mov
repnz
popa
ljmp
in
in
mov
rcr
and
xor
ss
scas
outsb
loopne
adc
imul
or
jg
adcl
repz
jns
cld
xchg
fisttpll
aas
sarb
int
fwait
xor
pop
aas
or
outsb
add
or
or
xor
or
push
lahf
mov
adc
mov
mov
addr16
mov
jmp
mov
ret
pop
rcrb
loopne
adcl
push
push
inc
mov
out
vpsubusb
icebp
mov
push
lds
jp
call
dec
xchg
pop
xor
movsl
stc
subl
insb
in
rcl
in
sub
test
dec
mov
cmp
out
xor
mov
inc
pop
ficoms
subps
inc
sub
std
pop
lea
mov
fsts
xorb
jns
rcl
in
outsl
pusha
or
jecxz
sub
repnz
and
mov
pop
std
lods
out
shlb
pop
cli
push
dec
stos
sbb
outsb
std
mov
call
test
xor
repz
mov
aas
cltd
into
hlt
push
dec
test
scas
movsb
cmpsb
cmp
in
aaa
dec
enter
mov
pop
insl
les
nop
out
adcl
js
sub
jno
imul
lods
sub
aas
cmp
insl
in
pop
shlb
sbb
loope
add
sbb
mov
mov
push
stc
enter
fwait
add
outsl
cmpsl
cwtl
sar
jg
popl
ret
sub
out
sarl
jno
mov
fdivrl
sub
imul
mov
pusha
stc
iret
sub
cli
push
les
add
sub
aam
sarb
xchg
pushw
mov
cs
repnz
push
aas
cmp
sub
in
ds
pop
inc
jo
xor
xorb
xor
push
ret
cmp
xchg
adc
dec
hlt
sbb
lock
fsubrl
cmp
mov
sub
push
xchg
ja
cld
adc
fldcw
jne
orb
sti
adc
cltd
mov
lcall
add
clc
xchg
repnz
mov
xchg
stos
insb
pop
or
out
xor
or
fimuls
icebp
push
and
sbbl
js
mov
in
aaa
out
mov
dec
mov
loope
mov
in
dec
jne
sahf
ljmp
add
sahf
fwait
push
jne
mov
and
xchg
rcl
mov
test
divb
int
mov
bound
push
pushf
loopne
fistpl
xlat
pop
dec
rcr
xchg
test
clc
movsb
push
popa
sub
push
in
jle
push
jmp
jnp
lods
jne
int
and
test
xchg
push
push
in
subb
mov
xchg
cmp
iret
jg
adc
scas
fmuls
or
dec
les
lds
repnz
inc
cmpb
data16
pop
sub
mov
pop
dec
fnstsw
sub
arpl
jnp
js
lods
ds
enter
lret
mov
push
jp
inc
inc
xlat
fwait
test
adc
jbe
push
call
fsts
outsl
lret
or
mov
xchg
repnz
jp
xor
mov
xor
mov
popl
ljmp
dec
popa
sub
and
jle
dec
lea
fistpll
rol
ret
and
sub
sahf
icebp
ret
lahf
sbb
dec
jg
mov
mov
push
xor
mov
std
dec
cmp
les
pushf
enter
pop
jmp
and
or
rcll
imul
cmp
sub
int3
dec
int3
pop
dec
sbb
sbb
push
call
push
test
push
dec
cmp
add
imul
jle
xchg
lret
sub
pop
cmp
mov
xchg
inc
push
jno
jno
xchg
pop
sti
and
lock
mov
insl
cs
movsb
push
dec
mov
or
mov
inc
inc
fs
jnp
or
add
ret
dec
sbb
mov
jae
pop
lods
scas
inc
pop
test
add
icebp
mov
sub
sub
xlat
loope
dec
repnz
xchg
stos
mull
adc
adc
gs
adc
jl
inc
and
xor
mov
aam
xchg
mov
cmp
xchg
adc
je
rclb
arpl
sbb
test
xchg
rolb
test
sbb
gs
xchg
add
sbb
test
sub
pop
dec
cld
jecxz
into
test
mov
sti
mov
lahf
fsub
sbb
testl
pushf
mov
mov
xlat
mov
ds
push
add
push
popa
dec
and
sbb
xchg
pop
add
push
out
cmp
clc
movsb
push
add
ficomps
pmaxsw
dec
push
icebp
cltd
jl
aad
pop
jmp
std
adc
mov
popa
mov
cmc
sub
add
stos
movsb
je
push
jns
rclb
sub
inc
dec
mov
add
aad
movb
test
cmp
jle
xchg
popl
mov
movsl
pusha
and
sbb
and
push
out
nop
loope
xor
rcrl
dec
push
pushf
xchg
dec
movsb
fimuls
sub
mov
mov
dec
cmp
adc
ljmp
movsb
add
insl
xor
push
in
insl
int3
xchg
add
lcall
mov
jg
jae
sub
out
add
jl
icebp
and
sti
jmp
add
andl
jb
cmp
cld
push
xor
mov
rol
add
mov
les
pop
sub
outsl
and
pop
stos
add
mov
mov
mov
jns
adc
lea
xor
dec
or
mov
ljmp
fsubrp
mov
sbb
pop
add
jno
fsubr
push
ds
push
or
fsts
dec
scas
jl
sbbl
mov
test
inc
insb
push
pop
das
or
pop
inc
fsubrl
dec
popa
xor
inc
jl
stos
push
pop
sbb
enter
mov
fcmovb
pop
cmc
notl
jo
loop
adc
jns
nop
test
arpl
pop
xorl
sbb
and
add
mov
xchg
jle
jecxz
dec
std
fwait
pop
cmpsl
imul
test
jne
jg
jnp
jmp
push
lret
nop
rcl
aas
bound
add
jns
popf
popa
cwtl
loopne
das
mov
outsb
push
fstpl
add
pop
pop
movsl
dec
sub
jnp
dec
mov
xor
adc
cmp
out
dec
fisttps
mov
push
cmp
mov
sbb
inc
sub
daa
add
imull
repnz
mov
outsb
and
mov
xor
lret
ss
mov
nop
dec
out
btr
repz
ja
sbb
lods
inc
mov
push
xchg
mov
push
mov
shrl
sarb
inc
scas
sub
xlat
jg
jne
add
cmpsl
clc
repz
dec
das
repz
rorb
mov
adc
imul
shl
xor
push
adc
or
xor
pop
int3
mov
fcoml
cli
js
mov
repz
mov
mov
push
xchg
xor
push
push
xchg
cld
mov
sub
push
jmp
test
loopne
add
cmp
fwait
add
jb
in
popa
lahf
ficoms
mov
pop
hlt
test
lds
add
std
sbb
xchg
outsl
lea
sbb
aas
dec
jb
test
add
jo,pn
lcall
jnp
aaa
cmp
lds
pusha
out
dec
negl
mov
dec
pop
push
sub
push
shll
xchg
mov
nop
loop
ret
clc
dec
cmp
jb
gs
popa
add
cli
ret
push
sarl
or
adc
scas
lahf
jmp
cmp
adc
ss
int
inc
push
inc
sub
and
gs
cmpsb
stc
xchg
sahf
pushf
cs
adc
inc
mov
aad
popf
adc
addb
out
mov
fisttpll
test
add
adc
mov
scas
mov
push
mov
jmp
push
mov
fdivl
jns
jb
movsb
inc
jno
testb
inc
or
mov
mov
xor
jne
push
xor
mov
and
in
sbb
xor
gs
push
js
push
mov
sti
push
cmp
inc
xlat
push
xor
bound
pop
adc
repz
jle
pusha
imul
xor
cld
call
fildll
out
push
fs
idivb
cmpsb
push
popa
or
hlt
sub
imul
shr
ja
jmp
dec
pushf
sbbl
adc
lret
jne
xchg
sub
movb
add
mov
gs
negl
xlat
es
cmp
insb
add
mov
js
and
in
stc
jo
inc
cmp
lcall
add
rcrl
cmp
push
shrb
dec
imul
and
sbb
mov
lret
adc
imul
or
sbb
aam
adc
hlt
xchg
jmp
cmp
aam
arpl
out
xchg
push
lea
lds
mov
or
pop
scas
xlat
fimuls
jbe
enter
jmp
mov
dec
add
mov
iret
xchg
fadd
or
mov
mov
int
jle
pop
sahf
cmpsb
in
push
cmp
and
fldenv
xchg
outsb
and
std
jb
pop
mov
rcl
sub
scas
outsl
xchg
and
push
inc
lds
fs
mov
and
enter
push
or
lods
push
pop
and
je
xchg
mov
xchg
rcrl
out
neg
rolb
sbb
icebp
or
adc
negl
repnz
dec
dec
jo
xlat
sub
pop
dec
inc
pop
mov
pop
sbb
sbb
cs
sub
sti
mov
aam
push
xor
mov
pop
mov
sarb
mov
mov
inc
icebp
cmp
mov
pop
jae
xchg
bound
jne
or
dec
inc
bound
jmp
jle
mov
insb
out
dec
cmpsb
je
test
jno
or
or
xor
mov
pop
test
lret
pop
mov
pop
outsl
add
cmpsb
ret
sbb
and
test
xchg
push
dec
dec
sbb
fwait
lea
fisttpl
inc
lea
jae
and
jno
xor
addr16
loopne
jl
insb
jle
and
stc
jge
jb
sbb
jno
mov
ljmp
std
jmp
dec
nop
mov
adc
outsb
ljmp
mov
dec
mov
jg
pop
mov
mov
mov
xchg
arpl
cwtl
pop
mov
daa
in
push
in
lods
jge
sbb
iret
push
dec
add
adc
lods
mov
mov
cmc
xchg
or
fxch
inc
pop
in
roll
add
mov
lock
mov
imul
add
clts
notb
andl
push
outsl
sbb
fwait
in
jbe
dec
inc
loop
test
ror
jp
sbb
fadd
cmp
inc
mov
fcmovnb
sbb
das
in
sbb
xchg
jae
sub
xchg
sub
mov
insb
leave
ss
adc
dec
js
cmp
push
scas
fldcw
fs
mov
push
fisubrl
xchg
xor
mov
push
push
adc
inc
adc
fcoms
aad
insl
inc
mov
arpl
xchg
pop
cmp
add
arpl
fbld
inc
into
dec
shlb
cli
push
mov
sub
inc
cmpsl
lret
imul
ja
push
ja
out
xchg
xchg
dec
and
stos
scas
push
sbb
popf
sub
scas
pop
mov
inc
jmp
pop
gs
mov
jmp
sbb
popf
aad
add
stos
cmc
in
xlat
dec
fs
dec
ljmp
sbb
jo
imul
daa
fstps
or
out
ja
add
add
push
lcall
stos
mov
addr16
sbb
data16
stos
push
pop
dec
movl
enter
inc
mov
cmovge
inc
or
clc
out
push
mov
mov
or
mov
or
cmpsb
gs
mov
hlt
mov
lods
stos
orl
pop
popa
daa
ds
cli
outsl
imul
iret
into
pop
aam
cld
jl
popa
add
sub
lock
pop
cmp
jo
mov
lret
sbb
inc
mov
mov
sub
fisttps
jg
mov
loop
push
dec
cmpsb
std
cld
sbb
add
stos
sub
pushf
push
in
mov
push
sti
push
mov
lret
adc
sbb
sbbb
movsl
fstpt
test
adc
xchg
out
sub
fistpll
ja
push
adc
and
pop
test
mov
sub
push
push
enter
add
inc
xor
lock
testl
outsl
imul
lods
sbb
arpl
fsubl
gs
nop
icebp
xor
pop
inc
mov
lea
aaa
cmp
shrl
xor
push
cld
test
mov
lods
shll
pop
xchg
loop
mov
push
or
jle
lds
sbb
sbb
xchg
xor
dec
ds
shll
fs
cmp
js
mov
test
or
fstpl
and
xor
leave
ja
inc
sbbl
repz
stos
adc
or
cmp
iret
xchg
and
inc
inc
jo
div
inc
movsb
jle
int
test
jg
rcrl
xor
popf
sub
jbe
xchg
xchg
jg
enter
hlt
shll
scas
ffreep
pop
sub
add
test
sti
xor
cmp
pop
dec
jnp
fdivs
push
fwait
mov
cmp
inc
pusha
xor
scas
jg
pop
sbb
or
hlt
ljmp
xchg
nop
jl
test
push
popf
xor
pop
cmp
add
pop
pop
jb
lcall
subb
mov
inc
sub
add
dec
into
dec
fildl
sarb
mov
inc
stc
cld
push
adc
out
arpl
xor
scas
mov
pop
in
or
jp
mov
dec
iret
xor
inc
add
ror
imul
insl
jno
push
loopne
sarl
mov
ret
sub
lods
dec
push
dec
aaa
aaa
dec
je
out
inc
mov
stc
dec
int
stos
cmp
add
ret
je
jl
inc
call
sbb
or
cmpsl
add
cld
mov
and
adc
inc
adc
sub
pop
xor
pop
or
fmuls
std
bts
cmpsl
rol
sub
mov
jo
iret
xor
pop
ds
mov
mov
loopne
pop
addr16
push
fwait
jmp
js
xchg
mov
lock
int
pop
and
adc
xchg
pop
imulb
mov
or
pop
xchg
cli
push
cmpsb
fs
mov
rcr
add
or
aaa
insl
outsl
orl
ja
mov
xor
fldl
fldenv
push
loopne
lahf
arpl
sub
or
cltd
nop
mov
adc
jp,pn
fldcw
movsl
or
stos
dec
in
lea
xchg
fldl
jno
adc
fs
mov
xchg
sub
mov
adc
divb
shrl
mov
sub
pop
and
mov
mov
push
mov
cmpsl
pop
mov
insl
jns
sub
jbe
push
lahf
dec
jb
mov
add
and
js
push
jmp
test
int3
mov
jne
push
ss
cltd
mov
cmp
cmp
mov
rclb
shr
mov
test
in
filds
in
inc
dec
test
add
adc
mov
hlt
mov
mov
push
fs
data16
mov
sub
inc
popa
popf
sub
in
or
or
aad
js
jle
movaps
dec
sbbl
mov
push
dec
xchg
ja
push
fbstp
scas
call
stos
and
ret
rorl
dec
imul
shlb
lock
xor
lret
and
dec
push
mov
aam
mov
das
popf
lcall
sbb
xchg
xchg
sub
jo
sahf
add
repnz
or
dec
gs
shrb
cli
jle,pt
mov
in
xor
mov
inc
jmp
jbe
mov
ja
out
iret
popa
cmpb
jl
and
mov
push
sbb
sub
out
sbb
and
lret
add
test
xchg
cmpsl
mov
ljmp
bound
ret
lret
fstl
sbb
les
adc
cli
lock
inc
dec
cmp
out
mov
push
cltd
js
jno
les
mov
in
int3
loope
and
into
dec
mov
pop
out
xchg
push
ror
jb
lahf
imul
cltd
mov
jb
mov
lcall
adc
lods
push
xor
pop
gs
aam
shll
leave
add
outsb
sahf
xchg
mov
cmp
xchg
mov
push
int3
pop
dec
or
leave
xor
jmp
loop
and
or
js
lahf
push
pop
je
loop
inc
adc
xorl
xchg
sahf
mov
mov
jge
mov
sub
and
add
icebp
lret
pop
roll
mov
popa
xchg
int
dec
les
loop
xchg
jnp
mov
push
mov
scas
push
add
or
loopne
add
rorl
outsb
dec
mov
mov
ret
ljmp
leave
aam
mov
pop
add
or
pop
stc
sbb
ret
and
mov
addr16
pop
fisttps
std
mov
add
fwait
dec
cltd
xchg
mov
mov
adc
mov
and
pop
es
cmp
sbb
inc
cld
lcall
push
jl
pop
add
cmp
pushf
push
sub
cld
xchg
push
repz
fnstenv
xchg
lds
popf
ljmp
mov
jne
repz
js
loop
and
fildll
cld
mov
sahf
xchg
inc
push
out
cmpsb
lds
lahf
std
sahf
or
mulb
inc
clc
fcmovnbe
mov
jns
jnp
adc
sbb
ficomps
or
mov
mul
shl
inc
loopne
adc
je
aas
cld
jb
ret
sbb
stc
sti
mov
or
xchg
xlat
adc
inc
lock
cwtl
das
andl
or
dec
push
int3
or
fiadds
fs
xchg
jg
das
lea
mov
aas
pop
sub
aad
jmp
jg
cwtl
inc
test
adc
xchg
pusha
ja
nop
js
add
inc
sub
dec
xchg
or
js
or
stos
arpl
cmpsb
mov
loope
loop
xor
fidivs
cmp
inc
xorl
test
loopne
mov
add
sub
xor
mov
mov
repnz
leave
leave
xchg
iret
das
lahf
adc
or
aas
xchg
js
scas
sbb
ficoms
push
fstps
outsb
jp
sbb
jbe
sahf
hlt
pop
mov
adc
insb
les
push
push
mov
dec
xor
loopne
stos
push
push
jnp
mov
ljmp
xor
pop
mov
and
jle,pn
dec
outsb
mov
fisubs
fs
xchg
rorl
aas
jbe
stos
or
mov
xchg
test
sahf
filds
arpl
xchg
cmpsl
dec
inc
xchg
fisubl
jno
test
push
sub
mov
xchg
cmpsb
cltd
aas
dec
lcall
int3
div
push
cmpsb
pop
jle
sub
or
ret
rolb
xor
fs
data16
movsl
xor
adc
outsb
dec
testb
pop
daa
mov
mulb
outsb
test
int3
fwait
test
fdivl
and
js
imul
lods
xchg
int
ss
roll
out
inc
lcall
inc
jb
loopne
or
orl
aas
xchg
outsb
cwtl
push
push
mov
push
outsl
daa
xor
stos
mov
push
lods
in
jnp
sub
jbe
xchg
daa
dec
cmp
orl
push
clc
mov
sbb
loop
xor
mov
stos
push
sbb
or
popf
gs
fsubl
shrb
clc
xlat
or
fists
jecxz
add
int
mov
mov
sti
into
dec
fs
cmp
push
xor
pop
mov
lcall
xchg
and
roll
and
xchg
fs
xchg
ss
cmpsl
pop
push
mov
mov
adc
into
enter
adc
mov
mov
sbb
in
jo
fdivs
shlb
dec
repz
cmp
add
xor
mov
das
gs
div
push
dec
cmc
in
repz
sub
clc
push
lret
push
adc
sbb
xorl
mov
fstpt
push
ljmp
sti
push
mov
mov
add
imul
or
ret
lods
daa
rolb
stc
nop
out
ljmp
adc
je
rcrb
scas
out
sti
aam
pop
and
and
movsl
inc
leave
imulb
test
xchg
stos
popa
dec
xor
or
shr
add
or
mov
sbb
lret
xchg
in
mov
adc
mov
add
mov
lahf
add
or
or
loope
aad
mov
adcb
jl
outsb
int
mov
cs
add
das
out
outsb
dec
notb
cwtl
fwait
vpmuludq
and
cmp
mov
xchg
in
test
push
jge
hlt
jge
leave
test
mov
dec
jne
jne
sti
push
pop
sub
pushf
jbe
insl
mov
imul
sbb
out
mov
push
inc
imul
push
xchg
test
loop
jbe
or
ret
jnp
adc
dec
gs
cli
lcall
lret
in
pop
sub
xchg
in
aam
xor
jg
or
add
ret
pop
add
in
sub
fmul
outsb
shl
test
mov
sahf
lahf
mov
cld
mov
xchg
jb
fildll
rcl
adc
nop
cmp
add
scas
dec
aad
dec
cmp
and
push
mov
xchg
jmp
lds
test
jae
sub
movntps
sbb
test
lock
add
cmp
out
lahf
lcall
fldl
inc
mov
int3
pop
push
cmovns
push
in
jl
fsubrl
mov
pop
adc
inc
sbb
orl
loope
xchg
repnz
pop
aaa
jecxz
push
push
inc
clc
in
mov
xchg
out
and
push
outsb
xchg
orl
inc
pop
test
push
xchg
inc
data16
rcrl
pushf
jge
lods
pmaxub
movsl
sub
push
sarb
insl
mov
and
and
rclb
pop
stos
push
or
pusha
hlt
shl
jge
dec
jl
scas
jns
test
cmp
mov
jae
cmpb
loope
push
ja
sub
test
mov
xchg
roll
xchg
scas
rorl
aad
fistpll
push
dec
pop
cli
sbb
add
xor
fldl
xor
outsl
cwtl
push
fadd
aam
or
mov
out
or
stc
pop
push
jae
push
add
stos
ja
jbe
sub
imul
sub
or
les
lahf
sarl
nop
pop
aaa
pop
xorb
sbbl
lods
mov
mov
ljmp
xchg
add
mov
jl
ficompl
std
adc
jae
or
add
mov
out
cltd
xchg
push
enter
xorl
sub
inc
dec
push
test
or
iret
cld
insl
mull
xor
xor
enter
push
test
cmp
mov
ja
aas
xchg
xchg
lds
jl
data16
into
mov
inc
mov
sub
xchg
stc
mov
xchg
add
es
xchg
cmpb
mov
cmp
out
sbb
mov
std
pop
cmc
mov
lea
adc
popf
sbb
pop
inc
lret
xchg
add
ret
xchg
int3
jmp
repz
mov
push
testl
inc
call
lret
ja
shrd
cmc
mov
dec
lea
ret
add
mov
ds
sarb
mov
mov
fdivs
or
push
ror
sahf
in
arpl
add
hlt
ja
inc
in
fcmovb
fistpll
jbe
lret
setno
lods
mov
mov
inc
push
test
pop
insl
pop
inc
dec
xor
cmp
loope
jbe
jp
cli
jge
popf
and
xor
adc
cmpsl
mov
clc
push
out
mov
adc
js
enter
lret
or
or
push
mov
add
into
pop
clc
fdivrs
xor
add
xor
ret
insb
lahf
stc
mov
mov
insb
pop
adc
push
pop
pop
gs
push
or
push
lret
inc
push
mov
inc
adc
push
nop
decb
dec
add
pushf
sub
pop
ljmp
and
inc
ja
insl
aam
addl
xchg
mov
shlb
lods
jo
jle
in
inc
test
roll
cmp
add
dec
mov
fs
out
xchg
mov
pop
mov
shl
insb
enter
sbb
push
jge
insb
in
mov
shll
fst
jmp
dec
popa
cli
fistl
jns
adc
addr16
jo
into
movsb
xor
rorb
loopne
loopne
dec
lcall
hlt
loopne
pop
sbb
inc
repz
test
inc
sub
xor
mov
clc
shrl
xchg
int3
repnz
cmp
sub
lods
orl
sbb
cmp
dec
xchg
mov
mov
nop
aad
or
pop
lds
ljmp
pop
mov
cmpsb
add
or
ja
and
das
sub
pop
leave
mov
pushf
sub
test
xor
fs
arpl
sbb
cmp
push
mov
jae
cmp
dec
fsubs
xchg
dec
inc
int3
pop
test
push
aad
out
xchg
dec
add
push
je
push
xchg
jmp
xor
mov
adc
push
stos
dec
jnp
dec
mov
adc
outsl
das
add
insl
fidivs
shrl
ret
test
scas
adc
push
xchg
pop
or
cli
cmp
mov
mov
mov
sub
je
lahf
movsb
fcoml
add
cli
fistpl
test
sahf
shld
data16
xchg
dec
mov
aad
les
int
or
shl
lret
jmp
or
repnz
andb
clc
mov
push
push
into
jl
mov
shlb
adc
mov
xor
push
es
idivb
inc
cmp
adcb
test
jno
sbb
inc
inc
xor
loope
scas
jecxz
cmp
and
jp
or
and
cmovnp
movsb
and
and
loopne
imul
xor
scas
das
sub
movsb
add
aad
push
mov
mov
sbb
test
test
push
aad
in
xor
lock
xor
sbb
sub
mov
cmp
leave
add
dec
mov
add
pushf
push
jmp
loopne
mov
repnz
mov
das
es
enter
out
cltd
cmp
sub
nop
lret
sbb
loopne
in
lods
xchg
xchg
lds
jb
outsb
cmp
cmp
add
or
push
push
dec
and
cwtl
xor
inc
and
packuswb
xchg
setno
xor
dec
int
hlt
sub
sbb
mov
push
mov
int3
mov
out
adc
mov
lock
jmp
sub
mov
pop
sti
fstpl
adc
ds
outsl
imul
popf
je
pop
test
ret
dec
sahf
cmpsb
mov
lcall
outsl
rclb
ljmp
xor
and
mov
pushf
push
out
add
pop
pop
mov
aaa
jmp
nop
inc
clc
xor
push
stos
ja
mov
adc
fidivs
xchg
inc
aas
loopne
fadd
ds
dec
in
mov
inc
pop
mov
inc
std
daa
jge
xorb
mov
lock
pop
dec
inc
pop
and
outsl
sub
mov
and
ja
out
xor
imul
sarb
popf
cld
dec
xor
cmpsb
test
xor
mov
xor
lahf
xchg
add
loopne
insb
or
jmp
inc
cltd
les
sti
xchg
sbb
dec
mov
daa
inc
dec
mov
push
cli
decl
ret
and
cmp
xchg
add
xor
sub
gs
call
loop
push
mov
jl
cwtl
and
dec
lret
sbb
fdivrl
dec
hlt
insb
or
sbb
out
mov
mov
mov
mov
and
insb
es
aam
fldenv
lods
and
fdivrl
fcoms
and
jb
adc
lods
stc
popa
mov
jns
pop
add
xchg
sbb
stos
xor
add
inc
out
inc
rclb
lods
adc
sub
iret
mov
jns
sbb
aad
and
gs
out
fidivs
sub
jl
and
shll
jge
and
aaa
add
or
xor
push
or
insl
dec
add
scas
call
xchg
xor
jg
cmp
movsb
mov
imulb
pop
add
add
inc
jp
cs
fdivrs
push
and
pusha
pop
popf
pop
mov
xchg
dec
pop
into
test
inc
mov
fucomi
repz
clc
clc
xchg
cld
lds
scas
pop
lods
jecxz
adc
jbe
pop
jne
sub
fnsave
mov
pop
out
ljmp
pushf
add
mov
sub
mov
xor
mov
fists
out
testl
roll
cmp
loop,pt
sub
fstl
dec
mov
push
cmp
xchg
mov
dec
inc
mov
movsl
jo
mov
mov
sub
mov
out
push
dec
inc
and
lahf
pop
mov
ljmp
es
out
push
and
xor
dec
fimull
mov
test
cmp
clc
repz
and
and
dec
jo
loop
fxch
xchg
and
out
adc
sbb
mov
roll
pop
faddl
test
pop
mov
into
jge
jne
cmp
adc
outsb
jge
cltd
popf
cmpsl
cmp
ror
and
inc
sub
jne
add
push
adc
js
iret
shll
cmpordps
sub
les
adc
cs
fisttps
pop
orl
jle
outsb
lds
out
int3
dec
push
loop
cmp
adc
nop
sub
mov
jne
popa
push
imul
cmpsb
inc
jne
push
mov
mov
mov
out
arpl
jo
push
cmp
loopne
mov
mov
ja
stc
sbb
dec
push
fdivp
into
aas
inc
sbb
aad
ret
inc
xor
scas
mov
and
movsl
push
pop
xlat
lahf
mov
imul
lds
sahf
fbld
dec
sarl
mov
fldcw
andb
push
leave
pop
jns
imul
xchg
into
in
xor
into
push
imul
mov
inc
jae
jle
sahf
mov
rclb
push
pop
push
adc
in
shl
sbb
frstor
in
pusha
in
xor
jg
mov
movb
aad
inc
push
popl
stos
lret
push
lds
adc
mov
int3
stos
mov
xor
or
fildl
lcall
scas
jb
andb
xchg
mov
into
push
mov
push
dec
xchg
jo
sti
in
cmpsb
xchg
mov
push
shll
div
sub
xlat
scas
lcall
dec
sbb
jge
mov
mov
jle
insl
fstp
sub
xchg
add
xor
pop
pop
gs
mov
imul
pop
fnstsw
dec
lea
push
repz
pop
movsb
and
scas
out
rcll
mov
std
mov
gs
mov
dec
push
in
sbb
or
test
js
push
arpl
sti
mov
fwait
clc
and
cmp
pop
or
mov
andb
add
lahf
clc
scas
fidivrs
pop
mov
and
ror
add
mov
pop
ss
xor
mov
jl
notl
out
jne
sub
sbb
fwait
insl
xor
mov
or
pop
movsl
sbb
loope
repnz
or
cltd
in
lret
jb
ret
sub
pushf
mov
and
xor
btsl
sbb
jmp
mov
add
push
pop
jp
adc
aas
push
cmp
bswap
int
cmp
sbbb
out
add
mov
and
dec
std
mov
sub
idiv
outsl
pcmpeqw
movsl
fwait
adc
rclb
rcrb
iret
cmpsl
push
sar
cmpsl
adc
mov
push
out
adc
inc
mov
fstl
mov
sub
fs
cmp
ds
xchg
sbb
test
pop
mov
mov
sub
stos
outsl
sbb
sbb
dec
lods
pop
test
jo
lret
jge
stos
call
mov
mov
or
adc
adc
mov
or
pop
adc
jno
sbb
jl
push
pusha
das
rorb
adc
lcall
add
insl
jge
popl
and
loope
pop
cwtl
movl
inc
jb
push
les
out
dec
push
pop
and
repz
aad
nop
mov
jns
loopne
push
jl
sarl
dec
icebp
imul
xor
mov
dec
adc
sub
lods
lock
lahf
data16
icebp
mov
xchg
call
lret
jae
aaa
pop
and
pop
or
sarl
aam
mov
mov
xor
mov
scas
mov
sbb
push
test
mov
push
and
jne
stos
clc
cmp
aaa
inc
or
xchg
mov
add
rorl
push
cld
clc
mov
inc
out
dec
xchg
arpl
fisubs
scas
mov
leave
sbb
mov
nop
jo
test
cmp
lods
mov
mov
pop
xor
sub
pop
gs
xor
mov
sub
and
mov
or
cwtl
and
xor
clc
sbb
aaa
mov
stc
and
mov
sub
mov
aam
sbbl
cmp
dec
add
icebp
pop
je
fcmovbe
pop
or
pop
addr16
fstl
ss
cmp
push
cmp
rcrb
dec
pop
out
out
xchg
xchg
mov
ljmp
adc
in
clc
leave
aam
sub
arpl
out
mov
xchg
sub
lods
jmp
xor
mov
xchg
shl
outsb
or
lcall
shrl
in
fnstenv
jb
jnp
int3
fisttpl
add
les
loopne
mov
nop
mov
repnz
sbb
call
bound
push
addr16
push
nop
fldl2e
xor
clc
mov
in
xor
ss
scas
jnp
pop
aas
mov
mov
jb
xchg
mov
rcr
and
mov
pop
popf
mov
out
pop
dec
cmc
or
pop
and
dec
jns
mov
leave
sub
jns
fadds
fdivr
cmp
mov
mov
leave
push
jl
repz
dec
out
lret
mov
and
jp
cmpsb
mov
ljmp
out
pop
or
insl
lret
cli
mov
push
pop
add
aaa
sarl
cltd
mov
enter
pop
loop
int3
in
sbbb
stos
dec
aaa
daa
nop
dec
mov
icebp
std
adc
cs
dec
xchg
jp
arpl
add
sbb
fwait
nop
cmp
xchg
lods
jae
jl
add
repz
pop
fadd
int3
jnp
mov
adc
mov
pop
stos
jno
mov
cmp
fwait
shr
cmpsb
test
inc
xchg
push
push
pop
cs
add
pop
and
and
sbb
fcmovu
mov
jl
jl
dec
xchg
call
nop
sti
fidivl
mov
pusha
stos
cwtl
mov
add
jnp
or
cmpb
sub
mov
lss
int
pop
dec
xor
pusha
pop
popa
test
scas
sub
in
and
fcompl
aaa
mov
mov
xor
mull
cmc
lock
pop
dec
stc
out
push
pop
xor
les
sub
and
je
test
cwtl
cmpsl
xchg
sbb
test
lods
inc
push
mov
sub
mov
mov
nop
jl
mov
dec
jge
sub
add
and
fnsave
sbb
xor
pop
cld
dec
out
xchg
adc
or
xchg
jmp
push
inc
sub
movsb
mov
dec
insl
lahf
je
stos
je
fsubs
xor
jmp
mov
fildll
fistpll
adc
xorl
or
inc
pushf
sti
xor
fdivs
push
sti
dec
and
adc
cmpsb
mov
mov
ret
mov
cmp
movsb
pop
jae
add
clc
and
loop
sahf
jne
and
imul
adc
imul
or
enter
push
jmp
pop
sbb
adc
inc
aaa
cmp
adc
mov
mulb
adc
pop
xchg
gs
ror
lock
stc
sub
movsl
inc
bound
mov
mov
push
sub
arpl
into
jle
and
mov
out
cmc
negl
or
mov
fcoml
sub
arpl
es
and
aaa
cmc
xchg
outsb
add
psrlq
push
add
pusha
cmp
lret
or
push
lea
imul
mov
rcr
push
mov
int
dec
pop
adc
dec
and
mov
inc
std
aas
mov
push
popf
push
lea
inc
test
or
xor
inc
push
mov
push
mov
das
pop
neg
push
push
idivl
test
lahf
mov
mov
nop
cmp
pop
pop
repz
mov
ja
inc
lods
and
cltd
xorl
cwtl
pop
mov
push
imul
and
sub
push
pop
data16
stos
pop
test
lahf
hlt
jle
jecxz
fptan
outsl
in
xchg
out
fsts
dec
and
mov
sub
test
test
pop
pusha
xchg
push
insl
lds
sub
lret
pop
xchg
sbb
stc
sub
stc
and
cltd
pop
sub
popf
pop
sti
decb
call
fsubrs
dec
test
mov
les
cmpsb
out
mov
outsb
cmp
ljmp
push
dec
popa
and
push
lock
out
stc
aad
mov
scas
push
cmpsb
jecxz
insb
es
jp
call
xor
mov
imul
xor
ret
jbe
dec
add
ja
adc
cmp
mov
outsl
push
loop
adc
pop
mov
sbb
dec
push
je
roll
xor
and
sub
in
xlat
xchg
cli
jp
sub
arpl
inc
pusha
dec
rol
jmp
add
in
movsl
sub
jb
or
iret
ja
je
mov
outsl
ljmp
push
clc
addr16
lret
movsl
mov
jbe
dec
fcmovnb
pop
xchg
add
sbb
xchg
lcall
inc
loope
pminsw
iret
push
ja
lea
inc
gs
imul
push
mov
adc
cmc
jmp
fsubrp
out
cli
rcrl
pop
out
add
pop
loop
jne
in
inc
or
fmul
xchg
ds
dec
fbld
test
cmp
cwtl
mov
das
jp
xor
lret
lea
add
bound
mov
hlt
cmp
stos
iret
rcll
cltd
cmp
jecxz
sbb
xor
lcall
out
add
in
or
cmp
jns
shrb
lret
push
loope
sbb
scas
mov
in
add
clc
push
sbb
imul
mov
xor
adc
jl
cmp
rcll
leave
dec
arpl
loop
stos
shll
out
das
or
sub
movl
lea
inc
cli
inc
mov
push
pop
xorb
mov
adc
sbb
movsl
inc
jmp
les
add
or
sub
ds
or
pop
mov
popa
mov
ja
mov
xor
pop
cwtl
ret
mov
lods
lods
jmp
addl
movsb
inc
cmp
mov
loopne
cs
sti
ds
vpxor
ja
sub
outsb
mov
repnz
popa
xor
cmp
dec
jbe
and
cmp
fs
pop
sbb
test
rcrb
xor
in
inc
insb
packssdw
dec
jne
imul
inc
loope
repz
popf
sahf
packuswb
jae
imul
outsb
push
cmp
dec
movsl
insb
mov
xlat
dec
xor
rcr
movsb
subb
cmp
jl
cmp
stos
pop
stos
jmp
adc
lcall
mov
mov
pop
cmp
fadds
mov
adc
mov
mov
ret
cmp
fidivs
inc
push
arpl
pop
jbe
popf
pop
adc
pop
lcall
ret
and
cs
pop
push
in
insb
notb
ret
daa
popf
push
xchg
popw
loop
or
sbb
jl
fs
adcb
out
adc
scas
mov
dec
repnz
arpl
mov
jno
jmp
ds
scas
jmp
inc
cmp
inc
mov
imul
imul
arpl
and
fnsave
mov
add
or
jecxz
out
mov
out
xchg
sbb
xor
stc
jle
mov
xchg
jle
test
stc
push
xor
popa
pop
test
aas
ss
sub
ret
sub
fimuls
cmp
mov
loop
popl
sti
adc
in
mov
mov
push
jmp
rolb
ret
jl
cmp
test
sub
fsub
xchg
mov
sub
cmpsl
sub
pushf
xor
dec
in
xlat
les
jo
and
cmc
xor
push
je
cmp
jp
notl
test
sahf
rol
in
xor
movsl
das
in
sbbl
imul
jmp
in
cmp
adc
stos
lret
int3
inc
xor
test
jns
mov
pop
lock
xor
pop
mov
and
xor
mov
mov
push
pop
outsl
push
jecxz
inc
fiadds
shlb
mov
cmp
mov
push
rcl
jae
cmp
adc
jl
push
jno
mov
lds
inc
xchg
cmp
leave
fcompl
push
cmp
inc
and
loop
mov
jne
mov
inc
lock
loope
jbe
sbb
adc
xor
mov
jl
jne
pop
clc
and
push
xchg
out
daa
mov
or
test
icebp
jbe
sub
repz
add
mov
movsb
pop
fcoms
mov
repnz
adc
lret
mov
das
jecxz
int
stos
ror
pop
push
fisttpll
mov
xor
add
mov
inc
or
add
mov
out
sbb
inc
arpl
mov
dec
aas
adc
mov
mov
adc
addl
jo
inc
aam
pusha
lcall
fstpt
scas
lcall
leave
inc
adc
fisubs
and
into
jg
test
stos
mov
repz
push
lods
push
dec
xor
jb
xor
sbb
gs
cli
and
dec
out
test
dec
push
fs
mov
sub
cltd
adc
aas
or
movsb
in
mov
push
loope
mov
cli
xor
sti
fwait
in
mov
sub
popf
ljmp
cmpb
sub
test
scas
xchg
movsl
cmpsb
xchg
adc
pop
jmp
pushf
lret
pop
pop
pop
aaa
sbb
cmp
sbb
fdivl
int
mov
mov
es
jns
das
dec
sahf
sbb
mov
inc
xor
icebp
addr16
lahf
shrb
sarb
inc
sbb
push
test
inc
icebp
cmpsl
cmp
pusha
int3
mov
cld
in
cmp
or
out
or
mov
add
insb
mov
scas
in
add
mov
call
mov
shll
lds
popa
fucomip
gs
fsubl
pop
call
call
fwait
repz
cltd
dec
in
cmpsb
icebp
dec
lret
hlt
push
fnstenv
inc
xchg
fidivrs
cmp
mov
mov
or
fiadds
mov
add
rol
xchg
out
mov
paddw
fwait
sub
xchg
test
fisubs
mov
dec
xchg
jno
adcl
stos
or
std
in
adc
daa
fisubrs
sub
xchg
sti
jbe
lret
xchg
incl
lods
sbb
gs
call
and
dec
mov
in
xlat
adc
pop
scas
sti
fs
sbb
mov
leave
movsl
lret
cltd
sti
pop
cmp
fstps
jl
sti
loopne
cs
cmp
orl
es
jbe
mov
cmp
data16
fisubrs
mov
aam
pop
fdiv
add
stc
xchg
mov
mov
add
cltd
dec
scas
ja
cmp
mov
out
or
push
imul
cmp
sbb
inc
mov
lods
sbb
repnz
mov
ja
es
std
mov
push
icebp
js
sbb
std
mov
dec
aam
test
pop
add
stc
xorl
jmp
ljmp
xor
jb
lods
push
sbb
inc
shll
inc
pop
addr16
mov
xchg
push
dec
adc
mov
rol
stos
sub
add
inc
cld
cli
cmp
or
pop
cmp
pop
js
cli
sbb
mov
loop
add
jb
dec
rorl
or
popa
push
pop
mov
ret
lea
shlb
push
inc
test
sbb
icebp
sti
rorb
push
mov
adc
cmovb
shl
push
stos
adc
stc
mov
mov
cmp
stos
stc
and
mov
cmp
imul
push
enter
adc
sub
mov
das
adc
or
dec
mov
mov
xchg
sub
and
push
or
mov
bound
movsl
andb
test
out
addr16
ds
movb
and
jecxz
nop
aam
imul
dec
jb,pt
mov
fcomp
push
sub
loope
dec
mov
mov
addr16
mov
ss
rcl
clc
ret
filds
shrl
jp
mov
ss
add
dec
into
sbb
cltd
lcall
call
lock
mov
mov
leave
dec
jns
mov
xor
xchg
int
dec
jg
jg
loop
cli
add
cs
stos
scas
scas
sbb
xor
into
cmp
popa
or
mov
mov
cmpb
adcl
ljmp
add
xor
pop
pop
in
xchg
cmpsb
out
fs
pop
pop
mov
mov
jmp
fs
aam
inc
mov
cs
out
mov
adc
rcrb
xor
pop
xor
jl
sbb
andb
mov
lea
add
fsubr
mov
mov
out
jmp
test
std
sbbl
mov
jle
test
jg
in
jg
dec
dec
xchg
xchg
pushl
decb
fldt
and
lret
and
dec
ja
add
mov
int3
xor
ds
inc
mov
push
lahf
jns
ljmp
sub
clc
mov
jg
ror
inc
pushw
mov
pop
lcall
cmp
pop
or
outsl
les
stos
in
cmp
add
push
pushw
mov
pop
insl
fsubs
stos
inc
cmpsb
arpl
nop
ja
orb
and
adc
cld
shll
pop
lea
sbbl
jecxz
repnz
and
adc
mov
cmp
sub
xor
jne
js
xor
push
test
push
mov
aaa
popa
inc
les
sbb
fs
imul
aas
dec
sbb
and
push
mov
aad
mov
ds
out
push
cmp
jmp
imul
adc
mov
and
out
test
les
jae
movsb
mov
mov
loopne
mov
repz
jmp
jecxz
out
dec
shrb
cld
lea
mov
sarb
adc
dec
aaa
iret
adc
inc
pop
lea
std
lods
mov
repz
out
into
jle
adc
and
inc
xchg
xlat
adc
push
inc
enter
xchg
cmp
out
cmc
popa
pop
sti
jl
mov
or
inc
popa
jno
inc
aam
adc
cs
ljmp
push
push
pop
pop
sahf
daa
inc
stos
cwtl
stc
push
adc
popa
test
call
pop
sub
fldenv
jbe
and
sti
shll
lcall
pop
test
mov
daa
repz
mov
dec
sbb
insb
jg
cmp
cmp
dec
push
pop
push
add
dec
scas
outsl
scas
mov
xor
ret
mov
mov
mov
loop
jg
nop
xorl
in
cmp
inc
test
jmp
fisttpl
arpl
dec
ret
outsl
mov
mov
mov
sub
mov
xor
adc
mov
cmpb
adc
out
stc
sbb
xchg
push
cltd
imul
add
enter
stc
pusha
mov
popf
inc
mov
and
push
mov
fcoml
jge
out
in
dec
pop
mov
out
out
out
pop
movsl
and
or
pushf
lcall
adc
repz
cmc
xlat
mov
mov
or
loop
daa
shlb
imul
xchg
xor
mov
or
xchg
das
rep
mov
icebp
xchg
or
and
pop
or
outsb
movsb
pop
orb
enter
insb
cmp
pop
cli
mov
lods
jl
inc
mov
out
mov
jge
inc
into
push
fs
dec
push
aad
push
push
scas
ja
ja
push
dec
adcl
xor
scas
and
and
loope
sub
mov
xor
orl
adc
je
cmp
or
int3
pop
mov
and
sub
out
add
mov
ret
push
inc
pop
out
aam
shlb
mov
mov
mov
sub
jns,pt
fildl
scas
clc
leave
adc
mov
das
fnstenv
test
adc
mov
jne
fsincos
inc
sbb
imul
dec
add
inc
cmpsl
push
xchg
cli
in
push
mov
bound
repz
dec
cmp
mov
xchg
scas
ret
sub
cmp
fadds
sub
mov
cli
sub
pushf
xchg
adc
and
insb
pavgb
lahf
movsl
mov
int3
sub
add
mov
sbb
inc
das
and
lds
inc
not
in
jg
sbb
push
dec
mov
push
xchg
inc
cld
sbb
add
cs
cld
subl
fsubl
lock
and
cmp
mov
inc
sbb
mov
hlt
lret
and
loop
es
adc
dec
pop
in
sbb
jecxz
xor
dec
dec
mov
fisubrs
pop
cmp
lock
cmpsl
dec
fnstcw
mov
lret
or
mov
push
push
ror
xor
jnp
add
mov
fwait
int
movb
cli
jl
nop
outsl
cld
and
hlt
push
push
jbe
out
int3
popa
push
insl
sarb
cmp
push
push
mov
xlat
jl
outsl
nop
repnz
lahf
addr16
subl
leave
xchg
loopne
fcoms
sub
lock
les
in
test
ljmp
push
aas
mov
test
jecxz
fcompl
sbb
jno
lcall
xchg
dec
jmp
cld
or
mov
sub
mov
das
es
xor
pop
lods
pop
inc
sbb
mov
insl
push
or
jl
cltd
sbb
aam
xchg
js
int3
inc
sbb
pop
imul
xchg
aad
int
adc
push
push
add
add
jbe
and
push
xchg
add
inc
sarb
fisubrl
xchg
out
jns
mov
or
sbb
xlat
push
inc
sub
ror
add
cmp
mov
fidivrl
daa
mov
ret
and
mov
xor
insl
ljmp
shr
or
sahf
dec
jnp
sar
mov
sbb
push
jecxz
loope
ja
loope
pop
in
scas
lea
xchg
sahf
mov
aad
mov
out
xor
mov
mov
mov
dec
jb
and
orl
bound
lock
dec
mov
pop
jbe
inc
cmp
leave
sbb
inc
movsl
jns
xchg
pusha
mov
and
mov
jbe
fwait
jb
push
iret
dec
ret
cmpsl
ljmp
test
push
dec
push
cmpb
das
xor
lret
and
mov
mov
mov
xchg
std
cmp
insl
mov
pop
sub
jge
push
iret
fsubrp
dec
mov
adcl
add
inc
into
nop
int
test
and
stos
mov
imul
xor
sbb
loopne
cmpsb
enter
push
xchg
pop
inc
mov
mov
sub
push
cmp
sbb
rorb
cmp
push
dec
sbb
jbe
daa
in
add
inc
cld
sbb
push
aad
les
arpl
adc
pop
stos
lahf
and
insl
mov
add
sub
shlb
mov
gs
aaa
push
add
xchg
in
sbb
out
hlt
cld
fildll
in
mov
inc
test
fisttpl
mov
xchg
enter
test
mov
test
es
pop
daa
pop
add
mov
pop
xor
ret
xchg
pusha
cmp
xchg
jno
es
inc
or
fiaddl
imul
cmc
push
mov
and
mov
scas
scas
sahf
test
cmp
dec
sahf
mov
test
inc
sbb
test
inc
push
pop
fdivs
mov
jp
aaa
out
ljmp
add
add
mov
stc
imul
cmp
pop
push
sti
arpl
xor
call
mov
xor
jns
cmp
loop
dec
dec
xchg
nop
outsl
test
movsb
insl
xchg
insb
lcall
or
shll
das
loop
jl
xchg
dec
pop
test
cltd
cs
shl
int3
ret
fimull
leave
push
js
xchg
out
outsb
sub
mov
imul
jp
bound
adc
ss
jecxz
orl
cmp
jge
pop
mov
mov
ds
ret
cmp
sub
in
lock
push
lcall
adc
in
cmp
fdivrl
dec
add
jno
pop
xor
and
les
mov
or
xchg
dec
cmp
xor
divb
and
stos
enter
adc
jns
pop
adc
xlat
cmp
xor
int
sub
inc
in
sub
or
movsb
das
add
xchg
jne
int
movsb
inc
push
movsb
inc
mov
inc
inc
or
lock
call
cs
dec
push
pop
fsubl
test
mov
xor
in
pop
push
dec
mov
cli
xor
js
imul
ss
jp
sbbb
xchg
lea
movsl
into
ror
mov
xchg
imull
pop
push
pop
bound
jmp
lea
shll
aaa
mov
cmp
ja
mov
cmp
inc
mov
test
cli
push
push
mov
sub
and
out
jne
cmp
jmp
imull
cwtl
stos
aam
push
ds
dec
push
mov
imul
jne
sbb
stos
dec
aas
vunpcklpd
sub
push
push
aas
or
fists
and
push
mov
and
cmp
mov
fs
xor
push
xchg
jns
push
xor
in
sub
ja
fwait
xchg
cmp
and
iret
or
mov
movsl
stos
ficoms
mov
adc
add
inc
sbb
push
lods
inc
inc
xor
mov
clc
bnd
sarl
cwtl
pusha
sbbb
adc
in
dec
cmc
mov
out
sub
outsl
xchg
mov
inc
sti
push
pop
lods
jns
mov
push
dec
mov
lcall
mov
shrl
sub
push
mov
hlt
dec
hlt
out
loop
movaps
xor
mov
js
or
push
xor
xchg
xchg
mov
je
popa
sub
enter
and
ljmp
cmp
adc
iret
jl
hlt
add
mov
mov
aaa
jnp
adc
xchg
adc
ljmp
dec
cmc
mov
es
sub
outsb
xchg
jnp
xor
push
call
cmp
lahf
repnz
cmp
xor
push
ret
out
mov
js
mov
mov
inc
mov
in
pop
fisttpl
cld
adc
out
divl
jmp
testl
popa
push
les
lcall
mov
xor
adc
adc
add
push
repz
xor
push
push
sahf
dec
add
pushf
jb
je
push
insb
inc
mov
nop
adc
xchg
arpl
lahf
push
push
hlt
and
sbb
pop
push
test
cmp
cmpsb
ljmp
jne
pmullw
enter
cmpsb
mov
insl
outsl
cmp
sub
fdivr
lods
mov
mov
sti
mov
loope
dec
lret
aaa
icebp
mov
cmp
pop
xorb
cmp
out
cwtl
pop
aam
inc
imul
sub
xchg
mov
cmovns
cwtl
push
or
dec
cwtl
rorl
data16
xor
test
sbb
fwait
sbb
and
and
shlb
das
pop
ja
xlat
fists
enter
icebp
push
xor
xchg
nop
adc
fdivs
mov
or
pop
push
mov
popl
mov
adc
out
gs
repz
nop
call
xorb
in
icebp
incl
outsl
xor
add
sub
es
gs
stc
sbb
push
mov
js
lahf
flds
shlb
rolb
jno
xor
ds
repnz
cmp
shrl
test
xchg
dec
xchg
mov
push
mov
mov
mov
fcoms
mov
sahf
push
sbb
iret
in
and
aas
ds
cmp
iret
xchg
pop
leave
add
xor
mov
jae
inc
or
aaa
dec
inc
mov
shrb
push
ucomiss
jl
and
fadd
cmpb
sub
push
lods
and
rorl
sbb
or
mov
pop
inc
cmc
es
jge
cmp
aas
test
mov
or
pop
fstps
or
jnp
loope
cs
xchg
pushf
aam
sbb
lcall
fcmovu
or
xor
ss
jge
xlat
xchg
mov
jbe
xchg
and
int3
pushf
loop
es
cmpl
sub
fildll
int3
das
and
out
mov
pop
jne
dec
push
jle
dec
adc
outsb
aam
jbe
sbb
inc
ljmp
popf
loop
jmp
pop
aam
jmp
pop
adc
ss
jmp
fmuls
aaa
xor
mov
cltd
and
dec
xchg
jmp
fistpll
add
scas
jp
pop
jo
dec
jp
lods
and
xor
das
dec
int
jbe
inc
fistpll
imul
sub
sub
ss
or
sub
fldcw
in
inc
cmc
adc
fmuls
mov
jecxz
inc
inc
mov
xchg
repnz
mov
mov
push
cmpsb
outsl
lods
aad
insl
xchg
cld
je
jmp
dec
nop
sbb
push
mov
aas
push
push
inc
sbb
out
fstps
mov
xchg
sarl
xchg
faddl
fisubl
dec
and
out
insb
jl
xor
mov
scas
stc
push
addr16
icebp
fdivr
inc
pushf
fisubrs
jg
popf
dec
lret
jp
arpl
test
and
ret
push
daa
and
xor
lds
stc
ret
push
xor
cmp
pusha
cli
ss
push
mov
inc
mov
popa
sbb
jg
jge
insl
cltd
mov
movsb
shll
popa
fisttpl
mov
in
lods
pop
mov
xchg
fbld
ljmp
jb
cmp
pop
stc
clc
in
fcoms
lods
mov
insb
cmc
in
leave
incb
push
in
aaa
pop
dec
dec
sub
mov
stc
int
sub
test
test
add
push
loopne
sbb
mov
dec
rclb
jno
push
outsl
loopne
jbe
jge
mov
stc
jle
mov
cmp
inc
lods
std
jbe
xor
or
sub
rcll
push
insb
jg
inc
jbe
aas
into
jg
sub
dec
or
mov
cmpsb
add
loop
fidivrs
cwtl
divl
and
imul
push
dec
or
imul
mov
xor
jno
xchg
dec
and
adc
clc
push
cmp
xor
mov
scas
imul
pop
aaa
popf
or
cmc
pop
sub
movsb
add
aas
js
and
insl
test
movsb
jg
stc
lcall
scas
pop
insl
cmc
out
jne
cmpsb
flds
push
mov
push
xor
mov
push
and
xchg
xchg
in
leave
fldenv
cmp
jnp
mov
repz
int
sub
mov
fstps
sbb
test
aaa
call
mov
or
divl
and
push
rcrl
add
jg
cltd
xchg
push
cltd
and
ret
mov
inc
and
jmp
mov
sub
jbe
insl
mov
and
cmpsl
inc
cwtl
mov
push
adc
in
cmp
mov
in
mov
insl
add
into
imul
push
js
mov
xchg
insl
mov
xchg
pop
mov
insb
das
dec
out
sbb
sub
fisubrs
push
dec
add
in
test
jge
add
inc
adc
push
jge
and
jns
add
xchg
mov
jmp
push
and
and
adc
push
dec
mov
xor
mov
data16
out
lcall
stc
mov
push
loope
cmp
scas
adc
call
stc
push
jno,pn
pop
cwtl
jo
imul
repnz
inc
mov
imul
sub
xor
inc
xchg
fimull
addb
scas
sbb
xor
mov
js
jmp
es
rorl
xor
adc
sbb
xchg
aaa
daa
ret
mov
mov
fistps
push
add
mov
data16
pop
pop
test
dec
sub
cmpsl
xor
jecxz
sub
les
test
ja
in
lock
aam
xor
jne
ss
ja
xchg
out
pusha
and
mov
pop
aad
mov
adcb
int
dec
les
pop
adc
dec
jns
mov
inc
outsl
fldcw
loop
mov
cmp
nop
fwait
or
lret
test
xor
cwtl
cmpsl
shlb
fmull
shlb
lods
int3
cmp
sbb
pushf
loopne
mov
push
lcall
iret
ret
mov
or
cld
pop
jge
lods
pop
out
sbb
repz
fidivs
fwait
xchg
loope
or
pop
dec
add
mov
stos
out
cs
out
push
incb
fwait
cwtl
cmp
aam
fimuls
lock
lods
mov
cmc
mov
gs
ret
lahf
push
loope
xor
mov
clc
frstor
loope
fwait
mov
insb
add
sbb
jbe
jle
aaa
neg
adc
mov
mov
pop
xor
loop
jnp
movsb
mov
shl
jmp
pop
test
push
jnp
jge
test
cmpsl
mov
pop
xor
add
push
test
jae
add
pushl
shr
das
dec
jnp
and
int3
fbld
into
push
sub
inc
jmp
jnp
mov
ss
aam
mov
cltd
repnz
in
cld
dec
call
test
jne
lods
and
ficoml
pminub
mov
jmp
sub
enter
popf
stos
jle
cltd
pop
in
xor
shlb
iret
rolb
push
lcall
mov
js
in
xchg
gs
or
repz
mov
insb
js
fists
push
add
sbb
push
sub
cs
cmp
cmp
stos
in
jne
ljmp
stos
cltd
jae
adc
push
mov
fcmovb
cmp
dec
add
loop
and
out
and
xor
bound
push
sub
dec
or
cwtl
sbb
rorl
sbb
out
dec
jne
cli
mov
mov
mov
insl
sbb
jle
or
jmp
out
aas
mov
mov
fcmovnu
mov
mov
iret
pop
insl
das
movl
mov
imul
in
imul
daa
mov
xchg
xchg
dec
inc
pop
dec
mov
cmp
pop
mov
xor
dec
sub
lds
mov
inc
insl
mov
icebp
pop
mov
mov
in
jmp
fmul
sub
sbbl
bound
pop
out
mov
and
loop
push
imul
fcom
xor
loop
push
lds
pop
mov
jle
add
hlt
aas
or
into
shr
mov
leave
test
mov
adc
jl
ret
lret
cwtl
pushf
xchg
xor
mov
in
mov
and
aas
mov
pop
cld
dec
cmp
stos
inc
push
fidivrl
jno
outsl
fisttps
imul
dec
cmp
mov
or
mov
pusha
jmp
add
addr16
fdivs
cmp
out
pop
stos
ret
add
sbb
std
or
repz
adc
scas
mov
cmp
push
stos
call
cmp
frstor
jae
cmp
push
orl
and
and
jbe
mov
xchg
mov
roll
rcr
pop
out
sti
sahf
nop
sub
inc
orl
in
hlt
and
aaa
xchg
push
cmp
jge
js
jp
and
sbb
cld
lock
rcll
clc
inc
outsb
enter
mov
xlat
mov
cmp
or
and
mov
cmpsl
xor
cli
jg
movlps
mov
addr16
pop
aaa
mov
jmp
jecxz
push
arpl
dec
pop
adc
sub
sti
or
stc
inc
cmp
scas
mov
lret
push
mov
mov
cs
ret
jnp
std
push
push
faddl
subb
push
les
pop
sbb
jle
enter
dec
inc
loope
push
add
xor
sbb
movsl
rol
pop
mov
ret
lds
test
cmc
js
push
outsb
ljmp
inc
cmp
adc
std
adc
sbb
outsb
jb
fisubrl
dec
ret
add
stos
adc
add
imul
test
push
jns
sbb
mov
cmc
ja
xor
cs
and
pop
js
push
cmp
adc
push
adc
dec
inc
mov
neg
scas
sub
mov
adc
or
adc
xlat
mov
xchg
daa
bound
mov
stos
lret
fistpll
inc
or
out
add
out
arpl
push
xlat
xchg
dec
insl
sub
sub
repz
mov
mov
mov
in
das
pxor
lret
or
dec
xchg
xlat
daa
insb
jmp
adc
push
jg
idivb
repnz
push
cwtl
lds
mov
and
jl
xchg
loop
mov
xlat
sub
cwtl
adc
aas
inc
dec
mov
mov
dec
repnz
or
jge
mov
les
mov
sub
pop
pop
jbe
lods
mov
clc
sbb
movsb
push
push
in
jmp
sahf
mov
jne
or
ret
lcall
mov
dec
pop
ljmp
shl
jmp
jl
mov
sbb
mov
fistps
into
out
jbe
jae
popa
stos
outsl
jp
scas
test
mov
cmp
aaa
pop
js
xor
idivl
mov
in
add
fldt
sahf
xchg
rorl
pop
cmp
and
mov
or
sub
aad
out
int
pop
xchg
fisubrl
frstor
jno
je
pop
or
es
lock
shr
sub
popa
mov
jno
mov
repz
cmp
adc
or
xor
fadds
inc
mov
test
cmp
mov
push
dec
or
xchg
loopne
mov
sub
inc
ficoms
jp
loopne
ret
xor
addl
inc
sub
sbb
mov
adc
ret
jmp
movsb
or
xor
sub
xor
jg
mov
test
jmp
sbb
cmpsl
mov
xorl
dec
int3
push
roll
dec
lods
loope
jge
aaa
mov
rorl
jno
inc
addr16
add
sbb
rcll
cltd
ljmp
xchg
shrb
mov
vrcpps
nop
jle
cli
lret
add
add
rorb
divl
and
mov
stc
mov
jb
inc
ficomps
cli
xor
xchg
sbbl
out
and
lods
sarl
and
cmpb
scas
scas
decb
sbb
testl
fsts
sahf
or
ss
sti
or
loopne
mov
jno
push
or
out
testl
aaa
inc
push
out
add
lret
loop
sahf
xchg
mov
ret
pop
dec
inc
and
movsl
ljmp
ljmp
dec
hlt
seta
int
jb
pop
ds
ret
jecxz
lcall
pop
repz
push
ss
add
and
sub
test
or
test
adc
mov
dec
pop
lret
sub
dec
add
or
push
int
dec
xchg
jo
xchg
dec
xor
rcl
lahf
pop
sbb
mov
inc
loopne
sub
mov
sahf
in
icebp
ja
fs
out
mov
adc
mov
jno
jno
or
mov
aam
cli
jle
push
cltd
push
mov
pop
sub
xchg
jb
dec
mov
mov
nop
mull
xchg
out
adc
imul
test
imul
mov
sahf
xlat
mov
lcallw
jns
ret
xor
pop
cltd
or
das
or
sbb
inc
clc
mov
dec
popl
push
push
mov
gs
lods
jmp
daa
cmpsl
add
lds
or
fsubp
or
arpl
enter
and
mov
dec
fildll
adc
ret
repz
add
xor
pop
pusha
push
push
cmp
roll
xchg
ret
jle
jl
aam
inc
push
adc
sub
pop
adcb
lea
cmp
jl
mov
shrl
dec
mov
add
dec
lret
mov
or
add
xor
out
pop
push
pop
scas
aas
mov
jp
subl
jl
jmp
add
push
xchg
xchg
js
adc
shll
mov
hlt
jb
mov
int
lock
imul
inc
xchg
adc
sub
push
ret
sti
iret
fidivrs
movsl
shr
cmpsl
jecxz
push
fidivrs
cmp
scas
popa
or
iret
pop
xchg
aad
pop
xchg
push
ss
xchg
stos
dec
pop
movsb
fldl
adc
dec
mov
int3
dec
ret
mov
shrb
lcall
sub
idiv
adc
sar
mov
dec
jo
dec
jecxz
or
jbe
test
push
cmc
pop
push
pop
in
push
test
pop
or
ret
popa
stc
push
mov
dec
ja
lcall
clc
mov
jb
scas
xor
test
or
scas
js
repz
enter
xchg
das
pusha
mov
lods
lock
sbb
mov
pop
test
test
scas
test
repz
sar
test
insl
stc
outsb
pop
ret
pop
repnz
mov
test
cmp
add
out
test
cmpl
in
jb
push
jne
xor
ds
or
fisubrs
fnsave
and
add
clc
xor
fistps
jg
aad
rcrl
jecxz
push
sbb
popf
js
lds
mov
xchg
sub
inc
jmp
inc
stos
jo
jae
xor
and
sarl
mov
mov
scas
add
mov
iret
shlb
scas
ljmp
xchg
loop
push
cmpsl
dec
or
inc
cmpsb
mov
aas
lds
imul
aas
lcall
in
xchg
cmp
jbe
inc
ret
neg
adc
lret
jmp
cltd
daa
push
sti
jmp
data16
xchg
jmp
inc
insl
mov
mov
iret
js
xor
mov
sub
clc
lret
mov
dec
enter
adc
mov
roll
add
cmp
sbb
aaa
push
in
imul
mov
lret
in
and
inc
ja
lcall
mov
add
adc
ret
xchg
lret
add
insb
into
push
hlt
leave
sub
shlb
dec
or
mov
scas
pop
je
and
call
ljmp
and
mov
xor
pop
push
test
cld
mov
jp
icebp
xchg
xchg
jb
lret
cmpsl
mov
aaa
enter
mov
jmp
dec
mov
outsl
push
insb
lds
jecxz
sbb
popa
push
adc
pop
ds
pop
dec
loopw
mov
pop
fwait
pop
sahf
lret
cmp
orb
ret
divl
pop
pop
mov
push
rorb
insl
and
add
pop
mov
inc
jno
icebp
mov
add
dec
in
stc
xchg
or
repnz
stos
sub
xchg
pop
mov
movsb
daa
fildl
lods
mov
and
sbb
int3
std
pop
fldt
xor
insl
mov
mov
sub
sub
into
and
hlt
loope
imul
jecxz
bound
test
pop
arpl
in
scas
outsl
shlb
push
or
mov
insl
fldenv
loopne
testl
test
leave
cmp
xor
cmp
dec
popf
mov
push
jmp
out
in
call
psubusw
insl
hlt
loopne
push
stos
and
je
and
dec
aaa
cmc
ljmp
mov
repnz
or
xchg
sub
pop
ret
int3
xchg
loop
std
inc
fldl
inc
mov
mov
inc
pusha
pop
push
ret
icebp
inc
cmp
in
jecxz
mov
push
inc
lods
movsb
fwait
sarl
sub
mov
mov
and
imulb
push
mov
dec
mov
scas
push
fisubrs
lret
and
ret
adc
lahf
aam
jns
cli
xchg
cmp
sub
pusha
subl
dec
mov
push
dec
mov
add
fs
cmpsl
lahf
push
outsb
jb
mov
loopne
and
pusha
ret
scas
cmp
xor
and
lret
int
xchg
and
std
sbb
xchg
cmp
idivb
outsb
sub
cmp
js
xor
sahf
push
pop
nop
add
adc
xchg
dec
daa
add
ds
jg
mov
cmp
push
mov
cs
sahf
mov
dec
add
push
lcall
out
pop
mov
imul
inc
insb
mov
sub
ret
mov
and
pop
mov
or
adc
cli
xlat
movsl
es
stos
les
les
stos
xlat
sbb
inc
mov
test
ret
loop
das
jne
xorl
add
out
or
mov
push
addl
cltd
cmp
es
rep
add
mov
pop
inc
stos
dec
and
repz
pushl
mov
flds
add
pop
push
mov
pop
pop
jns
xchg
lret
jmp
inc
aam
xor
stc
shll
movsl
jp
or
rcrb
push
mov
sub
and
push
test
lock
int3
sub
or
leave
adcl
lcall
sub
mov
jb
rcr
mov
mov
pop
cmpsl
mov
xchg
add
mov
push
sti
lea
lods
sub
sub
jl
aas
cld
scas
jl
xor
outsl
sub
jg
idiv
cltd
xchg
and
icebp
add
mov
pop
repnz
pop
xchg
fcoms
push
add
rol
xchg
inc
or
dec
icebp
add
addr16
daa
inc
cli
pop
loopne
mov
arpl
dec
notb
jne
jno
sub
adc
xor
pop
fiaddl
outsl
sub
aaa
dec
movsl
or
xor
insl
ja
stos
rorl
fidivl
cmpsb
mov
aaa
pop
fcompl
push
mov
pop
fdivl
inc
cmp
add
clc
sbb
psrad
dec
cmp
test
shrl
push
lahf
fisttpl
movsl
mov
mov
cld
inc
jecxz
add
orb
stos
pushf
pusha
pushf
jl
movsb
out
or
js
sub
popa
sub
fldpi
scas
ja
push
in
mov
cmp
sbb
pop
jecxz
and
ret
xorl
xlat
dec
dec
and
add
pop
xchg
lods
mov
imul
scas
repnz
mov
cwtl
enter
mov
loop
adc
orl
ds
push
push
das
jae
out
jp
stc
mov
fnstenv
cmp
das
icebp
icebp
and
fiadds
sub
sub
mov
daa
aam
push
jle
adc
mov
int
sbb
mov
adc
ficoml
aad
or
sbb
mov
mov
sahf
mov
icebp
loopne
jge
test
jnp
pop
loop
aas
inc
movsl
test
cwtl
cld
loope
lahf
mov
mov
jmp
cmpsl
pop
test
add
or
push
test
mov
movsl
js
xor
pop
pop
clc
xor
popa
divb
xor
icebp
fwait
lret
sti
cwtl
fwait
or
cmp
push
xchg
stos
outsl
dec
add
or
inc
in
fwait
adc
dec
nop
jae
or
mov
cmp
push
arpl
cld
pop
leave
lret
pop
es
mov
or
ret
jle
xchg
mov
adc
fs
or
xchg
cli
sub
mov
fldenv
xchg
cmpb
aad
popf
popf
or
inc
adc
dec
hlt
cld
xchg
lret
push
jne
dec
mov
ja
popa
add
lods
aad
mov
and
shrl
and
and
iret
sarb
inc
js
mov
leave
sbb
stos
sbb
dec
mov
add
sub
mov
psubusb
divl
repnz
push
imul
inc
push
xor
mov
push
lds
sub
clc
repnz
test
mov
mov
xlat
adc
pop
je
pop
cmpsl
pop
std
aaa
mov
cli
add
loope
es
push
test
bound
fmul
add
js
lods
mov
add
mov
ret
push
mov
mov
fmuls
test
or
adc
in
mov
xor
pusha
push
mov
fistl
mov
pushf
hlt
inc
inc
ljmp
jmp
mov
pusha
lahf
inc
and
cli
imul
adc
ret
xor
pop
int3
in
stos
cmp
lcall
inc
sahf
sbb
daa
fildl
je
push
dec
nop
cmp
or
sub
add
pop
mov
mov
mov
fisubl
outsb
stc
pop
cmp
sbb
ja
sub
mov
mov
or
fists
ljmp
xchg
adc
test
mov
add
or
sub
mov
outsb
sbb
mov
xchg
adc
mov
lea
test
test
jbe
xchg
xlat
add
pop
js
mov
dec
mov
pop
outsb
gs
insb
pop
jle
icebp
call
mov
xchg
mov
out
cmp
dec
add
repnz
pop
lret
gs
cmpsb
std
ss
imull
mov
imul
and
call
insl
jae
mov
adc
xorb
pop
xchg
jne
aad
xlat
sub
mov
adc
fucom
es
sub
dec
push
shll
daa
loopne
dec
inc
lock
and
je
repnz
add
inc
enter
ret
push
iret
and
pop
pushf
lret
jle
inc
es
pop
dec
in
push
xor
and
sar
push
mov
or
sti
push
adc
push
pop
outsb
push
movsl
jmp
movsb
sbb
scas
pop
mov
jge
sbb
fwait
arpl
dec
ret
xlat
cmp
outsl
ficompl
xchg
xor
scas
inc
sbb
lahf
sti
pop
std
cmp
into
or
xchg
js
xchg
inc
jecxz
mov
popa
std
xchg
shrb
gs
int
mov
int3
xor
cs
xor
imul
sub
in
and
cli
jne
clc
shrl
cmpsl
int3
shr
sbb
fsts
sbb
movsb
mov
outsb
or
les
repnz
jecxz
lods
cli
subl
decl
jns
xchg
or
xlat
sbb
inc
push
jg,pn
ja
inc
mov
cli
ljmp
in
lds
cltd
pop
mov
pop
std
jp
add
xchg
cmp
fidivs
nop
ljmp
mov
lret
dec
test
nop
mov
outsl
xor
arpl
es
imul
orb
fdivr
push
test
push
vmovq
inc
scas
mov
fs
movsb
xlat
imul
push
jmp
adc
test
aad
leave
out
adc
or
dec
cmp
stos
movl
aaa
mov
pushf
pusha
imul
fsubrs
xchg
jno
pop
jle
dec
add
adc
pop
cmp
pop
sbb
mov
iret
mov
cmp
clc
std
cmp
or
out
iret
mov
cmpsb
or
pop
movsl
mov
add
test
popf
adc
pushl
push
cmpsb
in
lcall
loop
dec
nop
cmp
adcl
ret
inc
xor
pop
rolb
xor
jecxz
sub
aad
sbb
ret
test
cld
push
cmp
out
xlat
inc
stos
sub
xchg
bound
adc
call
icebp
aam
sub
mov
push
mov
sub
repz
or
push
sub
ss
dec
scas
xchg
pop
or
out
pop
addr16
sbb
dec
ds
inc
nop
je
and
outsl
fnstenv
sti
pop
fcoms
push
xor
or
adc
pushf
jle
push
das
ret
mov
jge
and
and
sbb
ja
jp
and
lds
fcmovb
lea
das
add
jno
pop
inc
loop
repnz
sahf
js
xor
ljmp
push
or
mov
dec
into
add
or
fwait
pop
jge
test
inc
or
pop
stos
aaa
test
pop
mov
push
ds
test
add
arpl
fsubr
or
push
sbb
add
fdivrs
xlat
mov
idivb
fwait
pop
pushl
xor
adc
or
shrb
jp
pop
testl
popf
pop
notl
mov
test
filds
pop
mov
imul
loopne
lea
pop
mov
aas
call
push
pop
mov
adc
adc
and
pushf
jle
cli
mov
loop
arpl
cmpsb
jb
xchg
cmp
mov
push
push
jae
loopne
add
pop
sub
icebp
lods
or
sbb
jmp
inc
xor
nop
scas
imul
add
inc
xchg
xor
and
out
nop
jbe
repz
clc
or
xchg
xor
or
jl
cmpb
shlb
mov
or
into
mov
adc
mov
out
or
addb
popa
std
std
mov
pop
and
add
lret
ss
int3
addr16
paddw
lock
cmpsl
pop
fisttpll
cmp
test
sti
test
jmp
lock
mov
shl
sub
fdiv
adc
and
or
rorl
sub
test
leave
scas
jle
dec
jns
ss
roll
shr
pushf
and
push
lods
popa
int3
mov
iret
out
push
inc
aas
xchg
mov
mov
jo
mov
xchg
xor
adc
push
sbb
and
push
push
into
mov
lret
pop
mov
stos
cld
movsl
lods
test
jge
notl
jns
sbb
fld1
idivl
pop
sub
lcall
push
push
rcrb
mov
insb
mov
mov
stos
les
stc
or
mov
xor
in
rcrl
jno
mov
movsl
push
push
adc
sbbb
cmp
test
xchg
outsb
adc
inc
inc
adc
sbb
sti
sti
mov
rorl
inc
xlat
in
shl
test
xor
pop
adc
mov
nop
je
or
mov
and
dec
jbe
mov
movsb
push
push
or
loopne
mov
ret
je
jae
fnsave
pusha
sbb
xchg
xlat
outsl
lods
pop
pop
jp
jge
pop
cmp
or
sub
push
dec
jnp
fadd
dec
dec
jmp
mov
dec
cmp
daa
popf
adc
cli
mov
faddp
ja
int
mov
push
pushf
es
xor
rorl
stc
jle
stos
cmpb
mov
js
dec
mov
xor
mov
je
push
pop
or
pop
arpl
adc
mov
xchg
sub
xchg
scas
add
mov
add
xlat
mov
daa
jg
pop
pusha
jo
ja
loop
adcb
inc
lock
loope
imul
gs
pop
clc
and
repnz
xchg
mov
xchg
icebp
or
loopne
or
loop
add
idivb
int
cmp
xchg
int3
stos
jl
int
jp
divl
rcll
nop
insl
shlb
fisubrl
pusha
inc
fidivrl
sub
cmp
out
cmp
ja
fisttpll
call
mov
shrl
aad
pop
test
adc
ret
add
pop
mov
popa
inc
cs
sbb
inc
int
mov
cmp
mov
imul
mov
test
or
mov
push
int3
push
pop
jmp
pop
aad
mov
jl
inc
hlt
cmpsb
cwtl
jnp
call
mov
fwait
jo
sub
imull
jno
insl
sub
das
sbb
dec
adc
fiadds
sub
out
cmc
pop
xlat
imul
lods
fbstp
imul
shll
insl
scas
xchg
stc
loopne
xlat
sysret
adc
adc
ljmp
aas
jp
hlt
jmp
mov
ret
sahf
lahf
sti
in
les
nop
and
and
aam
add
mov
adc
adc
inc
hlt
movsb
xchg
mov
adc
mov
or
or
add
xchg
icebp
push
mov
push
sbbb
or
lret
mov
leave
push
mulps
xor
arpl
ds
fucomip
cwtl
sub
jno
lahf
fistpll
push
arpl
inc
mov
pop
lcall
cmpsb
hlt
cmp
mov
insb
dec
cmovns
aaa
jl
fcompl
pop
xchg
mov
mov
cmp
inc
mov
sbb
addr16
fwait
cs
mov
fidivrl
mov
jne
and
ret
cmp
mov
in
mov
inc
lods
mov
aas
mov
cli
imull
cmp
inc
push
pop
jl
pop
fmull
lods
outsl
fs
ret
test
ss
jmp
cmp
imul
nop
lds
dec
mov
jge
insb
adc
mov
jno
mov
rorb
sbb
outsb
movsl
in
addr16
stc
out
sbb
loop
dec
sbb
add
es
jno
cltd
mov
aaa
adc
lock
xchg
mov
jo
sbb
inc
hlt
add
dec
lods
shlb
into
jns
push
or
jge
adc
scas
or
sub
in
inc
ss
in
xchg
sbb
and
mov
loopne
cmc
sbb
sti
mov
xor
xchg
cmp
leave
aad
insl
push
int
mov
mov
cmpsl
pop
inc
pop
push
mov
das
mov
shll
test
xor
iret
xchg
outsb
push
bound
test
les
pop
sub
shrd
mov
popf
xchg
lea
in
scas
clc
gs
out
jg
or
xchg
cmp
scas
add
and
mov
sub
fldcw
cmp
jge
test
add
add
dec
mov
jo
adc
dec
aas
es
push
mov
mov
cmpsb
lds
inc
dec
xor
icebp
push
es
andb
xlat
push
adc
stos
sar
or
call
jg
aam
adc
test
fnstenv
dec
add
and
xor
jecxz
xchg
mov
pop
pop
scas
test
push
sbb
clc
shl
jne
sbb
dec
lods
jmp
push
icebp
mov
and
adc
movsb
call
shlb
and
stos
mov
repz
mov
jo
je
rcr
or
fsubl
movsl
add
cmp
xchg
xchg
ljmp
xchg
inc
popf
and
insb
or
fwait
je
movsl
pushf
or
stos
pop
sbb
repz
xchg
cmp
jmp
push
xorb
dec
and
shl
lahf
test
lods
push
xor
xor
testb
stos
cmp
cmp
inc
jne
fdiv
andl
xchg
fldl
subb
jg
fcoml
lock
lock
je
cmp
insb
cmpsl
mov
mov
jecxz
or
push
js
push
adc
cmp
cmp
mov
inc
clc
inc
fisttpll
shr
xchg
js
out
lret
ja
push
push
fimuls
pop
add
out
in
inc
sahf
push
stos
mov
sahf
or
push
cli
test
int
adc
cld
in
cli
fisttpll
cld
xchg
cmp
shr
fmuls
xor
ja
pop
jne
cli
mov
jo
fistpll
fmull
add
xchg
lock
push
mov
cmpsb
shll
xchg
mov
jge
in
in
pusha
or
das
lods
std
inc
jns
aam
sub
in
and
loop
jns
cwtl
cmc
push
shl
sub
out
inc
pop
sub
notb
sub
in
loop
push
jnp
cld
mov
lods
in
dec
cmc
mov
sahf
data16
inc
lock
divb
dec
ficomps
jp
pop
adcb
imul
loopne
inc
imul
add
popf
cmp
push
fs
mov
jbe
stos
ja
mov
out
dec
bound
or
js
scas
and
shll
test
rcr
or
xchg
inc
xor
aaa
cmp
bound
adc
push
fildl
mov
push
test
push
or
jns
pop
add
lods
or
sarb
xchg
test
push
fnsave
push
out
mul
jecxz
inc
sub
popl
mov
mov
mov
push
dec
std
jmp
daa
push
or
test
pushf
je
in
cld
test
sti
es
jg
je
iret
inc
dec
lcall
mov
movsl
push
dec
decb
sub
addr16
jne
hlt
sub
jb
mov
mov
sbb
mov
cmp
add
test
lock
push
pop
in
or
xchg
mov
sahf
inc
pushf
lods
ret
cmp
enter
pop
xchg
cwtl
into
xchg
es
scas
data16
fisttpll
out
pop
cmc
xchg
and
mov
loopne
mov
jbe
fs
ret
stos
fxch
lock
loop
push
adc
push
ret
and
mov
push
lret
dec
and
push
sbb
cmp
repz
mov
iret
orb
xor
or
pop
fstpl
mov
and
loope
ret
mov
xor
cmp
pop
pop
test
dec
dec
jae
movsb
dec
lds
push
shlb
pop
pop
movsb
jb
aas
filds
add
push
sbb
pop
fldt
daa
cmp
repnz
or
mov
xchg
and
movsb
sti
xor
dec
test
mov
jne
push
add
mov
add
sarl
pop
pop
pusha
mov
xlat
or
fwait
add
pop
jmp
sbb
xchg
xchg
int3
lahf
jle
push
ss
ss
mov
pop
adc
test
jl
adc
mov
inc
jns
inc
int
push
cwtl
mov
ss
xchg
incb
xchg
cld
jns
ds
call
push
jl
mov
nop
out
fwait
pusha
dec
ja
dec
insb
xchg
arpl
loop
mov
ss
cmp
test
add
sti
test
into
xor
jmp
cmpsb
in
dec
and
dec
adc
mov
ljmp
dec
pop
push
fcomps
jb
cmp
and
jae
ss
popa
xor
aaa
inc
mov
xchg
xlat
test
pop
and
pop
test
jnp
sub
push
mov
repnz
mov
push
mov
or
cld
xor
push
repnz
test
mov
dec
cmc
xor
push
pop
inc
arpl
mov
and
mov
push
aad
lods
push
pop
or
fsubrs
and
in
sub
addl
mov
xchg
inc
xchg
out
jne
aaa
icebp
mul
mov
mov
pushf
fstl
or
jne
ret
aam
push
insl
pop
sbb
fcomps
push
cwtl
cs
incb
out
je
stos
push
lret
or
pop
into
sbb
aam
lods
lret
push
pop
shll
push
sub
pop
fidivrs
test
hlt
lods
stos
sti
xchg
mov
sbb
mov
movsl
not
add
jg
push
push
xchg
push
inc
mov
mov
test
jmp
cld
loop
mov
sub
fsubrs
in
cmp
ss
js
cs
mov
fdivs
inc
push
into
xor
aas
sub
pusha
dec
push
jbe
inc
jge
movsb
mov
xchg
cltd
sub
inc
cmp
inc
pop
inc
clc
push
int
aad
iret
pushf
lahf
mov
mov
lahf
cmp
jns
and
cmp
xchg
xchg
in
adc
and
mov
jne
sbb
lods
subb
sahf
std
stos
sbb
ret
sub
sti
xor
mov
inc
dec
jb
mov
outsb
jmp
scas
sbb
mov
arpl
push
mov
push
xchg
fdivrl
mov
in
mov
icebp
mov
dec
adc
lahf
xchg
push
mov
lret
inc
push
pushl
in
xchg
lock
outsb
mov
gs
das
enter
xchg
pandn
repz
or
aaa
clc
cmp
sub
cmp
jl
mov
cwtl
push
adc
jne
mov
cmp
xchg
les
test
pop
fs
jg
lods
push
add
js
out
jge
add
mov
pop
orl
xchg
addl
or
add
cwtl
add
add
std
xchg
jecxz
fimuls
movsl
loope
subb
add
fidivrl
xchg
adc
and
pop
imul
sbb
shrl
stc
lcall
xor
jbe
mov
push
roll
and
movsl
cmc
mov
adc
lss
xor
loopw
into
loop
bound
insl
call
in
int
rcrb
out
or
in
testl
and
push
push
movsl
mov
jp,pt
fidivl
dec
mov
adc
mov
or
xor
xor
enter
popf
or
dec
test
outsl
push
and
ret
fadds
data16
mov
push
gs
mov
mov
lret
xor
mov
adc
mov
xchg
xor
es
pop
inc
sbb
popa
addr16
fdivrs
lds
popf
xchg
daa
loope
mov
xlat
xchg
scas
pop
pop
cwtl
and
movsb
clts
int3
cld
cld
cli
sub
xchg
cmp
mov
ror
out
inc
inc
pop
xchg
and
lea
mov
jb
and
dec
fstpt
sbb
adc
lods
test
aaa
adc
xchg
and
inc
push
sub
mov
sti
dec
test
popa
adc
jmp
pop
aas
leave
xor
push
shll
arpl
jle
jae
fistpl
sbb
cmp
cltd
adcl
xor
inc
push
add
push
sbb
jbe
sbb
jecxz
dec
xchg
xlat
jp
xor
cwtl
push
jno
sahf
mov
jp
mov
test
outsl
psrld
and
scas
xchg
dec
and
pcmpeqd
int
jg
and
adc
sahf
mov
sub
addr16
movsb
test
sub
add
mov
sbb
dec
mov
fs
pop
fwait
inc
addb
or
outsl
pop
scas
insb
imul
shrb
out
sub
mov
push
pop
mov
das
lock
or
xor
sub
pop
pop
and
out
and
jecxz
cmp
sub
cmp
push
mov
inc
and
and
inc
mov
call
fmuls
lret
jns
push
popa
rclb
je
pusha
and
cmp
movsl
xchg
test
aas
movsb
jmp
pusha
cmp
cmc
mov
les
xor
jle
jp
sbb
and
pushw
addr16
in
repz
and
mov
jb
loopne
or
mov
popf
ficoml
imul
jmp
fildl
in
add
out
iret
imul
adc
and
dec
cmpsb
push
add
sub
cmp
cwtl
lock
add
push
sub
insb
loope
daa
jg
xor
stos
xchg
jnp
and
cltd
sbb
and
dec
jecxz
add
fnstcw
dec
shr
sbb
lods
rcrb
clc
xchg
sub
movsb
add
mov
inc
pushf
add
insl
jns
sub
leave
add
test
dec
out
lret
cmc
stos
lock
imul
push
cmp
jo
stos
xchg
fisubl
ret
lods
cmp
mov
movsb
push
js
divl
rclb
cmpsb
fimuls
pop
cwtl
imul
test
out
jns,pt
rolb
push
lea
movsl
mov
lods
int3
mov
push
test
mov
std
loopne
orl
inc
push
adc
call
xor
sbb
jg
nop
dec
iret
sub
imul
mov
push
mov
add
cmp
out
cs
mov
lcall
push
or
push
lea
and
and
sbb
outsb
adc
push
adc
sahf
mov
sbbl
pop
or
push
loop
enter
push
std
lret
add
cs
popa
push
inc
sub
xor
mov
pop
adc
lods
cs
imull
sbb
jp
pop
xchg
inc
ror
xchg
mov
xor
mov
and
and
dec
rorb
clc
data16
test
mov
push
fdivl
pop
pop
incb
dec
je
popf
xchg
mov
mov
mov
pop
rcl
and
cmp
push
dec
es
in
imul
or
insl
fs
mov
inc
ss
rcll
xchg
loope
dec
push
jbe
jbe
adc
stos
or
lcall
stc
jns
pop
inc
pop
jo
xorl
mov
mov
shrl
std
or
pop
mov
loop
add
push
js
ficomps
in
pop
scas
jmp
xchg
mov
inc
je
fwait
pushl
push
push
sub
lcall
xchg
or
or
xchg
int
push
mov
addl
fistl
xor
and
pop
dec
movsb
orb
or
push
xchg
inc
rorl
push
loop
mov
jae
fwait
pop
push
mov
js
fsub
sub
jecxz
in
adc
xor
mov
mov
mov
add
scas
out
xchg
mov
ret
rcll
pusha
push
inc
mov
js
and
sub
push
mov
jle
fisttpl
ficompl
out
in
leave
add
ja
cwtl
and
pop
in
jb
outsb
test
stos
mov
cltd
cmp
cltd
or
gs
sub
sbb
xchg
fcoms
mov
das
dec
nop
mov
adc
cmp
pop
arpl
pop
dec
pop
pop
adc
mov
sarb
sbb
es
inc
jno
ljmp
jno
jae
scas
inc
inc
adc
aam
scas
mov
dec
leave
pop
xchg
movaps
inc
mov
pop
adc
addr16
int
test
into
jne
ljmp
jg
xor
xchg
sub
or
mov
mov
pop
inc
mov
cmp
adc
add
outsl
mov
lds
imul
out
leave
xor
shl
in
std
jl
insb
idivb
aam
push
testb
imul
push
adc
gs
and
vphadduwd
or
dec
insb
cmpsb
add
inc
out
mov
cmpsl
mov
aas
lcall
rcrb
test
lds
dec
xchg
jg
push
xor
sub
xor
jmp
mov
mov
psrlq
mov
cld
pop
test
mov
cwtl
push
iret
mov
add
out
mov
dec
in
jge
scas
jp
mov
sbb
lahf
dec
pop
adc
dec
inc
mov
fstp
idivb
mov
add
jp
xor
pop
loop
mov
jge
cmp
scas
xlat
jp
mov
cmp
mov
xchg
aaa
test
loopne
push
pop
aaa
cmp
out
xor
insb
test
scas
insb
ljmp
test
divl
jnp
cmp
into
jmp
stos
adc
leave
push
sub
xor
sahf
mov
imul
roll
lahf
sbb
aaa
mov
addl
or
push
lret
xchg
mov
mov
insb
cmpl
inc
push
push
test
sub
pop
cwtl
or
add
imul
sbb
xor
inc
mov
adc
imul
and
sbb
rcl
mov
xchg
ficoms
mov
inc
cli
or
push
scas
cmp
xchg
outsl
add
imul
daa
movsb
mov
pop
mov
mov
xchg
cmp
imul
mov
mov
pop
xchg
shl
arpl
dec
arpl
mov
pop
push
add
xchg
pushf
and
mov
in
lods
cmp
sbb
in
addr16
fldl
adc
mov
lahf
mov
mov
insb
insb
lcall
push
mov
push
arpl
or
into
add
fidivl
shl
xor
mov
add
push
jecxz
hlt
imull
jge
cld
cs
aaa
test
fs
cs
mov
cltd
cmpl
dec
sub
and
daa
sarb
cli
sahf
jb
outsl
leave
jae
xor
push
cltd
pop
dec
and
push
sti
test
inc
mov
vpunpckhwd
pop
mov
aaa
imul
inc
daa
enter
jmp
add
jecxz
or
gs
fisubrs
jmp
mov
push
ss
adc
push
loopne
push
nop
jo
inc
cmp
sbb
adc
push
mov
mov
sub
insb
sbb
or
clc
addr16
push
xor
xchg
out
fdivrl
sahf
cmp
enter
push
insb
cmp
pop
loope
jl
pop
jl
les
inc
sub
subb
int
mov
jns
xor
pop
enter
sub
sbb
sub
push
ja
out
mov
bnd
jb
clc
sbb
adc
mov
cmp
and
out
outsl
mov
or
stc
or
push
mov
mov
sub
inc
pop
popa
mov
dec
repz
cld
or
gs
push
xchg
iret
push
cmpsl
nop
pop
xchg
sub
shrb
scas
dec
loopne
pop
push
mov
mov
xor
adc
arpl
icebp
sub
push
in
lea
test
adc
add
lds
dec
aam
sub
cs
ffreep
imulb
icebp
jb
xchg
dec
add
jp
and
vprotb
and
and
loop
mov
mov
add
aas
sub
dec
xchg
scas
xchg
cmp
inc
movsl
jae
je
or
inc
xchg
sub
into
pop
or
cld
fbld
sub
cmp
jb
inc
xchg
cmp
out
fimuls
cmp
insb
mov
push
cwtl
ljmp
xchg
adc
pop
push
shrl
out
sub
mov
jb
cmpsl
jmp
add
sub
inc
test
das
scas
xchg
js
jge
outsb
xlat
and
pop
shll
push
xor
mov
pop
or
pop
jl
orl
imul
scas
sbb
shlb
mov
lds
pop
shlb
shl
shrl
pop
dec
and
inc
cmpsb
aad
sub
mov
xchg
mov
ja
mov
shrl
xor
cmp
mov
pop
jae
cld
mov
sti
and
jg
sti
pop
pusha
adcb
xchg
adc
xor
dec
call
pop
jp
cld
pop
rcrb
iret
jge
mov
cmp
lods
shr
push
sbb
mov
xchg
mov
insl
mov
push
sbb
pop
jb
shl
push
out
mov
sbb
inc
jne
xor
and
repz
pop
add
shrb
cmpsl
adc
pushf
dec
pop
insb
cmc
add
pop
cmpsl
jno
into
mov
push
ss
pop
daa
dec
mov
rcrb
mov
loop
aas
dec
negb
dec
mov
bound
cmp
jb
mov
sbb
je
sti
cmp
fiadds
lods
sub
pop
push
fldenv
aad
pop
sub
jmp
out
outsb
test
cmpsb
xchg
scas
mov
xor
fsubr
cmp
das
flds
stos
in
aam
out
jns
jp
scas
cmp
cmpsb
lret
je
mov
mov
arpl
es
xchg
iret
jne
adc
jl
xchg
je
stos
dec
adc
repnz
and
and
ljmp
hlt
aas
add
push
or
rcl
adc
loopne
xchg
incl
pop
xchg
mov
subl
jno
adc
mov
rcl
sub
xor
in
mov
jp
pop
xchg
push
mov
mov
jbe
pusha
jmp
jb
fidivrs
pop
inc
cmp
xor
cltd
das
xlat
js
sub
add
in
jl
jmp
push
subl
pop
xchg
loopne
lock
cld
push
lahf
arpl
shl
sahf
fildl
aaa
jbe
push
add
sub
sbb
push
mov
dec
ret
call
dec
stos
xchg
or
insl
enter
xor
loopne
test
xor
pop
loope
mov
repz
lods
mov
xchg
sub
jmp
leave
mov
sub
mov
dec
adc
je
jp
fcomps
mov
push
popf
add
shrd
pop
movsb
xor
xchg
ljmp
add
scas
cmp
xchg
or
lds
and
add
push
test
je
sub
xor
jb
lods
push
cli
xor
xor
add
and
das
pop
orb
in
std
lret
mov
cmpsb
out
pop
es
push
add
das
filds
mov
in
and
repnz
fadds
lret
jecxz
xor
js
fs
mov
cmpsb
rcll
jno,pt
and
cltd
jle
sbb
or
pop
dec
and
data16
jno
les
into
pop
sahf
mov
cmc
sarl
cmp
insl
push
repnz
fwait
clc
mov
test
sbb
test
sbb
jecxz
jne
mov
movsl
pop
xor
fidivrl
in
pushf
std
xlat
lret
push
repz
add
push
mov
cmp
mov
pop
test
popf
and
sbb
lods
dec
and
sbb
mov
shl
lods
and
pop
enter
fsubrl
es
insb
ja
mov
sub
sbb
daa
gs
fisubl
xor
xchg
cli
dec
lret
lods
out
cmpl
xor
xorl
bound
insb
insl
outsl
mov
jl
pop
iret
and
fidivrl
adc
cmp
sti
sub
bound
cmp
ljmp
or
daa
scas
lcall
daa
sub
and
sbb
and
pop
daa
or
pop
arpl
incl
popa
push
mov
dec
sbb
push
out
int3
aas
adc
dec
sbb
popf
addb
or
sub
xchg
cmp
clc
or
lret
rcrb
push
jp
fnstsw
lock
mov
js
scas
test
jnp
iret
sub
jno
idivl
inc
fwait
inc
insl
mov
pop
lcall
push
das
testl
vmwrite
or
arpl
icebp
mov
mov
push
or
xor
jle
test
adc
fdivl
pop
data16
das
sub
adc
jne
rcll
mov
or
mov
fstl
sarb
in
xchg
mov
adc
loopne
mov
mov
inc
xor
dec
movsb
std
mov
jle
lcall
into
pop
roll
dec
das
pop
test
lahf
mov
xchg
jb
test
ljmp
dec
add
mov
mov
jmp
dec
imul
cmpsl
push
icebp
cmp
xchg
addr16
pop
inc
mov
mov
jmp
and
sarl
mov
inc
dec
jl
aad
mov
jecxz
jecxz
stos
push
xchg
scas
lret
jecxz
stc
push
xchg
jge
jl
insb
clc
cmp
add
test
into
cli
or
or
sbb
xchg
loopne
nop
and
jl
cmp
mov
inc
insl
or
mov
mov
xchg
mov
lods
jno
and
pop
jmp
mov
lcall
inc
pushf
insl
movl
fisubrl
stos
divb
je
nop
movsl
mov
sbb
push
and
jl
inc
or
add
adc
aad
xchg
cmp
std
adc
insb
mov
push
lret
add
jae
mov
push
data16
pop
cmp
test
nop
lock
mov
and
cmp
rclb
packuswb
and
pop
jbe
sarl
aas
cli
mov
sbb
inc
adc
jno
sub
inc
xchg
jge
add
sbb
or
dec
pop
scas
adcl
imul
cmpsl
in
jge
cltd
mov
stos
add
jp
add
scas
loopne
xchg
lods
mov
sub
xchg
je
in
pxor
xchg
into
mov
add
iret
dec
xchg
adc
jns
add
inc
in
pop
in
lret
ret
push
ret
cwtl
hlt
jno
xor
jecxz
xchg
add
push
out
enter
and
daa
cli
sahf
xor
pop
shlb
fidivl
cmp
pushf
out
mov
ret
sarl
add
notb
mov
mov
into
xchg
cwtl
or
cli
cmovge
mov
xor
stos
imul
clc
add
inc
cltd
gs
fwait
dec
fnstcw
scas
insl
mov
sub
push
push
mov
fxch
sbb
inc
push
jns
insl
stos
mov
mov
xchg
or
xor
adc
mov
ds
mov
ds
mov
test
inc
push
sub
imul
sub
out
lds
icebp
mov
xchg
cmp
js
je
repnz
sbb
mov
adc
xchg
adc
sti
mov
shll
insb
xor
sub
pop
sbb
pop
pushf
scas
test
ds
inc
dec
insl
mov
inc
cmp
enter
or
add
lods
rcrl
out
dec
push
sub
inc
jle
add
clc
std
mov
cmc
adc
loopne
xchg
fdivrl
cli
test
xor
or
shl
mov
icebp
pusha
mov
sbb
push
inc
mov
add
inc
clc
cmc
adc
bound
cmc
xor
outsl
pop
repz
fsubl
xchg
jg
dec
and
push
shlb
jl
push
inc
dec
or
cmp
adc
cmp
push
mov
push
insb
test
loop
xor
inc
movsb
lcall
aam
test
pop
sbbb
rorl
inc
xor
mov
clc
add
inc
in
sub
mulb
push
loope
lret
loope
xchg
pop
add
push
int
mov
adc
dec
or
adc
mov
popa
and
std
dec
addb
pop
jne
mov
xchg
out
add
into
insb
fnstsw
movsb
sub
mov
mov
cmp
mov
shrl
sbb
subb
mov
sbb
test
ds
mov
stos
rolb
mov
cmp
pop
push
cs
ss
pop
mov
xchg
test
daa
cs
in
mov
rcll
in
test
push
jmp
pop
mov
sub
fcom
test
and
jg
or
pushf
cmpsb
inc
pop
push
enter
jecxz
clc
lea
bound
mov
out
inc
xlat
decb
inc
push
pop
lds
bound
pop
in
jb
xchg
push
cltd
push
xor
inc
sbb
mov
adc
mov
xchg
push
nop
inc
sbb
push
pusha
lock
mov
cmp
cmp
adc
mov
inc
sahf
jl
out
je
and
pusha
mov
lods
shrb
ja
aaa
sbb
jmp
jle
addr16
mov
nop
add
mov
mov
fwait
ret
loopne
xor
sbb
cmpsl
data16
or
les
mov
sub
pop
shrb
roll
mov
push
scas
daa
push
mov
pop
aad
xchg
xchg
xor
jo
scas
mov
scas
cmc
mov
imul
andb
push
cmc
cmc
sub
nop
icebp
mov
addb
js
dec
fwait
into
cli
xchg
stos
outsb
cmpsb
int3
scas
adc
lcall
iret
mov
sub
leave
in
lods
rcrl
and
test
dec
int3
dec
push
shll
adc
adcl
add
stos
mov
mov
lods
push
aad
pop
test
fistpll
pushf
ljmp
repz
xor
jno
lret
hlt
into
add
lret
push
add
mov
pop
addr16
shlb
mov
cwtl
cmp
adcl
aad
hlt
push
pushf
rolb
imul
add
lds
xlat
loop
fimuls
inc
inc
add
add
sub
sub
push
ret
jle
xor
dec
cmp
test
lock
aas
xchg
flds
dec
int3
pop
outsb
adc
or
addr16
mov
cmp
jno
call
sub
insl
int
lods
pusha
xchg
jo
sub
and
test
mov
es
aaa
mov
repnz
sbb
dec
cmp
aas
xor
inc
int3
lret
pop
mov
mov
repz
xchg
mov
sub
sti
inc
leave
repz
and
cld
ss
repz
repz
sbb
jl
in
sbb
fadd
cmp
add
pop
mov
lret
dec
repnz
mov
insb
mov
xlat
mov
shl
dec
outsl
adc
push
and
imul
dec
loope
cmp
xor
mov
cmpsl
xorl
hlt
sbb
push
jl
jb
ja
mov
out
fnstenv
loopne
repnz
aas
ret
push
or
aam
adc
adc
jo
sarb
shlb
ror
sbb
add
mov
push
jmp
shll
rol
das
add
lcall
test
sbb
mov
fs
push
arpl
lock
pop
insl
push
int
push
mov
mov
sub
stos
push
test
cmpsb
fucom
popf
jmp
sbb
imul
imul
mov
pop
cmpb
incl
jge
push
cmp
test
clc
xorb
jbe
fidivl
enter
aam
mov
pushf
aaa
lret
mov
pop
je
mov
adc
fistpll
mov
xchg
call
scas
cmp
outsl
sar
jnp
scas
stos
sbb
xchg
pop
xchg
inc
jb
lods
sahf
data16
sar
aad
lods
cwtl
push
fnsave
into
sub
sbb
movlps
xorb
adcl
movsb
mov
jmp
rcr
push
push
enter
jl
dec
jge
movsl
dec
push
lods
xchg
test
jne
int3
imul
or
jae
gs
fucom
mov
xchg
push
push
push
mov
ss
repz
adc
insl
xor
xor
or
dec
mov
sub
pop
mov
ja
enter
xlat
dec
int3
mov
lods
loop
ss
fwait
mov
stos
add
mov
and
icebp
push
fs
xor
je
cltd
pop
or
pop
cli
xchg
xlat
or
fsubl
xor
push
inc
in
and
scas
sub
insb
rcrb
jl
sbb
pop
and
push
fsubrp
sbb
shlb
out
stc
movsl
cmp
fdivs
mov
and
stos
dec
cmc
sub
adcl
in
pop
jecxz
dec
bnd
mov
push
dec
inc
xchg
add
jno
adc
sbb
mov
aaa
fs
adc
xchg
mov
test
xchg
cmp
imul
sub
xchg
ret
scas
into
aas
sub
or
mov
movsl
lahf
cld
lahf
lds
fdivr
adc
insb
mov
lock
push
cmp
jnp
pop
scas
push
jo
jecxz
dec
popa
scas
mov
and
pop
add
std
jp
jnp
sti
pop
add
and
arpl
cmp
and
test
xchg
xor
mov
imul
xor
in
lea
imul
data16
out
lea
mov
cltd
out
repz
adc
jo
xchg
mov
icebp
lret
mov
loopnew
mov
aad
sub
mov
ja
jae
jns
jbe
repz
cwtl
adc
mov
pop
aam
push
push
lds
xor
imul
imul
or
pop
ds
and
out
out
push
ret
pop
mov
jne
jbe
adc
jl
adc
dec
or
mov
pop
stos
xchg
ret
fmull
mov
hlt
sub
push
jns
int3
loop
mov
cmp
cmc
out
int
notb
sbb
ret
std
mov
and
and
cmp
xchg
dec
cmc
fstl
push
adc
pop
mov
out
lea
scas
jb
jnp
int3
sbb
mov
inc
mov
or
jp
xchg
and
fwait
ds
xor
xchg
ficoms
into
push
aad
pop
imul
std
test
sub
pop
adc
xchg
pop
jmp
adc
mov
inc
sub
pusha
dec
push
popf
jmp
xor
inc
gs
push
push
sbb
lcall
xchg
cwtl
pop
mov
mov
ljmp
push
or
pop
test
mov
shrb
fcoml
jae
and
mov
es
inc
adc
cmp
mov
ja
aas
sub
mov
ror
mov
sbb
inc
je
popf
in
inc
f2xm1
mov
fnstsw
test
jmp
adc
ret
fmull
or
dec
std
repnz
inc
xchg
push
loopne
xor
bound
mov
push
jle
shll
mov
insl
or
jp
movntq
out
mov
imul
dec
ja
sbb
inc
out
inc
ja
adc
jb
mov
loopne
scas
jno
fcoml
xor
or
and
adc
repnz
scas
mov
xor
jg
stc
or
add
and
push
data16
cmp
arpl
mov
aas
jecxz
jecxz
ljmp
test
mov
mov
mov
popf
leave
or
imul
pop
mov
cmp
loop
mov
out
mov
xor
cltd
popf
mov
jae
jo
or
xchg
push
pop
lcall
js
pusha
inc
mov
gs
cmp
add
repz
inc
cmp
and
popf
ja
imul
cs
in
ss
sub
into
sahf
in
xor
dec
jno
outsb
cmp
ror
dec
xchg
push
push
lds
adc
lfence
mov
push
mov
je
mov
cmpsb
fstl
rcrl
and
lds
in
jbe
mov
pushf
jmp
mov
nop
out
xchg
dec
mov
imul
int3
mov
aaa
jmp
neg
cmp
pop
xor
cmp
nop
nop
fs
ret
les
lcall
test
dec
ficoms
push
xchg
push
and
push
xchg
cmpsb
jg
sbbb
xor
mov
push
sbb
enter
jp
dec
fnsave
xor
sbb
data16
sbb
add
fisttpll
lock
mov
mov
lahf
xchg
inc
inc
fidivs
pop
stos
loope
in
stc
mov
xchg
in
movsb
cltd
cmp
mov
jno
lods
add
arpl
dec
mov
sarl
push
sub
in
test
fnstsw
pop
jle
push
pushf
jne
loop
mov
stc
fldcw
aam
push
outsl
outsb
or
inc
dec
mov
mov
scas
ret
xchg
pop
xor
adc
imul
repnz
add
lret
xchg
sub
shrl
dec
rcrb
ja
mov
repnz
out
stos
jmp
pop
mov
jbe
mov
imul
data16
ds
das
fs
gs
xor
mov
test
mov
fdivl
lcall
push
pop
std
jne
hlt
hlt
sub
cwtl
xor
xor
push
mov
cli
sbb
pop
fucomip
sbb
inc
add
add
cmp
add
aam
enter
test
gs
scas
jo
adc
pop
cmovo
fdivrp
sbb
jno
push
pop
mov
sub
data16
cmp
lahf
mov
pop
xchg
insb
int3
fsub
xchg
sub
sub
dec
sbb
add
lcall
pusha
push
data16
mov
xchg
in
bound
js
dec
xchg
nop
and
inc
jg
into
pop
outsb
xchg
lea
mov
xchg
push
adc
jns
lahf
adc
sbb
xchg
pop
btr
inc
dec
mov
inc
mov
push
cmp
jp
insl
stos
sbb
sbb
sbbl
cmpsb
jnp
aaa
jp
mov
inc
ja
jno
push
fistpll
fs
lcall
or
mov
into
pusha
mov
jns
jns
and
scas
inc
cmp
clc
mov
pop
in
incb
aad
int
and
or
mov
mov
jo
jecxz
push
mov
dec
sbb
sbb
pusha
dec
movsb
int
sbb
clc
insb
and
adc
sbb
dec
inc
xchg
repnz
cmp
and
sbb
sub
in
add
push
fs
add
mov
cmc
daa
add
mov
les
jle
mov
inc
jge
xchg
dec
test
js
jnp
lods
dec
mov
mov
mov
les
inc
jno
mov
cmp
iret
mov
dec
xchg
jno
in
push
popf
dec
das
fistps
sbb
cmc
subb
cmp
fsubl
test
adc
xor
cmpsl
cltd
inc
cltd
jge
out
sbb
cmp
test
push
pop
scas
mov
ljmp
cmp
xchg
cltd
cli
mov
jp
mov
test
in
pop
aam
repz
mov
pop
mov
mov
bound
fwait
adc
xor
push
scas
mov
sub
int3
pop
push
les
add
fildll
sub
por
mov
mov
mov
inc
push
jns
push
sbb
rorb
scas
and
shll
and
pop
mov
mov
enter
aad
and
xor
and
and
test
inc
call
add
in
jp
test
jb
out
mov
push
xlat
adc
cmc
jp
jl
xor
jo
div
mov
stos
sub
lods
gs
scas
ljmp
sbb
sub
lcall
mov
sahf
dec
movsl
push
xchg
xor
daa
push
cs
pop
cmp
mov
shld
fsubrl
push
aaa
sub
pop
jae
xor
jle
dec
sbb
jns
and
xor
insb
xchg
fsubrs
int
adc
das
jle
in
adc
das
repnz
das
push
push
fbstp
hlt
push
inc
icebp
cmp
lock
or
imul
xchg
and
push
mov
mov
idiv
mov
lock
push
dec
mov
push
ss
cli
cmp
adc
push
iret
stos
push
stc
mov
xchg
addl
ds
xchg
in
fcoml
cltd
adc
ret
clc
je
xor
jmp
cmp
enter
sbb
gs
ret
addr16
jno
jmp
mov
cmpsb
push
xchg
jns
cld
jl
mov
push
fdivl
and
mov
movsb
fldl2e
arpl
xchg
bound
jns
pop
sti
cwtl
dec
mov
xchg
pop
xchg
and
pusha
or
sbb
dec
or
push
inc
mov
and
repz
and
xlat
and
push
xor
mov
pop
sbb
sbb
mov
test
pop
inc
mov
sti
fsubrs
jae
movsl
adc
xchg
arpl
xchg
xchg
xlat
pop
pop
sbb
push
filds
xor
pop
rorb
mov
frndint
popf
dec
ret
xor
push
jo
dec
mov
add
or
jnp
jp,pt
cmp
dec
mov
add
mov
movsb
fs
jge
loopne
sbb
push
and
lret
mov
rclb
push
out
sub
fwait
cmp
mov
and
lea
push
adc
push
mov
push
pop
add
out
mov
and
je
jb
inc
cmp
xor
jl
negb
repz
cmc
or
lods
sbb
test
push
mov
sbb
add
movsl
sbb
jl
jl
hlt
jl
pop
xor
loopne
sub
dec
aaa
inc
fwait
cltd
das
test
rcr
lret
sbb
out
pop
iret
jg
out
inc
test
jns
insl
loope
cmp
or
or
in
cmpsb
pusha
test
fistpll
fwait
or
inc
push
call
cld
push
nop
push
in
jns
outsb
lods
jl
mov
pop
hlt
dec
xchg
pop
jmp
into
cli
and
ret
xchg
dec
lahf
insl
pusha
gs
scas
push
sbb
pop
jg
shl
add
mov
pop
loop
or
and
syscall
xor
add
mov
adc
jbe
popf
vpunpckhqdq
in
or
das
js
jle
mov
jae
xor
mov
int
mov
xchg
inc
and
jg
fisubs
insl
xchg
std
out
fmuls
dec
sbb
retw
sbb
push
dec
dec
jae
cmp
jnp
jbe
mov
push
test
fisubs
xor
repz
sub
sub
ror
insb
into
mov
xor
adcb
mov
test
xor
nop
ret
push
xlat
mov
clc
mov
out
push
mov
pop
pop
mov
add
loop
std
dec
add
inc
mov
sbbb
or
shrb
loopne
jne
inc
int
mov
cltd
dec
mov
adc
ja
adc
adc
dec
cwtl
sub
cwtl
pop
jb
arpl
add
fs
xchg
pop
ss
dec
lcall
dec
js
xor
sahf
fbld
and
mov
push
iret
mov
lock
xchg
xchg
push
dec
repz
scas
inc
loope
js
in
dec
lock
xor
data16
mov
mov
ffree
sbb
mov
cwtl
shlb
adc
shlb
add
addr16
addl
rcrb
pop
arpl
sbb
mov
int3
xchg
fucomp
aam
jno
ficoml
enter
cltd
scas
out
fxch
aas
push
mov
aad
dec
push
aas
pusha
mov
push
sahf
dec
leave
jnp
adc
mov
sbb
test
lods
push
and
shll
hlt
fidivrl
in
insl
in
jo
xchg
sbbl
mov
push
addr16
outsl
jae
ret
mov
imul
shll
outsb
and
xchg
add
out
les
mov
mov
sahf
div
clc
repnz
or
jmp
loope
sbb
out
mov
dec
es
into
insl
and
push
cmp
lock
movsl
je
jb
sbb
int3
adc
test
xor
mov
jp,pn
int
mov
ret
jo
test
dec
fnstcw
stos
jmp
int3
outsb
mov
ds
stos
addr16
and
sti
sahf
leave
adc
mov
roll
rcr
jg
frstor
cmp
sub
inc
in
mov
js
sub
jno
pop
sub
xchg
and
mov
data16
lahf
fisttpl
cmpsb
divb
pop
mov
pop
in
add
call
into
pop
add
cmp
pop
xor
bound
scas
add
ja
fidivrs
sbb
push
sbb
dec
nop
mov
xchg
dec
and
jmp
in
das
push
fildl
in
dec
fiadds
pop
orb
mov
adc
mov
in
jbe
lock
fstps
scas
cmp
lahf
mov
cmp
and
stc
enter
cmp
fstl
push
shlb
xchg
outsb
push
stc
push
and
mov
ror
push
lea
inc
daa
cmpsb
dec
adc
imul
cmpb
xchg
aad
and
push
inc
imul
push
addr16
sub
rcrb
mov
sbb
out
fcmovbe
bound
jb
pop
pop
loope
ss
jl
mov
fcmovnbe
push
xchg
je
stc
pop
xor
test
xchg
daa
pop
test
in
inc
in
ljmp
add
inc
adc
cltd
inc
cmpsb
jae
or
fwait
insl
inc
or
js
movsl
xor
inc
std
adc
xor
mov
jns
outsb
push
int
cld
cwtl
jg
jmp
aam
stos
in
popf
xor
xor
ja
jnp
mov
ror
mov
repnz
dec
enter
inc
push
test
bnd
jge
js
psrlw
sub
fcomps
jbe
arpl
mov
aam
je
dec
cmp
xor
mov
xchg
push
pop
push
cs
mov
es
out
pinsrw
jle
jg
lock
adc
cs
lret
pop
adc
mov
std
fcoml
jle
clc
daa
cmc
pop
jecxz
testb
ret
addr16
jno
mov
outsb
repz
mov
idivl
loopne
mov
in
lret
xchg
movhps
cmp
ja
sti
pop
xchg
mov
jg
jbe,pn
mov
mov
mov
xchg
fildll
incb
lret
xchg
pop
adc
mov
lea
lods
loop
fildll
mov
mov
mov
loope
xchg
movsb
in
or
fwait
sub
fcoms
jne
pop
mov
inc
pop
xchg
mov
test
xor
call
es
adc
popa
mov
cmp
xor
nop
adc
leave
daa
jmp
push
and
add
or
hlt
sbb
notl
pusha
mov
xor
cld
push
dec
popa
jp
add
dec
push
rclw
repnz
cmp
aad
push
nop
jg
stos
xlat
and
sub
mov
push
xchg
dec
stos
fwait
pop
mov
mov
xchg
xor
dec
int
adc
mov
lea
inc
pop
pushf
add
test
inc
mov
push
shl
adc
and
mov
and
or
and
outsb
lods
pop
in
sbb
fcoml
cmp
push
mov
mov
inc
aas
xor
popf
xchg
xor
lock
sbb
mov
add
pop
leave
push
push
cmpsw
xor
push
push
repz
mov
cld
and
cld
sbb
mov
in
cmpsb
out
xchg
mov
movsl
dec
data16
push
sbb
arpl
dec
dec
addr16
cmpsl
xor
xchg
fwait
std
sti
or
jbe
gs
and
xchg
nop
jge
mov
clc
or
div
sub
mov
jle
jmp
jae
sub
adc
jp
jnp
int3
imul
jl
mov
and
push
imul
sub
int3
cmp
adc
insb
pop
das
stc
shll
mov
dec
addr16
mov
mov
pop
pop
hlt
sub
mov
mov
movups
adc
test
and
aad
xchg
das
andl
in
jno
sub
addr16
lret
pusha
and
and
pop
mov
loop
push
fistpl
dec
stos
imul
in
add
fnstcw
imul
fdivrs
pop
jns
jae
aaa
ss
fnsave
mulb
xor
inc
cmp
mov
push
pop
loop
fimuls
pop
loope
imul
xor
out
push
mov
aaa
push
jo
mov
sbb
pop
repz
les
xchg
xchg
add
out
sbbl
movsl
jo
jne
mov
movsb
xchg
insb
mov
pop
pop
loopne
fdivrl
adc
mov
mov
ret
jl
xchg
jecxz
add
xor
sbb
test
add
stc
enter
mov
add
mov
and
into
sub
push
decl
daa
in
imul
das
mov
rolb
imul
pop
outsl
pop
xchg
or
inc
into
xor
into
mov
out
jmp
mov
jecxz
rep
push
subb
sub
add
cs
inc
and
adc
incl
je
in
imul
push
pop
mov
mov
xcrypt-ctr
cmp
or
test
sbb
repz
jp
and
mov
out
imul
add
adc
int
aas
lahf
jbe
outsl
repz
in
xor
pushf
call
inc
jmp
inc
sub
in
mov
push
fsubl
and
mov
pushf
fcoms
dec
adc
jne
or
lcall
sbb
and
test
mov
out
jnp
dec
jp
call
cmp
out
mov
jecxz
and
rcll
sahf
std
ret
js
jg
insl
and
push
cmp
jnp
movsb
cs
fldenv
mov
fwait
leave
push
sub
out
inc
out
jmp
pop
add
mov
faddl
in
pop
cmc
jbe
jge
das
sti
mov
dec
stos
ret
aam
inc
push
ss
mov
push
std
lods
stos
mov
pop
push
xchg
mov
imul
rep
jbe
sbb
lahf
sbb
lcall
adc
fisttpll
and
arpl
fwait
shlb
daa
jmp
hlt
adc
mov
sub
rorb
sub
pusha
cs
mov
mov
imul
mov
outsb
add
jne
inc
and
mov
call
push
dec
mov
iret
xchg
inc
xor
cmpsl
fwait
in
idivl
out
fwait
or
fldcw
jns
and
imull
icebp
sub
test
icebp
jno
int
std
jecxz
sbb
sar
pop
dec
arpl
adc
mov
pop
in
push
cltd
sarb
sahf
sti
and
lods
sbb
ja
xor
inc
out
sub
addr16
xchg
mov
push
aad
push
call
jb
fistpll
aam
mov
jo
xchg
mov
cmp
insl
cmpsb
imul
mov
push
and
xor
xor
xor
dec
jbe
add
jo
hlt
sbb
sub
push
inc
add
cmp
pushf
xor
jge
adc
cmc
dec
aaa
fisttpll
aad
rol
mov
fsts
pop
outsb
dec
or
sahf
das
rclb
fcompl
cmp
jbe
add
in
xlat
dec
adc
popf
mov
dec
pop
pop
push
insb
cltd
stos
sbb
rclb
ds
pop
cmpsb
adc
cmp
ret
sub
rcll
nop
addb
xor
jns
xor
outsl
jg
fsubrs
xchg
mov
pop
mov
mov
dec
inc
add
mov
sub
dec
es
sbb
cs
mov
lret
inc
jmp
int3
add
xor
enter
and
lcall
ret
sbbb
pusha
add
dec
xchg
addr16
in
mov
jge
ss
inc
sub
jp
or
mov
cmpsb
pop
add
push
pop
inc
lcall
ret
rcll
jg
repnz
jmp
in
jmp
xor
push
fwait
jmp
scas
arpl
andb
and
xlat
andb
jmp
out
sbb
mov
lret
jl
inc
aad
sub
insb
aad
fadd
dec
push
inc
pop
push
call
pop
sbb
addr16
arpl
out
ss
fiadds
mov
sub
mov
mov
pop
mov
xchg
pop
push
ret
outsb
sahf
in
and
dec
mov
cli
pop
add
add
pop
sbb
jae
insl
add
push
pusha
bound
cld
pop
lock
test
sub
paddb
pop
sub
sub
std
ficomps
adc
dec
pop
push
sub
mov
xchg
and
loope
dec
xor
fisubs
sbb
movl
ret
adc
xchg
sub
pop
mov
int3
sarb
pop
adcb
fdivrp
test
inc
xchg
aaa
pop
xor
cwtl
out
fdivl
push
jnp
not
test
subl
push
xchg
ffreep
mov
push
dec
cld
test
mov
or
pushf
or
cltd
jge
jb
add
dec
subl
dec
ret
je,pt
jb
push
int
imul
dec
xchg
mov
xchg
mov
in
sub
jle
lahf
lahf
lock
and
jb
lahf
adc
fwait
adc
rclb
cld
sbb
repz
dec
inc
int
out
fldt
add
fcmovbe
push
rclb
xchg
sbb
mov
jae
stc
jge
push
mov
test
cmpsb
cmc
jle
gs
and
in
pop
sbb
rol
clc
inc
adc
gs
cmc
pop
add
shll
and
add
outsb
xor
into
mov
mov
push
dec
jle
mov
mov
and
mov
jnp
cmpsl
push
cmp
or
imul
inc
dec
cmp
lret
je
stc
pop
jnp
sbb
sti
lcall
cs
xchg
push
xor
js
jle
sti
add
popf
sub
subb
in
cmpsl
xor
xrelease
push
push
pop
mov
adc
sub
sub
sbb
loope
sahf
addl
xchg
fidivs
les
addr16
xor
push
push
sub
mov
jnp
popl
mov
scas
cli
sub
add
in
mov
fwait
out
push
pop
std
sbb
enter
push
mov
mov
mov
jp
loope
movsl
stos
sbb
lahf
mov
mov
outsl
shll
adcb
add
pop
pushf
push
idivl
adc
outsl
dec
jg
daa
xchg
aas
cltd
cmp
into
out
fwait
push
orb
pop
lret
sub
ds
stos
es
and
ret
arpl
test
jbe
shrl
cmc
push
bound
cmp
or
mov
cmp
xor
mov
jne
cmp
sub
es
push
mov
ds
test
mul
push
jecxz
pop
jae
xchg
rcrb
cmc
int3
xchg
inc
adc
jecxz
dec
mov
call
shll
sbb
pop
lods
xor
addr16
push
and
jl
xchg
jo
xchg
cmpb
ret
popf
gs
mov
jae
lds
repz
add
stos
loope
mov
xor
pop
sub
int
xor
jg
inc
loope
jb
lea
mov
mov
aad
notl
js
fistps
aad
jo
jl
flds
shrl
push
mov
or
jle
or
inc
jg
in
pop
sti
fmulp
sbbl
pop
or
pop
mov
outsb
loope
mov
pop
repz
xor
adc
cmpsb
shlb
xchg
or
adc
sub
mov
popa
jecxz
je
jle
xor
and
xchg
cmpsb
mov
add
dec
push
popa
aam
imul
sub
xchg
push
loopne
in
std
mov
movsl
out
add
lahf
shlb
dec
mov
dec
fadds
hlt
push
adc
jmp
in
in
sbb
mov
repz
mov
adc
mov
mov
dec
sbb
lcall
push
jle
xorb
ss
sub
sbb
and
jge
adcb
sbb
or
fimuls
sti
xor
mov
push
scas
sbbb
and
nop
pop
arpl
cmpsb
fstpl
shl
jl
stos
inc
cmp
hlt
test
mov
cltd
cmp
sub
ret
inc
ret
xchg
repz
xor
cs
shll
mov
test
xor
mov
and
data16
jl
inc
divl
adc
call
stos
pop
sbb
ret
xlat
out
aam
dec
fidivl
xchg
movsl
in
pop
imul
sub
jecxz
push
nop
sub
xchg
push
imulb
add
les
add
scas
mov
cltd
or
xor
lret
mov
enter
in
or
sub
in
push
mov
mov
sti
stos
rcrl
test
mov
popf
lret
es
xlat
pop
cmp
mov
mov
dec
push
adc
mov
xor
fs
mov
xchg
das
pop
mov
mov
or
pop
xor
fsub
gs
adc
cmp
mov
rorb
sbb
test
or
clc
dec
xchg
xchg
sbb
add
in
rolb
pop
push
sub
test
test
xlat
lock
push
enter
jb
dec
loop
subl
sbb
into
or
shr
cmp
sbb
lahf
push
and
flds
or
iret
cs
fisubrs
jmp
push
jle
jnp
lret
mov
adc
inc
pop
call
mov
lods
sub
or
push
andb
xor
je
lret
pop
ljmp
jge
outsb
mov
mov
xor
hlt
scas
test
mov
insb
popa
pushf
mov
rolb
adcl
sbb
rorb
cmpsl
jmp
and
mov
cmc
cli
dec
testl
in
mov
int
movq
xor
hlt
int3
inc
pop
xor
or
add
jge
dec
notb
cld
addr16
leave
scas
mov
adc
jne
movsb
loope
aaa
dec
fdivr
cmp
xor
loop
lods
pop
push
cmp
mov
inc
mov
inc
popl
sub
test
popf
movsb
cmp
ja
lcall
sub
out
inc
out
aaa
add
enter
pop
xor
xor
xchg
lods
and
jae
add
pushf
sahf
and
or
dec
mov
xorl
mov
ret
ljmp
push
add
xchg
fs
mov
dec
sahf
in
call
mov
jbe
shll
add
mov
scas
pop
outsl
int
in
mov
jae
and
sub
xchg
or
push
xchg
mov
inc
sahf
and
pop
mov
adc
push
les
push
aad
test
pop
add
push
inc
adc
jp
sarl
ja
aad
dec
inc
loopne
pop
scas
mov
push
in
into
je
lods
pmulhuw
les
sbb
push
gs
in
and
xchg
mov
sbbl
sub
not
jbe
data16
popf
cmc
sub
mov
imul
das
push
xchg
push
jo
push
shrb
test
int3
mov
fisttpl
stc
or
adc
push
jne
add
jno
jmp
enter
push
outsl
jne
ficompl
incl
adc
push
sub
mov
pop
fbstp
sbb
xor
xor
jo
xchg
rclb
jle
and
push
std
push
mov
and
dec
icebp
test
nop
xor
adc
movsb
push
mov
add
sbb
add
xor
test
inc
xor
mov
in
hlt
mov
lret
enter
outsb
lret
xlat
and
hlt
push
add
sub
aad
lea
add
mov
or
test
aam
jae
sub
xor
adc
dec
les
push
jge
pop
stos
sub
dec
xchg
enter
loopne
test
mov
out
add
xchg
pop
lea
lcall
out
mov
cmp
jo
inc
add
nop
add
inc
pop
sahf
mov
gs
roll
push
mov
lcall
or
outsl
sbbb
aaa
int3
lods
negb
ds
call
test
sahf
daa
icebp
adc
fs
jns
dec
addr16
lahf
mov
shll
imul
outsb
xor
jmp
xorb
mov
cmp
shlb
push
jp
jl
pop
leave
stos
mov
pop
bound
mov
icebp
icebp
int
rcrb
fs
shlb
or
mov
pop
lret
dec
test
stos
inc
mov
pusha
jnp
imul
mov
cmp
stos
outsb
out
jne
mov
into
int3
aaa
xchg
xor
outsl
cmp
das
shlb
aad
mov
outsl
cltd
mov
mov
ret
cmp
shlb
data16
add
imul
mov
push
mov
add
out
test
addr16
xor
lds
addb
pop
dec
das
sub
cmpsl
mov
and
ret
test
stc
jne
nop
mov
inc
ret
mov
stc
lahf
imul
in
fists
adc
mov
leave
xor
scas
jl
lods
adc
into
sbb
add
stos
cmp
sbb
fs
lds
popa
inc
insb
sbb
inc
subb
mov
hlt
mov
popf
ja
std
cmp
test
jnp
sti
jle
xor
cmp
addr16
movsb
jae
pushf
mov
or
cmp
push
jno
jne
xchg
lods
outsb
lds
repnz
rolb
xor
add
cmc
sub
stos
pop
mov
cwtl
pop
pop
insl
cld
mov
nop
mov
ret
add
jo
xor
inc
out
sbbl
mov
pusha
stos
lods
daa
xchg
or
mov
jp
in
push
push
imul
out
or
and
and
jecxz
cmc
stos
mov
leave
pushf
push
or
dec
sub
xlat
shl
xchg
mov
ficomps
je
xlat
pop
pop
scas
imul
daa
scas
cli
fisttpl
or
pop
mov
xchg
loope
xor
shll
mov
pop
sahf
sub
cmp
pop
fsts
xlat
xor
jb
xchg
out
fnstcw
out
cmpsl
rcl
mov
xlat
push
maskmovq
idivl
add
hlt
jg
into
loopne
movsl
jae
pop
jge
aad
popa
dec
mov
rcll
std
outsb
popf
sbb
pushf
add
shrl
sbb
adc
xor
adc
shlb
mov
fstpl
ficomps
inc
jg
xlat
or
adc
xchg
add
push
test
xchg
lcall
outsb
mov
mov
adc
pop
cmp
push
test
mov
sti
repnz
inc
and
jns
xchg
movsl
pusha
mov
jae,pn
orb
sbb
sub
mov
ficompl
sub
into
add
sbb
sti
sbb
pop
push
faddl
pop
in
or
mov
out
imul
mov
mov
mov
dec
xchg
ja
sbb
jb
arpl
fs
or
adc
cmp
out
jns
fidivrl
and
fwait
nop
jle
sbb
or
sbb
aas
jbe
jl
xchg
jno
add
lret
pop
or
mov
add
fwait
push
add
out
sub
ja
pop
xlat
xor
push
adc
shr
out
jb
push
insb
movsl
inc
adc
push
rcl
sarb
ljmp
imul
jle
jns
jb
push
int3
add
jl
cmp
icebp
cltd
jnp
xor
push
mov
scas
xchg
aas
popf
test
cmp
xlat
pop
loope
dec
push
in
jmp
repnz
movsl
dec
inc
mov
dec
jae
push
xchg
xor
mov
adcb
int3
loop
dec
imul
test
ja
adc
jno
cmp
dec
out
adc
xchg
add
sub
bound
movsb
mov
je
mov
add
xchg
inc
add
imul
bound
adc
push
into
inc
sub
jbe
lahf
mov
xchg
sbb
cmp
lods
fimuls
shl
aas
mov
push
mov
fcoms
push
or
sbb
std
fs
sti
or
adc
jp
lock
mov
outsb
adcl
xchg
dec
jne
repz
cli
imul
lea
pop
jg
or
sub
ja
shll
xor
adc
ret
lods
test
add
sub
and
inc
pop
sbb
and
jbe
in
jle
cmp
or
jo
pop
adc
lcall
test
int
fs
push
add
sbb
xorl
and
orl
lahf
pop
shlb
pop
scas
push
push
jo
push
xchg
xor
cmp
sub
lods
pop
stc
icebp
add
or
ret
cmpsl
ss
fnstsw
pop
lea
adc
jo
lcall
inc
imul
sbb
cli
scas
cmp
rol
icebp
push
aam
sub
push
pminsw
in
sbb
cmpsl
pop
lea
jl
xor
aaa
outsb
arpl
popf
test
sbbl
sbb
jno
icebp
rorb
sub
fnstsw
adc
aad
fstpt
outsb
jmp
and
and
push
shrb
push
inc
ja
scas
push
jo
scas
cwtl
adc
out
mov
mov
iret
mov
lret
and
cli
pop
pop
mov
mov
jne
cwtl
xchg
ljmp
stos
push
xor
inc
test
addl
xorb
dec
xor
jno
cld
mov
test
call
xchg
cmpsb
mov
not
xchg
jl
cmovle
pop
repnz
pop
fdiv
xor
scas
ret
xchg
mov
cld
pop
push
mov
insl
cmp
dec
and
sbb
mov
push
repz
jns
scas
ret
test
jge
jge
add
repz
jge
cld
out
fwait
push
ret
jae
aas
lea
leave
popa
push
ljmp
cmpsb
jb
jg
mov
lds
popf
stos
mov
fisttpll
and
sbb
ret
sub
stc
out
or
push
sbb
mov
lock
sahf
in
clc
mov
mov
lret
lret
mov
xchg
dec
cli
dec
jno
pop
mov
shrl
xchg
nop
jp
addb
repnz
insl
sub
and
mov
push
mov
cld
lret
lret
xchg
aad
aad
stos
repnz
gs
and
sbb
push
insl
arpl
pop
xor
cmp
test
or
pop
and
out
sub
jle
jae
xchg
out
xchg
adc
mov
push
lcall
lret
push
xchg
mov
cmp
int
add
lods
in
imul
out
or
outsb
icebp
cmp
iret
mov
pusha
clc
inc
movsl
in
mov
aas
stos
push
jmp
ss
gs
push
add
ret
fdivs
jno
lahf
stos
sahf
push
jno
scas
pusha
mov
fistl
sub
test
aad
fdivrs
and
push
mov
jg
sub
add
sbb
xchg
call
mov
push
mov
inc
mov
xchg
movsb
sti
mov
cmpsb
aad
inc
insb
out
pop
dec
jae
pop
aad
xorl
enter
lcall
out
push
ja
call
add
jnp
adc
add
lock
andps
pop
js
dec
push
cld
negb
fs
mov
push
inc
cmp
outsl
repz
cmc
shr
jb
movsb
dec
mov
add
fsubrl
mov
jns
cwtl
jmp
push
fdivl
frstor
or
ds
into
xchg
fisttpl
push
mov
push
mov
adc
pop
sbb
add
addr16
loope
jo
clc
out
add
js
arpl
mov
and
out
jns
js,pt
fsubp
add
adc
mov
orb
push
cmp
lock
push
add
int3
push
pop
pop
push
push
sbb
xor
cmp
jp
das
cli
or
pop
fdivl
bound
push
shll
cmp
inc
lds
jl
loope
or
nop
rcl
mov
jge
rolb
cmp
insb
je
andl
sub
mov
int3
adc
and
jmp
cmp
push
mov
clc
outsb
dec
add
ds
sub
lret
or
into
cmp
or
ss
mov
push
ss
gs
mov
dec
fmuls
sbb
cmpsl
rcrl
xlat
int
into
dec
inc
mov
cmp
aas
adcl
int3
loope
inc
jmp
adc
divl
push
mov
sub
in
cld
hlt
xchg
push
stc
pop
test
cmp
dec
dec
dec
dec
sbb
sub
sub
addr16
out
dec
roll
lcall
push
rorb
inc
outsl
sub
cs
lea
xchg
bound
push
pop
xor
xor
ret
out
dec
cli
test
rcll
mov
mov
gs
push
in
inc
sub
in
enter
mov
adc
mov
xchg
cmp
aad
pop
sbb
mov
sahf
cmp
sbb
push
xchg
add
arpl
mov
sub
cmp
mov
xchg
repz
mov
lahf
fcmovnu
das
push
jns
cmp
and
or
jl
mov
cli
cmc
mov
mov
inc
mull
out
div
movsl
stc
sbb
js
test
fwait
ds
test
test
inc
pop
hlt
sbb
cmp
sub
mov
addr16
loope
jp
int
jb
cmp
mov
mov
sub
mov
in
add
shl
jp
loop,pt
or
shrl
adc
dec
pop
push
push
xor
cmp
imul
ret
xor
pushf
popa
vdivsd
scas
or
cmc
aam
ret
push
gs
movzwl
cmp
fiaddl
mov
push
enter
xchg
stos
mov
pop
mov
and
outsl
sti
into
aad
bound
jge
daa
cmc
push
pop
imul
cmpsl
add
imul
xchg
fidivrl
es
shr
sub
call
mov
inc
or
dec
jge
xchg
rorb
lock
adc
shll
ss
pusha
adc
sbb
sbb
pushl
fsubr
pop
mov
xor
dec
push
xor
push
xor
and
jg
push
fsubl
mov
rcll
mov
pop
popa
add
fwait
orl
jl
dec
mov
adc
jne
sbb
sti
inc
jl
pop
or
inc
xor
shll
sarb
clc
fidivrs
inc
jne
push
jo
xchg
out
fwait
sbb
push
stos
ret
mov
in
jb
je
push
gs
cmp
clc
jbe
sub
addb
outsb
loopne
lret
out
push
mov
sub
bound
in
dec
shll
lds
dec
mov
jbe
push
jmp
in
aas
and
addl
aad
icebp
add
aaa
add
adc
inc
iret
mov
cwtl
mov
mov
push
jbe
push
movsb
leave
sub
fcoms
rep
ss
inc
lahf
in
and
call
outsb
adc
add
mov
in
mov
mov
or
adc
dec
test
and
xchg
stos
rcr
in
fistpl
stos
add
pop
adc
shr
cli
pop
add
sub
xor
clc
in
cmpsb
dec
adc
sbb
cmp
cmp
insl
pop
andb
dec
mov
jne
mov
lcall
inc
imul
cmp
out
mov
leave
movsb
mov
inc
test
xor
test
xchg
add
jp
add
ficomps
mov
lock
inc
imul
fs
mov
cmp
sbbb
xchg
mov
popa
cmp
xchg
mov
in
idiv
jmp
outsl
inc
pop
jg
mov
in
js
push
jecxz
and
dec
nop
stos
dec
addb
adc
int3
jg
mov
clc
mov
adc
mov
add
sbb
test
pusha
cmp
pop
mov
mov
sbb
push
pop
popf
movsl
lock
sub
lock
and
adc
dec
leave
push
cmp
mov
ljmp
cmp
jae
inc
sub
pusha
lret
fwait
fs
dec
icebp
and
setle
mov
leave
xor
out
int
cmp
int
cwtl
fs
scas
push
push
push
push
xchg
fistps
mov
xchg
movsl
add
fld
sbb
inc
inc
and
daa
in
jmp
pop
js
fucomp
js
mov
pusha
or
rclb
lret
or
in
fs
fldenv
pop
mov
rcrb
xchg
lods
mov
out
hlt
iret
dec
and
idivb
into
push
jne
aaa
movsb
loope
mov
scas
xchg
js
mov
imul
addr16
pusha
dec
push
test
jge
inc
sbb
pop
inc
loop,pn
mov
and
inc
ffree
dec
dec
fisttpll
popa
in
cmpsb
int3
lcall
or
and
jbe
test
loop
pop
inc
ds
aam
jle
jb
mov
je
adc
gs
ret
mov
cli
push
iret
mov
in
enter
jg
xchg
daa
arpl
mov
dec
decb
int
stos
les
mov
iret
into
lcall
movsl
mov
in
rorl
jg
cltd
or
test
push
push
mov
mov
loop
adc
cld
es
xor
ror
add
cmpsb
int3
push
nop
int
cwtl
adc
cmp
xchg
sub
test
jbe
dec
and
test
cli
rorb
push
aaa
subb
mov
mov
sub
mov
stos
test
insb
cmp
xchg
xchg
icebp
cmp
iret
lods
inc
leave
ficoml
mov
lds
inc
sbb
sub
dec
sbb
subl
and
stc
stos
xor
lret
xchg
bound
js
mov
lods
iret
add
mov
push
cmp
jmp
outsl
mov
mov
test
into
cmpsb
pusha
cmp
in
enter
mov
adc
into
push
lcall
pop
dec
aad
jns
pushf
inc
cmp
imul
cmpsb
iret
inc
sbb
sbb
inc
or
xchg
mulb
icebp
pop
inc
jns
data16
add
hlt
push
sarb
pop
cmc
cwtl
inc
lods
stc
js
aad
adcb
or
sahf
rorb
or
xchg
sbb
pop
or
lods
int
scas
add
lret
pop
popa
fbstp
daa
inc
or
or
jl
add
leave
adcb
stos
or
mov
dec
xchg
xchg
mov
shrl
stos
pop
dec
aam
imul
mov
jle
mov
xor
mov
fisttpll
cmpsl
jb
push
push
pop
dec
loopne
out
or
scas
sbb
mov
push
xchg
out
sbb
add
mov
pop
or
aaa
add
test
xchg
cmpl
fsubl
jb
in
cmpsl
xchg
inc
cli
jo
aad
jl
push
mov
inc
sahf
push
mov
sbb
dec
test
hlt
push
rorb
add
call
loope
fistl
xchg
mov
adc
mov
cmc
test
popa
add
out
bound
inc
or
fmuls
int3
sub
xchg
adc
inc
sarb
push
xor
aam
mov
add
jg
out
scas
outsl
sahf
loop
fs
mov
jg
cmp
dec
lret
mov
sub
fisubl
mov
lods
cmp
mov
int
mov
mov
sub
movsb
push
test
inc
daa
cwtl
push
les
test
outsl
inc
mov
pop
cmpsb
jb
mov
aam
sub
repz
lret
fsubs
dec
add
repnz
test
pop
mov
shrb
jg
pop
ret
xchg
aad
sub
sarb
adc
add
adc
imul
lods
cmp
outsb
fdivp
push
adc
fwait
cltd
push
es
dec
outsl
sub
lahf
jnp
add
js
jae
jp
sub
testb
jp
push
dec
cmp
dec
roll
xchg
cmpsl
clc
sbb
dec
and
xor
jo
push
js
xor
int3
lods
jb
xchg
outsl
pusha
sub
out
sbb
cmpsw
mov
leave
dec
sub
pop
xor
mov
addps
test
sbb
scas
lods
push
xchg
or
mov
xchg
sbb
insb
fucom
test
cmp
adc
sub
pop
fdivrl
xchg
sub
mov
mov
jb
dec
xlat
xchg
in
arpl
pop
insb
mov
in
xchg
out
shr
xor
addr16
addb
jne
inc
rorb
ss
test
xor
pusha
sahf
rorb
cs
and
sub
pop
pusha
or
pop
pop
jmp
scas
fnsave
jnp
sbb
popl
sub
dec
enter
arpl
or
pushf
iret
jno
sub
push
icebp
ret
xchg
lods
or
push
nop
into
insl
cmpsb
iret
es
push
test
loope
cmp
mov
lret
scas
loop
xor
cmp
aaa
rcrb
or
xor
push
sub
mov
inc
xor
cld
repnz
xchg
dec
sbb
daa
push
sbbb
mov
cmp
test
stos
repnz
mov
stos
xchg
jl
enter
in
cmp
and
lods
sub
leave
lea
jns
mov
lds
outsl
hlt
or
mov
mov
sbb
aad
xor
jo
insb
xor
mov
pop
nop
jne
and
into
sbbb
cmp
lock
sub
std
es
ljmp
jns
jecxz
mov
cmpsl
push
inc
inc
movsb
cmc
mov
mov
fsts
je
jno
out
cmovl
ja
mov
mov
shll
cs
into
test
mov
pop
cmpsl
xor
cmp
fsubrs
add
add
sahf
push
clc
pop
mov
je
fxch
mov
and
std
cmp
lret
imul
test
xchg
mov
add
ljmp
js
popa
mov
mov
mov
subl
and
sub
mov
aas
mov
pop
lods
cmp
jmp
inc
popa
pop
movl
mov
push
lret
idivl
mov
inc
cmp
xor
mov
xchg
fcompl
push
xor
xlat
lcall
inc
push
push
setae
std
in
xchg
cmp
jbe
ret
adc
push
push
dec
sub
hlt
dec
out
mov
out
imul
push
cwtl
jnp
pop
or
out
pop
push
dec
push
in
dec
roll
lock
push
xchg
jnp
pop
sarl
sbb
sub
pop
loop
loop
ss
cmp
outsb
lock
std
inc
mov
dec
leave
jle
cmpsb
push
pusha
xchg
pop
outsl
dec
adc
das
subl
push
shr
in
jmp
int
sub
les
test
mov
xchg
add
imul
dec
mov
or
pushf
push
movsl
mov
insb
dec
and
push
ret
cmp
ja
jle
push
jge
xor
cmp
mov
scas
pop
mov
cmp
add
movsl
addr16
and
daa
sbbb
or
xor
push
xchg
push
adc
cmp
adc
sub
cltd
repz
lods
xor
je
pop
lods
xor
repnz
inc
fbstp
test
adc
mov
jo
jae
mov
mulb
add
mov
pop
stos
fbstp
data16
into
loope
and
shl
js
fsub
int3
sub
push
sbb
push
mov
dec
or
dec
push
sarl
add
shll
inc
and
pop
jge
mov
test
adc
ss
mov
and
jmp
sbb
mov
push
mov
inc
mov
lret
hlt
mulb
cmp
xchg
repnz
xor
test
dec
outsl
mov
sub
scas
sbb
scas
adc
je
std
xchg
les
stos
pushf
xor
push
mov
inc
rorl
aam
push
ret
pop
ljmp
data16
cmp
push
lds
daa
dec
mov
mov
adc
adc
or
ja
inc
push
inc
icebp
imul
cmp
push
mov
jne
sbb
cmp
adc
scas
rorb
xchg
pop
leave
fsts
cmpsl
dec
mov
in
or
fxch
dec
sbb
adc
inc
push
jnp
push
psubd
imul
sub
xor
dec
push
mov
fimull
or
mov
mov
aaa
in
push
popf
adc
jo
je
fimuls
pusha
in
data16
imul
pop
mov
das
rorl
inc
jg
push
sbb
popf
push
xor
lds
mov
lret
adcl
outsb
sub
pop
testl
pop
lea
xchg
loope
in
mov
fnsave
data16
mov
fstp
jle
fbld
pop
call
mov
cwtl
push
sbb
ret
xor
shl
sbb
mov
sbb
mov
add
test
mull
xchg
adc
mov
loop
mov
xor
sti
lcall
mov
lret
or
xchg
and
sbb
sub
sahf
dec
maxps
loopnew
jno
jne
sub
in
xchg
in
dec
jb,pt
pop
or
push
daa
cs
pop
fwait
mov
cmp
pop
dec
push
pusha
bound
gs
outsb
xor
push
pusha
mov
cli
movsl
fldl
test
cltd
fs
aas
adc
test
aam
in
xchg
mov
pmaddwd
dec
push
xchg
lahf
jne
mov
inc
xor
cmp
push
bound
cmp
popa
pop
test
fs
fildll
push
in
in
aaa
push
adc
insl
sarl
mov
test
cwtl
js
cmc
add
mov
jmp
enter
jl
stos
out
mov
mov
shrl
rcll
decb
addr16
mulb
cmp
jno
jge
mov
ds
pop
push
xor
dec
andl
sahf
pop
push
dec
inc
test
mov
rcrl
ror
adc
sbb
repz
popf
mov
push
mov
add
jp
fsubr
insb
pop
pop
mov
mov
pusha
xlat
pop
or
sbb
mov
insb
inc
daa
std
or
jge
dec
or
mov
scas
mov
stc
jge
iret
repz
dec
out
sbb
sub
or
inc
lcall
mov
out
sbb
or
stos
bound
repz
jge
dec
mov
adc
lock
pop
rol
sub
push
cmp
imul
insl
and
xor
add
dec
sbb
jne
in
je
mov
pop
jno
pop
loope
mov
pop
xchg
orb
pop
cmp
mov
jp
out
in
jno
pop
mov
adc
inc
adc
mov
nop
js
in
sbb
in
fbld
and
fildll
dec
inc
sbb
pop
sub
test
mov
push
adc
pop
mov
lods
sub
mov
jge
cli
js
lahf
mov
add
xchg
xchg
fs
test
lods
bound
divb
mov
loope
fwait
push
sbb
jmp
into
inc
imulb
push
mov
test
jl
mull
mov
test
or
add
pop
loop
jl
sub
or
jo
sub
mov
div
or
movsb
and
push
fmuls
adc
in
pop
xchg
cmp
adc
aam
int
sbb
subl
jns
test
pop
xor
stos
xchg
ss
fstl
adc
xor
insl
fstps
add
mov
daa
movsb
fwait
and
cwtl
mull
lahf
xor
cmc
push
sbb
je
mov
je
ficoms
fwait
mov
xchg
lahf
cmp
jb
mov
sbb
jge
je
mov
sbb
ds
sti
sub
das
ja
mov
or
jmp
cld
pop
fidivrl
movsb
inc
xchg
lcall
aad
faddl
aas
fdivrl
pop
lods
testb
xlat
xchg
mov
movsl
cmc
mov
pop
sub
mov
or
jb
dec
sub
jnp,pn
add
or
mov
sbb
das
pop
loope
mov
rcrb
imul
out
inc
mov
xor
es
pop
jecxz
mov
aam
pop
cmp
call
imul
xchg
push
dec
psrld
sub
out
adcb
sbb
mov
je
es
sbb
movsb
sub
pop
sbb
adc
or
jns
dec
mov
mov
pop
pusha
sbb
lcall
sub
mov
rolb
idivl
daa
lahf
fmull
adc
mov
cmpsb
sub
data16
push
aad
sbb
pop
mov
lea
cmc
mov
outsl
cmp
mov
testl
cmp
sahf
stc
mov
and
imul
pop
stos
mov
or
orl
pop
scas
sub
data16
push
or
stos
es
sbb
pop
insb
es
cmp
pop
in
test
lcall
or
lret
sub
adc
dec
scas
sahf
insl
je
sub
jge
adc
xchg
bound
nop
jl,pn
push
jg
inc
in
test
sbb
fnstcw
inc
popf
repnz
mov
aaa
iret
inc
lods
mov
dec
dec
mov
mov
cmp
jmp
jbe
xor
jmp
sarl
add
mov
mov
mov
lea
test
stos
adc
sbb
cmpsb
cmp
mov
lret
mov
and
or
fimull
mov
mov
sub
push
xorl
loop
fwait
or
cmp
xor
mov
mov
xchg
stos
add
in
imul
lret
push
sbb
or
movsl
adc
jmp
sub
popf
sbb
mov
outsb
cltd
int
mov
dec
lds
inc
xchg
ret
inc
jno
fs
stos
imul
add
push
int3
fdivp
mov
push
scas
jbe
in
gs
push
xchg
xor
fcoml
fbld
xchg
scas
pop
leave
sub
mov
mov
adc
jmp
and
fmull
inc
pop
std
and
lret
jl
ret
or
insb
xchg
mov
push
mov
mov
data16
add
jmp
xchg
sub
adc
and
repnz
ljmp
mov
push
pop
sub
aam
stc
xchg
outsb
add
or
aas
lahf
mov
xor
add
jnp
cmp
in
pop
cmpsl
push
popf
fcoml
mov
xor
pop
ds
xor
int3
outsl
neg
dec
subb
dec
imul
push
adc
xor
xchg
mov
adc
loopne
mov
insb
in
ljmp
add
and
clc
adc
mov
ja
data16
insl
adc
rorl
cwtl
idivl
cmpsb
shll
push
lds
inc
dec
mov
xchg
arpl
mov
insl
dec
mov
call
out
cmp
jnp
xchg
scas
cmp
das
test
or
add
mov
inc
adc
int
or
sbb
mov
out
sbb
jmp
js
mov
push
sbb
dec
pop
ss
dec
out
xor
pop
inc
xchg
arpl
leave
inc
aas
inc
push
clc
jp
out
fidivl
leave
loopne
sbb
adc
adc
outsl
cli
fdivr
mov
and
xor
xlat
hlt
jg
adc
test
bound
iret
outsb
xor
inc
pusha
push
mov
loopne
inc
clc
push
mov
add
push
or
mov
cmp
push
lods
xchg
cmpsl
pop
mov
arpl
inc
pop
movsb
aaa
out
decl
cmp
sbb
popa
scas
jp
cmp
mov
inc
into
and
fiaddl
mov
mov
ret
inc
lods
lcall
fistpl
mov
push
cmp
scas
cmp
jp
lcall
fcmovnbe
ja
lcall
xchg
add
fbstp
aam
loope
inc
stos
push
mov
mov
mov
cmpsl
dec
mov
xor
vcvttsd2si
testl
pop
ljmp
mov
inc
pop
sti
daa
cld
mov
pop
lds
mov
std
inc
mull
add
and
insl
pushf
ja
cmp
fdivl
push
mov
mov
xorl
sahf
gs
mov
test
or
addr16
add
add
or
jno
int3
cmp
cmpsb
pop
test
mov
int
pop
dec
pop
and
inc
rorb
jecxz
pop
lods
push
jmp
jb
or
mov
test
sub
test
ret
xlat
adc
jl
das
inc
push
mov
jg
ret
out
mov
xchg
or
xorl
fldl
adc
cmpl
dec
jno
jo
cmp
adc
xchg
popa
cvtpi2ps
pusha
cs
leave
and
or
pusha
repz
mov
mov
cli
call
sbb
loop
in
mov
mov
cmpsl
fwait
mov
mov
rorb
adc
mov
and
adc
out
jl
loop
loope
inc
cs
enter
js
adc
and
dec
jae
andb
into
xchg
push
jo
pusha
cs
dec
call
dec
xor
cmc
jge
test
sbb
sti
fimull
fwait
add
cmpsb
xchg
icebp
push
adc
jg
and
out
lods
pop
add
cmp
pop
in
clc
call
mov
jne
mov
mov
sub
adc
fimuls
stos
movsl
add
jne
sub
mov
ds
aam
addr16
imul
sete
cs
daa
rcll
add
push
jno
lahf
push
mov
mov
sub
movsb
mov
shl
mov
out
pop
inc
push
push
leave
pop
out
sub
push
vcmpss
call
rcrb
jbe
test
icebp
cmp
mov
test
dec
cmp
in
mov
or
sahf
sbb
scas
int3
pop
fwait
addr16
add
in
cmp
add
xchg
lods
or
adc
in
jns
pop
jo
xor
xchg
leave
cmp
imul
iret
xchg
test
mov
aaa
inc
dec
clc
mov
imul
xchg
aam
xor
fs
mov
lods
sub
aam
mov
inc
fdivl
fadd
adc
insb
dec
xchg
dec
xor
push
shlb
outsw
aas
jecxz
stos
pop
jecxz
pusha
dec
cmp
sub
cmpsb
add
and
out
adc
daa
add
mov
pop
jae
mov
pushf
and
add
scas
and
sbb
xchg
dec
vfrczss
rorb
cmpsl
xor
dec
lahf
mov
fldt
sarl
inc
inc
sarb
push
mov
aas
nop
mov
frstor
and
inc
addr16
push
jge
pop
dec
fcomps
push
div
mov
repz
les
add
js
add
insb
xlat
scas
push
mov
jp
pusha
ds
sbbl
dec
call
orb
sub
adc
clc
push
addl
rolb
jmp
leave
hlt
xchg
aam
pop
ret
outsl
aaa
lahf
cs
push
aam
loop
xchg
xlat
popa
es
inc
push
xchg
lahf
and
sub
push
jne
push
push
sbb
xlat
cmp
in
pop
lock
das
mov
xchg
out
xchg
xor
scas
cmp
in
mov
fs
imulb
mov
sbb
adcb
xchg
jne
ret
dec
jnp
iret
push
add
daa
mov
jecxz
jnp
dec
adc
das
int
sbb
add
sub
push
out
xchg
fldl2t
dec
imulb
lods
xchg
xchg
idivl
jae
add
dec
shlb
jae
int
shll
cwtl
lds
adc
jne
pop
int3
cmp
pushf
movsb
icebp
cli
enter
pop
sub
add
nop
sbb
jne
bound
popf
pop
xchg
inc
scas
loope
insl
dec
add
pop
xchg
jbe
dec
out
test
push
lahf
sub
out
jo
sti
cli
xchg
sbb
jecxz
xchg
jno
mov
clc
mov
add
add
pop
daa
les
stc
cmp
jle
popf
dec
xchg
mov
push
mov
rcrl
or
fnstsw
sbb
fmul
and
jecxz
sbb
shll
add
outsb
add
or
dec
push
xchg
loop
mov
dec
inc
mov
mov
stos
aam
push
add
lahf
addr16
into
add
cmpsb
dec
test
mov
jnp
push
sarl
jecxz
pop
stos
cmpsl
outsb
xchg
leave
stc
cwtl
adc
adc
fldt
dec
and
adc
mov
iret
gs
int3
cmpl
pushf
test
push
and
xchg
pusha
insb
out
add
push
xlat
rcrb
out
in
fs
pop
hlt
mov
jecxz
je
mov
mov
and
stos
enter
into
fucomp
pop
or
out
clc
rolb
mov
aas
jmp
aaa
jns
dec
out
add
repnz
mov
cmp
xor
cmp
dec
jmp
mov
aad
mov
sbb
push
mov
iret
pop
test
outsl
xchg
sahf
sbb
push
aaa
or
add
ljmp
dec
push
mov
ljmp
in
mov
add
fidivrl
jecxz
rorl
ficomps
insb
adc
xchg
ss
cwtl
aad
cmp
iret
dec
inc
or
push
ljmp
mov
fnsave
mov
out
pop
in
jle
mov
popf
push
bound
pop
ljmp
push
subb
js
push
and
mov
jne
xor
mov
mov
pop
jecxz
aam
fistl
cmc
cli
and
insl
xchg
inc
cmp
out
jle
mov
cld
in
faddl
jp
mov
fbld
sub
test
cmpsb
dec
add
and
or
add
or
rcrl
sub
and
xor
clc
push
xchg
sahf
pop
mov
mov
test
aad
aas
mov
test
inc
sbb
add
inc
js
xor
and
in
ffree
xor
data16
ja
xchg
filds
dec
adc
or
inc
dec
movsb
jmp
sbb
lret
popl
test
cmp
sbb
add
test
xchg
pop
cmp
flds
je
mov
and
aad
aas
and
push
insl
mov
sub
sbb
xchg
pusha
outsl
sti
xorb
ret
lea
lds
insl
or
sbb
xchg
xchg
xchg
es
lock
leave
ljmp
out
lcall
pop
push
pop
test
out
fwait
inc
mov
in
bound
cmpl
in
ja
jns
pop
cmpb
jl
aad
push
cmp
mov
pusha
jo
mov
sbb
xor
dec
pop
ja
pop
fpatan
fadds
cmpsb
jno
or
hlt
and
xor
enter
jno
icebp
adc
push
clc
jmp
mov
or
push
inc
lods
mov
push
lods
movsb
dec
adc
movsb
stc
xor
jg
push
mov
xchg
movb
and
pop
sub
pop
pop
sub
outsb
mov
stos
push
es
pusha
jo
hlt
int3
jg
fst
les
adc
lret
jl
sub
pushf
ficoml
ficomps
fsubrs
xchg
test
xchg
mov
nop
fistpl
and
cmp
cmp
addr16
add
cmp
rcl
incb
sahf
xor
mov
pusha
icebp
test
pop
mov
sahf
in
pop
scas
cli
or
jg
sbb
in
loope
clc
and
jb
add
cli
lock
mov
pop
xor
push
dec
andb
xor
loop
aad
in
mov
pusha
stc
shrl
jno
outsb
roll
adc
push
decl
sbb
or
jle
xchg
std
test
add
jae
or
or
out
test
cmpsl
lods
add
cmp
scas
sub
inc
sbbl
sub
cld
outsl
push
pop
lahf
adc
cmp
lock
stos
mov
xchg
dec
adc
cs
pop
rcrl
sti
cmpsl
cmpsb
xor
cmc
lcall
mov
pop
imul
lret
cmp
inc
add
aaa
pop
pushf
mov
out
cli
lahf
lock
cmp
xor
mov
xor
sub
bound
repnz
jno
xchg
sub
sub
mov
lock
and
scas
xlat
cwtl
movsl
pop
aas
dec
stc
push
pop
dec
mov
rorl
pushf
aam
cmp
test
or
fnstsw
cmpsb
pop
out
mov
xchg
jbe
xor
and
xor
andb
and
and
clc
mov
mov
sbb
mov
icebp
lods
jbe
sbb
push
inc
push
ds
push
int
clc
aas
xor
mov
mov
dec
mov
les
xchg
js
push
int
fistl
jbe
pop
in
mov
mov
inc
or
in
inc
rolb
cmpsb
test
scas
stos
mov
cmpxchg
das
arpl
icebp
mov
les
dec
and
mov
sub
fwait
pop
loop
lret
cmpl
stos
or
add
call
sub
xor
pop
xchg
mov
mov
push
arpl
adc
iret
in
aam
inc
jne
xlat
enter
scas
je
aad
xor
jae
pop
push
lgs
add
pop
fistpl
jp
fistpl
jb
push
std
repz
jne
or
cmp
adc
rcll
xchg
int3
mov
pop
pushf
and
adc
pop
popf
frstor
pop
mov
sub
add
int
push
mov
nop
dec
psrlq
out
jg
inc
cmp
iret
xchg
fdecstp
or
mov
xor
or
xor
cmp
test
mov
out
popa
mov
dec
clc
lret
jmp
scas
add
mov
mov
loopne
xchg
dec
add
pop
dec
mov
jle
jmp
clc
lods
js
and
mov
xchg
or
shr
cmp
aaa
ss
int
cld
in
jecxz
out
xchg
pop
or
loopne
decl
or
xchg
adc
adc
sbb
pop
pop
into
in
push
ss
sahf
push
mov
fcompl
ds
daa
addr16
jo
fiaddl
adc
out
imulb
and
test
lds
push
pop
inc
dec
or
imul
ss
out
dec
aaa
jecxz
sub
push
ret
mov
fsubrl
cmpsb
rcrl
inc
push
stos
mov
test
jl
mov
jmp
mov
addb
mov
ss
sbb
ljmp
jge
les
test
pop
inc
fsts
pushf
testl
jp
bound
insb
iret
adc
popa
shlb
fmull
jg
pop
pop
mov
mov
addr16
sahf
push
repnz
pop
stos
js
xchg
in
out
xor
adc
dec
cmpsb
dec
pop
rolb
mov
aad
jae
add
imul
pop
dec
mov
insb
push
shlb
xor
insb
in
cmp
jo
mov
xchg
out
sub
sub
and
xor
push
pop
out
adc
mov
out
cmp
pop
arpl
dec
dec
out
das
out
mov
mov
push
cmpb
iret
addr16
xchg
push
push
int
xchg
cmp
or
mov
and
insl
xchg
sbb
fistpll
mov
imul
loopne
sub
shrb
xor
out
in
xlat
sub
mov
in
jae
jbe
cmpsb
lret
or
test
jo
bound
out
dec
fistl
enter
mov
clc
mov
jno,pn
and
push
push
cmc
cmpsb
out
sbb
test
mov
push
es
jne
cmp
outsb
mov
scas
repnz
aas
daa
xchg
lock
repnz
inc
out
dec
xchg
fcomip
mov
dec
icebp
test
mov
repnz
sub
xchg
cwtl
fcompl
sbb
adc
push
js
addr16
or
rorl
in
push
scas
lret
aaa
mov
cmp
sbb
pop
imul
push
dec
out
rclb
inc
lock
jmp
jle,pt
mov
jl
sub
decl
or
aas
or
cltd
ficoml
outsl
lods
mov
mov
andl
mov
movl
ret
stc
push
jge
xor
int3
aam
add
repz
movsb
or
mov
pusha
ljmp
mov
pop
add
int
roll
fxch
inc
daa
mov
mov
sbb
test
inc
in
mov
mov
mov
jno
movsl
loopne
inc
insb
mov
mov
ror
mull
or
stos
aas
icebp
jno
push
jp
pop
hlt
cli
sbb
fldcw
mov
in
pop
stc
loop
push
cmpsb
aad
iret
jl
mov
data16
mov
fnstcw
mov
cs
cli
pop
in
inc
and
pop
sbb
sub
cltd
mov
loopne
or
ret
sbb
inc
mov
jge
pop
xchg
add
xor
gs
cmc
aad
mov
scas
out
mov
sub
xchg
clc
lea
lcall
cltd
jecxz
es
jae
xor
lcall
decl
xor
xor
clc
leave
ret
popf
movsl
lea
mov
cld
out
lods
mov
inc
cld
mov
mov
mov
adc
add
cmpsl
or
pushf
cmp
jo
adc
in
jne
mov
lds
mov
push
pop
nop
inc
pop
repnz
mov
jnp
jnp
aad
jne
out
xor
shlb
cmpsb
jnp
mov
xchg
ja
fsubs
dec
inc
mov
or
test
nop
push
and
lret
stc
test
jb
add
movsl
jmp
imul
or
adc
pop
mov
jno
mov
dec
cmpsl
loop
dec
jl
dec
std
iret
repnz
addb
loopne
nop
push
notb
int
push
ss
aam
inc
push
adc
mov
and
adc
fwait
mov
cmp
jo
xchg
sub
inc
jbe
lret
out
movsl
cmp
add
jecxz
mov
mov
in
dec
inc
push
dec
jb
mov
fbstp
mov
push
mov
movsb
sbb
sbb
ljmp
ffreep
dec
repz
cmp
adc
and
cli
enter
icebp
adc
sbb
push
xor
sub
pop
call
xchg
repnz
add
sbb
xrelease
ret
notl
das
sti
and
pusha
lds
mov
inc
in
sub
sbb
stos
pop
stc
lods
jne
and
stos
fcomi
push
movsb
adc
imul
xor
mov
inc
jge
aad
pop
cmp
call
xor
out
addr16
inc
mull
popf
and
xorb
loop
es
mov
insl
or
fsts
and
clc
xor
stc
cwtl
inc
dec
movsl
push
jp
cmp
imul
lahf
jae
xchg
xchg
mull
cmp
add
jbe
lahf
int
fs
cwtl
inc
insl
lods
ds
int3
push
ficomps
sub
pop
cmpsl
std
jbe
dec
das
push
mov
pop
scas
fisubs
jne
push
lods
sbb
cltd
add
sbbl
std
das
xor
rorl
addr16
mov
adc
dec
lret
xchg
jecxz
jae
gs
push
dec
int
jae
jae
mov
jb
pop
cmp
lods
addr16
nop
add
lret
aas
push
push
xchg
arpl
je
call
mov
lea
or
in
push
stc
mov
sbb
loope
cwtl
and
loopne
in
sbb
out
or
cmp
cltd
imull
sbb
dec
fwait
sbb
jecxz
clc
imul
push
loopne
mov
sub
and
mov
stos
aam
or
cld
inc
sub
divb
mov
cmovo
cmp
and
ss
pop
aam
jbe
fdecstp
insb
test
xchg
mov
rclb
adc
fldt
mov
jge
cs
jns
rcrl
jg
fldt
insb
jo
int3
out
out
shrb
push
adc
imul
inc
ret
push
jne
stos
push
out
out
mov
mov
lret
inc
ret
cmp
aam
push
mov
outsb
dec
cmc
repnz
cmp
aaa
sahf
xlat
shrb
adc
dec
jb
gs
and
jmp
push
repnz
scas
mov
call
mov
sub
jmp
sar
sahf
dec
pop
lcall
and
or
jne
incb
ficoml
add
pop
mov
cs
ds
mov
stc
js
and
sti
cmpl
sbb
dec
jge
jno
dec
out
add
mov
cli
cmp
xchg
fwait
pusha
cmc
push
hlt
mov
aas
pusha
sbb
mov
or
mov
iret
arpl
mov
add
aaa
cld
xchg
sub
push
aam
sbbb
cmc
sbb
in
and
jle
test
lods
xchg
xchg
mov
xchg
pop
and
xor
or
pushf
pop
push
adc
cs
imul
hlt
push
repnz
out
push
daa
dec
pusha
mov
loope
mov
sbbl
jp
fs
inc
shll
push
int3
flds
sti
pop
dec
je
and
adcb
inc
fldenv
xor
les
pop
or
mov
pop
ja
int3
mov
mov
stc
popf
decl
inc
enter
int3
pop
jecxz
dec
andb
push
aad
mov
mov
aad
inc
gs
test
fnstenv
icebp
mov
add
jmp
xchg
and
xor
and
cs
push
push
loope
xchg
mov
mov
and
jg
jns
aam
insl
push
jecxz
lods
fsubrs
dec
mov
adc
pop
fdivrl
loope
rcll
test
loopne
jae
cmp
les
imul
jb
xor
push
dec
mov
xchg
mov
and
push
fcompl
sbb
mov
xlat
or
jae
sbb
dec
xor
push
pop
cmp
mov
int3
xchg
das
or
ffreep
xor
pop
cmp
xor
adc
adc
pop
aaa
sub
scas
stos
dec
cwtl
xchg
or
shr
jne
je
dec
lods
insl
pop
adc
dec
dec
xchg
pushf
inc
push
sub
sub
fists
mov
xchg
xchg
insl
mov
lahf
test
shll
icebp
fcmovne
or
int
shll
add
les
pop
cltd
iret
in
popl
in
cli
in
jb
rcll
scas
jno
push
test
pushf
xorl
push
test
stos
mov
xchg
push
xchg
mov
loope
loop
fisubs
xchg
popa
sti
push
dec
movsb
mov
clc
iret
xchg
and
adc
fwait
pop
dec
cmp
aaa
ljmp
mov
push
mov
scas
jo
aad
out
flds
fnstsw
lock
xchg
mov
sub
repnz
or
pop
in
and
dec
inc
xchg
gs
pop
mov
dec
jae
sbbb
insb
xlat
jb
add
mov
rcr
pusha
daa
faddl
test
fdivs
jp
test
or
mov
push
stc
test
adc
adc
popa
shlb
out
aam
test
add
filds
mov
cmc
xor
faddl
pop
push
out
mov
scas
xor
mov
push
dec
adc
pop
lret
lret
ficompl
lahf
sbb
in
outsb
push
fstpt
or
push
in
movups
and
movsl
fildll
cwtl
mov
imull
divl
fsubrl
sbb
cmp
pop
and
sarl
cltd
leave
cs
jns
inc
loop
jecxz
loop
jp
mov
popl
pop
ret
pop
adc
dec
pop
mov
leave
into
leave
jmp
pop
xor
and
mov
mov
and
or
mov
jne
lods
addl
sti
pop
xchg
jle
fists
fdivs
xchg
repz
testb
jb
aaa
fcmovb
gs
fdivs
sbb
inc
in
out
mov
or
sahf
sbb
imul
cmp
xchg
and
push
arpl
repz
pop
mov
lret
jecxz
pop
mov
cmp
insl
cli
stos
and
add
xor
arpl
cli
test
loope
jle
les
mov
bound
rcll
cmp
push
out
movsl
mov
js
add
inc
inc
sbb
inc
cmp
outsl
push
sbb
inc
inc
repnz
stos
cmpsl
xlat
push
adc
bound
pop
inc
push
dec
inc
mov
mov
adc
lret
push
mov
mov
jg
loop
mov
pop
dec
das
mov
mov
mov
out
sub
mov
lock
xchg
push
fsub
lahf
add
adc
cmp
mov
stos
rcl
clc
outsl
roll
push
mov
xchg
lret
loopne
je
inc
xchg
adc
and
lock
xchg
mov
xchg
scas
jae
test
cltd
dec
jge
lret
dec
push
mov
push
fnstsw
testl
inc
sahf
les
pop
std
adc
mov
jno
es
pop
je
jecxz
daa
fwait
clc
xchg
add
mov
js
mov
mov
sti
dec
jns
cmp
nop
xlat
arpl
nop
inc
adc
loopne
pop
fidivrs
icebp
mov
ljmp
pminsw
ljmp
sbb
leave
or
mov
stos
aam
pop
sbb
repz
xchg
int
test
and
push
insb
mov
divb
inc
dec
jb
daa
sub
aas
push
mov
adc
mov
mov
jno
iret
dec
inc
push
push
sub
sahf
pop
sbb
mov
aad
mov
cmp
mov
scas
test
dec
adc
jmp
and
loope
shl
or
and
test
in
rcrb
aaa
pop
notl
rcll
inc
nop
pop
lahf
sar
xchg
inc
jge
ret
rorl
daa
out
push
fisubrl
icebp
movsb
sbb
push
orl
dec
iret
in
xchg
pop
negl
test
ret
add
mov
out
sub
jb
scas
in
pop
js
and
popa
and
lock
test
test
xchg
inc
pop
mov
adc
sti
lds
or
scas
subl
xchg
jecxz
dec
ja
add
mov
xor
test
test
outsb
fmuls
mov
pop
ja
push
leave
dec
leave
fisubrl
push
inc
scas
js
push
jp
xchg
scas
enter
add
lret
popa
ds
stc
mov
dec
test
push
scas
lcall
call
cli
pusha
jmp
jp
addl
jge
add
test
mov
cs
cmp
cmp
adc
movsb
stos
test
pop
sub
push
fisubrs
flds
pop
xchg
push
clc
test
jb
insl
add
aaa
xchg
popf
scas
cmp
enter
xor
inc
add
mov
pop
shll
outsl
dec
in
fcoms
jmp
inc
arpl
dec
cmpsl
inc
inc
and
stc
jle
xchg
push
dec
mov
jle
test
test
mov
add
push
mov
adc
dec
inc
imul
divl
std
out
sub
daa
add
ljmp
adcb
popa
test
leave
into
xlat
mov
pop
sbb
cltd
jns
cmpsl
or
sub
inc
mov
mov
xchg
and
jnp
jle
adcl
push
inc
lret
fstpt
in
add
and
out
cmp
inc
dec
mov
mov
mov
pusha
sti
ficoml
jbe
dec
inc
call
xor
fwait
dec
xchg
imul
mov
xchg
in
imul
mov
jbe
lods
and
ficompl
bound
lahf
lahf
fidivrl
popa
sbb
mov
mov
push
add
je
shl
pop
push
inc
mov
pop
mov
aad
dec
mov
pop
std
pop
pop
mov
sub
mov
out
cltd
cmpsl
les
mov
frstor
cmovle
sub
push
loop
fcmovb
les
dec
or
aam
push
sbb
pop
push
or
fst
adc
adc
fwait
aad
and
jmp
mov
xchg
or
xchg
jbe
cmp
xor
mov
mov
mov
xor
pushf
rclb
inc
jae
notl
rcll
outsl
addb
dec
pop
loope
pop
pop
ret
mov
ds
jnp
cmp
rorb
dec
push
ss
xchg
jne
in
pop
out
mov
addr16
jne
pop
jp
sbb
pop
or
pop
in
xor
push
fisttpl
dec
push
xchg
push
lret
sbb
int
insb
repz
push
into
loop
xchg
lods
vucomisd
roll
jb
scas
and
lret
ret
or
outsl
mov
pop
in
cmp
cld
xchg
jbe
jecxz
enter
pop
dec
repz
xchg
and
test
jo
mov
fisttps
mov
sub
or
cmp
dec
mov
sbb
clc
inc
push
pop
dec
in
xchg
mov
cli
push
test
es
cmc
cmp
ret
xchg
repnz
imul
nop
stos
xor
cmp
testb
adc
adc
movsb
scas
add
scas
cs
fiadds
imul
sbb
mov
call
or
iret
outsl
mov
cmp
arpl
shlb
xchg
pop
es
dec
bound
push
inc
inc
pop
iret
pusha
jl
pop
sbb
mov
dec
loopne
ss
shlb
jbe
dec
ljmp
dec
test
mov
dec
cmpsl
pusha
pop
jne
cmp
dec
push
sbb
mov
addr16
dec
sbb
fidivrs
jle
loope
jp
mov
xchg
mov
inc
pop
mov
scas
cwtl
pop
add
fdivr
mov
hlt
andb
bnd
inc
pop
mov
push
cmp
lcall
sahf
jno
movsl
cld
sbb
cmp
scas
pusha
add
ret
ret
sbb
repnz
dec
inc
adc
push
outsl
cmp
and
jmp
jo
jl,pn
test
mov
daa
roll
add
add
and
cmp
fisubl
and
mov
das
lods
and
jns
inc
imul
std
adc
dec
mov
push
mov
lds
adc
pop
out
sbb
popa
cmp
mov
cmp
add
outsl
insb
sbb
stos
loope
fdivrs
lods
jne
sub
cld
stc
test
add
push
shl
mov
es
leave
rolb
aam
mov
cmpsl
test
dec
push
mov
pop
dec
xor
fnstsw
fs
lock
pop
dec
cltd
repnz
push
and
dec
hlt
push
dec
scas
or
clc
test
es
sub
rcrl
mov
cmp
ds
orl
outsb
mov
test
push
mov
fdivrl
dec
cli
in
sub
iret
packuswb
and
aas
lods
cs
stos
xchg
mov
je
push
jmp
xor
sbb
inc
sub
mov
fdivrp
cmp
dec
cld
mov
std
filds
push
rorb
negl
aad
aas
aas
inc
xorb
cmc
add
xchg
jle
std
dec
loop
jecxz
aam
cmpsb
add
add
sahf
mov
mov
in
pop
addr16
adc
jmp
cmpsb
xor
push
xchg
repnz
adc
subl
adc
push
punpckhwd
rcl
inc
scas
js
cmp
sbb
push
inc
xor
ss
rcl
push
push
xorl
push
mov
cltd
pop
add
cli
in
jp
dec
cltd
xlat
lret
cmc
lds
enter
jne
push
lods
cwtl
sub
sbbb
adc
cmc
mov
cld
dec
daa
dec
jo
es
repnz
cmp
sub
ljmp
cmpsl
jnp
fcomps
int
in
xchg
pop
enter
cmp
push
xadd
jnp
cwtl
cld
mov
fists
xor
or
cltd
inc
insl
cmpb
sub
xor
or
pop
dec
jmp
clc
xchg
pushf
insb
hlt
pop
in
mov
jbe
add
dec
loopne
add
jle
cmp
sub
mov
push
sbb
adcb
imul
mov
mov
mov
repz
mov
add
test
cmp
insb
jecxz
push
xchg
push
adc
jns
notb
bound
shlb
aaa
mov
ja
imul
aad
enter
pop
loopne
lcall
pop
mov
std
xor
loope
jecxz
ds
cmp
hlt
dec
imul
and
and
inc
subb
mov
adc
dec
loope
adc
mov
dec
mov
adcb
movsb
or
push
dec
cmp
ljmp
mov
adc
lret
pop
in
push
stos
cmp
lods
mov
aam
fwait
dec
outsl
push
cmp
pop
push
jg
inc
dec
jno
or
cmp
jg
enter
fucomp
push
mov
xchg
xchg
stc
lcall
or
icebp
cmp
mov
jl
ja
repnz
sbb
ljmp
xchg
jecxz
ss
sbb
in
mov
imul
xor
or
adc
adc
ds
or
cmpl
mov
and
scas
cli
add
xlat
filds
jl
cmp
jmp
sbb
mov
into
stos
mov
ficomps
mov
fwait
das
jae
jmp
xchg
cmp
aas
or
addr16
pop
movsl
int
xor
push
cwtl
inc
add
fnstenv
mov
clc
adc
or
push
adcb
imul
es
scas
mov
nop
sub
cld
je
sbb
rcrl
pop
push
mov
sti
sub
mov
xor
faddl
in
sub
jbe
pop
cmpsl
fcomps
push
mov
push
inc
pop
fisttps
int
and
ret
push
out
das
sub
jge
test
addb
imulb
std
xchg
xor
cmp
add
push
cmpsb
fs
xlat
and
imul
cmp
hlt
xchg
fidivl
loopne
cmc
cmp
cmpb
pop
call
bound
rcr
dec
daa
and
hlt
xchg
cmpsl
xchg
cmp
divb
or
or
pop
jge
lcall
lcall
push
mov
or
xchg
or
add
pusha
das
icebp
push
mov
in
add
adc
sti
cmc
pop
dec
pop
lods
mov
cmp
into
adc
in
aam
roll
mov
mov
fidivl
jne
je
out
aam
pop
and
push
and
aad
push
in
lahf
mov
mov
inc
in
lods
fiadds
lods
in
pop
mov
jae
mov
pop
adc
xorb
addr16
and
jbe
fisubl
sub
addl
loopne,pt
cmp
push
rorb
mov
push
idivl
dec
inc
cmc
aam
or
lds
comiss
jb
test
cmp
xor
in
cli
mov
cmp
adc
cld
lahf
leave
sub
add
xchg
dec
jno
add
incb
leave
pop
fstpt
imul
scas
imull
push
mov
and
mov
dec
test
shlb
cld
mov
cmp
pop
js
inc
xchg
add
cmp
mov
cmp
aam
inc
in
and
cs
lea
jge
dec
mov
add
mov
movsl
and
rclb
cs
imulb
aaa
cmpsl
shr
ljmp
jns
fbld
mov
dec
jb
mov
xchg
xchg
lock
fsubrs
out
cmp
add
shrb
lret
int
jo
push
mov
imul
pop
jl
loop
out
pop
mov
sub
test
ret
mov
cmc
aas
ret
popf
test
aam
mov
and
ljmp
xor
push
cld
jecxz
sbb
aas
in
xchg
pusha
leave
mov
add
ud2
push
adc
lods
loop
xor
mov
mov
mov
push
les
and
rcll
xchg
ds
fidivrl
xlat
ja
mov
fwait
aad
ds
test
test
pop
push
mov
shll
sub
fmuls
push
int3
aad
rol
popf
xchg
out
cmp
lods
mov
sub
pop
pop
lahf
cld
jns
stc
inc
push
xchg
ja
inc
jns
xchg
dec
lods
xchg
sarl
stos
hlt
sbb
in
addr16
daa
jmp
and
lea
pop
push
xchg
in
ficompl
test
cmp
je
mov
in
fcomps
sbb
jecxz
add
jl
and
les
fisubl
lret
adc
out
xor
fwait
mov
cmp
movsb
jbe
je
mov
xchg
push
jno
push
loopne
out
mov
or
loope
mov
and
lcall
cli
int
jb
cld
push
dec
inc
movsl
jg
popf
cld
scas
es
jge
jmp
add
mov
jnp
outsl
sub
sub
lods
inc
sbb
loop
lahf
fwait
enter
arpl
ja
sbb
xchg
or
jg
mov
cmp
in
and
push
les
jmp
das
es
inc
test
pop
ds
test
jo
xlat
out
jo,pt
sbb
fptan
and
xor
pushw
mov
js
mov
stos
push
nop
cs
and
dec
cmpsl
jae
mov
sbb
pop
lret
push
movsb
test
das
cmp
pop
ljmp
jg
mov
ljmp
das
outsl
fwait
ret
jge
ljmp
xchg
xchg
sbb
xchg
ret
xor
ljmp
popa
dec
push
jo
ja
mov
addr16
xchg
scas
addr16
out
nop
add
les
jle
xchg
or
and
ds
imul
inc
mov
repnz
int3
adc
aaa
mov
or
push
cmpsl
std
out
shrl
lea
or
jne
jnp
je
mov
out
ficoms
mov
andl
push
mov
xor
int
adc
cmp
push
jp
sbb
cmp
insl
pusha
adc
out
clc
adc
sub
std
sbb
push
insl
shr
and
adc
push
gs
inc
clc
push
adc
push
sahf
jnp
test
mov
outsl
filds
cwtl
loopne
call
bound
cmp
aaa
arpl
clc
aad
in
dec
push
or
adcl
inc
nop
xchg
dec
jge
aam
ret
push
mov
cmp
pop
mov
movsl
and
aas
jae
ret
pop
movsl
adc
xor
mov
mov
aas
cmp
jp
and
out
in
sub
scas
lock
xchg
jb
push
ret
xchg
repz
xor
sbb
mov
xchg
cli
lret
enter
fucom
enterw
mov
adc
mov
sbb
push
dec
mov
out
dec
mov
out
inc
gs
divl
add
iret
cmp
xchg
mov
adc
lret
add
push
mov
fistps
ret
mov
int
scas
mov
adc
jnp
jbe
inc
sub
dec
cwtl
out
shrb
adc
imull
or
jmp
pop
xor
movsb
xchg
test
pushf
add
dec
cmpsl
cmpsb
push
mov
pop
xchg
add
in
aam
or
cmpl
aad
sub
je
sahf
imul
sbb
mov
jge
ud2
out
inc
sbb
addr16
sbb
ljmp
nop
insb
rcrl
arpl
jne
xchg
mov
pop
cs
mov
mov
cmp
push
cmp
mov
add
mov
lods
and
sub
jnp
inc
jl
sub
push
out
cs
cmp
outsl
call
lret
xor
or
pop
pop
ficomps
pop
bound
ljmp
out
pop
out
in
cmp
int3
xlat
lahf
decb
cli
add
pop
push
mov
mov
add
push
mov
in
and
shrl
mov
int3
add
mov
ss
jns
cwtl
clc
mov
lds
jne
sbb
xchg
xchg
nop
mov
test
ret
aad
aaa
stos
setne
pop
flds
enter
sbb
fldl
mov
cmp
jae
xor
out
dec
int3
int
aam
subb
mov
int
or
jns
call
dec
pop
mov
sahf
test
clc
subps
inc
and
lret
in
les
mov
xor
and
mov
cmp
mov
and
dec
xor
jp
ret
xor
fsubr
ds
adc
nop
test
aad
icebp
add
movsb
lcall
xchg
sar
jb
inc
cmp
lds
clc
sti
cwtl
pop
mov
aas
out
or
mov
adc
test
push
pop
in
data16
daa
or
data16
in
es
rol
mov
je
dec
insl
pusha
or
or
bound
test
popf
fwait
in
rcll
fists
jecxz
pusha
mov
sbb
mov
mov
adc
adc
push
into
sub
mov
mov
jo
add
lods
dec
inc
jno
enter
xlat
aaa
pop
xchg
mov
repnz
push
sub
inc
dec
jmp
mov
cmpsb
jne
add
addb
js
cmp
mov
jbe
pop
inc
dec
stc
outsl
dec
fdivs
sbbb
enter
imul
cmpsb
cltd
sbb
inc
cwtl
lahf
daa
out
pop
cmpsb
push
sti
call
pop
out
mov
and
icebp
cmpsl
movsb
fstps
nop
sub
mov
nop
paddsb
rcrl
insl
es
mov
repnz
pusha
pusha
mov
pop
ret
sub
sbb
cmp
movb
mov
negb
pop
movsl
aad
cwtl
les
cli
popf
add
add
fcmove
add
dec
in
jo,pt
push
mov
repnz
xlat
daa
nop
fst
jno
ljmp
lods
lds
or
pop
or
scas
add
cwtl
lods
lock
pop
lods
clc
inc
ficoms
stc
pop
stos
cmc
sub
sti
cwtl
pop
inc
jnp
push
arpl
fwait
jne
cmp
imull
rcrb
in
xor
sub
xorb
xlat
insb
js
adc
jl
mov
fxch
xlat
icebp
and
call
ret
fistpl
ficomps
push
sahf
inc
aad
cs
inc
stos
dec
inc
shr
sarb
pop
push
xchg
movsl
inc
or
cmp
adc
mov
jmp
or
push
jle
mov
fdivl
inc
out
and
jbe
std
push
cmc
test
divb
xchg
dec
test
xchg
xor
cmpsb
sahf
jp
jl
out
mov
sub
data16
daa
sti
cli
lods
out
mov
lret
inc
shrb
pop
xor
or
dec
or
loopne
mov
mov
popa
add
lahf
iret
sbb
xor
in
sub
sbb
loope
daa
lea
and
pop
xchg
xlat
push
scas
popa
mov
inc
aaa
data16
arpl
jbe
stc
hlt
aad
in
sahf
out
scas
int3
xor
xchg
lds
and
jae
jb
fdivrs
test
or
pop
es
leave
rclb
fs
test
or
and
mov
xchg
cmp
repz
cwtl
inc
xchg
outsl
popf
mov
stc
loope
test
inc
pop
mov
adc
std
enter
cli
mov
mov
insb
add
and
ret
imul
xchg
addr16
mov
pop
mov
fsubr
sbb
push
loop
out
mov
subl
dec
flds
repz
adc
add
stos
popa
dec
jb
hlt
insb
sbb
cmpsl
iret
and
adc
stc
loopne
inc
push
xchg
into
cmp
call
xor
dec
pop
jns
inc
xchg
dec
push
es
add
lcall
sbb
lea
outsb
push
cmp
iret
cbtw
loopne
xchg
dec
push
jmp
jge
sbb
js
movsb
repnz
push
daa
sub
stos
jae
scas
popf
jb
jo
int
mov
xor
cmpsb
mov
repnz
mov
dec
push
mov
ss
jae
in
cmp
jg
aas
add
aaa
cld
push
lahf
jp
aam
inc
pop
outsl
iret
fwait
mov
mov
lods
jb
rorb
dec
dec
cmc
dec
clc
rorl
mov
rolb
adc
push
jb
pop
cmp
sub
shll
cmp
or
inc
test
add
scas
movsl
adc
dec
push
mov
pop
orl
mov
push
inc
shlb
push
movsb
aas
subb
mov
in
je
dec
and
loope
out
sbb
push
insb
lret
fisubl
scas
pop
ret
in
sbb
testl
and
push
in
leave
or
stos
popf
cmpsl
sub
push
stc
es
inc
ja
sti
pop
or
cmp
adc
cmp
adc
xchg
sbb
adc
ljmp
call
xor
sbb
jb
push
loopne
iret
or
in
aam
xchg
test
push
lds
out
js
aad
pop
lods
xorb
mov
push
mov
js
pop
mov
aad
or
jae
xor
lahf
and
or
pop
mov
jb
xchg
mov
pop
xor
add
dec
dec
xor
mov
xchg
fs
loope
jno
mov
imull
repz
mov
outsb
xchg
dec
jbe
jne
adc
xlat
negb
es
cwtl
addr16
mov
inc
jno
push
das
aam
adc
push
addr16
sbb
mov
jmp
or
mov
in
sub
in
loopne
rcrb
dec
inc
iret
or
or
mov
gs
push
mov
push
gs
andb
or
test
or
enter
stos
lret
adc
dec
dec
dec
loope
jnp
push
cmc
sbb
xor
loop
clc
ljmp
inc
xorb
in
xchg
jo
icebp
jb
xchg
mov
in
and
cmp
imul
and
mov
jl
lcall
pop
in
xchg
call
inc
dec
push
push
adc
xchg
mov
jl
das
or
sub
mov
sub
adc
sub
out
mov
test
mov
out
add
dec
pushf
mov
xor
loopne
cwtl
or
pop
jnp
add
movsl
xchg
movsb
mov
jg
std
add
mov
mov
sbb
lcall
xchg
outsl
divl
pop
jl
push
or
add
out
xchg
jge
loope
or
les
pop
imul
sbb
repnz
shlb
mov
lock
call
ds
push
or
push
mov
jbe
shlb
fsub
psubb
mov
mov
loop
xchg
dec
push
jns
stos
in
add
neg
cli
or
stos
daa
clc
push
jns
nop
out
leave
inc
mov
xchg
adc
xchg
and
pop
popf
test
jns
push
lcall
push
mov
jnp
hlt
fbld
popf
fmull
push
jge
push
icebp
std
xor
pop
jmp
daa
pop
pushf
inc
mov
fnstcw
std
leave
jo
lahf
decl
jae
icebp
scas
and
cmpl
lock
dec
mov
movsl
cmp
fsts
test
adc
dec
sbb
push
dec
sub
test
andl
shll
in
imul
jp
add
orb
mov
pop
mov
dec
mov
gs
adc
popa
cmp
mov
pop
push
movsl
xchg
jbe
jle
fsub
psubusw
sub
nop
jns
cmpsl
mov
fiaddl
out
imul
fs
jb
pop
xchg
pop
adc
ret
pop
mov
nop
das
add
mov
and
fs
pop
inc
call
jae
pop
lret
inc
in
mov
xor
sbb
mov
into
mov
add
jge
aam
jo
popf
and
aad
adc
mov
stc
fwait
xchg
push
jns
cmc
xlat
inc
aad
mov
lock
cltd
push
adc
mov
jg
test
pop
inc
mov
aas
jbe
push
dec
lcall
fidivl
mov
sub
sbb
sti
xchg
jmp
movsl
leave
fcomp
not
popa
dec
gs
hlt
test
or
mov
push
xor
pop
test
inc
enter
loope
rcll
sbb
fs
loope
pcmpeqw
mov
test
repnz
jno
inc
pop
and
outsl
ja
dec
into
cmpsb
fisttps
mov
les
imul
mov
sbb
repnz
push
fcoms
shll
mull
cmp
inc
adc
mov
and
lcall
fldcw
vmptrld
push
adc
add
cmp
inc
xchg
stos
push
daa
xchg
loopne
push
cli
int
mov
scas
mov
cmpsb
or
or
xchg
ja
js
pop
into
push
pop
mov
cmp
dec
stc
sarl
and
mov
or
adc
ds
es
cltd
mov
in
cld
lcall
jb
xor
jbe
lock
push
jne
mov
ret
jo
lret
in
clc
jge
xor
roll
push
sub
cmp
add
cmp
xor
mov
mov
fs
sub
fnstsw
mov
inc
enter
sbb
or
add
and
flds
movsb
jns
xor
fisttpl
je
call
add
and
scas
sbbb
add
pop
or
xchg
lret
clc
stc
mov
push
sub
inc
aad
pop
leave
and
out
dec
movsb
hlt
fildll
or
into
xchg
pop
mov
xorl
stos
loope
push
jle
cmpb
pop
jbe
pop
lcall
or
movsb
int
adc
lahf
lret
out
subb
pushf
adc
mov
add
dec
mov
inc
mov
lahf
lret
mov
cmp
inc
mov
data16
sar
mov
jae
jns
cmc
sub
fildll
sti
lahf
pushl
pop
xlat
loop
lret
xchg
jae
adc
shll
outsl
out
incb
lock
mov
lret
mov
mov
or
ret
in
dec
or
mov
das
mov
imull
cmp
xchg
xchg
inc
test
add
pop
xor
pop
hlt
clc
movsb
imul
cmp
in
in
cmpsl
mov
popf
lock
sub
mov
inc
inc
cmc
adc
sti
popf
and
pop
push
lret
xchg
repnz
pop
push
nop
sbb
mov
dec
repz
dec
pop
ja
in
add
pop
mov
jae
mov
xchg
mov
xorb
adc
sub
imul
clc
insb
mov
ss
xchg
inc
mov
xor
bnd
mov
add
add
adc
test
push
loopne
and
sbb
sbb
pop
sub
test
btc
loop
sbb
mov
cmpb
cmc
shll
lret
fdivrs
pop
adc
in
in
inc
cltd
divps
inc
cwtl
imull
aaa
jb
aam
pushl
cltd
fisubs
in
push
lock
fsts
cmpsb
mov
dec
push
sbb
stc
adc
xchg
inc
out
es
dec
rcll
inc
mov
ja
movsl
mov
xchg
enter
dec
fimuls
in
mov
scas
jp
ss
clc
stos
xchg
scas
jae
fldenv
arpl
xchg
out
fwait
shll
out
xchg
mov
xchg
mov
jmp
adc
sbb
jg
incb
sbb
dec
dec
aaa
dec
fisttps
arpl
pop
or
outsb
mov
scas
les
test
adc
jb
sbb
loop
iret
mov
jl
push
jg
pushl
test
in
pop
hlt
xchg
or
xchg
imul
lds
incl
cli
push
xchg
fadd
jbe
jle
or
xor
aas
scas
sub
out
push
push
jno
adc
push
aas
dec
jb
lods
lods
jnp
or
or
jl
adc
dec
shll
xorb
and
xorb
lahf
pop
das
int
jg
or
jae
or
mov
push
repz
and
in
xchg
cmpsl
mov
dec
imul
push
push
cmp
daa
mov
jp
mov
insl
fnsave
xchg
push
mov
or
add
inc
mov
push
cwtl
mov
popa
add
push
push
cli
adc
imul
sbb
addr16
mov
and
cld
ret
es
iret
sbb
dec
xor
sbb
sbb
mov
test
addr16
mov
sbbl
sahf
in
cmpsb
sub
xor
les
mov
sub
push
mov
mov
inc
leave
je
push
cmp
push
sub
fcomi
in
in
nop
loope
cmp
xchg
and
push
push
xor
mov
push
mov
jecxz
loopne
mov
adc
jbe
or
cmpl
mov
pop
jnp
sbbb
pop
ret
cmpsb
sub
cwtl
lods
and
je
mov
aaa
out
movsl
and
push
and
push
and
ljmp
add
jmp
clc
mov
lock
iret
cmpsb
imul
jge
ds
adc
xchg
sbb
sbb
jecxz
adcl
jg
dec
jne
lods
dec
push
jle
jl
out
dec
mov
ds
loope
jge
push
jbe
fmuls
or
scas
das
cs
dec
pop
or
dec
std
inc
push
sub
push
stos
push
rdtsc
add
push
push
sub
data16
lret
lea
fwait
adc
pop
xabort
cmp
dec
add
loope
jns
divl
pushf
mov
sub
fnsave
dec
xor
testb
xlat
push
stos
add
outsb
outsb
and
inc
cli
and
mov
ja
jle
into
xor
dec
or
xor
sub
mov
xchg
lea
xor
inc
lock
in
stc
ds
or
mov
inc
jge
adc
dec
pop
mov
ds
inc
cwtl
sbb
sub
jle
jp
push
sub
lods
cmp
incb
jle
and
mov
outsl
arpl
mov
xchg
insb
jge
pusha
lock
fsubrp
and
daa
sahf
push
stc
xchg
mov
sub
pop
push
add
cmp
sub
add
mov
test
mov
xchg
lock
cld
inc
shl
inc
add
repnz
in
mov
sbb
pop
xchg
dec
dec
push
lret
cmc
inc
inc
imul
stos
inc
xor
hlt
xor
xchg
xchg
sarl
cmp
mov
sub
mov
fwait
scas
add
mov
adc
iret
mov
sahf
das
orb
or
mov
dec
fdivp
outsl
push
ds
out
iret
xor
sbb
call
ds
int
push
push
stos
add
ja
sbbl
imul
cltd
pop
andl
sub
in
insl
sub
stos
mov
loop
and
loope
mov
out
sbb
xchg
or
xchg
sub
adc
xchg
or
ljmp
jb
mov
inc
call
lcall
stos
pop
test
popa
sbb
cmc
ljmp
or
fsub
dec
cmp
mov
mov
and
add
xor
sbb
xor
inc
cmc
xchg
cmp
mov
jnp
imul
fisttps
aad
and
mov
ret
call
std
xor
and
inc
dec
inc
in
arpl
jno
std
sbb
pop
scas
mov
in
faddl
cmp
xor
fildl
push
mov
and
sbb
mov
shll
in
add
xchg
nop
in
dec
xchg
sub
es
ds
mov
out
add
test
into
cmp
fdivl
adc
and
fdivrp
jo
adc
push
xor
imul
xchg
clc
add
and
int3
xor
push
or
not
adc
fstl
leave
shlb
push
stos
ret
push
and
test
iret
adc
dec
cmc
gs
icebp
mov
cmp
ret
push
sbb
pusha
sub
sar
ret
sbb
xchg
xor
testb
adc
add
jbe
cld
aaa
dec
add
out
lds
xchg
jae
out
push
jg
xchg
lret
jecxz
out
es
jmp
sub
mov
sbb
mulb
call
xchg
xchg
jecxz
ret
adc
sti
test
fldl
jo
jb
jecxz
lds
mov
test
cmp
and
cmp
cltd
adc
aaa
cmp
and
out
jns
gs
cld
add
xchg
xor
mov
lret
jmp
xor
push
pop
push
popf
dec
cmpsb
fwait
clc
and
mov
andl
xchg
into
in
dec
mov
xchg
cmp
lock
mov
sub
lods
mov
andl
jno
jno
inc
fisttps
sbb
test
outsb
fldt
dec
adc
inc
mov
adc
das
cmc
pop
jge
cwtl
cmp
mov
sahf
repnz
xor
pop
aam
push
xchg
out
dec
das
or
cmpl
xchg
ja
test
or
bound
enter
fisubrl
sahf
push
int
xor
leave
or
xchg
inc
dec
enter
xchg
dec
pop
sbb
mov
stos
and
mov
stos
mov
mov
icebp
cmp
cmp
stos
pushf
insb
inc
les
inc
jle
jne
inc
inc
imul
mov
imul
push
push
stos
scas
add
cs
jbe
sub
jns
js
stc
ficompl
les
imul
xor
rclb
inc
xchg
sub
test
and
por
cmp
jbe
mov
pop
divb
mov
mov
mov
push
and
int
popa
xchg
lods
aas
push
cmpsb
test
test
out
xlat
lahf
fldcw
sub
lea
jnp
dec
addl
aam
ret
stos
mov
jge
movsl
push
or
or
inc
dec
rcrw
orb
mov
sub
movsl
add
leave
mov
jne
and
push
inc
in
dec
sbb
pusha
sub
adc
cmp
subb
in
clc
insl
xor
aam
xchg
dec
int
lcall
push
je
cmp
cli
sbb
add
or
and
add
sub
adc
subl
xchg
leave
cmp
push
fildl
ror
cmp
dec
rep
and
aas
cs
xor
mov
and
dec
push
sbb
pop
push
popf
push
ret
jle
xchg
inc
mov
or
mov
sub
addr16
or
xlat
mov
dec
jb
xchg
sub
jg
or
pop
movsb
mov
iret
clc
adc
cmp
les
xchg
pop
mov
cmpsb
sbb
xchg
xchg
dec
lret
mov
mov
xor
das
ret
jge
cltd
testl
mov
sbb
popf
xor
pop
pop
or
mov
mov
outsb
movsl
scas
push
mov
jl
xorb
mov
out
aad
mov
popf
xchg
lds
icebp
push
je
sub
inc
popf
mov
sbbb
pop
or
shll
or
sub
inc
test
fwait
cs
loopne
out
jnp
jp
cmp
or
movsb
mov
clc
int3
push
outsb
pusha
pop
lea
popa
fidivs
fiaddl
hlt
and
iret
xchg
outsl
mov
cmpsl
cmp
jae
ret
fbstp
inc
fldenv
loopne
sub
push
mov
mov
sbb
lea
xor
push
je
sub
pop
pushf
dec
inc
cmc
jno
js
mov
mov
dec
jnp
out
popf
xor
lock
mov
enter
inc
or
cmpsb
rolb
pushf
je
xchg
mov
movl
jo
xor
sub
data16
ds
pop
mov
xor
and
and
sbb
push
rcll
ds
int
push
inc
insb
fidivrl
adc
in
gs
movsb
cmpsb
jg
inc
mov
ljmp
cli
sbb
enter
jnp
push
xchg
insb
push
push
mov
push
aam
and
inc
aaa
mov
pop
jbe
shlb
sub
add
lret
or
jl
lds
shrl
xchg
inc
in
mov
lock
lods
mov
sar
push
adc
inc
popa
ja
fsubrl
outsl
xchg
add
popa
sub
test
mov
sbb
pop
inc
sbb
pushf
jbe
clts
jne
mov
mov
add
xchg
push
mov
jns
je
adc
xchg
decl
loope
addl
fidivrs
daa
std
mov
mov
or
pmulhw
stos
inc
xchg
dec
adcb
jae
pop
out
lods
hlt
outsl
stos
leave
clc
sub
cmc
add
lahf
cs
or
insb
aam
ds
clc
sbb
xorb
pop
or
pop
ret
mov
clc
cli
and
sub
aad
pop
ret
xchg
jno
enter
sub
test
pushf
fstpl
dec
dec
dec
xchg
add
lock
cmpsl
push
xchg
ret
xor
xor
mov
and
inc
repnz
fwait
test
push
push
cmp
sbb
fs
pop
out
rcll
add
sbb
push
icebp
xchg
add
inc
sahf
pop
aam
push
pop
fistpll
push
imul
outsl
mov
stos
adc
outsl
mov
or
jae
jae
pop
cmpl
dec
imul
cmp
and
add
jbe
mov
popf
lock
push
fbld
add
pop
push
pop
rcr
lcall
ss
adc
push
adc
jle
fnstenv
orb
pop
xchg
mov
add
sbb
shrb
insb
sub
mov
xchg
jmp
push
hlt
push
xor
push
idivb
mov
stc
jne
js
ja
push
shrb
ja
and
movsl
js
mov
out
inc
imul
xchg
xor
push
xchg
fwait
pop
dec
loop
sti
sarl
add
jns
in
fldenv
daa
test
push
jmp
bound
sbb
sbbb
loope
in
mov
in
add
push
dec
inc
ja
in
lret
outsl
test
subb
loope
and
fcompl
std
xchg
stc
sub
sbb
movsb
pushf
xor
xchg
insl
shll
cmp
repz
imul
and
mov
jmp
lret
loopne
inc
mov
aam
xchg
cli
sbb
lcall
je
gs
in
inc
pushf
std
test
jmp
jl
sarl
sti
adcl
jmp
scas
sub
mov
ds
jae
subb
lret
scas
push
sbb
fstpt
dec
lret
push
inc
movsb
lret
call
and
add
inc
mov
mov
sbb
jle
dec
and
ja
sbb
in
movsl
in
xchg
inc
loope
pop
out
push
push
aam
cmc
ret
insb
pop
xchg
mov
sub
gs
fwait
out
add
xor
mov
into
xor
xor
pushf
xor
and
xchg
pushf
testb
shl
mov
test
out
add
dec
repz
xorb
dec
jnp
cmp
arpl
test
jmp
push
je
js
xor
mov
cwtl
mov
cmc
adc
aas
inc
xchg
mov
add
out
xor
cmp
add
sti
in
test
and
in
jmp
or
sub
gs
xchg
pop
aad
jp
xchg
mov
mov
out
cs
inc
stos
xchg
xchg
mov
repz
dec
pop
dec
aad
mov
movsb
xor
pop
mov
mov
test
mov
xchg
lds
sub
xor
pop
test
out
loope
push
mov
rcr
addr16
push
lock
iret
mov
dec
sub
mov
pop
insl
mov
push
pop
mov
pop
xchg
mov
add
mov
rcrl
push
or
nop
xor
and
adc
push
mov
jae
xor
fsubr
in
les
cmp
cmp
mov
xchg
fisubrs
mov
and
dec
jmp
adc
insb
inc
outsb
mov
cmp
repz
stos
push
aam
mov
loopne
pop
outsl
in
pop
cmp
add
xlat
mov
int
orb
mov
idivb
push
jns
ja
fiadds
ret
mov
jle
jb
rclb
out
fs
and
jecxz
jp
push
scas
icebp
loope
cmp
je
xchg
popf
fwait
cmp
insl
push
jecxz
pop
fcomps
xchg
mov
pop
jns
mov
pop
mov
rcll
dec
stc
sbb
mov
scas
leave
or
mov
or
mov
lea
test
subb
aas
out
in
hlt
mov
cmp
cwtl
or
aas
sub
arpl
jl
rolb
xor
movsl
sti
mov
imul
js
cs
sub
inc
shlb
aas
sbbb
xchg
add
mov
and
fsubs
jg
and
sar
repz
jge
dec
dec
lahf
xor
sbb
or
sbb
xor
je
mov
lret
clc
mov
ret
iret
gs
jnp
mov
repz
pop
lret
ret
sub
loopne
lods
jg
sahf
and
cmp
call
bound
jo
jnp
aaa
mov
sahf
lds
inc
fisttpll
xchg
ret
inc
push
xchg
inc
or
sub
cmp
stos
dec
and
aas
jae
outsl
mulb
frstor
into
adc
fildl
fiadds
xor
sbb
test
lahf
insb
push
jmp
adc
ds
mov
clc
add
loopne
cmpsb
shl
int
push
mov
js
add
rorb
nop
pop
pop
or
incl
pop
push
mov
fcompl
ja
fldcw
aaa
adc
add
mov
mov
mov
cwtl
pop
pop
sub
cmp
push
cld
fmull
pusha
mov
shl
mov
shlb
mov
imul
les
xchg
filds
cmp
popa
call
adc
jl
push
rorl
les
inc
and
movsb
lods
in
ds
dec
or
adc
shlb
sbbb
push
mov
inc
les
push
adc
stos
pop
sbb
mov
jns
pop
pop
sbb
je
push
lret
pop
jbe
mov
lods
test
mov
imull
dec
mov
and
imul
fwait
sub
xor
cmp
imul
mov
jge
aam
and
cli
cltd
jmp
dec
lea
xchg
mov
xchg
jae
bound
das
popf
pusha
pop
jp
das
mov
pusha
fstps
ss
stc
add
sbb
pop
jp
jge
cmp
jge
fsubrl
mov
or
xchg
sub
lahf
jnp
or
jl
pusha
xchg
inc
mov
dec
test
pop
movsb
ret
sbb
fnstsw
mov
adc
lods
stos
push
inc
out
cmp
jle
add
adc
cmpsl
stos
jae
es
push
jo
push
pop
xchg
cmpsl
adc
and
pop
xchg
and
add
jno
xor
lods
adc
push
cmp
sarl
aas
lret
outsb
cmp
pop
pop
and
pop
mov
repz
mov
sarb
and
xor
push
testb
fmull
iret
das
mov
push
add
xchg
mov
add
cld
movsbl
mov
sub
test
mov
fmull
into
fsub
arpl
pop
in
notl
or
mov
inc
repnz
nop
xlat
jge
cli
fists
les
js
mov
mov
push
and
les
dec
scas
inc
dec
sti
sti
lods
jbe
mov
stc
call
jmp
jae
lock
cs
movsl
xchg
xor
mov
std
rol
in
inc
in
xchg
push
jp
repnz
dec
je
sbb
jae
jno
push
jp
outsl
xchg
xchg
push
out
rcr
aaa
scas
add
sbb
push
dec
out
loopne
sub
std
and
pop
dec
mov
and
jb
in
fnstenv
xor
arpl
xchg
les
pop
hlt
mov
stos
xchg
pusha
xchg
jmp
push
stc
decl
ror
xor
and
repnz
popf
push
lea
aad
leave
jae
adc
hlt
in
xor
shll
push
and
test
push
and
dec
addb
ret
mov
lock
mov
cli
mov
mov
or
outsl
or
dec
lods
fwait
or
add
add
dec
ljmp
pop
add
and
imul
mov
sbb
xor
push
in
hlt
int3
rorl
inc
sti
adc
leave
rolb
repnz
xchg
dec
lods
cs
pop
lahf
add
addr16
cltd
loopne
mov
dec
pop
push
mov
outsl
or
mov
add
mov
mov
mov
xor
add
dec
or
fildl
data16
fidivrl
and
pop
sbb
sbb
cmp
and
sti
les
psrld
cwtl
cmp
stos
inc
jmp
aad
pop
jo
adc
stos
push
push
outsb
hlt
stos
outsb
lock
lods
jecxz
mov
shll
lret
fisubrl
das
push
adc
mov
and
sub
mov
stc
sbb
pop
sti
push
or
test
lcall
aaa
orb
or
push
cmp
inc
cmpb
push
nop
and
jbe
pop
push
cmpsl
rcl
lret
dec
mov
mov
sub
add
mov
adc
jle
mov
add
mov
int3
shlb
loopne
ffree
sbb
popa
mov
std
jp
lret
mov
jle
out
cmpsl
test
mov
push
xor
nop
jmp
mov
cmp
cli
mov
or
adc
in
adc
adc
aad
and
mov
mov
cmp
xor
push
mov
or
outsl
dec
sub
arpl
xchg
cmp
popf
mov
insb
mov
lea
jg
mov
cmp
mov
fiaddl
xor
cmp
lods
xor
mov
clc
mov
mov
push
outsl
repnz
jg
testl
sub
jge
out
mov
divb
mov
ja
inc
aas
jl
inc
sub
jbe
mov
fucom
clc
push
scas
imul
push
int3
scas
outsl
cwtl
hlt
sub
ja
cmp
cmp
int3
fwait
and
cmp
mov
inc
sub
adc
mov
addl
ljmp
mov
js
or
icebp
aas
pop
add
loopne
rol
aam
stos
pop
jo
sub
adc
push
popa
mov
xor
jecxz
adc
adc
sbb
ss
jp
and
cmp
jns
into
push
out
mov
mov
hlt
jbe
inc
sub
arpl
out
cmpsl
adc
xor
loopne
jno
mov
xor
mov
inc
xchg
jns
add
mov
push
jbe
mov
cld
add
in
xchg
gs
pushf
fs
mov
stc
in
gs
push
sti
inc
mov
jae
jmp
movsb
mov
pop
lcall
leave
lret
push
rolb
in
add
or
mov
xor
cmc
or
adc
arpl
nop
sti
xchg
lret
add
rclb
mov
loopne
es
ds
xor
push
xchg
push
and
cmp
inc
movl
mov
pop
loope
adc
mov
int
ret
outsl
shrb
call
add
shlb
ret
insl
mov
xorl
dec
mov
push
popa
repz
pop
jl
adc
xor
or
push
sub
cmc
lock
jno
movsb
jp
xor
repz
cmp
cmp
sub
sti
imul
sbb
mov
dec
vpshufhw
es
inc
cltd
xchg
pop
scas
stos
std
shll
in
aam
dec
sti
icebp
hlt
pop
out
subb
call
pop
adc
jb
xor
mov
inc
sub
mov
cmp
cmp
ja
dec
or
lret
divl
mov
pop
mov
imul
repz
mov
rorb
into
imul
or
inc
xchg
pmaddwd
mov
pop
loop
add
add
je
lods
pop
hlt
push
insb
cmp
mov
cmp
inc
push
xchg
or
xchg
lret
add
fstl
jl
jno
jle
push
mov
add
pop
shrb
adc
jle
data16
ret
xchg
or
stos
ret
or
cmp
lret
flds
dec
jns
cmc
mov
mov
or
push
add
test
imul
mov
cli
mov
aad
sub
xchg
test
sahf
dec
mov
sub
mov
sbb
repz
and
pop
arpl
movsb
jecxz
sbb
aad
insl
rcll
rcll
xorl
cmp
mov
and
jge
mov
mov
ss
lcall
jmp
push
adc
mov
cmpb
insl
dec
push
push
pop
scas
lret
clc
mov
fcomps
mov
pop
sub
xlat
dec
mov
fcoms
mov
ds
int3
mov
gs
xchg
cmp
out
stos
mov
jp
shll
and
inc
lods
popa
push
push
add
int
cli
int3
xchg
int
rol
push
pop
add
cmpsb
cmp
cwtl
in
push
xor
pop
fwait
test
dec
fisubrl
xchg
clc
movsb
fwait
shrb
stos
nop
cmp
push
clc
cmc
xor
test
dec
mov
in
enter
xor
rorb
mov
lds
in
fildl
rclb
sbb
and
sarb
sbb
idivb
mov
dec
fildll
lret
mov
in
push
xchg
pop
jge
mov
and
arpl
cmp
mov
pop
mov
and
ds
insb
ds
add
cli
decl
scas
pop
cmpb
scas
fsubrp
and
incl
dec
mov
add
pop
ficompl
add
add
and
and
test
sub
xor
addr16
dec
xor
sub
mov
cmp
cwtl
cwtl
repz
add
cmp
int3
mov
cld
mov
sub
cmp
fistl
and
jp
iret
mov
and
mov
sahf
mov
cmp
or
fisttpl
aad
adc
cmpl
pop
xchg
sbb
fisttpl
loopne
mov
ret
jl
sub
enter
test
push
pop
shr
mov
or
fld
pop
xchg
mov
sub
xor
gs
test
sbb
or
test
mov
cmp
jbe
andb
xor
pop
add
iret
dec
pop
mov
mov
ja
cmp
lret
or
pop
loopne
sbb
sub
inc
aas
mov
pop
jbe
stc
aas
ret
cmp
out
adc
push
pusha
fiadds
and
xor
ret
and
idivl
mov
loop
testl
vpcmpeqw
or
fisubrl
mov
xchg
dec
lcall
out
mov
das
ret
stc
mov
jae
insb
lahf
scas
dec
mov
jns
push
in
enter
out
inc
fisubrs
cld
je
mov
adc
mov
or
jge
cmp
insb
inc
aaa
popf
fwait
pop
and
enter
adc
inc
add
mov
movsl
fcmove
add
insb
sbb
subl
ds
ja
inc
cmpsb
adc
loopne
das
xchg
rcll
mov
out
stc
adcl
push
dec
pop
shl
loope
int3
out
push
lea
clc
jg
or
jo
adc
inc
in
arpl
repz
push
test
cwtl
arpl
cli
call
dec
popa
cmp
push
pop
push
xlat
inc
adc
cmp
outsb
enter
cmp
rorl
gs
mov
xchg
adc
mov
rcll
out
data16
rorl
mov
jmp
push
mov
dec
scas
xchg
xchg
mov
insb
mov
test
in
in
popf
das
add
xchg
test
sbb
leave
daa
js
clc
hlt
mov
in
and
aaa
mov
in
mov
mov
xorb
call
fisttpl
int
dec
leave
jmp
loope
es
shr
and
pushf
adc
aaa
ds
xor
das
addb
mov
sbb
pop
nop
push
xorl
mov
mov
es
cmc
xor
adc
or
sahf
loope
and
icebp
in
or
add
sbb
repz
adc
sub
cmpsb
cmpsl
mov
lea
pop
or
iret
notb
sahf
pop
dec
cs
adc
xchg
fs
inc
sbb
lods
dec
push
repnz
mov
fwait
jbe
mov
mov
jmp
mov
shl
and
stos
mov
mov
push
mov
pushf
xor
jo
and
jp
je
cmp
add
jb
idivb
mov
dec
in
inc
mov
loop
push
js
int
cwtl
mov
jae
xchg
xchg
cwtl
pop
stc
mov
fdivrl
cmc
mov
push
and
inc
push
and
add
and
icebp
xchg
push
cmc
jns
jecxz
mov
xor
cwtl
pusha
shrb
aas
push
and
ss
sbb
rol
scas
bound
cmp
mov
adc
loopne
cmp
xor
mov
mov
mov
mov
cmpsb
mov
je
xchg
scas
lods
cmpsl
xor
sub
add
or
rcl
fs
push
push
sub
aam
in
and
mov
or
imul
push
jmp
jmp
or
outsl
jno
add
imul
cli
fsqrt
or
pop
call
fisttpll
imulb
sbbb
rcrb
xchg
add
cmp
xchg
arpl
imul
mov
mov
jle
pop
movsl
lcall
clc
cmp
aad
mov
xchg
push
ljmp
xlat
cmp
or
stos
rolb
mov
pop
push
or
repz
ret
push
push
mov
dec
sub
or
sub
clc
mov
sub
push
lret
rcll
add
das
xor
cwtl
add
add
enter
jg
or
push
out
enter
jmp
pop
jmp
mov
jecxz
adc
push
out
inc
jo
pop
pop
and
lock
push
jo
sub
stos
inc
cmpl
jne
push
aaa
leave
adc
fistps
outsb
inc
sub
out
movsb
sahf
sub
push
sbb
or
sbbl
mov
xorb
xor
sub
adc
dec
movsl
push
ja
imul
decb
ficompl
lods
dec
pop
pop
or
cs
xchg
std
mov
out
imul
imul
inc
mov
mov
nop
rolb
insl
add
or
aam
imul
push
pop
jne
or
push
cli
fwait
test
push
test
mov
cli
mov
mov
mov
cmc
xor
sub
push
shll
add
pop
scas
sbb
jbe
in
test
repnz
test
outsl
bnd
xor
mov
fidivrs
push
jb
in
pop
iret
fldcw
stos
xchg
mov
fcomi
in
inc
nop
cwtl
lea
sbb
mov
dec
mov
cmp
pushf
and
cmpsb
cmp
push
pop
fstl
push
mov
adc
xor
inc
cmovne
xor
inc
mov
adc
pop
loopne
mov
addr16
pop
inc
jmp
dec
cmpsl
mov
jp
pop
scas
fdiv
mov
jne
mov
nop
xchg
popa
xlat
iret
cmp
iret
sbb
dec
fiaddl
fmull
xchg
mov
stos
mov
jne
lcall
popf
mov
gs
push
addr16
jg
nop
jmp
or
call
sar
pop
fldenv
and
jmp
adc
mov
ljmp
pop
insl
add
xchg
mov
dec
sub
sti
lahf
enter
xchg
xor
cmp
mov
out
adc
in
jnp
sbb
hlt
sub
xor
pop
shrb
mov
aad
add
loop
cmp
lock
xchg
xchg
pop
ret
push
pop
mov
fists
mov
jmp
jne
pop
and
pop
xor
jo
addr16
outsb
test
hlt
dec
and
cmp
jmp
mov
clc
jle
out
mov
data16
mov
movsb
popf
and
sub
popf
sbb
sub
lock
jg
out
aam
imul
xchg
ret
dec
aad
es
rclb
std
icebp
dec
adc
jnp
mov
pop
jle
out
push
mov
ret
sbb
push
jmp
scas
push
xchg
addr16
and
aam
jbe
adc
imulb
push
js
mov
sahf
adc
push
push
clc
cltd
push
aam
iret
pop
lret
jle
mov
aad
xor
cli
push
loope
mov
mov
idivb
sub
dec
push
js
repnz
imul
mov
inc
mov
stc
inc
idivb
or
mov
pop
insl
or
sahf
mov
mov
test
sbb
out
imul
cmp
fs
or
lahf
jno
orb
adc
cwtl
jg
stos
or
mov
xor
in
sub
dec
inc
pop
sub
inc
out
fs
call
sbbl
popa
inc
jecxz
jns
sar
das
stos
sub
inc
mov
ret
pop
sbb
enter
cli
or
in
lock
jg
scas
aaa
repnz
xor
mov
mov
sbb
shl
pop
mov
popa
ret
imul
xor
sub
in
inc
jge
rclb
push
mov
adc
iret
pop
outsl
sti
push
sbb
orb
sbb
jns
and
int
pop
push
enter
jle
int
cwtl
in
int3
es
jl
cli
dec
dec
fisubs
adc
mov
push
divl
fs
adc
addr16
jo
xorb
mov
dec
dec
inc
push
mov
icebp
mov
inc
fyl2xp1
jno
jmp
jno
xchg
cmpsl
out
add
enter
fists
xchg
xchg
cmp
movsl
jo
mov
loop
mov
ljmp
adc
inc
push
icebp
push
test
subb
xor
pushl
pop
mov
pusha
pop
inc
sahf
xchg
add
leave
fadds
cmp
sub
test
mov
stos
mov
mov
loopne
test
add
sti
adc
sub
add
push
sti
mov
sbb
popf
or
movsl
mov
or
xor
jg
ljmp
adc
imul
mov
and
in
jo
pop
mov
inc
mov
cld
ret
cmpsb
pop
popa
lods
movsb
mov
addr16
out
xchg
or
ss
sbb
movsl
cmp
ss
jae
xorb
jl
push
xor
and
adc
adc
out
idivb
idiv
and
test
cmpsb
ds
jno
stos
mov
ss
pop
lcall
shl
mov
and
test
add
dec
adc
popf
jle
jo
sbb
int
cmp
push
je
or
lret
inc
jecxz
jb
test
inc
pushf
adc
adcl
pop
cmp
adc
pop
lret
lock
push
cmp
dec
pop
aaa
push
popf
fldl
jp
xchg
xchg
jo
pop
xorl
aad
push
cld
mov
pop
jle
loop
jle
add
mov
imul
lock
adcw
jne
imull
ja
cmp
int
mov
jno
xchg
imul
outsb
pop
int
push
outsb
sbb
dec
fldt
pop
and
bswap
fidivrl
add
clc
mov
cmc
arpl
cwtl
sub
inc
inc
jmp
ficoms
inc
enter
adc
push
inc
and
push
paddb
adc
loop
sbb
out
test
mov
push
mov
sub
arpl
imul
sbb
push
cmp
mov
sbbb
dec
jne
push
jno
loopne
in
aas
and
cmp
cmpsb
and
xchg
jns
stc
hlt
mov
pop
mov
fdiv
stos
clc
push
sub
clc
push
scas
int3
inc
call
push
jns
dec
mov
nop
rorb
adc
fwait
dec
mov
sub
pop
cltd
into
cmpb
rcrl
fldcw
xchg
lret
inc
mov
out
sbb
lcall
lret
sub
jle
jns
or
jp
enter
icebp
pop
mov
subb
inc
hlt
dec
aad
or
mov
cld
stc
subb
pop
out
call
test
and
sahf
int3
sahf
aaa
pop
dec
jecxz
dec
xchg
pop
scas
cs
testb
lock
push
neg
loopne
mov
call
nop
sbb
stos
arpl
popa
push
ficompl
hlt
iret
bound
and
inc
cs
test
mov
pop
sub
repz
sub
pop
jae
xor
mov
scas
jmp
notb
loope
inc
jecxz
adc
mov
jmp
in
in
or
mov
sahf
sahf
or
adc
adc
pop
ljmp
bound
pop
test
lods
pop
into
push
push
xchg
mov
sub
sbb
jb
add
xorb
mov
or
rol
movsb
push
jmp
stc
in
sahf
adc
lret
xor
or
add
mov
pop
dec
cmp
sar
jle
in
push
mov
pop
cwtl
test
adc
inc
popa
and
int
xchg
rcrb
jp
or
sahf
mov
enter
lret
cmpsb
push
mov
cs
dec
out
mov
ret
jae
mov
push
cmp
push
xchg
push
imul
in
movsb
out
gs
aaa
rolb
pop
popf
cli
movsb
mov
movsb
mov
xor
lcall
cmpsl
dec
or
lahf
or
ds
inc
cmp
orl
lods
xchg
pop
popa
sarl
add
in
rcr
arpl
jmp
mov
jle
loopne
sbbl
stc
xchg
add
sar
lods
ret
mov
xchg
mov
push
das
xor
pusha
push
mov
dec
cwtl
adc
mov
leave
int3
mov
into
in
shrl
in
mov
les
pop
and
jns
repz
mov
dec
mov
sbb
and
nop
idivb
adc
jns
xchg
rcr
adc
ja
psubsw
insl
xchg
fstpl
mov
or
xor
adc
push
loop
fstpl
or
push
aaa
jge
pop
scas
mov
sbb
movsb
xchg
faddl
pop
xor
test
and
mov
pop
inc
sub
mov
popa
push
sub
mov
clc
adc
sbb
and
lea
mov
leave
divl
mov
rcrl
sub
inc
shrl
jecxz
out
jnp
xchg
mov
push
jne
add
dec
push
cli
sahf
std
mov
xor
sub
dec
imul
je
xor
jl
sub
stos
pop
cmc
mov
inc
hlt
divb
xor
dec
adc
pop
or
sti
into
pop
das
pop
push
movsl
icebp
push
fistl
clc
neg
les
xchg
scas
loope
push
lret
push
jecxz
cwtl
dec
pop
mov
popf
imul
sbb
cs
and
mov
xchg
int
stos
add
xchg
arpl
sbb
cmpsb
mov
add
flds
xchg
das
mov
jmp
jle
dec
lock
bound
adc
fnsave
mov
and
in
ljmp
sbb
mov
loop
mov
xchg
xchg
sub
cli
je
pop
movsl
inc
shl
mov
inc
fnstsw
cld
jno
push
fs
sbbl
xchg
pop
jp
add
fadds
in
jmp
push
cli
popf
cmpsl
shll
dec
dec
sbb
fldl
jo
adc
scas
lret
push
push
sub
lret
fildl
xor
inc
sub
jnp
sti
or
or
pminub
xchg
aas
fildl
hlt
decb
ss
fmull
mov
mov
cli
mov
fstpt
cmpsb
call
enter
mov
xchg
aaa
xor
mov
in
outsl
in
scas
jecxz
cmp
out
das
adc
xor
out
pop
pop
fdiv
mov
mov
gs
divl
cmc
scas
push
add
mov
jg
add
cltd
jb
sbb
andl
insl
hlt
insl
xchg
shlb
jp
aas
imul
cs
repz
inc
xor
jp
xor
push
leave
cmp
std
adc
adc
imul
pop
dec
insl
dec
lods
outsb
jo
jle
iret
jmp
push
dec
hlt
loopne
hlt
inc
mov
sbb
jecxz
data16
fs
dec
fdivrl
mov
jecxz
shlb
js
aam
adc
in
jbe
add
lds
ja
cs
fucomp
push
dec
add
push
fcompl
inc
cmpl
div
subl
shll
out
imul
cld
sbb
jecxz
out
push
inc
jg
or
fsubl
xchg
inc
sub
test
inc
aad
int
and
dec
pop
cmc
fmull
lahf
xor
and
xchg
pop
out
xchg
mov
add
mov
loopne
mov
sbb
cmpsl
in
push
loop
mov
fwait
mov
mov
sub
icebp
orl
enter
adc
lcall
xchg
shll
cmp
repz
popf
push
push
cli
mov
popa
mov
inc
nop
sbb
test
test
pushf
outsl
sarl
lea
xor
in
fdivl
mov
or
dec
in
jge
rorb
jnp
fisubrl
aad
sahf
icebp
loopne
push
inc
pop
leave
fdivrs
pushf
and
mov
fptan
sbb
scas
mov
or
test
and
sarl
sub
jge
in
pop
fs
or
aaa
pop
and
ss
inc
xlat
dec
imul
lods
adc
fisubs
daa
ss
mov
arpl
dec
jb
pop
ret
loop
rorl
pop
addr16
movsb
pop
sbb
push
cs
aas
add
inc
jnp
dec
pusha
aas
andl
icebp
es
adc
push
xor
dec
cmp
inc
ja
mov
lcall
imul
and
xor
jns
fiaddl
lcall
push
cmp
test
jns
jbe
mov
pop
pop
aas
and
dec
icebp
addr16
repz
stos
mov
pop
clc
push
lods
les
sbb
out
into
and
xlat
aas
mov
aam
out
aad
mov
sub
pushf
xlat
xchg
xor
pushf
sbb
xlat
outsb
lcall
adc
scas
outsb
mov
fldcw
aaa
pushf
xor
aad
sub
in
lret
xor
out
adc
in
scas
cld
pop
add
inc
imul
cltd
cld
nop
mov
mov
xchg
iret
cmp
fldt
mov
js
mov
neg
mov
aad
adc
pop
jno
mov
adc
cli
cld
add
inc
rcl
fcompl
or
incb
pop
cmp
lret
and
jnp
cld
idivb
xchg
insl
mov
xor
sarb
int
pop
mov
sarl
hlt
fcompl
loop
stos
and
mov
stc
sub
cmpsl
inc
xor
sub
sbb
cmp
stc
rorl
daa
fists
jno
bound
mov
ficompl
ret
cs
aad
inc
or
ret
mov
nop
xchg
mov
xor
add
sti
dec
std
out
callw
inc
cmp
push
cld
lea
cli
aas
adc
add
and
sbb
je
and
or
in
mov
push
adc
jae
hlt
insl
mov
adc
in
jmp
pop
es
inc
or
pop
in
add
mov
dec
ljmp
movsb
loop
rclb
mov
pop
xor
and
jmp
push
dec
inc
xor
movsl
subb
cmp
sbb
xchg
inc
movsl
inc
in
movsb
xchg
adc
in
ret
push
add
shlb
test
lret
add
and
repnz
adc
xchg
push
mov
dec
or
iret
pusha
or
cmp
lret
xor
mov
mov
xor
jmp
andb
mov
cmpsb
jg
inc
or
addr16
cltd
pop
nop
mov
cmp
push
and
cmp
not
mull
fdivrl
std
lock
mov
sarb
add
scas
popaw
dec
adc
bound
popf
jnp
fisubrl
inc
sbb
insb
mov
jle
ljmp
ss
nop
int
enter
sub
push
xor
push
pop
mov
fmulp
push
out
fstps
mov
xor
sbb
std
mov
lods
lahf
repnz
jp
mov
ret
scas
les
push
and
test
cli
add
loopne
jo
xchg
xlat
movsb
xor
mov
sub
lret
pop
rcll
pushl
movsl
jns
js
loop
push
mov
adc
inc
jb
sar
les
inc
imul
xor
jl
lds
popa
push
repnz
les
mov
fstpl
xor
imull
and
xchg
mov
jl,pt
es
mov
test
pop
dec
notl
pop
imull
in
leave
pop
aad
pop
neg
incl
jecxz
shrl
mov
fistl
xor
cmpsl
or
movl
std
rcrb
les
rcrl
out
es
and
mov
mov
rcrb
push
out
mov
push
xor
xorl
in
icebp
aas
cmp
fwait
outsb
add
into
lret
stc
cwtl
ret
sahf
and
cmp
mov
dec
jecxz
push
fsubl
movsb
sbb
mov
pop
test
mov
cwtl
stos
ffree
cmp
faddl
int
es
cltd
orb
fdivs
inc
jmp
sahf
dec
add
fidivl
les
mov
mov
xchg
fimull
adc
inc
sub
fstl
shll
adc
cli
mov
stos
or
inc
adc
or
mov
sbb
mov
icebp
mov
jns
stos
iret
sbb
sar
aaa
and
push
mov
xor
inc
push
sbb
dec
gs
mov
loopne
cmp
xor
cmpsl
jnp
adc
and
pop
xlat
cmp
sbb
imul
xchg
int
push
or
out
pop
mov
in
xchg
imul
sarb
mov
leave
cmp
sub
pop
je
loop
cmc
cmp
sbb
push
dec
int3
pshufw
movsl
sbbl
lahf
and
movsb
or
pusha
mov
dec
cmc
dec
adc
and
fnsave
jg
push
and
loope
insb
xchg
pusha
ret
or
lcall
scas
call
cwtl
sub
mov
and
pop
rol
or
gs
loopne
push
xlat
sbb
xchg
sbb
aas
mov
int3
repz
add
cltd
push
scas
push
lods
cld
push
fdivs
xor
or
repz
xlat
sbb
test
frstor
das
addl
xor
and
pop
cld
data16
cmpsb
or
dec
sub
es
shl
pop
sub
jae
shld
mov
lcall
adc
or
lea
and
jnp
mov
roll
jne
cmp
sbb
sbb
scas
jmp
js
push
sbb
mov
push
callw
jmp
movsb
mov
cld
popa
into
mov
iret
push
enter
addl
into
int3
call
gs
scas
in
movsl
mov
rcrl
testl
lods
or
xlat
dec
or
xor
outsl
mov
shlb
and
or
fnsave
push
ja
mov
xchg
orl
cmp
leave
ds
jbe
mov
scas
xor
cld
mov
pusha
fnop
scas
mov
inc
adc
das
cs
xorl
xor
pop
in
orl
jecxz
in
outsl
and
lret
mov
and
mov
push
mov
or
in
iret
push
clc
cmpsb
inc
and
pop
sub
xor
inc
inc
mov
insb
and
jp
pop
js
cmpsl
add
adc
inc
dec
mov
fstl
in
push
push
xchg
in
push
imull
jge
add
dec
add
xchg
ret
jbe
inc
sahf
sbb
sti
daa
sbb
mov
cmovae
mov
repz
sbb
data16
xchg
pusha
jp
loop
or
sub
jne
fmuls
dec
fildll
push
and
fdivs
pop
adc
add
inc
pop
mov
repz
fsubrl
lret
sysexit
mov
pop
pop
testb
jge
or
lock
add
push
adc
xchg
data16
filds
inc
data16
xchg
push
stos
in
sub
pushl
pop
test
xor
fiadds
rcrb
fstl
mov
or
imul
xchg
pusha
cmc
stc
lahf
movsb
add
push
push
and
mov
dec
fisubrl
addr16
lcall
inc
xor
add
mov
iret
pop
add
xchg
xor
adc
mov
jl
mov
pop
inc
clc
insl
cmpsb
testb
out
cmp
or
pushf
dec
add
ss
out
mov
jl
into
cs
mov
int
movsl
lret
ljmp
aam
pop
daa
push
cwtl
cmp
lret
fldenv
movsl
movsb
xor
jno
inc
arpl
repnz
insb
xor
andl
mov
dec
jmp
outsl
addb
cmp
jmp
jno
or
out
je
ss
lock
and
mov
pop
inc
insb
pop
sahf
push
mov
adc
clc
add
pushf
aaa
sahf
mov
int3
lock
movsb
fildll
rcrl
bound
sbb
jnp
adc
mov
lret
xor
push
lock
jmp
mov
and
or
adc
mov
adc
xor
sub
pop
sbb
xchg
hlt
pop
stc
add
cmp
adc
mov
sbb
push
push
mov
ret
push
jno
orb
push
dec
imul
mov
loop
stos
js
mov
cs
xchg
dec
aaa
cld
lods
lea
jecxz
into
add
fcmovnb
ljmp
loop
mov
je
lret
mov
cwtl
test
add
and
pusha
or
shlb
leave
scas
cmp
adc
push
pop
xchg
jb
aas
ja
das
test
pop
and
jle
cmpsb
mov
dec
inc
jg
and
mov
and
and
in
xlat
dec
daa
adc
dec
mov
stc
dec
xchg
sarb
rcl
cmp
je
out
popa
fwait
cmpsl
sub
mov
gs
mov
fildll
xchg
into
shrl
mov
xchg
sbb
shrb
arpl
jnp
jne
clc
jns
inc
scas
sub
fstpt
icebp
jmp
push
mov
add
or
es
cmpsl
mov
mov
sbb
stc
sub
xchg
fidivrl
hlt
adc
insl
push
insb
or
icebp
int
ja
xor
call
js
int3
sub
push
outsb
idiv
mov
mov
mov
icebp
push
pushf
cmc
pop
push
std
push
mov
inc
std
xchg
stc
cmp
nop
and
push
rol
std
pop
or
jno
jg
loop
add
mov
rcr
mov
jae
mov
mov
cmp
pop
loopne
shl
sti
ret
insb
mov
clc
pop
fnstenv
mov
pop
lret
ds
in
xchg
cmpsl
fisubl
mov
cmp
jne
push
imul
and
or
inc
lret
into
gs
into
sub
jecxz
mov
or
dec
lret
sbb
adc
mov
mov
adcb
push
mov
sub
repnz
sbb
jb
enter
sti
push
xor
mov
push
dec
in
rcrl
pop
leave
cmp
out
pop
xchg
in
lcall
pushf
jp
mov
xchg
stos
push
or
cmpsb
bound
jnp
sub
inc
shrb
jbe
pop
mov
sbb
sti
add
cld
mov
ret
mov
lock
inc
sub
pop
aas
cmp
lods
mov
pop
movsb
lock
int3
jns
int
pop
std
test
out
xor
or
movsb
dec
inc
insb
mov
into
mov
movsb
dec
aam
repnz
push
push
rorl
mov
mov
xchg
add
xor
hlt
and
push
mov
mov
call
sub
cmp
and
aam
and
cld
inc
mov
add
dec
ret
fisubs
shrl
jecxz
mov
adc
insl
and
sahf
mov
out
lretw
test
push
aam
hlt
xchg
jnp
in
cli
out
nop
ljmp
inc
cmp
mov
push
push
add
xchg
pop
fildll
mov
rcll
cmc
and
push
push
imul
iret
test
or
in
cld
sahf
push
lods
mov
fisttps
jae
inc
das
dec
inc
rorl
aam
test
repnz
js
add
test
mov
int3
pop
sbb
cmp
inc
sub
cmpsl
sbb
pusha
out
insb
stos
aas
push
sub
mov
sbb
jle
in
test
add
sub
jp
pop
dec
out
push
cmc
cmpb
ss
cmp
sbb
lea
xchg
mov
insl
outsl
popa
aad
in
add
adc
add
add
addl
fdivr
decl
inc
in
mul
adc
jle
jl
std
out
mov
xlat
push
rcrb
loop
fdivrs
jo
xor
mov
add
sub
xchg
mov
sbb
sahf
cmp
enter
and
jmp
xor
or
sbbl
or
jl
popa
sbb
cmp
xchg
mov
jcxz
xor
add
je
inc
mov
push
movsb
or
add
dec
sbb
fdivrl
les
in
jecxz
inc
fdivr
mov
icebp
or
mov
cmpsl
add
add
xchg
push
outsb
add
scas
adcb
in
ret
ja
pushf
push
mov
or
push
inc
sti
stc
pop
xchg
mov
test
shl
scas
jecxz
shr
je
mov
xchg
cmp
aam
mov
in
out
ret
sbb
mov
sbb
cmpsl
imul
pushf
xor
test
add
mov
outsl
xchg
lds
mov
cmp
mov
add
mov
stos
xor
push
and
repnz
imul
popa
ret
out
mov
outsl
xor
idivb
sahf
imul
push
adc
xchg
pop
dec
pop
dec
sbb
fdivs
int
adc
leave
xchg
cmp
hlt
or
mov
notl
mov
cmpsl
jno
add
push
pop
shl
or
mov
into
ffreep
pop
mov
out
jl
ljmp
insb
testb
lods
lods
mov
repz
xchg
ret
nop
repz
sub
push
or
push
add
add
xor
cs
icebp
mov
xchg
shll
loope
stos
mov
mov
cmp
cmp
mov
sbb
inc
scas
xor
nop
jne
push
mov
sbbb
repnz
sub
mov
lods
pop
xor
loopne
movsl
iret
stc
je
fwait
popa
pusha
outsl
fwait
dec
das
lods
sub
fs
pop
push
ds
push
mov
sarb
cmp
push
scas
mov
out
cli
mov
push
sbbl
sar
es
xchg
imul
mov
icebp
pop
lahf
sbbl
scas
pop
lret
iret
daa
pusha
insl
mov
ja
repz
dec
frstor
inc
xor
jmp
lret
pop
leave
mov
mov
lds
sbb
and
xchg
fldenv
mov
lahf
mov
sub
es
out
ret
subb
push
addr16
test
subb
or
cmpsl
scas
jb
ds
ret
xchg
jne
aas
inc
xchg
mov
pop
jns
in
clc
movsl
popf
pop
js
repnz
cs
xchg
and
add
or
mov
push
les
cmpsb
push
or
mov
mov
pop
push
dec
pop
out
jle
test
adc
fldenv
pop
fisubrl
sbb
inc
dec
mov
sbb
push
or
es
or
xor
cld
pop
adc
orl
xchg
xchg
popf
inc
push
jnp
push
jmp
mov
or
jbe
jl
sbb
int3
test
adc
sbb
jmp
mov
cmp
dec
cmpsb
xchg
and
push
mov
jb
and
mov
pop
push
fisubrs
inc
in
and
test
repz
sub
mov
or
loopne
or
jne
int3
cmp
pusha
cmp
mov
sbb
mov
sbb
mov
cli
idivl
pop
cwtl
add
mov
or
test
ret
movsl
mov
arpl
pop
fidivs
fsubl
mov
mov
ss
dec
sbb
pop
adc
xor
dec
scas
cmp
add
loope
cli
inc
repz
shlb
push
and
mov
aas
fbld
lcall
jo
push
movb
dec
xor
sbb
sbb
xchg
fiadds
imul
fwait
stos
jecxz
or
outsb
lahf
mov
out
repz
cld
sbb
mov
mov
adc
adc
push
fistps
mov
andb
loope
and
push
std
mov
test
in
neg
push
cwtl
adc
int
cwtl
in
sahf
sub
push
ja
push
fidivs
or
pop
sub
jmp
cmpsl
arpl
lds
jmp
dec
mov
xorb
mov
scas
es
lock
loope
and
int3
push
nop
inc
cmc
sbb
xchg
cltd
in
in
xchg
test
pushf
test
cltd
xchg
push
jne
mov
call
jg
adc
pushf
cmp
cltd
jbe
sbb
out
rcll
adc
testb
jmp
or
xor
pop
loop
dec
xchg
call
pushf
sbb
cmp
push
jmp
das
scas
xchg
mov
stos
bound
sarb
addr16
inc
dec
arpl
mov
pop
iret
fwait
adc
pop
pop
les
dec
negb
out
mov
jne
mov
in
movsl
dec
push
ds
jnp
inc
sbb
loope
sahf
dec
push
xor
add
xchg
lock
mov
popf
lods
loope
cmp
fdiv
push
sub
cld
pop
mov
movsl
inc
xor
pop
sbb
mov
mov
adc
and
and
out
cmpsl
lds
and
popf
xchg
enter
int
scas
jae
sub
push
xor
divl
outsl
lret
sub
dec
cwtl
int
pusha
dec
jg
sbb
mov
stos
inc
push
daa
aam
mov
sbb
jbe
sub
repz
mov
push
jno
mov
sbb
mov
das
inc
push
mov
xchg
pop
dec
cltd
and
dec
mov
cmp
pop
xor
movsl
xor
loope
popf
xchg
inc
lret
mov
sbb
setae
push
loop
xchg
sbb
dec
cmc
or
sahf
jns
mov
aam
jns
ret
cwtl
js
stc
and
mov
data16
das
int
arpl
adc
icebp
cmp
icebp
cltd
stos
xor
lret
call
xor
sub
dec
and
pop
imul
push
and
cmp
lds
mov
fcmove
jmp
pop
jo
mov
ss
scas
sbb
mov
jae
outsl
push
or
cmp
jns
arpl
xlat
push
sbb
rcl
pop
mov
enter
mov
iret
icebp
push
cld
push
loop
pop
bsr
pop
je
aaa
or
xor
mov
andb
push
and
inc
arpl
data16
lock
outsl
push
out
inc
imul
xchg
push
fnstenv
sti
xchg
mov
fwait
data16
pop
cmp
fstps
jne
ja
push
mov
push
mov
xor
push
xchg
cmp
in
adc
or
sub
sub
inc
decb
xor
adc
xchg
push
push
aas
mov
stos
xchg
repnz
aad
pop
dec
xchg
loop
sbb
mov
pop
jmp
jle
push
pop
sub
pushf
ret
add
insl
cmpsl
data16
inc
xchg
mov
mov
das
mov
dec
adc
in
xchg
pop
push
mov
sarb
addl
std
or
lods
inc
pop
sbb
push
mov
jb
sti
push
ljmp
rcrb
adc
cs
scas
add
inc
js
sbb
cmp
testl
push
sub
in
in
loope
cltd
js
insb
nop
gs
inc
lods
lcall
cvtpi2ps
stos
bound
push
sbb
addr16
test
dec
sbb
in
mov
in
data16
repnz
inc
fimull
sbb
in
mov
or
dec
das
jne
sarl
or
test
inc
inc
dec
adc
pop
fildll
push
or
sbb
mov
mov
mov
shll
std
ror
inc
pop
and
clc
scas
fs
fcoml
leave
jge
insb
cmp
sbb
add
int
mov
lods
jg
sub
pushf
cmovnp
pop
hlt
sarl
stos
inc
pop
add
adc
xor
push
fwait
mov
and
bound
in
inc
fisttps
inc
mov
test
adc
cmp
jl
je
cmp
lock
out
cwtl
xlat
xor
xor
repz
adc
dec
push
pop
lods
xchg
jne
sbb
lock
pop
jmp
fldcw
push
sbb
xchg
cli
inc
inc
fnstsw
out
xchg
mov
jg
pushf
mov
mulb
je
lods
push
and
jno
xor
cld
hlt
mov
dec
push
mov
out
mov
stos
pop
or
int
push
and
bound
xchg
scas
out
mull
popa
fnstenv
pop
movsl
cltd
adc
imul
pushl
cmp
sbbl
repnz
dec
mov
push
fstps
sbb
push
or
out
and
ja
dec
popf
xor
pop
into
aad
aad
std
pop
jecxz
fsubrs
add
mov
lock
jbe
push
insb
pop
sbb
loop
cltd
add
roll
or
stos
mov
mov
fs
cmp
sbb
add
mov
pop
xchg
fmulp
push
enter
cmp
add
sti
push
inc
jl
and
and
outsb
gs
and
dec
aam
mov
outsl
jge
pop
sbb
add
insl
jl
scas
and
das
or
aaa
bnd
ror
shrl
or
ss
xlat
int3
cmpsl
mov
popl
mov
xchg
pop
sbb
repnz
fisubl
mov
inc
push
movsl
adc
mov
sub
mov
sbb
jae
jle
cmp
jp
pop
xor
dec
mov
or
rolb
and
jmp
test
test
xor
jg
int3
mov
test
pop
jns
loopne
xchg
sahf
adc
icebp
rcrb
pushf
add
pop
shl
in
fs
xlat
mov
mov
loop
outsb
insl
popa
stc
enter
mov
jb
or
insl
repnz
mov
ret
adcl
inc
lock
rcll
test
jno
adc
xchg
dec
or
imulb
call
xor
lret
sub
into
cs
cmpsl
fwait
sub
mov
xchg
hlt
xchg
aam
aaa
cwtl
pop
mov
out
repnz
test
xchg
pop
std
ret
scas
shrb
adc
mov
sub
cmp
shrb
scas
mov
inc
mov
cwtl
add
xchg
out
les
sti
lock
add
pop
rcll
notb
cltd
add
mov
sbbl
push
adc
inc
mov
in
scas
sti
imul
cmpsb
sub
adc
add
es
xor
cmp
push
std
mov
notb
outsb
push
add
insl
sahf
cmpsw
add
fwait
stos
adc
jae
inc
inc
cld
notl
add
cmc
inc
adc
repnz
and
sub
scas
loope
pop
popf
or
shlb
stos
out
ficompl
adc
out
or
and
mov
add
add
out
pop
std
test
and
or
jmp
adc
outsb
sbb
push
or
fisubl
outsl
test
push
leave
push
cld
rclb
pop
cmpsl
sahf
aad
xorl
mov
jle
fsub
xchg
xor
jb
push
bound
mov
mov
push
je
mov
out
decl
mov
shl
sub
jmp
cmpsl
movsb
mov
pop
mov
shl
in
lea
cld
outsb
scas
mov
pop
lret
loopne
jmp
inc
mov
add
das
fnstsw
mov
jns
repz
mov
aad
fcompl
loope
das
lods
jp
repz
pop
pop
stos
jb
xchg
test
push
xor
enter
in
jbe
cmpsb
or
out
aad
lcall
mov
xorl
mov
addb
cmp
iret
into
add
call
movsl
or
xlat
into
pop
xchg
inc
mov
add
nop
enter
mov
test
push
icebp
lds
clc
mov
sbb
pop
rcrl
jne
lret
test
or
iret
cmc
jle
mov
in
mov
cld
sub
and
and
test
cmp
xchg
lods
test
adcb
jns
cld
pop
dec
mov
mov
popa
dec
jecxz
cmp
xchg
dec
sbb
dec
testl
je
out
cmpsb
mov
clc
dec
clc
push
jp
push
push
adc
inc
paddd
dec
push
xchg
push
mov
cltd
call
or
and
jg
pusha
mov
js
loopne
das
in
repz
adc
or
sub
push
sub
lahf
mov
mov
or
sub
jnp
jle
inc
push
popa
into
pop
sbb
sbb
jae
popf
ret
sub
mov
movsb
sahf
mov
mov
lods
adc
sub
push
loope
idivb
or
jno
push
inc
cmpb
es
popf
pop
mov
pop
jle
jg
pop
pop
lods
mov
jl
movsl
filds
push
int
pop
mov
aas
and
fistl
adc
xlat
mov
push
mov
int3
pop
loop
inc
dec
fldcw
in
fs
jnp
sub
add
outsb
or
sub
push
out
jae
fsubp
cwtl
pop
test
decb
fstpl
cltd
or
out
xchg
push
inc
lcall
pop
lret
push
pop
and
xlat
inc
mov
mov
arpl
shl
shrb
out
shrl
std
sub
dec
inc
mov
sub
test
mov
leave
rcrb
push
adc
cmp
push
ja
sub
pop
push
lds
imul
sub
xchg
inc
xor
ret
aaa
mov
jmp
cmpsb
pop
adc
jl
cmpsb
jnp
outsl
jle
xchg
aad
sbbl
insb
fucomp
movb
test
mov
add
leave
cmp
xor
and
shl
stc
jle
pusha
mov
or
mov
jb
and
hlt
ljmp
je
leave
sub
addl
xor
cli
cmpsb
shll
nop
cltd
adc
out
in
adc
pop
popf
add
pop
xor
sub
sbb
cmpsb
xor
or
sub
pushf
mov
daa
icebp
mov
pop
data16
pop
repz
mov
mov
nop
sbb
cmpsl
and
das
push
jl
mov
enter
sti
sarb
ret
add
mov
adc
add
mov
sub
jae
adc
mov
out
push
jmp
sub
pop
cmp
aas
inc
loope
sbb
dec
stc
cmp
pushf
mov
push
mov
inc
popa
adc
sub
pop
daa
movsl
sub
in
call
les
daa
add
mov
and
insb
lea
dec
push
inc
mov
aas
sbb
sub
jmp
mov
mov
sub
or
and
daa
das
cmp
lods
fisubrl
subl
push
iret
movsb
rclb
bound
cmp
or
mov
jecxz
xor
inc
or
roll
fstp
push
and
push
mov
sub
sbb
jl
pop
lret
loop
dec
lock
dec
push
jge
faddp
lret
xchg
pop
jno
cwtl
sbb
icebp
call
pop
sub
mov
mov
add
arpl
icebp
in
addr16
push
add
inc
adcl
mov
dec
lret
imul
xchg
mov
fldt
fdiv
out
lahf
xchg
fucomip
ret
test
mov
mov
out
adc
imul
fisubrl
enter
aam
or
mov
inc
sti
mov
sub
inc
repnz
ss
idivb
xorl
cmp
jp
or
add
addl
mov
mov
dec
out
dec
das
and
adc
nop
push
call
mov
push
js
movsl
roll
xor
mov
cmpsl
push
pop
ror
stos
fcomi
leave
out
pop
divl
cmp
cmp
icebp
pop
fstl
mov
cmpsb
xlat
lds
push
rorl
stos
clc
cmpb
adc
pushf
jnp
jp
cmp
shrb
outsl
scas
incl
hlt
int
and
xor
jmp
mov
inc
inc
dec
adc
popf
lods
jp
xchg
lods
pop
filds
adc
dec
and
push
fsub
in
cs
jp
xor
sub
jge
sub
int
jnp
ja
pop
sbb
push
mov
mov
in
lods
adc
lods
in
and
imul
popf
push
enter
cmp
pop
imul
mov
jbe
rolb
cld
cld
aaa
jl
aas
xor
jnp
imul
jge
lret
xchg
pop
sbb
push
notl
xor
mov
mov
adc
rolb
or
push
cmc
xchg
loop
das
jge
cli
mov
in
and
iret
sbb
jo
cltd
into
out
cmp
inc
dec
mov
cli
out
adc
daa
daa
xor
xor
mov
cmp
or
rcrl
mov
data16
jae
pop
rcrl
fstps
stos
lret
test
push
lret
pushf
xchg
ja
xor
lret
popf
add
sub
cs
push
pop
lret
mov
fnstsw
into
mov
jg
add
mov
incb
cmp
sbb
or
ret
jbe,pt
cmp
adc
into
les
mov
in
xor
sub
mov
jb
aas
sbb
dec
push
fdivrs
rcll
adc
add
adcl
xlat
add
mov
add
outsl
sti
jbe
std
xlat
call
adc
loopne
lods
or
pusha
push
cli
and
inc
outsl
mov
sub
loope
and
inc
cmp
gs
aam
js
dec
insl
xchg
inc
ret
pop
aas
add
dec
cwtl
lea
sbb
js
cmpsl
cmp
sldt
ret
repnz
jecxz
push
xor
fnstenv
cmpsb
call
dec
loope
je
into
das
sub
out
push
ljmp
aaa
push
enter
dec
xchg
adc
cmp
pop
jnp
in
divl
movsl
shl
or
test
pop
push
mov
sub
pop
mov
dec
jns
mov
daa
sub
and
cld
fwait
scas
fistl
sti
scas
xor
inc
sbb
pop
mov
test
push
scas
xchg
xchg
rcll
dec
mov
add
push
xor
or
xchg
jnp
sub
lods
fstpl
scas
movsb
lret
mov
add
cwtl
insl
dec
clc
sbb
jo
std
mov
lods
dec
outsb
ljmp
shll
es
jp
adc
mov
iret
cltd
fwait
and
call
push
or
sbb
lcall
inc
fists
loop
sbb
dec
jecxz
or
xor
lret
push
add
dec
fisubs
and
jecxz
or
cmp
ret
dec
sub
add
and
pop
xchg
mov
fnstcw
cld
dec
int3
lret
jl
hlt
repnz
adc
fmuls
or
add
cmp
movsl
ss
push
test
jbe
inc
ds
ljmp
sbb
ds
les
mov
mov
cmp
or
stos
dec
hlt
repnz
nop
stc
cmp
jnp
das
insl
repz
iret
pop
xlat
mov
int3
dec
cmp
cmc
add
daa
out
push
xor
cwtl
add
ljmp
nop
sub
loop
ret
test
rsqrtps
xor
mov
call
pop
js
repnz
xor
jmp
pop
ljmpw
stc
daa
adc
sarb
mov
negl
dec
xlat
sbb
adc
sgdtl
add
or
in
xchg
mov
push
sti
faddl
cli
ds
lods
pop
stos
push
cltd
push
push
xlat
aad
movsl
mov
mov
bound
inc
testl
pop
mov
cmp
loope
xchg
sub
inc
loop
xchg
out
adc
popa
sarl
decb
inc
insb
pop
arpl
pop
or
int
enter
aaa
pop
sbb
add
and
jmp
std
adc
icebp
cltd
hlt
or
test
fs
push
fs
shr
out
mov
xchg
sets
jo
popf
fbstp
negb
ret
mov
and
clc
xchg
dec
lret
sub
insl
mov
fcoml
xor
inc
nop
loopne
mov
iret
jecxz
into
push
adc
jo
repz
adc
adc
lods
ja
mov
and
mov
movsb
sub
sub
es
sub
mov
aaa
add
mov
xchg
mov
ljmp
std
xor
je
sub
xchg
stos
dec
nop
xor
out
nop
xchg
pushf
pushf
mov
aaa
in
xchg
inc
jecxz
xor
xor
sub
sti
sbb
mov
es
mov
out
and
std
push
out
sbbb
cs
fwait
pop
aas
rol
mov
inc
mov
or
movsl
xor
inc
orb
cmp
adc
pusha
lahf
cmp
add
sub
test
mov
sbbl
sub
rcrl
xor
sbb
andl
sub
pop
test
xchg
pop
clc
mov
dec
aaa
push
cmp
pop
ds
xchg
mov
ja
pushf
sub
xor
loop
add
sub
add
adc
lret
sub
inc
jle
adc
int3
or
rol
inc
sbb
popa
xchg
cmp
sub
loopne
mov
pop
sub
mov
stos
movsl
or
xchg
adcl
dec
stos
xchg
pushf
daa
addr16
push
cld
ljmp
scas
lock
jecxz
xor
or
outsl
ficoml
mov
inc
imul
jl
bound
xor
mov
adc
jb
or
scas
jp
pop
jmp
fs
push
mov
adc
pop
rorl
push
xor
xor
mov
inc
shrl
mov
inc
dec
shl
dec
adc
add
dec
xor
out
pop
mov
cmpsb
push
dec
sarl
mov
lret
add
test
scas
pop
add
mov
adc
jmp
push
lea
out
push
mov
fs
rorb
push
mov
test
lock
xchg
insb
stc
ds
sub
rclb
xchg
adc
stos
subb
pop
fdiv
xchg
push
jnp
lods
inc
rcrb
cmp
pop
jmp
loop
test
je
cmpsl
scas
mov
orb
mov
sbb
inc
daa
mov
mov
fidivrl
cmpsl
insl
clc
xchg
inc
inc
mov
inc
aaa
cmp
sub
sub
push
rcrb
loopne
mov
daa
shl
int3
sub
cmp
int
out
in
pmaxsw
dec
pushf
in
xchg
frstor
pop
inc
mov
mov
pop
or
fcoms
cld
int
arpl
or
cwtl
xchg
vpcmpeqd
pop
sub
mov
shl
or
or
sbb
mov
movsb
movsb
jle
cmp
in
leave
mov
stos
xlat
fidivrl
inc
inc
out
jl
push
or
lret
mov
aas
lcall
push
cli
inc
mov
sub
sarb
and
mov
inc
cmp
pushf
mov
int
push
mov
jae
int
cmp
stos
lea
and
aad
push
nop
outsb
push
je
or
push
inc
loop
jbe
cmp
out
leave
aam
imulb
and
mov
ret
xchg
push
icebp
jns
xor
int
mov
pushf
inc
outsb
jge
mov
inc
fs
and
push
lock
mov
fisubs
sub
mov
sub
dec
cmp
xchg
sahf
push
sbbb
repnz
incl
enter
fldl
and
int
push
mov
xor
adc
xchg
je
les
movsb
cmpsl
pop
popa
push
sub
mov
inc
push
push
clc
xchg
mov
in
stc
xlat
cmpsb
daa
cmpsb
sub
sbb
cmc
lahf
and
pop
sbb
xchg
addr16
mov
in
pop
mov
mov
cmpsb
pop
mov
clc
ret
jle
pop
clc
fstps
dec
adc
jle
leave
fisttps
sbb
mov
test
jae
leave
ja
add
mov
mov
xor
movb
test
ret
mov
loop
das
sbb
mov
sbb
fisttps
dec
iret
loop
jnp
mov
jge
daa
into
mov
jg
inc
push
mov
xor
fsubs
inc
stos
push
adc
int3
inc
test
lds
je
add
mov
test
loop
sbb
int
mov
adc
xorb
ds
fiaddl
push
cmp
mov
add
cmp
in
push
rcll
pop
xchg
lret
pop
mov
ret
test
adc
inc
push
push
and
sbb
sbbb
adc
cmpsl
cmp
mov
jge
lret
aad
insb
pushf
lcall
cmpsb
dec
xchg
push
lahf
adc
lea
shlb
inc
dec
adcl
mov
fs
out
fmuls
xorl
lods
data16
and
outsb
mov
ficoms
test
lods
xchg
mov
lret
leave
push
in
int
ja
cmp
mov
xchg
adc
push
jne
les
sub
hlt
push
sahf
xchg
xchg
and
and
push
push
jge
add
insl
add
and
aas
xor
mov
mov
push
dec
mov
and
sarl
cld
push
inc
push
xchg
add
mov
mov
lods
jecxz
stos
sbb
lods
adc
test
cmpsb
je
lock
testl
imul
add
test
fisttpll
xchg
mull
pop
shll
stos
popf
fwait
emms
stc
mov
lcall
mov
out
cmp
imul
lds
lods
pop
daa
jne
cmp
xchg
adc
jmp
mov
mov
loopne
inc
mov
mov
pusha
mov
lods
lods
push
out
sub
mov
dec
repz
lods
add
mov
and
data16
dec
xor
cmp
mov
cwtl
xor
mov
cmp
adc
imul
mov
pop
arpl
or
rclb
sbb
imul
mov
outsb
test
roll
sahf
bound
add
rcr
pop
push
sub
jbe
adc
dec
cld
cli
bound
sub
push
insb
ja
in
aam
into
stos
jns
inc
outsb
rorl
scas
and
adc
daa
adc
ret
outsb
icebp
in
inc
xchg
adc
cmp
adc
clc
in
push
cmp
int
mov
ret
popa
aas
fldt
cmp
dec
push
mov
cmp
lret
inc
fidivrl
nop
inc
sbb
xor
out
xchg
test
fsubp
pop
cltd
movsb
xor
out
mov
insl
xor
test
dec
push
push
testb
sub
mulb
fyl2xp1
or
cmp
fs
mov
pop
lds
push
and
mov
and
inc
mov
mov
dec
scas
xchg
jbe
les
dec
jae
sahf
jecxz
xchg
inc
clc
mov
sbbl
jmp
movsl
inc
pop
loopne
mov
popf
not
mov
cld
inc
leave
testl
sub
adc
xchg
dec
pop
add
shrb
or
sbb
movsl
mov
sbb
inc
jbe
imul
pop
cmp
cmp
push
jmp
dec
movsl
mov
adc
xlat
xor
dec
and
dec
ja
stos
dec
imul
les
dec
pop
and
add
add
stos
push
dec
rolb
pop
rorl
pop
jo
sahf
mov
shrl
and
push
adc
lock
mov
dec
sbb
out
push
xchg
lret
popa
jmp
std
enter
clc
adc
cmpsb
dec
stos
jl
lret
push
push
icebp
in
xor
mov
dec
std
mov
xor
pop
in
std
nop
mov
movsb
jbe
jno
xor
jne
pop
test
aam
jecxz
shl
mov
mov
dec
mov
scas
cmc
pop
xor
xor
xchg
xchg
scas
xchg
test
test
jge
dec
pop
fisubl
inc
fadds
jp
mov
fwait
xor
fs
out
repnz
mov
lahf
pop
or
ret
cmpsb
inc
test
or
jl
and
jns
repnz
cmpsl
or
xchg
ja
push
lods
xlat
std
fisubl
lret
in
mul
adc
mov
push
lahf
popf
dec
inc
mov
aas
xor
and
cmpsl
fucom
adc
ret
jae
sarb
mov
push
mov
dec
or
out
push
adc
popf
push
or
mov
sbb
inc
into
fcmovnu
rcll
test
dec
clc
loope
adc
imul
aad
push
into
scas
or
pop
pop
sbb
out
push
push
pop
xor
xchg
adc
dec
dec
adc
aas
xchg
or
std
pop
cmpsl
xlat
push
mov
scas
or
fstpl
pop
and
scas
leave
add
in
out
lock
jns
adc
fidivrl
testb
xchg
mov
mov
dec
xor
cwtl
or
call
jmp
rcrl
mov
mov
fcompl
push
add
das
aam
ret
xor
push
out
add
out
pop
jb
fnstsw
mov
mov
jns
dec
lret
cmp
dec
inc
mov
add
mov
mov
and
adc
push
xor
adc
pop
push
dec
jmp
test
xor
jo
lods
subb
inc
shrl
test
and
popf
in
and
jb
psubw
push
jno
fwait
leave
adc
test
cwtl
dec
sbb
pop
sub
jmp
test
jae
mov
sti
inc
pushf
leave
adc
xor
cltd
enter
fs
pop
jnp
cltd
adc
sbb
xor
pop
repz
lock
popf
push
or
in
adc
leave
and
in
cltd
aad
out
lahf
inc
mov
and
daa
je
mov
push
je
mov
loope
xchg
mov
xchg
into
leave
jbe
clc
out
aad
hlt
fsub
dec
pop
add
loopne
inc
stos
mov
mov
xor
cs
mov
mov
mov
push
push
pop
sub
push
mov
xorb
loope
cmp
xchg
mov
sar
and
xchg
jg
inc
je
xchg
outsl
popa
call
test
inc
jp
adc
sbb
mov
aas
int3
or
mov
fwait
xchg
xchg
xchg
lds
mov
jno
xor
mov
orb
xchg
outsl
jns
cs
decb
push
push
mov
fbld
adc
jecxz
in
cltd
mov
fistl
xor
mov
xchg
movsl
mov
or
outsb
push
enter
xorl
or
jp
xor
inc
jb
paddw
xbegin
mov
inc
jmp
movsl
pop
lods
icebp
sbb
jns
dec
out
scas
into
mov
in
stc
sub
lret
sub
imul
addb
xchg
cmp
mov
sbb
jl
push
adc
dec
cmp
cmp
insl
dec
xchg
and
insb
sub
out
js
jns
xchg
inc
cli
cmp
cmp
mov
xchg
ret
inc
popa
sub
aas
das
and
leave
jae
movsl
jo
jecxz
dec
sbb
sti
mov
fldt
int
inc
pusha
push
xchg
fcompl
or
and
jbe
data16
enter
jge
sahf
mov
xor
daa
mov
cmp
sub
ljmp
add
cmc
sti
shll
pushf
int
xor
testl
repz
jae
mov
inc
cmpsl
and
aad
movl
dec
jb
lods
out
popf
xchg
push
jb
sub
cwtl
addr16
sub
adc
inc
xchg
and
je
push
scas
jmp
add
sub
xchg
in
out
mov
cltd
shrb
les
cmpsb
pop
in
nop
mov
in
xor
dec
aas
popf
jae
pop
popf
and
cmc
adc
jmp
pop
pop
jle
scas
mov
sahf
repz
in
sub
loop
popa
cmp
cmp
test
out
mov
sub
push
fdiv
add
and
int
subb
add
iret
dec
pop
outsl
mov
inc
sti
cmp
inc
dec
les
movsl
xor
pop
sahf
pusha
out
pushf
aas
sub
dec
mov
in
inc
inc
jno
aam
data16
jmp
call
cmp
mov
je
mov
or
das
jecxz
sbb
inc
push
jns
maxps
adc
nop
cmpsl
add
aad
loope
lods
mov
cs
sbb
mov
dec
add
loope
pop
xchg
loopne
dec
and
lock
adc
fs
cmp
xor
outsl
xor
sbb
pop
bound
imul
jl
std
ficoms
scas
pop
addr16
adcb
jnp
scas
push
lret
mov
loop
add
sub
dec
scas
or
pushf
ja
add
inc
in
ja
mov
add
daa
adc
pop
xchg
or
loopne
mov
hlt
jp
cmp
lret
or
adc
push
leave
pusha
adc
sbb
imul
mov
out
mov
dec
imul
xor
incl
enter
and
jae
in
repnz
or
fs
xlat
and
fcompp
mov
mov
out
jmp
fs
adc
cmp
xchg
xor
sti
stos
lock
and
mov
cmpsb
js
push
aam
jecxz
mov
push
sub
xchg
push
rcll
fiadds
mov
mov
lret
jmp
popa
xlat
jp
daa
lretw
pop
dec
push
dec
jmp
push
out
cmpsb
in
roll
jecxz
loop
cmp
imul
je
mov
jae
adc
pop
or
xchg
mov
sarb
or
and
outsl
inc
int3
ds
lods
stos
xchg
push
lahf
add
add
xor
sbb
jae,pt
adc
stc
clc
std
dec
loopne
cmc
dec
inc
sbb
mov
mov
mov
push
int
ds
leave
mov
repz
inc
data16
mov
outsb
mov
dec
lcall
jns
mov
pop
dec
iret
sbb
sub
sbb
and
lods
stos
push
pop
out
or
fwait
cwtl
mov
scas
xchg
jl
orb
ds
or
pop
jno
pop
es
imul
push
jecxz
pop
pop
pop
inc
adc
and
add
iret
inc
add
mov
js
push
insl
cmp
test
sub
fldt
inc
mov
mov
lds
pop
or
or
jo
mov
push
hlt
mov
js
add
jb
push
adc
aaa
out
and
lcall
outsl
mov
xchg
xchg
imul
jae
inc
int
gs
mov
loop
mov
sbb
adcl
orl
sar
shl
fwait
fcoml
xor
cmp
push
imul
dec
xor
xchg
xchg
jmp
dec
jecxz
jb
push
or
aaa
or
inc
or
mov
fucomp
add
sbb
sti
es
inc
pop
adc
pop
mov
jecxz
or
dec
pop
cltd
adc
sahf
pop
cmpb
int
lcall
and
and
rcr
dec
cltd
bound
adc
pshufw
int
test
jl
andl
push
leave
add
jle
rcrl
jl
mov
jno
popl
jns
iret
std
lret
or
dec
mov
xor
loope
shl
pop
sub
mull
hlt
inc
sbb
sbb
aaa
lods
adc
mov
insl
sahf
sub
sbbl
fsubs
test
adcl
mov
sbb
ret
in
mov
sbb
dec
xchg
mov
lock
dec
xchg
fs
xchg
lock
mov
xor
or
fiadds
cmovo
cmp
cmp
stc
mov
push
mov
pushf
xchg
mov
dec
loope
cmp
mov
test
inc
and
pusha
jmp
pop
inc
stos
sbb
cmpsb
mov
cld
xchg
push
pop
xor
pusha
lods
mov
repnz
and
sub
push
jae
cmc
cmp
inc
cmp
or
jmp
loope
mov
call
mov
xor
add
fwait
sbb
sbbb
call
sbb
mov
xchg
sarb
pop
inc
mov
and
loopne
inc
lcall
lods
test
push
mov
bound
cmp
push
icebp
xchg
lcall
fldt
insb
and
lods
dec
mov
adc
or
clc
outsb
bnd
sahf
push
sbb
sbb
jnp
scas
test
addl
mov
icebp
push
or
pop
pop
mov
mov
incb
orb
mov
call
xchg
sahf
lea
xor
lea
dec
repz
ljmp
jmp
xchg
lret
mov
js
test
stos
or
popf
inc
mov
cmp
jecxz
mov
push
lea
mov
pop
pop
rol
sub
in
or
cmc
xchg
lahf
xor
adcl
or
imul
add
mov
popf
adc
pop
xchg
jmp
enter
lock
aam
test
lods
adc
mov
movsl
lea
negb
test
push
jbe
roll
or
int
addr16
cmp
push
add
and
std
cld
add
icebp
push
test
in
xchg
out
jo
xor
add
mov
in
cs
out
add
or
jne
adc
pop
and
pop
popa
mov
push
in
mov
jnp
ret
jnp
fwait
sub
icebp
ja
popf
xor
and
or
or
mov
jle
xchg
arpl
pop
mov
inc
setp
les
fsts
fcmovbe
fidivl
add
ficomps
addr16
repz
add
arpl
outsl
push
mov
mov
cmp
cli
repz
out
stc
outsb
bound
test
ja
call
imul
and
dec
add
jns
nop
or
fld
fdivrs
mov
push
js
ss
or
push
stc
xchg
dec
sub
int
or
loop
nop
in
test
outsl
out
adc
mov
insb
enter
loopne
icebp
test
pop
cmp
mov
pop
or
mov
mov
in
fsubl
orb
addl
leave
push
mov
fwait
hlt
lds
fiadds
popa
mov
push
cli
pushl
sar
rol
xlat
pop
int
lret
jno
test
dec
imul
mov
or
push
or
jbe
mov
pop
insb
cmp
dec
adc
adc
cld
add
out
jns
dec
xchg
jne
xor
notb
jge
sub
stc
aad
popf
jecxz
push
jae
vmread
insl
jmp
jp
push
sub
sub
cmp
je
loop
imul
pop
push
pop
inc
shl
cmpsl
ret
and
aaa
cwtl
pop
add
lods
adc
lds
movsb
jp
xchg
cmp
cwtl
add
outsb
je
dec
jle
fidivrl
test
pop
in
xchg
xchg
and
xor
popf
pusha
and
jp
jecxz
test
pop
push
dec
addr16
jnp
mov
mov
inc
dec
clc
jno
sbb
sbb
pop
dec
jp
dec
lods
mov
xor
lods
mov
cmpsl
pop
lods
mov
xchg
nop
xchg
idivb
sbb
je
sub
jge
pop
push
mov
xlat
adc
imul
cmp
pop
fdivrp
dec
push
inc
xchg
mulb
jp
lahf
and
das
sti
mov
int3
lods
jno
movsl
xor
dec
pop
xor
outsl
into
mov
pushf
inc
lods
loope
daa
add
pop
dec
in
dec
aam
je
jge
mov
fstps
and
out
aam
adc
xor
sub
notb
add
mov
sub
inc
pushf
cmp
or
adc
into
imul
adc
add
stos
gs
test
push
mov
xchg
lods
nop
xor
or
inc
lods
aam
testb
arpl
test
fiaddl
dec
mov
xor
mov
or
add
test
nop
std
cli
out
lock
cmc
rorl
das
or
or
ja
fcoml
sbb
or
fstpt
out
jb
leave
aam
sarl
xor
rcr
imul
idiv
inc
push
pop
lcall
loop
mov
push
mov
sub
cmpsl
adc
cmp
inc
pop
adc
mov
outsl
xchg
pop
sbbl
or
mov
sub
je
int
mov
mov
dec
aam
es
ja,pt
aas
mov
cld
sahf
lret
es
pop
xor
int3
popa
jne
jg
imul
stos
mov
sbb
out
loopne
xor
lock
push
ficoms
dec
xor
pop
xorb
dec
xor
xchg
mov
push
pop
and
xchg
mov
outsl
mov
enter
adc
jge
mov
sub
inc
roll
mov
cwtl
popa
pop
out
pop
xchg
cwtl
sbb
xor
shl
stc
mov
iret
cmpsl
lret
out
mov
adc
sub
add
int
xchg
sub
js
push
inc
xchg
bound
fucomp
lds
mov
adc
cmp
mov
pop
mov
pop
int
jb
xchg
js
add
sarl
gs
stos
pop
mov
push
int
mov
mov
or
aam
xlat
sbb
or
aaa
push
fidivrl
decb
out
add
in
cmc
pop
fisubl
in
jge
push
inc
dec
pusha
dec
and
rorl
outsl
jb
or
dec
xor
jno
rcrb
std
or
or
add
test
cltd
and
negb
or
mov
add
or
cmp
iret
int
jp
and
cwtl
dec
test
stc
ljmp
xchg
scas
rcl
dec
je
lods
mov
ds
mov
mov
ret
jno
mov
iret
bound
xchg
test
inc
and
adc
mov
and
jmp
movsb
outsb
fwait
lcall
ficoms
jl
dec
std
cld
inc
and
inc
ret
add
ret
pop
sbb
pop
andl
sbb
rclb
insb
push
pushf
sbb
add
flds
repnz
and
test
test
mov
inc
xchg
cli
adc
daa
push
lods
cmp
and
xchg
dec
loop
insb
mov
scas
pop
jmp
jp
mov
cltd
movsb
add
popa
xchg
jmp
mov
sahf
insb
dec
xchg
fstps
mov
not
xchg
cmp
jbe
rcrl
or
and
ficomps
cs
repnz
stos
jge
sarb
and
xor
cltd
out
or
cmp
sbb
mov
lret
js
fldenv
pop
dec
mov
mov
mov
add
inc
push
pop
cmp
repnz
pusha
test
inc
mov
lahf
jno
jbe
mov
xchg
pop
js
jb
int
jecxz
mov
xchg
sub
lea
repz
cmp
loop
repnz
or
xchg
popa
mov
inc
shl
aam
push
mov
scas
cmpsl
pop
into
pusha
inc
stos
je
add
mov
out
and
lea
xchg
mov
fsubrs
scas
fsub
mov
notb
fcmovu
or
mov
adc
aas
int
into
inc
pushf
je
popf
mov
lret
sub
and
stc
xchg
into
out
data16
out
call
test
push
sub
loopne
incl
sbb
fcomps
ds
xchg
push
aaa
fnstsw
sti
pusha
pop
and
cltd
sub
xchg
je
xchg
addl
mov
sbbl
fdivrl
add
push
jle
inc
sbb
test
jns
and
cs
stos
loope
fs
flds
sahf
push
mov
xorb
in
add
push
outsl
sbb
repnz
pop
outsl
push
jnp
lret
enter
adc
pushw
sti
jmp
iret
daa
lds
popf
push
std
push
xchg
pushf
leave
rcrb
shll
sti
sahf
pop
jg
aam
jl
subl
divl
inc
ljmp
xorl
mov
pop
mov
xchg
stos
xchg
mov
jg
sbb
mov
nop
test
fcoms
cmpsl
mov
cmp
popf
popf
rcl
jb
sub
mov
mov
mov
xlat
fstpl
outsb
mov
push
loop
jp
push
cmp
mov
push
fiaddl
pop
pop
xchg
sub
xchg
pop
pop
popa
and
fwait
xchg
sbb
adc
in
inc
aaa
mov
in
and
and
add
sub
pop
ret
seto
pop
adc
pop
fcmovu
sbb
frstor
test
mov
cmp
enter
es
in
out
add
test
or
cld
xchg
dec
push
aaa
jae
in
push
bound
clc
aad
adc
xchg
mov
xor
inc
bnd
fs
mov
insb
ljmp
cmp
xchg
daa
mov
pop
aas
jp
push
loope
add
or
push
cli
sbb
imull
out
mov
mov
push
xor
cmp
push
iret
jo
sub
sub
movsl
test
cmp
outsb
flds
xchg
sub
mov
push
jnp
jmp
mov
mov
xchg
popf
rorl
mov
pop
subl
jecxz
fadds
pop
adc
scas
xor
jg
jmp
pop
popa
mov
sbb
repnz
sbb
jmp
aaa
mov
xchg
sbb
xor
lock
outsb
jg
xchg
imul
mov
loopne
lcall
call
lret
cli
cmp
xor
pop
aad
lret
repz
call
aam
or
ret
outsb
jg
jbe
cmp
mov
jg
mov
or
push
mov
cmp
sbb
dec
dec
or
outsb
xor
test
enter
inc
outsl
bound
inc
call
push
shlb
clc
or
dec
int
loop
ret
inc
fsubs
pop
mov
push
or
or
pop
aam
idivb
cmp
fs
movsb
movsb
mov
or
rep
les
mov
das
js
fcomi
je
clc
push
push
mov
fistl
xchg
repnz
mov
fisubrs
aam
pop
push
mov
iret
outsb
lahf
dec
stos
clts
sbb
icebp
test
das
add
test
add
and
jns
notl
mov
xchg
sub
imul
mov
xor
das
push
movsl
push
mov
daa
int
loop
add
int
add
faddl
data16
int
mov
data16
xchg
pop
loop
fstpl
cmpsb
xchg
cltd
xor
ss
into
jecxz
push
pushf
jp
mov
fisubrs
mov
mov
insl
mov
fs
call
mov
mov
fistl
arpl
inc
dec
call
sahf
push
ret
add
mov
and
je
cli
inc
lea
push
lock
mov
sbb
mov
xorb
ficompl
enter
mov
push
test
nop
shlb
xchg
dec
mov
mov
jl
std
ror
pop
js
call
lea
dec
call
cmp
dec
call
loopne
rcrl
daa
lds
adc
pop
int3
mov
add
stos
lret
mov
and
mov
xor
movsb
cltd
pop
in
ficoml
inc
mov
mov
add
add
insb
shlb
adc
mov
or
test
rol
dec
inc
cmpb
lods
inc
fiaddl
insb
cmpb
xchg
icebp
int3
mov
jl
arpl
add
shlb
and
mov
push
mov
les
cwtl
lea
mov
or
jbe
cmp
popa
dec
cmpsl
mov
shlb
ss
lds
adc
ret
clc
push
mov
pop
cmp
mov
iret
ficomps
mov
lds
cmpb
lret
mov
xor
dec
in
push
scas
popf
mov
repnz
jnp
dec
lret
mov
cli
xor
and
cmp
mov
out
jmp
shl
pop
dec
xchg
movhps
cmp
sub
mov
sbb
push
in
nop
enter
gs
daa
iret
hlt
sarl
jb
cltd
inc
inc
push
xchg
call
ret
pop
iret
lock
test
xor
xor
mov
xor
mov
cmpsb
test
inc
lods
gs
xchg
sub
sbb
das
ljmp
push
fisttps
int3
psrad
adc
rorl
push
call
sbb
test
push
adc
add
xchg
in
loop
stos
aam
mov
push
gs
mov
xor
jbe
cmpsl
adc
jge
insl
pop
stc
adc
pop
adc
int
jg
push
xchg
sbb
pop
pop
fistpl
inc
pop
mov
xchg
insb
leave
push
fldcw
sbb
xchg
cmp
adc
fidivl
sti
imul
push
andb
out
subl
mov
adc
mov
pop
pop
pop
mov
jnp
push
xchg
mov
nop
mov
mov
cmpsl
cmpsl
push
mov
outsl
mov
das
std
cmp
les
xor
inc
js
sbb
sub
sub
pop
in
notl
cmpsb
mov
repz
adc
in
or
jo
dec
sub
dec
out
data16
je
add
mov
into
push
xchg
aam
iret
aas
or
imul
and
scas
xchg
ja
shl
add
ds
outsl
pushf
imul
les
andl
inc
jo
mov
roll
push
mov
xchg
jns
mov
push
mov
inc
mov
stos
cmp
xor
insl
gs
fcos
cs
add
mov
push
jnp
cltd
pushf
addr16
jecxz
cld
mov
xor
mov
mov
mov
mov
lock
or
inc
inc
sub
fsub
add
dec
push
sub
or
or
xor
inc
repnz
or
enter
jne
inc
gs
scas
push
lock
pop
in
jne
push
pop
adc
sbb
sbb
fwait
xor
stos
mov
testb
cs
xor
add
pusha
hlt
arpl
push
hlt
jg
and
dec
push
pop
dec
test
insl
inc
popa
cmp
inc
fnstcw
mov
stc
xchg
cld
cmpsb
and
hlt
cmp
mov
insb
lret
jbe
push
mov
push
cld
int
lret
xor
inc
pop
inc
lds
pop
js
xor
dec
cld
inc
push
mov
or
xchg
shlb
sti
ds
movsb
mov
aam
mov
cmp
adc
iret
sub
pop
enter
aas
ss
sub
roll
jecxz
dec
dec
or
mov
loope
outsb
ds
aad
mov
mov
movsb
jecxz
rcrl
mov
popa
or
testl
ret
lahf
mov
cwtl
push
dec
xchg
and
sbb
movb
sbb
sub
mov
push
adc
sbb
sub
and
and
por
pop
subl
pop
sti
shl
xlat
ror
adc
mov
aas
test
stos
out
xorl
lock
pop
add
push
fnstcw
fs
das
jecxz
xor
fidivs
iret
or
mov
out
lds
cmp
ficomps
sub
fnsave
repnz
xchg
sbb
add
insb
xchg
dec
aas
test
test
ss
xor
ret
pop
jns
add
adc
lret
je
fstps
sub
push
xchg
xchg
cmp
jae
sub
icebp
mov
inc
ret
lds
loope
sub
loope
cmpsb
mov
dec
in
pop
loop
mov
ficoml
repz
mov
jge
int3
lock
hlt
mov
inc
push
out
sbbb
jl
out
xchg
je
mov
and
inc
xchg
pop
jl
jo
and
lret
add
cmpsb
xor
cli
popf
dec
popf
mov
pop
jecxz
in
or
adcl
je
scas
mov
scas
xorl
and
and
pop
push
bound
mov
stos
push
es
and
push
or
fcoml
xchg
clc
jecxz
mov
push
xchg
inc
mov
fisubrs
and
pop
push
fisubl
pop
mov
and
and
mov
dec
mov
or
mov
cltd
cmp
insl
mov
cmpsb
loopne
mov
outsb
dec
mov
push
rcrl
jp
mov
loopne
in
clc
popa
push
sub
cld
cs
adc
test
rcrb
addr16
leave
fstpt
xlat
adc
sub
cmp
ss
ret
add
test
out
hlt
add
pushf
clc
push
push
xchg
or
mov
jnp
jbe
test
imul
jecxz
or
pop
pop
mov
adc
inc
outsb
imul
cmp
mov
nop
mov
adc
or
dec
push
mov
pop
lds
das
out
fwait
cmp
push
mov
lcall
andl
push
shl
jns
shr
leave
mov
adc
daa
lret
aad
fnstenv
aas
pop
inc
shrl
push
imul
jle
adc
mov
repnz
jge
orl
mov
inc
imul
sbb
stos
dec
dec
fiadds
add
clc
cmpsb
mov
mov
stc
setns
pop
out
sbb
add
add
jne
rcr
loope
daa
mov
bound
lahf
add
das
icebp
fcompl
sub
enter
xchg
jmp
leave
mov
int3
pop
cli
mov
lock
dec
pop
roll
mov
mov
mov
or
mov
out
int3
jb
test
fsts
insl
imulb
in
into
lahf
test
pop
mov
mov
stos
js
mov
popa
fdivrs
mov
imul
jno
movsb
es
inc
shl
xor
jno
cmp
inc
sub
outsl
jecxz
nop
jecxz
fcmove
lock
sbb
int3
dec
inc
pop
dec
dec
adcl
dec
ljmp
leave
mov
andl
lods
and
call
insb
in
xchg
repz
xor
pop
push
sub
pop
dec
dec
inc
lret
cltd
sub
push
in
bts
sarb
outsl
mov
ds
sahf
loopne
fsubrs
dec
sub
mov
sub
dec
inc
xor
mov
stos
int
sub
mov
pop
cmp
cmp
cli
fucom
loopne
imul
pop
ljmp
sahf
mov
cmp
mov
aam
imulb
arpl
fiadds
jns
add
xor
flds
repz
test
mov
or
mov
inc
jno
sbb
ret
pop
sti
mov
mov
inc
imul
lock
in
and
mov
in
test
js
js
xchg
scas
and
div
mov
mov
rclb
jno
mov
mov
insl
scas
add
and
inc
fsts
insl
sub
add
add
mov
or
nop
jl
cmp
int3
dec
and
push
or
xor
bound
jns
into
loope
je
jp
shrb
insb
fnstenv
mov
mov
sbb
pop
mov
jno
mov
cmp
loopne
cmp
pop
flds
push
adc
bound
fidivrl
adc
dec
xchg
jl
xchg
push
sub
cmp
jmp
xchg
adc
pop
mov
xchg
add
jae
xorb
pop
cmpsl
inc
or
mov
das
pop
mov
dec
push
lods
out
icebp
push
sahf
xor
push
inc
sbb
xor
sub
sub
cmp
pop
jl
or
enter
clc
sbbb
push
rolb
jb
push
pop
push
cmp
cwtl
xchg
dec
je
je
adc
xor
ja
outsb
shll
dec
into
lcall
push
in
inc
mov
pop
gs
inc
adc
fcomip
jg
mov
ror
ret
push
xchg
inc
les
add
jo
dec
cmp
out
fiadds
push
gs
mov
into
xchg
cmp
jp,pn
andb
adc
dec
push
aas
int3
mov
and
movsl
xchg
inc
adc
mov
pop
dec
aaa
mov
icebp
jo
subb
vcvttss2si
clc
loopne
mov
cli
imull
inc
repz
cmpsb
push
imul
mov
pop
mov
sub
mov
loope
inc
in
call
push
mov
jl
arpl
push
or
jge
sbb
loope
ret
push
lds
test
jae
out
xor
mov
test
jle
adc
or
add
inc
ret
lock
daa
fsts
xor
out
jmp
mov
cmpsb
mov
jnp
ret
mov
pop
fisttpl
je
jmp
xor
cwtl
in
xor
or
mov
orl
ret
sbb
aad
ret
in
sbb
stc
jp
add
add
lock
and
lods
pop
lcall
data16
xor
in
frstor
out
addr16
push
adc
repnz
sarb
adc
mov
inc
jno
or
test
sar
mov
push
nop
mov
clc
je
and
in
out
push
push
sub
mov
fldcw
mov
insb
movsl
sub
frstor
mov
jle
cmpsl
ja
fadds
xor
pusha
jmp
mov
aas
mov
ret
loopne
cmp
sbb
push
movsl
rolb
repnz
and
mov
push
in
pop
pop
roll
test
out
and
pop
out
adc
lcall
xor
jae
pop
int3
jnp
or
mov
pop
arpl
scas
call
mov
sub
push
and
cmpsl
aas
and
lret
jae
sbb
and
cwtl
xor
inc
mov
repnz
dec
xchg
jl
dec
mov
fistps
divl
js
pop
cli
xor
ror
cmp
mov
add
enter
jmp
mov
cmc
jne
sti
adc
insl
insl
es
mov
js,pn
ret
xlat
inc
ds
jnp
add
jb
clc
inc
mov
nop
scas
in
mov
adc
xchg
pop
lret
xchg
dec
sbb
es
sub
adc
lea
clc
cmp
enter
push
push
clc
pop
outsb
lret
sbb
loop
and
cli
sti
aam
mov
cli
jne
xchg
rorl
enter
mov
inc
xchg
pop
addl
aas
fisubl
mov
push
cld
lds
repnz
outsb
adc
ds
mov
or
js
faddl
or
fwait
push
notl
dec
xor
add
cmp
lret
pop
fistl
addr16
pusha
mov
mov
adc
ja
pusha
ret
push
or
add
push
inc
les
lods
decl
or
jne
push
xchg
jecxz
sbb
lea
shlb
push
inc
icebp
scas
enter
sub
pop
in
xchg
cmp
inc
cwtl
jae
ret
mov
iret
pop
xlat
or
fnstcw
sbb
and
sbb
inc
pop
or
mov
mov
test
mov
popa
lret
cltd
cmp
loope
sub
cld
and
fmuls
scas
cli
adc
lock
negb
loop
jge
repz
sbb
pop
scas
shrb
fdivr
gs
cmpsb
outsb
ss
inc
sbb
repnz
xor
hlt
test
xchg
rcrl
aam
andb
shll
dec
repz
pop
imul
in
sahf
inc
cmpsb
popf
outsb
jmp
push
mov
mov
aas
dec
jmp
dec
cli
movsb
jb
pushf
push
in
adc
pop
mov
mov
das
jb
dec
dec
cmp
pop
jbe
and
sub
rcr
rdmsr
fld
repnz
dec
jmp
push
sti
popa
aam
jae
inc
pop
push
stc
add
icebp
popa
mov
or
outsb
mov
xchg
sub
shl
cmpsl
repnz
popf
imul
jb
insb
lea
cmp
lret
push
adc
jo
jo
adc
loope
push
or
test
loope
adc
es
inc
push
stos
popa
lret
clc
popa
sbb
lcall
jmp
loopne
inc
adc
ret
jp
stc
mov
adc
mov
jns
ja
push
sub
or
or
ret
sbb
xchg
jne
push
lcall
adc
inc
jge
and
in
or
sbb
int
mov
sbb
mov
fcomps
in
pop
cmc
in
push
callw
hlt
fisubrl
or
sahf
scas
ffree
adc
push
xor
nop
aam
or
mov
shrb
xor
xorb
test
aad
or
push
cmp
mov
imul
std
aam
xchg
insl
adc
movsb
lcall
addr16
bound
push
cli
imul
jbe
add
int
dec
cmpsl
ja
aaa
sub
jne
or
or
push
dec
jg
adc
fwait
mov
pushf
push
test
movsl
out
cmpsb
movsb
jne
cmp
notl
inc
sbb
insl
sub
rorb
inc
xor
push
push
jmp
mov
adc
inc
mov
addr16
add
pop
cli
das
mov
mov
imul
mov
adc
adc
lock
mov
mov
add
inc
and
push
std
arpl
push
xor
sbb
sbb
and
mov
faddl
fisubrl
inc
pushl
icebp
inc
jge
pop
loope
xorl
push
jnp
adc
pop
out
sub
imul
xchg
push
fs
jbe
jne
push
cmp
mov
enter
add
arpl
bswap
add
sub
mov
les
xchg
jmp
test
dec
rclb
imul
rcll
jmp
adc
and
and
rorl
mov
sbb
leave
adc
and
jbe
jg
jbe
fcoms
rcrb
faddl
push
dec
pusha
xor
nop
daa
faddl
xlat
les
js
clc
dec
add
rclb
jle
jbe
imul
mov
mov
repz
aad
out
loop
cmpsl
outsl
es
je
xchg
pop
das
sbb
xor
sub
mov
cmpsb
hlt
out
mov
aam
test
add
ss
cmp
adc
dec
cmp
cmp
cltd
notb
in
mov
xchg
jge
pushf
jg
inc
mov
jl
outsb
pop
pushf
cmp
leave
aaa
add
cmc
movsl
add
test
enter
out
test
mov
push
sub
xchg
popa
mov
pop
jge
jmp
shlb
push
lea
hlt
fldcw
fisubs
movl
pop
sahf
mov
dec
push
add
or
in
pop
testb
jb
stos
jns
daa
sub
add
mov
test
pusha
fdivs
ljmp
hlt
lods
es
pop
xlat
jmp
inc
xchg
cwtl
cmp
pushl
and
jne
lret
add
sbb
cmpsb
xlat
sub
idivb
out
stc
fidivs
test
mov
incl
jbe
mov
sub
clc
outsb
popa
lods
insb
inc
xchg
dec
sti
pop
jle
adc
lods
mov
test
leave
cmp
mov
and
or
lret
lahf
arpl
addr16
fisttps
mov
scas
lret
jns
mov
movsb
fstpt
hlt
pop
sbb
jmp
cmp
mov
xor
inc
push
dec
aas
insb
add
test
cmp
jmp
mov
or
popf
dec
lds
mov
inc
fists
add
sbb
mov
int3
xchg
test
cmp
push
or
lea
cltd
icebp
mov
mov
mov
loope
addr16
mov
es
dec
sub
push
outsb
cld
cltd
ljmp
call
push
call
adc
mov
mov
and
xchg
cmpb
push
jecxz
lahf
mov
xor
dec
aad
push
mov
es
mov
add
scas
iret
lds
mov
ja
add
jb
mov
or
add
bound
push
enter
pop
aad
rol
pop
movsb
push
fcomp
jg
das
inc
addr16
clc
xor
cwtl
imul
or
and
enter
mov
add
push
bound
jno
or
stc
lret
loope
xchg
xchg
xor
mov
cmp
sbb
sub
scas
in
js
push
sbb
xchg
mov
sarl
imul
push
rorb
mov
in
repnz
inc
popf
adc
loop
aas
shr
js
sub
fucom
loopne
in
xchg
dec
ss
xchg
pop
dec
xor
and
add
cmpsb
jmp
add
push
mov
nop
jmp
notb
mov
fstpl
mov
mov
and
pop
mov
adcl
sbb
or
fsubrl
repnz
cmpsb
push
and
les
lods
xchg
mov
mov
je
pop
xor
pusha
or
lods
xchg
leave
dec
jle
gs
scas
fistpll
and
ret
mov
cmpsl
xchg
lock
ja
mov
cli
or
aaa
cmp
in
repnz
decb
test
mov
imul
push
xchg
push
sub
jecxz
mov
fimuls
sbb
fdivs
dec
push
sbb
loop
adcl
and
push
int3
out
daa
mov
test
cmp
xchg
inc
jns
outsb
subl
out
cmpsb
jns
cmpsb
shl
mov
add
aam
scas
push
loop
xor
decb
cmp
add
aad
int
cmp
xor
hlt
inc
call
lock
jns
cmp
pop
fldenv
add
in
outsl
stos
imul
xorb
test
mov
mov
push
imul
std
lcall
mov
sbb
add
int3
das
movsl
mov
inc
outsb
dec
xchg
ja
in
jbe
hlt
and
inc
test
mov
sbb
dec
and
ret
insb
cmp
add
adc
pop
ja
add
sarb
repz
xchg
inc
loop
and
fimull
scas
nop
sbb
mov
mov
adcl
and
mov
pop
fsubrs
push
in
xchg
insb
and
std
out
call
lea
and
in
popf
cmp
int3
scas
fsts
mov
adc
cwtl
and
push
pmaxub
ret
xchg
sbb
or
jns
cmpsl
les
sub
cmp
or
int
or
sbb
inc
mov
push
xchg
icebp
outsb
jo
les
mov
dec
sub
sahf
cld
ret
imul
mov
outsl
sbb
lret
xor
xor
arpl
xchg
popa
inc
pop
jmp
mov
jecxz
adc
add
imul
push
push
mov
mov
dec
in
frstor
in
cmpsb
iret
in
mov
or
lds
sti
push
daa
lcall
insl
icebp
jnp
out
push
inc
and
jo
dec
into
mov
shlb
or
sbb
out
ret
fs
mov
shll
inc
inc
dec
sbb
std
mov
outsb
xor
sbb
dec
andb
cli
adc
stos
in
sbbb
popa
xor
cmp
pop
lea
adcb
int3
cmp
out
adc
xadd
jmp
cwtl
pop
ficoml
icebp
call
mov
cmpsl
enter
fnstsw
out
popa
mov
push
loopne
push
mov
or
aam
scas
das
loope
fistps
insl
mov
aam
cs
cmc
popf
add
loopne
dec
cvtps2pi
fs
lock
aaa
out
out
push
push
and
sub
sahf
adc
cmovbe
xor
push
xchg
push
add
fidivs
mov
mov
leave
mov
inc
xchg
cmp
add
in
mov
push
add
scas
int
ds
push
movsb
testb
inc
push
mov
es
sub
xor
or
fistl
stos
adc
mov
inc
out
mov
inc
add
pop
pop
cmpsl
jns
and
jle
outsl
mov
sbb
dec
rcrb
inc
loopne
or
loope
cmp
sub
add
add
insl
push
mov
xchg
outsb
pop
inc
ljmp
test
fwait
scas
lahf
gs
sti
cmpsb
and
xchg
rclb
mov
repz
iret
sbb
iret
stos
sbb
adc
xor
ja
adc
iret
call
mov
and
mov
enter
mov
lret
out
pop
out
mov
and
fadds
mov
mov
mov
scas
jl
sub
faddp
lcall
jbe
mov
pop
pop
fidivl
cmp
rcrl
out
out
adc
pusha
push
dec
aad
fucomi
mov
bound
lods
jno
jecxz
fstpl
ret
in
gs
lea
dec
cmp
inc
cs
fmull
enter
inc
gs
out
jecxz
pop
mov
and
or
sub
loope
jle
repnz
aam
xchg
sub
inc
hlt
in
js
jns
inc
shl
dec
aam
sbb
jle
jmp
imul
mov
mov
sti
or
push
pop
push
sbb
xlat
out
xchg
lock
mov
mov
add
repz
lods
mov
push
loopne
sbb
nop
push
test
cld
insl
cmc
sbb
hlt
sbb
loope
addl
mov
in
arpl
mov
mov
aad
push
push
insl
jno
loop
push
bound
dec
in
movl
test
inc
xor
cwtl
dec
push
clc
mov
sbb
in
insb
mov
pop
sbb
fdivs
dec
jecxz
add
inc
sub
push
adc
add
mov
shlb
test
or
pop
jb
add
inc
popa
ss
jmp
aas
js
fidivl
mov
mov
mov
mov
dec
push
mov
inc
movsb
xchg
cmp
in
push
daa
je,pn
push
or
sarl
mov
mov
arpl
adc
ja
dec
ficoml
ss
add
xchg
pop
out
mov
lahf
pushf
fistps
sub
outsb
loop
aas
or
pop
nop
mov
shlb
xor
jno
push
sarb
adc
xchg
lret
sub
mov
dec
fxam
lret
test
xchg
repz
aad
cmc
sbb
lods
mov
pop
mov
das
out
mov
insl
scas
mov
xchg
pusha
mov
sbb
insl
lahf
scas
dec
iret
nop
repnz
xor
rcr
imul
add
jl
push
dec
push
jno
mov
mov
nop
cmpsl
pop
and
mov
adc
stos
cmp
jmp
fisttps
xchg
scas
sbb
mov
arpl
sub
or
mov
sahf
hlt
xor
inc
and
push
sbbl
mov
ror
stc
and
push
gs
lds
lods
dec
leave
in
sub
xor
test
push
loop
sbb
adc
inc
and
ffreep
add
inc
pop
jg
push
or
sbb
mov
adc
pushf
adc
int3
add
mov
cmpsb
addl
mov
cli
cmc
imul
lock
push
push
loope
lahf
sub
out
mov
outsb
cwtl
dec
rorl
jae
cmpsl
sti
pusha
sub
mov
jl
movsb
imul
lcall
mov
mov
mov
push
xchg
xchg
pop
fcoml
testl
test
fsubrl
ja
lret
call
gs
and
nop
sbb
dec
ror
adc
mov
or
push
jp
xor
adcb
out
daa
jbe
fiadds
es
scas
add
xchg
mov
mov
pop
loop
push
ret
icebp
dec
insl
iret
cmc
cmp
std
inc
cld
bound
bound
sbb
inc
sub
arpl
cltd
in
out
lret
sti
stc
inc
pop
negl
or
daa
cmp
mov
cmpsl
lret
or
shlb
in
xor
out
push
mov
movsl
scas
inc
cmc
movsb
or
je
test
mov
pop
leave
loop
call
aad
aaa
int3
aam
sbb
mov
test
ss
ljmp
aaa
sti
jae
lods
dec
or
push
jne
bound
out
xchg
add
mov
roll
pop
xchg
aad
sbb
or
adc
add
xchg
add
ret
mov
mov
mov
orb
test
out
mov
xchg
adc
mov
cmp
test
pop
ret
mov
and
pop
mov
mov
jb
stos
jp
ja
sahf
mov
add
jbe
arpl
fwait
xor
and
cmp
xor
and
xor
pop
jbe
lds
jno
aam
pop
fwait
inc
xchg
cmpsl
pushf
daa
xlat
xor
outsl
test
cmpsb
dec
js
test
cmp
mov
iret
imul
sbb
adc
sbb
dec
pop
add
stos
data16
cmpsb
mull
and
jmp
xor
push
fsubl
out
cmpsl
xchg
add
and
jecxz
cmpsb
ss
sbb
mov
cmp
lods
xor
mov
push
push
jnp
int
mov
insl
repnz
out
pop
lcall
std
sbb
icebp
cltd
iret
mov
cwtl
addb
mov
jae
fs
mov
mov
xchg
mov
nop
jo
mov
xchg
jmp
cmp
sub
ret
jecxz
cs
sbb
lea
bound
mov
push
sbb
jo
ja
mov
fldcw
movsb
jns
inc
add
lea
push
les
nop
ljmp
cs
aam
add
pop
sti
rorb
mov
ds
push
fs
adc
add
dec
ljmp
andl
into
xchg
movsl
subl
and
cmpsl
fdivrl
mov
cmc
adc
sbb
mov
jbe
sti
push
imul
adc
adc
sbb
shll
sbb
sub
cmp
jae
push
or
or
test
cmpsb
xor
sbb
test
test
push
or
pop
sub
xchg
ret
int3
loope
bound
add
pop
xchg
adc
outsb
iret
in
adcb
sbb
sti
pop
mov
sub
stos
dec
pop
mov
je
scas
mov
sbb
test
push
lds
ss
lret
lea
xor
js
int3
sar
imul
out
imul
mov
mov
pop
mov
dec
stos
sub
cmpsl
and
inc
xor
std
or
flds
in
inc
sub
lret
insl
inc
or
int3
cmp
out
js
sbb
test
pushf
push
cli
cld
mov
push
rorb
into
jno
push
lods
push
cmpsl
or
cmp
pop
xchg
jg
mov
inc
fildl
cli
mov
mov
jle
cmp
cld
cltd
jmp
cld
rcll
jbe
ret
imul
xor
sbbl
sbb
lock
lret
mov
add
lret
mov
mov
xor
in
scas
inc
iret
nop
and
enter
xlat
inc
push
xchg
nop
ja
mull
push
xchg
sbb
push
lds
mov
sbb
mov
fmuls
mov
jnp
sarb
out
lea
xor
pushf
stos
fwait
ja
scas
mov
call
out
fidivrs
arpl
int3
stos
xchg
sub
je
mov
xchg
jmp
mov
sub
and
mov
xor
int
xchg
inc
pop
in
push
mov
in
sbb
xor
or
jae
je
dec
lock
sbb
jmp
xor
std
div
enter
xchg
lock
adc
mov
in
cmp
cld
iret
out
inc
jecxz
in
imul
out
jle
ja
inc
pop
aaa
sahf
inc
imul
imul
mov
ret
cmpsb
add
mov
aad
loope
in
test
mov
sarl
fwait
jae
mov
push
mov
fld
xor
gs
xor
nop
lcall
out
cmpl
push
push
push
in
adc
cmpsl
adc
adc
sub
jle
mov
dec
cltd
fcmovbe
push
sarb
ljmp
dec
jns
mov
adc
xor
cltd
in
es
inc
aaa
ljmp
mov
sbb
loopne
pushf
inc
ficomps
cmp
dec
sbb
xorb
xchg
sub
je
fbld
loopne
sarl
int
sbb
mov
xor
xchg
ss
adc
push
loop
add
push
sti
fcomi
repnz
add
mov
rorb
xchg
or
outsb
iret
dec
push
lahf
and
jbe
jb
enter
mov
sti
jb
and
mov
mov
push
stos
sbb
fs
push
dec
push
sub
movsb
lock
popa
test
inc
mov
out
cmp
push
data16
scas
pop
sub
dec
pop
pop
mov
insb
std
lds
ds
loop
fcoml
bound
loope
cmp
shrl
inc
mov
test
stc
ja
lahf
push
mov
sti
stc
mov
adc
mov
insb
out
xor
push
jnp
xor
xor
int3
fisttps
xchg
mov
sbb
and
stc
xor
or
lods
test
mov
fildl
test
popf
mov
cs
inc
inc
push
addb
nop
mov
mov
rcrl
add
mov
call
out
out
jl,pn
adc
dec
push
add
lcall
push
fildl
sahf
inc
jge
adc
add
stc
cmp
fisubs
int3
icebp
hlt
mov
xchg
mov
add
jle
mov
add
dec
shl
test
daa
ss
mov
jmp
and
mov
pop
rol
jne
jo
and
adc
loopne
loope
and
cmpsb
fnstenv
add
sub
fs
jnp
adc
leave
icebp
mov
repz
inc
test
add
pushfw
shll
ss
fbstp
jmp
or
xchg
sahf
fs
adc
enter
repnz
xchg
mov
xor
xor
mov
out
push
fldcw
xchg
xchg
loop
std
in
xchg
sbb
sbb
pop
xchg
mov
movsb
sub
lret
cwtl
xor
aam
enter
js
jbe
shrl
ljmp
dec
rcrb
ljmp
sub
out
jge
cltd
pop
movsb
jmp
mov
xchg
lahf
ret
add
adc
shll
roll
fsubrl
andl
shrl
dec
jo
test
in
ror
push
jno
mov
adc
jnp
jno
fsubrp
sarl
cmc
dec
push
xor
xor
xlat
jbe
xchg
dec
lea
loopne
mov
addb
jmp
cmc
and
out
add
pop
or
test
xchg
out
lods
pop
jmp
mov
daa
sbbb
sub
jo
daa
or
sub
inc
fcomi
mov
or
out
in
movsb
jbe
add
stc
testb
ret
sbb
sarl
pushf
adc
je
dec
popf
fbld
flds
adc
sub
cwtl
jbe
ljmp
jb
jmp
test
dec
push
adc
pop
out
push
inc
push
sbb
lea
das
push
pop
cmpsl
or
cmp
pop
bound
and
cwtl
sbb
push
pop
jo
cmp
push
inc
fcoms
mov
mov
lock
cmc
jo
xor
mov
out
push
pop
repnz
ret
xlat
mov
xchg
dec
mov
jne
mov
push
add
incl
xor
and
cmp
cmc
dec
xchg
pop
xor
pop
sbb
mov
jg
cmp
jno
sub
outsl
sub
dec
das
lds
call
scas
cli
pop
jle
in
mov
xlat
and
xchg
adc
dec
outsl
jno
sbb
fldcw
in
inc
fnstenv
lahf
out
mov
jbe
cmpsl
mov
fmuls
mov
pop
je
pop
stc
add
pop
adc
or
repnz
mov
sub
call
jb
insb
sbb
test
cmp
add
dec
inc
cld
mov
movl
mov
jae
add
imul
adc
push
mov
lea
inc
sub
cmpsl
repz
fmul
popf
adc
push
jmp
dec
ja
mov
xchg
lea
add
xor
cmp
jl
xor
rclb
subb
dec
jbe
daa
xor
inc
test
insb
cmc
jbe
sbb
and
leave
mov
scas
sub
and
xlat
add
cmp
push
inc
xor
mov
imul
cmp
sbb
push
mov
sub
or
cltd
loop
push
xorl
sbb
jnp
aaa
jp
mov
dec
arpl
lret
outsb
sbb
and
mov
jge
xchg
cmp
cwtl
sub
mov
mov
jo
cmp
pop
add
lret
movsl
adc
push
or
sbb
or
addr16
xchg
or
dec
popf
repnz
and
mov
out
push
jmp
cwtl
sub
push
inc
sbb
les
or
cmpsl
leave
stos
cmp
sub
lea
sub
jg
adc
mov
xchg
fsubrl
dec
bound
repz
adc
mov
adc
scas
lahf
cwtl
movsb
pop
aam
xchg
fisttpll
cmp
mov
sbb
mov
int
sbb
cmc
mov
lds
pop
mov
test
repnz
push
mov
out
jmp
jns
pop
out
push
mov
cmp
cmc
or
lret
je
pop
dec
inc
leave
loope
mov
nop
test
cwtl
movsb
sub
out
jnp
rorb
jecxz
pop
inc
jnp
repz
aam
popf
xchg
pop
adc
out
mov
test
lock
cmp
out
or
bound
add
sbb
push
data16
je
dec
das
mov
add
stos
xor
cli
inc
into
mov
roll
xchg
movsb
inc
imul
shll
stos
jecxz
scas
lods
in
jmp
inc
or
fistps
insl
jp
or
push
adc
lret
sbb
les
pop
and
xchg
xchg
fldenv
add
pop
add
jecxz
lea
jnp
and
test
dec
mov
jo
dec
fbstp
adc
daa
test
dec
add
cmp
into
in
nop
in
sub
imul
and
out
cmp
fildl
roll
xor
subb
mov
sub
cltd
lret
push
stc
jl
call
sub
xchg
js
xor
nop
xchg
sahf
aam
sub
clc
push
mov
sbb
dec
pop
cmp
or
push
xor
add
in
mov
sahf
or
iret
inc
das
lock
scas
sub
pushf
and
adc
inc
dec
sub
lods
into
cmp
ds
fidivrl
mov
lret
lods
dec
jp
jmp
cli
daa
ljmp
out
in
inc
fnstsw
mov
fcmovb
arpl
dec
ficoml
scas
mov
leave
mov
fidivl
cmp
sbb
ss
jle
data16
push
lret
xchg
mov
mov
xchg
pop
jmp
aad
pop
fs
out
or
inc
lds
sbb
push
inc
push
jmp
pop
loop
or
push
ficoms
cltd
xchg
sbbl
adcb
add
ret
orb
mov
sub
push
mov
jmp
cmp
dec
adc
push
popf
fimuls
dec
dec
or
jo
pop
and
mov
sub
sarl
xorl
push
mov
and
cmpsb
arpl
sbb
cmp
test
stc
jne
pop
imul
dec
das
dec
fbstp
mov
rorl
or
rcrb
out
rorl
jne
push
dec
cmp
push
sub
inc
and
adc
and
clc
testl
push
or
fwait
bound
cmpsl
stos
cmpsb
test
adc
push
lods
cmp
ficomps
ret
inc
hlt
push
xor
push
push
mov
enter
adc
sub
push
jnp
int
test
jne
push
nop
sub
stc
jl
mov
cli
cmc
xchg
idiv
ss
inc
mov
mov
xchg
xchg
cs
sub
xchg
push
lds
mov
das
pop
sbb
clc
add
sub
jnp
xchg
orb
jae
loopne
cwtl
cli
push
in
adc
push
sub
sti
jo
xchg
sbb
pusha
sti
pop
jne
push
scas
cmc
ret
dec
test
sarb
aam
ljmp
sbb
popf
fcoml
push
push
leave
scas
and
pop
ret
addb
mov
loop
in
inc
movsb
jb
data16
push
in
popf
mov
cmpl
cmp
jp
push
mov
xchg
js
imul
lahf
mov
loope
aas
add
dec
es
xchg
stos
stc
dec
in
add
and
sbb
outsl
shlb
xor
and
mov
aad
insb
call
bound
lock
or
jge
dec
fiadds
lds
fnstenv
insb
loop
flds
test
pop
and
jns
outsl
lret
jo
ljmp
cli
nop
mov
jmp
out
addr16
cltd
push
mov
not
jg
pop
pop
sub
rcll
cwtl
adc
sbb
mov
inc
fistl
xor
mov
fistpll
mov
or
pushf
xlat
insb
push
xchg
mov
out
dec
adc
daa
negw
dec
leave
mov
outsb
pop
lods
daa
cwtl
push
in
ret
jl
or
and
dec
fbld
xlat
lret
repz
push
cltd
jo
aad
test
xchg
push
and
lock
dec
fisubrl
xor
ret
pop
adc
add
sbb
cmp
sbb
mov
insl
aas
push
cltd
jne
rcrl
fs
popf
pop
jno
ja
dec
sbb
mov
xor
loop
pop
mov
je
aam
int3
lahf
jbe
pop
xchg
mov
mov
cmpsl
fnstenv
inc
dec
and
sbb
in
jecxz
push
jp
mov
cli
sbbl
jae
int
incl
xor
and
push
inc
push
fsubp
adc
push
cwtl
sub
push
mov
cmp
mov
mov
outsl
or
shl
subb
leave
jae
rolb
fcoml
sub
cmp
data16
or
sub
lret
sbb
mov
rcl
out
jno
cltd
stc
aas
aas
push
pushf
subl
jmp
loop
push
call
push
clc
cld
mov
insb
enter
mov
xchg
std
test
ljmp
inc
ss
test
pop
inc
sub
lcall
add
mov
test
sub
sub
and
mov
loope
mov
pop
lods
fbld
and
pop
pop
xchg
pop
fwait
cmp
inc
ljmp
testl
jl
negb
les
xchg
fldt
xor
mov
push
aam
out
outsb
pop
fstpt
jb
lea
pop
pop
xchg
arpl
aad
xchg
sub
push
hlt
hlt
enter
mov
addr16
into
jg
push
mov
pop
xor
add
insb
in
mov
inc
cmpsl
ljmp
sbb
lock
popa
fiadds
sbb
loopne
fcompl
jb
add
mov
nop
addl
outsb
dec
insl
lcall
test
test
push
push
loope
fwait
dec
mulps
ficompl
dec
jno
pop
clc
mov
xor
pop
and
fmulp
inc
ret
adc
movsb
rcll
mov
mov
iret
xor
loope
fisubs
sbb
lcall
lods
leave
fldz
or
jmp
test
jnp
test
test
dec
push
pop
cmp
pop
add
push
fs
xchg
sbb
sbb
les
cld
jb
pop
pop
sbbl
in
add
adc
lcall
mov
js
mov
jno
jp
push
stc
dec
shrb
popa
notl
test
aas
mov
addr16
mov
bound
adc
sbb
aam
pusha
mov
lret
push
pop
lea
and
enter
iret
add
mov
jp
mov
mov
sbb
pushf
arpl
and
cltd
out
lcall
add
adc
nop
push
mov
scas
pop
inc
leave
sub
adc
cli
mov
xor
inc
fwait
and
fimull
dec
or
enter
loop
jg
lods
mov
aas
xor
sbb
and
or
jb
jp
mov
cwtl
mov
cmpsl
dec
add
or
and
adc
cld
mov
push
rorb
cmp
add
test
jecxz
pop
sub
mov
xor
add
dec
jmp
divb
add
js
inc
stos
aas
mov
enter
cmp
xchg
movsl
in
push
imul
dec
sub
xor
xchg
adc
fs
dec
inc
arpl
out
pushf
xor
mov
mov
aam
xchg
lock
mov
sbb
imul
icebp
aad
and
xchg
pop
pushf
cli
cmc
dec
icebp
mov
movsl
das
jns
pop
cmp
insb
movsl
pushf
adc
mov
mov
add
int3
test
dec
pop
je
mov
dec
arpl
into
insb
mov
sbb
adc
add
cwtl
jno
cmp
enter
mov
pop
inc
movsb
inc
xchg
jb,pt
adc
insl
push
add
enter
xor
clc
and
pop
push
sub
push
movzbl
pop
sbb
mov
insb
gs
pop
mov
enter
insl
movb
insl
mov
mov
xor
jne
cmc
aas
pop
or
add
fisubrl
in
or
fisubrs
pop
push
sub
jle
int3
jmp
xor
nop
rcrb
inc
adc
insl
pop
push
loope
or
je
xchg
and
cmp
scas
pop
in
adc
pop
add
int3
ljmp
cmpsb
mov
add
sti
mov
cli
cs
shlb
jg
jns
subl
mov
inc
hlt
or
mov
lret
adc
jne
shrb
push
addr16
lahf
pop
and
mov
aad
xchg
inc
mov
in
js
and
loopne
dec
mov
jge
mov
loopne
push
mov
xchg
xchg
add
je
popa
loopne
cld
frstor
jne
in
mov
dec
loope
pop
outsb
lcall
addl
je
faddl
fildll
mov
pop
pushf
push
cwtl
jecxz
sbb
hlt
xchg
mov
mov
aad
cmp
mov
ss
sarb
xchg
inc
sbb
pop
inc
push
cmp
js
out
in
mov
test
imul
movsl
jbe
int3
cmc
xor
je
add
cmc
inc
sub
xor
add
cmp
sub
loop
aad
add
add
ret
and
jge
cmp
mov
mov
push
movsb
cmp
lds
push
into
test
cli
xor
imul
xchg
insl
fwait
sbb
mov
loopne
xor
xor
into
mov
mov
cmpsl
popa
mov
and
mov
mov
clc
and
push
lcall
ds
js
cmp
push
mov
pop
pop
sbb
fisttpl
mov
sti
mov
xor
or
lods
rcl
shr
mov
movsb
mov
mov
loop
mov
mov
pop
adcl
clc
lds
stos
in
cld
cmpsb
out
jnp
mov
cmp
imul
mov
adc
sti
jp
clc
rorl
sbb
test
cmpsl
push
cmp
js
dec
and
loop
or
in
das
or
inc
or
or
mov
sbb
je
inc
cmc
mov
or
ret
push
sub
rcll
out
call
jno
xlat
cmp
shrl
adc
or
in
dec
mov
stos
jp
rcrl
xor
nop
stos
ss
jae
xlat
add
jno
imul
adc
imul
jecxz
fwait
sub
dec
rcrb
or
lcall
xchg
hlt
sbb
xor
xchg
mov
ja
test
scas
fs
popf
int
orb
and
call
movsb
bound
push
insl
push
inc
lret
insl
fcom
repz
cmpsl
jbe
lds
mov
jno
int
out
and
or
jbe
leave
mov
out
ljmp
sub
push
jmp
mov
sbb
push
stos
push
movsl
mov
imul
adcb
je
ja
out
cmp
mov
jge
popf
pop
pop
push
xor
xchg
push
push
ss
idivl
or
xor
jmp
orl
ret
into
push
mov
div
mov
fs
cmp
xchg
aam
lds
inc
cmp
inc
ror
hlt
data16
xor
cltd
dec
fcompl
fists
jg
pop
mov
cmp
push
jge
xchg
popf
cld
movsl
stc
dec
inc
cli
xchg
movsb
repnz
pop
add
dec
lods
add
xor
or
cmp
fcmovne
fs
sarl
push
xor
xor
cmc
jno
test
and
lods
popf
jae
push
and
dec
out
jp
jbe
iret
lcall
into
dec
insl
mov
insb
cmp
jle
stos
arpl
outsb
jne
mov
loope
jmp
mov
push
xlat
shlb
push
dec
test
loope
mov
ljmp
jmp
xchg
adc
pop
adc
sbb
lock
mov
add
popa
fidivs
push
lahf
cmp
and
pop
xchg
std
lcall
sarb
dec
inc
mov
mov
je
loopne
xchg
xchg
pop
mov
outsb
dec
cltd
pop
mov
decb
ret
jno
lods
fistpll
jne
or
scas
adc
pop
sbb
std
xchg
fs
fldlg2
xorl
xchg
xchg
out
test
incb
pushf
popa
pop
xchg
and
and
push
scas
sub
push
out
dec
or
lods
int3
inc
mov
xchg
dec
fbld
dec
adc
cmpl
xchg
add
lcall
repnz
fidivrl
dec
insl
das
sbb
leave
loope
mov
lds
cmp
mov
out
mov
mov
cmp
loope
pop
or
pusha
mov
movsl
sub
sbbl
push
pop
xchg
dec
push
adc
xor
push
dec
dec
sbb
es
pop
xor
inc
cmp
and
xor
popf
xor
icebp
pop
adc
lahf
pusha
repz
je
das
xchg
dec
xor
push
or
outsb
mov
push
add
sub
or
mov
or
mul
mov
pushf
in
in
jnp
inc
js
stos
pop
jne
imul
push
adc
inc
or
pop
xchg
fdivrl
loope
stc
in
xorl
out
lret
je
push
mov
mov
clc
sub
jg,pn
sub
jnp
out
fists
sub
adc
sbb
rcr
jl
stc
stc
faddp
mov
push
or
enter
lcall
dec
xchg
pop
push
sub
cmp
icebp
cwtl
and
mov
addr16
sub
mov
jnp
leave
loop
jae
sub
jo
ja
sahf
lcall
inc
fisubs
or
into
movlps
sub
cmp
sbb
xlat
jl
push
test
inc
fstl
popa
fsubrs
cmc
push
mov
adc
and
aas
jle
add
out
cmp
pushf
insb
mov
or
and
addr16
pop
sbb
inc
test
push
outsl
sbb
jo
hlt
mov
roll
pop
fbld
inc
test
sub
std
negb
leave
cmc
les
hlt
cmp
je
lahf
js
mov
jle,pt
loope
adc
xor
mov
jo
mov
inc
cmp
xorl
hlt
mov
sbb
fdivr
ret
jl
and
ljmp
mov
ss
push
xorl
sub
movsb
insl
cld
inc
sbb
cmpsl
fsub
add
ficomps
cmpb
or
iret
ja
inc
push
inc
cli
cmc
negb
push
jl
das
outsb
xorw
hlt
pusha
popa
jmp
inc
push
fldl
mov
enter
sub
pop
subl
subb
adc
fiadds
test
fsub
inc
or
xor
fwait
jns
push
push
outsb
clc
or
or
mov
or
xchg
inc
in
lahf
inc
pusha
inc
jb
add
clc
imul
push
xor
adc
xor
fisubl
mov
imul
cmpsb
fildl
inc
cltd
pop
rep
mov
sti
xor
aad
loopne
xchg
pop
ret
mov
jbe
shrl
inc
cmp
xchg
arpl
outsl
sub
adc
cmpsl
dec
lods
movsb
and
sbb
rcll
mov
jmp
test
mov
sbb
lds
mov
aas
xchg
or
lret
cmp
fisttpl
insl
xor
hlt
push
adc
sub
cld
inc
mov
xchg
mov
inc
aas
pop
push
out
dec
lods
sbb
and
pop
and
inc
insb
aad
loope
cmp
pop
or
push
push
enter
sub
cmpsb
mov
int3
js
sahf
stc
adc
jb
lret
mov
mov
xchg
faddl
dec
into
aaa
std
gs
cwtl
or
ret
add
or
mov
jnp
idivb
in
inc
rolb
fidivrl
jb
test
pop
nop
sub
push
icebp
cmpsb
sbb
adc
and
xchg
dec
jo
or
aas
scas
rol
mov
idivb
cmp
add
push
nop
lods
and
mov
iret
inc
js
arpl
or
ds
les
imul
movsl
lret
les
dec
out
push
pop
mov
loope
add
fildll
xchg
add
mov
and
aas
lahf
cmp
jns
add
inc
pop
mov
mov
push
push
outsb
sub
lock
scas
xor
or
fildl
call
test
mov
push
adcb
sahf
inc
sub
jne
cs
inc
xchg
xor
daa
mov
mov
and
jmp
adc
inc
enter
sahf
mov
mov
cmp
sub
leave
repnz
push
jg
jl
xchg
fcmovbe
mov
outsb
roll
mov
nop
push
les
std
inc
lahf
or
in
sbb
jmp
cld
dec
lods
push
or
push
sbb
shlb
jno
sbbb
jae
jns
push
aaa
jbe
add
inc
adc
scas
add
cmp
sub
ret
mov
xchg
andb
mov
std
sub
add
push
test
pop
loope
mov
cmp
into
arpl
xchg
mov
clc
mov
outsl
lods
in
and
mov
cmovbe
leave
sbb
je
xor
sbb
mov
add
xor
les
sub
stos
decl
jl
pop
inc
pop
andb
xchg
ja
call
ret
loopne
jbe
in
mov
movsl
int3
or
xor
andl
pop
outsb
push
out
andb
imul
test
pop
scas
xor
vcvtusi2sd
repz
aam
add
push
aas
sub
or
jno
movsl
jbe
jne
data16
call
test
xchg
popa
jno
mov
psrad
or
daa
in
stos
lcall
test
adc
insl
sub
dec
into
sar
sbb
leave
lock
or
lahf
repz
inc
pop
dec
mov
push
push
push
sub
arpl
xchg
cmp
idivb
int
sub
push
inc
push
sub
ss
nop
jg
lock
jno
fcom
setb
mov
push
pop
sti
movsb
mov
inc
jle
out
jno
sti
fcmovne
inc
adc
sti
loop
imul
jno
mov
mov
adc
scas
pop
sbb
gs
xor
xchg
int3
cmp
lea
sbb
and
xchg
push
mov
leave
sbb
sahf
jl
addb
inc
sub
mov
and
sbb
adc
add
test
xchg
and
ret
stos
les
inc
lcall
add
pushf
and
and
fsubs
mov
lcall
mov
inc
pop
jmp
xor
jo
dec
mov
dec
mov
in
dec
push
ds
sbb
je
adc
out
jecxz
sahf
mov
fs
cs
sub
push
hlt
jp
add
mov
lods
adc
andb
mov
xlat
pop
fdivrl
stc
int
xor
xchg
lea
cmp
lret
or
inc
pop
fcoms
dec
hlt
into
or
xchg
aad
jns
mov
xor
jecxz
mov
adc
push
xchg
pop
push
dec
aad
xor
std
or
adc
jae
push
pop
les
push
add
push
in
cli
cmpsl
lcall
int3
xor
pop
int3
lock
call
jno
cmp
push
cmp
ljmp
add
js
loopne
sub
aaa
mov
ja
lods
push
sbb
jecxz
stc
jae
in
sbb
push
loope
inc
mov
std
lret
sti
pop
inc
jo
or
jbe
lock
or
jl
sbb
inc
loope
dec
bound
insl
movb
mov
std
mov
in
aas
das
fiadds
inc
insl
mov
mov
outsl
sub
inc
pop
cmp
stos
test
fsts
push
xchg
mov
pop
stos
ja
ss
ficoms
enter
nop
in
setp
cmp
addr16
mov
call
loope
addr16
ret
cmp
jg
sbb
int3
in
lds
sub
pop
fs
lret
fcompl
sti
push
jno
out
push
mov
adc
jge
mov
packssdw
push
or
xor
mov
add
daa
cmp
add
push
out
lds
div
push
and
mov
cmp
xlat
enter
ret
adc
or
pop
inc
inc
pop
mov
and
sub
repnz
sbb
mov
pushf
push
inc
dec
sub
sub
into
mov
sbb
pusha
ret
add
mov
addl
rorl
int3
xchg
xchg
jne
rcrb
sbb
pop
loopne
enter
jp
pop
cli
negb
sbb
notl
and
shrb
add
aas
dec
xchg
mov
test
sbb
popa
std
xchg
shrb
mov
test
jnp
fucomip
pop
data16
loopne
jp
es
aaa
loope
loope
sbb
cmpsb
mov
mov
pop
xor
xor
xlat
loopne
or
dec
imul
or
adc
mov
dec
test
cmp
insl
mov
xchg
adc
mov
call
std
adc
inc
rep
stos
fimuls
dec
xchg
fistl
loopne
add
in
sbb
mov
addb
sub
in
mov
mov
ret
jno
aad
jl
add
insl
push
out
test
sahf
cltd
mov
add
das
xor
in
int
add
addr16
cmpsl
inc
jns
push
push
jnp
test
inc
fucomp
cmp
cmp
sti
out
mov
mov
js
mov
mov
pop
mov
jae
sub
xor
adcl
js
into
jno
aad
sub
fisubrl
ljmp
loopnew
sahf
inc
xchg
fldcw
pop
outsl
jg
in
sub
jle
mov
lods
push
mov
xchg
and
into
cmc
out
mov
les
insl
cmp
loope
lock
push
push
sub
dec
push
pop
jno
mov
out
fsubrs
lahf
negl
push
rclb
mov
movsb
xor
push
jne
cwtl
enter
gs
leave
inc
mov
dec
fistpl
fwait
sbb
repz
fimuls
popf
cvtpi2ps
push
aam
xor
jl
out
lahf
cmpsl
dec
out
and
cmp
push
mov
movsb
popa
jae
es
mov
push
cmp
dec
sbb
test
ljmp
adc
jmp
jg
sbb
jmp
xchg
in
sbb
jae
int
les
test
lret
mov
cmpsl
ret
and
out
ffree
sub
sub
daa
push
mov
pop
mov
sub
faddl
sub
jns
xchg
imul
jle
movsb
jnp
or
mov
fwait
lret
aas
jno
xor
xchg
xor
pop
sti
cltd
and
jg
cmp
popa
inc
jo
cltd
adc
xchg
mov
aas
lods
lret
or
cmpsb
sbb
mov
fisttpll
push
xchg
dec
push
pop
mov
xor
in
adc
outsb
ljmp
imul
jge
gs
push
xchg
fldenv
loopne
pusha
jmp
jle
xchg
in
or
inc
iret
loop
push
mov
fstpt
and
shll
es
adc
add
jle
inc
dec
or
mov
sbb
dec
sahf
movsl
out
pop
stc
scas
push
scas
jae
mov
push
mov
pop
fs
mov
lods
test
gs
xchg
jns
rclb
jmp
push
or
jns
lods
imul
and
inc
add
nop
pusha
mov
or
push
pushf
decl
sbb
repnz
bound
and
xlat
pop
pop
jo
and
sub
jg
stc
sbbb
aaa
bound
ss
jo
dec
rolb
loope
call
sub
in
div
scas
or
roll
lds
mov
sbb
dec
out
push
pop
fs
pop
stos
sbb
sbb
mov
lcall
imul
mov
inc
mov
sub
repnz
push
fsubrl
fcoml
sbb
orl
imul
push
int3
int3
movsb
je
mov
mov
adc
sbbb
ficoms
xchg
rcl
dec
pushf
les
push
push
mov
mov
sub
roll
mov
mov
pop
inc
mov
push
in
clc
and
daa
andps
sti
add
mov
mov
push
pop
sub
inc
lock
sbb
test
test
xor
mov
fwait
mov
and
divb
in
cmp
loope
scas
mov
jno
lds
or
fisubs
inc
mov
lret
loopne
and
lcall
sti
cmpsl
clc
enter
je
inc
jle
lea
int3
push
cltd
dec
xor
or
or
stc
pushf
movlps
int
movsl
sub
sbb
jp
or
pop
lret
jmp
movl
jmp
jmp
ds
jne
andb
jnp
mov
mov
sbb
into
iret
sbb
popf
sub
dec
mov
cmpsl
pop
dec
xchg
pop
inc
aaa
mov
mov
sbb
sbbl
jle
mov
mov
dec
jno
jp
daa
and
jge
pushf
sbb
iret
jmp
imul
or
stos
movsb
nop
pop
lock
mov
or
xor
lahf
iret
aad
push
pavgw
ds
mov
mov
aad
std
pop
push
xchg
ss
js
or
insl
pop
adc
cmp
sbb
lcall
gs
xor
sbb
popa
mov
dec
sub
and
das
in
leave
data16
ja
pop
shll
orl
sbb
andl
push
out
test
rorb
sub
in
cli
and
pop
mov
in
mov
movsb
and
mov
mov
jmp
scas
mov
popa
movsb
lret
inc
and
ljmp
xchg
xlat
mov
scas
mov
xchg
pop
mov
scas
ret
sub
xchg
inc
jge
pop
addr16
lret
shll
mov
les
push
pop
sub
add
dec
call
imul
adc
mov
jbe
cmpsl
pusha
add
addr16
add
stos
iret
fnsave
inc
mov
jle
mov
daa
fwait
enter
cmp
push
inc
orb
inc
mov
popa
pop
cmp
jnp
addl
jns
lods
sub
jmp
cmc
jg
std
mov
dec
loop
push
ja
in
scas
mov
pop
popl
adcb
mov
lcall
sbb
inc
lock
sbb
sbb
mov
inc
cmpsl
loop
inc
insl
or
add
mov
push
or
jae
je
mov
aad
push
fsubrl
xor
dec
fcoml
rcr
jmp
inc
and
stos
push
or
rcll
mov
lods
dec
mov
enter
push
pop
and
mov
xchg
ss
adc
das
je
push
mov
jp
shll
jmp
push
mov
fcompl
adc
push
movl
test
addb
lods
loopne
push
test
mov
loope
ljmp
insb
outsl
jne
inc
cmpsl
shll
imul
andb
push
xor
aam
or
stos
push
xchg
repz
push
jae
int
mov
out
shrl
call
xor
pop
movsl
int
cmp
push
jge
adc
lds
xchg
movsb
pop
sbb
push
jno
push
mov
mov
pop
add
je
cmp
jno
jae
imul
xlat
mov
pop
clc
fistpl
loopne
js
push
mov
test
jmp
fincstp
jmp
mov
pushf
or
jl
sub
adcl
rcrl
inc
sub
daa
pop
inc
fbld
fsubl
cmp
lods
jg
in
push
pop
mov
outsl
mov
test
pop
mov
mov
scas
cmp
les
imul
mov
push
in
adcl
fisubrl
je
movsl
pop
pop
jns
xchg
cs
sub
mov
das
and
testb
xor
stc
pop
or
mov
mov
and
ljmp
sahf
sbb
sub
or
pushf
jbe
push
fidivrs
mov
mov
loopne
push
and
das
xchg
jp
addr16
xchg
repnz
pop
pop
lahf
jmp
sbb
ret
pop
adc
xor
lods
pop
jb
dec
in
sub
dec
addr16
pop
int
fmuls
pushf
cmp
fistl
popa
call
test
add
pop
jno
ljmp
add
pop
pop
inc
lea
inc
mov
dec
dec
dec
and
or
mov
std
shrl
xchg
pop
push
enter
daa
int3
pusha
incl
mov
mov
in
pop
jecxz
mov
xchg
insl
xchg
js
dec
ret
addl
es
pop
sbbl
jecxz
insl
sub
mov
dec
mov
in
or
ja
ljmp
iret
mov
repnz
dec
daa
int3
lods
inc
pop
jp
and
sti
cmc
xchg
push
inc
cmp
cmpsl
das
mov
std
es
lcall
fwait
inc
int3
fucom
cmovl
sti
aas
push
daa
test
push
xor
mov
and
in
jp
and
iret
insb
je
xchg
ret
pop
insb
mov
or
mov
rorb
pusha
mov
add
mov
sbb
add
loope
jnp
cmp
stos
mov
jae
adc
sub
clc
out
cs
cmp
add
inc
idivb
ljmp
shlb
out
pop
mov
dec
and
sbb
pushf
adc
std
ja
sti
mov
mov
or
sbb
xchg
jnp
add
dec
sub
sub
fnstsw
pushf
sub
nop
xor
call
mov
add
push
jl
add
xor
push
pop
test
adc
testl
stc
jns
ret
cmpsl
or
nop
or
lret
imul
xchg
imul
movsb
dec
xchg
mov
lods
adc
ret
scas
cwtl
mov
cmp
pop
adc
add
out
dec
cli
pushf
and
scas
mov
mov
in
mov
mov
fcomi
out
fstpt
aad
pushf
movsl
mov
dec
ss
and
jle
gs
movsl
popa
imul
mov
adc
cmpsb
cmp
call
hlt
cmp
jb
pop
insb
es
push
mov
pop
fdivrl
dec
repz
sub
roll
xor
push
jl
jecxz
and
xchg
bound
pop
mov
mov
pop
arpl
icebp
sbb
arpl
jge
lret
repnz
addr16
add
push
mov
xchg
mov
cmpsb
fnstenv
mov
mov
clc
bound
adc
and
cmpsl
sarl
xchg
cwtl
loopne
insb
cmpl
adc
in
and
adc
movsb
arpl
fmull
sub
sub
stos
dec
push
aaa
or
in
stos
insb
jl
cld
pop
cli
jp
push
pop
inc
addr16
and
insl
stos
push
add
outsb
or
aaa
dec
loopne
pop
negb
in
sbb
mov
ffree
sub
push
js
repz
jnp
lods
adc
frstor
sahf
mov
or
imul
push
leave
popa
add
test
mov
jle
lahf
out
mov
jmp
sarb
dec
inc
mov
cltd
js
sub
test
test
xchg
xchg
add
xchg
lods
mov
mov
jns
jl
stos
jne
addb
lcall
add
adc
push
or
loope
fbstp
adc
out
pop
jns
lods
mov
shll
push
shll
xchg
mov
cmc
mov
and
mov
xor
cld
imul
dec
sub
fdivs
cwtl
add
sbb
das
mov
outsb
jno
scas
jmp
adc
cmp
pop
lock
lods
or
push
movsb
pop
out
in
in
xchg
mov
into
test
scas
in
ljmp
aad
shlb
ss
jle
cli
cmp
and
add
mov
push
or
pop
dec
outsb
loope
addl
stc
or
lods
movsl
cmp
mov
ret
add
out
and
fisubl
fcoms
cmpsl
mov
sbb
inc
sub
es
test
divb
mov
mov
rcll
imul
xorb
mov
or
and
jb
aad
jecxz
stos
add
mov
iret
fists
fildll
clc
ror
lcall
pop
lds
sbb
pop
push
fcompl
sbb
mov
sub
and
jecxz
leave
mov
and
fwait
daa
xorl
inc
push
push
sbb
int3
push
sbb
pop
mov
jae,pn
adc
or
xor
jbe
add
out
mov
rolb
pop
nop
ljmp
pop
xchg
loopne
movsb
das
cmpsl
inc
pusha
loop
movsl
lcall
push
mov
pop
sbb
insl
add
jl
shlb
or
push
mov
mov
je
or
in
rcll
add
jmp
les
lret
cs
cld
loop
jecxz
mov
lcall
pop
andb
and
pop
call
loopne
ja
mov
ljmp
xchg
sbbl
push
in
ja
mov
push
pop
int3
out
push
sub
lods
dec
ficompl
mov
jae
andb
outsl
ds
cmpsl
leave
inc
jle
xchg
mov
inc
repz
jl
cmp
lret
js
in
enter
call
fs
xchg
clc
es
in
dec
jmp
push
mov
xchg
or
xor
imul
xor
aaa
cwtl
jo
cmp
shlb
shll
sub
dec
adc
daa
mov
jle
rclb
cmpsl
sbb
xorl
pop
and
xchg
pushf
xchg
mov
into
mov
pusha
mov
jb
add
jns
leave
push
cs
mov
lcall
lods
inc
out
cmp
dec
inc
adc
lahf
movsb
cmp
dec
hlt
jae
xor
jbe
dec
adc
lahf
rcr
add
loopne
mov
lret
jmp
push
sbb
and
nop
xor
sahf
rcll
mov
jo
jmp
pop
sbbl
inc
xchg
dec
pop
out
in
daa
je
pop
mov
mov
inc
sti
add
cmpsl
scas
fsubs
notb
lcall
and
mov
iret
sbb
jmp
pop
jae
ljmp
adc
dec
push
mov
leave
rorl
scas
fadds
fwait
pop
dec
xor
ds
movl
cli
xor
rcrl
lods
and
push
jmp
call
pop
jns
push
out
inc
jns
test
cmc
imul
lds
push
adc
mov
xorb
add
add
loope
mov
sbb
aam
sbb
xchg
fdivrs
adc
and
cwtl
pusha
pop
and
mov
scas
mov
cwtl
clc
jmp
cmpsl
out
cltd
or
or
or
in
sbb
push
push
mov
filds
push
cmc
into
add
ljmp
aaa
xchg
cmp
scas
movsl
xor
rorl
xchg
xchg
pusha
das
in
je
lahf
nop
or
push
es
sub
maskmovq
idivl
test
jbe
sbb
cmp
pop
rol
std
cmpsb
mov
or
adc
aad
jno
push
mov
sahf
add
jbe
push
mov
hlt
mov
aad
xor
imul
js
cmp
xchg
das
movsl
iret
sub
data16
push
add
push
call
inc
adc
pop
or
aaa
ja
push
mov
pop
inc
push
mov
dec
push
push
adc
pop
and
cli
or
into
dec
push
in
adc
mov
mov
dec
cli
test
mov
movsl
cmp
out
cmp
fwait
into
int3
xor
jae
dec
push
cmpsb
pop
sub
push
loope
push
pop
std
mov
lods
and
into
pop
xchg
out
lods
pop
popl
jle
adc
imull
xchg
mov
pop
jno
push
rorl
mov
mov
cmp
mov
push
aad
loopne
add
sbb
dec
inc
cmp
in
popa
test
arpl
dec
test
divb
fildll
mov
outsl
pop
aad
les
aam
pop
mov
out
in
adc
xor
push
xor
mov
and
xchg
or
xchg
clc
subb
xchg
fadds
ret
fistpll
cmp
leave
ja
pushf
jle
arpl
sub
aas
push
les
addr16
jge
and
dec
mov
pop
jae
shl
mov
call
fwait
pop
and
or
bound
mov
dec
mov
mov
sub
stos
jmp
mov
fists
inc
cld
add
mov
out
push
xchg
jle
jae
out
insb
add
stos
out
sahf
fwait
sbb
and
call
pop
pop
outsb
push
xorb
jns
inc
lahf
jo
adc
xlat
xchg
add
mov
stc
lods
jle
mov
inc
mov
mov
xor
mov
pop
xchg
inc
bound
js
pop
push
jae
lods
ljmp
dec
jbe
gs
jno
mov
pop
push
imul
lods
push
scas
lock
mov
pop
or
mov
and
or
jle
lret
in
stos
jp
sub
mov
mov
fnstsw
xchg
dec
xchg
inc
sti
mov
jnp
inc
mov
mov
loop
outsl
call
pop
add
cmp
cmp
fidivrl
inc
icebp
mov
fildll
mov
cld
jecxz
push
mov
gs
xchg
mov
jbe
pop
ss
pop
push
push
in
lds
fcoml
xor
out
dec
test
es
imul
push
cltd
inc
add
sti
jp
mov
filds
rcrl
shlb
jno
in
int
jns
out
cmpsb
and
cli
jo
xor
loope
jb
sbb
in
loope
cmp
or
mov
dec
mov
outsl
ss
jmp
mov
ret
push
push
lahf
in
xchg
cmp
std
mov
inc
pop
sub
or
inc
repnz
inc
add
in
jno
repnz
mov
adc
mov
sarb
into
dec
jge,pt
pop
pop
cmp
push
shlb
out
jne
add
or
movsb
cltd
dec
sahf
jne
lret
mov
filds
adcl
jae
cmp
pop
insl
mov
shl
adc
mov
jbe
inc
cmp
push
les
mov
inc
fsubrp
ficompl
insl
bound
ret
push
sub
in
cmpsl
add
pop
xchg
icebp
xchg
pop
and
lock
xlat
fdivl
icebp
inc
add
cli
push
test
xchg
les
push
icebp
xlat
icebp
bnd
rcrb
add
mov
sub
call
jae
cmp
mov
fwait
pop
xor
stos
mov
dec
ljmp
pop
cmc
popa
push
stos
mov
bsf
in
rcrb
and
ja
sahf
dec
sti
fwait
mov
pop
out
inc
hlt
out
std
loop
lock
adc
sbb
xor
inc
mov
push
das
mov
ds
jno
daa
in
cmc
daa
sub
xchg
rclb
mov
jne
out
insl
inc
push
cmpsl
pop
push
jns
sti
xchg
push
insb
scas
mov
fidivl
fs
fistpl
sbb
mov
cmc
mov
clc
aam
mov
cmp
cmpsl
cmp
pop
or
sub
mov
mov
adc
inc
push
pop
add
and
or
mov
push
das
mov
aad
lock
inc
fisttps
xchg
pop
xor
shrl
push
fstps
stc
dec
stos
dec
int
cmpsb
fsts
out
pop
jbe
iret
test
mov
mov
xor
sbb
inc
mull
cmpsl
ds
andb
sbb
aad
inc
cmp
test
nop
data16
add
fadds
dec
or
pop
adc
and
xor
xchg
std
cmp
xlat
add
dec
repnz
loopne
add
push
fistl
push
int3
arpl
sbb
mov
cmc
jo
test
xor
mov
xor
jecxz
cmpsl
push
lea
dec
in
and
xor
push
xchg
cmp
insl
rol
push
lahf
loope
push
inc
sub
lahf
xchg
or
sub
jne
pop
inc
ss
add
mov
sub
pop
push
push
movsl
cs
mov
push
pop
xchg
and
mov
mov
rolb
push
push
in
je
test
jecxz
das
cltd
in
mov
inc
push
and
aaa
cwtl
jbe
lods
xor
sub
mov
std
cmp
subl
pusha
pop
xchg
and
xchg
push
movsl
xchg
push
sub
cmpsl
cmp
and
jnp
add
inc
mov
push
nop
inc
add
inc
sbb
xlat
jg
add
mov
nop
mov
out
push
negb
je
out
jp
imul
xor
xorl
push
int
or
sbb
xorb
inc
inc
popl
add
push
adc
cmc
adc
mov
mov
and
idivl
rcrb
sbb
xchg
insl
inc
sub
fstpt
and
pop
cs
mov
mov
mov
sub
popa
sbb
test
pop
fcoml
mov
gs
out
or
sub
mov
popa
mov
aas
lock
data16
insb
add
and
pop
mov
jne
jecxz
or
jmp
pop
cmp
shrl
addr16
mov
invlpg
dec
push
rorb
pop
cltd
pop
in
gs
pushl
or
dec
sub
ret
mov
jp
sub
test
jbe
inc
ljmp
nop
loope
xchg
jb
imul
inc
jle
sbb
scas
or
cmp
cltd
inc
add
dec
sub
xchg
add
ret
pop
les
ss
add
lahf
movsl
push
js
fcoms
push
jnp
ss
inc
or
ficompl
mov
pushf
repnz
jnp
lds
inc
sbb
sahf
mov
addl
loopne
lret
les
in
stc
cmp
push
inc
mov
fs
adc
lret
jb
push
andb
inc
sbb
and
jge
mov
pushf
xchg
cmpsb
mov
pop
cmp
xchg
sub
dec
or
sbb
push
js
call
xchg
shll
xor
xlat
dec
jge
sbb
lea
fisubrl
stc
jbe
xchg
mov
shll
call
decb
shl
or
xor
push
test
and
adc
cmp
sbb
icebp
fucomi
repnz
cmp
sbb
mov
sub
xchg
and
jb
mov
idiv
jne
pushf
cmp
jecxz
lcall
aad
out
jmp
test
mov
test
add
adc
cli
dec
test
stos
movsl
movsb
push
inc
push
mov
jge
sbb
test
icebp
sub
orb
dec
fdivrl
nop
sub
es
ret
in
addb
mov
shr
scas
push
pop
sub
int
mov
push
movl
dec
ja
xlat
mov
rcll
push
jne
or
shl
cli
cmc
hlt
aas
mov
imul
fsubrl
inc
sbb
lcall
frstor
inc
test
sbb
xor
mov
daa
je
add
mov
inc
sub
addr16
loop
push
pmulhw
xchg
outsb
cli
push
pop
mov
lock
sbb
xor
lret
xchg
push
lea
cld
sahf
adc
jmp
ficomps
in
jp
jb
fstl
je
push
sti
or
sub
jae
jle
movsl
pushf
sub
scas
scas
ror
dec
jb
pop
sti
sbb
xor
idivb
cmpsb
xchg
cmc
mov
loop
inc
lret
out
pushw
clc
mov
pushf
mov
fildl
sbb
lcall
cmp
or
out
push
pop
stc
jno
xchg
bound
outsl
test
test
mov
or
fsubrp
xchg
jo
popf
test
sbb
sbb
push
and
sub
in
jle
push
addl
mov
xchg
xor
ja
adc
loope
jg
call
sub
mov
stos
or
dec
dec
mov
and
adc
push
xor
int3
inc
stos
xlat
in
push
loope
push
lods
aam
fdivr
add
stos
movb
and
pop
and
jl
insl
rcrb
inc
shr
inc
cmc
leave
push
imul
aaa
test
outsb
cmp
inc
pop
dec
pop
jb
sahf
jne
or
inc
insl
sub
push
movsl
ja
inc
subl
add
sti
adc
sbb
push
add
scas
imul
push
mov
jg
cmpsb
xchg
test
inc
addr16
lret
mov
xchg
pop
mov
cmp
xlat
jg
cmpl
adc
daa
sbb
test
push
push
adc
outsl
sbb
shlb
iret
cld
jge
sbbb
addr16
lods
fisttps
ret
ljmp
cmp
jg
xchg
aam
and
dec
or
stc
inc
lods
repnz
dec
in
xchg
pop
xchg
adc
xchg
inc
dec
sar
cmpsl
cli
and
push
cmc
repz
enter
pop
dec
rolb
push
jl
lret
xor
pop
dec
pop
jae
mov
sbb
test
xchg
push
call
mov
aam
mov
fwait
mov
sub
dec
mov
and
loope
and
repz
add
mov
sub
testb
div
cld
pop
cmp
pop
mov
cltd
fs
pop
faddl
mov
mov
or
pop
sbb
fistpl
xchg
leave
ljmp
dec
jecxz
gs
filds
or
lds
mov
inc
repnz
in
or
add
cmc
jecxz
adc
mov
dec
cld
sbb
call
fildll
gs
dec
cmp
push
push
or
inc
or
dec
add
imul
ss
cld
xchg
aam
sti
ds
repnz
pop
in
negb
fnstcw
push
mov
inc
jecxz
aaa
popf
jne
and
inc
jl
ret
push
cmc
cmc
dec
out
pusha
push
mulb
pusha
jnp
ljmp
cmp
push
cmc
out
mov
out
scas
dec
mov
cmp
nop
or
add
cmp
add
inc
jae
mov
xor
mov
xchg
loope
pop
mov
imul
mov
push
sahf
or
or
lahf
inc
subb
data16
pop
jns
int
ljmp
cli
cs
fcmovbe
push
xor
inc
push
adc
jnp
inc
and
loope
rorl
out
pop
nop
in
or
fsubrl
mov
in
test
mov
jle
and
mov
sbb
iret
jne
add
dec
movsb
xor
xchg
xchg
arpl
ljmp
cmp
sub
psrlw
ds
inc
xor
sub
adc
push
add
push
je
mov
pop
in
icebp
push
inc
fisubrl
push
hlt
xchg
push
inc
ds
mov
lret
mov
outsb
mov
inc
push
ljmp
lock
lds
cmp
and
xchg
aad
xchg
idivb
jno
push
aaa
inc
rcll
mov
shll
dec
imul
bound
push
gs
ss
scas
lret
dec
dec
mov
ljmp
movl
dec
mov
jb
fs
mov
je
dec
aaa
push
scas
mov
ljmp
mov
or
cs
mov
sub
jbe
test
pop
xchg
jo
xor
pop
sar
and
pop
adc
push
add
mov
rcll
into
sub
packssdw
lds
xor
or
pop
xor
shl
insl
cmp
repz
int3
repnz
jnp
lret
repnz
cmp
push
pop
lods
and
lcall
outsb
mov
jle
fsubrl
dec
dec
in
fcoml
icebp
sbb
mov
push
popf
xor
jl
inc
in
xor
mov
cltd
or
lock
push
bound
pop
aam
push
bound
outsl
mov
xchg
pusha
fwait
lods
mov
enter
dec
aad
inc
inc
dec
cmp
mov
sbb
and
movsb
ja
lcall
add
jo
xchg
call
and
mov
mov
imul
jecxz
in
mov
movsl
out
or
fsubrs
jg
inc
inc
test
pushf
add
dec
sbb
xor
outsw
dec
mov
in
test
shrb
push
test
ds
pop
insb
xchg
or
xchg
adc
or
sahf
sub
pop
jnp
cmp
inc
inc
mov
out
cwtl
in
mov
popa
or
inc
push
sub
cmp
stc
push
in
inc
out
movsb
pop
add
std
cs
mov
push
pop
scas
andb
and
and
mov
sbb
dec
in
mul
inc
jecxz
dec
push
test
fistps
icebp
hlt
clc
stos
rcrl
out
in
loope
mov
xor
push
sbb
and
xor
cmp
and
es
inc
mov
std
fimuls
mov
sub
loopne
icebp
xchg
mov
ss
pop
popf
lods
test
daa
clc
int3
ljmp
shrl
jecxz
mov
dec
outsb
subl
cmp
nop
mov
hlt
loope
adc
push
mov
fs
js
out
push
std
pop
test
lret
sbb
xchg
and
push
and
fwait
and
out
notl
xor
ljmp
ret
jbe
jp
lret
xchg
pop
outsl
daa
in
mov
ss
add
dec
xor
fidivs
dec
repz
cmp
sbb
fwait
orl
and
mov
push
jge
out
mov
into
mov
mov
inc
in
gs
sub
cmp
push
lret
sub
shrb
push
dec
scas
mov
mov
mov
xorb
push
mov
cld
je
in
sub
inc
out
enter
mov
sti
loop
in
jg
pop
cltd
popa
sub
shll
inc
leave
enter
cs
sti
cli
mov
bound
or
xor
fsub
rcr
dec
pop
sbb
aas
sahf
stc
jo
cmp
fsubl
push
cmp
out
lcall
fistpl
push
popf
data16
mov
mov
inc
in
mov
xchg
pushf
dec
xchg
arpl
call
ljmp
sbb
outsb
jmp
fildll
ret
fildl
mov
or
jns
shrl
bound
sbb
adc
hlt
fwait
cwtl
insb
popf
cs
data16
xchg
jg
jmp
sar
rcl
pop
fnstenv
mov
cs
mov
push
hlt
aam
cs
mov
int3
push
push
aas
imul
movsb
xchg
xchg
mov
xchg
lahf
sub
pop
not
cli
push
imul
inc
ret
stc
push
dec
mov
jns
sub
jge
add
mov
dec
in
cmp
push
and
xchg
scas
dec
js
orl
lcall
icebp
jbe
add
pop
test
xor
shrb
cmp
pushf
pop
mov
pop
into
dec
and
std
push
cmpsl
lahf
inc
push
sbb
nop
aas
pop
sub
shr
xchg
insl
es
movsb
push
sbb
mov
push
insb
pop
inc
stos
jnp
fdivrp
loopne
stos
mov
xor
xchg
push
insl
int
movsl
xchg
ds
fbld
push
xor
jne
loopne
repnz
movsb
dec
gs
insl
imul
fadd
jmp
mov
cli
jnp
jp
mov
push
ss
in
aaa
sbb
in
inc
popa
xchg
pop
xor
jecxz
jno
cmpsl
add
leave
mov
dec
cmpsl
pop
jmp
iret
sbb
push
fcompl
or
bound
jne
mov
lret
jge
push
add
inc
insl
outsl
es
xor
jo
sub
jge
sahf
mov
sbb
cmp
jg
sti
adc
sbb
lods
mov
inc
adc
fstpt
fmull
add
jb
dec
inc
leave
pop
cwtl
or
or
mov
int
sbb
in
loop
mov
rclb
nop
fnstenv
sti
mov
fcmovu
and
xor
lods
xchg
cli
jp
out
jl
push
idivb
cmpsl
xchg
cmc
jae
pop
sbb
mov
out
aas
movsb
insl
cmc
mov
cmp
pusha
add
sub
data16
loopne
rcrb
pop
xlat
sub
pop
cmc
push
push
jle
jb
sbb
dec
cmpsb
push
push
lahf
fcmovne
dec
call
cmp
mov
jge
js
mov
sbbl
and
andb
and
ss
add
pop
jg
mov
xor
daa
pop
sub
mov
mov
and
jb
pop
jp
or
dec
xor
in
gs
fmul
ja
push
nop
data16
outsb
push
call
scas
cmc
cmp
jbe
cmpsb
mov
jne
lock
loopne
in
dec
mov
pop
push
xchg
xchg
pushf
adc
ds
popf
insl
roll
sub
mov
lods
bound
movsb
cmpsl
pop
es
popa
mov
mov
enter
cmp
mov
loope
mov
cltd
jecxz
int
push
test
stos
test
scas
and
add
aas
dec
out
iret
int3
or
mov
aas
loope
jbe
in
cs
cmp
push
xor
add
pop
and
push
dec
add
cmc
fstps
insl
mov
xorl
in
jge
iret
out
add
mov
jo
subl
outsb
sbb
adc
shrl
push
loope
out
mov
xor
adc
lds
adc
bound
nop
mov
xchg
mov
inc
push
sbb
dec
fs
xchg
pushf
out
adcl
dec
pop
fimull
jecxz
shll
sub
inc
lods
shl
sub
cli
adc
xchg
mov
xchg
jno
data16
sub
and
ds
xor
ljmp
ret
gs
arpl
das
in
fnstsw
cmp
shrb
cmp
aaa
or
and
mov
mov
sub
mov
sbb
jnp
leave
ret
mov
push
push
ljmp
pop
subl
adc
jb
inc
fcmovnu
xor
jnp
pop
lods
or
add
aam
in
push
xchg
stos
stos
pop
jo
inc
cmpsl
mov
lahf
les
mov
mov
sub
fiadds
inc
pop
outsl
jno
xchg
ljmp
mov
mov
xchg
cld
lahf
das
loope
outsb
in
dec
ds
push
pusha
inc
ljmp
mov
in
jmp
stos
aaa
das
xorb
cwtl
ds
imul
int3
cltd
loop
jl
xchg
inc
mov
jo
mov
das
in
pop
test
bound
addb
sub
or
ljmp
mov
inc
nop
cli
xchg
in
push
and
mov
push
int3
mov
mov
mov
xor
pushf
notl
dec
dec
inc
or
ss
push
sbbb
or
lods
test
rorb
cmpsl
ficompl
stc
jge
inc
dec
sti
test
lds
mov
int
xchg
pop
add
int3
daa
out
xor
jle
repnz
jno
mov
mov
and
insl
out
sub
seto
lahf
push
cld
cld
adc
jge
mov
mov
nop
lcall
ss
push
mov
xchg
js
adc
mov
jno
add
dec
nop
sarl
pop
test
mov
shrb
pushf
jbe
lahf
cmp
arpl
mov
inc
sbb
stc
repnz
movsb
repnz
mov
sbb
aam
out
push
add
and
popf
sbb
outsb
pop
clc
push
sbb
jo
jae
add
int3
or
and
push
xor
xchg
lods
jae
in
lock
test
jae
sbb
fdivs
stos
lahf
add
xchg
shr
call
lds
in
ds
jnp
nop
ror
cld
xchg
out
push
adc
jge
jecxz
js
add
xor
scas
sti
dec
push
jmp
cmp
imul
stc
sbb
mov
adc
mov
pop
in
sub
mov
lret
outsb
fwait
aaa
cs
cmp
cmp
mov
scas
pop
inc
es
test
andl
jle
xchg
jae
fstps
mov
dec
hlt
jb
movzwl
movsl
jmp
pop
xorl
jns
xor
push
xchg
inc
mov
and
test
cs
ffree
dec
inc
fidivl
scas
and
pop
inc
outsl
nop
push
fidivrs
popf
dec
or
out
mov
xor
cmc
pop
aas
mov
push
sbb
cmpsb
dec
pop
aas
fsubrs
jecxz
arpl
iret
mov
das
mov
xor
cmpl
mov
add
push
push
sarl
dec
ds
mov
adc
test
inc
push
mov
push
fs
and
call
xor
icebp
push
test
mov
or
inc
pop
sub
dec
sbb
out
or
push
or
mov
shl
mov
mov
cmp
inc
test
jle
insb
imul
fimull
push
addr16
idivb
cwtl
pop
enter
cmc
jo
sub
xlat
js
push
adc
push
popa
repnz
divb
pop
pop
out
xor
inc
and
xor
idiv
fwait
ret
stc
add
inc
pop
push
jle
pop
fcoms
fstpl
adcb
into
and
jp
pop
and
scas
lods
xchg
mov
test
sbb
pop
push
loop
xchg
scas
jecxz
ljmp
jg
addr16
fwait
sahf
xlat
in
out
call
and
pop
mov
in
rcl
cmp
and
test
xor
cmp
daa
ds
out
mov
mov
jb
ret
mov
imul
push
xor
add
js
imul
es
xor
inc
fldl2e
push
out
cmpsl
jl
testl
sti
stos
mov
aad
xor
xchg
mov
mov
sub
in
dec
pop
sahf
cmp
cwtl
sarl
sahf
dec
in
mov
push
xorb
fildl
push
pop
std
arpl
mov
ret
lret
pusha
pushf
idivb
ljmp
adc
sub
mov
or
jae
cld
adc
aam
leave
sqrtps
or
mov
pop
push
push
int
daa
out
scas
cmp
mov
or
into
test
std
ss
lcall
or
inc
mov
daa
movsb
loopne
lock
push
sbb
fcoml
mov
subb
sbb
cs
inc
aas
sub
jp
ret
jge
xor
mov
ja
rclb
push
pushf
std
push
ss
mov
adc
push
xchg
in
outsb
add
and
test
jb
or
jmp
leave
sbb
in
mov
sub
sub
add
pop
test
mov
and
dec
hlt
xchg
aam
inc
lret
outsb
sub
dec
cmp
xchg
mov
xor
mov
xchg
jmp
lock
dec
inc
pop
mov
mov
sbb
inc
mov
pop
dec
icebp
pusha
sub
insl
cmp
sub
pextrw
pop
jl
push
push
push
inc
cmp
mov
push
cmp
ficoms
push
in
and
lret
cmp
sub
pop
jno
jp
adc
mov
mov
sti
call
mov
jne
mov
rorb
xor
cmp
test
lahf
push
sbb
clc
jl
loop
lods
ljmp
or
pop
lret
popa
jb
xchg
mov
xor
iret
sbb
mov
in
jge
push
jns
jbe
inc
sbb
sub
sbb
out
mov
push
adc
sbb
int
fnstenv
xor
fld
sub
jl
adc
xchg
imul
testb
cmp
inc
or
push
ja
popa
mov
push
cmp
rcll
mov
repz
adc
insb
jmp
icebp
icebp
push
jmp
test
pop
cli
jl
push
push
mov
in
cmc
add
movsl
and
mov
adc
insl
ss
jecxz
mov
out
pop
mov
in
push
ljmp
cld
jp
cmp
stos
inc
mov
mov
pop
or
outsb
sbb
adc
aas
push
mov
jns
push
jmp
ficompl
or
mov
lcall
push
movsb
add
adc
xchg
aaa
test
loope
scas
sub
pusha
push
rcll
in
push
loope
cld
dec
shlb
pop
fstpt
shll
lds
outsl
cmp
out
dec
call
outsb
js
shll
mov
dec
adc
enter
or
xchg
sub
jge
shll
xor
cwtl
es
jne
enter
add
inc
insb
das
pop
das
xor
fucom
lcall
and
dec
dec
nop
out
rorb
sbb
mov
push
jo
movsl
shrb
fsubrl
xor
cmpsb
add
or
jmp
ds
loope
push
outsl
data16
addr16
ret
xchg
add
mov
lock
and
and
in
lahf
lods
sti
gs
in
lds
fs
test
sub
lcall
gs
stos
out
or
cltd
mov
aad
cmp
push
outsb
xor
push
leave
mov
int3
js
mov
fdivl
test
sti
xchg
popa
jae
mov
mov
or
adc
vsubpd
mov
insb
pop
mov
sub
xchg
xchg
in
shr
xchg
xor
pop
push
ljmp
xchg
push
ret
jmp
mov
hlt
dec
inc
stc
push
out
scas
sub
fiadds
lret
inc
pop
sbb
in
andb
jp
arpl
xchg
out
or
push
pop
and
jne
fidivs
push
push
xchg
das
out
mov
movsb
call
out
cmp
fucomp
das
jmp
repz
xchg
loop
inc
sar
std
repz
mov
jge
rolb
rolb
inc
sahf
mov
pop
push
fwait
sbb
mov
xchg
mov
out
add
add
mov
cmpb
dec
fistpl
dec
jle
and
mov
mov
loop
in
xor
add
out
out
mov
sbb
jb
mov
and
cmc
add
jg
es
mov
out
jmp
jmp
pop
push
pop
push
sub
pmaxsw
int3
dec
fstps
adc
or
add
orl
dec
sbb
jg
jbe
or
cmp
jp
cld
adc
int
loopne
jnp
test
mov
es
mov
and
mov
xor
addb
or
mov
mov
fcmovnb
sbb
jle
and
sbb
cmp
inc
push
sub
jmp
pushf
mov
cld
pop
fnsave
pop
inc
sahf
jecxz
dec
ror
leave
sbb
mov
in
adc
mov
fiaddl
push
imul
jg
bound
ss
dec
mov
cmpsb
testb
xor
ret
mov
jae
andl
cmp
std
mov
sbb
add
mov
or
sub
iret
sbb
mov
or
aas
jns
add
add
ds
lods
fucomi
push
cmp
arpl
dec
push
nop
bound
cmp
jle
push
int
test
xor
out
xchg
xor
bound
xor
adc
and
pop
adc
or
lods
inc
sub
fsin
scas
mov
dec
pop
push
dec
lcall
aas
push
pop
inc
add
insb
sub
xchg
add
stos
cmc
in
xor
jle
lcall
popf
inc
clc
imull
jnp
mov
lods
cwtl
sub
outsb
adc
mov
enter
jbe
iret
lcall
push
sbb
imul
adc
or
mov
jp
aaa
or
rcrb
mov
push
add
outsb
lcall
or
push
pop
add
cmp
jo
or
jp
cmc
dec
cwtl
or
sbb
ja
jae
aaa
shll
ljmp
jne
rcrl
mov
movsb
icebp
movb
xchg
push
out
iret
rcrl
add
lret
xchg
test
stos
pusha
icebp
mov
outsb
cwtl
mov
adc
mov
test
mov
sbbl
xchg
lcall
js
arpl
int3
sbb
scas
jg
mov
or
and
and
xor
xchg
cmp
and
outsl
adc
sbb
nop
or
fisttpl
pop
inc
imul
cmp
inc
bound
pop
sub
mov
adc
or
nop
cmp
mov
orb
pop
sub
cmp
mov
xchg
nop
dec
push
or
xchg
das
loope
mov
add
jmp
jae
cmp
test
xchg
imul
sub
xchg
inc
add
div
sbb
outsw
repz
or
push
fwait
outsb
sub
js
push
adc
jg
and
mov
test
and
push
xor
gs
popf
inc
movsb
aas
mov
and
jge
pop
loopne
je
mov
mov
jmp
push
cwtl
iret
je
dec
pop
and
dec
push
enter
mov
shll
fsubrl
jo
int3
xor
daa
adc
push
sub
push
push
cmp
aad
xchg
fs
cmp
shll
imul
xchg
adc
push
jbe
dec
mov
test
cmpsl
xchg
das
popf
xchg
or
mov
cmpsb
sbb
cli
div
push
xlat
pop
cmp
icebp
add
xor
sub
daa
jb
fs
adc
cmp
fidivrl
and
xchg
sub
pop
rol
mov
aaa
push
cmp
lock
xchg
mov
in
shlb
push
cmc
inc
inc
shlb
sahf
ja
mov
jmp
mov
add
jnp
mov
sar
rcrl
mov
mov
ljmp
xor
popf
addb
rcr
pop
cmpsb
rolb
rcrb
dec
mov
int3
mov
push
xchg
or
aas
dec
shlb
and
add
gs
pop
fnstsw
cmc
repnz
add
push
int
jo
or
jmp
fcomi
scas
push
mov
mov
es
fldcw
mov
push
mov
js
cmpsl
jle
fidivrl
enter
dec
out
adc
lods
sub
aad
rclb
pop
jns
push
or
fildll
cmc
jno
jne
pop
lahf
push
fildll
mov
cmc
inc
shll
sub
leave
jge
arpl
cmpsb
push
jge
or
sub
pop
sub
and
inc
xor
sbb
xlat
and
jecxz
pop
lea
fidivl
imull
xor
pusha
int
jle
movb
sbb
dec
sbb
xchg
push
out
push
aad
pop
subb
sahf
idivb
inc
fadd
addr16
push
outsl
push
mov
sbb
jae,pt
sahf
or
sbb
mov
adc
inc
xchg
popf
cmpsl
dec
cmp
call
xchg
mov
cmp
jnp
addr16
xor
pop
add
pop
loopne
nop
cmp
pusha
imul
orl
cwtl
fldt
ljmp
ret
pop
ret
inc
push
mov
pop
lcall
adc
mov
dec
sarl
movsl
in
enter
lret
js
xor
fstpl
es
push
repz
and
icebp
push
xor
or
adcb
frstor
sbb
fnstsw
out
int
int3
mov
and
loop
into
jbe
sbb
push
icebp
inc
bndldx
rclb
jnp
xchg
jo
lahf
pop
cmp
cmp
sarl
cwtl
fwait
movsb
in
jnp
jmp
hlt
out
scas
and
xchg
pop
in
cmpsl
leave
jle
jge
dec
mov
xchg
inc
mov
pop
adc
sahf
sub
push
sarb
aas
ljmp
outsl
mul
dec
daa
and
lock
mov
inc
scas
repz
subb
movsl
inc
mov
inc
enter
mov
call
sub
mov
and
dec
hlt
cltd
pusha
mov
mov
movsl
imul
lea
aaa
sub
mov
cmp
jg
out
sbb
pop
sub
xor
repnz
cmp
xlat
cmc
movsl
or
js,pn
pop
bound
mov
cwtl
fisubs
lret
sbb
jl
fwait
sub
pop
mov
inc
push
fwait
clc
in
jb
cmp
dec
mov
pop
clc
sbb
sub
mov
sbb
add
add
and
call
jns
push
xchg
fisubl
pop
jb
sahf
xor
aad
adc
push
xchg
cwtl
push
shrb
imul
dec
pusha
aaa
sahf
mov
inc
adc
cmp
pushf
incl
out
adc
lret
inc
push
sub
lods
mov
outsb
push
scas
test
loop
dec
in
sub
out
inc
outsl
sub
sbb
add
int3
aam
std
es
shl
insl
xchg
sbb
inc
int
mov
and
shll
xor
lcall
cmp
pushf
adc
dec
loop
cld
ljmp
outsl
xchg
xchg
pop
lods
leave
rcrb
out
push
loope
mov
jae
xor
mov
test
push
jnp
popf
outsl
push
mov
sbb
incl
pushf
xchg
dec
fcmovnb
sub
daa
movaps
hlt
addl
enter
ret
rcll
sbb
dec
aaa
inc
cmc
push
loope
push
loop
test
push
inc
fistpl
mov
dec
xchg
out
test
iret
popa
repz
xor
xchg
add
jp
lock
enter
add
dec
jle
jecxz
addb
mov
bnd
inc
repnz
cltd
imul
add
xchg
sub
mov
or
movsl
fmulp
aad
push
jg
mov
push
in
into
in
cmp
add
imul
jo
sub
lret
sbb
sarl
test
test
fwait
lods
dec
add
and
vmwrite
jmp
mov
aam
sbb
mov
cmp
and
or
jnp
add
sbb
push
push
sub
pushf
gs
out
inc
outsl
dec
dec
not
jb
cli
mov
mov
cli
push
insb
aaa
addr16
sbb
imul
pushf
roll
fstps
in
loop
add
push
pop
sub
out
ja
add
cmp
in
lea
dec
imul
mov
icebp
fnstcw
scas
push
cld
daa
cmpsl
fsubrs
lret
pop
xchg
in
popf
test
out
dec
xchg
lahf
xor
cmc
cmpsl
pop
pop
lret
inc
sub
mov
inc
fnsave
test
inc
shl
lods
lret
cs
pop
jg
fs
or
cmp
inc
lock
pusha
inc
insb
rol
mov
pop
sub
mov
jae
sub
push
push
jo
xchg
mov
pop
mov
cli
mov
mov
push
sti
sti
cli
sti
in
pusha
jno
mov
xor
icebp
inc
mov
fs
out
aam
xchg
imul
pop
in
icebp
cmc
add
xchg
iret
mov
cltd
mov
cmp
xchg
inc
mov
pop
scas
out
xor
push
jnp
adc
mov
xchg
or
cs
push
icebp
rcll
xchg
inc
fwait
or
cmpb
mov
xorb
orb
out
sub
cli
push
mov
and
sub
mov
cld
fldenv
andb
imul
cmp
mov
hlt
test
pop
gs
xor
test
sbb
or
adcb
pop
js
mov
jbe
jo
dec
jecxz
xchg
sbb
movl
mov
js
insl
adc
ret
mov
ja
into
jg
jg
dec
fnstenv
and
or
fmull
pop
divl
jns
out
fidivl
outsl
add
lcall
je
or
dec
xor
punpcklwd
aam
push
pushf
enter
call
sbb
mov
adcl
shlb
inc
repz
mov
gs
js
add
imul
push
inc
adc
push
mov
lret
adc
sub
in
push
scas
subb
mov
mov
mov
jge
vmwrite
mov
mov
mov
ret
inc
jge
adc
ljmp
sub
cmp
icebp
xchg
and
and
lea
mov
cmpsl
ja
mov
dec
sub
jmp
xlat
inc
cli
pop
dec
pop
and
mov
lcall
mov
enter
and
mov
lahf
js
xchg
inc
lret
stos
pop
enter
pop
lret
testl
and
test
mov
push
clc
scas
js
adc
cmp
or
or
sub
outsb
add
sti
fs
fcompl
gs
cmc
mov
jge
add
lret
mov
push
push
shrl
jg
fcmovnbe
sahf
pop
push
jge
sti
aaa
jb
adc
fisttpll
test
lcall
mov
xchg
jnp
inc
sub
aam
mov
mov
icebp
or
mov
mov
mov
sub
hlt
cmp
mov
push
lret
lret
or
fidivrl
push
pushf
jg
imul
mov
mov
nop
and
dec
mov
scas
jge
sbb
dec
dec
push
in
mov
sarb
push
pop
push
pop
mov
dec
das
sub
aad
lea
sub
stos
pop
sub
scas
jb
adc
push
lcall
scas
adc
lret
jmp
stos
test
jge
lods
mov
cmc
add
mov
pop
addr16
mov
jmp
gs
lret
lret
nop
mov
mov
testl
add
sbb
inc
push
lahf
adc
and
sub
shr
xchg
aaa
jnp
rcr
popa
gs
adcb
stc
push
push
jne
jbe
ficomps
xchg
sbb
cmc
dec
in
insl
pop
arpl
jp
lock
pop
orb
enter
jno
fs
and
xorb
push
cmpsl
jmp
mov
aas
popa
nop
call
ss
push
mov
movsb
arpl
jnp
ret
sbb
stos
popa
and
popa
shl
fidivrl
cld
add
push
sub
jmp
outsl
cmp
ljmp
jb
mov
mov
jno
xchg
or
sbb
inc
cmc
xchg
fidivl
push
fsincos
mov
push
call
cmp
leave
out
int
mov
sbb
push
mov
or
jp
cmpsb
fisttpll
push
pop
xchg
sub
fisubrs
mov
mov
sbb
mov
js
daa
movsb
cmpsl
and
int
idivb
and
mov
jmp
add
subb
inc
dec
ja
outsl
push
mov
into
lret
call
sbb
in
out
into
adcb
imul
mov
jp
ds
je
sub
mov
data16
sti
in
fmull
add
mov
jmp
adc
cmpsb
push
xchg
nop
ja
jg
pop
cwtl
jbe
mov
pop
mov
inc
mov
xchg
push
pop
jle
in
pop
sbb
sbb
cld
imul
mov
mul
fdivrs
loope
inc
or
xchg
push
in
inc
icebp
or
int3
jmp
push
sahf
in
js
or
jae
dec
ficoms
xchg
mov
insb
add
notl
pop
xchg
cs
adc
inc
shlb
inc
jbe
ds
shlb
mov
mov
call
jmp
lsl
test
scas
mov
mov
fmulp
cmp
cmp
dec
or
scas
loope
sub
mov
cmp
push
add
jns
shrl
and
es
scas
in
out
add
lahf
xor
test
pop
addr16
daa
mov
idivb
push
in
push
mov
loope
jle
push
lock
frstor
mov
cld
add
in
and
arpl
cmpsl
subb
add
pop
loopne
outsb
stc
sbb
out
push
addl
xchg
jp
cmp
inc
cmc
inc
mov
test
adc
jnp
aam
adc
in
lock
movsb
fildll
das
pop
fidivs
sub
mov
mov
jmp
or
aad
xor
ret
jl
mov
cs
aad
ret
or
lea
inc
loope
lock
cs
push
scas
imul
or
sub
dec
inc
dec
add
jae
mov
sub
add
mov
lahf
bound
call
imul
out
rclb
or
adc
adc
pop
roll
leave
pop
mov
inc
and
aas
jmp
iret
popa
lock
aaa
fcmovnb
std
mov
adc
test
jne
lds
and
add
ret
popa
aad
adc
lcall
fdivl
xchg
dec
popf
out
jnp
push
add
in
mov
outsb
mov
mov
loope
sbb
pop
das
andb
mov
mov
imul
and
pop
outsb
dec
scas
scas
xor
xchg
shr
popf
shrl
aaa
subl
cwtl
mov
cli
rcrl
bnd
movsl
cmp
daa
fcom
mov
daa
jbe
mov
insb
lret
dec
sbb
pop
jl
popf
ret
inc
mov
lcall
icebp
imul
mov
pop
andb
cmc
aaa
and
ds
mov
sub
pop
fsubr
push
cmc
daa
xchg
ss
loop
repz
add
inc
fcmovb
stc
fcomp
adc
outsw
rol
repz
in
inc
mov
cli
dec
cmc
cmp
sbb
sahf
cmc
ss
pop
outsb
bound
fdivrs
mov
fwait
notb
shlb
mov
scas
add
test
nop
lret
dec
jb
xor
or
rorb
cmp
cmp
xchg
push
fimuls
pop
pop
adc
xlat
mov
sub
push
sub
sub
sub
lahf
push
loopne
jb
cmpl
mov
sti
mov
push
das
popa
arpl
adc
mov
push
pop
mov
jp
dec
xorb
into
shll
push
orb
dec
sub
scas
jae
push
push
bound
inc
cmp
pop
in
jae
icebp
mov
sbb
mov
lret
imul
fwait
jno
fldl
or
cli
mov
push
sub
sub
imul
adc
cmpb
fs
es
cld
lock
div
enter
out
fsubrl
push
into
jge
or
mov
in
xor
add
mov
or
lcall
add
rorl
mov
loopne
fcmovb
clc
or
sbb
cmp
jbe
ss
cld
cld
push
adc
ja
push
aas
or
popa
lcall
ja
jo
fst
js
int3
and
ret
pop
fcoml
mov
lods
scas
pop
mov
xor
lret
aad
mov
int
movsb
daa
lock
mov
rcrb
mov
out
dec
mov
mov
fcmovne
xchg
xchg
ja
cmp
pop
pop
sbb
mov
push
add
sub
pusha
xchg
xchg
rclb
mov
mov
cmp
incb
xchg
pop
cmp
jno
pop
dec
jnp
push
jb
lods
fcmovnu
aad
fdiv
es
es
push
loopne
pusha
loopne
adc
nop
pop
pop
inc
faddl
aas
sub
mov
jmp
cmp
push
rclb
and
add
cmp
add
add
shrl
xorb
out
es
dec
jmp
adc
pop
lahf
data16
lea
jnp
mov
in
or
and
ds
push
and
mov
cmp
sbbb
lret
sub
sub
sahf
add
xor
mov
cmovl
call
or
sub
in
out
jg
in
xchg
lds
mov
stc
dec
cmp
outsb
mov
or
jp
out
cltd
in
xchg
rcll
pop
loope
jmp
insl
scas
lret
arpl
cmp
rcll
adc
addr16
nop
scas
adcb
adc
pop
fwait
mov
movsl
fnsave
push
test
arpl
out
lods
iret
ret
mov
xchg
pop
xchg
xchg
inc
push
jbe
pop
pop
ljmp
mov
or
xchg
stos
inc
ja
mov
mov
mov
pop
sbb
scas
pop
rol
fstl
jle
jge
arpl
shlb
add
and
push
in
bound
scas
dec
jg
negl
out
fsts
add
scas
or
mov
mov
pop
aas
push
push
dec
sar
mov
xchg
cltd
inc
cmc
scas
push
bound
repz
adc
push
xchg
mov
or
outsl
and
test
inc
cwtl
mov
or
dec
cmpl
je
dec
fs
daa
icebp
int
or
icebp
mov
inc
test
jle
inc
jnp
mov
sbb
sbb
add
push
push
xor
mov
sbb
arpl
in
out
or
xor
out
out
jns
imul
mov
aaa
and
mov
pop
inc
fdivr
scas
mov
and
inc
sbb
add
sbb
data16
sub
and
jne
or
jecxz
lret
fmuls
lds
cmp
xor
push
shlb
or
inc
orl
jns
add
sub
out
pop
aad
and
mov
out
insl
test
in
int3
popf
lds
rclb
sbb
sbb
in
aam
into
sub
push
inc
hlt
out
pop
sbb
fwait
cmc
inc
add
jmp
dec
pop
mov
xchg
add
adc
xor
dec
in
addb
fsts
inc
iret
outsl
push
dec
inc
and
fldl
bound
in
mov
loopne
dec
stos
in
dec
push
aam
stos
inc
dec
pop
mov
mov
out
shll
dec
cli
xchg
xchg
cmp
lahf
mov
mov
movsl
inc
or
inc
xor
adc
mov
jp
loope
ret
pop
and
cmpl
cmpl
lahf
push
out
pop
das
mov
movsb
mov
cwtl
rcrb
inc
test
adc
scas
aaa
xchg
jae
adc
ficoms
lock
imul
mov
jb
out
sbb
pop
sub
fdivrs
push
cmp
ss
dec
sub
xchg
jnp
pop
mov
lods
push
jb
ds
cmc
outsb
mov
loope
stos
inc
scas
dec
add
out
xor
ja
scas
pushf
mov
mov
call
sti
rorl
adc
push
lret
mov
sti
dec
dec
roll
inc
insl
inc
aaa
push
mov
jb
lcall
push
repz
das
hlt
mov
pop
push
fs
cmp
lock
dec
pop
dec
shl
mov
loopne
lret
aas
iret
push
orl
outsb
cld
pop
mov
int3
jns
inc
shrb
inc
fldcw
fmull
lock
nop
or
and
or
cld
rolb
cmpsl
xchg
inc
sbb
call
inc
push
or
mov
inc
sub
aad
pusha
addb
lcall
xlat
shll
pop
jnp
xor
hlt
leave
test
jmp
or
cmp
lds
adc
fidivs
andl
add
or
fildl
xlat
or
pop
inc
or
inc
lods
movsl
or
test
nop
pop
push
fs
ss
xorb
and
ds
push
jmp
mov
ljmp
jae
sbb
jne
lock
jp
lret
dec
in
clc
add
sub
mov
xchg
cmpsb
mov
sub
sbb
negb
into
cld
popa
sbb
movsb
ja
adc
add
cmpsb
cmp
dec
js
xor
xor
clc
sbb
repnz
or
fsubl
iret
pop
sbb
sti
stos
enter
push
scas
ficoms
not
lods
iret
pop
ret
mov
pop
xchg
call
repz
in
dec
sbb
loope
xor
out
jo
arpl
test
lea
jmp
pop
inc
sbb
pop
cmp
pop
dec
mov
adc
dec
shrb
and
jl
sbb
push
insb
mov
shl
cwtl
in
mov
js
cmpsb
jns
int
or
movsl
fnstsw
and
push
dec
xor
sbb
sbb
shlb
sahf
ret
push
out
sub
pusha
cs
icebp
or
pop
sti
out
out
adc
sub
fs
punpckhbw
sbb
sub
xor
lret
loop
test
imul
or
xchg
inc
and
filds
nop
inc
movsl
stc
push
jmp
pop
push
pop
adc
movsl
insl
push
scas
jae
stos
mov
sbb
inc
jnp
das
xchg
insl
in
shll
scas
pop
ja
cld
addr16
fdiv
out
inc
addr16
add
or
rcll
loop
cs
push
xchg
mov
fucom
iret
in
push
cmp
xlat
mov
add
lahf
cltd
sti
or
dec
adc
jle
push
xchg
mov
and
inc
ds
mov
mov
pop
xor
push
data16
pushf
push
or
fwait
sbb
push
xchg
movsb
fdivrs
dec
movsb
xor
and
fdivl
ljmp
xchg
mov
pop
aad
jo
push
lret
add
test
mov
push
lds
adc
add
repz
mov
pop
shll
fidivl
lods
cmp
mov
dec
clc
int3
into
subb
sbb
inc
pop
stos
push
xchg
mov
test
nop
or
scas
das
addr16
cmp
fwait
mov
mov
and
push
inc
lret
inc
or
adc
enterw
mov
inc
or
outsl
add
jl
sbb
mov
outsl
add
por
inc
mov
popf
fisttps
xor
push
cli
shrl
cmp
push
arpl
lcall
addr16
movsl
mov
enter
in
xchg
shlb
imul
cld
dec
mov
fisubrs
lea
das
sub
scas
mov
out
sub
inc
adc
cmpsb
imul
cmp
dec
jg
ffreep
cmp
jle
xchg
mov
popf
mov
xchg
iret
movsb
and
sbb
xchg
dec
pop
divb
xor
or
xchg
stos
in
sbb
sbb
sahf
jo
mov
rcrb
jae
xchg
test
aaa
inc
and
pop
sbb
sbb
mov
inc
stos
adc
dec
ss
stc
outsb
mov
sahf
xor
mov
clc
add
jecxz
movsb
pop
push
pop
imul
lock
mov
lcall
mov
das
ljmp
mov
jnp
sbb
movsb
push
pusha
pushf
insl
jle
gs
imul
insb
sbb
lret
std
cli
test
out
push
and
cmp
inc
push
push
cli
stos
or
dec
sub
add
inc
mov
sub
xchg
lret
repnz
add
pop
or
jns
test
sub
sub
fmull
xchg
sub
inc
mov
push
sub
aaa
sbb
imul
adc
lret
mov
mov
mov
or
cmpsl
lret
mov
xor
sub
lods
jbe
push
shl
mov
js
aaa
push
mov
ljmp
sbb
dec
aas
movsl
leave
dec
dec
sbb
hlt
jns
shl
in
loope
cmp
loopne
adc
xchg
rclb
xlat
ret
dec
push
movsl
sahf
and
add
movsl
push
out
push
cs
push
loop
adc
imul
mov
cwtl
dec
push
ja
mov
lds
push
mov
push
rol
popf
xchg
or
inc
cwtl
sub
pushf
nop
adc
or
dec
repz
loope
mov
test
xchg
ret
loop
jne
out
int3
iret
push
fdiv
dec
xor
xchg
fs
add
das
sti
lret
sti
sahf
insb
jne
insb
sahf
test
loope
fs
mov
int3
movsl
sbb
or
hlt
fcomip
les
mov
mov
cmc
hlt
mov
or
jbe
in
repz
mov
xchg
mov
aam
xor
pop
jge
add
stos
sbbl
arpl
pop
xor
push
add
shr
pusha
repz
jbe
mov
jl
inc
enter
sub
out
pop
fwait
cmp
lods
cmpsl
fsubrl
mov
sahf
addr16
pusha
pusha
scas
sub
lcall
sbb
mov
test
inc
dec
hlt
xor
xchg
fidivl
sub
negb
scas
jp
jae
bound
fwait
jge
jmp
mov
inc
pushf
pop
xlat
push
std
xor
sub
popf
xor
push
dec
jmp
cli
mov
mov
pusha
lcall
scas
xor
xchg
pop
push
mov
push
jbe
clc
sub
arpl
lods
fstpt
inc
out
adc
out
sub
add
ror
sbb
jmp
pop
push
jne
add
push
adcb
jnp
add
je
xor
fisttpl
rcr
adc
inc
push
pop
xchg
fistps
mov
in
pop
inc
dec
ret
ds
call
xchg
jne
mov
leave
in
shll
sbb
mov
fwait
aaa
lahf
mov
ret
dec
mov
mov
aad
mov
lret
cmp
pop
cli
shll
xchg
inc
insb
imul
pop
cwtl
cmpsb
push
popf
addr16
adc
test
push
nop
outsb
dec
mov
loopne
andl
or
lock
mov
push
mov
adc
cmp
push
mov
mov
jb
and
mov
in
mov
imul
repnz
inc
insb
or
mov
push
icebp
add
inc
mulps
add
aaa
and
cmp
pop
jae
lcall
add
mov
xor
leave
mov
lods
add
xchg
test
or
pop
cwtl
popf
gs
dec
leave
mov
cmp
rolb
ss
pop
vcvtsi2ssl
jnp
fidivs
mov
mov
push
mov
test
adc
xchg
test
sbb
dec
lock
enter
mov
xchg
in
xchg
enter
jb
cmpsb
xchg
sarb
cmovnp
mov
pop
hlt
push
int
inc
add
loopne
xchg
xchg
cmp
cmp
insb
das
test
add
add
sbb
and
add
add
cwtl
push
add
add
add
mov
add
add
add
orb
add
cwtl
add
orb
add
add
add
sbb
and
add
add
add
add
xorb
add
sbb
and
add
add
add
add
jo
add
add
pop
add
adc
add
and
add
add
add
add
cwtl
add
add
inc
pop
add
cmp
add
add
add
add
add
inc
add
and
add
add
add
add
add
add
addb
add
sub
add
push
add
addb
add
add
mov
add
add
add
addb
add
lock
addb
add
sbb
and
add
add
add
add
add
add
add
jp
add
add
sbb
and
add
add
add
add
add
add
sub
xor
add
sbb
and
add
add
add
add
add
add
pusha
jge
add
add
sbb
and
add
add
add
add
add
jle
add
add
sbb
and
add
add
add
add
add
jg
add
add
sbb
and
add
add
add
add
add
add
add
addl
add
and
add
add
add
add
add
add
add
pop
add
add
sbb
and
add
add
add
sldt
mov
sldt
loopne
add
or
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
clc
add
cmp
add
and
cmp
add
dec
add
addb
add
jo
add
sbb
and
add
add
add
add
add
addl
call
add
add
and
add
add
add
add
add
add
add
pop
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
pop
add
add
add
and
add
add
add
add
add
add
xor
add
and
add
add
add
add
add
add
call
add
add
and
add
add
add
add
add
xchg
pop
add
add
add
and
add
add
add
add
add
add
add
pop
add
add
sbb
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
pop
add
add
add
and
add
add
add
add
add
add
sub
add
sbb
and
add
add
add
add
add
mov
add
sbb
and
add
add
add
add
add
loopne
add
sbb
and
add
add
add
add
add
add
add
movsl
pop
add
add
add
and
add
add
add
add
add
add
add
movsl
pop
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
sbb
and
add
add
add
jg
add
jg
add
jg
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
sbb
and
add
add
add
add
add
cmpsl
pop
add
add
sbb
and
add
add
add
add
add
add
pop
add
add
sbb
and
add
add
add
add
add
add
pop
add
add
sbb
and
add
add
add
add
add
push
add
fsubs
add
sbb
and
add
add
add
add
add
push
add
lock
pop
add
add
sbb
and
add
add
add
add
add
add
or
add
sbb
and
add
add
add
add
add
test
add
add
add
inc
add
add
add
add
jl
add
cwtl
roll
add
in
add
add
add
adc
add
fsubrs
add
xor
add
add
nop
aam
add
or
add
add
cmp
add
sbb
add
mov
sbb
add
nop
jle
add
add
fdiv
add
mov
add
add
add
add
add
add
pop
add
add
pop
add
pop
add
add
add
add
add
add
aam
pop
add
add
add
mov
add
adc
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
mov
add
add
add
ljmp
pop
add
mov
add
pop
add
add
add
incl
mov
add
pop
add
add
add
jmp
pop
add
pop
add
add
add
dec
mov
pop
add
pop
add
add
add
call
mov
add
add
add
add
decl
mov
pop
add
add
add
add
ljmp
mov
pop
add
add
add
add
decl
pop
add
add
add
add
add
ljmp
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
outsl
insb
xor
cs
insb
add
add
add
push
outsb
imul
imul
arpl
arpl
xor
fs
insb
add
add
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
lds
add
add
lea
add
add
add
add
mov
push
or
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
out
lcall
mov
lock
jo
lds
mov
loop
in
or
push
xchg
mov
xor
xchg
and
cmovbe
or
sbb
xchg
cmp
pop
std
enter
sbb
cmpb
xor
mov
xor
sbb
push
adc
fimull
jo
sub
adc
cmp
test
add
pop
xor
sub
test
call
das
push
push
push
sub
or
dec
xor
sbb
inc
or
add
push
ficomps
iret
push
or
jbe
add
lea
mov
stos
movsb
add
nop
cmpl
lahf
add
jae
test
out
push
ss
jnp
sti
sbb
in
sbb
das
and
pop
push
dec
jg
lcall
sbb
call
add
dec
sub
xor
xor
push
jl
xor
negb
sbb
mov
mov
push
dec
xor
xor
leave
movaps
push
inc
inc
push
xchg
or
xchg
stos
sbb
or
cmp
jmp
test
rcll
push
lea
push
aas
pop
adc
mov
sbb
enter
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
or
dec
inc
loopne
add
das
push
jmp
mov
movsb
add
push
clc
aaa
rcrb
jno
pushl
cmp
inc
or
pop
pop
maxps
push
imul
add
xchg
mov
sub
loopne
pop
push
pop
or
xchg
adc
pop
push
mov
jle
jb
pop
sti
aam
lar
fnstsw
ret
mov
xor
stos
pop
loopne
add
pop
in
popa
lods
push
jne
lcall
cmc
call
shll
inc
enter
dec
mov
mov
cltd
xchg
or
xchg
push
enter
push
xchg
pop
cmp
pop
or
mov
add
push
jmp
daa
add
inc
adc
movb
dec
xchg
insb
xor
inc
pop
adc
add
jne
cmp
jge
loopne
inc
lmsw
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
adc
push
push
mov
clc
nop
xor
sub
data16
adc
call
pop
push
mov
or
push
test
mov
in
and
sti
not
daa
fcoml
mov
mov
jae
pop
jge
sub
dec
clc
shll
add
movsl
pusha
sub
ljmp
jnp
push
addr16
movsb
push
mov
nopl
pop
data16
pusha
cmp
sarl
ret
or
mov
adc
push
lcall
push
push
sbb
mov
jge
jno
test
dec
cmp
enter
push
pop
xor
stc
xchg
jl
sbb
mov
hlt
push
xchg
dec
or
dec
in
xor
push
leave
push
in
pusha
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
decl
movsb
stos
adc
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
lret
std
mov
fwait
js
dec
pop
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
adc
pop
aam
sbbb
inc
mov
ret
adc
dec
lds
insl
jae
jb
jmp
in
sbb
inc
or
dec
sbbl
and
scas
push
testb
xchg
out
pop
dec
nop
inc
jae
pop
rolb
test
loope
dec
int
mov
cmp
ror
gs
jge
mov
adc
shr
add
fdecstp
mov
mov
jle
mov
jg
cmp
and
jmp
push
mov
inc
cmpsl
data16
pop
push
inc
sbb
inc
pop
pop
shrl
insb
outsl
dec
popa
mov
pop
mov
inc
pushf
lods
jb
mov
stos
outsl
div
mov
icebp
mov
movsl
call
dec
or
adc
repz
ret
dec
insl
xchg
sbb
sbb
inc
mov
dec
adc
jl
sbb
iret
shr
pusha
loope
push
lea
pop
cmp
sti
push
adc
pop
test
sbb
adc
sbb
pop
movsl
in
test
mov
or
and
scas
iret
es
pushf
jnp
mov
lea
orl
dec
mov
insb
imul
and
jb
iret
test
adc
jno
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
shl
bound
sbbl
daa
popa
addr16
outsl
js
loopne
testl
adc
js
out
sarb
js
je
movsb
movsb
fmull
rolb
dec
popa
outsb
fs
fmull
dec
jo
sub
pop
inc
iret
je
push
les
insb
sbb
jl
imul
inc
mov
es
inc
orb
add
jmp
push
and
dec
xor
jp
cwtl
pushf
or
scas
in
addb
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
pop
add
test
add
cmp
pop
add
mov
add
pop
add
add
adc
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
hlt
movb
movl
lock
